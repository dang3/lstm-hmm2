push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
es
daa
cwtl
icebp
add
or
je
popa
jle
dec
je
loopne
je
jp
jmp
sti
push
push
idivl
push
mov
hlt
dec
pop
repnz
movsl
and
jle
bound
add
imulb
mov
mov
push
cmp
clc
jp
jne
jae
xchg
mov
sti
mov
inc
imul
mov
aad
cli
out
addr16
jmp
pop
push
test
push
jmp
adc
std
jle
sahf
xor
in
xchg
mov
fidivrl
cmc
je
mov
lods
shll
inc
or
xchg
neg
cmpsb
cmpsl
jmp
fwait
add
pop
inc
insl
out
out
push
mov
adc
push
cmp
mov
inc
and
inc
add
mov
dec
fcmovu
mov
push
ss
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
out
mov
ret
cli
jg
jle
jg
jle
inc
insb
pushf
adc
les
sub
cltd
jecxz
inc
mov
dec
cmp
adc
lahf
repz
mov
xor
push
stos
in
mov
xor
mov
je
adc
shlb
in
mov
dec
mov
dec
or
fstpt
push
cmp
dec
push
xor
jg
xor
and
dec
inc
push
out
ja
and
cltd
nop
rorl
xor
in
dec
lods
xchg
cwtl
lds
lods
sbbb
lock
daa
mov
enter
xor
or
cmp
push
sbb
and
in
pushf
cmp
lods
mov
inc
std
jg
dec
push
fistpll
push
or
adc
cmpl
jb
mov
mov
cltd
sbb
mov
jne
jle
pop
leave
fldl
xor
out
sbb
xor
xor
in
aad
pop
or
jae
aas
cmp
test
adc
cmp
imul
gs
movsl
scas
aad
dec
add
lcall
lods
movsb
das
pop
lcall
mov
cmp
mov
adc
and
shll
dec
mov
ficoms
and
sbb
decb
int3
mov
popa
das
dec
jno
cli
ret
sbb
adc
or
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
push
jge
jle
jg
jle
loopne
push
or
mov
movsb
data16
mov
sbb
dec
jmp
add
add
addr16
sahf
test
stc
scas
mov
out
or
pop
lods
mov
push
lods
push
repz
out
jecxz
rcrb
xor
lahf
adcl
push
mov
aad
add
scas
push
int
stos
cmpsl
popa
shlb
les
cltd
aad
cmp
out
jg
call
stc
mov
cmp
push
bound
into
mov
inc
jae
sbb
dec
or
push
push
mov
mov
sbbb
or
adc
cmp
lcall
dec
jg
mov
loope
lcall
adc
popa
push
addl
mov
xchg
xor
mov
sbb
or
lods
loop
jae
cs
mov
stc
jle
mov
jge
adc
pop
stc
fidivrs
push
and
jmp
inc
fs
jmp
stc
sbb
hlt
or
sti
int3
push
mov
fsubrl
repz
adc
push
jge
push
push
push
pop
dec
lcall
outsl
mov
pop
xchg
lcall
cmp
push
movsl
cmp
xor
jmp
lret
xor
stos
insl
and
cltd
mov
ficompl
int
cwtl
aaa
out
cmp
xchg
or
pushf
test
outsl
mov
lret
aaa
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
dec
mov
jg
jle
add
mov
je
and
fsubl
ja
andl
jnp
outsb
pop
pop
push
inc
jae
insl
xchg
sub
pushf
or
jnp
in
lods
jmp
lock
popf
inc
mov
jge
mov
test
lds
and
mov
popa
mov
insb
jmp
and
mov
sub
xchg
add
sub
add
fdiv
inc
inc
mov
ljmp
sti
xor
aam
xor
mov
daa
nop
cltd
adcl
push
or
call
mov
or
lods
and
pop
cli
add
int3
jno
aad
adc
lret
sbb
push
out
sahf
loop
inc
rolb
xchg
sti
ss
call
aam
mov
js
fnsave
mov
cmpsl
sbb
jl
std
push
mov
cli
adc
mov
pop
pop
xchg
std
push
stc
mov
pop
clc
ss
loope
push
jp
mov
test
out
rcrb
push
test
mov
mov
stos
scas
subb
aas
xchg
cmp
and
out
into
sub
dec
adc
xchg
daa
lods
jbe
pop
test
sub
xor
pushf
hlt
mov
mov
and
xor
outsb
lcall
jmp
inc
sub
sbb
lea
sti
jp
aas
mull
lea
inc
xchg
loop
dec
aas
cmc
je
lret
push
or
add
add
jmp
push
dec
scas
out
cmpsl
add
js
jle
jg
jle
fidivs
into
mov
outsb
jae
mov
loop
and
inc
clc
jns
adc
sub
mov
adc
jo
test
inc
adc
aam
jne
and
pop
shl
fsubrp
je
call
cmp
fs
xlat
push
pop
jle
shl
push
scas
insl
mov
mov
or
pop
cwtl
out
dec
sbb
aad
test
cmp
cltd
std
enter
dec
nop
jns
loope
icebp
adc
test
mov
mov
inc
dec
cwtl
movsb
dec
add
xchg
fstl
jbe
push
push
push
cmp
lcall
sbb
lods
push
add
adc
aad
cmp
cli
or
push
inc
ja
mov
rcrl
nop
sbb
mov
pop
repz
adc
xor
jne
aam
xor
mov
clc
imul
roll
jbe
mov
scas
lods
add
sub
movsl
push
sub
xor
push
cld
cld
aas
sbb
rorb
fldpi
into
in
pop
jl
in
aad
scas
lds
cmp
xor
mov
mov
fsubrp
jecxz
mov
inc
aad
push
or
inc
movsb
mov
mov
adc
jae
xor
std
dec
out
sarb
fldl
xlat
fdivs
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
inc
push
jle
cli
jg
jle
jp
jle
sub
adc
jle
sbb
dec
dec
ja
shl
jo
cmpsb
icebp
push
fcmove
loope
outsb
mov
inc
cmpsl
out
or
cmp
outsl
and
jo
movsl
jmp
andl
nop
or
fnstenv
xchg
and
aam
imul
pop
outsb
rcll
sbb
insl
or
sbb
sarl
push
ja
and
fcoms
xchg
pop
add
inc
sub
push
or
xchg
push
movsl
inc
mov
cmp
aad
xor
ret
pop
in
lret
adc
push
ljmp
pop
add
push
xchg
lods
cwtl
cmp
jp
in
or
fucomp
js
jge
jl
fadds
inc
or
cmp
scas
sbb
xchg
pop
outsl
leave
xor
pop
and
inc
es
xor
lahf
pop
movsb
dec
rcll
cli
xchg
sbb
lret
push
or
mov
rorl
dec
in
mov
dec
ds
mov
testb
mov
mov
cld
adc
cmpsl
jno
jge
and
ret
fsubr
loop
pop
pop
and
clc
insb
xor
sbb
and
les
mov
inc
aam
ja,pn
or
icebp
mov
or
lock
pop
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
repnz
pop
jle
cli
jg
jle
push
insb
addr16
jne
lahf
xor
test
shlb
repz
pop
sbb
mov
push
shl
scas
mov
aam
ret
mov
pusha
and
ds
popa
ret
push
jl
xchg
iret
sub
lret
xor
or
sbb
sub
cmp
outsl
adc
adc
sub
aad
mov
into
js
inc
mov
lret
int3
push
mov
inc
xlat
leave
testb
cld
jnp
inc
mov
xor
cltd
in
outsb
rorb
pop
aaa
pop
icebp
adcl
in
frstor
bswap
xchg
add
sahf
out
inc
push
xor
scas
and
dec
enter
fisubrs
and
loope
in
pusha
jb
testb
outsb
imul
rcll
adc
scas
pushf
loope
sbb
add
ficoml
gs
jo
jmp
xor
sub
mov
xor
mov
enter
mov
xchg
mov
add
subb
add
enter
ljmp
lods
push
popf
fcoml
or
clc
xchg
int3
sbb
inc
mov
or
mov
jg
xchg
jo
clc
sbb
or
data16
sub
and
add
or
lods
call
movsl
xlat
shrb
cltd
cli
sub
insl
add
add
call
inc
in
movb
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
mov
shlb
pop
sbb
sbb
rcr
outsl
xor
add
testb
aaa
jmp
imul
ret
mov
call
subb
xchg
test
pop
lea
push
int3
jmp
in
inc
xchg
fidivrl
xorb
in
mov
int
xchg
inc
sub
cmpsb
mov
mov
xchg
pop
int3
cmp
xchg
ljmp
add
jae
out
xchg
data16
leave
leave
or
int3
cmpb
out
and
pushf
int3
xor
push
lds
sbb
push
dec
push
push
cmp
fldcw
loopne
or
cmp
jl
mov
sbb
mov
add
andps
pop
inc
mov
mov
loop
mov
jnp
inc
into
cmp
lcall
jmp
imull
ret
sub
in
xor
mov
mov
mov
pop
add
sti
xor
rsqrtps
loopne
mov
mov
sar
in
neg
xchg
cli
shll
daa
leave
xor
repz
pusha
or
or
test
or
jmp
jno
insb
je
pop
mov
pop
mov
xchg
cmpsl
lods
or
cld
movsb
sbb
aam
das
pop
inc
popa
fwait
cli
mov
loopne
sbb
jge
mov
or
in
sub
inc
inc
or
addl
dec
push
mov
add
jmp
cmc
dec
and
jno
push
mov
mov
add
cli
jg
jle
cmp
adc
fwait
and
lret
jp
imul
repnz
insb
mov
mov
jno
xorl
shll
or
or
insl
push
fstpl
sbb
wrmsr
fwait
repz
dec
xchg
fidivrs
repz
int3
mov
cs
stos
inc
nop
inc
mov
in
push
sti
cmp
lds
sub
lretw
mov
mov
pop
adcb
jmp
arpl
idivb
int3
frstor
ljmp
inc
jmp
mov
outsl
sahf
inc
push
adc
xchg
pop
imul
fidivrl
push
xor
push
rolb
aaa
sar
inc
ds
or
push
jno
movsl
add
les
lret
call
stos
mov
addl
movsb
out
xor
push
add
sahf
xchg
jno
pop
add
jmp
dec
jne
cmpb
movsb
push
push
lea
mov
test
inc
xchg
sub
sbb
fstpt
scas
js
clc
insl
or
fsubrl
insb
in
add
jle
icebp
mov
stos
dec
aaa
pop
cmpsl
loopne
push
cmp
sbb
cmpsb
dec
hlt
lods
aad
mov
out
and
repz
fistpll
bound
nop
js
repz
pop
xchg
insl
addb
aad
and
pmaxsw
mov
dec
fwait
and
jb
or
push
cmp
mov
adc
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
cwtl
and
jle
jg
jle
aas
lea
out
fldcw
adc
mov
inc
push
or
dec
sbb
mov
into
xor
mov
sbb
jbe,pn
xor
inc
fs
jno
mov
jne
fnstcw
das
fwait
xchg
add
andl
sbb
pushf
or
ljmp
xchg
cmc
clc
or
xor
or
jns
mov
inc
testb
test
imul
mov
adc
mov
mov
loopne
ljmp
fnsave
inc
imul
add
mov
ja
dec
sahf
jge
pop
mov
jae
aam
sub
pop
push
out
inc
mov
or
enter
pop
mov
fld
mov
subl
call
jne
ret
mov
popa
rclb
mov
out
jo
adc
inc
cmp
jbe
in
mov
or
out
xchg
cmp
mov
sbb
sbb
test
aas
dec
mov
fs
add
and
cwtl
cmp
jbe
xchg
test
jns
cmp
pusha
mov
stos
mov
out
stc
adc
dec
stc
push
jb
xchg
fucomp
fsubrl
jno
mov
repnz
inc
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
jge
ficoml
cli
jg
jle
adc
pop
push
movsb
iret
in
mov
xor
std
arpl
xchg
int3
xchg
xchg
jle
xlat
imul
cmp
lods
mov
das
pop
dec
cld
mov
outsb
test
lcall
inc
into
sbb
push
loope
mov
mov
dec
or
popa
mov
pop
icebp
jmp
das
mov
cmpsl
xor
sub
jg
outsb
sub
ret
movl
cmp
ret
outsb
in
mov
dec
dec
mov
ret
xor
jg
cmp
or
adc
xor
je
push
lea
push
add
mov
adc
mov
ds
popf
inc
rol
adc
cli
mov
mov
cmpsb
lret
les
mov
ret
fistpll
adc
mov
cmp
in
outsl
insl
scas
xchg
add
or
mov
mov
jg
movsl
fistps
data16
enter
and
and
xchg
or
cmp
and
sub
rcll
push
jmp
push
pop
adc
fdivs
sub
jnp
pop
cwtl
xchg
fcomi
mov
lds
push
fldcw
and
nop
in
or
xor
rorl
int
cmc
add
jb
pop
jecxz
xchg
push
dec
cmp
in
int3
aam
add
sbb
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
jle
clc
dec
mov
jg
jle
pop
stc
xchg
stos
sbb
adc
and
or
jecxz
jl
adc
sub
sub
jbe
push
imul
rorl
cli
pop
xchg
pusha
sarl
fsubs
int
mov
repnz
stos
inc
insb
xor
into
hlt
ja
mov
inc
add
dec
stos
divb
jno
movsb
out
stc
mov
out
push
sub
ja
add
shrl
xchg
pop
rcrl
push
adc
mov
sbb
inc
xor
jne
dec
popf
cs
shrl
inc
pusha
mov
push
push
pushf
push
push
sbb
jnp
lahf
push
sub
and
scas
jmp
mov
jno
mov
xchg
movsl
movsl
aam
movsb
push
mov
incl
sub
fs
idivb
pop
outsl
in
mov
pop
test
push
push
push
sub
aam
imul
test
mov
out
cld
sub
xor
jbe
fldl
sub
mov
jge
in
mov
lea
ljmp
cli
lcall
jecxz
xor
std
test
aam
xorb
mov
rcrl
add
jg
popa
das
xor
push
jmp
sbb
lock
dec
and
icebp
jno
mov
incl
lret
clc
adc
pop
or
fwait
pop
and
dec
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
xchg
lea
cli
jg
jle
ss
mov
ljmp
sub
ret
andl
rcrb
ret
pop
clc
lock
decb
mov
or
in
mov
cmpb
sub
xor
repz
pop
jle
stos
push
ret
xchg
adc
push
mov
rol
aas
int
push
sub
xchg
sbb
mov
sub
inc
push
dec
or
lods
jnp
sbb
cmp
bound
jno
es
lds
arpl
jmp
mov
hlt
xchg
cmpsb
in
pop
loopne
cli
dec
and
fcmovu
fwait
mov
cwtl
push
cmp
fstl
fsubp
sub
sarb
loope
cmp
or
mov
lret
aad
das
in
pop
out
dec
dec
out
xchg
pop
adc
xchg
xor
pop
jp
test
fcmovu
jns
stc
mov
mov
aad
cmp
xchg
mov
or
push
sbb
xor
jb
add
jecxz
xchg
xchg
imul
dec
aaa
lods
xor
mov
not
mov
mov
cmp
test
repz
icebp
pop
fstps
test
mov
or
popf
jns
scas
pusha
insl
dec
and
pop
jnp
shlb
lcall
push
jne
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
pop
stos
push
xchg
stos
or
jle
dec
stos
sbb
gs
dec
mov
ret
repz
mov
mov
test
sub
push
stos
stos
dec
and
ret
push
adc
mov
push
push
sbb
call
jo
xchg
inc
cwtl
js
enter
mov
cwtl
loopne
sub
js
mov
scas
lret
xchg
icebp
xchg
shrl
pop
aas
mov
mov
ja
loopne
inc
jae
sbb
adc
pop
sbb
pop
icebp
push
jle
pop
mov
popf
fldenv
mov
mov
push
lock
push
xchg
aad
repnz
push
add
js
add
subb
mov
pusha
aad
imul
cmp
or
xchg
push
gs
addr16
xchg
loopne
dec
aam
cwtl
mov
hlt
push
jne
imulb
aad
scas
into
mov
stos
lcall
mov
mov
or
and
or
adc
int3
mov
movsb
outsl
rcrl
jns
cmpsb
ljmp
mov
dec
pop
fcmovu
lods
nop
icebp
iret
fsts
std
pop
dec
xor
cmp
jp
jg
push
and
aam
pop
shr
pusha
cld
dec
stos
test
arpl
cmpsl
xchg
rorb
lock
xchg
bound
clc
mov
cwtl
int3
inc
lea
dec
aaa
sbb
xchg
xchg
cmp
adc
sbb
mov
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
imull
jle
cli
jg
jle
xchg
sbb
xchg
out
inc
jle
iret
jno
es
ja
mov
sub
sti
mov
inc
sbb
cwtl
sbb
or
cwtl
cmp
xor
mov
xor
and
adc
push
fwait
pop
fdivs
sub
mov
stos
fstps
cmpsl
or
jae
test
bound
sub
jp
outsl
fs
sub
dec
push
mov
enter
jp
out
or
icebp
and
mov
pop
xor
popf
adc
dec
or
arpl
fwait
inc
jmp
xorb
loope
inc
dec
mov
or
pop
xor
cs
les
push
popf
pop
aaa
jo
js
repz
push
dec
aad
je
pushf
into
add
into
dec
jge
mov
jp
jecxz
push
cli
mov
xor
xchg
adc
or
cmp
jb
clc
cmpsb
xor
inc
cmpsl
xor
mov
shrl
inc
cmc
gs
xor
xchg
jne
lret
out
cmpsl
cmp
mov
dec
das
jl
pop
mov
pop
stos
andl
push
fsubrs
in
inc
push
cmp
gs
jecxz
ret
test
decl
sub
add
and
stos
inc
in
cmp
shr
cmpsb
mov
das
lcall
and
mov
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cltd
xchg
mov
jle
cli
jg
jle
addr16
cltd
xchg
lcall
mov
dec
dec
ds
sbb
arpl
xchg
inc
mov
gs
jmp
push
cmc
sub
outsl
jge
sub
pop
test
jg
or
loopne
cs
loop
sub
mov
movsl
push
xorl
icebp
imul
push
add
lea
in
cli
push
push
push
fdivs
xchg
xor
fucomi
repnz
outsl
scas
lods
movsl
lds
lret
stos
ja
pop
aaa
dec
stos
ret
cmp
pop
fisubs
xchg
sti
or
mov
jns
pushf
sub
std
int
xchg
cmp
inc
stos
mull
std
scas
fisubrs
iret
sub
push
jmp
dec
jns
xchg
outsb
ret
push
je
scas
push
or
dec
pushf
pop
lret
xor
in
cmp
mov
dec
pop
dec
mov
loope
cltd
fldt
lret
imul
mov
add
in
outsl
lds
xor
mov
cs
mov
popf
loope
push
cmp
sahf
cmp
xor
mov
xchg
popa
scas
xchg
icebp
movups
out
pop
dec
adc
mov
push
sarl
adc
sub
and
rcrl
lods
or
pop
out
jne
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
cmp
jle
cli
jg
jle
nop
push
xor
mov
push
sub
mov
mov
and
add
push
inc
loopne
in
and
jl
test
into
mov
andb
neg
repz
in
dec
cmp
lcall
ret
sbb
push
mov
and
mov
lea
cwtl
mov
insb
xor
sub
sbb
cli
ficompl
push
or
in
fdivp
lock
insb
jnp
mov
jg
shl
loop
cmp
add
jnp
imul
aam
mov
or
int3
or
andl
dec
jnp
jae
into
push
sbb
mov
xor
dec
pop
dec
mov
sbb
mov
fdivrl
out
inc
cmc
xchg
jae
xchg
pop
outsl
xchg
mov
jmp
mov
lahf
rorl
pop
aam
pop
or
mov
out
sbb
push
adcl
cmp
fnstcw
pop
shld
fadds
pop
movsl
out
jge
dec
scas
and
push
lds
push
push
jb
mov
mov
aad
shrb
push
jne
insl
shr
not
pop
das
add
sbb
add
and
test
inc
cwtl
pop
dec
xchg
push
in
or
push
mov
xor
sbbl
sbb
repnz
in
jge
rol
jbe
pop
hlt
push
push
xor
adc
xor
mov
fidivrl
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
rcl
test
cli
jg
jle
aas
es
mov
insl
adc
adc
pop
sbb
jmp
or
push
lcall
or
push
repnz
andl
arpl
xchg
jns
lock
jno
pop
add
xor
sub
add
icebp
push
outsb
ss
fistl
dec
jns
fnsave
cmp
mov
pop
repz
ret
mov
aas
pcmpgtw
test
xchg
shrl
popa
mov
orb
rorl
adc
std
lods
xor
call
push
jb
mov
mov
xchg
mov
and
int
sbb
jl
out
cmp
test
insb
xchg
cmp
dec
mov
cmp
test
or
or
mov
inc
push
jb
jg
push
add
insb
sbb
dec
xor
gs
adc
in
and
and
cmp
lret
daa
scas
das
js
xchg
aas
inc
iret
dec
addb
cmpb
adc
mov
jle
aas
lahf
inc
adc
add
loopne
jle
jb
outsl
fcompl
xor
pop
test
push
xor
jl
lret
adcb
enter
fisubrl
inc
cmpsb
movsl
ss
jg
sub
aas
sub
push
cmp
and
int
jge
incl
dec
out
sbb
push
push
and
loop
cmpsl
sub
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fsubs
pop
jl
jle
sarb
in
add
je
or
sbb
aam
jle
cltd
stos
jl
stc
add
loope
mov
int3
int
lds
push
or
push
pop
mov
sbb
popa
mov
inc
and
and
bound
or
pop
rcll
dec
jbe
cmp
mov
pop
in
dec
xchg
scas
sbbb
cmp
repnz
cmp
pusha
iret
test
sbb
sbb
aaa
gs
das
jp
push
mov
mov
mov
adc
mov
popf
push
fwait
lds
inc
in
pushf
pushf
jg
test
mov
jecxz
test
xor
ja
orb
pushf
dec
jp
pop
push
mov
push
dec
mov
push
push
aad
pop
sub
mov
xor
lret
jno
jne
cmpsb
popf
jmp
dec
mov
dec
jp
hlt
adc
imul
inc
add
inc
xchg
ret
scas
insb
cs
popf
out
dec
xor
cli
mov
ljmp
sub
lret
jge
dec
mov
cmp
mov
hlt
or
pushf
dec
push
mov
or
data16
adc
push
mov
or
iret
out
arpl
push
dec
out
cmc
or
mov
ja
in
lret
xor
cmp
std
or
sbb
push
scas
mov
stos
fwait
stos
mov
cmp
pop
mov
and
jecxz
xor
jbe
xchg
sub
pop
mov
sbb
fisubrs
push
mov
cmp
xchg
stc
scas
inc
dec
adc
inc
jle
mov
pop
add
mov
sub
movsb
xor
mov
lds
jnp
pop
repz
lret
lcall
xor
cwtl
inc
loope
stos
mull
inc
jo
mov
ror
xchg
inc
insb
adcb
pop
push
pop
jb
jecxz
cmp
int3
push
cmp
movsl
into
into
test
lods
fildl
mov
jmp
mov
in
pusha
adc
repnz
lods
mov
inc
out
push
jle
shlb
jb
imul
daa
xor
sarl
push
push
arpl
inc
add
mov
mov
aad
ds
stc
and
fmull
sub
or
insb
test
and
scas
mov
dec
pop
aad
xchg
fdivrs
test
hlt
mov
mov
jmp
out
or
cltd
or
add
mov
repnz
sub
xchg
leave
dec
cmp
sbb
mov
mov
in
lods
mov
sub
fmull
loopne
dec
sti
push
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
adc
loopne
adc
pop
jl
jle
cmp
dec
das
xor
stos
scas
add
rclb
repz
movsl
pop
sbb
arpl
test
sub
or
pop
adc
jb
mov
mov
and
ret
test
shl
xor
mov
push
cld
cli
or
ret
or
inc
jns
xchg
scas
xchg
outsb
cmc
es
stos
xchg
adc
jg
daa
scas
repnz
and
sbb
xchg
jbe,pn
sbb
cmp
outsl
or
xchg
adc
sahf
or
je
lods
mov
jge
jmp
pop
mov
add
dec
int
or
or
fnstsw
lea
mov
lods
add
mov
and
push
pop
fucomip
fsubr
and
add
mov
adc
add
add
movsl
daa
add
and
subl
jb
add
sbb
test
mov
pop
daa
adc
xorb
lods
push
fbld
imul
fcmovne
cmpsb
xchg
leave
mov
mov
mov
movsl
loope
sub
aam
sub
outsb
push
pop
lret
pop
int3
das
stc
mov
mov
mov
punpckhbw
lahf
push
sub
cmp
hlt
pop
sbb
cmpsl
fcom
sarl
jl
mov
lret
jno
daa
or
or
pop
mov
or
adc
lret
push
daa
out
dec
push
mov
pop
movsl
nop
in
xor
xchg
mov
aas
movsb
xlat
fs
filds
daa
lcall
fstps
xor
fwait
sarl
xchg
push
pop
mov
push
xor
sbb
mov
add
cmp
inc
add
cwtl
pop
lock
outsl
sahf
mov
jg
test
cmp
xchg
and
loope
aam
aad
or
push
aad
dec
or
lcall
pushf
or
jb
mov
rol
inc
lods
leave
stos
mov
hlt
iret
insl
scas
xor
mov
mov
xchg
and
aad
pop
dec
subl
sub
add
xchg
dec
insl
and
out
push
ja
adc
push
outsl
lock
pop
arpl
pop
clc
fsubl
insl
inc
lcall
imul
movsb
orl
fcom
push
rol
sbb
movsb
push
xchg
test
dec
cmpsb
jnp
cmc
and
cmpsb
rcll
bound
addr16
mov
or
jns
mov
cs
ficoms
mov
mov
xchg
dec
dec
jno
adc
jbe
imul
add
out
clc
adc
bnd
rolb
push
pusha
pushf
out
lret
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
ja
aas
or
jle
pop
jl
jle
push
cmp
mov
leave
mov
int3
cmp
sbb
fsubl
lcall
pop
jmp
push
sahf
in
pop
or
adc
push
jp
jge
out
adc
mov
jo
add
inc
add
mov
and
pushf
ljmp
dec
sub
inc
outsl
fistps
dec
push
pop
mov
inc
ds
or
test
push
pop
dec
inc
mov
mov
pop
shll
scas
outsl
xor
mov
dec
jmp
fwait
and
mov
and
cld
nop
adc
out
jns
cmp
sbb
xor
sub
out
and
rolb
pop
lods
jae
stos
fldcw
pop
adc
aaa
or
into
add
lock
pop
sbbb
call
add
pushf
dec
and
sub
dec
fs
inc
pop
pushf
aad
lahf
sbb
or
rclb
add
frstor
xor
ds
int
push
cmp
outsl
imull
jae
movsl
and
loop
fwait
sbb
jno
test
jae
test
mov
mov
xlat
xor
rcl
ljmp
icebp
push
xor
sti
nop
lods
mov
mov
inc
pushf
xchg
cmp
popf
ljmp
nop
dec
sahf
adc
mov
adc
mov
lock
popa
dec
call
lea
movsb
stos
movsl
push
dec
xchg
pop
in
sub
mov
imul
and
out
mov
inc
loope
or
xchg
push
movsl
in
aaa
mov
inc
addl
dec
fadd
pop
xchg
fimuls
push
inc
cld
xchg
jnp
es
cmp
mov
jp
test
in
push
mov
mov
mov
jno
fdivrl
adc
dec
sub
pushf
xlat
jg
jecxz
ljmp
mov
mov
or
cmpsl
loope
mov
out
adc
pushf
cmp
pop
roll
mov
mov
mov
inc
pop
add
jl
xchg
test
xchg
push
pop
outsb
jbe
sub
daa
bound
sub
ss
add
les
jb
test
cmpsb
fld
gs
stos
or
aaa
pop
and
xor
pop
cs
xor
jno
mov
mov
and
cmp
mov
ja
push
mov
dec
out
xchg
sahf
mov
jle
cs
pop
pop
je
ret
out
pop
mov
aas
je
popa
lcall
in
inc
test
inc
fwait
fwait
cltd
and
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
in
xchg
repz
inc
arpl
lods
pop
cmp
inc
fwait
and
not
push
sub
jae
xchg
in
lea
xchg
popl
xchg
mov
fwait
out
fs
movsl
cmp
dec
aam
test
or
outsl
ljmp
dec
jno
out
lds
lret
inc
sub
inc
daa
push
pop
pop
ds
mov
sbb
and
test
mov
sti
daa
add
fists
jl
nop
dec
xchg
xchg
pusha
dec
scas
stos
movsl
mov
shrb
mov
jecxz
rorb
lret
inc
sub
and
das
aaa
inc
dec
int3
scas
jno
shrl
scas
fcomi
es
jecxz
cmpsb
loopne
xorl
jmp
dec
fimull
test
es
testb
mov
add
mov
dec
call
sub
testb
iret
or
int3
dec
mov
addr16
xchg
addl
push
out
mov
insl
lcall
mov
mov
add
lock
jne
popf
sbb
mov
mov
mov
mov
in
test
jmp
cld
jecxz
pop
adc
push
xchg
jle
movsb
enter
adc
or
xchg
push
push
mov
mov
mov
stos
adc
jae
ret
enter
mov
adc
and
clc
pop
sub
mov
dec
clc
aam
pop
iret
jp
addb
popf
jne
or
popa
inc
push
lret
cmp
ss
mov
push
pop
cmp
les
push
fs
jo,pt
jns
dec
test
je
sub
pop
in
jns
in
lock
dec
pop
popa
repz
inc
fidivl
repnz
cmpsl
fdivl
xchg
xor
lret
fcomip
imul
adc
mov
aad
loope
ffree
std
shlb
xchg
cltd
add
test
mov
imul
mov
inc
ljmp
mov
adc
add
push
gs
jno
jbe
mov
adc
fdivl
out
cmpsb
rolb
movsl
jo
adc
mov
stos
pop
mov
or
daa
out
mov
sbb
cmp
fisubl
lea
push
dec
ja
movsl
xor
or
cmp
sbb
mov
sti
out
shl
adc
mov
xchg
shlb
sbb
and
and
cltd
pop
das
aaa
fnsave
in
rorl
addr16
mov
sbb
jnp
lret
dec
mov
mov
sub
aaa
mov
jmp
test
xchg
mov
xlat
push
or
mov
jmp
ss
xchg
jl
cmpsl
insb
cmp
sbb
xor
movsl
cmpsl
push
scas
stc
dec
dec
xor
jmp
add
dec
popa
jno
jne
xor
jle
popa
dec
addr16
sbb
pop
jl
jle
mov
test
pop
adc
pop
cwtl
punpckhwd
frstor
je
dec
xchg
dec
inc
loope
fildl
es
ja
jnp
sub
notl
mov
inc
add
ja
sahf
addr16
mov
jnp
sbb
imul
sarl
lea
add
sbb
inc
pop
stc
int3
add
add
repz
jnp
sbb
addr16
stc
js
in
xchg
dec
pop
cmp
xor
loope
nop
aas
insl
iret
scas
cmp
mov
xchg
sbb
mov
fwait
ss
mov
mov
adc
jo
icebp
lret
movsb
jo
mov
adc
clc
mov
push
notb
adc
and
pop
push
test
fistl
flds
mov
ja
push
movsl
and
xchg
jge
dec
push
mulb
mov
push
jmp
xchg
adcl
inc
jle,pn
nop
cld
std
dec
push
pop
loop
mov
mov
jl
inc
icebp
pop
test
mov
and
shlb
daa
shrl
push
sub
in
and
ds
cvtps2pi
imul
or
popa
pop
icebp
roll
lahf
stc
js
xchg
lea
enter
mov
push
outsb
mov
mov
xchg
mov
mov
mov
ja
test
xchg
data16
xor
clc
cmc
push
jo
cwtl
out
cmpl
xor
push
je
pop
push
repnz
cmpsb
cmp
fdivrl
pop
xchg
cmpsb
call
adc
sar
adc
ss
ja
sub
fldpi
adc
mov
push
or
inc
xor
add
and
push
pop
and
push
movsl
scas
dec
lds
and
pop
filds
sub
adc
inc
xchg
mov
hlt
ficompl
inc
cmc
mov
mov
jl
push
or
fcoml
fwait
test
insl
outsl
push
and
jg
aas
data16
xor
fidivl
pop
or
jb
sub
testl
mov
js
mov
fisttpl
testl
and
mov
jo
pop
sahf
loope
jmp
lock
aam
mov
sbb
and
inc
cmpl
add
adc
cmpsb
fdivrl
cmpl
out
xchg
jge
scas
aaa
mov
scas
xchg
add
xchg
and
or
add
fldlg2
gs
arpl
inc
cmp
mov
mov
push
dec
xchg
cmp
sbb
clc
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
cmp
jge
mov
jl
jle
or
aas
add
push
notl
pop
push
out
fs
jg
mov
movsl
mov
adc
aam
inc
sbb
push
push
pop
adc
test
arpl
and
out
mov
sbbb
lcall
and
iret
nop
ret
pop
sub
lods
sub
inc
outsb
fcoms
adc
push
mov
and
and
xchg
ja
pop
sbb
fsubl
xlat
js
add
mov
ja
adc
lahf
xlat
sahf
inc
leave
dec
js
and
sbb
mov
mov
sbb
xor
shrb
jecxz
or
mov
add
dec
mov
shll
inc
adc
repz
clc
outsb
aas
mov
fdivrp
ret
loop
repz
clc
mov
dec
arpl
jo
cmpsb
cli
push
cltd
inc
loope
popf
in
cli
icebp
leave
jecxz
xor
lea
cmova
mov
xchg
lods
fisubrs
pop
adc
roll
ror
sbb
cmp
cmpsw
mov
jle
lret
dec
fadds
rcrl
sub
add
cmp
push
into
ljmp
or
pop
jb
xor
fsubrp
fbld
dec
nop
leave
mov
pop
movsl
adc
sub
stos
test
insl
es
xchg
push
in
cmp
imul
sbb
and
pop
mov
subl
fmulp
data16
outsb
xchg
fcoms
popf
mov
jo
out
and
pop
mov
xchg
add
fdiv
in
sbb
or
sub
jbe
jp
push
mov
setae
lods
mov
inc
es
leave
mov
fdivr
lcall
pop
fadd
fwait
xrstor
lea
lods
mov
sub
cwtl
mov
lds
dec
mov
fld
xor
sarb
push
jmp
addr16
sbb
shlb
push
cmp
out
sub
push
movsb
pop
mov
pop
dec
push
leave
lods
lods
fcoms
fldenv
push
jmp
lds
movb
cltd
orb
xchg
rcrb
lock
mov
int3
ja
push
call
arpl
sbb
push
mov
pop
into
lods
popf
gs
mov
cmp
push
pop
xchg
leave
mov
movsl
cmpsb
out
scas
sahf
insb
jnp
inc
adc
xor
dec
cmp
mov
jnp
fwait
rcll
mov
mov
xchg
aad
or
ljmp
lds
push
dec
adcl
and
add
rorb
repz
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
pop
adc
mov
jl
jle
hlt
cmpsl
push
repnz
sbb
mov
fwait
test
cmp
ja
mov
insb
sbb
mov
jge
or
adc
jae
rorl
popa
fwait
inc
sub
out
xchg
jno
rorb
and
loopne
cmp
loope
popf
jae,pn
add
push
ret
hlt
adc
inc
sti
xor
xor
pop
repnz
cmp
fstps
cmp
cwtl
enter
idivb
fisttpl
loop
sub
fildl
mov
sub
push
and
rclb
in
pop
add
cmpsl
xlat
je
icebp
bnd
sbb
lea
xchg
sub
movsl
xchg
mov
mov
daa
jecxz
fcom
dec
jne
in
pop
mov
adc
mov
movsl
inc
dec
mov
jp
mov
in
inc
subl
orb
fldt
insl
mov
pop
scas
mov
stos
adc
mov
inc
pop
xchg
xchg
xor
inc
scas
aaa
fildl
mov
sub
mov
sub
pop
ret
or
mov
icebp
jle
std
cmp
xchg
outsb
cwtl
xchg
in
jp
sahf
fstps
sub
aas
sub
cmp
je
sbb
mov
loopne
jo
push
stos
movsl
xchg
mov
xchg
test
repnz
rcrb
xor
popa
mov
or
les
test
fimull
popa
idivb
ficomps
iret
testb
int3
icebp
mov
clc
xchg
repz
pop
sahf
pop
aad
jno
mov
lcall
cmc
inc
jge
dec
jbe,pt
dec
mov
faddl
mov
inc
in
std
fisubs
xchg
out
pop
les
cmp
sbb
push
pop
stos
int
movsb
jae
jmp
jmp
in
sbb
fptan
jno
xchg
repz
jae
push
stc
ds
cs
lahf
incb
ret
mov
sbbb
enter
stos
ss
jg
movsl
lret
xor
in
sub
int
outsb
cwtl
pop
iret
scas
or
retw
dec
rorl
cwtl
mov
lea
lea
jmp
push
lcall
mov
gs
in
stos
into
mov
arpl
mov
mov
gs
inc
add
adc
mov
xor
imul
mov
and
xor
jl
fisubl
dec
pushf
mov
dec
dec
cli
int3
adc
rcrl
xchg
pop
and
negl
xor
adc
adc
shrl
add
mov
pop
aad
push
aas
idivb
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
xchg
insb
test
pop
jl
jle
das
or
in
call
rorb
mov
adcb
xor
xchg
ja
inc
aas
push
mov
cmp
add
jb
cmc
scas
or
ds
add
inc
scas
daa
dec
adcl
aam
lret
pop
mov
pop
lret
movsb
mov
mov
pop
cmpsl
xchg
cmp
orb
mov
push
loopne
pop
add
lock
add
fidivs
add
pop
aas
iret
insb
xor
adc
sbb
test
loop
leave
ret
insl
outsb
repz
testl
sbb
movsb
movsl
jne
inc
lock
popa
inc
out
cld
sbbl
cmpsl
jno
pop
mov
sti
dec
test
fsqrt
push
lret
out
xor
cld
aaa
loop
jmp
les
shr
add
xchg
pop
int3
imul
scas
in
ja
aam
cmp
outsb
cld
pusha
mov
ja
ret
dec
mov
pop
loopne
out
lock
mov
xor
lea
dec
cmp
add
fdivrs
adc
inc
mov
inc
xor
out
adc
leave
adc
call
sub
je
stos
inc
dec
push
repz
xor
push
ja
add
jb
fs
xor
xlat
les
sbbl
aad
add
sarl
in
xor
scas
jge
lret
loopne
cwtl
int3
jg
add
pop
decl
popl
sbb
data16
icebp
pop
pop
insl
in
xor
outsb
mov
inc
pusha
ret
jecxz
xchg
outsl
and
inc
aad
aas
fwait
push
out
adc
insl
iret
scas
cli
notl
cmp
mov
rolb
cmpsl
rcll
mov
xor
jne
out
lock
mov
lea
pusha
push
sar
scas
mov
push
movsl
sub
inc
std
sub
mov
fbld
sub
ja
outsb
xlat
push
xor
mov
dec
inc
xchg
push
test
popa
mov
loopne
sbb
jae
movsl
jo
and
jns
pop
mov
lahf
xchg
daa
sub
inc
call
sbb
pop
push
nop
pop
fwait
xor
jl
insl
or
inc
and
lods
add
pop
jmp
and
adcb
ss
insb
fimuls
jp
test
test
pop
mov
negl
cli
ficoml
or
sub
push
jge
sub
sbbb
data16
ds
pop
jno
rcrl
push
xor
subl
dec
xor
sbb
push
add
je
sbb
shlb
jg
push
cmp
fmuls
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
jmp
js
imulb
jle
jl
jle
mov
add
pop
rclb
or
in
xor
out
sub
xchg
icebp
gs
or
xchg
test
jecxz
int3
mov
dec
xchg
addr16
gs
popf
push
notl
nopl
outsb
data16
inc
push
fucomp
sub
jne
jg
pop
mov
mov
insb
bsf
dec
lods
add
inc
outsl
add
xorb
fldenv
sub
bnd
jno
aaa
jp
lods
cmp
fs
adc
loope
or
and
dec
mulb
push
testl
xor
int
add
push
or
stos
fcompl
mov
das
adc
data16
adc
add
add
inc
mov
jb
or
lods
xor
sbb
push
inc
xlat
js
mov
mov
lods
mov
lahf
cmp
xor
and
ficomps
lcall
sarl
mov
pop
dec
inc
arpl
cmpsb
ljmp
and
sbb
fistpll
jno
ja
mov
out
fsubs
movsb
jge
rcrl
xchg
xor
or
mov
mov
pop
test
fnstenv
jno
sahf
mov
outsb
sbb
xchg
cld
dec
sub
or
dec
dec
pop
inc
aam
or
cmp
bound
pop
xor
inc
dec
cli
mov
mov
scas
cmp
das
inc
xchg
adc
and
mov
xchg
leave
das
push
test
xor
pop
or
jnp
or
fistl
imul
movsl
push
in
aad
mov
scas
outsb
incl
filds
frstor
or
and
xor
adc
test
shl
movsb
sbb
mov
mov
mov
pop
subb
adc
test
and
lock
dec
hlt
aaa
xchg
std
std
xor
andb
ret
jnp
xchg
test
mov
pop
inc
cmpsb
xlat
stos
sbb
add
jb
xchg
hlt
jae
into
mov
in
insb
ror
add
pop
pop
sub
cmp
addr16
dec
sub
mov
out
fimuls
scas
rorl
inc
sahf
inc
and
in
test
push
out
mov
sbb
ret
scas
jge
lea
sbb
inc
jl
stos
js
cmp
dec
stc
xor
cmp
fiadds
pop
lods
inc
cmp
scas
nop
xor
lahf
test
cmp
mov
xor
int3
int3
adc
sti
aam
jns
cmp
and
push
jg
jno
lret
cmp
adc
aam
xor
add
test
and
add
xor
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
js
shrb
jle
pop
jl
jle
mov
cmc
mov
fidivs
mov
pop
jnp
sub
xchg
or
out
and
mov
pop
cmp
dec
nop
jmp
fucom
fcoml
xchg
lahf
outsl
jle
adc
hlt
fimuls
pop
test
or
shl
mov
jmp
xorl
mov
inc
and
cli
stc
data16
add
popf
inc
push
sti
stos
pop
out
jmp
mov
mov
insb
push
adcb
mov
dec
mov
in
mov
mov
jp
jl
adc
movsl
out
nop
sbb
jle
xchg
mov
sbb
js
adc
mov
xchg
repnz
hlt
mov
nop
movsl
cmp
lds
out
mov
fisttps
mov
and
leave
lock
sbb
test
mov
add
pop
and
pop
xor
dec
pusha
xor
xchg
mov
mov
mov
mov
sti
out
aad
divl
in
add
lods
jo
add
ret
pop
mov
js
inc
inc
aas
cmp
or
sub
das
mov
ret
loopne
jecxz
jg
bound
xor
mov
negl
inc
jmp
out
inc
insl
cmp
inc
lds
add
and
pop
sbb
shr
les
div
dec
cli
mov
xchg
movsb
jns
loope
jb
or
sub
negl
stos
cmpsb
lret
test
mov
add
mov
pop
mov
mov
in
mov
ja
push
add
jmp
pop
push
lds
jns
out
enter
push
aaa
clc
cmp
test
aam
mov
rcll
push
mov
stc
mov
jge
mov
xchg
sbb
and
xchg
int
or
push
aam
mov
mov
cli
fsts
mov
int
ret
dec
aas
xchg
sarl
std
push
pop
movl
mov
lock
paddw
rcll
adc
in
aas
out
xor
and
aas
cmpsl
add
cld
mov
les
daa
jg
inc
push
cmpl
xchg
shr
mov
hlt
inc
xor
mov
js
mov
inc
and
xchg
mov
adc
js
icebp
call
or
das
and
or
popa
outsb
in
arpl
dec
mov
xor
add
cld
jno
xor
sbb
out
insl
cmp
mov
rcr
sub
xlat
in
pop
outsb
int3
dec
call
mov
inc
mov
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
fwait
jecxz
cmp
jle
sub
jle
inc
iret
imul
inc
bound
in
adc
push
inc
dec
rol
call
and
iret
mov
ljmp
in
push
movsl
fcmovb
inc
lret
mov
push
arpl
insl
int3
lret
ljmp
mov
scas
addr16
and
jge
popa
dec
call
movsb
fdivs
lods
pop
mov
mov
arpl
push
std
jo
iret
icebp
pop
pop
mov
inc
xor
adc
outsb
fsubrl
dec
sub
mov
lock
sbb
cld
xchg
out
out
ja
mov
icebp
sbb
sbb
scas
cld
adc
or
adc
scas
imul
leave
pusha
fmull
stos
cmp
adc
or
in
push
imul
test
inc
insl
mov
inc
enter
movsl
cld
and
pop
pop
into
cli
loopne
insb
shl
lds
dec
cmp
scas
call
push
sbb
sbb
popf
out
pushf
xchg
sub
or
in
cmp
int
pop
fnop
sub
pop
ret
xor
rorl
push
outsb
pop
push
dec
in
aaa
fimuls
rorb
inc
pop
mov
mov
and
decl
movsl
inc
cmp
mov
jp
sub
mov
mov
sbb
push
jecxz
mov
mov
ds
sarl
inc
push
sti
out
and
inc
repnz
and
sub
push
push
jmp
aam
leave
xchg
imul
cmp
xor
js
fs
lods
jecxz
xchg
leave
fisttpll
xchg
dec
notb
sub
mov
push
rcl
cmc
push
call
xor
les
mov
sub
cmc
in
cs
push
adc
xor
xchg
je
xlat
shr
inc
cmp
push
cltd
into
test
and
mov
bound
daa
lods
push
pop
mov
mov
mov
push
mov
icebp
pop
jb
jge
ret
sahf
and
xor
or
ficomps
or
push
sbb
inc
xchg
sbb
cmc
pop
sarl
and
mov
loopne
lahf
push
shlb
aam
fdivs
add
sbb
cmpb
mov
movsb
shll
xchg
mov
inc
mov
dec
or
cmp
stos
pop
jg
pop
bound
pop
cwtl
inc
aam
daa
div
mov
mov
sbb
push
inc
test
mov
stos
lret
repz
mov
fisubrs
cld
jle
decl
pop
push
pop
push
lcall
scas
js
clc
adc
mulb
cltd
das
add
push
lcall
dec
mov
cltd
jb
push
mov
cmpsb
cmpsb
jnp
imul
mov
xor
or
shll
in
cmpsl
cmpsb
pop
xchg
in
pushf
rcrl
test
and
lock
xchg
adc
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
popf
add
sbb
mov
xabort
mov
loop
and
stc
divb
jp
sbb
pop
push
js
inc
push
xor
sbb
xchg
fwait
lock
aam
loopne
cmc
sti
mov
xchg
mov
mov
test
adc
mov
mov
icebp
rcrl
scas
data16
pop
and
mov
int
jo
outsb
out
clc
std
cmpsl
cmc
movsb
jg
push
fnstenv
mov
cli
inc
and
push
mov
add
test
int
lods
jle
cmp
fs
lret
pop
pop
leave
stc
jb
icebp
cmp
movsl
les
leave
divb
cmp
fsts
mov
jno
mov
out
mov
push
mov
push
adc
pop
and
leave
adc
push
mov
loope
ja
add
xlat
pop
iret
lret
hlt
jae
test
outsb
cmp
dec
enter
in
pop
ret
lahf
les
stc
inc
outsb
push
or
mov
fldcw
sub
nop
inc
lock
fldt
aaa
inc
add
adc
pop
iret
or
icebp
fisubl
add
cmp
mov
push
hlt
mov
mov
lcall
insl
out
dec
fimuls
sarb
fstpt
idivb
out
jnp
std
sub
inc
call
dec
jbe
js
jg
or
nop
pop
mov
cmc
imul
loop
dec
or
cltd
repnz
pextrw
cld
iret
mov
loope
scas
out
imul
neg
int
and
mov
xchg
iret
mov
stos
mov
ljmp
ret
pop
xor
pusha
mov
push
and
mov
pop
lcall
add
add
cli
add
or
popa
jns
arpl
adc
sub
call
mov
mov
adcb
pop
pop
xor
lds
movsb
mov
ret
mov
add
and
mov
jbe
fistl
test
lock
add
mov
inc
mov
sarl
or
push
lret
inc
push
ret
sub
ljmp
sti
loope
hlt
sti
call
jbe
clc
faddl
pusha
popf
sbb
test
xlat
out
sarl
mov
scas
mov
pushl
aas
adc
mov
outsb
mov
xchg
cmp
push
aas
xor
mov
in
lret
and
je
mov
add
in
mov
int3
ss
dec
outsl
cmovs
popa
push
comiss
or
int
ja
dec
loopne
imul
iret
sahf
mov
test
call
fimull
stos
test
or
mov
pop
xchg
adc
sub
fistps
data16
call
sbb
and
sbb
leave
mov
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
fists
in
sub
cli
dec
and
or
rolb
out
faddl
push
mov
xchg
aad
sub
fisubl
lcall
leave
xchg
add
xor
and
jecxz
mov
jmp
sub
rclb
sub
iret
xchg
jne
jno
rcrb
jg
adc
mov
shrl
cmc
rorl
cmpsl
sub
popf
mov
int3
test
dec
js
scas
add
aam
fnstsw
sahf
std
sbb
cmp
or
aad
add
jno
loop
aam
add
push
dec
lahf
inc
sub
cli
jno
stos
sbb
xlat
dec
jb
int3
mov
outsl
or
outsb
and
sub
fs
sbb
or
cmc
orb
and
cmp
adc
lret
pop
cmc
loopne
xor
mov
es
stos
test
int3
stc
pop
ds
popa
adc
outsl
xchg
xor
mov
jno
sbb
sbb
int3
cli
iret
lds
xor
sub
dec
adc
xor
fistpll
mov
ret
ret
cmp
sub
aad
push
jecxz
xchg
mov
pop
xor
pop
inc
mov
or
shrl
push
loope
xor
leave
cmpsb
xor
or
cmp
mov
pusha
jns
insb
fs
jg
aad
mov
jns
xor
ret
jo
or
hlt
mov
loopne
lea
mov
sbb
adc
lds
lea
mov
stc
adc
and
add
fmul
jnp
add
cs
push
cwtl
sbb
hlt
adc
xchg
outsl
dec
les
sbb
push
mov
dec
mov
lods
mov
xchg
das
push
popf
out
rolb
in
mov
fnstsw
out
adc
cmp
movsb
addr16
aam
dec
lds
adc
adc
fstl
out
lock
and
mov
in
push
scas
sbb
addl
xor
fcoml
xchg
stos
ss
shl
xchg
jns
xor
push
in
and
movsl
fs
cwtl
add
xchg
loop
inc
jo
cmp
dec
jmp
popf
mov
ljmp
pushl
std
inc
xchg
or
call
inc
push
subl
sahf
jno
das
adc
sbb
lahf
xor
int3
cmp
add
pusha
push
xchg
out
add
mov
mov
and
scas
adc
ds
cmp
dec
push
add
inc
and
inc
out
imul
int3
subl
xchg
sub
inc
shrb
push
xlat
gs
incb
adc
pop
mov
lahf
andl
push
cmp
hlt
cmpl
ret
mov
iret
sub
mov
xlat
inc
test
inc
jns
inc
cmpsl
xlat
ljmp
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
push
aas
jle
sub
jle
inc
popa
pop
add
sahf
adc
xchg
aad
ffree
mov
xchg
ljmp
shl
sub
lcall
jb
push
jmp
leavew
mov
jg
push
jp
jecxz
xchg
push
adc
lods
cld
add
sbb
aad
inc
filds
leave
push
and
jno
xlat
and
cmc
mov
push
pop
cmp
mov
xchg
aam
into
int3
xchg
hlt
push
aam
or
inc
clc
inc
fcomps
pop
sub
mov
loope
loope
stos
ret
mov
xchg
cmp
and
lea
or
cmp
xor
xor
lds
jns
xchg
stos
shlb
cmp
mov
lock
lods
das
cmp
out
xchg
rol
push
mov
imul
or
dec
and
sti
or
imul
sub
fnstsw
decl
shr
pop
mov
lcall
pop
mov
pop
inc
pop
sub
jecxz
dec
mov
xchg
cwtl
inc
cmc
jecxz
adcl
sbb
inc
sub
xor
out
fstps
xor
jo
stc
popa
imul
adc
std
mov
in
jmp
push
lcall
cmc
mov
fimull
mov
push
sub
push
inc
nop
xchg
loop
cwtl
out
or
ret
daa
lahf
jmp
in
das
js
sbb
pop
ret
or
pop
lock
shrl
test
icebp
data16
xchg
xchg
test
push
shlb
pop
adc
lretw
leave
xlat
cmp
movsl
ljmp
cmp
push
fcomi
movsb
testl
and
cmp
cmp
cli
movsl
es
sti
jmp
cld
mov
or
cltd
inc
inc
or
or
rol
mov
jmp
sub
jge
xchg
subl
xor
mov
xchg
or
jae
jne
jl
xor
insb
dec
js
movsw
in
mov
fldcw
out
in
jle
xchg
pop
lods
test
ss
sub
push
outsl
pop
sbb
mov
sbbb
popa
cmp
and
jae
cmpsl
mov
into
and
push
pop
dec
in
push
jae
dec
push
push
mov
decl
rorb
inc
mov
popa
fcomps
and
fcoml
mov
mov
cmp
push
out
std
in
in
mov
mov
out
call
notb
ss
clc
jecxz
loopne
adc
sub
push
and
arpl
jmp
adc
pusha
sub
sub
cltd
mov
je
stos
sub
add
aad
frstpm(287
int
addr16
cmp
hlt
rcll
add
cmp
outsl
ds
movsb
sbb
cmpsl
pop
xchg
les
fwait
and
add
add
or
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
push
add
jle
mov
dec
mov
pop
mov
inc
fmulp
push
fs
jmp
jb
sub
cmpsb
xchg
in
flds
les
mov
xchg
mov
push
pop
outsb
or
decl
mov
xor
insb
rorb
jle
or
inc
iret
pop
insb
pushf
mov
adc
jae
mov
cmpsl
loope
jmp
addr16
lock
cmp
arpl
pop
movl
adc
icebp
out
aaa
mov
out
mov
cmpl
aam
inc
cld
mov
dec
addr16
xor
pop
out
fwait
mov
or
pop
or
stos
in
dec
scas
das
adc
dec
imul
out
lock
sub
test
cmpsb
ret
sbb
in
inc
bound
das
dec
jp
enter
test
push
cli
out
cmp
repnz
lret
xor
pop
insl
xchg
jmp
cwtl
jge
dec
xchg
xor
pop
icebp
dec
sahf
fstpt
cmp
pop
addr16
aaa
add
outsl
push
jb
and
cmp
outsl
add
xchg
mov
xchg
mov
call
popf
dec
inc
push
and
stos
outsb
xchg
xchg
arpl
mov
data16
inc
fs
mov
idiv
pslld
insl
mov
pop
mov
mov
mul
notb
jecxz
adc
shrb
and
sahf
inc
popf
out
and
adc
pop
pop
jbe
aaa
icebp
loopne
movsl
wrmsr
mov
pop
gs
movsl
add
xchg
nopl
pop
in
fwait
pop
in
stos
fbld
jle
sbb
mov
sbb
lods
les
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
bnd
inc
cmp
mov
push
icebp
cvtdq2ps
aas
pop
sbb
push
dec
lods
mov
cmp
ret
cli
shrb
jbe
imul
pop
xchg
int3
enter
mov
imul
daa
pop
sti
jmp
out
out
inc
sbb
or
test
xchg
push
mov
xchg
xor
in
flds
movl
inc
pushf
lret
push
clc
adc
js
xor
es
out
jp
test
test
out
aam
ficompl
or
jnp
out
fwait
xchg
push
jno
pop
leave
mov
jecxz
daa
jns
pop
mov
inc
das
pop
fldcw
push
inc
lods
and
sbb
js
mov
fimull
popa
adc
mov
and
in
test
aam
outsl
les
out
filds
lock
mov
add
lret
mov
xor
jnp
stc
clc
in
jb
pop
sti
inc
jo
xor
out
or
mov
fiadds
std
inc
pusha
sub
sarl
or
ret
xorb
cmp
mov
inc
pop
daa
and
andb
out
shll
dec
into
pop
fdivr
subb
stc
sub
nop
cs
movsb
loope
dec
and
mov
scas
rcrl
outsl
fcompl
std
cmpsl
lea
push
cli
or
xchg
xchg
push
pop
or
lds
loopne
ds
xchg
jl
adc
add
or
aaa
dec
int3
pop
test
scas
lret
lods
in
rcl
frstor
pop
push
cmpsl
int3
sub
pop
int3
insb
xor
lock
adc
fdivrs
orl
shl
lahf
jo
and
pop
adc
sbb
lret
push
jl
hlt
lock
cmc
fst
push
xor
jl
orl
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
sbb
out
mov
stc
or
xor
sbb
inc
cwtl
js
clc
sti
aam
cli
repnz
sub
out
int3
nop
lods
jo
jbe
sahf
add
pop
sbb
pop
fisubrs
int3
xchg
fnsave
lods
arpl
add
xor
sbb
imul
outsb
scas
push
bound
add
imul
loope
leave
sbb
stos
dec
push
fdivs
sarl
or
dec
jo
inc
mov
adc
push
outsl
cmp
inc
xchg
jne
loope
sbb
pusha
in
enter
or
shrb
bound
jmp
out
pop
movsl
mov
xor
in
scas
mov
in
xchg
lock
sub
inc
bound
push
inc
push
xchg
adc
lea
lods
bnd
jb
or
shlb
mov
jg
repnz
je
testl
push
testl
dec
mov
adc
setge
cmp
ja
jae
pushf
pop
cmp
in
ds
or
dec
adc
aad
jbe
imul
jecxz
mov
ret
shl
and
sbb
int
mov
pushf
or
add
jo
sub
fidivrl
mov
rcll
mov
adc
orb
and
out
cmp
sahf
loopne
adc
fxch
mov
or
les
push
fadds
call
and
xchg
push
xchg
push
pop
outsb
addr16
mov
cli
pushl
call
test
jmp
and
in
popa
push
lret
xchg
and
int
les
mov
pop
jne
into
fcmovb
mov
fcompl
jnp
add
mov
add
aad
mov
lcall
fmul
fninit
mov
push
inc
push
xchg
sbb
scas
mov
mov
in
pushf
pusha
cmp
dec
push
popa
inc
pop
lahf
cltd
sti
lret
jbe
inc
xchg
jbe
shll
aam
push
xor
arpl
and
inc
in
cmpl
jmp
aad
or
adc
jae
mov
dec
sub
jb
cld
jae
aam
enter
xor
xchg
clc
andl
and
jno
outsl
addb
adc
mov
pop
dec
outsb
sbb
out
rcll
sub
xlat
push
and
cmc
sbb
sbb
jbe
dec
shrl
add
not
add
ret
sar
sahf
add
ds
push
xchg
cmpb
and
push
push
mov
in
fsubrs
and
adc
inc
dec
mov
add
adc
sbb
mov
mov
popa
inc
and
loope
adc
fcompl
jb
xchg
int
xchg
mov
inc
sub
fdiv
addl
cmc
popa
push
movsl
xor
cltd
push
int3
cmp
std
jg
ret
dec
sub
jns
pop
xchg
pop
jge
sbb
out
aas
in
insl
insb
out
gs
fmuls
jle
or
push
and
neg
push
or
jno
push
test
jle
js
and
aaa
pop
jmp
mov
dec
repz
out
pop
es
dec
cmpsl
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
xor
or
jle
add
jecxz
stos
mov
add
cmpsl
push
push
sahf
xchg
and
jp
adc
sub
adc
push
and
or
leave
ljmp
movq
and
jne
cltd
test
jmp
sub
and
push
movsl
jecxz
push
jne
fcomp
xchg
adc
pop
or
popa
mov
push
mov
jne
loop
aaa
add
jmp
pushf
in
and
jmp
sub
pavgb
push
mov
jno
pop
sti
stos
rol
pop
imul
inc
pop
clc
dec
rcrl
or
ljmp
incb
jmp
xor
add
cld
popf
stc
iret
push
and
loope
outsw
mov
es
cltd
imul
fwait
or
cmp
inc
xchg
out
mov
popa
push
jl
std
lds
shll
mull
add
repnz
lret
cmp
adc
adc
lcall
bound
inc
inc
fisubrs
dec
test
bound
stos
push
mov
pop
add
out
sub
pop
pop
push
stc
sub
in
rorb
sarl
stc
aas
cld
mov
jo
xlat
test
ret
push
dec
sti
or
and
add
clc
and
xchg
push
jmp
mov
mov
dec
push
mov
stos
mov
icebp
fdivr
int3
push
jae
sbb
push
negb
pop
iret
cmp
xchg
pushf
adc
add
aad
and
das
xchg
lds
stc
test
dec
jle
out
sub
roll
test
ja
nop
popa
ja
sahf
lret
mov
push
sahf
test
fs
mov
fiaddl
fstp
mov
es
add
or
ss
add
fwait
leave
xchg
test
loop
sahf
test
std
testl
repz
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
jl
arpl
adc
jle
add
cld
push
loopne
sbb
sbb
mov
push
adc
aaa
dec
cmp
lret
sub
insl
lcall
imul
into
and
push
xor
adc
and
xor
dec
push
test
push
xchg
jnp
jg
mov
push
lret
or
adc
daa
pop
mov
in
mov
mov
mov
sub
hlt
out
inc
and
jmp
fwait
repnz
xchg
inc
in
adc
lods
aas
arpl
cs
rorb
dec
xor
sbb
jle
leave
mov
scas
inc
dec
fisubrl
push
xchg
fadd
add
jl
pusha
push
fs
scas
rolb
insb
mov
mov
orl
push
adc
sahf
pop
adc
inc
and
xchg
sahf
sub
scas
into
cltd
sbb
pop
pusha
xor
sahf
add
and
jb
or
sbb
mov
cli
mov
inc
rcrl
adc
cmc
or
outsb
stc
inc
inc
xchg
or
shrb
andb
xor
lock
scas
mov
pop
jbe
pop
int
mov
and
sbb
or
imul
js
aad
cmpsb
lcall
loopne
fnstcw
push
push
addl
mov
sbb
mov
mov
sar
nop
leave
repnz
daa
jnp
xchg
jb
inc
das
mov
cmp
pop
and
pop
in
outsl
pop
inc
mov
in
ljmp
les
inc
aaa
outsl
jl
or
enter
daa
daa
mov
or
inc
inc
pop
inc
pop
fstpl
mov
lcall
dec
int
push
push
mov
jb
sub
insl
popa
dec
outsl
xchg
sahf
pop
xchg
cmp
cli
dec
mov
scas
lret
in
mov
lea
sub
insb
rcll
mov
pop
call
aam
pop
ljmp
roll
js
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
and
shll
jle
add
jp
mov
es
mov
pop
adc
lds
stos
push
push
mov
add
mov
andl
loope
js
movsl
mov
pop
push
out
and
mov
clc
ret
inc
add
xor
stos
lret
mov
mov
and
mov
pushf
jmp
mov
outsb
inc
xlat
add
mov
mov
sbb
adcb
and
ljmp
fcom
mov
jp
pop
shlb
dec
cli
jne
sub
lcall
fcoms
xorl
xchg
adc
jp
lret
dec
fwait
repnz
call
adc
adc
or
mov
push
dec
pop
out
movsl
sub
test
fcmovnu
movsl
out
pop
scas
sub
nop
jne
push
cmpsl
imul
jl
sub
xlat
inc
lock
icebp
inc
and
add
adc
sub
xchg
scas
imul
inc
es
and
xchg
lret
popf
pop
xorb
pop
rcll
out
mov
sbb
sbb
rcrb
loope
and
sbb
mov
sub
test
jmp
or
das
jae
out
xor
fidivs
xchg
adc
repz
jp
pop
mov
push
outsl
int3
aam
adc
jecxz
std
cld
add
push
mov
cli
and
cmp
in
andl
jmp
popa
insb
sbb
xchg
inc
test
or
inc
add
mov
dec
mov
mov
xchg
adc
loope
test
rorb
sub
fdivs
pushf
ja
push
stos
addr16
shrl
filds
sub
pop
shrb
jp
sbb
enter
xor
jge
jg
xorl
gs
xchg
out
in
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pshufw
jle
add
out
fcom
lret
or
fst
push
imul
jo
jb
dec
cld
add
andl
imulb
div
lods
loopne
sub
xchg
and
adc
sub
out
sbb
mov
sub
pop
jle
adc
mov
or
mov
call
dec
into
int
mov
enter
inc
shrl
pop
loope
ljmp
push
adc
jae
clc
jbe
fcomip
call
fistl
cwtl
fmuls
out
xor
mov
and
push
adc
or
or
movsb
test
xchg
push
aad
sub
iret
insl
outsl
or
xchg
push
leave
cmpsl
jp
ds
xchg
add
sub
cmp
es
fldpi
or
mull
push
dec
push
xor
pop
mov
loopne
ja
jmp
jno
sbb
or
pusha
loop
icebp
decb
fcoms
add
xor
cmp
nop
fists
push
push
aad
sbb
inc
int
cwtl
stos
cld
aad
add
sub
gs
cs
add
dec
dec
mov
movsl
ljmp
pop
inc
inc
inc
icebp
std
gs
rolb
mov
pop
pop
mov
fmulp
lods
outsb
mov
js
xor
or
repnz
test
into
test
mov
lds
or
leave
mov
dec
roll
xor
mov
lock
push
pop
fldenv
jo
sbb
sbb
push
jns
cmc
std
sub
inc
adc
pop
cmp
scas
or
leave
mov
loop
or
daa
jb
mov
cmp
popa
cwtl
imul
xchg
pusha
jmp
cs
dec
data16
and
pop
push
call
clc
aas
xchg
daa
icebp
sub
ret
ja
icebp
shlb
lock
and
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
dec
ds
and
jle
sti
cmp
or
push
and
xacquire
movsb
push
cmpsb
cld
out
ficompl
push
sbb
push
aas
push
leave
outsl
cmp
aaa
pop
push
push
sub
pop
add
sbb
or
pop
lcall
sahf
int3
test
mov
jbe
call
fcmovbe
loope
mov
mov
xor
jne
jno
push
movsl
pop
scas
xor
push
movsb
jmp
cmp
sub
or
arpl
das
aam
iret
push
fidivl
shll
lahf
pop
pop
cmp
jmp
stos
xor
xor
daa
mov
movb
ljmp
pop
or
xchg
xchg
aad
test
repz
lret
clc
push
xor
adc
cmp
in
dec
push
mov
xchg
repz
iret
inc
movsl
loopne
sub
or
movsb
cwtl
mov
test
imul
xchg
cs
add
push
mov
or
push
bound
mov
pop
jle
popl
cmp
cltd
mov
sub
movsb
fistps
rcrl
pop
out
jle
inc
pop
pop
push
push
ja
rclb
cs
lcall
out
repz
and
cs
popw
mov
pop
inc
add
call
pop
test
subb
sahf
dec
mov
and
jbe
sub
and
jp
mov
pusha
and
sub
dec
pop
mov
and
aad
lods
out
in
cs
pop
mov
sub
sahf
std
mov
stos
jl
mov
mov
out
jge
mov
lahf
sbb
mov
std
int3
inc
movsb
fs
repz
push
sbb
push
fsubrs
fstps
into
mov
cltd
xchg
pop
jmp
aas
fwait
aas
xlat
pop
andl
faddl
lret
jbe
jne
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
fwait
mov
jle
and
jle
mov
mov
xlat
aam
inc
scas
bound
jp
mov
shr
jp
xchg
lock
scas
fdivs
out
std
cmp
and
add
jle
andl
push
leave
imul
test
into
or
mov
aaa
dec
inc
xchg
dec
adc
lds
enter
sub
cmpxchg
insl
and
movsl
xor
repnz
mov
push
sbb
cld
test
or
ret
xor
or
dec
in
mov
pop
xlat
lds
dec
sarl
imull
test
xor
cltd
push
add
fcomi
jmp
xchg
rolb
mov
movsb
cmp
or
in
in
dec
push
in
ret
faddp
mov
ret
inc
lea
mov
and
mov
loopne
mov
xlat
leave
jp
js
cmp
pop
cmp
xor
cmpsl
sub
fsubs
push
repnz
lcall
orb
test
fistps
xchg
mov
test
andb
cmp
pop
je
mov
pop
das
mov
fisubrl
xchg
cwtl
fldenv
scas
out
aas
hlt
repz
mov
dec
push
xor
push
add
sub
mov
adc
push
subl
icebp
mov
into
in
cs
mov
outsb
sub
sbb
stc
add
in
xchg
adc
sbb
push
lret
lds
inc
xchg
in
xchg
popf
aaa
push
stos
push
test
xor
pop
and
add
mov
sbb
fiadds
sbb
mov
aam
and
cld
or
lcall
sub
pop
adc
insb
sbb
dec
jb
aam
dec
jne
ljmp
pop
lds
loop
sbb
movsb
push
xor
lds
jnp
mov
dec
jle
lret
int
lret
xchg
add
lock
bswap
mov
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
jo
jle
and
jle
add
outsb
push
pop
iret
mov
mov
jge
cmp
mov
mov
into
and
push
ret
jp
stc
xchg
cmp
cwtl
mov
int3
dec
in
push
in
adc
inc
pop
push
cmp
add
cmp
daa
jmp
std
sbb
cmp
rol
clc
shl
add
enter
or
mul
sub
lret
xor
xchg
and
sbb
cmp
loope
mov
push
cmp
xor
add
inc
sub
ss
lods
in
cmp
dec
adc
inc
shlb
pop
jle
call
repnz
push
adc
push
fsubrl
sub
pop
pop
cli
clc
in
adc
lea
fwait
js
ja
test
daa
fdivr
sub
daa
mov
push
rorb
or
mov
jae
stc
scas
inc
jnp
sub
stc
add
mov
icebp
shl
stc
stos
popa
jnp
adc
cwtl
or
add
pop
sti
and
push
in
mov
les
outsb
sbb
adc
les
jbe
imul
mov
xchg
dec
add
pop
ficoml
mov
xchg
mov
sarl
movaps
push
push
inc
pop
lret
imul
stos
scas
lret
out
dec
dec
mov
lea
into
push
sti
dec
mov
push
or
enter
inc
cmp
dec
adc
movsl
mov
xor
xchg
sub
pushf
int
insb
iret
imul
pop
pop
mov
sub
lods
cmp
sbb
adc
adc
xor
into
ret
push
pop
fidivs
pop
lods
nop
push
icebp
cs
loop
decl
cmp
dec
lahf
sbb
mov
jp
shlb
or
and
mov
clc
movsl
mov
movsb
int
push
mov
or
enter
popf
and
or
ss
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
push
and
jle
jnp
inc
mov
mov
push
dec
fwait
add
push
and
and
shrl
ficoms
les
rcll
mov
js
out
scas
pop
lea
cs
sbb
std
jb
cmp
and
outsl
and
pop
mov
jnp
xor
popa
push
cs
clc
nop
lcall
inc
pop
push
dec
dec
mov
pop
cmp
jle
dec
inc
or
mov
sbb
or
hlt
push
loop
adc
or
jg
rcr
inc
aam
pop
loopne
pop
stos
fldt
sarl
into
shr
xor
lock
lods
loop
push
test
xor
inc
push
repz
insb
cmpb
cmp
xchg
movsl
and
pop
cwtl
lea
sahf
in
mov
clc
lods
fsubp
pop
mov
cmpsl
mov
push
jnp
inc
imul
mov
inc
inc
out
xor
xchg
ret
repnz
or
xor
test
loop
popa
jl
sbb
mov
lock
lods
mov
pop
lods
ja
mov
mov
mov
mov
jmp
idiv
pop
test
mov
add
pushf
orl
je
in
fists
in
imul
pop
xchg
mov
mov
stos
ss
pop
pop
scas
jb
sahf
jae
into
daa
mov
scas
or
and
rclb
fcmovbe
imul
clc
out
push
rcr
and
shrl
and
sbb
ss
insb
loop
popf
jecxz
push
inc
push
pop
xor
inc
test
movsb
and
sbb
pop
int
xchg
mov
je
sub
push
sbb
sub
lock
push
imul
push
push
jp,pt
inc
mov
cmpsl
lock
into
arpl
mov
xchg
jno
mov
push
and
aas
mov
clc
sub
mov
push
mov
icebp
scas
out
lcall
shr
pop
inc
movsb
dec
call
lock
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
dec
mov
jle
and
jle
pop
nop
sbb
inc
mov
sub
inc
cmp
lea
int3
mov
adc
inc
push
stc
push
mov
int3
cld
or
jno
pop
add
pusha
test
jno
mov
pop
or
sbb
push
lds
inc
cmp
pop
pop
scas
add
inc
mov
into
dec
or
shll
int3
jge
shrb
xchg
int
xchg
inc
jne
adc
adc
jle
xchg
sub
cmp
adc
aas
enter
inc
repz
lds
and
or
adc
pop
cs
ljmp
xchg
lods
das
mov
ljmp
fbld
adc
mov
stos
int3
lock
sub
jne
das
out
scas
push
xchg
push
mov
xchg
mov
sub
test
dec
movntq
out
shlb
mov
pop
xchg
sub
leave
sbb
xor
jg
jl
fildl
into
imulb
mov
popa
nop
lods
insb
dec
int3
imul
cmp
out
sti
pop
cmp
dec
xor
fldt
jg
lea
and
arpl
push
insb
cmp
jg
cmpsb
pop
add
push
push
out
pop
loope
push
aaa
xchg
and
fsubp
test
cmp
mov
add
das
ret
in
jmp
dec
fwait
push
dec
test
xchg
jl
ret
fdivrs
inc
inc
xor
jae
dec
inc
mov
mov
jmp
dec
push
nop
cwtl
shl
ret
dec
push
inc
add
xchg
sub
adc
pop
ficoms
mov
iret
into
pop
lret
into
xchg
ss
xor
pusha
call
scas
xlat
dec
cmp
xor
jle
mov
in
jo
insb
xor
xchg
jge
xor
ffree
xor
dec
mov
dec
std
nop
xor
and
call
flds
es
dec
repnz
sbb
loope
dec
push
fwait
or
push
sbb
rorl
mov
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
cmp
cmp
into
into
xchg
pop
test
pop
testl
jb
fnstsw
mov
xchg
cmpsb
icebp
pop
rcl
sarb
jmp
push
cmp
xor
das
sbbb
or
lahf
dec
inc
fnstcw
popa
xchg
lcall
cld
sub
testb
mov
xor
and
sub
rcrb
sarb
or
cmpsb
mov
push
push
dec
mov
push
lock
loope
sahf
ljmp
rcll
loop
pop
ljmp
sahf
scas
mov
lea
adc
cltd
or
dec
cmp
sbb
sub
ja
push
sbb
popa
jle
inc
and
and
pop
test
lock
int3
fistpl
mov
inc
insl
push
or
out
sub
push
aaa
out
aaa
xchg
das
sub
or
mov
inc
and
andl
mov
insb
xchg
mov
sub
cwtl
push
mov
out
sbb
orl
pop
and
xchg
das
in
inc
push
cmp
js
sub
jmp
sbb
adc
aam
std
in
lock
fsubr
ljmp
lock
mov
sahf
pop
ja
cwtl
sub
mov
ja
scas
cld
sbb
jns
xor
xlat
push
jmp
sub
sarl
pop
jmp
xchg
rolb
test
fcompl
popa
sbb
add
fildll
xchg
jp
xor
jb
add
jo
bound
lock
mov
adc
mov
gs
pop
dec
jne
mov
imul
in
cmpsl
int
daa
outsl
mov
idivl
es
call
mov
adc
rorl
xchg
cmpsl
dec
mov
inc
jnp
push
jns
adc
fisttpl
cmp
mov
jecxz
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
arpl
ss
jle
and
jle
xor
dec
inc
mov
xchg
int3
nop
cmp
jno
xchg
jg
fwait
add
xlat
mov
sbbb
iret
stos
cmp
jle
xor
xchg
pop
add
pop
mov
or
bound
cwtl
jo
inc
mov
cmc
push
ds
bound
jg
ret
jo
nop
lret
stc
add
stc
add
adc
fiaddl
imul
jmp
clc
loop
mov
push
inc
push
jmp
and
adc
push
xor
pop
mov
push
loop
sbb
nop
shrl
pop
sahf
adc
or
xchg
jb
jle
int3
jmp
das
mov
nop
mov
xor
xchg
push
fstpl
loope
das
sbb
bound
mov
scas
add
fildll
mov
out
and
daa
adc
push
test
cltd
xchg
subb
cli
and
inc
mov
mov
pop
sbb
push
mov
adc
xor
push
test
hlt
out
xchg
pop
leave
mov
xchg
push
dec
pop
mov
stc
jp
sub
std
jecxz
lods
call
stos
das
out
push
cmp
repz
and
pop
movsl
addl
xor
cs
jno
scas
mov
in
out
jp
iret
cmc
add
call
xchg
cmp
xor
mov
es
cmp
mov
sub
mov
jge
int3
mov
push
je
push
fsincos
inc
or
pop
stc
pop
adc
jne
xchg
mov
lret
cmp
pop
roll
gs
push
out
or
xchg
lds
shrl
pop
daa
jnp
ror
adc
xchg
cwtl
cmp
pop
mov
rorb
pop
inc
push
adc
sbb
add
jbe
stos
add
xor
popf
xchg
push
add
xchg
mov
outsl
pop
insb
repz
and
adc
or
or
jne
jmp
lods
mov
outsb
xorl
pop
int
mov
jle
jl
jle
fucomi
cli
push
insl
cmp
decb
pop
notb
cmpsb
xchg
mov
jns
mov
inc
dec
sub
adc
and
xchg
out
dec
jb,pn
xor
repz
cs
push
in
dec
loope
cli
or
xchg
sbb
cmp
enter
cmp
xchg
dec
sbb
dec
ret
and
test
and
fistpl
mov
mov
or
xchg
fisttps
iret
cmpsl
ds
push
or
lods
in
repnz
mov
add
in
cwtl
sub
mov
jns
outsl
shl
sub
iret
or
js
ljmp
pop
ljmp
pop
jo
popa
pushf
stos
dec
sub
or
shlb
pusha
mov
pop
or
xchg
movsl
in
data16
pop
mov
mov
push
sub
lcall
inc
mov
rcl
stc
insb
dec
ss
mov
fldcw
int
jmp
cltd
inc
jne
fdivrs
mov
cmp
cs
mov
push
imul
push
lret
ljmp
arpl
adc
gs
xchg
fisubrl
jns
pop
and
pop
jecxz
jmp
icebp
in
cwtl
inc
jmp
xor
inc
jg
inc
bound
call
add
inc
add
xorl
shrw
test
xchg
clc
ds
dec
and
int
fimuls
icebp
dec
pop
cmp
out
push
push
xor
cmp
xor
mov
jno
and
push
fbstp
sub
adc
rolb
rcrb
inc
lahf
sbb
xor
sub
aad
popa
lret
add
jne
push
fisttpll
and
jnp
pop
aaa
test
pop
mov
jp
popa
inc
add
push
inc
das
ss
lock
ret
sub
adc
xchg
cmp
loopne
pop
rorl
xor
mov
mov
in
jl
jae
dec
push
jecxz
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
inc
mov
jmp
sti
push
adc
je
ljmp
fildll
ret
int
add
adc
adc
notl
mov
mov
pop
cmp
push
dec
mov
mov
daa
push
cmc
movsl
lods
push
enter
rcr
xor
test
lods
enter
rcl
push
data16
mov
sub
js
cmp
popf
dec
je
pusha
shll
subl
int
dec
and
popa
shll
mov
sbb
xor
in
leave
xchg
pop
sbb
xchg
not
ljmp
bound
movsl
ret
mov
xchg
xchg
daa
and
mov
sets
xor
stc
push
add
or
mov
divl
les
pop
mov
lock
push
bnd
cmp
cmpsb
in
push
test
jle
mov
push
adc
xor
fnsave
mov
dec
fwait
jge
fs
cmp
inc
mov
inc
test
cmp
in
sahf
mov
in
aad
incb
imul
les
cltd
fwait
xchg
sub
popf
sbb
add
or
cli
sbb
lods
xchg
sub
dec
xchg
cmp
mov
jmp
pop
xchg
mov
sub
movsl
mov
fcmovbe
xchg
push
xacquire
pusha
inc
and
stc
sbb
mov
jmp
outsb
arpl
in
inc
push
lcall
out
xchg
into
mov
or
jge
movsl
xchg
push
rep
arpl
lds
cmpsb
cmp
and
xor
test
jae
cmp
adc
rcrb
sbb
pop
sub
xchg
adc
ljmp
pop
push
sbb
push
cmp
sbb
xor
ljmp
aaa
aad
add
rolb
cmp
pop
inc
stc
js
ds
ret
mov
add
xchg
ret
push
loop
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
lods
cmpsb
ficompl
jle
cmp
and
fidivs
out
clc
arpl
dec
ss
enter
push
xchg
cmc
data16
add
stos
cmp
adc
push
fldenv
pop
jae
add
repz
sub
mov
not
inc
mov
mov
adc
mov
inc
and
outsl
cli
fcmovne
adc
adc
repnz
dec
and
and
inc
test
roll
xchg
dec
fndisi(8087
xor
cmpsl
or
jne
jge
loope
in
or
aaa
inc
mov
xor
push
je
inc
adc
jmp
enter
adc
insb
add
mov
xor
nop
push
data16
xchg
sub
insb
pop
or
cltd
xchg
dec
lahf
movsl
or
xchg
pop
call
enter
push
add
dec
mov
pop
divl
jge
push
nop
fldl
mov
cmp
movsl
popa
sub
outsb
or
add
insl
mov
push
ds
aam
ja
or
lea
jo
lods
in
dec
mov
in
add
cmp
xchg
push
add
stos
bound
in
pop
sti
mov
cmp
sbb
mov
dec
int
ret
fs
xchg
les
mov
in
into
dec
sarb
hlt
rcrl
and
add
adc
jae
in
xor
cmp
lret
jnp
fstps
sti
jae
std
mov
mov
mov
aam
dec
pop
add
pop
sub
fcoms
pop
mov
pop
cltd
xchg
and
inc
mov
dec
insb
mov
mov
mov
sbb
jnp
jnp
pushf
inc
cmp
xchg
or
pop
push
in
xchg
pushf
ljmp
mov
roll
out
lods
rol
and
je
mov
out
sti
popl
and
add
or
es
xchg
jne
push
dec
leave
dec
mov
jge
push
in
test
or
inc
mov
pop
xchg
fs
push
sbbl
jmp
lds
popa
mov
fisttpll
xor
in
jle
jl
jle
les
sub
add
js
shrb
mov
mov
int3
int3
inc
push
jns
lock
pop
cltd
jae
lahf
or
movsb
sbb
andps
enter
jnp
sub
xor
inc
shr
mov
sbb
pop
or
leave
int
outsl
scas
sarb
inc
mov
and
mov
cmp
repz
ja
cmp
pop
iret
cltd
mov
mov
fldl
sub
gs
flds
shlb
ret
lcall
in
inc
dec
push
xchg
jae
aam
dec
repz
sub
jmp
inc
pop
mov
cltd
xor
pop
xchg
fwait
mov
push
iret
xor
popf
and
push
test
lock
popf
mov
mov
fcom
pop
xchg
lret
sbb
addr16
cwtl
xchg
sbb
and
inc
in
fstps
mov
inc
dec
and
and
test
fistpll
mov
lret
cs
push
adc
or
adc
sti
js
fsubs
imul
mov
enter
je
or
jbe
cpuid
mov
and
push
cld
iret
into
fs
jns
stos
test
test
jp
loope
cmp
adc
push
ja
aaa
rcrl
lea
js
mov
dec
das
and
sub
imul
mov
hlt
jno
mov
pop
mov
jl
test
lret
mov
cmc
insb
pop
xchg
call
out
lcall
cwtl
xchg
add
js
jbe
std
mov
cmp
cmp
mov
push
call
repnz
call
sbb
xorl
add
subl
sub
mov
add
xchg
enter
add
pusha
aas
sbb
rcrb
scas
mov
jb
or
sbb
add
inc
movsb
mov
or
imul
cmpsl
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
lahf
xor
jge
loop
jle
jl
jle
cmpl
shll
pop
imul
lret
minps
add
cli
sbb
pushf
and
or
adc
adc
and
test
push
in
and
cmp
pop
push
enter
push
js
xchg
adc
arpl
pop
incl
jp
es
xor
push
lock
mov
insl
rcl
leave
pop
pop
scas
pop
lret
sbb
adc
pop
jl
shr
pop
xor
pushf
sahf
or
mov
icebp
cmp
push
pop
loope
pop
test
xlat
pop
fstpl
mov
xlat
sbb
pop
inc
bound
adc
and
movsl
shll
push
and
cmp
and
pop
in
xchg
scas
aas
rolb
adc
and
mov
and
lea
pop
mov
lds
fistl
fucom
mov
xorl
jmp
fisttpll
test
sub
mov
adc
fs
int3
sbb
mull
mov
dec
test
jle
test
push
daa
fistps
fmuls
sub
fiadds
test
add
adc
shll
xor
cmc
push
pop
sub
push
push
test
aam
cwtl
ret
mov
cld
lahf
xchg
pop
out
push
cmc
mov
fsubs
inc
mov
leave
jno
lcall
mov
jp
xorl
jg
jecxz
push
subb
push
xchg
jbe
rcr
xor
or
xchg
cmpsb
mov
xchg
pop
inc
movsl
dec
cmpsb
pop
pushf
push
ret
jo
roll
gs
and
mov
ret
clc
das
pop
cmp
daa
mov
and
xor
fcmovu
cmpsl
push
adc
inc
mull
xchg
stos
shlb
fwait
out
jae
mov
cwtl
iret
outsl
inc
jecxz
push
dec
sub
sub
adc
ficoml
adc
push
add
sarb
int
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
cmpsl
fdivl
and
jle
jl
jle
adc
rcrb
test
dec
imul
icebp
imul
mov
inc
dec
and
inc
add
sbb
sub
shll
rclb
push
stos
mov
dec
stos
loopne
ja
mov
cmp
fldt
repz
in
or
xchg
sbb
dec
mov
dec
xchg
add
mov
jno
arpl
ficomps
les
jbe
out
cmp
jbe
jp
lret
jnp
adc
push
push
pop
cmc
sub
xchg
mov
mov
gs
rcll
sti
mov
imull
push
cmc
in
cmp
scas
mov
cmp
jnp
inc
in
mov
dec
jl
sub
sub
popa
sub
fdivr
pusha
pop
lea
dec
mov
mov
jge
ds
jbe
lret
in
rcll
aad
lods
mov
aas
js
test
push
push
aad
out
pop
sbb
popf
mov
jo
sbb
loop
rolb
sbb
roll
adc
leave
and
hlt
push
out
jmp
dec
mov
jl
std
jne
adc
out
xchg
add
and
roll
push
jmp
jns
out
je
jne
mov
inc
push
cmc
jge
loopne
ss
test
orl
push
cmp
ds
hlt
add
fisubrl
pop
in
test
xlat
mov
ret
lods
sub
xchg
iret
std
rol
add
ja
push
push
cmp
faddl
outsb
ficompl
jecxz
addb
nop
sbb
call
jb
sbb
xor
or
mov
mov
push
sbb
pop
shrl
and
push
icebp
test
pop
leave
cwtl
inc
pop
sbb
rol
pop
cmc
jno
xor
scas
xchg
cmc
sbb
mov
test
out
test
test
daa
addb
fdivrl
and
and
inc
mov
or
cmp
and
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
popl
out
dec
out
jle
cmp
in
push
cmp
jge
movsb
adc
push
stc
stos
adc
jne
push
push
push
push
sub
int3
sbb
or
div
loopne
adc
dec
or
bnd
xor
mov
xchg
jge
jno
cwtl
mov
sub
stos
and
mov
ret
ret
push
bound
loope
call
ds
sub
xchg
mov
je
jb
inc
ljmp
adc
dec
ret
lahf
pusha
pop
push
loope
jp
lcall
sar
mov
pop
sti
mov
mov
addr16
adc
sub
mov
mov
adc
inc
aam
mov
ret
stos
add
sti
subl
js
mov
jge
mov
cwtl
in
add
pushl
jb
sub
pop
sbb
fnstenv
negb
icebp
popf
shll
adc
scas
fsub
sub
in
insb
push
shlb
push
or
xor
jl
into
pusha
int
mov
adc
add
scas
xchg
and
cmp
adc
movsb
lcall
xchg
mov
xchg
jle
pop
jecxz
aad
aad
dec
xchg
or
push
iret
inc
mov
xor
lock
dec
fdivr
push
cmp
mov
mov
addb
fsubl
sub
test
aam
cli
leave
fwait
xchg
icebp
lods
push
clc
jl
dec
js
pop
cmc
in
nop
ljmp
icebp
js
cmp
pop
out
clc
test
and
mov
mov
ret
sbb
mov
adc
clc
sub
inc
inc
or
fiadds
push
add
inc
loope
notb
lods
xor
add
cltd
jae
inc
sbb
cmpsb
aam
fwait
les
movsl
jae
pop
fmulp
lcall
push
bound
cmp
repz
mov
jge
dec
pop
call
mov
insb
or
push
sbb
jo
cld
mov
addb
jo
adc
test
lret
push
sub
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
pop
mov
cmp
push
push
mov
sbb
and
mov
rcl
test
jnp
adc
or
mov
ret
insl
jnp
dec
addr16
xor
pop
and
sbb
mov
js
call
imul
loop
fdivl
jmp
scas
mov
sbb
lds
aam
sbb
inc
dec
sar
mov
ds
ds
aad
fiadds
adc
addb
nop
in
les
test
das
rcr
stos
fcoms
dec
jmp
inc
sub
or
in
pop
sub
loopne
cmp
inc
out
mov
mov
xor
loopne
mov
js
jmp
outsl
and
scas
and
jae
aam
jl
or
lcall
mov
or
imul
leave
negl
mov
jmp
sub
fstpl
sbb
dec
push
int
mov
aas
out
cmp
push
gs
jno
arpl
xor
xchg
cld
out
out
push
int
mov
xchg
jg
lahf
enter
repnz
cltd
and
lea
stc
aaa
aad
or
ret
xorb
lds
fisubl
ss
imul
fldenv
clc
and
pop
je
outsb
test
sub
sahf
inc
cmp
or
xchg
and
in
pop
ja
fs
in
test
sbb
pop
add
test
jo
mov
cmpsl
mov
xchg
nop
shlb
inc
ficoms
mov
or
shlb
push
popf
dec
cli
ret
jecxz
sub
xchg
adc
jns
pushf
das
lds
mov
lret
loopne
jg
or
sbb
stos
mov
xchg
cmc
or
in
mov
lcall
jmp
popa
mov
movsb
sbb
jnp
xchg
jge
xor
push
out
popa
dec
out
es
adc
and
push
aas
adc
imul
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
adc
cmp
cmp
ss
cli
mov
loop
jae,pn
adcb
inc
rcll
or
mov
mov
and
cli
mov
xor
out
inc
adc
pop
pop
dec
push
push
add
mov
push
ror
popa
cmp
in
ja
xor
add
cltd
add
cmp
les
scas
test
inc
xchg
push
dec
push
pop
js
out
divb
outsb
bound
pop
aad
js
shll
jge
pop
stc
fmul
loop
inc
sub
imul
in
jnp
inc
xchg
js
sub
mov
stc
jg
shlb
or
mov
cmp
sbb
negl
pop
clc
mov
dec
cmpsl
sbb
ret
fbld
dec
push
aaa
stos
add
sbb
fisttpl
fistpl
add
cmpsb
push
xor
cmp
outsl
rcrl
push
cmc
in
outsl
insb
es
ja
sub
or
dec
out
adc
jns
mov
mov
push
stos
cld
inc
pop
push
xchg
scas
into
push
xchg
push
andb
int
or
mov
in
add
mov
xchg
lods
outsl
jnp
cltd
push
imul
nop
lea
sub
es
mov
rcrb
out
push
movsb
repz
pushf
pop
push
lret
pop
lret
stc
mov
out
lods
mov
scas
dec
xchg
fisubs
gs
dec
in
xor
inc
mov
lcall
mov
mov
cmp
xchg
fcomps
cmp
stos
fmuls
mov
mov
xchg
mov
adc
cld
cli
test
lea
push
inc
add
inc
sti
cwtl
sub
xchg
or
ss
shlb
mov
cwtl
sbb
enter
insb
mov
or
mov
stos
xchg
push
stos
push
sahf
pop
xchg
inc
sub
cmpsb
mov
add
jae
mov
and
jl
sahf
insb
sbb
jle
movsl
sbb
arpl
cmp
jge
adc
popf
add
leave
inc
scas
mov
addl
in
and
mov
adc
sarb
enter
or
imul
add
je
add
out
ss
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
out
aam
int
sahf
repz
mov
fiadds
or
and
adc
cmp
mov
mov
xor
flds
xchg
sbb
add
xchg
out
mov
pop
fs
sti
lret
push
push
in
mov
xor
clc
lea
or
jl
adc
jge
mov
mov
insb
jmp
inc
imul
and
adc
or
dec
aam
sbb
roll
lcall
mov
inc
fwait
out
in
ret
imul
or
xchg
clc
cmpsl
dec
stos
xadd
stc
jnp,pn
xchg
in
xchg
addl
push
lcall
in
mov
jp
sbb
inc
pushf
lcall
scas
push
or
jg
adc
rolb
mov
add
loopne
xlat
ss
sub
out
cmc
inc
je
jle
cmp
add
add
in
and
xor
push
in
jg
push
mov
add
push
imul
jecxz
mov
push
cmp
sbb
enter
and
xchg
das
das
or
xchg
mov
ljmp
jge
jl
or
xchg
adc
mov
test
mov
and
iret
in
mov
adc
mulb
mov
ljmp
mov
lds
dec
dec
outsb
mov
mov
dec
mov
gs
sub
mov
push
mov
dec
insl
mov
movsl
or
mov
stos
orl
and
fldcw
inc
fcompl
sbb
inc
xchg
bound
sub
xchg
push
stos
cmc
repnz
ret
sbb
push
into
mov
and
add
add
mov
xchg
sub
adc
fidivs
pop
nop
jbe
aam
dec
inc
ss
mov
adc
sub
or
cs
or
dec
loope
dec
fidivs
adc
pushf
into
leave
fsubl
leave
jo
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
jg
loope
idivl
cmp
pop
cmp
xchg
sbbl
push
lcall
pop
xchg
jno
aaa
ja
pop
iret
mov
xor
sar
sbb
js
sbb
movsl
or
pop
repz
mov
in
and
mov
scas
push
and
cmp
xor
les
or
sbb
movsl
mov
pushf
and
sbb
pop
movsb
mov
test
dec
xor
dec
push
rcrl
leave
ss
adc
arpl
das
xor
push
dec
push
jp
bound
and
insl
loope
loopne
dec
adcl
cli
je
ds
push
ds
sub
cmp
mov
scas
mov
lret
xchg
stos
loope
mov
mov
out
fs
insl
out
add
aas
xor
inc
and
fdivs
sub
mov
test
fsubrs
jnp
cmp
cmp
mov
mov
push
insb
movl
pop
shll
pop
cmp
lahf
lds
ficompl
or
daa
stos
jae
fmuls
pop
iret
js
ja
in
dec
inc
test
push
push
pop
loope
push
clc
decl
movsl
inc
and
and
push
xchg
fdiv
xchg
push
movsb
loop
sbb
sub
fidivs
out
cli
adc
adc
stc
sarl
idivl
jp
or
fisttpl
jl
or
sub
in
sbb
outsb
sbb
ret
jno
dec
cmc
mov
mov
or
mov
jnp
push
test
out
clc
rep
add
int3
adcb
xor
pop
mov
adc
scas
adc
mov
subb
addr16
mov
aad
adc
fwait
jg
pop
gs
xchg
fidivs
je
filds
test
lds
jl
cmp
das
cmp
jl
pop
pop
lea
fstpl
sbb
add
inc
out
push
mov
and
push
jmp
pop
or
cli
xchg
xchg
mov
sahf
ror
ljmp
repnz
jb
lret
push
push
sub
lods
js
jp
decl
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
mov
bnd
cmp
xchg
add
sti
adc
outsl
mov
mov
xor
pop
outsl
push
pop
fstpl
imul
push
adc
lret
jne
test
scas
cmp
push
scas
mov
sub
enter
xor
xchg
sbb
cmp
pop
lods
jmp
pop
imul
das
aas
cwtl
clc
outsb
repz
mov
mov
adc
mov
popf
inc
setnp
jo
or
pop
jmp
sbb
mov
fwait
ss
jnp
cmpsl
mov
in
cmp
sub
adc
cltd
xchg
mov
cmc
fwait
iret
lret
cmp
in
jne
or
cmpsb
test
pop
fisttpll
xor
xlat
or
and
mov
repnz
shll
pusha
push
xchg
shl
scas
xlat
sub
mov
adc
cmp
sbb
adc
and
inc
cmp
mov
or
movsl
lcall
gs
mov
and
fldcw
inc
sbbl
and
jae
dec
es
jge
mov
cwtl
in
mov
jg
int
sbb
stos
xchg
lea
cmp
sbb
ja
pusha
aad
insl
dec
cwtl
xchg
pop
mov
inc
movsl
jle
stos
aad
xlat
inc
xlat
stos
adc
pop
mov
ss
insl
pop
movsb
jmp
fidivrl
lahf
stos
xlat
sahf
dec
out
and
cmc
dec
rcrb
mov
je
popf
jno
movsb
mov
leave
jmp
jl
stc
jecxz
out
mov
xor
cmpsl
push
push
fninit
dec
push
cs
cld
or
sbb
mov
outsl
mov
cmpsl
iret
aas
xchg
or
es
leave
cmp
jno
std
mov
in
adc
pop
adc
shlb
sbb
js
push
cmpsb
mov
fdivs
arpl
icebp
inc
pop
scas
stos
dec
add
pusha
or
pop
std
out
hlt
push
dec
push
dec
and
mov
or
cltd
dec
jnp
int3
or
js
dec
addr16
stc
push
mov
mov
loope
mov
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
fadds
jle
cmp
mull
stc
mov
in
imul
and
dec
adc
scas
cmpsl
pop
popf
inc
mov
xor
push
test
in
out
movsb
loope
enter
insl
test
roll
inc
stos
imul
ret
ljmp
scas
addr16
orl
insl
lahf
dec
inc
cwtl
adc
adc
jo
sarl
cwtl
in
cmp
xor
pusha
and
inc
add
cmp
xchg
adc
test
add
decl
xchg
mov
xchg
enter
mov
dec
insl
icebp
add
fstpl
sub
and
test
outsb
out
les
sbb
mov
es
mov
lock
dec
stos
inc
mov
mov
popf
xchg
sbbl
sub
fstps
lret
mov
int3
cld
ljmp
pop
pop
rclb
mov
shll
fimuls
inc
idivb
and
fstl
dec
sbb
shr
stos
in
rcr
sbb
scas
fidivrs
cmp
ret
or
pop
mov
mov
xchg
dec
leave
xor
pop
btr
mov
mov
in
push
push
push
stos
pop
push
and
inc
mov
jge
cmp
and
pusha
daa
cld
jo
cwtl
stos
leave
or
inc
or
icebp
aas
aad
dec
lcall
xor
aam
outsl
sarb
mov
inc
cmp
cwtl
pushl
loop
in
push
stos
cmp
xor
inc
jecxz
sub
adc
lcall
mov
shll
test
xlat
fdivr
outsl
and
push
sbb
add
sahf
mov
jp
dec
ja
insb
pop
push
imul
lret
and
imul
int
mov
xchg
pop
nop
cmp
xor
jb
shlb
xor
adc
xor
dec
loopne
mov
cmp
outsb
xchg
push
xor
mov
and
adc
xchg
adcb
aaa
in
sahf
jbe
pushw
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
dec
dec
cmpsl
stos
mov
jle
cmp
or
lods
lock
push
ljmp
cmp
mov
and
xchg
dec
adc
push
mov
rcl
ds
jge
lock
push
mov
xor
add
xchg
stos
add
sbb
pop
jns,pt
stc
adc
lods
stos
testl
mov
mov
dec
jmp
outsl
test
push
ffree
xor
sbb
add
fldlg2
and
out
test
lahf
pop
inc
add
je
mov
testb
add
jle
sub
jns
push
out
or
insb
in
mov
test
leave
mov
cltd
inc
aad
repnz
push
mov
mov
cmp
sub
test
dec
in
scas
call
add
cld
push
jge
les
rcr
pop
push
nop
addr16
xor
out
les
xor
mov
cmpl
out
rcr
mov
sub
flds
enter
push
adcb
add
outsl
mov
cmpsb
pop
rol
dec
and
dec
pop
out
mov
lcall
mov
pop
cmp
add
pop
pop
scas
fwait
popa
xchg
push
and
inc
test
negl
inc
or
pop
jne
test
loope
sbb
mov
xchg
and
int
cmp
mov
jmp
cwtl
xchg
adc
outsl
iret
adc
pop
push
insb
fwait
loopne
incl
jecxz
movsl
pusha
adc
addb
xchg
adc
in
out
std
fidivs
clc
fcmovne
mov
mov
jno
in
dec
sarl
lock
mov
mov
iret
xchg
xchg
in
mov
fsubr
ret
cwtl
popf
sahf
cmpsb
lret
in
add
bound
sub
fld
sarl
pop
push
push
outsl
jne
sbb
je
ds
pop
dec
ljmp
mov
mov
in
sub
xor
lcall
hlt
xchg
sub
add
pop
pusha
jns
int
mov
fdiv
out
dec
and
outsb
sub
test
xor
mov
mov
and
mov
addr16
xor
inc
rorl
xor
lds
clc
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
jae
jl
jle
cmp
mov
and
in
into
sub
lret
fmul
loop
push
mov
aad
add
iret
xchg
lahf
push
test
lock
pop
inc
push
cwtl
pop
mov
add
lea
mov
je
loope
inc
movsl
test
sbb
push
cltd
fcmove
and
or
jnp
pop
inc
inc
cs
insl
repnz
subl
shl
clc
in
mov
inc
out
mov
xchg
mov
mov
add
push
add
in
ss
inc
push
jb
sub
sbb
sbb
rorb
sbb
xor
jecxz
cmp
movsl
mov
dec
mov
pop
test
xchg
repnz
popf
xor
push
jge
xor
and
dec
ror
xor
iret
sbb
ja
repnz
push
push
ljmp
mov
add
mov
sbb
sarl
inc
mov
sahf
mov
jnp
enter
dec
call
test
inc
test
incl
and
xchg
push
out
inc
mov
repz
push
adc
dec
std
pop
lar
dec
sbb
dec
sbb
or
das
es
repnz
ret
arpl
inc
mov
mov
xchg
aad
outsb
mov
and
repz
stos
scas
test
xchg
and
pusha
cmpsb
jmp
push
pop
lods
xchg
test
mov
cwtl
adc
xor
loopne
pop
or
enter
out
std
xchg
cmp
and
inc
mov
xchg
imul
adc
push
cmpsb
test
fsubrl
push
jmp
pop
je
sbb
leave
push
adc
sub
pop
adc
add
arpl
inc
iret
inc
outsb
imul
mov
sbb
xor
inc
adc
jl
nop
sbb
jp
xorb
mov
xchg
adc
xchg
xor
out
xor
out
fistps
and
shlb
jo
in
rcrl
jmp
xchg
sbb
pop
fsubl
xor
and
cltd
xchg
cmp
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
xchg
fprem1
loopne
sti
jle
cmp
add
out
sahf
test
rcl
movsl
mov
push
in
mov
shlb
loop
and
sub
mov
inc
jg
sbb
js
sub
pushl
mov
xor
sahf
fcoml
or
or
pop
inc
xor
ljmp
mov
ss
int
mov
jne
xchg
insb
pop
dec
mov
xchg
cmp
jp
xor
stos
and
push
cli
jbe
pusha
jg
cmp
pmuludq
inc
lock
lcall
fdivrs
bound
stos
iret
push
dec
mov
mov
shlb
add
xor
jno
mov
aas
mov
lds
or
mov
push
add
rol
fcmovnbe
mov
dec
push
mov
xlat
lret
dec
insl
nop
sbb
mov
testb
cld
xchg
inc
xchg
mov
xchg
cwtl
shrb
inc
or
pusha
test
js
fwait
jb
test
and
arpl
fstps
stos
arpl
push
xchg
pop
int
pop
dec
push
sbb
pop
jae
ret
shll
pop
mov
bsf
push
int
sub
adc
movsl
mov
and
popf
add
cmpsb
mov
dec
push
push
dec
pusha
ja
into
fstps
xchg
push
shrb
hlt
fistps
xlat
ret
mov
scas
leave
imul
mov
pop
xchg
stos
or
xchg
fstps
xor
mov
dec
dec
xor
dec
push
pop
xor
stc
lds
add
stos
mov
ljmp
mov
and
in
pop
pop
dec
sti
js
push
pop
jns
mov
stc
dec
out
push
pop
add
push
lret
push
adc
add
lahf
pop
pop
mov
sahf
dec
icebp
jge
sbb
ja
cwtl
inc
lods
cmp
xor
leave
leave
push
cmp
add
or
add
mov
and
cmp
xor
pop
js
jg
jle
push
adc
out
inc
push
mov
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
adc
jl
jle
mov
cmpsl
cmp
test
xlat
popa
cmp
add
pop
in
mov
pushf
sub
pop
cmp
jecxz
push
ret
xor
mov
test
push
xchg
cmc
aad
cmp
jo
std
dec
jmp
add
mov
cmp
and
push
in
adc
mov
mov
out
cltd
scas
mov
rcll
jns
mov
dec
jmp
mov
push
xor
mov
ljmp
jp
out
ror
pop
call
scas
push
sarb
ss
cmp
sub
or
cltd
add
jb
iret
adc
out
pushf
clc
outsb
lods
xor
jno
gs
dec
sbb
mov
mov
xchg
cmp
shlb
fisttpl
rorl
mov
cs
cmp
mov
push
loope
sbb
out
pop
insb
scas
inc
push
stos
or
xlat
in
repnz
outsl
and
fcmovnbe
jecxz
in
mov
je
fistps
mov
cs
insb
mov
rcrb
xchg
arpl
xor
out
push
sbb
lock
mov
mov
xchg
in
nop
pop
xor
arpl
dec
ret
adc
xchg
jle
xlat
shlb
leave
loop
mov
sub
lods
mov
loope
imul
icebp
push
jo
pusha
sbb
jp
pop
mov
popf
inc
shll
add
jp
cld
loop
aam
fs
dec
es
shlb
mov
xor
aas
dec
adc
insb
cmp
addr16
dec
cwtl
addr16
mov
inc
addr16
fsubrp
icebp
loope
fcompl
and
pop
xchg
das
mov
sub
jb
insb
or
aad
loop
sub
cltd
mov
or
lret
js
mov
leave
pop
data16
adc
sti
push
test
jns
adc
in
mov
mov
ror
cs
and
stos
xor
cmp
popf
jmp
mov
xchg
mov
push
dec
inc
adc
ret
and
pop
leave
fldl
icebp
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
adc
repnz
xchg
cmp
mov
or
cmp
cwtl
dec
daa
adc
dec
mulb
test
bound
mov
ret
push
lods
pop
dec
mov
xchg
sbb
pop
lock
in
lret
adc
xchg
and
push
jp
mov
hlt
push
push
sub
stos
xor
pop
addb
cli
push
aaa
mov
jle
movsb
inc
imul
xchg
and
iret
scas
fldt
test
mov
cwtl
push
and
xchg
test
fildll
sahf
hlt
mov
in
cwtl
test
fldcw
clc
push
test
or
test
bound
test
inc
mov
lahf
pop
pop
sub
js
sub
pop
test
test
jbe
pop
into
popa
mov
loopne
mov
pop
test
mov
mov
movsl
out
enter
mov
leave
cs
or
js
repnz
cmp
das
shll
dec
outsl
mov
cmp
and
movsb
lods
adc
es
mov
and
jmp
xchg
mov
cmp
xor
and
leave
mov
or
lret
mov
aaa
xlat
int3
ss
ret
notb
stc
inc
mov
pop
sub
mov
icebp
shr
xor
outsb
sbbl
and
or
mov
nop
neg
cltd
fldt
cs
push
mov
sahf
push
cmp
mov
jo
and
add
mov
mov
push
fmuls
inc
test
and
mov
inc
dec
inc
jbe
gs
pop
cld
mov
sbb
sub
add
rcll
fdivrl
addr16
fsubl
pop
aas
pop
mov
data16
movsl
scas
shll
lods
loopne
pop
mov
int
in
sti
scas
xchg
sbb
xlat
fwait
mov
push
xor
xor
shll
xchg
ss
dec
xor
dec
push
push
dec
cld
adc
mov
into
pop
pop
insb
ret
pop
aad
subb
ljmp
mov
pop
roll
stos
movsl
sahf
add
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
mov
jecxz
cmpb
jl
jle
ljmp
loop,pt
rcll
pop
jbe
hlt
cmp
push
xor
xchg
repz
mov
mov
adcl
scas
in
xchg
aaa
mov
xchg
cmc
jne
lahf
stos
call
in
in
bound
or
ret
pop
mov
mov
or
out
movsl
pushf
inc
das
imull
repz
cld
fstl
es
dec
stos
xchg
mov
ds
out
push
push
aas
cmc
mov
mov
mov
jmp
cmp
rcrb
pop
xchg
sbb
mov
aaa
push
adc
adc
aad
test
pop
sbb
dec
int3
mov
inc
mov
and
pop
push
repz
mov
mov
cmpb
xchg
inc
call
inc
push
xchg
dec
lds
and
pop
mov
ret
cmpsb
sbb
imul
push
shl
je
sbb
dec
sub
jl
and
mov
inc
scas
mov
insl
and
out
jae
push
or
dec
mov
or
insl
fistpll
and
ja
jecxz
jne
sub
push
outsl
inc
inc
mov
xchg
adc
mov
movsl
pop
jg
jge
cwtl
test
leave
ret
add
or
test
les
out
dec
mov
mov
push
fwait
stc
sbb
leave
je
pop
outsl
or
pusha
xchg
jg
inc
mov
ret
cmp
cltd
xor
int
mov
aas
inc
mov
xchg
pop
or
andb
push
pushf
das
fwait
lock
add
das
add
sbb
cmp
push
adcb
and
fstpt
xchg
push
enter
jb
xchg
sar
jecxz
in
jns
ja
clc
jo
out
dec
fstp
xchg
lahf
test
xchg
mov
jg
scas
js
sbb
aad
and
mov
inc
xchg
int3
fucom
repz
push
in
filds
xchg
sbb
or
jmp
fwait
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
mov
cmp
cmpsl
pop
insl
les
xor
push
js
adc
or
xchg
in
ljmp
das
aaa
push
push
jmp
cwtl
push
pop
push
imul
add
jge
xchg
pop
int3
das
inc
stos
or
in
pushf
xor
repz
lret
repz
je
push
add
cltd
xor
repnz
lea
push
xor
out
mov
adc
sub
in
sub
aaa
inc
rol
mov
cld
ja
fsubr
and
cmp
xlat
ljmp
fsubrs
lahf
xchg
repz
popf
outsb
xor
xor
jo
insl
cmp
loopne,pn
rcrl
lods
sbbl
test
ss
std
fisubl
stos
cmc
cld
sbb
and
test
fisubs
dec
jle
inc
adc
test
sub
cmpsb
and
add
sub
cmp
cmpsb
add
ss
cmpsl
sub
ret
repnz
pop
mov
pushf
push
out
scas
out
rcrl
or
push
filds
or
xchg
add
lock
popf
push
fldcw
vhaddps
inc
xchg
sub
jno
shrb
loopne
mov
sbb
or
sbb
outsb
fisttpl
jbe
adc
xchg
imulb
mov
push
or
sub
insl
jmp
pop
add
jg
mov
aas
adc
cmp
push
stc
lods
popf
rcll
cmp
add
push
fsubrs
pop
enter
rolb
mov
gs
loopne
fucomp
pop
fs
mov
xchg
lods
push
mov
sbb
lds
test
push
fsubrp
leave
stc
andl
imul
aam
cmpsb
rcll
adc
lock
jne
rorb
in
inc
cmp
addr16
shr
mov
add
jb
int
sub
cld
into
pop
les
arpl
in
icebp
dec
imul
jg
dec
rcrb
jge
into
mov
in
inc
xchg
mov
xchg
repz
sbb
mov
mov
fldt
sahf
xchg
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
jecxz
fiaddl
pop
xchg
lods
into
orb
rol
nop
leave
fcomip
js
dec
mov
cmpsl
push
push
push
sbb
ss
mov
inc
test
das
push
adc
pop
push
xchg
test
push
xor
aas
or
fimuls
shrb
or
stc
inc
das
out
pop
pushf
aas
test
cltd
mov
mov
sahf
ljmp
mov
cmp
jg
in
mov
xchg
int3
pusha
or
xchg
pop
mov
gs
jae
pushf
ljmp
les
pop
sub
cmpsl
mov
add
repnz
je
loope
sub
mov
adc
out
push
in
aad
or
outsl
cltd
ds
jmp
add
sarl
bound
sbb
or
mov
in
iret
mov
stc
mov
icebp
test
push
xor
push
test
lahf
sub
inc
inc
inc
ror
fcom
lods
mov
shr
pusha
hlt
ss
add
sbb
sti
in
pusha
pop
mov
inc
pop
lock
inc
pxor
fxch
xor
sarb
sub
jbe
movsb
sti
in
xor
fistps
lret
push
repz
mov
inc
xchg
popf
loope
mov
lods
and
xor
scas
xchg
inc
das
into
sbb
jp
int
mov
mov
mov
insl
fdivl
test
movsl
icebp
pop
dec
push
mov
push
dec
iret
stos
rcrb
insl
adc
mov
lock
mov
pop
pop
cmp
jno
fwait
je
loop
sbb
pop
dec
shrl
adc
imul
jae
mov
in
push
loope
xor
add
lret
fdivr
cmpsb
jmp
mov
sub
leave
cmpsb
cmpsl
xchg
fs
movsb
push
jns
stos
lretw
insl
mov
or
aam
lock
sub
xor
adc
jmp
and
add
inc
icebp
mov
dec
les
fcmovne
cmp
xor
loope
mov
dec
test
ss
inc
mov
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
inc
dec
push
bound
jle
bswap
jae
ret
sbb
adc
popf
xor
sbb
jne
inc
mov
mov
dec
push
dec
jnp
dec
push
mov
and
push
arpl
out
ja
cmpsl
push
cwtl
or
loop
nop
push
jmp
loope,pn
jo
pop
lret
cmpsl
ss
jb
pop
repnz
sub
cltd
or
push
cmp
push
xor
push
nop
mov
les
cmp
fldl
mov
out
add
mov
xlat
outsb
pop
mov
cmpsl
lea
push
inc
mov
adc
xchg
fiaddl
orb
push
fsubrs
ret
ljmp
jns
sbb
jno,pn
inc
jno
scas
loope
fwait
inc
or
mov
insl
enter
repnz
cmp
sub
std
lret
jp
fiadds
cs
ss
adcb
loopne
orl
in
out
lea
in
pop
inc
lea
adc
aad
add
divb
sub
mov
das
orb
fisubrs
inc
pop
leave
push
lret
sbb
mov
outsl
pop
or
cmpl
mov
xchg
push
add
cwtl
rorl
mov
dec
rorb
mov
or
pop
lret
mov
adc
adc
outsb
push
in
inc
mov
cltd
hlt
out
and
or
shrb
lret
or
jge
cmp
scas
hlt
lds
andb
pusha
repnz
pushf
arpl
test
ljmp
or
imul
push
cmc
and
cli
lock
test
add
pop
and
rolb
scas
outsl
pop
sbb
lea
mov
mov
fisttps
cmc
mov
mov
push
in
and
mov
cwtl
cli
add
jmp
lahf
leave
xor
xchg
sarb
rcr
lea
cmp
inc
iret
jbe
shlb
loop
out
movsl
bound
inc
loope
cmp
flds
add
push
std
dec
sahf
push
push
add
pop
adc
loope
mov
cmp
dec
push
stos
jae
shl
push
jb
inc
dec
rclb
mov
int
jbe
fcmovu
inc
or
or
sbb
cltd
xor
pusha
jo
repz
mov
xor
rcr
ret
scas
mov
add
arpl
rcrb
or
mov
icebp
ja
cwtl
lds
pop
or
arpl
dec
mov
mov
clc
adc
ljmp
data16
lods
ss
daa
add
ficompl
lock
jne
sub
adc
call
or
inc
loop
and
mov
push
mov
lods
rorl
and
push
push
lcall
test
jecxz
leave
data16
pop
pop
cmp
ret
movsb
ss
adcb
xchg
push
mov
sub
xchg
sub
fbld
sbb
imul
mov
xor
fdivrl
mov
test
mov
fisubrs
adc
fs
pop
jbe
dec
shlb
adc
int
add
cmp
and
std
push
jb
cmp
inc
mov
sub
cmp
lahf
xchg
scas
mov
jge
xchg
pop
mov
test
xchg
iret
subb
dec
xsavec
xchg
fimuls
push
and
dec
xchg
rclb
lret
scas
inc
push
mov
hlt
sarl
xchg
push
pop
sbb
lods
mov
sahf
sub
lods
addl
sbb
in
sub
pop
and
imul
mov
rcll
shrb
and
ljmp
pop
roll
xor
push
push
push
xchg
sub
add
push
sbb
cmp
lahf
lea
xor
sbb
adc
mov
cld
cmp
sub
inc
jbe
or
cltd
xchg
shrl
repz
add
call
push
std
inc
popf
std
adc
jae
repz
mov
shrb
bound
nop
xchg
mov
xor
push
rcrl
mov
jmp
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
neg
fcomps
cmp
push
outsl
xchg
movsb
fsubs
push
loopne
loope
bound
stc
orl
inc
inc
int3
rol
in
fsubr
cmc
mov
addr16
test
sub
inc
jnp
jnp
adc
jg
ss
stos
pop
lcall
add
rcrb
dec
mov
lret
mov
gs
xor
outsl
push
xor
ja
ss
cmp
xchg
je
repz
inc
leave
sub
cmp
lret
cmp
xor
pop
pop
mov
mov
xor
pushf
pop
mov
enter
fnstenv
mov
push
sbbl
data16
push
mov
inc
lock
rcr
push
scas
push
dec
mov
dec
call
out
loope
sub
in
xor
out
repnz
inc
or
repz
rcrl
jae
mov
sub
cmpsb
mov
mov
mov
adc
ss
rolb
sbb
jo
sbb
push
xchg
orl
cli
sub
test
incb
pop
xchg
call
clc
mov
xor
test
les
iret
jmp
pop
mov
cltd
in
mov
sub
iret
jne
dec
test
fldenv
jecxz
xchg
aas
pushf
push
cwtl
icebp
pop
or
xchg
cmp
xchg
or
inc
sub
imul
flds
aas
dec
push
jg
dec
or
xor
inc
cmp
loope
push
out
add
add
imul
and
mov
aas
add
xchg
add
mov
sahf
cmp
mov
cmp
push
xlat
pop
jecxz
and
sahf
push
mov
mov
adc
fmull
cmpsl
jnp
popf
inc
sbb
add
fstpt
lock
js
rolb
fs
js
movsb
aas
adc
fisubrs
dec
fcmovbe
dec
adc
add
sahf
pop
int
push
sub
out
stos
movsl
outsb
or
dec
fistps
jmp
mov
and
aam
jmp
fwait
push
mov
mov
mov
pop
pop
push
cld
dec
mov
jle
cmp
inc
xlat
add
loop
jae,pt
add
add
and
in
test
mov
stos
movnti
fsubrs
push
jns
pop
loope
xchg
scas
cltd
mov
jl
push
push
pop
push
or
stc
pushf
int
jg
popa
rcl
in
test
inc
es
or
or
pop
or
bound
jge
mov
mov
ds
popa
and
mov
inc
adc
mov
insl
add
mov
frstor
mov
jmp
jnp
mov
dec
dec
jp
int3
out
jg
sub
cmp
jge
and
cmpsl
lea
mov
aaa
ja
in
cmpsb
mov
out
cli
fcomi
repnz
jecxz
cs
jmp
push
sbb
cld
cmpsb
inc
je
add
sbb
pop
xor
es
negl
fwait
add
inc
cli
rolb
push
cmp
icebp
shl
xchg
mov
pop
out
or
push
sub
cltd
data16
dec
frstor
jl
mov
jo
lret
lret
xor
inc
or
xor
fs
sar
icebp
push
and
inc
mov
in
scas
test
lock
aam
daa
sti
insl
stos
cltd
out
mov
jle
pop
and
fldcw
fdivrs
mov
mull
lock
xchg
sub
adcl
pop
cmp
pushf
cltd
xor
out
shrl
es
jo
xor
cs
inc
and
adc
or
xchg
lcall
mov
mov
and
sbb
push
dec
lds
or
add
adc
cmp
aad
jecxz
cmpsl
mov
stos
ja
fwait
enter
adc
popa
fprem1
insl
xor
mov
lret
jmp
mov
jb
test
cmp
imul
xchg
mov
push
xchg
roll
cmp
loopne
add
sbb
fnstcw
add
add
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
and
jle
jl
jle
xor
imul
rclb
lret
out
decl
loop
shl
pushf
inc
mov
bound
push
ret
jmp
imull
enter
nop
daa
outsl
imul
cmp
shlb
pop
cmp
sti
iret
outsl
out
jnp
call
cltd
int
cmpsb
sub
or
or
push
into
sub
mov
popf
cmp
push
push
sarb
cmp
mov
test
scas
in
ficoml
loop
mov
std
fwait
addr16
popa
adc
inc
js
in
and
and
loop
add
pop
jge
pop
lcall
sbb
clc
dec
int
mov
iret
xor
and
adc
inc
jg
aaa
pop
arpl
es
in
in
mov
andl
mov
sbb
ret
sub
mov
cli
inc
stc
pop
inc
ss
xchg
dec
or
xchg
and
int
gs
xchg
push
xchg
fstl
fists
fsubrs
mov
xchg
mov
jno
xlat
mov
test
lods
test
fdivs
cld
mov
test
jg
fldt
lret
ja
jb
rorb
into
jae
sub
lods
pop
mov
cmp
mov
subl
lahf
movl
fwait
bnd
ret
imul
dec
es
or
shl
xchg
mov
pop
cwtl
clc
out
jmp
insb
lock
outsb
dec
cmp
enter
xlat
les
sbb
xchg
cwtl
pop
xor
push
cmp
int
mov
and
fstps
and
subb
movb
xor
sbb
hlt
lret
push
pop
sub
adc
rorl
test
scas
dec
mov
sbb
inc
fs
mov
fs
push
jge
xchg
jnp
andb
repnz
out
pop
pop
mov
mov
and
mov
adc
or
outsl
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
or
fdivrl
nop
jle
jl,pt
jle
dec
loop
pop
lea
add
mov
out
insb
mov
sahf
mov
fiaddl
mov
jae
adc
xorl
lret
jge
mov
mov
add
icebp
stos
jge
mov
xor
mov
nop
cmpsb
mov
movsb
ss
pop
filds
insb
add
push
cmp
lds
cmc
mov
jb
push
lcall
lret
mov
inc
insl
arpl
gs
mov
jns
out
cltd
in
mov
out
sub
fmuls
lods
stc
cmc
sub
mov
jecxz
std
ret
addr16
arpl
mov
lcall
jns
pop
into
dec
mov
bnd
sbb
test
sub
rcll
sbb
xchg
imul
pop
jno
aas
lret
push
push
sbb
push
and
rol
jae
mov
push
jb
out
pop
jmp
mov
adc
xchg
pop
clc
push
leave
inc
enter
adc
push
jno
into
and
int
xor
add
mov
jae
test
or
fisubs
out
mov
and
mov
pop
push
cmp
ss
add
not
pop
cmpsl
lea
xor
cmp
mov
mov
lods
jne
dec
icebp
pushf
out
nop
jmp
push
pop
cmp
aam
lds
aas
mov
jg
aam
sbb
inc
sbb
mov
push
xor
fisttpll
adc
lret
adc
mov
fs
xor
mov
js
scas
jno
repnz
jae
push
es
insb
xlat
loop
mov
mov
cmp
jae
loop
mov
loop
xchg
mov
fsts
and
push
adc
jmp
sub
xchg
dec
adc
and
and
pop
int3
es
fmull
ror
jp
dec
aas
daa
fidivrs
add
stos
mov
or
adc
inc
insl
enter
lods
lea
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
inc
dec
test
pushf
lods
pop
dec
insb
or
mov
aam
cmp
or
popf
jae
and
subl
lcall
jecxz
leave
pop
sbb
fiaddl
push
xor
add
inc
lock
push
int
test
mov
lret
or
sub
addb
enter
jmp
ja
xor
adc
data16
hlt
fnsave
sahf
pushf
jno
call
ljmp
movsb
lahf
jo
xchg
repnz
sub
clc
xor
and
lods
pusha
lahf
jp
enter
enter
outsb
int3
xor
cli
mov
shl
into
or
lods
fsts
or
push
fcomi
in
mov
fbld
fsubrl
cwtl
xor
in
out
int3
iret
dec
pop
mov
test
enter
mov
inc
cs
inc
test
and
jmp
add
test
int3
and
mov
inc
lahf
pop
ja
jo
lock
dec
mov
cmp
pop
js
inc
mov
into
scas
repz
xor
pop
pop
jb
into
movsb
sbb
rcrb
fimull
dec
insb
inc
mov
cld
stos
filds
pushl
aad
in
arpl
repnz
lahf
mov
inc
pop
lods
lds
sub
repnz
in
inc
adc
in
mov
mov
jl
popf
push
mov
lods
push
fs
cmc
or
lods
sbb
push
or
push
add
dec
jp
scas
lods
xor
sub
push
repz
mov
add
dec
movsb
cmpl
loope
rep
daa
sub
jns
adc
jno
out
popf
mov
jmp
jge
cmp
je
shlb
xor
daa
orl
jp
cs
fidivs
outsl
scas
sub
test
mov
movsl
lods
adc
xchg
push
add
test
mov
out
dec
rorb
mov
sbb
cmp
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
imul
cmp
adc
jle
inc
adc
roll
es
xor
orb
xlat
mov
sub
ja
fimuls
inc
jge
jb
pop
adc
jnp
int3
xor
push
int
shl
and
lods
scas
xchg
clc
cwtl
jge
adc
scas
outsb
addr16
fisubs
das
cmpsl
pop
out
cmc
movb
xchg
push
aad
mov
cwtl
lods
mov
inc
and
mov
test
xor
shl
inc
pop
aas
sbb
add
std
xchg
daa
push
ds
lds
xlat
lods
lcall
push
sub
push
in
lds
xlat
push
mov
push
inc
jle
xor
sbb
lea
test
in
and
inc
jmp
je
inc
mov
sbbl
push
and
cwtl
imul
mov
lods
sub
in
mov
push
out
xchg
mulb
sti
mov
int
repnz
jmp
or
mov
sti
and
jno
outsb
call
jns
inc
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
aas
insl
cmp
jg
jle
fs
loope
cmp
cmp
add
popa
mov
jne
mov
sub
xchg
sbb
pop
shrb
xor
in
adc
push
cmpb
jmp
outsl
popa
inc
test
out
pop
xor
dec
dec
add
ljmp
mov
mov
outsb
sbb
repz
mov
lods
add
jp
aaa
cmpsl
ljmp
ret
outsl
bound
xchg
lahf
dec
jno
rcll
push
shrb
test
push
in
fmull
test
scas
xchg
jne
sub
xor
push
or
cmpsb
mov
mov
mov
outsl
cmp
adc
addr16
push
sbb
cmpsb
icebp
jg
dec
lock
fcomp
popa
or
roll
jecxz
xchg
cmp
mov
inc
push
cmp
divb
dec
inc
pop
out
sub
aam
stc
les
shlb
dec
jl
mov
jnp
dec
cmpb
jp
lea
and
lods
pop
stos
xor
int3
xor
sub
pop
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
dec
inc
push
jb
jle
adc
jle
lcall
mov
mov
add
out
std
cmpsb
es
insl
inc
jle
or
movsl
lods
cmp
inc
cld
xchg
sub
cmp
bound
popf
xor
out
pop
pushf
push
cld
jl
movsb
mov
mov
divb
jp
cmp
mov
sbb
adc
sti
mov
mov
sub
lahf
cmp
scas
mov
imul
add
jbe
sbb
mov
into
xchg
cmpsb
sbbb
ret
hlt
fists
or
mov
or
addr16
fidivrl
std
dec
loopne
inc
out
pop
mov
xor
pop
fstps
out
stos
mov
test
or
or
push
inc
jno
jmp
jp
hlt
out
jne
flds
xlat
xchg
sbb
clc
sahf
mov
insb
mov
out
lds
jnp
mov
pop
ret
xchg
test
xor
jb
les
cmp
les
add
dec
sti
cmp
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
movb
push
cwtl
jle
adc
jle
sub
cmp
ret
push
dec
data16
xchg
inc
jge
clc
jg
cmpsb
clc
mov
fisttpll
xchg
mov
push
and
aaa
flds
adc
dec
xor
push
xchg
pop
sub
fwait
dec
dec
jae
pop
shll
mov
adc
jae
bound
stos
add
push
loope
sub
stos
sub
cli
sbb
outsb
xchg
xor
test
xchg
pop
sarl
cs
xor
test
aad
data16
mov
adc
pop
mov
pop
aam
pop
adc
out
sub
push
inc
clc
popl
aad
iret
pop
jbe
adc
inc
pop
fs
jecxz
cmp
mov
es
js
mov
fiadds
sbb
add
mov
sahf
fidivrl
xchg
popf
cmp
cmpsb
sub
pop
mov
jbe
mov
cmc
inc
nop
or
xchg
std
adc
adc
dec
jge
jle
in
stos
cli
test
jp
out
pop
xchg
xor
fsubp
insb
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jns
and
adc
jle
inc
lret
mov
adc
add
add
sbb
inc
mov
sbb
cmp
jp
mov
dec
push
and
mov
addr16
addl
and
push
push
fnstenv
aas
pop
mov
xchg
and
out
push
pushf
ficoml
mov
sub
aad
sbb
push
cli
test
jnp
clc
cmp
xor
mov
cmp
or
xor
inc
mov
and
cmpsb
jo
jnp
addr16
fstpl
jmp
push
gs
popf
jb
pusha
mov
inc
adc
test
adc
mov
addr16
pop
fs
test
or
sbbl
or
mov
cmc
in
subl
push
jg
ret
push
arpl
in
mov
bound
ret
push
mov
insl
mov
arpl
add
adc
stc
ja
aas
lret
arpl
jmp
push
sbb
sbb
push
test
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
repnz
cld
pop
mov
cmp
js
cmp
insl
inc
dec
mov
pushf
imul
icebp
iret
pop
adc
pop
dec
movsl
sub
pop
insl
into
dec
xchg
decb
stc
cmp
sbb
lret
jns
sahf
or
nop
xchg
inc
xor
int3
mov
nop
clc
dec
jae
inc
fadds
enter
and
testl
pop
data16
loop
jle
aaa
mov
aaa
es
xor
jmp
ficompl
mov
xor
insl
ljmp
dec
sub
dec
dec
sbb
test
or
filds
cmp
lods
test
ja
xchg
imul
out
pop
incb
jecxz
cli
mov
cmp
cli
cmc
adc
push
mov
mov
xchg
push
xchg
lcall
inc
not
adc
push
stos
out
add
pushf
push
daa
rorb
ja
mov
inc
inc
add
jb
mov
cmp
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
push
inc
mov
cmpsl
jle
adc
jle
mov
pop
pushf
test
not
cs
and
aaa
mov
or
and
movsb
jl
pop
xlat
dec
repz
lcall
in
sub
mov
inc
push
fwait
ret
inc
add
jmp
insb
lods
push
into
js
adc
lea
ud1
xor
adc
imul
lods
mov
bound
pop
inc
nop
aaa
jp
sub
rcrl
or
mulb
and
inc
cmp
es
mov
xor
jecxz
test
jne
adc
inc
xchg
mov
pop
adcl
mov
arpl
sbb
outsb
adc
sbb
sbb
sub
cmp
mov
adc
cltd
dec
or
adc
fstpl
sbb
movsl
push
sahf
push
inc
sub
sbb
stc
mov
jle
mov
gs
loopne
xor
orl
cmp
dec
sbb
pushf
or
xorl
and
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
mov
adc
jle
idivl
notl
jmp
out
mov
mov
pop
out
lds
aad
bound
xor
jno
scas
add
xchg
pop
mov
add
mov
filds
into
jp
push
push
xchg
jle
pop
dec
inc
cmpsb
mov
pop
jp
jns
sarl
xor
lods
pop
add
popf
stc
xor
cmpsb
mov
pop
and
movsl
test
loopne
in
mov
adc
dec
fdiv
insl
andl
mov
mov
imul
sbb
out
ja
ljmp
cltd
dec
jae
adc
cs
ret
jp
mov
mov
test
and
rcrl
nop
js
outsb
sub
dec
jbe
test
pushf
sbb
dec
jbe
adc
add
dec
aaa
xor
or
mov
mov
mov
xor
jg
dec
aas
inc
mov
sbb
int3
int
ds
inc
in
lcall
or
mov
out
cmc
enter
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
stc
sbb
movsl
jle
push
jg
jle
or
pop
mov
mov
lods
sbb
xchg
es
cmc
movsl
loopne
jecxz
xchg
ffree
pop
sar
leave
pop
out
jnp
test
push
sbb
cmpsb
cs
out
shrb
out
call
stos
pop
es
cmp
jge
jge
xor
sub
call
mov
lds
and
bound
arpl
hlt
inc
or
dec
fimuls
cmp
cmp
in
cmc
sub
stos
cs
jl
xor
sub
add
and
push
push
leave
lock
retw
mov
adc
push
add
test
pop
repz
push
insl
and
in
ljmp
aad
inc
cmp
pop
mov
jbe
mov
xor
fldcw
cmp
cmpsl
mov
xor
adc
jg
mov
xlat
nop
xor
mov
xchg
dec
loopne
and
pop
loope
mov
fimull
jnp
imul
fwait
sub
push
pop
push
fiadds
cwtl
in
test
or
aas
test
je
xlat
mov
icebp
cltd
adc
sub
mov
add
sbb
xor
mov
pop
or
fidivl
fildll
jae
pop
and
and
mov
rorb
in
push
mov
adc
mov
or
pop
dec
cmp
cmp
out
adc
gs
test
mov
ret
fisubrs
jle
pop
lahf
xchg
xrelease
push
push
mov
jno
xchg
std
cmp
or
add
pop
fildll
pop
lret
mov
or
inc
add
rorl
mov
repz
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
int3
mov
lret
mov
repnz
lods
push
int
popa
xchg
sub
rcrb
sbb
gs
and
dec
mov
sbb
pop
and
sub
mov
sub
xchg
jae
call
je,pt
inc
pop
insb
xchg
mov
mov
inc
mov
push
push
call
sbb
std
popf
jl
mov
pop
fisubs
mov
sub
bound
rorb
jl
loopne
push
loop
jnp
outsb
mov
sub
into
jbe
pop
enter
pop
aas
cmp
lods
into
sbb
mov
push
mov
cmp
push
addr16
xchg
enter
or
push
imul
insw
push
addl
pop
pop
adc
pushf
sub
push
jns
sbbw
stos
sub
daa
scas
cmp
sbb
out
push
dec
addl
ss
int3
jmp
push
aaa
pop
daa
arpl
xchg
cmpsb
ret
xchg
and
cmp
aam
mov
ret
lret
mov
adc
sub
push
popa
pop
movsl
mov
shll
push
pop
das
subl
cltd
push
insl
out
pushf
xor
fisttpll
pop
out
dec
cli
mov
hlt
pop
stos
aas
movsb
dec
jno
test
jg
fisubrs
inc
cli
and
fnstcw
xor
scas
xchg
or
jbe
jmp
push
mov
xchg
pop
xchg
imul
int3
ret
lahf
test
mov
inc
jecxz
in
mov
dec
adc
into
test
inc
lea
lret
loope
adc
data16
push
adc
jne
xchg
shrb
int
pop
testb
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
pusha
sbb
mov
jle
cmp
pop
jmp
mov
push
out
lcall
mov
mov
aad
mov
fsts
lds
xchg
jb
mov
daa
push
pushf
and
adc
pop
or
cmpsl
xlat
rclb
mov
dec
xor
inc
and
mov
test
aaa
sub
int
mov
frstor
dec
jne
jnp
jne
push
loop
out
pop
jns
mov
inc
hlt
push
je
push
pop
mov
fcompl
sbb
add
cltd
adc
mov
cltd
daa
pop
daa
mov
inc
jmp
lods
mov
push
pop
out
xchg
pop
mov
test
rclb
ja
imul
lcall
aad
mov
adc
xor
add
out
dec
shrl
dec
xchg
sub
out
dec
lret
loop,pt
push
jnp
in
mov
dec
popf
dec
mov
xchg
jmp
and
mov
test
fisttpll
mov
stos
aam
adc
jb
imul
mov
adc
pop
xchg
and
adc
jl
and
xchg
lcall
push
mov
adc
jp
push
dec
sub
inc
xchg
mov
cmpl
mov
mov
push
movsb
push
mov
loope
push
out
outsb
sbb
inc
mov
jg
dec
xor
and
xchg
jg
pop
adc
cmp
xchg
push
leave
imul
pop
jecxz
cmp
or
sub
inc
mov
cs
mov
pop
ds
cmp
sti
push
inc
add
sbb
pushf
ret
mov
push
sub
or
jle
mov
mov
sbb
mov
mov
mov
dec
adc
mov
das
mov
push
aam
push
sub
inc
out
lahf
jg
rcrl
sbb
cmp
add
sbb
add
popa
add
or
arpl
adc
jge
jp
lds
fisubrs
sub
icebp
ds
popf
fisttps
jno
xchg
inc
xlat
and
sbb
sub
lret
xchg
jecxz
scas
cmp
mov
sbb
std
test
xor
and
out
dec
pushl
rol
out
add
jg
pop
sbbb
mov
inc
repnz
cmp
cld
fimull
rorb
sub
cli
xor
xor
pmulhw
cmp
leave
sub
jo
push
fwait
repz
enter
mov
adc
sbbl
icebp
test
dec
sub
mov
sti
xor
and
jb
sub
and
mov
cmp
and
jg
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
jecxz
lods
jle
jl
jle
mov
push
clc
adc
loopne
dec
fisttps
jb
test
outsl
jge
dec
mov
jl
pop
or
xchg
mov
mov
xlat
stos
jle
add
scas
shll
cmp
in
incl
into
jnp
outsb
lock
outsb
pushf
pop
and
shrl
nop
call
adc
pop
inc
jecxz
repnz
mov
ffreep
mov
lods
lods
jbe
in
xchg
jg
add
cmp
enter
pop
push
pop
test
push
sub
loop
cmp
fldpi
mov
js
sub
jl
cltd
int3
aam
xchg
inc
xchg
fcoms
je
shr
xor
push
xchg
sbbl
lds
jg
icebp
ret
sub
pop
stc
jnp
mov
push
mov
leave
sbb
push
data16
or
fsubrs
fstl
roll
scas
mov
gs
clc
or
leave
mov
stos
hlt
jle
movsl
jge
cs
pop
or
mov
out
xlat
ss
xor
dec
lds
mov
shll
jns
push
vzeroall
pop
fldcw
jno
sar
fstpl
jge
cs
das
cli
adc
fmull
push
nop
jmp
adc
mov
sub
cmp
push
fdivrl
sarb
inc
arpl
repz
jp
cmpsb
repnz
rorl
test
jge
out
cmp
inc
arpl
stc
add
pushfw
aas
out
inc
sbb
into
xchg
pushf
addr16
mov
jo
xlat
sbb
addl
cmp
sub
and
pop
fwait
and
int3
xor
xor
fldenv
inc
or
mov
xor
std
xor
scas
add
xor
inc
cmpsl
mov
dec
vmovq
bound
xchg
pop
xchg
pop
lret
clc
popa
mov
andl
test
fnstcw
and
lds
cld
push
je
sbb
or
fisubl
adc
ss
jbe
stos
iret
mov
into
into
dec
mov
rcr
lret
bound
iret
xor
cld
lea
and
push
dec
jnp
xor
addr16
cwtl
cmp
out
fldt
jae
insb
pop
inc
icebp
jl
xchg
iret
outsl
pop
inc
ret
or
je
mov
data16
cmp
mov
xlat
out
mov
loope
imul
inc
jl
xor
xor
in
loopne
mov
jnp
lds
lds
xchg
mov
notb
jne
shll
jl
cmp
jmp
mov
sbb
jnp
inc
test
sub
pop
sbb
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
arpl
stos
jle
jl
jle
movsl
xchg
xchg
mov
fisttpl
stos
arpl
ljmp
add
push
jo
lret
xor
in
repz
ja
jnp
imul
mov
mov
xchg
push
and
pushf
fists
outsl
push
outsl
xor
sub
inc
enter
push
pop
stc
push
push
jnp
lods
pushf
sub
movsl
mov
shll
adc
in
dec
jns
imul
push
mov
inc
sbb
inc
push
or
or
cmpsl
or
repz
adc
mov
xorl
cmc
pop
xchg
inc
in
mov
imul
xchg
jmp
sub
std
ret
jl
and
dec
shll
incl
test
fidivs
loope
push
inc
adc
fistpl
in
add
cmp
icebp
mov
sub
push
fstpt
sub
inc
std
add
insb
mov
js
mov
jo
jb
ficoms
iret
fcmovu
cmp
push
mov
jl
add
mov
and
aad
push
adcb
cmp
lret
cmpsl
push
and
cwtl
jmp
cmp
in
insb
and
clc
mov
fbstp
mov
adc
jae
idiv
dec
push
fsubs
pmuludq
cmp
jnp
xor
cmc
sub
add
out
push
mov
pushf
aaa
jg
enter
aaa
xchg
imul
pop
das
lcall
fdivrl
mov
gs
push
pop
lods
and
icebp
mov
sub
adc
shr
lcall
sub
das
sbb
jns
xlat
mov
int3
outsl
mov
mov
out
nop
mov
jle
and
fmull
data16
mov
pop
popa
popa
outsl
mov
and
daa
test
aaa
arpl
and
lock
les
and
pop
mov
or
jg
sub
mov
lret
and
sub
or
sub
pop
mov
cmp
lea
gs
cld
ffreep
xor
mov
cmp
push
cmc
fiaddl
clc
inc
pop
mov
cmp
mov
sarl
dec
in
mov
mov
mov
in
xchg
inc
cmc
sti
xor
pop
and
pop
jmp
leave
notb
or
ret
push
pop
stc
and
nop
fstpt
mov
inc
scas
push
cmp
cmpsl
jecxz
cmp
push
xor
mov
push
jno
adc
and
stc
out
pop
add
mov
repz
adc
int
mov
dec
jmp
stc
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
call
jle
jl
jle
push
dec
push
pushf
test
mov
push
cltd
push
or
xchg
lock
lods
insl
mov
xchg
aaa
push
adc
xchg
pop
push
je
into
loop
addr16
movsl
int
out
and
out
push
repnz
pushf
andb
ret
flds
and
fwait
inc
popf
dec
and
mov
mov
cltd
sarb
xchg
das
jl,pt
mov
out
push
dec
lods
add
pop
mov
cmp
sub
and
rcrb
lcall
fldenv
pop
dec
sub
aaa
outsl
cli
add
pop
mov
mov
add
popa
mov
adc
popa
sti
test
fstps
push
cld
jg
pop
pop
movsb
pop
sbb
popa
push
pop
jl
cld
or
xchg
in
add
ret
je
data16
addr16
mov
ret
aas
pop
mov
fwait
inc
xor
iret
cmp
and
dec
lahf
icebp
rcr
in
mov
pop
setnp
fs
popl
andb
aas
data16
stc
and
mov
ja
inc
aad
sub
ja
and
iret
mov
iret
rcl
sub
xor
xor
pop
jl
inc
dec
iret
lock
adc
std
sbb
movsb
lcall
repz
jp
fstpl
xor
out
sub
add
sbb
mov
rcrb
dec
add
adc
sbb
cmp
outsl
adc
jecxz
jecxz
ret
clc
fldcw
cmp
out
adc
ret
add
out
mov
aaa
and
scas
shlb
lcall
mov
xor
sub
push
inc
std
icebp
mov
and
jge
addr16
hlt
push
jo
sub
mov
xlat
addb
push
rcrl
jns
inc
mov
add
pushf
loop
nop
and
jg
aad
mov
dec
les
xor
arpl
sub
loop
cmpsl
lret
mov
push
movsl
out
cltd
pop
nop
ret
jecxz
push
push
loop
mov
data16
inc
and
imulb
in
push
or
cli
in
scas
mov
xchg
imul
outsb
testb
cmpsl
insl
imul
ret
jne
push
jb
xor
cmc
sub
std
adc
xor
cmc
xor
mov
ret
sbb
and
mov
xchg
stos
dec
gs
scas
repnz
outsl
or
push
leave
mov
jecxz
xor
cmp
clc
sbb
and
insb
or
fisttps
hlt
xchg
xchg
es
pushl
cmp
nop
inc
mov
dec
out
add
pop
adc
mov
xor
mov
jmp
or
pop
jno
xchg
add
cwtl
inc
fidivs
jle
mov
cmp
lods
out
mov
cmp
and
mov
add
test
jle
sub
mov
insb
cs
jle
stos
cmp
into
cld
push
cmpsb
rorl
or
aaa
popa
xchg
test
pushf
and
mov
pop
in
mov
cmp
imul
in
sbb
js
add
dec
mov
aaa
dec
loop
and
cmp
pop
xor
mov
out
cltd
mov
xchg
arpl
or
mov
scas
popa
into
dec
test
fldt
xchg
inc
mov
xchg
in
adc
xor
sub
outsb
xchg
andl
or
mov
pop
jg
out
es
sarl
sbb
sub
or
mov
mov
xchg
dec
ret
in
imul
mov
imul
lretw
dec
divb
sub
mov
push
or
mov
dec
mov
sti
lds
jns
into
and
pusha
out
adc
mov
test
xchg
xchg
sbb
mov
push
xchg
inc
xchg
adc
sahf
mov
into
into
xor
add
daa
fwait
ljmp
jle
test
lock
adc
mov
shrb
pop
pop
mov
mov
out
pop
jae
clc
mov
xchg
mov
int3
loop
pop
adc
and
xorb
test
and
popf
fistpll
mov
sbb
adc
insb
enter
sbb
ficomps
jmp
ljmp
mov
and
mov
and
sti
clc
fldcw
in
stos
mov
sub
andb
sti
aad
cli
sbb
in
std
je
xchg
adc
and
movsl
jecxz
movsb
inc
test
rorl
fs
test
jne
sub
xchg
mov
or
pop
into
push
imul
in
rcl
add
dec
mov
scas
fwait
dec
mov
or
lret
js
pop
adc
mov
and
jecxz
pop
pop
test
dec
mov
cmpsl
inc
scas
mulb
dec
dec
inc
xchg
sub
sbbl
adc
push
pop
xor
imulb
mov
inc
aaa
xor
cmp
fmuls
mov
cmp
ret
andl
mov
sbb
adc
daa
sbb
or
sti
lret
out
loope
or
mov
sub
pop
jmp
jp
adc
and
dec
adcl
cli
push
or
fstpt
cltd
adc
fcmovb
add
in
out
ret
mov
das
mov
cltd
divl
pusha
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
xchg
jle
jl
jle
adc
sub
testl
push
pusha
sahf
mov
cmpsl
addl
push
mov
outsb
xor
pop
pop
test
sbb
push
jo
inc
fwait
xchg
std
sub
push
add
xchg
mov
mov
testb
inc
mov
sub
imul
sub
ljmp
dec
or
mov
or
pop
xchg
insl
add
mov
sub
and
outsb
push
pop
add
int3
daa
add
das
fistpll
jp
lods
nop
mov
clc
jne
jne
mov
lds
mov
sti
shlb
jo
xchg
std
ret
or
add
stc
in
rcll
fisubl
pushf
mov
into
and
xchg
loop
and
fdivrl
daa
inc
popf
mov
xchg
jmp
popf
add
sbb
mov
cmc
mov
adc
pop
shrb
mov
outsb
lds
mov
cmpsb
test
sbb
arpl
aad
mov
repz
cld
dec
js
sub
dec
mov
fmuls
lret
inc
push
mov
sub
jno
pop
in
xchg
xchg
out
outsl
xlat
inc
jl
ss
lods
ja
leave
sti
ljmp
pop
lret
mov
insl
rcrl
fcmovne
imull
repnz
test
addl
cmp
fdivl
adc
dec
insb
sbb
cmp
into
pop
rorb
frstor
adc
xchg
addr16
sub
ja
lret
fldcw
add
cvtps2pd
sub
jp
sub
aad
sub
imul
inc
sbb
mov
xchg
mov
sarb
xchg
les
push
dec
ss
scas
aam
cmp
dec
push
xor
xor
in
and
dec
mov
xchg
pop
imul
mov
push
xchg
xchg
push
fisttpl
repnz
pop
in
sbb
mov
mov
or
inc
ffreep
repz
inc
stc
pop
lds
pop
pop
add
repz
stc
mov
inc
out
adc
in
xlat
push
xor
or
pop
pop
in
scas
pop
push
les
dec
inc
fisttpll
addr16
stc
mov
iret
dec
xorb
dec
sar
jbe
int
aas
shrb
call
cmp
sub
stos
mov
mov
sub
or
jl
test
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
mov
fistpl
or
jl
xchg
sbb
mov
clc
sarb
mov
xchg
inc
aad
sub
push
imul
push
push
pusha
sub
fnstenv
adc
arpl
cmp
imul
or
cmp
or
sub
mov
push
xor
out
inc
ret
loope
add
jnp
movsb
add
ret
sbb
lcall
or
xor
push
shlb
jp
gs
dec
pop
mov
sub
pushf
cmp
add
imul
and
sub
rcll
mov
sub
mov
pop
test
dec
mov
inc
pusha
pop
xchg
mov
sbb
pop
jp
int3
mov
lods
in
inc
repnz
pop
lods
inc
mov
and
dec
push
enter
out
movntq
xchg
add
xchg
lret
dec
xchg
lods
fprem
mov
dec
nop
ja
stc
unpcklps
mov
jnp
xor
xor
jne
jmp
std
in
outsb
aas
pop
inc
sbbl
pushf
rcr
repnz
clc
inc
add
pusha
lock
jecxz,pt
adc
lock
cmpsl
push
out
pop
es
push
pop
jle
repz
adc
std
lret
mov
mov
and
inc
icebp
inc
inc
jo
jmp
les
xor
sbb
aad
mov
xchg
test
push
sbb
sub
push
inc
adc
cmp
jo
add
push
cmpsl
push
xchg
ret
dec
inc
cltd
mov
cmp
ficoms
insl
push
in
pop
xchg
inc
orl
sti
stos
mov
cld
inc
or
pop
sub
js
dec
scas
xchg
adc
and
fimuls
int3
pop
aad
add
adc
stc
cltd
inc
mov
xor
push
aas
sbb
xchg
cmp
setno
fs
fcomi
ffree
nop
daa
mov
sbb
pop
enter
adc
fdivrl
cmc
xchg
jne
adc
inc
loop
inc
mov
into
adc
stc
add
loop
hlt
fwait
les
push
xor
nop
pushf
and
or
jnp
shl
cmp
addr16
aas
jns
xchg
mov
and
fs
stos
leave
mov
fildll
mov
lea
testl
mov
ret
rcll
scas
push
or
lds
leave
add
add
xor
push
xchg
pop
xchg
push
mov
jle
or
xchg
out
nop
pop
mov
lea
pop
mov
xlat
pop
push
sbb
inc
ja
mov
pop
mov
xor
add
lds
adc
adc
xchg
addr16
fstpt
dec
shrl
ficomps
mov
js
mov
jnp
inc
or
in
cmp
push
rcr
mov
fnstsw
pop
sbbb
jno
fldcw
dec
jg
pop
push
shlb
xchg
hlt
movsl
or
sbb
cld
pusha
sub
stos
xchg
bound
imul
adc
repnz
loop
iret
cmp
cmp
pop
dec
mov
jnp
push
mov
in
sbb
fnsave
sub
iret
int
mov
mov
aas
les
ss
dec
xchg
mov
mov
lret
pop
cld
addr16
push
or
mov
cmp
movsb
or
add
outsb
xchg
cmp
mov
and
addr16
pop
in
mov
mov
jo
fsubs
push
push
pusha
out
mov
cmpsb
sbb
and
push
inc
movb
out
mov
sub
push
lods
cmpsb
adc
mov
dec
push
shlb
lods
cltd
push
sub
inc
ljmp
mov
ret
mov
fcmovbe
inc
cmp
pop
cmpsb
xchg
aaa
pop
mov
fwait
ljmp
int3
scas
lea
repnz
int3
mov
mov
jg
jl
outsb
jge
pop
and
and
sbb
dec
push
pop
int3
and
mov
mov
idiv
dec
mov
mov
mov
dec
mov
sub
sbb
aad
rorl
outsb
lock
bswap
stc
ret
hlt
inc
out
outsb
cmp
leave
out
cmp
push
fnsave
fucom
rcrl
dec
mov
adc
or
clc
and
cmp
mov
cmc
xchg
repnz
test
add
repz
mov
sahf
lds
hlt
cs
out
cltd
shl
push
mov
in
shrl
jp
fcomp
test
jmp
rorb
dec
mov
inc
mov
mov
sub
mov
inc
xor
aam
lcall
movsb
repnz
push
dec
jbe
inc
inc
mov
testb
xor
decl
mov
mov
ret
scas
adc
jo
movsl
rcll
push
adc
sbb
jns
fsubrs
ljmp
push
lcall
scas
pop
push
ja
dec
lcall
add
add
add
push
push
lock
outsb
dec
mov
cs
jle
scas
jl
jle
scas
gs
or
jae,pn
pop
inc
and
xor
mov
jge
js
mov
mov
subl
adc
dec
aaa
lods
andl
icebp
sti
mov
in
call
pop
rorl
sub
gs
and
hlt
cmp
xor
xor
xor
pushl
loopne
sar
mov
mov
push
mov
jb
aam
fstps
mov
das
fdiv
les
int3
or
hlt
rorl
pushl
mov
inc
cltd
lcall
jne
inc
call
dec
jmp
pop
outsb
imul
jp
int3
xchg
fwait
aas
dec
int3
xchg
pop
clc
mov
dec
das
jne
push
aam
jbe
das
add
movsb
xchg
and
adc
repz
xchg
push
ret
sahf
stos
fdivr
cmp
jecxz
xlat
call
pop
pop
xlat
hlt
dec
fcmovne
popf
mov
xor
inc
xchg
out
mov
mov
hlt
test
int
shll
adc
pop
pop
cmpb
test
pop
pop
xor
dec
jmp
xor
inc
adc
cmpsl
and
repz
mov
push
cmp
sbb
cmp
or
xchg
repnz
les
mov
int
std
inc
cwtl
pusha
clc
and
movsb
lods
mov
mov
lret
push
dec
and
imul
or
popa
sbb
lret
outsb
jge
inc
push
or
and
scas
xor
inc
xchg
cmpsl
cli
mov
jns
jecxz
dec
inc
pop
ds
push
jb
int3
sti
fcomp
add
repnz
jp
popa
std
lock
ss
outsb
lock
clc
sbb
mov
push
ret
adc
and
out
mov
mov
xor
sbb
lahf
sub
jge
add
cli
cmpb
adc
pop
push
pusha
testl
dec
loope
and
jns
jo
inc
add
inc
je
repz
gs
push
in
or
cmpl
mov
addr16
imul
pop
sub
push
dec
aam
sub
arpl
fmull
mov
ret
aad
push
xchg
pop
fdivrs
popf
mov
clc
repz
in
sub
pop
out
mov
push
push
aam
mov
fidivl
je
jae
shl
jg
lock
sbb
adc
add
cmp
add
aad
je
mov
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
mov
jle
scas
jl
jle
clc
lds
mov
les
cmp
inc
sub
xlat
bnd
and
and
mov
sbb
in
or
data16
mov
mov
sti
sarl
or
xchg
xor
or
lret
sahf
in
pop
and
pop
sub
outsl
xchg
ret
cmp
mov
and
xor
mov
lahf
add
or
xor
sar
adc
pop
subl
adc
jne
fdivrl
add
fadd
imul
xchg
add
outsl
outsl
or
cli
test
push
aam
ljmp
xchg
or
mov
fdivrl
jmp
mov
adcb
xchg
rorb
mov
out
std
icebp
and
dec
lcall
push
js
jl
outsb
jo
sub
sub
sub
adc
movsb
mov
inc
dec
fcompl
scas
rol
and
flds
mov
js
inc
out
cmpsl
or
imul
adc
stc
das
sbb
sbb
mov
push
xor
dec
push
push
mov
insb
pop
add
push
xchg
mov
push
push
cld
push
pop
inc
sbb
dec
push
out
popf
enter
sbb
repnz
in
leave
leave
or
loop
adc
test
fstpt
adc
mov
push
cmp
push
jae
xchg
jnp
cltd
sarb
mov
jo
mov
ja
mov
std
and
test
mov
push
adc
loope
inc
mov
mov
cmp
daa
or
sub
pop
insl
sbb
mov
les
add
les
imul
aas
jmp
sbb
mov
jmp
mov
loop
push
addr16
pop
arpl
mov
sub
into
xlat
sbb
jae
cmp
pop
mov
cmc
or
lahf
pop
pop
xorb
adc
pusha
xchg
xchg
cmc
in
pop
ret
das
push
push
push
test
pop
and
push
push
outsb
aad
jns
push
into
pop
cmpsb
hlt
mov
lea
sub
imull
popf
mov
or
inc
push
ds
in
sahf
mov
sti
test
cmp
stc
ljmp
xor
into
lds
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
adc
test
inc
jle
scas
jl
jle
in
inc
call
cmp
fisubrs
mulb
dec
lret
and
xchg
mov
mov
int
pop
sub
cli
xlat
int
jle
fists
test
mov
cmpsl
fiaddl
mov
add
xor
xchg
mov
ja
xchg
stc
scas
cmp
ja
dec
or
out
icebp
scas
ficompl
leave
fnstenv
inc
ss
fsubl
jmp
call
jns
mov
lcall
dec
mov
xorb
mov
je
or
jle
int3
enter
gs
cmp
scas
add
jmp
cld
jle
mov
arpl
cmp
adc
adc
mov
sbb
pop
sbb
movsb
test
dec
push
lret
leave
icebp
fs
stos
xchg
mov
or
mov
xor
jl
xchg
cmp
scas
and
sub
ljmp
cmp
adc
std
jp
cmp
test
mov
xor
xor
or
lret
scas
sbb
xchg
ficompl
adcl
xor
xchg
jb
push
mov
fidivrl
fidivrs
in
nop
pop
jbe
jl
xor
dec
gs
add
nop
lret
insl
inc
js
push
filds
and
fisttpl
mov
lcall
sub
jo
cmpsl
sbb
and
ss
mov
sub
and
pop
ret
jmp
pop
sahf
lcall
lret
jns
sbb
movl
or
cmpsb
in
fsts
daa
jg
dec
and
cmp
ret
jno
inc
push
lods
or
lds
into
lock
inc
cmp
and
cwtl
orb
lods
mov
scas
outsb
cmp
and
fdivr
mov
cmc
test
hlt
iret
into
jmp
mov
mov
dec
jb
pop
scas
xor
mov
dec
sahf
push
xchg
repz
jg
adc
cwtl
jmp
fisttpll
adc
jg
and
inc
mov
adc
xchg
bound
mov
shl
dec
insb
ljmp
cmpsl
mov
out
pop
aaa
bound
dec
int3
xor
cmp
das
mov
pop
jb
mov
sub
jns
mov
xchg
int3
add
pop
dec
aam
leave
out
sbb
out
and
cmp
cmp
fldcw
xchg
popf
insl
sbb
cltd
mov
or
in
mov
scas
mov
arpl
pop
into
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
push
shlb
xchg
jle
jg
jle
and
lock
orb
mov
push
pop
jp
mov
in
sbb
jmp
gs
sbb
les
inc
lcall
add
mov
mov
jmp
pusha
sbb
mov
jg
mov
lods
jnp
sti
lcall
stc
pop
pop
xor
push
pop
or
popf
rcr
adcb
ljmp
add
daa
dec
xchg
mov
sti
shld
imul
call
push
cs
mov
rorl
into
dec
push
and
and
xor
mov
rolb
arpl
aaa
sahf
push
adc
in
imul
aam
dec
mov
push
out
clc
loop
cld
sub
pop
mov
adc
mov
add
sahf
enter
stc
mov
scas
xor
cmp
push
cmp
cli
movsb
push
mov
xor
test
dec
mov
or
rcll
xor
movl
jo
bound
cmp
mov
jmp
out
mov
sarb
or
cmp
stos
jnp
aas
or
dec
lahf
addl
clc
sahf
fcompl
xchg
mov
sub
and
rorl
adc
fs
push
and
pushf
test
or
in
mov
iret
imul
popa
push
fwait
jp
push
das
test
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
sub
add
jle
movsb
jg
jle
mov
mov
sbb
dec
pushf
repnz
pushf
push
adc
push
loop
decb
pop
xchg
arpl
sarl
xchg
xor
add
test
push
mov
imul
orb
test
clc
sub
cld
popa
mov
mov
sub
mov
mov
ljmp
cmp
sub
ja
add
lret
int
mov
cwtl
or
jle
clc
cmovae
fists
aaa
fisubs
test
xlat
mov
test
push
pop
sarl
mov
adc
adc
mov
insb
mov
mov
or
sbb
xchg
sbb
roll
mov
out
dec
cmp
into
in
jle
push
mov
clc
out
pop
pop
push
push
jnp
decl
cmpsl
int3
and
insl
xorl
xchg
mov
xchg
jmp
xchg
push
loopne
xchg
movl
push
orb
xor
cmp
imul
cmp
psllw
imul
mov
xchg
lock
add
testl
adc
lock
pop
clc
push
pusha
in
ljmp
inc
loopne
cmp
stos
cs
jmp
jp
idivb
das
adc
pop
lret
push
cmp
sub
and
jbe
inc
cmp
js
fcomip
mov
aas
xorb
xchg
add
sahf
in
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
dec
cmp
dec
add
add
add
test
in
enter
adc
mov
mov
sbb
fs
loop
xor
testb
jl
dec
mov
push
xor
inc
pop
cltd
lret
arpl
shl
adc
add
popf
cmp
cs
faddp
repz
shlb
or
jg
imul
ss
pop
push
dec
mov
aas
insl
aad
fwait
push
sub
fs
jmp
repnz
add
or
sbb
sbb
inc
push
fdivr
sbb
andb
loopne
cmp
inc
fidivrl
lods
sub
dec
dec
rcr
das
mov
cmp
xor
sbb
imul
inc
sti
cmpsl
addr16
mov
dec
loop
push
out
call
sets
pusha
mov
or
sub
addl
cltd
add
add
push
pusha
in
jle
lcall
xor
rolb
add
sbb
jmp
adc
dec
mov
push
sbb
xchg
je
icebp
xor
in
data16
je
inc
cmpsb
jecxz
jp
les
inc
cli
sbb
mov
dec
adc
xor
aaa
insb
mov
and
jecxz
cmpsb
or
fs
sbb
mov
lcall
pop
pop
xor
mov
mov
mov
out
out
push
cmp
push
jmp
jo
or
subb
push
ss
cmpsl
data16
imull
push
sahf
fstpt
movsl
shr
inc
movsl
mov
ds
xor
add
mov
inc
cmp
cmc
pop
jb
pusha
xchg
rcrl
sub
mov
insl
pushf
mov
icebp
xor
cmp
insl
dec
mov
jno
mov
or
inc
xor
jns
cmc
sbb
shl
aas
mov
ret
inc
cmp
sub
pop
in
int
push
rorb
add
adc
mov
mov
push
mov
roll
add
xchg
sub
mov
stc
mov
mov
mov
leave
push
ds
fists
push
and
pop
mov
jp
fisubrs
movsb
cmp
push
jp
xor
add
les
xchg
jb
and
mov
std
mov
pusha
call
cmp
mov
fisttpl
cmp
in
sub
jbe
xchg
repz
sbb
mov
scas
stos
add
std
out
push
sub
test
fisubrl
sub
adc
ja
lahf
add
mov
pop
push
stos
sub
jnp
movsl
leave
add
cmp
shl
mov
adc
mov
jne
push
pop
xor
and
mov
xlat
push
sbb
jge
cmpsl
fdivrl
jae
test
push
pushf
movsb
xchg
add
sub
add
push
mov
inc
xor
popa
sub
stc
mov
out
inc
add
add
subl
roll
cmc
sub
add
fldz
xchg
mov
push
jp
fwait
scas
lock
mov
lods
outsl
and
ljmp
test
lret
xchg
inc
or
jge
jge
push
mov
adc
sti
js
mov
push
daa
loope
cs
xchg
jg
cmp
pop
mov
add
std
adc
test
xor
push
dec
inc
cli
rcrb
cmpsl
jecxz
sub
mov
add
jge
dec
test
stos
je
jb
loopne
ja
sub
xchg
sbb
jecxz
pop
jno
adc
lds
and
lods
adc
sbb
cld
fstpl
push
call
in
arpl
jb
mov
push
mov
pusha
and
xchg
adc
insl
push
mov
test
fmull
mov
mov
arpl
leave
ss
sti
inc
test
adc
lret
shll
sbb
adc
aas
mov
add
or
cmp
adc
pop
jae
or
pop
dec
or
mov
add
add
roll
inc
outsl
push
mov
mov
rorl
hlt
stc
mov
icebp
pop
les
movsb
dec
cmpsb
ljmp
loopne
lock
out
icebp
xchg
ficoms
test
ljmp
sbb
add
ljmp
das
stos
xchg
js
pop
into
cmpl
test
jo
fcompl
push
mov
lods
iret
mov
mov
ljmp
dec
orb
xchg
jg
and
pop
mov
in
xchg
or
dec
ljmp
addr16
frstor
jl
cmp
in
mov
pop
dec
frstor
sub
or
cs
dec
push
popa
mov
xchg
xlat
mov
repz
jno
fldl
outsl
lahf
test
icebp
outsb
cbtw
sbb
xchg
sahf
iret
pop
xchg
mov
inc
mov
popa
lahf
es
das
sbb
inc
and
adc
xchg
stc
add
add
cmc
insl
cmc
out
lcall
enter
pusha
mov
cmc
add
add
mov
pop
xchg
cmp
ss
sbb
call
adc
in
sbb
fcomps
mov
pop
call
sbb
popf
movsl
testb
loop
cld
pop
out
sbb
test
popa
mov
mov
jae
repnz
mov
or
mov
fmuls
sub
cmpl
and
lods
test
or
loop
xchg
adc
mov
xor
out
mov
cmp
into
mov
push
test
les
cmp
jle
test
or
pop
mov
cmpsb
xchg
pushl
ficomps
jno
add
or
das
rcr
jmp
out
mov
mov
sbb
adc
std
lock
and
pop
jno
pop
or
jecxz
mov
inc
xchg
push
fwait
aad
fsubl
xchg
add
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
mov
sarb
leave
pop
jl
into
push
mov
and
xor
add
mov
push
lds
aaa
sub
in
xchg
lds
and
insb
push
add
sub
nop
adc
adc
rcl
xchg
fxch
enter
std
lea
pop
xorl
pusha
adc
mov
pop
cmc
push
out
loopne
inc
fldt
das
jg
pop
lods
mov
mov
inc
push
add
sub
xchg
xor
test
mov
adc
sub
in
cmp
push
popa
mov
mov
sbb
and
stc
adc
cmp
out
mov
ret
xchg
push
mov
aas
fisttps
jnp
loop
mov
xchg
adc
out
or
pop
mov
pop
repnz
out
dec
ds
cmp
roll
clc
dec
pushf
jg
and
mov
add
add
jle
and
scas
sti
jle
pop
push
pop
stos
adc
add
insl
dec
je
es
jp
data16
add
pop
mov
ficoml
mulb
push
or
decl
cwtl
xchg
dec
jmp
test
sbb
inc
jb
mov
stos
push
mov
push
stos
xlat
scas
enter
sbb
jle
loopne
push
loope
jo
hlt
mov
push
stos
or
jl
inc
fs
pusha
loopne
and
sbb
ja
cmp
in
mov
sub
je
push
jo
iret
mov
push
filds
mov
or
jae
and
movsl
pop
lret
ret
incl
add
xor
cltd
cmp
les
cld
or
fwait
mov
notl
testl
cmp
pop
sub
push
inc
inc
adc
mov
aaa
negl
pop
and
test
fisubs
sbb
add
lahf
fnstcw
ss
lahf
stc
bound
and
add
add
add
sbb
xchg
sbb
jmp
ljmp
push
fmull
jb
lahf
push
fpatan
mov
loope
mov
sbb
das
inc
or
ss
jge
pop
aaa
xor
jp
add
pop
mov
xor
and
jp
sub
daa
in
add
xlat
pop
sbb
insl
pushf
xchg
call
imul
pop
daa
sbb
xchg
lods
hlt
dec
inc
jnp
add
fsubl
cmpsb
repnz
rol
pop
inc
pop
arpl
sub
rorl
nop
lahf
popl
fdivrl
es
scas
push
pushf
stos
scas
loope
pop
cmp
push
adc
mov
adc
outsb
cltd
xchg
mov
sub
jmp
imul
scas
push
pop
call
dec
mov
jecxz
dec
or
and
addb
or
mov
aad
sbb
jmp
xor
add
add
push
jl
jle
insb
out
cs
js
cmp
fildl
add
daa
repnz
cmp
mov
loop
repz
pop
cmp
push
test
repnz
subl
xor
ret
ret
add
push
pop
adc
dec
push
push
in
cmpsb
mov
out
and
mov
push
std
add
roll
loope
enter
sbb
push
sub
inc
pop
out
jns
dec
imul
ret
movaps
jecxz
xor
xchg
mov
xchg
mov
lahf
outsl
call
sbb
adc
roll
in
xor
test
push
js
repnz
fstpl
cmpb
addb
aaa
jns
insb
push
ljmp
dec
jmp
mov
mov
inc
mov
or
stos
test
dec
adc
jl
xor
testb
xchg
lds
daa
sub
cmp
pop
pop
out
xchg
jg
mov
xor
mov
push
outsb
sub
add
mov
adc
in
xor
adc
push
faddl
add
out
or
ja
push
push
xor
jo
addr16
cli
add
xchg
mov
adc
addr16
mov
nop
ret
sti
xor
popa
sub
into
sbbl
sbb
inc
fs
clc
repz
adc
mov
sub
inc
jbe
insb
test
sbb
sbb
das
mov
pop
xor
mov
je
insl
fiadds
es
ret
dec
cmpsl
and
cwtl
jae
push
mov
jo
jno
and
lds
add
mov
xor
out
test
clc
pop
repz
rcrl
lock
cmpsb
jnp
rolb
push
inc
imul
ret
into
popf
fld
fldl
xor
jle
add
aas
mov
or
in
dec
cmp
andb
lea
call
pop
sbb
push
mul
push
ja
cwtl
xchg
push
xor
add
data16
jne
mov
lcall
add
add
ret
mov
imul
sub
icebp
push
js
pop
sub
imul
mov
or
and
mov
xchg
jno
aaa
sbb
daa
sbb
and
dec
jg
stos
xor
mov
mov
cmpsl
mov
sbb
dec
cmp
ljmp
js
movl
dec
aaa
test
stos
jbe
push
jb
enter
adc
xor
pushf
sbb
inc
inc
inc
xlat
adc
je
mov
arpl
hlt
das
cwtl
push
add
jno
lods
cmp
lret
test
shll
sub
shlb
adc
and
sub
scas
dec
stc
mov
xchg
jge
movsb
idiv
sub
jl
pop
add
test
xchg
cmpsb
inc
cmp
sbb
pop
movsl
leave
pop
xor
in
enter
adc
sub
mov
fisubl
jg
insl
mov
sbb
fcmovnb
leave
rcrl
jle
fwait
mov
add
jnp
add
jnp
sti
xchg
lahf
mov
lods
sbb
add
add
sub
stos
xor
mov
cld
cmp
xchg
mov
pushf
lret
add
sub
and
movsb
jno
add
pop
lea
sbb
les
push
add
aam
cmp
dec
xchg
cwtl
shrl
fcmovb
in
lock
fwait
lods
fdivrp
pop
cmp
outsb
xorl
push
addr16
rorl
fwait
push
les
jg
mov
adc
lds
inc
lea
gs
adcb
push
xchg
test
jmp
repnz
jnp
lods
std
rolb
mov
sub
mov
out
aas
cmp
add
cld
and
aaa
clc
je
stc
inc
pop
mov
mov
rcl
pop
xchg
shlb
jl
cmc
cld
xchg
xchg
inc
pop
cs
jbe
inc
push
loope
mov
jns
cmpb
scas
fadds
jge
bound
mov
sti
pusha
adc
fs
add
add
pop
sarl
mov
in
sbb
add
add
movl
dec
xchg
mov
js
add
inc
lock
pop
add
and
cmp
clc
icebp
xchg
outsb
out
cmp
jp
xchg
jne
mov
xchg
outsb
fs
or
fnstsw
ja
mov
mov
fs
mov
pusha
int
push
movsl
das
cltd
insl
adc
add
sti
or
pop
cmpsb
je
mov
fcomps
cmp
and
jb
iret
call
outsb
adc
xor
jne
jne
pushf
shlb
add
movsl
jnp
mov
fdivrp
pop
and
and
xor
ss
adc
ret
push
or
jb
adc
sbbb
xchg
js
pusha
sbb
les
mov
outsl
pop
add
int3
addr16
jne
in
push
dec
pusha
sub
hlt
or
mov
lods
cmp
dec
pop
add
adc
stos
jg
xor
cltd
imul
add
insl
lock
std
repz
cmp
fldenv
loopne
add
push
cmp
pop
movsb
pop
cmp
mov
jae
jbe
pop
lea
fsubs
xchg
pop
imul
jle
inc
xchg
inc
mov
jecxz
or
mov
jne
js
cli
adc
push
cmp
mov
and
iret
test
cmp
fwait
mov
cmp
adc
ret
out
or
sub
mov
push
inc
gs
pop
fld
dec
sarl
and
sub
lret
push
lret
push
pop
mov
xor
cli
pop
push
xor
and
mov
ror
push
xchg
lods
lahf
sub
xor
es
wbinvd
fs
mov
repnz
hlt
test
adc
jle
jno
stos
aas
test
fcompl
es
push
insl
mov
xchg
mov
pop
movsb
mov
jmp
in
cmpsl
xchg
inc
cs
xor
mov
scas
and
mov
in
sub
cmp
arpl
je
ret
daa
loope
add
xor
js
dec
adc
mov
imul
nop
xchg
das
std
stos
sahf
ret
push
inc
ja
daa
mov
popf
icebp
aad
push
sub
mov
dec
enter
xchg
dec
pop
dec
std
sub
int
xchg
adc
pop
hlt
enter
mov
xchg
mov
mov
mov
add
and
imul
mov
fdivr
inc
enter
mov
push
push
dec
pop
and
data16
sbb
adc
sbb
push
std
jb
addr16
shlb
aas
cli
mov
xchg
cmp
sbb
mov
sahf
cmc
jnp
or
mov
mov
mov
test
mov
outsb
mov
and
dec
push
xchg
call
sbb
xor
and
imul
pop
loop
push
fucom
ljmp
add
add
mov
mov
addl
sub
add
add
pusha
inc
cmp
stos
cmpsl
std
adc
pop
cmpsb
pop
push
out
xor
lcall
lret
js
cs
ds
push
or
jno
mov
daa
or
pushf
inc
push
sbb
push
icebp
shl
add
jle
push
push
xchg
arpl
push
adc
into
jb
dec
jae
jbe
mov
stc
cmpsl
mov
mov
cmp
xor
lret
movsl
pop
and
cmp
daa
add
imul
lods
movl
mov
cltd
in
sahf
mov
add
jae
outsl
outsb
loop
mov
mov
mov
xor
pop
cmp
xor
inc
xor
pop
arpl
in
fdivl
add
push
sahf
xlat
fdivrl
push
ljmp
imull
jnp
push
adc
mov
aas
inc
dec
scas
push
and
ret
xchg
pop
mov
pop
outsb
stc
inc
ret
xor
inc
or
push
or
jp
in
xchg
add
add
xchg
in
mov
incl
shll
out
push
xor
add
add
es
leave
mov
add
es
cli
lret
xchg
mov
xor
inc
fdiv
inc
or
pusha
cmp
scas
adc
shl
js
divb
lods
fadd
mov
push
or
push
jmp
cld
shlb
ja
cmp
cld
dec
jg
icebp
fildl
ret
fucom
inc
push
mov
sbb
xlat
rcrb
xchg
or
inc
dec
stos
pop
pop
jle
push
fldenv
test
imul
sbb
fdivs
rorl
mov
out
rorl
xor
cwtl
sbb
fiadds
push
nop
fadds
aam
dec
mov
and
jp
stc
into
ror
jg
lea
cmpl
rolb
inc
mov
and
icebp
shlb
pushf
dec
and
repnz
mov
inc
xor
mov
add
sub
in
negl
sub
movsb
in
aad
in
add
jge
mov
adc
jl
nop
xchg
sub
das
addb
inc
cwtl
jns
les
inc
push
lcall
arpl
stc
pop
test
mov
cmpb
jbe
push
add
jae
scas
jo
jmp
mov
mov
nop
sti
push
mov
xchg
pop
and
in
rcl
inc
jle
dec
mov
arpl
adc
mov
loope
mov
adc
popa
xchg
add
lock
sub
test
push
mov
ret
imul
add
imul
inc
lahf
cmp
mov
mov
pop
insl
mov
sub
sbb
adc
imul
push
xor
fs
addr16
stos
sbb
out
dec
and
pop
aas
arpl
rorb
or
stos
stos
lods
mov
dec
and
cmc
pop
sbb
sbb
mov
xor
add
fistpll
stc
dec
push
fcompl
in
add
test
cltd
icebp
roll
dec
dec
fists
xrstor
jg
fbld
leave
int3
push
adcb
cmpsb
mov
cmpsb
jae
xor
sub
cmpsl
imull
jnp
jno
movsl
lret
pop
cmpb
jge
mov
cmp
sbb
add
sti
mov
andb
adcb
mov
mulps
rorl
cmp
mov
rol
xchg
cmc
movaps
mov
into
dec
imul
and
jns
adc
mov
xchg
jnp
jmp
and
sahf
adc
arpl
jp
xchg
and
pop
cmp
mov
in
xor
dec
mov
scas
fcoms
imul
jecxz
jns
lds
dec
and
mov
pop
dec
movsb
stos
dec
jmp
lock
cmc
or
pop
push
je
xchg
in
mov
jne
inc
jecxz
add
cmp
mov
push
push
push
mov
xchg
inc
out
add
jecxz
imul
fnstenv
pop
adcb
mov
jl
cltd
aad
pop
push
adc
jae
int3
sbbl
mov
popa
mov
jne
adc
shlb
sub
dec
pop
mov
or
or
jns
push
and
pop
xor
psubusw
mov
mov
das
addr16
xchg
mov
jmp
xchg
sbb
jp
and
cmp
lea
inc
cli
scas
setnp
ret
shll
nop
bound
aad
jae
imul
enter
pop
lcall
in
mov
push
pop
insl
imul
cmp
cmp
decb
jg
repnz
je
pop
lods
fldenv
pop
xlat
loopne
mov
pop
sahf
stos
or
xor
icebp
sbb
mov
xor
ret
int3
les
and
push
cltd
adc
sahf
jge
imul
add
out
repnz
add
pop
lcall
les
lahf
mov
inc
out
add
icebp
xchg
mov
pop
push
inc
int3
jo
add
mov
push
mov
addl
out
jp
and
sbb
mov
std
sub
pop
or
mov
inc
mov
int
and
mov
cmp
sbb
add
movsl
sub
in
mov
or
inc
test
dec
xchg
fstps
inc
shlb
add
ja
fnstcw
dec
call
insl
int3
addr16
movl
ss
add
test
jl
fs
push
and
mov
cmpb
and
imul
addr16
ja
cmc
loop
shlb
in
gs
xlat
push
push
mov
or
xchg
xor
cmp
jl
scas
ret
pop
cmp
mov
push
hlt
iret
iret
cmp
mov
frstor
xchg
pushf
leave
and
push
fdivrs
xlat
out
push
add
add
mov
push
decl
shll
add
add
movsb
adc
mov
sahf
lret
xor
pop
in
cmpsl
mov
lea
nop
pushf
loopne
loope
and
or
or
sbb
sub
push
cmpsb
aam
mov
stc
pop
aam
mov
mov
gs
xchg
add
lea
mov
les
dec
mov
mov
aaa
sar
lcall
fldt
push
bnd
mov
addb
mov
and
sbb
mov
mov
jbe
fildl
in
push
sbb
and
cmp
dec
xorb
cltd
add
add
mov
sahf
movsl
pop
lea
fs
cmp
add
cs
enter
scas
dec
pop
inc
dec
pop
ret
cwtl
dec
scas
pop
in
inc
adc
or
and
xor
test
sar
movsl
xchg
ret
or
and
cmp
sti
fsubp
inc
push
sub
inc
dec
jmp
add
pop
jmp
loop
sbb
ja
fwait
and
call
jnp
pop
cld
cmpsb
popf
out
call
aaa
sbb
and
mov
xchg
ss
pop
fcompl
push
pop
mov
or
mov
xor
repnz
cwtl
ficoms
lret
int
testb
and
sub
mov
inc
fistl
and
test
jb
push
sti
aam
scas
sbb
pop
ret
cmp
out
das
xchg
bound
div
mov
jp
ffreep
mov
ja
add
pop
sub
and
rorl
add
vmaxps
sub
int
aaa
bswap
hlt
ficoml
adc
jnp
or
or
call
pop
mov
shrb
mov
aad
xor
mov
cmp
push
sub
popf
add
add
outsb
xor
mov
lcall
ljmp
and
jmp
outsb
sbb
sbb
fsubrl
add
leave
push
or
aaa
cs
xor
push
ljmp
fs
insl
jae
in
shrb
push
popf
sub
sub
sub
dec
jp
sarb
je
js
imul
fwait
lret
insb
xor
incb
jecxz
je
cmp
xor
fsubs
xchg
scas
fdivrl
pop
jne
xchg
push
xlat
or
ljmp
into
sub
cmpsb
dec
xchg
dec
jmp
pop
mov
jmp
bound
es
ja
xor
jmp
ja
mov
shll
mov
iret
in
ja
js
leave
hlt
mov
pushf
fidivs
cmp
mov
mov
stc
push
cs
dec
mov
movsl
cmp
cltd
mov
rcrl
add
pop
sar
jp
mov
sbb
das
adc
adc
or
add
add
inc
ror
lock
jnp
xor
xchg
pop
sbb
add
aam
xchg
in
mov
fisubrs
push
jp
stos
sbb
enter
cwtl
outsb
test
sbb
icebp
les
out
lcall
andb
out
add
dec
leave
pop
fwait
inc
sti
andl
imul
and
xor
xchg
jae
mov
push
inc
inc
pop
std
push
popf
pushf
xsha1
cmpsb
lret
cltd
outsb
mov
pop
in
dec
inc
mov
jb
cwtl
jge
mov
push
jbe
sti
and
pop
push
insb
and
les
or
ljmp
pop
neg
push
pop
out
imul
into
mov
notl
call
outsl
jnp
jecxz
xor
pop
outsl
inc
inc
scas
push
lahf
xor
mov
fistl
lods
outsb
mov
es
je
leave
cli
aad
mov
aaa
push
jg
insb
mov
add
add
repz
fisubs
bnd
pop
in
add
add
xor
adcl
das
cmpsb
jno
lcall
and
cwtl
pop
dec
or
add
jle
jns
outsl
xorb
mov
iret
icebp
inc
andb
aas
or
repnz
ja
adc
jge
inc
in
pop
mov
sub
dec
lock
insb
in
pop
mov
jae
addr16
loop
test
mov
into
xchg
lret
outsl
xchg
loope
dec
mov
out
in
sub
fmul
adc
cs
xor
cmpsb
cmpsb
fs
dec
xchg
cmp
sub
jbe
push
dec
inc
mov
xchg
push
aas
xchg
mov
lret
fs
pop
sti
inc
test
out
sub
sbb
sub
add
loop
mov
sbb
adc
insl
inc
scas
mov
pop
push
sub
pop
loop
fnstcw
aas
pop
data16
add
jg
inc
mov
aaa
sub
out
test
movhps
inc
adc
scas
push
push
xchg
cmpsb
test
shr
add
lods
add
add
out
sbb
aas
imul
arpl
add
add
pusha
ret
lret
hlt
pop
cmp
xchg
lods
or
lea
xlat
les
sub
add
push
and
ds
xchg
pop
call
fiaddl
repz
sbb
push
mov
les
pop
jl
das
mov
push
into
fldcw
test
mov
insb
cwtl
fwait
push
pop
mov
loop
arpl
std
inc
popf
mov
push
mov
popa
mov
test
fiaddl
fsubrl
push
decl
dec
inc
and
push
es
lods
dec
jns
xor
push
cwtl
push
fcomp
insb
insb
lods
pop
movsb
jns
lahf
jecxz
cld
inc
jbe
leave
or
inc
xchg
inc
std
pop
pop
jecxz
jae
rcll
stos
pop
mov
push
ret
mov
push
orl
into
inc
clc
bound
stc
cld
lock
and
sub
push
insb
cmpsl
push
loope
adc
call
shrb
xchg
jmp
leave
icebp
inc
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
dec
stc
nop
loop
jo
xor
cltd
sub
or
jge
rclb
in
mov
cmp
mov
fnstsw
lret
add
mov
les
mov
xchg
or
cmp
mov
ss
fstpt
movsl
mov
xchg
push
aaa
dec
lock
push
cwtl
cmp
dec
ljmp
push
inc
sub
int3
xchg
fcomp
fcmove
int
pusha
popf
xor
lock
adc
push
lea
inc
ljmp
add
jp
mov
cmp
shll
stos
mov
jle
sbb
sar
pop
out
mov
cs
sti
daa
mov
jbe
test
xchg
xchg
xchg
mov
xchg
stc
add
lea
mov
out
iret
mov
sub
push
or
ret
aam
inc
sub
shll
mov
xchg
xchg
out
repz
out
aas
pop
repz
repz
xchg
pop
mov
jnp
in
xor
add
add
pusha
rorb
cmpsb
mov
clc
icebp
insl
out
add
add
mov
jo
cs
sarb
dec
push
add
jg
loope
out
add
mov
xchg
inc
push
mov
jp
ret
push
or
aaa
shlb
jl
push
fistpll
les
jne
ja
les
std
mov
pushf
scas
outsl
jno
call
lret
movsl
jno
add
mov
mov
pushf
ja
mov
jno
sub
xor
xor
into
mov
add
xlat
jmp
movl
sbb
xchg
inc
xchg
pop
cmp
out
sub
sti
pop
imul
pop
lret
loop
jecxz
lds
fidivrl
fdivr
dec
pusha
cmpsl
and
mov
push
add
xchg
mov
pop
test
jae
push
test
ds
jl
icebp
ja
xchg
and
jl
cmpsb
aas
insb
shrb
mov
fwait
out
pop
mov
flds
add
jecxz
push
testl
xor
add
jns
outsl
shlb
lds
lea
mov
cs
pop
pop
push
out
mov
movsb
mov
fisubrs
insl
sbb
lds
lea
push
xor
mov
dec
mov
sbb
rolb
mov
xchg
sub
pop
push
sbb
dec
mov
incl
push
pusha
enter
dec
push
loopne
stos
nop
sub
test
outsb
imul
bound
jp
xchg
xchg
lahf
loop
mov
xor
lods
sub
mov
mov
scas
xchg
pop
sahf
adc
jo
mov
xchg
xchg
xchg
adc
add
inc
leave
jmp
jns
mov
lea
repnz
cmc
fbstp
cltd
mov
das
pushf
movsl
in
push
orb
lock
jb
outsb
sub
pop
push
and
loop
jge
xchg
lock
pop
jg
mov
mov
testl
and
inc
adc
adc
std
test
icebp
testl
add
and
daa
lahf
mov
pop
das
xorb
divb
add
add
out
outsb
rcll
pop
add
xchg
xor
push
sub
adc
xchg
push
jge
outsl
xor
jmp
aam
ja
adc
shlb
std
int3
fsts
fisttps
jp
out
push
dec
mov
cli
mov
inc
call
fwait
adc
jo
psrld
nop
or
cmp
mov
or
mov
dec
mov
adc
adc
incl
cmp
cmovae
out
scas
lahf
insb
insb
fnsave
lret
xor
adc
int3
ret
shl
xor
and
push
or
xor
cld
aas
negb
add
jmp
test
jb
mov
arpl
fstl
popl
js
push
js
cmp
bound
cmp
inc
push
pushf
mov
push
dec
loope,pn
jg
mov
mov
mov
inc
sub
incl
add
mov
fucomi
xor
mov
add
es
std
xchg
repz
cmp
mov
mov
sbb
ret
ret
mov
and
inc
mov
add
pusha
mov
addr16
pop
jl
and
iret
test
mov
dec
test
xchg
dec
mov
or
and
cmp
or
hlt
adc
dec
inc
and
mov
mov
in
jno
out
loopne
push
pusha
add
out
mov
push
sarb
jnp
fisubrs
dec
jmp
mov
shlb
pop
push
loop
dec
pop
mov
dec
jae
jp
aad
sbb
jae
pop
jno
dec
mov
pop
push
jb
fisubs
or
mov
sti
mov
jnp
mov
repnz
std
stos
sbb
addr16
jge
xchg
imul
std
xchg
xchg
or
int3
and
call
cmc
in
sbb
jl
pop
mov
jbe
push
inc
pop
jns
aas
loopne
sub
jle
repnz
add
mov
or
rcrl
fsubs
add
addr16
in
mov
mov
sar
and
xor
ret
pop
shll
xor
xchg
mov
sbb
mov
nop
adc
xchg
mov
mov
mov
daa
add
pop
stos
loop
ret
insl
adc
pop
sub
ret
popa
lds
sub
fst
daa
movsl
addr16
cltd
popf
lea
inc
test
shlb
xchg
mov
jbe
scas
call
inc
jo
mov
or
nop
dec
pop
pop
ror
imulb
mov
add
jp
jge
enter
sub
shlb
mov
mov
push
pop
jne
or
xor
jle
in
add
test
or
das
or
outsl
lds
dec
push
cmp
hlt
add
cmp
add
add
jnp
mov
inc
insb
pop
pop
xchg
add
add
sub
mov
std
cmpsl
and
mov
test
pop
adc
cltd
xor
xchg
sub
cmc
jns
insl
fmuls
pop
sbb
pop
inc
popa
and
push
out
mov
lcall
jns
loopnew
adcb
aas
ljmp
xor
add
sub
mov
add
pop
mov
repnz
add
dec
int3
push
idivl
lcall
lret
inc
stos
push
sahf
lret
pop
dec
fcomi
mov
out
vucomiss
arpl
and
imul
pop
add
sahf
mov
cmp
mov
jecxz
pop
pop
rolb
bnd
jb
test
daa
jmp
into
xchg
ficomps
rcrb
push
push
cld
in
rcrb
dec
lret
mov
dec
adc
aas
jb
or
push
stos
or
add
add
xlat
pop
xlat
jg
mov
lods
mov
add
ds
shlb
imul
mull
mov
int
xchg
mov
jmp
xor
adc
pop
and
xchg
dec
jbe
jne
inc
loope
push
and
mov
int
daa
jle
xchg
lock
mov
cli
dec
add
xor
cli
jne
xchg
jmp
add
nop
jae
cmc
mov
ror
mov
repz
cwtl
lret
test
inc
add
std
jbe
scas
pop
mov
pop
data16
or
pop
decb
cltd
nop
cmpl
arpl
enter
inc
fnstcw
or
inc
sti
imul
inc
dec
push
and
mov
sub
cltd
and
pop
out
stos
mov
std
in
cmp
push
pop
call
ja
int
rolb
mov
in
in
adc
cmpsb
jae
mov
mov
into
mov
out
push
add
add
fdiv
mov
and
nop
testb
add
cmp
scas
out
dec
inc
cwtl
imul
inc
jmp
push
sub
jae
mov
cmp
fcomps
xor
repz
mov
andb
insb
sub
movsb
dec
mov
aaa
movb
mov
sub
cmp
xchg
xchg
or
out
rol
xchg
pop
rcrl
cmpsb
dec
push
stos
mov
cmp
add
out
mov
and
cmp
cmp
dec
frstor
xchg
aaa
mov
lods
xchg
xchg
ficomps
xchg
loope
pusha
jae
fsubs
daa
out
rorb
std
push
mov
fwait
pop
incl
adc
mov
test
or
lds
test
arpl
test
jmp
sbb
inc
fcompl
int3
jl
adcl
mov
or
xchg
jne
sbb
in
outsl
out
xchg
sub
test
mov
mov
add
add
ffreep
mov
cmp
xchg
and
call
popf
add
xchg
std
dec
insb
inc
subl
xchg
xor
push
subb
pop
out
or
jb
dec
xor
jnp
pop
mov
inc
shl
popf
add
sbb
fcomps
push
adc
adc
ss
xor
cli
loopne
mov
mov
sti
xchg
mov
add
leave
pop
imul
test
xor
test
imul
fldl2t
inc
pop
mov
cmpb
inc
inc
mov
ljmp
xchg
fildl
leave
pop
pop
xor
pop
mov
cmp
loop
cmp
xchg
push
dec
sub
clc
test
and
rorl
pop
or
and
sbb
mov
mov
movsl
jg
fldcw
dec
aaa
bound
jae
add
add
push
pop
push
jmp
rolb
mov
add
add
outsb
dec
cmp
adc
cltd
mov
stos
daa
mov
and
cmp
xor
cmpsb
hlt
insb
fisttpl
xchg
jmp
sbbb
adc
repz
mov
imul
dec
jb
imul
or
cltd
push
lcall
mov
imul
xchg
lock
lods
inc
psubsw
mov
and
jl
in
jnp
cmpsl
mov
test
mov
and
repz
adcl
movsl
push
xor
mov
lock
jbe
dec
push
out
shl
ds
arpl
xor
pop
push
jnp
in
int3
lret
insb
shlb
test
jge
cwtl
or
cmpsl
notb
pop
or
movsb
add
xchg
sub
ss
sarb
inc
pop
pop
aad
xchg
sub
ficomps
movsb
stos
popa
and
mov
jle
les
popa
nop
cmp
mov
lret
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
add
stc
add
add
cwtl
cld
xor
movsb
inc
jp
add
mov
fiaddl
jmp
jg
test
add
xchg
jecxz,pn
jae
jae
mov
test
les
loop
jb
lods
and
andl
jmp
add
and
popf
xchg
mov
pop
les
addb
jnp
icebp
sbb
es
ljmp
mov
cld
push
stc
dec
and
in
mov
jmpw
outsb
insl
mov
xchg
out
out
inc
mov
xor
mov
cmc
xor
addl
jns
dec
cmp
pusha
popfw
pushf
sub
imul
repz
call
stos
repz
inc
sub
jno
jp
mov
das
fwait
iret
into
push
mov
xchg
xchg
mov
pop
das
push
jg
clc
push
and
jbe
lods
or
xor
cmc
and
stos
sub
das
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
mov
imulb
sahf
mov
jo
out
sbb
sbb
jl
repz
and
dec
cmp
cld
es
or
add
cltd
or
mov
mov
pop
cmp
cmpsb
or
dec
call
cmc
lahf
sbb
push
mov
or
cltd
sbb
or
ljmp
push
scas
ja
mov
adc
push
add
rol
inc
push
mov
or
imul
push
ja
scas
xor
inc
lahf
xor
push
xchg
int
push
cmp
cmp
cmp
ljmp
mov
sub
idivb
mov
in
inc
movd
and
pop
xchg
jge
clc
scas
fcmovu
mov
pusha
mov
fwait
lods
daa
pop
popf
shlb
aas
stc
cmp
mov
inc
and
mov
lret
and
mov
xor
add
add
aam
int
aaa
das
aam
inc
inc
das
test
add
add
mov
insb
pop
mov
scas
mov
inc
pop
ljmp
pop
leave
test
test
xchg
adc
orb
cmpsb
imul
push
in
repz
mov
shll
sti
sbb
bound
cmpsl
xor
mov
mov
in
call
push
add
lods
push
and
pusha
lret
push
aam
jo
out
sahf
push
out
mov
notb
ret
lock
mov
outsb
lahf
loopne
adc
fistpl
icebp
frstor
sbb
sbb
push
xor
insl
test
mov
enter
pop
int
insb
jbe
movsl
jle
mov
dec
fs
add
cmp
cmp
mov
test
pop
icebp
push
lea
in
inc
sub
xchg
out
push
test
cltd
dec
lcall
shlb
push
imul
idivl
adc
imul
shll
addl
add
pop
arpl
addr16
sub
cmp
add
add
jnp
xor
arpl
or
lods
mov
mov
outsb
cmp
inc
sbb
in
popa
push
adc
movl
push
scas
sti
daa
dec
jg
sbbb
sbb
jp
dec
in
mov
filds
mov
shlb
test
movsl
dec
xlat
fwait
jbe
sbb
mov
cmp
pop
lret
pop
loope
push
inc
gs
xlat
mul
and
pop
jb
stos
fstps
fs
sub
dec
and
imul
mov
inc
dec
adc
push
gs
int
cmp
loop
dec
daa
mov
les
mul
lcall
jg
pop
jmp
les
jne
lcall
xchg
imul
out
push
nop
jb
mov
cmp
sbb
pop
sbb
out
sbb
dec
mov
xor
jne
sbb
and
adc
add
add
out
out
pushl
xchg
xor
fs
sbb
add
jle
stos
into
in
xor
iret
jns
dec
xchg
sbb
repnz
pop
sbbb
cmp
jns
and
dec
mov
sbb
cmc
xor
mov
push
mov
bound
mov
sub
sub
adc
aas
test
jno
and
sbb
mov
cmp
cmp
pop
xchg
test
xchg
push
jbe
es
fstpl
and
and
push
out
jne
xor
aad
stc
cmpb
cld
iret
sub
push
test
mov
xchg
nop
cld
popa
out
mov
or
imul
dec
jmp
into
lods
sub
movsl
enter
sub
mov
push
loop
mov
or
sub
cmp
xchg
cli
mov
out
xchg
repnz
outsl
stc
cli
lahf
out
inc
cmp
push
dec
sub
adc
jl
dec
push
pop
or
pop
add
add
push
scas
mov
test
push
mov
add
add
jno
nop
shll
jecxz
iret
xchg
andb
xor
dec
fstp
imul
test
xor
or
dec
mov
fs
insb
scas
mov
add
or
imull
cwtl
mov
rorb
mov
mov
cmp
xor
leave
pop
xor
jle
push
bound
inc
jno
xchg
ja
sub
stc
mov
jne
mov
aam
and
hlt
add
and
stc
and
repnz
pop
fnsave
sub
add
addb
add
rcl
pop
cs
or
fmuls
movsl
int
dec
or
push
mov
roll
xchg
sbb
sub
sbb
in
test
push
test
adc
cmp
sub
in
xchg
sarl
pop
mov
add
add
xchg
and
movsl
mov
mov
mov
sti
aas
mov
add
add
push
jmp
mov
mov
dec
xor
call
sub
nop
jge
jmp
repnz
jg
bound
and
push
mov
xor
movb
push
pop
mov
inc
in
stos
and
sahf
dec
mov
mov
out
dec
ss
fistpl
hlt
incl
cmp
sub
lock
cmp
ficompl
mov
inc
mov
pop
sub
jnp
jbe
mov
leave
es
fs
leave
push
iret
mov
call
push
in
jo
jb
shl
push
jne
dec
sbb
icebp
xor
cmp
shll
pushf
lahf
ficompl
mov
mov
scas
xchg
sub
push
inc
test
out
dec
mov
shl
jno
add
pop
jb
adc
addb
outsl
enter
sub
hlt
ss
xor
add
jne
inc
xchg
push
inc
lock
sbb
fs
lret
add
fdivl
mov
mov
add
add
cld
insb
cmp
popf
imul
adc
lret
nop
cs
shlb
int3
or
cmpsb
fstps
push
mov
movsb
jo
xchg
mov
jnp
shl
push
mov
cltd
aam
clc
or
jae
repz
jne
mov
ljmp
test
mov
daa
or
addl
push
cmpsb
insb
push
add
mov
sbb
xchg
xor
shlb
das
shlb
sarl
jae
mov
adc
in
cmp
mov
lret
pop
mov
adc
xchg
sbb
inc
repnz
jns
or
popf
shll
pop
test
inc
cmpsb
sbb
lret
mov
aas
insb
mov
inc
gs
icebp
rolb
inc
xor
and
inc
push
div
lret
pop
jne
test
mov
enter
sbb
mov
inc
add
add
mov
mov
lods
imul
mov
push
test
add
add
xchg
arpl
lods
outsl
mov
xor
sbb
push
arpl
mov
mov
mov
jmp
std
and
enter
jge
and
push
mov
out
outsb
insl
into
pop
push
cld
fsubl
push
and
pop
cmpsb
dec
xchg
pop
sub
jb
jl
mov
pop
scas
pop
mov
sbb
sub
loopne
sbb
cmpl
push
fs
stc
adc
sbb
adcb
std
jmp
cmp
dec
mov
out
test
adc
mov
lock
mov
ds
imul
sbb
ss
inc
out
mov
pop
xchg
sub
push
lahf
sub
arpl
xchg
lcall
push
scas
pop
syscall
aaa
je
inc
je
push
jmp
push
add
cmp
addr16
sub
test
xchg
adc
fstps
aad
hlt
jmp
lds
arpl
js
filds
add
xchg
sub
scas
or
cmp
lcall
add
lret
fistps
push
pusha
mov
cmp
js
subb
sub
out
mov
std
pop
mov
fistpl
or
jmp
cld
mov
push
call
mov
ficompl
es
imul
lds
cmpsb
add
xor
mov
jns
pusha
push
rcrb
mov
iret
push
inc
add
mov
xor
jae
fldcw
subl
xchg
sbb
lcall
push
subb
cmpsl
decb
xchg
jge
add
outsb
fldenv
xchg
movsl
in
pop
aaa
mov
sub
lds
adc
iret
leave
push
movsl
inc
popf
jp
pop
int
insl
pop
jecxz
not
fdivrl
les
out
jb
dec
sbb
pop
jecxz
adcl
mov
out
xchg
xor
or
mov
lea
and
test
lahf
movsb
addl
add
hlt
fbld
ret
roll
add
add
mov
adc
faddl
in
adc
or
in
outsb
mov
popf
test
scas
test
mov
cld
mov
jb
bound
add
lds
pop
data16
push
xor
push
out
aam
cltd
into
addl
jmp
stos
pop
mulb
outsb
nop
mov
or
scas
or
jne
mov
add
dec
sti
movsb
mov
gs
cmp
mov
sbb
push
arpl
inc
insb
push
loopne
fiadds
mov
addr16
or
sbb
jne
mov
jae
mov
or
ja
adc
pop
add
mov
cmp
ds
mov
lock
adc
sti
cmp
ss
testl
repz
xor
aaa
es
fcomps
dec
addl
add
into
fwait
add
mov
add
add
incb
add
jge
inc
pusha
movsl
jge
aad
addr16
cmp
dec
jne
popa
cmp
jae
in
add
and
sti
sbb
cmp
ffreep
lcall
leave
ret
mov
repnz
cmpsl
push
loope
mov
movsb
lods
xchg
icebp
popa
gs
sbb
out
into
and
mov
fwait
dec
pop
cli
pop
add
sbbb
xlat
push
and
push
iret
sarb
ss
fcomip
jp
je
xchg
movsl
xchg
mov
fdivl
push
push
and
or
fisttps
scas
mov
fwait
sub
mov
mov
jle
nop
icebp
mov
push
scas
mov
test
andb
mov
rorl
loope
dec
mov
push
mov
mov
mov
sbb
clc
imul
repz
jo
jo
call
daa
add
add
xor
mov
pop
sarb
in
repz
push
fildl
add
leave
das
data16
inc
aad
push
dec
andl
lea
xchg
push
out
adc
aam
push
out
pop
or
pop
ret
pop
enter
and
popf
out
inc
mov
pop
adc
xchg
xor
or
inc
xor
jg
jmp
sub
shr
jmp
imul
subb
std
dec
jne
stos
lcall
xchg
xor
addl
xor
cmp
inc
pop
sarl
test
test
xor
nop
xchg
ret
dec
outsb
adc
inc
jns
in
sub
imul
mov
xchg
orb
jne
lret
push
out
lea
xor
sti
loopne
push
inc
pop
movsl
sbb
mov
sbb
aas
mov
xchg
pushf
or
pusha
movsl
decb
scas
sub
scas
jns
or
dec
leave
jp
fidivrl
cmp
repnz
subl
add
sti
inc
out
aas
mov
rorb
push
add
add
mov
test
dec
cmp
or
push
neg
pop
fisttps
int3
jo
loop
test
push
outsl
mulb
mov
push
mov
fcmovbe
xchg
ret
or
dec
mov
mov
push
jle
scas
test
cmp
push
cmpsb
notl
jae
push
subl
sahf
and
mov
mov
rcll
out
es
arpl
insl
pop
in
leave
addr16
dec
subb
gs
adc
inc
loop
pop
fwait
push
fcmovb
lock
adc
mov
mov
ljmp
or
adc
repz
mov
and
sbb
or
dec
cmp
fs
fstps
jbe
outsb
cmpb
xlat
push
dec
lea
mov
popf
mov
and
outsl
mov
call
mov
add
add
bnd
dec
leave
and
xor
add
add
and
addl
inc
pop
mov
ds
mov
mov
negb
sbb
mov
clc
xor
shrl
mov
pop
mov
push
pop
push
scas
push
stos
mov
mov
pusha
fdivrl
and
xorl
call
outsl
inc
push
or
mov
mov
jl
pop
mov
inc
jmp
ljmp
xor
adc
mov
cmp
dec
pop
sub
aaa
cmpb
test
cltd
int
inc
lret
sub
xor
jb
add
push
fwait
sarl
and
sub
cmc
xchg
cmp
mov
lahf
xchg
insl
ret
sbb
xor
sbb
leave
add
int
pop
pop
pop
jmp
mov
jnp
mov
xchg
push
fists
in
xor
mov
xorb
cmc
into
enter
bound
jns
loopne
add
sbb
in
out
ja
filds
ljmp
add
imul
mov
movsl
xchg
jmp
andb
aad
fistpl
fisubrl
aam
imul
cmc
shl
xchg
mov
xor
movsb
aad
mov
jo
and
pop
jae
out
in
or
mov
pop
push
jecxz
xor
mov
inc
xor
or
filds
sub
pop
add
cmc
in
jg
xlat
mov
sub
adc
popf
and
cmp
imul
cwtl
and
and
mov
adcl
pop
ja
add
mov
dec
mov
fcomip
sub
pop
pop
subl
sub
mov
test
out
stos
jne
lcall
inc
add
jb
push
cwtl
cmp
jo
inc
les
mov
dec
pop
fsubp
jmp
mov
int3
in
scas
mov
add
fisubrl
push
aam
sub
pop
add
jo
add
add
pop
in
inc
push
or
or
add
dec
cmc
fcmovb
jnp
pop
cmp
les
mov
fildl
enter
daa
out
pop
push
iret
add
inc
pop
ret
ret
mov
mov
cmp
and
mov
push
inc
gs
push
jbe
mov
pusha
inc
lret
cli
sub
mov
in
decl
add
mov
cmp
cmpsl
or
js
add
pushf
sbb
pusha
into
scas
das
jmp
jge
pop
clc
int
dec
xchg
in
int3
rorb
push
add
aas
xchg
mov
shl
mov
shrl
stc
and
mov
fwait
xchg
inc
rclb
add
iret
mov
data16
and
sbb
adc
lods
jmp
or
out
loopne
jns
sbb
jg
xor
fnsave
loopne
mov
pop
rcrl
xlat
shlb
mov
jg
neg
pop
daa
inc
test
or
add
les
aad
shll
sub
mov
fdiv
cmp
dec
mul
jne
enter
xorl
xor
jp
push
scas
mov
dec
mov
imul
xor
cmp
jno
sbb
xchg
dec
fisubrs
iret
lods
pop
ret
push
cltd
insl
xchg
loope
sti
lods
addr16
mov
sub
mov
test
add
daa
mov
jmp
hlt
pusha
sbb
mov
nop
iret
xchg
push
add
data16
test
in
xor
sbb
cmp
sarl
inc
dec
mov
dec
and
aas
fmuls
out
sub
mov
or
adc
testb
in
gs
js
out
pop
mov
repz
sub
push
xchg
mov
hlt
push
loope
xchg
aas
lods
imul
mov
add
add
sti
jg
cmp
je
imul
add
mov
or
mov
jge
out
mov
jge
push
sub
enter
sahf
jmp
imul
orl
movsl
and
pusha
mov
mov
pop
aaa
sub
aaa
faddp
dec
dec
jp
dec
rcrb
lods
lret
mov
iret
mov
dec
cltd
push
imul
stc
scas
cltd
sub
jns
lret
or
loopne
stos
xchg
adc
fsubl
ja
ror
push
cmp
bound
dec
or
mov
das
xchg
test
shl
cmpsb
insl
mov
or
jge
out
pop
mov
push
or
mov
add
std
cltd
jo
loopne
out
sbb
xchg
or
cltd
mov
ss
lret
pop
pop
aas
and
mov
lods
lock
push
inc
inc
lods
loopne
jge
mov
mov
pop
jmp
and
shl
xchg
pop
fcomp
loop
dec
fsubrs
add
add
jnp
fstp
fcompl
testl
add
out
cmpsb
mov
sbb
aam
xchg
scas
adc
cwtl
stos
aas
xor
mov
sub
cmp
je
dec
insb
xor
loop
add
mov
outsb
inc
xor
sub
lret
imul
aad
pop
test
jb
push
add
test
jnp
imul
xor
ja
push
aas
push
mov
aam
loope
rcr
leave
hlt
mov
ds
push
and
sbb
outsl
jle
sti
or
call
push
rolb
jb
mov
pop
imul
jl
mov
icebp
xor
out
mov
xor
js
mov
jae
inc
inc
leave
sbb
push
aam
mov
xchg
cmp
mov
lea
push
daa
lret
or
dec
shrb
xchg
hlt
lahf
aaa
sbb
add
fcomip
adc
adc
adcl
in
sbb
mov
jno
std
outsl
mov
add
call
add
add
add
add
xchg
leave
adc
loope
rorb
mov
loope
cmpxchg
and
push
movsl
xor
dec
repnz
mov
repz
loopne
mov
outsb
sub
or
shl
mov
lock
jmp
in
gs
sbb
loopne
add
test
mull
scas
xchg
icebp
add
mov
push
jl
ss
std
sub
or
pop
dec
lahf
sbbl
dec
mov
push
sub
inc
xor
in
in
call
stos
mov
dec
mov
sub
aam
or
inc
jo
push
sbb
jg
fcoml
mov
divb
xor
testb
inc
or
int
ret
ljmp
push
and
cld
loop
xorb
int3
push
dec
xor
ljmp
pushf
les
data16
add
lret
out
hlt
clc
or
shlb
cmp
xchg
mov
add
sub
adcl
add
add
jmp
fstl
mov
add
add
in
adc
sub
or
mov
ds
jae
sub
dec
add
dec
dec
cmc
call
jmp
inc
js
mov
and
sub
xchg
push
xor
adc
pop
mov
mov
push
fmuls
mov
in
jmp
mov
pushf
or
jecxz
dec
repz
pop
negl
jecxz
sub
mov
pushf
les
fnsave
fadds
mov
rcrl
mov
xchg
leave
outsl
add
mov
jne
out
mov
jb
push
mov
std
aad
jo
adc
lock
movsb
popa
int
dec
enter
aaa
xchg
jae
push
insb
incb
jnp
jb
sbb
aas
push
cmc
loopne
push
mov
ja
sarl
mov
push
repnz
and
mov
les
xchg
fisubs
mov
sbbl
cmp
es
jg
add
xor
xchg
lds
rcll
mov
add
int3
bound
fidivrs
ljmp
mov
lea
push
push
or
stos
adc
and
xlat
bnd
test
sub
cli
inc
xor
test
xor
cmp
mov
cld
xor
cli
and
ja
cmc
jns
jg
jg
adc
jb
sub
jmp
mov
dec
sbb
inc
pop
call
pushl
fstl
push
pop
mov
inc
loop
jmp
cltd
mov
dec
sar
ds
ljmp
pop
adc
sub
mov
ret
dec
into
mov
mov
jle
sahf
hlt
cwtl
mov
insb
out
push
mov
xchg
iret
mov
cmp
out
and
mov
pusha
jecxz
sbb
into
xchg
cmp
pop
jge
sbb
ja
sbb
fimuls
imul
test
lods
fisttps
add
add
cli
inc
jg
int
xchg
lods
or
out
xchg
adc
add
add
mov
mov
out
jnp
popl
pop
jmp
cmpl
jg
jp
push
adc
rolb
jl
jge
roll
or
dec
lock
xchg
xor
cmp
inc
scas
loopne
push
popa
sbb
dec
cmpl
aas
jnp
fs
mov
or
mov
hlt
dec
enter
inc
mov
inc
jmp
les
sarl
xchg
push
sti
dec
testl
arpl
jae
lea
fimuls
fiaddl
add
into
into
inc
mov
jo
pop
outsl
mov
flds
ficoms
loopne,pt
enter
xchg
ljmp
sbb
jb
mov
in
jae
push
rclb
leave
mov
ds
sub
xchg
loopne
je
pop
add
or
inc
in
and
xor
add
add
xchg
std
cmp
jle
fistpll
fisubl
pop
ret
add
add
jns
add
fcom
jecxz
or
sbb
jae
movsb
stos
or
push
test
pop
inc
xor
xchg
mov
add
shrb
popa
add
sub
xlat
and
sbb
xor
out
cli
sub
js
in
rcll
mov
in
icebp
and
mov
xchg
add
fadd
in
push
aam
adc
pop
movsl
jnp
jle
fidivs
mov
lea
mov
mov
jnp
scas
mov
idivl
jl
fisubrl
adc
push
je
sbb
addr16
push
dec
jo
out
sub
jecxz
lods
negb
in
mov
mov
loopne
ljmp
mov
lock
or
mov
stos
mov
int
dec
add
xor
and
call
clc
add
add
iret
xlat
ficompl
inc
addr16
dec
sbbb
add
loop
xchg
gs
xchg
adc
fistpl
jge
sub
sbb
test
lcall
or
sti
test
jmp
nop
das
xor
loopne
dec
bound
jp
pusha
ret
ljmp
repz
and
jb
dec
mov
xchg
repz
adc
rorl
es
jo
dec
and
add
jb
cwtl
cmp
popa
outsb
cli
dec
out
xlat
push
rep
cmp
push
out
decl
adc
lock
add
je
jecxz
fmull
mov
sti
inc
xchg
mov
sbb
loope
jp
mov
cmp
call
pop
sub
lea
fadds
dec
mulb
pop
add
ja
lods
loopne
pop
fdivr
hlt
shll
in
fcmovne
loopne
outsl
inc
mov
adc
pop
loop
xor
push
icebp
dec
pop
int3
jmp
dec
push
das
jge
push
add
add
sub
iret
outsb
jmp
push
test
sub
add
add
cmpsl
mov
imul
les
mov
push
popf
popl
mov
into
push
stos
loope
mov
push
in
ret
adc
mov
outsl
and
sbb
mov
add
sbb
cli
add
ds
mov
mov
gs
enter
fldl
fs
rcll
xchg
xor
xchg
ss
arpl
outsl
push
in
mov
test
mov
fadds
or
jno
loope
cmpsb
clc
and
jno
aaa
in
inc
or
mov
and
vcvtsi2ssl
xor
sbb
cmc
hlt
mov
inc
jb
pop
mov
ret
mov
and
bound
loop
and
test
movsb
in
dec
pop
dec
mov
xchg
pop
rolb
loope
sbb
add
sbb
std
sbb
stc
cld
or
sbb
pusha
and
add
popa
adc
xchg
pop
fs
sbb
sub
cmp
cmp
insl
mov
imul
add
or
sub
hlt
insb
pop
push
movsl
mov
je
shlb
hlt
mov
push
movsl
insb
or
xchg
sub
mov
lret
loope
inc
mov
xchg
rep
lret
jmp
or
shll
dec
ret
in
rolb
add
dec
lods
mov
insb
or
xchg
inc
sub
push
js
fisttpl
xorl
roll
scas
loopne
mov
push
sub
mov
mov
mov
push
cmp
cmpsb
mov
pop
and
jae
xorl
xchg
xor
cld
in
mov
pusha
enter
jnp
incb
ds
cmp
or
hlt
jge
push
mov
xchg
pop
mov
in
mov
incl
add
negl
adc
pop
xchg
cmpsb
xchg
jae
jne
push
add
add
adc
maxps
sbb
mov
adcb
push
je
je
mul
sbb
mov
mov
cld
sub
sbb
out
add
dec
add
inc
jno
pop
mov
xor
sub
mov
hlt
push
xlat
rclb
in
clc
mov
adc
loop
aad
fwait
ss
in
xchg
ds
addl
into
rorb
xor
cs
cmpsb
push
iret
jno
stos
jecxz
cmp
movsl
pushl
arpl
add
jl
je
add
outsb
mov
dec
xor
int3
jae
adc
xchg
scas
fldenv
int3
aaa
gs
stos
cli
add
mov
mov
and
dec
or
xchg
test
imul
ror
loope
xor
push
xor
sub
xlat
inc
mov
xchg
js
btr
mov
aam
sub
sbb
add
add
dec
pushl
adc
xor
xor
add
add
popf
ror
cld
popa
cmp
pop
icebp
push
test
mov
scas
jbe
mov
pop
sti
adc
mov
loope
push
adc
outsb
sbb
or
jp
mov
mov
iret
daa
dec
xchg
cmpsb
push
pop
mov
xchg
jmp
xchg
sub
and
popa
inc
lahf
inc
xchg
jno
pop
and
push
lcall
sbbb
sarb
mov
jle
inc
mov
and
incb
insl
push
dec
mov
jns
sbb
jecxz
mov
sub
sbb
jmpw
nop
cli
xchg
das
ljmp
mov
cwtl
mov
repnz
mov
adc
ret
movsl
out
stos
andb
inc
lods
dec
sub
inc
sbb
insb
jg
daa
ret
pop
push
out
cmp
dec
push
and
mov
inc
sub
add
pop
sub
inc
ja
pop
aas
dec
push
push
outsl
xor
add
add
cs
jbe
and
fidivs
sbb
imul
fdivrs
adc
jle
jo
xchg
inc
cld
in
notl
fwait
mov
mov
arpl
jmp
mov
test
xorl
sbb
popa
mov
ljmp
sub
loopne
lcall
mov
jne
movsb
add
loop
pop
push
and
jb
inc
aam
or
ds
fs
add
mov
add
addr16
dec
sbb
test
xchg
loope
dec
mov
pop
mov
sub
cltd
in
ss
sub
scas
or
shll
push
adc
aaa
sub
jg
add
sti
aad
shl
push
jecxz
lahf
fwait
hlt
inc
add
sbb
lds
mov
jp
mov
push
ret
xchg
or
xlat
cld
int3
xchg
xor
xorb
add
add
xchg
jae
ja
div
mov
cld
inc
and
add
loopne
cmpsb
jns
out
lcall
mov
mov
push
push
mov
pop
mov
cmc
outsl
mov
cmc
test
mov
ret
loope
addr16
hlt
dec
or
inc
mov
sar
and
sub
fidivl
cmp
mov
xchg
push
mov
out
mov
xchg
mov
pop
les
adc
mov
adc
movl
sbbb
sbbb
xor
into
mov
xchg
push
int3
ret
mov
sahf
ret
add
dec
xor
jge
dec
lods
ds
in
call
les
pop
jns
xor
into
ror
mov
cmp
aam
mov
mov
sbb
dec
les
shll
mov
xor
jo
mov
fsubs
sub
int3
sbb
dec
call
sub
test
push
lcall
add
xor
cli
std
jg
push
pushf
dec
mov
sbb
add
sbbl
cmc
test
pop
lahf
jge
lods
jo
lds
lret
sahf
out
dec
cmpsl
xchg
insb
sbb
mov
push
rcl
pushf
jge
push
mov
push
ficoms
fmull
push
xor
lds
sbb
daa
mov
std
xor
sub
xchg
lods
jl
es
ja
mov
dec
jl
cmc
cli
sbb
pop
xchg
mov
mov
mov
stos
call
cmp
leave
jecxz
mov
add
aas
and
js
fsts
inc
jne
inc
adc
dec
imul
popf
and
mov
movsb
dec
push
es
mov
popa
loop
add
push
mov
fidivl
mov
sahf
jo
addr16
test
dec
push
jg
pop
mov
in
push
push
sbb
imul
jg
inc
std
jae
dec
mov
xchg
stos
adc
lods
sbb
add
add
add
mov
std
incl
sbb
lea
add
arpl
int
mov
adc
mov
insb
inc
jae
dec
and
popf
ficoms
add
std
cli
repz
lods
xchg
or
stos
push
andb
adc
push
test
inc
push
nop
jbe
ds
mov
test
adc
push
xchg
mov
movsl
push
mov
cmpsl
fs
sub
loope
mov
or
pusha
aas
dec
lds
sbb
pop
rorb
shl
mov
sub
and
lods
mov
jmp
ds
shll
stc
mov
xchg
stos
adc
es
rcr
mov
fldt
and
subb
sub
ret
dec
rclb
or
incl
pop
sub
aad
mov
cmp
mov
pop
or
or
or
add
push
es
jg
pop
or
xor
cmp
add
xchg
mov
or
loop
pop
rcrl
sub
xor
mov
js
das
data16
dec
xor
pop
lret
mov
dec
dec
inc
add
mov
mov
outsb
popa
adc
out
cli
cmpsb
das
pop
xor
repnz
mov
mov
outsl
sti
rorb
dec
out
jns
cmc
aad
and
movsl
pop
fwait
aas
xlat
aam
cltd
je
mov
ret
arpl
les
mov
or
push
jl
inc
stos
in
int3
aam
push
test
inc
cmp
add
push
les
mov
fcoml
sub
mov
shll
test
repz
sub
jle
dec
shrl
rorb
sbb
scas
pop
test
sahf
ss
pop
sub
ss
mov
add
add
or
dec
push
cmp
sbb
add
es
rorl
dec
inc
popf
cmp
cmpb
or
insl
cmpsb
or
push
xor
add
mov
mov
xchg
sbb
xchg
arpl
cmp
sub
popa
add
add
and
inc
in
es
and
lret
sbb
ficoms
fnstsw
add
pop
mov
jp
adc
mov
call
sub
out
sub
mov
mov
sub
mov
sub
les
mulb
pop
jne
add
lret
jmp
cmp
add
lds
mov
xor
xchg
pop
mov
xor
sbb
mov
fistl
mov
inc
mov
cmpb
lahf
or
aaa
ret
dec
lods
jae
daa
jge
out
and
rcrb
and
cli
push
fldcw
adc
xchg
into
mov
pop
ljmp
repz
cltd
pop
sbb
xchg
add
add
stc
lods
xor
mov
hlt
push
push
add
add
inc
sahf
push
lret
mov
std
fnstcw
adc
cmc
jo
push
out
and
cmp
jl
inc
cli
pushf
jns
dec
adc
xchg
nop
lahf
push
inc
dec
fisubl
popa
subb
jecxz
ljmp
mov
fisubrl
subl
inc
pushf
out
and
testb
push
movsl
cmp
xor
mov
add
push
adc
jp
push
sbb
sub
jno
or
dec
lahf
and
rorl
mov
add
outsl
mov
inc
movsb
sbb
lock
inc
test
xor
jbe
push
fimuls
fbstp
dec
gs
jl
enter
loopne
pop
adc
jb
pop
out
in
sbb
jbe
mov
or
addr16
test
pop
mov
inc
pusha
pop
sahf
loopne
sub
xor
imul
sub
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
test
ret
pop
cmp
sarb
mov
mov
loopne
sub
push
out
push
loope
adc
pop
lods
or
in
stc
and
lret
cmp
or
out
cli
inc
imul
mov
repnz
shl
fisubrl
loope
mov
add
dec
sub
fcomps
sub
xchg
push
dec
dec
sarl
push
sbb
adc
bound
sub
sub
mov
das
daa
xor
ret
jnp
icebp
jle
jg
imul
inc
fcmovne
mov
push
psllq
outsl
nop
push
arpl
fs
imul
stos
mov
sbb
mov
xchg
dec
pop
mov
mov
daa
cmp
insb
mov
jg
inc
dec
rclb
fadds
mov
push
add
push
or
arpl
inc
lahf
movsl
sbb
sbb
pop
jle
jns
pop
add
add
in
out
stos
jge
or
insl
pop
and
add
mov
inc
ret
in
stos
insb
daa
in
xchg
mov
sbb
repz
jmp
cmp
sub
mov
rclb
jbe
cmp
add
sar
mov
pop
or
xchg
pop
jno
movsb
fmuls
xor
mov
jo
mov
mov
in
jle
arpl
sahf
and
mov
push
mov
pushf
xor
mov
jno
shlb
imul
mov
cmp
xchg
push
mov
fimuls
push
xor
cld
and
in
jmp
dec
ror
mov
push
ret
sub
jns
clc
jb
imul
inc
xor
lahf
cs
dec
jb
adc
jge
aas
imull
cmp
arpl
add
mov
pop
or
push
shll
in
mov
popf
cmp
jne
add
out
notb
dec
pop
or
lret
add
sbb
out
xchg
iret
push
aas
sbb
xchg
add
add
mov
repz
aam
push
outsl
mov
hlt
stos
pop
or
rcll
int
mov
add
or
and
inc
xor
nop
xor
icebp
test
mov
adc
xor
mov
lahf
es
inc
xor
pop
daa
push
cmp
test
and
and
cmp
lret
arpl
enter
mov
mov
dec
cltd
rcrb
add
and
addb
cmpsb
cli
fadd
in
imul
fwait
shrb
pop
iret
add
ds
clc
or
lcall
push
jo
mov
xchg
pop
push
or
jno
aas
xlat
xchg
xchg
stos
mov
jecxz
inc
mov
cmpb
ja
push
or
out
hlt
sbb
insb
lret
xor
call
push
popf
or
push
xchg
dec
lahf
repz
adc
inc
lret
add
aam
add
cmp
out
loope
jns
test
sbb
add
add
fisubs
ja
add
mov
test
or
loope
and
dec
addl
in
xchg
imul
cmp
push
xchg
mov
dec
arpl
xor
adcl
outsl
repz
sbb
xchg
lods
mov
ja
push
lock
adc
sbb
fidivs
pop
imul
jae
cltd
shll
insl
lea
outsb
cmpsl
inc
jge
aaa
push
and
cmpsl
popf
hlt
sarb
enter
mov
jne
lret
dec
or
mov
adc
cltd
shlb
dec
add
mov
in
mov
call
pop
or
test
jg
cmp
in
into
add
dec
or
mov
fimuls
push
sub
stc
into
test
mov
push
jecxz
out
dec
dec
sahf
push
fs
and
loope
stc
cmp
out
mov
push
mov
inc
pop
movb
add
lods
jg
push
mov
adc
add
shl
insl
notl
add
cwtl
lods
push
mov
sahf
jmp
cld
add
cmpb
xchg
xlat
int
push
fcoms
popa
out
cmc
outsb
in
scas
or
popf
pop
and
push
test
iret
je
xlat
addr16
arpl
ds
adc
mov
ret
xor
or
loope
xchg
cld
xor
push
push
sbb
cmp
jl
fucomip
mov
dec
fucomp
or
negb
sbb
int3
orl
aas
stos
or
outsb
insl
ja
out
test
stos
test
lret
test
pushl
mov
outsb
out
xor
js
xlat
sbb
xor
loope
js
mov
mov
and
repnz
mov
shrl
mov
out
pop
cwtl
add
jp
and
mov
add
leave
xchg
data16
repz
loop
inc
or
inc
stc
add
add
jg
cld
ret
add
adc
jne
and
add
push
cmp
dec
sub
add
inc
xor
jo
out
cmp
cmpsl
aaa
cmc
lock
or
xor
xlat
ja
cmp
add
mov
add
int
enter
and
inc
iret
mov
push
mov
push
pop
sti
add
mov
mov
cmpsl
mov
sar
lret
cs
rcll
dec
in
inc
mov
lcall
stos
xor
loop
movsb
dec
sub
jmp
adc
mov
mov
push
iret
push
mov
add
push
std
aaa
and
sub
mov
mov
mov
jb
mov
insl
mov
sbb
mov
mov
xchg
inc
sahf
pop
mov
pop
jno
add
ds
cmp
es
xor
mov
pop
xor
push
leave
pop
in
pop
lcall
cmpsb
sarl
ret
arpl
daa
das
dec
popf
dec
mov
mov
cmpsl
add
add
mov
iret
mov
jl
ret
and
add
data16
adc
pushf
lds
and
pop
push
dec
int3
loope
cmp
cmp
in
xorl
add
and
sub
push
adc
sbb
arpl
fstpl
hlt
cmp
jo
add
mov
test
mov
mov
xor
test
insb
xor
insl
adc
rcr
enter
mov
lcall
mov
out
lock
add
fsubl
test
cwtl
push
ljmp
adc
cmc
mov
leave
pop
inc
aad
push
hlt
lahf
les
lcall
sti
cmpsb
xor
test
push
in
call
pop
xchg
repz
fsubr
fbstp
jae
adc
js
cmp
mov
outsl
in
dec
js
test
test
daa
shrl
icebp
dec
add
push
stc
inc
mov
add
or
jg
arpl
and
sarl
add
add
loope
andl
mov
add
and
out
pop
xchg
inc
loop
mov
push
das
pop
mov
cmp
cltd
sbb
pop
cmp
push
loop
sbb
pop
dec
mov
mov
xchg
mov
mov
fwait
mov
gs
js
push
xchg
xor
int3
xor
mov
push
fucompp
cs
addr16
mov
jmp
sbb
dec
fdiv
sbb
jmp
sub
push
movsb
sbb
mov
popa
out
pop
adc
popa
or
test
mov
fistpll
xchg
mov
fisttps
cmpsl
std
push
adc
jb
imul
lods
lods
test
mov
lods
fcoms
sti
push
pop
or
mov
jecxz
adc
cmc
jl
push
mov
data16
mov
insb
sub
shlb
cli
clc
cli
clc
sarb
sti
mov
imul
fwait
aad
fadd
neg
fimull
mov
cmp
movsb
and
cmp
push
outsl
pop
mov
mov
jl
xchg
sarb
scas
xchg
enter
mov
jnp
jae
pop
push
ret
adc
lret
cmp
add
inc
push
inc
lds
adc
cmp
js
and
mov
fimuls
test
and
lods
popl
iret
cs
jns
xchg
xchg
lea
fistps
xor
divb
test
pop
lea
inc
test
mov
and
or
js
loope
pop
mov
pop
movsb
fnstcw
xchg
pop
push
push
out
dec
sti
call
add
std
insb
mov
ds
int3
mov
gs
jne
pop
mov
in
call
push
out
andl
mov
lret
lds
insl
pop
jnp
mov
insb
stos
add
add
test
imul
mov
jb
test
add
add
orb
lds
cltd
dec
daa
jo
std
icebp
out
les
aaa
or
mov
in
mov
cltd
mov
jecxz
pause
mov
pop
cmp
sti
test
pop
mov
out
orb
or
add
in
lds
aad
cltd
daa
xor
cwtl
sbb
lcall
ret
and
sub
lods
aaa
mov
ds
push
push
or
movsl
inc
or
mov
mov
add
jmp
inc
scas
pop
and
int
sbb
xchg
loop
js
std
xor
mov
jp
push
scas
das
cmp
and
xor
adc
pop
in
jecxz
rorl
dec
aam
pop
pop
test
cmp
sbb
or
daa
push
jo
jns
mov
cmp
jbe
and
dec
out
loopew
int3
insb
push
loop
popf
mov
adc
push
xchg
in
pop
mov
add
add
es
data16
insb
daa
mov
jne
enter
add
add
mov
pop
insb
popf
std
mov
insl
lods
gs
in
loop
or
sub
push
test
fisubl
push
test
daa
sbb
iret
out
add
js
es
dec
inc
xchg
sub
rorl
mov
pop
fstps
cmp
jge
js
je
shl
xor
inc
sbb
hlt
test
push
lret
cltd
push
dec
lds
push
cmc
ret
jmp
cmc
mov
cmp
stos
xlat
loop,pn
movsb
fstpt
cs
mov
js,pn
lea
add
mov
cmp
rolb
push
fs
cld
mov
pop
pop
jmp
fcoml
dec
push
adc
icebp
aaa
xlat
adc
ljmp
cmp
call
push
mov
jl
push
push
lea
adc
test
fidivrs
test
sub
xlat
sub
dec
aas
add
add
dec
mov
imul
and
add
push
cmpsb
pop
mov
lods
adc
mov
pop
mov
cwtl
mov
lock
adc
cmp
sbb
sbb
scas
jmp
outsb
das
pop
fdivr
insl
inc
inc
dec
xchg
jle
pop
cmc
jno
mov
pop
sbb
ss
arpl
sbb
pop
xor
stos
je
cmp
mov
mov
loop
cmc
loopne
insb
fbstp
popf
outsb
subb
push
inc
add
push
xchg
and
sub
pop
adc
mov
sti
fiaddl
mov
iret
ds
jne
mov
dec
dec
xchg
xchg
les
xchg
js
dec
cmpsl
stos
sbb
popf
push
sbb
push
iret
scas
inc
mov
std
push
push
ret
xor
jmp
push
add
scas
les
shr
test
fimuls
mov
mov
movsb
fisubrl
adc
cmc
push
and
adc
xchg
adcl
cmpsl
jae
xchg
add
add
and
push
sti
cmpsl
enter
xchg
mov
mov
add
add
out
mov
ss
stc
and
add
arpl
test
das
mov
bound
mov
sti
fistps
sbb
test
mov
fcoml
test
jne
mov
lahf
push
push
xchg
cmp
jge
push
and
shll
mov
pop
sbb
call
sub
test
inc
fimull
xor
xchg
fnsave
push
int
flds
cmp
leave
daa
aad
mov
nop
cmp
sbb
cmp
xchg
divb
jno
test
pop
movl
fisttpl
arpl
mov
xor
loope
mov
or
add
push
cwtl
mov
cltd
pop
pop
test
pop
sbb
out
movsb
mov
jae
out
call
xchg
mov
ja
sbb
loopne
ret
int3
or
mov
cmp
add
push
and
std
mov
dec
push
repz
les
add
add
test
dec
nop
and
outsb
xor
mov
std
mov
std
mov
frstor
inc
dec
mov
sbb
imul
out
arpl
push
or
sti
fbld
dec
xor
rorl
sub
mov
xchg
pop
into
cmp
inc
cmpsb
push
inc
je
push
jbe
movsl
leave
mov
adc
je
fsubrs
pop
or
fists
or
or
aam
leave
sub
fsts
and
outsl
add
scas
div
lret
jmp
xchg
in
stc
inc
xchg
pop
jbe
sbb
push
mov
stc
sub
in
mov
and
mull
jns
aam
pushw
jno
mov
cs
sub
cmp
adc
dec
pushf
inc
adcl
movsb
push
fdiv
dec
fs
mov
loope
add
add
and
jecxz
and
lcall
add
add
imul
inc
cltd
adc
and
mov
loop
jae
int
and
mov
mov
enter
int
imul
mov
xor
xchg
mov
xlat
pop
mov
ljmp
pop
lods
lds
movsl
cmp
cltd
lret
mov
pop
in
rcl
sub
adc
outsl
inc
xchg
rcrb
mov
sarb
cmp
lcall
insl
ss
mov
push
pop
in
xchg
xchg
adc
fldl
scas
stos
insl
das
data16
jne
ret
fwait
xor
shll
adc
imull
mov
push
jb
pop
mov
daa
fcomps
pop
xchg
xlat
xlat
lahf
test
xor
hlt
out
mov
jmp
xor
dec
inc
das
and
pop
mov
sub
jns
xchg
or
aam
mov
inc
sub
or
loopne
adc
add
fiaddl
ret
ficomps
cmp
lahf
mov
bt
add
add
mov
push
mov
cmp
nop
mov
clc
sub
inc
mov
cmp
jg
mov
lods
imul
daa
mov
jle
xor
mov
adc
insb
popa
push
scas
sub
fldt
mov
insl
clc
sbb
bound
jo
push
cmp
hlt
and
push
addr16
fldenv
cltd
in
xchg
adc
ret
mov
mov
fisubrs
scas
and
inc
sbb
pop
cmp
and
sub
sub
and
test
sahf
fcompl
or
dec
shll
push
push
std
scas
aam
dec
jno
add
pop
daa
imul
sbb
xchg
push
sbb
dec
hlt
adc
push
and
sti
in
lea
add
dec
xchg
push
jo
sub
aaa
mov
imul
mov
add
arpl
ja
sub
add
cld
fs
test
add
add
and
push
cli
out
inc
dec
mov
je
dec
stos
loop
cmc
lahf
sub
fldt
cld
dec
scas
icebp
mov
sti
and
scas
mov
int
xor
or
cmc
lret
cld
ljmp
jg
pushf
or
xchg
mov
cwtl
int
xor
xor
pop
inc
test
jbe
test
shl
sub
and
inc
cli
lcall
sub
xor
repnz
mov
mov
out
call
pop
push
and
jmp
fs
cmp
xchg
mov
and
jmp
rorl
inc
pop
xchg
out
popa
jo
sub
jbe
in
shlb
pop
xchg
inc
push
inc
cmc
stos
sti
mov
data16
test
mov
pop
test
ret
sub
lret
and
enter
cmc
fdivrl
mov
xchg
sbb
cmp
add
add
lret
mov
or
loopne
cmpl
add
or
inc
ss
cltd
and
or
stos
sbb
ficomps
mov
mov
lods
inc
sub
cmp
je
pop
sub
and
mov
xor
mov
fidivl
sbb
fidivl
dec
and
pop
xchg
es
fidivl
or
xchg
jge
or
jecxz
jnp
fsubs
aaa
xor
pop
sub
push
imul
test
ljmp
std
or
fwait
push
mov
inc
testb
or
cmp
sti
lcall
add
jg
pop
sahf
nop
or
cmovle
mov
pop
sbb
sahf
inc
mov
xchg
or
lret
xchg
pushf
adc
test
call
hlt
insl
pop
jecxz
and
inc
xor
mov
jle
push
stos
dec
out
and
lret
test
add
sub
sti
pop
jge
neg
hlt
add
out
mov
add
add
cld
mov
add
mov
inc
inc
nop
outsw
and
xor
adc
jl
stos
insl
outsb
or
pop
subl
psllw
mov
pop
adcb
stos
xchg
lret
push
inc
inc
inc
cmp
and
xor
fdivrs
je
and
pop
and
or
clc
and
cmp
sbb
dec
cmp
out
js
and
xchg
aas
popf
inc
fildll
cltd
cwtl
out
lcall
inc
mov
mov
inc
addr16
mov
push
dec
mov
pop
loope
movsl
test
ss
pusha
dec
ljmp
call
xor
aad
ss
popf
xor
lods
imul
sbb
pop
sub
jbe
sbb
lods
pop
imul
jg
stos
dec
test
cmpsb
sub
pop
call
add
fsub
std
in
popf
in
stc
jmp
stos
mov
add
add
div
imul
lret
add
jmp
mov
add
in
cmp
add
fstps
add
pop
or
inc
sbb
mov
push
ds
test
xor
xor
sbb
dec
pop
jg
jecxz
jmp
je
add
clc
and
daa
pusha
stos
loop
sub
xor
mov
imul
mov
push
outsl
sarl
mov
add
mov
add
cmp
pushf
divps
fmuls
test
je
call
sbb
ret
hlt
popa
sub
push
xor
orl
outsb
xchg
jge
test
fsubrs
mov
js
dec
cmpsb
fisubl
mov
ret
push
inc
imul
mov
ret
pop
testb
aad
cmp
mov
mov
jmp
xor
add
pop
jp
jnp
sti
xchg
jle
jp
lods
loop
xor
xor
add
xchg
jl
repnz
dec
jae
gs
ds
push
sub
aas
sbb
mov
jg
sbb
bound
pop
cmc
jno
dec
xlat
mov
scas
or
push
fwait
loope
fstl
out
mov
ljmp
testl
add
cltd
sub
pop
rcrl
or
jp
or
call
dec
scas
test
cmpsb
inc
mov
inc
lods
mov
rcll
xor
shll
fiadds
pop
std
incb
add
jp
ret
scas
sbb
mov
sbb
pop
or
sbb
inc
xlat
cmp
adc
sbbb
inc
in
cmp
add
sbb
cmp
bound
das
adcl
push
lods
hlt
test
mov
xchg
mov
inc
xchg
jg
roll
ds
sub
push
cmp
cld
shrb
add
add
push
sti
decb
mov
inc
shll
add
shll
pop
inc
lcall
shrl
mov
jb
sahf
aad
fldt
into
icebp
pop
dec
jno
sbb
nop
shr
sbb
sub
cmp
mov
test
stos
imul
push
out
sbb
pop
les
scas
imul
sbb
sbbb
add
cltd
xor
sub
inc
daa
push
jae
xor
test
imul
loop
and
pop
repz
inc
inc
mov
xchg
mov
insl
std
fmull
in
cli
ljmp
mov
lret
inc
ljmp
ret
imul
int
jl
and
outsb
cmp
cmp
test
xchg
fcoml
xor
xor
add
push
ret
cmp
xor
hlt
xchg
faddl
xor
add
inc
and
inc
lea
jge
sti
pop
mov
jne
mov
ljmp
xchg
in
sti
sub
in
stc
rcl
jl,pn
cli
mov
clc
xchg
mov
lret
dec
sub
push
push
mov
loope
sbb
push
push
sub
popf
into
sub
or
pop
inc
cltd
outsl
sbb
adc
jns
out
and
mov
xchg
fnstcw
mov
rcll
or
pop
test
test
inc
cld
push
dec
cmc
pop
pop
leave
ret
loop
cmp
mov
mov
push
push
jns
rcll
lods
pushl
cli
mov
pop
ret
cmc
cwtl
mull
cvtpi2ps
inc
mov
movsl
push
jbe
adc
in
lock
sub
mov
xchg
jbe
repz
add
addl
push
data16
xor
pusha
jbe
sahf
adc
add
pop
sbb
add
incb
ljmp
cli
push
and
add
add
ja
out
or
fstps
leave
and
cmpsb
sub
push
mov
add
call
or
sbb
inc
popf
in
add
mov
or
aad
cmp
pop
cmp
std
jle
mull
add
dec
or
cmpsb
dec
inc
push
fdivrl
and
mov
or
ret
clc
mov
movsb
jmp
dec
adc
xchg
outsl
inc
nop
lahf
dec
out
cs
add
lods
xchg
jbe
or
fdivs
test
or
addb
dec
pop
scas
push
lahf
notl
jo
push
pop
or
pop
inc
push
in
imul
inc
xchg
aaa
dec
push
test
push
lods
jecxz
data16
sub
sahf
insl
loopne
rclb
jae
pop
mov
out
mov
dec
fs
stc
fsubrl
mov
xor
mov
add
rcrl
sbb
loopne
mov
sbb
mov
sub
add
add
rclb
nop
lcall
aaa
add
add
mov
sub
adc
stos
into
shll
bound
or
psubusb
out
insb
ficomps
xchg
xchg
aaa
push
stos
sbb
sti
sti
jge
inc
call
cmp
mov
lock
mov
mov
xlat
ljmp
mov
pop
fs
sbb
dec
jb
dec
add
lcall
aaa
js
xor
mov
cmpl
cli
lret
cmp
cmp
sbb
outsb
pop
js
outsb
push
in
and
pop
leave
or
fisttpll
xchg
and
stos
out
jle
clc
add
daa
jmp
orl
fstpt
sbb
insb
push
shrl
dec
outsb
dec
push
dec
bound
out
add
mov
add
cmp
aaa
mov
mov
mov
test
in
scas
in
std
leave
sbbb
fcmovbe
add
add
jbe
idivl
or
sbb
add
add
addr16
xchg
pop
adc
jb
push
mov
push
jmp
sti
test
lds
mov
adc
jg
mov
cmp
fsubrl
pop
sub
lea
arpl
push
loop
arpl
inc
pop
sub
leave
loopne
in
cmpsb
popa
mov
jg
stc
movsl
jle
jle
lcall
pop
inc
insl
xchg
dec
xchg
mov
xchg
xchg
sbb
jbe
xor
and
in
sbb
dec
sbbl
pop
jne
jge
out
test
je
fucomi
sub
test
sahf
adc
push
mov
mov
or
iret
add
xchg
mov
addr16
pop
idivl
subb
or
fisttpl
pop
jns
jmp
cmpsb
mov
push
imul
popa
pop
or
xchg
pop
cli
pushl
faddl
mov
das
scas
pop
fcomps
jbe
hlt
dec
aam
xor
or
dec
std
add
add
outsb
sub
stos
fs
jmp
leave
aas
dec
sub
aam
cmp
add
jno
aas
lock
cld
loop
jge
mov
cmp
ret
xor
dec
pop
jo
sub
inc
xchg
ds
cmpsl
fs
xlat
xlat
or
and
cld
repz
aad
push
cmp
lahf
lea
ret
mov
lods
mov
and
stos
mov
xchg
cmp
push
cld
lock
jl
lahf
or
scas
xchg
push
xchg
and
adc
pop
lret
add
jb
or
mov
xchg
or
fistpl
pop
dec
push
inc
ss
pop
and
ljmp
or
adc
outsl
addl
push
pop
arpl
add
pushl
bound
mov
adc
push
or
push
mov
sub
ret
pop
popf
sub
out
mov
cltd
lods
mov
mov
jo
cmp
and
cmp
repz
or
mov
cmp
mov
mov
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
xchg
lods
fistpll
add
add
fiaddl
fdivrl
aad
adc
rcr
add
test
mov
inc
loop
jp
jge
adcb
xlat
inc
stc
in
repnz
jnp
jmp
sarl
movsb
dec
andl
inc
mov
sub
mov
cmp
push
mov
push
sub
and
push
lods
je
push
cmc
pushf
jge
mov
push
push
mov
mov
add
dec
jecxz
out
std
loope
adc
pop
xchg
cs
jge
or
or
xchg
fsubl
xor
push
mov
jbe
outsb
iret
cmpl
push
jnp
enter
aas
push
mulb
xchg
xchg
and
std
hlt
inc
lret
rcr
jmp
xlat
int3
ljmp
jmp
xor
sub
imul
inc
rcrb
sbb
xchg
cmpsb
xor
push
push
mov
mov
ret
add
sbb
jnp
jnp
cmp
movsb
push
sbb
cmc
push
in
add
add
cmpsb
mov
pop
mov
push
sarb
out
push
push
mov
dec
outsl
xlat
xor
cwtl
sub
int3
mov
mov
add
xchg
dec
mov
fsubs
mov
pusha
out
adcl
andb
lret
mov
cmc
pop
icebp
add
roll
ret
inc
ret
rclb
lret
pop
dec
sub
mov
in
ss
or
arpl
jge
ljmp
mov
mov
jmp
cld
jg
and
add
dec
jle
rolb
les
pop
xchg
movsl
jns
push
cmpl
shrb
fsubrl
insl
aad
xlat
outsl
sbb
mov
arpl
and
jl
cwtl
cmpsb
dec
mov
push
mov
push
outsl
pop
sbb
or
sbb
mov
sbb
dec
lret
pop
xchg
clc
inc
jne
and
cli
les
sub
mov
out
ret
dec
repz
rolb
add
outsl
lret
mov
out
jmp
xchg
fucomip
cmp
add
sbb
lods
ds
inc
inc
fs
dec
or
test
loopne
sbb
xchg
and
fld
sarb
fs
sub
xchg
cwtl
aas
in
cmp
pop
jne
leave
mov
scas
and
daa
add
push
pop
mov
enter
imul
lcall
mov
add
dec
stos
shrl
rorl
xchg
call
test
pop
sbb
test
mov
roll
imul
cwtl
jno
out
pop
xor
sub
aad
push
hlt
cmp
shr
xchg
std
into
xchg
jl
sbb
xchg
rcr
cmc
inc
pop
bound
cld
or
sub
cmp
ret
or
inc
push
aaa
mov
es
movsb
cmc
push
mov
push
lea
roll
insb
loopne
xchg
push
push
insb
scas
mov
dec
fstl
lahf
xor
gs
add
add
repz
cmp
lods
repz
mov
imul
out
cmp
add
leave
xchg
mull
mov
lds
push
push
mov
stos
lret
test
imull
cltd
add
fistpll
stos
lcall
sub
xor
aam
hlt
adc
jmp
int3
or
adc
dec
or
dec
arpl
inc
movsb
lea
aas
add
mov
pop
test
cld
popl
and
into
add
push
aam
sub
and
jecxz
insl
adc
lahf
xchg
incb
jle
sub
fcomip
xchg
sbb
sub
xchg
push
gs
mov
or
repz
out
xlat
andl
icebp
subb
push
pushf
fs
test
in
pop
scas
push
sub
fdivl
dec
fisubs
lods
xor
test
adc
xor
jecxz
mov
ror
add
int3
icebp
add
pop
pop
pop
loopne
sub
xchg
sbb
stc
inc
sbb
add
add
daa
push
cld
push
std
jmp
dec
push
jne
repz
add
dec
lea
in
pop
jo
lret
cmp
lods
shll
inc
ret
push
fstl
and
mov
inc
out
cmp
pop
test
sub
or
popf
je
sub
sbb
inc
pop
in
or
and
hlt
dec
cmp
fwait
pop
sub
mov
fadd
leave
pop
out
ret
xor
call
call
repz
enter
adc
addr16
movsl
jo
loope
popa
lcall
test
movsl
adc
push
mov
les
enter
orb
inc
scas
push
cs
ss
fwait
adc
push
push
in
xchg
sub
lods
dec
add
add
ja
pop
sub
jecxz
mov
mov
push
rcll
and
ljmp
dec
mov
mov
sub
cmpsb
arpl
cmp
xchg
xchg
mov
add
add
add
sbb
dec
push
out
aad
mov
clc
aas
add
add
icebp
repnz
lahf
lods
add
subb
or
push
cmpb
in
icebp
shll
pop
test
cmp
push
cmp
iret
mov
leave
popa
lahf
movsl
sub
insl
cmpsl
insb
popl
xor
cs
or
pop
insl
or
inc
push
inc
rcl
in
dec
loope
and
mov
jg
mov
sub
ljmp
into
push
mov
jmp
mov
xor
mov
push
out
or
imul
pop
mov
orl
pshufw
xchg
mov
ss
pusha
jo
dec
es
ljmp
sub
rorl
sbb
inc
into
sub
sub
mov
mov
xor
or
mov
les
mov
sbb
lea
dec
pop
js
cli
pop
push
sub
xor
add
add
idivl
or
push
add
add
pop
insb
inc
int3
add
sub
call
div
sub
inc
in
shlb
dec
sti
xchg
sahf
mov
jne
push
pop
ds
mov
cwtl
in
clc
ficoms
jb
dec
inc
pop
fcompl
scas
neg
les
shrl
add
idiv
xchg
enter
and
pushf
dec
int3
and
pop
int
add
xchg
bound
imul
lret
sub
ds
std
push
repnz
sahf
ds
out
incb
push
inc
in
and
test
xor
int
fisubrs
adc
sahf
int3
mov
shll
movsl
shr
add
cli
push
sbb
xlat
push
dec
or
std
mov
cmp
repz
js
push
push
sbb
nop
mov
adc
ljmp
push
push
jb
xor
cmc
mov
fwait
rdtsc
loop
sti
imul
add
add
jg
xchg
orl
call
add
fsubs
pusha
and
call
xchg
fs
xor
fdivrl
out
mov
aas
xor
in
rorl
push
movb
mov
sbb
popa
sub
push
sbb
or
and
pushf
mov
std
addr16
scas
and
addb
cwtl
mov
dec
push
in
xor
xor
repz
bound
and
push
dec
imul
or
add
dec
or
lds
sarl
xor
daa
push
mov
lret
inc
xor
jns
scas
add
iret
hlt
mov
mov
or
mov
push
jg
fnsave
call
dec
fmuls
maxps
test
in
add
xor
in
xchg
imul
xor
stc
sub
in
in
inc
and
scas
jmp
popf
cltd
dec
out
push
mov
dec
jbe
cmp
mov
sbb
inc
cmp
fimull
add
and
dec
lret
jmp
imul
aaa
je
adc
pop
inc
add
add
out
dec
shrb
pop
mov
pop
push
dec
scas
push
scas
sarb
mov
jo
pop
sbbl
add
xor
rolb
popa
ret
xchg
dec
dec
ficoml
popf
push
ret
or
and
lock
add
xchg
shrl
imul
push
hlt
lock
jmp
push
loope
inc
adc
xchg
fbld
stos
aas
inc
jb
popa
inc
jl
sbb
movsl
leave
call
inc
dec
push
push
lods
fstps
pushf
jb
jecxz
lods
ss
jmp
mov
adc
cld
rcl
jb
test
xchg
aam
mov
cmp
dec
mov
dec
scas
aas
jno
iret
insl
mov
sbb
mov
test
add
and
stc
in
xchg
jmp
push
xor
ret
add
add
call
rcl
loopne
gs
and
and
pop
je
and
cmp
mov
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
hlt
movsb
or
add
add
sbb
aam
gs
mov
jg
cmp
xor
pop
pop
imul
faddl
cmp
stos
cs
lret
jb
mov
movb
mov
subb
dec
jnp
jg
dec
in
jno
sbb
imul
mov
daa
aaa
stos
add
ja
adc
add
and
push
fs
sahf
into
in
sahf
sub
stc
mov
sbb
mov
lds
mov
pop
pushf
ret
ja
pop
inc
loop
pop
cmpsl
inc
pop
mov
or
fldt
daa
loop
and
mov
pop
or
je
in
not
and
push
inc
fbld
push
xchg
add
mov
fwait
insl
into
xchg
mov
push
mov
mov
inc
ja
add
mov
inc
add
scas
loop
push
icebp
lahf
or
jp
popf
mov
push
push
inc
jl
adc
ret
lahf
inc
mov
add
adc
add
jns
xor
jg
test
add
add
call
fisubl
mov
jge
dec
sub
add
ja,pt
mov
test
je
stos
rcll
xor
adc
xchg
pusha
sbb
lret
sub
mov
dec
xor
pop
addr16
push
adc
inc
jne
or
jb
fwait
lea
push
jbe
pop
shlb
cmpsb
cs
adc
mov
stos
iret
jge
add
adc
mov
lea
into
xlat
outsl
adcb
push
push
jg
out
fistpl
adc
sub
lds
dec
mov
lods
shlb
and
dec
or
cmp
insl
sbb
fnsave
mov
daa
and
pop
int
mov
push
and
mov
cmc
mov
and
int
insb
lods
imul
je
cmp
je
lea
dec
push
mov
add
add
ret
jg
decl
rol
sahf
mov
push
inc
add
add
sub
push
outsb
enter
cmp
jge
popf
sub
push
sub
ljmp
popf
adc
inc
push
mov
xor
adc
test
sbb
and
jns
xchg
jae
push
or
and
mov
cwtl
mov
cwtl
fsub
or
sbb
shlb
fs
mul
xor
fldcw
jnp
push
mov
leave
jo
pushf
test
cmc
fisubrl
lea
adc
push
rcr
or
test
add
cli
ja
fstps
test
xor
jnp
scas
leave
nop
push
fidivs
cmp
mov
int
into
std
xlat
scas
scas
adc
cmpb
push
out
fistl
jmp
pop
jno
sub
dec
xchg
cmpsl
outsl
inc
inc
aam
pushf
jne
popf
testb
push
test
and
imul
stos
fucomip
subl
loope
cltd
movsl
add
add
das
mov
out
aad
jno
pop
sbb
add
xor
mov
xor
jg
jbe
shrl
sbb
mov
stos
dec
pop
ficompl
push
push
rcrl
inc
int3
fdivrl
aas
inc
lcall
sarl
aaa
out
aam
jl
iret
mov
xchg
mov
push
negl
sti
mov
jbe
mov
je
push
dec
ja
mov
xor
int
or
in
and
mov
add
and
push
vmovsd
rorl
insl
clc
xor
dec
xchg
inc
loopne
arpl
iret
sub
xchg
inc
mov
mov
push
jg
xor
push
nop
sub
or
jae
or
test
arpl
data16
es
cwtl
sbb
inc
mov
mov
add
test
fnstcw
lods
cli
push
fbld
add
jae
xchg
out
mov
ret
add
hlt
gs
dec
adc
jge
and
add
lcall
subl
push
pop
fprem
pop
cmp
mov
fnstsw
movsl
mov
xor
test
xchg
test
test
jg
sbbl
jp
test
rcrl
test
add
jo
cltd
lret
lret
fdiv
adc
or
ret
sbb
lea
call
xor
iret
loop
test
push
test
hlt
mov
push
xchg
aaa
aad
insb
fdiv
or
or
jge
jbe
test
sbb
fdivr
or
notb
aas
push
lock
movsb
pop
push
push
loopne
push
push
sbb
rcrb
jmp
stc
ja
pop
cli
rolb
mov
push
xchg
aaa
fdivrs
mov
aad
loope
inc
push
mov
outsl
xchg
ja
add
loope
and
mov
jo
mov
lret
into
and
add
add
aas
gs
pop
repnz
dec
add
add
pushf
dec
in
fisttpll
xchg
popf
hlt
loopne
or
ds
and
jp
or
xchg
je
mov
or
mov
sti
mov
stos
dec
and
jge
leave
mov
push
ja
mov
sub
xchg
mov
lock
aaa
cmpsl
push
pushf
shlb
or
cs
sub
sbb
flds
out
sbb
pop
jo
enter
xor
flds
cwtl
xor
dec
dec
xchg
pop
in
dec
push
mov
mov
push
inc
push
test
sub
stos
lds
or
jnp
call
jo
stc
pop
jecxz
inc
pop
add
inc
shll
push
ud1
sbb
addb
cmpsb
and
pop
lret
jp
loope
nop
cmp
lahf
xchg
and
sub
nop
insb
movsl
jle
fldenv
mov
sbb
lret
scas
mov
jbe
and
add
mov
out
fisttpll
lock
in
and
dec
add
add
rolb
fisttps
xchg
add
je
mov
jbe
mov
jns
jno
seta
les
jbe
mov
and
mov
rcl
mov
adc
repz
adc
jl
sbb
mov
jl
dec
dec
sub
xor
push
push
xor
push
fldl
pop
cmpl
cli
lahf
mov
adc
es
mov
dec
sbb
push
sbb
enter
dec
sub
push
mov
jno
mov
dec
xchg
rorl
push
push
mov
lock
mov
sub
loope
xchg
cmpl
dec
mov
push
cs
pop
xlat
ficompl
imul
pop
mov
sub
std
xchg
ljmp
fbstp
lods
adc
call
loope
dec
in
adc
je
ds
fs
xor
add
add
mov
ljmp
add
add
xor
iret
fmuls
adc
sbb
push
mov
sub
inc
cltd
insb
sub
push
mov
enter
jb
inc
inc
and
ret
jecxz
ss
scas
xchg
push
jno
cli
into
xor
shlb
pop
arpl
es
test
or
into
push
sub
jl
xsha256
cmpsb
xchg
cltd
ror
sbb
mov
cld
pop
pop
movsb
addb
inc
adc
out
stc
lods
xor
push
jg
je
cs
ret
add
jns
jmp
cmp
push
sub
sub
lea
xchg
xchg
dec
arpl
mov
lret
push
lret
jbe
fxch
and
mov
stos
frstor
call
fs
mov
jne
xor
loopne
fstpl
ljmp
add
ficomps
test
gs
jmp
inc
pop
sub
fldcw
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
jne
in
xor
add
add
iret
js
mov
std
das
mov
mov
add
das
or
xlat
push
mov
cld
jp
fldl
inc
mov
add
daa
mov
jg
xlat
addb
cld
mov
mov
pop
dec
adc
adc
jmp
and
das
and
pop
and
js
out
insl
adc
push
lret
addr16
fimull
insb
int
out
cmpsl
or
and
xchg
push
into
nop
xchg
jg
shlb
push
and
and
cmp
xor
dec
cmp
jp
les
and
push
int
inc
xchg
sahf
in
test
dec
outsl
or
cltd
je
push
in
into
addr16
data16
rorb
mov
sbb
mov
mov
mov
cli
imul
mov
add
std
addr16
cs
imul
add
cmp
imul
out
mov
mov
test
cmp
add
mov
pop
ljmp
iret
jl
push
nop
popf
in
imul
lock
adc
add
inc
add
or
pop
adcb
inc
add
push
mov
adc
push
add
inc
sbb
xchg
dec
filds
push
pushf
xchg
lods
lea
add
mov
inc
addr16
dec
jbe
sar
scas
sub
jb
test
pop
xor
inc
dec
pusha
mov
mov
iret
in
or
nop
les
add
push
lret
xchg
nop
andb
and
lods
sarl
jmp
mov
fsubrs
negb
cs
hlt
cmp
aad
inc
and
data16
mov
push
xor
push
test
mov
mov
inc
andl
cmp
call
dec
mov
push
ret
xchg
popf
adc
sbb
popa
add
dec
outsb
push
jmp
add
add
dec
stc
mov
ljmp
ds
add
add
in
push
mov
jnp
popf
mov
sti
xor
dec
sti
pop
xchg
insb
in
lret
mov
fdivs
cmp
xor
xlat
or
or
pop
push
mov
imul
cmp
shll
dec
stos
lods
out
movaps
jae
stos
ret
daa
ja
gs
push
add
lahf
push
nop
jb
xor
bound
dec
jno
lret
ret
inc
sbb
inc
sbb
push
inc
sub
or
mov
loop
movsb
in
mov
pop
outsb
jb
or
aad
sub
gs
lea
or
add
xchg
in
jb
cmp
std
mov
xor
xchg
mov
cli
sbb
fnstenv
or
addl
pop
lret
int3
jl
add
pushf
xchg
aam
and
outsb
fcomip
mov
cs
push
test
outsb
filds
pushf
gs
sahf
push
mov
add
xchg
cmp
jle
jg
cld
lcall
inc
inc
dec
add
add
mov
insl
mov
addb
cwtl
xor
out
outsl
lds
ja
mov
adc
jge
lahf
movsl
loopne
out
add
fldcw
shl
sub
or
sbb
in
out
jnp
pusha
fsubr
movl
add
in
loopne
cltd
mov
cmp
adc
xchg
mov
enter
jbe
in
pusha
imul
lret
call
int
les
pusha
fcos
ss
lods
xlat
cmp
bound
in
repz
lcall
test
xchg
push
add
mov
subl
call
jnp
adc
adc
aaa
dec
lcall
hlt
xchg
or
dec
out
jbe
mov
out
push
orl
mov
ja
data16
adc
nop
push
fdiv
push
mov
add
mov
xchg
mov
pop
and
push
add
add
imul
dec
pop
ss
lahf
pop
adc
push
jae
xchg
push
sbb
les
or
imul
aas
lcall
cmp
xchg
fnsave
movsb
bound
push
pop
ret
adc
int3
mov
xchg
jo
scas
aaa
push
mov
subl
out
outsl
mov
or
or
jns
mov
inc
sub
inc
mov
fidivrl
int
mov
sbb
shrb
pop
jb
jle
push
testl
xchg
mov
push
dec
dec
xor
and
mov
insb
adc
out
jl
add
icebp
fnstcw
or
out
inc
scas
fildl
cmp
das
push
mov
or
std
and
mov
fsubs
fsqrt
std
mov
push
addr16
mov
jno
mov
mov
popf
inc
push
cmpsl
inc
sti
xchg
or
add
or
mov
and
adc
dec
push
add
add
outsl
shrd
mov
or
sbb
jae
pushf
fdivr
inc
js
add
push
rorb
lret
insb
in
mov
adc
inc
mov
adc
mov
mov
pop
enter
popa
fistpll
jb
mov
pop
daa
iret
mov
jmp
sbb
ss
or
cs
sti
popf
sub
sub
xchg
pushf
in
add
shll
xchg
add
insb
sub
inc
mov
sbb
popa
xor
test
mov
xchg
scas
repz
addr16
ss
cmp
pop
and
push
add
jmp
jmp
subb
mov
push
and
xor
lods
xor
inc
int3
mov
jg
stc
scas
cltd
xor
and
or
in
mov
adc
lahf
push
cmp
push
pop
push
adc
in
mov
lahf
enter
icebp
rcl
cmpl
add
sub
cmp
ret
or
push
pop
adc
push
push
add
add
aas
xchg
xor
mov
xchg
jae
adc
lods
sarb
fists
mov
pop
add
mov
outsl
xchg
repz
les
mov
mov
jle
push
adc
mov
xor
jle
inc
mov
add
sub
xchg
inc
loopne
ljmp
jmp
jl
mov
jns
mov
pop
cmc
dec
outsb
and
mov
in
call
movsl
aad
add
jp
fdivrs
xchg
aaa
pop
push
xor
jmp
adc
lds
ja
mov
add
adc
outsl
jg
jnp
bound
arpl
nop
subb
popf
sbb
fldt
in
pop
cli
mov
sbb
lret
stc
cli
adc
push
add
push
xchg
sar
adc
repz
pop
pop
xchg
inc
xor
add
add
push
shll
out
pop
pop
pushf
push
subb
push
push
add
add
insb
fnstenv
mov
test
loope
pusha
push
sbb
and
int3
in
fnstenv
gs
shrb
jl
fwait
xchg
add
or
shl
jmp
test
or
dec
int
gs
das
cmp
pop
iret
andb
test
out
sub
mov
mov
test
adc
fwait
dec
inc
or
sub
inc
xchg
lcall
stc
stc
cmc
jle
mov
mov
aad
push
roll
xchg
aaa
or
mov
cwtl
jmp
inc
mov
scas
inc
jae
lds
ss
jg
pop
insl
cmp
andb
sub
jns
push
hlt
mov
cmp
mov
mov
and
adc
sbb
outsl
cmp
xor
adc
and
xchg
xchg
insl
and
std
fcomps
pop
add
add
out
lcall
hlt
mov
cmp
stos
pop
push
add
add
xlat
loop
data16
pop
cwtl
pop
mov
jg
arpl
pop
sahf
gs
jb
repz
orb
add
dec
xchg
rorb
jne
dec
out
test
repz
push
scas
mov
cmc
icebp
fwait
lret
scas
jb
cmp
inc
sbb
insl
bound
out
rcl
in
lods
insb
dec
mov
adc
dec
in
sbb
cltd
mov
adc
into
sahf
daa
jecxz
dec
cmc
mov
adc
dec
clc
ljmp
daa
rcrb
sub
movsb
or
popa
push
xchg
fisubrs
dec
aam
sti
jbe
enter
clc
shl
push
and
or
pop
pop
dec
cld
push
imul
adc
aaa
aad
sbb
adc
dec
xor
and
aaa
cmp
push
pushf
push
or
pop
ljmp
leave
mov
jl
iret
jbe
daa
or
std
out
cmpsb
pop
jbe
ror
ljmp
mov
lahf
test
add
bound
imul
push
rcr
push
add
add
nop
mov
lret
out
xchg
push
mov
xchg
jb
mov
xor
push
or
fs
stos
inc
sbb
arpl
mov
aad
or
xchg
and
lods
nop
iret
push
xor
mov
mov
cmp
inc
scas
jns
rclb
add
shll
push
nop
aaa
cmpl
mov
jnp
cmpsl
dec
sahf
sahf
stos
lods
fwait
bound
dec
out
cmp
pop
rcrb
repnz
scas
sub
sbb
in
mov
negl
pop
enter
loop
fbld
mov
mov
sbb
loopne
cmp
fistps
lea
adc
rcll
hlt
adc
or
es
jb
aas
cmpsb
decb
push
insl
jecxz
outsb
call
and
pop
je
inc
es
and
pop
mov
loop
jg
mov
loop
push
int3
ja
roll
add
fwait
cmp
stos
sarb
push
add
add
mov
mov
add
jmp
fcom
cld
dec
inc
jo
out
jecxz
xor
aad
dec
inc
mov
outsl
fimull
rorl
loope
addr16
cld
xchg
xchg
or
cmp
and
inc
and
addr16
xchg
mov
jg
insb
xor
popf
add
es
aam
pop
xchg
cmp
jnp
ljmp
sub
mov
sbbl
mov
mov
mov
push
xor
fyl2xp1
pusha
jns
xlat
sbbl
mov
sub
cmpsl
ss
movsl
mov
jmp
mov
sbb
enter
add
push
ret
jmp
lcall
xchg
jle
rcrl
add
int
push
xchg
ds
pushaw
divl
orl
bound
pushf
xchg
jecxz
mov
add
inc
push
clc
mov
and
hlt
push
shlb
add
add
sbb
loope
xchg
push
sub
fs
lahf
or
stos
je
pusha
add
ljmp
mov
jno
mov
jecxz
pushf
mov
std
sub
xor
lds
dec
cmp
hlt
out
jbe
aam
pop
dec
pop
loopne
pop
jne
mov
bound
xor
dec
orb
or
push
mov
dec
and
mov
test
jecxz
xchg
xchg
enter
rorb
addl
ret
inc
aaa
mov
adc
and
in
lret
cmovbe
movsb
ret
mov
adc
popf
fdivrl
into
or
pop
cli
pop
int3
sub
mov
ss
dec
mov
rclb
pop
add
push
add
adc
sti
cmp
mov
add
mov
jne
mov
inc
sbb
xor
pusha
fcoml
adc
lds
add
scas
xchg
push
adc
out
mov
pop
push
xchg
sbb
add
pusha
cmp
popa
mov
mov
sarl
and
fcompl
pop
xchg
cs
inc
mov
data16
cmpsl
fs
fwait
hlt
mov
lcall
adc
inc
aad
popa
jno
cltd
xor
outsl
pop
adc
xor
inc
jg
push
xchg
loopne
sub
call
mov
in
adc
test
cwtl
mov
xor
movsl
cmp
inc
sbb
xor
mov
cs
push
or
repz
cmp
fcmovne
inc
add
mov
xchg
jae
inc
mov
fsubrl
or
sahf
adc
xchg
fcom
je
cmp
aas
cmpsb
movsl
aaa
mov
mov
lcall
pop
pop
jle
xor
cmp
loopne
add
lret
std
nop
inc
test
mov
adc
scas
int
scas
stos
inc
and
sub
add
add
mov
lds
aad
pop
loope
aas
jne
add
add
cmpsl
or
rcrb
mov
xor
push
rorb
dec
fisubrs
or
sahf
aad
movsb
or
iret
dec
dec
jno
lea
test
cli
cmpsl
dec
fnstenv
and
mov
bound
addr16
dec
sub
ret
or
push
movsl
mov
enter
fistps
push
mov
and
sbb
out
enter
dec
pop
push
dec
gs
icebp
in
sub
mov
mov
and
push
xchg
adc
lds
adc
rcll
test
clc
aam
push
jb
in
mov
pop
cwtl
clc
cmpsl
sbb
test
movsb
mov
in
test
sub
cs
sbb
inc
inc
dec
pop
aam
rolb
mov
das
xchg
push
pop
mov
es
popa
mov
roll
xlat
movsb
xchg
xchg
hlt
mov
pushw
add
add
mov
pusha
mov
pop
add
add
jae
mov
imul
pop
out
setb
popf
and
push
fisttps
outsl
push
mov
ret
in
xchg
cwtl
cmp
pop
cmc
dec
orb
xor
jp
addr16
ljmp
mov
sbb
lret
cld
filds
test
mov
cltd
inc
mov
xchg
fwait
jns
adc
das
ja
xchg
ja
test
mov
insb
ret
rclb
xchg
adc
in
jae
aam
lahf
xor
mov
rcr
aad
clc
repz
sub
jle
fidivs
add
pop
sub
pushf
ss
or
stos
xchg
stos
mov
jg
add
dec
xor
std
mov
mov
daa
adc
inc
sbb
loopne
sub
mov
jne
lcall
arpl
lret
nop
ret
add
add
add
movsb
jae
jnp
mov
ja
mov
xor
jno
pop
add
add
jle
mov
test
cli
aaa
pop
daa
jo
xchg
push
lods
push
outsb
mov
iret
js
sbb
sub
inc
mov
in
push
lock
outsl
stos
pop
cltd
dec
inc
aas
xor
jne
popa
jmp
mov
xchg
push
jo
xor
addr16
jmp
adc
popa
in
out
mov
pop
cmp
clc
push
inc
sub
or
dec
inc
xchg
clc
pop
psrad
dec
cmpsl
jnp
xor
sbb
cmp
mov
sarl
lock
gs
or
pop
loope
dec
orl
scas
sub
sub
loop
mov
idivb
sbb
or
std
jmp
fcoml
cwtl
lret
imul
rol
iret
sbb
cmp
mov
data16
add
clc
int3
add
insl
ret
push
pop
jecxz
adcl
fiadds
repz
and
xchg
jns
scas
push
movsb
ret
cmpxchg
rclb
add
add
xor
xlat
out
cld
add
mov
test
add
jno
dec
mov
fnstsw
sbb
dec
mov
fwait
add
mov
sbb
movsl
icebp
fisttpll
iret
inc
push
xchg
clc
lret
call
mov
arpl
or
sbbl
fwait
mov
xchg
mov
mov
add
jecxz
add
into
push
push
and
pop
mov
xchg
arpl
push
out
addr16
outsl
fcoms
sbb
gs
add
lea
sub
cmp
out
sbb
inc
test
lds
jns
pop
push
dec
and
cltd
mov
je
pop
call
inc
in
sahf
lock
push
inc
pop
push
out
jp
stos
mov
mov
bound
mov
out
in
and
jne
fwait
jne
push
bt
pushf
cmp
push
dec
shlb
ljmp
inc
js
and
dec
je
xchg
mov
ljmp
add
add
mov
add
data16
loop
pop
add
add
loopne
das
loop
push
daa
dec
jmp
testb
jp
mov
adc
or
xchg
xor
pop
pop
inc
cld
add
jo
xor
fsubl
jp
jns
push
and
or
sub
dec
lret
nop
andl
lahf
or
out
and
cmc
mov
js
xorl
sbb
pop
lret
add
xchg
cli
lret
test
cmp
mov
scas
ret
mov
push
imul
sbb
dec
rorb
xchg
inc
cwtl
stc
scas
xchg
sbb
xor
cmp
movsb
pop
loope
ret
or
fwait
cmpl
insb
fwait
hlt
add
mov
test
rcrl
mull
cmc
mov
sbb
sub
sbbb
mov
fwait
lret
jmp
mov
cmp
add
add
push
into
push
push
inc
lahf
mov
mov
add
mov
dec
notb
pop
cs
jno
imul
aad
mov
test
pop
gs
es
inc
mov
push
fnstsw
adc
cld
fucomi
iret
add
xchg
imul
and
sbb
push
pop
jne
pusha
adc
arpl
pop
aaa
fwait
in
add
aaa
mov
sbb
push
in
stos
lret
xchg
sti
movsl
fcoms
pop
call
daa
inc
data16
sub
insb
call
repz
mov
cld
dec
pop
in
lods
push
mov
and
sbb
adc
fwait
stos
dec
fnsave
popf
loopne
adc
sub
fwait
jmp
les
test
sub
ret
lret
dec
std
jp
dec
insb
filds
and
lock
repnz
adc
cwtl
sub
pop
jne
mov
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
hlt
jns
std
push
fstpt
out
jmp
int
jmp
add
ficoms
lahf
sub
jmp
cmp
jp
jg
cmp
inc
mov
leave
or
fidivrl
mov
inc
out
xorb
mov
dec
loopne
mov
mov
xchg
mov
into
and
or
xorps
cmp
pop
hlt
daa
xchg
inc
cmp
jp
push
sub
add
shll
rcll
mov
cwtl
cmpsb
or
add
adc
mov
push
push
push
dec
and
sub
mov
nop
mov
dec
scas
pop
cmc
add
scas
push
push
sarl
outsl
sbb
out
xchg
push
xchg
mov
jmp
ja
mov
jmp
scas
xor
mov
push
sub
adc
adc
xor
jle
sbb
rclb
or
enter
hlt
add
int3
add
add
lahf
pop
cmpsl
jne
mov
pop
je
cwtl
pusha
add
add
jecxz
bound
cmp
sub
negb
jl
mov
movsb
arpl
bnd
add
adc
les
dec
mov
add
in
mov
push
jp
fistpl
loopne
imul
out
xor
clc
and
shl
addb
gs
out
dec
int3
inc
jne
cmp
fstps
roll
dec
pop
jne
sub
fnstcw
or
out
test
inc
push
cmp
out
stos
push
jns
mov
gs
push
call
hlt
jnp
subb
and
mov
jno
fnstsw
idivl
js
mov
fstpt
push
fwait
loopne
aaa
imul
dec
loope
or
addr16
std
lcall
rorb
clc
jnp
je
jnp
fadd
xchg
fucomp
or
lock
and
int
mov
and
xchg
pop
inc
mov
add
push
sahf
outsl
mov
sahf
pop
testl
cmc
popf
popf
popa
add
add
xchg
jge
int3
cltd
subb
fidivrs
iret
adc
lock
mov
pop
cmpsl
into
jae
mov
pop
pop
icebp
xchg
fs
fldenv
ja
sti
orl
sub
mov
sub
roll
push
inc
hlt
sbb
mov
popa
inc
pop
sbb
call
scas
dec
int
adc
pop
mov
aaa
sti
pop
lcall
rcrl
mov
and
fdivl
jno
push
pusha
dec
je
cmp
scas
stc
push
fs
jno
mov
fmuls
pop
or
addb
repz
xchg
ss
inc
sub
test
cmp
in
xchg
jae
cmp
lret
inc
and
rorl
sbb
xchg
add
aas
xchg
loope
jns
aad
xor
outsb
push
cmp
xchg
mov
add
xor
and
add
inc
pop
mov
fstps
mov
add
sti
addr16
cmpsb
mov
inc
xchg
sbb
xchg
loopne
xor
das
leave
cwtl
push
rcrb
lds
fnstenv
add
adcl
lock
in
out
outsb
jle
jb
mov
or
aam
inc
test
pushf
add
fstpt
in
imul
rclb
inc
test
mov
mov
out
jbe
ljmp
clc
insb
inc
stos
or
sub
test
push
inc
pop
jb
jle
mov
jbe
jle
data16
scas
loope
sbb
inc
xor
stos
insl
jns
mov
mov
xor
pusha
pop
sub
into
add
lea
dec
pusha
sub
sarb
dec
or
mov
pop
inc
inc
inc
sbb
fcomps
mov
xchg
pop
incb
jb
inc
fwait
rorl
popa
jp
mov
push
cltd
mov
mov
add
mov
nop
lea
cmp
add
repnz
movsb
jle
arpl
push
pop
cmpsl
arpl
add
insb
and
insl
inc
jbe,pn
xchg
mov
jns
cmpsb
dec
repnz
stc
movb
mov
out
push
test
inc
test
out
outsl
ljmp
loope
cli
popf
ret
or
scas
dec
mull
pop
cs
mov
repnz
cmp
loop
pushf
clc
insl
xchg
inc
sub
icebp
cmpsb
or
push
mov
xor
mov
push
loopne
clc
in
lcall
test
addb
add
push
cmp
cmp
imul
mov
aad
ret
outsl
mov
test
test
pop
cltd
movsl
pop
xchg
dec
je
imul
sub
cmp
movsb
fcmovb
test
push
sbb
mov
and
xchg
iret
jo
lods
lret
dec
jge
inc
lret
and
test
addb
cmc
xchg
jmp
orb
adc
pushf
adc
leave
out
test
add
stos
sub
stos
out
jmp
sub
inc
or
subl
add
cmc
jmp
fnstcw
icebp
ds
enter
and
repnz
mov
mov
ss
lea
jg
test
aad
leave
mov
sub
or
insb
jmp
pop
adc
and
dec
mov
pop
or
jae
inc
push
xchg
jg
stc
mov
mov
cltd
aaa
adc
in
jmp
add
pop
mov
addb
in
in
shrb
adc
jp
ljmp
push
lock
ss
test
shrl
pop
stos
pop
imul
sbb
lcall
stc
mov
outsl
cmp
push
xchg
dec
mov
xor
lods
testl
jb
into
jecxz
aaa
mov
aas
lahf
pop
xchg
cmpl
cmc
das
push
jle
je
inc
leave
daa
xor
addr16
xchg
jb
and
add
or
jb
mov
add
shll
fnstenv
push
push
stos
sub
add
daa
es
xchg
pop
xchg
pushf
clc
lea
adc
jp
adc
xchg
aad
pop
jp
stos
in
popa
out
mov
es
and
pop
popa
and
xchg
mov
scas
sahf
test
mov
and
stos
xchg
sub
add
sahf
arpl
enter
mov
les
or
mov
jp
xlat
push
mov
jle
insl
mov
in
add
add
fisttpll
pop
int3
ficomps
jo
fisttpll
shl
test
lds
loop
jge
xchg
or
xor
int3
into
pop
in
std
and
xchg
jle
adc
sub
add
push
dec
daa
push
and
mov
or
dec
jp
xor
lods
jl
sub
jae
inc
dec
in
repnz
pop
cmpsl
ss
ret
cltd
sbb
outsb
mov
jle
movsb
lahf
scas
leave
jbe
pushf
out
or
fiaddl
add
cld
je
jbe
jns
sbb
lods
push
xchg
xor
add
add
lahf
dec
pop
daa
es
cmpsl
add
ficoml
push
sbb
pop
shl
add
push
in
aaa
xor
bound
jo
cmp
out
push
push
lds
sub
mov
arpl
inc
mov
and
xor
pop
scas
dec
xchg
out
in
out
mov
push
bound
sbb
cmp
adc
ja
mov
das
cmpsb
xorb
mov
notb
add
mov
aaa
fisubs
pop
dec
xchg
inc
jg
sbb
push
adc
adc
xchg
add
nop
adc
movsb
adc
push
push
stos
pop
sub
jb
add
xchg
data16
outsl
push
fs
mov
adcb
ficoml
ljmp
lret
icebp
mov
sti
xor
add
push
hlt
inc
popa
fsubrp
add
add
cltd
jmp
fildl
or
filds
add
mov
imul
push
mulb
mov
inc
push
popa
mov
js
cld
aaa
push
xchg
movsl
jno
cltd
cmp
xchg
or
mov
mov
jae
fs
call
jle,pn
mov
int
inc
pop
mov
sbb
out
ja
mov
xor
adc
out
sti
adc
adc
mov
inc
outsb
popl
xchg
mov
int
out
pop
and
push
jnp
and
add
xchg
mov
and
xor
dec
ss
add
push
movsb
push
push
pusha
xchg
sub
add
aam
loope
and
xchg
or
push
jge
push
push
mull
les
cwtl
add
sti
push
sub
fdivl
sbb
inc
fwait
cld
ds
clc
enter
push
dec
sbb
inc
loopne
add
adc
jns
pop
sub
adc
mov
aas
adc
add
mov
mov
push
jg
dec
xchg
dec
clc
sub
jns
push
add
xchg
sub
in
daa
pop
xlat
dec
dec
mov
xchg
sub
jmp
icebp
std
push
fsub
arpl
loop
cmp
in
stc
add
call
div
sbb
icebp
mov
das
mov
aam
test
cmp
les
movsl
call
fistps
mov
shl
mov
cmp
jo
outsb
dec
shl
xlat
sahf
mov
loop
mov
lods
or
jl
sarl
adc
mov
scas
pop
fdivrs
mov
dec
lods
and
addl
out
add
nop
mov
pop
xrelease
gs
pop
and
sub
cmp
add
sub
dec
mov
cmp
cmpsl
jecxz
push
mov
adc
inc
out
pop
nop
jne
loop
popa
xor
adc
push
or
jae
dec
out
pop
int3
pop
jmp
adc
add
mov
fucomip
push
insb
xor
pop
sti
sahf
loopne
imul
add
jmp
push
nop
lea
cwtl
icebp
rol
subb
jge
jg
mov
adc
setno
and
rorl
sbb
sub
sbb
or
mov
xlat
stos
lahf
gs
lahf
bound
repnz
cmp
inc
or
lock
ret
pop
into
cli
aaa
xchg
sbb
and
gs
lds
in
mov
leave
pop
cwtl
add
dec
aas
sub
cmp
sub
pop
jmp
popf
pop
sbb
adc
es
bound
mov
xor
fisubrl
out
cmpsb
stc
cmp
push
push
lock
mov
adcl
inc
inc
add
inc
jecxz
inc
mov
icebp
adc
mov
mov
xlat
sub
and
and
shll
xor
iret
popa
mov
movsb
call
push
int3
icebp
adc
add
imul
dec
out
iret
jmp
aas
in
push
data16
sbb
lret
add
pop
loopne
pushf
dec
fst
rorb
cmp
imul
sahf
iret
jne
mov
lahf
and
stc
fcoml
jo
xchg
cmp
sbbl
in
sbbl
stos
cmp
pop
rcrl
push
cmp
loope
or
mov
sub
xchg
jge
dec
cltd
pop
outsl
in
push
pop
lahf
cmp
dec
popf
and
xchg
aaa
xor
loop
test
fcoms
or
andl
insb
sbb
movsl
ret
mov
push
jbe
adc
pop
mov
pop
xor
sahf
xlat
insb
add
xlat
dec
orb
push
test
les
jno
icebp
ss
cmc
cmp
xchg
iret
lea
enter
shll
mov
scas
fwait
or
out
gs
adc
add
xchg
bound
jmp
xchg
add
pop
jb
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
push
ss
imul
add
in
jae
pushf
inc
addb
insl
ficomps
lret
ret
loopne
pop
sub
or
jno
or
xchg
sub
mov
loop
loope
add
jge
mov
add
hlt
sub
push
call
cld
xor
xor
ja
sub
rcr
pop
sub
insl
daa
or
testl
out
popa
loopne
call
scas
fnstsw
or
shlb
adc
sti
imul
outsl
xor
pushf
fsubs
mov
jb
sbb
pop
cmp
inc
ror
mov
pop
icebp
shlb
jle
mov
jbe
jecxz
add
xchg
out
pop
mov
push
ficoms
sbb
add
mov
pushw
out
push
push
dec
xchg
inc
cltd
jecxz
xor
sarl
arpl
jnp
movsl
enter
pop
stos
popa
and
ret
or
xchg
dec
repnz
sbb
and
mov
sar
push
add
add
neg
std
sub
dec
fwait
cmp
or
add
cld
xchg
push
test
sahf
cmp
ds
inc
das
push
and
xchg
xor
cmpsl
adc
rcrb
ror
add
adc
iret
sub
rorb
roll
fs
and
xchg
add
dec
jno
arpl
lock
and
push
xchg
cmp
mov
test
iret
mov
cmpsl
cmp
icebp
out
mov
and
mov
test
gs
jl
repnz
lcall
pushf
pop
test
out
or
fistpl
pop
sub
and
xlat
mov
sbb
sar
dec
ficoms
in
pop
xor
insl
pushf
scas
arpl
or
jg
subl
sbb
mov
test
dec
push
das
mov
addr16
adc
mov
cmp
mov
inc
push
stos
fld
and
mov
mov
push
mov
leave
add
add
cs
xor
cltd
test
add
add
fwait
out
orb
stos
sahf
push
mov
sub
lods
and
sbb
stos
adc
ret
jl
add
test
and
cmp
or
test
hlt
sbb
out
pop
icebp
and
push
icebp
testb
dec
mov
pop
dec
pop
mov
stos
pop
cmpsb
repz
jl
test
mov
fmulp
scas
mov
pandn
into
mov
sub
add
or
pop
aad
nop
adcb
std
dec
xlat
pop
fnstcw
lcall
lcall
jecxz
scas
data16
push
in
adc
push
insb
mov
fistpl
pop
adc
repz
mov
lahf
imul
push
xrelease
movsl
rorl
pop
jae
arpl
mov
addr16
cwtl
cmp
cs
lahf
add
lahf
sub
ret
pop
movsb
or
xorl
xchg
adc
add
add
ja
out
sbb
adc
outsb
add
add
mov
lock
cs
xor
mov
lods
pop
das
daa
sbb
xor
leave
xchg
aam
lock
in
xor
xchg
sub
ja
shr
cmpsl
sub
test
das
cmp
ja
sbb
or
lahf
jmp
push
mov
pop
inc
and
inc
sbb
xchg
pop
xchg
mov
push
addr16
rolb
ljmp
aas
pop
dec
stos
push
add
movsb
mov
mov
mov
dec
cs
add
dec
sbbl
cmp
sub
dec
faddl
dec
imulb
jp
dec
pop
and
sub
mov
pop
leave
jae
in
lret
ja
push
jmp
pop
test
mov
repnz
imul
cld
xchg
mov
push
in
jle
adc
imul
fs
test
in
imul
cwtd
enter
movsb
in
insb
cwtl
jmp
add
add
sub
ja
mov
lcall
add
inc
adc
in
fstps
sbb
fs
push
pop
outsl
dec
subb
adc
adc
mov
mov
xchg
in
mov
fistpll
lods
js
out
add
hlt
inc
das
psubd
les
call
int
pop
fwait
cld
data16
subb
push
in
jl
jne
jl
xor
mov
popa
jg
adc
daa
or
pop
rcll
dec
mov
scas
push
jbe
loopne
pop
mov
in
sbb
xchg
xchg
mov
or
xlat
lods
cmp
sub
mov
test
pushf
in
mov
std
jg
pop
dec
pop
jmp
xlat
sub
jle
iret
lea
xchg
loope
mov
lea
cmpsb
mov
pop
leave
rolb
dec
xchg
fnsave
sbb
mov
stos
dec
xor
rorb
test
xchg
ss
jmp
sub
add
push
mov
je
add
int
mov
jnp
outsl
cmpsb
loopne
mov
add
add
adc
dec
shll
test
push
xor
shlb
pop
inc
push
popf
fucomp
inc
jp
jnp
data16
xchg
mov
mov
inc
and
cmp
sarl
dec
adc
add
pop
imul
jecxz
mov
adc
test
mov
mov
jge
aad
push
adc
mov
jmp
mov
sbb
psllw
std
vmovntpd
jbe
or
cmpsb
jnp
pop
mov
aas
adc
cwtl
and
push
mov
push
sbb
dec
mov
jno
inc
adc
dec
std
movsb
stos
xchg
mov
xchg
fsubs
in
lock
inc
loop
int
xor
add
std
sti
sub
push
cmpsb
mov
pop
arpl
stc
xor
xchg
cwtl
pop
mov
movsl
sahf
fstpt
mov
xor
sbb
loope
cmp
sub
jle
sub
leave
xchg
pop
add
add
cli
xchg
jle
push
je
add
add
add
jmp
mov
mov
in
fs
shrl
addb
mov
test
ja
sub
dec
mov
ret
fdivrs
pop
sahf
cmc
mov
outsl
repnz
xor
mov
sar
xor
ror
popf
dec
xchg
or
and
adc
push
xchg
arpl
fwait
arpl
mov
jmp
and
xchg
mov
jle
xchg
cmp
pop
mov
fdivrs
mov
cmp
lods
imul
sub
mov
lock
add
mov
imul
and
loope
fstpt
inc
out
mov
mov
cli
push
mov
xchg
xor
mov
cwtl
leave
sbb
hlt
push
jo
sar
mov
mov
mov
push
dec
into
inc
arpl
nop
stc
sub
and
cmp
add
inc
aaa
dec
fwait
jnp
aad
sbb
dec
pop
bnd
add
inc
jmp
mov
mov
xor
cmp
rolb
loope
aaa
imul
iret
rcr
pop
and
js
sub
cs
xchg
aam
push
popa
in
or
scas
adc
lcall
and
adc
enter
and
cmp
sbb
outsb
dec
movsl
and
mov
mov
jg
insl
ja
xchg
inc
adcb
lods
imulb
cmpsl
xor
rorl
xlat
pop
repnz
repnz
xchg
mov
sbb
icebp
repnz
test
push
pushf
cmp
fnstcw
jecxz
arpl
push
push
xchg
inc
fcmovnu
fidivrs
push
jge
inc
nop
push
cmp
sti
lahf
jecxz
stos
or
int3
ljmp
and
add
addr16
jp
popf
ret
add
repnz
xchg
xchg
test
je
push
out
xchg
mov
xchg
mov
outsl
add
add
std
mov
sub
fiadds
jp
jae
add
dec
xchg
mov
fs
mov
adc
not
fstps
push
mov
add
cld
fdiv
stos
and
js
cmp
in
jns
out
imul
cmpsl
or
push
ja
sbb
aam
pop
je
xor
sbb
mov
in
push
ljmp
fiadds
daa
pop
push
add
stos
cmp
idivb
mov
pusha
push
loop
cmpsb
fiadds
inc
cmp
xchg
xlat
out
shlb
mov
push
mov
jecxz
cmp
out
mov
cmp
add
mov
rcll
push
push
mov
jl
stc
fwait
stos
shlb
mov
gs
insl
sti
mov
mov
sbb
outsl
xchg
or
fucomp
dec
push
inc
push
daa
push
out
push
pop
pop
xchg
dec
stos
repnz
inc
dec
mov
popa
aaa
pop
or
rcll
les
in
test
mov
pop
add
add
fstl
lret
in
cld
je
add
mov
and
cmc
xor
dec
xor
sbb
pop
shr
outsl
and
rol
fwait
lods
push
push
and
xor
test
sbb
or
add
jb
jp
shrl
in
stos
xchg
dec
xchg
push
mov
xchg
lock
add
dec
adc
idivl
mov
cmp
dec
outsl
or
fisttpl
in
stos
gs
jno
repnz
sub
adc
cld
lds
cmp
sti
jns
jns
rorl
dec
or
sahf
inc
sbb
mov
std
nop
rclb
mov
inc
cmp
dec
xchg
mov
xor
iret
push
mov
rcl
es
dec
jbe
xchg
and
js
mov
mov
ja
pop
mov
mov
movsl
in
cmc
scas
and
xchg
call
rorl
jno
push
pop
mov
repnz
adc
gs
and
dec
add
add
bound
sub
sbb
jbe
add
test
mov
mov
push
inc
sub
clc
test
xor
xor
cwtl
aad
je
fimull
pop
xorl
and
and
pop
loop
cmp
sub
loopne
cmp
scas
mov
push
jmp
cltd
arpl
push
cmp
sbbl
add
clc
sub
xor
dec
sahf
push
inc
mov
pushf
mov
cmp
jbe
addr16
jne
arpl
loop
jmp
int
loope
mov
add
add
cmp
aas
or
pop
cmp
rolb
insb
loope
das
aas
fmuls
arpl
pop
adcl
jmp
and
aam
incl
pop
dec
mov
mov
dec
pusha
mov
xor
add
scas
incl
and
movsl
mov
leave
pop
mov
dec
ljmp
repz
pushf
insb
add
add
divl
in
sub
push
ja
add
fnstsw
pop
mov
xchg
pop
ja
sbb
test
out
nop
sbb
mov
jbe
int3
test
adc
mov
stc
sar
fistpll
cli
lret
xchg
je
fcmovne
orl
insb
sbb
inc
out
aad
cmp
push
jge
sbb
fucomip
push
push
ret
push
inc
sbb
repz
fwait
out
cmc
xor
shll
inc
mov
cwtl
mov
xorl
andb
cmpsb
push
ret
or
sbb
mov
stos
mov
clc
inc
ret
cmpsl
mov
xchg
test
nop
xchg
repnz
jmp
pop
jne
shl
fwait
pushf
mov
add
arpl
in
cltd
in
pop
xchg
adc
arpl
popf
and
cmpsl
ja
xchg
insl
clc
push
cmp
pop
mov
je
push
arpl
jge
es
mov
add
clc
fisubs
mov
mov
aam
or
add
outsl
pop
xor
cli
cmp
sub
push
mov
push
jg
shl
dec
stos
sbb
and
lret
sbb
flds
sbb
int
jle
sub
test
sbb
iret
lea
and
add
lods
insl
mov
dec
loope
cmc
ljmp
addr16
pusha
mov
inc
sub
and
scas
cmp
pop
xchg
or
stos
insb
jbe
xor
test
or
sahf
jmp
out
xchg
inc
movsb
mov
test
repnz
adc
xchg
dec
je
pop
jecxz
dec
stc
call
xor
inc
cmp
shll
and
fs
mov
mov
lods
imul
pop
scas
jge
mov
push
in
sub
xchg
sahf
sbb
rcll
shlb
lods
sub
shr
mov
or
dec
insl
xchg
lahf
inc
pop
mov
subl
lods
xchg
mov
shlb
mov
xchg
addr16
adc
add
adc
push
ja
sub
add
scas
hlt
pop
xchg
pop
mov
repnz
insb
inc
and
lahf
cmpsb
inc
ja
insl
lret
insb
mov
sub
sub
lcall
or
xchg
and
or
xchg
imul
shlb
frstor
pop
mov
jnp
test
mov
xchg
mov
xchg
frstor
movsl
pop
mov
sub
test
dec
fs
out
shrb
xchg
xchg
adcl
mov
pop
mov
lret
xchg
ja
add
loop
xor
push
fs
stc
xchg
sub
or
pop
call
cmp
mov
inc
daa
dec
jmp
sbb
inc
mov
and
stc
loop
or
push
mov
mov
inc
pusha
jo
xorl
lods
rorb
add
testl
push
adc
add
add
mov
lods
sub
mov
cltd
fdivl
and
shl
push
leave
jae
push
cwtl
in
jns
cld
dec
sub
jns
sub
adc
lret
mov
iret
imul
pop
xlat
and
shr
mov
push
punpckhdq
in
jno
mov
sub
xchg
int
sar
lahf
cld
sub
cmpsb
pop
in
ret
scas
mov
dec
out
jl
daa
loope
jno
stc
and
xor
mov
es
divb
or
jne
sbb
cli
in
or
orb
aaa
xchg
and
xor
jno
mov
xor
jno
and
cmp
in
mov
jne
movsl
stc
out
and
push
mov
and
push
xchg
movsl
dec
or
mov
sub
xchg
pop
mov
jecxz
pop
xor
dec
lahf
notl
out
adc
lock
sub
add
jo
ja
std
stos
sbb
ljmp
add
add
cmp
xor
pop
fcompl
xor
in
or
fs
cmp
orl
into
movsl
and
lahf
fsub
icebp
sarl
xor
mov
testb
adc
cmp
fimull
int
xchg
mov
insb
fisubrs
jb
shl
and
paddb
jmp
fwait
push
jp
int3
adc
in
xchg
dec
push
xchg
dec
inc
loope
call
out
ljmp
enter
inc
dec
or
test
cmp
sub
ss
add
lret
jl
lcall
jmp
repnz
and
pop
in
add
test
dec
pop
sub
mov
fstpt
pop
aaa
xor
stc
sbb
mov
ljmp
iret
pusha
pop
js,pn
bound
sub
push
pop
cli
push
mov
sbb
jp
leave
pop
test
inc
insb
jnp
fld
push
lcall
mov
cmpsb
push
sbb
ss
add
add
in
adc
mov
sarl
pushl
cmp
jbe
shll
clc
push
test
sub
mov
loop
dec
arpl
sub
imul
data16
xor
cmp
xchg
mov
sub
sbb
loop
mov
movsl
in
mov
cmp
test
cs
cmovg
shlb
lock
popa
adc
je
sbb
inc
fsts
mov
sub
mov
ljmp
insb
mov
add
out
data16
and
or
sbbb
adc
xor
and
shlb
inc
jecxz
fucom
mov
nop
sbb
stc
xor
fstpt
lock
add
cmp
into
xchg
mov
jp
shll
mov
xor
inc
mov
dec
call
jecxz
mov
pop
push
cmp
sub
shrl
add
add
cmp
cli
mov
adc
and
jge
add
iret
push
data16
mov
out
xchg
push
xchg
fbstp
inc
or
xchg
push
out
popa
push
dec
xor
mov
aad
xchg
daa
xchg
fcomi
pushf
jge
lcall
lock
out
xor
dec
jge
cmp
mov
cld
into
sbb
inc
push
pop
push
mov
fwait
mov
nop
xor
sbb
dec
dec
aas
fsubl
pop
dec
movsb
sbb
cmpsb
sub
inc
mov
sub
fsubr
cli
pop
rol
shrl
test
stc
mov
nop
or
mov
sbb
stc
insb
or
std
jecxz
insl
sbb
mov
and
xchg
popf
idivb
out
sub
cmp
sbb
int3
stos
add
lret
in
loop
dec
push
imul
push
xorl
leave
sub
fdivl
dec
pop
dec
pop
push
inc
pop
fisttps
cld
test
push
lret
in
in
into
test
add
add
test
lcall
inc
gs
sub
add
xchg
or
jnp
mov
mov
testb
inc
int3
and
enter
xor
popf
aam
mov
sbb
mov
pushf
daa
movsb
push
push
xor
in
into
shll
fdivrs
rclb
or
into
jg
stos
lods
hlt
mov
pusha
inc
fistpl
xor
or
or
unpckhps
mov
jmp
dec
aas
enter
sub
xchg
imul
ret
add
mov
dec
push
mov
jg
in
bound
out
jecxz
mov
into
addr16
addl
negb
mov
mov
in
pop
ss
sub
mov
pop
mov
pop
test
cltd
lcall
mov
mov
or
cmp
mov
sbb
lds
pop
fdivs
and
cmpsb
dec
mov
lret
xor
or
pop
leave
insb
aam
add
add
xchg
xchg
jns
jmp
mov
call
add
test
push
jle
adc
or
out
push
mov
arpl
gs
bound
and
and
cmp
popf
push
aaa
mov
and
dec
inc
popa
jbe
adcl
sub
mov
aad
xchg
mov
arpl
jbe
or
cmp
dec
call
hlt
push
loop
xorb
or
pop
sti
stos
movsb
cmp
imul
xchg
lods
add
xlat
sub
jne
aam
mov
push
sub
dec
jae
xchg
dec
add
sub
jbe
sub
jge
xlat
outsl
repnz
cmp
scas
mov
sbb
jge
cmp
mov
in
jmp
mov
sub
jae
clc
jecxz
int
jecxz
jo
push
pushf
xchg
imul
lock
or
and
sub
add
add
lcall
inc
sbb
xor
add
iret
dec
pop
sub
lods
add
test
dec
insb
mov
inc
pop
pop
imul
push
dec
push
shll
insb
jl
outsl
ret
fwait
and
cmpsb
cmc
test
fisubrl
push
in
stc
mov
inc
insl
xor
cmp
inc
and
in
add
mov
and
pop
inc
dec
xchg
jge
dec
cmpsl
and
ficoml
pop
gs
lahf
xchg
mov
sub
lods
jmp
std
inc
cmpsb
cld
jge
dec
scas
or
xchg
add
sub
pop
mov
sti
xchg
adc
mov
es
or
nop
jge
ficoms
outsb
es
out
and
enter
xlat
jg
testb
test
js
xchg
std
in
adc
and
dec
lds
adc
mov
mov
jb
into
rcrl
pop
jge
adc
dec
push
iret
or
add
jl
cs
idiv
jne
iret
pop
jge
jo
addl
add
cmp
cmp
pop
cmc
sub
in
sub
mov
push
jno
xchg
inc
push
jbe
mov
mov
lods
lret
decl
xchg
sarl
aad
fsubrp
xor
sub
out
test
inc
inc
test
lret
sbb
std
add
div
sbb
stos
nop
pop
jae
pop
in
adc
lods
rcrl
mov
pushf
sub
mov
cmp
nop
sbb
jne
pop
addr16
mov
xor
adc
cmp
push
imul
loop
ljmp
aad
mov
mov
insb
gs
cmp
sub
popf
call
sbb
sahf
iretw
sub
jns
imul
lods
stos
push
mov
rorl
pmulhw
fcomi
xlat
push
sti
push
div
out
fucomi
pop
in
sbbb
mov
fnstenv
jno
icebp
xor
jp
insb
dec
ss
cmp
jmp
add
xchg
pushl
sub
mov
push
add
push
in
mov
pop
dec
jno
cmp
xor
ret
clc
xchg
imul
pushf
faddl
imul
push
aam
inc
jno,pt
arpl
test
xor
sti
fcomp
std
cmp
sub
mov
sahf
call
jne
sub
fnsave
mov
mov
sbb
mov
sbb
and
mov
int
push
shlb
loope
cltd
orl
call
int3
push
pop
mov
sub
fisubrs
sub
jb
push
mov
and
sbb
xchg
cmpsl
nop
roll
cmp
and
popa
push
mov
dec
sbb
pop
pusha
push
movl
adc
scas
cli
sub
mov
jnp
dec
nop
out
ret
lock
mov
ljmp
cli
push
mov
aad
pop
sub
and
mov
pop
daa
js
add
mov
jge
std
sti
iret
ss
push
jno
push
add
add
cmp
xor
imul
call
ss
jecxz
and
mov
subb
push
and
insl
sub
pushf
add
or
in
mov
in
sub
repnz
dec
repz
cmp
xchg
cmp
jmp
push
sub
pop
cmc
adc
shll
mov
xchg
and
inc
scas
dec
lds
inc
mov
inc
dec
test
add
test
jns
add
sub
cmp
test
dec
out
mul
lret
adc
xchg
jmp
or
mov
lcall
cltd
mov
and
pop
jnp
repnz
cli
add
cmpsb
fnstenv
pusha
sbb
sub
push
ret
icebp
test
sbb
mov
mov
call
lock
rolb
sti
push
int3
bound
push
adcb
into
lods
sub
push
mov
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
inc
sub
inc
test
add
cmp
clc
arpl
outsl
subb
jg
pop
jl
push
or
inc
test
shlb
mov
pusha
cltd
pop
lea
rolb
into
jae
sub
xor
scas
out
daa
mov
xchg
test
cmp
insb
aas
inc
adc
insb
dec
and
icebp
adc
cltd
outsb
stos
xlat
inc
mov
out
clc
pop
xchg
jno
repnz
xchg
mov
jmp
xchg
sbb
rorb
push
xor
test
xchg
sbb
mov
adcb
mov
and
insb
mov
test
outsb
pop
xchg
xor
push
mov
subl
xor
pop
sub
jo
xor
clc
sub
inc
loopne
outsb
mov
or
and
lods
cmc
inc
and
xor
fstl
mov
mov
in
adc
mov
mov
mov
imul
add
add
or
adcb
jp
gs
add
pop
jnp
or
jecxz
les
int3
xor
out
int3
mov
dec
push
movsl
lock
mov
jg
push
popa
in
es
lea
pop
lea
push
fdivs
xor
jo
addl
push
insl
popa
pop
or
jb
test
mov
push
mov
add
stc
gs
addr16
in
out
ljmp
ret
jmp
shrl
jmp
orl
and
test
push
dec
je
or
and
xchg
iret
les
shrb
inc
adcl
icebp
jmp
out
lahf
add
sub
jo
fs
loopne
pop
or
xchg
add
mov
sti
jmp
scas
pusha
or
adc
push
lods
mov
std
mov
and
lea
dec
loop
add
and
out
ljmp
lock
xchg
push
icebp
repz
push
xchg
add
stc
pop
cmp
add
cld
pop
jge
mov
mov
jae
cmp
leave
cltd
dec
mov
inc
sub
aam
out
incl
xor
mov
mov
fidivs
jb
orl
dec
jns
or
mov
inc
inc
xchg
out
sbb
sub
enter
aaa
test
sbb
mov
mov
mov
jae
sarl
les
xchg
mov
or
mov
lds
inc
shr
out
mov
mov
daa
push
pop
pop
scas
push
call
stos
xchg
push
push
sahf
popa
jbe
jg
inc
stos
xchg
fucomip
adc
gs
fistl
and
les
adc
jb
jecxz
out
pop
mov
push
lcall
xor
fisttps
or
sbb
pop
mov
orb
add
imul
push
jnp
sbb
push
xor
xchg
add
shll
test
stos
fldenv
dec
cmp
dec
push
out
rorb
inc
jne
and
mov
sbb
in
loopne
sub
in
jnp
mov
addr16
mov
and
inc
sahf
testl
fcmovnbe
xor
mov
test
roll
aas
test
lret
sub
cmp
sbb
aas
or
cmp
icebp
mull
cmc
sbb
icebp
mov
incl
fidivrs
pop
mov
imul
outsb
loop
int
pop
or
or
dec
jae
scas
mov
xor
add
jecxz
pop
sbb
and
jb
pop
mov
pop
mov
pop
loope
cmp
adcb
pop
or
pop
pop
aas
sub
inc
int3
push
lock
test
scas
rcrl
lock
xor
mov
add
add
aas
or
mov
fwait
daa
int
pop
mov
add
push
jmp
inc
test
jmp
mov
sbb
adc
push
push
fistl
aam
lea
cmp
outsl
testb
push
insb
and
xor
bound
add
mov
pop
mov
sub
ja
cmp
or
int
jmp
pop
lret
notb
es
in
cmp
stos
int3
add
mov
pop
mov
lea
int3
xor
and
test
sub
iret
js
pop
clc
mov
ret
xlat
stos
xor
mov
movl
outsl
or
js
inc
leave
cmpl
push
cmpsb
cmp
xchg
mov
mov
xor
cmp
sub
sub
sti
movsl
je
mov
jge
sbb
test
imull
out
push
xchg
adc
lods
sarl
in
sbb
flds
daa
push
lods
adc
fsubr
pop
sbb
lret
idivl
add
insb
fidivl
bound
pop
xchg
pusha
mov
add
insl
fnstsw
hlt
add
test
pop
jns
pop
xchg
lods
push
loopne
jb
das
pop
enter
dec
stos
cmpsb
fwait
pop
mov
iret
scas
mov
mov
mov
lret
mov
push
fisubrl
mov
and
jg
mov
lods
add
lahf
test
cmp
ror
mov
daa
stos
fmull
loope
call
iret
jg
sub
dec
xchg
xchg
js
ljmp
mov
idivl
rorb
mov
jge
xchg
jo
mov
sahf
adc
mov
aad
push
je
repnz
lret
test
mov
mov
jl
test
and
fcoml
shlb
in
pop
cmp
dec
ret
jbe
mov
fisubs
mov
imul
scas
lahf
xor
mov
cs
mov
repnz
push
idivl
int3
hlt
mov
loop
jnp
adc
mov
pop
fs
jl
clc
add
add
cmp
mov
jns
scas
and
add
add
inc
push
gs
ljmp
mov
ds
sbb
add
dec
es
out
daa
mov
imul
mov
sub
pop
out
ret
inc
scas
pop
xchg
test
jbe
out
cmpsb
call
lahf
dec
mov
testl
mov
stc
scas
cltd
push
jecxz
and
mov
add
in
dec
or
mov
sbb
mov
in
fucomp
sti
cmp
pop
jbe
adc
xchg
subb
push
mov
cmc
clc
gs
in
xchg
cld
push
ds
in
cwtl
shr
mov
and
das
mov
add
mov
adc
cmpsl
testb
mov
js
inc
add
pop
mov
bound
mov
out
popf
lods
pop
fwait
std
mov
cli
add
jg
and
or
lcall
test
cmp
or
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
fisttpll
push
add
add
xchg
aad
fimull
xor
pop
cltd
push
mov
add
outsb
adc
test
and
pusha
daa
xchg
dec
jmp
mov
dec
mov
sbb
call
sbb
dec
mov
call
pusha
sub
xor
dec
ljmp
and
sub
insb
jmp
mov
sub
xor
push
mov
inc
cmp
repz
mov
frstor
fisubrs
pop
dec
dec
adc
adc
mov
mov
into
iret
mov
adc
jle
cli
push
jmp
fistps
cmpsb
adc
addl
ja
into
inc
pop
es
out
jns
cmc
cmp
stos
mov
or
push
in
js
hlt
mov
aaa
push
mov
cmp
loop
pop
cmp
sbb
mov
mov
pand
icebp
stos
mov
ret
pushf
add
add
adc
std
out
ljmp
outsl
mov
add
sbbl
fcmovbe
mov
add
jp
into
jge
xor
lds
add
in
hlt
mov
xor
nop
loopne
sub
lock
mov
inc
ds
dec
cltd
and
orl
je
adc
outsb
fcomps
mov
jbe
xchg
xchg
rcrb
cs
out
jmp
push
cmp
add
jb
aas
inc
adc
fs
shlb
rol
stc
jge
dec
push
pop
pop
addb
das
inc
jmp
loopne
divl
ja
hlt
adc
push
pop
mov
out
mov
add
sbb
sbb
cmc
or
sub
jns
xchg
cmc
insl
adc
push
mov
fisttpl
inc
dec
fstl
cmp
lods
mov
test
call
ret
push
cltd
cmp
outsb
or
movsb
xlat
orl
xor
arpl
mov
ss
xchg
lcall
add
add
mov
icebp
fs
or
lea
add
mov
insl
subl
inc
stc
insb
test
gs
add
dec
in
arpl
neg
mov
sub
xchg
pop
sub
in
loop
clc
mov
enter
loope
push
jecxz
pushf
xor
fildl
cmpsl
or
stos
sub
cmp
bswap
nop
std
leave
out
test
cmp
ljmp
fcoml
push
cmp
daa
push
xor
push
xor
inc
popa
lret
pusha
mov
sub
cmpsb
push
cmpl
inc
jmp
mov
mov
add
jns
ss
mov
jg
fidivs
inc
xchg
add
orl
xor
out
or
xchg
pop
and
jns
jbe
dec
sbb
mov
addr16
imul
in
enter
push
add
sub
cmp
or
repz
ja
mov
sbb
add
inc
or
test
fcomps
add
dec
jns
add
add
jbe
test
inc
push
sbb
subl
testl
and
dec
add
push
mov
dec
repz
sti
mov
pop
sbb
adc
xchg
lret
xchg
lods
jmp
cmp
ret
mov
sub
cmpsl
jecxz
outsb
jb
arpl
push
jle
arpl
and
orl
stos
push
pop
dec
pop
ss
popf
push
flds
ror
xchg
ja
mov
loop
mov
ja
mov
jb
popf
idiv
sar
inc
mov
ret
out
inc
arpl
ret
in
cmpsl
dec
int
add
jg
mov
mov
mov
pop
and
push
je
rorb
andl
mov
lds
sbb
in
outsl
jno
lods
mov
lock
rorl
roll
xchg
inc
pusha
test
je
out
mov
add
ljmp
dec
mov
add
jle
add
add
cwtl
jle
cmp
xlat
test
mov
cmpsl
popa
imul
pop
mov
pop
jbe
push
stos
insb
mov
jns
push
dec
es
pop
cmp
pcmpeqw
stc
inc
popf
mov
fwait
mov
dec
sub
jl
ret
jo
pop
nop
pop
jns
addr16
adc
sti
dec
dec
mov
pop
orb
fldl
xor
cmpl
dec
dec
out
sahf
cmp
es
inc
cmpb
add
mov
mov
aam
sub
imull
push
sub
sbb
push
adc
dec
jne
mov
cmp
add
test
into
lds
adc
imul
pop
clc
dec
call
mov
mov
mov
jge
sub
sbb
les
pop
outsb
xor
pop
loope
inc
dec
mov
daa
adc
fwait
imul
add
aaa
shlb
cmc
div
testl
mov
add
je
cli
mov
aad
push
outsb
cltd
xchg
js
outsl
inc
iret
mov
ljmp
lret
inc
sahf
and
ds
js
xor
cmp
push
push
out
xchg
loop
adc
xchg
xorps
sub
mov
in
arpl
scas
ljmp
sbb
sbb
or
iret
shrb
inc
movsb
mov
into
sub
int3
ret
lret
sub
ret
ret
out
mov
test
ds
adc
ds
and
mov
sbb
mov
sbb
frstor
pusha
mov
mov
mov
jno
stos
test
cmp
adc
pop
and
inc
idivl
fs
lock
adc
in
repz
xchg
rcrl
stc
outsb
pop
insl
mov
test
push
lock
cmp
add
pop
push
nop
push
sahf
rcr
pop
adcb
mov
scas
or
add
add
mov
adc
enter
sbb
fsubr
loopne
stc
cs
pop
xchg
mov
push
jg
sub
mov
xchg
outsl
hlt
jo
mov
outsb
inc
jmp
adc
shrb
jle
sar
or
mov
nop
lret
inc
mov
fstpl
mov
mov
rolb
decb
and
jg
adc
cmc
jne
test
inc
gs
mov
push
cmp
and
sub
int3
int
scas
or
in
aas
xlat
add
sub
adc
xchg
and
mov
mov
sti
jl
xchg
insb
adcl
ds
xchg
mov
cmp
push
adc
pop
jno
sub
and
loope
ja
ret
push
les
sbb
sub
mov
lods
in
stos
jno
fwait
dec
notb
sbb
add
shll
cmpsb
jcxz
fimull
lea
add
jo
lea
xchg
dec
jb
xchg
aas
loope
mov
push
add
adc
mov
or
inc
mov
mov
cmp
lds
mov
push
sbb
jp
mov
jecxz
mov
testl
cmpsl
sub
mov
cmp
jmp
ret
adc
mov
adc
sbb
mov
mov
mov
mov
shll
inc
mov
add
sbb
loop
jp
push
sub
bound
jg
lea
into
and
cmc
ficomps
cmp
cmp
sub
mov
outsl
xchg
jl
cmp
inc
imul
cmp
xchg
popa
movsl
adc
push
xchg
and
xchg
xchg
add
xor
jg
mov
add
clc
jnp
jg
in
cli
enter
neg
push
lcall
add
ja
roll
and
sub
mov
pop
js
add
fidivl
jno
dec
out
mov
out
or
add
hlt
xor
test
sub
call
cmp
jns
mov
jg
pop
fistpl
in
and
dec
std
scas
int
ret
xlat
daa
add
push
inc
mov
mov
jne
loopne
mov
xchg
cmp
or
out
mov
jmp
sub
arpl
bound
lahf
stos
mov
aas
mov
cmp
jge
sbb
ja
idivl
xor
repz
add
mov
in
jb
sti
push
or
cwtl
or
repnz
xchg
jno
gs
mov
and
repz
loopne
ja
adc
xchg
mov
xlat
adc
je
test
or
sub
iret
xchg
mov
popf
dec
jecxz
loope
cmpsl
pop
and
inc
ss
add
ljmp
cld
gs
mov
xchg
xchg
add
add
cmp
cmp
pop
and
out
scas
aad
xchg
pop
inc
inc
popa
rcrl
daa
subb
divl
mov
nop
test
lret
cmp
mov
notl
fwait
fistpll
sbb
movsl
out
out
push
in
dec
sti
and
sbb
outsl
aas
insl
dec
into
mov
mov
int
int3
popa
mov
push
cmc
subb
xchg
cmpsb
xor
lahf
mov
fneni(8087
inc
insb
aam
int
inc
and
lods
insb
dec
jb
inc
pop
xchg
mov
clc
js
lock
mov
idivb
add
icebp
mov
fstl
popa
insb
outsb
dec
and
ja
dec
jmp
push
dec
xor
push
pop
fs
js
fdivr
daa
ret
iret
pop
adc
cmp
leave
xchg
stos
pop
icebp
lcall
test
loope
pop
push
mull
mov
xchg
pop
or
push
push
mov
xchg
jp
and
mov
add
jl
sar
std
jle
pop
popf
scas
lock
test
add
fs
out
imul
movsl
data16
lods
popf
and
inc
push
adc
sti
popa
xor
lcall
fs
mov
mov
inc
stos
mov
scas
sub
cmp
add
and
outsb
ss
jno
lods
cmp
les
aad
cmp
popa
or
imul
cltd
pop
cmpsb
xchg
imul
mul
pop
jae
dec
fwait
mov
notl
outsb
and
jecxz
sarb
sub
fsubrl
in
pop
jle
pop
mov
xor
sahf
sub
sub
jle
call
pop
push
pop
dec
out
hlt
outsb
xor
ja
filds
add
fldenv
and
ds
fmul
testl
mov
stc
lret
cs
sub
push
ss
pop
lods
in
mov
mov
or
mov
mov
pushf
or
cmp
mov
add
add
cwtl
or
stos
xchg
cmp
in
fldl
add
add
lods
stos
fldcw
mov
dec
cwtl
fcmovne
add
sbbl
adc
sub
pop
arpl
or
fidivl
xchg
and
xchg
xchg
inc
xchg
in
test
test
xchg
cmp
les
mov
aad
jo
adc
scas
loope
jb
or
xchg
add
in
dec
fidivl
add
ljmp
fadds
out
and
xor
sarb
and
push
add
lret
push
mov
les
insl
imul
xchg
sbb
mov
adc
dec
cmp
cmpsb
cmpl
xor
mov
jle
outsb
or
cltd
push
lcall
ret
shrb
enterw
dec
outsl
jne
and
add
shl
data16
mov
jae
repnz
jnp
repnz
lock
in
bound
or
jo
cmp
inc
push
sub
pop
mov
pop
sahf
movb
add
outsl
sti
mov
mov
push
popf
xor
add
add
xor
test
sub
cltd
outsb
test
aas
inc
stc
int3
sub
mov
sbb
sbb
out
pop
sbb
jmp
fs
mov
div
add
outsl
cmp
push
out
mov
jno
xchg
push
pop
jnp
lea
sbb
jnp
sti
call
sub
mov
lock
int
adc
or
rcrb
push
sub
jmp
fcomps
cmc
stc
jle
int
adcl
mov
adc
add
sub
push
rcrb
iret
mov
mov
mov
es
cmc
xchg
xor
inc
call
fisttpl
jmp
fwait
or
sahf
sub
and
push
sbb
les
out
popa
stos
imul
xchg
pop
in
call
sbb
dec
sub
sbb
or
sbb
xor
cmp
cmp
mov
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
arpl
pop
cmc
idiv
jecxz
push
pop
repz
jl
push
clc
inc
xlat
pop
jo
push
test
mov
int
jo
orl
aad
jne
xchg
push
jmp
fadds
ja
xor
leave
addl
das
push
aas
pop
inc
dec
mov
jle
sarl
insb
pop
dec
cmpsl
fs
mov
jg
test
loop
xchg
dec
pop
jnp
aaa
and
xchg
jne
jge
js
mov
sti
jle
popa
and
or
sahf
xchg
aaa
outsb
scas
push
jmp
rcrb
cs
and
ficomps
jge
xor
lds
or
mov
mov
jmp
add
xlat
stos
faddp
cmpsb
stc
sbb
fs
inc
xchg
out
xchg
insl
mov
cmp
xor
out
lcall
pop
repz
xchg
add
aas
mov
lock
sub
lods
inc
popf
mov
out
pop
mov
ss
add
add
mov
mov
jmp
test
xchg
mov
add
add
ljmp
dec
loop
addl
jno
rol
push
mov
sbb
sahf
adc
stos
xchg
je
out
ss
jo
adc
lret
insb
xlat
add
cwtl
xlat
cmpl
fcoms
push
mov
xchg
mov
lahf
imulb
test
jbe
and
mov
mov
dec
ss
mov
jns
loope
mov
aad
dec
sub
cltd
xlat
scas
fcmovu
push
cmp
ret
fsubl
pusha
xlat
loope
ret
dec
lea
and
jno
push
mov
fsubl
fstp
dec
out
arpl
fbld
cmp
scas
movsl
push
sub
aaa
lods
pop
les
mov
ja
pushf
arpl
xchg
das
jno
fcom
outsl
mov
mov
repz
push
lret
sbb
pop
fisubrl
in
jge
pop
inc
loopne
out
test
aam
loop
cmpsb
js
movsb
adc
in
xlat
aam
add
adc
sbbl
popl
out
mov
add
add
push
cmpb
sub
xchg
dec
hlt
imul
jnp
dec
pop
loopne
test
pop
arpl
or
shl
into
jb
jg
ss
push
xchg
jbe
imul
mov
shll
pop
fcmovnu
lahf
jl
sub
adc
addr16
int3
dec
push
mov
mov
xchg
jge
test
repz
es
jae
jmp
je
mov
lods
and
ja
jno
or
wbinvd
aam
jo
lret
repz
insb
adc
jns
push
lret
pop
dec
cmp
push
adc
cmpsl
jge
mov
adc
fildl
dec
pop
clc
mov
push
mov
lods
outsl
leave
jp
into
shrl
sub
loop
leave
inc
mov
testl
out
xchg
inc
inc
xor
outsl
jle
pushf
jnp
pushf
loopne
bswap
lods
pop
insl
roll
sub
iret
mov
test
cli
xor
int3
cltd
bswap
je
add
mov
imul
movsb
and
push
cwtd
lods
mov
add
add
mov
push
outsl
cld
lahf
sub
cs
cmp
dec
sub
cwtl
sbb
fcmovnbe
mov
mov
enter
inc
mov
push
jecxz
imul
inc
push
jmp
adc
es
mov
cmp
jnp
mov
sbb
or
sub
iret
lcall
pushf
fisttpl
and
sub
fadds
nop
mov
mov
xchg
lahf
jb
sbb
test
scas
fstpl
loope
loope
ljmp
rcl
js
pop
or
and
add
inc
add
pop
jb
rcrb
gs
scas
pushf
xor
inc
jmp
sbb
pop
mov
mov
xor
mov
cmpsb
adc
lret
xor
addr16
inc
pusha
cmpsb
pop
push
leave
mov
clc
mov
jge
fwait
mov
add
mov
jge
jg
ljmp
in
lahf
mov
lock
pushf
add
add
icebp
mov
and
mov
out
int
adc
cmpb
sahf
push
push
andl
mov
mov
roll
movsb
je
js
movsb
pop
out
stc
sub
cwtl
fbld
lods
rcrl
pop
ror
cmp
cmp
pop
jne
cld
or
hlt
xchg
push
add
dec
lahf
out
jp
cwtl
dec
mov
out
sbb
xchg
nop
jnp
jmp
iret
xchg
jnp
ss
divl
leave
jg
jb
jecxz
loopne
sbb
adc
cmc
push
data16
pop
out
out
xchg
clc
ret
movsb
jl
mov
mov
jnp
pop
sbb
add
and
jb
cmp
arpl
ss
adc
int3
add
add
mov
mov
push
pop
bound
pop
mov
mov
jp
sbb
or
push
insb
pop
enter
lods
enter
cli
jmp
fcmovb
mov
ljmp
add
add
ja
out
inc
sub
or
sbb
jo
popf
add
add
sar
les
or
cmp
lods
popa
inc
outsl
cs
mov
push
cmpsl
sti
mul
jb
pmullw
or
loope
cmpl
fldcw
add
push
or
mov
cld
xlat
jns
or
xor
orb
cld
call
sete
sub
add
lods
shl
xchg
js
push
cmp
push
mov
xchg
sub
inc
lds
movsl
imulb
outsb
scas
push
lods
aam
xchg
dec
cmp
jns
add
push
mov
ja
into
dec
pushf
push
hlt
out
lahf
pop
jo
pop
das
dec
cmp
dec
sbb
push
jnp
xor
ss
loopne
jns
gs
ret
xor
fnstcw
push
jae
cmp
push
aam
cmpsb
cmp
mov
mov
inc
add
shr
adc
addr16
or
inc
sub
nop
test
or
out
fisttps
inc
bound
add
loop
test
mov
cld
mov
leave
sahf
add
add
jecxz
sub
mov
stc
lods
xchg
cmp
mov
push
cmp
leave
lahf
fwait
in
pop
notb
add
mov
setae
ret
dec
add
dec
or
data16
aas
jmp
push
mov
nop
sbb
inc
adc
outsl
loope
inc
or
sbb
xor
inc
cs
enter
and
addr16
rol
add
jmp
rol
clc
pop
push
stos
lods
sbb
mov
push
adc
dec
mov
or
shrb
dec
xchg
mov
int
jge
movsb
hlt
test
xor
fmuls
mov
lret
hlt
cwtl
cmp
outsb
ja
stc
cltd
or
jno
pop
inc
lds
je
arpl
data16
pop
outsl
mov
pop
sbb
pop
pop
rolb
sub
mov
add
add
mov
repz
repz
lock
lahf
add
add
cwtl
mov
jmp
hlt
mov
cmp
mov
sub
cmp
fsubs
pop
sub
stos
insb
push
dec
insl
std
jge
add
or
lds
jns
push
sbb
sbb
dec
pop
mov
ret
inc
mov
cmp
sub
and
test
movsl
xor
mov
leave
xchg
aas
cmp
pop
lea
cmp
inc
pop
sbb
fisttpll
mov
pop
xchg
out
and
mov
sbb
mov
inc
adc
aam
jno
adc
into
cli
jno
jge
ret
fs
jecxz
mov
popl
or
lea
adc
insl
iret
jp
push
int
inc
aad
jno
and
dec
xor
test
xchg
xchg
xor
test
adc
lret
adc
imull
imul
rcll
ja
pop
wbinvd
add
add
mov
inc
inc
add
mov
add
mov
mov
out
sub
fmuls
push
fwait
jge
and
js
mov
ficompl
lcall
sbb
fcmovne
shlb
jmp
lock
or
movsl
xchg
add
mov
jnp
inc
cmp
mov
sti
xor
hlt
mov
cs
push
inc
lods
lods
adc
lret
iret
dec
and
pop
pop
popf
fs
inc
jl
mov
xchg
aad
push
or
or
push
push
cmpsb
and
std
enter
xchg
mov
jecxz
lcall
add
icebp
orl
fwait
popf
fisubl
jmp
xchg
scas
mov
sahf
pop
jno
sub
insl
out
adc
adc
fcomi
ret
insl
js
fstl
cmpsb
pop
or
xlat
test
push
addl
repnz
xorl
inc
xchg
jmp
aam
mov
mov
or
add
add
std
inc
mov
imul
mov
add
sub
mov
mov
mov
loopne
aad
adc
daa
dec
xchg
loopne
ror
mov
mov
sub
push
shl
mov
push
loop
test
fisttps
movsl
insb
mov
mov
xor
rcl
mov
xor
sbb
pop
pop
lods
jmp
pop
xchg
mov
fdivrs
jno
jno
out
mov
lcall
movsb
fs
rclb
rclb
int
stos
inc
push
in
jae
sub
andb
xor
xorl
inc
and
les
negl
lret
sti
xor
pusha
inc
roll
lea
popa
dec
std
iret
pop
add
jmp
ja
jmp
jno
jbe
je
push
or
roll
jnp
push
pop
and
call
add
add
inc
fdivl
push
dec
mov
frstor
add
fmuls
sub
mov
mov
dec
hlt
rcr
xchg
jo
push
andl
add
xor
adc
jp
jge
repnz
or
inc
sbb
add
fs
popa
nop
pop
jae
test
push
scas
cltd
mov
lahf
push
jbe
sbb
sbb
mov
xchg
pop
dec
sti
fbld
xchg
das
int
jbe
test
shrb
mov
or
std
add
fmul
adc
in
bound
xor
push
popf
fdivl
mov
ret
lcall
mov
cmp
lahf
leave
hlt
lds
push
loopne
xor
fwait
cwtl
and
xchg
ja
jle
xchg
inc
inc
lea
mov
fidivl
daa
and
stos
sub
clc
fs
je
andb
test
xchg
inc
push
dec
loop
sub
in
lret
in
pop
add
add
sbb
mov
sbb
push
loop
add
add
imul
lahf
inc
push
mov
into
out
daa
and
aad
push
push
in
pop
pop
repz
dec
cmp
pop
daa
push
gs
test
call
int3
adc
repz
sbb
jns
fcoms
sahf
fldcw
repnz
add
hlt
sbb
loope
mov
xchg
mov
dec
mov
mov
dec
mov
push
loop
xchg
outsb
or
mov
jp
adc
fwait
in
popf
pop
push
fdivrs
mov
mov
imul
pop
push
lods
sub
out
movb
js
jmp
adc
sub
inc
adc
js
clc
cmp
mov
xchg
add
pop
push
pop
daa
lcall
xor
and
ljmp
pop
aas
repnz
aas
pop
adc
sbb
test
push
aaa
shll
xor
push
ret
push
push
jnp
add
pop
test
stos
hlt
jmp
cmp
jbe
shll
adc
add
pcmpeqw
push
in
movsl
sbb
in
out
jb
dec
adc
popf
push
repz
fildl
stos
stos
sub
dec
gs
in
add
shrb
xlat
inc
icebp
push
into
ds
ja
xchg
mov
mov
cmpsb
mull
mov
test
aam
repnz
sub
std
and
xor
jnp
adcb
add
xorb
inc
sub
call
icebp
shll
adc
cltd
into
outsl
loope
out
shrl
inc
repz
mov
movsl
fmull
or
xchg
nop
out
loopne
repz
and
pop
cwtl
dec
addb
cmp
aaa
stc
sbb
xorb
cld
aas
mov
subb
fs
popa
pop
ret
cwtl
xchg
cmp
repnz
sub
ret
jecxz
adc
xchg
lret
out
mov
lock
adc
ret
pop
or
xorb
cld
testb
mov
mov
push
add
add
push
nop
out
xlat
out
jg
in
xor
fnstenv
mov
add
ljmp
stc
pop
aad
mov
mov
mov
repz
or
das
sbbl
leave
test
dec
sbb
stc
dec
cmp
jmp
aas
lock
out
mov
std
inc
repnz
clc
pop
jp
insl
mov
push
ljmp
inc
mov
movb
add
xchg
popf
inc
cmpsl
mov
andl
movsl
xchg
loopne
aaa
adc
cs
mov
int3
pop
push
xchg
pusha
xchg
nop
xchg
xor
jnp
nop
xor
mov
in
imul
addr16
cmp
sbb
andl
lret
lock
sbb
xchg
shlb
mov
add
jne
sar
test
lods
mov
orl
sub
push
sbb
ljmp
sub
xchg
rep
ss
dec
fs
inc
pop
pushf
sarl
nop
ret
insl
insl
fwait
jb
jmp
fadds
add
sbb
pop
fbstp
fldl2e
in
mov
add
add
pop
sub
dec
aas
xchg
fnclex
xor
ret
jno
test
pop
andl
rcrb
jle
mov
das
cmp
sarb
ja
fmulp
pop
add
mov
jae
mov
scas
sub
testb
xchg
insb
cmp
add
push
pop
xor
jnp
inc
out
pop
lret
xchg
out
xchg
sbb
jge
cld
pushf
ja
in
cmc
jbe
inc
hlt
mov
xchg
push
pop
mov
jle
adc
aad
dec
xchg
leave
outsl
das
push
sbb
outsb
jp
popa
xchg
das
loopne
xor
aam
jge
rcr
xlat
jne
dec
test
dec
pop
push
sti
add
outsl
mov
shr
in
and
mov
xchg
mov
fadds
sbb
xor
andl
repnz
cmp
add
add
mov
fadds
mulb
add
das
push
pop
cmp
sbb
cmpsl
xchg
imul
sbb
mov
addr16
shlb
sarb
xlat
push
sbb
test
lret
icebp
or
call
push
sbb
shl
adc
add
cli
push
or
ja
jne
and
xor
notb
xor
sahf
lret
push
and
lods
cmc
repz
mov
fisubl
gs
movsl
xchg
js
inc
push
outsl
push
ss
adc
push
sub
lret
incb
inc
sar
test
push
sahf
mov
add
xchg
fnstsw
test
inc
xchg
mov
mov
shlb
repnz
movl
push
clc
shl
inc
and
imul
sbb
xchg
push
sub
cmp
xchg
cmp
and
jecxz
in
push
inc
push
mov
mov
sub
mull
add
add
mov
push
sti
jmp
push
mov
testb
add
add
shll
pop
aas
lods
push
sti
int3
sub
arpl
sti
jno
or
repnz
into
ret
mov
mov
insb
mov
iret
jp
shll
ljmp
inc
movsl
icebp
sub
test
cltd
and
dec
out
sub
call
push
mov
incl
mov
pop
pop
mov
push
inc
pop
mov
imul
cmp
push
pop
add
add
push
sub
sub
jmp
ret
iret
mov
sbb
or
mov
mov
dec
aam
cmp
faddl
jne
stc
call
jno
ret
mov
sub
fistps
outsl
andl
cmp
xor
jb
out
mov
fidivrs
add
mov
loope
fadd
stos
shl
rclb
dec
je
int3
mov
divb
aad
dec
mov
ficomps
xlat
dec
cmp
add
add
jecxz
lock
lock
add
sub
add
pusha
pop
jl
imul
mov
stos
fs
cli
lods
jp
out
in
sar
ret
sarb
call
fstpt
test
fbstp
jg
add
push
inc
ret
cmp
jns
aas
inc
leave
addl
iret
xor
mov
inc
push
pop
jae
jp
xchg
inc
jns
shll
rolb
adc
xchg
mov
or
das
fs
mov
les
or
scas
insl
repz
and
xor
dec
mov
sub
xor
inc
in
cld
imul
es
imul
dec
lcall
repz
push
push
sbb
outsl
jmp
fwait
inc
mov
push
in
fwait
aam
cli
ret
push
fadd
add
shrb
insl
lea
es
push
pop
lcall
and
xchg
arpl
pop
ljmp
add
add
cld
mov
leave
fdivp
fistpll
add
idivl
jno
mov
rcrl
jb
pushf
insl
loop
push
rorb
pop
sti
nop
ss
jg
add
test
cmp
add
xor
mov
cmp
lcall
aaa
push
xchg
xor
gs
es
hlt
xor
add
sbb
dec
add
xor
dec
in
rolb
ss
mov
movsb
int
add
sbb
push
aaa
orb
xchg
lret
xor
cltd
aas
adc
jmp
in
dec
ds
cmpsl
pop
xor
mov
sbb
xchg
push
lret
cmp
test
mov
mov
mov
jns
mov
inc
addl
fimull
push
outsb
cltd
out
ret
loopne
rcr
scas
int
ljmp
xchg
sbb
mov
lock
mov
mov
test
aas
mov
sbb
jle
add
mov
dec
das
pop
out
cmc
mov
push
cmpsl
daa
mov
lods
add
add
enter
xlat
daa
mov
fucomp
std
push
mov
sbb
sbb
das
sub
cld
fwait
push
pop
nop
sbb
aaa
mov
or
repz
rcrl
or
sbb
enter
adcb
push
imul
daa
in
into
push
mov
lds
or
jb
mov
push
adc
dec
clc
mov
or
mull
pop
fstpt
mov
inc
inc
jne
scas
pop
sahf
cmp
ja
push
dec
pop
pxor
mov
pop
sub
mov
cmp
cwtl
inc
xchg
sahf
shrb
mov
ds
lods
movsb
cltd
movsb
iret
pop
sub
ret
sti
mov
arpl
jmp
sbb
mov
sbb
aaa
cs
outsb
pushf
mov
jnp
sub
mov
test
addl
mov
jg
jne
shl
sub
adc
jbe
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
enter
add
add
and
hlt
sbb
mov
lret
mov
sbb
pop
add
das
sub
imul
sbb
mov
cmpxchg
pop
in
push
or
add
inc
jne
data16
inc
data16
scas
aam
push
das
test
and
sub
adc
movsl
test
jns
cmpsl
xchg
cli
mov
jnp
ljmp
jecxz
je
out
jne
mov
into
insb
cltd
out
jo
fldcw
nop
dec
jns
cltd
mov
outsb
push
xor
mov
mov
movsb
out
loopne
out
aad
ss
mov
popa
icebp
scas
jle
js
jmp
nop
scas
or
cmp
das
mov
mov
or
imul
out
dec
push
mov
aad
arpl
push
add
dec
int3
hlt
sbb
test
mov
dec
add
int3
out
add
fidivs
loop
ljmp
push
scas
add
add
inc
xchg
inc
and
push
jmp
and
xor
jb
shlb
fcompl
and
xchg
rcll
pop
jbe
movl
jge
jg
ss
aad
xchg
repz
cmp
cmp
mov
jo
lods
fdivrp
dec
daa
bound
adc
xchg
out
cwtl
xlat
cld
fwait
lods
out
mov
out
out
jbe
imul
pusha
push
int3
popf
dec
aad
xor
adc
fwait
ds
add
icebp
jns
sbb
pop
sbb
dec
mov
fistl
push
inc
xchg
jbe
pop
xor
push
jle
aaa
cld
fwait
leave
mov
and
sbb
sbb
shlb
popa
into
xor
adc
int3
push
push
mov
mov
or
dec
xor
sahf
rcr
jo
pop
loopne
dec
mov
aaa
lret
lock
hlt
mov
sti
cmpsb
in
mov
add
add
xchg
jg
jmp
std
mov
pop
faddp
sbb
add
je
sbb
fsubl
xchg
mov
bound
mov
loope
jbe
mov
xchg
sbb
pop
cmp
movsb
lret
and
mov
push
mulb
mov
jbe
adc
daa
movb
call
mov
test
outsl
mov
jbe
sti
adcb
add
test
repnz
xor
mov
or
out
push
mov
push
mov
sub
aaa
rcr
scas
sbb
ds
int3
dec
cmp
out
call
sub
sub
mov
out
filds
push
adc
ss
cld
clc
in
pushf
push
js
push
and
sbb
outsl
jmp
cmpsb
cmp
mov
sub
fwait
dec
cmc
je
inc
gs
hlt
dec
ds
testb
add
test
cmp
rep
mov
adc
test
fwait
pusha
or
inc
cmpsl
les
sbb
add
push
divb
inc
mov
xchg
pop
push
mov
add
addr16
mov
pop
add
in
imul
jno
cli
test
paddb
mov
jbe
in
xor
push
pop
lds
inc
imul
subl
jle
push
dec
out
push
ljmp
add
daa
es
cmp
leave
jge
ja
dec
xor
lock
dec
xchg
jge
fwait
mov
ret
pop
and
push
shlb
ss
nop
gs
mov
lcall
pop
xchg
xchg
inc
jp
sbb
mov
jnp
mov
push
pop
inc
scas
mov
mov
or
push
adc
add
inc
mov
shll
mov
and
adc
bound
orb
mov
imul
movsb
jns
pop
mov
shlb
push
mov
cmp
xorb
pop
inc
ja
aad
jl
or
add
xor
cmp
inc
call
and
add
inc
repz
fdivrl
cld
jae
loopne
and
jp
data16
dec
jb
nop
addr16
jae
les
add
adcl
fisubl
lods
repnz
dec
out
pop
mov
jge
imul
mov
cld
js
lcall
ds
stos
push
adc
int3
mov
std
push
xor
push
xor
popf
cltd
ss
push
mov
and
sub
inc
push
mov
push
jle,pt
leave
jg
jecxz
std
sub
or
xchg
inc
paddw
addr16
flds
ret
mov
sbb
xlat
pop
fdecstp
lock
jne
loopne
mov
mov
loop
dec
pop
mov
jge
loopne
incl
push
sahf
dec
xchg
sub
in
scas
mov
cltd
cmove
loop
push
sbb
dec
fildll
mov
adc
mov
inc
iret
jno
add
es
les
mov
arpl
adc
mov
add
push
fisubrs
bound
sub
and
jg
std
add
nop
lahf
cmp
mov
push
push
loope
in
and
iret
sub
jne
fdivr
das
out
xchg
outsl
fcoml
data16
inc
mov
push
mov
jecxz
iret
mov
sbbb
sbb
popf
fnsave
imul
xchg
iret
jnp
jne
pop
xor
sbb
and
sub
inc
fsubs
in
andb
fistpll
cmp
nop
mov
jne
dec
dec
jp
int3
or
and
push
leave
sbb
jle
xor
cmpsl
testb
xchg
mov
in
cwtl
sarb
jle
mov
cs
and
xchg
adc
enter
cmp
mov
xor
push
enter
xchg
inc
shlb
loopne
imulb
hlt
xor
mov
fldenv
cmpsl
xor
xchg
cld
mov
sbbl
into
mov
xlat
mov
mov
add
dec
or
pop
stc
out
push
pop
bound
adc
mov
add
in
cmp
xor
out
push
jo
mov
mov
movsl
imul
cmp
inc
pop
notb
xor
add
cmp
loopne
mov
jmp
mov
call
sti
movsb
pop
rcll
arpl
sbb
mov
xor
xor
daa
dec
mov
add
mov
push
cs
test
xor
pop
sahf
jmp
adc
loope
inc
scas
sub
outsb
je
pop
mov
repz
pushf
pushf
adc
mov
rclb
ret
jmp
xchg
mov
in
test
adc
mov
mov
sub
dec
cld
dec
add
or
mov
push
int
push
xorb
dec
leave
mov
movsb
repz
or
rcr
arpl
stos
mov
jg
or
je
arpl
shlb
add
push
mov
lcall
push
xor
add
ss
push
aad
mov
push
jle
lcall
outsl
je
in
icebp
jg
pop
loope
inc
repz
es
int3
mov
xchg
pop
sub
fucom
mov
add
add
or
xchg
adc
icebp
loopne,pn
pop
insb
cmp
lock
dec
fdivrs
rcl
ss
fldt
dec
pop
aas
push
pop
dec
add
dec
pop
ret
pop
sbb
icebp
int3
fcomi
stos
adc
outsb
add
add
lret
movsl
shrl
in
fidivs
les
mov
sbb
push
adc
pusha
pop
repz
xchg
stos
lods
fyl2xp1
pop
push
dec
addl
in
push
jo
pop
enter
fs
mov
cld
inc
loopne
roll
pop
adc
add
add
jne
mov
int3
insb
lret
jo
aaa
mov
add
sbb
hlt
cmc
or
or
xor
not
sub
jmp
push
movsl
lds
hlt
movsl
movsl
jae
pop
or
ficoml
sti
cmp
inc
pushf
fldl
jge
inc
outsb
cld
aad
mov
cmc
adc
inc
gs
cmp
ja
cltd
fiadds
ret
push
push
mov
jge
and
popa
push
loope
ret
and
cmp
movl
or
fs
push
arpl
ficompl
xchg
xchg
jp
mov
aad
pop
pop
out
jne
ret
mov
cmp
jp
inc
fsubrs
sbbb
cvtps2pd
rclb
pop
inc
daa
fisttpl
nop
xchg
add
mov
lods
int3
add
push
add
sub
cli
dec
add
lock
enter
adc
or
cld
sbb
insb
xchg
lahf
mov
dec
pop
pop
sbbl
fstp
rorl
movsl
sub
add
popa
cmc
cmc
ret
enter
fldenv
add
pminub
mov
lods
inc
je
enter
dec
orb
scas
imul
es
or
mov
movsb
mov
sub
loopne
jl
pop
repz
enter
pop
ret
push
sbb
xor
test
int
call
gs
in
mov
adc
enter
rcrl
movsl
mov
cmp
gs
jns
mov
pop
pop
sub
fs
aad
mov
in
cltd
dec
push
rorb
rol
and
out
jl
mov
std
insb
cmpsl
xchg
or
test
mov
pop
lahf
faddl
push
xor
sub
or
cltd
lea
push
push
add
mov
mov
jbe
jnp
adc
ss
fisubs
scas
ds
inc
pop
imul
jo
scas
stos
add
add
in
mov
jecxz
out
mov
hlt
mov
add
sbb
pop
mov
dec
sbb
ret
int
add
movsb
cmpsl
and
dec
or
sbb
mov
cli
fwait
add
loope
jmp
sub
mov
dec
push
arpl
adc
push
inc
xchg
dec
aad
inc
fstpt
lret
jp
fcmovne
sub
fcmovnbe
mov
push
or
dec
fwait
inc
scas
ret
int
orl
nop
data16
or
cld
dec
push
push
popa
les
jnp
aaa
sbb
pop
pop
cmp
lods
loop
jo
icebp
pop
fsubrs
sub
cld
into
push
add
and
rcrl
add
ret
aam
cs
out
nop
mov
inc
lret
pop
cmp
outsb
fnstsw
mov
jl
rcll
jno
leave
fsubr
lods
cli
jae
pop
std
add
testl
mov
and
mov
movsl
adc
add
add
std
test
jg
into
lret
orl
add
add
cltd
sbb
xchg
cli
imul
add
jmp
xchg
mov
fwait
pop
xchg
sbb
and
fs
mov
or
push
adc
xchg
cmp
loop
adc
cmp
cmp
es
cmpsb
xchg
jnp
std
mov
adc
push
mov
cmp
movsb
loop
stos
test
repnz
sbb
pop
sub
add
mov
inc
lahf
adc
mov
test
mov
mov
gs
daa
fdiv
or
and
aas
loope
adc
mov
cmp
test
fnstcw
leave
and
add
dec
daa
std
jg
cli
lea
loope
add
mov
dec
hlt
mov
mov
xchg
adc
lea
enter
mov
xchg
in
mov
out
out
js
jmp
xor
mov
jmp
push
push
add
add
adc
in
lcall
jae
dec
mov
sbb
add
cs
aad
or
pop
adc
inc
rorl
mov
sbb
or
mov
lea
pushf
insb
mov
or
hlt
xor
push
mov
insb
adc
mov
imul
out
add
test
xor
in
dec
cmp
hlt
or
adc
push
pop
hlt
std
inc
or
jge
push
xchg
jns
cmp
jecxz
mov
and
ret
mov
or
mov
in
dec
jecxz
jo
and
and
fmull
enter
jp
inc
jecxz
mov
out
pop
loope
push
insl
pop
les
jae
pop
pop
adc
stc
dec
repnz
fbld
dec
je
add
cmc
dec
xchg
or
sub
test
scas
add
xchg
jg
out
pop
or
outsl
jecxz
mov
fdivrs
dec
or
jg
dec
arpl
daa
push
mov
add
pop
cmc
into
sahf
mov
fsubr
lcall
cwtl
or
fcompl
shll
jno
int
jb
out
jb
enter
cmpsl
adc
lds
fdivs
jg
mov
roll
enter
dec
adc
or
pop
jmp
popf
push
cmp
jbe
stc
pop
and
mov
lahf
ficompl
js
cltd
icebp
into
mov
pop
cmp
and
jecxz
sbb
sub
stos
dec
or
sbb
ljmp
rcr
push
dec
push
movsb
movsb
mov
inc
cmp
inc
mov
cmp
loopne
mov
out
jge
inc
mov
mov
sub
les
dec
std
lods
xchg
xor
int
jge
lret
push
dec
xor
lods
hlt
out
xor
out
jo
leavew
xchg
insb
cmp
lret
fidivs
ret
mov
repnz
mov
mov
movsl
test
jb
jmp
add
stos
lods
xor
fcomps
add
insl
sbb
outsl
mov
pushf
xor
pop
push
mov
add
not
xor
inc
subb
shll
cmp
and
sbb
add
push
outsb
inc
lds
inc
or
cs
cwtl
xchg
pop
xchg
mov
xchg
popa
sti
fadds
jecxz
fucomip
jl
push
mov
jo
cli
sbb
sub
push
sar
ds
push
jp
cmpsb
mov
add
pop
adc
push
jl
orb
sbb
mov
lds
imul
incl
and
fwait
iret
fsubl
in
sbb
inc
test
or
loopne
or
daa
pop
insl
mov
mov
mov
sub
jge
adc
xchg
call
in
sbb
xchg
out
rolb
repz
jne
cmp
scas
repz
addr16
in
xchg
int3
or
push
xor
xchg
mov
out
cmc
lea
mov
jmp
push
and
lea
xchg
scas
mov
xchg
popf
mov
add
xor
mov
pop
insl
pop
jno
pop
mov
add
pop
dec
in
mov
push
sub
loope
lock
mov
add
dec
dec
mov
sub
mov
lea
dec
out
xchg
or
incb
ja
aam
fildl
imul
lret
fldcw
sbb
dec
lods
jecxz
fstpl
xchg
push
test
xchg
adc
repz
add
sahf
xchg
dec
pop
mov
cwtl
pop
add
sahf
xchg
ret
test
or
adc
jns
lock
xchg
adc
mov
sbb
sbb
ds
fisttps
mov
js
mov
loop
add
sarl
pop
mov
movsb
fbld
fimull
and
cltd
jle
mov
sbb
out
push
and
das
xchg
shlb
das
hlt
dec
jge
insl
xchg
daa
stc
test
arpl
cmp
pop
jbe
out
cmpsl
sbb
jmp
add
add
fistpll
call
insb
sbb
add
and
mov
dec
leave
mov
je
stos
mov
out
repz
out
dec
out
loopne
std
dec
mov
cs
dec
push
and
mov
in
sub
or
xor
push
sbb
into
sub
cltd
les
adc
xchg
ja
adc
xchg
lods
gs
aad
rcll
cmc
clc
imul
mov
inc
aad
pop
pop
lods
call
cmpsb
shl
in
xchg
jg
mov
out
adc
jbe
cmp
lock
ud2
lcallw
fidivrs
sbb
xlat
hlt
mov
ja
imul
xchg
ja
testb
inc
pop
dec
pusha
test
mov
pushf
js
rol
sti
pop
adc
xchg
mov
jl
lret
in
mov
int
push
jg
dec
clc
xor
into
sub
cltd
push
add
push
aad
icebp
push
jo
add
into
std
sti
leave
sti
iret
jmp
dec
inc
dec
fs
add
pop
loopne
aad
xor
pop
or
loop
ss
push
pop
ss
pusha
cmp
insl
popa
push
shrl
mov
pop
js
sub
jg
sbb
sub
lcall
cmp
xor
mov
cmp
mov
jp
dec
adc
cltd
shlb
adc
fnstsw
inc
mov
fdivl
and
xor
pause
add
std
dec
and
push
addb
mov
pop
mov
aas
jmp
mov
ja
nop
clc
test
cmp
mov
and
or
aas
xor
cmp
push
cmpsl
mov
cwtl
imul
adc
lret
push
loop
lea
aas
sub
movsl
cld
int
and
rorb
ja
jp
out
jg
popa
arpl
bound
jp
cmp
rep
rcrb
divl
cmp
add
add
mov
xor
mov
add
and
in
or
notl
int
aaa
cmp
shr
jns
dec
dec
mov
cmp
loop
sub
mov
pushf
bnd
cli
sbbb
or
das
mov
outsl
outsl
mov
mov
jecxz
in
cld
mov
add
ljmp
jp
push
inc
ljmp
movl
outsb
int3
jmp
adc
arpl
pop
aad
icebp
imul
push
pop
adc
xor
sbb
test
idiv
ret
push
lret
sahf
mov
mov
ljmp
adc
cmc
jo
stos
jb
jne
dec
sbb
out
shlb
aam
repz
mul
rep
xrelease
xchg
sub
lret
outsb
outsb
ja
pop
xorl
and
xchg
or
sbb
pop
scas
sub
or
pop
pop
testb
add
add
jg
mov
sahf
loop
adc
xor
rolb
add
pop
pop
sub
or
push
addr16
out
test
out
add
stos
addr16
adcb
popf
movsl
and
adc
ds
xor
cmp
pop
mov
pop
add
push
cld
sbb
int3
cwtl
jne
inc
mov
jge
add
roll
inc
nop
fildll
or
enter
xchg
and
mov
mov
scas
mull
xorb
ret
xchg
addr16
loope
aas
cli
dec
add
and
xchg
out
imull
sbb
ret
cli
push
arpl
cld
lret
repz
mov
sahf
aad
stos
movq
scas
push
pusha
sbb
mov
and
sbb
pop
movsl
imull
ja
xor
das
data16
repz
repnz
fidivrs
movsb
add
dec
scas
inc
xor
xor
jecxz
cmp
inc
andb
popf
lret
jecxz
lcall
aaa
xchg
pushf
outsl
push
imul
fs
stc
scas
add
add
inc
enter
pushl
cld
sbb
jae
add
add
jmp
cmpsl
fdivrl
dec
test
xchg
das
pop
mov
pop
add
mov
cmp
inc
movb
xor
pop
fucomp
sbb
sub
adc
xor
sbb
xor
shrl
imul
mov
stos
outsb
mov
fdivl
out
mov
push
lds
and
test
sbb
xor
fcmovb
and
sbb
xchg
ret
pop
fwait
xchg
test
mov
cmp
lea
sub
pop
repz
or
push
daa
bound
ds
js
jp
rcrb
xor
mov
lods
dec
mov
das
pop
sbb
sub
cmc
mov
fwait
mov
push
dec
mov
xchg
ja
icebp
cmc
test
add
jmp
jl
xchg
sbb
xor
push
pop
sbb
add
add
pushf
shrb
lcall
or
mov
js
add
add
jne
or
sbb
xlat
xor
xor
in
sub
ljmp
loope
sub
call
lea
test
and
xor
mov
mov
out
xchg
out
mov
mov
loop
fwait
push
mov
lret
fsts
loopne
les
pop
in
pop
mov
popa
mov
lds
les
mov
out
push
sub
sub
mov
cld
sarl
call
cmp
lcall
cmpsb
xor
jnp
push
add
mov
cwtl
xlat
jp
cltd
test
movsl
stos
pop
hlt
ss
repz
insl
lcall
adc
hlt
xchg
mov
sahf
into
cmp
pop
imul
xchg
pop
in
xchg
mov
xchg
mov
xchg
enter
mov
sbb
xchg
or
push
sbb
xor
mov
add
add
test
mov
aas
scas
ret
add
add
mov
int
and
pushf
in
mov
push
sub
fs
push
imul
aaa
or
adc
mov
mov
add
aaa
cmpsl
pop
xor
les
push
mov
pushf
sub
inc
adc
xchg
mov
fcoms
and
push
in
cmp
cli
xor
xor
cmpsb
inc
jge
xchg
mov
mov
sub
mov
rcrl
addr16
aam
ja
mov
in
jle
fmull
jb
and
daa
ss
call
andb
add
rol
mov
repnz
lret
mov
inc
or
mov
sub
cmp
adc
sbb
pusha
jle
mov
xchg
fisubs
lock
cmpsb
subb
pusha
lock
dec
addl
push
lea
ret
mov
ds
sbb
int3
scas
int3
mov
jp
mov
add
jne
jne
jg
loop
mov
push
add
add
test
pop
dec
clc
push
push
ja,pn
ret
adc
pop
clc
sarb
push
xchg
popf
jo
in
outsl
jl
mov
pop
iret
adc
xchg
jecxz
adc
cmp
push
add
cmpsb
or
out
dec
nop
and
lea
mov
stos
repnz
sbb
sub
std
mov
or
cmp
pop
mov
jmp
ss
cld
add
pop
add
lret
ret
imul
je
es
jb
pop
pushf
addr16
inc
lods
push
pop
add
mov
stc
sub
addl
fucomp
cwtl
ret
aam
mov
sbb
test
pop
mov
aas
inc
ja
rcll
adc
cltd
stc
popa
lock
mov
iret
jge
and
ret
gs
xor
clc
mov
out
lds
jnp
in
xchg
sub
popa
push
leave
xchg
inc
jne
test
add
sbb
mov
cmc
mov
push
xchg
add
add
mov
lock
jnp
rorl
pop
lret
xchg
arpl
cmp
cmpsb
nop
jecxz
mov
pop
popw
imul
dec
and
arpl
pusha
cmp
aaa
xor
inc
cmpb
movsl
cli
out
sbb
out
mov
inc
insb
not
inc
and
push
xchg
mov
jbe
enter
push
fnsave
adc
and
inc
int3
out
adc
cmpsb
mov
ss
fdivs
ret
mov
inc
lahf
mov
int
gs
sarl
hlt
sub
jl
lcall
stc
popf
in
hlt
fcomp
xor
insb
sbbl
jno
inc
imul
sti
sahf
push
or
mov
movsl
shlb
repz
mov
negb
rorl
inc
jne
loopne
es
sub
ljmp
mov
cwtl
pop
nop
fs
stos
std
dec
mov
push
shll
rcll
lret
add
outsb
jle
lods
testl
movb
add
inc
into
dec
insb
cmpsl
push
pop
xor
scas
cmp
js
subl
mov
imul
lods
mov
push
jmp
pop
or
push
movsb
aas
jp
jmp
xlat
jp
movsb
mov
pop
js,pn
lret
or
dec
jg
ret
ret
cmpsl
push
fldl
sub
pop
mov
lret
pop
add
in
add
xor
xchg
xchg
xchg
jecxz
mov
xchg
aas
dec
nop
cli
mov
lahf
pop
das
sub
sbb
pop
gs
pop
mov
out
jmp
mov
inc
xor
shrb
dec
rcrl
popl
jbe
adc
sar
jmp
pop
dec
xchg
xor
shlb
nop
movsb
sub
std
and
inc
lret
sub
mov
scas
jl
pop
jns
mov
data16
insb
mov
loopne
insl
test
pushf
divb
int
insb
add
add
mov
xchg
insb
add
add
add
pop
add
jl
loop
push
sub
mov
icebp
mov
sbb
mov
adc
in
dec
or
dec
cmp
cmpsb
push
mov
xlat
cmpsl
lock
sti
jle
sub
leave
not
sahf
sarb
repz
cwtd
cmp
call
das
ret
in
ja
mov
jl
repz
push
lret
sar
inc
dec
and
nop
mov
and
decb
and
js
fdivr
jmp
ret
cmp
jb
lods
test
pop
xchg
mov
push
push
cmp
fcomps
sub
and
dec
cmpsb
mov
rclb
pop
xchg
push
push
inc
add
ljmp
or
std
push
aam
xchg
sub
or
push
popa
cmp
test
xchg
das
into
mov
jb
in
addr16
mov
sbb
repz
fisubl
mov
add
add
out
sti
xlat
in
aad
and
xor
enter
add
add
cld
mov
cwtl
cli
cmp
lods
das
test
insl
pusha
inc
fbld
jmp
sti
dec
movsb
fdivrl
xchg
adc
cmpsl
mov
mov
xchg
ficompl
xorb
lods
arpl
popa
push
ljmp
pop
outsb
cmp
push
xor
sbb
enter
sub
cmp
int
and
and
push
xlat
mov
push
lret
stos
xlat
add
adc
jnp
xchg
rcr
pop
mov
sti
scas
movsl
xor
andl
inc
and
mov
mov
popf
in
inc
stos
add
and
ds
fs
xchg
stc
jle
pushf
imul
dec
clc
ror
scas
out
or
jnp
push
outsb
jo
inc
cld
jge
mov
xchg
pop
push
or
mov
jg
pop
leave
mov
inc
ss
jns
shlb
jo
cmp
mov
mov
fnstenv
mov
add
cwtl
add
add
push
sub
cmp
jg
and
mov
stc
jg
insb
fwait
leave
add
add
and
sbb
sub
adc
or
dec
mull
fs
fwait
test
movsl
mov
cs
es
sbb
add
lea
xor
add
lcall
mov
icebp
mov
das
scas
pop
jno
inc
push
inc
out
mov
mov
mov
cwtl
and
lds
mov
insb
push
mov
andl
xchg
push
dec
lock
lock
xor
jmp
pop
mov
pop
outsb
push
stos
xor
adc
pop
sub
and
test
dec
and
cwtl
shlb
jle
scas
sub
aad
add
dec
add
pop
inc
add
mov
scas
sub
lds
gs
push
fdivl
hlt
lea
lea
cmpsl
jp
clc
inc
jae
add
sbb
leave
sbb
outsb
or
jp
rorb
aam
pop
icebp
mov
jne
add
add
xor
fistpll
out
repz
fcoms
mov
lret
add
mov
je
mov
lock
repz
jo
inc
mov
sahf
push
mov
jns
lahf
dec
outsl
adc
out
stos
pop
pop
push
push
dec
mov
jecxz
shrl
in
or
inc
fisubrs
add
jmp
aam
xlat
outsl
or
pop
clc
lfs
lcall
adc
movsb
cld
xor
jecxz
ficoms
sti
addr16
add
add
cmp
andl
dec
push
out
cli
lods
cs
popf
into
and
cmc
je
mov
sub
mov
and
cmpsb
cmpsl
dec
and
xchg
mov
xor
mov
jbe
xorl
add
push
sub
mov
shll
push
fwait
popf
decb
fsubrs
adc
lock
mov
jmp
lahf
fnsave
je
sub
adc
jmp
add
mov
mov
inc
pop
rcrb
lret
add
add
mov
in
fldt
adc
adc
jb
clc
sbb
sub
cmp
jmp
out
aaa
fisubs
xchg
test
insb
stos
mov
sub
xchg
sbb
add
add
jnp
sbbb
test
adc
push
jg
cmc
ja
fsub
and
mov
mov
cltd
test
iret
inc
scas
negb
mov
scas
adc
sahf
mov
mov
jne
jle
das
in
and
or
pop
clc
pop
movb
shl
sbb
clc
lahf
and
lret
and
and
notb
lret
ss
jo
mov
bound
out
adc
jecxz
push
push
ds
cmp
sub
outsb
jle
xor
repz
adc
hlt
out
divl
call
jnp
mov
test
sbb
mov
outsb
cmp
jecxz
stos
mov
add
stc
enter
in
sbb
push
inc
pop
fmul
sbb
add
add
cld
call
xchg
aad
mov
icebp
and
ret
cmc
popf
mov
popa
bound
sbb
int3
push
fldl
stc
jg
imul
daa
call
dec
testb
cmp
outsb
xchg
add
test
adc
xchg
jae
pop
scas
sbb
mull
mov
js
lea
clc
mov
nop
and
jmp
lret
mov
mov
inc
jne
pushf
int
pusha
xor
cmp
imul
push
pushf
mov
out
inc
ss
aaa
imul
sub
push
cmp
addr16
out
inc
xor
outsb
add
cmp
pop
pop
mov
xor
stc
jmp
lds
xlat
pop
push
and
mov
push
fmuls
cmp
lods
pop
inc
sub
lods
insb
test
je
mov
fwait
xrelease
cmp
test
xor
add
jne
imul
cmc
call
inc
push
popa
mov
push
xchg
scas
int
add
cmp
nop
data16
sub
lods
rcrl
inc
dec
push
rorb
pusha
pop
fsubrs
or
lret
aaa
lahf
jl
int
push
push
aad
push
inc
mov
jb
xchg
fsincos
xchg
add
lahf
add
fisubs
fwait
mov
mov
std
or
gs
in
adc
loop
or
and
fs
pushf
loopne
cli
ret
popf
leave
xor
pop
aad
loopne
xchg
sti
out
dec
cld
movsl
cmc
mov
jp
adc
test
jbe
cmp
mov
orl
cmp
pop
and
sbb
mov
mov
std
pop
lock
mov
add
nop
xor
mul
je
loope
out
mov
das
jmp
sbb
leave
xor
and
stos
in
sahf
mov
popf
insl
mov
add
call
mov
and
dec
adcl
add
ja
iret
sub
ret
mov
add
add
repnz
sbb
xorb
aam
xchg
pop
xchg
jp
xor
insl
mov
mov
sahf
loope
ret
stc
push
push
movb
jo
add
mov
popf
jmp
push
mov
and
cmp
fidivrs
jb
testl
mov
inc
xchg
fmul
push
test
ffree
sahf
lods
jecxz
andl
shl
shrb
jge
cmp
xor
cmp
insl
outsb
fs
xchg
adc
sti
adc
add
aad
push
jge
sub
push
cmp
pop
inc
leave
or
in
test
fmull
out
sbb
add
xchg
pushl
mov
or
test
enter
xchg
add
lock
sbb
iret
sub
outsb
mov
loope
sbb
mov
in
loope
cmp
add
add
out
into
gs
cld
test
pop
ljmp
add
and
mov
xchg
movsl
sbb
pop
pusha
jmp
int3
xchg
test
cmc
fsubr
insl
fldenv
in
popf
and
lods
aaa
jno
inc
jecxz
popf
push
pop
jb
shrb
gs
ljmp
outsb
ja
pop
imul
xor
into
add
mov
fldl
or
push
jecxz
cli
mov
cmp
fwait
mov
or
fidivrs
add
mov
movsb
pop
addl
les
adc
sub
in
push
adc
push
dec
mov
cli
sub
les
lret
daa
cmp
push
inc
js
es
fisubrl
repnz
outsb
inc
dec
mov
addr16
xor
dec
popf
test
hlt
sbb
pop
jecxz
mov
je
jp
ret
sti
js
bnd
jle
dec
fsts
cmp
testl
add
add
xchg
and
je
out
mov
cmc
pusha
rorl
mov
add
add
xchg
or
xchg
out
jae
mov
jae
out
repz
inc
fisubl
sbb
test
sub
inc
pop
int3
mov
or
aas
xchg
cltd
call
sub
into
lret
pushf
xchg
jge
int
cs
imul
pop
into
xor
push
push
lcall
xchg
xchg
loopne
mov
and
pop
pop
mov
cltd
push
repz
aam
out
bnd
and
notb
push
test
jl
pop
and
bound
jle
stos
xor
cmc
out
mov
movsl
test
jae
ja
or
mov
outsl
push
adc
test
xor
idiv
inc
jmp
clc
mov
movsl
and
push
push
mov
out
enter
js
scas
repnz
jbe
cwtl
or
fwait
xchg
xchg
or
sbb
xor
fiaddl
imul
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
jl
jae
ret
roll
add
dec
out
enter
push
aaa
sub
shl
lea
outsl
mov
in
popf
cltd
lcall
mov
jle
mov
dec
lahf
ja
lea
lea
call
es
add
rclb
mov
lea
test
cmp
push
out
sbb
jb
adc
xor
cmp
adc
add
fsubl
sub
and
jg
jle
mov
sbbb
loopne
movsl
lret
ss
test
xchg
cmpl
adcl
jns
jns
pop
inc
jl
sub
jns
popa
or
lds
cmpsl
popa
adc
fs
xor
fnsave
mov
ja
ljmp
push
xor
or
push
add
mov
sbb
mov
or
add
popf
mov
lahf
ret
or
rolb
add
inc
pop
push
ds
and
fdivl
inc
mov
les
pop
and
or
int3
xor
sbb
fs
test
cmpb
or
jno
shrb
adc
jl
pusha
add
xlat
cmc
mov
xor
inc
jnp
pop
dec
test
push
mov
jne
xor
jb
push
pop
cwtl
pop
mov
mov
les
jl
push
scas
mov
add
mov
pop
fnstenv
and
cmp
ret
mov
int
mov
lods
mov
xchg
inc
xchg
in
jge
popa
sbb
pop
lahf
icebp
or
push
movsl
andb
push
lret
mov
xchg
mov
clc
jne
insl
add
add
mov
out
out
stos
add
into
sti
dec
cltd
jp
pop
bound
push
inc
push
mov
loop
xchg
mov
cltd
scas
jmp
in
or
das
add
add
neg
outsl
push
xchg
or
roll
add
pop
sub
ret
fdivs
loop
add
pop
pop
das
sub
dec
add
add
sbb
cmp
pushf
push
adc
js
xor
ja
or
add
aam
out
outsl
and
mov
js
das
shlb
mov
add
notl
mov
mov
inc
in
and
lea
js
mov
inc
dec
or
sbb
mov
mov
loop
loopne
inc
xor
leave
imul
ss
sub
cwtl
arpl
cmpb
mov
lahf
stos
popf
mov
push
mov
adc
sub
negb
lret
fwait
xchg
push
ja
push
dec
addr16
test
add
rclb
adc
rclb
aaa
fildl
lret
xchg
xchg
pop
testl
and
pop
sbb
cmc
sub
sub
das
ret
inc
and
lods
lods
imul
add
mov
add
add
sbb
sub
dec
adc
add
rcl
add
add
jmp
xor
int3
and
or
outsb
dec
mov
push
mov
rcr
or
jne
mov
dec
mov
push
insb
out
mov
and
bound
repz
insl
mov
pop
gs
xor
out
inc
or
shrb
pop
movsl
sbb
xchg
jge
imul
sub
cmpsb
xor
cmp
jmp
shrl
push
push
mov
push
movb
gs
out
jecxz
adc
imul
add
das
jg
jp
repz
pop
pop
dec
jg
das
cwtl
stc
cmc
jmp
xor
stc
mov
mov
inc
aas
and
aaa
pop
fwait
mov
in
pop
xchg
sub
sbb
mov
jno
divb
xchg
inc
jb
and
xchg
into
ficomps
and
cs
nop
popl
mov
push
movsl
scas
or
add
add
ds
jae
inc
ret
aad
add
cmp
outsl
dec
push
cmp
lcall
fiadds
gs
sub
adc
loop
inc
sarb
addr16
xchg
adc
aas
mov
mulb
fxch
sarb
sahf
adc
sub
ficoml
lods
push
xchg
inc
popa
pop
mov
cmp
or
jle
into
ja
jns
inc
xor
xchg
ss
sbb
mov
or
xchg
xchg
cmp
mov
dec
std
push
aaa
push
sub
scas
insb
enter
mov
lret
clc
cmp
lret
clc
pushf
hlt
js
mov
sbb
xor
and
push
push
or
sub
jne
jne
ret
xchg
aad
aaa
rol
push
xorb
jmp
jmp
and
sub
popa
pop
imul
xor
test
fimull
icebp
outsb
test
mov
or
mov
or
pop
movsb
or
xchg
sbb
aas
add
add
lcall
jnp
xor
sub
add
add
popf
cli
jb
dec
cmp
mov
jmp
jge
lahf
stos
sarb
mov
push
pop
in
sbb
pop
cwtl
cltd
in
xchg
gs
call
xchg
loope
sbb
xlat
out
js
movsb
and
push
testb
sub
scas
cld
inc
xchg
xlat
mov
test
inc
imul
ret
inc
push
mov
adc
imul
out
in
mov
test
jp
pop
jbe
and
lea
pushw
pop
jnp
lret
pop
cmpsb
push
je
cmp
jg
and
push
dec
jp
adc
mov
insl
or
xor
popa
cld
in
dec
jmp
or
stc
jge
aam
rcrl
mov
in
lahf
movsb
fisubrs
divl
int
ss
dec
add
repz
add
xor
ja,pn
jecxz,pt
dec
lea
adcb
pop
hlt
stos
mov
gs
xchg
jecxz
fldenv
into
add
jle
test
add
add
xchg
ja
push
jg
leave
or
testl
add
mov
jl
js
add
cld
shrl
fiaddl
xor
or
stos
add
inc
add
std
push
cmp
mov
push
xchg
stos
pop
mov
mov
add
inc
cld
add
repnz
or
fcmovnb
jecxz
push
dec
lret
inc
push
sbb
mov
xor
lret
pop
outsb
sbb
xlat
out
shrl
stos
xor
mov
push
imul
add
jne
mov
insb
inc
sub
cli
adc
cmp
jne
rclb
loopne
jns
cltd
aaa
xor
insl
mov
dec
in
stc
adc
arpl
insl
loope
inc
scas
xor
dec
shl
inc
roll
cmpl
jg
fidivrl
xchg
sbb
and
vandnps
push
dec
and
ja
out
pop
lds
std
jg
mov
jb
add
add
int
out
out
imul
nop
xchg
movsb
push
lods
xchg
out
add
add
push
and
in
test
jmp
sub
repz
movsb
sahf
out
cmp
jle
xchg
int
xor
in
mulb
inc
in
adc
fnsave
lret
sti
jle
push
fstp
mov
pop
rcll
or
push
std
mov
pop
cli
jns,pt
inc
daa
icebp
ficompl
xchg
inc
fcomps
sbb
inc
aad
and
lret
hlt
in
rcll
cmc
pop
adc
mov
rol
push
icebp
clc
mov
cwtl
or
mov
insb
inc
dec
call
lret
xchg
sbb
xchg
jmp
inc
stc
dec
cmp
leave
rorb
nopl
dec
cmp
pushf
jbe
ds
xor
push
ret
shll
out
push
outsl
pop
add
adc
movsl
jp
add
mov
lea
popf
mov
mov
idiv
jle
sbb
inc
cwtl
test
cli
sbb
mov
jnp
xor
addr16
lods
testb
out
fldcw
push
in
sub
xor
flds
add
enter
ljmp
inc
push
jbe
xchg
lods
movb
loope
in
adc
dec
mov
sbb
mov
xchg
cmp
test
and
subb
mov
push
ja
hlt
jp
stc
inc
call
push
sub
push
dec
stos
pop
sti
ficomps
dec
xchg
arpl
fwait
push
outsl
and
inc
movl
adc
jnp
ss
repnz
ret
dec
insb
scas
add
lods
ds
in
fiaddl
mov
jno
imul
fdivrl
xor
push
lret
movsl
xchg
mov
push
lret
es
add
push
dec
call
test
jb
or
mov
stos
inc
sub
push
cld
pop
add
cmp
push
sarl
fwait
fwait
cld
fmuls
pop
dec
mov
jnp
lcall
xchg
ss
or
add
nop
lods
mov
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
sahf
add
fiaddl
add
pop
adc
sub
imul
push
in
xchg
or
shlb
lahf
cli
or
inc
jne
lret
into
dec
bound
push
sub
pop
mull
lret
repnz
enter
mov
cmp
dec
imul
add
mov
lods
push
pushf
jns
rcrb
out
hlt
inc
leave
fldenv
or
int
pop
xchg
jl
pushf
jo
dec
fsubrs
cmpsl
sbb
out
sahf
popa
into
add
dec
jno
in
fstl
dec
push
jg
push
cmc
push
add
out
iret
test
out
xor
push
adc
stos
add
addb
in
icebp
mov
mov
popa
das
adc
outsb
sub
jne
or
movsb
or
pop
leave
sub
xor
imul
dec
lret
hlt
lods
dec
mov
sbb
cmpsl
cld
and
mov
or
adc
cwtl
std
add
add
pop
dec
jle
jg
std
fstpt
sbb
xor
add
add
jnp
adc
inc
in
clc
test
sbb
rol
dec
adc
pop
dec
loop
cld
call
popa
icebp
adc
add
xchg
rolb
ret
fstps
or
xor
add
repnz
pop
in
jmp
lcall
inc
adc
or
sub
inc
mov
xlat
dec
aaa
data16
aaa
insb
push
fdivs
sub
loope
push
movsb
out
movsl
lds
outsb
xor
loopne
and
pushf
push
fiaddl
aas
cmp
lea
mov
scas
xor
enter
fsubrl
mov
and
mov
test
cmpsl
sbb
cmp
mov
movb
push
cmp
add
dec
xchg
xlat
imul
stos
mov
loope
mov
cmp
dec
pop
inc
pop
mov
cmp
sub
jae
dec
cmp
stos
mov
das
mov
inc
lods
add
add
mov
sti
idiv
lods
pop
sbb
mov
add
mov
nop
cmp
bound
pop
lea
and
adc
notl
mov
adc
aaa
lock
sahf
and
xor
jl
imul
jnp
push
mov
dec
ja
data16
sbb
xor
scas
imul
xchg
fs
sbb
test
and
cs
add
lods
cmp
xchg
mov
mov
movups
ror
aas
or
xlat
push
and
push
jmp
push
lahf
xchg
pop
popa
enter
or
mov
sbb
mov
sar
cld
syscall
jl
pop
mov
jmp
cmp
stc
sub
loopne
pop
mov
dec
insb
rcll
mov
mov
adc
fiaddl
imul
push
lea
insb
in
add
add
fsubr
out
mov
clc
mov
add
testb
int3
in
and
add
adc
leave
jmp
scas
inc
call
fldl
add
mov
or
sahf
lock
mov
jp
xor
rolb
call
jb
dec
mov
nop
out
cmpsb
iret
insl
clc
mov
stc
and
out
fcmovb
push
test
andl
shll
mov
cltd
adc
jno
xlat
and
adc
out
cltd
xchg
rolb
push
lret
adc
mov
dec
les
in
out
sub
cltd
pop
out
cwtl
xlat
pop
adc
sub
dec
pop
jns
dec
dec
add
lret
pop
fisubrs
push
push
testb
sbb
mov
dec
std
in
fwait
mov
rcl
inc
fistps
adc
js
cmpsb
lock
std
xor
mov
push
add
hlt
lahf
jbe
sbb
jl
add
jmp
and
aas
out
mov
scas
xor
inc
repnz
insl
stos
test
jbe
fldt
popa
incb
add
cmpsl
fimull
faddl
push
repz
add
add
shrl
stc
cmp
fildl
mov
inc
arpl
scas
loopne
jl
shr
test
insl
or
push
xorl
sahf
jle
out
push
and
adc
inc
or
lock
fiaddl
das
popf
aaa
cmp
shrb
jnp
lret
je
dec
xchg
dec
cmp
push
cmpsl
hlt
mov
fstp
pop
sahf
std
pop
pop
add
fiaddl
adc
pop
enter
mov
pop
dec
jecxz
pop
sbb
das
pop
shl
add
lcall
jmp
std
adc
ds
sbb
psubq
cmp
dec
repnz
cwtl
or
cmp
jne
mov
sarl
push
mov
inc
in
sbb
out
xchg
out
fcomps
push
xchg
js
pop
xchg
cltd
adc
sbb
push
pop
add
cmpsl
mov
outsl
cli
jnp
cmpsb
cmp
sub
fs
int3
insl
pop
pop
add
add
mov
lcall
fisttps
or
or
add
add
push
push
xchg
jmp
sarl
pop
insb
mov
scas
xor
cmpsl
in
ss
mov
and
sti
call
pop
push
lcall
push
pop
enter
mov
shlb
scas
and
loop
int
movsb
test
movsb
cmpsl
imul
pop
mov
cmp
dec
ror
pop
dec
mov
stos
mov
mov
cmp
jge
negl
jmp
sbb
pop
stc
scas
cld
dec
mov
pop
mov
add
icebp
pop
mov
fmuls
and
sar
mov
orb
sub
push
push
fs
scas
hlt
sbb
subb
jae
xchg
pop
stos
in
imul
and
cwtl
imul
mov
bound
push
jne
inc
mov
xor
popa
push
lcall
mov
wrmsr
push
stc
repnz
into
scas
test
shlb
sbb
add
add
mov
jns
xchg
xchg
mov
nop
fcoml
loope
add
xor
std
outsl
mov
add
lea
es
cmp
ret
cmp
pop
add
ret
push
stos
cli
int3
popa
pop
adc
lahf
inc
xchg
adc
fidivs
and
fwait
jnp
adc
into
jge
xchg
mov
xchg
push
jl
mov
xor
dec
nop
jnp
mov
or
fs
push
out
and
in
sahf
xchg
jg
cmc
adc
ds
popa
pop
lods
faddp
push
jno
mov
pop
pushf
mov
jae
popf
inc
adc
lock
rcll
popf
icebp
and
pusha
mov
hlt
nop
jp
inc
mov
pop
sub
mov
add
adc
xchg
push
cmp
inc
in
lea
sub
xor
fimull
shlb
add
jns
sbb
call
stos
adc
fldt
sub
shrl
hlt
addl
fistpll
stos
test
in
add
cmp
gs
fidivrl
add
add
fadd
fsubp
jnp
or
cld
les
loop
add
cld
ljmp
fbld
xor
add
stos
lret
insb
roll
js
gs
pop
adc
sub
jge
addb
push
dec
insl
mov
mov
or
inc
and
je
sbb
jbe
adc
lds
pop
call
pop
mov
sbb
in
mov
mov
testb
in
pop
pop
jg
cmp
pop
adc
cmpb
mov
popa
xchg
popa
mov
jmp
insl
push
cmp
mov
mov
xchg
sbb
and
pop
adc
test
xchg
cmp
pushf
or
cltd
jo
push
jb
in
hlt
movsl
pop
fsubrp
mov
cmp
jp
inc
pop
push
mov
addr16
mov
add
inc
out
jmp
stos
mov
repnz
mov
sbb
and
cmc
or
jge
and
int3
cs
lcall
inc
dec
out
adc
add
add
sub
cld
cli
jle
dec
nop
xor
xor
sbb
add
add
out
les
mov
inc
fcmovnu
in
pop
pop
in
jae
outsb
xchg
jl
mov
ss
inc
cmc
orb
shlb
in
add
xchg
xchg
sbb
lcall
xchg
sbb
pop
dec
aam
lret
iret
daa
nop
inc
push
pushf
sbb
dec
jns
sti
cli
push
jg
clc
and
mov
and
jecxz
jl
push
data16
imul
xchg
out
out
iret
aam
lods
pusha
mov
mov
fs
push
jno
leave
pop
lahf
cmc
xor
insl
sub
adc
add
lcall
xor
fistpl
jmp
push
adc
pop
push
pop
xor
jge
xorl
or
pushl
xchg
pop
lcall
fsubp
lcall
cmp
icebp
dec
mov
add
cmpsb
dec
xchg
jmp
xchg
push
pop
dec
jne
subb
repnz
add
ja
sti
aaa
out
ja
stos
dec
or
add
insb
push
add
fwait
mov
push
dec
iret
fnstenv
in
sbb
out
mov
lret
sub
outsl
jns
jecxz
push
testb
test
jns
shrb
fidivl
lcall
xchg
pusha
xor
mov
rcrl
leave
sub
and
add
cmpsl
xor
stc
dec
je
adc
and
aas
std
lds
sub
jbe
test
inc
jp
or
lds
push
lret
pusha
pop
adc
out
sub
cmp
pusha
shr
sahf
insb
outsl
movsl
jb
inc
or
and
loop
lods
mov
mov
jecxz
jmp
fidivrs
inc
mov
adc
sbb
mov
mov
and
pop
dec
adc
xchg
sbb
out
adc
sub
jo
es
gs
xor
fstpt
fadds
lret
scas
cltd
add
add
ror
cltd
outsl
mov
aaa
pushf
insl
lea
and
add
add
xor
mov
dec
fisubl
out
add
bound
subb
loope
push
inc
cli
pop
sbb
cmp
icebp
adc
fistl
sbb
dec
es
mull
lods
rcrb
xchg
and
mov
fs
ds
scas
ja
xchg
das
dec
jnp
mov
cmp
sub
sbb
jmp
adc
dec
dec
xchg
add
lods
dec
aad
or
xchg
cld
adcb
pop
scas
mov
insl
mov
nop
sti
lock
push
sub
jp
notl
push
aam
push
les
repz
dec
ret
push
lcall
mov
test
mov
stc
mov
and
push
das
jge
jb
popa
popa
xor
xchg
iret
out
jbe
fnsave
test
mov
mov
fisttpl
push
gs
jge
aad
add
add
ja
lcall
mov
movsl
daa
out
add
bts
insl
xchg
push
out
cmp
cmp
mov
xor
mov
mov
out
push
adc
andl
add
push
pop
scas
pop
aas
xchg
xchg
push
inc
pushf
les
push
xor
rorb
jp
lods
mov
notb
xchg
push
ds
imul
sbb
imul
jns
sti
lods
js
and
imul
fwait
mov
shll
inc
jb
mov
sbb
in
scas
xchg
jl
xchg
das
xchg
mov
fildl
enter
fst
int
inc
xchg
lret
pusha
xchg
mov
int
and
lcall
and
inc
sub
push
or
clc
mov
or
test
pop
insb
leave
lods
mov
or
loop
mov
jbe
fidivrl
inc
out
mov
lcall
inc
adc
add
add
repz
lock
jg
in
and
push
dec
sbb
add
add
cmp
fmul
mov
sub
cli
jp
xlat
mov
lcall
ror
or
push
into
ret
add
mov
and
jns
in
outsl
jge
inc
adcb
stos
gs
mov
adc
clc
pop
in
mov
push
repnz
imul
fadds
pop
cltd
jo
adc
mov
loope
dec
add
iret
sbb
and
sub
jnp
sub
adc
imul
dec
mov
dec
ljmp
pop
js
push
mov
lret
dec
xchg
mov
mov
aas
movsl
lea
xor
xlat
lcall
inc
cltd
testl
cmp
jp
xchg
mov
out
addr16
xor
enter
nop
repz
lahf
xchg
xchg
jnp
mov
rolb
jo
xchg
aas
push
mov
add
add
pop
xlat
fistpl
icebp
xor
xor
add
add
ja
sti
adc
lcall
mov
xchg
xchg
pop
lea
cwtl
jnp
sbb
mov
sub
sti
dec
jnp
jno
pop
sbb
pop
scas
mov
movsl
outsb
jnp
mov
fldcw
inc
test
cmp
mov
in
push
daa
mov
es
mov
call
mov
add
mov
pop
push
shl
sbb
xchg
push
lock
fbstp
mov
sub
fdivr
loop
in
bswap
outsb
sbb
aam
insl
add
shll
hlt
test
or
or
cld
xor
sub
dec
bound
cmpsb
fidivrl
sub
xchg
jns
jnp
jno
pop
scas
sub
loop
push
push
out
pop
mov
fwait
mov
xor
stos
negl
sub
mov
loopne
dec
xchg
dec
aad
mov
sub
stos
in
fcoml
pop
add
add
mov
dec
js
stc
mov
dec
int
fisubl
add
add
movsl
xor
aas
sbb
aad
hlt
sbb
or
jne
jecxz
lea
and
mov
jmp
mov
lods
imul
add
cmpsl
xor
push
rorl
fiadds
in
stos
in
fwait
inc
cmpsl
fmul
or
mov
xchg
add
inc
ljmp
loope
dec
loop
movsl
mov
cmp
sbb
jmp
pop
add
cmc
and
or
test
mov
pop
test
dec
mov
mov
test
and
cmp
xor
xchg
loopne
xchg
aaa
daa
imulb
xchg
popf
cli
mov
mov
inc
xor
hlt
daa
paddd
nop
mov
fnstcw
pushf
mov
outsl
cmc
pop
ret
outsb
xor
push
jno
adc
adc
movsl
jmp
ret
lcall
or
dec
add
add
add
insl
repz
fwait
jns
jns
or
dec
cmp
add
add
dec
ret
fsubs
addb
xchg
js
inc
sbb
lret
push
jno
sar
add
xchg
mov
xchg
mov
mov
jbe
repz
jbe
add
arpl
stc
and
fcompl
mov
out
jge
shll
and
dec
rolb
mov
ret
add
cmc
pop
scas
lods
push
fsubrs
jp
push
cli
cs
lahf
in
sub
cmpsb
dec
cld
mov
pop
je
add
adcl
push
dec
push
lea
hlt
mov
and
test
adc
arpl
xor
dec
mov
mov
xchg
out
push
punpckldq
dec
pop
pop
insl
push
cltd
in
daa
dec
xchg
cmp
push
jnp
adc
inc
jmp
sub
insb
mov
sbb
lock
sub
mov
fcomps
cmp
aam
xchg
sbb
popf
repz
dec
dec
add
add
mov
pxor
jnp
adc
jne
pop
in
or
add
mov
sub
std
push
fsubs
push
jno
push
inc
fld
mov
push
pop
jo
dec
adc
xor
xchg
shll
lsl
adc
jecxz
out
xor
sub
xor
fcmovnu
mov
pop
daa
xor
mov
out
scas
arpl
lock
popa
testb
cmpsb
xor
int3
adc
xor
dec
sbb
mov
mov
pop
jo
sbb
jecxz
jnp
out
dec
adc
cmp
cli
imul
sbbb
outsl
or
cmp
push
cli
pop
cmp
sub
xchg
push
push
or
xchg
test
push
mov
std
scas
add
int3
xchg
mov
mov
jge
repnz
cli
addr16
and
not
ss
xlat
enter
and
lods
xchg
pop
mov
adc
jns
lds
xor
xor
add
imul
aad
add
out
lods
xor
aas
xlat
fistl
das
js
cmp
inc
in
add
add
loope
imul
in
movsb
add
push
mov
xor
icebp
and
dec
call
test
cwtl
add
lcall
aaa
inc
mov
adc
fs
mov
sbb
and
icebp
pop
cmp
jb
mov
xchg
pop
mov
pop
outsl
dec
add
or
mov
outsb
sub
xor
mov
fldl
pop
xlat
aaa
sub
sub
mov
test
lods
add
fisubrl
stos
stos
das
add
call
sub
loope
jae
xor
aas
or
nop
loopne
and
jle
push
sti
adc
inc
jl
push
mulps
ljmp
iret
stc
int
sub
into
sub
test
into
iret
sub
fcoms
hlt
out
inc
ret
aam
in
inc
mov
adc
sub
mov
add
add
jb
scas
decb
fisttps
cmp
add
add
fildll
enter
scas
xor
pop
or
xor
add
jmp
mov
sbb
push
adc
cld
lds
fidivs
test
adc
pusha
jg
xor
popf
les
scas
inc
notb
jg
movsl
mov
repz
ss
insb
fs
cmpl
dec
mov
and
in
xor
out
xor
addr16
xor
jle
push
clc
daa
arpl
das
sbb
and
std
jecxz
dec
sub
lods
enter
into
jbe
sbb
ret
mov
lret
push
push
jmp
push
push
inc
pmaddwd
or
stos
mov
iret
cltd
outsb
or
mov
jae
mov
sub
ret
cmp
lods
dec
in
xlat
xor
adc
xor
idiv
mov
and
mov
and
mov
xlat
mov
xchg
sahf
loopne
mov
add
or
push
lret
mov
std
ds
aas
push
jno
xlat
xor
mov
aas
test
sub
scas
jge
loop
lds
mov
gs
jge
pop
mov
or
mov
xchg
jecxz
fiadds
out
dec
dec
jae
dec
pop
cmp
add
mov
push
stc
out
inc
jns
and
or
mov
lods
int3
dec
stos
repz
or
sbb
dec
xchg
inc
jl
mov
ss
mov
cs
lret
push
es
sti
or
mov
sbb
fwait
out
push
aad
sub
cld
mov
inc
lret
lcall
cltd
add
lods
and
add
xchg
mov
or
xchg
xchg
inc
test
pop
dec
xchg
imul
lods
push
xor
pop
mov
add
push
push
mov
pop
out
jnp
fwait
and
jns
or
rolb
add
lods
cmp
lods
aas
mov
pop
stos
push
push
out
add
add
cmp
inc
sub
jne
lahf
std
aad
and
pusha
or
iret
aad
rorb
jo
mov
xor
clc
jmp
add
sub
inc
mov
test
lcall
cwtl
pop
push
push
cmp
adc
negb
mov
subb
cmp
and
fdivrl
mov
xchg
dec
mov
sbb
test
pop
xor
push
in
cli
xchg
jge
and
les
icebp
pop
pusha
adc
mov
aaa
inc
out
and
nop
cmpb
pop
mov
pop
xor
push
popa
in
jg
mov
pop
mov
xor
movsl
popa
mov
xor
pop
out
add
inc
loope
cmp
popf
mov
pop
std
push
lcall
dec
push
pop
mov
xor
in
enter
xor
push
scas
lahf
mov
lods
jmp
jns
pop
push
mov
add
loop
fadd
sti
mov
aam
stos
adc
lock
add
jge
andb
mov
sub
loopne
pushf
lock
pop
out
jmp
mov
movsl
nop
ja
imul
dec
or
dec
mov
lret
push
xchg
sub
add
rcrb
add
jns
bnd
aam
jb
insb
mov
mov
in
pop
pop
inc
or
push
mov
pop
xchg
into
xchg
test
xchg
js
je
adc
sar
sub
xor
sbb
add
mov
push
dec
jae
movsl
cmpsl
lret
popa
scas
adc
gs
inc
aas
mov
inc
add
in
call
sub
jbe
out
pop
mov
ds
in
mov
jnp
mov
cs
xor
or
dec
dec
ficoms
mov
dec
sub
jl
or
sahf
jne
mov
inc
ret
jo
fwait
or
sbb
mov
push
xchg
mov
add
add
into
adc
neg
jge
xchg
jns
dec
mov
add
add
test
adc
in
push
popa
xchg
mov
shll
xor
out
xchg
sbb
pop
adcb
cmpsb
ror
xor
dec
add
mov
ds
mov
xchg
into
enter
inc
adc
pop
faddl
lcall
imul
push
fnstsw
push
pusha
push
sub
iret
adc
mov
xchg
aaa
sbb
rorb
or
jle
jno
jp
push
shrl
jg
and
test
mov
jmp
xchg
lahf
insb
mov
xchg
lret
rclb
mov
jge
fists
push
loop
sbb
or
mov
inc
shrl
cmp
out
cmpsl
shll
das
push
cmp
out
dec
icebp
shlb
xlat
cwtl
mov
rcll
fdivrl
mov
shl
in
mov
insb
pop
jge
adc
out
mov
sub
add
pop
cmp
outsl
jg
jg
sub
fcmovu
add
add
icebp
pop
xor
mov
jo
les
xlat
fcoms
sbb
popf
or
nop
shrl
sahf
sti
push
aad
mov
cld
shlb
icebp
sub
cld
sub
mov
outsl
pop
xor
pop
pop
jno
push
mov
je
dec
adc
or
daa
sub
pop
cli
adc
js
and
mov
in
js
nop
cmp
add
xchg
clc
out
inc
push
or
aad
pop
inc
add
inc
inc
inc
dec
lea
int
dec
push
jnp
ja
sbb
mov
je
add
int
ss
loopne
hlt
pop
sub
push
jbe
push
rcll
test
stc
mov
sub
adcl
jns
pop
movsl
ds
jmp
inc
int3
mov
and
push
cmp
sbb
xor
andl
cmp
add
xchg
int3
insl
test
out
outsb
ret
enter
add
ret
ja
and
aaa
divl
jecxz
aas
push
add
add
cmc
div
imul
addr16
sbb
push
xchg
addr16
pop
jge
sub
fwait
mov
fbld
ljmp
int3
idiv
std
add
lock
inc
jmp
imul
pop
lret
addl
xchg
imul
rclb
ret
jmp
pusha
pushf
inc
out
push
jns
loopne
les
adc
cmpsb
clc
inc
and
test
adc
push
cmp
pop
in
das
sub
xor
test
mov
sarl
bound
cmpsl
jno
aas
adc
sbb
dec
add
sbb
fidivrl
sbb
scas
dec
test
adc
xchg
stos
fs
cmpsl
mov
jp
insl
idivl
and
jae
movsb
into
or
or
pop
packssdw
cwtl
fs
mov
shlb
add
clc
cld
mov
in
into
add
add
mov
cmc
mov
xor
hlt
add
add
fcmovnbe
mov
fwait
into
pop
push
and
xchg
mov
lods
mov
push
sub
xchg
scas
xchg
sbb
mov
sti
stc
push
dec
and
dec
fidivl
push
and
jno
inc
shll
or
dec
in
insb
xchg
in
testl
in
mov
push
fs
test
test
adc
xor
mov
out
xchg
aaa
inc
pop
adc
or
call
insb
cmpb
sub
or
sub
mov
aam
negb
test
push
add
out
das
cltd
adc
jge
sbb
pop
pushf
xchg
clc
push
or
adc
dec
bound
fisttpl
mov
sub
ljmp
ret
sub
mov
mov
divl
fs
pop
xchg
or
es
lahf
pop
mov
pop
stc
and
add
add
jne
pusha
popf
pop
sbbl
add
add
or
mov
push
cmp
sbb
xchg
stc
dec
clc
in
or
push
shlb
pushf
mov
inc
or
add
cwtl
xor
mov
cmp
xchg
add
mov
mov
push
cwtl
inc
sub
xlat
xlat
jo
fsincos
fsubs
xlat
dec
hlt
pop
shlb
nop
cmpsl
and
pop
sbb
mov
xor
or
jp
adc
mov
pop
popf
cmp
daa
ficomps
imull
out
cwtl
dec
hlt
out
cmp
inc
inc
cld
xchg
loope
or
fists
ror
pop
push
movsl
or
loopne
aam
cmc
mov
fs
std
notl
mov
and
inc
repnz
fisttps
imul
xchg
sbb
roll
bound
movsl
mov
rcrb
lcall
dec
mov
repz
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
inc
push
or
out
imul
mov
sbb
add
pop
xor
orb
fcomps
in
imul
das
sarl
repnz
xchg
dec
rolb
add
in
sbb
add
xchg
packuswb
jge
xchg
daa
push
jno
and
aas
sbb
bnd
dec
mov
scas
fidivs
jge
iret
imul
in
jae
xchg
push
pop
xchg
sarb
iret
pop
movq
adc
push
mov
mov
push
jae
and
in
mov
mov
scas
lds
jne
pop
and
and
dec
subb
fisubrl
xchg
rcll
sbb
sbb
gs
jle
std
fadds
mov
and
cld
or
and
or
insb
jnp
or
sub
je
and
add
add
add
xor
jb
jae
test
stos
and
add
or
mov
loop
xchg
pop
adc
cltd
dec
lahf
aad
cmpsb
scas
lea
int
cmp
mov
lods
addr16
push
cmp
inc
lods
push
jbe
nop
jo
in
xor
sbb
mov
popa
fistpll
cwtl
add
decl
fsubp
xchg
scas
mov
push
in
cmp
mov
leave
push
push
sub
dec
pop
mov
add
or
cmp
sub
xchg
cmp
pop
sbb
test
jne
push
popa
cmp
daa
push
mov
mov
push
adc
inc
mov
test
lahf
pop
rorl
insl
icebp
xor
sub
xor
inc
fisubs
fs
cwtl
cld
sar
lods
enter
jp
sub
jo
cmp
xchg
lret
add
mov
sbb
addr16
xchg
mov
in
pop
mov
ljmp
filds
add
adc
int
in
idivl
js
mov
out
or
cmp
add
pop
iret
int3
das
cmpl
lahf
out
sub
push
imul
stos
jns
test
add
fnstenv
insb
fwait
loopne
loopne
or
xchg
mov
inc
dec
aam
xor
mov
mov
hlt
lea
sti
mov
mov
pop
push
sbb
push
ljmp
and
inc
cmpsl
fcoml
xor
sbb
xchg
popf
cmpsb
imul
mov
push
andps
pop
test
clc
cmp
jo
pop
aas
les
push
add
cs
push
cmp
aam
xchg
ss
mov
dec
addb
add
mov
cld
or
repnz
mov
iret
mov
lcall
xor
pushf
jno
fwait
lea
mov
cmp
outsl
jmp
dec
inc
cmp
jl
ja
mov
jo
add
pop
es
inc
cli
aas
into
lret
jmp
or
xchg
add
add
sub
dec
fldenv
push
xor
arpl
mov
ss
cmpsb
or
adc
cmc
in
loopne
mov
jmp
mov
xor
cmovp
fsubrl
fchs
xor
adc
pop
ret
xor
popa
and
sub
dec
mov
and
adc
lea
or
mov
dec
in
xchg
repnz
out
dec
pop
loop
mov
cmp
jmp
fdiv
xchg
xchg
cmp
repnz
jmp
int3
popa
mov
cwtl
neg
dec
pop
int3
sub
adc
pop
add
test
dec
stos
push
je
test
dec
mov
add
or
xchg
mov
das
repnz
dec
fsub
cs
loop
mov
mov
xor
and
push
ljmp
lret
aas
fwait
dec
mov
and
insl
repz
adc
fisubrl
outsl
leave
cmp
add
mov
lcall
mov
cli
add
add
xlat
mov
sub
dec
pop
bswap
sub
push
adc
lods
lds
sbb
call
xchg
insl
cmpsl
mov
mov
add
jns
sbb
movsb
push
push
cmpsb
pop
sub
inc
jnp
std
fists
jo
stos
mov
pop
leave
push
xor
movsb
dec
inc
js
pop
ret
mov
xchg
dec
xchg
or
add
inc
jne
icebp
cmp
or
aad
xchg
mov
repz
cmp
arpl
dec
call
pop
imul
daa
xchg
mov
inc
mov
pop
fwait
jbe
xchg
mov
jp
cmp
dec
addr16
ljmp
inc
pushf
pop
pop
jne
push
pop
and
sahf
pop
out
jno
pop
inc
inc
cwtl
clc
lods
fsubs
aas
jecxz
mov
and
and
leave
shlb
pop
shll
icebp
lock
lret
enter
fwait
inc
adc
or
aad
dec
or
pushf
jno
jo
add
aaa
jae
cltd
dec
mov
jno
pushf
repnz
sbb
add
add
negl
and
lcall
sbb
mov
repnz
cmp
and
or
call
mov
sbb
cwtl
sub
fucom
leave
out
mov
fcoml
test
insl
xchg
notl
out
push
ljmp
pop
cmp
and
leave
or
jecxz
mov
pop
or
or
loopne
mov
ljmp
mov
insl
push
loope
andl
sub
add
cmp
mov
stc
pop
cmp
mov
jge
lds
lret
adc
cltd
and
jne
xchg
add
adc
shrb
insb
out
dec
data16
lea
js
push
pop
cmp
add
jb
sbb
push
in
and
mov
mov
cmp
fisubrs
outsb
fstpl
mov
cwtl
lock
movaps
gs
dec
test
or
inc
dec
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
cmp
cld
add
add
repnz
icebp
dec
stos
cmp
dec
xchg
xlat
add
mov
sub
cmp
sub
insb
les
jnp
jl
enter
out
movsb
sub
cs
aas
push
sub
cmp
daa
arpl
lahf
addb
xorl
mov
clc
push
xor
adc
lret
ror
jne
pushf
mov
std
mov
or
test
ss
push
sbb
jg
stos
loope
jecxz
dec
add
inc
stos
mov
mov
mov
adc
cmp
mov
lcall
mov
stc
cmpsb
or
sbb
test
or
push
jbe
mov
dec
mov
push
mov
mov
add
xlat
call
dec
pushf
mov
ds
clc
sbb
mov
jo
subb
pusha
hlt
mov
inc
pop
mov
jge
pop
adc
loope
mov
sbbb
push
add
add
jno
test
jg
push
pop
push
mov
lcall
add
jne
lea
mov
das
pop
inc
push
push
in
mov
inc
fcoml
sbb
mov
jnp
mov
aaa
in
into
into
jbe
insl
repz
sub
jno
sub
add
push
or
lock
sbb
mov
les
cmp
xchg
sbb
dec
leave
or
nop
lret
xor
scas
and
in
in
scas
mov
nop
add
or
stos
mov
or
push
ljmp
cmpsb
bound
mov
ficoms
or
jo
cwtl
repz
rcr
xchg
pop
jb
xor
test
jae
ljmp
js
int3
add
or
add
cmp
pop
push
pop
or
popl
cmpsl
mov
nop
inc
andb
inc
in
push
popa
aad
jmp
and
fcomps
add
add
movsb
push
in
cmc
jne
sbb
js
shrb
lahf
incb
add
adc
std
enter
mov
and
lret
test
ljmp
cmp
repz
mov
inc
test
and
or
mov
cli
sbb
jae,pt
inc
inc
xor
fdivr
xor
ret
push
lds
pop
out
lock
and
xor
mov
mov
sub
pushf
or
jnp
les
push
or
fmul
enter
push
sub
cs
or
test
les
iret
cli
fdivl
cmp
in
fdivrs
xor
out
jge
mov
fisubrs
jl
jp
faddp
xor
negb
or
jns
adc
xchg
cmpsl
xor
jl
pop
loop
in
cmp
mov
sahf
mov
pop
xchg
cli
jno
insl
inc
nop
test
int3
push
adc
push
outsl
scas
lcall
add
out
shlb
aas
out
int3
mov
sub
pop
movsb
incl
add
sub
jne
pop
lods
fsubrl
out
jecxz
jecxz
rorl
aad
loope
sbb
mov
jns
lock
mov
jno
rorl
xchg
add
loopne
xor
xlat
mulb
mov
jns
push
pop
mov
sbb
or
or
pop
xchg
cmpsb
add
xchg
or
jle
inc
stos
mov
jg
loope
loope
bound
movsl
mov
int3
outsl
cmp
test
jecxz
inc
xchg
jae
cmp
add
leave
call
jge
sarw
stos
cmp
mov
pop
fidivrl
into
ficoml
push
dec
push
add
mov
ds
bound
jmp
mov
ret
jl
jmp
into
in
push
sub
lcall
push
inc
fcomp
cmp
add
int
mov
in
sub
cli
xor
outsb
jnp
in
and
lds
add
or
mov
and
add
add
fisubrl
out
ds
ja
test
dec
mov
xor
mov
push
push
stc
out
repnz
dec
call
push
lahf
pop
jle
ds
or
inc
adcb
mov
mov
call
aad
in
lea
imul
mov
subb
jle
jo
cmpsb
bound
into
rorb
test
mov
cmp
mov
jne
and
sub
jno
xor
out
adc
jecxz
loop
sub
test
sub
push
jle
fucomp
sub
fld
shll
into
sub
imul
lods
mov
hlt
ss
fwait
lock
lods
inc
scas
pop
inc
scas
sub
testb
push
nop
and
shl
mov
outsl
ljmp
cli
sub
in
cld
pusha
cwtl
sbb
cmp
mov
add
add
ret
bnd
cmc
inc
stos
repz
insl
jge
scas
add
add
hlt
jmp
xchg
push
ljmp
ss
stc
mov
push
jl
jle
mov
add
adc
daa
push
push
imul
lock
push
sub
push
scas
sub
fstpl
mov
push
jns
mov
xor
inc
lret
inc
repz
dec
fcos
pop
add
cwtl
sbb
pusha
popa
mov
mov
js
pop
fidivl
dec
mov
fwait
lods
dec
mov
shlb
pop
cmp
divl
add
std
lahf
jae
test
outsl
jae
mov
enter
push
dec
rcl
rcrb
mov
imul
xor
mov
xor
jge
hlt
je
cmp
popf
roll
and
pop
into
cmp
imul
push
xchg
jno
jmp
and
dec
out
inc
push
xchg
push
es
je
les
push
jecxz
sub
mov
aaa
inc
ja
add
add
std
aaa
mov
shll
lea
add
add
xor
std
jae
lcall
cmp
adc
lret
jne
lcall
nop
rorb
or
test
or
loope
sbb
popf
xchg
dec
mov
lretw
mov
add
outsl
lods
mov
cmpsl
lcall
dec
adc
fnstcw
subb
sar
fiadds
fcmovnu
fcoml
fs
out
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
fisttpll
add
xchg
mov
inc
push
sbb
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
