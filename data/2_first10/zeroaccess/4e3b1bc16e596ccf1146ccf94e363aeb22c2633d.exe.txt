push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
cltd
lds
adc
adc
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
mov
clc
sbb
shll
out
aaa
inc
vpminsw
les
pop
imul
add
dec
es
dec
daa
out
aad
insb
xor
lahf
cltd
lds
mov
bnd
ret
ds
rcr
sbb
mov
aaa
movsb
jecxz
int
cmp
cld
lcall
add
adc
add
push
shlb
or
cmc
sbb
add
imul
push
inc
and
gs
ljmp
pop
in
mov
in
sub
sbb
sbb
mov
xchg
add
xor
sub
fcoml
sbb
jbe
or
sub
stos
sahf
aam
inc
scas
arpl
fmuls
mov
jo
fistl
imul
mov
sarb
negl
mov
popa
popa
cmp
add
in
mov
in
stc
xlat
sub
xor
push
pop
push
mov
xchg
es
mov
cmp
stos
sbbb
and
pop
pushf
out
and
dec
out
testb
shll
mov
iret
das
mov
scas
scas
adc
hlt
jo
xor
sub
call
subl
mov
and
les
arpl
jb
jmp
xchg
shlb
sub
jge
cwtl
mov
sub
dec
fwait
cmp
out
pushw
testb
fsubs
js
daa
arpl
dec
cmp
dec
movsl
daa
adc
xchg
ss
jne
pop
out
push
loopne
push
jmp
lret
daa
shl
pop
fidivrl
push
jle
icebp
stos
cmp
mov
mov
sti
mov
sbb
into
jecxz
add
loop
cltd
or
cli
or
inc
jp
jge
mov
jg
mov
inc
mov
or
movsl
and
lret
cmp
mov
fisttpll
daa
pop
or
stos
jno
sbb
ja
loop
jo
test
pop
leave
jle
out
loop
mov
std
jmp
and
sbbl
cmc
xor
sahf
mov
int
cmpsl
xchg
fbstp
fiadds
in
insb
les
jns
xchg
sbb
movsb
pop
xor
xchg
dec
cs
dec
add
xchg
stos
adc
leave
dec
mov
cmp
adcb
in
jae
cltd
cmp
int
enter
loop
xlat
adc
xor
ret
fs
jbe
adcb
xlat
fcomp
adc
into
incl
jno
mov
dec
loope
dec
std
cltd
sbb
das
xor
je
jmp
and
add
cli
xchg
divb
lock
rcr
jbe
and
fcomp
xchg
fs
andnps
dec
xchg
inc
jo
push
pop
mov
lret
push
add
xor
sub
lret
push
jecxz
sbb
iret
jnp
cmc
mov
leave
xchg
push
roll
mov
xor
cltd
clc
movsb
add
outsb
stos
lea
mov
lahf
xchg
push
add
cmp
jnp
adc
adc
ja
stos
push
mov
stos
sbb
xor
pop
push
push
dec
je
cmp
sub
sbb
push
sub
cmc
ss
das
test
pop
fsubs
pushf
repz
dec
int
add
and
dec
in
and
sbb
mov
adc
mov
mov
inc
loopne
xchg
push
mov
add
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
fisubl
jnp
cli
adc
daa
cli
adc
in
je
xchg
cmp
jbe
jle
pushw
jle
sub
xor
idivb
mov
cmp
dec
call
inc
dec
cmp
sub
fimuls
mov
scas
test
adc
aaa
push
dec
js
or
test
ss
or
ret
movsl
push
test
movsl
ja
push
sub
cmpsb
hlt
dec
xchg
inc
add
lret
mov
test
fcomps
sub
or
dec
pop
mov
and
fs
xchg
adc
jge
pop
fstp
aas
cltd
out
in
ret
pop
xor
jae
fcomps
xchg
sahf
ret
and
loopne,pn
push
out
clc
repz
rcll
and
add
test
ja
xchg
test
jo
imul
dec
inc
or
addl
xchg
shrb
xor
mov
mov
repz
lahf
popa
ja
insl
adc
pop
lods
aam
sbb
jno
push
outsl
mov
hlt
ficoml
fiaddl
imul
xchg
jb
mov
in
ljmp
repnz
mov
addb
pop
xor
cmp
mov
cmpsl
movsb
sbb
loopne
pop
inc
xchg
gs
mull
hlt
cmp
addb
adc
rorb
xchg
push
mov
roll
das
ljmp
pop
cmp
test
adc
xor
and
inc
push
ror
insl
push
ret
loope
test
jmp
add
add
clc
repz
dec
pop
add
push
push
imul
or
jle
pop
test
pop
dec
lret
sbb
jns
sub
mov
out
mov
shlb
cmpsl
stc
xor
push
ss
mov
aad
xchg
lea
pop
mov
nop
mov
push
pop
jne
movsl
push
sub
dec
pop
aaa
fnstcw
int
rcrb
das
test
int3
xor
mulb
push
clc
adc
test
mov
jmp
stos
pusha
xchg
push
or
push
lods
rorb
and
mov
stc
and
repz
lods
adc
lods
test
mov
cmp
add
dec
fs
adc
movsl
pushf
xor
inc
insl
cmpsl
mov
stc
push
scas
pop
sti
mov
fdivr
cwtl
mov
jp
daa
cmpsb
iret
xor
pop
in
test
xchg
stos
jp
fprem
push
sbb
jle
sub
out
leave
xor
and
cmp
inc
dec
adc
notb
push
ljmp
stc
ret
xchg
add
test
or
xor
shll
cmp
inc
jo
or
and
or
test
inc
pop
pop
imul
mov
sub
ficoms
ret
xchg
incb
mov
fimuls
repnz
push
pop
inc
stos
mov
jbe
jg
cld
mov
lods
jecxz
xchg
cltd
adc
lea
add
cltd
push
push
cli
repnz
dec
xor
lods
lret
push
push
cmp
xor
and
test
mov
pop
mov
testb
js
add
add
xor
pop
inc
ljmp
inc
adc
lret
xor
inc
cmp
frstor
pop
das
adc
sbb
mov
sub
lcall
ret
push
pop
icebp
and
mov
pop
xor
gs
fstps
sub
dec
mov
cltd
mov
jecxz
insb
and
mov
pop
xor
xchg
inc
movsl
not
lahf
sahf
mov
push
inc
lods
insb
cmc
inc
adc
aas
bound
shlb
outsb
shr
mov
adc
sbb
jg
add
inc
sbb
ss
and
cmp
cmp
mov
xor
push
push
pushf
lods
leave
sub
sub
jns
or
jnp
push
aad
jbe
pop
and
xlat
or
test
aam
xchg
enter
mov
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
add
adc
cli
adc
stos
icebp
dec
mov
xchg
pop
mov
jae
std
xor
add
aam
das
inc
xlat
clc
ja
test
cmp
hlt
sbb
sbb
pop
dec
int3
ret
aam
stc
cmpsb
mov
fxch
pop
decl
mov
xchg
xchg
out
scas
dec
pop
les
xor
jne
shll
pop
xchg
inc
les
lea
into
cmpl
sub
mov
ret
jmp
adc
mov
mov
xchg
mov
shrb
sbb
aaa
pop
fsubs
popa
jns
mov
sahf
cmp
mov
push
xchg
movsl
fildll
push
mov
cmp
mov
stos
dec
repnz
adc
fmulp
lods
ftst
loope
aad
fimuls
std
mov
or
out
lods
daa
mov
xor
xor
jp
jae
nop
aam
mov
cmp
add
cmp
shrb
mov
mov
mov
cltd
pop
sub
movaps
mov
or
cltd
pop
xor
jae
xor
pop
in
or
shrl
sub
jle
push
sarb
pop
bound
cld
fwait
and
push
inc
sbb
inc
xor
hlt
adc
test
enter
sbbl
adc
pop
cmpsw
mov
vpsubusb
xchg
inc
pop
xor
mov
lods
xor
cmp
in
cmp
cmp
negb
or
dec
push
icebp
pop
fdivr
cld
cmp
sbb
lret
test
fiadds
mov
mov
sub
bswap
and
mov
test
popa
add
xor
movsl
jl
sub
jge
lods
dec
lds
fildl
cmp
stc
je
sbb
pusha
stc
xorl
arpl
pusha
xor
push
stos
cld
jmp
xor
jb
data16
data16
push
xor
roll
pop
inc
shlb
sahf
add
cmp
jmp
in
lret
mov
fistl
aad
xor
hlt
mov
frstor
xorl
xchg
pop
xchg
mov
adc
cmp
jno
push
scas
push
iret
in
cmp
test
pushf
xchg
test
js
xchg
aaa
arpl
xor
mov
lahf
stos
mov
dec
movsb
fldl
or
icebp
and
cmc
jle
push
lock
decb
in
lret
orl
movsb
mov
dec
cmp
mov
pop
lret
into
sub
je
sarb
sub
xor
sbb
loope
xor
inc
notl
pop
test
popf
jge
pop
int
cld
das
inc
cmpsl
inc
xchg
jl
mov
std
sub
xchg
nop
lods
enter
loop
repnz
cmp
ja
xchg
shr
fninit
pusha
sub
xor
lcall
repnz
pop
addb
push
insl
xor
and
fimull
xlat
mov
inc
adc
test
mov
xchg
mov
ret
mov
mov
movsl
movsl
ljmp
hlt
cmp
rolb
mov
push
xlat
xchg
repz
fstl
adc
lahf
adc
sub
push
mov
into
dec
imul
aam
cmpsl
mov
shrl
jecxz
pop
jmp
nop
push
repnz
add
scas
mov
xor
cltd
out
fs
mov
fdivs
inc
mov
ret
mov
mov
hlt
and
mov
dec
sub
sub
sub
loopne
lds
dec
push
fs
leave
or
adc
sbb
dec
addr16
push
cmpsb
push
in
aas
sbb
inc
jg
nop
in
dec
push
dec
std
jno
pop
int
call
inc
notb
ret
fwait
or
int3
xor
hlt
xor
cmc
movsb
xor
sub
dec
in
inc
imul
jmp
int3
test
and
xchg
cmp
adc
daa
cli
adc
mov
in
stos
push
inc
xchg
in
je
in
adc
insb
lret
in
inc
mov
out
scas
push
mov
sbb
popf
xor
push
xor
inc
cmp
mov
push
dec
mov
insb
lret
dec
lret
cmp
cmp
xor
mov
movsl
in
test
mov
rcll
push
sub
and
mov
loope
cmc
cld
mov
xchg
scas
pop
mov
lock
adc
mov
aam
push
mov
icebp
outsl
jo
outsl
cmpsl
xor
insb
and
stos
mov
pop
fisttps
addr16
jle,pt
imul
push
loopne
push
add
out
test
into
in
lock
shr
fiadds
notb
pop
popf
pop
fs
fcoms
and
push
push
mov
sbb
sar
int
into
test
fdivs
pop
std
xor
xchg
push
mov
xor
roll
repz
das
sahf
xchg
das
rcrb
les
outsb
pop
cmc
shrl
adc
sbbl
add
or
hlt
cmp
lret
inc
mov
pop
hlt
cwtl
js
mov
mov
mov
mov
outsb
imul
mov
shll
cld
jne
movsl
cmp
lret
add
call
imul
cmpsb
into
sub
xor
fimull
sub
je
int
popf
add
fstl
ret
cwtl
mov
lahf
out
sub
mov
insl
scas
push
ret
and
imul
push
jl
jg
imull
movsl
jno
aam
clc
outsb
rcl
fwait
push
and
insb
inc
out
addr16
mov
jne
pop
and
shlb
inc
mov
sub
mov
and
test
out
dec
jmp
and
push
push
dec
push
popf
cmp
sub
imulb
xchg
scas
mov
push
into
xchg
cmp
inc
add
mov
cmp
sbb
jecxz
stc
adc
mov
xor
inc
mov
push
xchg
ljmp
pushf
gs
pop
mov
daa
and
or
and
shlb
fldt
push
dec
mov
loope
das
scas
push
lret
aad
inc
push
lods
imul
sahf
push
aas
xor
jo
cmp
xchg
or
jg
scas
add
cmpsb
jle
arpl
lock
mov
repnz
push
cltd
je
and
push
push
fdivrs
jl
push
ret
int
jno
inc
xchg
ds
es
das
cwtl
roll
mov
pop
gs
jb
xchg
mov
jo
dec
add
out
push
sti
adcb
mov
gs
mov
jmp
adc
fcompl
sbb
pop
mov
faddl
icebp
xorb
pop
push
add
sub
test
aad
scas
mov
add
mov
mov
xorb
and
subl
jb
add
insb
lea
lcall
xchg
add
mov
sbb
mov
fists
stos
push
flds
psllq
sarb
dec
shlb
push
add
xor
mov
int3
jb
or
mov
dec
imul
sub
mov
lret
sub
fstpl
and
ret
push
jg
out
data16
mov
jmp
sbb
dec
xor
dec
out
or
in
ljmp
or
jecxz
dec
or
ret
pop
mov
dec
mov
xor
rcrb
repnz
and
mov
data16
xlat
movsl
xor
out
jbe
inc
pop
lea
loop
pop
dec
sbb
bound
pop
addr16
adc
mov
mov
push
jmp
jp
mov
leave
repz
sub
iret
cmp
std
sbb
add
or
repz
inc
add
aas
out
add
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
std
sarl
daa
cli
adc
jmp
push
fbld
jo
out
imul
push
out
push
test
andl
jne
push
fists
sbb
test
add
pusha
test
pop
add
mov
in
loop
bound
xor
icebp
pop
sbb
mov
dec
push
pop
daa
popf
xor
sub
cmp
ljmp
fcmovnb
stos
sub
add
pop
dec
stos
push
jo
in
loope
and
in
sbb
out
int
xchg
cmp
or
sbb
cmpb
rcll
sbb
stc
outsl
mov
mov
das
mov
enter
shlb
mov
hlt
outsl
jle
aam
add
mov
imul
mov
cmp
sub
pop
repnz
out
pop
roll
dec
pop
and
fcmove
pop
pusha
and
adc
sbb
rolb
pop
loop
idivb
and
and
mov
outsb
enter
sbb
fisttpll
sahf
les
stos
fcmovb
fstpl
dec
jnp
call
add
sbb
leave
fs
jmp
xchg
or
ja
mov
sub
mov
or
das
xlat
out
ret
sub
cmp
xchg
ja
pushw
das
fadds
fistpll
inc
jp
test
aaa
mov
sub
xor
fcmovne
mov
mov
test
ljmp
add
aad
fs
jmp
jp
push
sub
fadds
cwtl
mov
inc
movsb
daa
das
dec
sti
test
and
cwtl
fwait
inc
pop
out
xchg
xchg
in
sub
pop
xor
inc
aad
aam
pop
int
dec
outsb
shrl
nop
test
ficomps
out
gs
mov
arpl
inc
lcall
leave
test
lods
pop
fistpll
das
ss
mov
mov
xchg
aad
xorb
fucomi
pusha
fcompl
shlb
fsub
mov
adc
pop
inc
scas
andb
popa
pusha
ljmp
push
mov
add
mov
ljmp
fmul
popf
rolb
out
pop
rcr
cmp
sbb
fwait
adc
shl
lods
hlt
or
pushf
mov
xchg
pusha
jnp,pt
test
mov
inc
pop
push
jp
lods
in
inc
pusha
cld
pop
dec
and
add
cltd
cmp
std
or
lods
sub
sub
popa
data16
jns
sarb
pop
xor
lock
inc
aad
aad
inc
insl
jmp
jne
sub
dec
adc
mov
sub
shl
jge
add
sub
adc
or
in
sub
xchg
sub
adc
pop
lcall
addl
mov
aad
js
stos
je
ja
xchg
xor
xchg
jne
cs
adc
jnp
sbb
xor
mov
sub
dec
fdivl
outsl
mov
inc
cs
sbb
cmp
jb
mov
fldl
les
mov
fcomip
add
mov
loope
rcrl
insl
outsb
inc
or
in
push
add
add
es
cmp
push
mov
imull
inc
inc
shrl
mov
into
sub
xor
shll
lds
sub
mov
add
fst
mov
jnp
pushf
add
sub
push
sbbl
mov
imul
mov
gs
test
aad
stos
enter
sbb
cli
mov
int3
repnz
jb
or
or
push
cmc
cmp
cmp
xchg
mov
adc
dec
stos
jb
rcll
xor
imul
mov
incb
xor
mov
dec
aam
push
repnz
cmp
aas
mov
fstpt
xchg
outsb
sbb
jmp
xchg
cs
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
mov
jnp
fists
adc
cli
adc
pusha
int3
push
xor
dec
dec
sbb
dec
and
loop
pop
mov
nop
cmp
push
dec
mov
fadds
negb
cmpsb
push
mov
arpl
daa
out
xor
packsswb
sub
test
es
dec
pop
sbb
js
add
sbb
xor
lea
jl
int3
xchg
push
in
imul
call
leave
sub
fmulp
lea
aaa
cmp
mov
xchg
push
shrb
mov
jbe
lcall
or
jno
mov
xchg
movsb
mov
mov
repnz
jge
inc
filds
and
hlt
imul
lret
jnp
inc
in
aad
pop
test
stos
clc
inc
js
je
xchg
mov
or
jno
dec
mov
dec
sub
sti
iret
out
mov
or
fwait
or
stos
push
lea
mov
dec
dec
les
inc
push
mov
cld
push
cli
and
dec
rorb
push
cmpsl
cmpb
jle
call
repnz
les
and
xchg
es
lret
sbb
lcall
decl
mov
orl
xchg
insb
loope
cmp
xor
cwtl
lret
sbb
into
arpl
sub
inc
stos
ret
popf
lock
mov
jle
std
test
lcall
adc
xchg
push
lds
jne
push
jecxz
inc
es
or
jmp
jno
pushf
jp
cmp
mov
sbbl
pushf
inc
adc
andb
and
cs
inc
jne
cwtl
inc
xlat
cmc
pop
mov
inc
insb
add
leave
les
mov
loope
inc
sbb
mov
out
push
cmpsl
cs
ljmp
adc
push
jle
add
inc
nop
lret
push
mov
fdivl
push
mov
or
push
data16
lcall
cmc
cmp
sub
sbb
xchg
test
xchg
and
xchg
inc
jp
pop
push
out
lea
mov
xchg
jbe
negl
lock
inc
ret
out
adc
bound
jecxz
fcmovnbe
int3
mov
xlat
push
jnp
arpl
clc
push
test
fcomp
sbb
fdivl
shlb
xor
jne
xor
mov
pop
out
adc
stos
inc
lods
leave
push
gs
jo
mov
addps
daa
adc
xor
pop
sbb
adc
js
lcall
or
addr16
dec
sar
pop
repz
jp
mov
xor
mov
or
inc
std
cmpb
ss
mov
movsl
lock
cmp
push
or
push
push
mov
imul
repnz
scas
pop
add
pop
adcb
mov
or
mov
loope
int3
push
and
jno
daa
aam
outsb
rorb
push
jo
insb
inc
mov
das
sub
cmc
stc
jmp
fwait
jnp
lock
or
inc
dec
push
sub
cmp
sbb
jb
gs
push
ror
aas
jae
jge
dec
xchg
sbb
es
dec
ss
fdivl
int
fistps
pop
xchg
jge
mov
pop
and
push
push
andb
sbb
jb
in
outsb
mov
pop
cs
push
mov
push
scas
and
test
sahf
jnp
adc
lcall
popf
cmpxchg
pusha
lahf
orl
mov
and
inc
jl
sahf
mov
xor
inc
push
call
ds
outsb
in
enter
insl
stos
jmp
jns
xchg
pop
test
call
pop
shll
pusha
iret
inc
imul
jnp
sarb
cmp
in
cmp
jns
xchg
lock
in
sbb
mov
lods
jne
mov
arpl
scas
aas
jl
orb
xlat
push
sbb
sbb
jge
jb
push
mov
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
jmp
cld
dec
or
adc
daa
cli
adc
mov
aas
jns
or
add
rcrl
dec
clc
fistl
xor
scas
test
subb
jle
test
test
xchg
inc
or
aad
jno
outsl
mov
es
movsb
add
subb
idivb
inc
dec
fistpl
and
sbb
lea
hlt
out
jb
stos
inc
xchg
pop
or
jb
or
andl
aaa
inc
mov
lret
out
xor
adc
inc
gs
lods
rorb
shlb
jns
insb
sahf
orl
sbb
xchg
stos
jle
xchg
stos
rcl
test
stc
mov
js
cmp
jp
das
jmp
xor
pushf
popf
lea
or
in
adc
ret
addl
mov
stc
imul
mov
xlat
fstl
or
dec
inc
push
in
in
cmp
xchg
das
add
cmp
popf
test
jb
mov
enter
cmc
jg
xchg
out
cmp
push
pop
push
lods
jl
dec
cmp
jbe
and
pusha
and
mov
addr16
dec
mov
dec
sbb
or
sahf
sub
adc
inc
mov
push
mov
movsl
mov
std
aam
add
sub
mov
jo
das
movsl
int
jns
popa
call
std
cmp
dec
dec
out
xchg
adc
or
iret
xchg
data16
ss
mov
fstpl
mov
pop
xchg
extrq
dec
mov
push
mov
mov
addr16
aaa
xor
mov
popa
out
loop
sbb
jbe
xchg
jne
in
faddl
push
pusha
dec
xchg
ret
shll
xlat
dec
jno
mov
les
sub
movsb
jge
jo
xor
push
rclb
pop
inc
arpl
add
lea
ds
cld
sub
divb
inc
nop
push
add
popa
rolb
or
pop
xchg
jbe
jge
inc
loopne
int
xchg
cs
inc
dec
pop
jns
imull
jp
mov
int
or
cltd
pop
repnz
sub
mov
inc
sub
fisubs
inc
aaa
push
fstp
mov
stc
lods
dec
dec
stos
dec
or
pop
sub
daa
or
rcl
mov
rclb
ljmp
in
xor
sbb
lods
into
mov
add
sbb
jecxz
mov
mov
rorl
cmpsl
cmp
data16
push
cwtl
mov
cld
test
inc
and
mull
in
jns
movl
jl
jg
loope
inc
inc
jmp
push
andnps
pop
ret
fndisi(8087
jmp
inc
xor
popf
xchg
jne
jmp
xor
sbb
or
lret
sub
push
jmp
loope
inc
fnsave
in
out
jne
je
lret
mov
or
cmp
js
loop
adc
jge
push
fmull
jo
pop
sub
icebp
out
dec
jno
pop
outsb
ljmp
cmpsl
cmp
in
mov
xor
inc
stos
push
aaa
fsubr
aad
hlt
and
mov
xchg
xor
fnsave
xor
lds
push
ret
fwait
stos
xchg
ss
arpl
push
lcall
lret
pusha
jle
rcl
daa
or
xorl
pushl
mov
enter
pop
jg
push
iret
mov
sbb
push
pop
insl
in
adc
imul
imul
popa
inc
push
cld
or
xchg
sbb
stos
jge
leave
adc
decl
ficoms
dec
mov
inc
lods
and
mov
sbb
orb
lret
orl
and
clc
stc
out
inc
jbe
lea
insb
into
jecxz
inc
aad
mov
fidivrs
push
xchg
jl
add
dec
inc
aad
push
lret
loope
stos
push
and
and
xor
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
enter
scas
call
or
repz
mov
xor
ds
popf
fcmovbe
cmp
xchg
lods
xor
sahf
jecxz
push
bound
sbb
mov
push
fstpt
xchg
or
dec
stos
jbe
sub
push
lahf
fistps
sahf
cs
mov
sbbl
add
mov
inc
inc
jle
mov
xor
shlb
fcomps
mov
ret
aas
cmp
iret
sub
out
cmp
sbb
in
pop
xchg
in
inc
fcompl
jb
cmp
inc
cmpsl
jo
ds
xchg
pop
lods
cmp
in
std
fcompl
add
addr16
fimull
xchg
mov
cmp
outsb
aam
sbb
mov
icebp
inc
pop
xorb
pop
push
mov
pop
mov
sbb
xchg
andb
aam
sbb
lock
lcall
jmp
push
sbb
mov
out
inc
fs
or
cmp
cwtl
rclb
lret
add
cmp
xchg
dec
das
sbb
std
nop
sub
addr16
test
movsb
adc
push
mov
xchg
ret
mov
leave
lods
sahf
push
cmp
mov
femms
repnz
cmpsl
mov
popf
sbb
inc
mov
in
inc
jns
das
loope
sbb
out
ror
repz
fstps
adc
sub
clc
decb
ja
xor
mov
cli
test
lret
decl
push
insl
add
add
pop
testl
shlb
xor
sub
or
mov
hlt
sub
pop
pop
and
jecxz
mov
xor
les
addr16
jg
pop
pop
daa
jnp
test
push
ljmp
push
ss
mov
push
sahf
dec
in
or
jecxz
iret
outsb
and
jle
cmpsb
push
cmp
add
xchg
mov
mov
in
inc
data16
xchg
insl
cmpsl
and
mov
cli
mov
popa
arpl
lret
mov
jno
pop
ror
es
lcall
inc
scas
xchg
out
xor
push
stos
add
mov
leave
je
gs
shl
pushf
rcrl
or
xor
fnsave
push
fbld
xchg
dec
out
sbb
lahf
fnstenv
inc
adc
std
shlb
dec
push
loop
pop
int
pop
ret
mov
call
mov
cli
cmp
out
sahf
sbb
cwtl
mov
and
movsl
pop
xor
cmpsl
loop
lods
daa
jle
pop
mov
movsl
shrb
or
lcall
push
dec
or
sbb
push
cmp
es
into
or
and
cmp
push
les
jnp
lret
ror
mov
jecxz
jnp
flds
movsl
xchg
add
and
lock
insl
mov
jmp
xchg
adc
setb
pop
or
ljmp
cltd
mov
xor
fincstp
lods
add
aad
cmp
pop
pop
xor
sbb
dec
fs
jb
pushf
les
sub
lods
pusha
fdivrs
pop
xor
mov
pop
fidivrl
mov
inc
pop
push
movsl
data16
cmp
inc
lcall
xchg
pop
xlat
add
mov
insb
rep
sub
and
dec
xchg
aad
cmp
cld
das
and
inc
movsl
mov
cmp
cwtl
aad
cld
mov
xor
ljmp
imul
dec
push
jbe
shlb
cmp
test
dec
popa
xor
clc
mov
icebp
add
andb
push
cmpsl
cs
jbe
jmp
xor
lods
mov
pop
js
inc
fildll
popf
jae
dec
sbbl
adc
lock
dec
inc
or
and
ss
inc
xor
jge
mov
lock
addr16
mov
inc
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
and
adc
cli
adc
fs
jmp
push
aam
pop
cmp
mov
xlat
filds
adc
dec
repz
mov
aas
cmc
add
repz
mov
in
ja
and
sbb
iret
add
or
and
fstps
mov
mov
icebp
push
das
repnz
daa
mov
jae
ja
lcall
xchg
sub
rol
mov
mov
or
imul
movsb
dec
mov
leave
stos
dec
jnp
xor
call
mov
jge
push
mov
fildl
out
ds
stos
inc
leave
mov
xchg
inc
int
pop
adc
out
sbb
aam
in
xchg
jo
scas
cli
cmp
in
cmpsb
adc
sbb
sarb
push
ret
mov
and
jns
rolb
fwait
dec
inc
mov
lret
cmp
repnz
lahf
loop
dec
repz
nop
cltd
xor
fmul
dec
fcomip
daa
jae
es
mov
aad
mov
cmc
int
lods
cmp
jns
mov
rclb
or
mov
fimuls
dec
jmp
push
dec
popf
popa
or
es
xor
jg
out
stc
mov
out
push
xor
pop
clc
repz
push
sbb
shll
and
cltd
sbb
in
negb
pop
scas
lods
out
push
in
aaa
xchg
fucomip
aam
jg
aam
xor
xchg
xchg
inc
xchg
data16
popa
add
xchg
mov
int3
into
jne
adc
jne
mov
sbb
stc
or
enter
sub
sbb
add
ja
aam
jo
cmp
repz
call
loope
mov
pop
mov
test
andl
jle
scas
lea
mov
aas
jecxz
jl
aaa
aas
arpl
jp
jmp
shl
adc
lods
fisubs
pop
xlat
jecxz
mov
faddl
cs
sub
daa
scas
cli
pushf
mov
adc
out
lret
test
xor
sbb
or
inc
dec
push
dec
mov
pop
or
sbb
stc
imul
sbb
jae
cmpsb
sub
sbb
fwait
adc
cmpsb
int3
cmp
adc
jg
in
int
jmp
jmp
sub
adc
push
mov
add
imul
mov
call
mov
mov
push
es
fcoml
dec
loope
int
addr16
inc
xchg
ret
fbstp
push
test
je
and
inc
rolb
and
pop
dec
test
ja
sbb
inc
and
jns
or
mov
fnstsw
lock
aaa
test
mov
loopne
int3
mov
sub
add
cmp
xchg
sub
xchg
fidivs
cwtl
je
cld
mov
mov
adc
repnz
and
push
or
subl
fimuls
xor
bound
sub
scas
push
test
mov
pop
xor
mov
adc
test
sti
pop
add
test
loop
and
inc
mov
adc
movsl
inc
adc
in
ja
xor
mov
int
push
pop
sbb
jb
jne
jne
add
scas
inc
popa
push
push
mov
aad
das
mov
inc
dec
push
pop
clc
inc
mov
jmp
xchg
outsl
int3
and
inc
iret
repz
jmp
fcoml
cli
in
mov
mov
shl
push
test
addr16
xor
push
or
out
mov
leave
loope
jne
int3
xchg
mov
shlb
push
add
add
lret
int3
jo
das
je
and
xor
inc
test
mov
sub
mov
xor
mov
lret
lds
test
dec
mov
ficoms
addr16
mov
inc
inc
fs
test
xor
es
fiadds
push
pop
push
and
mov
dec
push
ret
mov
push
cld
adc
int
push
adc
sbb
mov
xchg
xchg
inc
orl
add
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
rcll
aas
mov
inc
inc
adc
lret
std
push
ljmp
dec
pop
outsb
xor
push
jae
xchg
mov
stos
inc
and
lea
cmpsl
jecxz
out
lret
xchg
cmpsl
outsl
mov
dec
outsb
cli
ja
xchg
jo
lods
lret
inc
adc
cs
lcall
adcb
cmp
test
push
shll
stc
mov
nop
leave
xchg
lcall
into
pop
pop
popf
jmp
leave
in
mov
fnstenv
pop
shll
jp
push
enter
dec
cmp
adc
in
adc
loopne
dec
inc
pop
mov
loopne
xchg
push
in
mov
je
jp
test
mov
sub
ss
in
repz
xor
test
xor
ret
inc
cmp
iret
js
leave
inc
dec
out
testl
es
mov
addr16
fidivs
or
hlt
inc
fidivl
pop
stos
xchg
cmp
inc
pop
or
pusha
xorl
sahf
mov
xchg
loope
and
std
rcl
pop
ds
pusha
sti
and
addr16
jno
out
adcl
shlb
push
lods
xor
cmpsb
out
xor
mov
add
xchg
popl
sahf
ljmp
lahf
inc
jno
push
shll
pop
inc
or
outsl
js
fstpt
sahf
mov
jl
jbe
int
bnd
movsb
and
cmp
int
mov
cmp
ret
sti
mov
push
inc
cmp
pop
lock
jg
and
jge
ss
add
push
or
dec
mov
and
pop
mov
cmp
mov
mov
xchg
fincstp
cmpsb
jg
mov
cmpsb
les
xor
mov
jp
sub
addr16
push
inc
cmpsl
push
repz
shlb
scas
cmpsb
hlt
jmp
jg
inc
rclb
fidivs
mov
outsb
inc
add
std
mov
jle
fistl
ds
out
cmp
popf
mov
rcll
cmpsl
pop
cwtl
outsl
pop
adc
call
inc
cwtl
push
xlat
ret
jmp
mov
mov
cmp
jp
xchg
inc
dec
push
jge
movsl
je
dec
pop
fdivs
sub
int3
ret
or
rcrl
xchg
xchg
repnz
test
push
stos
loop
push
jg
dec
out
mov
in
cmpsb
jp
dec
or
push
into
pop
sub
lods
lret
daa
inc
stos
sarb
and
sbb
nop
in
sub
mov
jle
stos
or
aaa
or
sbb
je
stos
stos
lea
push
sbbl
icebp
add
xchg
dec
push
xor
aam
cmp
lock
jb
xor
bound
xor
xor
cld
call
lds
loopne
rcl
imul
rclb
mov
jns
loopne
in
push
sub
xor
add
andl
pusha
scas
out
push
push
add
push
test
mov
int3
lods
sbb
addr16
addr16
push
testb
mov
ds
daa
mov
lods
cmp
xchg
push
repnz
adc
push
jg
das
repz
jno
lock
in
jmp
jmp
mov
ret
jns
sub
out
pop
adc
pop
popa
push
mov
aas
adc
sub
shlb
lret
adcl
cmp
cmp
orb
mov
addl
jl
test
and
mov
push
sbb
in
loope
dec
aad
push
insl
daa
xor
xchg
std
add
mov
cmc
sub
inc
out
aaa
ja
add
mov
pop
inc
imul
test
dec
adc
neg
outsl
fcmovb
int3
nop
push
push
adc
fcomps
insb
push
popf
mov
mov
xchg
pusha
mov
mov
pop
add
inc
push
jb
mov
repz
push
mov
xor
rorb
adc
cltd
out
mov
movsb
mov
push
add
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
sbb
adc
cli
adc
mov
gs
fldt
cmpsb
push
xchg
lea
adc
loopne
push
xor
pop
and
sub
jmp
add
jmp
push
std
int3
pop
mov
iret
fiadds
popf
stos
sub
sbb
or
bound
imulb
sahf
popl
xlat
lea
and
in
mov
jle
out
cmp
mov
mov
test
pop
xchg
sub
fs
cwtl
push
jne
sub
cltd
clc
lods
mov
aaa
adc
mov
fwait
mov
cmp
add
and
or
shll
mov
xchg
mov
mov
or
xor
cmp
pop
xchg
mov
or
add
xorl
jo
sti
lret
xchg
add
add
js
and
movsb
sti
mov
fmull
jecxz
xchg
push
xchg
xchg
cmp
ljmp
sub
imul
popf
cltd
pusha
ret
xchg
add
fadds
cld
fs
std
lods
adc
mov
lea
rcll
aas
xchg
add
icebp
bound
xchg
sub
call
fs
pop
leave
ss
bound
sub
sub
or
das
cmp
or
into
frndint
adc
sub
or
inc
push
xorb
sub
gs
ja
fwait
test
shlb
lret
adc
imul
ss
inc
in
and
lcall
es
add
inc
or
aam
push
loop
aad
fst
sbb
adc
int
jne
sbb
fnstenv
xor
arpl
jnp
pushf
xor
inc
or
ja
jmp
xorl
jp
mov
lea
pop
cmp
cmp
orl
mov
mov
xor
sub
push
cmc
seta
adcl
mov
shlb
mov
mov
add
and
dec
std
push
and
int
shrb
mov
aas
icebp
aam
xchg
in
pop
push
sbb
and
stos
mov
dec
cmp
ds
dec
outsb
lahf
mov
adc
fs
push
out
jp
es
mov
outsl
test
sbb
ret
ficoml
dec
test
lods
iret
mov
mov
add
xor
jb
xchg
cltd
nop
xchg
mov
xlat
inc
xor
in
mov
rorl
cmp
add
add
xor
jmp
pop
insl
cmp
bound
insl
repnz
leave
sub
test
in
cld
or
repz
push
test
lahf
cmp
dec
push
mov
ja
sub
lock
push
mov
mov
repnz
andb
push
sbb
mov
cmp
fs
mov
add
mov
lds
js
cs
and
scas
out
fiadds
and
xchg
adcl
jne
add
lds
clc
inc
sbb
orb
mov
dec
dec
fdivl
xchg
jae
jmp
lcall
in
test
mov
scas
jb
pop
sti
inc
iret
daa
stc
dec
ret
jecxz
rcrb
scas
int3
pusha
mov
xorl
int
pop
jb
cltd
jge
enter
lcall
mov
jnp
mov
or
push
gs
inc
jg
push
add
sbb
sbb
sbb
sbb
stos
push
pop
pop
sub
adc
or
fistl
lcall
hlt
loopew
test
sub
mov
inc
decb
movsl
shrb
out
dec
sbbb
xchg
stos
mov
imul
aaa
repz
adc
shll
mov
mov
pop
mov
jle
icebp
lds
popa
pop
lret
addb
push
push
sbbl
call
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
lods
inc
dec
xchg
pop
mov
adc
cli
adc
sub
push
in
aad
mov
loopne
add
push
gs
sub
das
add
pop
ja
inc
mov
push
es
jge
mov
or
das
sbb
in
sub
movb
in
ss
bound
ljmp
or
pushf
es
mov
push
lock
xchg
jnp
jle
stos
imul
icebp
imul
or
jo
bound
xchg
icebp
stc
cwtl
rcrb
or
mov
out
cwtl
test
cmpsb
or
mov
cmp
jecxz
mov
inc
jnp
mov
int3
mov
dec
cli
push
cwtl
sahf
aad
int3
in
loopne
mov
jne
movsb
subb
int
mov
sub
fidivrs
dec
lret
jns
or
push
arpl
popf
or
mov
into
aaa
es
mov
inc
inc
adc
and
xchg
popa
xchg
add
das
fildl
shl
adc
stos
pop
jbe
mov
dec
enter
stc
sub
rcrb
mov
jl
or
loop
pop
push
insl
push
loope
or
sarl
insl
adc
add
xchg
imul
lret
cmp
daa
add
sub
push
push
cmpl
mov
or
lcall
into
js
fisttpl
or
nop
xchg
sbb
lcall
aad
jl
mov
cld
inc
and
imul
ja
mov
hlt
mov
andl
shr
into
pop
mov
fwait
xor
adc
add
in
push
and
push
dec
push
fidivs
imul
jge
jnp,pt
mov
xchg
pop
push
outsb
xchg
cmp
mov
loope
or
sub
xor
mov
shrb
xchg
arpl
dec
incb
out
orl
inc
adc
aaa
sahf
cmp
je
das
fisttps
in
insb
fwait
or
or
sub
mov
gs
lods
dec
bound
mov
addr16
sbb
popf
xorb
sbb
jge
in
pop
or
ja
cmp
mov
mov
sub
inc
or
stos
loopne
mov
or
cld
insl
or
pushf
insl
xchg
push
push
mov
out
sub
add
das
pop
mov
ret
xor
test
int
xchg
and
mov
mov
out
jl
inc
mov
jns
jge
sub
je
or
pop
fistl
sahf
dec
sbb
aad
push
cmp
lahf
dec
das
sbb
push
pop
les
imul
idivl
fstpl
mov
aas
adc
movsb
mov
dec
adc
sbb
test
cmp
xorb
pop
cmpl
inc
flds
xchg
icebp
addr16
sub
cltd
in
pop
pop
popa
push
pop
and
cltd
shrl
jb
cmc
sbbl
adc
sbb
cmpsb
mov
sti
push
je
sbb
in
lock
xchg
ss
popf
stos
es
xchg
add
sbb
stos
cmp
jecxz
loop
push
out
imul
aas
cmp
xchg
scas
cmpsl
dec
adcl
in
outsb
jl
ljmp
call
xor
dec
xchg
mov
pop
shl
or
aad
mov
aas
xchg
cli
and
and
sbb
xor
loope
xchg
ret
sbb
push
xchg
popa
lods
lret
je
iret
xor
mov
lret
xchg
pusha
movsl
xor
add
emms
push
add
cmc
ret
cmp
test
mov
call
in
fdivr
xchg
jbe
jmp
shlb
mov
mov
or
push
lret
adc
cmp
or
jno
fsubr
pop
xor
inc
ffree
push
shlb
imul
cmp
mov
and
or
gs
xchg
xchg
sub
add
out
push
in
sbb
out
inc
and
leave
mov
jno
mov
xchg
mov
pop
jb
clc
rorb
rolb
bts
aas
stc
shr
mov
xor
add
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
sub
fwait
adc
aaa
cli
adc
test
mov
call
sbb
in
adc
or
pop
mov
sub
adc
jl
fwait
mov
loope
sub
aaa
scas
jg
push
out
fsubs
fsubs
ss
add
stos
jae
roll
adc
pop
lods
les
arpl
mov
test
push
inc
scas
lds
inc
pop
loopne
xor
adc
push
xor
push
xchg
jns
stos
rcrb
out
sti
cld
push
out
adc
dec
xor
sub
loope
jp
mov
lcall
add
xor
stc
mov
out
jecxz
pop
pop
imul
mov
pop
inc
int
add
cwtl
int3
int3
push
jo
or
lret
stc
cld
addb
xchg
setb
and
fsubl
pop
or
jnp
js
push
hlt
mov
mov
add
insb
fisubrl
sbb
pop
repnz
into
jb
mov
dec
aaa
sti
jl
pusha
xor
insl
mov
dec
lods
add
jg
cld
sbb
adc
cmp
dec
fwait
clc
cmc
xor
inc
sub
test
cltd
dec
dec
adc
imul
inc
mov
xchg
repnz
sub
mov
adc
pop
mov
push
sbb
fwait
push
or
loope
xor
pop
dec
jae
stc
fidivl
fstpl
xchg
mov
mov
cmp
jb
repnz
lods
mov
jo
adc
push
mov
lds
lods
insl
imul
or
xchg
jbe
mov
pusha
sarb
out
dec
pop
mov
pop
cs
mov
outsl
mov
cmpsb
icebp
inc
aaa
mov
jne
add
jp
out
inc
in
cmc
lret
adc
ret
nop
bound
xrelease
lds
test
ss
inc
leave
cmc
loopne
addr16
dec
in
push
xchg
sub
dec
cmpl
mov
jle
std
sahf
xlat
into
stc
inc
or
mov
int
test
dec
xlat
imulb
mov
gs
iret
xchg
rcrl
sbbl
lods
adc
repz
loope
shl
cmp
testl
xor
mov
das
jbe
cli
jne
inc
xor
pop
mov
out
mov
std
sbb
sub
adc
movsb
xchg
sub
xchg
jecxz
push
outsl
cmp
cmc
pusha
cmp
dec
test
aaa
push
shl
xor
in
ss
adc
stos
lcall
cltd
mov
popf
xor
inc
fsubr
sub
movsw
adc
bound
aam
push
add
in
push
add
insl
in
pop
int3
mov
and
push
cwtl
fcoml
cmp
fists
cltd
testb
fildl
daa
pop
jbe
mov
xor
mov
and
jne
aaa
adc
loopne
mov
cmpl
sti
dec
es
dec
and
mov
aam
fst
mov
pop
inc
mov
sahf
add
movsb
sbb
add
or
in
xor
push
and
sbb
outsl
cs
stos
mov
in
mov
cld
push
pop
fsubrs
mov
xchg
testl
hlt
fcmovnbe
jl
and
shlb
mov
movsl
jp
std
add
jno
xor
pop
lock
and
lahf
mov
nop
adc
out
xchg
pusha
and
ljmp
sub
pop
pop
inc
loope
mov
jo
cltd
lret
mov
shl
insb
jae
cmpsb
inc
fisubrl
orl
sub
stos
jmp
inc
pop
push
jae,pn
fwait
jb
pop
lret
and
fidivl
into
adc
sti
lahf
xchg
xor
cwtl
jne
jle
pop
push
imul
imul
xor
mov
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
cmc
sti
das
jnp
mov
adc
cli
adc
repnz
arpl
cmp
adc
pop
js
sbb
sbb
les
mov
pop
adc
push
popf
scas
and
mov
sub
clc
add
mov
fsubl
sub
sahf
popf
sub
lods
mov
stos
cmc
or
sti
push
mov
mov
dec
push
data16
add
jno
sbb
gs
inc
je
rcrl
xor
iret
mov
mov
push
shll
sbb
stc
and
int3
sbb
sti
dec
test
ja
dec
gs
cld
or
mov
add
lods
repnz
or
inc
inc
std
pusha
push
sahf
add
sub
fdivs
xor
mov
xchg
dec
cmp
mov
aad
pop
dec
roll
mov
movsl
je
stos
lret
push
inc
or
cmpb
push
mov
pop
mov
fstpt
mulb
jb
mov
add
cmp
jg
mov
jno
lods
and
popa
cmp
call
jp
lret
ja
lcall
notl
or
in
stc
out
add
adc
jo
mov
adc
push
jecxz
mov
loopne
arpl
cmp
popa
shrl
in
lds
rorb
jae
pop
cmp
aad
lahf
hlt
pop
add
in
dec
push
testb
pusha
mov
mov
fsts
jbe
sub
cs
sbbb
pop
jno
aam
and
iret
icebp
mov
pushf
sbb
mov
adc
inc
in
popl
pushf
sub
in
loop
imul
and
sbb
loop
ret
fsubrs
subl
xor
cmc
hlt
xor
jb
mov
lods
inc
xchg
lret
add
and
or
divl
inc
out
repz
xor
mov
shl
sbb
xchg
fmuls
sub
call
cs
jb
daa
inc
mov
lea
mov
icebp
lock
pushf
rolb
xorb
jbe
das
out
mov
gs
pop
cli
sbb
mov
stos
xor
mov
mov
mov
ja
dec
cli
push
mov
adc
and
testl
jg
imul
push
pop
sub
and
shl
movb
add
jne
lock
cmc
xchg
out
ret
outsb
cmp
push
std
mov
xlat
xor
mov
xor
fisubrs
ja
and
sub
mov
dec
std
xor
fists
out
aam
mov
je
push
rcrb
stos
pop
dec
out
and
xchg
lea
idivl
mov
mov
mov
pop
mov
mov
xchg
jbe
in
in
jmp
xor
insl
lods
inc
data16
mov
out
rolb
repz
icebp
data16
mov
js
jp
or
das
jno
add
jle
jecxz
inc
ljmp
push
call
sub
add
xchg
imul
lahf
mov
cmp
dec
ficomps
pop
ficompl
addr16
inc
fidivrl
aaa
out
mov
sahf
push
xor
inc
sub
or
fstp
push
loop
call
xchg
mov
lahf
xor
mov
jno
push
and
xchg
mov
cmpsl
test
pop
mov
cmpsl
in
mov
adc
mov
insl
insl
insb
movsl
mov
push
xor
adcl
xchg
xlat
into
out
mov
jecxz
xor
jle
jg
xchg
test
sub
sti
push
cmp
lret
jecxz
mov
iret
sub
std
ret
jp
test
inc
sti
fsts
lcall
js
jge
xchg
adc
add
pop
jae
mov
lock
es
shrd
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
and
aaa
dec
lret
adc
cli
adc
mov
cwtl
lret
push
cmp
iret
clc
cld
sbb
out
add
out
int3
adc
push
rcrl
iret
xchg
cs
dec
mov
mov
inc
arpl
rol
pop
cmp
repnz
xor
cmpsb
jl
in
lods
cltd
push
cmpsl
arpl
mov
sub
aaa
jno
fimuls
add
je
lcall
daa
lds
mov
ds
mov
pop
bound
rorl
pop
pop
push
ljmpw
and
jnp
je
jbe
mov
into
test
loope
fstpl
sub
repz
imulb
xor
fs
mov
pop
or
std
push
push
adc
xor
or
pushl
push
test
or
and
jg
lock
push
rcl
in
or
imul
iret
push
mov
or
std
inc
cmp
in
pop
popa
pop
mov
std
inc
jmp
cmpsl
repz
and
repnz
dec
adc
imul
sub
je
xchg
sub
rclb
mov
fwait
xchg
inc
in
push
scas
push
lock
mov
jns
lods
sbbl
xor
xor
rorb
dec
fadds
cmpl
enter
add
fsubrp
push
push
mov
sbb
lret
pop
jge
ljmp
sti
xor
fsub
data16
lods
jnp
xor
add
xchg
sbb
in
adc
sub
or
dec
lret
loopne
notb
fcom
sub
add
lods
sbb
add
sub
fistpll
les
mov
stos
ljmp
in
cwtl
push
adc
xchg
out
rcll
cmpsb
incb
and
push
push
or
pop
test
sub
dec
jae
enter
push
mov
mov
ljmp
gs
leave
vmovmskpd
lds
cltd
ds
mov
jnp
xchg
push
mov
mov
push
cmc
or
add
cmp
fwait
cmpsb
sub
imul
add
cmp
pop
mov
lcall
test
cltd
popl
bound
cmp
mov
test
xchg
dec
test
and
loop
xchg
std
mov
cmp
inc
or
dec
cltd
dec
shrw
adc
dec
out
pop
add
sbb
fsubr
pop
ret
inc
cmpsl
mov
iret
jns
les
lret
fimuls
fmul
mov
outsb
push
ja
cmp
aas
stc
mov
lods
sub
shlb
cltd
inc
pop
mov
cmp
push
sub
lds
jb
lods
pop
inc
cmp
aam
and
push
out
aad
in
pop
mov
pop
dec
mov
dec
andb
loop
jmp
dec
cmpl
add
lods
call
js
jp
cs
push
ds
sarl
and
dec
pop
je
aas
ret
testl
push
xor
jmp
popf
mov
cmc
arpl
or
jecxz
stos
sub
cwtl
into
or
jns
pop
int
lcall
dec
dec
cmp
sbb
dec
xorb
cmpsl
pop
jg
xchg
jmp
mov
fnstenv
ljmp
mov
shl
pop
movsl
clc
push
xor
adc
mov
test
clc
sbb
stos
sub
pushl
cmp
stos
in
inc
mov
add
ljmp
pusha
fwait
imul
cltd
subl
popl
mov
dec
ljmp
jmp
and
pop
xor
jge
hlt
adc
dec
sub
push
pop
xor
and
lcall
and
cmp
stos
out
pop
cmpsl
fcoml
push
in
pop
fdivs
fucom
mov
xchg
adc
jmp
call
mov
shlb
in
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
xor
sub
orb
mov
lods
rcll
test
cmp
clc
add
lea
xor
dec
add
xor
pushf
or
out
xor
sub
or
xor
push
pop
fldenv
add
fsts
pop
pop
xchg
and
and
inc
pop
mov
xchg
call
rol
or
dec
adc
rorb
scas
in
jb
push
inc
add
ret
pop
les
fs
movsb
mov
dec
mov
loopne
push
std
adc
cld
mov
sbb
jmp
pop
push
mov
and
pushl
jbe
addr16
inc
xor
aas
out
flds
ljmp
cld
jmp
test
nop
fcmove
les
xchg
aad
fwait
daa
mov
push
addr16
jno
xchg
inc
push
jo
lods
push
imul
jno
inc
xchg
ret
sbbl
mov
mov
cmpsl
pop
mov
emms
xchg
ret
jns
xor
inc
jns
leave
lret
xchg
gs
jae
push
jge
lahf
mov
pop
out
jmp
push
fbstp
ljmp
sbb
cmp
inc
sub
out
pushl
pop
movsl
adc
movsb
cmp
add
or
mov
xchg
or
or
jns
subl
cmpsl
push
push
cltd
jmp
xor
fiadds
test
pop
sub
cmp
pop
add
dec
pop
and
out
cmp
jg
inc
sbb
mov
enter
sbbl
dec
push
and
xchg
lret
rcrb
aaa
xor
std
mov
scas
std
pop
xlat
ds
cmp
sbb
lahf
push
sbb
mov
rcll
fnstcw
push
mov
mov
ljmp
lea
push
nop
lods
cmc
inc
jg
rol
mov
and
xlat
cmp
repz
into
xor
out
sbb
mov
js
cmp
daa
loopne
sub
scas
popa
sti
xor
or
aad
in
addb
shr
xor
movsb
xchg
ljmp
pop
enter
cli
or
arpl
cmp
sbb
int3
test
xchg
jae
popa
xor
or
movl
push
fcomps
xchg
sahf
jo
js
enter
push
pcmpeqb
std
je
sti
push
mov
push
mov
daa
push
shrl
mov
mov
jl
mov
mov
xchg
pop
inc
inc
js
pop
imul
xlat
into
sti
jbe
repz
fwait
hlt
imul
mov
push
enter
in
lret
pushf
jp
cmp
jnp
push
sub
cld
or
adc
loopne,pn
enter
mov
cltd
and
repz
cmp
jg
xchg
mov
or
bound
popa
sbb
imul
add
sub
jno
jp
add
adc
out
cwtl
ds
sahf
xchg
mov
jne
jb
jo
mov
roll
mov
pushf
cmp
jmp
dec
es
icebp
outsb
xchg
ret
mov
adc
xchg
sbb
pop
or
loopne
notb
inc
lret
je
cmpsl
mov
repnz
xor
scas
push
mov
lret
jno,pn
xor
in
int3
cmp
push
stos
mov
pop
inc
bnd
imulb
and
or
js
mov
int3
or
movsb
mov
cmp
mov
pop
test
dec
sbb
jmp
mov
mov
inc
add
or
movsb
test
ja
cmpl
xor
push
sbb
ret
int3
mov
or
ffree
hlt
test
cli
icebp
cmp
add
pop
test
fwait
xor
shr
push
cwtl
xor
orl
push
mov
out
shl
repz
add
fistl
xchg
cltd
sti
insb
pop
xchg
mov
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
cld
rolb
push
jg
adc
cli
adc
dec
mov
add
jl
jae
sub
aad
jecxz
xor
js
push
loopne
lahf
lods
pop
dec
loopne
popf
xor
lret
movsb
fldt
jmp
icebp
inc
ljmp
pop
icebp
aas
pop
imul
dec
movsl
outsl
jmp
icebp
dec
lods
hlt
push
cltd
jne
mov
push
inc
imul
pop
mov
dec
sub
enter
mov
or
nop
mov
jnp
popl
dec
jg
cld
lds
ja
cmp
pop
mov
push
sub
movsl
hlt
pop
stos
jno
fs
xor
pop
divb
and
cltd
aad
cs
mov
jbe
daa
adc
jo
dec
pop
mov
mov
aas
cmc
nopl
dec
testl
and
pop
mov
cmp
push
out
aam
hlt
popa
call
sub
lock
jmp
xchg
cmp
and
daa
scas
rcll
xchg
shr
jno
movsb
cmp
sub
push
cmp
pop
test
mov
gs
pushf
ret
testb
mov
add
jns
mov
ljmp
or
xor
mov
out
adc
stos
aam
testl
push
pop
mov
xchg
ror
add
shlb
das
jle
pop
inc
jmp
push
pop
je
sub
cmp
or
or
push
sbb
orl
adc
mov
ret
aad
cmp
pusha
dec
les
call
int3
push
push
xor
test
mov
add
test
jb
and
mov
repnz
into
push
and
add
xchg
xchg
test
cmpsl
leave
inc
add
out
cmp
push
and
sub
lds
xchg
cmp
cmc
jle
aad
mov
mov
lods
mov
addr16
xchg
loope
push
fsubs
fsubr
mov
mov
cmp
test
icebp
xchg
loop
xor
cld
ds
ret
sbb
insb
add
cltd
xchg
xlat
jae
xchg
adc
inc
ss
cmp
pop
mov
lahf
inc
adc
ffreep
inc
sub
jne
or
lods
mov
lods
sub
mov
sahf
add
insb
push
and
cwtl
jmp
in
adc
jb
mulb
mov
push
dec
fdiv
fs
lds
sbb
int3
out
movsb
sbb
push
xchg
inc
loope
test
mov
inc
sbb
addl
dec
fs
aaa
lods
mov
push
sahf
mov
cmp
lods
dec
sbb
push
xor
inc
add
pop
pop
fidivrl
out
dec
adc
loop
ficomps
mov
add
xchg
popf
pusha
pop
js
stos
inc
rcl
sub
repz
push
jmp
sahf
sub
inc
mov
je
es
jns
jl
mov
jb
sub
xchg
insl
fwait
dec
cmp
mov
out
aaa
loopne
test
std
fdivrl
mov
dec
cmp
xor
leave
scas
jecxz
push
pop
out
addb
jo
mov
xlat
in
add
or
jg
inc
fwait
adc
mov
pop
xor
imul
cmp
mov
cwtl
xor
cmp
jne
adc
xor
mov
mov
or
push
in
xchg
xor
bound
adc
push
xchg
enter
iret
inc
imul
add
ret
push
pop
and
jle
inc
adc
jne
test
mov
mov
or
mov
cmp
mov
cmp
aad
sbb
xchg
and
or
jp
jo
aas
das
insb
sbb
mov
push
mov
insl
ja
inc
popf
lds
stos
pop
pop
test
dec
cmp
xchg
cmpsl
push
jo
xor
push
sarl
out
shl
sub
arpl
jns
cltd
mov
out
push
mov
push
pmaxub
push
mov
ljmp
and
pushl
xchg
popa
mov
mov
or
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
popf
inc
cwtl
push
ja
ja
test
daa
fs
addr16
dec
addl
mov
and
int3
bound
inc
insl
arpl
stc
bound
mov
ja
ret
int3
pop
test
add
xchg
shlb
sar
jmp
or
aas
sub
bound
dec
testl
pop
mov
push
jno
jns
pop
mov
imulb
jp
jg
fcmovnbe
dec
arpl
pop
repnz
loopne
sbb
out
mov
ret
cmp
mov
cmpsb
lret
or
je
cmpl
outsb
mov
push
jb
xchg
push
jno
subl
fstpl
xchg
out
movl
shrb
stos
fistps
xchg
aaa
pop
add
lock
sbbl
shr
add
mov
scas
icebp
jecxz
cmp
out
add
mov
mov
pop
into
mov
popa
fstpt
fwait
aad
jl
or
dec
jno,pt
lock
into
nop
loopne
addl
add
je
pushf
sub
sti
addr16
iret
jge
mov
int
jbe
jg
ret
mov
add
nop
xchg
push
aaa
das
test
fbstp
das
fdiv
adc
adc
sbb
movsb
inc
jne
pop
mov
push
xor
inc
adc
or
lock
xchg
xchg
push
add
xchg
mov
push
push
jne
sub
mov
push
cmp
inc
pop
test
or
jecxz,pn
xor
cmp
sbb
test
push
mov
lahf
scas
movsl
ficoms
fldenv
push
mov
push
sbb
sbb
bound
mov
adc
fcmovnbe
add
test
mov
xchg
iret
aad
cmp
mov
mov
in
cli
loopne
mov
addb
cs
cmc
push
xor
hlt
loop
cltd
or
inc
repnz
inc
dec
mov
pop
rcl
out
adc
pop
mov
inc
insl
xchg
das
rolb
adc
je
cmc
sbb
adc
dec
mov
mov
je
subb
andb
arpl
adc
testl
mov
mov
sbb
mov
xchg
or
mov
xchg
ret
addr16
orl
cltd
push
aaa
lock
pushf
popf
sub
xchg
add
sub
mov
xchg
mov
push
into
scas
mov
xchg
dec
movsl
divb
lea
adc
rcl
adc
pop
jp
leave
clc
lock
mov
or
and
sar
lods
out
mov
xchg
shll
add
push
sbb
fdivrp
xchg
and
fs
adc
mov
inc
lock
add
xchg
lea
cltd
flds
arpl
pop
inc
aas
std
or
or
cmc
xor
mov
ljmp
lods
cmp
pusha
mov
aaa
push
cmpb
scas
inc
or
adc
lods
xor
lods
push
test
pop
jnp
or
jmp
cmp
push
cmpsl
mov
push
sub
sbb
pusha
lods
jno
fldt
xchg
leave
sbb
mov
xchg
inc
stos
pop
dec
add
aaa
rolb
push
int
sti
cld
sbb
add
mov
icebp
pop
repz
iret
add
pushw
jecxz
add
or
jecxz
andl
fdecstp
and
sarb
or
cmpsb
mov
inc
mov
fsubr
xchg
adc
inc
pop
sar
mov
and
push
movsb
or
clc
xchg
out
fdivs
xchg
and
mov
jge
mov
lods
inc
sbb
aam
out
pop
mov
push
push
jo
insb
dec
sbb
mov
out
imul
xchg
push
xchg
or
mov
les
enter
pop
jmp
loop
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
mov
cli
adc
adc
fwait
xor
andl
xor
mov
aas
inc
mov
xchg
sub
movswl
mov
or
xchg
lock
aad
xor
fsubs
pop
fidivl
xor
outsl
dec
mov
sub
and
cmp
into
dec
mov
gs
pop
into
mov
mov
pop
cmp
sub
push
sub
cwtl
pop
jg
push
outsb
ds
scas
add
addr16
jl
cs
pop
out
notl
inc
inc
cmpsl
jmp
cmpsb
addr16
jmp
jae
cwtl
or
and
out
inc
shrl
pcmpgtw
jmp
add
mov
mov
lock
mov
pop
fstl
jp
and
cltd
xchg
add
adc
xchg
mov
inc
pop
dec
mov
adc
incb
out
iret
ret
mov
or
sbb
mov
mov
in
or
rcll
pop
std
cwtl
ljmp
xor
sbb
popf
int
pop
in
mov
xchg
inc
call
pop
aad
push
sti
in
jbe
xchg
mov
stc
mov
es
scas
and
mov
mov
lcall
mov
mov
jmp
cwtl
out
push
sti
ljmp
enter
lds
sub
or
lret
rorl
fsubrp
ret
cmp
mov
cmpsl
std
ret
dec
scas
xchg
pop
das
ret
std
pusha
fs
movsb
pop
push
inc
and
jo
add
add
mov
daa
popf
lods
fsub
and
mov
out
jae
push
xchg
and
push
inc
xchg
pushf
and
loopne
mov
jp
xchg
cmpl
out
add
lea
adc
add
cs
scas
cmp
cmp
or
xor
fiadds
mov
les
imul
push
test
sub
mov
and
mov
movsl
xchg
add
cltd
pop
jmp
popa
xor
sbb
sbb
mov
ffreep
add
adc
adc
aas
ja
int3
pushf
testb
lods
adc
movsb
jecxz
cmpsl
aaa
adc
mov
mov
push
dec
jbe
dec
mov
pop
xor
ja
or
cwtl
mov
sub
jle
xchg
popa
subl
mov
push
push
add
dec
adc
pop
cmp
xorb
movsb
mov
xor
loop
andl
test
push
notb
xor
inc
jmp
insl
mov
cmpsb
add
gs
xchg
mov
leave
aam
lock
enter
jno,pn
mov
popa
mov
jp
dec
push
or
adc
das
in
rcrl
lods
or
add
pop
insl
imul
sbb
and
push
ss
imul
movsl
sti
xor
mov
fcmovne
or
dec
dec
mov
and
jmp
push
negl
rep
lods
pop
test
nop
out
ficoms
nop
into
or
stc
or
ljmp
lret
aas
push
rcll
cltd
add
and
pop
out
xchg
cmpsb
jo
je
sbbb
cmp
arpl
sub
mov
addl
xchg
sub
pop
pop
and
iret
or
sub
cmp
inc
mov
mov
loop
xor
xchg
lods
inc
pop
out
inc
insb
xor
mov
push
aad
mov
adc
mov
stc
and
data16
ficomps
ja
push
nop
and
inc
movl
mov
aad
int3
xor
or
filds
test
pusha
pop
dec
gs
sahf
cmp
ja
lret
ss
inc
lahf
ja
dec
mov
test
sub
dec
mov
out
xor
sti
push
cwtl
and
out
loope
popf
jns
bound
cmp
mov
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
addr16
aad
lcall
adc
cli
adc
andl
clc
mov
nop
lret
jge
orl
mov
sbb
and
lea
testl
aam
pop
fucomip
adc
pop
mov
sub
adc
pop
hlt
sbb
test
mov
rorb
icebp
mov
in
xchg
mov
pop
insl
or
xor
ljmp
add
jnp
decb
mov
jmp
jmp
dec
aaa
clc
lock
sub
sbb
ljmp
int
sbb
das
insl
pop
nop
xlat
sar
and
jns,pt
xchg
stc
sub
test
imul
cs
cwtl
mov
pop
fs
xor
popa
orl
bound
lods
jnp
insl
cmp
or
pop
sbb
push
push
dec
inc
orb
pop
or
test
test
pop
mov
aam
cmp
xlat
cmp
sbb
ja
push
xor
outsb
xor
pop
in
dec
jmp
xor
mov
out
popf
cld
ja
xchg
jo
xchg
mov
and
jae
jl
movsl
mov
adc
fs
adc
call
add
das
jl
xchg
ljmp
xchg
or
xchg
mov
mov
cmpsl
mov
xchg
aaa
lahf
mov
pusha
inc
push
sbb
lret
sti
icebp
jmp
int3
and
mov
cmp
js
aad
mov
aaa
popf
xor
mov
mov
jb
push
jge
decl
pop
mov
dec
imul
scas
mov
stos
ja
push
ficoml
jmp
xor
dec
sbb
push
bound
and
mov
lret
stos
inc
add
adcl
rolb
nop
mov
pop
mov
outsl
inc
mov
cmp
repnz
mov
sbb
adc
ret
add
mov
movsb
loope
pop
sub
test
rclb
test
xor
dec
and
inc
cld
sbb
sbb
movb
xlat
stos
cmp
lods
adc
inc
sarb
xchg
sbb
in
jae
gs
and
popf
jae
lods
push
rcrb
je
inc
pop
in
ljmp
movsl
adc
dec
cmp
test
xor
bound
stos
push
daa
mov
popa
xchg
jns
test
pop
mov
push
ret
out
test
cmp
push
rcl
in
aas
in
pop
xor
data16
xchg
shll
cs
not
pushf
cmpsl
sbb
movsl
fadd
and
int
jbe
fbstp
idiv
jg
push
cmp
shlb
out
popa
imul
mov
mov
sbb
jnp
je
mov
xor
cmp
mov
jl
fcom
cmpsb
je
lds
out
dec
pop
cli
pop
cmpsb
push
pop
and
adc
ja
jecxz
pop
dec
sbb
jb
inc
jno
and
inc
mov
jno
cmp
sub
adc
stos
js
loopne
daa
call
aaa
push
mov
in
xor
push
fwait
mov
popl
push
mov
pop
sbb
push
test
pushf
xchg
ds
aad
jmp
pop
xchg
int3
dec
inc
loopne
mov
sahf
dec
ds
push
sbb
aas
xor
fwait
dec
push
pushf
movsb
adc
pop
cmp
nop
orb
fiaddl
mov
sub
lret
out
jne
mov
fisubrs
lods
lock
into
mov
stos
addr16
and
sbb
adc
lock
pop
adc
pop
fs
iret
aam
sub
adc
aam
inc
fcmove
jae
push
loop
and
scas
push
aam
sbb
lret
add
adc
mov
cmp
add
xor
add
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
sbb
popl
adc
aaa
cli
adc
mov
jae
or
repz
pop
mov
pop
outsl
sbb
xor
pop
gs
sub
mov
mov
fadds
test
xchg
fidivl
rcl
bound
mov
push
scas
cs
sbb
pop
call
fidivl
sub
insl
sbb
hlt
push
fadds
pop
mov
cmp
cmp
jge
xchg
jae
xchg
xor
out
inc
pop
stos
cmp
jne
sub
xor
push
aaa
add
mov
adc
and
cmpsl
in
int
push
xor
mov
sahf
fiadds
mov
mov
cltd
pop
es
mov
into
xor
popl
push
les
enter
movsb
pop
repz
or
add
imul
cwtl
mov
dec
int3
mov
sub
dec
test
mov
mov
cs
adc
in
mov
outsb
js
jmp
xor
pop
sub
test
add
sti
dec
pop
pusha
movsl
inc
stc
fisubrl
mov
cs
or
jmp
jne
jne
mov
fisttpl
jge
les
outsb
lea
aaa
sahf
arpl
inc
adc
repnz
mov
sti
push
popa
cwtl
adc
sbb
je
adc
mov
scas
push
out
xor
xor
add
scas
daa
loop
std
shll
lea
scas
xor
and
push
xlat
xor
lock
mov
push
mov
enter
mov
pop
xchg
jb
sbb
push
popf
lcall
in
pop
inc
aam
dec
mov
inc
mov
rorb
jae
fcomps
mov
ret
shl
lea
adcl
pop
out
dec
jl
xchg
and
jbe
pop
stos
call
inc
ljmp
add
add
or
push
mov
insb
mov
jo
insl
sbb
clc
jns
int3
or
je
or
adc
and
jae
ficoml
push
je
xchg
aam
adc
pop
dec
mov
mov
mov
jno
push
push
roll
add
in
mov
shll
mov
pop
hlt
inc
test
out
call
mov
dec
mov
rclb
mov
xorl
enter
or
fists
adc
adc
test
jg
movsl
inc
outsb
sbb
scas
cmp
dec
shrl
test
sub
mov
add
lahf
mov
pop
jmp
imul
pop
xor
aas
lods
in
xlat
dec
sbb
pop
inc
or
inc
lret
fldl
add
idivl
out
andl
jb
push
xchg
in
test
fistl
notl
jns
xchg
and
cs
insl
jae
add
shrl
fsubr
jp
mov
insl
pop
jno
and
xchg
bound
add
pop
sub
js
lahf
sbb
push
cmp
pushf
push
mov
mov
pop
adc
sarb
fwait
clc
aad
xor
inc
imul
lcall
lea
dec
xor
aad
int3
mov
cmp
loop
sbb
fwait
xorl
push
sbb
cltd
xchg
in
in
cmpsb
dec
lock
stc
fsubp
lods
adc
or
push
lret
xchg
xchg
imul
rcll
in
pop
sub
repz
dec
mov
mov
ffreep
es
in
outsb
push
lcall
lcall
xchg
ret
cmp
movl
dec
sbb
push
jbe
jmp
mov
test
inc
sub
testb
cmp
lret
cld
sub
lea
addr16
pop
mov
iret
mov
popf
sti
xor
or
mov
cmp
cmpsb
das
cmc
sub
out
cltd
xchg
or
mov
jno
outsb
imul
xor
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
lret
mov
jb
cmpsb
mov
push
inc
std
outsl
rcrl
bound
stos
dec
popa
roll
jno
push
rcll
insl
or
and
mov
add
out
dec
jb
cli
lods
jnp
outsb
xor
dec
pop
addl
mov
sub
sar
out
imulb
movlps
push
jle
nop
lcall
lcall
in
lret
jne
cmpl
jecxz
setbe
xchg
cwtl
aam
cmpl
mov
sub
mov
movsl
in
and
arpl
jne
mov
fucomi
pop
popa
fidivrl
aaa
jb
or
mov
inc
fisttpll
subb
mov
jmp
cmp
fdivr
and
push
lods
adc
sbb
ds
or
inc
sbb
jp
adc
inc
loope
pop
inc
or
loope
inc
push
inc
sbb
and
repz
and
xchg
inc
jbe
pop
fs
mov
jo
mov
sub
cmpsl
dec
jg
xchg
dec
or
jno
inc
fistps
clc
mov
jge
in
jo
arpl
adc
insb
mov
cld
stos
incb
jne
sbb
sub
mov
mov
mov
push
mov
dec
popa
pop
dec
xchg
xchg
je
data16
fwait
xchg
xchg
cmp
sub
add
sub
lock
aad
repz
add
push
jmp
or
adc
cmp
rclb
inc
fcomps
aam
mov
jo
adc
pushf
hlt
loopne
out
or
fisubrs
icebp
js
imul
aaa
ja
test
aad
push
pop
xchg
int
loope
cltd
test
xor
sub
dec
icebp
cmp
loopne
xchg
testb
and
adc
xchg
push
push
bound
dec
pushf
push
bound
cmp
in
add
inc
push
push
mul
inc
ret
push
jle,pt
pop
inc
and
and
cmp
out
inc
jle
jge
sti
mov
test
mov
add
or
repnz
or
fdiv
add
mov
sub
pop
cmp
insl
push
imul
mov
inc
fs
and
and
lcall
icebp
add
xchg
inc
ret
or
loope
push
sbb
cld
cld
ds
push
loope
xchg
cli
aaa
jmp
imul
xor
into
xchg
nopl
or
outsl
push
fcomps
cmp
add
into
es
mov
shll
and
pop
cmpsb
lret
stos
scas
push
and
fnstenv
ljmp
outsb
mov
aad
sbb
inc
mov
lea
cmp
pop
jl
es
jae
test
cmp
mov
icebp
dec
dec
popf
sbb
and
fistpll
sub
sbb
ds
ja
fistl
das
mov
enter
push
dec
sbb
xchg
fwait
xor
lret
loop
mov
and
or
mov
mov
lock
dec
inc
cwtl
test
lcall
lcall
lahf
push
popf
xchg
ret
or
lret
imul
cli
fs
add
pop
je
dec
mov
test
stos
clc
dec
cwtl
test
in
mov
cltd
or
or
xor
insl
pop
cmovns
or
jns
cltd
out
iret
push
lock
test
add
lret
lret
out
loope
mov
mov
pusha
mov
leave
mov
fucomp
mov
push
mov
lret
mov
fsubrs
cmp
jmp
stos
loope
out
aam
pop
add
enter
push
mov
pop
js
and
je
sbb
and
dec
lret
pushf
es
sbb
jle
inc
jb
and
dec
add
pop
rolb
test
and
adc
mov
pop
test
mov
dec
add
lods
enter
add
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
dec
xchg
stos
push
adc
aaa
cli
adc
adc
in
sub
lret
scas
push
andb
push
rclb
sbb
lcall
xorl
and
fcmovnu
scas
popa
mov
hlt
popf
nop
out
sub
push
mov
das
ror
or
das
lret
pop
xchg
notb
mov
pavgw
aaa
fcoml
jle
fcomip
std
mov
add
push
js
add
in
xchg
out
loopne
scas
adc
sub
scas
sbb
lret
out
push
test
into
push
data16
test
push
inc
test
popl
push
hlt
mov
or
adc
push
and
mov
sub
jnp
lds
lds
xor
clc
add
push
jg
rcll
pop
sub
out
push
je
cmpsl
cmp
or
jg
jge
dec
pop
pop
mov
sahf
push
sbb
jge
in
push
mov
shrl
scas
or
enter
pushf
fistps
xchg
push
xor
inc
dec
into
in
aad
shrl
pop
jne
dec
or
stos
enter
dec
mov
lret
xchg
jle
or
and
or
fstps
pusha
repz
aas
aam
lret
fcomi
adcl
sbb
repnz
pop
mov
and
mov
and
inc
push
daa
ja
pusha
xor
inc
rcl
imul
out
mov
int3
repnz
push
arpl
loope
adc
int
push
fwait
repz
push
mov
in
cmpsb
inc
mov
xchg
lahf
dec
xor
and
popa
add
xchg
inc
js
mov
cmpsl
lcall
dec
loop
jg
dec
pushf
or
mov
pop
test
repnz
les
cmc
cld
aas
and
fsubl
enter
movsb
testl
mov
push
inc
and
ljmp
ret
sbb
popa
push
adc
pop
mov
cmp
ds
ret
subl
popf
repnz
or
inc
fmull
fisttpl
sarl
xchg
stc
mov
mov
and
popl
cs
mov
mov
sub
dec
mov
lret
fnstsw
push
hlt
test
enter
inc
inc
xchg
in
mov
sbb
push
adc
xor
mov
mov
mov
dec
test
lods
jle
adc
repz
aaa
ljmp
aas
fwait
pop
rolb
xchg
lret
fldln2
mov
xchg
addr16
or
fucomp
dec
je
xor
cmpsb
popa
dec
jbe
mov
lds
ljmp
pop
mov
xor
sub
fnstsw
xor
pushf
std
mov
jge
lahf
inc
mov
xor
lahf
xchg
dec
dec
pop
fmuls
push
ljmp
cmp
mov
jns
mov
fiaddl
cltd
lcall
data16
sahf
test
push
inc
orl
rcll
repnz
fdivl
bound
inc
movsb
pop
jmp
shll
jl
pushf
aad
sti
adc
cli
clc
jmp
loop
lea
pop
cmpsb
adc
cmp
stc
inc
mov
pop
sbb
pop
stos
sub
mov
std
push
or
nop
and
inc
insb
pop
mov
ja
jmp
stc
cmpsl
ljmp
lods
inc
outsb
shlb
jg
lahf
rcll
xor
mov
xchg
shll
mov
lcall
dec
and
sbb
push
pushf
imul
clc
loop
and
data16
test
out
inc
rolb
push
je
aad
sub
mov
jbe
mov
cli
mov
jb
dec
ja
orl
in
ret
dec
or
rcll
fcomps
je
fwait
test
cli
rorl
lds
gs
pop
inc
push
test
mov
jbe
jl
mov
sbb
push
dec
mov
adc
adc
inc
mov
punpckhdq
jne
jmp
dec
loopne
ret
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
popl
lds
aaa
cli
adc
out
xchg
inc
add
sahf
inc
sbbb
dec
shl
mov
mov
cwtl
xchg
xchg
in
adc
ja
mov
lcall
and
xchg
ss
xchg
xor
inc
int3
in
lahf
lahf
push
push
pushl
data16
leave
add
pop
pop
sub
inc
in
jg
lret
testl
shll
cwtl
popf
fsubrs
mov
jle
hlt
nop
pop
dec
jbe
divb
sub
or
cmc
adc
lahf
icebp
xchg
out
pushf
mov
fs
aad
and
cld
xchg
aaa
push
test
push
ja
cmp
lret
mov
fstpt
cmp
in
push
xor
gs
scas
or
push
pop
popf
sbb
mov
xchg
nop
push
add
leave
dec
xchg
mov
loope
inc
dec
dec
xor
scas
mov
ljmp
xor
push
jae
push
jne
outsl
add
test
cltd
into
daa
xchg
cmp
inc
and
test
dec
test
push
mov
or
out
mov
push
xor
xor
aaa
xchg
sbbl
pop
cltd
testb
mov
lds
movsb
test
push
outsb
inc
sti
clc
add
call
xor
xchg
pop
dec
shl
and
jge
lret
dec
xchg
cwtl
es
mov
hlt
idivl
shrl
lock
out
sar
jp
or
daa
fisttpl
shl
pop
xor
iret
mov
mov
mov
xor
push
mov
push
out
jge
dec
xor
orl
pop
and
or
ret
jbe
out
scas
ljmp
in
inc
insb
cltd
cli
cli
mov
dec
mov
cwtl
dec
mov
and
fs
xor
mov
pop
and
pop
mov
pop
push
insb
shr
and
adc
mov
push
inc
xor
scas
imul
add
adc
stos
repnz
sub
mov
cmpl
cld
icebp
inc
push
cmpsb
push
nop
pop
and
pop
mov
lock
out
int
int
stos
scas
sbb
into
cs
test
cmp
mov
lcall
fstpl
sarb
mov
jge
cltd
lods
enter
ja
pop
loope
test
mov
rol
mov
pop
mov
sahf
adc
loope
adc
pusha
adc
add
dec
push
mov
pop
loopne
sbb
mov
test
lahf
iret
jb
adc
test
inc
push
add
mov
push
nop
popf
jecxz
xor
adcb
rcrb
jnp
push
jbe
xchg
addr16
ret
adc
nop
loopne
push
mov
in
sub
dec
push
sbb
repz
orl
dec
cmp
mov
jae
rcl
push
ljmp
jnp
push
fs
imul
lods
mov
adc
jecxz
pop
scas
mov
stc
lret
fists
ljmp
in
fs
and
test
sarb
mov
cmp
test
das
mov
or
jno
mov
jmp
push
dec
dec
cmp
adc
mov
push
mov
aaa
mov
push
aad
movb
adc
testb
mov
add
add
dec
cmc
and
mov
xor
sub
and
mov
push
xchg
cmp
xor
mov
adc
and
cli
push
movsl
sbb
enter
or
push
movsl
imul
loope
insb
or
in
sbb
sub
bound
lret
cmp
mov
ret
sub
adc
cs
dec
fimuls
and
xchg
xchg
push
xor
push
sub
push
xor
shl
xchg
cmp
xor
sbb
bound
push
xor
rol
rorl
dec
hlt
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
sub
adc
cli
adc
add
cmp
cmp
sbb
lret
xor
mov
cmp
mov
pushf
sub
pop
sub
ret
pushf
jnp
je
sbb
pop
mov
pop
ds
cld
push
inc
icebp
push
sub
push
enter
xchg
scas
xchg
in
stos
test
fucom
in
push
jg
push
repnz
clc
mov
insb
mov
cmpsl
xor
cmp
ljmp
xchg
xlat
pusha
mov
add
xchg
shrl
pop
daa
ret
scas
mov
je
mov
in
cltd
inc
popa
jns
mov
std
mov
cltd
fwait
dec
data16
or
cli
cs
adc
scas
xchg
les
jns
jb
push
xchg
add
add
arpl
xor
cltd
bound
add
kmovd
mov
into
loope
xchg
mov
jl
pop
mov
ss
mov
std
push
xor
mov
add
scas
insb
adc
mov
mov
cmc
leave
pop
dec
sbb
xchg
inc
ja
cmpsb
loop
stos
imul
add
loopne
movsl
cmp
xchg
movsl
xor
cltd
in
loope
cs
cs
fistpl
jb
jns
orl
aad
loopne
and
std
pop
push
dec
and
jmp
sub
jb
cltd
inc
cwtl
jae
inc
mov
jb,pn
hlt
fstpt
mov
cmc
outsl
dec
and
fcmovb
pop
push
aas
xor
adc
or
into
inc
jle
data16
cmpsb
imul
mov
loop
cmpsl
repz
insb
je
push
in
cwtl
rcll
in
pop
sub
repnz
jbe
int
test
sbb
mov
mov
xlat
jmp
mov
cmp
sub
jecxz
push
int3
or
fsts
sbb
inc
jbe
mov
cmp
or
cwtl
call
or
dec
dec
push
testl
xchg
cmp
pop
lds
sarl
ret
in
jl
nop
mov
sbbb
push
pop
stos
push
fistl
push
ret
sub
and
mov
push
out
ss
push
lds
pop
cmc
xchg
mov
and
jae
dec
cmp
mov
xchg
shrb
pmaxub
out
add
pop
mov
inc
aad
push
nop
mov
pushf
ja
push
adc
pop
insb
out
jg
mov
pop
jecxz
mov
jle
lcall
loop
dec
inc
dec
ss
cmp
push
sbb
jecxz
test
pop
inc
and
or
testb
std
shrb
mov
and
push
pinsrw
push
mov
pop
aad
scas
add
pop
out
mov
mov
out
rcrl
jnp
std
inc
pop
mov
and
and
pusha
test
push
add
fistpll
mov
lods
outsb
xlat
pop
lds
ds
sbb
popf
cmpsb
jp
pushf
movsl
into
xor
fcoml
repz
in
popa
jnp
ss
dec
mov
xor
mov
out
and
stos
cwtl
adcb
pop
cmp
mov
mov
mov
pop
jmp
iret
pop
ds
mov
sub
lret
add
pop
dec
jp
in
adc
and
out
xor
fwait
jns
leave
jp
cmp
repnz
xchg
fcmovnu
mov
or
xchg
mov
xchg
push
jl
and
out
hlt
and
aad
pop
and
ljmp
xchg
inc
neg
push
jmp
xchg
fisttpll
add
cmp
stos
rcpps
or
cltd
test
les
inc
adc
loopne
jae
icebp
testl
pushf
pop
popf
mov
cmp
adc
sbb
dec
in
repnz
jb
in
lock
test
int
out
fisttpl
popa
and
pop
sahf
aas
addl
scas
cli
or
clc
jo
inc
lds
push
int
sbb
mov
pop
andl
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
push
jne
push
xor
adc
cli
adc
lret
and
push
in
inc
mov
mov
cmp
lahf
repz
ret
lret
cltd
ja
ficompl
pop
xor
and
pop
shrb
loopne
dec
xor
mov
xlat
pop
popf
xchg
fsubrs
or
xlat
loop
xchg
and
movsl
lahf
cld
push
pop
adc
jecxz
out
dec
sahf
test
in
and
daa
mov
pushf
xor
aad
pop
jp
jle
mov
int
mov
pop
std
out
dec
lahf
or
rcrb
arpl
mov
mov
enter
test
xor
dec
push
sbb
lret
cli
jecxz
rcrb
mov
fisubs
cmp
inc
xor
leave
pop
je
sbb
cld
jo
sahf
sbb
inc
flds
add
aam
and
hlt
mulb
inc
pop
dec
or
or
les
fcoml
pop
jns
fnstenv
mov
xchg
inc
add
push
xorl
jle
adc
xchg
push
pop
mov
inc
mov
mov
int
ret
insl
nop
ja
out
or
mov
adc
cmp
out
out
jbe
or
pop
xchg
xchg
loop
imul
xor
xchg
mov
sti
repz
fdivrs
loope
in
or
adc
test
aad
adc
mov
mov
test
mov
sbb
cmp
insl
rol
add
loop
call
mov
cmp
hlt
outsl
in
arpl
les
mov
inc
sbb
xchg
pop
vpshad
fmull
ret
jmp
jecxz
sbb
or
xor
imul
testb
jnp
xchg
cli
inc
dec
pop
push
fldt
sub
hlt
dec
faddl
mov
mov
sub
xchg
cltd
inc
popf
add
jecxz
cmp
test
cmp
push
ljmp
cmpsb
pop
sub
out
rcr
lea
mov
cmpsb
add
scas
sub
jecxz
jge
stos
inc
mov
mov
pop
stos
stos
fnstsw
push
jno
add
in
outsl
xor
fbstp
inc
xchg
lret
cmp
inc
pop
lods
lods
or
xchg
in
xchg
mov
jo
mov
insb
xor
pop
mov
xchg
pop
test
in
dec
mov
sbb
xchg
ret
loopne
in
stc
test
cmp
je
loop
js
ret
loop
cld
xchg
lds
inc
xlat
mov
push
jne
lock
cld
js
enter
mov
sub
inc
sub
mov
test
adc
push
cmc
insb
insb
adc
mov
mov
dec
dec
aas
and
xchg
push
fstl
sub
cld
mov
orl
inc
jnp
out
lcall
out
movsb
pusha
mov
cmc
imul
sarb
movups
push
imul
test
and
adc
imul
mov
cmpsb
loope
mov
inc
inc
add
stos
fcmovb
add
sbb
imul
or
jb
mov
dec
sbb
das
movsl
sbb
scas
cwtl
les
pop
arpl
jbe
jmp
mov
jnp
in
xchg
mov
xor
out
sti
imul
int3
jae
ja
and
cld
mul
xlat
push
idivb
stos
inc
cmp
mov
sbb
icebp
orl
or
ja
mov
xor
inc
inc
mov
lea
test
pop
mov
cmp
fcomps
icebp
mov
sbb
fwait
jge
in
sub
daa
push
add
lock
pop
dec
int
clc
cmpsl
mov
sbb
in
movb
pop
lock
sub
aaa
in
push
test
jae
mov
xor
mov
call
push
pop
pop
test
inc
adc
add
loopne
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
in
fwait
pop
adc
aaa
cli
adc
into
repz
mov
jnp
or
mov
fadds
jno
inc
dec
pop
pop
stc
cs
cmp
mov
inc
adc
adc
test
jo
in
xchg
push
das
popa
mov
leave
in
subb
scas
into
loope
ljmp
pop
dec
mov
inc
cmp
popf
dec
out
sbbl
shl
andl
mov
adc
push
and
mov
je
jbe
scas
incl
cmpsl
fcompl
mov
xor
sub
dec
sub
jmp
mov
push
mov
cld
adc
gs
out
lea
cmp
pop
and
jae
cmp
pop
or
or
data16
fidivl
xchg
insl
mov
cwtl
into
mov
mov
loope
adc
adc
mov
les
call
dec
or
scas
jmp
aaa
pop
mov
lods
or
add
xor
inc
pop
arpl
and
sbb
stc
mov
nop
cwtl
cld
std
cmp
sbb
cld
push
sub
sub
xchg
nop
movsb
sub
test
sub
icebp
pusha
mov
fcmovnu
cmp
sti
push
lcall
les
rorl
or
lret
hlt
fwait
loop
jns
push
jp
inc
inc
and
jp
sub
jae
sub
cmpsb
mov
jp
out
jp
mov
lea
dec
das
ret
les
add
bts
shl
jg
mov
pop
stos
sub
leave
addl
lret
sbb
xchg
pusha
call
mov
pop
xlat
or
mov
sub
aaa
jle
add
xchg
in
ljmp
cmp
mov
or
push
enter
lret
int3
rolb
shlb
lock
and
in
jo
pop
adc
kmovw
push
pusha
push
sbb
xchg
cmc
cmp
add
or
loopne
push
test
sbb
ja
or
pop
push
sbb
gs
add
imul
mov
add
or
mov
add
xchg
pusha
add
mov
addr16
test
dec
mov
ss
mov
xorl
in
pop
adc
sub
inc
out
mov
push
dec
loopne
shlb
lgs
pop
push
test
into
js
cmpsl
mov
lock
push
fdivrl
fldcw
in
adc
pop
adc
mov
xor
pop
xchg
or
mov
jmp
rcl
pop
int3
js
inc
arpl
push
mov
je
daa
ja
adc
add
bnd
xor
pop
leave
jmp
lods
shl
sub
push
mov
inc
or
jecxz
xchg
xchg
jo
movsl
sbb
ja
mov
push
sub
push
inc
pusha
movsl
repnz
cltd
fcoml
or
rcrb
mov
inc
dec
imull
pop
ret
test
xor
jmp
jno
inc
movsl
int3
sbb
sbbb
inc
pushw
sbb
into
mov
fsubl
imul
mov
fwait
add
jmp
adc
ret
mov
and
jge
push
mov
lods
mov
lods
xlat
fisubs
push
xchg
jl
aaa
xchg
les
pop
mov
lds
lahf
scas
test
push
mov
xlat
movl
clc
fsubl
inc
add
rcrl
xchg
add
mov
add
addr16
pop
pop
mov
xchg
addb
mov
pop
jo
xchg
or
lea
cli
loopne
sub
lcall
mov
adc
dec
mov
shlb
jmp
add
sbb
mov
pop
push
xor
mov
aaa
cli
adc
push
jecxz
add
sahf
sbbb
rcl
mov
int
xor
notl
jg
xchg
mov
pop
inc
push
mov
je
adc
cmpsb
jnp
push
cwtl
test
outsb
out
jmp
rcrb
pop
cmpsb
das
jecxz
push
sub
mov
mov
lcall
cmpsl
ret
lret
jge
inc
inc
repnz
scas
mov
je
rol
fadd
mov
xor
mov
test
sti
adc
add
aaa
adc
iret
addr16
mov
sti
leave
push
iret
jae
mov
mov
in
pop
mov
push
adc
add
cmc
int
bound
pop
xchg
loopne
push
into
lods
mov
cmp
mov
inc
fsubl
clc
cwtl
push
xchg
flds
stos
lcall
xor
test
push
pop
addr16
cmpsb
insl
xor
mov
inc
push
or
decl
sbb
aas
jmp
push
repz
call
mov
mov
pusha
mov
add
aam
cmpsl
xbegin
sarl
mov
and
cmpsl
pop
cmp
jnp
dec
stos
sbb
call
mov
cmpsl
mov
dec
add
dec
mov
ret
mov
into
je
std
sub
mov
roll
addb
push
xor
ficompl
lret
inc
or
dec
cltd
mov
mov
sub
mov
mov
inc
xchg
xchg
loope
inc
lods
push
inc
stc
rol
inc
je
jp
sbb
and
push
mov
cltd
dec
jne
inc
add
or
mov
and
or
dec
push
aaa
rolb
jp
push
scas
mov
insb
dec
sub
setb
adc
notl
cli
shll
adc
or
outsb
movsl
je
icebp
cld
dec
pop
mov
jg
xchg
cmp
cli
test
cmp
jp
int3
and
and
add
jmp
jnp
bound
or
sbb
mov
xor
mov
push
pop
leave
out
add
lods
mov
test
jo
shlb
push
sahf
sahf
ficoml
mov
jl
jo
mov
enter
and
out
adc
cld
jmp
sub
and
dec
mov
cmp
cmp
lcall
or
mov
in
cltd
sub
aas
push
aaa
xor
into
xchg
ljmp
mov
stos
lcall
and
pop
imul
mov
out
inc
mov
or
ljmp
push
lea
fs
lock
gs
jmp
repz
push
daa
out
and
sub
fildl
mov
xchg
mov
lea
sub
psubsb
lcall
and
jbe
xchg
push
or
jne
jmp
xchg
not
mov
push
adc
mov
movq
fsubs
fisttps
push
lea
mov
into
out
adc
pushf
aad
in
fnsave
inc
sahf
das
and
scas
sbb
clc
add
insl
in
std
adc
sub
sub
mov
mov
xor
imul
fs
cs
daa
fmuls
mov
or
sub
cmp
aam
outsl
jnp
dec
clc
push
movsl
cwtl
mov
sbb
fiadds
mov
mov
sub
std
dec
into
mov
into
pusha
sbb
stos
push
push
pop
inc
mov
popa
leave
sub
inc
sarl
insl
push
add
sub
cmp
mov
pop
pop
add
add
mov
sbb
push
inc
aas
je
sahf
cld
enter
pop
push
std
std
sti
jp
mov
add
jmp
mov
sbb
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
mov
pop
adc
aaa
cli
adc
mov
mov
mov
xchg
dec
cmp
xchg
inc
enter
outsl
dec
cld
xor
cmpsb
push
arpl
fsubrp
jns
ret
cmp
sbb
das
cmovae
out
insb
xchg
scas
sti
je
lret
push
ror
xchg
andb
aaa
push
fsubs
loop
test
cmp
rcrl
and
pop
cld
mov
jge
shll
stc
inc
pop
and
xchg
dec
stos
mov
push
in
cmp
inc
ds
or
push
fcomi
mov
fildll
mov
mov
jbe
jb
lods
fsubs
cwtl
int
sbb
or
sbb
mov
in
test
outsb
subl
cmp
xchg
dec
mov
insb
aaa
inc
jbe
cld
movsl
add
fucomp
clc
in
sti
stos
jae
push
xlat
aad
outsl
outsb
xchg
jecxz
push
and
xchg
adc
xchg
xchg
xor
test
cwtl
adc
sub
ret
in
mov
pop
lock
in
andl
inc
sbb
jle
rcrl
and
fimull
insl
mov
not
ret
cmc
dec
lds
data16
push
mov
push
sbb
movsl
xor
pushf
mov
xor
lea
movsl
push
sti
or
mov
es
lret
fsubrs
mov
outsb
pop
lds
arpl
lahf
push
adc
jecxz
pop
push
and
fdivrs
mov
in
jns
adc
sbb
xor
sub
lahf
loop
clc
pop
or
mov
popf
arpl
jae
or
mov
jno
sub
xorb
sub
sbb
dec
mov
sub
dec
mov
cmpsb
pop
mov
mov
mov
inc
dec
sbb
imull
fs
jb
in
mov
unpcklps
adc
leave
repnz
stc
in
out
add
mov
into
iret
pop
mov
push
sub
inc
out
mov
bound
xlat
insl
sbb
fnclex
rcrb
push
jp
push
mov
and
movsb
enter
mov
daa
movsb
sbb
pop
xchg
push
dec
adc
sub
movsl
stos
lret
insl
je
adc
inc
xchg
call
jbe
jb
cmpsb
cmp
mov
out
xor
mov
movaps
push
cltd
inc
adc
pusha
outsl
mov
cmc
jp
push
sar
or
pop
in
stc
loopne
jne
add
adc
pop
xchg
mov
loope
and
sub
icebp
in
stc
adc
push
dec
xor
cmpsb
loopne
arpl
xor
mov
test
popa
movsb
pop
stc
rcrb
lods
and
push
mov
dec
inc
inc
std
sarl
and
je
sbb
jb
push
jo
scas
xchg
out
inc
aad
xchg
shld
jo
push
pop
mov
jg
ret
sbb
dec
dec
incb
lret
push
mov
mov
ss
push
pop
push
sub
push
sahf
mull
inc
and
iret
xlat
bound
aam
and
loopne
hlt
int
adc
jmp
movsb
push
mov
push
jb
add
adc
jo
inc
stc
sub
into
in
rcr
add
insl
loopne
fs
mov
call
push
subb
xchg
and
fdivrl
fimull
stc
cwtl
xor
sbb
jo
add
addr16
pop
xchg
sarl
push
lods
fs
push
pop
lock
mul
cmp
fs
xchg
inc
jl
mov
cmp
pop
nop
xor
mov
pushf
bswap
aad
jl
fimuls
nop
int
test
iret
mov
jns
fdivrs
sub
dec
jno
xchg
mov
frstor
outsl
xchg
outsb
jb
xlat
mov
pop
xchg
out
mov
rolb
ja
aas
das
pop
add
push
inc
mov
mov
je
xchg
repz
add
pop
ret
loop
bound
icebp
fldl
lcall
inc
int3
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
movsl
dec
xchg
xchg
inc
adc
adc
cmp
sbb
in
or
stos
sbb
adcb
mov
mov
dec
aaa
icebp
mov
jecxz
lock
scas
aaa
jns
add
popa
mov
xor
daa
sub
sbb
jle
outsb
inc
jae
sbb
fidivrs
xchg
push
mov
adc
in
jecxz
movsb
shlb
cli
pop
aas
sub
inc
mov
push
out
lcall
xchg
movsb
and
jl
sbb
fidivrl
inc
test
cmp
xor
bound
inc
test
in
xchg
push
scas
pusha
int3
aam
incl
pop
inc
nop
outsb
adc
dec
lcall
xchg
fsubl
push
jp
push
cmp
ljmp
ljmp
cs
pushf
mov
mov
outsl
std
xor
pop
or
sti
jbe
and
lret
in
sbb
into
testb
stc
mov
mov
adc
xchg
inc
pusha
hlt
xchg
out
fwait
adc
inc
cmp
loopne
out
xchg
adc
pushf
sub
in
adc
movsl
cmpsb
mov
fstpt
push
push
enter
fnstsw
lcall
cld
jp
je
vmaxps
push
xor
dec
jns
mov
cmp
mov
cmp
fwait
pop
es
push
cmp
mov
mov
aam
push
xchg
movsl
stos
fnstcw
mov
mov
add
orl
or
stos
clc
cmp
fsubl
pop
xor
insl
cmc
mov
xor
inc
sbb
inc
aas
sub
rclb
and
push
or
pop
cmp
sub
rorb
cmp
movsl
ja
mov
dec
pop
outsb
cmp
insb
pop
mov
mov
icebp
enter
xchg
imul
push
xlat
xchg
mov
sbb
shrb
adc
lea
js
stos
xchg
push
jmp
push
mulb
scas
cs
aam
dec
jo
xchg
jo
mov
andb
xchg
movsb
test
sub
aas
ja
xlat
decb
mov
mov
xor
xchg
aaa
jns
sbb
adc
and
push
aam
push
lcall
push
lret
and
pop
dec
xchg
add
loopne
xchg
insb
out
iret
movsb
inc
ds
mov
xchg
pop
clc
xor
or
jns
js
aam
jl
sub
in
call
repnz
in
imul
mulb
jb
cmpsb
pop
jb
pop
sub
insl
cmpsb
adc
mov
lcall
stc
push
loope
popa
push
cmpsl
and
mov
pop
leave
dec
divps
jl
xor
rcrl
sbb
bound
into
notb
fmull
inc
scas
sub
les
xor
or
stc
push
adc
sub
sbb
ret
shll
in
adc
mov
fwait
cmc
inc
or
and
and
mov
in
inc
xchg
pop
nop
repz
mov
out
out
mov
inc
xlat
mov
xor
out
jo
mov
xor
dec
jmp
movsl
adc
jb
xor
sub
cmp
movsl
mov
adc
mov
xchg
stc
jmp
mov
push
bound
pop
mov
aas
xor
rcrb
leave
cmp
adc
rclb
and
fistpll
mov
sub
xor
in
or
outsl
mov
mov
push
rcrb
aad
push
fidivrs
mov
cmp
notb
or
add
mov
hlt
cld
xchg
repnz
xor
rclb
aas
mov
mov
push
cwtl
call
jle
xor
roll
inc
sub
jnp
sbb
mov
dec
daa
jno
fcmovu
in
or
testl
dec
lods
push
test
jbe
pop
popa
adc
mov
aaa
andb
popa
dec
movsb
mov
dec
cwtl
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
iret
push
xchg
mov
adc
aaa
cli
adc
call
push
rcrl
lcall
andl
push
push
mov
dec
sbb
bound
sbb
lea
ja
sub
mov
setno
add
jl
shll
inc
into
cmp
dec
xor
dec
dec
arpl
mov
ret
jno
push
in
xchg
je
enter
out
add
sti
and
hlt
rsqrtps
out
add
xchg
jb
and
and
sbb
nop
mov
add
push
nop
pop
cld
lret
jns
push
mov
mov
movsl
aas
dec
call
pop
xchg
cmp
xchg
xor
out
pop
shrl
jb
ret
call
mov
pop
xor
inc
or
jae
jno
push
cmp
mov
jle
lret
jae
aaa
push
fcoml
mul
or
ret
xor
push
pop
cmp
lret
xchg
aas
js
sbb
mov
jae
mov
in
fs
jbe
mov
xchg
jl
jmp
mov
and
call
lods
sti
jo
ret
inc
cmp
sahf
stos
ret
jmp
cmp
xor
popf
imul
je
out
bnd
push
pusha
fdivl
sbb
and
test
jmp
cld
adc
inc
push
stos
popw
pop
mov
gs
out
nop
add
fwait
xchg
push
mov
lea
mov
jp
push
aaa
push
sbb
inc
mov
xchg
hlt
cmp
enter
jns
xchg
add
mov
mov
adc
iret
xchg
or
imul
fadds
aas
pusha
inc
xchg
into
sub
in
ljmp
push
ljmp
in
js
fs
xor
and
inc
dec
cwtl
rorl
mov
pop
sti
ds
filds
jle
in
cmp
xchg
push
mov
jnp
faddl
mov
divps
iret
iret
mov
mov
cmp
je
or
mov
push
sub
shlb
mov
dec
ficoml
outsl
addr16
xor
addr16
mov
fstps
inc
movsb
xor
jle
add
int
shrl
cmp
test
popa
jl
adc
mov
push
pop
shr
and
test
dec
push
sahf
imull
cmpb
fldl2t
xchg
ret
fldcw
cmpl
mov
int3
inc
sub
mov
push
add
outsb
push
imul
xor
movzwl
ret
inc
adc
leave
mov
aad
fbstp
xor
fdivrs
lock
cmp
dec
jo
popa
mov
inc
xchg
arpl
insl
cmc
pop
out
add
sbb
pop
sub
mov
sub
adc
aad
daa
imull
xchg
mov
shll
aam
or
inc
loop
fsubl
xchg
leave
push
ret
stos
ficompl
dec
jmp
sbb
add
arpl
scas
adc
scas
sub
adc
ss
pop
jmp
jecxz
dec
iret
pop
mov
and
mov
sub
mov
mov
or
aam
lea
aas
push
imul
sahf
outsl
mov
imul
mov
sbb
mov
pop
mov
mov
push
xchg
or
cmp
adc
cmovge
dec
jbe
enter
ja
xor
push
imul
bound
lret
daa
pop
into
lock
push
jbe
mov
sahf
inc
and
divl
inc
and
add
add
repz
lods
sbb
rcrl
cmp
daa
inc
jle
bound
repnz
fs
sub
pop
and
leave
sbb
bswap
ja
push
push
clc
ffree
mov
sbb
cmp
outsl
xchg
inc
pushl
mov
push
add
loopne
mov
movsl
fisubrs
mov
imul
mov
pop
inc
jg
cmpsb
cmp
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
mov
aaa
cli
adc
cmp
xchg
xchg
arpl
or
repnz
imul
sahf
xor
inc
mov
cs
inc
ret
sti
lret
jb
or
imul
nop
shl
pop
adc
sbb
push
xchg
iret
nop
test
cmp
fiadds
push
xchg
subb
lcall
push
xor
push
out
cmp
mov
and
leave
mov
test
pop
lea
test
sub
ds
inc
ja
adc
fldl
hlt
lock
aas
xchg
fisttpl
adc
pop
xor
cmpsl
mov
xchg
pop
or
xchg
xchg
cmpsb
aaa
push
jge
sbb
jns
mov
inc
call
add
xlat
mov
mov
sti
inc
shll
xchg
mov
lcall
jecxz
aad
inc
xchg
xor
popf
int
jno
js
or
xchg
push
bound
in
jge
cmp
push
loopne
and
cs
push
js
adc
out
sbb
adc
inc
stos
adc
inc
out
out
dec
std
fcmove
mov
mov
lret
push
stos
scas
icebp
jp
cwtl
sbb
xchg
test
mov
jo
ds
rolb
fidivrl
repnz
inc
shrb
std
out
enter
mov
pop
push
sbb
cmp
mov
mov
out
mov
and
arpl
dec
jno
inc
shl
xor
lcall
jbe
xor
loopne
jo
fidivs
into
mov
lret
inc
jbe
push
push
aam
ds
xor
sahf
jg
xchg
lea
mov
mov
dec
clc
pop
lea
idiv
dec
lret
ljmp
mov
fisttpl
out
push
lret
setg
fs
jmp
mov
iret
dec
lcall
stos
pop
pop
lds
jns
test
pop
inc
mov
stos
imul
jl
das
imul
xor
es
mov
cltd
sar
ret
sti
lea
rcrb
push
fcom
or
fisttpl
or
pushl
mov
test
movsl
mov
mov
pusha
and
inc
sub
adc
imull
jbe
icebp
cmpsl
add
stc
inc
xchg
mov
imul
sbb
push
ljmp
fucompp
push
int
lea
or
test
shr
push
or
adc
push
xor
es
push
outsl
inc
sub
ret
add
call
loope
stos
push
stos
in
xchg
ljmp
xor
inc
dec
push
std
daa
sbb
idivb
and
sub
icebp
mov
add
daa
adc
push
push
sbb
outsl
ret
pop
arpl
sti
icebp
adc
out
mov
mov
imull
or
fists
push
xor
sub
sahf
sbb
pop
jb
sarb
and
pop
xor
fstpt
mov
std
add
xchg
mov
sbb
mov
clc
jae
test
sub
sub
repz
out
in
cltd
out
scas
mov
mov
or
inc
or
mov
inc
cmp
mov
dec
pop
dec
lds
repnz
cmp
add
and
xor
arpl
dec
pushf
push
mov
ljmp
rorl
pop
imul
fdiv
push
stos
sbbb
inc
faddp
lock
push
dec
cmp
aad
call
lret
rcrl
jle
pop
inc
inc
mov
mov
outsl
mov
push
mov
ret
shl
fsubrl
mov
xor
jg
xchg
push
jmp
jne
call
pusha
jb
clc
icebp
movsb
sub
mov
mov
pop
xchg
xchg
movsb
inc
daa
les
mov
or
jbe
sahf
and
aad
cs
icebp
out
lret
and
mov
push
sbb
sti
push
fwait
pop
ficoms
fs
pop
or
fdivr
mov
add
and
stc
les
in
insl
nop
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
jnp
jmp
adc
cli
adc
mov
adc
push
push
sbb
mov
inc
and
dec
xor
aaa
lret
jns
les
sub
push
or
push
jo
push
scas
bound
push
movsl
dec
jmp
mov
cmp
cmp
dec
push
dec
push
push
add
lods
mov
mov
aam
arpl
ret
sub
add
jnp
idivl
adc
test
pop
xor
add
lea
push
mov
adc
enter
mov
or
cmp
dec
pop
in
cmc
jns
jae
add
cmpsb
test
mov
mov
sbb
into
rcl
push
xchg
jbe
movsb
lahf
dec
and
push
push
inc
push
pop
dec
cs
mov
add
js
xchg
lea
nop
mov
addl
iret
adc
sub
lcall
cmp
dec
xchg
fcmovnb
loope
dec
jl
and
in
aam
pop
aad
daa
fldl
push
push
cld
adc
mov
mov
mov
daa
insl
cmp
jmp
loopne
jle
ficoml
mov
sub
popf
push
xor
mov
mov
sub
cmp
imul
out
pop
jb
pop
xlat
jb
xchg
dec
cwtl
and
cmc
xor
pop
scas
lock
out
in
mov
movsb
pop
lahf
mov
adc
cltd
pop
or
mov
clc
mov
push
adc
or
inc
fcomp
jge
or
add
xor
push
xchg
shl
pushl
ret
fldenv
fwait
and
out
cmp
cmpsl
jecxz
mov
test
push
sti
xchg
sbb
mov
cs
push
cmp
pop
std
outsb
add
cmpl
fs
dec
in
pop
bnd
bound
stos
pop
rcrb
sbb
into
pop
out
xor
into
cvtps2pd
sub
lods
mov
jbe
xchg
clc
jbe
scas
ret
add
cmc
push
movsb
sub
rolb
scas
lahf
lahf
and
sbb
cltd
loope
adc
pop
xchg
add
sar
insl
sub
push
rcr
xlat
jo
out
sub
scas
pop
mov
or
push
std
outsl
cld
mov
add
data16
xchg
xchg
cs
enter
movsb
xchg
or
jl
outsl
xor
popf
imulb
and
repz
je
pop
xchg
stos
xchg
mov
pop
sbb
and
jl
xchg
xchg
je
cs
icebp
lret
sbb
jmp
mov
cmpl
or
push
push
icebp
lret
mov
mov
sbb
mov
mov
push
xor
mov
push
fildl
es
mov
shl
mov
movsb
out
and
test
inc
in
rorl
cmp
imul
nop
dec
or
lods
jae
jnp
sub
pushf
in
mov
loopne
bnd
xlat
popa
push
adc
cmp
push
push
negb
push
aam
or
mov
fistpl
lret
inc
sti
les
lds
xchg
jp
jl
mov
sub
adc
jmp
das
mov
jl
rorl
mov
sub
and
push
gs
fxch
outsb
and
sti
imul
je
pop
adc
shlb
pop
adc
outsl
mov
and
fs
clc
sarl
cmpsl
mov
and
and
cmp
js
xchg
jecxz
shrb
cmp
pusha
push
or
addr16
je
out
xor
test
addr16
cmp
data16
fstps
xchg
jns
data16
cltd
and
cli
stc
xor
dec
xchg
mov
mov
cld
fs
mov
and
dec
or
imul
mov
jmp
push
cmp
inc
sti
pop
in
jmp
xchg
mov
jp
outsb
xchg
mov
lea
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
das
cmp
dec
repz
aaa
cli
adc
add
xlat
fcmovnb
and
inc
jp
ss
pop
pop
add
adc
aaa
mov
mov
add
pop
rol
add
pop
mov
inc
push
pop
or
cld
mov
push
pop
outsb
jmp
xor
push
mov
sbb
inc
xchg
imul
js
jno
mov
dec
sarl
in
aas
dec
pop
mov
out
sbb
xchg
and
fsubrs
inc
pop
or
xlat
loope
in
icebp
adc
mov
cmp
fucom
push
sbb
shll
dec
jecxz
dec
add
nop
cli
mov
mov
jno
paddsb
rcll
dec
mov
aaa
iret
popa
shll
mov
xor
leave
in
test
xchg
dec
sub
and
aaa
addr16
mov
stos
call
mov
call
lcall
mov
add
loope
add
pop
into
ror
jg
mov
xchg
es
adc
jmp
repz
imul
mov
mov
adc
jae
imul
adc
sub
or
mov
roll
add
cmpsl
fldl
sbb
mov
adc
in
dec
mov
js
sbb
pushf
ret
lods
push
lods
stos
push
mov
sbb
dec
add
adc
fstpl
sub
pop
lcall
std
mov
push
subl
test
fwait
mov
rorl
pop
mov
fmull
sbb
mov
dec
push
pusha
dec
jl
sbb
dec
int
add
in
cmp
sub
and
arpl
movsl
pop
outsb
mov
jbe
ds
push
inc
xchg
test
dec
sbb
icebp
sbb
mov
ret
pop
into
cmp
and
cmpsb
int3
jno
out
jns
xor
lods
jle
fstl
add
pusha
mov
sub
push
sub
fcoms
sti
ljmp
cmp
xchg
inc
cmpsb
jle
je,pn
cmp
lcall
mov
jb
pusha
loop
sbb
out
fnstcw
jae
mov
cld
jae
add
sti
or
dec
jo
in
dec
test
push
clc
xchg
cmpsl
push
sub
das
iret
imul
int3
clc
test
les
ret
xchg
cltd
bound
mov
inc
adc
repnz
and
mov
adc
rorl
lock
add
popa
out
cmp
xchg
push
jnp
ljmp
lret
subl
add
dec
or
pop
cli
push
les
add
add
dec
push
jle
sbb
hlt
adc
mov
cli
data16
lods
cld
xor
add
cli
out
and
push
je
lock
ret
cmp
inc
cld
xor
push
jmp
bound
or
loope
fucomip
jo
jmp
mov
movsl
jge
or
jge
popf
dec
mov
pop
adc
mov
xchg
push
or
jb
jp
jg
sub
sub
shr
xor
dec
mov
adc
mov
in
mov
xlat
mov
adc
leave
jmp
push
adc
jae
sbb
push
jb
mov
inc
insb
fiaddl
in
xchg
inc
adc
jle
jecxz
pop
cmp
push
imul
dec
adc
pop
sbb
or
add
inc
aad
inc
daa
cmp
cmp
or
addr16
lret
and
xchg
pop
jns
jo
and
xchg
pop
cmpsb
nop
ljmp
cmp
adc
sub
insb
inc
outsl
out
xor
pop
inc
cmpsb
rorb
sbb
sbb
mov
testl
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
xchg
insl
lds
adc
aaa
cli
adc
fmull
jecxz
loope
adc
pop
xchg
sahf
dec
rolb
jbe
pusha
hlt
insb
negl
push
dec
rcr
dec
ds
and
sarl
mov
js
add
test
popa
shll
aas
leave
aaa
pushf
mov
int
push
sbb
aas
cmp
xor
and
outsl
cmp
nop
inc
pop
add
mov
sub
sub
lret
xor
sbb
sbb
or
jns
adc
loope
stos
rorb
sub
cli
mov
sub
pop
es
sahf
mov
pop
mov
and
mov
adc
and
pushf
xchg
adc
addr16
in
inc
fisubl
mov
sbb
cmc
fidivs
xor
add
fsubrl
push
xchg
cmp
ss
inc
not
and
push
mov
ret
cmc
lea
and
mov
cmp
xor
mull
add
je
inc
insl
mov
push
adc
imul
in
lret
inc
inc
hlt
xor
add
mov
icebp
daa
test
call
push
addr16
push
mov
jns
push
fcomps
test
imul
adc
xor
add
addr16
test
or
fs
xor
in
dec
dec
ljmp
inc
fstl
jecxz
fwait
shll
fs
rcll
cmpsb
in
mov
nop
lahf
sbb
fstpl
or
push
punpckhdq
imul
out
cmpsl
adc
mov
daa
push
jo
dec
jp
test
jg
mov
popa
cwtl
ljmp
push
sub
push
add
scas
mov
mov
mov
popa
lods
jne
push
mov
call
jmp
je
cli
xchg
enter
lea
fnstenv
cwtl
in
jne
ljmp
insb
mov
jb
xor
popa
dec
int
xchg
jnp
nop
divps
mov
outsb
jno
mov
dec
mov
out
sti
mov
call
arpl
push
fmull
xchg
jo
xchg
or
xor
pop
jg
leave
xchg
inc
cmp
fstcw
mov
add
movsb
xor
cmpsl
int
rcr
pushf
cmc
push
mov
insl
lds
push
adc
fs
inc
decl
mov
pop
mov
xchg
je
dec
negb
inc
in
and
mov
dec
ds
stos
sub
push
jg
mov
push
mov
xor
out
cltd
pop
inc
out
cwtl
jae
test
xchg
hlt
inc
cmp
mov
stc
inc
fcomps
cmp
mov
or
dec
sbb
and
mov
bound
sbb
outsl
test
dec
cwtl
xorb
popa
mov
mov
daa
cmp
lds
xchg
fwait
and
push
adc
mov
mov
loopne
aas
data16
mov
loopne
jge
sbb
push
push
push
mov
test
nop
out
sbb
push
push
and
dec
loop
jge
pop
dec
pop
outsb
cmc
mov
mov
jmp
adc
xor
push
mov
insb
and
ret
je
ds
mov
fstl
loope
mov
pop
jle
stos
repz
adc
stos
mov
shrl
xchg
xchg
jns
adc
mov
add
lock
inc
pop
adc
and
sbb
dec
cmp
add
test
mov
inc
and
cmp
mov
mul
adc
daa
mov
stos
xchg
sbb
pop
mov
xor
shlb
push
out
dec
xchg
mov
in
mov
and
pop
add
test
leave
jnp
rorb
mov
pop
lods
sahf
pusha
push
or
insb
cmp
inc
aad
in
scas
sahf
out
popl
test
fdivr
fdiv
jmp
or
clc
les
mov
push
add
shlb
rorb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
fsubrl
adc
cli
adc
xor
fsts
sahf
dec
xor
or
hlt
push
subl
lret
outsl
sub
or
bound
mov
adc
jo
cmp
mov
nop
aam
mov
div
adc
push
xor
jge
pusha
ljmp
jl
push
dec
xchg
in
aad
and
dec
jp
sbb
rolb
in
stc
int
add
sbb
inc
repnz
cmp
xchg
popl
lret
dec
xchg
xchg
mov
outsl
cmp
pop
clc
rcl
loop
mov
fldl
les
hlt
mov
stc
push
xor
xchg
push
iret
cld
pushf
pop
push
jne
mov
cli
pop
mov
mov
testl
pop
stos
jmp
lods
sbb
mov
icebp
outsb
out
js
fucomp
fs
out
push
mov
cli
pop
push
cmp
in
adc
adc
leave
xchg
fdivs
cmpsl
pop
out
mov
sbb
push
lret
xchg
in
decl
nop
mov
leave
repnz
adc
loopne
out
aas
les
or
sub
adc
or
pop
movsl
add
adc
decb
test
mov
in
hlt
mov
inc
add
imull
aad
jb
jle
add
in
rol
mov
dec
add
jle
mov
mov
les
stc
adcb
repnz
sub
sahf
push
sub
xchg
fwait
fmull
mov
dec
repz
outsb
push
test
mov
dec
pop
lcall
mov
out
lods
fsubl
test
pop
jge
sub
loope
ret
sarb
fildll
push
imul
sbb
push
aam
lock
fcoml
push
pop
lods
mov
xor
fcmovnb
sub
into
imul
sub
pop
jmp
sub
psubusb
mov
jp
xchg
or
movsl
mov
iret
sahf
cmp
adcb
mov
mov
cmpsb
int3
dec
jae
lods
push
and
push
xor
movsl
add
lock
lods
sbb
mov
ret
jo
or
inc
and
nop
or
push
stos
mov
inc
mov
je
loope
in
sub
jne
clc
and
push
inc
add
ljmp
sub
les
xor
add
sbb
inc
add
out
mov
pop
out
push
pop
movsb
mov
insl
adc
push
notl
xchg
pop
pop
push
xor
fcmove
sbb
fs
or
jno
xchg
push
xor
js
fstp
arpl
add
jmp
mov
not
jne
dec
inc
cmp
sub
std
or
jnp
lcall
xchg
repz
pusha
mov
cwtl
ds
xchg
mov
dec
test
push
dec
xorb
jmp
les
pop
pop
js
jecxz
lcall
pushf
xchg
mov
xchg
or
les
imul
test
mov
inc
imul
nop
out
push
repz
imul
jno
or
xchg
shlb
mov
push
rolb
arpl
add
pop
cmc
sbb
jg
stc
push
sub
xchg
jo
hlt
pusha
into
out
subl
cli
imul
cs
fdivrs
cmp
pop
jae
fwait
mov
not
cltd
lea
pushf
and
lods
push
mov
je
mull
leave
mov
out
adc
adc
cli
adc
pop
fldt
xor
icebp
lds
adc
jmp
fs
pop
mov
sub
into
nop
push
push
mov
dec
xchg
in
in
out
rcll
jecxz
xchg
sub
push
pop
ljmp
std
jl
ret
dec
sbb
mov
adc
cmp
cwtl
dec
and
jmp
lea
adc
leave
xor
lods
lds
into
adc
aaa
cli
adc
jg
arpl
push
pop
jns
pop
inc
leave
imul
sbb
push
enter
cmpsb
in
push
daa
jo
divb
xchg
mov
subl
mov
faddl
cmp
xchg
adc
dec
and
lahf
rorl
mov
arpl
fiadds
jmp
jo
inc
jg
mov
and
ds
fstp
in
jno
xor
add
aad
jle
mov
int
xchg
xor
aad
pop
push
arpl
test
cltd
add
aaa
fisttpl
in
xchg
enter
addl
inc
pop
jnp
xchg
rcll
rclb
gs
imull
mov
inc
adc
push
xor
bound
cwtl
sbb
pusha
xlat
inc
mov
mulb
aas
in
push
cmp
mov
inc
cmp
pop
xchg
fists
xchg
fldl
mov
sahf
pop
lds
movsb
shlb
or
loope
pop
jmp
ljmp
sbb
mov
imul
insl
cmp
orl
lods
mov
inc
fst
ret
xlat
js
bound
sbb
ret
cmp
sub
mov
aam
popf
mov
sub
or
sub
or
popf
pop
cmp
jns
xchg
sbb
test
popf
jle
sub
movsl
fs
popf
fcoml
xchg
fdiv
adc
int
xchg
pop
or
mov
or
cltd
mov
pop
xor
clc
pop
mov
jmp
mov
mov
daa
xchg
mov
sar
xchg
sti
mov
lods
sbb
call
int
les
lods
dec
adc
pop
jno
loop
fsubl
cmp
loopne
lcall
or
lahf
movsb
test
mov
in
leave
add
pop
mov
inc
loope
into
jne
jl
cmp
insl
cmp
xor
rol
ret
popa
leave
ds
adc
js
xchg
shr
xchg
push
inc
testb
sub
lahf
adc
imul
xlat
scas
and
in
jle
pop
out
dec
dec
aam
push
mov
fsts
jle
jb
adcl
sbb
fbld
fs
jge
insl
sub
add
and
lods
je
lret
lahf
outsl
cmpsl
insb
push
nop
aas
push
push
jb
out
aam
mov
into
daa
xchg
xor
jge
xchg
jno
stc
mov
mov
subb
mov
lods
mov
pusha
push
sti
xchg
xchg
in
lods
pop
mov
jo
pop
out
pop
fcomi
sbb
pusha
mov
inc
inc
cmp
imul
mov
out
push
loopne
push
lcall
test
lcall
andl
insb
push
jno
fcoms
mov
mov
aaa
test
push
mov
test
test
cmp
sti
pusha
cmpsl
jae
sub
mov
les
clc
cmpsl
inc
rcr
pop
cmp
mov
ficoml
lods
fidivs
cmp
jle
jno,pt
and
adc
push
push
fdivs
seta
cmpsl
cli
pop
dec
dec
outsl
bound
es
dec
insl
inc
sub
fimull
mov
add
fnstcw
ljmp
arpl
jl
sbb
adc
jp
je
jle
cmp
and
scas
pop
sub
jno
push
fdiv
mulb
fcoml
inc
pop
push
fstl
adc
es
dec
pop
roll
add
aam
sahf
ss
sti
mov
mov
imul
add
push
xor
xchg
mov
xchg
outsb
xor
xor
aad
pop
and
jge
dec
pop
ret
daa
std
or
cwtl
test
jmp
jmp
jmp
das
add
outsb
lock
ficomps
out
jo
mov
cmp
je
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
lahf
stos
push
or
push
and
test
call
or
jl
inc
std
aad
es
mov
xchg
xor
mov
push
sbb
xchg
mov
cmp
pusha
mov
aas
fucomip
mov
lds
jb
movsb
mov
push
ret
mov
push
xorb
jb
xor
mov
add
xchg
pushw
dec
adc
gs
dec
or
add
lods
jo
mov
xchg
inc
push
inc
mov
test
jne
mov
popa
test
imulb
sub
mov
dec
lret
xchg
mov
stos
popf
cmp
popa
push
mov
push
dec
rcrb
je
and
ret
imul
mov
es
fisttps
lret
push
pop
int3
fs
ret
jae
cmp
outsb
push
mov
jle
cmp
mov
pop
cltd
es
test
scas
or
orb
mov
mov
das
xchg
icebp
inc
dec
scas
icebp
icebp
ret
shr
jno
cld
dec
sub
shrb
xchg
xchg
push
data16
div
shl
mov
gs
xchg
jg
jnp
sbb
mov
nop
rcll
push
iret
pop
xchg
sub
xchg
fwait
or
call
jmp
out
loop
xchg
sub
dec
sbb
sbb
push
lds
insb
orb
pushf
or
test
pop
mov
adc
je
jns
and
xor
mov
jbe
iret
xchg
pop
pop
enter
jnp
sub
rorb
jno
cmp
ds
push
cli
daa
sti
xchg
mov
je
clc
push
es
or
inc
cmp
or
add
xchg
cmp
cli
dec
lret
mov
out
das
rcrl
repz
dec
popa
inc
sub
test
popa
add
es
mov
xor
mov
lcall
sub
lahf
lcall
imul
jmp
jge
mov
movb
push
xchg
jmp
pop
lcall
test
leave
shll
or
es
fnsave
cmp
daa
outsl
inc
nop
out
pop
inc
int3
inc
sti
es
pop
add
jle
adc
cli
imul
fldcw
pop
inc
outsl
inc
aaa
jg
xchg
mov
dec
or
pop
add
xchg
sahf
pusha
mov
sbb
out
clc
cld
lods
mov
icebp
std
popa
adc
fisubrl
lcall
add
iret
jl
add
xchg
mov
or
push
sarl
inc
jecxz
outsl
aaa
inc
scas
dec
jecxz
out
or
fisubs
sub
lds
push
inc
mov
das
loopne
pop
into
or
pop
push
xchg
push
sub
rcrb
out
lods
addr16
out
sub
cmp
push
and
dec
lds
out
std
cmp
jb
mov
dec
icebp
cli
out
icebp
or
frndint
jle
divb
icebp
ljmp
bound
ss
out
mov
dec
jmp
pop
xchg
hlt
iret
pop
add
mov
es
mov
mov
sub
jmp
jmp
call
cmpsl
aaa
std
push
mov
mov
pop
popa
jo
stos
mov
leave
push
popf
push
add
jg
dec
inc
adc
dec
inc
mov
sahf
adc
mov
fistpll
cld
mov
stc
pusha
out
add
hlt
js
or
sbb
cmp
inc
or
fcmovu
or
lds
mov
in
out
rcrb
jnp,pt
push
and
jg
addb
pop
add
mov
jmp
leave
aad
lcall
test
mov
aas
bswap
movsb
mov
cmc
pop
hlt
mov
out
stc
sbb
dec
test
cmpsb
aaa
mov
fwait
jg
jno
mov
pushf
dec
test
or
jno
cmc
mov
adc
inc
aaa
push
movzwl
lea
mov
ljmp
mov
pminsw
lcall
dec
add
pop
adc
gs
mov
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
adcl
xor
aad
subl
sbb
and
xor
repnz
dec
cmpsl
aas
fimuls
aas
rorb
xor
iret
cmpsl
test
subl
clc
pop
jb
hlt
xchg
adc
lret
das
mov
xchg
aaa
xchg
push
push
test
cmpsl
or
push
testb
mov
fadd
fcmovu
or
dec
insb
out
pop
cmpb
lds
lea
xchg
negl
btr
or
fwait
int
bound
pop
mov
lock
pop
sbb
add
out
outsl
fbld
popf
jo
and
or
and
data16
ficomps
sbb
in
cmpsl
fadd
xchg
or
cli
or
test
incl
or
je
add
mov
jnp
add
std
xlat
or
fdivl
inc
sub
xchg
es
xchg
or
pop
jp
jle
push
sub
leave
and
push
xchg
stc
sbb
pushf
mov
pushf
daa
call
mov
sub
xlat
insl
in
ret
add
inc
mov
lds
loope
movsl
loop
fistps
adcl
popa
push
jo
and
dec
mov
xchg
sbbb
icebp
dec
mov
sbb
xchg
lods
hlt
cmp
or
push
mov
enter
dec
add
jecxz
jge
pop
daa
jae
cmp
sbb
in
mov
push
sarb
movsb
fsubs
jecxz
xor
jbe
testl
sub
aam
stc
xor
ret
jne
sub
imul
nop
les
stos
push
rclb
mov
lret
pop
adc
adc
xchg
rorl
out
add
dec
rolb
out
mov
xchg
dec
bound
repnz
mulb
mov
sub
insb
int3
mov
lea
pop
popf
fists
jne
ds
dec
cmc
fwait
imul
push
jmp
cli
ds
adc
pop
inc
adc
push
enter
dec
orb
dec
pop
sbb
lret
sahf
xor
push
je
movsl
and
adc
je
cmp
mov
mov
movsb
imul
lods
test
fistpll
add
lds
xchg
movb
mov
push
sbb
jge
inc
sbb
and
xor
and
jbe
inc
sub
sub
std
inc
xor
sub
mov
pop
lods
push
roll
out
xchg
mov
xchg
xchg
mov
add
lods
fiaddl
or
push
shr
adc
adc
mov
pop
jb
push
mov
cmpsb
lods
jl
das
scas
jge
sahf
dec
divl
jae
mov
hlt
add
xor
or
adc
add
and
pop
js
jp
icebp
mov
mov
jle
inc
pusha
out
pop
xor
scas
pop
mov
dec
frstor
popa
sbb
mov
xchg
icebp
es
inc
nop
push
fsub
fisttps
add
sbb
imul
aas
inc
shlb
ret
or
pop
mov
sub
pusha
mov
pop
pop
dec
jns
sbb
xchg
push
in
stos
and
addr16
into
sbb
shl
or
mov
popf
jns
lcall
mov
jnp
cmp
and
jns
stos
mov
xchg
xor
inc
shll
jns
popa
hlt
mov
dec
nop
pop
je
loopne
lods
repnz
out
sbb
faddl
ficompl
cmp
aaa
inc
scas
cli
testb
jns
pusha
cmp
lahf
mov
cmpsl
fnstsw
mov
mov
sub
je
push
mov
clc
out
xchg
inc
pop
test
sbb
dec
mov
orb
jb
jmp
inc
scas
insl
add
mov
and
xor
cmc
aaa
ret
jmp
jmp
lods
cld
xchg
jmp
xchg
loope
test
test
aaa
cli
adc
bound
xor
mov
repnz
int3
push
push
es
cmp
popf
pop
test
test
or
testl
pop
sahf
repnz
hlt
std
or
adc
mov
mov
out
hlt
in
sub
fadd
mov
std
inc
jo
popa
push
repnz
mov
rorb
inc
pop
sbbb
out
imul
cld
xchg
mov
bound
jo
pop
sbb
arpl
add
cmpsb
test
mov
lahf
add
outsb
das
sbb
push
mov
add
jge
hlt
xor
stc
sbb
push
repz
testl
inc
sbb
xchg
ret
sahf
mov
pusha
fadds
jno
std
cltd
push
nop
sbb
and
ficoms
push
jo
xor
andnps
rdpmc
sbb
and
jbe
lods
add
mov
lahf
loopne
es
ja
cli
jnp
and
xor
int3
loopw
pushf
popf
mov
ret
jne
outsl
test
test
in
aam
fisubrl
int3
ja
xchg
push
sarb
sub
dec
add
clc
push
xchg
adcb
stos
mov
out
mov
repnz
ret
adc
mov
mov
xor
push
negb
and
fnstsw
sbb
push
jno
or
clc
jne
aaa
les
popa
rorb
stos
jmp
push
mov
pop
mov
les
repz
dec
fsubp
aaa
pop
push
xchg
fildl
lds
cli
adc
fsts
insb
insl
xchg
push
sahf
rcrb
sbbl
jp
and
add
mov
adc
mov
int
mov
xchg
jl
cmp
insb
mov
dec
jp
push
add
inc
mov
or
imul
xlat
mov
adc
cwtl
adc
pop
jle
jle
sarb
test
int3
imul
adc
mov
test
push
daa
push
sbb
mov
ds
pop
mov
out
pop
push
and
sar
jmp
mov
stc
pop
push
xor
xor
pusha
mov
xchg
imul
pop
jmp
inc
rol
xor
scas
ds
sbb
roll
push
and
pop
sbb
stos
mov
xchg
add
imul
ret
dec
cli
adcl
mov
inc
or
rolb
les
icebp
lock
push
mov
cmpsb
fldl
inc
nop
outsl
mov
fs
cmc
sub
dec
das
pop
mov
pop
aam
pop
sub
push
push
popf
inc
fmull
fdivrl
mov
mov
cwtl
jbe
testb
xchg
add
jae
cld
xchg
push
repz
loop
mov
stc
movsl
sbb
sbb
ds
pop
bsf
jp
lret
jae
sbb
mov
xlat
xchg
jns
cmp
lods
in
push
mov
sub
push
adc
cmpsb
fstpl
ss
push
and
leave
push
mov
mov
loop
sbb
cmp
pop
cmc
mov
cmp
mov
mov
add
push
push
sbb
mov
out
xchg
xchg
test
pop
aad
inc
push
popa
lea
mov
enter
popf
cmp
cmp
je
mov
xchg
add
gs
ficoml
rcl
movsl
outsb
lret
or
test
sbb
mov
ret
nop
and
shl
cmpsb
cld
lock
push
sub
mov
ljmp
pop
dec
ja
dec
scas
lods
outsl
pop
cmp
jp
lock
jno
or
xor
push
push
mov
jo
fsts
sbb
stc
insb
enter
fwait
mov
rcll
or
dec
mov
add
rcr
sub
lea
faddl
or
sub
rolb
mov
add
xor
push
stos
lock
jl
movsb
ret
push
or
push
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
lcall
adc
cli
adc
out
adc
stc
or
addr16
push
rcrl
inc
fwait
mov
mov
lcall
adc
cmpsl
ljmp
jge
outsb
or
cmp
push
xor
mov
icebp
push
dec
jg
cmp
or
or
mov
cli
fcoms
xor
ljmp
movsl
and
dec
sbb
dec
imul
jns
out
adc
test
or
xor
aam
lret
push
sahf
out
or
not
testl
and
imul
rolb
leave
xor
pop
add
push
xchg
mov
add
andl
cli
pop
mov
int3
in
add
cmp
sub
sbb
sub
repnz
sub
stos
add
jle
call
pop
fldenv
sbb
data16
pop
xchg
dec
jo
pop
stos
fwait
or
popf
and
rcrl
inc
xor
add
xchg
sti
fwait
std
mov
shl
push
pop
std
jns
mov
popf
rorl
pop
aad
outsb
nop
dec
mov
dec
rorb
add
cltd
sub
jecxz
aaa
cmc
push
and
cmpsb
inc
jecxz
insb
xor
mov
rclb
call
cld
cmp
mov
in
test
inc
je
add
and
pop
decl
fadd
clc
push
enter
addr16
push
arpl
jmp
cmc
mov
dec
inc
or
or
mul
hlt
fstpl
insb
add
and
mov
and
adc
sarl
or
out
mov
mov
cld
jg
cmp
mov
jmp
mov
icebp
cld
rcll
cmp
xor
sbb
iret
loop
stc
xchg
pop
and
xor
pop
cmp
jns
add
stc
scas
jo
aas
out
stos
movsl
pop
daa
jbe
mov
sbb
pop
pop
ljmp
cmp
lahf
xchg
cld
adc
fidivrs
pusha
scas
ljmp
cmp
or
mov
ds
pop
std
push
and
lds
filds
and
int
or
mov
test
mov
cmp
xchg
pushf
cli
mov
ljmp
into
nop
xchg
mov
dec
or
inc
sbb
das
rorl
adc
push
cmp
sbbb
addr16
add
push
pushf
lock
and
inc
insl
adc
mov
xchg
inc
inc
or
outsb
aad
hlt
push
mov
enter
imul
fldenv
xor
sub
push
test
fidivs
add
bound
jnp
imul
adc
sarb
dec
dec
xchg
out
inc
sub
pop
data16
pop
lods
push
push
or
daa
mov
jns
jmp
cmp
push
cmpsl
mov
dec
mov
push
fistpl
sti
inc
push
xor
cli
mov
test
das
lahf
test
arpl
cmp
xchg
adc
xchg
fwait
sbb
jne
or
mov
fsqrt
cmpsl
or
cmp
sub
pop
xor
in
or
stc
xor
aam
stos
sub
clc
sar
aaa
jae
les
jbe
jmp
dec
pop
fdecstp
decb
mov
lahf
sub
add
fistpl
xor
pop
jle
fisubrl
fs
jg
lds
sbb
add
popl
les
or
sub
mov
pop
pop
aam
jecxz
insb
int3
mov
insb
add
sub
cmp
lea
sub
aad
ficoms
mov
js
jle
test
push
imul
and
sub
cld
sbb
mov
sub
cmp
insb
push
movsl
push
push
sub
imul
pop
mov
jge
xor
loop
add
mov
fadd
inc
enter
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
mov
adc
cli
adc
push
xchg
push
negl
or
testl
das
cld
pop
inc
mov
fs
pop
pop
cmpsl
adc
cltd
popf
fs
in
mov
sbb
cltd
pop
imulb
sahf
aaa
daa
cmpsb
aas
mov
mov
shr
push
cli
push
clc
mov
movl
cmc
adc
shr
mov
xchg
add
sbbl
adc
mov
neg
pop
mov
jno
lcall
dec
addr16
mov
cmp
popa
sub
jge
lret
aam
mov
mov
es
pop
out
ss
mov
pop
push
out
or
imul
enter
movsl
push
lock
pop
xchg
cld
sbb
cmpsb
lret
dec
jle
inc
insb
xor
cmp
in
push
pop
cmc
in
mov
xor
insl
jle
dec
and
lods
aam
insb
jae
movsl
arpl
cwtl
xchg
lods
xor
pop
or
fistpl
dec
loope
add
lods
ss
fmull
xor
xor
mov
scas
sbb
add
xchg
aas
lods
adc
sub
mov
push
decb
dec
movl
outsb
cmp
cli
loop
sub
add
mov
daa
sbb
mov
add
push
add
push
mov
cmp
test
dec
fwait
stos
mov
xor
fidivrs
sub
cmp
loop
out
xlat
je
xchg
sub
pop
adc
mov
pop
aaa
js
pushf
and
shll
xor
aam
cmc
xor
out
push
imul
divb
insb
dec
jo
and
imul
dec
sbb
xchg
pop
loope
pop
aaa
sarb
cmp
mov
cmpsl
adc
pop
lahf
mov
or
inc
ja
arpl
aam
gs
clc
leave
mov
pop
shll
pusha
jae
loopne
mov
mov
shl
push
call
out
xchg
movsb
adc
and
cli
xor
test
jecxz
sbb
mov
ds
bnd
imull
adc
imulb
adc
or
mov
inc
jb
leave
dec
aaa
push
add
push
mov
mov
outsb
xchg
xor
mov
pop
xor
jo
pop
repz
stc
xchg
add
les
lods
pop
cmc
or
or
or
adc
jo
mov
sbb
int
adc
in
fcomps
push
decl
dec
sub
dec
mov
clc
mov
jae
inc
lcall
push
cmp
cwtl
jnp
inc
cld
xchg
xorl
int3
push
xor
and
push
adc
jbe
into
cmp
jmp
mov
repnz
aad
sbb
cs
xor
inc
inc
stos
out
rorb
mull
jb
movsl
les
nopl
add
push
jno
ret
aaa
iret
pop
repnz
jp
mov
jb
sub
jno
dec
arpl
pop
jp
xchg
lahf
mov
or
dec
outsb
aam
lret
cli
das
push
mov
loop
and
inc
sub
mov
xor
pop
subb
push
xor
cltd
or
icebp
mov
add
stos
pop
fadd
es
jnp
inc
push
in
dec
scas
gs
pop
sbb
repz
dec
and
lcall
popa
xor
icebp
shll
fisubs
mov
push
cmp
jae
push
sbb
outsl
mov
sbb
or
lcall
mov
and
sbb
push
out
loopne
nop
mov
xchg
fmulp
and
in
lock
stc
push
lret
mov
jl
mov
sub
lods
pusha
fildll
jecxz
in
push
cmpb
lods
sbb
xchg
popf
and
mov
xor
pop
inc
rol
not
cmp
and
mov
lret
xor
xchg
rcl
jge
lret
stos
push
adc
xor
lods
jb
inc
sahf
push
imul
xchg
fisttpl
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
fimull
mov
aaa
cli
adc
les
mov
add
dec
push
jae
into
adc
push
mov
hlt
adc
push
pop
add
stc
dec
pop
repz
dec
pop
repnz
andb
add
ret
adc
push
mov
jns
jle
jecxz
out
fwait
ss
sub
mov
stos
pusha
jge
leave
mov
adc
pop
sub
pushf
bound
adc
ljmp
repz
jbe
aaa
dec
pop
pop
and
es
push
in
inc
dec
inc
xor
push
addr16
cmp
aad
rcll
push
stos
enter
pop
mov
mov
insb
adcb
testb
pop
add
xchg
call
dec
or
xchg
jb
test
loop
sbb
pop
jle
mov
mov
jg
cmp
test
ret
jbe
add
je
repz
fdivs
fs
and
or
test
xor
and
sub
lock
mov
cld
pop
stos
dec
mov
push
pop
pushf
repnz
xor
or
pop
ficoms
xchg
add
test
loopne
mov
mov
inc
pusha
mov
cmp
jp
lea
sub
pushf
inc
mov
dec
dec
arpl
xchg
mov
mov
fsub
or
push
or
ljmp
jb
imul
pop
adc
rcrl
mov
loope
mov
test
fidivrs
mov
push
jmp
in
inc
xchg
adc
inc
jmp
xchg
cmpl
cmp
pop
popf
jae
push
outsb
jne
cwtl
adc
push
stc
leave
movsb
data16
fmul
mov
in
push
mov
call
out
fwait
push
sub
dec
aaa
loop
in
in
mov
mov
aam
xchg
sbb
enter
je
add
jg
call
jae
or
mov
inc
xor
xchg
sub
loop
test
jns
jp
loope
in
fildl
fsts
add
cmp
xlat
popf
imul
lahf
adc
adc
in
sub
enter
mov
or
ficompl
sub
pusha
inc
add
fnstcw
xchg
add
mov
pop
rcll
jecxz
lahf
mov
aad
cmp
sub
stos
jge
inc
cmc
push
push
in
arpl
inc
add
and
push
sub
inc
cs
out
mov
sbb
jo
push
inc
push
in
mov
cmpsb
shll
mov
inc
or
push
mov
aaa
fs
cmpsb
and
sub
jno
xchg
stos
pop
adc
loope
mov
and
mov
sbb
xchg
aaa
enter
mov
adc
mov
jg
in
xchg
lods
lret
adcl
fs
mov
inc
pop
test
xor
ss
sbb
inc
cltd
ds
pusha
mov
jle
nop
sar
dec
lret
cmc
mov
sbb
adc
repnz
sbb
sar
mov
jp
out
sub
aaa
inc
pop
faddl
mov
jne
mov
mov
dec
jecxz
cmp
and
cmc
jns
cld
cltd
bound
dec
gs
dec
cmp
and
inc
sub
gs
hlt
mov
jmp
insb
xlat
adc
xorb
xor
jnp
mov
xorb
and
push
ja
fildll
fsubrs
pop
test
push
or
pushf
out
and
jl
mov
inc
jno
jns
or
cmp
inc
sub
inc
arpl
mov
sti
testb
jmp
scas
sub
addr16
daa
scas
xchg
pushf
loope
sub
mov
dec
ret
addr16
sbb
decb
or
and
mov
push
push
and
xor
cmp
and
jae
pop
pop
adc
mov
mov
scas
jbe
and
ret
or
repz
rorl
mov
xor
cs
int3
xor
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
dec
sub
push
stos
sbb
test
add
gs
inc
fucom
mov
adc
cmpsb
sahf
pop
add
ja
mov
pop
ds
in
scas
mov
mov
dec
or
lcall
inc
js
jo
imul
mov
mov
fs
cmp
sbb
adc
jg
xchg
mov
mov
cltd
int3
pop
push
pop
inc
and
rclb
pop
lret
pop
push
pop
pop
int
lds
loop
mov
imul
dec
cmpsl
xchg
or
ret
sbb
std
sub
jl
cmpsl
inc
mov
adc
push
bound
scas
xor
scas
push
shrb
mov
sarl
and
or
sbb
cmp
jns
mov
add
aam
notb
pop
loopne
sub
dec
or
add
stos
or
dec
mov
sbb
ds
addr16
xchg
jb
rolb
int3
scas
xchg
jo
or
cmp
in
adc
adc
or
int
insb
imul
xchg
insb
mov
push
lret
cmpsl
lea
fisubrl
add
push
cmp
dec
cmp
mov
sbb
test
and
push
out
lret
stos
addr16
stos
outsb
in
lock
stc
leave
jae
mov
imul
int
insl
mov
jo
and
jge
sub
mov
lock
addr16
push
mov
push
gs
jg
xchg
fisttpll
lods
push
push
mov
pop
jecxz
add
sbb
xchg
push
lcall
inc
ret
jecxz
fwait
out
lock
dec
sub
mov
mov
pop
cli
mov
nop
push
mov
jl
mov
xor
mov
lds
mov
rcl
pushw
lea
mov
in
and
xchg
pop
jae
je
lock
pop
mov
rorl
sbb
mov
or
mov
adc
ret
xchg
std
xchg
sub
enter
and
pusha
loopne
mov
outsb
mov
or
js
mov
fdivp
pop
flds
pop
ret
mov
leave
jae
push
in
mov
cmp
pop
sar
outsl
lods
paddsb
push
adc
insl
das
xchg
adc
or
mov
push
dec
mov
loope
adc
mov
out
shll
loope
mov
adc
lret
inc
cmpsb
pop
ss
stos
stc
ss
subl
ret
fstpl
movsb
mov
mov
rcll
inc
bound
mov
mov
cmp
outsb
wrmsr
shlb
movsl
mov
inc
dec
adc
js
pop
jne
lcall
cmpsb
mov
in
jb
jl
dec
fildl
lods
jb
fcompp
inc
pop
insl
ja
adc
out
dec
hlt
inc
mov
inc
int
xor
out
mov
xor
mov
xor
mov
pop
and
push
lret
dec
and
gs
stos
jmp
and
rcl
jmp
mov
into
push
pushf
mov
icebp
sbb
sub
xchg
jmp
outsl
xor
loopne
xor
pop
cmp
and
int3
lahf
jl
and
inc
pop
scas
ret
shlb
pop
lret
pop
adc
add
imul
imul
out
mov
or
out
das
dec
or
dec
jle
imul
outsb
adc
fstps
cs
add
scas
bound
jbe
pop
ficompl
pop
add
iret
stos
sbb
pop
dec
push
out
arpl
in
adc
lahf
xchg
das
in
or
negl
sub
cmc
out
or
pop
outsb
push
or
adc
repz
iret
sahf
lret
sarl
add
in
cli
jge
lock
in
jl
out
clc
xor
dec
fildl
push
add
adc
cwtl
pop
or
dec
test
inc
adc
or
mov
add
sbb
das
aam
mul
popa
push
cmp
adc
aaa
cli
adc
roll
movsb
adc
aad
jecxz
mov
rorb
sub
and
inc
cli
jae
daa
push
sahf
adc
sahf
inc
xchg
arpl
xor
ss
jl
mov
int3
adc
adc
pop
insb
sub
mov
mov
loopne
out
repnz
xchg
push
or
es
inc
scas
xlat
jp
dec
cmpl
pusha
xchg
dec
mov
dec
loope
dec
inc
mov
and
xor
hlt
add
test
mov
rcrb
stos
enter
pop
pushf
mov
push
ret
sbb
mov
daa
inc
xchg
fldenv
lds
sbb
lds
int3
xchg
push
stos
push
add
xchg
xchg
adc
into
scas
mov
adc
pop
aas
push
pop
call
fstps
dec
adc
mov
xchg
test
cmpsb
in
fistps
dec
ja
iret
mov
adc
cmp
fcompl
xor
cmp
adc
int3
and
jle
mov
sbb
or
cs
fs
leave
jns
pop
bnd
or
dec
mul
lahf
in
mov
jge
inc
ds
je
sub
xlat
fnstsw
out
push
test
add
or
pop
push
mov
push
jge
ss
cmp
bound
mov
shlb
aad
in
or
adc
mov
adc
data16
daa
xchg
xchg
sbb
mov
cli
repz
mov
dec
shl
mov
fsubl
std
lea
lods
aaa
in
mov
add
push
call
adc
insb
mov
jne,pt
adc
divl
outsb
dec
sbb
mov
mov
popa
jmp
aam
aad
add
and
in
jne
and
push
mov
loope
dec
test
cmp
in
sbb
fdivs
enter
loope
dec
loope
add
jle
mov
mov
mov
pop
ljmp
push
insb
out
pop
fisttps
jns
mov
mov
pop
fimull
xchg
mov
xlat
mov
movsb
shlb
xchg
jg
pusha
icebp
leave
aas
inc
pushf
push
xor
ja
imul
push
pop
pop
insl
ljmp
or
dec
shlb
psrld
outsl
xchg
repnz
dec
ja
dec
addr16
and
mov
push
cmp
into
je
out
jp
adc
cltd
mov
and
ss
adc
fisubrl
add
rorl
sub
insl
push
jne
and
xor
and
cmpsb
sub
cmc
dec
fdivl
pop
cmp
mov
jl
cmp
ja
mov
ss
xor
imul
mov
sahf
and
cld
ljmp
int
insl
popa
inc
inc
movlps
inc
xor
xchg
or
imul
push
pop
call
push
sarb
jge
imul
cmpsl
pop
sub
jbe
call
repnz
cwtl
pop
push
xor
cli
aam
or
lcall
insl
pop
lods
pushf
outsl
adc
inc
add
out
mov
es
jo
ds
dec
jecxz
stos
or
pop
testb
mov
adc
dec
stos
fs
mov
dec
insb
imul
add
nop
stos
or
cltd
sarb
adc
jge
add
dec
mov
rorl
movsl
rcrb
jmp
xchg
test
test
mov
xlat
addr16
fstps
push
lods
loop
insl
int
jl
push
sbb
and
mov
addr16
sbb
add
shll
xor
cmc
and
loop
fisttps
loope
jmp
movsb
fwait
xchg
daa
xchg
jecxz
fld
pop
rolb
aas
mov
pushf
cmp
daa
adc
fstpt
dec
loope
mov
sub
aam
mov
sbb
andl
ljmp
lods
enter
add
mov
or
add
shl
jmp
add
push
adc
cwtl
cs
dec
pop
adcb
aaa
cli
adc
jp
inc
nop
or
int3
cmp
repz
incb
adc
mov
mov
aaa
mov
jmp
imul
hlt
add
in
pop
jecxz
sub
jnp
add
out
pop
push
xchg
std
or
xchg
cltd
xor
call
inc
mov
add
add
xchg
sbb
mov
sarb
lcall
mov
sbb
mov
test
push
aas
movsb
jmp
ret
test
loopne
shr
jmp
mov
popa
push
ficoml
adc
push
out
xor
mov
fidivs
mov
lods
jp
iret
sub
fwait
jnp
adc
shrl
mov
stos
mov
push
fpatan
loope
lds
in
fwait
jb
push
lock
ljmp
out
insl
mov
jge
mov
out
outsb
and
cs
pop
push
out
mov
xchg
jno
xchg
inc
push
call
or
loop
and
pop
fstl
sbb
test
dec
adc
cmp
lds
cld
in
mov
cli
cmp
mov
mov
mov
stos
es
shll
sbb
push
fbld
pop
int3
mov
cmp
dec
or
cmp
js
jb
or
mov
mov
or
stc
add
lcall
ljmp
add
repnz
inc
xlat
pop
jns
flds
andps
test
movsb
lea
call
hlt
movsb
leave
rolb
jl
cmp
es
jecxz
ret
fidivrl
pusha
push
int3
fwait
sbb
sbbl
jmp
movsb
add
adc
xor
jb
mov
sbb
pusha
mov
rcr
adc
int
sbb
rcl
dec
leave
push
cmp
mov
dec
popf
ret
imul
cmp
mov
je
sahf
sbb
mov
jno
lea
sub
loopne
arpl
ds
and
push
xor
flds
xor
clc
stos
rclb
add
xchg
popa
inc
repz
jge
mov
sbb
arpl
clc
aad
adc
cld
stos
sub
sub
decb
test
xor
and
cmpsl
jnp
ret
lcall
lea
in
rorb
mov
ja
movsl
addr16
stos
pop
inc
mov
mov
loopne,pn
fstpl
xchg
rolb
jns
sbb
cmp
sbb
xchg
push
ljmp
nop
stos
cmc
sub
lahf
loopne
add
sub
fidivrs
test
hlt
mov
sub
arpl
jae
stos
fwait
pushf
insl
mov
fcmovb
call
lcall
aam
fsts
cmp
or
call
and
mov
jge
dec
in
enter
int3
mov
jnp
outsb
and
mov
fidivs
fnstcw
lret
ja
sub
and
or
and
xor
push
push
or
fadds
dec
std
push
inc
shr
or
rolb
fstl
leave
dec
mov
cmp
mov
push
adc
pop
pop
inc
sbb
imul
mov
jl
imul
mov
dec
sbb
mov
nop
or
fdivs
xor
lock
dec
test
add
sbb
or
mov
loopne
mov
call
in
pop
jae
and
jle
dec
lea
in
test
sub
leave
loop
test
mov
aad
jno
jne
xor
inc
sbb
cmpb
xor
ret
adc
ja
mov
movsl
gs
pusha
mov
add
pusha
pop
pop
stos
mov
xchg
out
ficoms
psubd
push
daa
fldl
and
xchg
jb
mov
pusha
ret
pop
inc
xlat
ljmp
mov
mov
mov
shrd
jmp
frstor
dec
xchg
movsb
cmp
pop
lret
dec
push
adc
sbb
dec
dec
cmp
and
ja
das
xor
call
and
das
in
ret
fwait
xchg
and
or
fsubs
cmp
pusha
lods
call
dec
sbb
adc
jl
add
push
frstor
out
repnz
imul
push
pushf
dec
mov
dec
xchg
movsl
roll
sahf
enter
scas
push
and
mov
xchg
ljmp
push
cld
rorl
popl
pop
int3
mov
push
dec
loopne
ss
mov
cmpsl
jl
sbb
jbe
inc
jge
lahf
movsl
xchg
or
mov
mov
out
lods
sbb
jnp
fisttpl
xor
or
pop
mov
das
add
xchg
xchg
sbb
lods
push
addr16
idivb
jge
imul
loop
test
aaa
push
xchg
addr16
pusha
call
fldenv
cmp
movl
leave
clc
inc
mov
jmp
ret
lret
jge
xchg
adc
sti
std
iret
pop
out
push
iret
ret
mov
cmpsl
jne
and
push
adc
mov
imul
sub
or
push
stc
push
jg
in
xor
or
aad
pop
pushf
in
rcll
stc
pop
mov
adc
stos
pop
jle
jno
mov
enter
mov
mov
or
dec
xchg
fdivrp
stc
loopne
loope
ds
lret
jge
xchg
test
std
lods
or
xchg
shll
roll
xorl
lahf
roll
imul
clc
dec
negb
bnd
cmpsl
add
cmc
mov
and
jmp
jne
push
mov
fcompl
xchg
sbb
call
xchg
mov
mov
mov
js
xchg
dec
adc
push
andb
sub
shl
mov
jnp
insl
out
jmp
in
and
mov
in
lock
xchg
adc
js
insl
aam
jp
ds
xor
add
mov
stos
loop
mov
or
sub
xchg
or
ds
int
lock
push
cld
mull
gs
or
int
push
ljmp
lahf
mov
mov
mov
fwait
sub
mov
sarb
adc
jecxz
add
cmp
xchg
movsb
mov
or
mov
imul
movb
push
inc
shlb
scas
pop
jge
dec
call
or
mov
in
cmp
cmp
push
push
push
shll
mov
add
sahf
mov
and
adc
push
xor
cmp
fldl
cmp
aam
mov
pusha
cmp
lea
ja
fs
and
mov
pusha
in
push
and
insb
fs
sub
pop
cmp
int
dec
out
es
pop
repz
inc
xchg
push
imul
pusha
enter
test
cmpsb
movsl
and
cmp
and
stos
cltd
jecxz
das
fdivl
jp
xchg
xchg
xlat
sar
fbstp
sbb
aas
out
jo
xchg
xor
sbb
fnstenv
mov
cmp
stc
add
xchg
xchg
out
ret
fbstp
and
dec
test
mov
movsl
push
push
mov
rolb
xchg
xchg
lret
xchg
cmpsb
and
add
sbb
fwait
ds
test
and
dec
sub
push
pop
shlb
cmp
mov
clc
lds
mov
aas
push
add
lds
jl
aaa
std
stc
mov
lock
cmc
adcb
bound
test
cmp
push
aaa
inc
daa
movsl
cmpsb
notl
adc
mov
push
and
in
negb
fs
sub
pop
insl
cmp
std
add
or
ret
aas
and
jge
stc
adc
data16
sub
jne
add
clc
xchg
xor
adc
jge
jg
movsb
cmp
popf
test
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
inc
inc
mov
loope
test
mov
in
inc
mov
movsl
leave
mov
fdivrs
dec
push
inc
jne
cld
in
es
and
mov
movsb
adc
fisttps
inc
sub
jl
jne
sbb
imul
sbb
call
xor
loope
jnp
fdivl
pop
rcrl
or
test
and
fstpl
in
push
pop
pop
mov
cmc
rolb
xor
arpl
loopne
xchg
mov
cltd
adc
test
mov
adc
xor
jp
inc
es
in
xor
mov
sub
daa
gs
mov
xor
and
or
mov
sub
shr
fimull
jns
int3
fnsave
mov
mov
stos
and
out
in
std
inc
shlb
pop
rcrl
sbb
cmpsb
insl
ficompl
xor
inc
cmpb
sti
cmp
xlat
mov
addr16
jmp
jne,pt
or
jbe
das
cld
ja
pop
dec
in
cld
cs
xchg
push
shll
insl
cmp
adcb
cmp
or
pop
stos
lds
sub
dec
stos
out
hlt
in
add
sub
mov
push
mov
dec
stc
xor
shll
jle
cld
xchg
lds
xor
shrl
xor
imul
aam
nop
mov
fisttpll
dec
js
xor
ret
xchg
jmp
mov
loope
outsl
lock
ja
out
icebp
lea
outsl
add
stc
cs
fsubrp
insl
mov
cmp
les
cld
daa
insl
pusha
dec
or
mov
int3
adc
xchg
arpl
or
sti
pop
mov
std
dec
mov
rcrb
add
sbb
imul
push
je
mov
jg
adc
dec
out
push
jmp
pop
es
pop
call
xor
rorl
shlb
repnz
mov
cmp
fstps
cmp
and
sbb
mov
inc
mov
adc
dec
adc
jae
data16
and
inc
adc
xor
push
push
out
push
subb
mov
fidivs
pop
scas
enter
roll
jnp
xor
popa
inc
cwtl
adc
adc
fs
into
sub
int3
mov
sarl
test
mov
insl
repnz
sahf
ret
adc
in
or
in
jmp
dec
sbb
inc
cmp
icebp
jne
outsb
push
add
pop
enter
clc
mov
nop
out
pop
ret
sub
jne
push
or
mov
push
sbb
mov
jp
fidivrl
xchg
pop
rorb
sbb
cmpsb
sti
jb
add
adc
cmpl
jge
add
mov
push
js
jb
cwtl
push
jecxz
add
les
cmp
jnp
or
adc
sbb
repz
jg
scas
lcall
test
push
sahf
fsts
leave
jno
ljmp
in
loop
jg
and
lods
nop
pushf
mov
lret
leave
fucom
or
inc
rorb
mov
ret
mov
mov
and
push
out
push
arpl
push
mov
xchg
scas
pop
lret
and
pop
inc
sub
ljmp
in
ss
adc
loope
sub
adc
fisubrs
push
jo
in
dec
cli
add
cmp
sub
and
aaa
fldl
sti
arpl
and
and
mov
stc
cmp
into
push
sub
and
pusha
pushf
aas
stos
xchg
shlb
fiaddl
inc
movsl
add
sub
push
mov
sar
shrb
jecxz
sbb
fwait
movsb
cltd
lock
dec
out
mull
mov
pop
fs
pop
mov
add
out
aad
stc
shll
and
std
pop
ret
sbb
mov
mov
loope
xchg
inc
mov
mov
jmp
mov
dec
js
fs
xor
adc
mov
sarl
aaa
cli
adc
add
out
jo
rclb
fcompl
hlt
fsubrp
sub
dec
fisubrs
jb
pop
or
cmpsb
mov
test
pop
leave
out
stos
sub
les
jmp
aam
mov
jbe
mov
test
shrb
sbb
add
out
and
rcll
fidivs
pop
xchg
lcall
jl
repnz
sbb
cmp
cmp
lahf
sub
and
sti
sarl
aad
xor
push
scas
scas
inc
jno
push
mov
idivl
mov
outsb
cltd
jbe
mov
mov
or
jmp
mov
aad
and
mov
outsb
jl
and
in
ficoml
cmpb
adcb
ss
mov
sub
push
adc
jb
inc
sbb
add
in
push
adc
fwait
pop
mov
stos
inc
cmp
adc
mov
pop
idiv
movsl
or
sbb
int
add
jns
sub
std
scas
pop
and
cmpsb
jb
and
add
jns
or
jo
mov
xchg
lcall
sbb
sbb
iret
mov
sub
shll
jno
dec
notl
mov
test
loope
push
or
loopne
icebp
out
cmp
mov
rcr
add
int
jns
dec
nop
xchg
enter
adc
xor
sbb
mov
mov
hlt
fldcw
mov
xchg
pop
sub
pop
pop
inc
push
add
xor
lahf
xor
fnstcw
push
push
sub
movsl
loope
push
daa
mov
das
push
das
cmp
inc
mov
ss
adc
stos
int3
push
inc
sbb
push
scas
imul
xor
or
repnz
lods
push
xchg
xchg
hlt
sub
lds
pop
and
bound
and
testl
jg
in
sti
dec
xchg
shl
dec
call
gs
pop
cmpsl
mov
mov
jno
push
push
mov
imul
insl
adc
jae
jmp
int3
imul
sbb
lea
out
repz
mov
inc
dec
or
adc
mov
pop
das
out
inc
jbe
cmpsb
mov
jg
aas
xchg
mov
inc
pop
or
or
jne
mov
xchg
xor
sti
pop
je
outsb
das
int
pop
enter
mov
xchg
addr16
rcl
mov
das
push
xlat
sbb
adc
in
sub
dec
mov
inc
pop
jo
test
push
jle
fldt
pop
xchg
or
push
adc
jnp
pushl
js
fwait
add
mov
popa
push
add
push
dec
rolb
and
jns
shrb
fdivs
nop
pop
stc
pop
test
xchg
mov
and
xchg
aaa
or
lgs
sbb
and
inc
lods
xchg
lods
push
fwait
and
int
stc
stos
sub
sub
add
movapd
pop
push
int
in
push
mov
pusha
lock
rolb
adc
sub
xchg
xlat
rcr
xchg
int
add
sub
jbe
sub
dec
and
xor
aas
repnz
fcmovb
shlb
inc
int3
push
inc
cltd
cltd
insb
add
push
popf
xchg
and
inc
add
aaa
in
jmp
pop
cmpsl
loope
stc
xchg
iret
mov
cmp
icebp
mov
mov
pop
add
xchg
cmpsl
or
imul
xchg
adc
test
stos
scas
sahf
inc
shll
fcmovu
test
stc
jg
xor
mov
xchg
dec
popfw
cmpb
xlat
push
lods
shlb
clc
repnz
fildll
jae
dec
jp
inc
mov
sbb
fcomps
push
out
repz
jnp
fwait
leave
shrl
inc
jnp
mov
dec
pop
repz
sub
dec
cmp
insl
sub
pusha
sti
je
mov
and
icebp
inc
test
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
outsl
lahf
push
mulb
aaa
cli
adc
popa
dec
dec
xor
in
inc
add
adc
ss
xlat
icebp
and
mov
adc
outsl
cld
leave
inc
fwait
xchg
or
or
push
mov
shll
int
outsb
dec
mov
popa
pop
push
mov
or
xor
adcl
adc
jae
add
adc
mov
ret
pop
mov
out
xchg
or
inc
jmp
push
jmp
fidivl
ljmp
outsb
rcr
inc
jmp
in
xlat
test
add
inc
addb
out
mov
decl
mov
js
mov
xchg
out
bnd
or
cmp
mov
add
or
rorb
lods
xor
xor
divl
fwait
mov
or
movsl
push
sbb
pop
repnz
ret
add
inc
fwait
dec
sarb
outsl
adc
loopne
mov
sbb
pop
sub
pop
lock
ret
push
inc
test
mov
jecxz
test
push
lahf
test
push
pop
mov
out
ss
dec
cmp
lea
pop
xor
mov
sub
and
outsl
pop
sti
sub
jle
lods
pop
js
mov
negb
dec
rorb
sbb
add
jae
aaa
fimuls
xlat
xchg
mov
mov
mov
stos
gs
cltd
sbb
jle
addl
out
add
sbb
jle
sub
clc
ret
add
cltd
je
aad
mov
rorb
add
mov
sbb
mov
mov
push
inc
mov
add
inc
jnp
mov
sbb
mov
outsl
push
xor
ds
xor
pop
and
dec
mov
xchg
pop
mov
outsb
and
and
pop
mov
dec
dec
lods
push
and
cmp
nop
xlat
lret
leave
xor
adc
pop
adc
jns
clc
movsl
dec
sbb
mov
outsb
sub
pop
std
out
stc
mov
cmp
push
pop
mov
push
cmp
negb
sub
popa
push
aaa
ror
aad
subl
sbb
loop
movsb
xor
ret
loope
addr16
dec
std
mov
push
pushf
jb
or
pop
dec
jg
add
ror
fnsave
idivb
mov
lea
mov
into
and
dec
inc
fcomps
push
mov
out
outsb
inc
or
push
fistpll
xchg
adc
rcrb
mov
xor
xchg
inc
mov
cmpb
xchg
mov
sub
roll
inc
cwtl
sbb
sti
rcl
out
add
icebp
adc
call
cmp
pop
pop
movl
inc
adc
add
dec
pop
jl
push
inc
push
hlt
mov
mov
and
mov
push
cmp
mov
movsb
incb
into
jnp
divb
mov
mov
and
mov
add
pop
es
xor
xchg
sti
and
cld
pop
stos
mov
mov
iret
aaa
xor
jns
bound
test
subl
jp
sti
imulb
jl
jnp
ds
outsb
or
mov
pop
fistpl
inc
test
ret
jp
movsl
jmp
mov
push
mov
fidivrl
xchg
iret
pop
dec
sbb
out
cltd
lcall
pop
add
xchg
leave
movsb
aam
sbb
test
fsts
aas
leave
out
mov
push
push
orl
outsl
dec
jle
cmp
sti
out
lahf
ljmp
add
adc
mov
out
or
ret
cld
nop
pop
xor
mov
outsb
push
lds
enter
push
fimull
js
jmp
push
sub
leave
mov
push
pop
xchg
popf
jae
js
dec
je
or
cwtl
adc
mov
sbb
xchg
xchg
aaa
inc
inc
pop
int
sbb
imul
sub
ret
int3
shrd
add
jmp
push
fsubrl
dec
or
clc
adcl
inc
clc
fdiv
mov
xchg
adc
dec
out
jne
stos
mov
jns
shl
pop
mov
mov
dec
clc
movsl
subl
mov
addl
push
in
mov
xchg
imul
mov
rcrb
les
pop
mov
popf
lds
pusha
pop
scas
inc
push
mull
xchg
fwait
insw
inc
push
aaa
enter
add
div
loopne
xchg
cld
cmp
and
jle
pop
mov
sub
outsb
outsb
fcomi
inc
pop
in
adc
popf
mov
loopne
inc
aaa
cld
or
lahf
popa
mov
cwtl
hlt
cmp
rorb
pop
adc
sub
lret
adc
roll
mov
add
les
jae
bound
and
push
xchg
jb
stc
mov
pop
mov
cmp
jmp
jp
dec
inc
repz
mov
enter
rclb
and
arpl
sar
add
ret
loope
test
mov
jg
cmp
inc
daa
mov
loop
lods
roll
std
and
push
pop
mov
dec
ljmp
mov
jo
hlt
js
int3
test
mov
fxch
mov
or
movsl
pop
mov
arpl
es
cmp
je
and
stos
iret
push
ret
mov
in
push
add
in
lds
sub
sbbl
out
test
sub
xchg
insl
sbb
stos
scas
mov
loope
cmp
adc
or
repz
dec
in
call
inc
sub
inc
pop
mov
mov
aaa
xor
lcall
icebp
or
lahf
pushf
fwait
sbb
mov
mov
subl
xchg
cmovb
mov
movsb
shlb
std
test
fistps
mov
test
push
ja,pt
xor
pop
int3
aas
test
dec
fimuls
rep
pop
pop
xor
dec
sbb
aas
sti
sti
pop
inc
ljmp
stos
xchg
loop
fucom
arpl
stc
mov
and
cltd
inc
les
cwtl
cmp
je
test
fwait
or
mov
out
stc
leave
jne
cmp
addr16
clc
call
loop
mov
icebp
adc
ret
mov
bound
push
mov
aaa
mov
pop
cmp
mov
mov
aad
push
xor
fsubs
mov
imul
adc
test
mov
out
in
outsb
int
mov
pop
imul
push
daa
pop
sti
negb
add
or
mov
test
push
test
cltd
out
fsubs
mov
mov
jmp
mov
insl
adc
rorb
pushf
in
adc
out
cmp
push
xchg
jnp
xor
xchg
pop
fistl
lods
jg
mov
out
inc
mov
lds
push
push
sub
out
sub
test
push
shlb
orl
fcomp
adc
setno
movsl
xchg
mov
stc
mov
out
loope
mov
imul
pop
arpl
adc
jns
bound
fsubl
mov
je
test
into
add
insl
mov
pushf
lods
fsubl
or
test
stos
xchg
out
push
mov
mov
jl
xor
das
mov
inc
pop
lods
inc
push
out
dec
leave
xor
cmp
jne
popf
out
lret
xchg
mov
cmp
stc
cli
jle
jge
xchg
mov
mov
dec
repnz
push
xor
sbb
pop
int
mov
lds
pop
xchg
in
std
repnz
out
arpl
cmp
push
imul
pop
xchg
fistps
clc
xor
pop
xor
pop
loopne
mov
and
push
mov
out
jg
test
lea
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
lds
and
adc
cli
adc
mov
mov
xchg
jge
test
scas
inc
jno
jo
mov
cmp
loopne
mov
loope
cmp
out
clc
test
clc
mov
and
jb
mov
sbb
jo
pop
cmp
inc
aas
mov
pushf
inc
testb
outsb
xor
or
daa
push
and
xlat
add
test
arpl
or
das
push
push
push
pushf
arpl
in
lea
icebp
mov
xlat
jecxz
mov
out
call
adc
repz
loope
dec
push
inc
lock
jp
lret
cmp
and
xor
pushf
and
push
ljmp
in
mov
mov
push
pop
mov
dec
insl
test
push
test
pop
enter
je
outsl
xorl
lods
jge
nop
clc
cwtl
rcll
nop
pop
leave
ror
sbb
xchg
outsl
repnz
lds
mov
je
inc
loop
adc
push
dec
clc
mov
decb
cltd
push
cltd
pop
je
mov
out
iret
pop
mov
int
scas
add
in
fbld
jbe
dec
insl
aam
popf
pop
repnz
add
iret
sub
lret
cmpsb
adc
mov
test
in
jno
or
inc
ret
mov
jnp
dec
pop
jg
sbb
js
movsl
pop
pop
sbb
sub
dec
or
adc
stc
pop
xorb
lods
mov
inc
add
push
mov
jmp
xor
lock
sub
sti
aaa
push
add
loope
or
leave
out
or
bound
gs
cmpl
mov
les
cmp
rolb
outsb
leave
insb
xchg
lcall
xor
jp
mov
into
mov
dec
add
fadd
sbb
bound
mov
xchg
push
test
in
push
fisubs
je
ljmp
push
mov
push
cmpl
scas
mov
aaa
cltd
inc
xchg
xor
inc
gs
std
sbb
and
mov
scas
pushf
ret
xchg
fcmovne
jge
jnp
xchg
and
push
adc
dec
out
mov
rclb
leave
mov
add
cmpsl
sti
shlb
and
mov
dec
mov
fisubrl
ret
dec
adc
ljmp
movsl
movsb
dec
cmp
std
mov
jne
stc
and
fwait
xlat
test
or
shr
lds
scas
mov
sub
jmp
inc
dec
jmp
jb
sub
jecxz
mov
xchg
dec
xchg
pop
jno
ss
mov
je
aam
enter
jmp
push
orb
lret
and
xor
imul
or
jg
adc
aad
mov
fistpl
mov
mov
lock
adc
mov
inc
aam
mov
add
pop
xor
mov
mov
jb
pop
lods
jle
cmp
or
and
les
dec
fiaddl
push
cmp
dec
outsl
add
sub
mov
mull
in
mov
mov
push
ror
out
push
sub
les
mov
cmp
xchg
ss
adc
push
push
stc
mov
test
into
mov
sub
nop
pushf
or
sahf
cmpsb
fs
inc
repz
xchg
mov
sbbl
xchg
push
xchg
mov
add
xchg
jp
and
mov
adc
test
sbb
mov
cmc
test
inc
sub
sbb
movsb
push
push
xchg
pop
cmc
mov
xor
mov
adc
push
mov
fldl
mov
in
and
add
lds
dec
push
lret
daa
popf
daa
movsl
scas
xlat
mov
or
inc
dec
cltd
arpl
fmuls
push
mov
sbb
or
inc
cltd
movups
pop
jp
repz
out
xor
in
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
dec
scas
fwait
push
ret
cmp
adc
cli
adc
mov
or
daa
cltd
mov
push
xchg
mov
cmp
outsl
cmp
bound
mov
ret
pop
mov
jmp
fcomps
js
sbb
adc
bound
outsb
loop
fcomps
test
mov
push
int3
sahf
loop
in
push
and
icebp
lret
and
mov
fs
jg
fmuls
push
add
sbb
inc
xlat
adc
test
lret
push
ret
in
push
pushf
xor
push
stos
pop
cwtl
std
mov
push
aas
enter
xor
out
in
fcompl
and
xlat
dec
push
popf
pop
xchg
lcall
and
js
gs
or
sub
cmpb
xor
jle
inc
mov
fsubrs
arpl
xor
and
cltd
push
mov
in
loop
jne
jae
shlb
push
fistpll
xchg
add
test
pop
mov
lock
ror
subb
stos
into
in
shl
jecxz
adc
ret
pushf
dec
je
pop
mov
sbb
fstl
inc
and
cmp
mov
push
in
push
adc
and
stos
cltd
inc
fstpt
pop
cs
test
addr16
aas
imul
leave
stos
push
aam
cmpsl
sub
inc
inc
add
pusha
testb
arpl
call
sub
clc
aas
cmc
sub
xor
rorl
orl
out
out
icebp
out
lcall
rcll
jg
cmp
jns
test
pop
dec
jnp
cltd
push
jae
dec
movsb
add
cmpsl
and
repnz
hlt
pop
pusha
xchg
unpckhps
push
mov
aad
jle
push
cmp
mov
xchg
sub
push
inc
lea
rorl
xchg
dec
or
sub
popf
add
sarb
shl
movsb
mov
inc
divl
adc
stc
out
pop
mov
cmp
outsb
rcll
add
inc
add
and
ja
shrb
repnz
cmp
stos
out
push
mov
or
mov
std
int3
stos
rorl
inc
ds
ret
cli
cmp
sbb
loop
inc
popa
jmp
dec
jae
mov
int3
adc
andb
loopne
outsl
inc
gs
xchg
lods
sbb
xchg
mov
test
test
push
jns
sti
adc
icebp
xchg
mov
xchg
xchg
adc
ss
mov
and
scas
and
sbb
sub
mov
lret
pop
jb
push
pop
mov
loop
or
cltd
dec
and
adc
in
xchg
out
jo
xor
cwtl
or
out
push
and
dec
ret
ja
rcll
pop
xchg
pushf
sub
cmp
or
aam
test
mov
push
mov
sub
out
pop
xor
sbb
jmp
call
dec
enter
xchg
cltd
fidivrl
sub
or
cmp
fnstenv
lds
cmp
and
popa
repnz
add
pop
xchg
or
lock
fsubrs
int
jne,pn
mov
jg
fisubs
movsb
mov
sbb
xchg
add
mov
mov
mov
dec
pushf
clc
into
mov
pusha
or
rorl
xchg
mov
push
sbb
sub
mov
jl
imul
xchg
jo
test
sub
mov
pop
mov
bound
lret
pop
mov
shlb
pop
movsb
jg
scas
cmp
adcb
testb
scas
sub
enter
addl
outsb
push
lcall
mov
mov
sbb
insl
je
pop
pop
aaa
mov
mov
gs
stos
pop
test
insb
mov
les
add
dec
out
es
mov
sti
sarl
inc
lret
sub
leave
cmp
pop
add
rolb
stos
cmp
xor
pop
cli
mov
add
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
dec
inc
test
inc
adc
aaa
cli
adc
inc
stos
push
leave
inc
popf
pop
outsb
pop
lods
cmpsl
xchg
mov
jno
mov
cmp
jmp
push
cmp
loop
mov
pusha
or
fcoml
mov
daa
cmp
sbb
div
pop
cli
rcll
push
sti
push
sbb
adc
push
add
adc
cmp
and
lea
or
jae
and
xor
mov
test
lods
mov
movsl
push
add
mov
jl
xchg
stos
leave
cltd
dec
mov
and
int
pop
mov
aam
stos
bound
scas
add
pop
nop
dec
mov
xor
xchg
sub
jecxz
cwtl
ds
insb
cld
or
mov
lcall
jns
and
sahf
inc
inc
aam
arpl
mov
loopne
push
adc
in
popf
sahf
inc
clc
mov
cmp
aaa
or
sub
mov
aad
enter
mov
cld
mov
sbb
dec
shlb
int3
xor
inc
mov
cmp
rcr
in
xchg
sbb
cwtl
mov
es
dec
sbb
xchg
leave
addr16
mov
fimuls
loop
jae
mov
jmp
and
or
ret
and
push
xor
repz
dec
mov
mov
push
inc
jo
into
inc
call
sbbb
sub
cmp
mov
push
addr16
xchg
push
scas
push
std
movsb
mull
add
int3
cmp
xor
enter
pop
outsb
stc
cli
fcomps
xchg
repnz
ss
xlat
xchg
cmpsb
pop
xchg
dec
roll
xchg
repz
jecxz
pop
mov
cmp
fdivrs
or
xlat
movsl
jnp
adc
into
xchg
push
clc
sahf
cmc
cltd
out
pop
std
pop
loopne
jnp
aam
mov
and
cmp
dec
push
inc
xchg
add
cli
or
pop
dec
add
push
or
mov
xor
pop
sbb
mov
testl
jae
mov
cmp
lock
or
test
fldl
dec
adcl
pushw
nop
xchg
out
lcall
adc
loope
ret
sbb
outsb
fstpt
dec
inc
inc
aam
mov
mov
and
repz
mov
xchg
cli
inc
jp
mov
ret
pop
xchg
fs
sbb
xchg
or
aas
jmp
cmc
jge
adc
jns
mov
jnp
lret
rcrb
dec
fsubr
cmp
adc
decl
out
adc
pop
mov
cwtl
lahf
cld
scas
sub
dec
pop
les
mov
dec
push
adc
jle
fcoml
nop
add
pop
sub
aam
sub
push
scas
jg
xorb
pushf
cmpsl
cmpsl
sub
stos
scas
push
dec
inc
std
add
and
shrb
pop
dec
pop
jle
push
aad
mov
insb
xchg
aam
hlt
xorb
mov
push
nop
mov
rcr
xlat
aaa
adc
into
jae
xchg
out
ljmp
sbb
and
dec
les
sub
lret
das
jg
sbb
cmpb
jnp
add
pop
sub
ljmp
out
pop
sub
cltd
jne
jne
pop
mov
imul
pop
fbld
jno
mov
cmpsb
test
push
xlat
push
push
push
adc
jb
fnstenv
js
insb
jg
test
fisttps
push
fdivrs
enter
inc
sarb
and
inc
out
and
inc
movsb
mov
sbb
mov
mov
movsl
pop
push
or
inc
adc
sbb
mov
cmp
in
lcall
ja
ud2
inc
ja
inc
push
pop
sub
rcr
sar
jecxz
mov
popf
out
or
pop
push
call
fwait
not
mov
or
xlat
jb
ret
xchg
out
mov
inc
push
aas
into
sub
cltd
outsl
imul
pushf
cs
les
clc
pusha
mov
cltd
mov
add
add
and
or
js
mov
sub
adc
aaa
cli
adc
inc
insl
add
in
mov
push
dec
lret
jnp
sub
or
inc
aad
gs
xorb
push
adc
daa
jnp
pop
daa
ret
mov
loop
arpl
nop
add
or
sub
mov
pop
add
sub
jno
jle
jecxz
lret
es
sub
xchg
xlat
adc
cmc
cmp
enter
and
and
and
out
add
jle
repz
testb
and
sbb
push
add
jp
cmp
cmp
aad
loop
fildll
jmp
fidivrl
aas
xor
xchg
fcmovne
and
orb
icebp
cld
clc
ds
andb
ss
shll
subl
mov
in
insb
sub
or
mov
mov
sarb
cli
ss
sarl
cmp
or
hlt
roll
mov
mov
cmp
pop
pop
stc
test
ja
mov
xor
arpl
mov
cmpsl
shlb
rcr
scas
pop
mov
in
push
jbe
xorl
popa
popf
mov
ja
mov
scas
mov
adc
aad
or
jle
adc
jge
xchg
push
push
ljmp
push
cmpsb
jg
nop
add
or
repz
cmp
pop
in
mov
sub
sbb
cmp
jg
scas
or
or
jno
mov
mov
mov
mov
lock
mov
pop
adc
jnp
jbe
dec
sub
sbb
fisttps
push
ret
xchg
sbb
addr16
enter
in
mov
cmpsl
sarl
rcrb
clc
jmp
inc
mov
mov
jo
mov
sti
push
mov
pop
sbb
scas
lcall
cmpsb
fisubrs
mov
mov
mov
sub
in
sahf
insl
ja
jg
mov
jmp
lcall
inc
mov
adc
stc
lcall
dec
sbb
sarl
or
test
sbb
inc
mov
cmpsb
shll
ret
mov
dec
out
pop
add
inc
roll
xor
loopne
mov
dec
mov
and
xchg
sub
cmpsb
push
shrb
testb
shlb
dec
push
jmp
scas
pusha
sub
sub
insl
idivl
inc
loop
das
push
cmp
mov
push
and
clc
dec
lret
or
pop
mov
mov
lcall
cmp
jnp
add
cli
cwtl
cmp
mov
mov
dec
pop
mov
jg
xchg
cmpsl
repz
mov
mov
movl
xchg
dec
lret
loop
adc
push
xchg
addr16
jo
sti
cli
jecxz
ja
pop
xlat
push
xchg
dec
jns
repnz
pop
and
test
mov
pop
lahf
push
push
leave
ret
jle
push
or
pop
movsl
popf
push
loope
pop
adc
adc
in
cmp
jge
imul
shrl
jno
mov
jecxz
arpl
out
inc
fcmovnbe
fs
mov
jne
mov
addr16
cmp
data16
push
ret
dec
sbb
ja
add
out
es
in
mov
movsb
xor
fwait
mov
imul
sahf
add
outsl
rcrb
inc
cmp
dec
jmp
mov
in
adcl
sub
pop
jae
call
mov
add
sbb
std
cmp
push
insb
scas
pop
xor
pop
dec
cs
inc
inc
enter
dec
mov
fmul
shrl
adc
mov
cmc
xorb
lret
mov
pushf
in
int
test
data16
and
test
sbb
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
push
mov
jnp
sbb
adc
cli
adc
enter
dec
fsubrl
adc
adc
sbb
jb
dec
addr16
sbb
sti
out
enter
xchg
pop
in
into
pushf
scas
mov
cmp
pop
aam
movsb
push
sbb
sub
in
sarb
pop
sbb
loope
xor
mov
mov
fidivs
mov
leave
cmpsl
fs
lret
sub
arpl
inc
and
jge
arpl
jno
es
test
pop
ret
test
cmp
mov
jae
inc
and
lds
mov
dec
push
out
and
test
popf
int3
data16
aaa
xchg
add
mov
mov
push
dec
pop
sub
rcll
test
loop
bound
jae
outsb
pop
push
aam
jmp
adc
push
xor
mov
gs
cmc
sbb
push
jmp
pop
lods
cmp
mov
xchg
frstor
pushf
pop
xchg
pop
loopne
insl
adcb
notb
sbbl
cld
int
xchg
mov
mov
mov
loope
cmp
inc
pop
xor
cltd
pop
pop
fmuls
nop
add
das
cmp
pop
fstps
cwtl
pop
dec
mov
push
mov
add
jo
movsb
insb
or
push
stos
pop
inc
xlat
addr16
lret
out
pop
push
negl
mov
adc
ja
ret
in
cmovl
loop
sbb
pop
shrb
les
push
or
insb
jecxz
sub
pop
sbb
dec
pop
jmp
pop
fcmovbe
and
mov
je
mov
mov
sbb
movsb
fcomi
ja
push
call
jl
push
imul
cli
bswap
aad
push
std
pop
inc
test
stos
ss
pop
stos
inc
pop
into
push
es
and
pand
push
int3
pop
pop
push
inc
dec
cs
hlt
inc
test
xchg
fcomps
out
sub
push
fistps
pop
in
adc
and
out
bound
hlt
out
aaa
cmpsl
jmp
adc
push
pushf
lret
decl
mov
jno
dec
xor
mov
ja
jbe
add
adc
int
aas
rclb
rcl
pop
pop
cmc
lea
mov
pop
fmul
shlb
dec
mov
pop
rcrl
fildll
loop
dec
jg
xchg
inc
cwtl
out
xor
je
daa
ret
inc
cmc
adc
icebp
scas
mov
inc
and
and
mov
jmp
or
bound
mov
outsb
pop
pop
dec
in
imul
mov
outsl
pop
popa
test
pop
mov
les
stos
mov
dec
mov
sub
or
push
decb
jo
mov
rcrb
jecxz
sub
cpuid
test
or
dec
pop
fisttpl
dec
call
push
ja
in
movsl
inc
out
cmp
xor
out
xchg
icebp
or
sub
nop
mov
mov
push
cmp
lods
inc
in
leave
dec
call
jno
xchg
int
es
andb
adc
pop
ss
iret
sbb
les
fbstp
mov
ja
test
push
movl
xchg
and
cmc
mov
mov
inc
mov
push
ret
lock
lsl
xor
getsec
and
xchg
mov
xchg
sub
lret
jl
pop
in
mov
or
inc
pop
insl
ret
push
imul
pop
sti
xchg
sub
imul
js
sbb
mov
push
sti
or
xor
and
sarl
mov
pop
jns
jle
ret
and
pop
es
cmp
sbb
mov
push
push
mov
push
movsb
push
stc
inc
insb
ljmp
inc
add
enter
push
cmc
and
mov
mov
dec
scas
enter
adc
ja
add
into
sti
and
repz
inc
aas
pop
mov
cmp
xor
lods
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
call
and
adc
and
xchg
test
inc
pop
fwait
adc
ja
fbstp
xor
inc
mov
lods
jne
cmp
cli
mov
push
jmp
mov
mov
fs
xchg
loop
repz
into
ja
dec
rclb
dec
into
mov
cwtl
ljmp
inc
jle
fxch
jnp
pop
sbb
sbb
scas
mov
mov
sahf
sbb
enter
es
push
repz
shl
mov
push
cs
fwait
push
rclb
enter
add
in
daa
pop
pop
pop
loop
sub
pop
loope
mov
es
inc
jb
jo
inc
lds
ljmp
pop
into
iret
rorb
in
push
add
mov
xchg
or
pop
xor
mov
pusha
mov
rolb
or
cld
push
mov
es
sub
jmp
mov
gs
shl
cmp
cmc
into
adc
dec
sub
test
or
mov
std
lods
inc
daa
cmp
mov
jp
loopne
inc
lahf
mov
xchg
mov
mov
mov
mov
dec
xchg
clc
fadds
jl
mov
mov
rolb
pop
pushf
arpl
sub
xchg
dec
stc
loopne
cld
fcomip
in
rorb
mov
movsl
mov
icebp
popa
push
stc
sbb
je
mov
outsb
insb
pop
jbe
and
jg
adc
out
rorb
sub
add
in
adcb
aas
shll
cltd
lret
rcrl
fisubrl
or
push
push
popf
movsb
add
sahf
fcomps
scas
fstl
aas
test
shl
push
mov
out
xor
imul
rclb
stc
or
in
clc
cmp
fnstcw
push
push
adc
hlt
mov
cltd
push
mov
pop
insl
jle
mov
ljmp
adc
sbb
scas
nop
adc
mov
mov
mov
cmp
inc
push
mov
inc
inc
inc
je
xor
js
and
xlat
and
aad
cmp
fiadds
jle
aas
test
fcomps
mov
cmp
gs
jmp
sub
scas
dec
lods
xchg
out
sbb
rorb
fwait
push
pushf
rcrb
xchg
aaa
jle
sbbl
bound
dec
cmp
and
loop
test
pop
jg
xlat
data16
adc
sub
xlat
xor
inc
out
out
inc
xchg
sarl
inc
push
gs
xor
xor
jmp
sarl
add
loopne
mov
sbb
inc
adc
icebp
lahf
mov
add
sbb
sahf
cli
cmpsl
andb
push
add
aad
mov
jb
dec
cmp
xor
xlat
fcomps
dec
jecxz
std
push
cli
cmp
aaa
push
shlb
cmpsb
pop
xchg
pop
push
or
dec
add
test
in
lock
and
xlat
pop
sub
mov
adc
lret
pushl
clc
cmp
shll
jo
hlt
mov
hlt
xchg
add
arpl
icebp
mov
inc
arpl
xchg
adcl
pop
sub
mov
lea
incb
adc
inc
pop
test
mov
jno
orb
xlat
addl
aas
inc
std
push
jg
cmp
fistps
xor
jmp
outsl
es
enter
adc
sub
xor
pop
xchg
imulb
lds
xor
gs
jnp
mov
js
pop
in
in
sahf
ljmp
int3
outsb
movl
pop
lret
rolb
add
add
dec
add
add
ss
ds
xor
ret
push
inc
pop
jnp
or
adc
adc
xor
int
out
in
aas
popa
ja
mov
outsb
das
ljmp
lcall
push
popf
into
imul
xlat
aam
jno
push
jae
mov
mov
mov
fldcw
inc
inc
dec
ja
adc
mov
sbb
jg
std
ljmp
imull
pop
mov
test
sub
inc
jb
adc
fcompl
pop
dec
and
dec
sub
add
and
inc
sti
mov
jns
jbe
pusha
sbb
mov
gs
ficomps
or
sub
xchg
mov
jge
cmp
jecxz
dec
push
fbstp
jmp
push
jmp
mov
fstpt
icebp
mov
add
fiaddl
xchg
xchg
cmpb
sbb
pusha
loope
mov
mov
sbb
mov
movsb
std
nop
pop
push
stos
adc
and
dec
mov
cmp
mulb
fnsave
sub
xchg
mov
loopne
dec
repnz
das
loopne
xor
cmpsb
jle
cli
xor
xlat
rolb
and
iret
stos
xchg
mov
fisttpll
cmp
mov
cmp
mov
push
je
shll
cli
mov
xchg
cmp
and
fs
aaa
idivb
and
popf
shrl
push
mov
and
daa
sub
lret
rcl
lahf
jmp
adc
stos
adc
call
xor
xchg
test
clc
lcall
pop
mov
dec
pop
movsl
dec
adcb
sbb
push
fs
cs
insl
push
testl
pop
notb
mov
ret
and
mov
add
pop
adc
jle
aam
mov
pop
xchg
inc
cltd
int
fdiv
int
loopw
mov
lds
insl
add
sub
mov
out
cmp
arpl
stos
repz
fs
lret
in
out
pop
pop
inc
fwait
jl
hlt
mov
roll
and
xor
sbb
sarl
pop
xor
ret
les
xor
pop
or
cmp
cltd
cmp
leave
pop
jnp
adc
icebp
pop
subb
inc
lods
incb
movsb
mov
popf
insl
mov
jg
xchg
pop
into
push
add
and
cmp
pop
rcl
lods
push
daa
popa
lret
xchg
or
push
ret
xchg
cmp
out
hlt
mov
movsl
xor
sti
shll
mov
stos
pop
out
xchg
shlb
nop
mov
sbb
fists
push
cmp
outsl
insl
or
push
mov
adc
mov
and
test
add
or
mov
mov
lds
lcall
cli
cmp
and
add
mov
mov
mov
adc
jmp
out
dec
lds
dec
adc
flds
ds
fadds
and
lret
or
repz
insb
add
aad
mov
inc
jl
fs
arpl
movsl
std
xchg
outsb
dec
dec
in
pop
fucomp
pop
sti
sbb
push
mov
mov
dec
addl
stos
repnz
xor
sahf
pushf
and
js
cs
imul
pop
mov
out
insl
cmpsb
lea
inc
js
inc
sbb
push
and
enter
insb
push
adc
adc
cmpsb
subl
outsb
add
adc
lret
add
push
loop
test
dec
aad
push
seta
xchg
cmc
ljmp
shlb
dec
mov
mov
orb
stos
jo
jo
test
jb
jge
imul
fwait
repnz
inc
jnp
xchg
data16
pop
mov
inc
int3
mov
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
lret
dec
fisttpl
adc
xchg
cli
adc
fs
adc
pushf
xor
call
lods
jecxz
rcl
adc
pop
mov
out
test
add
sbb
hlt
sub
mov
je
loope
add
iret
pusha
push
les
push
scas
in
rcrl
mov
sub
fbld
cmc
cmp
je
xchg
fwait
mov
pop
cmc
xchg
xchg
and
mov
mov
and
xor
add
pop
pusha
jno
mov
cmp
mov
mov
jne
push
stc
dec
movd
popa
cltd
stc
pop
xchg
push
ja
outsl
mov
mov
inc
sub
mov
xor
popa
add
lcall
lret
sub
fdivr
aaa
jl
cli
insb
cwtl
xlat
push
and
in
cmpsl
or
shlb
xchg
mov
lock
lahf
jecxz
iret
mov
jno
cmp
dec
jns
in
out
cmp
fs
mov
mov
int3
or
jl
cmp
pop
in
ljmp
inc
fisttps
mov
dec
inc
stos
xchg
pop
fdivrl
scas
outsb
scas
push
mov
mov
xorl
sbb
push
adc
fisubl
jle
jp
push
shr
adc
xchg
push
imul
cwtl
mov
mov
mov
std
adc
push
ja
sbb
test
mov
push
push
jle,pn
pop
push
sbb
bswap
xor
insb
mov
xor
mov
and
inc
sub
push
mov
push
popf
inc
and
cmovb
push
inc
shr
int3
js
xor
scas
popa
in
mov
pop
pop
mov
xor
fsts
je
push
test
cwtl
cmp
adc
iret
pop
pop
add
lret
pop
jg
fsubrl
mov
loop
lock
andl
outsb
hlt
adc
mov
xor
int
xor
add
lret
js
mov
jb
js
xor
mov
push
fxch
dec
cmpsl
test
inc
pop
sub
xchg
pop
add
addr16
mov
dec
mov
pop
pop
jmp
mov
xchg
inc
enter
fsubrl
jp
std
imul
sub
pop
negl
adc
cwtl
xor
shll
pmulhw
jecxz
pop
inc
ret
stos
add
fwait
jae
out
or
xchg
jo
cmp
daa
sti
mov
hlt
ja
dec
jbe
xchg
dec
xchg
imul
hlt
add
jae
push
bound
sub
aaa
or
and
rcll
shll
jne
dec
add
jae
loopne
jns
dec
out
xor
cwtl
xor
sti
push
push
inc
mov
xor
inc
mov
imul
jne
insb
xchg
cmp
jecxz
add
add
rcr
push
mov
xchg
sar
pop
pop
xchg
ja
dec
data16
jge
mov
les
fsubr
ds
push
lcall
filds
adc
lea
inc
mov
out
push
stos
mov
mov
movsb
ret
ss
repz
push
mov
ljmp
test
clc
cmpsb
and
data16
mov
mov
mov
jge
sub
sti
je
sarb
mov
cmpsl
dec
pop
movsb
sbb
mov
in
fiaddl
mov
fsubr
cmpl
lret
inc
popa
loop
iret
mov
mov
in
iret
xchg
cmp
jl
lea
repz
add
lods
mov
rorl
adc
mov
outsl
popf
xchg
out
loopne
bound
aam
outsb
scas
cmpsl
mov
shr
sbb
sbb
and
sbb
mov
dec
sub
movsl
fcomp
jns
push
outsl
mov
add
call
int3
push
sbb
jecxz
fsubs
push
and
movl
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
fisubs
adc
js
xlat
ficoml
test
jbe
pop
push
jo
divl
mov
repz
inc
outsb
add
add
andb
mov
mov
push
pop
test
in
push
in
xchg
cltd
push
xor
mov
das
shrb
or
jl
mov
jmp
add
push
xor
cmp
or
in
jns
or
xlat
add
out
sub
pop
je
out
push
movsl
jae
fidivrs
scas
add
sbb
test
ja
stos
lods
sbb
xchg
and
popa
adc
inc
arpl
mov
sub
pop
insb
aas
pop
gs
adc
stos
inc
and
xchg
xchg
scas
sbb
push
pop
xchg
mov
pop
jp
sub
pop
loopne
test
adc
lcall
add
xchg
mov
int3
outsl
xor
call
rclb
fcomps
insb
jecxz
adc
insl
rol
jl
aam
aaa
and
pop
nop
sbb
in
sub
ret
ret
pop
sub
push
push
mov
xchg
xor
jbe
nop
or
enter
lods
roll
and
popa
sbbl
enter
inc
enter
add
pop
push
add
xor
fs
hlt
sbb
movsl
fmul
push
pop
jmp
cmpsb
cmc
adc
push
test
cmc
decl
aaa
inc
subl
insl
mov
mov
clc
cmp
int3
or
rcrl
jecxz
orb
xor
stc
vsubss
mov
add
icebp
jmp
out
sub
loopne
sarb
insb
or
and
mov
in
insl
test
pusha
and
xchg
gs
jnp
jb
inc
mov
notl
imul
mov
movsb
inc
loopne
mov
sbb
cli
rcll
inc
or
std
dec
add
in
sub
jb
mov
xchg
jp
pop
ss
xor
xchg
bound
cmpsb
push
in
fdivrs
in
sbb
sahf
mov
push
pusha
sbb
into
or
mov
mov
sub
dec
mov
shlb
dec
mov
push
push
lret
js
popf
es
shlb
rcl
pop
icebp
mov
sahf
add
iret
daa
pop
out
lods
fcmovne
cmpsb
sahf
data16
push
or
inc
mov
das
fstp
jmp
push
inc
lret
into
lods
cmpsl
mov
dec
add
stc
dec
shl
push
cmpsb
mov
xchg
out
gs
or
jle
mov
movsl
and
scas
mov
xchg
inc
mov
or
lods
jl
adc
inc
xor
mov
popf
cs
lret
jmp
cli
jge
dec
inc
shrb
ss
fwait
xor
push
mov
hlt
rcrl
xor
shlb
scas
dec
stc
cwtl
gs
clc
cmp
mov
flds
or
frndint
aaa
mov
xchg
insb
call
xchg
fiaddl
xchg
sbb
popa
push
cmp
push
call
ret
or
out
xorl
daa
jg
loop
sbb
cltd
fidivs
add
xlat
int
test
int3
dec
push
push
test
jecxz
jb
lret
fstps
mov
jle
push
mov
and
cmp
xchg
add
ljmp
cmc
xor
fwait
mov
fnsave
xchg
sbbl
sub
pop
dec
les
sub
sarl
dec
lahf
cmpsl
pop
repz
aam
outsl
push
stc
dec
in
shll
stos
sti
roll
fwait
in
mov
push
aad
roll
scas
push
mov
into
add
pop
popf
cs
int
data16
pop
movl
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
mov
xchg
cli
adc
loopne
xorb
stos
je
stc
ret
or
ja
sbb
inc
fcoms
sahf
add
and
fs
push
pop
inc
insl
jb
pop
inc
add
out
pop
movsl
cmp
cmp
pop
das
imul
mov
insb
mov
adc
cmp
xor
push
jge
cs
jae
sub
jb
push
nop
mov
jo
cld
call
xchg
jle
jae
xchg
les
sub
push
lea
cmp
dec
mov
jbe
xor
xor
out
in
hlt
lock
push
pop
jge
stc
sbb
dec
xor
outsb
shrb
sbb
and
add
mov
mov
fcomps
test
adc
pop
movsb
shrl
loopne
mov
or
sbbb
ficompl
lock
movsb
ljmp
xor
dec
add
xchg
mov
scas
loop
loopne
jle
jnp
push
xlat
mov
xchg
cld
cmp
cmp
adc
add
push
mov
adc
dec
fldcw
aad
data16
cmp
test
jb
mov
mov
mov
jmp
jne
adc
mov
inc
push
xchg
mov
sub
lret
dec
mov
lret
and
or
test
rcrb
out
addr16
add
loopne
pop
jg
push
mov
push
loope
cld
push
jecxz
push
xchg
jmp
imul
imul
sub
inc
fs
or
fwait
stos
mov
xchg
push
mov
mov
jns
test
dec
gs
ss
pop
ljmp
mov
js
in
cltd
adc
push
lods
cmp
jns
in
sbb
mov
sub
adc
cwtl
out
sub
lahf
filds
icebp
pop
fisubrs
mov
lret
icebp
sbb
push
add
sbbb
mov
jmp
push
cmp
test
cmpsl
pop
outsl
lods
lret
sbbb
in
sub
dec
mov
or
clc
notl
inc
jl
bound
andb
and
ret
adc
and
jb
or
xor
inc
in
lahf
and
nop
sbb
push
inc
lret
aaa
sbb
jmp
jb
lcall
push
push
sub
aas
push
movsl
lcall
ja
mov
popf
adc
jne
lret
movsl
cltd
fnstcw
popa
sub
faddl
mov
and
out
sub
inc
dec
push
popf
insl
push
jg
pop
mov
adc
pop
or
lods
dec
push
jl
testl
mov
xchg
pop
scas
lods
mov
inc
xchg
out
jecxz
inc
fs
mov
lods
jae
dec
mov
adc
push
push
cltd
mov
outsb
fcmove
repz
xchg
ss
or
fcomps
sbb
out
rcl
lds
cvtps2pi
mov
xchg
inc
aad
inc
js
mov
sub
mov
insb
ds
in
push
pop
pop
or
cmp
sub
xchg
test
sub
fstpt
iret
mov
mov
jl
mov
push
test
xchg
scas
out
mov
xchg
js
push
shrl
negl
mov
stc
lock
cmpb
les
in
pop
es
sub
outsl
movsl
clc
es
rcll
dec
dec
test
lcall
mov
mov
push
xchg
mov
sub
ljmp
push
out
cltd
cmp
bound
jl
fcmovne
lcall
iret
aaa
pop
rcr
sbb
push
ret
xor
stc
shr
mov
jge
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
pop
sbb
mov
xchg
cli
adc
into
lgs
fsub
ljmp
dec
pop
mov
jbe
cmc
or
scas
jne
ret
inc
pop
out
xor
je
inc
add
jp
cmpsb
pop
repz
mov
fsubrp
cmp
adc
adc
adc
push
push
mov
gs
ljmp
lds
inc
push
sub
jg
addr16
jno
bound
mov
adc
lods
pop
xor
lea
xor
xor
in
cmc
xor
jno
add
inc
mov
push
bound
add
jnp
icebp
leave
push
jecxz
cmc
ss
lahf
scas
lcall
sub
or
rolb
mov
push
jb
rcl
test
rcl
loope
cmc
push
lcall
xorb
arpl
cmpsb
into
add
xchg
push
outsb
loopne
rcrl
es
fstpt
mov
fsub
fldl
jno
es
pusha
push
mov
cmp
adc
cmp
test
loope
arpl
xchg
dec
push
adc
cli
nop
sbb
inc
or
sub
xchg
js
aad
stos
pop
test
adcb
adc
push
cs
push
ja
xchg
inc
imulb
insl
pop
cld
cmovl
les
jne
dec
stos
aas
adc
cmp
in
sub
jne
dec
imul
movsl
in
mov
push
dec
pop
out
test
lods
adc
push
mov
inc
pop
lahf
sbb
stc
movsl
std
sub
pop
add
cmpsl
js
or
adc
cmp
or
add
pop
out
xor
stos
out
jecxz
fmul
cs
adc
xchg
cld
fsubrs
lods
je
aad
jae
imul
xor
mov
or
mov
loope
pop
mov
loopne
incb
inc
aas
test
cmp
or
sub
mov
xchg
jle
cwtl
cli
roll
fadds
sti
dec
iret
cmpsb
xchg
cmp
imulb
jne
add
xor
lcall
add
lcall
fdivrs
add
mov
outsb
mov
icebp
lds
xchg
mov
cmp
adc
pop
xor
pop
stos
inc
ljmp
stos
rep
sbb
enter
mov
cltd
push
lock
xchg
mov
fldcw
iret
popl
mov
loope
pusha
jg
mov
and
ljmp
call
push
bound
cmp
daa
pop
mov
fs
out
push
mov
ret
adc
sar
dec
das
cmpl
xchg
sti
sbb
sbb
fincstp
pop
push
and
and
ljmp
and
mov
xchg
fisubrs
fisttpl
imull
mov
cmc
xchg
mov
lret
xchg
or
aas
repz
jecxz
leave
mulb
insl
ficompl
fnstsw
and
mov
xor
mov
out
sbb
dec
es
inc
ljmp
shl
lods
lods
imul
adc
jmp
test
scas
ljmp
mov
mov
xor
stc
mov
xchg
lret
sub
mov
leave
aad
push
fs
sbb
pop
mov
sbb
adc
mov
or
pop
pop
xor
sbb
xchg
push
pushf
pop
out
ficoml
adc
cmp
pop
lea
push
fwait
sub
add
jno
mov
mov
adc
or
popf
mov
pop
in
inc
cmpb
daa
push
aas
popa
mov
clc
aad
jmp
testb
jbe
fisttpll
daa
dec
lods
enter
fs
dec
and
rcrl
xchg
clc
lahf
fucomp
out
add
push
mov
das
popa
sbb
adc
sbb
inc
into
and
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
push
xchg
pop
lds
clc
adc
adc
mov
or
pusha
and
push
sbbl
outsl
xchg
push
jmp
cmpsb
data16
jbe
jge
push
dec
adc
push
bound
loopne
mov
add
pushl
add
aad
cwtl
jbe
xchg
sbb
adc
xchg
add
push
fiadds
fdivs
cmp
add
scas
scas
mov
dec
movsl
xchg
lahf
sub
dec
pop
pop
hlt
push
add
push
sti
push
les
mov
cmp
aad
test
mov
ljmp
loopne
jl
fisubrs
xchg
ds
test
mov
mov
and
imul
iret
aas
xor
inc
adc
jmpw
ficoms
das
outsl
xlat
sub
or
ds
lcall
movsb
fildl
dec
pushf
cmpsl
jle
cmc
sbb
fs
mov
dec
inc
or
scas
div
pop
or
aam
jo
sub
aaa
cld
pop
scas
jmp
scas
ret
jg
add
inc
shlb
push
icebp
cs
sahf
mov
movsb
push
push
clc
adc
and
stos
cltd
jmp
andb
je
or
loopne
hlt
push
hlt
mov
es
or
cmc
daa
cltd
add
sarl
xchg
jl
push
cwtl
jns
push
inc
mov
dec
and
movsb
hlt
jne
popf
xorb
addl
mov
aam
mov
mov
lods
sub
push
add
sbb
mov
push
cmp
lods
pushf
xchg
mov
xor
stos
std
fwait
inc
lahf
jne
loope
sub
jecxz
inc
daa
mov
stos
cmpsb
lds
lret
idivb
push
int3
inc
gs
xchg
mov
jns
call
or
mov
xchg
jno
rcrl
test
inc
ja
icebp
xchg
cmc
and
sub
cmp
push
into
into
xchg
pop
or
les
inc
fcom
jae
jnp
ret
enter
jae
inc
leave
cmp
cmp
enter
andb
repz
cmpsl
add
jmp
out
inc
popa
cmp
push
shr
xchg
mov
pop
lret
int3
xadd
inc
or
test
lods
mov
xchg
or
fisubs
popa
sbb
les
test
fwait
add
and
or
sbb
push
pop
loop
lea
add
dec
sbb
imul
dec
adc
lcall
scas
sbb
mov
xor
add
sbb
nop
aaa
imul
dec
add
jne
nop
ds
nop
sub
pop
push
bound
fcmove
jae
jmp
das
mov
add
test
mov
ds
push
mov
xchg
pop
ds
ds
mov
mov
mov
lahf
push
sub
cld
insb
stos
lret
push
mov
inc
test
add
je
push
cmc
inc
scas
dec
xor
sbb
sbb
cmpb
pop
push
ljmp
mov
mov
repz
cmc
xor
fucomp
cmp
jg
imul
std
in
insl
orl
pop
xchg
jbe
call
pop
test
cmp
cwtl
push
fsubs
mov
and
sar
dec
or
int
pushf
insl
xor
mov
mov
lea
xorps
sbb
mov
mov
daa
mov
shlb
mov
jno
sub
push
jecxz
fbstp
sbb
ljmp
xchg
mov
out
sbb
repz
xor
jp
aam
ret
int3
mov
push
mov
in
pop
outsb
cwtl
mov
jb
cltd
push
or
inc
aad
dec
inc
or
outsl
jns
cmp
dec
rolb
gs
cld
push
jno
lods
in
ds
push
xor
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
clc
adc
mov
andb
mov
sbb
push
lods
fcomp
jns
sub
cmp
aad
in
sbb
mov
pop
mov
pop
dec
sub
push
inc
rcl
sbb
dec
repnz
cmp
movsb
jle
iret
mov
xchg
dec
test
xchg
push
dec
push
xchg
scas
jle
inc
ret
flds
addr16
jbe
cld
outsb
jne
push
clc
fimull
mov
sub
xchg
ja
sti
mov
imul
push
int3
adc
scas
add
pop
or
enter
or
cmp
pop
xor
mov
aaa
mov
das
inc
jl
dec
lods
aas
out
cmp
xor
xchg
mov
add
mov
scas
or
xor
pop
hlt
ja
jecxz
lock
push
xchg
loop
repz
cmp
jmp
stc
xor
adc
cwtl
adc
mov
or
popa
xor
adc
jne
daa
cli
pop
mov
push
shll
push
push
dec
jle
pushf
shll
and
dec
push
cmpb
sub
jmp
addr16
pop
shlb
in
push
sub
adc
test
xor
mov
cli
pop
or
idivb
mov
cmp
xor
test
andb
dec
pop
cmc
out
xor
add
cmp
lock
loop
loope
lock
push
and
adc
dec
mov
scas
lock
scas
pop
sub
cmc
inc
lahf
jbe
fcomip
push
sarb
inc
or
fsubs
cmpsb
add
ret
enter
out
stc
pusha
mov
adc
lock
or
cmp
lcall
push
sbb
fdivrs
out
sbb
pusha
mov
add
in
mov
mov
add
lret
adc
and
sbb
imul
mov
ljmp
loop
pop
adc
add
fidivrl
cmp
push
jo
sub
mov
pop
inc
clc
sub
jo
jl
pop
popa
in
fistl
dec
add
jnp
scas
fldcw
fmull
adc
mov
test
adc
out
mov
and
shlb
xor
enter
fidivrs
sbb
outsl
mov
cmp
mov
cmp
gs
adc
add
fidivrl
fdiv
mov
scas
mov
cmp
scas
xchg
ret
cwtl
into
outsl
leave
lahf
or
pop
adc
mov
sub
inc
idivl
shlb
test
xchg
sbb
xchg
pop
imul
pop
cwtl
test
xchg
push
lcall
in
and
or
out
out
jl
jge
ss
loopne
dec
scas
mov
lods
loopne
movsl
jno
out
rorb
shl
xchg
pusha
xchg
and
dec
lock
sbb
jno
popf
jbe
stos
jmp
sub
xchg
int3
dec
pop
js
fimull
dec
mov
cwtl
adc
sbb
or
pop
jle
mov
push
das
into
cmp
pmullw
rcrl
cld
and
add
mov
and
int
mov
mov
insl
push
jnp
repnz
sub
lods
mov
mov
aas
xchg
test
scas
jmp
sbb
pop
mov
sbb
sub
push
test
adc
jb
cmpsl
push
adc
sbb
hlt
cmp
dec
mov
arpl
fcoml
pop
in
sbb
inc
adc
cmp
and
lea
into
loope
or
mov
inc
sbb
imul
sahf
mov
jne
ret
outsb
mov
cli
inc
mov
xor
movl
movl
movl
movl
mov
mov
jmp
and
mov
out
jno
mov
xchg
in
adc
inc
int3
loop
aaa
and
movsl
stos
ss
mov
mov
fstpt
daa
insl
push
xchg
movsb
mov
in
mov
rolb
sahf
jno
sub
mov
ss
mov
bound
and
cltd
jmp
in
sbb
ja
and
mov
mov
dec
push
pop
outsb
push
add
push
jbe
pop
xor
push
shrb
sbb
xor
out
jne
or
js
lods
int
mov
jno
lea
jmp
in
xor
jae
sub
mov
cmp
xlat
mov
fiaddl
test
add
and
jns
jmp
bound
leave
in
cmp
lods
data16
add
cmpsl
add
cmpsl
das
mov
jg
sbb
fldcw
pop
lds
dec
scas
in
in
nop
fnstenv
outsb
lcall
rorb
jmp
xchg
add
cld
test
nopl
popa
mov
sub
bswap
ficomps
ficompl
cmpsl
push
sbb
pusha
js
pushf
data16
lds
push
xchg
and
jg
out
mov
fs
jbe
repnz
rorl
insl
test
inc
sbb
adc
test
xchg
inc
xchg
pop
push
mov
out
lret
das
inc
mov
jae
xchg
pop
pop
in
mov
and
and
fwait
cld
outsl
mov
insb
add
lret
jl
sbbb
pop
iret
xchg
jae
loopne
mov
mov
or
mov
iret
cmp
add
fidivrs
das
sti
sub
and
mov
cmp
lods
adc
and
popf
sub
arpl
sbb
or
pop
lea
sub
pop
sub
mov
mov
jge
test
lea
or
icebp
pop
add
adcl
stos
cmp
or
pushf
icebp
insb
int
push
pop
adc
ja
fmuls
push
mov
mov
in
mov
leave
imul
jl,pt
mov
mov
mov
popa
push
out
add
lcall
in
js
push
dec
xor
popa
or
int
jns
out
push
mov
jmp
lcall
and
adc
mov
sub
mov
sahf
cld
jns
mov
aas
and
test
call
mov
xor
pop
mov
cmc
sub
in
push
add
scas
andb
add
stos
cmp
mov
mov
cld
dec
mov
test
sti
bound
in
pusha
mov
jns
jns
dec
mov
cmc
or
lock
xchg
clc
jnp
sub
lret
dec
and
xchg
push
adc
mov
pop
mov
jne
lahf
loop
pop
daa
xor
divb
rolb
mov
and
test
fimull
jno
mov
lahf
dec
in
scas
int3
movsb
cld
cld
jo
mov
mov
inc
push
inc
sbbl
aad
mov
xchg
mov
or
cmp
inc
jge
int3
jno
jecxz
jae
sbb
js
mov
jno
lock
adc
cli
out
jno
jmp
into
push
loop
je
cmp
fsubrl
int
out
in
cmpsb
aam
cmp
pop
fmull
xor
sbb
std
fnstsw
pop
loop
fwait
pushw
fidivrs
fmul
int
loopne
fidivl
hlt
call
insb
loope
jae
repz
add
xchg
and
add
sub
in
or
cld
or
fildll
je
add
jae
stos
imulb
and
shrl
rorb
and
pop
sahf
push
add
jne
push
jp
add
xor
mov
jmp
out
mov
xchg
stc
mov
gs
pop
int
adc
bound
cmp
mov
push
ret
inc
in
movsb
imul
push
mov
or
adc
fs
lret
and
rol
arpl
cmp
filds
sbb
mov
fidivrl
int
pop
fs
cltd
cmc
push
mov
pop
pop
mov
int
pop
cmp
test
or
jo
shr
ret
les
mov
ret
pop
pop
leave
mov
adc
xor
shrl
add
fldt
jo
mov
inc
mov
sub
insl
in
hlt
inc
dec
sbb
les
fnstenv
loopne
sub
push
xchg
dec
sbb
scas
orl
mov
sub
mov
mov
xor
xor
std
cmp
data16
jnp
pop
adc
mov
cmp
pop
sub
pop
ds
jle
repz
mov
mov
mov
xchg
push
or
out
mov
mov
jmp
jb
adc
mov
fists
lcall
mov
mov
orl
aas
stc
jge
scas
pusha
movl
mov
lahf
push
cli
jnp
cltd
outsb
sbbl
pop
and
sbb
xchg
das
sarb
xor
sbb
int
mov
jg
pop
or
fistl
and
cli
popa
xchg
fsubr
or
dec
mov
jg
dec
cmp
mov
mull
outsb
into
es
inc
leave
je
in
insl
fimull
xchg
call
jb
mov
rol
dec
xor
or
mov
jne
shll
sbb
loope
mov
pop
icebp
arpl
mov
pop
lds
push
cmpsl
pop
mov
divl
cmc
rorb
push
fwait
dec
fimuls
push
add
leave
fldcw
jae
in
xchg
sub
add
jo
sbbb
aam
je
sub
and
xor
pop
add
jb
lods
mov
sub
subl
sub
fcompl
xchg
cs
ljmp
xchg
push
cmc
jmp
push
adc
inc
push
mov
lret
sbb
stos
and
push
inc
int3
pop
sbb
cmp
jp
sub
mov
jae
loopne
dec
jl
mov
addl
inc
cltd
fimuls
and
pop
push
stos
inc
sbb
fdiv
dec
rorl
cmp
dec
push
mov
xorb
push
out
fcoms
mov
test
adc
pusha
cmp
push
fsubl
sub
into
out
cli
enter
gs
std
leave
adc
jbe
mov
pop
jg
adc
pop
pop
fnstsw
mov
jecxz
cmpb
dec
jle
cwtl
loope
and
dec
in
je
loop
popa
out
ja
stos
sbb
mov
xor
adc
dec
in
sub
cmp
mov
je
xor
or
adc
in
pop
xchg
lods
das
les
xchg
pop
out
pushf
aam
in
ds
adc
mov
pop
adc
jg
cmp
ds
inc
push
xor
xchg
sub
cmpb
jno
pop
fcmovnb
cli
mov
add
popa
mov
dec
hlt
push
scas
mov
in
dec
mov
xor
xor
push
sub
lcall
mov
lret
je
nop
enter
test
sbb
adc
roll
insl
aaa
add
call
pop
shrb
push
add
test
cmp
aam
test
push
mov
lcall
ja
test
push
jg
inc
loopne
or
aaa
clc
les
das
fldl2t
pusha
lret
and
mov
lret
loop,pt
pop
lods
aaa
jb
ror
add
sub
jo
and
jno
in
push
inc
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
push
mov
cli
adc
jne
push
pushf
inc
adc
adc
ljmp
push
mov
out
and
bswap
int
dec
mov
clc
xor
mov
cli
sub
lds
ljmp
ss
shl
int
or
sub
cmpsl
cltd
lcall
lock
loop
or
pop
push
inc
mov
push
scas
mov
arpl
add
mov
sub
loopne
shl
sbb
inc
cmp
test
push
mov
add
cmp
out
in
in
int
jnp
test
mov
push
xchg
mov
dec
sti
mov
insb
mov
bound
fstpt
cmpsl
sbb
inc
data16
dec
int3
jg
jb
push
mov
enter
sbb
adc
mov
arpl
sbb
loope
dec
inc
and
push
pop
pop
jnp
subb
xchg
pop
js
es
mov
dec
rorl
mov
xchg
aam
xchg
in
mov
lds
sub
mov
xchg
xlat
enter
movsb
call
mov
xlat
pop
adc
imul
ljmp
pusha
add
les
sbb
ljmp
test
dec
xor
cmc
test
into
jge
loope
push
lret
pop
je
shrb
shr
ret
mov
or
jbe
into
mov
pop
jo
mov
cmp
aaa
sub
notb
jmp
pushf
popf
pop
push
xchg
enter
xorb
dec
jmp
testb
add
xchg
push
mov
cmpsl
adc
ffree
test
and
push
xor
dec
cs
xor
ret
xchg
jne
pop
je
scas
jecxz
gs
mov
add
sbb
dec
mov
orl
stc
fistps
dec
fdiv
inc
jle
xor
and
push
xor
or
push
pop
push
int
les
divl
add
fwait
bswap
testl
adc
sbb
inc
aam
add
out
pop
fucom
sub
add
rcll
xlat
add
popf
outsl
and
mov
cmpsb
xor
scas
out
sti
mov
mov
fs
mov
mov
jno
into
int
orb
dec
pop
pop
shlb
add
iret
stos
call
sub
shrl
inc
aad
shl
mov
pop
mov
mov
fbstp
mov
bound
fbld
mov
cs
mov
mov
cmp
imul
jo
int
or
pop
ret
or
imul
ss
in
fsts
jecxz
inc
adc
push
ret
sub
pop
add
push
out
cmp
test
rcrb
sub
addr16
jecxz
test
loop
pop
mov
cltd
mov
mov
shlb
dec
mov
dec
in
sbb
insb
inc
xorb
and
test
aaa
xchg
lds
ror
and
and
push
jle
repnz
and
xor
mov
testb
call
sti
jl
push
popa
enter
fisubrl
push
leave
fiaddl
lcall
pushf
jecxz
mov
sarb
dec
rcll
fdivl
xchg
roll
adc
sahf
mov
adc
add
jnp
cmpb
sbb
pop
mov
mov
jns
test
push
ret
pop
inc
nop
add
je
fisubrl
adc
add
fistl
cmp
jne
cmpsb
add
in
out
ja
pushf
xchg
sbb
xchg
lahf
adc
into
cmp
xchg
bound
dec
loopne
adc
xor
rorb
pop
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
test
mov
adc
outsl
xchg
pop
push
dec
xchg
xchg
pop
pop
jg
sbb
jge
fdivl
mov
ret
cmp
out
mov
out
push
arpl
adc
sbb
ljmp
and
fdiv
fildl
inc
stc
movl
sahf
push
hlt
cmp
in
sahf
jp
sub
call
in
cmpsb
fidivrs
sub
test
insb
inc
repz
imul
popa
movsb
xchg
adc
fisttpl
fs
into
outsb
insb
mov
lock
into
lret
lret
sub
push
push
cmp
sbb
dec
mov
push
xor
ret
mov
and
mov
fmulp
fadd
add
leave
cmpsb
sub
sub
xor
push
cmp
jnp
sar
jo
xlat
ja
insl
andb
push
ljmp
js
negb
jb
stc
lret
jns
test
push
jl
imul
int3
addr16
pop
xchg
cmpl
inc
pop
adc
outsl
sub
mov
dec
mov
ds
and
xchg
imul
dec
test
mov
js
xchg
lds
out
fwait
mov
mov
sahf
jmp
fldt
and
add
std
std
sbb
cltd
sbb
jecxz
hlt
mov
in
mov
stos
rolb
mov
push
push
mov
mov
js
mov
iret
push
nop
ljmp
gs
sub
dec
fcoml
push
push
xchg
aas
or
jmp
pop
addr16
mov
dec
hlt
out
imul
shll
adc
xchg
out
and
pop
out
mov
xchg
jp
xor
adcb
dec
mov
pop
and
push
testl
aas
sbb
cmp
mov
dec
sbb
testl
pop
push
pop
into
dec
mov
sbb
je
lock
je
xchg
mov
dec
mov
mov
test
fnstcw
pop
stos
xchg
sub
stos
mov
push
mov
or
inc
cli
and
addb
shrb
repnz
addb
push
out
imul
out
adc
nop
and
xor
fiadds
push
popf
stos
jbe
cmp
inc
mov
pop
ja
sarb
arpl
loope
dec
pop
test
out
and
mov
mov
popa
jl
add
dec
inc
jecxz
mov
push
xchg
je
scas
and
xlat
or
lods
cmp
jns
lcall
inc
add
sub
xchg
jb
inc
or
outsl
fadd
adcl
xchg
or
pop
mov
es
stc
sub
pusha
leave
jns
in
sbbb
xchg
jo
mov
divb
add
test
test
dec
mov
fadds
xor
lcall
shl
leave
pop
movsl
dec
push
lock
cli
sub
sbb
xchg
pop
jp
and
mov
and
insb
repnz
jb
or
stos
push
mov
push
lcall
clc
mov
jle
or
loope
dec
nop
movsl
mov
mov
adc
cwtd
xor
shlb
dec
jecxz
push
adc
push
cmpsl
test
mov
push
mov
inc
arpl
in
add
jbe
cli
push
push
dec
cmp
ja
pop
jp
pop
mov
sbb
xchg
cwtl
mov
nop
test
jno
cwtl
shlb
xchg
data16
fistps
mov
jbe
aas
add
cltd
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
pushf
cltd
inc
rolb
pop
mov
stos
gs
hlt
arpl
adc
test
add
jae
dec
test
adc
mov
cwtl
into
enter
mov
rcl
or
fcoml
mov
je
cld
arpl
adc
mov
xorl
je
bound
dec
add
cmpsb
int
dec
outsb
add
mov
fs
pop
pushf
mov
outsb
repz
ret
and
lods
loopne
xchg
mov
mov
adc
xlat
cmp
and
jno
lods
add
xor
dec
or
nop
jne
mov
loope
xchg
cmp
xchg
loop
cld
xor
jmpw
fsubrs
lret
js
lods
sbb
lcall
flds
fisubrs
inc
addb
fwait
sbb
dec
aad
fldcw
mov
xlat
cwtl
mov
cmp
ja
and
inc
adcb
outsl
les
mov
fdivl
add
sub
mov
xor
xlat
lcall
sub
sbb
or
jo
mov
mov
adc
sub
pop
das
lret
fs
push
cmp
insb
sbb
cmp
mov
jae
mov
mov
movsl
scas
inc
and
inc
ja
add
cmp
in
adc
jge
cmp
iret
cwtl
out
cmpsl
stos
push
sti
xchg
test
popf
mov
cmpsl
lret
ja
lcall
mov
popa
mov
data16
lret
and
ret
pop
mov
add
push
das
mov
dec
or
add
jmp
xchg
es
mov
lods
aam
and
cmpsb
psrlw
ss
adc
into
inc
imul
test
sti
fcom
xchg
mov
mov
push
cmp
inc
leave
sub
imul
mov
repnz
sahf
push
adc
int3
mov
add
pop
lret
xor
xor
mov
adc
mov
pop
fcmovnu
sbb
rorl
lods
adc
push
xchg
mov
xchg
jnp
addb
popa
xchg
push
push
cmp
jmp
ret
fistps
outsb
xchg
out
sbb
mov
mov
fwait
sub
push
cmpsl
mov
or
cmpsb
stos
adcb
aaa
sti
and
or
test
mov
pop
cmc
ss
lcall
fs
mov
incl
loope
ret
and
mov
add
iret
push
out
fstl
and
mov
insb
add
addr16
jnp
fcoml
icebp
imul
movsb
xchg
loopne
ds
mov
outsb
mov
loope
add
or
decb
ljmp
adc
xchg
xor
mov
ljmp
sub
mov
cltd
adc
xchg
jp
push
pop
cmpsl
jae
sub
push
mov
xchg
cld
and
mov
mov
stos
lahf
xchg
insl
jle
pop
repnz
lods
push
push
push
push
bound
fs
xchg
push
xor
xor
mov
pop
aas
cmc
mov
cli
inc
nop
add
jp
ret
inc
mov
dec
jno
sub
andl
out
negb
mov
cs
sub
sub
sub
jo
xchg
imul
adc
sahf
mov
lcall
inc
fadd
lds
pop
push
jbe
je
xchg
outsb
cwtl
xchg
repz
sahf
and
mov
int3
ss
add
xchg
xor
mov
test
mov
mov
fsubrl
leave
es
add
adc
imul
daa
and
dec
or
push
out
fmull
sub
ret
inc
push
inc
xchg
notl
rolb
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
mov
stos
lea
std
jge
ja
mov
push
xor
and
or
insb
add
insl
outsb
idivl
call
pusha
das
adc
mov
mov
lret
jp
movsb
xchg
cltd
nop
sti
mov
jg
jno
imul
test
icebp
fidivs
fisttpll
xchg
pop
cs
lds
or
out
in
cld
xor
clc
jae
aas
push
jl
cli
sub
out
ljmp
mov
pushf
hlt
push
cmp
sub
fwait
int
shll
mov
or
ret
cmp
imul
mov
jecxz
movsl
pop
pop
inc
adc
push
push
bound
addb
push
das
jmp
adc
mov
sub
and
push
rcrl
inc
enter
outsb
fistpl
and
sub
pusha
subl
fst
lea
pop
xor
pop
xor
and
aas
inc
push
hlt
es
fwait
stos
testb
jl
push
lods
dec
rcl
and
dec
stc
and
push
ss
movl
add
pop
mov
mov
add
dec
jecxz
popa
stc
cmpsl
sub
bound
test
ljmp
stc
inc
stos
adc
adc
leave
xor
outsl
int3
sbb
mov
out
dec
inc
inc
das
addr16
xor
jo
mov
out
test
outsl
out
mov
ds
xor
lahf
inc
xor
scas
fmull
pop
mov
mov
test
ja
xor
and
push
rol
popf
cld
cmp
push
lods
das
xchg
roll
xor
pop
pop
mov
call
test
lahf
jae
mov
ror
movsb
sbb
add
stos
pop
mov
insb
pop
incb
cmp
xor
fbld
xor
enter
jp
xchg
sarl
xchg
dec
fdiv
imul
xchg
mov
inc
sti
push
out
pop
call
jae
inc
jle
imul
lea
aam
ljmp
and
dec
ficoml
popf
aam
jns
pusha
pop
int3
push
jno
jge
adc
lahf
fidivrs
test
fnstenv
xor
aaa
push
push
push
add
add
andl
sti
cmpb
faddl
push
cmp
mov
push
or
in
dec
xchg
or
mov
nop
xchg
push
pop
fisubrl
daa
mov
xor
lds
cmp
inc
inc
and
div
les
pop
fistpl
pop
mov
and
scas
int3
aam
and
scas
pop
add
cmp
int
cwtl
push
lock
push
inc
lods
cmc
push
lret
dec
xor
jno
inc
mov
xchg
pop
insb
mov
cmpsl
inc
fwait
or
mov
mov
adc
push
leave
outsb
add
pop
test
push
mov
leave
fmuls
mov
jmp
and
and
jle
jae
ljmp
shrb
add
dec
std
jp
push
push
add
cmp
fcmovne
rol
imul
mov
das
adc
mov
imul
jecxz
rcll
ret
call
ds
inc
push
mov
stos
jge
cld
scas
cmp
cmp
xor
mov
cmp
and
jns
fs
jle
xchg
and
mov
jecxz
fs
ss
add
fsubrl
in
test
jbe
adc
rorl
xchg
int
scas
cmpsl
pop
popa
xchg
enter
subl
push
lret
or
jmp
or
mov
dec
mov
daa
es
icebp
out
xchg
lret
js
add
mov
adc
mov
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
lds
mov
adc
arpl
popa
test
movsl
adc
sub
or
fsubrs
cli
or
push
mov
mov
andl
arpl
and
cs
aaa
xchg
pop
xlat
and
jo
pop
ret
pop
pop
add
das
xchg
or
adc
inc
lret
xor
in
xchg
or
fldenv
pop
je
lret
call
dec
pop
cs
shrl
idivl
dec
pop
mov
pop
xorl
cmpsb
mov
test
pop
jl
out
das
push
dec
mov
hlt
jns
xchg
cmp
aas
xchg
out
sahf
adc
lds
dec
mov
sub
add
pop
stc
sbb
pop
bound
push
inc
sbb
lods
jge
js
lret
push
leave
dec
int3
sti
imul
stc
mov
les
sbbl
dec
inc
and
sub
icebp
sbb
stos
fwait
adc
jmp
mov
fs
imul
in
das
shrl
pop
cmp
out
xchg
xor
xor
inc
mov
in
mov
sahf
cmp
jmp
mov
push
xchg
xor
adc
roll
mov
cmp
mov
fldl
ret
dec
popa
scas
arpl
mov
push
jl
xchg
movsb
mov
fwait
es
sub
mov
ljmp
cmc
int
fimull
sbb
add
stos
xchg
imul
adc
bound
mov
rolb
add
cli
shrb
and
mov
in
pop
mov
push
imul
push
outsl
and
btr
out
inc
push
fildl
mov
jbe
test
and
lret
cmovno
out
dec
push
cltd
cli
cmp
pushf
jl
mov
mov
xor
xchg
insl
std
or
dec
pop
mov
negb
lods
movb
add
cmpsl
xchg
roll
jne
mov
dec
push
inc
shld
out
dec
inc
or
enter
int
into
lret
fadds
ret
mov
nop
or
jecxz
pop
xchg
aad
loope
sbb
sar
adc
stos
fmull
clc
std
push
nop
imul
push
nop
mov
dec
leave
inc
aas
sahf
and
mov
sbb
cmpl
adc
mov
add
and
notl
or
dec
shrl
sub
lcall
ljmp
mov
lods
test
fmulp
adc
out
test
sbb
repz
dec
insb
orb
decb
push
pop
dec
add
mov
hlt
scas
inc
stc
repz
adc
ss
rclb
pop
or
or
push
cmpsl
sbb
pusha
in
pop
icebp
loop
cmp
mov
lods
shll
dec
cmp
sahf
call
rcll
ljmp
pop
xchg
arpl
loopne
adc
pop
addr16
inc
scas
fs
jg
mov
mov
lcall
scas
mov
cmp
int3
cmp
test
jmp
add
lods
rcrb
xchg
in
lcall
and
in
sbb
in
ret
stc
and
daa
or
jae
jmp
andl
xor
mov
mov
cmc
fidivrs
arpl
jnp
lcall
faddl
sahf
repz
adc
mov
add
out
in
ss
cmpsb
cld
xchg
cmp
out
out
jo
mov
addr16
test
mov
and
scas
test
mov
popf
mov
jnp
fbstp
push
lret
rcl
call
imull
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
xor
fwait
clc
adc
mov
sqrtps
inc
sbb
dec
xor
outsl
xchg
and
jne
neg
lret
dec
fldcw
nop
test
xor
pop
cmp
xor
sbb
cmp
pop
fcom
ja
inc
pop
adc
xchg
sub
add
add
push
xor
ret
gs
add
in
lods
lret
inc
rcrl
cmp
mov
sub
mov
dec
fmuls
ss
in
std
jle
movntps
popf
jge
dec
addb
sti
add
adc
je
pop
pushl
shlb
mov
rclb
dec
in
adc
sbb
sarl
daa
adc
add
cli
mov
xchg
add
shrl
push
fldenv
jg
xchg
push
cmp
into
fwait
pop
shr
cmpsb
sahf
jb
sub
movsl
aam
pop
jne
xchg
cltd
cmp
daa
dec
js
repz
xor
mull
aas
pop
fistps
or
push
dec
jns
insb
cs
mov
xor
dec
in
iret
fdivl
or
les
mulb
xchg
jmp
stos
or
adc
sbb
je
jb
and
push
xlat
add
pop
xchg
enter
bndldx
jae
sub
lods
enter
std
cmp
pop
jb
inc
lret
sbb
test
mov
test
jns
jno
and
xlat
xchg
mov
cwtl
hlt
add
pop
push
mov
in
adcl
jnp
js
add
xor
inc
cmp
imul
test
ret
repnz
sub
int3
scas
xor
sahf
add
ja
enter
mull
xor
out
shll
cmp
xchg
test
mov
add
fs
mov
repz
pop
jae
mov
lock
sub
mov
das
jecxz
ja
mov
int
scas
inc
inc
cmp
mov
and
or
int
push
scas
pop
insl
ljmp
popf
add
pusha
pop
popa
mov
jo
sarl
hlt
loopne
xchg
pop
mov
dec
repnz
loop
jecxz
sahf
insb
int
int3
jl
push
daa
lods
dec
mov
fadds
cmpl
imul
mov
sbb
jecxz
test
mov
das
push
lcall
dec
jmp
ud1
jmp
xlat
push
push
add
xchg
jge
jb
out
repnz
adc
loope
repz
idivl
xchg
cmp
fisubs
dec
sbb
mov
adc
xor
fstl
mov
mov
fdivl
outsl
jle
orl
pop
jecxz
scas
dec
rolb
sbbb
cmp
mov
add
adc
sbb
lock
jne
adc
mov
lods
ret
scas
sbb
jle
mov
xor
or
dec
loope
jle
mov
add
notl
lcall
lret
js
shll
sub
pop
jb
movsl
nop
pop
xchg
dec
mov
aad
mov
bnd
ret
stos
sbbb
push
stc
sbb
mov
std
mov
xor
rclb
push
inc
and
rorb
arpl
call
fnstcw
push
stos
and
and
incb
sub
or
add
push
enter
or
cmp
loope
aam
das
push
rclb
or
jno
push
mov
jo
push
andl
sbb
sahf
push
pop
mov
test
pop
jbe
push
addr16
into
je
dec
lods
fwait
into
out
push
insb
dec
adc
lods
sarb
mov
rcr
inc
mov
movsb
xchg
scas
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
ljmp
push
mov
popf
sarl
jl
cmc
nop
ja
pop
cmpl
test
dec
push
pop
lods
add
neg
cmpsb
xor
pop
jnp
enter
push
cmp
xchg
xlat
popa
cmp
pushf
mov
sub
in
scas
dec
push
mov
cmp
sbb
sub
sub
jns
mov
adc
jno
jge
or
sub
fsts
xchg
aaa
mov
mov
push
or
ret
aas
xor
mov
fwait
loope
loop
dec
dec
cmc
scas
leave
push
dec
lidtl
mov
xor
or
pop
cld
fiadds
mov
hlt
pop
adc
idivl
xchg
fildll
sub
or
sbbl
ja
dec
xchg
jae
adcb
lret
mov
cwtl
in
sub
aam
fcomps
sub
push
xor
pop
jnp
addr16
ds
mov
and
jnp
lods
dec
jae
gs
adc
into
lock
mov
push
testl
xchg
sub
push
fadds
cli
jae
das
mov
stos
push
cwtl
add
xor
adc
and
dec
sbb
ds
sti
or
enter
mov
add
pop
push
xlat
in
mov
and
pop
mov
xor
mov
cmp
add
pop
pop
sbb
ja
clc
mov
decl
cmpsl
cmpxchg
adc
xor
fs
mov
mov
sub
sbb
and
cmpsl
repz
jb
inc
inc
jnp
mov
pop
daa
jmp
dec
push
adc
aad
out
inc
jl
push
inc
les
lret
clc
push
mov
dec
lods
sub
mov
pop
rcll
cwtl
sbb
sbb
lret
enter
mov
push
cld
cwtl
sahf
fnsave
sub
mov
pop
loop
iret
icebp
jo
push
pop
cltd
out
movsb
in
dec
fwait
xor
push
xchg
fmull
out
xlat
inc
mov
mov
push
and
jns
fcmovnb
sbb
push
cmpsb
mov
add
sub
push
xor
add
fnstenv
les
shrl
lds
adc
dec
cltd
lock
out
lock
sti
adc
das
xlat
or
inc
xchg
mov
ljmp
leave
mov
mov
or
cmpb
jbe
mov
in
sub
sub
aaa
push
stc
pop
dec
ja
sub
or
dec
movsb
and
or
push
add
add
xchg
pop
enter
add
mov
lds
fwait
jno
je
xchg
adc
cli
dec
xchg
mov
lods
mov
sbb
pop
outsl
out
pop
cmc
stos
repnz
mov
pushf
jno
xchg
or
sub
jecxz
add
sub
dec
sub
push
pop
dec
mov
es
add
roll
sbb
loopne
mov
mov
lock
into
cmp
and
ds
out
xchg
imul
test
lret
lock
inc
push
imul
cmp
sbb
gs
lret
das
roll
faddp
mov
lret
xchg
sub
pop
sbb
aam
cmp
mov
daa
lret
std
adc
jge
mov
fwait
mov
lret
mov
call
mov
icebp
pop
mov
cmpsb
push
in
dec
loopne,pn
xor
fildl
or
inc
pop
inc
mulb
jl
push
sub
ljmp
pop
rorl
data16
jmp
test
add
xchg
mov
sub
adc
out
or
cld
mov
or
mov
iret
stos
sahf
xor
mov
xchg
mov
out
inc
or
push
fsubl
xor
mov
cmpsl
push
sbb
lods
bound
mov
mov
ds
adc
mov
xchg
mov
adc
faddl
sbb
mov
mov
lahf
xor
iret
ret
std
nop
sbb
rorb
in
in
mov
ror
rorl
dec
shrl
add
jno
mov
sbb
add
out
jne
fwait
enter
and
insb
sub
inc
adc
das
push
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
mov
clc
adc
adc
hlt
shl
sub
fs
and
gs
jmp
push
fldt
dec
cmp
iret
aas
sbb
xor
mov
cmp
bound
adc
cmc
mov
jno
insl
test
or
leave
mov
adc
or
cmpl
and
mov
xchg
popa
in
out
inc
adc
pop
xor
pop
je
mov
nop
or
pop
dec
jo
cwtl
cld
clc
mov
pop
pop
stos
dec
loopne
inc
scas
test
add
sahf
add
cmp
jo
dec
mov
xor
fiaddl
jl
sti
and
jo
lock
and
mov
bound
fiadds
push
xchg
add
ja
data16
fiadds
mov
aaa
push
pop
pop
pop
add
ret
ljmp
xchg
fnstenvs
mov
sbb
rclb
add
mov
mov
inc
and
fnstcw
out
loopne
loopne
jne
cmpsb
xchg
jae
jns
clc
jb
pushf
cmp
cmp
mov
adc
or
jne
scas
push
popa
push
push
fstps
mov
and
or
sar
mov
mov
aam
int
lock
sbb
or
jae
subl
cmp
jge
sbb
test
fs
mov
add
sbb
hlt
sbb
jp
dec
dec
call
lds
fisttpl
sub
int
popf
es
mov
cmc
aaa
jmp
popa
dec
push
enter
jg
inc
stos
div
mov
fcmovbe
js
adc
lret
add
adc
add
test
mov
xchg
lret
mov
or
mov
and
pushf
mov
testb
jo
push
or
lea
cmp
sub
pop
dec
lods
fsubs
jo
mov
scas
push
clc
xchg
mov
subb
outsb
xchg
lods
imul
mov
sub
or
mov
xchg
rorb
add
gs
dec
jno
push
xchg
cmp
insl
in
pushf
sbb
push
or
nop
mov
add
or
addr16
seta
lock
and
jae
inc
out
adc
xor
mov
inc
cmpsb
mov
add
ret
sbb
xlat
dec
flds
inc
push
xchg
pushf
dec
add
push
test
adc
ja
mov
scas
cmp
push
and
les
rcll
or
mov
test
inc
in
sbb
mov
xor
xchg
adc
mov
cld
push
fwait
insb
lcall
mov
sti
sub
inc
jmp
and
imul
jecxz
stc
xor
cli
mov
push
cmp
inc
dec
fsubrl
jae
push
test
or
fs
add
mov
lret
xchg
and
mov
ret
jmp
or
test
push
cmp
dec
mov
mov
and
mov
movsl
mov
cli
inc
rcll
pop
adc
pop
stos
pop
das
shlb
adcl
lods
movsb
inc
jl
fbstp
rclb
add
xlat
test
push
mov
inc
and
sbb
out
push
mov
shrb
sbb
add
jmp
add
icebp
fmuls
cmc
idivb
clc
push
repz
adc
or
shlb
iret
jge
push
sub
jae
test
mov
or
sbb
sbb
mov
xor
ret
xchg
push
popf
mov
pop
int
out
sbb
xchg
mov
xchg
mov
cli
dec
scas
sti
jns
stc
aad
jecxz
xor
inc
popf
inc
adc
ret
sahf
xchg
jbe
jmp
aad
pushf
mov
xlat
or
pusha
mov
mov
scas
add
fadds
xlat
mov
jp
sub
add
jecxz
mov
loope
notb
sub
ja
jp
cmpsl
pop
es
gs
outsl
cmc
fildl
xor
mov
lea
adc
jne
addr16
daa
lahf
adc
xchg
sbb
loope
pop
notl
dec
out
pop
xor
cmpsl
jl
cmp
pop
imul
pop
pop
lcall
pop
popa
ljmp
jb
add
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
dec
xchg
aaa
ja
adc
adc
cmc
scas
in
repz
rclb
push
cmp
out
mov
outsl
icebp
push
test
mov
push
cwtl
lds
xchg
in
mov
ljmp
call
in
sbb
pushf
pop
scas
push
sub
sub
dec
push
jns
inc
movsl
stos
xor
mov
lret
ss
fbld
mov
inc
stos
sub
negl
pushf
aam
das
lock
cmp
push
jle
add
adc
push
push
call
add
das
jecxz
adcl
hlt
pop
cwtl
dec
icebp
int
test
and
or
xchg
xor
faddl
mov
push
and
inc
sub
outsl
adc
dec
clc
aad
in
sbb
sub
mov
enter
sub
je
add
cld
std
pushf
cmpsl
rclb
jo
dec
int
andl
mov
lock
loop
pop
push
push
jmp
or
inc
out
hlt
cwtl
jecxz
stos
in
fiadds
pop
aad
sub
cmpsl
loop
loop
call
dec
or
mov
sbb
push
push
pushf
add
negl
pushf
jl
aaa
cmpsl
add
repnz
adc
push
jmp
mov
loop
imul
push
mov
into
outsb
shr
adc
testb
add
dec
daa
cmp
push
lea
mov
jae
xchg
xchg
test
imul
jmp
insl
adc
cltd
out
cld
out
push
arpl
stc
cmc
popa
sahf
std
sbb
int3
inc
sbb
enter
movzwl
sbb
pop
cmp
rorl
in
mov
pushw
and
jo
imul
sti
enter
add
mov
insb
mov
mov
cmpsb
iret
lahf
fmul
sti
and
mov
dec
add
aaa
sub
sahf
cmp
test
std
cwtl
aam
cwtl
fisubs
mov
push
lret
mov
sbb
decb
cmp
cmp
loopne
push
dec
lds
inc
fstps
xor
mov
sbb
pop
scas
mov
adc
inc
shrl
mov
cli
in
sarl
inc
das
fildl
fiaddl
dec
pushf
in
je
jb
mov
cwtl
pushf
mov
cltd
push
sub
icebp
shl
out
imul
stos
sbb
test
sub
into
xor
dec
add
or
cmp
jl
or
mov
out
jl
sub
movsl
ds
inc
push
pop
add
mov
negl
mov
sbb
and
mov
inc
push
mov
mov
in
aad
mov
adc
aad
cmpsb
mov
lds
lret
cli
out
fimuls
fstpl
shll
fmuls
adc
sbb
cli
insl
add
ljmp
mov
jg
fmuls
pop
shrb
movsb
adc
inc
call
orl
mov
iret
inc
mov
push
outsl
aaa
pop
mov
test
aam
mov
sub
add
pop
outsb
leave
or
cmp
sub
xor
mov
pop
jne
xor
js
sarl
mov
mov
inc
mov
or
mov
movsl
aas
stos
cmp
jg
into
test
fwait
push
imul
leave
push
cwtl
sub
sub
mov
jge
or
pop
xchg
divl
xor
in
mov
lret
insb
jnp
sub
mov
inc
addb
push
sbb
push
pop
scas
push
add
leave
hlt
fs
push
insl
int3
cs
loope
push
sub
outsl
push
andl
ret
push
mov
sub
shlb
or
int3
lods
mov
jmp
pushf
incl
in
and
fcom
ret
sbb
cmpxchg
sub
cmp
mov
ror
jmp
cwtl
lret
out
add
mov
fimull
ficomps
inc
mov
aaa
fcoms
xor
loopne
sahf
sbb
inc
sub
mov
xchg
sti
jg
imul
cld
inc
dec
mov
pop
nop
jb
pop
lea
add
mov
ret
pop
testb
xlat
cltd
imul
mov
add
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
xor
pop
jnp
test
adc
adc
and
ds
into
pushf
imull
fstpt
stos
cld
adc
inc
add
lds
push
fcomps
add
out
popa
popa
push
adc
outsb
in
mov
pop
lcall
cld
jbe
mov
xor
dec
mov
fs
in
rorl
dec
adc
and
mov
inc
sbb
scas
cmp
dec
outsb
lret
adc
sbb
sub
pop
movsl
push
rcrl
dec
push
add
sbb
adc
mov
sbb
or
out
movsb
inc
mov
push
xchg
gs
loope
insb
aam
out
inc
mov
insl
pop
dec
dec
adc
ss
push
pop
mov
and
dec
mov
ret
pop
lods
xchg
or
cmp
les
cwtl
sbb
in
push
sub
xchg
mov
mov
hlt
lret
iret
push
pop
xor
imulb
or
xchg
fadd
inc
pop
lret
mov
push
rolb
jmp
mov
pop
fwait
cmpsl
imul
insl
xor
mov
cltd
or
ds
imul
xor
loopne
adc
pop
and
rcll
loope
or
jp
loop
dec
not
dec
cmp
js
mov
jbe
push
andb
clc
popa
dec
inc
mov
push
js
loop
xchg
xchg
cmp
pop
sbb
mov
rolb
popf
lret
lods
int
cmpsl
sub
out
fists
xor
lahf
idivb
daa
pop
mov
stc
in
xor
rolb
loopne
shl
sub
sub
adc
push
pop
mov
jnp
dec
jmp
mov
insb
and
or
popf
aad
mov
xor
cmp
sbb
or
push
mov
fwait
and
les
cmp
pop
ss
mov
mov
adcb
mov
mov
sbb
sbb
sbbl
sti
cmp
pop
sbb
xchg
jnp
rorb
mov
mov
adc
lret
sub
imul
popa
rcrl
fs
test
out
insb
icebp
cli
push
cmpb
pop
add
xchg
xchg
imull
mov
scas
mov
nop
js
push
xor
mov
inc
xor
rorb
mov
mov
cmp
xchg
cwtl
cmp
dec
loope
cli
pop
nop
dec
aaa
pop
ret
mov
cmp
rep
ret
mov
sar
adc
lret
mov
sub
dec
sub
pop
popf
dec
xchg
jno
lea
sti
mov
inc
loope
mov
push
xchg
je
dec
mov
in
sbb
xchg
pop
dec
dec
mov
jb
xor
inc
out
push
enter
sub
outsb
push
pop
in
repnz
mov
jnp
arpl
pop
inc
lock
jp
ret
shrl
jo
sbb
sahf
jmp
jecxz
or
pusha
adc
dec
lahf
subl
jg
jg
pop
das
cmpsl
pop
dec
mov
push
sbb
push
nop
mov
movsb
das
pop
sti
cmp
pop
cmc
movsb
mov
leave
mov
push
jne
cs
fidivrs
subl
xchg
add
inc
mov
push
inc
int
pop
inc
leave
lea
mov
arpl
movsb
push
int3
and
lods
filds
inc
push
subb
cmpsl
jp
sub
dec
lods
cmp
sbb
jo
xchg
js
dec
xor
mov
xchg
adc
call
cmp
pop
sahf
xlat
push
xchg
xor
pop
sbbl
jo
fdivrl
pop
stc
mov
es
push
std
and
idivb
bnd
fstpl
inc
lcall
pop
and
adc
or
add
mov
xor
cli
xchg
in
dec
fstl
mov
leave
pop
pop
iret
mov
jnp
inc
jl
cli
into
rorl
fsubr
mov
sbb
aad
or
ss
mov
xor
test
sub
mov
pop
dec
push
xchg
jne
xlat
sub
pop
sub
sahf
daa
add
insl
pop
jmp
mov
sbb
ret
rcrb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
aas
in
sahf
das
pop
comiss
lret
fisttpll
aaa
xchg
add
aam
jmp
sub
loopne
pop
mov
testb
cmp
inc
imul
mov
lahf
insb
adc
lds
xlat
sub
dec
cmp
xor
jp
roll
or
cmp
insl
clc
adc
lahf
jb
addr16
xorl
popa
mov
fstl
movsb
xchg
dec
sub
or
jmp
mov
stos
jecxz
push
push
popf
or
xchg
push
popa
jb
cmp
push
std
inc
outsb
mov
pop
loope
hlt
cmp
and
sub
in
aaa
icebp
into
fidivrl
shlb
mov
mov
cli
es
sbb
aas
cmp
insb
inc
int3
fsubs
push
sub
aam
add
mov
popa
xchg
mov
nop
sub
jl
sub
gs
mov
sub
sub
mov
jo
mov
fmull
mov
mov
sbb
divl
sarl
stos
xchg
stos
cltd
mull
lret
lods
cli
add
outsb
inc
cli
js
repnz
pop
jno
cli
push
scas
xchg
sbb
lea
xchg
pop
subb
inc
fnstcw
pop
jb
fldl
and
sub
nop
jnp
outsl
mov
jb
fbstp
daa
mov
dec
jae
mov
scas
mov
push
xor
adc
push
std
addr16
jns
insl
or
loope
mov
inc
cmp
push
pop
lods
mov
pop
or
inc
mov
add
add
frstor
fsub
mov
out
dec
or
add
mov
es
adc
inc
xlat
dec
cmp
or
and
popf
andb
outsb
jge
push
mov
cs
pop
cli
lds
test
dec
xchg
jge
nop
dec
xchg
pop
sub
jmp
nop
sbb
push
gs
push
mov
xor
add
vpsubsw
lcall
push
xor
fnstsw
filds
lret
enter
push
int3
ja
ss
icebp
rolb
dec
loop
xchg
cmp
mov
nop
ret
test
jmp
fidivrs
sbb
mov
stc
aas
cmpsb
fs
mul
pop
or
leave
dec
xor
outsl
hlt
mov
ljmp
or
mov
pusha
xchg
in
jnp
inc
add
mov
jp
mov
push
imull
int
sti
add
jae
call
pop
pop
lret
lds
popf
and
jecxz
cmp
cmp
and
adc
mov
es
std
adcb
jp
sub
mov
add
ret
es
inc
aad
mov
pop
pop
cmp
sbb
xchg
sbb
icebp
lock
add
sub
sbb
jnp
push
cmc
scas
inc
adc
xorl
aaa
popa
jmp
pop
insl
ret
cmp
jne
push
stc
pop
lahf
les
ja
pop
rorl
mov
int
dec
push
clc
and
push
xor
cmp
insb
movsb
push
mov
les
xchg
push
cmpsl
inc
aam
jb
xchg
inc
into
in
lcall
mov
les
pop
jecxz
ret
xchg
sbb
cmp
mov
jb
xchg
jne
adc
sub
and
xchg
xorb
iret
mov
push
test
ret
sbb
adc
push
push
and
fs
mov
mov
ss
cmp
out
xorb
fbld
sbb
cmp
mov
scas
push
popl
test
xchg
js
cmp
idiv
int
inc
adcb
clc
int3
jbe
lahf
xchg
in
cmp
gs
aam
pmaddwd
cmp
or
push
das
loopne
or
cmpsb
or
sbb
or
jmp
fiadds
mov
mov
bnd
mov
stos
cli
aaa
cmp
test
cli
ja
gs
adc
loopne
in
inc
mov
jmp
cwtl
push
cmc
jp
mov
lcall
ret
outsb
mov
cltd
xchg
sahf
leave
lahf
push
add
loopne
sub
add
mov
xor
jp
inc
push
fsts
sub
dec
jecxz
stos
pop
lock
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
ret
adc
adc
adc
aas
xor
push
cwtl
jne
adc
gs
cmp
shll
lret
cmp
jp
aam
or
inc
popf
loopne
and
hlt
fcoml
pop
xlat
ds
jge
dec
xchg
add
imull
ss
je
and
dec
add
xchg
mov
push
nop
mov
fstpt
jnp
push
dec
cwtl
cwtl
inc
push
iret
out
repz
mov
daa
cmpb
mov
je
stos
dec
push
aaa
and
pop
mov
movd
sbb
ljmp
fs
sbb
pop
out
in
jge
xchg
xor
test
xor
subl
popa
test
in
adc
in
push
and
fcomps
and
push
sub
jb
into
leave
popf
inc
jns
icebp
mov
and
and
repnz
or
or
movsb
mov
jecxz
jno
gs
in
cmp
out
repnz
cmp
adcb
movb
sti
sar
pop
test
repnz
mov
out
push
lods
pop
adc
add
fistl
outsl
rol
cmp
lods
mov
ret
adc
imul
push
inc
inc
addr16
cli
sarl
xor
cmp
ret
add
add
fwait
out
cli
xor
xchg
mov
xor
insb
mov
xor
pop
fnstsw
ja
jns
int
je
push
sbb
cmc
pusha
ds
or
sub
sbb
ss
es
dec
mov
fistpll
enter
mov
cld
addr16
cld
cmp
adcb
mov
mov
mov
int
sub
mov
outsl
aad
mov
test
dec
jge
or
sbb
or
ljmp
jno
lods
xor
xchg
push
stos
adc
or
sub
les
sub
mov
aas
imul
leave
aas
sub
shlb
sbb
fcomps
add
xlat
lea
out
push
add
ljmp
dec
fistpl
mov
mov
sub
mov
outsb
ficoml
gs
cmc
mov
sub
push
mov
add
cmc
sub
stos
push
cli
jae
push
cmp
jg
pop
stc
xchg
xchg
outsl
xlat
out
pusha
je
sbb
mov
adc
mov
pop
jns
bound
jmp
mov
sbb
das
cmp
sbb
jle
lea
imul
mov
addr16
rorl
sbbl
movsb
rcrb
iret
jbe
aam
adc
test
jle
rol
or
aaa
cmp
pop
out
lahf
xchg
fcomi
xchg
or
xchg
and
adc
hlt
xchg
out
jge
js
iret
pushf
and
mov
fistl
lods
sub
sbb
sub
or
out
pop
movsl
js
lret
nop
fsubl
iret
adc
cmpb
les
stc
inc
popf
mov
mov
dec
jae
outsb
push
pop
add
out
or
mov
mov
push
inc
nop
and
lds
lods
pop
ja
sbb
xor
mov
push
shrb
movsb
pop
sub
dec
add
pop
jo
xchg
ret
and
leave
cmp
cs
hlt
sbb
call
pop
or
test
jge
movsb
mov
push
stc
lahf
cli
xlat
mov
insb
pusha
mov
lret
sbb
pop
je
imul
les
int3
gs
fisttpll
sti
int
lock
loop
sub
andb
mov
les
loope
jg
es
iret
sub
sbb
pop
sahf
es
dec
aad
push
roll
and
loop
lret
pop
adc
sbb
pop
outsl
out
aad
imul
jb
rcrb
push
xor
pop
pop
insl
push
pop
icebp
push
lret
mov
mov
lds
pop
fsubrp
adc
xlat
mov
jmp
mov
shrb
fcomip
ds
add
in
shlb
sbb
repnz
aad
std
add
cwtl
push
frstor
nop
mov
cltd
xchg
cld
repnz
adc
xor
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
cmpsb
sbb
jmp
adc
adc
cmp
jmp
mov
mov
or
or
jbe
adc
sbb
xchg
xor
into
test
jecxz
jecxz
inc
cli
mov
jne
popa
pop
pop
test
and
pop
outsb
or
push
daa
mov
pusha
inc
insb
jne
dec
loope
out
or
jmp
jle
cmp
rorb
imul
jg
pop
lods
jg
add
bound
xor
std
adc
insl
je
jle
in
fstl
jno
pop
test
mov
jno
aad
xchg
inc
pusha
dec
js
repnz
aam
jge
sbbl
cmpsb
out
hlt
sub
outsb
lock
aaa
mov
adc
pusha
jle
mov
insl
xchg
sbb
cltd
aad
test
push
into
cmp
mov
xor
int
inc
inc
dec
ja
jge
arpl
iret
xor
mov
repnz
in
sti
fildl
push
ljmp
pop
and
rolb
xlat
stc
addr16
xor
mov
push
ds
cld
insl
icebp
mov
push
mov
xchg
lods
sub
loop
gs
mov
lcall
cmp
mov
dec
jae
sbb
mov
dec
xchg
addr16
sub
inc
dec
sbb
sbb
mov
add
mov
fldcw
adc
daa
cwtl
jl
mov
cmp
aam
and
mov
pop
ljmp
dec
addb
sets
mov
xchg
xchg
jg
pop
mov
push
clc
lret
dec
das
sub
adc
push
cwtl
inc
mov
iret
mov
mov
adc
sarl
xchg
mov
fs
xor
lock
jne
outsl
xchg
in
bound
int3
pop
aad
lahf
cmp
cmp
xchg
in
mov
pop
das
insb
jg
inc
insb
jo
mov
push
push
push
add
mov
popl
adc
popf
lret
cwtl
test
lods
or
jecxz
testl
or
fisubs
aas
cmp
lods
xchg
push
iret
dec
sbb
into
or
sub
adc
mov
fidivrs
pop
leave
xor
push
pop
inc
cltd
xchg
dec
pop
fldt
shl
clc
and
lret
ja
loop
ja
add
pusha
jae
add
imul
jmp
jb
add
aas
push
xchg
lock
fsts
aam
xchg
bnd
pop
mov
dec
jle
sahf
mov
dec
hlt
movzwl
int
lock
xor
jno
push
xchg
xor
sub
into
mov
or
or
popl
inc
pop
mov
xor
inc
push
mov
mov
and
xor
mov
cmc
jge
and
xchg
sbb
or
sub
in
es
add
stos
xchg
scas
pop
shlb
rorl
rolb
fcmovb
lock
pushf
xor
or
fsts
notb
xchg
pop
daa
adc
sub
cld
cltd
lock
push
std
addr16
out
mov
push
mov
imul
lea
jae
push
fdivrl
int3
sub
ret
push
xchg
out
xchg
and
lods
and
xor
adc
mov
xchg
test
orl
push
ret
cmp
out
test
or
cmpsl
negl
adc
sbb
push
stos
inc
out
out
jne
xor
sub
sbb
pop
mov
sbb
jmp
in
sahf
push
aad
fsts
in
aas
dec
mov
dec
sbb
lds
xchg
inc
dec
insl
and
addr16
pop
loope
jns
out
mov
inc
aas
pop
dec
aam
sub
push
mov
add
mov
and
std
mov
sbbl
lret
stc
pop
leave
xchg
scas
push
pop
rcrl
imul
adc
stc
popf
sub
cmp
add
sbb
jns
xchg
mov
shrl
jne
outsl
arpl
xchg
cs
lret
inc
shl
popf
pop
adc
sbb
and
test
mov
dec
lahf
cmp
lods
test
testl
lahf
loop
lret
xchg
push
scas
mov
fcmove
leave
jno
mov
out
cs
fucom
inc
cwtl
js
outsl
addr16
test
cmp
rcl
roll
sarl
test
dec
flds
in
mov
jmp
repnz
mov
test
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
jle
pop
push
jne
clc
adc
adc
mov
jbe
sbb
sahf
dec
das
mov
fldenv
aas
pushf
mov
movsl
push
inc
mov
in
es
xchg
in
push
sub
cmp
jg
mov
and
sub
rcrb
sbb
and
push
jbe
out
call
stc
adc
lahf
or
sub
in
pushf
dec
dec
or
pop
xlat
sub
and
cs
mov
aam
sar
lahf
movsb
sbb
sahf
xchg
pop
lcall
in
js
fs
gs
cmc
jo
push
pusha
lods
test
lea
lcall
push
jge
inc
push
add
outsb
jmp
int
arpl
es
pop
imul
insb
ret
mov
test
ljmp
dec
add
cmp
mov
lock
lret
movsl
loopnew
mov
ljmp
inc
popa
subb
fldt
cmp
call
mov
mov
hlt
ret
fmuls
cmp
or
lods
push
loop
ds
mov
aad
pop
jmp
push
pusha
and
stos
jmp
push
or
les
mov
ja
lea
outsl
dec
mov
xchg
xor
mulb
imull
inc
sub
cmpsl
jne
jmp
fstpt
push
or
fidivrs
jns
inc
popf
mov
push
jmp
daa
adc
cmp
inc
mov
popa
dec
in
mov
pusha
mov
loop
jle
rcll
ss
or
mov
cwtl
dec
push
sbb
or
mov
hlt
sahf
cmp
xchg
cmp
dec
fldl
arpl
push
in
into
push
add
dec
negl
pop
cmpl
jo
popf
scas
shrl
sahf
cmp
rol
aaa
fsubrl
sbb
aad
test
adc
push
fidivrs
fnstcw
js
pop
jge
daa
push
dec
push
adc
sub
xor
sub
cld
push
movsl
mov
bound
push
xor
lods
jns
hlt
daa
cmc
and
add
dec
mov
mov
cmp
or
fld
shrb
insb
cld
cmp
jmp
mov
cmpsb
push
repnz
dec
aas
enter
mov
add
pop
insb
cltd
pushf
mov
ficompl
mov
add
mov
mov
div
xor
add
ja
aam
sbb
ljmp
xchg
jmp
lahf
jb
add
jb
jb
in
loop
add
int3
xchg
insl
mov
mov
iret
repnz
cld
cli
data16
add
mov
ja
xlat
pop
adc
lcall
arpl
icebp
popa
pop
stos
mov
imul
pop
jb
rcrl
or
or
addl
jmp
enter
lock
add
xchg
or
inc
or
pop
ja
sbbb
push
jp
fcmovu
push
add
out
dec
cmc
dec
mov
loop
cmc
add
add
mov
js
adc
push
xor
xor
mov
xor
orb
xor
pop
mov
mov
mov
adc
push
add
int
sbb
mov
mov
ljmp
dec
mov
jmp
ljmp
ret
ss
inc
lahf
dec
xchg
mov
ficompl
or
shll
mov
mov
mov
jle
jp
stmxcsr
push
cmp
cmp
xchg
pop
dec
sahf
add
mov
push
repz
fildl
xchg
and
loope
push
mov
fiaddl
insb
xor
xorb
mov
out
mov
mov
movb
neg
push
and
mov
ret
cmpsl
inc
insl
in
jbe
pop
mov
lahf
inc
xchg
sbb
stc
pusha
test
frstor
and
outsl
inc
mov
xchg
in
mov
jno
mov
jb
lahf
add
pop
sti
mull
add
xchg
mov
fdiv
jns
jmp
mov
shrb
lods
mov
inc
adc
ficompl
div
mul
aas
mov
sahf
dec
jle
loop
mov
lret
fmull
mov
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
and
push
xchg
push
std
xor
sbb
lds
mov
mov
sbb
xor
sbb
add
idivl
sub
push
mov
xor
pop
out
cwtl
jbe
mov
out
xor
jns
lds
dec
fcomps
sub
repz
fmull
xorl
mov
addb
loope
adc
or
sub
out
dec
iret
pusha
das
insl
test
sub
xor
mov
mov
jl
lea
jg
aam
dec
mov
or
adc
lods
xlat
pop
xchg
dec
insb
loop
adc
stos
mov
push
addr16
jns
pop
mov
gs
mov
movsb
popa
fldcw
iret
insb
jae
inc
jo
mov
pop
jmp
sahf
fildll
int
mov
call
adc
incb
daa
enter
cld
jle
dec
aad
adc
fwait
aad
popf
arpl
mov
gs
in
sub
dec
dec
movsb
jae
pop
clc
mov
adc
xor
stos
jns
mov
loop
or
and
cli
sub
test
cmp
xlat
loop
pop
push
insb
inc
jecxz
lcall
dec
imull
xor
inc
ret
xchg
iret
jmp
mov
jbe
xchg
mov
ret
in
aad
xchg
gs
adc
mov
negb
scas
scas
bound
clc
or
add
add
dec
lcall
dec
push
repz
mov
popf
inc
pop
xchg
xchg
sbb
je
pop
pop
dec
jo
mov
dec
fisubrl
push
jns
leave
cmp
jle
int3
and
jns
ss
mov
in
mov
xchg
aam
mov
jge
jbe
xchg
cmp
mov
iret
test
repnz
and
das
ficompl
stos
add
jmp
add
cwtl
adc
imul
or
aam
rcll
mov
add
push
inc
add
inc
jne
pop
scas
sbb
sub
pop
leave
xor
sarb
cwtl
dec
fwait
in
sub
pop
jmp
mov
cmp
add
daa
xchg
icebp
loope
movsl
push
push
imul
jns
adc
pop
popa
lock
adc
rcl
sbb
jno
cmp
push
lret
adc
xchg
les
or
or
inc
mov
xchg
jecxz
subb
stc
jge
test
es
jb
pop
dec
jbe
pop
push
lahf
stos
xchg
xlat
std
ret
jmp
sub
jmp
sbb
jmp
test
popa
push
les
addl
mov
in
jecxz
pop
jno
inc
loopne
mov
add
push
imul
or
out
xor
adcl
xor
scas
clc
mov
sub
mov
add
mov
cmp
xor
and
pop
mov
hlt
test
adc
in
test
enter
fs
ret
insb
push
xchg
out
xchg
pushf
push
aas
dec
aaa
and
test
sarb
or
xlat
dec
pop
cmp
enter
add
dec
cwtl
aam
bound
test
fistps
cltd
lretw
cmpsl
aas
and
jge
lahf
xchg
cli
push
xchg
sub
pop
call
adc
lock
jb
xor
stos
imul
in
in
scas
sbb
dec
shrl
sbb
sbb
test
aam
pop
out
rcrb
or
push
xchg
mov
mov
cmp
lahf
ds
jle
sub
xchg
push
jg
push
lock
xor
ret
repnz
mov
sub
inc
mov
xchg
cmp
loopne
xor
xchg
push
rclb
and
xor
dec
movsb
jp
lods
mov
inc
pop
dec
cmp
jg
test
movsl
cld
dec
icebp
ficoms
xor
sbb
out
push
add
inc
lcall
out
jne
outsb
pop
mov
repz
push
jl
cmp
cmp
dec
movsl
stc
xlat
std
adc
mov
jbe
dec
mov
nop
adc
leave
cmp
push
into
lret
cmp
sahf
scas
lds
fstl
sub
in
or
mov
test
lret
aam
dec
inc
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
cmp
adc
test
ret
mov
mov
adc
xor
xor
jo
out
adc
aaa
lret
dec
fsubrl
jmp
cld
mov
jb
lcall
mov
movsb
push
outsl
xchg
fs
inc
test
clc
test
mov
cs
push
arpl
outsb
popf
jecxz
or
and
cmpsb
jl
jecxz
fs
loopne
dec
or
push
and
and
xor
lret
fbstp
fwait
adc
ja
std
aaa
mov
lods
fdivrl
jns
sbb
cmp
enter
mov
adc
pop
push
sbb
in
ficompl
push
test
imulb
xor
leave
ret
ret
jbe
jo
aad
icebp
pop
pop
or
pop
mov
sarl
out
es
fmull
insl
test
call
inc
xlat
cmpsl
lods
adc
dec
pop
popa
jnp
mov
dec
cmpsl
out
out
loop
dec
es
jno
xor
mov
addl
test
movsb
sbb
into
lcall
adc
jecxz
inc
into
push
and
mov
lcall
xor
pusha
nop
rcrb
pop
cmp
sub
je
sub
dec
jecxz
fisubrl
sub
adc
gs
cld
inc
pushf
and
cmp
je
or
pop
jp
in
mov
xchg
imul
mov
push
jle
mov
sub
and
jo
inc
jg
aas
inc
mov
pop
ret
sbb
and
lahf
and
and
pushf
jb
shlb
stos
js
mov
mov
xor
pusha
fcmovne
pop
and
rolb
mov
es
sbb
xchg
clc
and
fcomi
sbb
xor
add
jg
test
pop
cmp
js
adc
inc
dec
inc
popf
jp
cmp
test
out
mov
xchg
sub
cwtl
mov
jb
decl
into
mov
ds
push
push
call
shlb
inc
push
hlt
xor
xlat
dec
xor
cwtl
lods
leave
add
aas
enter
mov
sbb
fdivl
subb
jo
mov
shll
cmp
inc
call
jo
rcl
movsw
mov
sarb
jmp
hlt
lcall
inc
aaa
cmp
stc
dec
imul
scas
mov
addr16
in
lock
xchg
and
pop
imul
pop
mov
adcb
add
inc
lret
adc
aas
test
pop
and
adc
or
mov
cmc
enter
sub
pop
mov
sbb
les
add
fidivs
cmp
cld
stos
jo
adc
mov
pop
dec
mov
sbb
cmp
test
sahf
std
jae,pn
sarb
xor
mov
adc
lahf
adc
mov
sbb
mov
cmp
insb
iret
xorl
in
addb
xchg
mov
addr16
adc
xor
repnz
jo
adc
aad
lock
dec
out
test
jg
mov
xchg
dec
push
stos
in
mov
xor
js
into
imul
daa
repz
add
aam
rolb
pop
add
sub
jbe
mov
mov
jp
mov
adc
xchg
xor
cmp
mov
fwait
arpl
fnstsw
iret
je
dec
call
neg
adc
outsb
mov
insb
adc
mov
fnstcw
fidivrs
mov
scas
call
push
divl
xchg
pop
push
sbb
and
jns
xchg
gs
push
push
jecxz
ret
xchg
popf
es
es
cmpsb
mov
jg
in
shlb
mov
pop
sub
push
inc
jle
into
sbb
pop
mov
cmp
inc
add
ret
mov
mov
jle
dec
add
mov
mov
xchg
test
mov
xor
mov
mov
jecxz
xor
cwtl
xchg
movsb
jmp
cltd
in
das
in
rorb
add
add
and
or
repz
xchg
jne
xchg
xchg
cmpsb
inc
clc
adc
adc
mov
rcl
ficoml
out
lea
sahf
lds
or
dec
xor
stc
movb
int3
dec
out
xchg
sub
das
out
rolb
mov
pushf
adc
jno
push
mov
add
mov
mov
popa
mull
das
das
pop
leave
ret
out
and
jb
add
idivb
jae
repz
fildll
mov
lcall
std
test
xchg
xor
push
stos
push
js
scas
or
mov
call
fsubrl
dec
and
mov
das
xor
imul
test
fsubs
bound
dec
imul
cmc
add
js
sar
inc
stc
or
push
adc
imul
lcall
jb
fldenv
arpl
das
fst
inc
cmc
mov
mov
gs
add
inc
sub
loop
mov
mov
shll
inc
jne
das
into
mov
and
inc
mov
mov
xor
xor
inc
pop
mov
xchg
or
push
pop
int
mov
ret
adcb
ljmp
push
in
sahf
xchg
mov
mov
test
movsb
cli
or
call
addr16
bound
cmpsb
push
inc
dec
inc
test
and
adc
mov
test
notb
push
insl
push
or
jns
mov
pop
push
cld
mov
jmp
add
mov
aas
pusha
pushf
insb
sub
jl
jae
push
pop
repz
and
hlt
aas
add
xchg
cmpsl
lock
jnp
mov
mov
popf
mov
testb
adc
sbb
mov
xchg
mov
lea
ret
jecxz
cmp
mov
and
inc
loope
in
push
hlt
mov
pusha
mov
test
in
leave
xchg
push
std
push
fists
push
pop
add
roll
sbb
mov
add
inc
mov
push
and
add
out
les
insl
fsubs
and
add
lea
cmp
repnz
push
popf
jbe
mov
mov
dec
fs
push
mov
and
fidivs
in
lock
pusha
mov
adcl
push
mov
xor
fisubrs
sbb
sub
push
dec
hlt
lds
cltd
xor
movsb
shl
jno
std
inc
stos
mov
sarb
xor
inc
fs
ret
pushf
insb
sbb
jp
enter
fidivs
cmpsb
das
sbb
lods
flds
loope
mov
or
push
sbb
inc
and
mov
stc
fs
les
inc
pop
mov
jl
add
or
jbe
and
adc
loope
xchg
dec
add
mov
cwtl
add
in
popf
test
jle
inc
sbb
ja
into
jmp
mov
sbb
insb
or
sbb
pop
icebp
cmc
mov
test
dec
clc
or
adcl
pop
test
xchg
fs
repnz
mov
cmpsl
jno
cmp
sub
adcb
ds
fimull
fdivs
xor
movsb
cli
inc
mov
out
cwtl
mov
xchg
cmpsb
xchg
xchg
in
lahf
sub
popa
dec
inc
cltd
clc
in
setle
pop
sub
adc
jns
das
push
inc
cli
cmc
add
ljmp
loope
movsb
int
pop
mov
or
subl
data16
add
and
repnz
bound
psrld
shl
cmpsl
pusha
adc
add
jb
cld
not
cmpsl
js
mov
sahf
dec
call
xor
addb
xchg
cmpsb
int3
xor
xor
push
ds
mov
push
stos
pop
jnp
inc
mov
jno
sub
ss
xor
inc
jo
hlt
xor
add
test
xchg
pop
in
pop
lea
push
mov
std
insl
cli
imul
outsl
add
out
enter
push
clc
xor
add
je
and
push
scas
add
dec
dec
in
xchg
or
fldcw
sub
andb
lcall
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
dec
adc
xor
adc
adc
cmp
movsb
mov
mov
out
sarb
shrb
push
inc
add
sbb
cmp
inc
mov
sarl
pop
xchg
jno
mov
mov
and
dec
adc
rep
push
movhps
sbb
icebp
ja
std
adc
pop
adc
enter
or
fcoml
imul
hlt
sbb
aad
pushf
notb
pop
inc
jne
movsl
testb
xor
aas
in
adc
pop
and
sub
sahf
jo
loopne
add
int
clc
mov
mov
fldenv
cmp
lret
sub
pop
sub
or
pop
movsb
jo
push
add
ret
sbb
pop
in
and
int3
stos
add
lret
mov
cmc
pushf
ss
and
sub
inc
ljmp
stos
sub
push
mov
outsb
sbb
fcmove
dec
stc
popa
fs
and
dec
test
roll
and
sub
dec
jmp
cmpsl
cmp
xchg
mov
xchg
fisubs
sbb
mov
repz
push
inc
mov
sbb
movsb
fldenv
jecxz
int
in
aas
pop
clc
inc
dec
mov
ret
cmp
out
lods
sbb
mov
xchg
add
or
push
es
inc
es
lahf
cli
or
rcll
sahf
push
rclb
ret
or
dec
and
sub
out
in
mov
jae
push
js
sbb
xor
loopne
jge
movsb
pop
xchg
sbb
inc
pop
movsl
pop
aam
cmp
pusha
call
mov
bound
dec
loop
pop
dec
arpl
push
adc
loope
cmpsl
xchg
lret
mov
js
insb
add
xor
jecxz
gs
ss
aad
hlt
fwait
dec
mov
ret
mov
pop
cmp
addr16
xor
and
inc
mov
stos
sbb
arpl
fdiv
enter
dec
imul
lea
leave
push
inc
push
add
arpl
or
mov
sub
popf
outsl
cmp
jge
pop
jno
xchg
lods
sbb
cmpsb
xor
test
int
mov
std
add
mov
mov
lret
loop
rclb
dec
xor
out
fdivr
pop
fwait
xor
pop
data16
in
aaa
arpl
mov
add
xchg
jge
fcmovne
sbb
adc
ds
xchg
mov
sub
cmp
loope
ljmp
sub
arpl
leave
sbbb
in
mov
loopne
mov
and
sub
push
sub
lods
jecxz
test
sbb
jge
jnp
mov
gs
push
mov
sarl
aad
or
fstpl
xchg
jecxz
loopne
bound
inc
and
das
mov
stos
inc
rorb
sbb
pop
ljmp
aas
insb
fsub
fwait
stos
aam
lock
movsb
bound
rcrl
daa
daa
and
pop
sub
std
sub
push
stos
cmp
sahf
lods
sarl
jb
xchg
imul
cld
inc
dec
or
repnz
gs
jge
dec
mov
and
adc
into
inc
clc
jbe
pusha
mov
add
xchg
out
test
sbb
cmp
dec
icebp
xchg
pusha
sbb
das
or
add
test
cmpsl
mov
jbe
mov
push
push
sbb
cmpsl
dec
jge
xchg
out
cmpsb
daa
xor
xlat
les
lret
fwait
test
sbb
jns
stos
sbb
jne
das
cwtl
mov
clc
out
adc
lds
imul
sbb
and
jae
jg
pop
jp
dec
dec
push
inc
push
lret
pop
lock
fcomp
leave
decl
pushf
adc
stos
rclb
clc
or
into
call
lds
or
pop
stos
push
pop
xchg
pop
loopne
and
sub
aas
popf
inc
mov
lock
testb
movsb
ret
add
cmp
movsb
rcl
stos
pop
jb
xchg
into
adc
mov
mov
test
cwtl
xor
mov
sub
rorb
fistps
mov
movb
push
xchg
mov
fwait
pop
or
or
pop
in
out
jns
push
sbb
test
push
sub
jg
sbb
cmpsl
mov
arpl
jbe
pop
movsl
xchg
cs
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
jbe
push
mov
clc
adc
adc
mov
mov
mov
sub
mov
scas
pop
sub
push
mov
into
xchg
repz
jbe
jle
pop
mov
insl
sbb
aad
loope
xlat
sbb
jp
adcb
dec
sbb
lahf
inc
mov
rcl
or
fadds
cmp
int
ror
sub
inc
pushf
ss
mov
jge
inc
mov
pop
out
jae
lahf
mov
xchg
fld
xlat
mov
xor
adc
mov
xchg
aas
stc
sub
inc
xchg
repnz
add
pop
int
out
cltd
lcall
jae
xchg
jns
arpl
pop
pop
imul
out
jno
icebp
rcll
mov
inc
push
push
cmp
dec
in
or
test
push
mov
xor
adc
stos
loop
leave
dec
xchg
icebp
jmp
dec
pop
mov
and
dec
pop
inc
adc
mov
addl
sub
add
in
dec
aad
daa
rclb
in
or
out
pop
jae
lret
xor
lds
jnp
jmp
enter
add
sbb
cs
test
pop
dec
pop
das
adc
sub
lret
frstor
pop
xor
call
cmpsl
xchg
loope
pushf
sub
daa
aaa
push
insb
push
and
in
nop
mov
pop
into
add
aas
push
hlt
and
xor
aam
and
jge
xor
pop
sub
clc
cmpsb
push
jnp
repz
sub
or
sub
add
or
add
dec
push
pop
push
jmp
xchg
jo
fsubl
mov
pusha
mov
mov
push
in
push
adc
imul
push
mov
icebp
jne
dec
mov
push
in
repnz
lea
dec
nopl
mov
inc
ljmp
adc
xor
cmp
nop
push
into
and
rorl
dec
outsb
pop
pop
adc
nop
jecxz
adc
insb
xor
push
cltd
sub
movsl
or
data16
dec
xchg
xlat
lock
jmp
sbb
mov
mov
imul
mov
in
inc
xchg
mov
xchg
mov
jmp
mov
dec
and
mov
fcoml
cli
mov
pop
or
and
imul
out
int3
xchg
int3
adc
mov
xlat
test
push
imul
subb
mov
lret
mov
jg
je,pt
jle
in
sti
outsb
stc
jge
push
xchg
testl
push
push
xchg
pop
jne
cmpsb
movsl
subb
mov
sbb
pop
push
pop
cmc
sbb
inc
sub
out
pop
imul
add
or
cmp
pop
cltd
data16
add
pop
cs
fldcw
xlat
test
shlb
bound
push
push
std
push
mov
popf
icebp
insl
movsl
dec
inc
push
pop
mov
lods
lret
maxps
mov
xchg
jno
pop
cmpsb
mov
cmp
adc
dec
out
popa
jne
and
xabort
mov
frstor
into
push
cmp
andl
repnz
shl
push
jae
jo
inc
movsl
mov
xchg
lret
push
mov
popf
push
adc
push
lock
or
mov
stos
jl
pushl
sub
inc
out
sbb
push
and
fsubs
xor
jbe
out
rcl
xchg
push
xchg
push
adc
sbb
fsubrp
outsl
das
push
sub
js
ret
sbb
mov
outsl
fiaddl
inc
push
inc
jmp
icebp
stc
jnp
add
mov
mov
mov
cltd
adc
in
jo
sub
pusha
std
adc
call
imul
push
es
mov
sti
adc
ja
sub
mov
pop
push
ret
stos
xor
push
jne
push
test
lret
arpl
jl
push
jge
loop
xor
movsl
xchg
fcompl
mov
sbbb
test
jnp
ss
out
jns
outsl
mov
arpl
xchg
mov
repz
or
testb
inc
test
adc
inc
outsb
push
mov
dec
repz
cmp
or
dec
jmp
adc
test
or
xchg
int
inc
mov
shrl
mov
loop
push
cmp
ljmp
and
jmp
mov
push
mov
into
mov
xchg
lds
and
adc
fisubrs
pop
bound
fsubl
ja
push
cmp
ja
es
lahf
xchg
push
dec
mov
xchg
inc
lahf
push
loopne
jge
in
std
and
adc
jb
add
arpl
neg
cmp
out
lcall
mov
daa
daa
arpl
mov
mov
cmp
sbb
push
scas
into
push
mov
cmpsl
sarb
imull
xchg
in
cmp
cmp
ljmp
clc
or
jne
icebp
mov
and
hlt
sub
stc
test
popf
scas
aaa
jo
jns
jle
fcmovne
inc
pop
je
and
add
int3
sub
ja
out
add
negb
pop
mov
mov
lds
sbb
sbb
mov
push
outsl
iret
jne
lahf
mov
ret
daa
pop
rep
roll
xchg
dec
xchg
mov
mov
insb
and
adc
stos
sti
outsl
xchg
push
rcrb
icebp
or
sbb
mov
call
fs
adc
mov
dec
or
outsl
cli
inc
out
push
or
inc
pop
outsl
mov
out
push
mov
xlat
lds
out
call
xchg
pop
pop
loopne
int
cmp
out
jb
jb
pop
push
lods
pop
int
in
nop
jb
pop
pop
call
outsb
cld
lds
out
gs
ds
xchg
cld
sbb
hlt
pushf
mov
test
pushf
sub
push
dec
sar
scas
imul
push
cmp
lds
mov
jne
stc
mov
dec
jge
sub
out
push
cmp
and
mov
push
sbb
add
scas
mov
dec
mov
add
push
es
pusha
rcrl
shrb
xchg
repnz
iret
bnd
adc
roll
bnd
xor
mov
ss
les
mov
icebp
lret
dec
lret
jbe
add
xlat
push
xor
jo
cmpsb
std
shll
pushf
push
nop
inc
mov
fdivr
push
fstp
iret
dec
sub
push
mov
aaa
mov
mov
or
sbb
adc
sahf
cwtl
xor
aam
hlt
cs
es
mov
rclb
jne
mov
mov
lods
stc
stc
sub
sti
mov
jnp
mov
mov
xor
mov
mov
cmpsl
sahf
lea
sbb
add
and
pop
mov
pop
cmp
cmp
lods
movsb
sti
adc
jno
mov
enter
cmpsb
test
fcom
ss
inc
fsubl
sbb
and
js
lcall
cmp
xor
incl
in
and
add
fldt
push
fsubl
ljmp
inc
loope
cltd
xchg
inc
xchg
or
xor
dec
sbb
pop
adc
and
mov
scas
movsb
fsubrs
mov
lret
push
jle
fsubl
outsl
or
andb
das
mov
testb
jne
mov
sbb
ds
add
enter
xor
js
mov
cmp
imul
mov
push
lret
cli
mov
fcmovbe
lcall
lods
or
push
fcmovne
sub
je
and
out
sbb
adc
sbb
frstor
xchg
xchg
insb
mov
sbb
jl
cmp
pop
es
inc
xor
add
lds
aaa
and
cltd
repnz
test
insl
push
jecxz
in
outsb
nop
inc
iret
push
jb
leave
fisubrl
inc
push
dec
pop
andl
mov
cmp
mov
mov
arpl
pop
dec
or
mov
dec
adc
pop
pusha
or
insl
sub
sub
dec
repnz
jb
sti
and
mov
xor
inc
jmp
xor
inc
adc
imul
and
push
cwtl
adcl
pusha
fidivrs
jno
ficomps
hlt
push
push
repz
inc
cmp
shrb
test
mov
dec
std
jle
fbld
outsb
mov
inc
mov
ror
mov
add
fisttps
stc
xchg
subl
jne
icebp
push
push
push
mov
jne
cmp
fldenv
mov
movsl
in
lea
rcrl
or
push
or
pop
xor
addr16
mov
mov
data16
xor
cmpsb
or
movsb
jae
mov
gs
pop
jecxz
or
mov
popf
mov
sbb
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
dec
test
clc
adc
adc
subl
scas
mov
jmp
icebp
lea
shr
push
pusha
adc
nop
les
inc
sbb
add
sbb
mov
cs
cmp
insb
addr16
push
arpl
iret
jge
pop
xor
pop
and
aad
outsl
jb
jg
popa
test
cmp
or
in
mov
pop
cmp
hlt
scas
pop
pop
mov
sbb
pop
push
sbb
adc
mov
dec
jne
pop
jae
nop
cli
scas
dec
or
push
jbe
in
lods
insb
test
pop
jns
sub
mov
mov
fs
mov
mov
clc
clc
data16
sub
mov
mov
and
ljmp
add
or
dec
aaa
popa
and
push
leave
sub
pop
push
adc
jb
dec
cmp
ret
jno
sti
pop
mov
aas
cmpsl
out
dec
adc
cmpl
daa
jp
sbb
lret
mov
jne
xor
add
add
cs
mov
fiadds
sbb
icebp
push
jb
stos
xchg
pop
loope
jo
repz
or
push
and
mov
cld
inc
mov
test
mov
es
or
mov
add
lret
add
cmp
mov
or
mov
iret
das
lcall
mov
dec
fisubl
push
mov
push
aas
clc
push
pop
add
inc
and
mov
loop
mov
xchg
push
icebp
mov
mov
mov
xchg
sbbl
inc
lcall
mov
adc
dec
lea
int3
push
jne
pop
cmp
enter
adcl
mov
push
adc
xor
dec
mov
jmp
stc
push
bound
out
inc
in
addl
sbb
mov
stos
inc
jnp
sti
lahf
idivb
xor
aam
mov
dec
xchg
or
add
outsb
testl
bound
sbb
xor
dec
ret
inc
mov
in
movsl
pop
mov
inc
lret
cld
cli
sbb
pop
and
pushf
push
sbb
icebp
dec
cmp
xchg
pop
pop
and
inc
rol
pop
sub
adc
fstl
scas
hlt
movsb
je
orb
aam
xor
xor
lahf
add
mov
int
push
iret
mov
neg
jnp
push
push
cs
loop
sbb
push
pop
adc
inc
sbb
sarl
leave
in
sbb
sbb
mov
xor
in
xchg
pop
inc
pushf
cmp
pusha
xor
push
loop,pn
xor
xlat
xchg
scas
into
hlt
das
pop
push
jle
sahf
setge
add
fdivp
mov
icebp
sbb
and
push
and
rcrl
sbb
or
rorl
add
roll
jnp
jg
inc
lcall
and
out
dec
shll
xchg
add
dec
in
dec
mov
js
packsswb
rcrl
push
jle
mov
shlb
mov
mov
and
dec
movsb
push
add
xchg
jp
jle
mov
aas
dec
pop
sbb
adc
xor
or
rcll
movsb
scas
jae
mov
es
cmpb
push
test
into
xor
test
jnp
add
pop
sub
repz
mov
jmp
mov
bound
add
add
imul
cs
jg
mov
sbb
cld
or
xchg
sahf
mov
pop
pop
stos
cmpsb
sbb
sbb
xor
and
push
jb
cli
and
dec
insb
jae
mov
and
pop
aas
insl
jo
int3
pop
das
mov
xchg
aam
int
loop
sub
imul
cs
push
cmpsb
or
lcall
and
mov
mov
mov
jmp
ret
add
enter
push
addl
sub
sbb
aas
pusha
bound
jmp
fneni(8087
out
ljmp
xorb
xor
fwait
pop
inc
repnz
inc
push
xchg
cmp
inc
sbb
stos
sbb
movsl
and
outsb
pushf
in
xchg
orl
jmp
mov
test
adc
inc
and
pop
sbb
push
js
adc
data16
mov
cmp
cs
fcoms
cmp
jnp
add
sub
ja
push
mov
call
dec
push
and
ret
lods
loope
or
xchg
pop
mov
xchg
call
stc
push
cmpsw
fdivrl
pop
sbb
bound
lds
int3
pop
ret
lods
and
stc
sub
cld
loop
pop
push
mov
mov
sti
or
mov
mov
and
sub
movsl
das
std
sub
and
testb
push
xor
insb
mov
pop
pusha
shll
push
lret
fbstp
das
add
jno
mov
enter
sub
dec
out
sbb
adc
test
push
jae
pop
or
call
pop
sub
cltd
xchg
xor
rorl
push
lea
popf
add
test
mov
adc
ret
loopne
shlb
in
pop
aad
mov
mov
push
dec
mov
into
mov
sbb
push
movsb
mov
mov
mov
movsb
mov
push
in
sbb
cmc
lret
dec
mov
test
cmp
pop
add
jmp
xlat
inc
mov
rcl
sub
fdiv
sbb
cmpl
inc
jg
push
call
push
sbb
cmc
pop
xchg
xchg
incb
repz
mov
addr16
xchg
mov
jecxz
xchg
jo
sub
inc
out
stos
mov
aaa
nop
xor
nop
mov
push
sub
lods
push
testl
push
mov
mov
shl
enter
jp
lcall
mov
outsl
mov
sti
push
jo
inc
jge
ret
in
clc
dec
add
aam
mov
pusha
mov
adc
inc
sahf
sub
cmc
pop
lods
and
adc
sbbb
dec
xor
and
jne
vcvtsd2si
mov
pop
pushf
pusha
xchg
cmpsb
js
inc
ret
cwtl
cwtl
mov
mov
test
sub
mov
pusha
sub
outsb
mov
cmp
pop
fs
fisubrl
adc
in
mov
movsl
repnz
mov
adc
test
jp
push
xor
push
ror
xchg
pop
test
test
stc
mov
or
sub
es
ljmp
pop
clc
pop
cld
loope
cltd
mov
push
inc
in
pop
dec
lret
mov
repz
es
mov
jp
push
testl
cmp
cltd
adc
inc
fisubs
cmpsl
or
mov
dec
sbb
fs
xor
inc
mov
mov
xchg
mov
ds
mov
jl
jg
push
jbe
data16
in
sub
lcall
lods
dec
addr16
cmpb
jge
cmpsl
pop
cmp
push
lds
fisubrl
loop
arpl
sbb
insb
push
pop
push
outsl
movsl
push
sub
aaa
add
lock
xchg
fdivrp
add
add
xor
stos
dec
aas
adc
mov
into
out
loop
lods
add
fidivrl
push
gs
orb
icebp
bsf
lock
test
inc
jne
inc
imul
idivl
mov
jl
sub
sub
mov
xchg
sbb
inc
xchg
jle
test
jecxz
into
sub
sbb
cmp
movsl
gs
push
dec
enter
sbb
mov
xchg
rcr
or
push
stos
and
xor
ret
inc
insl
mov
fidivrs
movsb
jmp
inc
xchg
push
insl
fs
jnp
rol
std
cmp
lahf
fnsave
jb
inc
sub
add
fstpl
enter
iret
jmp
in
mov
mov
test
loop
xchg
mov
jo
stos
and
popa
rorb
lea
pop
insl
and
dec
push
inc
or
fmull
js
cmpsl
test
fwait
dec
test
into
or
into
xor
adcl
add
movsb
push
adc
into
jmp
lret
fidivs
inc
bound
fwait
and
mov
dec
jno
stc
mov
sbb
fcoml
or
bound
std
inc
fwait
loop
sub
sbb
add
cli
addb
bound
xor
mov
insb
pushl
push
sub
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
notb
adc
push
rorb
sub
test
inc
xchg
jecxz
ret
mov
add
mov
xlat
xchg
js
mov
in
add
aaa
shlb
xchg
scas
xor
add
add
dec
xchg
push
in
xchg
mov
jp
loop
sub
push
add
adc
push
push
inc
or
pop
jg
int3
mov
and
jp
adc
xor
cmovg
xor
mov
sbb
hlt
icebp
pop
stos
cld
insb
jg
jmp
dec
mov
gs
pusha
mov
out
mov
outsb
aaa
addl
dec
add
or
aam
pop
cltd
push
inc
fistpll
mov
push
pop
ja
push
loope
fists
or
mov
ret
jle
int3
je
rorb
test
pop
cwtl
add
jbe
xor
and
aad
test
fcmovnbe
test
xor
inc
mov
mov
fadds
movsb
int
cmpsb
pushf
fsubl
test
das
jbe
mov
push
adc
push
xchg
sub
ds
jle
xor
out
aam
movsb
xchg
cmpsl
bound
shrb
inc
popf
fs
testb
aaa
es
movsl
sub
xchg
and
mov
sub
aam
or
cmp
push
loop
xor
inc
rorl
sub
arpl
test
cmp
std
test
cwtl
sti
or
cmpsb
inc
cmc
int
sbb
aam
push
mov
loope
stos
out
xor
mov
sub
popa
pushf
dec
gs
daa
mov
cmp
iret
jnp
xchg
lds
insb
pop
jbe
bsf
and
ret
sub
jg
imul
cmp
lahf
incl
in
adc
jnp
and
mov
hlt
ljmp
punpckhbw
adc
movb
sub
mov
lret
xor
xor
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
