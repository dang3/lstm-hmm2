push
mov
sub
xor
jmp
into
rcr
aad
mov
cmc
dec
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsl
andb
mov
fimull
arpl
iret
dec
lds
scas
into
frstor
mov
push
cmp
fbld
shll
mov
inc
popf
mov
jnp
outsb
mov
mov
cwtl
jl
xchg
sbb
cmc
sbb
rcr
flds
lock
or
mov
xchg
jl
inc
cmpsl
arpl
je
mov
and
std
addr16
push
xchg
and
xor
push
or
push
repnz
mov
arpl
jb
int
mov
xchg
jae
filds
jns
mov
not
jle
lock
push
movsb
and
inc
mov
inc
nop
add
repnz
inc
jne
in
or
and
jg
mov
rclb
out
std
mov
loopne
inc
cld
push
test
fnstcw
imul
or
xor
pop
sub
jecxz
hlt
or
loop
icebp
cmp
pop
adc
pop
add
push
jb
daa
and
cld
ss
loope
lds
arpl
dec
ja
aas
sub
sub
pusha
add
fbstp
adc
xchg
sub
push
fcoms
test
cmp
fs
add
mov
mov
ja
mov
into
ljmp
adc
mov
ret
scas
xchg
mov
cmp
stos
xchg
push
iret
push
push
lret
or
sahf
es
negl
push
popf
or
scas
imul
aaa
and
pop
sub
or
ffreep
ds
add
mov
cmp
and
into
ja
imul
cmpsb
sub
mov
int3
outsb
inc
or
mov
ret
jns
imul
mov
xor
and
insl
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
add
jle
js
jle
js
mov
and
xchg
loope
frstpm(287
mov
mov
xchg
mov
xchg
sbb
or
sub
adc
cmp
mov
mov
rorb
aad
sbb
adc
loopne
pop
push
push
push
cmp
add
fadd
ret
addr16
jg
rorl
ljmp
mov
sbb
in
lds
popa
lret
ljmp
jbe
inc
pop
jo
movsb
cmp
dec
in
adc
in
pop
enter
pop
dec
inc
and
movsl
pop
pushf
push
ljmp
mov
mov
push
dec
adc
sahf
cmp
fists
aaa
fsubr
rcrb
pop
outsl
xor
js
insl
push
js
popf
or
inc
mov
ja
outsl
fs
mov
test
outsl
les
adc
sub
sub
daa
sub
xchg
pop
lahf
nop
cmp
sub
sbb
stc
mov
movsb
jnp
outsb
xchg
pushl
mov
mov
test
cmp
addl
push
mov
add
jl
ficoml
mov
es
push
movsb
aad
lret
or
mov
fsubs
and
jmp
pop
mov
mov
loope
aam
dec
push
mov
xchg
push
shlb
push
lahf
sbb
call
popa
jbe
ljmp
lods
pcmpgtd
scas
cmpb
mov
xor
mov
mov
mov
ljmp
sub
jae
test
mov
sub
mov
int3
aad
xchg
mov
jb
cmp
xchg
inc
incb
shlb
cmp
jo
cmp
sub
lock
je
mov
cwtl
mov
adc
arpl
add
test
addr16
pop
ljmp
pop
sub
es
fnstenv
fucomip
push
ja
in
sbb
pop
scas
cmpsb
xchg
lods
jno
movsl
pop
add
pusha
mov
jle
inc
jnp
adc
cmp
das
fistps
daa
jbe
jne
dec
orl
cmp
push
in
mov
inc
loop
mov
jge
movl
add
cmpsl
inc
add
imul
lock
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
pop
out
jl
js
jle
js
jnp
stos
push
test
outsl
out
shlb
clc
aas
jnp
je
jmp
pushf
int
xor
or
mov
pop
daa
jecxz
imull
cs
or
lret
pop
jbe
pushf
mov
loopne
or
loope
nop
test
mov
cwtl
jns
cltd
sub
outsl
xchg
loope
loop
sub
jecxz
push
in
jnp
pop
in
sbb
mov
sub
sti
or
sarl
cmp
cli
xor
in
jmp
imul
notb
push
dec
aam
add
or
lcall
push
xorl
lock
cmc
lea
jae
icebp
jbe
and
or
lea
out
and
push
push
and
out
jbe
push
addr16
push
je
ret
xor
push
into
iret
xor
rol
adc
lahf
ret
jne
out
xorl
jae
push
mov
outsb
into
mov
in
xchg
lods
daa
aas
sub
push
ds
sub
pusha
sahf
push
out
sbb
test
pop
sub
dec
out
pop
fiadds
mov
push
inc
cmpsl
dec
push
rcrl
insl
pop
pop
lahf
jg
divb
test
aaa
cmp
xchg
mov
addr16
adc
je
jp
xor
inc
mov
mov
mov
negb
xchg
jae
stos
mov
out
push
cmpsb
sub
test
mov
fnstsw
jge
aam
adc
js
jp
lock
push
sbb
add
sbb
jl
sub
scas
testl
mov
jnp
sahf
gs
aaa
dec
sub
bound
mov
aas
mov
call
pop
xor
mov
mov
dec
gs
imul
popf
mov
test
sti
ljmp
cmp
aaa
nop
add
loop
insl
mov
inc
sub
cmc
xor
fwait
or
repnz
sub
dec
ret
add
stos
das
xor
out
and
ret
push
orb
push
push
xchg
dec
shl
jp
mov
add
pop
hlt
xchg
hlt
fwait
fs
sbb
les
cmp
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
and
popa
addb
js
jle
js
in
lret
dec
or
cs
cli
sahf
popa
mov
jl
cmp
pushf
stos
add
arpl
push
insb
int
fwait
or
inc
mull
imul
test
add
mov
jnp
sbb
aad
sbb
outsl
inc
add
std
adcb
cmp
sub
and
popf
push
icebp
in
rolb
das
mov
add
xchg
mov
inc
out
outsl
xchg
push
mov
rorb
pop
dec
mov
fnstsw
outsb
and
inc
ja
dec
jg
inc
iret
mov
mov
jae
push
and
mov
jb
mov
incl
or
cmp
mov
or
fwait
arpl
mull
in
mov
std
mov
and
je
loop
mov
aad
fwait
lods
sub
clc
popf
in
xchg
inc
cwtl
adc
inc
sub
in
and
mulb
lret
dec
icebp
arpl
mov
jecxz
xchg
cmpsb
cmp
orl
fadd
in
push
cltd
push
icebp
out
movsl
sbb
outsl
lods
xchg
add
inc
jmp
movsb
xor
mov
loope
test
add
test
push
mov
or
adc
in
mov
cmpsb
pop
adc
lret
fldenv
push
js
and
cmp
int3
test
and
or
ljmp
cmpsb
out
dec
imul
rcr
mov
lret
cmp
shrl
int3
gs
add
adc
js
cmp
repnz
imul
shll
xchg
push
pusha
jae
or
pushf
leave
fistl
push
dec
dec
stc
add
xchg
scas
xor
xchg
pop
mov
adc
xchg
mov
jbe
pushf
call
aad
mov
addb
rcrl
mov
clc
xor
inc
mov
faddl
or
sub
mov
and
in
and
stos
jns
inc
and
outsl
sub
sahf
cmp
loop
cltd
mov
sbb
pushf
js
add
xchg
xchg
sub
sub
mov
outsb
xchg
adc
pop
fidivl
sub
fisttpll
sti
add
push
popw
scas
insb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
negl
add
js
jle
js
jo
add
cwtl
push
lret
iret
mov
aad
lock
dec
popa
or
scas
fnstenv
push
cmp
fidivrs
bnd
inc
popf
rclb
or
call
add
insb
xchg
lret
mov
in
jo
fistl
cmp
xchg
and
pushf
hlt
sti
pop
fildll
lcall
cs
dec
or
and
aas
test
in
rcll
xor
addl
mov
movsb
pop
je
repz
push
call
iret
fmulp
imul
xor
mov
loope
inc
bound
js
and
push
lods
pushl
adc
pop
shlb
into
or
cmpsl
and
add
mov
out
subl
xor
into
or
xchg
aaa
adc
cmp
cwtl
hlt
ret
lock
mov
add
lcall
movb
sub
sub
and
aas
adcl
jno
inc
sub
inc
sub
stc
mov
cmp
scas
fimuls
imul
insl
ret
popf
adc
mov
jl
sub
sbbb
and
cmp
sub
xchg
cmp
mov
pop
pop
sti
xchg
sti
sub
cmp
ret
push
jl
loop
mov
mov
adc
stc
add
pusha
nop
loopne
mov
inc
push
shlb
mov
and
jne
in
int3
mov
jl
push
mov
sbb
mov
xchg
cmp
push
popa
mov
pop
dec
pop
mov
xchg
scas
xchg
imul
inc
sahf
jmp
xchg
aad
mov
jmp
lods
jns
xor
jns
dec
sbbl
stos
push
outsb
cmpl
in
pop
rclb
insl
es
movsb
mov
out
pop
pop
shl
dec
inc
mov
push
push
push
aad
or
in
dec
sahf
ja
and
and
sub
mov
je
dec
cld
adc
xlat
push
mov
and
cmp
adc
les
leave
adc
addr16
sbbb
mov
mov
addl
leave
std
fildll
lods
cmp
push
adc
or
rolb
cmp
mov
test
add
icebp
cmpsl
inc
add
inc
or
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
scas
fstpl
inc
inc
adc
negb
jns
pop
mov
mov
loop
ss
push
out
or
push
xor
xchg
cli
in
aas
xchg
xchg
movsb
decb
test
xchg
jg
ds
gs
test
inc
xchg
cwtl
lock
test
leave
inc
push
adcb
mov
add
jg
push
or
jns
jns
lock
pop
xchg
sbb
jae
sbb
ss
and
cmp
out
rcrb
ret
cmp
pop
cld
mov
in
lret
mov
jp
push
scas
or
mov
and
add
dec
jbe
xchg
call
push
inc
sahf
insb
sbb
cmp
jne
sub
mov
xchg
sub
bound
jae
pop
sbbl
out
sbb
inc
std
mov
sbb
ss
and
out
dec
pop
popf
xchg
fbstp
ficomps
out
dec
popa
mov
dec
mov
in
dec
cs
je
shlb
psrad
fldl
insl
jo
fdiv
adc
test
push
out
lahf
or
rorl
xchg
out
dec
lds
test
mov
lock
and
mov
dec
pop
dec
jno
mov
movsb
mov
pop
jmp
das
sbb
mov
shr
jl
mov
mov
adc
rorb
dec
repnz
adc
ljmp
ret
lcall
int
fidivrl
push
gs
inc
ja
fldenv
jno
cmp
xchg
sub
pusha
out
arpl
sti
add
das
loopne
jl
es
pop
jmp
lods
add
adc
cmp
out
clc
in
in
jne
dec
mov
push
adc
notb
les
xor
aam
add
jl
or
mov
mov
jbe
add
pop
dec
ds
jns
push
popf
mov
dec
fadds
mov
icebp
fistpll
jp
setbe
pusha
shrb
mov
pop
pop
data16
mov
dec
test
jge
aad
ljmp
sub
and
fs
ljmp
cltd
ret
paddsw
sti
cmpl
cmp
int
cwtl
push
pop
int3
dec
jg
sub
aaa
jle
movb
mov
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
add
js
jle
js
cmp
cmp
mov
ljmp
in
xchg
insb
add
jl
and
ja
xor
adc
lds
mov
inc
jle
sbb
subl
push
adc
stc
jge
or
add
xor
mov
daa
test
cld
or
cltd
lods
mov
jae
pop
pop
shll
insb
shll
mulb
mov
idivb
mov
sub
xchg
cli
mov
pop
insb
pop
push
mov
xchg
jbe
pop
xchg
ljmp
push
pop
popf
mov
lahf
jp
fnsave
lcall
mov
pop
daa
xchg
cmpsl
cmpsb
jo
lret
aaa
rorb
jo
sbb
jnp
push
int
out
aas
movsl
in
scas
mulb
xor
fcmove
int3
sti
mov
popa
lea
shrb
cmp
sbb
sbb
pop
mov
dec
pop
push
dec
pop
jno
sbb
int
mov
sub
je
inc
movsl
push
push
push
lret
out
jnp
xchg
push
lods
fchs
or
xchg
mov
imul
mov
adcb
pop
aam
push
xlat
sbb
push
in
fistpl
ds
negb
js
fisubrl
mov
arpl
movsb
aas
inc
push
out
mov
hlt
sub
out
adc
sti
jl
xor
in
push
lods
mov
jp
repz
mov
daa
mov
mov
addl
xchg
call
fldenv
cmp
ficompl
xchg
popf
in
outsl
in
inc
cmp
aam
jnp
pop
pushf
daa
nop
inc
sbb
fst
lret
dec
jmp
out
idiv
out
leave
mov
xchg
sub
inc
not
inc
pop
ror
ss
push
inc
pop
push
rcll
in
iret
xor
loope
cld
cs
jp
push
fsubrl
pop
and
pop
lods
dec
bound
in
vorpd
inc
cmp
dec
cld
sarl
jl
adc
jbe
mov
scas
jg
mov
mov
pop
mov
loopne
dec
mov
jl
cmp
stos
stc
dec
jg
or
dec
mull
lret
xchg
mov
pop
mov
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
in
mov
mov
js
jle
js
inc
push
out
push
jmp
jg
inc
fmuls
cltd
jge
push
sub
out
lods
lock
add
dec
in
pop
jl
int
and
inc
insb
mov
push
cmc
js
je
pop
filds
xchg
call
mov
dec
and
xchg
loop
out
add
dec
bound
jl
push
xor
push
out
mov
inc
xor
mov
sub
int
cmp
loop
cld
pop
sbb
mov
xor
es
icebp
push
xchg
rep
jns
mov
sub
cmp
int3
cmpsb
outsb
jle
aas
movsl
repnz
fs
push
sub
xor
fidivl
sbb
push
adc
or
or
mulb
pop
and
imul
insl
int3
and
dec
and
jmp
mov
add
daa
and
dec
movsb
pusha
test
std
dec
xlat
pop
in
js
mov
inc
dec
add
dec
push
push
push
les
fcomp
and
fcompl
push
pop
inc
add
dec
pop
js
mov
fwait
jp
in
popa
fs
cmp
hlt
jns
rcll
sbb
outsb
inc
outsl
sti
push
xchg
fsts
imul
je
fstpt
xor
pop
ja
lret
stc
sub
ds
jp
add
push
fimull
mov
sub
stos
clc
in
sbb
inc
pop
rorb
jl
in
jae
sarl
negl
in
pop
popa
cmpl
pop
rcrl
sbbl
push
jle
roll
mov
cmp
insb
int
push
ljmp
dec
xor
jge
jp
clc
jae
mov
sbb
in
and
or
lods
adc
hlt
lock
lret
cmp
add
jle
xchg
and
sub
fsubl
push
movsb
or
in
jne
mov
dec
sbbl
jb
mov
jno
pop
aam
jno
push
xchg
xor
inc
jmp
shrb
inc
leave
and
cmp
js
into
into
les
pop
faddl
pop
shll
cmp
loop
xor
pop
mov
pop
pop
jg
push
rorl
fdivl
aam
xor
out
mov
in
das
sub
add
cmp
mov
dec
fisttpll
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
push
and
js
jle
js
scas
popfw
gs
pop
and
xchg
pop
cmp
incb
int3
shlb
jnp
add
insl
or
int
sti
ret
jae
popf
cltd
rorb
xchg
in
pop
movsl
or
cmp
pop
int
xchg
ljmp
jbe
sub
mov
xorl
popa
in
cmp
iret
jo
pop
stos
loope
div
cld
stos
sbb
pushf
sub
shl
loope
sti
dec
ficomps
shll
cmp
push
out
sbb
mov
std
testl
imul
call
leave
test
xchg
shr
sahf
stc
ret
pusha
cmp
into
insb
flds
movsl
adc
shlb
mov
push
mov
or
test
sahf
or
aam
js
jns
ret
mov
in
jge
lock
int3
or
jns
mov
cs
jmp
sbb
add
mov
lods
not
jmp
jmp
std
push
stc
jp
push
mov
or
push
rolb
fs
in
out
push
sub
insl
testl
jmp
js
mov
cmc
jle
mov
or
icebp
inc
sbb
pushf
loop
mov
or
data16
rcr
fsubrl
push
out
out
jns
push
add
pop
or
mov
jl
scas
stc
mov
jg
iret
cmp
repz
mov
xchg
and
mov
mov
cltd
mov
test
sbb
and
out
js
add
jo
sub
inc
cmc
lds
jg
in
insl
xchg
push
mov
or
xor
or
inc
mov
xchg
xor
outsl
cmpsl
gs
mov
shrb
push
xor
jo
xor
icebp
adc
cmp
push
or
dec
daa
cld
scas
and
in
jl
dec
sub
xor
mov
xchg
add
loope
fld
sub
mov
movsb
mov
xchg
xor
std
xor
push
or
jl
lea
ficoml
dec
push
cmp
icebp
push
mov
pop
jl
iret
cmpsl
loopne
cmp
pop
sbb
sub
jmp
ror
int
rcr
aad
bound
sbb
js
jle
js
dec
mov
int3
scas
adc
push
out
aas
enter
fisttpll
into
adc
dec
jecxz
mov
push
xor
pop
pop
rep
mov
jno
mov
lds
push
pop
mov
push
cmp
jo
xchg
sbb
or
jmp
mov
xchg
in
sub
hlt
addr16
lret
stos
icebp
dec
push
leave
call
jae
mov
adc
jle
icebp
sbb
movsb
scas
ret
xor
shlb
fwait
xor
sbb
mov
sbb
sub
int
cmp
sbb
push
cmpsb
ljmp
sub
mov
inc
nop
js
sahf
mov
xor
add
outsl
adc
ret
push
in
mov
in
loope
clc
in
xchg
cltd
shr
mov
or
mov
cli
pop
aaa
pop
mov
xlat
insw
sub
push
push
push
sbbb
cmp
leave
jg
lret
jnp
or
jae
mov
or
dec
ja
mov
pop
aad
add
ret
jne
std
and
gs
clc
shlb
mov
ficomps
push
loope
cmpsl
jnp
mov
and
push
xor
lret
push
pop
inc
jo
or
imul
scas
js
icebp
mov
in
mov
pop
mov
jo
xor
ret
pop
sbb
ret
sub
aaa
xor
xor
insb
xchg
gs
inc
clc
repnz
mov
and
mov
sub
lahf
cmp
out
adc
xchg
mov
in
mov
inc
loop
dec
add
xlat
repz
idivl
pop
cltd
lcall
or
daa
mov
jl
enter
inc
dec
int3
jbe
fists
or
push
imull
xchg
mov
push
out
shrl
jmp
xchg
lea
fmull
movsl
sbb
adcb
sub
jne
and
xor
mov
scas
scas
lret
jo
inc
aaa
cmpsl
dec
pop
mov
push
push
xchg
pop
jb
fisttpll
cmp
psubsb
sub
test
in
mov
loopne
push
iret
mov
pop
pop
mov
jo
popa
pushf
std
lock
repz
repnz
fcmovb
mov
and
imul
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
cmp
pop
js
jle
js
loopne
stos
cwtl
cmp
imul
push
jp
aaa
fmuls
dec
cld
out
lahf
lret
ja
sbb
in
sbb
jbe
xchg
sbbl
in
loope
and
xor
pop
cmc
or
adc
aas
rcrb
mov
xchg
std
mov
jl
shrl
popl
gs
mov
sbb
sbb
fcoms
jecxz
pop
sahf
mov
or
sub
aam
ljmp
cmp
push
xchg
mov
mov
sub
bound
out
dec
lods
fiadds
inc
xchg
int3
xorl
xlat
pushl
iret
sbb
or
and
and
push
jnp
adc
adc
xorl
jecxz
repnz
loope
inc
in
mov
jnp
mov
jns
mov
arpl
pop
cmp
cmp
jae
inc
lods
dec
jl
jo
in
cld
fadds
out
mov
scas
lods
ret
daa
mov
pop
mov
mov
add
es
roll
cmp
fcmovnbe
jmp
dec
rorb
sbb
mov
cmp
and
mov
es
push
mov
pop
insl
das
aam
push
mov
lcall
push
sub
mov
test
fistps
xor
shlb
push
insb
shlb
nop
push
add
std
cmp
pushf
lds
or
int3
jae
cmc
push
imul
push
adc
aad
gs
cmp
xchg
inc
push
mov
mov
fldl
stc
sub
loop
xor
mov
add
xchg
jb
jl
iret
pushf
sub
pop
lret
xchg
lods
mov
loop
dec
mov
stos
imul
int
adcb
inc
out
push
push
sub
in
lahf
outsl
fdivr
xor
xor
xor
ficoms
loop
ljmp
scas
pop
dec
fnstenv
or
mov
xchg
mov
inc
test
arpl
cwtl
pop
lock
nop
dec
mov
inc
push
mov
xor
leave
std
mov
orb
sub
xor
mov
test
aam
mov
das
rcl
fisubs
dec
clc
jmp
ror
ror
ror
test
xchg
push
jecxz
sub
adc
js
mov
pop
lret
mov
cmp
and
iret
xor
fadds
sarb
das
ret
jnp
push
sub
lahf
psubd
out
stos
and
popa
push
cwtl
mov
xor
shr
mov
jo
aas
mov
or
ret
mov
rorl
movsl
int
xor
rolb
mov
gs
jae
jo
mov
lods
adc
or
ljmp
push
icebp
mov
mov
or
mov
or
rcrl
cmc
cmpsb
cmp
push
adc
sub
nop
lcall
mov
int3
mov
ret
jo
jp
jno
and
xor
je
push
repnz
jl
dec
adc
mov
out
cmpsb
add
mov
dec
sbb
mov
in
cli
push
mov
and
push
cwtl
lcall
and
sahf
cli
jns
mov
out
lss
jo
xchg
inc
mov
adc
push
xor
and
iret
subl
inc
add
inc
cli
repz
jbe
or
sbb
stos
or
push
subl
xor
mov
movsb
shrl
mov
inc
and
cmp
sub
mov
mov
jg
mov
inc
mov
cmc
inc
sbb
jle
gs
push
in
mov
jno
sbb
call
test
sbb
lock
inc
mov
pop
and
push
push
xchg
sbbl
xchg
and
push
jl
lods
or
jns
scas
push
xchg
aam
pop
inc
jns
dec
xchg
dec
ja,pn
or
pop
jno
aas
mov
push
cwtl
push
mov
push
add
mov
jp
jo
adc
fldcw
adc
lods
xorl
iretw
addl
mulb
or
dec
pusha
shl
xor
jo
sub
xchg
cmp
xchg
pop
dec
xchg
pushl
mov
lds
jb
add
xlat
cmp
push
xorb
push
in
jg
mov
roll
nop
stos
jle
jne
iret
sub
adc
sti
or
mov
loope
push
rorb
adc
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
jo
outsl
adc
js
jle
js
dec
add
xchg
ret
add
xchg
ss
cli
popa
test
and
dec
mov
xchg
fimull
pop
popf
jl
into
lahf
insl
push
xchg
pop
call
xchg
sub
jbe
mov
pop
jb
sub
push
sub
sub
add
filds
xor
int3
mov
scas
cmpsl
jno
pushf
and
adc
stos
ret
dec
out
sarl
inc
test
xor
int
cwtl
aas
xchg
mov
mov
push
scas
jnp
sti
fnsave
mov
loopne
mov
adc
xchg
std
lods
stos
and
cmpb
popa
mov
push
daa
or
add
sub
cmp
cmpsb
cmp
ret
clc
sbb
ds
jle,pn
cmp
int
mov
lret
add
fwait
sub
jnp
or
and
pop
test
clc
leave
incb
mov
adc
test
xor
mov
fsubr
imul
mov
mov
enter
dec
xchg
in
xchg
mov
addr16
and
xor
stos
sti
das
inc
jle
sbb
push
cmp
in
repz
xchg
insb
das
adc
sub
sub
test
ss
test
cmp
jns
fistpll
jle
and
adc
xchg
cmc
dec
or
or
lcall
aam
hlt
mov
sbb
cmp
and
cmc
lcall
jmp
iret
pop
ficoms
xor
and
fsubl
sti
and
dec
in
fs
cmp
sbb
mov
mov
mov
ljmp
out
arpl
jnp
cltd
jo
adc
inc
mov
daa
fsubr
lea
jne
fistpll
push
orb
gs
rolb
mov
mov
or
fisubs
xchg
testb
xor
clc
enter
test
inc
pop
rolb
sub
mov
fs
loope
jbe
dec
gs
cmp
sar
mov
push
pop
aas
and
push
les
push
inc
mov
adc
push
jge
lock
pushf
sub
aas
xlat
sar
sub
rclb
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
sbbl
jle
sbb
pusha
xor
mov
ret
lods
js
xchg
cli
lock
mull
mov
xchg
sbb
lods
pop
pushf
dec
cltd
shr
stos
cmp
ja
sbb
add
aam
push
cmp
sarl
je
push
mov
xchg
sub
fisttpll
add
push
jp
in
sub
jmp
cltd
jnp
or
ljmp
cmp
sbb
mov
ja
js
mov
rolb
jno
leave
jg
mov
ds
daa
sbb
pop
nop
cli
retw
adc
pop
pop
push
mov
mov
jae
pop
out
lss
lods
testl
ja
adc
out
mov
dec
dec
push
lds
notl
loopne,pt
add
fsubs
and
insl
mov
addb
xchg
mov
lahf
jmp
js
xor
lea
sbb
fdivs
fwait
sarb
sub
and
jle
das
ds
mov
mov
loopne
arpl
jl
imul
sbb
sub
push
and
mov
sub
adc
rorl
inc
or
cli
daa
fwait
cmpsb
inc
dec
xor
stc
mov
mov
hlt
pop
push
icebp
inc
push
push
jl
enter
outsl
ret
mov
dec
jmp
jno
jg
les
movsb
aad
cltd
dec
test
mov
pop
fstps
pop
fsubrp
sub
popa
push
xchg
in
and
lods
xor
adc
loopne
stc
fcmove
adc
mov
pop
ds
push
insl
orb
xchg
outsb
adc
insl
push
in
insb
mov
add
in
les
into
ja
int
ljmp
int3
addb
add
add
je
loopne
in
push
inc
in
stos
test
popa
es
nop
dec
gs
jnp
lods
jp
adc
nop
ret
iret
shl
push
rorb
sbb
sub
ret
sbb
hlt
sti
lret
pop
ss
mov
cmpsb
jmp
shl
cli
mov
inc
repz
mov
stos
jmp
and
mov
xor
pop
fists
daa
push
imul
mov
lock
cmp
lcall
ror
mov
fwait
aas
stos
adc
js
jle
js
xchg
xchg
sub
sub
test
add
lahf
movsb
cli
or
push
jnp
aaa
cmp
cmp
dec
add
mov
enter
insl
cltd
int
lods
push
push
ss
sahf
push
mov
cmp
xorb
push
cmp
sub
movb
fisubrs
sti
xor
adc
enter
add
or
dec
or
shrb
jb
in
scas
pop
int3
mov
xchg
sbbb
out
pop
les
lahf
or
lock
pop
dec
jecxz
cmp
lds
lods
frstor
pop
repnz
dec
imul
addr16
in
mov
xchg
pusha
pop
lcall
js
sti
lret
or
xchg
push
imul
repz
cmpsb
das
data16
lret
jge
pusha
in
shl
rcrb
jle
test
fnstenv
push
dec
loopne
nop
mov
cmpb
jb
in
pop
mov
mov
add
cmc
ss
js
gs
hlt
aaa
ret
jg
pusha
push
add
and
test
ret
adc
adc
pop
mov
dec
test
jmp
lcall
loopne
push
out
push
push
shlb
sti
push
or
scas
sub
mov
lret
mov
frstor
stos
lock
scas
mov
rcll
mov
cld
insb
jl
mov
call
push
test
and
xor
int3
add
in
fucomi
ljmp
fcmovbe
mov
lock
loopne
add
add
xor
sbbl
xor
js
adc
mov
jno
adc
pop
add
mov
dec
mov
ret
lds
and
ficomps
outsb
movsl
pop
nop
rorb
push
push
loope
cwtl
sbb
rcr
mov
push
enter
popa
cmp
add
scas
loop
inc
into
dec
lock
and
mov
inc
in
fldenv
std
cmp
pop
pop
cld
test
insb
lretw
daa
jmp
pop
inc
cltd
and
int3
icebp
cmp
inc
mov
sub
jb
dec
imul
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
sbb
mov
jle
js
mov
pop
adc
cmp
fisttps
add
clc
push
mov
and
jbe
lret
imul
push
movsb
sub
sbb
sub
cmp
pop
stc
jge
jp
add
push
xlat
push
push
jle
cwtl
jne
cmp
incl
push
sub
ret
adc
add
mov
imul
fstl
pop
pop
cltd
gs
int3
push
icebp
lock
sub
pop
ja
fistpll
jmp
mov
repnz
mov
orb
push
mov
mov
jb
ret
fstpl
mov
jo
fiaddl
je
xor
sbb
int3
push
and
cmp
xchg
cs
aam
loop
adc
fs
xor
mov
rcrl
xchg
in
je
shl
lock
fdivrl
mov
fwait
fwait
aam
jb
mov
fldt
xchg
pop
fisttpll
enter
and
out
inc
test
movsb
jnp
dec
int
sahf
adc
mov
and
sbb
and
icebp
outsl
xchg
mov
and
roll
dec
mov
push
outsb
pop
or
in
cs
fstl
and
sbb
sub
ret
sbb
pop
ficoms
popf
and
and
test
nop
or
into
fs
jae
insl
xchg
cmp
pop
push
pusha
push
loop
xor
pop
adc
shl
stos
mov
mov
adc
sbb
push
ss
xor
ds
cld
jp
push
jmp
mov
cltd
and
fists
xchg
shlb
add
sbb
insl
mov
test
jns
inc
aaa
cmp
idivl
ret
xchg
shrb
test
test
xor
add
xchg
rorl
das
scas
call
sub
xor
in
sub
pop
jl
cmc
xor
cmp
dec
aaa
or
jnp
pusha
scas
cli
push
push
pop
cmp
hlt
js
aaa
mov
mov
fcoms
in
push
outsb
mov
test
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
jle
pusha
sbb
js
jle
js
outsb
ficompl
mov
mov
shlb
mov
into
lock
orb
pop
add
rorb
movsb
cmc
addl
mov
addr16
dec
cli
inc
fcompl
xchg
div
insl
imull
leave
pop
xlat
lret
xchg
in
lret
and
je
dec
and
fwait
iret
arpl
add
lcall
addr16
mov
fidivrs
lret
insb
stc
cmp
cmp
adcl
mov
push
jecxz
xchg
mov
lcall
jp
adc
jp
fs
lret
lock
pop
bound
fucom
pop
xchg
xchg
mov
in
test
and
aam
push
mov
xchg
mov
cmp
repnz
sbb
mov
add
jmp
out
xchg
pop
ja
addr16
repnz
mov
dec
repz
int3
push
dec
fidivs
push
sahf
dec
lret
mov
lea
or
clc
lahf
or
cmp
mov
dec
mov
push
xchg
mov
rcll
out
cmp
pop
loopne
sbb
add
ret
sahf
inc
xchg
mov
scas
pop
dec
lahf
add
sbb
adc
fwait
xchg
mov
std
dec
jg
lret
mov
pop
mov
test
xorl
into
sbb
ljmp
in
push
mov
xchg
xchg
cmpsb
fcompl
sarb
adc
mov
loop
mov
lods
adc
push
ss
andb
jmp
or
hlt
test
push
mov
aam
adc
mov
pushf
jmp
pushf
pop
cmc
cltd
in
mov
iret
mov
push
lea
sti
cmc
out
es
js
xchg
dec
mov
repnz
mov
lods
pop
inc
push
iret
dec
int3
xor
adcl
imul
test
xchg
int
mov
aam
xchg
into
ret
or
inc
inc
or
mov
les
and
mov
push
inc
xor
sbb
cmp
lcall
ss
adc
pop
clc
fldcw
or
cwtl
sub
fdivs
not
push
scas
lret
dec
pop
lret
lret
mov
xchg
bound
hlt
fmuls
dec
iret
or
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
sub
mov
jle
js
dec
out
jge
mov
inc
push
inc
cli
jno
or
mov
das
es
jnp
pop
lock
push
xchg
push
mov
add
mov
xor
repz
out
push
js
insb
movsl
jp
movsl
addr16
mov
in
xchg
and
je
pop
or
mov
xor
out
cwtl
jg
cmp
add
in
cmp
xchg
aad
arpl
nop
add
sbb
insb
sub
dec
inc
rcrb
jo
or
addr16
inc
pop
aam
mov
sub
ja
lahf
jl
insl
jl
push
sub
cmpsl
hlt
je
test
test
pop
ror
jp
filds
mov
ljmp
jmp
xchg
js
mov
sub
jmp
pop
in
fs
push
test
adc
cmp
scas
jp
sahf
inc
pop
mov
aam
leave
xchg
adc
dec
add
mov
or
out
int3
lods
add
fistps
jae
inc
cwtl
mov
xchg
insb
mov
scas
mov
stos
lock
mov
out
outsl
into
xchg
cmp
mov
mov
or
mov
jmp
jmp
adc
sub
push
mov
adc
mov
outsl
stos
loope
shlb
test
in
mov
push
in
xchg
and
into
push
dec
push
repz
mov
lcall
adc
test
fs
nop
or
inc
pop
add
cmpsb
call
lock
cwtl
xchg
loope
testb
push
outsl
jo
nop
sti
cltd
mov
push
mov
xor
push
inc
and
inc
outsl
sbb
mov
fwait
adcl
roll
sbb
mov
inc
xchg
sub
or
sub
xchg
xorb
clc
loopne
scas
and
jmp
or
in
dec
cwtl
ds
mov
add
push
repnz
xchg
inc
or
dec
clc
jle
jl
add
subb
and
jmp
mov
mov
jl
sub
mov
jbe
imul
repnz
out
inc
xchg
mov
in
mov
sub
mull
or
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
imul
js
dec
jle
js
xor
les
jo
dec
cmp
sub
and
cmp
jno
push
jb
jle
mov
xchg
jecxz
cmp
addl
in
aaa
mov
xchg
lcall
cmpsl
cmc
mov
sarb
fwait
cwtl
mov
fldl
loopne
push
test
movsl
mov
cmpb
stc
and
or
xlat
mov
fnsave
cs
or
test
jecxz
xchg
addl
sbb
stos
mov
hlt
data16
jmp
test
cmovno
fcmovbe
and
jge
std
daa
mov
adc
les
stos
push
ret
xor
mov
rorl
dec
aaa
add
and
mov
out
lods
and
inc
add
xlat
fidivrl
lea
pop
sub
gs
icebp
inc
inc
shl
and
xor
add
mov
ret
call
cmp
loopne
inc
jae
lds
sbb
gs
fcompl
pop
inc
mov
mov
repz
pop
test
add
shll
cvttps2pi
lea
sub
call
xor
leave
lcall
mov
ficompl
inc
jnp
jle
pop
aaa
orb
daa
ljmp
rclb
dec
lea
daa
fcompl
ret
out
ja
mov
std
sub
sub
and
dec
insl
test
mov
jp
insl
push
jne
mov
mov
xor
movsl
repnz
inc
cmp
fcoml
jns
inc
ret
mov
fbstp
and
adc
push
in
lock
pop
dec
call
xchg
in
pop
lahf
iret
and
cs
and
mov
pop
ljmp
mov
mov
movsl
inc
mov
cmp
popa
mov
inc
dec
aad
aad
jmp
cmp
xchg
jge
fmuls
push
out
add
and
xchg
rcr
or
cmpsb
shrl
cmp
loopne
cmp
lret
inc
cs
or
mov
and
xchg
addr16
cmp
pop
aad
or
inc
xchg
cmp
jo
jle
mov
xchg
xor
ret
mov
adc
outsl
mov
mov
jne
push
jg
sbb
in
push
mov
sbb
mov
push
imul
sbb
xor
add
dec
movsb
dec
inc
xor
and
jbe
cmp
pop
inc
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
xchg
sub
js
dec
jle
js
clc
mov
mov
cmp
out
mov
xchg
jmp
xor
mov
adc
lods
stc
addl
out
mov
fistpl
stos
push
push
lock
mov
add
out
pushf
nop
fwait
push
ss
pop
jae
jmp
jae
xor
pop
sub
and
cmp
adc
movsl
push
movsl
inc
aad
adc
shll
mov
aaa
test
push
std
push
fidivl
or
mov
fbld
xchg
lock
jo
inc
sbb
fdiv
push
int
mov
imul
mov
jle
fisubl
inc
sbb
mov
je
shrl
push
xchg
lock
decb
out
sbb
and
xchg
mov
cmp
test
pop
clc
or
ds
mov
lret
xor
mov
in
jg
xlat
cmp
mov
push
and
jle
add
lret
or
push
jl
addl
mov
aam
ret
xor
jle
cmc
mov
inc
xlat
lahf
scas
out
movsl
mov
in
mov
sbb
out
lods
cli
or
inc
sbb
inc
test
icebp
popa
into
add
lret
mov
mov
pop
xorb
xor
test
xchg
test
and
sarb
lcall
aad
call
or
pop
xlat
stc
outsb
leave
mov
test
std
sbb
xor
orb
cmpsl
into
xchg
outsb
adc
mov
outsl
jno
adc
sub
mov
sbb
lret
pop
shll
popa
cmp
std
push
dec
inc
push
pop
lcall
inc
push
lea
sub
in
stos
cmp
in
and
xchg
jg
cmpsl
stos
gs
add
push
adc
add
add
ja
sbb
daa
pop
call
cwtl
aam
mov
jnp
mov
insl
or
test
and
lcall
inc
ja
nop
jae
mov
jp
fildl
jle
lds
cmp
in
negb
mov
jnp
dec
je
in
das
pop
sahf
ljmp
jbe
fdivrs
cli
cmpsb
mov
mov
dec
out
test
movsb
pop
lock
lcall
pop
lahf
push
roll
mov
nop
cs
xor
xorb
add
int3
cmp
or
js
add
sbb
mov
add
mov
in
dec
fidivrs
enter
push
adc
pop
iret
cmp
js
push
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
mov
js,pn
dec
jle
js
scas
das
jle
loop
cmp
mov
cmpsl
mov
aaa
dec
xor
gs
aam
jmp
mov
sbb
mov
adc
stos
sti
inc
mov
jbe
pop
in
add
push
ret
int
mov
orb
dec
inc
mov
hlt
xor
sub
sbb
sbb
mov
mov
mov
add
insb
jbe
pop
imul
fs
and
and
insl
adc
or
ret
cmp
into
insl
and
xchg
hlt
inc
add
aam
or
into
xchg
mov
out
or
pop
mov
sbb
andl
stos
addr16
xorb
mov
and
inc
jo
xchg
aam
mov
loopne
mov
xlat
push
jo
rcpps
les
jle
xor
in
push
jo
and
sbb
jmp
jmp
into
xor
adc
nop
cmp
std
aaa
xor
fisubl
insb
es
mov
andl
stos
test
enter
mov
xlat
adc
cmpsb
ret
stc
pop
mov
cmp
popf
or
fldcw
and
popf
std
push
add
jne
pop
stos
cli
imul
mov
cld
sub
or
adc
cmp
in
push
daa
movsl
or
jge
and
leave
and
sbb
es
pusha
and
and
sub
jae
xor
inc
imul
pop
cmp
leave
xchg
fdivl
lea
pusha
dec
and
fnstenv
aam
out
and
daa
push
mov
lret
ret
gs
cmp
sbb
lret
adc
bound
push
xorb
adc
lods
adc
lret
lcall
sbbl
inc
in
or
lret
fnstcw
add
mov
dec
aam
sarl
add
inc
stc
shll
push
mov
fs
repnz
fistl
scas
jnp
ret
mov
push
mov
xor
dec
push
xor
xor
aas
ds
jp
xchg
loop
and
test
ret
pop
and
xchg
lcall
cmpsl
sbb
out
sub
inc
in
adc
xchg
lea
jmp
cmp
sbb
xor
popf
jecxz
dec
cmpl
mov
and
xor
and
cld
sbb
das
bound
xchg
fmull
mov
pushf
mov
js
lret
aas
xor
adc
inc
jne
mov
xor
jge
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
cmc
pop
cmp
dec
jle
js
mov
daa
sub
data16
ja
or
movsl
xor
orl
or
mov
adc
or
push
movsb
xchg
notb
lahf
sub
inc
jbe
push
gs
out
sbb
push
add
jge
imul
mov
lods
hlt
repnz
testl
and
mov
jl
jo
xchg
mov
decl
or
iret
ficompl
inc
fstps
xchg
xchg
mov
mov
adc
int
jmp
cmp
pop
ror
orl
adc
sub
push
push
clc
jmp
lret
bound
pop
scas
jecxz
fnsetpm(287
mov
mov
inc
nop
scas
loopne
outsb
sbb
lea
jb
test
add
daa
adc
loopne
push
shll
or
loop
mov
in
les
jno
ret
fildl
imul
xchg
jmp
adc
out
jbe
and
dec
imul
or
push
jns
push
adc
dec
imul
sub
sub
outsl
ljmp
jg
cmc
movsl
fwait
je
xor
jns
xchg
and
cmp
push
mov
es
in
adc
mov
mov
ja
pop
add
call
pop
sbb
hlt
cmp
pop
stos
and
sbb
lods
adc
mov
dec
add
js
movsb
adc
or
cmp
cmp
and
push
gs
mov
aad
push
xor
pop
inc
mov
lock
push
sub
fldenv
and
adc
in
fisttps
pop
pusha
push
fists
gs
ret
sahf
loopne
loopne
test
or
mov
xchg
xor
mov
clc
cmp
clc
push
add
test
cmpsb
loopne
xchg
mov
mov
enter
cli
pop
and
add
fstp
repz
shrb
js
fildll
sti
or
cmp
add
inc
rclb
test
call
outsb
adc
enter
adc
dec
mov
pop
xor
leave
clc
jecxz
pusha
frstor
stos
sbb
out
jbe
mov
ret
sbb
pop
jmp
lds
xor
icebp
scas
push
xor
test
sub
sarb
fistpll
and
jecxz
sbb
push
jmp
popl
gs
insb
pop
add
out
daa
adc
push
mov
bound
insl
jb
xchg
movsb
repnz
cmp
sub
aad
in
add
cmpl
adc
roll
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
cmpsb
call
jle
js
popa
test
mov
inc
sbb
out
xor
js
inc
mov
fcoml
cmpsl
cli
stc
test
test
out
rolb
cld
cli
flds
xlat
mov
ljmp
shlb
ficoml
push
jge
int3
xor
xor
ror
mov
add
pushf
xchg
mov
adc
xor
and
pop
add
mov
pushf
loop
inc
lods
in
jbe
sbb
nop
int
jno
dec
xlat
sbb
sbb
into
roll
popf
pop
je
or
jg
fisttpll
scas
ret
pop
sbb
adc
in
add
inc
ret
and
aad
sbb
jb
cmp
js
sub
popa
in
mov
loope
popa
lods
ja
dec
push
pop
leave
jbe
insb
push
in
clc
loope
mov
je
imul
and
imul
lds
sbb
xchg
pop
push
int
cmp
repnz
xchg
ljmp
mov
fcomps
add
into
mov
pusha
jb
test
xchg
or
ret
stos
mov
jne
jbe
sub
mov
repz
mov
iret
fwait
fwait
repnz
repnz
mov
nop
loope
sbb
std
lock
push
scas
pop
xor
xchg
xchg
xor
std
test
adc
popa
mov
push
scas
inc
fisttpl
jns
xchg
cmp
rorl
mov
dec
fimull
and
test
js
cwtl
subb
imulb
lcall
les
xchg
sbb
mov
pop
in
scas
and
mov
popa
cmc
std
add
lock
out
and
std
movb
cld
das
in
sbb
xchg
xchg
adc
add
pop
pusha
sub
inc
push
in
inc
pop
rolb
cmp
cmpsb
add
xor
mov
arpl
movsl
stos
in
mov
jecxz
ret
adc
jmp
or
add
mov
adc
xorl
fists
addr16
pop
mov
inc
mov
test
sbb
and
mov
in
adc
data16
out
into
inc
mov
in
test
jg
aas
rolb
scas
inc
mov
adc
add
jo
arpl
lret
jmp
mov
loopne
sahf
or
divl
test
lea
add
sbb
jp
lods
adc
sub
add
add
rcl
ror
aad
inc
jecxz
fdivr
jbe
add
jle
js
mov
jns
xchg
inc
and
jmp
dec
mov
jle
hlt
sub
mov
mov
push
sbb
and
repnz
sbb
int
stos
sub
lock
test
inc
stos
outsl
push
xor
lahf
mov
outsl
dec
rorl
das
mov
lock
mov
lods
test
mov
movsb
enter
ficoms
sti
js
mov
gs
in
fisubrs
jb
or
insb
xor
ljmp
lods
rcrb
test
gs
pusha
adc
inc
rol
cmp
jg
pop
enter
clc
push
repnz
adc
std
loope
add
arpl
pop
pop
fsts
js
push
mov
lds
in
mov
cltd
pop
stos
or
adc
mov
mov
out
cmp
cmp
movb
sbb
push
ret
or
inc
fldt
jge
icebp
adc
inc
jns
popa
sub
loop
push
sti
popf
out
xchg
mov
push
repz
mov
dec
mov
xchg
imul
sahf
jnp
das
push
les
mov
pop
xor
mov
mov
gs
xlat
lods
push
cmc
mov
cmp
aaa
cmp
loope
mov
mov
push
jo
fs
and
call
fstpt
test
adc
sub
mov
es
loop
dec
clc
lods
pop
inc
stos
test
hlt
push
lods
aas
xchg
shll
sub
movsl
cmp
xor
je
dec
test
mov
dec
or
mov
arpl
stos
and
jbe
call
cmp
das
or
ret
xor
pop
lods
sub
sbb
out
jp
sub
hlt
mov
sub
call
lret
negl
in
movq
pop
aaa
cwtl
and
aad
shr
xor
push
out
fdivl
pop
mov
jp
mov
roll
sub
push
push
push
pop
pusha
lcall
rcl
jbe
fcompl
mov
test
loop
lcall
insb
movsb
and
or
test
mov
fistl
movsl
dec
sub
mov
or
ficompl
dec
out
lds
sub
pushf
fsubr
aaa
mov
mov
mov
push
outsl
arpl
inc
mov
sub
sbb
jg
lcall
jp
jl
mov
xlat
or
hlt
lret
iret
xchg
es
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
push
imul
dec
jle
js
lahf
sbb
mov
inc
divb
gs
mov
test
mov
sub
mov
ret
cmovne
idivb
dec
mov
dec
sub
stc
mov
fsubrs
jp
push
cld
das
inc
inc
cmp
xchg
push
pusha
jl
mov
das
sarl
jge
outsb
jmp
or
sub
or
in
in
adc
xor
mov
jp
popa
rol
lods
jge
adc
add
sbb
xor
inc
or
push
ret
insb
mov
add
dec
mov
shll
imul
pop
pop
out
adc
pusha
mov
jle
es
xor
adc
sbb
das
mov
data16
add
scas
xchg
filds
xor
sbb
dec
jg
jg
xchg
pop
andl
out
insb
cmp
xlat
mov
jne
pop
ja
imul
jge
imul
leave
aam
cld
testl
jmp
mov
stos
popa
mov
xor
div
stos
pop
mov
mull
add
dec
fisubrl
std
cmpsl
jl
loopne
adc
outsl
mov
ja
repz
xchg
or
imul
cmpb
into
int
cmp
ja
sub
push
mov
fs
mov
adc
jno
xor
jns
out
xor
xchg
lret
adc
jecxz
or
mov
daa
jle
and
repnz
add
shr
mov
sub
out
icebp
cltd
icebp
addb
mov
aam
xchg
mov
cmc
mov
les
cmpsl
mov
dec
popa
mov
and
incl
jbe
dec
fadds
pusha
xorb
pop
mov
mov
jno
imul
cmpsl
mov
sub
lods
or
rcll
cmpl
faddp
jno
loope
xlat
iret
add
inc
gs
ficompl
mov
push
or
jecxz
lret
sub
shll
inc
mov
jne
pop
setb
push
add
adc
scas
and
pop
loopne
inc
cmp
cmc
stc
lret
xor
adc
aas
xor
cmp
mov
leave
insb
and
imul
bound
scas
xchg
cmp
push
iret
jle
ficompl
out
inc
pushf
shl
adc
jmp
cmp
cmc
fdivl
xor
fisubl
xor
std
in
mov
imul
adc
mov
mov
data16
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
fildl
or
js
dec
jle
js
movhps
or
dec
sbb
mov
out
xlat
dec
es
pop
cli
shll
inc
sbb
dec
cmc
mov
xchg
les
xchg
xor
bound
or
cmpsb
mov
and
pop
out
lahf
mov
scas
stc
push
xor
test
fstpl
in
std
je
in
aad
cmp
jbe
push
loope
ja
sbb
sbb
mov
rorl
test
insb
and
aam
lock
and
stos
movsl
xchg
jno
xlat
lods
fildl
jmp
ss
and
add
fdivp
fs
dec
enter
jno
sbb
pop
push
daa
mov
dec
aam
in
mov
outsl
mov
in
cltd
shlb
sti
std
cmp
lahf
lods
adc
fld
jp
cvtpi2ps
jecxz
pop
pop
andw
cmp
jecxz
movsl
mov
pop
push
and
aad
mov
cmp
int
cltd
lahf
add
xchg
and
aas
cwtl
pushf
xchg
es
jns
fnstenv
lahf
pause
popa
xor
lret
jns
ficoml
add
dec
shll
int
pop
add
aam
cmp
sbb
jnp
xor
cmpsb
stos
lret
ds
ret
imul
in
sahf
mov
xor
xor
clc
xor
lods
mov
pop
pop
inc
cltd
and
fiaddl
lock
sbb
imul
clc
das
hlt
inc
xor
lsl
mov
add
xchg
test
popf
popl
incb
jge
mov
xchg
pop
mov
and
sub
in
sbb
sub
adc
or
into
jae
inc
xchg
dec
fsubs
insl
push
pop
jne
call
test
enter
cld
lods
outsl
in
in
pop
call
mov
xchg
jecxz
adc
jne
dec
jo
enter
adc
or
sub
lods
cltd
mov
ret
inc
add
ljmp
aad
xor
mov
mov
cmp
cmp
call
stos
push
add
les
pop
jnp
pop
pop
jae
in
gs
into
dec
jl
fstps
mov
test
mov
lock
adc
mov
mov
push
aaa
sarl
mov
iret
int3
mov
shrl
mov
sub
test
outsl
xor
loop
and
mov
imul
js
aam
pop
cmc
xor
sets
stos
dec
in
mov
xlat
insb
mov
imul
pushf
fisubs
insl
pushf
inc
bound
or
insb
jnp
jae
dec
push
sbb
pushf
arpl
ljmp
sbb
pushf
arpl
jmp
add
rol
ror
leave
rcr
aaa
mov
jge
mov
js
dec
jle
js
add
xor
xor
push
xchg
test
je
out
lret
pop
rorb
shrb
inc
not
pop
cmpb
sub
add
into
mov
testl
push
test
aad
int3
fisubrs
cmp
bound
jp
sbb
aam
in
ret
adc
and
adc
ds
sbb
pushf
insb
out
mov
inc
sbb
js
pop
sbb
jecxz
sbb
dec
fnclex
fiaddl
insl
stc
mov
jmp
fisubs
ret
lock
fistps
imul
loope
pop
rcrl
je
lret
push
lahf
jbe
pop
sub
in
mov
xor
mov
popa
mov
fnsave
and
sbb
and
or
daa
push
add
pusha
push
std
mov
dec
aas
jle
mov
jl
insl
mov
sti
xor
outsl
pop
int
dec
cwtl
idivb
mov
cmc
loope,pn
adc
test
ret
adc
aam
adc
sub
mov
ja
inc
pop
scas
into
mov
sbb
mov
mov
sar
sub
xor
dec
pusha
jbe
hlt
ljmp
fmuls
mov
scas
xchg
aad
pop
pusha
mov
callw
jecxz
jo,pn
mov
fldl
jno
cmc
ret
dec
add
enter
mov
fists
pushf
mov
xor
or
push
outsb
or
loop
sahf
xor
sub
call
scas
mov
dec
hlt
mov
rclb
or
test
clc
lods
jecxz
fimuls
imul
sbb
ja
jecxz
add
or
std
cmpl
cmc
sub
shll
xchg
jbe
push
xor
cmpsb
mov
mov
xor
fldl2e
lds
addr16
xchg
pop
hlt
iret
aaa
idivb
mov
iret
mov
lock
test
call
push
lahf
fstpl
mov
inc
xchg
aam
adc
mov
pop
mov
ret
mov
sbb
out
jne
push
aad
or
xchg
inc
jb
mov
cmpsb
sysexit
cmpl
add
adc
xchg
rorb
push
mov
mov
hlt
sbb
mov
jle
dec
aas
lods
jb
mov
lret
enter
std
or
and
pusha
and
daa
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
jle
cmp
mov
js
dec
jle
js
mov
dec
mov
insl
test
loopne
mov
bound
cs
je
pop
mov
pop
lds
xor
imul
jae
cmp
insb
adc
int3
mov
pop
dec
cmpsb
add
nop
or
mov
push
mov
lcall
jno
sti
jbe
jmp
fcoms
push
inc
bound
jne
jmp
aas
dec
cmp
sti
adc
lods
dec
outsl
dec
add
mov
xor
push
and
jecxz
push
pop
lret
cmp
fs
pop
push
xor
xchg
or
call
pop
xor
sub
jp
push
xchg
call
js
mov
xlat
or
pop
ja
xchg
addr16
loop
mov
dec
subl
daa
cltd
mov
scas
inc
repnz
pop
push
fs
mov
or
fldl
daa
mov
xchg
aaa
add
inc
push
int3
push
lea
mov
jge
scas
sbb
mov
pop
mov
cwtl
out
xchg
push
push
in
shll
mov
insb
mov
lahf
push
roll
or
pop
pop
push
mov
and
insb
mov
outsl
xchg
rcrb
xlat
mov
xor
cmp
call
or
mov
outsl
inc
pop
or
testb
out
test
jecxz
sub
jecxz
cmpsb
movsl
pushf
and
movsl
mov
ret
loop
xchg
xchg
bound
mov
fildll
dec
pop
add
or
mov
shlb
pop
lods
and
push
repz
add
mov
xor
mov
push
sbb
adc
sub
pusha
repz
inc
xchg
or
popa
cmp
sbb
mov
add
inc
lahf
popf
lds
mov
dec
movl
pop
ss
add
ds
mov
xor
mov
dec
ljmp
test
and
jns
push
push
xor
adc
addl
pusha
jl
cmp
xor
inc
pop
pop
sbb
repz
jle
addl
sub
into
je
iret
inc
push
aaa
popf
jne
jb
iret
fcompl
jle
jbe
sti
mov
ljmp
push
xor
adcl
movsl
jbe
sbb
inc
insl
push
pslld
loop
mov
scas
and
bound
outsb
iret
jbe
cld
mov
push
inc
jb
and
xchg
lods
push
mov
xchg
int
push
add
mov
or
dec
adc
jmp
add
aas
ret
rol
sbbl
icebp
faddp
js
dec
jle
js
outsl
sbb
loop
pop
inc
hlt
rorb
xchg
sbbb
sahf
in
cmc
push
mov
sbb
or
bound
psubsb
dec
fwait
cwtl
jge
dec
movsl
in
push
mov
lea
nop
lods
jmp
repz
mov
lea
hlt
cmpsl
shll
cmpsl
mov
or
adc
lret
and
dec
pop
xchg
mov
dec
jge
ljmp
test
fxch
pop
orb
sub
mov
repz
and
sub
arpl
popa
push
push
jg
push
dec
packssdw
int
nop
arpl
adc
xchg
push
push
push
lcall
sub
push
mov
or
rcrb
loop
int3
pop
mov
rcrb
lods
sbb
xchg
stc
in
sbb
mov
or
fcoml
movsl
les
jae
in
test
jle
roll
add
and
jne
adc
sub
sub
mov
push
lods
pop
xchg
imul
aaa
mov
push
fiaddl
ret
lods
ret
push
mov
into
mov
je
push
and
mov
pop
adc
sti
lods
xchg
jp
and
divb
cmp
loop
xor
sarb
in
scas
fsts
jb
adc
dec
cmpsl
adc
or
push
push
pop
xchg
loope
repz
in
mov
mov
sbb
fnstenv
pop
push
sub
sbb
std
rcl
stos
jp
or
cwtl
xor
jmp
shrb
call
inc
movsl
push
jns
pop
jo
xchg
inc
cltd
push
sub
mov
aad
ds
adc
dec
mov
sti
out
sub
into
outsl
or
imul
sbb
mov
pushf
fwait
mov
mov
iret
and
xor
jge
jae
push
fsts
sbb
sub
mov
or
push
push
xchg
mov
xchg
sub
ss
and
and
cmpsl
adc
dec
xchg
cmpsb
fadd
push
mov
pop
cmc
push
mov
leave
in
adc
mov
jno
xor
dec
or
dec
xchg
shr
enter
stc
mov
fcoms
dec
xchg
and
shr
xor
enter
enter
lcall
jge
jbe
ret
out
in
scas
cs
scas
enter
movsl
es
xlat
push
leave
mov
xchg
or
sub
cmp
dec
adcb
xor
fimuls
shl
enter
sbb
jmp
ds
cmp
mov
test
les
dec
jle
js
push
inc
mov
addr16
add
call
in
hlt
addr16
aas
dec
fsubrl
jl
ljmp
aad
fs
cmp
adc
ret
inc
or
imul
jbe
dec
mov
or
add
shlb
enter
inc
pop
and
push
ja
xchg
in
jp
or
stos
sbb
js
mov
ror
lea
in
mov
xor
push
fsubs
addr16
or
pop
clc
ljmp
push
xchg
cmc
outsl
push
sti
push
mov
ljmp
rcll
sbb
leave
int3
mov
pusha
mov
repnz
pop
fcompl
jp
sbb
and
jo
hlt
scas
dec
iret
in
icebp
loope
loope
cmp
push
lods
jl
inc
iret
js
fidivrs
ret
in
test
fisttpll
pop
mov
cmp
lds
jns
ja
movsl
insl
enter
push
fmul
sub
aaa
jecxz
jg
fcoml
cmp
mov
adc
rcll
nop
stc
imul
std
cld
xchg
xchg
enter
xchg
mov
inc
mov
jl
jmp
lret
fsubr
lret
into
pop
xchg
add
bound
ss
fcmovbe
mov
or
rolb
scas
mov
test
enter
mov
dec
aad
push
mov
inc
mov
xlat
jle
outsb
mov
and
out
aam
call
mov
push
push
scas
cmp
cmp
leave
jbe
jb
inc
sbb
loopne
sub
rorl
mov
lea
adc
aad
dec
mov
scas
bound
idivb
inc
lock
sbb
pop
nop
push
sbb
js
or
pop
inc
stc
add
mov
in
inc
mov
jle
bound
adc
xor
or
sub
add
popa
mov
cmpsl
mov
xlat
dec
inc
push
aam
mov
fdivr
push
sar
dec
sub
mov
lods
out
repnz
adc
push
cwtl
cmp
cmpb
fwait
ret
sub
pop
popa
leave
out
sub
jg
out
iret
xchg
rcrl
and
outsl
jmp
mov
pop
ds
inc
lods
cmp
mov
mov
lea
je
fs
mov
iret
inc
jg
ljmp
inc
xor
sti
scas
sbb
mov
sbb
lret
xchg
call
in
mov
mov
add
aaa
cmp
and
adcb
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
jp
mov
js
jle
js
ret
sub
out
cmp
xor
mov
xor
insl
int
xor
aam
fadds
mov
cmp
lock
sarb
jno
in
lret
popf
lods
call
cmp
cmp
cmp
xchg
jo
out
rclb
mov
sbb
fistps
adc
shrl
lea
cmp
pusha
cwtl
xchg
in
xchg
test
jge
sbb
mov
push
cs
aam
cmp
cs
lock
pop
or
lahf
aam
jbe
popa
shl
fcomps
xchg
into
pop
iret
cmpsb
xchg
dec
jne
xchg
cli
xchg
push
xchg
popf
jp
cmp
mov
lret
fucomp
imul
into
push
fisttpl
push
rcrl
pop
fnstsw
jl
icebp
add
xor
sub
mov
into
push
cmp
lret
inc
test
fimuls
arpl
out
out
mov
aam
xor
inc
jge
sub
xchg
cmc
mov
cmp
sub
outsl
inc
sub
fwait
es
or
sub
cmc
mov
bound
push
std
adc
mov
or
add
je
mov
out
pusha
push
fs
or
mov
fsubl
jae
cld
movsl
mov
stos
ja
inc
xor
cli
jmp
loope
dec
arpl
rorl
imul
pop
pop
js
mov
arpl
mov
lea
fisubl
mov
enter
out
cmp
sti
adc
in
das
cmpsl
ficompl
fdivs
aad
adc
or
mov
mov
lcall
imul
cmp
mov
add
outsl
inc
inc
daa
iret
popf
fwait
jb
xor
imul
fcmovu
push
sti
das
and
shrb
inc
fistpl
sub
jmp
lods
push
mov
mov
lock
mov
jbe
js
jns
enter
jo
ss
jnp
orb
sbb
loop
and
and
push
arpl
jmp
std
cmpsb
fstps
push
push
add
arpl
ficompl
pop
sub
es
aad
test
push
pop
push
ret
jl
mov
mov
push
pop
add
subl
data16
jno
pop
xchg
mov
lods
dec
pusha
fstps
add
push
xchg
inc
arpl
out
lods
xor
int
lahf
out
mov
incb
jno
pop
dec
insb
add
sbb
hlt
pop
aad
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
pusha
dec
xlat
insb
iret
js
fs
js
ljmp
jb
cmpsb
mov
ja
inc
out
aad
push
xor
rcrl
or
ror
and
jge
push
jecxz
jbe
adc
push
push
xchg
aam
cmpsb
push
inc
push
sub
daa
les
adc
jecxz
orl
out
ror
ffree
ljmp
imul
xor
rorb
out
ljmp
lea
repz
fmull
dec
push
push
sbb
out
std
mov
inc
adcb
xor
out
andl
jne
dec
jno
mov
stos
or
xchg
and
mov
cmp
jecxz
inc
mov
xchg
lcall
lret
shl
arpl
icebp
xlat
pop
pop
imul
push
xor
repnz
cmp
pushf
fistpl
addr16
or
sub
push
dec
lea
mov
leave
fcmovbe
pop
js
iret
fcomip
loopne
cmpsb
xor
mov
pop
fucomip
inc
jl
into
inc
cmc
mov
mov
mov
push
cwtl
inc
jmp
insb
inc
adc
out
push
or
movsb
jae
adc
adc
jle
pushf
pop
add
faddl
adc
fldt
pop
mov
cwtl
or
stos
jge
xor
sbb
mov
repz
mov
pushf
xchg
mulb
mov
cmp
dec
stc
imul
test
stos
or
lods
fstpl
pop
jns
adc
aad
push
arpl
mov
sbb
pop
shl
mov
lret
pop
arpl
inc
or
hlt
icebp
pop
mov
test
mov
pop
cmc
std
pop
lods
repz
in
pop
lahf
mov
sbbl
cmc
add
xchg
pusha
out
and
jmp
jge
xor
mov
sarb
repnz
or
aad
sbbl
pop
rorl
stc
faddl
rorb
rolb
push
popa
dec
mov
push
outsb
mov
into
lods
mov
and
adc
sub
shr
xchg
add
pop
loop
imul
icebp
rclb
jne
out
stos
xor
add
jae
fmuls
sarl
sub
mov
push
cmp
pop
or
lret
sub
std
push
movsl
test
ds
rcr
sbb
mov
inc
dec
jl
dec
ds
hlt
push
ljmp
test
les
xchg
jl
movsb
ljmp
fidivl
fadds
cld
vaddpd
scas
test
jle
fadd
iret
lods
xor
lea
data16
sahf
stos
into
popf
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
push
push
call
fs
js
clc
int3
jecxz
decb
mov
ficomps
daa
sub
or
rcrb
pushf
iret
cld
sti
std
cmp
clc
mov
bound
mov
jl
add
mov
mov
out
repnz
push
jge
aaa
cmc
mov
and
mov
jg
lock
lcall
iret
cmp
jo
ds
rorl
loopne
dec
mov
jg
cmpb
dec
rol
mov
xlat
jae
scas
addr16
bound
dec
adc
jmp
inc
adc
sub
sub
in
xor
lcall
stos
pop
sarb
push
cmp
pop
jle
sbb
pusha
movsb
movsb
pusha
rcll
xchg
rclb
in
test
outsl
inc
test
stos
pop
pop
scas
insl
enter
cltd
int3
lcall
lds
add
arpl
movb
inc
dec
adc
dec
push
dec
lock
adc
sub
or
addr16
leave
and
std
leave
sbb
sbbl
fsubp
inc
test
inc
into
add
cmp
sub
pop
mov
cli
icebp
pop
loop
aam
cmp
ret
xor
push
or
jno
cs
call
cld
pop
or
in
stos
sub
adc
lcall
xor
mov
sub
sti
sti
xorb
sub
add
cwtl
js
xlat
push
repz
jb
sbb
push
adc
imul
imul
lret
dec
add
cmpsb
imulb
cmp
sahf
ret
mov
pop
lcall
aad
mov
dec
fcmovnb
dec
and
xor
lods
lea
mov
ljmp
pushf
out
inc
sbb
pop
mull
pusha
aas
push
ds
or
cmp
call
es
sub
mov
push
xor
scas
mov
repnz
cmovs
ret
push
jg
dec
pusha
test
xor
jnp
out
dec
dec
loop
or
stc
out
movsl
mov
dec
push
mov
in
push
imulb
pusha
pop
sahf
pinsrw
jo
jb
lea
pop
cmp
jl
clc
fisttps
sbb
mov
xchg
push
cmpsb
fmuls
sbb
psllq
inc
cmp
lret
push
pop
sub
psrlw
xor
filds
fdivrs
adc
fwait
sub
mov
adc
or
and
jbe
icebp
movq
mov
jmp
mov
imul
dec
rcll
adc
lds
out
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
mov
imul
outsb
ret
cmpsl
or
roll
inc
data16
inc
or
pushf
fs
inc
in
mov
lea
test
adc
fsubr
ja
jb
mov
sub
sbb
int
dec
dec
pop
xor
lods
das
shrl
stos
inc
adc
in
cmp
sahf
add
ret
bound
jmp
inc
cwtl
scas
das
sbb
adc
inc
in
call
ret
ficoms
inc
stos
adc
fcoml
fisubrs
inc
sbb
test
sarb
pushf
mov
aad
push
push
dec
cmp
inc
xor
xor
add
call
inc
mov
mov
dec
fistpll
invd
add
or
int
les
lds
xor
lds
shlb
jae
loopne
inc
add
imulb
sbb
icebp
sub
cmp
mov
pop
xchg
cmp
call
cli
or
jo
ss
cmc
pop
popa
jnp
mov
ret
out
inc
xor
insb
mov
inc
popa
mov
sbb
jb
stc
loop
xor
icebp
rcrl
int
push
sbb
add
pushf
out
xchg
push
lcall
lods
push
add
cli
add
cwtl
xor
repnz
lret
out
test
pop
mov
xchg
sbbl
xlat
mov
enter
cmpsb
scas
sub
dec
fsubrs
scas
mov
notl
jg
std
ficoms
push
cmp
xor
fisubrs
sbbl
push
and
pop
stos
and
mulps
in
mov
bound
push
cmp
push
sbb
dec
xchg
jle
out
or
addr16
push
lret
jl
jb
fidivs
jp
arpl
mov
xor
add
xorb
fsin
pop
mov
mov
jae
inc
aaa
push
ds
divl
cs
jp
mov
scas
add
lea
movl
cwtl
loopne
mov
mov
mov
lret
jmp
mov
cli
pop
xlat
fbld
test
sbb
dec
out
std
pop
mov
xor
cli
sbb
mov
push
cmc
leave
pushw
and
xchg
push
ljmp
and
js
cltd
lock
ds
pusha
or
xchg
push
sahf
sahf
pop
les
cli
push
call
pop
test
imull
push
push
insl
pop
push
lds
pusha
or
xor
sbb
sbb
inc
mov
push
sub
adc
outsb
inc
clc
xlat
pop
cmc
jecxz
cmovno
and
push
sub
xlat
sahf
mov
mov
imul
and
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
ja
shlb
js
loop
shr
sbb
mov
add
outsb
scas
adc
cmp
fdivs
xchg
mov
fbstp
mov
cli
or
into
imul
cmp
push
or
mov
scas
sub
mov
ljmp
xchg
sub
jge
leave
mov
xchg
push
jl
mov
lea
xchg
pop
insb
fstl
stos
stos
out
mov
dec
fiadds
in
xlat
mov
lods
sbb
xchg
insl
fistpll
mov
lret
cs
cmc
outsb
add
mulb
pop
imul
fdivp
push
sbb
cmpsb
mov
enter
sub
addr16
jno
aas
cmp
loope
xchg
imul
hlt
addr16
fldenv
jg
dec
shlb
and
jecxz
jnp
pop
test
pusha
dec
data16
push
test
pop
fistpll
or
lahf
rcrb
mov
xor
inc
xchg
add
cwtl
cmp
fisttpl
cmp
ret
outsl
sub
gs
mov
dec
popa
in
sub
sti
adc
rolb
sub
cmp
mov
xor
mov
daa
insl
sbb
vpcomb
jo
ficoms
ds
lock
inc
jbe
outsl
imul
mov
cmp
setg
mov
push
lods
push
cli
jmp
fsubr
pmaxsw
mov
lods
jge
inc
aad
xchg
arpl
xchg
adc
testb
lock
movlps
dec
out
bound
add
xchg
js
inc
or
xchg
orb
inc
mov
loope
push
mov
and
sti
mov
clc
sub
mov
sub
je
xor
mov
into
push
sbb
sbb
jae
mov
mov
inc
repnz
jl
je
mov
loope
scas
dec
or
pop
les
cli
int3
lret
aaa
insl
mulps
xor
fdecstp
loope
out
fimull
repz
cli
fildl
dec
gs
mov
xchg
jns
testb
mov
daa
dec
xchg
pop
pop
ds
ljmp
movsl
xorb
out
imul
adc
pop
xor
iret
xchg
sti
aas
les
icebp
dec
mov
sub
or
data16
insb
or
fildl
mov
sub
mov
adc
xor
cld
loope
and
adc
scas
add
adc
push
mov
cmp
fwait
jmp
pop
cmpsl
dec
adc
mov
mov
push
mov
clc
mov
mov
mov
push
jmp
or
insb
outsb
shlb
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
xor
adc
js
jle
js
subb
out
adc
push
dec
push
pushf
add
test
outsl
bswap
xchg
imul
data16
pusha
adc
jge
mov
je
test
sub
outsb
mov
ljmp
add
loopne
insb
addr16
fadds
jne
movsl
push
repnz
shll
out
out
ljmp
imul
adc
and
mov
inc
test
or
pop
pop
pusha
repz
popl
xor
mov
rcr
dec
fs
ss
fsubrl
outsl
lcall
mov
lock
enter
xchg
mov
mov
sub
idivl
sti
push
in
and
test
jp
aam
sub
mov
xor
inc
jo
mov
sbb
test
and
push
xorb
movsb
dec
leave
ss
jbe
leave
call
adc
sbb
rcrl
sbb
inc
push
jbe
and
outsl
scas
and
sub
dec
imul
inc
shll
test
sbb
iret
out
cwtl
mov
adc
cmc
addr16
add
pushf
pop
push
das
pop
sub
rolb
repnz
movsl
push
cmp
push
imul
lods
fists
loopne
xor
cmpsb
push
in
insb
lcall
jae
enter
sbb
sub
cmpsl
sub
je
leave
lret
jb
xor
ljmp
fisubs
mov
out
in
push
adc
repnz
cwtl
rcr
mov
stos
scas
inc
fs
mov
pop
mov
in
out
xlat
lret
inc
and
or
loope
cmc
inc
fucom
push
das
daa
popa
dec
or
fdivs
inc
jo
outsl
and
xor
jbe
or
sub
in
cmp
incb
aam
dec
in
xchg
dec
das
out
repnz
cmp
mov
mov
andb
repz
lods
arpl
hlt
adc
lret
add
sub
scas
std
mov
and
jnp
aam
or
mov
or
push
mov
gs
lods
or
dec
iret
mov
sub
mov
cmp
dec
std
and
mov
shll
lcall
lock
and
xchg
loopne
les
imul
push
jmp
push
lcall
int
fldcw
das
jne
into
mov
dec
in
scas
stc
push
xchg
xor
stos
lods
nop
dec
push
dec
nop
add
aaa
xchg
dec
ret
shrl
mov
inc
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fdivrs
stos
push
and
fdivrs
fs
js
insl
mov
aaa
mov
cmp
aam
arpl
stos
ljmp
lea
sub
enter
es
int
xchg
shrb
add
cwtl
inc
test
je
jmp
jl
lcall
mov
out
push
test
or
cmp
std
fcoml
cmc
icebp
leave
rol
cwtl
mov
mov
add
push
jnp
pop
jge
inc
lods
pop
cmp
mov
mov
sub
fists
lods
cli
pop
inc
outsl
sub
cs
bound
add
movsl
pop
add
out
inc
mov
sub
fldcw
and
jo
insb
inc
dec
lds
add
jge
xchg
fldenv
popf
daa
movsb
out
pop
xchg
dec
push
fisttpl
jbe
scas
jbe
outsl
xor
stos
lods
je
loope
push
fcoml
test
cli
jge
mov
xor
enter
jl
hlt
lret
shll
enter
sarb
shrl
iret
push
lahf
pop
dec
dec
jmp
lahf
movsl
xor
cmp
xchg
push
push
imul
mov
sbb
adc
pushf
add
jl
je
dec
mov
xchg
and
push
in
lcall
xor
xchg
mov
mov
lods
mov
cmp
cmp
add
loop
scas
mov
mov
xchg
cmp
or
fadds
lods
xor
xchg
jbe
mov
test
data16
push
enter
jle
movsl
arpl
in
es
insl
add
sbb
idivl
lds
add
inc
out
repz
iret
movsl
sbb
mov
testb
into
in
in
ss
xor
inc
into
cmp
lods
jg
ret
fld
cld
and
dec
fadds
push
sub
and
fs
mov
mov
pop
xchg
daa
xor
push
lret
or
loope
out
call
lcall
jns
inc
sbb
mov
out
xchg
sbb
mov
jb
dec
iret
and
inc
push
outsb
mov
iret
mov
sti
cmovnp
dec
in
bound
iret
pop
xchg
out
int3
dec
in
icebp
jecxz
ja
mov
jo
or
mov
sub
shll
arpl
pop
mov
lods
sti
out
outsb
aad
mov
std
fdivs
stos
mov
jge
test
xchg
pop
and
xor
push
in
lret
nop
mov
push
rorl
fisubrs
sti
clc
mov
pop
lods
mov
aad
mov
xor
jle
imul
call
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
mov
fnstsw
fs
js
stos
jbe
loop
addr16
jb
mov
cmp
xchg
shl
mov
test
jbe
xchg
push
ret
cs
lock
cmpsl
push
pop
out
ja
mov
pop
mov
inc
jle
cmpl
lods
addb
inc
add
xchg
jg
xchg
lret
mov
arpl
int3
jg
pop
movsl
sbb
mov
dec
insb
mov
xchg
jne
and
rolb
mov
mov
jge
lahf
in
jnp
orl
icebp
push
into
aas
orb
dec
dec
scas
push
pop
mov
mov
dec
pop
sub
fdivs
inc
xor
das
imul
std
and
push
stos
int3
mov
and
jbe
lret
outsl
iret
push
stc
xchg
into
mov
xchg
sub
jl
cltd
imul
iret
daa
mov
into
data16
test
mov
imul
test
std
pop
bound
ror
mov
pop
jg,pt
dec
and
iret
dec
test
cmp
jmp
pop
cmc
insb
dec
push
xor
or
mov
cltd
xchg
insb
cs
xor
mov
sbb
adc
pop
out
pop
pop
shrb
shlb
xchg
lret
xlat
shlb
dec
frstor
lahf
test
fnstsw
fiadds
inc
testb
push
andl
mov
add
ja
xor
jmp
enter
sbb
push
stos
stos
sub
and
pushf
and
call
stos
jae
adc
xchg
adc
iret
arpl
ss
jmp
adc
jg
mov
adc
sbb
arpl
jns
cmp
int3
cmpsb
and
subb
mov
jnp
sbb
add
cmp
lds
fs
out
mov
insb
daa
sbb
mov
or
sbb
inc
push
in
xor
or
push
jecxz
xchg
cmp
aam
jo
sbbb
out
in
lret
les
les
mov
xor
sub
mov
push
jo
inc
dec
dec
sbb
pop
cmp
lret
push
stc
push
stos
add
popf
js
aad
inc
shr
push
insb
aam
int
jne
sbb
adc
mov
cli
cld
jne
mov
inc
cmp
sub
and
push
xchg
pop
outsl
xchg
inc
push
fldcw
cli
jge
xor
pop
out
mov
lea
popf
mulb
sub
cld
mov
sarb
inc
in
loopne
xchg
in
shll
jnp
ficompl
adc
jnp
sub
stc
je
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
in
sub
cmp
mov
push
adc
lret
adc
and
push
jno
gs
cwtl
add
pop
cmp
adc
xor
popa
xchg
mov
xlat
or
xorb
and
push
rorb
dec
mov
lea
or
pop
pushf
into
jle
fstpl
in
icebp
scas
pop
mov
jmp
loop
and
xor
enter
add
arpl
loop
in
mov
loop
popa
mov
or
jle
xchg
ss
cmp
test
out
movsb
sub
fsubl
xchg
or
pop
push
inc
loop
scas
dec
es
mov
cmpsb
and
cmpsl
cmp
dec
leave
xchg
push
xlat
cmp
sbb
sahf
outsb
pop
sbbb
fsubl
xor
push
vpmovmskb
inc
pop
cli
and
and
and
sub
mov
push
lods
inc
dec
mov
or
add
shll
pop
cmp
cmc
adc
xor
aam
pop
icebp
cmp
dec
adc
or
int
pop
xor
js,pt
bound
xchg
leave
repnz
test
dec
pop
mov
sub
xor
movb
inc
rcll
ljmp
dec
pop
or
fcomip
std
dec
pop
sbb
jge
test
leave
nop
mov
adc
stc
mov
aas
and
push
dec
lock
sub
or
inc
add
rcr
cmp
loop
pop
mov
jne
mov
ds
fldl
mov
cmp
and
iret
movsl
xchg
xchg
ja
in
pop
jns
add
insb
jmp
jg
jno
push
das
cs
das
into
std
mov
fxch
xchg
or
hlt
fdivs
out
cmpsb
push
mov
in
cmp
inc
jns
or
add
enter
sub
fst
ds
xor
lret
or
out
pop
or
int3
cmp
dec
je
fwait
stos
xlat
xlat
xlat
xchg
pop
idivb
jae
loopne
add
push
sub
mov
or
stos
push
jp
cltd
pop
push
fisubs
sbb
adc
sub
or
mov
les
and
pop
daa
lret
xchg
inc
mov
mov
insb
repnz
mov
mov
pop
xchg
pop
inc
mov
repnz
push
inc
jmp
add
and
clc
cli
iret
lds
call
insb
sbb
out
xchg
xchg
pop
xchg
es
lds
mov
inc
push
push
mov
jl
cltd
or
test
jmp
inc
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
test
sbb
out
js
jle
js
ficoml
jnp
jl
fistps
cmc
xlat
jno
dec
orb
push
mov
push
pop
inc
mov
lret
sub
fs
push
mov
test
add
cli
notb
adc
test
mov
push
add
iret
jecxz
fstps
cmpsl
and
std
xor
lds
fnstenv
fsub
mov
push
mov
ds
jl
jp
sbb
shll
sub
cmp
push
cmpsb
addl
xor
outsl
lret
divl
mov
pop
cmc
scas
push
cli
push
test
xor
pop
mov
fistps
or
adc
sub
jl
icebp
pop
push
fildl
lds
or
fs
scas
testb
pop
xchg
xor
fldl
hlt
fsubrp
or
sub
sub
jle
std
or
pop
scas
fucomi
movsb
xor
jge
or
pop
loop
stc
aas
or
das
sbb
mov
movsl
subl
mov
push
or
xchg
sbb
test
fisttpll
mov
insl
pusha
cmp
es
arpl
xchg
pop
scas
push
jmp
lods
mov
bnd
and
pop
mov
cmc
shl
sub
daa
out
push
repz
cltd
dec
ss
or
fyl2x
movsb
inc
out
lahf
mull
icebp
call
bound
loop
cmp
cs
ljmp
mov
push
inc
mov
cmpsb
lret
rorb
jmp
or
push
dec
into
mov
jg
xchg
dec
sbb
enter
push
enter
test
xchg
pop
shl
sub
and
lds
loopne
pop
inc
fisttpl
in
dec
shrb
incb
xchg
call
out
dec
outsl
je
push
nop
push
das
jge
mov
push
pop
push
loopne
and
jno
andl
lret
fnsave
in
jae
inc
mov
mov
cmp
ljmp
fcmovne
stos
dec
scas
arpl
call
adc
push
mov
enter
xor
jp
mov
jp
adc
mov
repz
sti
xchg
pop
and
out
test
mov
das
inc
add
sbb
in
fimuls
mov
jbe
add
cltd
iret
leave
add
paddsw
mov
insl
mov
in
pop
sub
je
mov
sbb
negb
test
dec
call
dec
inc
jl
push
cmpl
std
sbb
dec
mov
jo
sbb
repz
mov
in
pusha
aad
push
mov
movsl
sbb
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
fnstcw
js
jle
js
das
push
dec
cmp
mov
inc
lcall
in
cmpsl
xor
iret
popf
dec
sbb
popf
aam
fsubs
and
pop
fsubrs
jne
mov
or
lods
pop
xor
push
out
sarl
ljmp
sahf
add
hlt
stc
movd
mov
sbb
loopne
loop
pop
dec
xor
mov
pop
jns
mov
add
mov
xchg
out
push
inc
sbb
cmc
xor
dec
cmp
insb
movsb
shll
cld
mov
push
test
mov
cli
sub
in
sub
cli
or
test
inc
mov
icebp
xchg
sub
popa
divb
push
pop
sbb
jp
cmp
jg
xlat
test
xlat
push
push
imul
and
aad
inc
imull
out
mov
test
daa
arpl
int
andl
mov
sti
jl
gs
repz
test
sbb
cli
clc
pop
xchg
pop
mov
test
jae
push
cmp
inc
daa
mov
push
or
or
mov
inc
movsb
int3
sbb
aas
mov
cs
sti
int
jge
adc
jecxz
filds
xchg
inc
mov
xchg
inc
shl
pop
mul
out
lods
scas
cs
fdivl
popa
data16
test
jae
xor
mov
daa
xchg
pop
lds
ret
jecxz
sub
fst
sarl
fistps
push
ret
xchg
sbb
or
sub
dec
xor
push
xchg
cwtl
dec
mov
int3
add
mov
mov
fidivs
aaa
loope
bound
dec
push
adcl
push
xchg
inc
cmp
cmp
mov
push
clc
jo
aam
cmp
jmp
aam
xor
call
mov
enter
ja
sbb
cmp
shrl
pop
sub
push
jecxz
dec
mov
inc
lods
outsb
and
ljmp
mov
lds
dec
xor
loopne
fistpll
pop
jle
jo
mov
adc
adc
rcll
dec
sbb
popa
push
pop
das
mov
push
xor
clc
aam
inc
xchg
cwtl
cli
icebp
mov
sbb
mov
jle
lods
test
in
xchg
or
popf
lods
test
test
mov
push
adc
icebp
adc
insb
mov
ljmp
cmp
aas
cld
addr16
adc
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
popa
jno
addr16
aad
aas
inc
pusha
mov
ret
and
mov
jl
and
sbb
shll
xor
out
test
xor
gs
adc
fldenv
lea
mov
fcmovnb
jp
pop
push
mov
enter
andb
stos
fistl
ja
xor
fisttps
add
std
jne
mov
xor
cwtl
sbb
adc
sti
test
es
mov
les
sub
pop
pop
addb
cmp
movsb
je
jo
scas
fsts
lods
incl
enter
aad
jo
xchg
mov
loop
ds
fsubrs
ret
cmc
jge
pusha
iret
jecxz
xor
and
std
aas
pop
and
imul
scas
iret
inc
ds
mov
loop
push
mov
jp
shl
mov
jge
mov
dec
pop
xor
jle
sub
pusha
xor
dec
cli
mov
jmp
aaa
in
sub
jmp
outsl
sbb
add
rcrb
sbb
scas
jmp
mov
xchg
daa
shrb
mov
out
int3
xor
sbb
and
icebp
jp
das
xchg
pop
test
jbe
or
movsl
push
push
test
lods
leave
roll
dec
ja
xchg
addb
adc
ds
pop
xor
add
daa
inc
or
pushf
jne
pop
xor
add
icebp
out
fstps
movsl
adc
sbb
or
or
gs
jne
jp
ds
imul
aad
popa
aam
jnp
or
add
sti
lret
adcl
bound
sbb
mov
pinsrw
mov
js
aaa
call
push
test
aad
mov
fadds
out
and
push
push
mov
pop
shlb
cmpl
test
adc
pop
lret
std
mov
or
cmpsl
das
ret
cmp
xor
sub
jle
add
rorl
aam
cs
inc
imul
movd
icebp
cmp
adc
jo
dec
xor
sarb
sub
leave
stos
sbb
mov
pop
adc
inc
test
lea
insl
loop
mov
paddusb
lahf
out
add
sbb
mov
outsb
mov
mulb
lock
in
adc
push
mov
inc
cmp
addr16
movl
jne
jmp
lret
cmp
mov
ficompl
js
jle
js
cmc
mov
add
push
ret
lret
outsl
ja
inc
loopne
xor
sahf
jl
jno
lret
sub
fucomip
jae
repz
xor
push
loopne
daa
xchg
mov
push
fstpt
pop
push
adc
pushf
pop
sub
and
push
imul
fisubl
in
and
stc
inc
scas
push
or
fst
mov
dec
fs
cmp
ss
and
cmp
aad
xchg
aad
pop
push
mov
sbb
cmpsl
xchg
mov
inc
shrl
xchg
inc
adc
outsb
jge
fdivs
sbb
mov
fists
mov
ss
cmp
fwait
push
pop
aad
jns
xchg
aam
pop
mov
mov
jns
call
movsb
mov
sbb
cwtl
out
addb
or
shlb
sbb
mov
sbb
mov
int
lret
stos
and
sarl
vpaddw
dec
gs
jmp
leave
pop
cmpsb
outsl
add
sti
sbb
dec
mov
xor
aad
jecxz
mov
test
cwtl
jb
and
std
jmp
daa
mov
adc
nop
jne
cmp
bnd
mov
mov
xchg
push
push
mov
dec
outsb
push
push
xchg
adc
insb
cltd
and
xchg
jns
pop
call
mov
rcr
mov
push
xor
and
xchg
and
add
push
fs
xchg
sbb
lods
mov
push
add
lock
stos
cmp
and
pop
mov
mov
jl
cmpsl
and
sbb
mov
push
and
xchg
lods
cli
es
sub
cmp
js
mov
mov
jno
std
jle
xor
xchg
pop
arpl
cmp
jp
cmp
sub
outsl
enterw
std
sbb
and
movsb
sbb
mov
xchg
jecxz
ret
pop
pushf
push
fbld
inc
mov
and
jns
rcrl
jp
inc
sbb
pop
shll
aas
push
lods
leave
aaa
mov
xor
popf
lret
sbb
sub
std
imul
jp
adc
cs
imul
or
sub
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
pusha
lock
jle
js
jle
mov
cmp
adc
sbb
js
push
lds
rcrl
aam
inc
sub
das
andb
or
pusha
inc
lea
mov
ss
lahf
sti
pop
scas
aaa
push
pop
push
inc
push
stc
jb
xchg
orl
sbb
rorb
push
add
arpl
mov
int
js
dec
or
mov
sbb
popf
jne
cmpsl
dec
mov
mov
mov
jno
data16
xor
sub
stos
lret
or
jl
inc
sbb
pop
xor
jmp
sbb
jl
push
xchg
push
cmc
lods
ret
outsl
test
jae
mov
ds
std
push
sbb
xchg
mov
aad
pop
mov
imulb
mov
mov
sbb
cltd
and
xchg
jle
xchg
loope
jmp
mov
or
pop
mov
cmp
shrb
add
pushf
outsl
sub
pop
adc
addr16
arpl
cmp
fwait
add
pop
cmpsl
loop
and
push
lret
mov
fmuls
pop
jmp
xlat
test
jnp
sbb
leave
sub
lret
sub
test
push
test
sar
jbe
cmp
jne
mov
jbe
xor
mov
jmp
lahf
pop
daa
test
mov
lock
inc
lahf
push
push
daa
mov
in
or
or
cmp
stc
mov
sub
jge
in
imul
pop
incb
leave
pop
jnp
in
nop
pusha
push
enter
repnz
arpl
jmp
fprem1
popf
cmp
pop
int
ret
inc
dec
adc
pop
ror
fistpll
sbb
mov
lock
jae
mov
or
js
lcall
mov
leave
push
adc
or
arpl
pop
pop
push
xchg
loop
fisubs
jmp
xchg
xchg
dec
xchg
mov
cld
arpl
mov
test
and
loopne
pop
inc
xor
scas
fldcw
addb
mov
daa
popa
jle
iret
mov
adc
pop
cli
aam
inc
mov
mov
faddl
movsb
mov
shlb
ss
xchg
js
dec
jg
call
daa
stos
xor
out
leave
mov
mov
hlt
in
outsb
aad
adc
std
cmp
dec
stc
lods
idiv
jnp
jge
sbb
rorb
cld
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
nop
add
js
jle
js
inc
in
adc
mov
mov
and
lret
cmp
mov
sahf
mov
xchg
in
mov
mov
dec
push
adc
je
sbb
movsl
jbe
jle
inc
test
dec
pop
xchg
cmp
into
mov
test
scas
loop
dec
jle
es
icebp
dec
gs
sbb
in
sub
mov
imul
sub
mov
je
inc
sub
andl
and
pop
sbb
xlat
pop
fistpl
xor
das
jns
pop
and
out
inc
lahf
lcall
xchg
or
fstl
aas
pop
mov
out
adc
mov
cli
dec
mov
pop
or
push
stc
mov
mov
pop
cltd
sub
push
arpl
fsubl
sub
mov
movsb
dec
xchg
out
std
lods
or
orb
add
xchg
inc
ds
cltd
mul
pushf
jae
cmc
mov
fcomp
jae
pop
xchg
es
neg
arpl
ret
inc
fnstenv
dec
es
xor
cs
cld
xor
test
fxch
dec
adc
mov
adc
enter
pop
xchg
sbb
sub
inc
adc
and
sub
push
call
push
loope
cmpsb
insb
dec
fstpt
sub
popf
adc
in
jns
jns
mov
pushf
daa
or
aaa
jl
xlat
jbe
inc
jl
and
or
xchg
cmp
popa
lods
or
pop
test
mov
fwait
cmp
sub
ss
add
jae
push
cmp
cmp
aam
mov
push
jnp
les
push
test
pop
hlt
sub
add
mov
xor
cs
sbb
mov
and
lods
lock
xchg
or
push
shll
cmp
fisttps
mov
cmc
dec
in
scas
addr16
add
in
mov
jb
test
and
stos
loopne
jbe
mov
xor
mov
inc
and
or
pop
insl
mov
cwtl
inc
add
adc
pusha
xlat
mov
jp,pn
jle
ds
xchg
jp
sub
mov
jmp
sti
roll
mov
inc
push
ljmp
xchg
mov
pop
mov
mov
insl
and
stc
push
jno
lods
sbb
bound
and
jne
inc
add
lahf
cld
mov
test
add
dec
add
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
orb
push
jle
js
scas
clc
inc
dec
xor
add
insb
cmp
cwtl
fistpll
orl
cmpsb
stc
cltd
adcb
push
cld
pusha
sub
pop
dec
in
cmp
mov
mov
into
and
imul
pop
movsl
out
pop
jbe
mov
jne
cmp
xchg
sbb
fnstcw
sbb
dec
jecxz
sbb
add
js
push
movsl
xlat
mov
or
jp
mov
xlat
jo
xor
ljmp
loope
xor
xchg
sbb
dec
xlat
or
lret
ret
dec
xchg
fnstenv
nop
xchg
inc
pop
fs
dec
or
std
hlt
push
mov
adc
jmp
sbb
xchg
fcmovne
out
stos
jg
and
sbb
dec
push
rcr
or
jle
mov
pusha
cmp
sub
test
sbb
lret
shr
inc
icebp
pushf
mov
sbb
mov
ja
adc
insl
sbb
mov
dec
sarl
sbb
js
pop
scas
and
mov
fadds
fidivrl
sbbl
sbb
jnp
mov
repnz
imul
jp
push
les
popf
dec
aam
add
shlb
rorb
mov
movsb
lret
sbb
stos
cltd
push
jnp
cmp
push
sbb
lea
test
inc
orl
mov
dec
mov
pop
pushf
mov
ja
sub
fisubs
mov
dec
jge
dec
sahf
lret
pusha
roll
dec
pop
cmpsb
xchg
ja
lahf
or
aad
dec
jmp
inc
jnp
pop
or
rcrl
dec
jb
sbb
mov
lret
fldenv
cmc
push
insb
pop
dec
xchg
add
ret
sbb
and
outsl
stc
pop
cmc
sub
test
mov
hlt
pop
push
loope
adc
faddp
int
cmp
stos
inc
cmpb
jae
bound
pextrw
xchg
cwtl
jb
cs
push
sbb
jmp
dec
push
pop
frstor
mov
inc
sbb
out
sarl
lds
xchg
popf
sbb
lods
and
jg
mov
adc
in
and
cmpsl
lds
sub
outsl
dec
ror
andb
das
sti
mov
test
mov
and
xor
mov
das
or
push
lret
mov
cmc
out
stos
mov
mov
push
pushf
jae
cltd
out
icebp
inc
xchg
mov
push
or
outsl
insl
in
fdivrl
pop
vpsrldq
cwtl
adc
icebp
rolb
sbb
lret
rcll
push
subl
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
daa
lahf
out
mov
add
scas
arpl
mov
pop
mov
inc
lds
std
cwtl
lods
cmp
lods
adc
mov
dec
test
shl
mov
mov
inc
dec
rcll
cmp
out
mov
push
push
xor
jg
jecxz
jl
jecxz
push
push
mul
mov
je
jo
sub
aam
int3
adc
jne
mov
dec
aaa
pop
insb
or
mov
add
mov
imul
sub
loopne
mov
xor
icebp
fbld
or
pop
cmp
imull
lret
sub
sub
adc
stos
into
pusha
mov
orb
sub
pminub
imul
and
cmovo
sbb
xchg
shr
mov
cmc
cltd
fsubrs
dec
sbb
cwtl
pushf
les
shlb
jg
inc
lret
sbb
and
jne
or
mov
pop
bswap
mov
adc
adc
fs
xchg
mov
loope
xor
xor
jecxz
mov
pop
mov
gs
xorb
fwait
fs
pop
lods
pcmpeqd
daa
repnz
es
ficoml
jmp
aas
jae
push
sub
clc
fsubrs
mov
inc
cmp
sub
push
cmpsl
lods
lock
push
pushf
lods
in
cwtl
push
je
cmp
mov
inc
lcall
inc
and
sti
call
xchg
pop
cld
pushf
mov
mov
movsb
jns
and
add
es
popf
xchg
mov
push
fsub
cmc
add
mov
lret
mov
push
leave
cmp
jge
es
lods
out
les
add
fidivrl
lods
fucomi
in
xor
cwtl
loope
out
and
lret
nop
loope
fbstp
inc
pusha
je
into
rcrb
add
ds
clc
add
cmpsb
bound
test
dec
mov
movsb
jno
sbb
insb
pushf
xchg
gs
pop
inc
inc
cmpsb
mov
xor
movups
xchg
adc
rclb
popa
add
aam
sbb
ss
jle
rol
iret
or
jae
or
rcrl
mov
mulb
enter
mov
sub
adcl
sbb
into
fdivrs
mov
adc
adc
ret
cmpsl
sbb
adc
scas
push
inc
sub
and
mov
and
mov
call
push
int3
repz
arpl
dec
repz
jb
loope
mov
pop
out
aaa
pop
jnp
jbe
mov
or
add
pop
add
add
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
adc
loop
js
je
js
lcall
pop
les
clc
sub
xor
in
ljmp
sbb
pop
fdivp
aas
outsb
mov
sbb
ja
or
repz
stos
mov
adc
push
mov
push
fnstsw
add
fisttpl
mov
imul
psubw
repnz
jge
inc
or
push
push
xchg
cmp
jle
fcoml
into
movsl
dec
push
rolb
stc
int
inc
iret
inc
pop
inc
aaa
pop
jne
and
cmpb
adc
pop
add
xchg
cs
cmp
insb
sub
pushf
int
insb
das
adc
stc
stos
cmp
mov
add
ja
rcrl
mov
subb
xchg
sbb
add
arpl
bnd
shlb
stos
mov
push
cmp
inc
fs
push
cmp
add
or
es
pop
incl
xchg
lock
mov
push
xchg
adc
mov
std
or
test
out
pop
mov
cmc
popf
stc
mov
arpl
outsl
out
inc
imul
jbe
rclb
imul
jno
pushl
fisttpll
jmp
daa
fldt
popf
lds
repnz
xor
xlat
out
loop
cmp
outsb
sbb
in
cmp
cmpsb
insb
nop
jle
je
sub
shll
fs
test
sbb
push
xchg
aad
xchg
test
jnp
push
sbb
push
push
mov
icebp
out
ret
add
lods
fisttps
insb
xor
outsb
sub
jp
fdivl
cmp
or
stc
sub
push
nop
mov
or
loop
xlat
inc
mov
aam
cmpsl
xor
pushf
xchg
sbb
or
dec
cmpsb
test
pop
ja
insl
xor
mov
jecxz
leave
sub
xchg
rorb
insb
mov
cld
cs
mov
xorb
or
dec
ret
xchg
jl
xorl
ljmp
mov
dec
stos
insl
insb
in
jecxz
cmp
shlb
fnstcw
xlat
test
xor
ss
call
fiaddl
imul
dec
mov
mov
popf
xchg
mov
call
out
into
out
sbb
int3
cmp
insb
lods
inc
pushf
jecxz
loopne
stc
adc
add
inc
out
stc
cmp
xchg
jl
subb
xchg
pop
outsl
sbb
dec
cmp
lods
mov
test
lods
mov
pusha
adc
push
lret
cmp
sub
mov
aaa
mov
dec
xchg
sbb
jnp
sub
mov
stc
push
loop
cli
je
fiadds
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
das
mov
js
jle
js
pop
pop
lret
mov
cs
loopne
sahf
test
push
mov
adc
mov
mov
sub
or
fisubl
adc
insb
mov
cmpsl
arpl
fstl
int3
test
lods
stc
in
stos
mov
adc
add
aaa
fdivs
out
hlt
push
mov
cmpsl
inc
imul
movsb
loop
cmp
or
loop
cmp
loop
xor
dec
mov
ffreep
test
loope
adcb
push
mov
xchg
mov
or
outsl
mov
jnp
sarl
int3
jnp
push
data16
outsl
repnz
je
push
mov
xchg
movsl
and
mulb
repnz
fadds
mov
jns
cmp
icebp
cmc
sub
leave
fimuls
in
adc
std
mov
stos
lret
push
lcall
loopne
pop
iret
lock
ljmp
jne
movsb
pop
cmp
push
push
fidivs
mov
xor
mov
movsl
push
call
push
fistpll
out
add
add
ja
cld
add
inc
adc
rcrb
push
cltd
push
push
add
sbb
bound
inc
popa
subb
push
and
rorb
insb
xor
aaa
cs
into
imul
popf
or
out
jmp
jo
iret
mov
ss
xchg
dec
mov
popf
xchg
jl
mov
mov
addb
jl
dec
stos
in
addb
mov
ror
and
shrb
mull
pushf
fwait
or
push
and
fidivrl
sbb
cmp
subb
lahf
ja
inc
pop
cmp
push
and
mov
adc
loope
test
ljmp
enter
out
lock
push
xor
lcall
lret
or
xor
xlat
push
adc
mov
lods
mov
adc
push
pop
mov
dec
sbb
ret
inc
or
les
jno
jbe
pop
mov
cmp
imul
mov
push
jno
jbe
pop
out
jle
mov
fisubs
push
test
xorl
cld
or
push
idivl
aad
dec
mov
cmp
jge
insb
idiv
sub
sbb
iret
lds
xchg
fldl
shlb
sti
fdivp
add
fstpl
ss
push
out
and
int
jo
stc
arpl
out
iret
sbb
andb
repnz
mov
idivb
sbb
fwait
bound
or
fmuls
xchg
or
push
les
add
movsb
in
insl
cmp
cmp
clc
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
and
cmpl
jle
js
push
xchg
test
into
icebp
stc
mov
aam
push
sub
andl
decl
cmp
out
sub
push
neg
stos
jl
out
popa
cltd
jmp
ja
inc
push
or
ja
movsl
jp
jo
into
int3
push
mov
adc
sub
mov
or
shl
xchg
les
loope
push
in
loope
test
push
xchg
out
out
sbb
sti
xchg
push
fisttpll
and
scas
sbb
stos
mov
sub
pop
xlat
lock
xor
call
sub
cltd
imul
jge
jge
lock
iret
stos
fdivl
lcall
jecxz
shr
add
icebp
fisubl
leave
push
jecxz
clc
pop
xchg
call
xor
je
sahf
sbb
and
sbb
scas
mov
pop
xchg
cwtl
adc
sbb
cmp
cld
test
sub
adc
aas
into
xchg
dec
test
movsl
pop
xor
dec
insl
adc
fcomps
xor
xchg
cmp
inc
sub
scas
sar
icebp
test
fisubl
inc
pop
xchg
or
mov
scas
call
pop
mov
fisubrl
int
sub
addr16
pop
or
imul
pop
leave
lahf
dec
out
shll
xchg
movsb
push
lcall
sbb
xor
jp
jl
loopne
lds
mov
pop
pop
imul
subl
ficompl
pop
lods
pop
popf
test
nop
fcomp
mov
and
mov
inc
aaa
jae
or
dec
jg
js
and
aas
loope
int
jecxz
roll
xchg
add
cmpsb
pop
push
bound
int
shlb
xor
loopne
cld
aam
call
mov
jno
xchg
imul
pop
sub
adc
push
pop
push
inc
sub
mov
dec
mov
das
icebp
mov
jmp
int
and
inc
iret
testb
test
jb
mov
pop
dec
cs
lock
pop
mov
dec
lret
leave
mov
shll
lret
fisubl
xor
iret
add
mov
pop
jbe
sti
addr16
push
test
add
mov
xchg
mov
xor
and
shl
bound
aad
loope
xchg
imul
xchg
aaa
push
cmc
push
not
sar
loope
add
flds
sub
ret
jo
nop
out
mov
movsb
pop
in
mov
and
lret
add
mov
pop
and
xchg
loope
inc
mov
sarb
int
xchg
add
cmp
lret
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
getsec
add
js
je
js
enter
repnz
cli
cmp
cmp
and
pop
xchg
jns
push
lods
cld
pop
pop
neg
or
mov
lock
push
lret
imul
dec
inc
in
cmp
shr
mov
daa
mov
call
lds
pop
arpl
mov
mov
sti
insl
mov
jno
mov
icebp
or
mov
mov
ss
insb
mov
pop
adc
popf
xor
mov
jae
jbe
jo
test
cmpsl
xchg
stos
lock
into
test
repz
and
jno
das
testb
sub
xor
mov
cmp
lahf
inc
dec
sub
aaa
ror
inc
push
sub
fsubl
inc
stos
add
in
out
push
test
mov
ret
arpl
adc
add
std
in
sbb
test
divb
sub
pop
or
jns
out
xor
rol
pop
arpl
add
adc
mov
dec
sub
xchg
jnp
mov
xchg
movsb
adc
jp
cmc
es
cmp
xlat
pop
fidivrs
mov
inc
out
leave
push
mov
cmpsb
cmp
sbb
test
jge
fs
or
jb
test
cmp
pop
inc
jnp
mov
adc
into
fnstsw
aas
outsl
xchg
push
xchg
inc
ss
sub
subb
inc
xchg
jne
xchg
dec
sbb
insl
scas
xor
scas
jb
in
xor
imul
pop
bound
mov
cmp
popf
cld
lea
inc
ficoml
in
add
cmp
adc
lcall
sub
mov
push
inc
ds
inc
and
mov
mov
inc
int
pusha
push
popf
cmpsl
pusha
arpl
sbb
cs
pop
mov
adc
lcall
mov
cmp
cs
mov
mov
cs
inc
jne
std
xchg
add
scas
xchg
call
outsb
cwtl
pop
mov
xor
and
push
jne
cld
stos
fcmovnb
sub
pop
fnstsw
dec
fwait
mov
xor
fwait
pop
adc
inc
aaa
lret
push
xchg
mov
sbb
test
adc
or
popf
jmp
pop
mov
push
push
in
je
int3
adc
sbb
mov
std
inc
pusha
pop
push
stos
ss
out
pop
icebp
xchg
loope
int
sbbl
ss
in
mov
test
xchg
hlt
mov
jnp
cwtl
and
mov
repz
outsl
dec
sub
sub
test
aaa
mov
cld
xor
in
jne
bound
test
enter
pushf
mov
scas
cmp
push
or
push
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
push
pop
vpmacssww
jle
js
dec
aas
int
jnp
out
mov
push
mov
sahf
xor
movsb
jae
int
cmp
jno
xchg
lock
outsl
xchg
push
arpl
jl
inc
sub
push
insb
das
xorl
jmp
jb
xorl
sub
jae
push
cmp
jo
fcomps
shlb
cmpsl
jmp
mov
and
int3
jbe
adc
xor
int
mov
mov
xor
bound
stos
lds
push
shl
sti
les
icebp
stos
cwtl
sub
jg
jbe
pop
sbb
push
jne
addr16
bound
lahf
lea
cmp
inc
dec
lods
pop
push
in
jmp
xchg
push
pop
xchg
incl
lods
mov
shll
aaa
cmc
movsb
fildl
mov
xchg
fxch
jo
push
dec
pop
outsb
inc
repnz
pushl
mov
int3
dec
mov
jmp
cltd
jae
push
lds
imul
jno
cmpl
iret
mov
sbb
jb
and
pusha
insl
dec
or
subl
sbb
out
fwait
inc
sub
adc
dec
add
daa
cmpsl
das
mov
dec
sub
or
pop
jl
fcmovnu
add
int3
and
adc
mov
inc
pop
sub
in
pop
test
jg
call
xor
mov
loop
aas
push
daa
jbe
bound
pop
in
clc
imul
inc
loopne
dec
into
icebp
loop
pop
enter
clc
repnz
aad
jp
mov
push
test
add
cwtl
gs
lea
and
js
pop
pop
pop
in
std
inc
ret
push
fldenv
cmp
xchg
sti
inc
rclb
dec
test
les
rolb
out
or
test
mov
xchg
cmc
insl
mov
repz
js
dec
dec
push
mov
mov
loop
int
movl
loope
out
bound
cmc
adc
xchg
sub
mov
inc
mov
test
test
loopne
push
cmpsb
sti
adc
jne
pop
and
inc
dec
and
stos
inc
movsl
out
stos
mov
cmpsb
mov
dec
aam
pop
idivb
mov
pop
inc
or
aad
aas
dec
test
jbe
xchg
cmpsb
imul
lret
mov
sbb
dec
orl
fdivrs
jns
daa
mov
sbb
add
lods
jg
out
mov
adc
pop
and
mov
rclb
adc
mov
iret
or
scas
cmpsl
jo
xchg
pop
push
ljmp
xor
mov
leave
mov
dec
sub
rcrb
mov
xchg
push
inc
adc
cmp
jmp
rol
leave
fcmove
rcl
pop
mov
pop
in
mov
je
js
movsl
pop
out
dec
adc
lods
iret
gs
mov
incl
or
mov
push
cmp
and
repz
fwait
xchg
push
out
push
xchg
lods
jnp
pop
cmp
aas
leave
fdivl
mov
or
fcoms
or
xchg
aam
add
adc
movsl
mov
or
mov
rorl
movsl
leave
js
lea
adc
imul
shlb
cmp
enter
dec
adc
out
cmp
cmpsb
push
xor
andb
or
cmp
cmc
add
sub
scas
or
insl
shl
mov
ret
popa
pusha
leave
inc
inc
dec
cmp
aam
jecxz
repnz
out
leave
fwait
adc
fmulp
xchg
addr16
repnz
repnz
or
pusha
mov
repz
popa
xchg
std
and
jecxz
jge
icebp
jne
jo
xor
out
xchg
stos
lcall
jge
push
pop
lahf
cltd
xchg
xor
mov
int
rolb
test
fldenv
outsl
imul
cmp
pop
aad
insb
out
mov
jl
imul
mov
mov
mov
lods
and
ds
scas
or
loope
xchg
push
js
sub
enter
sub
ret
repnz
jle
inc
cmpsb
jge
pop
push
cld
sbb
mov
cmc
test
addr16
pop
call
in
adc
addb
cltd
add
ja
scas
imul
lock
loop
out
mov
enter
sub
dec
mov
dec
cltd
fildl
iret
rclb
push
sbbl
inc
lret
ss
and
cmp
movsl
test
ljmp
out
sub
dec
fldcw
or
mov
mov
cmp
repz
xor
inc
xor
aaa
add
lret
push
je
mov
xchg
add
adc
cmp
pop
fsubr
add
jge
mov
mov
rcrb
sbb
in
push
movsl
test
jo
nop
mov
jle
sub
into
cmp
testb
adc
xlat
and
jmp
pop
adc
ds
mov
adc
nop
sbb
andb
mov
cltd
test
inc
xchg
inc
cmc
pop
clc
adc
clc
dec
iret
cmp
mov
jmp
adc
add
sub
xchg
push
pushf
sub
aam
sbb
shrl
ja
xchg
int
xchg
push
push
xchg
or
imul
sbb
sahf
in
pop
fistpl
div
jl
movsb
test
or
push
sub
jae
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
loopne
js
je
js
ret
in
mov
mov
in
pop
jnp
dec
std
xchg
mov
and
pop
imul
mov
cmc
lods
out
ss
push
pop
cmp
arpl
sbb
loop
jge
pop
push
jle
jge
lea
pop
in
cmpb
gs
loope
jo
xchg
mov
mov
mov
pop
sbb
dec
testl
push
aam
adc
lds
repz
into
jge
out
gs
inc
xor
insl
xor
push
nop
sub
out
jne
jecxz
loope
mov
daa
insb
lds
jbe
nop
or
sub
lods
xor
sbb
push
js
fistpll
fmulp
sti
inc
push
mov
push
aaa
adc
sbb
fnstcw
sbb
sbb
je
sbb
bound
sbb
push
repz
cmp
dec
xor
push
addr16
cmp
pop
adc
cmp
test
outsl
gs
notb
inc
dec
push
inc
in
adc
mov
test
test
pop
mov
cld
fidivl
add
push
pop
cmp
sub
cmovo
imul
je
out
sbb
or
loop
sub
ja
cs
repz
shl
push
dec
enter
mov
test
mov
lods
cltd
cmp
leave
and
sub
repz
inc
ret
data16
sbb
mov
add
leave
push
ljmp
add
pop
inc
test
lock
or
push
inc
scas
test
cld
outsl
aam
xor
mov
not
loopne
pop
out
push
ret
mov
mov
sub
push
ja
cwtl
test
dec
cmpsl
or
out
testl
or
imul
add
dec
pushf
flds
andb
ret
xchg
push
jnp
mov
in
lods
loop
repz
cmpsb
movsl
in
mov
pop
jl
pop
push
add
sub
mov
adc
test
repnz
cwtl
pop
jb
cmp
adc
push
lock
jae
cmp
jg
ljmp
sbb
sub
xor
pop
movsl
std
cmp
pop
andb
mov
nop
ljmp
mov
xorb
dec
sbb
inc
ss
fidivl
outsb
mov
out
shrl
ss
das
mov
das
insl
or
mov
mov
inc
std
adc
jp
test
in
add
in
mov
fnstsw
ljmp
ficoms
pop
cmp
repz
cmp
sbb
rcrl
pop
cmc
aad
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
shll
pop
xchg
mov
je
js
jmp
idivb
pop
shlb
pop
aam
jl
popf
jne
jp
fsubrl
lahf
inc
or
inc
cmp
shrl
cmp
out
aad
addr16
add
in
std
insb
cld
mov
push
test
cwtl
je
fsts
mov
dec
inc
mov
aam
aam
jbe
push
inc
inc
xor
pop
aas
adcb
sub
mov
sbb
gs
shrl
jg
imul
cmp
pop
out
dec
aas
mov
clc
arpl
pop
push
pop
pop
push
cmpsl
dec
std
adc
aaa
orl
xchg
dec
pop
cmp
and
aas
mov
fwait
iret
cmpsb
mov
inc
mov
fs
or
mov
lcall
nop
ret
jb
push
adc
and
insl
inc
cli
sub
adc
jmp
push
fsub
xchg
mov
adc
rorl
negb
sbb
pushf
inc
icebp
adc
in
dec
loop
xchg
dec
sbb
xchg
popa
fidivrl
mov
mov
aam
push
leave
repnz
stc
ret
imull
add
inc
sbb
negl
adc
out
sbb
cltd
test
xchg
and
adc
sbb
movsl
repz
pop
jmp
sub
add
incb
cmc
enter
pop
cli
xchg
adc
pop
pop
adc
stc
pop
and
ds
pop
dec
lret
push
stc
xor
lock
out
sbb
cmp
push
test
mov
and
incb
inc
mov
add
repz
mov
sbb
call
jmp
adc
ljmp
loope
xor
cmp
sub
rcll
mov
pop
mov
and
inc
test
lea
mov
mov
mov
cmpsb
sub
pop
sti
inc
xchg
imul
ds
xorl
add
mov
pop
dec
jge
pop
adcl
inc
data16
ret
mov
ss
jbe
out
sahf
lods
repz
js
mov
mov
fwait
scas
add
addl
dec
cmp
lcall
bound
push
andb
pop
stc
inc
test
jno
jle
add
mov
or
adc
inc
out
xchg
xchg
bound
and
dec
and
inc
and
sbb
pop
push
add
insl
pusha
jo
inc
xor
jbe
dec
jae
xchg
mov
pop
sub
ret
push
jb
sub
mov
aad
aad
push
add
inc
and
out
imul
mov
and
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
and
ret
js
jle
js
mov
stos
sahf
lock
inc
mov
imul
sbb
mov
or
mov
adc
push
add
jo
xchg
jp
xor
jl
pop
dec
nop
xchg
sti
aaa
leave
and
inc
xor
into
leave
inc
pop
clc
or
in
inc
dec
lss
xchg
js
clc
jb
cld
aam
xor
jl
xchg
nop
mov
lret
insl
stos
lret
push
in
pop
jg
std
data16
ss
loope
and
mov
inc
xor
je
lea
lods
out
pop
jecxz
les
ljmp
sub
shl
enter
add
test
xor
fmuls
inc
in
mov
into
pop
sub
pop
in
cmpsl
ret
and
jae
testl
sub
or
or
arpl
push
push
stc
and
sbb
pop
mov
out
ss
xchg
push
jnp
pop
sarb
pop
sbb
xor
int3
cmp
jl
mov
int
xor
pop
pop
pop
lret
add
push
cwtl
or
in
cmp
push
sub
testl
cmc
hlt
lahf
gs
xchg
xchg
loope
outsb
pop
loope
repz
inc
xchg
xchg
push
out
imul
ret
push
mov
jne
and
sub
sub
scas
out
sbbl
jnp
fisubrs
xor
les
repnz
sti
in
fwait
stos
arpl
lods
shlb
fdivrl
sbb
mov
scas
cmpsb
xchg
pop
mov
cmp
fxch
clc
in
testl
jae
xchg
cmc
jns
imul
mov
fidivl
imul
xor
jecxz
mov
and
inc
bswap
outsl
add
cltd
pop
mov
lock
dec
xchg
xchg
imull
shrb
push
push
cld
fidivs
push
or
jge
push
push
or
lret
rorb
pushf
adc
push
pop
xor
push
lret
jp
xchg
jo
adc
aam
pop
sub
push
push
mov
icebp
repnz
xor
addr16
addr16
int3
call
mov
add
xlat
insl
or
inc
addr16
test
and
aaa
loop
sub
clc
clc
cmp
call
xor
jg
xor
mov
scas
sbb
cmpsl
test
stos
shlb
je
add
lds
push
pop
xchg
dec
and
pop
out
hlt
mov
mov
xchg
xchg
xor
mov
inc
inc
int3
inc
sbb
loope
icebp
xchg
lds
xchg
inc
mov
jge
xchg
and
pop
dec
mov
push
lahf
lock
bound
test
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
cmp
js
je
js
and
addl
ljmp
adc
push
shll
jle
jmp
mov
dec
dec
sbb
cmp
sbb
mov
int3
in
add
add
push
ficoml
xlat
push
add
and
jge
xchg
popf
sub
out
dec
syscall
pop
jns
repz
sbb
push
sbb
icebp
mov
cltd
mov
inc
mov
in
call
mov
cltd
and
mov
decb
xor
lds
and
js
add
imulb
je
divl
pop
and
and
or
jmp
sbb
sub
lret
sub
je
test
lea
mov
and
push
sbb
inc
call
pop
ss
push
inc
insl
inc
and
rcl
cli
push
inc
push
add
aam
out
std
jge
jmp
lahf
lret
xor
lea
in
test
dec
into
loope
pop
adc
pop
stos
out
mov
das
xor
ss
xchg
mov
ret
les
jmp
popa
scas
fcomps
jo
jp
mov
mov
in
icebp
mov
mov
out
xor
sub
xor
inc
push
cmp
daa
and
subb
ds
mov
or
jae
push
sbb
fmuls
add
pop
inc
mov
imul
mov
rorb
jmp
mov
mov
sub
or
cmp
mov
test
dec
mov
pushf
ljmp
das
ret
adc
mov
push
jecxz
fdivl
cmpsb
and
nopl
fnsave
jb
nop
cmp
adc
rcll
cmp
rcl
mov
call
enter
insl
inc
sub
mov
add
sbb
into
andb
pusha
cmp
xor
arpl
repnz
dec
mov
pushf
icebp
cmp
push
xor
les
xchg
in
jno
out
inc
mulb
xor
mov
cmp
jl
xchg
mov
adc
imul
imul
sahf
mov
or
pushf
arpl
les
fcmove
rcl
outsl
xchg
sub
xor
xorb
lods
fnstenv
inc
sbb
lahf
icebp
shll
in
and
inc
aas
shl
add
jbe
fistpll
lret
sbb
fidivrs
movsl
nop
bound
mov
lcall
dec
imulb
push
xchg
test
cmp
andb
clts
jbe
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
or
pop
cmp
js
das
xor
sub
jmp
mov
mov
jle
jne
insl
jns
ficomps
sub
ret
mov
xchg
push
mov
mov
cwtl
inc
adc
arpl
push
lcall
fnstcw
dec
lret
ficoms
les
roll
pop
pop
clc
bound
minps
mov
scas
jp
inc
dec
jbe
sub
sbb
lahf
pop
add
test
pop
icebp
mov
cmpsl
xchg
cmc
mov
or
adc
dec
lcall
or
ficoms
insl
test
adc
lods
push
adc
sbb
mov
and
fistl
and
stos
shl
aad
mov
scas
lret
aad
out
xor
sub
mov
sbb
adc
dec
loop
mov
add
adc
aaa
movsb
cli
repnz
pop
add
and
and
movl
sahf
sbb
mov
dec
pop
mov
mov
mov
dec
rcrb
cmp
and
xor
cmpsb
je
pushf
push
lcall
inc
icebp
pop
ja
and
in
out
mov
out
ljmp
in
fimull
outsl
leave
or
pop
mov
imul
push
shr
test
fidivs
ficoms
sbb
movsb
out
inc
mov
mov
movl
cltd
dec
sub
cld
sbb
push
sbb
bound
sub
in
into
add
rclb
mov
mov
fimull
sub
push
pop
jg
lods
test
jge
jg
lret
jecxz
and
lcall
imul
xchg
mov
inc
stos
add
enter
mov
shll
and
push
push
xor
cmc
push
mov
clc
sti
in
dec
imul
in
mov
add
pop
int
imul
sar
decl
and
movsb
xor
push
je
data16
gs
mov
outsb
sbb
ret
test
cmp
dec
ficomps
xchg
and
inc
in
mov
sub
jne
orl
or
lcall
je
mov
cli
subl
jl
mov
sbb
fwait
lods
lods
nop
adc
xchg
mov
mov
das
ret
xor
mov
push
xor
fnstsw
cmpsl
hlt
arpl
scas
repnz
mov
xchg
adc
push
mov
rorl
imul
push
mov
cld
pop
inc
jae
push
mov
sub
rcr
out
enter
loope
jecxz
and
fs
push
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
push
xchg
cwtl
js
je
js
in
mov
mov
pop
in
push
or
push
jae,pn
sub
mov
mov
sahf
xor
mov
push
movsb
test
cmc
lahf
dec
sbb
mov
jno
cld
mov
dec
cmp
xor
mov
dec
mov
mov
int3
adc
and
adc
push
bound
fildll
add
dec
push
inc
lods
fnsave
jle
mov
cmc
inc
dec
jg
mulb
sbb
push
xor
pop
xor
rclb
je
ds
jo
push
loopne
je
jmp
clc
gs
outsb
shlb
loope
lcall
cwtl
sbb
add
push
iret
clc
inc
jecxz
dec
loopne
add
mov
ss
inc
mov
sbb
sub
lock
jbe
cs
movsl
push
or
dec
mov
adc
sub
mov
pop
mov
test
xchg
cli
pusha
push
adc
jmp
fildl
pushf
out
xchg
inc
in
mov
xor
daa
fs
mov
scas
sbb
and
jecxz
sub
pop
insb
cmp
jle
lods
cmpsb
sbb
cmpsl
cmp
out
pop
pop
dec
enter
jae
cli
sahf
fimuls
das
es
dec
xchg
lret
cmpsl
test
repz
adc
in
scas
decb
add
bndldx
mov
mov
or
scas
mov
cmpsl
mov
adc
xorb
fdivrl
inc
mov
das
sar
addr16
pop
icebp
xchg
push
mov
scas
adc
ljmp
fistpll
arpl
sti
clc
mov
jmp
outsb
mull
mov
add
mov
mov
loope
into
mov
xchg
insl
cmp
outsb
cmc
inc
cmp
lret
jbe
push
jp
fstl
xor
aaa
push
je
pusha
mov
fdivl
sbb
mov
out
push
ret
iret
push
aam
mov
mov
adc
inc
pop
fildl
sbb
test
repz
sub
and
pusha
xchg
lahf
je
mov
call
bound
std
mov
mov
mov
fsts
pop
push
cld
nop
mov
dec
mov
iret
sti
stos
mov
dec
push
dec
jle
adc
jecxz
lret
sub
dec
adc
mov
sub
mov
icebp
push
cld
xchg
sub
push
sub
lods
mov
xor
fdecstp
popf
sub
pop
int3
inc
mov
pop
sbb
xchg
sbb
call
cs
lret
push
xchg
imul
aam
cmp
cwtl
or
imul
lock
int3
mov
test
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
sbb
js
je
js
push
push
jno
mov
or
adc
pop
hlt
mov
sub
iret
mov
cmpsb
xor
cmpsb
push
pop
out
mov
gs
fistpll
test
lea
call
arpl
xor
clc
ret
imul
insb
push
adc
and
movsl
insb
lds
adc
stos
mov
scas
int3
mov
subb
sbb
jne
xchg
mov
inc
std
in
xchg
in
dec
dec
leave
mov
xchg
jmp
hlt
aad
cmp
out
dec
mov
mov
xor
pushf
data16
mov
mov
subb
jp
insl
call
adc
aam
mov
test
ret
sub
into
lods
std
popa
out
std
ret
push
mov
imul
inc
popa
cmp
repnz
inc
mov
call
test
lods
js
sti
mov
sub
js
dec
add
clc
mov
loope
adc
lret
ja
sub
xchg
mov
lret
xlat
xchg
loopne
test
int3
pusha
repz
fimull
and
testl
loope
mov
push
js
cmp
aaa
test
shll
or
sarb
inc
insl
fwait
cmpsl
dec
push
adc
fs
inc
pop
hlt
loopne
mov
adc
movsl
fcoml
scas
push
push
xor
mov
popf
out
subb
jno
in
mov
dec
bound
mov
movsb
int3
xchg
in
mov
mov
or
add
fs
jmp
test
ds
fs
vmovntps
les
xchg
adc
mov
aaa
lret
xchg
out
mov
dec
js
cltd
mov
dec
mov
cld
xor
insb
mov
sbb
sbb
or
lock
cmp
idivl
xchg
pushf
xor
mov
stos
repnz
jnp
cltd
fcom
arpl
jno
jle
in
xor
add
adcb
jmp
cmpsb
adc
das
mov
mov
xchg
cs
lods
and
pushf
lods
jg
push
test
xchg
sbb
adc
out
or
mov
adc
enter
repz
adc
sub
cmp
sbb
jnp
cwtl
and
enter
in
repnz
jmp
and
or
daa
ret
das
xchg
ljmp
push
pop
enter
in
inc
dec
xor
rclb
loop
push
push
push
xlat
in
hlt
mov
pop
mov
lea
loopne
std
iret
leave
and
lock
add
movd
dec
jecxz
push
dec
lods
push
or
ret
cld
adc
add
add
rol
ror
aad
xchg
mov
aad
jg
mov
mov
js
js
and
lcall
push
and
adc
ret
popa
mov
cmp
mov
inc
jae
sub
add
and
aad
sahf
adc
inc
js
jns
neg
cmc
aad
dec
mov
dec
sarb
mov
repz
in
in
push
dec
add
xchg
sbb
insl
pusha
and
mov
adc
pop
int
iret
sub
sbb
loopne
sub
xchg
mov
dec
roll
std
or
and
jb
sarb
nop
mov
push
mov
iret
subl
inc
and
xchg
stos
pop
je
nop
xor
imulb
sub
rorb
loopne
ficompl
push
int3
lock
dec
adc
or
xor
or
sub
mov
or
sbb
cmp
mov
pop
ja
das
push
mov
fildl
add
push
sarl
scas
add
imul
mov
mov
daa
or
les
outsl
mov
jae
aaa
sub
sbb
dec
test
out
iret
xorb
adc
sbb
fucom
cmp
add
scas
cltd
and
in
into
aas
mov
ror
sub
insb
dec
sbb
pop
stos
xor
je
or
mov
jmp
ret
pop
nop
mov
negl
aaa
fs
leave
push
dec
shll
leave
mov
jmp
out
sahf
inc
cld
adc
and
xchg
mov
test
stos
mov
cmpsl
adc
sub
and
fdivrs
imul
and
js
stc
test
pop
push
push
imul
lcall
neg
mov
mov
test
xchg
cmp
mov
jbe
pop
add
cmpsl
jg
adc
test
repnz
mov
xlat
sbb
sub
popf
adc
mov
rorl
jp
cwtl
call
adc
or
sub
sbb
stc
add
jp
out
pop
cmpb
inc
cltd
hlt
sbb
pop
jp
jbe
pop
nop
cmp
cmp
sub
mov
inc
int3
xchg
jle
lret
fs
enter
dec
cmp
sahf
jns
int
rcrb
cmc
xchg
shlb
cmpsb
fdiv
pop
sbb
mov
mov
stc
cmp
es
out
sbb
imul
dec
sahf
filds
inc
lods
push
out
stc
add
stos
xor
subl
test
adc
mov
mov
insl
roll
or
sub
pushf
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
mov
mov
js
jle
js
roll
inc
fs
iret
cltd
or
movsb
stc
imul
cltd
sub
lods
mov
enter
xor
das
add
cmp
fisubl
inc
xlat
push
push
push
jns
ds
jne
dec
and
jl
imul
rorb
xchg
mov
or
cmp
dec
test
loope
pop
jae
mov
sub
jl
push
mov
lock
js
mov
fimull
movsl
loopne
and
sbb
std
add
bsf
sarl
jne
sub
pop
dec
hlt
decl
movsl
fmull
in
std
adc
xor
ret
int3
or
and
faddp
xchg
out
pop
icebp
testl
sbb
fsubl
pop
ret
lret
iret
xor
jb
dec
fmull
ret
out
inc
mov
fbld
aaa
aad
and
adc
mov
mov
ja
and
imulb
cli
mov
mov
cli
or
mov
add
js
lods
lcall
cmp
repnz
sbb
and
out
sub
movsl
aam
leave
ljmp
aas
cmp
pop
into
cmc
adc
add
pop
cmc
sub
cmp
cmc
pop
push
jecxz
inc
out
fs
in
or
add
cmp
negl
ds
cmpsb
mov
mov
adc
jo
inc
adc
sbb
pop
movsl
sbb
leave
lods
push
push
xchg
mov
iret
outsl
add
stos
inc
jecxz
nop
jo
lret
clc
mov
arpl
push
lods
mov
xor
and
js
addb
inc
js
ljmp
sbb
vcvtss2si
jecxz
adc
push
cmpsl
pop
data16
xor
in
add
mov
repnz
loope
loopne
sub
sbb
in
and
les
lcall
or
aad
and
xchg
cmp
jge
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
and
fwait
out
js
xor
cmp
shrl
std
and
popa
scas
pushf
pop
xor
xchg
out
lods
cmp
adc
int
sub
cld
xorb
inc
test
add
sti
jg
lds
stos
icebp
fidivs
adc
dec
mov
xchg
mov
dec
loop
pop
jns
fsubp
daa
adc
sbb
xor
or
cmc
out
jge
cli
mov
sub
mov
sub
bound
icebp
shlb
jo
mov
sbb
popa
lret
js
inc
inc
orb
clc
xor
pop
or
jbe
cmp
ret
notb
ljmp
mov
mov
push
sbb
xor
inc
push
mov
insl
sbb
xor
jbe
aam
dec
daa
mov
inc
mov
add
jnp
mov
rcl
cmc
sub
mov
js
bound
loopne
test
outsb
inc
cmp
es
sbb
push
xchg
push
jno
out
and
scas
mov
scas
xchg
adc
aam
mov
in
mov
icebp
insb
xor
sbb
xor
jae
scas
test
loop
rclb
sbb
cmp
insb
sbb
xchg
sti
imul
movsb
mov
sbb
adc
popf
mov
mov
daa
jg
aas
xor
dec
adc
cmp
mov
jbe
sbb
pushf
out
in
jbe
push
lock
clc
and
iret
xchg
and
das
das
mov
in
mov
aas
int3
stos
fildl
sbb
in
outsl
lahf
and
inc
clc
pop
out
scas
mov
sub
xor
movb
scas
pushf
ja
xchg
lret
leave
pop
sub
add
dec
sub
outsb
xorb
rorb
jg
and
cltd
xchg
sub
rolb
popf
mov
cmpsb
mov
fidivl
jnp
xchg
mov
and
repz
sub
in
jo
repz
jne
mov
nop
sub
push
gs
rol
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
sub
pushf
add
xor
adc
and
mov
xor
js
out
xchg
xchg
or
repnz
lods
and
pop
arpl
loope
icebp
cs
add
jp
into
cmpsb
xor
rcr
mov
mov
and
pop
dec
pop
and
adc
nopl
cmp
int3
ja
xor
and
push
xor
movsb
jbe
and
dec
pop
xor
sub
loop
pop
int3
jae
mov
pop
adc
call
sub
pusha
or
push
jg
push
mov
insl
ss
fcompl
loop
inc
inc
je
jbe
outsl
test
push
mov
cmp
mov
push
sbb
jg
sub
in
icebp
xor
enter
xchg
cmpsl
mov
stos
push
out
rcr
cmp
out
daa
inc
movsl
clc
push
jmp
bnd
and
in
or
test
pop
out
sbb
loop
sub
sub
pusha
jne
shlb
das
mov
rolb
adc
imul
rcl
bound
lods
jmp
mov
das
mov
stc
ret
mov
cmpsl
fwait
inc
jno
shl
jb
repnz
lea
xor
or
mov
pop
daa
outsb
push
imul
mov
lret
jp
fidivrl
cmp
sbb
jb
sub
lret
xlat
cwtl
sub
push
and
sar
icebp
shll
push
cmp
ret
shrb
add
or
or
out
xor
add
call
sbb
int3
scas
outsl
xchg
in
ret
stos
enter
lods
mov
mov
out
sub
push
decb
xor
testb
lret
loop
add
adc
sbb
jecxz
cmp
data16
sahf
ficoml
and
cwtl
adc
mov
adc
ljmp
lds
lods
shll
ret
jg
fs
mov
js
cmp
movl
jne
and
jmp
int
into
aad
lea
xor
test
js
cbtw
inc
pop
add
push
lods
jne
fisttpll
adc
add
sahf
push
xor
push
inc
test
ja
leave
xchg
pusha
outsb
cmp
inc
mov
rcl
pop
stc
das
sub
adc
mov
divb
hlt
sar
xchg
pop
cmp
inc
loopne
lcall
pop
leave
mov
add
sahf
xchg
ficomps
in
xor
mov
cmp
jns
jecxz
movsb
mov
and
xchg
cmp
loop
jae
mov
xchg
mov
cmpsl
into
shll
push
xor
mov
xchg
add
aad
lret
adc
mov
cli
dec
xchg
mov
idivl
push
pop
sub
mov
in
jg
lock
iret
es
lods
or
xor
add
and
rorl
call
insb
sarb
cmpsb
iret
push
ret
mov
push
adc
popf
fnsave
and
gs
stos
fdivrs
mov
push
or
cmpl
movsb
and
cmpl
jge
dec
ret
sbb
xchg
xchg
fbld
jl
and
xchg
inc
lret
sbb
fwait
aas
in
in
mov
sarb
add
xchg
add
or
pop
adc
cmp
aas
andl
ror
rorb
aas
sbb
stos
insl
pop
xor
test
leave
test
mov
jnp
jl
xor
adc
lds
or
imul
aad
cwtl
inc
jl
mov
rcl
lock
fs
iret
xor
fwait
jle
and
jmp
lahf
inc
pop
rcrl
mov
mov
movsl
aad
repz
and
push
add
inc
pusha
lods
xor
cmpsl
mov
mov
jae
scas
cmc
cmovb
leave
dec
sarl
pop
out
mov
mov
or
fsubl
ret
popa
mov
sbb
xlat
jl
aas
sbb
sbb
paddusb
out
mov
xor
cmp
test
cltd
pop
pop
cmp
andl
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
xchg
sbb
scas
js
xor
adc
loopne
jg
outsb
cwtl
cmpsl
cs
xchg
std
cltd
jle
pop
or
dec
push
or
lret
pop
iret
adc
pop
mov
push
xchg
xchg
shll
inc
dec
inc
arpl
mov
jl
test
lods
ror
pusha
shll
pop
fmul
outsl
jo
dec
mov
cmc
lea
cmp
mov
and
shll
mov
adc
jnp
sti
inc
jbe
or
xchg
lea
pop
jns
xor
mov
and
mov
movsb
aam
xor
or
in
stos
negl
xchg
mov
sahf
scas
fisubrl
daa
pop
lcall
or
ficoms
cmpsl
fwait
cli
daa
jge
pop
jp
adc
push
subl
inc
pop
push
cmc
cmp
pop
rorb
lcall
cli
enter
push
andb
jmp
into
scas
lods
jge
into
dec
outsb
inc
gs
or
xchg
push
sbb
pop
or
iret
fwait
orb
loopne
lock
rol
mov
shr
ljmp
cmovge
inc
hlt
cmp
mov
imul
in
outsl
dec
push
cmp
lret
adc
adc
dec
lods
jns
pop
in
flds
fsubrp
jb
cmp
lods
fcomp
into
lods
mov
ds
add
ljmp
movsl
rorb
cmpsl
adc
mov
lods
aaa
xlat
push
pop
in
push
rorb
ret
jmp
cmc
iret
inc
movsl
dec
dec
cltd
fimull
insl
adc
add
cmp
and
movsl
ljmp
shr
inc
mov
push
cmp
cld
mov
and
and
mov
or
bound
mov
or
mov
outsb
dec
push
inc
dec
mov
mov
xor
and
mov
frstor
repnz
cmp
in
mov
jecxz
jl
insb
mov
stc
repz
cmp
xchg
pause
push
push
sbb
loop
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
lret
daa
add
shrl
js
mov
adc
cmp
pushf
sub
std
sub
cmp
outsl
jg
scas
dec
cwtl
int3
fcomi
sub
cs
fiadds
js
push
push
dec
xlat
cmp
lock
mov
and
notl
and
addr16
add
loop
sbb
aad
aas
out
ds
pop
add
sbb
subb
xchg
aad
leave
cmpsl
cld
xchg
dec
jo
rcrl
bound
xchg
jl
mov
mov
jecxz
scas
testl
jae
stc
xchg
icebp
daa
jo
aaa
in
dec
xchg
cmc
sarb
dec
mov
jbe
imul
inc
mov
in
cmp
cmp
les
push
or
push
jl
pop
aad
jle
insb
mov
leave
nop
sbb
dec
sub
std
pop
aas
xchg
in
scas
outsb
xchg
pop
xchg
cmpsl
and
notb
cld
or
mov
pop
jl
adc
mov
lmsw
sub
push
rol
shl
scas
jo
and
outsl
and
xor
push
outsl
inc
dec
popf
push
fsubs
jg
out
test
add
movq
jns
jmp
mov
repnz
push
mov
mov
xor
cmp
sahf
xchg
inc
lods
mov
mov
call
nop
push
and
mov
sub
lret
jne
pop
jbe
or
and
cmpsb
pop
mov
jnp
pop
lods
pop
or
xchg
scas
jae
mov
aaa
sbbb
cmp
adc
cwtl
cmpb
inc
inc
clc
mov
sbbb
out
mov
negl
stc
push
cli
cli
push
mov
mov
imul
push
je
scas
fcmovnbe
rcl
je
loope
sub
mov
sbb
ret
xchg
dec
cs
sub
inc
jae
ret
je
push
repnz
out
pop
iret
sub
rcr
adc
fstp
jp
mov
gs
xor
enter
and
outsb
mov
mov
lods
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
cmp
fisttps
jle
js
sbb
cmp
rcr
push
push
mov
lea
pop
adc
loopne
daa
lds
dec
in
jle
and
inc
jp
xor
inc
jmp
inc
fdivr
fnstcw
push
or
inc
leave
fs
in
xchg
mov
sub
fadd
pusha
push
push
jge
ss
cmp
addr16
jl
mov
les
imul
and
cmp
movsl
fbld
xchg
cmp
jb
add
jmp
imul
mov
mov
mov
pop
add
inc
roll
popf
pushf
xlat
mov
mov
mov
popa
mov
add
aam
xor
push
pushf
xchg
std
dec
pop
sahf
fsubr
sbbl
lret
inc
setae
push
sub
pop
jae
push
pop
sbb
xor
push
incl
scas
shrl
push
pop
or
clc
add
cmc
out
cwtl
cs
or
mov
std
faddl
and
int
pop
mov
bound
mov
pop
or
nop
shr
subb
push
push
js
xor
iret
cmp
outsb
mov
icebp
mov
adc
inc
cltd
imul
sub
fldl
sbb
xchg
push
adc
aad
dec
inc
inc
repz
in
movsl
jmp
sub
movsl
xchg
subl
push
mov
imul
mov
add
out
mov
and
xor
and
popa
ror
bound
sub
sti
jne
loopne
xchg
push
sarb
jmp
xchg
cmp
inc
push
add
lods
loopne
aam
and
movsl
dec
mov
inc
popa
jno
add
mov
mov
test
jl
adcb
cli
jno
in
mov
ja
xor
sbb
imul
rorb
lea
mov
push
jp
movsl
xor
and
jg
xor
cltd
test
sbb
das
rcll
mov
hlt
dec
cmp
ret
push
jmp
xlat
lret
fcmovu
aas
cmp
push
pop
or
inc
mov
js
jle
js
cmp
sti
scas
int
dec
sti
jns
fldl
jmp
inc
fs
mov
jne
xchg
out
jmp
inc
xor
hlt
pop
adc
outsl
and
test
inc
test
imul
jno
loop
inc
fstpl
nop
scas
cltd
cmpsb
cmp
aas
orl
push
lahf
push
lods
les
adc
sbb
xchg
push
stos
addr16
push
daa
ret
or
dec
push
or
or
subb
in
add
outsb
mov
aam
xlat
jp
aas
fwait
pop
or
loopne
mov
dec
nop
inc
adc
cmc
ss
test
sbb
mov
loop
aas
and
jmp
gs
xlat
mov
push
cs
cmp
repz
loope
or
jnp
sahf
nop
cld
pop
fs
data16
xchg
sub
out
jp
xorl
cmp
mov
jnp
cmpb
stos
mov
dec
iret
in
mov
scas
shrb
mov
xchg
test
ss
mov
dec
jb
adc
sbb
and
pop
jnp
cmc
rcrl
sub
cld
adc
or
aas
sub
in
out
dec
sub
insb
fstpl
repz
add
sub
pop
jne
mov
mov
bound
push
addr16
adc
clc
dec
and
enter
jbe
jnp
mov
add
push
or
ror
inc
xchg
cmc
lds
std
shl
mov
cli
jbe
scas
mov
jmp
movsl
push
mov
xchg
push
bound
inc
sbb
pop
insl
loop
data16
inc
ret
add
mov
notl
ret
cmp
js
sbb
xchg
rcrb
mov
mov
in
ja
je
aaa
xor
jmp
xorps
sbb
or
negb
cmpsl
xchg
xor
pop
daa
repz
aas
out
pushw
mov
inc
mov
fildl
ss
jne
and
loop
push
jmp
add
ljmp
lods
add
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
pop
fwait
jmp
cltd
cltd
aaa
roll
sub
push
rolb
mov
in
int3
xchg
aas
outsl
pop
or
push
dec
mov
push
mov
sub
std
sahf
test
int3
or
lret
stos
daa
pop
shll
adc
sub
xchg
inc
fwait
testb
mov
inc
daa
fwait
cwtl
cmp
lods
out
scas
jg
add
outsb
outsl
call
adc
push
push
cmp
leave
sub
cmp
repz
clc
add
ljmp
xor
sbb
and
lahf
fildll
cmpsl
aas
repnz
lcall
cltd
pop
movsl
fs
and
clc
sub
mov
push
or
push
mov
push
dec
xchg
cmp
jae
leave
popf
loopne
mov
jl
mov
mov
call
cltd
sahf
imul
aad
pop
adc
or
push
rolb
pop
ret
rcll
inc
xchg
repz
mov
dec
sbb
mov
imul
sbb
jp
aad
ds
dec
mov
ss
ljmp
sti
leave
sahf
lods
out
jne
stos
sarb
xchg
pop
push
icebp
jg
or
sbb
or
xchg
dec
lret
push
jns
sub
pop
and
dec
fsubrs
clc
lcall
test
or
popf
adc
and
adc
pushf
dec
jae
test
fs
adc
mov
mov
dec
pop
lcall
jo
mov
sbb
add
cmp
lea
xchg
mov
mov
adc
add
mov
pushf
pop
stos
push
pushf
push
fstl
jne
adc
or
test
icebp
cmpsb
lret
jge
mov
arpl
sbb
imul
push
nop
test
test
outsb
int
jns
or
sub
mov
cmpsl
add
icebp
cmp
sbb
leave
in
adc
fdivl
daa
ror
sbb
stc
xchg
ret
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
test
in
idivb
mov
js
mov
js
pop
les
sub
in
mov
fisttps
cmp
cmpsb
sub
repnz
imul
insb
cmc
push
sub
cmp
in
pop
inc
shll
jnp
cs
or
gs
daa
jg
mov
pop
cmpsb
mov
or
mov
fcoml
adc
mov
mov
imul
test
cld
and
xchg
dec
cmp
sbb
pop
ljmp
xor
fldcw
mov
add
push
aam
in
fidivs
popf
sti
lret
aam
xlat
xchg
add
loopne
mov
hlt
adc
pop
add
es
cs
jb
and
inc
adc
loopne
jge
pop
jae
aad
ret
push
xor
push
ja
jbe
mov
xchg
push
test
std
mov
test
xor
mov
inc
add
js
pop
cmc
push
add
sub
sub
xor
cmp
and
inc
mov
push
mov
lcall
jge
xor
fcmovb
into
in
arpl
adc
das
pop
ret
dec
iret
cli
mov
sbb
aas
ja
ljmp
adc
jb
xlat
fst
mov
repnz
lock
mov
jmp
repnz
jle
repz
test
stc
sbb
and
mov
cs
cmp
lahf
loopne
mov
pop
xchg
cmp
inc
push
loope
scas
out
mov
pop
iret
jne
mov
stos
push
cld
test
xchg
xlat
shrl
cmp
int
cmp
mov
in
test
lret
mov
mov
cli
test
mov
cmpsb
jne
fmuls
mov
cmpsb
add
dec
out
mov
stos
shll
sub
and
lret
orl
aam
stc
xchg
cmpsb
mov
push
aaa
in
adc
cmovne
test
pop
decl
ss
and
sub
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
mov
js
in
js
fdivs
xor
jno
push
mov
mov
and
loopne
aam
int
lods
stc
mov
mov
xlat
ficoml
sub
add
fs
sub
je
sbb
aad
cs
jp
pop
sub
mov
ljmp
pop
movsl
cwtl
pusha
test
outsb
hlt
outsb
pop
loop
sub
adc
add
lret
dec
mov
push
jnp
outsl
push
sub
lahf
mov
lds
lods
ds
mov
aaa
int
dec
dec
je
rcrl
cmp
pop
test
into
pop
out
scas
or
pop
int
dec
jmp
fidivrs
push
test
aas
push
push
push
dec
mov
rcl
mov
out
scas
fbld
cmp
aam
push
push
iret
mov
adc
sahf
jns
pop
fimull
rclb
rcrb
inc
inc
jmp
rcr
movsl
mov
shr
into
and
mov
cltd
mov
sbb
fistpl
mov
nop
scas
inc
sbb
mov
jo
adc
iret
pop
sub
adc
mov
icebp
sbb
jbe
fldl
mov
cli
stos
je
loopne
adc
mov
mov
xchg
flds
xor
repz
inc
inc
test
lcall
loop
push
test
xor
adc
ret
insl
pop
mov
cmp
std
push
xchg
jns
lret
shlb
cwtl
mov
std
cmp
test
ud0
mov
out
mov
scas
fdivp
mov
negl
popa
test
inc
add
stc
mov
jle
jb
in
aam
movsl
add
mov
push
push
sbb
pop
push
mov
cmp
xchg
fpatan
mov
adcb
mov
pop
or
inc
sbb
and
xor
cmc
fldcw
push
in
inc
lods
sbb
cld
mov
mull
out
dec
pop
ds
into
fbld
mov
cltd
sbb
push
xchg
sbbb
sbb
cmp
push
pop
jb
or
rolb
mov
cmp
in
ret
lods
gs
fsubrs
xchg
imul
add
dec
adc
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
lods
mov
adc
mov
js
mov
dec
popa
iret
adc
pop
inc
test
insb
not
mov
js
xchg
inc
adc
icebp
dec
add
mov
xor
sbb
mov
xchg
jns
sub
stos
or
or
lahf
jl
mov
xor
fldcw
mov
ja
mov
mov
lret
mov
decl
dec
push
jmp
or
sbb
pop
xchg
and
xor
mov
frstor
or
push
inc
fbstp
add
push
pop
mov
xchg
xor
mov
aam
lds
mov
cmpsl
mov
xacquire
push
adc
inc
popa
cmp
loope
push
loopne
and
xchg
div
in
aad
faddl
shr
cmp
nop
rcrl
jne
jmp
mov
or
pop
jecxz
adc
movsb
lret
icebp
xchg
sub
out
mov
int
xchg
mov
das
pop
add
mov
mov
jae
fwait
movsl
test
push
out
mov
push
stos
icebp
fists
rclb
push
rcrl
movsb
mov
cmp
pop
mov
mov
push
lea
xlat
push
int3
out
jg
out
sbb
add
cmpsl
sarb
or
mov
leave
push
jne
into
cmp
push
push
dec
sbb
jge
xor
ss
mov
cwtl
add
jl
fsts
jne
roll
loope
mov
jmp
pop
add
adc
cmc
mov
mov
les
aas
pusha
push
outsb
xchg
sub
shl
lcall
dec
or
cld
lea
mov
xor
mov
call
in
shll
mov
lds
and
adc
mov
adc
cld
pop
ret
xchg
or
roll
push
push
insb
stos
fcomp
ds
inc
fs
in
and
pop
fldl
ljmp
test
adc
adc
fnstenv
mov
lds
xor
cmpsl
les
ret
adc
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
sub
js
in
js
dec
add
out
jmp
js
fnstenv
ret
rorb
jecxz
jmp
inc
icebp
inc
mov
mov
push
jo
imul
pop
ret
movsb
bound
and
mov
jle
rol
sbb
pushl
pop
dec
fsubrl
test
inc
or
shrl
insl
clc
inc
and
insl
cmpsl
add
jbe
out
outsb
andb
mov
pop
mov
pushf
ror
addb
mov
imul
mul
stc
cmp
jl
push
testb
adc
or
push
shll
imul
push
push
push
movsb
fs
xor
fldenv
jle
add
outsl
ret
cmpsl
mov
jno
fcomp
ds
push
fdivrl
mov
arpl
fdiv
xchg
jmp
out
fdivl
xor
ret
leave
je
in
lods
push
popf
xlat
outsl
push
adc
xchg
jle
jge
and
outsl
jo
jo
shll
out
rorb
aam
mov
les
xor
cmp
or
sub
sbb
push
cpuid
cmp
insl
fisttpl
sbb
out
sbb
sbb
ljmp
xchg
dec
sub
imul
stc
mov
xchg
aam
btc
ficoms
jmp
cli
sub
mov
lea
stos
lahf
in
jmp
cld
push
push
jbe
dec
xor
data16
jg
cmp
inc
jl
cmp
or
jmp
and
jmp
daa
test
mov
in
and
xchg
mov
rcl
call
pop
mull
imul
adc
out
subb
loopne
or
xorb
cmpl
and
ljmp
add
inc
ret
mov
fdiv
cwtl
jbe
xchg
popa
rclb
loopne
testb
dec
mov
sbb
pop
orb
inc
or
xchg
out
fwait
bound
cmpps
in
push
aaa
je
mov
ds
push
mov
fldcw
sbb
add
in
add
in
or
mov
jmp
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shll
js
in
js
imul
sbb
inc
mov
or
sub
hlt
or
fprem1
pop
mov
int
jo
jg
mov
outsl
push
cmp
je
sahf
xchg
push
jo
lret
sahf
adc
jo
loope
sar
popf
or
pop
jecxz
xchg
mov
out
dec
mov
dec
dec
push
adc
pushf
sbb
mov
sub
cmp
ss
cmp
add
gs
test
inc
mov
adc
adc
sbb
or
jp
cltd
mov
stos
lods
jo
iret
pop
jle
fistpll
imul
out
ret
jb
arpl
in
xchg
dec
push
aam
scas
jg
mov
push
dec
mov
ja
jo
testl
mov
mov
and
orl
lcall
in
popa
or
sahf
jb
push
and
out
scas
sbb
test
jno
ds
andb
xor
xor
mov
push
dec
sub
in
aad
pop
leave
fstl
xor
negl
scas
xchg
call
gs
cmp
lea
inc
mov
fcoms
sub
lahf
test
cmpsb
test
pop
jns
decl
push
outsb
fs
mov
dec
cli
push
cmp
pop
das
cmp
dec
gs
mov
push
adc
sub
or
iret
rol
xor
ds
stc
repnz
mov
pop
add
or
add
cwtl
sarl
xor
fstpl
cmp
pop
xchg
lods
out
mov
aam
lret
xchg
inc
call
scas
mov
sub
lret
push
lea
les
jmp
xchg
nop
mov
pop
jecxz
out
jae
push
push
cmp
pop
std
cmp
hlt
fs
sbb
pushf
orb
xchg
or
fldcw
mov
bound
inc
cmpsb
xor
pop
push
scas
sub
inc
sbb
jnp
jne
or
es
cmp
sub
mov
popf
aas
jp
add
fstp
add
jae
out
das
mov
xchg
mov
imul
push
mov
or
daa
and
lcall
inc
push
push
xor
pop
mov
sarl
cli
movl
jmp
ret
ret
lret
test
xchg
and
js
jle
js
outsl
xchg
adc
or
call
ret
in
dec
xchg
dec
xchg
cli
push
xchg
in
inc
in
jbe
pop
negb
je
mov
xorb
mov
add
xchg
jo
inc
jo
jnp
or
xlat
and
push
nop
pop
imul
inc
sub
ss
jne
gs
pusha
pop
inc
ja
pop
cmp
lds
sahf
mov
sbb
imul
or
or
inc
jae
mov
or
andb
cs
cs
cmpsb
adc
jp
imul
scas
sub
push
pushf
push
shrb
sbb
std
repz
inc
xor
and
in
mov
imul
mov
pop
cmp
addr16
cmpsl
sbb
lea
jg
bound
lahf
jns
addr16
push
bound
cmp
clc
ret
inc
xor
lcall
xchg
jbe
fsubrs
icebp
xchg
inc
or
mov
adc
sub
or
and
mov
jb
dec
pop
push
shrd
cwtl
rcl
jl
fsubp
ret
push
fadd
mov
insb
adc
jmp
cmp
jo
stc
shlb
jne
fistpll
mov
dec
out
loope
fwait
pop
rcl
jl
add
inc
dec
repz
in
hlt
mov
fs
fmuls
bound
arpl
insl
ret
cltd
sbb
sub
pop
jle
sahf
adc
paddsw
jl
inc
sarl
xor
jo
cmp
mov
ja
loop
pop
jle
fidivs
out
lods
jo
stos
aaa
out
popf
shrl
sub
xchg
les
decl
imul
push
pop
inc
adc
cmp
mov
iret
mov
das
dec
dec
or
sbb
cmp
loop
lods
leave
add
aam
sti
sarl
faddl
add
mov
sub
jl
inc
pop
or
ss
inc
xchg
sub
mov
xchg
shlb
fmull
push
insl
sbb
je
pusha
mov
test
stos
push
add
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
movsb
xor
js
jle
js
adc
push
push
mov
testb
loop
jle
push
jge
lds
sbb
xor
popl
sti
pop
mov
shl
movsl
dec
addr16
or
loop
jge
cs
rcrb
mov
jbe
fdivrl
mov
pusha
ds
ss
mov
subl
add
insl
insl
dec
xor
inc
adc
imull
pop
mov
addr16
push
and
push
out
sbb
sub
cmp
inc
rcrl
sbb
and
fs
loopne
sbb
sub
sbb
aam
lcall
mov
clc
movsb
add
movsl
dec
insl
ficoms
adc
mov
pushf
daa
cmp
xchg
pop
call
ds
inc
mov
or
or
mov
es
mulps
dec
mov
push
cmpsb
push
push
xor
dec
pop
ljmp
and
push
js
call
sti
cmp
jo
pop
lcall
xor
leave
push
mov
frstor
pushf
mov
mov
outsl
add
cmc
dec
pop
xor
adc
add
cli
or
push
sbb
xchg
sub
sbb
mov
inc
outsb
dec
call
push
add
adc
cltd
sahf
cmp
inc
notb
push
fs
jge
lods
in
shlb
js
push
out
mov
cmp
sub
out
arpl
repz
xchg
jl
lahf
mov
orl
sub
ljmp
and
cli
repnz
bound
adc
cmp
ja
cmp
test
fisubs
dec
sbb
lock
mov
lret
shll
sbb
ja
lods
fwait
mov
xlat
test
outsl
fnstcw
adc
push
test
iret
lods
jl
dec
xchg
dec
hlt
aad
xor
inc
aam
dec
and
adc
cli
push
adcl
jge
cltd
ss
leave
mov
jecxz
mov
je
sub
stos
adc
sti
jge
and
push
sti
jbe
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
adc
inc
jp
js
in
js
out
nop
cmp
mov
xor
in
lcall
iret
sub
xchg
xchg
adc
and
cmp
adc
fsubs
mov
mov
pop
mov
mov
aas
out
dec
mov
mov
sbb
mov
pop
ja
ss
out
pop
gs
rolb
arpl
ja
test
adc
lods
pcmpgtw
lea
fstpt
mov
into
sbb
fcoms
pusha
jp
cmpb
dec
sub
std
jne
jne
lods
pop
cmp
jg
xchg
and
jns
or
ret
cwtl
adc
movsb
push
push
xchg
arpl
mov
sahf
loope
mov
mov
cld
xor
pop
xor
pop
xchg
jnp
ror
insb
leave
aas
imul
xchg
inc
ret
jle
add
mov
stc
push
add
cmp
xchg
lahf
inc
es
lods
dec
dec
pop
insb
out
jb
xchg
scas
scas
scas
out
xor
clc
inc
addb
daa
mov
cmp
pusha
popa
sub
push
mov
insl
xchg
pop
int3
ss
imul
test
sub
data16
aaa
adc
shll
loopne
xor
rorb
mov
push
mov
imul
lods
and
mov
orb
in
and
insb
xor
add
add
xor
mov
xchg
xor
mov
and
iret
push
test
popf
or
insb
test
push
inc
xchg
adc
xchg
in
ret
cmp
bound
sbb
push
dec
dec
dec
jge
test
adc
clc
cmp
je
jp
xor
or
cmpsl
jnp
lds
mov
rcrl
mov
mov
xchg
fistps
in
imul
xor
push
push
pop
mov
clc
imul
xlat
xchg
test
fisttpll
stos
mov
pop
fisttpll
leave
sahf
xor
adc
dec
shlb
in
xlat
adc
in
aad
cmpsl
es
daa
mov
aam
sti
popf
push
out
push
push
cld
fstpl
inc
lret
add
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
aas
pop
mov
out
js
in
js
divl
xor
push
adc
cmp
or
adc
add
dec
jl
dec
loop
das
stos
cmpsb
jb
fstps
sbb
fstps
jmp
cld
out
idivb
jp
or
je
inc
dec
aad
mov
and
les
and
pop
stos
adc
and
jg
fmul
lret
pusha
mov
and
popa
dec
dec
out
mov
push
rcll
popf
jp
mov
mov
repnz
cmpsl
or
and
int3
push
movb
je
cmpsb
nop
mov
hlt
mov
je
fdivs
int
sbb
xor
jecxz
push
jo
fbld
aaa
out
orl
inc
mov
mov
sub
mov
int3
jo
fsubr
xor
push
es
scas
cmp
cs
daa
inc
dec
cmp
dec
cmp
in
xor
rcll
push
fldt
ss
sbb
incb
push
ja
loopne
push
add
xchg
call
xchg
outsl
push
pop
arpl
out
pop
aad
jno
xchg
adc
push
dec
mov
out
xor
lds
idivb
shrl
inc
jnp
xor
insl
add
lcall
scas
and
xchg
cmp
add
inc
pop
in
adc
mov
mov
fwait
sbb
xchg
pop
sbb
or
rcl
outsb
lcall
in
stos
mov
movsb
xchg
repnz
cmp
dec
lret
js
es
pop
cmp
xchg
cmp
movsb
fidivl
and
mov
adc
mov
out
xor
dec
fs
lods
loopne
mov
pop
push
push
mov
arpl
out
std
lock
cmp
les
adc
aad
mov
rclb
push
mov
out
or
movsb
pop
mov
xchg
jmp
pusha
mov
jno
mov
loope
scas
cmp
jnp
out
fcomps
xlat
push
fwait
in
out
or
movsb
push
imul
sbb
out
add
mov
or
nop
cltd
mov
dec
add
jmp
ret
int
into
xchg
jle
cmp
dec
js
in
js
fwait
and
adcb
loope
lods
lds
cmc
push
inc
xchg
jg
stos
ficomps
jecxz
mov
sbb
sbb
mov
sbb
mov
js
dec
pusha
sub
js
sbb
jo
lret
jg
fildll
sbbb
test
je
add
icebp
andb
fildll
adc
jle
or
sub
pop
push
cld
outsl
adc
stc
push
dec
std
lahf
nop
mov
jno,pt
jl
fldt
jo
pop
aas
movb
add
out
mov
or
pop
push
out
mov
lods
mov
dec
jns
int3
pop
leave
testb
lcall
pop
and
cmp
pop
imul
data16
fildll
xchg
push
and
mov
dec
out
or
mov
scas
psrad
loopne
add
or
movsb
into
sbb
push
loopne
insb
jmp
jns
inc
mov
pop
push
jne
dec
xor
loop,pt
adc
push
mov
das
cmp
or
jmp
loop
jg
mov
push
and
push
jns
xchg
lret
into
lcall
add
mov
cld
rcr
lret
pop
pop
xchg
js
in
aam
sti
or
lock
sbb
jle
sarb
out
outsl
popf
pop
add
mov
pop
add
push
out
and
or
out
sbb
fstl
inc
cmpsb
ja
sbb
pop
fs
divb
lods
push
out
pop
sbb
clc
pop
and
mov
movsb
loope
sbb
cli
iret
pop
sbb
pop
and
dec
shll
shl
test
pop
inc
and
jnp
inc
sbb
sub
lock
in
mov
push
lret
out
cmpsb
jle
adc
cmp
pop
push
mov
dec
jl
ss
fstpl
icebp
cld
mov
jle
xor
pusha
sbb
test
je
cmc
xor
lods
mov
test
outsb
dec
arpl
cmp
loope
leave
lods
repnz
arpl
dec
rorb
jl
mov
clc
inc
roll
push
inc
sbb
push
jge
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
mov
push
js
in
js
or
nop
lahf
adc
lea
jmp
stc
xor
mov
in
pop
jp
scas
sbb
rolb
arpl
test
cs
mov
rep
cmp
cmp
sub
pusha
sahf
addr16
jo
bound
xor
sbb
fsubs
adc
mov
bound
imul
sbb
lock
adc
pop
push
cmpsl
loope
sbbb
cli
sti
pop
inc
jnp
ret
xchg
xchg
mov
jecxz
add
pop
adc
sub
push
nop
dec
shrl
push
sbb
scas
add
subb
in
adc
adc
xchg
xor
cwtl
cwtl
dec
test
lcall
and
xor
push
xor
jb
mov
mov
jmp
mov
ja
inc
mov
sub
daa
test
arpl
inc
or
arpl
and
inc
repz
pop
cmp
int3
adc
stc
test
icebp
jbe
movsl
cmp
sbb
jp
aam
xchg
mov
mov
fwait
shlb
std
sub
xchg
lcall
pop
sbb
pusha
out
mov
sbb
dec
ficoml
gs
pop
shr
or
popa
xor
test
xor
movl
cmpsl
stos
inc
imul
and
dec
push
adc
inc
lahf
in
fldl
push
xor
popf
fiaddl
mov
out
insl
leave
js
jecxz
adc
lods
jmp
movsb
add
out
xorb
std
adc
popf
shl
lods
sbb
mov
test
mov
xlat
cltd
pop
mov
xchg
fstpl
pop
divb
mov
mov
fs
push
cmc
jb
addr16
int3
test
and
dec
mov
cmp
andb
dec
addb
pop
push
cwtl
push
inc
adc
test
and
hlt
xchg
adc
dec
shr
mov
sub
dec
repnz
arpl
or
mov
shlb
dec
xchg
cmc
xor
fldenv
add
fldt
mov
ret
cs
data16
mov
or
movsl
das
jl
mov
repnz
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
scas
push
clc
cmpsb
push
js
in
js
inc
mov
push
shrb
xchg
ret
push
in
int
jns
repz
xchg
jnp
test
test
adc
shll
dec
dec
mov
fnstcw
leave
cmp
lcall
arpl
das
cwtl
push
cmpsl
or
ja
sbb
mov
test
push
add
packuswb
mov
fmull
aaa
pop
mov
sub
cmp
jae
pushf
mov
or
aaa
sub
ss
mov
mov
shlb
mov
imul
xchg
fadds
sbb
mov
fwait
aam
push
mov
icebp
inc
jg
repnz
mov
push
jge
xchg
cmpsl
fimull
mov
adc
or
jl
fucomip
daa
mov
xchg
in
add
mov
pop
jg
ss
adc
shll
pop
rcll
fsubs
or
mov
mov
scas
sub
shrl
testb
dec
push
ret
aad
xor
sarb
mov
inc
les
stos
cmp
loop
pop
aad
fsub
jo
rcrl
xor
pop
inc
lods
outsl
sbb
outsl
xorl
lcall
xor
jno
mov
fcoms
adc
pop
sbb
out
in
cltd
pop
daa
and
out
xchg
pop
jns
loope
bound
rcll
dec
mov
ljmp
inc
mov
mov
xor
das
mov
rolb
movsl
push
scas
xchg
mov
movsl
xchg
pop
inc
pop
and
pop
inc
lods
lea
cwtl
jp
sbb
aam
xchg
jp
dec
mov
test
sbb
iret
int3
push
sahf
fdivl
inc
fidivl
xchg
jp
push
rolb
sbb
test
outsb
es
jge
leave
shll
xor
push
insb
pop
xchg
jge
and
test
add
add
fists
adc
push
adc
push
jbe
fs
sbb
jl
jl
push
pop
cs
mov
cmp
in
test
stc
jecxz
sbb
pop
in
lods
mov
fildll
jns
mov
in
mov
inc
push
adc
mov
push
pop
mov
fldt
pushf
in
aas
cmp
jecxz
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
negl
push
in
stc
adc
js
jle
js
or
popl
andb
add
in
std
dec
cld
cmp
shrb
mov
fdivp
iret
pop
xchg
imul
shll
fwait
add
xor
stos
mov
andl
loop
or
cmp
mov
jb
xchg
pusha
int3
sbb
adc
rclb
and
fistpl
pop
jae
mov
adc
notb
mov
jbe
ljmp
lcall
test
add
pusha
ror
jp
jecxz
sahf
iret
cmpsl
push
add
insb
pop
imul
jmp
pop
or
imul
sub
jo
mov
dec
add
mov
scas
in
or
shlb
inc
cmp
and
add
lahf
iret
idivb
jg
cmpsb
loop
dec
icebp
pop
cltd
push
stos
cltd
jge
sub
aad
and
push
mov
mov
push
jmp
sub
cmp
shrl
push
icebp
movsb
cmpsl
daa
mov
lock
nop
jnp
insl
push
clc
inc
dec
xor
sub
dec
mov
mov
scas
xor
arpl
mov
jo
cmc
mov
popf
lods
adc
jo
and
out
push
aaa
daa
fmul
push
cmp
lds
mov
mov
inc
inc
add
adc
pop
cmp
push
cmpsl
mov
je
fidivl
sub
idivb
imul
xchg
mov
fwait
xor
add
jle
or
out
jg
sub
imul
cmp
lea
jge
fdivrl
ja
jo
xor
cmp
cmpsb
cmpps
std
xchg
loop
mov
or
cli
pop
and
xchg
cmp
mov
cs
imul
daa
cmc
pusha
ljmp
cmpsl
imul
fldenv
outsl
cmc
sahf
or
repnz
dec
push
mov
push
aad
les
mov
adc
fsubrs
push
in
mov
jl
aas
xchg
lods
jmp
mov
xor
jmp
pop
lcall
mov
rorl
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
sbb
push
js
in
js
mov
repnz
testl
or
sub
mov
outsb
loop
push
imul
mov
ja
xchg
xor
mov
jg
inc
inc
aas
in
shlb
aam
push
popa
outsl
mov
daa
les
into
and
sub
sbb
add
cmpsb
fyl2xp1
sti
mov
aam
push
cmp
mov
in
jae
add
sbb
mov
xchg
xor
nop
push
bound
mov
sub
clc
xor
in
pusha
jbe
les
fistpll
mov
ficoms
pop
imul
mov
icebp
sahf
in
dec
out
adc
xchg
mov
jecxz
inc
xor
mov
mov
rcrl
mov
ds
repz
in
pop
fisttpll
mov
enter
push
imul
sbb
dec
add
test
jle
mov
bound
jb
xchg
jmp
add
push
xchg
lea
arpl
sub
jp
and
push
push
scas
test
inc
add
xor
inc
add
test
jno
hlt
xor
adc
inc
push
jmp
sub
jle
enter
jmp
xchg
push
mov
mov
xor
pop
enter
dec
and
lock
dec
fwait
aaa
int
xlat
call
rolb
adc
mov
add
movsb
in
loope
jne
out
xchg
mov
mov
outsb
outsb
fwait
popa
fnstsw
popf
or
jle
sub
fs
sub
popw
dec
mov
cli
sub
sub
mov
jg
fsubrp
aas
mov
lds
adc
call
sbb
adcl
mov
lds
ja
pop
int
out
xchg
testb
mov
pusha
fwait
mov
mov
aas
push
and
adc
cmp
stos
adc
sub
sub
xor
orb
fnstcw
pop
inc
jb
test
push
divb
dec
xor
insb
pop
dec
push
xchg
daa
ja
int3
cmpsl
inc
outsl
push
cmp
and
sub
arpl
sub
stc
ret
xor
xchg
dec
xchg
fisubrs
pop
lahf
push
add
jmp
int3
into
ror
rcl
into
jbe
inc
inc
rcll
outsb
gs
js
in
js
xchg
lahf
push
and
sbb
addl
je
push
pop
pop
cmp
xchg
icebp
les
pop
lods
and
idiv
inc
lea
jle
stc
ja
hlt
fnstenv
xorb
scas
lret
pop
fimull
add
stc
daa
add
sub
cmp
insl
dec
rcrl
mov
lods
push
lahf
push
mov
sbb
push
test
add
adc
or
scas
loop
mov
mov
add
inc
dec
stos
sub
cltd
out
or
xor
lods
fdivl
insb
dec
fildl
bound
addr16
and
inc
loopne
mov
push
dec
dec
int
shll
push
cmp
adc
mov
jbe
mov
jb
xchg
mov
pop
or
outsl
jo
scas
mov
inc
sub
imul
mov
mov
les
subb
jp
cld
lret
jb
sti
or
and
push
out
mov
pop
lahf
stos
mov
xchg
pop
push
mov
int
out
or
shr
push
push
incb
inc
jbe
sbb
xchg
scas
test
cmp
or
lcall
iret
pop
cmp
out
inc
push
iret
scas
jne
cmp
xchg
iret
pop
cli
add
jle
cmp
rcl
or
test
inc
lret
jg
push
adc
or
std
sar
sbb
decb
mov
test
jae
mov
mov
pop
mov
into
lahf
into
das
nop
push
aad
das
lods
mov
jp
insb
lahf
xor
jo
movsb
jg
fstl
push
popa
push
ja
cmp
sub
mov
je
orb
test
inc
xor
daa
loop
pop
or
insl
pop
or
xchg
rorl
int
cmp
mov
orl
test
mov
mov
jle
mov
mov
adc
push
clc
xor
mov
imul
sub
xor
mov
ljmp
int
jae
xor
scas
daa
mov
xchg
movsl
leave
xchg
or
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
stc
pushf
adc
pop
js
in
js
repnz
insb
xor
lds
rcrl
mov
out
fnclex
dec
sti
pop
lret
push
fistps
pushf
flds
lret
gs
or
out
rolb
or
sub
pop
mov
adc
dec
sub
inc
daa
push
add
arpl
xlat
xchg
mov
call
fcmovnbe
jg
arpl
pop
xchg
mov
cmp
add
inc
test
inc
cld
stos
push
lahf
stc
or
sbb
mov
mov
push
add
cmp
xchg
fdivs
sub
mov
stos
cmp
sbb
arpl
imul
leave
pop
enter
hlt
inc
sub
jle
mov
in
sub
push
dec
xchg
lods
mov
adc
iret
push
gs
adc
mov
pop
xchg
mov
in
dec
test
mov
fnsave
dec
mov
push
or
xchg
sbb
push
dec
sarl
in
jp
mov
and
mov
xchg
sahf
xlat
inc
mov
fimull
mov
mov
sub
or
fxch
js
iret
jo
sbb
bnd
clc
adc
sbb
mov
out
out
pop
andb
mov
out
xlat
addl
xchg
pop
cmp
push
lret
loope
xor
das
aas
sbb
fdivrs
mov
ret
ljmp
mov
or
iret
scas
adc
sub
addb
xor
push
mov
push
mov
mov
add
sub
xor
xchg
push
mov
inc
xchg
fbld
add
fdivs
lret
ljmp
cmp
js
into
call
dec
push
rcr
mov
insb
ret
sub
fwait
xchg
insb
lods
mov
pop
push
arpl
inc
jmp
mov
xchg
jmp
or
pop
fsub
std
xor
cli
and
je
dec
lret
arpl
testl
jno
lock
movsb
and
mov
xor
jle
mov
rcrl
pop
mov
mov
add
rcl
jg
adc
add
mov
pop
lock
cmp
ja
jmp
rol
xor
je
mov
in
js
aas
outsb
jo
push
mov
std
cmp
int
aas
out
xchg
je
je
mov
arpl
ja
in
negl
repz
sub
jecxz
jmp
or
mov
mov
ror
and
or
pop
xchg
sbb
int3
cmp
addr16
sbb
ret
sbb
sub
jp
and
xor
fcmovnb
sbb
inc
in
mov
lahf
xor
test
jge
ficomps
js
cmpsb
test
jbe
xchg
in
scas
jmp
pop
ljmp
mov
lods
les
insb
xor
int3
imul
scas
sbb
stos
into
xor
mov
insl
icebp
push
repnz
lods
mov
add
hlt
das
popa
aas
push
cmp
daa
or
stos
inc
jle
fmuls
decb
mov
xchg
inc
or
mov
xor
enter
sbb
jo
jae
mov
sbb
sbb
and
push
adc
out
sub
rolb
pop
xchg
enter
sub
adc
mov
sbb
testl
rorl
jge
ss
lods
sbb
and
jbe
mov
data16
or
jmp
inc
aad
dec
insb
inc
sti
lret
stos
pop
jae
xchg
lret
jecxz
xor
ret
inc
aam
jnp
jge
dec
stc
sbb
jmp
xchg
lret
gs
mov
es
sbb
add
cmp
sarl
add
shl
dec
and
cltd
mov
and
cwtl
push
in
inc
adc
push
mov
xchg
inc
lcall
adc
xlat
cmove
push
sub
mov
add
jo
adc
add
jecxz
xlat
xor
mov
push
add
pop
jg
movhps
inc
and
mov
pushf
test
ljmp
mov
popa
lret
mov
pop
lods
pop
int3
xor
add
jno
gs
std
pop
adc
into
add
and
in
js
inc
jecxz
std
out
pop
jbe
jge
repnz
sbb
test
mov
mov
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
shrl
jb
bound
in
js
fildl
aam
mov
js
and
mov
pop
cmpl
mov
icebp
push
in
pop
push
push
push
adc
fbld
push
and
and
loop
or
mov
jle
sbb
push
add
xor
leave
popa
out
leave
mov
inc
mov
repnz
loop
clc
adc
repnz
push
and
loopne
fildl
mov
rol
cmp
adc
out
popf
mov
xor
push
or
pop
push
js
mov
out
mov
imul
ret
sbb
jbe
xchg
push
xchg
mov
pop
add
nop
inc
mov
pop
mov
fiaddl
sbb
or
out
dec
adc
in
inc
sub
xchg
repnz
pop
jge
ss
ret
adc
hlt
push
mov
aaa
cmp
and
roll
push
stos
repnz
push
iret
aaa
mov
aas
movsl
cmp
inc
shrl
jns
data16
call
loopne
test
or
ficoms
test
ja
adc
into
rclb
mov
cld
addb
add
and
mov
xchg
fs
jo
divl
and
push
push
fcompl
inc
test
inc
dec
icebp
xchg
mov
mul
sbb
imul
xor
adc
scas
mov
shlb
repz
push
pop
add
shrb
add
popa
arpl
mov
adc
and
inc
jb
push
jo
fsubrp
push
xchg
xchg
sub
xlat
pop
sub
shlb
dec
mov
in
or
xchg
mov
mov
xor
enter
mov
leave
mov
mov
xor
lret
clc
push
nop
popf
jle
jnp
sahf
push
out
iret
fwait
or
sub
out
iret
jp
push
in
sarb
loope
leave
stc
js
roll
inc
cmpsl
imul
mov
jmp
sbb
dec
jl
pusha
inc
dec
cwtl
sub
rorl
imul
cmpsl
repnz
cmp
fcmovnb
jae
and
inc
xchg
shlb
aaa
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
mov
pusha
js
in
js
fldl
dec
les
cmpsb
in
das
sbb
dec
dec
ficompl
es
pop
scas
or
pop
into
push
push
add
scas
or
sarl
mov
push
mov
out
cmp
sbb
movsb
mov
arpl
in
pop
inc
repnz
jns
popa
pop
cmpsl
adc
or
mov
mov
fdivs
cmp
dec
ja
cwtl
dec
pop
jae
popa
cmp
jae
insb
adc
jnp
out
call
jge
les
into
pop
sbb
sub
push
push
pop
inc
sub
xor
xor
xor
lahf
push
cs
test
or
mov
insl
scas
push
ja
daa
fs
cmc
sub
cld
fdivrs
imul
inc
imul
mov
es
data16
jmp
sahf
xchg
jbe
xchg
cld
mov
cli
ret
mov
mov
popf
out
popf
mov
dec
add
stos
add
push
fldl
inc
jno
stc
sub
add
xchg
shl
fnstcw
cbtw
sahf
push
scas
adc
mov
mov
mov
jbe
clc
jecxz
rol
xor
movsl
sub
sub
mov
lods
cs
xchg
xchg
sbb
dec
loop
lret
loopne
xchg
adc
ret
loope
xchg
mov
mov
sbb
imulb
test
stc
xor
dec
cmpsl
outsl
cmc
ret
jp
mov
lahf
es
popf
fwait
jmp
add
cli
push
sub
xor
xchg
cmp
pop
mov
pop
lods
in
mov
fsubrs
adcb
jo
out
fs
sahf
or
shl
fs
sbb
mov
mov
aam
mov
mov
sbb
call
insb
xchg
cmp
lock
cmc
pop
pop
sbb
fisttpl
add
movsb
out
xlat
fstp
enter
push
imul
out
fdiv
pushf
in
xor
mov
sarl
inc
scas
sbb
int
and
cmp
push
add
mov
sti
mov
jnp
std
int3
sarb
cli
insb
sub
ja
std
outsl
ffree
orl
test
or
mov
pop
subb
clc
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
dec
mov
js
jle
js
and
aam
inc
out
fs
nop
loope
adc
cli
std
mov
mov
iret
adc
adc
test
imul
xor
jno
sub
mov
pop
adc
pop
xchg
pop
mov
or
int3
out
push
jno
push
dec
cmpb
and
sub
inc
leave
roll
sbb
push
xor
test
cmpsl
cwtl
mov
sub
dec
std
pushf
test
je
sub
cmpsb
test
sbb
popa
lret
mov
in
les
sub
leave
xchg
dec
test
push
es
mov
insl
lds
jo
jb
add
xchg
xchg
stos
in
insb
xchg
mov
add
mov
lods
imull
and
cmpsl
rcl
js
and
and
in
sahf
pop
inc
stos
jb
push
push
ds
pop
xchg
pop
cs
int
mov
pop
cmc
js
fcmove
aam
int
test
xor
dec
dec
in
cmpsl
push
mov
gs
out
shll
lret
and
pop
mov
rcr
fmull
mov
insl
and
pop
push
push
pusha
push
pop
in
mov
popf
adc
dec
jbe
xchg
in
jp
push
out
xlat
scas
mov
dec
nop
inc
fs
sbb
repnz
add
mov
xor
mov
fiadds
cltd
or
inc
lods
mov
fcompl
repnz
mov
mov
xchg
pop
mov
ss
cmpl
adc
movsl
stos
mov
fsubrs
sbb
mov
push
icebp
popf
test
xlat
pop
addb
inc
ret
in
fxch
cwtl
sbb
sub
inc
xchg
fimuls
jecxz
mov
les
lea
lds
sub
xor
test
dec
jg
cmp
sbb
divl
jne
movsl
pop
mov
push
sahf
xor
xor
or
push
fdivrl
mov
cmp
adc
pop
xor
jae
cmp
rcrb
pop
mov
cmc
and
and
or
stos
ja
xor
test
cmp
adc
shrb
or
dec
fwait
push
nop
xchg
jle
mov
lahf
clc
inc
insb
rorl
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
or
dec
cmpsb
jmp
js
in
js
pop
jo
addl
out
inc
mov
xchg
push
jl
mov
add
ljmp
xor
js
daa
add
sub
scas
out
movsl
and
mov
sub
xchg
scas
and
cmp
jle
fnstsw
push
push
mov
lods
lret
xchg
mov
xchg
fistps
jecxz
and
or
and
inc
popa
iret
xchg
scas
push
cmpsl
aad
les
jmp
addr16
mov
jl
ficompl
outsl
pop
jb
mov
or
int
test
jmp
mov
xor
test
cmp
sbb
rclb
inc
je
sbb
push
xchg
jae
inc
adc
gs
cmp
shld
shl
sub
sub
test
add
mov
pushf
test
pop
clc
and
aad
aas
call
push
jb
jle
sahf
movsb
jle
cmp
aam
movsb
mov
sub
xchg
mov
add
int
lods
sbb
sub
out
mov
arpl
pop
mov
movsb
arpl
mov
push
add
dec
fisttpl
cmp
add
adcb
mov
and
insb
bound
fldenv
out
sti
scas
ljmp
cmp
scas
call
dec
sub
inc
test
inc
inc
in
fwait
cmp
and
xor
and
fstp
aas
or
movl
out
inc
or
shrb
pop
stos
push
les
cmp
adc
or
cmpsl
push
lcall
mov
call
enter
pop
hlt
into
pop
loopne
ret
push
xor
or
push
fnsave
adc
jecxz
fldl
xchg
and
jge
ds
in
pushf
jg
mov
in
test
sub
stos
sbb
pop
out
fs
pop
inc
xchg
xchg
or
scas
repnz
test
xor
push
adc
inc
imul
clc
mov
int3
mov
or
fsubl
pop
cmpsl
or
pop
pop
movsl
cmp
sbb
jle
cmpl
xchg
adcl
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
sub
imul
xor
sbb
or
pop
cld
test
mov
xchg
roll
ljmp
mov
mov
and
mov
das
inc
or
repz
push
icebp
pop
in
dec
jae
and
aam
pop
pop
scas
fucomp
test
ret
inc
ficoms
xchg
dec
popf
xor
and
sub
xchg
into
addl
xor
mov
dec
data16
mov
push
inc
xchg
in
push
jp
push
add
mov
push
mov
loop
in
jnp
js
roll
or
pop
jmp
jle
and
inc
push
test
dec
jns
cmpsl
bound
popf
iret
pop
pop
into
or
cmp
pop
xchg
test
cmp
and
cltd
out
xchg
sbb
in
roll
sti
push
int3
pop
pusha
cmp
push
xchg
lret
add
subl
loopne
and
jno
dec
and
jge
cmpb
ret
out
lahf
ret
mov
sbb
arpl
inc
xlat
cmp
orb
sub
add
arpl
sahf
xchg
outsl
xchg
fcomps
jl
cmp
push
pop
daa
mov
push
pop
mov
mov
xlat
mov
mov
mov
sahf
jae
mov
jb
mulb
and
adc
lock
or
lcall
cmp
inc
fwait
mov
out
xlat
outsb
pop
sahf
enter
test
repz
les
into
mov
int3
push
js
test
es
dec
fnsave
cmp
push
fwait
inc
push
aaa
cs
aas
add
aam
lret
jae
push
adc
sub
pop
lods
sbb
shlb
test
pop
inc
je
stos
cs
mov
js
lcall
push
dec
pop
jecxz
outsb
ds
ret
nop
outsl
or
int
xchg
and
pop
sbb
roll
cli
jecxz
jle
scas
outsb
ret
sahf
es
adc
lock
jle
xchg
mov
push
cmpsb
push
push
shr
lret
cmc
loopne
popa
mov
jnp
add
hlt
ja
imul
pop
mov
test
std
add
fs
addl
add
ret
rol
fcmovnu
mov
pop
movsb
cmp
jle
js
push
jecxz
and
fs
ja
sti
test
dec
scas
adc
push
jno
and
xchg
shr
xchg
imul
push
adc
nop
repz
mov
fcmovne
lcall
test
in
dec
ret
ja
mov
xchg
mov
cmpsl
push
in
jns
cmc
aad
int3
loope
lods
inc
sbb
loop
das
arpl
inc
in
in
popa
inc
jge
insb
sbb
push
iret
jp
or
and
fninit
sub
mov
xor
out
mov
inc
test
inc
xor
sub
std
mov
sbb
mov
dec
inc
fwait
cmp
adc
jno
test
outsl
int
imul
cmp
sbb
mov
or
push
loopne
aam
arpl
fsubr
pop
stos
nop
clc
gs
jg
repz
test
fnstsw
jge
test
push
or
cmp
stos
cmp
xorb
cs
int
add
push
push
inc
sti
loopne
jle
mov
mov
rcr
lea
pushf
les
aaa
push
jnp
mov
pop
sub
insb
call
test
pop
clc
repz
and
outsl
shlb
aam
or
inc
or
sbb
data16
rolb
loop
je
fs
adc
add
test
hlt
lahf
fidivrl
int3
gs
cld
mov
mov
cmpsb
loop
daa
aas
fwait
adc
daa
lods
jno
cmpsb
call
imul
ljmp
insb
fsubl
push
dec
call
add
fimull
cmp
lods
cmpsl
add
lret
dec
mov
out
sub
fidivs
xchg
imul
and
ljmp
cwtl
sahf
pop
stos
sbb
mov
rcll
jne
inc
jmp
rcr
in
aad
mov
repnz
cmp
ror
mov
sub
push
dec
mov
push
adc
add
xchg
push
clc
outsl
ja
mov
pushf
mov
outsb
adc
xorl
decl
mov
sub
jle
ret
js
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
jmp
js
in
js
adc
ds
stos
cmp
test
dec
sbb
mov
leave
std
fimull
fs
sbb
shrb
jge
sbb
lcall
leave
popf
ja
pop
orl
daa
cmpb
adc
lret
pusha
pop
jne
inc
fwait
icebp
add
xchg
push
outsl
add
pop
outsb
xchg
or
aas
out
xor
out
push
into
fwait
jl
test
mov
pop
subl
push
jecxz
daa
push
jge
push
sbb
lods
xor
push
add
out
movsl
pop
push
and
stc
int
outsb
xchg
jp
stos
sahf
imul
fbstp
out
push
push
or
cmp
sub
repz
and
lcall
test
int
gs
sub
mov
or
inc
out
pushf
jo
sub
xchg
xlat
jecxz
ficomps
and
pop
xchg
sbb
lcall
orl
and
xchg
test
sbb
push
lods
scas
or
inc
loopne
adc
mov
movsb
jae
enter
ljmp
test
ret
mov
jo
jl
pop
cwtl
insl
inc
mov
mov
sbb
fstl
add
sub
mov
adc
push
repnz
inc
mov
sub
push
es
bound
lcall
push
xlat
add
flds
mov
jbe
sub
or
scas
sar
push
movl
sbb
cmp
xor
sub
out
sbb
jnp
push
push
enter
mov
xor
mov
fisubl
fwait
insl
jle
jno
rol
sbb
jnp
inc
out
cmp
rcll
or
jno
je
iret
pop
jle
sahf
jb
int3
lea
pop
lods
aam
mov
movsb
aad
sahf
in
out
pop
pop
mov
dec
ljmp
insb
mov
adc
bound
sbb
pop
mov
ds
in
mov
cs
notb
jge
pop
lods
or
scas
pop
cmp
push
shr
outsb
dec
cmp
pushf
jge
sbb
out
mov
sti
inc
xchg
mov
push
scas
xor
negl
pop
pop
and
call
jmp
mov
xor
add
jmp
ret
xlat
data16
mov
jle
jno
js
jle
js
mov
ljmp
inc
sbb
loop
jbe
jge
or
inc
stos
pop
jno
aas
or
repz
stos
into
fs
clc
sub
mov
loopne
mov
mov
aas
lods
outsl
jns
xchg
sbbl
test
or
pop
ja
mov
dec
stos
sub
outsl
ret
cmc
xchg
push
or
jle
out
in
ja
or
mov
cmc
popf
stc
imul
fistpl
mov
xchg
lea
test
lods
out
mov
jg
xchg
ret
sti
es
ja
dec
scas
imul
pandn
jmp
push
fisttps
mov
stos
inc
ret
pop
sub
push
leave
insb
in
and
mov
cmp
add
adc
mov
icebp
outsb
repz
inc
nop
icebp
adc
and
fs
sub
shrl
fstl
aam
sahf
loope
imul
icebp
sbb
sub
in
and
mov
fwait
sahf
sub
push
cmp
mov
adc
ret
jns
dec
push
sub
ljmp
xor
cld
addl
inc
rorb
cli
cmp
loop
pop
shl
test
jg
adc
pop
in
dec
stos
popa
sub
cmp
adc
cmpsl
lcall
and
clc
fs
lds
inc
movsl
lods
mov
cmp
add
mov
inc
xchg
repz
inc
fidivl
lahf
and
or
fs
mov
jae
pop
out
cs
or
cmp
jmp
sbbb
mov
stos
fld
mov
mov
pop
loope
or
mov
xchg
add
cli
sub
mov
insb
into
pop
fisubrl
adc
fisubs
rorl
xchg
add
rcrb
bound
cmp
fdivs
iret
dec
mov
call
iret
push
outsl
push
test
dec
jp
or
jecxz
imul
fwait
out
dec
into
push
mov
xor
cmp
fs
sub
or
jnp
dec
push
xchg
cmp
addl
add
int3
xlat
enter
shll
std
xchg
mov
cld
ja
js
jle
js
jno
dec
lods
addr16
jmp
push
ficomps
popf
insw
xchg
or
cmpsb
aaa
test
inc
bound
jb
cli
popf
or
fadd
shlb
icebp
lret
pop
fmull
aas
movsb
stos
fdivr
test
and
adc
sbb
imul
std
loop
adc
cmp
outsb
out
jbe
jbe
ljmp
cs
or
lret
in
jne
ljmp
sbb
sub
ljmp
jo
xchg
repz
cli
mov
ret
mov
fistl
and
cmp
sub
or
insb
bound
sbb
jno
mov
insl
xchg
dec
dec
frstor
mov
sub
xor
push
mov
clc
in
call
in
push
std
sub
adc
cs
gs
dec
test
enter
xchg
pushf
push
mov
call
xor
sub
xor
fsubrp
pop
scas
rorb
pop
cmp
push
outsb
mov
mov
mov
cltd
sbb
cmc
mov
mov
aam
jg
enter
mov
push
popa
mov
in
mov
jg
pushf
inc
repz
arpl
jno
mov
mov
sub
or
stos
outsl
pop
ss
add
loop
jecxz
clc
cmpl
sub
mov
decl
sub
mov
cmc
pop
in
jmp
data16
xchg
xor
push
psubusb
cmpsl
cld
fadds
sbb
lds
mov
loope
pop
pop
aam
xchg
xchg
fadd
xchg
pop
xchg
fs
ljmp
dec
inc
nop
sub
mov
mul
mov
ljmp
cld
lds
xor
shlb
push
jg
cld
cmp
cmp
push
mov
cs
sub
outsl
pop
add
jge
xor
sbb
ljmp
int3
xchg
sub
out
sbb
lock
pushf
sbb
addr16
imul
inc
mov
inc
shrl
popa
cwtl
xchg
inc
push
mov
bound
xchg
or
enter
adc
pop
repnz
pop
sbb
mov
js
mov
mov
sub
jnp
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
stc
test
imul
js
mov
jge
incb
push
xchg
in
addr16
out
data16
ss
jle
ja
out
or
pop
aad
mov
cmp
mov
cmp
mov
push
mov
sub
inc
xchg
pop
std
nop
push
cmpsl
add
imul
cs
push
sahf
mov
xchg
push
aaa
mov
and
xor
cmpsl
mov
lcall
add
loopne
push
pop
outsl
cmp
imulb
repz
add
sbb
in
mov
fsubrl
inc
jns
pop
in
inc
jmp
ja
int
scas
mov
call
out
mov
jno
call
jae
lods
push
stos
loope
cmpb
pusha
popa
movsb
daa
xchg
js
pop
cmp
insb
fistps
aas
push
and
fiaddl
sub
add
flds
sub
jecxz
cs
inc
xor
rcrl
shr
fidivrs
out
cmp
xor
int3
mov
movb
adc
push
ljmp
pushf
hlt
inc
jae
shr
cmp
scas
push
adc
icebp
loopne
ljmp
xor
daa
test
xor
mov
jb
mov
cmp
icebp
cmp
and
call
adc
fsts
pop
adc
mov
push
dec
or
invd
xchg
pop
pushf
add
rorl
mov
mov
jne
lcall
cmpsb
xor
fwait
xor
dec
jecxz
in
inc
lret
jecxz
add
daa
jecxz
ret
pop
loopne
loopne
incb
faddl
cmc
mov
lret
xchg
movsl
sbb
pop
xchg
je
lock
sub
out
mov
ficoml
mov
mov
ljmp
out
lods
and
insl
inc
xor
cli
loopne
and
push
adc
in
and
fistl
push
inc
adc
stc
rorl
xorl
xchg
adc
test
fisttps
roll
arpl
in
push
ret
or
xchg
shll
orb
je
rcrl
test
fstpl
and
xchg
mov
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
push
jo
and
jp
js
jle
js
and
mov
imul
loopne
insl
sub
sbb
fsub
imul
aam
xchg
test
mov
inc
push
and
std
mov
movsl
cmpsb
imul
imul
es
repnz
dec
dec
aaa
call
cmpl
adc
mov
in
cmpsl
jle
dec
test
sbb
jno
xlat
cmpsl
iret
sbbl
stos
lcall
xchg
jne
insl
pushf
int3
mov
mov
mov
add
cmp
mov
fidivs
xchg
push
push
mov
repnz
cltd
loopne
jle
popa
fisubs
lock
inc
pop
push
jb
or
stc
jno
pop
mov
fdivs
aam
xchg
in
rcr
add
inc
test
push
cmpsb
rorl
push
cmp
or
pop
adc
popf
jecxz
add
and
push
mov
mov
lea
pop
daa
jle
sbb
scas
inc
cwtl
mov
cmp
inc
nop
mov
mov
pushf
bound
pop
cwtl
and
push
xchg
cwtl
dec
adc
stos
xchg
pop
popa
out
and
cmp
sti
hlt
testl
jecxz
imulb
cmp
adc
pop
ja
mov
dec
push
imull
dec
outsb
adc
or
sbb
mov
or
and
mov
xchg
or
sub
fsubrs
sahf
inc
pushf
mov
test
rolb
test
imul
inc
fmuls
mov
cmc
je
ss
push
mov
dec
lret
pop
shll
jnp
fstps
mov
push
lret
jge
or
sub
xchg
ja
shlb
pushf
jo
jge
scas
mov
xorb
pop
pop
pushf
mov
jle
in
hlt
sahf
adc
pop
cmpsb
lahf
xor
pop
int
adc
fsub
mov
cmpsb
test
dec
in
sub
xchg
pop
cmc
inc
test
js
dec
pusha
mov
lea
shll
fcoms
mov
wrmsr
insb
mov
aas
stc
leave
or
ja
xor
pop
std
add
inc
mov
mov
out
mov
jns
orb
pop
in
xchg
pop
cwtl
jb
add
addl
add
cld
imul
mov
in
js
cmp
xchg
das
sbb
ret
sbb
lea
jae
mov
test
xor
lods
movsb
testb
pop
jmp
mov
jb
cmp
repnz
addr16
dec
mov
rolb
les
and
xchg
push
mov
aas
movb
fs
dec
mov
dec
xchg
inc
jp
rolb
ja
das
inc
cmp
test
dec
test
xor
movsb
add
cmp
loope
stc
push
fwait
add
sub
gs
idivl
jb
xorl
dec
fstps
cltd
sbb
ret
pop
jge
mov
shlb
or
fcompl
dec
xlat
add
jnp
add
mov
cmp
sub
push
movsl
imul
xchg
adc
dec
adc
pop
cwtl
filds
loopne
pop
or
sbb
in
and
test
movsl
in
xchg
xor
push
xchg
or
pop
xor
daa
mov
aad
mov
pop
jmp
cmp
es
lock
and
bound
in
mov
sbb
ds
mov
aaa
daa
and
mov
xchg
and
scas
fnstsw
es
ret
leave
fimull
fistps
lods
push
sub
imul
test
sbb
adc
sub
imul
sub
mov
dec
sbb
or
call
fbstp
push
aad
mov
sub
mov
and
and
fistpl
pop
dec
out
sarl
stc
and
outsb
mov
pop
pushf
adc
clc
jns
in
jecxz
orb
xor
sarl
xchg
cmp
mov
mov
je
rorl
pushf
cwtl
mov
pop
insb
shlb
cmp
stos
mov
lahf
jnp
test
add
fs
aaa
pop
push
cwtl
scas
jo
mov
out
pushf
push
xchg
hlt
and
int3
std
testl
lods
jnp
jae
jmp
sbb
ds
push
inc
push
hlt
aam
scas
dec
cmp
scas
xchg
sub
or
xchg
pop
push
cmp
shl
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
test
sub
js
jle
js
add
pop
xor
dec
test
pop
xor
loope
jge
lods
cs
stos
sbb
mov
test
pop
push
xchg
push
das
fcoml
mov
fucomip
xor
sub
mov
push
mov
pusha
mov
dec
rcll
orb
and
inc
fsts
dec
movsb
jbe
ds
pop
adc
push
cmp
cmpsl
push
pusha
mov
sub
mov
stos
into
pop
dec
add
lcall
ljmp
or
pop
ljmp
mov
xor
cmp
fcoml
in
fcompl
push
mov
adc
cltd
lahf
mov
imul
push
and
mov
lods
popf
mov
xor
rolb
test
xchg
lods
xor
dec
mov
xor
mov
sbb
fldl
sub
and
push
testb
and
pop
rcl
das
mov
into
popf
lahf
loope
fdivr
mov
addl
adc
push
inc
cld
incl
lcall
popf
mov
popa
aad
jbe
sub
xchg
inc
sub
inc
dec
je
out
sbb
loope
std
adc
mov
pop
std
out
lahf
lcall
loope
mov
mov
pop
mov
ss
dec
leave
jnp
or
fadds
xlat
mov
pusha
in
call
popf
mov
bound
movsl
mov
xor
mov
pop
push
or
jne
lret
out
div
addr16
jnp
xchg
aas
cmp
sbb
jge
ljmp
out
dec
jno
dec
and
pop
jle
mov
dec
sub
xor
sarb
xor
test
je
mov
popf
movsl
mov
jae
js
push
mov
stos
or
xchg
lea
mov
mov
push
gs
sbb
push
and
incl
pop
jnp
mov
das
stos
xchg
ret
test
in
mov
mov
ss
sahf
test
les
outsl
inc
test
scas
jle
adc
pop
rol
jno
xchg
repnz
loop
bound
mov
push
in
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
jmp
jg
in
js
insl
arpl
cmp
stc
push
sbb
fwait
mov
rorl
es
imul
xor
pop
mov
lock
push
mov
push
sub
sub
stc
adcb
test
jecxz
or
cmp
lods
mov
insl
mov
mov
cltd
divl
aaa
push
cwtl
cmp
or
and
lcall
cmp
lods
pop
test
push
dec
aam
inc
mov
mov
push
sbb
sbb
pop
dec
xor
sub
mov
dec
test
fcomip
rcr
addr16
or
mov
aas
loop
jp
cmp
inc
xor
or
popf
leave
aaa
or
jle
or
fdivs
in
push
mov
dec
repz
jbe
push
xor
negl
repnz
dec
cmp
sarb
jns
shll
xor
scas
outsl
fcmovne
pusha
orl
dec
sbbl
adc
cmp
xlat
pop
mov
in
cmpsb
mov
bts
adcl
pop
fcmovne
cmc
inc
pop
jae
sbb
jg
inc
rorb
pop
test
sbb
mov
mov
aas
mov
cmp
inc
mov
pop
cli
stos
adc
aad
mov
test
insl
jnp
jle
and
cmpsl
push
and
push
jns
adc
cmp
inc
and
stos
ret
cmp
sub
arpl
ret
pushf
shll
fistps
shll
xor
divb
jns
sub
mov
das
dec
xchg
jbe
mov
mov
out
sub
pushf
iret
sahf
push
jg
sbb
fwait
add
xor
sti
shr
jp
dec
inc
push
and
leave
and
gs
imul
sti
xchg
push
orb
cmp
shll
int
jmp
in
lcall
pop
fwait
mov
cli
jecxz
lock
mov
pop
xor
aaa
add
pop
adc
and
pop
sub
in
dec
int3
jle
push
inc
dec
popa
ljmp
mov
xchg
xor
scas
cmpb
push
xor
pop
xchg
xor
lret
int3
and
xlat
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
outsl
sub
add
jg
in
js
gs
es
jmp
push
repz
mov
ss
cmp
test
sbb
fcoms
sbb
dec
pop
or
test
call
in
ja
jae
cmp
stc
pop
pusha
xchg
push
cmp
xchg
negl
cli
mov
push
popa
loop
mov
xchg
mov
dec
in
xchg
sbb
out
push
stos
and
sbb
dec
je
cld
dec
cld
jge
or
mov
insl
jns
sbb
mov
lcall
adc
in
int
jmp
push
pop
inc
add
add
rcl
gs
std
cmc
sti
adc
movsb
jmp
jmp
repz
xchg
lea
insb
mov
push
repnz
mov
test
mov
sbb
fadd
push
and
push
fidivrs
inc
pushf
xchg
pop
mov
mov
add
bound
aad
pop
jg,pn
xchg
xchg
roll
rolb
fisubrl
and
mov
in
add
vpaddusb
inc
loopne
arpl
shll
pop
mov
gs
push
jno
lret
dec
jne
call
jnp
xchg
mov
movsl
mov
push
rcll
dec
inc
mov
icebp
xorb
sbb
xchg
jns
push
leave
jp
sahf
jle
test
mov
jle
jg
or
push
test
iret
adc
inc
pop
das
cs
jmp
lds
insl
sbbb
pop
mov
cltd
dec
and
and
enter
inc
xor
add
icebp
sti
jb
scas
xchg
or
loop
inc
call
std
pop
sbb
dec
or
push
cmc
pop
shll
xchg
add
push
inc
pop
orb
into
pop
aaa
lds
adc
pop
loopne
xor
or
lock
xchg
inc
push
adc
mov
push
fnstsw
aad
leave
or
adc
mov
ja
add
loopne
jo
loop
punpckhbw
pop
dec
jnp
pop
adc
dec
mov
xor
rclb
test
adc
xchg
shrb
and
mov
xchg
arpl
push
xor
test
imul
mov
jmp
rol
leave
rcr
rcr
enter
iret
mov
out
push
jg
in
js
add
or
adc
push
mov
lcall
out
cmp
les
xchg
jne
aam
lods
cli
cmp
insl
sti
test
rolb
pop
xchg
xor
fcom
and
in
cmp
mov
in
test
or
cmp
movsl
daa
test
repz
enter
xchg
lahf
xchg
jmp
orl
push
xor
push
sbb
jmp
mov
inc
scas
enter
loopne
or
jp
xchg
test
lret
push
cltd
lods
dec
and
add
repnz
xchg
sub
loop
hlt
or
fadds
and
dec
aas
call
push
ss
dec
cmpl
pusha
test
outsb
mov
scas
aaa
lret
fisubl
lcall
jmp
or
sbb
push
jmp
and
fwait
mov
push
outsl
or
pop
imul
inc
jo
jle
xor
cmpsl
jb
add
xchg
repnz
sub
pop
lock
fdivrl
xchg
push
shl
push
xchg
sub
mov
int
movsb
xchg
lss
adc
inc
sarb
inc
sbb
in
xor
test
jmp
inc
cmp
and
fisubs
mov
les
mov
js
push
mov
stos
leave
mov
sub
mov
lods
shll
add
and
test
mov
shlb
loope
dec
mov
inc
pop
scas
pop
cmp
rcr
xor
stos
jecxz
pop
and
shll
inc
subl
cld
nop
movsl
test
sbb
cmpsl
pop
iret
lcall
mov
mov
lret
out
or
mov
int3
adc
xor
rcl
fdivl
das
test
adc
or
insl
xor
mov
adc
les
sub
adc
pop
scas
out
lods
mov
jge
aad
inc
lds
pop
aaa
lahf
fsts
and
test
stc
push
mov
cltd
xor
jne
arpl
shll
dec
push
xor
jmp
les
int
aam
mov
jb
mov
in
js
pop
daa
push
movl
in
jmp
test
mov
popf
lods
pop
scas
push
je
mov
cwtl
in
sbb
repnz
add
inc
ret
dec
fmuls
xchg
mov
adc
jo
gs
mov
push
or
add
mov
xchg
lock
fstps
cmp
popa
std
inc
sbb
test
cwtl
in
push
mov
push
mov
and
and
or
xchg
mov
and
scas
dec
push
mov
cmc
sbb
jp
inc
sbbb
adc
jbe
jbe
aas
scas
lds
jmp
dec
les
adc
stos
shlb
mov
aam
mov
mov
cmc
jne
sub
movsb
xchg
sbb
lock
shl
jae
test
jecxz
cld
inc
push
shlb
fdivrp
shll
jecxz
sbb
loopne
dec
mov
pop
ss
roll
in
xchg
aad
mov
lds
jb
cwtl
aas
push
mov
push
incb
adc
lret
sub
rcrl
adc
dec
mov
push
fst
mov
push
lea
lods
inc
lret
mov
xor
ror
xchg
lcall
shr
imul
test
mov
repnz
ret
enter
cld
das
bnd
push
fdivp
shll
imul
pop
push
cmp
mov
xchg
outsb
testl
sti
push
jg
adc
cmp
or
inc
iret
loope
xchg
xor
cmpsl
xchg
xchg
xchg
push
icebp
jo
loope
and
xor
in
pop
inc
sbb
mov
cs
sub
gs
hlt
test
sbb
mov
xchg
data16
call
pusha
xchg
pop
lret
mov
push
inc
jg
push
sub
in
inc
outsl
sbb
scas
addl
mov
sub
or
cld
and
sbbb
ret
mov
xchg
sbb
fsts
mov
test
pop
data16
add
sbb
shlb
mov
scas
das
push
lods
xchg
add
lret
mov
xchg
mov
into
addl
test
jo
push
add
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
aas
rorl
js
jle
js
lahf
shr
ret
test
testl
js
in
cmp
mov
jmp
pop
test
jecxz
je
and
mov
in
fs
dec
mov
pop
push
testl
movsb
frstor
xor
daa
push
enter
cmp
subl
sub
jns
int3
add
negb
or
addr16
mov
and
mov
or
inc
or
xor
cmp
mov
inc
push
mov
push
movsl
shrb
fstpl
pop
movsl
aaa
dec
cmpb
cwtl
nop
dec
pop
xchg
out
das
jnp
jg
xchg
cmp
pop
cld
sarl
jae
call
xchg
int
xchg
stos
cwtl
jl
push
push
pop
push
jb
add
jmp
aad
mov
gs
rcr
jmp
sahf
mov
jp
clc
sub
adc
inc
inc
test
loop
aad
and
inc
das
sub
in
iret
inc
cmp
dec
scas
sbb
ja
xchg
xchg
pop
mov
aas
mov
push
lock
sub
xchg
mov
push
andb
pusha
mov
pop
pop
adc
cmp
dec
icebp
out
xchg
jne
xor
nop
out
inc
inc
and
dec
fcompl
sub
pop
popa
data16
xchg
cmp
sub
and
sub
xchg
pop
push
lret
mov
ss
outsl
fidivrs
icebp
jbe
add
mov
mov
das
daa
mov
js
xchg
mov
pop
mov
lds
jb
test
scas
test
inc
inc
test
test
bound
enter
in
aad
popf
sbb
ljmp
add
out
xchg
adc
mov
pop
rolb
adc
dec
sbb
std
mov
mov
pop
cmp
lret
mov
fnstenv
sarb
jge
mov
inc
push
pop
push
sbb
lock
add
jo
adc
xor
loope
je
fcoms
pop
mov
xchg
push
mov
push
xchg
mov
lods
iret
and
testl
data16
scas
xlat
mov
jmp
lret
ret
vpand
ret
cmpb
and
in
js
das
sbb
and
aam
ja
push
add
dec
inc
aaa
add
cmpsb
push
xor
fwait
add
test
lds
in
cmp
sub
in
sbb
lahf
adc
sub
lahf
push
dec
inc
push
mov
mov
enter
mov
mov
mov
out
scas
mov
xor
hlt
xchg
mov
inc
lods
in
push
aad
mov
push
mov
or
mov
test
fs
jl
insb
inc
cmp
dec
add
lahf
test
dec
inc
inc
xor
imull
ja
es
cmp
mov
or
in
out
lock
xlat
or
arpl
fadds
push
sub
icebp
push
push
mov
mov
add
ror
enter
jle
pop
cmpsl
mov
mov
cmp
jmp
jo
nop
cmp
sub
fidivrl
vmread
xchg
push
sub
js
mov
push
dec
out
lret
insl
jno
aaa
add
vunpckhps
pop
push
push
lds
sub
mov
in
mov
mov
daa
roll
xor
shr
cmp
fcomp
xor
scas
pushf
jp
xor
das
int
movsl
xchg
xchg
xchg
inc
scas
popf
adc
shl
sbb
mov
xor
int3
je
cld
stos
xchg
xor
push
lcall
inc
daa
xor
in
jge
insb
pop
lahf
pop
mov
cmpsl
cmp
or
dec
and
loop
cmpsb
push
addr16
pop
sbb
aam
ljmp
int3
pop
test
lret
or
fdivrs
push
bound
jae
mull
lea
mov
xchg
cmp
cmp
fdivrs
sub
adc
or
mov
sti
cmp
xchg
jle
in
lock
movsw
xor
xchg
mov
and
mov
xchg
mov
rcll
jne
arpl
mov
lret
inc
addr16
imul
push
mov
fstl
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
jne
sbb
js
jle
js
out
out
jl
insl
dec
xor
sqrtps
bswap
push
dec
mov
loope
inc
js
sub
ror
push
dec
lret
arpl
push
sbb
pusha
aad
mov
push
insb
xchg
ret
aas
sbb
les
pop
popa
add
repnz
data16
push
and
jg
mov
aad
jp
imul
lret
das
outsb
pop
push
mov
aaa
jecxz
repz
sti
jle
jl
inc
daa
xor
sbb
mov
sub
popl
sub
in
and
aas
push
adc
xchg
fwait
popa
mov
jmp
mov
and
jecxz
jnp
jecxz
jle
testb
lock
pop
gs
in
outsb
dec
lcall
lret
stc
stos
or
sbb
lahf
cmp
and
push
sbb
inc
into
push
and
test
adc
jne
pop
or
push
cmc
add
mov
sub
and
adc
mov
inc
pop
mov
outsb
mov
inc
scas
mov
mov
leave
push
out
cmp
lahf
rorb
out
shll
push
aam
push
jge
mov
jo
stos
pop
cmp
xor
clc
hlt
push
mov
sbb
cmp
add
mov
inc
sbb
cmpsb
lcall
inc
sbb
int3
inc
cs
movsl
jne
inc
pop
inc
mov
mov
repz
cwtl
out
sbb
dec
pushl
jge
std
pop
into
scas
jne
or
rol
jl
inc
add
mov
sarl
stos
mov
xor
aam
add
fiaddl
or
lahf
imul
les
insl
pushf
jae
add
in
fidivrs
imul
les
xchg
sub
das
stos
test
dec
ja
jbe
imul
jle
rcl
imul
orb
sbb
sub
inc
dec
popa
cltd
aam
cmpsb
sbb
mov
out
mull
out
lcall
lcall
shrl
mov
xor
add
movsb
rcll
pushl
or
cmpl
push
xor
push
je
repz
push
mov
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
sub
jg
in
js
pop
lods
outsb
jmp
sub
and
test
stos
shll
mov
mov
jl
and
or
test
adc
mov
add
cltd
mov
insb
inc
pop
push
adc
out
and
rclb
pop
in
sbb
mov
sbb
cmovnp
pop
stos
jmp
leave
sar
dec
sbb
mov
insb
stos
mov
xorb
cmp
pop
cmpsb
das
js
mov
les
popa
pop
mov
pop
jae
and
xchg
jb
shll
orl
jo
pop
pop
sbb
mov
or
rcrl
iret
dec
mov
xchg
out
test
ljmp
stos
enter
rcr
jae
cmp
ret
push
sbb
insl
call
icebp
lret
mov
in
sarb
mov
and
stos
or
jbe
mov
sahf
dec
fidivl
inc
inc
sbb
lret
push
xchg
jo
xchg
imul
mov
or
mov
sbb
inc
sbb
repnz
sbb
fidivs
mov
adc
icebp
cwtl
or
cmp
inc
fcmovbe
xchg
clc
cmp
lret
xchg
pop
jmp
int3
xchg
and
sbb
js
mov
dec
xchg
mov
imul
jge
fmull
jl
xor
xchg
movsl
pop
cmp
cmc
and
movsb
mov
add
inc
mov
mov
push
jmp
pop
jo
loope
and
jo
frstor
or
out
dec
mov
lahf
xchg
jecxz
mov
jo
mov
dec
mov
add
dec
lcall
and
ret
dec
inc
cmp
andl
or
jg
hlt
shrb
cs
outsb
fs
cltd
cmp
loope
cli
imul
and
jns
int
xchg
adc
das
push
mov
adc
cs
push
movsl
push
lods
mov
mov
out
pop
push
sbb
push
mov
repnz
aam
fnstenv
mov
addr16
pop
mov
lods
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
sarb
stos
insl
adc
xchg
jle
js
xchg
lods
or
data16
jae
fsubp
jecxz
shl
rcl
cmpsl
test
mov
or
aam
jo
push
dec
xchg
sub
aam
dec
jne
sbb
pop
xchg
loope
xchg
stos
inc
ret
lret
cmp
insb
stos
and
test
lods
call
stos
iret
sahf
cs
fwait
jno
cmp
mov
repz
lcall
fdivs
leave
pop
jge
lods
and
cmp
js
pop
mov
fwait
inc
jbe
mov
xor
xorl
jmp
ficompl
pushf
out
jecxz
add
jle
andb
sbb
mov
jl
fisubl
mov
or
inc
cli
outsl
push
insl
sbb
pop
inc
jmp
push
push
mov
loopne
mov
push
mov
dec
xor
push
in
and
dec
mov
fucomip
lahf
daa
fdivrl
mov
cltd
mov
out
xchg
rcll
mov
xor
imul
loope
adc
cmp
jp
cmp
mov
iret
jg
jge
aas
out
leave
jmp
or
test
gs
popf
cli
call
imul
pop
pop
mov
cmp
pop
xchg
sub
icebp
mov
mov
dec
fldl
add
cmc
xchg
push
dec
data16
aad
int
or
mov
adc
test
mov
jecxz
dec
das
adc
aaa
add
jp
popf
jecxz
xchg
daa
imul
cwtl
fdivrl
dec
jmp
mov
xchg
mov
loope
pop
mov
popf
sti
ja
jecxz
and
push
call
fcomps
adcb
add
arpl
mov
push
loope
mov
jns
popf
xchg
insl
lock
xchg
add
dec
sbb
cmc
jg
repz
lahf
jne
mov
addl
xchg
in
stos
xchg
xchg
mov
or
sbb
cmpsl
cs
mov
add
mov
jl
loopne
cltd
add
inc
dec
insb
insl
fcompl
outsb
push
lock
ficomps
mov
gs
add
rcll
imul
rorb
mov
xor
pop
xor
lea
pop
mov
and
sbb
icebp
push
cmpsl
dec
out
lods
jg
mov
fistl
mov
sub
cmpsb
sub
xchg
scas
ftst
loopne
pop
ret
or
outsb
xchg
mov
cmc
cmpsl
inc
add
adc
add
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
dec
stos
orb
js
jbe
mov
fdivl
xor
mov
movsb
imul
jp
inc
jb
mov
in
xor
inc
loope
jb
shrb
mov
int3
cmpsl
stos
repnz
ss
lret
in
xchg
xor
mov
daa
xlat
push
mov
sub
dec
int
ja
jb
aam
mov
rcl
loopne
pop
push
dec
sub
push
mov
or
xor
cli
cmpsb
ret
mov
mov
or
sbb
xchg
xor
lahf
enter
adc
push
fsubs
mov
xor
sub
jns
xor
mov
ret
cmp
mov
fs
loop
ret
std
jg
loop
fstpt
jae
orl
cmpsb
mov
daa
dec
popa
adc
out
lret
mov
ret
push
lahf
cmpl
in
sbb
inc
pop
jmp
dec
mov
adc
ds
cld
aas
in
adc
adc
sub
mov
cmpsl
or
fldenv
xor
mov
pop
loope
sub
insl
xor
cli
sub
std
xor
sbb
fisubrs
jecxz
jle
jmp
ret
pop
sarl
scas
pop
mov
jne
nop
mov
cmc
sbb
fwait
mov
sbb
adc
out
lret
daa
out
into
fs
nop
mov
lret
adc
xchg
aad
mov
andb
in
mov
pop
xlat
inc
sub
test
insl
xchg
cwtl
dec
imul
mov
and
jle
sub
push
nop
xor
outsb
inc
fwait
cmp
push
or
icebp
roll
xlat
xor
daa
inc
inc
and
xlat
xchg
sbb
dec
stos
insl
push
jno
jecxz
inc
adc
lahf
stc
lods
push
jecxz
push
mov
pop
adc
jnp
push
push
inc
clc
mov
and
iret
es
push
add
add
fcompl
lret
xor
mov
xorb
xlat
mov
popf
push
jecxz
int
mov
add
pop
stos
inc
mov
outsb
xchg
dec
push
jbe
push
dec
cmp
mov
out
mov
inc
dec
or
mov
ds
les
cli
inc
push
push
xchg
adc
popa
dec
xchg
in
jb
cmp
rclb
mov
jecxz
cld
mov
dec
mov
into
xor
orb
rcrl
inc
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
adc
fisubs
sbb
xchg
jle
js
in
icebp
cltd
cmp
fimuls
jns
push
push
mov
cmp
jmp
jl
loop
mov
and
call
loop
cmc
andb
loop
ds
out
fildl
ljmp
push
hlt
lcall
and
pop
xor
or
sbb
call
rcrb
and
sti
mov
sbb
arpl
jo
aas
mov
mov
mov
fimull
mov
fs
test
aad
mov
rcll
xor
adc
pop
jo,pt
addr16
mov
stc
popf
push
xchg
mov
jno
les
mov
int3
lock
jecxz
les
repz
fcom
sub
aas
iret
outsl
jnp
xchg
fidivl
inc
and
arpl
or
cmp
mov
mov
sbb
jmp
push
nop
iret
insl
jne
hlt
push
cmpsl
mov
push
push
pop
jmp
or
hlt
mov
test
out
mov
inc
xor
mov
jno
pop
adc
cltd
jecxz
mov
sub
push
xlat
mov
add
mov
popa
movsb
sub
xor
xchg
pop
clc
xchg
mov
cmp
pop
dec
clc
in
jmp
dec
repnz
shlb
and
aas
outsb
push
cmp
insb
xchg
shll
dec
pop
adc
sbb
jmp
ret
daa
inc
cli
or
loope
fmul
andb
clc
inc
stos
add
lahf
sahf
sti
sbb
pop
je
xor
dec
popf
stc
dec
out
cmpsl
cmp
sbb
mov
rcrb
adc
ss
std
mov
out
inc
xchg
jmp
pop
popf
pop
jno
es
sbb
pop
outsl
mov
sarb
adc
sub
jle
ljmp
add
cmp
mov
and
popf
in
je
mov
xlat
nop
push
push
repz
push
sahf
pop
push
mov
js
outsl
jae
leave
jecxz
into
aad
aas
mov
cmp
in
test
mov
and
pop
test
pop
notb
inc
in
mov
clc
addr16
jg
sub
mov
and
pop
mov
icebp
pop
xorb
in
cs
sub
sub
or
stc
inc
stc
or
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
and
xchg
jle
js
pushf
and
fldenv
out
xchg
int
push
sbb
lret
test
sar
lock
jle
ja
faddp
mov
xchg
js
outsl
inc
subl
dec
add
xchg
ss
clc
inc
cmp
or
fstpl
xchg
addl
add
push
mov
cld
imul
repnz
jl
addb
sub
inc
cwtl
lret
mov
cli
dec
jge
mov
adc
loope
enter
inc
popa
mov
ds
add
sub
add
pop
or
and
xchg
sbb
cli
xchg
mov
cltd
xlat
pop
pop
and
and
push
rcll
or
in
push
push
or
aaa
xor
out
xchg
mov
push
dec
fdivrl
sbb
ror
jecxz
outsb
aas
sub
jbe
pushf
mov
and
lret
cmp
cmpsl
cmp
pop
mov
sahf
sti
arpl
popf
jp
mov
test
pop
daa
sub
and
orl
mov
mov
jp
xlat
inc
cmpsl
fiadds
dec
addr16
sub
fadds
subl
testw
popf
mov
test
or
push
mov
mov
sub
testb
mov
cmpb
inc
lods
mov
ret
clc
mov
mov
ja
in
mov
imul
test
adc
lods
dec
notl
call
inc
jnp
or
and
jo
mull
ja
sub
dec
insl
jmp
adc
movsb
jae
mulb
stos
dec
jg
out
jnp
mov
inc
cmp
cmpsl
aad
mov
or
add
cmp
iret
adc
ljmp
sbb
testl
loop
jle
mov
daa
test
lea
ljmp
mov
cmp
pushf
adc
dec
scas
shlb
dec
cltd
fsub
push
jmp
gs
rcl
pop
or
cmp
push
lcall
scas
pmaxsw
shl
adc
sbb
jno
fcmovbe
aas
push
sub
inc
pop
jae
pop
cmpsl
dec
popf
cmpl
or
mov
xchg
lahf
fnstsw
pop
sub
jmp
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
call
jg
xchg
jle
js
leave
cld
lods
mov
clc
cmp
ja
repz
cwtl
cmpsl
pop
mulb
imul
cltd
lret
into
jns
outsb
inc
xor
out
inc
inc
sub
lahf
inc
scas
inc
loope
mov
es
shll
adc
and
loop
and
out
xor
sbb
mov
inc
enter
pushf
stc
inc
sbb
cs
cwtl
xor
in
sub
mov
test
pop
ja
lds
mov
jnp
xor
inc
jge
lahf
push
out
pop
leave
add
inc
push
mov
iret
popf
out
or
imul
hlt
dec
cmp
mov
push
pusha
subb
mov
ss
mov
std
nop
adc
push
mov
lods
ljmp
test
pop
xor
xchg
add
rcrl
mov
test
sbb
adc
movsl
or
divl
add
imul
push
icebp
sub
repz
inc
jns
out
std
loope
pusha
iret
hlt
aas
hlt
jecxz
sub
test
cmp
aad
xchg
shrl
repnz
std
lret
out
dec
hlt
lock
mov
cli
notl
popl
sti
cmp
lret
fcoms
or
cltd
pop
mov
hlt
sub
js
shl
jb
insb
ljmp
test
in
jmp
push
xchg
jne
mov
mov
cmp
into
add
mov
cmpl
xchg
push
jg
fidivrs
shr
pop
mov
mov
es
int3
test
cwtl
xchg
inc
mov
cmpsl
lcall
lahf
loopne
sub
sub
pop
imul
push
xor
cld
lds
addr16
ljmp
sbb
push
aam
popf
cmp
jmp
inc
js
jle
fnstsw
cld
mov
jle
sub
hlt
dec
jge
mov
push
xchg
clc
imul
pop
push
test
call
mov
lret
cli
lcall
mov
popf
cld
popf
inc
aas
pop
sbb
jo
and
repz
and
ret
pop
in
call
adc
pop
fbld
jae
das
xchg
add
gs
pusha
movsl
mov
mov
fimuls
shlb
out
rclb
test
int3
into
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
fisubl
xorb
js
jle
js
sahf
mov
and
or
mov
mov
push
xchg
daa
stos
push
pop
fsts
adc
shlb
std
adc
pushl
mov
dec
xor
stos
dec
arpl
aas
int
sub
shll
xchg
inc
jge
push
pop
pop
adcl
adc
ror
daa
adc
mov
jnp
aas
xchg
sbb
xchg
push
je
push
or
jnp
rolb
sub
jbe
mov
std
test
mov
addr16
inc
icebp
subb
and
mov
dec
clc
shlb
std
xchg
xor
sbb
fistl
jae
xor
jbe
mov
repnz
scas
mov
mov
xchg
out
push
mov
jbe
movsb
mov
inc
jp
or
testb
pop
aam
adc
xor
xorb
xchg
jo
stos
fsts
xchg
and
add
pop
jns
mov
jge
lods
andb
mov
add
sbb
fildl
pop
mov
inc
imul
jmp
add
fcompl
out
clc
mov
in
cmp
gs
mov
fwait
dec
aaa
xor
adc
leave
dec
and
ret
push
dec
fwait
loop
pop
aaa
add
iret
fldl
pusha
lea
andb
movb
cmpsl
or
xor
jmp
lcall
test
cli
cmp
jb
pop
jl
or
sub
xor
into
or
inc
adc
les
test
ret
and
fsub
test
xchg
ja
out
sub
mov
xor
sub
loop
gs
std
xchg
inc
in
rcrl
es
push
arpl
stos
pop
push
mov
jo
pop
shrb
adc
popl
outsl
push
push
jae
es
aam
xor
mov
call
xchg
xor
inc
nop
mov
lret
int
fldl
into
cmp
jnp
in
cmp
push
shll
cwtl
push
mov
imul
mov
enter
sub
jl
mov
dec
mov
sbb
mov
pop
arpl
out
or
add
add
ret
fcmovbe
fcmovne
mov
js
mov
and
xchg
jle
js
out
ror
xchg
outsl
mov
sub
sub
loop
in
ljmp
lea
xor
inc
cs
mov
push
sti
lods
addr16
or
jecxz
cmc
jmp
sub
jae
pop
xchg
outsl
dec
sbb
mov
pavgb
fs
insl
adc
lock
das
inc
jmp
daa
aam
xchg
ficompl
test
dec
arpl
js
adc
or
test
mov
push
pop
sub
xlat
stos
fdivrp
movsb
daa
popf
lods
cwtl
fistpll
fimuls
push
mov
xchg
inc
and
ljmp
pop
call
lret
icebp
leave
mov
fstps
addb
push
cmp
in
mov
ret
add
lock
jnp
jmp
xor
ret
rcrl
jae
and
mov
jno
and
rcll
mov
adc
hlt
mov
cmpsb
mov
push
lar
fdivs
jns
push
inc
add
fsubrs
xchg
push
inc
mov
out
clc
xor
xor
xchg
dec
cs
xchg
jbe
inc
xchg
cwtl
dec
scas
dec
push
sub
sbb
das
jl
andl
lock
lock
jbe
pop
jg
add
jno
push
jl
imul
mov
xor
dec
push
fs
mov
nop
mov
cmp
cmp
sbb
inc
or
cmp
hlt
dec
mov
fiaddl
stos
dec
nop
push
das
xor
and
adc
jp
ret
divb
pop
cld
insb
ss
adc
dec
pop
shlb
hlt
enter
push
or
lahf
mov
hlt
fistps
jnp
scas
outsl
pop
xor
xchg
inc
xchg
cmp
jmp
mov
add
fsubr
sub
mov
aaa
icebp
test
and
inc
cmp
xor
lock
fcmove
in
repnz
dec
inc
lret
sub
jg
fistpll
ljmp
pop
mov
sub
jne
add
in
enter
xchg
mov
out
cmc
cmpsb
imul
into
pop
xchg
jmp
repz
pop
orb
and
rol
pusha
adc
bswap
push
cltd
add
and
mov
xchg
or
jnp
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
dec
stos
out
mov
xor
xor
xor
fwait
sub
movsl
xchg
sbb
and
mov
add
xor
mov
xlat
jae
mov
fcomps
fdivs
cmpsl
add
sbb
xchg
les
jmp
mov
shrl
aad
sub
sub
sbb
sbb
or
xchg
or
lret
sar
adcl
and
std
mov
outsl
cmp
xchg
dec
adc
mov
inc
imul
mov
jecxz
jae
dec
fdivrs
inc
and
data16
enter
sub
pushf
stc
or
cmp
ds
daa
loopne
bound
lds
cltd
das
mov
hlt
cwtl
inc
dec
and
outsl
xchg
xor
ljmp
inc
ret
aas
loop
xchg
xchg
cmp
shll
pop
xor
pusha
xchg
or
mov
jae
xor
mov
mov
aad
lcall
mov
les
nop
xor
lret
cmp
mov
dec
and
push
dec
or
mov
add
les
inc
pop
push
add
dec
adc
fidivs
sbb
mov
insl
jns
test
out
lret
push
sub
mov
push
mov
pop
fsqrt
inc
lret
inc
aaa
divl
and
inc
pop
jmp
ljmp
mov
sub
cld
popf
aas
std
lods
or
push
outsl
dec
mov
fsub
ret
in
lret
dec
adc
xchg
insb
scas
testl
fimuls
push
mov
or
fwait
std
add
cwtl
daa
mov
xlat
out
push
sbb
push
sti
lahf
fwait
decl
add
icebp
cmp
test
cmc
sahf
push
pop
cmp
scas
sub
pop
testl
lcall
dec
add
stos
leave
movsl
cmp
jns
xor
fwait
lock
mov
xchg
adcb
xchg
jne
push
mov
mov
mov
aam
movsb
arpl
sbb
inc
push
test
jp
pop
dec
jmp
rcrl
mov
movsb
in
sub
in
pop
pop
outsb
rol
fcomps
inc
mov
push
sub
jae
mov
pop
ljmp
push
cmp
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
cmp
xchg
jle
js
stc
and
dec
dec
fnstcw
adc
in
xor
or
je
jle
mov
ret
xchg
jno
or
daa
and
jae
mov
hlt
dec
xchg
stos
arpl
repnz
movsl
fs
ja
push
rolb
sub
inc
xor
jmp
rsqrtps
inc
and
aaa
add
jbe
inc
int
clc
pop
mov
pop
or
inc
inc
xor
enter
stos
xchg
data16
xor
push
mov
lret
adc
sub
and
xchg
cs
call
das
andb
pushf
cmpb
jl
jns
popa
in
pop
aad
push
jo
xchg
test
movsb
and
ror
adc
aam
xchg
cmpb
rorb
mov
sbb
or
lock
out
jbe
push
fwait
push
mov
sarl
fiaddl
mov
add
cmpsl
nop
sub
pop
xchg
sub
les
pop
dec
add
xchg
push
pop
addr16
repnz
mov
mov
lods
pop
movsl
push
shrb
gs
mov
xor
xchg
stos
shll
jns
bound
add
dec
bnd
xor
jae
push
mov
loope
sbb
or
iret
and
cmpsb
inc
int
sbbb
or
xorb
mov
cwtl
add
pop
decb
mov
hlt
jmp
cmp
mov
out
mov
roll
jbe
jno
or
mov
pop
mov
pop
xorl
in
add
adc
fisubrl
sub
push
mov
sti
mov
inc
mov
insl
dec
sbb
pop
xchg
int
inc
movsl
xor
test
xor
pop
test
adc
cld
mov
scas
jmp
sub
add
rol
xor
out
loope
insl
bound
mov
mov
pop
sbbb
in
and
xchg
jl
pop
fwait
jo
xchg
loopne
repnz
cmp
push
xor
rcrb
lock
pop
repz
in
cmp
push
orl
cmp
mov
ljmp
aam
mov
enter
jp
adc
push
push
jmp
shll
and
inc
fwait
repz
into
arpl
ss
pop
jmp
std
pop
dec
xlat
inc
out
mov
push
pop
cs
sub
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rolb
mov
pushf
loop
jg
xchg
jle
js
jo
sbb
and
add
mov
dec
icebp
sub
jbe
jbe
cmp
xor
mov
or
iret
inc
dec
push
fdivrs
repnz
xchg
cmp
cmp
pop
jns
ss
sbb
jg
xor
inc
sti
movsl
aas
cmp
cmp
movsb
lods
shlb
rclb
jle
addr16
mov
lods
lock
add
stos
js
fmul
jno
mov
bound
stc
adc
dec
pop
lods
lea
bound
fcoms
jnp
data16
mov
data16
dec
scas
xor
lret
jl
dec
push
in
outsl
and
push
mov
mov
scas
enter
ja
les
cld
dec
ds
dec
jmp
clc
or
loopne
lods
add
movsl
loopne
pushf
nop
adc
shl
sbb
push
xor
loope
das
call
aam
push
cmpsb
mov
push
fs
inc
jl
mov
push
fdivrs
jne
pushf
ret
adc
jnp
mov
cmc
les
imul
adc
and
pop
das
lods
xor
add
mov
cmp
mov
test
aad
data16
sbbl
dec
clc
cld
or
pop
pop
jb
sbb
xor
xorb
stos
mov
neg
jge
push
ss
fdiv
mov
pop
movsl
fsubrl
push
in
jnp
movsb
pop
mov
sub
push
mov
dec
mov
out
and
loop
and
pop
hlt
mov
mov
mov
xor
adc
mov
repnz
pop
ds
fisubs
popa
sbb
fisubl
jnp
stos
pushf
cmp
add
jle
shrl
or
jmp
or
or
push
sbb
int
pushf
jmp
inc
inc
int3
mov
shrb
lahf
cmp
cmp
adc
loope
or
iret
fisttpll
dec
cmp
xrelease
mov
lds
lcall
fs
push
imul
into
std
out
test
iret
int3
js
or
adc
imul
jg
push
addr16
out
mov
popf
mov
rcrb
sub
rcll
xor
stos
out
xchg
test
dec
and
aad
scas
aaa
ficoms
andb
fsubrl
lret
dec
stos
adc
push
jns
and
sub
fcoms
push
push
sti
out
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
ss
xchg
jg
jg
add
pop
rclb
sahf
les
pop
mov
mov
dec
add
and
cwtl
xor
cmp
ss
rcrb
xchg
jp
test
icebp
mov
out
mov
rcll
cmp
xchg
outsb
push
push
jae
into
subl
jmp
in
sub
or
and
cmp
inc
in
push
les
std
rcl
ficoml
loop
mov
fistl
sbb
test
je
mov
push
mov
sbb
loopne
loopne
cltd
mov
push
frstor
cmc
roll
sbb
and
pop
arpl
pop
sbb
loop
push
mov
mov
movsb
adc
in
lret
cmc
imul
pop
stos
inc
out
scas
push
ss
cs
sub
jno
mulb
push
mov
mov
jbe
adc
push
push
ds
xchg
inc
mov
cmp
std
and
out
adc
or
sahf
sbb
insb
mov
cmpsb
daa
mov
mov
jg
adc
test
leave
fstl
nop
mov
pop
addr16
fistpl
mul
jbe
adc
and
mov
mov
jbe
jp
inc
mov
mov
mov
add
push
and
jmp
add
jae
movl
imul
test
shld
cmc
inc
xor
ja
dec
push
xchg
push
and
repnz
outsl
xor
rcrb
mov
mov
lock
sub
add
xchg
das
cmp
push
dec
mov
or
jle
sarb
push
cmp
sub
repz
push
or
icebp
sbb
jnp
cmp
push
in
clc
add
jmp
cmp
aad
aad
popa
adc
inc
dec
mov
add
jg
add
int
lret
ja
lds
xor
icebp
and
jnp
fldt
ds
ds
mov
adc
lds
arpl
lock
mov
sahf
int
insb
inc
scas
sti
jno
mov
rcrl
pop
js
clc
in
insl
ljmp
fst
or
push
js
mov
pop
cmpsb
push
dec
jmp
mov
mov
push
cwtl
ds
test
mov
dec
xchg
jle
sbb
ffree
pop
mov
pop
popa
cs
imul
sbb
lret
xchg
ret
pop
jmp
pop
das
mov
xor
ret
xchg
mov
fwait
dec
lods
rolb
jle
les
mov
cmp
insb
push
and
insb
push
jb
ss
pop
std
shll
sbb
pushf
jnp
inc
lods
sbb
sub
gs
mov
repz
dec
scas
mov
sbb
push
fiaddl
or
iret
sti
movsb
xor
mov
imul
fnstcw
out
cmp
clc
aam
pop
repz
sbb
lods
sub
cmp
clc
mov
enter
dec
popf
or
pop
or
push
rol
and
jecxz
fisttpll
jne
jp
insl
cmp
sbb
jns
mov
lods
mov
add
sbb
insb
mov
int
sub
or
or
cmc
jl
inc
push
ss
or
es
push
mov
jp
mov
pop
in
mov
xchg
fnstcw
dec
sub
aam
neg
fiaddl
or
cmp
mov
adc
push
stos
push
mov
or
nop
sahf
mov
xchg
or
and
lcall
sbb
lcall
push
repnz
arpl
in
mov
cmp
shrb
mov
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
aad
xor
add
cmpsl
jne
adc
or
cld
and
mov
dec
push
mov
aaa
sub
push
mov
insl
test
adc
xchg
jl
xchg
mov
popf
lods
jg
push
imul
jns
jl
shlb
rorb
pop
mov
or
sbb
pop
scas
mov
mov
ret
cmp
jle
push
push
lcall
repz
test
mov
sahf
xor
lret
jmp
xor
in
lcall
ret
and
fidivl
pop
sti
loope
popf
sbb
add
xchg
sub
add
or
stos
pop
and
in
xor
push
xor
push
xlat
mov
lods
and
in
int3
daa
sbb
andl
fidivl
jo
gs
jb
icebp
ljmp
xchg
and
in
mov
stos
xchg
leave
lea
fmull
mov
xor
pop
roll
push
mov
lahf
fisubs
pop
jbe
cmp
test
out
push
jl
adc
and
adc
mov
push
das
xor
xor
lock
xchg
out
test
jmp
lods
idivb
pop
mov
in
cli
movsb
jecxz
mov
sub
bound
rcrb
mulb
aaa
fildll
sahf
fs
mov
inc
adc
jbe
sbb
mov
aas
cmp
push
pop
sahf
jl
fistps
and
cwtl
sub
mov
adc
ja
sbbb
xor
xchg
out
loop
les
movsl
dec
lret
lret
out
cmp
aad
pop
shlb
mov
cmp
fidivrs
mov
xchg
movl
push
roll
imul
test
pop
addr16
int
push
ja
dec
call
addr16
push
fwait
mov
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
jp
pushf
nop
push
aaa
jg
jnp
js
xchg
sub
or
sub
jb
jno
fwait
mov
rcll
movsl
adc
and
push
dec
cld
fstps
stos
mov
test
xchg
jbe
sub
and
loope
lds
add
loope
outsb
jecxz
cmpsl
adc
pop
and
dec
notb
pop
push
add
in
inc
stc
dec
out
push
imul
add
jnp
movsb
shlb
mov
mov
addl
lock
mov
mov
xchg
shr
jns
aaa
jno
xchg
ror
xor
mov
dec
repnz
loop
dec
jne
ss
fadds
mov
sbbl
adc
fnstcw
js
and
xchg
aam
mov
pushf
movsl
or
outsb
pop
stc
dec
xor
mov
stc
jecxz
adc
and
mov
pop
mov
xorb
popf
xchg
movsb
inc
rorb
inc
insl
fnsave
iret
fmull
insl
or
mov
shl
jb
fst
aad
in
and
rclb
rsm
and
lret
stc
dec
je
loopne
iret
mov
inc
mov
mov
pop
jle
xor
fsts
into
push
ljmp
mov
loope
mov
or
fs
xlat
and
jo
push
in
fs
cs
aas
cmpsb
xor
mov
out
dec
dec
fldcw
addb
jp
push
imul
or
and
pop
mov
xor
lea
push
bswap
aaa
stos
pop
inc
or
add
pusha
pop
lods
aam
leave
jl
jecxz
cltd
mov
int3
mov
cmp
dec
jo
shr
and
orb
add
xchg
xor
cwtl
stos
inc
adc
mulb
xor
pop
adc
add
stc
inc
mov
cwtl
repz
movsl
out
dec
les
sbb
pop
inc
or
in
push
sbb
sbb
sub
sbb
cs
jae
rcrl
pop
fmul
mov
xchg
jmp
dec
inc
mov
gs
add
adc
inc
les
push
enter
sahf
adc
mov
xchg
push
mov
fisubs
inc
lahf
sarb
ja
or
pop
push
mov
dec
in
cmpsl
push
sti
fs
inc
inc
pusha
cmp
xor
sarb
mov
jno
hlt
adc
arpl
mov
sbb
jg
pop
mov
sub
or
mov
mov
mov
stos
cwtl
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
out
mov
xor
js
jle
js
js
jmp
fisubrl
dec
cmc
and
rcrb
loopne
mov
cmp
fistpl
mov
push
loope
ljmp
sbb
fnstcw
mov
cwtl
push
shl
mov
mov
out
outsl
bound
fists
stos
jmp
push
and
das
or
std
sbb
in
arpl
dec
dec
imul
push
imul
outsb
cs
xor
pop
ss
mov
out
inc
cmp
iret
adc
inc
loop
cmp
jle
ds
aaa
pop
sbb
sub
cmp
xchg
iret
sub
dec
repnz
pop
addr16
xor
push
push
add
inc
mov
inc
mov
push
ljmp
add
scas
adc
fldt
push
repnz
or
fsubrs
add
adc
dec
cmp
sbb
mov
inc
xor
add
pusha
jb
arpl
int
pop
mov
stos
mull
push
dec
sbb
push
cmp
repnz
mov
push
test
pop
cmp
mov
xor
pop
cld
sti
adc
out
lock
ret
cmp
add
xchg
inc
rcll
pop
cmp
shll
repnz
ss
fisttpll
loop
inc
push
mov
ret
shr
test
fisttpl
sahf
cmp
pop
push
lods
loopne
pop
daa
pop
in
mov
lret
ret
mov
pusha
and
dec
or
shll
sub
lcall
movsb
aad
inc
popa
insb
cmp
sahf
dec
push
jmp
add
das
rdmsr
rolb
dec
jp
cmc
leave
js
sbb
xchg
imul
xor
xor
movl
pushf
in
cwtl
sbb
sti
mov
cmp
jno
jne
outsl
movsb
add
mov
stc
inc
repz
and
lret
fsubrp
jg
hlt
stos
stos
stc
push
push
cmpsl
mov
gs
add
mov
pop
clc
adc
das
push
pop
stos
repz
mov
dec
jae
iret
pusha
in
aaa
adc
into
imul
xchg
sub
ss
loop
rol
fcoml
sti
fbstp
jns
pop
mov
xor
jl
out
xchg
mov
outsb
add
ja
out
shlb
sub
mov
pushf
dec
sub
xchg
mov
pop
push
xchg
sub
arpl
pop
arpl
mov
xchg
mov
push
dec
mov
out
mov
fnsave
add
in
jo
sub
add
pop
jecxz
and
mov
jno
mov
stc
sbb
daa
stos
xchg
add
sbb
ljmp
clc
jne
jmp
jmp
int3
les
aam
ror
mov
adc
jg
jnp
js
cmp
insb
lods
out
adc
push
add
push
test
pop
cmp
add
call
insb
das
add
fs
notl
xlat
clc
ficompl
jl
lcall
sub
adc
adc
jmp
scas
xchg
cli
or
ret
addl
in
sub
enter
aas
or
mov
fwait
adc
xchg
dec
sub
dec
out
add
or
push
daa
cmp
lret
inc
mov
ljmp
pusha
cmp
push
insl
lods
sub
pop
pusha
jge
jp
popa
inc
pop
and
mov
es
ficomps
mov
int
ljmp
stos
push
xchg
mov
shlb
xchg
das
or
xor
ja
cli
in
xchg
xor
lea
inc
lea
xor
cmp
ret
mov
ret
rcl
movsl
mov
cmp
xor
enter
mov
lcall
xor
out
dec
or
stc
testb
enter
movsl
push
rorl
xchg
pop
std
cmp
jo
fmull
mov
arpl
lods
add
dec
ret
cmp
push
xor
pusha
sbb
mov
inc
imull
xchg
scas
xchg
mov
lds
and
lret
mov
pop
outsl
add
mov
jb
pop
mov
pushf
push
jnp
sbb
xchg
mov
cmp
mov
into
pushf
js
std
mov
ja
xor
movups
xor
xchg
pop
add
jnp
hlt
push
or
inc
xor
inc
sub
js
push
mov
fistpl
push
sub
xlat
pop
les
mov
cmpsl
hlt
mov
jno
adc
jns
repz
add
adc
push
xchg
lock
popf
mov
inc
ret
pusha
lods
addr16
jae
xor
push
dec
in
loopne
ja
adc
xchg
xchg
inc
push
mov
jmp
xchg
test
push
inc
mov
or
in
cmp
jne
adc
stc
in
mov
sbb
dec
fs
cld
add
jecxz
xlat
rorb
shlb
mov
imul
push
stos
xor
fldcw
sbb
cmc
mov
push
push
sub
cmp
jg
jg
mov
div
lods
sub
movb
or
sbb
pop
jo
sti
xor
mov
inc
and
lods
ret
sub
dec
dec
insb
mov
sub
mov
inc
jg
cwtl
jp
leave
mov
stc
shrb
mov
shr
mov
popa
xor
testl
push
mov
sti
popa
sbb
cmp
mov
add
mov
int
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
int
pop
jg,pt
jnp
js
jns
ds
adc
and
sub
out
mov
push
ds
aas
or
movsb
dec
jne
loop
rclb
push
and
cmp
and
decb
jmp
fists
stos
mov
jne
test
out
xchg
jge
lods
mov
movsb
jg
mov
ja
xchg
cld
in
dec
testb
dec
inc
cld
leave
test
push
scas
aad
arpl
jle
jg
mov
aam
push
xor
xchg
dec
sbb
lret
aad
aas
xlat
and
adc
aad
out
dec
add
andb
fs
cmpsb
mov
pushf
mov
repz
arpl
inc
out
inc
scas
sub
fwait
push
pop
test
push
add
cmp
inc
add
and
loop
cmp
int3
push
sti
mov
sti
daa
sub
push
lods
lods
ret
enter
xor
mov
jle
cmc
aad
mov
push
pop
mov
fiaddl
add
sub
jb
xchg
stos
aas
icebp
loop
test
xor
popf
xor
cwtl
fwait
and
or
addr16
andl
dec
popa
cltd
lret
int
dec
or
ljmp
loopne
xlat
mov
adc
xorb
ficomps
mov
cmp
dec
shll
stc
mov
add
xor
popa
arpl
mov
aaa
fisttps
xchg
mov
daa
dec
adc
insb
or
sbb
add
and
int3
popf
test
ret
jl
repz
ret
in
sbb
aam
pop
imul
push
dec
das
repnz
outsl
adc
mov
fwait
je
lea
ds
imul
jle
and
loope
sub
sbb
push
jns
sub
jnp
xchg
inc
mov
mov
popl
mov
call
out
push
arpl
sub
dec
dec
sub
bound
mov
inc
dec
fiaddl
rorl
loopne
sahf
push
das
adc
inc
xlat
sbb
scas
loop
imul
test
adc
mov
into
add
aaa
shl
add
or
test
iret
sbb
sahf
dec
call
lods
int
add
repz
pop
sub
out
mov
jae
add
and
mov
mov
movsl
ljmp
int3
or
ljmp
cmp
pop
fsubrs
in
xchg
jmp
fsts
and
jns
out
add
cmp
xor
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
inc
push
notb
ret
jg
jnp
js
arpl
or
insl
push
add
push
pop
sub
mov
nop
std
sub
dec
push
or
ds
les
xchg
adc
mov
loop
pop
fldenv
pop
inc
inc
adc
loope
leave
mov
insl
fs
dec
pop
dec
pop
notl
or
cmpsl
in
fisttpll
popa
xchg
loopne
xlat
sub
pop
xor
push
xor
cmpsb
icebp
adcl
push
inc
jg
fs
inc
mov
shl
in
aad
jge
frstor
js
imul
and
cmp
movsl
xor
or
cmpsb
aam
jo
dec
xlat
cli
adcb
rcr
mov
fisttps
das
dec
cmc
mov
popa
cld
pop
adc
pop
mov
xchg
out
rcrl
adc
imul
ljmp
ret
mov
dec
inc
sahf
adcb
insb
pop
cmpsl
addr16
jae
or
pop
andl
lods
or
rcrl
xchg
pop
mov
mov
je
pop
mov
cltd
fisubrs
push
or
sub
or
iret
and
cmp
and
sbb
sub
jnp
mov
and
das
loopne
out
and
mov
std
cli
out
js
insl
xchg
sub
int3
or
mov
shll
lcall
or
cmp
mov
inc
mov
push
or
xchg
xor
xchg
xor
repnz
xchg
leave
inc
add
or
int3
xchg
rorl
sahf
loop
jnp
cmp
rorb
test
iret
cmp
cmc
push
shrb
xor
ret
mov
and
cmp
xadd
push
or
pusha
sbb
iret
cmp
adc
jmp
sub
jns
push
pop
inc
or
push
scas
in
adc
fs
addl
es
outsl
push
inc
mov
push
ljmp
jnp
jns
xchg
dec
push
push
xchg
ror
inc
cmpsb
dec
sub
add
xor
xchg
ss
loope
stos
xchg
jbe
xor
pop
jecxz
lcall
push
aad
push
icebp
out
cmp
mov
movb
leave
push
setnp
push
xor
mov
in
cmp
iret
lock
test
das
push
sar
out
outsl
xor
nop
dec
or
lods
lcall
arpl
dec
mov
mov
cmp
ds
out
test
lods
mov
sbb
xchg
xchg
and
jle
fxch
das
fdivp
sub
pop
cmpsb
enter
test
jp
push
pop
mov
rcrb
push
rcr
push
jp
mov
and
out
pop
pop
mov
inc
adc
adc
rol
leave
shll
cmpb
or
jle
js
and
sub
std
xor
mov
icebp
leave
adc
lret
sbb
shrb
jno
xor
mov
mov
jne
mov
mov
icebp
testl
and
add
std
mov
lods
jns
test
xchg
adc
ds
mov
cmpsl
outsl
sub
cli
add
imul
push
xor
mov
int
sub
shlb
sub
mov
xchg
add
ja
pop
mov
cmp
sub
imul
xor
push
movsl
or
je
imul
lret
into
cmc
aad
sub
fs
roll
jp
xor
sbb
cmp
cmp
repz
jae
add
call
dec
or
add
test
xchg
scas
mov
push
cli
sbb
adcb
push
cs
rcrl
and
pop
movsl
jne
xchg
test
rcll
les
aaa
sbb
fbstp
push
adc
mov
sti
add
pop
and
mov
rol
cmp
xchg
out
out
push
jmp
nop
sarl
cmpsl
lahf
xorl
sbb
in
push
and
movsl
mov
js
push
lea
dec
xor
dec
decl
out
inc
push
xchg
mov
lds
test
sti
je
shll
out
inc
pop
cld
test
pushf
stos
push
and
stos
aaa
fldt
jg
sbb
xchg
ljmp
dec
adc
xor
or
add
cmpsb
hlt
jmp
neg
jne
push
cmp
push
mov
mov
jo
cld
push
ljmp
push
jle
jg
jne
lods
and
jp
add
jb
imul
xchg
xchg
repz
int
xlat
jnp
xchg
cmp
popf
xchg
aam
nop
and
out
and
test
sbb
inc
test
out
dec
pop
nop
clc
aad
xchg
popf
xlat
scas
hlt
leave
xchg
jp
push
fbstp
cli
movsl
add
cmp
cmp
pop
stc
mov
ljmp
call
outsl
jle
ret
ss
cmp
mov
xor
push
out
leave
sahf
fisubs
adc
sbb
cmp
mov
dec
mov
fstp
loopne
lcall
imul
push
mov
xor
or
push
lahf
mov
add
sbbb
adc
cmpsl
subb
xor
adc
div
inc
gs
pop
xor
in
aas
push
out
ret
mov
push
jne
outsl
dec
mov
push
mov
jbe
in
xchg
es
ja
das
jle
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
mov
cmp
lds
adc
js
jns
iret
ret
mov
sbb
mov
jp
outsl
sbb
pop
cmp
jbe
pop
push
sub
adc
push
cmpsl
mov
xor
mov
inc
fcompl
arpl
imul
lahf
imul
aaa
jnp
and
imul
push
sub
xor
pop
sub
in
add
fdivl
call
sub
dec
loopne
add
mov
ret
pop
cs
cmp
cmpsl
pop
stos
fadds
movsb
xor
enter
jo
xor
push
orb
xchg
xchg
sahf
scas
or
test
push
imul
jae
push
or
jae
or
in
shl
insl
dec
add
pop
aas
add
push
and
stos
imulb
sub
lret
rcll
push
xor
rcrl
out
pushf
xchg
mov
jg
in
mov
sub
js
fstl
iret
push
push
addr16
jg
jb
fs
loop
mov
insb
cmp
notl
xchg
cmp
lock
dec
out
mov
lcall
fsub
adc
xor
test
and
jle
je
mov
das
mov
test
call
mov
sahf
mov
push
adc
gs
xor
cmp
and
dec
sub
adc
out
lcall
push
enter
hlt
and
mov
mov
icebp
iret
sub
sti
movsb
mov
das
add
lcall
mov
sub
imul
fiadds
fisttpll
pop
push
mov
mov
fistps
shlb
orl
mov
daa
clc
xchg
or
inc
into
outsl
or
lcall
xchg
adc
mov
arpl
inc
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
or
sahf
and
jg
adc
js
cmp
pop
cmp
cmp
aad
add
adc
pusha
mov
mov
nop
push
scas
fidivrl
mov
sub
xor
pop
cld
pop
fldl
inc
outsl
test
adc
dec
sbb
cmp
mov
into
aam
mov
loop
and
stos
mov
imul
out
loop
imul
xchg
dec
lret
inc
jae
mov
divb
cli
out
sbb
cmpsb
std
in
aas
sahf
inc
pop
adc
pop
mov
cmpsl
fmull
mov
aas
push
add
push
push
push
jg
movsl
stos
push
pop
dec
fsubrl
jb
popf
jns
sarl
scas
aaa
sbb
ljmp
xor
dec
es
lods
push
inc
pushf
mov
ds
pop
stos
jg
cli
test
movsl
xchg
in
jg
addl
mov
sbb
leave
mov
mov
aas
ret
out
xchg
jg
adc
mov
pop
xchg
mov
mov
inc
imul
insb
inc
aaa
dec
roll
adc
xchg
insl
cmpsb
push
adc
lods
and
mov
jle
bound
cmp
clc
rcrb
fstpt
lret
into
xlat
mov
imul
scas
jp
idivl
aaa
push
je
cs
and
aaa
adc
cld
subl
inc
shll
idivb
and
loope
shrb
push
jl
cwtl
addr16
or
mov
ljmp
or
sbb
mov
push
hlt
lea
lret
fildll
push
cmp
test
je
aam
shll
sti
mov
mov
pop
add
sbb
xchg
jmp
dec
pushf
lea
cmp
cmpsl
inc
pop
addr16
adc
jp
pop
in
out
push
mov
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
mov
cmp
jg
adc
js
xchg
jno
int
inc
int3
sbb
pop
adc
incb
push
fwait
loopne
dec
fcompl
sub
iret
inc
test
sahf
push
or
shrb
pop
out
incl
mov
pop
xor
lods
dec
mov
pop
pop
dec
fwait
cmp
sti
push
jne
xchg
and
jle
stos
outsl
bound
dec
pop
jnp
das
sub
pop
fwait
push
xor
ret
add
dec
mov
test
call
std
out
sbb
jp
fisubs
jne
jns
or
add
jns
push
push
out
jb
lea
cmc
testb
mul
stc
bound
out
sahf
jle
call
fstl
movsb
rcll
xchg
push
mov
bound
nop
imul
push
cld
movsl
iret
rcrl
rcr
loop
jmp
daa
jg
jl
outsl
push
xchg
out
das
pop
movsb
mov
mov
mov
repnz
or
imul
orb
pop
mov
xor
scas
cmc
lcall
pop
sbb
jmp
sbb
cwtl
pop
mov
arpl
add
mov
mov
sub
subb
movsl
cld
xchg
int3
pusha
movb
leave
cli
pushf
stos
mov
pop
push
loop
pop
and
in
cmpsb
aaa
mov
xchg
pop
subb
cld
jecxz
or
test
repnz
pop
addl
int
mov
sub
push
lock
cmp
repz
or
aam
pop
mov
js
xor
mov
xor
xchg
adc
cmp
out
aam
out
repz
xor
ds
ds
jge
rcll
sarl
cs
test
sbbb
std
inc
inc
mov
or
clc
add
jb
adc
sbb
mov
push
sbb
out
jle
aas
mov
mov
jnp
dec
mov
jge
push
mov
ljmp
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
adc
js
jle
js
mov
pop
sub
insl
cltd
sbb
sbb
ljmp
testb
add
cmp
xchg
pop
sbb
jae
xorb
lret
xlat
stos
repnz
fcmovnb
std
add
fsubrl
adc
pop
in
movsl
add
push
mov
clc
push
add
xchg
aaa
pop
pusha
adc
add
in
jg
mov
in
pop
mov
jnp
jne
add
or
add
mov
lret
add
jle
in
notl
loopne
dec
jb
mov
rol
jp
nop
sti
adc
lea
repz
cld
mov
mov
loop
fisubrl
xchg
int3
jno
ljmp
push
cmp
mov
xchg
inc
fcomps
push
aad
das
sbb
adc
xchg
mov
loope
inc
int3
mov
scas
loopne
jg
and
loopne
mov
sub
popf
sub
add
adc
xchg
int
int3
ret
test
bound
xor
in
dec
mov
mov
adc
and
mov
jae
jecxz
hlt
add
lock
outsb
fmuls
fisubrs
jle
popa
push
mov
bound
imul
jle
add
jg
dec
mov
mov
das
mov
push
mov
mov
xchg
jnp
or
sub
fmull
popa
push
pop
fcmovne
inc
or
add
add
mov
mov
sub
ja
dec
inc
jno
jl
data16
sbb
out
ret
push
scas
lea
ds
rorb
lret
jmp
ss
mov
mov
inc
ss
sub
test
orb
cli
inc
lods
inc
mov
mov
inc
fcmovnu
bound
cwtd
sub
inc
push
mov
inc
testl
fcomps
cmp
mov
sbb
stos
test
arpl
mov
cmc
add
pop
stc
jne
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
cmp
call
jle
js
sarl
cmp
iret
js
mov
xor
lahf
or
fwait
xchg
jno
lds
pop
test
addr16
mov
popa
xchg
xchg
lods
jno
in
mov
pop
leave
in
mov
pusha
out
daa
ljmpw
push
fisttpll
pushf
xchg
adc
hlt
test
call
pop
addr16
lret
test
fidivs
or
push
mov
lahf
movsb
mov
int3
xor
jbe
lret
cli
enter
pop
inc
test
xchg
sarb
dec
xchg
gs
cmp
nop
jle
lret
jae
push
clc
dec
inc
mov
ret
arpl
or
popf
sti
push
test
pushf
fsubrl
mov
popf
adc
out
adc
testb
mov
cmpsl
xlat
shll
fwait
adc
inc
into
mov
repnz
aaa
xchg
cmp
cmp
jae
loopew
insl
jmp
xor
shl
mov
hlt
jmp
cmp
mov
add
mov
stos
jmp
ret
add
sbb
ret
inc
pushf
xchg
loope
xor
mov
mov
mov
lds
into
cmp
fists
dec
cmpsl
cmp
lcall
ret
jo
pop
std
ds
stos
or
push
enter
push
aad
mov
or
mov
dec
movsb
popa
pop
into
sarl
sbb
daa
fldenv
shlb
add
loopne
test
or
call
sbb
push
xor
mov
lret
sbb
inc
adc
mov
pop
xchg
or
ret
cli
inc
add
testb
push
ret
mov
mov
mov
scas
cmp
and
xlat
sub
insl
fwait
dec
cwtl
jle
jle
push
or
add
fninit
mov
pop
addr16
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
mov
jg
adc
js
and
cmp
pop
or
iret
insl
xor
xchg
data16
inc
mov
cltd
dec
pop
and
mov
sbb
mov
gs
cmc
cmp
dec
out
sub
out
mov
mov
js
mov
cmp
leave
push
enter
or
push
jnp
jp
in
jle
out
dec
mov
jg
cmpsl
and
pop
jo
imul
mov
aas
sbb
in
dec
lds
imul
mov
les
push
adc
es
mov
imul
popa
inc
int
push
jmp
pusha
pop
mov
mov
xchg
mov
ret
fs
jecxz
inc
loop
jns
ljmp
loopne
xchg
shll
inc
fimuls
xchg
and
pop
mov
or
jae
mov
lahf
aad
fnstsw
adc
dec
movsb
lret
imul
push
xchg
or
push
pushf
cwtl
add
test
sbb
push
orl
xchg
stos
dec
shlb
js
es
mov
loope
inc
dec
jbe
inc
xor
lret
clc
xchg
imul
into
pop
bound
int
add
jne
mov
jns
das
adc
cmpsb
iret
sbb
pop
lods
cmp
lds
iret
jge
inc
mov
mov
out
mov
nop
and
cwtl
fsubrs
adc
test
or
xchg
xor
jge
xor
aad
mov
int3
jo
mov
add
sbb
lods
adc
xor
inc
imul
loop
xchg
leave
or
addr16
std
mov
mov
out
lcall
repnz
inc
cs
mov
jp
push
jp
mov
dec
cmp
fwait
je
xor
insb
mov
pop
or
xchg
aad
push
pop
mov
jbe
add
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
adc
stos
cwtl
sarl
adc
js
push
fcomps
inc
enter
jne
xchg
cmc
xchg
outsl
fwait
cmp
test
adcb
test
add
jno
mov
cmp
xchg
pushl
lods
pushf
scas
add
xlat
sti
cmp
add
mov
out
aas
movsl
cld
pop
and
or
jae
mov
jle,pn
xchg
divb
icebp
jle
xchg
pop
test
arpl
dec
cwtl
sub
push
imul
push
ffreep
js
mov
jbe
add
xor
mov
jmp
je
pop
repnz
je
bound
jmp
push
inc
jae
gs
mov
mov
test
xchg
pop
jo
sub
ret
rcrb
mov
cs
sub
push
cwtl
hlt
insl
into
lcall
dec
rcll
jmp
adc
dec
das
mov
pushf
movsl
lret
cmp
rorb
xchg
jns
ficoms
mov
or
aas
mov
shll
aas
mov
xor
test
mov
cmp
lock
rorl
data16
inc
testl
add
gs
jp
inc
enter
xor
popf
sbb
fucomip
imul
jecxz
jge
loope
int
pusha
mov
bound
mov
int3
pop
or
orb
repnz
ljmp
out
cli
sub
sbb
repz
rcl
insl
popa
adc
lea
cmpsb
jmp
jge
push
icebp
pushf
rcrb
int
xlat
outsb
dec
pusha
xlat
adc
popf
sub
push
in
push
sub
jg
cltd
lret
sbb
movsb
outsb
into
push
jecxz
andnps
popa
je
add
push
pop
sti
pushl
mov
not
repnz
pop
inc
mov
andl
mov
shl
add
popf
adc
dec
cltd
or
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
cld
mov
jg
adc
js
cli
mov
int
flds
cld
pop
pop
outsl
jg
jp
or
jl
sbb
cmpsb
lods
dec
xor
fcoms
jae
cs
and
lods
in
xor
or
dec
add
and
jmp
sarb
hlt
cwtl
inc
or
sarl
mov
mov
cld
andl
add
xchg
and
cltd
sarb
mov
jb
hlt
mov
movsb
lcall
movsb
sub
cs
and
sbb
out
dec
add
pop
push
out
lret
or
hlt
sub
xor
insl
xor
push
add
inc
incl
jp
sbb
or
out
aas
cli
shrl
jae
fdivs
movl
jne
ss
int3
pop
xchg
out
xchg
jo
mov
popf
inc
pushf
stos
sub
into
loop
mov
or
rorl
gs
pusha
jmp
sbb
fmull
repnz
fwait
dec
sub
std
call
xor
loop
or
arpl
or
cmp
sti
iret
shll
ret
jmp
jbe
sbb
filds
test
fbstp
out
out
cli
outsb
ja
cld
shlb
adcb
pop
mov
dec
jnp
sbb
pop
outsb
push
xor
or
out
mov
out
sub
in
sahf
adcl
pop
pusha
cmpsl
lods
xchg
sbb
mov
jb
mov
xchg
pop
xor
inc
fistpll
sub
sahf
pop
mov
gs
orb
lds
mov
dec
jbe
push
mov
subb
cmp
xorl
mov
adc
xor
mov
pusha
je
cwtl
jecxz
mull
js
mov
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
addl
mov
aad
js
jle
js
xor
subl
cmpb
mov
ljmp
and
pop
stos
into
insb
pop
sub
test
push
mov
mov
xchg
lcall
fdivl
lea
push
jl
aam
cs
test
or
ss
mov
mov
cmp
fildl
jge
test
mov
and
call
xlat
or
pusha
lret
jp
push
fdivrl
jns
add
inc
lods
adc
test
cmp
lods
negb
jns
in
inc
and
dec
imul
xchg
xor
call
lea
out
xor
test
mov
jp
icebp
adc
mov
pop
imul
sub
sub
adc
inc
cmp
cmp
add
pop
cmp
sbb
jae
add
sbb
int3
ja
ja
adc
mov
xchg
mov
jmp
lahf
test
push
sub
jecxz
sahf
xor
ret
addb
lods
push
lods
sbb
repnz
je
cmp
hlt
mov
jg
jge
aaa
inc
or
aam
ficoms
cwtl
xchg
jl
push
test
jl
mov
or
into
dec
jmp
xchg
sub
aas
das
adc
jp
outsl
daa
pop
lock
mov
mov
xchg
arpl
movsl
mov
dec
lret
or
fsubrp
pop
inc
in
adc
xchg
jecxz
dec
std
and
bound
les
jae
cmp
add
mov
sbb
gs
xor
lods
mov
push
xlat
push
into
push
mov
inc
inc
inc
xchg
jbe
lock
test
pushf
mov
xorl
mov
cmp
adc
and
scas
jl
pop
cld
and
adc
outsl
sub
cld
mov
imul
int3
push
or
sub
test
jl
mov
stc
xchg
xchg
adc
mov
cmp
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
dec
pusha
fstpt
adc
js
xor
sbb
sbb
inc
and
lret
movsl
enter
mov
mov
mov
cli
xor
cmp
cmp
pop
sbb
or
xchg
je
jg
add
leave
push
dec
filds
cltd
int3
mov
aaa
shl
out
repnz
lret
jnp
mov
sbb
xchg
sub
pop
mov
negb
mulb
sbb
imul
and
psubq
hlt
fisubrl
fwait
cmp
test
pop
xchg
mov
jne
sub
sahf
adc
xor
stos
rclb
int3
pop
mov
jp
andb
lea
fldcw
loope
addr16
or
push
bnd
push
jnp
pop
leave
adc
dec
xchg
xlat
into
sub
fstpl
jmp
mov
lock
jle
sbb
pop
mov
pop
add
shr
loop
loope
int3
das
in
mov
xor
outsb
enter
out
out
test
jle
mov
gs
inc
fildll
popa
jl
xchg
jns
push
adc
sub
stc
mov
jnp
std
mov
sbb
jae
xlat
lcall
dec
mov
ret
add
cld
add
into
test
pop
pop
dec
pop
xchg
out
iret
je
add
mov
adcb
adc
sti
cmpb
sub
pop
cmp
imul
inc
mov
jae
mov
mov
sub
lock
xor
push
dec
das
mov
loop
dec
and
out
mov
push
xlat
or
mov
add
pop
pop
or
jl
dec
ja
js
lods
jno
dec
pop
xor
inc
in
insl
or
and
fildl
cltd
fbld
flds
bound
loop
jbe
and
fstps
sub
incb
xor
add
ret
aas
fxch
rcr
mov
push
and
js
jg
adc
js
leave
cmp
pop
sbbl
test
popf
pop
cmp
scas
mov
daa
and
js
mov
cmp
sub
loope
fsubrp
lahf
cmpsl
fidivrl
mov
inc
repnz
lcall
test
or
or
imul
loopne
loope
repnz
and
mov
in
cmp
xchg
xchg
cmc
call
push
adc
dec
stc
movsb
jmp
cwtl
xchg
sbb
inc
cmp
lods
push
inc
inc
ret
cmpsl
sub
lret
mov
dec
sub
cli
mov
add
fcmove
push
inc
dec
dec
loopne
jae
mov
decl
mov
mulb
jmp
mov
daa
loopne
pusha
popa
es
mov
lock
aad
sti
or
xchg
push
jg
inc
les
push
fstl
xor
push
inc
dec
lods
stos
mov
jmp
arpl
dec
lahf
mov
mov
test
add
mov
jmp
lcall
add
insb
arpl
mov
sbb
lcall
neg
adcl
in
or
push
push
sbb
loop
pop
push
mov
icebp
test
rol
add
sub
xchg
out
inc
rol
fldl
loope
mov
adc
jnp
mov
and
fldl
cltd
xchg
add
repz
loop
xchg
sub
add
cmp
pop
ret
and
adc
mov
lea
pcmpeqw
adc
xchg
or
pop
aam
push
mov
or
es
push
adc
out
push
repnz
stos
lods
or
test
ljmp
push
add
jle
lahf
rorl
add
lods
in
lret
jnp
clc
es
jmp
int
int
fnstcw
cli
push
bound
fidivrs
adc
js
into
fstpt
mov
data16
sbb
shlb
jecxz
or
in
jnp
adc
jno
and
xlat
lock
or
xor
inc
out
add
adc
dec
lcall
enter
sti
mov
mov
test
into
enter
mov
icebp
aas
sbb
outsb
mov
mov
sbb
pop
jne
test
or
xchg
xchg
int
jne
jle
mov
adc
push
sbb
es
push
cmp
jecxz
adc
cmpb
mov
lods
rdmsr
in
ljmp
adc
rcr
jne
push
mov
scas
dec
imul
mov
iret
mul
imul
pop
cmp
mov
push
bound
jb
call
incb
std
in
push
iret
cmpsl
cmpsl
xchg
cmp
aas
clc
arpl
repnz
pop
sub
leave
sub
mov
and
pop
mov
add
pop
and
pop
adc
out
sub
pop
mov
mov
in
mov
incb
xor
sub
xor
out
mov
cmp
lea
xchg
dec
loopne
adc
leave
test
arpl
xor
push
incl
cwtl
or
jecxz
push
lods
cli
jmp
mov
cmpsb
test
xlat
mov
in
mov
mov
cmp
pop
insb
jb
ja
ss
push
xor
test
arpl
jns
mov
cmp
mov
mov
rorl
inc
loopne
push
add
xor
inc
in
mov
pop
ficoml
ja
sub
mov
or
int3
into
out
ss
mov
cmpl
fwait
loop
fcompl
push
xor
repnz
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
rcrb
mov
adc
js
xor
push
dec
pop
daa
jecxz
cmp
fcmovu
push
loope
mov
insb
incl
js
sbb
pusha
mov
mov
xchg
push
lret
sub
in
sub
aad
pop
push
js
outsb
je
jne
icebp
scas
push
call
lods
lods
out
mov
mov
shrb
cmc
mov
mov
idiv
sbb
imul
inc
aaa
bound
and
inc
push
adc
and
imul
push
sub
sub
scas
inc
or
mov
je
push
adc
adc
daa
jno
mov
or
fdiv
mov
cmp
sti
pop
les
xchg
or
fldcw
subb
js
or
mov
mov
imull
cmp
je
out
nop
mov
dec
in
inc
pop
mov
ja
aad
push
pop
mov
add
dec
popf
mov
cmp
cli
xchg
or
jp
mov
and
les
and
dec
sbb
xor
aaa
jbe
iret
addr16
sahf
int
xor
mov
and
cmp
jne
mov
loopne
test
dec
fcoml
sub
xor
stc
pop
inc
and
push
push
bound
cmpsl
cltd
push
stos
push
cmp
orl
lret
outsl
repnz
mov
mov
and
jg
data16
mov
test
pop
scas
xchg
int
fdivs
xor
dec
outsl
scas
mov
mov
stc
sub
mov
mov
arpl
cli
xchg
add
out
in
fadd
fwait
mov
sbb
xor
fiaddl
inc
aaa
shl
xchg
dec
test
add
and
push
inc
fwait
cmpsb
cltd
jnp
dec
xchg
mov
shl
out
loope
lock
testl
test
subb
fbstp
out
hlt
mov
pop
pop
out
pop
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
leave
outsl
bound
loop
js
jle
js
cwtl
ss
add
mov
xorl
aad
jmp
mov
lods
lahf
and
jmp
cmp
push
stos
push
imul
push
inc
inc
dec
ficoml
lahf
cli
jl
jo
adc
movsb
or
mov
je
lods
xchg
lods
sarl
push
and
mov
sti
rcll
or
fxch
cmp
into
mov
dec
popf
lret
sub
jne
or
enter
cmp
xchg
mov
push
sub
aaa
pop
orb
loope
xchg
lods
mov
jmp
mov
test
push
jbe
xchg
rcr
lock
popf
sbb
dec
cmpsb
sub
outsl
sbb
insl
inc
rcrb
rcll
clc
cmp
sarl
pop
cmpsl
push
stc
mov
maskmovq
notl
nop
xor
lea
cmpsl
lahf
cmp
mov
jnp
jmp
adc
mov
jp
mov
ret
outsl
stos
mov
mov
decb
in
sub
adc
arpl
movsb
sub
shrb
xchg
outsb
sub
or
arpl
outsb
sub
lret
les
push
inc
adc
mov
or
lret
xchg
insl
and
loop
out
jl
jo
call
out
ss
cmp
arpl
loopne
je
cwtl
rcl
inc
clc
stos
pusha
cmp
pop
jl
xchg
pop
lcall
mov
xchg
cltd
pop
cmpb
push
fidivrs
rorb
xchg
jmp
mov
xchg
loopne
fildl
push
std
imul
add
ret
add
scas
cmc
nop
lcall
jecxz
push
punpckhdq
int
int
jg
inc
and
cmpsl
or
add
lods
jbe
outsl
out
out
scas
mov
inc
gs
pop
dec
fldt
jmp
roll
jmp
int
int
rcl
int
cmp
decl
adc
js
test
ds
sbb
lock
adc
and
inc
loop
add
fsts
adc
and
mov
movsb
icebp
jns
repz
test
scas
adc
pushf
and
sub
pushf
push
sub
outsl
out
es
pop
and
inc
jmp
and
sub
in
repz
movsl
inc
popf
clc
add
add
mov
movsb
shrb
and
pop
scas
sbb
mov
xor
push
pop
imul
dec
in
ja
pop
insl
inc
pop
push
cld
push
jmp
mov
scas
scas
mov
pop
cmp
shrb
ss
jge
xchg
jo
and
testb
clc
icebp
cld
mov
lods
mov
or
xchg
add
xor
push
xchg
jle
cs
cmp
jne
scas
inc
pop
test
test
fidivrs
fisttpll
xor
lret
xor
jno
push
pop
add
mov
dec
cli
mov
popf
cmc
call
push
push
insl
xchg
bound
test
xchg
sub
dec
xor
add
cmp
xor
sahf
inc
or
cmpsb
lahf
sbb
daa
mov
gs
mov
mov
scas
mov
out
fiadds
in
fwait
or
lds
sbb
or
push
sbb
push
fnstsw
inc
cmp
mov
sub
icebp
divl
or
add
mov
push
fwait
rcll
xlat
sub
sti
and
inc
cmpsl
dec
enter
mov
stos
mov
jge
add
xor
xor
mov
in
mov
jnp
lret
mov
jno
push
lock
ja
in
sub
mov
mov
push
xor
push
cld
jmp
lret
xlat
vpsubusw
lret
xor
outsl
pop
lock
js
jle
js
xor
in
in
in
cld
dec
inc
mov
or
out
xrelease
ss
xor
es
mov
fcomps
inc
mov
dec
adc
xchg
lahf
mov
loopne
insl
orb
adc
divb
push
outsb
aam
pop
fldcw
push
mov
jge
adc
dec
xor
cmpsb
stc
shll
push
aas
sbb
lods
mov
inc
mov
jle
jge
inc
shl
pop
xchg
xchg
addr16
xchg
and
sbb
ret
mov
pop
push
dec
and
jae
dec
test
lret
jg
fwait
push
enter
int
addb
fcoms
cmp
jle
aaa
jno
push
jnp
outsb
into
pushl
cli
mov
inc
mov
add
js
nop
jb
data16
sub
in
or
shlb
mov
inc
pop
dec
jb
and
push
adc
cmpsl
or
push
pop
or
int
push
xchg
sbb
xor
sub
dec
sub
and
adc
mov
aam
lahf
fwait
jne
je
or
xchg
or
mov
test
push
xor
lret
xchg
sub
sarb
add
mov
and
notb
or
push
jne
add
movsb
hlt
inc
adc
stc
movsb
dec
mov
inc
ret
stc
xchg
lcall
jae
xchg
out
mov
arpl
es
lret
fildl
jb
les
cmpsb
cmp
mov
add
cmp
int
or
aas
mov
adc
and
xchg
int3
imul
and
sub
push
fs
pushf
sarl
lock
push
jb
in
mov
lret
stos
aas
mov
push
ror
ljmp
push
adc
adc
adc
xor
jmp
enter
iret
rcl
mov
cli
push
sub
jle
js
jmp
popa
dec
fnstcw
and
repz
pop
enter
sub
sub
leave
push
mov
fs
stc
inc
mov
repnz
ret
lds
fsts
test
push
dec
cmpb
fstl
pop
add
dec
cli
xchg
mov
xchg
push
inc
addr16
sbb
mov
xlat
jae
add
in
sub
call
jl
sarl
add
mov
pminsw
mov
push
jb
sub
arpl
inc
sub
dec
test
xor
addl
sbb
jo
mov
mov
inc
push
faddl
adc
fbstp
jge
dec
scas
sub
sti
fwait
push
push
sbb
je
loope
ss
mov
fdivrl
sub
rcrb
sbb
cs
insl
inc
cmpsb
fcomip
mov
xchg
xchg
je
imull
std
adcl
add
ret
mov
dec
sbb
stos
cmp
mov
and
add
add
in
xlat
mov
out
pop
or
push
out
push
mov
lret
fisttpl
xor
test
sub
stc
inc
push
popa
loopne
inc
dec
sbb
es
cmp
in
test
lcall
xor
inc
iret
dec
incl
cmpsb
and
jmp
out
xchg
jns
or
and
les
jne
xchg
inc
loope
xor
out
test
push
push
rcr
mov
aad
dec
dec
pop
jmp
cmp
in
sbb
dec
pop
es
add
mov
xor
enter
fwait
jae
add
in
adc
shr
push
fdivl
ret
lret
or
imul
mov
rcl
xchg
jno
jne
sbb
and
data16
or
jge
mov
or
je
jne
lret
sarl
imul
cmp
movsl
lcall
add
into
leave
leave
rcr
fldcw
stc
push
fwait
and
adc
js
movsb
mov
xor
pop
hlt
mov
xchg
rorl
mov
xor
jbe
xchg
mov
add
loop
dec
xchg
mov
in
imul
adc
cwtl
shrb
dec
loopne
movsl
xchg
pop
mov
sar
mov
in
push
outsb
out
cwtl
push
mov
xchg
ret
xor
fwait
or
jne
xor
cmc
jbe
xchg
push
add
into
jbe
push
loopne
mov
xchg
jns
leave
je
popf
jmp
daa
movsb
adc
in
orb
xor
jae
aam
dec
adc
cwtl
sar
jg
xor
iret
cmp
xchg
xlat
ja
mov
in
dec
add
into
testl
add
pushf
lcall
mov
shll
mov
cmc
cwtl
cmpsb
mov
mov
ret
loope
xchg
jns
add
rol
test
or
std
push
mov
nop
jno
dec
jle
jbe
inc
xchg
incl
lods
addl
test
or
mov
dec
xchg
mov
jnp
inc
cltd
rclb
shr
pop
ja
insl
mov
pop
int3
adc
cwtl
cmp
fidivl
push
add
or
dec
jns
inc
inc
les
ja
lcall
mov
pop
fstl
push
pop
add
das
fcomip
mov
cwtl
scas
popl
inc
ss
inc
lret
cmp
xchg
pushf
and
cmp
repnz
sahf
idivb
into
movsl
cld
or
sahf
mov
int3
pop
sahf
inc
adc
xchg
lahf
pop
sub
lods
adc
pop
lret
xchg
lahf
and
xorl
sub
jmp
sub
xchg
dec
cld
ljmp
mov
xor
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
sar
test
call
js
in
sub
leave
ds
push
repnz
movd
mov
data16
push
inc
mov
push
in
lret
and
mov
push
lahf
ret
roll
int3
rolb
pop
and
jg
jp
mov
cmp
mov
mov
jmp
mov
hlt
jp
push
pop
ds
add
inc
or
ret
inc
lret
addr16
daa
sub
lcall
int3
push
mov
lock
mov
xchg
es
dec
pop
push
mov
arpl
ljmp
in
movsb
in
bound
push
jnp
push
adc
jb
dec
ret
pop
shrb
sub
pop
int3
mov
jno
mov
dec
xchg
jo
stc
in
jbe
int3
lods
and
lret
cmp
sub
or
jp
lock
jnp
scas
pop
jns
and
cmp
int
mov
nop
dec
mov
jg
sub
sub
mov
cltd
aaa
dec
mov
out
mov
jnp
repnz
adcb
sbb
xchg
scas
cmc
jp
fcom
push
divb
dec
in
outsl
mov
arpl
arpl
out
outsl
cmp
aaa
cmp
mov
mov
mov
jb
subb
dec
and
cwtl
mov
add
std
inc
mov
aam
jbe
mov
test
lds
pop
cmpl
jge
cmp
push
pop
pop
repz
push
cld
stos
jecxz
ret
cwtl
push
and
push
hlt
jns
and
jae
dec
jno
and
push
push
cmp
xor
pop
subb
mov
sbbl
dec
test
ja
ret
imul
test
arpl
jno
mov
pop
fistpl
xchg
xchg
or
mov
iret
lahf
push
aad
subl
push
pop
loop
fwait
hlt
and
in
int3
jnp
sahf
out
dec
roll
pop
jmp
push
into
push
fidivs
add
jmp
cmp
rol
jb
dec
pop
pop
ret
push
out
jg
adc
js
dec
jg
mov
test
adc
pop
dec
in
scas
mov
jo
add
paddusb
inc
mov
hlt
or
sub
and
pop
push
and
jb
cmpb
jecxz
data16
cmp
leave
imul
mov
dec
outsl
xor
cltd
adc
mov
pop
xchg
jae
mov
mov
jb
in
fstps
inc
dec
sti
or
lret
mov
loop
cmp
aas
sub
pop
mov
dec
lahf
pop
lret
adc
cs
fists
adc
adc
jno
daa
pop
and
mov
addr16
cmp
nop
sbb
std
shrd
scas
filds
pop
push
mov
mov
aad
push
cmp
mov
or
mov
ljmp
hlt
jle
roll
out
ds
insl
fcomps
mov
movsl
xchg
jnp
mov
push
xchg
mov
jno
les
cli
sub
inc
loopne
pop
lret
pop
sbb
imul
push
sbb
js
jmp
xchg
outsb
test
pop
int3
lock
push
popa
daa
and
sbb
cwtl
jo
sbb
cli
xchg
pusha
incl
and
jo
mov
jmp
inc
pop
xor
pop
cli
jae
enter
aam
push
sbb
call
push
add
sbb
cld
pop
adc
cmp
movsb
xchg
das
gs
aam
scas
xor
mov
dec
lret
add
popf
jns
xor
scas
ret
mov
push
loop
ljmp
push
mov
jg
orl
sub
lock
insl
ja
popf
pop
movsl
and
add
arpl
sahf
lea
divl
popf
iret
xchg
and
dec
cmpsb
outsb
cmc
mov
addr16
adc
mov
jmp
rol
enter
lret
pop
jp
jecxz
dec
push
jle
js
sbb
leave
cmp
push
xor
adc
insl
insb
jns
inc
xchg
movsb
cmpsb
insb
ret
sub
ljmp
mov
cmp
mov
mov
xorb
jb
arpl
scas
add
jae
testl
out
movb
fldenv
mov
mov
pusha
movsb
movsl
popf
mov
lods
dec
jge
xor
jmp
mov
pop
jmp
jmp
lcall
xchg
cmp
repnz
sub
mov
jecxz
or
test
lods
in
rcrl
jle
cmp
cmp
mov
fwait
sbb
loop
cmp
or
or
mov
dec
push
jmp
push
jne
orl
dec
out
addr16
mov
into
stos
or
fs
push
push
loopne
push
shll
mov
adc
loop
jb
cmpxchg
in
mov
rcrl
mov
inc
ss
jmp
iret
jg
or
out
insl
pop
nop
jmp
enter
cli
lcall
inc
xor
popa
xor
mov
mov
in
xchg
inc
outsb
jnp
jbe
pop
fbstp
jae
jecxz
pop
pop
sbb
cwtl
sub
mov
fadds
imul
xchg
and
inc
jle
idivb
mov
jmp
push
std
push
mov
mov
scas
and
pop
es
test
addr16
xchg
mov
jp
addl
fidivrl
mov
sbb
jle
cltd
mov
and
vpmadcswd
div
js
or
stos
loope
and
pop
arpl
xlat
or
lock
lock
mov
mov
test
cmp
fwait
mov
subb
ret
stos
pop
dec
jp
pop
repz
dec
addb
ret
xchg
rcrl
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
mov
add
jg
adc
js
cli
cmpsl
fwait
push
mov
in
pop
movsb
sub
dec
cmpsb
sub
pop
int
push
loop
xchg
cs
call
lret
ret
ss
iret
add
pop
out
and
xchg
les
inc
push
lods
jno
decb
add
out
fs
lahf
into
jns
aaa
add
inc
jmp
jb
pop
pop
xor
dec
divl
mov
pop
imul
insl
inc
dec
mov
jp
sub
lods
push
add
ds
push
adc
push
sub
mov
ja
scas
shl
lods
loop
xchg
xor
cmc
cwtl
in
loope
pop
cmp
icebp
notb
bound
movsb
cmp
dec
add
subl
mov
call
xlat
cwtl
nop
and
jmp
out
movsl
lcall
fwait
sub
or
xor
jp
push
repnz
xchg
inc
mov
sub
jns
movsb
mov
sti
pop
sahf
icebp
orl
fistps
out
sbb
inc
cld
or
xor
inc
and
in
shrb
arpl
clc
mov
or
repnz
jae
or
dec
dec
dec
pop
jbe
mov
pusha
cmc
stos
je
je
and
mov
mov
pop
jp
sub
adc
mov
outsb
sbb
jp
sarb
pop
pop
test
push
inc
shld
push
jl
mov
xchg
dec
mov
int
mov
ret
arpl
clc
pop
mov
js
mov
add
cmp
out
lds
xchg
ljmp
lock
mov
fucomi
cmp
or
sub
mov
xchg
shlb
enter
inc
push
mov
adc
leave
pop
shl
in
sub
hlt
leave
xchg
jno
xchg
jg
pop
mov
cmpsl
mov
push
scas
xchg
xchg
jae
aaa
push
movsb
aas
bound
enter
rol
outsb
lahf
aas
out
jno
notl
jo
out
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
mov
add
sbb
jg
adc
js
mov
cmp
adc
xchg
test
or
mov
shll
pop
aad
and
inc
test
dec
mov
sbb
sub
sbb
inc
test
fdivl
mov
push
add
rcrl
xchg
jnp
outsl
cmp
daa
insl
cmpl
push
jo
xchg
std
jnp
pop
test
pop
mov
xchg
es
ficoml
inc
ret
popf
in
push
push
sti
addl
sbb
call
adc
out
sbb
push
xchg
popf
aam
movsb
stos
sar
mov
inc
xor
and
mov
jl
add
mov
repnz
mov
mov
ret
stos
imul
test
aad
nop
bnd
fdivp
mov
cmc
movl
sbb
lods
dec
add
adcl
repnz
adc
jle
dec
dec
scas
out
dec
in
sahf
fstl
pop
sbb
arpl
js
jg
and
cld
jbe
orl
arpl
mov
ss
insl
cmc
lods
out
adcb
mov
aaa
loopew
xor
mov
jns
inc
cld
mov
enter
xchg
iret
cli
xor
push
xor
ja
xor
aas
ret
mov
stos
and
mov
fucomp
or
stos
cmpsb
or
xor
or
es
movsl
fistpll
jne
push
orb
stos
out
iret
xchg
icebp
adc
xchg
mov
jo
pop
and
pop
push
inc
sbb
gs
mov
jne
popa
xchg
fimuls
jp
xor
scas
ret
call
mov
mov
stos
mov
gs
clc
xchg
inc
out
jae
push
mov
xor
add
sti
cmpsb
sbb
pop
mov
shl
test
fcmovnbe
jo
rolb
add
into
iret
into
ror
aad
aad
mov
mov
xor
jg
adc
js
arpl
call
testl
int
push
insl
ret
notb
ja
adc
int
out
test
inc
xchg
xlat
pusha
lret
call
lods
inc
xor
mov
mov
add
sti
aas
xchg
and
std
daa
push
push
dec
ret
mov
stos
and
sub
xor
out
sbb
aas
test
pop
pop
imul
mov
inc
push
or
jbe
out
mov
mov
dec
fsts
shr
stos
les
pop
addr16
mov
dec
test
pushf
or
test
mov
jae
sub
mov
pop
sub
das
xchg
cmp
test
fdivrl
sbb
ret
add
push
insl
enter
lods
or
mov
imul
push
cld
adc
xor
dec
popa
fucomi
or
nop
xor
add
jae
mov
jnp
mov
mov
jge
bound
jp
pushf
jmp
pop
jb
dec
xor
out
sbb
jge
inc
stos
xor
or
mov
dec
test
lock
push
mov
inc
mov
out
orl
jbe
inc
mov
add
pop
add
push
out
add
adc
sub
pop
sbb
daa
jle
adc
fisttpl
push
mov
xor
cmp
push
mov
shll
in
ret
cs
ds
adc
in
ds
lcall
int
sbbb
jae
data16
imul
je
jb
ja
pop
inc
mov
push
cmp
jl
jno
sub
int3
fwait
popa
cmpsl
mov
fiadds
dec
push
idiv
and
mov
insl
inc
push
cmp
nop
pop
insb
pop
xchg
pop
jmp
ljmp
inc
sarb
sahf
or
mov
or
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
xchg
and
mov
outsl
lds
aad
push
or
pop
xlat
add
jae
gs
mov
cmpsl
push
add
sbb
cmp
mov
lods
xor
in
xchg
xchg
pop
push
popa
mov
stc
pop
loope
cmp
sarb
pop
shrl
mov
or
dec
inc
xchg
stc
ret
jmp
ljmp
sbb
test
jl
xchg
ficompl
stos
sbb
push
pop
cmp
imul
push
lock
insl
xchg
xor
sub
pop
and
out
mov
psllw
xchg
nop
pop
repz
out
and
push
mov
push
jg
repnz
fidivrs
push
and
mov
sub
gs
cmc
or
mov
jne
sbb
xchg
and
sbb
pop
jb
jne
mov
jnp
ljmp
lods
sub
jmp
test
sbbb
popf
inc
movsl
fnop
and
fcomp
pushf
hlt
iret
insl
xchg
mov
sub
sub
cmp
jle
and
inc
pop
jb
cmp
mov
mov
faddl
pop
fldl
mov
jmp
mov
popa
dec
outsl
adc
jge
add
fcoms
daa
fimull
in
stos
lds
scas
fwait
xor
jle
xor
test
lds
adc
or
repz
mov
mov
lods
push
push
push
adc
cld
imul
xor
push
mov
insb
pop
movsb
scas
cmp
dec
inc
ret
mov
sub
sub
adc
mov
adc
les
orb
fists
data16
push
push
cld
jecxz
inc
scas
push
into
push
lods
fdivp
sub
pop
rcr
lahf
das
fnstenv
jmp
push
out
and
push
jl
jo
add
fwait
outsl
inc
in
pop
adc
add
xchg
daa
mov
movsl
mov
push
std
cmp
cmp
dec
test
jb
lds
in
es
hlt
and
jge
enter
jne
jns
cmp
xchg
push
lods
and
cmpsl
stc
iret
iret
mov
mov
pop
in
pop
jne
in
push
imul
cmp
sbb
cmp
sbb
mov
jns
or
pop
int
test
pushf
loope
lcall
sbbl
jne
jbe
aaa
out
jge
add
pushf
jp
in
popf
push
aaa
xchg
lods
inc
js
repnz
add
xchg
mov
fnstsw
xor
mov
scas
in
or
adc
push
add
dec
sbb
sbb
mov
rcr
mov
pop
subb
or
int
pop
xor
lods
pop
mov
mov
fs
mov
std
shlb
ds
in
add
jmp
insb
xor
adc
aad
sbb
int
repz
orl
cmpsb
sahf
and
pop
xchg
pushf
cs
or
loop
faddl
int
lods
fnstsw
xsha256
cmpsb
adc
out
lock
or
or
shrl
xchg
mov
lcall
push
cmpsl
leave
les
fiaddl
jns
icebp
lods
aad
fldt
mov
lods
fwait
lds
dec
pop
pop
shl
push
pop
pop
into
fadds
into
mov
mov
test
dec
sbb
dec
xor
fnsave
ds
popf
push
cs
fbld
scas
jo
fsubs
mov
sub
clc
cmp
lock
mov
mov
aad
mov
lret
cmp
cmp
icebp
lahf
fs
cli
and
call
jge
adc
mov
dec
mov
xchg
je
lock
gs
in
push
inc
mov
push
pop
cmp
mov
sti
pop
rcl
cmp
adc
bnd
push
jl
cmpsb
pop
fmuls
scas
std
dec
mov
and
mov
int3
adc
mov
fmuls
jg
in
xor
cmp
les
stos
jmp
aam
pushf
loope
mov
bnd
xchg
dec
pop
push
add
jbe
jae
cmpsl
les
cmp
inc
cmp
or
in
mov
rol
inc
add
stc
xorps
addb
jo
fs
inc
std
cmp
jecxz
lcall
stos
push
xor
pop
aas
andb
imul
mov
and
js
ja
test
xchg
mov
dec
xchg
iret
push
xchg
data16
ret
jecxz
or
pop
lds
pusha
and
dec
xor
pushf
ret
stc
loop
lret
sbbb
rorl
jno
in
jecxz
mov
pusha
add
lret
xlat
sbb
pop
jne
sbb
std
inc
push
mov
pop
ds
mov
jnp
inc
addr16
in
cltd
sbb
bound
jae
jl
lea
aam
cmp
mov
cmp
sbb
xchg
mov
es
sbb
cmp
fbld
mov
adc
out
pop
jp
leave
fistps
shr
xlat
lahf
inc
push
add
xor
into
leave
jmp
nop
add
pop
cs
dec
dec
jl
mov
mov
sbb
mov
sub
sub
xor
cmp
push
add
cmp
clc
dec
cmp
dec
add
sbb
icebp
cmp
stc
cwtl
ja
lahf
sbb
es
jl
or
add
dec
sbb
mov
xchg
adc
repnz
cmp
mov
xor
mov
jo
sub
fisubrl
test
call
jge
mov
cmp
xchg
mov
mov
or
and
cmpsb
jmp
pushf
negl
and
test
xor
pop
test
jg
add
add
add
dec
inc
pop
inc
pop
pop
shrb
pop
mov
push
rolb
add
std
push
loopne
lds
fistpl
or
subl
lods
mov
push
xor
ljmp
pop
adc
adc
loope
iret
dec
popf
jnp
mov
inc
jne
fistpl
out
pop
xchg
adcb
adc
mov
jle
jns
adc
stos
rorl
push
test
add
neg
inc
loopne
xor
sub
mov
pop
lock
ret
mov
mov
xchg
push
imulb
mov
test
and
cli
add
jle
cmp
out
ljmp
mov
sub
popa
ret
outsb
push
lcall
pop
bound
xor
sti
pushf
sub
inc
addr16
lret
stos
sbb
add
add
jbe
loope
jb
cmc
fcmovnu
jle
cmp
leave
mov
addr16
xchg
jo
pop
ss
push
mov
sub
dec
pop
test
aam
push
pop
aaa
out
andl
pushf
xchg
mov
lcall
jo
inc
sub
push
sub
test
jns
insb
mov
int3
imul
add
mov
and
adc
sub
mov
inc
lods
notl
cmp
call
mov
adc
fstps
adc
inc
push
mov
mov
and
fcomps
hlt
mov
fsubrs
outsl
mov
adc
enter
sub
cmp
out
into
xor
or
and
test
pop
xor
leave
lret
leave
sbb
ficompl
pop
adc
push
push
icebp
fldt
ret
ljmp
mov
mov
push
inc
fs
fiadds
mov
jge
aad
bound
lret
sahf
push
lret
cmp
mov
addl
pop
lock
dec
mov
push
add
insb
cltd
or
int3
xor
dec
inc
pusha
scas
xchg
push
mov
jo
xchg
mov
xor
cmp
dec
xlat
mov
push
rcll
scas
out
and
ret
outsb
in
int3
lds
pusha
pop
push
push
jne
or
push
lods
inc
push
test
inc
cmpsl
int3
inc
inc
xchg
jecxz
cmpl
aas
mov
lea
aaa
mov
loopne
mov
mov
pusha
cmp
xor
push
in
xchg
pop
and
inc
scas
decl
mov
cli
pop
adc
insb
pop
mov
sub
fcomps
push
in
int
and
push
movsb
pop
xchg
jg
ja
lcall
lods
fwait
cmp
fmull
jb
or
insl
popa
jns
nop
rcr
sbbl
push
inc
leave
push
jo
fwait
xor
icebp
lahf
mov
inc
mov
fcomps
jmp
xchg
mov
mov
out
ffree
push
jae
sub
loop
push
out
sub
in
sbb
out
loope
cld
out
cmpb
cmp
loop
add
mov
mov
enter
dec
gs
movsb
insb
cmp
xor
push
pop
scas
cwtl
shll
js
mov
jmp
xchg
fnstsw
cmpsb
pop
push
sub
pop
jns
insb
xchg
mov
add
fcmovnb
out
xchg
xor
adc
mov
iret
cmc
pop
cmpsl
cmp
test
inc
mov
imul
pop
dec
outsl
addr16
shl
or
mov
jns
jne
xchg
xor
push
cltd
mov
cli
mov
xchg
std
gs
out
mov
xchg
jecxz
mov
cmpsl
clc
pop
mov
imul
lods
fildl
test
stos
mov
jmp
js
push
test
cmp
iret
cmp
or
repz
add
bound
mov
pop
jb
mov
cmp
inc
cmp
ds
sbb
cmp
jbe
iret
xor
scas
mov
jp
sub
and
jp
cld
rcr
test
scas
add
adc
lahf
push
test
sbb
mov
cmpsl
shll
cld
pop
in
sub
dec
push
lret
jg
js
shrb
cmp
push
lret
inc
adc
arpl
fistps
jns
adc
sbb
sbbl
mov
and
fs
sahf
dec
les
and
ficoml
loopne
ret
jb
mov
push
dec
jl
sbbb
add
bound
push
pop
out
pop
mov
xchg
dec
sbb
xchg
scas
lahf
sbb
xor
lret
mov
sbb
ljmp
push
stos
lret
mov
es
sub
inc
in
mov
jl
es
sub
lcall
cmc
adc
xchg
add
movsl
fwait
xchg
xor
xchg
xor
call
and
mov
inc
std
data16
pop
shrl
roll
in
mov
cmp
or
cmp
xchg
sbb
icebp
fiadds
sub
push
mov
or
push
xchg
std
cmp
cmp
pop
adc
pop
mov
pop
xor
xlat
cmp
lret
push
push
pop
xchg
dec
ss
fimull
mov
add
lock
stc
dec
cmp
push
out
sub
pop
jo
in
lods
loopne
hlt
scas
pushf
rclb
mov
nop
cmp
es
outsl
and
and
add
subb
cmp
mov
mov
push
and
xor
and
stos
ljmp
outsb
neg
hlt
dec
out
int3
add
jle
dec
cmp
js
cmp
inc
pushl
xchg
jb
ds
lahf
inc
jbe
xor
adc
mov
bound
lahf
add
add
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
and
xchg
mov
add
lods
mov
test
int3
sbb
jbe
ds
ja
enter
push
rclb
jb
popf
fldln2
je
adc
xorb
lods
adc
jmp
push
sbb
xor
fld
and
jmp
sbb
push
pop
push
push
cmp
mov
loop
in
xor
jne
xor
mov
or
xchg
in
or
add
push
adc
lcall
add
mov
inc
lea
cmpsb
adc
mov
inc
inc
test
jno
mov
xor
test
xchg
mov
cli
xchg
inc
cmp
or
jbe
push
lods
or
and
xchg
fs
add
mov
ret
fwait
xchg
inc
imul
mov
lods
jne
std
sbb
es
fidivl
orl
sar
es
mov
js
ret
mov
push
loope
xchg
adc
leave
or
fs
dec
jns
push
lds
pusha
xchg
push
xchg
xchg
or
fsubs
daa
leave
push
sub
cld
subl
or
in
mov
cmpsl
add
mov
jo
lock
addr16
xor
mov
push
pop
stos
aas
inc
add
in
imul
scas
imul
loop
loopne
les
push
inc
push
sbb
pop
add
jmp
push
sbb
stos
out
repnz
nop
mov
cld
inc
cmp
shl
xchg
int3
mov
pusha
pop
or
in
mov
cs
je
xor
push
in
inc
sub
push
dec
cs
jg
fstpl
lea
pop
bound
loopne
lahf
adc
pop
mov
xchg
iret
sti
pusha
gs
daa
sbb
push
jo
adc
cld
and
and
dec
mov
test
sar
mov
mov
inc
aas
push
jg
into
cmp
jbe
push
dec
push
outsl
int
add
cmc
mov
inc
mov
fsubrl
or
fbstp
adc
jno
rol
icebp
mov
lret
repnz
shlb
test
int3
sub
pop
cltd
stos
xchg
sub
pop
and
adc
jo
xor
sahf
dec
psubusw
mov
lock
and
pop
jne
cmc
mov
rol
lret
cs
pusha
arpl
int
mov
popa
jb
test
aaa
testl
fdivp
loop
stos
jmp
out
out
jne
mov
lret
adc
sbb
lea
enter
mov
iret
scas
xlat
sahf
outsb
rcll
ja
add
pop
cmp
nop
cmpsl
xchg
push
aas
push
sub
lock
sub
popa
in
dec
xchg
nop
lods
xchg
arpl
xchg
xchg
lret
cmp
sbb
orl
movsl
scas
imul
int
mov
dec
ds
packuswb
imul
lods
mov
fwait
adc
adc
in
jae
imul
cmpl
rorl
inc
and
outsb
imulb
pop
iret
cmp
adc
cmpsb
ja
dec
les
lcall
inc
xor
dec
xor
sbb
mov
cltd
aam
sbb
push
mov
ret
pushf
into
xchg
fcmovbe
lods
dec
jmp
or
pop
test
lds
mov
inc
or
pop
cmp
aad
sbb
jle
adcl
call
je
mov
ss
dec
mov
mov
into
mov
lcall
and
movsb
inc
adc
add
jnp
jecxz
je
inc
cld
sbb
adc
sti
addb
mov
mov
pop
jns
and
mov
add
push
bound
xchg
and
sbbl
cmpsl
push
sarb
das
leave
repnz
cmp
cwtl
add
ret
jp
ss
repz
bound
pop
xchg
ss
lcall
sbb
loope
adc
je
dec
in
loop
add
out
clc
add
shlb
repz
and
iret
iret
and
mov
std
sub
daa
push
mov
popa
pop
sub
or
xor
cmp
lock
mov
lret
and
or
iret
mov
jo
adc
mov
or
jo
call
imul
outsb
cwtl
xchg
pop
mov
lods
pop
lsl
out
out
mov
mov
adc
ret
push
xor
lds
shll
adc
cmp
sub
jns
rcll
mov
jle
test
into
push
loopne
sbb
mov
pop
xchg
pop
sbb
fidivl
imul
jg
jl
and
gs
mov
ds
pop
or
stos
and
adc
xor
mov
ss
divl
pop
mov
add
sbb
jo
push
sub
push
rcr
sbb
push
mul
sub
loop
hlt
jp
push
aaa
pop
cltd
jmp
hlt
cmp
sbb
cmp
jge
inc
sub
mov
mov
or
loop
outsl
add
jge
cmpl
daa
imul
mov
mov
mov
inc
xchg
pop
leave
loopew
cld
and
insb
nop
das
xchg
pop
ds
sbb
inc
and
mov
dec
jmp
mov
mov
xor
dec
hlt
pop
or
in
dec
fdivrl
popa
movsb
sub
add
xor
data16
into
cmp
jae
fdivl
les
lret
sti
cmp
sub
pop
loop
jno
or
add
add
add
inc
dec
dec
pop
pop
push
sub
xchg
xor
movsl
nop
add
addb
add
in
sub
jmp
in
in
aaa
in
sti
fldl
jno
ret
sbb
test
xor
pop
les
and
mov
outsl
sbb
push
ds
popf
lret
xchg
arpl
cld
fdivl
lcall
mov
seto
jbe
jg
movsl
push
idiv
pop
push
leave
fldcw
ja
inc
cli
lods
push
xchg
in
gs
ja
pushf
pop
sarl
movsl
sub
mov
and
arpl
iret
lods
cmp
xor
mov
sti
mov
push
pop
push
movsb
mov
mov
sahf
cmp
jae
sbb
push
scas
pop
stos
and
push
stc
int
loope
stc
fisubl
inc
xchg
xchg
ljmp
test
sahf
stos
je
adc
leave
divl
sti
xchg
loopne
inc
addr16
jnp
xchg
mov
les
dec
ja
xor
aad
psrld
mov
mov
ja
mov
icebp
jecxz
repnz
dec
pop
adcb
or
ror
loopne
cmpsb
cmp
lds
xor
imul
je
sarb
jnp
fs
sub
push
pop
lcall
add
loope
arpl
lock
inc
and
cmp
aas
mov
cmpsb
pop
out
push
jnp
cmp
xchg
cld
mov
jge
rcll
mov
or
je
adc
add
jg
mov
sti
fcoms
or
mov
xchg
jae
push
sahf
jp
jp
cmpsb
les
sbb
jecxz
add
fucom
and
mov
pop
mov
lds
inc
sarb
jle
mov
ss
fwait
mov
cmp
in
jno
data16
adc
jl
stc
stc
mov
lds
push
clc
dec
cs
jno
sbb
loop,pn
mov
decb
ja
das
insl
lret
mov
mov
fwait
je
cmpsl
fcomps
add
push
stos
xchg
orb
lea
sub
repnz
push
ret
jl
fldt
and
ja
jb
inc
shl
fisubrl
sbb
inc
inc
addb
inc
test
jle
push
add
fidivs
cmp
add
xchg
cli
xchg
add
out
bound
movsb
std
lcall
sub
sahf
and
mov
xchg
xchg
lds
gs
push
push
insl
adc
sbb
jo
shlb
vmwrite
xchg
push
fistpll
dec
push
arpl
neg
sub
cmp
xchg
cmpb
pop
fimuls
in
lea
jle
repnz
imul
sti
xor
lods
lea
fwait
pop
fmuls
stos
mov
or
data16
mov
and
call
mov
aam
scas
rclb
notl
into
push
xchg
cmp
rcrb
dec
orl
sbb
jle
ror
mov
out
leave
jle
and
sub
fmuls
xchg
icebp
xor
or
arpl
or
in
cs
jge
mov
lock
pop
adc
stc
mov
cli
push
jle
dec
or
test
inc
fbld
pop
mov
cmp
lods
sub
and
in
push
and
in
mov
movsl
xchg
lods
jbe
jle
sbb
jmp
in
mov
add
mov
lret
add
icebp
pusha
xchg
outsl
popa
dec
int3
jne
scas
bound
dec
imul
and
aad
mov
leave
sub
iret
inc
xchg
ss
mov
int3
mov
aad
mov
in
cmp
mov
and
stos
sbb
mov
adc
repnz
cli
cmpsl
sbb
pop
inc
mov
mov
scas
jne
sbbb
test
outsb
loope
lods
and
loop
out
lret
aas
xlat
bound
jbe
adc
lods
adc
in
rorb
jae
mov
xchg
jp
cmp
push
and
cmp
xchg
out
xchg
dec
inc
xor
push
ss
test
pop
iret
or
jne
cmp
sub
jge
xor
mov
rolb
pop
push
out
cli
out
lahf
ljmp
and
aad
sarl
dec
ss
push
adcb
fisubrs
in
jge
push
mov
add
in
jmp
adc
mov
rorb
or
mov
loope
lods
xchg
data16
jp
fists
mov
fmul
sub
adc
or
call
xor
lahf
jbe
inc
mov
int3
cmp
jnp
sarb
pop
xor
mov
insl
pop
repz
cmc
cld
lods
jle
aaa
cmp
jl
and
idivl
jg
jno
or
call
test
xlat
mov
push
jne
addb
shlb
xchg
lahf
cli
and
cmpb
jp
sub
cld
pop
fs
jmp
insl
ja
push
mov
clc
push
ja
rclb
jo
lock
ss
stc
mov
inc
cmp
xor
idiv
pushf
into
stos
mov
sbb
push
insl
dec
pop
add
lods
decl
aad
mov
pop
rcrl
adc
inc
pusha
mov
pop
aad
jge
stos
pop
into
int
xor
aad
call
and
call
xor
divl
cmc
sbb
lcall
scas
push
jns
jae
inc
pop
or
in
cltd
fbstp
clc
lahf
mov
jns
sub
mov
repnz
mov
xor
add
sub
sbb
adc
sar
out
xor
ficoms
bound
mov
add
add
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
xchg
push
and
add
addb
add
fsubp
mov
test
cld
pop
jl
imul
mov
imul
mov
cmp
xchg
out
bound
pop
pop
mov
mov
cmc
adc
loop
and
mov
xchg
cwtl
scas
insb
pop
push
popf
lahf
jle
and
out
jg
mov
or
lret
test
xor
hlt
arpl
out
insl
xor
in
ljmp
fistpl
in
xchg
pop
cmp
pop
push
inc
insl
add
test
push
fcomip
pusha
test
jl
push
jl
sub
aaa
xlat
mov
push
mov
mov
sub
arpl
ret
leave
xchg
adc
add
push
fwait
pop
jg
and
jae
stc
or
in
scas
sbb
out
xchg
jbe
add
adc
jne
adc
adc
xchg
sbb
int3
out
inc
add
cmp
idivl
fnstsw
sarb
sahf
push
cld
aad
mov
das
jno
xor
mov
and
push
cmpsb
int
xor
jns
sbb
sbb
fs
xor
fdivrl
and
sbb
pop
dec
or
xorb
negb
sub
mov
add
mov
mov
xor
mov
mov
addr16
loopne
fwait
inc
inc
inc
xor
sbb
icebp
mov
sbb
lahf
imulb
lcall
jge
jge
fmuls
mov
push
ja
inc
iret
testl
xor
jae
fxch
subl
adc
jnp
mov
call
stc
and
or
inc
jns
xor
icebp
mov
outsb
leave
and
movsb
stos
fldl
jnp
and
loop
pop
insb
outsb
cmp
pusha
xchg
or
lods
hlt
inc
sahf
dec
jbe
mov
add
iret
pop
jb
mov
sub
mov
sbb
xchg
mov
js
ja
sahf
inc
pusha
ficomps
dec
lods
sbb
cwtl
lds
fsts
iret
xor
lock
or
mov
cmp
call
adc
inc
adc
add
sbb
xchg
pop
xchg
outsl
je
in
out
rol
mov
xchg
inc
cmpsb
mov
addb
out
addr16
jg
xor
mov
mov
std
adc
testl
push
add
orb
push
jmp
cld
and
cmpsl
and
pop
adc
push
mov
in
sub
inc
add
sub
ficomps
inc
add
cmc
or
xor
sti
pop
or
mov
add
in
add
mov
ss
hlt
out
push
call
ds
push
xchg
jns
loop
pop
in
outsl
shll
pop
lret
mov
out
fistpl
inc
push
lea
and
xchg
js
pop
pop
jae
cmp
mov
fiadds
mov
stos
sbb
xchg
fnop
mov
cwtl
sub
mov
or
xor
push
loopne
nop
jmp
adc
sbb
push
lds
loope
cmp
lds
sbb
xchg
sbb
sbb
roll
cmp
mov
inc
int
and
cld
jno
addr16
xchg
insl
xchg
mov
pushf
std
push
xlat
dec
clc
subl
jae
test
cmpsl
sbb
xor
out
rcrb
cmc
outsb
rol
fcompl
or
mov
add
and
imul
xchg
lods
filds
test
fistl
mov
fstl
or
cmc
xchg
scas
rorl
in
mov
das
and
popa
mov
push
pop
pop
jb
pop
lahf
pop
mov
cmp
and
lds
std
sub
pop
pop
lea
xchg
mulb
push
pop
orb
mov
pop
loopne
fcmovnbe
data16
xchg
cltd
fldt
mov
lods
adc
sub
fildll
test
addb
add
jno
and
push
imulb
pop
mov
mov
jl
add
sbb
and
sbb
imul
jae
xorb
xor
or
xchg
sub
pop
sbb
sub
out
mov
aas
dec
cmc
inc
test
sbb
out
daa
sbb
cmp
mov
loopne
imul
jbe
aad
in
sarl
mov
aas
scas
sbb
sbb
hlt
or
into
xchg
xlat
rolb
push
cmp
pop
sbb
lock
stos
cld
js
insb
je
mov
ja
js
pop
or
mov
leave
mov
and
mov
sbb
cpuid
jl
push
xchg
pop
mov
lock
scas
push
xor
dec
or
push
pop
pop
adc
js
stos
out
sti
loope
pop
ds
test
cmpsb
mov
ror
test
or
jecxz
lock
add
push
clc
jg
sahf
test
xor
xchg
pop
loopne
fcoml
andb
lock
js
fdivrl
mov
in
mov
cmp
rclb
clc
loope
cmp
sahf
and
xor
xchg
push
imul
jns,pn
test
decb
das
or
mov
push
mov
rol
fiadds
test
fcomps
xchg
adc
repz
pop
rolb
out
aam
mov
add
fmull
or
fildll
ret
cwtl
and
xchg
fbld
shufps
lea
xchg
jecxz
or
cmp
hlt
xchg
push
dec
lds
data16
popa
sbb
pop
fstpt
dec
pop
sbb
sub
add
sahf
mov
fsubrl
imul
sub
and
imul
lea
pop
data16
push
xchg
push
into
push
int3
fcoms
scas
popf
add
add
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
addb
add
xor
mov
jo
sbb
mov
jne
jne,pn
jo
add
fnstsw
push
out
inc
testl
inc
clc
test
add
jmp
out
add
testl
call
movsb
push
pop
jmp
pop
sbb
arpl
pop
daa
jnp
notl
imul
fistpl
out
sarl
inc
inc
xchg
jo
pop
cmp
mov
notl
gs
out
stc
rcll
scas
inc
hlt
out
mov
daa
or
repnz
dec
shlb
or
lock
mov
mov
stc
add
imul
mov
lret
flds
and
sub
jno
repz
dec
fs
xchg
cmp
or
scas
xor
repnz
insb
lret
test
hlt
cmp
cmpsb
cmp
fwait
cmp
pop
mov
mov
push
in
dec
and
cmp
and
sti
mov
les
jnp
or
push
adc
mov
lods
shrb
and
cmp
adc
push
and
add
cld
stc
loop
out
lds
inc
notb
sbb
xlat
cmp
dec
fstpt
pop
jne
lcall
jecxz
not
out
aad
add
test
popa
idivb
stos
lea
add
fs
cmp
int
and
sbb
es
jge
inc
jge
pop
jne
inc
aam
and
int
cltd
mov
scas
imull
push
cmp
jge
dec
push
cmpb
mov
test
movsl
pushf
add
aam
aas
imul
xchg
xor
xor
adc
addr16
adc
and
test
inc
mov
mov
cmp
sbb
stc
imul
repz
mov
mov
je
mov
and
ror
xchg
test
inc
fisubs
aad
sbb
insb
mov
mov
cmp
mov
addr16
adc
popf
aaa
fsubs
pusha
jne
lret
es
pop
aam
and
or
dec
or
sub
jecxz
pop
pop
xchg
mov
outsl
mov
fwait
or
cmp
orl
pop
call
mov
adc
add
mov
jbe
ret
mov
sub
in
jl
push
sahf
push
and
sub
mov
xchg
and
push
outsl
mov
jmp
dec
fimull
sti
loop
pop
mov
jo
cli
lods
push
mov
stc
aad
scas
jmp
stos
je
mov
test
dec
or
sbb
in
popa
fidivs
data16
icebp
inc
js
fsubs
xchg
loopne
hlt
out
in
mov
outsl
out
inc
xchg
sahf
rorl
mov
mov
int
arpl
xor
ss
pop
xor
repnz
jg
sbb
fnstcw
cmp
es
inc
es
mov
dec
mov
mov
sahf
pmuludq
push
mov
cmp
mov
xchg
xor
and
ret
mov
mov
imul
inc
mov
sbb
std
pop
pop
insl
xchg
lret
ss
xor
shl
movsb
inc
sahf
add
inc
pushl
sarb
push
scas
lods
jle
mov
dec
or
call
mov
xor
repz
mov
shlb
loope
jb
add
push
leave
mov
dec
xor
imul
movsl
or
movsl
xchg
mov
xor
lea
add
cli
xchg
pop
dec
or
adc
push
and
xor
fimuls
mov
mov
dec
divl
pop
cld
pop
rcll
jecxz
jmp
or
pop
jo
pop
out
ds
jl
fidivrl
mov
push
dec
sbb
pop
stos
cmp
jo
push
jecxz
adc
pop
movsl
adc
bound
adc
sarb
leave
aam
bound
fbstp
pop
jns
repnz
fimull
push
mov
cmp
aad
inc
imul
mov
aas
xlat
je
adc
push
fnstcw
xlat
popf
scas
jl
pop
pop
lea
scas
bound
pop
leave
or
repnz
aam
data16
int
push
lret
out
daa
dec
lret
sti
xchg
testb
xor
cmp
mov
push
pusha
jp
mov
xor
in
pop
in
rolb
mov
fs
movsb
pop
and
push
fstpl
daa
xchg
pop
push
enter
or
ss
jge
jp
lret
sahf
rolb
std
lock
xchg
mov
dec
mov
lea
shll
or
xchg
fimull
mov
dec
aas
sbb
inc
movsb
xchg
sub
pop
sbb
cwtl
push
rclb
or
jmp
add
nop
and
push
scas
add
dec
out
sub
push
cwtl
sbb
out
test
mov
pop
shr
sbb
mov
aaa
stos
rdmsr
mov
mov
mov
imul
daa
push
add
pop
xor
sbbb
add
int3
sarl
arpl
int3
jns
xchg
outsb
xchg
scas
dec
adc
mov
lahf
adc
inc
jns
stos
mov
stos
rcl
push
test
aam
int3
outsl
stc
pop
js
adc
pop
jae,pn
push
mov
jnp
clc
xchg
mov
dec
hlt
push
cmp
adc
stos
in
pushf
test
or
iret
xchg
adc
mov
enter
popa
pop
or
jg
mov
jmp
lock
sub
das
jmp
lock
incl
decl
jecxz
fcmovnbe
jmp
xchg
jne
js
arpl
cld
dec
push
sbb
dec
scas
hlt
mov
sub
lods
xchg
lods
fxch
mov
repz
aam
scas
neg
push
loop
aad
insb
das
scas
imul
push
push
xor
loope
insl
cmc
and
add
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
outsl
pop
movsb
add
addb
add
sub
dec
xchg
adc
addr16
ret
stos
push
ja
notb
xchg
shlb
xchg
xor
xacquire
iret
stc
cwtl
pop
pushf
dec
js
aaa
ds
dec
jge
popf
cmpsb
fistpl
push
das
test
ljmp
sbb
sbb
cli
ds
push
xor
jmp
sub
rcrl
out
jge
or
not
clc
enterw
nop
inc
iret
pusha
mov
mov
std
adcl
movsl
inc
mov
mov
cwtl
xlat
mov
mov
andl
adc
enter
mov
cmp
clc
fdiv
add
les
sbbl
jle
sub
mov
adc
ror
orb
pushw
pop
mov
fsubrs
les
push
mov
orl
jne
mov
mov
repnz
ss
outsl
mov
push
sub
dec
stos
loop
pop
ror
addr16
jbe
test
mov
gs
lcall
imul
out
inc
popf
call
mov
mov
idivb
xchg
lret
ljmp
test
call
in
loop
sub
sbb
ja
aas
sub
mov
lds
mov
inc
push
xchg
int
dec
gs
std
adc
push
xor
mov
es
jae
or
cmc
mov
or
cmp
sbb
add
xlat
mov
mov
aas
movsb
cmp
imul
lcall
mul
lds
dec
out
jg
aam
jg
rolb
jmp
pop
mov
imul
stos
adc
cmp
or
mov
jl
xchg
fidivs
inc
mov
in
jne
andb
out
sub
js
test
push
xor
popa
pusha
jp
jne
loopne
ficompl
ss
cmp
xchg
cwtl
cmp
push
xor
insl
or
mov
push
push
sbb
andl
mov
inc
xorb
test
pop
pop
movsl
stos
test
mov
inc
bound
cmc
jbe
sub
dec
cmpsl
notl
sub
mov
cmp
add
sub
rcr
stc
stc
dec
pop
sub
xchg
sbb
pop
adc
jp
lahf
dec
in
sbb
ss
test
jnp
in
jb
iret
jbe
and
cmc
fs
cmp
dec
mov
std
sub
subl
adc
cmpsl
rcrl
sbb
xlat
shlb
push
jb
test
insl
xchg
cmp
mov
pop
mov
sub
movsl
stos
pop
lods
repnz
in
rcll
adc
fisttpll
les
int3
xchg
call
int
jp
cmp
mov
das
fidivs
iret
pavgw
xchg
out
mov
cmpsb
push
inc
divl
jmp
add
pop
sahf
inc
ss
and
pop
je
ljmp
fwait
sti
or
loopne
cmp
or
outsb
fwait
mul
in
adc
mov
mov
inc
pushf
jle
mov
fdivs
popf
mov
ret
and
and
xlat
imul
push
pop
xor
sub
and
outsl
loope
sub
or
test
sarl
sbb
push
adc
mov
add
dec
bound
inc
mov
dec
and
pop
xor
dec
cmp
pushf
pop
insl
stos
cmp
or
and
es
rorb
loopne
sub
cld
adc
dec
pop
sbb
adc
lods
mov
orb
js
dec
or
push
fdivrl
cld
hlt
das
jns
aaa
mov
hlt
popf
sbb
dec
repz
lcall
pop
hlt
sbb
pop
xchg
sub
mov
lahf
mov
or
or
iret
mulb
fs
es
mov
adc
sub
push
add
jmp
addr16
push
jecxz
sbb
popf
rcll
xchg
xlat
das
arpl
sub
inc
xlat
std
pop
lret
adc
bound
ljmp
sbb
mov
jmp
ficomps
mov
fdivl
fidivrs
add
pusha
scas
xor
jnp
inc
xchg
xchg
adc
pop
imul
fwait
xlat
dec
and
movsl
xchg
mov
push
add
and
repz
insb
cli
mov
ret
push
cli
jae
cli
rclb
scas
push
dec
push
mov
or
insb
mov
and
pop
imul
mov
mov
mov
shr
pushf
pop
mov
stc
adc
test
push
add
or
lds
mov
sbb
jno
push
sub
sbb
popa
imul
lret
cwtl
imull
inc
mov
cwtl
push
or
xchg
cwtl
add
and
int3
rorb
push
and
mov
push
and
mov
fsubrl
mov
fisttpl
add
ror
cltd
add
jg
pop
in
mov
div
or
in
das
dec
jnp
movsb
sbb
push
hlt
insl
mov
jp
hlt
mov
scas
cwtl
pop
push
or
sub
adc
push
leave
fdivrl
and
dec
pop
inc
outsl
xor
jne
lds
pop
push
xor
push
pop
xor
sbb
xor
dec
loopne
push
inc
inc
ja
push
cmp
mov
xor
lds
dec
ljmp
scas
sub
subl
fwait
pop
cld
mov
sbb
push
add
mov
xlat
jnp
push
inc
inc
pop
in
fisttpl
xchg
or
sub
shl
jecxz
add
add
add
push
inc
pop
pop
pop
pop
push
dec
mov
or
add
pop
adc
mov
loop
cwtl
xchg
int3
mov
push
loopne
std
into
imul
std
frstor
sbbb
adc
shl
fadds
mov
ja
popa
mov
pop
popf
cmpsb
push
outsl
movsl
cs
push
js
push
or
arpl
ljmp
dec
push
in
add
mov
dec
std
mov
xor
call
sub
pop
hlt
dec
arpl
aaa
imul
or
outsl
adc
or
vpsubsb
imul
pushf
jmp
lret
cmp
pop
add
adc
test
push
imul
in
or
fisttpl
pop
repz
sub
repz
rcrb
test
sbb
mov
popa
dec
leave
push
imul
cmp
mov
sbb
cmp
insl
mov
push
mov
pushf
xor
lods
jle
sub
lods
clc
fstl
push
fldenv
rclb
sbb
ljmp
sbb
push
cmc
and
push
rcr
pop
inc
add
xor
sbb
push
inc
and
adc
inc
push
clc
mov
mov
jne
mov
pop
dec
xchg
pop
es
nop
xchg
orb
push
out
lea
sbb
jae
fisubs
pop
cmp
dec
push
mov
add
xchg
lret
lcall
insb
aas
and
aaa
add
cmpl
enter
sbb
xor
push
enter
xor
jnp
es
or
stos
ds
sub
mov
lock
repnz
xchg
leave
adc
fwait
sti
int
or
aad
sbb
test
lock
cli
idiv
jmp
push
lods
ds
psllw
or
xchg
aad
add
lahf
sti
lea
jge
outsb
pop
and
add
mov
xchg
sbb
mov
nop
mov
dec
leave
scas
pop
push
loope
xchg
sub
or
iret
inc
arpl
les
gs
sarl
daa
and
stos
or
xchg
cld
jmp
addr16
fsts
leave
sti
jmp
int
cmp
push
pusha
aas
cld
in
pop
mov
mov
jno
dec
mov
dec
enter
adc
jo
daa
xchg
pop
cld
dec
leave
cmp
test
js
lods
enter
mov
jp
push
push
dec
mov
insl
cmp
pop
inc
jae
cmp
mov
leave
stos
jp
mov
ss
rclb
into
fistpll
ss
cwtl
or
adcb
pushf
jle
push
setae
xchg
insb
divl
int
out
add
inc
out
stos
or
pusha
and
lret
adc
xchg
xor
pop
inc
arpl
push
out
cmp
xor
loope
mov
lds
or
aas
pop
into
lret
or
notl
mov
mov
add
lret
je
sarl
mov
repnz
gs
outsl
push
cmp
add
aas
ljmp
push
mov
adc
jle
lahf
sub
mov
mov
imul
dec
sbb
xor
lret
jne
and
and
inc
sbb
lcall
xchg
andb
mov
lods
test
mov
inc
in
clc
negb
xor
cmp
jo
pop
test
jo
mov
je
inc
aaa
xor
loope
and
xchg
pop
xchg
cmpsl
jle
dec
xor
pop
push
rcrl
subb
lcall
or
push
in
js
cmpsb
out
sarl
add
pusha
pop
jecxz
push
sbb
sti
add
push
mov
icebp
iret
bnd
pop
in
jle
dec
mov
xchg
adc
test
dec
pop
mov
cs
rorb
pop
shll
inc
add
mov
xchg
or
sbb
xchg
dec
mov
pop
rcrb
ret
sti
push
decl
cli
shll
and
xor
cmpb
movsb
push
popa
add
lcall
icebp
gs
inc
stos
movsb
rolb
pop
lret
pop
lret
mov
mov
je
adc
xchg
push
sub
mov
push
stos
into
arpl
enter
imul
and
shrb
cs
push
xchg
sub
cwtl
insl
cmp
adcb
cld
pop
cwtl
cmp
xor
mov
clc
movsl
iret
xchg
push
je
push
jp
pop
rorb
mov
sub
mov
fistpl
int3
xor
jne
or
jle
cmpsl
cmpsl
and
cmpsl
add
iret
jb
mov
addr16
adc
cltd
sub
movsb
mov
das
mov
inc
push
daa
je
jno
push
jno
dec
cmp
les
hlt
je
sbb
jae
sbb
xor
insb
fsubrs
inc
push
mov
rorl
pop
sub
mov
sub
push
pop
dec
out
cld
outsb
mov
jg
hlt
inc
sub
bound
mov
mov
dec
inc
add
mov
scas
push
shrb
mov
xchg
es
stos
and
imul
cwtl
lds
adc
test
xchg
inc
aam
aaa
push
into
cmpsl
lock
dec
inc
aad
popf
cmpsb
xor
adc
xchg
rcrb
jp
sub
rcll
jl
mov
hlt
mov
ret
shrb
inc
sti
sahf
adc
jmp
xlat
ret
cli
scas
mov
and
jbe
add
mov
sbb
fcompl
outsl
aad
dec
inc
jg
xor
mov
push
subl
cli
dec
xchg
fsubs
negb
add
cmovl
inc
xlat
andl
xchg
pop
les
add
add
add
inc
push
inc
push
push
push
outsl
pop
mov
mulb
add
addb
add
push
insl
sbb
ja
jle
xchg
out
fistl
roll
adc
cmp
jp
lcall
test
jo
cmp
cmp
mov
mov
adc
decl
adc
cwtd
sub
cmp
mov
inc
ret
sub
ss
aam
gs
data16
adc
nop
cmp
jecxz
ret
dec
jo
cld
mov
lea
stos
insb
pop
inc
popf
jns
repz
lods
push
push
xor
xchg
addl
dec
cmp
fisubl
mov
sub
cmp
lret
or
xor
sbb
fmuls
stos
ffreep
mov
add
xlat
jmp
xchg
push
mov
jnp
cmpsb
lret
jp
mov
adc
and
mov
sub
push
fstl
mov
adc
dec
mov
adc
movsb
lock
or
fwait
ds
addr16
arpl
fstps
push
insb
inc
push
pushf
sub
fs
xlat
es
nop
negb
dec
ds
cmp
loopne
mov
sbb
push
sbb
mov
std
fsubl
arpl
xor
mov
shld
mov
fdivl
dec
sub
ljmp
jl
pop
shlb
imul
dec
call
xchg
push
loop
and
popf
test
xchg
dec
jbe
out
mov
jno
mov
std
inc
cld
fsubs
std
mov
jns
xor
lods
sbb
push
data16
sti
dec
testl
test
ret
pop
jns
xchg
mov
mov
mov
xchg
mov
mov
out
cmc
lret
fisubl
shl
mov
call
and
pop
jmp
jmp
fisubl
or
std
inc
xor
push
cltd
cmpsl
call
xchg
adc
stc
mov
repz
leave
sbb
mov
sbb
movsb
lds
add
mov
fisubrl
ds
outsl
int
addr16
adc
inc
fidivl
pop
inc
ret
mov
cmpsb
fwait
rol
call
push
dec
jb
lea
dec
ljmp
pusha
and
repnz
sbb
in
in
jmp
pop
xor
and
in
mov
jge
testl
pop
fcompl
movsb
jge
stos
mov
mov
call
push
jmp
iret
fs
cmc
jmp
mov
rcll
adc
add
mov
out
lock
dec
rorl
lods
cltd
adc
mov
push
sub
cs
mov
inc
into
div
cmp
inc
jge
ja
or
pop
or
aam
inc
inc
test
decl
fcomi
scas
imul
dec
dec
push
xchg
dec
loop
push
xchg
xlat
xchg
xlat
leave
push
jge
int3
dec
lods
repz
xor
jo
mov
xchg
inc
in
into
add
movups
pop
lds
mulb
mov
add
pushf
cmc
test
cltd
xchg
xchg
out
hlt
int3
mov
or
push
fs
addr16
xchg
pop
ds
mov
pop
sbb
adc
and
or
cmp
inc
orl
and
fmull
xchg
gs
pop
insb
dec
ror
mov
neg
in
mov
stos
pop
xchg
aaa
leave
out
dec
push
pop
inc
stos
push
icebp
mov
cli
xlat
std
jnp
outsb
push
cmp
ljmp
das
hlt
pop
pop
cmp
out
jno
ffree
jg
movsl
fldt
xchg
xchg
xlat
shll
das
int
insb
cli
fildl
jb
pop
push
mov
adc
aaa
lds
rcrb
fdivs
mov
push
fbstp
push
nop
bswap
push
pop
subb
mov
ss
mov
mov
test
test
sub
in
cmpsb
sbb
push
pop
or
adc
xchg
jecxz
dec
inc
xchg
lds
sub
cltd
sub
pop
fdivl
and
xchg
aaa
fimuls
adc
add
jno
hlt
fisttpl
data16
xchg
sbb
dec
and
mov
ss
test
sub
jo
insb
std
pop
cmp
cli
pop
inc
out
push
ret
push
dec
and
push
fcmovbe
stc
cmpsb
and
hlt
mov
pop
push
and
mov
mov
push
pop
xor
jnp
cmp
sub
nop
scas
loop
pushl
cmp
push
leave
push
add
jmp
loopne
mov
es
jb
push
dec
das
in
jbe
and
stc
xchg
into
ret
enter
xchg
and
dec
out
test
ds
adc
inc
lods
sbb
pushf
ljmp
dec
dec
fnsave
lret
scas
icebp
adc
lock
movsl
adcb
xor
mov
push
pop
clc
adc
xchg
pop
enter
lea
sub
xchg
xor
xchg
inc
es
negl
ss
call
bswap
jle
testb
xchg
jno
or
rsqrtps
mov
movsl
cmp
mov
push
in
jle
aas
cwtl
rolb
cmp
fcom
mov
add
outsb
ret
mov
aas
sbb
dec
icebp
dec
pop
add
dec
add
sahf
or
and
movsb
xchg
push
and
cmp
shll
lret
xchg
dec
push
xchg
rclb
mov
in
cmpb
xor
inc
rcll
movsl
add
cld
jne
fidivrs
xchg
test
and
jp
test
inc
cmp
and
daa
mov
fnstenv
aam
ret
jge
sub
dec
inc
adc
sub
sub
mov
cltd
iret
jno
outsl
out
test
xlat
fimull
pushf
roll
add
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
sub
add
addb
add
mov
dec
ljmp
pop
mov
mov
add
jo
lods
lds
sti
sbb
add
sbb
movsb
rclb
sub
in
in
mov
cli
cwtl
push
std
sti
movsb
outsl
mov
and
cmp
out
jns
push
rclb
daa
pushf
cmp
sarl
cmpsb
and
movsb
dec
jne
nop
repz
jge
jl
sbb
cmp
insb
mov
outsl
hlt
push
in
cmp
xchg
xor
xor
repz
pop
bound
hlt
jo
je
fbld
fwait
test
mov
loop
pop
jnp
and
lods
xlat
aad
mov
rolb
dec
sub
test
mov
popa
lods
incb
arpl
enter
pop
sbb
lret
and
test
lcall
mov
adc
lea
mov
xor
outsl
mov
imul
popf
pop
daa
dec
pusha
loopne
cmpsl
cwtl
cwtl
xchg
mov
es
mov
xchg
shll
fisttps
ja
or
mov
cli
xchg
jne
int
mov
bnd
popf
sbb
push
pop
fwait
cmp
into
mov
xor
hlt
push
cld
pop
and
mov
sar
fldl
ret
je
push
in
or
arpl
jmp
ja
mov
or
pop
pop
mov
mov
mov
xor
mov
repz
les
mov
subl
jmp
xchg
bnd
jne
outsb
mov
lret
dec
inc
imul
pop
stos
xchg
jbe
xor
cs
pop
xchg
pop
pop
adc
jge
or
ljmp
imul
mov
cli
loop
sbb
aad
mov
xor
mov
and
inc
mov
pop
cmpsl
lcall
push
testl
pushf
mov
mov
cs
lahf
inc
movsl
fsubp
test
lock
imul
test
push
scas
insl
cwtl
test
or
sarl
icebp
divb
insb
fidivs
int3
mov
inc
pop
sub
mov
nop
int
adcb
aas
dec
jnp
and
inc
loop
in
fisttpll
int
test
iret
inc
or
mov
sub
xor
xchg
inc
inc
add
testb
sbb
xlat
push
stos
lods
pop
and
fcmovnbe
aaa
mov
cmp
fidivrs
out
fstps
xor
sbb
cmp
xor
xchg
mov
repnz
aad
mov
sbb
dec
mov
xchg
inc
iret
inc
aam
stos
push
xchg
imulb
jecxz
mov
fcmovnu
popf
fwait
enter
adc
add
cmp
dec
jge
lods
pop
and
int
insb
pop
and
in
ret
inc
hlt
arpl
add
jnp
pop
stos
inc
pop
pop
mov
ds
fs
ror
in
jbe
pop
adcl
ficompl
sti
adc
cs
add
pop
add
out
jo
jb
xchg
xchg
add
adc
push
add
jl
lret
cmc
xor
hlt
or
or
js
and
pop
adc
jmp
mov
xor
leave
mov
loopne
divb
dec
sbb
sub
gs
mov
insl
mov
stos
mov
and
mov
add
rcrb
add
xchg
jne
cmpsb
jl
lahf
jns
mov
cmp
add
jg
das
outsb
xor
jae
pop
xor
add
jg
lret
push
add
dec
orl
sbb
jge
in
test
out
mov
mov
fldl
jmp
or
cmp
xchg
inc
xbegin
sbb
sbb
ja
subb
sbb
frstor
fisubl
fcoml
jbe
mov
dec
mov
idivl
sbb
repz
ds
or
pop
out
jbe
cmp
xchg
mov
xchg
adc
inc
fnstsw
lods
jmp
dec
fisubl
nop
aam
or
imul
out
jg
das
mov
cmp
xor
dec
imul
jne
jl
rclb
outsl
insl
inc
sbb
mov
push
pop
jae
inc
xchg
inc
push
enter
adc
adc
push
js
daa
gs
lods
pop
loopne
xor
or
notb
jo
jl
xchg
jecxz
shlb
into
jp
roll
leave
mov
jno,pn
cmp
test
or
lock
adcl
cmp
and
cmp
inc
cmp
dec
orl
or
push
sub
xchg
xlat
jno
lock
mov
fstps
inc
add
add
adc
sahf
push
dec
test
jno
fsubs
in
jo
insb
push
dec
and
mov
cmpsl
enter
xchg
sub
pop
mov
xlat
xchg
pop
int3
sbb
insl
pop
mov
pop
xchg
dec
nop
push
cmp
or
push
adc
jae
push
out
xor
dec
dec
in
addr16
data16
push
or
int3
stos
dec
movsl
xchg
xor
cli
mov
mov
dec
rolb
jae
jmp
bound
sbb
dec
xchg
cld
hlt
into
mov
dec
inc
xchg
loop
dec
pop
iret
add
imul
out
sub
or
sub
je
bound
xor
inc
or
jae
das
push
jecxz
iret
dec
xchg
jg
fucomi
xor
xor
ret
jge
mov
xor
movsb
test
mov
je
flds
aad
jnp
push
mov
in
scas
jns
cmp
pop
sbb
outsb
add
push
sub
add
add
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
pop
in
lcall
add
movsl
inc
lret
jo
dec
rclb
aas
mov
pusha
push
js
or
xor
jno
int
xchg
cli
xor
inc
jae
movsb
mov
xchg
sbb
rcll
mov
ret
add
iret
fmul
or
addr16
mov
fisubl
icebp
mov
mov
mov
inc
adc
idiv
inc
add
scas
aaa
push
adc
inc
jecxz
cmpsb
add
fsubp
dec
mov
mov
and
rolb
add
adc
dec
mov
cmp
xor
mov
repz
jno
call
inc
jp
jmp
or
pop
cmc
iret
in
out
rclb
fisttps
loope
loop
enter
cmp
inc
cld
lahf
out
shll
xor
dec
pop
xchg
push
in
repz
mov
cltd
mov
fidivrl
repnz
out
pusha
jns
in
jmp
mov
adc
je
push
jecxz
mov
inc
jb
sarl
cmp
aam
cmp
repnz
dec
or
insl
pop
and
cmp
std
lods
add
jl
imul
aam
nop
pop
mov
clc
inc
push
fstpl
jnp
xchg
psrlw
or
lret
dec
lods
xchg
cmpl
rorb
add
push
ret
xchg
js
inc
sti
dec
mov
in
jae
and
or
pop
rcr
or
retw
dec
aam
push
in
int
call
mov
sub
data16
rcll
pop
mov
mov
aad
lret
int
mov
add
sbb
arpl
push
and
test
mov
sbb
enter
movsb
push
aad
sbb
lods
push
insl
or
adc
jmp
inc
dec
adc
xchg
push
in
stc
out
stos
subb
rcl
xchg
xor
addr16
aad
xor
dec
push
repz
push
fcmovu
adc
mov
mov
daa
dec
enter
imul
repnz
xchg
dec
adc
cmp
test
pop
pop
or
js
arpl
xor
stos
sbb
addl
push
into
inc
lret
aam
xchg
pop
inc
and
test
xchg
mov
sub
push
mov
ds
mov
addb
je
mov
inc
ficoml
test
and
cmc
and
xchg
inc
push
jecxz
iret
xchg
shlb
jecxz
sbb
bound
dec
or
arpl
xor
cmpsb
mov
call
fsts
ljmp
test
push
notb
cltd
fmull
test
sbb
sub
iret
jnp
mov
push
mov
cs
inc
fwait
jns
sub
or
jo
or
mov
dec
sbb
ljmp
dec
cmp
cs
dec
fisubs
sub
scas
push
jb
fisubrl
in
pop
fildl
mov
insl
jecxz
cmp
mov
xor
fs
lock
mov
clc
inc
fnstsw
or
dec
cmp
adc
dec
sbb
add
subb
jecxz
int3
push
add
in
sbb
xlat
inc
lret
fnstenv
divb
mov
pop
insb
inc
jge
mov
sub
int
mov
int3
or
pop
ret
andb
push
fbstp
push
cmpsb
xchg
jno
mov
dec
push
or
stc
ljmpw
mov
xor
ss
dec
xor
push
add
pop
xchg
leave
push
dec
mov
cmp
pop
jg
cli
cmpsl
pop
pop
xchg
pop
stos
ret
call
fistpll
nop
and
xlat
lods
mov
in
xorl
push
mov
rorb
pop
inc
xchg
xor
imulb
icebp
xchg
dec
pop
push
leave
xchg
push
or
iret
mov
push
cmp
inc
ljmp
jg
cltd
sub
sub
cmp
addr16
aam
fiaddl
push
push
scas
jg
pop
into
aas
inc
pop
jg
aad
push
jl
mov
aam
roll
ficomps
lret
in
insb
popf
xchg
fistpl
pop
inc
lods
out
ja
push
mov
fdivp
mov
lea
and
test
or
push
jmp
loop
lock
mov
mov
psubb
pop
mov
pop
rorl
arpl
xchg
sbb
or
cmp
adc
jecxz
adc
or
mov
cli
incb
rcr
add
rolb
nop
popf
sahf
nop
inc
push
cmp
aaa
push
pop
cmpsl
sarl
jg
ficoms
lret
pushf
pop
ret
jp
inc
stos
xor
in
adc
mov
fbld
mov
add
mov
sbb
popf
sub
pop
sub
fcmovb
shll
xor
fs
jne
movsl
push
iret
jl
clc
xor
cmpsl
mov
inc
fcoms
lock
cs
ljmp
cmp
inc
sub
mov
icebp
or
jbe
movsl
sub
mov
mov
or
pusha
dec
shr
int3
cmp
pop
xor
adc
imul
sahf
das
lcall
mov
in
xchg
add
inc
add
jge
mov
cmpsl
cmp
addr16
sbb
inc
xor
mov
mov
adc
xor
cmp
push
push
mov
inc
mov
lods
mov
fcomps
popl
dec
arpl
idivl
ficompl
dec
mov
int3
lods
rorb
jecxz
pop
jno
sbb
aam
cmp
sahf
sub
cmpsl
push
push
loop
scas
inc
push
aaa
ss
xlat
mov
fildl
jbe
adc
insb
pop
aam
add
push
xchg
mov
nop
lock
pop
les
enter
fbld
imul
in
push
fidivrl
idivb
xchg
add
add
add
pop
pop
dec
push
dec
push
pop
pop
mov
ret
jg
out
add
addb
add
and
pop
shlb
cmp
dec
inc
mov
cmp
jmp
sbb
std
push
ss
outsb
xor
loop
xchg
inc
xchg
ret
das
and
jne
cmp
xor
dec
and
pop
mov
scas
inc
jg
sub
cwtl
sbb
dec
add
dec
hlt
stc
cmpsl
pusha
enter
fbstp
sub
and
jo
dec
sbb
pop
lcall
sbb
sub
mov
ret
ficompl
arpl
dec
out
fdivs
rclb
mov
into
xor
jae
jnp
inc
mov
addl
xchg
aad
cmp
add
scas
adc
jmp
xchg
xchg
jmp
outsl
int3
idiv
loop
push
sub
scas
mov
gs
pop
jl
push
xor
ja
shlb
mov
push
imul
pop
test
repz
outsl
movsl
pop
mov
mov
imul
jb
testl
push
cmp
mov
repnz
lea
inc
dec
xchg
jns
mov
pop
xchg
mov
iret
xor
das
inc
fistl
daa
adc
xor
out
dec
add
test
and
push
cmp
push
js
xor
enter
test
xor
push
ds
lret
push
in
repz
fadds
pop
cmc
gs
add
xor
xchg
jmp
jae
filds
pusha
mov
push
adc
push
into
mov
std
fdivrs
dec
stos
adc
cmc
mov
idivl
nop
clc
cmp
js
int
push
mov
mov
inc
js
mov
test
imul
inc
inc
int3
and
cmp
stos
sbb
and
cmp
ljmp
jmp
loope
jno
jbe
mov
push
push
push
cmpsl
outsb
xor
addl
bound
cmp
pop
repnz
sub
mov
fcomp
arpl
push
sbb
les
les
dec
jb
xchg
pop
lds
lret
pop
cmc
fwait
jb
movsb
fwait
and
pop
push
dec
dec
mov
nop
xchg
das
cld
mov
sbb
sbb
jbe
cmpl
aad
mov
sub
adc
outsb
arpl
cwtl
imul
repnz
dec
sub
inc
rorl
adc
leave
aaa
lahf
push
fdivrs
divl
hlt
test
pop
jge
xchg
sub
jne
test
add
clc
add
jp
pop
les
or
fldt
cmpb
xor
into
or
mov
mov
lahf
outsb
mov
xlat
popf
push
and
xchg
sub
adc
cmp
mov
bound
sbb
mov
cltd
mov
cmp
or
push
jecxz
ja
lock
jmp
or
dec
fucomi
cmp
outsb
jnp
push
dec
cmp
imul
sbb
mov
sbb
fsubrs
mov
sub
pushf
mov
inc
fs
xchg
mov
insb
mov
cwtl
adc
xor
pop
aaa
dec
daa
repnz
in
repnz
les
xchg
cltd
xor
add
leave
add
or
pop
mov
dec
scas
call
mov
pop
or
push
movsl
stos
shlb
push
cld
jne
nop
addr16
or
mov
std
loop
mov
mov
cmpsl
notl
jl
xchg
pop
adcl
dec
jg
pop
jmp
test
push
adc
mov
fisttpl
test
jne
rolb
inc
mov
lds
pop
adc
addr16
in
iret
mov
fsub
test
loop
out
call
std
shl
xor
push
or
add
into
mov
push
adc
lock
lea
jne
je
mov
clc
dec
test
out
cmp
xchg
adc
inc
jae
out
sbb
pop
je
cmp
add
xor
lahf
pop
dec
stos
mov
sbb
lds
pop
sbb
inc
push
das
cmp
or
dec
cmp
pop
dec
dec
notl
jns
dec
inc
jle
ds
or
cld
add
lret
cmp
xchg
dec
or
call
sbb
mov
adc
xchg
dec
scas
mov
pop
lods
xor
cmp
ds
push
lahf
xchg
and
xor
pop
add
out
xchg
push
sar
mov
loope
repz
fs
scas
xchg
out
push
cmc
mov
rorl
in
cld
stc
xor
lock
xchg
inc
mov
cmpsl
pop
sahf
sub
mov
rcll
call
mov
pop
js
cmp
fidivl
cli
adc
adc
pop
sahf
push
out
cmp
cltd
jg
xor
lds
mov
jo
into
xchg
pushf
add
call
das
dec
sub
pop
int
sub
cmc
push
cmc
clc
scas
mov
dec
jb
sub
es
and
adc
jle
inc
fldt
pop
jo
add
rolb
movsl
and
xchg
jg
mov
jmp
fistps
call
or
and
lods
push
mov
dec
mov
mov
enter
sub
sbb
test
popa
pop
push
adc
leave
xlat
es
in
push
aaa
xor
decl
leave
xor
xlat
into
in
es
out
stos
jg
lea
mov
js
inc
aad
cltd
and
std
icebp
not
testl
clc
or
je
mov
jp
mov
add
add
add
push
push
push
inc
push
test
test
addb
add
test
adc
pop
jo
popf
cli
adc
sub
mov
out
loop
movsl
push
or
push
add
sbb
fldpi
int3
add
aam
rcll
mov
hlt
paddsb
aaa
dec
and
add
jnp
mov
ret
nop
mov
xor
dec
mov
push
jl
cmp
out
out
mov
cmp
test
mov
dec
outsl
jbe
les
inc
cmp
sbb
add
xchg
push
cmp
outsb
bound
pop
or
test
push
cmp
mov
mov
push
insl
in
ljmp
cmc
fidivl
pop
test
data16
addr16
imul
mov
out
cmp
imul
mov
push
pop
lret
inc
add
stos
push
scas
inc
pop
mov
jg
div
pop
inc
mov
xor
mov
lock
jp
fnstsw
inc
fbstp
sbb
sub
push
inc
cmc
sbb
orb
push
shlb
xor
out
aas
push
mov
mov
jbe
mov
or
pop
jbe
sbb
test
fistpl
fwait
test
or
inc
mov
jle
lods
sub
in
lods
add
add
inc
test
pop
lcall
xor
popa
xor
imul
sub
ret
arpl
push
xchg
pop
cli
fisubrs
insb
push
cwtl
shrb
cmpsb
fldl
sub
scas
pushf
lcall
and
rcr
out
hlt
mov
aad
jnp
and
xlat
test
imul
sbbl
call
push
and
inc
test
mov
mov
jnp
fs
in
jg
pop
mov
xchg
mov
push
adc
and
into
jecxz
gs
mov
test
mov
fnstsw
js
es
cmpl
mov
rcl
out
jb
shrl
jo
mov
std
jecxz
mov
mov
xor
mov
pop
testb
aaa
rorb
ja
cmp
push
mov
mov
shrl
adc
pop
cmp
pop
xor
dec
mov
inc
mov
mov
cmp
sbb
jne
lods
fiadds
adc
mov
pop
testb
cmp
cmp
ds
push
jbe
clc
add
aad
sub
ss
xlat
je
xchg
stos
testl
aad
bound
add
js
bound
mov
push
xor
das
addr16
sbbl
aas
adc
jb
das
xorl
sub
shlb
les
testl
jge
push
cli
dec
sbb
ss
in
nop
nop
seto
insb
mov
das
testb
sbb
adc
sub
dec
mov
fwait
stos
and
mov
sbb
cltd
jns
pop
push
leave
or
movsb
jge
cmpsb
xchg
mov
es
fistpll
aam
xor
adc
add
sub
dec
ja
fimuls
jbe
or
cmpsb
inc
in
mov
idivb
stos
cmp
gs
movsl
xor
ds
fimull
or
xchg
jle
add
and
into
cltd
arpl
rcrb
mov
inc
loope
dec
shrl
iret
cmpsl
cmp
or
fmull
addb
xorl
and
fistps
mov
dec
xor
test
xchg
xchg
test
outsb
ss
push
je
sub
fs
arpl
sub
mov
xor
inc
mov
pop
and
imul
test
shrb
sbb
add
mov
inc
mov
subb
mov
and
pop
icebp
jnp
cld
adc
push
lods
pop
repnz
mov
sub
arpl
pop
into
repnz
lock
jg
leave
jnp
jmp
jp
adc
hlt
xchg
scas
vmovmskps
jnp
inc
mov
rcrb
cmp
ds
imul
shl
sbb
negb
scas
lock
mov
dec
pusha
push
ffreep
jbe
lret
sub
jl
pusha
sbb
scas
outsl
push
jge
pop
js
insb
cltd
add
ffree
test
ds
adc
not
mov
xor
stos
jmp
js
sahf
sub
mov
orb
mov
sbb
popa
push
sbb
and
les
and
inc
xor
adc
movsl
inc
jbe
fs
pop
or
js
std
dec
adc
sbb
out
mov
and
sbb
mov
lea
loop
xchg
jno
and
cwtl
es
and
arpl
push
dec
stos
jecxz
push
adc
daa
rcrl
jle
sub
loope
mov
sub
inc
call
jns
xchg
sbb
fsubrp
or
imul
dec
adc
fldl
les
out
cld
notb
lret
lahf
fwait
inc
mov
mov
xor
mov
rcrb
cmc
or
inc
mov
lret
xor
scas
jecxz
je
xchg
stos
adc
test
into
pop
add
mov
pop
outsl
js
cmpsb
hlt
mov
cmp
dec
mov
outsb
sti
ret
ret
cmpsb
shrl
cs
xchg
aaa
sub
mov
add
jp
mov
adc
mov
jae
fs
movsl
mov
inc
dec
jge
xchg
outsb
dec
push
daa
xchg
sub
stos
cmc
cmp
fisttpl
shlb
stos
mov
pop
pushf
push
idivl
cmpsb
pop
bound
sbb
xor
pusha
lock
mov
adc
mov
jns
xchg
sub
loop,pt
add
hlt
lds
add
add
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
mov
add
addb
add
pop
xor
jmp
faddp
cmpsb
lcall
lret
cmp
xchg
or
pop
jmp
outsb
lock
lods
cmpb
mov
add
int3
sbb
aam
aas
or
fistpl
fs
test
add
mov
mov
fs
pusha
idiv
push
adc
add
in
sbb
mov
movsl
mov
ljmp
sub
les
jecxz
add
jbe
hlt
adc
arpl
ret
push
add
in
push
push
ss
inc
jg
mov
jnp
fnstsw
xlat
pop
pop
inc
push
dec
or
movsb
cmp
mov
mov
cwtl
ja
pop
insl
movsb
mov
insl
shrb
lock
aad
out
mov
icebp
jge
adcl
jge
je
out
dec
ss
push
xchg
and
andb
lret
in
lret
cwtl
cmp
dec
sub
cld
and
notb
rcl
lcall
sub
mov
add
mov
mov
shl
shll
jb
sub
xlat
subl
or
not
mov
icebp
popa
sbb
in
push
andl
mov
lcall
push
cmp
mov
enter
in
sub
push
cmpsb
sub
mov
sub
jecxz
jmp
mov
sub
inc
adc
cltd
test
push
xlat
add
insb
out
adc
xor
push
lods
cmp
imul
or
dec
into
sub
jl
xor
int3
jnp
pushf
or
leave
sti
or
es
scas
call
lcall
xchg
fwait
mov
sbb
mov
push
xchg
cltd
and
jp
pop
add
pop
icebp
inc
cmp
out
cmpsl
mov
mov
cmp
cmpsb
pop
xor
mov
out
lcall
jae
loopne
ss
xchg
jl,pt
jno
xchg
faddl
pop
xchg
add
mulb
and
fcomps
imul
add
add
push
movd
push
data16
push
sar
mov
loope
fwait
mov
sbb
inc
cmpsl
xchg
pop
mov
or
ss
dec
inc
jecxz
mov
cmp
sar
sti
fnstenv
lret
mov
movsb
pop
mov
pop
rorl
ljmp
or
scas
popa
pop
lods
inc
cli
sub
xchg
fwait
and
mov
lea
sbb
jge
jne
dec
sbb
sub
mov
mov
pop
sbb
mov
inc
rcrl
mov
cwtl
xor
repnz
addr16
xor
and
out
lds
fcomps
adc
sbb
dec
jl
add
mov
add
mov
xchg
divl
bound
in
inc
jne
bound
add
movsl
adc
adc
sub
ljmp
and
xor
add
jle
mov
ficompl
push
dec
rcrb
ja
repz
loopne
imul
add
std
jbe
mov
inc
push
mov
mov
fwait
dec
flds
add
fs
mov
repnz
js
xchg
mov
adc
push
cs
add
push
mov
and
and
fcmovnu
clc
adc
movsb
ret
test
add
outsl
cmc
inc
bound
cmp
inc
xchg
mov
stos
push
rcr
mov
rcr
push
pop
fcompl
adc
and
jo
xor
les
inc
mov
mov
loopnew
ret
fisttpll
push
rol
jg
lcall
rcrb
sub
dec
stc
pop
push
sbbl
lods
dec
jae
cmp
add
lret
sti
aas
ftst
test
sbb
hlt
aad
stc
adc
dec
clc
sbb
lods
adc
jmp
scas
dec
mov
ss
stos
mov
sub
popa
push
jp
adc
pusha
push
or
xlat
jg
js
pop
or
jp
arpl
cltd
sub
jbe
out
gs
inc
add
dec
mov
dec
mov
push
ss
rorl
and
xchg
in
mov
or
ss
or
sub
pop
fwait
pop
inc
pop
fwait
push
loopne
push
adcb
loope
imul
and
rorl
add
pop
es
loope
lea
mov
aas
lret
xchg
aad
push
mov
sbb
ret
lcall
mov
cmpsl
xchg
sub
popf
sbb
dec
cltd
jmp
fcoml
inc
jl
ret
nop
add
inc
cmp
in
mov
mov
or
cmp
pop
jnp
pop
lcall
sti
mov
rolb
stos
rorl
pop
les
sti
mov
xchg
aas
push
les
inc
icebp
mov
sti
and
mov
cltd
data16
inc
jl
dec
fidivl
or
ss
cs
jbe
and
jne
adc
inc
loope
add
loope
or
rcr
test
mov
and
sbb
sub
mov
aam
pop
dec
loope
fisttps
icebp
jbe
add
mov
scas
leave
push
sti
mov
xorl
or
aas
sbb
push
add
outsb
rolb
pop
pop
lds
lods
xchg
dec
jno
mov
push
lods
mov
shlb
gs
mov
mov
je
mov
xchg
and
xchg
jno
adc
and
lcall
inc
cmp
pop
cmp
jmp
std
cmp
sbb
imul
dec
in
or
pushf
add
add
add
push
inc
push
push
push
push
push
inc
rorl
popf
fldenv
insb
fadds
add
aaa
dec
or
stos
sbb
loop
subl
fcomp
sub
scas
jo
es
mov
cmp
in
jge
in
cltd
cld
cmp
lea
mov
add
jecxz
clc
fwait
stos
arpl
sbb
xlat
test
sub
arpl
jno
mov
mov
aaa
mov
pop
or
add
xchg
add
into
cmp
fadds
xchg
loopne
inc
daa
xor
jno
pop
lret
movl
pop
and
movsb
push
or
xchg
cmp
add
mov
cmp
mov
add
xchg
inc
add
scas
jge
jno
into
movsb
xchg
push
push
test
les
jno
call
outsb
pushf
je
pop
push
mov
mov
loope
push
popf
fbstp
das
sub
or
ljmp
and
sbb
fisttps
mov
mov
jecxz
push
push
and
out
cmp
jle
push
icebp
adc
mov
fwait
xchg
jl
ret
jl
rorl
stc
out
test
jo
jns
mov
sub
outsl
mov
adc
xor
in
dec
cmp
mov
loope
aam
xor
dec
and
push
dec
adc
rclb
push
popf
inc
mov
arpl
xor
inc
mov
call
inc
shrl
inc
push
jnp
int3
mov
lods
out
lret
repnz
sub
out
lea
mov
dec
or
and
inc
dec
jns
pop
adc
or
mov
mov
fiadds
sub
sti
aad
mov
xchg
cwtl
jle
xchg
push
push
js
mov
push
shl
push
insb
sub
inc
scas
icebp
out
pushf
movntq
mov
xor
or
sub
lods
insl
rolb
push
enter
pushf
in
imul
push
je
nop
cmc
cwtl
inc
push
and
call
out
test
sti
cmpsl
dec
xor
sbb
clc
cmp
jge
adc
sub
adc
add
in
mov
in
sbb
jge
repz
dec
add
insl
lods
mov
jbe
inc
ljmp
iret
iret
pop
pop
fs
sbb
inc
jmp
mov
cmp
inc
adc
xchg
push
pop
and
mov
mov
fadds
ret
mov
pop
cli
sbb
jmp
jg
in
adc
add
jne
xor
mov
add
mov
imul
adc
fdivs
mov
push
lcall
push
loope
daa
push
dec
jecxz
pop
fwait
popf
pop
fdivl
jno
cli
xor
xchg
mov
inc
push
aam
push
sub
mov
jmp
lcall
cmp
cmp
adc
adc
popa
popf
pushf
mov
out
push
cmp
sub
insb
ret
lock
lret
xchg
nop
les
test
out
cwtl
add
push
insl
orb
test
mov
data16
dec
dec
lods
cs
mov
jl
bound
adc
xlat
jmp
mov
jle
dec
mov
sub
ret
fadds
andl
les
stos
xor
fwait
or
push
mov
andl
xchg
idiv
adc
fs
dec
dec
faddl
mov
jmp
xchg
cmp
rcll
mov
mov
mov
xlat
pop
jg
lahf
in
push
mov
sub
insl
loope
push
in
and
adc
xorl
mov
jnp
sub
sbb
sub
adc
push
xchg
adc
outsl
es
pop
inc
pushl
push
es
mov
xorl
push
test
scas
sub
lahf
and
enter
mov
mov
push
les
mov
dec
adc
mov
xor
pop
fnstsw
mov
repnz
jne
or
mov
or
sbb
push
icebp
add
loop
arpl
pop
std
sar
sub
aas
push
jecxz
adcl
mov
cmp
les
adc
adc
pop
adc
je
sarb
jecxz
jge
mov
sbbb
out
popf
push
rol
pushf
add
roll
cs
fdivl
add
bound
lret
push
scas
jno
sub
lds
aam
sub
xchg
pushf
sarl
jmp
lea
nop
sub
add
sub
shll
mov
scas
add
das
shlb
mov
or
mov
mov
push
test
or
cmpsl
sbb
pop
pop
addr16
add
les
enter
xchg
ljmp
idivb
mov
inc
mov
divb
push
pop
iret
dec
push
sar
and
lcall
ss
daa
or
cld
add
fucomp
jp
rcrb
mov
push
mov
or
fs
cmp
psrlq
mov
mov
mov
xchg
idiv
and
movsl
in
shrl
pop
sub
add
push
jle
and
inc
popa
mov
cmp
and
inc
int3
repnz
lock
xchg
xlat
mov
lret
xorl
ret
and
call
adc
xchg
in
mov
pop
pop
inc
pop
mov
pop
and
jno
and
push
imul
repnz
pop
xor
add
popa
pushf
test
addr16
fimuls
negb
push
xor
imul
jp
cmp
mov
xchg
mov
sub
add
add
add
push
push
pop
push
pop
pop
xchg
stos
mov
inc
out
fiadds
add
jg
xor
sbb
xchg
enter
outsl
mov
outsb
xlat
cltd
decb
lahf
outsb
rorb
push
and
xlat
aam
xchg
push
test
in
fwait
mov
testb
adc
or
stos
push
roll
adc
push
mov
outsl
aaa
mov
pop
add
les
mov
pop
in
or
movsl
pop
popf
lea
enter
mov
push
into
pop
adc
jns
into
test
pop
jl
mov
inc
ss
xchg
jbe
jb
enter
xchg
addl
mov
cli
mov
mov
sarb
xchg
xor
inc
xchg
add
xor
mov
cli
or
push
sbb
aas
jl
cld
fistps
stc
call
xor
xchg
xchg
aaa
test
subb
cmp
stc
adcl
push
mov
int
sahf
test
or
xlat
jo
add
sbb
cmp
add
xchg
mov
sbb
xor
lods
iret
adcl
aam
scas
inc
jb
fistpll
fldpi
sub
stc
cld
and
es
and
or
shr
int
push
or
ret
pop
or
je
arpl
sbb
adc
dec
aad
pop
mov
popf
cltd
js
adc
or
into
or
sbb
add
std
add
call
pop
pop
mov
cmp
cltd
xchg
sub
xor
mov
icebp
inc
xor
push
inc
jbe
fcomps
push
xor
cmp
leave
lahf
dec
mov
shll
xchg
inc
gs
jne
cld
gs
addl
mov
jo
xorl
push
or
movsl
lret
cmp
lcall
inc
xchg
insl
mov
fistpl
or
mov
lods
cmpl
aam
adc
loop
inc
shll
mov
mov
mov
fnstenv
sbb
push
mov
test
add
jg
rcll
dec
sub
cs
imul
mov
das
insb
mov
dec
cld
incl
test
test
mov
insl
adc
hlt
pusha
add
imul
mov
jne
or
mov
cmp
pusha
scas
or
xchg
insl
sbb
and
xchg
dec
frstor
nop
push
jge
cmp
ret
adc
mov
adc
fwait
in
or
scas
arpl
mov
outsb
sub
test
insb
add
pop
aad
stos
cmp
xchg
and
cmp
jmp
insb
cmpb
push
mov
int
mov
push
adc
jo
aaa
out
xor
bound
jl,pn
arpl
pop
or
inc
test
imul
sti
mov
inc
pop
repnz
in
mov
cs
das
jo
sbb
mov
xchg
bswap
xor
insb
iret
mov
inc
lods
sub
push
push
fidivl
cmc
jbe
cmc
nop
in
je
ljmp
fcoml
cltd
insb
mov
mulb
add
and
fwait
notb
xchg
fs
test
sub
or
testl
pop
mov
jecxz
lods
sahf
and
cmpsb
shll
pop
insl
and
xchg
push
cmp
or
sti
jne
xchg
pop
iret
imul
lods
cwtl
jg
cmp
dec
addr16
jo
int3
ds
cltd
or
rolb
xor
cmpl
fcmovnu
inc
iret
inc
xor
xlat
clc
adc
xorl
dec
push
loope
fprem1
adc
insb
push
gs
loopne
adc
icebp
int3
sub
mov
pushf
fmull
pop
mov
bnd
xchg
push
push
sar
jbe
icebp
bound
popa
jne
scas
sub
jge
jecxz
imul
mov
mov
mov
std
dec
stc
add
push
jno
popa
mov
es
mov
inc
fcompl
push
pop
mov
nop
xor
clc
das
mov
stos
add
xchg
mov
pop
lcall
aaa
cmc
mov
adc
imull
pmulhuw
out
rolb
out
xchg
mov
sub
push
call
test
sub
cmp
cltd
dec
data16
jp
dec
sbb
out
mov
lds
push
and
cmp
xchg
mov
sub
push
gs
pop
mov
movsb
inc
mov
sbb
test
mov
dec
inc
shl
daa
dec
and
add
cs
jae
push
repz
rorl
icebp
in
out
enter
inc
dec
or
xchg
addr16
shll
stos
fsubr
inc
cmp
std
aaa
sbb
cmp
arpl
orb
int3
cmp
aas
imul
mov
jne
inc
test
cmpsb
pushf
xchg
pop
add
mov
xchg
dec
sbb
sub
push
sub
mov
sbb
push
xchg
push
and
adc
jge
notl
jne
add
pop
pop
add
test
enter
jns
das
int3
cld
cmp
mov
push
adc
lahf
jb
out
nop
adc
cmp
jae
or
push
in
and
sbb
dec
into
into
dec
mov
js
xchg
bound
imul
sub
inc
icebp
inc
loop
fwait
lcall
rolb
mov
mov
add
mov
cli
rorl
movsl
sub
inc
iret
pop
sbb
pop
rclb
and
inc
xchg
sti
xchg
cmc
xor
mov
sbb
inc
insl
pop
dec
mov
scas
xchg
in
inc
int3
push
fldcw
cmpsb
add
loope
or
dec
dec
mov
rcll
clc
push
testl
add
push
push
pop
push
dec
pop
idiv
pop
jne
in
add
sti
mov
mov
mov
pop
cmp
popa
inc
mov
pop
rclb
sub
cmp
xorb
and
jle
push
stc
xchg
pop
pop
loop
push
cld
and
in
je
jne
aaa
add
ljmp
pop
jb
fwait
add
push
mov
imulb
jo,pt
sbb
mov
pop
ficoms
jle
adc
nop
xchg
or
push
inc
addr16
xlat
dec
push
mov
mov
out
jmp
pop
cmp
hlt
dec
iret
scas
cmpsb
jmp
jl
movsl
sbb
enter
fcom
sbb
movsl
cmp
cmpl
push
push
pop
fimull
push
shll
bound
enter
or
mov
jge
lret
out
mov
loope
enter
aam
mov
add
jo
mov
leave
jmp
lods
aaa
xchg
mov
mov
test
sub
arpl
xor
add
sbb
add
adc
pushf
leave
inc
pop
jl
aas
push
or
jbe
sub
mov
inc
jmp
xchg
xchg
mov
adc
aad
fdivp
mov
lcall
pop
sub
pop
sub
cli
pop
mov
call
cld
hlt
inc
imulb
imul
popf
mov
mov
sbb
stos
jg
mov
int3
or
popa
fisttpll
test
jns
into
rcl
fcmovne
lods
icebp
xchg
rcr
dec
jns
inc
inc
or
sbb
out
scas
mov
xchg
push
xorb
jl
fidivrs
nop
movsl
sub
pop
int3
gs
sqrtps
popa
jmp
lods
pop
out
cmc
xchg
push
cli
sbb
and
das
pop
sub
cltd
mov
imul
jp
flds
or
mov
adc
adc
cltd
adc
sbb
jns
jne
or
cwtl
icebp
movsl
xchg
jmp
jmp
arpl
mov
dec
mov
fcoms
push
cmpb
mov
mov
and
mov
iret
cmp
nop
push
adc
dec
mov
and
mov
adc
xchg
jbe
cs
aam
je
pusha
aam
repz
xchg
cmp
mov
js
and
and
sbb
lahf
xlat
inc
movsb
mov
sub
out
pop
jmp
into
sahf
dec
cli
jg
sub
sbb
sti
fimuls
sub
popf
pop
pop
aad
sbb
lret
lret
or
and
imul
aaa
mov
out
xchg
loopne
push
adc
xor
push
add
rep
pop
gs
mov
xchg
inc
outsl
adc
ja
out
mov
fs
adc
sub
loop
adc
lea
popw
cwtl
push
xor
push
cmp
dec
lcall
ds
inc
andb
aaa
fidivl
test
mov
pop
push
cmp
and
test
imull
cmp
das
jle
add
loopne
inc
push
cli
adc
jb
les
out
mov
ja
enter
push
cmp
cmp
std
adc
add
xchg
jns
mov
mov
dec
test
insl
xchg
ret
ret
mov
jno
sub
shll
lret
pop
add
inc
into
insl
inc
push
add
into
jge
mov
lock
and
mov
cwtl
adc
out
sub
add
std
mov
push
xchg
outsb
pop
enter
jle
jmp
cmp
push
fsts
add
mov
mov
test
pop
mov
inc
jno,pt
sub
out
xchg
push
stos
mov
sub
xor
jge
inc
sbb
pop
jae
pushf
xchg
jo
lret
pop
pop
ret
jecxz
mov
lds
outsl
xor
cmpsl
fs
pop
inc
into
mov
pop
je
clc
lock
push
lret
push
cmp
enter
adc
sub
xchg
cmpsl
bound
adcl
jmp
jl
add
jmp
jne
das
xor
arpl
popf
push
repz
in
dec
pop
pop
out
push
dec
fwait
cmpsl
pop
jge
inc
lret
das
dec
test
repnz
insb
outsb
xchg
sub
int3
adc
fadds
insb
shl
fs
mov
std
cli
mov
add
loopne
cmp
sub
jbe
test
mov
adc
mov
stos
jno
dec
push
ds
lock
mov
sti
adc
stos
add
lret
inc
xor
adc
mov
push
mov
movsl
movsl
or
mov
pop
mov
dec
mov
jae
xchg
mov
xor
std
fsub
or
lods
fs
imul
lock
arpl
loopne
sar
sub
in
mov
xorb
stos
cs
add
ja
mov
dec
push
sub
fadds
aas
pop
call
call
jp
movsl
loopne
jg
jne
add
mov
sbb
adc
lods
insl
cltd
pop
clc
fnstsw
inc
push
ss
in
aad
cltd
inc
out
xchg
pop
aam
fisttpl
xchg
lret
and
jle
mov
push
cmp
cmp
push
sub
push
loop
icebp
add
outsb
sbb
push
inc
sub
inc
mov
push
ret
loope
push
adc
xchg
xor
inc
pop
xchg
xchg
push
mov
sti
pop
sbb
mov
pop
jb
out
xor
pop
mov
ds
dec
outsl
jo
adc
out
pop
fdivl
pop
loop
adc
arpl
aad
clc
pop
or
xchg
sbb
insb
fisttpl
mov
lret
faddl
outsb
lea
adc
and
js
pusha
dec
or
pop
loop
add
push
shlb
jne
pop
mov
pop
out
fs
into
dec
xchg
add
add
add
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
fs
bnd
add
inc
mov
mull
push
inc
xchg
adc
mov
cmp
imul
mov
lods
and
adc
rol
sbbl
ret
pop
mov
das
cli
push
mov
ficompl
dec
mov
and
add
rcrb
mov
sbb
xchg
and
or
ret
stos
add
jns
sbb
sbb
pusha
dec
imull
dec
pop
or
scas
or
outsb
or
cs
in
stc
mov
in
imul
addr16
sub
mov
popa
insb
icebp
in
jle
in
std
xor
repz
aas
ficoms
inc
je
addr16
mov
js
cmp
movsb
mov
lock
jne
jns
ror
and
mov
sub
les
cvtps2pi
fwait
and
pop
and
int3
call
inc
mov
mov
into
sbb
jnp
push
lcall
mov
jbe
add
sbb
cmp
inc
push
sub
dec
xchg
rcr
je
cld
xor
push
movsl
test
jp
fwait
and
pop
cmp
loope
inc
icebp
cmp
inc
inc
cmp
inc
sub
add
pop
iret
loope
mov
add
stos
mov
outsb
or
mov
insl
and
lods
adc
mov
rorb
rcll
jmp
mov
rorl
frstor
or
rolb
dec
pushf
ja
add
outsb
insb
iret
jge
in
dec
or
adcl
push
lds
lock
and
aaa
cli
cmp
mov
test
dec
adc
fisttpl
andb
insl
pop
xchg
shlb
test
mov
jb
andb
les
pop
dec
sbb
mov
xchg
jns
test
fcmovb
std
push
or
rcrb
outsb
aaa
mov
push
adc
fists
dec
push
pop
or
xor
movsl
mov
inc
sbb
in
sub
xchg
repnz
test
mov
ja
fstp
adc
mov
arpl
or
or
xchg
mov
cmp
jbe
push
push
in
call
sub
jmp
push
movsl
sbb
test
fdivrp
mov
imul
addl
cmp
shl
shr
out
lahf
add
jp
jle
repz
jno
in
jp
loope
mov
add
mov
push
jo
mov
cmpsb
or
adc
inc
dec
test
enter
in
or
pop
push
daa
popf
test
mov
lods
mov
add
push
dec
int3
mov
hlt
cmpsb
in
sub
incl
incl
fcmovne
lods
push
dec
cld
fistl
dec
pop
xchg
cmp
popf
mov
sub
xchg
out
mov
mov
into
lret
dec
sahf
lods
adc
cmp
pop
loope
lcall
mov
rcr
out
test
add
stos
mov
cmp
pop
arpl
and
jb
ret
fmul
pusha
imul
jp
xchg
fstps
in
sbb
xor
mov
mov
pop
notl
mov
int3
je
ljmp
into
mov
or
shrb
out
lock
or
scas
push
pop
adc
pop
pushw
sbb
call
pop
inc
mov
cmp
vpshufhw
inc
jle
dec
and
cltd
insb
pop
mov
icebp
or
sub
xchg
adc
xacquire
movsl
nop
js
fistpll
movsb
lret
test
or
xchg
stos
push
ljmp
test
mov
mov
mov
bnd
add
inc
icebp
loopne
mov
fs
mov
loope
clc
ds
aam
sahf
and
mov
cmp
mov
lods
das
sahf
pop
inc
movsb
pushw
add
repnz
test
or
push
jns
sahf
jecxz
out
mov
sti
xor
cld
nop
cmpsb
mov
xor
add
cmc
mov
dec
cmp
or
and
orb
xor
mov
inc
cwtl
fs
push
testl
mov
add
mov
xchg
inc
aaa
stos
js
ret
lds
pop
mov
jns
lods
cmp
inc
or
pop
int3
xchg
cs
xlat
sub
ficompl
fdivrl
lock
pushf
sub
pop
lret
sti
push
stos
lret
push
xchg
sti
xor
jbe
inc
idivb
pop
gs
aaa
jp
lock
int3
push
pop
call
fcoml
mov
mov
sbb
test
dec
or
leave
test
fdivrl
pushf
push
mov
icebp
or
sub
inc
cmp
xchg
out
mov
lcall
jl
mov
or
lods
or
jo
shrl
pop
pusha
call
mov
call
cs
inc
out
cli
leave
cmc
push
jle
cmpl
daa
mov
ret
jecxz
mov
xchg
aas
add
fldcw
push
pop
or
dec
mov
jnp
test
add
inc
fistps
pop
daa
jbe
fstl
cmp
mov
cld
mov
or
push
mov
cmpl
adc
jl
lods
push
fisttps
mov
mov
rol
sti
ret
sub
jge
push
test
pop
aam
lret
test
pop
cmpsb
lret
in
mov
test
xchg
mov
and
mov
jb
jge
or
adc
int3
outsb
mov
out
test
jg
xor
mov
sahf
cmp
xor
jnp
shll
outsl
popa
stc
dec
ret
aad
inc
sub
cwtl
adc
push
das
int
jl
adc
dec
sub
std
in
add
add
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
sbb
sbb
je
add
addb
add
mov
add
test
cmc
mov
loop
ss
and
mov
dec
rorl
push
push
pop
cmpsl
lods
in
inc
sbb
das
lret
xchg
adc
ljmp
mov
dec
mov
or
aam
addb
loop
pop
push
mov
test
arpl
pop
loope
pop
scas
inc
lock
dec
int
push
lea
push
jo
pop
movsl
mov
insb
adc
mov
scas
xchg
inc
jno
out
gs
cmp
ret
and
loope
add
das
and
push
mov
xchg
in
adc
imul
xchg
lret
hlt
push
leave
int
mov
shlb
mov
xor
imul
pop
outsl
das
mov
bound
mov
cmp
aad
mov
and
jae
sbb
jno
cmp
in
add
cmc
nop
adc
fcomps
xchg
add
and
mov
xchg
cmp
ljmp
cmc
xchg
stos
mov
ss
cmpsb
enter
stc
cmc
cmp
xor
add
jle
test
cmp
cmpsl
stos
xor
mov
fstpt
das
es
mov
xor
out
fldpi
xor
sub
add
mov
push
cld
int
cwtl
aaa
add
push
enter
sarb
sub
inc
cmp
arpl
cmpsb
dec
sub
into
stos
dec
movsl
cmp
frstor
xorb
sub
nop
fiaddl
mov
js
mov
mov
notl
push
cmpsb
sbb
aas
jb
jge
push
push
daa
mov
repnz
jge
inc
stc
cmp
lea
jbe
dec
fucomp
mov
ret
fsubrl
cmc
arpl
xchg
mov
decb
daa
ret
fildl
mov
push
xchg
jl
xchg
cmp
lcall
jnp
leave
pop
mov
loop
mov
pop
push
bound
fnstcw
and
fistl
stc
cmp
adc
mov
shrb
push
adc
jb
mov
inc
mov
xchg
push
sub
test
mov
jnp
cmp
jne
mov
xchg
sub
es
ds
mov
sub
enter
push
leave
mov
cmpsl
adc
mov
jae
les
xor
fildl
test
cmp
loop
xor
insb
aaa
js
insl
or
push
or
mov
and
or
fdivrl
lcall
push
xor
jno
fsubs
sub
test
add
or
je
ffreep
mov
adc
sbb
sub
loop
cli
dec
jae
loope
mov
fwait
bound
addl
cmp
xchg
lea
mov
pop
ja
std
sbb
xchg
push
iret
lcall
jb
mov
pop
mov
xchg
adc
push
gs
insb
pusha
rclb
cmp
and
jno
fldl
cmp
inc
into
pushf
xchg
lods
into
enter
fistps
insl
negl
push
and
inc
mov
addl
std
pop
mov
push
inc
jmp
bnd
inc
mov
test
inc
call
jb
mov
ja
loopne
fistpll
aam
add
pop
push
mov
xor
int
mov
push
mov
jl
jecxz
repz
mov
stos
xchg
sub
ja
inc
daa
adc
sbb
mov
inc
daa
scas
pop
sub
dec
xor
mov
aad
xchg
movsl
add
cmp
add
sti
and
push
dec
mov
fwait
fwait
mov
mov
je
sti
daa
xchg
sub
lock
dec
mov
shrb
mov
ja
in
sub
arpl
shrb
lcall
fiadds
test
jmp
les
or
sbb
mov
aas
shl
lahf
cld
mov
fisubrl
pop
mov
jne
into
dec
fdivr
push
pusha
je
sbb
aaa
mov
subb
xor
out
or
pop
stos
sbb
and
inc
or
adc
mov
in
jge
xchg
inc
mov
into
cli
dec
fstl
jno
or
std
xor
in
in
fiadds
jmp
push
jbe
adc
fldl
inc
aas
xor
insl
mov
push
scas
in
incl
cmp
pushf
xlat
pop
cmp
daa
lods
lods
mov
or
adc
mov
xor
xchg
push
popf
xchg
int3
cmp
push
fcom
std
xor
mov
stos
stos
or
fs
dec
push
cmc
ds
cmp
pop
mov
push
cmpsl
in
pushw
cli
cmp
ret
mov
test
cmp
shlb
pop
daa
popa
pop
xchg
xor
xchg
fdiv
mov
push
push
insb
stos
insl
cmc
fadds
je
test
rorl
inc
orb
movsl
sub
sysret
das
test
inc
in
roll
push
idivl
or
inc
inc
sbb
cmpsb
cld
xor
mov
in
xchg
aam
aas
xor
sbb
loope
push
xlat
sub
jb
dec
lock
sub
lds
mov
mov
mov
int
movsb
xchg
jmp
mov
aas
scas
notb
xchg
dec
xlat
stc
cmp
mov
mov
mov
es
dec
daa
xchg
mov
popa
pop
inc
xor
or
dec
inc
add
mov
pop
or
dec
lock
xor
in
dec
sub
iret
out
jl
loop
fldt
sbb
lods
bound
add
add
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
popa
jg
clc
add
addb
add
repnz
sbb
imul
in
mov
pop
sub
inc
add
mov
push
in
lods
xchg
pushf
push
stc
push
push
int
imul
lock
xor
push
iret
outsl
lcall
inc
fwait
dec
popa
cmc
xchg
inc
aaa
or
dec
pop
ljmp
or
adc
dec
sti
cmpsb
mov
add
xchg
mov
mov
jne
fmuls
cmove
jl
cmp
int3
stc
jl
fidivrl
cld
fsub
out
enter
vandnps
test
cmpsb
cmp
repz
cmpsl
mov
std
enter
dec
cmp
dec
je
mov
sti
data16
cmpsl
rcll
xor
idiv
mov
sarb
sbb
pop
mov
mov
xchg
sti
sbbl
cmp
cld
xor
dec
pop
sahf
or
and
jecxz
in
pop
shll
fcoms
movsb
jmp
adc
sti
imul
fsubl
out
adc
fwait
cld
addr16
fmul
lea
xchg
cltd
popf
ds
or
rolb
jae
lock
popa
xchg
test
shl
and
and
adc
cli
inc
test
cmp
hlt
jno
pop
sti
insl
in
mov
xlat
int
cmp
arpl
add
push
test
pusha
and
sub
mov
je
test
xor
lds
jne
mov
and
jo
xchg
mov
and
mov
fmull
push
dec
ds
out
fs
xchg
push
aaa
scas
aad
mov
imul
cmp
pop
sbb
insb
es
xchg
orl
jbe
bsf
hlt
insl
inc
and
sbb
jno
adc
push
and
cmpsb
xor
fadds
adc
pop
aas
shl
cld
aaa
mov
xchg
addr16
mov
or
mov
rcrb
scas
cli
inc
add
lock
cmpsb
inc
add
loope
jmp
inc
hlt
adcb
adc
inc
std
push
into
cmp
sub
jne
jmp
les
adc
adc
xor
xchg
test
out
or
xor
xchg
mov
lret
sbb
insl
aaa
pop
pop
mov
pop
es
cld
lds
push
push
xchg
sti
xor
je
push
psubw
xchg
dec
mov
pushf
dec
and
pop
xchg
mov
push
and
cmpsl
fsubs
xor
pop
mov
xchg
sahf
jl
outsb
push
mov
pop
outsl
xor
sar
inc
push
cs
lret
mov
sub
xchg
in
xlat
adc
std
xchg
imul
cs
shlb
pushf
xchg
adc
push
xchg
mov
jle
aaa
jns
lock
sahf
push
pushf
test
mov
leave
xchg
aad
mov
mov
dec
cmp
fistpll
xchg
cwtl
insb
mov
add
imul
enter
mov
sub
mov
lock
xor
ficoms
pop
movsb
mov
push
mov
add
pusha
push
pop
scas
insl
pop
mov
dec
xchg
std
jp
adc
into
and
mov
sarl
cwtl
pop
mov
out
shll
push
out
lea
dec
loope
leave
lds
lret
out
mov
jae
xor
sbb
pop
mov
cmc
jecxz
cmp
push
les
adc
inc
data16
cmc
bound
mov
jge
xor
fs
jecxz
aad
cmpsl
jbe
inc
sub
in
dec
test
fcoml
cs
jecxz
lret
cltd
sbb
add
xchg
in
test
lods
pop
pusha
outsl
inc
lret
data16
ret
dec
mov
ret
pusha
add
and
stos
loop
stos
ljmp
push
ret
push
dec
in
aam
jno
stos
cmc
stos
inc
pop
rclb
dec
sahf
sub
jb
sub
inc
or
mov
xchg
add
inc
or
fs
sub
fwait
inc
fdivs
inc
push
loop
cld
pop
inc
mov
dec
lcall
lds
sahf
sub
push
rcrl
inc
scas
pusha
ss
push
orb
daa
fistps
out
adc
inc
gs
jno
fists
fcom
hlt
ficompl
arpl
call
roll
push
out
or
cltd
add
adc
sti
push
lock
cltd
mov
add
jne
push
mov
ret
mov
shl
sub
sbb
cmp
sub
dec
sahf
ret
jae
iret
in
dec
and
pop
push
out
and
pop
sbb
add
mov
repnz
fwait
jb
in
pop
lret
cmp
sub
loopne
pop
xchg
insl
mov
ljmp
fisttpl
out
push
adc
inc
jne
mov
repz
test
lret
push
or
pop
jne
push
mov
pop
mov
pop
jns
mov
ret
sbb
shlw
sub
jno
xchg
ja
dec
push
adc
leave
push
frstor
inc
jnp
add
sub
mov
push
mov
mov
lods
pop
rorb
push
or
inc
pop
push
into
stos
pop
adc
push
fwait
lds
ja
or
or
nop
or
inc
sti
dec
and
pop
add
test
adc
sub
sub
stos
cmp
repz
sbb
cmpsb
loop
sub
cmp
stc
or
jb
cmpsl
sti
flds
xchg
cmpsb
or
dec
jb
or
dec
xor
sub
popa
sub
loop
dec
push
insb
cli
popa
pop
cmp
test
or
xor
fiadds
jbe
neg
inc
pop
int3
in
jo
fcmovnb
and
mov
aad
dec
xorb
cmp
push
hlt
mov
or
cltd
mov
cltd
push
sti
es
insl
add
jb
inc
jb
push
sbb
rcl
sbb
fcomip
mov
sbb
sub
aaa
ljmp
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
popw
fiaddl
add
lds
stc
icebp
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
