push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
les
jle
jg
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cltd
mov
and
pop
xchg
es
xchg
pushf
add
cmc
popa
int3
in
pusha
mov
sub
aad
add
adc
mov
call
imul
data16
pop
leave
cld
xchg
aaa
add
scas
es
outsb
mov
adc
psadbw
inc
lods
inc
push
mulb
movsb
cs
pop
in
push
movsb
dec
xchg
jnp
cmp
ret
add
sub
mov
fmul
std
xchg
sub
dec
mov
testb
lea
imul
gs
inc
mov
cli
aaa
and
pop
jno
pop
inc
xchg
or
lahf
sub
cltd
stos
test
mov
sub
ljmp
xchg
push
ficoml
cmp
fsts
shll
inc
hlt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
dec
mov
jge
jg
jle
jg
jle
dec
outsl
je
aaa
aad
rorl
dec
nop
cwtl
pop
repz
repnz
mov
mov
xor
push
pop
jmp
xor
xor
stos
enter
rolb
sbb
mov
lods
xor
repz
sbb
addr16
ja
dec
enter
cld
or
push
sbb
scas
stos
jnp
data16
inc
mov
xchg
pushf
in
iret
pop
push
lcall
fsubl
xlat
adcl
inc
mov
xchg
push
jge
scas
pop
and
push
icebp
dec
pushf
fsubp
xor
sub
xchg
sub
mov
subl
sahf
pop
sahf
and
ret
test
push
ficompl
pop
jl
cmpsb
cmpsb
outsb
cmp
orl
ds
jecxz
sti
pop
xchg
fmul
cmp
popa
ss
mov
aaa
ret
das
sub
ret
jmp
movsb
inc
cmp
lret
aas
sbb
pop
rorl
lods
popa
pop
inc
add
sahf
mov
dec
pop
adc
push
lds
adc
jo
dec
mov
call
mov
jno
xchg
mov
cltd
adc
decl
ficomps
pop
das
bound
in
pushf
lods
inc
in
xchg
mov
jo
stos
jle
popa
push
push
scas
or
arpl
ljmp
gs
jmp
rolb
sbb
inc
jno
sbbb
ret
mov
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
mov
jge
jle
jg
jle
xchg
and
or
lds
jp
push
mov
fidivs
dec
mov
push
inc
andb
cmp
mov
xor
aad
outsb
and
add
push
cltd
icebp
mov
inc
xchg
jno
or
movsb
fdivrl
adc
mov
cmc
ret
jg
aad
je
dec
adc
and
add
push
xor
sub
daa
adc
subl
je
push
mov
fisubrl
shrb
jbe
cmp
jae
pop
inc
xchg
mov
nop
faddl
cmp
push
xlat
mov
sub
sbb
pusha
push
xor
filds
sub
xor
inc
cmp
jl
sahf
test
jl
insb
dec
jbe
pop
push
sti
add
push
dec
cltd
jae
aaa
ja
xchg
int3
daa
add
nop
jg
sub
xchg
xchg
ss
mov
push
repnz
adc
bound
xchg
mov
xor
mov
mov
ret
adc
add
cmpsb
lea
dec
add
stc
rol
pop
xchg
adc
or
sub
jmp
hlt
rcrb
popa
add
push
add
outsl
sub
inc
test
ret
adc
shlb
mov
mov
mov
out
outsl
jae
push
mov
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
adc
cmpb
cli
jg
jle
mov
or
and
popa
adc
mov
inc
dec
adc
testb
add
std
leave
or
cli
mov
sti
or
test
cmp
shr
je
mov
jo
lahf
sbb
int
push
fldcw
sub
cmp
mov
popf
mov
jbe
mov
mov
pop
mov
jp
std
xor
dec
hlt
jg
lret
mov
ret
lods
mov
mov
push
cmp
and
inc
mov
imul
addr16
dec
ret
ret
mov
mov
and
xchg
in
xorl
lock
dec
out
pop
aaa
xlat
dec
enter
sbb
adc
mov
push
pfmax
imul
mov
lods
pop
mov
pop
rolb
jnp
test
loope
bound
arpl
inc
mov
mov
mov
mov
inc
push
mov
inc
movsl
mov
xorb
out
jo
mov
jnp
fldl
stos
mov
pop
push
gs
push
adc
push
out
inc
mov
mov
pop
repnz
jmp
pop
mov
fwait
int3
lcall
cs
inc
arpl
xchg
ja
mov
jmp
xchg
mov
push
jo
adc
dec
orb
ret
push
js
jle
jg
jle
or
mov
pop
mov
adc
pop
xchg
cli
jmp
mov
sub
and
and
sub
cmp
cmp
test
and
sbb
adc
arpl
enter
inc
pop
rclb
popa
jge
ret
mov
int3
inc
add
dec
pop
repz
sysret
lock
cli
mov
and
fsubp
scas
aas
push
into
xchg
in
lods
jl
jecxz,pn
std
imul
call
pop
add
lods
cmpsb
cmpsb
les
pop
cmp
stos
lods
xor
adc
lret
xchg
icebp
or
inc
fsub
out
xchg
cmp
stos
sub
add
cli
jne
dec
in
and
ret
fsubl
inc
and
into
xor
pop
pop
or
or
xorl
add
insb
cmpsl
xchg
lea
test
lods
pop
pop
jne
push
and
dec
xchg
jo
jb
pop
cmpb
mov
inc
cltd
lods
shlb
ret
arpl
icebp
jne
mov
ds
jnp
cmp
ja
sbb
mov
xchg
mov
mov
jno
jl
push
fxch
out
das
sbb
dec
test
sti
int3
adc
in
mov
insl
imul
loopne
xor
roll
lock
pop
mov
dec
cmp
jmp
mov
or
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
stos
jne
rorl
jg
jle
xchg
jns
dec
movb
xchg
push
sub
dec
pop
xchg
fstpl
bound
adc
mov
pop
lods
ljmp
shll
adcl
dec
jne
sbb
or
push
int
sub
dec
rcrl
jmp
cmp
push
icebp
sbb
int3
mov
mov
loopne
xchg
jl
es
cltd
pop
mov
mov
out
xchg
and
xchg
roll
and
push
pop
mov
out
cmovne
cltd
rorb
push
aas
cli
sarl
mov
lret
insl
stc
cld
das
dec
mov
cli
gs
imull
imul
xor
lock
sub
int3
lahf
dec
sbb
or
imul
out
popa
scas
adc
xor
mov
inc
outsl
out
sub
in
mov
mov
lock
jo
into
mov
or
cltd
call
cmpsl
cmp
push
sub
jae
cld
js
mov
xor
or
pop
fwait
or
jne
xchg
sub
and
and
dec
push
cmpsl
fisubrl
jle
insl
fwait
scas
mov
cld
mov
sbbb
fisubrl
iret
cmp
xchg
jl
cmp
pop
mov
xchg
imul
adc
das
jmp
ljmp
inc
xchg
test
scas
stos
pop
cmpsl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
ja
pop
jle
cli
jg
jle
adc
xlat
pop
rcrb
add
hlt
pop
fs
dec
mov
mov
icebp
out
lcall
xor
jge
popa
sbb
out
out
xor
mov
jmp
mov
popf
inc
mov
sbb
add
xchg
bound
cmp
inc
lret
loope
nop
cmp
inc
and
fnstsw
les
xor
cmp
cmpsl
adc
dec
shr
jns
ja
insb
sahf
jne
cmpb
push
mov
mov
inc
scas
mov
scas
jl
sbb
adc
ret
mov
mov
fnstsw
int3
or
pop
lods
daa
rorb
cltd
les
addr16
mov
mov
aam
mov
dec
sbb
jmp
sahf
pop
shrl
ja
pop
and
or
push
inc
dec
out
xlat
inc
xor
mov
and
dec
sub
shrb
addr16
inc
pop
jb
mov
cmpsb
mov
pop
insl
mov
cmp
xlat
mov
mov
mov
xchg
je
dec
inc
les
fildll
adc
les
cltd
xor
insb
add
cmpsl
loop
shrb
ror
add
inc
sbb
xor
jge
int
lds
pusha
add
jae
pushf
aaa
pushl
stos
pop
dec
xor
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
dec
mov
clc
mov
rolb
adc
idivl
cmp
dec
int
repnz
repz
lret
jo
jnp
ljmp
bound
mov
out
sbb
sbb
mov
push
dec
xor
jp
in
sbb
fwait
cmp
jbe
inc
iret
daa
insl
mov
fcompl
push
push
sbb
dec
mov
mov
mov
mov
xorw
outsb
loop
out
repnz
scas
xor
sub
pop
movb
push
stc
and
push
pop
jge
jg
nop
inc
mov
repnz
adc
mov
and
fiaddl
xchg
sbb
inc
mov
insl
sub
adcb
addr16
loope
mov
inc
ja
loop
xlat
insl
sahf
mov
decb
push
addl
dec
test
add
outsl
sub
or
lods
imul
mov
rcl
das
ret
fdivrl
cmp
xor
jecxz
int
mov
dec
mov
pop
cmpsl
dec
idivl
add
lret
jb
lret
repz
subl
aad
stos
pop
xorb
imulb
dec
test
movsl
leave
repz
xchg
aad
sahf
je
jnp
or
cmp
mov
sahf
inc
jnp
hlt
and
imul
push
stc
mov
pop
enter
call
add
pushf
add
add
dec
and
jno
push
mov
push
out
adc
push
add
cli
jg
jle
incl
sbb
inc
xchg
outsl
dec
pop
lahf
pop
stc
inc
scas
fisubrs
jnp
cld
push
out
xor
in
push
mov
xchg
xchg
out
add
sbb
cs
in
fmulp
push
cld
popf
nop
aaa
stc
fdivs
sub
int
sbb
jp
or
aaa
loopne
xchg
lahf
or
cmp
jae
and
inc
mov
dec
rcl
ret
xchg
add
lds
lods
mov
pop
stos
sti
ds
fidivrl
sbb
mov
dec
inc
and
xchg
pusha
sub
cmpl
arpl
fsubrl
dec
jmp
mov
pop
sub
pop
pop
ficoms
jns
stos
xlat
add
mov
int3
push
arpl
imul
data16
out
add
outsl
out
pusha
jle
lret
fstpl
subb
imul
sbb
jg
sub
push
outsb
and
pop
cmp
xor
das
popa
adc
into
inc
cmpsl
out
mov
cmp
out
push
outsl
add
mov
aaa
cwtl
mov
pusha
mov
cmp
fadds
negl
push
jecxz
mov
pushf
dec
ja
loope
pop
les
psubsb
int3
mov
mov
pusha
mov
mov
loop
sbb
or
pusha
xchg
lahf
sub
and
std
aaa
stc
push
pop
mov
in
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
lods
inc
sbb
lcall
jle
cmp
sub
or
xor
lret
mov
jg
fcompl
add
outsl
pop
jno
dec
push
mov
ljmp
mov
call
sub
nop
pop
xor
jb
xor
subb
inc
xchg
mov
mov
and
scas
lcall
lock
mov
adc
popf
aas
mov
pop
insl
jns
mov
adc
movsb
gs
sarl
push
rcr
push
mov
mov
rolb
add
fnstenv
or
mov
rolb
push
sbb
push
lret
stos
xchg
movsl
or
std
xor
daa
mov
test
mov
sub
subb
push
lea
test
jne
inc
aad
mov
push
jae
and
repz
loopne
orb
fcmovu
scas
jmp
movsb
or
loope
pop
push
cmp
imul
stos
mov
cmp
cmp
xchg
sub
push
sarl
lods
cltd
adc
or
scas
dec
cmpb
cmp
inc
dec
shrb
cmp
int
inc
rcrl
mov
sbb
les
les
jmp
cmp
jg
repz
xchg
sub
mov
popf
aam
mov
out
add
sbb
mov
inc
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
fisttpl
test
jle
jg
jle
sub
cld
mov
mull
jecxz
add
cmpsl
cmc
mov
mov
jns
pop
loop
pop
stc
adc
sbb
cmpsb
xor
jae
push
mov
dec
pushl
lods
ds
adc
mov
filds
fsts
out
dec
dec
jo
push
mov
xorb
stos
addr16
jno
ss
and
nop
imul
inc
data16
xor
aaa
or
hlt
fnstenv
call
push
cmc
pop
cmpsl
jmp
imul
movsl
push
stos
inc
jno
movsl
xor
inc
stos
cmp
and
dec
mov
repz
jmp
jnp
or
fimuls
out
xlat
out
and
mov
mov
inc
xlat
aam
test
adc
std
repz
add
fldl
fs
push
shll
mov
push
or
cmp
mov
jecxz
pop
push
arpl
scas
pop
xor
inc
es
in
shrl
mov
inc
cwtl
loope
sarl
cmp
and
pop
roll
ror
clc
inc
das
jbe
sbb
jo
pusha
mov
inc
cmp
dec
lods
mov
int
cmc
stos
popa
movsl
movsb
mov
inc
loop
pop
pop
mov
ss
xchg
imul
int3
popa
cld
push
mov
sbb
cmp
xchg
and
pop
sbbl
xchg
pushf
loopne
or
push
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
popa
loop
in
mov
jg
jle
imul
push
insl
dec
push
sahf
ficomps
andl
cmc
movsl
testb
jnp
call
mov
pop
pop
mov
not
loop
repnz
jmp
jl
push
pusha
fwait
xchg
test
and
ds
dec
lods
popf
xchg
push
pop
xor
adc
inc
mov
sbb
stos
stc
jge
fldcw
sub
mov
jge
cmpsb
pushf
imul
or
mov
test
pop
lods
jg
dec
les
and
push
stos
ja
add
das
sbb
aad
cmpl
or
xor
dec
push
add
mov
cmp
lcall
and
dec
xchg
inc
fbstp
mov
mov
xchg
inc
cmp
mov
shlb
add
imul
js
add
lcall
mov
mov
scas
mov
inc
loope
adc
dec
mov
ljmp
pop
xlat
pop
and
test
xchg
loope
cwtl
push
jnp
and
mov
fsubrl
adc
adc
sub
loop
mov
daa
dec
mov
bound
addb
shlb
lahf
xchg
push
mov
push
repnz
sbb
cvtpi2ps
cld
or
fs
psubq
repnz
loop
std
cwtl
jmp
lea
inc
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
cmp
int3
sbb
or
jle
jg
jle
jnp
xor
mov
js
lcall
lahf
loope,pt
das
int
fxch
mov
pop
jb
dec
adc
fmuls
test
test
jmp
pop
sub
test
pop
lret
add
ret
pop
pop
or
dec
mov
mov
pop
mov
sub
jp
ret
lret
pusha
je
mov
jp
xor
xor
loop
mov
mov
pop
mov
mov
rcrl
stos
cmp
xor
push
jns
shrl
lret
pop
cmpsb
jle
adc
lods
or
inc
lret
out
jne
shlb
jnp
and
repz
mov
jo
mov
dec
mov
in
xor
inc
pushf
movsl
inc
aad
xor
test
pop
lea
adc
lahf
outsb
shll
cltd
xchg
fs
pop
lret
int
mov
fisttpl
adc
xchg
xchg
xorb
std
or
imul
jno
inc
mov
mov
cmpsb
test
shl
into
rclb
ficoms
xchg
cmp
push
jne
push
das
dec
inc
inc
inc
stos
std
cli
lahf
mov
into
movsb
repz
in
inc
mov
fs
lret
add
mov
xchg
addr16
enter
cmpsb
lods
xor
cltd
mov
xorl
mov
sub
enter
and
out
xor
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
jno
mov
jle
jg
jle
xor
sti
shll
mov
cmp
lahf
jne
cmp
shrl
clc
repnz
loopne
jo
test
fcmovbe
pop
rep
inc
jne
xchg
rcrb
and
aad
dec
flds
adc
fwait
dec
jp
xchg
xor
sbb
scas
push
mov
xchg
cwtl
pop
aas
pop
dec
xchg
div
insl
add
pop
ljmp
jle
cmp
adc
ljmp
ljmp
nop
mov
push
enter
test
fwait
lock
mov
roll
sub
push
cmpsb
test
mov
std
add
fnstsw
iret
mov
push
and
repz
sub
popa
cmc
js
test
sub
inc
mov
add
or
fucomip
jns
jmp
sub
and
imul
pop
mov
cmp
jp
push
dec
fildl
push
in
jle
jne
xor
push
sbb
loop
sub
fdivr
sub
add
cltd
popa
mov
mov
pop
xchg
add
ret
sbb
jno
stos
pop
ret
cwtl
and
scas
bound
jo
or
dec
cmp
add
fnstsw
cmp
or
add
xchg
sbb
mov
pop
leave
pushf
adc
ret
repnz
imul
inc
push
gs
lcall
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
pop
xchg
daa
mov
or
cli
jg
jle
fistpl
mov
and
jge
mov
test
das
fidivs
test
mov
cwtl
ret
insl
out
xchg
rorb
jge
and
pop
int
jmp
stos
roll
leave
pop
jns
fcom
mov
aas
in
mov
jae
adc
repnz
int
push
stc
stos
movsl
pusha
adc
mov
adc
cmp
pop
js
push
xlat
adc
push
andb
sub
stos
ss
mov
xor
sbb
mov
xchg
pop
add
push
int3
pop
jmp
xor
sub
add
sbb
daa
sub
and
xor
cmpsb
pusha
sbb
sbb
outsb
arpl
pop
mov
sbb
jns
ljmp
dec
xor
scas
jo
popa
sti
and
push
in
fwait
movsl
outsl
in
push
xor
lea
push
lcall
fs
je
jmp
adc
pop
jmp
pusha
mov
mov
je
test
negb
sahf
lret
icebp
mov
jge
rcl
cmp
scas
test
jmp
pop
jbe
push
stc
pop
xchg
data16
fiaddl
and
mov
int
out
sub
xlat
dec
pop
mov
jns
inc
and
sub
adc
ss
in
pop
add
mov
xlat
jo
or
dec
arpl
inc
dec
insl
out
fs
lret
mov
enter
outsb
std
dec
insb
jp
add
cmp
pop
mov
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
fmuls
jle
cli
jg
jle
repnz
flds
jne
out
bound
mov
jl
sbb
mov
jg
shl
dec
pop
ljmp
sbb
test
dec
mov
lods
inc
mov
push
loope
add
mov
or
sbb
test
in
pop
mov
fisubl
sub
bound
int
add
movsb
cmpsb
stos
in
jo
mov
ret
jl
xor
lods
add
pop
iret
scas
out
inc
dec
shlb
in
sub
mov
gs
inc
outsb
das
ja
arpl
sbb
sti
sbb
cmp
mov
data16
fmuls
dec
notl
ret
and
fmulp
jecxz
fwait
xchg
pop
xchg
adc
cs
push
xchg
fwait
scas
mov
fcmovu
adc
pop
mov
inc
push
pop
jne
inc
mov
popf
std
jecxz
lods
in
stos
imul
or
lods
cmp
testb
inc
push
sbb
stos
int
pushf
out
ds
and
cltd
mov
gs
ffreep
cs
inc
xchg
cmc
push
dec
jns
xchg
dec
or
sbb
imul
mov
mov
sub
iret
xor
mov
dec
mov
int
pop
inc
daa
sbb
mov
sub
in
ret
aad
sbb
or
mov
out
js
bound
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
mov
jle
jg
jle
scas
jg
lods
icebp
xchg
xor
push
std
dec
xchg
test
insb
icebp
daa
test
inc
cmp
add
jnp
mov
and
xchg
mov
loopne
ret
fmul
fs
and
jns
inc
jecxz
or
cmp
inc
inc
adc
int
dec
sbb
lret
jp
pop
cmp
pop
xchg
ja
jo
push
aas
fwait
test
mov
sbb
out
les
js
enter
pop
mov
sbb
sub
push
popf
inc
enter
neg
je
xor
jo
mov
xchg
mov
sahf
cld
xlat
sti
insb
ficomps
push
mov
adc
cmp
inc
and
fisubs
out
adc
test
ficoml
inc
fiadds
adc
push
scas
call
popa
add
pop
out
test
xor
adc
std
cmpsb
mov
lahf
dec
mov
dec
inc
nop
js
jmp
nop
clc
mov
inc
aaa
lcall
fwait
test
fs
movsb
xchg
mov
jl
push
mov
pop
xchg
lock
mov
push
mov
mov
aas
dec
or
xchg
mov
fdivl
adc
and
xchg
jecxz
in
pop
sub
inc
pxor
mov
sub
xchg
daa
scas
or
call
mov
mov
add
pop
jmp
add
mov
adcb
mov
pop
jle
cli
jg
jle
jmp
ss
xor
lret
mov
cmp
jp
iret
pop
jmp
sbb
rcll
in
and
push
divb
cltd
pop
push
jo
pop
mull
push
or
cmp
gs
adc
or
aas
xchg
rolb
aas
bound
pop
add
movsl
xor
xor
inc
push
xchg
out
or
scas
xchg
mov
daa
pushf
pop
das
ror
dec
jmp
jmp
stos
xor
insl
xchg
cs
or
out
fidivs
mov
pop
pop
cltd
mov
pop
mov
inc
fwait
mov
pusha
jbe
push
aam
aad
sbb
pop
cmp
pop
fcomip
jmp
lds
icebp
cli
pop
idivl
inc
lret
shrb
or
test
dec
loop
mov
fisubl
mov
dec
les
jae
ficomps
dec
jbe
vmovshdup
fiadds
ss
inc
xchg
cmp
bound
pop
xadd
das
lds
fcoms
out
add
cmpb
mov
inc
jecxz
shrl
xchg
inc
data16
jg
leave
xchg
cs
mov
xor
xchg
mov
lds
push
sbb
jg
jne
pop
loop
or
or
mov
mov
iret
xchg
cmpsb
rorl
inc
sbb
fistpll
das
das
das
push
xor
xchg
adc
mov
test
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
sbb
jle
jl
jle
gs
loopne
mov
sub
repnz
xchg
mov
xor
and
into
lahf
repz
sbb
xchg
lods
mov
pop
pusha
ret
dec
push
lea
xchg
and
outsl
negl
xorps
cmp
shlb
ds
lds
mov
shll
neg
clc
nop
test
enter
fildl
mov
cltd
mov
pop
sahf
sarl
in
dec
inc
out
jmp
jp
or
sub
lods
aaa
neg
dec
mov
dec
loop
addr16
cltd
cmpsl
movsb
inc
gs
jge
ds
in
push
loopne
outsb
cmp
mov
mov
es
lds
cmpsl
push
lock
and
in
add
arpl
jbe
fstps
mov
daa
xchg
mov
sbb
dec
jecxz
push
inc
or
lret
popf
or
shl
mov
sbb
lds
jg
lcall
jmp
xor
shlb
shl
outsb
cmp
xor
mov
jg
cmpsb
lods
out
icebp
clc
pop
and
addl
dec
loop
out
push
bound
add
add
arpl
xchg
mov
ja
and
push
pusha
test
aam
pop
sub
enter
rorb
xchg
xchg
jmp
adc
jmp
xor
cmp
mov
dec
mov
sub
cmpsb
aad
or
adc
int
mov
aam
mov
fdivl
push
pop
aad
inc
cltd
fwait
push
cmpsb
adc
ret
inc
xor
xor
inc
add
test
int
push
add
mov
pop
mov
cmp
or
inc
mov
sbb
orl
sbb
pop
mov
or
out
test
mov
clc
dec
adc
xlat
inc
inc
xchg
ljmp
xchg
cltd
jae
pop
add
dec
mov
and
pushf
daa
jmp
mov
aaa
andl
leave
call
test
repz
fwait
int
sub
jg
imul
mov
js
xchg
out
stos
fwait
mov
mov
jns
imul
and
or
pop
faddl
sbb
sbb
loopne
push
jo
mov
sbb
pushf
cs
imul
aad
lods
aam
push
pop
or
cltd
in
cmp
dec
in
jmp
cltd
std
into
and
add
adc
lds
jae
iret
cli
cmp
and
mov
or
nop
stc
movsb
jl
mov
call
xor
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
ret
add
and
jle
pop
jl
jle
pop
mov
mov
cmp
test
mov
jne
jnp
sub
jmp
add
and
lods
repnz
scas
jecxz
push
push
jge
xchg
decb
or
or
sbb
cmc
insb
mov
jbe
jb
or
add
testl
push
out
xchg
add
fldcw
sti
inc
sbb
idivl
push
cmp
push
and
pop
dec
arpl
jbe
adc
sub
mov
mov
or
mov
mov
mov
push
mov
js
addr16
dec
xchg
mov
and
lods
pop
mov
xlat
imul
int
fwait
out
idivl
insb
cmp
dec
jo
sub
mov
fisttps
xchg
imul
sbb
mov
fwait
mov
ja
in
and
jbe
subb
mov
and
aad
jnp
xchg
mov
out
jb
sbb
iret
in
jnp
addr16
js
jp
test
shlb
mov
orl
iret
in
in
mov
fdivrs
mov
movsl
sbb
fs
mov
daa
jns
orl
and
dec
or
pop
mov
pop
in
fbstp
sbb
mov
daa
imul
hlt
cmpsb
arpl
int
pop
push
insb
rcrl
outsb
fldl
xor
out
test
orl
daa
faddp
cmpsb
in
push
adc
add
xchg
pop
sub
inc
and
or
cmpb
cmp
push
inc
push
rcl
pusha
cmp
aas
in
mov
xchg
movsb
popa
out
pop
and
ret
pop
mov
push
jb
mov
enter
sbb
sub
pop
repnz
inc
push
add
jge
or
pop
inc
jg
and
lret
mov
sbb
or
stos
cmp
mov
jb
xchg
xor
je
inc
addr16
les
push
out
cmc
jecxz
insl
enter
into
sbb
mov
lret
mov
aad
or
mov
in
loop
push
data16
les
add
xchg
loope
sub
cmp
pmulhuw
aaa
popa
or
int
lock
int3
mov
cmp
repnz
or
popf
movsb
jmp
push
aaa
cmp
adc
mov
push
stos
mov
fldcw
mov
or
shll
test
push
or
adc
stos
stc
je
jne
add
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
and
or
jle
pop
jl
jle
adc
imul
pop
inc
sbb
ret
gs
rcl
mov
xchg
mov
lret
int3
fbstp
jno
imul
fdivl
push
and
scas
idiv
xchg
mov
sbb
aas
sbb
stos
sbb
cmp
add
and
and
or
adc
ret
sub
push
or
mov
inc
movsl
ret
sub
adc
mov
push
insl
cmp
mov
or
cmp
bound
xchg
fsubl
pop
lea
jecxz
pop
inc
scas
cwtl
sbb
cmp
test
push
jmp
and
push
inc
mov
subb
testl
nop
mull
push
sti
aad
adc
or
cmpsl
sbb
pop
enter
add
pushf
sbb
mov
jmp
pop
xor
sbb
mov
sti
push
adcb
repz
cld
and
cld
push
sbb
out
jnp
and
lcall
adc
and
repnz
outsl
mov
adc
xchg
cltd
push
push
or
in
pop
mov
stos
pop
pop
dec
xor
ss
push
pop
xchg
xchg
out
cmp
aam
xor
rcrb
repnz
inc
jns
out
xor
xor
and
xor
or
loop
push
inc
mov
xchg
adc
and
rcrl
push
sub
inc
xchg
out
add
and
cmp
ret
push
repnz
mov
ljmp
jo
movsb
inc
sbb
decl
and
sbb
or
mov
fisttpll
movsl
inc
fisubl
jnp
out
movsb
out
lahf
stos
jmp
in
out
mov
mov
jb
adc
jle
push
pop
fimull
mov
mov
xchg
dec
sub
popa
movsb
mov
lret
mov
add
lods
dec
scas
imul
roll
cmc
jae
cld
adc
std
push
lods
loop
xchg
aaa
add
mov
fstpl
lods
negb
mov
outsl
sub
test
mov
les
gs
inc
xchg
inc
mov
push
push
aaa
mov
call
push
lret
pop
repz
sub
inc
and
or
jle
mov
mov
jecxz
or
call
aaa
xchg
adc
pop
in
mov
xor
stos
sub
and
cwtl
hlt
ret
das
test
lcall
pop
sub
cmp
hlt
xchg
sub
add
ljmp
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
lds
sbb
jle
in
push
push
push
pop
cltd
out
loope
jbe
rorb
dec
push
leave
xchg
stc
neg
addl
jle
jl
das
inc
js
jnp
dec
lea
and
adcl
cltd
mov
ss
aad
mov
mov
adc
or
mov
int
shlb
movsb
add
fcoms
out
jl
adc
xchg
out
rorl
pop
add
sub
call
sbb
in
mov
inc
xchg
cltd
mov
shlb
in
adc
fwait
cmpsl
out
or
and
ret
testl
xor
in
loope
in
pop
out
fs
hlt
outsb
mov
repz
dec
add
pop
and
lock
and
or
jb
cmpb
xor
sbb
insl
into
xchg
mov
sbb
push
jle
inc
test
dec
mov
push
xor
rorb
fs
aam
xor
pop
ja
push
rcll
lods
sub
jp
rol
push
incl
add
xor
sub
pop
mov
inc
and
ljmp
lods
dec
push
mov
test
std
add
mov
mov
xor
rorl
lcall
in
lret
and
xchg
dec
movsb
addr16
stc
frstor
rclb
mov
ljmp
dec
mov
cltd
mov
je
imul
mov
out
mov
fwait
in
outsb
xorl
cmpsl
enter
out
push
inc
cmpsl
adc
push
lcall
adcl
lahf
jg
jne
sbb
or
xchg
sbb
push
les
cli
add
inc
sub
pop
sub
mov
pop
loop
xchg
and
lods
shll
xor
xor
sub
adc
std
sub
loopne
rcr
jge
js
les
jp
cmp
sub
xchg
adc
hlt
jmp
pop
mov
xchg
insl
and
mov
lock
inc
pop
ljmp
lret
rol
jmp
sub
dec
aam
push
dec
inc
idivb
push
lcall
lds
jp
notl
enter
lret
xchg
pop
test
push
movsb
sub
sub
mov
movsb
or
enter
aaa
mov
xor
in
adc
mov
test
cmp
movl
and
sub
dec
imul
test
in
ss
inc
daa
in
jb
inc
cmpsb
cmp
mov
lods
sbb
fnstenv
rorb
cwtl
add
pop
lods
outsb
bound
ret
mov
fcompl
add
xchg
sahf
mov
mov
daa
xchg
mov
clc
jmp
add
dec
popa
jno
jne
xor
jle
push
cmp
sbb
pop
jl
jle
int
xor
xorb
or
push
stc
mov
jl
pop
mov
lret
or
push
mov
gs
fs
sub
sub
push
dec
mov
jle
add
dec
push
push
inc
aaa
fcoml
loopne
sbb
aas
scas
outsb
fsubs
add
add
dec
das
mov
and
jo
mov
or
mov
xchg
inc
aaa
loopne
jae
jne
pop
jnp
add
jl
vpmacsdqh
xor
fwait
gs
and
int
imul
jnp
inc
dec
lahf
or
das
push
jecxz
pop
out
lcall
leave
jno
out
xchg
inc
sub
xlat
cmp
adc
mov
insb
lret
fidivs
sahf
jl
adc
xor
cli
and
jecxz
or
sbb
xlat
sub
fists
lcall
cmp
sub
aaa
cmpsl
lds
dec
cld
xor
data16
inc
std
adcb
jmp
mov
pusha
add
roll
sbb
ds
cmpsb
and
or
sub
fistl
jno
insb
in
icebp
pop
jns
lock
shrl
in
outsl
push
into
add
inc
inc
or
aam
adc
push
pop
cld
jae
cs
icebp
jecxz
insb
xchg
daa
scas
mov
xchg
ja
imul
dec
xor
push
rcll
xchg
imul
mov
insb
sahf
pop
movsl
and
push
lods
push
mov
test
sub
dec
jmp
pushl
std
jmp
dec
lock
push
insl
jmp
mov
orb
stc
cmpsb
fyl2x
hlt
seta
add
xchg
mov
ja
mov
mov
mov
test
stos
and
ret
orb
inc
dec
js
push
out
adc
lcall
js
ret
jo
inc
gs
mov
sbb
adc
fcmovbe
filds
cmp
fwait
out
into
push
sub
testb
nop
mov
dec
mov
add
mov
inc
les
or
xchg
jge
filds
or
sbb
cmp
add
mov
xchg
lods
mov
enter
cmp
or
mov
push
add
push
add
lods
mov
cmp
dec
xchg
lods
push
pop
rclb
push
into
idivl
lret
mov
sub
cmp
mov
sbb
push
sbb
sub
lods
popa
sahf
fwait
mov
loopne
mov
and
mov
popf
adc
mov
lock
mov
mov
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
mov
out
mov
pop
jl
jle
sub
int3
pop
cwtl
mov
pop
jle
fnstenv
les
cmpsb
enter
cwtl
fldl
in
mov
lret
pop
ds
inc
mov
jno
jl
subl
inc
repnz
and
in
int
icebp
mov
jp
scas
filds
mov
pop
xchg
and
pushf
int3
dec
push
aam
dec
sbb
frstor
inc
push
testl
pop
push
imul
lock
xchg
sbb
inc
test
cld
cmp
push
push
inc
out
push
and
dec
push
mov
sbb
xlat
hlt
xor
jb
aam
xor
adc
test
jae
push
cmpsl
mov
and
clc
xor
xor
aam
mov
or
xor
outsb
mov
fisubrs
outsb
inc
push
leave
xchg
cmc
in
adc
adc
sbb
ret
dec
pop
or
es
push
xchg
out
out
push
imul
or
or
lret
stc
mov
adc
lcall
dec
insb
mov
sub
test
sbb
es
or
out
std
add
mov
jge
dec
mov
enter
jne
add
aad
pop
add
push
xchg
adc
push
pop
pop
sbb
adc
sbb
adc
out
dec
pop
jp
xor
dec
cmpl
lods
dec
mov
repz
ljmp
jmp
sub
outsb
mov
lods
mov
insl
in
cli
cs
stc
lods
popa
lahf
xor
sbbb
and
decl
mov
pop
ret
enter
cli
pop
and
xor
fadd
push
pop
shll
mov
enter
mov
aaa
mov
sbb
enter
loop
dec
pop
sub
cmp
pop
jle
ret
sbb
inc
push
lds
pop
cmpsl
fstl
inc
inc
dec
aad
adc
pop
jb
ret
pushf
xor
imul
movsb
lcall
dec
inc
lds
sub
add
cmp
je
cmp
sbb
enter
insb
roll
jecxz
movsl
ss
and
ficoml
and
xor
add
out
fcom
dec
adc
sub
jb
sub
lods
jecxz
outsb
icebp
jge
pusha
inc
ds
lret
pusha
pop
inc
arpl
fdivs
inc
cltd
enter
xchg
dec
jmp
sbb
jne
ret
sub
fstpl
and
in
les
addr16
fists
mov
push
scas
ficompl
jo
ljmp
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
aam
cmp
jl
jle
jns
jne
addl
mov
andl
icebp
inc
cmpsl
sub
scas
and
add
leave
cld
mov
popa
jge
mov
or
aaa
mov
cmpsb
es
das
cmp
in
dec
das
and
in
push
xor
mov
ret
mov
jge
in
adc
push
out
jp
xchg
js
mov
push
cmp
pop
leave
xor
push
xchg
and
js
dec
cmp
pop
out
ret
xorl
psubb
lahf
sbb
mov
adc
fdivrs
push
sub
lods
sub
test
cmp
in
jns
inc
add
std
lahf
lea
push
addr16
test
pop
sbb
dec
xor
scas
fisubrl
push
sub
push
sub
cmp
pop
pop
jge
mov
mov
mov
sub
movsb
add
mov
mov
push
ja
fmull
lcall
xchg
mov
shrl
jbe
or
sbb
in
repnz
outsl
mulb
in
pop
jne
mov
sti
push
cs
cltd
fs
jl
test
jl
jo
sbb
incb
fnstcw
and
jnp
sbb
or
maskmovq
idivl
push
loopne
sub
pop
inc
mov
loope
mov
push
in
lock
mov
loope
je
mov
mov
xchg
call
jp
adc
fstp
add
cmp
mov
std
jge
aaa
dec
mov
mov
test
outsb
xor
pop
mov
fisubrl
mov
adcl
data16
mov
insl
movsl
scas
sub
xor
into
jecxz
sbb
movsl
nop
inc
test
stos
popa
pop
xor
loope
fldcw
sub
inc
xchg
mov
outsb
add
jecxz
fwait
scas
loopne,pn
sbb
stos
test
pop
cmc
xchg
test
cmp
lods
rcrl
jbe
fistpl
or
sti
jne
xchg
xor
js
jb
ror
push
sbb
negl
and
jo
test
mov
dec
rolb
dec
mov
cmpsb
sbb
test
pop
or
and
dec
inc
mov
shll
aaa
pop
cltd
adc
out
sbb
hlt
sub
push
or
leave
dec
pop
lret
inc
int
sbb
test
rcrl
aad
loope
jo
xor
out
xchg
dec
jo
cmpl
sbb
xor
mov
mov
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
in
jl
jle
jl
jle
pop
cmp
cmp
ja
xor
push
cmp
sbb
add
mov
outsb
leave
mov
mov
mov
dec
jle,pn
xchg
push
add
mov
hlt
imulb
mov
jmp
push
and
jo
dec
shrl
loopne
mov
test
dec
xchg
mov
sbb
in
cli
popf
inc
test
fwait
outsl
jp
rcll
add
ret
jecxz
push
leave
je
and
add
fisubs
inc
pop
add
int
lret
adc
pusha
in
jo
aad
adcl
movsbl
push
iret
add
test
and
clc
js
push
jmp
fstpl
and
add
outsb
test
sti
xchg
jl
dec
lcall
mov
sahf
out
sub
cmpsb
mov
xchg
mov
pop
xchg
lea
aam
stos
cmp
mov
pop
pushf
jge
and
mov
lds
push
sahf
add
icebp
ss
mov
add
sub
pop
add
lods
sbb
cmp
jmp
es
sbb
ret
icebp
ficoms
jl
mov
xchg
inc
lock
inc
sub
sbb
xchg
add
or
dec
arpl
in
inc
adc
dec
xchg
add
insb
xchg
push
sbbb
pop
xor
enter
sub
setg
out
pop
rcl
iret
jmp
call
xor
mov
mov
dec
enter
aam
loopne
jle
push
adc
mov
fcompl
add
divl
jbe
jne
and
xor
in
mov
pop
inc
jge
out
lret
cld
fisttps
sub
cmpsl
lds
jle
adc
sub
popf
jne
mov
mov
ficompl
dec
in
push
gs
daa
mov
mov
popf
int
adc
movl
testl
xchg
je
outsl
sbb
mov
mov
mov
and
add
rcrl
xchg
push
xchg
and
pop
mov
pop
cli
out
cltd
mov
roll
in
sbb
sbb
pop
gs
xchg
lcall
nop
pusha
cmc
daa
je
fcompl
push
cmc
loop
adc
xor
adc
cmpsl
shld
add
dec
sbb
or
sbb
cmp
repnz
jmp
dec
mov
add
jne
mov
jmp
notb
and
push
insl
sbb
inc
sbb
aas
mov
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
sub
xchg
imulb
jle
jl
jle
data16
lret
jae
jle
adc
outsl
dec
clc
xchg
ljmp
clc
xchg
push
cltd
popa
mov
fwait
push
and
xlat
bound
out
push
push
pop
loope
xchg
aam
push
lods
cmpb
mov
mov
shl
dec
mov
popa
sub
mov
cmp
rcrb
cmc
push
iret
add
adc
pop
dec
sbb
push
xor
hlt
mov
mov
mov
or
xchg
data16
insl
cld
arpl
push
push
fldl
inc
enter
and
ret
mov
and
icebp
dec
xchg
mov
sub
xchg
adc
push
arpl
adc
and
xor
fldenv
xchg
mov
or
je
inc
dec
mov
push
or
stos
cs
push
mov
push
fiaddl
and
mov
stc
daa
sbb
scas
outsb
xlat
popf
int3
adcl
lods
rolb
or
mov
push
push
cmc
es
scas
mov
jp
mov
fcomps
ds
push
test
dec
push
push
lock
cmp
mov
ficoml
xchg
pop
or
in
xchg
nop
mov
xor
popf
and
mov
les
aas
push
clc
jmp
pop
and
and
imul
jl
mov
cmpsl
cs
push
lret
inc
add
or
mov
mov
mov
dec
repz
jecxz
and
xchg
adc
addr16
sti
inc
dec
pop
mov
xchg
repz
mov
lret
and
lock
shrb
jns
xlat
cmpsl
addr16
cmpsl
and
imul
mov
xchg
rolb
lods
in
scas
into
and
shl
sub
in
add
bound
add
mov
mov
ja
loopne
and
push
ss
cmp
push
cli
dec
inc
and
cwtl
sbb
mov
sub
lock
xor
inc
iret
mov
fcmovb
push
mov
pop
bnd
jmp
pop
mov
jbe
dec
xchg
jo
cli
test
cmp
cmpsl
mov
dec
mov
ja
insl
pop
xor
xchg
loope
jmp
or
mov
cltd
push
adc
imul
mov
ret
push
xchg
or
pop
pop
cwtl
adcb
push
clc
push
xchg
push
push
je
push
push
cmpsl
arpl
cmp
xor
cmp
sbb
lret
cmp
jae
aad
cmp
daa
fmul
push
fmulp
lds
mov
dec
inc
incl
imul
dec
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
mov
jle
jl
jle
js
enter
and
je
sub
js
jo
aaa
pop
xchg
aam
dec
shr
les
es
mov
xor
ret
fs
xchg
aad
mov
pop
inc
fisttpl
push
vdivss
imul
out
xchg
add
mov
sub
sbb
pop
xor
xor
inc
sub
dec
mov
subl
adc
and
or
pop
cld
addb
cltd
pop
pusha
mov
mov
insb
in
nop
mov
movsb
in
cmp
jl
push
out
ret
lret
inc
shll
xchg
roll
out
lods
sbb
insl
sbb
sbb
clc
inc
pop
jg
insl
out
sub
rclb
mov
insb
jecxz
fcoms
xchg
cmpsl
push
mov
std
lcall
dec
fistpll
add
pop
mov
addr16
mov
shrb
pop
insl
popf
jnp
xchg
xor
data16
outsl
add
imul
sub
leave
popa
mov
aaa
addr16
xor
fwait
je
jmp
movsl
mov
push
push
jecxz
stos
fucomi
dec
mov
xchg
adc
dec
dec
mov
test
or
pop
cmp
jno
sub
outsb
mov
mov
cmp
adc
fidivrs
sbb
mov
mov
ljmp
scas
pop
push
sbb
cmp
sbb
cmpsb
stos
or
cmp
dec
lea
dec
popf
pop
das
movsl
push
xor
push
xor
lret
dec
mov
push
leave
jmp
pop
inc
sbb
loop
add
fs
mov
pop
stos
movsl
loopne
pop
sbb
xor
fsubrs
cmp
push
and
lcall
and
cs
dec
xchg
sbb
iret
pop
outsl
adc
shrb
out
roll
add
sub
push
mov
add
mov
sbb
jecxz
pop
arpl
and
inc
xor
lods
sbb
sbb
ret
inc
push
push
mov
adc
or
jo
aaa
loop
dec
fisubrs
jmp
mov
sbb
test
arpl
xor
mov
add
sub
inc
addr16
lock
lret
xchg
jo
mov
cmp
push
fcomip
mov
fs
shrl
hlt
push
inc
popf
sti
call
and
scas
je
add
push
in
mov
xchg
push
data16
sub
jecxz
jbe
int
push
out
out
cmp
pop
push
sub
xchg
enter
rcr
cmp
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
add
add
sub
jle
sub
pop
pop
mov
leave
jo
inc
popf
es
fidivrl
dec
xchg
dec
mov
idivl
cmc
inc
mov
pop
testl
adc
icebp
sti
negl
nop
sub
stos
lret
inc
test
aam
push
jp
jge
sub
fdivs
xchg
mov
xor
movsb
loop
xchg
cmc
fisttpl
and
lret
and
adc
sar
xchg
pop
rorb
leave
mov
mov
dec
and
cmp
jle
xor
or
insb
adc
movsl
mov
imul
int
adc
rorl
in
push
xor
lcall
std
mov
sbb
ss
jmp
add
or
xchg
pop
sahf
mov
xorl
or
mov
add
pop
pop
rcrb
mov
mov
cltd
mov
rcrl
in
cmp
xchg
cltd
jb
push
clc
mov
fiadds
addr16
cs
cmpsl
add
ret
and
mov
mov
jg
jno
push
add
out
push
xor
in
jae
ljmp
mov
leave
xchg
jecxz
out
mov
aaa
ja
pop
push
mov
push
or
jle
in
ret
mov
clc
insb
into
adc
fbld
pop
push
push
sub
inc
int3
mov
mov
adc
subb
jno
rcl
cmp
lods
shlb
fiadds
mov
pop
test
mov
es
loope
xchg
lods
xchg
faddl
jp
cltd
push
sbb
pop
mov
sub
pop
dec
adc
pop
pop
leave
icebp
xchg
push
xor
fildll
inc
jmp
test
data16
das
mov
inc
cmp
xchg
pop
das
shlb
movsl
cmp
dec
lcall
xor
ds
push
push
pop
add
repnz
lahf
pop
nop
into
stc
xchg
popf
repz
sub
or
mov
popf
js
mov
mov
ljmp
repnz
lock
pop
out
inc
adc
fildl
jnp
test
cmp
adc
repnz
cmp
mov
adc
add
ja
stc
fucomip
fwait
call
push
add
inc
mov
dec
jbe
cmp
sbb
dec
test
lea
push
imul
pop
inc
es
mov
mov
cmp
rcrb
cli
loopne
pop
jnp
cmp
fmull
adc
inc
cmp
jo
sbb
ja
xchg
sub
popa
enter
int
clc
mov
adc
xor
fs
add
dec
repz
fmuls
pop
notb
adc
imul
adc
sbb
pop
imul
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
push
inc
imul
mov
mov
add
add
cli
pushf
and
ret
mov
mov
fs
mov
push
push
aas
cmpsl
mov
lret
mov
push
mov
arpl
jecxz
cs
sub
fists
mov
and
dec
adc
aam
loop
stc
xchg
cmp
mov
mov
xor
rorl
js
out
cli
mov
jne
or
repz
loopne
xchg
jae
fcom
test
arpl
incb
push
push
sbb
adc
lcall
and
mov
pop
pop
inc
mov
mov
test
mov
out
les
in
cmp
fstps
and
pushf
or
mov
jge
popf
pop
jecxz
int
xchg
stc
pop
rorl
sbb
call
push
and
mov
inc
test
jae
dec
ljmp
outsl
les
mov
ret
cmp
loop
jge
sub
jmp
in
xchg
out
or
mov
ljmp
jecxz
add
xlat
mov
add
mov
int
test
sub
xchg
lock
inc
mov
fists
lods
dec
outsb
xor
sti
mov
cmpsl
cmpsb
push
push
nop
and
addr16
xchg
aas
jp
cmpsl
not
mov
insl
jecxz,pn
clc
push
cmpsl
cwtl
jp
int
dec
mov
icebp
fisubl
rcrl
in
mov
aaa
lods
test
sub
xchg
jl
rcrl
loop
or
push
mov
xchg
add
repz
int
add
leave
pop
daa
lods
cmp
inc
cld
cmp
add
in
cld
xchg
pop
int
aas
lods
lcall
xchg
dec
inc
int
jmp
popa
aam
and
cmp
pop
pop
or
dec
pop
popa
pop
cmc
push
sti
mov
mov
dec
arpl
lahf
xlat
or
sbb
jl
xor
cld
pop
push
sbbl
movsb
push
andl
arpl
daa
mov
mov
rcr
jmp
jne
or
out
xchg
pcmpeqd
jge
mov
call
andb
mov
in
sahf
jg
std
xchg
mov
cmpsb
sbb
cli
sub
xchg
xor
mov
and
fisubrs
sbb
test
xor
and
hlt
sub
jnp
and
lods
fwait
or
and
sbb
popa
mov
sbb
fimull
xor
in
cld
fsts
in
adc
jns
lods
lods
add
jb
jp
cmp
ret
rcr
dec
mov
lds
lods
lret
jae
sbb
sti
push
and
xchg
sbb
mov
inc
add
xchg
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
cmp
rcrb
dec
repz
les
push
cmp
lcall
jno
mov
test
cli
jbe
dec
mov
stc
add
push
mov
jae
xlat
loope
arpl
movsl
gs
mov
fwait
icebp
pop
rcrb
adc
mov
icebp
fwait
sbb
lds
scas
js
sbb
sti
adc
int
fprem
in
inc
mov
add
or
int3
push
xchg
lods
dec
jno
mov
xchg
mov
inc
jo
cmp
pop
mov
outsl
stc
popa
dec
cmp
fwait
cld
xchg
dec
scas
popa
xchg
arpl
movsl
mov
iret
inc
jg
dec
xchg
pop
inc
pop
mov
imul
add
adc
dec
popa
sahf
inc
ficoms
lds
in
sbb
push
inc
popf
mov
cmpsl
jo
orb
idivl
inc
outsb
lret
cmpsb
inc
int
dec
lret
sbb
mov
ret
paddusb
sub
insb
push
mov
mov
mov
out
cmpsb
adc
scas
cli
pop
or
pop
or
cwtl
into
lds
pop
js
test
inc
pop
clc
arpl
negl
scas
out
cmp
dec
ret
adc
mov
xor
or
dec
push
out
mov
ret
leave
jne
inc
std
shll
inc
adc
push
outsl
add
push
in
cli
out
xor
and
add
iret
xchg
pop
mov
mulb
pop
rcll
add
or
inc
mov
cmp
sbb
popl
push
ret
enter
add
jno
jecxz
jae
lcall
lods
clc
stos
push
dec
cmpb
lods
fsubl
sub
repz
xchg
mov
inc
test
cld
cmp
rolb
and
push
mov
jl
repz
dec
or
sbb
rcl
into
in
out
cwtl
push
xchg
cmpsl
frstor
comiss
push
pop
flds
dec
test
movsb
ret
leave
and
repnz
add
mov
std
pop
iret
shrl
xchg
sti
mov
add
jmp
daa
adc
mov
fwait
clc
mov
adc
into
dec
sbb
xor
enter
movsb
and
jle
cmp
cli
xchg
pop
ds
cld
add
daa
movsl
mov
mov
out
inc
xchg
add
aad
adcb
sub
push
push
dec
lea
aad
sarl
fs
push
dec
jnp
push
inc
rcrb
jge
jmp
sub
ficompl
xchg
jne
mov
lcall
mov
cs
addl
enter
sbb
movsb
dec
inc
pmaddwd
push
iret
arpl
lods
xor
rcll
pop
pop
mov
stc
mov
dec
mov
mov
dec
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
push
cwtl
mov
aas
jle
sub
jle
and
or
test
fisubrs
mov
sbb
call
in
inc
sub
cmp
je
jl
imul
loop
and
insl
pop
mov
xor
js
in
push
popf
out
shl
rcrl
xchg
aam
xchg
fcmovnu
ret
dec
and
push
jno
dec
push
xor
dec
inc
sbb
mov
ret
leave
pushl
lea
hlt
mov
and
arpl
test
fidivrl
lcall
push
mov
mov
mov
scas
dec
mov
iret
fmuls
pop
mov
cwtl
movsl
add
xchg
cmc
gs
mov
xchg
adc
inc
pop
shll
cmp
out
inc
or
cmp
fwait
xor
rcll
push
push
test
and
cmp
dec
lods
popf
jo
sub
es
xlat
sbb
add
dec
mov
in
pop
imul
jl
pop
push
dec
or
xchg
xor
fsts
out
aad
mov
jle
test
or
pop
dec
dec
repnz
add
or
lret
push
adc
cmpsb
push
sbb
repnz
fs
dec
popf
sub
xchg
movsb
xor
dec
mov
add
roll
aas
mov
jecxz
or
fwait
imul
mov
lret
adc
jle
sub
insl
pop
cmp
lcall
and
sbb
or
push
dec
popf
xchg
push
movsl
pop
pushf
in
test
in
shll
xchg
mov
cmp
xchg
test
imul
sbb
jg
mov
cwtl
cmp
bound
addl
pusha
cmp
mov
std
sahf
or
aaa
sub
xchg
lock
fwait
and
sbb
jecxz
pop
add
push
test
dec
add
dec
test
fmuls
out
negl
fwait
dec
xchg
shr
or
sub
lods
cmp
mov
out
and
mov
aas
and
cld
add
inc
rcrl
mov
in
shl
pop
add
inc
sub
pop
aad
lods
jl
das
sbb
xchg
pushf
pop
push
clc
xor
stos
mov
sbb
les
test
pop
aas
add
das
jl
mov
sbb
shrb
inc
xor
or
add
mov
shrl
pop
pop
adc
jp
adc
add
mov
jo
and
jbe
adc
sub
mov
cmp
cmpsb
xor
dec
mov
sbb
fists
outsl
insl
push
inc
test
nop
adc
fsub
push
push
jne
pop
lea
decb
int3
inc
ljmp
icebp
outsb
xor
or
add
ljmp
cld
mov
das
push
test
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
fldl
cmp
mov
nop
mov
test
xchg
xchg
mov
sub
dec
ja
pop
pop
cmc
jl
hlt
scas
or
fsubl
push
jno
stc
mov
jecxz
mov
insl
add
shl
xor
ds
movsb
jb
and
stc
aaa
fstps
cmpsl
mov
jge
lahf
mov
xor
inc
insl
in
add
mov
jb
in
cmp
rorl
ds
test
jns
fmull
and
arpl
sub
cmp
pop
fwait
push
call
cmpb
sub
or
je
imul
push
add
not
xor
int
mov
mov
insl
lods
cli
sub
jno
sbb
sub
lahf
mov
push
mov
xchg
jno
xchg
jl
push
sub
or
les
fwait
mov
xchg
lret
mov
leave
sbb
hlt
xor
pop
sbb
add
incl
and
daa
fmull
test
xchg
lcall
ret
push
mov
sub
shr
int3
dec
sbb
insl
scas
push
popf
pop
test
xor
jg
push
fdivrs
and
testb
leave
sub
lea
push
xchg
push
fsubl
loop
in
sbb
imul
dec
lock
out
inc
cmp
shll
ret
add
push
inc
data16
lds
jne
xor
nop
pop
lahf
jo
mov
xchg
jg
movsl
repnz
xchg
iret
xor
shlb
dec
jns
inc
lock
sbb
sarl
sbb
xchg
ss
add
roll
push
jge
add
rolb
ss
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
jle
jb
cmp
mov
pop
sub
ss
xor
jnp
dec
rol
dec
repnz
mov
imul
test
cmp
scas
shll
leave
cmc
clc
loop
or
fwait
loope
lds
ljmp
std
rolb
stos
shl
dec
cmpsl
xchg
jle
popa
mov
inc
lods
arpl
fnsave
inc
notl
mov
push
out
stos
jecxz
arpl
push
push
leave
mov
mov
mov
mov
in
jl
mov
rcrb
mov
mov
push
xor
enter
je
fcoml
fistps
ss
dec
nop
imul
cmpb
jl
sti
ja
addb
push
clc
fs
repnz
test
rcll
jbe
lea
push
push
mov
jne
in
adc
int3
adc
push
push
movsb
lea
pop
add
mov
add
out
lret
lds
inc
ficomps
cmp
mov
sbb
imul
and
add
xor
sub
inc
stos
andl
subb
mov
dec
sub
sub
push
ret
fldl
add
or
jle
push
jns
add
sbb
jl
pop
push
jle
es
imul
jl
stc
mov
and
stos
cmpsl
sub
enter
nop
xor
int3
ficoms
push
cmp
leave
jge
loop
loope
xchg
outsb
lret
cmp
add
mov
sbb
lretw
shr
mov
adc
rolb
add
ss
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
or
dec
pushf
icebp
mov
jns
xor
sbb
aaa
lock
inc
jmp
push
jns
push
add
shrb
pop
lods
negl
jge
xchg
cmp
adc
mov
into
push
pusha
add
sti
sbb
pop
or
icebp
adc
aad
out
adc
les
je
call
ss
sub
add
scas
and
outsb
mov
pop
outsl
dec
and
push
cmc
push
outsl
sub
scas
addr16
sahf
cwtl
mov
jnp
mov
fsts
push
enter
mov
addr16
test
cmp
xchg
frstor
enter
adc
sbb
loop
lods
push
fs
out
jns
adc
sbb
mov
imul
pop
imul
sbb
mov
in
dec
cs
add
sub
inc
cli
enter
movsb
and
das
stos
leave
add
repz
jp
mov
jnp
mov
fldt
cmpsb
inc
jmp
inc
das
xor
ficompl
mov
pop
mov
and
xlat
push
movsl
testl
jmp
jbe
pop
shrl
into
lods
int
data16
in
and
das
push
mov
loop
fstl
push
sub
les
out
fisttpll
hlt
ja
leave
and
addr16
mov
daa
sahf
shll
mov
dec
cmp
or
insl
mov
jg
xchg
sub
das
dec
daa
insl
rclb
je
call
aad
popf
dec
pop
sbb
add
jmp
add
test
jmp
and
in
popa
push
lret
xchg
sub
les
mov
iret
xchg
jg
push
and
sahf
mov
push
add
ds
and
lret
add
imul
jl
in
data16
lahf
mov
sbb
jecxz
enter
test
cmpsb
movsb
and
clc
lret
inc
mov
add
cmp
mov
push
cltd
mov
cwtl
inc
cld
add
jle
test
mov
loope
fcoms
testl
enter
sub
lock
cmpsb
loope
arpl
inc
fcos
mov
inc
sbb
rcl
dec
das
cmp
mov
daa
mov
push
pop
enter
xchg
movsb
sbbl
pop
push
cli
sub
dec
jl
in
push
and
push
ss
fcoml
cld
dec
sahf
dec
sub
outsl
into
sbb
adc
xchg
mov
sbb
xchg
enter
mov
movsl
pop
inc
jae
push
pop
out
das
test
dec
inc
mov
pop
add
and
inc
pop
fbstp
negl
clc
xor
inc
pop
out
pop
adc
xor
inc
push
adc
in
push
pop
in
mov
push
xchg
push
fcomps
clc
mov
fidivs
les
cwtl
sti
mov
push
int
lds
pop
inc
xchg
aaa
out
imul
sub
xor
ss
push
fildl
popf
js
fistpl
iret
xor
ds
xor
movsb
mov
sbb
call
test
xor
ret
mov
xor
xor
lock
cmp
add
loopne
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
xor
mov
add
js
add
mov
cld
fcmovu
nop
push
push
push
xchg
ret
xorl
shll
clc
lds
inc
xchg
jo
xchg
cli
lods
cmp
in
popa
scas
or
inc
xchg
xor
test
sub
popa
cmp
lea
nop
mov
dec
bound
push
pop
inc
xchg
pop
add
fidivl
test
push
pusha
sbb
jns
inc
int3
sub
or
or
push
in
jecxz
movsb
int3
xchg
add
inc
mov
mov
or
sub
into
push
nop
lahf
cmp
loopne
imul
inc
mov
pop
add
pop
cmp
cmp
xor
push
add
roll
ror
sahf
les
imul
lret
xor
int3
mov
fs
shl
es
push
loope
cmp
xor
test
dec
rolb
jmp
add
imul
mov
mov
sbb
sarl
mov
aad
imul
es
data16
jge
inc
shll
movsb
mov
std
add
add
ljmp
xlat
inc
cmc
or
stos
in
xchg
sub
cmc
negb
mov
xor
add
mov
add
shrl
xorl
inc
xchg
cli
inc
lret
cmc
ja
into
cmpsl
shrl
in
imul
sub
xchg
rcrb
subl
jnp
fdivl
mov
or
and
bound
in
add
repz
jb
mov
int3
pop
test
inc
fisttps
aaa
ret
sarb
js
jno
sub
lret
mov
fdivrl
xor
jle
jecxz
les
add
shrl
pop
jb
lcall
sbb
cmp
rcll
decl
sbb
nop
shrl
adc
cs
sub
push
mov
cwtl
pushf
sbb
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
out
pop
addl
add
sub
mov
loope
cmpsb
dec
mov
cmp
add
or
cmc
lods
mov
fldcw
dec
ds
and
fisubrl
sub
js
cmovg
adc
push
push
popa
js
movl
jb
mov
xchg
movsl
cmp
outsb
insl
or
cs
add
cld
cwtl
mov
mov
insb
cmp
jbe
test
pop
jbe
adc
sbb
out
mov
fadd
add
sarb
hlt
jno
pop
and
xchg
into
out
push
subb
and
push
aas
xchg
sahf
leave
outsl
xchg
and
mov
pop
aam
and
lret
sbb
movsl
pop
roll
add
and
fs
ret
es
xchg
std
xor
sbb
push
call
fists
fst
cmp
stos
lock
stc
mov
bound
adc
xor
dec
imul
addr16
inc
xchg
je
dec
scas
adc
stc
rorb
jge
xchg
loopne
xchg
mov
sub
nop
mov
pop
jecxz
pop
rclb
push
mov
nop
pushf
mov
adc
xor
add
mov
jno
mov
xchg
loopne
popf
jo
into
push
jne
jp
and
insb
pop
out
lods
xlat
sbb
jl
mov
punpcklbw
sbb
mov
sarl
out
dec
std
mov
dec
mov
fs
mov
pop
mov
or
cmc
imull
data16
push
cmc
pop
jno
cltd
in
lret
insl
icebp
icebp
ss
jmp
aam
inc
cmp
mov
or
sbb
push
cmp
mov
icebp
loopne
adc
pop
int3
mov
insl
dec
repz
jbe
xchg
in
repnz
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
fimuls
and
jle
add
mov
xor
in
cld
mov
and
fisttps
mov
xor
cs
pop
aad
scas
xchg
jge
jp
imulb
mov
js
faddp
lods
es
push
sbb
les
and
inc
and
arpl
jbe
in
sbb
ret
imul
sub
das
add
push
iret
jecxz
test
cwtl
jo
cli
xchg
xlat
mov
push
or
mulb
mov
cwtl
adc
out
into
sub
pop
loop
sbb
mov
pop
sub
xchg
adc
cmp
test
mov
adc
mov
xchg
in
scas
lcall
mov
xor
push
xor
js
mov
test
adc
xchg
mov
fildl
or
adc
pushf
inc
xor
roll
daa
negb
inc
add
bound
add
cmpb
mov
mov
mov
jecxz
shl
xlat
movsb
lea
cltd
xchg
clc
and
sbb
jl
mov
pop
dec
ds
ja
pop
mov
mov
cld
mov
movl
nop
sbb
mov
push
cmpl
std
aad
icebp
mov
xchg
addr16
imul
enter
out
ss
lds
scas
push
bound
fisttps
or
fsubrs
imul
outsb
sbb
inc
fidivl
stos
cmp
es
lock
lock
ja
shrb
pop
cmpsb
add
popa
aam
call
cmp
add
mov
pop
rorb
add
sbb
xchg
mov
es
cmc
std
push
mov
in
aaa
mov
inc
hlt
dec
inc
std
int3
pop
sbb
pop
cmp
jle
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
sbb
jle
jl
jle
pop
inc
andnps
mov
inc
imul
std
movsb
sub
ret
test
ljmp
push
mov
xor
sub
adc
enterw
cmp
lds
cld
aaa
lret
add
push
mov
or
pop
xchg
cld
stos
push
stos
jne
pop
test
xchg
pop
jae
add
mov
adc
sbb
stos
push
xor
dec
and
jbe
push
daa
aas
adc
dec
xor
sub
loope
jge
in
daa
or
movsb
pop
aas
and
lods
aas
rolb
loope
scas
sbb
pop
mov
dec
pop
fsubrl
aaa
cmp
inc
dec
jae
jne
dec
movsl
jbe
call
lret
outsl
jns
call
add
push
movsb
out
and
add
loop
xor
xchg
mov
in
stos
fimull
pop
xorl
jecxz
icebp
shl
inc
push
jb
pop
xlat
inc
addr16
sbb
pop
gs
movsl
fimuls
or
jg
addr16
mov
movsl
jne
iret
add
push
push
stc
pop
and
pop
lahf
add
idivb
sub
shrb
adc
pop
adc
and
pop
sbbb
outsl
fidivs
test
push
aam
aam
pop
outsb
loope
mov
stos
xchg
pop
fisttps
cmp
iret
adc
cmp
aas
mul
fdivrp
mov
sbb
cli
push
pop
dec
dec
and
orl
dec
xor
mov
adc
jns
mov
aam
hlt
addr16
mov
aaa
mov
xor
sub
and
pop
xchg
sub
idivl
fs
inc
outsb
lahf
xchg
stc
mov
fstps
mov
sub
dec
xchg
shrl
sbb
or
ror
popf
sbb
cmp
scas
outsl
sbb
push
int3
xorb
dec
inc
xor
pop
stc
je
xor
gs
cwtl
xchg
adc
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
ret
jle
and
jle
and
mov
add
into
insl
stc
les
ds
jg
lcall
jg
jo
jnp
mov
inc
mov
cli
or
int3
cmp
or
or
sub
xchg
sbb
sub
out
ds
ficoms
sbb
cs
sbb
jl
cmpsl
outsb
or
call
jmp
in
jle
scas
jmp
push
fcmove
dec
mov
cmp
or
fiaddl
js
push
jns
iret
ss
fcomi
jge
repnz
rcll
in
in
stos
inc
jne
dec
mov
jle
xchg
cltd
daa
jbe
jp
sub
jns
leave
xchg
shrl
add
jp
div
mov
ret
inc
repnz
mov
mov
int
mov
out
fstpt
dec
pop
push
cmpsb
xor
fneni(8087
and
add
cs
xor
loopne
pop
ljmp
jl
mov
inc
jecxz
push
fnstsw
sbb
jmp
xchg
push
test
stos
cltd
xor
f2xm1
popf
lock
sbb
cmp
xor
out
and
out
mov
cli
or
stos
dec
aas
mov
sbb
mov
fdivl
mov
stc
mov
aam
add
das
xchg
jb
dec
shlb
inc
cmc
adc
insb
fidivrs
mov
jbe
int
aaa
pop
and
and
jns
lcall
xchg
daa
jmp
ja
lahf
dec
inc
dec
fld
pop
cmpsl
fldt
mov
inc
jns
call
outsb
and
pop
sub
xor
xor
mov
jns
mov
fisubrs
jg
push
shl
clc
ja
jo
sbb
std
jno
cmpsl
pop
dec
test
dec
or
fwait
push
imul
loope
mov
repz
flds
sarb
sub
mov
jg
lcall
add
inc
add
add
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
cmp
jle
jl
jle
xor
gs
ret
add
in
sub
fdivs
pop
sub
ss
js
jl
dec
and
inc
scas
mov
cmp
push
dec
loopne
and
call
inc
mov
fildll
push
sbb
jl
in
stos
jg
jle
pop
mov
push
jmp
pop
lcall
insl
adc
test
cwtl
cmp
add
in
out
movb
out
popf
jns
xchg
fnstenv
je
push
sti
fidivs
stos
lret
andl
in
bound
cltd
mov
mov
aas
mov
add
aam
jmp
jno
lock
mov
fwait
xchg
pop
call
or
cli
cmpsl
mov
inc
insl
jp
cltd
mov
movsl
mov
and
inc
data16
iret
push
insl
xchg
insl
ret
mov
sub
stc
jl
sub
dec
cmp
fptan
add
inc
mov
mov
jg
or
mov
incl
icebp
add
jns
and
mov
fistpl
subb
fistpl
popa
mov
xchg
sbb
push
or
and
lahf
test
outsl
jp
lock
dec
loope
movsb
xchg
test
pusha
lods
setle
mov
add
sahf
fcmovbe
sub
das
popa
idivb
dec
mov
inc
mov
jnp
add
push
mov
cmp
mov
push
inc
outsb
inc
jae
fucomp
cwtl
gs
das
and
jns
int
and
std
adc
int
clc
ret
dec
mov
pop
pop
arpl
dec
out
fwait
cmp
sub
rorl
int
add
cwtl
mov
xor
out
clc
je
sbb
movsb
iret
cltd
add
ja
popa
xor
cmpsl
pop
inc
cmp
insl
sbb
mov
lods
add
test
push
xor
pop
ja
or
lret
inc
pop
ds
lods
xlat
push
and
popa
add
mov
inc
mov
pop
add
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
jp
jl
jle
mov
lds
mov
lods
int
sbb
xchg
xchg
pop
mov
out
repnz
pop
push
pop
adc
xchg
movsb
push
subl
lahf
addr16
test
dec
pusha
pop
mov
lea
mov
xchg
add
popa
lds
push
loopne
hlt
ret
xlat
sbb
mov
mov
fstpt
das
push
adc
dec
lcall
aaa
jns
xor
pusha
sub
lret
jle
mov
adc
loop
sbb
push
mov
mov
test
sbb
or
iret
sub
dec
lret
lret
dec
rolb
fsubrl
cmp
dec
das
out
sub
cmp
sub
add
and
xlat
sbb
pop
push
leave
loopne
jnp
insb
in
enter
test
jae
lock
in
cmc
mov
xor
mov
jne
cmp
nop
lea
scas
in
out
and
cmp
divl
mov
call
add
jo
test
xchg
xlat
dec
xchg
dec
pusha
aas
mov
jl
mov
push
jg
les
push
notl
xchg
cmpsb
js
faddl
mov
ficomps
mov
push
add
mov
sub
leave
in
cld
cs
rcrb
in
inc
xchg
dec
stc
jl
lea
dec
mov
cmc
xchg
out
fsubs
push
roll
inc
dec
mov
in
pop
push
call
pop
mov
stos
shlb
adc
lods
fildll
stos
fs
xlat
pop
or
add
mov
xor
jo
mov
test
aas
jno
mov
jmp
or
das
aas
fbstp
pop
adc
stos
inc
cwtl
mov
cmpb
mov
ret
and
cmp
mov
mov
into
or
fldl
jb
xor
jo
fnstenv
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
stos
mov
jle
and
jle
push
cli
add
mov
ss
mov
clc
sarb
mov
sbb
mov
inc
push
xor
dec
mov
insl
add
pop
xchg
dec
mov
push
aad
and
jmp
xor
sub
pusha
xor
xor
jmp
mov
cli
call
in
sub
jns
xchg
arpl
jg
inc
mov
mov
xchg
dec
pop
bound
xchg
push
push
scas
or
mov
xchg
scas
adc
js
in
jmp
cmpsl
xchg
inc
in
mov
pop
sub
je
mov
int3
decb
jp
adc
add
mov
pop
test
dec
adc
lds
mov
sub
imul
in
aas
mov
mov
mov
addr16
push
pusha
jo
dec
mov
ljmp
fcmovbe
fxch
dec
call
dec
lock
cmpsl
int3
loope
notb
sbb
test
fcomps
cld
or
pop
and
ljmp
jns
inc
add
mov
pop
stos
xor
int3
pusha
stc
push
ss
push
subb
mov
push
xchg
das
pop
mov
ljmp
adc
out
jp
jg
hlt
aaa
mov
fdivrs
mov
movsl
ljmp
sub
add
lds
call
mov
out
or
shlb
jle
dec
out
sahf
fs
sbb
aam
sub
idivl
pop
inc
scas
lea
adc
popa
add
pop
in
or
lcall
stos
imul
xor
xchg
arpl
mov
sbb
loopne
cmpsb
and
add
test
scas
mov
sub
filds
popf
adc
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
testl
jle
jl
jle
imul
enter
imul
frstor
mov
movsb
mov
mov
add
movsb
xor
inc
push
xchg
imul
lret
outsl
xor
dec
aaa
mov
cmpsb
inc
in
inc
stos
pop
add
shlb
mov
shll
aaa
inc
xor
shll
pushw
pop
xchg
sub
inc
mov
xor
sub
lods
mov
xor
jge
addr16
add
cmp
sub
insl
lea
xor
inc
cmp
popf
jae
mov
or
stos
xchg
insl
cli
int3
sub
je
cmpsb
repnz
popf
std
cmpsl
out
jb
repz
jns
js
jecxz
sti
outsl
aam
cmp
stc
xor
push
pop
in
push
sbb
imul
pop
mov
xchg
lds
dec
cmp
test
scas
lock
push
out
outsl
je
mov
push
add
sbb
outsb
inc
outsb
dec
adc
xchg
es
ja
sub
xor
mov
add
mov
mov
mov
aad
inc
mov
jmp
clc
call
mov
enter
jle
pushf
pop
insb
enter
and
call
inc
add
enter
cmpsl
mov
repnz
inc
dec
in
xor
cmp
pop
imull
enter
jmp
cmpsl
jle
orl
ja
js
sbb
or
inc
sub
nop
daa
sti
les
inc
sub
xchg
jns
test
cltd
fisubl
cmp
jmp
push
inc
sub
adc
mov
lods
push
mov
inc
push
icebp
cwtl
enter
xchg
pop
pop
loopne
mov
adc
xor
shll
sbb
les
lock
or
scas
push
add
pop
daa
push
mov
mov
cli
sbb
arpl
lahf
scas
or
xor
mov
mov
mov
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
pop
ret
sbb
hlt
fdivs
addr16
push
sub
mov
adc
icebp
inc
cld
cli
add
outsb
test
pop
das
fucomp
inc
data16
mov
dec
mov
xchg
in
and
jl
mov
and
adcb
or
dec
push
popf
xchg
nop
cs
or
testb
ficoml
imul
jle
push
and
rclb
mov
cmp
ss
pop
js
movb
clc
imul
bound
icebp
mov
adc
fmuls
sub
sbb
lock
call
mov
andb
aaa
bound
sbb
pusha
aas
hlt
push
push
stos
cmp
pushf
mov
sub
xchg
stos
vcmpsd
mov
ret
cmp
fimull
pop
test
das
fcoml
andl
sub
fsubs
xor
add
outsl
cltd
imul
jp
xchg
lret
add
mov
ficompl
pop
lret
adc
lret
inc
push
cmp
arpl
jb
xchg
cmp
cmp
das
inc
mov
mov
fwait
rclb
and
inc
mov
push
stos
mov
inc
movsb
fwait
xor
pop
btr
enter
out
jnp
jo
shll
mov
jmp
xchg
pusha
das
daa
lret
jbe
les
push
aaa
jbe
xchg
xor
in
sub
ret
out
mov
in
cmp
sbb
mov
add
shl
or
sub
jp
push
add
imul
push
cmpsl
or
sub
rcrl
push
xor
push
adc
jecxz
cmc
jge
and
jg
xchg
adc
jo
sub
push
inc
gs
or
jge
cltd
call
mov
sbb
cltd
mov
mov
mov
fildl
movq
or
out
out
ret
iretw
jnp
sti
adc
mov
xchg
mov
dec
repz
cmc
mov
mov
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
lret
jnp
xor
jle
and
jle
pop
jecxz
adc
int
sub
mov
or
mov
ss
dec
popf
xor
rcrw
test
push
cmp
lods
js
dec
mov
movsb
jbe
loope
loope
js
out
mov
mov
scas
fwait
jb
aas
clc
sbb
mov
push
orb
sbb
xchg
mov
inc
rorl
lods
subb
std
or
xchg
int3
movsl
cmc
jne
not
dec
mov
pop
les
add
aas
aam
adc
movsl
das
daa
mov
pop
push
dec
jo
insb
push
mov
mov
fs
jne
lea
arpl
mov
jne
aas
pop
hlt
mov
jb
mov
in
adc
outsl
in
or
sub
mov
jge
ljmp
outsl
cltd
add
out
bound
in
xchg
or
cld
cmp
sbb
pop
sub
outsl
test
cmc
ds
lods
jno
inc
jecxz
shll
xor
add
mov
cmp
jo
pop
lcall
ja
out
cmpsl
inc
jns
nop
jne
and
repnz
js
mov
push
stc
push
and
jp
and
xchg
cmp
aam
sbb
enter
dec
fs
pop
adc
leavew
mov
adc
xor
mov
sub
in
sbb
mov
cmp
cld
stc
ret
pushf
mov
decl
push
jecxz
xchg
mov
fistpll
xchg
pop
or
sub
jl,pt
push
inc
insb
insl
lcall
testb
sub
cmpsb
add
shlb
call
inc
shl
add
iret
pusha
and
jns
insb
dec
pop
outsb
jo
mov
bsf
push
adc
cmp
int
in
sbb
iret
ds
popf
inc
push
xor
in
es
shll
sub
clc
xor
add
mov
jg
pop
dec
sub
mov
pop
push
or
aaa
or
cltd
cmpsl
sbb
mov
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
mov
into
fcomp
jle
and
jle
in
nop
pop
andb
jo
mov
dec
push
adc
in
dec
aaa
mov
mov
sbb
cmp
push
int
shlb
ljmp
push
loopne
dec
dec
outsl
inc
xchg
imul
test
jno
sbb
insb
pop
inc
inc
push
test
test
sbb
jns
and
push
test
sbb
cmp
fwait
in
push
sbb
mov
or
mov
mov
mov
sti
jl
test
mov
pop
popa
xchg
inc
push
stc
icebp
cs
jae
mov
pxor
push
pop
ljmp
pusha
adc
inc
add
mov
sbb
push
mov
leave
das
jl
cmp
and
add
ret
mov
push
mov
std
sbb
pop
dec
repnz
dec
lret
scas
icebp
jae
inc
out
push
pop
popa
fs
loope
or
in
data16
mov
adc
fst
sbbb
aad
pop
push
pop
cmp
fnsave
push
loop
jle
xchg
popa
add
sbb
call
nop
insl
mov
xchg
mov
sub
adc
shrb
lea
stc
flds
fistpl
ja
fs
dec
xor
jle
adc
mov
add
cmpsl
out
adc
into
add
insb
inc
sbb
inc
call
cmp
xchg
mov
and
adc
mov
lret
mov
sub
add
mov
dec
loope
inc
jle
in
fdivl
insl
adc
sub
mov
and
mov
and
popa
fwait
jo
push
jle
jnp
dec
mov
cmp
into
sbb
mov
loopne
test
fildl
mov
repnz
xor
mov
roll
inc
cmpsl
addl
int
push
scas
rclb
inc
xor
push
fwait
xchg
push
imul
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
xchg
roll
movsl
jne
and
sbb
out
dec
pop
shll
stos
or
mov
xor
cltd
fs
gs
cmpsl
sahf
dec
in
insl
or
dec
ds
jbe,pn
lods
fidivl
jno
iret
leave
mov
and
or
inc
xor
sub
mov
mov
dec
repz
arpl
lret
xchg
dec
mov
mov
out
out
xchg
cmp
pop
and
cmp
stos
push
sub
ror
sbbb
into
sub
lcall
xor
sub
dec
aad
mov
or
lods
in
mov
fisubs
icebp
imul
sub
sbb
aas
sarl
out
dec
pop
add
out
fisubl
mov
cmpl
out
loop
in
gs
outsl
dec
xchg
mov
mov
pop
or
gs
out
mov
sub
jge
rcl
push
mov
jo
pop
gs
jecxz
jnp
or
ds
cli
push
lcall
lods
test
push
sbb
pop
mov
push
push
and
xchg
mov
stos
and
jns
pop
push
mov
in
jbe
sbb
sbb
cmc
or
nop
movl
scas
movsl
and
adc
inc
fwait
iret
std
test
cs
push
jmp
mov
or
xchg
lcall
push
movsb
push
dec
into
jo
repnz
and
rcll
out
sub
inc
je
out
cmpsl
cmp
mov
or
in
stos
mov
mov
mov
out
lcall
xlat
jae
out
out
mov
xor
in
adc
mov
enterw
jmp
jb
aaa
cmp
sbb
mov
push
jno
mov
ret
testl
insb
cmp
and
shrl
das
mov
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
mov
jle
cmp
mov
sahf
mov
jne
mov
call
nop
or
fistps
mov
scas
jg
push
add
and
push
pop
adc
rcll
imul
movsl
clc
into
imul
sbb
leave
mov
or
cmp
jecxz
xchg
scas
lret
andl
loop
int3
mov
cmc
inc
xor
cs
pusha
int
mov
leave
adc
adc
mov
add
jo
mov
mov
mov
scas
shrl
dec
std
repz
jns
rcl
rolb
xor
inc
sti
inc
and
xlat
fildl
mov
sbb
movsl
sub
or
iret
mov
push
loopne
push
xchg
enter
ljmp
and
inc
nop
and
jb
leave
jb
and
or
mov
mov
test
sub
fimuls
dec
mov
cld
test
mulb
pop
push
jge
dec
adc
movsb
out
subl
sti
or
xor
cmpsb
mov
cmpsl
dec
popa
dec
shrl
rcrb
repnz
mov
xchg
sub
enter
scas
jae
add
test
aaa
dec
pop
adc
cmpsb
mov
in
jmp
adc
stos
js
push
xchg
jg
dec
daa
enter
out
shlb
in
daa
stos
shlb
sahf
fmull
insl
mov
mov
decl
test
es
cmp
mov
jp
dec
rcll
pop
fcoml
outsl
pop
jge
lret
jno
clc
mov
movl
popa
cmpsb
jno,pt
xchg
test
loopne
imul
mov
dec
scas
daa
lret
pop
cmpsl
ret
sahf
mov
dec
dec
mov
inc
loope
cmp
lret
mov
push
mov
lcall
mov
stos
sub
sbb
cmp
and
fidivrs
cmp
pop
push
arpl
test
mov
mov
loopne
nop
decl
fistl
sbbl
jmp
lds
popa
mov
fisttpll
jle
jle
cmp
jns
and
jns
add
adc
aam
addr16
xor
stos
sbb
arpl
xchg
inc
mov
dec
fdivrs
sub
leave
sti
inc
mov
xchg
out
addr16
fldenv
addr16
sbb
mov
sbb
iret
sub
xor
xor
push
jo
sbb
addr16
push
rclb
fsubs
cmp
cwtl
mov
jb
push
popf
notl
cmp
cwtl
je
ficomps
adc
sub
mov
jno
ss
push
mov
mov
jmp
dec
outsl
hlt
or
add
mov
mov
xor
mov
xor
jge
pop
mov
cld
icebp
das
loopne
jno
fdivl
mov
lods
jnp
inc
sbb
arpl
or
push
cmp
lahf
push
jno
pusha
jnp
les
arpl
push
mov
dec
xor
inc
stc
jne
cmc
shl
imul
cmc
mov
notl
cmp
push
in
into
call
shlb
add
icebp
nop
and
cwtl
or
or
cli
mov
sub
adc
push
sub
xchg
xor
xchg
inc
movsl
dec
push
jnp
dec
lahf
addb
mov
cmp
inc
push
imul
add
push
popf
cwtl
dec
xchg
and
popf
in
filds
xchg
dec
int
xchg
cmp
inc
movsb
push
push
movsl
mov
jp
cmpsl
or
scas
cld
scas
and
aad
aad
in
ss
adc
push
mov
js
fmuls
bnd
mov
mov
test
xchg
mov
js
jmp
inc
push
rorl
out
mov
rorl
dec
inc
jmp
cmpb
sbb
dec
fs
inc
fimuls
cmp
and
in
xor
adc
sub
add
or
mov
or
jo
scas
cltd
rolb
xchg
dec
insb
cmp
xchg
ja
or
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
imul
fidivrl
loop
jle
jl
jle
dec
or
jbe
add
loope
pop
xor
xchg
mov
jbe
cld
nop
in
adc
or
mov
fwait
popf
adc
rcll
cmp
pop
scas
lret
or
scas
into
sbb
dec
pushf
pop
fwait
test
sti
test
mov
lock
mov
popf
mov
mov
lea
or
lret
mov
mov
int
mov
nop
dec
mov
or
enter
jmp
jo
add
xchg
cmp
lahf
push
xchg
aas
sarl
cwtl
pop
cmp
imul
jns
nop
push
das
sub
orb
mov
jnp
xchg
and
fists
mov
pop
fwait
or
imul
mov
ds
in
sbb
dec
or
lret
dec
push
xchg
pop
insl
lret
pop
add
inc
inc
int
test
jnp
in
inc
xchg
popa
movsl
xchg
cmc
add
mov
mov
xor
js
xchg
cmc
mov
pop
dec
add
inc
inc
mov
cmpsl
les
xchg
aaa
aaa
rcrb
jecxz
xchg
dec
dec
adc
aad
xchg
testb
rol
fyl2x
cmp
addl
nop
subb
mov
add
fimuls
jp
jne
inc
add
pop
repz
pop
movsl
outsl
lods
hlt
sbb
dec
sub
sub
jno
pop
mov
movsl
jne
fistl
es
mov
roll
xchg
cmp
jge
adc
xlat
vhsubpd
sbb
js
repz
inc
fsub
or
cwtl
ljmp
out
add
std
out
leave
scas
in
adc
sub
jbe
lods
mov
mov
gs
mov
aaa
cmp
pusha
jns
cld
sti
cmp
or
dec
in
int
adc
shrl
je
popf
mov
cs
int
out
pop
pop
rcrb
pop
lock
push
aad
daa
mov
ja
cmpb
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
scas
jno
pop
and
jle
jl
jle
mov
push
pop
add
mov
outsl
adc
out
movb
jae
les
pop
mov
pop
xlat
jbe
inc
xchg
mov
xor
mov
std
xor
cwtl
cmp
insb
mov
mov
jae
cmp
jl
cmpsb
add
jle
sbb
and
sbbb
or
mov
sbb
or
push
js
ss
xchg
mov
adc
dec
jmp
mov
je
or
sbb
or
add
jbe
push
fwait
and
xor
inc
lcall
andl
mov
add
ficoml
dec
mov
jns
iret
xchg
out
xchg
mov
dec
mov
mov
in
sub
ror
jg
adc
leave
movsb
mov
xor
mov
std
pop
movsl
std
xor
cmpb
in
adc
sbb
pop
lods
xchg
arpl
sarl
mov
mov
test
push
push
movsb
fnstsw
insb
dec
movsl
je
push
mov
mov
int
and
and
in
stos
inc
dec
sarl
cwtl
pop
mov
lahf
xchg
or
sbb
mov
arpl
pop
nop
gs
push
dec
inc
fsub
out
lret
cmc
adc
cli
xor
lock
gs
sti
rolb
sbb
lahf
cld
push
mov
cmpsl
decb
fiadds
call
sub
xchg
lret
in
and
inc
ffreep
push
ja
cli
pusha
lcall
dec
push
pop
or
in
mul
cmpb
push
pop
xchg
mov
mov
add
dec
dec
push
xorb
sbb
pop
ja
out
xor
dec
dec
scas
aas
cmc
repz
mov
or
push
stc
inc
mov
cmpsb
out
ds
jo
iret
ljmp
cmp
sahf
pop
pop
dec
cmpsl
cltd
push
addr16
pop
icebp
stos
jg
jl
xchg
mov
xor
mov
add
mov
or
mov
out
xor
mov
dec
call
jnp
inc
add
add
add
push
add
add
shlb
jnp
inc
add
jnp
inc
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
pop
out
sub
jle
jl
jle
subb
jge
test
pop
mov
inc
ret
movb
into
push
mov
test
orb
lods
adc
xchg
int
dec
clc
das
incl
jo
repnz
dec
jns,pn
sti
fisubl
clc
adc
dec
aad
xor
pop
mov
aam
gs
pop
pop
stos
mov
sahf
into
aas
cmpb
fsubs
lock
repnz
fwait
sub
ss
fwait
aam
dec
arpl
in
pop
add
andl
dec
push
xchg
mov
clc
cmpb
pusha
dec
sbb
mov
jo
lods
xchg
repz
stos
dec
mov
jnp
and
outsl
and
sbb
mov
inc
add
jg
xchg
rolb
cmpsl
test
insb
arpl
in
scas
and
sbb
out
and
data16
mov
outsb
out
mov
xchg
or
mov
inc
fstpl
std
not
jns
fistpl
cwtl
sub
out
cmp
adc
jecxz
mov
sbb
shlb
cmp
dec
sub
mov
inc
nop
mov
push
jge
cmp
push
lds
icebp
test
add
inc
iret
sbb
dec
roll
sbb
or
adc
xor
pushf
sbb
lds
loop
xor
ljmp
fwait
dec
stos
es
je
movsl
fcmovnb
jge
and
xchg
cmpsb
xor
shll
sub
push
sbb
pop
daa
xor
scas
leave
inc
stc
imul
out
imul
cmp
aaa
push
fwait
jae
and
fisttps
imul
xlat
jne
mov
dec
xor
test
sarl
outsl
addr16
shl
mov
dec
xor
sub
push
or
inc
cmp
or
fs
addl
sub
sbb
lock
gs
daa
nop
adc
fcmovne
pop
jle
inc
mov
dec
jmp
movsl
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
and
push
in
jle
cmp
insl
add
popf
data16
mov
inc
or
scas
sarb
and
scas
jno
pop
jmp
call
xchg
cli
mov
xlat
mov
and
jnp
pop
lahf
shll
jno
cmp
xchg
mov
and
fdivrs
cmpsl
or
adc
in
mov
outsl
xor
sbb
adc
add
bound
int3
mov
push
rorl
incb
ja
mov
push
jnp
ja
shll
mov
stos
xor
add
outsb
lret
cmp
adc
enter
push
outsl
loop
add
adc
in
add
jg
lahf
movsl
pop
adc
mov
insb
jmp
or
pop
orb
cmp
je
out
repnz
lret
shrl
xchg
lret
add
mov
pop
jl
adc
sarb
and
hlt
stc
test
fdivs
or
mov
pop
es
outsl
sub
lods
xchg
inc
int3
sbb
shlb
sub
test
out
jbe
shll
subb
mov
mov
and
xchg
int
or
add
xlat
ljmp
imul
fsubs
jecxz
and
add
dec
test
fiaddl
mov
mov
adc
sbb
inc
ja
push
xchg
out
mov
add
xlat
mov
dec
push
push
cmp
xor
fnstenv
jle
pop
jnp
jge
cwtl
lds
in
scas
jle
fcomps
jns
cmp
lahf
jbe
aam
sti
inc
in
nop
outsb
jge
out
lods
lcall
cmp
sbb
lret
outsb
leave
pop
ss
enter
xor
fistpll
in
pushf
mov
mull
fwait
xor
push
mov
test
dec
aaa
sub
mov
pop
inc
xchg
sbb
xchg
stos
lods
inc
jmp
mov
mov
dec
add
jmp
push
pop
rcll
xchg
dec
pop
xchg
jae
jge
push
and
xor
push
lret
xlat
ljmp
and
jmp
rcrl
push
lcall
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
pop
sbb
dec
shr
jle
cmp
push
outsb
aam
mov
es
cmp
add
cmc
inc
jle
cmovs
fsub
sub
xchg
pop
scas
test
xchg
pusha
in
aaa
leave
jmp
mov
mov
xchg
dec
mov
cmp
sbb
mov
cmp
xchg
imul
faddp
push
or
add
outsl
imul
lahf
lods
sbb
pop
mov
loop
mov
sbb
sarb
mov
push
cmp
xchg
push
shr
outsb
mov
shr
cmc
xor
mov
cltd
btc
mov
out
xchg
add
xor
fwait
ret
xchg
lea
sbb
and
push
movsl
ds
insl
rcrb
loope
test
nop
ret
fnstcw
jb
adc
sub
mov
pop
imul
std
ret
push
dec
inc
mov
mov
adc
in
pop
mov
rcrl
cmp
push
lahf
lea
je
mov
adcb
pop
orl
mov
pop
pop
outsl
and
fnstcw
rcrb
xchg
cli
dec
mov
push
push
int
call
jnp
adc
lret
mov
flds
repnz
fs
jbe
dec
push
push
repz
js
leave
shlb
fwait
cmpb
lods
rorl
lods
cmp
lret
ret
cs
sbb
or
sbb
xchg
mov
insb
lret
xchg
sbb
pop
cmp
xchg
jno
stos
xchg
push
jecxz
ss
cmp
jmp
or
adc
mov
pop
cmp
sti
lret
adc
sahf
aam
mov
mov
lcall
mov
lea
mov
lock
dec
push
stos
mov
outsb
mov
subl
lahf
mov
fldl
lods
leave
jle
lret
into
addr16
push
inc
rcrb
stc
or
mov
lods
xor
jbe
mov
xchg
out
in
das
fstpt
mov
cmp
mov
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
call
mov
mov
int
mov
popa
movsb
es
and
in
lahf
jl
aad
inc
fs
fistpll
fs
xor
mov
mov
or
lock
mov
or
shlb
mov
clc
add
call
cs
xchg
mov
jge
popa
loop
out
and
adc
mov
test
aaa
fmull
sbb
test
sub
nop
stc
out
pop
add
dec
adc
out
jnp
ss
ret
jge
jbe,pn
pop
lods
imul
addr16
pop
xchg
cmp
mov
test
lds
daa
call
pushf
test
sbb
ret
repnz
push
add
inc
lds
arpl
shlb
sarl
fdivrl
iret
pop
pushf
push
mov
inc
sub
and
sbb
and
lods
fbstp
cld
lret
fdivp
aaa
push
out
loope
inc
add
adc
adc
jmp
pop
rol
dec
adc
dec
aas
lahf
mov
test
mov
cli
pop
pop
cmp
cltd
lcall
mov
fwait
cmp
insb
mov
outsl
mov
or
mov
outsb
sub
fwait
adc
xchg
cmp
and
pop
cli
cwtl
add
lahf
jb
mov
outsl
or
mov
cmp
mov
hlt
push
cmp
mov
push
mov
jae
cmp
divl
inc
flds
cmp
mov
sti
jo
mov
xor
xor
dec
subl
mov
xchg
mov
xchg
inc
int
fimull
jg
icebp
pop
test
imul
mov
pop
xchg
mov
mov
sub
sbb
sub
jns
scas
lods
or
ds
adc
or
sbb
popa
xchg
mov
or
add
orl
dec
jp
jecxz
imul
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
mov
idivl
cmp
sub
imul
mov
pop
in
stos
enter
pop
or
outsb
xchg
roll
ror
repnz
xchg
jmp
sbb
cltd
pushf
xchg
push
xchg
divb
repnz
cmpb
je
push
or
sub
dec
inc
or
cmp
sub
jno
fwait
mov
repz
lahf
xor
dec
fld
cmp
sub
cmc
mov
dec
movsb
mov
gs
sahf
add
mov
mov
push
inc
test
inc
shlb
push
and
loopne
mov
inc
out
push
xchg
jo
push
xchg
sub
pushf
or
mov
ret
lods
or
pop
mulb
pop
cmpxchg
jnp
aad
dec
push
mov
dec
gs
movsl
or
ja
and
mov
push
mov
out
movl
adc
and
ficompl
divb
adc
push
pop
data16
aad
sub
les
fadds
cmp
adc
pop
adc
sbbl
gs
bound
sbb
add
xor
mov
cmp
pop
stc
cmp
xchg
mov
not
push
xor
xor
lods
inc
lods
ret
clc
jne
or
out
lret
fldl
push
mov
jae
in
out
jb
mov
push
dec
sub
sbb
lret
shll
or
jnp
sbb
sbb
add
cmp
jnp
jl
sub
lea
nop
mov
lods
in
xor
fdivl
mov
out
test
xor
dec
inc
insb
mov
bound
mov
jo
and
push
sahf
lret
xchg
add
ljmp
pop
cmp
inc
out
loop
imul
ret
inc
sbb
adc
and
aam
mov
xor
push
dec
insb
xor
in
jge
je
jns
jns
cmpsl
in
and
pop
adc
ds
popa
xchg
adc
loopne
sub
pusha
stos
mov
jmp
bound
jo
rorl
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
and
bound
jle
cmp
testl
jp
dec
cmp
mov
hlt
daa
data16
sahf
mov
or
mov
add
pop
inc
jo
mov
mov
adc
mov
sbb
jg
lea
adc
pusha
or
mov
mov
fsubrl
sub
fistl
dec
mov
lods
inc
cmp
pop
jo
mov
mov
adc
push
mov
int3
add
fdivs
cmpsl
and
and
mov
xorl
testb
sar
mov
sbb
repz
icebp
pop
lock
repnz
cmpsb
aam
std
jl
fisttpl
shr
jle
addr16
xchg
jo
scas
push
inc
push
jle
adc
push
aas
jge
shl
jg
add
or
lcall
repnz
shll
fcoms
fisubrs
sub
fcmovb
cmpsl
shrb
call
jmp
daa
iret
xor
insl
xor
add
cmp
lea
shll
aad
out
lock
mov
test
fisubl
idivl
repnz
sbb
daa
or
adc
inc
pop
jns
sub
sub
cmp
lret
pop
enter
and
pop
aaa
fmuls
cmpsl
loopne
sub
aad
jp
cli
testl
inc
dec
mov
fistps
push
push
and
outsl
cmpsb
das
mov
or
push
stc
jmp
es
hlt
mov
sbb
push
std
repz
jl
clc
sub
les
rcrl
mov
sub
sarl
loope
hlt
mov
xchg
pop
sub
dec
outsb
xor
dec
je
ret
add
push
pop
mov
pop
cmp
mov
sub
mov
mov
xor
imul
aad
lahf
push
cmp
cld
lcall
push
jb
jg
incl
dec
inc
push
adc
adc
shlb
or
cmp
jge
sub
out
loopne
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
push
lock
cmp
inc
ljmp
adc
daa
or
xor
in
mov
mov
icebp
in
or
pop
or
aad
cltd
pop
popf
xchg
mov
scas
cwtl
add
mov
ret
scas
jp
ret
lahf
movsb
xchg
cmp
and
xchg
sbb
js
lcall
icebp
push
fiaddl
pop
fdivs
sbb
sbb
pop
lret
and
sbb
inc
data16
jnp
repz
mov
scas
jbe
or
mov
sbb
jno
or
ficoms
rorl
or
into
inc
bound
cmp
jle
negb
popa
es
mov
pop
or
test
das
fidivl
sub
xchg
pop
cmp
cmp
into
inc
pop
call
mul
dec
mov
test
dec
sbb
inc
ret
cmpsl
pop
shr
sub
mov
mov
sub
xor
mov
popf
pop
fisttpll
push
mov
pop
jo
cmc
and
lods
sbb
pop
test
lcall
pop
iret
push
mov
fnstcw
jg
nop
mov
push
xor
mov
out
cltd
cmp
test
std
xchg
and
aas
sub
int3
sub
roll
ret
fdivrl
popf
sub
es
push
adc
cs
mov
dec
add
sahf
pop
jg
dec
push
cmpsl
fnsave
and
pusha
pop
cmovle
cmp
pusha
push
sbb
movsb
int
rep
cmp
lods
push
or
lea
outsl
int3
cli
and
ja
lea
cmp
push
mov
adcl
adc
dec
mov
hlt
mov
cmp
jbe
mov
jb
loope
test
and
out
sarl
or
push
lods
cmpl
xchg
call
xor
dec
cs
insb
mov
fstl
mov
in
cmp
repnz
xchg
mov
add
or
fwait
lcall
stos
mov
sub
push
jne
dec
roll
or
scas
dec
add
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
pand
or
cmp
mov
mov
in
pop
rorl
ret
lret
in
pop
in
cld
adcl
in
sub
or
sarl
iret
push
stos
mov
adc
ret
cmp
dec
scas
std
add
repz
dec
mov
inc
addl
add
rorl
or
leave
add
jbe
mov
dec
xchg
call
cwtl
xor
and
ret
lods
push
pop
xor
stos
sbbl
inc
pop
inc
lock
stc
cld
inc
inc
jg
push
xor
in
mov
push
inc
pop
jge
or
dec
push
sub
mov
out
aaa
xor
movsl
and
xchg
aas
mov
repnz
fwait
pop
lock
icebp
sti
gs
push
aas
adc
repnz
and
stos
or
lret
in
xor
sbb
stos
adc
loope
xchg
jno
cmp
test
bound
mov
xor
popf
cmpsl
aad
lret
cld
pop
mov
mul
aad
or
and
frstor
or
ljmp
dec
push
xchg
or
pop
cs
pop
insb
jecxz
inc
roll
or
push
in
sbb
out
fldt
lea
push
popw
in
ja
push
jne
scas
xchg
or
decl
clc
repz
adc
arpl
ja
in
add
sarb
add
add
xlat
adc
inc
mov
scas
jle
or
imul
push
test
hlt
subl
adcl
mov
and
dec
hlt
inc
push
dec
mov
sub
pushf
push
push
push
xchg
aas
or
mov
push
pop
dec
add
lock
lods
lret
outsl
xchg
add
push
sahf
add
dec
push
push
es
jne
cwtl
inc
jne
stos
adc
stos
dec
or
pop
fdivl
inc
sti
mov
inc
add
mov
jb
sti
fnstsw
cmp
push
xchg
mov
int
xor
rorl
xor
sub
clc
outsl
out
and
xchg
inc
and
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
nop
lcall
jle
rol
fs
cmpsl
jno
icebp
rol
js
pushf
xchg
fucom
out
and
xchg
mov
dec
mov
loop
mov
fcoms
mov
repz
cmp
and
jp
add
pop
jecxz
mov
adc
xchg
lret
add
stos
jnp
icebp
push
sub
nop
fsubs
sub
cmp
je
push
adc
insb
or
pop
fildll
sbb
sub
dec
jecxz
call
and
loopne
dec
jbe
lcall
repz
xor
or
imul
shr
jo
jnp
jb
cmp
add
xchg
jle
jmp
repnz
lods
inc
pop
mov
inc
xchg
push
scas
push
xchg
ds
leave
add
pop
mov
pop
dec
dec
xchg
mov
jecxz
dec
inc
dec
sbb
das
dec
lock
fcompl
jl
xor
and
xor
mov
mov
cltd
pop
cwtl
les
aad
ss
xchg
and
inc
sub
in
or
push
xor
mov
mov
mov
inc
xor
mov
and
jb
insb
insb
mov
jp
imul
or
js
movsl
mov
repz
cmpsb
or
ja
repz
mov
fiaddl
pop
mov
inc
push
insl
mov
mov
ja
sub
sbb
icebp
cmpsb
bound
imul
jnp
dec
mov
xor
loopne
and
push
movsb
enter
push
add
in
adc
ret
lret
jno
pop
cmp
xor
orb
push
pop
xchg
push
jno
xor
cmp
jmp
mov
bound
fldl
lcall
inc
je
cmpsl
clc
scas
lret
fidivrs
popa
or
push
jle
inc
mov
dec
or
stos
jo
sub
pop
test
mov
push
xor
stc
arpl
test
jg
xchg
fcmovb
aaa
hlt
mov
mov
sbb
inc
or
aas
lret
mov
xchg
dec
fwait
mov
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
stos
ja
pushf
sti
jle
cmp
shll
mov
pop
in
or
mov
es
ss
push
pop
repnz
in
inc
movsl
ficomps
mov
call
pop
cmp
popa
out
fistl
lods
out
repnz
push
push
aaa
ja
cmp
inc
nop
or
pop
rcrl
sub
scas
xorl
sub
das
push
popf
dec
in
inc
jecxz
or
xor
cmp
jecxz
repz
ret
fdivr
sti
lods
dec
in
sub
lea
fists
push
mov
jns
imul
xchg
in
fnstenv
dec
das
sub
xor
clc
adc
lcall
insl
mov
dec
mov
mov
dec
lcall
pop
data16
aam
mov
mov
xor
jb
or
lcall
sub
cld
mov
fidivrl
dec
outsl
cmp
mov
inc
push
lahf
pop
ret
arpl
mov
push
dec
in
mov
push
sbb
fxam
aad
stos
fs
xchg
std
leave
lock
cmp
pop
xchg
push
aam
mov
push
mov
mov
mov
mov
lea
and
adc
js
sub
dec
sti
int
mov
pop
roll
sbb
mov
subl
sbb
icebp
mov
clc
call
pop
mov
sub
test
mov
mov
mov
sti
fldlg2
push
stos
fsubp
or
inc
mov
inc
inc
mov
jo
sbb
dec
aas
lcall
aam
lds
and
jns
sub
xchg
fidivrl
push
push
sub
mov
aaa
inc
mov
sbb
or
movsl
lds
shrb
rcrl
or
mov
mov
leave
fdivl
lahf
cmp
repz
xchg
add
jnp
pop
pop
outsb
inc
xchg
mov
aad
cmp
xchg
lods
shlb
and
mov
outsb
ljmp
ret
lret
sbb
xchg
nop
inc
orb
and
mov
push
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
push
cmp
jle
jl
jle
jg
jmp
repnz
and
xchg
add
mov
jecxz
int3
shll
aad
add
sbb
jecxz
leave
xor
adc
adc
lds
push
adc
ret
mov
insb
push
adc
mov
push
mov
dec
nop
mov
cmpsb
sub
jb
cmp
and
and
imul
dec
sahf
fwait
into
mov
stos
imul
jmp
mov
jne
std
stos
cmp
jecxz
sahf
in
xchg
or
mov
and
or
dec
decb
out
fldenv
ljmp
addb
sbb
pop
fld
xchg
jp
sahf
test
mov
adc
jmp
xchg
ljmp
lods
xlat
jge
push
lcall
das
lret
mov
pop
pop
ja
add
in
pop
inc
xchg
mov
push
sbb
lret
sbb
jecxz
mov
loope
movl
adc
mov
scas
je
and
sbb
in
rcll
lods
fcomps
inc
subl
hlt
loopne
add
mov
iret
xchg
sub
cld
inc
lahf
adc
sarl
rorl
pop
pop
mov
dec
or
cmp
cmp
xor
inc
js
popa
jmp
mov
scas
imul
mov
inc
call
enter
dec
mov
mul
ja
mov
pop
fxch
pop
ret
das
push
push
rcl
sub
rcr
or
cld
mov
adc
not
push
ror
push
jge
aaa
dec
scas
xor
outsb
aaa
das
jge
es
or
pop
clc
cltd
cmp
jp
lods
dec
dec
lret
inc
mov
jg
cli
lea
loop
addr16
mov
and
mov
lods
mov
dec
mov
les
std
cmpsl
mov
fidivrs
fimuls
imul
dec
lods
cld
incb
test
addb
inc
push
rep
mov
das
in
dec
mov
out
mov
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
aas
jge
xchg
cmp
and
sub
mov
in
stos
lods
sbb
jnp
push
jmp
orb
adc
fsts
fmul
push
lds
pop
push
mov
or
enter
xor
inc
stos
or
cmp
jns
movsl
inc
add
mov
test
out
push
stc
mov
push
ret
cld
test
mov
xchg
inc
xor
gs
adc
sbb
sub
movsl
cli
mov
mov
inc
out
sbb
fimuls
adc
mov
and
mov
adc
pop
mov
int3
dec
js
jmp
jae
loope
mov
movb
ret
xor
icebp
into
out
xchg
mov
adc
adc
pushf
push
stc
sub
sbb
xor
mov
cmc
inc
xlat
xor
in
leave
sarl
sbb
cmp
sub
xor
stos
lahf
es
test
add
andl
outsb
sbb
pop
and
movsb
jae
adc
mov
sar
sub
mov
or
push
xlat
andl
add
mov
sbb
mov
sahf
mov
int
mov
mov
add
daa
pusha
daa
cmp
inc
popa
ja
psubsb
stc
int3
dec
and
inc
scas
mov
cld
outsb
test
mov
daa
out
daa
pop
mov
sahf
sub
push
pop
lahf
mov
mov
cld
test
stc
ss
movsb
popl
pop
jno
fiaddl
or
mov
push
leave
stos
dec
cmp
pop
push
push
mul
js
jecxz
push
stos
out
mov
arpl
cwtl
mov
mov
pop
daa
or
sbb
ljmp
scas
mov
loope
jecxz
ljmp
test
sti
scas
push
popf
stc
xchg
lret
mov
xor
imul
popa
push
sub
push
xchg
outsb
loopne
rcl
test
lods
out
push
pushf
mov
adc
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rcr
add
out
cmpb
jl
jle
flds
push
out
lret
fwait
adc
hlt
or
iret
cld
xor
cmp
mov
cmp
les
add
shlb
out
popa
adc
adc
nop
or
jbe
movsl
mov
hlt
pop
ficomps
cs
mov
push
lret
popf
add
fdivrp
add
xchg
or
imul
pop
and
dec
sahf
add
cld
not
fidivrs
pop
inc
cmp
adc
jno
sub
call
imul
popf
or
xor
cwtl
je
imul
mov
es
movsb
outsl
pop
mov
jl
xlat
pop
out
push
lahf
fbstp
cmp
xorl
ljmp
cmp
and
push
add
call
dec
clc
lods
pushl
add
pop
lahf
inc
fdivrs
pop
inc
mov
shll
xchg
inc
movsb
lret
vpshaw
aaa
mov
mov
mov
xchg
sbb
inc
les
push
mov
pop
or
add
out
add
outsb
push
jp
and
inc
add
arpl
adc
and
imul
aaa
test
push
lods
outsb
mov
cmpsl
and
dec
pop
aaa
lds
lds
xchg
out
cmpsb
int
cli
ret
das
repnz
clc
int3
in
sti
shrl
cmpsb
stos
xchg
mov
fdivrl
shll
shrb
cmp
dec
imul
sub
loopne
jb
cli
xlat
xchg
std
ret
mov
adc
xchg
jb
cmp
sbb
mov
int
mov
push
mov
xor
mov
icebp
in
iret
mov
cmp
sbb
or
ret
fs
add
in
hlt
addr16
subl
aas
push
je
mov
xchg
ljmp
cwtl
inc
rclb
nop
rol
dec
dec
and
jge
lret
sti
pop
stos
push
lea
stos
scas
mov
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
add
fiadds
jle
push
sub
test
cmc
jl
mov
and
test
jmp
aas
ss
pop
sbb
push
ret
cmovo
add
add
or
inc
cmc
pop
inc
jle
jmp
aad
sti
xchg
out
sub
xchg
int3
xor
push
bound
and
mov
pushf
inc
xor
add
inc
mov
fcomps
loop
fimuls
add
ret
add
lods
sbb
nop
subb
add
loopne
arpl
cmp
pop
int3
add
addr16
mov
mov
insl
sti
adcb
pop
xor
ljmp
cmp
push
sbb
sbbl
daa
push
jno
inc
sarl
cmpsb
lock
jbe
insb
std
xlat
jle
orb
mov
fst
xor
or
cmpsl
popa
cmp
pop
add
xchg
xor
ficoml
lods
out
mov
lods
xchg
or
rcrb
jb
cltd
xlat
mov
std
pop
cs
outsb
leave
or
repnz
or
sahf
aad
mov
pop
or
dec
into
mov
sub
xlat
mov
mov
fisubrs
int3
test
sbb
mov
fpatan
addr16
clc
roll
add
lret
xor
es
dec
mov
pop
cwtl
sbb
mov
push
out
les
xchg
cmpsl
xchg
fcompl
push
add
mov
mov
shl
sub
mov
push
ljmp
pop
push
add
mov
sbb
push
iret
das
addl
dec
pushl
dec
push
outsb
movsl
add
mov
sbb
and
jg
mov
dec
adcl
mov
and
pop
fs
cmc
in
je
in
mov
addl
es
sbb
and
test
push
add
cmpl
xchg
imull
push
sub
fists
in
pop
outsb
stc
bnd
jae
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
jle
sets
jle
sahf
push
inc
ret
ret
leave
lahf
or
jnp
mov
xchg
outsl
xchg
add
lahf
rolb
ljmp
jb
icebp
out
gs
pop
nop
jge
mov
frstor
add
add
sbb
mov
add
mov
mov
adc
aam
jae
cmpsl
cld
loope
mov
xlat
pusha
mov
pop
cld
jmp
scas
jg
push
loop
int
fcoms
inc
cli
mov
jno
test
lret
lcall
xor
dec
data16
cmp
ficoml
jnp
xor
ds
cmp
movsb
add
stc
jno
mov
incb
sbb
cmpsb
xor
lcall
xchg
into
adcl
scas
dec
shll
xchg
cmpsl
ret
in
pop
sbb
push
mov
sub
lahf
pop
fnsave
sbb
add
dec
test
and
fwait
jl
pop
bound
pusha
xchg
push
aam
push
es
mov
pop
cmpsb
aaa
push
jae
push
dec
mov
pop
dec
lret
adc
fstpl
in
pop
xorb
addl
xor
insb
jae
cs
les
loope
mov
gs
int
out
fwait
in
xor
jg
inc
addr16
call
fstl
hlt
push
mov
xor
arpl
jecxz
mov
xchg
pop
test
lret
add
fbld
sub
iret
adc
lret
lods
xor
or
xchg
sbb
pop
out
pop
mov
pop
std
cmp
stos
mov
or
sbb
sub
dec
dec
ret
push
dec
xchg
fstps
jmp
sub
int3
aas
mov
addl
inc
test
lds
push
pop
mov
adc
xor
shll
ret
fdivr
lcall
loope
mov
mov
ljmp
and
mov
mov
push
roll
push
popl
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
mov
jle
cmp
int
dec
jno
xchg
dec
lods
sbb
push
mov
cmp
lods
fcmovbe
jbe
cltd
icebp
gs
aad
in
decb
outsb
arpl
pusha
aad
jns
in
test
in
lcall
push
aaa
fisttps
loop
mov
push
lock
xchg
aas
ficoms
jg
push
scas
out
dec
xchg
arpl
test
push
fsub
dec
cmpsl
adcl
jecxz
inc
fsubs
repnz
sbb
dec
loopne
mov
int3
cmpb
jnp
pushf
push
jb
ret
jl
rolb
repz
push
cmp
jb
add
jns
scas
inc
mov
inc
mov
push
sub
jno
ljmp
xchg
push
sub
push
adc
fcoml
pop
pop
scas
icebp
cmp
cli
call
lahf
popa
push
cmpl
adc
subl
jl
mov
inc
cmc
jno
cld
mov
cltd
scas
ds
mov
test
shrb
movsl
jne
jg
pusha
xlat
and
lret
ret
lods
aam
jns
and
dec
iret
daa
xchg
dec
cmc
mov
popa
jl
in
popa
sti
mov
imul
cmp
inc
sub
push
inc
loope
add
jo
inc
jmp
fsubs
fdiv
icebp
add
xchg
into
popf
sbb
bound
ljmp
xor
xor
push
cwtl
in
or
xor
ror
in
call
jle
mov
push
jns
mov
dec
inc
mov
mov
push
xor
jae
mov
sub
pop
xchg
mov
cld
outsb
addb
loop
mov
inc
xor
xchg
pop
or
test
add
add
mov
out
lods
sub
pushf
sbb
lret
fucomi
pop
clc
test
push
mov
mov
push
cmp
in
in
lret
enter
sbb
imul
mov
clc
xchg
out
mov
mov
pop
mov
stos
xchg
lret
adc
or
pop
dec
sub
mov
jnp
ret
pop
dec
xorps
fisubl
aas
sub
cmp
flds
add
push
std
dec
sahf
push
push
add
mov
mov
cmp
pop
out
loop
or
and
imul
outsb
sarl
leave
jmp
mov
lcall
addr16
or
cmpsb
pop
mov
push
and
stos
lcall
iret
jb
mov
and
inc
int3
addr16
pop
inc
cli
xchg
inc
jno
cli
xlat
loope
insb
daa
xor
push
cmpsl
mov
pop
jmp
push
repz
jecxz
mov
scas
and
jbe
push
mov
test
pop
xchg
lock
jno
cmp
std
clc
mov
cmpb
sbb
xchg
mov
sub
pop
shrl
xor
daa
imul
cwtl
lock
das
xor
xor
adc
push
mov
popa
ss
mov
int
jb
rcrb
jo
pop
mov
into
pop
popa
xor
in
orb
dec
mov
mov
inc
adc
lods
or
mov
xchg
mov
mov
mov
lods
add
jbe
xchg
xchg
lds
cmp
cld
repnz
movsl
mov
out
out
pop
pop
xlat
inc
xor
sbb
fwait
stc
dec
xor
push
aaa
sbb
leave
sub
cltd
mov
mov
pusha
out
dec
pop
or
hlt
mov
pop
dec
int
cmp
jb
pop
push
stc
je
scas
jo
mov
divb
dec
out
push
ja
test
fnstsw
jne
or
jbe
aaa
movsl
adc
push
jg
xcrypt-cfb
cmpsl
addr16
lock
ljmp
sbb
cmp
push
xor
cmpl
mov
jp
not
sub
and
out
push
aas
push
fdiv
mov
lock
lods
leave
fcompl
mov
mov
inc
repnz
inc
push
fnstsw
stos
mov
repnz
lea
hlt
out
xor
sub
aaa
cmpsb
xor
mov
sub
jle
lahf
das
or
ja
and
adc
inc
insl
xchg
mov
ljmp
mov
jnp
loopne
idiv
daa
test
arpl
push
mov
inc
rdtsc
add
popf
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
jmp
push
pop
testb
jle
mul
push
lret
insb
arpl
mov
or
imul
lea
dec
cmp
xchg
inc
mov
cmp
loope
insb
xchg
int3
push
test
push
cmp
std
mov
mov
jecxz
cmp
push
sub
sub
int
and
jge
jecxz
pop
je
dec
pop
mov
pop
push
aad
lods
movsb
xor
mov
mov
mov
leave
ret
or
imul
or
insb
add
dec
out
mov
xchg
jmp
test
lahf
add
lret
xor
cmpsb
push
dec
aaa
in
fs
adc
jl
xorl
dec
ss
jne
mov
xlat
jmp
xor
and
push
mov
dec
loope
mov
data16
andb
imul
sbb
and
test
cmp
adc
out
loopne
jl
clc
xlat
xchg
sarl
call
sahf
add
xchg
sub
stos
sahf
jno
push
lods
jae
jns
xor
cli
fnstsw
and
pushf
jl
fsubrs
xchg
push
in
sub
lds
sbb
pop
dec
jno
sbb
xchg
mov
add
sbb
mov
loope
nop
cmp
xor
mov
mov
mov
out
jnp
push
into
or
mov
mov
cmovs
push
std
mov
sbb
mov
sar
jmp
fdivl
xchg
mov
cmpsb
outsl
cmpl
lock
xchg
and
or
faddp
push
or
and
jmp
out
mov
sub
push
das
test
push
fdivrl
cld
sbb
and
xor
movsb
or
sbb
sub
sub
jne
lret
je
xchg
mov
mov
shr
clc
dec
outsl
sub
mov
push
xchg
outsb
stc
mov
inc
fcom
and
fisttpll
sar
lcall
adc
fmuls
and
add
fisttpl
add
add
stos
mov
pop
repnz
inc
xor
jl
jle
jbe
cmp
pop
movsb
lea
outsl
and
loopne
push
push
jp
pop
bound
loop
mov
push
add
inc
push
stos
scas
imul
add
pop
dec
outsb
cli
scas
jmp
sub
icebp
mov
add
int
xor
aaa
jnp
adcl
xchg
orl
loope
aas
popa
in
xlat
imul
pop
rcll
adc
outsl
roll
fs
cmp
mov
jmp
data16
push
fs
ret
cmp
mov
aaa
fs
les
cmc
push
mov
sub
xchg
adc
in
xorb
lea
jb
clc
bswap
cld
subb
sbb
or
mov
pop
push
cmp
xchg
jnp
ss
pop
mov
adc
arpl
mov
or
sbb
and
ds
ds
jmp
hlt
cmc
rcl
decl
jne
jo
push
jne
stc
cmp
repz
jns
lret
or
rclb
xor
cltd
inc
rcrb
not
sarb
andb
inc
push
or
ret
in
lcall
loopne
pushf
mov
xchg
scas
mov
mov
mov
je
pop
xor
lea
test
in
mov
bound
loopne
xchg
mov
xchg
repz
sub
insb
imul
mov
ret
or
testb
sub
clc
xor
cld
pop
adc
sbb
and
lods
movsb
add
inc
divb
bound
jno
mov
fildl
mov
push
and
push
mov
test
scas
das
sbb
call
dec
nop
lret
or
loop
cmp
rcrl
dec
repnz
sub
add
xorb
stos
int
or
pop
xchg
gs
push
arpl
hlt
xchg
push
jp
test
xchg
in
sub
mull
pusha
sbb
mov
mov
pop
sub
scas
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
adc
jle
jl
jle
or
mov
push
pop
fstpl
jmp
adc
nop
xchg
lods
pop
xor
mov
add
and
es
jmp
cli
xor
mov
pop
xchg
icebp
push
push
rcl
int
stos
sbb
push
es
out
mov
jp
sbb
or
jae
cmp
jb
ret
cmpsl
je
xor
mov
xor
inc
pop
xchg
mov
adc
jno
jp
mov
outsl
dec
out
adc
pop
mov
and
sub
scas
add
adc
mov
loop
dec
outsb
stos
mov
mov
aam
mov
jae
sub
sub
dec
mov
fisttpll
adc
add
outsl
jno
icebp
in
aaa
lods
repnz
or
fistpl
push
ja
pop
mov
push
addb
js
jno
sub
xchg
or
push
jo
dec
mov
daa
inc
cmp
cltd
pusha
stos
lahf
sbbl
xchg
stc
outsl
fs
sub
xchg
mov
decb
inc
imul
dec
shll
jmp
out
subl
rcrb
inc
int3
mov
out
or
jmp
push
leave
in
outsl
sub
cmc
ds
lea
pop
pop
mov
cmp
add
enter
jns
push
xchg
xor
pop
add
fincstp
test
push
xchg
stc
in
sub
cmpsl
jb
xor
jne
test
cmc
sbb
repz
ret
mov
push
stos
js
xchg
mov
xor
and
jle
add
aaa
insb
inc
aam
jnp
sub
mov
mov
mov
popl
push
lcall
inc
fwait
sub
jb
cld
ret
jbe
and
fcmovnb
es
ret
xchg
repz
insl
cmp
loopne
jnp
sbb
xchg
mov
mov
lock
cs
outsl
inc
jo
mov
outsl
cwtl
pushf
stc
mov
or
bound
lds
sbb
jmp
mov
mov
xor
add
jmp
orl
imul
jl
bound
nop
jle
jl,pt
jle
iret
sbb
xchg
inc
into
inc
and
mov
lds
sahf
jl
daa
test
ja
out
push
push
leave
push
stos
movl
subb
xor
add
rorl
int
xor
jmp
xchg
xchg
imul
fsubl
outsb
push
inc
imul
jae
pop
and
dec
jecxz
jmp
and
xchg
adc
mov
mov
or
push
xlat
push
clc
mov
mov
mull
inc
into
jecxz
xlat
iret
cwtl
jae
xor
movb
jecxz
adc
sbb
repnz
cmc
inc
jb
test
sbb
js
push
repz
push
or
xor
or
jno
lret
popa
push
inc
push
and
mov
call
adc
outsl
test
cmpb
mov
push
lret
test
sbb
cmpl
inc
ret
xchg
lods
cmc
mov
pop
mov
sbb
mov
cltd
stos
dec
push
je
push
push
dec
xor
imul
cli
jmp
adc
icebp
stc
mov
mov
cld
sbb
add
iret
and
shll
out
fwait
xchg
mov
sub
xchg
sarb
mov
test
xor
test
mov
int3
leave
pop
and
push
sub
rolb
dec
in
sub
movsl
mov
andl
push
sub
dec
cmc
les
mov
or
mov
fimull
push
cmp
clc
xchg
aaa
xchg
adc
cltd
jae
cld
ljmp
pop
add
js
std
dec
push
mov
das
insb
adc
hlt
adc
push
jne
clc
icebp
movsl
imul
loope
add
pop
jbe
mov
add
and
jmp
mov
xchg
loopne
outsb
push
jo
mov
ret
mov
push
dec
jge
shll
mulb
pop
xchg
or
add
out
inc
inc
ret
inc
jle
or
sub
sub
mov
mov
xor
in
add
adcb
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
loopew
jb
adc
add
int
xchg
adc
pop
addr16
inc
push
xor
mov
pop
sub
rcll
and
pusha
jle
inc
jo
dec
data16
and
or
fldt
sbb
test
jle
add
push
cwtl
aaa
lock
lods
fdivrs
lret
and
inc
call
jle
fld
mov
pop
xchg
pop
dec
push
inc
in
inc
jg
dec
jge
pusha
adc
mov
add
cmp
lcall
or
bound
shll
jnp
add
pop
mov
jbe
ds
jmp
mov
xchg
call
call
sbb
ljmp
mov
inc
mov
push
jno
repnz
cmp
jmp
push
insl
lds
jae
in
imul
inc
xchg
mov
pop
mov
inc
dec
add
push
clc
sbb
fwait
pop
jp
xor
push
rorl
cmc
pop
out
cmp
test
in
lret
jnp
iret
jb
mov
stos
xchg
ficoml
clc
mov
outsl
mov
mov
xchg
mov
out
dec
adc
dec
xchg
cmp
lret
ljmp
sbb
outsl
ret
xor
jnp
dec
int3
aam
outsl
and
data16
sbb
in
push
xlat
jg
or
fildl
mov
ds
je
mov
pusha
dec
pop
fwait
clc
in
ret
fwait
push
jae
mov
sbb
push
pop
xchg
je
xchg
or
das
mov
je
push
mov
and
sbb
sbb
jl
lret
in
out
mov
das
xlat
outsb
sbb
mov
and
xchg
popf
outsb
ret
sbb
pop
mov
jae
mov
xchg
pop
loope
ret
mov
mov
jbe
sbb
jp
outsb
mov
inc
bound
out
pop
mov
pop
pop
aad
push
cli
lret
adc
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
mul
cmp
pushf
jle
adc
jle
jne
xor
ret
cltd
daa
or
cltd
or
in
sub
sbb
lret
sub
out
add
or
add
daa
fs
outsb
cmp
stos
mov
sub
pop
cmp
push
adc
ret
jmp
loopne
aam
ret
mov
ja
bound
mov
pop
mov
cmc
scas
pop
dec
pusha
push
mov
in
inc
ds
adc
aaa
push
pop
mov
cmp
jge
sbb
mov
cltd
test
orl
pop
in
aad
push
push
xor
jo
push
addl
sbb
mov
pop
jno
out
loopne
inc
dec
iret
mov
and
iret
jae
popa
loop
add
scas
lcall
aad
ljmp
lahf
add
sbb
xlat
mov
int
push
push
shlb
xchg
lret
xchg
pop
out
xchg
scas
sets
dec
pop
inc
fdivrl
jno
add
mov
loopne
or
mov
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
incl
sbb
adc
jle
out
ds
call
add
es
mov
into
push
out
mov
mov
loopne
cmp
cltd
adc
cmpsl
xchg
lea
mov
iret
arpl
add
pop
xor
call
xchg
mov
adc
ljmp
movsb
jmp
sub
cmpsl
sti
jp
sti
scas
int3
inc
fdivl
mov
dec
insl
fdivrl
test
xor
das
inc
mov
push
sub
add
sbb
jne
in
push
and
push
test
pop
addl
push
mov
dec
scas
xorb
dec
mov
mov
out
jp
sti
xchg
xchg
test
jno
dec
jb
add
xchg
loopne
cmp
mov
repz
fiadds
into
jae
fs
mov
mov
sti
notl
out
outsl
or
in
hlt
inc
testl
ja
icebp
push
es
adc
mov
daa
push
or
sub
aas
aad
jo
cli
pop
in
loop
adc
inc
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
sti
inc
inc
mov
adc
jle
ficoms
or
dec
es
mov
sub
jno
lcall
fnsave
mov
pmullw
sub
xor
jnp
add
test
out
testl
mov
cmp
push
in
clc
shl
cmp
int3
xchg
push
mov
and
mov
jl
out
out
popl
push
loop
test
lret
push
leave
mov
in
xchg
push
int3
adc
jbe
shll
push
jge
testl
cmpsl
lds
data16
rorl
dec
add
jg
fstp
fbstp
lods
fimull
mov
dec
sarb
adc
pusha
pop
jae
jp
ds
shrb
sbb
nop
push
sub
out
out
dec
sahf
rorb
xchg
sub
pop
xchg
add
pop
sti
cmp
xor
sbb
push
or
xchg
jno
cmp
push
cltd
ds
fs
xchg
jp
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
ja
sub
adc
jle
cmp
xchg
movsl
call
jb
or
shl
subb
out
movl
out
fcmove
dec
mov
out
insb
popl
shlb
pop
sti
ret
and
xchg
mov
ret
leave
call
mov
mov
insb
inc
mov
out
rcrl
xor
sbbb
fsubrp
call
push
pop
fwait
in
adc
jp
cmp
outsl
or
jnp
out
push
jmp
jmp
xor
xor
jno
outsl
and
out
jp
pop
cli
xor
jmp
xor
fsubrs
shlb
mov
ja
shlb
cmpsb
adc
mov
mov
out
or
lret
cltd
mov
imul
mov
sub
cmp
inc
mov
pop
xor
data16
sub
clc
adc
aas
in
imul
xor
rcrb
in
inc
xor
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
nop
arpl
jg
jle
adc
stos
jl
aaa
cmp
ss
push
xor
pop
add
mov
and
mov
or
insl
add
fdivr
insl
aas
mov
les
push
xchg
mov
in
xor
ss
inc
pop
mov
scas
adc
rcrl
push
pop
gs
adcl
lret
and
rclb
mov
xor
imul
cmc
lods
and
sgdtl
stc
push
and
jb
add
icebp
or
addl
sbb
sbb
add
xchg
inc
orl
ror
js
jle
icebp
lret
pop
mov
mov
jno
ret
roll
repz
arpl
inc
pop
pop
lret
negl
mov
cwtl
lods
inc
sub
jle
cmp
ljmp
jo
aas
ljmp
cmc
xchg
push
xchg
sbb
inc
leave
popf
jg
xchg
in
ljmp
pushf
mov
xchg
lcall
jle
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
cmp
adc
mov
lods
and
xchg
jb
movsl
jbe
dec
fdecstp
pop
pop
push
dec
out
dec
imul
cmpsb
xchg
gs
into
jle,pt
sbb
iret
sub
cmc
leave
push
mov
std
sbb
nop
push
add
lock
stos
mov
mov
inc
mov
mov
sub
pop
fwait
xor
and
inc
aas
adc
inc
and
dec
repnz
sbb
fs
push
adc
or
and
sti
jge
das
ret
push
imul
push
add
mov
es
sarl
loopne
pop
pop
idivl
stos
pushf
lret
dec
pop
imul
fidivrs
pop
mov
adc
or
in
jne
xor
push
cmp
imul
inc
shll
and
mov
in
sub
xor
xchg
or
jmp
xor
das
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
mov
movsl
loop
jle
adc
jle
inc
sub
mov
mov
or
lea
sbb
xor
sbb
dec
push
arpl
popl
in
xchg
leave
inc
dec
addb
fdivrs
dec
mov
ss
xlat
out
fsubrs
shr
mov
insl
outsb
dec
jbe
pop
sahf
sbb
sub
add
lahf
adc
pop
fcompl
daa
enter
fwait
addr16
daa
fcoms
add
enter
mov
jmp
in
add
mov
nop
out
fcomps
in
push
jmp
movsl
push
popa
pushf
xchg
adc
in
sub
test
mov
sbb
sbb
leave
aad
xchg
das
and
lods
fildll
ja
sub
xlat
in
mov
outsl
das
sub
rcr
push
daa
ja
dec
jno
dec
nop
push
ds
sbb
mov
notb
movsb
or
cs
cmp
ljmp
stos
mov
out
ljmp
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
jmp
movsb
jle
adc
jle
fcompl
stc
xor
xchg
leave
and
outsb
jnp
adc
push
xchg
jl
adcb
sub
lds
mov
and
xlat
shl
scas
mov
dec
test
dec
sbb
push
add
lods
mov
imul
roll
sbb
es
xorb
repnz
stc
scas
mov
out
sahf
xchg
and
lods
or
sbb
mov
mov
addr16
xchg
aad
mov
lods
xlat
xor
xor
mov
out
and
pop
xor
mov
push
into
inc
mov
lds
fwait
pop
push
xchg
cwtl
mov
popa
jo
pop
lret
jl
mov
movsb
xchg
mov
adc
cmp
lahf
fldcw
in
xor
lret
adc
cwtl
jnp
sub
sub
sub
std
out
and
repz
push
lds
and
into
jecxz
ljmp
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
clc
repnz
jg
jle
lahf
mov
inc
pop
sub
jne
shl
cmpsb
or
xchg
aam
mov
mov
pusha
sbb
sub
jo
add
inc
test
push
mov
and
jbe
movsb
add
ret
insl
push
outsb
ficoms
mov
cmp
lds
xlat
mov
fidivs
and
inc
dec
and
in
pop
adc
into
shlb
pop
sbb
int3
xchg
push
jecxz
test
das
or
sti
mov
sbb
xor
pop
adc
je
sub
jmp
mov
xchg
sbb
cld
mov
dec
cmp
sbb
sub
mov
outsl
in
jle
movsl
loop
and
lods
xor
push
hlt
js
aad
lea
jl
in
mov
dec
mov
mov
push
inc
lock
loop
mov
push
in
lods
xor
lods
cli
jge
and
jno
cmp
or
lcall
ja
or
or
rclb
mov
xchg
jg
cmp
push
leave
out
and
push
arpl
cwtl
pusha
sbb
jno
stos
jb
xchg
cmpsl
jnp
sbb
insl
sub
sbb
lods
xor
xchg
lret
mov
mov
or
xchg
cs
fs
pop
mov
ljmp
or
jae
fwait
jg
mov
das
and
and
inc
sbb
pop
mov
ljmp
ja
dec
stos
xchg
mov
das
ljmp
and
lcall
push
pop
aad
stc
data16
fiadds
push
imul
repz
or
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
repnz
xlat
xor
push
aaa
push
xchg
sahf
repnz
push
andb
inc
push
adc
dec
iret
push
aam
mov
std
mov
stos
insb
mov
fnsave
push
sarl
je,pt
cmpsb
shrb
sbb
and
mov
rcrb
rcll
sarb
scas
xchg
push
movlps
filds
xchg
jg
nop
ror
add
cld
adc
push
imul
push
ss
add
sahf
and
xchg
in
push
movsb
cmp
xor
clc
mov
aam
cmpsl
rclb
lods
sbb
xchg
and
mov
ss
sbb
jae
pop
shl
lods
lcall
lds
std
cwtl
cmp
call
dec
icebp
loop
clc
and
sbb
inc
int3
les
sub
or
mov
lcall
inc
daa
cmpsb
outsw
aam
out
mov
adc
cmc
cmpsl
dec
adc
mov
xchg
push
mov
and
out
jle
push
insl
call
mov
adc
sub
into
popf
or
fcoml
outsl
sub
sub
lods
and
lods
cwtl
js
pop
in
jbe
fisttpll
lret
test
add
daa
xchg
mov
roll
sbb
aas
dec
jl
mov
jp
jl
aad
pop
mov
arpl
xchg
jg
in
and
or
push
stc
out
or
pop
sahf
int3
ja
insl
xor
or
push
lcall
subb
push
xor
in
xor
dec
add
jmp
jge
adc
mov
mov
imul
sub
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
cmp
mov
jle
cli
lea
add
and
pop
test
sbb
ds
cli
shrb
and
xchg
pop
mov
nop
outsl
cltd
sub
cmp
popa
cld
and
mov
xor
cmp
pop
repz
inc
sbb
adc
sbb
xchg
inc
push
mov
mov
adc
lock
movsb
or
xor
bound
push
add
int3
repz
mov
cli
rep
movsl
inc
pop
pop
cmc
and
sbb
and
dec
das
jle
out
cmpsb
cmc
sbb
sahf
inc
imul
movsb
arpl
pop
add
add
les
add
data16
or
test
sti
inc
adc
push
cmp
in
xor
cli
xor
add
or
icebp
pusha
inc
mov
leave
popf
push
in
lods
test
inc
mov
sbb
inc
shrl
clc
subl
or
imul
int3
test
stos
mov
xor
out
push
loopne
gs
inc
and
add
add
aam
lret
aam
cld
mov
mov
and
es
pop
xor
ds
mov
outsl
in
mov
or
js
das
lock
mov
in
jg
mov
out
fbld
xchg
popf
dec
xchg
dec
mov
es
inc
dec
inc
pop
cmpsl
or
jb
lods
fsts
mov
sbb
xchg
mov
push
xchg
pop
addr16
cmp
push
and
xchg
xchg
scas
loopne
arpl
mov
mov
sbb
roll
mov
or
notl
dec
mov
call
ljmp
add
xchg
add
push
cltd
stos
dec
mov
mov
cmpsb
sub
mov
mov
call
and
aad
pop
rolb
mov
in
mov
jb
push
addr16
aas
insb
mov
loopne
in
lret
cmp
pop
lret
imul
popf
pop
sar
mov
and
inc
jp
test
pop
dec
mov
push
test
or
inc
cwtl
lock
dec
pop
stc
jmp
loopne
sub
pop
lods
adcl
xor
test
push
or
xchg
mov
dec
sbb
xchg
loopne
andb
or
fistl
sbb
cltd
adc
sbb
adc
fwait
add
loop
jge
gs
cmp
in
test
insb
and
fmuls
ficoml
push
jge
cmp
mov
jno
inc
adcl
mov
outsb
inc
nop
pusha
jp
movsb
and
stos
imul
pushf
clc
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
add
lods
jle
jl
jle
rol
call
ja
outsb
sub
loopne
mov
iret
ficompl
or
push
inc
and
jnp
rcl
push
bound
loope
inc
xor
sub
push
dec
leave
int
lret
inc
cmp
sub
jg
dec
jno
arpl
pop
sub
cwtl
repz
xchg
lahf
popa
jmp
out
mov
push
xchg
jle
mov
outsb
lret
push
adc
aam
mov
mov
rolb
int3
shlb
pop
orl
fsubs
push
sbb
aaa
js
rcl
sbb
xchg
movsl
sub
adc
add
inc
out
fucomp
ss
pop
inc
test
adc
xchg
or
jb
or
enter
push
fcoms
pop
cs
xor
dec
sub
inc
orl
push
test
shrb
adc
push
add
comiss
xchg
xchg
lret
int3
aam
cltd
fstl
into
fistps
push
cmpsb
mov
mov
jbe
fstpt
push
mov
sub
into
cmp
mov
jno
xor
inc
movsb
out
ds
stos
mov
xchg
and
push
push
push
adc
inc
xorl
push
add
and
cli
mov
inc
ret
dec
jle
cmp
push
bound
add
push
in
or
insb
xchg
xor
mov
push
xor
sahf
xor
aaa
and
jne
cmpsl
ja
jbe
xchg
add
mov
in
mov
inc
in
insl
xchg
lcall
add
cwtl
sbb
mov
fistpl
in
pop
jg
je
stc
aaa
xchg
sbb
jo
or
adc
daa
jle
xchg
adc
jg
stos
or
cmpsl
push
fistps
jl
mov
ret
xor
xor
push
and
jge
adcl
notl
gs
adc
cltd
inc
into
out
add
jmp
cmp
pop
jae
pop
push
stos
xchg
aam
fs
jge
dec
flds
add
pop
hlt
adc
enter
jp
clc
test
lcall
cltd
movsb
rorl
inc
add
adc
push
sub
lods
and
repnz
sti
inc
pusha
add
loopne
mov
and
cs
int3
push
mov
xchg
scas
pushf
ds
sbb
sbb
mov
and
pop
mov
cwtl
adc
push
fwait
pop
pop
and
data16
sbb
in
mov
adc
push
and
pop
xlat
lods
jo
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
movsb
shrb
jle
es
incl
ljmp
or
pop
push
jno
icebp
push
loopne
test
xchg
les
cmp
call
repz
xor
mov
add
lret
scas
and
aad
arpl
xor
pop
push
push
mov
add
movsb
mov
sbb
int
and
xchg
xchg
cmp
jge
add
icebp
addr16
cmp
sbb
stos
add
test
and
jecxz
daa
pop
add
or
sub
movsl
xchg
mov
aaa
lock
add
div
sub
push
jno
sbb
out
enter
mov
aad
mov
jl
lahf
inc
mov
mov
mov
pop
outsb
push
mov
lcall
test
or
jmp
lret
aad
fst
ljmp
lret
lock
jmp
lret
scas
shlb
push
fcomip
test
and
sbb
fdivs
das
xchg
dec
inc
hlt
lock
or
xchg
aam
loope
xor
adcl
fbld
stos
add
dec
scas
inc
pop
cmp
inc
es
mov
lods
test
movsl
adc
add
cld
in
rorb
xchg
and
cmp
mov
jo
arpl
addr16
lock
in
mov
pushf
lahf
mov
mov
xchg
loope
lcall
sub
data16
lock
fisubrs
fmul
and
repz
movsb
jae
bound
roll
mov
inc
jmp
and
mov
jle
jnp
lret
repz
std
leave
mov
das
or
and
dec
jp
jmp
xor
cltd
inc
arpl
dec
lock
mov
or
mov
aas
cmp
mov
mov
fldt
cmp
or
pop
scas
add
mov
add
mov
bound
push
jl
jge
imul
mov
or
movsb
cmpsl
sub
mov
cmp
dec
cmp
push
cli
lahf
sahf
repz
cmp
add
shl
mov
out
in
push
sahf
jnp
inc
lahf
push
loop
jae
loope
loop
push
or
bnd
jns
icebp
dec
jo
xchg
fwait
add
adc
fs
cld
cli
dec
cmp
fs
cmpsl
jns
bound
es
setns
fadd
dec
pushf
enter
in
xlat
mov
jb
xchg
icebp
inc
mov
cmpsb
lret
xor
jmp
push
int3
sbb
xchg
aad
sarl
jmp
adc
push
mov
mov
fwait
test
xchg
or
sub
stc
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
mov
out
shlb
jle
sbb
mov
mov
pop
xchg
bound
jo
inc
xchg
and
pop
xchg
xchg
sub
dec
rep
les
lods
loope
mov
adc
mov
fiadds
jns
cmpsb
jns
xchg
out
jmp
dec
jbe
ss
jmp
mov
wbinvd
aad
push
std
pop
lods
push
inc
xchg
aas
xchg
sub
shr
popfw
notl
mov
popf
icebp
adc
push
mov
outsb
and
clc
or
pop
lods
fcomps
imul
pop
mov
and
popf
mov
inc
stos
ja
pop
xchg
inc
mov
lods
test
stc
std
sbb
into
ret
or
cmp
cli
nop
stc
out
and
js
push
xorl
loopne
mov
out
xchg
inc
or
fstpt
dec
and
and
outsb
jbe
sbb
out
push
mov
loopne
mov
push
cmp
pop
fstpt
adc
sub
mov
idivl
and
fcoms
xchg
stos
mov
jecxz
pusha
daa
sbb
jnp
mov
ss
xchg
xchg
hlt
rclb
xchg
push
mov
shl
mov
and
repz
das
pusha
pushf
xor
jmp
ss
out
xor
repz
out
or
lahf
sub
test
sti
mov
repz
aam
mov
dec
ljmp
add
mov
jmp
inc
pop
fld
cmp
test
mov
inc
shlb
cltd
pop
iret
jp
scas
pop
out
int
dec
push
jl
fcmovb
add
cli
and
stc
push
cmp
arpl
das
fwait
loopne
sar
pop
add
sbb
es
lahf
shl
fisubs
out
and
sub
sbb
js
xchg
clc
push
and
popa
out
dec
mov
xchg
pop
loope
push
out
aaa
pop
add
pusha
int3
loop
push
cwtl
sub
sbb
mov
ret
int
imul
movsl
fsubrs
xor
pop
dec
lahf
iret
inc
ret
movsb
mov
iret
fldl
pop
bound
andl
mov
ljmp
adcb
push
xchg
rcrb
add
mov
je
sti
jno
in
stos
or
mov
cs
arpl
das
sbb
movsb
xor
push
push
test
ja
out
repz
or
cmpsl
hlt
out
push
rolb
sbb
pop
pop
jecxz
ret
je
push
fnsave
pop
cmpsl
int
inc
and
add
add
out
sub
ret
icebp
faddl
push
jne
sbb
ljmp
mull
filds
inc
or
sarb
jmp
or
pop
jno
xchg
add
xchg
cmp
jl
jle
inc
pop
mov
or
mov
and
out
out
fildll
jnp
push
xorb
aam
out
xchg
lcall
fdivrl
and
xor
inc
and
sub
mov
iret
ret
pushf
lds
pop
jo
mov
sub
aas
dec
insl
sbb
icebp
and
cltd
cmp
idivb
mov
xchg
cmpsl
cs
aaa
lret
dec
push
pop
lods
ret
fnstsw
mov
pop
aad
mov
outsl
dec
push
cmp
in
push
and
jp
fcmovnbe
imul
lea
cs
push
addr16
mov
ficoms
cmp
sub
sub
sbb
sbb
popf
jns
sub
inc
das
bound
mov
jp
or
test
ror
mov
ja
sbb
xlat
xlat
push
xchg
decb
mov
pop
movsl
mov
cli
jmp
sbb
add
daa
jbe
mov
adc
sub
rclb
sub
cmp
pushf
adc
fdivrl
imul
movsl
movsb
je
repz
call
stos
and
in
push
push
in
jg
sbb
mov
mov
mov
adc
test
mov
pop
inc
fiadds
jmp
dec
jne
cli
xchg
lods
xor
cmp
inc
inc
stos
add
movsb
push
and
sti
sub
push
adc
js
data16
je
and
shrb
add
xchg
jae
mov
sbb
push
cmp
loop
and
push
mov
xor
push
xchg
jle
lcall
and
sbb
sub
popf
sbb
in
adc
xlat
fistps
scas
sbb
cli
jge
dec
xchg
or
push
dec
stos
out
data16
movsl
inc
pop
lcall
jns
pop
xchg
aam
sti
push
xchg
outsb
sub
jge
fisttpll
adc
cwtl
pop
mov
cmp
or
arpl
or
insb
dec
daa
add
je
lret
xor
push
cmp
jae
sbbb
and
jns
cmp
data16
ret
lret
cltd
test
mov
add
out
test
mov
xor
stc
std
mov
dec
paddw
or
call
pusha
mov
pusha
in
pop
cmp
test
repz
addr16
inc
loope
inc
cmc
sub
outsl
jne
shlb
mov
lods
xchg
sbb
imul
bound
enter
cmp
cld
clc
jge
movsl
std
mov
inc
mov
out
and
popf
inc
movsl
insb
cmpsl
pusha
lea
cmp
sahf
cld
loop
dec
jae
nop
xor
mov
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
or
fdivl
jle
cmc
jmp
jmp
jmp
adc
insb
push
sub
addr16
cmp
dec
int3
sbb
add
jns
clc
rorl
cmp
loop
mov
adc
sti
cmp
jg
shlb
mov
lcall
pop
out
adc
jnp
add
lea
arpl
jl
rcr
mov
push
shll
aaa
fdivrs
xorl
test
iret
cmp
mov
repz
stc
shll
mov
imul
sub
xor
sbb
push
cmpsl
mov
push
pop
xchg
sbb
push
pop
adc
hlt
xor
insl
jno
xchg
inc
pop
popa
fwait
leave
js
adc
sub
ds
or
mov
lahf
insl
jae
popf
adc
sub
aas
lds
stos
loop
popa
in
add
mov
arpl
or
out
mov
and
cmp
inc
fldcw
xor
or
inc
fstpl
in
jno
test
add
adc
xlat
in
add
push
ficompl
jae
dec
push
jle
out
xor
inc
loopne
scas
add
rolb
test
rcrb
fidivrs
ja
jl
fwait
jns
stos
lcall
lret
mov
decb
imul
in
xor
out
xchg
ret
push
push
fs
pushf
dec
lods
push
nop
sub
enter
lcall
fmuls
repnz
jle
push
mov
jp
xchg
mov
ja
dec
mov
out
shll
loop
loop
out
mov
xchg
xchg
shlb
inc
fisubl
jmp
rcrb
sbb
les
xchg
pushf
add
adc
fistpl
rcll
insl
lahf
add
xchg
xchg
xchg
mov
aam
jno
push
sbb
sbb
push
lods
into
xchg
pop
xchg
xchg
add
xchg
scas
mov
xor
or
mov
negl
adc
jne
call
nop
jnp
adc
mov
pop
leave
scas
mov
nop
xchg
test
push
dec
jge
out
push
addr16
mov
or
or
mov
pop
pop
movsl
xor
lds
fwait
push
pop
out
insl
cmpsb
sbb
dec
push
inc
mov
sti
xchg
bound
pop
lea
imul
scas
dec
cltd
dec
dec
nop
addr16
jb
push
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
inc
fs
test
in
roll
mov
adc
jmp
sbb
and
inc
mov
in
mov
xchg
pusha
mov
xchg
popa
ljmp
insb
lret
cmp
gs
jbe
mov
jbe
pop
cmp
mov
scas
test
aaa
mov
cmpsb
shl
push
aad
ret
inc
jle
jbe
add
filds
push
movsl
pop
ret
jnp
jp
sbb
xor
cmp
mov
xchg
push
sub
mov
xchg
cmp
push
dec
pop
enter
inc
mov
mov
adc
push
push
dec
gs
les
inc
stos
out
pop
sub
dec
sub
faddl
push
push
or
and
sbb
sub
mov
mov
sahf
outsl
mov
and
int
pop
mov
sub
ret
orb
mov
or
push
inc
cmpsb
gs
ret
hlt
inc
pop
or
arpl
scas
loopne
jne
rol
insl
arpl
ds
mov
or
pusha
outsb
and
das
mov
xchg
hlt
int3
adc
jne
dec
jle
fmuls
stos
xor
cmp
sub
jmp
add
and
dec
iret
mov
daa
sbb
stos
push
outsb
nop
push
xlat
rcr
jle
icebp
repz
scas
mov
popa
sbbl
andl
enter
mov
cs
and
in
dec
sbb
dec
fdivp
imul
js
shl
push
add
jnp
sti
pop
out
aam
pop
dec
jecxz
push
add
loope
loope
outsl
xchg
addr16
jne
inc
sub
aad
cmpsl
pop
xchg
and
xchg
xor
lret
into
sbb
xchg
and
cmc
mov
sub
mov
insb
insb
jno
jno
jmp
jbe
into
hlt
in
jmp
pusha
sub
popf
addl
xor
in
jne
and
repz
sbb
cmpsb
push
in
sub
mov
into
push
inc
mov
aas
sbb
add
adc
cli
arpl
xor
cmp
jnp
xchg
jecxz
setl
js
ljmp
inc
mov
in
dec
mov
loope
xor
pop
or
adc
insb
call
push
sahf
fsubr
xor
call
ret
and
adc
mov
rolb
jmp
add
fdivl
lock
xchg
pop
pop
push
sarl
jle
scas
jl
jle
add
push
aam
sbb
addr16
xor
push
std
mov
scas
and
mov
mov
out
xor
fadd
stos
repnz
pop
fwait
lds
jno
push
mov
ljmp
xchg
gs
test
sub
movsl
xchg
movsl
out
leave
mov
cmpsl
les
test
notl
pop
mov
jle
test
push
imulb
nop
add
rcll
or
jns
dec
jnp
enter
les
adc
nop
xchg
sbb
das
dec
lret
dec
pop
push
pop
sub
mov
mov
out
adc
out
ficomps
or
pusha
xor
push
xchg
push
pushf
les
and
inc
cs
inc
orl
mov
sarb
dec
sub
andb
jns
inc
or
mov
cld
xlat
mov
xchg
inc
jb
stc
psrlq
pusha
add
push
lea
popf
daa
mov
call
cld
jo
shl
clc
push
sbb
aad
fistpl
mov
js
and
push
xchg
mov
sub
push
mov
hlt
sahf
cld
pusha
fidivrs
outsl
pop
pop
mov
iret
adc
or
mov
gs
jns
add
rolb
push
rcr
mov
or
out
divb
mov
out
xchg
daa
jge
fdivrl
and
cmp
pop
mov
cmc
pop
sarl
cmpsl
lret
mov
xchg
adc
push
shll
inc
push
or
addr16
pusha
inc
int3
or
cli
lods
sbb
push
gs
or
inc
adc
push
subb
stc
rcr
in
inc
imul
hlt
std
pop
into
test
pop
lcall
mov
decl
in
pop
cli
xor
testb
mov
loopne
push
sbb
outsb
pop
loop
xor
pop
fsubrs
cmp
cmp
dec
mov
adc
xor
sahf
ljmp
or
call
hlt
ficoms
ret
sahf
mov
pop
jge
or
je
push
fwait
mov
stos
cs
sti
inc
adc
loopne
adc
mov
in
aad
inc
mov
roll
fstpl
push
aam
jecxz
dec
inc
and
jge
add
jg
ljmp
push
nop
iret
sub
adc
cmp
add
add
add
push
push
lock
outsb
dec
mov
inc
jmp
jle
scas
jl
jle
cld
sti
test
add
mov
loopne
fnstcw
lea
scas
jmp
lret
sbb
loop
aad
inc
mov
jl
mov
push
popa
xchg
add
adc
push
cmp
mov
test
stos
dec
std
enter
xchg
dec
or
dec
cmc
nop
cmp
dec
dec
aam
frstor
adc
jmp
lods
stos
cmp
testb
cmpb
add
les
sbb
jp
aas
mov
gs
add
mov
outsl
imul
js
aam
popf
int3
data16
icebp
mov
dec
test
sbb
inc
cmp
sub
lds
lds
call
cmpsl
jns
jae
adc
mov
mov
imul
cmpb
icebp
out
loopne
gs
mov
inc
rcl
dec
dec
adc
int3
mov
xchg
add
cmp
push
jecxz
dec
cmp
fiaddl
les
jg
or
cmp
scas
fdivl
jmp
sub
mov
je
cmp
sarl
bound
sub
leave
hlt
adc
push
inc
repz
sti
aas
fisttps
divb
jns
repnz
jecxz
add
jl
push
fptan
out
cld
stos
std
jnp
jo
add
mov
push
adc
xchg
out
lock
cmp
xchg
xchg
mov
mov
fdivs
fstl
fsubs
daa
ljmp
push
mov
bound
js
cmpsl
jp
mov
fwait
adc
cld
lret
cwtl
pop
frndint
xor
jbe
inc
mov
mov
push
les
inc
pop
ljmp
repnz
out
fbstp
lock
cmpsl
ss
xrelease
popa
pop
xor
cmc
movsl
nop
test
pop
pop
ret
mov
add
stc
cmpsl
clc
jns
mov
mov
out
sub
push
shl
out
mov
push
cltd
jle
mov
test
jecxz
jae
or
aaa
in
orl
pushf
inc
pop
cmp
clc
mov
repnz
xor
add
sbb
push
cmp
or
add
add
bound
movsb
or
dec
add
cs
mov
jl,pt
cmpsb
in
dec
pop
xchg
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
clc
jne
sbb
jle
jl
jle
and
loope
sbb
and
cmp
test
lea
aaa
enter
and
fsubrs
test
adc
adc
lods
adc
addb
stc
mov
sbb
popa
idivl
and
xor
sbb
sbb
shl
loope
div
dec
xor
xchg
arpl
add
je
lods
pop
leave
movsl
cltd
sub
scas
push
enter
das
mov
inc
jl
mov
adcb
pop
ss
pop
call
cmp
arpl
adc
jo
call
cwtl
fcomps
adc
sahf
ret
test
out
xchg
xchg
and
pushf
xchg
lods
jb
cmpsl
dec
cs
sub
mov
loopne
loopne
ficoms
inc
roll
nop
mov
mov
cli
lods
ljmp
xor
and
push
xchg
jbe
popf
in
icebp
stos
push
push
and
fidivl
fsubrl
sbb
push
mov
pop
inc
jno
mov
push
mov
call
and
popf
and
loope
and
pop
cmc
movl
mov
cmc
repnz
jo
mov
test
pop
addl
sub
xchg
sbb
cld
negl
mov
fadds
dec
je
mov
rep
addr16
jbe
lock
mov
inc
and
cld
out
push
xor
pop
inc
leave
rcll
rorl
imulb
sub
stos
aas
pop
push
cmpsl
sbb
jmp
sbb
xor
cmp
cld
mov
in
enter
dec
in
ja
jns
popa
sub
daa
pop
inc
push
dec
sbb
adc
pushf
sbb
dec
sub
dec
adc
daa
imul
mov
leave
xchg
iret
sbb
inc
lahf
in
or
mov
clc
arpl
add
inc
psrlq
pop
out
cltd
addr16
repnz
pop
rcll
sbb
and
adc
aaa
xchg
inc
call
dec
cmp
jno
cli
shlb
dec
jmp
push
imul
out
cmpsl
lock
mov
scas
cli
cld
adcb
cmpsl
add
in
sbb
ja
mov
daa
xchg
repnz
jge
shrb
mov
dec
sbb
inc
adc
xchg
int
neg
sub
cmp
incl
ljmp
dec
dec
inc
dec
xchg
adc
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
pop
fbstp
inc
jle
scas
jl
jle
sub
inc
adc
pop
clc
fwait
mov
lret
add
repnz
xchg
scas
mov
push
iret
adc
sahf
loop
inc
push
mov
xchg
adc
push
adc
cs
mov
fs
mov
pop
xor
lock
sbb
cmp
out
fisttps
xor
fstl
daa
orl
xchg
cld
es
testb
in
arpl
outsb
int
ret
push
lret
shlb
lods
pushf
or
fxch
in
fdivs
push
mov
inc
cmp
push
je
pushf
incb
ss
jge
sar
cmp
scas
xor
push
cwtl
mov
inc
adc
fmull
xchg
mov
dec
je
mov
mov
loop
push
clc
dec
push
xor
adc
ret
pushl
sti
mov
xor
mov
mov
jns
push
repz
jl
pushf
rolb
scas
pop
mov
push
jno
pop
outsb
xchg
xchg
je
mov
stos
pop
push
sub
pushf
inc
sahf
mov
in
pop
push
cmp
xchg
mov
std
out
outsb
jo
subb
jmp
mov
xchg
out
mov
loopne
and
adc
roll
add
test
or
sub
pop
inc
addr16
out
arpl
pop
pushf
in
out
xor
fisttpll
and
dec
mov
orb
mov
xchg
shrb
inc
faddl
pop
loope
dec
sti
fnstsw
fldl
and
movsl
clc
dec
fcmovnbe
push
loope
xchg
cmp
loop
ljmp
jae
aad
lods
pushf
rorl
ss
fcoml
in
pusha
bound
dec
rol
push
int
daa
adc
or
into
addr16
sub
dec
push
xor
jnp
sbb
mov
add
movsl
xor
push
es
xor
es
push
push
scas
rclb
iret
add
xchg
call
add
adc
fwait
lock
mov
out
sub
mov
mov
pop
call
jp
mov
xchg
mov
dec
ficoms
xchg
and
mov
pop
in
repz
jne
add
stos
add
pop
lahf
ret
es
xor
imul
ficomps
adc
and
push
test
icebp
fildl
pop
sub
jmpw
pusha
pop
push
stc
out
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
addr16
ljmp
jg
jle
movl
mov
mov
mov
mov
mov
subb
add
and
dec
mov
jle
cs
pusha
lret
bnd
push
es
mov
and
cld
in
daa
into
push
lock
stos
add
xlat
ror
inc
sub
leave
fcmove
mov
mov
sub
or
arpl
inc
pop
and
or
cwtl
push
mov
hlt
data16
xchg
stos
mov
pusha
mov
ficoms
dec
std
pop
dec
pop
mov
jno
inc
movsl
scas
icebp
pop
mov
mov
inc
in
lods
mov
loope
loope
in
popf
pop
fwait
sub
and
xor
xchg
movsb
xor
pusha
mov
push
pop
dec
clc
mov
push
sar
jp
nop
scas
mov
mov
loopne
adc
into
mov
adc
es
int
nop
ret
inc
dec
outsl
add
and
xor
sar
sarl
jge
scas
sub
enter
mov
pop
push
sub
pusha
xor
arpl
xlat
mov
xor
inc
rclb
cs
in
mov
pop
lcall
jl
lea
adcb
sarb
xor
cmp
add
lods
dec
inc
test
mov
popf
sub
stos
pop
das
mov
xlat
push
shrl
outsl
adc
cmp
cwtl
cmp
cwtl
or
or
push
imul
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
out
or
inc
sub
jle
movsb
jg
jle
push
push
jl
jno
cli
std
test
push
lods
mov
mul
mov
sti
es
loopne
incb
stos
leave
call
out
scas
or
insl
xor
or
jp
mov
mov
inc
xchg
xor
push
xchg
les
cmp
pop
enter
xchg
ds
in
mov
mov
dec
cli
adc
inc
clc
loop
sbb
fildl
gs
ss
shlb
mov
sahf
add
aas
dec
mov
fsubs
jbe
fists
mov
imul
push
push
fildll
das
iret
fistps
or
adc
cmp
lret
xor
and
int
ja
cmp
pop
aam
icebp
arpl
mov
jo
cmp
jl
or
jnp
jno
push
cli
in
push
inc
gs
jbe
lret
ja
loope
adc
icebp
xchg
repnz
inc
push
shlb
inc
ret
daa
rclb
xchg
cmp
jne
adc
insl
negb
iret
fsubrs
lods
leave
orb
pop
cmc
les
mov
rclb
sti
add
sbb
push
cmp
std
in
adc
dec
jmp
sti
ss
sub
cmp
dec
mov
call
xor
ljmp
lahf
mov
clc
cwtl
push
mov
cltd
fst
jl
sub
jl
cmp
or
imul
cld
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
mov
roll
add
movsb
fnstsw
cli
or
xchg
mov
pop
mov
jne
push
or
mov
xor
gs
xchg
lret
dec
pop
cltd
ficomps
mov
push
shlb
and
push
mov
iret
loope
les
ret
mov
inc
cmp
mov
outsb
stos
mov
inc
and
mov
mov
ljmp
insl
pop
push
or
out
test
shl
shrl
mov
pop
cmpsb
fwait
sub
arpl
xor
pushf
stos
rcll
out
rep
push
fnstcw
ja
and
pop
mov
pushf
inc
mov
clc
xchg
sub
and
xor
les
cld
pop
imulb
jecxz
lar
push
int3
jp
incb
inc
inc
mov
inc
mov
mov
ret
pop
push
xor
int3
in
cmp
call
add
add
push
pusha
in
jle
lcall
loope
add
add
int
push
mov
inc
repnz
push
add
xchg
dec
rolb
pop
mov
stos
out
fcom
mov
mov
je
or
shll
or
or
addr16
cmc
jnp
das
lret
sub
fucomp
shrb
in
lahf
daa
cmp
test
lock
inc
xchg
xor
es
dec
mov
pop
subb
outsb
mov
mov
leave
push
sub
sub
mov
mov
lods
push
xor
test
dec
cld
mov
xchg
scas
loopne
cmp
lods
fistpl
inc
out
daa
clc
cmp
into
mov
add
adc
xor
mov
mov
push
stos
dec
xor
insl
adc
sub
pextrw
adc
inc
mov
jle
mov
loop
std
out
jae
fldenv
inc
pushf
or
mov
cwtl
cli
ds
cs
insl
adcl
add
add
add
mov
push
sbb
roll
add
fistpll
pop
mov
pusha
adc
scas
jno
push
mov
add
xchg
rclb
push
or
andl
pop
and
nop
repnz
popf
jo
sub
sbbb
movsl
sbb
test
mov
shrl
jecxz
sbb
stos
adc
lods
cmp
addb
mov
xchg
nop
fldl2t
inc
movsb
iret
rcll
jb
ds
stc
cld
jbe
add
pop
sbb
fstps
aam
mov
push
sub
jmp
in
cmp
fs
sbb
add
inc
sbb
jns
mov
adc
into
push
xchg
pop
sub
icebp
pop
bound
call
pop
lods
push
mov
jnp
sbb
or
jns
mov
inc
fimull
inc
mov
lock
sbb
push
mov
pop
xchg
rcrl
inc
cmc
inc
xchg
adc
cmpsb
mov
dec
imul
add
subl
roll
lahf
pushf
mov
jmp
add
add
jge
sbb
clc
in
jl
or
scas
sbb
inc
mov
imul
push
sbb
xchg
push
pop
fcmovu
in
mov
xchg
lcall
mov
fcoml
lds
and
pop
nop
out
cmp
add
out
jb
fisttps
cmp
outsb
popa
movsb
popf
sub
jge
mov
and
bound
sti
cmpsl
adc
in
sub
push
cmpsb
pushf
fisttpl
das
pop
ret
cmp
mov
adc
rcl
stc
mov
xchg
fucomp
scas
cmpsl
sbb
scas
movsb
lahf
sbb
mov
repz
cmp
pop
dec
test
xlat
insb
jbe
jmp
xor
push
leave
shlb
mov
xchg
ss
sub
lahf
sar
jmp
int3
ds
xchg
aam
and
stc
fisttpl
ret
fldenv
pop
pop
lods
cmpsb
push
cmp
lods
push
or
popf
cmp
sbb
lahf
fwait
or
add
movsl
sti
prefetcht0
jne
fiadds
add
add
inc
or
pop
dec
or
jge
div
aad
add
fstl
dec
aas
push
push
fwait
sbb
pop
movsl
out
or
scas
jo
push
sbbb
scas
fimull
and
in
iret
jge
jne
scas
imul
dec
iret
fisubl
and
cmp
push
mov
dec
ds
mov
fsubs
or
jp,pn
adc
stc
mov
in
rcl
fucomp
divl
aad
cmpsl
addl
lret
push
pop
mov
xor
ss
pop
cmp
fisubrl
ja
movsb
in
mov
or
adc
lods
inc
cmp
xlat
push
fcompl
jle
jge
mov
lahf
in
sbb
out
xchg
imul
sbb
test
in
cmpsb
cmc
aas
mov
mov
xlat
push
push
cld
orb
int3
lock
inc
and
dec
xchg
rclb
sub
adc
test
mov
hlt
ds
aam
adc
ljmp
add
jg
cmc
insl
cmc
out
lcall
enter
xchg
lock
cmc
add
add
dec
aad
pop
jmp
cmp
ficoml
es
enter
xor
aaa
stc
push
outsl
or
jmp
in
insb
mov
call
insb
jg
pop
lods
sahf
scas
push
push
je
movsb
mov
jp
scas
iret
ja
mov
loope
lea
xor
jo
push
pushf
cmp
jns
jge
mov
or
pop
pop
xchg
fcmovnu
jl
sarl
stos
rorb
inc
pop
jae
scas
sbb
jbe
dec
inc
adc
sbb
jo
popf
inc
lods
xor
push
lods
pop
test
fstl
and
std
int3
enter
cmpsl
sub
inc
cltd
cmpsl
stos
test
xor
inc
mov
mov
sti
mov
cs
inc
mov
or
stc
sbb
push
mov
ljmp
mov
xor
fsubrs
dec
mov
pop
addr16
mov
mov
cwtl
dec
dec
and
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
mov
xchg
xchg
in
mov
add
int3
xorl
xchg
add
add
and
jnp
repnz
cltd
push
sarl
aam
inc
daa
call
mov
pushl
jle
mov
sub
mov
mov
ret
adc
add
and
sbb
pop
jbe
push
push
ljmp
sub
orl
jno
not
and
dec
je
movsl
cli
cld
ds
inc
inc
mov
mov
fnsave
mov
sub
stos
adc
or
nop
adcb
xchg
and
cmpsb
je
xor
push
mov
les
aaa
je
idiv
cmp
sub
and
jnp
pop
jmp
or
lahf
cmp
paddsb
fistl
cwtl
out
out
xchg
lahf
test
push
mov
outsb
imull
jecxz,pn
int
inc
mov
add
or
and
scas
sti
jle
pop
push
pop
jle
xchg
add
xor
jnp
pop
mull
mov
pop
insl
jecxz
cmp
cli
jb
pop
out
and
dec
popa
jns
and
xor
dec
mov
sub
mov
notb
xor
scas
adc
pop
sbb
lret
ret
imul
adc
aam
and
mov
fwait
mov
sti
mov
cmp
mov
rorl
imull
dec
xchg
adc
jbe,pn
mov
lea
subl
pop
out
cltd
inc
mov
xlat
shrl
or
aaa
movsb
sbb
and
insb
stos
xor
push
pop
es
push
pop
adc
xchg
loope
hlt
mov
xorl
push
mov
cmp
cli
fistl
push
es
fadds
cmp
int3
sbb
lock
pop
jge
push
fisttps
iret
stos
dec
push
dec
sbb
pop
andl
and
add
add
negl
arpl
add
mov
fiaddl
add
mov
out
aad
ficoms
bound
cli
push
add
arpl
ret
dec
iret
in
jno
sbb
pop
gs
xchg
out
sbb
cltd
lret
mov
mov
dec
lds
or
out
dec
add
mov
pop
inc
js
and
repnz
ret
inc
or
jp
inc
lea
cmpsb
stos
jo
shll
mov
push
ljmp
psrad
sbb
xchg
mov
cmp
scas
sbb
mov
in
je
cltd
stos
out
repnz
ja
xchg
xchg
cwtl
loope
sub
mov
es
push
addr16
mov
out
mov
jle
adc
cmp
xchg
inc
add
add
xor
mov
pop
jg
scas
es
enter
and
mov
aad
insl
xor
sahf
jae
add
xor
push
jl
jle
insb
out
adc
fildl
add
test
cmp
push
enter
pop
push
ficomps
xor
rcrl
pusha
ss
lcall
loopne
mov
sbb
jecxz
push
or
lods
mov
icebp
mov
push
inc
mov
test
sbb
push
inc
jmp
pop
vcvtsi2sd
push
inc
mov
insb
adc
add
scas
dec
add
lret
xchg
jo
cmp
jo
jno
cmpsl
pop
xor
cmp
and
cmpsb
imul
hlt
stos
mov
mov
sub
add
in
outsl
push
push
outsl
inc
dec
jnp
xor
jle
in
hlt
sbb
pop
lea
mov
lcall
mov
pushf
cld
adc
mov
mov
clc
xor
scas
stos
sub
dec
mov
sbb
xor
adc
scas
inc
fidivs
or
push
inc
popf
xchg
hlt
int
xlat
mov
inc
cmp
out
cld
mov
adc
in
xor
adc
push
faddl
add
pop
adcb
arpl
xchg
xchg
arpl
out
pop
mov
add
arpl
enter
sahf
fs
or
ja
test
jae
popa
cltd
or
mov
xor
xchg
insb
cmc
insl
icebp
and
cmp
lods
and
mov
je
addr16
xchg
xor
sub
xor
jp
xor
mov
pop
jbe
xchg
add
repnz
adc
shll
cmp
sbb
xor
cmp
mov
fcom
repnz
dec
jle
pop
adc
jo
mov
adc
call
mov
or
and
jge
adc
cwtl
mov
ljmp
ss
shll
hlt
insl
jge
hlt
in
inc
inc
add
pop
ss
outsl
inc
mov
lcall
mov
push
sbb
pop
xor
in
lret
gs
xor
mov
adc
cmp
jl
lahf
js
cmp
and
xchg
jge
mov
add
aaa
data16
jne
mov
lcall
add
add
js
mov
iret
dec
or
aas
aaa
xchg
fldt
jae
cwtl
sbb
mov
and
int
loope
xchg
outsl
adc
stos
lea
in
cmp
mov
icebp
push
hlt
popf
xor
les
jae
imul
xlat
ljmp
cmpsl
je
jl
add
and
cmpl
xchg
xor
push
arpl
or
ljmp
pop
mov
or
adc
sbb
in
jmp
adc
pop
xchg
das
xlat
aad
mov
fists
push
ret
mov
imul
stc
dec
gs
in
sub
cmc
ret
pop
xchg
lods
jle
xchg
adc
rcr
mov
ljmp
outsb
cmc
out
iret
dec
popa
pop
sbb
arpl
iret
fbld
or
mov
pop
xchg
add
add
add
jnp
sti
xchg
lahf
mov
out
sbb
add
add
cld
mov
int3
sbb
jnp
dec
and
in
ds
pop
push
mov
stos
test
ficoml
cmp
adc
mov
movsl
push
mov
daa
dec
push
enter
inc
das
test
xor
gs
dec
lods
add
test
je
out
xchg
mov
push
cmpsb
dec
push
ja
push
xchg
add
cli
inc
add
jnp
cmpsb
push
loop
shrb
or
push
out
jmp
xor
and
insb
and
outsl
push
jmp
mov
adc
pushf
xor
cmpsl
mov
mov
jle
mov
lret
jb
icebp
adc
or
xor
push
icebp
cmp
fsubrs
hlt
mov
sti
imul
insb
pop
jg
les
xor
adc
pop
call
cmp
mov
xchg
retw
push
add
pop
adc
ss
lret
sbb
sti
push
mov
add
add
pop
sarl
mov
gs
add
add
sti
adc
cs
pop
shll
dec
mov
mov
mov
stos
sti
int3
lea
or
adc
scas
sarb
cmp
jnp
fs
sub
cld
fmull
out
mov
jo
mov
out
sbb
add
pop
shlb
sarl
dec
pop
lods
out
pop
or
inc
je
add
jle
sbb
cmpl
sti
dec
dec
jl
add
fsubrs
jp
movsb
jg
fs
test
std
lock
xchg
jns
sbb
jae
mov
adc
sbb
mov
out
fs
mov
xor
js
pop
jp
out
pop
adc
inc
faddp
lds
inc
cmpsb
or
xor
cwtl
push
mov
sbb
mov
mov
pop
jo
orl
rcrl
stos
sbb
pop
and
jecxz
ret
adc
scas
and
add
add
repz
std
repz
mov
add
add
sbb
or
push
sti
or
pop
subl
cld
mov
pusha
insl
popa
jnp
mov
mov
xor
cs
or
xor
sub
in
or
or
sub
cmp
mov
idiv
jle
scas
cli
rcrb
aad
sub
xlat
adc
xor
test
push
cmp
mov
clc
adc
or
pop
or
xchg
push
lods
subb
cmp
jmp
and
add
lret
adc
dec
cmpsb
fcoms
lods
nop
jns
inc
leave
jno
hlt
push
std
mov
jmp
xor
popa
data16
pop
adc
lods
sub
setae
mov
in
inc
mov
inc
xorb
jp
push
jmp
lahf
mov
clc
pusha
inc
sbb
and
lods
frstor
stos
push
dec
add
add
lock
cmp
arpl
je
outsl
ret
lcall
add
mov
ja
sti
push
mov
mov
sub
push
and
test
jno
ljmp
insb
jnp
in
cmpsl
mov
imul
sbb
jge
aam
dec
mov
out
adc
adc
ret
movsl
mov
sbb
jno
and
sahf
faddl
lcall
lock
push
sahf
or
and
scas
cld
movsb
out
fwait
outsb
jmp
mov
lret
xchg
or
add
shl
mov
add
pusha
inc
pop
jp
stos
add
jl
scas
and
enter
push
shl
or
aas
mov
roll
xor
ljmp
cmp
push
mov
ja
pop
fidivs
hlt
adc
iret
outsb
ljmp
out
adc
mov
test
or
lock
mov
push
mov
insl
lcall
mov
inc
sub
cwtl
xchg
popf
sub
add
add
addl
call
fcoml
popf
dec
add
or
loopne
sub
fcoms
rcll
mov
out
das
jae
jmp
add
sub
xchg
mov
ss
sbb
push
stos
icebp
adc
xchg
decb
and
jns
push
std
cmc
nop
xor
mov
jno
dec
xchg
add
repnz
dec
sub
push
xor
test
jp
cli
mov
movb
pop
mov
imul
cli
jns
jae
sub
testb
inc
sub
xor
mov
ret
xor
xchg
pusha
sbb
lea
and
rcr
loope
repnz
push
jae
add
and
pop
insb
or
divl
add
arpl
pop
lahf
add
fwait
addr16
repz
jge
pop
jo
add
lret
xchg
in
mov
incl
shl
xchg
lret
jecxz
add
xor
int
mov
xor
inc
mov
or
into
stos
adc
cli
movsb
lods
or
adc
and
sbb
in
jl
movsb
cltd
sub
jecxz
out
stos
cmp
dec
xchg
add
cmp
test
pop
adc
in
sbb
or
rcl
into
imul
pop
push
dec
test
xchg
mov
dec
out
push
bound
sub
ljmp
in
mov
int
popa
data16
rolb
arpl
mov
push
arpl
cltd
cmpsb
sbb
insb
adc
ret
fwait
jns
repnz
fcmovne
inc
dec
dec
enter
xchg
popa
movsl
subb
addb
cmp
jb
aas
cmp
mov
aam
rol
inc
pop
sbb
and
test
loop
fwait
clc
out
outsb
cs
add
push
mov
xor
xor
adc
in
mov
xor
jmp
push
rolb
mov
cld
dec
push
sarl
aad
xchg
add
inc
mov
in
negl
sub
movsb
out
add
in
add
lea
mov
or
mov
iret
cmp
or
mov
iret
or
mov
inc
aad
into
test
push
les
cs
add
or
mov
jno
dec
sbb
aas
cmpsl
ss
imul
out
and
push
mov
sub
adc
aam
xor
mov
jecxz
mov
or
bsf
enter
mov
xchg
add
fbld
mov
int3
and
mov
sti
sbb
mov
sub
dec
cmp
dec
cmp
push
into
cmp
in
adc
push
test
mov
loop
je
jae
add
mov
xlat
lds
mov
enter
inc
cmp
or
rcrl
push
dec
out
jl
insb
fldt
jno
mov
sub
out
movl
adc
add
add
mov
stc
dec
push
fsubl
in
add
add
or
js
pcmpeqb
mov
hlt
cmc
cmpl
inc
shll
sbb
mov
sub
jo
in
sbb
lret
sbb
sub
mov
push
fisubrs
mov
mov
repz
test
mov
jo
orb
jmp
int
cmpsl
pop
addb
mov
pusha
add
adc
gs
test
lcall
stos
lret
or
lret
fdivrs
pop
jno
jne
in
mov
or
xchg
xor
or
in
xor
mov
lahf
lahf
fstps
and
sub
add
into
es
adc
nop
imul
idiv
xchg
or
clc
not
jne
adc
sub
dec
xchg
ljmp
and
leave
int
add
cmp
mov
push
push
push
mov
clc
inc
out
add
mov
xor
inc
lahf
xor
fnstcw
decl
xor
dec
ds
loopne
pop
lock
mov
add
mov
sub
dec
xchg
sub
ja
mov
pushf
inc
pop
testl
out
insl
movsl
mov
and
fnstenv
int
xorb
imul
xlat
and
add
cmpsl
push
sub
lea
cmpsl
or
in
test
jno
cmpsl
movl
jl
and
add
rorl
add
xlat
sti
mov
rcll
lret
lahf
insl
and
lcall
adcl
mov
es
sahf
xchg
nop
cmpsb
cmpsb
mov
arpl
imul
and
or
sub
pop
test
pop
xor
jnp
pop
xchg
dec
jp
inc
push
mov
sarl
ja
loop
dec
arpl
push
mov
test
add
out
repnz
add
pop
lcall
les
push
fdivrs
inc
out
add
out
arpl
adc
push
xchg
xor
xchg
outsl
popf
notb
add
inc
xchg
gs
lea
mov
mov
adc
cmc
add
jle
dec
scas
xchg
arpl
ds
pop
movsl
and
jae
sahf
mov
sbb
je
fabs
lret
sbb
and
cltd
fstl
in
xor
cmc
shlb
int3
or
mov
dec
sub
mov
push
sti
push
jbe
push
call
pop
dec
adc
jl
mov
ljmp
dec
sbb
pop
test
mov
fucomp
in
xor
cmpsl
add
jge
mov
int
xor
mov
popf
mov
fwait
icebp
add
cmp
sub
xchg
push
jnp
sub
movsb
push
enter
adc
in
movsl
xchg
and
sbb
and
ljmp
add
mov
push
decl
shlb
add
jbe
aaa
xor
inc
ret
ljmp
jb
test
bound
cld
cmp
das
roll
out
fisttpll
fdivrl
add
pop
arpl
shrb
insb
and
sahf
leave
pop
mov
and
test
xchg
addl
pop
add
jnp
xor
or
push
push
loop
jns
leave
into
mov
lret
dec
lcall
lock
push
loopne
sub
sub
es
sub
jge
lcall
sbb
adc
xlat
cbtw
insl
insl
out
loopne
in
jg
add
or
jl
adc
dec
mov
adc
mov
or
push
push
or
dec
test
jb
ficompl
sub
sub
shrl
inc
or
and
cli
andb
dec
cmpsl
bound
divl
daa
jb
mov
repz
mov
sub
add
add
jmp
in
push
sub
mov
add
sbb
add
and
push
shr
cmpsb
das
mov
sub
inc
pop
xor
push
xchg
inc
xchg
push
xchg
in
and
jnp
cmpsl
mov
xor
roll
xchg
xorl
movsb
cmp
xorl
call
popa
xor
arpl
jg
fistpl
ljmp
push
pop
push
jecxz
jecxz
jbe
xchg
scas
mov
outsb
push
sub
add
cmpsl
lock
outsb
and
mov
push
push
lahf
xor
mov
fistpll
ret
cli
jl
fbld
adc
loope
pop
scas
clc
sub
loop
push
push
sub
dec
add
cltd
xor
stos
lcall
jne
int
fistpl
cli
insb
cs
mov
jle
ss
cmc
data16
pop
clc
int3
mov
fisubl
test
add
add
outsb
xor
mov
lcall
ljmp
push
pushf
scas
cltd
jae
aas
pop
mov
scas
pop
rorl
or
mov
pop
pop
mov
out
movb
mov
js
push
insb
cmp
xor
stc
push
add
jno
push
int
and
cwtl
cld
cli
pop
data16
movsb
cmp
repnz
shlb
mov
or
jmp
aaa
adc
xchg
sub
popf
repnz
xchg
cmp
or
insb
fsub
pop
adc
je
jae
fcompl
inc
or
cs
push
int3
test
add
cs
jmp
pop
rcrl
pop
dec
sbb
sarl
jnp
ss
push
and
cwtl
sbb
add
test
mov
scas
xchg
ret
popa
lea
cmp
std
cli
inc
add
dec
xchg
add
push
mov
pop
js
pop
cmp
fcoms
mov
mov
and
ljmp
neg
adc
add
add
inc
ror
lock
jnp
xor
xchg
inc
es
pop
jmp
add
push
mov
outsl
mov
sbb
in
iret
loop
out
xchg
mov
movsb
add
daa
cmp
dec
bound
xchg
lcall
cmpsb
push
jg
hlt
test
loopne
lods
movsl
cmp
outsb
jne
dec
push
add
mov
data16
stos
mov
pop
hlt
pop
adc
push
mov
insb
ror
fcomps
xchg
adc
add
pop
mov
orb
mov
stc
outsb
sbb
jbe
imul
pop
test
push
aas
jno
push
mov
cmp
dec
mov
pop
frstor
mov
cmp
xchg
push
mov
shl
and
inc
push
add
imul
or
lahf
push
pop
cmc
xor
jmp
scas
insl
clc
test
mul
push
and
lock
int
inc
xor
js
repz
pushl
lret
or
ljmp
pop
lods
fwait
clc
sub
insl
sar
xchg
adc
insb
sbb
ss
hlt
hlt
add
add
repz
fisubs
fsts
pop
in
add
add
mov
push
xor
out
jl
ljmp
and
fisubl
jp
and
add
sbb
add
add
mov
test
stc
or
scas
jmp
inc
pop
test
or
bound
lahf
lret
cli
push
pop
or
outsb
test
mov
out
add
add
cmp
aam
call
add
adc
ficoml
mov
xor
push
fstpt
filds
dec
cli
jle
inc
push
ret
cmpsb
jmp
cltd
shrl
popa
push
push
sarb
in
out
es
aad
out
push
insb
stos
ds
imul
mov
or
and
mov
inc
or
pop
cmp
enter
test
cwtl
jg
pop
movsb
negl
sbb
loope
repnz
jo
rorl
gs
bts
sbb
cwtl
mov
out
sbb
loope
sbb
arpl
add
add
mov
test
or
roll
imul
daa
mov
movsl
mov
add
flds
xor
fmull
sti
inc
dec
xor
aaa
outsb
sahf
mov
sub
push
sub
jg
mov
xor
mov
ss
loopne
lahf
jmp
orl
test
in
outsb
mov
lret
jp
dec
repnz
stos
pop
mov
and
mov
mov
cmp
xchg
les
out
dec
pop
sbb
out
or
mov
adc
xchg
sub
out
mov
xchg
push
outsl
xchg
ret
xchg
daa
and
ja
push
jb
fxch
insb
scas
pop
fistpl
push
add
jo
inc
fistpl
lret
sbb
fcmovb
shll
mov
mov
in
int3
dec
cmp
xchg
je
enter
daa
test
jge
adc
mov
xor
adc
fidivrs
or
push
popa
nop
adc
mov
shrl
cmc
scas
sub
mov
push
add
add
shl
popf
into
jb
sub
int3
push
jbe
mov
pop
in
xchg
lcall
mov
mov
xchg
cmp
push
sahf
andl
es
pop
cmp
aas
mov
jns
jne
insb
mov
fcmovne
or
cmp
rorb
cmp
push
or
xor
pop
pop
lcall
outsb
sbb
ret
dec
loop
pop
mov
xor
inc
push
push
push
andl
call
mov
adcb
dec
je
mov
mov
rcll
jo
repnz
mov
in
jne
orl
in
xchg
mov
imul
pop
fnstenv
notb
mov
test
jne
jns
ret
pop
fdivr
jp
xchg
fstl
sbb
mov
out
rcr
add
addr16
ror
fucomi
bswap
cmp
leave
jbe
add
add
pusha
rorb
cmpsb
mov
hlt
cmp
add
add
jne
into
pop
fmull
and
call
ds
js
jne
adc
jns
fbstp
jnp
push
add
mov
xchg
sub
cwtl
push
mov
xchg
mov
rclb
dec
icebp
xchg
addb
pop
sub
sbb
push
dec
lahf
sbb
pop
sbb
jns
std
movsl
push
jmp
mov
or
lahf
into
mov
repnz
sub
pop
jmp
movsb
addr16
jl
and
pop
xor
lock
or
xchg
cmp
in
daa
cmc
leave
ss
out
inc
jge
test
call
jle
jle
std
and
xchg
jns
or
mov
xor
fcomps
and
inc
xchg
cld
sbb
add
pusha
or
test
les
icebp
mov
cmc
nop
pop
sbb
xchg
mov
arpl
icebp
decb
sbb
hlt
repnz
cmp
andb
or
out
popa
movsb
mov
repz
add
gs
testl
subb
lock
add
adc
dec
and
dec
cwtl
dec
xchg
push
cld
mov
pushf
cmp
add
repnz
jno
enter
jno
or
out
test
xchg
and
nop
and
pop
mov
rcll
or
iret
xchg
aad
push
dec
aaa
movsl
inc
hlt
leave
fistps
add
adc
nop
push
out
sbb
subb
and
bound
push
jp
add
outsb
nop
dec
dec
jnp
inc
int3
mov
add
js
sub
imul
sub
cmp
push
mov
cmp
scas
push
data16
dec
mov
and
xchg
les
adc
pusha
mov
cmp
sbbl
mov
js
pop
ljmp
ficomps
movlps
jnp
xchg
or
int
sbb
sbb
mov
repz
or
sbb
mov
add
add
xchg
mov
mov
pop
das
fsubrl
add
add
jge
xchg
popa
and
sti
mov
test
ja
shrl
leave
in
cltd
jmp
pop
push
push
add
in
push
jb
cmp
xchg
and
test
and
lock
or
in
xchg
pop
or
jecxz
insb
sti
lcall
adc
ficoml
inc
popa
lds
pop
inc
add
pop
out
test
xchg
xchg
pop
and
pop
or
mov
jp
icebp
pop
or
aam
lret
movsb
inc
sbb
cmp
repz
les
pop
dec
jne
nop
xchg
adc
cwtl
push
cmc
mov
pop
js
jns
push
rorb
or
jbe
sbb
mov
jne
movsl
push
insb
cs
loope
rcr
mov
mov
out
sub
in
scas
push
inc
js,pn
mov
cmc
dec
xchg
out
mov
mov
roll
or
dec
pop
std
or
add
add
fucomi
xor
lods
mov
repnz
add
dec
pop
sarl
adc
mov
xchg
addr16
add
and
push
inc
orb
fisubs
pop
inc
sbb
in
cwtl
cmp
xchg
pusha
add
xor
jl
adc
mov
cmp
push
sbb
cli
ja
or
push
ja
mov
ret
push
jmp
scas
jbe
ss
mov
jecxz
mov
imul
mov
icebp
jb
rol
add
cmc
int
rclb
call
jnp
jg
add
add
dec
gs
mov
addb
and
mov
lods
divb
dec
jecxz
out
bound
sub
test
call
stos
dec
aad
xchg
pop
mov
mov
test
lret
adc
aad
popl
dec
push
stos
ror
push
inc
ljmp
jbe
xor
hlt
ljmp
lcall
dec
add
add
push
inc
pop
jns
aas
loopne
sub
repz
add
jnp
mov
scas
hlt
push
cmova
add
push
add
fldcw
add
out
mov
and
cmpsl
test
jmp
cmc
xor
push
mov
xchg
xorb
xorl
lahf
mov
cmp
test
aam
cli
mov
je
fs
movsb
push
push
out
bnd
mov
mov
lods
test
xchg
fdiv
mov
xlat
in
jmp
sahf
test
dec
push
mov
push
push
into
scas
pop
push
cmp
scas
inc
inc
leave
loop
add
test
popa
rcll
ror
call
orb
mov
sub
bound
add
rorb
dec
in
pop
int
cmp
mov
js
mov
popf
or
sahf
je
cmp
enter
je
mov
jp
mov
clc
pop
sbb
add
add
jnp
mov
testb
xchg
add
add
add
pop
inc
sti
stc
ror
into
loopne
xlat
mov
testl
xchg
mov
push
std
xor
push
jmp
sub
roll
add
fistpll
lret
cmc
adc
push
lods
movsb
add
add
xor
in
adc
xchg
lret
cmp
out
cmp
mov
jp
test
int3
lret
ds
cmp
xor
notb
sbb
cmp
xchg
incb
in
mov
divb
adc
inc
sbb
adc
fnsave
lret
jl
adc
xor
pop
lea
mov
je
rorl
xor
cmp
mov
rcll
inc
mov
test
jmp
movsb
cmp
into
jge
sub
dec
adc
mov
xchg
stos
lock
sub
sub
repz
packssdw
pop
dec
lods
fiaddl
add
imul
gs
jg
mov
add
add
aas
lcall
sub
dec
sub
mov
stc
inc
mov
push
loop
fidivs
imul
fstpl
and
xchg
mov
push
leave
push
out
xacquire
sarb
xchg
dec
out
es
push
push
xchg
js
mov
andl
add
gs
push
and
push
jp
adc
dec
inc
cmpsl
cs
xor
stos
ljmp
or
pop
stos
outsb
rorb
xor
outsb
add
insb
fs
pop
sbb
mov
fcomip
pop
ret
sub
and
sbb
xor
or
mov
mov
shlb
push
cmpsb
xor
cmp
sarb
jp
xchg
mov
nop
sbb
mov
xor
mov
jb
inc
call
stos
addr16
cmp
push
lock
fwait
sub
sbb
in
adc
inc
lea
add
fdiv
mov
int3
dec
test
add
adc
fiadds
mov
pop
lock
mov
jmp
cmc
rolb
lea
cmp
repz
fwait
push
cld
fs
ret
mov
mov
jnp
push
loop
aaa
fimuls
or
int3
inc
jle
mov
lret
xchg
notl
jge
clc
push
addr16
in
negl
rcr
jb
lods
fcomp
mov
shll
mov
movsl
dec
popa
mov
nop
andl
xchg
es
rorb
inc
mov
inc
arpl
pop
mov
push
shll
xor
sub
xor
mov
adc
out
int
aad
pop
movb
dec
shrb
push
push
gs
jnp
sti
fisttps
enter
out
cwtl
cmp
fs
add
jnp
mov
cmp
movsl
rcll
xchg
test
sbb
add
test
mov
fisubl
clc
mov
add
add
xchg
adc
inc
sbb
arpl
arpl
loopne
inc
out
popf
and
xchg
adc
pop
mov
jmp
out
dec
or
xorw
mov
sbb
outsb
jnp
loop
mov
pop
scas
je,pn
pushf
dec
leave
adc
icebp
cmc
pop
mov
shll
divl
fsubrl
mov
aam
jmp
sub
and
popa
push
push
mov
ret
pusha
fidivrl
sbb
jecxz
test
sbb
int
add
mov
aaa
cmp
in
aas
dec
adc
sbb
dec
fiadds
arpl
xor
pusha
and
ror
outsb
ds
add
ss
mov
push
nop
add
xchg
xor
cmp
adc
dec
test
insl
das
xorb
push
add
push
rcr
cld
jno
bound
jbe
loop
inc
out
mov
repz
add
push
pop
push
jmp
rol
xor
iret
lcall
add
and
ret
repnz
not
sbb
push
insb
mov
xchg
inc
and
sbb
and
xchg
sbb
xchg
bound
and
mov
mov
adc
scas
or
cmp
sbb
adc
stos
fs
xor
iret
imul
test
mov
sbb
ss
lret
loopne
in
cmpb
es
imul
loopne
inc
jl
inc
xchg
push
lcall
add
int3
xor
cli
shr
sub
xchg
in
rcl
call
xchg
sbb
jle
das
or
cmp
mov
mov
jecxz
iret
add
das
addr16
jno
int
pop
loop
pop
pop
or
inc
inc
and
xchg
dec
sti
sub
sub
sbb
shr
push
ds
cltd
loop
getsec
mov
sahf
adc
sbb
mov
in
rcrb
add
pop
lods
pop
cli
cmc
cmpsb
lret
add
add
add
inc
cmp
cmp
or
test
add
add
xor
dec
repnz
and
rorl
xor
fcmovbe
add
aam
lods
jne
push
cltd
leave
pop
cli
outsb
push
cmp
in
mov
jge
push
pop
aaa
dec
lret
hlt
adc
or
mov
cltd
js
dec
cld
insl
sub
dec
cmp
orb
xor
arpl
add
ja
push
sar
push
xchg
mov
adc
cmp
daa
pushf
xor
fiadds
push
jns
push
and
popf
rcr
lret
outsl
jb
dec
push
shll
lcall
add
adc
lret
imul
out
mov
pop
inc
mov
adc
dec
push
rorb
push
mov
dec
xchg
push
xorb
dec
pop
aaa
xchg
es
xor
adc
das
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
test
add
loop
xchg
ret
fwait
pop
sub
mov
inc
in
js
out
lods
jle
sbb
repnz
cltd
mov
adcb
sbb
push
add
into
movsl
add
arpl
xchg
int
je
aaa
jo
paddq
fsubp
pop
data16
js
nop
gs
mov
inc
pusha
mov
mov
xorb
sahf
call
daa
pop
pop
outsl
js
push
lcall
xorl
jne
adc
mov
mov
sub
mov
imul
mov
ret
insl
cmp
movsb
or
popf
in
xchg
adc
ss
fst
mov
add
ja
out
cs
sbb
sbb
dec
push
cmpsl
icebp
das
lea
aad
sbb
arpl
mov
imul
mov
gs
mov
repnz
mov
add
add
aam
int
aaa
das
aam
ja
aaa
test
add
add
jne
decb
add
clc
rclb
mov
pop
mov
sub
es
out
inc
insl
les
pop
mov
dec
inc
sub
xor
sbb
jno
cwtl
jmp
fisttpl
lahf
xchg
popa
mov
and
cmp
cli
fcmove
xchg
std
add
xor
dec
or
xor
cmp
cwtl
inc
repz
xchg
xchg
fnsave
add
cmp
mov
imul
aaa
icebp
out
cld
pushl
clc
mov
sbb
inc
daa
add
mov
mov
push
dec
add
cmp
insb
mov
xchg
ss
repz
cmp
test
popf
lock
leave
insl
movsl
push
loopne
cli
push
hlt
dec
negl
mov
cld
mov
and
int
dec
sub
cmp
push
adc
mov
inc
xlat
test
mov
add
add
arpl
addr16
sub
pusha
nop
xor
add
or
and
fcmovnbe
mov
inc
lcall
and
stos
push
xor
push
sar
add
into
jae
fwait
mov
pop
pop
orl
and
outsl
and
inc
outsl
push
xchg
mov
fimuls
pop
cmp
sbb
pop
sub
sarb
lahf
jmp
ret
lret
daa
addl
cmp
dec
pushf
rcrl
dec
adc
testb
ds
mov
jne
je
mov
or
lea
and
push
insl
jae
push
pop
loope
int
int3
dec
ret
imulb
add
cmp
sbb
cmp
adc
and
outsw
paddd
cli
popl
jbe
mov
inc
cmp
nop
jp
rcrb
out
pop
call
orb
mov
cmp
inc
adc
ds
push
lock
jne
sub
dec
add
add
out
out
pushl
xchg
xor
sub
std
add
add
mov
cli
test
pop
lea
adc
imul
rcrl
das
mov
sub
add
and
push
scas
jbe
test
xchg
aad
nop
stc
clc
sbb
inc
shrl
or
mov
mov
mov
or
mov
push
out
pusha
inc
idivb
cltd
iret
inc
mov
cmpsl
mov
or
inc
cmp
arpl
fmull
rorb
cli
inc
pop
pop
pop
aas
cmp
cwtl
xlat
leave
or
mov
inc
repnz
pop
ficoms
push
jmp
popf
and
mov
fucomi
insl
dec
test
xlat
add
iret
push
dec
fstl
push
insl
sbb
xchg
dec
mov
mov
out
mov
int3
sub
cld
inc
bound
or
dec
xlat
mov
cmp
dec
jne
push
lods
fmull
cmp
pop
les
cmc
pusha
add
add
push
scas
mov
fbld
outsb
mov
add
add
cmp
scas
aad
lds
movsb
out
adc
pop
cwtl
out
in
orl
jne
cmp
sbb
inc
in
mov
stos
sti
jg
cld
cmpsb
cmp
insl
mov
mov
clc
adc
mov
adcw
jecxz
push
jl
les
sub
fistpl
push
adc
rcr
ss
fmuls
mov
mov
mov
imul
cld
data16
or
scas
fs
mov
mov
mov
mov
idivb
sti
sbb
xchg
push
jb
sub
cmp
sbb
hlt
mov
push
rcll
js
pop
test
ret
js
loope
jg
sar
jmp
add
in
jns
in
pusha
gs
dec
inc
inc
sbb
sti
xchg
in
or
inc
inc
cwtl
xor
call
daa
cmp
aam
jl
mov
fcmovu
sub
sub
lods
fwait
rcrb
inc
jo
add
aaa
xchg
and
movsl
mov
mov
mov
inc
xchg
add
add
jle
imul
mov
subl
in
stos
mov
dec
adc
mov
sub
mov
and
inc
dec
test
pop
mov
xor
les
or
mov
push
enter
dec
lea
cmp
adc
sub
xchg
roll
and
mov
push
inc
rcrb
sub
stos
cmp
inc
mov
xchg
jecxz
inc
and
add
jg,pn
jbe
gs
push
xor
xchg
pop
fnstcw
inc
xchg
mov
je
and
mov
pop
outsl
xor
sbb
inc
xor
in
loope
or
cmpsl
das
sub
mov
mov
jle
outsl
sbb
orb
jg
into
out
das
jg
and
inc
xlat
add
xor
popf
in
fs
iret
jecxz
scas
ret
lret
in
test
add
fdivl
mov
mov
add
add
or
loope
xchg
mov
call
cmp
sbbl
daa
xor
jmp
stos
lods
and
in
stc
mov
test
jbe
mov
stc
push
lds
cld
popa
or
mov
ja
adc
daa
out
mov
cltd
in
push
fucomip
push
cmp
pop
pop
sahf
mov
roll
sahf
pop
ss
mov
push
ljmp
orl
mov
sbb
sbb
fcmovbe
and
sub
icebp
shl
sbb
push
mov
movsb
xchg
add
rcr
aam
mov
movsb
scas
add
pop
pop
std
movsb
push
bound
out
and
jb
in
fisttps
add
add
adc
fsts
out
pop
sbb
rolb
pusha
push
stos
push
popf
push
push
or
and
sub
imull
pop
mov
add
inc
stc
mov
mov
lods
imul
lret
lds
hlt
movl
add
cwtl
dec
das
or
fidivrl
xchg
gs
inc
clts
jno
xchg
je
jb
test
jne
in
xorb
fimull
inc
jmp
scas
sub
aas
int3
jg
lods
data16
aam
popa
add
adc
dec
mov
cmc
ja
and
sbb
sbb
in
or
into
push
xchg
mov
nop
xchg
lahf
push
test
test
sbb
sbb
inc
shrb
or
aas
sub
les
or
xchg
test
and
fsubr
call
lcall
mov
sub
movsl
sub
pop
push
mov
xchg
dec
je
inc
sub
ss
jge
mov
shlb
cmpl
ds
out
and
mov
nopl
shrb
test
aad
out
mov
sub
cmovae
xchg
jge
stos
adc
add
xchg
sub
scas
or
cmp
popf
mov
int3
add
add
mov
mov
shl
out
repz
push
cmpsb
lock
jbe
gs
in
inc
jle
lcall
adc
mov
push
xchg
shll
inc
mov
cmp
arpl
xchg
lods
aaa
lret
es
pop
addr16
mov
xor
testl
sub
xchg
pop
iret
inc
jno
sub
mov
jae
and
adcl
test
out
sarb
dec
test
sub
sub
outsl
mov
fadd
push
sbb
xor
fwait
lds
cli
lds
pushf
sbb
lods
or
mov
movsl
dec
jns
jmp
lods
mov
mov
sub
fs
jns
cmp
test
movsb
rorl
pop
mov
adc
push
jp
inc
add
jno
into
push
mov
in
sahf
cmp
inc
dec
mov
pop
mov
push
addb
add
hlt
fbld
pop
mov
roll
add
add
scas
push
aaa
aas
out
mov
es
sub
jb
cs
sbb
test
jo
mov
xchg
xor
mov
dec
pop
xchg
aaa
jecxz
mov
xchg
sti
sbb
inc
jge
popa
cmp
scas
mov
cmp
popa
xchg
lods
xchg
adc
fsubrs
adc
lds
mov
fmull
cmpsl
jl
xor
shl
sbb
sub
xor
adc
lds
mov
cmp
mov
mov
jne
pop
stos
jbe
adc
inc
mov
push
in
sahf
push
jb
push
or
pusha
cltd
push
iret
ret
dec
xchg
fsubs
and
xchg
and
mov
inc
jecxz
in
lods
mov
jb
and
stos
or
call
ljmp
jecxz
xchg
adc
testl
ja
outsl
inc
lret
lods
add
xchg
sub
fisttps
pop
fsubl
popf
cmp
mov
pusha
out
lods
add
add
into
fwait
add
mov
rcl
add
add
dec
shll
inc
cmp
aaa
mov
movsl
repz
sar
or
mov
or
movsb
fcoms
push
push
mov
adc
push
test
or
cmp
lea
aad
inc
outsb
sub
jle
pop
out
mov
inc
xchg
xchg
lods
dec
decb
mov
xor
add
and
hlt
dec
inc
pop
and
mov
xchg
lret
push
fidivrl
jno
lret
jno
cmp
inc
gs
adc
cli
cmpsb
and
dec
pop
sbbb
mov
add
je
mov
or
in
pop
pop
mov
inc
dec
sbb
movsl
shll
ret
popf
mov
jne
add
lods
inc
fiadds
push
xor
in
inc
sub
add
mov
popf
lds
mov
adc
inc
scas
mov
pop
js
jne
cld
mov
cli
dec
jle
fbstp
clc
xchg
dec
mov
rcl
add
add
xor
mov
pop
sarb
in
idivb
fildl
add
inc
cmp
xchg
cld
testb
or
fimull
insb
aas
push
mov
ja
int3
push
cmp
mov
sbb
jge
fcmovu
pusha
orl
mov
mov
stos
fldlg2
cmpsb
or
test
and
pop
gs
mov
insb
in
inc
setp
jne
sbb
ja
es
ficomps
xchg
aad
in
xchg
sbb
inc
pop
imul
xor
inc
fistl
in
test
lahf
lea
cld
insl
stc
fs
popa
adc
popa
ljmp
lret
or
cmp
popa
fsubrs
mov
repnz
sub
or
push
inc
mov
test
adc
pop
xlat
jne
cmp
loopne
ret
sub
jg
loope
lods
arpl
jl
js
jo
inc
mov
adc
es
in
push
stos
add
add
inc
out
aas
mov
rol
ja
mov
push
add
add
push
mov
xchg
mov
arpl
inc
fimull
aad
cmp
mov
cmpsl
push
add
stos
ficoml
adc
dec
lods
test
xor
jne
xchg
xchg
mov
popa
mov
jle
icebp
fdivp
inc
icebp
scas
inc
mov
sbb
pop
leave
jg
lods
sahf
cltd
ror
out
sbb
xor
push
push
lea
xor
sub
lds
sub
outsb
or
enter
popa
mov
and
idiv
rcl
xor
jbe
mov
mov
fadds
imul
test
ret
sbb
fs
filds
pop
jae
jns
jl
push
enter
or
stos
cmp
push
vfrczps
je
xlat
or
lahf
or
aas
decl
pop
out
or
inc
adc
mov
push
shlb
pop
repnz
adc
insl
sahf
xchg
add
add
bnd
dec
leave
and
xchg
mov
add
push
pushf
into
mov
mov
cmc
sbb
imul
scas
sarb
fimull
pop
adc
push
cmp
outsl
test
cwtl
cwtl
adc
add
inc
xchg
shlb
insl
popa
sbb
jl
movsb
out
in
jg
or
push
imul
scas
out
jno
xchg
insl
jo
imul
aas
fidivrl
outsb
popa
xchg
xchg
xlat
fstpt
loopne
ja
test
bound
mov
mov
push
push
push
daa
xor
stos
imul
pushf
adc
fwait
push
cmp
jmp
or
cwtl
sub
nop
mov
add
jnp
inc
mov
popa
jno
and
mov
into
adc
inc
mov
out
cmp
daa
jmp
sub
sti
lret
xor
push
fwait
mov
sbb
dec
stc
jo
inc
ljmp
add
sbb
in
out
ja
filds
gs
or
add
cwtl
push
popa
inc
sbb
ds
adc
pop
add
aas
lods
arpl
pushf
sti
push
dec
pop
arpl
orb
cmp
lds
ljmp
sbb
int
push
sar
cltd
mov
repnz
and
loop
insl
es
insb
mov
sbb
not
aad
xchg
dec
mov
out
fistps
mov
cmp
xchg
mov
push
push
out
popf
mov
adc
add
imulb
ljmp
fucomp
sub
or
lock
int3
xor
popa
mov
mul
jl
cwtl
pop
adc
push
mov
jecxz
hlt
jo
xchg
sahf
jbe
inc
repnz
test
adc
rorb
shl
pop
in
pusha
push
push
xlat
insl
lret
icebp
leave
popa
fimull
push
xchg
imul
imul
clc
dec
mov
inc
bound
sbb
jno
out
pop
and
icebp
stos
push
mov
pop
xor
add
add
pop
in
inc
push
or
out
mov
add
xchg
inc
mov
mov
fidivrl
and
mov
sbb
ja
xchg
clc
nop
cmp
xlat
sbb
mov
add
fwait
arpl
mov
addr16
adc
xlat
push
dec
ror
ds
lret
cmp
jge
mov
xchg
jecxz
icebp
pop
icebp
mov
mov
and
push
xor
ljmp
pop
mov
sub
stos
lret
pop
xchg
test
jo,pt
cmpsl
cmovle
imul
push
cmp
inc
mov
cltd
cmc
hlt
ret
inc
jle
sbb
push
loope
cmp
adc
push
push
cmp
lea
movsl
cmp
mov
ds
mov
fsubrp
mov
xor
sub
adc
dec
jmp
les
loopne
adcb
fwait
cmp
pushf
lret
xor
or
cld
jae
hlt
jae
add
sub
mov
xchg
mov
add
mov
jg
neg
pop
daa
inc
mov
or
hlt
or
add
sbb
sti
xor
or
push
jge
pop
ret
pushl
jle
lret
or
scas
rolb
pop
outsl
test
fstps
lret
pusha
add
mov
jp
enter
add
rorb
push
outsl
fadds
adc
aad
mov
pop
popf
and
jg
stc
and
pop
imull
cmp
mov
bound
aad
pop
lea
jmp
push
scas
add
es
aas
scas
cmc
pop
pop
imul
rolb
hlt
ja
pop
dec
adc
pop
test
mov
pop
adc
mov
sub
int3
sub
mov
sub
xor
lcall
ret
pop
xor
loopne
cmp
add
in
pop
mov
push
fsubrs
and
ret
out
in
in
lods
sarl
mov
icebp
push
aaa
arpl
inc
int3
orl
mov
dec
xor
dec
jmp
add
add
sti
jg
cmp
je
add
add
add
mov
test
arpl
push
pop
push
jp
out
push
int
je
call
or
mov
aam
insl
jns
xor
jmp
pop
dec
insl
popf
ss
push
xchg
sbb
mov
xor
push
mov
mov
call
dec
adc
and
mov
or
repnz
inc
andb
fists
add
shlb
nop
push
mov
push
lcall
into
outsb
fmuls
lcall
fistpll
adcb
and
mov
xchg
lahf
enter
enter
mov
nop
out
push
sub
jns
mov
cmpsb
loopne
mov
ror
scas
mov
cld
and
pop
jo
and
jl
daa
jno
cmpb
mov
in
xchg
jl
cmp
es
sbb
or
xchg
ficompl
mul
je
aad
cmp
add
jnp
fstp
fcompl
aas
mov
xor
or
add
sub
data16
and
fldenv
or
mov
or
outsl
push
ret
dec
xchg
pushf
pop
movsb
sti
out
ljmp
add
and
lahf
stc
add
inc
ret
sbb
test
pop
push
jge
xchg
fadds
adcl
pop
pusha
loop
cmp
or
dec
insl
fnsave
jmp
cwtl
enter
cld
mov
test
bnd
inc
imul
adc
pop
add
icebp
lcall
and
xlat
jl
cld
push
inc
push
or
pop
hlt
cld
lea
in
inc
mov
clc
loopne
add
dec
fists
cmpsb
js
xor
sbbb
loopne
shlb
and
xchg
xchg
bound
xor
sbb
std
iret
jl
adc
shl
les
lds
jge
xchg
jbe
fs
es
add
mov
add
add
add
add
outsl
mov
add
rcrl
add
add
add
adc
loopne
mov
fnstsw
test
ret
fcompl
call
imul
push
fcom
jns
popf
mulb
loopne
ret
in
xchg
xchg
mov
inc
rcrl
out
cmp
inc
fistpll
jl
jge
ljmp
fs
faddl
cmpsl
sti
mov
pop
inc
cltd
imul
pop
or
ret
insl
aaa
jbe
or
adc
inc
xor
loope
fld1
popf
mov
jbe
mov
scas
add
mov
cmp
test
sub
dec
adc
dec
adc
or
push
out
rcll
dec
cmpsb
je
mov
mov
jecxz
jno
int3
mov
jmp
mov
mov
imul
sub
mov
sbb
jbe
mov
inc
dec
imul
loop
fldcw
pop
mov
sarl
dec
push
in
mov
xor
fildl
add
sbbb
loope
jmp
lcall
add
lea
jg
or
mov
mov
lret
pop
cmp
jo
and
inc
and
sub
xchg
sbb
fnsave
xor
mov
mov
andb
mov
test
pop
adc
fsts
test
push
mov
cmp
add
dec
or
jmp
in
daa
xor
test
inc
sbb
in
sub
xchg
or
arpl
adc
in
xchg
stos
aas
mov
add
dec
xchg
xor
adc
idivl
xchg
mov
mov
insl
mov
sarl
daa
hlt
roll
outsb
and
repz
mov
rorl
inc
mov
xchg
lods
mov
jnp
xor
jmp
mov
inc
shr
push
add
repz
mov
add
add
xor
test
cld
rcll
add
fidivrs
lock
das
fucomi
sbb
sbb
sbb
add
push
xor
jno
das
xor
pop
cmp
test
in
xor
push
sbb
fldt
fstpt
scas
inc
fstpl
adc
outsl
dec
sub
addr16
pop
outsl
xlat
pop
sbb
dec
addr16
inc
dec
jp
lods
dec
mov
jp
cmp
and
lret
pop
movsb
jo
push
mov
mov
in
cs
fdivrs
fnstcw
mov
add
mov
lods
xor
lret
ret
push
int3
sbb
push
mov
xchg
ja
or
in
fimuls
lods
cmpsl
jb
push
and
jae
pop
add
cld
jecxz
flds
dec
les
clc
cmp
xor
mov
push
lods
adc
push
jle
dec
pop
aas
lahf
push
cmp
jp
cmpsb
add
push
or
dec
mov
xchg
sbb
clc
add
add
cli
inc
jg
int
xchg
lods
or
cld
cmpsl
movsb
adc
add
add
dec
add
out
sub
fs
ja
rolb
dec
stos
add
jno
rclb
add
pop
mov
es
or
loopne
push
mov
push
outsb
into
adc
xor
xchg
bound
loope
leave
and
pop
push
aam
cmp
je
aam
inc
mov
inc
in
mov
add
adcb
or
or
aam
xchg
daa
cmpsb
das
and
add
inc
push
jmp
int
mov
pushf
add
movl
rcll
push
mov
ret
mov
add
je
adc
push
aad
insb
mov
jge
in
incl
in
add
xor
adc
sbb
pop
jnp
ficoms
dec
pop
pop
mov
pop
push
xchg
adc
test
xchg
fidivrs
add
jge
and
add
add
xchg
std
cmp
jle
fistpll
fiaddl
pop
daa
pop
adc
add
lds
xor
les
mov
subb
shl
sbb
adc
or
pop
in
imul
ret
insl
push
fbstp
jge
int3
rclb
not
xchg
popf
pusha
aaa
aad
adc
mov
and
inc
sbb
out
xor
test
jp
and
cmp
pop
push
cmp
in
sub
out
mov
add
xchg
jge
aaa
ds
add
les
xchg
iret
pop
or
ds
add
loope
add
xchg
ss
jo
pop
push
jmp
xor
push
or
inc
lahf
sub
dec
pushf
adc
push
loop
es
xorb
mov
adc
test
out
xor
stos
xchg
sub
push
movsb
cmpsl
pop
rorb
in
mov
add
add
iret
xlat
ficompl
inc
jmp
cmpsb
xchg
sbb
add
add
pop
xchg
lret
daa
dec
mov
push
addr16
shr
loopne
jb
cli
loope
pop
clc
in
out
mov
sub
ljmp
daa
out
or
xor
clc
negb
pminsw
icebp
xor
jg
sbb
addl
int3
and
out
jp
xchg
stos
add
jecxz
into
ret
std
mov
outsb
cmp
inc
enter
lcall
jns
pop
and
stos
mov
js
push
call
push
testb
std
arpl
xchg
lock
xor
and
movsl
mov
pop
jg
loope
xor
lods
jae
sub
mov
in
mov
icebp
cmp
ss
xchg
lods
inc
out
cmp
ret
vpmulhrsw
inc
xor
mov
pop
lock
clc
mov
enter
adc
jbe
mov
xchg
add
add
sub
iret
outsb
jmp
push
test
xchg
and
add
cmp
sbb
mov
pop
cmp
repnz
sub
or
ror
or
dec
fs
repnz
push
fcoml
and
xchg
mov
cmc
fstpl
and
shll
icebp
mov
xchg
sbbl
bound
push
jp
dec
jno
xchg
and
xor
pop
inc
fists
pop
push
dec
fcmovu
sbb
xchg
push
jl
xchg
fwait
loopne
lcall
jecxz
push
push
fadds
jmp
test
repnz
in
adc
inc
sahf
dec
jecxz
roll
mov
lcall
sbb
test
or
mov
ljmp
mov
jne
xchg
arpl
loopne
loopne
cmp
cld
jb
sub
in
cmp
xor
or
cltd
int3
sbb
or
inc
daa
roll
push
lods
iret
testl
add
add
std
sbb
stc
cld
or
popf
es
adc
adc
add
sbb
dec
pop
adc
shlb
loope
ja
mov
outsl
mov
inc
stos
icebp
in
sarb
or
push
es
fdivrp
imul
clc
flds
ffreep
adc
out
test
cmp
push
mov
and
je
cwtl
inc
sbb
cs
xchg
int
adc
aaa
sbb
addb
mov
imul
mov
insb
mov
divb
jl
ss
push
repnz
das
push
in
lea
xchg
jbe
xchg
inc
ja
std
pop
arpl
rcrb
dec
cmp
lret
pop
outsb
mov
mov
fwait
test
xchg
jmp
xchg
jp
jnp
sbb
ret
mov
adcl
adc
das
xchg
inc
pop
scas
jne
xor
test
pop
sbb
mov
js
mov
aas
or
arpl
ret
hlt
popa
pop
add
add
pop
test
scas
repz
cld
adc
negb
sub
add
add
or
cmp
mov
in
outsb
in
mov
xor
mov
mov
jne
sub
leave
std
sub
imul
mov
mov
xor
mov
stos
dec
adc
mov
xchg
ss
xlat
xchg
dec
outsl
cmpsb
inc
hlt
cld
sub
leave
shlb
jo
data16
push
adc
shrl
imul
adc
cmpl
int3
xchg
mov
cld
mov
bnd
pop
scas
cs
ljmp
push
loop
push
ret
xor
or
lods
ljmp
adc
xchg
cmp
or
test
sti
mov
push
jo
and
adcl
imul
ss
pop
sub
out
ja
test
ret
shrl
out
addr16
mov
sub
push
ret
insl
add
add
dec
pushl
push
sub
add
or
lock
jge
adc
jle
inc
out
and
or
mov
or
adc
shrl
cmc
lock
test
sbb
in
idivl
mov
mov
jle
cmp
and
xchg
or
push
dec
cmpl
pop
or
sbb
jae
xor
inc
sub
mov
imul
xchg
fnstsw
mov
push
and
pushf
sbb
add
popf
sub
xor
push
andb
mov
dec
in
insl
divl
push
pop
gs
test
cmp
std
out
dec
inc
mov
push
inc
inc
roll
inc
repz
shrl
dec
sbb
and
jmp
jle
icebp
fwait
sub
xchg
cltd
je
mov
arpl
repz
cmp
xor
test
jnp
xor
rcll
add
add
inc
ja
pop
aas
dec
push
xchg
movsb
xor
add
add
nop
jmp
fdivl
add
pop
mov
loopne
fadds
mov
jne
inc
jbe
mov
jne
jle
in
mov
cltd
xchg
shl
addl
fwait
and
movsl
cltd
push
int3
outsb
xchg
insb
lea
std
ljmp
jle
dec
sbb
lret
lahf
xor
mov
mov
pop
adc
jle
push
jne
test
addl
xor
xor
pop
jno
fwait
mov
pop
jo
add
jle
loop
add
add
sysexit
xor
ljmp
xchg
imul
adc
popf
mov
es
jo
mov
push
aam
push
pusha
aad
pop
popa
xor
lods
cltd
jns
sbb
inc
sbb
xor
pop
shll
cmp
mov
aas
test
orb
xchg
sahf
fmull
push
scas
cmpsl
pop
pop
or
or
jne
cli
add
add
xchg
jae
ja
div
mov
test
add
dec
push
leave
adc
add
adc
loope
js
pop
mov
bound
jmp
xchg
je
lret
ret
sub
incl
arpl
insb
lret
mov
dec
mov
dec
sbb
stos
xor
outsb
mov
shll
loop
mov
mov
xchg
jle
movsl
or
mov
hlt
pop
mov
mov
out
push
test
aaa
test
jae
insl
mov
aaa
inc
lods
stos
lahf
sti
mov
cmpsl
mov
rcl
mov
add
xor
clc
jecxz
sahf
fwait
add
jo
xchg
cltd
sub
xor
lea
faddl
repnz
mov
or
mov
jo
inc
cmp
mov
pop
sbb
inc
pusha
cmp
cli
out
test
pop
cs
or
repnz
sub
inc
popl
add
xor
cli
std
jg
push
pushf
dec
xchg
shlb
aas
sbb
add
aad
push
cmp
ss
ret
rorl
mov
and
pop
das
test
jns
in
fwait
adc
fldt
rcrb
test
scas
or
insl
aam
nop
and
in
jae
out
mov
mov
push
testl
cmpsb
dec
mov
inc
mov
lock
sub
dec
test
jecxz
fisttps
dec
mov
enter
subl
cmp
push
jne
insl
pop
test
jne
sti
or
das
xor
jns
dec
sub
movsl
int
push
mov
push
mov
xchg
popa
bound
movsb
push
stos
dec
cmpsb
icebp
mov
iret
notb
repz
mov
add
mov
pop
jmp
test
fs
popa
adc
and
js
xor
mov
pop
repz
dec
mov
in
add
testl
incl
sbb
mov
inc
repz
sbb
add
lods
mov
lods
das
cmp
push
test
mov
pop
dec
jb
sahf
gs
mov
test
xor
subb
pusha
aad
cmovle
jle
dec
roll
and
sbbb
pushf
sbb
or
je
fdivrl
mov
shrb
mov
sbb
xchg
mov
lock
jmp
stos
fildll
xchg
lcall
push
xor
pop
add
inc
enter
cmp
inc
popf
pop
jo
lcall
push
or
sahf
fidivrs
sbb
adc
movsb
lret
xor
or
sub
arpl
lods
sarb
and
gs
xor
enter
fsubp
loop
int
sub
fs
jno
xchg
iret
and
js
push
add
adc
pushf
gs
push
pop
inc
dec
out
jle
test
test
or
jmp
add
es
jg
pop
or
xor
lods
mov
add
add
mov
inc
fbld
out
fsubrs
xchg
inc
test
enter
cmc
imul
mov
sbb
jnp
fcompl
adc
or
ds
pop
fs
inc
inc
and
inc
lods
xor
jns
shll
jno
push
movsl
pop
push
adc
insb
xlat
cmp
addl
or
mov
les
dec
inc
out
movsl
std
push
clc
pusha
jecxz
push
enter
cmp
jne
push
mov
inc
das
leave
cmpsl
pop
sarb
ret
lds
imul
pop
push
lds
lcall
jbe
xlat
xor
sti
iret
ja
push
icebp
add
pop
sbb
inc
push
ror
inc
mov
and
repnz
lods
sub
stos
and
fsubl
int
mov
jne
xlat
in
lret
add
push
clc
or
dec
push
cmp
sbb
add
shlb
bound
add
test
icebp
movsl
xchg
insl
fildll
and
adc
sbb
cmpsl
push
stos
push
jecxz
jno
jo
repz
lods
test
xlat
popa
inc
enter
imul
sub
cmp
in
or
bound
fwait
out
test
adc
sbb
imul
out
mov
ficoml
push
xchg
arpl
inc
test
ss
inc
shlb
fbstp
jmp
dec
add
mov
sub
fsub
lret
and
imul
or
add
pop
or
fcmovne
jmp
shrl
pop
xchg
sub
andb
xor
fcompl
mov
std
push
rcll
mov
pop
lds
dec
xor
mov
sub
roll
jp
andb
push
push
xor
mov
xchg
hlt
push
push
add
add
mov
pusha
das
push
outsb
cmp
xor
adcb
int3
jno
lcall
mov
and
dec
add
cltd
in
and
xchg
jecxz
lcall
pop
mov
sub
push
icebp
imul
push
call
in
cmp
stos
aam
jb
inc
data16
fwait
in
repz
bswap
out
arpl
pop
ret
cmc
aad
pop
aaa
fld
xchg
mov
ljmp
mov
out
xchg
xchg
mov
dec
or
dec
xchg
fs
scas
jns
push
jg
into
es
sbb
add
mov
dec
or
outsb
and
inc
rcll
jl
jno
cmpsl
inc
push
jl
lods
adc
mov
rclb
leave
dec
adc
xor
mov
push
jb
fldl
ret
mov
xchg
fimull
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
pop
push
mov
les
inc
mov
jmp
add
leave
lods
in
adc
dec
and
xor
popf
mov
inc
and
and
inc
adc
insb
push
push
ror
cmp
shll
popa
mov
scas
scas
adc
jo
dec
lock
adc
in
roll
xlat
cmc
sub
cmp
rcr
test
int3
ret
fcmovbe
fiadds
lcall
leave
test
pop
ja
jmp
jle
push
bound
push
pusha
cmp
and
mov
sub
xchg
sbb
mov
movsb
mov
lods
std
dec
jo
sbb
lds
mov
mov
push
xor
dec
lret
cmp
jmp
cmp
xor
push
arpl
sbb
pop
cmc
fmulp
insb
rorl
jmp
call
xchg
xchg
lods
cmc
test
add
add
in
out
stos
jge
or
clc
scas
sahf
pop
and
add
fistpl
dec
leave
pushf
aas
sub
cld
das
iret
lods
mull
pop
mov
stos
push
sub
mov
mov
cmc
clc
sbb
cmp
test
movsb
scas
jns
leave
or
ret
imul
cmpsb
aaa
sbb
sub
rclb
mov
inc
jg
jne
and
pop
ja
push
mov
int3
pop
push
iret
cs
inc
pop
jne
test
ret
icebp
mov
add
pushf
mov
dec
mov
sbb
ss
idiv
scas
inc
lea
push
lret
push
jns
fistl
out
or
sti
or
sbb
or
sbbb
push
sbb
adc
push
sub
mov
cmpsb
mov
test
imul
mov
mov
je
les
jg
mov
rep
or
test
fwait
test
mov
mov
mov
mov
mov
cs
stos
xchg
add
add
sbb
out
xchg
iret
push
aas
adc
sbb
add
add
outsl
mov
repnz
in
je
cmp
xchg
icebp
mov
xlat
in
dec
jo
int
inc
cmp
cmpsl
mov
xchg
popa
out
adc
popf
pop
mov
dec
clc
mov
sbb
fwait
aas
sub
adc
cli
mov
and
outsl
cmp
lret
pusha
cwtl
xor
mov
jmp
or
sbb
push
push
daa
jge
or
js
fldt
jne
stos
repz
mov
mov
sbb
pop
cmp
mov
sbb
pop
sbb
cli
jnp
jmp
out
pusha
and
cmp
imul
out
test
mov
lahf
add
and
clc
test
icebp
lods
shll
dec
jo
and
dec
jbe
popa
or
lds
test
repz
std
mov
aad
xchg
inc
jle
test
and
sbb
mov
add
in
add
cmp
out
loope
jns
lea
add
add
add
insl
loope
inc
ficompl
pop
jle
jnp
js
sbb
ret
rolb
shll
sub
add
xchg
int
push
test
push
int3
aam
sub
gs
sahf
repz
data16
js
orb
mov
addl
push
inc
pop
sbb
addr16
xor
fs
ja
int
pop
shlb
mov
inc
loope
or
jnp
insb
jle
cli
sahf
and
aas
ds
sarl
stc
mov
ret
jecxz
loop
ja
nop
inc
xchg
sbb
mov
out
xchg
dec
jp
inc
sti
fsts
jle
pop
mov
pop
sbb
and
xchg
repnz
lret
int3
and
in
pop
pop
lods
sbb
fcmovne
adc
pop
mov
xchg
aaa
insl
push
jl
xor
pop
popf
fdivl
das
icebp
pop
push
mov
push
imul
leave
rolb
add
lods
jg
push
mov
jb
jg
insb
and
add
mov
lret
ret
mov
xchg
aam
dec
or
es
lods
cmovns
outsl
mov
push
hlt
pop
cmp
cmp
push
repz
lret
test
ljmp
xor
repnz
add
mov
leave
cmp
imul
sti
jbe
lods
je
and
pop
xchg
jp
add
shll
xchg
test
dec
or
pop
push
gs
inc
push
xor
mov
and
mov
sbb
ja
test
sub
pop
push
arpl
lock
inc
mov
je
movsb
cmp
mov
jge
mov
mov
repnz
dec
addb
cltd
addr16
mov
xor
scas
daa
inc
dec
cmp
icebp
pop
movsl
pop
add
shl
dec
add
mov
int3
repnz
mov
mov
add
mov
dec
idivl
cld
ret
add
cmp
add
add
fnstsw
dec
scas
stos
out
push
mov
jl
pop
loop
arpl
cmpsl
aad
testl
in
in
sbb
add
into
add
xchg
ja
outsb
out
mov
outsl
lret
adc
jp
adc
push
cmp
adc
adc
push
sbb
sbb
xor
dec
pushf
ret
xchg
push
xchg
pop
mov
push
push
inc
sub
push
pusha
push
mov
cmc
jne
jmp
add
repnz
mov
insl
popl
cmpsb
inc
hlt
mov
pushf
int
into
xchg
out
fsub
pop
push
and
add
mov
rol
hlt
insl
mov
into
mov
rclb
add
imul
jmp
in
movsb
loopne
test
jecxz
in
out
mov
pusha
movsb
jp
push
out
out
cltd
mov
jbe
xlat
pop
aas
add
nop
inc
es
in
test
out
movl
add
add
mov
iret
mov
hlt
in
adc
add
jne
or
test
clc
inc
imul
sbb
outsl
pop
je,pt
in
push
fcmovne
arpl
stc
lods
ret
adc
mov
adc
and
jecxz
loopne
dec
inc
jg
out
movsl
repnz
lods
mov
push
or
movsl
mov
add
xlat
add
sub
and
cmp
out
xchg
mov
out
dec
iret
mov
inc
sahf
fnstenv
cmpxchg
in
mov
ja
jmp
jg
into
xchg
fisttpl
gs
jbe
popf
cli
lock
xchg
cmp
pop
shrl
aam
call
mov
jno
imul
mov
sbb
jne
sub
inc
inc
mov
stos
lea
pop
sub
push
fwait
pop
add
imul
or
cmp
dec
push
nop
scas
pop
add
add
mov
jg
arpl
sahf
mov
add
add
dec
in
movsb
mov
xor
shrb
and
sub
stos
xor
xlat
lret
jg
test
aaa
ret
ja
cmp
stos
lret
pop
sub
inc
xor
and
push
inc
mov
push
les
xor
lds
mov
out
aam
out
jl
mov
enter
movsl
lret
inc
or
sub
lret
je
int
call
pushf
ss
out
mov
dec
mov
push
rcl
aam
dec
outsb
adc
pop
xor
inc
xchg
or
aaa
and
outsl
dec
adc
ja
cltd
mov
outsl
imul
test
mov
in
jb
lret
or
jo
mov
jg
pop
dec
testl
jl
mov
dec
mov
dec
push
nop
xor
orl
dec
push
or
add
add
xor
clc
cli
clc
sarb
sti
mov
xor
andb
add
mov
andb
dec
icebp
or
test
push
lea
in
xor
fdivs
xchg
add
or
mov
movsl
add
dec
lret
clc
ficomps
jecxz
inc
dec
int
insb
rcrb
inc
fcmovnu
pusha
cwtl
mov
jns
mov
push
les
out
dec
cmpsl
fisubs
add
test
push
mov
popa
dec
rdmsr
fistpl
or
xchg
imul
lea
movsl
std
xchg
push
jl
out
xor
inc
dec
pop
stc
or
fchs
sub
lods
pushf
hlt
out
lcall
clc
or
fcoml
js
and
inc
mov
mov
inc
push
push
rcrl
lods
gs
in
mov
ljmp
push
aad
sbb
insl
es
ss
testb
push
dec
dec
add
outsb
inc
enter
pop
xchg
in
add
add
jnp
out
mov
xor
test
add
add
ja
sbb
rorb
push
clc
call
dec
pop
fidivrl
xchg
pop
stos
fstl
jl
rcll
pop
es
outsl
jo
cmc
adc
pop
loop
mov
sbb
ds
xchg
xchg
jp
push
push
dec
cmpsb
hlt
mov
cmpsb
mov
pop
mov
fwait
jbe
js,pn
sub
pop
xchg
push
je
pushf
sub
fcomip
in
adc
leave
jecxz
es
in
mov
and
fdivrp
outsl
ror
inc
jae
adc
aaa
jle
fwait
movsl
dec
in
mov
push
stc
dec
adc
enter
and
repnz
cltd
sbb
dec
cmp
push
and
xchg
in
sbb
outsl
insl
mov
cmpsl
jae
push
das
xor
mov
js
lods
dec
ss
movsl
test
add
pop
fbld
xlat
sub
dec
aam
call
push
inc
and
daa
sub
adc
clc
xor
imul
mov
rcll
mov
mov
inc
add
add
es
data16
insb
daa
mov
mov
sub
add
xchg
jge
xorl
adc
inc
inc
outsl
cmpsl
xor
mov
or
hlt
jecxz
inc
stos
dec
pop
mov
jno
div
insl
xorb
sarb
and
orl
pop
loope
ret
cwtl
inc
fsts
rorb
inc
jnp
pushf
movsl
pop
pop
dec
int3
inc
scas
add
add
imul
jno
fwait
add
dec
imul
jl
adc
inc
mov
xchg
cmp
mov
pop
ds
mov
movd
jecxz
in
notl
mov
pop
ja
arpl
inc
push
jp
xchg
pop
in
movsb
cmp
pop
mov
sub
pop
or
push
jne
adc
mov
das
cmp
les
pop
sbb
xchg
daa
add
sbb
add
jns
fisttpll
pop
pushf
add
add
dec
mov
imul
shrl
add
jno
in
lea
pop
stos
sbb
fistl
and
add
mov
fsubrl
lcall
xor
outsb
or
in
sub
or
ficompl
inc
inc
movsb
mov
mov
inc
mov
jno
jle
jb
pop
sbb
adc
lods
sub
aas
pop
xor
mov
xor
pop
inc
and
stos
pushf
bound
push
add
out
nop
scas
je
subb
cmp
rol
jns
or
add
cmp
xchg
pop
cltd
movsb
int3
xor
inc
stc
sub
xchg
addr16
aaa
lods
test
movsl
shl
mov
ret
aas
cmp
sub
jp
jmp
or
dec
dec
sbb
push
lret
mov
pop
ds
jns
in
hlt
enter
outsb
cmp
gs
or
mov
fnstsw
or
cli
je
cmp
cmp
movsl
pop
xor
nop
dec
enter
and
add
add
repz
push
sti
cmpsl
enter
inc
enter
sub
add
and
pop
add
call
cmp
jge
outsl
pop
jns
mov
mov
xor
pop
test
in
cmp
lret
jecxz
adc
and
mov
mov
sub
ja
call
cli
movq
shll
pop
xlat
movsw
fsubp
and
scas
jmp
jge
push
je
pop
repnz
mov
xchg
inc
add
pop
mov
setne
inc
pop
orb
adc
xchg
je
cmp
pop
or
int
cmp
dec
adc
test
inc
xchg
bound
popa
aas
ljmp
cli
dec
loopne
push
xchg
or
sub
test
outsb
adc
sahf
mov
xchg
jae
mov
insb
stos
rcrb
mov
pop
push
insl
mov
mov
data16
pop
jbe
std
in
push
push
mov
mov
mov
aas
shll
mov
imul
mov
rolb
mov
add
add
mov
std
mov
dec
push
sbb
and
add
add
orb
pusha
jl
lret
mov
adc
and
sbb
push
push
ffreep
mov
ret
jb
push
or
test
pop
cmp
arpl
mov
aas
jnp
test
xchg
dec
scas
sahf
ds
lods
jo
icebp
or
ffreep
or
and
imul
jge
les
out
int3
aad
scas
dec
in
push
xor
shrb
xor
xchg
les
mov
rorb
sbb
push
mov
inc
adc
loope
daa
in
out
mov
loope
pop
mov
and
lods
dec
pop
out
out
mov
lea
cmp
push
hlt
lret
jmp
dec
sbb
fldl
std
add
or
push
sub
sbb
outsb
mov
adcl
es
arpl
sbb
xchg
adc
cmpsl
mov
sbb
aas
popa
dec
cmp
outsb
add
add
and
jecxz
and
lcall
add
add
sbb
fldcw
outsb
jge
pusha
mov
int
lods
mov
lods
sbb
lcall
inc
add
das
loopne
sahf
sub
pop
jl
add
clc
dec
push
outsb
mov
cmp
lahf
lock
xchg
xor
inc
xchg
jge
xor
adc
xchg
das
and
iret
add
jp
sub
cmp
mov
sahf
push
jg
or
in
pop
and
xchg
xlat
test
movsl
jnp
xor
clc
xor
cmp
rclb
int3
les
add
sub
out
mov
sbb
xchg
fwait
test
popf
sub
int3
xchg
arpl
mov
or
dec
add
stos
push
pusha
sbb
or
xor
sub
roll
stos
jbe
jp
cmp
fwait
dec
cltd
loopne
dec
dec
jmp
sub
add
fiaddl
ret
ficomps
cmp
lahf
sbb
fiaddl
add
add
inc
adc
and
cmpl
in
mov
mov
aad
lea
jae
sbb
repnz
push
in
sub
sti
mov
cld
out
mov
int
inc
dec
lock
mov
mov
jae
fnsave
data16
dec
mov
loopne
outsb
pop
sbb
psubw
dec
sbb
pop
or
pop
xchg
xlat
mov
out
pop
insl
mov
lcall
push
ljmp
push
push
addl
inc
lock
pop
outsl
xchg
or
ret
dec
icebp
jmp
cmp
pop
sub
notl
fiadds
xor
rol
add
mov
sbb
repnz
cs
imul
cs
mov
loop
ret
mov
push
cmp
cs
sahf
pop
or
pop
lret
dec
bound
out
movl
mov
pop
enter
mov
push
add
inc
sub
sbb
and
add
add
lods
xor
mov
cmp
mov
cld
and
add
and
add
outsl
cmp
shlb
je
mov
movsl
insl
cmpsb
xlat
movsl
cmp
xchg
pushf
lock
xor
shrb
bound
lret
jg
adc
mov
outsb
inc
lret
shrl
sbb
sahf
data16
cmp
loope
dec
dec
leave
cld
and
push
jge
cmpb
f2xm1
mov
lcall
dec
xchg
mov
mov
push
pushf
mov
arpl
fistps
cmp
cmp
or
call
adc
aas
out
push
push
push
sub
xchg
ljmp
imul
ret
adc
ret
dec
jge
cmpb
and
dec
add
xchg
pop
xor
or
sub
inc
pop
cmp
cmpsb
popf
fs
adc
jge
or
push
mov
sub
xchg
in
imul
xchg
push
stos
pop
jg
sldt
add
lret
mov
or
repnz
add
dec
lds
call
push
mov
push
orl
dec
dec
in
addr16
out
icebp
and
dec
xchg
adc
ds
hlt
mov
push
ss
shlb
outsl
outsb
cmpsb
sub
mov
sub
pop
ret
call
jne
pop
mov
pop
or
mov
xchg
dec
addr16
gs
fcomps
dec
and
mov
push
sub
xor
jg
pop
int
test
hlt
mov
mov
push
lea
mov
push
pop
bound
fmuls
xchg
mov
je
ljmp
mov
or
insl
pop
jo
mov
sub
pop
pop
adc
sbb
mov
xchg
lds
jge
add
ds
rorb
and
sbb
xor
mov
into
push
sarb
push
stc
add
add
sti
pop
jge
neg
hlt
add
iret
mov
add
add
mov
mov
add
and
dec
cmp
add
jp
jle
or
add
add
lods
stos
add
jno
aas
pop
nop
jle,pt
pop
mov
sbb
push
rorb
test
or
int
mov
repz
lock
cmp
lock
push
mov
add
cmp
imul
jns
add
xchg
jo
and
dec
clc
sarb
sub
mov
xor
jbe
xchg
loope
popa
jge
lcall
fisttpll
jns
push
push
cli
sbb
mov
stc
inc
push
inc
inc
adc
pop
mov
and
mov
je
mov
adc
enter
pop
jae
mov
add
out
inc
sti
sbb
out
push
popf
popa
dec
lahf
out
push
dec
insl
jnp
out
cwtl
push
mov
inc
xor
mov
mul
andb
test
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
pop
mov
add
add
mov
and
mov
push
or
push
aam
mov
mov
test
andl
add
fmulp
and
mov
xchg
inc
cmp
jnp
out
out
or
nop
dec
js
and
and
sub
test
and
mov
inc
sub
and
arpl
xor
iret
into
sub
rolb
ss
jecxz
fsubp
mov
push
push
mov
out
jbe
clc
shrb
and
ljmp
pop
cmp
xchg
cwtl
ss
push
dec
or
loope
pop
add
aad
fcoml
jle,pt
push
pop
adc
rolb
popf
scas
lods
jmp
add
push
std
dec
cmp
xor
inc
and
dec
int3
pop
test
inc
leave
inc
push
cmp
nop
leave
mov
std
scas
cmp
push
cltd
fs
data16
in
add
sub
repnz
add
jp
jnp
sti
xchg
jle
jp
lods
aas
mov
add
add
mov
into
mov
icebp
jne
adc
jnp
jno
xor
sbb
or
setnp
scas
test
cld
jae
sbb
gs
ret
and
xor
in
sti
or
pop
push
test
mov
xchg
je
cmc
subb
mov
xor
cmp
sub
pop
dec
stc
leave
jnp
ljmp
or
dec
stos
shrb
out
nop
xor
jbe
out
and
idiv
and
fmuls
sbb
loop
inc
jne
pushl
data16
xchg
loopne
pop
imul
rcll
mov
mov
mov
jp
dec
ficompl
shll
std
mov
mov
punpckhdq
fnstsw
ret
stos
scas
loopne
sbb
pop
mov
fadd
fisttps
adc
idivb
stos
push
shlb
jmp
mov
xchg
jbe
add
add
push
sti
decb
mov
or
xor
add
rolb
pop
out
mov
jg
add
xchg
stos
adc
test
mov
jno
and
cltd
shrb
in
gs
sub
dec
xor
jecxz
pop
rcrl
lds
test
mov
shl
leave
and
push
cmp
sbb
jge
js
cmp
xchg
jg
leave
imul
xchg
test
dec
sbb
cld
fidivl
push
jae
shll
movsb
cmp
mov
sahf
outsl
inc
sbb
aaa
aas
jb
pop
popa
jge
jecxz
xor
inc
mov
push
mov
sti
pop
call
add
mov
icebp
pop
xchg
pop
shlb
out
push
daa
mov
jno
mov
rclb
lds
hlt
cwtl
cmpsl
sbb
push
ficoms
cmp
xchg
addb
push
pop
out
or
imul
das
sub
inc
sub
sbb
int3
sub
xor
adc
popf
rcr
jle
add
add
cmp
xor
hlt
and
xor
add
and
movsb
dec
add
mov
int
xor
jne
mov
push
add
dec
dec
jno
aaa
jp
repz
fnsave
shlb
jb
xchg
pop
out
and
jle
dec
jecxz
imul
mov
mov
pop
cmpsl
inc
xchg
push
loope
popf
dec
cld
rol
les
sub
cmp
dec
cli
push
std
pushf
push
mov
push
into
mov
dec
mov
jo
sub
pop
dec
cwtl
pop
cwtl
or
dec
ss
xchg
push
xchg
or
ljmp
add
add
or
or
mov
lock
cmp
lcall
mov
loop
dec
lret
mov
push
rolb
and
movsb
xchg
xor
sub
mov
cmc
sahf
cmp
jl
pop
div
inc
xchg
loop
xchg
hlt
or
xor
mov
popa
lret
add
mov
out
add
add
incb
ljmp
pop
imul
lret
add
add
outsl
sub
rcl
psllq
sbb
bound
movsl
mov
xor
push
into
and
sub
adc
xor
dec
lret
das
fldl
sub
insl
mov
or
mov
jo
inc
outsl
jle
cmpsl
faddl
cltd
xchg
arpl
xchg
push
cmc
sbb
pop
mov
lods
sub
js
in
jno
mov
inc
fstl
fisttpl
mov
in
js
sbb
inc
push
push
fldenv
mov
pop
jmp
dec
test
push
lods
sahf
std
or
addr16
mov
call
jge
sarl
xchg
lods
iret
dec
fstpl
leave
push
xor
xchg
cmpsb
mov
push
cmp
push
push
shr
popa
and
dec
dec
cmc
adc
dec
adcb
adc
pop
fdivrp
fisubrs
or
out
cli
fldl2t
stos
mov
in
lahf
mov
int
shll
inc
sbb
add
add
rclb
nop
lcall
aaa
add
add
in
pop
insb
cwtl
lahf
cmp
outsl
mov
push
mov
mov
mov
xor
pop
push
sub
stos
das
ljmp
lcall
gs
inc
fadd
sbb
or
mov
jmp
xchg
lods
pop
cli
push
push
mov
xchg
imul
in
sbb
out
push
jne
lret
ds
mov
int
popa
in
xorl
push
or
cmpsb
jg
pop
or
inc
sbb
lock
push
lahf
call
les
inc
and
jp
in
cmpsl
jbe
aad
lahf
adc
leave
outsl
or
cmp
in
cmp
add
dec
mov
push
xor
dec
repnz
mov
int3
popa
push
sub
cmp
cwtl
pop
xor
adc
push
jno
push
pop
xchg
imul
add
insl
jae
push
icebp
sbb
sar
clc
xchg
ret
ds
addl
add
add
jbe
idivl
or
int3
mov
add
sub
push
in
leave
hlt
cwtl
fildll
das
outsb
pushf
out
jle
inc
pop
push
outsl
int3
xor
ret
xchg
inc
daa
jns
mov
cmc
jbe
ljmp
jl
pop
mov
imul
mov
xchg
inc
dec
push
xchg
sbb
loope
mov
aad
jbe
and
jp
lret
enter
or
adc
jmp
mov
pop
rorl
and
dec
inc
call
adc
dec
mov
xchg
dec
pusha
xchg
pop
popa
adc
xchg
insb
movl
lods
sub
call
das
inc
loope
aad
mov
outsb
repz
pusha
insb
or
adc
sahf
mov
loope
cs
mov
dec
lds
inc
jge
push
outsl
push
mov
outsb
lock
xchg
mov
ljmp
lods
loopne
mov
fdivrp
aaa
mov
shll
push
inc
jb
loope
mov
sbb
add
and
outsb
sub
stos
fs
jmp
leave
aas
push
jno
sub
cmp
add
out
dec
dec
mov
inc
or
fmulp
insl
adc
or
sti
cld
loopnew
push
rcrb
adc
dec
and
cmp
je
fsub
out
sub
js
jb
idivb
xchg
std
push
xchg
pop
out
in
inc
outsb
cmpsl
int
mov
orb
jp
push
pop
fcompl
sub
pop
push
flds
dec
fmull
movsl
pop
fidivrl
aam
mov
call
ficompl
sti
ja
mov
stc
inc
nop
pop
mov
push
and
sub
les
dec
or
pop
and
iret
movsl
stc
add
fs
popf
jne
mov
repnz
shl
jp
paddusb
cltd
in
std
mov
cmp
cmp
int
inc
pop
and
or
sahf
icebp
nop
outsb
jmp
in
adc
adc
jmp
cltd
push
sbb
add
add
insb
pop
pushf
scas
fistpll
outsl
fsubrl
fistpll
add
add
mov
cmp
cmpsb
add
fisubrs
out
enter
or
mov
pushf
xchg
inc
add
loop
mov
pop
int
inc
mov
inc
icebp
ret
mov
popf
xlat
adc
mov
jg
fidivrs
inc
in
arpl
shl
adc
test
inc
mov
mov
sub
pop
sub
out
imul
pop
mov
pop
or
rorl
and
daa
xchg
push
lahf
and
addr16
sbb
jecxz
mov
gs
and
sahf
fwait
mov
inc
xor
sub
ficompl
sbbb
jmp
mov
mov
rorb
push
adc
popa
push
sbb
xor
nop
pop
push
pop
dec
mov
scas
or
frstor
mov
adc
enter
inc
cmc
sub
icebp
loope
stos
pushf
add
sub
sbb
jnp
jnp
cmp
movsb
push
sbb
pop
adc
cmp
add
push
imul
sub
jns
pushf
loop
mov
ficoms
movsl
les
inc
mov
jae
sahf
cs
push
pop
add
inc
sti
mov
sub
outsl
mov
sahf
cltd
cmp
lods
lods
cs
cwtl
addr16
sub
lock
fsubp
clc
xchg
or
sbb
add
jle
sub
fwait
xor
out
and
ljmp
cmp
stos
cmpsl
adc
add
lret
cmp
xlat
mov
and
or
dec
cmp
sub
enter
sbb
sbb
ss
lods
mov
mov
inc
and
push
out
xchg
add
push
mov
push
adc
adc
mov
std
mov
mov
cltd
xorl
adc
xchg
jae
push
jo
js
mov
push
aad
rolb
test
dec
lea
mov
cmpl
add
adc
jmp
aad
stos
jmp
add
add
xor
jg
or
inc
push
cmp
lods
movsb
xchg
or
push
jo
sbb
ret
add
imul
shrb
popa
mov
jnp
jmp
add
xlat
cld
mull
mulb
nop
sbb
addr16
fidivl
outsb
xor
dec
rcrl
fistpl
icebp
sub
test
repz
mov
out
dec
sahf
shll
pusha
aam
sahf
clc
fildl
hlt
sar
cli
into
loope
stc
iret
sub
fnstenv
or
sar
mov
stos
jnp
into
jo,pn
xor
mov
addr16
leave
cmc
jecxz
mov
das
lods
in
mov
xor
shrl
pop
sarl
jne
mov
and
pop
cmp
addr16
aas
xor
ror
cmp
push
ret
push
test
cli
rcrl
push
inc
mov
dec
notb
stc
fstl
add
and
das
cmp
lods
repz
mov
das
test
add
add
push
lods
xchg
out
sbb
push
jo
test
outsl
lea
ficoms
loopne
int3
arpl
mov
popf
mov
dec
fnstcw
mov
and
aad
sub
inc
jecxz
jmp
repnz
leave
xor
jns
jae
lds
fs
shrb
gs
add
es
data16
lea
and
pop
dec
gs
jnp
jge
push
push
stos
mov
aas
xchg
xchg
mov
cmpsb
cmp
sbb
jmp
inc
ds
sbb
iret
push
stos
inc
xchg
pop
js
inc
shl
into
les
test
test
lods
cmp
adc
jno
jp
gs
shll
pop
jo
mov
sub
add
roll
cmp
imul
cwtl
add
aas
inc
cltd
inc
push
push
fstl
aad
cmp
mov
icebp
sub
push
bound
cwtl
imul
dec
pop
xorb
jg
and
add
add
daa
push
cld
push
std
jmp
dec
push
int
repz
add
xor
fwait
lds
fdivrs
in
dec
pop
lods
dec
jecxz
xchg
inc
fmul
mov
and
push
bt
int
push
in
jmp
mov
inc
adc
push
fwait
arpl
out
mov
pop
push
dec
into
dec
jne
pusha
lock
in
addr16
add
test
xchg
das
imul
jmp
pop
mov
jno
icebp
pop
or
sub
imul
loope
xor
mov
mov
decb
pop
mov
testb
mov
mov
xor
pop
jle
jns
dec
mov
dec
call
addl
pop
out
lods
jmp
mov
inc
push
sarb
push
in
mov
out
rcrb
test
jmp
xlat
adc
adc
mov
or
jb
push
mov
inc
xchg
imull
sbb
out
add
dec
push
add
sbb
dec
push
out
aad
fldenv
pop
xchg
aas
add
add
lret
add
pop
mov
repnz
jno
iret
clc
xchg
and
repz
and
enter
dec
nop
aad
pop
dec
add
cld
aas
sbb
xchg
fists
jae
flds
or
pop
subl
fistpl
and
pop
pop
in
aaa
not
add
push
sahf
dec
lds
mov
pop
fsubrl
aas
mov
xor
xchg
stos
loop
cmp
stos
insl
loopne
add
in
cmp
add
inc
mov
sbb
lret
dec
xchg
sub
lret
fsubl
push
push
shrl
sub
add
mov
enter
and
jge
inc
rclb
leave
pop
lret
nop
pushf
or
and
adc
ds
xor
sahf
pushl
jo
outsb
clc
add
add
idivl
or
xchg
gs
add
ret
cmpsl
out
insb
mov
or
icebp
fmul
jl
std
je
and
cmpb
and
xor
and
push
sub
push
lods
out
in
xchg
xor
ret
xchg
into
pop
xor
push
adc
jns
sbb
inc
sti
jg
sysenter
dec
out
push
jo
cld
and
insl
cld
fnsave
add
mov
movsb
push
mov
icebp
dec
sbb
push
lret
inc
xchg
sahf
or
adc
in
lcall
aaa
hlt
pushf
ds
sbb
and
rcrl
xchg
imul
push
mov
mov
and
outsb
scas
std
fs
pop
outsl
aaa
pop
inc
push
icebp
jmp
cmc
pop
je
pop
scas
sub
inc
xor
mov
mov
jne
dec
xchg
or
rcl
mov
stc
test
xchg
int
mov
jl
mov
dec
and
aas
and
push
std
and
add
mov
ja
jg
xchg
orl
jae
inc
add
add
clts
push
fdiv
mov
mov
push
pop
rorl
adc
and
out
out
hlt
sbb
push
mov
jb
sub
aam
or
mov
fistpll
dec
pop
mov
in
out
or
outsl
insb
push
jno
lods
xchg
inc
movsb
sti
push
icebp
imul
mov
inc
in
fldlg2
and
sti
mov
loope
aas
jne
pusha
cltd
xor
test
loopne
xchg
dec
stos
icebp
cmp
jl
lods
mov
movb
out
stc
mov
into
or
xchg
aam
adc
sbb
pop
xchg
cmp
fwait
ret
gs
pop
jp
cli
jl
cmpb
arpl
dec
pop
out
dec
dec
xchg
aas
xchg
sub
in
scas
push
enter
xor
push
push
cmp
push
leave
push
int3
push
aam
cmp
xlat
lea
push
pop
mov
outsb
shl
push
cmp
inc
les
adcl
fldenv
add
and
dec
lret
jmp
imul
aaa
je
pushf
aas
pop
pop
inc
add
add
cltd
jmp
sbb
sahf
int3
into
ljmp
xchg
sub
negl
movsl
pushf
test
xchg
jg
xchg
adc
fucomi
cltd
inc
enter
inc
push
les
xchg
aad
mov
aad
in
xchg
out
jnp
ja
mov
sub
dec
fadds
test
push
inc
mov
call
out
test
lcall
mov
jns
pop
xorb
faddp
ja
xchg
inc
push
mov
sub
into
lret
xchg
mov
lret
sti
push
ror
lea
xchg
push
xlat
insl
xchg
xchg
dec
popa
mov
movsl
dec
aaa
or
daa
fdivrs
xorb
dec
mov
jbe
adc
jbe
and
es
out
out
inc
push
pop
cmp
repz
sbb
ss
cmpsb
fidivs
mov
xchg
pop
lods
sub
pop
fimull
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
sahf
lahf
out
or
add
add
inc
push
xor
into
sub
adc
repz
jmp
inc
jl
subb
dec
outsl
clc
add
xor
sahf
rcrb
stc
xor
icebp
adc
push
enter
dec
or
mov
sti
push
out
pop
mov
inc
sub
inc
cs
rcll
xchg
addr16
in
sbb
repnz
aas
aas
xchg
xchg
jo
mov
cmp
xlat
xor
add
lret
jl
adc
xchg
lea
in
fcoml
mov
push
shll
mov
sbb
imul
pop
cmpsb
lds
or
dec
mov
jmp
mov
rcll
test
sahf
ficoml
sub
pop
dec
or
mov
add
shlb
adc
rolb
jmp
gs
jae
fsubl
shrb
or
push
fists
outsb
xchg
cwtl
ja
fs
inc
stos
mov
mov
mov
add
sub
jns
xor
jg
lods
stos
push
adc
add
push
loopne
adc
jle
fistps
outsb
or
stc
pop
rol
std
pop
lret
int
cli
xchg
mov
adc
mov
or
fisttpl
int
aaa
movsb
jl
das
sbbl
cmp
andb
arpl
pop
xor
mov
push
fs
pop
cli
sbb
xor
stos
push
dec
nop
sbb
mov
push
dec
addl
mov
push
test
int3
mov
or
in
adc
cld
jno
xor
inc
pop
push
mov
mov
mov
jg
dec
mov
out
jecxz
cmp
pop
sbb
lods
mov
and
jae
add
sbb
pop
inc
jne
scas
xor
mov
cvttps2pi
orb
pop
dec
rcl
fwait
add
adc
inc
mov
mov
test
xchg
xchg
jns
cmp
aam
push
add
jbe
add
inc
mov
and
jmp
add
js
ret
jg
decl
rol
jnp
dec
push
inc
add
add
mov
inc
push
shl
ja
test
push
imul
add
testb
je
push
fldenv
scas
ficoml
popa
sub
jg
pop
mov
cltd
xor
sbb
cmpsl
test
divb
lret
adc
scas
or
ret
pusha
xor
dec
scas
mov
int3
repz
fistl
loop
and
popa
loopne
mov
xchg
xor
cmp
cmp
cmp
lds
inc
in
imul
cld
xchg
int3
xor
and
pop
push
and
or
cwtl
and
jmp
lds
fwait
rolb
adc
int
inc
mov
jno
xchg
outsb
pop
mov
fdivrp
and
jle
inc
lea
push
xorl
or
ja
xor
fnsave
cmp
add
push
dec
add
add
das
mov
out
aad
dec
push
jno
inc
add
add
cmp
mov
push
pop
jne
mov
lock
es
lds
repz
mov
sarl
imul
and
and
dec
mov
rcr
xchg
mov
pop
test
sub
sarl
orb
test
cmp
sti
cli
mov
jecxz
orl
xchg
dec
fistpll
mov
push
xchg
jp
stc
jnp
xor
pushf
adc
popa
add
sahf
pop
les
xchg
stos
push
cmp
and
lret
mov
mov
mov
xchg
jecxz
daa
imul
idiv
out
aas
addr16
ds
add
aam
jl
add
dec
in
mov
sub
movsb
in
sti
jp
testb
fistpll
jmp
out
fcmove
push
dec
mov
popf
adc
sbb
fidivs
xchg
out
jge
and
movsl
or
cld
or
fiadds
out
add
add
hlt
gs
dec
adc
cli
and
add
cli
fistl
clc
gs
cmp
lock
sub
push
and
mulps
add
addb
or
pop
jb
rolb
adc
fwait
push
dec
xchg
gs
notb
leave
insb
push
push
int
add
js
jb
adc
xchg
sub
push
xlat
les
ss
lods
xor
pop
and
movsb
jle
inc
mov
xor
out
dec
movsb
inc
fwait
mov
andl
adc
imul
mov
jp
add
mov
loope
insb
add
sahf
les
in
into
cli
lods
fs
xlat
repz
clc
xlat
xchg
pop
mov
and
insb
shrl
jns,pt
mov
imul
enter
aam
into
mov
shll
insl
insb
mov
std
sahf
cltd
sub
jg
mov
and
or
sub
popf
out
lret
xlat
jp
mov
dec
lret
mov
mov
add
aas
gs
pop
repnz
dec
add
add
subb
sub
xor
in
iret
in
xorb
jle
in
cs
rcl
cli
pop
inc
push
xchg
test
mov
js
stc
cmpsl
or
sub
add
repnz
pop
dec
loope
test
loopne
and
ss
adcb
aas
cmp
call
mov
mov
aam
inc
in
jns
push
mov
xchg
push
mov
jo
push
daa
cmp
out
in
into
mov
xchg
cmpsl
lret
cmp
jp
repz
inc
mov
push
lods
bound
daa
cmp
xchg
addr16
fistpl
int
or
cltd
mov
rcl
andb
gs
xor
lea
dec
sub
add
mov
dec
add
or
xchg
mov
pop
mov
lret
xchg
rcrl
adc
cli
out
xor
mov
lret
sub
push
loop
arpl
cmpsl
call
adc
push
push
inc
shll
add
out
fisttpll
lock
hlt
sub
add
sbb
in
lahf
stos
mov
cmc
sub
std
mov
cmp
add
rcrl
clc
or
int
push
cmp
gs
shrl
sub
cmp
xor
sub
inc
roll
xor
mov
mov
sbb
dec
add
outsl
fidivrl
aas
xorb
enter
jge
imull
shl
stos
xchg
cmpb
enter
dec
nop
sbb
xor
pop
cmp
jecxz
shrl
dec
jb
mov
xchg
add
mov
fstpl
sub
inc
clc
mov
fstpt
pop
add
inc
sbb
dec
enter
push
out
dec
jmp
cmc
mov
scas
jbe
xchg
mov
push
out
sti
lcall
mov
mov
sbb
xchg
and
jle
fnstenv
loope
ret
lods
push
jb
movsl
test
lock
into
xor
jne
jbe
pop
sub
push
repnz
add
mov
ljmp
add
add
clc
fnstcw
jne
ja
or
and
dec
popl
xchg
test
jno
and
pushf
mov
jle
sti
sub
push
dec
movsl
adcb
lods
nop
movsl
push
mov
dec
and
cs
mov
insb
dec
mov
adc
mov
dec
mov
dec
lcall
cmpsl
roll
loope
dec
fists
mov
xor
mov
jbe
aaa
fsubrl
test
pop
and
popa
int
cs
bswap
add
mov
or
cmpsl
movsb
popa
das
pop
inc
fdivl
cli
jle
lret
mov
repnz
ja
test
movsb
aam
jmp
push
xor
shl
add
mov
xchg
jae
js
push
xor
mov
xor
pop
mov
lahf
add
psubusw
popf
subl
fistps
pop
test
aaa
xchg
add
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
and
in
xor
add
add
arpl
stc
aad
xchg
xchg
popl
std
pusha
mov
and
popf
pushf
popa
fldenv
inc
cvtpi2ps
into
xorb
xchg
xor
repz
or
xchg
xor
ss
or
cmp
add
mov
movsb
scas
gs
jo
negl
or
fwait
das
dec
rol
jns
xchg
popa
dec
dec
jns
sbb
sub
js
out
notl
test
sbb
lret
rcll
add
stos
push
andl
inc
xchg
fldt
push
add
or
and
loop
loop
jne
adc
push
lods
jmp
or
mov
mov
inc
in
fisttpll
ljmp
nop
js
sbb
sub
mov
sub
jmp
pop
push
push
inc
and
scas
mov
mov
ljmp
in
mov
and
mov
push
dec
ljmp
add
cmp
imul
out
mov
mov
and
add
add
xchg
dec
cmp
adc
fld
sbb
ret
mov
nop
mov
sub
lock
mov
xchg
cmp
call
sbb
movsl
push
ljmp
push
in
ds
stos
lock
push
pushf
cmc
add
repz
mov
mov
arpl
stc
nop
arpl
push
mov
movsl
aas
or
xchg
or
lcall
mov
ljmp
push
popa
scas
cmp
addb
adc
jbe
push
int
mov
out
psrld
sahf
adc
clc
gs
xchg
or
jle
rcl
adc
mov
mov
repz
mov
inc
push
ds
mov
jns
ja
insb
stos
add
adc
inc
push
into
je
mov
cltd
sbbl
sbb
add
js
add
dec
stc
mov
ljmp
ds
add
add
xchg
xchg
test
scas
dec
lcall
arpl
in
push
sahf
dec
std
lcall
mov
scas
sub
mov
inc
cli
xchg
add
or
cmpsl
idivb
orb
out
push
or
dec
pop
mov
enter
jp
bound
dec
xchg
loope
jbe
push
int
arpl
shrl
jle
insl
les
add
cmp
lcall
dec
out
xor
lret
dec
lcall
pusha
pop
xchg
loop
sub
fsubs
sbb
ret
les
xchg
stos
shlb
push
xchg
test
jmp
ret
in
add
jae
sub
sahf
leave
test
xlat
mov
outsb
mov
lret
mov
cmp
jl
mov
dec
fimull
dec
stos
mov
cwtl
cmp
ret
testl
dec
leave
add
add
jg
cld
lcall
xor
add
add
int
data16
test
cltd
repnz
outsl
cmp
insb
pop
mov
and
fs
loop
add
out
mov
cmp
jecxz
mov
aas
movsl
roll
shll
cmp
movsl
inc
ja
mov
cmpsb
cltd
pop
shl
out
scas
xchg
mov
push
sbb
dec
dec
jno,pn
jne
int
xor
outsb
xor
data16
leave
cmc
fisubl
sbb
aaa
xchg
outsb
cli
mov
dec
bound
in
sbb
les
popf
incl
adc
pop
lcall
test
aaa
sub
cmpsb
cmpsb
pushf
ja
sbb
xchg
imul
sbb
mov
sti
ret
cmp
sbb
mov
ss
loop
call
sbb
pop
push
add
cmpsb
cmp
stos
repnz
sub
push
stc
jbe
xor
adc
jl
add
mov
xchg
mov
pop
cltd
dec
add
dec
push
add
add
ja
push
xor
xor
pop
mov
cmp
call
mov
cmp
bound
mov
mov
xlat
fndisi(8087
xchg
aad
icebp
je
mov
inc
or
mov
mov
mov
cmp
pop
xor
mov
and
incb
data16
subl
shrb
or
std
cmp
sbb
out
cld
pop
jmp
pop
loop
int
cwtl
aam
fwait
jns
scas
sub
xchg
add
stos
fwait
aam
sbb
sbb
jo
xchg
xor
adc
fnstenv
push
sbb
cltd
ficoml
add
add
mov
dec
int3
mov
les
and
stc
pop
loop
pop
push
das
push
aaa
add
aas
push
ss
lcall
push
stos
bound
sahf
frstor
xchg
sahf
outsl
out
inc
or
push
lcall
dec
clc
out
std
jae
pop
xor
pusha
and
testb
add
inc
mov
push
push
jmp
push
mov
pop
dec
push
add
add
rorl
hlt
add
inc
pop
or
lret
sbbl
ss
insb
jbe
mov
mov
pop
pop
mov
jecxz
adc
data16
push
fcomip
jge
jno
and
or
loop,pt
jne
inc
out
rolb
mov
bswap
jle
scas
stos
jecxz
fstps
mov
ret
imul
sbb
mov
loope
xor
test
mov
pop
sbb
js
cmp
and
mov
sbb
sub
dec
mov
cmc
std
mov
mov
jae
fwait
add
mov
adc
inc
mov
mov
xrelease
lock
aaa
cmp
push
repnz
xchg
cmp
scas
dec
cmp
jl
dec
pop
movsb
lock
out
mov
mov
fistpll
fmull
jo
mov
sbb
stos
push
xchg
aas
notl
sbb
inc
ss
inc
mov
out
jns
dec
dec
push
cld
fcomps
mov
add
add
sub
cmp
ret
or
cmp
inc
mov
add
repz
cmc
test
mov
pop
sahf
sub
mov
sbb
push
cli
mov
xor
sub
jmp
mov
fbld
jae
inc
into
xor
loopne
push
into
push
cs
shll
or
and
ss
test
pushf
fisubs
aam
mov
repnz
jns
test
pop
repz
xor
lret
je
sbb
push
push
sub
xor
jmp
mov
xor
and
xor
loopne
inc
mov
pop
in
add
cmp
ror
add
movsb
into
fcoml
loopne
mov
out
dec
xor
cmp
and
jno
loop
jb
xchg
fs
jae
push
sbb
push
or
sub
sbbl
fistpl
dec
mov
xor
dec
pop
test
subb
add
add
push
shll
out
pop
pop
pushf
push
sti
xor
add
mov
add
daa
xchg
std
lcall
sahf
push
fnstsw
cs
outsl
sbb
pop
or
sbb
scas
fnstsw
popa
in
jne,pn
sub
cmpsb
jle
mov
jmp
lods
cmp
mov
xchg
ja
mov
aam
dec
cld
fldl
gs
jne
mov
push
roll
push
je
cwtl
aas
and
daa
out
xlat
xor
dec
jge,pn
arpl
mov
les
loope
mov
out
pushf
fcompl
int
sub
scas
pop
pop
mov
es
popa
xchg
xlat
add
rcl
jns
test
lret
leave
cs
inc
insb
cs
add
rclb
popa
dec
imul
out
and
ljmp
jns
push
mov
mov
inc
inc
pusha
imul
push
bnd
mov
xor
sbb
and
sbb
out
shlb
xor
adc
add
stos
push
lcall
hlt
mov
and
add
sbb
out
ret
push
ss
das
mov
test
shlb
das
mov
dec
sbb
arpl
adc
inc
cld
out
add
ljmp
repz
jge
je
or
add
orb
xchg
and
lds
xchg
lret
mov
nop
loopne
pusha
shlb
push
add
ja
and
mov
pusha
imul
insb
sub
mov
loopne
int
mov
adc
sbb
inc
cltd
enter
jp
lds
sub
loopne
lock
push
insb
mov
pop
loopne
xchg
loopne
inc
rclb
xor
ja
shrl
aad
sub
mov
xor
inc
dec
test
fnstsw
jecxz
mov
les
btr
add
fisubs
cld
pop
xchg
push
lods
clc
xchg
mov
push
cmpsb
cmpsl
scas
dec
mov
add
add
jbe
idiv
imul
rcrb
popa
push
add
add
mov
mov
sub
pushf
mov
mov
mov
sub
sub
mov
mov
jg
xor
and
fildl
cld
inc
mov
mov
iret
xor
jg
ret
pushf
iret
add
addr16
lods
lret
inc
out
xchg
jmp
mov
and
mov
iret
xchg
out
xor
gs
jecxz
inc
sbb
dec
mov
adc
cltd
lret
pop
es
sahf
movb
lret
and
jecxz
sbb
mov
std
fwait
add
pop
stc
mov
lds
je
rclb
mov
arpl
sub
dec
lcall
dec
push
fiaddl
out
popl
mov
dec
outsb
xor
leave
cmp
push
rcrb
hlt
push
sahf
ds
mov
das
hlt
rcrl
aad
push
or
jmp
sub
xchg
mov
loop
out
ja
xchg
add
add
fwait
cmp
stos
sarb
push
add
add
sbb
inc
es
xchg
inc
or
fidivl
jbe
out
icebp
fwait
jp
cmp
lods
push
sti
aad
je
clc
and
sbb
jae
mov
xor
jge
push
push
mov
ja
xchg
imul
lret
inc
mov
push
mov
sub
lret
frstor
lds
les
xchg
adc
hlt
in
xchg
adc
or
aaa
icebp
loope
leave
jne
push
xchg
dec
mov
fwait
inc
stos
daa
aas
push
pop
stc
adc
mov
jmp
sti
jns
inc
imul
inc
sbb
mov
fdivrs
mov
outsl
cltd
push
fwait
push
test
repnz
shll
inc
and
pushf
jp
or
inc
adc
dec
jns,pt
icebp
repnz
push
jnp
jo
test
cmp
lret
shlb
push
sbb
pop
add
add
clc
mov
and
hlt
pop
or
subl
add
sub
adc
pmullw
xor
dec
test
pop
xchg
add
lahf
lahf
push
fwait
call
push
xor
rorl
jmp
add
cmp
push
cmpsl
out
fnstenv
addl
mov
push
lods
xchg
or
cmp
pop
add
std
pop
int3
and
add
pop
ficompl
aas
xorb
jg
mov
stos
lea
daa
ss
mov
xchg
sarl
jae
xor
mov
imul
ficoml
adc
sbb
xchg
rolb
loop
push
rorb
add
mov
mov
test
add
enter
les
mov
inc
jge
or
mov
aam
mov
cmp
xchg
std
insb
test
mov
out
sub
arpl
sub
dec
fsubrl
loop
inc
sub
add
scas
xchg
push
adc
out
mov
xchg
push
insl
mov
add
repz
ss
and
leave
fdivrl
in
mov
scas
int3
stos
pop
xchg
movsb
dec
pop
jbe
movsl
cmpsl
push
jns
or
xchg
pop
push
dec
ljmp
inc
es
mov
dec
xor
dec
dec
out
popf
mov
dec
sub
sbb
jl
sub
lea
xchg
xor
pop
and
stos
mov
adc
fadds
mov
shll
test
enter
ds
sbb
push
push
inc
cmp
add
mov
and
mov
dec
pop
mov
scas
jno
sbb
pushf
test
or
loopne
mov
popa
mov
mov
mov
stc
xchg
inc
add
jle
cmp
mov
addr16
rorb
xor
movsl
push
shlb
test
or
fdivs
xchg
jb
cmp
add
add
jb
mov
mov
jbe
jno
scas
add
andb
aas
cmp
xorl
sub
int3
cmp
int
scas
push
sbb
push
cmp
cli
or
jo,pt
mov
mov
addr16
pop
xchg
pusha
ret
xorb
inc
dec
push
andl
inc
popa
mov
cmp
iret
pop
rclb
mov
pop
mov
push
shr
mov
adc
scas
or
jge
cwtl
xchg
movsl
jno
in
ds
iret
mov
sahf
fstl
pop
movsb
cmc
rcll
xchg
pop
mov
imul
lret
fmuls
and
fsubs
inc
add
adc
ret
mov
mov
pop
mov
add
out
int
mov
sbb
jno
push
cli
sbbb
cld
jp
mov
jl
mov
add
mov
and
das
cmp
pusha
mov
add
add
pop
rcr
stc
mov
ret
push
rorb
imul
mov
sbb
fs
orb
mov
and
movsb
or
or
add
rcll
or
mov
or
das
arpl
jno
sti
bnd
xor
mov
xor
cmpsl
sar
jge
xchg
lock
push
push
es
call
stos
cld
pop
sub
sbb
hlt
xchg
rorl
lods
xchg
test
insb
out
sahf
push
xor
push
sbb
inc
sbb
scas
jmp
rclb
add
repz
insl
add
dec
sub
enter
lds
mov
jnp
popa
inc
int3
xor
out
mov
bound
cmp
xor
decl
imul
mov
lret
movsb
faddl
ret
jne
mov
jecxz
rep
xor
mov
fmull
sbb
aas
sbb
pushf
aas
add
add
movsb
jae
jnp
mov
ja
mov
imul
pop
add
add
leave
popf
cs
lods
repz
in
pushf
mov
ror
push
mov
shrb
call
cmp
clc
out
stc
dec
mov
insl
movsb
dec
call
into
xor
fmull
add
test
fwait
cmp
ret
outsb
mov
pop
xchg
aad
fyl2x
cmc
jle
ds
mov
xchg
cmpsl
sbb
fwait
and
or
jl
ror
icebp
hlt
or
adc
sub
arpl
cmc
or
cmpsl
decl
fcomps
xchg
mov
sub
sbb
shr
cmp
xor
cmpsl
in
mov
repnz
pop
mov
shrb
xlat
testl
pop
lods
int
sub
ret
cltd
lock
cmpsb
rcr
incl
jb
lahf
pshufw
push
adc
push
or
add
xor
xlat
out
cld
aam
aad
pop
add
add
or
dec
jmp
stc
xor
and
pmovmskb
push
mov
mov
cmpsb
inc
sbbl
cmpsl
fidivs
xor
aaa
dec
loop
loop
hlt
insb
mov
fwait
add
roll
std
lods
pushf
hlt
mov
scas
repz
push
inc
and
mov
outsb
es
arpl
shrb
in
stc
sti
sbb
notb
ljmp
mov
and
xchg
pusha
adc
jg
ja
pop
cltd
test
aaa
lods
xor
push
sbb
popf
insb
dec
adc
test
cmc
or
adc
xor
repnz
or
add
jae
fiadds
mov
dec
lds
push
dec
bound
pushf
rcr
sub
test
cltd
in
dec
xchg
orb
enter
xchg
test
sbb
mov
and
call
add
add
mov
add
inc
stos
imul
add
add
shlb
pushf
in
jo
outsl
pop
dec
push
loopne
push
push
push
mov
icebp
dec
bound
and
dec
shlb
push
and
cli
loopne
lret
xor
or
test
fcomps
xchg
sub
jne
fmull
das
sti
test
lea
cmp
mov
mov
xor
jno
ds
and
in
ret
cmp
push
push
outsb
insl
fbld
pop
add
das
push
push
les
aad
aas
je
aaa
and
jnp
jnp
into
and
std
mov
aas
push
out
xchg
loop,pt
pop
repnz
lea
iret
orb
push
aaa
xchg
xor
js
xor
mov
es
xchg
or
inc
add
mov
mov
sbb
inc
dec
jl
pop
lds
jl
mov
mov
insl
das
int3
fildl
into
sub
add
out
into
push
push
inc
lahf
mov
mov
add
mov
sub
inc
loopne
mov
ds
mov
cwtl
dec
loope
adc
mov
sub
jb
lahf
dec
arpl
les
clc
idivl
ljmp
xor
fmull
add
mov
fstl
xchg
jb
pushf
jae
mov
mov
dec
pop
dec
push
jp
push
pop
cwtl
mov
outsl
in
imul
jmp
or
jo
mov
pop
pop
adc
cmp
lcall
stc
je
leave
sbb
add
pmuludq
lods
or
pop
or
mov
mov
adc
adc
int
inc
out
and
ljmp
ret
cli
adc
mov
clc
cmp
jb
mov
je
push
imul
and
ja
adc
add
sbb
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
les
pop
bswap
push
pop
cmp
inc
push
adc
sahf
dec
mov
jecxz
cmpsb
sahf
lea
cmp
dec
ljmp
lcall
pop
scas
lds
dec
pop
aam
fistpll
mov
mov
mov
mov
xor
mov
or
out
outsb
add
jmp
sbb
fidivrl
pop
xchg
pop
pushf
inc
sbb
jnp
incb
addr16
mov
mov
ja
sar
mov
dec
das
stc
fs
je
mov
dec
rcr
adc
scas
cld
nop
mov
xchg
enter
inc
pop
lret
jmp
addl
out
inc
sub
xchg
mov
fidivs
fcmovu
push
fwait
or
inc
insl
cmc
insb
lcall
in
mov
call
call
adc
xchg
mov
push
stc
sbb
leave
add
or
pushf
sbb
pop
sbb
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
nop
cwtl
pusha
add
add
xchg
mov
test
inc
enter
xchg
inc
or
es
pop
mov
sub
fsts
dec
xchg
push
inc
mov
pop
dec
push
fdivl
mov
in
mov
and
mov
and
xor
loope
pop
pop
xchg
jge
xor
push
xchg
jle
pop
mov
xchg
das
mov
enter
push
fildl
iret
cltd
insl
inc
mov
xor
mov
test
push
push
addl
and
pop
out
inc
jae
sub
fdivrs
jns
xchg
scas
push
sbb
dec
or
jb
bound
enter
mov
pop
test
xchg
enter
les
mov
dec
push
out
in
adc
arpl
out
mov
add
mov
mov
lods
sbb
loopne
jecxz
movsb
icebp
mov
push
push
jmp
sahf
pop
testl
fs
add
es
xor
push
inc
push
mov
xchg
cmp
outsb
pop
push
shlb
mov
inc
mov
arpl
daa
cmp
cli
push
xor
sub
mov
je
ret
cmp
push
mov
fstl
dec
into
lret
ds
and
cmp
mov
mov
inc
test
or
ret
lds
push
sahf
ljmp
fsubs
dec
movsb
imul
cmp
lret
call
pop
insb
cmp
faddl
aad
xor
xlat
xor
daa
cmp
cmp
int3
inc
xor
xchg
mov
mov
test
xlat
fidivrl
sar
out
jbe
hlt
mov
pusha
sub
push
dec
pop
pop
push
psrad
mov
sbb
scas
enter
xchg
je
cmp
jo
ret
pop
inc
xor
xchg
pop
or
ret
stos
rolb
add
inc
pop
mov
fstps
lret
out
bound
add
inc
pop
arpl
aam
jbe
xchg
ss
mov
sbb
push
out
iret
mov
inc
xchg
mov
xor
push
jmp
aad
inc
mov
mov
jmp
je
inc
rcll
push
add
lods
inc
test
aad
push
inc
jne
aam
sbbl
ret
repnz
syscall
movsl
adc
dec
mov
jb
sub
rolb
idivb
test
arpl
sti
popf
adc
fnstsw
inc
stc
inc
jb
dec
and
test
inc
in
scas
sbb
pop
cld
sub
notl
or
push
fisttpll
push
cmp
scas
int
imul
repnz
jp
xor
dec
ljmp
ret
jne
js
fucompp
cwtl
pop
nop
jg
inc
inc
cmc
imul
add
dec
inc
int3
imul
fsubrs
sub
cmp
andb
add
repnz
movsb
jle
arpl
arpl
cmpsl
arpl
add
movsl
xchg
mov
aaa
xor
pslld
add
ljmp
pop
push
mov
mov
jns
adc
aas
xchg
inc
adc
int
data16
shrl
push
pop
test
jbe
mov
mov
gs
lea
dec
outsl
xor
cld
mov
jbe
loopne
inc
push
mov
enter
pop
and
fistpl
idivl
data16
jnp
mov
jne
jmp
add
mov
xor
xchg
jge
cli
jbe
cmpsl
leave
sbb
jo
push
jmp
mov
xor
in
sub
mov
test
cmp
cmp
in
jb
daa
pop
std
cmpl
gs
or
mov
jl
mov
cmpb
push
mov
xchg
add
lods
cmp
or
xchg
fdivr
insb
sysexit
jecxz
data16
push
lcall
stos
sub
stos
out
jmp
sub
subb
lods
add
add
pop
je
dec
test
pushf
hlt
repnz
cld
push
ror
pop
arpl
movsl
test
adc
adc
sti
lock
cmc
ret
aad
movsl
test
sarb
and
sbb
pop
push
out
in
mov
or
lock
push
out
mov
sub
shrl
jmp
hlt
push
mov
and
jo
pushf
xor
xchg
daa
mov
cmp
mov
sbb
sbb
inc
sub
dec
jmp
cwtl
loopne
insb
sti
push
je
fidivrs
out
jns
lcall
jmp
mov
push
bound
outsl
int3
decl
rcrb
sbb
inc
insb
adc
cmp
rorl
stos
mov
ss
cld
xor
mov
scas
stc
mov
jp
jae
fldenv
insl
adc
sub
dec
xor
dec
je
add
add
mov
fnstenv
mov
add
add
aaa
arpl
fsubl
sarb
add
sti
add
mov
das
leave
xchg
sub
cmp
fwait
xchg
dec
cmp
dec
jge
jbe
repnz
nop
fcomps
out
or
push
pop
pushf
jns
pop
sti
jo
cli
adc
enter
test
icebp
mov
arpl
imul
cld
fwait
add
inc
test
inc
push
rclb
sbb
cmpsl
movsb
sti
ja
pop
xor
push
push
mov
mov
pop
std
or
dec
mov
push
fcoms
shl
jg
out
lock
je
scas
adc
arpl
imul
pop
push
ja
inc
cmp
sbb
fs
push
loop
es
stc
ds
outsl
andb
mov
xchg
shrb
lcall
repnz
inc
xor
mov
xor
adc
or
add
add
cld
je
jbe
jns
sbb
addl
add
or
call
push
mov
loopne
push
push
inc
push
scas
dec
pusha
aam
repnz
sbb
ss
cmp
imul
sub
stos
mov
jae
push
push
test
scas
sbb
ljmp
daa
lahf
xchg
mov
mov
out
inc
test
imull
xchg
cmpsl
std
jp
mov
aam
xchg
mov
les
test
pop
mov
mov
iret
pop
inc
push
sub
pop
pop
pop
adc
inc
fisubrs
lock
imul
icebp
or
sub
fidivl
std
xor
inc
int
adc
cmp
or
jbe
jae
nop
mov
xchg
jle
inc
push
jns
push
out
pop
int3
mov
push
xchg
cmc
jb
adc
jb
and
into
sbb
add
jl
int3
jmp
jle
loope
sbb
imul
add
add
cltd
jmp
fildl
or
aas
int3
xchg
mov
add
add
inc
inc
fdivs
jmp
push
add
into
jno
xchg
cmpsb
outsl
pop
fcoml
insb
pop
lcall
test
xchg
rcrl
cmpsl
xor
inc
and
mov
rcrb
adc
ds
sub
mov
les
jg
jns
imul
jae
inc
mov
clc
fistpll
push
imul
mov
push
scas
fimuls
sbb
jns
sbb
scas
adc
nop
push
fistpll
js
mov
pusha
push
mov
mov
jp
test
in
add
mov
lods
fadds
movsl
std
jb
jb
jle
lds
rorl
ret
inc
xor
xchg
or
daa
movsb
iret
imul
jl
fnsave
push
test
bound
fwait
pop
movsl
cmp
adc
dec
rorb
or
pop
mov
adc
aaa
sbb
pop
jp
cmp
add
add
push
jg
dec
xchg
dec
mov
push
add
xor
pop
sahf
pop
mov
mov
ss
lret
lcall
and
xchg
xor
pop
stc
dec
sub
sbb
inc
in
negl
jmp
pop
add
sbb
push
shll
ljmp
leave
js
out
sub
loopne
in
cmc
xor
pusha
jg
lret
and
and
pop
int
loope
pop
jns
ret
dec
cmpsb
lods
out
iret
dec
popa
inc
or
push
xchg
xor
or
data16
mov
pop
or
and
xor
mov
notb
xchg
ljmp
inc
xlat
and
in
push
xor
mov
aas
iret
jmp
outsl
add
dec
jl
daa
mov
dec
push
test
inc
aaa
push
mov
ret
push
jp
ljmp
push
xchg
lock
ds
cmp
add
add
mov
fucomip
push
insb
xor
movsl
cli
mov
lds
add
mov
mov
stos
pop
mov
cli
insb
pop
ficompl
inc
xchg
cmp
rcr
cli
cld
push
pushf
sub
xlat
dec
ss
jno
and
pop
xor
das
dec
jbe
stos
cmp
jne
vpsllw
or
call
xor
into
out
pusha
mov
leave
in
ss
jge
mov
sti
and
aaa
mov
mov
repz
lcall
adc
mov
shlb
scas
mov
sub
jg
mov
movlps
leave
mov
popf
stos
lret
push
mov
cmc
push
nop
lcall
in
test
xchg
in
add
mov
mov
das
rorl
jl
push
mov
mov
push
or
jecxz
sbb
add
push
cmp
and
inc
pushf
inc
sahf
and
push
inc
or
sahf
scas
sbb
in
push
addb
add
imul
dec
out
iret
jmp
aas
in
push
data16
push
and
push
add
jge
jb
mov
push
add
cmc
insb
sub
jl
lret
push
add
rorb
loope
ljmp
push
xchg
test
or
dec
mov
lods
mov
push
mov
cmp
mov
mov
adc
adc
test
xchg
or
pop
xchg
mov
xchg
xchg
or
push
jge
test
sub
mov
call
iret
inc
pop
rcrl
aam
cmp
jb
inc
pmulhw
subb
mov
sbb
out
jno
scas
int
mov
insl
inc
cld
dec
addr16
mov
inc
js
ljmp
aam
stos
xchg
and
sahf
add
repnz
jo
movsl
repz
mov
mov
sub
fildl
mov
out
mov
outsb
pop
insb
adc
adc
jnp
jo
add
add
std
cmpsb
pop
dec
sub
sub
loopne
into
iret
imul
add
not
pop
pop
ja
sub
and
lods
or
push
clc
idivl
stc
sbb
sbb
cmp
xchg
insl
sbb
ja
rol
or
mov
cmp
mov
sbb
mov
jnp
add
jnp
movsl
cmpsb
iret
pop
push
sbb
mov
outsl
cmc
into
int
shll
shll
popf
jp
sar
xorb
fisttpll
xchg
fidivrl
pop
jb
xchg
adc
fsubr
push
cwtl
xchg
mov
jecxz
mov
pop
addb
pop
insb
ret
inc
cld
dec
add
sbb
xlat
test
out
inc
pop
aam
jg
insb
int
test
jg
jae
xchg
fists
dec
mov
mov
mov
sub
push
fimull
xor
cmp
shlb
fmulp
iret
scas
sub
jns
stos
ss
dec
mov
inc
jno,pt
and
loop
clc
inc
sub
mov
xor
sub
jae
add
in
lods
imul
neg
std
sub
dec
leave
add
test
insb
add
add
aaa
or
aam
frstor
pop
cmp
adc
jno
pop
out
or
insl
mov
pop
testl
mov
pop
test
aaa
ret
mov
test
rcl
mov
pop
cmp
test
jb
aas
fadds
push
rep
nop
jge
cmpsl
add
fcomps
add
sbb
scas
mov
in
adc
pop
call
mov
rcl
push
aad
xchg
rclb
push
inc
enter
mov
in
sbb
xor
out
arpl
jg
hlt
xchg
mov
mov
jae
pop
insl
mov
sub
mov
ljmp
add
or
scas
dec
adc
or
in
mov
inc
jle
insb
int3
sarb
jmp
loope
cs
call
fldenv
add
push
subb
in
push
mov
mov
insl
add
add
jnp
pop
inc
loope
and
push
jl
jge
mov
and
xchg
cmp
sbb
inc
adc
out
js
ficoms
lahf
mov
and
std
adc
popa
and
xchg
outsl
dec
push
pop
add
std
pop
add
stos
sbb
movsb
inc
inc
xlat
mov
sub
dec
push
ss
cmp
ja
push
jns
cmp
adc
mov
pop
push
stos
ds
inc
or
mov
pop
subb
sub
or
mov
push
pop
sbbl
std
mov
mov
jp
mov
pop
or
insb
inc
jg
or
ficoms
mov
pop
roll
jmp
sbb
adc
loopne
fsqrt
in
mov
and
xchg
div
pop
add
dec
test
movsb
mov
mov
lods
cmpsl
sub
scas
mov
add
lcall
out
sbb
inc
test
outsb
add
add
jge
and
inc
mov
mov
sub
mov
sub
mov
jge
pop
jns
lret
xchg
jb
loope
aad
mov
cmpsl
inc
or
repz
add
cmc
ret
sub
pop
testl
cmp
enter
scas
adc
inc
add
sub
push
in
mov
pop
mov
xchg
or
mov
add
lods
aad
pop
cli
imul
and
notb
pop
mov
lock
lret
or
mov
scas
repz
push
aam
pop
mov
or
or
pop
aam
mov
lods
mov
fcompl
bound
shl
mov
or
roll
mov
sbb
rorl
dec
or
lret
dec
pusha
sub
sbb
insb
or
test
in
add
daa
sub
ja
mov
loope
cmp
outsl
add
add
xor
in
and
mov
cmp
pcmpgtw
pop
mov
adcl
adc
push
ss
fisubs
cmc
popf
dec
fdiv
cmp
pop
fldcw
aam
inc
xor
adc
adc
test
cli
test
shrb
mov
sub
int3
icebp
lret
cli
and
dec
scas
add
mov
sub
mov
adc
and
xor
test
repz
cmp
imulb
inc
dec
iret
xchg
call
lods
cmp
rorb
sub
ss
xor
dec
data16
xorl
outsl
ss
jmp
jns
test
sbb
inc
lret
insl
dec
xor
mov
jle
out
rcrl
les
pushf
and
xchg
dec
sbb
lock
jne
sbb
scas
and
and
pop
mov
mov
sbb
fiaddl
add
int
mov
jnp
outsl
cmpsb
loopne
push
rcrb
add
inc
clc
out
andl
sub
stc
xor
pop
or
in
iret
add
js
pop
adc
or
orb
add
mov
outsb
mov
daa
in
pop
xlat
xchg
sbb
addr16
sbb
sub
sbb
ljmp
mov
mov
stc
jbe
sub
sbb
jmp
push
push
inc
xor
mov
pop
imul
xchg
push
test
pop
jne
mov
mov
stc
pop
jg
pop
xchg
mov
push
cmp
adc
daa
mov
leave
mov
xchg
imul
enter
cwtl
lahf
mov
xchg
test
lods
mov
jo
push
or
outsb
insl
xchg
aam
xchg
popf
insb
mov
jge
push
push
or
mov
int3
cli
adc
mov
lods
mov
in
pop
arpl
cmpsl
filds
pop
leave
inc
xor
loope
sbb
add
xchg
push
mov
cli
xchg
jle
push
je
mov
adc
in
jno
add
ret
xchg
in
jmp
lret
pop
mov
inc
sub
js
int3
fdivl
sbb
enter
jne
xchg
mov
pop
ljmp
test
scas
jnp
rclb
push
inc
mov
fimuls
mov
icebp
ret
pop
add
xor
jno
fdivrp
lds
fldcw
scas
xchg
lods
dec
mov
lock
int3
mov
inc
sbb
and
dec
test
flds
js
jmp
sub
xchg
pop
lods
outsb
movsl
inc
add
into
xchg
mov
enter
sbb
ljmp
in
sahf
adc
mov
dec
iret
and
sub
int
inc
mov
mov
xchg
std
pop
mov
leave
cltd
dec
push
push
es
jb
cmc
outsb
mov
scas
clc
inc
jnp
icebp
js
sub
pop
aas
testb
shll
movsl
cmp
add
add
fwait
jnp
aad
sbb
mov
add
test
push
fs
pop
push
xor
dec
jl
inc
cmp
mov
add
add
in
scas
push
es
mov
imul
pop
inc
mov
lret
nop
lret
and
lahf
and
mov
inc
mov
adc
movsl
addb
push
pop
cmp
mov
insl
sub
mov
mov
imull
xchg
mov
add
push
push
dec
test
fwait
test
xor
inc
add
ljmp
jle
push
ds
pop
sbb
scas
sub
out
lcall
mov
xchg
arpl
adc
in
mov
les
xor
mov
fldenv
push
add
cmp
mov
sbb
mov
cmp
jo
loope
movsb
loope
cli
cmp
xchg
pop
mov
cmp
fldl
add
mov
std
mov
sub
jmp
divl
add
decb
pushl
pushf
pop
and
shlb
cmp
jmp
sbb
sub
dec
and
dec
pop
cmpsb
cmpsb
push
xor
aam
ja
mov
ljmp
ret
mov
adc
aaa
adc
sub
push
jle
mov
push
push
push
movsb
cmpl
mov
insb
sarb
daa
movsb
cmp
or
rcrb
lcall
mov
lods
adc
cmp
push
ss
clc
add
repnz
into
jo
insb
jo
div
test
or
mov
cs
pop
xor
sahf
nop
mov
out
shlb
add
sarb
les
xor
cmp
adc
faddl
add
and
mov
xor
jl
icebp
test
sub
movw
xor
mov
test
test
add
adcl
xchg
fisttps
mov
mov
cld
je
add
fst
mov
adc
add
pop
repnz
inc
push
mov
into
dec
push
xor
das
jg
aam
xchg
sti
clc
mov
push
cmp
xchg
xchg
nop
insb
jmp
into
and
cmp
dec
xchg
imul
shl
cld
and
popa
bswap
out
xchg
and
movsl
data16
leave
cmp
in
repnz
mov
xchg
sbb
push
arpl
out
fcomps
sbb
dec
outsb
inc
in
and
or
mov
adc
pop
sbb
fstpt
addr16
mov
pushf
adc
repnz
mov
inc
sbb
xchg
stos
cli
shl
adc
int
divl
mov
mov
sbb
pop
sbb
js
imul
dec
inc
or
pop
push
or
pop
pop
rclb
fdivl
adc
pop
push
callw
add
bound
sub
sbb
jbe
add
cmp
dec
pop
mov
leave
fmuls
ret
xchg
jmp
aad
xchg
jp
movsb
scas
mov
push
fcmovu
cmp
push
sahf
jle
mov
testb
dec
int
pop
pop
add
jne
emms
xchg
pop
sbb
sub
inc
add
add
out
and
pop
sub
lret
fstpl
xor
inc
fsub
int3
adc
pop
cld
jns
add
int3
jle
xchg
xchg
push
mov
or
push
jns
or
and
lret
inc
mov
pop
loop
xchg
loope
xor
dec
enter
aam
cs
sub
xor
push
es
mov
xchg
inc
xchg
xor
lahf
pop
roll
ret
lods
sub
add
pop
mov
sub
test
or
aam
xchg
negl
adc
leave
push
add
inc
shrb
in
xchg
jae
cmp
lods
nop
ja
mov
add
divl
in
sub
push
ja
add
jge
jle
mov
jl
sbb
call
and
ss
aas
int
in
jl
test
pop
mov
movsl
xchg
loop
push
data16
andl
dec
dec
dec
xchg
in
outsl
push
lret
cmp
jnp
aas
outsl
mov
subl
aam
pop
or
pusha
mov
pop
jle
cld
lock
in
mov
mov
add
movsl
cpuid
mov
popa
push
cmpsl
cmpsl
mov
xor
jp
pop
imul
pusha
daa
jnp
cwtl
mov
call
mov
lret
arpl
xchg
cs
push
jg
ret
cmpsl
inc
xchg
and
jnp
in
sbb
or
or
adcb
xchg
pop
aad
insl
les
ds
and
jne
xorl
xor
fwait
push
movsl
xor
push
enter
in
mov
xor
arpl
outsl
add
add
fisubs
mov
mov
jnp
or
add
inc
lds
cwtl
push
fsts
mov
xchg
out
add
test
jge
pushf
addr16
call
sub
std
aam
out
pop
rclb
cltd
cmp
shll
dec
add
pop
movsl
dec
movmskps
dec
into
lods
mov
out
in
scas
cmp
fsubrl
inc
shr
les
and
adc
push
xor
cld
cmp
movsl
adc
test
jno
dec
call
sub
jns
push
sahf
lock
sbb
icebp
dec
xchg
adc
cli
jl
dec
repnz
je
lock
xchg
je
shll
sub
xor
movb
mov
call
pop
mov
and
jbe
shl
push
inc
mov
or
mov
aad
jmp
pop
pushf
add
cmp
scas
loopne
mov
inc
dec
mov
divl
and
mov
cli
add
cld
bound
jbe
sub
add
shlb
mov
lcall
add
aam
dec
test
pop
and
fwait
jo
mov
xchg
std
xor
std
mov
leave
inc
cltd
mov
in
aam
test
test
scas
pop
pop
test
and
add
call
int
jns
mov
adc
sti
test
push
push
in
jbe
ss
mov
ds
lcall
leave
push
mov
addr16
ja
popa
or
ds
aad
sbb
out
repnz
add
rcll
imul
xchg
push
data16
mov
dec
jb
cmpsb
shl
pop
or
pop
out
mov
mov
mov
jge
lock
pusha
jg
inc
inc
mov
fisubl
in
pop
fisubrl
loop
push
mov
addr16
popf
pusha
cmp
pop
clc
pop
popf
sub
stos
push
inc
je
cmp
cmp
daa
popf
imul
mov
add
add
testl
rclb
add
add
int3
jmp
xchg
insb
orb
push
cmpsb
xlat
push
shrb
popf
jl
sbb
add
mov
idivb
imulb
fsubrl
jne
je
in
in
sub
mov
rcrb
call
ds
cltd
sub
jl
sub
jg
lret
movsb
xor
insb
mov
les
and
fucomip
cmc
notl
divl
inc
mov
loop
cs
hlt
inc
ret
cmp
xchg
adc
sbb
cmovp
into
inc
cltd
inc
popa
loopne
and
mov
sbb
mov
push
out
mov
jo
and
fnstsw
dec
fmulp
ret
hlt
or
js
ret
mov
mov
push
xchg
fs
pop
popa
in
pop
mov
call
rcr
jl
lods
js
sti
gs
fstps
repnz
pop
jg
pop
inc
push
cmp
xchg
iret
mov
cmp
or
aad
pop
inc
ffree
mov
cmpsb
push
jns
inc
xchg
mov
push
add
add
jo
ja
std
stos
sbb
ljmp
add
add
imul
push
shrb
mov
adc
mov
add
jmp
jne
mov
lret
inc
mov
cmp
push
ljmp
push
add
adc
sbb
sub
inc
cmp
push
xor
std
lds
xchg
aad
imul
lret
cs
mov
shlb
mov
es
mov
sti
dec
iret
stc
cmp
jns
sub
in
js
or
enter
pop
push
jg
adc
lds
rclb
jl
mov
xor
aaa
out
add
ret
sbb
push
cmp
adc
nop
and
sbb
fs
jbe
dec
std
rolb
jp
dec
cmp
mov
sub
sahf
ss
xchg
mov
ret
insl
arpl
xchg
push
pusha
mov
inc
mov
push
push
sar
mov
add
add
cmpsb
push
sbb
lcall
add
cmc
test
cwtl
fistl
sub
dec
xor
mov
pop
sbb
pop
into
scas
daa
pop
push
es
push
pop
pushf
movsb
xchg
inc
sub
sbb
sbbl
mov
jg
ljmp
mov
shlb
outsl
inc
and
jg
add
rorb
add
or
mov
mov
out
out
mov
cmp
pop
sbb
sbbb
dec
int
ss
adc
adc
dec
aaa
scas
xchg
popa
xchg
jns
inc
adc
loope
enter
cmc
mov
sub
loopne
stos
mov
sbb
ljmp
mov
lcall
iret
mov
add
mov
and
clc
popa
sub
jns
cmp
jae
fwait
popa
nop
push
iret
push
xchg
arpl
rcrb
mov
or
shrl
sbb
mov
pushf
inc
fisttpll
jg
mov
add
add
cmp
cli
mov
ds
mov
add
fimuls
sahf
ss
mov
test
test
jns
fdivr
iret
ficoms
mov
es
dec
leave
je
ljmp
jge
scas
flds
xor
test
roll
mov
sub
sub
and
jle
mov
push
dec
movsb
mov
adc
xchg
dec
jl
pop
cmp
add
mov
outsb
mov
push
dec
popf
scas
iret
shlb
push
xor
fstpl
pop
inc
push
ds
scas
nopl
jge
xchg
fnstenv
sti
addr16
orl
loopne
fwait
shll
stos
mov
push
mov
in
push
adc
test
mov
sbbb
addb
jp
aam
sbb
outsb
inc
jbe
dec
xchg
push
push
mov
scas
je
hlt
dec
lret
push
mov
cmp
mov
int
add
std
test
lcall
orl
add
add
push
in
aaa
mov
les
or
rorb
xchg
jmp
add
outsl
cmc
xor
and
mov
mov
sub
fimull
cmc
mov
add
mov
push
cmp
inc
or
cmpsb
movb
lods
sbb
nop
js
sbb
cwtl
mov
mov
jmp
xor
add
stos
push
add
stc
dec
popa
xchg
jecxz
xchg
scas
fcomi
shlb
mov
icebp
add
shr
push
mov
mov
mov
push
and
iret
mov
sub
test
aad
pusha
test
inc
xchg
pop
push
inc
insl
mov
inc
ret
mov
mov
into
subl
jno
ds
xchg
std
cli
shrb
pop
cmp
sti
sbb
insb
aam
xchg
out
mov
out
mov
sub
shrl
xchg
jmp
insb
cwtl
adc
jb
mov
add
xchg
xchg
jns
jmp
mov
xor
jg
add
mov
push
add
mov
out
aas
jmp
xchg
jno
jl
and
dec
fnstsw
sbb
aaa
push
or
cmp
mov
push
out
cmp
mov
mov
jecxz
mov
test
popf
imul
sub
push
lods
xchg
inc
call
jp
add
data16
lods
sbb
dec
sub
push
imul
hlt
pop
jnp
sbb
jmp
xchg
and
imul
mov
mov
fsubr
fwait
into
mov
xor
or
mov
xchg
xchg
add
loopne
int3
or
dec
mov
pusha
sub
adc
dec
xchg
xor
bound
aam
fnstenv
popf
lods
aas
xor
mov
stos
cmp
cld
and
nop
adc
sub
dec
xchg
sbbb
or
jno
mov
clc
mov
or
or
icebp
idivl
add
add
lcall
imulb
add
add
bnd
sti
pushf
mov
ret
mov
adc
or
adc
sub
scas
enter
insb
sub
pop
xchg
rol
dec
mov
add
dec
imul
and
stos
not
pop
das
in
fcoms
push
inc
imul
cmp
popf
inc
dec
insl
insl
xchg
add
jne
push
movl
mov
shl
sub
adc
cmp
test
clc
xor
into
popa
jl
stos
loop
mov
xor
mov
mov
xor
arpl
shrl
dec
or
stos
scas
mov
into
popa
cmp
inc
fsubp
idivb
dec
lds
pop
out
ret
or
rolb
dec
mov
cmp
into
int
push
jp
js
repnz
add
bndldx
dec
jb
jns
mov
out
add
jl
cs
idiv
jne
iret
out
cmpsb
mov
addl
add
int3
int3
lds
jne
mov
icebp
add
fdivs
xor
push
pop
or
or
dec
int
ret
pop
mov
mov
aaa
push
ja
fldenv
jle
pop
stc
inc
xchg
adc
in
inc
out
jge
repnz
adc
cmp
fnstsw
shlb
in
inc
pop
cs
xchg
sbb
rolb
ljmp
outsb
xor
mov
add
jne
mov
or
cmc
pop
movsb
andb
sbb
cmpsb
fisubrl
mov
outsb
cmp
and
in
and
cmp
and
xchg
sub
adcb
cld
pusha
je
sub
push
or
xchg
fcomps
pop
adc
test
clc
push
xor
mov
dec
lcall
mov
push
mov
sub
dec
dec
add
add
pushl
sub
scas
jno
dec
cmp
add
add
stos
dec
push
pop
ss
jecxz
cmc
push
xlat
sub
incb
adc
jnp
das
push
xor
add
push
cli
add
fwait
addl
lret
jg
repnz
aam
shrl
push
and
pop
push
fwait
push
sbbl
mov
bound
pop
jno
adc
aad
mov
and
xchg
mov
xchg
enter
mov
mov
das
dec
fildll
movsb
and
jnp
sbb
dec
push
xor
fcomps
pop
adc
sub
dec
into
rorl
xchg
mov
and
stos
pushl
in
fwait
sub
js
jne
adc
jne
in
cld
pushf
arpl
lret
imul
and
cmpl
lds
sbb
in
cli
add
sub
mov
orl
xchg
mov
xor
dec
orb
add
mov
jge
std
sti
iret
ss
push
jno
mov
mov
add
add
popf
daa
mov
aad
xchg
or
inc
outsb
push
xchg
rcrl
ja
insb
inc
mov
out
adc
dec
int
lds
pop
lahf
and
xor
mov
sub
add
mov
mov
mov
inc
sub
lods
push
lahf
jle
daa
lods
mov
iret
cmp
cmpsb
pop
pop
sub
dec
das
lea
xor
lods
shlb
sub
scas
movsl
mov
and
push
iret
mov
xchg
pusha
jp
test
push
push
cli
dec
or
icebp
jns
imull
pushf
cmp
inc
jg
dec
cltd
mov
add
inc
push
insb
pusha
xchg
fwait
and
in
lods
into
jbe
popa
inc
dec
stos
mov
jnp
dec
scas
add
popf
jbe
cmpsl
jp
jnp
popa
movsl
cmp
movsb
adc
push
insl
aaa
pop
inc
cmp
aas
cmp
cmp
dec
adc
push
imul
ds
adc
mov
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
clc
jp
inc
test
add
aam
inc
in
push
movsl
iret
iret
inc
lcall
cmpsl
shlb
dec
cmp
inc
popf
dec
popaw
shl
push
mov
out
pop
adc
dec
test
arpl
push
mov
cs
sti
mov
or
xchg
shll
repnz
adc
pop
stos
jbe
or
imul
rcll
xlat
lahf
jg
ror
dec
adc
add
dec
pop
test
cld
lock
mov
mov
dec
outsl
mov
push
das
sbb
aaa
and
mov
push
in
lcall
repnz
push
xchg
pop
popa
xchg
sahf
push
push
aas
add
aad
ljmp
addl
loopne
adc
jno
ss
aad
popf
int
add
inc
sub
and
xchg
cmp
cmp
mov
shlb
aas
movsl
aas
out
cwtl
xchg
dec
jl
ljmp
add
mov
mov
loopne
sub
add
dec
mov
out
cli
lock
fbld
jmp
inc
outsl
xor
cwtl
in
movb
jmp
es
enter
loopne
mov
lock
bound
test
xchg
popf
jge
add
mov
cmovne
adc
outsb
jnp
cmp
sbb
aas
mov
adc
data16
das
dec
push
jle
insb
jl
lret
mov
in
mov
mov
lcall
into
push
and
mov
mov
test
leave
addr16
ficompl
stc
int
adc
and
pop
xor
inc
testl
jle
xor
jle
sbb
mov
repnz
mov
dec
inc
push
imulb
out
sbb
mov
f2xm1
jne
mov
sbb
in
or
pop
inc
ret
fucomip
or
lret
xchg
lret
push
aaa
je
xorb
inc
xchg
add
add
pop
test
ljmp
lock
xchg
fldcw
push
xchg
add
mov
jmp
lock
pop
insb
mov
dec
rclb
lret
outsb
sub
daa
mov
les
dec
jbe
lods
sub
xchg
cmp
cmp
add
or
fistl
ds
je
pusha
push
ds
mov
ds
pop
mov
and
int
dec
popa
adc
mov
mov
cmpsl
mov
or
jae
add
lea
test
int
pushf
cmp
and
inc
sub
lret
xlat
pusha
rcrl
cmp
xchg
inc
push
mov
in
popa
push
jae,pn
sti
aas
lods
jnp
mov
mov
int
push
int
xor
jno
inc
in
mov
adc
sbb
aad
inc
sub
fidivs
pop
push
cmp
xchg
leave
js
in
dec
mov
xchg
inc
mov
xor
mov
jge
inc
mov
sub
inc
add
bound
mov
lea
inc
xchg
addb
jecxz
cmpb
add
imul
push
jnp
sbb
push
xor
add
add
adcl
outsl
popf
pop
cmpb
mul
pop
test
cmc
mov
ret
adc
pop
loope
out
sub
insb
dec
jg
stc
insl
mov
out
test
mov
test
mov
add
fsubrs
leave
push
pop
push
mov
lds
jmp
scas
push
add
inc
jg
jg
lret
adc
mov
adc
mov
dec
cmp
lds
stos
data16
in
xchg
pusha
push
xor
lea
lea
insl
pop
es
and
stc
test
mov
xchg
out
or
in
sbb
push
clc
add
sub
ret
mov
mov
mov
push
fs
pusha
in
mov
nop
idiv
adc
cli
in
mov
xor
add
loopne
xor
push
mov
ficomps
mov
add
icebp
sahf
jae
ss
add
dec
loopne
sbb
or
push
push
mov
inc
cmp
jne
add
add
aas
or
mov
icebp
xchg
pop
mov
add
repnz
or
aas
mov
in
add
ror
lock
xchg
xchg
pop
mov
push
loop
pop
mov
jle
js
rcr
pop
sub
lret
mov
pop
int
ljmp
loope
adc
adc
or
xor
fsubl
sub
ficomps
xchg
icebp
mov
push
push
inc
dec
enter
mov
imul
cmovae
cmp
dec
int3
mov
sahf
or
jnp
cli
outsb
test
push
pop
sub
ret
jne
mov
pop
sahf
sub
out
inc
loope
repnz
mov
jnp
inc
sub
pop
xor
lods
shl
loopne
push
stc
das
clc
rcr
mov
jns
cs
or
pop
cld
sbb
lret
sub
jnp
push
rcrb
mov
out
movsb
adcb
lds
clc
dec
mov
scas
fdivr
stc
and
lods
add
fwait
jmp
xor
push
mov
shrl
popa
nop
add
add
push
outsb
fisubs
test
sahf
test
andl
add
jno
test
inc
xor
outsl
mov
and
adc
mov
data16
cmp
push
shll
vmaxps
in
js
leavew
mov
loopne
std
push
cmp
out
mov
mov
loope
int
fsubl
jnp
stc
rcl
or
idivb
or
add
test
movsb
jmp
push
cltd
pusha
jecxz
aas
in
jae
jg
aaa
popa
jge
stc
pop
dec
dec
aad
test
rep
and
insl
push
cmp
lcall
rorl
mov
popf
mov
cmpsb
movsb
xlat
mov
mov
sub
xor
pop
cmpsl
jecxz
adc
or
inc
jg
ljmp
in
cmp
xor
mov
dec
loop
jnp
lret
loop
dec
repnz
andl
xlat
sub
and
pop
loop
jge
add
cmp
mov
jns
pop
fisubs
add
sbb
push
rcrb
loop
icebp
jae
mov
leave
lds
pop
inc
jo
mov
or
outsl
aam
cli
in
xor
aas
jg
or
jge
outsb
pop
push
or
hlt
pop
outsb
mov
pop
push
outsb
stos
mov
leave
mov
and
push
ljmpw
jne
inc
lock
repnz
not
in
out
sbb
das
ljmp
loop
lds
cmp
imul
xchg
aam
cmc
cmp
ret
imul
mov
setns
fnstsw
jge
sbb
lds
and
call
out
mov
dec
fnstcw
shlb
dec
mov
cmpsb
and
mov
xchg
pop
outsb
cmpsb
xor
repz
push
xchg
sub
outsb
push
xchg
inc
dec
decl
pushf
mov
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
incl
adc
mov
add
imul
arpl
or
shl
push
data16
xor
mov
sarl
dec
jp
out
test
mov
fs
test
jmp
inc
data16
add
imul
push
mov
cmp
sbb
es
xor
aas
cld
rorl
push
rolb
gs
lods
repnz
scas
bound
subb
inc
add
mov
mov
sub
loopne
xlat
mov
sahf
xor
adc
out
adc
xchg
fsubrs
sarb
jmp
clc
mov
out
sub
js
cltd
repz
aam
sub
notb
pop
sub
repnz
sarb
dec
or
push
lock
add
rclb
mov
mov
cmp
dec
push
pop
push
jg
sub
fdivrp
lcall
jle
jl
add
add
adc
std
out
ljmp
outsl
mov
add
test
jl
dec
jmp
dec
sub
sub
mov
stc
dec
scas
rorl
push
xlat
mov
lds
arpl
mov
cmp
loope
pop
mov
or
iret
in
push
xor
pushf
sahf
jnp
mov
jl
std
imul
jmp
pop
clc
rcrb
std
icebp
add
je
in
mov
std
repz
jmp
push
or
dec
adc
xchg
out
std
inc
test
mov
loopne
pop
into
push
hlt
push
andb
sbb
pop
or
fldcw
pop
int
adc
sub
dec
aad
mov
and
pop
and
shl
mov
fldl
mov
aam
adc
mov
cmp
xchg
test
mov
sub
xlat
and
int3
xchg
dec
out
stc
enter
inc
scas
push
mov
add
mov
icebp
ret
into
je
add
add
in
mov
bound
in
out
push
inc
push
ja
jecxz
cwtl
push
ret
jo
jge
xchg
or
mov
mov
and
jns
add
stos
push
int
dec
test
roll
mov
fsts
push
mov
mov
test
or
movsb
adc
or
call
das
rolb
dec
xor
pusha
mov
mov
push
pop
mov
jnp
fisttpll
inc
enter
adc
fistl
into
dec
int
jns
and
repnz
xor
cltd
fnstenv
inc
xlat
ds
or
loop
out
pop
xchg
addr16
std
dec
insl
mov
out
or
mov
add
bound
xchg
xchg
sbb
jnp
stc
mov
sbb
pop
inc
jae
jo
nop
mov
sbb
orb
add
stos
xchg
inc
mov
jns
pop
adc
sahf
mov
mov
add
inc
or
test
fcomps
add
gs
call
add
xor
and
and
shl
ss
popf
repz
push
sahf
sbb
mov
test
jmp
stos
cmp
scas
fwait
into
test
js
bound
scas
out
sahf
imul
mov
or
das
leave
xchg
inc
xchg
jle
js
inc
lcall
lock
ds
mov
dec
out
mov
adc
sub
dec
sub
sub
inc
dec
mov
rcl
insb
popl
aad
and
add
repnz
pop
jp
outsb
rclb
sahf
mov
inc
or
cli
pop
add
outsl
jns
or
enter
aam
sbb
jno
add
mov
cmp
pop
adc
cli
nop
in
lcall
add
and
dec
out
lock
push
pop
xchg
in
cld
fistl
inc
jle
loopne
gs
jae
mov
add
add
ljmp
dec
mov
mov
jle
add
add
std
movsb
xchg
std
jp
push
mov
adc
xchg
pop
test
cmpsb
jecxz
pop
lahf
scas
xchg
aam
inc
imul
out
and
mov
mov
loop
pop
cmp
cltd
cld
pop
cltd
adc
or
pop
inc
arpl
and
add
movsb
stc
cmp
mov
es
int3
std
xor
xlat
cli
jge
adc
mov
icebp
repz
dec
popf
sar
cmpl
stos
pop
ja
inc
out
pop
fbstp
inc
xchg
and
movsb
fisubs
add
or
out
in
or
fisttpll
mov
add
xchg
pusha
fs
inc
push
out
insl
push
cmpsb
cmp
jno
daa
pop
or
or
int3
push
ret
mov
pop
adc
push
ljmp
inc
insb
int3
adc
or
xchg
outsb
add
pop
jge
into
out
and
dec
inc
pop
pop
fdivr
or
sub
and
insl
mov
bound
add
aaa
shlb
cmc
div
testl
adc
nop
add
add
sbb
push
mov
inc
mov
dec
push
stos
cs
inc
sahf
faddl
dec
jg
pop
ds
mov
mov
and
ds
inc
dec
lods
loope
inc
pop
gs
add
sbb
mov
push
adc
pop
inc
xchg
xorl
rcrl
jb
jae
adc
inc
fcmove
mov
mov
imul
sbb
les
mov
fstl
mov
mov
nop
or
aas
xor
out
or
cmp
lret
push
das
out
addb
ljmp
inc
jo
jns
adc
mov
mov
into
scas
out
aas
jge
or
push
fs
cmp
scas
pusha
push
and
out
jmp
outsb
gs
popa
add
negb
outsb
and
in
mov
sub
mov
add
pusha
inc
jmp
push
jo
xchg
or
cs
add
add
push
sahf
rcr
pop
adcb
in
aaa
fs
xchg
add
add
sub
mov
mov
jg
xor
je
leave
sbb
aaa
xor
mov
test
cmp
xchg
mov
dec
jo
cmp
pop
ret
loop
aam
into
pop
je
repz
rcrl
mov
add
jl
test
imul
xchg
mov
adc
aam
popa
cwtl
sarb
fs
fdivp
pushf
cltd
int3
mov
test
cmp
pop
sbb
pop
stos
sbb
xchg
xchg
loope
push
xor
mov
xchg
sahf
add
mov
mov
ss
int
dec
sbbb
sub
adc
rcrl
fistpll
jmp
rcl
mov
xor
ljmp
mov
mov
lcall
xor
jmp
adc
pop
stc
cwtl
bound
adcl
xor
insb
shlb
inc
mov
add
arpl
cmpsb
jcxz
fimull
lea
add
xchg
loop
push
fsts
sbb
jmp
les
ljmp
loop
roll
push
loope
aas
int3
xorb
movsb
and
push
test
jmp
cmp
or
cmp
loope
dec
aas
fldt
repnz
in
cwtl
repz
adc
clc
mov
pop
or
mov
mov
mov
jne
or
cmpl
mov
fdivrl
cmc
xchg
psraw
bound
adc
dec
rcrb
fwait
lods
xchg
sub
cld
imul
pop
mov
lahf
jns
pop
xor
add
mov
nop
mov
push
sub
movsb
inc
pop
add
pop
pop
sbb
out
psubq
mov
divb
fnop
or
ss
sbb
scas
sbb
ret
push
fsubr
scas
js
into
mov
mov
stc
stos
sti
push
inc
test
cltd
mov
into
dec
cmpsl
cmp
xchg
pop
adcl
clc
jnp
jg
in
cli
enter
xlat
enter
xchg
add
add
ja
mov
and
push
ret
arpl
in
test
xchg
sti
enter
adc
call
mov
sub
cmpb
cmpsl
insl
pop
aas
ffree
into
dec
sub
dec
test
mov
mov
int
mov
push
fistl
mov
test
repz
cmc
pop
dec
std
daa
stc
enter
and
fwait
pop
mov
call
dec
out
jmp
add
dec
push
lret
ljmp
pop
inc
or
adc
mov
mov
std
dec
std
sti
mov
jl
push
loopne,pn
push
adc
fsubr
and
inc
fnstsw
faddp
lret
fldcw
std
sub
ds
dec
fs
cmp
dec
ret
sub
pop
scas
push
mov
xchg
in
sbb
stos
iret
lret
sub
xor
int3
arpl
xchg
mov
sbb
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
jge
mov
and
cmpl
iret
pop
xchg
fwait
out
jno
mov
loop
jg
stc
mov
sbb
pop
fwait
mov
jp
xchg
mov
mov
in
out
inc
iret
push
out
mov
dec
cmpsl
filds
loopne
daa
xchg
sbb
mov
pop
in
cmpsl
push
fcomi
cmpsl
mov
or
push
les
xchg
xchg
outsb
cmp
add
mov
icebp
divb
pop
adc
cmp
lret
xor
pop
or
inc
push
loop
jle
cmp
xchg
pusha
daa
lds
outsb
jmp
aaa
clc
iret
leave
add
rorb
pushf
cmp
cmp
dec
push
ja
cmpsl
jle
pop
mov
loopne
sub
cmp
pusha
mov
pop
pop
das
lcall
jb
fwait
mov
inc
xor
outsl
fwait
inc
mov
ds
fcoms
xchg
xchg
pop
out
cmp
mov
push
xlat
add
add
add
jl
sar
std
jle
pop
popf
scas
leave
xchg
lds
pushf
xchg
add
add
sub
adc
cmp
mov
out
mov
push
fcompl
mov
or
outsb
int
cmp
mov
out
pop
mov
mov
dec
cmp
cltd
gs
fldl
fs
or
xlat
jne
jl
push
pop
ljmp
push
leave
fsubs
ret
lods
jbe
ss
and
pop
popa
fs
sahf
or
push
inc
into
scas
and
lret
jb
jns
divl
fimuls
aaa
sub
pop
add
fstl
int3
sbb
addb
mov
hlt
fistl
outsb
xlat
xchg
add
mov
and
add
fldl
lcall
jns
das
push
fnstenv
rcrl
imul
imul
add
jp
mov
push
loopne
push
movl
fucomi
fsub
xchg
mov
add
cwtl
or
stos
xchg
cmp
in
in
sahf
xor
add
add
pushf
cmc
subl
dec
dec
rol
mov
sub
push
mov
mov
fsubs
fwait
jg
pop
lods
dec
repz
cmpb
fcmovne
icebp
ret
imul
inc
push
stos
adc
fsubp
push
pop
out
xor
test
pop
mov
cmp
and
mov
movq
stc
cmp
or
dec
testl
jnp
sti
stos
add
cmc
mov
fwait
and
inc
jne
mov
mov
in
pop
pop
addl
push
cmp
cmp
clc
cli
ljmp
mov
outsb
shlb
ds
xchg
dec
xchg
lods
shrl
xor
mov
nop
add
cmpsl
cwtl
mov
daa
test
cwtl
cs
mov
movsb
stos
leave
pop
aam
lock
data16
mov
popf
aas
imul
mov
movsl
adc
xchg
loopne
add
add
outsl
sti
mov
mov
sbb
dec
aas
cmpsb
xchg
add
add
cmp
jno
test
popf
push
mov
fidivs
xor
add
aam
addb
pop
cmp
cwtl
push
sbb
add
pop
stos
out
mov
lods
dec
jne
and
aad
fists
mov
adc
jne
mov
pop
push
inc
mov
mov
jecxz
daa
sbb
and
clc
xchg
aas
fs
push
lret
pushl
mov
pop
xchg
shrb
pop
testb
dec
push
lret
aam
lds
mov
in
xchg
mov
mov
sbb
push
addr16
dec
xchg
loope
jb
inc
addb
cs
add
mov
cmc
cwtl
mov
dec
std
fwait
jnp
movsb
fwait
roll
pop
add
jge
jl
in
clc
stos
mov
push
clc
rcrw
loope
fbstp
jg
add
jne
daa
pop
mov
sub
inc
in
jecxz
sub
fidivl
ret
push
inc
push
into
jmp
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
xchg
and
icebp
inc
lea
lods
inc
xor
ud1
pop
clc
les
add
hlt
adc
xchg
pop
xor
xchg
pushf
inc
mov
add
rolb
inc
ret
inc
aad
clc
scas
ja
dec
inc
fstp
push
push
aaa
mov
sbb
add
adc
nop
mov
push
cmpsb
adc
push
loopne
subl
lahf
pusha
je
mov
inc
jo
add
add
cwtl
xchg
xchg
addb
push
shll
pop
xchg
dec
ret
mov
movsl
repnz
sbb
fisubl
push
inc
das
jb
jge
adc
sbb
mov
jp
jp
push
lahf
popf
mov
flds
out
aas
inc
pop
es
push
data16
dec
or
pushf
or
sub
pusha
cmp
push
shlb
cltd
or
divl
test
lret
ds
sbb
sarb
cwtl
jno
pusha
xor
add
imul
outsl
vmwrite
repnz
add
add
fnsave
int3
mov
mov
mov
bound
mov
inc
pusha
and
push
sub
dec
inc
clc
fcomps
pop
mov
in
stos
gs
sbb
xorl
mov
mov
lods
push
push
cmpsl
je
stc
sbb
insb
push
push
lds
lock
dec
or
jecxz
rol
mov
sub
nop
sbb
aam
repz
test
push
cwtl
out
movsl
add
pop
mov
fidivrl
fmuls
push
loop
rcr
ss
pop
fcompp
ds
dec
lahf
jmp
fwait
or
stc
cmpsl
xchg
cmp
cmc
and
add
gs
lock
sub
cmp
stos
mov
lret
ss
rcrl
mov
xchg
jo
sahf
fistps
and
jle
add
xchg
call
or
sbb
adc
add
adc
sbbl
popl
pop
jg
lcall
push
sbb
ret
fimuls
lret
cli
xor
mov
dec
dec
xchg
push
movsb
in
adcb
in
inc
lods
into
test
movsb
cmp
popf
pop
fchs
jb
ja
arpl
or
rolb
in
repnz
jecxz
or
jmp
pop
outsl
or
lahf
into
rcrb
fiadds
mov
sub
xlat
pop
lret
sbb
inc
and
push
dec
push
push
pushf
repz
lret
xor
cmp
add
adc
mov
dec
ja
add
and
jnp
and
ljmp
addb
rorl
fs
add
and
sbb
pop
xchg
pop
jae
repnz
inc
bound
std
pop
and
mov
adc
cmpsl
icebp
sub
pop
dec
mov
inc
push
push
push
dec
lcall
cmp
add
xchg
mov
out
dec
cld
scas
pop
stc
cmpsl
popf
ljmp
add
add
imul
movsb
and
movsl
sti
popa
push
mov
add
add
ja
fldt
jle
pop
movsb
std
push
lcall
push
jp
adc
pushf
push
mov
mov
clc
inc
and
or
inc
cmp
out
js
mov
insl
mov
inc
gs
cmp
xchg
stos
lock
mov
add
mov
mov
pop
out
mov
mov
jne
pop
or
or
dec
cmpsb
lahf
push
mov
ss
ds
mov
movsl
add
sub
int
pop
loopne
push
movsb
sahf
faddl
fwait
inc
out
push
and
jmp
mov
xor
fnstenv
gs
xchg
cmp
dec
cli
mov
sbbb
mov
or
push
loopne
mov
insb
pop
dec
test
jge
rcrl
dec
mov
in
adc
fwait
xchg
sbb
mov
mov
iret
xchg
outsb
and
or
sbbl
bound
add
mov
sub
lahf
mov
xchg
inc
mov
add
add
aam
jbe
xchg
in
insl
pop
sbbl
leave
push
mov
sbb
ret
fisubs
mov
jmp
push
stos
addr16
mov
mov
pop
jno
xchg
add
jns
in
cmp
aaa
lcall
mov
insb
mov
jns
in
lahf
popa
arpl
xor
shll
loope
das
add
iret
pop
dec
addr16
rorb
sub
lret
es
rorl
dec
out
sub
jmp
dec
inc
or
inc
or
pop
sbb
ds
jecxz
leave
xorl
xchg
lret
dec
loop
xor
fidivrl
call
test
popf
arpl
xchg
xchg
xor
mov
mov
leave
mov
xchg
dec
push
out
dec
xlat
or
negb
inc
jno
bound
int
lods
out
addr16
sub
xor
std
and
push
mov
and
mov
jnp
and
stc
rolb
add
cltd
sub
out
inc
sub
or
inc
xchg
aas
les
add
pop
jo
inc
es
push
add
fstpl
das
into
cmpsb
add
and
xor
popf
orl
in
add
adc
addr16
aas
push
mov
popa
lret
movsl
sub
xchg
or
xor
popa
popf
add
ret
sub
nop
and
add
mov
and
lds
adc
mov
xor
clc
dec
pop
pop
xor
pop
add
fdivp
scas
pop
pop
test
xchg
arpl
lods
cmp
push
nop
cli
aam
mov
test
mov
sti
or
mulb
jl
cmp
sbb
inc
iret
mov
dec
loop
cmp
loopne
pop
xchg
mov
aad
sbbb
mov
push
cmp
push
ror
pop
and
mov
cmc
fbld
xor
test
sub
inc
push
mov
repnz
cs
mov
sahf
cwtl
xor
add
loop
test
mov
cld
mov
leave
sahf
add
add
adc
mov
xor
push
push
shl
sbb
ror
jno
mov
and
sub
sti
sbb
dec
js
jbe
lcall
mov
add
and
inc
inc
mov
jmp
cwtl
mov
jle
stos
cmp
jne
pop
dec
xchg
or
jno
mov
xor
mov
sbb
loop
fwait
xchg
sahf
ret
movsb
in
shlb
xor
fstpl
ds
pusha
movsl
jge
outsl
shrb
mov
faddp
movsb
sbb
test
pop
and
js
mov
mov
out
push
adc
repz
add
divl
arpl
sarl
je
bound
mov
or
xchg
aam
and
aaa
in
lods
test
xchg
out
and
pop
cwtl
jnp
xchg
adc
xor
enter
jmp
out
add
sub
outsb
adcl
movsb
push
shlb
add
or
lcall
pop
xor
add
mov
cs
shll
out
mov
push
adcb
fbld
sub
int3
xchg
xor
subl
xchg
outsb
cmpsl
lret
and
xchg
into
xor
mov
dec
inc
in
clts
imul
in
imul
pushf
sub
shll
in
sarb
aaa
or
mov
mov
inc
icebp
popa
inc
repz
mov
xchg
fcomp
mov
das
sahf
xor
dec
imul
push
icebp
js
cmp
push
mov
xor
imul
and
das
sti
sbb
inc
inc
test
inc
dec
push
cld
sub
cmpsb
jno
arpl
das
lret
or
orb
shll
add
arpl
fwait
rcr
add
loopne
inc
into
lcall
mov
pop
pop
dec
movsb
sbb
jl
pop
out
lret
cmpsl
xchg
mov
lock
aaa
mov
add
mov
inc
inc
add
mov
add
rcrb
cmpsb
mov
sbb
int3
bound
repz
nop
lret
mov
sub
sbb
mov
filds
dec
sbb
cld
test
out
adc
outsb
das
inc
adc
push
adc
mov
ret
jge
push
add
add
mov
mov
add
lret
or
and
cmpb
fldenv
lret
xorb
mov
jg
pop
ljmp
leave
call
pushf
mov
cld
sarl
add
xchg
popw
add
sahf
out
mov
mov
cli
in
aaa
int3
out
adc
js
pushf
jp
cmc
sti
or
sub
test
mov
mov
addl
nop
mov
xor
gs
fcoml
in
lea
mov
cwtl
add
int3
mov
loope
inc
mov
dec
sub
sub
add
or
sbb
inc
mov
lock
fsubs
add
mov
xchg
dec
fisubrl
or
jne
in
subb
ret
popa
into
mov
fs
pmulhuw
sub
jmp
data16
shl
xor
cmp
cld
push
or
in
push
ja
shrl
fucomip
and
das
roll
cmp
aam
leave
pop
aam
inc
in
pop
jae
popf
pop
shlb
xchg
push
inc
std
pop
shr
mov
test
or
and
mov
jp
cld
jle
cmp
scas
push
xor
xchg
pop
jne
into
push
xor
inc
gs
cmc
rcll
push
cmp
mov
add
ret
nopl
jb
lret
dec
lds
loope
jmp
jns
xor
mov
dec
loopne
out
push
lods
ss
fcompl
dec
dec
vpsubb
jbe
dec
test
mov
xchg
mov
cld
test
aas
xchg
xchg
shrb
add
push
inc
fdivl
push
dec
mov
frstor
add
das
pushf
adc
mov
mov
pop
into
and
inc
aaa
cmc
or
jnp
or
sub
push
push
jbe
pop
mov
inc
aad
cmp
jg
jle
inc
lcall
outsb
push
xor
xor
push
pop
mov
push
mov
jmp
sub
jne
test
jle
xchg
hlt
mov
lds
fisubrs
jo
jge
adc
jmp
shlb
jmp
adc
pop
in
push
dec
mov
es
dec
in
inc
mov
stc
insl
mov
fcomi
movsb
decb
insb
push
push
cltd
mov
mov
sahf
xchg
dec
pusha
sbb
jae
mov
and
push
sub
pusha
fs
inc
or
push
shrb
jg
sbb
movsl
or
xlat
imul
out
fnsave
ret
mull
xchg
mov
sbb
out
scas
sbb
add
add
sbb
mov
sbb
add
add
push
add
and
out
mov
mov
mov
mov
je
and
iret
in
mov
cli
inc
sti
mov
pop
inc
fnstenv
cli
xchg
add
lcall
cli
or
cmpsb
xchg
jne
sti
lret
daa
pushf
sub
pop
mov
sbb
out
and
popa
movsl
mov
lahf
dec
ficompl
repz
inc
inc
inc
and
loopne
sbb
pop
out
addb
inc
movsl
mov
xchg
movsb
repnz
dec
imul
adc
mov
push
lds
or
add
subl
lds
xchg
xchg
xchg
fadds
inc
sbb
cmp
test
jp
test
cmp
fcomp
loopne
cmpsl
call
add
sbb
sub
jl
mov
fsubs
sti
pop
ljmp
scas
ret
subb
outsl
add
add
stos
hlt
jmp
cmp
jbe
stos
data16
add
mov
add
sub
jle
cmc
jno
frstor
xchg
aas
jb
adc
sub
insb
stos
xchg
mov
pcmpeqb
jno
mov
outsl
ds
mov
mov
rcll
push
sbb
mov
cmpsl
cld
nop
or
pop
outsl
dec
xchg
popa
std
jle
sbb
xchg
sbb
pop
addr16
daa
mov
or
ret
pop
dec
push
cmc
inc
xlat
push
es
scas
pushf
rcll
sub
push
popa
jle
jge
xor
jecxz
and
in
inc
das
push
or
frstor
and
aas
dec
cs
loop
pushf
into
inc
dec
out
lock
mov
xor
in
sub
mov
jae
dec
adc
mov
xlat
pshufw
cli
jmp
sahf
cmp
xchg
cli
inc
into
pop
jb
xchg
outsb
fcoml
jg
cltd
push
mov
loopne
add
daa
cwtl
add
add
push
nop
out
xlat
out
jg
in
xor
jns
cmp
movsl
add
add
add
jbe
aad
es
jns
mov
inc
sub
sub
and
mov
and
pusha
mov
and
xchg
out
daa
stos
adc
outsb
lahf
lods
jnp
xor
jnp
push
in
push
cmp
adc
leave
stos
test
icebp
lret
adc
xor
jg
or
jecxz
in
sub
xchg
lcall
xchg
fld
outsb
ds
in
cmpsl
movsl
push
dec
pushf
sbb
fisubrl
cs
sub
mov
cmpsb
xor
pop
dec
push
xchg
cmp
jnp
insl
xchg
dec
mov
imul
and
and
lods
fidivs
add
push
cmc
rcrl
inc
cmc
movsl
stos
ljmp
xor
xor
out
iret
les
out
pop
lret
xlat
sbb
dec
sbb
xor
cmpsb
push
in
dec
flds
ja
mov
fcmovb
sarb
mov
add
mov
inc
fwait
lds
jo
fldl2e
pop
cmp
icebp
cmpsb
add
add
sbb
mov
out
mov
xor
repnz
xor
pushf
or
stc
loopne
pop
adc
insb
sbb
lcall
inc
cmpsb
mov
jae
icebp
cmp
adc
mov
mov
je
xchg
imulb
shl
jns
shl
mov
jno
mov
adc
bound
sbbb
mov
leave
or
mov
jb
jb
xor
lods
mul
dec
mov
push
jne
lods
xorb
mov
push
cmp
aam
jl
or
cmpsb
push
mov
cwtl
dec
pop
dec
add
dec
shrb
or
inc
es
ret
push
dec
inc
andb
int
add
rcrb
pop
push
aam
add
mov
inc
cmp
jb
jb
pop
jbe
outsl
push
cmp
xchg
xchg
pop
jmp
jne
lock
aas
jl
jae
bound
pop
jg
xlat
cmp
mov
add
lcall
std
inc
jne
adcl
add
add
ret
jns
push
add
cmpsb
rcrl
jmp
into
jbe
outsb
pop
cmpl
in
test
jno
xor
sub
addr16
loope
pop
jnp
mov
sbb
xchg
mov
decl
xor
cwtl
inc
jo
cli
shl
call
mov
ret
cwtl
xor
clc
xchg
pop
iret
dec
pusha
pop
int3
xchg
dec
dec
pushf
cmpsl
lahf
out
xchg
int3
cmpb
movsb
xchg
movsb
pop
rclb
xor
jge
add
xor
in
xchg
gs
or
dec
sub
and
les
mov
fcoml
add
mov
inc
adc
movsl
dec
xor
cmp
xchg
and
in
push
loop
push
sub
jge
mov
add
add
leave
inc
js
leave
sub
pop
xor
stc
es
inc
or
add
outsb
mov
add
mov
push
sti
jmp
push
mov
negb
push
in
sti
test
add
cltd
cmp
call
mov
cmpsb
clc
jmp
and
mov
lds
movsb
in
jp
mov
cli
stos
arpl
pop
dec
fsubs
inc
stc
frstor
cli
and
les
scas
pop
xchg
pop
cmp
mov
cmpsl
lock
enter
cld
das
mov
pushf
cli
pushf
fsubr
out
jbe
or
vxorps
rol
mov
xor
std
bound
movsl
in
cmp
push
push
jb
xchg
cs
xchg
popf
inc
and
jnp
shrl
push
add
cs
in
mov
pushf
mov
bound
mov
and
xchg
mov
inc
inc
into
in
or
xor
ljmp
out
int
lret
mov
mov
dec
dec
jmp
ja
pop
sbb
inc
into
xor
push
inc
enter
int
in
sub
lahf
cmp
mov
inc
adc
add
add
jecxz
lock
mov
add
add
push
and
mov
clc
andl
jmp
pfmax
xor
xchg
repz
dec
xchg
leave
outsb
add
jbe
cltd
pop
ds
mov
clc
pop
inc
sbb
mov
movsl
cmc
mov
xchg
fwait
mov
pop
add
test
mov
push
out
stos
or
lcall
lret
sti
mov
cmp
int
add
daa
cmp
pop
or
jno
div
xor
pop
or
nop
push
stos
add
pop
les
test
mulb
jmp
in
loope
mov
pop
jmp
cmp
jae
ret
ljmp
insl
add
sarl
dec
aaa
push
fdivl
out
add
mov
jb
lods
loope
sbb
fnsave
mov
cmp
xchg
sub
rorb
dec
mov
test
add
inc
mov
mov
sahf
cmp
xchg
mov
sti
idiv
fisubl
cmpsb
xor
out
lret
add
add
cld
mov
leave
sub
mov
add
and
adc
push
fcomps
mov
cmp
sub
xchg
ffree
adc
mov
popa
mov
nop
xchg
ja
mov
outsb
push
js
xlat
mov
and
movsb
setle
xchg
mov
xchg
mov
mov
mov
xor
mov
jns
push
je
fmuls
cmp
mov
mov
pop
hlt
dec
lcall
xchg
pusha
adc
push
add
stos
popa
and
lds
ror
outsb
sub
ret
and
mov
adc
out
xor
fadd
stc
mov
pusha
jmp
aad
bound
and
adc
testl
jl
imul
popf
mov
sub
out
push
loop
ja
mull
push
outsl
cmp
mov
jns
mov
lahf
outsl
insb
mov
int3
jecxz
adc
or
add
mov
dec
das
pop
out
cmc
mov
andl
cmp
lods
add
add
in
pop
daa
add
rsm
push
pop
cmp
jle
sub
pop
xorl
in
stos
cmp
adc
mov
or
cwtl
fidivs
mov
jo
fiaddl
mov
orl
xchg
clc
icebp
adc
dec
jne
fimull
insl
jmp
js
pop
dec
loop
mov
fldcw
pop
fs
jge
push
stos
inc
in
repnz
fwait
std
aam
jno
test
xor
loope
mov
mov
sub
outsb
test
push
or
pop
movsb
and
ret
xchg
in
lds
arpl
lahf
xor
test
data16
mov
xchg
pop
sbb
jnp
lret
xchg
mov
inc
adc
push
fstl
inc
xor
xchg
inc
inc
int3
xchg
lock
pop
leave
xchg
std
dec
clc
xor
cmc
pusha
in
mov
popf
jp
adc
pop
or
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
aad
in
shrd
add
lods
in
inc
xchg
inc
scas
dec
aad
rorl
jnp
lret
insl
lcall
push
push
call
xchg
push
test
test
aad
out
in
mov
xchg
xchg
loop,pn
addr16
pop
xchg
fiaddl
sti
scas
shr
lods
js
push
movb
mov
inc
mov
push
lcall
ljmp
jb,pn
jb
cmp
loope,pn
mov
ret
in
popa
jge
roll
fstpl
pop
int3
xor
sbb
icebp
outsl
rorb
inc
sbb
sbb
fcompl
sbb
jo
mov
adc
inc
mov
int3
pop
push
testl
fiadds
lahf
sbb
push
daa
mov
push
dec
or
lcall
push
mov
mov
in
pop
out
mov
ss
mov
or
add
add
fidivs
loop
ljmp
and
addr16
adc
add
add
cmpsl
mov
add
sub
rclb
fstps
xchg
dec
imul
cmp
nop
xchg
stos
dec
mov
dec
movb
sbb
and
and
and
and
fs
jb
mov
mov
in
mov
fdivr
jae
dec
mov
leave
jl
jmp
rol
xchg
aas
jg
sub
sub
mov
mov
add
or
sbb
cmc
mov
mov
ss
lcall
rcll
das
inc
fs
imul
jl
shlb
setge
xchg
sub
mov
repz
xchg
cmp
lods
mov
lods
pop
rcr
pop
cmp
ja
sbb
in
adc
jno
mov
repnz
xlat
jns
mov
call
jb
cmpsb
iret
aam
dec
mov
add
push
xchg
jg
jmp
std
mov
mov
sbb
add
rcl
int3
ss
pop
pop
bound
in
and
mov
and
add
push
out
hlt
je
lret
scas
jge
xchg
in
pshufw
push
mov
sbb
outsb
mov
cltd
test
sti
mov
inc
jge
sbb
sarl
dec
fsub
sahf
sbb
jnp
out
rolb
jbe
mov
ret
and
push
dec
cltd
xchg
les
das
fnstenv
adc
cmp
mov
lods
lret
or
mov
out
jae
mov
loop
inc
in
xor
mov
pop
xchg
push
pop
scas
push
dec
push
dec
in
in
xchg
pop
fsubl
das
sarl
movsl
stc
sbb
nop
add
xor
push
and
inc
add
test
cmpl
sub
sub
call
sahf
xchg
inc
jp
xchg
jmp
fmull
test
rcrb
shl
jno
rolb
add
add
xor
inc
mov
jg
push
mov
add
outsl
fcmovne
nop
add
inc
adc
add
clc
es
pop
mov
jmp
and
std
and
dec
mov
inc
fmull
mov
push
inc
sbb
mov
rcrb
mov
mov
ret
fdivs
frstor
push
loop
lret
jle
out
inc
outsl
cmpsl
mov
lds
adc
cmp
pop
rolb
dec
in
mov
lds
js
std
mov
add
sbb
decl
int
in
std
in
sub
and
mov
jmp
mov
sub
jbe
jne
mulps
cmp
cli
push
mov
int
lds
jl
clc
dec
lock
ja
jmp
es
add
pop
clc
lret
mov
xchg
insl
mov
mov
inc
mov
push
or
sub
insl
lods
jae
cltd
push
pop
data16
movsb
jns
add
push
pop
xor
cmp
inc
call
inc
and
add
out
mov
mov
testl
inc
lds
pop
aad
aaa
mov
xchg
lret
jnp
cltd
sub
or
out
testl
rcrb
das
fs
pop
mov
inc
lahf
dec
jmp
xchg
pop
pusha
adc
sti
mov
push
pop
leave
cmpb
dec
xchg
xor
call
jl
lock
stos
xchg
mov
pop
ret
xor
cmpsl
cwtl
bound
jmp
dec
mov
inc
imul
pop
inc
int3
mov
cmp
jp
push
sahf
xor
aam
mov
push
push
mov
add
adc
sub
test
xchg
les
pminsw
in
inc
cmp
and
add
scas
sbb
int3
outsb
sub
pop
insl
push
cld
cltd
push
sbb
shll
cli
ret
mov
bound
mov
jne
mov
stos
out
data16
lds
mov
add
es
les
mov
arpl
fistpl
mov
add
xchg
xchg
mov
push
lds
repnz
sub
daa
mov
jl
mov
orb
push
aaa
cmp
mov
in
icebp
ret
insb
mov
jle
or
imul
out
arpl
xchg
cmp
movsl
mov
je
out
ret
dec
in
fmull
mov
jns
stos
movsb
xor
xlat
mov
lcall
stc
jo
stos
loope
pop
jmp
jge
dec
mov
shl
adcb
fcmovbe
adc
out
and
stos
mov
jg
pop
fmul
mov
jbe
mov
inc
sub
test
fiaddl
mov
sbb
jns
arpl
test
shrb
adcl
and
adc
cli
dec
mov
in
jle
pop
inc
jae
test
add
fsts
in
dec
mov
sbb
addr16
xor
and
iret
fidivs
add
sbb
add
clc
pop
stc
out
push
pop
bound
int
mov
add
adc
adc
and
inc
aam
xchg
push
outsb
pop
or
inc
pop
or
repz
jbe
cmp
xor
iret
mov
jle
inc
imul
pop
iret
pop
ljmp
mov
mov
mov
stos
cli
insl
ficompl
pop
repnz
test
lds
fwait
stc
jp
jmp
cmp
sub
lea
jbe
addl
into
pop
popf
aaa
out
gs
push
loopne
stos
loop
adc
mov
and
adc
sbb
loopne
cltd
enter
fcomps
nop
push
rorb
out
gs
test
aad
pop
enter
xlat
mov
repnz
fwait
pop
es
push
repz
pop
push
adc
jbe
jae
adc
out
push
mov
inc
test
mov
cld
ret
and
add
add
nopl
cmp
add
lds
cli
lcall
push
xor
add
inc
lock
mov
daa
sbb
movsb
imul
adc
jb
movsl
enter
cmp
stos
hlt
loop
mov
es
shl
xchg
jl
jns
sbb
out
mov
push
fldl
add
insl
enter
cmpsl
das
rcl
cmp
popf
jne
addr16
popa
cmc
mov
cld
add
mov
hlt
mov
push
popf
inc
test
pop
jns
pusha
push
add
sub
cmp
adc
cmp
push
mov
pop
push
lods
jbe
ljmp
rcll
lock
faddl
xchg
shlb
sahf
xchg
dec
popa
xchg
rolb
inc
pop
pop
repz
push
sbb
mov
dec
adc
data16
xchg
loopne
push
pushf
rclb
adc
push
inc
pop
pop
cmp
fwait
aas
outsl
or
cli
repnz
add
daa
test
je
movsb
pop
mov
add
jne
mov
int3
insb
lret
aaa
pop
aaa
mov
add
sub
xchg
cltd
insb
adc
dec
jo
movsl
fidivrl
outsl
sbb
pop
xor
jnp
push
mov
and
cmp
cmp
jl
mov
shl
cs
cmp
pop
cmpsl
fisubs
pop
or
jle
sbb
push
xor
lea
push
mov
iret
pop
or
aaa
cmp
fwait
jnp
adc
add
cmp
cmc
xor
mov
pop
add
std
lret
ret
scas
inc
jnp
sbb
les
mov
mov
test
in
sub
push
lds
push
adc
popl
sub
fs
mov
fcomps
push
cmpsb
cltd
fwait
aas
add
js
push
dec
hlt
xchg
and
lods
sbb
pushf
mov
jecxz
jnp
sub
pop
adcb
stos
sahf
xchg
lcall
lahf
add
leave
pop
add
add
pop
sbbl
fstp
rorl
lds
add
rol
mov
jnp
sti
adc
orb
push
mov
push
icebp
movsl
adc
xor
xchg
jno
je
sub
lret
dec
loop
and
mov
mull
xchg
jmp
hlt
cmp
mov
outsb
test
push
jp
dec
jge
dec
or
jae
arpl
sti
push
std
and
inc
sbb
in
loopne
mov
sub
or
xorb
dec
mov
int3
xchg
scas
hlt
aad
popa
out
push
pop
xlat
in
lods
push
dec
xchg
arpl
jecxz
dec
sahf
mov
dec
add
inc
les
addl
movsl
adc
adc
and
dec
data16
mov
or
out
cmc
es
xchg
xorl
jl,pt
cmp
scas
sub
push
mov
inc
or
xchg
add
out
les
and
aad
icebp
sti
mov
scas
add
add
in
mov
jecxz
out
mov
fnstenv
mov
mov
add
inc
das
xor
out
roll
xchg
cltd
popf
push
pushf
push
jl
arpl
cmp
xchg
cmp
cmp
dec
les
xor
sbb
decb
or
repz
mov
data16
push
lock
jb
xchg
andb
or
ret
mov
sbb
outsl
movsl
jns
jg
adc
sbb
scas
rclb
ret
inc
in
adc
mov
jmp
mov
lret
and
rcl
cmp
notl
adc
repnz
jnp
mov
icebp
js
pop
out
xchg
mov
pusha
push
test
mov
xor
sbb
fistps
adc
xchg
or
sbb
test
dec
xchg
sti
sub
inc
in
xor
movsl
fcompl
iret
loop
xchg
adc
sub
loop
add
add
std
test
jg
into
lret
orl
add
add
and
lock
addr16
outsl
xor
mov
pushf
ret
std
add
jnp
enter
adc
inc
xchg
cmpl
insb
aad
enter
fwait
stos
enter
repz
out
js
cmp
push
lods
xchg
shlb
addr16
jg
cmp
imul
adc
subl
cmp
sbbb
clc
shrb
gs
xor
cli
cmp
cmpb
pusha
cmp
in
jnp
pop
pop
ss
daa
iret
mov
enter
pminsw
sbb
inc
dec
loope
lahf
dec
mov
mov
cld
insb
arpl
imul
dec
pop
lock
mov
cmpsl
cmp
andb
test
mov
push
push
mov
and
pushf
test
sub
add
lock
in
lcall
jae
dec
mov
cld
stos
daa
dec
mov
add
iret
cli
in
repnz
sub
test
pop
mov
dec
es
pusha
mov
push
push
mov
dec
push
jne
sub
dec
mov
out
pop
pop
add
cs
lahf
push
mov
test
adcl
inc
inc
sbb
cmp
pop
push
xchg
sub
fwait
fwait
pop
sub
mov
xchg
sub
call
ljmp
cmpsb
xlat
stc
xchg
pop
iret
repz
in
xchg
mov
and
xor
cmp
push
lds
mov
push
xchg
xchg
rcll
dec
shlb
inc
fldl
ja
mov
pop
faddl
adc
inc
add
in
divb
xor
jmp
add
mov
and
lods
push
fldln2
push
inc
sbb
shlb
xchg
inc
push
push
pop
add
add
sub
jg,pt
dec
arpl
cwtl
push
mov
add
scas
insl
out
mull
mov
sti
cwtl
mov
icebp
loope
mov
and
lcall
repz
fwait
test
int
jecxz
mov
repnz
sbb
xchg
or
in
sar
dec
mov
dec
out
sarl
push
mov
cld
stos
mov
mov
inc
dec
sbb
aaa
dec
cwtl
pop
fstp
jecxz
in
mov
leave
push
pop
xchg
mov
sti
ja
adc
out
xorl
or
repz
ret
mov
jno
in
mov
adc
pop
jecxz
stc
mov
jl
sarb
test
sbb
pop
push
scas
ds
aas
pop
je
push
adc
pusha
push
shl
fdivrs
push
mov
es
fadds
push
or
sbb
jle
lods
sete
sahf
in
xchg
cld
or
push
filds
adc
lods
repnz
cmpsl
aad
dec
aad
fstl
shl
add
insl
sbb
outsl
mov
dec
mov
add
add
pop
ror
dec
mov
mov
lret
ret
das
into
out
xchg
cmpsb
xchg
push
loope
dec
xor
jge
push
or
mov
call
aad
lea
ret
stos
insl
out
leave
stos
and
dec
pop
jno
flds
mov
mov
jbe
test
call
movsl
repnz
cmpb
dec
or
cmc
cmp
mov
std
fdivr
test
cld
fwait
ret
xor
pop
push
mov
ret
pop
mov
sbb
cmc
inc
sahf
hlt
push
dec
mov
repz
adc
cmp
adcb
adc
adc
pushf
or
lcall
add
fists
lret
xchg
inc
out
mov
sub
pop
into
sub
xchg
ret
mov
out
xorb
out
enter
push
mov
fs
mov
rorb
ljmp
add
xor
mov
pop
push
mov
xchg
pop
mov
add
out
adc
sbb
pop
adc
dec
fucomi
mov
cld
std
int
sub
xor
and
dec
mov
mov
mov
in
stos
faddl
xchg
fistl
sub
gs
dec
fstpl
push
lods
iret
lods
sbb
mov
jnp,pn
lret
dec
test
shl
loop
and
mov
outsl
inc
cmp
loop
jns
movl
add
and
sub
xchg
mov
cmp
or
les
aam
sbb
into
push
jg
jo
cs
push
outsb
cmp
pop
push
inc
mov
pushf
mov
repnz
sub
jb
or
mov
mov
sub
push
xchg
xchg
xchg
dec
adc
mov
jp
inc
pop
and
pushf
rep
sub
sarb
and
sub
xor
imul
rcll
iret
ret
add
add
fistpll
call
xchg
out
pop
mov
add
push
push
cmp
sub
adc
rclb
cltd
fcmovu
jg
dec
cmpsb
add
stos
inc
dec
sti
cwtl
pop
jmp
outsl
inc
cmc
xor
lcall
shrl
adc
movsb
in
out
je
jge
mov
add
movsl
call
and
dec
pop
xchg
push
fcmove
add
pop
and
push
or
mov
fstp
xor
lods
pop
andl
push
dec
mov
cwtl
inc
dec
push
xor
sahf
add
aad
fldt
in
fistpl
sti
fwait
popa
add
sub
lahf
loope
dec
les
or
jno
sbb
out
mov
shl
sbb
fisubrs
fimuls
cmp
sbb
sub
mov
imul
bound
xchg
adc
pop
cmp
stos
xchg
mov
leave
jo
pop
xchg
mov
repz
add
add
std
sti
leave
sti
iret
jmp
lret
jle
fs
add
sahf
pop
les
xchg
sbb
and
sub
xor
test
mov
push
jno
sbb
incb
jl
aaa
pop
mov
fistpl
xor
sub
cli
lea
push
and
andl
xchg
mov
mov
or
xchg
imul
mov
cmpb
sti
push
mov
xor
sar
insb
test
lods
cmpsl
in
fnstsw
in
jge
push
mov
ret
inc
shlb
cli
add
popa
ret
pushf
mov
xchg
daa
arpl
loope
ret
lret
sub
dec
xchg
push
jns
adc
cld
cmpsl
ror
lock
mov
in
icebp
inc
imull
loop
cmp
mov
aaa
fnstenv
add
in
aas
gs
in
fnstcw
test
mov
and
in
add
add
mov
xor
ret
push
imul
std
ja
push
loop
jne
dec
cmpsl
push
sbb
aaa
pusha
and
sub
fwait
stc
add
inc
xchg
mov
lds
push
xchg
fldcw
push
adc
jae
dec
or
int
lcall
dec
jl
loope
loop
outsl
or
pop
adcl
hlt
out
xchg
mov
sbb
or
lods
loop
mov
rorl
add
and
negl
cld
add
mov
scas
xchg
mov
out
jmp
lahf
test
adc
int3
pop
cmp
cmc
jo
jns
movsl
push
push
cmp
or
imul
ss
ss
cbtw
push
icebp
adcl
lea
pop
inc
adc
jl
mov
mov
mov
jle
pushf
cs
jg
data16
jnp
push
cltd
lret
add
and
aam
into
jne
out
inc
jmp
stos
add
movsl
add
xchg
add
jnp
neg
mov
fwait
mov
or
jg
mov
sahf
loop
hlt
add
stc
outsb
rolb
add
lahf
dec
lods
add
cwtl
insl
imul
ja
xchg
mov
mov
sahf
std
rolb
mov
pop
dec
leave
out
outsb
loopne
leave
mov
ss
cmpl
jns
dec
cmpsl
ss
mov
leave
cmc
movsb
cmpl
popf
ror
push
lret
push
mov
mov
mov
add
cmpb
call
cmpsb
push
in
lock
xlat
sahf
and
cmpb
faddl
mov
inc
lea
mov
aas
cmp
test
jle
loop
dec
sub
movsl
mov
jnp
stc
call
nop
mov
xor
insb
repz
adc
inc
lds
sub
pop
xchg
aaa
pop
xchg
orb
pop
mov
jle
ficompl
shr
sbb
in
dec
out
scas
mov
jae
aad
inc
mov
inc
xchg
in
adc
out
insb
popf
sbb
inc
add
add
inc
enter
pushl
cld
sbb
jae
add
add
xor
mov
in
push
nop
xchg
ret
sub
pop
jl
cwtl
mov
cmc
insb
orl
dec
mov
ljmp
testl
jg
les
addb
cmp
xor
insl
ds
mov
xchg
cmpsl
mov
dec
mov
inc
ficomps
inc
aam
sbb
lret
shl
ss
ds
incl
out
mov
rol
fsincos
stos
out
xchg
adc
lea
shll
movsl
mov
stos
int
fcomp
bound
into
and
lret
movsl
lock
mov
aaa
pop
pop
cwtl
je
jae
and
or
mov
inc
push
int3
inc
xor
xchg
std
dec
fisubrs
cmpsl
xchg
repz
and
and
std
jmp
xchg
lahf
or
loop
mov
sub
xlat
shlb
fwait
andl
mov
xor
add
fidivs
add
add
pushf
shrb
lcall
int
in
js
add
add
dec
jns
mov
push
es
cltd
xchg
popa
jmp
and
cmc
bound
test
adc
jb
mov
jmp
lcall
xchg
cwtl
and
sbb
leave
cwtl
insb
push
dec
enter
inc
pop
sub
jmp
and
inc
push
movsb
or
std
push
jl
arpl
or
jecxz
out
into
sbb
bndstx
aas
cmp
and
inc
arpl
pop
cmp
fists
mov
add
ret
faddl
pushf
mov
dec
out
out
icebp
jmp
sub
xor
movb
nop
jo
cld
xor
inc
xor
hlt
mov
std
negl
ds
repz
sub
ss
mov
xor
sbb
mov
fcmovb
rcr
and
pop
mov
ftst
faddl
or
xor
int3
mov
stos
inc
test
add
sub
scas
mov
aas
scas
fldenv
pop
stc
jge
add
add
inc
ss
outsl
lods
mov
arpl
int3
mov
leave
mov
mov
add
inc
dec
dec
rorb
push
xor
jne
repz
adc
jo
xor
push
test
add
outsb
sbb
shrl
es
or
sbb
adcb
repnz
addr16
scas
clc
push
cmc
aaa
lcall
push
insb
inc
mov
jo
xor
outsl
jo
pop
jp
lods
sbb
dec
or
adc
pop
adc
sar
shrb
or
inc
ret
mov
loopne
inc
call
adc
sbb
dec
pop
xor
repz
or
push
pop
xor
out
mov
scas
lds
daa
sbb
cmc
and
cmp
cwtl
inc
daa
push
dec
sub
daa
mov
repnz
fsubrs
dec
pushf
lcall
sub
cmpsl
adc
pop
mov
dec
in
pop
mov
or
xchg
mov
add
add
jne
jne
jg
loop
mov
mov
add
das
ret
js
rolb
js
scas
out
pop
mov
loopne
mov
dec
daa
jecxz
inc
bound
mov
push
xchg
movsl
loop
pop
mov
pusha
cs
mov
mov
sahf
and
dec
fucomi
sub
add
sysexit
stos
adc
cs
inc
pusha
adc
mov
mov
aas
or
mov
dec
sub
mov
xchg
lret
imul
push
fcompl
cwtl
cmpl
jl
cwtl
lods
xchg
push
je
push
ljmp
fiaddl
sarl
mov
into
fst
sti
mov
mov
outsb
sub
cld
or
lret
push
mov
jns
pop
aad
aad
lods
inc
sbbb
js
aad
cmpb
repnz
mov
xor
jae
jb
movsl
sbb
into
jg
cli
mov
sbb
sbbb
sbb
mov
cmc
mov
filds
add
add
sub
or
xor
adc
xchg
mov
ret
push
adc
mov
xor
loope
loopne
and
pop
jnp
sbb
or
sub
jne
sub
mov
ds
aaa
pop
mov
test
jo
int3
cltd
sbb
pusha
inc
aad
add
jp
je
push
int
outsb
scas
cmpb
mov
rcll
xchg
popa
sbb
mov
enter
ret
call
add
pop
cmp
das
xchg
lcall
sub
inc
pop
movsl
shrl
sti
stc
adc
cmpsb
pop
pop
sbb
mov
test
aaa
sti
add
fbld
xor
jle
or
adc
pop
xor
inc
mov
adc
leave
mov
sub
fadds
xchg
add
add
outsb
jle
lods
testl
movb
add
xchg
movsb
jle
mov
mov
mov
dec
adc
cmp
add
movsb
or
ret
sbb
mov
xor
out
enter
push
clc
sbb
cmp
in
imul
xlat
lret
fiaddl
sub
clc
inc
jle
sub
jne
dec
jb
dec
ljmp
frstor
xor
sarb
aas
hlt
sbb
cmp
in
lahf
mov
push
mov
in
mov
adc
push
arpl
in
test
das
and
or
jge
in
in
pop
enter
out
and
ss
jle
jge
pop
xor
aaa
inc
pop
test
cmp
dec
mov
mov
cwtl
fwait
sbb
inc
push
xchg
out
and
test
push
in
dec
lret
in
imul
mov
imul
ret
or
cmp
jno
add
add
mov
xchg
insb
test
xchg
aas
xchg
movl
add
pop
pop
sub
or
fdivs
push
jbe
jg
jnp
dec
dec
enter
stos
outsl
sarl
cltd
lret
cmp
rcrb
jmp
dec
mov
add
andb
or
jnp
loop
and
pop
repnz
mov
lock
in
pop
adc
mov
nop
mov
test
inc
jmp
xchg
aad
xchg
pop
jle
adc
iret
pushf
jp
jg
icebp
pusha
sbb
movl
jge
xor
sub
pop
jnp
mov
daa
out
xor
shll
jecxz
rolb
pop
movsb
loopne
pop
aas
pop
add
loope
sub
cld
sub
sti
pop
ds
or
sbb
xchg
inc
rorl
sbb
aas
scas
ss
xor
fwait
inc
sbb
sbb
push
adc
hlt
add
cld
xchg
pushf
mov
iret
inc
adc
cltd
cmp
or
inc
xchg
data16
add
add
out
sti
xlat
in
aad
lods
mov
xchg
enter
add
add
jmp
scas
sbb
jge
and
psubsb
movsb
call
lea
push
mov
iret
fidivrl
inc
aas
arpl
in
aas
sub
int3
lret
outsb
rcrl
outsb
mov
leave
jno
xchg
leave
rcrb
gs
sub
rcll
clc
rcll
lods
mov
hlt
mov
out
and
test
out
adc
jbe
adc
dec
xchg
popa
cmp
push
mov
mov
mov
pop
or
push
xor
jb
push
mov
inc
cmp
out
addr16
aas
mov
push
xorl
sub
shll
incl
pop
add
cld
adc
ds
inc
insl
jge
icebp
sbb
rol
dec
into
iret
or
out
cmc
push
aas
mov
outsb
sahf
rcll
jecxz
enter
insl
xor
fldt
jno
adc
aam
add
add
push
sub
cmp
jg
and
mov
adc
pop
xchg
add
add
enter
inc
xor
dec
pusha
mov
mov
and
fistl
dec
sbb
push
not
inc
rcll
jno
scas
cmp
inc
dec
popf
shlb
std
shrl
addr16
pop
add
mov
sub
lcall
mov
dec
imul
fstl
adc
and
or
adc
jno
adc
mov
fs
jae
cs
cmp
add
pop
test
and
sti
jnp
ja
jnp
pop
fwait
lret
rcrb
xor
add
rorb
or
cmp
jo
iret
scas
fstpt
sub
repz
mov
sbb
or
add
or
lds
das
lods
adc
int3
ljmp
in
cmp
add
int
fstps
scas
cmp
imul
andl
sar
out
shrl
push
xor
imul
push
mov
and
mov
add
add
xor
fistpll
out
repz
fcoms
xor
ljmp
add
add
cmp
dec
and
pop
adc
inc
pop
push
repz
jne
jle
sti
adc
roll
mov
jnp
sub
or
xchg
int
sub
ret
inc
dec
addr16
jne
xorb
loope
mov
sbb
sbb
inc
aad
fwait
test
nop
lcall
daa
mov
in
lea
scas
test
dec
cmc
inc
test
sbb
les
push
jne
std
shlb
fsub
rol
push
fcomps
or
incl
in
mov
out
ss
pop
xchg
mov
imul
or
push
insl
sub
loopne
xor
je
bound
mov
in
lret
mov
xor
inc
mov
cmpsb
mov
jbe
mov
cmc
lods
stos
push
rcrl
push
push
dec
mov
scas
stos
cmpsb
rolb
add
mov
mov
mov
jno
mov
add
in
pop
pop
push
mov
mov
negl
adc
cltd
pop
adcl
mov
cmpsb
inc
dec
fstl
popa
xor
scas
lcall
mov
dec
lahf
inc
cmp
loope
mov
mov
pusha
scas
imul
pop
dec
push
inc
testb
cli
repnz
fstpt
or
and
test
cmp
repz
inc
test
mov
cmp
ror
mov
mov
xor
popa
aaa
test
repnz
imulb
test
sub
lahf
pop
movsl
loope
pop
adc
pop
inc
sub
dec
or
jne
jp
gs
iret
xor
adc
xor
aaa
lods
jne
ret
dec
cltd
std
in
cmp
jl
data16
cmp
cmpsl
adc
popa
in
fildl
into
mov
int3
jbe
inc
and
nop
add
add
enter
in
sbb
push
inc
leave
inc
les
stos
int3
add
add
arpl
xchg
je
repz
lahf
hlt
xor
inc
adc
das
andl
pop
jb
mov
sbb
aaa
add
cmp
jb
jb
push
mov
push
cmpsl
sub
das
sbb
jb
out
mov
stc
xchg
ss
dec
popa
pushf
testb
or
loopne
dec
dec
cmp
in
xchg
aaa
pop
in
pop
sti
mov
push
nop
sub
je
aas
xchg
dec
cld
movsb
pushf
imul
sub
lods
shll
xchg
jecxz
enter
pop
cmp
adcl
or
in
or
std
test
das
scas
addr16
add
lods
repz
movsl
and
xor
jl
sbbl
test
push
pop
in
cs
outsl
pop
loopne
stos
inc
push
mov
divl
stos
inc
outsl
xchg
int
mov
xchg
js
sub
aaa
push
mov
mov
mov
add
imul
cmc
call
inc
push
popa
aas
mov
add
add
mov
cmp
or
xor
cmp
adc
cmpsl
inc
gs
mov
fldt
jno
pop
gs
mov
jp
jb
inc
xor
cmp
adcb
test
sahf
add
sbbb
or
sub
pop
add
popf
mov
call
mov
movsl
pop
out
lret
mov
test
fcmovnu
xchg
test
rclb
fimuls
dec
and
stos
sbb
les
push
jge
mov
loopne
pop
mov
add
repnz
lcall
xchg
test
or
jne
lret
push
sbb
jne
lcall
pushf
cmp
outsl
fmull
adc
jae
in
cs
aas
dec
lock
in
add
xchg
fldz
inc
inc
loope
cmpsb
rcrb
or
sbb
mov
scas
adc
and
mov
pop
out
addl
add
movsl
mov
iret
sub
sbb
int
into
add
add
push
cltd
test
cld
enter
mov
jae
xor
imul
pop
sub
faddl
orl
mov
fildl
lods
test
inc
jge
and
cmp
in
adc
jge
adc
sub
inc
mov
or
inc
mov
pop
push
scas
fnstenv
lret
call
int
into
cmpsl
es
test
sti
mov
fnsave
dec
movsb
negl
push
popa
pop
call
sub
jl
pop
orb
xchg
sub
icebp
dec
es
stos
xchg
xor
push
popf
imul
dec
adc
jmp
push
sahf
dec
cld
inc
cld
popf
add
repz
icebp
jo
outsl
sbb
mov
les
cltd
in
sbb
mov
mov
mov
jg
xchg
shll
add
stos
sbb
fwait
popf
mov
nop
xchg
sbb
add
add
out
into
gs
cld
test
stos
lret
iret
add
add
clc
mov
mov
cmpsb
lock
lret
lea
aas
sti
testb
insb
orl
push
movsl
repz
pusha
or
sub
mov
mov
xchg
sbb
lret
or
movsl
xor
mov
test
ret
fs
stc
push
push
adc
sub
pop
xor
xchg
fwait
mov
jnp
pusha
or
xchg
aaa
cmp
jns
sbb
mov
push
mov
cmp
or
jmp
mov
cmp
popf
mull
test
jmp
dec
movsb
mov
xchg
cmc
mov
mov
std
pushf
mov
inc
subl
idivl
xchg
mov
rorb
add
sub
dec
adc
cld
push
sbb
mov
in
in
scas
call
dec
icebp
pushf
mov
pop
int
sub
shll
push
adc
sbb
pop
or
test
mov
stos
mov
and
xchg
add
add
xchg
and
je
out
mov
xlat
or
daa
mov
add
add
into
fsubrs
or
xor
fdivrl
lret
cmpsl
push
mov
and
xchg
cltd
cmp
aas
fsubp
push
popa
scas
jecxz
lods
mov
iret
mov
repnz
bound
test
pop
inc
dec
daa
scas
outsl
ds
xchg
outsl
xor
add
stos
mov
sbb
cmc
sbb
lods
enter
jnp
push
xchg
xorl
cmp
push
jmp
mov
mov
call
xchg
mov
or
rorb
dec
mov
xchg
pushf
je
ret
ss
in
mov
aas
insb
dec
les
mov
je
add
xor
arpl
lcall
sahf
data16
scas
xchg
mov
out
mov
call
xchg
dec
pop
push
fsubrp
mov
mov
mov
jo
test
popf
xchg
nop
mov
lods
mov
sbb
mov
ret
mov
xlat
and
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
addr16
mov
add
add
push
mov
sbb
and
cmp
add
xorb
and
xchg
lods
mov
shll
scas
mov
sbb
cwtl
push
arpl
rcrb
dec
jp
out
mov
and
and
rcr
dec
xor
out
aad
mov
xchg
xchg
das
mov
xor
cld
lahf
sti
mov
stos
cmp
xlat
mov
mov
cmpsb
mov
mov
dec
mov
adc
adc
ss
fiadds
movl
fs
cltd
nop
or
cltd
push
jns
cwtl
adc
aam
mov
dec
or
jge
xor
inc
mov
pop
mov
ss
jmp
push
push
adc
mov
sbb
jg
inc
mov
clc
or
je
add
fidivs
nop
movsl
fwait
hlt
das
test
andb
add
call
out
lahf
ret
or
rolb
add
fdivrs
push
and
sbb
pop
aas
fimull
sbb
scas
push
adc
sub
mov
scas
fnstcw
mov
std
sub
lods
mov
in
sbb
aas
repnz
and
pop
jae
jl
sbb
movsb
loopne
roll
das
push
pop
jge
adc
jns,pt
add
cltd
xchg
mov
add
das
cmpsb
push
aas
add
in
push
rcrb
fwait
mul
pusha
adc
jge
pop
test
and
sub
push
fidivl
lea
fmulp
lret
or
push
sbb
lds
add
cs
das
ret
sub
adc
xor
jae
fwait
dec
jge
gs
scas
cmp
ja
cld
stc
push
stos
sbb
xchg
imul
mov
ret
notb
repz
and
push
fldl
aad
mov
pop
dec
mov
repz
mov
je
arpl
mov
pop
add
add
neg
outsl
push
xchg
or
roll
add
lret
push
mov
push
dec
cmc
scas
ret
cmpsl
lahf
add
pop
aam
mov
xor
push
outsl
mov
enter
cs
jbe
pushf
arpl
mov
xchg
cwtl
dec
pop
pop
jge
rclb
inc
adc
in
cmp
insb
xchg
sub
jbe
shll
lds
stos
adcl
push
dec
into
sub
dec
pop
inc
xchg
add
fiaddl
mov
mov
sub
into
inc
fisttpl
jo
adc
std
add
data16
fsts
mov
adc
pop
mov
aam
negb
pop
cli
mov
lock
or
jae
and
add
mov
or
daa
jl
xchg
stos
loopne
push
xchg
lcall
filds
pop
push
ret
mov
hlt
mov
in
fcomi
mov
pop
cld
xor
std
add
add
add
sbb
sub
dec
movsb
dec
push
push
rcl
add
add
cmp
movsb
pop
lret
mov
fdivp
test
cmp
xor
rcrl
dec
out
mov
stc
shrb
push
inc
jl
frstor
in
jae
inc
pop
push
call
imul
pushf
mov
xor
mov
pop
lret
xchg
jae
xlat
in
nop
leave
je
mov
dec
mov
and
scas
insl
dec
fdivs
leave
ss
test
mov
pop
repz
bound
into
adc
ss
das
sbb
movsb
sahf
jle
scas
jmp
jbe
fcomi
jbe
in
pop
and
out
aaa
lods
dec
data16
insl
mov
fsubrs
cli
je
inc
std
inc
sub
cmc
inc
jo
jg
jecxz
popf
and
jge
fdivr
add
xchg
xor
dec
xlat
sub
xchg
dec
push
sbb
loope
mov
dec
and
rcll
xor
movsb
nop
xor
and
imul
add
ds
jae
sbb
xlat
aad
add
paddsw
iret
movsb
sub
cmc
sbb
xchg
in
cld
ret
mov
inc
pop
testl
outsl
shrb
fdivrl
xor
xor
and
leave
ss
out
dec
int
inc
negl
test
std
cmp
mov
jp
or
sbb
je
cli
std
imul
aad
nop
lds
cmp
es
js
add
test
nop
jle
ficompl
hlt
fwait
jnp
cmp
test
jmp
cmp
inc
aaa
inc
cmp
sbb
mov
jns
sub
popa
xor
mov
divb
dec
cmp
loopne
jl
push
shl
movsl
sbb
divb
fdivrs
out
fsubrl
inc
push
cmpsb
into
fsubrp
lret
and
push
sub
sub
outsl
adc
xorb
arpl
sbb
shld
or
dec
or
daa
mov
add
lcall
jnp
jnp
test
add
add
fisttpl
fnstsw
add
or
inc
add
sbb
xchg
lret
rcll
mov
pusha
movsl
nop
adc
inc
dec
inc
inc
or
push
mov
push
adc
adc
push
cwtl
dec
push
repnz
loop
mov
in
inc
int3
mov
fcompl
lahf
leave
and
inc
sbb
cltd
setge
std
xchg
jnp
in
ss
call
xor
adc
add
or
cvtdq2ps
add
bound
rcr
stos
pusha
inc
xchg
je
imul
dec
dec
cmp
jbe
push
add
out
mov
in
les
dec
jp
or
or
pop
pop
mov
xor
daa
sub
inc
fisttpll
ljmp
mov
xchg
out
clc
clc
pushf
aad
rcrb
clc
out
sbb
loopne
ljmp
mov
jne
sub
add
cmp
jg
leave
or
push
push
add
add
int3
or
mov
in
inc
fwait
test
int
sbb
or
dec
mov
insl
pop
jmp
and
dec
sub
jns
mov
or
jne
mov
aad
jo
mov
push
pop
cmp
pop
rcl
ja
aaa
jle
nop
push
insb
jmp
inc
popa
outsl
clc
mov
ljmp
ss
and
cld
sub
mov
add
stos
les
or
es
ret
add
fstp
pop
sbb
dec
sub
stos
popl
add
dec
inc
ret
sahf
fadds
repnz
int
ret
jae
jle
mov
sti
mov
call
imul
lods
dec
in
or
outsb
inc
in
fxch
push
and
or
hlt
imul
and
jle
in
jb
cld
mov
mov
adc
add
add
int
out
out
imul
nop
xchg
movsb
lock
inc
sub
fadds
add
jae
aaa
add
push
idivl
jl
hlt
xchg
inc
int3
stos
sbb
mov
outsl
loop
fwait
daa
out
inc
cmc
fldcw
je
adc
minps
iret
int
dec
and
rclb
pusha
leave
inc
inc
data16
fwait
lock
mov
jbe
test
dec
loopne
mov
sbb
test
gs
mov
aad
or
push
lds
push
mov
frstor
xchg
cmp
mov
mov
push
sub
sbb
mov
xchg
mov
sbb
popf
push
push
jbe
addb
lock
inc
lret
cmp
rclb
sub
fdivrl
lods
ljmp
ds
jo
lcall
add
pushf
or
stos
mov
scas
add
shll
lcall
stc
outsb
add
pop
pop
out
mov
jmp
sbb
add
out
fldcw
push
in
sub
jns
flds
add
imul
mov
out
xchg
pushl
xor
sub
jb
testl
dec
cmpsb
jno
xchg
insl
iret
and
aas
rclb
je
push
add
and
lods
out
adcb
mov
mov
pop
dec
dec
shr
in
not
adc
mov
adc
fiaddl
mov
jle
mov
sub
aaa
bswap
imul
or
hlt
js,pn
mov
jae
dec
mov
mov
ds
pop
inc
lods
inc
push
sub
in
mov
xchg
xor
dec
loopne
in
cs
xchg
in
push
pop
movsl
xor
push
push
xchg
inc
xor
mov
clc
xor
push
ret
ss
rcr
jns
outsb
mov
xor
jecxz
mov
test
test
add
cmp
out
testl
pop
mov
arpl
lahf
mov
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
enter
add
add
int3
sub
cmp
push
pop
ss
test
fadd
or
pop
aas
leave
jge
xor
push
xchg
adc
fisttpl
lds
xchg
cltd
add
jge
in
inc
pop
inc
cmp
inc
out
pop
add
cmp
mov
orb
sub
imulb
adc
mov
out
js
add
mov
cld
mov
pop
pop
arpl
jnp
ljmp
xor
dec
dec
adc
adc
cld
mov
inc
notl
xchg
jo
mov
lods
push
add
hlt
aas
xor
inc
orb
out
js
movsb
ljmp
fiadds
xor
test
pop
xor
int
mov
xchg
and
cmc
and
gs
enter
mov
call
sub
inc
pop
adc
fwait
or
stos
lea
pushf
sub
outsl
add
add
jle
jg
std
fstpt
jbe
fildl
add
pop
dec
mov
push
pop
int3
sbb
out
test
imul
push
jne
xchg
cmp
hlt
addr16
inc
xchg
cmc
fcoms
xchg
push
add
adc
xchg
mov
sbb
mov
in
add
jp
cmp
xchg
push
mov
gs
xor
arpl
daa
scas
ficoms
es
cmp
in
xlat
xchg
jnp
sti
jnp
jmp
cs
fcoml
or
jne
std
stos
push
dec
add
sarl
les
imul
repnz
inc
add
adc
ret
xor
xchg
pop
pop
push
push
mulb
vmovupd
fneni(8087
fwait
inc
jns
lret
je
pop
jge
stc
mov
orb
cwtl
inc
lret
xor
mov
loope
push
fisttpl
imul
bound
stos
mov
mov
dec
fstpt
testb
rcrb
aad
jl
pop
add
add
mov
sti
idiv
lods
pop
sbb
int3
or
add
cs
push
mov
xlat
mov
xchg
push
jle
push
or
cli
push
in
orl
ret
and
fmul
sti
or
shrl
data16
add
mov
xor
mov
push
out
lds
mov
scas
add
mov
add
loop
scas
or
push
xor
insb
or
sub
mov
les
test
int
mov
pop
mov
sbb
mov
adc
fadd
cli
test
push
jns
inc
push
pop
sbb
or
inc
and
mov
mov
hlt
int3
mov
xchg
cld
dec
sub
jne
or
jg
or
xchg
mov
pop
rorb
fs
and
xchg
jl
mov
pusha
push
test
fnstenv
cmc
sahf
jb
in
fcmovne
inc
dec
idivl
and
inc
das
fcomi
xlat
das
pop
add
dec
lock
add
ds
add
add
sbb
jmp
scas
inc
call
fldl
add
pop
xor
mov
pop
lahf
pushl
or
mov
xor
pusha
loopne
add
ffreep
and
fsubrs
in
jbe
lret
cmpsb
test
mov
fdivl
push
cmp
adc
and
and
sahf
dec
repz
xchg
jl
adc
jmp
mov
and
lods
arpl
xor
stos
sbb
push
xchg
pop
dec
aas
aad
adc
xor
lea
fistl
pop
fwait
rcr
insb
sbb
daa
lcall
out
jno,pn
dec
in
and
cmpsb
inc
pop
mov
popa
js
sahf
aam
ficompl
icebp
mov
or
aam
mov
mov
mov
les
adc
add
leave
icebp
shll
imul
mov
loope
fdivrl
popa
inc
and
aaa
out
xchg
imul
aaa
cld
add
add
cmpsl
fimull
faddl
lahf
lcall
add
movsb
fs
fldl
xchg
push
sbb
sub
push
pop
in
gs
jbe
mov
das
lcall
adcb
pop
sbb
cmpsb
cmpsb
mov
ds
fiadds
mov
loopne
out
leave
ljmp
ret
sbb
cmpsb
aad
or
mov
mov
dec
pop
out
pop
adc
adc
stos
lahf
mov
jb
add
icebp
stos
inc
ret
cmp
fwait
clc
mov
test
in
imul
in
and
push
or
jp
pop
aam
sti
inc
and
fs
enter
cld
xor
mov
lods
mov
adc
ja
jbe
rolb
test
enter
jp
push
and
notl
and
inc
xor
mov
push
repz
jns
push
loope
pop
inc
xchg
outsb
jae
and
push
add
add
mov
lcall
fisttps
or
or
add
add
fstpl
lds
sub
sub
pushf
jp
push
orb
in
pop
jno
xor
lds
sub
sbb
scas
xorb
mov
jmp
popf
jne
xor
pcmpgtd
adc
int
les
pop
push
mov
fsubl
les
clc
mov
shrl
sub
outsl
mov
outsl
pop
jae
mov
in
push
rorb
shl
daa
lahf
or
inc
sbb
jmp
add
lretw
mov
jmp
fwait
addps
out
mov
pop
pop
lret
or
pop
pusha
jb
pop
cmp
icebp
fwait
xor
cmpsl
push
add
aaa
adc
mov
pop
sub
add
loop
jo
push
add
cmp
jno
ror
jecxz
bound
mov
xchg
mov
in
mov
jnp
out
outsb
arpl
gs
push
repnz
pushf
mov
outsb
movsl
push
add
add
mov
jns
xchg
xchg
mov
sbb
scas
push
loope
add
cltd
mov
out
push
mov
ret
mov
sarl
int3
idivl
jle
in
xchg
ss
dec
repnz
stos
jg
int3
xor
loope
and
xor
ljmp
daa
and
in
int
aad
fwait
lcall
loop
cltd
push
or
pop
out
jge
mov
iret
jne
leave
movsl
xchg
clc
aad
mov
inc
add
les
loopw
enter
fstp
inc
or
xor
ret
jne
xchg
out
imul
mov
jecxz
cld
lret
hlt
ljmp
pcmpeqw
jne
repz
mov
outsl
pop
jge
push
dec
inc
and
ror
sub
adc
gs
jecxz
call
leave
sub
pop
cmpl
xchg
rorb
xchg
sahf
pop
pop
aam
int3
out
adc
push
pop
pop
xchg
inc
mov
into
pop
out
mov
mov
std
inc
mov
add
jae
fadd
fsubp
jnp
or
cld
les
cwtl
iret
ljmp
add
lock
jecxz
push
mov
xor
sahf
icebp
lret
add
cs
or
mov
clc
push
mov
jo
sti
je
enter
out
sahf
dec
pop
cmp
insl
dec
mov
mov
std
lock
xor
dec
push
fcmovnbe
mov
repnz
fdivrp
std
gs
decl
or
sub
inc
mov
mov
or
fs
cmp
add
addl
push
stos
mov
inc
sbb
jmp
daa
fwait
leave
cmc
jge
jle
cmp
nop
jmp
ror
mov
jg
xor
shrl
rolb
daa
push
dec
inc
aas
inc
int
nop
jge
stos
jae
adc
dec
xchg
out
xor
loop
out
out
repnz
push
cmp
mov
jp
push
out
inc
sub
imul
loop
mov
add
add
sub
cld
cli
jle
dec
nop
xor
sbb
sbb
add
add
dec
adc
inc
sub
push
dec
inc
mov
loopne
pop
push
rclb
dec
pop
jae
stos
aaa
adc
jle
push
fidivs
int3
rcrb
cmpsb
iret
addr16
pop
mov
push
or
adc
xorb
lcall
push
outsl
xchg
inc
push
cmpsb
mov
fidivl
rolb
fcomip
scas
sti
les
adc
pop
insb
jbe
out
mov
ja
in
jecxz
adc
push
ja
mov
dec
cltd
push
jge
pop
jl
sbbb
popf
jmp
repnz
enter
or
mov
mov
mov
sbb
test
bnd
lds
gs
mov
arpl
lcall
shl
cwtl
mov
mov
out
movsl
mov
loopne
mov
pop
xlat
mov
adc
lods
dec
jle
test
jecxz
add
lret
cmpsb
cmpsb
cwtl
jle
sbb
add
lea
pop
jbe
ja
sti
aaa
out
ja
pusha
cli
stc
sbb
add
add
stos
mov
cwtl
out
shlb
add
lret
fdivrs
cltd
sub
lcall
aam
arpl
lea
int3
jns
and
mov
mov
rolb
push
call
cmpsl
pop
push
sbb
mov
jns
xor
add
lahf
in
fistl
mov
std
dec
jns
mov
pop
bound
mov
add
sti
add
iret
data16
jge
xor
cmpb
mov
cmp
pop
icebp
cmpb
xor
mov
push
jno
or
xor
xchg
addl
ret
sarl
pop
sub
mov
jno
iret
dec
jno
adcl
adc
mov
cmpsl
jae
xchg
ljmp
or
pop
ret
out
jle
jecxz
inc
dec
imul
call
pusha
push
dec
pop
pop
mov
loope
add
ror
cltd
outsl
mov
aaa
pushf
sbb
addr16
add
add
ljmpw
push
xchg
jne
das
cmp
arpl
xor
imul
jbe
pop
mov
cmp
das
scas
int
lret
pop
scas
push
cltd
lcall
jo
ds
xchg
cmp
sub
inc
iret
mov
xchg
inc
movsl
cmp
jge
adc
in
aaa
cli
jmp
mov
pushf
or
cmp
push
jbe
sti
aam
sbb
sbb
mov
mov
pop
mov
pop
pop
test
fwait
push
fldenv
inc
xor
jl
out
mov
cmpsb
outsl
mov
divb
mov
sbb
out
adc
xchg
ficomps
aad
fcoms
push
and
lret
pop
push
cltd
sti
adc
daa
add
push
dec
adc
sbb
popa
pop
mov
jns
jnp
lret
sti
jmp
cmpsl
pop
or
xor
xor
imul
dec
xchg
fisttps
add
ja
lcall
mov
in
daa
out
add
xor
movsb
inc
negl
cmp
sarb
sahf
mov
xchg
sti
in
xchg
sar
call
sarl
lods
mov
cmp
xlat
or
push
and
sahf
push
dec
push
jae
add
loope
xor
or
xlat
mov
icebp
insb
aad
in
add
stos
xor
dec
push
insl
add
out
and
lahf
sub
dec
lahf
in
pop
daa
shrb
push
mov
hlt
sbb
mov
cli
and
mov
push
mov
mov
das
dec
dec
sbb
xlat
in
jo
xchg
jmp
adc
scas
mov
daa
mov
or
jae
xchg
pop
inc
pop
fistps
cs
int3
popa
popf
add
ds
xor
fs
add
or
and
mov
mov
movsl
fs
stos
sbb
xlat
push
mov
sbb
movsl
dec
dec
ds
mov
adc
out
cld
add
pop
add
add
add
lock
jg
in
and
daa
mov
add
cltd
dec
add
jl
adc
xchg
pop
ljmp
jae
pop
xor
adc
cmpsl
sarb
pop
cmp
lea
and
mov
jmp
les
push
call
mov
push
adc
jg
dec
jno
xchg
addl
xchg
xor
daa
dec
test
push
in
pop
in
int3
xchg
adc
xchg
inc
push
cmp
pop
ds
pop
sub
pop
sub
arpl
sbb
sub
sbbl
lcall
mov
and
es
sbb
mov
xchg
mov
mov
js
cli
mov
fmull
rol
sbb
imul
cmp
in
testl
pop
xchg
xor
jb
sti
aaa
enter
mov
sbb
lret
pop
mov
dec
mov
std
pop
fadd
popa
pop
imul
mov
hlt
or
add
add
pop
xlat
fistpl
out
dec
enter
add
addl
lods
xchg
mov
call
dec
xor
push
or
ss
sub
inc
data16
mov
inc
pop
lret
fsubr
imul
test
xchg
push
test
movsl
test
fstp
mov
loopne
dec
fnstenvs
rcrl
fstpt
int
adc
outsl
std
jmp
adc
xor
testl
xchg
scas
imul
pusha
addb
roll
pop
daa
xchg
mov
jne
call
pop
mov
add
mov
call
setp
in
cs
scas
aam
ficoms
mov
fs
push
mov
stos
fisttpl
ret
mov
inc
and
jle
out
inc
inc
jae
repz
xor
ljmp
jmp
lcall
ljmp
les
ficomps
in
sub
jb
add
add
mov
dec
js
stc
mov
dec
int
cli
push
shr
ss
add
push
dec
xchg
dec
ror
sbb
push
enter
aas
xor
cltd
inc
lods
sub
addr16
sbb
mov
lahf
int3
dec
loopne
dec
push
out
aad
filds
dec
pop
and
daa
sub
mov
push
xchg
hlt
adc
stos
pop
cwtl
sbb
cmp
cld
mov
inc
lea
bound
mov
push
iret
mov
pop
push
mov
cmpsl
xchg
gs
shlb
movsl
lods
jbe
dec
test
insl
in
iret
test
pop
add
add
fmuls
pop
mov
mov
mov
jg
mov
pop
outsb
pushf
shrb
push
arpl
rol
push
mov
lret
jne
arpl
mov
ljmp
inc
inc
test
inc
loop
jmp
lea
push
mov
jbe
rorl
push
mov
ss
out
into
jp
jp
xchg
scas
jbe
dec
leave
sbb
add
mov
pop
insb
fildll
fwait
jns
jns
mov
add
add
addb
movsl
lea
aas
ds
add
insb
push
test
sub
mov
movsl
mov
cld
adc
fistpl
mov
add
in
test
push
ret
sbb
sbb
cmp
inc
pusha
orl
mov
loopne
repz
push
mov
sbb
lret
lds
test
popf
dec
jge
loop
sbb
or
add
mov
sub
jp
rcrl
adc
jb
lds
insl
mov
jmp
les
rorl
mov
push
sub
insl
inc
mov
adc
cmp
adc
cmpsb
mov
sbb
rorb
cwtl
rcrl
push
sbb
movsl
leave
add
pop
add
and
mov
xchg
inc
or
mov
xor
xchg
push
mov
fcmovnu
bound
xchg
in
add
add
mov
pxor
jnp
adc
jne
int3
addr16
xchg
add
add
lock
movsl
rorb
roll
ss
or
cwtl
sbb
out
out
daa
std
jmp
into
cwtl
cmp
je
xchg
shrl
shll
jp
test
imul
cmp
cmp
es
pop
es
pop
lock
jns
mov
pusha
sub
test
call
push
mov
and
mov
xchg
jle
push
cmp
int
ds
lcall
or
sti
add
or
shll
mov
adc
pop
ficoms
jnp
sbbb
dec
nop
push
mov
out
sbb
lods
iret
bound
popf
inc
test
pop
xchg
or
shll
inc
ja
jno
and
cmp
in
test
subl
add
push
jmp
in
lret
cmp
adc
add
adc
xor
add
add
subb
fistl
das
ss
xchg
int
in
add
add
cmp
out
add
xchg
adc
jno
or
int3
sahf
repz
mov
adc
mov
xor
shrl
mov
bound
cwtl
sahf
dec
pop
lret
pop
fstpt
orb
mov
into
mov
mov
in
fisubs
sbb
fidivrs
inc
clc
jmp
inc
mov
mov
icebp
cld
adc
mov
add
cli
adc
stos
stos
aas
sub
out
dec
into
ljmp
or
adc
mov
jbe
xchg
inc
dec
jg
cmc
in
xchg
imul
orl
test
decb
or
stos
lds
icebp
inc
fwait
lds
pop
mov
mov
cmp
sbb
int3
dec
push
push
jns
popf
cmp
aaa
lret
adc
out
sub
mull
jmp
pop
arpl
xchg
js
cs
pop
cmp
add
add
jb
scas
decb
fisttps
mov
sbb
add
add
jne
je
mov
std
lods
loopne,pn
ja
rcrl
xchg
mov
out
bound
cmpsb
rclb
dec
push
or
das
mov
popa
and
mov
mov
das
cmp
push
mov
jnp
and
jnp
jae
and
ret
adc
aam
cmp
dec
and
adcb
push
sub
aaa
int3
out
in
xor
push
fists
jp
lds
popa
out
jns
ds
test
leave
mull
fwait
sub
outsl
pop
in
int
test
adc
dec
pop
dec
mov
mov
vdivps
add
mov
fidivs
sti
hlt
hlt
inc
sub
pop
cmc
daa
sti
repz
sbb
fcompl
sahf
ret
mov
cmp
cmp
call
push
call
inc
outsl
or
cwtl
jmp
cli
xchg
out
add
add
xlat
mov
xchg
sbb
mov
out
add
add
cmp
add
mov
mov
and
jmp
inc
pop
and
mov
in
cmpsb
sub
jecxz
mov
pop
jo
icebp
and
add
pop
sub
mov
dec
fstpt
jne
add
gs
pop
fprem1
insb
in
and
int3
aad
xor
inc
int3
xor
sub
mov
mov
aad
out
xchg
cmpl
inc
push
fistpl
sti
pop
subl
stos
jb
mov
jle
dec
mov
mov
cli
lods
popf
leave
jnp
loop
jns
enter
mov
push
pusha
test
sub
adc
sbb
jno
inc
fs
cmp
cmp
inc
lods
lret
jge
jge
movsb
and
adcl
out
mov
jle
add
pop
cmp
inc
sbb
mov
std
push
dec
addr16
sti
adc
xchg
sahf
pop
gs
xchg
cmp
add
add
mov
aas
mov
inc
add
push
out
add
add
jl
cmp
rcl
orl
jmp
push
bswap
jo
pop
xchg
inc
mov
sub
mov
add
cmp
ljmp
je
dec
popa
mov
mov
pop
pop
leave
popa
sbb
inc
adc
outsb
mov
xchg
stos
jecxz
sub
xchg
dec
lahf
jmp
push
test
aam
pop
repnz
mov
pop
xor
push
das
mov
adc
mov
f2xm1
fisubs
fxch
pop
add
insb
out
cs
lret
lods
repnz
lock
mov
daa
fadds
data16
add
mov
scas
fldt
into
add
mov
mov
sub
cltd
or
sbb
stc
jg
add
xor
lods
enter
mov
jg
xchg
les
push
xchg
jae
aas
add
js
dec
repnz
xor
outsb
or
cmpsl
mov
add
loop
fadd
sti
mov
inc
pop
lods
test
add
add
sarl
dec
mov
xor
repnz
ret
in
jb
push
jle
inc
or
dec
and
cmp
imul
in
jns
dec
movsb
hlt
nop
leave
xchg
sub
sub
ljmp
and
enter
xchg
jbe
gs
mov
sub
movsl
pop
push
pop
mov
loope
sbbb
sub
loope
ret
cmpsb
cmp
ss
mov
xor
push
cmp
push
call
xor
mov
mov
adc
je
mov
inc
test
dec
jns
in
ret
aad
icebp
fdivrs
shll
or
cmp
sbbb
cld
inc
dec
roll
dec
sti
sbb
push
add
add
mov
mov
inc
and
sub
lods
icebp
adc
cmpsb
and
mov
pop
loopne
pop
cmp
test
cmpsb
sub
fildll
mov
add
push
cmp
adc
neg
jge
xchg
jns
ja
jne
pop
icebp
add
add
jmp
loop
or
stos
mov
iret
jg
dec
jo
cmpsb
mov
sbb
add
push
lock
pop
pop
lcall
jae
lods
mov
push
xchg
or
jae
shlb
jne
mov
std
adcb
inc
stos
addb
xor
mov
mov
mov
xor
cmc
lahf
in
push
les
push
cltd
bnd
xchg
inc
aad
xchg
sbb
int3
sbb
les
je
mov
call
testl
xchg
adc
mov
ficompl
add
fcom
movsb
in
addl
add
enter
jb
int3
sub
sti
into
orb
sub
ljmp
mov
cltd
jmp
mov
les
icebp
lods
pop
jo
cmp
daa
mov
jecxz
jns
pop
clc
add
xor
add
pop
cmp
outsl
jg
jg
sub
fcmovb
sahf
loop
arpl
add
add
inc
movsl
test
sarl
cmp
dec
mov
in
fidivrl
inc
jge
add
test
test
xchg
xor
inc
mov
or
lret
mov
cmp
sbb
sbbl
push
sub
lods
popf
push
push
loope
cmp
add
sub
bnd
mov
xchg
sub
arpl
pop
or
add
rolb
clc
movsl
cs
scas
pop
mov
jbe
sub
les
ljmp
sti
shl
jne
xlat
test
daa
stc
movsl
cli
sub
mov
mov
jp
and
bound
hlt
cwtl
lods
xchg
xchg
sti
adc
repnz
push
mov
aas
and
mov
jbe
inc
jp
notb
xor
std
mov
jbe
fsubl
pop
add
jno
add
ret
ja
and
aaa
divl
mov
lea
add
add
mov
fcmovu
hlt
ficomps
add
movsb
xchg
pop
iret
mov
test
test
sbb
hlt
scas
adc
or
loopne
inc
in
pop
jnp
xor
das
dec
jle
ficoms
xchg
push
mov
cmpsl
cmp
stos
push
clc
cmpsl
sbb
icebp
dec
cmp
out
fiaddl
or
lcall
mov
jmp
int3
enter
add
mov
clc
mov
ss
sbb
lahf
xor
pusha
mov
popf
sub
adc
fs
mov
scas
mov
and
imul
mov
addl
xchg
mov
xchg
clc
mov
roll
test
or
nop
repz
fisubrs
jecxz
pushf
mov
jg
lods
cs
sbb
std
mov
sbb
xchg
add
add
mov
cmc
mov
fldt
add
add
and
dec
lock
adc
cmp
fwait
sub
sub
sub
xchg
dec
lahf
scas
ret
inc
push
sbb
in
je
dec
lea
cmp
and
and
mov
cmp
push
int3
xchg
inc
sub
xchg
mov
push
js
xor
movsl
and
orl
adc
sbb
jmp
cs
push
or
or
lock
cli
xor
daa
stos
stos
lods
mov
into
mov
pop
push
xchg
mov
lahf
add
andl
std
xor
loope
test
or
mov
cmp
loop
jle
lcall
rcrb
outsl
popa
das
cmpl
rorb
aam
push
stos
and
mov
mov
cs
or
mov
inc
inc
xor
ljmp
and
aad
scas
mov
add
cmp
xchg
pop
sbb
repnz
ljmp
pop
xlat
addr16
add
jne
pusha
popf
pop
adcl
cmc
add
add
xchg
mov
xchg
pop
call
mov
mov
insb
mov
lock
xorl
and
jbe
dec
push
outsw
cmp
dec
xchg
mov
mov
shrl
ss
xchg
pop
insb
sub
adc
cld
mov
push
adc
mov
test
fs
jno
jae
orb
sub
adc
adcl
jnp
insb
insb
mov
jmp
inc
js
mov
xlat
aas
cmc
pop
rolb
jbe
lcall
pop
lret
aaa
in
jne
jns
fisttpll
lds
mov
cmpsb
sbb
out
inc
pop
out
lret
hlt
dec
pop
add
mov
mov
out
scas
xchg
or
sbb
aam
sbb
sub
cli
jg
sbb
fidivl
movsb
ja
out
add
mov
push
mov
shrl
les
andb
add
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
jno
sti
and
int
cmp
lret
mov
sub
mov
negl
pop
ret
and
mov
in
or
repnz
into
ljmp
push
mov
cld
aaa
cld
test
and
int
xorb
inc
xchg
roll
imul
sbb
clc
mov
in
mov
into
mov
adc
in
inc
call
insb
daa
sub
addr16
and
lret
adc
and
out
ror
test
or
jns
push
cmp
add
sti
arpl
out
fstps
outsl
and
imul
xchg
out
pop
ss
pop
or
imul
sub
pop
jecxz
popf
inc
lock
jl
dec
repz
fidivl
aas
nop
adc
cltd
mov
ficomps
mov
cld
lock
pop
dec
daa
out
pop
into
in
jne
mov
add
aad
push
fisubl
add
ret
add
xor
jb
jae
ret
inc
jl
add
add
loopne
pop
add
sbb
lea
mov
add
sbb
cmp
in
cwtl
icebp
lret
push
inc
pop
nop
jge
aam
out
das
ret
lea
sahf
pop
xor
push
mov
jmp
inc
and
or
jmp
nop
sbb
mov
cbtw
lcall
rclb
into
test
push
xor
or
push
jl
idiv
mov
cmp
push
popf
popf
pusha
fisubl
je
mov
pop
inc
dec
imul
movsl
adc
cmpsl
mov
movsl
jnp
or
imul
ja
out
cmc
dec
nop
xor
pop
lret
dec
sbb
fisubs
and
pop
cmpsl
jnp
lret
fcmovbe
mov
cmp
sti
pop
pop
xchg
sub
mov
lea
test
enter
les
jg
mov
jmp
mov
sub
lock
add
adc
int
in
idivl
js
mov
scas
repz
enter
add
out
xchg
into
es
shlb
out
sub
iret
cmp
icebp
jne
repnz
pop
sbb
or
in
add
das
adc
mov
addr16
adc
adc
imul
mov
mov
adc
mov
popf
and
push
and
mov
pop
nop
mov
fwait
shrl
and
lods
mov
imul
xor
je
adc
xlat
push
sbb
movsb
scas
adc
xchg
mov
stc
mov
clc
sahf
subb
mov
cpuid
mov
ljmp
movsl
in
jnp
inc
imul
adc
je
dec
inc
sub
xchg
insb
es
jp
mov
test
dec
lret
inc
jnp
inc
out
into
jl
adcb
inc
gs
fistps
fadd
into
inc
call
or
insl
fstpt
fs
add
imul
add
add
jecxz
inc
cli
aas
into
lret
add
stc
add
add
fs
dec
inc
sub
pop
cmp
xchg
add
push
sub
pop
ljmp
insb
lahf
inc
ljmp
int
into
pop
adc
push
ja
jns
insl
out
xor
mov
idivl
cs
in
cwtl
inc
scas
and
xor
notb
lahf
cmp
in
mov
xchg
dec
pop
rorl
jl
mov
lcall
cmp
pop
cmp
int3
cmp
cmp
mov
cmp
xor
dec
inc
xchg
xchg
cmp
movb
mov
push
repnz
xchg
push
scas
pusha
pop
shll
pop
scas
movsl
adc
and
movsl
push
sbb
push
repnz
icebp
jecxz
jae
add
push
dec
push
jle
aas
adc
cmpl
sub
hlt
into
cltd
out
sbb
pop
inc
adc
sub
add
add
mov
lcall
push
bound
add
push
test
cmpl
mov
and
cmp
add
push
pop
call
sub
cwtl
ljmp
pop
dec
orl
add
inc
inc
call
fcmovu
into
lock
decb
sub
push
inc
xchg
xor
xchg
pushf
jae
or
loop
ja
fidivs
mov
jbe
dec
enter
movsl
cmp
mov
lods
addr16
negb
lret
jb
sbb
and
xchg
jae
jae
xchg
icebp
pop
mov
repnz
sbb
cmp
and
push
lret
xchg
ljmp
and
add
repz
mov
insb
push
add
dec
cli
lods
cwtl
jl
push
dec
xchg
sub
xchg
mov
mov
inc
loop
shl
sbbl
jmp
popa
inc
aam
pop
loope
pushf
cmp
out
xchg
add
es
das
shr
loop
nop
add
add
jae
cltd
dec
mov
jno
add
add
add
xchg
push
cld
lods
push
mov
imul
jl
push
dec
cmpsb
jbe
xor
fildll
mov
pusha
inc
cmp
ja
filds
clc
xchg
fisubrl
les
sbb
insb
imul
xchg
or
adc
scas
xor
jle
or
add
lea
sub
pop
adc
pop
sbb
add
cmpsb
scas
push
ds
dec
add
int3
push
stc
shl
inc
sbb
test
cwtl
dec
lods
loopne
xchg
fs
cmc
and
aad
push
int
ja
xlat
insl
or
mov
jbe
fwait
push
les
loop
sub
mov
adc
clc
or
data16
pop
lock
xor
jne
sbb
dec
mov
mov
sbb
shrl
xchg
in
mov
xchg
xchg
jl
popf
jnp
imul
aam
loopne
mov
xchg
lods
fcomi
and
imul
add
push
into
nop
out
cwtl
jle
push
sub
dec
jnp
loope
xchg
cld
add
add
xor
movsl
adc
sbb
mov
cmp
rcll
movsb
shrb
jns
push
test
push
in
aas
sub
xor
movsl
dec
and
mov
jbe
test
dec
dec
xor
jb
jecxz
push
hlt
mov
or
cwtl
inc
aam
dec
inc
sub
add
adc
push
sbb
mov
jle
mov
xor
mov
xchg
mov
mov
push
adc
sub
pop
push
mov
dec
arpl
shlb
or
cmpsb
shrl
cld
bound
outsl
lods
pop
inc
cld
push
insl
scas
outsl
adc
pop
and
or
add
setnp
add
lret
xchg
cmpsb
dec
ljmp
pop
push
mov
mov
nop
or
popa
sub
aas
pop
repnz
push
jns
mov
adc
popf
push
xchg
sbb
sub
xchg
ret
add
add
test
jg
push
pop
push
mov
lcall
add
fsubs
adc
aam
cmp
cli
in
out
sbb
das
cs
inc
jbe
das
and
cmp
pusha
icebp
and
add
cmp
lcall
mov
cli
in
sub
mov
cmp
xor
and
xor
in
repnz
outsl
icebp
mov
icebp
int3
lods
addr16
subl
push
sbb
adc
adc
mov
mov
pop
xchg
cli
cmpsb
pop
imul
mov
mov
movsb
jmp
xchg
pushf
cli
into
or
xchg
cmpsl
add
fcmovbe
fadds
pop
enter
sub
push
mov
jno
stos
dec
ror
push
test
int
imul
pop
loopne
js
fs
xchg
mov
shlb
sbb
inc
mov
xlat
test
sbb
xchg
jp
mov
add
add
movsb
push
in
cmc
jne
sbb
js
sbb
add
add
jnp
pop
out
mov
pop
cld
mov
mov
sub
fnstsw
sbb
jno
and
rolb
mov
inc
daa
aaa
mov
out
cli
mov
dec
in
jl
and
adc
iret
repnz
aam
cmp
add
call
out
inc
jb
adc
mov
fwait
addr16
xor
mov
loope
cs
pop
sahf
testl
lds
jecxz
das
rcrb
inc
ror
xor
mov
jno
das
mov
and
add
xor
or
pop
int
movsl
mov
push
cs
add
rcrl
mov
push
pop
shl
daa
dec
mov
popf
push
pop
scas
cmp
inc
cmp
xchg
xchg
leave
push
jbe
mov
xchg
mov
daa
cmp
or
inc
push
cmp
mov
dec
jae
lcall
into
xchg
add
hlt
push
cmc
push
movsb
mov
add
add
out
shlb
aas
out
int3
mov
insb
jle
aam
incl
add
stos
or
enter
dec
icebp
xor
insb
xor
adc
xor
stos
lods
and
mov
mov
and
ds
push
jle
and
pop
push
arpl
xor
add
iret
sbb
inc
bound
faddl
subb
cmp
and
aad
or
scas
cs
push
sbb
pop
aas
mov
xchg
into
std
repz
inc
pop
cmp
sub
xchg
loope
jmp
in
mov
loop
xchg
inc
lea
sub
inc
xor
mov
and
decl
imul
jl
movsb
arpl
push
mov
repz
jecxz
xchg
jno
jbe
shrl
cmp
or
mov
arpl
cmpsb
cli
xor
int
add
ret
add
int3
daa
push
inc
pop
lcall
addb
sbb
jle
inc
add
xor
add
or
mov
and
add
add
push
insl
mov
sub
push
repnz
xchg
mov
out
pop
jns
sub
add
ret
xor
rep
test
or
fwait
divb
or
adc
pop
pop
xor
cmpsl
pusha
sar
imul
mov
inc
js
push
inc
gs
jno
scas
into
jecxz
jmp
mov
inc
pop
pop
sbb
mov
mov
inc
cmp
movsl
test
idivb
jmp
adc
mov
sub
loop
push
inc
cmpsl
aaa
adc
data16
mov
inc
loope
sbb
inc
fwait
imul
jecxz
push
lock
mov
jbe
cmc
dec
mov
into
fsubr
ja
xor
pop
es
orb
mov
out
ss
aad
push
hlt
cmc
ljmp
out
les
pop
pop
sahf
pop
fsubrp
mov
mov
pop
xchg
aam
out
mov
repnz
xchg
std
in
aad
out
pop
addb
add
ret
bnd
cmc
inc
stos
repz
scas
add
add
lds
test
ret
iret
inc
inc
inc
dec
mov
adc
pop
mov
aam
mov
mov
jp
and
stc
push
test
hlt
out
leave
sub
jmp
scas
mov
sarb
jl
mov
cmp
into
push
jl
mov
xor
or
xor
jge
push
out
addr16
mov
mov
cli
dec
push
out
aad
inc
rcr
mov
or
testb
in
repz
cmc
mov
dec
adc
jo
pop
ret
inc
iret
jno
cmp
add
and
or
push
cmp
les
or
stos
mov
aas
ficomps
in
cmp
inc
or
xor
daa
testl
add
or
or
xchg
mov
hlt
add
les
pop
cmp
out
mov
adc
loope
sbb
cmp
add
add
std
aaa
mov
shll
push
mov
add
cmc
add
add
cs
fcomps
aad
push
or
xchg
call
and
lahf
jl
dec
aad
sbb
dec
jle
xor
imul
adc
jge
repnz
pop
aaa
ja
jecxz
jl
push
lea
sbb
mov
sub
jecxz
xchg
and
mov
lahf
je
imull
adc
out
mov
orl
insl
in
es
arpl
pop
enter
clc
add
lods
dec
xor
stos
sub
dec
cs
ret
pop
jbe
data16
ficomps
jg
mov
sub
andl
jge
or
call
cli
rol
cmp
cmp
jb
insb
mov
out
mov
andb
lcall
mov
lret
ficoml
mov
cmc
scas
or
pop
ret
pop
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
dec
sub
or
movsb
movl
cli
or
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
