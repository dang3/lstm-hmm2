push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
js
sbb
jo
jo
rcl
aad
ror
rol
pop
push
add
js
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
adc
push
xor
mov
xchg
nop
push
rcll
jecxz
push
inc
arpl
andps
cmp
mov
sbb
push
ret
out
ss
sbb
scas
sbb
or
test
insb
fcoms
sbb
aam
pop
rorb
sbb
push
xor
in
fists
mov
jno
jae
ss
sbb
jge
loop
mov
test
sub
test
loope
push
mov
jle
pop
shll
adc
imul
sub
pop
popa
ljmp
dec
leave
repnz
xchg
cmp
inc
adc
jno
push
pop
jo
popf
or
pop
shl
sbb
shlb
scas
cmp
outsl
jae
xchg
push
test
fildl
xchg
dec
xchg
jle
cmpsl
ret
popf
lret
jp
bound
iret
lock
sbb
jge
or
enter
push
hlt
gs
dec
mov
mov
mov
das
add
je
sub
fstps
xchg
les
pop
repnz
cltd
jo
cmc
jge
data16
fwait
pop
or
xchg
jp
pop
sahf
adc
scas
xchg
leave
cmpsb
popa
pop
cmp
jl
lret
std
mov
call
mov
jmp
clc
icebp
mov
icebp
ficompl
int
jo
jo
jo
jo
and
pushf
ljmp
insl
xchg
mov
mov
js
inc
mov
adc
mov
stc
test
jbe
mov
xchg
sub
xor
sbb
mov
or
push
sub
cmpsl
pop
fisubrs
dec
outsl
xchg
fwait
xchg
mov
pop
scas
shll
es
adc
inc
test
or
jo
icebp
jmp
mov
or
idivb
or
fcom
cmpsb
leave
lahf
popf
fwait
inc
dec
or
mov
push
pop
mov
and
iret
lock
or
or
sti
add
orl
mov
ds
push
jg
cli
inc
and
sbb
aaa
mov
xchg
mov
aad
sub
inc
repz
dec
push
jp
adc
and
stc
call
mov
cmp
ja
popa
ret
int
pop
dec
jnp
imul
rcl
xorl
and
sbb
decl
hlt
sub
jg
cmpsb
mov
mov
clc
imul
or
push
push
mov
and
cmc
test
pop
mov
imul
icebp
or
xchg
into
add
push
vmwrite
shll
adc
mov
push
cs
imul
jo
push
mov
cmc
sub
or
sbb
adc
mov
sbb
inc
add
iret
dec
adc
adcb
mov
jae
mov
mov
in
jb
pop
inc
inc
std
inc
adc
into
sarb
repz
lcall
mov
test
out
aas
fisttpll
cmp
cld
mov
lahf
or
pusha
push
sahf
fs
inc
outsl
xchg
lock
mov
or
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
lret
and
adc
jo
jo
jo
adc
dec
inc
xchg
xchg
fistps
mov
sub
bound
out
cmpsl
pushf
jne
mov
mov
mov
sbb
fildll
scas
xchg
lock
jl,pt
fdivrl
push
jg
mov
jl
loope
sub
xor
fptan
jle
je
lahf
push
fisttps
xlat
inc
enter
inc
jne
pushf
mov
aaa
jae
insb
loope
sub
add
dec
ret
push
ds
inc
mov
xor
fldcw
cmp
mov
push
into
sub
xchg
jl
subl
loopne
push
enter
mov
mov
jge
xchg
mov
or
cltd
add
sahf
or
xchg
mov
push
fcomps
and
mov
xchg
subl
rcll
mov
sub
xor
lods
test
lea
imul
popf
xchg
mov
nop
sub
lea
mov
fldenv
fists
inc
mov
pop
int3
jecxz
fcmovbe
nop
imul
subl
int3
stc
fmull
cmp
or
or
push
jae
dec
push
jno
xchg
icebp
daa
imul
or
and
jo
out
and
add
bound
sub
adc
flds
pop
orl
and
ja
jecxz
iret
mov
outsl
pushf
sbb
imul
mov
dec
jns
ss
pusha
div
imul
jbe
lret
fidivl
lods
loopne
jl
xchg
xlat
clc
addr16
ja
mov
dec
repnz
xor
repnz
inc
and
lea
addr16
aad
imul
js
cli
xchg
arpl
in
sbb
xor
into
mov
decl
fs
leave
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
repnz
jo
jle
jo
cmc
inc
pop
outsb
cmp
push
mov
and
xor
test
adc
sub
or
jae
inc
clc
testb
xchg
out
and
shlb
into
movsl
enter
ror
add
stos
data16
lods
icebp
test
lock
mov
mov
leave
jecxz
iret
or
es
orb
xlat
es
jo
ror
lods
lret
sbb
xchg
prefetcht1
and
xchg
sub
fisttpll
jo
push
cmp
shrb
or
std
mov
movsl
fdiv
add
sti
mov
xchg
xor
push
lret
pop
nop
fisttps
push
rolb
fisubl
push
ljmp
insb
mov
or
aam
xchg
cmp
rclb
lret
pop
cmp
rcl
push
inc
xor
loope
imul
sub
pop
adc
lods
rcrl
test
out
pushf
dec
sbb
sbb
arpl
or
xchg
and
pop
fstps
mov
and
pusha
outsl
sbb
jl
xchg
lea
and
inc
and
push
leave
or
mov
mov
or
xor
and
ffreep
and
mov
outsl
lahf
movsb
fcompl
cwtl
mulb
jae
fwait
mov
mov
in
std
mov
push
inc
add
popa
mov
adc
or
into
mov
push
fldl
adc
insl
jbe
ja
rcrl
sub
ret
std
push
test
sbb
add
pop
xor
lcall
xchg
orl
loopne
sbb
clc
movsl
addr16
xchg
jg
or
aam
sbb
sbb
mov
cld
push
fistpll
inc
mov
scas
fnstcw
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
jp
jo
jo
jo
jo
or
cmc
pop
loop
inc
rclb
dec
add
push
das
and
jae
push
or
xor
repnz
xchg
inc
add
pop
outsl
jns
aad
movsb
mov
stos
aas
xchg
enter
xchg
add
int
sbb
add
pop
jecxz
cmp
push
jmp
mov
popf
jmp
jbe
jge
adc
cmp
jne
sti
loop
or
xchg
push
lahf
cmc
sbb
clc
inc
enter
out
outsl
pop
add
fcmovnbe
or
sbb
adc
loopne
repz
gs
dec
rcr
lret
pusha
dec
pop
jl
xor
mov
ja
pop
loope
sub
and
pop
imul
movl
adc
cmpsb
cmp
jp
mov
jge
mov
adc
add
and
aad
xchg
jne
dec
push
lods
shrl
dec
or
nop
sbb
sub
adc
gs
inc
xchg
pop
cs
das
mov
mov
mov
sti
loop
or
mov
fucomi
lahf
repz
or
loop
jno
pop
dec
ss
aas
jmp
jg
add
and
icebp
out
popa
add
pop
and
call
xchg
push
xchg
push
sub
lahf
enter
fistps
and
movsl
jo
sbb
enter
add
out
mov
sbb
stc
adc
xchg
out
dec
int3
cmc
enter
xchg
cmpsb
ljmp
stos
fwait
stc
ret
inc
sub
movsb
lahf
dec
call
sub
jno
out
lret
loope
stos
fstpt
sbb
fwait
insb
movsb
nop
bound
sub
mov
mov
imul
push
or
shl
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
mov
jo
jle
jo
dec
loop
lret
xchg
in
mov
sti
aaa
shlb
inc
popf
push
dec
pop
enter
lret
adc
aaa
stc
or
or
add
sub
cmp
addr16
stos
mov
sahf
jne
in
movsb
shlb
mov
xchg
movsb
jl
adc
add
scas
js
push
jl
aam
cld
pop
dec
and
or
xor
shr
inc
mov
out
stos
push
fists
les
mov
out
inc
scas
mov
ljmp
xchg
sub
and
in
int3
int
sub
dec
xor
hlt
xchg
and
adc
test
mov
aas
lret
mov
push
or
cmp
xchg
cmp
xlat
outsb
mov
test
fs
mov
inc
addl
cmp
movsb
fildl
insl
pop
mov
pop
fwait
jmp
mov
inc
pop
cwtl
cmpsb
movsl
cmp
mov
adc
or
inc
cmp
jl
xchg
jne
psrld
mov
mov
outsl
add
inc
arpl
push
xchg
enter
fs
add
stos
fimuls
xchg
adc
dec
dec
orb
jp
cmc
mov
mov
dec
sub
rcrl
mov
sub
jns
dec
cs
nop
or
fmuls
adc
add
lcall
jge
int
sbb
int3
out
fmull
and
clc
lcall
adc
sbb
stc
cld
and
sbb
cli
sahf
in
les
push
inc
push
add
pop
lods
sbb
aas
adc
jne
pop
movsb
sarl
adc
mov
jle
subl
daa
call
cmpsb
add
adc
mov
rcl
fwait
jmp
rclb
xchg
test
in
shlb
inc
rolb
xor
mov
add
cmp
jmp
ret
gs
cmpsl
insb
adcb
jo
jo
jo
add
mul
clc
out
jnp
mov
dec
sub
xchg
mov
jmp
es
jo
jne
iret
cwtl
rcll
cmova
int
xchg
test
and
subl
iret
mov
mov
xchg
ljmp
sar
sbb
movsl
xor
inc
out
pop
pop
add
or
xchg
mov
outsl
pop
daa
adc
fdivs
mov
mov
adc
push
aad
dec
call
xlat
inc
add
pop
and
mov
dec
pop
adc
cld
add
add
scas
ja
sub
mov
jl
pop
lret
xchg
fsts
pusha
push
inc
jnp
jg
out
mov
fsubs
cmp
pusha
mov
cli
adc
sar
cltd
sub
xlat
mov
jae
or
sub
imul
push
sbb
clc
mov
dec
cmp
fbld
add
jns
aaa
sbb
pop
cld
xor
je
imul
popa
or
cmp
inc
idiv
clc
mov
gs
test
or
ja
dec
lea
pop
sbb
xlat
fisttps
adc
cmp
loopne
mov
cmp
pop
xchg
imul
stos
xchg
es
push
outsl
adcl
or
ret
cmp
addb
jb
sbb
fiadds
sub
cltd
inc
out
cmpsl
out
jmp
hlt
adc
mov
inc
xlat
aas
cli
lods
sub
push
push
lock
mov
mov
ljmp
mov
xchg
pop
shr
fdivl
push
iret
in
aam
call
mov
sbb
shll
js
dec
pop
popa
aaa
outsl
jo
shrb
popf
jae
rcrb
inc
or
mov
jle
dec
inc
xor
in
mov
xchg
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
xor
dec
jo
jo
jo
jo
sbb
pop
inc
dec
repnz
sub
inc
lret
sub
lds
hlt
pop
dec
pop
sub
push
xchg
mov
jae
out
push
popa
xchg
xchg
lahf
gs
jmp
sub
dec
push
fsubrl
add
jecxz
je
xchg
lret
mov
pusha
insb
mov
jmp
cli
addr16
ds
insl
mov
push
push
data16
xchg
inc
mov
test
or
iret
int
int
or
hlt
ret
cmp
mov
fs
ret
mov
insb
ds
jmp
test
jle
adc
shl
xchg
subb
sbb
jge
pop
sbb
lcall
movsb
mov
mov
sbb
push
add
pop
xor
icebp
andl
add
out
scas
xor
cmp
iret
mov
and
insb
lret
xchg
popf
lret
push
std
fcomp
test
sbb
lahf
jne
fisubrl
into
ja
sti
inc
lret
mov
sbb
std
mov
rolb
subl
fsub
add
pop
xchg
loop
cmp
lods
cmp
dec
outsl
fstpt
test
es
sub
hlt
sub
cmp
movsl
mov
test
xchg
mov
in
mov
mov
call
cli
xchg
leave
sbb
inc
nop
lock
sbb
leave
cmpsl
cs
adc
inc
sbb
mov
movsb
shl
lock
and
mov
loope
inc
mov
cmpb
out
mov
clc
add
cli
cmp
lcall
or
sbb
mov
inc
sub
adc
add
jne
add
jmp
loop
cmp
inc
cmp
or
xor
adc
xchg
xlat
dec
roll
rorl
je
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
jmp
jo
jo
xchg
cmc
and
mov
imul
mov
dec
stos
loopne
loop
int3
jle
and
imul
fdivs
pop
daa
add
cmp
pusha
ja
or
stos
out
mov
push
push
mov
dec
mov
test
push
cmp
adc
xchg
enter
inc
xchg
addr16
addb
out
mov
xchg
add
fbld
cltd
cmpsb
adc
sub
sub
stc
push
and
outsb
frstor
fisttpll
popa
in
cltd
test
fildll
jmp
mov
rcrb
jb
xor
je
movsl
adc
jl
ds
dec
cltd
cmpsb
call
push
mov
mov
xchg
sub
add
nop
cmp
cmc
jno
mov
cmp
jmp
adc
xor
mov
in
and
mov
hlt
jne
or
inc
leave
pop
sbb
inc
push
jne
icebp
insb
cli
rclb
in
add
or
pushf
mov
jnp
in
mov
adc
sbb
cwtl
jnp
pop
loope
outsl
clc
push
test
pop
mov
out
hlt
sti
and
loop
popf
jg
pop
scas
out
repz
fnstsw
std
mov
add
andb
mov
sub
int
lcall
xchg
mov
inc
mov
mov
sbb
dec
ret
loop
shlb
mov
insb
mov
icebp
add
sub
pop
bound
inc
pop
cwtl
mov
cmp
xor
into
movsb
pop
mov
mov
pop
jne
pmuludq
nop
jae
add
add
jl
jne
test
roll
insb
rorl
mov
push
call
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
xchg
popa
push
mov
test
push
pop
lds
out
in
mov
cwtl
xchg
cmp
lret
pusha
incb
inc
insl
mov
inc
dec
push
addr16
fisttps
orb
cmc
mov
out
movsb
adc
lods
sbb
repnz
lret
sub
stos
je
dec
clc
rorl
dec
cld
sub
cmp
xor
pushf
xchg
and
ret
fs
add
pop
sti
stos
lahf
mov
cmp
push
popf
adc
mov
les
jbe
push
lcall
xorl
inc
mov
and
movsb
add
mov
rcll
xchg
pop
sub
addr16
leave
adc
test
dec
clc
dec
loope
mov
adc
fdivrs
jno
mov
repz
lcall
lock
aaa
adc
test
loop
lahf
cltd
loopne
sbb
pushf
xchg
call
jne
sub
mov
cmp
xlat
call
rcr
and
in
and
les
addr16
adc
addr16
sbb
push
imul
xchg
dec
enter
sub
or
cmp
sub
mov
testl
dec
cmpsl
cmp
ret
repz
lods
xor
ds
rclb
push
mov
xchg
xchg
ficoml
fidivrs
lock
cmp
cs
sub
adc
sbbb
addb
pusha
dec
outsb
js
popa
outsl
pop
sub
sub
adc
andb
mov
jl
or
in
sbb
and
fnsave
and
sbb
xchg
movsb
je
dec
pusha
ss
mov
ja
cltd
add
popa
jae
push
jmp
mov
pop
fisubrs
mov
inc
push
out
and
outsb
ret
lret
sbb
scas
lods
sub
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
mov
pop
jno
lcall
in
inc
add
test
xchg
lods
pop
adc
xor
xchg
insl
lods
jmp
and
das
cmp
pop
sbb
and
mov
push
dec
in
stos
les
inc
lods
rcl
into
es
xor
sbbl
mov
outsl
sti
call
jecxz
stos
mov
test
mov
xchg
or
and
inc
xchg
jbe
into
dec
lss
call
pop
shr
pop
in
lret
xor
in
pop
imul
push
push
outsl
cli
cmc
xchg
jp
inc
cli
add
adc
mov
scas
ljmp
mov
jnp
push
push
pushf
lcall
add
pusha
jno
mov
int3
fsts
das
sub
scas
inc
lret
pop
lahf
cltd
fldenv
mov
repnz
mov
add
jo
popa
lcall
call
jl
mov
jecxz
xchg
pop
or
insl
popf
or
dec
mov
cli
in
jp
fldenv
jne
inc
jmp
pop
jne
cli
jle
jo
mov
out
call
jbe,pt
or
adc
xlat
xchg
sub
lret
pop
xchg
mov
mov
lds
enter
sub
rcrb
lods
and
inc
xor
es
hlt
push
xchg
fimull
sbb
je
rcrl
pop
or
pop
xor
or
in
arpl
and
int3
add
test
sahf
jecxz
inc
xor
add
fwait
mov
mov
xchg
in
xor
sahf
imul
clc
adc
or
repz
mov
or
lahf
subb
inc
mov
pushw
fs
int
addb
icebp
ljmp
rclb
cs
mov
out
xor
adc
je
lds
push
xor
or
stos
and
mov
mov
test
xchg
push
mov
mov
dec
addr16
fisttps
imul
jg
dec
lods
or
and
mov
cmp
push
stos
cli
out
xor
jge
push
and
dec
mov
arpl
cmp
push
ret
xchg
rol
mov
fstps
push
jb
mov
xchg
inc
lahf
mov
scas
stos
dec
push
addr16
add
xlat
pop
jecxz
sarb
sub
push
xor
inc
pop
les
fisttps
inc
lea
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
enter
mov
jle
jo
je
cmp
addr16
or
lods
add
pushf
and
out
xor
or
adc
push
imul
test
daa
push
ljmp
clc
inc
xorb
or
pop
sbb
sahf
roll
in
fs
lds
adc
rclb
push
inc
jbe
xchg
leave
in
xor
or
push
sbb
sbb
push
push
loopne
cs
add
xchg
push
push
pusha
in
out
xchg
lret
push
fucom
lea
lea
imul
cmp
hlt
mov
xchg
or
jge
jg
or
ror
adc
add
mov
lret
jbe
movsl
fwait
mov
js
out
add
push
jmp
inc
pop
fisttps
into
xchg
xchg
mov
jae
testl
clc
mov
xor
ljmp
lcall
and
inc
jle
in
fwait
cmp
pop
addr16
pop
jnp
dec
sahf
sub
push
push
popa
js
arpl
in
lahf
xchg
push
lret
sbb
je
mov
lods
jb
fwait
dec
les
addr16
mov
lods
std
inc
loope
xchg
push
sahf
push
cmp
subl
sub
stc
loopne
sbb
into
repz
push
call
xchg
fmuls
popa
inc
add
mov
mov
aad
bound
inc
cld
push
pop
repnz
sbb
rolb
xchg
addr16
lret
rcr
shll
mov
push
xchg
movsb
dec
inc
add
lea
cltd
imul
mov
imul
sub
es
icebp
movsb
outsb
daa
jbe
sub
sub
xor
loopne
xor
test
dec
iret
cwtl
scas
jl
out
and
dec
stos
mov
in
lock
out
jns
dec
sub
cltd
sub
mov
ja
inc
push
popa
push
mov
sbb
or
call
lahf
cld
aam
xlat
cld
mov
xlat
dec
rcl
or
imul
xor
mov
mov
movsl
cmc
fiadds
jno
mov
in
jo
push
mov
aaa
movsl
sbb
cli
xor
and
mov
xchg
push
sbb
insl
outsl
in
mov
xchg
xor
sub
loopne
into
add
popf
loopne
xor
adc
fisttpl
mov
sub
andl
push
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
mov
cs
pop
jo
mov
loopne
jmp
nop
lcall
popf
ret
fwait
push
push
add
inc
fwait
sub
dec
imull
stos
mov
mov
jge
clc
xchg
shlb
lods
imulb
inc
inc
ljmp
mov
cld
cmp
bound
adc
cmp
dec
testb
insl
sahf
mov
pop
pop
int3
pop
mov
sbb
and
roll
in
add
stos
push
adc
repz
xor
push
xchg
ret
ds
outsl
lret
mov
inc
push
imul
pop
cmp
mov
xchg
mov
aas
dec
int3
and
push
int3
inc
xchg
cmp
addr16
push
lret
sbb
dec
push
int3
sub
lret
push
inc
cmc
in
push
push
or
int3
mov
lds
xor
jno
add
lcall
or
xchg
pop
test
lea
lods
imul
xchg
mov
mov
xchg
sbb
dec
mov
sbb
and
ds
in
jp
into
jp
cmc
cltd
sbb
jl
dec
xchg
push
outsl
sar
iret
jmp
mov
mov
lea
sarb
js
push
leave
in
mov
lea
and
test
or
cli
nop
inc
add
ljmp
push
lret
cmp
push
add
test
aad
mov
xchg
dec
xchg
mov
or
pop
daa
shrb
int
lods
push
fsubrs
mov
mov
mov
pop
dec
adc
add
insb
add
enter
sub
scas
mov
fildl
or
adc
pushf
test
pop
dec
cmpsl
inc
test
mov
dec
inc
cmp
out
sbb
idivl
adc
arpl
subl
ret
les
push
mov
pop
mov
bound
dec
scas
imul
test
xor
je
inc
and
jns
orl
push
jecxz
shll
iret
add
push
dec
xchg
cltd
add
icebp
mov
out
scas
jmp
sarb
mov
loop
test
mov
lcall
and
out
das
xchg
dec
jo
loop
sbb
aad
imul
dec
mov
sbbb
jp
dec
jnp
mov
icebp
lret
dec
sbb
and
mov
inc
pop
xlat
mov
cli
cmp
ret
scas
lcall
adc
or
push
push
das
mov
push
je
inc
aaa
popa
pop
mov
pop
popa
ds
xchg
xchg
cmp
clc
nop
push
rolb
faddl
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
fs
out
sub
adc
jo
jle
jo
rolb
pop
inc
jp
jmp
divb
call
clc
imul
imulb
test
push
int3
mov
notl
jmp
insb
adc
fdivr
mov
cld
or
sbb
jecxz
and
icebp
xchg
push
je
loope
test
jge
cltd
mov
mov
lret
mov
xor
out
ja
jb
inc
sub
std
jbe
adc
bound
in
jbe
lcall
outsl
cmp
xchg
insl
xor
movb
leave
mov
popa
shll
daa
aaa
adc
je
bound
mov
dec
std
push
ret
ljmp
pop
xor
push
or
movsb
cmpsl
cmc
scas
xchg
inc
xchg
shl
hlt
mov
fistl
enter
adc
jae
and
dec
pop
and
push
jne
out
mov
sahf
xchg
mov
or
adc
pop
mov
mov
cmp
cmc
test
out
lds
lea
or
ret
xchg
and
pop
add
jbe
int3
dec
sti
pop
outsl
loope
mov
mov
adc
jl
xchg
and
cmpsl
and
subl
dec
decl
movsbl
sub
mov
sub
dec
mov
js
mov
sahf
fdivrl
sbbb
push
mov
sahf
jecxz
xchg
cmpl
mov
or
out
mov
adc
shlb
push
out
scas
mov
sub
add
leave
mov
int3
call
inc
inc
inc
test
aas
and
repnz
rol
iret
pop
and
add
movsb
sbb
test
shlb
fcompl
pop
js
inc
pop
scas
dec
bound
sarb
lcall
xchg
xchg
inc
and
adc
ljmp
pop
iret
inc
test
jg
sub
pushf
cld
inc
mov
sub
les
divb
mov
iret
xorl
mov
in
jnp
mov
ret
loopne
sbb
jp
sbb
nop
enter
sti
gs
cli
mov
mov
in
repnz
dec
jno
dec
inc
sbb
pop
lret
jb
add
mov
addl
add
add
movsl
push
push
cmpb
ds
jns
pusha
sub
xchg
ror
adc
test
cmpsb
ret
insb
add
xchg
mov
shrb
iret
fwait
and
lahf
and
shlb
fwait
jle
fidivl
lods
mov
popf
mov
aam
rclb
iret
push
mov
repnz
loop
sub
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
fucomip
js
jo
cmp
adc
mov
cmpsb
out
or
xor
mul
adc
mov
push
imul
add
popa
flds
fistl
and
push
xchg
bound
sub
mov
aaa
cmpsl
adc
jnp
mov
and
mov
or
popa
mov
adc
lods
or
mov
pop
adc
lds
pushf
scas
inc
xchg
out
sub
insl
ljmp
add
dec
mov
add
fldcw
pushf
pop
jns
call
mov
push
fmuls
in
xor
mov
nop
outsl
sbb
mov
push
cmpl
aad
jns
pop
mov
jae
sbb
and
call
add
inc
dec
adc
popf
mov
in
mov
mov
lds
cmp
cmp
mov
adc
out
add
xchg
mov
jbe
pop
enter
sub
push
pop
loope
neg
clc
pop
fimuls
and
fldcw
adc
ljmp
roll
jae
push
xor
jle
ss
pop
popa
loopne
out
pop
pop
inc
mov
notl
icebp
jae
push
test
add
call
test
mov
mov
sub
add
dec
mov
mov
aad
sbb
or
test
out
dec
call
cmpsl
scas
dec
into
int
out
rclb
push
jp
cmpb
inc
sub
ss
test
sbb
mov
fadd
lret
jae
mov
jp,pn
dec
roll
xor
or
int3
lods
hlt
cwtl
movl
jbe
je
rcll
push
adc
aam
jecxz
cmp
movsl
pop
adc
sub
inc
jle
sub
mov
in
add
cmp
mov
addr16
or
push
jns
xorl
jo
fistps
je
mov
fwait
adcl
jnp
xchg
in
dec
fidivrs
cmp
inc
mov
jbe
cmp
mov
sub
leave
cmp
js
jp
nop
inc
int3
mov
stos
clc
mov
cmpsb
inc
pop
idivl
push
sbb
rcrl
sbb
jbe
rolb
xorb
popf
mov
stc
mov
xchg
jnp
adc
xchg
lds
push
lret
in
xor
jmp
dec
in
ds
cmp
add
popa
aam
xchg
ds
dec
mov
or
ss
push
pop
sbbb
pushf
lcall
mov
add
negl
ja
mov
lea
clc
outsb
mov
mov
fnstenv
pop
aam
cmp
popa
xor
push
out
arpl
test
stc
rcr
and
inc
push
mov
cmp
cmp
mov
pop
mov
sub
pop
scas
fdivrs
stc
orl
lea
test
pop
idivb
cli
divl
ss
lock
pop
notb
aas
mov
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
lock
jo
cmp
jnp
dec
movsb
pop
jge
xor
js
xchg
push
fs
mov
arpl
mov
pusha
into
pop
pop
stc
push
xchg
pop
add
or
cmpsb
filds
fldl2t
push
inc
pop
jp
push
ficomps
jmp
jl
ret
subb
xor
into
cmp
aam
ret
push
ja
stos
fs
or
int3
or
add
sbb
addr16
or
or
xchg
jge
and
rorb
jns
jb
or
mov
setne
xor
and
in
loopne
pusha
out
cld
push
ret
jo
cmp
inc
es
push
mov
test
push
int
inc
inc
mov
data16
dec
sub
or
lods
sbb
repnz
imul
lods
push
insb
ss
pop
test
cli
pop
es
push
mov
cmp
mov
mov
cli
lock
xchg
movsl
mov
mov
fs
test
pop
adc
or
test
jle
mov
pusha
adc
in
inc
jmp
or
xchg
add
xor
leave
outsl
push
dec
xor
dec
in
lods
gs
sbb
or
stc
inc
test
pop
addr16
iret
aas
sub
jmp
or
or
push
xor
arpl
pusha
movsb
lea
pop
jae
sub
test
sbb
push
ljmp
loope
das
sbb
jmp
sub
push
cmp
push
lret
jle
aad
sub
aam
rolb
int
aas
dec
lret
lock
jo
hlt
popf
mov
pushf
loopne
cmp
bound
lret
add
imul
loop
sub
pop
and
dec
test
or
sub
add
adc
sub
xor
pusha
rcr
dec
std
inc
popa
dec
scas
jle
sti
push
les
lret
rcrl
push
clc
mov
pusha
ror
or
adc
pop
push
jnp
lahf
dec
clc
mov
adc
sub
and
hlt
rcrl
jb
imull
jnp
outsb
xchg
sbb
hlt
dec
jmp
cwtl
mov
mov
mov
test
movsb
out
push
fidivs
jmp
jp
mov
push
loopne
dec
jmp
mov
xor
pop
pusha
mov
rorb
sahf
xor
and
mov
xchg
cmc
les
or
repz
sbb
jnp
push
mov
es
jo
lret
dec
sub
rcr
jno
cs
mov
sbb
stc
pop
lods
mov
pop
repz
loop
jbe
das
jb
push
push
stos
stos
fsubl
rorl
inc
xchg
lods
cmp
xor
fists
and
push
cmpsb
jo
enter
sbb
push
mov
pushf
push
add
sub
enter
inc
push
lret
jg
dec
arpl
scas
lods
inc
and
push
dec
fistl
pop
cmp
lods
or
scas
lret
push
pop
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
sti
jmp
sbb
cmp
popf
movsb
adcl
outsb
dec
sbbl
jb
sti
fildl
movsl
mov
sub
sub
xlat
popw
cs
bound
incl
xor
ficoms
leave
xchg
lods
push
loop
mov
jb
enter
add
adc
stc
jno
and
mov
aam
fwait
das
jge
sbb
das
sbb
sbb
xor
int
xor
cmp
out
rclb
sbb
mov
add
xchg
icebp
dec
sub
xlat
les
int3
popa
and
lret
add
movsl
cwtl
shlb
mov
test
int
xchg
lea
push
add
insb
pop
enter
pusha
mov
cmp
add
pop
std
fwait
sub
mov
out
int3
cltd
mov
mov
pop
jns
mov
fdivs
pusha
ret
jo
daa
or
cwtl
push
daa
leave
dec
jecxz
addr16
and
adc
adc
and
or
enter
adc
ds
out
pushf
push
inc
cmovle
outsl
and
sub
ror
pop
xchg
in
in
xlat
cmp
jbe
ret
and
rorl
jb
test
mov
adc
add
fucom
fdivl
mov
es
in
sbb
pop
dec
popl
cmp
push
sub
cwtl
jecxz
mov
ljmp
cs
fs
xchg
push
sub
jno
jp
and
loop
imul
or
test
adc
sbb
pop
sbb
sbb
mov
adc
and
cli
insb
popf
pop
mov
cwtl
dec
clc
pop
or
loope
lret
loopew
in
std
pop
pop
adcl
loopne
inc
inc
push
in
cmp
xchg
bound
or
clc
into
aam
stc
sub
or
and
fwait
mov
xchg
test
ljmp
les
xorb
cmp
push
push
jg
into
ret
jge
dec
xor
mov
mov
push
jmp
and
inc
flds
int3
in
icebp
mov
or
test
loop
ljmp
test
movsb
test
dec
mov
outsb
add
jge
subb
imul
mov
or
aad
push
fisubs
lahf
arpl
dec
cld
xor
adc
jp
arpl
mov
ja
mov
adc
mov
and
dec
cmp
popf
mov
in
jbe
cmpb
aaa
mov
and
jno
and
lret
fdivl
mov
dec
js
cltd
clc
mov
and
jnp
and
ret
cld
dec
cmp
in
pop
cmp
sub
pop
lahf
ja
jae
push
xchg
loop
cvtps2pd
lcall
jecxz
inc
insl
inc
pop
jmp
add
imull
fistpll
adc
and
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
imul
jge
jo
fnsave
and
ja
cld
xchg
mov
out
xor
fisttpll
in
mov
out
or
pop
and
je
arpl
mov
std
lds
xchg
mov
ret
mov
or
mov
test
adc
cmpsb
int3
out
test
sbb
push
jae
pop
mov
mov
ret
test
cmp
mov
sbb
add
cld
loope
inc
and
test
lret
jecxz
imul
mov
stc
hlt
or
mov
out
cs
dec
mov
mov
jmp
sub
push
jg
aad
mov
mov
es
imul
dec
imul
cltd
mov
pop
mov
push
dec
xchg
daa
xlat
ret
mov
mov
adc
or
or
sub
and
mov
xor
xchg
cmc
rorl
stos
daa
repnz
pop
aad
lock
jmp
xor
lahf
int
and
sbb
js
int3
cmp
daa
ss
shrb
cmc
and
icebp
sbb
jp
xor
fwait
add
fildl
xchg
lods
out
xchg
stc
fwait
pop
jb
push
loop
jl
lcall
neg
inc
push
fstpt
mov
sub
aas
sbb
xchg
mov
cmpsb
push
loop
cmp
fistpl
xchg
cld
fisubrs
leave
into
pushf
mov
into
sub
adcb
addr16
xor
mov
out
iret
popa
lods
push
call
or
lods
stc
dec
insb
pop
and
outsb
sbb
outsb
sbb
mov
sahf
bswap
or
mov
imul
ds
fildl
in
cmpsl
or
lock
cwtl
mov
outsl
xchg
push
dec
mov
call
mov
ja
push
mov
jne
insb
sbbb
sub
sub
in
iret
stos
and
xlat
inc
fcompl
insb
mov
and
inc
cmpsl
xor
mov
loopne
fcoms
scas
orl
test
shlb
pop
dec
mov
lret
xorl
cmovge
and
mov
pop
xor
cmp
stc
or
les
or
pop
push
icebp
jne
inc
mov
xchg
and
pop
push
insl
imul
test
nop
cmp
pop
jae
sbb
xchg
cmc
les
in
mov
rcrb
xchg
shll
sub
sbbl
sub
push
cs
push
es
sar
adc
fldl
jp
cmp
rcll
addr16
jl
mov
mov
aam
xchg
sub
mov
push
jns
mov
std
mov
ret
mov
or
cmp
or
rorb
out
popa
repz
aas
xlat
mov
adc
lret
and
push
mov
orl
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
out
and
jo
cmp
cltd
aaa
std
cmp
jnp
jl
and
ds
popa
cmp
and
jg
adc
cmp
scas
push
pop
jae
pop
fstpt
jmp
mov
or
data16
ror
inc
in
cmc
leave
btr
and
call
adc
daa
imul
xchg
sbb
dec
and
rolb
fmull
icebp
push
scas
push
aaa
xchg
and
xchg
lock
pop
test
add
xchg
test
add
jge
xchg
repnz
lock
testl
xor
jb
js
cmc
mov
cld
loopne
int
ds
xchg
mov
fdivrp
imul
movsl
ret
negb
into
cmp
adc
mov
insb
xor
pop
sbb
cltd
mov
xor
je
hlt
mulb
jo
sub
or
loope
add
push
fstpl
loopne
dec
mov
fsubrp
and
popf
jge
or
push
dec
hlt
jb
es
adc
fwait
in
in
in
aad
cli
xor
mov
cmpsb
test
xor
pop
mov
pop
mov
push
cmp
pop
inc
sahf
push
cmp
dec
xchg
or
mov
inc
sahf
loopnew
mov
mov
xchg
pop
xchg
shlb
jo
gs
imul
call
mov
mov
push
push
test
push
popa
mov
test
pop
in
push
add
stc
iret
push
xchg
xchg
sbb
das
jg
dec
sbb
and
stc
or
xor
idivb
std
in
pop
inc
xor
fwait
push
pop
mov
lahf
imul
mov
sti
sbb
jl
scas
sbb
in
mov
lret
in
push
or
cmpsl
insb
loop
push
dec
nop
fdivrp
mov
mov
xchg
lahf
push
push
or
clc
mov
push
imul
mov
cmp
add
push
inc
jle
xchg
in
test
inc
es
xor
mov
rorl
cmp
jno
sbb
ds
dec
aaa
adc
dec
push
das
sbb
stc
mov
pop
pop
xchg
mov
outsl
pop
daa
adc
mov
das
mov
repnz
cmp
ss
or
xor
cs
and
sbb
ret
xchg
loope
jecxz
inc
insl
insl
sbb
icebp
cs
ret
jg
mov
ds
jl
mov
lret
aaa
cs
jmp
mov
out
adc
xor
aam
xor
in
test
es
cltd
add
mov
pop
lods
jne
push
xchg
pusha
jae
fcmovne
lret
mov
imul
dec
mov
out
pop
rclb
lods
jae
jne
repz
push
je
push
mov
xchg
scas
cmp
gs
cmp
adc
mov
outsb
std
je
ror
insl
mov
and
jb
call
jne
mov
xor
push
mov
xchg
vmulss
pop
mov
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
in
push
ja
and
cmp
and
push
xchg
xor
ljmp
and
daa
mov
mov
fdivs
xor
pop
pop
or
jp
imul
rclb
jmp
enter
bound
ret
cmc
mov
add
call
filds
mov
add
xor
jne
punpcklbw
push
jne
pop
mov
pop
bound
repz
filds
dec
popf
or
int
push
iret
bound
fstps
push
pop
and
and
sbb
add
cmp
mov
pushf
cmc
imull
xchg
stos
jnp
mov
and
jns
sbb
cmp
leave
dec
pop
mov
cpuid
ficoms
imul
pop
int3
push
xor
data16
mov
loopne
sbb
out
mov
shrl
adc
pop
aaa
movsb
adc
and
push
pop
bound
mov
mov
or
leave
xchg
jae
xchg
mov
imul
fidivs
xor
fistl
das
scas
lock
int3
rclb
and
xchg
aaa
cmp
enter
push
xchg
mov
movsb
mov
cmp
cmp
jge
mov
push
xchg
xor
ss
dec
pop
cmp
ljmp
or
popa
xchg
dec
mov
in
mov
pop
xor
fidivrl
xchg
dec
jmp
sub
fists
lds
sbb
mov
mov
ret
cli
lods
jne
xchg
int
dec
popa
out
inc
cmp
inc
xchg
add
addb
and
pushf
mov
enter
loopne
inc
mov
mov
dec
or
cmp
outsl
push
fwait
inc
inc
mov
add
inc
cmpsb
xchg
lret
insl
cmc
notl
adcl
jg
adcl
mov
in
mov
mov
gs
ret
data16
jo
mov
push
addb
rcll
rorl
movsl
in
jbe
add
or
mov
push
push
add
adc
push
ja
mov
xchg
incb
lods
cmp
mov
sahf
mov
mov
loope
mov
jmp
and
cli
xchg
push
sub
inc
cmp
das
pop
push
jnp
aaa
ror
cld
and
mov
adc
mov
cli
decl
push
push
icebp
adc
add
dec
cmp
xorl
sbb
sub
mov
mov
push
cmpsb
inc
inc
xor
mov
push
aad
ja
sbbl
adc
mov
mov
jle
sbb
push
xchg
mov
in
shrb
xor
lock
or
divb
js
mov
pop
mov
aam
fsubp
dec
test
pop
lret
fdecstp
jl
rorl
pop
fldl
ss
insl
mov
mov
sbb
movnti
ds
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
add
pop
xchg
jo,pn
cmp
adc
inc
loop
xor
add
js
jbe
js
cmpsl
ds
jmp
cmp
jno
adc
test
and
fs
in
aad
arpl
int3
stc
cmpsb
daa
jb
loopne
sbb
mov
dec
pop
shll
mov
xor
cmpsl
xchg
cmpsb
jne
push
adc
jbe
jne
cmp
dec
mov
mov
lods
dec
mov
call
dec
jl
add
stos
pop
push
xchg
int3
cli
rol
mov
sub
xlat
addb
leave
push
jnp
mov
sbb
in
int
popf
mov
push
mov
in
loop
push
fdivrl
xchg
pop
jne
icebp
out
jo
mov
fwait
xchg
lcall
sbb
pop
xchg
enter
and
shrb
sti
pop
cmp
jp
leave
sub
jecxz
jne
clc
outsb
stc
shrb
sahf
jl
lds
dec
jmp
aad
mov
sahf
xchg
cmp
shrb
pop
lds
xchg
add
inc
test
jne
mov
fcmovb
dec
dec
nop
pop
ss
sbb
push
sub
and
dec
rcll
dec
into
ret
cmp
mov
lret
out
xchg
pusha
inc
mov
aaa
shl
aaa
mov
xchg
pop
lock
mov
ror
mov
jge
fsincos
out
mov
adc
dec
mov
adc
sbb
int3
test
adc
xchg
sbb
arpl
add
insb
pusha
sub
xor
xchg
dec
mov
fdivrl
ljmp
and
std
sub
lcall
ljmp
ficompl
in
mov
fistpll
pop
push
out
filds
mov
adc
or
push
lea
adc
mov
add
or
popa
push
movsl
and
mov
mov
and
and
popa
push
pop
mov
inc
into
mov
push
dec
into
lahf
divb
and
push
sub
rclb
imul
adcb
mov
enter
inc
sbb
xchg
aaa
mov
adc
mov
push
cmp
mov
aas
xchg
jo
shrb
mov
wrmsr
sti
in
add
adc
add
int3
push
icebp
cld
cld
sbb
fst
or
mov
aam
pop
jb
xchg
xor
push
iret
les
cmp
imul
rcll
ret
push
mov
pop
mov
ljmp
clc
inc
lret
xchg
mov
mov
adc
lods
or
mov
mov
pop
arpl
xor
xor
and
int
daa
fldenv
hlt
inc
add
or
sub
scas
mov
mov
into
call
xchg
adc
lret
notb
jg
jbe
nop
and
mov
lret
xchg
push
lods
dec
sbb
add
or
lcall
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
push
sub
cmp
iret
aam
pop
pop
pusha
sbb
roll
push
cmp
mov
mov
jmp
lds
xor
jmp
push
sbbl
mov
stos
lock
nop
adc
xchg
and
mov
jns
xor
mov
xchg
loope
stc
cwtl
jg
or
pop
aad
lods
imul
shrb
mov
jo
inc
xor
lea
pushw
hlt
push
setge
jns
adc
int
repz
loope
mov
xor
push
xchg
subb
jb
add
dec
jb
xchg
in
inc
add
ss
jg
stos
and
mov
in
mov
jl
mov
hlt
mov
mov
push
into
xlat
rorl
adc
mov
sbb
nop
xor
out
hlt
adc
test
push
sub
call
adc
push
ds
cmp
jge
jl
insb
jg
sub
dec
rcll
je
cs
hlt
add
mov
mov
dec
loop
lods
lret
adc
fdivs
xor
loopne
xor
sbb
mov
xchg
jp
pusha
and
outsl
mov
dec
fdivrl
call
nop
inc
ret
mov
test
sti
push
xor
and
stos
clc
iret
pusha
jo
insl
xor
push
clc
rcrb
adcl
nop
lret
fbstp
cmp
cmp
gs
lret
add
out
xor
in
xchg
popa
imul
adc
pextrw
mov
mov
xchg
dec
adc
push
sbb
push
pop
aam
str
fwait
scas
cltd
lock
pushf
mov
loope
or
fiadds
xchg
cmp
and
cltd
sub
leave
sub
dec
out
sbb
adc
jp
leave
stc
jns
cmp
int
push
or
icebp
int3
jl
addr16
and
xchg
dec
pushl
push
or
cmp
lods
mov
adc
xchg
dec
jne
or
cwtl
inc
cwtl
repz
lahf
stos
xor
push
int
fdivr
sarb
xor
pop
mov
es
lods
pop
into
jno
je
mov
in
scas
imul
rcr
mov
das
jl
int
adc
sti
and
int3
dec
addr16
dec
lret
xchg
ret
movsl
inc
mov
or
add
jle
mov
les
shll
mov
loopne
sub
ds
mov
bound
cmpl
cs
jp
cltd
push
negb
orl
aaa
stos
aam
pop
out
push
repnz
int
fwait
pop
in
mov
sub
mov
iret
add
imul
pop
push
cs
dec
push
pop
adc
popf
mov
cltd
scas
adc
inc
adc
mov
lods
cmp
push
movb
iret
out
sbb
or
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
into
movb
stos
jle
jo
inc
pop
or
inc
in
je
orb
in
arpl
test
fucom
dec
out
inc
test
movsb
jne
jno
lea
add
fstps
or
push
add
data16
add
mov
std
mov
jg
clc
aaa
insb
pop
sub
cmp
rcrl
push
inc
inc
cmp
fcmovb
and
mov
push
das
pop
pop
jne
cs
adc
lret
aas
sbb
ret
leave
nop
mov
dec
scas
mov
out
cmp
aaa
sbb
pop
icebp
imul
fiadds
js
jb
out
stc
aam
xor
pop
or
dec
test
sbb
sti
adc
pop
inc
js
movsl
ss
iret
outsb
xor
gs
lea
cmp
sub
adc
inc
sbb
or
and
rorb
arpl
add
mov
xor
adc
pop
cbtw
das
stos
int3
fstpl
mov
mov
mov
shl
lcall
push
jns
inc
addr16
push
cmpsl
cmp
leave
xor
cmp
inc
jmp
xlat
in
repz
addr16
xchg
add
push
lds
mov
or
std
pop
add
pop
cld
fsubl
xchg
je
ds
push
pop
jb
push
sbb
mov
push
mov
inc
ror
clc
mov
stos
dec
cmp
and
dec
test
fildll
cmp
inc
mov
add
cld
add
pop
add
scas
dec
mov
insb
lock
mov
lret
pop
loop
pop
sti
cmp
cmp
addr16
icebp
aas
std
mov
test
mov
mov
rcrl
andb
fimuls
lock
lcall
pop
lods
test
jb
or
cmp
and
int
negb
mov
mov
ja
jecxz
mov
das
inc
adc
ljmp
sbb
int
mov
xchg
cmpsl
lods
inc
dec
call
insl
sub
sbbl
mov
fldz
fs
mov
pop
mov
repz
push
shlb
pop
aaa
in
leave
and
rol
pusha
aas
xorb
imul
mov
push
incb
and
mov
jmp
ja
and
dec
xchg
fisttpll
jo
stos
jle
jo
test
push
cmp
je
mov
je
fsubl
cwtl
and
inc
popa
bound
or
mov
jl
lock
push
ljmp
stos
std
fists
addr16
push
xchg
test
in
aam
dec
mov
mov
adc
mov
cli
xor
nop
cmp
xchg
outsb
leave
xlat
loope
and
ljmp
adc
adc
push
mov
jge
or
jecxz
shlb
or
add
jae
and
enter
xchg
sbb
jle
xchg
insl
sbb
mov
clc
mov
into
addr16
stos
js
enter
and
aam
xor
pushf
inc
rcrb
enter
in
push
lret
mov
out
dec
or
cmp
and
lock
mov
mov
test
cmp
pop
jo
and
orl
je
jl
gs
movsb
ret
jl
dec
dec
cli
sub
cmp
fimull
scas
cmpsl
or
iret
scas
popa
mov
cltd
push
mov
imul
add
out
nop
mov
jns
fcomps
pop
and
loope
mov
xchg
mov
scas
xchg
jo
outsl
into
rolb
mov
mov
xchg
test
cwtl
or
mov
imul
adc
xor
cli
xlat
mov
pop
mov
insl
add
ret
repz
clc
inc
aad
fisubrl
aas
sti
cmp
lcall
push
xor
and
jbe
lret
dec
sbb
mov
inc
dec
imul
stos
jno
mov
or
cmp
lods
int
popf
dec
ja
mov
jno
xchg
sbb
pop
push
and
jle
int3
xlat
cmpsb
fs
inc
pop
xchg
bound
stos
push
jmp
cmp
mov
lret
les
push
into
mov
cmp
and
or
fnstenv
push
sbb
push
scas
test
pop
imul
sub
arpl
sub
call
sti
push
subb
jl
push
dec
rep
popf
and
or
inc
lods
and
dec
test
out
and
pushf
push
mov
mov
gs
fimull
xchg
cmp
pop
inc
cmp
rcrl
and
mov
fcmovnb
js
push
jnp
repnz
xlat
push
sbb
mov
fcmovb
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
sbb
stos
jle
jo
addl
jo
jo
cmp
nop
push
test
outsl
add
into
dec
add
fcmovnu
mov
clc
xchg
push
out
add
lds
int3
pop
lret
lea
xchg
jb
pusha
jo
test
mov
mov
xchg
ret
mov
popa
call
andb
add
mov
jne
sahf
pop
scas
add
lea
inc
sbb
sub
stos
cmc
stos
dec
bound
adc
pusha
jmp
clc
inc
and
xlat
addr16
cli
xor
lea
adcl
scas
sahf
jno
push
or
cltd
scas
cmpsb
lock
inc
sar
and
jb
mov
mov
aam
jge
mov
xchg
push
andb
nop
movsl
loope
vpxor
dec
dec
dec
xor
int
aad
les
mov
xchg
popa
sarb
jns
loope
cmp
je
dec
xorl
xor
fstl
hlt
jge
mov
lcall
int
enter
imul
into
lea
mov
sbb
mov
in
enter
mov
mov
sub
inc
test
cmpsb
jae
push
lock
pop
je
hlt
dec
jae
push
mov
ja
movb
aad
in
mov
mov
icebp
fmull
jmp
mov
adc
andl
pop
cwtl
ret
cmp
jo
fildll
loope
js
out
and
pop
jmp
mov
adc
mov
xor
cli
xchg
adc
xchg
insl
or
scas
adc
pop
add
sahf
sub
pop
push
jns
dec
cld
es
mulb
pop
or
adc
sahf
mov
outsl
hlt
arpl
push
xchg
jb
add
int
into
and
dec
std
xchg
inc
ret
pop
mov
test
xorb
fcoml
rclb
scas
cmp
xchg
adc
and
push
xor
pop
mov
mov
xchg
out
sbbl
es
sbb
mov
pushf
dec
add
mov
lret
mov
lock
pop
int3
das
jmp
pop
fs
adc
lods
jne
adc
aam
daa
or
inc
mov
and
mov
and
aad
outsb
jb
jl
xor
push
loopne
jecxz
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
xor
jo
jg
jo
cs
xor
mov
popf
sahf
sti
dec
out
fbld
add
aad
adc
push
and
in
daa
adc
jmp
and
outsl
pop
ficompl
add
adc
push
jp
jg
lea
dec
inc
test
outsb
loope
sub
jl
mov
sub
je
pop
push
rcrb
fs
add
out
ret
pop
cmc
sbb
incl
out
mov
xchg
shll
cmpsb
mov
cmp
sbb
sbb
mov
push
outsl
jns
cmp
cmpsb
imul
xchg
add
aad
test
xchg
xchg
dec
xorl
xlat
inc
mov
pop
xor
pop
aaa
dec
push
xlat
cltd
pushf
in
add
sub
or
out
cmc
jbe
aad
xor
call
repnz
xchg
push
cld
cmc
mov
lods
pop
inc
push
iret
je
mov
ss
pop
cmc
fildll
cmpsb
icebp
mov
insb
adc
in
sub
sarl
sub
mov
inc
out
loopne
sub
adc
lods
rcrl
push
imul
pop
and
xor
mov
test
sbb
popa
jp
sbb
sub
inc
and
loopne
push
sbb
push
adc
push
nop
out
cwtl
push
and
add
cmp
pop
adc
dec
sub
jbe
sbb
sub
subl
in
push
or
ds
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
jns
jo,pt
cmpsl
jg
jo
mov
jb
sbbl
jae
es
test
adc
inc
mov
sbb
hlt
sbb
cmp
in
jg
mov
mov
arpl
fsubrl
je
adc
repnz
jp
ja
rcrb
cli
add
push
loopne
jae
leave
adc
popa
mov
inc
out
out
sub
jp
testb
dec
lret
pop
sbb
push
filds
ret
adc
mov
xor
lods
push
mov
out
dec
or
in
test
jp
test
out
mov
cmp
push
sbb
test
mov
add
push
adc
into
aam
daa
int
inc
adcb
mov
sub
clc
out
mov
in
jmp
scas
xchg
testb
cmp
fimuls
fcmovu
in
into
aas
mov
add
in
mov
push
mov
nop
in
mov
roll
add
xor
add
mov
inc
push
sti
rcrb
jl
or
rcl
mov
push
out
sub
sub
add
je
insb
sub
lods
cli
scas
loop
les
hlt
ret
push
ret
cmp
insl
insb
pop
jge
mov
mov
repz
in
add
mov
movsb
addr16
cltd
cmp
pop
test
adc
test
out
test
xor
push
dec
clc
stos
cmp
xchg
mov
adc
add
jne
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
cmp
jo
jg
jo
or
ja
cltd
popf
mov
scas
mov
imul
mov
hlt
jne
enter
popf
int
std
lret
sub
dec
inc
and
adc
add
and
inc
das
jg
jno
add
lds
cmp
rcrl
pushf
jmp
sub
xchg
dec
jge
fnstenv
das
xor
sahf
adc
bound
inc
push
daa
repz
pushf
push
out
push
mov
pop
jne
shrb
mov
sub
push
rcll
adc
sub
and
add
mov
xchg
sub
add
mov
jnp
push
fmul
adc
push
jno
sub
xchg
pop
int3
mov
je
scas
cmp
mov
or
pop
sub
test
push
test
ja
mov
ret
addr16
orl
nop
pop
mov
int
jmp
mov
adc
cs
mov
jmp
mov
fsubrl
cmpsb
cmpsb
addr16
sbb
movsl
adc
stos
xor
push
ret
mov
popa
movsl
jecxz
clc
pusha
and
lods
mov
sbb
outsb
jmp
inc
mov
push
ds
test
je
adc
stos
mov
add
fmul
gs
adc
rcl
push
and
pop
cmp
adc
cmpsb
ficoms
mov
push
sub
into
fsubs
xchg
into
mov
adc
loope
dec
gs
lock
and
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
xchg
pop
xor
jo
loop
jo
cmpsl
cmp
jb
push
mov
lret
stos
and
lahf
movsb
scas
fwait
rclb
jl
or
ret
xchg
int
loop
pop
aam
add
mov
insl
fcomps
jbe
ss
addr16
cmpsb
pop
fidivs
push
int3
xchg
stc
dec
mov
sbb
dec
ss
cmp
mov
jne
inc
loopne
dec
cmp
shlb
int3
mov
sbb
iret
cmp
adc
leave
xchg
add
mov
loopne
push
hlt
adc
int
cmp
xchg
pop
out
push
adc
push
iret
pop
add
fcmove
std
add
out
push
out
enter
add
je
mov
jno
push
jns
test
addr16
nop
rcll
sahf
insb
movsb
pop
mov
mov
pop
jmp
movsb
mov
mov
test
imull
dec
in
int
ljmp
pop
mov
mov
scas
shrl
cltd
jno,pt
test
push
lahf
xor
fisubrs
insl
xchg
mov
arpl
mov
bound
jbe
push
add
mov
dec
pop
bound
enter
lahf
inc
sbbb
js
push
ret
adc
mov
xchg
xchg
sbb
push
arpl
xchg
mov
adc
or
movsl
inc
sti
inc
lea
push
push
mov
xchg
int3
icebp
dec
pop
jnp
stos
push
dec
repz
ds
loopne
mov
mov
std
ss
stos
out
inc
dec
mov
aam
and
sar
das
in
xlat
cmp
pop
sbb
dec
popf
mov
lock
sub
sbb
or
sbb
dec
mov
hlt
xchg
cmp
repnz
popf
xor
mov
imul
cltd
fisubs
nop
pop
cmpsl
push
mov
cmp
jns
pop
es
fadd
sbb
sub
mov
push
adcb
fildll
mov
push
shlb
mov
test
mov
fistpl
inc
scas
jnp
mov
std
jp
std
mov
into
rcrl
adc
ljmp
fidivrs
fsubl
jb
in
mov
and
mov
mov
mov
imul
or
pop
stc
push
dec
sarb
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
xor
jo
loop
jo
sub
mov
pop
lret
in
rcrb
sti
pop
jle
bound
mov
mov
lds
les
dec
cmp
nop
ja
pop
int3
in
fsubrl
and
arpl
bound
pop
imul
lea
orl
out
cmp
shrl
lock
popa
xor
cmp
pop
jbe
mov
lock
cmp
jg
cmpsb
mov
in
push
xchg
je
negb
mov
sub
xor
jle
test
mov
dec
insl
ret
and
and
xchg
faddp
add
cmc
jp
push
ds
imul
add
inc
inc
stos
movsl
dec
ror
stos
mov
icebp
adc
loop
push
push
iret
jns
aam
je
dec
sarb
shll
cmp
pop
add
cmp
push
pusha
test
enter
pusha
sbb
pop
addl
mov
test
fstpl
lahf
inc
xchg
std
xor
fisubs
dec
push
mov
ja
pop
popl
dec
mov
mov
dec
mov
lods
out
inc
mov
jp
or
clc
hlt
lret
push
push
pushf
lds
int
outsb
inc
mov
dec
sub
xor
jmp
sub
sub
dec
mov
jg
mov
arpl
into
movsl
aam
inc
addr16
sbb
push
ret
pop
in
inc
adc
or
movsb
sbb
inc
sti
mov
stos
loop
cli
and
xor
mov
repnz
sub
add
xor
out
fstl
inc
and
dec
xor
mov
adc
adc
xor
outsb
xchg
outsb
dec
push
rolb
xor
sbb
pop
popa
repnz
jle
insl
sbb
xor
out
popa
push
in
jp
or
inc
dec
dec
add
ljmp
or
jae
mov
jae
lret
mov
pop
ficoml
movsl
mov
cs
cltd
das
shlb
scas
dec
pop
je
jge
out
sti
sbbl
inc
lahf
out
cmp
xor
adc
test
cwtl
sub
lahf
test
aad
push
jne
jg
fimuls
mov
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
xchg
jmp
pop
lds
and
jo
add
push
in
insb
lock
pusha
sub
cs
inc
or
xchg
enter
cld
popf
aam
add
icebp
mov
dec
stc
and
xor
mov
push
xor
inc
mov
add
jp
cwtl
jae
add
adc
mov
jae
xchg
xchg
out
sub
cmpsb
sti
sbb
push
bound
je
dec
adc
scas
into
fiadds
cmp
push
mov
xor
icebp
pop
sub
scas
dec
arpl
adc
jbe
cmc
insb
pop
testl
xor
ja
jnp
mov
jno
sub
nop
sbb
jp
ss
outsl
cli
cmp
outsl
pop
dec
mov
mov
xchg
in
dec
shrl
mov
cltd
xchg
ds
aad
outsl
fistpll
bound
pop
or
andb
pop
mov
or
cmp
xor
stos
cmp
idiv
mov
adc
adc
xorb
cmpsb
mov
stos
in
sbb
adc
test
jno
lods
mov
dec
in
xchg
loopne
and
xor
cmpsb
dec
xchg
lea
xchg
mov
adc
add
jge
cs
pop
mov
fiaddl
mov
fwait
or
jp
loopne
and
test
mov
push
add
mov
inc
xchg
dec
cmpsl
mov
lahf
popf
fildl
in
xlat
cmpsb
cmc
add
leave
mov
int
mov
int3
mov
jae
lods
add
mov
inc
add
xchg
add
leave
cld
movsb
mov
test
fs
add
push
mov
in
push
add
ja
dec
xor
loop
xor
insb
daa
jg
mov
xor
inc
int
mov
cld
test
mov
cli
enter
mov
xor
jmp
pop
sbb
xor
rcrb
mov
dec
fcmovbe
xor
mov
lret
pop
mov
cmp
pop
pop
hlt
inc
fwait
in
push
jecxz
mov
mov
mov
xchg
dec
pop
iret
sahf
popa
inc
mov
aaa
adc
xchg
in
sbb
mov
aam
push
push
pop
dec
fdivrp
in
sbb
add
push
push
jnp
cmp
das
roll
incb
rolb
inc
clc
loop
inc
aaa
cmp
sub
dec
addb
dec
leave
les
out
mov
xchg
cmp
fsubrl
dec
sub
repz
sar
loopne
push
test
xor
xor
mov
fisubs
loopne
push
cmpsl
xor
inc
cld
and
lods
cmp
fucompp
add
xchg
movsb
aam
or
int
or
jl
pop
sbb
pusha
ljmp
movl
inc
nop
je
ss
nop
xor
test
inc
int3
xor
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
in
ret
and
jo
jns
les
lret
adc
sbb
stc
test
arpl
sarl
sbb
mov
jns
lods
xor
sbb
pop
inc
inc
inc
mov
mov
jb
xchg
dec
mov
imul
adc
jno
pop
sub
or
cmp
int
ljmp
adc
inc
xor
call
sti
fdiv
dec
pop
mov
mov
jbe
dec
cmp
push
mov
jb
xor
ror
clc
mov
or
sub
call
gs
inc
pop
out
adc
vcvtpd2psy
js
and
or
xor
inc
xchg
add
jp
pop
lods
cmp
mov
loopne
inc
test
xchg
rorb
jnp
mov
add
mov
dec
mov
das
and
push
push
adc
nop
pop
test
jnp
inc
sub
jb
daa
push
mov
cmp
mov
jl
pop
inc
or
push
js
xchg
xchg
les
sbb
jge
push
sbb
xchg
mov
sub
in
jns
lods
jne
jl
cli
rcll
mov
stos
pop
xsha1
cmpsb
mov
les
je
cli
sub
sub
shrb
imul
jg
cli
sahf
push
popa
jmp
pop
cmp
pop
leave
cmpsl
les
xchg
shlb
sub
rcll
pop
sbb
in
sbb
inc
or
dec
lea
mov
cli
jp
ror
cmpsl
jge
mov
outsb
test
mov
push
or
int
sbb
les
push
inc
adc
xchg
cmp
ja
cwtl
lea
xchg
push
or
out
loop
jge
push
sub
sahf
mov
xchg
fcmovnbe
shrl
mov
mov
lea
xchg
leave
and
out
inc
add
cmc
in
sub
mov
and
pop
incb
out
out
dec
xlat
adc
sahf
mov
fmuls
rcrl
or
ret
in
sahf
ficoms
push
mull
push
adc
mov
sub
jns
sub
jae
out
data16
imul
dec
mov
cmp
push
push
into
aad
or
fcmovnbe
push
pop
mov
aas
jo
mov
les
inc
mov
cmp
stc
adc
test
mov
fldl
pop
jl
cli
push
or
testb
dec
fistps
push
pop
and
jne
popa
out
xlat
fistps
dec
adcl
xchg
dec
push
cmp
sub
sub
push
pop
stos
stos
add
inc
jmp
xchg
leave
pop
sahf
mov
sahf
inc
loop
sahf
xchg
push
and
aad
pop
es
cmc
lock
outsb
jp
jle
dec
mov
sbb
jb
xchg
xchg
adc
test
fbld
adc
repz
mov
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
rcrb
je
iret
jo
and
jo
xchg
into
inc
jle
icebp
loope
popf
dec
adc
push
cmpb
mov
aas
mov
in
jge
and
xor
dec
mov
mov
add
fwait
mov
mov
cmpsb
pop
or
or
mov
or
xchg
ror
sbb
jne
out
enter
pushf
fcmove
es
adc
enterw
outsb
pop
or
int
cmp
inc
test
sub
xchg
and
add
jp
jp
adc
jo
loopne
adc
xlat
or
int3
sbb
clc
lret
cmp
fst
pop
pop
mov
insl
push
cmpsb
xchg
xor
andb
and
mov
das
sarl
adc
incb
in
js
pop
push
mov
aaa
mov
ljmp
aas
xorl
jns
fimuls
mov
movsb
xor
outsl
adc
fldl
leave
jl
hlt
nop
push
push
roll
mov
cmovl
shlb
xchg
push
incb
fists
and
or
scas
cmpsl
outsb
jge
add
cmp
push
in
imul
pop
mov
xchg
adc
and
imull
lret
sbb
shl
push
enter
inc
sbb
imul
gs
push
adc
dec
aas
xchg
insl
inc
nop
shrl
sarl
ljmp
shrl
inc
in
mov
imul
lcall
subb
iret
xchg
mov
xlat
pop
frstor
sahf
cmc
jl
jno
out
push
in
xchg
stos
push
dec
dec
aam
mov
pop
cld
jmp
rcll
mov
sub
or
insb
push
xchg
ja
fsubr
pop
addr16
rorb
adc
fistpll
inc
loopne
test
mov
shr
mov
mov
inc
push
add
repnz
push
pop
into
scas
testl
test
stos
outsb
sbb
cmp
jge
sub
push
jle
jo
ss
jmp
in
ficoms
mov
cmp
xor
aas
inc
aas
fcomp
xor
lret
inc
into
mov
out
sbb
jge
mov
add
mov
mov
imul
out
enter
cmp
lock
repnz
mov
sbb
orl
sbb
jge
dec
pop
std
inc
out
insb
test
das
and
mov
or
imul
ja
std
pop
mov
and
jg
cmp
out
rorl
push
lret
stc
popa
push
xor
fsincos
loope
inc
divb
dec
jecxz
rol
jno
push
lcall
pop
lods
sbb
ja
and
mov
clc
add
cli
and
lea
mov
imul
xchg
js
jmp
add
das
sbb
adcl
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
scas
ja,pn
cmpsl
int3
jo
and
jo
lock
xor
cld
ret
data16
add
test
cmp
cmc
push
push
or
and
or
push
fisubrl
fcoms
xor
push
push
xor
xor
loopne
xlat
or
adc
dec
push
push
mov
cmp
push
xorb
out
sub
add
stc
aam
add
mov
int
mov
pusha
adc
and
mov
clc
jb
sbb
sti
std
jg
cmp
or
subl
decl
aas
mov
xchg
inc
xor
jle
or
lcall
ret
lret
ret
scas
addr16
jp
inc
sub
ret
mov
fwait
push
lods
cmp
xchg
imulb
or
scas
inc
dec
in
popf
into
sbb
mov
divb
and
addl
stos
sarb
mov
adc
mov
lds
and
mov
push
loop
jp
mov
das
addr16
inc
repnz
ret
cmp
into
loope
insb
xchg
rol
push
mov
sarb
clc
dec
mov
cmpsl
jg
loopne
ret
aam
popa
and
dec
xchg
push
sbb
mov
dec
xchg
rorb
jae
xor
call
test
push
rdpmc
or
leave
adc
dec
pop
or
jmp
mov
pop
loop
add
xchg
cmpsl
adc
xor
sbb
and
loopne
repz
push
divb
xchg
sti
dec
inc
mov
andl
stc
sub
andl
xchg
loope
lea
xor
jl
shr
add
jl
xchg
adc
pcmpgtb
mov
dec
xlat
dec
sub
jmp
mov
sbb
out
shl
xchg
cmp
cmpl
lea
jns
std
idivl
add
cmp
adc
testl
or
lret
xchg
xchg
cmp
add
cmp
xchg
fidivrl
lret
pushf
rol
fadds
jno
sti
and
jns
jno
dec
movsb
mov
out
xorb
movsl
mov
arpl
mov
adc
lods
pop
jge
push
imul
stos
gs
test
popf
fwait
std
jp
push
rcr
add
in
mov
insl
imul
in
and
inc
mov
aam
mov
imull
shl
dec
add
cmp
cwtl
mov
mov
jl
pop
inc
and
out
mov
fildl
sub
adc
sub
cwtl
jg
lds
cmp
sahf
xor
fs
cmp
dec
bound
lahf
movsl
bound
xor
mov
sbb
mov
andl
lret
sahf
and
cmp
or
or
ljmp
mov
fistpll
addr16
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
or
mov
jo
jge
jo
in
jno
jno
imul
pop
pusha
xchg
pop
dec
movb
pop
and
je
dec
aas
mov
jl
add
dec
lret
pop
pusha
test
xor
xor
les
sbb
pop
mov
movsl
negb
pop
mov
lods
mov
push
in
les
xor
jbe
cwtl
xlat
mov
std
xchg
out
add
or
aad
popf
sbb
fiaddl
or
add
xor
out
repnz
fbstp
lmsw
mov
jno
cmpb
je
dec
lea
adc
iret
cwtl
xor
stos
sbb
hlt
xor
or
push
mov
xchg
or
inc
clc
mov
push
lret
jae
inc
arpl
mov
hlt
xchg
or
inc
fcmovbe
arpl
and
cmp
imul
scas
dec
xchg
lahf
aad
or
ret
in
lea
cwtl
mov
mov
enter
scas
sub
xor
push
pop
xchg
sbb
sti
cmp
lahf
loope
stos
inc
lret
scas
lret
and
jmp
les
mov
inc
insl
icebp
push
jp
push
mov
leave
fs
mov
inc
aad
je
xchg
sub
jp
cmp
cmp
adc
cmp
sub
je
xor
aam
dec
pusha
lcall
jmp
movsl
icebp
xchg
test
cmp
xchg
pusha
fst
faddl
imul
scas
pop
cmpsl
sub
dec
sbb
add
hlt
pslld
and
and
jmp
popa
imulb
jl
and
mov
mov
int3
test
xchg
sub
dec
cmp
and
shlb
add
outsl
stc
sub
imul
sub
or
cs
fisubs
ds
sub
xlat
stc
rorl
test
mov
mov
clc
inc
jmp
inc
cmc
mov
push
daa
sbb
dec
push
mov
stos
cmpl
out
rcrl
mov
push
xchg
and
sub
mov
pushl
aaa
adc
or
adc
cmc
push
dec
push
cmpsl
int3
add
cs
sub
mov
dec
jmp
xchg
cmp
pop
mov
sahf
sbb
mov
push
fiadds
dec
add
or
cmp
dec
adc
adc
fidivrl
sub
icebp
jne
filds
fcoms
and
ja
jge
and
adc
sti
out
fdivrs
push
adc
shlb
mov
test
mov
pushf
add
notl
xchg
adc
xlat
dec
xchg
jle
stos
in
lods
and
jp
icebp
loope
loope
xchg
xchg
sub
xchg
imul
ret
adc
pusha
rorb
mov
roll
bnd
aaa
arpl
adc
cmpsb
xchg
subl
fs
cmpsl
dec
les
mov
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
or
xor
aad
jo
jge
jo
pop
pop
cmp
test
leave
int3
xorb
push
and
xchg
and
sub
test
jecxz
mov
dec
cld
cs
sarl
push
pusha
fwait
movsb
dec
adc
sub
inc
mov
inc
sahf
movsl
data16
jg
or
fistps
sti
fldcw
test
mov
cmpb
mov
push
sbb
xlat
push
popf
mov
mov
jmp
cs
cmp
into
push
cltd
repz
mov
push
sti
outsl
xor
push
pop
cmp
popf
iret
mov
popf
jae
in
outsb
js
mov
hlt
stos
cmp
lds
ss
sbb
loopne
mov
xorb
bound
addr16
adc
sti
jno
mov
or
popf
xchg
mov
or
dec
test
sub
jmp
std
adc
lods
xchg
mov
inc
leave
lahf
mov
in
add
cmp
dec
fidivl
fldcw
xor
inc
out
popa
call
fidivrl
arpl
xchg
cmp
add
loopne
and
daa
stc
xor
in
cltd
adc
mov
xor
inc
push
mov
icebp
les
repz
mov
clc
and
sbb
pop
repz
lret
or
adc
pop
mov
cmpsl
pop
xchg
bound
sahf
mov
dec
jl
out
repnz
mov
lods
popa
sub
and
mov
bound
add
xor
movsl
imulb
inc
cltd
dec
fmuls
and
insl
gs
dec
shll
dec
dec
inc
adc
loopne
fidivs
test
lds
cld
fsub
fs
push
lds
mov
sub
inc
mov
mov
cmpl
inc
insb
adc
es
xchg
leave
rol
jp
pusha
pop
sbb
sub
stos
out
insb
pop
int
lds
pop
jo
in
jnp
loopne
jb
cli
mov
sbb
ja
test
push
inc
outsb
lcall
jmp
test
add
in
mov
and
add
jnp
ja
pop
stc
test
bound
add
lret
pop
sbb
adc
mov
pop
ss
and
bound
into
ret
jnp
call
cmp
xor
fiaddl
outsl
mov
fst
jp
add
mov
adc
mov
int
jbe
mov
je
jl
jle
repnz
pop
ljmp
pop
loopne
sbb
jl
pop
not
add
xchg
sub
subps
sbb
in
not
int
xor
sahf
inc
jle
mov
push
imul
push
aam
fs
mov
xor
or
arpl
and
iret
scas
sub
fucomp
jbe
add
sarb
daa
or
inc
xlat
xor
lret
add
mov
stos
jne
clc
stos
mov
stos
pop
mov
sub
cs
sbb
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mull
push
shlb
and
jo
sbb
pop
sti
inc
push
sbb
mov
mov
js
ret
shll
pusha
dec
shr
call
pop
add
xchg
js
lret
out
cmc
and
test
mov
or
jns
xlat
xor
lods
xchg
xchg
lods
pop
mov
mov
jecxz
mov
add
pop
nop
cld
out
std
add
jnp
cli
daa
ret
lds
mov
cs
jg
insb
sahf
leave
movsl
push
cmp
imul
lods
arpl
jmp
pop
xchg
nop
sbb
xlat
jbe
or
fcomip
xor
add
pop
adcl
mov
sbb
adc
cs
jae,pn
dec
or
inc
jle
lods
daa
ret
mov
negl
jg
sbb
inc
cmc
xlat
cmpsl
mov
dec
inc
shl
pop
lock
dec
mov
call
add
mov
mov
pop
push
mov
dec
xchg
cmp
call
pop
inc
mov
mov
jle
in
xor
into
dec
mov
push
insl
pop
les
fildl
cmc
movsl
leave
cmp
clc
or
movsb
int
xlat
cltd
mov
or
mov
mov
or
lea
das
push
je
pop
sarl
sub
pushf
into
push
jo
sbb
jg
push
int3
data16
into
jmp
dec
fs
out
movsl
add
mov
movsb
or
mov
lcall
loope
jle
sub
das
es
mov
xchg
xor
cli
jnp
fdivr
imul
mov
mov
jno
xchg
or
in
fstpl
sbb
pop
notl
hlt
xchg
mov
data16
add
xchg
cmc
imul
in
jmp
mov
jg
mov
jp
mov
adc
mov
add
sub
repz
pop
aaa
leave
adc
push
sbb
adc
les
mov
cltd
fs
cmp
sti
or
sahf
inc
push
jle
repnz
rol
loope
cs
daa
daa
rcr
cmpsb
add
sbb
cmp
imul
fst
add
add
mov
fbstp
pop
movsl
stos
add
sbb
fs
mov
or
hlt
ljmp
mov
mov
sti
aam
insb
addl
or
flds
jge
cmp
pop
add
outsl
rcrb
cmp
adc
test
outsl
fisubrs
sub
lret
sbb
sub
inc
sbb
sub
shlb
loope
mov
rorb
mov
push
aam
xchg
cmp
xchg
test
push
lret
xchg
sbb
iret
testl
and
sbb
sub
lods
jno
into
imul
aas
cmc
dec
adc
ja
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
xchg
gs
and
mov
int
cmp
sbb
imul
dec
mov
repz
mov
je
mov
daa
sbbb
das
fcoms
cs
jl
mov
mov
xor
lds
mov
mov
filds
stos
sbb
sbb
xchg
and
jmp
sub
cli
fsubl
insl
pop
nop
ljmp
xor
mov
pop
inc
push
sub
mov
inc
push
jp
aaa
loop
cmp
inc
jg
cmp
jg
sarb
jmp
jle
pusha
dec
negl
shll
int3
fdivl
or
fisubl
mov
in
into
sbb
and
jg
aad
es
cwtl
jnp
jae
lods
enter
imul
cmp
push
adc
repnz
enter
outsb
adc
mov
xor
jo
fs
and
jle
leave
shrl
and
aad
push
mov
xor
xor
pusha
xchg
insb
jae
cmp
jp
sbb
add
fadds
xchg
xchg
mov
cmpb
adc
loope
rorl
xchg
sub
lods
dec
lcall
imul
mov
popl
xchg
ja
mov
or
ficoml
mov
repnz
cmp
stos
das
add
and
jle
mov
out
or
in
dec
mov
insb
inc
inc
cmpsb
leave
cwtl
test
xor
xor
push
jle
pop
rorb
dec
cmc
xchg
pushw
adc
pop
mov
xchg
int3
sti
inc
mov
cmp
inc
pop
loop
xor
rcl
popf
les
xor
frstor
sub
jae
mov
jb
push
shll
loope
pop
add
mov
cmp
cmp
lea
and
cs
gs
pop
pop
mov
xchg
lret
faddl
stc
lods
pop
test
stos
adc
daa
dec
mov
pop
int3
sbb
or
and
shl
add
stos
mov
cwtl
mov
xchg
pop
movsl
push
inc
ret
cltd
mov
inc
lret
movsl
jecxz
jo
rcrb
out
loope
divb
scas
pop
dec
push
das
cwtl
cmp
fimull
cmp
outsb
dec
jne
lods
sbb
aaa
fsubl
test
push
mov
xchg
mov
xchg
outsb
shll
push
push
inc
lock
jnp
add
add
pop
or
loopne
fwait
stos
push
inc
xchg
pop
rcr
jno
test
repz
mov
lods
inc
mov
jno
loopne
jecxz
leave
sahf
or
jmp
loope
sub
xchg
jo
inc
push
fiaddl
test
sbb
call
rcrb
adcl
pop
movsl
xor
lcall
aas
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
dec
shlb
fdivl
and
jo
dec
lret
pop
mov
fwait
inc
shrl
es
xchg
or
insb
pushf
stos
mov
cmpsl
mov
dec
jae
dec
xor
lea
push
dec
faddl
push
ficoml
orl
mov
icebp
ja
out
adc
ficomps
or
mov
rolb
add
cmp
nop
pop
xor
adc
jbe
in
mov
das
xor
lcall
lcall
adc
sti
or
xor
shl
cmp
inc
push
jmp
mov
clc
mov
pop
ret
stos
ret
fcomps
jne
sbb
xchg
mov
roll
ss
stc
mov
ror
int
xor
inc
js
adc
jnp
push
test
mov
dec
sbb
icebp
cmpl
dec
dec
dec
xor
and
lock
mov
outsb
outsb
adc
fisttps
add
xchg
cmpsl
cmp
sub
dec
ficompl
sbb
and
jns
pop
xchg
mov
jmp
mov
push
fmuls
out
or
adc
mov
or
xlat
and
lret
inc
push
mov
shl
push
adc
inc
or
pop
sbb
in
fs
cs
lea
xor
aad
inc
jecxz
push
or
mov
dec
mov
mov
repz
js
dec
jb
jg
lock
lret
sub
or
arpl
xchg
aad
fstl
pop
lcall
popa
fidivrs
mov
shlb
mov
xchg
das
out
and
xchg
cmp
lcall
icebp
in
sub
clc
mov
insl
popa
xor
sbb
mov
pop
rcll
and
hlt
rcr
push
dec
imul
outsb
inc
shrb
pop
sub
ljmp
adc
movsl
std
xchg
or
cmpsl
pop
push
jle
add
pop
pop
and
jge
add
test
mov
fwait
mov
pop
cmpb
add
adc
and
jp
jo
jge
inc
dec
xor
mov
mov
mov
mov
lret
int3
xchg
ss
xchg
inc
fnstcw
test
or
stos
or
in
sarb
inc
sbb
jnp
in
icebp
jnp
icebp
mov
fimull
cmp
push
rcrb
dec
out
loopne
sbb
imul
sahf
jmp
or
cltd
lods
jno
dec
xor
xor
pop
jge
hlt
call
shrb
divl
data16
mov
shll
add
frstor
sbb
addr16
into
sub
lret
mov
daa
xchg
or
mov
ljmp
sub
sar
sub
outsb
fisubs
lods
arpl
lret
push
sub
push
pop
xchg
mov
insb
pop
jns
mov
ja
rol
push
std
or
jbe
nopl
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
jo
and
jo
sahf
sbb
jp
pop
jnp
adc
xchg
hlt
xor
ljmp
loopne
test
dec
repz
dec
dec
push
xor
sarb
test
nop
mov
mov
out
popf
adc
and
pop
cmpsb
stc
subl
cmp
add
xchg
xlat
jecxz
pop
dec
pop
lods
shlb
jmp
pusha
sahf
cmpl
sub
pusha
push
cmp
in
fdivrs
lcall
outsb
loop
out
mov
adc
jo
hlt
pop
imul
fcmovu
js
xchg
xchg
lret
sub
subl
inc
das
dec
dec
add
pushf
mov
fwait
in
sahf
sbb
ljmp
cmpsl
subl
fwait
jge
cmp
bound
sbb
in
imul
sub
icebp
stos
lret
push
inc
or
push
jmp
cmc
mov
mov
xchg
dec
rolb
mov
push
lods
bnd
test
ret
push
fnstsw
push
mov
xlat
sbb
fcom
jge
and
xor
sub
cwtl
push
ret
mov
jle
ret
or
pushf
lea
mov
or
cmpsl
lds
arpl
outsl
popf
mov
xor
movsl
sub
push
cmc
icebp
movsl
inc
push
sbb
xchg
shl
ja
outsl
shlb
or
inc
mov
dec
out
mov
pusha
jnp
testl
cmp
iret
ficompl
inc
cld
in
cli
test
mov
and
jns
into
repnz
mov
out
pand
mov
push
and
ret
push
jae
mov
xor
out
inc
pop
int
inc
cmc
add
ret
fnstcw
push
pop
mov
into
loop
sub
or
mov
and
frstor
dec
in
lock
bound
push
fs
lds
adc
xchg
sti
push
lods
dec
pop
adc
mov
fwait
pop
adcl
out
or
loop
xlat
call
cmpsb
imul
mov
or
xchg
lods
inc
sbb
mov
inc
movsl
fnsetpm(287
int
adcl
and
cmc
jns
bound
pop
frstor
imul
cmp
lds
dec
icebp
lods
sbb
xchg
lods
inc
mov
xchg
add
jmp
mov
arpl
call
gs
in
fildll
shlb
push
pop
adc
mov
or
aas
in
mov
stc
xchg
sahf
dec
lret
insb
sti
mov
outsl
aam
xchg
cmp
cmp
jg
dec
cwtl
daa
adcb
inc
xor
xchg
pop
xchg
pop
out
outsb
adc
xchg
cmp
cmp
xchg
adc
add
add
jmp
add
out
out
xor
call
ficoms
ja
jo
and
jo
mov
dec
lret
movsl
scas
xchg
lea
sub
jp
xor
and
ljmp
xchg
and
mov
ds
mov
fiadds
or
jmp
jmp
and
jns
mov
jmp
test
pop
mov
inc
aas
inc
push
sub
xor
add
lods
rorb
cmpsl
push
mov
xlat
sub
loop
les
mov
in
push
pop
xchg
sub
aam
mov
movsl
inc
mov
icebp
insl
mov
sbb
xor
leave
fidivl
pop
out
dec
jne
out
lahf
adc
and
sarb
add
stos
add
cmp
add
adc
fwait
mov
fidivrs
repz
jno
out
cmpb
cmp
mov
inc
repnz
in
and
inc
sub
mov
fiaddl
add
std
cs
sbb
pusha
jle
cltd
adc
int3
add
mov
mov
sbb
sub
or
mov
imul
in
xchg
vpshuflw
mov
sbb
mov
outsl
jle
rep
lcall
add
inc
stos
inc
out
aas
or
int
mov
pushl
enter
icebp
pop
movsb
cmp
xor
cs
insb
add
mov
and
xchg
xor
imul
xor
cmp
repz
pop
jmp
cmp
inc
in
outsl
sbb
cs
scas
jmp
dec
mov
sbb
iret
xor
cmp
adc
mov
inc
sbb
fmul
rcll
jp
mov
jge
jl
testb
mov
sti
sbb
push
rcll
and
test
mov
movsl
ss
add
daa
and
popa
and
int
repz
push
mov
push
orl
movsl
mov
call
dec
leave
push
push
xchg
mov
es
xchg
roll
push
lds
data16
or
fs
mov
push
in
xor
mov
lods
xor
lcall
push
xor
inc
jge
in
mov
repnz
mov
loop
mov
pusha
push
mov
pop
popf
test
roll
and
jl
inc
mov
jmp
leave
test
pop
inc
gs
or
dec
nop
cmp
sub
inc
add
jns
push
jmp
aaa
xchg
or
stc
mov
shrb
in
jnp
add
push
outsl
mov
cmp
xchg
and
push
adc
fisubrs
insl
insb
ss
jmp
aas
mov
shlb
jmp
nop
bound
loopne
adc
pop
dec
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
pop
push
dec
daa
loop
jo
jge
jo
mov
les
test
xlat
lcall
pop
ljmp
add
sbb
pop
fs
pop
mov
int
inc
xchg
cmp
push
enter
andl
xor
lret
daa
aad
lea
add
add
inc
imul
mov
clc
js
add
fs
aaa
xor
xchg
into
inc
adc
out
call
xchg
ret
cmc
movsb
lahf
cmp
jb
outsb
cs
cwtl
inc
mov
cmp
jo
pusha
adc
and
push
leave
les
repnz
lahf
mov
dec
inc
mov
inc
testb
test
inc
sub
jae
sbbb
shll
and
fnstsw
dec
cmpsl
jno
scas
ror
cmp
test
add
mov
add
outsb
sbb
jle
push
pop
fcmovb
sahf
sahf
stos
and
inc
xor
xchg
nop
or
flds
cwtl
loopne
or
pop
daa
popf
sub
cld
fwait
shlb
out
sub
mov
push
pop
imul
movsb
call
push
mov
loop
outsb
xchg
and
cmp
mov
inc
fnsave
shl
pop
neg
in
xorl
xor
mov
outsb
xchg
dec
cmp
inc
mov
mov
inc
sbb
cmp
loopne
sbb
or
push
pop
mov
int
xchg
mov
testl
scas
mov
adc
push
icebp
and
xchg
xor
push
jno
dec
push
dec
lahf
icebp
sbb
inc
cld
mov
sbb
shll
xlat
inc
mov
test
cmc
cmpsl
cmpsl
in
lea
clc
ja
dec
test
inc
push
pop
ss
in
push
ftst
pop
push
mov
fstpt
mov
ret
inc
pushf
mov
aam
adc
popf
mov
pop
mov
sbb
jecxz
imul
jb
jne
scas
sub
in
dec
mov
inc
in
mov
dec
dec
fdivl
push
xchg
or
das
sarl
pop
out
inc
loopne
test
hlt
jge
cmp
cmp
lcall
stos
cmp
std
mov
jp
push
imul
arpl
rorl
dec
popa
dec
shll
fwait
cmp
adc
jns
fsubs
arpl
mov
jbe
rcl
adc
mov
dec
ret
jp
int
out
adc
inc
loop
and
cld
int
cmp
cmc
repz
imul
and
ret
add
lock
scas
nop
mov
test
leave
rcr
inc
push
cmp
or
inc
push
lcall
sub
push
ret
outsb
addb
pop
clc
inc
add
add
inc
jge
or
inc
loopne
or
jmp
out
mov
ja
add
xchg
jo
and
jo
cltd
aad
icebp
pop
adc
leave
cmpl
fisttps
and
call
popf
mov
stos
ret
aaa
mov
clc
mov
loop
sub
imul
aam
insb
sbb
js
fwait
popa
xchg
mov
push
test
lods
cld
push
mov
test
pop
xor
aas
shll
dec
testb
mov
gs
xchg
lret
fidivl
cmp
pop
inc
push
aaa
inc
fs
and
add
push
mov
push
aas
inc
jno
aad
ja
cmp
xchg
sarb
add
adc
mov
ja
movsl
mov
dec
ds
repz
test
dec
push
mov
add
add
cs
inc
out
push
xor
sub
pushf
push
cmp
das
add
aaa
xchg
ret
cmp
in
into
pop
js
mov
clc
pushf
or
cmp
or
sahf
jp
add
push
push
inc
xchg
lcall
jle
pop
ficompl
cmpsb
ja
xchg
push
ja
test
cltd
add
out
mov
sahf
cmpsl
fwait
xchg
jb
add
jecxz
loop
inc
jp
cmpsl
lods
mov
stos
arpl
lds
enter
ljmp
inc
shrb
push
aad
aas
xor
rorl
cmpsb
scas
lcall
adc
cmpb
fwait
or
mov
xor
xchg
shl
mov
adcl
sub
jo
pop
inc
stc
inc
js
ljmp
fdivr
mov
addr16
mov
dec
jno
inc
loope
sbb
and
jb
js
lds
cmc
sar
fwait
adc
lock
incb
call
ret
jg
pop
and
mov
testb
adc
movsb
aas
mov
sbb
rorl
daa
jle
cmp
mov
and
jp
idivb
inc
jle
std
adc
imul
jmp
pop
adc
mov
or
xchg
rorb
push
std
pop
push
sbb
xlat
popf
in
popf
test
cmpsl
push
dec
mov
shll
xchg
mov
cmp
sub
xor
jecxz
mov
and
stos
ja
sbb
mov
stos
pushf
hlt
add
jne
int3
cli
push
and
push
add
push
pop
cld
pop
outsl
aaa
lods
cmp
aad
hlt
mov
sbb
xchg
clc
aas
or
jno
cmp
rorl
mov
test
xchg
fsubp
cmc
loopne
cli
cs
cmp
or
or
dec
xchg
dec
js
add
jne
cld
mov
and
movsl
jo
dec
sub
mov
lods
lret
fcmovbe
std
repnz
inc
or
add
pop
imul
push
mov
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
idivl
in
jo
lahf
jge
jo
rorl
push
in
lcall
inc
mov
test
mov
pop
sub
and
out
sub
mov
dec
mov
divl
fcmovbe
bound
ds
cmpsl
or
xor
mov
int3
cli
test
movsb
add
mov
int
cmp
call
or
jb
mov
in
xchg
in
jb
test
lods
pop
mov
adc
mov
cmp
pop
repnz
inc
push
outsl
test
fadds
lcall
inc
test
mov
lds
jns
flds
mov
add
sub
fwait
lea
mov
cmpl
icebp
mov
stc
notl
jb
out
cmpsl
int
seta
shrl
add
ss
roll
mov
test
mov
jae
into
fwait
stc
push
out
sub
xlat
neg
mov
pop
scas
rorb
cmp
pop
das
xchg
sbb
rorb
xor
and
add
rcrl
dec
sub
mov
sub
pop
mov
mov
cmpsb
daa
jae
mov
mov
adc
loope
xchg
insb
xor
into
mov
ret
or
mov
pop
jno
dec
mov
mov
cmpsb
mov
dec
scas
test
mov
ficompl
jmp
pushf
cltd
sbb
and
mov
cmp
repz
sub
dec
lret
or
mov
jns
sbb
xchg
push
xor
imul
mov
dec
mov
sbb
stc
or
mov
mov
ss
ss
xor
lret
mov
nop
test
daa
xor
loope
test
add
stos
adc
test
pop
rcr
mov
pop
lret
dec
lods
mov
or
arpl
cmp
fsubrp
les
xor
cltd
cmp
sbb
add
inc
popw
ficomps
jo
cld
insl
mov
push
add
push
lcall
lods
sti
flds
imul
xor
std
stos
mov
push
mov
repnz
add
notb
loop
and
in
test
add
cmpb
push
mov
add
out
notb
jmp
adc
mov
push
xor
sbb
xchg
add
jne
loopne
dec
insl
sub
cmp
dec
mov
call
iret
test
in
loopne
imul
inc
repz
mov
aaa
jne
sub
mov
bound
dec
repnz
ret
ljmp
movsl
xor
pop
pop
and
push
jno
mov
mov
rorl
repnz
imul
jo
inc
or
enter
fs
push
and
lfs
pushw
out
in
or
fcoms
push
pusha
pop
out
into
mov
adc
mov
push
in
mov
fdivrp
push
mov
jae
loopne
movsb
sahf
lea
pop
das
adc
and
push
pop
rorb
xchg
js
aas
popf
push
stos
shrl
push
and
int
je
cmpsl
test
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
cmp
fsubl
call
jo
or
shll
pop
dec
gs
push
stc
daa
mov
mov
es
test
mov
in
add
rorb
sbb
add
push
pop
xchg
movsb
hlt
lret
jbe
testl
addr16
sbb
in
xlat
mov
test
adc
inc
aad
subb
cmc
xor
xchg
addr16
mov
mov
adc
xchg
xchg
lock
adc
dec
stos
add
jmp
push
vmread
stos
xor
lahf
lods
jecxz
in
inc
sub
lea
xchg
sub
add
inc
jle
jp
xchg
pushf
loop
stos
or
rolb
rclb
xor
js
mov
pop
or
and
lods
mov
mov
mov
cmp
cmp
xchg
add
pop
lcall
loope
mov
push
add
push
inc
iret
cmp
push
sbb
loopne
push
or
and
insb
hlt
insb
push
add
cmp
mov
pop
jne
push
jbe
ja
ret
jb
bnd
data16
inc
sti
lea
in
test
shl
cmp
stos
fwait
arpl
jg
adc
aaa
popa
xor
pop
fld
pusha
test
push
into
add
sbb
add
and
push
leave
cmp
js
add
mov
dec
pop
pop
mov
push
ret
daa
and
mov
nop
mov
dec
xor
cmp
mov
fs
loopne
insb
loope
dec
add
jg
pop
mov
sbb
and
scas
mov
add
pop
rclb
es
pop
jbe
cmp
inc
ret
xchg
fwait
mov
sub
mov
pop
lahf
mov
stos
sbbb
inc
cwtl
scas
scas
dec
imul
dec
push
push
insb
jg
and
push
jns
xchg
div
jle
rorl
notb
mov
jno
test
inc
jle
push
jecxz
test
icebp
mov
ljmp
or
jg
mov
mov
into
push
jbe
addr16
cmp
sub
sbb
orb
scas
or
cmpl
int3
out
adc
xchg
or
les
sub
aad
aam
xor
sub
sarb
xor
iret
xchg
cli
imul
or
scas
pop
cmp
or
xchg
and
outsl
das
pushl
pop
push
bound
add
outsb
fwait
jmp
js
lods
stc
cmp
push
cmp
cmpsl
pop
clc
jns
dec
mov
and
xchg
mov
jnp
imul
imul
jl
popf
dec
andb
out
ret
cld
and
xchg
int3
mov
lahf
xchg
popa
test
mov
jns
clc
scas
mov
mov
xchg
fdivl
pop
pop
xchg
cmc
xor
add
mov
mov
bnd
nop
enter
fdivrs
fildl
inc
mov
xor
cmp
es
lods
xchg
les
or
and
adc
inc
mov
lods
call
or
jo
and
xchg
inc
and
inc
pop
lds
repz
or
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
cwtl
xorb
inc
cmc
jo
lahf
jge
jo
mov
mov
dec
jp
sub
ds
arpl
loop
and
in
and
add
popf
cld
popf
leave
arpl
iret
jae
sbb
test
in
mov
scas
out
repz
ss
fcmovnbe
xlat
jle
cli
aas
cmp
imul
divl
ficoms
fsubrp
fsqrt
imul
or
lcall
scas
mov
jle
mov
pop
subb
fiadds
sbb
test
mov
cld
add
cmp
xchg
cs
lcall
pop
xor
aad
sub
pop
sbb
andl
mov
movsl
cmp
jle
dec
loopne
mov
repnz
sub
push
mov
adc
jbe
xchg
jb
mov
mov
repz
movsb
add
cmpsl
adc
lret
lds
dec
shlb
seto
insl
stos
popf
dec
shll
or
jne
xchg
adc
xor
cmp
outsb
aam
aam
xchg
aad
xchg
sbb
test
mov
dec
jge
or
cli
and
outsl
sbb
sahf
push
pusha
pusha
sbb
sbb
mov
aas
mov
cmp
int
mov
clc
xchg
jbe
cmp
dec
cwtl
imul
sub
fwait
pop
or
dec
jnp
in
push
jp
fisubs
test
arpl
mov
sbb
lret
mov
cwtl
loop
lods
cmp
push
std
shrl
mov
data16
jp
movsl
sbb
sbb
movsb
jp
or
push
xor
mov
dec
mov
mov
dec
cmp
out
sub
repz
dec
cmp
into
sbb
addr16
loope
dec
cmp
gs
adc
add
arpl
fdivs
xorb
xchg
mov
mov
cmp
add
dec
fsubrs
xchg
xor
sub
cmpsb
pop
test
inc
cmpsb
rclb
outsb
jno
jmp
jae
fdivrl
and
jbe
decl
movsl
sbb
testb
xchg
lcall
push
andnps
and
inc
daa
sahf
fwait
inc
das
or
push
xor
mov
dec
ljmp
cli
sbb
mov
add
xor
dec
cmp
shr
lds
aam
pushf
xor
cs
mov
push
push
mov
imul
push
mov
cld
cmp
out
out
sub
orb
xchg
loope
mov
ds
scas
jecxz
push
out
dec
adc
sbb
leave
leave
sahf
push
cli
fcoms
push
push
scas
gs
adc
mov
jg
push
push
xor
and
idivb
jne
jg
jne
sbb
cmpsl
loopne
adc
or
cmp
adc
imulb
repnz
cmpsl
stos
stos
inc
outsl
in
insl
movb
mov
lcall
jge
lret
rclb
add
cmp
push
test
out
stos
f2xm1
dec
out
ja
xor
arpl
cmp
cmp
popa
jmp
stos
or
pop
mov
sahf
jo
sarb
lock
adc
and
or
mov
dec
cmp
mov
mov
daa
mov
mov
pavgw
je
mov
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
pop
cmc
pop
jmp
lahf
jge
jo
repz
loopne
hlt
inc
xor
dec
fimuls
stc
cwtl
inc
sbb
rorl
push
sub
divl
scas
stos
rolb
and
push
pop
inc
ljmp
stos
mov
bound
and
or
ljmp
adc
popf
mov
jo
jno
js
adc
push
xchg
push
and
mov
xor
jno
xchg
sbb
stos
clc
or
fimull
sub
arpl
enter
inc
adc
lahf
leave
outsb
movsl
xor
and
js
or
push
xchg
inc
cltd
dec
test
dec
cwtl
sbb
loop
cmpsb
push
in
sub
xchg
cmp
aad
ja
pop
mov
sti
and
lods
mov
jne
das
mov
jae
xchg
jg
sbb
and
sub
adc
xchg
sub
sbb
and
inc
xor
std
ss
and
mov
daa
repz
add
movsl
lcall
fistpll
inc
sbb
movsb
push
push
add
test
sarb
cmp
xchg
ljmp
mov
subl
fcoml
xchg
jg
icebp
std
mov
xlat
jae
sub
xchg
fcmovnu
movsl
dec
cs
push
rcrl
xchg
cmpsl
jmp
mov
inc
xchg
aam
sbb
sbb
push
add
adcl
dec
test
push
sbb
mov
movsl
jmp
sub
popa
mov
fld
xor
adc
pop
decb
push
repz
pop
sub
push
or
dec
fwait
push
cli
inc
sub
push
dec
mov
or
pop
in
pop
pop
clc
dec
dec
xchg
insl
push
sarb
jae
push
add
fstps
mov
fstpt
scas
mov
movsl
lock
stc
arpl
push
mov
xor
pop
rcl
jbe
addr16
cmp
mov
lret
sub
xor
ja
adc
notl
dec
fs
mov
ljmp
add
sbb
and
setns
adc
and
fwait
mov
shrl
mov
mov
pushf
scas
sbbb
mov
aas
push
pop
add
iret
cmp
lods
or
sub
dec
dec
dec
pop
xor
subl
addr16
fldt
stos
std
mov
pop
notb
mov
xor
cmp
or
cmp
addr16
and
sub
sub
adc
mov
jne
test
dec
add
mov
outsb
mov
mov
incl
xor
sbb
inc
fiadds
sbb
sub
imul
xchg
mov
fsubrs
dec
dec
xchg
cld
adcl
das
test
js
add
out
fnstsw
fcmovb
add
push
movsb
add
ljmp
fwait
cmp
cmp
call
test
push
and
mov
pushf
jmp
inc
fndisi(8087
pop
das
in
add
les
push
pusha
stc
stos
cwtl
cld
mov
mov
jae
xor
aaa
je
jecxz
lods
cmp
cmc
into
adc
mov
lds
test
enter
out
into
prefetch
mov
mov
aad
xorb
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
test
xlat
add
jo
lahf
jge
jo
test
sbb
cltd
stos
dec
pop
repnz
lret
gs
pop
push
mov
sbb
adc
cmpsb
or
ss
jecxz
mov
addl
rolb
shrl
jbe
dec
dec
ss
and
icebp
pushl
mov
roll
outsl
dec
inc
jno
mov
jp
addr16
hlt
inc
mov
loop
sbb
in
mov
xchg
fwait
aaa
sub
mov
fs
fstl
mov
mov
adc
xor
or
dec
sarb
mov
jecxz
pop
add
push
fwait
dec
cld
push
lods
jo
mov
dec
arpl
sub
dec
lock
int
leave
inc
cwtl
fists
mov
rorl
icebp
mov
push
xor
push
add
sub
outsl
sbb
jecxz
pop
lods
jecxz
add
or
push
or
or
jg
sbbb
insl
mov
fstps
out
and
in
data16
xlat
xor
nop
jp
and
ret
loope
fs
in
stc
je
out
mov
push
jae
and
outsb
push
cmp
outsl
sub
push
lret
test
rcll
pop
lods
cmp
cmp
addb
rol
jb
xor
dec
stos
ss
fldl
pop
das
outsl
dec
add
testl
dec
dec
and
iret
stos
lret
add
std
jo
jbe
jmp
in
sub
pusha
aas
loope
add
mov
push
push
push
call
cmp
mov
call
fisttps
inc
std
movsl
addr16
pop
pop
pop
xchg
inc
add
outsb
fucom
jmp
xchg
jne
imul
mov
adc
push
mov
popa
sbb
rclb
mov
fdivl
mov
dec
add
mov
addr16
mov
push
jne
inc
test
add
imul
xor
xor
xor
cmp
jne
icebp
sbb
fwait
sbb
adc
mov
out
stos
push
xor
mov
cmp
clc
sbb
xchg
mov
sub
rolb
test
and
psubw
fisubrs
push
sti
sub
sbb
out
out
add
shll
and
jge
icebp
loope
movsb
cmp
mov
jb
xchg
andl
push
cmp
cld
mov
test
aas
nop
hlt
mov
push
ficomps
std
je
mov
aam
sub
movsb
sahf
notb
add
mov
rcrl
mov
add
loop
xlat
jo
lock
popa
lret
into
nop
in
hlt
jge
shrb
lret
call
mov
pop
push
lods
fnstsw
in
sub
lcall
sahf
lods
aaa
les
mov
add
push
gs
dec
loopne
sub
or
adc
sub
pop
sub
icebp
pop
xor
mov
daa
inc
pop
sahf
in
scas
mov
movsb
xor
ds
add
add
push
bound
xor
enter
mov
xor
mov
repz
loop
add
jmp
shlb
sub
lret
imull
mov
jge
jo
sarb
cmpl
cmpsb
cmpsl
inc
xorl
leave
sub
sub
jg
or
repnz
xorps
inc
push
rdmsr
sbb
lods
pushf
inc
clc
push
rorb
lcall
sahf
sti
sbb
add
or
outsb
stos
sti
ja
cmc
sub
inc
sub
aad
cmp
pop
sub
icebp
jns
ror
lea
jle
mov
add
fistpll
cmp
cmp
clc
sbb
mov
lcall
push
scas
inc
std
ds
fwait
ljmp
jns
pop
das
xchg
push
lds
mov
adc
aaa
divb
sub
mov
mov
add
inc
test
aam
adc
cwtl
sub
test
and
packuswb
mov
cmpsb
rcrb
mov
jae
mov
outsl
in
shlb
jne
pop
imul
jge
test
pop
repz
mov
lds
adc
xchg
loope
mov
jbe
in
push
mull
xchg
fcmovnbe
sub
mov
lcall
scas
dec
mov
aad
jp
cmp
xchg
push
arpl
adc
xchg
mov
popa
pop
pop
and
loopne
push
xlat
push
arpl
dec
daa
sub
inc
jle
dec
dec
sbb
push
inc
rorb
or
xor
in
sub
fs
jmp
add
int3
xchg
das
pusha
test
mov
insl
movsb
imul
or
add
xor
stc
and
mov
or
int
push
mov
add
iret
je
out
inc
inc
sbb
sbb
testb
jl
rol
xchg
mov
mov
fadd
fdivrs
test
mov
lods
fidivrl
sbb
ss
mov
subb
iret
std
filds
sub
mov
fdivrl
fldl
out
and
xor
outsb
sbb
rcrl
ret
into
mov
cltd
cli
test
push
insb
sub
insl
push
pop
mov
push
add
pusha
lret
xchg
clc
xchg
movl
push
pop
in
mov
dec
or
in
pop
fwait
std
sti
gs
pop
rorl
xchg
std
jmp
xor
jns
mov
jmp
or
push
mov
jns
cs
adc
sub
stos
punpckhbw
ret
xchg
xchg
sbb
test
sub
sub
aaa
xchg
mov
in
outsb
scas
sub
sbb
xor
push
pop
jmp
lds
int
mov
mov
pusha
and
aam
add
and
inc
mov
sti
repnz
push
insl
push
pop
sbb
das
dec
push
jl
mov
pop
outsb
bound
xlat
lods
out
gs
jne
inc
cmp
mov
mov
bound
clc
xor
dec
xor
adc
jecxz
dec
sub
scas
dec
lods
xchg
xchg
push
push
pop
mov
sbb
xchg
int
jo
mov
inc
sbb
call
cs
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
push
xchg
enter
jo
jge
jo
mov
xor
dec
jb
call
fidivrl
repz
test
xor
test
das
outsb
imul
push
movsb
mov
mov
xor
xchg
mov
xchg
popf
aaa
xor
mov
test
gs
fistps
lret
imul
movsb
in
ja
adc
jmp
adc
jnp
not
test
xchg
xchg
mov
movsl
aas
movsb
les
push
shr
mov
lock
xchg
test
gs
icebp
movsb
in
push
cmp
rorl
and
cmp
test
xorl
jmp
push
dec
xchg
shlb
lods
jnp
dec
lahf
jo
addr16
in
bound
xchg
mov
pop
jne
insl
sahf
pop
inc
mov
in
jmp
inc
hlt
mov
xchg
or
pop
cmp
aam
pop
ficoms
pop
inc
push
testb
leave
pop
repnz
cmpsl
adc
push
out
pop
mov
leave
inc
rol
jp
push
ljmp
es
sbb
sbb
test
add
inc
sbb
sti
fsubp
mov
cmp
mov
cwtl
leave
outsl
push
jno
jno
imul
dec
xlat
int3
call
push
lods
pop
sub
sti
push
push
ss
bound
jnp
repnz
ficoml
or
test
repz
and
icebp
std
xor
ret
and
push
lock
decb
add
pop
pop
sub
push
mov
cwtl
jp
cwtl
push
ret
lock
pop
jl
jle
aad
insb
outsl
pop
clc
call
popf
andb
pop
or
in
xchg
scas
aaa
dec
pop
aad
pop
lods
cs
ret
jg
inc
jl
fsubr
rcr
in
inc
sbb
test
pop
and
or
lret
clc
xchg
stos
data16
test
mov
sub
ja
jp
mov
pop
out
sbb
pop
jl
and
xor
lea
jb
scas
cld
dec
sub
in
hlt
insl
pop
in
sub
xchg
div
push
or
bound
sarl
sbb
cltd
pop
mov
adcb
setbe
addb
pushf
outsb
mov
push
xchg
jge
mov
leave
fimuls
lock
bound
and
mov
lret
jns
jecxz
pop
jp
mov
cmp
incb
sub
test
push
fisubrl
gs
add
jge
aas
loop
outsb
rcr
int3
xor
pop
lods
in
aam
mov
test
xor
scas
sbbl
jmp
cld
and
sbb
mov
mov
lret
dec
ss
stc
cmp
dec
and
popf
les
decb
pusha
into
loop
out
test
lds
inc
jp
cld
sbb
xchg
loop
cmp
cmp
or
sar
fs
imul
dec
mov
std
shll
outsb
ss
loopne
out
push
cmpsb
inc
lds
xor
out
adc
xchg
adc
add
int
mov
lds
iret
fldcw
xchg
clc
scas
and
test
sbb
pop
leave
rclb
and
out
push
push
test
ds
add
sub
jle
test
sti
and
sbb
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
adc
pusha
xorl
jge
jo
pop
ljmp
sarl
jecxz
cmp
test
ds
jno
out
inc
std
add
push
cld
iret
xchg
rcrl
mov
loope
sub
pop
jae
pop
push
gs
xchg
adc
icebp
adc
jns
or
in
push
mov
mulb
inc
std
jp
xchg
jo
and
in
out
jbe
test
cmp
inc
add
inc
pop
xor
mov
mov
int3
adc
inc
cmp
push
cmp
sahf
mov
leave
daa
add
scas
aam
lea
fcomps
or
mov
lock
out
lahf
sbb
imulb
dec
aaa
dec
add
push
cmp
pop
push
bound
push
lcall
and
xlat
dec
ret
in
bound
in
jbe
jb
xlat
enter
ljmp
adc
sbb
inc
add
mov
dec
adc
mov
adc
pop
ja
jnp
cli
icebp
pop
or
outsb
cmp
sbb
pop
fisttps
lcall
jmp
push
repnz
out
fcompl
int3
mov
pop
outsb
lock
dec
je
outsb
and
or
mov
in
test
jg
divb
sti
lock
pop
sub
dec
adc
xchg
mov
xchg
pop
and
insl
insb
aad
and
gs
inc
sahf
in
pop
jns
ret
repz
lcall
mov
push
dec
mov
sub
mov
and
aam
aas
lock
cwtl
movsl
mov
loopne
dec
mov
add
adc
shll
popa
fidivrs
sbb
push
mov
in
cmp
fcompl
into
movsb
xchg
inc
jbe
leave
pop
add
and
int3
jae
out
repnz
inc
mov
xlat
lock
test
pop
mov
push
sub
bnd
scas
mov
repz
sub
push
pop
push
pop
sub
mov
loope
mov
adc
mov
movsb
sbb
cwtl
lock
pop
jge
dec
sbb
ja
dec
cmp
outsl
pop
es
cmpl
ss
mulb
adc
sub
xor
aad
ret
fsubrl
out
loop
cmpsb
in
pop
pop
sbb
gs
jmp
fsub
rcll
mov
repz
pop
jns
repnz
inc
fucom
lds
repz
mov
inc
sub
push
sbb
pop
scas
push
movsl
js
insl
icebp
push
pop
sahf
pop
enter
mov
das
negb
inc
and
sub
andl
cmp
out
add
rol
ds
jb
das
lods
push
jmp
fnstenv
jno
dec
and
mov
xor
dec
lret
test
xchg
divb
pop
andb
scas
lahf
outsl
sahf
fimuls
push
rcr
dec
and
jo
sub
mov
test
out
ficoms
xor
jmp
adc
scas
cmpsb
shrl
xchg
lock
out
and
nop
xor
rorb
adc
mov
repnz
add
shlb
push
xchg
in
mov
push
dec
icebp
imul
shl
mov
push
faddl
test
mov
cmp
push
call
repz
sub
hlt
sbb
shll
ljmp
mov
mov
cld
shr
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
mov
jo
lahf
jge
jo
push
push
mov
stc
push
xchg
std
pop
mov
fwait
addr16
pusha
std
into
jp
shlb
fs
fs
xchg
rcll
push
and
pop
pop
das
shrb
sub
je
mov
mov
sub
or
int
mov
ja
or
test
ret
jmp
push
jb
dec
inc
lret
adc
push
mov
das
rcrb
lods
test
xchg
or
mov
test
jo
outsl
add
test
pop
jo
fistpll
insl
xchg
sbb
bound
js
pushf
filds
in
pop
sub
push
fdivrp
push
loopne
or
out
repnz
jl
lret
dec
fistps
data16
mov
and
cmp
xor
jmp
dec
dec
adc
addr16
push
aas
inc
and
push
js
pop
lcall
mov
sbb
jge
into
rcll
add
jmp
and
or
lock
mov
pop
adc
movsl
jb
and
mov
js
mov
mov
std
xchg
outsb
rorb
xchg
lock
imul
fdivp
popf
xchg
enter
test
cli
xchg
push
inc
aaa
xlat
and
insl
ds
cltd
mov
lcall
sbb
or
xor
bound
ret
shr
jno
ljmp
adc
sbb
addr16
inc
insl
cltd
imul
in
fcomp
add
mov
mov
xor
jmp
ret
test
cld
pop
lods
adc
cmp
mov
and
xor
aad
dec
xchg
sub
mov
xchg
das
adc
sti
adc
in
leave
xchg
in
addr16
movsb
dec
mov
addr16
xchg
adc
inc
out
cmovbe
pop
mov
inc
push
sub
lds
int3
mov
pusha
fwait
adc
repnz
fsubrp
add
rcll
mov
jmp
jae
stos
mov
cmp
inc
jnp
pop
jb
cli
stos
dec
mov
and
movsl
or
mov
add
lret
jno
pop
ficompl
icebp
cltd
lcall
test
fs
jno
pusha
jmp
jmp
insb
xor
or
add
cmpb
mov
add
sbb
out
pop
push
mov
mov
jbe
subl
adc
mov
mov
pop
lret
pop
pop
and
xchg
loop
pop
xchg
xor
adc
xor
inc
push
test
fbstp
sahf
mov
sbb
mov
pop
or
loopne
and
dec
pop
and
fnsave
in
int
cwtl
cltd
and
popf
and
popf
mov
mov
aad
arpl
out
clc
je
jae
imul
leave
enter
or
test
xor
jmp
or
jno
jb
hlt
pop
or
and
xchg
and
cmp
cmpsb
add
pop
test
cmp
adc
mov
dec
pop
stos
add
out
pop
ret
xor
std
push
xchg
push
mov
jno
shll
sub
mov
xor
inc
or
dec
mov
shlb
mov
or
aaa
sub
dec
or
xchg
fdivr
mov
xor
sbb
pushf
mov
push
dec
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
lcall
lahf
jge
jo
cmp
rorl
xor
xor
pop
das
jae
mov
mov
ds
roll
lods
adc
add
into
js
pop
pop
sarl
aad
push
jp
jne
sub
and
stos
fs
add
jbe
in
aaa
call
out
add
out
inc
lods
adc
mov
hlt
outsl
mov
add
jo
in
mov
push
sub
add
clc
into
mov
out
mov
xor
or
sub
pop
scas
mov
in
push
jl
and
push
inc
mov
push
fs
decl
pop
sub
bound
out
mov
stc
mov
sub
pop
jmp
cmp
pusha
je
or
cmp
push
inc
mov
pop
mov
leave
enter
fistpll
and
add
and
pop
fidivl
mov
mov
push
adc
jns
movsl
push
loope
push
push
cmp
sti
repnz
mov
mov
out
mov
nop
sar
mov
pop
inc
std
shll
lret
adc
rorb
roll
scas
mov
or
jg
mov
xor
push
repnz
mov
fcoml
fnstsw
jb
call
push
mov
lds
loopne
stos
loopne
mull
mov
ds
pop
fdiv
popa
std
mov
dec
add
jae
aad
xchg
push
cwtl
pop
sbb
jecxz
push
imul
ja
sbb
xchg
cmpsb
pop
out
fldpi
cld
dec
push
loope
or
xchg
in
xor
xchg
lods
mov
cli
and
mov
mov
sub
movb
fcompl
pop
xchg
cmp
xchg
arpl
push
pop
xchg
add
je
shrb
xchg
and
xchg
push
sbb
sbbb
repnz
nopl
jmp
adcl
xlat
lcall
mov
cmp
push
arpl
les
lds
or
sbb
push
cmpsl
jmp
push
mov
lock
loopne
cmc
jg
rcrb
imul
in
outsb
adc
insl
scas
ficoms
mull
iret
mov
test
sub
mov
mov
sahf
test
dec
and
push
cmpsl
les
pop
xor
pop
xchg
ljmp
cli
xchg
xchg
add
adc
pop
out
xor
int3
pop
enter
insb
cwtl
scas
jb
lret
stos
dec
dec
mov
or
popf
insb
jle
mov
jo
aaa
mov
add
mov
sbb
dec
jg
sub
sarb
xchg
in
xchg
cmp
xchg
out
xchg
or
insl
mov
jge
loopne
mov
mov
dec
bound
je
dec
mov
pop
xchg
loope
pop
pusha
cmp
mov
pop
mov
mov
xorb
xor
and
outsl
movsb
pop
jle
push
lods
sub
inc
fs
aam
repnz
adc
sub
jae
cmp
fs
adc
f2xm1
xchg
dec
xlat
in
push
mov
movsl
cmp
dec
pop
inc
add
aad
out
out
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
pop
clc
imul
mov
lahf
jge
jo
jns
push
xchg
xor
stos
dec
ret
add
adc
ret
cli
loope
adc
clc
gs
fdiv
mov
clc
jp
ret
pusha
ds
xchg
or
in
adc
cmp
lods
outsb
mulb
push
xchg
push
insb
repnz
pop
xchg
pop
pushf
jbe
mov
je
cmpsl
mov
jmp
xchg
cld
shlb
pop
rcr
pusha
icebp
lahf
cmp
daa
xlat
push
imul
nop
sbb
mov
out
sub
aad
cli
dec
aas
andps
in
aas
jb
or
lret
jmp
add
dec
pop
mov
xchg
add
arpl
ja
xchg
repz
sub
sbb
xlat
mov
mov
mov
dec
mov
sbb
pop
insb
stos
jne
push
fldcw
faddl
pop
pop
cmc
xchg
sbb
xor
pop
pop
out
and
xor
add
xchg
in
adc
js
adc
inc
cmp
or
popf
jmp
jo
int3
inc
fiaddl
sbb
int
scas
mov
outsl
out
xor
mov
cmp
imul
jnp
call
imul
sbb
shll
cld
push
xchg
pushf
mov
push
pop
sbb
add
jnp
js
mov
and
mov
mov
mov
fnstcw
fwait
mov
outsl
or
sub
sysexit
jle
mov
inc
int
test
inc
dec
gs
jle
test
stc
and
adc
pop
pop
mov
cltd
es
repnz
or
xchg
lods
adc
cli
cmc
jno
mov
mov
mov
mov
mov
cmp
jecxz
hlt
sti
adc
push
inc
mov
pop
in
cmpsb
cmp
inc
pop
push
xchg
popl
lret
pop
adc
jnp
enter
or
adc
dec
fucomp
xchg
xchg
sub
test
cmp
sahf
gs
push
fs
add
call
fs
aas
das
xchg
jne
cmp
pop
mov
pop
fcmovnbe
sbb
neg
fildl
sub
leave
ds
and
inc
cmp
in
out
pusha
push
out
adc
popf
sub
mov
and
lahf
cltd
daa
mov
sti
cmp
xchg
xor
xchg
xchg
jae
xchg
cmp
ficompl
push
rorb
cltd
lret
mov
test
ror
cld
push
int3
jle
ljmp
xor
and
mov
xchg
xchg
sub
jns
cmp
inc
rolb
sbb
or
in
add
pop
daa
lds
jecxz
sub
ds
test
hlt
es
and
pop
push
shlb
adc
outsl
faddp
mov
sbb
dec
cmp
mov
dec
jl
pop
push
pusha
jne
aam
mov
xchg
jbe
mov
adc
mov
jmp
icebp
shlb
dec
push
mov
sbb
ja
insl
or
xlat
pusha
addr16
mov
outsl
jb
add
fstpl
dec
loopne
push
adc
jmp
lret
test
mov
xchg
sbb
repz
add
jno
imul
icebp
incl
fadds
adc
stos
setne
dec
out
inc
fcompl
js
push
sub
call
in
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
push
push
push
mov
xchg
jo
lahf
jge
jo
shrl
je
loopne
mov
cmpsl
pop
sti
push
adc
cld
aas
push
inc
mov
sub
mov
dec
mov
push
sub
add
cmp
pop
jns
dec
xchg
push
xor
repnz
mov
push
out
push
fistps
inc
nop
sbb
lret
cmpsl
pusha
xorl
cmp
rorb
fnstcw
jno
jmp
and
inc
mov
sub
lret
jmp
mov
icebp
push
dec
add
or
insb
movsb
stos
mov
lods
push
cmpsl
sub
andb
test
call
dec
jb
call
xor
lock
imul
jne
push
push
mov
js
jmp
inc
inc
push
xchg
add
jno
adc
incb
dec
adc
out
fwait
adc
lods
sbb
scas
adc
fs
push
xor
push
xchg
mov
popf
mov
lret
push
mov
ret
mov
push
xorb
or
mov
mov
jnp
adc
outsb
gs
sub
dec
lds
movsb
mov
mov
and
lods
icebp
scas
lcall
mov
shlb
les
and
fcoml
gs
mov
push
mov
les
ret
add
loop
jb
rolb
rolb
adc
scas
pop
add
ljmp
out
enter
ret
xor
sbb
in
es
xor
scas
aas
loopne
mov
arpl
dec
mov
clc
mov
test
je
mov
popa
add
add
cmpl
push
test
cli
ljmp
mov
test
mov
push
sbb
push
pop
sarl
pop
daa
inc
addr16
or
inc
push
data16
pop
cmc
xchg
aas
sbb
rol
pop
jne
lret
xchg
bnd
sbb
jbe
mov
push
pop
and
ret
push
in
ja
jno
or
xchg
cld
fwait
cmpl
cmpsl
mov
xchg
outsl
call
divb
jle
xchg
cltd
out
jae
cld
fldl2e
dec
lcall
push
mov
mov
and
mov
jae
push
jne
mov
sub
xchg
loopne
test
mov
sahf
push
sti
ficoml
adc
inc
ljmp
push
adc
mov
jae
lock
mov
lds
jne
sahf
or
dec
lahf
mov
loop
add
fwait
in
lcall
jnp
cmp
mov
inc
icebp
xor
mov
pop
outsb
xor
ss
mov
icebp
arpl
enter
popa
jl
adc
fcompl
jge
xor
push
pop
std
inc
or
sbb
push
and
and
loopne
mov
add
sbb
add
jae
xor
pop
jle
jmp
insl
test
loopne
outsb
xor
data16
sbb
mov
sbb
movsb
mov
pop
out
mov
lahf
sbb
xor
stos
insl
in
inc
mov
push
xor
cmp
xchg
dec
aam
dec
insb
shl
in
lret
out
jge
subb
jo
sbb
je
push
ljmp
mov
pop
pop
pop
lea
fs
roll
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
sbb
ds
nop
jo
lahf
jge
jo
jb
add
jbe
sti
inc
aad
mov
or
repz
mov
jb
mov
push
loopne
into
cmc
aad
aad
mov
and
mov
movsl
adc
pop
push
fwait
pusha
das
push
inc
cmp
sahf
mov
dec
cli
insl
jge
mov
shl
std
aaa
call
push
fcom
and
out
adc
adc
jae
dec
jp
mov
jg
sahf
ret
pop
scas
cmc
fs
sahf
pop
in
stos
ret
les
pusha
inc
jg
or
xor
stos
cmpsb
lahf
fnstenv
sbb
push
push
nop
leave
jb
jb
lock
mov
add
fs
adc
sub
push
lea
mov
sub
cmp
pusha
lock
in
pop
inc
push
outsl
push
imul
cmp
dec
xchg
cwtl
adc
and
xchg
inc
lock
mov
cmp
mov
int
lea
popf
inc
sbb
sbb
pop
cld
mov
and
psubq
inc
push
push
dec
lea
cmc
push
ret
inc
out
or
stc
or
inc
jmp
fsubl
push
sahf
push
and
out
add
pushf
inc
in
dec
out
lcall
jg
jb
bts
pop
cmpsb
ds
aaa
xchg
out
shr
push
les
adc
jno
add
jecxz
inc
xchg
lods
imul
sbb
mov
jnp
xchg
imull
out
mov
adc
mov
lea
test
push
js
jns
cltd
mov
pop
cwtl
dec
lret
xor
fmuls
test
push
inc
test
out
stos
xchg
cli
fisttpl
mov
aas
jae
xchg
dec
insb
or
int3
mov
into
xchg
cmp
into
movsb
dec
sarl
shl
add
int
mov
popa
mov
push
or
bsr
xchg
inc
jge
sub
mov
xor
loope
out
andb
adc
mov
mov
push
jg
xchg
cmp
fwait
mov
popa
jne
movsl
mov
xchg
js
jg
or
ret
repz
xchg
aas
in
sub
inc
js
outsb
imul
mov
adc
inc
sbb
push
mov
sub
cmpxchg
das
insb
bound
fbld
cmpsl
fs
out
push
pusha
push
rcll
mov
popf
loopne
dec
test
sahf
in
cmp
mov
dec
mov
push
sub
lahf
repz
insb
pop
cmp
sti
outsl
bound
jae
mov
fiaddl
mov
cmp
or
jns
jecxz
cli
xor
mov
jne
mov
pushf
addr16
dec
push
mov
adc
push
add
divl
xchg
ja
enter
push
pop
push
sahf
jge
int
ljmp
inc
icebp
sub
xchg
mov
dec
xchg
mov
outsb
cmp
test
and
in
cmp
push
ret
and
dec
xchg
dec
mov
or
mov
lcall
sub
int3
inc
xchg
xchg
mov
pushf
shrl
ret
lcall
sbb
jbe
test
insl
adc
fs
cmp
clc
push
xchg
xchg
mov
in
sbb
inc
add
out
xor
sar
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
out
repz
pop
stos
popf
jo
lahf
jge
jo
pop
add
or
das
flds
sub
icebp
cmp
or
xchg
push
push
push
sub
jno
inc
mov
sub
or
shlb
xlat
fwait
pop
enter
and
rcll
stos
dec
sbbb
sar
std
aas
mov
subb
push
push
cmpsl
test
in
lret
in
test
call
pop
bound
aad
std
cmp
cltd
xchg
data16
rcr
jns
or
sahf
mov
jbe
cmp
stc
dec
push
jae
xchg
std
mulb
dec
mov
jle
adc
das
dec
jnp
out
add
hlt
add
add
add
mov
push
xchg
aas
scas
push
sub
add
jb
sub
jge
jnp
repnz
out
daa
cltd
stc
mov
outsb
fadd
aas
sub
sub
mov
mov
or
int
leave
push
loopne
and
mov
enter
fildll
or
xor
loope
xchg
out
ss
mov
sahf
inc
pushf
ficoms
addl
inc
popa
testl
std
leave
push
push
xor
pop
push
mov
outsb
shrl
nop
pop
mov
cmpsb
pushf
scas
push
stos
pop
pop
icebp
add
mov
mov
dec
mov
ret
add
and
inc
mov
pop
push
inc
cli
dec
mov
push
xchg
gs
bound
sbb
out
xor
sub
cmc
clc
dec
in
in
add
dec
icebp
cmp
cmp
sbb
push
pop
xor
or
jecxz
and
sub
push
scas
xor
imul
adc
sti
lahf
sub
nop
cs
add
dec
loope
or
cli
int3
test
jp
jl
ds
cmp
add
jbe
mov
mov
sahf
add
jge
out
adc
push
dec
push
inc
push
fnstcw
push
add
xchg
xchg
xchg
data16
imul
push
jns
mov
pop
jbe
out
cld
das
sub
sbb
sub
movsl
cmp
mov
dec
fstps
repz
leave
push
jmp
pop
sbb
test
pop
and
dec
jmp
in
rclb
icebp
sarb
lret
mov
arpl
test
xor
iret
stos
insb
popa
shll
pop
imul
dec
lea
out
js
popf
sub
outsl
xchg
sbb
loop,pn
jl
fldcw
loopne
push
inc
dec
mov
call
mov
negl
fldt
lret
imul
or
stc
sbb
fdivs
loope
loopne
cwtl
push
cmp
mov
and
lea
mov
or
in
outsb
pop
xchg
clc
outsl
loope
pop
int
lods
add
lea
lods
inc
popf
loopne
mov
inc
xor
cmp
imul
jne
cli
nop
addb
push
add
out
lcall
cli
movsb
mov
and
dec
pop
mov
jp
and
cmc
cli
xor
je
xchg
pop
push
adc
jo
aas
xchg
add
adc
mov
shlb
cmp
inc
and
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
xchg
mov
jo
jge
jo
pop
cmp
jl
push
repz
mov
xchg
xor
sbb
ja
dec
or
decb
inc
stos
ret
daa
ds
sub
jnp
push
loope
int
mov
adcl
imul
adc
cltd
js
mov
test
stos
jge
loop
lret
inc
or
jge
filds
push
hlt
mov
sbb
and
mov
xlat
movsl
movsl
into
sub
mov
pushf
insl
xchg
cwtl
inc
and
ret
mov
lods
cmp
dec
sahf
imul
jnp
lods
stos
call
outsb
movlps
jmp
xor
in
inc
push
dec
fsubrs
xchg
mov
xchg
pop
fwait
out
and
test
push
jbe
decb
adc
push
sahf
adc
mov
cmp
ss
inc
mov
push
mov
jne
or
and
and
fmulp
adc
mov
into
rorb
pop
mov
dec
add
js
mov
sbb
or
push
mov
jg
stos
sbb
cmp
xor
jecxz
sbb
dec
xchg
xchg
in
mov
push
xchg
sub
pusha
mov
ljmp
cwtl
lcall
xchg
insl
sbb
mov
and
lea
mov
push
hlt
add
lods
lahf
aaa
cmpsl
add
mov
imul
ret
cmp
mov
push
push
je
aam
jge
cmp
pusha
inc
stc
cltd
scas
xor
enter
sbb
mov
xchg
and
and
imul
popf
dec
ret
negb
adc
or
repz
jbe
mov
jg
dec
adc
lea
test
sbb
rcr
pop
outsl
mov
jb
aaa
hlt
cmp
lods
roll
dec
cmp
mov
lock
sub
out
stos
cmp
sahf
jp
mov
fwait
jecxz
mov
lret
jnp
movsb
push
or
push
cmc
lret
notl
or
lret
fldenv
pop
xor
push
sbb
mov
inc
icebp
jnp
pop
mov
mov
cmp
inc
dec
ds
mov
aam
dec
daa
ljmp
and
sbb
xor
mov
das
mov
inc
dec
sub
jb
mov
test
and
movsb
enter
mov
ret
lcall
iret
testb
les
pop
mov
mov
xchg
test
sbb
xchg
jg
or
daa
fimuls
adc
sbbl
test
sar
lods
aas
shl
sbb
stc
mov
jne
adc
inc
cmp
call
fstps
lret
mov
outsb
lds
mov
push
xor
or
pop
inc
lahf
mov
cmp
movsl
sahf
iret
cmpsl
xchg
cmc
xchg
daa
jb
cmpb
xor
mov
lock
jns
lock
mov
stc
pop
out
add
jle
adc
jl
arpl
dec
in
dec
mov
add
pop
jle
test
out
dec
dec
mulb
pop
or
sub
xchg
and
out
into
lcall
enter
cltd
popa
movl
mov
mov
cwtl
pop
faddl
xchg
rcll
mov
and
xor
loop
ds
dec
js
in
jno
subb
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
pop
jge
cmpsb
jo
ret
jg
jo
lcall
jmp
xor
loop
cmp
jb
sub
xchg
lods
mov
mov
jge
stos
int
pop
clc
ret
mov
sbb
repnz
loopne
in
in
xlat
mov
iret
ss
or
and
xor
mov
fldl2e
daa
ja
subl
imul
sub
fcoml
dec
mov
lds
test
sbb
dec
fstl
hlt
xor
int
and
add
lock
dec
sub
lcall
and
xor
out
mov
mov
xchg
or
addr16
cs
shl
pop
popa
push
push
out
dec
call
and
jg
sbb
dec
dec
cmpl
test
dec
iret
gs
das
mov
out
data16
xchg
lea
dec
mov
sbb
ja
mov
or
hlt
or
dec
xor
dec
notl
movsb
int3
shll
or
lea
mov
fstps
lahf
pusha
adc
adc
inc
lods
cmpsl
imul
bound
fwait
loop
and
dec
mov
insb
xchg
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
or
fisubl
ret
jg
jo
imul
xchg
jl
cmp
sti
cmpsb
daa
test
es
or
add
jecxz
fsub
pushf
fisubs
aaa
shll
xorb
xor
in
add
loopne
jg
mov
gs
jne
push
jle
xchg
or
dec
mov
testb
xchg
fisubrs
mov
xchg
push
mov
xchg
je
fstl
jl
imul
jmp
fistpl
cmpsb
lods
arpl
pop
cmp
aas
xor
xchg
lcall
fwait
fwait
call
ds
xor
ja
loopne
fs
jo
fsubs
pusha
push
call
sub
ja
in
jl
rcl
push
jmp
xor
mov
mov
outsl
mov
popa
outsb
out
mov
push
shlb
fwait
clc
jl
inc
push
or
ret
jg
mov
addl
push
pop
outsb
and
push
inc
loop
mov
test
scas
dec
sbb
push
jb
xor
cmp
nop
sbb
mov
loopne
lock
aaa
mov
imul
call
and
lea
mov
jmp
rorl
sbb
xchg
cmp
mov
jo
sub
xlat
leave
sbb
mov
mov
pop
fwait
addr16
mov
xchg
fmul
subl
mov
scas
neg
add
xchg
test
mov
inc
jl
jbe
xchg
sub
inc
cmpl
pop
aad
mov
add
push
aas
in
aas
dec
sub
push
cmpsb
or
lea
outsl
mov
pop
mov
outsb
neg
int3
loope
push
divb
add
lock
pop
es
les
jge
fdivrp
mov
adc
cld
add
dec
adc
in
fs
mov
les
xor
jne
arpl
test
mov
sbb
loopne
mov
lret
arpl
nop
sbb
call
xchg
jne
fnstcw
ljmp
mov
mov
lcall
add
cmp
bound
loope
popf
subl
or
cmpsl
mov
xchg
scas
jl
adc
mov
mov
test
frstor
sbb
jo
xor
insl
adc
out
mov
jno
sahf
xor
inc
idivb
pop
dec
mov
stos
xor
inc
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
jg
testl
sbb
push
test
out
xchg
jg
add
mov
cwtl
movsl
mov
out
nop
pop
rclb
sbb
lret
mov
adc
sahf
ret
fidivrs
lret
stos
aaa
ficompl
xchg
and
lods
cltd
sbb
mov
pop
pop
inc
add
push
cltd
rolb
pop
outsl
xchg
bound
xchg
notb
cltd
test
xor
enter
jno
adc
sub
mov
mov
and
xchg
fcompl
pop
mov
sti
mov
aad
loopne
and
xor
mov
adc
or
sub
pop
addr16
cmpsb
xor
repnz
or
or
xchg
xchg
fwait
lock
jmp
sbb
mov
dec
or
hlt
jne
mov
int3
mov
push
lahf
loopne
cmp
or
push
adc
inc
dec
mov
lret
push
mov
jbe
pop
mov
adc
ljmp
xor
arpl
bnd
sbb
aaa
cmp
loope
sbb
mov
mov
daa
adc
dec
mov
mov
mov
sub
cli
std
sub
and
add
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
imul
xor
jo
ret
jg
jo
or
jg
out
bound
fnstcw
cli
in
inc
scas
or
jg
inc
ds
shlb
gs
add
jb
pop
or
stc
sbb
or
repnz
out
dec
sbb
mov
repz
lods
lods
out
leave
in
dec
cwtl
inc
dec
sbb
sub
mov
jne
xor
adc
sbb
jno
push
arpl
outsl
inc
shlb
movsb
popf
fs
dec
mov
testl
ret
inc
outsl
jo
sbb
adc
dec
add
fistpl
xchg
into
sub
repnz
pusha
sub
sbb
test
test
sub
popa
icebp
outsl
in
insl
add
jbe
in
pop
std
cmpl
outsb
aad
jnp
int
aad
test
xchg
sbb
jge
aaa
or
int
ja
adc
sbb
jmp
rcr
sahf
lds
xchg
adc
scas
lahf
stc
pop
andl
mov
xchg
arpl
lret
mov
shlb
lcall
into
add
jp
out
jne,pt
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
push
jo
ret
jg
jo
loope
fistpl
and
enter
lcall
cltd
scas
jno
shlb
push
lds
xchg
mov
add
enter
sahf
pop
xchg
ficoml
incl
jg
dec
dec
inc
jnp
out
mov
xchg
aam
roll
fs
mov
ficompl
jae
lock
jno
xchg
mov
les
sahf
dec
add
iret
sub
adc
and
lahf
incl
jae
test
ret
call
out
jecxz
aam
pop
shll
and
outsl
sbb
pop
pop
add
push
loop
add
inc
bound
test
cltd
ds
test
movsb
sbb
mov
imul
cli
mov
sub
lcall
dec
outsl
inc
xchg
out
shlb
repz
test
iret
ja
test
add
daa
xor
jno
xchg
fstl
cmp
mov
cmp
movsl
nopl
mov
mov
push
sbb
shll
lds
pop
push
lods
leave
ret
bound
mov
mov
repnz
rorl
cld
jmp
movntps
push
rep
mov
push
jle
hlt
mov
jo
jg
jo
bound
lret
mov
das
fnstcw
mov
test
xchg
outsb
adc
jnp
and
add
gs
mov
cmp
fadd
sub
xchg
in
lahf
add
adc
mov
adc
pop
dec
and
push
xor
cmpsl
cmp
lods
jge
add
sbb
mov
pop
mov
fsub
jmp
pop
sub
adc
xor
daa
mov
out
movsb
cmp
dec
or
flds
mov
not
adc
pop
dec
mov
lock
lods
sub
add
in
leave
incl
mov
outsl
xchg
into
push
negb
inc
rolb
fdivrl
cmp
pusha
sub
mov
jmp
inc
decl
dec
dec
jb
xor
push
nop
out
mov
lock
pop
inc
and
in
inc
and
mov
adc
inc
outsb
add
in
jnp
dec
mov
jecxz
mov
pop
add
lret
or
mov
stos
lods
mov
xor
cmp
mov
mov
mov
in
sbb
and
push
popf
mov
add
add
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
pop
dec
pop
or
jg
jo
pop
push
jmp
push
xchg
dec
sbb
hlt
or
test
xchg
aas
fmulp
cli
nop
sub
test
xchg
inc
add
mov
daa
mov
out
mov
sahf
ja
ret
mov
loop
call
add
dec
int
pop
adc
mov
pop
cs
out
jne
mov
xchg
push
inc
xor
mov
ret
sub
negl
xchg
jbe
push
cltd
and
jl
add
test
fildll
aad
cmp
test
xor
inc
movsb
lret
cld
es
lds
rorl
mov
sub
xchg
flds
lahf
sbb
pushf
pushf
xchg
dec
mov
iret
enter
in
cmp
dec
and
cmp
add
imul
mov
mov
shll
xor
sub
sub
sbb
push
into
aad
mov
add
movsl
mov
cltd
inc
mov
push
cmpl
pop
scas
test
inc
jne
insl
jno
push
cli
push
aad
inc
cmp
repnz
cmp
pop
rorl
add
movsl
xchg
mov
out
jnp
hlt
adc
in
imul
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
jmp
and
ret
jg
jo
hlt
int
das
jl
pop
cmpsl
mov
xor
cmpsb
mov
dec
cmp
loopne
cmp
sahf
out
std
cmpsl
jmp
mov
cmpw
cmp
xchg
leave
into
dec
mov
push
imulb
cmpsb
dec
inc
mov
push
out
push
sti
mov
in
push
in
out
repnz
jecxz
jmp
jnp
int
outsb
lret
out
int3
arpl
push
inc
mov
cmp
sub
push
jns
outsb
jge
add
adc
xchg
mov
inc
xchg
pop
xor
sbb
outsl
mov
adc
jecxz
or
inc
sbb
sbb
push
rcrb
in
mov
or
ret
mov
mov
sbb
ret
sbb
aas
or
and
ficoml
inc
add
sub
out
lcall
sbb
insl
flds
push
xor
mov
lret
popf
push
hlt
dec
out
jns
out
lcall
add
bound
add
jecxz
adc
push
stos
jp
out
data16
jne
int
ret
jp
ds
rorb
pusha
scas
fcmovbe
or
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
jl
mov
jg
jo
push
inc
jo
shl
mull
or
push
arpl
sub
test
icebp
int3
mov
cltd
push
repnz
xor
leave
inc
cld
das
dec
data16
xor
cmp
ret
and
int3
jl
xchg
mov
mov
testb
mov
or
pop
ja
sbb
lahf
mov
xor
pop
repnz
js
push
or
lret
repnz
fs
jno
rcll
movsl
pop
inc
sub
lods
test
add
fcmovnb
dec
fidivrl
inc
fimull
cwtl
xor
sub
push
shr
icebp
dec
scas
cmpsb
data16
out
int
mov
sbb
add
mov
adc
and
xchg
ja
adc
jmp
and
mov
sub
and
mov
or
imul
add
adc
or
fiaddl
pop
ss
repnz
imull
jmp
popl
xchg
push
inc
cmp
mov
iret
or
jo
in
mov
fwait
dec
js
test
testb
out
jge
cmc
bnd
xor
inc
ss
or
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rorb
xchg
test
jo
ret
jg
jo
sub
test
sar
and
cli
rclb
fwait
aaa
jl
mov
xchg
jge
pop
in
sub
in
mov
add
mov
negl
rorb
rclb
ja
push
loop
clc
jle
inc
lcall
shlb
inc
rorl
test
ljmp
roll
inc
test
das
pop
pop
cmpsb
or
ficoml
loop
xchg
push
outsl
push
adc
xchg
xsaves
inc
loope
push
fstpl
out
or
xchg
insl
and
or
cmp
push
loop
push
lods
push
les
inc
lahf
imul
hlt
int
jl
mov
xchg
cmp
xchg
jo
xchg
sub
sbb
mov
rcll
cmp
lret
mov
pop
xor
add
movsl
lret
scas
cmp
push
scas
int3
mov
andl
xchg
call
in
cmp
add
jecxz
mov
hlt
nop
imul
test
dec
cld
jmp
or
int3
mov
inc
mov
adc
insb
mov
clc
jmp
inc
gs
icebp
imul
fimuls
jo
jg
jo
inc
xchg
inc
repz
inc
andb
cmpsl
aad
pop
shll
sahf
loop
imul
mov
mov
imul
icebp
cli
adc
ficomps
sub
xchg
js
ret
movsb
pop
mov
scas
pushf
xor
mov
push
sub
mov
ja
mov
mov
mov
mov
or
add
mov
adc
and
int3
add
push
xchg
subl
sbb
rcpps
jbe
ss
cmp
outsl
call
out
ss
repnz
cmp
inc
mov
out
xor
lock
scas
sbb
dec
int3
pop
and
pop
push
cmp
rolb
dec
mov
jns
mov
and
cmpb
mov
aaa
clc
rcr
mov
jns
adc
js
or
pop
scas
add
sub
inc
push
inc
mov
jbe
cmc
adc
hlt
inc
inc
js
sbb
lods
xor
stos
out
ja
mov
sub
in
pop
adcb
dec
subb
idivl
push
xchg
and
cmpsb
jge
xchg
pop
ds
jno
dec
cmp
js
out
pop
jp
enter
inc
arpl
outsb
into
std
and
stos
in
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
jl
ljmp
jg
jo
push
stc
lahf
inc
fldenv
xor
pop
clc
ret
xchg
xchg
pop
inc
shrl
lods
outsb
mov
mov
cmpsl
mov
into
in
adc
dec
pop
push
mov
out
movsb
fs
fldenv
xchg
pop
ret
or
fiaddl
mov
mov
aas
aad
cmpsb
xor
or
fwait
in
cld
es
imul
jmp
lock
xchg
xchg
xchg
fdivs
jb
icebp
add
sahf
sub
push
leave
or
test
add
pop
aad
sti
push
loopne
jecxz
outsl
test
adc
cmp
pop
cmc
jne
mov
mulb
enter
mov
gs
xchg
enter
jl
ficompl
bound
jmp
fistpll
aad
xchg
stos
add
je
and
mov
js
lods
mov
cmp
shlb
lahf
mov
cmp
test
dec
gs
pop
icebp
lods
lret
push
fs
sbb
or
call
inc
mov
adc
adc
pop
movsl
push
inc
add
inc
push
mov
or
mov
repz
setno
repz
cmp
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
rorb
jge
jo
sbb
fwait
lahf
js
add
orl
mov
je
xor
mov
xchg
mov
inc
test
mov
sub
mov
inc
cltd
pushf
movsb
sub
dec
leave
jge,pn
add
mov
insb
add
xchg
xchg
iret
sti
mov
sbb
push
lds
in
pushf
pop
daa
gs
adc
sbb
cmp
cmp
aas
push
pop
subb
add
fdivrl
mov
cmpsl
bound
pop
fbstp
out
adc
aaa
fmull
pop
in
mov
inc
add
outsb
test
dec
out
out
stc
add
stc
mov
jo
xchg
sub
lahf
xchg
jbe
call
mov
je
scas
cmc
mov
loop
jns
xlat
loop
enter
mov
daa
les
lods
mov
lea
push
dec
xor
fimuls
add
outsl
sbb
outsl
pop
dec
pop
xor
sbb
imul
daa
pop
mov
cmc
cmp
mov
xchg
cmp
out
mov
jecxz
rcl
jns
sbb
cwtl
push
mov
mov
jmp
mov
das
mov
adc
stc
push
pop
out
inc
popf
mov
add
pop
pop
call
pop
scas
lcall
and
stos
push
or
mov
cmp
cmp
push
and
jb
inc
push
adc
repz
sub
iret
cs
xor
rcll
lds
sub
xor
test
inc
jb
outsb
sub
sub
push
cltd
cmpb
pop
out
pop
dec
mov
cmpsl
push
stos
pop
push
jmp
leave
enter
or
push
or
xor
mov
movsb
sahf
lea
in
jne
adc
mov
push
and
push
jge
test
mov
les
xchg
stos
sbb
in
mov
jmp
sbb
dec
xchg
lods
mov
lahf
adc
mov
sub
xlat
out
ds
daa
hlt
xor
pusha
aas
test
jmp
insb
mov
out
pop
pop
insb
cmc
test
mov
jb
cmp
jae
or
sub
inc
aad
xchg
lods
aas
adc
and
jmp
outsl
dec
mov
fdivrl
rcrl
jp
and
push
jo
outsb
xor
hlt
insb
daa
sub
add
push
divl
in
add
js
push
sub
stos
mov
es
push
scas
xchg
add
imul
shrb
lret
cmp
loop
xor
xchg
cltd
xchg
sub
or
sar
fistl
popf
movaps
xchg
pop
adc
stc
mov
add
bound
push
add
push
popf
gs
dec
mov
sub
int
orl
adc
stos
into
jmp
int3
daa
pop
enter
mov
xor
es
out
push
ret
adc
push
insl
in
mov
inc
insb
repnz
lret
sub
fldt
push
mov
movsb
mov
xor
mov
mov
inc
imul
dec
dec
test
daa
aam
mov
jns
out
fcompl
or
std
cwtl
fildll
mov
jle
push
ds
cmpsl
sub
mov
sub
ljmp
and
std
in
xor
jno
lods
pop
dec
lods
or
pop
ret
mov
sbb
jmp
mov
cli
xor
testb
cmp
xorb
jo
cmp
push
push
outsb
mov
fld
aaa
idivb
push
mov
aam
ja
mov
out
decb
sti
pop
loope
test
movsl
in
sub
je
lahf
mov
daa
int
pusha
adc
fwait
jg
cmp
inc
add
xor
ja
and
push
mov
gs
mov
jo
jb
addl
mov
or
push
in
pop
inc
cmc
inc
dec
xor
sahf
adc
jle
insb
stc
out
sahf
sbb
pusha
or
je
lock
lds
jmp
mov
test
add
cmp
aaa
scas
btsl
gs
lds
int
pop
cs
in
fsts
and
sbb
or
sub
jmp
fmuls
cmc
and
imul
test
popa
pop
jmp
imul
and
nop
or
jmp
mov
xchg
lcall
imul
and
xchg
pop
dec
xchg
xor
jmp
cmp
scas
cld
lret
lods
ficompl
sub
jl
cs
std
repnz
shll
jae
fwait
aaa
xchg
call
xchg
add
outsl
cltd
dec
sub
andl
mov
hlt
jo
cld
cmp
jb
dec
mov
das
add
mov
dec
cmp
shlb
dec
pop
aad
and
mov
outsl
sbb
sbb
jo
jmp
arpl
dec
in
mov
jmp
pop
xor
or
cli
mov
sahf
add
sub
cwtl
mov
dec
loope
stos
pop
inc
mov
sbb
pop
icebp
call
push
sbb
aas
sahf
data16
inc
pop
jne
scas
mov
ret
enter
cmpsl
subb
adc
ret
xlat
mov
xchg
pop
aas
sub
pop
mov
dec
ss
repz
add
ret
jle
and
inc
std
mov
test
arpl
data16
xchg
lods
adc
arpl
movsl
cmc
jae
mov
push
jae
fs
repnz
insl
adc
dec
out
inc
test
shrb
or
push
lcall
jp
mov
dec
jbe
imull
cld
xchg
rol
push
mov
cmp
std
xchg
or
movsl
inc
and
movsl
mov
movsl
aaa
ds
das
nop
sarb
cld
push
call
jge
adc
dec
cmp
pop
movsl
inc
adc
iret
iret
int3
xlat
dec
push
xor
cmp
shr
jle
mov
cli
bound
ja
xchg
pop
cmp
clc
faddp
dec
or
add
sbb
inc
int
jno
push
ja
xor
or
ljmp
or
mov
mov
shrl
sbb
int3
dec
aaa
imul
adc
ljmp
int
sbb
mov
cli
jnp
lds
cmpsl
insb
push
rcrb
pop
adc
aaa
in
sarb
sbb
xchg
xchg
add
testb
cltd
sbb
add
or
in
xor
insb
xor
or
and
sbb
clc
jo
or
nop
add
add
mulb
sub
inc
and
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
out
mov
jo
jge
jo
das
fwait
out
clc
sub
mov
sub
push
jg
pushf
aas
push
add
inc
pusha
xchg
jb
pop
pop
imul
push
test
test
inc
stc
ret
out
lds
insl
xchg
or
clc
sub
jmp
adc
sub
add
loope
clc
shlb
icebp
xchg
movsbl
mov
push
jp
dec
inc
loopne
ret
dec
movsb
imull
cmp
int
mov
lods
xor
pop
mov
push
inc
xchg
rorl
mov
inc
cmpl
jle
mulb
das
ss
xchg
pop
ret
cmp
mov
or
xor
icebp
out
repz
enter
cmp
fistpl
xor
mov
test
lcall
fistl
mov
adc
and
std
test
or
xchg
ret
mov
xchg
push
add
fdiv
lods
lds
stc
int
int3
lock
rclb
cmp
add
mov
ss
sbb
or
jecxz
push
add
cmp
gs
movsl
fsubrl
lret
decb
cs
mov
fwait
lret
out
outsl
js
pop
sub
dec
push
jp
flds
mov
or
push
not
stos
jmp
fbld
int3
in
js
adcb
pop
ss
pop
scas
js
or
add
negl
mov
repz
dec
ljmp
jae
or
dec
jno
mov
push
pop
test
sarl
push
adc
dec
lods
push
adc
sbb
cmp
and
sbb
mov
cmp
xor
cmpsb
mov
dec
cltd
test
pushf
leave
adc
mov
and
lock
sbb
jne
xchg
cmp
daa
lea
inc
cld
lret
jb
mov
ds
jecxz
cmp
push
idivl
adc
inc
jo
aam
movsl
cmp
inc
sbb
rorb
fmul
aas
xchg
popf
add
loopne
fsubs
add
in
xlat
jmp
xor
jns
sbb
shrb
jae
jno
mov
push
stc
movsb
and
incb
mov
insl
les
and
rorl
jp
and
sbb
dec
rolb
roll
divb
loope
pop
cmp
rcl
test
push
or
arpl
inc
dec
xor
rcrl
sbb
cltd
test
sbb
bound
std
outsb
inc
inc
dec
cmp
ds
ret
nop
scas
arpl
mov
sub
test
mov
idivl
mov
and
popf
sar
in
call
cmp
mov
data16
or
lea
and
cmpsl
xchg
dec
or
pushf
jl
insb
in
subb
imul
pusha
lds
outsb
jle
mov
inc
jns
lahf
push
adc
cltd
daa
fdivrs
or
les
sti
xchg
daa
lock
lea
imul
mov
mov
add
jo
or
push
sub
mov
mov
sar
jno
aam
add
cmpsb
xlat
in
into
mov
xor
xor
dec
fistps
mov
mov
xor
jbe
cmpsb
repnz
dec
xor
sub
sub
arpl
call
and
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
std
xlat
push
add
cmp
pop
clc
xchg
push
dec
lock
fdivr
cmpsl
dec
fdivl
jl
inc
xchg
push
xchg
xchg
cld
and
xchg
add
mov
or
repz
fcomps
or
jbe
loop
xor
dec
les
fs
jge
imul
sbb
mov
insb
fbld
clc
ds
dec
jl
push
ja
sbb
sbb
dec
adc
unpcklps
fbstp
xchg
jle
es
and
and
cld
cld
daa
fmul
pop
pop
push
pop
cmp
cmpsl
cli
ret
xor
popl
xchg
push
fdivl
cmp
cmc
cmpsl
xchg
arpl
lock
cmp
out
mov
mov
pop
jmp
dec
hlt
mov
sti
das
mov
ds
outsl
and
repz
add
stc
fs
mov
inc
jl
mov
xchg
push
repnz
in
mov
add
sub
stc
bound
cmp
cmp
popf
sbb
inc
adc
andl
push
cld
test
add
in
aam
mov
sbb
iret
ja
data16
lock
mov
stos
dec
aam
sahf
sub
iret
loopne
inc
pop
shrb
push
add
shr
add
hlt
insb
mov
fwait
ja
rorb
aad
bound
push
call
repz
int
ror
sbb
add
and
idivl
ja
aas
adc
inc
dec
out
dec
jge
int3
sbb
cmpl
pop
shll
push
mov
sbb
xchg
shl
inc
cmpsb
rorl
push
adc
gs
mov
xor
mov
xchg
inc
add
cltd
cmp
xlat
int3
cmp
or
inc
sbb
adc
cmp
pop
and
and
mov
fsubl
xor
mov
div
aad
or
sarl
js
loop
jg
or
out
lcall
sbb
add
aaa
lods
push
test
scas
popl
repnz
pop
pushf
call
repz
rclb
ficomps
mov
xchg
fcoml
bnd
dec
xchg
mov
mov
lds
test
xchg
inc
xlat
andb
pop
adc
mov
ficoms
pop
inc
and
dec
lods
test
imul
cs
ret
outsb
inc
jo
or
xchg
outsb
or
aaa
xchg
jns
int3
stos
pop
inc
sbb
xchg
fisttpll
xchg
pop
push
xorb
fiaddl
jne
fs
repnz
mov
std
add
ja
ficomps
pop
iret
xlat
adc
rcr
cmp
add
dec
aas
ss
xchg
cmp
and
add
and
cltd
adc
mov
xchg
decl
cmp
or
andl
int
popa
xlat
out
lock
in
push
mov
mov
in
stos
js
jg
ljmp
dec
inc
subb
enter
movsl
inc
jnp
leave
lock
sbb
sar
aaa
and
xorb
pop
or
out
jge
addl
loopne
imul
push
aaa
lret
fsubrs
imul
push
inc
or
bound
push
and
and
pop
lahf
stos
jnp
push
scas
add
xchg
mov
cmpl
inc
rcl
int
lret
test
or
or
push
and
sbb
mov
add
jmp
outsl
mov
or
imul
popf
jbe
mov
jo
jge
jo
shlb
fisttps
pop
xlat
jecxz
mov
sub
lds
pushf
insb
push
sub
jmp
pop
sub
leave
das
sarb
push
jae
rcrl
stos
aad
mov
lea
mov
mov
cmp
mov
mov
cmp
leave
sbb
pop
in
add
ss
jl
inc
push
dec
fdivrp
xchg
stos
movsl
fisubrs
pop
notb
sub
loop
aam
hlt
fistpl
inc
mov
cmp
xchg
xor
pop
lds
cld
jge
fistl
xchg
push
insl
and
out
cli
pop
push
repnz
add
and
daa
in
push
adcb
jg
mov
inc
sub
sub
mov
dec
jp
jne
int3
cmp
rorl
pop
shlb
mov
ret
into
cmp
jl
jmp
and
lods
into
pop
out
hlt
pop
mov
inc
jno
insb
push
lds
xor
pop
dec
push
cmp
jmp
mov
sbb
xchg
sub
mov
pop
inc
jae
lahf
jg
aaa
test
incb
push
push
jmp
ret
bswap
cli
movsb
aaa
sbb
push
lods
xchg
cmp
dec
push
lcall
idivb
inc
icebp
cmc
pop
loop
mov
push
add
and
movsb
add
ja
cwtl
addr16
add
lods
adc
pop
mov
inc
negb
mov
rol
loopne
xor
mov
loop
jnp
cwtl
mov
cli
inc
in
iret
rorl
das
and
out
dec
inc
mov
aam
push
add
jecxz
xor
inc
mov
pop
lret
into
dec
test
adc
pop
pop
jae
rcrb
jg
fcmovb
repnz
and
sbb
loop
mov
lods
or
leave
jg
inc
adc
fisubs
std
lahf
lods
cmp
add
hlt
sbb
andl
imul
movsl
mov
clc
outsl
iret
sti
and
insb
mov
jo
cmp
pop
adc
push
adc
clc
pop
jecxz
xchg
or
mov
test
rcll
adc
mov
mov
mov
scas
jne
cmp
dec
xor
cmp
psrlw
movsl
inc
cli
je
in
jmp
and
outsb
and
or
fcomip
pop
test
inc
imul
shll
sbb
in
fucomip
or
out
sti
call
popf
inc
xor
sub
ret
mov
jo
rol
addl
xchg
sahf
mov
cmpsl
cs
dec
xchg
mov
mov
rcr
js
push
addb
cs
loopne
mov
repnz
push
jb
lea
fwait
or
outsl
push
hlt
xchg
or
xchg
jne
sub
sbb
inc
and
sti
dec
push
popl
pop
pop
sbb
stos
xor
jne,pn
rorl
leave
in
add
dec
repz
and
or
mov
ss
jge
sub
cmp
sti
push
idivl
lcall
popa
dec
dec
dec
shrl
repnz
cltd
insb
xor
xor
popa
jns
jg
das
rcll
sbb
pusha
add
invd
fiaddl
or
xchg
movsb
xchg
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
ds
ds
jo
pop
jge
jo
outsl
push
mov
mov
leave
rolb
xchg
cmp
inc
or
add
dec
adc
sti
cmp
adc
mov
es
leave
in
xor
cwtl
or
and
enter
dec
mov
divl
xlat
jle
sub
push
xchg
pop
xchg
inc
mov
cmc
push
xchg
lock
adc
mov
jbe
cmp
xchg
sub
lds
cli
mov
xor
pushf
or
imul
add
jnp
xor
inc
in
cmp
push
aaa
daa
ljmp
mov
icebp
arpl
mov
adc
inc
push
mov
mov
adc
jl
cmp
leave
inc
jno
sbb
mov
fisubrl
mov
lock
adc
popa
push
add
xor
cltd
fistl
js
jmp
out
sbb
mov
add
push
movsl
inc
push
or
lahf
mov
lcall
mov
dec
xchg
fidivrl
int3
insl
nop
pushf
push
cld
mov
ss
lea
daa
pop
push
dec
mov
or
dec
push
pop
mov
stc
jl
sbb
push
in
cmp
push
xor
mov
mov
jbe
aam
jae
insl
or
cmp
clc
lahf
in
lret
scas
test
dec
cmp
out
popa
xchg
pusha
mov
inc
ss
aaa
shrl
and
add
loop
jmp
mov
inc
and
out
push
rcrl
cli
lahf
jae
nop
sbb
mov
xchg
sub
xchg
inc
in
mov
lods
outsb
outsb
xor
repnz
pop
sub
lds
xor
cld
xchg
cltd
sub
add
dec
lods
add
adc
jno
xor
cmc
enter
test
ficomps
dec
mov
inc
mov
jl
mov
lock
popf
push
or
jbe
mov
fsubr
and
dec
out
add
sub
or
ret
shl
stc
stos
push
push
jle
loopne,pt
and
bound
push
sarb
push
xchg
jne
int
imul
pop
mov
mov
mov
stos
shrl
jg
sbb
stos
add
xlat
test
fistl
pop
aad
fnstenv
dec
jl
insb
jb
mov
mov
iret
xlat
xchg
lret
pusha
je
cmp
and
js
xchg
sbb
add
shrl
adc
cmc
adc
push
fldenv
cmp
fcompp
sub
leavew
dec
imul
pop
add
dec
push
jbe
imull
mov
es
outsl
dec
into
or
mov
mov
pop
and
es
cmp
insl
jmp
shlb
add
insl
adc
fistpll
loop
ret
and
sub
ds
or
pushf
xchg
inc
arpl
adc
push
and
mov
jecxz
or
es
push
xor
adc
mov
js
cmp
idiv
roll
inc
or
sbb
jbe
lret
inc
push
ret
inc
icebp
pop
or
adc
dec
fistps
stc
dec
pop
int
xor
or
add
mov
mov
add
push
push
xor
push
pop
jl
sti
jbe
sbb
mov
sarl
dec
aas
incb
jmp
mov
jg,pt
and
in
ror
adc
xchg
sub
hlt
ror
and
in
push
pop
loopne
jge
pop
xor
adc
adc
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
inc
test
in
rclb
stos
ret
xchg
lods
cld
jne
fnstsw
pop
cwtl
mov
jb
ret
xchg
movsb
or
push
add
xchg
sti
sahf
int3
add
pop
rol
imul
mov
push
xor
popa
popa
movsl
ret
inc
insb
mov
adc
mov
mov
outsl
data16
mov
cwtl
loop
std
mov
xchg
in
mov
xlat
sbb
negb
or
dec
fdivs
stos
ljmp
popl
in
sbb
arpl
cmpsl
jb
mov
xchg
adc
pop
mov
cli
lods
bound
xlat
push
mov
mov
and
pop
inc
shll
jecxz
inc
sbb
ret
adc
pop
mov
xchg
or
jmp
jo
pop
bound
inc
sbb
ja
dec
mov
xorb
pusha
pop
lods
pop
shrb
xchg
jae
bound
lcall
psrlq
imul
mov
push
push
inc
dec
push
mov
pop
pop
imul
dec
pop
stos
enter
xor
test
jo
faddl
push
nop
ret
int
bound
call
jne
pop
sub
jge
orl
xchg
jmp
jle
incl
es
scas
lret
push
pop
lret
shll
repz
or
jno
mov
sbb
mov
mov
lcall
sub
mov
push
in
das
mov
cmc
insb
sub
dec
mov
out
jmp
lret
loop
fidivl
add
dec
or
jb
les
and
arpl
xchg
ja
cs
dec
imul
adc
jle
movsb
ljmp
pop
aam
in
or
lret
test
les
mov
push
shrb
push
test
pushl
repnz
mov
out
pushl
sbb
mov
dec
daa
in
lahf
jbe
inc
das
fisubl
mov
ljmp
out
pushf
pop
add
movsl
pusha
rolb
push
adc
mov
push
in
sub
shll
pop
into
jb
adcb
pusha
addr16
mov
xor
stc
sti
push
dec
sub
push
sbb
xor
andl
mov
cmp
les
or
cmp
fldenv
sbb
adc
sub
push
push
sub
add
cmpsb
adc
pop
sbb
xchg
sub
lea
pop
stos
in
lea
cmpsb
jnp
mov
das
out
sub
xor
or
insl
or
adc
data16
into
outsl
outsl
adc
or
pop
xor
adc
dec
jnp
pop
lahf
mov
adc
cmp
pop
cmp
fcom
inc
decl
sub
adc
jecxz
in
out
ss
repnz
adc
stos
loope
mov
pop
push
out
pop
pop
dec
or
roll
stos
out
add
lock
xchg
test
out
dec
inc
cld
jns
jmp
stos
aad
adc
divl
stc
addl
popa
cmp
sub
lock
inc
or
mov
push
cs
dec
xor
repnz
call
fcomp
aaa
jmp
push
add
imul
mov
lahf
inc
hlt
xchg
sbb
enter
dec
jne
push
xor
frstor
cmp
cmc
ja
pop
inc
je
and
sti
or
dec
jae
xor
mov
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
or
xchg
push
dec
jo
pop
jge
jo
lods
inc
call
push
jnp
mov
in
dec
rclb
lds
sbb
std
das
leave
jbe
out
xor
fldenv
loop
inc
or
cmp
idivb
nop
test
jl
sub
push
inc
push
lcall
leave
jne
rcr
mov
testb
rolb
mov
mov
mov
notb
jg
ret
cmpsl
mov
out
or
mov
sarb
push
pop
cld
jle
cld
imul
outsl
cmpsb
sbb
gs
xchg
fildll
int
pop
pusha
mov
push
mov
lods
int3
inc
orl
sbb
jb
sub
cwtl
in
in
mov
sbb
mov
push
movsl
pop
inc
stc
lock
stc
push
test
popf
out
pop
xlat
loope
push
andb
cmc
cmp
mov
imul
loopne
lods
mov
or
mov
lret
jle
cwtl
idivl
pop
jl
inc
loopne
in
dec
sbb
ret
fwait
sub
pop
pop
lahf
pop
test
mov
mov
adc
push
jae
or
sub
xchg
mov
sbb
adc
nop
push
out
and
lcall
push
lods
pusha
fwait
mov
ucomiss
into
into
loopne
sub
dec
xchg
adc
pop
dec
and
add
xchg
cmpsb
shl
or
or
pop
mov
mov
out
stos
negl
fwait
notl
stos
push
lahf
ror
fcomp
test
into
mov
sub
icebp
sarl
arpl
nop
add
mov
mov
ljmp
lods
icebp
ficoms
ss
or
cmp
or
lret
jecxz
add
shrl
pushl
push
jmp
lods
shr
scas
cli
mov
fsubrl
sti
mov
in
xchg
imul
xchg
xchg
int3
push
outsb
lds
movsb
movsl
ds
sub
data16
flds
xchg
pop
data16
outsb
divb
and
out
adc
inc
push
sgdtl
cmp
adc
out
lea
pop
std
adcb
sbbb
cmpsl
add
in
mov
pop
repz
or
push
add
outsb
jns
or
nop
and
daa
bound
dec
cmpsb
and
ret
mov
inc
jecxz
imul
mov
inc
mov
fimull
insl
or
out
daa
xchg
jb
xchg
push
sahf
fcmovu
mov
pop
sbb
jg
outsl
mov
sub
jae
lock
sub
sub
lea
ljmp
sbb
xchg
sub
mov
cltd
in
stc
xor
jmp
pushf
mov
ret
out
leave
cmc
or
dec
das
xlat
sbb
push
mov
je
mov
test
and
outsl
dec
jg
bound
idiv
adc
insl
adc
cmp
andb
jbe
popa
mov
mov
fwait
sbb
fwait
aaa
lahf
mov
cmpsl
or
mov
add
mov
xor
push
iret
aad
imul
mov
pop
shll
out
fs
out
xchg
ljmp
cmpsb
cld
cwtl
les
pusha
cmc
xchg
gs
out
mov
cmp
out
shl
nop
gs
mov
mov
pushf
sub
outsl
pop
out
iret
jno
loope
jbe
lds
push
dec
lret
outsl
hlt
cmp
loope
ret
shll
insl
mov
sbb
or
ret
jne
inc
add
jg
add
rol
cli
std
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
leave
jbe
jo
pop
jge
jo
inc
aad
push
rorb
shrl
adc
je
cwtl
icebp
cwtl
rorb
pop
mov
mov
icebp
cld
xchg
inc
sbb
ret
dec
xor
ret
push
roll
lods
cmc
ret
cmpsb
push
dec
adc
icebp
shrb
and
inc
sub
movsl
xor
add
aam
cmpsl
jbe
in
insb
jb
jno
sbb
insl
sbbb
adc
inc
inc
out
aaa
lods
xchg
fsubl
fs
mov
mov
jmp
lret
push
inc
pop
dec
aam
push
outsb
fimuls
jmp
jbe
cmpsb
cmc
adc
mov
lret
cmp
pop
add
pop
inc
cmp
daa
xor
addr16
outsb
mov
in
in
ret
hlt
psrlw
lcall
adc
mov
mov
fstps
lds
int3
popf
test
or
mov
mov
adc
jp
xchg
xchg
fadds
loopne
jecxz
test
add
int
dec
or
push
xchg
dec
add
push
sub
insb
mov
imul
enter
push
sbb
js
mov
xor
pop
test
out
sub
stc
hlt
mov
xchg
les
and
or
out
cs
out
mov
addr16
das
pop
mov
fistps
fidivs
cmp
xchg
enter
jno
in
in
sub
xchg
adc
jnp
enter
mov
shll
and
mov
xchg
jmp
jbe
in
ficompl
mov
mov
jno
scas
adc
test
jmp
js
mov
pop
and
lock
imul
jge
cmp
and
test
fldl
adc
repnz
pop
pop
inc
push
jg
sbb
xchg
pop
sub
in
popf
loopne
test
and
rcll
ficomps
push
jae
loope
addr16
sbb
js
rcll
loope
std
push
mov
ficomps
gs
mov
ljmp
out
sbb
or
push
fwait
out
push
sbb
xchg
sbbl
sbb
int3
push
test
xchg
popa
fsub
aas
hlt
xchg
pop
mov
xchg
xchg
dec
pushf
jno
sarl
test
and
cli
inc
mull
sbb
pop
mov
rcrl
jo
shll
or
sbb
lods
fcompl
push
xchg
pop
push
mov
sub
repnz
xor
and
sub
das
lods
stos
or
inc
push
les
xorl
mov
pop
int3
or
jnp
jae
in
lods
pop
pop
mov
sbb
add
aam
push
mov
ret
outsb
ljmp
jge
pushf
xor
inc
or
rorb
in
mov
xor
pop
sbb
fisttps
stos
inc
aam
cmp
cli
subl
adcb
out
stos
pop
push
cmp
cmpsl
iret
sub
cmp
dec
inc
jb
and
pop
or
mov
xorb
into
jne
xor
add
repz
mov
outsl
dec
in
push
push
dec
movsb
xor
mov
mov
nop
mov
mov
pop
pop
dec
push
lret
or
push
movsl
ret
imulb
insl
cmpsb
push
mov
push
cmp
mov
mov
gs
adc
or
lds
push
adc
pslld
cwtl
lods
jl
shrb
or
pushf
mov
aad
dec
and
cmpsb
xchg
dec
cld
push
rclb
dec
inc
push
mov
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
or
push
jo
pop
jge
jo
data16
pop
push
stos
in
or
xchg
pop
inc
cmp
mov
inc
xchg
int
sub
xchg
inc
add
cli
sub
test
sbb
xor
pop
aad
mov
sti
lahf
jp
and
aas
dec
push
ljmp
mov
sets
mov
cmp
xlat
mov
pop
cltd
popa
inc
pop
in
pop
ljmp
imul
das
jmp
scas
je
or
ret
pop
xor
pop
mov
sub
arpl
xchg
xor
js
fisubrl
sbb
add
out
jno
in
loope
or
aam
in
pop
dec
stc
or
pop
pop
pop
push
insl
mov
dec
lods
popf
lds
sbb
lret
dec
inc
or
ret
sub
je
decl
inc
fsubrl
add
cld
xor
mov
pop
inc
test
push
pop
fldcw
aad
stos
andl
cmp
fistps
lods
xor
popf
cmp
out
jmp
xchg
inc
dec
dec
sahf
or
xor
and
jns
mov
pushf
movsl
inc
pop
or
fcomps
cmp
imull
push
rcll
loope
or
imul
add
dec
sbb
jbe
movsl
in
rcrl
incl
xor
int3
shrb
fsubs
shlb
mov
mov
pop
ja
dec
mov
push
cs
sahf
mov
sti
xchg
jle
push
js
pop
mov
pop
jmp
adc
sbb
rolb
cwtl
addb
sub
pop
push
aad
shlb
in
cmp
inc
add
push
mov
jmp
hlt
sbb
add
aaa
in
sub
mov
push
mov
stos
gs
inc
repz
leave
xchg
mov
fstps
xchg
add
xchg
adc
xchg
pop
sbb
sti
mov
adc
pop
xchg
jno
pop
adc
mov
mov
gs
adc
inc
clc
push
push
and
not
mov
in
fwait
movsb
psrld
xchg
repnz
std
stc
add
cmp
mov
gs
add
add
adc
sub
cmp
add
mov
or
mov
sbb
addr16
shrl
addl
sbb
stos
movsb
sub
test
jp
fimull
lcall
and
lds
xor
push
inc
or
fnstsw
dec
das
jecxz
xchg
jp
pop
cld
mov
aad
add
ret
sbb
ljmp
insl
mov
mov
adc
xchg
push
nop
jno
or
fidivs
mov
or
jnp
xor
adcl
imul
imul
jne
mov
mov
incl
pushf
jecxz
shlb
and
mov
jl
add
dec
jle
repz
push
rclb
jg
jae
xor
mov
sahf
dec
add
ljmp
jmp
xor
dec
push
stos
and
filds
lods
sub
inc
cmpsb
push
and
xchg
notb
cmpsl
out
pop
push
pop
sti
push
xchg
or
inc
lret
fwait
dec
outsl
sub
jbe
sbb
cld
into
jnp
sarb
dec
sbb
ret
push
mov
xlat
sub
popf
call
mov
in
fmuls
pop
inc
adc
mov
repnz
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
fdivs
popl
jo
mov
out
stos
insl
fidivs
les
mov
je
adcl
mov
xor
out
lods
mov
and
push
in
jo,pt
test
cmp
mov
daa
sbbb
push
cwtl
sbb
cmp
pop
push
adc
cmc
test
bound
push
rclb
or
pop
and
push
mov
mov
xorb
fisubrs
into
aaa
push
mov
push
lahf
cmpsb
adc
add
stc
and
add
setb
xchg
jb
jl
add
fwait
and
out
xor
adc
fstpt
adcb
cmp
xlat
dec
cld
and
ja
dec
mov
adc
and
subb
adc
repz
jecxz
fnsave
scas
jae
xchg
push
lcall
push
or
dec
lock
jl
xor
es
jmp
xchg
js
or
out
lock
mov
xchg
pop
cmpsl
jo
pop
sub
mov
rolb
pop
cmc
xor
fwait
je
roll
cs
push
dec
xchg
lods
loop
add
sub
movsl
inc
fnstsw
loop
sub
xchg
mov
adc
cmp
cwtl
mov
mov
ret
adc
pop
fcoml
mov
sbb
xchg
sub
pop
xor
arpl
pop
jmp
ret
shrb
or
pop
sbb
enter
push
fsubrs
mov
xchg
loop
cmpb
in
shrb
ja
mov
lret
dec
xchg
mov
test
pusha
pop
negb
mov
mov
ficomps
test
xchg
jno
stc
jecxz
xchg
fdivrl
push
hlt
pop
cmp
shlb
jns,pt
inc
jns,pn
xchg
lock
jb
jne
subl
mov
sbb
mov
adc
daa
and
push
pop
cmpsl
icebp
add
pushf
ja
iret
cmp
mov
mov
aam
cmp
icebp
fs
aad
cmp
outsb
inc
mov
icebp
and
jnp
int3
in
inc
gs
aas
in
fildll
mov
jnp
lods
pushf
sbb
xor
std
int3
fmul
mov
mov
add
and
and
xchg
lcall
shlb
xchg
mov
cmpsb
aad
hlt
cmpsl
lods
mov
mov
fiaddl
xorb
movl
or
sbb
jbe
inc
pop
push
jae
sbb
pop
cmpb
push
ret
mov
popf
or
xlat
sbb
xchg
sub
loopne
inc
sti
imul
xor
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
cli
scas
mov
pop
jo
mov
dec
mov
or
mov
out
adc
jg
das
pop
adc
out
shrl
dec
push
dec
cmp
push
adc
pop
sub
mov
push
inc
outsb
outsb
sar
xchg
mov
jae
imul
and
or
mov
rclb
and
hlt
ds
das
jb
inc
rol
vmovss
jbe
inc
addr16
or
mov
das
mov
dec
add
pop
push
pop
movsb
stc
icebp
pop
pop
lods
adc
fbstp
fdivs
push
cmp
inc
adc
rcll
sub
and
dec
shrl
mov
stos
loop
xchg
fildl
jnp
pop
imul
xchg
ljmp
pop
xchg
cmp
pop
cmpsl
loop
push
pextrw
xchg
dec
xor
mov
lcall
andl
inc
in
adc
add
sbb
add
pop
retw
jnp
les
xchg
mov
mov
imul
xacquire
mov
cwtl
daa
test
xchg
daa
inc
push
test
in
jge
mov
mov
sub
rolb
imul
xlat
adc
and
lea
inc
outsb
or
cmp
aas
sub
int
cmc
gs
mov
adc
jl
ds
popf
xchg
and
movsl
mov
push
orb
fcmovb
iret
aaa
loopne
aam
mov
cmp
enter
push
inc
cmp
jecxz
xchg
inc
rorb
pop
push
xor
xchg
enter
dec
mov
add
sub
push
std
imull
inc
repz
inc
sub
mov
test
mov
push
pusha
ret
dec
arpl
sbb
mov
leave
dec
leave
pop
sub
iret
sub
jl
mov
out
xor
or
mov
jle
mov
or
es
dec
adc
push
ss
test
je
push
outsb
and
mov
push
jge
imul
cmp
nop
sbb
lods
mov
mov
sub
push
test
jp
enter
fisttps
xor
xchg
jmp
mov
or
movsb
int3
push
cmc
inc
mov
out
mov
push
dec
dec
dec
sub
add
sahf
fldl
jecxz
xchg
mov
push
out
adc
or
cmp
pop
ret
mov
sbb
insb
fisubs
dec
push
sub
js
fdivl
add
push
and
or
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
dec
fwait
hlt
enter
mov
sub
into
js
scas
movsl
clc
inc
sub
xchg
mov
sub
notl
mov
shrb
gs
or
jg
mov
rol
add
sbb
mov
inc
sahf
xor
aas
push
pop
push
cmp
int
fidivs
lcall
sbbb
call
mov
hlt
neg
add
mov
xchg
adc
in
and
std
loop
inc
inc
ret
mov
mov
dec
jnp
or
add
mov
int
pop
dec
cmp
lahf
cld
ss
cmpsb
test
daa
mov
mov
lcall
cmp
ss
pop
xor
test
jnp
cmp
adc
pop
cmpsl
movsl
popa
and
int3
js
sbb
adc
dec
mov
sub
dec
push
push
push
cmp
xchg
dec
xchg
mov
flds
mov
push
and
push
xchg
dec
data16
cmpsb
or
movsl
mov
loopne
in
aas
pushf
adc
repnz
mov
and
stos
jp
imul
clc
adc
divl
movsb
xchg
ficomps
movsb
mov
inc
mov
repz
dec
call
les
ss
cld
cli
les
sahf
cmpb
bound
add
mov
pop
sbb
push
pusha
out
mov
dec
jge
sbb
rorl
pop
shrb
mov
loope
mov
ret
int
andl
out
dec
mov
cmpsb
stc
xor
mov
out
and
stos
cwtl
shll
push
mov
jbe
loope
jbe
adc
inc
jae
ljmp
sbb
jmp
outsl
lods
or
cmp
jp
cmp
jl
sti
jo
xor
ret
inc
cmpsb
addl
ss
lcall
push
jno
mov
add
leave
adc
lods
push
dec
addr16
inc
cmp
movsl
je
test
dec
jno
push
ss
arpl
dec
inc
lret
push
out
xor
test
enter
mov
inc
sub
js
stos
sti
aas
inc
push
mov
ljmp
fwait
pop
aam
iret
ljmp
add
push
mov
push
test
in
push
movb
cmc
and
into
mov
fdivl
jnp
movsl
adc
adc
push
xchg
jecxz
aaa
adc
test
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmp
sbb
data16
mov
or
inc
push
or
adc
push
mov
sbb
dec
mov
test
fucomi
imul
mov
aaa
add
lcall
fcompl
push
mov
mov
loop
mov
setl
pop
jb
fs
jo
pop
or
or
lea
push
jbe
pushl
sub
sub
nop
adc
fs
aaa
bound
sar
inc
xor
mov
cs
je
addr16
cmp
clc
pusha
mov
stc
cmpsl
gs
lds
je
adc
xor
in
insl
pushf
jp
jne
add
idiv
push
bound
mov
push
jno
movsb
lret
movsb
pop
nop
nop
or
xor
xchg
mov
icebp
fidivs
clc
in
mov
add
nop
pushf
mov
fmul
subl
outsb
leave
mov
es
rcrl
fcompl
xor
sarl
jle
ja
out
lock
push
xor
push
xor
popf
or
lods
mov
mov
add
scas
repnz
jle
fmull
rorl
fsubr
mov
sahf
mov
jne
jnp
add
add
mov
jnp
adc
and
cltd
jnp
pop
cmp
add
cmp
mov
xor
test
out
clc
mov
sahf
push
lods
ds
cmp
cld
fsubrp
sbb
push
mov
dec
push
dec
cwtl
add
xchg
mov
sub
data16
adc
inc
adc
ret
sub
push
in
mov
mov
mov
movsl
inc
xor
and
pushf
in
dec
inc
pushf
jle
or
mov
adc
aaa
jle
adc
std
adc
jg
add
es
push
aam
add
das
jb
jb
mov
int
and
pop
inc
dec
add
add
ret
cli
stos
popa
mov
clc
pop
pop
dec
fs
sbb
fnsave
sub
mov
int3
repz
frstor
data16
jbe
cmp
lcall
das
sti
push
nop
outsb
dec
cltd
cmpsb
incb
std
xor
pop
or
adc
hlt
leave
lods
inc
mov
xor
pop
out
scas
jg
mov
lret
aaa
sbbl
lret
sub
mov
int3
mov
out
mov
xchg
lcall
jb
std
fdivs
dec
rorl
cmpsl
loope
sti
jnp
push
cli
add
fldenv
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
aas
dec
mov
inc
cmp
push
sub
push
mov
and
pop
pop
xchg
xor
into
cmpsb
mov
xchg
sub
test
popf
sbb
stos
pop
imul
iret
sbb
mov
sahf
or
cmp
rclb
aam
hlt
arpl
pop
movsl
imul
les
xchg
call
aaa
xchg
push
sbb
jl
pop
and
popa
fisttpl
aaa
jmp
stos
dec
xchg
dec
jnp
loop
adc
xchg
mov
lods
ret
leave
or
cmp
fsubs
push
aam
je
loopne
loope
sub
mov
icebp
cmp
in
subb
addb
xlat
out
ficompl
xchg
mov
insl
jo,pn
fcoms
lods
push
shll
iret
out
lret
cltd
addr16
push
sub
mov
jnp
outsl
rol
lock
outsb
jnp
addl
stos
xlat
cli
sub
dec
nop
je
test
mov
ss
sbb
push
cli
sub
push
rolb
fsubs
call
loop
hlt
inc
or
fadds
out
scas
imul
out
inc
out
nop
or
add
roll
pop
dec
lods
jp
fnstenv
mov
dec
insb
icebp
mov
loope
stc
sbb
jp
lret
sbb
lcall
jg
dec
and
ret
arpl
lods
or
xchg
rorl
inc
cmp
icebp
sub
mov
negb
jns
jbe,pn
mov
inc
les
sbb
decl
hlt
mov
xchg
adc
or
loopne
leave
or
add
and
lds
mov
inc
or
jle
or
mov
jp
lret
push
shrb
adc
jmp
inc
dec
stos
adc
sub
es
hlt
fwait
mov
add
enter
mov
and
push
push
mov
cmp
jge
and
xchg
xchg
mov
icebp
jns
xchg
int
add
daa
jbe
sti
lret
ja
sub
cmp
popa
pop
arpl
pushf
lcall
add
lds
cmpsb
push
inc
xor
scas
movsl
mov
jae
cmpsl
mov
mov
call
inc
sub
sub
add
fstp
sbb
out
jo
mov
mov
xor
loope,pt
jns
mov
imul
neg
lea
in
pushf
dec
lahf
push
lret
inc
mov
sbb
mov
rorb
int
xchg
int
push
in
cmpsb
dec
imul
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
mov
outsb
cmp
popa
jo
mov
in
inc
jl
or
or
pop
decl
sahf
aam
jne
xor
rcll
cli
pop
xchg
xchg
mov
lds
adc
and
hlt
push
dec
lcall
inc
sbb
mov
mov
push
mov
leave
push
js
mov
cmp
daa
push
adc
adc
jbe
inc
mov
int
mov
inc
cwtl
pop
dec
gs
pop
add
loope
ljmp
ss
daa
test
dec
subl
inc
scas
pop
enter
add
ds
push
push
fsubp
sub
rclb
out
loopne
push
and
push
fsubrp
leave
xor
mov
jg
inc
dec
or
int
int
mov
adc
cld
or
mov
pusha
push
loopnew
ret
mov
inc
adc
pop
lcall
sub
mov
dec
arpl
push
xchg
add
cmpsb
xor
xchg
sub
leave
xor
push
test
popf
loop
and
add
inc
inc
divb
cmp
pop
lds
js
xchg
cs
push
mov
call
pop
jne
add
call
mulb
and
js
mov
mov
pop
bound
mov
std
xchg
stos
fistps
lea
shrb
jg
ss
test
mov
sub
pop
aaa
div
fistps
nop
or
mov
pop
lds
jns
ret
jle
cmp
jb
sbb
lods
jbe
add
mov
add
daa
pop
clc
xchg
push
push
popw
in
jle
and
push
or
mov
and
in
iret
in
or
ds
adc
lea
sub
aas
mov
scas
push
mov
xchg
cmc
outsl
sbbl
cltd
test
xchg
mov
int3
cltd
cmp
repnz
sbb
mov
sbb
jmp
std
fsubl
and
loopne
dec
das
and
pop
xchg
adc
test
dec
xchg
pop
add
inc
aam
jne
push
fbstp
pop
aaa
fdivs
adc
lock
cmpsb
int
sbb
push
xchg
es
pushl
scas
xor
dec
icebp
scas
add
fwait
inc
scas
addb
xor
inc
cmp
js
dec
jne
shl
int
icebp
daa
or
ffreep
aaa
pop
loopne
xchg
mov
or
fildl
xor
or
test
push
sbb
lds
mov
mov
xorl
or
mov
loop
or
sub
and
add
loopne
test
pop
add
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
insl
in
outsb
jo
mov
arpl
loop
lods
mov
xor
cmpsb
cwtl
movsl
test
jbe
lcall
repz
call
sbb
stos
lods
fwait
int
xor
mov
in
adc
std
dec
fnsave
imul
pop
test
movsl
out
inc
xchg
push
addr16
loopne
popa
dec
das
fimull
imul
sub
cmp
xlat
push
xor
cmp
ret
rcll
rorb
out
incl
mov
pop
mov
jecxz
fwait
mov
sbb
call
cs
lods
stos
cs
or
cmp
test
push
dec
in
outsl
cmpb
cmp
mov
inc
imul
scas
and
hlt
push
fs
or
push
inc
stc
stc
daa
sbb
mov
dec
dec
dec
adc
and
jp
xchg
inc
out
cmp
mov
adc
test
xchg
les
stos
sahf
xchg
jo
jnp
popf
push
int3
aas
pop
cli
push
push
mull
sbb
xor
andb
jns
arpl
ljmp
jne,pn
xor
lret
adc
popa
dec
xor
stc
xchg
pushf
dec
cmp
cmp
icebp
dec
fistl
cmc
ret
cmpb
sub
fsubs
jmp
mov
lret
adc
jl
mov
lods
and
xchg
imul
xchg
out
lret
loope
cmp
xor
mov
and
out
jl
add
scas
outsl
or
dec
lea
int3
lret
call
inc
dec
movsb
and
xchg
adc
xchg
mov
and
ss
ficoms
and
aaa
outsb
in
mov
das
fnsave
push
sti
push
test
mov
int
insb
push
and
jbe
cmp
cli
and
xor
sbb
mov
adc
sub
mov
and
jnp
push
cmpsb
subl
cmp
or
sub
add
dec
aam
outsb
jle
lods
cmc
xor
adc
mov
and
int
adcl
and
scas
cmpsb
push
mov
stos
sbb
adc
loop
lret
push
pop
xchg
cmp
xchg
in
in
cmc
sahf
test
es
or
push
dec
jns
or
push
jge
inc
ret
cmc
pop
cmp
mov
repz
mov
cmpsb
cmpsl
or
addb
add
push
js
push
pop
jbe
cmc
jno
movsb
ljmp
test
xor
test
add
pushl
jmp
and
lods
shrb
in
dec
mov
jo
mov
inc
add
stos
cmp
push
push
or
xor
pop
ljmp
mov
push
out
pop
push
xor
xchg
imul
int3
pop
xor
add
rcll
mov
mov
inc
jle
pop
stos
pop
insl
out
jl
fmull
cmp
repz
das
shr
jg
cwtl
adc
into
js
mov
fistl
inc
fstpt
jmp
nop
sbb
pop
jb
outsb
xchg
xlat
mov
fiadds
mov
cltd
adc
dec
lea
sub
mov
popa
cli
mov
sbb
mov
jg
andb
mov
test
xor
or
int
fsubs
sub
aam
lea
xor
aad
es
mov
jbe
cmp
jb
pop
icebp
into
or
xchg
ret
es
xlat
xlat
push
cltd
and
aam
inc
sub
mov
sarb
mov
sbbb
std
jne
jb
in
stos
jne
mov
push
bound
dec
in
mov
sarb
sti
je
jb
adc
mov
popf
push
popf
pop
xchg
gs
das
inc
sub
sub
sti
mov
mov
or
adc
push
cmp
mov
mov
push
mov
js
or
inc
mov
jmp
inc
lahf
push
ret
into
aas
pop
lret
mov
add
cwtl
sbb
add
push
in
push
inc
repnz
out
jnp
lahf
aad
mov
iret
cmpsl
cmp
cmpsl
jmp
clc
push
outsb
addb
pop
dec
mov
xor
sub
test
out
rcrl
dec
jmp
xor
sub
push
xchg
mov
daa
lcall
in
mov
dec
inc
outsl
mov
mov
in
inc
xchg
lahf
sub
mov
stos
mov
mov
in
or
push
dec
cmpsb
dec
imul
mov
popf
sub
jle
decb
add
xor
mov
sbb
sub
xchg
mov
adc
les
jbe
popf
stos
sub
xor
gs
mov
and
jns
mov
loopne
test
bound
inc
je
adc
test
sub
xchg
push
sbb
push
or
fisttpl
xchg
aad
push
xor
push
sub
mov
push
push
xchg
bound
out
mov
arpl
xor
call
jmp
pop
insl
and
xor
insl
jp
or
adc
jo
mov
nop
jns
mov
pop
xor
push
fbstp
mov
jp
pop
cmp
in
stos
sar
push
cmp
mov
outsl
xchg
aam
pop
mov
out
and
dec
shll
pop
das
xor
jmp
mov
int3
xchg
or
cltd
adc
ds
insb
mov
mov
adc
in
push
push
or
dec
fnstsw
xor
sbb
xchg
jg
pop
sbb
and
enter
in
push
push
xchg
cmpsl
js
cli
push
in
cld
dec
or
cli
push
xchg
dec
imul
xchg
out
aas
inc
in
std
mov
jnp
insl
enter
mov
mov
and
imul
add
adc
push
xlat
popl
push
test
in
iret
pop
push
fimull
mov
imul
xor
es
xor
adc
rcll
xor
aas
lods
fwait
jbe
lea
pop
loop
out
popf
or
sbb
dec
jae
xchg
test
in
inc
mov
mov
and
fs
xchg
or
out
hlt
iret
lret
or
xor
xchg
repnz
repnz
hlt
shll
push
xor
in
dec
aas
inc
mov
rcll
push
push
in
sbb
enter
jge
test
popf
icebp
pusha
in
adc
dec
xchg
je
pop
fwait
mov
xor
jmp
sub
adc
lcall
dec
iret
pop
mov
or
call
and
pop
inc
mov
arpl
fsubrp
and
stos
and
movsb
out
or
sub
shrl
mov
cli
add
shl
xchg
or
jmp
dec
push
in
fildl
and
push
add
fwait
loop
mov
pop
dec
mov
js
adc
cmp
add
ret
cs
push
clc
push
cmp
pushf
push
and
xchg
add
aad
mov
call
pop
mov
leave
inc
fs
shlb
xchg
xor
test
xchg
out
mov
lea
sbb
push
mov
insl
iret
repnz
sarb
aad
sbb
cmpsl
sarl
xchg
sub
movsb
push
xlat
sti
lret
movsl
movsl
pop
mov
lret
sbb
pop
aaa
dec
sbb
cmp
xor
mov
lock
add
dec
roll
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
jbe
jo
jle
jo
fcmovu
pop
pop
divl
insl
add
jle
sti
stos
mov
jp
inc
mov
lods
mov
jns
inc
push
or
loope
adc
xorl
pop
sbb
jg
push
inc
inc
xlat
repz
cmp
mov
xor
imul
shlb
sahf
jbe
inc
loopne
repnz
pop
dec
xchg
pop
xor
push
and
cli
int3
cmpsb
ret
or
xchg
sahf
cmp
jecxz
cli
iret
out
aam
rcll
divl
and
add
pop
cld
jnp
pop
fsubrp
or
jmp
mov
push
repnz
out
loope
inc
mov
and
gs
push
pop
je
jns
iret
push
add
and
push
aam
aad
adc
fcomp
mov
lret
je
out
cmp
sbb
add
std
das
pop
and
push
inc
shl
outsb
mov
ds
es
jb
hlt
add
inc
add
mov
push
insl
lahf
sbbl
repnz
mov
and
sbb
dec
mov
bound
jge
jnp
outsl
lock
cmp
lcall
and
push
push
sub
jp
or
push
xchg
test
jno
outsb
add
jo
push
push
or
arpl
xchg
fdivrs
xor
ja
loopne
sub
xchg
pop
pop
rorb
and
sbb
dec
ljmp
shrl
in
jp
or
push
mov
fidivrs
imul
cmp
test
ret
cmpsl
aam
mov
or
mov
and
push
mov
nop
pushw
lods
js
out
iret
aam
stos
arpl
cmp
pop
xor
mov
not
cld
movsl
aad
in
js
push
dec
sbb
stos
xchg
fcoms
in
outsb
mov
add
ljmp
lea
pushf
xor
jae
mov
jns
sub
insl
mov
mov
flds
ficoms
or
test
sub
jl
adc
xchg
or
cmp
int3
or
push
xchg
sbb
lahf
xchg
push
test
loopne
adcl
push
mov
data16
faddp
mov
call
jmp
jg
imulb
or
xor
vpmacssdql
dec
mov
push
xor
test
movsl
rcll
cmp
aad
arpl
daa
iret
shrl
popf
mov
xor
int
outsb
dec
dec
jbe
iret
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
xor
xorb
mov
mov
jp
inc
sub
repnz
dec
dec
dec
pop
pusha
mov
divl
fsts
mov
mov
or
mov
shlb
push
mov
iret
ss
pop
adc
into
ret
push
sbb
cltd
adc
lret
shrb
jae
mov
mov
out
lea
mov
sub
in
pop
dec
jbe
loop
sbb
push
pusha
jg
int
pop
adc
mov
icebp
fadd
nop
pop
or
mov
orl
mov
add
xor
jo
jae
out
xor
sub
pop
jp
inc
inc
sub
sti
es
lods
mov
cmp
js
and
loopne
xchg
lods
push
xor
inc
adc
mov
push
push
orl
mov
in
mov
or
orl
xchg
cmp
outsb
shl
inc
les
outsl
imul
jp
push
push
scas
shl
add
or
mov
dec
test
or
daa
addr16
outsl
rorb
dec
adc
mov
sub
lcall
add
mov
ss
sbb
fwait
or
fs
pop
mov
push
decb
pop
xor
mull
sub
xor
jle
mov
fstl
clc
cmpsb
test
lock
addr16
cli
movsl
pushf
mov
fcom
sbb
mov
sub
adc
inc
sub
movsl
js
inc
push
decb
pop
jbe
ss
and
cmp
cwtl
or
add
pop
pushf
es
stos
das
sbb
lods
fisttpll
dec
ds
shlb
insl
mov
mov
xor
adc
mov
pop
movl
jo
add
xchg
jae
arpl
xchg
pop
addb
fnstcw
mov
xor
lahf
idivb
mov
loop
loop
lahf
sub
push
outsl
or
mov
mov
nop
in
mov
loop
insb
cmpsb
sub
loop
add
dec
jnp
mov
insl
aas
xor
mov
pop
sahf
fcmovu
inc
insl
mov
xchg
mov
xor
dec
or
pop
mov
dec
in
stos
push
pop
js
rclb
test
ret
loopne
lahf
pop
dec
push
or
or
inc
repz
jge
sbb
mov
xlat
ret
cmp
jp
pop
fs
daa
mov
in
or
dec
adc
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
sbb
jo
jle
jo
aas
lcall
lret
in
jle
mov
js
in
sub
xor
and
adc
out
mov
dec
imul
jecxz
cmp
cwtl
cmp
scas
repnz
mov
push
call
ja
lock
adc
scas
pop
xchg
fwait
jo
sbb
xchg
fcoml
mov
scas
sarl
out
scas
mov
lea
dec
rcll
mov
cltd
sarl
mov
cltd
sub
movsb
cmc
push
xchg
push
insb
lds
pop
lea
push
dec
mov
pop
lods
jbe
stos
push
test
aas
pop
pop
mov
vcvttsd2si
imul
mov
adc
mov
jb
xchg
loop
sbb
xor
ffreep
jecxz
add
jne
mov
fnstcw
lahf
xor
adc
pop
outsl
incl
lret
mov
mov
iret
out
sbb
outsl
inc
lretw
mov
or
lods
bound
jnp
ja
leave
mov
stos
repz
push
pop
add
add
es
inc
popa
jae
loop
inc
fld
imul
pushf
icebp
shrl
fimull
lods
iret
mov
outsl
pop
sub
fbstp
adc
add
sahf
xchg
outsl
insl
orb
clc
popa
mov
push
jg
mov
add
or
sbb
pushf
mov
imul
ja
push
or
or
inc
rcrb
xorb
cmp
pusha
jae
ret
hlt
mov
insb
pop
mov
jb
scas
dec
jle
cmp
xchg
shl
aaa
add
outsb
jecxz
mov
in
sbb
movaps
and
rorb
inc
sbb
jecxz
cmp
loop
xchg
in
stc
add
dec
mov
mov
jmp
mov
or
fwait
add
not
inc
add
sub
push
sbbl
or
in
mov
sbb
cmpsb
rcrb
sti
adc
mov
push
test
mov
jbe
and
dec
xlat
push
cmpl
cmpsl
and
scas
xor
jl
pop
fwait
loop
xchg
fwait
jns
test
xchg
mov
inc
cmp
mov
shrb
xorl
sbb
repnz
add
nop
outsl
les
ficompl
add
mov
popf
dec
pop
sbb
andl
sbb
outsb
mov
mov
mov
xor
mov
xor
jmp
add
mov
jb
jge
jge
repnz
jo
jle
jo
insb
mov
sbb
jno
mov
test
es
and
push
rcrl
imull
imul
push
loop
cmp
push
inc
roll
addr16
roll
push
dec
cmp
popf
shr
cmp
in
mov
pop
popa
insl
in
mov
lds
xorl
jo
lcall
aad
mov
push
push
lds
cmp
rorl
clc
dec
add
aaa
jmp
inc
push
into
xchg
push
fisttpll
out
sbb
mov
cmp
imul
scas
push
mov
mov
mull
sbb
push
sahf
push
jns
sbb
sbb
jne
loope
adc
das
xor
fldl
dec
std
popf
sbb
in
sub
pop
sub
xor
mov
jns
aaa
loopne
out
xchg
inc
sbb
mov
aam
leave
pop
inc
adc
into
push
pop
mov
inc
jnp
lret
pop
mov
filds
fwait
out
movsl
fs
mov
pop
xchg
xchg
outsl
ret
cwtl
jbe
shrb
pop
enter
mov
data16
clc
sub
mov
pushf
mov
aas
lret
hlt
nop
loop
xor
sub
sarl
mov
inc
mov
mov
inc
lds
in
jle
ja
mov
push
adc
jp
jb
dec
cmp
lret
je
aas
call
sbb
movsl
cltd
cli
xchg
xchg
or
pop
jae
mov
int3
adc
sti
xchg
cli
xor
jp
inc
in
lcall
add
add
pop
jle
xchg
fadd
mov
fimull
pop
pop
pop
mov
call
sbbb
sub
lret
lcall
rcll
push
lock
daa
fstl
jo
das
mov
pop
adc
mov
lods
insb
scas
pusha
and
mov
xor
push
dec
pop
dec
aam
shrl
lea
cld
shl
in
inc
push
fmulp
outsb
aas
jmp
ret
cmp
rcll
dec
notl
or
mov
daa
aad
adc
fcompl
lock
push
and
sti
xchg
lret
std
inc
test
aam
jl
sbb
cmpsb
data16
xor
sub
jnp
mov
mov
and
or
jnp
mov
stc
and
clc
out
lahf
mov
adc
mov
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
add
jbe
pop
jnp
jo
jle
jo
popf
clc
js
mov
jno
fstpl
push
ficomps
daa
mov
int
ret
mov
mov
rcr
andb
pop
sub
xor
ret
dec
adc
and
mov
ret
inc
cld
arpl
dec
fsubs
or
jae
pop
xchg
adc
shrb
inc
insl
pop
movsb
hlt
std
gs
mov
shrl
cs
cmp
fiadds
xchg
rclb
bndldx
data16
movsl
dec
bound
mov
rol
jg
iret
lahf
push
add
out
mov
xchg
lahf
aaa
xbegin
mov
movsl
adc
das
push
iret
fisttps
stc
push
adc
out
cmp
dec
addr16
enter
nop
loop
lods
inc
add
mov
fidivl
mov
clc
adc
xchg
call
cmp
call
dec
sub
cmc
out
fbstp
nop
xchg
mov
test
push
mov
sbb
jae
outsl
and
lods
mov
scas
jnp
jo
push
stos
mov
mov
cmpb
loope
cld
outsl
push
jmp
cmp
mov
sbb
inc
sbb
mov
dec
dec
push
mov
gs
mov
lret
inc
push
cs
lret
out
mov
xor
sbb
fbstp
sbb
pop
xor
inc
rcrl
push
inc
mov
push
mov
mov
in
insl
add
push
pop
cmp
popf
mov
cltd
jns
jmp
cwtl
and
movsl
sti
mov
add
push
loop
std
das
or
mov
xchg
jnp
xchg
scas
je
sub
sub
sbb
ljmp
or
add
int3
inc
push
or
xor
jle
pop
mov
scas
jbe
mov
rcrl
jne
inc
pop
mov
out
rolb
mov
or
ret
xchg
dec
inc
inc
ja
push
ja
push
mov
push
xchg
fisubrl
and
adc
jmp
add
pop
or
mov
dec
outsb
scas
add
sub
test
and
jge
shll
into
ret
inc
pop
addr16
and
jbe
xchg
fwait
mov
cmp
cmp
sub
xor
dec
addl
imull
in
jne
mov
sbb
out
xor
xchg
nop
scas
mov
fildll
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
xchg
pop
xchg
jo
daa
or
mov
adcb
xchg
push
gs
mov
fnsave
jno
inc
and
xor
clc
outsb
dec
mov
rclb
pop
sub
mov
fwait
jp
fs
in
push
mov
pop
dec
push
or
loopne
pushf
sub
inc
add
fsubrl
gs
mov
imul
int
or
pusha
ljmp
adc
movsl
test
jo
arpl
popa
addr16
mov
jle
xor
push
jns
pop
pusha
adc
push
mov
push
fwait
enter
xor
insl
outsl
mov
add
pop
adc
cmc
jg
mov
and
or
popf
dec
shll
testb
fwait
jno
fdivrl
push
hlt
loopne
scas
stos
cmp
push
lcall
fs
add
jecxz
sub
push
leave
sub
test
insl
lret
insb
pop
add
ficompl
sbb
iret
xor
sti
mov
fistpl
dec
adcb
fwait
inc
orb
and
cmc
cmp
and
sti
fwait
mov
sub
adc
add
add
insb
xchg
mov
es
xchg
push
pop
cmc
cmp
dec
sbb
popa
fsubs
in
dec
pop
sahf
outsb
mov
xor
clc
xor
jecxz
hlt
jae
cli
jg
lds
push
mov
stos
mov
push
pop
sbb
pop
data16
ss
enter
mov
fimuls
repz
push
or
into
rcr
loope
in
sbbl
push
mov
sbb
scas
and
and
adc
js
scas
dec
in
fnstcw
adc
xchg
lds
ljmp
dec
pop
imul
add
js
divb
dec
sub
adc
ja
ret
stc
xor
or
js
in
and
push
leave
les
sbb
popf
push
mov
mov
loopne
jae
xor
lods
push
mov
cmp
jns
cmp
push
mov
ret
sub
loop
dec
or
pop
cwtl
push
int3
lret
sub
pop
lcall
adcb
dec
mov
mov
pop
or
adc
ljmp
insb
jno
lods
jnp
ja
movsl
or
jg
fincstp
fcomip
or
out
or
xchg
mov
push
lcall
dec
imul
sti
jp
in
dec
aas
pop
push
adc
cmp
lret
cld
scas
ja
test
jle
xchg
xor
in
mov
pop
sbb
inc
lret
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
xchg
sub
in
add
jo
xchg
addr16
insl
jg
or
adcb
mov
int3
inc
sbb
push
sbb
cltd
outsb
ret
jne
pop
mov
jmp
mov
subb
and
movsb
mov
sub
insw
push
jo
shl
or
jb
xorl
cmp
imul
icebp
xor
cmp
mov
inc
in
dec
fs
and
repz
mov
jbe
or
loop
mov
inc
xchg
imul
adc
xorb
addr16
jecxz
cltd
std
ljmp
jl
cmp
pop
out
xchg
pushf
clc
xor
sbb
jg
dec
mov
push
mov
fxch
test
add
cs
fnstenv
jno
add
je
aaa
cmp
jle
xchg
gs
xchg
iret
jmp
xor
xchg
xchg
xchg
shrb
sbb
mov
lock
mov
push
rorb
jl
xor
cmp
mov
dec
xchg
sbb
mov
out
adcl
aaa
xor
fxch
rcll
cmp
dec
and
imul
rcrl
sub
aaa
shll
xchg
cmpb
cltd
jmp
stos
xchg
xor
mov
pop
ret
xorb
and
clc
pop
cmc
in
push
sbb
or
aaa
inc
jb
fadds
ja
test
sub
aaa
enter
popa
lcall
mov
lock
fwait
in
and
pop
fldl
stos
sbb
int
popa
hlt
int3
xor
mov
in
andl
lock
cmp
dec
and
cli
out
push
add
sti
pop
setge
mov
scas
int3
jnp
int
je
loopne
orb
push
sub
fs
inc
mov
hlt
pop
mov
scas
lret
cli
sub
mov
xor
xchg
jns
xchg
test
push
jb
inc
inc
bextr
push
lret
outsb
jge
dec
repz
lods
outsl
sbb
leave
dec
imul
imul
decb
lea
pop
int
in
ja
rolb
arpl
popa
loope
push
ja
push
scas
mov
dec
pushf
rorb
pop
and
add
mov
xchg
fmuls
push
cmc
cltd
add
loopne
cmp
jmp
popf
scas
and
push
aaa
sbb
sub
negb
aas
xchg
mov
cli
subb
push
mov
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
fistpl
add
mov
sub
les
loopne
jo
mov
sbb
xor
jo
rcrb
pop
leave
xchg
out
andb
out
scas
das
pop
push
push
pusha
sbb
inc
scas
sub
dec
loop
add
insl
call
fmul
iret
mov
pop
icebp
adcb
hlt
fmull
mov
out
dec
jae
inc
test
aad
cmpsl
xor
push
push
xor
loopne
push
jp
mov
rcrl
movsb
aas
mov
insb
push
lahf
mov
adc
mov
xchg
movb
xlat
push
dec
push
addb
dec
dec
mov
adc
mov
popa
imul
xchg
push
add
ja
ljmp
cwtl
stc
or
cmpsb
fistpl
repz
cmpsb
mov
xor
pop
xchg
int
rcr
pop
dec
out
loope
jle
test
popf
test
scas
push
bound
out
jg
mov
stos
pop
nop
sub
fstps
daa
adc
rorb
es
pop
and
test
out
mov
aaa
xchg
add
stos
loop
inc
pop
mov
or
mov
jmp
pushl
cmc
fdivl
adc
sahf
xchg
loop
fsubs
jno
icebp
cli
and
faddl
mov
add
lcall
mov
int
mov
lods
pop
push
imul
xchg
push
jnp
cs
push
mov
shll
jnp
adc
int
and
jb
in
cmp
jbe
pop
mov
or
push
xchg
and
fiadds
fcoml
fnstcw
xor
pushf
cmp
mov
lock
jl
mov
incb
repz
xor
sbb
mov
xor
int3
int3
push
aam
imul
adc
sub
xor
sbb
push
stos
jne
int3
push
stos
std
lret
xor
clc
cmp
sub
ds
iret
and
xor
sbb
sub
inc
adcb
lcall
dec
mov
push
sub
adcl
sub
add
popf
gs
call
and
cmpsb
dec
mov
mov
add
inc
loop
jo
mov
addr16
xchg
into
rcll
pop
push
lea
cmp
add
cltd
adc
mov
mov
pop
pop
sbb
sbb
and
js
notb
cmpb
adc
and
stc
je
stc
cmp
pushf
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
adc
jg
jg
mov
xor
push
stos
and
mov
mov
daa
data16
repz
clc
mov
jae
adc
and
push
lock
push
test
fwait
pop
xor
jle
sub
mov
mov
aas
and
mov
dec
and
pop
dec
or
mov
lcall
pop
and
mov
lods
push
in
push
jmp
sub
xor
xor
sbb
popf
pop
mov
addr16
repnz
adc
jb
and
nop
mov
jne
xor
dec
aad
jno
lods
and
incl
das
popa
sub
test
jle
int3
cmpsw
add
pop
popa
jle
sbb
mov
fsubrl
jl
cltd
push
lcall
push
xor
insb
cmpsl
test
or
loopne
outsb
xchg
arpl
mov
ret
cmp
inc
ja
xor
fstpt
cmpsb
pop
ljmp
and
stos
sub
fxch
pop
fldt
nop
mov
in
ljmp
and
jns
insb
sbbb
dec
mov
inc
fistpll
punpcklbw
and
adc
jb
hlt
pop
loope
popa
cmp
dec
jne
out
das
test
sub
jns
xchg
jnp
mov
in
push
aam
out
and
roll
aad
mov
and
aas
pusha
repz
jp
mov
mov
test
aas
jb
test
dec
xchg
sub
jnp
inc
xor
dec
sub
inc
mov
fwait
aam
xor
cmp
xchg
mov
mov
pusha
adc
sbb
push
push
lock
xchg
fldl
leave
push
mov
xchg
out
sub
or
iret
fnstcw
pop
and
int3
jecxz
jne
inc
push
js
lea
pop
or
dec
cmp
movsl
push
cmp
and
enter
inc
sbb
fistpll
cmp
pusha
mov
adc
leave
push
cmc
sbb
pop
pop
inc
std
mov
mov
pop
pop
aas
jmp
cmp
push
jo
hlt
les
jg
cli
lret
nop
adc
cwtl
sbbb
jmp
cmpsl
sub
pop
xor
push
in
repz
fidivl
mov
xor
mov
hlt
test
sahf
xchg
dec
iret
dec
sub
xchg
cmp
sarl
jg
dec
lea
in
cmpsb
sub
xor
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
stc
or
mov
jle
jo
cmp
and
popf
scas
xchg
pop
sahf
xchg
xchg
inc
lock
adc
sti
inc
inc
xchg
sbb
test
les
mov
xchg
test
test
xchg
push
push
mull
pop
pop
sbb
push
hlt
divb
cmp
sbb
in
iret
lea
stc
lds
pop
stos
mov
sub
sbb
or
hlt
lahf
mov
stos
shr
jnp,pt
adc
mov
out
cmpl
lret
lret
nop
push
pinsrw
dec
mov
jb
aam
scas
ret
lods
js
xorb
aas
rorl
mov
mov
mov
sbb
xchg
push
sub
push
popf
stos
lret
outsb
add
lret
cli
cmp
pop
cli
outsb
or
jns
cmp
fsubs
out
insl
or
cmp
repnz
lds
xor
into
push
loopne
shlb
xlat
stos
pop
push
sbb
je
or
xchg
mov
sbb
addb
test
add
mov
add
into
lods
jg
sub
xchg
fcomps
rcrb
pop
std
push
cltd
dec
xchg
repnz
jnp
icebp
cltd
xor
inc
xlat
addr16
jp
mov
xor
gs
inc
js
lods
sbb
rcrl
mov
push
mov
arpl
jns
inc
mov
xchg
mov
inc
xchg
inc
pop
andl
imul
mov
repz
jmp
rcll
push
or
rorl
sahf
data16
adcb
movsl
iret
push
xor
jne
pop
in
push
int3
jp
gs
mov
xchg
cmp
rcl
push
mov
mov
dec
movsb
pop
push
lods
iret
xchg
test
cmove
jge
out
sub
insb
push
xlat
dec
or
jg
fistpll
shl
pop
mov
adc
xchg
cld
popf
or
dec
and
lret
xchg
pop
jnp
or
test
and
jno
adc
and
ret
or
shrl
jp
fadds
movsl
mov
push
jecxz
mov
sbb
rorl
add
mov
loopne
out
dec
cmp
jle
aaa
mov
call
out
hlt
or
xorb
sbb
push
in
arpl
dec
lahf
scas
sahf
or
in
sahf
hlt
push
outsb
aad
arpl
inc
jns
arpl
push
ja
sbb
xor
push
out
into
call
and
dec
in
xchg
lret
lret
pop
cltd
ret
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
xlat
push
cltd
inc
orl
jo
popf
mov
push
dec
or
sub
and
shr
in
call
push
adc
rcrl
fld
hlt
sbb
xchg
sbbb
pop
sub
cmp
cmp
mov
je
cmp
mov
stc
loop
add
in
adc
dec
mov
mov
mov
push
loop
outsl
fdivr
mov
push
roll
cli
jle
sbb
mov
xchg
xchg
dec
jno
fisubrl
add
push
dec
cmp
jp
pop
scas
push
xchg
dec
das
cld
and
and
or
std
adc
and
mov
jmp
and
cmp
add
jbe
stc
cmp
fistl
out
adc
aaa
pop
into
js
xchg
xchg
mov
lret
icebp
aad
movsb
pushf
repnz
push
mov
in
push
and
inc
in
mov
pop
cmp
sbb
mov
lods
add
cmpsb
stc
push
xchg
ss
cld
outsb
mov
jbe
jmp
xor
call
inc
sub
lea
dec
addl
test
adc
cmpsb
out
jmp
jmp
mov
mov
std
shrb
inc
mov
push
mov
or
xchg
or
xchg
scas
push
mov
push
or
das
mov
xor
mov
inc
stos
icebp
rcrb
shrl
filds
pop
push
sti
mov
ret
mov
arpl
and
aaa
fistpll
imul
xor
movsb
mov
shrb
scas
pushf
xchg
xchg
bound
jmp
jo
repz
fstpl
pop
push
cmp
push
pop
rorl
and
in
cmp
repz
adc
lcall
hlt
enter
shll
ret
jge
movsb
sbb
push
jle
stos
insb
hlt
push
mov
cld
dec
inc
fimuls
scas
xor
inc
jge
xor
adc
xor
je
pop
cld
xchg
cmc
bound
cmp
stc
xchg
and
sub
push
mov
pushf
iret
dec
add
addr16
mov
push
stos
decb
cmp
int
cmpsb
xchg
pop
insb
fdivrl
sub
add
dec
fistpl
jb,pt
imul
popa
pop
inc
cs
dec
in
call
add
jnp
jne
jo
push
cwtl
int3
jb
out
loop
aaa
mov
adc
insb
es
lock
gs
cwtl
gs
or
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
jno
mov
mov
jecxz
push
icebp
mov
jl
cwtl
xor
cltd
pop
movsb
push
inc
push
inc
jmp
mov
cmp
sub
pop
mov
int3
or
lahf
cld
mov
jg
push
imul
push
or
icebp
cs
out
and
adc
in
mov
out
jno
push
or
xor
xchg
push
fwait
pop
ja
push
pop
jmp
addb
mov
out
out
mov
jecxz
repnz
sbb
rolb
mov
xchg
fisttpll
testb
pop
or
test
repnz
ret
jo
mov
arpl
push
loop
andl
dec
addr16
and
adc
scas
xchg
stos
and
and
gs
bound
fdivs
ret
shl
lret
inc
or
scas
and
ljmp
add
cmp
arpl
ja
add
jl
into
vpmacswd
push
push
xchg
xor
xor
shrb
rol
lods
pop
stc
mov
aad
mov
fnsave
inc
movsl
test
enter
sbb
shr
adc
popf
adc
lret
push
jmp
aam
sbb
ja
sbb
mov
and
sub
cmp
aas
enter
hlt
dec
push
adc
es
call
push
mov
dec
jp
sbb
sbb
inc
push
test
jno
sbb
lods
js
iret
out
sub
stos
mov
std
ss
push
xor
jnp
mov
lahf
push
xor
and
inc
addr16
out
in
inc
add
jle
clc
pop
mov
js
sti
push
ljmp
push
cmp
aas
mov
pusha
push
sub
mov
stc
push
ret
into
mov
insl
movb
pop
adc
sbb
stos
sub
pop
push
add
and
jno
cmpsb
mov
or
jno
or
lods
pop
gs
scas
mov
mov
lret
fnsave
cmp
xchg
js
jmp
adc
and
inc
loope
je
mov
cld
add
cli
mov
sub
mov
movsl
popa
mov
rolb
jns
mov
fstps
cli
hlt
outsb
lret
idivl
inc
stc
sub
cmc
and
out
adc
dec
cmp
push
outsl
fwait
jp
pop
inc
or
fisttpll
push
sub
or
sbbb
leave
scas
pop
cmc
xor
sub
push
jg
xchg
push
test
jne
sub
flds
cmp
lahf
cmpl
mov
pushf
jb
add
enter
icebp
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
sbb
mov
xchg
fnstcw
fs
aaa
rorl
mov
lea
add
and
test
fsubs
push
pop
into
xchg
shrb
mov
dec
ficoml
out
shrb
xchg
jno
push
cmp
std
sahf
mov
push
push
es
lret
aam
push
mov
jg
jo
adc
add
inc
mov
aad
outsl
sbbl
jo
aas
fsubrs
mov
in
xor
or
stos
dec
push
xchg
sahf
out
fdivl
test
imul
lods
and
out
mov
stos
jne
pop
lods
adc
adc
scas
jmp
repz
nop
push
pusha
sbb
outsb
sahf
mov
dec
clc
xor
stos
mov
push
xchg
in
addl
push
mov
jae
les
inc
movsl
fs
xchg
sbb
push
addb
push
adc
fildl
imul
jecxz
mov
jns
cmp
push
or
xor
xor
mov
add
mov
aad
pop
je
xchg
int
dec
into
mov
lock
or
inc
pop
jne
adc
lds
sub
dec
loope
imul
dec
push
fucomp
arpl
pop
adc
xchg
fnstenv
xor
cmp
sub
stos
cmp
lds
adc
test
fwait
adcl
dec
pop
in
lahf
sub
mov
jle
int3
mov
cmc
mov
and
pop
dec
jecxz
jbe
cld
or
call
stc
cmp
ds
iret
pop
sbb
adc
es
pop
les
xchg
stc
mov
sbb
pusha
scas
faddl
aas
push
iret
push
insl
sbb
push
sti
dec
mov
ds
imul
pop
or
xchg
cmp
shr
out
mov
pop
push
stos
dec
arpl
sarb
or
fwait
pop
roll
cwtl
ja
test
int3
inc
cld
dec
lock
push
or
mov
sbb
cltd
imul
out
push
mov
mov
clc
adc
lods
aas
les
out
and
xor
sub
in
ret
jnp
cmp
cwtl
dec
cmp
fs
repz
testb
mov
and
ficomps
cmpsl
les
out
dec
xor
cmc
lret
mov
sub
mov
lods
pop
mov
rcrl
pop
pop
inc
out
iret
popa
stos
dec
mov
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
or
jg
mov
cmc
popa
jb
movsl
adc
bound
sahf
test
jo
sbb
mov
sub
dec
xchg
ss
or
stc
iret
lea
iret
loopne
lcall
outsl
xlat
das
push
cmp
flds
mov
adcb
stos
pop
test
xchg
sti
mov
sub
ret
fildll
mov
xlat
push
mov
pop
es
pop
cs
fs
pushf
and
enter
dec
pop
push
push
pusha
leave
xchg
fcmovbe
and
fdiv
stc
in
cmp
xor
test
cs
dec
inc
sbb
cmpsb
dec
add
jnp
sub
push
fisubrs
and
pushf
nop
xchg
in
daa
mov
cmp
in
push
daa
sub
and
aas
and
sbb
mov
rol
and
aaa
test
mov
jle
fimuls
jo
test
mulb
xor
lock
sti
xor
dec
pop
add
iret
lods
outsl
push
call
mov
jp
or
mov
adc
pop
mov
ljmp
jo
iret
loopne
sbb
sub
push
adc
outsb
fucomi
lcall
je
add
outsb
test
dec
adc
lret
fmul
subb
cmp
lods
inc
fstpt
out
xor
ja
idiv
sbb
dec
xacquire
adc
jp
testb
in
jnp
cmp
fiadds
xchg
negb
cmp
pop
xchg
dec
arpl
and
fisubrs
inc
sbb
lret
push
or
sub
xor
mov
xchg
adc
shrb
jbe
ret
insb
roll
xchg
push
push
pop
adc
dec
es
ss
mov
lret
add
cmp
dec
sbb
inc
sub
dec
mov
call
mov
cmpsl
ret
mov
fnsave
mov
out
push
push
pop
cmpsl
call
lcall
rolb
push
mov
dec
cld
push
mov
addr16
je
dec
rorb
add
push
mov
cli
adc
mov
mov
outsl
stos
and
icebp
pop
xchg
stc
cmp
sbb
dec
add
cltd
cmp
mov
jp
jle
icebp
xchg
test
mov
xor
fcmovnbe
mov
fucom
rcl
ds
mov
mov
int3
pop
icebp
jp
jne
bound
mov
jnp
shlb
mov
add
mov
cmpsl
shlb
fcomip
movsl
es
mov
and
out
sub
outsb
xchg
jmp
cmc
std
fs
jno
mov
adc
push
cmpsl
movsl
pop
jg
mov
mov
lds
jle
outsl
inc
adc
pop
push
lds
xchg
es
filds
inc
push
xlat
push
sbb
push
enter
addr16
adcl
repz
iret
dec
jp
jmp
sub
std
fdivs
in
add
fnsave
out
and
loopne
cltd
add
lock
cli
int3
rcll
cmp
mov
add
adc
or
add
test
cltd
jne
sbb
imul
xchg
andb
dec
fcomps
insl
mov
push
ljmp
or
xor
dec
adc
push
xlat
sub
pop
mov
adc
div
mov
sub
mov
lock
jl
enter
imul
inc
sbb
mov
xchg
jns
loop
scas
hlt
push
fsubrs
inc
push
imul
enter
pop
cli
mov
call
mov
and
xchg
add
xor
jne
jo
test
add
sbb
mov
inc
addr16
mov
ret
repz
xchg
dec
push
cwtl
xchg
dec
pop
xlat
sahf
add
xchg
out
xlat
clc
xlat
arpl
enter
outsl
push
push
das
xor
or
faddl
push
mov
push
leave
popf
dec
sbb
jb
ss
cs
inc
fwait
jno
sbb
stos
cmp
xchg
fildll
orb
xchg
stc
sub
scas
xor
xchg
push
mov
jmp
rcrb
cld
inc
in
mov
push
rolb
jg
mov
push
or
inc
or
shr
lods
ret
fstpt
inc
add
xlat
fwait
jb
cltd
hlt
xchg
pop
mov
into
ret
aas
les
pop
test
das
insl
mov
mov
push
lock
fstps
in
daa
in
cmp
xchg
mov
add
mov
lahf
xchg
xor
js
lret
or
insb
xchg
and
mov
popf
loopne
xor
mov
mov
sahf
in
jnp
imul
cmp
cmp
orl
mov
enter
sub
pop
cmpsl
cmp
cmp
cmc
cmc
or
es
leave
mov
inc
in
xor
or
dec
insl
pushf
inc
pop
jb
in
inc
xchg
and
sbb
fsqrt
add
call
jb
outsb
daa
orb
enter
fsubs
lea
sbb
clc
aas
pop
cmp
adc
adc
mov
je
push
or
mov
shrb
pushf
clc
loop
adc
mov
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
jle
push
std
out
sbb
jo
jle
jo
cltd
pop
js
adc
icebp
shl
sub
jno
rcrl
jne
scas
inc
sub
mov
mov
dec
mov
inc
xor
xchg
loop
mov
imul
add
lock
fldenv
xchg
jns
adc
imul
sbb
or
rcrb
mov
cmc
xor
fists
insl
adc
inc
push
push
pop
scas
lahf
pop
ds
or
in
add
je
sbb
adc
jbe
sub
leave
push
xor
addr16
pop
stos
cmp
pop
in
push
ret
inc
lret
jns
cmp
dec
repnz
xor
jp
xor
in
jbe
xor
jnp
pushf
movsb
cli
push
lahf
test
sbb
in
cmp
sbb
and
push
insl
shl
xlat
and
mov
out
fwait
repz
fisubrl
xorb
pop
cmp
adc
fwait
jmp
out
jp
push
adc
cs
push
gs
mov
push
test
push
pop
add
out
mov
es
sti
push
leave
sbb
pusha
jle
outsl
dec
add
cltd
call
or
and
insb
fcomps
les
xchg
and
mov
inc
je
dec
orl
icebp
sbb
jl
push
mov
pop
xor
clc
dec
mov
mov
fmuls
or
lods
in
add
sub
aam
stos
inc
sub
xor
in
into
mov
or
loopne
js
lea
cmp
nop
dec
dec
cmpsb
aam
es
rcll
or
mov
scas
jge
cwtl
iret
fs
scas
stos
push
pop
ljmp
sbb
mov
mov
dec
or
dec
je
movsl
in
daa
pop
mov
push
out
mov
lret
lds
push
push
xor
pop
inc
fwait
add
imul
iret
into
inc
notl
sub
jno
je
mov
negl
sti
data16
movsb
jae
cltd
sti
loop
mov
enter
repz
enter
add
push
shlb
add
xchg
cmpsl
cmpsb
lret
cmpsb
mov
lea
scas
loopne
xor
jg
repz
sub
cmpb
pop
and
pop
sub
aaa
mov
jmp
push
xor
out
jae
fidivrs
jne,pt
std
cmpl
push
jnp
imul
inc
lret
mov
push
pop
adc
loop
jmp
lods
and
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
stos
lret
ja
aaa
sbb
mov
adc
sub
imul
leave
mov
cmp
push
mov
ror
inc
ja
sbb
sahf
loopne
idivl
out
das
adc
rorb
push
gs
cmp
pop
lret
das
jb
inc
adc
popa
mov
stos
loop
ljmp
mov
imul
fwait
aaa
scas
jb
adc
dec
hlt
cmp
dec
pop
dec
stos
shll
imul
mov
lcall
mov
ret
ljmp
out
xchg
inc
mov
mov
cld
adc
dec
mov
dec
ljmp
sub
and
out
punpckldq
cli
dec
mov
int3
xor
sbb
lods
mov
cmp
mov
cmp
jl
je
cld
push
stos
int3
adc
mov
sub
sub
sbb
xchg
xor
push
mov
mov
mov
ret
pop
mov
dec
mov
stc
hlt
add
aam
sub
sti
pushf
pop
aas
cmp
or
aam
sar
retw
mov
add
dec
sub
insb
int3
pop
dec
cli
out
shrl
stc
add
leave
cmp
lret
mov
andb
shlb
push
and
push
stos
xchg
sbb
mov
adc
or
mov
scas
movsb
cmpsb
adc
adc
and
xor
out
stc
mov
or
mov
enter
iret
testl
sub
neg
xchg
lock
jo
dec
repnz
mov
pusha
xchg
insb
pushf
jo
sub
push
in
cmpsb
clc
pop
int
lds
lret
repz
arpl
es
out
insb
pop
mov
stos
inc
cwtl
aas
mov
not
push
nop
xor
cmpxchg
mov
sbb
or
mov
mov
xor
in
je
and
scas
shrl
ljmp
dec
jne
fsubrl
and
xor
jns
cwtl
pop
or
fs
jnp
repz
cmpl
cli
daa
mov
or
pop
xchg
dec
xor
pop
dec
xor
daa
dec
sbb
cmp
push
loopne
pop
xchg
ret
inc
dec
stc
push
dec
push
lds
test
loopne
daa
int
ror
cmpsb
loop
sahf
sbb
in
loopne
mov
out
mov
jl
mov
jmp
mov
aas
enter
mov
loop
mov
sar
cmp
aaa
es
or
lret
lds
test
cli
jmp
mov
ficompl
mov
aaa
pusha
jno
iret
jno
inc
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
lods
dec
lock
mov
sarl
mov
dec
or
push
adc
inc
cmp
mov
sti
loope
out
stos
fs
das
sbb
rolb
cmpsl
sbb
arpl
sbb
movsl
xchg
jns
stos
dec
lds
lret
aad
mov
xchg
and
jns
mov
in
xchg
sub
in
dec
jl
inc
or
jns
test
cwtl
mov
int
pop
std
push
sub
popa
dec
test
jbe
mov
jno
adc
xchg
stos
ret
test
stos
add
shrl
enter
sub
bound
fs
pop
call
jnp
fsubl
mov
xchg
arpl
jl
xor
adc
pop
test
pop
jnp
aaa
adc
aam
aad
frstor
adc
fsubp
iret
xor
outsl
xor
cmp
xor
mov
sbb
mov
or
nop
mov
in
loopne
fidivrl
lds
sbb
inc
dec
pop
pop
lds
pop
imul
sti
pop
inc
mov
inc
movsb
arpl
mov
ja
xor
rorl
xchg
adc
nop
fldl2t
std
mov
adc
push
ja
ja
cmp
aas
mov
fcomi
inc
sbb
jle
call
push
pop
std
cli
lret
pop
mov
push
add
mov
data16
pop
into
insb
cltd
push
adc
fisubs
push
gs
fstpl
pop
outsl
push
mov
push
jle
fs
insb
jno
out
adc
jne
outsl
xchg
repz
dec
inc
rcl
sbb
lret
fs
mov
sub
rolb
enter
sub
lea
fisubrl
mov
xchg
test
fsubrl
sbb
pop
push
ss
adc
std
sbb
push
push
push
mov
or
push
sbb
rorl
sub
rolb
jns
adc
push
inc
bound
loop
push
mov
and
adc
movsb
iret
mov
push
jo
cmp
pusha
mov
movb
addr16
mov
inc
sbb
or
sbb
and
das
mov
shlb
js
leave
fs
aas
sub
loop
out
int
sbb
pop
add
clc
outsl
xchg
in
popf
xchg
stos
into
in
add
mov
and
outsl
aam
jb
je
mov
leave
imul
push
es
dec
les
or
mov
int
hlt
iret
or
xor
lea
mov
xchg
loopne
das
lret
loope
fcmovu
add
xor
cwtl
cmpsb
rdpmc
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
lods
sahf
xor
mov
lahf
cmc
int3
mov
jae
enter
push
sub
sub
fimull
jno
sub
xor
clc
adc
xchg
rcrl
mov
enter
cld
mov
and
pop
faddl
dec
mov
ss
into
iret
add
mov
mov
xor
adc
ja
enter
rolb
or
stos
inc
mov
push
mov
cmp
jle
and
add
cmp
mov
lods
mov
xchg
and
in
jnp
jo
cmp
cmp
aam
out
scas
dec
sbb
sub
mov
push
imul
addr16
push
pop
xor
sahf
xlat
xor
jp
cmp
cmpsb
and
jle
aaa
movsb
pop
in
dec
pop
push
fisubl
cmp
arpl
lret
mov
mov
mov
stc
shll
lea
rorb
mov
mov
inc
and
movsb
add
in
rorb
xor
inc
mov
ja
inc
push
cli
ja
or
repnz
mov
sbbb
int
or
ret
movsl
pop
shlb
rorl
dec
aas
aas
mov
rcrb
shrl
in
add
cwtl
xor
dec
add
dec
lods
jo
mov
pop
clc
icebp
sub
mov
sub
cs
daa
xchg
inc
es
in
jns
xor
push
lods
push
jp
push
dec
jo
or
hlt
sbb
insb
sti
pop
shll
sarl
push
mov
push
pop
or
mov
int
sbb
lcall
push
xchg
push
dec
xchg
stc
xor
add
jae
andl
dec
xchg
pop
out
dec
sbbl
cmp
sub
imul
pushw
out
imul
int3
inc
jnp
mov
pop
cmp
int
cld
mov
cmp
ret
insl
js
out
movsb
cmc
sub
lock
flds
mov
fstl
push
pop
dec
and
inc
fmuls
es
pop
sbb
and
xchg
fwait
mov
loopne
and
mov
sbb
sbb
out
js
mov
dec
loope
inc
and
mov
push
xchg
fildl
leave
sub
push
cmpsl
push
pop
ss
mov
xchg
cmc
xchg
push
icebp
mov
scas
in
inc
loop
test
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
