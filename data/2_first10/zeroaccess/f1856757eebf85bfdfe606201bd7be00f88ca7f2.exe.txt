add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
leave
ret
jle
jle
fidivrl
jle
cmp
fld
ja
or
ret
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
cld
push
mov
and
mov
jae
push
cld
imul
mov
shrb
sbb
cmc
loop
dec
sub
fsubs
mov
adc
popa
add
fs
dec
sahf
dec
lret
jecxz
stos
mov
adc
mov
enter
test
pusha
repnz
push
add
push
cmc
mov
mov
fists
inc
xchg
or
test
cmc
mov
mov
into
push
xchg
push
scas
aad
dec
xchg
pop
inc
ret
outsl
fldenv
rcll
movsb
sbb
imul
sub
test
sbb
push
jle
add
movb
mov
je
add
fstl
cltd
loope
jns
and
scas
pop
stos
sub
fcmovnu
jg
jle
jg
jle
sbb
cmp
mov
outsb
scas
test
mov
xor
nop
repz
push
pop
iret
in
inc
push
push
xor
clc
iret
in
mov
cmc
mov
xor
mov
adcb
pop
sub
imul
and
inc
aas
iret
jmp
add
push
loope
jmp
into
mov
roll
jbe
push
sub
sbb
into
fldcw
lods
mov
mov
push
ss
xor
dec
jo
dec
notb
dec
mov
pop
dec
addr16
das
dec
faddl
xchg
xor
mov
ret
inc
cmp
divb
enter
into
push
and
lds
mov
fdivr
cmovp
jl
fldt
mov
popa
mov
lea
mov
inc
mov
xchg
fnstenv
fwait
hlt
stos
ficomps
imul
out
xlat
pushf
rorb
stos
jb
lds
cmpsl
int
add
arpl
jge
out
loope
addl
int
xchg
mov
mov
frstor
lods
in
ret
pop
cmp
lds
adc
sti
test
faddl
iret
or
test
inc
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
cld
scas
push
xchg
jg
jle
push
shll
rorb
nop
addl
scas
ja
cmpsl
imul
sbb
and
repz
sub
in
jmp
mov
loope
popa
sbb
fwait
std
lods
shrl
dec
sub
out
pop
mov
add
lret
jo
sbb
cmp
daa
push
sub
jnp
mov
ja
xor
iret
es
inc
mov
jo
inc
arpl
inc
pop
cwtl
jmp
int
dec
call
push
pop
push
fs
aad
stc
mov
test
sahf
cmp
rcll
push
sub
in
mulb
xchg
fistpll
push
jmp
repnz
mov
cltd
inc
movsb
stos
push
scas
sub
xchg
mov
ret
sbb
and
add
lds
sub
aaa
and
sbbb
mov
cwtl
cmpsb
and
xor
rorb
sbb
ret
in
rorb
cmp
inc
and
or
adc
sbb
or
fimull
fstpl
sahf
cs
jnp
jmp
and
xchg
mov
cmp
out
dec
add
adc
sahf
add
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
sbb
movl
jg
jle
aaa
int
out
repz
movsl
int3
inc
mov
mov
imul
outsb
and
pop
repnz
xor
mov
cld
dec
insb
xchg
inc
adc
pop
fwait
vmovlps
dec
jb
cld
outsl
arpl
sub
pop
push
popa
jne
jb
nop
cld
sahf
je
sbb
ficoml
sub
arpl
sti
mov
das
jge
rcrb
int3
jl
lds
push
jl
mul
pop
cmpsb
xchg
ljmp
adc
mov
dec
mov
jmp
xchg
push
mov
pop
jns
popf
test
push
data16
sub
mov
dec
add
xchg
or
xchg
or
sahf
repz
adc
and
adc
addl
dec
mov
cs
lahf
mov
notl
mov
iret
xor
mov
pop
inc
add
jnp
pushf
sub
cmpl
inc
push
enter
sub
loopne
and
mov
inc
sbb
lds
nop
andb
mov
outsl
cmpsb
ljmp
push
inc
mov
jp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
sbb
and
ljmp
lock
xor
mov
mov
lods
popf
inc
sbb
push
jg
adcb
cmpsl
and
push
int
insb
ja
xchg
xor
dec
stc
pop
sbb
xor
daa
iret
imul
xor
mov
clc
stos
addr16
lods
push
mov
scas
repnz
repz
xor
lahf
es
clc
sbb
mov
inc
cmp
push
movsb
movsl
imul
arpl
push
das
les
paddq
pop
lods
jns
jecxz
out
push
cs
lahf
sbb
sbb
call
lahf
cmpsl
sub
fildl
mov
push
cmc
inc
pop
leave
mov
sarb
lcall
addr16
or
test
jp
mov
pop
adc
adc
or
push
mov
flds
frstor
mov
or
fdivrs
inc
bnd
lahf
movsl
jo
sahf
mov
rep
cmp
rclb
stc
jge
mov
add
cmpb
stc
leave
sub
sbb
sub
push
imul
ja
pop
mov
xchg
mov
roll
and
xchg
loope
daa
mov
jecxz
mov
dec
jmp
mov
out
sbb
adc
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
lock
dec
jo
jle
jg
jle
repz
imul
cli
push
sahf
ljmp
imul
sub
cmp
ljmp
mov
loopne
ret
mov
xor
mov
xchg
xor
in
mov
lods
test
mov
pop
pop
jmp
in
mov
or
lock
mov
sub
pop
jnp
sbb
loope
scas
scas
xchg
xor
ljmp
push
mov
enter
pop
sub
shll
mov
std
movsl
inc
out
jp
pop
jnp
icebp
adc
movsl
fisubrl
dec
jb
aaa
int3
sar
icebp
pop
mov
cmpsl
int
arpl
adc
lea
fdivrl
dec
pop
movsb
dec
fadds
xlat
mov
sub
rclb
adc
in
pop
sub
gs
pusha
mov
xchg
xor
push
out
sub
pop
cwtl
lahf
jo
lock
sub
pop
cli
je
repz
and
pop
mov
or
sbb
lcall
pop
das
xchg
mov
jnp
fisubl
stos
sub
push
adc
cld
sti
pop
sub
das
and
out
pop
xor
ret
je
stos
aas
addb
lock
mulb
mov
dec
cmp
push
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
inc
jmp
jle
jg
jle
jns
in
inc
nop
dec
cmpsb
jp
and
mov
pop
iret
cmp
test
xchg
pop
push
pop
mov
es
sub
dec
add
jbe
pop
cmp
lahf
leave
cmp
or
mov
or
add
and
dec
sbbb
adc
push
push
pop
out
leave
pop
clc
in
sub
sub
out
or
jecxz
push
cs
cwtl
test
sub
jg
sub
or
inc
jnp
xor
bound
jecxz
or
out
jecxz
cmp
push
lods
lea
mov
mov
adc
sub
mov
sbb
adc
ret
xchg
rolb
dec
and
mov
aas
incb
xchg
xchg
outsl
repz
notl
aad
jp
andb
add
add
out
and
xchg
push
insl
adc
aad
cwtl
js
pusha
shll
inc
cwtl
repz
push
adc
inc
imulb
bound
cmpsb
repnz
pop
pop
outsb
nop
pop
sub
imul
mov
add
sbb
adc
loope
sar
fbld
addb
mov
and
imul
push
in
addr16
mov
cmpsb
mov
ljmp
test
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
push
mov
ja
jle
jg
jle
into
mov
fidivs
dec
xor
sbb
sub
dec
mov
mov
clc
aad
jmp
loopne
inc
nop
lods
dec
cmp
push
stos
repz
test
mov
add
lock
mov
out
sub
jge
sti
outsb
js
lods
out
lret
push
mulb
aam
mov
and
rcrb
adc
into
out
rolb
mov
push
sbb
pop
dec
mov
push
scas
sbb
addr16
jge
iret
imull
mov
sti
lock
out
inc
adc
or
pushf
mov
jns
cmpsl
outsb
inc
jp
cld
push
cmp
xchg
push
xchg
scas
or
insb
sar
clc
cmc
jb
adc
iret
ret
leave
ljmp
lods
lret
hlt
xchg
cmp
cmp
inc
sbb
mov
sub
jbe
jno
mov
xor
push
lock
js
sbb
outsb
pop
iret
xchg
adc
xor
jne
lds
movsb
or
lret
lret
jnp
mov
adc
or
mov
xchg
and
pop
negl
les
fdivs
fimull
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
int
push
cwtl
pop
je
jle
jg
jle
add
inc
lahf
sub
mov
lahf
push
inc
sub
sbb
jge
sbb
adc
pop
test
pop
xchg
aas
fs
aaa
out
cld
fadds
mov
xchg
push
dec
stos
cli
insb
enter
pushf
loope
pushf
xchg
mov
dec
shl
push
sbb
pop
and
xorl
inc
mov
inc
add
mov
pushf
jno
lea
push
call
mov
xor
sub
and
add
cmp
jp
jp
ud2
sahf
stc
jle
or
lret
xchg
mov
fiaddl
faddl
out
dec
mov
mov
adc
adcb
mov
pusha
mov
mov
data16
fisubl
pop
inc
lcall
out
mov
in
mov
imul
cmp
jg
lcall
shll
dec
sub
movsl
sti
and
fisubrs
jae
dec
stos
jmp
int
or
test
lds
popf
daa
add
xlat
aaa
test
mov
das
pop
mov
xchg
mov
push
mov
dec
push
mov
push
xchg
js
fpatan
xchg
es
clc
push
jo
mov
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
ja
push
jge
or
fidivrl
jle
rclb
cmp
xchg
mov
mov
fbld
jno
bnd
and
inc
aam
jnp
jle
jb
arpl
jp
lahf
jns
es
insl
popa
add
lea
pop
add
xor
outsb
call
ljmp
sub
into
inc
or
insl
mov
push
xchg
adc
dec
je
push
in
incl
xor
ret
or
dec
adc
mov
je
out
sbb
xchg
jp
nop
into
icebp
movsl
xor
sbb
sub
repnz
movsb
cmp
gs
mov
mov
cltd
idivl
mov
lds
inc
fdivl
jp
cmp
mov
add
cmp
fnstsw
aaa
xor
dec
cmpsb
sub
cmpsl
fiaddl
ficomps
in
shll
xlat
mov
mov
fwait
xor
lods
jmp
jecxz
je
jne
mov
cmp
xchg
cmp
and
or
or
shlb
lods
ja
dec
sbb
test
push
rcll
mov
jge
mov
mov
mov
scas
cmp
pop
repz
jno
inc
or
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
cmp
inc
mov
or
and
jle
mov
lock
lods
mov
dec
pop
sbb
ret
cmp
addr16
cmp
xor
push
push
ss
popf
pop
ror
je
arpl
mov
dec
sub
or
or
jb
clc
and
js
dec
dec
popa
mov
psubsw
sub
loop
dec
pop
xchg
sahf
sub
test
dec
inc
cmc
fwait
inc
add
push
dec
ror
dec
mov
fwait
xorb
gs
std
sahf
sbb
fistpl
mov
cmp
rcrb
pop
clc
push
ss
or
and
and
out
es
cwtl
xchg
es
jg
iret
jnp
stos
rcrb
xor
stos
sti
jg
cltd
enter
mov
adc
nop
mov
mov
jno
int
pop
sub
push
push
lds
cmp
aaa
xchg
in
std
mov
cmp
mov
mov
jmp
shrb
orb
dec
jg
lock
loopne
imul
mov
jno
fiaddl
cmp
stos
jmp
mov
or
add
add
add
sldt
add
decl
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
outsb
push
subl
jle
and
jle
xchg
lods
fstpl
inc
push
push
loopne
jbe
aas
lcall
aaa
out
shlb
and
unpckhps
insl
iret
stos
sbb
dec
mov
and
shlb
fisubrs
pop
adc
popa
mov
or
dec
jae
and
mov
and
lcall
dec
outsl
add
xchg
mov
pop
add
or
fcmove
cmc
scas
and
test
pop
sbb
pushf
imul
and
scas
call
js
fldenv
out
sbb
cmpsb
decb
and
inc
xor
inc
push
xchg
hlt
lret
dec
popf
gs
ds
fisttps
in
lock
or
jl
cmp
das
movsl
loop
dec
push
mov
fnsave
cmp
mov
jmp
xchg
hlt
insl
mov
addl
jg
mov
mov
sbb
dec
stos
mov
xchg
push
stos
imul
xchg
insb
orb
enter
bound
mov
push
fadds
loopne
fwait
pop
jmp
inc
inc
xor
inc
jmp
or
mov
or
inc
inc
pushf
icebp
jl
jle
and
jle
sub
xchg
sbb
insb
lret
cmpsb
in
push
pop
inc
mov
jnp
xor
out
mov
idivl
xchg
adc
push
hlt
jae
pushf
inc
mov
sub
dec
dec
cmp
rcrl
or
mov
cmp
in
jns
mov
fidivrs
xchg
lea
lods
into
into
aam
dec
cmp
gs
fstps
test
fdivrs
fwait
ljmp
jl
pop
divb
pop
xchg
jge
test
jp
inc
out
mov
ficomps
pop
ror
insl
inc
stc
cmp
fincstp
cmp
sbb
popf
jl
dec
sahf
outsb
jg
imul
sbb
mov
and
insb
mov
inc
std
jl
mov
adc
inc
xchg
stos
cmpsb
cmp
push
popf
sbb
sbb
cltd
mov
xchg
push
jle
pop
inc
js
ljmp
push
stc
or
fldl
or
repz
inc
sub
int3
stos
mov
inc
add
adc
dec
inc
outsl
mov
cmp
mov
pop
cmpsb
xor
inc
push
ficoms
push
xchg
or
adc
inc
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
xchg
sbb
and
jle
and
jle
cltd
add
imul
mov
lods
inc
out
sub
das
jle
xor
pop
cmp
adc
mov
sub
jp
and
enter
test
stos
push
imul
mov
xchg
lahf
incb
fwait
push
fdivs
loop
lea
icebp
mov
mov
jmp
nop
sbb
jae
inc
daa
and
dec
dec
pusha
outsb
jg
pop
sub
and
insb
popa
or
loop
adc
xor
dec
hlt
cmpsb
call
faddl
push
jns
out
cmp
pop
jg
fucomp
dec
test
iret
leave
add
jp
adc
mov
nop
iret
or
adc
and
test
mov
loope
mov
push
lods
jo
xchg
divb
popa
sbb
clc
or
dec
inc
jg
mov
imul
cmp
sbb
mov
add
std
and
daa
insl
fsubs
insb
jns
jge
mov
cmp
movsb
jnp
mov
leave
nop
test
std
clc
andb
rorl
lahf
sahf
or
bound
add
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
push
cmpsl
mov
ret
ja
jle
std
sarb
fisubl
inc
fidivs
push
or
js
xchg
inc
xchg
push
cs
aam
xchg
test
xor
enter
push
sbb
dec
daa
mov
mov
cmp
inc
stc
sub
pop
or
dec
push
js
xor
sbb
rolb
add
pop
inc
cmp
sub
movsl
outsb
js
in
and
xor
in
imul
xor
pushf
mov
xor
push
and
sbb
in
adc
shlb
jbe
je
leave
subl
gs
or
cwtl
and
clc
mov
ret
xchg
fcom
push
ljmp
mov
add
sbb
or
outsb
mov
sti
dec
mov
fcomps
loop
pushf
mov
jne
mov
fistl
popf
jl
add
pushf
inc
out
xchg
mov
mov
xor
dec
xor
shlb
push
inc
push
pop
fnstenv
or
aas
lock
xchg
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
push
rcrb
jle
rcr
cli
xchg
jge
xor
inc
push
idiv
and
mov
jnp
insl
int3
jmp
ret
fisubrl
push
mov
mov
clc
out
aaa
push
mov
xchg
mov
dec
insb
call
jno
and
mov
adc
pop
cmp
and
fwait
inc
lds
mov
pop
lcall
dec
jae
sub
nop
das
or
inc
shrl
lret
dec
test
ret
aas
mov
arpl
clc
mov
push
sbb
cli
subb
xchg
jge
negl
dec
mov
xor
mov
imul
pop
into
mov
pop
imul
nop
sub
inc
pushf
cmp
pusha
mov
jl
xorl
or
cltd
and
xorb
mov
dec
mov
ss
push
je
sbb
addr16
pop
fdivp
loopne
stc
xchg
pusha
or
int
lods
cmp
add
in
sbbb
scas
pop
call
mov
pop
lea
ljmp
or
pushf
ljmp
testb
xchg
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
sbb
pop
inc
add
and
jle
push
shll
movsb
pop
adc
sub
inc
test
mov
inc
cltd
jb
and
sub
lds
out
mov
xchg
fcmovb
mov
jns
pusha
imul
inc
packsswb
xchg
iret
jl
dec
repz
push
aaa
mov
data16
fiadds
jle
xchg
mov
and
imul
mov
jge
lea
push
inc
ror
fs
inc
hlt
inc
lret
insl
push
daa
in
out
cmp
or
push
stos
xor
aaa
jbe
loope
lods
jle
lret
sub
xchg
mov
scas
or
pop
popa
imul
mov
psrlq
orl
sub
mov
sub
pop
fildl
mov
mov
out
out
jb
xchg
or
push
test
dec
cwtl
jne
sbb
jg
lods
sti
xchg
gs
or
push
push
lcall
movsl
dec
cmc
mov
out
clc
xchg
or
jns
ret
sub
nop
les
jge
dec
cmp
push
or
pop
or
in
ret
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
movsb
and
add
and
jle
adc
cmpl
out
sbbl
jne
inc
jb
fisubl
fs
cltd
add
mov
adc
scas
aad
add
sub
hlt
into
mov
mov
add
inc
inc
add
cmpsb
aaa
insb
dec
imul
pop
dec
lcall
cmpsl
into
xor
lds
das
sbb
or
fldcw
lods
xchg
mov
push
pop
push
das
std
cmc
xor
adc
push
nop
std
sahf
jl
insl
ja
daa
push
mov
jmp
sbb
cld
sub
xor
ja
idiv
adc
daa
cmp
rorl
add
or
inc
adc
out
pusha
push
in
add
dec
js
shrb
pop
repz
xor
aad
jo
pushf
xchg
imul
mov
add
notb
cld
insb
addr16
jb
fwait
inc
mov
cmp
mov
sti
or
adc
push
pop
cs
loope
push
lods
pop
xor
or
das
mov
dec
add
add
sti
mov
stc
repnz
arpl
add
and
jle
sarl
mov
mov
mov
mov
sbb
js
xor
mov
push
mov
repz
das
ret
push
xor
mov
ljmp
push
inc
cli
int3
sbb
mov
cli
mov
jg
mov
inc
add
in
add
lret
fwait
mov
jnp
cwtl
or
ret
in
sbb
pop
popf
cmp
lcall
hlt
jg
popf
rorb
jb
xchg
les
cmpsb
sub
cli
std
inc
fwait
test
mov
xchg
addr16
mov
divb
push
mov
xor
into
ret
cwtl
mov
and
and
mov
push
jecxz
mov
and
and
xor
inc
mov
pop
jmp
icebp
sbb
mov
inc
out
movsl
into
inc
inc
inc
mulb
pop
or
cmc
mov
lds
add
stc
pmaxsw
mov
dec
cs
or
aas
outsb
imul
jnp
out
cmp
sbb
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
scas
cli
cmp
xor
jecxz
insb
jg
jno
fcoms
mov
stos
negl
insb
repnz
sbb
insb
lods
lcall
pop
fxch
mov
lret
andps
sub
push
testl
in
fidivl
pop
shrb
aam
mov
repz
mov
cltd
into
dec
xchg
mov
stc
pop
or
outsb
xorl
adc
and
mov
jle
xor
lds
or
sahf
insb
shll
mov
jg
lds
jo
xorb
jl
sub
sub
lcall
add
clc
xor
mov
cltd
adc
imul
mov
stos
imul
xchg
jne
nop
daa
jge
scas
call
jle
out
rclb
lea
leave
xchg
mov
orl
mov
mov
stos
rcll
out
sahf
sbb
adc
xchg
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
loope
xchg
pop
jle
and
jle
mov
popf
nop
push
mov
sti
lret
dec
jp
shlb
test
xor
sub
dec
aam
enter
push
in
mov
sub
jb
xor
push
jg,pn
mov
lcall
pop
mov
sub
cmpsl
pop
ja
aam
insl
imul
or
hlt
ds
dec
mov
ja
add
lret
xor
add
xchg
int
clc
aas
test
lods
dec
pop
lds
xchg
or
clc
sbb
int3
sub
movsb
jnp
cmp
daa
nop
adc
pop
pop
ja
or
js
sub
pop
pop
das
push
push
push
mov
lahf
xlat
repz
xor
into
iret
and
adc
or
pop
fldenv
cltd
repz
pop
lahf
inc
outsb
outsb
iret
sub
bound
pop
inc
sbb
addr16
adc
rcrb
repz
and
dec
push
push
mov
pop
sbb
pop
sbb
and
push
das
adc
iret
into
pusha
dec
jb
sub
xchg
pop
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
hlt
popf
sti
daa
pop
add
jle
jg
jle
add
mov
sbb
leave
sbb
push
pop
roll
mov
xchg
sbb
filds
and
ret
inc
aam
xor
mov
movsl
fstl
adc
sbb
shrl
ljmp
jae
add
popf
mov
aad
cli
inc
out
add
adcb
aas
inc
and
xlat
mov
push
adcl
or
cmp
xchg
stos
adc
or
jbe
in
jg
and
pop
in
faddl
pop
les
mov
adc
or
and
dec
adc
pop
push
test
mov
sbb
loop
xchg
aaa
in
jb
xlat
fsubs
jg
mov
push
or
jl
sub
jle
rorb
movsl
aas
lea
mov
cmc
cs
xlat
pusha
rcr
jg
or
sub
js
dec
out
rcrb
and
scas
add
pop
xchg
popf
frstor
leave
mov
or
ficompl
pop
scas
inc
pop
push
push
fcoml
aaa
adc
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
pushf
adc
out
add
jle
and
jle
sbb
cmc
cmp
mov
mov
sahf
clc
sub
roll
mov
mov
fldl2e
push
pop
sbb
or
add
mov
notl
xchg
xor
out
int3
sub
inc
inc
js
scas
xchg
fldt
or
jbe
dec
pop
int3
cmp
mov
sahf
clc
xchg
mov
cmc
aam
aas
ficoml
repz
movsl
out
sub
test
push
lahf
clc
push
mov
add
sub
add
or
cmp
pushf
fisubl
cmp
or
mov
insl
mov
fcmovnb
dec
jg
mov
out
stos
imul
rcrw
fsubl
fs
push
adc
nop
leave
cmpsb
fidivrl
dec
ret
jae
gs
jae
dec
pop
add
nop
jns
dec
imul
cmpsl
rclb
or
mov
or
mov
and
pop
in
mov
lret
mov
loopne
jmp
mov
iret
mov
out
adc
in
movsb
out
movsl
mov
jge
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
roll
jle
jg
jle
int3
rcl
rol
lret
in
into
xchg
rorl
pop
enter
frstor
push
cmp
mov
pop
and
popf
sbb
out
cmc
push
sbb
xchg
dec
xor
inc
pushf
push
insl
fisttpl
cmp
inc
or
scas
fs
jae
jns
xorl
imul
mov
sbb
das
out
xchg
les
pop
in
adc
scas
jle
mov
inc
mov
out
push
or
push
lods
scas
sbb
add
xchg
push
or
stos
or
ret
popf
clc
jo
js
aas
dec
add
sbb
pop
add
int3
push
adc
fstps
add
sbb
lcall
sub
xchg
cs
test
fbstp
out
mov
and
fs
sbb
pop
and
and
sbb
mov
inc
clc
xor
cmpsl
ret
in
inc
xor
push
aad
rcl
jnp
sub
jg
mov
fldl
push
addr16
in
sub
or
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
inc
mov
sbb
and
jle
outsb
loop
stos
pop
mov
mov
iret
dec
fs
iret
jle
and
mov
push
leave
or
stos
mov
xor
fcomi
mov
mov
xor
movsl
dec
loope
xorb
pusha
jg
cmp
mov
sbb
cmp
popf
sti
add
cmpsb
idivl
jle
sub
cmp
aaa
data16
adc
fstp
push
mov
mov
push
lods
dec
xchg
mov
jl
push
or
jmp
mov
dec
push
push
subl
push
not
xor
jp
call
xchg
imul
test
cmp
pushf
xchg
or
cs
das
iret
sub
loopne
outsb
push
shlb
dec
lret
push
xchg
and
les
in
cli
push
cld
sub
out
les
mov
xchg
mov
cmc
in
test
push
repz
aaa
mov
sbb
jns
insb
outsl
popl
jecxz
lds
inc
mov
mov
sub
push
rcl
adc
jle
mov
xchg
push
mov
test
ret
push
mov
jmp
jb
test
adc
mov
jle
jg
jle
xor
pop
je
mov
addr16
pop
arpl
and
inc
jns
and
insb
xchg
xchg
sub
movsl
test
out
lods
ret
mov
imul
movsl
mov
stos
lods
movsb
aaa
dec
stc
fstps
adc
sbb
ficoms
xor
dec
jo
xor
mov
lods
imul
mov
xor
enter
jmp
jbe
test
mov
push
dec
mov
outsb
test
or
or
mov
adc
mov
das
dec
std
xor
movsl
mov
pop
cmpsb
negl
jecxz
push
ret
mov
cmpsl
in
fstps
dec
loopne
xchg
push
mov
xor
or
sti
pop
push
jo
ds
fcmovnb
cs
pop
test
mov
loop
jp
xorl
sub
xchg
cmpsb
xchg
nop
and
adc
and
in
cmp
test
mov
cmpsb
cmp
dec
inc
xor
mov
jl
es
jae
ss
dec
and
sbb
push
cmp
popa
or
and
push
jb
xchg
add
mov
mulb
arpl
push
mov
inc
sahf
pop
add
push
lds
push
movsb
push
popa
into
sbb
or
xor
xchg
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
push
mov
sbb
jle
jmp
out
mov
leave
push
les
inc
leave
xor
rolb
sbb
xchg
int
sub
stc
cmpl
jle
or
popf
jle
adc
out
leave
pop
lock
cmp
imul
push
dec
sub
sub
lock
outsl
stc
shl
fldenv
dec
fmul
dec
test
dec
inc
clc
sbb
mov
andl
das
mov
or
push
jnp
xor
or
test
push
dec
inc
enter
setne
mov
sarb
add
leave
push
xchg
xor
loopne
push
out
fdivp
aas
mov
jb
shll
cmc
cmc
stos
fldl
or
sub
jnp
or
mov
mov
xchg
outsb
lods
cmp
cmc
add
leave
add
bound
in
and
or
jp
inc
mov
mov
xor
and
adc
or
scas
outsb
push
mul
mov
das
sahf
lea
nop
cmp
aas
mov
icebp
mov
dec
add
add
addr16
inc
sub
push
and
cwtl
test
lods
add
or
ret
in
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
pop
dec
adc
and
adc
cmp
xlat
in
ss
xchg
xor
xchg
cmp
pop
ret
xor
aad
lods
or
cltd
shll
jbe
sbbl
scas
add
in
dec
cmp
dec
add
fists
xchg
cmpsb
pop
cmp
rorl
or
out
adc
mov
sub
cmp
xchg
and
mov
js
fdivl
xchg
xchg
call
jge
mov
test
mov
add
xor
sahf
dec
imul
jp
pop
cmp
inc
nop
adc
cmp
out
test
scas
repnz
pop
adc
jl
stos
or
and
xor
mov
mov
adc
jb
test
pop
xchg
or
adc
jno
bound
leave
inc
mov
movsl
dec
xchg
dec
daa
addr16
aam
push
in
outsl
cmp
mov
and
or
dec
cvtps2pi
std
xchg
negb
sub
push
lahf
mov
repnz
pop
add
in
movsl
in
movsb
jo
sub
ss
call
mov
sub
dec
xchg
adc
mov
jl
das
addr16
mov
push
and
push
cli
mov
or
movsb
ret
in
pushf
adc
or
imul
popa
int
sub
jmp
les
add
gs
dec
hlt
sbbb
mov
jle
jle
jmp
push
adc
jo
js
push
scas
shrl
outsb
lock
xor
into
and
and
jnp
ret
pushf
clc
jge
xorl
xlat
insl
sub
lods
inc
repz
fdivl
cmpb
in
jg
dec
pushf
outsl
lahf
fwait
popa
mov
dec
mov
sub
das
push
mov
pop
jae
lock
lcall
cld
fnop
loopne
std
inc
dec
dec
jb
or
fdivrl
push
sub
jg
shlb
push
and
scas
repz
aam
and
test
out
mov
pop
push
scas
pop
sub
cltd
push
push
cs
cs
iret
repnz
adc
mov
icebp
pop
jg
push
pusha
addr16
out
add
xchg
int
fdivl
sub
cltd
adc
call
adc
pop
sbb
add
shrl
inc
xchg
adc
cmc
or
xor
out
inc
add
cld
inc
push
sbb
int3
mov
rcr
in
int
and
fwait
loopnew
loope
sub
fisubrs
jmp
lcall
xor
repnz
and
inc
xchg
icebp
push
cmpsl
xchg
gs
cmp
cmp
push
cmp
push
dec
aaa
daa
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
jmp
jg
jle
je
adc
or
nop
into
shrb
imul
in
cltd
mov
pop
mov
jmp
ret
or
pop
xor
add
popa
subb
out
arpl
insb
movsl
cli
insl
cmp
mov
pop
push
sbb
repnz
add
xor
clc
inc
mov
or
dec
hlt
sarl
mov
jle
out
mov
clc
lcall
mov
mov
adc
jmp
push
arpl
in
cmp
mov
dec
xchg
mov
lahf
hlt
push
in
xchg
cmpsb
mov
xchg
sahf
add
ficompl
jb
push
repz
mov
icebp
or
xor
icebp
cmpsl
push
add
mov
mov
and
icebp
pushf
xchg
insb
adc
mov
fmuls
lret
mov
cmpsl
js
arpl
xor
loope
xor
mov
aas
xchg
aad
negb
mov
das
aaa
or
flds
ret
mov
push
jnp
xor
fcmovnbe
test
test
rcrl
es
cmpsl
ret
mov
xchg
lahf
out
movsb
enter
mov
loope
mov
jb
mov
iret
out
arpl
push
arpl
mov
loop
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
inc
dec
dec
adc
fdivrl
jle
nop
add
sbb
add
sub
sti
mov
inc
push
push
out
xchg
xchg
push
repnz
cmp
dec
call
arpl
fldt
push
rorl
mov
js
sbb
xchg
dec
popf
mov
jge
hlt
in
push
mov
dec
adc
pop
je
shlb
repz
push
scas
mov
sub
mov
jae
or
pop
ret
in
add
test
incl
lods
aaa
push
xor
jbe
out
push
ds
jl
aaa
lock
pop
cli
in
and
xor
push
pusha
push
pop
outsl
pop
push
cmp
in
mov
sbbb
scas
cmpsb
icebp
push
stos
add
mov
fisttps
dec
ljmp
les
xchg
xlat
dec
or
rclb
jns
cmp
leave
repnz
push
and
dec
and
mov
ja
push
imul
xor
xchg
and
icebp
repnz
test
jp
push
jle
cmp
xor
lahf
or
mov
add
lcall
mov
call
pop
pop
jg
push
xchg
lods
dec
mov
xor
mov
in
mov
and
popf
cmp
rorb
cwtl
jl
pusha
and
pop
std
push
lock
add
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
adcl
jle
jg
jle
pop
mov
jne
push
mov
and
and
pop
mov
or
ffree
je
push
mov
pop
fdivr
mov
add
std
in
cmc
scas
mov
mov
mov
shlb
mov
pop
inc
std
loopne
ss
sub
xorl
cmp
inc
out
hlt
adcb
data16
mov
mov
sahf
ja
in
lock
mov
mov
popa
into
mov
psubsw
jle
scas
and
aam
pop
je
in
cli
pop
pop
into
mov
loopne
mov
scas
xchg
test
lsl
stos
fmull
popa
ret
xor
out
ljmp
shl
rorl
imul
and
in
mov
sbb
aas
cld
out
sbb
out
shll
jl
jo
mov
or
lock
adc
daa
call
sbb
lahf
sub
sub
jns
hlt
jl
shlb
test
jnp
int
xchg
mov
imul
push
push
jae
call
jnp
pop
popa
cld
mov
pop
pop
ljmp
dec
cmc
mov
mov
jmp
mov
jmp
push
gs
movsb
mov
pop
jle
fdivrl
jle
cwtl
stc
jle
mov
bound
ss
inc
sbb
sbb
mov
xchg
sbb
shlb
xor
flds
xchg
cmpsb
pop
fadds
adc
mov
xor
mov
dec
jne
jns
jge
rep
push
test
add
ja
cmp
cltd
inc
mov
fwait
and
movsl
gs
mov
jmp
mov
push
je
add
inc
das
jmp
sysexit
add
or
aas
shlb
push
xor
repnz
push
ds
ret
inc
mov
mov
fistpl
fildl
adc
adc
std
push
sbb
adc
in
dec
or
sub
sub
dec
pop
push
ljmp
push
js
mov
inc
rcll
jp
movd
jmp
xchg
mov
out
lret
call
inc
pop
mov
dec
psadbw
adc
jno
adc
adc
add
push
push
push
xorb
push
mov
imul
jne
jae
inc
push
loop
xchg
lea
rcll
test
xchg
push
pop
xchg
xchg
xor
inc
in
or
add
call
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
pop
mov
lock
and
cmp
xor
sahf
lods
add
inc
ljmp
js
outsb
loop
jmp
int
in
enter
in
rorl
or
or
inc
cmp
rcrl
pop
pop
rorl
call
aas
icebp
cmp
add
icebp
xchg
int3
pop
dec
ret
jmp
lods
ficomps
ja
stos
mov
inc
inc
dec
push
outsb
mov
loope
notl
dec
inc
mov
push
xchg
push
clc
sarb
sbb
test
xrelease
sbb
pop
loop
movsb
aad
inc
mov
flds
ljmp
mov
loopne
js
bound
loop
sbb
sbb
jl
cld
aas
and
aam
pop
shl
iret
xor
in
ja
fadd
fimull
div
pop
mov
dec
mov
adc
sbb
ljmp
insl
mov
lahf
jl
into
jbe
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
ja
aad
sub
or
jle
dec
xor
cmp
xchg
cli
fwait
cltd
outsb
pop
lods
mov
jle
es
pop
inc
cmpsl
not
cmp
sub
mov
inc
or
fadd
loopne
jmp
popf
push
cmp
fwait
enter
in
push
out
mov
dec
stc
push
fs
adc
adc
imul
sub
sbb
lahf
insl
outsl
dec
scas
jns
inc
fldl
jo
and
mov
mov
lret
mov
int
and
push
mov
cmp
xchg
sbb
aaa
les
mov
inc
push
push
int3
scas
out
add
aas
and
mov
push
mov
enter
repnz
cli
jecxz
xchg
dec
cmp
arpl
xchg
imul
mov
mov
jo
push
mov
repz
gs
xor
inc
bnd
lods
enter
dec
loopne
sahf
lods
movb
sbb
xor
call
jmp
mov
ja
jle
xor
fs
lods
jp
xchg
std
sub
push
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fisubl
insl
jne
or
jle
or
jle
cmpsl
ja
inc
and
dec
loopne
inc
push
mov
call
push
mov
mov
mov
mov
clc
into
push
dec
add
mov
jno
add
aas
outsb
xor
pop
pop
fildl
adc
mov
pop
xorl
adc
pop
dec
xlat
xor
adc
add
mov
fincstp
mov
or
xor
rolb
movsl
push
cmp
push
imul
cmc
fldt
ja
fwait
je
xchg
cmp
cmp
inc
push
adc
outsl
xchg
cvtdq2ps
cmp
ljmp
andl
ret
cmp
ljmp
fisubl
loope
pop
push
or
dec
cltd
mov
or
and
cs
inc
push
jl
inc
sub
sub
xchg
cwtl
hlt
test
lods
jmp
out
sbb
adc
scas
mov
mov
lret
add
adc
mov
fs
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
add
in
add
jg
jle
xor
cs
sbb
dec
add
mov
rclb
or
mov
cmp
std
pop
rol
add
xor
cmp
ss
cmp
inc
inc
out
f2xm1
add
mov
inc
jo
dec
in
pop
mov
test
fildl
fcmovnb
pushf
cmp
daa
cmp
rcrb
es
aad
pop
cmp
sbb
out
push
jmp
sbb
jmp
xchg
cltd
rclb
adc
in
mov
jmp
mov
outsb
out
or
mov
es
jo
test
xchg
imul
daa
outsl
insl
cli
lods
andl
mov
in
inc
hlt
into
test
popa
jmp
push
xchg
aam
test
sarl
xor
dec
stos
mov
xor
xchg
out
cmpl
jne
ja
in
sarb
movups
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
mov
sub
or
jle
add
shl
xor
jno
add
mov
or
dec
add
or
movsb
inc
mov
and
mov
mov
sub
xor
push
movsb
dec
lret
adc
movsl
cli
add
loope
pop
mov
stos
test
jp
js
insl
add
lods
subl
sarb
sub
push
cwtl
mov
xor
pop
adc
mov
in
pusha
xchg
bound
clc
js
mov
lds
addb
cld
fimull
xchg
cmpsb
dec
mov
aaa
in
push
jae
inc
push
jg
das
push
xor
push
add
jmp
push
movsl
push
ja
jp
int
rorl
fidivs
lcall
rcrl
inc
jp
repz
adc
xor
hlt
pop
and
adc
mov
mov
jl
pop
xchg
and
sub
mov
mov
add
dec
mov
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
lahf
cmp
sub
jg
jle
hlt
mov
dec
and
sahf
pushf
add
mov
lock
xchg
and
cmp
add
inc
je
mov
push
test
sar
sbb
shlb
dec
not
bound
sbb
sub
jmp
push
mov
sbbb
stos
inc
cltd
sub
mov
push
dec
add
xlat
pop
loop
cmpb
popa
push
mov
push
enter
mov
out
pop
sarb
fmulp
inc
mov
sub
arpl
sbb
ds
inc
out
fsub
adc
fcoml
xchg
call
clc
jae
xchg
fimuls
xlat
roll
xor
aas
mov
and
into
mov
sbb
add
mov
mov
fcom
lods
jecxz
jnp
lahf
xor
out
add
xor
sbb
out
push
xchg
subl
dec
in
out
push
notb
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
mov
mov
or
jle
fdivrs
adc
jne
add
stc
mov
ss
xchg
repnz
push
jno
inc
pop
mov
push
out
mov
js
addr16
andb
cli
or
jp
and
cmovbe
dec
movsl
pop
aas
jle
enter
adc
add
shrb
xchg
mov
inc
cmpsl
xchg
sub
sub
inc
mov
int
xchg
inc
and
ja
mov
mov
mov
sahf
xchg
push
pop
fsubrl
int3
mov
test
shl
mov
add
cmc
cmp
dec
pop
add
cwtl
ja
sub
cli
push
ret
aas
adc
jge
lds
sub
aas
add
aaa
mov
jbe
sub
push
and
dec
stc
xchg
sub
dec
add
inc
lock
jno
adc
loope
shlb
test
shlb
mov
mov
mov
jmp
dec
sub
lock
xchg
mov
jg
jle
dec
and
and
imul
cmp
fcomps
inc
loop
and
insb
mov
or
mov
jl
cwtl
fnstenv
add
dec
in
dec
adc
jae
add
lret
in
pop
test
gs
in
out
outsl
dec
push
lret
cmp
mov
and
shll
jno
data16
sub
jae
cmp
mov
icebp
movsl
mov
xchg
std
pop
or
mov
add
imul
mov
js
bnd
add
pop
loopne
add
mov
jbe
mov
xlat
lock
mov
jb
iret
ror
fmul
pop
repnz
in
std
mov
sbbb
or
lods
lcall
insb
sub
incb
mov
test
cmpl
shr
pop
hlt
outsl
or
call
lret
inc
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
xchg
sbb
sub
jle
xchg
jns
or
cwtl
lock
sbb
aad
int3
ja
dec
fisubl
repnz
mov
addr16
dec
sbb
aam
pop
out
lret
movb
sub
repz
fsubp
pop
imulb
arpl
rcrb
push
pushf
sbb
jns
int3
cmp
dec
xchg
leave
cmp
cmp
imul
out
or
cltd
adc
lods
andl
daa
insl
imul
sbb
dec
pop
and
jae
fstps
icebp
adc
pop
mov
push
and
lods
push
testb
and
sbb
cmp
movsl
pop
ror
xor
dec
inc
jg
insb
call
jbe
and
mov
sahf
out
pop
jne
mov
jo
nop
data16
femms
sbb
popf
test
add
push
and
adc
sub
lret
xor
fmuls
aaa
ja
mov
orl
adc
roll
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
mov
mov
jle
jg
jle
test
mov
add
ja
and
in
pop
mov
add
imul
loop
dec
out
push
adc
adc
stc
icebp
dec
insb
dec
jmp
xchg
dec
mov
adc
fistpll
popf
mov
mov
clc
add
leave
xor
and
inc
sbb
repz
cmpsb
sar
jmp
push
nop
pop
clc
lds
dec
cmp
int
imul
jge
test
adc
cmp
xor
leave
dec
mov
push
pushf
aad
cs
inc
jmp
inc
mov
adc
insb
shll
lret
aas
sub
pop
sbb
xor
inc
outsb
sub
xchg
lock
pop
popf
movsl
sarb
jnp
ret
insl
popf
pop
je
ret
sbb
out
lods
push
filds
mov
lcall
and
shlb
pop
and
mov
test
js
fmuls
aas
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
jne
sbb
and
or
jle
stos
pop
mov
ljmp
xor
push
push
xchg
loop
stos
nop
inc
jne
add
xor
test
pop
or
loope
or
dec
test
mov
mull
xor
cmpsl
clc
addr16
jle
adc
clc
pop
pop
in
xor
ja
or
cmp
pop
nop
js
bound
aam
cld
push
fisubl
lods
outsb
insl
cmp
push
lock
xchg
dec
test
sbb
js
cmp
cmpsl
ret
int
cwtl
stos
jp
es
in
loope
mov
gs
add
scas
or
fsubrs
cltd
jnp
mov
xor
roll
jo
adc
jae
jne
inc
sub
pop
dec
cmpsl
data16
or
push
fisttpl
xor
xchg
mov
push
scas
fsubrs
ljmp
ret
pusha
adc
loopne
outsl
ja
push
movsl
jbe
jmp
or
std
add
ds
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
adc
cs
sahf
je
unpckhps
xchg
fwait
cld
xchg
aas
enter
andl
push
push
inc
pop
push
cmp
pop
jnp
lret
mov
leave
add
call
idivb
loopne
inc
shr
inc
jae
psllw
and
mov
js
dec
cs
cmp
imul
cmpsl
inc
stos
movsl
mov
enter
cwtl
push
xchg
jns
leave
and
bnd
roll
fistpll
jne
jbe
rorl
add
cmp
fcoms
add
nop
out
sahf
mov
mov
mov
mov
jmp
es
mov
les
xor
mov
jle
cmpb
outsb
mov
mov
sbb
in
sub
cmpsl
xchg
inc
mov
ljmp
dec
fnsave
fnsave
lahf
inc
int3
icebp
mov
push
xchg
rcll
into
mov
es
and
shl
roll
ds
cmp
xchg
push
dec
xchg
push
jae
mov
bound
jne
mov
inc
sbb
mov
dec
stos
xchg
or
cld
gs
push
add
sub
xchg
xor
into
into
xchg
jno
sub
pop
push
fwait
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
xchg
push
popf
and
push
jg
jle
rorb
cmpsl
out
mov
fnstsw
mov
mov
mov
cmpsl
jl,pn
pushf
add
adc
dec
push
pop
int3
outsl
mov
ss
ja
int
sub
ds
insl
cmpsb
popf
mov
js
xor
cmp
idivb
cmp
pop
cld
xchg
roll
je
xchg
nop
dec
and
push
cmp
sbb
push
loope
adc
cltd
repz
shlb
dec
sub
iret
xchg
or
fwait
sbbb
scas
fdivs
dec
shr
mov
xor
adc
pop
fidivs
push
dec
inc
imul
repnz
dec
adc
lret
pushf
fists
push
jne
push
divb
and
outsb
sub
imul
push
in
jmp
lret
dec
fisttpll
js
dec
sub
clc
and
rorl
adc
push
push
dec
movsb
adc
fldt
dec
lds
jae
rcrl
pop
or
inc
sarb
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
hlt
mov
jle
push
jg
jle
clc
decb
cmpsl
divb
imul
popf
out
lock
pop
dec
lea
cmp
imul
xor
cmpsb
mov
sbb
adc
add
scas
ds
jle
and
lar
hlt
out
shll
fldenv
shrl
cmc
mov
aas
std
ret
add
aad
jae
outsl
add
jne
sub
pop
xchg
xchg
iret
push
dec
mov
jp
sbbl
dec
lods
mov
das
lods
movsl
and
xlat
inc
mov
xchg
cmp
or
mov
cmp
sub
lret
repz
xchg
mov
and
lds
or
es
imul
adc
xor
add
inc
std
fwait
inc
mov
shl
lcall
std
pusha
jae
adc
cltd
cmp
lock
push
repnz
fidivs
push
xor
pop
cmpsl
nop
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
insw
daa
jle
push
jg
jle
sbb
jno
mov
lcall
mov
xor
push
in
xor
mov
mov
sbb
mov
in
jge
lods
xchg
js
sbb
dec
ret
repnz
inc
fimull
ja
out
or
add
lret
adcb
mov
mov
movsb
mov
mov
loope
lock
mov
cmp
fiadds
xor
pushf
pop
in
and
movsb
int
adc
es
xchg
cmp
and
mov
cmpsl
test
rcll
dec
es
sbb
pop
repnz
sbb
ret
push
scas
jmp
repz
hlt
scas
enter
pop
in
test
daa
vmread
xlat
cltd
adc
pop
ljmp
jmp
xchg
jge
ficoms
sahf
jno
mov
push
dec
test
cmp
sti
js
mov
sub
inc
das
sub
dec
mov
iret
icebp
jge
in
aas
fwait
lret
dec
sub
out
xchg
pop
pop
jecxz
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
aas
outsl
les
add
jg
jle
into
mull
xor
test
je
outsl
in
and
fmull
ja
testb
mov
in
test
sub
sahf
arpl
push
ss
data16
mov
in
cmp
xchg
lret
daa
bound
sbb
xchg
sarl
std
sub
je
jae
idivb
jle
test
add
rorb
fnstenv
sub
xor
push
mov
lcall
mov
iret
xlat
pop
xchg
add
aas
gs
jnp
pop
add
ret
mov
out
mov
loopne
inc
imul
mov
inc
or
ljmp
sub
push
mov
outsb
jle
sbb
pusha
ds
lods
and
inc
subl
je
push
ja
sti
cmp
fnstcw
ljmp
jne
xchg
adc
lea
add
lret
mov
jo
loop
bound
or
jmp
aas
push
ds
lods
dec
xor
cmp
dec
xchg
test
popa
jp
dec
sbb
xchg
int3
ds
fnstcw
push
cs
or
inc
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
push
mov
cmp
lds
jle
aaa
ror
decl
adc
into
inc
ret
mov
sbb
std
inc
pushf
dec
out
adc
pop
lret
fistpll
lods
sar
jg
insb
cmc
jl
mov
jp
ds
loope
jle
dec
cmp
or
shll
mov
cld
rcr
mov
jnp
cltd
das
cmp
inc
in
xchg
mov
clc
jle
aas
sbb
mov
pop
cmc
and
cmpsl
and
adc
mov
pop
mov
jae
ja
test
nop
pop
mov
int3
mov
jecxz
push
insb
jp
jne
dec
ljmp
lods
outsb
cmpsb
incb
adc
ss
loop
fbstp
cmp
and
aas
repnz
push
aaa
pop
inc
push
cwtl
fxch
imul
shrl
pop
mov
sub
lret
stos
pop
test
and
icebp
shll
and
aaa
test
lret
xchg
pop
testb
push
cmp
cmp
int
inc
mov
dec
add
pop
mov
out
mov
sarl
and
sbb
pushf
lret
je
test
inc
sub
rorb
jno
add
mull
add
xor
xor
add
jmp
jg
add
jns
cmp
cmp
cmp
lds
jle
jg
std
pop
lds
and
mov
imul
ja
cmpl
or
jo
push
sub
lods
sbb
das
add
out
push
out
outsl
mov
insl
pop
sbb
insl
jns
std
cmp
clc
and
pop
lods
inc
in
cmp
or
adc
jle
loop
xchg
popf
push
push
sub
scas
sub
sarl
arpl
mov
popf
jne
movsb
mov
mov
in
fwait
ror
sub
adc
add
mov
stos
bound
add
imul
adc
mov
fildl
push
sbb
std
add
daa
negl
int
mov
jp
cwtl
push
or
nop
into
cltd
cmp
stos
roll
xor
jae
inc
and
sub
inc
cmc
cltd
cmpsb
fadd
ja
cltd
repnz
pop
inc
cmp
out
gs
add
mov
and
jns
pop
pop
in
mov
adc
push
inc
mov
outsb
shrl
dec
xlat
ss
fisubrl
jmp
lcall
adc
mov
sub
pop
jnp
faddl
add
test
mov
push
xorb
mov
insl
int3
shrl
xor
pop
ffreep
sub
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
lods
jne
sub
jle
lds
jle
inc
sbb
xlat
int3
test
cmp
pop
ja
shll
aas
insl
ljmp
add
pop
sbb
lcall
lods
test
mov
push
xchg
push
out
cs
repnz
test
insl
sub
fcomip
sub
push
mov
lret
mov
out
roll
ret
iret
mov
movsb
sahf
lods
pop
in
mov
cmp
inc
bound
ja
add
loopne
arpl
jmp
jle
repz
fstl
push
adc
cld
add
lcall
jns
cmp
fbld
movb
sub
sub
jg
lds
stc
in
sbb
or
and
adc
mov
in
mov
pop
sub
mov
testl
mov
test
bound
fmuls
jmp
popa
pop
ljmpw
sub
popf
push
push
and
jl
cmpsl
out
testb
cmp
push
or
clc
filds
jo
inc
push
or
mov
sub
pop
sbb
roll
loope
inc
pop
cmp
and
enter
aad
pop
cmpl
rcll
cli
xchg
mov
xor
mov
push
mov
js
scas
adc
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
test
jle
jle
jle
popf
cmpsb
imul
push
js
iret
insl
lahf
xor
or
icebp
dec
mov
test
das
mov
push
bound
addr16
adc
add
stc
imul
ret
mov
in
sub
push
aad
jmp
lret
ret
icebp
test
pusha
in
rcrb
push
mov
push
rcr
sbb
ficompl
movsl
pop
loop
jb
push
push
push
push
mov
leave
adc
addb
pop
inc
xchg
mov
es
lret
pop
icebp
mulb
cmp
movsb
aas
or
je
fidivl
jl
mov
lret
nop
pusha
sbb
aad
es
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
mov
jle
jle
mov
fwait
adc
xchg
push
mov
mov
push
push
enter
or
movsb
idiv
movsb
call
mov
popa
cltd
loope
daa
mov
movsl
sahf
mov
and
faddp
insb
fidivs
jmp
daa
mov
orb
ss
push
mov
inc
divb
fistpl
dec
mov
cltd
icebp
ds
imul
addb
testb
nop
bnd
cmp
sbb
inc
adc
std
xor
or
leave
repz
mov
addr16
cmpps
lds
out
call
mov
fwait
jg
cmc
testb
movsl
mov
mov
in
sub
lea
movzbl
and
jmp
mov
stos
popa
jns
in
mov
jle
roll
jle
mov
jle
dec
pusha
sahf
pushf
adc
jns
xchg
mov
pop
outsb
loopne
push
mov
js
ficoml
out
adcb
loope
repz
movsl
add
sbb
enter
xchg
scas
movsb
mov
ja
pop
es
cmp
pushf
mov
pop
xchg
adc
or
iret
sub
add
clc
fldl
xlat
int
mov
and
inc
adc
xchg
lods
push
jbe
pusha
daa
cmp
jbe
jle
adc
pop
dec
lds
mul
xorb
dec
addb
mov
xor
mov
push
test
mov
or
dec
popf
rorb
sub
in
push
out
popf
inc
cmc
orb
sub
fisubrl
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
or
cmp
jle
mov
jle
mov
enter
sbb
sbb
sahf
xchg
sub
shl
scas
or
xchg
hlt
inc
mov
jp
outsb
mov
sub
fwait
push
or
add
sbb
sbb
repz
sub
loopne
or
dec
inc
mov
pusha
nop
test
ret
pop
add
xchg
daa
and
mov
jl
loope
sub
xchg
and
sbb
data16
movsl
cmp
adc
jg
lea
xor
andb
out
fidivrs
mov
lcall
cmpsl
imul
loop
add
pop
pmuludq
push
movsb
adc
roll
arpl
insb
movl
popl
or
add
xor
adc
incl
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
mov
pop
movsl
xchg
cmp
jle
out
fisubs
cmpsb
out
outsl
movsb
test
sub
mov
sahf
sub
gs
xorb
inc
adc
data16
mov
cmc
push
adc
les
mov
mov
out
stos
sub
les
stc
ss
push
pop
and
adc
sbb
sbb
test
mov
andb
mov
mov
fnstenv
je
push
mov
mov
jo
lea
xchg
inc
in
xor
and
movsl
xchg
jecxz
xlat
sub
jb
addr16
inc
or
gs
insl
pop
sub
dec
daa
fsubl
negl
dec
out
pop
and
adc
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
mov
pop
jmp
jle
jle
pop
popf
out
sbb
addr16
rcrb
adc
repnz
dec
data16
push
ret
push
and
adc
adc
sarb
movsl
adc
mov
push
fidivs
xor
mov
stos
sbb
les
popf
fs
sti
pushf
cld
hlt
cmp
aam
arpl
push
sahf
pop
jge
pushf
add
rcrb
and
js
sbb
pop
lds
movsl
in
add
xlat
sbb
dec
popa
test
sbb
aas
mov
push
sti
dec
xor
xchg
ret
xor
push
sub
xor
test
iret
orl
cmpsb
movsl
sub
cli
out
dec
dec
inc
stos
loopne
cli
mov
out
aas
mov
sub
push
xchg
les
jne
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
sub
and
jle
mov
jle
xor
lods
imul
cmpsb
enter
scas
jl
lds
push
adc
pop
fistps
inc
cmp
cmp
jecxz
je
mov
mov
ret
push
cmpsb
popf
test
pop
insb
or
add
sub
faddl
in
leave
stc
xchg
in
sbb
push
scas
leave
and
fimuls
mov
andb
push
mov
jle
inc
inc
add
sub
inc
adc
and
lods
sub
sub
cmp
adc
and
fxch
adc
fisubrs
push
dec
jbe
push
jmp
movsb
out
lods
xor
test
arpl
je
data16
iret
mov
cmp
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
xor
dec
mov
jle
mov
jle
push
int
mov
mov
dec
es
sbb
xchg
adc
test
out
andb
int
inc
xchg
lahf
or
push
das
scas
push
aaa
mov
mov
and
xor
fimuls
mov
in
lret
pop
mov
sti
pop
not
movsl
inc
scas
fwait
xchg
cmpsb
adc
aas
and
xor
cmc
xchg
mov
movsl
jp
jb
rorl
sbb
test
fs
sti
lods
sbb
mov
fs
subb
int
adc
les
mov
mov
stc
cmp
ret
push
sub
pop
fwait
insb
stos
push
stos
cmp
inc
mov
ret
xor
pop
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
mov
jle
mov
jle
imulb
aam
fst
xor
out
cmp
loopne
dec
out
sbb
adc
mov
sub
pop
lds
into
mulb
sub
dec
loop
jo
pop
sub
popa
push
dec
insb
repnz
push
imul
add
xor
push
rcrl
aaa
push
push
sbb
inc
push
dec
jle
jl
jbe
mull
lods
mov
pop
shlb
fimuls
das
xchg
jge
add
mov
pop
fisttps
adc
std
in
outsb
scas
das
jmp
push
jno
cli
fsubrl
inc
in
test
add
adc
xor
es
fs
xchg
adc
fdivs
in
lcall
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
icebp
mov
xor
mov
jle
lret
int
lock
mov
dec
shlb
shlb
lret
push
cltd
sbb
pop
jecxz
repz
push
ror
pop
addr16
out
xchg
sub
jle,pn
lcall
mov
test
sahf
fldenv
dec
shrb
pushf
outsl
iret
sti
cmc
flds
sbb
mov
sub
cwtl
cmpsb
jl
xor
inc
mov
leave
dec
mov
inc
xchg
jg
ficoms
and
inc
orb
mov
xchg
pop
aaa
nop
cltd
ss
pop
mov
jb
jge
add
jmp
add
leave
pop
mov
mov
test
je
incl
sbb
sbb
enter
inc
or
or
mov
xorl
sbbl
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
jnp
shll
jle
jle
jle
iret
cmp
stos
cmp
add
sub
xchg
mov
xchg
adc
mov
pop
mov
dec
fists
pop
mov
and
and
mov
lds
loop
bound
cmp
pop
inc
aad
xor
cmp
push
add
lods
fisubrs
push
add
frstor
cmpsl
outsl
out
adc
shl
xchg
inc
shrb
sub
rol
mov
loopne
mov
dec
jmp
repz
cs
repz
cltd
out
pusha
es
lret
push
aaa
aas
inc
in
aam
ds
insl
xchg
repz
inc
rcll
cs
pusha
adc
jne
xor
inc
push
jno
dec
call
pusha
pop
sti
add
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
rclb
xchg
js
aaa
jle
mov
jle
push
jae
lahf
fisubrl
mov
or
jo
cmp
mov
mov
test
or
mov
dec
cmp
mull
outsl
mov
repz
insb
outsl
cmp
inc
sub
mov
dec
sub
mov
sub
adc
movsl
sbb
dec
sub
mov
dec
insl
push
push
and
int
aaa
jge
mov
mov
insl
dec
sub
rolb
cs
dec
nop
pop
leave
bound
fpatan
add
or
mov
adc
add
mov
aas
mov
mov
jl
test
ja
xor
stc
je
arpl
cmp
lock
xchg
in
mov
jnp
imul
imul
jmp
inc
loop
xchg
imul
push
adcl
jle
jle
jle
inc
ds
adc
pop
repz
popa
cmp
dec
mov
inc
ss
dec
and
lods
je
aaa
aad
pmuludq
loopne
add
dec
int3
push
repnz
xchg
lahf
mov
popf
orb
sbb
lock
mov
test
shlb
dec
jb
lcall
imul
je
or
add
xor
test
xor
arpl
leave
adcb
shrb
mov
repz
push
add
lret
and
mov
pushl
cmpsb
inc
mov
mov
mov
mov
jbe
lea
repz
jae
xchg
imul
jecxz
dec
sub
and
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
and
xor
jle
jle
jle
and
inc
sbb
push
fiaddl
lret
xchg
dec
mov
lahf
inc
inc
xchg
mov
bound
lret
mov
clc
and
pop
scas
xor
daa
jl
and
fnstsw
xchg
jmp
adc
rorl
or
dec
dec
push
or
xor
sbb
test
xchg
mov
xchg
jb
dec
stos
in
wrmsr
sbbl
cmp
sub
mov
xor
add
xchg
ss
ds
mov
ret
xor
loope
out
hlt
sbbl
inc
xchg
ret
adc
sbb
jno
adc
js
xor
cmp
jb
jno
xor
out
gs
mov
pop
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
fadds
leave
loope
jle
mov
jle
jle
and
lods
jne
popf
mov
sub
mov
and
dec
cmp
sub
or
and
pop
sub
out
cmpsb
and
and
push
mov
sti
pop
sub
jae
fbstp
test
ret
xor
test
pop
inc
mov
loop
scas
cmp
jl
push
xchg
sbb
sub
sbbl
pop
cmp
ret
lret
shlb
mov
jns
inc
movsl
sbb
in
fisubl
cmp
dec
cmpsb
sbb
lods
loop
jl
mov
jbe
push
faddp
push
add
pavgb
in
ret
les
je
cmp
js
inc
stc
push
jo
dec
stos
test
lahf
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
add
sub
ret
and
sbb
inc
lret
jp
inc
ljmp
in
clc
sbb
push
movsb
ss
stos
mov
lods
cmp
inc
pop
xor
and
push
mov
mov
gs
decl
sub
dec
addl
pop
daa
dec
cmp
xchg
out
sub
inc
or
stos
ret
fldt
fldl
xchg
ficoml
pop
jo
into
xchg
lcall
push
and
sbb
test
dec
sarl
fwait
xor
mov
mov
es
call
cmp
jp
add
ds
int3
fmull
aaa
idiv
xor
pop
jp
leave
xchg
or
xor
or
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
push
cld
sahf
jle
mov
jle
popl
inc
iret
jl
icebp
xchg
in
into
mov
lods
in
daa
imul
popf
mov
test
rcl
daa
fdivs
add
rcl
mov
inc
lods
cmp
jne
out
pusha
dec
and
bound
dec
inc
mov
jmp
pop
repz
jb
adc
cld
and
data16
icebp
int3
cwtl
xchg
mov
mov
sub
add
rcrb
jbe
xor
and
mov
in
hlt
inc
mov
data16
mov
adc
mul
dec
sbb
or
xchg
pop
xchg
pop
cli
addr16
lock
add
sub
inc
xchg
imul
int3
sbb
pop
jg
ret
call
xor
jmp
popa
jno
jnp
jnp
or
popa
imul
lret
jle
mov
jle
and
xchg
push
sub
orb
out
cli
inc
fcomp
xchg
add
dec
inc
cmp
mov
cltd
pop
test
das
imul
movsl
xlat
testl
mov
cmpsl
pushl
out
lea
cmp
lods
daa
pop
cmp
xor
je
rcll
in
imul
int
insb
mov
rorl
sub
arpl
mov
add
adc
mov
mov
int3
push
and
mov
lret
fcoms
iret
push
xchg
test
inc
add
into
dec
arpl
adc
sahf
jmp
inc
pop
mov
mov
xorl
jmp
mov
pop
adc
out
movsb
jno
push
jns
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
pop
mov
enter
jle
jle
pop
add
mul
lahf
scas
arpl
sbb
jo
push
push
add
mov
push
sub
mov
fstl
sub
jae
mov
sti
aam
add
pop
int
jbe
popf
or
jnp
rcl
out
inc
aas
add
and
enter
push
mov
icebp
insl
aaa
pusha
icebp
mov
xchg
dec
mov
mov
jo
movsl
lods
mov
fdivr
les
jbe
lcall
sbb
and
and
push
les
ret
insb
jbe
out
test
sub
xchg
repnz
stos
pop
sub
fnstenv
hlt
push
gs
pop
sub
aaa
jnp
sub
test
mov
std
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
cmp
ret
ficomps
andb
in
das
xor
pop
sbb
lret
imul
dec
sbb
cmp
xor
adc
mov
inc
xchg
pop
movsb
adc
fwait
out
aas
cmp
in
lret
js
fistps
test
int3
andl
enter
mov
mov
les
pushf
inc
outsb
xchg
mov
cli
adc
clc
mov
inc
rep
dec
shl
mov
xor
je
mov
scas
jle
xor
in
mov
rclb
mov
rcrl
jecxz
sub
popf
xor
jle
xor
jmp
jge
pop
sti
shrl
xor
sub
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
