push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
dec
jmp
jp
pop
jp
and
daa
cmp
jno
jne
mov
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
adc
push
adc
adc
jns
push
mov
addr16
mov
push
xchg
inc
mov
bswap
push
mov
jp
inc
adc
sub
cltd
cmp
dec
push
mov
mov
insb
pop
lock
int3
or
out
mov
scas
inc
or
cmp
push
add
pop
imul
loop
mov
lcall
loop
cwtl
rorl
clc
mov
push
xchg
test
sbb
sub
adc
ffree
andb
push
jnp
xchg
push
push
fwait
pusha
sub
mov
xchg
jne
mov
pop
andb
nop
hlt
mov
bound
pop
xlat
out
inc
xchg
jns
jbe
bound
adc
sub
pop
mov
push
in
and
movsl
pop
xchg
outsb
xchg
shrb
inc
fstps
movsl
adc
icebp
jbe
pop
mov
add
xor
inc
sub
push
push
sbb
xlat
jno
cmp
xlat
jle
xor
mov
scas
xchg
mov
dec
mov
push
mov
dec
or
rorb
fimuls
hlt
pop
dec
adc
les
into
inc
daa
lods
push
fildll
mov
mov
cmp
mov
pop
dec
imul
add
pop
jns
movl
push
cwtl
push
and
add
and
lcall
pop
xchg
push
xlat
mov
rcl
jecxz
cmp
test
xchg
mov
add
ja
pop
jge
inc
and
push
in
inc
mov
ja
push
loop
test
inc
or
and
aad
jp
and
out
xor
xchg
mov
fidivs
sahf
enter
call
push
ja
jmp
inc
push
mov
and
sbb
push
fcmovnb
inc
xor
cmp
es
sbb
cmpsl
xchg
mov
fnstsw
mov
rclb
mov
xchg
xor
jp
in
push
jb
in
mov
mov
rcrb
fisubl
je
pop
mov
adc
dec
add
ljmp
sbb
push
dec
push
cld
dec
add
push
add
cmp
pop
cld
inc
adc
roll
test
mov
out
fmuls
mov
inc
or
gs
sub
pop
and
test
hlt
pop
inc
mov
add
stos
cwtl
and
xor
aad
adc
pop
pushf
nop
jno
xor
scas
aas
pop
aad
rolb
jl
and
jae
aam
fwait
xorb
mov
fisubrs
or
sbb
das
movsl
sub
iret
sbb
in
lcall
xchg
popf
cmpsl
mov
andl
mov
dec
cs
es
push
mov
leave
frstor
cmp
shrl
xorb
pop
imul
ja
mov
inc
adc
mov
push
mov
inc
cmp
mov
outsb
push
jecxz
or
aam
mov
ret
xchg
dec
cmp
das
cmp
mov
les
or
out
adc
mov
xor
jle
sub
or
sbb
repz
or
sarl
xlat
ss
sbb
cld
inc
and
pop
test
push
jo
mov
shrl
xor
rclb
pop
jg
and
xor
sbb
test
pop
xor
mov
mov
ficoml
stos
icebp
or
xor
inc
sahf
add
pushf
add
sub
dec
push
mov
pop
hlt
or
xchg
imul
scas
sub
dec
insb
push
jge
jl
cmp
sub
mov
jge
jbe
jns
lock
aas
test
push
dec
xchg
arpl
js
gs
sahf
nop
and
sub
mov
cmc
lock
jg
mov
mov
pop
shlb
or
fimull
add
mov
lds
jle
jle
icebp
dec
and
sub
ds
xchg
adc
sub
sub
pop
adc
inc
cmpsl
insl
jle
and
cmp
aas
adc
adc
jp
int3
leave
adc
pop
inc
pop
inc
jb
aaa
push
or
jmp
shlb
fucomip
int3
out
pop
sti
push
jbe
cmp
jle
cmc
dec
out
movl
out
cmp
fs
cmp
lock
mov
inc
jae
shl
shll
sbb
inc
xchg
cmp
or
movsb
jne
jmp
scas
pop
push
call
bound
ds
push
dec
cmp
aas
add
jle
cmp
xor
leave
imulb
cwtd
lahf
sti
and
jbe
repz
mov
insb
pop
ljmp
test
icebp
dec
stos
iret
fldl
cmpl
aaa
or
data16
std
les
add
pop
aam
pop
test
dec
mov
cwtl
rclb
out
ror
pusha
xchg
jle
sahf
je
lahf
sbb
lcall
mov
fidivl
stc
movaps
loop
out
in
jmp
xor
repz
mov
mov
pop
lret
daa
add
jl
loope
cmp
adc
xor
lods
fadds
add
cmpl
fcmovb
inc
scas
mov
jno
dec
jg
fistl
sahf
shlb
dec
cld
mov
int3
mov
cwtl
xchg
adc
xchg
out
fsubrp
daa
mov
sbb
dec
dec
sbb
popa
arpl
das
mov
jg
or
ficompl
int
int3
lds
std
jmp
cwtl
repnz
lret
push
push
cs
push
inc
lods
cmpsb
dec
ja
mov
jg
inc
stc
push
or
cmp
pop
int3
pop
cmp
imul
pop
cli
push
aas
lods
fmulp
sbb
bound
adc
shlb
js
sahf
sub
mov
add
push
xor
lcall
cmp
sbb
xor
add
inc
push
pop
sbb
roll
inc
sbb
jecxz
fcmove
bound
mov
jb
mov
mov
mov
xchg
loope
cmp
inc
jne
add
mov
mov
lock
xor
cmpsb
lcall
push
rolb
mov
and
mov
popf
stos
sbb
pusha
repnz
adc
mov
xchg
hlt
sarb
xchg
stc
movsb
ss
ret
test
xchg
mov
xor
das
xchg
sti
shufps
divl
fwait
aad
cmp
push
lahf
mov
call
cltd
push
hlt
arpl
push
mov
mov
xchg
xchg
push
and
mov
fs
push
push
jb
in
cli
ss
loop
repnz
jg
leave
add
inc
push
out
repnz
xor
daa
lcall
add
mov
push
sub
mov
mov
jge
mov
scas
mov
mov
push
out
clc
adc
in
xchg
pop
push
adc
mov
jno
adc
test
popa
inc
incb
or
in
add
mov
idivl
and
test
lret
dec
and
in
add
daa
xlat
inc
es
fldl
test
popa
cmpsl
cmpsb
inc
lock
out
lcall
shlb
ficoms
and
js
fwait
mov
movb
fwait
cmp
xchg
outsl
stos
inc
sbb
loop
test
pop
mov
xchg
and
mov
shrb
cmp
test
push
imulb
mov
xor
lea
mov
enter
pop
sbb
outsb
cmp
mov
loope
test
rorb
movl
orl
push
inc
mov
cmp
pop
data16
jne
push
stos
ss
pop
subl
and
or
push
das
les
dec
lds
sbb
xor
mov
movsl
jge
scas
in
pop
and
in
sbb
stc
out
mov
adc
pop
dec
mov
scas
mov
add
aad
or
test
addb
xor
and
dec
pop
lret
stos
cld
bound
shrb
jae
xor
push
aad
cld
in
in
jne
scas
adc
int
cld
sbb
jp
cs
xor
bound
inc
sub
adc
dec
aam
xchg
hlt
sbb
mov
xor
push
xchg
mov
cmp
dec
jmp
jo
inc
jno
int3
push
mov
mov
mov
fcompl
test
sub
push
dec
xor
repz
push
repz
xchg
add
addr16
adc
and
dec
or
lds
or
aaa
mov
push
fldcw
pop
mov
sbb
lds
dec
imul
in
pop
addl
dec
sahf
loopne
movsb
in
pop
sbb
inc
mov
jl
cmp
and
cltd
lcall
fsubl
les
lcall
pop
cmp
jle
imul
fcmovnbe
call
nop
mov
push
fcmovu
int
cmpsb
mov
das
popf
cmc
leave
xchg
das
dec
push
add
ret
mov
and
loopne
add
movsl
insb
inc
sub
inc
cmp
mov
adc
xor
int
jns
push
stc
mov
imul
insl
sti
pop
mov
mov
gs
ss
cmp
push
xor
dec
shr
out
add
xchg
sub
cmpsl
faddl
bound
pop
arpl
jb
das
adc
lret
sbb
push
or
fsubs
mov
jge
out
cltd
or
push
fs
xor
pop
xchg
aam
xchg
outsb
pop
jle
mov
fcompl
fwait
xor
addr16
jo
mov
lock
lock
fwait
mov
pcmpgtd
leave
pop
bound
dec
push
jno
or
push
or
pop
push
mov
mov
and
pop
scas
or
test
adc
icebp
pop
fstp
cmp
int3
jmp
arpl
pop
mov
adc
cmp
jne
pop
mov
mov
inc
mov
mov
leave
out
mov
cmc
push
mov
lea
push
clc
and
cmp
or
jmp
lahf
aaa
inc
or
sub
jge
mov
add
das
mov
pop
pusha
loopne
bound
inc
mov
mov
sbb
push
mov
fstl
mov
sbb
mov
icebp
lret
ret
std
mov
jmp
jecxz
sbb
jns
out
int
xor
mov
mov
test
and
jge
adc
or
ss
loopne
cmpsb
divl
cmpl
rcll
aad
sub
mov
lret
dec
cmp
shl
out
in
and
call
sub
cli
mov
shl
inc
outsl
and
pop
cmp
loop
mov
xor
icebp
sub
pop
iret
adc
jnp
repnz
mov
push
lret
stc
data16
out
adc
js
imul
pop
cmc
sar
inc
sbb
push
jmp
mov
int
sub
sbb
aam
fsts
stos
jge
inc
std
fisubrs
shlb
sub
mov
sbb
jae
mov
arpl
rorb
xchg
rcrb
test
daa
dec
movsl
jne
push
loopne
inc
dec
cmp
and
in
adc
sbb
insb
add
mov
inc
movsb
or
inc
ds
jp
push
outsl
mov
lock
pop
sub
sbb
mov
mov
pop
xor
sbb
in
das
aad
add
xor
xor
jae
repnz
jno
cmpsl
roll
idivb
mov
mov
mov
cmp
xor
hlt
sahf
and
sbb
notb
cmp
xchg
bsf
cmp
mov
pop
mov
cmp
push
insl
mov
push
or
bound
dec
out
addr16
mov
xchg
enter
insb
sub
mov
mov
popf
push
test
insb
cmp
jo
pop
pushf
cmp
pop
add
aaa
cmpsl
push
dec
mov
jne
cmp
das
sysenter
mov
lea
lret
cmpb
mov
ds
xchg
cmp
xchg
sub
push
sbb
dec
xchg
adc
push
das
loope
test
push
js
sbb
mov
lret
mov
roll
cli
popf
cld
sub
mov
cwtl
sti
sti
jl
xor
mov
es
push
adc
lahf
jb
mov
xor
sub
mov
jecxz
ja
jp
adc
movsb
mov
insb
sub
push
aad
push
sbb
outsl
sbb
dec
or
add
push
sahf
jecxz
xchg
inc
fstps
js
data16
lods
and
xor
outsb
add
bound
inc
mov
daa
xchg
lods
and
sbb
and
mov
jg
xchg
in
mov
int3
hlt
dec
jb
push
pop
sub
lcall
negb
cmpsl
and
push
dec
icebp
mov
mov
loop
in
fmuls
or
jle
mov
and
mov
addr16
leave
dec
test
ret
mov
sbb
and
lock
dec
in
xorb
dec
pop
aam
add
add
sbb
bound
pusha
xchg
xchg
push
jbe
inc
ror
cmp
testl
dec
js
shll
movsb
daa
jne
leave
and
jbe
jo
mov
mov
in
stos
jo
mov
mov
jmp
pop
lret
xchg
mov
loop
xor
jge
jmp
lahf
lock
jp
int
imul
adc
jo
cltd
lock
rcr
or
adcb
lods
jae
ficompl
sub
rcrb
cmpb
xor
stos
fstps
imul
push
insl
clc
inc
insb
popl
mov
push
or
js
test
daa
add
pop
and
mov
and
push
xchg
cli
pop
xlat
sub
push
xor
jno
sti
clc
lcall
adc
rclb
mulb
mov
mov
mov
jns
dec
pop
outsb
jns
pop
or
jbe
icebp
mov
sub
rcrl
and
jmp
popf
xchg
ljmp
popf
out
xor
insb
hlt
aaa
dec
std
sub
or
inc
fnstenv
mov
xor
cmp
clc
nop
jbe
adc
lcall
xchg
fsubs
js
mov
pop
pop
sub
xor
cs
fidivs
jg
test
pop
mov
scas
mov
movsl
cwtl
jb
sbb
mov
popf
mov
jmp
inc
outsb
dec
jge
and
cld
std
sbb
in
inc
addr16
ds
or
adc
loop
mov
lds
or
jne
add
testb
in
jge
mov
xchg
jp
out
lahf
addb
push
push
push
dec
cmpsl
mov
aad
aaa
int
clc
movl
inc
adc
jb
rcrl
cs
sub
aas
xor
inc
inc
es
add
or
lret
pop
sub
fstl
jnp
xor
pusha
cld
or
outsl
xchg
pop
sbb
inc
outsb
cmp
pop
xchg
cwtl
pop
mov
movsl
push
and
jmp
adc
sub
sbb
fstps
cmp
sbb
movsb
pushf
addl
push
pop
scas
adc
out
in
jnp
mov
sbb
sub
repnz
pop
ja
mov
mov
ror
push
mov
jb
pop
cltd
mov
mov
rep
or
pusha
or
movsl
inc
cmp
int
mov
sahf
add
xchg
jmp
testl
test
pop
xor
setge
cltd
pushf
iret
inc
out
aas
aaa
shrl
mov
lock
xchg
jo
jmp
clc
mov
gs
inc
xchg
push
sub
add
push
pop
je
jecxz
adc
mov
mov
lea
icebp
mov
xor
aam
cli
bound
in
inc
movsb
mov
add
mov
out
ljmp
jmp
and
test
cmp
cmpsl
and
call
sub
sbb
dec
in
jo
mov
xchg
bound
test
cld
jmp
sbb
push
pop
mov
jns
or
mov
aaa
xor
out
dec
xchg
add
cmp
gs
mov
jge
icebp
loop
cmp
mov
pop
jns
call
jmp
adc
inc
outsb
fs
fsubs
sub
cmp
fidivrl
dec
or
loopne
ds
mov
imul
imull
dec
jmp
xchg
adc
sbb
js
xchg
mov
mov
mov
sub
xchg
fldcw
fisttpl
sub
ss
cmp
test
dec
mov
push
scas
inc
pop
mov
inc
cld
mov
dec
clc
xlat
loop,pt
pop
xor
test
in
std
mov
mov
fmul
loop
dec
xchg
cli
into
ljmp
xchg
xchg
or
andl
mov
dec
adc
addb
shll
lcall
mov
lea
xchg
mov
inc
repnz
jae
hlt
icebp
mov
jl
jge
in
je
and
sub
inc
ret
shr
and
push
mov
sbb
scas
mov
movsl
repnz
xor
add
in
and
test
lea
and
lds
repz
rorl
test
sub
decb
sbb
mov
push
sar
sub
dec
sahf
lea
inc
jmp
daa
adc
rcll
mov
mov
or
pop
push
rorb
fs
imul
ja
dec
or
movsb
mov
frstor
sahf
rcll
rcl
mov
iret
daa
enter
cwtl
adc
shl
mov
lret
add
xor
cmp
dec
adc
adc
es
mov
mov
ds
hlt
mov
repnz
out
push
mov
push
imul
sbb
xchg
pushf
sbb
inc
pop
or
aas
mov
xchg
into
movsl
scas
sub
flds
ret
cli
dec
sbb
ret
cmc
mov
test
jp
rorb
mov
dec
xchg
lahf
pop
sub
xor
mov
push
cmovb
pop
adc
mov
inc
outsl
jno
inc
sbb
push
fs
jg
lods
dec
xchg
jnp
aaa
add
pop
lock
int3
test
ret
push
fbstp
adc
aam
push
xchg
rcrl
and
dec
cmp
mov
test
xchg
enter
fxch
dec
punpckhwd
mov
shlb
jmp
pop
in
dec
push
test
iret
push
shll
rcll
jb
inc
js
das
stos
lds
outsl
stos
aad
push
add
into
mov
movsl
enter
lret
xor
sbb
jmp
int3
pop
incb
dec
adc
cmp
ss
in
loope
cwtl
jp
mov
cmp
rcrb
xorb
mov
movsl
jns
adc
fwait
inc
nop
jg
testl
adc
pop
xor
out
lret
pshufw
push
andl
mov
addb
jbe
stos
adc
sub
popl
clc
repz
aaa
scas
jp
jnp
lahf
out
dec
sub
jg
call
scas
in
jb
outsb
out
or
jns
stos
sahf
clc
orl
test
pop
jg
sub
mov
add
push
rol
out
jp
pop
out
call
addr16
mov
or
pop
mov
lahf
and
pmaxub
mov
mov
jno
lret
mov
mov
xchg
xchg
ret
push
sub
mov
gs
mov
sub
jb
cmc
mov
dec
stc
scas
js
mov
adc
push
mov
sbbb
pusha
mov
in
imul
cld
dec
xchg
pop
mov
loopne
pop
push
test
inc
scas
scas
call
imul
and
adc
mov
or
xchg
adc
push
mov
fstps
cmp
xchg
outsl
mov
les
popa
insl
sahf
mov
mov
ja
cmpsb
adc
dec
or
fcmovne
out
inc
sub
cmpb
mov
mov
in
or
repz
inc
lret
push
shl
jno
inc
adc
dec
in
pop
push
ficoml
inc
jmp
sbb
adc
aaa
rolb
stc
xchg
inc
add
push
test
pop
cli
decb
faddl
jmp
mov
or
stos
fwait
in
mov
loope
add
iret
stos
jbe
jp
mov
orl
lahf
push
int
push
cltd
shrl
pushf
in
jp
mov
addr16
movsb
mov
mov
sahf
movaps
cmc
xlat
arpl
adc
shlb
or
jmp
popa
int
lcall
or
lret
push
xchg
push
pop
xchg
hlt
nop
mov
ljmp
gs
fcompl
push
lock
cmp
leave
xchg
idiv
dec
xchg
mov
inc
shr
nop/reserved
in
fldt
mov
mov
cmp
mov
std
nop
ret
xchg
in
repnz
dec
mov
mov
and
push
outsl
out
add
mov
movsl
push
mov
mov
rclb
js
stos
iret
out
sub
mov
jg
jne
int3
cs
pop
ds
cmp
sbb
test
outsl
out
jmp
push
cwtl
sarl
mov
and
enter
mov
lock
jp
jo
rolb
inc
adc
imul
xlat
xor
insl
add
or
sub
mov
mov
inc
cmp
pop
stc
or
sub
flds
imul
pop
xchg
dec
jo
idiv
clc
ss
jmp
adc
cmp
or
rep
in
inc
adc
jae
dec
push
pop
cld
clc
sub
push
nop
mov
xchg
push
in
xchg
ja
mov
add
and
shll
cmp
fdivrs
mov
push
mov
jb
add
popa
roll
test
cmp
aaa
add
push
pop
or
dec
insl
clc
sbb
nop
cmpl
aam
clc
push
dec
in
mov
sahf
xchg
roll
out
cs
push
popf
pop
jge
cmp
lock
dec
xor
mov
ret
cmpsl
cmp
aaa
pop
or
cmp
cmpsl
lret
cmpsb
and
into
icebp
stos
pop
lods
push
and
cld
xchg
hlt
cmpsl
push
imul
cmpsl
gs
cmp
cwtl
repnz
jge
push
aam
scas
jp
push
or
int3
cmp
shlb
fcomi
sar
dec
xor
in
fwait
mov
dec
jbe
sbb
mov
out
cmp
fidivs
int3
andb
xor
test
in
mov
loop
mov
push
jge
les
dec
js
ror
mov
push
sub
stos
and
cli
mov
pop
xchg
mov
pusha
inc
sbb
movsl
add
daa
mov
mov
sub
inc
dec
push
cltd
adc
push
inc
adc
fldl
push
jp
dec
sub
mov
or
cmp
aad
int
andl
les
mov
movsl
mov
mov
sbb
mov
ss
repz
cmp
pop
fstpt
or
fisubrs
cld
sbb
inc
jle
or
repnz
xchg
cld
jg
mov
arpl
mov
push
sub
in
cmp
add
xchg
es
pop
data16
xchg
pop
fldcw
push
pop
cld
insl
add
repnz
fs
dec
imul
mov
lds
repnz
and
push
inc
mov
stc
ds
jge
test
out
inc
pop
xchg
sub
lret
arpl
int
inc
cltd
cmpsl
push
imul
mov
imull
lods
sti
bound
push
int3
cltd
sub
lods
dec
popa
cwtl
cmpsl
addr16
jg
sub
in
imul
imul
xchg
inc
test
fldcw
out
outsl
es
lcall
jae
int3
pop
fistps
cmp
jmp
mov
jo
cmp
out
adc
inc
insb
lods
cmp
and
xor
add
mov
fwait
in
mov
es
dec
xchg
shr
jb
adc
stos
mov
cwtl
in
mov
jns
outsb
sarl
push
int
sarb
pusha
into
push
loopne
jp
fiaddl
mov
mov
fsubr
filds
js
xchg
cltd
test
shr
push
enter
cmpsb
fsubl
sbb
repnz
push
jge,pn
xorb
inc
ss
dec
out
mov
dec
mov
mov
es
int3
adc
xchg
je
sbbb
mov
dec
jae
mov
sub
mov
ljmp
in
sub
push
sub
arpl
pop
pusha
ds
out
sub
add
or
out
jo
xchg
cs
movsb
adcl
xchg
add
cwtl
cli
sahf
mov
push
dec
inc
mov
cmpsl
out
xor
shr
adc
xorb
ret
jmp
call
jle
scas
pusha
mov
xchg
hlt
jl
jp
lcall
and
mov
fs
mov
mov
inc
std
sub
lret
testb
push
ds
imul
inc
insl
or
jno
aaa
and
or
mov
rcrl
gs
scas
sbb
test
xor
push
les
xchg
stos
hlt
fsubrl
negb
lock
filds
jnp
jo
adc
mov
iret
shr
js
mov
push
jae
testb
mull
jecxz
pop
sbb
add
cld
sub
rep
mov
push
add
sub
or
pop
jmp
dec
push
lock
out
mov
push
js
xchg
sub
mov
loopne
or
outsb
gs
mov
cmp
les
xchg
inc
jne
xchg
pop
push
orl
sub
and
pop
fisttps
push
add
mov
xor
mov
or
push
fs
cmp
lcall
pushf
and
daa
dec
in
or
rclb
push
lea
push
cmpsb
mov
dec
and
cmpsl
dec
fdiv
lds
es
fimuls
rclb
out
stos
inc
movzbl
stos
push
out
movb
fs
sub
pop
sub
mov
jmp
dec
xor
sub
fldl
rorb
out
mov
xor
rorl
out
dec
adc
push
xchg
es
insl
cmp
jns
cltd
mov
adc
xchg
sarb
daa
jge
incb
hlt
addb
lods
int
mov
aad
dec
mov
jge
push
dec
xchg
mov
jno
mov
inc
dec
daa
adc
pop
mov
mov
sub
mov
xchg
in
push
lods
mov
adc
stos
and
shrb
mov
roll
ret
call
mov
das
push
sahf
jne
sbb
cmp
adc
pop
outsb
insb
sbb
js
aam
push
imul
pop
push
loopne
lret
into
je
popa
mov
pop
mov
rorb
cmp
popa
sub
push
sbb
xor
add
pop
imul
in
mov
mov
mov
or
xor
fildl
out
xor
inc
jmp
popa
mov
stc
cmpsb
cmp
mov
cmc
add
nop
xor
nop
dec
addps
cmp
xlat
and
xchg
cmc
and
pop
incb
das
push
fisttps
cmp
pop
jecxz
or
add
add
add
rcrb
scas
sbbb
dec
xchg
jl
sub
and
push
xor
aad
inc
add
mov
pop
popf
adc
cli
pop
mov
pop
ss
popf
in
mov
dec
or
push
push
jecxz
je
sub
cld
jae
pop
fs
lds
jle
shr
sbb
pop
push
xor
mov
dec
xor
fwait
popa
jge
repnz
outsl
shll
inc
popf
popfw
pop
or
in
loope
or
stos
pop
movsl
mov
out
pop
mov
jns
js
out
mov
leave
push
pushf
fs
cltd
add
sbb
rclb
inc
pushf
mov
mov
int3
dec
das
mov
mov
pop
lods
pop
jle
mov
shl
test
jmp
pop
mov
adc
push
xor
dec
mov
mov
in
popf
xor
cltd
adc
sti
movsl
sub
and
das
push
movsl
rorl
sub
mov
mov
lods
out
jl
loope
or
mov
ret
xchg
jle
loop
mov
aad
add
fldt
dec
cs
pop
dec
sbb
fadds
cmp
stos
mov
ret
xchg
mov
fisubl
leave
out
clc
data16
pop
pop
xchg
add
orb
popf
test
sub
cmp
sub
flds
fistl
sub
mov
pushl
pushf
mov
adc
inc
sarl
lret
movsb
loop
sbb
scas
mov
xor
loop
fldl
es
ret
xor
fld
loopne
fidivl
stos
jae
aam
push
pushf
icebp
xchg
mov
addb
dec
pop
sbb
lret
push
ret
sbb
add
pop
sbb
mov
adc
xor
mov
lods
cmp
add
add
lret
orb
mov
enter
jecxz
adc
cli
mov
and
mov
mov
mov
sub
lea
inc
shll
scas
and
or
prefetchwt1
rcrb
cmp
push
lds
push
ss
fistps
das
jns
scas
roll
jnp
dec
jmp
add
sbb
add
ja
iret
into
icebp
and
mov
sub
dec
mov
clc
xor
add
cmp
mov
data16
repz
inc
and
fimuls
scas
rorl
sbb
hlt
xor
add
jmp
scas
pushf
and
add
test
test
jp
pop
jp
jmp
cmp
xor
dec
add
sbbb
push
sbb
add
mov
mov
cltd
fnstsw
adc
sub
clc
rcrl
jbe
jbe
push
test
push
and
sbb
adc
aam
add
nop
xchg
inc
repz
pop
mov
jb
outsb
je
subb
inc
cmp
movsl
fdivl
movsb
out
mov
cmpsb
mov
mov
enter
mov
mov
mov
loopne
xlat
lahf
push
repnz
lcall
addl
push
adc
mov
les
enter
ja
fst
inc
push
mov
xchg
mov
sub
insl
pushf
pop
dec
ret
rcrl
call
and
lea
jnp
mov
gs
pop
les
fnsave
jb
sti
imul
pop
jp
cmp
in
add
test
loope
sbb
push
lret
mov
mov
out
faddl
stos
adc
cwtl
sahf
aam
push
xlat
aaa
jae
cs
adc
jne
cwtl
mov
lret
and
testb
idivb
sub
bound
pop
push
cmp
adc
pushf
iret
pop
scas
iret
adc
adc
sub
sbbl
movsl
jp
jae
xchg
repnz
adcl
rorl
add
pop
rorl
adc
push
in
jno
imul
mov
cli
or
xchg
push
fnstsw
add
pop
sbb
sti
mov
out
sbb
pop
gs
and
test
insb
xor
mov
repz
pop
sub
xchg
pop
or
dec
inc
aad
push
insl
in
lret
add
xchg
jecxz
xor
jl
call
dec
test
push
adc
pop
stc
fistpll
out
fbld
ljmp
imul
jne
shlb
mov
shlb
push
rorl
cmpsl
push
mov
jecxz
lret
push
adc
imul
inc
mov
sbb
jmp
jbe
sbb
fsubrp
mov
shrl
cmp
cmp
xor
lods
call
repz
ljmp
sbb
xchg
out
push
out
int3
add
cmovp
fcoml
lods
mov
shll
and
lds
add
fidivs
sbb
daa
lea
mov
push
shll
fists
pop
mov
sub
ffree
fsubr
stos
jecxz
cltd
xchg
out
jne
xchg
add
pop
test
fwait
xchg
and
push
jle
adc
cli
jbe
pop
dec
xor
cmp
push
sbb
outsb
imul
adc
add
jl
jo
xchg
mov
mov
pusha
jle
mov
std
mov
xor
xchg
push
sbb
cli
loop
push
dec
lock
sti
clc
iret
mov
rorb
icebp
hlt
fdivs
push
pop
push
loopne
iret
push
jo
inc
sbb
inc
inc
fimull
fiadds
mov
movsl
pop
pop
pop
sub
subb
sub
mov
and
stos
mov
fsubrs
xchg
inc
mov
cmp
sbbb
and
and
xchg
sbb
scas
andl
mov
cltd
lcall
ja
add
mov
sbbl
and
nop
fnstsw
and
adc
out
push
mov
call
repz
loopne
cmp
lds
aam
sub
dec
stc
mov
dec
sbb
stos
adc
inc
cmp
ss
lcall
mov
cmp
mov
fnstcw
scas
dec
in
sti
ret
movsl
push
xchg
fidivl
push
add
inc
sub
fs
pop
mov
add
es
pop
outsl
fsubrs
cld
pop
addl
mov
sub
sub
and
ret
jl
sub
jl
sbb
lcall
cmpsb
dec
out
jne
test
xchg
xchg
aaa
mov
jno,pt
xchg
mov
cmp
mov
int3
rolb
insb
jl
mov
outsb
xchg
jl
lret
mov
rcrb
dec
jno
mov
mov
shl
mov
in
lds
jae
push
jecxz
jbe
mov
loope
test
lahf
stos
add
ret
sti
lods
xchg
in
inc
cmp
ljmp
or
cmp
popl
adc
pop
stc
psubq
pop
data16
adc
std
sahf
imul
dec
adc
xchg
inc
add
lret
in
inc
xor
xchg
jge
fwait
sub
inc
test
insl
add
data16
hlt
pop
mov
aaa
cmpsl
xor
into
inc
push
sub
popf
xor
call
inc
sti
sbb
add
cwtl
inc
test
leave
leave
repnz
jne
hlt
push
pop
js
push
xor
cld
push
xor
fbld
dec
fistpll
pop
push
mov
icebp
outsl
stos
nop
fadds
into
ficoms
or
push
das
mov
inc
lea
xchg
mov
dec
xchg
lret
mov
cmp
inc
adc
inc
pushf
popf
mov
jne
xchg
ljmp
cmc
jmp
es
pop
lahf
push
loop
add
dec
jae
mov
pop
test
add
loop
out
push
addb
adc
adc
push
mov
sti
and
cmp
push
xchg
cmpsl
in
lret
in
jns
push
ja
mov
inc
clc
xor
std
pop
fidivrl
sbb
icebp
or
jo
testb
pop
cmp
pop
inc
ljmp
sarb
pop
scas
fst
pop
jp
sbb
mov
mov
push
mov
cmp
or
lock
ret
jo
out
das
repz
inc
lea
pop
test
ja
repz
mov
xlat
pop
cmp
loopne
sbb
cltd
or
dec
es
mov
xor
lods
xor
mov
test
cmpb
mov
test
pop
cmp
and
rcll
rcll
add
and
subl
inc
push
loopne
cld
lds
and
ja
xchg
jmp
dec
mov
and
push
add
cs
mov
inc
mov
push
push
jbe
iret
icebp
in
repz
adc
adc
loope
and
push
enter
dec
scas
clc
popf
clc
sub
jo
cmpsl
and
xchg
pop
sub
lods
dec
mov
dec
pop
xlat
movsl
mov
mov
xchg
call
out
fiadds
xchg
xor
add
fadd
mov
and
out
pop
xchg
mov
cltd
jo
pop
mov
inc
jmp
ficompl
sub
shll
fistpll
and
add
lret
repnz
mov
pop
cwtl
stc
cmp
mov
pop
add
and
scas
add
xor
xchg
into
ja
jge
mov
push
aas
arpl
xor
lret
cld
sbb
and
sahf
push
loope
and
leave
test
and
rolb
xchg
sti
inc
fisubs
stc
fldenv
leave
addl
dec
xchg
inc
dec
std
iret
push
das
orl
jnp
fbstp
sub
std
and
cmpb
das
inc
xor
mov
sti
xchg
ljmp
mov
dec
pop
add
sbb
out
mov
nop
cmovo
or
gs
inc
xchg
sarb
lea
jbe
jo
into
jle
shll
popa
xchg
jg
xchg
cmpsb
and
inc
jmp
test
dec
xchg
sbb
mov
adcl
cmp
sti
lret
jno
pop
add
imulb
sbb
dec
ret
ds
pop
jb
sbb
cmp
addr16
add
push
cmp
inc
dec
std
lcall
and
stos
jnp
push
ljmp
mov
lock
stc
lock
xor
push
dec
mov
sti
sub
pop
xor
loopne
pop
xor
rcrb
cmpsl
push
jmp
cmp
insl
fstp
fdivr
jne
lods
outsl
lock
mov
out
inc
push
mov
push
daa
aam
pop
jb
push
mov
aaa
sti
mov
pop
enter
adc
nop
movsl
mov
js
cld
xchg
dec
adc
inc
int
push
fistl
lds
mov
imul
fdivrs
inc
or
mov
pushf
insb
jecxz
pop
sahf
lcall
add
ss
mov
insb
in
xchg
inc
into
mov
xor
lret
insl
cwtl
shl
sub
mov
lds
dec
or
mov
fisttps
out
fildl
dec
adc
pop
in
pop
scas
mov
dec
pop
or
cwtl
inc
clc
call
fimuls
int3
jmp
fstps
add
out
js
idiv
pop
out
push
push
and
and
mov
repz
fwait
sub
and
sbb
sbb
jmp
inc
jg
test
cmpsl
pop
fldt
sahf
arpl
push
jp
jb
cmp
pushf
xor
sbb
sbb
or
push
lods
shr
pusha
sbb
jg
scas
mov
mov
cmc
xchg
jmp
and
rcl
scas
imul
cs
xchg
in
lcall
pop
xchg
mov
ret
pop
push
or
sbb
jbe
mov
nop
icebp
cmp
xorl
arpl
cwtl
pop
iret
xchg
inc
test
or
pop
inc
push
adc
dec
mov
dec
or
mov
inc
into
mov
dec
jae
lcall
push
inc
xor
xchg
jle
xor
js
mov
xor
scas
xchg
loopne
vmovdqu
leave
inc
std
xor
scas
xchg
loope
or
jb
and
fwait
mov
mov
and
adc
scas
sti
xor
leave
ret
adc
subl
adc
insl
xchg
mov
fdivrs
aaa
call
cmp
mov
add
inc
xor
shlb
xor
add
stc
xchg
ds
sub
sahf
inc
jns
cmc
fidivrl
out
add
and
hlt
sbb
push
insl
cltd
push
arpl
cmp
fistl
adc
or
je
inc
nop
jno
pop
xor
cwtl
sbb
xor
lods
scas
push
cmp
mov
mov
jo
aad
or
xchg
pop
fs
mov
daa
int
jmp
xchg
sti
pop
fnstenv
pop
xchg
into
in
div
scas
jl
pop
mov
lahf
and
lcall
adc
push
mov
popa
daa
sahf
lock
ja
scas
push
je
cmp
repz
imulb
mov
and
jmp
add
test
mov
jg
push
rcll
mov
insb
ds
in
xchg
movsl
pop
dec
imul
push
xor
mov
cld
pop
pop
or
xchg
out
arpl
jecxz
jge
inc
mov
js
out
aam
lods
push
cmpsl
out
sbb
pop
notl
xor
cmpsl
and
int
inc
mov
fsubl
scas
in
insb
loope
hlt
inc
jmp
ret
out
je
add
adc
ret
mov
jecxz
stc
insl
fidivl
imull
dec
outsb
orb
sahf
lahf
pop
mov
cwtl
pop
adc
imul
cmp
aam
adc
cld
sbb
sbb
je
out
aad
icebp
das
std
sbb
dec
jg
loopne
jne
scas
push
aam
dec
lds
sahf
icebp
enter
int3
dec
inc
xor
inc
imul
iret
iret
adc
in
mov
mov
test
je
sub
cmp
cwtl
out
fsub
jg
jecxz
fists
cmpsl
mov
xchg
test
add
xchg
dec
out
bound
pop
mov
clc
aad
adc
push
lret
stc
mov
test
jg
push
sbb
shrb
xor
jne
dec
jecxz
mull
push
mov
cmp
mov
xor
push
inc
call
jb
mov
adc
push
loopne
pop
xor
shrb
popa
and
ss
cld
outsb
sbb
adc
xor
xchg
bnd
add
cmp
repz
dec
pmulhuw
jne
insb
add
mov
cmpsb
sbb
notw
fildl
inc
inc
jo
ds
jl
xchg
pop
loop
mov
int3
aaa
sahf
inc
ljmp
icebp
and
pop
mov
cmc
les
mov
or
cmp
xor
pop
push
mov
and
jns
jo
out
push
xchg
inc
bound
sub
lahf
mov
subl
shlb
or
fbstp
setl
mov
icebp
out
xchg
leave
sbb
ret
mov
mov
frstor
cmpsl
mov
mov
or
lgs
jmp
mov
push
je
je
cmp
testl
aas
aaa
xchg
lods
ret
sub
les
dec
cmc
mov
inc
imul
je
adc
add
mov
aad
andl
cwtl
addr16
lods
cmc
xor
inc
insl
loop
leave
or
add
or
cmp
mov
sbb
rclb
xchg
dec
jle
dec
out
push
jbe
push
dec
scas
loop
or
jo
mov
repz
iret
cmp
daa
sbb
or
cmp
mov
pop
scas
jecxz
mov
and
cwtl
test
popa
fcmovnbe
nop
lods
xor
adc
inc
and
adc
shrb
cwtl
pusha
add
ret
mov
fdivrs
scas
jmp
mov
mov
pop
fcompp
dec
jg
in
xor
fcomp
xor
mov
jae
xchg
mov
xlat
push
enter
add
es
xor
cmp
push
ss
cvtps2pi
dec
mov
in
push
xchg
negb
mov
mov
fst
movsb
enter
loope
sti
xor
adc
ljmp
nop
stc
xchg
mov
dec
pushf
jo
adcb
aam
in
mov
int3
ret
jns
lods
in
push
mov
test
sub
xchg
xor
mov
push
neg
push
cmp
sbb
out
add
incl
mov
scas
leave
pand
add
or
dec
fldcw
xlat
test
and
out
push
mov
inc
lea
movsb
ud0
inc
xor
mov
fs
imul
mov
pop
ljmp
mov
push
jmp
sbb
stc
rcrl
or
ja
loop
adc
std
adc
cmp
xchg
adc
cld
scas
jle
push
jo
ljmp
mov
jmp
in
add
inc
int
push
inc
sub
jp
pusha
cs
iret
lret
mov
hlt
and
jae
mov
dec
push
repz
repz
jb
fdivr
mov
rorb
pushf
aad
das
in
mov
xor
in
scas
jmp
ret
icebp
push
sub
lret
sbb
mov
mov
cmp
jg
mov
testl
arpl
xor
sbb
push
mov
loope
test
or
scas
dec
stos
popf
imul
jae
shlb
pop
hlt
lcall
in
or
pop
fsubl
lret
sahf
aam
xchg
pop
push
or
add
les
sub
mov
xor
dec
addr16
mov
sbb
in
popf
adc
jae
dec
jne
fldl
stos
andl
push
mov
out
jp
das
xchg
fisttpl
dec
and
sar
sub
pushf
insb
cmp
je
leave
test
push
test
and
int
ss
stos
mov
popf
push
jne
inc
arpl
jbe
xor
pop
movsl
sub
lret
jle
fidivrs
lock
out
xchg
pop
add
dec
hlt
pop
xor
cmp
ret
sbb
divl
or
add
mov
aas
mov
mov
out
mov
dec
xchg
jae
data16
mov
mov
jecxz
cld
int3
mov
dec
mov
loop
pop
sub
add
xchg
es
pop
sub
push
lods
mov
test
push
adc
icebp
js
xchg
add
sub
cwtl
out
lods
leave
les
call
pop
or
shll
xchg
inc
mov
out
jo
xor
ljmp
fstpl
stc
orb
jg
testb
test
cli
xor
repz
pop
lret
mov
jbe
mov
loope
and
or
jl
xlat
inc
mov
movsl
sbb
jb
xor
not
sub
push
aam
in
in
inc
call
or
jecxz
ja
mov
cmp
in
push
xor
insl
adc
outsb
aaa
adc
sbb
sub
lea
ljmp
repz
jns
ss
repz
sbb
out
adc
inc
dec
orb
sbb
popf
in
inc
sub
xchg
les
sbb
cmpsw
push
cmc
sub
pop
mov
cmp
pop
or
cmp
adc
dec
aad
loope
loope
stc
mov
sub
cmp
mov
stc
sti
aad
std
add
push
lea
push
or
add
mov
lds
push
pop
loopne
int
ja
mov
pusha
pop
sti
ds
inc
insb
inc
scas
je
ret
xchg
jecxz
xor
pop
orl
test
pop
cld
sub
pop
popf
adc
in
movsl
xchg
xchg
sbb
adc
xchg
sarb
nop
cmp
lock
sub
dec
pop
gs
or
rclb
inc
xor
mov
sbb
mov
or
mov
push
decl
cmpsl
inc
cltd
jbe
push
or
pusha
stos
push
xor
loop
jle
and
in
loope
mov
rol
mov
pop
mov
in
sub
sub
push
pop
sbb
ret
jg
add
sbb
mov
push
jmp
xor
adc
aas
mov
std
inc
sub
sbb
dec
pop
clc
inc
imul
dec
mov
mov
or
ret
inc
or
std
into
adc
push
jns
push
cmp
xor
jbe
loop
into
ljmp
fidivrs
or
mov
add
or
lea
sbb
push
xchg
sbb
adc
lds
sbb
cs
rol
adc
cmp
mov
xchg
mov
sub
cmpsb
push
xchg
clc
or
push
pop
aam
stc
pop
xlat
cli
mov
dec
lret
js
cltd
test
addr16
in
jne
and
cmp
leave
ljmp
icebp
outsl
gs
xchg
movsb
and
inc
mov
into
cmp
les
pop
mov
jae
in
push
mov
and
pop
jb
mov
xor
sub
push
call
out
divl
nop
data16
aas
push
insl
aaa
push
aaa
mov
in
push
lea
in
jge
loope
jne
push
mov
insb
out
sbb
adc
scas
dec
pop
loope
or
cmpsl
test
cmp
jmp
and
scas
pop
ss
popa
cmc
and
xchg
inc
mov
add
fidivs
xor
mov
call
jbe
and
rol
xor
pusha
mov
sbb
adc
inc
mov
loopne
int3
jne
gs
popf
pause
xor
repz
jge
aaa
mov
fwait
sahf
cmp
mov
sbb
jecxz
out
ds
into
add
fcomi
cltd
outsl
and
and
stos
jae
js
jle
jge
mov
repnz
sub
mov
and
inc
jp
mov
adc
aad
sahf
mull
mov
mul
rol
inc
repnz
jecxz
xorl
mov
lret
call
out
xchg
or
mov
jae
movsb
lods
sbb
cltd
aas
and
sub
or
into
repnz
mov
and
jb
mov
push
ljmp
out
add
shl
xchg
mov
mov
in
mov
mov
mov
mov
push
iret
sub
popa
mov
je
movsl
lea
jno
icebp
je
ficoml
jno
and
push
fs
fnstenv
inc
cltd
ror
push
xchg
push
out
dec
es
xor
jae
pop
clc
and
push
inc
and
mov
dec
mov
dec
add
inc
js
je
jnp
out
bound
push
xchg
push
gs
popf
adc
push
sbb
sub
call
out
push
cs
sbb
imul
fdivs
mov
cmp
add
sub
cs
or
xchg
fsubl
mov
xor
lds
push
mov
xor
stos
add
cmc
or
xor
xchg
fmull
xor
inc
sub
mov
cmp
add
xor
or
loop
shll
cmp
or
xchg
imul
jg
arpl
adc
xchg
scas
or
inc
lret
fs
out
push
lock
out
shrb
push
lods
lock
push
sub
adc
in
fstpl
add
sbb
and
xchg
push
insb
mov
imul
lret
xchg
mov
in
inc
mov
out
imul
xchg
xchg
cmp
adc
jmp
xchg
xor
icebp
add
mov
fwait
pop
mov
mov
mov
fldcw
fidivs
rorb
out
js
aas
cwtl
and
mov
sahf
mov
out
or
imul
iret
out
xchg
icebp
out
sbbl
and
mov
jle
sub
inc
add
std
cli
jmp
iret
call
movsb
dec
loopne
aad
mov
and
mov
ja
insb
sub
xor
out
mov
test
xchg
pop
stos
divb
lahf
ficoml
lret
push
mov
jp
scas
xor
jg
dec
and
cmp
scas
rolb
push
ret
sub
and
dec
cs
orl
dec
loop
jg
mov
jae
hlt
sbb
dec
outsl
push
stos
sbb
adc
lret
mov
jl
dec
pop
ds
frstor
roll
enter
test
jmp
mov
outsb
mov
arpl
jp
clc
mov
or
lea
pop
mov
aaa
pop
jno
loope
push
sti
jbe
sub
push
outsb
cs
pop
jbe
out
sti
loope
test
jo
fistpll
outsl
mov
lret
lock
or
ja
dec
inc
add
mov
xchg
push
or
jle
xchg
xchg
test
jae
and
in
push
ja
xchg
push
leave
aas
mov
xor
xor
aad
orb
inc
mov
dec
ret
jae
cs
call
mov
rorl
pop
sti
inc
pop
lcall
xchg
js
insb
sbb
cwtl
sub
fcompl
inc
xchg
cmp
shl
cmp
dec
cmovb
int
test
mov
mov
push
inc
jbe
daa
and
mov
loope
adc
js
cmp
aam
mov
jnp
sarb
dec
xchg
mov
out
aaa
inc
cwtl
andl
dec
xchg
mov
popf
push
sub
aaa
sbb
push
sbb
sub
roll
imul
ss
out
xor
mov
leave
addr16
loop
scas
mov
jmp
stos
out
call
mov
mov
jl
jo
sub
mov
push
lret
out
xor
push
aaa
push
ficoml
sbb
bound
inc
pop
cwtl
xor
cmp
stos
jp
pusha
jae
sbb
mov
xchg
ja
leave
xchg
sub
sbb
roll
inc
outsb
insb
mov
push
movsl
and
lcall
in
mov
xchg
sti
repnz
pop
pop
scas
cmp
aad
in
mov
dec
sbbb
out
shl
mov
jb
stos
into
js
jp
adc
jle
les
sbb
and
or
ret
dec
and
ljmp
dec
adc
mov
xorb
mov
mov
or
into
sbb
es
andl
xchg
xor
xchg
dec
in
xor
pop
jnp
dec
or
jbe
aas
or
push
pop
xor
push
cmp
lret
mov
add
aas
ss
xchg
mov
das
je
cmpsl
out
lahf
mov
xchg
dec
cwtd
clc
cs
stos
adc
push
inc
push
aaa
aam
outsb
jo
push
adc
mov
fstps
scas
jno
inc
clc
jns
fldenv
jle
push
lret
xor
negl
imul
or
jecxz
or
or
push
testb
jp
jb
dec
jmp
test
or
jge
adc
sbb
push
sahf
cmp
out
xor
popa
bound
jae
sbb
imul
xchg
cmc
in
inc
and
pop
jb
xor
sti
and
jno
ficoms
and
inc
mov
ss
lock
ret
fnsave
aad
mov
jnp
xor
pop
sarb
push
xor
leave
in
cmp
testb
push
adc
mov
mov
jo
xchg
int3
dec
and
pop
cmpsb
jo
xor
xor
xor
pop
jns
loope
xchg
lret
lret
push
jbe
fistps
adc
cmpsl
mov
push
repz
fildl
addl
imul
adc
xor
dec
fldcw
cmp
arpl
mov
push
repnz
out
test
aaa
js
testb
lret
shl
and
orl
rorl
sbb
aad
cmpl
sbb
fs
add
sbbb
repnz
dec
iret
loope
pusha
xchg
inc
call
in
pusha
sub
jo
popf
cmp
push
push
orb
fwait
add
out
add
add
stos
aaa
pop
lds
sarl
mov
jne
fistpll
xchg
ss
lea
cltd
add
mov
enter
xor
adc
scas
shrl
jo
jne
clc
dec
aad
adc
jg
pop
out
ret
pop
ret
aam
fwait
mov
pop
fcomps
in
mov
mov
adc
jbe
cli
mov
pop
jp
lock
out
shrl
pushf
sub
adc
push
ss
rcrl
js
pop
adc
xchg
inc
xchg
lock
jmp
cmp
je
mov
cld
inc
ficomps
lods
jecxz
add
jmp
dec
pop
pop
shrl
xor
int
xor
loop
jne
jo
int
mov
cmp
or
cli
rclb
sub
aas
bound
pop
lret
fwait
aam
testb
xor
out
add
ss
push
popf
sbb
adc
ficomps
push
movsl
lock
pop
pop
icebp
or
cmp
push
push
push
mov
rcll
std
xchg
jnp
into
inc
and
fdivr
adc
inc
and
mov
scas
imul
shlb
out
sbb
xchg
inc
jmp
fstl
loop
mov
mov
test
cltd
jp
and
inc
aaa
std
lret
mov
hlt
pushf
clc
dec
pushf
push
jns
push
bound
cmpsl
mov
jbe
add
jp
rcrl
or
sub
lahf
scas
mov
pop
jle
insb
aaa
es
lods
cli
or
jg
icebp
add
test
push
out
bound
xchg
push
das
dec
jbe
out
insb
mov
scas
cmp
stos
mov
aas
xchg
pop
jne
or
mov
jne
ljmp
mov
adc
mov
les
mov
cmpsb
arpl
mov
dec
pop
xor
lea
xor
mov
in
ss
stc
fwait
out
hlt
cmpl
push
mov
popf
add
jecxz
or
cmp
pop
dec
add
bound
stc
cli
test
or
mov
mov
arpl
mov
pop
movsl
mov
xacquire
sbb
sub
test
test
popf
pusha
and
mov
mov
push
xor
push
les
jmp
push
pop
out
xchg
dec
dec
enter
xor
jne
mov
jp
hlt
sbb
lcall
bnd
fdivrl
ds
jg
mov
or
mov
mov
xchg
addr16
out
fistpl
jno
dec
mov
jecxz
orl
and
inc
int3
andl
xor
xchg
xchg
mov
out
push
or
or
scas
fwait
cmp
adc
fsubs
aad
es
push
rcl
inc
mov
xor
lcall
out
pop
pushf
lods
mov
ljmp
dec
adc
sub
sub
in
mov
in
lcall
dec
pop
in
outsl
dec
bound
mov
rcr
cltd
mov
sbb
into
test
or
fwait
das
insl
insb
sub
mov
out
mov
and
dec
dec
and
addb
aam
add
daa
xchg
jle
es
inc
icebp
dec
inc
mov
ret
push
xor
sarl
gs
imul
mov
xchg
push
xor
pop
add
xchg
adc
pop
aas
xchg
push
xchg
jne
loop
mov
pop
loopne
repz
outsb
adc
dec
fldenv
or
adc
add
shrb
add
movsl
popl
pop
mov
mov
popa
mov
popa
sub
lret
rol
sub
pop
jmp
or
jae
js
mov
pop
sbb
dec
jg
mov
lahf
xor
pop
and
out
or
pusha
pop
jb
pushf
call
jmp
dec
test
sbb
mov
lret
xor
rolb
in
push
jbe
mov
cmp
decl
jge
aam
pusha
adc
push
xor
dec
mov
xor
mov
push
xchg
push
fildll
into
pop
rcl
jae
into
stos
mov
rcrl
add
out
add
dec
cmp
addr16
outsb
adc
sub
in
push
add
das
push
mov
jl
bound
bound
pop
cmpsl
mov
dec
in
aam
pop
je
ja
mov
or
adc
hlt
pop
inc
test
inc
aad
add
cmp
add
je
mov
add
outsb
aas
cmp
xor
jno
mov
ret
jbe
ret
push
out
mov
push
imul
jne
loope
aam
jb
mov
push
mov
ret
sbb
sub
orb
mov
fcmovnbe
mov
mov
mov
sti
fstl
nop
insb
idivl
repnz
out
cmp
nop
cmc
call
xchg
pop
mov
je
dec
test
sar
scas
mov
mov
in
mov
sahf
jnp
bound
push
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
adc
cmp
jp
pop
jp
in
inc
add
adc
daa
push
add
adc
dec
mov
pop
sub
ljmp
mov
test
xchg
xor
mov
clc
and
xchg
imull
dec
cmp
outsl
mov
rcrl
gs
xchg
pusha
outsb
scas
adc
imul
add
xorb
inc
into
mov
or
sbb
xor
xchg
aas
std
int
lahf
sbbb
pop
jmp
mov
insl
jmp
inc
mov
cmp
cwtl
mov
xchg
push
mov
lds
lahf
add
and
and
fdiv
push
mov
or
pop
jp
or
mov
sub
cmp
jb
ljmp
jae
mov
xchg
outsb
adc
dec
dec
daa
and
jecxz
xchg
sahf
aaa
test
mov
sub
push
insb
sbb
popf
test
imul
mov
mov
cmp
cmpsl
scas
xorl
es
cltd
xchg
lcall
outsl
push
cmp
and
call
arpl
or
push
dec
push
dec
cmp
pop
fdivp
jecxz
ja
jns
mov
loopne
jecxz
push
call
jb
mov
arpl
lods
and
rcll
lods
ret
fbstp
ffree
es
fucomip
cmp
mov
push
cmp
ss
insb
ss
ret
inc
xchg
stc
movsl
popa
pop
sbb
lret
xchg
fimull
inc
and
add
shrl
ficompl
imul
in
popa
push
pusha
add
in
xchg
cmp
adc
addl
and
pop
sub
mov
sub
sbb
xchg
sbb
movsl
mov
cmp
push
mov
iret
ficoml
ja
inc
lock
cltd
mov
mov
push
lret
mov
stos
inc
sub
adc
cmpsl
lret
mov
inc
repz
adc
cmpsl
pop
bound
lea
pop
pop
sub
push
inc
int
mov
push
xchg
push
push
lret
add
je
outsl
sub
push
pop
pop
xor
enter
fisttpl
les
repnz
dec
addb
pop
inc
mov
add
xchg
es
dec
and
adc
dec
sbb
sbb
cwtl
movsl
lds
cwtl
mov
sub
xchg
mov
insb
inc
sub
lcall
and
push
cmc
mov
xor
sbb
or
popa
pop
and
xchg
data16
jae
paddusw
jmp
lods
inc
xchg
sbb
and
dec
sub
out
xchg
inc
mov
lret
mov
ret
fisttpl
and
subl
or
dec
mov
into
sbb
jle
mov
jl
sarl
ljmp
repnz
cltd
xor
pop
mov
cmpsb
fimuls
inc
jo
fisubl
pop
pop
scas
cmp
or
mov
add
adc
xor
arpl
lahf
push
dec
daa
push
xchg
std
sbb
jnp
fidivl
mov
xchg
aad
jns
inc
mov
inc
mov
testb
mov
cmp
pushf
hlt
xchg
push
loopne
sub
mov
cwtl
test
mov
jl
loopne
fcompl
mov
adc
lcall
pop
lcall
stc
xchg
into
cld
subl
stos
xchg
aaa
shrl
aad
nop
or
mov
fdivrp
mov
mov
mov
je
pop
es
cmp
lret
xchg
mov
test
pop
fnstsw
dec
inc
inc
jg
and
mov
aad
cmpb
lock
nop
filds
in
mov
mov
pop
pusha
sbb
cmp
xor
ja
in
xchg
ja
test
mov
shrb
jl
pop
pop
cmpsl
pop
addr16
inc
mov
xchg
sbb
pop
mov
jne
call
pop
or
divb
je
ds
mov
push
lods
test
cwtl
xchg
icebp
out
shl
es
jmp
mov
push
adc
dec
test
fwait
jnp
imul
push
mov
scas
add
jmp
sbb
push
cmp
mov
arpl
jns
dec
xchg
push
mov
xchg
pop
mov
inc
add
mov
mov
in
pop
push
inc
std
test
imul
icebp
xor
ds
inc
jcxz
xchg
sahf
out
inc
pop
push
in
cmp
inc
lcall
mov
mov
shlb
dec
push
dec
cwtl
lods
add
adc
xchg
xchg
jg
sub
rolb
loope
ret
xchg
cmp
mov
cs
leave
inc
repnz
xchg
push
pop
adc
mov
icebp
in
cmp
in
pop
adc
push
in
jae
stos
xor
cmpsb
jmp
sub
aas
or
mov
xchg
imul
mov
movsl
lea
push
movsb
mov
insb
push
or
mov
push
mov
ret
sbb
outsb
not
lods
imul
jne
sbb
test
push
sub
cmp
mov
into
mov
int
mov
notl
loope
jnp
movsb
stos
cmpsl
lcall
cmpsb
int3
pop
jmp
mov
das
mov
stos
push
sub
mov
and
test
inc
jp
mov
pop
rcrl
movsb
dec
mov
jge
imul
cmp
in
xor
or
ficoms
sub
adc
pop
aaa
mov
insl
cmp
push
or
movsb
and
mov
icebp
inc
xor
out
out
push
jnp
out
hlt
pop
out
bound
mov
sub
pop
add
xlat
jbe
sub
jmp
and
ss
or
xor
jmp
adc
add
jnp,pt
adc
mov
test
mull
lret
cs
pop
pop
dec
hlt
popa
xor
mov
std
mov
lea
popl
imul
pop
or
push
mov
push
arpl
divl
adc
clc
stos
lahf
fimull
add
push
sbb
into
out
mov
hlt
mov
imul
cmpsb
sbb
repz
xchg
repz
xor
jmp
sub
push
mov
test
adc
mov
rorb
mov
not
inc
bound
mov
add
rolb
shl
negl
enter
dec
pop
xchg
mov
cmp
ljmp
sub
push
pop
inc
push
stc
ds
dec
call
cmc
jbe
ds
mov
aas
sub
pop
shl
inc
inc
xor
mov
out
or
das
scas
lret
loop
ss
pop
cmp
jp
push
inc
lret
int3
das
sbb
dec
cmpl
sbb
jae
ficompl
push
mov
aas
mov
mov
and
testb
pop
rcrl
push
push
lcall
insb
and
pop
jmp
fs
mov
xor
test
sbb
pop
push
mov
xchg
dec
js
ret
fcoml
add
in
push
xchg
and
add
es
enter
ror
stos
mov
in
xlat
jmp
mov
mov
add
jg
shrb
in
das
mov
adc
arpl
push
adc
dec
and
leave
adc
mov
sbb
xor
pop
add
jmp
dec
fdivr
pop
sub
ds
lock
jns
mov
js
loopne
jp
jb
call
or
sub
mov
add
sub
scas
adc
cli
fcmovnb
jo
ds
inc
rol
xor
mov
add
sbb
xor
pop
movsl
add
mov
and
pop
mov
inc
fadd
iret
scas
adc
sub
aam
mov
int3
mov
rcrb
xor
in
sbb
pop
mov
lahf
movsl
pop
sarl
sub
mov
insb
xchg
mov
fwait
add
jl
xchg
movsl
sub
aaa
push
xchg
and
cmpsb
mov
orb
pop
xchg
repz
mov
cmp
mov
mov
pop
fsubrl
movsl
pushf
cmp
jge
andl
mov
iret
mov
daa
test
mov
hlt
lcall
out
push
mov
push
push
pop
fbstp
pop
xchg
shrb
add
xor
sub
cmp
aam
ds
fnstenv
cmp
inc
test
nop
mov
sub
cmc
int
lods
in
and
sub
mov
imul
out
lret
xchg
lret
scas
pop
incl
pop
jbe
mov
mov
mov
add
lds
add
nop
mov
fsubrs
add
sub
inc
mov
popf
mov
bnd
cmp
jnp
aaa
jb
dec
inc
lea
adc
mov
jbe
sub
xor
jne
lret
inc
std
sqrtps
or
jns
leave
dec
push
or
cmp
out
mov
movsl
xchg
and
test
pop
inc
pop
jno
mov
adc
nop
repnz
icebp
push
dec
xorl
dec
inc
sbb
and
jae
in
fstpt
push
jmp
pop
push
pusha
fnclex
adc
nop
push
fs
cli
xchg
pop
out
lea
push
sub
cmp
stc
sub
pop
cmpsl
pop
mov
sti
sbb
notb
std
jecxz,pn
cmp
jmp
pop
xchg
lahf
cmp
loopne
aas
or
xchg
push
je
xchg
dec
dec
push
mov
dec
mov
hlt
jnp
jmp
out
add
push
ja
and
xor
cmp
and
xchg
pop
jo
iret
jmp
movsl
sbb
arpl
add
sarb
bound
mov
sbb
pop
enter
mov
jo
xchg
adc
fisttps
dec
mov
dec
cmp
cmp
push
cmpsb
jb
jnp
push
pop
bound
pop
xor
adc
sub
mov
lods
cmp
rcrl
xchg
orb
mov
repnz
rcll
jns
pop
out
mov
push
mov
dec
jp
pop
adc
xchg
or
imul
push
xor
push
push
test
jnp
jge
jmp
xchg
aas
cmp
dec
je
adc
xchg
and
xchg
imul
clc
dec
pusha
jp
sar
call
outsl
into
lods
popa
mov
adc
in
push
xchg
add
pop
pushf
xchg
ds
mov
enter
mov
dec
arpl
fstp
pusha
mov
inc
divb
add
cli
imul
or
add
push
xchg
adcb
clc
aad
xchg
ror
fnsave
and
jne
sbbb
and
imulb
jo
test
std
test
pop
cmpsb
outsb
or
loope
mov
int
pop
push
mov
mov
add
movsb
in
lea
sbb
scas
rclb
ret
loope
and
mov
mov
jb
adc
pop
lret
and
xor
nop
cli
push
adc
je
add
fcmovbe
lods
mov
sti
neg
push
push
adc
add
mov
jns
push
cmp
out
jle
cmp
ljmp
cmp
and
ficomps
dec
xor
mov
xchg
add
dec
jmp
push
and
dec
dec
pop
stos
cmp
leave
scas
xor
mov
es
mov
mov
sub
push
or
sahf
out
call
mov
cmc
popf
inc
inc
mov
push
test
sub
inc
ss
roll
cmp
mov
push
sub
xchg
or
dec
inc
push
fidivl
pop
mov
inc
mov
movsb
in
mov
adc
lods
and
cmp
xchg
mov
cs
cltd
in
push
ds
mov
pusha
mov
fists
jbe
xchg
dec
das
pop
incl
pop
push
xor
int3
jmp
push
and
les
mov
mov
andl
les
sub
aaa
sarl
dec
mov
inc
pop
add
mov
add
pushf
adc
imul
jl
test
cli
cmp
pop
sub
lret
fsubrl
pop
int3
pop
fstl
sbb
and
insb
pop
cmp
in
inc
sbb
bnd
stos
mov
cmp
xor
push
int
or
inc
push
faddl
jecxz
and
aam
ss
inc
out
negl
and
jnp
xchg
xor
jle
inc
rcrl
sbb
imul
push
cmp
mov
lcall
fadd
ret
push
es
inc
aas
aam
mov
aad
and
popf
or
mov
mov
mov
lret
lahf
jp
lock
ss
sbb
mov
xor
mov
push
fs
bound
dec
ret
std
jnp
repnz
fisttpl
cmp
push
cmp
dec
xchg
mov
pop
dec
ficompl
adc
mov
inc
and
cmp
adc
subb
xlat
movsb
fwait
push
mov
sub
jbe
dec
cmpsl
leave
pop
xchg
xchg
dec
enter
movd
xorl
sub
adc
lret
cmpb
arpl
out
pop
stc
jmp
mov
xlat
lret
sbb
and
add
gs
mov
jne
add
ljmp
nop
das
ja
and
push
pop
loope
movsl
cmp
jmp
stc
clc
inc
mov
pop
insl
mov
inc
xorb
scas
loopne
movsb
add
xchg
adc
or
jnp
inc
in
div
xor
push
add
jo
dec
jp
jp
inc
adc
orb
outsb
cltd
xchg
inc
leave
popf
xor
outsl
pop
mov
out
xchg
ficoms
cmp
add
xlat
xor
jl
jne
jb
fnstsw
xlat
xor
add
dec
stos
mov
jle
lcall
dec
je
pop
jge
mov
dec
scas
pop
shr
cs
shl
jne
pop
lcall
cmc
repnz
outsl
pop
pop
xchg
pop
rcrl
addr16
repnz
lea
mov
inc
adc
lcall
dec
rcrb
inc
jge
jecxz
pop
adcl
rcr
addr16
cld
imul
pop
push
pop
push
push
negb
popa
aad
pop
roll
fs
sub
push
mov
inc
sub
lods
les
iret
cmc
inc
lea
and
divb
mull
inc
mov
clc
xchg
sub
lds
push
mov
movsb
test
inc
outsb
jge
mov
jae
jnp
call
pop
fists
pop
inc
test
popa
in
loope
xor
cmp
mov
lock
pop
pop
mov
nop
xchg
cltd
xchg
xchg
punpckhwd
pop
in
jbe
rol
mov
xor
sub
xchg
lea
ret
sti
ds
jne
test
and
bnd
jne
push
dec
insb
add
mov
ljmp
push
mov
fidivs
lds
in
fldl
arpl
cmpb
sub
pop
dec
enter
test
divb
out
push
out
ficoml
ds
lret
ss
clc
mov
pop
adc
mov
adc
adc
mov
lahf
mov
ljmp
mov
pop
ds
cmpl
pop
out
mov
sbb
pop
xor
cmp
mov
icebp
push
cmc
cmpb
out
adc
stos
add
sub
sarl
loopne
scas
pusha
sbb
stos
insb
xor
dec
mov
leave
mov
aam
fcoms
sub
push
and
push
jl
jne
xchg
cwtl
xchg
das
mov
mov
icebp
cld
jbe
jno
shl
scas
jo
lahf
pop
mov
lret
add
cmp
mov
insl
in
fistpl
rcr
mov
ret
mov
fsubs
sahf
dec
xor
mov
movsl
mov
in
jge
arpl
addl
push
out
es
inc
loopne
cmp
test
push
xor
pop
cmp
xchg
test
out
push
nop
sti
and
xor
fimuls
push
dec
es
jp
jmp
jge
push
mov
aad
int
cmp
mov
cli
inc
pusha
mov
push
lock
in
and
lea
cmp
hlt
pop
pop
and
xchg
lds
mov
insl
push
add
add
cmp
fnsave
pop
loopne
pop
pop
or
jp
inc
lds
mov
imulb
out
mov
add
aam
mov
add
cmpsb
ljmp
mov
stc
in
out
xchg
push
or
sub
movsl
addr16
lret
push
movlps
gs
pop
sub
das
cmc
shll
pop
push
pop
in
dec
jno
fcompl
push
push
pop
add
and
cld
repz
mov
mov
xor
stos
lret
cmpsl
push
mov
je
pop
mov
xorb
enter
dec
mov
mov
clc
or
fwait
int
xor
cmp
fidivrl
pop
addr16
scas
add
push
lods
std
in
nop
pop
pop
out
mov
sub
sub
mov
je
push
xchg
push
pushf
icebp
xchg
jne
lret
mov
mov
xor
outsb
add
test
dec
sti
or
push
mov
mov
lcall
js
les
adc
cltd
fistpl
aaa
gs
cmp
in
mov
jmp
scas
push
sbbb
sub
sub
outsl
fadd
out
mov
dec
mov
pop
ret
and
les
jo
in
dec
dec
in
pushf
icebp
mov
or
xor
sbb
and
ljmpw
mov
fucomip
adc
inc
sbb
test
mov
cmp
inc
arpl
pop
sbb
push
push
cmp
imul
add
mov
lods
ljmp
jmp
inc
dec
xchg
lock
bound
cmp
xor
aad
orb
out
mov
mov
mov
cltd
and
dec
push
in
jmp
dec
jae
bound
addb
pop
push
pop
mov
ja
cld
nop
push
scas
pop
sbb
int3
lea
mov
stos
fxch
and
adc
push
push
roll
push
mov
adc
mov
scas
dec
inc
jmp
dec
fwait
jg
mov
mov
mov
jecxz
fs
sub
sbb
in
out
repnz
add
sub
out
jo
loop
aad
test
in
fwait
sarl
fmull
sub
divl
sbb
nop
cmp
pop
cmc
mov
lret
add
call
je
inc
pop
inc
push
adc
sub
daa
dec
std
jp
lds
push
cmp
sub
enter
push
movsl
test
fstl
pop
inc
or
cmpsb
mov
or
mov
pusha
sub
pop
imul
clc
pop
mov
cmp
pop
call
add
pusha
jmp
mov
inc
mov
jmp
mov
inc
out
ljmp
cwtl
mov
mov
je
sub
fldcw
sbb
mov
and
sbb
shrl
push
xchg
push
xor
jo
ret
shll
mov
test
sbb
fidivs
shlb
pop
xchg
ds
mov
jmp
jae
scas
dec
sbb
repnz
xchg
jns
cwtl
loope
cmp
mov
filds
mov
stc
cmp
mov
sahf
adc
xchg
sbbl
mov
cs
jg
or
push
js
mov
shl
xchg
add
outsl
inc
iret
mov
xchg
cltd
sub
fildll
adc
lret
shl
shrb
cmp
or
aaa
insb
cmpb
add
push
rcll
mov
xor
xchg
jecxz
add
or
cmp
inc
call
popa
jne
shll
cmp
ja
inc
popa
scas
shlb
mov
add
mov
lds
sub
imul
or
cld
lock
aas
test
or
or
cltd
pop
and
lock
test
xchg
add
bound
movb
adc
xor
push
pop
cmp
or
xlat
add
dec
and
push
scas
idiv
adc
fdivp
sbb
pop
cwtl
lods
push
out
push
push
loop
dec
or
cltd
add
int
cli
aas
adc
adc
fcmove
loope
cmp
fwait
paddusb
sub
daa
int
dec
jmp
dec
lret
pop
push
loopne
adc
fmuls
fiaddl
cltd
inc
lret
sub
addl
adc
sbb
ror
outsl
or
std
push
jnp
pop
pushf
out
loop
mov
rep
push
mov
insl
xor
ja
adc
push
mov
push
push
mov
rcrb
mov
inc
jns
test
add
cmpsb
lahf
cmp
or
cmp
and
lahf
test
adc
les
outsl
sbb
pop
inc
mov
cld
lea
mov
out
cmpsl
aaa
sbb
pop
aam
fimull
and
out
popf
push
stc
and
shrb
mov
cmp
inc
pop
push
stos
sti
iret
jae
push
push
lods
mov
xchg
fildl
and
adc
pop
mov
movsb
or
flds
int3
test
shr
in
inc
push
mov
jmp
movsl
sbb
sub
bound
push
xor
cmp
imul
stc
mov
in
jns
lods
sahf
jnp
neg
je
aaa
and
xchg
in
cli
push
jb
mov
mov
fstpl
xor
je
lds
pushf
aaa
lret
pop
call
mov
pop
cmpsl
xor
xor
mov
adc
sti
lahf
push
nop
adc
mov
and
out
pop
push
shll
mov
cmpsb
cwtl
add
jecxz
xchg
test
and
enter
pop
cwtl
pop
dec
cmp
dec
mov
les
call
push
lret
data16
faddl
jecxz
pop
popa
mov
mov
jne
mov
sarl
mov
lock
mov
inc
fcmovnb
push
push
push
sarb
or
cmp
jnp
sti
mov
pusha
mov
pop
push
adc
dec
insl
inc
push
push
lea
cmp
cmc
and
into
push
das
ljmp
or
les
xor
test
mov
sub
cwtl
mov
adc
aam
mov
push
cmp
mov
in
xchg
aad
and
insl
and
shlb
sub
xchg
mov
push
mov
cmp
leave
insb
subps
or
loopne
xchg
or
sbb
rclb
lds
adc
xchg
adcb
call
ss
push
hlt
mov
mov
jp
stos
rcl
mov
mov
mov
cwtl
push
cmp
and
fwait
out
sbb
into
in
scas
shl
repz
decl
ljmp
nop
xchg
addr16
jge
and
aam
pop
fadd
cmpsl
lock
jg
jno
lods
rcr
xchg
cbtw
push
in
push
push
xor
lcall
or
xchg
xor
je
rcrb
mov
jb
pop
sbb
inc
and
or
fsubl
cwtl
mov
and
negl
in
insl
dec
fcmove
rol
jmp
jno
jno
xchg
jo
sub
ja
inc
ljmp
fbld
repz
cmp
pop
xchg
pop
loop
xor
push
pusha
push
test
mov
ja
lret
in
jg
sub
jl
cld
push
scas
test
pop
adcb
insb
adc
aam
fnstsw
mov
add
scas
loop
jge
dec
xchg
cmp
pop
les
cmp
mov
imul
fldenv
inc
lods
fstps
mov
xor
mov
icebp
pushf
inc
bound
xor
add
icebp
cmpsl
pop
subl
push
dec
sahf
inc
mov
push
xchg
xchg
mov
aaa
mov
cld
jb
mov
push
scas
sbb
out
or
lods
xor
jb
inc
jecxz
shl
repnz
xor
or
sub
jae
xor
add
and
xchg
adc
subb
mov
jmp
cwtl
mov
pop
insl
sbb
xor
pusha
in
xorb
stos
loopne
and
loop
adc
jae
aaa
or
add
sahf
push
lret
cmp
mov
stos
pop
sar
rorb
mov
pusha
movsl
mov
scas
dec
cli
push
sub
dec
push
les
repnz
lods
test
std
sub
loopne
jl
or
adc
mov
fwait
hlt
push
sub
adc
lods
int3
stos
add
push
or
loopne
lods
or
cwtl
mov
pop
push
fidivs
inc
stos
sbb
and
cmp
jae
mov
cmp
ret
sbb
mov
aam
pusha
sub
and
push
das
orl
cmp
es
jp
mov
jg
and
jg
pop
mov
push
or
pop
hlt
test
cmp
mov
xchg
arpl
xchg
add
test
jmpw
cld
dec
ret
call
mov
clc
ret
jns
xchg
xor
lret
push
enter
dec
jns
ds
jge
mov
loop
js
repnz
test
add
mov
hlt
pop
inc
es
xchg
es
aaa
mov
jge
lahf
xor
iret
repz
movsb
nop
cs
dec
jmp
adc
shl
cld
sub
push
adc
inc
dec
push
shll
aas
mov
pop
das
cli
push
pop
or
ret
jo
pushf
xchg
mov
dec
loopne
cmpsb
jle
flds
movsl
xchg
dec
sub
ss
sti
xchg
mov
jle
lahf
nop
in
mov
aaa
adc
lds
lret
shlb
lds
mov
xor
jge
rclb
add
sub
in
mov
int
xchg
pop
call
xchg
cmp
push
lods
xor
push
jg
xchg
lods
jne
lret
mov
pop
add
sub
or
xor
lods
mov
cli
lock
loope
mov
cld
lock
mov
add
mov
xor
outsl
sbb
mov
mov
push
sub
imul
mov
popa
mov
lods
lock
ds
xchg
push
mov
je
cmpl
inc
mov
mov
rcl
shlb
nop
and
inc
int3
xor
xchg
daa
das
inc
inc
push
push
xchg
xor
lods
cld
or
nop
mov
jo
adc
arpl
push
and
shlb
add
jns
adc
pop
ja
mov
or
dec
sub
pushf
mov
aam
stos
jp
dec
jecxz
push
sub
in
daa
gs
dec
popf
and
movlps
pop
sub
inc
adc
mov
sbb
jnp
fcoml
insl
aam
jbe
in
fldenv
jecxz
dec
lock
mov
mov
cmp
in
mov
xor
cmp
aas
movsl
movsb
repnz
cmp
test
and
push
popa
ficoms
loop
cwtl
jo
adc
movsl
sub
imul
in
cld
and
pop
push
data16
pop
mov
js
in
xor
pop
dec
lock
rorl
mov
and
ret
dec
cmp
sbb
mov
inc
pop
ljmp
and
rolb
push
inc
jae
mov
iret
cmpsl
sar
xchg
xchg
fdivs
mov
divl
outsb
xlat
jnp
decl
jne
stos
inc
pop
test
mov
in
sti
testl
jl
je
inc
mov
inc
clts
loopne
aas
pop
add
add
xor
je
push
push
pop
repnz
out
xchg
orl
out
cltd
xchg
mov
test
cld
movsb
repz
cmp
or
xchg
sbb
jl
or
movsl
enter
sbb
sub
sti
push
mov
test
xor
fmuls
imull
jl
dec
stc
fistl
shrb
enter
mov
inc
sti
jne
sarb
push
cmp
inc
mov
jmp
clc
cmp
outsl
jl
hlt
add
out
cmp
ret
xchg
jle
xor
bound
xlat
movsl
push
and
push
popl
fwait
push
jo
aad
pop
inc
push
imul
loop
orb
fwait
add
inc
in
lret
mov
push
test
cmp
cvtps2pd
dec
cmpsb
daa
push
push
xchg
aad
popf
push
rcrl
fwait
int3
pop
xor
cmp
xchg
inc
stos
inc
mov
js
cwtl
jle
lods
mov
sbb
mov
dec
decb
enter
stc
aad
inc
inc
int
call
fwait
push
xor
aad
test
push
fs
cmp
stos
jp
xchg
jp
mov
xor
pop
lret
lock
cld
cmp
scas
push
int
call
xor
push
out
xorb
repz
leave
mov
xor
jmp
enter
push
mov
in
into
int
aas
mov
dec
rol
scas
xchg
sub
pop
jnp
cmp
push
pop
outsb
ss
inc
int
sbb
int3
jbe
jl
ja
sub
ja
stc
mov
adc
mov
push
ljmp
movl
andl
outsb
in
into
mov
int3
lret
fstpt
push
cmp
or
push
out
aas
cld
fdivrs
insl
cmp
test
fmull
and
fistps
daa
arpl
dec
and
mov
jmp
and
push
mov
lock
mov
idivb
and
loopne
push
pop
imul
daa
pop
or
push
mov
cmpsb
dec
popf
add
cmpsb
or
cmp
lock
outsb
push
stc
dec
pushf
add
adc
fisubrl
mov
dec
jo
sub
test
xchg
xchg
sub
nop
dec
pop
les
sub
xorps
or
mov
jns
xor
mov
mov
lcall
lods
add
sbb
jle
inc
dec
cld
xor
lds
loopne
lret
xor
cld
nop
stc
push
jg
add
xor
outsl
fwait
dec
out
dec
sub
aam
mov
push
in
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
idivl
jp
das
pop
jp
in
inc
jnp
xchg
add
sub
pop
sub
sub
mov
adc
in
je
xor
sub
psubsb
pushl
fwait
or
in
sbb
sti
lods
push
out
fcmovbe
add
xor
imul
cmp
xor
inc
out
or
je
add
fsub
and
out
test
cs
or
mov
movsl
xchg
clc
mov
sub
popa
and
cmp
es
cmp
aaa
ljmp
or
jnp
xchg
or
jmp
add
mov
int3
dec
lock
xor
adc
lods
mov
mov
mov
outsl
pop
lcall
adc
outsb
std
pushf
lcall
cltd
outsb
adc
mov
out
lods
int
xor
mov
mov
sub
add
outsl
sti
sahf
push
daa
add
rcr
dec
orl
jp
fs
xchg
lret
jge
ljmp
cmpb
nop
adc
inc
mov
lock
or
dec
sahf
mov
test
imul
inc
pop
repnz
push
ss
mov
lods
and
popf
movsl
ja
lcall
es
cwtl
dec
fstps
pop
add
push
shlb
mov
ret
mov
sbb
sarl
add
adc
fdecstp
fmuls
addl
cltd
pop
adc
scas
xchg
mov
sbb
inc
push
bound
jb
stc
pop
and
sbb
out
add
or
incb
ljmp
mov
stos
mov
cmp
out
jecxz
test
std
and
jno
popf
jns
pusha
lds
test
jge
push
popf
lods
xchg
adc
push
inc
adc
and
push
push
mov
cmp
lods
jecxz
mov
mov
mov
lods
push
subb
adc
lret
daa
xor
in
std
test
fdivrp
in
jecxz
xlat
jnp
das
lcall
out
arpl
cs
test
inc
ljmp
xchg
jno
inc
test
leave
or
outsl
mov
sub
cmc
pop
mov
fildll
xchg
addr16
cmp
sbb
mov
pop
xchg
sbb
lods
add
stos
mov
scas
test
out
outsb
jb
mov
popf
out
fisubs
imul
loope
dec
add
mov
adc
push
lods
fisttps
orb
shrl
stos
lds
cmp
imul
loopne
outsb
inc
lock
clc
cli
or
and
scas
in
cmp
mov
pop
jns
fwait
les
push
in
test
lcall
fcompl
out
loope
std
jno
pop
mov
aam
ficoms
addr16
sbb
sub
push
lds
cltd
nop
xchg
and
push
fbld
enter
in
inc
mov
push
stos
or
out
cltd
cmp
push
add
test
cmp
mov
sbb
mov
inc
dec
cs
in
xor
hlt
cltd
subl
inc
or
push
push
mov
mov
loope
sub
bound
orl
lock
mov
jl
mov
xchg
cmpsl
lret
stos
add
sub
sbb
pop
add
out
mov
ljmp
mov
loopne
cmp
xchg
inc
xchg
cmp
jmp
fld
or
pusha
dec
jo
mov
xchg
fsubrs
cmp
imul
push
fsubl
adc
std
outsl
mov
aam
aas
aas
mov
jge
dec
or
mov
push
push
cmpsl
sub
xchg
cwtl
cmp
push
cmp
repnz
and
lods
cmp
imul
xchg
aaa
pop
jl
leave
shll
jmp
inc
lahf
xor
jns
pop
add
sub
sbbb
cmc
sub
popf
sub
ja
lret
aad
ret
in
jmp
outsb
sbb
lea
xchg
orl
jle
push
shlb
inc
call
jo
sub
out
mov
test
xor
aam
jbe
push
dec
adc
jae
adc
hlt
adcb
xor
jae
sbb
outsl
stos
inc
pop
pop
mov
add
movsl
out
xchg
mov
mov
outsb
mov
add
xor
push
lret
and
rcrb
mov
insl
bnd
cld
add
orb
imull
enter
cmp
xchg
fidivrs
mov
cmp
inc
fiaddl
fisubs
ret
inc
jnp
xor
out
mov
popf
push
push
shll
sbb
jb
jg
test
in
stos
pop
je
cmp
adc
rolb
subb
addr16
push
rcr
outsl
ja
mov
stos
shll
add
lret
ljmp
add
xchg
jbe
stos
in
adc
jnp
mov
cmpsb
xchg
adc
mov
xchg
cltd
mov
mov
mov
xchg
and
gs
std
cmp
add
jns
mov
push
icebp
cmp
jg
imul
fbstp
arpl
push
xchg
lahf
push
pop
loop
cmpsl
jae
and
lret
cmp
setbe
fidivrs
or
movsb
dec
dec
stos
pop
xchg
sbb
pop
mov
mov
cmp
mov
xor
sbb
addr16
mov
aam
sbb
pushf
pop
shll
or
xor
and
outsb
test
nop
or
sub
or
testl
pop
sbb
or
popf
ret
movsl
sub
stc
andl
xor
std
fldl
xor
mov
add
arpl
gs
xorb
imul
mov
pop
iret
sbb
mov
adc
test
or
jg
popf
stos
or
rol
inc
mov
pop
iret
pop
inc
outsb
lods
cmp
inc
into
jne
xchg
jns
fistps
sub
cmp
xlat
cwtl
jmp
jno
shrb
xor
mov
scas
or
fsubr
das
cmp
gs
mov
jo
inc
sbb
es
mov
mov
dec
pop
jg
enter
sbb
jb
push
movsl
jae
push
jno
ret
or
loop
xlat
and
pop
pop
stos
les
pop
loop
scas
pop
mov
mov
pop
or
push
je
pop
rcr
push
fs
cltd
push
rcrb
xchg
mov
mov
icebp
dec
jns
fcomps
push
lods
mov
hlt
bound
mov
pop
adc
jge
pop
cmc
fs
sbb
stos
adc
fstps
xor
add
jne
imul
push
mov
ror
into
push
and
pop
mov
pusha
incb
or
sahf
mov
push
adc
inc
dec
add
xor
fdivl
movsb
xchg
and
ljmp
test
in
ss
je
pop
ljmp
jnp
cld
dec
jne
mov
aas
out
adc
inc
sub
or
stos
sub
aad
lods
mov
sbbl
inc
jl
mov
les
lds
pop
int3
push
dec
pop
mov
jge
or
lcall
adc
pop
ret
jge
push
int3
shl
jo
adc
adc
and
arpl
push
mov
jle
sub
xchg
jbe
dec
mov
iret
xor
test
xchg
inc
cmc
push
les
add
xor
popf
jnp
gs
pop
mov
aad
cmp
or
stos
and
inc
hlt
js
push
ja
inc
dec
pop
push
leave
add
mov
mov
add
sbb
push
cmp
adc
inc
popf
roll
mov
das
fdivrl
push
dec
loop
mov
sub
loop
xchg
push
adc
cmc
jnp
sbb
popa
gs
mov
lods
xchg
push
aaa
or
sbb
xchg
and
add
cltd
mov
jecxz
pop
pop
mov
and
hlt
add
ja
lcall
mov
xchg
inc
xchg
dec
xchg
jl,pn
pop
aaa
push
imul
movsl
sbb
dec
pop
mov
flds
and
int
iret
ret
xchg
mov
sub
pop
push
cmp
inc
out
add
jp
xchg
xchg
lds
leave
insb
rcrb
push
inc
pop
fwait
mov
dec
cltd
lods
lcall
iret
mov
jnp
ds
dec
adc
scas
addl
out
and
sbb
jne
fwait
ret
sti
sbb
scas
adc
dec
les
mov
mov
mov
mov
call
pop
imul
aam
inc
sets
iret
cwtl
inc
or
clc
ss
adc
sbb
jl
shl
pop
and
dec
push
inc
lcall
repz
pop
sbb
neg
xor
popf
mov
and
loop
mov
repz
stc
mulb
pop
inc
jbe
jmp
aaa
or
sub
mov
and
shrl
or
lret
lahf
ja
mov
mov
outsb
or
arpl
popa
add
call
outsb
adc
xlat
lds
stos
lds
mov
push
sbb
sub
push
inc
sti
add
mov
inc
xor
fisubrs
mov
push
mov
jmp
inc
sbb
mov
mov
enter
xchg
push
or
adc
xchg
add
int
adc
push
cwtl
cmp
jmp
jl
push
hlt
mov
mov
sbb
pop
shll
out
mov
fwait
ffreep
jmp
or
adc
lcall
lods
mov
push
sbb
mov
dec
pop
out
stos
pop
cmp
cmpsl
pop
dec
out
pop
aad
fucomip
shl
mov
inc
xor
cmp
pop
fidivrs
jl
inc
mov
insl
jecxz
push
mov
jnp
stc
mov
loop
inc
int
addr16
sbb
adc
fwait
mov
push
out
jecxz
int3
jg
mov
icebp
push
cli
aad
xchg
jae
cltd
cmp
ljmp
jo
addr16
add
call
mov
stos
insl
lret
adc
add
xchg
shll
pop
xor
pop
pop
push
popa
mov
jnp
repnz
ret
rclb
and
dec
js
flds
cmp
scas
sub
push
jg
setnp
sub
or
pop
cmp
xchg
int3
mov
pop
and
jbe
pop
mov
and
sarb
cmp
inc
sbb
insl
sti
xchg
icebp
cmp
add
daa
cmp
xor
pop
bound
adc
roll
into
mov
dec
insb
ret
gs
cmp
inc
xor
rdmsr
adc
and
jne
cwtl
mov
rep
fimuls
xor
xchg
dec
sbb
mov
subb
test
cmp
test
adc
inc
outsl
das
idivl
loop
mov
sub
mov
xor
test
lds
sub
add
cmc
rorl
out
in
clc
test
mov
inc
stos
xchg
cmp
jg
mov
ljmp
lret
nop
cmp
fisubs
cltd
xor
xchg
or
out
pop
dec
mov
xchg
and
push
jle
or
sbb
ja
xor
fcomip
leave
lea
cmp
xor
cmp
fs
aaa
leave
jnp
fwait
loope
dec
pop
xor
sbb
and
sbb
das
pusha
iret
mov
xchg
cmpl
arpl
dec
cwtl
repz
les
push
lret
sbb
push
add
in
pop
shlb
insb
mov
cmp
pop
push
shr
mov
sarl
loopne
xchg
push
adc
iret
mov
push
arpl
sbb
pop
roll
inc
adc
fisttps
push
mov
aam
call
loope
outsl
out
mov
ja
mov
rorl
mov
mov
fsubrl
dec
or
test
or
ss
movsl
mov
mov
dec
jno
outsb
cmpsb
adc
rcrb
pop
mov
adc
adc
mov
ja
adc
pop
sub
pop
leave
popl
test
or
mov
lods
icebp
xor
jg
lea
inc
jecxz
stos
in
jl
sbb
xchg
pushf
cmp
faddl
in
cmp
in
mov
pop
jp
sub
cltd
cmp
mov
dec
mov
data16
xchg
jb
push
lock
inc
shl
rorl
sub
insb
push
adc
hlt
cmpl
mov
stc
mov
repnz
jno
pop
mov
test
push
pop
call
add
and
jae
jecxz
shll
fstpt
jne
fs
jmp
mov
gs
mov
cmp
test
outsb
sub
lods
nop
inc
test
xchg
outsb
sub
movb
adc
cmp
mov
mov
push
leave
stc
sbb
testl
aas
lea
or
js
aad
jmp
mov
pop
bound
pop
mov
pop
ret
fildl
lods
xchg
xchg
jle
in
add
aad
push
jnp
std
test
pmullw
cmc
or
mov
jnp
mov
push
jg
notb
loop
pop
fidivl
and
xchg
pop
fwait
lret
lahf
sbbb
mov
pavgb
mov
cltd
pusha
mov
in
in
mov
cltd
inc
and
sbb
mov
fists
mov
cpuid
mov
push
add
cmpsl
shlb
push
adc
movsl
mov
and
arpl
mov
arpl
pop
loop
data16
outsl
testl
ja
adc
jo,pt
jns
aam
nop
lret
push
xchg
push
stos
clc
out
push
push
imul
push
mov
mov
jl
cmc
ds
jb
dec
out
or
jecxz
movsl
cmp
mov
and
and
enter
mov
imul
std
es
lds
in
negb
sub
in
push
push
pop
into
mov
out
leave
mov
cmp
jbe
ret
mov
push
xchg
fildl
mov
in
jl
rcrl
aaa
sub
int
faddl
jnp
sub
mov
push
jae
mov
les
inc
outsb
and
sub
out
jns
jp
or
lcall
imul
mov
div
sbb
cmc
fcmovne
cli
insl
and
and
scas
test
add
imull
mov
mov
xchg
jg
adc
outsb
fdivs
mov
out
sub
scas
pop
cmc
cmp
scas
add
dec
leave
adc
mov
loopne
into
loop
test
inc
ja
insl
inc
jne
pop
ret
cli
add
and
xchg
aad
and
fisubl
xchg
movsl
outsl
out
adc
lret
jb
stos
mov
cmp
or
stos
int3
popa
xor
movsl
cmp
xchg
inc
cmpsl
mov
je
out
out
es
mov
push
pop
jp
mov
pop
aam
int
fstpt
imul
xchg
or
outsl
mov
mov
push
jl
int3
std
fwait
insl
jl
lods
jl
cmpb
dec
push
int3
imul
cmp
shrl
stos
mov
rcr
pslld
jae
das
push
insl
jbe
fwait
jge
popf
imul
sub
fildl
xchg
mov
adc
lods
stc
add
out
push
jnp
outsl
leave
out
and
js
shrl
mov
cmp
adc
decb
sar
xchg
cltd
iret
pop
xchg
mov
pop
pop
clc
js
jb
aas
les
movsl
sub
xchg
hlt
pop
cmp
cmc
test
or
stos
pop
cmp
mov
popa
cmpsb
push
inc
jmp
jb
sub
lret
fistpl
imul
iret
jae
and
cmc
cmp
cmp
mov
mov
sahf
mov
pop
or
inc
mov
imulb
cmpsl
sbb
dec
clc
outsb
pop
daa
lds
push
mov
pop
mov
mov
shrb
clc
in
adc
mov
inc
mov
shlb
xorb
jg
xor
mov
test
lret
cmp
push
xor
aam
push
bnd
out
lahf
mov
push
je
in
dec
xor
pop
arpl
sbb
ljmp
rol
out
pop
shrb
mov
addr16
jno
subl
pop
xor
pusha
je
mov
ljmp
rol
hlt
out
pop
int3
cmp
lret
and
mov
pop
hlt
jp
mov
pop
adc
mov
test
lahf
add
mov
mov
adc
mov
cmp
inc
jo
vmovq
pusha
cmp
cmpb
push
mov
or
cmpsb
arpl
xchg
push
sub
rcr
lock
sahf
fcoml
cmpsb
dec
add
icebp
hlt
sub
test
fstl
pop
call
push
jne
xlat
add
mov
leave
dec
adc
adc
ret
mov
ficoms
sbb
stos
and
fistpll
repz
stos
and
cwtl
add
das
stos
lds
int
inc
aam
js
andl
out
pop
cmp
stc
mov
or
cmpsb
aam
outsl
lcall
push
sbb
xor
and
adc
or
imul
pop
adc
scas
mov
xor
movsl
mov
pop
sub
xlat
lds
aad
test
in
lahf
cld
pop
pop
pop
jns
js
inc
mov
cmc
jbe
inc
cmp
addb
aas
or
popa
and
fs
insl
cmp
movsb
ja
js
jne
lcall
jns
mov
test
mov
mov
push
jge
or
add
sbb
lods
rclb
push
pop
push
sbb
and
adc
inc
cmp
imul
mov
xchg
ja
xchg
sub
lret
inc
inc
add
xor
xchg
adc
dec
daa
inc
sub
mov
arpl
inc
sbb
inc
test
out
cmp
ret
movsl
test
daa
mov
imul
mov
xchg
popf
ss
mov
movsb
dec
push
cmp
sbb
pop
ljmp
lcall
mov
cmp
mov
dec
pop
dec
or
cmp
pusha
mov
push
xchg
es
cwtl
repz
or
imul
subb
add
and
cs
sbb
dec
cmpsl
mov
or
xlat
out
lea
adc
repnz
pop
inc
and
mov
cmp
cmc
je
pop
cld
mov
iret
in
mov
push
mov
ja
mov
jne
movb
int
mov
gs
in
lds
std
bound
clc
or
stc
mov
dec
orb
out
xchg
or
shl
push
mov
loopne
jmp
cmpb
icebp
gs
xor
fldt
in
sbbl
xchg
add
fildll
mov
adc
lock
xor
clc
push
xor
xchg
cld
push
inc
sti
mov
xor
adc
mov
or
jg
add
jae
call
mull
mov
rcrb
jb
leave
mov
je
inc
fnstsw
jno
in
mov
push
pop
pop
xchg
imul
movsl
inc
imul
jecxz
das
or
push
lea
xor
jb
movsb
push
cmp
icebp
stos
int3
pop
mov
fwait
stos
loopne
dec
je
scas
lock
imul
ret
jge
pop
fdivr
xor
lcall
jb
flds
dec
or
pop
inc
adc
aam
inc
int3
xchg
insl
cli
shrb
pop
mov
sbb
push
cmp
loop
lret
and
pop
jb
dec
add
xchg
imul
sub
imul
xor
lods
outsl
mov
stc
ret
add
test
add
pop
inc
push
or
mov
pop
ds
lcall
jne
scas
call
xchg
mov
add
lods
cmpb
bound
inc
sbb
or
lods
gs
gs
aam
clc
or
lea
xchg
imul
mov
stos
enter
mov
andb
data16
into
aad
movntps
mov
hlt
mov
xchg
data16
ret
imul
imul
inc
xchg
jge
push
mov
std
out
fidivrl
iretw
sahf
adc
into
lret
add
out
xchg
lock
push
test
pop
jb
out
ja
mov
fs
mov
mov
or
sub
pop
cmp
je
das
or
sbb
mov
push
add
or
mov
and
fistpll
jecxz
mov
adc
pop
inc
aas
cltd
xchg
mov
push
out
insl
xor
and
push
sub
lock
dec
inc
scas
adc
cmp
mov
fisubrs
cmp
jmp
pusha
lods
sub
cmp
insl
stc
mov
mov
je
jnp
cli
push
mov
shlw
ret
out
mov
dec
pop
stos
sub
pop
dec
hlt
and
jle
arpl
das
jp
dec
mov
push
inc
imul
mov
in
sbbl
dec
cmp
push
fimuls
inc
or
mov
and
daa
loope
add
cmp
xchg
inc
aam
mov
aad
jbe
jle
out
jg
push
int3
xorb
addr16
xor
fnstcw
cmc
cmp
jg
fdiv
dec
nop
jo
data16
jae
jmp
lock
dec
add
lods
mov
jle
mov
stos
jae
push
hlt
add
cmpsl
inc
jno
stc
pop
ss
jne
lret
dec
dec
mov
lods
jle
xchg
cmp
add
jne
fcmovne
dec
push
and
in
xchg
sbb
add
adc
add
dec
sbb
mov
mov
out
and
in
addb
xchg
dec
repz
je
lcall
jge
xor
mov
les
sub
push
and
jb
or
clc
icebp
ss
mov
insl
clc
sbb
fistps
loop
pop
imul
fmuls
xor
mov
and
iret
ljmp
pushf
ds
decb
mov
jg
mov
adc
cmp
cmp
lahf
sbb
jecxz
ret
loop
ret
sbb
add
xor
or
shlb
test
push
loope
jg
lock
js
push
mov
scas
fmuls
divb
cmpsl
jns
jmp
sarl
xchg
aad
sub
dec
or
mov
into
xor
pop
addr16
je
push
mov
xor
outsb
mov
push
pop
popf
sbb
mov
lcall
xor
repz
jo
lds
sub
rolb
push
mov
add
clc
jne
aad
adc
xor
push
add
add
in
cli
loope
daa
repz
push
imul
iret
das
mov
adc
xor
test
dec
test
in
xchg
adc
aad
loope
std
shlb
pusha
push
bound
cmc
pusha
add
std
push
sbb
mov
movsl
dec
jb
ljmp
xchg
mov
jbe
inc
pop
imul
cld
sti
cmp
sbb
out
adc
sub
lods
mov
adc
movsl
aas
push
or
subb
jnp
push
addb
sub
out
mov
repnz
dec
mov
pop
jl
push
mov
ret
adc
and
jp
pop
or
stc
data16
jbe
popa
call
adc
pop
iret
mov
jbe
lods
adc
mov
pop
xor
sti
and
xchg
mov
dec
jno
mov
imul
lahf
sbb
fbstp
cmp
out
in
fildl
js
sub
adcl
xlat
fwait
xor
inc
pop
je
in
mov
jge
in
andb
test
adc
mov
nop
mov
pop
adc
sbb
cmpsb
out
push
gs
jae
fstps
add
movl
iret
mov
stos
pop
jo
hlt
outsb
loope
pop
enter
jb
pop
mov
and
pop
mov
xchg
push
sub
ror
or
out
cmp
int
jo
enter
sub
add
push
insb
leave
ja
sub
and
pop
je
xchg
dec
jns
push
mov
test
mov
dec
sub
cld
movsb
sub
sti
mov
xor
pop
mov
xchg
jo
xor
and
pusha
mov
scas
and
pushf
inc
inc
jne
cmp
jo
jno
push
out
lds
sbb
mov
ds
sub
pop
ret
lea
aam
xchg
xchg
xchg
hlt
sarl
jecxz
push
mov
cmc
pop
mov
sbb
add
inc
iret
xchg
jns
adc
roll
loopne
jbe
pushf
cmpsl
aad
in
inc
fists
sub
insb
cmp
sbb
inc
inc
in
mov
or
popa
xor
and
push
xor
popa
sub
ljmp
mov
out
dec
and
or
push
jne
rorl
push
sbb
shr
es
lret
lahf
imul
in
pushf
movl
imul
ret
fimull
out
jle
ds
dec
mov
push
mov
inc
cmp
adc
ret
arpl
sbb
in
aam
aaa
das
hlt
adc
repnz
mov
mov
stos
mov
out
shlb
xor
insb
sub
sbb
jmp
test
xchg
mov
pop
sahf
mov
mov
dec
scas
mov
push
subl
std
xor
jne
xchg
test
out
dec
push
xchg
pushf
fbstp
xor
dec
fsts
dec
insb
mov
jmp
shll
mov
mov
or
sbb
adc
out
sarl
fs
cmpsb
stos
xor
pop
mov
add
lods
lods
iret
data16
movsl
or
inc
divb
or
cmp
stos
sbb
out
sub
inc
cltd
test
pushf
leave
pop
test
cli
stos
cltd
mov
gs
push
pop
js
adc
call
popa
sub
xchg
shrb
addl
daa
dec
arpl
notb
adc
jle
testb
sbb
jge
xchg
cmp
jmp
jge
push
ficoml
sbb
jnp
lods
add
iret
pop
xchg
shlb
sub
popl
adc
incb
adcl
fidivl
imul
roll
and
pop
in
cmpsl
pop
ret
pop
sub
dec
mov
xchg
dec
add
adc
mov
sbbb
sub
dec
rclb
sub
jb
fbstp
jmp
insl
dec
fistpll
jecxz
dec
jg
mov
mov
out
shlb
fisubrs
sti
inc
adc
push
mov
sarl
push
sahf
or
cmp
std
xor
cli
pop
or
addb
stos
es
push
int
xorb
jecxz
jno
cwtl
xchg
jl
mov
leave
mov
pushf
pop
into
sbb
add
cmp
movsl
push
sub
test
imul
add
adc
notb
and
fsincos
scas
pop
outsl
jle
xchg
cmp
out
bnd
out
mov
mov
js
sbb
push
in
mov
int3
pop
mov
sbb
jmp
outsb
pop
lods
push
xchg
xchg
cld
jnp
jnp
negl
ret
clc
es
sbb
inc
sbb
das
xlat
xchg
push
inc
jns
push
xor
stos
jne
sub
dec
ja
pop
ds
xchg
movswl
mov
xchg
dec
and
xor
test
icebp
pop
inc
in
add
push
inc
repz
fldt
in
sbb
stos
pop
xchg
pop
mov
mov
and
adc
mov
cli
pop
lock
fmull
mov
pop
mov
fistps
mov
outsl
sbb
mov
sbb
imul
fadd
pop
dec
fcmovu
mov
int
imul
ss
repnz
movsb
das
movsb
mov
push
lods
dec
xor
das
imul
stc
out
dec
enter
mov
fsubrp
call
nop
insb
add
jp
jae
push
dec
test
fdiv
sbb
mov
addr16
lods
jno
mov
fwait
lea
xchg
xor
xor
pop
popa
dec
jbe
mov
sbb
aad
cmp
fisubrs
js
clc
nop
clc
add
or
test
pop
push
cmp
mov
lea
xchg
fildl
lahf
out
dec
fcompl
jle
leave
lods
sar
add
sub
push
cmp
leave
mov
mov
sub
cmp
cld
adc
mov
das
cmp
push
add
orb
xchg
movsl
cmp
movsl
insb
ret
xchg
xor
lods
push
add
cmc
xchg
mov
xor
ds
sbb
scas
pop
adc
arpl
loop
xchg
pop
movsb
or
divb
mov
clc
mov
test
pop
and
pushf
cmp
mov
fidivrl
push
test
push
adc
stos
in
mov
push
dec
je
outsb
mov
in
test
mov
into
std
lret
loopne
mov
int
int
mov
mov
dec
adc
jg
cmpsb
jne
jg
cmpsb
mov
loope
sti
and
repz
pushf
int3
ret
pop
cwtl
pop
cmpsl
ficomps
mov
mov
lods
inc
mov
pop
imul
xor
iret
pop
mov
mov
aam
or
gs
int3
add
sbb
movsl
in
std
pop
movsl
shll
add
xchg
daa
adc
icebp
push
shlb
bnd
nop
xor
into
cwtl
jae
mov
pop
insb
sti
lahf
mov
sarb
rorl
xlat
push
sub
adc
xchg
in
cmc
sbb
mov
in
dec
or
shrl
dec
sbb
shr
pop
imul
pop
mov
stos
pop
add
mov
js
push
dec
pop
sbb
inc
pop
pop
fdiv
fbld
adc
test
cmp
nop
sub
pop
xchg
mov
push
mov
push
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
ret
shlb
adc
jp
repnz
dec
pop
lock
rorb
out
repz
push
jae
push
aaa
out
movsb
jl
push
add
push
imul
push
in
jecxz
cmp
aam
fs
fyl2xp1
dec
dec
outsl
mov
or
pop
adc
mov
adc
lret
pushf
fs
popa
mov
mov
ret
aaa
mov
mov
out
out
jle
out
cmp
mov
xor
enter
jl
imul
inc
cltd
mov
push
imulb
je
iret
in
daa
jbe
xchg
add
push
repz
sub
nop
popa
int
out
in
mov
mov
jbe
add
adc
cmp
fs
cmc
js
inc
outsb
push
ljmp
jmp
mov
dec
mov
scas
jmp
fidivs
lret
imul
scas
dec
div
pop
sbb
xchg
shrl
jae
jp
repnz
mov
les
clc
scas
push
icebp
ja
sbb
nop
fdivs
enter
mov
std
cmp
mov
pop
push
fnstsw
cmp
dec
push
xor
sbb
fsubrl
push
iret
and
pop
mov
mov
lret
arpl
aam
jecxz
test
int
mov
out
into
je
inc
mov
loop
push
cmpl
call
mov
or
leave
insl
pop
xchg
lret
repz
int3
aaa
sbb
mov
mov
repnz
repz
ja
mov
sub
out
rcr
repnz
push
mov
mov
adc
mov
push
pushl
sbb
cmp
add
call
andl
mov
fnsave
pop
rolb
push
into
or
loopne
push
or
stc
shrl
mov
neg
xor
jno
dec
pshufw
fsubrl
lcall
aam
and
push
pop
xchg
dec
in
pushf
ss
mov
jnp
mov
cmp
stos
cmp
shr
xchg
jnp
mov
cmpsl
sub
xorl
scas
mov
lret
aaa
mov
jmp
mov
push
xchg
lret
cmp
in
push
loop
pop
out
aaa
dec
mov
sbb
hlt
stos
sahf
mov
mov
sbb
test
aad
pushf
dec
shll
repnz
sbb
faddl
push
enter
stos
jecxz
icebp
shlb
fcompl
adc
push
fs
fadd
aam
lcall
out
lcall
dec
scas
inc
stos
cld
mov
xchg
inc
inc
mov
jmp
jne
sub
or
imul
fmuls
insl
out
lahf
xchg
mov
ja
pop
call
sbb
jmp
ret
gs
mov
fdivl
jbe
adc
pop
sbb
loope
mov
ficoms
and
sub
stos
sbb
sarb
ja
into
js
pop
dec
stc
push
fisubl
gs
fdiv
push
popf
jb
mov
pop
daa
sti
and
mov
out
cli
ja
dec
pop
push
scas
std
repz
dec
test
aad
in
js
lock
push
test
mov
sbb
mov
or
push
jmp
add
pop
add
cmp
mov
inc
push
xor
test
clc
insb
adc
aaa
ret
outsl
xchg
sbb
addr16
push
test
add
inc
loope
xchg
push
mov
mov
sahf
dec
test
cmp
xchg
arpl
push
xchg
or
dec
xor
pusha
inc
arpl
popa
lods
loop
mov
add
xchg
mov
cmp
xchg
in
cwtl
repz
cmp
push
lahf
ret
jo
inc
dec
pop
loopne
loope
mov
mov
and
push
and
pop
aam
pop
pop
scas
sbb
in
jecxz
add
mov
add
mov
mov
dec
ds
mov
cltd
mov
inc
pop
push
test
pop
es
mov
stos
mov
adc
fildl
insl
pop
js
mov
cmp
push
cmp
ljmp
inc
std
ds
ljmp
insl
xor
jno
cmp
sbb
pop
arpl
jnp
outsl
pop
loop
aas
pop
int3
sub
xchg
cltd
xchg
mov
xchg
pop
mov
out
jae
mov
cmp
enter
stos
popf
sub
or
inc
pop
aaa
or
inc
inc
push
bound
cmp
xor
loop
mov
and
imul
aad
dec
adc
xchg
jb
fisttps
add
cmpsb
xchg
pusha
jo
add
sbb
movsb
lcall
jp
ret
std
fistl
add
jmp
movsb
pop
mov
inc
mov
clc
xchg
inc
lret
imul
mov
repz
repz
out
and
jae
adc
sub
pop
mov
inc
lods
dec
add
in
mov
insl
outsl
sub
std
xor
mov
jge
call
pop
mov
jmp
subb
xchg
jl
add
cmp
adc
fs
mov
push
inc
ret
add
mov
sub
sbb
mov
mov
inc
mov
mov
lds
ret
stos
push
inc
and
xchg
ret
xor
xor
sub
loopne
sbb
addr16
lods
fisubs
scas
dec
shrb
in
icebp
cmpsl
dec
mov
les
sbb
cmp
and
call
inc
stos
stc
mov
jnp
xchg
ds
push
pop
lds
and
sbb
cmp
pusha
jmp
adc
add
sbb
cmpsb
fidivrs
aas
jae
jnp
sbb
mov
push
fimull
mov
les
mov
dec
or
pusha
aas
fists
xchg
xchg
aas
cmpsb
sub
mov
cmp
imul
call
inc
mov
out
in
rcll
test
push
movsl
out
aad
push
xor
mov
sub
cmp
or
dec
shr
int
cmpsb
add
rolb
push
mov
call
out
div
jmp
and
jb
push
int
lret
jge
xchg
loop
cmp
dec
mov
inc
in
loopne
std
rorl
mov
adc
push
fcompl
stos
imul
sbb
jne
dec
mov
ret
adc
test
or
mov
or
mov
jle
lea
and
xchg
xor
pop
ds
adc
shl
jg
pop
scas
jo
adc
loopne
fmuls
lods
scas
mov
jnp
mov
ljmp
enter
pop
movsl
dec
pop
outsb
push
cmp
leave
in
xor
add
push
das
adc
push
jp
fldl
cmp
js
scas
jmp
aad
mov
xor
nopl
jle
lcall
rcrb
and
idivb
dec
cmp
push
mov
xor
cwtl
cs
out
ja
popf
inc
gs
dec
mov
push
fidivs
pushf
xor
sub
inc
inc
push
sbb
lea
push
adc
stos
movsb
js
out
and
xor
jle
add
movsb
imul
in
ficoms
lcall
daa
fisubrl
xchg
cmpl
xchg
rcrl
xor
bound
or
test
inc
xor
xor
sarb
test
repnz
push
fstp
lahf
rcrb
pop
or
jp
test
mov
es
xchg
mov
sbbl
hlt
iret
test
inc
sbb
inc
aam
and
repnz
mov
xchg
in
or
jp
xlat
fimuls
xchg
iret
jb
xor
out
xchg
repnz
mov
cmpl
mov
cmp
dec
fmul
negl
mov
jl
dec
icebp
mov
push
imul
push
sbb
xlat
cmp
mov
mov
jae
and
out
aaa
dec
mov
mov
scas
and
push
or
sub
shll
dec
arpl
rclb
add
add
jmp
or
vpsllw
mov
je
ljmp
fidivs
sub
pop
jl
xchg
int
scas
dec
out
ficoml
jnp
mov
mov
pop
lret
fdivp
lahf
loopne
jns
ds
icebp
jbe
into
cmp
test
dec
fcoms
adc
sti
mov
cli
call
and
mov
jbe
stos
jae
les
shll
cs
sub
dec
xchg
imul
dec
ljmp
or
es
sub
dec
and
sbb
fsubrl
in
xchg
xor
imul
test
in
mov
inc
xchg
sbb
or
rcll
push
enter
jg
aaa
mov
mov
mov
roll
cmp
pop
daa
xlat
or
addr16
pop
push
mov
fnstsw
mov
ret
mov
es
aam
addr16
sbb
popf
mov
into
sbb
lea
xchg
cld
mov
ret
or
out
jns
xchg
in
addr16
xor
sbb
jne
in
add
cmp
fwait
std
mov
push
and
push
cltd
imull
sbb
mov
add
xchg
cmpsl
out
lods
das
inc
lahf
pusha
test
or
fistl
int3
sub
xor
dec
loop
scas
push
mov
fsubrs
into
xchg
push
pushf
es
adc
xchg
movsb
loopne
mov
sbb
inc
sarl
xchg
xor
popf
repz
mov
adc
cmp
jnp
sub
fmul
xchg
repnz
gs
xchg
push
push
loopne
xor
outsb
jo
mov
sub
mov
sub
test
cmpsb
in
cmp
pop
jp
nop
and
sbb
cmp
lods
xor
mov
clc
out
pop
pop
scas
je
subb
xchg
mov
xor
and
in
outsb
dec
sbb
jle
test
jnp
mov
add
js
ja
pushf
into
sub
sbbb
gs
mov
mov
xor
hlt
repnz
dec
mov
repnz
push
xchg
and
dec
dec
jns
jbe
adc
xchg
adcb
nop
xchg
lods
stos
adc
xchg
xchg
push
mov
mov
fsts
fisubs
rcll
push
pop
mov
xorl
xchg
into
inc
test
mov
lea
xor
jo
push
dec
pop
xchg
loope
cmpsl
gs
xchg
inc
mov
jnp
inc
dec
ds
int3
clc
sub
cmp
pop
xor
mov
lock
xchg
mov
sbb
or
imul
sub
ljmp
out
cmp
lods
mov
in
add
adc
leave
push
jns
cmpsl
pop
dec
fmul
lods
xor
pop
dec
mov
scas
sub
pop
into
ror
addr16
ret
fbld
ror
or
xchg
xor
xor
je
jne
inc
mov
push
or
into
push
jecxz
mov
cmp
lret
xlat
mov
jno
popa
cmp
out
cmc
jle
mov
les
bound
ljmp
loop
scas
jle
test
popf
mov
adc
aam
sub
mov
pushf
inc
mov
aaa
ds
hlt
add
mov
lock
or
lds
push
sbb
aas
out
loop
xchg
pop
cwtl
in
xor
je
xlat
scas
fildl
and
mov
xchg
mov
or
add
std
movsb
add
mov
and
lret
dec
add
daa
pop
aad
lret
add
jae
loopne
xlat
fmull
fdivr
mov
cmp
xor
xchg
bound
sbb
out
pop
std
enter
mov
dec
imul
push
push
pop
and
mov
add
clc
test
jecxz
fiaddl
out
fiadds
cmpsl
cwtl
cli
repnz
xor
cmp
sub
xchg
xchg
js
mov
insl
sub
scas
cli
out
test
dec
sub
int3
repz
insb
test
sub
dec
or
xchg
push
sbb
push
mov
lock
test
call
data16
pop
stos
fcoml
sbb
or
in
dec
subl
dec
adc
idivl
mov
xchg
adc
jp
es
mov
mov
mov
mov
hlt
jg
outsl
repnz
jmp
out
jle
add
sub
pop
sbb
cli
xchg
movsb
int3
inc
adc
mov
jp
xchg
pop
adc
loope
sbb
sub
int
mov
xchg
fsubrp
sub
popa
or
mov
pop
xor
lock
ja
push
sub
es
test
inc
xchg
notl
sub
jno
sub
lahf
out
xchg
xorb
xor
xlat
loope
movsb
inc
roll
sub
and
sbb
ds
push
jmp
fimull
or
cli
sbb
or
jl
rol
xchg
xchg
xchg
add
in
jnp
lahf
mov
push
inc
into
mov
repnz
dec
sbb
sbb
movb
sar
cld
lods
pop
adc
xorl
push
and
push
andl
aad
mov
jp
dec
idivl
pop
cltd
fisttpl
cmp
lock
push
add
ror
ds
aas
popa
lock
add
jge
pop
in
pop
in
pusha
test
xor
icebp
fsubp
cwtl
mov
dec
andb
int
pop
cmp
fwait
pop
pop
sub
xchg
cmp
sub
pop
add
or
sbb
mov
int3
mov
mov
dec
mov
mov
push
scas
cwtl
jb
repz
scas
inc
mov
and
jl
je
testb
lret
fimull
loopne
inc
mov
mov
mov
sub
jne
jmp
sbbb
lea
mov
and
bound
cmp
xor
add
out
out
dec
or
jg
or
fildll
push
mov
xchg
enter
xor
lea
dec
sub
adc
ss
mov
sub
mov
sahf
or
incl
loope
dec
sub
stos
push
jge
mov
mov
rcll
jae
outsb
mov
ret
bound
push
sbb
xchg
mov
aas
outsl
pop
add
outsl
in
test
jl
adc
call
or
mov
cmp
fstpl
lret
mov
jb
jmp
pushl
scas
fcompl
mov
add
sbb
pop
lcall
jb
adc
cmp
dec
jp
push
dec
out
psubsw
dec
mov
insb
frstor
movsb
inc
jb
pop
mov
int3
xor
and
xchg
push
das
icebp
mov
xchg
stos
out
cmpsb
test
cli
jmp
mov
and
adc
lds
xchg
xor
add
pop
daa
add
pop
xchg
add
int3
aaa
mov
aaa
movsl
scas
xor
cmc
test
dec
sbb
fs
mov
jbe
sti
dec
addr16
cmp
sbb
std
movsl
hlt
hlt
fildll
sbb
fmull
cwtl
sbb
leave
fwait
test
sub
pop
xor
mov
or
push
shll
lods
adc
mov
sub
and
sbb
inc
jne
xor
mov
lret
xchg
push
mov
sti
cmp
mov
add
imul
fimuls
lods
scas
daa
mov
jmp
push
fmull
mov
mov
and
mov
and
clc
mov
aas
xchg
cwtl
addr16
add
sbb
gs
dec
push
push
and
pop
pop
or
loope
sbb
hlt
push
mov
jp
incl
mov
jmp
jbe
aas
cmpb
pop
xor
sub
sbb
inc
cmpsl
mov
andl
push
adc
dec
sbb
mov
cmp
pop
ds
jecxz
in
hlt
loop
addr16
jb
std
mov
imul
and
or
outsl
push
mov
rorl
mov
cwtl
and
lar
mov
fsubs
cmp
pop
jp
cmp
cmp
lods
add
pop
pop
int
or
into
stc
push
jb
sbb
xlat
push
iret
ret
test
ss
adc
in
jp
pop
xor
je
mov
xchg
ss
jne
and
mov
dec
mov
sub
jns
hlt
sarb
aas
shll
jmp
mov
xchg
outsl
mov
pop
or
mov
repz
dec
pop
pop
pusha
adc
jecxz
ds
mov
push
xor
mov
and
xchg
lods
sbb
pusha
mov
mov
pusha
xchg
les
jbe
insb
jge
cmp
cmpsl
jmp
mov
lret
xchg
leave
mov
enter
mov
rcl
bsf
sbb
adc
into
jl
cmpsb
aam
ret
adc
insb
hlt
hlt
sti
call
sub
data16
jbe
jecxz
test
or
adc
cli
dec
push
jp
ja
jne
sub
push
inc
adc
fwait
repz
cmpsl
and
push
fildl
bound
cmp
dec
sub
mov
movsl
stc
rorl
push
pop
lcall
fcoml
adc
mov
lret
repz
mov
nop
add
sub
nop
rcl
mov
add
xchg
or
or
pop
pop
jmp
push
pop
inc
aas
lea
mov
or
mov
out
into
fsubrl
jp
aad
push
imul
push
repnz
out
adc
xchg
mov
into
or
pop
in
mov
jbe
inc
push
cmp
adc
in
mov
repnz
cmp
and
or
insb
lods
pop
movsl
add
in
je
stos
xchg
pop
xor
mov
xlat
stos
dec
mov
aas
mov
adc
jle
popa
insl
xor
pop
xchg
int3
outsb
je
bound
push
xor
ds
repz
inc
loop
ss
addr16
movsb
and
cmc
pop
ds
andb
and
clc
or
or
push
mov
rclb
inc
jecxz
jge
sti
mov
fimull
and
xchg
adc
and
into
xchg
add
jae
pop
mov
iret
enter
inc
addb
fnstsw
cld
mov
and
mov
or
xchg
sub
or
cmc
subl
jmp
lods
mov
je
add
add
fisubrs
loope
rolb
dec
out
lret
movsl
addr16
inc
dec
inc
push
js
cmp
aam
lahf
dec
btc
js
repz
in
cmp
jmp
add
mov
sbb
scas
bound
gs
inc
orl
cmp
dec
clc
pop
int3
lret
leave
and
test
mov
lock
mov
ret
and
clc
and
out
add
dec
add
int3
mov
xchg
rcll
sbb
lds
jl
dec
pop
cmc
filds
test
ds
jle,pn
jmp
adc
mov
inc
mov
and
sahf
es
ret
mov
ret
cmpl
and
aas
shlb
cli
jl
xor
push
add
sbb
shll
pushf
mov
shrb
movsb
mov
mov
subl
inc
jmp
sbbl
mov
out
test
add
jg
push
jnp
xchg
mov
lret
ss
iret
repz
adc
movsb
lret
lock
fwait
mov
aam
mov
int
or
nop
mov
add
insl
icebp
dec
inc
sbbl
inc
cmp
cmp
jno
pop
sub
sub
adc
adc
xchg
sbb
out
xchg
jge
xor
sbb
js
aam
pop
lds
stc
in
or
cmpsl
cli
lods
loop
icebp
fldenv
mov
cmp
dec
pushf
lahf
shrl
repnz
jge
push
popa
cltd
insb
out
mov
mov
sub
aas
mov
sbb
aad
clc
cmp
cs
xor
leave
cltd
pop
loopw
jp
shlb
mov
or
cmp
pusha
pop
add
cs
inc
nop
push
xlat
mov
adc
dec
or
and
stos
add
adc
rcrl
sbb
inc
pop
je
adc
sub
push
clc
jno
or
fbstp
aad
pop
mov
cmc
inc
mov
fsubrl
sbb
int
xor
mov
rclb
mov
popa
adc
xlat
dec
adcb
sbb
push
cli
ds
push
xchg
sbb
sbb
mov
in
out
movsb
cmp
pop
inc
scas
ret
ret
lcall
cmpsl
imul
lahf
pusha
mov
data16
repnz
add
jo
dec
mov
arpl
lahf
jecxz
fisubrl
js
pop
dec
push
fdiv
stos
xor
add
lods
sbb
adc
adc
in
daa
push
xacquire
outsl
push
testl
lcall
pop
aad
sbb
sbb
xchg
lret
jle
and
stos
gs
outsl
out
pop
call
and
sti
insb
sub
ret
stos
testb
cli
outsb
adcb
push
imul
leave
or
xchg
addr16
out
sub
lret
xchg
push
fstpl
push
mov
nop
aaa
push
pop
lods
cmc
cmpsl
jae
cs
out
shll
pushf
ret
pop
flds
xor
dec
and
jb
fisubl
or
add
xor
dec
cmp
ja
xchg
pop
in
ret
into
or
push
test
mov
in
int3
cmpsl
outsl
mov
cld
das
xor
ss
cmp
adc
insb
add
or
xor
jle
aad
sbb
inc
mov
aam
inc
xchg
movsl
xor
xchg
jns
add
fisttpl
xor
jo
in
push
js
inc
iret
mov
int
imul
pusha
mov
movsb
pushf
push
push
push
jns
jecxz
xchg
push
xchg
inc
fbld
pop
inc
cmp
adc
stos
popf
movsb
add
xor
jl
pop
int
sti
aaa
sbb
fdivl
scas
out
pop
repnz
stos
out
xchg
aas
icebp
xor
or
push
push
stc
nop
fs
popa
psrld
stos
push
push
and
fdivp
cwtl
int
loope
mov
mov
imul
and
je
lock
ret
in
daa
fmull
fmuls
aaa
dec
fstl
dec
sbb
cld
xchg
xor
and
lahf
aaa
sbb
jne
xlat
out
mov
fcomi
push
and
mov
mov
outsb
cmp
or
into
sbb
out
pop
push
pop
repz
rcrl
push
pusha
idivb
cmp
pop
data16
or
ja
jne
cmp
push
jnp
je
pop
lock
notl
imul
pop
pop
mov
pop
cmpsl
inc
push
sti
sbb
add
and
scas
out
adc
and
fcompl
or
cmpsl
fiadds
mov
insb
dec
adc
dec
xchg
mov
pop
mov
cld
xor
push
xor
or
or
icebp
sub
sub
mov
mov
and
mov
mov
repz
fidivs
xchg
decb
lahf
test
lea
lret
pushf
and
je
sbb
cmpsb
inc
in
ret
pop
lahf
lcall
pop
mov
inc
push
in
adc
push
shl
or
push
and
loopne
push
mov
js
loopne
jnp
sbb
add
sbb
enter
jmp
leave
dec
push
add
add
mov
pop
je
outsb
push
cmp
mov
jmp
push
sbb
outsb
rolb
sub
push
mov
fwait
enter
fnstsw
cmp
pop
jmp
and
js
cwtl
sbb
into
iret
ret
mov
aad
shll
jae
mov
filds
jno
aad
push
movsb
cltd
incl
adc
mov
outsl
daa
dec
inc
cmpsl
jp
pushf
cmp
rcrb
mov
shl
aaa
adc
dec
add
jle
stos
incb
xor
sahf
jo
gs
jb
sub
aaa
xor
fmull
lret
out
icebp
pushf
js
xchg
mov
or
or
shrb
jmp
imul
mov
xchg
cmp
inc
pop
rorb
lahf
daa
dec
mov
sub
scas
mov
push
mov
test
pop
inc
je
pusha
test
jnp
pop
mov
xlat
cmc
fwait
xchg
jae
fildll
inc
das
mov
pop
mov
inc
xchg
movsl
sarl
mov
js,pn
sub
xor
fs
movsb
push
mov
fisubrl
push
lock
cmp
cmpsb
lret
push
mov
rcr
jnp
out
fnsave
sub
ret
shr
jge
inc
pop
imul
popa
fs
xchg
rcll
daa
jmp
dec
xchg
lret
scas
pushf
add
clc
or
testl
dec
int
add
push
outsb
or
sbbb
lahf
movsb
mov
out
mov
and
rcrb
lds
jno
nop
test
inc
out
xlat
inc
andl
insl
pop
in
and
out
daa
sbb
xchg
stc
popf
out
pushf
sahf
push
lret
cltd
sub
mov
stc
or
addr16
out
scas
jle
outsl
sbb
cmp
mov
inc
out
je
aad
or
mov
dec
ret
gs
data16
fstpt
xor
pop
xchg
xchg
push
sbb
mov
sbb
test
into
cmpsl
insb
inc
jmp
mov
jmp
pusha
push
test
fcompl
bnd
pop
popf
push
inc
add
inc
outsl
js
arpl
sbb
adc
gs
flds
daa
cmpsb
cwtl
mov
add
mov
inc
sbb
cld
out
xchg
sbb
jno
dec
cmp
mov
and
ret
dec
dec
fwait
outsb
or
lcall
lds
dec
fs
dec
xor
jl
ret
lret
xor
sahf
mov
mov
xor
inc
adc
xchg
cmc
jecxz
daa
xlat
push
movsb
loope
repz
ljmp
lret
adc
pop
out
sbb
or
cwtl
and
cmc
sbb
lret
mov
sub
cmp
popf
out
sub
xor
adc
sub
mov
jge
and
fwait
stos
pop
or
inc
sbb
mov
icebp
xorb
sbb
icebp
std
jp
lods
mov
jge
in
lods
imul
loop
xor
shlb
jle
xor
repnz
push
adc
pop
xchg
int3
lcall
cmpsl
sub
and
pop
push
xchg
sub
pop
sti
jmp
mov
cli
incb
scas
xchg
mov
int3
jnp
push
test
mov
dec
sti
cltd
lahf
cmp
xor
mov
fnstenv
sbb
sub
negb
mov
cmp
lock
scas
fcmove
push
jnp
mov
or
clc
inc
jp
clc
stos
movsl
clc
mov
mov
repz
dec
xor
cwtl
sbb
xchg
or
adcb
xor
cltd
adc
add
or
or
inc
mov
cmp
scas
sbb
ror
fdivs
sub
sub
adc
mov
into
jge
dec
dec
fstpl
push
bound
ja
mov
imul
dec
sbb
xchg
jnp
fs
add
jne
fdivrp
sbb
jb
inc
inc
and
sar
sub
lods
clc
xor
mov
test
in
inc
fidivl
in
in
test
cmpsl
adc
jle
mov
jno
push
cmp
add
fcoml
cmp
aad
cmpsl
push
and
push
loope
or
loope
aaa
dec
jno
adcl
mov
scas
nop
icebp
cli
or
mov
push
cwtl
fnsave
popf
add
cltd
fwait
cld
inc
mov
add
in
xchg
rep
stc
pop
xor
pop
pop
jb
jo
pop
orb
jl
repz
inc
or
mov
fmuls
inc
mov
add
addr16
or
mov
ret
outsl
adc
xchg
mov
in
mov
inc
adc
std
xchg
pop
ss
push
ret
cwtl
fcmove
fistps
add
sbb
inc
imul
add
ret
jmp
ljmp
shl
ret
jl
push
push
movl
pop
rcr
inc
adc
cmp
js
pop
pop
xchg
rcrb
ljmp
push
xchg
mov
cmp
pop
mov
adc
mov
imul
negl
inc
add
cld
lret
mov
out
lret
mov
and
cmp
stc
repnz
in
mov
mov
xchg
cmpsl
clc
iret
repz
aas
lcall
cld
leave
mov
sbb
xor
add
adc
adc
movsl
out
mov
xchg
sahf
les
and
hlt
repnz
inc
cmp
imul
cmp
jge
jmp
pop
pop
arpl
push
dec
sub
xor
call
cs
andl
push
and
dec
pop
xchg
mov
xor
mov
jle
lock
pop
addb
push
aas
push
and
negl
icebp
pop
shl
ja
xchg
jmp
loope
outsb
setl
js
jnp
sub
repnz
cmp
adc
imul
repz
mov
mov
icebp
ret
outsl
out
push
and
and
jg
xchg
ja
add
sub
pop
add
ret
push
test
jl
lock
pop
arpl
inc
fs
icebp
adc
stos
mov
pop
dec
cmp
fwait
js
daa
shll
mov
in
push
mov
push
fnsave
pop
cwtl
and
jg
add
stos
mov
xor
xchg
push
scas
pop
jo
fbld
mov
jmp
jge
sbb
sub
sub
pop
ljmp
sar
fidivrs
fs
xchg
sub
sub
daa
mov
pop
jb
mov
and
pop
or
pop
or
and
dec
mov
pushf
aad
lock
icebp
add
sti
sbb
xchg
push
mov
shlb
mov
adc
out
sbb
call
adc
push
xchg
sbb
test
das
lret
pop
fistps
mov
push
cmp
fildl
loope
das
inc
subb
cmp
dec
dec
xchg
stc
or
and
sbb
pop
or
data16
and
rcll
ja
inc
stc
xor
inc
jo
or
movsb
out
stos
jge
pusha
in
inc
popf
jno
mov
mov
xchg
mov
into
ret
lods
cmpb
divl
xor
push
fwait
or
roll
sub
pop
xor
pop
das
aam
push
or
mov
mov
lods
cmp
insl
sub
xor
add
lret
inc
add
inc
jns
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
call
lret
adc
jp
leave
fs
add
clc
adc
mov
pop
add
inc
push
in
mov
scas
jnp
jg
gs
enter
pop
mov
xor
repnz
xor
push
ja
pop
mov
shlb
mov
push
xorb
jnp
push
sub
lret
inc
pushf
cs
mov
lods
jne
and
mov
sub
push
add
fcomps
sub
ljmp
adc
mov
out
repnz
fdiv
cmc
inc
sub
push
lods
xor
adc
ss
adc
push
loope
daa
test
imul
shll
mov
pop
in
push
xchg
ret
add
jae
popa
xor
out
sarb
divb
leave
ja
notl
stos
inc
inc
and
dec
push
cs
ja
jno
in
add
adc
xorl
xchg
cltd
in
jp
mov
jle
sbb
inc
stos
addr16
ss
or
cmc
out
fdiv
pop
call
fwait
nop
icebp
xor
das
push
mov
mov
aam
pop
mov
movsb
scas
jnp
inc
lds
lea
add
imul
mov
xor
aam
loope
ret
pop
cmpsl
mov
int
adc
addr16
mov
jl
jge
fists
or
pop
dec
test
negl
push
xor
add
cmpsb
push
mov
stos
push
scas
loope
cwtl
mov
loopne
mov
sub
ljmp
pusha
mov
jns
and
pop
lock
std
inc
jns
xorl
adc
mov
mov
in
popa
push
popa
jmp
hlt
dec
clc
and
sub
js
xchg
or
pop
xor
sub
push
out
enter
and
mov
mov
das
popf
aam
jle
scas
xor
in
sub
add
cli
arpl
xor
in
das
mov
mov
data16
jbe
arpl
mov
xchg
mov
aas
pop
mov
xlat
sbb
push
daa
data16
arpl
mov
push
push
mov
sbbl
mov
mov
sarl
push
pusha
pop
jae
mov
ret
sbb
cmp
outsl
nop
inc
ret
fbstp
lahf
fs
les
shll
inc
iret
pop
jp
fldenv
mov
out
jecxz
data16
mov
scas
lods
mov
push
imul
sti
inc
hlt
pop
daa
popa
xchg
bound
add
mov
dec
push
mov
cmp
cwtl
mov
icebp
sub
es
mov
in
jne
fs
xor
inc
ljmp
push
std
sub
fnstsw
fistpll
xor
jg
mov
inc
dec
out
std
cld
ret
add
fidivrs
push
push
mov
sub
into
mov
sub
cmp
sarb
popf
lods
or
jnp
movsb
cmp
rcll
push
inc
mov
pusha
int
stos
ljmp
repnz
dec
and
orb
imul
movsb
sbb
pop
in
pop
inc
push
cmpsb
hlt
sub
dec
enter
add
dec
xor
inc
or
inc
or
xor
and
shlb
add
and
pop
movsl
in
repnz
adc
adc
in
adc
inc
sub
aas
ret
scas
shll
mov
jl
sbb
decl
mov
cmp
leave
xchg
push
mov
jmp
sbb
sub
fstpl
mov
and
jno
cmp
jo
mov
cmp
in
jbe
jo
mov
fcmove
add
add
insb
jle
mov
leave
push
fsubs
daa
mov
cld
leave
push
in
jb
or
and
jno
or
adc
jl
ret
mov
cwtl
and
jbe,pn
mov
clc
pop
add
loope
sub
lods
imul
js
adc
sahf
call
lods
mov
jne
shlb
push
jmp
sub
xchg
jg
in
and
xor
daa
inc
xor
pop
pusha
cmp
push
jmp
xchg
lea
sub
or
lods
pop
pop
mov
in
and
in
cli
xchg
cltd
outsl
or
rcrl
ds
pop
fmull
xchg
mov
test
inc
mov
retw
xor
mov
dec
xor
loop
and
dec
ljmp
out
jge
mov
push
xchg
push
mov
pop
repz
lods
and
or
xchg
mov
xor
mov
inc
jno
repnz
lods
fs
mov
cmp
stos
loope
rcrl
test
bound
and
outsb
dec
push
pop
mov
jg
addr16
rcll
adc
mov
cmpsb
xchg
popa
pushf
addr16
adc
nop
les
in
enter
xchg
push
mulb
cmp
inc
mov
cmp
loope
sub
mov
inc
and
cwtl
nop
jecxz
mov
xor
sbb
movsb
fstl
inc
out
mov
cmp
cmpsl
mov
sub
fwait
and
pop
pop
dec
jmp
sbb
xchg
shll
pop
out
add
xor
mov
aas
push
or
sub
test
adc
fldenv
xor
mov
cmpsl
or
dec
ficompl
mov
pop
icebp
outsb
cmp
xor
in
add
imulb
xor
fnsave
xchg
mov
mov
push
and
flds
clc
lods
cmp
bound
bound
and
inc
nop
push
in
push
js
adc
push
lds
inc
jo
lahf
cmp
fisubl
adc
jb
mov
xchg
lret
daa
push
subl
ss
adc
adc
pop
inc
cmpsl
leave
stc
call
jmp
insb
xlat
test
sub
les
add
pop
mov
mull
loope
mov
insb
cmpsl
repnz
in
leave
ss
mov
ss
aad
pop
rcl
aad
xor
les
mov
lds
daa
pushf
mov
mov
mov
or
push
mov
insb
cmpsl
or
lods
sub
or
cmp
nop
xor
jb
loopne
jno
xor
jns
into
sbb
mov
icebp
data16
mov
xchg
pop
jb
pop
daa
cmp
pusha
cs
gs
xchg
jnp
adc
jle
enter
in
sub
xor
dec
dec
mov
xchg
jbe
sbb
cli
mov
nop
jg
loop
hlt
loope
sbb
push
addr16
or
insl
jp
or
fwait
lods
inc
adc
flds
cld
push
je
lret
shll
lcall
inc
pop
clc
lahf
out
loopne
cmp
clc
mov
xor
lcall
cmp
or
shlb
test
sub
lock
js
ret
lock
aam
and
lods
adc
cmc
imul
int
ss
adc
lahf
sti
lods
popa
data16
insl
sub
cmp
push
sbb
mov
filds
mov
jmp
es
ss
sbb
sbb
xlat
mov
and
clc
push
cmpsl
add
pushf
jecxz
lret
adc
outsb
lret
fwait
sbb
std
pop
cmp
jl
popa
ret
cli
outsl
or
ret
mov
pop
loope
pop
mov
mov
sub
mov
sub
mov
cmpsl
push
jae
outsl
cld
mov
or
add
dec
sarl
sbb
push
push
push
add
jne
test
mov
sub
xchg
test
lock
dec
ja
daa
fisubl
popa
or
rcrb
and
insb
cltd
lret
mov
jecxz
mov
or
xor
pop
incl
or
inc
pop
mov
rolb
insb
jne
arpl
add
dec
cltd
mov
and
pushf
jge
aad
and
pop
push
pushf
mov
sbb
adc
nop
push
sub
repz
dec
jo
xchg
xor
inc
jp
xchg
out
dec
lahf
rcll
inc
mov
jg
fstpl
std
int
xor
call
push
mov
leave
adc
mov
or
pop
adc
and
cmp
jmp
ja
sbb
int3
test
enter
jnp
test
push
jne
iret
ficomps
push
sbb
pop
sbb
sub
in
inc
scas
adc
cmp
cwtl
cmp
xchg
insl
adc
mov
pop
clc
pop
mov
sti
imulb
std
arpl
icebp
popf
xchg
dec
mov
push
inc
cmpsb
das
int
mov
xor
or
in
sbb
mov
mov
fs
test
push
mov
cmp
mov
mov
mov
xchg
lods
cmp
push
push
andb
mov
or
lock
ja
xchg
popa
xor
sahf
sarb
xchg
push
lock
loope
mov
cs
jg
lahf
in
jae
add
mov
hlt
cmp
and
iret
mov
out
xchg
sti
pusha
adc
add
call
add
jle
rcrb
adc
mov
jmp
fidivrs
sbb
lods
dec
cmp
subb
sbbb
mov
adc
cmpsb
adc
in
lret
stc
cmp
xorl
push
mov
test
ja
lods
sbbb
mov
fsqrt
stos
dec
call
mov
lds
cmpsb
addr16
xchg
xor
pop
mov
lahf
xor
pop
mov
lcall
mov
push
or
sbbb
popa
push
push
arpl
mov
push
push
and
sub
push
popl
mov
lods
loop
loope
sub
sub
cmp
inc
std
xchg
pop
pushf
push
aam
pop
insl
fidivrl
icebp
pop
movsl
sub
cmc
daa
pop
cld
pop
jecxz
jae
sub
xor
adc
dec
or
sbb
push
inc
xor
dec
sarb
pushf
aas
push
sti
jl
push
loope
aad
sahf
aam
add
dec
test
jge
add
sbb
rcr
xor
inc
div
xchg
xchg
jne
pop
in
sbbb
sbb
xchg
inc
mov
jnp
cmp
test
xchg
scas
push
push
mov
cld
xchg
push
dec
sbb
repnz
sbb
test
inc
adc
addl
jns
push
clc
inc
mov
pop
aad
adc
call
les
sbb
or
out
adc
lret
cld
stos
gs
inc
jl
inc
popa
xchg
aas
push
das
sbb
lds
lds
roll
xor
shll
test
bound
sbbl
lcall
in
adc
lret
inc
faddl
sbb
out
mov
rcr
mov
xor
icebp
clc
or
outsl
ds
xor
outsb
sub
dec
sbb
push
pusha
xor
or
mov
sbb
sbb
jle
mov
in
ss
psrlq
aaa
sbb
and
lcall
add
shrl
or
ss
sbb
orb
jbe
adc
sbb
movsl
xor
ljmp
paddusw
xor
adc
pop
movsl
int
int
add
cmpsl
pushf
and
leave
pop
outsb
inc
and
xor
ljmp
bound
repz
popf
out
or
or
inc
mov
jnp
sbb
jno
add
sub
ret
scas
les
sub
add
xor
mov
or
push
inc
sbb
mov
ret
jmp
clc
or
mov
call
xlat
out
mov
fistpl
push
bts
sub
aam
dec
adc
pop
and
adc
jecxz
mov
pop
pop
xor
cmc
xchg
mov
or
mul
jnp
in
mov
mov
or
test
into
xchg
inc
imul
stos
adc
cmp
and
in
gs
and
sbb
push
test
mov
je
mov
test
das
and
fldcw
push
nop
icebp
outsb
dec
cmpsl
inc
adc
in
xchg
xchg
xlat
inc
icebp
inc
cli
pop
add
loop
fbstp
jl
imul
lds
pop
inc
fnstenv
dec
pop
ret
dec
ja
sub
jmp
arpl
pop
mov
sub
cmp
pop
inc
dec
shrb
in
out
xor
pop
and
push
sbb
int3
rcll
scas
mov
mov
cwtl
jle
adc
push
sbb
sub
loop
enter
jecxz
clc
out
or
fidivs
pop
xchg
out
in
jns
adc
cmpsl
jae
mov
enter
pusha
inc
fisubrs
icebp
test
pushf
dec
leave
das
lret
div
and
dec
into
mov
shl
pusha
mov
call
fcmovne
xchg
sbb
sbb
sub
xor
fst
stos
mov
mov
test
mov
insb
popa
enter
in
cs
jg
adc
jg
enter
rcll
push
out
in
push
stc
xchg
push
pop
outsb
in
push
mov
add
xchg
out
ds
repz
add
daa
pop
xor
sub
aas
popf
test
stc
les
lods
nop
sarl
adc
cli
ret
cmp
cmpsb
pop
shlb
or
xchg
mov
js
mov
add
cmp
push
adc
arpl
test
rolb
xlat
add
jno
xchg
sqrtps
iret
cwtl
out
dec
popf
jp
jns
repz
xchg
mov
popa
pop
je
jae
lret
pop
cmpsl
imul
pop
hlt
popl
ja
ja
lcall
mov
mov
sbb
xchg
iret
and
insb
pop
andl
mov
movsl
testb
outsl
es
mov
and
aaa
mov
loope
jl
mov
pushf
enter
stos
add
inc
insb
mov
xlat
and
cmp
nop
jmp
pusha
loope
fistpl
adc
leave
scas
xchg
test
outsl
fidivl
cltd
sub
aam
push
cmp
iret
enter
mov
sbb
loop
push
jno
sbb
and
or
lret
dec
sbb
lahf
adc
popl
jns
arpl
mov
lret
cli
lea
sbb
nop
push
sbb
ja
adc
loopne
mov
test
pop
pop
fcoms
or
popa
xor
lods
mov
nop
xchg
xor
lods
jo
cld
inc
loop
gs
cmpb
int
mov
inc
or
mov
adc
sbb
and
xlat
aad
add
nop
jp
sub
jg
test
and
inc
dec
sub
inc
lret
cmp
mov
scas
pusha
dec
xor
pop
loopne
mov
lcall
push
jne
sbb
jg
in
lahf
jmp
aaa
div
mov
pop
push
or
movsl
lea
adc
sahf
popa
xor
cld
xor
std
add
pushf
ret
cmp
pop
add
dec
and
pop
pusha
aas
fiadds
mov
push
add
mov
and
sub
adc
repz
scas
or
xchg
push
or
sar
imul
sub
jne
xor
sbbl
ds
sub
arpl
mov
xchg
xlat
mov
inc
nop
fildll
adc
jo
loope
or
mov
ss
outsb
or
std
popa
add
iret
xor
or
pop
xchg
add
data16
arpl
xlat
add
push
sbb
aad
popa
jns
dec
sub
out
xor
jmp
lock
scas
mov
fcomps
dec
pop
sbbb
popa
cwtl
notb
ljmp
scas
leave
sar
dec
jne
mov
push
test
cltd
adc
pop
rcrb
insl
test
push
adc
ljmp
outsb
push
sbb
sbb
or
push
aaa
and
jmp
in
inc
pusha
jl
andb
sub
cwtl
inc
sbb
out
cmc
add
movsl
jg
push
lret
mov
pop
bound
push
add
pop
xchg
loope
rorl
dec
cld
xchg
xchg
mov
fldcw
scas
test
out
mov
push
in
fs
andl
adc
roll
adc
sbb
dec
subb
mov
xor
shlb
les
xor
pop
jae
jmp
or
into
xor
push
lds
xchg
xchg
add
clc
xchg
sub
popa
adc
jecxz
mov
imul
xchg
cmp
xchg
ret
cmpsl
and
pop
je
mov
gs
xor
popa
mov
push
cmp
mov
and
dec
add
dec
add
ret
out
mov
aad
push
leave
ja
jmp
pop
jbe
jl
js
scas
sbb
push
in
inc
int3
mov
xlat
lret
push
aad
pop
aam
mov
cmp
out
mov
cli
pop
daa
ret
shlb
pop
pop
inc
jo
pop
lods
shlb
cltd
cmp
push
adc
sub
imul
mov
mov
jg
adc
bound
iret
neg
jns
lock
test
stc
or
clc
notl
jo
sub
mov
lds
popa
cmp
adc
test
leave
push
xchg
rorb
insb
mov
imul
jae
sub
fdivl
mov
test
mov
fdivrl
inc
pop
js
jae
dec
lret
sbb
jo
lds
xchg
fsubr
and
je
cs
cmp
in
insl
sbb
adc
pop
sbb
xor
scas
notb
sarl
push
sbb
xlat
divl
jo
mov
enter
rol
inc
dec
call
sbb
push
sbb
sbb
push
and
add
mov
cwtl
cmpb
sub
cmp
or
roll
and
add
dec
lock
inc
sbb
mov
xlat
sub
add
cmc
dec
shll
aad
out
pop
jl
xchg
loope
sbb
popa
mov
out
lcall
adc
fucomip
repz
dec
xchg
roll
pusha
xchg
std
adc
or
icebp
popf
lret
pusha
fmull
fidivrs
push
cmp
orb
mov
and
mov
pop
ds
daa
in
cmp
mov
movsl
js
mov
mov
cmp
dec
add
mov
leave
and
out
push
sbb
adc
ret
sub
mov
int
in
cmp
scas
jecxz
cmp
movsb
mull
adc
adc
insb
movsb
dec
xchg
and
pop
int3
fs
popf
pushl
cld
pop
inc
leave
cli
stc
mov
sub
out
in
pushf
adc
arpl
cmp
mov
lods
clc
or
xchg
xchg
mov
mov
adc
fimuls
pusha
enter
dec
add
and
inc
fimull
mov
lret
fcompl
lea
out
push
rcl
setno
test
dec
outsb
imul
js
xchg
xor
das
pushf
add
movsb
sbb
pop
and
mov
addl
or
or
imul
or
mov
mov
mov
push
cmp
xchg
fisttpll
push
xchg
pop
mov
inc
roll
push
int3
lds
je
push
push
xlat
mov
rcrl
dec
or
sbb
push
rorl
sub
sub
xor
stc
push
call
loopne
out
pop
mov
sti
sarb
mov
int
cmpsl
shl
movsl
rorl
mov
lods
iret
lods
out
or
and
les
mov
cmc
movsb
js
pop
sub
pop
jbe
lds
cltd
outsl
xchg
push
loopne
scas
jne
test
insb
sti
mov
ficompl
mov
mov
xchg
xlat
xor
push
pop
inc
mov
xchg
lds
mov
addr16
jmp
xlat
mov
sub
pop
mov
cmpsb
inc
push
pop
lock
cli
mov
scas
push
sbb
jge
or
dec
lods
lret
xchg
inc
ficomps
jae
ljmp
sbb
stos
sbb
mov
jp
roll
mov
cmpl
jns
adc
loop
jecxz
int3
push
adc
cmp
push
fsubrl
or
loope
pop
push
sbb
cwtl
test
mov
cmp
add
aaa
inc
jb
push
dec
cmp
xlat
xorb
dec
xchg
pushf
das
and
pop
adc
sub
int
popf
dec
sbb
ljmp
subb
xor
sub
mov
cmpsb
sub
mov
test
or
icebp
pop
mov
sub
sbb
loope
shl
sub
push
imul
stos
mov
cltd
pop
mov
dec
insb
mov
movsl
aas
mov
mov
inc
sub
sub
das
jecxz
lret
cmpsb
xchg
test
jo
sub
adc
aam
mov
bound
pushf
in
push
xor
call
inc
cli
fldcw
test
imul
mov
add
fwait
out
push
mov
leave
imul
aaa
ds
fildl
mov
arpl
pop
sbb
cmp
inc
call
mov
cli
xor
test
pop
insl
mov
in
call
xor
xorb
scas
mov
fmul
and
adc
xor
jge
push
fildll
aas
stos
ds
lcall
inc
ds
mov
movsb
dec
js
pop
jns
mov
hlt
fdivrp
dec
cmpsb
mov
add
cli
jo
lahf
enter
add
mov
dec
xchg
fisubs
or
arpl
andb
fcmove
mov
xor
loop
mov
push
xchg
sub
push
push
lds
lods
add
adc
clc
call
frstor
adc
cmp
lcall
bound
cmp
xor
loopne
push
jo
xchg
mov
movsl
stc
sbb
shll
fstps
mov
mov
mov
or
or
cmpsl
push
das
mov
imul
xchg
cs
roll
enter
in
inc
or
mov
int3
pop
push
scas
stc
pusha
mov
fwait
mov
push
pop
mov
test
pop
mov
sahf
lcall
sahf
jb
mov
jge
mov
inc
cli
mov
adc
test
xor
xchg
cwtl
repnz
xchg
out
leave
mov
cld
mov
adc
mov
cmpsl
mov
add
call
shr
ret
or
push
popa
mov
js
add
or
in
xchg
ss
mov
xchg
xchg
jnp
inc
insl
jmp
push
mov
mov
jecxz
xchg
shlb
push
lcall
cltd
push
add
int
and
dec
mov
mov
mov
sub
sbb
mov
rcl
mov
push
and
sahf
dec
push
movd
adcl
stc
pop
insl
imul
out
inc
or
sti
pop
mov
gs
sbb
xchg
call
add
dec
jno
jp
js
jno
fstpt
push
stos
popf
cld
xlat
xchg
add
inc
frndint
pop
pop
sub
jge
lcall
je
mov
push
mov
test
pop
movsl
inc
int3
push
lods
cmp
addr16
fimull
inc
test
es
sbb
or
adc
dec
cld
fiadds
adc
cmp
sub
sbb
pop
inc
sub
std
fwait
aad
xchg
push
jle
and
aaa
jmp
ret
addb
jge
mov
push
xor
push
mov
dec
adc
jnp
cmp
mov
pop
outsb
jbe
cmpsl
mov
out
inc
push
out
mov
dec
xchg
cmp
sub
dec
repz
out
push
sahf
mov
or
mov
bound
mov
cmpsb
scas
lahf
sub
jo
loopne
lahf
and
int
dec
or
cmp
cmpsl
adc
jg
lock
test
push
out
iret
in
mov
popa
lcall
je
mov
lods
inc
nop
inc
ficoms
mov
push
push
sbb
les
jecxz
lods
dec
fcoml
stos
push
aad
xor
and
pop
dec
rclb
push
bound
in
jp
and
push
leave
cmpsl
mov
sahf
cwtl
xchg
jge
arpl
in
push
add
repnz
fcomps
mov
cmp
push
jg
sbb
fdivp
xchg
dec
in
pop
jecxz
mov
pushf
mov
pop
and
pop
test
jmpw
mov
xor
lret
push
jmp
lods
push
cmp
cmpsl
pop
in
push
dec
mov
pop
cmp
inc
xchg
cli
cmc
pop
inc
cmc
pop
into
mov
xor
push
test
les
jl,pn
mov
dec
jcxz
std
mov
or
mov
cmp
hlt
xor
shl
dec
sub
movsb
lret
inc
xor
test
inc
xor
rol
jp
mov
pop
fs
cmp
and
cmp
mov
push
jecxz
jne
arpl
inc
cmp
mov
mov
mov
loope
das
mov
xor
das
jp
cmp
sbb
xor
ja
pop
mov
push
fsubrs
rol
das
ficoms
popf
mov
sbb
inc
iret
loopnew
pop
xchg
mov
scas
or
sbb
hlt
push
adc
and
mov
jae
jp
xchg
out
mov
mov
mov
fs
lds
ss
dec
pop
lods
and
clc
dec
sbb
incb
cmp
mov
and
icebp
call
dec
idiv
and
scas
lret
rcl
pop
ficoms
lea
mov
add
xlat
fsub
shl
test
pop
mov
xor
hlt
hlt
scas
sbb
insl
pop
xchg
aas
jb
xchg
pop
lret
in
pop
pop
rclb
repz
jns
fstps
or
push
fists
and
ret
pop
out
fsubrl
jb
lahf
ja
jge
sbb
ljmp
xorl
lock
pop
jne
push
jge
mov
lods
pcmpgtd
mov
mov
cmp
inc
outsb
pop
mov
jle
aas
xchg
int3
add
add
test
xor
or
mov
cli
and
bound
push
shl
arpl
in
negb
rorb
mov
mov
xchg
enter
cld
mov
and
negl
hlt
ficomps
push
out
add
cmc
inc
nop
pop
pop
xor
gs
rorb
icebp
push
ror
in
inc
mov
lret
lahf
hlt
sub
dec
aaa
stos
mov
pop
cmpsl
add
data16
loope
in
mov
xor
cltd
sub
pop
mov
xchg
lock
movsl
lahf
or
mov
stc
sbb
xor
xchg
mov
cmp
push
xchg
rorl
in
add
and
cli
cmp
pop
das
xchg
dec
jmp
ret
addb
push
xor
mov
or
lea
and
jp
hlt
int
les
dec
in
into
push
xor
jbe,pn
jnp
scas
pop
cmpsb
int
in
fucomp
pusha
je
testl
repz
dec
lret
pop
jge
popf
pop
fists
fisubl
push
cmp
mov
dec
aad
stos
push
cmp
sahf
enter
push
jmp
nop
jecxz
sub
jecxz
push
pop
das
nop
or
out
bound
xor
gs
jmp
test
push
pop
hlt
or
aaa
add
jecxz
cmp
addr16
jmp
stos
sub
or
enter
fsubrl
je
aas
adc
pop
mov
loopne
mov
stos
scas
lods
mov
iret
push
test
pop
popf
xchg
pop
xchg
in
int3
jge
loope
adc
jl
pop
push
sbb
push
les
fwait
xlat
in
mov
pusha
adc
lds
dec
aas
adcl
mov
popa
popf
ret
insl
sti
jp
mov
shrb
adc
data16
push
bound
adc
mov
lret
fucompp
int3
and
lock
add
inc
dec
pop
mov
inc
cmp
popa
and
xchg
or
jne
mov
and
push
in
movsl
sub
jp
pop
sub
das
xorb
cwtl
shll
lods
push
in
scas
cmp
xchg
ret
out
mov
into
lods
jns
std
arpl
jmp
mov
nop
mov
ja
sub
add
dec
xchg
lods
sbb
sbb
lods
scas
mov
mov
xchg
add
shlb
mov
cmp
in
and
loope
fnstenv
cmp
out
shll
iret
les
jns
mov
int3
and
and
and
cmp
loop
hlt
movb
ret
mov
lods
push
jno
aas
fsubl
push
mov
insl
mov
xchg
lret
mov
jle
out
ss
ljmp
pop
pushw
rcl
rclb
daa
and
aaa
mov
add
aam
pusha
aaa
cmpsb
xchg
popf
jge
sub
int3
stos
mov
jno
mov
adc
add
adc
lds
inc
out
inc
mov
sbb
sahf
jns
jge
mov
rcll
push
and
cltd
pop
cmpsl
inc
mov
mov
lock
xchg
push
out
xor
dec
mov
adc
mov
jb
pop
int3
inc
in
adc
fdivrs
cmc
je
loop
std
pop
sub
pop
cmp
icebp
jg
adc
movsb
push
jmp
jp
dec
rorl
jno
lahf
push
popa
push
cltd
xchg
cmp
test
mov
jno
sti
add
roll
lcall
jmp
lods
ret
xchg
jecxz
mov
bound
mov
push
xchg
xor
adc
pop
cmpsb
leave
and
push
push
aam
jl
cmp
xchg
imul
jmp
add
fcmovne
out
xchg
pop
mov
aam
and
add
clc
add
imul
aas
push
notb
stos
jne
imul
adcl
test
adc
dec
xor
out
sbb
aam
lcall
jl
hlt
arpl
xchg
pop
mov
and
mov
jns
das
aas
sub
sbb
mov
aad
fcmove
adc
loope
addr16
sbb
in
mov
and
int3
data16
pop
xor
adc
or
or
pop
sub
mov
repz
fwait
pop
pop
xor
pop
cmp
movsb
fistpll
mov
jl
mov
push
test
lods
add
cli
dec
jne
mov
xchg
les
xor
jg
adcb
sbb
xorl
xor
mov
jbe
sub
std
jo
outsb
xchg
cmp
mov
mov
movzwl
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
sti
pop
jno
data16
jp
adc
jp
jne
jnp
mov
or
xlat
mov
icebp
fldt
inc
sub
push
fiadds
jnp
cmp
hlt
push
push
xor
ret
jle
popa
mov
fisubl
loope
mov
inc
sub
mov
push
imul
ljmp
add
lret
rclb
pop
popa
movsl
aad
insb
adc
mov
cmp
mov
cmpsb
sti
ret
sbb
xor
push
sbb
mov
add
push
push
pushw
inc
testl
inc
sbb
jecxz
fisubrs
mov
ret
xor
data16
cs
pop
jns
jbe
addb
pushf
rcl
aaa
mov
adc
ss
dec
movsb
mov
scas
jae
push
mov
mov
xor
inc
jnp
and
or
push
push
jnp
pushf
jo
mov
scas
xor
push
fldt
sub
xor
push
pop
inc
in
cmp
jno
mov
fsubrs
xor
shll
gs
lret
mov
mov
pop
adc
push
imul
enter
sbb
xlat
sbbl
push
lcall
dec
mov
sbbl
sub
arpl
stc
mov
fbld
pop
imul
imul
out
cli
shll
loope
outsb
mov
into
test
mov
pop
and
mov
or
xchg
pop
mov
or
lret
push
lods
out
shlb
cmp
es
movsb
test
xchg
sbbl
fstps
pop
pop
xorb
jbe
push
sub
in
ja
push
and
out
hlt
xor
test
loopne
jp
xor
call
pop
cli
sbbl
mov
dec
mov
or
insl
mov
sbb
adc
push
lahf
pop
insl
mov
xchg
mov
add
push
lahf
add
sub
loop
enter
sub
out
sbb
push
jp
push
cmc
rolb
xor
notl
push
arpl
and
push
nop
fdivrp
mov
pop
addr16
cld
or
ljmp
cmp
lret
sub
hlt
sbb
sbb
leave
dec
ljmp
inc
add
jmp
hlt
or
jae
or
sbb
and
jle
jno,pn
rcrl
int3
xchg
fwait
add
xor
pop
pop
lds
subb
sbbl
mov
inc
mov
sbb
sbb
pop
inc
fs
hlt
push
dec
push
and
cmp
jnp
pop
pop
test
sahf
and
xor
ret
lea
lock
dec
popf
sub
ljmp
shll
cld
roll
loop
jbe
loop
ficoml
sub
ds
bound
das
je
fcompl
jg
xor
pop
stc
sub
push
jle
pop
ja
mov
in
aam
adc
scas
and
push
add
jl
scas
cld
sbb
xchg
mov
and
jp
cmc
jmp
fwait
mov
add
fldl
jmp
fs
mov
je
fstpl
and
in
test
test
pop
test
pushf
push
pop
push
sahf
aam
and
fstl
inc
mov
shl
in
je
cmp
stos
jnp
pop
mov
call
ret
dec
pop
ss
daa
sbb
push
in
repz
xchg
movsl
lods
jbe
pushf
xchg
in
mov
adc
xchg
shll
shrb
lret
jmp
dec
add
and
and
dec
gs
push
adc
cmp
jecxz
pop
repz
insl
push
or
inc
push
roll
mov
mov
cmp
neg
lods
jae
mov
in
adc
repnz
adc
lods
xlat
pop
lock
mov
gs
jp
stos
in
jo
push
xchg
push
popf
add
pusha
or
fcompp
sub
dec
inc
xor
imul
and
enter
sti
fldl
add
inc
push
iret
xchg
repz
int
jmp
dec
sbb
jo
icebp
inc
or
xor
mov
fidivs
int
pop
push
fimuls
ljmp
movsl
out
sbb
jnp
cltd
lods
push
jb
in
mov
int3
lds
mov
mov
sbb
jg
add
mov
stc
cmpsl
insb
sarl
lock
sarb
shrb
cmpsb
jp
out
mov
rcl
clc
mov
movsb
repnz
add
stc
sbb
fisttpll
ret
push
cmp
fimuls
dec
add
inc
pop
sbb
xor
ficomps
and
inc
jne
divb
xchg
and
hlt
iret
pushf
ss
xchg
sbb
and
pop
xchg
fistpll
int3
and
mov
je
fdivr
pop
lcall
mov
fs
scas
inc
fiadds
in
mov
movsl
sahf
pusha
das
cmp
jnp
mov
ss
sbb
jg
mov
in
adc
cmpsl
cmpsl
mov
idivb
pop
fdiv
loope
test
imul
xchg
in
mov
sub
movsb
sahf
xor
mov
movsl
adc
stos
mov
push
cli
mov
or
and
iret
addl
cmp
popf
adc
cmp
cmc
and
stos
fwait
stos
movsl
jle
jnp
adc
ficomps
pop
shlb
or
or
loop
lcall
pop
test
mov
jbe
jns
leave
mov
and
xlat
jne
testb
lcall
dec
repnz
in
ret
push
jge
xor
dec
push
lods
dec
dec
aad
or
sub
add
jno
sbb
lds
cmp
dec
cmp
adc
jb
and
sub
add
pop
lret
jnp
push
gs
adc
lds
sub
nop
enter
lahf
inc
and
xchg
sub
outsl
aaa
scas
mov
jecxz
mov
test
xor
mov
scas
mov
mov
and
add
jnp
mov
dec
mov
sub
pop
test
outsb
mov
lret
cltd
sti
dec
in
stos
mov
lea
lods
sbbb
daa
popa
ljmp
cld
and
mov
jecxz
inc
insb
adc
and
pop
jg
bnd
lret
adc
pop
mov
mov
es
sbb
dec
out
pop
test
pop
es
or
add
js
nop
movsl
notl
xchg
ret
push
sahf
fstps
jmp
lds
xor
sub
inc
cmp
pop
cld
iret
rcll
push
sub
cli
adc
add
lahf
lods
jle
sbb
xchg
insl
sbb
add
inc
mov
mov
scas
ds
pop
scas
mov
pop
push
jb
xchg
es
fcomip
fstps
push
mov
std
mov
cs
icebp
subl
push
int
xchg
jge
jne
add
sub
ds
jb
enter
pop
push
outsl
rcll
fildll
cmp
adc
ds
jmp
in
inc
fadd
xor
call
sub
std
and
fsubr
sbb
xor
jmp
or
jnp
repz
cmpsl
jle
test
cs
dec
adc
clc
add
jg
adc
xor
push
or
insb
scas
cmp
mov
ljmp
adc
fisttpl
aam
out
loop
sarl
mov
enter
adc
jg
ljmp
and
mov
popf
xor
sub
adc
std
flds
fcmovu
lock
lods
in
push
jge
push
mov
mov
les
xor
sbb
shl
clc
xor
push
dec
xor
xchg
adc
ja
pop
nop
pop
or
loop
jge
out
jecxz
xorl
dec
or
inc
out
push
cmpsl
xchg
fadd
aad
lcall
hlt
aas
fmul
ret
mov
ja
sbb
arpl
lahf
ss
add
in
loop
jb
inc
inc
arpl
mov
in
inc
popf
addl
nop
lcall
sbb
cmc
negb
add
or
in
xchg
sbb
jge
insl
ret
negl
inc
int
js
cmpb
mov
dec
or
lret
add
mov
add
push
and
pop
jecxz
dec
jnp
sbb
xor
in
pop
adc
jmp
outsb
repz
xor
pop
inc
xor
mov
les
xchg
cmpb
ret
jg
mov
fnstenv
outsl
sbb
xor
ss
in
iret
mov
sbb
xchg
out
lods
mov
pusha
adc
jb
stc
movsb
cld
add
xor
push
shr
dec
adc
cmp
js
jo
jo
out
cmp
idiv
jns
fimull
fcmovnb
push
xchg
cmpsl
lret
pop
notb
push
jbe
out
and
mov
pop
pop
dec
or
inc
or
lret
shrl
jne
and
je
cltd
ret
dec
jg
cmc
fdivrp
and
lock
mov
fadds
gs
mov
cmp
cmp
mov
mov
pop
jo
pop
push
rclb
lea
push
ja
mov
test
in
jl
mov
flds
cmc
aaa
std
jbe
fs
cmp
mov
adc
sbb
cmp
stos
lret
inc
popf
and
sarb
mov
repz
jns
sub
pop
jg
sbb
sub
rcll
push
aad
or
pop
cmp
mov
cmp
repz
push
jle
rolb
int
lods
or
enter
shrl
ficoml
sub
pop
mov
mov
mov
mov
gs
jns
pop
jl
into
in
fwait
mulb
shlb
movsb
add
cmpsl
repnz
insl
mov
fwait
pop
dec
cwtl
jl
sbb
stos
jbe
imul
mov
lea
icebp
and
out
add
adc
dec
enter
sbb
loop
jl
push
popa
test
xchg
mov
xor
lock
jmp
ret
rcr
add
cltd
les
pop
and
sbb
push
imul
rorl
jmp
sub
sbb
jne
jp
outsl
jecxz
dec
mov
or
mov
xchg
adc
cmpsl
clc
jbe
push
jl
sbb
hlt
arpl
pop
sub
outsl
repz
lret
mov
jno
rolb
clc
in
imul
sahf
orl
fistl
fwait
loop
cmp
ja
mov
add
popf
pop
pop
iret
out
mov
jbe
cmp
out
sbb
cs
mov
test
loopne
inc
fndisi(8087
push
pop
mov
popa
loop
mov
xlat
call
mov
jb
mov
mov
les
inc
std
not
mov
addr16
mov
mov
inc
fisttpl
dec
push
popf
xor
addr16
mov
adc
ds
push
stos
cmpsl
xchg
test
and
sub
ljmp
ds
call
daa
and
loope
mov
sti
xchg
mov
dec
xchg
mov
and
dec
cs
inc
fcoms
xchg
and
xor
cmp
jae
mov
dec
inc
xor
repz
dec
sti
inc
sub
aam
inc
mov
cmp
popf
movsb
and
mov
xor
out
daa
jecxz
mov
aaa
mov
xor
jae
mov
xor
add
test
push
push
push
jecxz
out
addr16
cmpl
mov
pusha
cmc
outsb
adc
fwait
add
fs
pop
daa
inc
in
in
dec
jnp
shrl
xlat
or
in
jmp
mov
mov
fcoml
xchg
in
aaa
jns
jg
fisubl
add
add
jb
imul
xor
arpl
scas
xor
cmovl
stc
cmp
dec
adc
hlt
iret
pushf
test
repnz
stos
mov
inc
xlat
jno
or
enter
mov
and
orl
mov
popw
ja
mov
addr16
int3
out
sarl
jno
mov
testl
testl
nop
ret
leave
mov
fsubrs
xor
aas
cmpsl
test
mov
pusha
push
jmp
jne
sbb
jmp
pop
xchg
sti
cmp
addb
inc
ds
cmp
mov
or
inc
cmpsb
dec
sbb
inc
xor
fwait
jecxz
sub
mov
pop
faddp
ja
and
cmpsl
cmp
rcll
push
jmp
addb
xchg
out
inc
movsl
rclb
mov
lret
and
inc
jmp
rcrl
sub
jo
mov
xor
add
sub
push
lods
push
xchg
pcmpeqb
mov
xor
aad
insb
add
flds
push
and
add
into
out
enter
jl
add
cmp
fmulp
adc
xchg
fstl
in
loop
shr
inc
xchg
aad
int
loop
xchg
xchg
xlat
jbe
aaa
jge
push
mov
push
cmpsl
call
mov
ret
mov
dec
push
cmpsb
xchg
mov
sub
sub
shlb
inc
push
mov
roll
lds
dec
jmp
idiv
ljmp
cmp
xchg
int
jae
and
popf
adc
test
xor
cmp
call
cmp
mov
cmpsl
xchg
popa
push
adc
popa
andb
dec
and
decb
jae
xor
in
mov
jp
lods
sub
vphaddbw
movsl
push
aam
push
lea
push
push
imul
fidivl
sub
jae
les
stos
jo
dec
mov
sbb
in
sti
insb
mov
dec
xor
lret
jecxz
iret
xchg
clc
adc
roll
cmc
rcrb
and
xchg
dec
mov
pop
fdivl
imul
loope
sti
out
aam
mov
lods
fldl
roll
add
mov
nop
mov
ds
loopne
shlb
iret
inc
mov
xor
movsb
sub
fisttps
js
or
pop
push
mov
jbe
mov
cmp
hlt
adc
xor
and
mov
aad
push
mov
leave
adc
mov
pop
mov
xor
in
bnd
je
orb
insl
or
xor
movsl
xorl
lock
ficoml
push
out
in
in
push
pop
push
addr16
popa
scas
and
mov
ja
jg
jp
cmp
fidivl
fwait
popa
adc
dec
out
scas
lcall
mov
fsubrp
push
sbb
sbb
mov
sti
mov
or
in
pop
fs
and
sub
mov
add
jne
gs
fs
mov
push
insl
outsl
adc
xor
mov
mov
push
outsb
lahf
pop
jae
mov
in
push
and
jae
mov
adc
push
addr16
pop
lods
scas
rorl
xorl
add
add
fistpll
popf
lahf
xchg
add
mov
jne
fsubs
adc
es
xchg
fnsave
test
jle
adc
xor
push
mov
insl
sbb
aaa
insl
orl
imul
jb
xchg
nop
dec
mov
lret
jp
jle
out
into
sahf
mov
testb
pushf
sub
mov
push
shrl
xchg
dec
cmp
cmp
pushf
add
mov
in
arpl
mov
or
rcrb
pop
ret
les
jmp
xor
int
scas
add
add
dec
stos
jo
aam
scas
push
lods
add
mov
fcompl
cmc
or
insb
xchg
jns
lds
xchg
adc
sub
dec
jnp
dec
aaa
out
dec
and
xor
std
cmp
in
cwtl
paddq
jg
dec
mov
lahf
lcall
pushf
sbb
jae
ret
or
ficoml
and
jg
mov
ficomps
mov
sub
xor
push
daa
and
jle
dec
jbe
and
push
rcl
out
nop
cld
cmp
push
ja
jae
inc
mov
cmc
inc
pop
or
testb
mov
decb
ja
lods
or
xchg
test
push
lret
adc
jne
mov
icebp
mov
cltd
mov
cwtl
movb
lahf
leave
int
xor
inc
aaa
sbb
xchg
mul
shlb
mov
js
cmp
inc
adc
int3
pop
xchg
aas
adc
ds
loope
inc
out
loope
lret
adc
cmpsb
into
push
push
test
stos
mov
dec
lods
push
xlat
push
fisubrl
or
sub
push
adc
dec
xchg
adc
mov
adc
sub
pop
sti
cmp
out
mov
push
stos
aad
add
js
push
aad
or
or
adc
pop
mov
sub
out
cmp
mov
loope
ja
gs
lahf
xchg
pop
std
out
jne
pop
stos
clc
dec
mulb
mov
test
ds
and
addr16
outsb
jge
jp
and
lahf
into
add
shrb
mov
call
sub
into
mov
cmpb
iret
or
push
aas
nop
ljmp
pushf
and
cmp
push
add
shrb
or
imul
inc
xchg
mov
add
inc
mov
sub
cmp
ja
outsb
jecxz
les
xor
shrl
sub
hlt
and
mov
insl
test
addr16
pusha
test
repnz
xor
mov
pop
cltd
cltd
enter
dec
test
in
addr16
pusha
mov
cs
repnz
fistpll
or
cmp
andb
push
mov
push
hlt
movsb
sbb
push
push
inc
stos
inc
add
adc
out
fisttpl
cmc
or
loope
cmovge
cmp
mov
test
pusha
rorb
mov
outsb
jb
jo
push
inc
lods
fiaddl
enter
or
mov
pushf
sahf
lds
lock
cli
jecxz
jge
aaa
cmp
in
cmc
and
and
mov
or
xor
jo
sub
cmpsb
sbb
dec
data16
sub
add
dec
movl
push
pxor
jne
in
mov
std
test
insl
pop
ds
adcb
sahf
outsl
roll
call
out
xlat
or
add
push
adc
stc
jns
mov
jno
sub
xchg
repz
addb
sbb
or
test
cmp
push
arpl
and
sub
movsl
adc
pop
push
jmp
mov
jns
fildll
or
mov
js
inc
cmpsl
outsb
test
insb
sahf
xor
cmp
shlb
or
les
mov
ja
xor
pop
std
sbb
ja
repz
inc
fsubrp
jge
xor
fs
iret
cmp
jnp
pop
enter
xchg
testl
xor
aas
add
cmpsl
and
mov
xor
mov
or
subl
mov
repz
lahf
adc
mov
outsl
lock
pop
push
mov
mov
in
insb
sahf
push
idivb
push
push
test
addr16
dec
pop
jno
mov
cli
mov
pop
jmp
shrl
dec
jge
andl
push
inc
pushf
cmpsl
neg
mov
lret
adcb
lcall
inc
daa
sbb
or
dec
into
inc
xor
inc
add
cmp
daa
xor
les
mov
ret
imul
xchg
sbb
test
fistpll
and
cmpsl
cmp
mov
mov
sbb
sub
xor
mov
in
dec
jge
cli
nop
cmpsl
xor
in
jmp
es
add
mov
lea
push
add
out
shrb
std
das
gs
lods
adc
adc
dec
sub
loop
orb
sub
mov
mov
pop
dec
and
arpl
daa
jae
cltd
into
xor
rcll
push
in
sbb
ja
cmp
xchg
sarb
fdivr
push
xor
sbb
jmp
lods
nop
in
std
dec
inc
dec
jl
xchg
test
loopne
jge
sbb
gs
add
add
sub
cltd
jmp
pop
in
pop
jg
pop
xchg
test
out
mov
cmp
pusha
movsl
mov
test
call
mov
sub
rcrb
vmovaps
pop
xchg
stc
enter
jecxz
inc
pop
sbb
mov
shrl
inc
mov
dec
fsubs
movsl
push
jns
dec
sub
stos
inc
mov
addr16
stos
lock
sub
sub
stos
dec
ljmp
test
dec
test
outsl
mov
lret
mov
or
xorps
adc
stos
int3
stos
out
inc
xchg
mov
cmp
push
test
sub
fdivs
nop
jns
pop
fildl
mov
rcrb
push
sbb
test
inc
pushf
cmp
sarb
cmp
loope
nop
push
mov
inc
xchg
outsb
call
pop
enter
dec
in
pop
adc
sbb
and
inc
data16
cmp
cwtl
shrl
shrl
loope
roll
orb
pop
sbb
xlat
dec
inc
loopne
sbb
cmp
loope
sbbl
lods
or
stos
mov
dec
mov
mov
subb
icebp
push
out
pushf
lret
rorb
jbe
flds
cmp
dec
push
in
xchg
inc
pop
daa
data16
mov
outsb
xchg
mov
in
ficoms
out
nop
pusha
mov
inc
out
sbb
mov
in
mov
sbb
pop
stc
jmp
andb
jl,pt
inc
push
ja
push
push
add
shll
and
in
xor
movsl
dec
sbb
cmc
aad
sbb
and
lahf
fs
lret
loope
outsl
push
scas
add
cli
push
test
mov
sub
push
out
push
rorl
push
lock
dec
sbb
outsb
sbb
jg
adc
push
out
xchg
setge
xor
hlt
in
test
pop
mov
cmp
adcb
dec
movsl
pop
call
mov
cld
sbb
inc
push
loop
push
and
jmp
ljmp
shrl
std
scas
dec
lret
dec
cmc
iret
cmp
in
scas
fs
idivl
or
adc
mov
cmp
incb
xchg
mov
xchg
dec
in
imul
lods
mov
testl
add
data16
lock
lahf
outsl
xor
sbb
cs
and
faddl
pusha
xchg
mov
ret
clc
faddl
movsb
test
or
cmc
in
mov
in
test
sub
xor
ja
int
mov
frstor
fs
add
aas
cmp
and
sub
fwait
lock
mov
mov
and
cmp
lcall
pop
mov
dec
dec
ds
daa
mov
add
dec
add
xor
sub
xchg
clc
xor
pop
cmp
mov
dec
sbb
fs
nop
add
ret
fists
mov
int3
cld
mov
and
xlat
test
mov
outsl
jp
inc
add
int3
loopne
aad
in
dec
push
jbe
mov
aas
imul
shll
rorb
xchg
mov
lods
ss
add
inc
jo
pop
xchg
inc
subb
cmp
test
mov
inc
enter
pop
jge
or
jbe
test
jb
rclb
add
mov
test
add
mov
in
sub
sub
push
and
push
out
mov
and
arpl
ficompl
aad
dec
inc
subl
mov
fstl
jecxz
test
sti
mov
xor
clc
pop
ljmp
lock
inc
sub
jp
pop
sub
adc
jne
popf
jbe
push
pop
fcomps
lds
insl
jae
into
push
aaa
scas
out
jmp
xchg
test
int3
push
push
js
jns
jnp
roll
imul
shrl
xchg
xchg
cwtl
lret
fwait
xchg
jecxz
sub
jl
pop
ds
mov
int3
push
rcll
stc
jae
xchg
pop
mov
add
nop
lds
sbb
jne
push
pusha
adc
roll
call
inc
push
xlat
popf
rcl
xchg
pop
rol
subl
jge
popa
cmpsb
repnz
rorb
pop
xchg
jp
sub
push
jae
dec
lock
les
mov
dec
cmp
jae
cmp
xor
jbe
aaa
mov
cmp
in
xchg
out
adc
xchg
test
add
stc
fdivr
mov
inc
clc
into
cltd
cld
sbb
jnp
shl
pop
jmp
lods
mov
pop
in
sub
lock
lret
mov
push
rcrl
sbb
push
cmpb
addr16
es
mov
sbb
mov
lret
call
ja
mov
lahf
sahf
faddl
xchg
adc
sbb
adc
fistl
mov
cld
xchg
inc
mov
stc
jne
lock
lods
cmp
sahf
mov
xor
xor
inc
mov
adc
xchg
inc
pop
lock
icebp
lahf
adc
icebp
into
aam
xor
lret
test
test
orb
jecxz
addr16
inc
lcall
pop
xor
gs
push
inc
adc
mov
fsubrl
inc
sub
mov
adc
test
mov
pusha
les
jmp
and
popf
pop
push
jl
cmp
xor
add
scas
ret
xor
aam
iret
xchg
repz
dec
push
lret
mov
or
pop
bound
xor
mov
enter
push
cmp
push
dec
fcoml
mov
dec
mov
jg
loop
xor
ficomps
sarl
ja
mov
add
cmp
xor
cmp
xor
add
into
cltd
mov
data16
addr16
bswap
xchg
iret
in
stos
cld
sub
das
jnp
loopne
dec
xchg
repnz
dec
call
cmp
movsl
bound
jg
idivb
aad
rorl
dec
insl
cmp
sbb
cmp
add
fbld
push
push
les
rcrl
out
mov
adc
scas
movsb
ja
dec
xchg
fbstp
fst
andl
mov
xchg
mov
lods
sbb
das
mov
rcrl
into
mov
repz
jmp
cli
and
mov
sbb
push
push
adc
shll
lea
mov
lahf
mov
or
aad
mov
inc
data16
sarl
loop
leave
cli
adc
mov
or
imul
repz
jo
push
sti
js
roll
add
cmp
dec
ds
shrl
jl
and
and
pop
ljmp
xor
pop
add
repnz
inc
mov
or
test
sbb
sbb
xchg
push
je
jmp
mov
jmp
sub
subb
push
ja
mov
popf
xor
pop
scas
movsl
icebp
cmp
bound
push
andl
xorl
dec
jae
or
sbb
xchg
jb
ret
xor
andl
inc
movsb
iret
mov
imul
jb
aad
pop
inc
and
sub
int
xor
loop
push
mov
push
lahf
xor
testl
lret
loopne
inc
sti
adc
sub
stc
inc
jo
jo
xor
and
bound
cwtl
call
cmp
push
orl
inc
mov
aad
mov
mov
sub
imul
mov
mov
fistps
mov
mov
int3
adc
test
cmpsl
mov
fistl
aad
dec
lcallw
dec
fildll
xor
lods
or
loop
mov
xchg
aad
inc
jns
aam
loopne
or
subl
push
call
loopne
mov
dec
mov
mov
test
jo
cmpsl
xlat
in
add
dec
pop
dec
repz
das
mov
aaa
jns
dec
sar
in
mov
addr16
cli
mov
and
out
sbb
popf
call
add
ss
iret
shlb
mov
lahf
adc
lds
inc
mov
sbb
push
add
mov
sbb
insb
ds
mov
scas
xadd
xor
sub
sbb
push
add
sbb
jb
out
pop
movl
pop
pop
xchg
sahf
or
lahf
sub
imul
daa
dec
mov
adc
sarl
fisttps
mov
popf
sar
pop
repz
out
shlb
add
movsb
mov
fdivr
lock
xor
orb
dec
shlb
and
jns
mov
add
jo
jle
push
fimuls
push
lea
fcomp
inc
xchg
push
jae
adc
jnp
xor
repz
daa
mov
mov
inc
or
pusha
inc
js
shll
push
push
fs
push
mov
aad
xor
in
and
clc
sbb
mov
mov
xchg
cli
sbb
add
jb
xor
popa
xchg
loopne
shl
mov
lock
and
cltd
xchg
and
push
adc
push
fsubrs
inc
sub
mov
imul
xor
xor
mov
adc
icebp
loop
mov
inc
clc
jl
and
xlat
jp
lods
mov
xchg
sbb
add
mov
ret
aam
jle
fstpl
hlt
inc
cmpb
cmp
repnz
and
shll
pop
cmp
lods
push
and
movsl
ret
gs
int
mov
aad
xchg
ret
lcall
test
xchg
sbb
or
inc
xchg
sarl
xchg
shr
adc
pop
sbb
stos
sub
push
test
dec
jecxz
testl
xchg
pop
jae
mov
add
rcrb
jb
cmp
fistl
xor
movsb
push
jns
int
stos
mov
jo
cmp
pushf
xchg
lock
ds
add
add
sbb
jl
negb
aaa
arpl
xchg
add
mov
lret
lcall
xchg
pop
insl
sbbb
inc
mov
iret
push
outsl
sub
sbb
jns
jecxz
dec
xor
in
xor
cwtl
push
stos
cvtps2pd
or
cli
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
xchg
push
clc
incb
jp
les
xchg
rorb
stos
lock
sbb
lret
jns
add
and
cmp
mov
test
scas
xor
xchg
xor
sub
stos
test
mov
hlt
xor
inc
and
xchg
out
or
pop
das
dec
lret
pop
push
in
mov
aam
shld
mov
mov
subb
loopne
mov
or
enter
mov
enter
bound
xor
mov
mov
and
sbb
lods
notb
enter
fwait
shlb
push
sahf
mov
sub
fadd
xor
pop
mov
jge
xorb
cltd
xchg
cmpsb
cwtl
imull
les
and
or
pop
inc
pop
mov
loopne
movsb
movl
xor
adc
add
mov
and
sbb
fucomp
jl
insl
jno
fdivs
push
into
mov
std
imul
jns
mov
lfs
push
lock
lret
mov
outsl
mov
cmp
xor
test
call
pop
mov
push
dec
adc
or
mov
pop
sub
vucomisd
jbe
loope
jl
aam
cltd
ds
xchg
cmpsl
fwait
sahf
sbb
mov
pop
cld
fimuls
xor
pop
push
out
enter
jl
jne
imul
loope
fnsave
add
sar
push
in
jns
or
pop
fsubp
insb
mov
adc
sub
mov
shl
xchg
mov
in
jecxz
in
xchg
xchg
in
adc
xchg
fsubp
test
je
fwait
movsb
lret
les
cs
hlt
rcll
or
cmc
inc
repnz
add
xor
fistps
call
push
inc
dec
pop
scas
fbld
adc
es
mov
insl
and
nop
shlb
or
dec
jle
jl
mov
data16
adc
mov
dec
idivb
fs
xor
sbb
mov
inc
dec
addr16
mov
loop
lcall
pop
shll
fwait
pop
jae
mov
push
sahf
push
jl
rcl
outsl
mov
out
mov
or
inc
push
pop
rcll
data16
fcoml
cmp
cmp
sub
push
test
pushf
inc
xorps
xchg
lret
cwtl
dec
pop
jle
xor
sub
in
frstor
cmp
xor
clc
scas
push
cmp
or
mov
cmpsl
insb
outsl
arpl
dec
int
out
into
pop
mov
adcb
xchg
stos
xchg
mov
mov
or
sub
rcrl
xchg
push
and
and
pop
icebp
xchg
out
inc
push
cmpsb
fldcw
sub
sub
lods
mov
fistpl
sbb
ss
iret
leave
es
pusha
push
push
mov
mov
outsl
pop
pop
out
xor
add
mov
mov
cmp
lahf
out
sahf
lret
mov
sub
frstor
gs
jnp
test
sub
pushl
orb
push
inc
xchg
pop
divps
add
mov
push
push
jge
and
aam
in
xor
xchg
cmpsl
sti
ret
bound
push
inc
mov
mov
clc
pop
hlt
lds
lahf
push
mov
cmp
aad
mov
in
push
dec
pop
ret
xchg
jne
sbb
sub
add
inc
inc
cwtl
dec
adcb
ret
adc
pop
mov
into
mov
clc
jne
xlat
jmp
adc
and
jp
cmp
outsb
popa
movsl
dec
ret
fnsave
clc
pop
sub
das
push
and
xchg
push
jnp
stc
sbb
jb
fistpl
cmc
es
xchg
cltd
je
mov
insb
inc
arpl
and
rolb
and
popf
or
mov
std
inc
insb
shrb
call
or
or
dec
test
jnp
pop
jp
std
push
pop
pop
jmp
xor
add
jl
clc
sub
aad
pop
test
mov
ds
ret
mov
leave
cwtl
pop
fnstsw
stc
cmp
fdivrl
mov
loop
and
popa
popa
inc
push
mov
lods
mov
cmpsb
scas
jl
lahf
mov
addr16
mov
inc
imul
addr16
rcll
pop
cmp
push
adc
jle
repz
dec
pushl
xor
push
xorl
fcoms
push
sub
xchg
sub
scas
popf
ret
push
jno
sbb
jle
jp
jecxz
imulb
xchg
rol
loopne
push
push
or
pushl
push
mov
push
jmp
push
inc
rorb
dec
push
or
xchg
pop
xor
daa
pushf
mov
cwtl
push
mov
enter
sbb
out
dec
jo
repz
add
or
inc
jo
mov
mov
push
es
push
iret
xlat
imul
pop
stos
jns
aam
inc
dec
push
clc
cmc
push
outsb
cmp
mov
mov
gs
jb
ret
xorl
sbb
mov
outsb
sub
xchg
mov
pop
jo
popf
inc
std
or
pop
add
sub
vpmaddwd
fwait
mov
xor
dec
mov
movsb
in
mov
es
xchg
mov
ret
xor
and
dec
push
les
xlat
push
addr16
jl
inc
mov
jl
pop
lea
leave
xchg
stos
psllq
insb
outsb
or
insl
pop
test
leave
xchg
pushf
cmp
inc
xor
pop
sub
push
bound
cld
pop
cmc
bound
sarl
enter
mov
out
and
inc
jb
inc
addb
out
dec
es
hlt
arpl
aaa
mov
js
ret
notb
mov
ficoms
sbb
mov
filds
rep
lds
and
xor
jg
or
test
lret
mov
cmp
lcall
sub
std
xor
into
or
jecxz
xchg
stos
lea
sub
xor
int
popa
lret
jp
xchg
in
insl
hlt
cli
lea
xchg
push
or
xchg
lock
lods
mov
aad
stc
mov
cmpsb
jne
adc
fcomps
jecxz
add
mov
lds
cmp
or
fst
dec
push
pop
push
xor
iret
les
mov
into
cmp
cmp
jnp
popf
lods
jae
call
push
inc
add
fcoms
cmp
outsl
pop
inc
prefetch
pop
or
int
mov
pushf
out
jo
dec
or
mov
lods
mov
add
scas
aad
faddl
pop
dec
jge
sub
in
test
mov
add
ret
daa
dec
push
cmp
mov
call
mov
das
or
inc
test
hlt
insb
pusha
ljmp
inc
out
push
repnz
sbb
pop
cmpsb
loop
jne
dec
xor
div
cs
and
mov
sbb
and
and
sbb
push
jp
inc
notb
test
cld
cmpsl
mov
inc
bound
aaa
lea
mov
dec
lea
mov
jns
pop
inc
pop
mov
sbb
push
xor
sbb
dec
clc
push
add
adc
iret
dec
push
add
mov
hlt
pop
cmpsb
xor
adc
adc
cwtl
fstl
or
push
pop
push
aam
in
mov
test
es
push
movsb
pop
cmp
lret
cmp
dec
adc
pusha
clc
stos
push
mov
xor
sub
push
mov
dec
mov
pop
lea
xchg
stos
push
push
pusha
push
push
cmp
mov
mov
xchg
pop
stos
pop
push
out
std
pop
pop
es
out
mov
jp
pusha
jns
adc
mov
adc
int
push
scas
pop
jns
test
push
mov
mov
xor
mov
jg
out
pop
and
push
jae
loope
or
bound
dec
aam
test
pusha
lock
jb
xchg
jb
and
lods
fstps
add
sub
stos
aas
push
mov
mov
ss
adc
insl
pop
fldcw
adc
int3
xchg
in
jecxz
jmp
mov
jnp
push
scas
outsl
je
sub
les
mov
movsl
cmp
push
push
ret
int
or
xchg
sbb
subb
mov
bound
call
sahf
xchg
es
add
and
popa
out
or
lahf
xchg
clc
mov
call
call
pop
adc
adc
fcompl
add
addb
fistpl
xor
outsl
cmp
add
mov
inc
mov
xor
repnz
dec
gs
sub
shll
pusha
push
inc
inc
inc
cli
fmull
lahf
push
fcoml
lcall
push
insb
aad
cmp
xor
ja
lock
jo
int3
rcll
in
sub
push
arpl
mov
pop
loopne
lds
inc
dec
and
in
inc
mov
mov
mov
js
int3
mov
xchg
and
jb
push
jne
mov
addr16
mov
arpl
sti
lret
push
adc
out
sbb
fisttps
in
mov
mov
dec
add
movsb
sub
xchg
jne
xlat
xor
jp
pop
jb
xchg
xchg
fcoms
mov
fmul
cmpsb
pusha
in
loop
mov
jo
hlt
lods
mov
lock
cli
cmp
mov
cltd
rclb
sub
fdivs
fwait
mov
and
xchg
aad
cmp
ror
fdivrs
stos
in
cmp
repz
aam
stos
bound
push
mov
xchg
adc
mov
scas
push
xchg
dec
inc
std
adc
dec
dec
xchg
aas
into
or
jno
dec
sti
das
pop
and
les
sub
push
add
icebp
jae
jmp
cmp
loop
mov
jne
dec
xor
rclb
xor
loop
dec
jl
or
adc
xor
iret
jne
nop
push
je
dec
xchg
rcrb
fnstenv
sar
pop
aaa
sub
push
inc
in
mov
xor
mov
cmpsl
jae
mov
shlb
lcall
sbb
fnstcw
loope
js
cs
jl
add
imul
cltd
and
cmp
orb
cli
out
dec
pop
das
rcrb
enter
mov
js
mov
repnz
loop
pop
cmp
cs
call
mov
jecxz
xor
jnp
inc
rolb
or
add
pop
mov
pop
jle
mov
dec
stos
mov
idivl
push
xchg
push
mov
call
ljmp
stos
adc
adc
mov
lahf
pop
adc
inc
lret
fistl
push
push
mov
push
mov
mov
jns
push
test
stos
pushf
pop
jp
mov
mov
sub
jge
jp
cmpsb
mov
push
loop
pop
cli
or
cmpsl
lret
clc
inc
insb
cmp
inc
fwait
jae
sub
daa
push
std
pop
mov
sbb
mov
mov
mov
cmp
shlb
dec
or
jnp
mov
aam
inc
test
imul
push
xlat
fmul
mov
pop
fimuls
nop
sub
shl
fcom
lock
addr16
push
add
lds
dec
cs
xchg
inc
in
dec
ret
std
xor
cmc
lock
inc
mov
test
inc
sti
orl
and
ret
fnstenv
jo
sbbb
push
sahf
sub
mov
pop
xor
mov
lret
dec
subl
fcmovnb
inc
test
cmc
aas
in
cmpsb
inc
mov
in
mov
jb
shrb
sbb
loope
subb
xchg
call
bound
dec
inc
out
jno
xchg
outsb
call
es
in
mov
ss
add
iret
xor
xchg
jg
mov
repz
js
adc
inc
mov
add
xchg
movsb
dec
arpl
inc
xchg
outsl
mov
insb
jp
loopne
call
xlat
out
jecxz
mov
mov
push
pushf
adc
adcw
sarb
dec
push
out
aam
adc
adcl
aam
mov
in
clc
inc
xor
mov
cs
int3
fidivrl
mov
out
fwait
or
call
or
sbb
cmp
xor
fildl
mov
lods
jp
cld
inc
lock
cmp
aad
pushf
fisubrl
dec
xlat
pop
inc
pop
test
lods
mov
insl
arpl
enter
sbbl
inc
jne
adc
movsl
out
dec
mov
jne
sbb
cmp
ret
scas
mov
jg
jne
or
mov
cmc
gs
xor
stc
testb
or
xchg
xchg
pop
ss
test
or
scas
in
ret
and
dec
fwait
loopne
xchg
push
test
mov
cmp
insb
push
mov
cmp
sbb
dec
inc
and
popf
daa
aaa
arpl
mov
cmp
test
xchg
dec
vcvtdq2ps
mov
add
push
add
or
pop
dec
pop
jno
inc
out
jno
sbb
lcall
cmp
sub
or
jno
movsl
mov
lods
sub
xor
jbe
push
push
std
push
repnz
push
mov
stos
fdiv
lea
jecxz
loop
or
jg
lahf
inc
sub
dec
jnp
iret
or
lods
std
bnd
ret
testl
xor
sbb
repz
stos
adcl
add
nop
jl
mov
add
mov
sbb
inc
pop
out
daa
jl
fdivs
outsb
cwtl
mov
sti
aaa
arpl
fwait
mov
add
push
out
push
and
jg
repz
cmp
mov
fildl
ss
hlt
or
fwait
dec
dec
sti
xor
push
mov
call
orl
inc
mov
add
movsl
ljmp
pop
jg
jmp
dec
xchg
xchg
mov
and
dec
hlt
pop
cltd
adc
xor
cli
imul
ljmp
out
lahf
cld
xor
add
fcomip
clc
dec
mov
xchg
push
out
sbbl
dec
bound
mov
dec
cs
push
or
lcall
mov
lahf
out
aam
call
xchg
push
xor
jns
pop
push
xchg
lock
xlat
and
les
pop
dec
clc
jo
pop
adc
mov
lea
inc
int3
add
call
pop
cmp
movsl
loop
mov
cli
cmp
subl
pop
add
test
jo
or
sub
rcrl
jg
push
mov
or
pop
in
mov
hlt
mov
pop
mov
xor
mov
dec
icebp
xchg
popf
aaa
dec
test
mov
rclb
repz
lret
jb
pop
sub
scas
lret
mov
cmc
int3
movsb
inc
loopne
fisttps
inc
dec
outsb
mov
repnz
and
in
xchg
push
and
jge
sub
in
sub
sub
repnz
mov
shrl
sarl
iret
cmp
pop
and
add
int3
lods
pop
xchg
test
push
jno
flds
orb
inc
std
inc
fnstenv
pusha
into
mov
mov
loope
and
movsl
shrl
out
add
clc
cwtl
out
loope
test
das
mov
fisubl
adc
scas
addr16
ss
loop
adc
push
mov
mov
xchg
jp
pop
add
dec
insl
popf
jle
cs
push
scas
lea
je
jno
mov
addr16
aam
pop
and
push
pushf
xchg
lret
inc
pop
pop
lock
xchg
jg
and
jg
iret
sbb
mov
cmp
xor
pop
addr16
push
ret
filds
inc
cmp
mov
sbb
in
mov
notb
lea
sti
bound
dec
mov
int3
scas
push
mov
inc
lods
mov
icebp
sbb
cmp
dec
lods
shl
fistpl
out
jl
and
aam
cmc
add
movsl
xchg
daa
pushf
xchg
mov
nop
mov
mov
mov
sub
stc
int3
decb
sbb
or
hlt
add
pop
hlt
stc
aas
stc
cmp
lea
ds
jae
cmp
cld
data16
jns
aaa
test
jl
mov
mov
mov
cmp
ret
fisttpl
and
stos
jg
pushf
xchg
pop
hlt
pop
cmp
sub
outsb
lock
insl
cmp
in
cmp
outsb
push
fidivrl
add
or
xor
pop
lea
stos
jbe
insb
cmp
test
push
aam
jmp
xor
jmp
int
xor
outsl
mov
js
push
sti
cmpsb
clc
std
pop
cmp
sub
ret
ljmp
xchg
out
adc
push
scas
xchg
push
js
jmp
push
jns
lret
xchg
neg
mov
push
xchg
ds
out
adc
push
jbe
insl
dec
loope
sub
loop
das
scas
dec
cmp
les
jecxz
pop
push
movsb
pusha
fcompl
pop
fcmovnu
mov
in
mov
add
mov
imul
add
in
sub
pushf
in
mov
lods
roll
xor
gs
stos
dec
sbb
adc
loopne
or
pop
in
cmp
dec
pop
jge
std
pop
and
add
hlt
rcrb
mov
or
popf
xor
push
and
call
xor
out
jg
les
pop
jb
punpckhbw
subb
xchg
fstps
mov
lcall
xlat
int
push
leave
in
out
cmp
inc
add
sub
pop
xor
add
js
int3
fucom
inc
mov
fistpll
sbb
push
cwtl
cli
lea
repnz
fwait
inc
xchg
jecxz
in
loop
popf
das
insb
push
ljmp
scas
xchg
inc
xor
lds
push
jne
test
add
adc
sub
jg
add
sbb
insl
cwtl
jmp
gs
push
shld
mov
rorb
nop
mov
push
imul
int3
pusha
jnp
adc
jns
xor
push
test
cmpsl
pusha
in
arpl
aad
iret
shl
xchg
sbb
out
popf
insl
sarl
sub
mov
sub
xchg
adcl
push
test
sahf
mov
mov
cmpsb
movsb
pop
jb
xchg
pop
cmp
out
and
fidivrs
xchg
dec
mov
add
inc
adc
pop
mov
pop
dec
push
mov
aad
fists
test
dec
inc
fisubl
sbb
xchg
outsl
mov
stos
pop
rcrl
dec
jle
mov
ret
jp
popa
imul
pop
popf
pop
xchg
enter
loop
mov
out
adc
pop
mov
sbbb
fisttps
fucompp
cmp
sub
std
ficoms
mov
mov
test
dec
inc
cmpsb
lods
popa
lcall
and
and
pop
sub
sub
sbb
mov
into
das
fdivrp
jmp
enter
and
push
rcll
add
enter
or
xchg
je
ljmp
pop
repz
dec
sbb
xlat
adc
es
xchg
stc
fisubrl
inc
sahf
pushf
sbb
mov
add
cs
das
pop
fstpl
mov
xchg
popa
lret
scas
dec
pop
mov
or
fisubrs
push
jl
ljmp
es
into
mov
or
sbb
in
dec
cli
push
xchg
and
jno
or
cmp
and
xor
aas
push
ja
subb
scas
cmp
lcall
push
jle
aaa
test
shl
cmpsb
addr16
movsl
sbb
cmp
jle
sbb
mov
sbb
popf
pop
mov
cmp
adc
pop
test
sbb
adc
xor
dec
xchg
out
dec
lret
and
cmpsb
dec
cmp
rep
pusha
jae
jmp
sahf
mov
inc
cmpsb
jnp
cmpl
lahf
pop
ja
jns
mov
mov
push
xchg
int3
mov
jne
out
add
dec
lret
loope
fsubl
push
int
pop
dec
fnsave
mov
faddl
mov
sub
sbb
test
or
stc
call
xchg
das
sub
sub
pop
pop
xchg
fwait
imul
mov
sub
inc
xor
xorb
leave
push
and
fs
xchg
fsubl
scas
pop
lea
lret
test
movsl
sbb
iret
mov
cmp
sub
lahf
das
inc
and
push
jo
push
jne
iret
rorl
sti
jg,pt
lret
jb
add
add
fldenv
sahf
lcall
clc
mov
cltd
shll
daa
mov
ficoms
in
add
test
arpl
sub
fistps
pushf
ss
jno
repz
enter
lods
jo
mov
cs
xor
pop
cmc
sbb
shll
fiaddl
shrl
push
out
stos
test
movl
test
adc
sub
lcall
push
push
imul
push
fisubrs
bound
mov
repnz
or
mov
push
outsl
arpl
mov
sarl
stos
jecxz
vsubss
out
jp
pop
lcall
out
mov
pop
sub
pop
push
push
idivb
repz
cmp
inc
daa
aas
or
and
sbbb
push
jae
and
inc
cmp
nop
fildll
repz
out
roll
movsl
les
jmp
outsl
sbb
pop
out
pop
inc
xchg
xor
sti
dec
sub
or
arpl
pop
incb
inc
sub
jnp
adc
mov
cs
and
jp
pop
hlt
loopne
xchg
loopne
lret
inc
jne
or
imul
insb
cmp
sub
jns
nop
dec
inc
jae
add
mov
cmp
orl
and
sti
sbb
xorb
adc
push
mov
test
into
xchg
xor
cs
and
push
scas
fst
imul
shll
jnp
adc
pusha
xchg
das
mov
in
cld
jmp
xor
inc
jae
dec
jns
nop
or
mov
fs
mov
repnz
fistpll
loopne
mov
dec
push
dec
fbstp
fwait
and
popa
stos
std
push
fsubs
adc
cmp
jno
mov
jb
xchg
push
mov
insl
push
jmp
popf
mov
jae
xchg
or
cmp
ss
and
xchg
pop
int3
xchg
or
xlat
stc
push
aad
out
push
in
cmp
add
test
movsb
and
dec
out
inc
dec
xor
mov
sahf
roll
clc
dec
inc
dec
sbbb
push
pop
out
cmp
add
xor
mov
lret
testl
js
sar
in
into
sbbl
dec
jne
lcall
mov
mul
sbb
add
xchg
jo
dec
sub
xchg
xchg
jae
add
cmpsb
and
mov
cwtl
adc
mov
adc
and
pop
ss
mov
pop
insb
int
adc
push
sub
mov
mov
hlt
add
dec
addr16
adc
pusha
mov
push
dec
stos
scas
sti
fsubr
or
mov
imul
leave
test
das
les
xlat
aad
xor
add
in
xor
int
mov
iret
cld
lea
sub
mov
or
and
push
adc
push
push
mov
stc
aad
mov
jbe
out
xchg
xchg
icebp
leave
mov
push
push
dec
jae
pop
mov
outsb
and
jmp
jg
jl
aad
rclb
imul
pop
std
jno
cmp
push
mov
sti
sub
sbb
sahf
lods
cli
cmc
mov
xor
push
pusha
aam
icebp
push
leave
mov
dec
stos
adc
pop
pop
cmp
cmp
sbb
aaa
iret
aaa
jo
xchg
ljmp
jo
lret
out
mov
std
xchg
adc
iret
lds
mov
xchg
test
cmp
sbb
fdiv
int3
fst
jo
shl
jg
dec
jg
loope
mov
je
pushf
aas
sub
jg
dec
mov
das
lcall
or
push
pop
cmp
xor
sbb
sbb
xchg
mov
pop
cltd
nop
xchg
mov
imul
bound
jb
cmc
fdiv
popa
fiadds
in
xchg
and
pop
repnz
mov
cmp
scas
loopne
sub
mov
subb
mov
out
or
lea
pop
mov
repnz
xor
and
or
adc
jp
push
xchg
call
or
sub
sti
adc
add
scas
ljmp
addr16
mov
negl
mov
out
repnz
fidivrs
pusha
icebp
ret
aam
xor
xchg
in
std
aad
xchg
mov
rclb
mov
lahf
xlat
movsl
add
push
lods
arpl
dec
movsb
adc
lock
cld
mov
repz
inc
cld
les
cmp
out
xor
mov
push
icebp
fistpll
in
pop
les
lock
popa
testb
or
mov
outsl
push
icebp
mov
dec
test
adc
jl
sti
sub
add
push
mov
outsb
jns
inc
mov
pop
or
aam
sbb
scas
popf
ljmp
push
jns
sahf
mov
adc
xchg
mov
push
mov
int3
mov
loop
ror
dec
mov
outsb
add
fsubl
sub
xchg
sbb
sbb
scas
xchg
loop
xor
mov
cmpsl
push
inc
lahf
xchg
push
dec
xor
mov
mov
insl
arpl
in
mov
inc
add
inc
gs
xor
repz
mov
test
outsb
xchg
popl
iret
sub
in
mov
adc
jge
mov
loop
or
xchg
pushf
pop
inc
rclb
pop
rclb
jae
in
inc
or
cs
inc
outsb
loopne
mov
mov
call
jp
pop
jecxz
sbb
pop
repz
fnstenv
adc
inc
pop
xchg
lcall
ds
push
add
mov
or
xchg
cmp
pop
push
jg
popf
mov
cmpsl
mov
mov
lock
inc
push
dec
cs
push
sub
pushf
cmpsb
xchg
mov
pop
cmp
push
push
cltd
xor
call
jns
cld
mov
xchg
jae
mov
cld
loop
adc
xor
imul
jmp
or
or
cwtl
arpl
bound
mov
xor
sbb
sbb
or
mov
dec
pop
repz
adc
mov
mov
lea
shr
loope
add
adc
shll
out
lahf
mov
clc
sub
and
push
out
hlt
shlb
imul
push
adc
mov
jmp
das
push
out
arpl
jge
mov
lret
ljmp
xchg
out
sahf
arpl
jle
xchg
or
outsl
ss
add
push
or
xor
arpl
js
add
inc
sbb
cmp
mov
movsl
aad
mov
mov
inc
mov
lcall
and
outsb
jns
sarl
orb
stos
push
mov
add
nop
add
cltd
dec
cwtl
pop
jle
sub
mov
ss
mov
sbbb
aaa
mov
jne
fs
inc
rcrl
mov
push
sbbl
or
lods
ficompl
dec
enter
cmp
xchg
or
sub
push
inc
sbb
xor
add
push
les
xor
xchg
mov
fsub
inc
inc
mov
mov
push
lods
divl
push
mov
mov
cs
inc
inc
push
jge
dec
cs
out
data16
popf
fdivrl
push
ficompl
cmp
jno
cli
jb
lods
dec
loop
dec
fists
jl
lret
scas
xchg
jmp
mov
popa
xor
fsubp
and
adc
adc
sti
push
int3
shlb
or
pop
div
pop
in
push
icebp
push
stc
sbb
dec
xor
movb
and
fs
std
insb
jecxz
loopne
dec
scas
push
xor
cld
or
adc
shlb
add
sub
fwait
out
lret
mov
or
shll
enter
mov
xchg
add
jle
ss
es
pop
aaa
or
cmp
cmp
push
cmp
mov
lcall
sti
xchg
mov
mov
adc
daa
in
jns
jp
es
aad
outsl
sbb
xorl
dec
xchg
mov
sbb
add
testb
mov
xor
xor
popf
mov
fs
lods
mov
xor
gs
les
pop
jns
dec
jl
push
stc
jae
pcmpeqb
imul
sub
rcll
sub
int
out
add
nop
push
dec
ret
lods
or
sahf
xchg
xor
ljmp
push
bnd
orl
popf
push
bound
mov
add
and
and
loopne
imul
inc
or
push
nop
les
sbb
stos
popa
sub
in
dec
and
pop
filds
jae
xchg
inc
or
sub
mov
into
fisttpll
cmpl
imul
leave
icebp
sbb
mov
xchg
sti
stos
inc
pop
xor
adc
aam
inc
icebp
sbb
xor
jns
test
fs
jl
jecxz
xor
xor
xor
fcmovu
call
xor
addr16
scas
pop
add
rolb
pop
clc
insl
dec
lret
sub
xorl
mov
movsl
mov
and
jmp
sbb
imul
loopne
cmp
cmp
pop
xchg
dec
jmp
insl
dec
inc
inc
pop
xor
push
or
loopne
inc
or
and
jne
outsl
lock
lcall
js
lret
adc
pop
loop
mov
xchg
push
and
jno
adc
jne
repz
std
add
fidivrs
cwtl
mov
fisubrl
sarl
fidivs
shl
xor
xchg
add
inc
inc
insb
imul
leave
add
mov
inc
mov
adcb
ljmp
xchg
jo
push
dec
sub
repnz
out
dec
mul
add
sbb
add
add
iret
stc
je
dec
push
jmp
addr16
mov
pop
dec
inc
in
imul
jg
out
sarl
xor
cmpb
sub
mov
dec
dec
or
pop
xor
add
mov
je
jmp
cwtl
add
or
test
pusha
mov
gs
adc
jp
mov
inc
int3
xchg
bnd
into
lret
and
add
imul
cmpl
or
and
adc
jns
out
ret
icebp
mov
sbb
xchg
sahf
and
sub
pushf
pop
jecxz,pn
sub
lods
flds
cltd
jecxz
push
pop
xchg
adc
cmp
outsb
dec
cmp
lret
push
mov
sub
mov
int3
sahf
jg
lret
sub
mov
fnstsw
jo
outsl
jle
or
not
frstor
dec
cmc
pop
je
sahf
pop
and
rep
fidivrs
jl
inc
cli
or
mov
sub
insb
mov
jecxz
fmulp
in
xlat
call
mov
mov
mov
lods
push
adc
mulb
testb
or
out
lcall
pusha
mov
aaa
add
sub
and
lds
and
sub
jmp
in
jo
pop
mov
and
inc
pop
lret
pop
repnz
inc
sub
insl
and
ja
mov
adc
xor
neg
scas
into
push
outsb
mov
adc
pop
jno
ret
data16
faddl
mov
or
mov
aaa
cmpsl
sbb
xor
and
subb
adc
in
push
jle
adc
pop
rcll
xchg
pop
jmp
ljmp
fbld
lret
xchg
xchg
pushf
lods
mov
push
rcr
ret
out
cmpsb
xor
and
jbe
fcmovne
jmp
out
mov
jno
cmp
mov
push
frstor
xlat
push
les
jns
mov
sbb
push
fdivl
mov
call
lock
rorb
jb
adc
inc
mov
sub
popa
push
sub
aam
divl
ja
addr16
adc
and
sub
test
xor
lds
ljmp
xchg
ja
pop
push
and
or
subb
or
lahf
imul
inc
or
cmc
daa
int
add
sub
push
push
xchg
mov
rcll
add
jge
ret
add
add
jno
and
mov
test
push
xor
or
and
sub
test
mov
icebp
aas
in
mov
scas
cmpsl
mov
ret
cmp
or
fldt
lods
cmp
pop
popf
sbb
into
adc
cmpsb
xlat
cli
nop
push
cwtl
iret
mov
push
fs
dec
stos
fildll
jno
and
nop
aas
imul
aad
mov
push
push
inc
mov
loopne
lret
arpl
scas
aas
xchg
add
aad
and
adc
ds
fsubs
clc
stc
jmp
int
mov
outsb
jne
sbb
insl
lock
mov
rolb
insb
mov
dec
inc
jo
adc
mov
fstpl
adc
xchg
jg
pushf
js
jbe
aad
pop
adc
arpl
stc
mov
call
ja
adc
xor
pop
jg
icebp
xchg
dec
lret
xchg
cmpsb
pop
jne
jecxz
jns
mov
in
cmc
sbb
nop
sub
add
jecxz
xchg
inc
dec
enter
push
push
movb
roll
jl
arpl
inc
xchg
cmp
iret
mov
jnp
das
push
test
flds
ret
lret
push
cltd
xor
das
add
fwait
and
mov
shl
mov
or
mov
cmp
xchg
xor
inc
xor
inc
fiadds
lahf
or
aaa
adc
fs
sahf
fst
gs
notb
and
xchg
inc
fstl
loope
sub
push
push
pusha
sub
jp
cwtl
mov
sub
xchg
scas
sub
imul
sti
jge
mov
scas
mov
dec
cmpsl
loop
mov
inc
std
jae
out
inc
and
das
inc
fucom
mov
fcom
dec
sub
xchg
in
icebp
stos
inc
test
mov
mov
mov
pop
andb
pushf
dec
pop
faddl
pop
popf
insl
js
mov
mov
cmpsl
sbb
xorb
cmp
dec
sbb
jp
inc
xor
add
sbb
out
jns
xchg
pop
shlb
sub
lahf
clc
and
jae
ljmp
ret
add
mov
sbb
push
dec
or
in
xor
dec
jg
daa
fsts
pop
jmp
push
shrl
sbb
popf
repnz
out
xchg
je
mov
pop
adc
pop
dec
pushf
lcall
jp
cwtl
inc
popa
ja
add
inc
into
out
or
stos
mov
pop
cmpsb
push
ss
out
fdivrs
cmp
mov
jp
outsl
inc
xlat
adcl
sbb
cmpsl
adc
jmp
adc
mov
je
cmovl
bound
neg
cmp
and
imul
pop
and
ret
push
rolb
mov
enter
aaa
js
xchg
loope
fldenv
mov
and
not
inc
pop
out
out
and
mov
sbb
push
ljmp
mov
mov
mov
lret
call
mov
dec
in
test
pop
mov
inc
int3
in
or
ljmp
in
js
leave
insb
movsl
pop
xchg
scas
mov
add
lods
ljmp
sub
or
mov
repnz
aad
loopne
call
xchg
stc
push
sub
aad
sub
lret
test
push
mov
pushf
loope
push
jecxz
bound
je
js
in
jae
dec
loopnew
repnz
aas
dec
mov
icebp
push
loope
push
and
mov
mov
mov
cmpsb
orb
inc
mov
jl
pop
or
dec
aad
fidivrl
aam
loopne
out
sub
cmp
je
jae
inc
or
rorb
mov
fcompl
adc
std
cli
ds
pop
adc
sbb
outsl
out
and
test
popf
xchg
fisttpll
mov
jmp
push
lock
push
sub
jbe
inc
mov
leave
stc
dec
inc
not
adc
adc
sub
pop
in
inc
xchg
fs
adcl
dec
hlt
sbb
insb
push
push
adcb
lcall
lret
pop
inc
mov
arpl
js
pop
mov
xchg
xchg
xchg
lods
and
adc
lret
ficoml
cmc
adc
pop
shr
adc
add
mov
xchg
lcall
adc
scas
sarl
negb
push
add
addr16
jmp
les
dec
stc
mov
pop
jb
lret
popa
xchg
divl
xor
push
adc
pushf
dec
pop
adc
push
scas
dec
adc
mov
xor
mov
fucomp
add
cmpsb
xor
scas
jmp
push
je
pop
sbb
and
adc
jmp
loopne
testl
xor
std
jmp
testb
fnstcw
xchg
jbe
mov
push
call
jp
inc
xchg
pop
test
test
out
arpl
jae
push
dec
and
leave
out
jg
movsl
addr16
lahf
sahf
xchg
mov
pop
adc
push
push
pop
pop
lods
mov
lret
lds
jnp
test
scas
imul
xor
rolb
or
add
add
mov
icebp
pop
lret
cs
dec
pop
push
pop
popf
xor
and
mov
mov
xor
das
add
pop
xor
push
out
das
and
outsb
in
out
mov
push
in
push
xor
bound
cld
jae
or
int
lods
or
stos
mov
inc
sbb
scas
hlt
mov
xor
mov
iret
outsl
lret
psubb
iretw
pop
lock
add
in
and
mov
in
lret
test
loope
loopne
lret
out
ljmp
pop
jb
jbe
sarb
mov
pop
lret
mov
mov
mov
enter
fdivrl
daa
mov
lret
xchg
pop
dec
decb
sub
cmp
and
testb
inc
jns
push
lea
add
and
ficompl
or
mov
or
push
imul
nop
xchg
int
ret
shll
mov
fidivl
daa
xor
pusha
cmp
cmp
lods
sbb
imul
xor
jbe
icebp
rcll
lds
mov
xchg
int
push
xchg
add
mov
int3
jae
subl
leave
xchg
cld
push
mov
int
cmc
das
hlt
aaa
loop
gs
xor
push
les
fnsave
arpl
loopne
fmul
jns
cmp
fdivrs
gs
jns
cmc
jo
test
mov
and
jae
leave
lret
xchg
ja
loop
adc
out
push
sarl
shrb
mov
inc
xchg
dec
popf
jmp
lret
arpl
cmc
insb
clc
pop
sti
mov
xor
jo
push
popa
fwait
push
jecxz
fsubrl
sahf
xchg
xorb
pushf
push
test
ja
mov
stos
xchg
imul
fisubl
or
xor
mov
push
mov
pop
sbb
and
xor
stc
jmp
nop
stos
in
sbb
ss
mov
push
std
ret
pusha
loope
hlt
or
and
jmp
and
and
stc
lods
adc
js
xchg
mov
xor
xor
pop
jge
dec
or
rcrb
sub
lods
adc
xchg
xchg
out
sub
mov
sbb
fcoms
add
and
xor
mov
adc
ret
mov
shrl
div
lods
ja
ljmp
aad
sbb
jg
fnsave
mov
push
pop
movsl
inc
pop
and
out
aaa
push
or
cmc
es
push
lods
sbb
xchg
or
movsl
inc
mov
pop
shlb
push
out
pusha
xor
dec
ret
cmp
xchg
imul
xlat
mov
xor
rorl
mov
fldcw
fsubr
add
int
lcall
ja
repnz
jge
pop
add
adc
dec
roll
mov
mov
mov
sbb
test
sbb
imul
cmp
bound
mov
push
add
jno
inc
cmpsl
dec
push
aad
sahf
sarb
clc
pop
add
iret
mov
outsl
imul
test
push
aaa
stos
add
add
xor
call
xorb
test
add
jbe
in
push
mov
aas
idiv
daa
imul
insb
push
ret
je
dec
dec
add
lods
mov
scas
nop
mov
mov
in
out
xchg
nop
popa
dec
out
ret
push
scas
add
inc
xchg
leave
test
shrl
cli
sub
push
cmp
ss
lahf
in
clc
test
add
out
js
xor
mov
ret
dec
adc
setb
mov
sbb
faddp
xlat
popf
clc
mov
mov
lods
lcall
inc
and
pop
sbbb
cltd
jne
xor
test
outsl
push
and
lods
jmp
xchg
dec
fsubl
dec
mov
loopne
inc
mov
push
sbbb
and
mov
mov
xchg
or
data16
and
lret
ja
sbb
push
aas
push
or
cmp
dec
cld
sub
sbb
bound
fisubrl
cmc
push
das
les
adc
popf
rorb
vdivss
lock
aas
or
push
cmpsb
cltd
into
adc
adc
inc
or
sub
xor
pop
mov
xor
leave
mov
insl
mov
pop
pushf
ja
enter
pop
loopne
test
insb
mov
mov
int3
jecxz
gs
lcall
fimuls
sti
aas
rcrl
je
mov
mov
lea
sbbl
jne
or
sbb
es
ret
movnti
add
cwtl
cmp
push
mov
cltd
dec
in
lea
jbe
mov
fsubrs
dec
faddl
out
cmpsb
lret
pop
jbe
out
imul
mov
pushf
loopne
xor
data16
pop
repz
mov
sub
cltd
int3
xchg
mov
fistl
cltd
push
test
jp
out
fldenv
pop
rcl
cli
fsubp
push
aas
jl
xor
out
adc
push
push
in
popa
loopne
pop
and
mov
mov
mov
push
stos
sub
add
mov
sahf
lahf
pop
cmp
mov
mov
bound
jmp
and
pop
mov
das
cmc
pop
call
test
js
sub
dec
scas
cmp
push
jl
lock
outsl
insb
data16
mov
lcall
adc
dec
fs
dec
in
hlt
pop
shll
loope
loope
icebp
scas
and
xlat
and
mov
mov
mov
push
les
push
stos
and
mov
sahf
dec
clc
or
aad
sbb
cmp
push
fiadds
add
stos
and
lahf
mov
mulb
mov
mov
pop
lea
stc
sbb
xor
jne
nop
mov
xchg
subl
sub
lock
rcrb
clc
or
ret
jecxz
lret
ffreep
inc
sahf
fs
inc
in
hlt
jbe
inc
or
fiaddl
je
dec
adc
sbb
push
xor
cmp
out
adc
rclb
adc
add
cmpsl
cmpl
outsl
xchg
or
sub
cmp
arpl
jmp
jbe
or
sub
ret
or
pop
push
inc
das
in
aad
dec
clc
jnp
sbb
add
ja
xchg
fcos
imul
sbb
lret
imul
loopne
out
test
fcomps
fistpl
insb
push
ja
mov
popl
jbe
jg
xchg
push
icebp
clc
mov
lahf
sbb
inc
mov
test
sbbb
and
scas
addr16
loopne
sub
loopne
sbb
inc
ds
jg
add
jb
lock
and
arpl
lods
sahf
idivb
dec
add
in
mov
sbb
jb
or
ss
and
in
fildl
pop
mov
jmp
fistpll
cltd
add
push
push
push
inc
push
xor
push
mov
dec
mov
push
push
cmp
adc
shlb
nop
loopne
add
sti
cmp
mul
pop
xchg
inc
lods
addr16
rclb
mov
mov
in
xchg
jle
ret
insb
xrelease
pushf
pop
pushf
cmpsb
je
xor
fisubs
notb
cmpsb
dec
jmp
mov
outsl
movsb
jnp
mov
sub
ja
lds
inc
lock
in
out
rcll
test
jne
orl
inc
aas
test
jbe
int3
popa
lea
jp
test
dec
icebp
mov
pop
cmp
mov
pop
mov
or
icebp
lock
gs
cmp
dec
xchg
adc
mov
sub
xchg
movsl
inc
xchg
sbb
jmp
mov
jnp
cwtl
jnp
inc
lds
jl
cmp
jg
add
jmp
std
aas
mov
pop
popa
pop
and
sbb
adc
jle
cmp
std
jmp
ret
mov
or
pushf
push
daa
xchg
push
outsb
aas
pop
call
cmpsb
mov
fisubrl
aad
add
jg
dec
jno
jecxz
push
stos
cmp
push
mov
pop
ss
push
push
clc
cmpsl
pop
inc
cmp
in
pop
inc
popa
mov
je
bound
fildl
or
outsl
pop
out
mov
ds
xchg
test
mov
add
jmp
sti
mov
add
inc
in
incb
es
stos
popa
or
aad
test
inc
test
jno
mov
pop
or
ss
xchg
std
loop
push
popa
leave
adc
lods
sbb
and
and
xchg
test
adc
ss
ss
push
dec
jecxz
movsb
jle
aas
hlt
dec
sub
fsubl
or
loopne
mov
mov
jo
pop
fsts
mov
mov
sub
jns
scas
imul
push
push
and
jle
sbb
dec
xchg
movsb
fmuls
mov
mov
into
jecxz
dec
push
xchg
imul
sub
jne
in
inc
pop
js
push
lds
in
test
cmpsl
fcmovu
jno
adc
pop
dec
push
out
xchg
or
xlat
rorb
mov
ret
loope
ret
jle
xchg
jmp
arpl
popf
jno
push
xor
imull
adc
or
xchg
cltd
jecxz
shrl
into
xchg
pop
sub
xchg
or
repnz
jmp
jl
adc
jo
add
push
lret
mov
iret
enter
lahf
dec
sub
inc
je
into
sbb
ja
pop
add
out
popa
mov
aaa
out
sarb
loop
xchg
pop
jb
mov
or
mov
sahf
data16
imul
sbb
scas
mov
add
push
inc
pop
xor
inc
jns
pop
xchg
andl
jae
xor
cmp
xor
cmpsl
push
push
push
inc
mov
dec
mov
dec
lret
outsb
in
xor
stc
dec
jecxz
mov
jns
push
icebp
lods
stos
imul
lds
sahf
insb
jl
jl
add
idiv
cltd
leave
mov
xor
mov
mov
xor
xor
rolb
sbb
addl
jae
pop
outsl
sbb
test
insb
aad
mov
shrb
add
lahf
into
jmp
call
sub
orl
jbe
fmul
sbb
or
js
fildl
mov
ljmp
jns
xchg
rcrb
mov
cmpsb
and
cmp
xor
adc
test
push
xchg
jno
test
mov
in
leave
mov
loopne
movsl
add
xchg
pop
xchg
pushf
xor
inc
xchg
sub
fdivp
scas
fwait
adc
addr16
cmp
dec
test
bound
mov
sbb
mov
jno
pushf
jo
sub
ffreep
mov
add
mov
mov
adc
inc
out
aaa
adcl
nop
sub
into
mov
mov
scas
subb
sbb
add
adc
popa
cmpsb
aad
inc
movsb
in
mov
push
daa
jae
fists
adc
and
gs
cmp
lahf
push
and
adc
in
lret
sub
add
cmp
xchg
fisubrl
loope
jne
add
decl
ret
add
aam
insb
push
and
lods
push
mov
push
aaa
cmp
es
int
mov
cltd
xor
test
mov
push
call
stc
jb
jl
jnp
xor
std
scas
idivb
and
jns
shl
pmuludq
js
adc
lret
inc
mov
hlt
into
jg
fwait
movsb
adc
inc
jbe
xchg
cld
fdivrl
sub
cltd
or
jbe
mov
aad
aas
mov
xor
xor
popf
push
and
lcall
icebp
lods
dec
sbb
stc
pusha
push
popf
cmp
mov
push
out
and
adc
cs
fs
xchg
xor
mov
add
bound
int
sahf
jle
xlat
pop
cmp
pop
sbb
cli
repnz
jmp
mov
inc
les
leave
dec
xchg
pop
jae
jbe
jecxz
fistps
out
and
fwait
in
clc
and
loope
xor
test
xchg
inc
data16
sub
inc
xchg
cwtl
sti
push
xchg
daa
mov
orl
data16
xor
sbb
push
xor
xchg
add
mov
sbb
movsl
mov
mov
mov
repnz
inc
push
leave
dec
mov
sarb
adc
rolb
std
xor
and
cmp
add
test
push
mov
pop
lds
and
mov
xlat
or
nop
inc
mov
js
dec
sub
sub
out
scas
xor
in
pop
jg
test
movsl
rol
mov
sub
repz
and
rcr
adc
repnz
fucomp
test
orb
test
mov
aas
icebp
inc
testb
cmp
inc
fcmovnu
ffreep
cmc
rclb
cmp
sti
pushf
and
sbb
aad
sub
sub
in
adc
xlat
mov
mov
pop
pop
cli
fmul
cwtl
loop
mov
icebp
cmpsb
movsb
mov
mov
and
dec
cmp
fisttps
jmp
mov
push
inc
add
xor
or
or
jnp
icebp
mov
pop
jb
js
cs
mov
pop
outsl
jae
or
or
pop
inc
ljmp
test
jg
cmc
das
sbb
jg
xor
mov
push
outsb
nop
jbe
pop
jle
in
leave
lret
ret
cltd
scas
and
add
fnstsw
nop
mov
out
jle
repnz
pop
cmp
outsb
bound
mov
in
insb
stos
cmp
xor
in
cmp
out
adc
mov
stos
test
iret
les
push
push
inc
mov
loope
mov
push
xchg
cmc
pop
mov
pop
ss
or
outsl
fstps
pop
test
push
inc
inc
push
jb
and
jo
sub
and
adc
mov
cmpsl
dec
dec
mov
sbb
cwtl
adc
jge
ljmp
push
repz
popf
sub
aaa
lret
lcall
mov
mov
dec
in
in
test
and
cltd
sbb
cmp
rcl
mov
xchg
mov
test
dec
imul
lods
add
xchg
mov
imulb
enter
dec
in
stos
test
outsl
mov
push
lea
xchg
sub
push
insl
mov
mov
cmp
jne
sub
xor
test
cmp
int
insb
es
inc
mov
insb
dec
sbb
pop
clc
xchg
shlb
jne
jno
push
inc
sub
or
cwtl
mov
jae
ret
jle
pop
int3
insl
lcall
cmp
fs
xor
xchg
js
cs
adc
divl
xchg
add
jno
mov
mov
dec
clc
stos
push
mov
js
jg
dec
jbe
sub
sbb
sub
jno
push
aaa
ret
loope
xlat
nop
mov
ja
jne
sub
xchg
dec
out
pop
mov
fidivrl
jne
lea
cmp
xchg
jl
cwtl
pop
imul
aad
adc
mov
push
and
test
stos
mov
sbb
scas
lea
aas
aam
js
andl
or
cmc
pop
je
filds
adc
jl
jle
xlat
push
sbb
popf
imul
inc
or
xor
in
jmp
lret
mov
sub
push
sbb
loope
add
lea
shl
inc
mov
cmpsl
arpl
in
sbb
xchg
insb
fisubrs
insl
jo
out
mov
stos
rcll
ljmp
mov
outsl
push
xbegin
cltd
shl
adcl
aam
lea
je
mov
and
adc
lds
scas
sti
rcrl
fcomip
mov
dec
lea
int
aad
nop
adc
xchg
jb
add
sub
mov
push
add
adc
cmpb
mov
mov
cmp
pop
inc
xor
arpl
sub
fmull
hlt
stos
jbe
call
mov
mov
mov
aas
xlat
call
jns
adcl
xchg
sub
rcrb
leave
and
push
cmp
mulb
push
imul
jp
mov
mov
popf
mov
lahf
cld
cmpl
and
jp
test
repnz
ljmp
nop
ss
shrb
out
aam
push
jns
stc
int
scas
mov
decl
add
push
cmpsl
test
cltd
ds
loop
les
jmp
les
test
mov
insb
jg
rorb
sar
xchg
imul
fs
mov
ljmp
ret
xor
enter
inc
inc
sbb
or
and
loope
push
mov
xor
out
xchg
mov
int3
inc
ficoml
cwtl
sbb
push
pop
orb
movsb
mov
aam
loopne
ss
xor
jbe
leave
stc
cmp
jne
sbb
sbb
add
lea
xchg
push
or
lcall
sub
mov
jo
jmp
xchg
bound
cmpsb
xor
xlat
sub
aaa
sub
cmp
or
dec
das
outsb
andb
lret
pop
repz
stc
arpl
inc
icebp
push
cmp
out
imul
lea
test
mov
adc
in
mov
mov
cmp
mov
mov
add
into
test
pop
add
jmp
dec
jbe
add
ja
mov
cmp
push
fidivrs
roll
add
orb
xchg
push
cmpsl
dec
push
sbb
sbb
std
int3
cmp
jo
xstore-rng
cmpsl
inc
xchg
lock
fildll
pop
inc
jnp
sbb
cmpsl
sbb
in
movsb
xor
jl
pushf
into
mov
imul
fists
push
xlat
add
mov
out
mov
sub
mov
lahf
xchg
push
dec
cld
or
pop
cltd
loope
aaa
scas
lds
push
jae
push
cmp
jnp
ljmp
lret
push
les
imul
in
insb
cmp
aas
imul
adc
cmp
ds
and
pop
das
pop
leave
or
icebp
imull
cmpsb
and
pop
and
insl
jge
sti
xchg
jl
sbb
stos
inc
fsubl
cmp
jnp
icebp
jge
mov
aam
dec
mov
and
movsb
inc
xchg
loop
cmc
mov
adc
loop
inc
imul
sub
push
mov
xor
test
push
xchg
inc
lahf
xchg
lahf
lahf
inc
cs
sti
inc
cmp
jno
mov
jp
into
insb
and
notb
xchg
add
sbb
lods
test
popf
inc
lahf
out
xor
sbb
add
and
lods
fmulp
in
mov
mov
gs
test
mov
push
jmp
push
push
mov
add
outsl
cli
mov
icebp
es
xor
cmc
sahf
push
dec
xchg
mov
add
outsb
mov
icebp
mov
std
loope
leave
pop
repz
mov
sahf
in
loopne
lds
and
xchg
fmull
dec
adc
pop
push
sub
outsl
inc
loop
inc
out
jno
fadds
jmp
push
and
movsb
and
jmp
xchg
xor
mov
jno
loopne
cmc
and
cmp
xor
jl
add
mov
repnz
popa
pop
out
pop
add
push
and
in
pop
pop
mov
aas
shl
fsubs
pop
add
cs
inc
roll
loop
inc
mov
and
cmc
clc
daa
sarl
cld
aam
push
mov
pop
cltd
loop
sti
or
outsb
cmp
scas
push
aaa
sahf
mov
in
pop
dec
pop
arpl
ja
xlat
add
push
hlt
pop
aam
ret
lods
fwait
xor
sub
cmp
xor
xchg
cwtl
loopne
mov
shr
and
in
jb
cld
insl
xchg
aam
popf
out
xor
and
xchg
and
stos
cmpsb
es
dec
or
int3
and
or
or
nop
push
icebp
sbb
mov
subb
mov
xor
scas
inc
xor
push
xchg
jns
jae
cld
add
mov
fdivr
cmp
int
pop
cmp
mov
lret
sarl
sbb
es
pushf
out
dec
shl
inc
jbe
out
lock
dec
xchg
xchg
xchg
in
ret
xchg
stc
dec
pop
mov
js
loop
js
jb
push
push
mov
rol
dec
pop
imul
stc
out
ja
cld
pop
fldenv
sysret
rclw
mov
jnp
mov
jo
sti
arpl
push
adc
insl
lcall
js
lcall
jg
push
and
bound
hlt
cmp
inc
pop
mov
cmp
imul
ret
enter
and
jae
xchg
dec
idivl
jo
xchg
mov
jo
fisubrs
cmp
push
nop
rorl
addr16
out
popa
rcll
push
lods
aas
dec
mov
mov
mov
ret
enter
push
clc
in
call
je
outsb
in
aas
add
push
push
sub
bound
mov
das
mov
mov
pop
pop
lret
ljmp
mov
int3
inc
stos
aad
in
cmp
pop
or
outsb
add
repnz
loopne
addb
push
mov
flds
cmpsb
cmp
xor
icebp
xchg
cmpsl
pop
xorl
sub
mov
jle
lret
pop
rolb
pop
push
jge
sbb
je
out
xchg
lock
cltd
mov
mov
lods
dec
push
mov
sar
mov
scas
outsb
in
into
aam
pop
int3
and
xor
dec
cmpsb
push
sbb
ja
movsl
fnstenv
mulps
data16
nop
lret
or
adc
shlb
fwait
sub
push
pop
mov
fisttps
ss
pop
push
lods
imul
arpl
and
in
xlat
decl
mov
mov
or
pop
mov
pop
push
enter
xchg
sbb
loopne
and
dec
jns
addr16
mov
clc
popa
addb
das
jl
pop
in
lret
cmp
and
aaa
loopne
mov
lods
jg
sub
push
popa
and
lods
cmp
xor
mov
lds
pmaxsw
adc
add
push
pop
mov
mov
fiaddl
lock
xor
rorl
add
add
mov
jnp
sti
dec
inc
fwait
std
cmp
lret
cld
cmp
xchg
xchg
push
stos
push
pop
dec
out
std
mov
pusha
shl
fdivp
or
psubsw
inc
aaa
notb
mov
sub
pop
ret
jae
inc
in
into
xor
mov
inc
pop
sbb
pop
dec
push
push
iret
sub
pop
sub
cli
or
idivb
outsb
test
mov
out
insl
fimull
js
mov
push
shrb
push
dec
and
jnp
mov
stos
cmp
push
out
jmp
push
xor
fwait
push
pop
pop
jl,pn
push
jbe
mov
imul
lock
lret
lret
loop
mov
jno
mov
xchg
add
in
aas
outsl
xchg
shrl
inc
mov
xchg
dec
inc
add
add
push
ret
jecxz
pop
dec
popa
fistps
dec
mov
inc
and
aas
and
pop
ds
sub
decl
and
popa
ffreep
out
stos
adc
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
imul
jno
push
xlat
addb
push
lahf
xor
loope
jo
sbb
ja
inc
pop
std
enter
mov
mov
addb
fldl
cmc
push
xlat
fwait
dec
cmp
loope
adc
test
jle
scas
push
leave
push
dec
gs
mov
ret
fwait
mov
adc
or
dec
push
cmpsb
and
pop
cmpsl
movsl
jne
enter
mov
icebp
add
cmp
mov
je,pn
idivl
loope
sub
adc
adc
or
out
int
mov
fistl
pop
imul
pop
mov
push
nop
rorl
outsl
mov
aas
cld
test
and
adc
data16
push
cld
cmpsl
mov
lahf
pop
pusha
movsl
mov
adc
les
xchg
nop
loopne
xchg
int3
mov
insb
lret
into
loopne
cmp
and
xchg
xchg
pop
jnp
ret
aas
mov
add
push
icebp
out
mov
sbb
popa
cmp
outsl
flds
pop
movsl
add
je
pop
or
ss
jle
adc
dec
sub
sbb
add
dec
mov
scas
push
cmp
pop
stos
mov
jmp
sub
dec
sub
jmp
xchg
lock
int
shl
cmp
rcrl
in
or
stos
mov
xchg
js
aas
adc
xchg
mov
and
push
sbb
jp
je
out
movsb
add
rorb
cmp
test
fbstp
cmp
ret
pop
in
mov
call
lret
rcl
in
adc
jmp
jne
xlat
cwtl
std
stc
pop
and
push
outsb
into
out
dec
xchg
test
hlt
cld
pushf
fwait
in
push
out
leave
add
adc
fsubrp
cmc
push
repz
jmp
mov
xchg
xor
out
stc
fs
mov
aam
xor
dec
sub
fistpl
and
sbb
in
sub
popa
jbe
dec
enter
movb
sub
das
mov
push
push
sbb
dec
cmp
mov
je
jmp
mov
jo
add
sbb
xchg
mov
mov
and
lret
sbb
in
cmc
dec
xor
mov
and
push
push
mov
in
mov
or
mov
aaa
lea
pusha
mov
mov
aaa
sub
es
stc
mov
jle
cmc
bound
js
ja
outsb
and
ret
jg
pop
loop
push
mov
mull
sbb
arpl
dec
pop
test
push
in
push
and
cli
mov
movsb
dec
sub
inc
add
mov
jl
push
sub
movsl
sbbb
adc
leave
in
imul
jno
mov
shrb
xchg
ficoml
inc
cmp
fs
mov
or
dec
popa
xlat
xorl
mov
mov
jge
and
sub
add
cmp
call
add
iret
vsubpd
stc
sub
test
fidivs
leave
sub
sar
xchg
add
call
and
sbb
sub
adc
jb
xchg
pop
adc
inc
mov
cwtl
fbld
cmpsb
and
adcb
jo
rorb
push
ret
push
leave
lret
sbb
mov
xchg
outsl
push
mov
lds
call
ljmp
xor
inc
cmp
sub
ret
push
inc
inc
xor
in
ret
adc
popf
cwtl
lahf
pop
mov
jo
scas
cwtl
xchg
adc
jl
jnp
clc
pusha
daa
adc
and
xor
pushf
inc
and
test
cmp
fdivr
enter
push
sub
cltd
rcrl
sub
movsb
sub
imul
pop
test
add
mov
and
adc
jg
mov
jl
movsl
jnp
test
or
arpl
roll
inc
iret
imul
mov
fld
in
mov
lods
ja
and
xor
cwtl
in
fwait
adc
popf
pop
sbb
and
inc
int3
cld
jb
and
lock
cwtl
pop
add
mov
xchg
jnp
testl
je
pop
fs
mov
clc
add
adc
xor
xchg
push
std
xor
mov
fnsave
sbb
les
adc
dec
in
js
dec
and
aam
daa
ljmp
in
jno
in
clc
out
scas
cmp
sbb
push
mov
cwtl
xor
shrl
xchg
mov
sub
xchg
xorb
orb
adc
dec
in
xchg
adc
jmp
xor
lcall
out
lods
jb
mov
xor
xor
jp
push
jne
jl
sti
adc
cmpsb
gs
mov
fcompl
aam
jmp
adc
lock
rcrl
test
inc
lods
pop
push
stc
lret
inc
inc
add
ret
lock
cmc
fwait
sbb
pop
cmp
push
pop
es
aas
shlb
cwtl
jbe
neg
xchg
sub
push
mov
sbb
into
pop
aaa
jne
mov
lock
add
push
jl
inc
lds
loopne
inc
inc
sbb
adcb
notl
sub
lock
cmpsb
icebp
sub
pop
cli
shll
and
les
insl
mov
xlat
retw
aam
sahf
sub
int3
popa
aad
gs
mov
loope
and
jmp
or
das
push
adc
dec
in
and
cmp
aad
inc
mov
cs
mov
or
aam
mov
inc
inc
sub
pop
in
or
push
sbbl
pop
sub
or
mul
bound
inc
push
xor
xor
push
cmpsl
add
fistl
add
repnz
movsb
mov
les
aad
test
cld
movsb
cmp
shlb
and
sub
mov
push
loop
insb
xor
mov
mov
or
or
lods
push
clc
pusha
fcomps
stos
in
xor
sbb
cmp
inc
mov
in
mov
subb
out
lock
add
add
fs
dec
mov
dec
lods
in
out
inc
jno
lret
test
popf
fchs
push
pop
adc
inc
in
dec
lods
aaa
lods
cmp
xor
jo
movsl
ret
mov
into
mov
fimull
int
fdivrs
pushf
pushf
pop
cmp
lds
leave
inc
fucomi
cmp
jns
sbb
sub
push
push
and
pop
sub
push
inc
push
repnz
jnp
jns
outsl
jmp
movsb
xchg
mov
pop
dec
lret
mov
xchg
cmc
stos
adc
mov
jecxz
sub
push
pop
jmp
shr
inc
jno
lods
ljmp
aam
sahf
hlt
repnz
sbb
imul
stc
dec
and
jle
out
mov
push
loopne
jge
pop
inc
inc
cmp
dec
cmpb
imul
out
dec
pop
mov
sub
fwait
imul
dec
shl
sarl
cmp
add
in
lahf
or
xor
into
jno
mov
nop
xor
jmp
outsl
ds
mov
mov
or
and
push
push
fisubl
jns
pop
ss
mov
lret
cmp
xor
jl
xchg
xchg
sbb
mov
stos
dec
push
aam
out
push
jl
pushf
mov
push
int
cmc
and
loope
lods
push
mov
jb
jge
xor
inc
js
clc
rcll
imul
nop
es
lea
fxtract
sub
push
gs
dec
jg
push
adc
into
lods
cmp
loope
sub
scas
jecxz
push
mov
popf
movsb
fcomp
xchg
test
cmp
shrl
out
lcall
in
aas
mov
stos
sbb
push
add
fisttps
sub
shr
jmp
jno
fsubs
arpl
pushf
test
adc
in
push
in
mov
xchg
movsb
add
cmc
aas
popf
mov
mov
out
jg
adc
pop
inc
mov
mov
mov
pop
push
push
sbb
and
sbb
fsubs
cmp
cli
ficompl
mov
jbe
scas
jmp
in
and
mov
inc
std
mov
sub
movsl
adc
mov
enter
shlb
sub
divb
dec
movsl
je
or
push
stos
outsl
call
jae
sub
add
jg
mov
pop
add
mov
sub
daa
sub
push
std
sbb
je
and
gs
test
push
inc
mov
push
adc
pop
dec
mov
lea
push
imul
ds
test
es
test
xchg
xchg
daa
or
sub
fstpt
add
cmp
mov
sub
int3
std
xchg
jg
pop
jne
adc
mov
and
jg
nop
cli
cmc
sub
int3
fldcw
dec
fwait
pop
ret
movsb
mov
call
nop
aam
xchg
and
xchg
fbstp
and
jnp
xor
cmp
ja
outsl
pop
xor
in
and
xor
or
repz
jle
xchg
and
pop
jns
mov
and
or
sub
cmp
push
test
sub
out
imul
sti
jle
mov
int
scas
data16
imul
in
push
xor
inc
mov
mov
mov
jbe
cmp
stos
loopne
lock
mov
mov
xchg
jno
dec
xchg
filds
pop
add
sbb
sub
and
arpl
add
dec
loope
lret
jnp
loopne
ret
ret
inc
sbb
fsubl
jne
push
mov
gs
in
mov
lahf
jg
repnz
mov
or
jo
aam
test
test
leave
addr16
sbb
sub
das
sbb
ds
adc
out
mulb
fmull
xor
imul
xchg
data16
mov
adc
mov
xor
xlat
cmp
inc
or
lods
cmp
ret
sub
adcl
mov
and
push
iret
adc
jns
test
inc
sub
mov
dec
xchg
add
push
frstor
aad
cmp
pusha
mov
xchg
cmpsb
pop
testl
mov
sbb
xor
sub
lcall
push
sbb
dec
or
sbb
or
sbb
into
push
mov
mull
and
daa
inc
int3
hlt
jge
jns
push
fildl
stos
popa
jno
test
sub
push
scas
cs
mov
lds
sub
xor
insb
rcr
and
aaa
sub
rolb
int
adc
testl
pop
and
add
pop
mov
mov
cmc
push
push
and
add
sub
lcall
loopne
mov
insb
stos
inc
xor
repnz
orl
sub
or
xchg
sub
and
divb
cmp
pop
cmp
lcall
repnz
shl
std
arpl
imul
jp
mov
cmp
push
cmp
jae
sti
loop
xor
lret
sub
mov
push
clc
imul
mov
xchg
or
nop
cmp
test
push
das
fadds
jl
xchg
pop
and
testb
jge
or
lds
xchg
mov
dec
mov
xchg
sbb
or
test
iret
jns
inc
pop
les
push
lahf
sahf
pop
xchg
jnp
aas
or
and
imul
bound
add
data16
shl
xchg
fldenv
cwtl
mul
shlb
pusha
shlb
fdivrl
aad
cmc
sbb
lahf
iret
je
insb
pop
lret
fstpt
xchg
jp
incb
jmp
mov
mov
or
and
jno
jo
xor
or
dec
mov
cltd
dec
fbstp
push
push
lea
movsb
das
popf
das
test
lods
shlb
cmp
and
push
arpl
mov
inc
fcoms
cwtl
and
dec
mov
les
pop
aad
xchg
scas
dec
xor
insb
movsb
sbb
nop
mov
daa
push
add
aas
sahf
arpl
sub
jo
jae
lahf
sub
aam
mov
popl
scas
js
or
pushf
cmp
push
in
mov
adcb
iret
adc
pop
inc
je
sub
adcb
jb
or
inc
push
pop
fisubl
cltd
jge
mov
out
adc
inc
int3
mov
mov
cmp
imull
mov
jo
and
ficomps
stos
ret
pusha
lcall
cli
fwait
sub
jbe
fsubr
mov
sbb
mov
sahf
ffreep
xlat
inc
push
cli
push
int3
std
or
cmp
xor
add
leave
mov
pushf
sbb
jo
pop
mov
hlt
fstp
loop
pop
in
and
add
mov
repz
adc
mov
test
adc
pop
xor
sbb
mov
int
iret
add
mov
sbb
xchg
inc
enter
and
jl
jmp
sbb
xor
mov
addr16
add
sub
stos
rolb
stc
push
sub
push
adc
insl
cmpsl
push
sarl
int3
ljmp
sbb
lea
adc
lea
jg
loop
test
stos
pop
rorb
xlat
adc
cmc
push
fstl
sub
repnz
adc
mov
scas
repnz
mov
inc
mov
lret
push
leave
out
mov
int3
mov
js
subb
mov
sahf
push
jne
fisubl
fs
xchg
popa
outsb
aam
adc
or
xchg
xchg
pop
jbe
jg
aad
out
jne
jae
adc
cmp
pop
jge
sub
dec
ss
mov
xchg
mov
mov
dec
fdivl
call
jge,pt
lcall
imul
add
popa
dec
mov
xor
jnp
test
push
rorl
push
mov
into
les
ret
dec
rclb
dec
dec
dec
out
cmpl
pop
cmpsb
imul
lods
cmp
xlat
stos
mov
mov
jae
insl
adcl
jmp
pusha
aas
icebp
sets
mov
pop
subl
popf
jns
andl
and
es
shll
or
loopne
push
popa
or
push
stc
pop
mov
cwtl
inc
mov
push
sub
leave
cltd
mov
loopne
xchg
jns
sahf
push
xchg
dec
mov
lea
and
pop
add
push
or
jbe
sbb
mov
mov
add
ljmp
bound
lds
pop
jns
xchg
pop
cmp
hlt
idivb
shlb
cltd
xor
js
inc
mov
xchg
push
xor
push
shrb
jmp
cs
dec
dec
and
cmp
adc
or
inc
dec
repnz
and
jb
jno
mov
push
inc
mov
inc
stc
xor
sub
ljmp
gs
cwtl
xchg
sarl
adcb
dec
mov
mov
sbb
mov
mov
repnz
or
adc
data16
pop
jle
cs
mov
jp
aas
rcl
rcrb
dec
test
fs
mov
sbb
adc
popf
xchg
and
mov
mov
jecxz
jnp
mov
mov
aad
scas
mov
mov
push
xor
hlt
mov
and
das
sti
xchg
or
stc
ja
sbb
inc
fstps
inc
sbbl
adc
xor
hlt
lahf
shlb
jbe
les
pop
pop
xor
and
pop
add
shll
push
jae
jp
std
cmpsl
add
das
xor
jb
movl
mov
aad
or
jne
adc
push
cmp
push
push
hlt
ljmp
add
mov
insl
pop
and
mov
dec
fidivrl
sbb
add
push
cmp
pop
sub
jp
push
leave
adcl
dec
iret
xchg
xor
mov
jge,pt
jo
sbb
ss
pop
lcall
stos
inc
aas
in
mov
mov
decb
ret
in
xchg
fcmovnb
std
push
jecxz
and
mov
ss
iret
lds
jno
push
int
es
test
inc
addr16
jne
cmp
or
aad
scas
mov
and
dec
and
push
fadds
cmp
leave
cli
jae
rolb
arpl
ror
ds
lock
xor
lcall
outsl
push
rcrl
mov
ljmp
repnz
clc
stc
test
cmp
xchg
push
sbb
push
push
mov
nop
sbb
loope
adc
jne
add
jnp
testb
outsl
inc
add
pushf
mov
xchg
test
sbb
mov
leave
outsb
cli
stos
and
test
cmp
into
cltd
inc
cmp
pusha
ja
push
fwait
inc
dec
std
aam
std
add
sbb
out
mov
dec
add
popf
repz
or
out
in
xor
rcr
xor
nop
push
xor
std
pop
subl
stc
mov
lret
rcll
mov
clc
ret
jno
mov
stc
les
es
fs
adc
jns
xchg
enter
movsl
in
out
cmp
cmp
add
dec
mov
dec
and
cmp
cltd
add
mov
vmaxpd
lahf
push
out
ja
jbe
in
xchg
scas
mov
int
in
and
stos
add
jmp
fwait
sti
push
fdivl
push
and
les
jle
sub
pop
das
jno
sahf
sub
into
xchg
cmp
push
push
adc
inc
not
dec
shlb
mov
mov
xchg
nop
lock
push
outsl
jno
das
adc
adc
divb
aas
dec
andl
sbb
pusha
cmp
movsb
inc
cmc
mov
or
sbb
xor
rclb
ljmp
jmp
adc
loop
std
cmp
inc
test
nop
popf
sbb
mov
stos
mov
cmp
pop
and
in
push
mov
jne
ljmp
or
in
into
push
lods
clc
popf
jae
mov
shlb
lret
push
idiv
adc
loope
mov
push
arpl
dec
nop
mov
jge
shll
enter
push
push
jmp
pop
xor
ret
fldt
das
ret
mov
addb
xchg
lds
mov
or
test
data16
jmp
mov
pop
lahf
sbb
push
aad
pushf
jecxz
std
xchg
je
push
aam
out
dec
mov
movsb
cmp
repnz
loope
and
rcl
adc
out
jns
bound
call
xchg
je
loopne
aaa
into
or
cmp
or
fs
mov
sarb
inc
mov
cmp
stos
mov
stos
adc
pop
hlt
out
nop
inc
subb
mov
jae
push
xor
mov
jno
inc
mov
mov
je
or
xor
pusha
push
arpl
add
inc
pushf
fisttps
leave
into
rclb
or
insb
pushf
dec
loop
dec
aam
jne
sub
push
dec
pop
pusha
cmp
sbb
pop
add
sub
in
xchg
mov
scas
cmc
xchg
pop
pop
inc
push
cld
movsb
pop
js
mov
test
jbe
scas
push
jecxz
repz
loopne
nop
xchg
out
fiadds
push
in
ret
pop
dec
fadd
jb
and
cmpb
fisubs
mov
hlt
ss
mov
push
pop
sub
sbb
adc
add
add
or
arpl
filds
and
test
and
in
pop
lret
mov
sub
jb
in
shrl
aam
lock
pop
adc
pminsw
jb
mov
nop
arpl
out
sbb
and
cmpb
jnp
fwait
adc
cltd
bound
les
inc
call
sub
idivb
mov
xchg
cmp
cmpsl
xlat
mov
adc
int3
lea
push
push
xor
dec
inc
aas
sbb
stos
push
xlat
sbb
mov
pop
or
jbe
or
push
aaa
inc
mov
push
mov
cmp
cwtl
aad
push
xchg
mov
push
mov
loopne
pop
fstps
js
dec
xor
shll
enterw
ret
pop
sub
pop
nop
sbb
push
shlb
out
adc
scas
sub
iret
cmc
data16
ds
cmp
pushf
repnz
xchg
mov
div
xchg
add
add
mov
je
jge
xchg
push
cmp
cmp
sbb
push
inc
daa
cmp
mov
push
lcall
mov
xchg
jns
inc
mov
inc
inc
jl
sub
push
lret
push
add
push
xchg
iret
mov
xchg
ja
clc
lock
push
lcall
add
pop
xor
xchg
push
sub
lahf
mov
pop
sbb
cmpsb
ja
mov
add
mov
lea
insl
loop
sbb
push
leave
xor
jns
sub
push
mov
pop
mov
and
fisubs
cs
xchg
test
dec
mov
popa
inc
les
test
jne
ja
sbb
popa
xor
pop
xchg
shll
xchg
push
sbb
loop
inc
mov
push
mov
fistpl
gs
ret
in
adc
js
mov
dec
push
mov
cs
leave
test
xor
mov
lods
mov
hlt
scas
inc
sbb
mov
es
mov
sbbb
adc
sbb
andl
in
les
ret
jne
adc
pop
cwtl
inc
xor
movsl
clc
lea
loopne
sub
das
dec
mov
and
mov
sahf
test
jmp
or
jbe
dec
sub
dec
xor
xor
out
adc
xchg
inc
cmp
jo
fsts
inc
mov
outsl
and
out
mov
popf
adc
dec
inc
mov
stos
sbb
mov
mov
ljmp
add
imul
lret
mov
pop
shlb
jmp
xchg
xlat
xchg
jns
test
insb
jnp
shr
and
xor
outsl
mov
imul
sub
lods
push
xor
loop
outsb
arpl
sbb
pushf
stos
mov
sarb
push
ret
mov
inc
xchg
punpckhbw
xlat
cmpsl
pop
je
inc
pop
xor
xchg
cmp
notl
into
repnz
es
mov
pop
sahf
mov
inc
ljmp
loope
mov
push
rcrb
mov
sbb
xchg
push
xchg
addr16
cs
fwait
mov
xor
dec
mov
test
loop
mov
add
dec
add
daa
ja
adc
pop
push
aam
popa
sub
hlt
dec
cs
sbb
mov
inc
test
adc
in
frstor
iret
or
rclb
push
push
mov
ret
dec
or
sub
in
out
xor
mov
out
pop
mov
mov
scas
pop
xor
mov
sbb
pop
jle
lret
adc
push
out
adc
add
fmul
lret
sbb
and
jp
dec
push
push
loop
data16
adc
pop
int3
add
dec
gs
pop
sub
add
imul
jle
sbbl
push
push
aad
repnz
loop
and
test
push
mov
push
repnz
adcl
fistps
jae
leave
sti
push
aas
adc
lahf
mov
icebp
push
bswap
test
lock
fiaddl
lea
mov
jl
xchg
mov
out
mov
cmp
cmpsb
fdivrp
sarl
divl
push
jns
jmp
lret
inc
pop
negl
pop
test
jecxz
aam
pop
frstor
xchg
imul
int3
loopne
adc
fists
out
xchg
sub
pop
sub
repz
fimuls
out
loopne
pop
dec
add
mov
jecxz
cs
push
ds
inc
sbb
in
inc
in
pop
fidivl
and
cmp
jo
call
mov
add
loopne
push
push
int
sub
icebp
cmp
fwait
or
arpl
or
addr16
pop
mov
xor
lret
sbb
and
push
addr16
lds
jge
enter
adc
rorl
cs
movsb
mov
dec
adc
xor
std
push
mov
or
and
stos
sub
push
and
cli
loopne
or
adc
jl
add
cli
fsubs
lds
divb
testb
mov
pop
xchg
rorb
xchg
je
jmp
mov
pop
out
cli
mov
jge
and
mov
std
sbb
jecxz
fs
mov
mov
int3
pop
out
pop
int
mov
xchg
sub
testl
in
pop
inc
pop
popf
iret
jb
mov
push
popf
addr16
pop
ficoms
pop
pop
jno
push
sub
and
sbb
dec
xor
mov
loope
sub
repz
push
cmp
mov
cmpsb
inc
sbb
and
dec
jne
ja
aaa
les
cs
xchg
repz
shrl
fwait
cwtl
sub
aaa
xchg
mov
out
ror
je
scas
das
adc
xor
enter
and
daa
fisubl
jne,pn
and
pop
lret
pop
movsl
pop
push
imul
dec
scas
icebp
mov
jae
cltd
push
add
icebp
sti
addl
cmp
mov
scas
outsb
lods
scas
cwtl
jp
fcmovnbe
mov
add
xchg
cmp
or
ficompl
mov
fistpl
cld
popa
test
sbb
imul
sar
je
int3
sti
pop
iret
enter
lock
bound
dec
loopne
jge
lahf
sbb
xor
dec
loope
dec
push
pop
xchg
test
inc
lds
dec
cmp
xchg
clc
mov
or
out
xor
pop
cmpsb
push
lret
in
adcb
int
cmp
dec
or
mov
adc
jne
pushl
pop
dec
and
das
dec
mov
ret
lahf
aas
cs
cmp
add
xor
or
mov
xor
or
fsts
filds
aad
mov
das
jae
adc
call
int3
lret
cld
jo
scas
and
outsl
fcom
cmp
inc
or
lock
xor
loopne
mov
fcomps
ret
popa
fdivrs
ljmp
jge
push
pop
push
or
test
push
or
fcmovu
mov
add
sbb
pslld
in
scas
std
mov
jl
cmp
shll
mov
pop
inc
inc
addr16
fists
bound
jg
fcoms
js
mov
test
pop
gs
xor
fildl
lock
aad
jle
pop
xchg
add
sti
mov
adc
imul
dec
xlat
adc
mov
ret
inc
xchg
imulb
cmpb
scas
mov
test
sbbb
fdivrs
jno
or
sub
mov
pop
adc
lods
pop
jl
jns
xchg
push
sbb
jo
sub
lock
js
cmpsl
mov
xor
aaa
adc
xchg
pop
xchg
or
arpl
fucomi
cmp
outsb
bound
out
dec
xor
out
sub
popf
and
daa
test
gs
loope
xchg
inc
mov
dec
jno
cld
das
fsubs
adcl
outsl
test
mov
int3
push
push
xchg
stc
mov
lcall
dec
mov
xor
sbb
rol
fmull
jle
jl
insb
push
push
push
sti
mov
and
ficoml
aam
movsb
flds
pop
mov
dec
movsb
push
cmp
jnp
lock
or
movsl
out
adc
inc
and
cltd
insl
add
jle
or
mov
insb
mov
adc
rol
roll
sbb
cmp
adc
push
push
std
out
add
jecxz
adc
xchg
ret
sbb
cmp
mov
inc
jb
xor
testb
lds
sub
in
jo
mov
sbb
sub
mov
mov
xchg
mov
lock
push
scas
pusha
push
daa
push
and
pop
lock
mov
cmpsl
aam
push
or
in
insl
mov
jg,pn
cmp
ja
cmpsl
mov
jp
xor
ret
out
std
push
push
jnp
cmc
out
outsl
in
fistpl
into
outsl
loope
lcall
jp
jmp
cs
pop
adc
iret
aad
stc
push
ds
inc
mov
jb
pop
dec
lods
in
jp
push
mov
aad
int
push
cltd
cwtl
inc
lahf
or
inc
test
pop
stos
mov
mov
mov
inc
pusha
adc
test
stos
xchg
dec
addl
sbb
jne
mov
fsts
or
std
out
sbb
push
in
and
sarb
es
flds
es
faddl
push
jg
adc
ljmp
mov
icebp
add
dec
arpl
mov
jge
cli
mov
mov
cmpsb
xlat
sbb
mov
js
cmp
cmpsl
or
cmp
inc
scas
ja
sbb
jecxz
push
or
rorl
lds
popa
fidivrs
stc
cs
push
xchg
add
mov
and
shlb
into
xchg
lret
adc
xor
adc
add
add
popf
popf
inc
movsb
mov
xchg
pop
lods
mov
mov
aad
shr
addr16
cld
mov
jge
out
or
addr16
hlt
push
gs
sbb
fidivs
cmpsb
out
into
daa
fimull
mov
jle
imul
push
pop
adc
out
dec
ret
add
mov
xchg
lds
loope
push
test
and
cmc
lcall
mov
xchg
cltd
sahf
mov
sbb
insl
ss
cmpsb
into
aad
into
dec
pop
test
fwait
mov
mov
je
sbb
rcl
jbe
dec
or
lret
int
into
push
sub
insb
addr16
xor
push
push
pop
pop
arpl
repnz
popf
cmp
sbb
cmpsb
jnp
pop
mov
jl
push
mov
loopne
adc
dec
into
test
mov
jnp
xchg
mov
out
or
fisttpl
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
insl
sbb
adc
jp
aam
jecxz
jne
cwtl
inc
push
icebp
aad
js
out
jo
sbb
stos
cmp
jbe
jmp
jb
push
cltd
movsl
clc
push
fsubr
arpl
shlb
push
adc
loope
and
mov
mov
test
rclb
adc
push
in
mov
fidivl
pop
fisubrl
enter
cmp
clc
mov
sbb
xchg
inc
jne
xchg
push
inc
sub
cmp
loop
lea
pop
ret
fbld
push
nop
jno
adc
mov
mov
sub
mov
or
loope
decl
imul
insl
ljmp
mov
adc
rcl
addr16
jo
inc
scas
add
mov
sbb
cmc
repnz
jae
lret
pop
stc
pop
mov
cli
jns
xchg
add
sub
jns
dec
push
xchg
lods
rcr
int
loop
adc
mov
jecxz
arpl
jecxz
cwtl
lcall
stos
cmpsl
cmp
mov
fs
in
sbb
imul
scas
rclb
mov
int
mov
enter
adc
mov
and
imul
sub
and
inc
xchg
push
mov
sahf
pop
pushf
jle
xchg
inc
cmp
pop
mov
sub
or
addr16
cmp
and
call
push
inc
mov
cmpsb
in
mov
pop
sub
ret
mov
pop
xor
std
mov
jge
pop
jp
sbb
bound
inc
repnz
pushf
ret
inc
mov
out
sbb
pop
in
outsb
push
sbb
repz
lock
sub
cmp
sahf
push
xorl
push
out
add
mov
or
push
out
test
cwtl
dec
fs
cs
inc
loop
jb
sub
adc
adc
enter
mov
cmc
push
in
and
jbe
jle
push
push
test
jmp
sbb
add
dec
push
and
das
clc
mov
xchg
mov
mov
imul
scas
push
cmp
pop
test
jmp
push
pushf
mov
or
adc
jno
rorb
xlat
pop
out
pop
jne
xchg
cmp
mov
xor
add
fnstcw
xor
dec
jp
in
and
push
push
xchg
fwait
and
xor
inc
ss
test
push
out
jnp
mov
mov
xchg
and
outsl
sub
scas
inc
ret
pushl
lcall
test
rcll
jl
mov
insb
xor
dec
inc
cld
je
inc
enter
xchg
lret
xchg
jae
stc
sahf
repnz
add
xor
mov
cs
icebp
aaa
fidivs
scas
mov
pop
sti
cld
and
adc
std
insb
mov
pop
out
ret
dec
mov
ja
outsb
jbe
jle
pop
mov
clc
and
bnd
in
into
push
xchg
stc
add
arpl
sti
movsb
lahf
test
dec
xor
ficoml
mov
pop
aaa
call
pusha
mov
cs
mov
push
push
mov
je
push
out
push
add
xchg
xchg
inc
pop
aam
icebp
jmp
jns
mov
arpl
hlt
not
ljmp
fwait
sub
out
sub
leave
imul
inc
jp
mov
clc
insb
dec
aaa
and
dec
fldl
jbe
movsb
inc
shl
stos
mov
inc
push
adc
and
in
ljmp
movsl
dec
and
xchg
jg
call
inc
mov
imul
cmp
pop
cmp
filds
movsb
pop
mov
xchg
mov
popf
lods
xchg
sbb
inc
negb
push
icebp
cli
sub
insb
mov
xor
sar
push
cmc
andl
push
mov
pushf
stos
pop
aaa
inc
insb
push
jnp
test
nop
add
pop
xor
inc
icebp
nop
dec
repz
and
inc
testb
and
push
dec
fbstp
cld
add
mull
pop
idivb
or
pop
test
sbb
add
stos
inc
adc
js
je
jecxz
jg
in
out
or
icebp
popa
mov
jp
pop
jecxz
ja
loope
ret
inc
mov
aas
xor
pop
and
pusha
mov
data16
mov
in
xchg
es
jl
int3
in
add
add
push
test
adc
jno
popf
mov
dec
xchg
cs
fldcw
ret
or
enter
xchg
lods
decb
and
xchg
rclb
pop
sbb
or
inc
in
mov
lea
add
inc
fbstp
incb
sub
and
imul
mov
pop
push
inc
daa
popa
aam
test
xchg
cmpsl
push
fsubs
xlat
ficoms
xchg
fmull
mov
mov
inc
pop
cmp
ret
mov
test
xlat
rolb
cmp
leave
popf
inc
pusha
jecxz
and
xchg
jge
xlat
push
ret
mov
jno
xor
lods
mov
les
sbb
cmp
test
push
add
flds
push
pop
nop
push
inc
sbb
push
divb
adc
ret
or
cmc
stos
mov
test
cmp
imul
or
jl
mov
and
scas
pop
dec
repz
xchg
in
bound
ljmp
in
cmpsb
int3
xchg
xchg
add
bound
xorb
scas
push
dec
addr16
mov
int3
jg
jns
add
mov
enter
inc
popf
pop
xchg
flds
cmp
clc
xchg
sbb
fsubs
and
shlb
mov
mov
lea
mov
fsubp
sbb
dec
mov
inc
push
fsubs
cmp
subl
push
cmp
cli
push
xchg
lds
out
rorb
icebp
aaa
popf
add
call
xchg
ficoml
out
cmpsl
cmp
pop
mov
stc
pop
int3
data16
arpl
or
sbb
jmp
jl
add
data16
mov
push
mov
loope
stc
filds
fdivrs
sub
cmp
imul
fs
pandn
out
repz
aas
mov
leave
sahf
icebp
test
sbb
pop
mov
push
or
adcb
xchg
in
out
arpl
loope
stc
iret
bound
mov
aad
pop
adc
clc
jnp
fdivrs
jl
dec
adc
outsl
fidivs
dec
lret
je
aas
sub
xor
dec
mov
mov
add
mov
loope
cltd
sahf
shll
decl
decl
add
and
lods
repz
lcall
cwtl
cmpb
sub
pop
sbb
test
std
cmp
gs
sbb
xlat
movsb
pop
sar
jns
in
repnz
xchg
repnz
pop
sbb
mov
push
sbb
sub
das
clc
pop
adc
out
mov
lahf
test
ljmp
inc
fadds
and
xchg
cli
aas
scas
rorb
push
adc
fdivl
cmpsb
sbb
ror
into
out
lock
scas
jecxz
xchg
cltd
push
cs
jge,pt
mov
fwait
push
mov
lods
push
shr
adc
test
pusha
mov
xchg
test
shl
mov
jae
add
andl
repnz
dec
jb
lahf
xchg
sub
out
jo
jnp
clc
aaa
push
mov
jmp
and
test
mov
mov
cmpsl
fs
or
jno
jae
es
xor
je
aas
insb
or
repz
sti
shld
xchg
fistpl
and
jmp
lea
ficoml
and
jle
call
bound
xchg
aaa
sub
add
and
popa
mov
adcb
nop
push
cltd
add
lret
adc
repnz
cwtl
mov
push
xchg
stc
jbe
scas
stos
test
add
std
push
aam
les
xchg
sbb
push
pusha
pop
bnd
fsubs
lret
inc
push
jl
mov
ffree
daa
int
pop
fwait
mov
jae
xor
push
addr16
cmc
inc
or
inc
cmp
jo
cmp
or
out
lret
mov
xchg
pop
xor
aam
cmc
mov
hlt
icebp
inc
lcall
push
push
and
loope
fwait
add
xor
add
imul
bound
daa
add
sub
aam
je
cmp
cwtl
out
mov
arpl
pushf
pop
and
sub
sbb
xchg
jno
mov
lods
popf
mov
cli
int3
pop
test
and
mov
scas
push
and
pop
sub
mov
jl
add
xor
xor
pusha
jle
xor
lret
mov
mov
jo
jmp
repz
xor
pop
sti
and
ss
lcall
pop
jbe
mov
addr16
sub
rolb
mov
sbb
jmp
cs
mov
push
aas
lret
hlt
cmp
pop
mov
icebp
leave
pop
stos
sub
clc
stos
jmp
push
adc
out
lret
lahf
add
ret
adc
hlt
push
js
lods
lds
cmp
loope
pop
jno
fstpl
sub
push
imul
mov
jge
fcoml
mov
sbbl
shrl
mov
jle
inc
mov
je
inc
ds
hlt
mov
mov
sbb
fwait
push
pop
cs
mov
ret
movsl
pop
dec
xchg
adc
les
ljmp
mov
xchg
out
out
mov
adc
ja
imul
mov
mov
push
xchg
dec
ret
int3
call
scas
sahf
mov
repnz
daa
sbb
xor
adc
push
lds
cmp
arpl
dec
sbb
add
mov
mov
mov
pop
jmp
inc
loopne
add
in
out
and
jbe
aam
pop
lcall
bound
dec
xor
ds
cmc
repz
pop
and
hlt
loop
xor
fisubrs
or
jg
push
xchg
in
jp
add
mov
jecxz
jecxz
clc
mov
sub
mov
xor
je
outsl
sbb
and
and
pop
loope
inc
mov
lahf
iret
jp
push
and
rorl
ret
loopne
pop
lods
xor
push
movsl
sahf
sahf
dec
scas
pop
js
mov
lret
pop
xchg
jecxz
jp
push
push
sti
testl
sbbl
out
mov
xchg
jbe
pop
outsb
imul
mov
hlt
mov
insb
pop
loope
out
sarb
addr16
sub
cmc
fidivs
testb
sarl
out
leave
aam
or
and
push
ja
mov
add
push
pusha
inc
sub
xorl
out
adcl
mov
add
popf
adc
push
hlt
sub
cmp
or
femms
int3
push
sub
pop
sub
cmc
xchg
lcall
cld
xor
sbb
pop
bound
out
inc
addr16
sbb
cwtl
push
jbe
js
jecxz
leave
mov
push
dec
mov
stc
xor
fs
cmp
inc
mov
xor
mov
and
cmp
das
jae
add
scas
and
stos
add
inc
sar
xlat
ret
bound
lahf
scas
fs
aas
and
cmp
push
filds
pop
mov
sbb
xor
mov
scas
pop
pop
addr16
xlat
mov
cmpsl
insl
mov
ljmp
stos
call
mov
and
push
cmp
sahf
jno
ret
mov
dec
mov
rolb
pop
out
mov
cmpl
test
aad
xor
lret
movsl
stos
repz
js
aam
notb
push
daa
aaa
dec
pop
adc
dec
frstor
mov
popf
push
dec
mov
nop
imull
repnz
pop
loope
pop
adc
test
mov
arpl
js
mov
fmulp
adc
push
or
lahf
xchg
ret
stos
rolb
je
cld
jns
lea
jb
adc
jge
sbb
dec
arpl
aad
cmc
xchg
testl
sbb
and
jecxz
xor
out
cmp
lds
hlt
sbb
mov
out
push
xor
je
pushf
test
inc
cmp
cmp
idiv
scas
mov
nop
shl
test
push
add
push
sbb
lret
push
movsb
adc
mov
outsl
xchg
xlat
cwtl
loop
int3
insl
xchg
adc
out
je
jg
and
mov
push
stos
pop
out
or
cmpsb
lds
mov
xor
jne
test
test
sub
cmp
push
sbbl
mov
jecxz
aam
xchg
jno
call
jbe
movsb
ud0
sub
sbb
sbb
mov
popf
inc
das
in
dec
jns
inc
inc
adc
mov
mov
je
adc
add
sub
push
pop
sbb
xchg
and
xchg
inc
rclb
pop
imul
fiadds
xor
mov
xlat
out
mov
lock
adc
ss
mov
nop
mov
ss
push
cmpsl
cmpsb
mov
scas
orb
loop
in
lret
adc
cmp
inc
mov
shl
in
testl
jmp
out
push
add
test
jo
test
add
pop
xchg
pop
and
push
add
daa
out
bnd
rcrl
cmp
cltd
jmp
xchg
inc
lods
lods
sarl
outsb
call
nop
jne
mov
add
clc
stos
sti
movsl
repnz
in
xor
mov
stos
and
push
mov
add
jne
jns
or
xchg
out
in
lret
lods
stos
or
xchg
push
cmc
push
sarb
fstps
outsl
xchg
iret
dec
and
sbb
lods
inc
testl
call
loop
mov
outsb
stos
jb
inc
sti
imull
ret
mov
pop
xlat
jp
jg
sti
outsl
jle
addr16
xor
mov
incl
xchg
lret
add
pop
into
iret
add
sbb
clc
mov
push
clc
das
mov
lret
fwait
dec
dec
insl
scas
xchg
ret
lods
add
xor
pop
outsl
ret
mov
popf
mov
adc
and
xchg
sub
cmp
sub
unpckhps
mov
push
sbb
out
test
sub
push
mov
xor
bound
sar
pop
cmp
loope
xchg
jle
xchg
ja
or
pop
aas
and
adc
mov
dec
fisubrl
or
gs
dec
das
scas
mull
iret
mov
mov
outsb
adcb
jge
pop
pop
push
jno
rcl
lods
mov
mov
xchg
fsubrl
in
in
jnp
xchg
jb
or
inc
dec
sbb
arpl
and
adc
popa
lret
ljmp
xor
fnstsw
jmp
and
or
inc
xor
pop
cmpsl
fimuls
es
popa
sub
shlb
pop
out
mov
xor
or
adc
ds
fmull
mov
inc
fsubs
xor
jns
adc
cmp
pushf
aas
data16
ljmp
cld
and
les
cmp
mov
loopne
or
fmulp
cmp
hlt
fisubl
test
adc
mov
std
pop
mov
jno
cmp
xlat
jb
sub
hlt
in
or
andb
test
or
test
add
data16
inc
dec
divb
mov
fadd
aaa
push
xchg
mov
sub
adc
out
and
pop
jl
mov
xlat
or
jo
cltd
scas
in
in
push
movsl
mov
push
je
imul
insb
jb
xlat
fsubrl
add
or
lcall
aas
jge
or
pop
xlat
mov
fbstp
inc
test
cmp
mov
mulb
in
pop
xchg
or
sti
mov
pop
loopne
mov
ret
dec
loop
dec
pop
aad
adc
xchg
pop
push
leave
jno
pushf
cli
adc
gs
repnz
std
cmp
fstpt
in
inc
mov
cmp
cmp
sub
sub
fucomi
pop
mov
and
mov
stos
ds
pop
lds
and
scas
add
hlt
sahf
xor
pusha
mov
sbb
out
adc
popa
fnsetpm(287
push
adc
out
inc
inc
cmp
xchg
jg
inc
inc
call
repz
lcall
jno
cmc
dec
mov
mov
popa
xchg
ds
shlb
jl
add
paddsw
popa
add
pusha
dec
test
push
adc
fistpll
lcall
fsubrs
push
test
subl
imul
sbb
sahf
out
cmp
mov
jmp
pop
dec
mov
loop
inc
fldcw
divl
sbb
test
das
fisubrs
xchg
cwtl
mov
mov
mov
cmp
pop
aam
jno
and
loope
lret
lods
int
ljmp
fdivrp
cmp
push
fidivrs
xlat
je
push
pop
shrl
xchg
js
inc
mov
inc
xlat
jle
dec
ret
pushf
jge
cmc
sub
pop
out
ss
add
out
outsl
xor
dec
fistl
mov
insl
xchg
add
lods
adc
iret
stos
add
jns
test
pop
es
xchg
push
pop
cmp
mov
push
pusha
sub
push
iret
out
arpl
push
rclb
in
out
je
aaa
rep
xor
addr16
in
inc
jp
mov
mov
jo
ljmp
cmp
inc
jecxz
gs
mov
inc
cli
fs
add
lret
call
mov
add
sub
sbb
fdiv
imul
scas
mov
ret
cmc
jecxz
clc
mov
jg
icebp
jnp
mov
daa
and
xchg
push
cmpsl
mov
mov
add
xor
mov
mov
orl
xchg
je
cmp
nop
pop
adc
test
test
ja
jo
ficoms
add
add
leave
adc
aam
les
cmp
and
push
ljmp
aaa
dec
mov
cmpl
popl
stc
repz
sbb
jae
xlat
outsl
pop
hlt
out
enter
jbe
ret
mov
les
outsl
mov
push
mov
pop
mov
pushf
mov
cmp
xchg
xchg
into
pop
cmpsb
bound
ret
or
xor
popa
pop
sub
aam
popa
sahf
cli
nop
popf
pusha
nop
lods
sub
and
pop
aas
popf
mov
pop
cs
scas
stc
shrl
stc
rorb
dec
in
dec
xchg
lret
enter
dec
fcmovnbe
mov
dec
cmp
stc
loop
imulb
cli
mov
dec
jge
adc
xor
sub
pop
jle
ret
dec
fs
cmp
jl
testl
jp
aad
insb
dec
sub
les
andb
fdivrs
test
push
fisubrs
repnz
cs
cli
dec
pushf
gs
inc
aad
in
sbb
inc
sbb
sbb
out
rolb
pop
dec
std
lcall
adc
mov
xchg
cmp
js
jmp
leave
lret
mov
cmpsb
push
orl
rorb
shll
movsl
mov
rcll
test
xchg
dec
xchg
cmp
fidivl
jne
push
mov
cmc
lods
insb
sbb
ret
test
aaa
inc
cltd
xchg
cmp
lds
xor
push
pusha
fwait
jl
dec
or
sub
lcall
dec
mov
jmp
push
sahf
mov
scas
push
pop
cli
rcll
push
mov
jne
repnz
jmp
rcrl
inc
cmp
lock
insl
mov
mov
iret
add
mov
mov
and
push
ss
pop
stos
lret
aaa
fwait
xchg
lcall
pusha
cmp
push
repz
push
cmp
lods
cwtl
sub
pop
jns
ror
sub
push
insb
jp
sahf
popf
add
jg
sarl
pop
dec
dec
int
daa
push
jge
sub
lcall
lahf
jne
fwait
adc
aas
idivb
or
aaa
pop
pop
push
es
cli
dec
std
dec
xor
les
mov
jns
push
inc
or
imul
arpl
movsb
mov
pushf
psrlw
cld
arpl
adc
xor
pop
scas
sub
cmp
mov
mov
sub
or
loopne
in
subb
sbb
or
dec
pushf
cmp
repz
shrb
test
es
adc
loop
pop
mov
sbb
sarb
pop
rcl
pop
xchg
insl
popa
push
push
push
cmpb
imul
les
bnd
jbe
mov
push
popa
inc
cmp
sahf
cmp
das
or
mov
shl
xchg
xchg
mov
jge
sbb
cmpsb
fldt
stos
adc
mov
mov
pop
inc
stos
sub
or
popf
sbb
sub
push
pop
jno
push
pop
jmp
sbb
dec
jge
int
cmp
add
and
in
arpl
or
fwait
outsl
filds
mov
cmpsb
jmp
mov
inc
xchg
out
rorb
dec
xor
arpl
gs
call
aam
and
mov
sarb
push
seto
movb
in
popa
int
adc
pop
shrb
pop
repz
add
mov
test
sti
xchg
pop
mov
adc
xchg
pushf
xchg
imul
bound
cltd
insb
adc
fucomp
mov
dec
sti
jae
cmp
pusha
push
sub
cmc
ficompl
push
into
fucomip
sub
aas
mov
sbb
and
lods
bound
mov
hlt
int
cmp
cmp
pop
mov
mov
imul
xlat
push
leave
inc
and
negb
movsb
cmc
mov
xchg
dec
frstor
jnp
push
or
sbb
cmp
pop
mov
mov
pop
pushl
xor
and
mov
daa
dec
jg
loopne
push
cmp
jae
cld
sbbb
xchg
popf
pop
pushf
or
insb
dec
sbb
xor
lcall
and
push
push
pop
call
xor
daa
subb
jg
hlt
add
ljmp
test
clc
pop
mov
outsb
int3
push
lret
hlt
push
scas
iret
mov
out
popa
std
jl
movsl
repnz
adc
dec
pop
icebp
push
nop
jge
pop
pmaxub
out
out
bound
mov
cltd
pop
xor
pop
adc
ret
jno
out
ficompl
or
dec
mov
iret
fucomp
test
mov
mov
in
mov
inc
insl
popf
loope
rcrl
xor
mov
call
mov
xor
xchg
iret
daa
mov
mov
repnz
push
and
mov
add
xor
stc
cmpsl
in
jno
and
leave
cmc
out
shlb
mov
cmp
outsb
xchg
insb
xor
movsb
pop
sbb
out
lds
into
add
xor
add
insl
push
xchg
scas
push
test
or
ret
mov
jae
sub
inc
movsb
out
out
scas
inc
test
xchg
push
ret
cmp
loop
jb
into
mov
test
cmp
insb
or
cmc
jne
sar
mov
sbb
and
dec
or
sbb
and
in
outsb
pop
sub
xchg
dec
std
aam
iret
pop
push
data16
sub
or
repz
lret
push
and
push
iret
mov
test
aad
xor
call
dec
pop
aad
fadd
push
mov
mov
jl
pop
jnp
add
pop
fldl
imul
ror
pop
in
dec
lds
sbb
jnp
jb
push
and
dec
arpl
rolb
mov
scas
outsb
out
nop
jl
sar
mov
leave
jmp
mov
out
jl
subb
scas
mov
clc
jmp
lahf
cltd
pop
cmp
mov
ljmp
xor
or
sub
or
mov
arpl
mov
lds
ficompl
mov
in
or
iret
mov
sub
daa
lret
mov
aad
mov
addr16
inc
sub
jae
in
adc
aaa
mov
inc
ja
movsb
push
rcl
jmp
jne
imul
lods
jmp
xchg
in
out
mov
adc
dec
jmp
or
daa
in
pop
dec
xchg
fucomip
jne
negb
std
les
lret
push
cmpb
dec
push
loop
mov
pop
lret
hlt
leave
xchg
inc
ficomps
scas
gs
jmp
popf
das
ret
pusha
daa
or
jnp
sub
mov
js
cli
in
in
mov
orl
aas
enter
in
call
in
outsb
cmp
fsubrs
mov
aad
push
jne
xor
cvtps2pi
popf
sarb
sar
mov
dec
jp
aas
test
mov
push
xlat
xchg
pusha
outsl
push
aaa
inc
inc
sbb
mov
mov
sub
pop
mov
dec
or
lcall
arpl
adc
in
adc
inc
pop
testl
out
pop
into
sub
mov
mov
mov
out
mov
add
mov
and
pop
jmp
jge
stos
nop
std
or
jl
shlb
cmpsl
mov
or
mov
cld
imul
cld
mov
cmp
mov
xor
rorl
sbb
ds
pop
mov
jae
dec
adc
test
das
sahf
mov
popa
outsb
sti
or
leave
mov
mov
mov
push
xchg
jb
mov
ret
je
push
cli
pop
xchg
and
movsb
aad
or
mov
enter
sbb
aam
clc
rcll
mov
xchg
outsb
aad
inc
mov
lock
lret
pusha
ja
inc
sbb
ds
out
push
push
iret
mov
sbb
fildll
push
rcrb
imul
sub
ljmp
fnstenv
icebp
push
xchg
add
adcl
add
xor
cwtl
add
fnstenv
or
adc
push
lock
dec
mov
cmp
mov
mov
xor
clc
sbbb
jne
jno
jecxz
or
in
js
in
and
push
rolb
je
xor
aas
mov
push
xor
sbb
cs
sub
in
cmp
out
cmp
roll
out
push
inc
inc
lcall
pop
pop
jp
notb
testl
push
aaa
or
mov
call
cli
sub
test
shlb
sbb
sub
paddq
dec
sti
js
scas
pop
mov
cmp
jecxz
xorl
outsb
nop
jne
jp
pushf
mov
insb
les
ljmp
add
adc
jecxz
out
xchg
mov
inc
sub
dec
das
in
into
jbe
dec
push
gs
in
arpl
xor
xor
xchg
push
imul
and
lcall
jne
inc
mov
xor
and
cmpb
fbld
add
adc
inc
gs
or
fimuls
fsubrp
add
outsb
mov
jo
mov
push
scas
lea
lods
push
fisubrs
jnp
cltd
mov
jle
and
rcl
push
jmp
sbb
add
lods
popa
and
or
iret
lea
mov
jge
cmpsb
shr
mov
jb
jle
loop
arpl
mov
mov
mov
mov
es
fwait
sub
adc
mov
out
cld
inc
mov
int3
les
andb
or
cwtl
xor
xchg
rclb
dec
add
mov
or
pop
les
cwtl
or
inc
push
in
mov
in
popa
mov
rcr
jp
je
push
repnz
xor
cmp
cmp
jnp
push
add
idivb
push
add
mov
pop
les
aad
pop
mov
mov
or
fdivs
jo
icebp
mov
leave
pop
mov
aas
stos
adc
movsb
or
add
mov
mov
cld
je
data16
addr16
or
hlt
jp
cmovo
ja
jns
mov
fisttpl
cmc
adc
aas
repnz
xor
push
ljmp
cwtl
lds
push
int3
addr16
push
mov
jmp
ret
popa
and
rclb
pop
or
pop
mov
mov
scas
jecxz
ljmp
roll
imul
adc
addr16
pop
nop
fucom
mov
dec
movsl
dec
mov
or
xor
ror
or
inc
sub
push
fcmovnu
sbb
movsb
lret
mov
lods
dec
fwait
sub
imul
or
sbb
sbb
mov
lds
cmc
ljmp
cmp
fld
dec
mov
jle
cli
data16
pop
mov
jb
xor
xorl
sub
movsl
pusha
cmc
jp
lods
xor
leave
inc
arpl
ret
mov
aaa
andb
bound
mov
xor
xchg
push
sarb
decb
or
dec
inc
imul
lret
sbb
fadds
decb
jae
push
mov
fstl
bound
jne
add
jne
mov
jb
jnp
and
sub
js
insb
test
pop
addr16
xor
and
mov
sub
or
stos
cwtl
jmp
mov
add
ds
testb
push
mov
fidivl
call
xchg
pusha
je
aas
das
jo
xor
test
es
jne
inc
pop
adc
jl
insb
add
mov
and
test
push
and
dec
xor
pop
pop
out
aad
cmp
loop
fwait
xorl
into
fwait
subb
frstor
popf
mov
out
mov
mov
and
cmc
mov
ror
mov
xchg
fists
scas
fxch
pop
sti
fdivrs
push
mov
push
sbb
imul
push
movsb
xchg
in
add
pop
bswap
mov
mov
pushf
push
outsl
int
je
pop
das
sub
outsl
test
ss
dec
fisttpll
add
and
jmp
arpl
addr16
jmp
xchg
test
pop
cli
xor
xchg
sbbb
push
dec
aaa
push
push
mov
xor
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
and
jp
pop
jp
scas
mov
das
mov
jae
lret
stos
mov
jne
out
ljmp
arpl
or
movsb
lods
out
push
iret
inc
xchg
jle
jbe
popa
push
repz
jns
xorb
dec
jge
mov
add
fadd
insb
push
mov
push
lahf
mov
xorl
ja
jge
sbb
mov
push
inc
in
adc
jo
movsb
out
arpl
pop
xor
mov
iret
mov
das
stc
in
or
xchg
xor
sbb
cmp
addr16
mov
daa
sbb
pusha
ret
scas
or
jl
cmpsl
mov
cmpsb
je
enter
mov
leave
inc
add
jp
push
icebp
lock
dec
stc
jo
cmpsb
aad
push
dec
stc
add
xor
xor
loope
js
dec
popa
cmp
mov
js
loope
enter
and
sbb
sbb
loop
loopne
mov
dec
imul
push
push
in
popf
push
and
push
cmp
fcmovnbe
xlat
mov
in
test
jmp
mov
int3
sub
shlb
out
add
jae
rol
add
and
or
loope
and
fistl
imulb
inc
test
and
outsl
out
mov
lret
hlt
sbb
ret
stos
das
adc
repz
jmp
in
mov
cld
daa
shr
push
cltd
fcmovnbe
ds
inc
xchg
lock
arpl
insb
ja
pop
movsl
repnz
fcomp
pop
push
insb
outsl
dec
nop
or
loopne
cmp
mov
or
pop
andb
xchg
in
sbbl
shrl
stc
mov
test
aas
lcall
push
adc
lcall
andb
jae
inc
and
adc
out
pusha
and
xchg
cld
add
xorl
popf
ss
rcrl
and
or
mov
in
mov
cmpsl
outsb
mov
hlt
jge
fwait
popa
jl
push
add
mov
lret
xchg
fists
jnp
hlt
add
xchg
pop
int3
push
cmp
sub
idivb
imul
mov
mov
cmp
test
jecxz
roll
test
popf
push
rcrb
mov
mov
imul
shrb
sbb
pop
ja
in
inc
pop
dec
mov
stos
pop
sbb
pop
jmp
push
or
js
pop
mov
cmpsl
ljmp
or
aad
ret
xlat
mov
xor
ficomps
mov
fcoml
stos
sub
and
shr
ret
mov
xchg
and
xor
pushf
push
xchg
mov
lods
and
rorl
fdivrp
aad
shrl
jp
mov
imul
stos
xchg
jb
xchg
rclb
insl
in
cmp
cli
mov
push
and
ds
xor
sbb
test
scas
js
push
and
and
add
cld
push
cld
adc
mov
test
insl
in
push
inc
sub
pop
xchg
dec
sub
push
dec
jge
ficompl
in
or
sbb
rorb
dec
mov
jb
inc
xor
cmp
and
and
pop
pusha
ffree
push
les
in
sarl
in
repnz
xorb
sub
pop
inc
mov
xchg
cmp
lods
jae
jb
idivl
push
push
inc
mov
inc
mov
test
ret
dec
inc
mov
shr
dec
ret
sbb
xlat
pop
stos
sbb
sub
mov
mov
inc
pop
jno
repnz
cltd
push
pop
test
push
jg
add
dec
or
popa
mov
in
inc
xchg
xor
mov
jbe
testb
xchg
mov
lcall
cld
jp
push
mov
sti
push
neg
not
arpl
dec
mov
cmpsl
sbb
jns
dec
sahf
nop
out
inc
cmp
in
cwtl
ss
mov
adc
sub
xor
bswap
xchg
mov
pop
sub
cmc
dec
repnz
or
imulb
jecxz
scas
rclb
rorl
div
imul
and
out
jbe
loopne
jo
xor
lods
out
xlat
fildll
inc
or
add
xor
fstl
sbb
xchg
and
jnp
in
scas
xor
mov
insl
lods
jg
push
or
cmp
pusha
dec
aad
and
sub
aam
push
in
jle
ljmp
les
push
jmp
icebp
fcoms
sbb
jno
pop
sti
imul
dec
mov
pop
aad
cmc
pop
in
leave
mov
dec
sahf
mov
fisubs
aas
pop
jne
aam
shrb
jns
jo
dec
xor
bound
in
cmpsl
out
sarb
cmp
daa
rcr
or
sub
in
loopne
inc
pop
je
sub
int
popa
leave
cs
setnp
pop
xlat
jp
jo
push
aaa
leave
pop
ss
and
mov
cmpl
xor
inc
jo
add
mov
pusha
xor
add
mov
push
jmp
xor
and
add
inc
push
adc
fisttpll
cltd
ret
dec
mov
or
add
lea
mov
testb
or
xchg
sub
sarl
dec
shlb
mov
inc
sub
sub
pop
dec
mov
mov
sbb
pop
out
sahf
mov
mov
or
sub
push
xchg
mov
lahf
aad
data16
dec
pop
jb,pt
xchg
push
sub
mov
lret
pop
fldenv
pop
fst
push
mov
jle
adc
jle
sbb
inc
jmp
stc
int
cld
and
jecxz
push
xchg
cmp
iret
shll
mov
pop
sbb
dec
dec
xchg
je
sub
dec
sbb
mov
push
arpl
ljmp
pop
movsl
int
jno
xchg
rcll
movsbl
adc
ss
jae
inc
mov
test
sbb
xor
pop
push
dec
sbb
xlat
lods
pop
out
test
jl
mov
aam
cmp
in
sub
cs
mov
out
mov
lcall
jp
lods
movsl
jmp
push
jl
push
dec
push
adc
mov
add
in
movsl
pop
jne
cmp
xor
mov
ss
pop
jl
ds
xchg
mov
mov
and
jl
jecxz
fwait
push
xlat
mov
aad
je
aam
incl
orl
pop
inc
pop
imul
fwait
jge
sbb
dec
jae
sbb
pop
sub
in
shr
adc
bound
jno
xchg
aam
or
loope
adc
mov
pop
lods
pop
or
ret
repnz
mov
pavgw
mov
adc
or
ficoms
xor
mov
imul
push
mov
sahf
test
lock
mov
test
jl
add
mov
adc
push
sbb
cmp
push
jo
fbstp
push
std
mov
jnp
pusha
cltd
mov
add
push
into
adc
enter
and
dec
sub
fadd
jnp
popa
data16
push
pop
fwait
cmp
hlt
dec
mov
jb
inc
adc
push
inc
fiadds
cld
inc
popf
stos
sub
cmc
leave
sbb
cmovle
push
cmpsl
add
or
les
and
popa
popa
fldt
out
mov
imull
fisttps
fmull
arpl
inc
xlat
lds
stc
xchg
mov
and
sbb
mov
jno
mov
sub
push
int3
cmp
jge
repnz
lds
push
jg
jb
mov
adc
mov
mov
out
inc
ss
lds
sbb
pop
jne
int3
repnz
in
dec
mov
icebp
imul
daa
lea
push
cli
lds
xor
lcall
popa
mov
push
mov
mov
in
and
ja
push
mov
repz
xchg
nop
mov
rcrb
mov
or
mov
call
or
lcall
adc
imul
mov
sbb
and
sub
push
lock
lret
push
std
lcall
movb
inc
addr16
adc
jg
jo
scas
cli
shlb
cmp
xor
sub
or
push
xchg
data16
ds
mov
out
add
inc
xchg
repz
loopne
fidivs
xchg
mov
add
out
daa
jmp
ja
sbb
out
mov
std
inc
add
xlat
adc
inc
mov
xor
inc
movsb
stos
xchg
jl
jne
stos
lods
test
jmp
out
lret
das
outsb
sbb
add
test
in
lods
jle
sbb
jle
movsl
xor
pusha
inc
ja
je
adcl
movsl
lret
sbb
mov
cmpsb
leave
mov
loop
repnz
sbb
fisttpl
push
insl
jl
dec
std
xchg
clc
lahf
jbe
mov
sahf
mov
mov
adc
shlb
mov
arpl
and
jnp
sbb
and
in
cmp
cwtl
mov
dec
sbb
insb
add
stc
mov
dec
fcompl
or
pop
hlt
repz
xchg
xchg
and
int3
cmp
adc
std
sarb
out
jbe
xchg
mov
ds
jecxz
mov
lret
mov
je
ja
and
dec
sbb
ret
push
movsl
test
xchg
jnp
lahf
lods
cwtl
jmp
pop
xor
push
dec
repnz
pop
insb
push
push
sbb
dec
lea
jg
test
add
sub
cmc
shlb
addr16
jge
jg
mov
lret
adc
sti
out
mov
add
cmp
das
les
push
dec
mov
jo
repnz
int3
inc
enter
sub
or
pop
test
insl
outsb
clc
inc
xchg
data16
repz
mov
or
fnstcw
pop
popa
pop
rclb
push
movsl
popa
pushf
add
push
sbb
mov
fidivrs
cwtl
stc
mov
jle
jle
js
clc
sar
pop
adc
inc
arpl
mov
push
mov
loopne
pop
lret
and
jb
test
fwait
imul
adc
sbb
jmp
stc
pop
dec
sbb
inc
ficompl
gs
cmp
or
push
mov
adc
clc
inc
xchg
loope
jns
mov
dec
test
in
cmp
js
push
sub
fldcw
push
xor
cmp
decl
idiv
push
out
mov
mov
pop
out
gs
out
test
mov
rcl
adc
imul
jl
mov
push
sbb
push
ljmp
pop
pop
pop
mov
and
mov
dec
aad
cli
addl
mov
xchg
jbe
xchg
test
aam
inc
mov
nop
xchg
popf
jge
shl
int3
fcoms
mov
pop
loop
and
int
cmp
mov
les
mov
mov
xor
jmp
daa
or
int
scas
faddl
pop
cmp
icebp
into
xchg
lea
mov
sub
ja
sarl
xlat
and
pop
xor
xorb
sub
or
mov
insb
jnp
push
push
jae
add
pop
cmc
cld
in
lcall
fistl
cmp
cld
aas
inc
xchg
cli
sbb
mov
inc
xor
div
jmp
cli
push
dec
rorl
xor
fstpl
add
shl
shr
shrb
jle
xor
dec
cmc
push
dec
pop
mov
imul
adc
frstpm(287
mov
outsb
idivl
pop
or
maskmovq
lret
cmp
ret
mov
movsl
inc
js,pn
daa
mov
fucomip
and
inc
out
add
filds
sub
adc
loope
dec
inc
pop
test
clc
jl
xchg
mov
or
mov
cld
aaa
inc
xor
repz
pop
in
cli
scas
adc
std
sbb
int
or
cli
mov
stos
mull
cmp
data16
inc
inc
adc
mov
js
cmpsb
mov
lds
in
sbb
sub
loope
jmp
adc
xor
iret
cltd
js
and
dec
jle
fistpl
aaa
mov
pop
add
cld
aad
nop
pop
xchg
jnp
in
xor
add
cs
jl
push
mov
int3
ffreep
stc
cmpb
and
lea
inc
adcl
fidivrs
or
mov
jnp
lods
clc
movl
dec
mov
fistpll
jg
lock
clc
test
sub
lret
fwait
mov
fidivrs
ss
inc
js
lahf
add
jmp
int
sbb
addr16
rol
push
hlt
dec
adc
loopne
inc
and
sub
stos
orw
jns
js
loopne
iret
dec
lahf
ja
inc
negl
pop
lret
js
in
mov
popf
pop
pop
push
xor
adc
cli
adc
mov
mov
sub
iret
xchg
icebp
fistl
jns
jns
data16
and
fnstenv
or
test
xor
testl
push
add
outsl
shlb
std
mov
fucomi
jns
dec
jne
xchg
pop
inc
out
add
xor
and
ja
pop
nop
sahf
gs
cmp
in
lahf
pop
repz
mov
pushl
pop
adc
sbb
shl
xchg
adc
cld
pop
jbe
insb
or
ss
add
sub
fsubrs
fadds
testb
mov
jns
cmp
push
push
jne
scas
int3
or
test
cld
inc
mov
stos
add
out
popf
or
notl
xchg
dec
in
rorb
dec
adc
push
jbe
lcall
stos
pusha
pop
dec
mov
xchg
out
adc
push
inc
lcall
pop
insl
int
mov
in
add
inc
jle
sbb
jmp
aam
in
pop
cmc
push
int3
in
jg
adc
pop
mov
mov
pusha
mov
cmc
ret
pop
popf
adc
xchg
imul
cmp
in
mov
add
adc
and
dec
mov
outsl
idivl
xor
fdivr
push
push
push
pop
pop
lcall
jno
mov
lahf
lea
popa
out
lcall
fdivrs
pop
mov
add
lods
cwtl
test
push
in
addr16
jge
daa
imul
fdivs
push
push
sub
push
sub
shlb
call
clc
test
or
or
and
add
loopne
lret
shll
pop
jmp
sbb
jmp
mov
into
stc
sbbl
das
iret
in
jecxz
jle
pop
ss
aas
hlt
fldl
xor
jns
adc
adc
pop
adc
ljmp
ret
jle
mov
cmpsl
push
mov
push
cmpsl
mov
or
inc
pusha
pushf
push
inc
xor
movlps
or
inc
cltd
or
adc
sbb
push
sbb
call
dec
sbb
test
pushl
stc
sbb
xlat
jmp
xor
cli
push
imul
pop
jle
sub
imul
sbb
push
sbb
xor
push
push
jno
les
lods
in
mov
or
jle
pop
nop
jle
xchg
add
jnp
jo
inc
mov
mov
ss
dec
add
testl
rorb
push
ret
jo
es
das
stc
pop
data16
gs
lcall
pop
clc
aam
mull
push
popf
stos
fwait
xlat
int3
lahf
push
push
push
dec
cltd
push
decb
jae
lea
lods
sbb
and
mov
sti
adcb
mov
or
push
rolb
add
es
pop
xor
in
mov
pop
call
push
dec
or
test
add
sub
pop
aad
jae
mov
dec
flds
sub
ss
out
ja
cmp
in
adc
ljmp
push
mov
sub
cmpsb
aam
inc
bound
adc
stc
dec
lahf
adc
inc
arpl
int3
iret
movsb
sahf
fisubrl
pop
mov
push
loope
in
iret
cld
inc
cmp
mov
xchg
add
and
push
xchg
and
lock
cmp
xchg
adcb
push
cs
ds
arpl
mov
adc
xchg
sbb
sub
sub
outsb
cwtl
mov
ds
xor
push
filds
mov
pusha
mov
mov
jecxz
addr16
aaa
xlat
imul
sbb
push
roll
dec
imul
pop
sub
subb
cltd
xchg
orb
cmp
les
sbb
scas
cmpsl
jne
out
dec
inc
pop
aad
or
cs
mov
shll
sub
or
jae
xor
inc
pop
loopne
outsb
mov
push
mov
mov
pop
and
and
call
ret
test
sti
inc
lret
ret
out
inc
mov
xchg
jne
fxch
and
in
pushf
jmp
ret
add
imul
inc
pop
and
xchg
xchg
cmp
and
negb
int3
std
icebp
mov
pop
inc
cmpsl
mov
insl
stos
in
dec
in
nop
call
and
sub
xchg
shrl
shrl
mov
sti
int
mov
mov
xor
pmaxub
pushl
dec
push
fstps
and
cmp
aam
outsb
sub
dec
idivb
push
push
pop
jge
data16
xlat
outsb
jmp
and
mov
in
cltd
sub
pop
inc
push
push
outsl
aam
add
or
js
push
or
movsb
push
mov
shlb
iret
stos
enter
leave
popa
leave
xchg
add
inc
fldl
add
push
cwtl
out
cld
dec
xorb
xchg
mov
sbb
or
in
pop
sti
fstpt
jg
int3
or
mov
lods
push
push
sbb
loopne
mov
push
pop
sub
mov
pop
cmc
repz
scas
push
pushf
fists
mov
nop
xchg
inc
push
mov
sub
xor
orl
insl
rcrl
cld
scas
cwtl
lret
sar
mov
outsb
mov
or
jae
mov
mov
xchg
adc
mov
sti
mov
std
lock
out
sbbl
add
fcmovb
sub
add
ja
mov
hlt
mov
fmull
dec
popf
vrcp14sd
and
push
test
adc
mov
insl
ret
pushf
stc
scas
cli
xchg
enter
aaa
xlat
lods
andb
mov
cmp
dec
imul
out
lods
and
insl
imul
aaa
repz
push
inc
cltd
mov
cmp
mov
cmp
je
dec
mov
pop
lret
sbb
cmpsl
jmp
pop
dec
xor
fidivl
imul
mov
aaa
push
jo
shll
sub
mov
mov
sub
mov
movsl
cmp
ds
xchg
ret
movsl
jbe
and
orl
sub
xchg
out
pushf
sbb
cmpsl
mov
enter
and
mov
lods
mov
push
or
fdivrl
mov
xchg
out
out
aad
fimull
insb
jecxz
mov
jb
push
mov
jmp
xchg
outsb
and
jg
add
nop
cmpsb
ja
int
mov
ror
daa
dec
mov
adc
or
xor
and
fldcw
add
xor
in
cmpsl
shr
jns
inc
inc
xor
or
jp
shll
scas
lods
out
fwait
out
mov
es
orl
ret
int
mov
fdivl
jmp
xchg
xchg
pop
sub
push
movsl
fisubs
arpl
test
adc
fldt
outsl
pop
sbb
cmp
jmp
xor
mulb
ss
xchg
jne
adcl
in
insl
aad
xor
fbstp
push
inc
fistpl
jne
hlt
ss
mov
mov
jo
sbb
movsl
jle
addb
and
or
cmpsl
fsubr
cltd
inc
std
push
aad
loopne
in
mov
scas
jno
and
push
sub
jae
out
dec
bound
fcoms
icebp
add
sar
mov
fidivl
rcrb
jg
mov
sub
std
lahf
repnz
scas
stos
int3
mov
insl
enter
stos
testb
add
cli
sbb
pop
dec
ficoms
ror
mov
insl
cmp
sub
call
xor
mov
rclb
leave
jl
lret
insl
push
adc
dec
ds
lret
shlb
sahf
push
in
repnz
insl
or
mov
dec
loop
cmc
adc
pop
pop
mov
mov
pop
sti
mov
cmp
or
scas
pop
sti
ret
ja
xor
in
pop
cmp
lret
mov
ret
mov
ret
sub
mov
jmp
push
jl
cmc
sbb
jo
fidivrl
enter
je
xorl
sub
jne
pop
and
push
xchg
sub
push
mov
jno
pop
jne
fld
xlat
fcmovnu
scas
data16
stc
imul
das
jl
mov
in
pop
je
lcall
pop
testl
push
fbld
sbb
or
out
lock
inc
push
ret
inc
nop
inc
or
sbb
adc
cmpsb
or
inc
lret
lods
mov
fcmovu
mov
and
adc
loope
ret
aas
movsb
leave
outsb
jne
mov
sub
data16
lds
xlat
or
xchg
cwtl
or
sbb
fnsave
cltd
jnp
insb
cmp
and
cwtl
out
test
imul
in
outsl
jb
cmp
call
jle
pop
fdivrl
inc
adc
incl
and
cmp
loope
rorl
jl
lret
pop
pop
bnd
ljmp
popa
pusha
mov
cmp
inc
aaa
loop
or
push
add
mov
stos
and
push
xchg
mov
or
rolb
jne
mov
jne
inc
daa
sbb
je
in
xor
sub
loopne
out
sti
les
cmp
stc
sub
outsl
loope
mov
inc
fisttps
ds
out
jmp
push
insb
push
mov
xchg
adc
out
or
cmp
xchg
fisttpl
pop
bound
aas
pop
mov
xor
adcl
xchg
mov
popa
shl
in
sbb
adc
xchg
test
aad
push
jne
dec
xorl
pop
add
cmpsb
sub
lcall
shlb
lds
jae
add
adcb
sbbl
fcomps
addr16
or
scas
inc
adc
jnp
outsl
fwait
inc
dec
xchg
in
fadds
sbb
shlb
inc
repnz
or
imull
in
add
lock
and
mov
or
fadd
add
xor
add
fdivrp
lcall
mov
movsl
mov
mov
or
or
sub
test
call
add
xchg
cwtl
dec
scas
dec
and
jnp
test
into
xchg
push
adc
lods
sbb
test
mov
pop
mov
in
orl
scas
add
lcall
out
iret
and
xor
mov
std
sub
push
xchg
add
adc
sub
jl
jmp
mov
pop
rorb
pop
loop
jbe
int
daa
xchg
adc
mov
mov
sub
sti
in
mov
out
and
dec
pop
sbb
mov
aaa
sahf
shll
iret
in
test
xor
push
in
js
ljmp
shrb
aad
out
pushf
cmp
inc
push
out
ror
or
pop
lock
or
sbb
loopne
xchg
jl
adc
inc
ljmp
inc
pop
ljmp
dec
mov
and
fcom
mov
sub
jmp
pop
lds
test
xor
pop
mov
xor
sti
data16
insb
push
stc
lods
mov
into
leave
jnp
inc
pop
sub
pusha
rcrb
inc
jae
xor
in
jno
lock
gs
mov
pop
dec
push
cmp
dec
push
std
and
icebp
mov
fsubl
inc
push
popf
mov
rolb
cmp
mov
inc
xor
iret
fstps
mov
adc
adc
dec
loop
sbb
push
out
roll
dec
xchg
aaa
idivb
sbb
or
mov
sub
cmpsl
enter
fistl
lock
jno
es
iret
mov
sub
insl
arpl
mov
fcoms
sti
mov
ljmp
ret
push
andb
scas
lcall
in
jno
pop
jle
pusha
sti
push
mov
ud0
mov
pushw
out
jno
daa
pop
adc
outsb
aam
repz
cmp
movsb
mov
mull
mov
mov
popf
cmpsl
pop
jle
lcall
lock
enter
es
lret
popf
lret
outsl
bound
sbb
mov
leave
movsl
incl
add
scas
aad
mov
add
xor
jns
popa
sbb
lret
mov
leave
xor
mov
xlat
lret
cmpsl
mov
icebp
imul
xorl
dec
jecxz
loope
cmpb
inc
and
in
xchg
mov
popa
or
ljmp
mov
ja
mov
sub
repz
movsb
clc
jb
inc
sbb
jne
aam
jbe,pn
inc
inc
jl
mov
inc
add
sbb
jmp
sub
cli
loop
fisttps
pop
pop
sub
inc
sub
dec
mov
enter
ror
sti
mov
mov
add
and
cmc
in
in
std
mov
pop
popa
cld
push
push
cmc
mov
jl
mov
jl
clc
pop
mov
movsb
inc
pop
ret
mov
pop
pop
pop
fsubrl
repnz
mov
lret
mov
cwtl
loop
mov
fisubrl
mov
push
js
push
int
popa
iret
inc
sbb
mov
pushf
inc
push
sub
adc
jnp
call
sub
stos
and
pop
movsb
push
jo
scas
mov
xor
push
gs
mov
addb
mov
or
out
pop
mov
inc
push
es
xchg
dec
sbb
repz
outsl
hlt
sbb
les
jle
pop
sub
andl
popa
or
addr16
test
std
sbbb
push
sti
push
and
inc
mov
lods
pand
scas
fistps
insb
mov
add
loope
and
fucom
nop
fimull
daa
xor
sahf
pushf
mov
adc
adc
je
fs
sub
push
sub
test
and
loope
loope
lret
ljmp
or
jbe
add
jns
outsl
sbb
mov
mov
imul
xor
andl
arpl
mov
jmp
test
pop
jg
lcall
sti
jp
leave
mov
dec
mov
sbb
add
sti
mov
ja
pushf
pop
mov
lods
cmp
inc
jbe
inc
push
xchg
dec
sub
je
xchg
paddusb
es
je
in
sbb
popa
fidivrl
in
mov
int3
out
sub
adc
fisubrl
test
shll
sbb
stc
dec
jecxz
or
jnp
pop
call
cmp
add
xchg
adc
xchg
lock
push
jecxz
fiadds
jb
sub
push
enter
cmpsl
lahf
inc
scas
leave
mov
pop
dec
ret
out
in
jecxz
shr
jo
inc
sub
sub
scas
pop
icebp
sbb
fsts
icebp
and
xor
insl
push
int
dec
movsl
dec
pusha
clc
fdivr
cmpsl
repz
stc
and
sub
arpl
push
jo
and
shll
aaa
js
in
stc
mov
fbld
and
mov
sbb
sahf
int3
adc
aas
cmpsl
xchg
dec
mov
cwtl
jmp
mov
mov
pop
in
mull
lock
adcl
leave
jle
mov
lret
adc
mov
sub
push
fcmove
js
clc
adc
push
sbb
movsb
popa
xchg
adc
dec
sbb
mov
pop
jge
sbb
xchg
dec
js
rcrb
push
std
cmpsb
adc
inc
int
mov
pop
sbb
dec
aam
cmp
popa
lods
jl
iret
mov
testl
ja
into
icebp
divb
mov
push
loopne
test
sbb
dec
sarb
loop
sbb
pop
jnp
mov
pop
add
inc
pop
popa
rorl
sub
call
pop
in
int
and
inc
push
filds
push
imul
call
dec
jae
in
xchg
add
or
hlt
js
jp
mov
jl
xchg
sub
jmp
jne
jge
addr16
inc
fs
stc
push
pop
cmp
cmpsl
roll
xchg
hlt
xchg
jae
fidivrs
mov
lret
arpl
mov
cld
sub
ffreep
repnz
daa
inc
jns
notb
cmc
mov
lcall
in
cmpl
push
mov
div
jo
dec
xor
out
inc
dec
shrb
jecxz
xor
cwtl
ror
add
mov
inc
cmp
add
adc
into
lods
inc
sbb
sub
xchg
inc
xor
lcall
sahf
aad
xchg
push
fmull
mov
fwait
pusha
sbb
scas
popf
pop
dec
outsl
fdivr
xchg
leave
loope
or
pop
and
adc
jno
scas
lea
imul
jmp
fsubrs
xchg
mov
add
pop
sub
jecxz
mov
adc
ja
jne
cmc
and
mov
movsl
jg
in
jno
sbb
mov
adc
and
mov
adc
cs
push
inc
pushf
adc
imulb
add
in
mov
jb
and
mov
dec
push
jmp
shl
les
data16
test
or
sub
sub
sub
dec
lods
xor
dec
push
es
outsl
daa
cmp
cmp
mov
mov
lock
les
mov
sar
mov
pop
sahf
fbld
xchg
and
mov
mov
jns
movsb
fwait
nop
ja
mov
je
dec
aam
sub
cmp
mov
movsb
jmp
add
pop
cwtl
mov
stos
mov
rcl
insl
addr16
pop
neg
push
sub
test
inc
jb
adc
cld
sti
ljmp
lret
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
mov
push
sarb
loope
jp
loopne
inc
scas
rcrl
pop
ds
mov
pop
sahf
ficoml
lcall
mov
mov
pop
push
in
pop
inc
adc
int3
aas
ja
bound
inc
xchg
insb
pop
jle
mov
jl
jl
mov
lods
ja
adc
xchg
pop
add
fcmovnu
loopne
adc
push
push
scas
mov
mov
pop
insb
sbb
mov
jle
push
mov
cmp
fimuls
cmp
les
ljmp
inc
je
sub
or
in
hlt
xor
sbb
int
jp
callw
cmp
test
jnp
push
pop
jnp
aam
out
das
out
scas
sub
add
imul
lahf
dec
add
fcmovb
jg
inc
fmuls
inc
cltd
cmp
adc
je
lcall
ljmp
and
fs
sbb
pop
movsl
and
mov
jp
sqrtsd
fdivl
jl
hlt
es
sub
xor
and
add
jge
fcmovbe
adc
sbb
out
inc
jae
fdiv
or
pushf
sub
push
pop
mov
ficomps
out
fdivrs
push
fstpt
int3
inc
lret
lock
roll
pushf
bound
lret
das
pop
pop
loope
mov
fldt
in
flds
sbb
push
leave
pop
shll
fnstsw
add
nop
pop
push
and
jne
cmc
push
dec
push
rorb
rcrl
push
cli
lret
mov
push
arpl
stos
jg
ljmp
hlt
test
mov
xchg
fwait
mov
das
rorb
pushf
enter
sub
les
imul
add
xchg
out
lret
call
mov
dec
inc
add
les
mov
xor
adc
in
loopne
icebp
sahf
scas
adc
push
out
js
or
mov
push
clc
mov
shll
sub
cmpsb
ljmp
jo
data16
inc
pop
mov
adc
test
sahf
jns,pt
sub
clc
insb
negl
cmp
mov
or
pop
arpl
push
mov
or
sub
mov
aad
stc
or
sub
aas
mov
ret
lcall
popf
js
xchg
les
ljmp
push
adc
push
int3
mov
add
mov
dec
sbb
into
lret
subb
daa
push
push
push
fwait
loopne
out
addr16
subl
dec
inc
sbb
adc
fwait
dec
orl
mov
pop
pop
jmp
out
cli
pop
sti
aad
fistpll
mov
inc
xchg
mov
sbb
out
jae
xchg
shlb
sbb
pop
adc
mov
out
in
aad
jns
or
dec
xor
arpl
pop
cli
mov
mov
aas
orl
mov
mov
add
stos
xchg
aad
sub
sub
mov
push
clc
mov
fisubrl
and
iret
jo
xchg
dec
inc
pop
add
push
xor
pop
add
sbb
lret
push
push
or
ret
iret
lret
lret
jne
xchg
outsl
call
rcr
xchg
dec
jnp
pop
in
or
repz
adc
mov
test
jbe
ficompl
dec
inc
inc
cmpsl
add
int
pop
in
hlt
sbb
bound
dec
xchg
mov
sarb
push
sbb
out
push
sahf
and
scas
add
mov
imul
pushf
dec
lock
xor
lahf
pop
jmp
push
xchg
pusha
ret
imul
xlat
lahf
inc
sahf
cld
out
jge
and
xchg
xchg
adcb
bound
jno
and
add
push
loopne
push
in
bound
popa
mov
adc
mov
mov
and
jo
lods
test
shll
mov
iret
ffreep
test
int
sub
dec
pop
bt
jmp
ljmp
arpl
inc
mov
pop
jo
sbb
or
add
clc
cs
andb
fucomi
aad
aaa
lret
push
jae
ja
aam
mov
aas
popa
push
xor
mov
sbb
sub
gs
and
xor
jg
aad
cs
mov
dec
mov
add
in
jbe
pop
ss
xlat
leave
ja
push
out
cmp
xor
sahf
lea
xor
sbb
jg
mov
mov
dec
mov
xchg
outsb
pop
dec
cmp
mov
jmp
pop
or
mov
stos
insl
les
xchg
lahf
xchg
push
les
xor
mov
subl
ja
jb
xchg
cmp
cmpsb
nop
sub
insl
and
into
mov
inc
std
mulb
imul
ret
pusha
lds
pop
inc
lea
mov
adc
call
std
shlb
icebp
inc
ds
movsb
adc
scas
jmp
mov
push
jp
lcall
dec
adc
or
lahf
xor
or
xchg
pop
movl
xor
inc
stc
out
xchg
or
adcb
sub
into
test
mov
fucomi
adc
shrb
sub
imulb
pushf
popa
add
dec
scas
mov
xchg
mov
dec
fistl
inc
rcrl
aas
pop
fs
pusha
or
stc
lret
outsb
jecxz
popl
scas
ss
in
adc
adc
fstl
fwait
clc
xchg
pusha
mov
das
xchg
jb
xchg
gs
lcall
and
xchg
insl
push
out
stos
and
xchg
stos
xchg
dec
out
movsl
or
pop
or
pop
mov
inc
sub
jl
int
mov
xchg
jmp
mov
jle
out
fldcw
push
ljmp
adc
push
push
cmpb
in
mov
mov
cli
mov
sub
mov
imul
outsl
mov
repz
lahf
sbb
or
add
xchg
sbb
jae
pop
test
mov
and
fistps
icebp
repz
hlt
mov
jmp
jno
mov
cmp
mov
imul
fstp
ret
dec
mov
scas
jae
mov
fs
test
lock
popa
pop
lock
push
ret
and
xor
loopne
lahf
popa
je
repz
orl
dec
sahf
lahf
xchg
in
ljmp
jmp
sub
push
push
dec
adc
adc
cmp
ss
lahf
push
inc
hlt
and
repnz
push
scas
call
dec
lea
cmpsb
clts
mov
or
mov
pop
in
or
sub
clc
or
outsb
cltd
adc
aas
sub
outsb
gs
cmpsb
sbb
jecxz
mov
cwtl
cmc
flds
loope
pop
sbb
add
mov
cs
movl
and
jns
inc
pop
mov
dec
cltd
out
repz
shl
dec
xchg
sub
mov
push
scas
fmull
mov
test
adc
addb
outsb
add
inc
imul
data16
inc
js
mov
out
pop
or
rcrl
int3
test
imul
sub
xorb
jge
push
sbb
push
aaa
dec
fs
cmp
loope
jecxz
xor
lods
jbe
in
push
dec
nop
sbb
xchg
or
movsl
adc
imul
push
ss
mov
mov
pop
data16
rorb
fsubrl
sub
or
fisubrl
cmp
pop
lcall
es
mov
scas
xchg
icebp
xchg
xchg
cld
dec
test
mov
shlb
pop
dec
scas
stos
jp
in
push
and
lock
or
pop
pop
in
test
xor
pop
pop
xor
adc
int
lcall
repnz
sub
inc
mov
jbe
cld
and
sbb
int
pop
dec
jmp
outsb
pop
mov
pushf
bound
insb
out
mov
sbb
sti
adc
popl
into
xor
cmp
rcl
aad
pop
cwtl
jg
cwtl
push
sub
mov
push
idivl
arpl
xchg
pusha
xchg
rclb
mov
add
push
xor
add
mov
sub
push
lea
sahf
fbld
dec
jle
cs
data16
int
dec
mov
mov
sarl
xchg
jo
pop
mov
mov
add
les
pop
xchg
fnstcw
aaa
mov
orb
sbb
push
js
xor
inc
xor
mov
mov
xchg
hlt
icebp
push
je
stc
sub
mov
pop
xchg
inc
or
ljmpw
mov
in
aaa
ljmp
add
sub
mov
and
ret
xchg
fs
call
fs
mov
js
add
pop
xchg
out
xchg
into
pop
shll
push
xchg
jne
std
shrb
xchg
inc
imul
mov
lret
xor
push
lret
cld
call
push
cmp
clc
repz
aaa
movsl
call
mov
xor
mov
push
mov
ja
sub
icebp
push
mov
mov
add
fwait
pop
jne
cmc
mov
or
mov
cmp
cmp
es
push
sbb
push
sahf
fwait
mov
push
xor
sub
mov
inc
jle
lock
addr16
ds
mov
mov
testb
stos
pushf
daa
aas
pop
cmp
sahf
push
bound
and
inc
rcrl
mov
pop
fstps
dec
dec
or
or
ja
cmp
bound
repz
cmpsl
incb
push
shlb
sti
out
xchg
mov
jo
pop
out
movsl
dec
gs
out
and
add
push
mov
jge
jmp
call
pop
mov
stos
xchg
rolb
inc
xchg
or
inc
fs
and
scas
jp
xor
movsl
jbe
jno
imul
mov
test
scas
int3
dec
ljmp
or
outsl
imul
dec
out
jo
ja
sti
xor
xchg
stos
mov
jg
jae
loope
out
mov
fwait
push
lds
fmull
inc
push
inc
and
xor
pop
jmp
jnp
xor
fcoms
xchg
push
sbb
adc
mov
int3
lock
pop
fisttpl
pop
shrb
jg
xor
sbb
add
out
aam
in
loop
scas
lret
rcll
dec
in
ret
and
hlt
sbb
cmp
add
push
lods
std
orb
or
rcrb
stos
push
clc
mov
dec
pop
lret
ficomps
push
outsb
iret
test
xchg
cmp
cltd
les
push
and
mov
pop
push
out
int3
daa
jno
int3
popf
insb
sbb
out
jb
imul
push
lcall
jnp
aad
sbb
push
out
adc
inc
inc
mov
mov
and
add
and
jno
pop
add
and
lcall
mov
lret
push
jge
push
inc
call
icebp
push
jl
mov
and
xor
shll
pusha
jne
ljmp
fidivrs
adc
pop
xchg
test
ljmp
rcr
cmp
xor
jle
movsb
mov
add
cmp
mov
mov
jo
pop
fwait
and
test
add
in
adc
sub
pop
out
mov
jae
push
mov
mov
cmc
jb
leave
cld
repz
clc
xchg
cmp
push
xor
das
dec
add
and
or
pop
imul
mov
inc
aam
arpl
lcall
inc
dec
jae
out
jl
sub
and
mov
push
popa
xchg
jg
jecxz
jne
das
xor
mov
mov
jne
add
mov
aad
arpl
fidivs
xor
jle
pop
adc
lcall
stos
ds
cmp
mov
mov
sbb
ret
inc
aas
pop
and
fistpll
in
xchg
out
sbb
xor
loopne
cmp
adc
bound
insb
fmull
push
nop
outsl
cmp
decb
insb
xchg
jno
push
mov
or
scas
shlb
inc
sub
jbe
mov
dec
lret
jle
inc
mov
sub
pop
cmp
sbbl
pop
adc
inc
mov
pop
push
repnz
jae
or
sarl
lods
push
fisubrs
sbb
dec
repz
mov
pushf
fsub
sbb
incl
imul
call
pop
inc
xchg
mov
jecxz
sbb
aam
pop
jg
sahf
iret
push
jo
stos
test
aas
mov
push
ficoms
into
fcos
cmp
lret
imul
cwtl
arpl
add
mov
out
push
loopne
push
cmp
xlat
popa
test
cmp
pop
inc
mov
dec
lods
cs
dec
popf
mov
insb
pushl
roll
inc
int
pop
ret
repnz
dec
lods
push
in
lret
insb
jle
xchg
inc
mov
jno
jmp
stos
push
push
les
mov
or
jae
jecxz
cmpsl
mov
leave
and
cmp
jns
test
dec
xorb
imul
inc
fstps
push
adc
dec
test
push
or
push
xlat
out
push
adc
std
xor
adc
lds
and
sbb
pop
imul
inc
ret
adc
push
mov
mov
js
xor
stc
xlat
sub
inc
mov
dec
push
int
cmp
mov
dec
repnz
adc
cmp
cmpsb
and
push
cld
inc
js
cmp
loopne
push
cmp
add
sbb
sbbb
daa
pop
jmp
outsl
xchg
jmp
pop
lds
xor
inc
fldcw
jne
mov
ja
repz
inc
rcl
daa
addl
divl
data16
jge
icebp
ret
pop
and
mov
and
movsb
arpl
out
lret
scas
das
jp
cmp
sbb
std
shrl
int
dec
fisttpl
loope
stc
stos
push
in
std
inc
mov
sbb
imul
jge
test
pop
mov
mov
or
lods
clc
dec
pop
sti
pop
rcll
xorb
mov
mov
mov
mov
jae
add
xor
add
test
jne
fildll
repz
pusha
push
push
mov
ss
push
lcall
inc
fiaddl
push
das
and
and
das
bound
mov
mov
mov
test
pop
sbb
call
jbe
mov
outsl
push
cwtl
push
sbb
mov
sub
xchg
fcompl
fdivp
and
push
xor
stos
out
testb
sub
cmp
js
in
dec
pusha
imul
addr16
mov
xor
or
loop
das
mov
insb
inc
push
xor
and
cmp
or
pushf
dec
fbld
mov
pop
or
lods
popa
cs
das
xor
test
push
mov
scas
dec
xor
loope
mov
fs
jecxz
ret
inc
scas
jne
out
mov
les
push
push
mov
mov
lods
aam
pop
out
and
pop
xchg
xchg
and
mov
xchg
js
ret
lock
addr16
dec
pushf
pushl
mov
jae
rcrl
pop
dec
cmpl
sbb
adc
mov
ss
mov
jmp
lds
test
mov
pop
adc
pop
addr16
mov
cs
mov
xchg
in
mov
js
adc
in
enter
arpl
add
jmp
pop
out
orb
sub
inc
xchg
inc
mov
dec
mov
jle
adc
push
and
sub
adc
lret
add
and
adc
aas
dec
xor
pusha
test
lds
mov
pop
lcall
sbb
sub
or
xchg
int
fimuls
add
mov
cmp
imul
jae
cmpsb
jo
sub
addr16
faddl
pushf
push
cmp
pop
cwtl
mov
adc
bound
in
shl
xor
ljmp
pop
and
movsb
fnstenv
push
fcomip
shrl
or
or
pushf
sub
fistl
pop
push
ljmp
xor
lret
loope
sub
nop
pop
test
lcall
xchg
aad
jae
and
filds
pop
mov
push
inc
cmp
and
push
xor
fidivs
push
mov
fisubrs
add
outsb
icebp
stos
xor
lahf
and
lock
xchg
lock
in
push
cmpsl
mov
shl
sbb
dec
sbb
popa
adc
fwait
mov
mov
xchg
sub
jmp
test
pop
pop
stos
push
mov
mov
mov
out
jmp
push
mov
dec
std
dec
aaa
and
xchg
push
insb
pop
aas
mov
and
xchg
mov
movl
cmp
pushf
out
xchg
faddl
les
call
loope
dec
fsubrs
sbb
xchg
sub
adc
adc
mov
data16
je
push
jl
movsl
stc
inc
xchg
aaa
or
add
push
lods
xor
bound
xor
subl
popa
pop
and
icebp
mov
cmpsl
int
sub
fwait
mov
cmp
xchg
and
xorb
fdivp
ljmp
mov
in
jg
cmp
mov
mov
mov
mov
xor
lahf
jo
bound
sub
cmp
subl
incb
push
mov
adcl
xchg
roll
in
mov
jbe
cmc
test
jl
lcall
ja
testl
and
add
sbb
stc
clc
test
js
cmpsb
ja
push
push
cli
mov
mov
sub
pop
mov
xchg
dec
sbb
jge
pop
repnz
push
adc
xchg
mov
in
pop
mov
sbb
adcl
lahf
push
push
pop
fidivl
jbe
mov
xchg
fwait
sbb
sarl
add
je
dec
push
sbb
xchg
popa
idivb
dec
stos
dec
push
stos
jb
cmpsl
mov
inc
add
js
in
cmp
aaa
mov
cld
fs
test
mov
pusha
in
mov
into
push
mov
and
xlat
iret
jecxz
pop
sti
jge
cmp
mov
or
mov
nop
arpl
adc
sub
ljmp
add
dec
adc
jg
jmp
enter
sub
and
ja
cmpsb
mov
sbb
lcall
push
pop
xlat
ret
and
inc
push
push
push
mov
add
xor
fadds
idivb
hlt
pop
xor
pushf
and
popa
xchg
dec
andb
cmp
cmp
pop
hlt
daa
int
test
sub
xchg
jo
jecxz
ss
in
testl
sbb
out
ret
xchg
adc
bound
je
mov
push
lds
test
daa
or
pop
lahf
in
push
adc
aad
jmp
push
movsl
sbb
mov
fxch
je
loopne
roll
insb
mov
jno
dec
js
mov
sub
out
mov
fisttps
push
ficoml
pop
test
aas
loop
pop
jmp
pop
add
loopne
push
pop
or
and
xor
or
xchg
xlat
aad
push
hlt
loope
ds
stos
cli
push
inc
inc
push
and
gs
addb
pusha
filds
js
push
daa
adc
sbb
inc
mov
in
xor
xchg
mov
cmp
push
js
cmp
fldt
xchg
cmp
or
notb
sbb
mov
shl
mov
mov
inc
inc
loope
add
fstl
cmp
repz
jae
lods
xor
xor
mov
push
add
jb
mov
push
cmp
movsl
mov
out
xorl
lahf
pop
lods
add
mov
sti
in
pop
fists
iret
icebp
jb
popl
daa
repz
insb
jl
pop
xchg
out
jo
lds
mov
imul
add
xor
xchg
push
jbe
lret
mov
sub
hlt
lret
and
sahf
outsl
movsb
loopne
rcll
cli
out
pop
dec
stc
cmpl
jge
push
loope
pop
cmp
in
test
in
das
cmp
dec
xor
xchg
test
into
push
test
sub
in
push
inc
dec
test
xor
mov
inc
shr
stos
or
ja
loopne
movsl
mov
push
fnstenv
xchg
or
inc
push
adc
and
or
mov
sub
mov
ret
add
adc
pop
jmp
call
push
out
test
lods
or
xor
out
adc
pop
jmp
subl
out
xor
arpl
scas
in
data16
mov
add
xlat
shr
and
in
add
lcall
shl
mov
mov
mov
mov
shll
bound
cli
add
push
add
fimull
dec
dec
adc
push
or
ss
repnz
cmp
ret
pop
jecxz
cmpsl
xor
pop
push
jo
lret
adc
add
dec
mov
add
daa
mov
aaa
ss
and
loope
cltd
jbe
mov
out
jg
popf
push
int
mov
jg
mov
xchg
add
pop
dec
bound
xor
pushf
call
arpl
cmpsl
xchg
pop
adc
jns
push
std
test
pop
jnp
inc
cmc
int
pcmpgtb
fsubs
and
mov
std
mov
or
pop
cmp
out
movsl
leave
ljmp
in
xor
ret
lea
adc
mov
gs
push
push
mov
jne
xchg
adc
fsubrs
push
sub
xlat
out
aad
sbb
mov
jmp
jge
cmpsl
or
dec
inc
ror
push
add
sbb
xchg
outsl
in
outsl
fisttpll
mov
xchg
sti
enter
fadds
mov
adc
pop
lock
dec
sbb
jecxz
adc
lret
iret
fdivs
cwtl
mov
loopne
jl
push
lods
or
popf
cltd
pop
icebp
add
adc
dec
insl
into
lods
add
cmp
test
in
aaa
jno
cltd
outsb
repz
pop
mov
shrb
out
add
mov
cmp
adc
sub
lds
mov
or
sbb
inc
cmp
fs
jge
push
pop
sub
mov
ss
xor
mov
inc
and
sbb
mov
mov
mov
adc
subb
jg
or
pop
xchg
arpl
ret
sahf
or
mov
in
fbstp
sub
mov
mov
lahf
sti
inc
push
xchg
test
filds
cmc
mov
push
cmp
cmp
fucomi
xchg
pop
push
cltd
pop
xchg
sbb
or
dec
inc
sbb
and
imul
mov
pop
push
mov
ss
fs
fs
adc
push
jg
xorl
or
pop
arpl
cmpb
mov
fnstsw
add
pop
dec
push
sub
cmp
xlat
mov
loopne
pop
push
push
mov
test
inc
iret
add
sub
into
iret
adc
ds
sbb
jge
add
cmp
filds
inc
lock
xor
in
or
mov
out
pop
testb
sbb
fwait
lcall
test
mov
repz
scas
sahf
xchg
sub
mov
cmp
pop
cld
in
xor
jns
mov
jno
dec
popa
xor
inc
push
push
and
inc
fwait
jmp
jle
inc
sbb
jmp
icebp
or
dec
notl
stc
clc
push
ljmp
adc
fwait
jl
ljmp
sub
hlt
jg
scas
and
dec
mov
pop
dec
sub
ljmp
fisubrs
jmp
xchg
sti
pop
pusha
data16
fimuls
repz
pop
inc
dec
jp
and
adc
mov
mov
or
jecxz
pop
test
fidivs
adc
pop
mov
jecxz
cmp
je
jg
aas
or
insl
icebp
jg
lods
push
sarb
shll
mov
push
inc
ja
mov
push
outsl
and
dec
std
or
dec
jle
jl
repnz
les
das
push
adc
insb
sub
mov
sbb
movsl
fldenv
roll
mov
fcmovnu
je
jae
xor
enter
sub
mov
xor
imul
cmp
jecxz
cmp
ss
pop
icebp
xor
fnstsw
pop
xor
xchg
mov
sbb
sbb
sahf
xor
outsl
idivb
xchg
cld
fimull
adc
mov
pop
js
cwtl
add
fwait
or
push
lock
lods
nop
daa
loop
xor
mov
pushaw
es
xor
popf
jae
add
fnstenv
jp
or
add
lcall
dec
or
aad
arpl
sub
xchg
sbb
repnz
push
push
adc
out
push
es
cli
xlat
pop
lods
insb
iretw
mov
push
loopne
jmp
fsubl
fmul
in
mov
xor
sbb
insb
stos
ja
xchg
cmp
mov
sbb
icebp
aaa
in
pop
ss
fs
call
int3
stos
xor
int
jmp
imul
sub
push
dec
dec
sar
in
int
sub
inc
das
jecxz
push
push
xchg
out
push
popf
mov
cmp
rorb
sub
jecxz
cmpsb
inc
xor
cwtl
stos
fsubs
lds
jns
jp
les
pop
cmc
fcom
fistps
add
jmp
add
stos
popa
jne
cmp
addl
or
sbbb
push
cmp
mov
mov
cmpsb
jb
push
stos
xchg
push
mov
adcl
mov
idivl
add
arpl
dec
dec
inc
gs
daa
push
pushl
or
aad
daa
inc
sub
sbb
mov
cmpsl
imul
dec
push
std
or
sahf
mov
rcrb
in
outsb
outsl
mov
arpl
jg
std
push
inc
cmp
mov
jb
aad
notb
mov
cld
dec
jmp
xor
fidivs
rolb
pop
push
popf
testl
outsl
jp
mov
sub
cltd
xor
sbb
pop
sti
push
iret
jne
sub
dec
cmpl
or
dec
ror
inc
cmpsb
aam
add
stos
jp
dec
add
loop
sub
dec
dec
negl
dec
mov
sarb
cwtl
cmp
insb
aam
jae
ficoms
cld
mov
push
rcl
or
sub
jae
cmp
clc
fwait
xchg
out
mov
dec
int
push
dec
test
test
shr
adc
xchg
movsl
inc
test
or
scas
dec
push
sbb
sbb
fsubl
pop
or
and
repnz
cli
outsl
addr16
jbe
xorl
in
dec
movsl
pop
xchg
jmp
mov
xchg
inc
addb
mov
in
jmp
movsl
lahf
rclb
andl
jg
int
fiaddl
sub
jno
les
mov
fs
push
movsl
mov
adcl
lahf
add
lret
jns
hlt
and
sub
xchg
out
inc
xchg
gs
arpl
cmp
addr16
fs
decl
and
sbb
jp
mov
push
xor
test
loope
push
jge
sub
hlt
out
arpl
test
mov
mov
enter
sbb
xchg
jns
fwait
and
std
dec
cmp
adc
in
add
scas
inc
mov
cmpb
lods
add
shlb
ljmp
sub
jecxz
mov
or
insl
pop
repz
cmc
mov
adc
xchg
roll
rorb
and
xchg
jge
lea
pop
xor
pop
push
sahf
xor
pop
daa
js
ss
dec
cmp
push
mov
movsb
xorl
loopne
ret
faddp
dec
out
xor
out
push
pop
jno
xchg
pop
mov
and
cmp
sbb
adc
test
leave
daa
push
movsl
add
cmpsl
lcall
inc
add
insb
mov
sub
std
bound
inc
std
sbb
js
xchg
gs
jg
ds
cmpl
jecxz
sub
jle
jmp
add
ja
push
hlt
fwait
ret
ret
sub
in
mov
lods
dec
pop
or
int
mov
ret
xchg
clc
adc
inc
jle
movsl
sbb
shll
and
and
sbb
pop
adc
aad
xchg
nop
jae
push
sbb
push
dec
cmp
jb
push
mov
pop
xor
pop
arpl
adcl
loopne
addr16
icebp
xchg
and
imul
lahf
cmc
xor
jno
and
jnp
jnp
bnd
sbb
adc
movsb
and
lret
mov
push
leave
pop
aam
push
mov
jmp
rsm
adc
mov
xchg
pop
push
add
ss
xchg
pop
in
rcl
xchg
es
jle
test
and
ret
ds
push
das
and
or
xchg
out
mov
das
daa
ss
daa
lahf
bound
add
das
fstp
call
sqrtps
pop
sub
ss
out
pushf
fimuls
dec
adc
pop
cmp
mov
jmp
aam
adcl
sub
mov
mov
sbb
xor
ret
es
fcompl
push
aas
jp
sbb
pop
es
or
adc
rorl
pop
icebp
cmc
dec
aas
xor
scas
mov
mov
js
xchg
ret
inc
pop
bound
lcall
xchg
sbb
pop
stos
inc
repz
cmp
jg
stc
push
shll
jo
mov
sahf
xlat
jno
dec
push
cmp
cmp
xchg
imul
xchg
mov
jbe
into
pause
nop
inc
jb
push
push
xchg
orps
sub
ficompl
cltd
xor
and
add
and
iret
or
pop
jne
jg
rolb
xlat
lcall
push
rcrb
sub
cmc
adc
push
cmpl
dec
or
daa
cmpsb
lret
and
sbb
ror
xor
lds
nop
adc
or
inc
ret
in
xlat
test
xor
inc
ja
or
mov
xor
je
dec
mov
push
add
sub
pop
arpl
dec
xchg
dec
cmpsb
in
jno
xchg
mov
rorl
xor
cwtl
bound
fiadds
cwtl
sbb
adc
push
pusha
mov
xor
jp
popa
stos
cmpsl
adc
mov
sbb
dec
aam
sub
inc
pop
xchg
add
cld
insb
jecxz
pop
sub
outsb
subl
dec
test
lcall
rcl
xchg
scas
xchg
inc
add
jbe
aas
call
insb
mov
add
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
pop
jp
jno
repnz
movsb
loope
xor
jge
psubusw
loope
xor
sub
out
push
pop
sbb
push
cld
mov
js
enter
in
repnz
ljmp
and
lcall
imul
push
les
shrl
das
add
stos
mov
jb
cmp
jecxz
sub
push
lahf
or
inc
shlb
lds
nop
sbb
cltd
jnp
dec
jmp
data16
mov
and
mov
roll
es
push
outsb
pusha
jb
cmpsl
decl
mov
inc
xchg
xor
arpl
imul
push
aas
cmp
push
jne
jmp
xor
adc
dec
push
mov
shrb
jns
fdivrs
mov
adc
imul
lds
mov
mov
pop
mov
or
xchg
push
arpl
movsl
xor
mov
mov
ljmp
mov
cmp
adc
lret
push
dec
and
cmpsl
repnz
and
mov
je
bound
xchg
jmp
xchg
push
pop
jmp
cmp
cltd
lea
scas
pop
pop
and
cmp
and
addr16
mov
into
shll
loope
sub
add
inc
out
fdiv
mov
xlat
jmp
loopne
lahf
ljmp
dec
popa
sub
mov
loope
shl
jns
jno
sub
stos
adc
mov
jle
je
cwtl
roll
add
popf
inc
mov
insl
push
testb
jmp
int3
sbb
leave
stc
inc
int3
sbb
aam
test
or
sbb
pop
add
fisttpll
fdivrp
leave
fldcw
cltd
mov
lods
mov
dec
nop
or
test
notb
sti
lahf
cld
fidivs
dec
cli
sbbl
mov
push
ljmp
outsl
call
andb
mov
sbb
stos
jno
and
scas
loope
ret
mov
daa
and
aad
rol
int
ficomps
sub
aam
in
xor
add
mov
mov
xchg
ljmp
sbb
mov
mov
mov
lods
ret
mov
sbb
ss
fadds
jle
sub
movsb
out
mov
pop
mov
gs
sub
lods
daa
fnstsw
and
mov
jae
jg
jecxz
cld
out
pop
push
lahf
inc
add
scas
test
mov
jae
xor
adc
xchg
jb
addl
iret
scas
fisttpl
xor
or
stos
pop
add
inc
lock
ficoms
pop
and
mov
push
and
pop
sbb
pop
inc
xor
mov
sbb
je
lahf
xchg
bound
iret
xchg
movsl
push
pop
push
mov
cli
mov
dec
fistpl
jbe
mov
push
jbe
cmpsb
dec
cmp
out
gs
dec
push
cltd
repz
or
adc
or
add
out
pushf
pop
cli
fildll
mov
test
cld
loope
repz
jl
and
pop
jecxz
int3
neg
jl
xor
adc
mov
test
mov
pop
dec
pop
adc
lcall
cmp
push
mov
pop
cmp
bound
cmpsl
jp
mov
mov
add
sbb
xorl
jle
mov
ror
pop
aad
data16
imul
and
add
xor
pop
fldlg2
std
pop
mov
dec
mov
js
inc
mov
and
pop
call
or
loop
sbb
stc
mov
mov
je
daa
mov
and
lea
enter
mov
or
mov
jmp
popf
popf
and
out
int
mov
mov
jecxz
adc
xor
out
orb
daa
in
sub
lret
cmp
insl
xor
xor
add
xlat
and
xor
and
dec
imul
hlt
rorl
cld
pop
mov
lds
es
pop
insb
add
jns
aas
fidivl
mov
stos
js
scas
int
out
cmp
mov
jbe
lret
addr16
mov
rorl
dec
xchg
adc
test
cmp
das
mov
int3
push
rcrl
sub
jb
mov
call
je
jg
fwait
inc
xlat
sub
das
push
sbb
clc
inc
sub
mov
dec
push
pushf
add
subb
add
loop
popa
push
adc
cwtl
cmpb
adc
cwtl
stos
subl
out
jnp
mov
push
cmp
xchg
cs
fdivl
fildll
push
jl
je
iret
sahf
popf
mov
loop
test
xchg
jb
mov
dec
mov
leave
aam
cmpsl
out
inc
xor
aas
in
je
lcall
cs
add
sbb
leave
scas
cld
rclb
xchg
jo
jno
jne
push
pop
add
xor
fwait
ret
testl
movsb
mov
out
jecxz
js
sahf
or
cltd
aas
test
rcrb
jl
pushf
stos
xchg
leave
push
or
pop
subl
dec
pop
xlat
cmp
cmp
add
cmp
adc
push
xor
dec
out
mov
ret
lcall
nop
mov
pop
or
mov
punpckhbw
mov
push
ljmp
imul
stos
and
xchg
dec
sub
xchg
dec
mov
ja
ds
inc
in
mov
out
and
inc
and
movsl
mov
lret
and
or
pop
xor
push
and
cmp
gs
or
or
push
jl
cmc
dec
sbb
add
test
out
and
lret
cltd
call
ds
inc
or
xor
std
push
mov
lret
add
cmpsl
repz
push
pop
sbb
push
push
mov
lahf
aaa
repnz
mov
loopne
jecxz
inc
es
call
fnstcw
mov
and
and
aaa
pop
cmpsl
loop
push
subl
call
xor
xchg
xchg
ret
fnsave
adc
aam
ficoms
fldl
mov
shrb
daa
cmp
into
xor
xchg
or
mov
cli
fidivs
jp
jno
cmp
rorb
sub
jno
shrb
push
lret
icebp
mov
push
add
imul
pushl
std
xchg
imul
out
sbb
and
stos
ja
outsb
push
and
jae
mov
in
inc
mov
into
xor
push
or
and
lcall
stos
lret
stc
jg
cmp
outsl
add
lcall
andb
push
and
mov
rol
add
fisttpl
xor
negl
xchg
add
aad
loope
and
and
sub
cwtl
push
neg
adc
sub
shr
push
std
ss
pop
mov
sarb
pushf
sahf
or
sbb
add
push
mov
das
pop
or
fnsave
lods
das
fdivrl
in
dec
lahf
div
fsubr
in
mov
clc
sub
mov
enter
jle
mov
cmp
push
rcll
dec
and
in
loop
roll
loope
loope
cmp
cli
dec
dec
imul
sub
out
addr16
das
fistl
xor
push
mov
jg
cld
pop
xchg
out
pop
lea
test
cltd
aam
test
mov
mov
int
sti
xchg
mov
rcll
xchg
popa
data16
dec
pop
cmp
cmp
dec
iret
das
cmp
mov
lock
call
and
pop
push
inc
xchg
mov
sub
fs
data16
xchg
addb
rcrl
push
dec
clc
jl
inc
push
ret
enter
mov
sub
aam
repz
stc
ss
pop
scas
ficompl
and
adc
enter
test
sahf
inc
jae
adc
mov
gs
or
push
pushf
lret
test
test
sub
and
jns
mov
rcrl
sub
jbe
mov
sti
lea
rorb
pop
sub
fwait
xchg
push
jae
cli
pop
sub
sbb
and
stos
test
lret
push
mov
lcall
xchg
dec
mov
arpl
mov
xchg
ret
sti
aam
jnp
test
and
pop
push
pop
punpckhwd
lds
push
lcall
xor
add
jle
jecxz
and
or
xchg
jl
push
sbb
aad
mov
fs
iret
mov
adc
popf
pushl
insl
mov
push
rolb
mov
loop
sbb
or
ret
fs
aam
insb
mov
mov
pop
test
scas
jno
mov
stos
mov
adc
int3
jnp
fistpll
push
arpl
cld
pop
out
pop
jp
push
outsb
pop
sub
or
pop
mov
out
lea
jae
lock
test
fsubrp
repnz
mov
adc
push
mov
mov
inc
rcl
xor
and
add
cmp
xchg
icebp
stc
testl
push
adc
iret
cmp
mov
jmp
lahf
cmp
ret
sub
add
sub
fistpll
or
out
push
int3
jmp
push
lods
pop
jbe
orl
xor
cmpsl
push
push
mov
movsl
adc
xchg
jno
mov
loope
loope
mov
inc
inc
pop
loope
fcomps
fistl
mov
or
nop
stos
cmp
lahf
dec
daa
mov
xor
sbb
add
xor
sbb
scas
insl
adc
push
pushf
bound
stc
jnp,pt
cld
mov
insl
jno
xlat
and
loop
addr16
mov
mov
leave
cli
cmp
popa
movsb
movsl
jne
inc
jae
sbb
xor
sub
rorl
cli
adc
sbb
das
xor
mov
push
loope
addr16
aad
fsubl
out
sahf
add
bnd
bswap
pushf
repz
popa
mov
cltd
lock
xor
test
rolb
fisubrs
mov
mov
xchg
cmpl
mov
pop
fbstp
mov
and
dec
mov
and
inc
scas
xchg
pop
cltd
and
mov
sub
scas
jo
cmpsl
add
sub
jecxz
movaps
sbb
jecxz
adc
inc
mov
out
jp
out
push
cli
popf
test
gs
push
jp
xlat
cmp
jb
out
xchg
xchg
mov
sub
fadd
stc
mov
stos
imul
cmp
push
negl
lea
adc
das
push
mov
sbb
mov
sbb
and
and
sub
dec
cmpsb
rolb
les
sub
mov
repz
push
enter
jp
adc
mov
mulb
in
sub
pop
xchg
shll
psrld
cmpl
sub
dec
mov
clc
adc
test
mov
cmp
mov
addl
mov
aad
ljmp
sbb
outsb
dec
xlat
fs
loop
push
mov
xchg
mov
jne
mov
or
std
sbb
rcrl
ja
les
and
cmp
mov
add
sti
push
mov
in
add
xchg
mov
jge
imul
push
scas
xchg
adc
add
sub
lea
xchg
ja
int3
lret
mov
subl
ja
pop
test
xchg
sub
fstl
jns
lods
push
or
in
addl
iret
push
aam
iret
out
jb
sbb
psubw
stos
loope
stos
jns
std
pop
enter
rorb
mov
test
lock
mov
or
inc
or
mov
inc
test
sbb
inc
mov
enter
jmp
add
sahf
int
aaa
lods
jno
ret
fcoms
out
jo
sub
out
mov
push
hlt
and
add
sarb
insl
ficoml
pop
stos
orl
sub
xor
jno
xchg
ss
lahf
pop
sti
jle
jl
lahf
daa
imul
xlat
fyl2xp1
adc
xchg
aaa
dec
or
popf
add
aas
out
lret
jge
lcall
or
dec
shlb
xchg
cmp
out
pop
xchg
jnp
fcomps
test
dec
jg
lcall
je
sbb
je
scas
test
loop
stos
aam
out
aas
scas
daa
inc
cld
imul
je
das
mov
jbe
or
pop
pushl
icebp
push
imul
jle
out
enter
mov
testl
test
lret
in
sti
adc
ss
dec
and
fimuls
les
lret
xchg
lods
push
cs
mov
xchg
mov
xor
enter
mov
lea
repz
fsubl
rolb
and
pop
scas
inc
jo
inc
xchg
imul
aam
mov
dec
jg
ret
aaa
dec
pushf
inc
jecxz
out
mov
fbstp
pop
test
xor
xchg
in
mov
icebp
mov
xor
js
aad
negb
lods
sbb
pop
pop
sbb
pop
cmp
decl
inc
pop
and
test
rorl
cmp
dec
cmp
fists
add
or
addr16
ftst
mov
push
mov
mov
jno
test
inc
pop
in
imul
in
mov
fsub
je
pop
or
mov
rcll
pushf
sbb
out
mov
inc
jae
addps
jl
jp
inc
cltd
jecxz
call
jnp
popa
scas
xor
and
mov
or
pop
pop
rcr
cltd
outsl
mov
mov
pop
push
push
call
enter
pop
imul
adc
jge
fldt
ret
pop
pop
sbb
cmp
mov
mov
rcll
jae
sub
xchg
rcrb
js
dec
mov
mov
inc
mov
xlat
std
scas
cmp
in
fcmovb
xor
cltd
mov
das
inc
nop
mov
les
sub
mov
ret
mov
int3
into
jle
dec
dec
fdivs
add
jno
push
stos
stos
ret
cmpsb
adc
in
popa
mov
jp
dec
cmpsl
pop
adcl
sar
les
xchg
pop
add
cvtdq2ps
cmp
aad
jecxz
shll
cmp
lds
sbb
add
sbbb
int3
jp
lods
xchg
repnz
pop
daa
popf
add
pop
aaa
popf
xor
or
pop
xor
std
imulb
lods
push
arpl
lcall
mov
mov
xlat
dec
mov
pop
xchg
stos
add
outsb
cmpsl
mov
das
or
arpl
adc
xchg
repz
int3
mov
mov
rolb
aaa
subb
bound
test
push
test
fistpl
jle
daa
aam
mov
mov
fucomp
jg
inc
mov
mov
push
adc
shll
sbb
add
mov
or
addb
push
sub
adc
js
imul
data16
divps
out
fsin
mov
inc
jge,pt
lock
cmpsl
mov
dec
movsl
call
fmul
cmp
pop
mov
fildl
push
and
inc
push
lods
sub
je
and
mov
lds
jns
enter
dec
jae
dec
sbb
das
mov
aas
imul
inc
pop
icebp
movsb
sub
or
data16
rolb
mov
and
ljmp
int3
mov
xchg
adc
cmpsb
loop
jp
adcl
jbe
xchg
xchg
in
cmp
push
jno
jmp
adc
loop
out
adc
and
pop
push
pop
pop
fs
xor
or
cmpsl
pop
int3
mov
rclb
out
pop
mov
xlat
cltd
push
insl
loop
inc
negl
loop
mov
jo
hlt
sahf
push
xchg
xlat
jnp
and
jmp
cmp
in
xor
xchg
adc
pop
dec
in
sub
std
loopne
mov
pop
xor
jmp
mov
mov
and
sbb
repz
pop
repz
sbb
jo
in
movsl
data16
icebp
packssdw
movl
int
fists
sbb
leave
inc
add
mov
add
mov
mov
push
lret
cmp
jbe
test
adcl
jl
jnp
cwtl
inc
icebp
inc
aam
inc
fstpt
mov
mov
in
sbb
adc
dec
or
in
and
sub
sbb
sbb
sahf
jp
rorb
outsb
icebp
fcompl
adc
fistps
sbb
outsb
subl
jg
je
cmp
imul
stos
mov
xor
inc
sbb
dec
mov
mov
lea
mov
clc
mov
out
cmp
jb
sbb
outsl
pop
fisttpl
call
call
pop
in
into
mov
dec
mov
daa
lret
mov
mov
mov
xlat
ds
insl
add
adc
imul
js
sbb
adc
insl
sub
stos
div
rcll
push
xchg
jg
sarb
dec
orb
repnz
lods
sbbl
dec
lcall
dec
test
dec
xchg
add
lcall
leave
push
dec
popa
punpcklbw
and
test
mov
pop
or
or
jle
inc
cwtl
fstpl
cmpsl
mov
int
jp
scas
pop
ds
dec
aam
xor
lret
test
dec
je
mov
lds
or
lahf
inc
adc
xchg
notl
xchg
aas
loopne
js
push
jp
fisttpll
dec
add
dec
push
aad
push
call
mov
in
cmpsb
jbe
add
pop
xlat
cmp
push
push
xchg
jae
xchg
mov
mov
imul
rol
mov
push
out
ds
mov
pop
pop
mov
lahf
fs
popa
mov
sub
jle
or
loopne
mov
sbb
add
inc
xchg
clc
dec
mov
cmp
aaa
push
jnp
inc
push
cwtl
icebp
jno
add
xchg
or
sub
test
scas
movsl
mov
xchg
pop
mov
pop
inc
add
mov
daa
enter
roll
inc
push
out
mov
popa
sbb
sbbb
xor
and
aad
mov
push
insb
dec
in
stc
xchg
shlb
lret
jnp
adc
and
fisubrs
popa
mov
xchg
adcb
mov
das
inc
subb
push
movsb
clc
add
adc
lods
rcrb
cmc
adc
jb
and
jo
dec
adc
mov
push
sbb
jb
jge
adc
outsl
and
push
mov
pop
xor
shl
testl
add
lods
xor
sbb
lock
fnstcw
push
jb
inc
jmp
iret
jne
sti
scas
sbb
setge
daa
push
dec
inc
fimuls
loopne,pn
xorb
cltd
and
cmpsb
mov
rolb
scas
insb
imul
or
imul
ljmp
xor
arpl
fxch
loope
ljmp
insl
xor
or
xchg
cmpsb
insb
subl
lds
jle
jg
or
sarl
imul
ss
sbb
dec
jl
sub
push
jge
imul
test
int
out
mov
insl
xchg
pop
push
sahf
icebp
popl
and
adc
cmp
pop
mov
rcrl
hlt
pop
jecxz
pop
data16
out
lret
push
ficoms
mov
inc
xchg
add
mov
bt
sub
pop
and
fildll
rep
cmp
push
push
test
clc
aam
mov
shll
js
xorl
popf
lods
sub
insl
shr
test
imul
dec
sahf
enter
sub
iret
lods
out
adc
jmp
out
sub
call
cmp
mov
mov
xlat
adc
pop
pop
lea
push
sbb
lds
dec
push
jp
test
jno
mov
int3
push
dec
mov
insl
pusha
jae
cwtl
popf
loopne
inc
push
xchg
jbe
iret
stos
dec
cs
cwtl
inc
mov
dec
lret
push
aas
icebp
mov
dec
mov
mov
inc
push
dec
fstl
or
lret
arpl
or
inc
out
push
jle
ret
xor
pop
cmpsb
push
mov
mov
ss
aam
mov
es
rcrl
js
xchg
movsl
es
sub
pop
fisttpl
stc
inc
fidivrs
xlat
add
lcall
ss
sbb
xchg
int3
movsl
adc
cmp
push
cmc
pop
stos
lock
iret
xlat
lods
mov
jns
test
mov
in
mov
push
inc
xchg
mov
fsub
push
in
xchg
imul
enter
mov
popf
movsb
clc
data16
int
in
mov
and
sbbb
rolb
fists
shr
scas
sbb
xchg
xor
xorb
rorl
movsb
add
clc
ljmp
cmpsl
and
xor
ja
cmpsb
sub
imul
outsl
pop
xor
add
stc
sbb
sahf
jmp
mov
mov
fistpl
sbb
push
cmp
or
xchg
popf
sub
and
mov
ds
xchg
ror
rcll
cltd
incb
cwtl
movsb
repnz
xchg
inc
and
push
dec
test
jmp
ljmp
jne
ret
out
orb
add
add
pop
adc
gs
mov
and
insb
stc
mov
push
jg
les
imul
jg
js
xchg
cli
lcall
dec
sbb
jae
rcll
pop
xchg
nop
out
adc
enter
ds
and
pop
mov
fcmovnu
sbb
lods
and
aaa
pop
cmp
jno
adcb
iret
xchg
lahf
pop
xor
xor
and
pop
adc
lahf
out
add
movsl
pop
xchg
sbb
add
neg
decb
pop
inc
jnp
push
das
scas
or
popa
push
cmpxchg8b
xor
pop
stos
out
mov
jne
aad
xor
push
jae
in
or
push
jg
xor
sub
dec
add
push
cmp
add
les
pop
pop
cmc
xlat
xchg
mov
testl
sbb
cli
scas
dec
mov
je
xchg
fstps
pop
mov
sbb
in
fidivrl
inc
ficomps
outsl
sub
aam
add
loope
push
aaa
push
add
and
je
xchg
add
ret
sub
cmpsb
out
repnz
push
xor
mov
aas
pop
add
adc
lds
outsb
cmpsl
mov
push
cmp
ret
mov
fistps
pop
icebp
add
hlt
into
jne
sbb
andl
mov
ss
movsl
mov
cmp
push
pop
orb
js
adcb
and
mov
addb
jae
ja
inc
pop
push
aaa
bound
fnstsw
aaa
add
push
mov
mov
push
shll
imul
movb
pop
and
or
lods
xchg
sbb
pop
cwtl
pop
or
shl
jp
mov
sti
lcall
in
adc
xor
dec
xlat
ret
cmp
and
lods
xor
or
lods
fisubs
mov
clc
dec
dec
out
das
pop
fistpll
dec
lea
iret
lds
mov
cmp
push
push
addr16
xchg
mov
mov
xorb
es
adc
mov
xchg
sbb
outsl
lods
mov
mov
or
cmp
sbb
dec
popf
jmp
les
jne
mov
mov
pop
add
pop
cmpsl
mov
mov
lahf
push
xchg
sarl
enter
push
movsl
inc
lods
inc
ja
stos
or
dec
mov
or
mov
xchg
cld
dec
dec
xor
pop
jne
push
adc
adc
xorb
ss
mov
dec
xchg
mov
movsl
mov
adc
imull
insl
cltd
adc
rcll
shrl
sub
loopne
shrl
xchg
sub
icebp
aad
dec
iret
add
sbb
mov
adc
in
sbb
cmp
and
push
xchg
or
cs
je
cmc
adc
int
cwtl
stc
mov
jo
inc
cmc
arpl
xchg
adc
je
rcll
and
addr16
mov
dec
inc
int3
lret
push
dec
push
jp
scas
ja
xchg
mov
pushf
xor
fincstp
or
aad
xchg
push
loopne
jne
decl
gs
inc
xchg
sub
repnz
ljmp
enter
jge
gs
adc
in
mov
out
jbe
das
mov
pop
rcrl
aas
in
mov
arpl
push
xchg
cmp
jnp
mov
int3
push
int
outsb
push
enter
movsl
imul
adc
mov
scas
add
leave
sbb
jne
subl
sti
xchg
cmp
push
sub
jnp
fdivs
cmp
clc
lret
push
das
cmpsb
mov
xor
mov
aas
fs
and
test
sub
gs
pop
adc
sub
xchg
mov
jae
popa
enter
sbb
lahf
lea
add
out
mov
and
push
outsl
test
ret
pop
out
xor
mov
fstps
loop
xchg
xchg
mov
push
inc
test
add
sbb
jnp
fsubrl
inc
adc
add
xor
dec
sarl
mov
or
inc
pop
loopne
inc
inc
cmp
adcl
movsl
outsl
fisttpll
sub
push
repnz
sub
cmp
fstl
js
jne
mov
cmp
cmpsb
int3
jae
jne
jae
dec
inc
add
fisubrl
hlt
clc
or
into
cmp
rorl
push
ljmp
sub
mov
or
out
in
ds
int
xchg
lahf
jle
mov
or
mov
jbe
xlat
jge
mov
cmc
and
test
shrl
xorb
rol
push
xchg
and
scas
pop
out
add
sbb
and
shl
ret
dec
ds
nop
jae
pusha
adc
cmp
hlt
fsubl
adc
imul
cmp
sbb
icebp
sbb
popf
cmpsb
add
in
dec
mov
jbe
add
mov
ljmp
lock
cmp
hlt
mov
sbb
fists
push
mov
es
ret
movsb
mov
mov
cmovb
sub
pop
dec
dec
clc
outsb
cmpsl
out
add
test
lods
pop
xor
add
sbb
stos
sti
pusha
mov
enter
adc
fs
mov
lods
pop
bound
cmp
jae
lea
leave
sbb
sbb
pop
xchg
stc
push
inc
dec
push
sbb
stos
adc
mov
mov
mov
out
incb
jnp
fsubp
fidivrs
mov
test
arpl
push
sahf
cld
xchg
mulb
jmp
ljmp
movsl
scas
xor
out
xor
aas
je
enter
mov
jp
mov
nop
insl
xor
lcall
fcoml
jb
sub
int3
cmpsb
push
push
sbb
pop
inc
ss
clc
sub
dec
push
mov
scas
push
add
xor
xchg
cwtl
pop
in
mov
adc
jp
cli
push
add
push
stos
mov
jecxz
xchg
pushf
dec
fs
jne
daa
ss
cmp
inc
and
and
and
lods
loope
inc
push
loopne
mov
mov
sub
cmp
push
push
or
mov
mull
popf
add
loope
jge
add
sahf
mov
push
xor
aam
lcall
repz
xchg
dec
fwait
sahf
push
adc
and
insb
pop
mov
test
out
and
out
sbb
push
lods
sub
jbe
sarb
push
jae
push
push
mov
push
jbe
pop
leave
sbb
cs
into
fcomps
ret
out
int3
adc
xchg
inc
jl
stos
push
out
imul
xchg
sbb
or
test
adc
push
and
and
jns
jecxz
add
int
push
xchg
cmp
sub
pop
push
mov
imul
arpl
cmp
stos
xchg
shll
pop
add
sub
cmp
inc
movsl
jle
pslld
jmp
mov
cltd
cmp
sbb
aam
sbb
sbb
sub
jg
or
inc
dec
mov
bound
andb
jo
mov
pop
mov
addl
iret
xor
fistpll
xchg
push
dec
push
dec
shll
or
sbb
push
inc
in
and
mov
dec
cs
jns
mov
insl
xchg
add
push
push
xchg
aaa
adc
cltd
xchg
jae
adc
xchg
lahf
xor
push
cmp
scas
mov
sbb
mov
sub
jge
lret
lahf
js
cld
in
and
je
test
aam
cmp
push
fwait
clc
sub
out
adc
leave
pop
scas
add
mov
lock
xchg
cmp
imul
push
cld
add
shl
shll
pushf
or
and
movsb
xchg
sub
call
loope
inc
jnp
xor
push
les
push
xor
mov
ficoms
in
mov
inc
mov
adc
push
enter
push
clc
adc
sub
and
aam
nop
sbb
neg
xchg
std
or
mov
mov
xchg
mov
xorl
mov
inc
xchg
shrl
and
xor
or
xor
pop
xchg
pop
test
sub
xchg
in
sbb
xor
xchg
fcoml
cs
fiaddl
loopne
mov
mov
xlat
std
out
call
sbb
sbb
mov
add
fstpt
jb
mov
mov
mov
xchg
cmpsb
movsl
push
add
flds
cmpsb
pop
push
lret
cli
xchg
enter
sbb
nop
sbb
cmp
xor
jge
test
fwait
inc
mov
cmpsb
ja
adc
int3
xchg
push
leave
push
jae
cli
lret
push
sub
sbb
fadd
dec
inc
cs
movsb
mov
movsl
lods
clc
ficoml
and
cmpsb
loopne
bound
and
mov
xchg
sti
gs
inc
mov
repnz
pop
mov
loope
sub
or
lds
cltd
mov
push
lahf
cmc
cmp
xchg
and
jp
xchg
inc
mov
adc
ret
loope
scas
arpl
sti
dec
jl
pusha
mov
and
jmp
mov
sbbl
inc
sub
cs
push
out
data16
je
dec
outsl
push
cmp
std
int
sbb
xchg
or
lcall
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
xor
pop
mov
add
roll
repnz
adc
insb
cld
or
inc
lea
add
fisttpll
push
xchg
dec
mov
jmp
jnp
mov
je
cs
xchg
mov
cmp
sub
rcrb
jecxz
fcompl
add
popl
adc
adc
pop
pop
orb
outsb
test
out
cmpsb
cwtl
jge
sub
popf
data16
ljmp
and
clc
hlt
xor
add
fisubs
xchg
jne
lea
or
or
lea
xchg
outsb
sbb
inc
gs
insb
leave
jnp
addl
pop
jg
sub
jmp
jae
jno
cli
lods
mov
inc
jge
lret
mov
push
cwtl
pop
movb
shlb
and
aas
xor
cmp
pushf
adc
or
rcll
sub
adc
cmpsl
jae
fwait
pop
adc
xchg
repz
or
xor
or
arpl
xor
jne
inc
or
out
mov
inc
adc
clc
dec
fs
lods
xchg
xchg
jge
fbstp
mov
dec
push
mov
pop
dec
aaa
cmp
jmp
push
or
push
iret
sub
inc
ret
adc
lcall
xchg
mov
addb
int3
inc
es
out
mov
and
shlb
inc
mov
leave
fnstenv
mov
mov
lock
xchg
mov
out
dec
outsl
mov
adc
sbb
adc
cmpsl
pop
xor
lds
cmpsl
rolb
push
ffreep
and
outsl
clc
fsubp
mov
push
or
dec
inc
inc
sbbl
test
inc
xor
aam
imul
aad
iret
mov
or
adc
cmp
ja
sbb
xchg
mov
ror
sar
test
sub
into
adc
sbbb
pop
aas
xchg
popf
dec
shlb
xor
push
js
and
xor
jg
cmp
out
test
lods
xchg
xor
pop
xor
add
pop
lret
dec
push
shll
and
sub
adc
lret
mov
dec
push
jne
test
add
xor
cmpsl
mov
stc
bnd
imul
jno
in
dec
out
add
xor
aad
or
pop
lret
fstl
inc
inc
xchg
mov
inc
dec
mov
inc
mov
sbb
push
xor
gs
fs
leave
lods
xchg
xchg
pop
sub
pop
je
pop
xor
lret
cmc
sbb
sbbb
dec
and
mov
add
mov
adc
cmp
add
js
adc
pop
insb
jecxz
lahf
jo
xchg
iret
pop
pop
lods
mov
loopne
insl
xchg
movsb
jb
pushf
mov
das
aad
jge
and
shrl
or
inc
add
mov
das
cmc
inc
push
lock
addr16
out
cs
loopne
cli
push
sub
dec
adc
dec
or
cmp
push
dec
mov
cmp
mov
lds
subl
cli
rcrl
into
ficomps
stc
push
aad
mov
fnsave
movsb
lods
add
loop
rorl
and
fwait
xor
push
xchg
push
addl
rorl
arpl
ret
and
and
xor
cltd
xchg
sub
das
ljmp
jns
sub
sbb
jb
mov
loope
inc
mov
call
or
cwtl
inc
fwait
bnd
push
add
or
dec
push
dec
adc
xchg
add
mov
out
push
mov
cwtl
mov
repz
mov
add
jno
or
mov
cmp
jmp
mov
xor
rcl
out
jmp
cli
ret
and
out
jge
and
arpl
push
dec
sti
sbb
stos
sub
push
jno
inc
mov
sbb
std
adc
psrad
push
cmp
pop
dec
jnp
scas
jns
mov
aad
xchg
cmp
cmp
mov
in
dec
outsb
pop
icebp
notl
insl
in
push
nop
mov
pop
and
shll
pop
mov
stc
sbb
inc
fmull
fld
xchg
lods
lods
mov
pop
jp
stos
mov
sar
xchg
imul
addr16
aaa
sbb
aas
or
in
lds
mov
xor
loop
push
cmp
push
jmp
lock
rorl
fistps
mov
and
mov
add
pop
les
test
clc
ret
jecxz
loop
and
in
and
in
jo
jge
fsubl
mov
inc
push
inc
popa
sub
js
adc
out
and
cwtl
xchg
jecxz
dec
mov
nop
and
xor
cmpsb
mov
ljmp
test
mov
ret
arpl
and
test
cmp
leave
xchg
or
nop
lret
int3
pop
cli
pop
pusha
inc
pusha
sbb
lahf
lret
add
insb
cwtd
mov
adc
sub
xchg
loopne
insl
cmp
fnsave
dec
inc
jne
out
rcrb
fildll
sub
and
outsb
inc
test
lahf
mov
push
push
sbb
jnp
mov
push
mov
and
sbb
pop
and
outsl
dec
das
addr16
lds
dec
xchg
mov
cltd
aam
enter
fldcw
orl
mov
jge
and
push
jle
pop
mov
jne
mov
jbe
or
push
les
pop
pop
lcall
aaa
mov
lret
test
mov
je
loope
enter
push
or
mov
mov
xor
hlt
imul
mov
imul
or
push
imul
mov
adc
mov
jge
ss
mov
or
sahf
in
sahf
cmpl
cld
lahf
push
ss
sub
add
mov
xchg
adc
mov
add
inc
aad
sub
dec
stc
mov
jecxz
in
lods
jno
jns
ja
out
stc
leave
fistpl
mov
clc
or
jge
popa
pop
xchg
mov
or
lods
es
mov
jp
lea
fmuls
adc
pushf
mov
jno
test
pop
arpl
push
addr16
dec
adc
out
xlat
adc
sub
pop
cmp
ja
imul
hlt
in
lret
in
enter
mov
adc
int
lcall
test
xor
mov
xor
int
jbe
push
rcrl
shrb
jle
fmul
call
ds
xor
sbb
dec
in
insl
mov
push
sbb
aad
xlat
loope
aam
loop
sbb
xchg
fbstp
scas
push
cmpsl
xlat
mov
in
and
movsl
xchg
fidivrl
mov
mov
repnz
ss
outsb
push
adc
inc
jmp
iret
mov
js
lea
mov
jnp
mov
aas
imul
in
dec
push
pusha
js
outsl
mov
inc
in
std
push
icebp
xchg
aad
ja
adc
cmpsb
sbb
jne
call
loope
lahf
xor
jl
jmp
add
xchg
xchg
pop
arpl
jns
pop
jl
push
sbb
addr16
push
dec
scas
xchg
inc
sbb
xor
pop
pop
dec
sub
cld
stos
sub
repnz
mov
movsl
into
in
mov
cmp
push
xchg
cmp
mov
cmp
add
pop
pop
insl
cmpsl
mov
stos
or
addr16
xchg
add
xchg
pop
aas
jno
in
push
mov
andps
push
aas
xchg
cmpsl
mov
or
push
mov
mov
dec
call
sub
aaa
cmp
xchg
ljmp
or
sub
or
inc
adc
inc
jnp
lds
mov
adc
orl
aad
xchg
xchg
jo
push
pop
lahf
pop
mov
test
pop
daa
aaa
pop
call
shlb
ljmp
inc
fisttpl
test
test
mov
mov
add
mov
scas
inc
dec
fadds
pop
jmp
aaa
mov
inc
negb
leave
lods
rcrb
out
into
pop
rcrb
adc
cs
rcrl
mov
cmp
roll
pop
xor
adc
aaa
lret
adc
adc
fidivrs
fldenv
lds
popf
hlt
inc
push
mov
jp
repz
into
push
data16
testb
push
push
mov
or
cwtl
pop
pop
decl
cmpsl
add
cmp
cmpsb
adc
inc
mov
sbb
call
jnp
mov
aaa
jns
js
scas
roll
sub
jg
ds
iret
sub
les
dec
mov
ljmp
push
cmp
sahf
mov
add
inc
and
in
into
sbb
out
mov
leave
dec
cs
xchg
sti
sub
data16
adc
sub
mov
add
aam
sbb
push
push
xchg
mov
fs
ror
pop
or
cmp
xchg
lahf
sahf
call
aad
ret
jbe,pt
jb
push
cmp
sbb
mov
lock
insb
daa
roll
das
loopne
std
fwait
in
or
push
mov
shl
out
cli
sub
cld
aad
push
cmpsb
loop
sub
jo
leave
std
push
inc
inc
cs
pop
cmp
repnz
pusha
xchg
rolb
cmp
push
insl
jne
stos
shll
mov
adc
add
and
inc
mov
push
loopne
fwait
pushf
cltd
add
jecxz
leave
clc
fs
sahf
mov
jae
add
jno
rcl
iret
out
push
push
lcall
jge
jae
fimuls
push
sbb
sub
dec
loopne
and
and
jbe
dec
clc
in
mov
dec
lret
sbb
lahf
in
ret
test
xor
dec
adc
mov
rcrl
sub
stos
pop
add
call
jp
mov
fwait
mov
cli
and
sarl
cmp
pop
mov
movsl
faddl
into
sub
xor
aad
mov
xchg
jl
data16
mov
mov
push
fdivrs
mov
jl,pt
push
jne
pusha
or
sahf
sub
jbe
jb
jo
jp
xor
dec
insl
xchg
dec
adc
std
xor
jbe
pushf
inc
sub
inc
or
outsb
and
inc
sub
mov
inc
jb
movsb
stc
out
xchg
mov
push
out
mov
mov
xor
test
sti
inc
nop
cmp
cmc
and
sub
add
jno
add
ss
xchg
lock
xchg
sahf
dec
popf
ja
bound
or
cmp
cmpsb
dec
inc
mov
in
mov
je
mov
cmp
xchg
add
xlat
mov
jae
mov
ljmp
mov
out
xchg
add
shlb
decl
les
and
xor
or
sarl
jg
xchg
mov
push
pop
dec
jmp
mov
push
jo
add
nop
xchg
xor
sub
jmp
sub
jg
mov
ss
and
loopne
and
inc
push
sti
test
xor
popa
pushf
int
and
xchg
push
fwait
sbb
test
add
fidivrs
hlt
pop
xor
adc
mov
rcr
xchg
mov
repz
popf
jge
mov
and
xor
std
pop
add
cwtl
aas
std
and
jae
das
sub
stc
dec
faddp
push
stos
aaa
mov
push
sub
jbe
adc
dec
iret
dec
rcrl
add
pop
pop
mov
sub
mov
fcomps
adc
mov
and
xor
lret
xchg
pop
cmp
and
inc
inc
ja
xchg
imul
rolb
adc
push
jmp
stos
negl
mov
loopne
iret
xlat
push
mov
mov
fcomi
sar
jecxz
and
loopne
sub
jg
adc
inc
insb
mov
push
and
xchg
mov
shll
ror
inc
push
push
aam
filds
outsl
test
or
test
push
xor
jno
mov
sbb
decl
adc
mov
push
push
mov
cli
popa
jecxz
stc
repz
loopne,pn
imul
leave
push
cltd
arpl
push
inc
sub
push
jb
mov
mov
xchg
inc
add
std
fldenv
bound
sub
mov
cmp
xchg
mov
mov
outsl
xchg
cmp
xchg
mov
xchg
in
gs
mov
pop
pop
dec
aas
mov
test
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
dec
add
rolb
add
add
add
inc
push
popa
aas
push
mov
jns
dec
mov
jbe
mov
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
