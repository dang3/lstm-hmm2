push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
sub
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
dec
sub
es
mov
jo
jmp
je
pusha
ret
aad
cmc
icebp
movsl
movsl
push
push
xor
test
jne
push
js
xor
jmp
pushf
mov
lahf
xchg
xchg
aam
je
sahf
adc
sbb
or
push
repz
pop
mov
icebp
push
ja
push
les
fldt
lea
xor
xchg
sti
xchg
in
jns
push
xchg
fwait
hlt
push
cmp
dec
sub
popa
mov
xor
out
pop
mov
mov
ja
fidivl
mov
cmp
inc
loope
dec
arpl
pop
mulb
jge
cmpsl
loop
or
push
movsb
dec
pop
mov
js
loope
iret
loope
jecxz
out
cmp
test
bound
or
cmc
mov
sbb
dec
ret
adc
fdiv
push
rcrl
int
xchg
iret
inc
cmc
outsl
push
mov
xchg
jnp
dec
test
loopne
or
add
aas
dec
cmpb
jge
jnp
or
lock
sbb
sbb
aaa
jl
push
cld
gs
push
popf
sti
aas
leave
imul
push
jnp
mov
inc
jns
xchg
or
cmp
pop
push
mov
xchg
adc
sub
push
cwtl
packsswb
popf
pop
outsb
xchg
inc
mov
push
loopne
cmpsb
xor
das
test
mov
outsl
mov
or
mov
ja
mov
or
fdivr
ss
and
rcrb
loopne
lahf
outsl
or
fisttps
je
xor
mov
xor
xchg
mov
adc
arpl
fisubrl
jbe
inc
mov
mov
push
mov
stc
add
shlb
out
xor
int3
fs
or
push
xor
fwait
lret
dec
ljmp
jp
mov
sbb
repnz
imul
sub
test
dec
mov
inc
xchg
jp
sahf
ficoms
leave
inc
push
faddp
arpl
je
mov
lret
popa
lahf
jmp
popf
sub
push
inc
add
mov
push
push
cmpl
jp
adc
adc
dec
sub
sti
cmp
test
addb
inc
daa
sbbl
mov
add
das
jmp
cmpsl
jns
fisttpl
call
aad
shll
hlt
test
cld
enter
push
cmc
dec
lods
lahf
jmp
in
jnp
lods
mov
leave
dec
jns
jns
pop
pop
pop
dec
popl
aas
dec
mov
enter
lret
pop
nop
xchg
fstpl
or
fyl2xp1
clc
sarl
xor
mov
scas
jns
iret
imul
ficoml
jecxz
xor
mov
scas
repz
inc
arpl
ret
repnz
lock
mov
mov
mov
push
pop
in
lods
mov
lds
cli
push
in
jb
sbb
cltd
mov
inc
ror
loope
insl
xchg
pop
rcrl
or
mov
pusha
hlt
pop
inc
push
rcr
mov
mov
insl
inc
and
mov
cli
imul
cld
dec
loop
push
adc
add
pop
and
mov
insb
push
add
jne
cmp
aas
sbb
loop
jb
or
lods
sub
adc
xchg
sbb
pop
push
mov
mov
movsb
lock
jb
testl
jbe
and
insb
pop
fidivs
add
mov
add
fadds
sub
loop
loop
push
gs
jle
dec
jno
mov
aam
lret
sarl
mov
repz
mov
mov
loop
test
loop
cmpsb
aaa
stos
arpl
push
inc
pop
jb
enter
addl
cmp
jbe
xor
or
push
ret
es
shrb
lret
imull
out
xchg
push
aaa
js
or
sub
add
mov
pop
mov
mov
stc
or
mov
pushf
mov
dec
add
out
imul
sbb
lods
out
call
cmp
mov
pop
or
lods
jbe
sub
cmpl
inc
pop
xchg
pop
add
mov
test
push
mov
or
sub
jb
enter
mov
cs
in
arpl
mov
or
std
fbstp
outsb
bound
movsb
nop
movsw
fmul
shll
repnz
pop
daa
xchg
mov
xor
adc
mov
ss
int3
pop
ljmp
cmpsb
adc
push
loope
sub
ds
cltd
jecxz
or
popf
mov
mov
adc
inc
xchg
ret
add
sbb
pop
add
test
fisubrs
adc
mov
pop
xchg
imul
mov
out
ja
pop
sbb
xchg
push
fsubs
mov
mov
mov
cmp
lods
xor
and
and
pop
in
dec
mov
and
test
xchg
jmp
cmpsl
lods
adc
test
es
lahf
aas
sub
jnp
and
cmpl
movsb
jo
dec
in
pop
test
mov
pop
lods
test
xchg
test
scas
push
arpl
mov
sbb
push
cmp
cmpsb
outsb
lock
push
or
push
push
cmp
xchg
pop
test
mov
cmpsl
into
addr16
test
adc
or
sub
lea
les
js
aam
aas
lock
adc
mov
imul
sbb
test
lcall
sub
xlat
xchg
int3
testl
stos
or
or
add
jnp
push
ljmp
pop
aaa
sub
stos
mov
jb,pt
imul
and
push
pop
or
xor
mov
cs
or
mov
dec
mov
xchg
lcall
into
scas
pusha
sbb
or
ret
dec
or
test
clc
addl
fisttps
xor
cmc
into
add
dec
adc
in
sub
sub
sub
jecxz
hlt
test
pop
cmp
add
or
mov
into
daa
das
ljmp
push
gs
in
fdivs
stos
movsl
xchg
adc
xlat
scas
sub
mov
mov
cmpsb
insl
add
pushf
enter
cltd
sub
inc
fsubl
mov
inc
jne
push
jmp
fsubl
mov
test
ficoms
sbb
test
xchg
cli
dec
sub
mov
daa
ljmp
xchg
or
adc
jns
pusha
repnz
inc
push
aaa
jmp
fldl
les
mov
xor
sub
aad
popf
pop
inc
sub
pop
pop
in
mov
fnsave
add
cmpb
and
fimuls
xchg
call
daa
loopne
cmp
or
lock
outsl
pop
dec
pushf
lcall
or
lods
fstl
test
jbe
add
add
pop
xchg
imull
mov
mov
cmpsl
mov
out
xchg
and
mov
cmc
mov
dec
insb
pop
xchg
jnp
ljmp
sub
mov
mov
jnp
dec
movsb
jnp
into
aam
or
mov
je
iret
cli
add
std
lahf
fadds
fldenv
jno
xor
adcl
or
pop
loopne
lret
stc
stos
inc
jp
xchg
jne
js
sti
sbb
insb
das
cmp
adc
xchg
xchg
stos
sbb
psubusw
and
fsubs
xchg
es
xchg
out
jmp
sbb
push
ja
stc
push
stos
jno
xchg
dec
mov
add
popf
fcomip
ja
shll
cmpsb
cmp
mov
mov
into
gs
xchg
pop
mov
fidivs
std
jae
insb
xchg
test
clc
pop
sbb
pusha
mov
lods
inc
fwait
inc
sub
insb
adc
rclb
aam
cmp
ret
out
jae
pop
cld
gs
cld
lock
xchg
pop
dec
loope
dec
xchg
sti
push
mov
sbb
push
and
pop
mov
pop
and
dec
in
int3
arpl
sbb
cmp
aad
mov
jno
sti
push
or
int3
pop
sub
jg
xchg
shufps
push
jno
inc
push
dec
jne
add
ret
push
xchg
ret
mov
dec
sti
imul
lret
mov
xor
fiaddl
mov
jecxz
mov
out
pop
dec
mov
sbb
dec
push
jmp
cs
mov
push
inc
test
les
int3
mov
jnp
add
inc
mov
das
testb
ljmp
push
popa
xchg
stos
int3
jnp
mov
mov
push
aaa
inc
stc
js
inc
inc
jl
shlb
xchg
xor
sub
test
cld
dec
andb
and
fisubl
dec
sarb
pushf
js
pop
fnstsw
push
pop
mov
mov
out
lea
scas
fcmovu
popa
xor
inc
mov
sub
icebp
mov
das
in
stc
mov
fwait
mov
out
mov
lret
xchg
out
leave
push
xchg
imul
hlt
xor
sub
or
push
aad
shll
movsl
aad
push
les
pop
cmpsb
leave
daa
je
mov
test
rep
or
negb
rolb
push
fists
xor
lock
add
pop
jae
sarl
les
inc
push
cmp
sub
mov
mov
cmp
mov
orl
mov
out
adc
jp
xchg
or
push
adc
mov
dec
jnp
mov
jmp
mov
sub
aas
cltd
lock
in
aas
xor
mov
jnp
pop
test
into
and
adc
int3
in
pop
stc
xchg
mov
es
pop
fs
ja
jns
or
jbe
push
lret
cmpsb
xchg
add
mov
test
push
leave
sub
pop
xchg
inc
inc
imul
xor
lods
sbb
aam
cmp
movsb
xor
js
push
int
cmp
xchg
ror
sbb
jl
add
aaa
out
jno
mov
or
add
adc
cltd
cltd
js
seto
ret
mov
mov
data16
or
sbb
shr
jmp
or
pop
xlat
pop
jmp
inc
cmp
pop
xchg
pop
push
pop
loopne
jns
adc
and
mov
inc
std
add
fimull
arpl
loope
push
in
rorb
adc
mov
fucomip
inc
adc
push
add
jne
pushf
das
inc
xlat
std
nop
lods
lret
xlat
popa
cmp
dec
mov
test
insb
repnz
jb
jno
and
js
mov
pop
fsubrp
insl
in
mov
popf
mov
mov
lock
mov
je
inc
in
in
fldt
xor
xchg
and
rolb
xor
push
movsb
dec
xchg
xlat
imul
rcll
push
mov
dec
mov
lret
test
gs
jbe
out
mov
insl
push
sbb
dec
pop
in
push
ss
jae
xchg
icebp
aaa
jl
popa
jg
inc
sub
pop
push
fdivrs
sarl
jo
cwtl
data16
addl
mov
push
addr16
aam
xor
test
shll
rorl
fidivrl
pop
cmpsl
mov
sti
mov
adc
mov
leave
xchg
fs
mov
cld
mov
inc
dec
sub
loope
inc
repz
sarb
mov
cmp
mov
xor
xor
cmp
mov
daa
sub
fs
pushf
mov
lock
push
or
dec
xchg
scas
loopne
mov
sbb
inc
shll
rcrb
adc
fmuls
jne
and
jl
inc
insl
mov
mov
pop
mov
mov
mov
mov
inc
adc
sub
xchg
adc
lahf
cmpb
and
mov
movsl
fstpl
loope
mov
subl
push
adc
int3
mov
sub
lcall
testb
mov
or
cmp
mov
xor
aas
push
icebp
in
outsl
stc
addr16
xor
inc
pop
iret
cs
rolb
das
gs
pop
add
cmc
mov
aaa
and
lock
cmp
pop
cmc
sbb
mov
pop
pop
and
negb
std
ret
jecxz
cmpsb
loopne
stos
or
and
cmp
stos
sbb
pushf
add
jne
jge
leave
adc
into
jno
cmp
mov
mov
jbe
jmp
addr16
movsl
dec
mov
outsl
mov
es
test
cmpsb
push
leave
sti
das
push
mov
movsl
rolb
xchg
mov
in
add
in
loop
jno
sub
addr16
fstpt
mov
mov
ret
lods
pop
insb
mov
xchg
das
add
pop
mov
sbb
cmpb
pop
stc
movsb
mov
lret
loop
jmp
test
sbb
sti
call
cmp
mov
or
dec
pusha
mov
adc
repnz
mov
push
cmpsb
mov
mov
iret
push
nop
jnp
stos
loope
das
sbb
iret
hlt
pop
ret
pop
repnz
dec
jns
in
mov
popa
mov
push
aaa
xchg
loope
inc
xor
sub
xor
movsb
sub
sub
dec
or
adc
arpl
mov
mov
test
and
mov
xchg
in
outsl
xchg
jbe
sahf
fisubrs
or
loopne
xor
pushl
push
gs
rcrl
pop
loopne
or
sub
jbe
xor
cmp
or
xchg
xchg
lods
popa
sub
fdivrs
push
dec
pushf
mov
adc
mov
icebp
daa
dec
sbb
enter
outsb
fbld
fisubrs
test
mov
loope
in
shll
mov
mov
jbe
sub
jne
jb
xlat
xchg
jle,pn
jle
jne
push
decl
aas
jmp
aam
gs
shrl
xor
xor
mov
sub
or
adc
je
push
outsb
cmp
popa
dec
push
push
jnp
mov
mov
pop
rorl
insb
out
add
inc
arpl
fidivrs
jne
push
and
ret
mov
out
nop
and
cmpsl
pop
inc
adc
mov
jae
push
and
hlt
lcall
inc
test
ret
dec
pop
nop
jg
popl
std
mov
test
subb
xor
mov
dec
mov
pop
mov
xchg
mov
mov
xchg
fldl
das
sti
sub
rdpmc
lods
ss
pop
mov
mov
bound
mov
repnz
sbb
or
lahf
mov
scas
idivl
lods
xchg
icebp
mov
mov
cmp
test
mov
inc
push
ljmp
scas
and
in
imul
repz
xor
in
cwtl
and
repnz
and
adcl
add
and
scas
push
clc
shrb
xchg
sti
add
jmp
outsb
enter
stc
xchg
sbb
or
es
adc
lcall
aad
lods
or
repnz
mov
jns
ret
cs
fs
stos
mov
adc
mov
les
add
and
stc
dec
xchg
pop
cmpl
push
mov
sarl
xchg
or
pop
subb
xor
ds
pop
xor
and
or
cmp
out
add
pop
add
inc
rcl
js
inc
dec
dec
outsb
mov
hlt
shll
out
negl
inc
inc
faddp
jle
push
inc
push
jb
jnp
imul
int
mov
push
lock
loop,pn
push
divl
lock
cmp
cwtl
leave
dec
mov
fwait
repnz
in
pop
jmp
es
dec
test
or
cmpsb
clc
pop
in
or
pop
xor
pop
ret
repz
cmp
addr16
jmp
lcall
xor
popa
or
mov
adc
pop
mov
mov
out
mov
scas
xor
push
or
mov
jmp
xor
dec
loope
mov
data16
sub
and
xchg
notl
js
mov
out
sub
and
xchg
inc
punpckhdq
add
sbb
pushf
dec
jbe
mov
js
je
enter
pop
scas
push
cmp
lahf
adc
mov
dec
cmp
and
cs
mov
inc
incb
xor
xlat
sub
jge
nop
lcall
scas
sti
mov
mov
testl
rorb
subb
push
je
pop
fwait
mov
xchg
pop
inc
mov
rclb
ja
sti
sahf
addr16
push
lcall
adc
mov
add
sbb
sub
jmp
add
and
in
adc
push
fcmovbe
jae
mov
mov
cltd
jno
adc
imul
je
gs
loopne
mov
lret
leave
adc
aas
lret
mov
and
cmp
pop
fists
adc
ljmp
mov
and
jle
sub
sbb
jae
cmp
sbb
cmc
mov
pop
sub
mov
js
test
rcr
popf
scas
into
jle
imul
cmpsb
sbb
adc
out
js
cmp
push
scas
pop
pushf
add
xor
repnz
addr16
into
push
lds
icebp
sar
push
or
xor
mov
cwtl
repnz
cmp
jns
lcall
div
fstps
aad
ret
cmp
or
outsb
insb
mov
push
ficompl
imul
mov
add
adcl
inc
add
pop
or
jp
adc
insl
dec
loope
cs
aad
nop
push
cmpb
or
xchg
mov
push
mov
and
mov
fs
cmp
xlat
add
leave
adc
xchg
xchg
jl
idiv
xor
dec
jno
dec
mov
push
sub
xor
sub
push
inc
sub
cltd
push
and
sbb
or
jo
adc
jg
clc
sub
push
mov
cmpsb
je
cld
adc
cld
clc
pop
cmp
xchg
ljmp
add
or
jns
movsb
pop
lock
dec
outsl
js
ret
lds
cmp
stc
push
pop
faddl
jg
xlat
fistps
ja
je
or
pop
shlb
getsec
or
gs
push
scas
mov
inc
je
fwait
xchg
mov
xchg
mov
lea
xchg
or
scas
sti
js
mov
dec
jl
cmp
sbb
int3
call
push
pop
and
add
add
xor
ret
test
repnz
test
sbb
popf
push
xor
mov
es
insl
push
shrl
jmp
call
add
mov
sti
scas
mov
ret
fcmove
ja
int
xor
pop
pop
pop
div
cmp
adc
sub
lahf
fdivrp
notl
in
mov
call
xor
adc
psubusb
cmpsl
jb
movsb
ljmp
sbb
mov
push
fcom
icebp
cmp
fsubs
imul
movsl
aas
mov
add
out
add
aad
mov
or
shll
pusha
out
std
rcr
inc
adc
mov
test
lock
mov
push
fisttpll
and
pop
nop
imul
stc
cs
mov
push
mov
cs
and
insb
rcrb
lea
or
mov
xor
fwait
and
ljmp
xchg
sbb
sub
adc
jmp
ret
es
paddsb
add
subb
lahf
and
inc
push
add
std
add
and
jae
out
daa
clc
mov
jg
add
cmp
adc
cmc
mov
loop
add
add
cmp
enter
jno
dec
pop
out
in
lret
xor
push
adc
fmull
clc
dec
cli
mov
or
or
pop
test
cmp
jecxz
outsb
in
ja
in
insl
movsl
mov
add
mov
shll
sub
test
push
inc
push
mov
inc
out
cmpsb
std
into
inc
mov
jnp
sub
mov
mov
dec
roll
lahf
cmp
popf
out
or
pop
inc
pop
xchg
sbb
jp
pop
in
mov
inc
aaa
bound
dec
jle
sub
aas
mov
and
rorb
cmp
jbe
mov
and
mov
test
dec
fdivl
add
jbe
ja
xor
stos
xlat
out
out
outsl
mov
xchg
xchg
or
orl
mov
pop
lcall
roll
adc
mov
jge
push
ljmp
adc
jecxz
push
jbe
aad
mov
mov
push
xor
adc
xchg
jg
and
push
cmp
add
mov
mov
lcall
pushf
jae
movsb
popa
push
sbb
push
add
movsb
fs
ja
es
sub
adc
sbb
lahf
lods
neg
pop
imul
sbb
cli
sub
cltd
mov
or
inc
or
pop
loopne
insb
ss
movsb
xchg
aam
inc
popf
dec
pop
dec
ja
pop
jne
mov
icebp
mov
push
xor
ffree
mov
rcrb
clc
xchg
inc
xchg
pushf
arpl
jecxz
sub
sub
mov
mov
icebp
push
push
mov
jae
mov
ret
ret
call
dec
fldt
out
add
jns
jecxz
push
test
push
dec
push
jecxz
lahf
and
mov
repz
lods
cmp
sbb
aam
mov
add
mov
ret
xor
inc
jmp
roll
cmc
sbb
cmpsb
dec
divl
icebp
nop
xor
mov
movsb
mov
gs
push
test
ror
xchg
out
pop
ror
cmp
lds
sub
xor
arpl
mov
shll
lcall
xchg
inc
jge
leave
push
movsb
in
add
pop
sbb
cli
mov
popf
mov
fstpt
mov
andl
das
dec
pop
jp
mov
pushf
roll
xor
jno
in
pop
loopne
pop
mov
fninit
insl
iret
mov
mov
mov
ficomps
repnz
add
orl
mov
imul
xor
outsl
cmpsl
dec
out
mov
fcompl
sub
sbbb
adc
fisttpl
into
push
call
cltd
cmp
test
popa
mov
loop
sub
je
orb
lods
pop
inc
std
pop
subl
push
mov
nop
sahf
lret
movsb
inc
bound
data16
stc
add
jge
idivl
clc
add
js
pushf
sarl
adc
ja
sbb
scas
je
pop
jns
xlat
xchg
outsl
idivb
fldt
jno
jge
mov
mov
jae
lea
push
lret
xorb
push
xchg
bound
cmp
je
pop
cltd
in
or
aad
jge
popl
sbb
inc
inc
mov
mov
data16
jle
ljmp
movsl
int3
loopne
mov
add
cmp
inc
loop
sub
xchg
repz
and
pop
jmp
std
sbb
or
cli
mov
xchg
adc
xor
dec
sub
sbb
cld
lock
adc
lods
in
in
dec
add
outsb
daa
ds
dec
push
inc
imul
testb
fs
cli
mov
mov
rorb
orb
div
clc
and
mov
addb
push
jl
xorb
in
stos
loopne
jle
adc
mov
jl
ret
adc
dec
mov
mov
test
movsb
cltd
fdivr
adc
cld
jno
ljmp
mov
add
cli
inc
mov
push
jge
sti
jecxz
in
js
mov
ljmp
lahf
ss
addl
pop
js
or
aas
mov
lock
and
xor
mov
adc
into
mov
fiaddl
inc
movl
dec
jns
mov
mov
pushf
insl
dec
mov
imul
mov
pop
xchg
fsubl
pushf
push
add
addr16
or
aas
out
xor
testb
jp
lret
lret
xor
test
and
shrl
jns
sbb
cmpsl
iret
adc
mov
cld
cmp
fidivrs
mov
pop
mov
lcall
sub
push
addr16
jo
bound
sbb
mov
jae
dec
scas
sub
cwtl
rcrl
pop
repz
adc
fisttpl
daa
gs
ds
pop
fbstp
dec
sbb
add
scas
or
push
inc
mov
jae
popa
push
mov
xor
ds
push
pop
sub
fs
dec
outsl
hlt
inc
aas
jnp
and
xchg
mov
mov
in
sub
xchg
push
out
mov
mov
xchg
or
repz
rcrb
mov
cmc
add
cmc
hlt
insl
rorl
pushf
mov
addb
push
das
mov
and
sub
pop
xchg
sbb
insb
cmp
add
push
repz
mov
pop
outsb
sbb
pop
pop
lock
pop
subb
mov
lcall
xor
dec
jbe
or
enter
pusha
call
sub
push
scas
push
adc
lcall
and
sbbl
cmpl
push
ja
jp
jo
jno
popf
push
cmp
movsl
ds
pop
and
mov
out
sbb
aas
dec
je
cmovle
cmp
adc
adc
mov
and
mov
repnz
out
adc
sti
cmpl
jg
not
mov
out
and
sti
push
pop
je
arpl
or
das
add
inc
or
sbb
push
xchg
or
pop
pop
cmp
mov
jb
mov
stos
sub
xor
jmp
fs
lret
sbb
enter
add
or
jle
fnstenv
cltd
stc
addr16
or
xchg
mov
jecxz
add
movsl
and
mov
or
xchg
push
pop
jns
fcompl
div
or
push
hlt
and
ja
aam
lock
roll
addr16
push
int
and
mov
mov
and
dec
push
hlt
popf
cs
cmp
sarb
fwait
icebp
or
in
push
cld
adc
in
lock
dec
adc
cmpb
cli
call
into
inc
mov
mov
sub
clc
mov
out
mov
lcall
push
jb
out
push
int
cs
pushf
loope
and
call
sub
mov
jno,pt
jmp
jo
and
sbb
mov
mov
jae
outsl
mov
jne
jnp
orb
jb
push
imul
aaa
sahf
fcoms
and
and
dec
scas
cld
push
out
lcall
aaa
pop
jmp
push
jl
imul
pushf
xchg
inc
sbb
add
sbb
mov
pop
mov
xor
xor
int3
and
dec
cli
aad
das
hlt
mov
into
add
insb
shl
nop
inc
mov
pusha
loop
xchg
dec
dec
mov
in
popf
leave
mov
inc
cwtl
enter
pop
jmp
divb
and
sub
sbb
test
inc
dec
mov
pop
cltd
jne
int3
lret
dec
cmc
cli
enter
cld
iret
cmp
jbe
in
fs
in
mov
jbe
js
decl
cltd
in
shrl
mov
sar
xchg
push
ret
mov
into
repz
loop
stos
ss
push
jnp
mov
dec
mov
jle
hlt
fstpt
aas
mov
adc
mov
fwait
jo
and
sbb
push
js
mov
rcrl
sbb
not
xchg
test
mov
ficomps
jns
jp
movsb
mov
inc
and
xchg
mov
movsb
mov
jg
xchg
and
push
jbe
cli
xor
sbb
xor
loope
cmpsb
js
pop
xchg
mov
rcrl
mov
rorl
out
sbb
in
or
test
aaa
add
mov
xchg
out
sub
mov
fisubrl
cmp
dec
and
sbb
jp
js
sbb
xor
adc
shr
mov
push
push
arpl
push
adc
jno
cmp
pop
aad
cs
jno
inc
cs
mov
add
mov
insb
inc
jp
jb
inc
adc
subl
sbb
sbb
mov
out
pop
aas
adc
aad
jne
ret
pusha
or
mov
push
jns
lods
mov
sub
imulb
push
dec
xor
push
fistps
or
adc
loop
stos
mov
xor
pop
les
out
xor
icebp
jbe
fidivs
or
nop
sbb
jb
mov
repnz
mov
mov
addr16
lods
repz
push
push
repz
push
xor
mov
lds
into
cld
push
icebp
inc
rcrb
inc
jle
push
dec
push
push
dec
fs
or
jb
mov
mov
loopne
test
pop
xor
cltd
add
jle
popa
sub
stos
loopne
mov
or
xor
lds
mov
add
push
pop
jp
dec
inc
out
imul
in
dec
xorb
inc
xchg
pusha
fcomp
aaa
inc
test
xchg
stos
jp
push
jne
stos
repz
sub
push
sbb
cmp
dec
shrb
mov
cmp
add
sub
sti
outsb
loop
dec
ret
es
xchg
les
mov
js
ja
inc
push
jnp
mov
xchg
adc
dec
push
rclb
mov
icebp
das
pop
jb
jg
xor
push
movsb
jne
sbb
cmc
leave
push
jle
call
mov
add
xor
cmc
jge
mov
fcoml
gs
inc
push
push
cli
cmp
inc
cmpsb
inc
int3
xor
out
icebp
sar
lds
pop
pop
xor
sarb
shlb
cmpsl
adc
int3
idivb
push
xor
xchg
push
xor
jns
xchg
es
lds
fidivl
arpl
xchg
pop
sarl
imul
sbb
lahf
xchg
jno
insb
or
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
lea
sub
addl
adc
sbb
jb
and
mov
add
inc
rcl
out
pusha
xor
xchg
fstpl
popf
xchg
push
cmp
xchg
movsb
xlat
mov
mov
inc
jg
ret
cmpsb
xchg
xor
dec
dec
dec
aaa
dec
fwait
pop
out
jmp
add
bound
or
cmp
sahf
in
loop
aaa
shl
dec
sub
jg
aad
fxch
test
jle
sbb
fs
loopne
mov
push
test
xor
push
xor
in
mov
mov
lret
call
and
cltd
xchg
jnp
inc
add
cltd
inc
xor
insb
mov
cmp
cmp
xchg
test
insl
fbstp
jae
and
jecxz
cmp
jnp
test
rcll
push
int
xchg
lods
stos
and
sub
hlt
sbb
mov
cmp
js
push
mov
xor
jnp
cmp
cld
or
loopnew
cmpb
cmp
mov
jmp
inc
cli
mov
mov
mov
nop
push
xlat
es
or
fmul
and
adc
pop
rorb
add
aad
cmp
jo
push
lcall
rorl
jbe
hlt
push
cmp
xchg
dec
sbb
pusha
ret
cwtl
rcll
cwtl
lods
mov
mov
rclb
mov
outsl
sbb
cwtl
idivl
lret
mov
iret
push
inc
push
and
int
test
rolb
push
jge
out
push
cltd
cmp
sahf
nop
lock
pop
repnz
xor
loopne
cmp
repz
xor
test
and
sbb
xchg
and
stos
sbb
and
inc
ja
cmp
jecxz
jg
jno
insl
mov
dec
out
sbbl
and
cmc
mov
jge
mov
and
imul
js
pop
ja
push
push
mov
js
cmpsb
or
and
ret
sub
inc
orb
test
xlat
mov
add
mov
int3
test
mov
sub
dec
xchg
pop
enter
int3
sbb
and
inc
sbb
mov
xor
ja
pushf
inc
sub
js
cmp
jns
jae
aaa
ljmp
je
xchg
dec
leave
fsubrl
mov
sbb
jne
clc
or
dec
hlt
icebp
add
pop
lcall
xchg
or
inc
pop
push
aaa
repnz
sub
daa
jge
cwtl
int
enter
leave
repz
enter
push
mov
inc
push
mov
fsubs
adc
aas
lea
push
inc
fs
inc
mov
dec
idivl
adc
inc
mov
in
and
push
sub
stos
pop
adc
xchg
mov
jmp
dec
pop
stos
pop
aas
or
jle
dec
mov
test
aaa
and
pop
mov
jg
jp
outsb
std
mov
pop
push
mov
push
cld
pop
arpl
sub
into
shlb
lock
jecxz
push
pusha
adc
push
addl
push
loopne
xorb
sub
popa
mov
pop
jl
add
leave
fcomps
dec
aam
fists
xchg
std
lret
pushf
cmp
arpl
mov
rcrb
hlt
jno
inc
and
daa
lods
mov
pop
icebp
test
int3
adc
stc
std
cs
lret
xchg
and
mov
dec
fdivl
inc
cli
ret
hlt
push
loopne
fs
mov
gs
loope
aam
inc
ret
cmp
cmp
xchg
mov
add
inc
cmp
jns
push
push
or
sub
sub
aas
aad
pop
outsl
aad
pop
adc
addl
clc
dec
sbb
inc
leave
jne
sbb
lock
mov
popa
flds
aaa
sbb
adc
imul
int3
xchg
outsb
sub
test
or
mov
cmp
fdivp
pop
out
out
mov
dec
cmpsb
ret
sbb
dec
push
ds
xor
lock
lcall
pop
repz
in
mov
aam
ja
ret
mov
push
test
bound
repz
lds
jb
icebp
mov
ret
push
lods
mov
nop
cmp
fnsave
sbb
lret
loop
pop
mov
xchg
cmpsl
xchg
cld
dec
push
mov
stos
mov
scas
cmp
fwait
or
cmpsb
jne
xchg
fildl
in
pop
cmp
clc
fsubrs
pop
jne
leave
out
pop
hlt
jg
loope
pop
dec
pusha
cmp
xchg
inc
rorb
cs
jle
scas
pop
inc
mov
fwait
repz
and
jne
int
leave
decb
mov
lock
mov
or
add
and
pop
in
jne
or
fwait
sub
fsubl
xchg
pop
or
mov
xchg
flds
mov
mov
lret
call
lahf
xorb
popf
lods
xchg
sbb
stos
in
aad
mov
inc
mov
ljmp
ljmp
jne
xor
gs
inc
mulb
shrl
fxtract
jb
inc
inc
pushf
mov
outsb
mov
insl
mov
fsts
add
ss
sub
fs
xchg
std
xor
or
cmp
ss
mov
iret
icebp
add
pop
jmp
mov
jns
es
mov
xchg
or
faddp
adc
mov
mov
push
sub
cmp
sbb
sub
jg
adc
dec
mov
and
in
inc
clc
pop
and
nop
push
xchg
loope
lret
call
aam
mov
jo
add
outsb
imull
pop
out
push
es
jg
jns
repnz
push
addr16
mov
out
notb
ficompl
sub
xchg
movsl
jmp
xor
jnp
push
shll
sub
outsl
dec
loope
test
and
icebp
pop
pop
lods
aas
cmpl
or
push
pop
mov
xchg
inc
or
pop
out
rolb
scas
int
inc
jl
aam
mov
dec
cmc
pusha
lock
notb
pop
fxch
int3
xchg
push
ja
pop
pop
data16
add
jg
and
xor
pop
cli
loop
inc
sbb
dec
sub
mov
pop
inc
ror
arpl
lcall
xor
and
jns
xor
mov
cltd
adc
leave
jge
movsl
xchg
inc
push
jmp
fdivrs
jmp
jmp
adc
add
xchg
movsb
mov
sub
push
popf
mov
sub
push
push
mov
stc
xor
xor
mov
jae
adc
fstpl
arpl
add
popf
imul
dec
outsl
mov
xor
sbb
inc
cmp
sbb
negb
xorl
mov
pop
or
sub
sbb
push
jg
fxch
cmpsl
pop
jbe
negl
xor
lods
xchg
insl
mov
inc
nop
and
add
ret
pop
sbb
xchg
testl
pushf
mov
sbb
ffree
popf
push
imul
push
jcxz
jns
into
stc
push
push
pop
jecxz
lock
dec
lret
mov
and
out
stos
pop
loopne
cli
sub
jmp
out
cltd
lret
mov
imul
add
fsub
sti
push
cltd
aaa
fwait
ret
into
cmp
mov
sar
jmp
shlb
int
xchg
pop
sahf
jmp
in
es
inc
cmc
in
inc
mov
inc
dec
in
ds
into
cmp
push
xchg
mov
gs
data16
xchg
fadds
inc
sub
cmp
enter
pop
mov
or
mov
js
sbb
push
repnz
test
mov
jge
rcl
imul
gs
lret
clc
movsb
mov
flds
movsl
xor
clc
mov
and
jmp
mov
mov
xchg
sub
pop
add
jae
push
in
popa
mov
mov
jns
xor
mov
ret
hlt
mov
add
mov
inc
inc
rorb
addr16
lods
imul
out
cmp
mov
test
ja
mov
test
push
add
inc
das
out
stc
ficoms
in
imul
not
jbe
push
cmp
jb
cmpsl
repz
sahf
shrb
or
xchg
fidivrs
out
add
popf
sbb
xor
lcall
loop
loop
ss
shrb
addb
adc
lods
mov
inc
shl
push
gs
dec
jmp
sbb
sbb
push
or
push
sub
cli
sbb
pop
rcrl
pusha
lods
jb
push
fstpt
aas
xchg
lea
dec
in
mov
or
add
pop
jp
in
test
sti
jno
lods
dec
adc
int3
adc
mov
xchg
mov
cmp
rolb
mov
jnp
xchg
shlb
mov
jge
stos
pop
pop
mov
inc
cmc
push
adc
add
sub
fsubl
ss
loop
clc
pop
outsl
push
lret
sub
xchg
jle
jnp
lods
lcall
mov
test
push
add
xor
push
jns
adc
sub
in
mov
xchg
pop
cli
sbb
scas
test
ret
jbe
xchg
cmc
imul
out
push
shll
rcr
sahf
jl
mov
dec
movsl
arpl
inc
push
xor
enter
and
jmp
test
or
out
js
mov
pop
sbb
sub
loop
sbb
sbb
fistps
imul
gs
dec
push
push
loope
cs
xchg
mov
cmp
push
icebp
cli
cli
xchg
cs
int
adc
mov
ror
jl
fldl
mov
dec
sub
mov
lock
mov
ret
shl
insl
nop
dec
push
adc
arpl
ret
imul
iret
ja
lods
sub
jle
add
adc
cmp
pop
xlat
jnp
imul
xchg
or
push
push
cwtl
mov
adc
pop
call
outsl
cli
xchg
and
cmp
pop
popa
scas
xchg
std
icebp
jbe
xlat
nop
test
sub
sub
outsb
xchg
pusha
out
inc
clc
pop
and
test
aam
sti
aas
hlt
out
pushf
loope
push
out
call
sets
sbb
enter
ds
mov
js
fistl
fnstenv
fistpll
out
idivw
inc
adc
push
adc
cmp
in
adc
leave
xchg
cld
jp
adc
pop
mov
ljmp
dec
and
mov
xchg
mov
mov
and
rolb
dec
sub
cwtl
pop
add
loope
sbb
popa
push
mov
mov
and
sti
cmp
inc
loope
repz
nop
sub
sub
xor
rclb
outsl
pop
sti
ss
mov
pop
inc
adc
test
and
cmp
roll
dec
int
lods
jbe
clc
sub
push
mov
mov
sbb
add
mov
mov
sub
iret
sbb
add
stos
rclb
mov
push
lahf
test
sub
test
jae
mov
add
and
mov
mov
mov
aad
bound
fcomps
lods
jp
mov
sbb
cld
add
or
dec
cmp
test
not
dec
adc
and
xlat
imul
pop
fstl
xchg
dec
push
adc
test
rcrb
sar
int
mov
rcrb
pop
loop
dec
loop
lds
and
jo
loopne
mov
ret
sub
xchg
fldcw
out
inc
stos
ss
out
mov
xchg
js
xorl
sahf
rcrb
add
lds
xor
leave
les
int
ds
jle
stc
inc
pop
fadds
inc
push
or
jle
test
nop
mov
pop
addl
leave
sub
cmp
mov
or
adc
inc
scas
inc
decb
xchg
mov
sub
into
in
loope
or
imul
gs
les
stos
sub
add
push
imul
xlat
stos
dec
push
daa
aam
insb
xchg
imul
sub
stc
push
sbbb
xchg
clc
out
cld
movsb
jl
push
jns
call
mov
ds
sub
cmp
or
pop
dec
movsl
data16
hlt
adc
add
shrb
lds
test
test
xchg
in
and
jl
mov
lods
sbb
xchg
test
pop
xor
jo
or
jg
cltd
arpl
loopne
mov
push
and
clc
mov
pushl
scas
in
adc
or
lret
or
cmp
xor
int
test
gs
addr16
mov
fwait
push
fstpl
lret
mov
jns
stos
push
xchg
inc
dec
sbb
xchg
mov
dec
bound
daa
repz
enter
sub
adc
lret
jmp
rolb
pop
xor
or
int3
sbb
xchg
outsb
mov
mov
adc
and
aaa
cwtl
mov
or
test
dec
jecxz
sub
mov
and
lea
int
sahf
daa
cmp
hlt
aaa
shrl
cwtl
inc
arpl
ljmp
mov
loop
cmp
xor
xor
inc
or
pop
mov
add
out
out
into
jo
mull
pop
clc
sub
jb
lcall
pop
lret
xor
sahf
mov
sub
push
add
mov
sub
in
lds
mov
pop
call
push
fistpll
lcall
push
push
cmp
movsb
pop
das
inc
or
jbe
ds
jo
mov
test
lahf
int3
mov
fsub
test
push
adc
andl
out
pusha
xchg
aad
lock
pusha
shl
or
pop
jne
subl
xor
xchg
pop
insb
jnp
xchg
daa
lea
test
mov
lods
in
or
test
imul
mov
insb
stos
int
and
pop
jge
es
xchg
aam
dec
cmp
lods
andl
fstpl
aas
mov
jg
fistpl
repnz
ret
mov
inc
aam
mov
sbb
sbb
fildl
leave
sub
push
out
mov
out
sbb
dec
inc
adc
xor
shl
mov
subl
outsb
bnd
adc
faddp
das
xchg
sarl
cmc
jmp
pop
mov
and
cli
insb
outsl
stos
out
xor
enter
mov
insl
mov
fdivrl
clc
mul
mov
adc
movsb
pop
hlt
mov
dec
lret
adc
shll
shll
cmp
aaa
and
in
sub
xchg
xchg
aas
into
dec
test
notl
js
cmp
loope
dec
rcrl
outsb
xlat
clc
push
mov
loope
out
dec
sub
loopne
cli
add
imul
sub
mov
ret
pop
in
lods
clc
mov
mov
and
jecxz
leave
sub
adc
ret
pop
lea
jnp
scas
loopne
es
ja
pop
push
hlt
ljmp
mov
out
dec
loopne
sbb
test
pusha
popf
dec
les
and
push
sub
in
sar
inc
inc
sub
imul
push
iret
push
in
mov
mov
outsb
mov
sbb
mov
mov
jge
cmp
mov
mov
adc
mov
and
cmp
add
movsb
add
aas
pusha
dec
push
jno
mov
cli
cmpsl
fs
cmpl
cmp
xchg
inc
fwait
mov
addr16
sub
pop
dec
xchg
jns
push
xor
stc
push
mov
inc
repz
cwtl
les
imul
mov
shll
add
xorl
jbe
idivb
in
mov
cmpsb
mov
pop
cld
sub
mov
push
int
shrl
aad
add
iret
sar
cmp
popa
mov
cmpsl
test
dec
sub
mov
mov
sub
or
jo
lock
jecxz
jmp
test
jp
sbb
gs
mov
cmp
test
inc
ss
cs
iret
cs
cmpsl
insl
bswap
addr16
sahf
daa
mov
rcll
jmp
sarb
pop
hlt
stc
xor
ja
lock
and
push
ljmp
outsl
mov
lret
cs
mov
and
sub
mov
shlb
jecxz
mov
iret
outsl
stos
xor
jge
mov
inc
xor
jmp
adc
or
mov
in
sub
mull
vpsubusb
movaps
scas
sbb
mov
aad
imul
stos
cmp
mov
mov
push
pushf
push
es
gs
ljmp
sub
mov
std
cmp
push
stos
and
dec
mov
insl
sarl
shrl
mov
push
mov
adc
xlat
lahf
ffree
cltd
pop
movsl
pop
xchg
aad
or
jno
sbb
pushl
adc
pop
dec
out
movsb
sub
shr
cmp
jge
inc
aaa
outsl
mov
shlb
fiadds
sbb
repz
hlt
in
inc
andl
mov
les
sub
imul
inc
sub
dec
into
xor
ret
mov
lock
test
push
mov
pinsrw
push
lcall
hlt
dec
sub
dec
lcall
loop
rolb
jmp
xor
cmp
imul
sahf
sbb
out
xchg
iret
push
sub
insl
mov
out
jne
xchg
es
out
arpl
mov
lret
mov
xchg
mov
fnstenv
and
mov
movsl
in
cmp
inc
add
imul
lds
in
mov
iret
mov
iret
sahf
rcrl
mov
faddl
mov
xchg
cmp
bound
xor
mov
add
in
jbe
pop
aaa
add
fmul
sbb
cltd
nop
jge
lea
dec
xor
sti
shlb
cmpb
hlt
test
mov
xor
not
push
stos
and
inc
push
scas
mov
mov
shr
test
jo
add
in
aad
mov
adc
in
pop
xchg
sti
stos
movsl
data16
aaa
fsubp
inc
stc
addr16
sbb
pop
mov
mov
pop
loope
fstps
dec
std
pop
pop
inc
in
jb
cmp
cli
lds
xchg
xor
test
stc
push
adc
pop
pushf
cld
fcomps
xor
outsb
mov
inc
fs
xchg
jle
cmp
xor
pop
and
xchg
shrb
popa
push
pusha
cmp
std
pop
dec
dec
movsb
rcrb
mov
iret
pop
shrb
sbb
shrl
adc
jbe
sbb
outsb
stos
adcl
aad
leave
and
xchg
push
lret
mov
xchg
lods
in
add
mov
cmp
movsl
lock
shlb
dec
inc
fldl
cmp
push
out
cli
gs
lds
xchg
sbbl
push
test
cmpsl
dec
sbb
lds
data16
adc
cld
or
imul
icebp
xor
negl
xor
add
push
jg
lods
je
push
pushf
data16
inc
jg
xchg
inc
imul
mov
lahf
fsubr
mov
pop
addr16
nop
aaa
sub
sahf
hlt
and
movsl
mov
addps
test
xlat
prefetch
cmpsl
sahf
hlt
push
lret
jge
sbb
imul
mov
xchg
pop
or
int3
inc
dec
shll
pop
jb
fisttps
fbstp
jmp
jb
jno
stc
gs
in
out
mov
scas
data16
add
adc
movsl
jno
pusha
inc
jg
xchg
out
mov
adc
popa
lods
pop
cmp
mov
inc
jne
movsb
nop
sbb
dec
aas
in
jmp
sub
jl
pusha
subl
out
fmul
add
jge
in
mov
inc
das
and
pushf
into
cltd
out
push
dec
add
dec
imul
jmp
incb
pop
int
int3
fidivs
mov
push
xor
jns
outsb
in
aam
dec
popf
out
adc
mov
cld
cwtl
lea
mov
mov
ds
sub
inc
cmpsb
and
stc
mov
jge
int3
call
out
pop
or
or
pop
fbstp
add
enter
insb
cld
nop
loopne
shll
lock
push
ds
pop
cwtl
inc
jbe
insb
pop
sti
cmc
lret
stc
inc
dec
test
mov
and
push
inc
xor
movsb
mov
inc
insb
inc
or
out
addl
fcoms
sbb
xchg
jo
aad
xlat
pop
out
std
mov
sarb
rcrl
mov
cmp
push
mov
sbb
mov
adc
leave
mov
cmp
jb
scas
pop
sahf
into
pushf
fistl
or
pop
push
pop
sbb
cmp
push
inc
rcll
fisubl
add
mov
dec
rcl
lock
jns
pop
xchg
outsl
lcallw
mov
lock
cld
int
push
jle
mov
and
ret
cmp
mov
sbb
stos
iret
test
or
std
add
mov
and
cmp
das
jae
jp
cltd
cmpsl
clc
in
cld
stos
mov
inc
push
lds
mov
addr16
testl
mov
xchg
cmc
adcl
icebp
ret
lods
push
out
incl
mov
xchg
mov
and
or
xor
jns
or
add
cmp
inc
movb
jo
lret
pop
mov
and
jp
sbb
mov
jl
adc
cmp
mov
out
cmp
test
ds
adc
daa
adcl
xorl
test
into
pop
xchg
cs
pop
lea
call
sub
out
sub
bound
lods
inc
scas
packsswb
mov
mov
cmp
fimuls
xchg
fisubrl
sub
add
jb
fimull
addr16
enter
inc
enter
mov
insl
sbb
cmp
add
pop
outsl
pop
cld
lret
clc
jg
test
xchg
inc
lds
cmp
je
jl
aaa
xchg
out
xor
das
das
and
jmp
rolb
lods
cmpsb
or
inc
and
push
addl
pop
cmp
fists
mov
inc
mov
adc
mov
fxch
add
divb
cmp
aas
or
in
dec
or
mov
into
dec
lods
ret
mov
lds
lret
inc
mov
repnz
rep
aam
iret
dec
out
push
jnp
repz
inc
pop
sub
xor
loop
add
xchg
add
mov
call
xor
imul
xchg
or
mov
inc
stos
psubd
insl
dec
or
mov
xchg
cmp
fimuls
xor
mov
mov
push
jp
ljmp
cmp
popf
fisttps
and
inc
sub
xor
daa
into
cmp
xchg
rcrb
pop
loop
xchg
mov
jg
add
mov
bswap
add
imul
push
sub
rcr
jmp
xchg
jbe
add
pop
xorl
cmc
nop
in
shlb
icebp
sub
rcll
inc
cmp
scas
sbb
call
icebp
and
mov
movsl
in
jg
sub
das
xchg
push
shlb
sbb
ljmp
popa
adc
outsl
sub
test
lcall
xchg
ja
xchg
jg
loop
jge
into
int3
xor
jmp
movsb
push
pop
jnp
jns
es
cmpsl
pop
jmp
roll
in
jmp
ret
mov
cli
out
fidivl
fiadds
out
mov
adc
leave
sahf
fisubl
iret
rcl
push
mov
or
push
adc
pop
sub
or
shlb
addr16
mov
jge
jl
jecxz
imul
xlat
sti
xor
push
xor
mov
adc
leave
add
sbbb
fbstp
out
aas
int
jbe
jmp
jo
rcrl
jne
dec
jno
dec
inc
or
inc
popa
xor
ror
mov
mov
dec
popf
test
addr16
push
jecxz
push
cmp
and
sub
add
scas
mov
jg
cmp
sbb
mov
sbb
dec
std
pop
test
es
mov
insb
mov
cmp
call
xor
inc
adc
insb
lcall
ljmp
insb
jne
xchg
xor
cmp
lods
mov
pushf
sbbb
and
mov
loopne
fs
loopne
mov
xchg
fldenv
outsb
ror
sarb
mov
push
addr16
in
xchg
push
sub
les
jmp
sbb
sub
jo
cmp
cltd
sbb
jmp
or
and
lret
push
outsb
inc
shl
subb
loope
xchg
rol
repz
pusha
mov
das
or
fnsave
shrb
pop
imul
push
loop
je
pop
pop
rol
inc
mov
popa
cmp
xchg
inc
movsb
das
inc
mov
clc
or
repnz
add
aad
sub
faddl
jb
or
fildll
xchg
xchg
push
pop
out
aas
fcomps
lcall
mov
aaa
popl
xor
bound
cmp
scas
mov
out
cmp
aad
mov
cwtl
pusha
fists
xchg
scas
push
inc
push
in
mov
iret
inc
xor
xor
out
test
sub
stos
jp
pop
ret
daa
lcall
repz
aas
mull
sub
dec
cli
push
int
les
test
test
push
push
push
mov
add
pop
icebp
dec
mov
pop
push
das
lods
and
lods
add
xchg
test
pop
clc
std
fdivrs
es
test
and
push
or
iret
push
jne
dec
gs
scas
cltd
and
mov
rcrl
pop
scas
loopne
enter
imul
jne
sub
test
fsubrp
pop
aaa
xor
xchg
pop
pop
fwait
imul
repz
mov
loopne
lock
add
inc
popa
rorl
or
push
mov
mov
std
lods
mov
sbb
push
std
clc
sbb
adcl
jne
push
gs
sbbb
sti
push
lds
push
aad
andl
mov
rclb
mov
mov
test
cmc
and
dec
scas
dec
or
jl
mov
cmpsb
sbb
ja
cmpsb
cmp
inc
pusha
jle
lock
push
mov
mov
pop
scas
lods
pop
jge
les
pop
add
dec
sub
movsl
lea
out
jecxz
leave
push
pop
add
js
xor
lahf
outsb
push
mov
into
rcr
bound
mov
rcl
out
lods
mov
dec
mov
jmp
scas
divb
orb
xor
jmp
fisubs
and
mov
and
xchg
jp
add
test
popa
or
xchg
mov
inc
test
rolb
ljmp
xchg
ficoml
hlt
imul
cmp
mov
mov
and
or
cmc
mov
mov
je
gs
sbb
push
hlt
push
jnp
pop
or
js
notl
mov
aad
sbb
jp
lock
fcompl
fwait
add
ret
xor
adc
mov
loop
cmpsb
fldcw
mov
jge
inc
mov
adc
pop
mov
pop
jno
add
popf
mov
lods
mov
fadds
mov
in
out
test
mov
adc
xchg
or
outsl
out
ret
and
or
mov
int3
push
xchg
push
hlt
ret
cmp
sub
push
sub
xchg
pop
shl
popa
push
ja
loope
jmp
dec
mov
lret
fldl
ficoms
push
xorb
mov
lret
jo
sbb
inc
add
sti
cmpsl
js
fldcw
pop
or
sub
mov
fnstsw
or
push
xor
pop
dec
mov
scas
add
or
adc
and
inc
pop
xchg
mov
int3
out
mov
lcall
xchg
scas
pop
mov
or
popa
mov
dec
mov
push
xor
jl
sub
int3
xor
movq
mov
dec
out
mov
movsb
xchg
cwtl
movsb
sar
repz
lods
insb
and
mov
sub
in
loop
in
xchg
push
out
outsb
pushf
mov
fsubs
xchg
notb
add
cmpsb
mov
jb
leave
xchg
push
mov
jb
dec
xlat
add
add
jno
fmull
jmp
or
pop
or
xchg
lret
adc
ja
inc
push
in
push
xchg
mov
adc
cmp
mov
enter
add
mov
sbb
and
divb
sub
cld
rorb
dec
push
push
push
adc
inc
jne
movl
in
lods
sbb
jl
dec
pop
fiaddl
arpl
outsb
test
test
ret
dec
inc
stos
lahf
xchg
mov
pop
js
add
jae
fbstp
sub
notl
add
popf
fwait
dec
imul
push
sbb
mov
repz
inc
cs
jno
mul
rcl
cmp
xchg
pop
out
int
daa
in
cwtl
cltd
rolb
loopne
mov
jle
addb
xor
push
imul
iret
lods
jo
xorb
enter
sahf
jb
mov
or
add
jno
lea
cmp
aad
xor
xor
pusha
xor
lcall
xchg
hlt
mov
aaa
inc
mov
jns
mov
mov
inc
arpl
repnz
sub
fcmovb
and
inc
sahf
lods
mov
pop
pop
loope
mov
xlat
aaa
mov
or
dec
sub
dec
xor
adc
test
shlb
jle
and
shlb
shr
icebp
xlat
xor
daa
cld
outsb
mov
sbb
or
cmp
das
pop
ret
subl
add
into
int
out
lds
xchg
sahf
shrd
inc
lcall
add
loope
cmpsl
outsl
scas
jmp
iret
mov
nop
enter
enter
cltd
push
mov
hlt
cli
adc
cmpsb
mov
nop
or
mov
or
in
sub
mov
xchg
pop
and
and
adc
dec
jecxz
cld
pusha
mov
daa
push
in
pop
adc
push
lcall
shr
ret
inc
imul
mov
inc
sarb
xor
fldl
mov
insb
in
pop
add
jb
loop
aam
and
push
mov
inc
jecxz
pusha
lods
jo
jnp
testl
cmc
cmp
lds
cmpsl
jl
std
data16
jnp
inc
cmp
xchg
scas
xor
test
cmp
inc
jg
out
mov
push
mov
test
push
int
ds
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
testb
sub
addl
mov
call
xlat
dec
aaa
pop
or
cmpsb
xchg
mov
pushf
fdivrs
inc
popf
sahf
fiadds
cwtl
aad
lds
fnstcw
add
cmp
ljmp
ficoml
add
shrl
and
jae
cld
js
mov
clc
loopne
aam
push
js
or
repnz
mov
sbb
fwait
out
cmp
cmpsb
cmp
add
loopne
sbbl
add
xor
scas
xor
leave
mov
in
mov
pop
insb
loope
enter
adc
mov
test
mov
and
add
lock
out
pop
mov
outsb
movsb
jl
inc
mov
je
xchg
fidivs
lret
push
rorb
xor
inc
icebp
xchg
scas
movsl
xor
xchg
xor
mov
jno
faddp
mov
ds
ficompl
ljmp
movsl
aad
cmp
pop
mov
xor
out
in
les
dec
popf
lock
mov
jecxz
scas
sti
mov
sub
mov
mov
fstl
push
push
in
add
jns
add
xor
test
hlt
call
adc
xlat
bound
les
xchg
repz
ret
movsl
fadds
fldl
rorl
out
inc
jns
scas
adc
push
je
outsl
and
or
inc
iret
add
cltd
imul
pop
ret
push
outsb
sub
sbb
imul
push
out
fs
stc
sub
sbb
aas
insb
push
inc
ds
lahf
or
or
cmpsb
inc
dec
xor
lea
int3
dec
pop
shlb
sub
and
les
addr16
loopne
mov
outsl
out
shlb
pop
aad
fwait
out
jl
add
stc
in
push
lods
aam
icebp
aaa
cltd
fwait
and
scas
jmp
pop
scas
mov
sarb
dec
jg
movl
clc
or
lods
insl
icebp
orl
loopne
push
nop
xchg
dec
lea
cmp
dec
push
test
fnsetpm(287
test
nop
mov
lock
loop
popl
out
cmp
mov
and
movsl
lret
mov
sbb
mov
jmp
pop
leave
aam
sub
imul
iret
std
das
dec
cmp
enter
divb
adc
mov
ret
aam
nop
mov
repz
cmp
and
lods
push
stos
cwtl
mov
sbb
add
dec
inc
adc
adc
fdiv
mov
int3
push
inc
mov
jno
jo
xchg
cwtl
cmpsb
scas
xchg
xchg
cmpsb
sbb
sbb
incb
sbb
xchg
lea
xchg
jle
or
add
lods
sti
xor
and
enter
push
ljmp
xchg
add
xchg
and
fimull
leave
shlb
inc
in
pusha
inc
popf
cmpsl
or
rcrl
xor
loop
popa
inc
xor
add
sahf
out
jo
jl
mov
inc
add
popf
lock
jge
in
sub
mov
test
add
jge
das
popa
lret
mov
aas
jmp
cld
repz
mov
xor
nop
jbe
adc
mov
mov
ret
out
mov
dec
mov
shrl
cld
fs
cmp
add
cmp
and
outsl
sub
mov
filds
sbb
dec
in
out
cld
frstor
lock
push
fiaddl
pop
stc
sbb
or
and
negb
fcoml
lcall
fwait
or
mov
movb
dec
mov
outsl
adc
inc
adc
mov
in
es
dec
xor
daa
fstpl
dec
in
dec
pop
xchg
mov
adcb
cmp
ret
in
jp
push
hlt
inc
cmc
mov
scas
rcll
dec
jne
sbb
imul
ficoms
dec
ror
push
cli
stc
and
xor
data16
add
mov
adc
xor
mov
mov
and
and
cmc
mov
lahf
sub
xchg
or
xor
out
testb
sbb
imul
fucomp
push
in
add
jge
je
ret
xchg
imul
add
cmp
mov
jbe
or
sahf
fstp
scas
mov
ja
cltd
fistpl
ficomps
sbb
dec
insb
sbb
xchg
out
fisttpll
cmpsl
in
pop
dec
leave
loop
movsl
jg
mov
xchg
xchg
stos
jl
xchg
xchg
or
adc
cmp
adc
jmp
jno
gs
ja
enter
push
jns
clc
data16
nop
stos
leave
mov
inc
and
int
ljmp
jge
xor
sub
rorb
cmp
add
mov
hlt
xor
aad
mov
daa
xor
sub
cmc
sbbl
dec
es
subb
call
sbb
es
pop
push
out
mov
xor
sub
sub
adc
mov
fdivr
cmp
mov
out
cmp
pop
cmpsb
outsb
daa
mov
cld
out
gs
ficoms
mov
inc
fucom
rcrl
daa
add
push
enter
pop
sahf
test
push
ret
cs
cmc
and
int
into
addl
dec
mov
outsl
icebp
js
daa
xor
and
or
dec
xchg
push
mov
sbb
stos
and
orl
xchg
addr16
mov
lods
lcall
push
push
stos
sbb
es
mov
cmp
cwtl
sub
fists
cmpsl
push
ds
clc
push
mov
adc
push
and
addl
sahf
xlat
push
adc
xor
and
mov
clc
mov
inc
or
add
xchg
data16
nop
add
add
push
push
or
jns
push
inc
imul
call
jnp
cmp
in
inc
lret
and
das
mov
jo
push
pop
cmpsl
add
cli
repnz
insb
dec
jmp
into
sarl
aas
les
shrb
and
sub
push
cmc
jno
cld
fwait
xchg
mov
sub
jnp
mov
outsl
das
loop
addr16
test
mov
icebp
sub
or
and
out
and
xchg
pushf
stos
gs
lods
filds
push
pop
add
mov
push
xor
adc
and
fs
push
cmc
cmp
pop
mov
sub
xchg
push
fwait
mov
and
fdivrp
cmpsb
dec
mov
sbb
or
fdivl
jbe
cmp
int
stc
inc
cmp
std
adc
insl
and
mov
mov
adc
test
arpl
inc
faddl
mov
add
mov
out
mov
xchg
iret
pop
loop
xchg
xor
jne
es
add
ret
jp
mov
lods
dec
pop
call
add
inc
into
sub
mov
or
fsubl
inc
negl
and
jne
adc
pop
enter
adc
xlat
mov
fs
push
lret
dec
out
je
in
cwtl
rorl
mov
sub
dec
scas
fsts
int
cli
mov
xlat
mov
fsubs
addl
xor
mov
lea
mov
add
lods
xchg
sub
xchg
adc
jae
cmp
lahf
je
lock
add
mov
push
cli
jecxz
inc
cmpsl
jg
mov
sbb
out
sbb
and
bound
movsb
inc
sbb
call
int
bound
dec
popa
mov
test
push
push
fiadds
cmp
pop
jno
movsb
ret
les
adc
andb
pop
lods
arpl
xlat
sbb
test
jb
cmp
push
test
lea
dec
sarb
push
std
out
mov
xor
lcall
fdivrp
popf
mov
cmp
roll
bnd
cwtl
xlat
cwtl
test
and
jmp
sbb
ds
out
or
xchg
clc
dec
xor
popa
mov
popf
push
dec
cmp
dec
add
dec
sub
cmpsl
sahf
shlb
mov
sbb
inc
inc
test
loop
jae
xchg
jecxz
push
cmc
js
mov
xchg
add
scas
shrb
lret
inc
xor
sub
push
jle
cmp
cs
cmp
in
cmp
xor
and
cld
stc
aaa
xchg
jae
jno
and
rcl
dec
cmp
imul
movb
pop
ss
or
popf
cmc
mov
mov
in
mov
xor
clc
jmp
out
pop
call
mov
add
xchg
adc
aad
pusha
xchg
aaa
mov
mov
xor
inc
in
insb
roll
test
lds
repnz
dec
inc
mov
stos
rcrl
outsl
xchg
xor
jbe
push
pop
push
mov
inc
lea
jg
sbb
mov
sbb
dec
push
jecxz
lods
out
lock
xchg
stc
mov
pop
je
inc
fcomip
cmp
pushf
sbb
ljmp
nop
xchg
pop
in
ret
mov
fsubs
in
push
sti
sub
addr16
flds
sbb
add
daa
test
and
popf
aad
les
cmp
jns
movsl
and
neg
pop
lret
jnp
sub
jb
xchg
mov
aas
push
push
mov
cltd
insb
test
xchg
pushf
jae
sub
cltd
add
in
scas
inc
out
lds
inc
mov
mov
lds
lds
call
mov
cmc
fninit
push
shlb
dec
movsl
dec
jl
mov
dec
jle
adc
add
test
xor
fldenv
add
inc
into
in
mov
ljmp
xlat
inc
vunpckhps
test
fisubrs
dec
out
lods
in
inc
jmp
inc
or
fldl
xchg
les
stc
cmp
jecxz
mov
repz
xchg
sbb
sub
mov
cmp
mov
movsb
enter
xor
test
aad
adc
sub
js
addb
fisttpl
mov
in
imul
std
mov
loop
int
pop
pop
stos
inc
pop
or
js
nop
add
xchg
pop
mov
or
dec
std
jns
sbb
jge
pop
je
sbb
imulb
aam
shl
xchg
notb
adc
in
stc
adc
mov
cmp
push
cmpb
movsl
lock
add
mov
outsl
xchg
add
sbb
inc
fs
dec
xlat
mov
ljmp
shrb
test
push
jecxz
add
or
gs
inc
stos
pop
outsb
pop
xorb
in
sub
cwtl
jl
mov
andl
out
sti
and
push
je
into
sbbb
popf
ret
in
dec
sti
mov
mov
jns
pop
jns
jge
ds
inc
mov
sub
push
shlb
sub
jle
adc
push
jae
push
add
and
push
jp,pn
mov
push
pop
sub
jbe
fidivrl
mov
add
cmp
mov
das
cmp
sub
cltd
loopne
ret
cs
dec
mov
incb
or
adc
fidivrl
inc
jge
ds
xlat
add
mov
stc
xlat
push
mov
sahf
or
outsl
int3
fcmovne
push
stos
iret
mov
xor
ret
sahf
mov
insl
mov
cmp
sbb
mov
rol
pop
pop
push
movsb
fildl
popf
mov
xchg
lcall
xchg
stc
jmp
dec
jb
pop
das
fsts
in
mov
in
adc
inc
stos
ficompl
mov
xchg
add
scas
call
test
jl
sbb
xchg
mov
ror
icebp
cmp
inc
dec
outsl
enter
mov
in
jns
dec
mov
sub
dec
xchg
ret
in
jle
jo
adc
lea
inc
scas
and
mov
mov
push
gs
jge
xchg
lods
hlt
pop
adc
movsb
out
jle
dec
dec
ljmp
imul
dec
fisubrs
divb
or
pop
jo
fmulp
jne
mov
xor
out
and
pop
lods
push
push
loope
pop
jns
push
jmp
lcall
cmp
lea
das
sti
sbb
test
fcmovne
add
adc
insb
mov
cmpsl
or
movsb
ja
loopne
rcll
sub
lods
push
sbb
mov
outsl
add
xor
out
cwtl
shrl
inc
sub
les
push
movsb
shl
jl
mov
test
mov
jbe
pop
inc
outsb
fnstsw
inc
lcall
adc
outsl
bound
mov
pop
xlat
and
ja
xor
push
ss
inc
xchg
inc
mov
fwait
inc
lret
sbb
mov
and
inc
inc
sbb
xor
cltd
shrl
xchg
inc
mov
in
negl
roll
jns
mov
xor
inc
movsb
mov
mov
lret
inc
mov
cld
mov
ds
imul
es
jno
jg
sbb
inc
scas
lods
mov
mov
inc
push
mov
sbb
sbbl
fisttpl
dec
xchg
inc
rcrb
xor
inc
sbb
nop
jne
pop
mov
dec
daa
inc
and
aas
push
push
mov
in
inc
add
push
lods
fcomps
adc
mov
mov
popf
loopne
jg
inc
push
lahf
loope
in
loop
loope
stos
mov
sbb
movsb
scas
pop
outsl
cmc
adc
sbb
mov
loop
cmc
lcall
js
pop
in
movsl
das
lods
mov
jge
mov
sbbl
lcall
rol
in
fwait
cmp
cmp
mov
pushf
leave
xor
mov
movsb
lahf
inc
mov
xor
xchg
in
xchg
xchg
out
and
addl
pop
xchg
jge
sub
push
aad
in
pop
cs
addr16
add
mov
pop
pop
imul
inc
outsl
in
dec
ror
inc
mov
xor
out
add
cmp
pop
jecxz
shll
mov
in
mov
outsb
stos
enter
push
sarb
mov
mov
lods
mov
rol
les
setge
shll
inc
iret
out
cli
push
outsl
js
mov
dec
and
movsl
xor
mov
jmp
mov
cmp
inc
jmp
mov
add
adc
push
repz
pop
out
adc
mov
xor
fwait
leave
repz
push
push
jecxz
mov
pushl
movsl
push
in
add
mov
scas
cld
xlat
mov
in
scas
cs
mov
cli
arpl
in
pop
jge
pop
rorl
inc
in
adc
xor
jmp
cmpsl
mov
imulb
adcl
xor
aam
ret
push
lret
data16
adc
imul
sbb
clc
out
xchg
sub
sbb
mov
jg
jg
or
push
mov
iret
pop
pusha
bound
mov
nop
lods
aad
pop
ficomps
push
xchg
enter
inc
lret
in
dec
jecxz
pushf
nop
mov
sub
rcl
sarb
inc
int3
push
adc
mov
rcrb
fsubrs
mov
cwtl
lock
repz
cld
pop
in
and
lock
ret
repnz
push
xchg
scas
dec
xchg
jmp
xchg
movsl
or
mov
jb
sbb
fdivs
pop
xchg
lods
cmp
aas
sti
xchg
movsl
lock
mov
ret
popf
or
mov
out
movsl
dec
cmp
adc
jo
or
and
jecxz
and
dec
inc
xchg
pop
popa
xchg
xor
test
lods
lea
lock
fldt
lods
fistl
sub
ret
inc
mov
adc
xor
lahf
rcll
ficompl
cmp
jle
cmc
in
mov
ljmp
lock
scas
int
enter
inc
sbb
dec
sbb
call
push
aad
inc
sbb
pop
sub
mov
xchg
add
and
push
pusha
push
scas
pop
jns
dec
adc
add
scas
mov
and
dec
aaa
aad
mov
push
xchg
dec
jo
int
inc
inc
sbb
push
or
xor
push
and
sub
shlb
in
jmp
xchg
mov
cmpsb
dec
mov
ret
fldt
enter
int
hlt
mov
sbb
idivl
data16
outsb
and
xchg
adc
or
mov
dec
mov
shll
call
mov
push
sti
xor
add
loopne
lods
insb
int
add
mov
in
rorl
and
push
fdivs
cmpsl
mov
dec
jge
mov
lahf
fildl
xchg
dec
cli
icebp
mov
cmc
stc
lret
outsl
push
idivb
and
arpl
stos
andb
loopne
inc
daa
sbb
sub
and
test
paddsw
stos
sbb
push
incl
shlb
lcall
pop
mov
and
lods
je
pop
int
mov
ret
inc
pop
popa
call
lods
mov
fmuls
jle
and
loope
adc
fists
scas
sub
dec
lcall
in
mov
mov
xchg
xor
mov
mov
lcall
enter
stos
push
fadds
mov
sub
ret
cmpsl
test
mov
jmp
orl
lods
inc
pushf
enter
xchg
mov
mov
mov
repnz
inc
loope
mov
test
js
stc
xchg
out
insl
mov
mov
pop
cmp
incl
mov
and
add
mov
cld
or
ror
push
lods
loop
mov
and
scas
or
dec
cmp
mov
test
sub
ret
xchg
lea
jp
xchg
clc
xchg
bound
imul
jmp
mov
mov
outsl
fldenv
out
je
ja
lcall
add
mov
mov
sub
mov
repnz
cmp
std
xchg
mov
test
mov
sub
mov
inc
insb
std
xor
clc
mov
pop
dec
xor
leave
pop
push
das
inc
js
scas
cmp
aad
sbb
jno
ja
xchg
mov
test
lock
push
dec
aas
xor
add
push
lcall
push
cmpsl
leave
push
lret
aaa
iret
cmpsl
adc
cmp
ja
leave
push
and
adc
and
movntps
fwait
mov
cmp
cmc
aas
adc
ds
push
mov
pop
mov
jg
inc
add
sbb
xchg
divb
xchg
popf
test
cmp
dec
pop
push
dec
enter
loop
cs
pop
mov
shl
scas
mov
int
shlb
subl
movsb
insl
int
jo
and
jge
inc
push
mov
out
das
pop
hlt
test
push
and
cmp
jo
jns
inc
sahf
mov
shrl
gs
and
enter
test
ds
adc
jle
sub
xor
bound
jecxz
lahf
xor
popa
dec
mov
mov
xchg
add
scas
fnsave
jle
inc
lods
dec
mov
lret
or
loopne
cli
insl
xchg
das
lods
testl
xor
sub
outsl
inc
movsl
jb
mov
jp
inc
dec
mov
popf
lock
cld
notb
out
dec
sub
mov
shl
mov
mov
push
cld
push
adc
or
push
fnstsw
jecxz
fbld
pusha
sub
mov
addl
jbe
xchg
xchg
sbb
or
ss
jnp
jo
push
sub
jle
rcll
lret
inc
push
inc
pop
ss
adc
int
and
lret
adc
pushf
and
repnz
loop
ds
out
or
mov
jnp
pop
test
mov
fdiv
jnp
mov
pop
loop
push
cmp
cli
jg
mov
ss
push
out
sarb
test
dec
enter
dec
mov
inc
aas
xchg
fidivrl
fiadds
stos
or
cmp
cmp
xor
dec
mov
cmp
mov
fdiv
mov
pusha
aad
or
jbe
idivl
xlat
int
sub
cltd
rcrl
push
mov
xor
iret
cmp
fcmove
imul
add
mov
sbb
sub
jb
test
push
sbb
add
fstl
xorl
idiv
fdivr
add
movq
mov
lret
inc
cs
scas
mov
repnz
pop
or
push
mov
cltd
aaa
lcall
cmc
cld
mov
outsb
dec
dec
mov
outsl
xchg
add
stc
push
xor
jbe
addr16
adc
xchg
xchg
and
shll
sahf
pushf
test
jns
and
incb
pop
out
mov
xchg
popf
setnp
int3
xchg
dec
ret
outsl
fbstp
inc
cmc
cmp
arpl
out
inc
mov
jno
xor
xor
test
insl
je
jmp
imul
mov
fldt
push
clc
lea
out
cmpsb
sbb
mov
push
into
daa
in
pop
jnp
aad
xorb
imul
movsb
add
adc
mulb
xchg
aaa
push
insl
xchg
inc
lods
mov
mov
ljmp
loop
dec
outsl
es
mov
insb
aas
mov
or
cltd
negl
mov
stc
je
testb
jbe
cmc
cmp
mov
inc
repz
fidivrs
adc
enter
andb
push
jle
adc
mov
lods
ds
cli
mov
xor
mov
xchg
test
mov
mov
and
test
cmp
pushf
xor
sbb
dec
dec
fwait
lret
hlt
xchg
mov
jno
or
adc
lock
jl
cltd
pop
daa
mov
sub
jne
cmpsl
cmpsb
jnp
jp
fimull
jo
sbb
out
loop
mov
lock
xchg
cld
scas
icebp
cwtl
inc
ror
iret
repnz
push
xchg
push
incb
popf
mov
aam
cmc
push
mov
dec
pop
cmp
fildll
shlb
push
inc
sbb
shr
js
jp
fstpt
lahf
repz
jnp
inc
push
popa
sahf
inc
pop
mov
inc
notl
jle
xor
mov
adc
or
fsubrs
jmp
lods
loopne
adc
push
and
mov
mov
mov
test
sbb
mov
jp
mov
pop
push
push
imul
ljmp
xchg
lods
stos
scas
sbb
jmp
rorb
fidivs
lcall
fmuls
std
mulb
cs
ret
in
xchg
xor
out
outsb
stos
add
push
sbb
cmp
xor
inc
xchg
push
dec
out
aas
popa
mov
lock
sub
pop
mov
lods
pop
daa
fimull
mov
jp
cmp
add
stos
ret
cmc
out
mov
aam
imul
lods
into
roll
icebp
test
cmpsb
mov
in
mov
xchg
call
js
sbb
dec
jge
xchg
mov
sub
sub
sub
test
rcl
push
call
jge
adc
add
xor
test
jmp
sub
nop
mov
shr
pop
pop
pop
ljmp
xor
adc
xorl
pop
pushw
ret
mov
xor
push
mov
mov
cmp
push
arpl
or
mov
fistpl
call
lret
movb
adc
dec
ljmp
jo
mov
xchg
or
fstps
mov
filds
push
das
lock
popa
arpl
lods
mov
jge
in
xor
sub
iret
jl
hlt
jmp
mov
aam
stos
stc
fists
mov
call
mov
mov
adcl
jmp
pop
jae
mov
mov
xchg
mov
pop
sbb
mov
addl
sub
pop
inc
cli
or
xchg
iret
push
lcall
jmp
loope
ret
inc
or
insb
sub
test
adc
iret
fdiv
push
pop
sub
fs
loop
mov
jnp
repz
fadds
xor
jo
into
ret
cmp
adc
scas
xor
adc
ljmp
and
pusha
dec
adc
ret
lret
mov
add
outsb
ljmp
orb
test
std
or
push
pop
int3
in
push
adc
or
xor
push
fs
movsb
mov
cmc
jp
mov
sub
or
lods
push
xchg
lret
ffree
out
insb
imul
cmp
cltd
or
sbb
jo
inc
sti
xchg
pop
aas
scas
stos
push
mov
xchg
or
cmpsl
lods
shr
dec
adc
inc
adc
xchg
and
leave
fidivl
xchg
cmpsb
and
mov
pop
or
cltd
fcmovu
adcl
push
pop
pop
aam
out
xlat
mov
mov
dec
loopne
jp
mov
rep
xchg
dec
jmp
xchg
xor
fisubrl
dec
xchg
adc
inc
fdivrp
dec
subb
adc
pusha
scas
in
jno
mov
test
lea
cmp
rcrb
loop
ret
adc
lock
adc
call
mov
out
push
test
rolb
dec
cld
fmull
mov
outsl
jge
pop
add
ljmp
iret
out
mov
cld
or
jb
and
lds
dec
adcl
iret
xchg
dec
add
loope
dec
stos
jno
out
int
sarl
xchg
mov
dec
xchg
lahf
and
xchg
or
loop
pop
lahf
mov
insl
jae
or
lret
push
outsb
pop
shrb
mov
push
and
mov
rclb
xchg
roll
insl
mov
sub
and
jle
push
call
jle
sbb
fldcw
add
test
pop
xorb
imul
popf
add
out
sbb
shrb
stos
lret
push
out
test
loopne
enter
cmpl
inc
jp
cmp
or
movsb
nop
lock
cmp
xor
xchg
add
xchg
lcall
mov
xchg
test
cmp
cmp
int
dec
setno
xchg
fldt
pushf
stc
outsl
cld
push
je
ss
mov
push
push
sub
outsl
lods
jno
add
aam
iret
js
paddsw
cmp
add
ljmp
jns
adc
aad
or
or
fidivrs
pop
leave
loop
pop
cmpb
cmp
mov
das
into
out
push
aas
mov
lcall
outsl
xchg
push
mov
pop
fwait
jg
aad
stos
lods
arpl
mov
shll
ljmp
call
js
cmpl
inc
xchg
divb
add
scas
mov
cmp
mov
pop
adc
std
insl
aam
pusha
test
sbb
mov
stc
and
repnz
shlb
xchg
out
pop
xchg
mov
ljmp
xor
mov
nop
mov
mov
adc
shll
sub
xor
je
or
iret
xor
pushl
and
gs
je
repnz
gs
scas
bound
or
loop
sub
jge
pop
jecxz
int
mov
repnz
sbb
cmp
cmp
mov
push
bnd
or
aaa
roll
and
lods
jnp
pop
push
jmp
mov
dec
lcall
ljmp
mov
sub
xchg
cli
out
in
mov
in
clc
cmpb
test
xchg
xchg
sarl
mov
nop
xor
cmp
push
xor
hlt
xchg
scas
or
sub
push
mov
mov
test
mov
lock
mov
cs
gs
push
push
rorl
orb
addb
arpl
cmp
sbb
push
dec
cltd
cltd
cmp
add
xchg
pop
cmp
ret
aad
push
outsl
cmp
sbb
jno
jo
jmp
cmpsb
into
cmp
stos
dec
scas
cs
xor
call
fdivl
stos
xlat
mov
clc
pop
jle
add
loopne
pushf
outsb
and
cwtl
in
jmp
push
inc
pushf
loop
rcr
mov
pop
jne
mov
int3
xchg
clc
stc
mov
sahf
push
mov
push
fisubs
les
cmpsl
push
xor
test
sub
xor
decb
pusha
lods
sti
mov
xor
shrl
fnstenv
test
pop
imul
push
sti
test
lret
dec
or
rcrb
mov
lret
dec
sbb
or
push
sbb
pusha
les
jno
adc
sti
roll
int3
pop
sub
push
in
les
std
test
fsubs
fsts
shrb
cmp
sti
mov
push
sbbl
ljmp
lahf
fiaddl
lahf
cmp
out
add
push
mov
mov
cs
les
cmp
ficomps
lock
xchg
jb
arpl
in
xchg
in
imul
sub
add
or
das
lods
adc
enter
hlt
int
scas
jnp
dec
add
and
sti
xor
mov
movsl
xor
jno
push
scas
and
or
push
pusha
cmp
mov
push
jle
mov
and
jo
nop
pop
fistpl
test
mov
les
and
in
or
dec
cmp
mov
xchg
inc
insl
pop
outsl
push
mov
in
in
jg
loopne
arpl
shl
mov
and
mov
pop
mov
jo
lock
adc
in
in
add
pop
pop
mov
pop
je
push
jo
sub
adc
xchg
add
xchg
lret
push
addb
sahf
out
mov
pop
cmpsl
in
add
mov
out
ret
arpl
inc
push
mov
mov
pop
jnp
movsb
jmp
js
pop
iret
out
aaa
loop
pop
enter
pop
das
pop
test
pop
bswap
movsl
and
cmp
aaa
out
mov
and
ds
dec
jmp
cmp
inc
push
cmp
sub
popa
lods
es
int
andl
xor
sbb
mov
xchg
xorl
or
in
arpl
and
test
adc
lods
daa
cltd
push
mov
sbbb
test
mov
adc
inc
xchg
add
mov
cmpsb
jo
movhps
mov
sbb
mov
out
adc
stos
fs
dec
mov
imul
es
addr16
lock
xor
jl
mov
imul
jb
push
or
dec
or
imul
loopne
jb
movsl
les
xchg
lds
xchg
testb
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
pop
into
cmp
adc
addl
cli
sarb
or
push
mov
add
pop
pop
lds
and
mov
inc
lds
insl
pop
sbb
mov
dec
sbb
pop
jae
loope
lahf
mov
and
clc
mov
jnp
shll
mov
pop
lret
cmc
insb
cmp
movsl
gs
lret
int3
addb
lods
sub
adc
jmp
or
scas
in
jp
adc
mov
fcmove
add
fcmovu
xor
frstor
cld
push
out
stos
pop
cmpsb
jmp
add
sti
cmp
popf
shll
repnz
insl
daa
dec
popl
mov
sub
loop
aam
pop
add
mov
fnstcw
loop
bts
sahf
je
or
sbb
or
adc
sahf
mov
outsb
addr16
and
push
push
xor
imul
push
ja
pop
xor
sti
sub
add
sbb
sti
mov
xorb
mov
hlt
pop
lods
push
mov
fldl
or
pop
movsl
orb
out
push
sub
dec
pop
mov
enter
je
out
xchg
faddl
clc
shl
xlat
aad
adc
cli
in
xchg
mov
and
in
jns
repz
subb
mov
jp
lods
mov
fwait
mov
inc
in
push
mov
mov
dec
loop
xchg
dec
or
out
pop
mov
or
sti
das
stc
sub
in
pop
outsl
scas
shlb
rorb
sub
das
enter
cltd
or
sbb
pop
shrl
test
push
fistpl
sub
dec
pusha
or
sub
push
push
mov
jno
sbb
fsubrl
loopne
add
or
pusha
mov
fwait
rol
fstpl
adc
cwtl
imulb
stc
add
lea
imul
sbb
inc
pushf
pop
sarl
lahf
shrb
push
insl
push
repz
ficomps
mov
shlb
jae
xor
xor
fs
jp
add
aad
stc
sbb
out
mov
sbb
loopne
aad
aas
fwait
cmp
addr16
mov
aaa
pusha
push
xchg
cmpsb
xor
cmp
add
fstps
int3
and
fstpt
sti
into
repz
add
js
cmpsl
sub
mov
jl
repz
shrb
jle
mov
lea
or
ja
push
push
iret
sbb
adc
outsb
xchg
popa
test
andps
add
adcl
adc
daa
lods
xor
and
arpl
cmp
mov
pop
into
and
test
sahf
and
imul
je
mov
pop
xchg
push
and
mov
rorl
les
in
int
fcmovb
js
dec
in
cmp
hlt
repnz
sub
push
fwait
add
insb
lods
std
or
call
dec
lods
jmp
repz
pop
xchg
inc
test
mov
out
lret
jns
rcl
dec
mov
mov
aaa
ds
fldcw
mov
dec
push
fstpt
inc
lcall
int
sarl
test
jle
sbb
add
inc
mov
stos
ret
cmpsl
push
das
cld
mov
jo
dec
mov
mov
adc
mov
dec
pop
ret
add
out
imul
cmp
ljmp
addr16
xchg
mov
mov
nop
xchg
fisttpll
pop
adc
push
xlat
dec
xchg
popf
pop
adc
aas
fistpl
dec
xor
mov
xchg
in
aam
pop
daa
rcrb
sbb
test
scas
lcall
lcall
test
shlb
sbb
cli
fdivrl
mov
sub
jmp
mov
jp
adc
into
mov
jg
pop
xlat
rcrl
call
xor
mov
push
and
sub
push
cmp
gs
xor
inc
clc
mov
sti
jl
pushf
in
in
movsb
cmp
add
and
jge
in
ret
mov
xchg
mov
pop
inc
negb
clc
test
into
add
jmp
bound
xchg
pop
jmp
je
in
adc
mov
pop
cli
jl
adc
movsb
cmove
xchg
arpl
xchg
bound
sbb
xor
pop
test
cmp
cmp
imul
dec
mov
cmc
adc
ja
sbb
mov
ja
sbbl
xor
mov
and
inc
dec
pop
scas
add
sub
xor
insl
popf
jle
pusha
mov
lock
fidivrs
sbb
enter
mov
cmpsb
cmp
push
dec
sub
cmp
sub
jle
sbb
jb
cmp
mov
cmp
mov
and
lcall
rclb
lahf
int3
lret
scas
adc
subl
scas
bound
pop
inc
or
xor
mov
adc
popf
fwait
mov
cmp
arpl
inc
cmc
xor
inc
sbb
cltd
push
movsl
sbb
dec
pop
inc
bnd
into
xchg
repnz
out
outsl
arpl
into
orb
das
in
jle
ja
cli
xchg
inc
fsubs
rcll
sub
adc
int
shlb
and
fsubrl
lock
mov
out
decl
and
outsl
lods
fidivl
xchg
mov
ljmp
arpl
jns
fsubp
arpl
shll
xor
lock
aas
jp
cmp
ljmp
and
sahf
sbb
outsb
dec
pop
loope
cmc
lock
pop
roll
lds
decb
push
int
cmp
iret
add
sub
mov
cltd
xchg
das
movsl
mov
scas
or
add
dec
rcrl
fwait
iret
cltd
stc
and
lock
push
mov
xchg
insb
sub
outsl
in
outsb
ja
or
faddl
add
jo
dec
adc
xchg
mov
lods
xchg
inc
mov
addr16
dec
imul
fists
pop
jp
jo
jae
cmp
ljmp
popf
loopne
mov
mov
jle
pushf
bound
xor
mov
jmp
fwait
std
fmuls
push
xchg
dec
sub
dec
mov
insl
decl
repnz
and
sub
addl
sub
pop
pop
fistl
pop
lret
push
jmp
cmp
cmp
loop
ret
cmp
in
lahf
adc
jmp
cwtl
lahf
and
and
inc
out
jecxz
inc
nop
pop
pop
sub
add
jge
push
jmp
cwtl
sbb
insl
test
adc
idivb
mov
pop
xorb
dec
mov
mov
xchg
dec
out
or
mov
rolb
push
stos
rol
lea
push
dec
repnz
mov
or
outsb
xor
lods
popf
and
mov
adc
dec
jge
and
xchg
push
mov
cmc
xchg
push
sarl
jmp
jp
js
xchg
sarl
mov
or
stc
jg
in
jmp
cmpsb
out
jne
lret
xchg
pushf
jg
inc
mov
fimuls
frstor
pop
mov
imul
loop
rcr
cmp
or
lret
dec
add
mov
sarl
mov
sub
mov
loop
jo
cmpsl
popf
test
mov
cmpb
lea
jno
jbe
push
bound
daa
inc
xor
lret
repz
mov
sbb
out
or
lcall
xor
fdivrp
loopne
push
filds
sub
xor
mov
xor
lods
cmp
pop
nop
jle
adc
lea
cs
bound
or
add
std
jns
dec
jge
sub
add
inc
sub
in
xor
push
dec
incb
in
push
setb
rorb
mov
dec
pushf
mov
mov
test
iret
sub
cltd
inc
js
cltd
sub
sbb
mov
call
dec
jge
loop
hlt
daa
jb
jnp
test
popf
add
or
inc
dec
cmp
mov
insb
mov
cmc
fneni(8087
out
cmp
sbb
jno
add
and
add
mov
mov
call
pop
or
outsb
ds
xorl
jno
mov
mov
stc
adc
idivl
ficomps
dec
sbb
inc
mov
push
stos
push
jecxz
push
rorb
xchg
call
jno
iret
fisttps
and
and
mov
sti
adc
je
fs
cmc
lcall
add
sbb
mov
daa
leave
sub
or
mov
cmpsb
fildll
pop
or
sbbb
adc
cmp
loopne
stc
pop
lock
inc
out
mov
ljmp
pushf
ucomiss
lcall
pop
shlb
push
sub
ja
aaa
xor
in
or
loope
aaa
jl
test
sbb
jmp
je
fcoms
aam
adc
and
sub
add
push
push
push
cs
jae
xchg
mov
pop
dec
dec
jo
testb
add
add
outsl
sbb
and
mov
mov
dec
pop
xchg
pop
jecxz
inc
inc
mov
sbb
lods
and
test
out
test
sbb
dec
jb
jg
rol
gs
and
xchg
push
fnstsw
dec
push
icebp
jo
lret
add
jmp
movsb
dec
jecxz
or
loopne
ss
movsl
fimull
sbbl
in
sbb
int3
xor
int3
xor
jae
lret
and
fidivl
adc
mov
mov
xor
out
nop
jg
push
shll
jle
mov
push
lcall
adc
mul
push
in
adc
add
pop
dec
xor
or
into
push
adc
cmpsb
lcall
lock
sub
push
divl
loop
cltd
mov
sbb
inc
imul
cmp
push
sbb
test
stos
jl
xchg
es
inc
xor
test
and
int
scas
mov
movsb
lcall
pop
xor
dec
and
and
mov
push
pop
movsb
mov
pop
popa
daa
test
cmp
or
rcr
enter
movsl
insb
daa
xchg
xor
sub
cmp
push
sub
cwtl
ja
push
ljmp
push
pop
and
xchg
mov
mov
mov
pop
mov
or
cli
inc
xchg
sti
iret
shl
xor
push
adc
std
sub
dec
dec
mov
lret
les
pop
dec
inc
cmp
outsb
outsb
mov
notl
ljmp
jl
add
les
out
data16
jo
add
jo
and
arpl
mov
mov
std
and
or
mov
ret
mov
repnz
inc
cmp
mov
fcoms
mov
xchg
ret
les
add
inc
cmp
repz
sbb
out
mov
mov
pop
leave
movsl
ror
filds
iret
mov
dec
pop
loopne
iret
xor
dec
ficoms
xchg
inc
repnz
pop
rcrb
jae
jno
pop
fisubrs
ss
xchg
shlb
push
adc
fwait
push
test
lods
fucom
mov
inc
fdivs
addr16
mov
pushf
mov
shrl
xchg
push
imul
xchg
push
xor
lods
stos
pop
sub
jl
push
adc
inc
popa
sti
in
push
xor
xor
imul
stos
and
push
mov
es
in
jp
cmp
push
addb
sub
xor
or
adc
popf
fnstsw
xchg
pop
mov
xchg
pop
jb
bound
scas
gs
das
cltd
dec
sti
data16
xchg
pop
xchg
std
daa
out
popa
or
js
xor
push
rcrb
push
stos
arpl
test
push
int
call
fldt
dec
or
pusha
dec
sub
jecxz
call
movsl
inc
loop
pop
mov
stos
cs
sahf
and
leave
sti
in
xchg
scas
push
pop
movsl
jp
xor
xchg
popw
nop
inc
inc
fcmovu
jg
add
push
iret
lods
fwait
stos
xor
sarb
xchg
rol
test
sti
daa
fs
daa
push
fcomps
mov
fcmovbe
push
aam
ss
jne
call
arpl
cmp
inc
push
jns
xchg
frstor
nop
scas
faddl
shlb
xchg
ljmp
imul
hlt
and
aam
adc
pop
add
mov
rol
xchg
dec
ret
push
scas
fnstcw
add
aam
mov
stos
bound
notb
xor
add
sahf
jmp
adc
jge
out
push
and
mov
mov
xchg
ret
sbb
xchg
dec
jno
pop
repz
imul
ja
test
jne
mov
hlt
mov
scas
jmp
jo
and
adc
loope
jb
push
push
jg
cmp
sahf
mov
fcomip
loopne
or
dec
sahf
inc
pusha
aaa
cmp
inc
push
scas
push
xor
pop
fs
cmpsl
int3
rolb
xchg
in
and
loop
mov
int3
enter
ja
adc
pusha
sbb
sbb
cmp
push
adc
stos
inc
cld
stos
or
inc
and
icebp
push
into
rcrl
rclb
scas
imul
lock
dec
enter
or
push
mov
mov
fiaddl
mov
xor
out
cltd
jmp
dec
fstps
pop
xchg
fstl
add
adc
jp
mov
dec
jae
dec
dec
addr16
arpl
popf
sbbb
xchg
dec
test
mov
aam
mov
dec
cmp
adc
fdivs
xchg
shlb
dec
or
sub
loopne
ret
inc
sbb
jle
in
xchg
out
pop
lcall
repz
sbbl
pop
mov
loopne
push
dec
pop
out
push
inc
into
push
popf
mov
mov
loop
mov
push
mov
retw
out
push
mov
popf
cmpsl
cmp
push
mov
pushf
imul
stos
and
mov
sub
pop
add
cmp
sub
out
push
movsl
out
dec
mov
loopne
mov
inc
gs
imul
nop
jns
xor
cmp
lds
cmp
sbb
call
cmp
sbb
icebp
add
fs
dec
imul
je
repnz
add
mov
inc
xchg
or
ror
mov
xchg
int3
jmp
adc
push
jb
popa
mov
or
clc
add
test
insl
push
aaa
xchg
pop
out
push
adc
mov
fcompl
sahf
hlt
jne
test
xchg
or
sbb
clc
das
cltd
into
sub
out
sarb
test
bnd
les
int3
mov
or
adcl
xchg
ss
sbb
dec
scas
cli
test
push
mov
out
lds
mov
in
rcr
mov
test
ja
sbb
sub
cmpsb
push
sbb
jb
xor
fcompl
imul
and
push
push
inc
xchg
lret
incl
dec
js
repz
into
test
cmp
mov
pusha
inc
fisttpll
imul
sub
fidivl
filds
xor
xor
loop
insb
mov
clc
xchg
jno
push
cmp
lods
mov
sbbl
dec
shrb
mov
dec
hlt
dec
arpl
out
jbe
jo
shlb
sub
ss
imul
push
or
push
cs
add
call
ficoms
arpl
adc
pop
lahf
shrb
push
fists
xchg
filds
imul
out
xlat
inc
es
call
gs
inc
loope
add
sahf
sub
xchg
jle
or
mov
insb
adc
fnop
dec
repz
in
xchg
out
ret
mov
fdivr
cmpsb
dec
sbb
addl
stc
into
mov
mov
mov
pusha
or
xor
mov
fcompl
inc
fs
mov
or
add
mov
mov
adc
pushf
inc
das
mov
pop
dec
xor
ds
adc
push
push
repz
icebp
jmp
inc
je
shrb
repz
js
mov
aad
mov
lcall
xor
adc
scas
adc
cwtl
fs
bound
mov
and
fs
aam
aaa
push
cli
test
insb
cmp
fwait
adc
and
divl
push
lods
pop
xor
imul
call
clc
orl
loope
mov
ret
pop
bound
jecxz
cs
jno
fsubl
inc
mov
test
fdivrs
popl
adc
pop
jb
mov
sub
out
pop
add
int3
adc
rorb
test
lea
adc
mov
push
cwtl
popf
les
mov
xchg
imul
fwait
cs
and
fildl
push
and
sti
push
mov
je
sub
ficoml
in
mov
jne
fisttpl
movsl
mov
sub
loop
lar
mov
fcoms
outsb
loope
dec
and
in
mov
mov
xchg
push
sarl
dec
ljmp
xchg
rorb
ja
sbb
add
fwait
into
mov
pusha
and
fdivr
pop
cli
dec
or
dec
sub
push
lock
aam
loopne
push
je
mov
xlat
cmp
dec
jns
jne
lret
xor
insb
inc
test
jg
add
xchg
pushf
add
cmp
xor
and
lret
scas
test
sbb
pushf
xchg
shrb
insl
mov
xchg
add
dec
in
dec
pusha
fs
call
mov
in
inc
insl
roll
mov
inc
or
add
jl
pop
addr16
mov
test
xchg
cs
xchg
shrl
xor
cltd
pop
iret
outsb
mov
mov
hlt
jbe
cmc
mov
movsb
lret
add
cmp
shl
lret
repz
push
popa
insl
sbb
ljmp
cs
xor
test
sub
mov
pop
jmp
sbbb
test
shlb
jno
shll
adc
test
outsl
add
test
xchg
add
out
ficompl
dec
pop
sbb
loopne
xlat
push
sbb
jl
jle
jp
jns
cli
and
ret
mov
mov
push
xchg
fists
nop
adc
out
add
aad
mov
xlat
gs
dec
ds
adc
inc
cmp
repz
adc
cltd
fmulp
cmp
mov
and
fmull
sbb
mov
sbb
jbe
into
adc
rorl
mov
xchg
notl
imul
outsb
push
mov
fwait
push
ljmp
jle
pop
ja
stos
shl
imul
xlat
sbbb
sbb
cmp
or
dec
mov
mov
outsb
inc
bound
sub
test
xor
nop
add
mov
push
jbe
sub
sbbb
incb
stos
mov
cmp
out
mov
xor
ffree
dec
ficoml
out
sub
xchg
sbb
mov
and
decb
mov
adc
sub
stc
ljmp
or
pop
movsl
mov
lock
dec
pop
xchg
pop
aam
cmpsl
sbb
aaa
lret
mov
shlb
mov
test
push
mov
shlb
ljmp
in
out
adc
xchg
adc
xchg
add
mov
dec
std
cmpps
push
dec
xlat
inc
pop
icebp
cmpsl
sbb
sarl
lahf
jmpw
add
scas
and
outsb
add
scas
lods
lret
jge
jmp
dec
hlt
xlat
push
inc
pop
cli
cmp
cmp
push
nop
leave
pop
stos
lcall
lods
mov
lods
ljmp
out
cmc
dec
sub
and
icebp
jge
push
push
lcall
sarl
rorb
lahf
pop
mov
xchg
test
mov
test
adc
lods
cmp
outsb
das
ljmp
ret
inc
xchg
mov
into
int
rorl
mov
daa
ja
hlt
and
in
in
or
add
pop
dec
jmp
jle
aad
or
sbb
out
xchg
loop
dec
movsl
rolb
pop
fsts
or
scas
cmpl
rcll
xor
jge
push
mov
ja
inc
testl
pop
cwtl
inc
in
sbb
js
inc
pop
push
les
inc
dec
jno
mov
int3
add
pushf
stos
mov
sti
xor
mov
and
in
cmp
add
xlat
fwait
ret
jle
fstl
out
adcl
push
inc
cwtl
mov
frstor
stc
lods
sub
ja
sub
lds
bound
hlt
mov
sahf
rorl
in
jno
cli
js
sbb
xchg
fiadds
mov
or
iret
xlat
int
push
ds
insl
nop
imul
push
nop
xchg
fcmovb
add
shr
mov
cmc
adc
cmp
in
loop
es
test
call
sbb
cmc
sub
sbb
dec
adc
popa
push
add
dec
and
mov
out
jne
dec
outsb
adc
push
stos
pop
ljmp
cmp
iret
mov
je
nop
cmpsl
jl
hlt
in
sub
inc
sti
fisubl
dec
incw
adc
xchg
add
aad
ret
dec
aam
ss
jae
dec
imul
dec
push
jmp
daa
movsb
test
mov
inc
push
test
cmp
rorl
js
add
insl
cwtl
sbb
add
mov
add
jno
adc
and
mov
push
inc
cwtl
out
mov
les
cli
enter
arpl
out
pushf
mov
or
in
jecxz
cmpsl
repz
arpl
xor
jns
adc
in
pushf
shlb
xlat
push
lret
negb
adc
inc
add
xchg
xchg
adc
jge
test
pop
push
lcall
dec
idivb
aad
push
push
leave
mov
mov
ja
sbb
ret
jno
lods
and
jae
cmc
push
and
into
jns
xchg
sahf
add
sub
lret
cmc
gs
loop
out
rcll
enter
popa
ret
mov
push
ret
lret
inc
movsb
jge
or
rclb
sub
sub
xchg
cvtps2pd
and
scas
adc
xchg
repz
adc
out
sbb
inc
std
fisubl
jo
insl
xor
fisttps
push
fbstp
mov
jg
insb
rcr
popa
in
push
pop
and
popf
jne
sbbb
jb
jb
and
hlt
or
aad
mov
insb
push
into
lar
ret
scas
out
pop
xor
ljmp
pop
es
dec
mov
push
movsl
mov
sti
mov
stos
in
mov
insl
pop
xor
ret
test
mov
inc
cli
mov
in
dec
lcall
cmpsb
push
mov
adc
add
ds
fsubr
inc
sbb
jg
pop
outsl
push
fmull
cmp
or
ss
popf
repnz
aam
loopne
out
fnstcw
lea
lret
insb
adc
and
mov
fcmovne
or
stos
loopne
aaa
cmp
scas
inc
insb
bound
cltd
mov
arpl
rclb
add
mov
sub
les
xorl
call
mov
dec
mov
mov
mov
pop
jo
rcll
inc
out
sbb
sbb
inc
cmp
scas
int
js
mov
cmp
sub
scas
repnz
ss
pop
in
push
mov
mov
mov
dec
fwait
add
sarl
add
push
xor
inc
nop
xlat
std
adc
xor
pop
sub
jns
inc
or
std
fistl
jge
leave
lahf
and
xchg
imul
add
mov
jmp
mov
stos
pushf
test
sbbl
mov
daa
adc
pop
mov
pop
inc
pop
pop
cmp
popa
and
add
sub
jo
mov
fstl
mov
mov
mov
or
rorl
push
in
and
adc
mov
jmp
fildl
fdivrl
scas
push
fwait
jbe
pop
lcall
mov
imul
mov
das
iret
imul
scas
imull
cmp
test
into
push
mov
lock
movsb
xlat
mov
push
cmpb
nop
ljmp
jg
mov
mov
iret
dec
arpl
daa
lcall
outsb
jb
and
pop
jp
lods
outsl
cld
ljmp
and
inc
sahf
test
out
cmpsl
pop
mov
stc
sub
and
fnsave
sub
mov
jle
dec
ficomps
jge
shrb
imul
out
mov
jne
out
test
out
xor
cmp
out
push
sbb
dec
in
call
fldt
pushf
dec
rolb
and
insb
das
out
shrl
iret
pop
fdivrl
and
cmp
add
cmp
jmp
lcall
lret
and
dec
mov
sbb
icebp
fimull
jae
imul
xchg
in
icebp
mov
fdivrp
cmp
mov
xlat
adc
in
movsl
adcl
std
xchg
addb
subl
mov
fdiv
cmpsb
mov
push
jmp
xchg
cmp
mov
cmp
mov
in
out
mov
in
pop
dec
adc
inc
ljmp
aas
push
mov
adc
repz
scas
sbb
jl
and
add
lock
mov
ja
xor
push
push
fnstcw
mov
add
ds
dec
mov
or
mov
je
add
sbb
pop
test
fmul
push
dec
in
jl
jl
and
or
push
and
lret
rorl
mov
and
mov
cmp
inc
mov
xsha256
cmpsb
adc
lods
sub
scas
pop
push
mov
repz
adc
sti
pushf
push
dec
leave
and
stos
sti
dec
cmpsl
insb
jb
cmp
lahf
lcall
pop
jg
addr16
jnp
sub
stc
push
pusha
imul
imul
test
pushl
lret
add
in
adc
repnz
popf
xchg
ds
cli
arpl
inc
jbe
fisttps
out
and
out
scas
iret
sub
pop
hlt
sbb
subb
movsb
pop
pop
adc
sbb
or
xchg
pop
sarl
or
in
lock
mov
loopne,pn
xchg
add
push
add
out
into
mov
lds
push
pop
mov
or
xor
jb
pop
dec
fadds
fucomi
xor
mov
mov
pop
repnz
imul
mov
mov
xchg
mov
fisubrs
insl
add
jg
sti
pop
cmpsb
lcall
pusha
xchg
mov
cmpb
divb
pop
xchg
cmp
movsl
jmp
sbb
lods
ja
dec
rcrl
jg
cmp
mov
in
pushf
ret
out
xchg
nop
mov
icebp
icebp
pop
arpl
xor
ret
xchg
sub
jne
pop
jecxz
cmp
inc
pop
and
lods
enter
in
or
push
jmp
jne
icebp
cmp
jge
ret
js
mov
adc
stos
stos
cs
push
mov
sahf
inc
scas
and
mov
and
xor
add
push
sub
call
and
shl
in
add
js
int3
pop
xchg
leave
jle
cli
aaa
sub
jbe
adc
repnz
mov
test
push
xlat
mov
adc
mov
lock
ja
fiadds
or
adc
sub
outsl
cmp
iret
push
mov
loopne
loop
or
push
xlat
out
mov
jp
xor
adc
push
pop
repnz
fisubl
jg
data16
test
lods
mov
cltd
jge
stos
inc
std
jg
pop
daa
sar
fcomps
lcall
mov
sub
in
mov
cmp
lock
cmp
xchg
sbb
mov
and
pop
xor
push
xor
sbb
cmp
mov
pop
and
cmp
mov
jae
out
insb
cli
bound
rorl
lods
push
adc
add
add
inc
popf
dec
pop
cmp
loop
sarb
push
sahf
or
bound
lret
mov
mov
and
rclb
add
movsl
push
mov
das
fisubrs
test
inc
dec
inc
pop
jnp
or
push
ljmp
inc
mov
sub
lahf
pop
xchg
mov
xchg
movsl
and
xchg
scas
pop
cmpsb
mov
push
pop
jb
mov
add
mov
push
inc
and
mov
bswap
sbb
fsubs
xor
popa
adc
popa
adc
fnstcw
mov
decb
mov
divb
mov
popf
xor
rcr
ss
pop
movsb
and
cmp
inc
addl
dec
cmp
fs
or
xchg
test
add
ds
add
sahf
mov
pop
mov
movsl
fdivrl
lds
psrld
in
stos
xchg
jle
jne
fnstsw
cmp
inc
jg
imull
dec
loop
mov
sbb
jle
push
movsb
fidivrs
add
push
test
mov
scas
clc
jbe
popa
icebp
mov
movsl
mov
xlat
out
lock
mov
sbb
icebp
es
lahf
mov
add
mov
or
push
xlat
pop
loope
cmp
inc
lret
jp
iret
call
push
pop
lret
jne
lds
rcrl
pop
and
sbb
jl
sub
pop
les
xor
scas
adc
jbe
adc
push
jae
int
sbb
cmpsb
xor
xchg
sar
out
mov
lds
fwait
pop
lcall
sub
out
test
push
cmc
movsl
jg
idiv
cld
sub
xchg
testb
lds
aaa
fcoml
cmc
sub
mov
jae
pop
cmp
test
xlat
pop
and
mov
lret
cld
xchg
mov
ret
push
outsb
outsb
stos
sbb
nop
iret
push
hlt
cli
add
dec
mov
outsl
jmp
imulb
jns
mov
movsb
mov
mov
fstps
arpl
enter
adc
das
nop
lods
in
movsb
testb
enter
je
hlt
or
jl
loope
test
neg
aad
mov
xchg
and
fmuls
popf
test
mov
mov
or
ja
xchg
inc
inc
pop
cli
push
outsl
mov
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
cmp
repz
adc
into
popf
mov
bound
lcall
das
lods
aas
mov
clc
mov
test
call
cmp
fldcw
mov
loope
inc
pop
pop
jnp
lods
mov
sbb
sbb
nop
xchg
bound
jge
pushf
push
addr16
push
loope
sbb
mov
mov
fs
sub
or
dec
jl
mov
aad
hlt
dec
dec
or
cmp
bound
jbe
fadds
and
cmc
and
cmp
or
es
sub
push
test
jbe
dec
sub
inc
pushf
clc
cmp
loopne
mov
sbb
xchg
adcb
sbb
pop
cmp
ds
and
mov
aad
testl
cli
add
xchg
mov
xchg
das
pop
pop
push
xchg
mov
ficoms
loopne
lods
sarl
in
mov
lahf
test
aam
xrelease
inc
jnp
push
and
or
xchg
xor
imulb
mov
es
shrb
xchg
jge
mov
xchg
cmp
movsb
xchg
lret
cli
mov
push
int3
arpl
or
aas
lds
cmp
and
into
cli
mov
xchg
push
lcall
cld
int3
mov
mov
jno
push
movsl
push
xor
xchg
adc
cmp
in
mov
movsb
cld
xor
cmp
inc
scas
mov
mov
mov
sub
data16
inc
std
lock
sub
aam
push
mov
sub
jb
ret
mov
test
data16
push
mov
mov
mov
mov
mov
aad
in
repz
ficoml
cwtl
sub
sbb
test
push
pop
or
ja
or
lods
lods
mov
ret
enter
out
sub
xor
jns
push
adc
dec
and
das
in
inc
call
cwtl
adc
lods
sub
mov
xor
fwait
rcl
add
into
sub
stos
add
adc
lea
mov
fisttpll
les
mov
push
mov
ror
cwtl
adc
dec
and
mov
xchg
sub
push
out
ret
shlb
fidivs
lea
mov
in
jae
pusha
movsb
dec
xlat
lds
and
jp
aas
pop
movsl
mov
pusha
arpl
jp
pop
or
cmp
pop
cmc
ja
cmpsl
mov
outsb
ret
pop
test
movsl
xchg
into
sub
xchg
jbe
adcb
jecxz
add
les
pop
dec
jae
mov
lahf
jle
sub
jne
nop
cmc
fisttps
aad
aam
inc
popa
ljmp
cli
ret
movsl
mov
mov
out
or
xor
loopne
fsubrl
aaa
inc
cld
add
mov
jle
test
into
cmpsl
shl
dec
les
bound
jnp
fiadds
jo
hlt
pop
lods
xchg
push
inc
jle
dec
je
cmp
loopne
movhps
into
mov
xchg
movsb
xor
ljmp
adc
outsb
data16
jns
scas
cmpsl
mov
inc
adc
sub
insl
jne
mov
mov
call
outsl
or
idivb
cmp
inc
fdivrs
addb
aas
in
movsb
popa
or
stos
pop
or
sub
jmp
jp
scas
repnz
imul
jl
inc
cmp
addr16
mov
loop
sub
cltd
mov
push
nop
jmp
in
aas
lcall
push
or
xor
out
inc
std
out
mov
cmpsl
pushf
ja
xchg
clc
add
fsubrs
or
mov
cmc
mov
inc
add
loop
ljmp
pop
stc
mov
inc
cwtl
xor
int
sub
pop
or
cmc
cltd
push
jbe
inc
aam
mov
or
mov
bound
sar
outsb
subl
or
pop
aas
xor
or
xchg
cmp
test
testl
mov
popa
lret
xchg
imul
loope
mov
or
jb
sub
mov
jb
cmp
test
adc
dec
cmp
mov
inc
lret
jbe
orl
out
or
jnp
xchg
xchg
shlb
and
adc
sbb
imul
jbe
sub
outsb
les
in
outsl
xchg
add
aad
and
push
pop
sbb
add
ret
or
mov
sub
and
int
xchg
pop
test
push
fildll
sahf
fildl
movsl
xchg
mov
fidivs
mov
inc
inc
dec
call
dec
add
fldz
call
rcrb
or
fs
repnz
xchg
scas
sbb
or
bnd
pop
enter
mov
das
aaa
sbb
push
dec
push
push
movsl
cmp
jmp
inc
push
shll
outsl
stos
ret
jns
add
adc
into
cmpsb
or
or
jp
leave
lret
mov
nop
push
xor
mov
andb
mov
sbb
lods
ret
ljmp
sbb
ljmp
and
pop
ja
jge
dec
cltd
loope
inc
push
hlt
mov
inc
call
xor
sub
jne
mov
xorb
sbb
and
and
push
adc
imul
subb
pop
js
sbb
mov
inc
pop
and
daa
fcoms
imul
mov
dec
inc
adc
mov
xchg
pop
out
enter
aad
mull
sub
stos
push
fs
xchg
jmp
mov
nop
sar
xchg
mov
mov
es
pop
xor
fadd
pop
call
or
sbb
jne
fmull
sub
pop
fs
inc
pop
pop
sahf
adc
jmp
xchg
scas
and
pusha
mov
leave
pop
lret
sti
sub
mov
js
fdivs
cmp
insl
leave
jbe
push
jp
aas
sbb
hlt
xlat
and
dec
sbb
in
dec
jecxz
or
cli
icebp
mov
bound
inc
clc
js
pusha
sbb
jg
xchg
sub
jle
sbb
insb
jl
outsl
mov
and
gs
add
outsl
shll
lcall
mov
inc
icebp
jp
lret
movsb
xor
and
sbb
push
cmp
fucomip
cld
in
iret
iret
lcall
pop
int3
cmpsb
sti
xchg
loopne
pop
push
cld
lcall
andb
psrlw
loop
xchg
in
and
movq
fs
stos
xor
int3
popa
shr
dec
stos
cmp
scas
popf
cmp
pop
outsl
adc
dec
push
cmp
jg
add
divb
cmp
arpl
in
push
sub
js
mov
out
outsl
lret
and
aam
lds
imul
adc
je
loope
pusha
push
sahf
pop
repz
test
dec
lock
push
out
in
pop
mov
cmp
sbb
adc
xor
sbb
xor
mov
push
pop
xor
shlb
fisubrs
pop
adc
cs
xchg
int
adc
pop
dec
jb
xlat
loopne
xchg
enter
mov
ja
mov
js
test
or
sahf
add
sbb
push
popa
pop
push
dec
lcall
int
xlat
sub
mov
adc
inc
int
mov
jo
das
aas
jmp
push
loope
fcmovne
xor
pop
enter
dec
add
mov
pop
out
hlt
jl
les
cmp
fisubrl
daa
adc
std
push
ljmp
insl
cmpsb
cmp
mov
daa
int3
jge
push
cli
sub
inc
hlt
sub
loop
sarl
push
cmpsl
enter
ja
js
les
push
or
fldlg2
mov
ss
jne
lahf
test
or
jbe
inc
data16
dec
aas
enter
add
jb
inc
lods
add
mov
stos
subl
lret
addr16
daa
pop
test
ret
xchg
mov
sub
js
push
dec
fistpl
sub
jmp
mov
pop
jecxz
int3
fcmovbe
call
or
add
sub
clc
pop
shrl
mov
mov
dec
ret
in
test
add
xor
or
mov
xchg
pop
adc
sub
inc
mov
push
mov
xor
cwtl
add
paddw
lods
inc
pop
insb
loopne
sti
pop
pop
fldenv
mov
dec
es
jae
pop
das
lret
jmp
push
pop
aad
and
jge
xchg
rcrb
mov
sbb
int3
ljmp
clc
xchg
addl
xchg
xor
push
arpl
jle
cmpsb
jp
ja
sbb
xchg
mov
jecxz
test
or
fsubs
mov
mov
pop
mov
cmp
cmp
scas
dec
aam
rorl
aam
popf
mov
and
loopne
cmc
push
pop
mov
loopne
fs
repnz
mov
cmc
loope
dec
push
aam
add
sbb
orb
les
cmp
rorl
cmp
pop
jge
jp
add
mov
imul
mov
psubusw
dec
adc
sbb
dec
stos
push
movsl
rcl
repnz
adc
add
xchg
mov
adc
ret
fwait
sbb
lea
sub
and
cwtl
test
mov
jno
shrb
mov
inc
es
jo
test
sahf
sbb
mov
or
push
iret
jbe
out
sub
jg
cmp
mov
movsl
scas
and
pop
lcall
rorb
inc
imul
xchg
mov
sbb
data16
das
pop
je
add
or
jbe
loop
mov
enter
sbb
and
ljmp
jno
test
mov
push
lahf
sub
push
enter
push
bnd
lods
das
sti
enter
or
and
call
das
add
shrw
mull
int
push
lret
vpunpcklwd
mov
roll
jne
or
inc
xor
imul
inc
ja
jecxz
dec
xor
push
push
daa
jmp
loopne
mov
xor
cmp
sahf
sbbl
mov
sub
jno
cmp
xor
inc
add
repnz
mov
in
lea
lds
mov
std
test
sub
cltd
out
cmp
fldl
cmp
pop
jecxz
decb
xor
stc
xchg
ja
sti
ds
add
scas
push
mov
cmp
into
testl
int3
adc
sbb
sub
jns
ds
sbb
sbb
push
cmc
push
cmp
sbb
mov
cs
in
rcr
sarb
sub
lods
test
and
pop
add
xchg
or
sbb
inc
test
cmpsl
inc
clc
xchg
popf
adc
push
loope
jbe
xor
add
mov
sahf
andb
pop
add
out
cmp
ljmp
outsl
xrelease
add
mov
sub
cwtl
scas
std
add
inc
test
imul
and
push
out
scas
mov
les
pop
cmp
jne
dec
rclb
jae
daa
leave
push
push
nop
pop
aaa
out
call
insl
sub
jne
push
in
and
roll
mov
dec
test
lea
jmp
stos
daa
mov
mov
push
fsubr
sarb
mov
dec
gs
lret
xlat
pop
arpl
int
inc
test
sub
ds
jno
test
cld
sub
push
rorl
scas
outsb
lahf
mov
jne
leave
out
mov
scas
jnp
testl
add
icebp
add
mov
fsubl
jbe
inc
pusha
rorb
pop
push
pop
stos
pushf
cwtl
sub
gs
imul
imul
test
adc
pop
out
mov
mov
jecxz
and
pop
mov
inc
mov
sarl
mov
or
daa
ret
mov
test
sbb
sub
scas
cs
push
xchg
mov
into
pop
mov
lock
rcll
mov
ljmp
xor
push
icebp
xchg
inc
sbb
test
cmp
mov
andl
pushf
loop
mov
repnz
push
subl
stos
jnp
sarl
ret
push
add
call
jb
sarb
jbe
pop
and
in
pop
test
sahf
xor
lds
lds
or
lods
in
scas
jg
sahf
daa
or
sarb
push
sbb
push
stos
lods
and
pop
or
dec
inc
push
push
jo
dec
jo
js
mov
pop
arpl
inc
add
pop
push
repnz
sub
or
call
in
outsb
jo
leave
aas
loope
into
pop
movsl
dec
push
les
addr16
mov
fidivs
aaa
pop
adc
pop
jno
add
rcll
jecxz
jno
test
jge
inc
lret
insl
mov
cwtl
jne
mov
mov
lods
jbe
enter
push
aaa
aaa
cmc
cmpsl
xlat
pop
cmpsl
pop
or
ss
int
ret
insb
mov
mov
push
jp
orb
and
out
push
push
add
out
push
adc
stc
dec
icebp
movsb
cmc
or
icebp
inc
dec
lret
cld
inc
push
dec
xor
dec
xchg
cmc
jg
add
push
pop
inc
pop
mov
dec
jl
pop
xstore-rng
cmpsl
xchg
rol
cmp
jge
jle
mov
adc
xchg
adc
aaa
fisttps
sti
or
or
icebp
or
dec
rcll
les
jne
jns
lahf
outsl
jmp
pop
imul
movsl
and
cmpsl
sbb
add
mov
pusha
and
lds
xchg
xchg
dec
addl
je
xor
in
dec
mov
addb
out
lret
cmpsl
pop
enter
pop
aad
cwtl
or
sub
mov
dec
repnz
sbb
aad
adc
cld
add
movsb
out
lods
mov
or
xor
pop
mov
into
dec
mov
fwait
and
fs
cld
add
xchg
jnp
xlat
enter
cmpsb
repnz
pop
addr16
cwtl
aaa
jae
test
fstps
push
pop
adc
fidivl
mov
mov
add
jnp
add
xchg
adc
or
mov
outsb
movsl
imul
imul
jae
push
addr16
hlt
xor
mov
mov
sete
data16
inc
in
or
cli
cmp
cmp
add
repnz
mov
xor
dec
jnp
or
ds
sub
incl
scas
fimull
mov
sarb
mov
test
lods
push
or
dec
negb
movsl
mov
iret
mov
arpl
dec
cmp
in
out
sbb
push
aad
jbe
call
pushf
fcmovnbe
pop
adc
sbb
std
dec
dec
xor
and
pop
inc
scas
lret
shlb
in
imul
in
xchg
inc
data16
les
add
js
sbb
pop
jnp
push
sbb
fstpt
jg
hlt
adc
subl
xor
push
mov
mov
inc
lock
jg
adc
sbb
in
stos
jnp
inc
push
mov
xchg
sub
cmp
mov
adc
es
push
test
test
in
inc
xor
xorb
sub
sub
test
dec
mov
notb
dec
inc
xchg
push
mov
fst
push
rorb
mov
inc
mov
xchg
add
imul
jmp
dec
std
iret
subb
popf
repz
inc
sbb
xlat
and
add
sub
xlat
cmp
into
mov
pop
lods
or
mov
sub
push
das
insb
xchg
cltd
add
add
lock
push
popf
push
es
jo
inc
addr16
mov
stos
sahf
lock
inc
aad
xor
ret
ja
scas
mov
xor
mov
dec
loop
push
out
push
punpckhwd
jne
pop
pop
inc
cmp
adc
mov
push
push
cltd
shl
notb
outsb
pop
mov
xor
inc
dec
out
ja
adcl
stos
dec
repz
subb
mov
sub
xchg
xor
cmp
mov
mov
push
lahf
inc
jge
test
jae
push
test
iret
or
nop
mov
jp
bnd
lock
test
mov
push
push
inc
xchg
repnz
or
xor
stc
testl
jae
push
cmp
inc
loopne
les
std
data16
pop
pushf
mov
test
out
jns
push
iret
jecxz
neg
popa
mov
mov
inc
std
cmp
xchg
mov
jge
es
pop
pop
sbb
lods
dec
push
incb
mov
pop
jo
sub
clc
imul
mov
xor
add
xchg
jl
je
xor
hlt
sarb
cli
insl
push
pop
sbb
in
std
daa
xor
arpl
outsb
jbe
adc
xchg
mov
rorb
jbe
fisubrs
xchg
cwtl
setg
fldl
lahf
xchg
test
cmpsl
mov
push
sub
ret
pop
sbb
fs
sub
movsb
insl
adc
sti
imul
lret
sub
inc
mov
add
push
adc
mov
aaa
adc
cmpsb
adc
cmpsb
bound
sub
je
jmp
cltd
cmc
push
push
xor
xchg
cs
push
xchg
jne
loope
out
lret
inc
shll
lret
lods
sub
jle,pn
xor
adc
int3
repnz
in
sbb
cmpsl
push
movl
xor
popl
sub
ss
dec
rcr
mov
aad
xchg
aaa
cmp
adc
mov
std
pop
ret
and
xchg
mov
repnz
push
sub
outsb
push
out
es
pop
fdivs
movsb
pop
and
clc
xchg
push
gs
sar
sub
jl
pop
fwait
xchg
out
dec
pusha
or
lret
dec
jo
mov
dec
lods
les
pop
sub
loopne
xor
insl
enter
enter
mov
fsubp
xor
push
push
or
lds
xchg
sub
adc
scas
lock
sub
repnz
pop
sub
xor
dec
push
pusha
inc
rorb
or
hlt
xchg
nop
dec
inc
and
add
push
jne
add
pop
push
add
cmpsl
in
sbb
or
and
mov
ficoms
popf
dec
sbb
mov
js
js
sub
rcrb
xor
sar
in
pop
ficoms
mov
movsl
add
repz
imul
sbb
outsl
pop
mov
stc
adc
arpl
pop
popf
cwtl
push
lret
fwait
inc
adc
cltd
lcall
xor
jecxz
or
cmp
add
or
pop
mov
inc
dec
pop
hlt
jnp
in
fistpl
outsb
xchg
call
adc
inc
cmp
mov
mov
mov
sbb
cwtl
mov
lods
test
mov
jae
outsl
pusha
push
cmp
pushf
adc
and
mov
dec
daa
mov
pushf
leave
inc
push
or
aas
out
and
rorb
jno
jae
pop
mov
cmpsl
mov
popf
fsubrl
inc
adc
test
cli
data16
rcll
shlb
mov
jb
and
les
std
jecxz
mov
adc
jns
jmp
add
ret
pop
lahf
cmp
or
jle
pop
dec
and
xor
daa
in
mov
jb
icebp
insb
or
jb
sbb
divb
pop
xchg
leave
pop
pop
cmovbe
pop
mov
fcomi
xbegin
xor
xchg
stc
ret
cli
ja
js
mov
int
jb
dec
mov
stos
scas
lds
add
scas
ret
mov
repnz
testl
fs
iret
cmc
fcomp
addl
sbb
mov
clc
insb
add
dec
rorb
jne
cld
or
repz
add
loop
jo
iret
movsl
out
popa
inc
and
pop
rcrb
jne
mov
mov
cld
jcxz
inc
sub
stos
xor
sahf
xchg
push
js
adc
add
cmp
push
mov
xchg
loope
xor
add
xchg
jecxz
ret
sub
xor
fldt
mov
scas
push
lahf
cli
sub
sub
jnp
xchg
jnp
sub
dec
add
fisubs
mov
aaa
sbb
dec
fcmovnu
roll
lock
lret
inc
or
test
mov
sbb
lock
stos
sub
or
or
push
sbbb
sub
jno
aaa
xor
dec
outsl
xchg
stos
xor
jb
mov
fstps
push
adc
cs
xor
mov
aaa
cltd
mov
jne
mov
push
cwtl
mov
leave
not
clc
pop
or
mov
mov
cmc
add
rorl
movsl
lods
lock
xchg
cmp
push
sub
shr
mov
add
in
gs
jg
mov
mulb
xchg
add
js
enter
cwtl
es
bound
add
xchg
fcmovne
pop
cmp
test
sub
sub
pop
std
push
push
mov
adc
fsubs
stc
and
mov
jne
cwtl
shl
sub
adc
sahf
adc
outsb
and
sub
outsb
bound
loopw
xlat
mov
jno
pop
push
mull
addr16
repz
das
xchg
jle
fbld
mov
jb,pt
sahf
loopne
int
adc
dec
mov
inc
jns
sub
aas
mov
cmpsl
pop
and
ret
and
popf
xchg
cmp
pop
xor
lahf
inc
aam
daa
fdivrs
shlb
das
fdivp
arpl
shlb
add
add
mov
lret
fld
jg
fiadds
xor
mov
sbb
mov
mov
fs
xchg
sub
test
pop
jmp
pop
dec
xchg
push
sbb
js
cwtl
mov
cwtl
jle,pt
jge
stos
mov
movsl
inc
lahf
mov
jae
sar
mov
shl
push
shlb
add
js
lods
pop
push
sub
nop
mov
inc
jl
mov
lock
add
or
out
xchg
mov
in
movsl
mov
add
imulb
mov
mov
push
call
mov
mov
test
out
stos
mov
sar
dec
mov
mov
incl
loop
lods
dec
xchg
add
jb
sbbl
ja
popa
std
aas
out
shr
xor
pushf
pop
imul
add
pop
mov
xchg
add
inc
sbb
lret
stc
lret
scas
div
stos
adc
inc
push
lcall
stos
xor
push
mov
aaa
mov
or
cmpl
xor
adc
stos
push
es
mov
dec
mov
push
jge
cmp
aam
jg
insl
cmp
cli
add
icebp
scas
fs
adc
rcl
insl
jns
shll
in
push
push
std
pop
jl
pop
cltd
inc
push
enter
addr16
mov
clc
mov
ret
cmp
or
jns
fcoml
test
insl
lea
clc
lahf
xor
lock
loopne
mov
mov
and
mov
adc
mov
in
into
dec
fsubr
adc
adc
sti
movsl
mov
pop
sub
insb
dec
int3
mov
fisttps
fdivrs
fnstenv
outsl
clc
or
pop
jl
inc
sub
arpl
enter
pop
pop
dec
lods
pop
adc
loope
add
aam
and
in
cmp
mov
pop
stc
rcll
dec
jno
or
inc
es
ja
call
sahf
push
inc
movsl
lods
jge
testb
mov
push
imul
mov
push
jecxz
push
outsl
out
mov
xchg
aam
sub
or
sbb
jg
cmp
mov
lea
outsl
je
pop
or
int3
xlat
ret
cld
or
or
stos
jae
inc
pop
jb
push
repz
call
mov
jno
int3
int3
mov
inc
jle
xchg
scas
xor
add
cmp
in
mov
cmc
fisubrl
add
push
dec
sbb
enter
mov
fadd
cld
jo
sahf
in
push
fidivrl
movsb
mov
jmp
mov
decl
call
xchg
test
cmp
cltd
cli
lods
ffree
out
clc
iret
cmpsb
stos
testb
insb
cmp
popa
leave
jns
mov
adc
push
sub
push
fisubrs
out
add
repnz
cli
sti
int3
lods
iret
sbb
mov
dec
inc
jl
and
sub
lods
es
sbb
imul
inc
sub
adc
aas
mov
sbb
push
mov
lahf
cwtl
jbe
lods
outsb
ss
mov
and
lods
insb
sbb
xchg
jb
rclb
sub
xorb
fsubs
popa
dec
or
jno
and
mov
inc
stc
add
lods
neg
push
add
lret
fstps
ficompl
mov
pop
aam
ret
pop
icebp
jl
xor
xor
rcll
or
cmpsl
rcr
enter
xor
xchg
ds
lods
je
push
adc
clc
jo
subb
mov
fucom
addr16
aam
or
sub
or
imul
fwait
or
movsl
xchg
dec
jle
in
outsb
push
or
push
cmp
ljmp
dec
divl
mov
fsubrs
mov
and
out
mov
into
mov
icebp
sub
jge
mov
pop
in
dec
add
push
mov
adc
outsl
popf
gs
xor
xor
mov
es
fisubs
push
data16
push
adc
lahf
mov
test
sbb
clc
lods
insb
mov
std
test
jno
or
jb
mov
mov
out
scas
shll
mov
std
inc
cs
xchg
lea
push
inc
call
clc
out
fldenv
or
mov
push
out
mov
test
lret
testb
or
dec
loop
repz
iret
movsl
ljmp
add
adc
or
rorl
aaa
xor
mov
or
xor
and
adc
or
subb
fisubl
fcmovb
int
xor
or
push
movsb
add
sub
rolb
stos
lcall
jl
sbb
insl
xorb
mov
inc
repnz
test
test
mov
mov
cltd
pop
scas
mov
clc
gs
cwtl
sahf
fcoml
jmp
and
or
lds
decl
jecxz
insb
fwait
xchg
dec
ror
jl
push
add
dec
mov
nop
dec
rcrb
push
mov
push
rcr
shll
aaa
cmp
jne
fidivs
fcmovnu
sub
push
add
sub
ljmpw
aas
adcb
dec
jno
mov
jle
ret
mov
mov
or
ret
sub
pop
negb
push
aas
ss
arpl
sbb
xor
mov
or
adc
sti
hlt
inc
test
int3
inc
xchg
sub
movsb
dec
popa
mov
jmp
and
xchg
xlat
dec
cmp
mov
or
adc
hlt
or
cs
hlt
jle
loop
lret
sub
inc
add
das
xor
dec
int
repnz
or
mov
shl
cli
fiadds
sub
add
gs
rcrl
sub
adcb
and
or
adc
pop
sbb
test
fdivl
push
inc
imul
gs
hlt
aad
nop
aad
fs
fistps
jns
ss
cmp
cwtl
das
outsb
xchg
push
xchg
fwait
cmpsl
outsb
filds
nop
cltd
push
sbb
fwait
into
and
push
sbb
movsl
xor
dec
jb
fisubs
pop
and
inc
call
pusha
loop
or
mov
enter
jge
xchg
push
push
test
pop
loope
inc
ret
cmp
lods
push
push
jb
repz
int3
cmpsl
loop
xchg
hlt
mov
add
sbb
add
subb
sub
movb
xor
fmuls
stc
mov
scas
mov
loop
push
decb
pop
cmp
push
mov
mov
mov
fucomp
pushf
aad
xor
mov
cli
scas
cmp
cmc
push
insb
addr16
cmp
sbb
int
mov
repnz
repz
out
xchg
filds
ja
jae
dec
or
inc
sbb
mov
dec
dec
jns
push
in
jb
push
icebp
insl
xchg
pop
into
xchg
pop
cld
push
arpl
icebp
xchg
or
pop
jg
lcall
ret
sbb
adc
orps
xchg
push
push
sbb
mov
sub
cld
mov
adc
fistpl
lock
fcmovne
dec
push
ret
mov
mov
pop
dec
jno
xchg
adc
out
jns
mov
clc
lret
movsl
push
mov
push
test
movsb
rolb
or
cld
fstl
dec
mov
lret
push
bound
jecxz
push
mov
arpl
xlat
in
mov
pop
push
xchg
sbb
jo
cltd
popf
daa
cmc
jle
adc
xor
mov
jnp
or
or
outsb
xchg
loop
push
xor
in
cli
xchg
cmp
xor
pop
sahf
testl
test
mov
sbb
insl
out
aam
shrb
insl
adc
mov
in
fidivl
cmp
hlt
sbb
xor
insb
insb
cmp
das
mov
adc
xor
shll
push
mov
shlb
jle
test
call
jb
push
jnp
and
mov
cmpsl
addr16
loope
dec
lcall
add
repz
jno
cmovae
enter
mov
xchg
int3
jecxz
jne
pop
jne
call
es
mov
push
mov
pop
cmp
mov
je
jmp
orl
mov
adc
ret
and
jp
pop
cmp
pop
mov
add
and
stos
into
xor
scas
push
mov
sbb
push
das
out
mov
inc
jmp
cld
pminub
cmovns
enter
mov
add
imul
fld
fldcw
outsl
mov
popa
inc
xchg
loope
mov
xchg
sbb
and
dec
sub
push
dec
push
add
cmp
push
or
test
repnz
xor
add
roll
hlt
push
xchg
call
pop
inc
pop
or
mov
jmp
or
cmc
arpl
aam
dec
and
insb
mov
leave
aas
test
sahf
xchg
test
enter
push
push
ja
int3
adc
lock
outsb
sarl
push
adc
in
orl
and
push
inc
roll
lcall
xchg
stc
notb
and
pop
lods
sbbl
adc
or
mov
jb
lds
outsb
sbb
pop
jl
ljmp
repnz
lret
dec
outsl
jns
jecxz
mov
and
push
push
adc
xchg
aas
out
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
push
jl
les
pop
addl
push
test
xchg
loope
lret
jne
fs
jb
or
xor
dec
sbbl
and
cltd
in
mov
hlt
arpl
cld
add
je
divl
fisttpl
jb
fs
or
in
push
sti
cmp
push
std
jnp
repnz
pop
mov
sbb
dec
ret
sbb
dec
dec
test
jbe
sub
mov
push
mov
adc
mov
data16
cli
xchg
in
cltd
cld
cli
outsl
jb
fidivrl
inc
add
jb
test
mov
jbe
mov
lcall
in
pop
sbb
jmp
test
leave
das
mov
cmp
cmp
movsb
push
sbb
mov
mov
mov
mov
add
imul
mov
ret
cmp
jno
inc
dec
jl
ret
aaa
cmp
stc
rol
and
icebp
inc
cmp
ja
fsub
push
lock
adc
xor
les
repnz
aam
outsb
fistpll
js
roll
dec
inc
push
sub
cmp
cmpsl
mov
inc
inc
lret
lahf
sub
movlps
mov
and
lret
cmp
xor
or
dec
fldt
js
pop
ljmp
xchg
lods
daa
iret
loope
or
in
mov
or
lock
out
aas
out
dec
mov
aas
ss
push
cmp
arpl
outsl
mov
mov
mov
mov
push
loopne
rclb
push
testb
push
xchg
daa
clc
in
mov
into
mov
mov
mov
push
pop
arpl
mov
adc
xor
jge
dec
add
movl
and
fimuls
sahf
jb
jge
mov
icebp
lret
mov
out
into
sbb
mov
xchg
sbb
cmp
push
movsl
mov
mov
lea
andl
imul
xorl
xor
mov
mov
cmp
fs
loop
jg
bswap
mov
pop
pop
or
xchg
xchg
in
jns
push
stc
fs
insb
jne
stc
dec
mov
adc
or
xchg
mov
scas
sub
outsb
mov
adc
sbbl
jg
test
mov
inc
adc
sbb
jno
cwtl
lret
pop
mov
aaa
shrb
push
cmc
sbb
xor
js
sarb
popf
ja
clc
insb
cmp
loop
and
sub
call
cltd
add
jmp
das
jne
cmp
movsl
dec
jne
insl
and
ljmp
stc
icebp
ret
test
scas
iret
add
ljmp
jno
fsubs
ss
lea
cmp
in
lods
jmp
mov
out
lds
xor
movsb
popf
nop
into
imull
inc
and
add
movsb
inc
pop
push
cmpsl
lods
pop
popa
mov
mov
adc
shrb
arpl
sub
jl
inc
pop
inc
in
mov
xchg
xchg
fdivrs
mov
or
pop
iret
cmc
sbb
aaa
fildll
xchg
cs
and
stos
add
frstor
and
xor
std
xchg
ja
sub
cmpsl
outsb
test
pusha
sti
xor
mov
orb
jg
and
push
ja
dec
aad
ja
in
mov
pop
rclb
mov
fdivl
cmp
add
adc
rolb
dec
mov
or
lcall
test
sahf
push
adc
cs
mov
lods
fs
mov
mov
testl
popa
sub
dec
mov
add
pop
stos
adc
insb
sti
gs
cs
ja
inc
push
push
cmpsl
out
add
shl
cmpsb
jno
xorb
xchg
lret
mov
add
ljmp
subl
stos
xchg
cmp
xor
push
fsub
outsb
dec
in
mov
push
pop
bound
sbb
aas
movsb
rcr
adc
call
add
add
fstp
cmp
pop
push
loopne
inc
jge
cmp
stos
mov
movsl
mov
cmpsl
loop
push
out
inc
sbb
xchg
inc
jl
call
filds
es
ficoml
fwait
cmp
pushf
call
xor
cltd
cmp
mov
inc
or
rcl
cmp
jb
adc
inc
mov
mov
xor
mov
fisubs
sub
push
addr16
xorb
push
and
and
push
and
ja
jecxz
pop
mov
xchg
xchg
mov
idivb
push
or
inc
stos
adc
movsb
cmpsb
sbb
mov
mov
xor
mov
sub
cmp
pop
and
jno
pop
and
lea
stc
inc
xlat
sub
ror
test
pop
ret
push
stc
jne
into
mov
inc
cld
call
pop
xchg
fucomi
xchg
fcompl
dec
cmp
mov
aam
push
xor
adc
sti
cs
cmp
daa
mov
andb
int3
pop
inc
add
fistpll
test
add
icebp
scas
mov
aam
outsb
call
jmp
xor
ret
pusha
mov
sbb
out
insb
imul
xor
jb
push
pop
pop
add
adc
push
loopne
enter
ds
jge
pop
fwait
jecxz
fadds
mov
xchg
popf
adcl
mov
push
mov
cmpsl
jecxz
pop
xchg
mov
sub
lea
es
aas
popf
imul
jb
test
pop
mov
pop
dec
insl
jge
aam
pop
or
testb
lods
into
gs
shrl
adc
mov
xchg
mov
inc
lock
lds
xchg
pop
mov
mov
mov
dec
jmp
mov
loopne
fld
int
ljmp
popf
add
cs
cltd
dec
adc
mov
addr16
js
dec
in
push
scas
addl
scas
adc
mov
xchg
push
and
out
aad
hlt
jg
push
cmc
xor
mov
pop
sbb
ret
push
cmp
dec
pop
sub
mov
sbb
aad
clc
pop
sub
sub
cmp
or
dec
loope
push
rorb
xchg
rolb
pop
xor
mov
leave
dec
mov
rcrl
int3
jo
add
push
out
sarl
std
imul
in
lahf
pop
out
jnp
dec
xchg
cmp
lcall
sub
shr
insb
or
pop
sub
jae
or
dec
push
jp
add
dec
lcall
scas
xor
mov
dec
loope
mov
and
loop
jo
inc
mov
jl
push
push
sbb
or
cmp
jp
cwtl
pop
into
mov
mov
scas
pusha
ja
pop
aam
test
pop
or
dec
dec
test
imul
jnp
ja
jnp
fs
daa
mov
bound
mov
daa
pushf
xor
push
shlb
mov
mov
mov
jo
leave
fildll
jno
add
mov
mov
jecxz
pop
mov
mov
mov
out
or
push
imul
xchg
mov
icebp
repnz
mov
test
sub
int
ret
mov
xor
and
mov
mov
or
lcall
aam
call
nop
pop
push
or
int
mov
aam
sbb
repnz
aad
cmp
mov
xchg
int3
test
incl
pop
xchg
shll
adc
add
sub
or
xorb
cmpl
dec
fildl
icebp
loop
inc
jno
sahf
jmp
stos
mov
orb
daa
inc
push
push
aas
out
cmp
xchg
dec
test
xchg
cmp
lcall
xchg
fcoml
xor
xchg
sub
sti
mov
pop
int
push
imul
inc
aas
shl
push
jnp
in
mov
sarl
add
data16
stos
rcll
sbb
cmc
rcl
shll
icebp
xlat
dec
das
cmp
cltd
out
das
aas
aaa
push
cs
int3
fs
mov
mov
adc
cmp
repz
lret
pushf
fsubrl
xor
out
mov
xchg
int3
mov
lcall
imul
in
outsb
cmpsl
mov
jmp
jne
insb
popa
cltd
adc
adcl
popa
jae
iret
shr
movsb
outsl
pop
repnz
sub
mov
stos
inc
mov
pop
xlat
loop
cmp
in
repz
sbb
dec
outsl
sbb
cmp
test
lds
jne
jnp
mov
mov
into
sbb
and
imul
xchg
xchg
xchg
sti
daa
jge
imul
or
cmp
or
push
pop
rcll
sub
xchg
test
sub
stc
popf
mov
repnz
pop
jnp
test
mov
mov
mov
jae
and
lods
and
in
shll
das
jecxz
mov
jmp
pop
or
dec
add
roll
add
ja
data16
push
je
push
pushw
pop
leave
out
or
inc
adc
adc
nop
jg
inc
or
mov
lret
cltd
mov
cmc
and
orb
test
cmp
stos
jl
xor
scas
or
inc
mov
add
cmc
sub
fisubl
or
fwait
inc
xor
in
and
mov
addl
push
dec
gs
es
test
pop
add
out
xchg
cmpsb
push
movsb
mov
mov
aam
xor
push
dec
loopne
test
mov
insl
les
inc
and
cmc
sti
call
push
add
pop
pop
hlt
mov
pop
mov
das
leave
mov
js
or
pop
icebp
imul
mov
pop
ret
sahf
cmp
out
arpl
test
pop
out
testl
imul
adc
sub
nop
xchg
pusha
jb
xchg
adc
nop
adc
sub
icebp
cmp
pop
enter
loope
cmpsl
adc
jne
mov
xchg
push
cmpsb
lods
pop
sarl
je
cmp
ret
inc
andb
dec
xchg
stos
push
movsl
push
in
cmp
out
pop
test
fiadds
jle
xchg
pop
roll
outsb
js
xchg
xchg
ds
adc
dec
mov
sub
inc
je
push
lcall
dec
or
inc
xor
lcall
ret
dec
xor
loop
mov
mov
lods
loop
xlat
lret
ds
cltd
add
mov
std
cmp
xchg
imul
sti
push
vmovntps
inc
loop
int3
cmp
jmp
ss
iret
mov
stc
gs
je
mov
push
lods
cmp
pop
movsl
jmp
imul
inc
sub
pop
mov
call
insb
mov
jl
std
sub
xor
sbb
add
cmp
and
in
ret
pusha
adc
shl
incl
imul
xor
aad
sbb
in
sbb
scas
cmp
mov
or
add
sub
ja
adc
jo
push
and
in
and
sub
in
mov
and
xor
mov
je
bound
dec
sub
pop
mov
lcall
cmp
addr16
outsb
test
push
and
fcompl
and
lret
cmc
mov
xchg
mov
fstpl
cld
jge
mov
xchg
movsl
push
fcoms
mov
sub
jle
outsl
insb
mov
jne
fistl
popf
mov
pop
dec
sbb
xchg
push
ret
movsl
jmp
subl
mov
adc
sub
jno
in
xchg
mov
scas
mov
sti
mov
fdivp
push
jae
imul
bound
movsl
inc
lods
sbb
bswap
xor
sti
sbb
roll
mov
mov
addr16
sub
pop
mov
push
xchg
xor
sbb
inc
pop
mov
mov
cld
lods
or
cmp
push
dec
inc
cmp
aad
dec
ss
out
add
aam
dec
subb
out
sbb
int
movl
and
and
aas
ret
popa
cmp
popa
inc
jg
add
sahf
stos
in
imul
mov
cwtl
enter
fisttps
hlt
mov
mov
push
imull
dec
clc
sbb
lret
ds
cwtl
and
pop
cmp
push
xchg
stos
jbe
cmp
jp
ret
mov
push
push
pop
mov
movl
jo
orb
daa
or
std
insb
xor
andb
mov
inc
lock
lods
xlat
sub
lods
pop
je
mov
push
lock
cs
outsl
fsubrl
inc
int
add
outsb
cmpsl
inc
push
pop
into
aas
lahf
pop
xor
add
cmpb
xlat
adc
std
mov
lret
fwait
inc
or
inc
mov
nop
push
in
nop
cs
mov
xor
sub
in
xor
xchg
scas
mov
adc
xor
mov
dec
jg
inc
mov
inc
jmp
nop
adc
mov
jnp
outsb
pop
loop
push
add
pop
inc
test
inc
inc
inc
dec
imul
icebp
jb
call
shr
and
sti
jnp
shll
shlb
jb
ljmp
push
testl
add
cwtl
fistpll
mov
test
inc
out
sbb
arpl
mov
outsb
and
aas
jo
lret
sub
test
jmp
adc
and
and
out
cmp
ljmp
mov
xchg
sub
shrb
call
in
popa
stos
mov
or
in
add
sbb
out
outsl
mov
arpl
mov
push
fldt
rcrl
mov
out
push
fsubl
pop
push
fimull
sahf
ret
dec
adc
lods
nop
mov
pushf
lret
or
leave
sbb
jne
add
icebp
mov
fsubr
adc
dec
xchg
jg
stc
mov
stos
cltd
lods
cmpsl
cs
filds
xor
inc
pop
cmp
adc
loop
iret
pop
push
bound
ret
mov
nop
or
ss
sbb
adc
shrl
sarl
xor
or
cmp
jmp
imul
adc
mov
lods
cmc
inc
mov
mov
push
dec
mov
or
in
dec
rorb
sub
dec
fadds
enter
add
pop
mov
data16
pop
pop
mov
add
jp
pop
cld
push
cli
dec
lret
or
fistl
add
xor
in
push
xchg
in
cmp
test
and
stos
inc
loopne
insb
jp
das
ret
dec
jae
xor
adc
jp
imul
out
dec
xlat
loopne
arpl
sub
adc
sub
inc
xchg
xor
jae
push
icebp
je
popf
add
xor
bound
ret
pushf
inc
nop
and
sbb
add
pusha
xchg
jp
aaa
mov
sbb
xchg
test
sahf
scas
fwait
mov
dec
sub
and
push
or
cwtl
sub
sbb
jno
into
pop
test
jl
out
sbbl
out
ss
daa
adc
test
sbb
dec
aaa
push
jae
push
adc
push
scas
test
lret
inc
push
dec
ljmp
mov
bnd
out
dec
sub
adc
mov
or
pop
addr16
push
push
lcall
or
test
cmp
fmuls
test
mov
push
cmp
addr16
pop
dec
inc
xchg
movsb
sahf
out
xchg
xchg
mov
leave
add
mov
jae
or
xchg
pop
jle
int3
pcmpeqd
call
inc
shll
sub
pop
out
lods
jle
mov
cmc
jl
push
lret
movsb
in
scas
fsub
and
aam
and
out
mov
xor
mov
pop
fsub
and
outsl
cmp
lods
push
testl
or
sub
and
pop
adc
fcmovne
imul
dec
lods
hlt
xchg
vmovss
fchs
leave
mov
xor
lcall
push
imul
ljmp
and
ljmp
shrb
pop
subb
pop
mov
pop
add
stc
fldenv
mov
cmp
inc
adc
in
dec
inc
pop
cmp
ret
push
add
ss
ficomps
mov
lcall
dec
push
test
push
mov
mov
test
sbb
and
jle
sbb
inc
push
xchg
dec
xchg
mov
sbb
stos
movsl
lret
lahf
sub
sub
hlt
dec
inc
xchg
ljmp
or
mov
imul
int3
cmp
frstor
sbb
jbe
bound
inc
mov
outsl
iret
rcr
dec
loopne
sub
mov
xchg
inc
or
jnp
mov
cmp
xor
jl
push
loope
sar
and
adc
xchg
stos
repnz
arpl
xor
jecxz
push
inc
push
cmp
test
mov
fisubrs
adc
push
mov
jg
inc
jmp
into
push
jae
fstp
inc
mov
dec
or
in
std
dec
xlat
lret
jl
fisubrl
or
insb
cs
cmp
outsb
sbb
clc
cmp
jp
data16
fsubrl
pop
mov
inc
popa
mov
push
int3
mov
cmp
inc
push
ljmp
sub
stc
xchg
or
lret
stc
jl
mov
imul
cltd
adc
pop
cli
xorb
mov
fldl
jne
fstpt
imul
int3
jb
cli
je
jb
ficomps
or
cmp
adc
fdivr
mov
mov
push
js
mov
pusha
inc
push
xchg
ljmp
negl
cltd
push
push
fdivrs
das
fdivs
xchg
add
inc
stos
mov
aam
call
dec
xor
test
pop
push
gs
sbb
cmp
xchg
sub
addr16
divl
leave
lret
cmpsb
decb
cwtl
jge
pop
push
pop
notb
in
and
xchg
cmp
cmp
xchg
mov
xor
jmp
add
outsl
cwtl
das
cmp
pop
fisubrs
jg
out
popf
hlt
mov
sub
jae
push
clc
inc
jp
push
jl
fnstcw
push
mov
popf
mov
es
xchg
add
into
mov
push
iret
negb
fs
adc
xchg
jg
cmp
into
and
ficoml
push
inc
icebp
mov
movsl
mov
jecxz
mov
xchg
cwtl
movsl
and
sub
pop
sbb
fcmovu
adc
daa
in
jge
jmp
or
dec
jge
testb
int
jecxz
dec
xor
adc
test
push
aam
xchg
xor
sub
je
subb
inc
insl
lods
popa
notl
sub
ja
cmp
inc
pop
push
lret
sti
ljmp
pushf
lds
repz
pop
loopne
test
aad
pop
or
sbb
cmp
adc
jne
xchg
xchg
xchg
int3
mov
mov
std
inc
insb
out
subb
mov
scas
jg
outsl
iret
mov
int
pushf
shl
cld
inc
aam
mov
adc
pop
imul
mov
jns
and
xor
jecxz
jg
sti
es
jmp
xlat
add
pop
xchg
cmp
ret
sbb
push
pop
les
lods
mov
shl
fucomip
inc
push
jns
push
sarl
cltd
jge
inc
pop
sarb
mov
mov
mov
scas
xor
clc
sub
xlat
and
cmp
fsts
ret
scas
cmp
data16
out
cwtl
test
add
and
pusha
mov
outsb
scas
int3
popa
mov
aad
outsl
fiaddl
cmp
or
movb
cmp
xchg
int
sub
sub
push
and
inc
jno
movsl
sbb
rcrb
dec
clc
sbb
push
inc
sub
jno
lods
insb
pop
je
pop
daa
xchg
out
xchg
or
push
jne
add
into
nop
xor
add
leave
das
das
negl
andl
jb
ffree
xchg
inc
pop
mov
or
push
pop
aas
rol
pop
xor
add
adc
sub
jecxz
js
push
jne
push
or
mov
jp
pop
mov
fists
mov
aam
sbb
sbb
jb
sbb
out
call
iret
jns
es
fiadds
dec
push
mov
iret
mov
and
mov
or
pop
jmp
fs
shrl
jg
mov
add
int3
jge
int3
and
into
sbb
xchg
sbb
negw
add
and
out
mov
lret
xor
add
rcr
shrb
mov
ret
fwait
mov
dec
sub
mov
lret
push
sbbl
jmp
mov
mov
fidivrl
stos
lds
inc
mov
cli
jle
sbb
or
jne
pop
mov
sub
cmc
jns
add
rep
lcall
in
mull
fwait
pushf
out
lods
adc
sbbb
jle
pop
out
inc
jp
mov
out
lods
lret
insl
sbb
scas
mov
fdivr
mov
dec
leave
add
aaa
mov
dec
push
mov
sarb
inc
and
insl
test
or
and
ljmp
call
popa
xor
jbe
imul
call
and
leave
sbb
sub
fcomps
adc
and
pop
inc
fldl
fisubrl
and
out
inc
and
pop
jmp
popf
push
pushf
cmp
aam
inc
test
cmp
arpl
gs
pop
test
inc
mov
xchg
rorl
int3
es
bound
fwait
adc
sub
and
mov
xchg
es
out
jmp
push
test
push
repz
sub
dec
int
fisubs
xchg
xlat
aad
call
lret
adc
xchg
leave
dec
outsb
xchg
mov
adcl
movsb
or
add
cmp
das
and
aad
sbb
sbb
mov
xchg
out
movsb
call
adc
xor
pushf
pushf
mov
push
xor
dec
jecxz
and
xlat
xlat
push
jnp
aas
jnp
pop
loopne
adc
lods
lahf
adc
lods
xor
push
call
les
fst
iret
dec
pop
jnp
cmp
movsl
pop
lock
fcom
ficoml
push
inc
or
mov
outsb
push
or
inc
fstps
mov
pop
xchg
pop
push
in
or
inc
shrl
push
fucomi
andb
dec
mov
pop
sub
in
ja
mov
mov
cli
movsb
sbb
xchg
lods
cmp
ds
sbb
cmp
jne
inc
insl
jmp
dec
into
test
xchg
xorl
pop
add
pop
xor
jne
movsb
lret
arpl
pop
daa
outsb
fwait
ds
out
js
add
push
aaa
scas
jne
icebp
fsts
push
lods
ret
lahf
xor
sbb
sahf
stc
gs
rol
cmp
test
mov
mov
xchg
les
xchg
outsl
or
or
xorl
in
jecxz
imul
xor
stc
imul
pop
js
iret
dec
adc
sahf
cmp
push
adc
pop
rclb
shrb
and
lahf
jmp
or
sbb
adc
out
cmp
scas
ja
sbb
adcb
cs
mov
cli
sbb
adc
mov
add
into
cld
scas
add
popfw
decl
xchg
cmpsb
cmp
cs
fbstp
add
mov
stos
and
and
ficomps
bnd
in
jne
pop
or
fsubp
jns
scas
loope
scas
add
inc
add
insl
dec
inc
xlat
push
sbb
or
mov
insb
mov
push
xchg
shrl
stos
mov
ja
and
les
ffree
ljmp
push
mov
in
sub
out
push
pand
scas
fiaddl
loop
rcl
and
jno
jb
movsl
cmp
pop
cmp
sbb
pusha
dec
mov
imul
sbb
adc
push
sub
js
aam
dec
xorb
or
imul
sbb
sbb
ds
cmpsl
jge
mov
movsb
xor
pop
mov
xchg
inc
sbb
mov
adc
jnp
iret
cwtl
scas
push
or
jecxz
add
xchg
loop
aam
movsl
push
int
adc
frstor
enter
inc
mov
pusha
xchg
nop
and
or
aad
sbb
adc
cli
icebp
sbb
enter
xlat
test
xor
test
in
jle
test
stos
je
popa
pop
dec
cmp
cmc
pop
in
sarl
sub
int
cmpsl
scas
lret
lock
pop
adc
xchg
adcl
pop
sub
fstps
push
das
test
cmp
add
cmp
push
jmp
rorb
jbe
sub
or
mov
mov
jne
jne
shlb
icebp
cmp
or
movsl
mov
fsubl
pop
daa
out
out
fwait
xchg
hlt
insl
push
inc
jne
push
dec
loopne
adc
add
mov
adc
xchg
mov
out
sbb
push
in
jecxz
cwtl
xchg
pusha
fsubs
add
dec
adc
sbb
dec
adcl
aas
arpl
push
add
fdivl
mov
and
lret
or
lds
cmp
arpl
adc
insb
push
xor
mov
jns
out
adc
sub
xor
lods
push
insb
loope
loop
fstl
bound
out
sub
sub
mov
ja
push
daa
xor
push
outsw
pop
or
inc
sbb
gs
in
cmp
jbe
movsb
ja
xor
mull
mov
dec
adc
sbb
je
hlt
jbe
xlat
cmpsb
jmp
adc
sti
mov
in
sbb
dec
iret
cmp
das
mov
popa
mov
sub
add
mov
jno
or
pop
xchg
pop
or
cmp
xor
adc
or
data16
xchg
out
shlb
mov
rolb
jns
repz
cltd
insb
lods
dec
lahf
adc
mov
outsl
shll
sti
rcl
cltd
les
xor
cmc
mov
mov
lahf
pusha
aaa
inc
jmp
cmp
xchg
sbb
fists
sbb
or
cmp
cli
inc
sbb
aaa
stc
movsb
pop
push
call
lret
ja
mov
pop
fwait
inc
mov
orl
cmpsb
repz
sub
loopne
jb
fstps
leave
cli
mov
lret
sbb
test
stos
ss
or
push
lcall
pop
inc
dec
out
in
lock
mov
mov
loope
js
sub
dec
jge
xor
dec
adc
cmp
orb
sarl
ds
fs
cmp
sahf
adc
hlt
ss
pop
loop
leave
iret
xor
pushf
mov
in
int
jnp
push
fisttpll
jl
inc
sbb
bound
and
inc
popf
test
aad
adc
jp
std
sbb
in
fbld
cmp
sti
jbe
mov
jg
mov
mov
ljmp
mov
stos
dec
jle
and
lock
dec
and
mov
shlb
lahf
xchg
fbstp
xor
test
mov
fcoms
fbld
aaa
mov
repnz
cmpl
lahf
jne
dec
and
cmp
jle
xchg
inc
fcompl
dec
push
scas
sub
data16
rolb
mov
lcall
dec
sub
add
cmp
clc
ljmpw
ljmp
out
and
mov
add
or
aam
roll
adc
jl
lret
mov
enter
fidivs
outsl
or
mov
mov
out
ds
mov
insb
enter
mov
mov
cmp
idivl
lods
int
mov
std
cmp
fwait
pop
push
sub
das
clc
int3
sub
test
jne
mov
stos
test
sbb
movsl
adc
and
mov
mov
loopne,pn
inc
pusha
or
mov
jns
test
jae
int3
fs
dec
cmpsl
push
cli
pop
cmp
les
cltd
inc
mov
push
mov
fsubl
add
cld
imul
stos
andl
push
enter
pop
mov
jb
fsubrp
xor
rcrb
jecxz
loope
fs
rcrl
jne
xor
in
xor
or
fwait
lods
aam
adc
xchg
and
xchg
pusha
js
mov
mov
repnz
cmp
popf
mov
and
and
cli
pop
lods
mov
and
jno
sbb
xchg
jbe
das
outsb
mov
mov
xchg
nop
or
jle
lods
ja
repz
xchg
fs
pop
fstps
cs
push
aaa
and
test
repz
mov
scas
xchg
xorb
cmp
popa
iret
lock
jle
aad
ret
imul
fildll
flds
pop
fs
stc
xchg
mov
cmpsb
test
das
lea
sbb
cmc
js
outsb
push
sbb
inc
loope
push
jmp
push
jmp
xchg
add
fsubrp
test
rol
mov
and
jecxz
loope
jmp
into
loopne
popf
mov
fbstp
ffree
leave
sbb
ret
rcl
std
loopne
and
test
cmp
inc
adc
daa
movsb
ret
sbb
dec
xchg
fwait
gs
sub
inc
mov
add
es
push
mov
data16
xchg
mov
aam
dec
aad
notb
enter
out
in
out
fimuls
aam
jne
xchg
xchg
sahf
xchg
push
inc
add
cltd
notl
aaa
cmpsl
xchg
dec
xchg
and
cwtl
sbb
idivl
out
inc
dec
jbe
into
sub
sub
mov
push
mov
mov
cs
ss
ret
test
gs
add
je
fbld
adc
sbb
mov
sbb
xor
stc
lret
outsb
xor
cli
xor
adc
push
inc
frstor
shll
aas
lahf
xor
out
push
push
andb
imul
fadds
and
inc
out
pop
mov
mov
nop
cmpsl
mov
pushf
pushf
sub
lret
push
sbb
cmpsb
ss
pop
dec
out
jbe
xchg
mov
out
sub
add
xor
outsl
push
jge
mov
fcomip
xor
sbb
jmp
xor
mov
sbb
mov
xor
lahf
or
aaa
pop
jb
jle
sub
xchg
mov
fnstenv
pop
fistps
psrld
enter
mov
fistpl
jo
sbb
dec
pop
inc
mov
add
sbb
mov
les
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
aad
scas
addl
push
mov
iret
xor
push
push
insl
inc
movsl
in
dec
sti
adc
gs
ljmp
aam
mov
jge
dec
stos
int
repnz
cmc
cmp
rol
sub
inc
cltd
imul
int3
xchg
mov
movsl
inc
clc
and
and
shrl
pop
push
es
inc
jg
add
push
jb
scas
imul
dec
enter
mov
popf
outsb
jecxz
lcall
xchg
jns
test
std
cmpsb
stc
fwait
ds
sub
out
loopne
in
pop
in
jne
and
das
or
xor
loope
sbb
cli
adc
push
mov
shrl
repnz
xor
clc
jae
imul
sub
stos
mov
mov
test
pushf
cwtl
std
jmp
fdivrl
out
pushf
lcall
push
int3
cltd
test
mov
fucomp
or
paddusb
daa
push
pop
std
cmpsl
adc
mov
jg
xchg
pop
dec
cmp
sbb
movsl
push
xchg
popf
cltd
aam
sahf
jge
cwtl
add
pop
popa
in
in
inc
aad
hlt
adc
mov
and
inc
imul
iret
mov
cli
xor
mov
pusha
outsb
add
xchg
bound
mov
push
and
adc
movsl
call
adc
cld
lock
push
inc
sbb
xchg
sbb
inc
incl
pop
movl
add
or
pop
jne
xchg
mov
xchg
xorl
test
jge
in
dec
xor
test
int3
popl
and
inc
arpl
rcrl
out
inc
add
add
movsl
mov
mov
cli
stos
sbb
pushf
mov
xor
fsubr
jns
mov
xchg
xchg
sub
fsubp
out
mov
push
pop
inc
mov
inc
dec
mov
les
cmp
xlat
xor
adc
sbb
lret
pop
and
data16
andb
push
mov
in
leave
aam
les
jecxz
repz
bound
sti
lret
lods
scas
aam
inc
call
ss
jmp
ret
mov
lods
popl
mov
pop
inc
xor
push
jp
pop
mov
je
out
jle
push
sbb
jae
shlb
pusha
and
or
add
or
jne
ds
filds
mov
lret
hlt
jle
add
ja,pn
idivb
orl
stc
hlt
outsl
mov
les
sub
cmpb
mov
sahf
sti
cmp
scas
rcrl
aam
std
call
repnz
outsl
xchg
out
aad
jmp
mov
cwtl
rorl
cmpl
xchg
lock
test
cmp
fisubrs
and
flds
ret
lock
fwait
out
lret
cmp
dec
cmpsb
aam
adc
scas
in
inc
dec
lret
popa
or
fwait
shlb
out
and
cli
and
shlb
dec
mov
adc
aad
push
sub
push
js
pop
xorl
mov
push
sbb
pop
cwtl
call
call
dec
dec
or
jb
mov
push
jl
xor
cmp
and
adc
popf
movsb
lds
xchg
xor
xchg
imul
cmpsb
rcll
xor
xlat
hlt
vpcmpeqb
and
fs
adc
adc
pop
add
push
mov
lock
jle
fsub
clc
rorb
dec
std
lcall
sbb
pusha
push
jb
xor
and
xchg
cltd
out
sarb
cmp
aas
dec
mov
mov
cmpsl
pop
dec
sarb
adc
cmp
shrb
mov
mov
or
and
jmp
out
mov
out
pop
notl
fdivrl
mov
jb
lahf
and
gs
and
mov
fdivrs
pop
sub
out
adc
push
mov
push
mov
mov
xor
add
jnp
and
and
rorl
out
loop
xchg
and
jmp
sub
sub
lcall
push
cmp
les
cli
mov
pop
adc
inc
inc
loopne
daa
add
cmp
xorl
mov
cwtl
mov
mov
mov
and
pop
jnp
cmp
ja
jge
mov
and
int3
inc
lcall
ret
pusha
push
xchg
pop
sub
loopne
xor
into
loope
rcl
lods
leave
jle
notl
fsubr
movsb
dec
pop
and
adc
scas
jge
jp
andb
xchg
fstps
stos
sarl
fisttpl
scas
sahf
push
rolb
pop
sub
adc
and
pop
int3
add
in
lea
push
loop
mov
imul
pop
repz
test
cmp
or
aam
xchg
mov
xchg
sub
and
aad
pushf
int
or
pop
arpl
mov
arpl
adc
movd
inc
fdivs
roll
push
mov
in
scas
out
mov
pop
add
pop
lret
pusha
mov
push
test
cmp
adc
test
cmc
xor
and
jmp
ret
dec
shll
ja
icebp
insl
sub
inc
test
loope,pn
es
daa
insl
sahf
ds
movsb
mov
fcomps
out
repz
inc
fnsave
iret
out
int
out
scas
inc
push
fs
pop
aas
ljmp
fwait
push
in
lea
out
ss
xchg
inc
outsb
xchg
jmp
jns
imul
dec
xor
inc
fisttpl
pop
pushf
mov
mov
add
movsl
loope
push
xor
add
jecxz
jmp
sub
frstor
mov
test
mov
fucomi
mov
jge
loopne
mov
adc
stos
lret
push
pop
cltd
mov
int
int
jns
add
out
dec
xchg
out
dec
or
pop
mov
hlt
or
or
push
out
lods
aaa
out
pop
ret
mov
outsl
insb
adc
ret
push
push
int
mov
mov
aaa
push
gs
pusha
cmc
aas
movsb
mov
loope
jne
popa
pop
scas
fld
sub
push
xchg
loop
jp
push
lock
into
xor
pusha
out
mov
aam
shlb
sub
ds
enter
xchg
sbb
adc
mov
inc
out
xchg
add
and
pop
dec
inc
dec
jo
push
stc
xor
or
hlt
insb
or
xor
insb
pop
ret
nop
push
clc
pusha
push
fwait
mov
jl
test
pop
movsl
adc
jo
test
aaa
pop
xchg
push
xor
sub
jmp
pop
cmc
and
es
xorl
mov
jle
enter
loopne
mov
or
mov
scas
lock
cmpsb
shlb
sub
mov
mov
stc
and
push
xor
sbb
lods
fldcw
push
xor
mov
rorb
jae
adc
or
mov
out
xchg
cmp
das
enter
out
pushf
jmp
repz
cld
mov
push
outsl
sub
jp
adc
cwtl
js
mov
xchg
push
outsb
std
fisttpll
out
out
mov
mov
sub
cs
adc
add
or
sub
out
scas
into
aaa
repnz
mov
jmp
in
dec
incl
gs
test
imul
jno
sahf
lock
and
stc
xchg
or
adc
jno
cmp
lea
mov
pushf
xadd
pop
pop
push
jle
clc
call
mov
out
mov
cmc
adc
in
jmp
loope
pop
xchg
cmp
or
pop
jecxz
ficompl
cmp
and
inc
fmuls
add
or
fmul
lods
cs
add
add
ljmp
outsb
push
shll
and
pop
sbb
enter
mov
mov
xchg
sar
dec
mov
xor
or
jl
jmp
adc
movsb
in
inc
and
xchg
mov
xchg
hlt
test
popa
imul
sub
push
rcr
imul
xor
mov
cmp
push
mov
enter
ds
loopne
movsb
lock
dec
mov
mov
jge
mov
inc
hlt
mov
and
jo
cmp
lahf
xor
data16
cmp
fadds
xor
pop
push
lea
cmc
jg
adc
push
nop
cmpsl
mov
int
and
xchg
jbe
mov
xchg
cmpps
sbb
and
lret
xchg
lcall
xor
inc
pop
movsb
les
cmp
in
dec
cs
dec
adc
decl
mov
add
xlat
jno
pusha
inc
push
into
out
or
call
dec
int3
lods
pop
leave
pusha
push
add
fnstcw
jbe
mov
fcomip
or
jp
xor
xchg
dec
cmp
pop
ss
insb
inc
aad
jb
fcomip
frstor
aad
xor
fildll
mov
insl
addr16
xchg
xor
in
out
fadds
int
ja
mov
jmp
push
iret
pushf
adc
and
mov
adc
pop
push
xor
cmp
mov
add
mov
mov
leave
scas
sbb
or
subb
inc
add
push
dec
jbe
cmc
hlt
repnz
aas
dec
cs
loopne
pop
dec
dec
inc
mov
add
or
mov
mov
jnp
cmc
jno
add
popa
cmp
adc
pop
xor
pop
pop
add
cmp
out
jae
lahf
cs
pop
pop
scas
lock
cmp
push
das
test
lahf
push
adc
adc
xor
mov
jecxz
jo
ds
in
and
pop
inc
sbb
sub
push
lret
cmp
in
mull
inc
adc
jp
mov
out
push
in
mov
adcb
and
and
call
test
test
imul
xchg
shll
mov
test
jae
push
out
mov
jge
push
dec
jb
pop
sub
subl
xchg
arpl
cld
lcall
add
xchg
adcl
aas
mov
jle
cmp
add
sbb
xchg
xor
sahf
test
dec
jne
adc
sub
mov
ja
mov
jnp
cmp
pop
lods
and
sbb
xchg
mov
inc
dec
daa
fidivrl
lret
and
inc
or
cwtl
repz
push
divl
jl
cmp
dec
outsb
movsb
mov
sub
cwtl
data16
fildll
jp
incl
cmpsl
jno
fidivrl
bts
out
pop
inc
mov
dec
inc
adc
cmp
jmp
sub
inc
mov
push
or
sub
std
cld
push
subb
aas
sbb
into
inc
icebp
repz
fwait
jno
popf
xchg
fdivs
mov
test
or
gs
adc
in
scas
cltd
mov
out
dec
push
adc
fcompl
jo
jp
jecxz
dec
cld
inc
and
aas
insl
fwait
inc
or
push
mov
sub
popa
stos
pop
mov
push
mov
xchg
mov
enter
jl
cmpsl
or
stos
sbb
add
cmp
shlb
add
cmp
or
sub
push
xchg
imul
icebp
arpl
rcrb
subb
and
push
call
cs
out
js
loope
in
jge
push
fidivl
iret
popf
mov
loopne
sarl
or
jmp
lcall
jmp
scas
jne
in
call
lret
cmc
mov
loope
cld
inc
out
mov
or
mov
xchg
jne
sti
mov
jns
lds
sub
negl
dec
testb
clc
xchg
jae
sarb
fs
roll
mov
addb
dec
xor
cmp
cld
mov
mov
mov
mov
add
push
es
adc
sarl
push
stos
test
jb
dec
lods
jbe
enter
jmp
sub
pop
mov
mov
xchg
cmp
mov
or
roll
pop
imul
cli
filds
push
adcb
lock
xchg
inc
xchg
sti
cmp
mov
inc
loop
mov
scas
add
fstpt
add
mov
sti
in
sub
push
sarb
insb
push
xchg
jnp
sbb
mov
mov
jne
push
lds
jns
cmpsl
inc
adc
jmp
movsb
mov
fisubs
jecxz
sbb
xor
xchg
cs
push
daa
push
lret
xor
fildl
jbe
sub
or
out
into
jg
xor
leave
adc
pop
test
pop
sbb
loopne
or
lods
ret
jno
les
popf
push
xchg
loope
adc
hlt
cmp
insl
push
popa
sbb
into
mov
in
int3
sbb
cmp
dec
pushf
loope
push
ret
data16
ljmp
fnstsw
outsl
mov
pop
adc
addr16
movb
orl
stc
test
popa
sbb
cmp
pusha
mov
psubd
scas
xchg
push
jmp
scas
fs
lahf
push
in
in
ret
fstps
stos
and
mov
xor
push
lods
icebp
push
add
sbb
and
pop
dec
or
adc
sar
fisubl
cli
cs
cmp
xchg
iret
sahf
aas
jg
ljmp
mov
mov
jle
decl
mov
jge
mov
mov
mov
cld
insb
sbb
adc
add
rep
adc
pop
pop
or
xor
sysenter
xor
and
enter
imul
dec
aas
push
mov
in
xor
movsb
test
fnstsw
pop
neg
lods
and
pop
jo
and
inc
aad
and
cli
lods
or
sarb
push
sbb
clc
in
adc
xor
xchg
addr16
in
pop
xor
pop
mov
aam
outsb
imul
into
xchg
cmc
cli
add
xlat
cmpsl
lret
icebp
and
pop
push
jo
push
push
cwtl
mov
push
lock
roll
push
pop
mov
into
andl
or
cmp
and
cmp
nop
cld
insl
test
jecxz
push
or
jns
sub
imul
int3
mov
cmc
mov
mov
jge
mov
dec
mov
das
cmp
ja
inc
sbbb
ja
pop
mov
dec
and
je
lea
mov
ljmp
jecxz
mov
dec
add
std
add
xlat
add
xchg
xor
xor
fbld
add
cmp
pop
mov
and
je
jne
pop
lret
pop
sbb
add
pop
inc
xor
mov
xchg
cli
out
cmp
daa
add
dec
imulb
shrb
mov
mov
lock
cltd
bound
sub
xor
jmp
or
cmp
into
cmp
ret
aaa
push
jbe
shll
pop
push
xchg
outsl
push
push
lcall
cli
decl
imul
jo
scas
int3
and
jle
xchg
test
push
sahf
testl
scas
outsl
push
inc
add
push
push
mov
stos
daa
lret
pop
in
sete
dec
pop
fimuls
ret
ret
imul
cmp
fmull
jns
out
sbb
fsts
cmp
push
je
int3
or
mov
mov
pop
sahf
xor
out
fistl
movsb
mov
xchg
enter
mov
adc
inc
xchg
mov
cmpsb
icebp
pusha
mov
pushf
loop
aam
or
mov
popa
shll
dec
rorl
out
push
mov
hlt
out
and
div
sarl
sub
xchg
mov
leave
inc
or
shl
or
pop
and
out
ss
aad
adc
lret
ret
clc
lea
mov
xor
pushf
ljmp
repnz
ficoml
push
xor
cwtl
ljmp
rorb
sbb
or
push
xchg
lret
cltd
adc
or
add
in
or
sbb
pop
popf
scas
movsl
xchg
nop
cli
cmpsl
fildll
xlat
adc
lret
cltd
out
mov
sub
imul
ffreep
jae
mov
std
loop
les
dec
cmp
jmp
stc
adc
in
and
sbb
test
fwait
mov
and
insl
stos
jle
cmpsl
fs
in
sbb
pop
call
mov
movsb
sbb
sbb
jno
fs
add
lea
jle
sub
in
push
push
fstl
inc
mov
loopne
or
test
js
jp
and
lcall
and
or
add
cmp
les
not
test
add
pop
sti
adc
cmp
inc
test
xchg
aam
sbb
xor
in
push
add
cs
int
test
xchg
lods
sahf
and
aad
cli
loope
movb
jnp
pop
mov
lock
jmp
les
or
push
mov
dec
mov
rorl
rcrb
cmp
popf
jnp
jecxz
jge
adc
or
xchg
movsl
adc
or
mov
ljmp
cmp
sbb
xchg
xchg
imul
push
sbb
sbb
mov
push
add
js
xchg
repnz
and
insl
adc
and
js
cs
mov
pop
lea
fsqrt
mov
push
int
fwait
adc
mov
xor
adc
icebp
dec
and
fsubrs
or
dec
aaa
mov
jle
pushf
jecxz
mov
mov
and
out
or
mov
lock
gs
add
loopne
sbb
dec
pop
in
jl
inc
lret
jmp
pop
stc
out
pop
push
addl
mov
fnstcw
outsb
lea
sub
popf
mov
inc
mov
fisttpll
adc
in
jbe
xchg
jmp
or
mov
rcrl
sbb
cwtl
cltd
pop
mov
push
mov
pop
push
das
outsl
dec
mov
int
mov
in
adc
out
addr16
mov
andl
xlat
ret
iret
and
repz
jo
xchg
mull
push
pop
pushf
mov
dec
leave
dec
xor
jne
cmpsl
aam
dec
jnp
pop
push
test
sub
inc
dec
sbb
loopne
jge
xchg
push
popf
in
sahf
mov
test
dec
outsl
int3
dec
repz
mov
push
and
sub
sbb
in
loope
and
cs
jbe
cli
and
lods
loopne
ds
sti
movsl
and
jno
xorl
arpl
int3
ljmp
ljmp
mov
or
xchg
lods
mov
sub
lcall
xor
mov
sub
scas
adc
pop
outsl
add
in
loopne
pusha
cmc
mov
lret
iret
cmp
stos
pop
inc
inc
dec
test
push
push
mov
xchg
sbb
xor
leave
sub
ss
cs
push
ljmp
faddl
pop
jb
mov
pop
imul
bnd
es
orb
sub
stos
in
movsb
and
pop
rcrb
sbb
ljmp
sub
addr16
mov
cld
insb
cmp
out
outsl
ds
out
arpl
dec
loop
inc
xor
insl
adc
mov
lods
adc
outsl
aas
and
mov
das
jns
dec
mov
jl
cmp
daa
test
int
xor
rcr
mov
stos
add
data16
xor
mov
add
mov
adc
jne
xor
lret
mov
test
imul
loope
jne
xchg
or
xchg
pop
popf
mov
out
inc
orl
mov
add
test
mov
adc
sar
lret
push
outsl
inc
cmp
fnstenv
push
sar
push
mov
jae
sahf
push
cmp
lods
test
test
push
or
push
loope
pop
ja
lods
sub
scas
mov
jge
push
dec
mov
xor
push
out
ljmp
pop
pop
aad
dec
or
fbstp
negl
test
push
and
cmpsl
mov
adc
clc
in
je
mov
mov
int
outsb
jns
xchg
fisubl
in
push
in
lods
repnz
sub
sahf
jmp
sahf
out
leave
test
aam
fdivl
sub
ret
popa
cli
or
test
fs
or
mov
pop
push
lods
push
sub
fadd
mov
daa
fsubr
mov
rolb
stos
add
sbb
mov
sbb
or
add
mull
sbb
mov
add
fsubs
xor
repnz
push
arpl
add
add
test
aaa
insl
jne
jbe
sahf
sub
inc
xor
dec
jnp
mov
lret
inc
xchg
mov
pop
push
dec
mov
push
lds
or
push
test
adc
ss
sbb
lea
jns
loopne
pop
out
jo
in
add
rorb
jnp
les
push
into
je
jl
lcall
enter
test
pop
leave
or
jp
sbb
or
pushf
dec
js
inc
ljmp
xlat
jg
jmp
mov
sub
inc
push
cld
mov
xchg
loopne
iret
iret
popa
ds
or
sahf
or
aaa
and
lret
or
jns
adc
pop
out
jl
add
pop
lcall
call
mov
pop
and
push
xorl
dec
mov
out
stc
int
pop
pop
inc
cmp
shlb
xorl
in
mov
jo
shr
jnp
mov
sub
push
mov
xchg
shl
xor
xchg
push
ffreep
outsb
in
lods
xlat
sbb
pop
lret
mov
dec
mov
out
xchg
aam
das
mov
push
sub
sarl
adc
cmp
inc
xchg
pop
popa
shrb
enter
fimull
xor
das
sbb
dec
vpunpckldq
rclb
mov
test
inc
xchg
subb
call
cltd
mov
sub
mov
inc
add
fisubrs
xchg
sub
popa
push
lahf
fimull
enter
push
xlat
sbb
jne
jb
fcomi
std
adc
addb
lret
fs
or
outsb
cmp
rorb
and
xchg
fstl
dec
shll
test
test
add
enter
xchg
jns
fisttpl
mov
sub
sub
sub
pop
and
and
or
mov
pop
xchg
mov
pop
and
mov
notl
cmp
dec
fisubrs
adc
pushf
xchg
mov
jge
xchg
les
orb
xor
xor
inc
and
inc
mov
imul
push
push
sahf
cs
sub
cmc
inc
iret
cs
xchg
mov
sub
sbb
pop
mov
je
mov
shll
xor
inc
sbb
mov
xor
push
sarl
mov
jmp
pop
dec
hlt
cwtl
mov
pop
pop
pushl
mov
mov
les
in
push
cmp
adc
les
sbb
cwtl
out
jle
in
and
out
stos
shr
dec
iret
mov
inc
gs
mov
mov
and
ljmp
out
inc
scas
daa
inc
add
mov
mov
or
cmpsl
adc
or
push
jmp
pop
push
sar
icebp
mov
inc
lret
imul
jns
dec
iret
dec
adc
test
nop
rolb
bound
xlat
push
pushf
scas
push
push
cmp
adc
sub
mov
xchg
push
sbb
xlat
sbb
sbb
mov
pop
ds
int3
ret
jle
mov
dec
push
xor
adc
subb
mov
and
pop
adc
push
sbb
loope
sahf
in
popf
popf
das
sub
ret
dec
pop
mov
iret
jnp
xchg
sbbl
arpl
int
sbb
addr16
mov
int
test
push
or
sbb
cmpsl
dec
or
xchg
and
push
std
dec
mov
gs
mov
mov
lds
add
data16
insb
cli
mov
repz
push
xchg
or
loop
pop
xor
adc
push
fmulp
mov
movsl
mov
jb
addr16
addl
int
fldcw
push
cmp
xlat
fnstsw
mov
out
lods
pop
fsubrl
in
mov
pushf
dec
push
scas
addb
fisttps
hlt
or
push
inc
sahf
ret
nop
stos
mov
jmp
div
adcb
adc
int3
in
fisubrl
adc
sbb
ss
aas
aas
addr16
mov
icebp
aas
pop
call
jnp
scas
fdivrl
or
sbb
les
mov
shll
cmc
mov
addb
into
or
mov
fdivrs
push
lcall
cmp
scas
pop
and
data16
pop
adc
movsb
test
lahf
push
sub
cli
mov
cli
popf
rcrb
mov
push
dec
dec
movsb
mov
stos
or
fidivl
mov
shlb
jb
sarl
sbbb
sbb
mov
push
mov
jns
mov
popf
frstor
sahf
test
dec
mov
mov
lods
in
hlt
shlb
rcl
lret
pusha
adc
xchg
or
test
cld
mov
cld
cltd
mov
stos
scas
pop
std
xor
xchg
ret
imul
out
repnz
icebp
inc
mov
pop
jge
mov
lods
mov
push
inc
mov
xchg
add
xchg
ja
mov
and
shl
xchg
or
hlt
insb
add
cmp
xchg
cmp
add
js
in
sbb
jae
divl
mov
dec
sbb
inc
test
fstps
jmp
xchg
push
mov
arpl
scas
pop
push
xor
inc
stos
fnstsw
and
cmp
xchg
cli
mov
leave
rolb
int
insl
add
adc
fcomi
pop
and
repnz
in
mov
incl
repnz
shr
sub
add
push
adc
movsb
flds
test
mov
sbb
sbb
mov
push
call
popa
pop
fsubrs
ss
sti
push
lods
test
stos
call
dec
push
popa
cmp
xchg
cli
orl
in
lret
out
aam
push
popa
out
xchg
aad
mov
ror
and
jmp
mov
or
ficoml
xchg
inc
scas
clc
mov
xchg
mov
ds
in
add
sti
sub
repz
outsb
or
adc
mov
mov
mov
sahf
mov
call
sub
ret
cltd
mov
sub
sub
fstl
repnz
imul
sub
test
dec
mov
inc
pop
inc
sbb
and
dec
and
loop
jae
iret
mov
rcl
sti
rcrl
es
mov
mov
int
sti
test
mov
fistpl
in
scas
xchg
std
xchg
sub
pop
sbb
xor
imul
add
and
mov
lret
div
lods
mov
inc
loopne,pt
das
cmp
lods
add
xor
test
inc
cmp
push
xor
jp
cmp
fimull
adc
in
jmp
jnp
rcl
mov
push
insb
and
loopne
mov
lcall
shrb
data16
lock
dec
xchg
push
mov
add
popf
scas
dec
inc
mov
lret
mov
pop
inc
sbb
outsb
cmp
rorb
in
andl
dec
add
jge
xchg
fs
cltd
lahf
inc
test
test
cmpsl
jp
nop
inc
andb
inc
xchg
popa
lock
push
mov
xchg
mov
int
ds
notb
sbb
mov
nop
mov
popa
xor
push
ljmp
sub
lcall
imul
jns
jb
enter
js
mov
jne
jl
sbbb
cmp
or
clc
shrb
adc
lahf
out
ret
and
push
mov
nop
push
xor
daa
jns
xor
dec
cwtl
mov
xor
xor
es
cmp
xlat
outsl
aad
mov
mov
stc
out
icebp
xchg
loopne
xchg
jae
out
and
xlat
push
test
push
sub
out
push
les
ja
mov
sti
cmp
ret
adc
xchg
lret
xor
push
xchg
ret
or
or
sub
iret
push
cmpsl
fidivrs
cmp
fbld
stos
loopne
pop
ds
inc
push
dec
pop
and
jno
stos
push
push
dec
sahf
out
mov
pop
xchg
lret
push
sub
pop
fisttps
cld
cmpsb
call
das
pop
mov
or
xor
clc
lods
cmp
outsb
icebp
mov
pop
dec
out
dec
arpl
sti
loope
sbbl
mov
xchg
add
inc
lret
inc
mov
dec
jmp
push
or
push
push
lods
push
jo
test
jge
sub
mov
jb
mov
mov
mov
shrb
test
jg
cwtl
sub
ret
xor
add
lods
xchg
xor
lock
mov
fstl
repnz
ljmp
lods
add
loope
idivl
loopne
aaa
sbb
fdivrl
js
jl
fdivl
sbb
xchg
or
call
cmp
adc
lock
je
es
mov
cmp
jae
xchg
lds
mov
push
dec
inc
lods
adc
dec
ret
mov
iret
and
adc
in
jl
lahf
push
sub
jbe
iret
popf
aaa
mov
sub
dec
add
daa
jae
jmp
int
outsl
jl
push
mov
and
cld
xlat
mov
incl
into
xor
jbe
cmp
ss
cmpsl
out
jmp
adc
ja
dec
mov
xor
hlt
cmpb
jecxz
addr16
push
push
xorl
or
into
sahf
mov
in
pop
dec
inc
push
xchg
xor
adc
pop
and
sti
loope
jbe
add
mov
out
push
test
inc
aas
jbe
ss
dec
pop
lret
or
sti
xchg
mov
inc
loope
jae
cmc
movsl
xor
pop
push
movsl
dec
es
xlat
clc
add
xchg
cmp
imul
pop
xchg
adcb
sarl
or
adc
xor
addr16
iret
ljmp
sbb
and
pop
and
mov
int3
push
mov
jle
nop
jmp
cwtl
inc
xlat
push
inc
jb
out
mov
std
inc
jmp
jecxz
mov
mov
jl
sub
jle
es
adc
xor
adc
lea
push
cmp
pusha
ss
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
shrl
addl
lret
stos
movsb
loop
lea
lea
das
mov
shrb
stos
int3
push
cs
test
lahf
ja,pt
out
data16
rclb
fldt
fs
std
lea
pop
xor
jg
cltd
mov
jo
sbb
sbb
sbb
loope
rol
dec
pop
sub
cltd
aas
dec
jle
aam
pusha
test
bound
in
jmp
mov
dec
fildll
sarb
xchg
loope
imul
xchg
dec
cmc
jae
dec
ds
jecxz
push
insl
pusha
nop
pop
adc
mov
pushf
sti
or
push
mov
jle
das
lods
xchg
xor
lret
fisubs
cwtl
pop
arpl
sub
int
xchg
jecxz
fistps
repnz
sbb
aas
ficoms
test
add
rcl
sbb
push
hlt
stc
dec
mov
sti
push
inc
fcompl
xor
movsb
adcl
inc
jb
jae
movd
push
mov
xor
add
mov
out
les
xlat
cwtl
andl
and
add
into
test
in
jp
inc
push
pop
lods
push
jns
sahf
rcrb
dec
mov
movb
xchg
jle
jnp
push
pop
xchg
dec
in
rclb
dec
dec
and
jbe
push
stos
inc
in
stos
pextrw
mov
es
in
movl
dec
scas
inc
mov
ss
cmp
and
cmp
test
xchg
xchg
inc
out
into
icebp
insl
cmpsl
pop
mov
jno
nop
mov
add
push
dec
mov
lods
test
push
shrl
pop
xor
test
pop
push
sbb
inc
stos
hlt
rep
and
insl
daa
pop
popa
pop
mov
cmp
lock
or
adc
rcr
jecxz
mov
outsl
test
clc
dec
sbb
shll
pusha
inc
or
and
imul
call
enter
sarb
enter
push
repnz
push
xchg
xchg
movsl
ss
lret
mov
xchg
mov
cmp
orb
cmpb
dec
insl
xchg
jb
ja
push
jbe
into
push
scas
outsb
inc
icebp
dec
cwtl
popf
pop
sub
xchg
cmp
dec
popa
mov
stc
shrd
mov
mov
fdivrs
punpcklbw
mov
cmpsl
pop
inc
mov
sub
andb
push
push
mov
lods
incb
lods
adc
popa
rcl
inc
lds
jnp
test
mov
fildll
inc
push
int
fmulp
xchg
icebp
adc
lcall
vmwrite
xchg
cmp
mov
mov
pop
movsl
aaa
sbb
loope
fnstsw
adc
mov
mov
xor
dec
dec
outsl
negl
inc
stos
push
dec
sahf
jge
push
inc
inc
int3
ds
jb
stos
sbb
das
cli
mov
fisubl
cmp
roll
mov
or
sbb
xor
pop
push
shlb
and
mov
rcl
add
loop
add
andl
fistps
or
decl
ret
popl
or
jbe
sbb
stos
pop
out
push
in
sti
dec
std
shll
inc
loop
mov
sahf
or
ret
test
lcall
xor
lods
xchg
jns
jecxz
and
push
in
mov
cwtl
sahf
popf
mov
inc
pop
dec
out
or
das
push
xlat
or
mov
cwtl
mov
imul
test
xor
je
push
pop
push
add
out
into
cmp
int
mov
outsl
cmpsb
repnz
xchg
popa
stc
stos
sti
jo
pop
mov
loopne
push
adc
std
movlhps
idivb
adc
in
jns
adc
mov
sbb
mov
int3
int
pop
movsl
xchg
mov
aaa
test
outsl
roll
push
cmpb
nop
ja
jae
lcall
sub
jl
cmpsb
jg
sbb
pop
adc
mov
dec
xchg
and
jno
mov
scas
sti
sti
loop
enter
mov
sub
jl
mov
ja
or
movsl
out
pop
bound
mov
pop
arpl
stc
mov
lods
dec
stc
negl
cmc
test
lods
popf
adc
push
jg
sbb
pop
cmc
int
push
jo
iret
add
pushf
cmc
sahf
dec
jno
int
cli
bound
mov
outsb
dec
daa
dec
adc
std
sbb
int
fdivrs
andb
mov
inc
movsl
mov
int3
cld
or
and
sbb
and
push
subl
inc
shrl
int
sbbl
xor
lods
inc
fcmovnbe
mov
rorb
push
pop
out
sbb
pop
mov
pop
mov
subl
xchg
mov
aaa
insb
ja
gs
xor
rol
ffreep
rol
mov
cli
lahf
mov
test
aad
cld
push
into
dec
inc
dec
test
fildl
mov
gs
cmpsl
call
gs
mov
sub
add
mov
sahf
jbe
in
mov
daa
dec
dec
add
or
iret
jecxz
jb
fisubs
adc
scas
out
pusha
shlb
and
rorb
pushl
pop
popa
sbb
mov
inc
jo
dec
pop
andl
inc
cmp
add
jle
jnp
jp
mov
mov
and
xchg
xchg
lock
add
popl
test
data16
inc
loopne
and
cli
cmp
push
push
bound
addr16
sbb
fbstp
push
into
mov
imul
std
out
pop
aad
jo
leave
sbb
dec
cmpsb
jae
out
xor
aam
jmp
sahf
sbb
and
inc
std
js
loop
push
out
loope
cmpl
mov
gs
cmp
or
cmp
or
sti
aaa
scas
inc
pop
mov
jne
test
mov
mov
cmp
adc
shl
loope
movsl
out
jecxz
push
aam
rcll
push
cld
daa
jecxz
jg
insb
adc
pop
imul
jp
pop
adc
cli
jmp
sbbb
dec
scas
sub
frstor
imul
test
mov
cltd
dec
pop
xchg
pop
push
mov
out
push
addr16
jne
push
pop
adc
mov
stc
enter
or
nop
jl
mov
test
add
ret
call
and
pop
movsl
add
into
mov
icebp
pop
inc
insb
pop
xlat
xor
mov
icebp
pop
dec
sub
adc
fwait
inc
cmp
mov
xchg
aas
cli
stc
iret
shl
jmp
popf
cwtl
pop
sbb
lret
mov
cmpsb
cli
ficoms
inc
mov
stc
out
dec
xchg
ss
sbb
push
dec
sbb
js
mov
int3
cmp
rorl
in
shrb
data16
popa
mov
out
ss
icebp
shlb
je
jp
int3
arpl
ret
mov
cltd
push
pushf
and
stos
sarl
bound
cmp
push
mov
dec
je
xor
mov
fcompl
lret
and
ss
xor
cmp
cmp
jp
scas
lret
ds
xor
mov
xchg
add
jp
jmp
push
out
fnstenv
nop
or
loop
pop
pop
lret
mov
add
shll
and
imul
idivb
fisubrs
cs
cmp
mov
movsb
outsb
rcrl
and
fld1
mov
jbe
aam
loopne
insb
lret
cmpb
out
sahf
aas
insl
gs
ljmp
scas
sbb
pop
mov
cmp
stos
popf
pop
jns
add
cmpsb
xor
addr16
ljmp
mov
push
cmc
lret
inc
cmp
cld
mov
jp
shl
push
mov
icebp
or
inc
pop
jle
inc
fdivrl
jno
jbe
pop
ja
sbb
jle
jg
pop
xor
roll
cltd
andb
xor
adc
add
pop
out
mov
mov
push
loope
dec
dec
and
dec
cmp
mov
arpl
cwtl
cmp
push
imul
mull
sub
je
inc
xchg
dec
fidivrs
mov
outsl
xor
push
add
scas
gs
mov
pxor
loop
mov
and
jecxz
pop
and
inc
mov
ds
sbb
mov
xchg
xor
imull
sub
not
into
pop
movsb
ss
xor
outsl
js
push
add
cmp
sub
lret
fists
aas
arpl
xchg
xchg
insl
xchg
mov
pop
loop
into
cmp
ljmp
xchg
imul
push
pop
push
xchg
filds
jmp
xor
popf
loopne
push
add
mov
adc
mov
and
pop
pusha
cmp
int3
leave
scas
loope
mov
push
dec
pop
test
add
test
ror
subl
das
outsl
xor
pop
loope
dec
imul
xor
lret
call
mov
xchg
repnz
clc
cltd
das
mov
or
xchg
jl
into
mov
imul
dec
scas
pop
pushfw
push
lahf
cmp
mov
ds
sti
enter
mov
inc
cmp
mov
idivb
pop
cmc
inc
or
jmp
mov
pop
mov
clc
push
and
cmp
xor
adc
xchg
loop
popf
pop
add
lcall
xor
jge
out
dec
xchg
sub
mov
jno
movsl
jae
jmp
fs
dec
insb
jg
cmp
mov
and
faddl
jl
mov
mov
and
push
lahf
jle
aas
leave
mov
add
xchg
cmpsb
mov
scas
pop
scas
mov
inc
xchg
cmp
pushf
cmpsb
stos
jnp
mov
inc
xor
add
sub
dec
jns
xchg
div
pop
adc
cld
sbb
xor
pop
dec
adc
cmp
push
daa
jae
call
cli
mov
jno
insb
test
push
shr
jo
repnz
mov
push
sarb
dec
insl
rcrl
je
dec
pop
mov
fs
notb
lret
movsl
mov
sbb
push
ljmp
add
adc
repz
jo
xchg
fidivrs
or
jmp
xchg
inc
push
rdmsr
in
rolb
jecxz
xchg
mov
or
inc
fisubs
rorb
stos
pop
cmp
or
ja
mov
es
cli
imul
and
fcompl
dec
int
cmp
aam
mov
or
fstpt
call
enter
xlat
mov
mov
add
mov
inc
dec
sarb
xor
dec
jl
outsb
mov
lret
xchg
out
scas
inc
xor
and
jle
fwait
xor
cmp
iret
orb
mov
out
dec
jne
lods
sub
mov
dec
dec
push
jnp
nop
lret
fcomi
sub
outsb
cmp
dec
notb
outsl
ja
pusha
push
push
mov
sbbb
repz
add
mov
and
mov
cmp
inc
xchg
jp
add
fisttpll
cltd
dec
imul
mov
jne
mov
xlat
sahf
pop
pusha
adc
push
addl
es
xor
push
cmc
push
cmp
push
ljmp
push
dec
jle
enter
xor
add
lret
jnp
jb
cmp
repnz
mov
push
clc
ret
jnp
stos
mov
jbe
jmp
scas
mov
or
xchg
mov
fcompl
jg
es
inc
shlb
mov
jg
mov
repnz
ja
xor
sub
mov
dec
xchg
pop
jmp
enter
pop
popa
sbb
cmp
shr
fdivl
pop
fucomi
inc
dec
lret
fadds
mov
push
jne
jl
jbe
es
inc
std
int3
add
nop
es
scas
aaa
out
jl
add
xor
jo
out
xorb
inc
cwtl
xor
stos
das
lods
jnp
add
dec
imul
inc
mov
je
cmp
adc
in
and
mov
push
or
or
imul
jne
mov
jno
imul
add
xchg
sbb
into
adc
xchg
int3
adc
mov
lret
push
call
lret
das
jo
test
cmp
xor
inc
sbbl
pop
and
sbbl
scas
aam
inc
cmp
imul
ret
xchg
and
jmp
and
mov
cwtl
pop
clc
mov
cmp
inc
dec
mov
push
push
jg
pop
pop
incl
cmc
stos
shrb
inc
cld
inc
daa
mov
cmp
jnp
outsb
aaa
xor
xor
icebp
dec
sub
out
pop
popa
fidivs
push
daa
jo
mov
aas
fiadds
sbb
fcmovb
ret
shl
or
dec
mov
jnp
nop
pop
data16
pop
mov
inc
cmp
outsl
call
repz
lds
inc
cld
js
gs
outsl
sbb
xlat
aam
add
and
stos
call
out
or
xor
adc
in
mov
mov
fiadds
jl
pop
or
out
ficoml
lret
or
xlat
cmpl
mov
sub
fnsave
in
jno
push
push
adc
clc
fwait
xor
fstpl
adc
notl
sahf
mov
jg
pop
adc
les
es
jl
pop
adc
push
mov
das
int3
sub
imul
std
mov
mov
jbe
loopne
aam
inc
mov
outsl
jle
cmp
xchg
lods
inc
arpl
push
xchg
cmp
out
cs
call
xchg
xchg
pop
shll
int3
imul
push
pop
lds
in
movsb
imul
into
inc
push
cmp
sti
cmp
jb
mov
jge
call
push
loope
outsb
push
lods
pop
subb
pop
rcl
test
cmp
adcl
mov
lods
call
push
ss
or
add
xchg
pop
imul
jg
insb
mov
pop
aas
jb
fmulp
inc
mov
xchg
xchg
sar
jp
xor
push
stos
cmpsb
lcall
jnp
mov
sarl
ficoms
push
adc
pop
cmp
or
sarb
rcrb
fwait
es
fnstcw
fstps
sbb
xor
jp
sub
pop
and
std
faddl
inc
pushf
cmp
or
adc
xchg
enter
and
inc
mov
ret
pop
push
mov
subb
imul
test
xchg
push
jnp
jbe
dec
and
cmpsb
cli
add
addl
cmc
lret
bound
mov
pop
cmp
aas
add
faddl
arpl
sbb
mov
add
outsl
and
pmullw
jmp
sbb
and
cmpsl
test
scas
pop
sbb
jno
mov
cli
and
mov
aas
add
sub
mov
and
aam
add
jl,pn
xchg
add
sarl
or
push
fstpl
xchg
and
pop
dec
adc
aas
dec
das
mov
sbb
or
loop
mov
push
jmp
scas
imul
xchg
data16
mov
xor
mov
std
xor
sub
push
add
sbb
jp
and
jmp
test
lahf
push
stc
and
sub
cmpsb
lods
out
sbb
pushl
xor
movd
out
push
out
pop
and
sbb
adcl
sub
in
jmp
add
jmp
out
mov
dec
daa
jmp
adc
arpl
jbe
inc
fs
insl
jge
inc
push
rcrl
sahf
sti
stos
fwait
in
lods
ret
nop
popf
scas
rcrl
mov
mov
add
jp
es
xchg
repz
or
mov
mov
and
mov
leave
inc
lods
pop
call
dec
mov
aam
cmp
scas
or
inc
out
mov
nop
mov
js
inc
sbb
jnp
in
dec
out
test
stos
scas
je
lods
pop
and
clc
jge
out
xor
sti
rorl
arpl
cmp
sub
add
dec
mov
dec
test
and
add
in
rcll
in
lds
cmp
sub
sti
adc
inc
mov
adcl
push
xor
mov
inc
pop
adc
xor
dec
pop
cmp
out
xor
pop
lods
je
pop
sub
sahf
ja
and
fisubs
das
dec
iret
sbb
mov
xchg
mov
scas
mov
mov
stc
hlt
sub
mov
not
add
test
inc
xor
jns
aas
mov
into
mull
imul
xor
fwait
mov
xchg
into
sbb
lods
xchg
pushf
es
xor
outsl
jl
lret
push
pop
mov
add
sub
insb
adc
movsl
dec
shlb
andl
jmp
add
in
roll
clc
aad
xor
ret
xor
sub
les
sub
and
clc
ret
adc
cmp
insl
inc
in
inc
in
adc
sbb
out
jnp
mov
xchg
insb
fnstenv
dec
in
mov
inc
out
shrl
jge
xchg
and
cwtl
insl
ficompl
rorl
insl
int
xor
scas
xchg
inc
cltd
out
sbb
add
pop
mov
sti
cmp
iret
pop
adc
gs
repnz
sarb
add
or
xor
or
and
mov
adc
popa
jp
in
shrb
out
jle
sub
andl
arpl
or
mov
mov
in
stc
jg
mov
ret
xchg
in
or
pop
mov
mov
addr16
cmp
cmp
sti
loope
pusha
pusha
adc
sbb
xchg
xchg
ljmp
jb
aam
lahf
cltd
xchg
mov
inc
sbb
dec
xor
sti
pop
jmp
nop
cmp
add
xor
mov
cmpsb
sub
xorl
testl
shr
mov
cmpsl
mov
mov
mov
xor
mov
or
mov
call
mov
call
push
inc
mov
and
in
add
ficoms
cmc
js
popf
sub
cmp
scas
cmp
sub
aad
mov
add
jecxz
jp
aaa
notl
and
mov
in
je
ret
mov
mov
cltd
jae
leave
in
mov
push
xchg
pop
mov
inc
xor
fisubs
and
cmpsb
adc
fwait
mov
xchg
push
mov
and
repnz
pushf
cmpsb
mov
leave
sub
test
xchg
dec
rcll
xor
test
push
mov
mov
fildl
dec
mov
stos
jbe
or
out
vshufpd
push
cltd
lahf
cwtl
mov
lock
add
mov
test
jns
cmc
std
in
hlt
cmc
popf
pop
xchg
cmpl
and
jne
scas
inc
sti
std
mov
mov
xchg
cmp
mov
insl
in
mov
roll
inc
push
rcll
imul
loop
xor
lcall
xchg
test
dec
je
sbb
das
pop
test
leave
fbstp
sbb
push
out
loope
pop
jno
out
cli
fsubp
jg
enter
cli
push
pusha
adc
daa
enter
cld
dec
adc
cmp
push
push
lahf
ja
jp
xor
cmc
pop
loop
hlt
fldcw
pop
add
and
mov
andl
cltd
test
dec
xchg
sbb
mov
call
lds
std
xchg
or
cmpsl
mov
test
std
aaa
jnp
xchg
pop
xlat
pop
outsb
jb
push
into
out
jp
cli
inc
cwtl
aam
cwtl
mov
stos
addb
into
iret
push
mov
jae
xchg
sub
mov
std
std
add
mov
repz
arpl
push
movsb
mul
fildll
xor
cld
push
pop
jne
movsl
push
stos
out
cmpsl
xchg
sub
shl
fistps
dec
jno
lret
dec
jle
pop
outsl
imul
fnsave
dec
imul
add
sbb
xor
push
sub
dec
ljmp
sub
sbb
addr16
ret
jmp
and
das
dec
mov
mov
xchg
xchg
js
adcl
pop
gs
vphadduwq
in
pop
pop
cmpsb
fidivrs
xchg
push
lret
shlb
add
pushf
mov
push
out
pop
fnop
inc
pop
out
push
inc
adc
push
cli
loopne
pop
hlt
lahf
pop
dec
icebp
fnstcw
movsb
mov
jp
lahf
outsb
je
rolb
mov
xchg
jg
cmc
cmpsb
loop
lcall
push
inc
jno
andnps
cmpsl
ljmp
xchg
push
mov
inc
sub
jne
adc
repz
mov
cs
repz
sti
pop
aad
repz
add
lods
sbbl
mov
inc
movsl
cmp
push
fs
adc
push
es
lds
push
cmp
test
je
cmc
es
inc
inc
rorl
pop
and
fwait
enter
xchg
sti
arpl
and
and
xor
xor
inc
push
jno
adcl
pop
push
and
int3
push
int3
or
jle
or
ljmp
jns
jg
in
jge
cmp
and
xchg
mov
mov
mov
mov
fnsave
inc
cmpsl
cmpsl
repz
push
adc
insb
or
ja
push
outsl
cwtl
mov
aas
pop
pop
outsl
ja
or
jns
enter
popf
std
mov
aam
xor
and
sbb
lret
std
add
lcall
pop
mov
pop
out
insl
add
jns
jns
std
scas
fidivs
jbe
sbb
pop
outsl
pop
inc
les
jp
push
inc
lahf
scas
movsb
loopne
int3
cwtl
mov
sbb
inc
insl
dec
push
cmc
or
popfw
adc
lahf
sbb
mov
cmp
jae
popa
outsb
inc
daa
ljmp
icebp
dec
inc
lcall
out
stos
inc
stos
xor
dec
and
jnp
xlat
xchg
scas
jnp
clc
insl
int
sub
mov
repz
pop
test
stos
mov
insl
mov
push
lret
dec
push
mov
mov
popf
loope
jnp
sub
test
add
aas
repnz
cmpsb
out
push
push
push
push
lret
pop
jno
dec
mov
pop
inc
out
mov
aas
mov
sbb
ss
cmp
cli
rcl
xchg
xchg
dec
repnz
fisubrs
adc
jle
cmp
xor
sub
lock
ret
push
xchg
mov
push
push
cmp
pusha
mov
movsb
dec
iret
cli
rorl
xor
fnstsw
test
clc
lods
in
inc
lret
and
sub
push
inc
and
leave
leave
pop
cmc
lret
out
xor
fdivrs
popf
xchg
bnd
fnsave
imul
movsb
mov
jecxz
dec
jbe
pop
xlat
mov
fcoms
adc
bound
mov
popa
jle
adc
adc
testl
cmp
mov
aad
scas
sub
pop
sahf
addr16
dec
cmp
rorb
imul
add
jg
bound
and
mov
enter
xor
dec
dec
or
push
xchg
inc
orb
je
sub
fimuls
ficomps
mov
xchg
loopne
loop
xor
lahf
and
lds
pop
dec
mov
int3
loope
insb
cmp
dec
lret
mov
cwtl
mov
sub
shrb
fidivs
push
mov
dec
addr16
popa
mov
cltd
js
push
rcr
call
inc
cs
outsb
ss
movsb
repnz
jmp
xor
test
push
mov
rorb
cwtl
int3
dec
in
mull
insb
sbb
mov
inc
inc
cmp
rorl
sbb
pop
sub
rclb
jnp
push
lea
fdivl
gs
out
shld
jnp
test
iret
sub
inc
add
cli
mov
jg
jmp
outsb
in
mov
dec
jl
xor
add
mov
imul
pop
bnd
jbe
fists
pop
xchg
sub
jecxz
ror
outsl
push
cs
pop
cmc
mov
mov
sub
insl
jmp
divl
insb
xchg
mov
and
popa
pushf
inc
aaa
rorl
cli
cmp
loop
movsb
jae
orb
push
and
in
ret
test
and
add
jmp
push
mov
rolb
mov
add
push
ja
lret
dec
mov
sbb
cmc
test
cld
jg
lret
lods
iret
cwtl
xor
mov
lea
and
jecxz
fisubl
lcall
idiv
mov
in
repnz
sarb
pusha
in
mov
xchg
cmova
scas
fsubl
jle
and
push
xchg
adc
aas
test
fcoms
inc
pop
push
mov
fidivs
les
mov
fcoms
push
int3
movsb
out
movsl
cwtl
je
sub
sub
movsb
jmp
bound
aam
outsb
loope
add
pop
out
pop
or
arpl
lea
fisttpl
mov
jne
adc
test
incb
pop
lret
cwtl
add
sbb
cmp
jge
xor
pop
xor
mov
xor
in
push
xchg
std
mov
inc
mov
inc
js
xchg
pop
call
push
pop
outsb
out
push
aad
stos
sbb
push
push
out
mov
out
and
arpl
inc
push
add
adc
sbb
adc
and
sbb
leave
mov
mov
xchg
fiadds
xchg
stc
inc
cli
xor
xchg
sub
outsb
or
or
out
mov
jge
data16
pop
pusha
lret
pusha
adc
jns
xor
mov
lcall
mov
mov
pop
mov
and
call
movsb
mov
fsubr
aam
fidivs
sub
jecxz
adc
mov
cli
and
in
cmpsb
pop
fcoms
inc
mov
ret
leave
cld
ljmp
mov
sub
add
push
add
xchg
cmpl
ret
iret
int3
je
fmull
pop
inc
mov
push
mov
pop
mov
lds
xchg
je
dec
push
int3
cmc
pop
fcmovnbe
cli
jns
scas
clc
mov
out
cmpsl
stos
inc
inc
adc
icebp
add
mov
lcall
sti
sub
repz
stc
test
fyl2xp1
adc
pushf
push
mov
ljmp
mov
mov
gs
inc
fwait
adc
mov
xor
pop
mov
mov
ljmp
sub
jne
pusha
sub
ds
data16
mov
jbe
jo
inc
shl
pop
out
lds
fiaddl
xchg
pop
or
pop
jle
scas
adc
sub
sarb
sub
adc
xlat
add
fsts
pop
xlat
xchg
mov
stos
fstps
jp
out
jnp
mov
and
cmpb
xchg
mov
xor
mov
push
mov
jns
int3
in
in
lret
sti
sbb
push
icebp
sub
xchg
pop
add
lds
add
and
call
test
and
mov
pop
mov
inc
xchg
mov
pop
int3
or
xchg
sbb
cmc
push
es
push
xchg
repz
mov
rcr
jmp
repnz
addr16
int
sub
gs
dec
fldt
icebp
xchg
push
cmp
xor
lcall
pop
rcl
mov
inc
or
stos
fs
jbe
ja
jg
stos
js
mov
pop
call
xor
lea
jae
or
fs
sbb
mov
sbb
cmpb
rol
stos
insl
out
lcall
inc
movsl
adc
sahf
push
mov
idivl
insl
repz
add
inc
sbb
lods
pusha
andb
stos
sub
rclb
dec
push
xor
mov
in
xchg
pop
fmuls
pop
loope
inc
add
sub
dec
jo
push
pop
sub
jbe
adc
stc
gs
jnp
int
push
xlat
jae
mov
mov
xor
mov
ficoms
jae
movsb
push
imul
fidivs
mov
xor
aaa
sahf
or
pop
ret
add
rcrb
sub
adc
js
xor
inc
pop
jp
sbb
outsb
es
inc
cmp
mov
mov
xor
sub
clc
xor
sti
out
jae
mov
xchg
add
fldt
fimuls
xlat
xor
in
cmp
sbb
lods
dec
icebp
inc
jb
push
xchg
cmp
add
push
and
fildll
mov
fwait
dec
rcr
enter
ffree
mov
pop
lea
fisttpl
mov
scas
dec
shlb
cmpsl
xlat
sbb
cmpsl
mov
add
sub
xor
mov
sub
add
daa
inc
adc
xchg
xlat
xchg
cmp
or
cmpl
lock
fbld
xchg
rcrb
aad
stc
arpl
pop
jnp
cmp
add
adc
sbb
cltd
je
pop
sub
test
ja
mov
adc
mov
repnz
mov
pop
push
mov
loope
push
ss
cmp
std
or
xor
mov
pop
or
mov
xchg
test
out
dec
xchg
adc
sbb
lea
test
mov
push
fsts
in
dec
sub
int3
mov
xlat
mov
jge
les
mov
pop
fstpt
inc
inc
xchg
jns
imul
stos
sbb
out
add
xchg
ljmp
js
int3
cs
jnp
mov
and
fcompl
push
iret
in
imul
nop
repz
rol
fistps
ds
lods
jp
jmp
nop
cmpl
cltd
packssdw
mov
cmp
or
or
test
add
and
mov
popa
push
pop
mov
and
push
addb
jg
mov
inc
fisttpll
mov
rol
mov
mov
jnp
sbb
mov
push
mov
bound
xor
je
jp
movsb
out
sahf
stc
jns
jbe
mov
xchg
pop
mov
scas
xchg
out
dec
xchg
fists
jae
lahf
pop
in
adcb
inc
xchg
mov
cmp
xorb
inc
push
mov
push
into
mov
push
add
cmp
fsubr
mov
ret
xchg
testl
out
push
out
mov
xchg
repz
or
cmp
cs
data16
cmovo
sub
dec
sub
leave
xor
in
mov
stc
xchg
add
push
and
sub
ffree
lret
bnd
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
stos
push
mov
addb
andl
repz
push
mov
dec
jg
push
ds
sbb
xchg
dec
mov
test
mov
fdivrs
jns
int3
dec
lret
and
rorb
or
dec
mov
addl
dec
decl
sarl
jmp
outsb
mov
iret
into
ret
loop
stos
jb
mov
movsl
push
mov
jmp
jmp
adc
stos
es
in
and
loop
sbb
mov
rcrl
add
stos
pop
fnstcw
or
push
mov
mov
ret
ret
push
cld
outsl
lods
in
push
inc
xor
push
jo
inc
push
add
pushf
push
fdiv
ficoml
inc
adc
aas
jle
mov
adc
xchg
xchg
sub
adc
nop
leave
clc
in
and
sub
repnz
shll
mov
mov
pop
push
xchg
mov
mov
sub
loope
xlat
add
sarb
dec
xor
lret
clc
sbb
mov
xchg
fisubl
fmuls
cmp
mov
sub
loop
pushf
aad
mov
fnsave
xor
mov
sbb
jle
push
mov
or
loope
xor
sahf
push
fnstenv
xchg
sbb
adc
sub
fs
insl
xchg
sahf
push
daa
dec
into
mov
cmp
dec
shrl
xor
and
push
lods
cli
movsb
push
movsb
inc
js
sbb
out
cmp
mov
int
sbbb
push
lret
lods
push
addr16
daa
mov
adc
cmc
insb
or
data16
lds
fwait
xchg
fucom
add
xchg
lret
pop
je
xor
popf
mov
jnp
xchg
pop
fwait
xorl
aas
xchg
sub
mov
or
mov
or
lret
sub
dec
rorl
loopne
in
loop
pop
cli
cld
or
test
out
jp
adc
cmc
fs
hlt
stc
ljmp
sub
cltd
push
push
daa
in
or
ficoml
sub
cmpl
mov
cld
test
xchg
into
jge
mov
pop
mov
in
clc
out
and
or
cs
les
push
add
inc
ret
daa
mov
jmp
in
inc
fdivrs
fadd
mov
jb
std
inc
jbe
out
cmp
cmpsl
cmp
xor
fisubrs
mov
or
and
fdivrl
arpl
mov
stc
icebp
data16
adc
addr16
enter
dec
adc
fwait
lock
test
cs
adc
dec
dec
out
outsb
fiadds
negl
sbb
inc
pushl
rorb
int
and
ret
xchg
mov
inc
jb
sub
push
sub
out
sbb
cmp
imul
pusha
orl
stc
mov
push
sub
outsl
fnclex
jno
orb
orl
fisubrs
xchg
mull
jno
mov
int
sbb
insb
sub
fldl
cmp
xor
clc
inc
mov
jge
out
push
jecxz
push
lods
mov
mov
jae
out
ret
addr16
pop
push
push
lds
pop
add
jge
cli
mov
push
inc
lahf
mov
push
sahf
xlat
daa
test
jo
lds
or
xchg
jno
sbb
and
mov
stos
mov
lock
fsubr
xchg
pop
jnp
jecxz
mov
addl
xor
aas
adc
loope
ficoms
imul
and
lds
adc
inc
std
outsb
add
push
add
fwait
sbb
add
lret
loop
inc
sbb
adc
roll
das
test
cmp
sub
cmp
sub
ljmp
mov
call
aad
fs
inc
outsb
movsb
sbb
and
mov
sub
mov
mov
pop
add
shrl
mov
and
mov
rolb
fcom
jne
shlb
xlat
not
sbb
aas
call
sub
inc
iret
lock
or
sub
xor
lret
hlt
out
scas
pusha
fwait
sbb
cmp
jp
add
adc
in
add
fsts
xchg
ror
js
es
ror
lea
fisubrl
mov
pop
std
fstps
pop
pop
xor
mov
lock
mov
aas
mov
sahf
insl
mov
jmp
shll
pop
stos
adc
pop
rclb
sahf
mov
movsb
mov
mov
push
mov
push
leave
add
fwait
xchg
int
scas
lret
xor
out
jmp
cld
iret
ret
dec
sub
pop
dec
andb
fwait
ss
and
mov
xchg
sbb
add
mov
aaa
jl
mov
add
mov
push
movsl
scas
cmc
cwtl
dec
xchg
jecxz
jg
cwtl
mov
xchg
dec
sbb
bound
cwtl
sub
cmpsb
outsb
ret
movsl
xor
mov
inc
call
sub
incb
aam
and
xor
and
jnp
aad
lcall
cmpl
mov
in
sub
mov
mov
xchg
push
or
loop
or
xor
mov
pop
mov
jp
xor
out
cmp
xchg
xor
mov
inc
mov
mov
pop
aas
mov
out
fwait
arpl
cltd
in
jns
arpl
popf
cmc
pop
mov
fdivrs
mov
push
push
mov
out
mov
xchg
loope
lock
push
mov
outsl
add
in
mov
inc
jo
sbb
mov
in
fildl
stos
sbb
pop
xchg
verr
mov
pushf
bound
outsl
dec
bound
mov
jo
mov
sbb
fildll
dec
outsb
xchg
sbb
pop
mov
rcll
in
mov
ds
aaa
mov
int
mov
je
jns,pn
mov
shlb
dec
dec
or
dec
dec
iret
data16
and
jno
lds
and
and
mov
cmp
push
dec
in
adc
fisubl
shr
pop
cmp
push
jne
inc
hlt
mov
leave
shrl
and
js
mov
pop
jae
out
add
push
into
aaa
arpl
xchg
pop
sti
cmc
sbb
sbb
loop
test
mov
repnz
lea
stos
cmp
or
xchg
jmp
and
pop
cmpl
pop
add
pop
stos
cltd
push
inc
mov
mov
push
sbb
push
mov
fwait
sbb
mov
pop
sub
sub
scas
xchg
orb
add
lods
dec
inc
cltd
mov
cmpsb
cmp
in
std
inc
pop
cmp
into
movsl
inc
push
push
pop
add
roll
cs
scas
mov
mov
testb
jno
sub
mov
sub
push
sbb
cmp
mov
divb
les
test
out
cld
scas
fcoms
inc
arpl
xor
sub
test
jmp
mov
ret
pop
fdivl
xchg
aad
jge
andb
cld
mov
inc
push
cmp
movsb
adc
in
sbb
mov
push
cmpsb
dec
sbb
insb
dec
int
inc
aad
add
mov
lock
jnp
inc
xor
sbb
mov
sub
pop
push
push
enter
push
xor
aad
or
shlb
les
jns
mov
mov
mov
repnz
imul
repz
adc
icebp
sub
pop
movsl
aaa
jnp
ja
push
int
adc
xor
sbb
faddp
and
inc
stc
inc
sbb
push
stc
cmpsb
lcall
roll
test
sub
and
pop
sub
mov
std
data16
push
movb
sahf
cmpsl
cltd
push
mov
pushf
cmp
sbb
xor
sub
add
push
xor
fsubr
mov
sub
sub
push
das
out
int3
adcl
pop
fstpl
sub
stos
xor
lss
push
jbe
cltd
jge
jae
mov
scas
ret
repnz
push
fwait
dec
out
stos
mov
popa
aad
pop
sub
and
adc
mov
jo
rcll
mov
repnz
mov
or
jmp
pop
push
sbb
into
xor
das
and
fistps
loope
jae
pusha
mov
pop
test
test
testl
push
push
jl
enter
lret
push
dec
scas
ret
xchg
mov
xchg
add
sarb
lea
push
or
out
xor
in
push
sbb
das
mov
push
pop
xor
clc
mov
lods
stos
fimull
jnp
sbb
jno
mov
mov
loopne
fistl
mov
dec
dec
lahf
cmp
pop
pop
jg
lods
sbbl
or
push
mov
dec
xorb
and
out
ja
lock
dec
mov
lods
test
mov
jmp
stos
in
pop
xlat
pop
outsl
test
clc
cmp
mov
rorb
into
mov
pop
cli
gs
fwait
daa
addr16
xor
test
xor
ficomps
sbb
add
aas
jno
add
push
mov
xorb
fcmovu
inc
adcb
testl
aad
xor
aas
jge
int3
call
and
push
jmp
aam
xchg
dec
jns
mov
dec
lahf
dec
addr16
insb
or
in
inc
dec
aam
cld
enter
data16
pushf
mov
xor
push
xchg
fdiv
imul
ret
gs
inc
sub
mov
adc
dec
pusha
cltd
pushf
mov
in
xlat
adc
loop
ret
test
mov
rcrl
mov
xchg
repz
cltd
fnstcw
pop
fsubs
push
repz
mov
add
sahf
pop
push
popa
out
pop
out
and
push
lock
xor
inc
jecxz
pop
jle
ret
xchg
cs
inc
ret
in
movsl
iret
test
mov
add
xchg
fs
sarl
shr
adc
mov
cmp
test
scas
push
test
jno
pop
lahf
inc
dec
cld
inc
dec
xor
ss
xchg
ljmp
dec
cmc
inc
stos
inc
xchg
out
imul
inc
into
cmp
cltd
sbb
ret
lret
fwait
xor
test
mov
das
call
add
sub
push
jns
ljmp
andb
pop
loope
into
movsl
cmp
daa
push
mov
sub
mov
push
test
inc
inc
int
ficoms
jecxz
test
jp
jns
ds
cmpsb
add
insl
pop
flds
cmp
js
xchg
sbb
nop
inc
xor
or
or
movsl
xor
les
lock
repz
xor
add
pop
repz
call
int3
shrl
or
pop
scas
or
lcall
inc
inc
add
dec
pop
mov
and
fsubrl
es
cmpsl
movsl
or
sbb
cmp
movsl
in
sub
push
inc
push
xor
push
hlt
lret
adcb
push
rorl
js
rcl
cli
negl
or
daa
lds
ds
mov
outsl
xor
clc
xchg
ss
std
stos
jns
sub
inc
or
nop
icebp
cmp
push
sbb
mov
or
sub
pusha
scas
pop
xchg
repnz
sti
jno
les
insl
ret
shl
or
clc
rcll
sbb
mov
mov
add
inc
adc
fadds
mov
and
xor
inc
dec
inc
jp
test
push
mov
xor
pop
xchg
call
idivb
mov
aam
out
push
push
and
rol
test
fdivrp
push
sbb
and
aad
pop
aas
add
push
dec
xlat
adc
xchg
jno
les
call
pop
roll
sub
out
sub
lret
pop
jae
xchg
and
xor
inc
cmpsb
icebp
in
push
outsb
cwtl
jae
or
mov
push
test
jo
or
sub
mov
push
call
mov
rorl
cld
ja
arpl
inc
lret
outsl
and
cmc
movl
xchg
xor
aad
or
fisttps
sub
push
sbb
pop
cmp
out
xor
scas
dec
clc
mov
stc
stos
ret
and
jnp
lds
into
inc
and
jne
les
addr16
or
mov
inc
dec
aad
push
dec
vsubpd
and
sarb
fmull
cmp
mov
imul
dec
cmpsb
cmp
push
sti
or
int3
aas
cld
push
mov
adc
sub
push
cmpsl
cmp
test
push
das
pop
cmpl
popf
dec
inc
popf
xchg
ror
push
in
stos
imul
call
jae
nop
pusha
int3
sub
bound
cltd
dec
mov
outsl
cwtl
and
je
shr
mov
jo
cmp
fwait
jg
aas
fistps
mov
jle
mov
push
pop
inc
cmp
bound
adcl
mov
dec
mov
into
out
xor
in
int3
aas
fmuls
or
mov
int3
fs
push
scas
daa
mov
repz
scas
stos
fsubr
add
jnp
and
or
rep
jnp
jo
ds
pop
adc
jp
add
mov
pusha
ret
fdivr
dec
ret
imul
push
sbb
subb
mov
into
pop
fs
mov
mov
lds
sahf
jae
adc
je
push
sub
out
outsb
lret
add
jp
mov
insb
hlt
xor
lods
call
sub
mov
or
push
add
cmpsl
outsl
pop
clc
jmp
cmc
mov
mov
or
pop
decl
in
out
icebp
jbe
out
enter
push
or
movsl
dec
mov
imul
bnd
pop
xor
push
lret
dec
push
ds
or
in
inc
popa
ficoms
xchg
das
inc
mov
popa
push
shr
scas
xchg
cmp
int
pop
push
pop
ret
js
push
dec
dec
cld
pop
add
sub
sbbb
ret
dec
out
out
jns
adc
jmp
push
inc
adc
mov
push
lahf
and
adc
sti
cmp
movsl
into
sbb
das
cmp
xlat
push
add
std
dec
out
mov
mov
sbb
pusha
sbb
cli
sahf
adc
rorl
aas
cmp
dec
mov
rclb
cli
clc
scas
add
ja
xchg
and
popa
dec
clc
stc
mov
jp
out
push
adcb
roll
adc
xchg
sti
outsl
pusha
imul
ret
cmp
je
adc
mov
int3
push
ret
pop
dec
add
push
push
inc
bound
adc
push
shlb
fcomps
push
ret
fistpll
mov
out
dec
dec
cmc
outsl
mov
push
or
xchg
push
rol
and
dec
sbbb
push
sbb
fdivr
and
test
and
dec
mulb
xchg
outsl
daa
push
mov
lds
orl
fidivs
in
cwtl
or
ror
jl
test
pop
mov
push
in
leave
or
mov
in
test
cmp
xchg
sub
insb
fs
mov
and
push
pop
mov
in
jp
test
scas
stc
mov
stc
push
pop
mov
cltd
dec
sbb
imul
testl
mov
leave
std
sbb
lock
js
sbb
mov
arpl
lock
and
sbb
mov
dec
leave
outsb
pop
fdivs
xchg
xchg
hlt
lock
ret
shll
cmp
sub
pop
int3
popa
pop
fidivrl
and
mov
and
cmp
repz
push
cmp
xor
nop
je
pop
jmp
hlt
daa
fsubp
mov
stos
pop
cli
jp
icebp
sahf
lret
mov
adc
out
outsl
push
das
cmp
and
in
mov
xchg
pop
mov
sub
jmp
mov
sahf
test
fwait
push
jno
fdivs
iret
push
in
add
lods
pop
push
clc
sub
sbb
test
test
push
in
xchg
arpl
xchg
add
push
scas
and
lea
aad
aaa
cmp
stc
stc
icebp
popf
mov
pop
js
subl
lret
push
arpl
in
std
jl
leave
out
mov
sbb
leave
fsubs
fidivrl
ret
xor
pop
gs
je
fidivrl
mov
mov
ret
dec
addl
inc
cmp
jnp
arpl
mov
dec
xchg
push
xchg
sarb
test
orl
addr16
lods
lods
mov
cltd
inc
jne
cmc
mov
push
lds
aaa
out
notb
nop
inc
xchg
inc
or
mov
cli
jp
loope
pop
jns
pop
adcb
inc
fsubrl
idivb
fs
sbb
and
adc
insl
lods
or
je
loope
jle
inc
add
rcl
jne
leave
mov
in
and
aas
adc
jl
cmp
outsb
int3
xchg
jge
add
sahf
xor
arpl
mov
jne
sub
jp
sub
mov
scas
jae,pt
jns
mov
cmp
mov
fdivrs
ja
out
add
inc
dec
push
xor
jmp
andl
imul
xchg
jle
jl
lds
mov
decl
pushf
add
xchg
and
mov
mov
adc
pop
movsl
mov
push
ficomps
outsl
icebp
lods
mov
mov
cmc
int
dec
mov
jne
inc
clc
pop
pop
cltd
out
mov
loop
out
out
out
sbb
fists
lcall
mov
xchg
mov
in
fldl
lock
das
dec
cld
and
outsb
add
daa
jg
hlt
lret
les
sbb
cmp
mov
gs
push
outsb
loope
enter
inc
cmp
push
notb
xor
xchg
jnp
icebp
addl
pusha
movsl
bnd
mov
push
test
shlb
cmp
add
leave
rclb
pop
or
pop
daa
js
popa
mov
pop
imul
jl
not
sbb
inc
inc
data16
or
add
aas
jbe
loop
int3
push
mov
add
push
ds
loope
dec
mov
dec
push
cmpsb
test
and
jnp
sbb
cmp
nop
and
pop
stc
cmp
or
mov
mov
xchg
cld
adc
mov
pop
pop
and
mov
push
cmpsb
hlt
push
dec
mov
xchg
push
mov
xchg
cmp
ja
sub
jo
sbb
data16
andl
mov
outsb
xchg
jge
lret
push
sbb
xchg
lea
popa
inc
xchg
fisubrs
insl
jno
and
push
push
test
test
dec
ja
data16
stc
pop
mov
scas
int3
popa
jg
pusha
cmp
in
addr16
js
mov
stos
aad
xchg
popf
adc
jnp
scas
push
js
cmc
shlb
lahf
cltd
inc
in
lahf
mov
imul
jl
jo
aam
lods
xchg
jae
outsl
or
mov
xor
insl
cmpl
jmp
sarl
or
lea
push
mov
jbe
xchg
das
stos
out
mov
pushf
mov
leave
scas
push
push
cmp
data16
test
jae
xchg
push
ss
xlat
std
and
mov
ja
shlb
es
movsl
mov
add
pop
cwtl
test
test
inc
xor
out
enter
mov
nop
sub
mov
mov
hlt
dec
mov
mov
add
int3
dec
sub
inc
mov
push
sbb
loopne
repnz
call
and
inc
pop
movsb
cmp
flds
ja
dec
add
push
movsb
mov
and
pop
jp
das
aas
lret
adc
push
into
insl
adc
sub
or
ds
mov
nop
scas
in
jno
test
imul
mov
sarb
out
fwait
mov
adc
and
jle
inc
cltd
into
add
adc
mov
shlb
in
iret
and
icebp
add
fstpl
cmpsb
ss
mov
jl
pop
std
jg
inc
adc
cmp
or
jl
cmp
xchg
jge
push
mov
adc
inc
enter
jle
mov
lcall
push
mov
lods
push
movsb
push
mov
fstpl
dec
mov
or
pop
pop
push
cmp
ljmp
sahf
test
movsb
pop
pop
jbe
shll
jbe
pop
and
xchg
cmc
ds
leave
int
push
push
aas
adc
movsb
mov
sub
xor
xor
jle
das
mov
xchg
cli
cmp
pop
fistpl
pop
mov
cmp
cmp
push
imul
loope
ret
xchg
xchg
lods
sbb
ret
mov
in
into
xchg
adc
cli
cmp
mov
cli
push
or
lahf
xchg
fistps
mov
jne
xor
mov
adcl
sbb
xlat
cmp
movsb
imul
out
and
frstor
sahf
clc
xchg
cltd
fs
xor
jo
push
into
shll
insl
sub
jo
dec
into
xchg
dec
mov
stos
push
mov
cmpl
mov
sub
fld
arpl
adc
ret
xor
cmp
cmp
lds
addr16
mov
sub
loop
cs
cmp
cmp
call
je
sbb
adc
cld
ficompl
pop
jo
inc
push
inc
int3
ret
mov
mov
mov
loopne
sarl
fs
or
xorl
xchg
jp
pop
xor
mov
sub
push
mov
pop
filds
out
push
sub
mov
fdivl
or
mov
adc
jns
push
dec
ds
mov
add
mov
sub
test
es
enter
xor
mov
inc
fsubr
mov
jns
fdivrs
dec
mov
mov
ljmp
sbb
in
xchg
sub
mov
dec
gs
adc
in
xor
mov
ds
daa
or
inc
mov
data16
mov
lahf
icebp
adc
insl
hlt
fnstsw
jmp
mov
mov
push
xor
out
jg
loope
insb
push
test
out
in
cmpsl
inc
wrmsr
push
bound
ljmp
push
and
mov
xchg
in
insb
push
ds
xchg
mov
sbb
imul
and
mov
mov
ret
and
ror
mov
add
int
test
insb
xor
sarb
inc
push
cltd
push
pop
movsl
xchg
inc
ret
mov
aad
pop
testl
loopne
push
xor
adc
cli
out
pop
testl
xchg
cmp
xchg
ficoml
push
orb
jbe
arpl
pop
sub
cmpb
into
or
pop
popa
aas
jge
xchg
pop
test
xchg
lock
push
pusha
nop
lret
insb
inc
inc
jg
or
cmpsb
or
fwait
nop
insl
mov
mov
sti
xor
xchg
mov
mov
jge
adc
inc
call
leave
pop
es
int
int
jg
sbb
repz
mov
popf
fisubs
cltd
mov
jae
jbe
test
js
lret
jle
or
testl
mov
insl
xor
pop
cmp
js
lcallw
sti
sbb
pop
jns
lods
popa
and
add
and
mov
push
imul
inc
dec
clc
or
pop
iret
pop
and
push
mov
fwait
mov
sbb
jl
testl
jae
scas
addr16
inc
pushf
lret
fimuls
lock
aas
and
sti
in
lds
cld
popf
andl
mov
adc
das
movsb
hlt
lret
lods
adc
mov
cmpsb
xor
dec
push
pusha
push
sbb
jmp
stc
mov
xor
mov
mov
cltd
dec
push
add
mov
imul
call
sbb
icebp
sti
or
and
ja
jo
sarl
repnz
adc
popf
sub
pop
sub
push
xor
loope
jmp
mov
xchg
imul
ljmp
adc
orb
or
push
rclb
cmova
movsl
lods
stc
xchg
fistps
pushf
test
push
loop
test
ss
dec
or
or
sbb
jge
xchg
dec
loop
leave
adc
xchg
cmpsb
data16
dec
rorb
mov
dec
xchg
jle
addr16
cmpsb
dec
xchg
lahf
pop
add
dec
fwait
loop
stos
inc
inc
xor
add
daa
inc
out
adc
jl
popa
sbb
sbb
cmpsb
sbb
imulb
out
xchg
adc
test
daa
pop
lret
rcrl
or
enter
es
shl
or
aas
das
inc
mov
int
stc
and
int
add
pop
pop
loop
cmp
xchg
mov
sub
out
mov
push
cs
adc
push
stos
sub
push
xchg
stos
sti
sti
sub
rcr
jae
cltd
cmpsb
test
mov
in
fstpt
into
lret
mov
shrl
jae
imul
inc
inc
enter
iret
sbb
test
jg
lcall
mov
call
push
icebp
fmull
jb
in
sub
sti
sub
or
dec
jle
outsb
xorb
rcrb
jo
push
int
cwtl
test
lea
loopne
outsl
mov
sbb
cwtl
cmpsl
adc
dec
xchg
lods
push
outsl
stos
mov
sahf
jbe
das
sbb
shll
inc
das
hlt
xor
jg
jle
mov
nop
push
sub
or
xchg
mov
dec
test
xorb
loopne
sub
pop
jl
pop
pop
mulb
jnp
insl
std
shrb
inc
fists
das
in
cmpsb
lcall
cmc
mov
jp
in
push
ss
mov
stos
inc
jb
sub
cmp
ja
loop
sub
loop
pushf
cmp
icebp
arpl
movsl
fwait
xor
and
fcompl
out
add
mov
cmp
push
enter
hlt
or
ds
int3
sub
mov
cmc
daa
outsl
sbb
fsubrs
out
pop
cltd
dec
push
sbb
in
inc
sbb
clc
stc
test
iret
push
mov
imul
out
xchg
ja
dec
dec
mov
pop
mov
sahf
nop
push
push
mov
lret
ds
rcrb
mov
push
mov
in
enter
or
pop
cmpsw
mov
inc
jg
sub
fadd
les
xor
imul
icebp
pushf
scas
lds
test
or
ret
mov
je
and
cmp
xor
out
or
jg
and
cmp
dec
iret
movsb
sbb
insl
rcll
mov
jns
je
icebp
push
loop
mov
fildll
inc
ja
xor
xchg
popa
dec
mov
aas
lods
testb
xchg
icebp
sbb
sbb
xchg
movsb
xchg
std
dec
je
add
xor
mov
xor
clc
lahf
sub
mov
insl
loope
repz
xchg
ret
shlb
leave
pop
js
and
xor
add
xchg
sbb
loopne
xchg
dec
shrb
xchg
push
test
jle
pushw
dec
mov
inc
leave
xor
scas
or
adc
jge
add
and
mov
inc
fnsave
sbb
xor
hlt
add
jb
pusha
xchg
movsb
nop
sbb
in
push
scas
pop
xchg
dec
mov
sub
add
js
and
icebp
pop
dec
pop
sub
mov
pop
in
cmp
int
add
int3
pop
cmp
xchg
xchg
adc
movsl
add
mov
cli
imul
sub
jno
xchg
cmpsb
lods
js
scas
xor
es
xchg
mov
lock
xchg
aam
loopne
leave
push
outsb
ffreep
in
mov
cld
cwtl
insb
sub
lcall
sbb
cmp
je
jae
das
addb
lahf
add
jecxz
rol
sub
cs
xorl
mov
loopne
mov
xlat
repnz
dec
addb
std
mov
lock
push
cmpsb
std
xchg
and
and
jmp
dec
cmp
pop
adc
pop
lret
nop
test
fdivrs
adc
push
jge
pop
adc
jmp
push
les
jg
out
mov
jmp
xor
jmp
lods
lods
lock
pushf
and
push
cwtl
test
jg
pushf
dec
lods
int
mov
test
scas
sbb
fs
nop
and
popf
pop
in
shrb
rorl
fsubs
test
cmp
dec
push
int
sub
sub
add
mov
test
pop
jmp
sub
das
shll
pminub
fildll
xchg
stos
ljmp
orb
in
xor
das
mov
and
add
xchg
lock
add
insb
into
add
cmp
pop
rorb
push
push
out
sbb
aam
inc
adc
or
clc
xchg
xlat
dec
inc
cmc
xchg
fs
pop
mov
fisttps
mov
movsl
ja
push
cli
out
push
adc
and
adc
daa
or
out
mov
lds
dec
and
loop
cmpsb
cmp
xor
xchg
daa
jns
sahf
pop
and
mov
stc
mov
aas
jb
lret
pop
into
test
xchg
fcomi
add
sub
xchg
adc
cmpb
imul
les
jo
cmp
jb
fwait
mov
fmull
cld
int3
inc
mov
dec
xor
hlt
imul
adc
iret
fistps
add
fsub
lret
adc
mov
lods
imul
push
pop
cmp
lods
sub
sbb
popf
loop
inc
in
xchg
rcl
hlt
movsl
ja
mov
jge
test
ficoms
xchg
xor
add
sar
sarl
and
aaa
inc
fiaddl
and
add
cmpsb
push
shll
add
ljmp
mov
and
loop
push
jb
cwtl
push
dec
addr16
test
fwait
push
lds
mov
and
add
shr
jo
ror
pop
fidivrs
mov
jnp
push
es
in
pop
rcrl
sub
cmpsb
mov
add
repz
sahf
jns
push
std
inc
rol
dec
popf
rcll
icebp
jle
in
xorb
imul
sub
enter
mov
lret
jmp
adc
test
sbb
inc
addb
lret
scas
in
xor
dec
mov
fucomp
stos
out
es
fwait
movsb
pop
sbb
mov
jne
mov
data16
cmp
lods
sub
jns
fldenv
push
idiv
lock
inc
insl
cmp
mov
mov
cs
and
pop
mov
stos
pop
jnp
cs
stc
cs
cs
xorl
cmpsl
in
loopne
xor
pop
add
xor
enter
or
fsubrl
or
into
cld
sbb
fs
xor
cmp
aas
or
xor
adc
push
mov
bound
mov
cmp
xchg
jno
jae
in
lret
inc
sub
add
movsb
inc
push
repnz
cmp
lret
xorb
push
loope
sub
inc
push
cmp
pushf
call
lds
repz
pop
js
aaa
out
mov
fsubs
pop
repnz
and
enter
ja
lea
ss
lret
fstl
jae
push
xchg
fmuls
jb
repz
popf
push
jae
les
pop
jno
mov
shrl
inc
fldenv
imul
leave
rcrl
mov
test
pusha
je
sbb
cld
adc
ljmp
adc
arpl
stos
subl
loope
mov
mov
and
repz
xor
lahf
std
loope
mov
rcll
mov
xlat
adc
js
pop
xchg
fnstenv
test
xorb
outsl
xlat
mov
cmpl
mov
pop
inc
inc
cld
sbb
mov
sub
lods
nop
push
add
pop
jns
mov
insl
xchg
stc
test
and
gs
ror
enter
add
frstor
adc
and
pop
adc
inc
push
sbb
divb
push
xchg
inc
rolb
push
add
lahf
leave
lret
cmp
or
mov
outsb
jp
and
xor
inc
mov
sub
cmp
sub
ljmp
adcb
insl
rcll
inc
les
jo
pop
add
pop
xchg
sti
xor
push
sti
aam
mov
or
lock
xor
daa
push
xchg
ss
pop
and
adc
mov
ds
into
sub
push
xlat
mov
jecxz
mov
int3
rorl
add
push
jg
fistpl
mov
addl
push
adcl
sti
mov
push
fstps
mov
cli
sti
jne
ret
cmovle
cmp
jne
sub
inc
popa
mov
jle
push
jbe
clc
mov
cmp
pushf
mov
sub
mov
je
inc
dec
pusha
mov
fsubs
inc
fmul
fstl
or
sbb
jp
inc
mov
inc
cli
imul
inc
sbb
movsb
in
and
cmpb
incb
pushf
and
or
adc
adc
lock
mov
mov
cmp
jg
xchg
test
cmpsl
push
movsl
insl
adc
aaa
lcall
rcrl
bnd
dec
std
push
jbe
js
sbb
mov
jno
jecxz
jb
mul
jo
cmpsl
mov
pop
jnp
popf
or
pop
cmp
pop
inc
add
mov
flds
jle
adc
scas
ja
test
mov
and
adc
imul
rcrb
and
sbb
mov
cmp
xchg
jle
jb
rolb
lods
mov
les
lcall
dec
setl
fisubs
mov
aad
fsubrs
pop
rcr
in
xchg
adc
inc
and
scas
cs
push
lret
jno
ss
daa
jo
mov
lcall
loop
stc
pop
aaa
sarb
repnz
push
xchg
outsb
fists
lahf
and
cmpsl
inc
mov
stos
lods
sti
push
sub
sbb
inc
add
mov
cmpsl
pop
jl
inc
inc
call
push
leave
mov
repz
add
sbb
sub
cmp
outsb
mov
dec
out
subb
or
pop
bound
shll
lcall
add
notl
daa
iret
fisubrs
stc
popf
imul
jb
jl
and
pop
adc
jg
loope
xchg
filds
mov
pop
idivl
mov
jmp
clc
pop
jg
pop
fdivs
shr
mov
sbb
inc
xchg
js
ret
data16
pop
jb
inc
or
mov
adc
stos
jno
xchg
add
movsl
or
cld
daa
pusha
incl
aad
cmp
pop
cmp
mov
rcll
stc
inc
sahf
jle
out
jae
and
sti
xchg
mov
inc
push
dec
adc
lcall
ja
dec
rcr
adc
pmaxub
fsubl
inc
xchg
cmpsb
jle
std
ror
lods
stc
mov
inc
and
cs
mov
jb
mov
xor
in
add
cmp
or
mov
popa
push
xor
push
xor
cwtl
out
cwtl
add
setne
fwait
sbb
faddl
repnz
lock
addr16
test
scas
lods
fcmovnu
loop
icebp
cmp
jns
or
sar
sbb
adc
cmp
jne
sbb
ss
sub
mov
jge
adc
jo
sbb
out
je
mov
in
adc
push
mov
mov
pop
inc
xchg
xchg
push
cli
rcrl
nop
cmp
out
sub
pushf
dec
jge
popa
sbb
lods
or
mov
inc
out
push
imul
not
sub
dec
jno
adc
pop
mov
cmp
xchg
jns
lret
pop
in
adc
mov
jecxz
orl
imul
fmull
mov
push
or
pop
adc
test
sahf
sub
stc
bound
scas
and
enter
movsb
push
clc
bound
pop
sub
cmpsb
mov
xlat
hlt
int3
imul
ss
sbb
rorl
fbstp
js,pn
xchg
imul
mov
or
cs
mov
cltd
sbbl
aas
sub
stos
sbb
les
mov
pop
and
push
jp
jo
fmull
test
adc
jl
sub
repz
icebp
pop
outsl
inc
sub
inc
xor
hlt
lret
ja
jbe
std
xchg
dec
leave
lock
daa
fcoms
sub
outsl
xlat
insb
arpl
jbe
push
xchg
jp
repz
dec
je
es
jmp
sub
push
leave
xlat
cmp
pop
mov
popa
fistpll
cmp
ljmp
dec
jge
test
gs
xchg
mov
mov
adc
aam
xor
mov
adc
pop
push
int3
les
js
lock
andnps
jecxz
and
or
push
aam
stc
clc
imul
xchg
sbb
dec
jmp
shll
mov
or
push
mov
ret
pop
fstpl
sbb
xacquire
js
rorb
sbb
xor
outsb
ss
lods
insb
push
pop
cs
jle
popa
mov
mov
sub
mov
addr16
ret
adc
repnz
pop
repnz
and
mov
pop
rorw
xchg
pop
mov
sub
aam
pop
mov
iret
aam
jge
cmp
xchg
hlt
mov
cs
inc
mov
aas
push
in
inc
adc
lahf
test
in
mov
xchg
mov
add
testb
ja
jp
rcl
sarb
fcomps
ds
lock
push
cmc
xchg
lods
shl
cmp
push
jg
xchg
sub
xor
jbe
and
push
rcrl
dec
or
xchg
out
mov
out
in
pusha
lret
loop
aad
out
push
adc
lods
mov
in
fs
loope
mov
in
push
mov
mov
das
cmpl
in
shlb
fdivrs
jns
sbb
in
fisttpl
je
push
dec
stos
call
pop
scas
call
cmp
push
dec
mov
scas
push
add
mov
pop
movsl
out
dec
xor
jl
std
ficoms
mov
clc
js
adc
mov
inc
xor
rorb
inc
add
and
push
mov
movsb
dec
mov
fdivrl
imul
pop
jbe
sar
add
xchg
sub
jmp
aaa
mov
fisubl
sahf
test
and
mov
push
lods
cmp
ret
notb
mov
inc
testl
dec
mov
cmc
outsb
pop
dec
pop
aam
out
jecxz
xor
sar
xchg
mov
lds
call
inc
int
js
cmpsb
lods
das
mov
outsb
pop
dec
dec
outsb
lret
mov
sub
pop
cmpsb
or
cmp
add
mov
lock
ljmp
dec
testl
mov
inc
inc
lods
repnz
lods
dec
decl
inc
cli
add
dec
mov
pop
dec
mov
cwtl
fcomi
mov
and
les
sbb
inc
add
push
add
push
mov
loope
lret
mov
sbb
and
mov
xchg
in
in
inc
lahf
dec
in
inc
daa
inc
mov
mov
inc
mov
fidivrl
or
addl
push
movups
out
sub
push
lret
stos
aam
repz
aaa
mov
in
stc
or
pop
ja
jbe
in
notb
sbb
daa
fldenv
clc
je
lahf
mov
decl
repz
dec
lods
adc
push
movsb
add
mov
jnp
test
scas
mov
stos
sbb
dec
in
or
xchg
into
rcll
mov
mov
and
or
aaa
pop
add
in
in
mov
hlt
dec
jle
loope
xor
mov
mov
and
cmp
rorb
cmp
or
add
btc
mov
jns
jle
iret
sub
jns
xor
lock
bound
inc
in
dec
mov
daa
out
inc
fs
jo
enter
lahf
fs
ret
repz
lcall
out
push
test
pop
sbb
push
jp
flds
jns
lahf
int
mov
idiv
push
jnp
cmp
mov
pop
lods
lods
enter
orb
mov
test
test
pop
movsb
gs
jecxz
cmp
mov
mov
inc
adc
push
fwait
inc
arpl
cwtl
je
or
lret
push
imul
in
lahf
lcall
ffreep
repnz
icebp
push
in
sub
clc
leave
rcrl
or
sub
addr16
jl
loopne
sbbl
fsubr
sbb
js
lods
out
leave
lcall
mov
adc
shrb
cmp
adc
fcoms
mov
jae
sahf
outsb
xor
shlb
pop
sbb
sbbl
push
outsl
mov
rcrl
rclb
mov
or
dec
jnp
and
inc
pop
or
add
push
pop
inc
clc
sbb
or
mov
push
daa
push
mov
inc
inc
push
clc
aaa
adc
in
mov
jae
je
add
scas
push
stos
dec
adc
sahf
cs
jge
cwtl
rcrb
lret
mov
orb
int3
mov
rcrb
pop
mov
insl
xchg
mov
in
bound
test
mov
loope
mov
adc
mov
cmp
rcrl
push
inc
aam
xchg
adc
dec
mov
jmp
mov
inc
mov
cmpsb
dec
ds
mov
inc
jl
sub
xor
xchg
sahf
jns
roll
shl
push
jg
and
inc
lret
ja
popa
pop
jmp
jg
xchg
mov
daa
pusha
mov
sahf
add
out
add
cmpsl
jl
xchg
or
nop
clc
mov
or
and
icebp
xor
mov
mov
ffree
out
xor
aaa
outsl
dec
sub
lcall
add
cltd
xor
out
add
in
ficoms
insb
and
js
in
jo
stos
arpl
or
xchg
rorb
in
or
pop
pop
jo
cmp
jge
push
xchg
mov
cmp
and
inc
xchg
pop
psubsb
lods
add
mov
inc
and
pop
popf
dec
fwait
movsb
ret
repnz
lods
dec
mov
or
add
jl
xor
movsb
push
daa
fdivl
push
stos
sub
movsb
decl
daa
push
xor
mov
pusha
out
mov
iret
shl
cltd
inc
pop
push
test
mov
shlb
push
push
sti
aad
cmp
in
push
sub
ja
das
mov
cmp
jle
push
repnz
test
imul
lcall
jge
push
insl
sub
stos
mov
jo
imul
pop
inc
jg
test
cli
mov
mov
adc
xchg
mov
mov
push
or
adc
repz
enter
mov
lret
cld
dec
fnclex
es
cld
hlt
or
dec
sbb
filds
scas
pop
popa
xchg
sub
shrl
inc
ja
call
push
push
mov
es
push
out
and
psllw
scas
int
mov
rol
mov
cmc
fnsave
jne
push
sub
push
push
repz
out
call
pushf
pop
push
or
add
pop
aaa
ret
mov
movsb
mov
cwtl
add
push
mov
mov
push
and
mov
out
ror
mov
inc
xchg
mov
mul
in
pop
mov
mov
or
cmp
outsb
adc
push
test
mov
call
imul
fnstenv
ja
sub
mov
in
out
cmpsl
out
inc
adc
int3
jae
out
mov
cmpsb
lods
sub
pushf
push
cmp
fldt
cmpsl
rcrl
scas
addb
jb
adc
and
pusha
pop
jge
lods
sub
into
imul
gs
sarl
or
dec
xchg
in
push
add
fmull
push
iret
pop
adc
sbb
cmpsb
dec
jmp
jne
jno
jecxz
push
leave
mov
push
mov
in
outsl
inc
sub
pushf
xchg
bnd
pop
inc
push
rcrl
xchg
xchg
aas
xchg
push
push
fcompl
sub
mov
xadd
push
test
fidivrl
loop
mov
jge
sbb
or
cltd
adcl
push
cmp
xchg
add
add
mov
lea
mov
movsb
pop
jl
sub
mov
shll
mov
push
cli
out
clc
xor
jmp
add
into
inc
sahf
jecxz
ljmp
andl
fcompl
cltd
dec
mov
push
pop
xchg
pop
xchg
nop
add
jmp
sub
inc
jle
push
repnz
stc
aad
scas
pop
dec
mov
rorl
imul
pop
adc
pop
stos
and
inc
adc
inc
and
xor
mov
adc
std
aad
ror
sbb
js
or
jmp
sbb
ds
dec
mov
inc
loop
addb
xchg
in
mov
lds
daa
repnz
sbb
divl
icebp
rcrb
adc
mov
add
test
popf
and
sbb
dec
sbb
stos
aas
xchg
mov
and
dec
and
xor
loope
jecxz
imul
mov
sbb
cmp
fcmovne
ja
push
inc
add
mov
adc
dec
xchg
jl
cmc
jae
mov
call
jns
fsubp
pusha
shll
and
ja
pop
pop
push
test
dec
or
sarl
iret
test
xor
je
lods
adc
xchg
xchg
in
dec
mov
cmp
fsubl
add
inc
in
cwtl
jns
push
or
ljmp
rcll
enter
iret
lcall
push
inc
xchg
push
xor
mull
mov
mov
fs
sar
pop
ljmp
xchg
sbb
xchg
mov
push
test
loopne
lret
xchg
dec
mov
scas
test
pop
jg
cmp
sub
xor
icebp
aam
or
push
insl
sbb
fdivl
inc
mov
inc
out
loop
add
mov
in
cmp
inc
mov
shrl
or
addb
adc
out
adc
cmp
push
jle
or
mov
sbb
mov
inc
push
jg
pop
clc
rorl
icebp
in
inc
stos
dec
jns
ds
pop
fnstcw
mov
dec
lods
mov
sub
push
shlb
mov
bound
mov
test
mov
jo
in
mov
cld
dec
sub
jne
movsb
adc
aad
pop
int3
mov
movsl
fidivs
jg
cmp
push
in
dec
xchg
xor
push
pop
jne
outsb
pop
inc
pushf
imul
or
cmp
sub
imul
xchg
repnz
xor
push
sub
xchg
mov
mov
subl
add
std
inc
mull
add
loopne
lea
shrl
ret
xchg
and
dec
push
and
imul
mov
fimuls
clc
add
push
jno
movsl
mov
jnp
adcl
push
jmp
aam
loop
add
or
sbb
sub
hlt
iret
mov
pushf
into
push
adc
out
arpl
xor
ret
sbb
pop
xchg
test
jno
jb
jge
sbb
movsl
mov
mov
fistps
icebp
ja
aas
popf
divl
adc
jl
jb
imul
push
rcrl
frstor
lret
inc
int3
inc
mov
dec
add
cmpsb
orb
mov
sub
xchg
fsubr
add
sahf
xchg
outsb
iret
xor
test
cli
ja
or
and
shlb
push
jle
jae
cmc
jae
lock
dec
sti
xchg
mov
pop
fcmovne
and
push
sub
rcrl
imul
je
sbb
test
int
int
je
cli
mov
ficomps
daa
imul
sbb
pop
and
xor
test
adc
mov
cmp
dec
or
lahf
enter
pop
out
rcll
push
jge
arpl
pop
jl
inc
adc
push
add
stos
daa
mov
or
rol
adc
mov
aad
pop
daa
lahf
xchg
xchg
popa
dec
mov
jmp
adc
lahf
nop
mov
sub
test
imul
xor
stos
dec
mov
jne
adc
addr16
mov
mov
and
lds
adc
or
fldcw
es
pop
mov
mov
loope
mov
loop
nop
mov
scas
out
movsl
mov
add
mov
mov
mov
cmp
and
cmp
fdivrs
add
shrb
add
ret
leave
add
sbb
cmp
inc
mov
dec
and
bound
lret
jns
mov
xor
sub
cmpsb
insl
mov
fisubrs
push
bound
sbb
push
leave
xor
add
test
mov
sti
stos
mov
out
dec
scas
or
push
lock
dec
adc
in
adc
out
dec
mov
cwtl
stc
cmp
js
lock
ja
and
inc
sub
pop
orb
add
adc
scas
pop
jns
jns
insb
mov
push
arpl
adc
sbb
enter
andl
lret
ja
cli
inc
jne
jge
push
pop
xchg
mov
cmp
nop
ja
push
cmpsl
orb
fs
mov
mov
rclb
adc
fprem1
mov
dec
test
xchg
or
mov
inc
lcall
cmp
mov
or
mov
push
gs
dec
ret
pop
mov
cmp
dec
dec
cwtl
xor
push
inc
sbb
inc
test
sarb
cld
imul
int
cmpsl
xchg
cmp
xchg
cltd
ret
or
dec
and
pop
jl
fwait
xor
mov
jae
int
sub
pop
and
mov
into
shll
lock
pop
push
inc
jp
xchg
adc
xor
xchg
inc
pop
adc
mov
rol
push
jg
push
jl
and
add
bound
push
pop
loopne
lahf
adc
mov
movsl
fnsave
arpl
push
pusha
aaa
ret
stos
lods
leave
mov
pop
test
push
jbe
xchg
js
out
xchg
in
xor
and
cmpsl
mov
sarb
mov
in
or
sbb
or
lahf
shlb
mov
les
add
iret
incb
and
cmp
adc
and
xor
mov
punpcklbw
pop
jbe
push
leave
push
pop
clc
subb
pop
fdivl
sar
mov
aam
stc
outsb
sbb
jl
arpl
adc
mov
aad
cmpsl
insl
adc
insb
push
jbe
in
daa
adc
rclb
add
xchg
push
mov
dec
cli
xor
push
cmp
add
sub
out
mov
inc
mov
movsl
mov
mov
rcr
dec
cmp
push
imul
inc
mov
xchg
jae
das
adc
push
add
and
xor
loope
test
pop
xchg
sbb
sub
xchg
or
mov
in
mov
inc
and
or
hlt
add
inc
mov
es
push
les
lods
or
mov
jae
add
inc
imul
out
ret
xchg
cmp
jae
lds
int
push
lea
inc
and
cmpsb
fsubrs
mov
lcall
inc
mov
pop
iret
adc
ljmp
pop
dec
rorl
roll
repnz
cmpsb
cwtl
inc
movsb
xlat
cmpsb
pop
cld
jge
adc
pop
sti
or
xchg
xchg
jecxz
out
into
dec
aam
les
ret
cmpsb
dec
mov
pop
clc
lods
std
xchg
lods
sub
imul
add
gs
push
test
subl
jp
iret
orb
push
lahf
sbb
add
in
jns
push
aad
pushl
or
lret
push
sub
add
dec
sub
dec
xchg
xchg
or
or
lret
outsb
popa
in
mov
cltd
mov
into
roll
pop
adc
ret
pop
fidivrs
mov
sub
pmovmskb
jecxz
loope
aad
cmc
mov
push
cmp
rcrb
mov
mov
cmp
mov
and
imul
sbb
dec
dec
stos
lds
dec
repnz
scas
inc
mov
jl
pop
xchg
gs
out
jb
call
xchg
std
gs
call
stos
push
push
ss
mov
add
repz
push
call
mov
or
jae
mov
mov
cld
fwait
xor
sahf
test
fdivrl
sbb
sarb
cmp
lret
pop
cmp
xchg
test
add
hlt
lds
mov
jae
ds
testl
stc
or
mov
inc
push
mov
add
mov
pusha
pop
int3
idivb
and
mov
adc
mov
pop
ss
mov
xor
adc
pop
enter
cmc
sbb
pop
sbb
das
cmp
adc
cmp
icebp
lds
mov
insl
loopne
icebp
insb
mov
fwait
in
xor
iret
xchg
pop
add
adc
out
mov
or
clc
mov
adc
and
sti
mov
clc
stos
pop
ljmp
repnz
sahf
add
cs
rclb
sub
ret
sub
xchg
mov
pop
js
xchg
pop
adc
push
ud1
or
scas
scas
push
cmp
sbb
dec
mov
into
sbb
jg
cmc
sub
pop
xor
or
sbb
pop
pop
jl
mov
negl
pop
sub
div
fldenv
mov
int
jge
push
push
xor
mov
mov
sbb
jnp
or
mov
ret
pop
cwtl
mov
pop
push
sub
mov
mov
lock
or
cli
xlat
inc
pop
ds
movb
inc
push
add
loope
and
add
cmpsb
sbb
call
or
cmp
push
dec
cli
adc
mov
in
mov
shlb
mov
inc
scas
call
out
fimull
adc
or
xor
repnz
aas
shll
shrb
shll
out
dec
stos
pushf
rorl
push
add
push
into
and
outsb
and
mov
mov
mov
insb
xchg
ficoms
dec
loop
into
and
cmp
or
cltd
gs
add
mov
push
ds
cmp
je
mov
inc
push
loop
popl
mov
sahf
jb
mov
orb
add
imul
sbb
nop
nop
hlt
cmp
pop
stc
and
xchg
sub
sbb
xchg
dec
lods
out
and
adc
call
add
imul
xchg
cld
add
imull
insb
stos
mov
lds
std
in
iret
adc
sbb
sub
cld
adc
icebp
arpl
push
rcll
sbb
cmp
pop
neg
xor
mov
sub
outsl
mov
or
data16
sarl
decl
pop
mov
xor
sahf
xchg
sub
xor
aad
add
add
push
add
es
dec
sbb
into
popa
imul
aas
insb
and
or
sbb
jecxz
ss
cmpsb
icebp
dec
pop
pop
cmp
mov
xlat
test
or
mov
daa
and
cmpsl
or
xchg
push
push
xlat
fisttpll
jne
push
xchg
add
xor
sar
loop
daa
aad
sti
sub
mov
movntq
scas
dec
xchg
in
mov
dec
and
fs
sarb
lret
mov
std
mov
fadd
popa
push
pop
fdivrl
hlt
daa
out
gs
cltd
push
inc
xor
cwtl
mov
xchg
xor
sbb
jg
mov
sbb
inc
mov
pop
lods
pop
mov
int3
popa
sbb
aam
hlt
shll
jecxz
mov
nop
adc
andl
lcall
jo
orb
je
inc
add
push
ja
fldt
aam
mov
push
movsb
pop
and
fisttps
xor
mov
xorb
jbe
inc
testb
or
inc
sti
mov
sub
cmpsl
popf
mov
cmp
sbb
subl
xor
sub
pop
test
lret
cwtl
arpl
scas
inc
rep
mov
fstpt
xor
stc
mov
mov
push
or
push
or
push
pop
inc
hlt
test
notl
nop
mov
mov
mov
sub
sub
filds
imul
in
pop
xor
arpl
pusha
xchg
mov
int3
push
call
imul
sbb
xchg
mov
dec
movsb
pop
cmp
jg
test
mov
notb
cli
xchg
ljmp
mov
sarb
mov
or
fisubs
pop
enter
movsl
pop
shlb
jg
pop
loopne
dec
xchg
sbb
stos
flds
jp
idiv
push
xlat
cmp
sbb
ss
stc
dec
jmp
adc
pop
es
pop
cli
leave
jno
cmp
andb
lcall
ficompl
in
test
cs
cli
jo
imul
jo
inc
cwtl
sti
out
lahf
inc
pushf
scas
cmpsb
or
movsl
and
test
out
mov
call
xchg
inc
jp
mov
mov
fwait
iret
movsb
scas
dec
or
cmp
in
enter
or
adc
in
test
jne
fcmove
pop
pop
jne
pop
cmpsl
push
cld
xchg
dec
loope
ja
gs
pusha
xchg
lcall
loopne
iret
aad
fsub
call
mov
adc
inc
hlt
lret
dec
out
cmp
int
pop
inc
call
stos
adcl
or
ds
push
in
out
sbb
loopne
xchg
subl
sbb
sbb
add
and
popf
mov
push
xchg
dec
adc
dec
push
pop
int3
cmp
or
mov
out
and
fnsave
jnp
testl
jnp
push
scas
jns
pop
pop
test
outsl
jae
cwtl
imul
or
or
adc
fdivrs
push
mov
dec
inc
sub
cmp
and
lret
stos
lds
scas
xor
in
cs
pushf
subl
aam
sbb
mov
or
xchg
pop
and
dec
in
repnz
mov
jge
scas
adc
inc
and
fwait
cmp
dec
or
jbe
int
mov
stos
cmp
add
filds
movb
dec
jo
lea
loop
movsb
imul
cltd
jo
arpl
iret
in
jb
lods
xor
dec
sbb
cmp
nop
push
xchg
jbe
test
mov
xchg
mov
fsubrl
popf
fwait
mov
xchg
sub
dec
clc
cmp
cltd
dec
xchg
xor
in
mov
cli
popl
pop
into
or
cmp
pop
or
jnp
nop
xchg
ja
lahf
jp
xlat
xor
dec
pusha
jnp
dec
sub
scas
mov
enter
sbb
xorl
in
sub
jo
jnp
sar
inc
xor
jl
mov
outsb
ret
addr16
jae
lea
divb
or
or
fmulp
push
xor
inc
aam
bound
mov
xchg
adc
dec
out
pop
jae
xchg
int
add
mov
push
mov
out
popf
sub
mov
test
sub
cmc
mov
mov
fistps
xchg
adc
push
and
std
lahf
or
loopne
scas
divl
sub
cwtl
cmp
in
sub
popf
xor
lcall
pop
daa
xchg
insl
flds
mov
cmpsl
movsl
and
rcrl
mov
xlat
pop
push
jne
adc
cmp
ret
pop
mov
outsb
mov
out
test
ret
lahf
jae
add
call
cld
lock
pop
hlt
jno
fmuls
and
xchg
mov
outsl
sti
pop
add
push
mov
daa
rorb
jno
mov
rol
into
je
jnp
addb
jnp
iret
aas
int
mov
adc
loopne
push
pop
outsb
std
and
sbb
mov
jae
or
lahf
fsubr
lahf
loopne
cmp
cmc
test
imul
les
mov
lds
in
xchg
stos
inc
jp
pop
scas
inc
out
adc
cmp
fcomp
mov
pop
add
mov
fsubr
jae
out
sarl
sbb
call
mov
popf
jae
dec
and
js
in
scas
mov
mov
sarl
inc
xchg
sub
into
or
pop
clc
fldcw
repz
in
pop
jns
stos
dec
mov
fcoms
jp
mov
add
pop
mov
jg
fdivl
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
jnp
dec
daa
sbb
adcl
addl
je
cmp
andb
pop
icebp
cmp
pop
mov
jecxz
xchg
jns
faddl
push
mov
mov
movsb
enter
sbb
xor
sub
push
or
int3
in
pop
cmpsb
push
and
repz
or
mov
popf
pop
lock
out
jg
repz
je
mov
lret
push
test
and
outsb
xchg
in
movsl
mov
int
push
mov
repz
cli
daa
xor
test
jge
jb
inc
mov
xor
dec
inc
mov
and
cwtl
or
pusha
fisubrl
mov
rclb
insb
lea
cmp
mov
arpl
dec
mov
mov
inc
jmp
and
mov
daa
push
jl
arpl
xchg
jno
in
adc
xor
push
or
repz
or
dec
addr16
mov
xchg
test
out
movb
adc
cs
sbb
pop
mov
outsb
push
cmp
jnp
xchg
daa
nop
jmp
int3
aaa
inc
or
lock
xchg
xchg
int
and
fidivrs
cmc
push
mov
jmp
adc
nop
inc
out
arpl
jg
loopne
sub
cmp
repz
push
xor
addl
sbb
sbb
xchg
sub
cmp
sti
mov
outsl
xchg
cmpsl
add
or
jnp
sbb
inc
bound
xor
mov
pop
out
notl
sub
inc
mov
loop
add
mov
lds
sbb
mov
or
ja
bound
fisttps
inc
jmp
jecxz
lods
loopne
rolb
cmp
fwait
push
xor
add
jp
inc
inc
push
cmp
dec
pushf
cmp
push
fcmovnb
in
ds
test
out
sbb
shll
cmp
fwait
inc
popa
adc
jb
outsl
add
mov
ret
or
mov
mov
ds
jp
push
lahf
lret
jns
out
sub
and
fcom
clc
jae
int3
push
jbe
repz
cmp
inc
mov
xor
xchg
mov
dec
inc
mov
jg
imul
sbb
fldenv
stos
xchg
mov
aas
push
mov
add
mov
sub
or
dec
out
cmp
mov
addr16
jecxz
rclb
pop
xchg
mov
inc
rcl
mov
mov
pop
dec
call
xchg
scas
jnp
scas
ss
js
sub
mov
adc
call
xchg
pop
mov
and
popf
fmuls
or
mov
lret
or
mov
cmp
and
repz
ljmp
cmp
lds
xchg
inc
popa
ljmp
outsl
xchg
lret
inc
and
repnz
repz
add
les
cmp
cld
lods
add
sbbl
and
mov
mov
sub
sub
mov
repnz
inc
sub
ds
jne
and
mov
push
dec
ljmp
arpl
mov
repnz
add
xor
dec
mov
in
and
jp
inc
lods
lahf
xor
daa
mov
jle
cmp
dec
lret
xor
fisttpll
inc
xor
arpl
rcl
adc
sub
or
out
mov
pop
mov
adc
lahf
dec
cli
inc
hlt
scas
imul
pop
jle
jb
iret
pop
sub
mov
sbb
into
loopne
and
jo
mov
into
rcrb
or
cltd
add
adc
cmpsb
push
xor
insl
mov
pop
in
pop
sub
xor
rclb
pop
pusha
repnz
bnd
andb
xchg
fnstenv
push
rolb
add
and
mov
or
xchg
test
hlt
test
xor
out
das
dec
mov
sbb
sbb
xor
loope
xchg
xchg
mov
loop
mov
int3
inc
mov
sar
imul
jecxz
sub
push
popa
mov
or
loop
cmp
dec
xchg
aas
mov
popf
mov
fcoml
ret
in
sbb
fimuls
mull
xor
js
jp
out
jge
inc
cmp
cld
popf
cs
pop
mov
iret
mov
pushf
leave
mov
ds
xor
popf
or
int
xor
push
dec
adc
iret
push
int3
clc
cmp
jmp
pop
dec
xlat
lds
lea
xor
adc
outsb
daa
rclb
inc
stos
hlt
jns
fdivrs
fbstp
add
das
and
int
adc
dec
inc
jg
push
lcall
cmpsl
cltd
mov
sbb
adc
ret
fs
xor
sti
push
leave
inc
cmc
mov
and
add
dec
lret
xchg
aam
jmp
nop
cmp
call
mov
sahf
add
sti
stos
jle
sbbl
push
jmp
das
repnz
jl
cmpsl
out
jmp
jle
cld
and
cmpsl
shll
and
enter
movsl
ss
rorb
cwtl
pusha
push
rcll
inc
push
cmp
popf
ds
dec
call
sub
in
jmp
into
sahf
popf
jl
mov
sub
scas
hlt
sbb
inc
ror
lods
inc
test
sbbb
int
and
aaa
cmpsl
lcall
aad
ljmp
cmp
inc
nop
dec
lds
jo
xor
lcall
loope
and
je
cmp
adc
je
mov
push
jge
gs
icebp
filds
outsb
sub
cmpsb
shl
decl
mov
cmc
add
out
mov
add
jecxz
add
lds
test
jne
jl
jmp
sub
mov
lods
fwait
cwtl
adc
sbb
cwtl
out
les
int
lods
add
stos
lret
clc
push
xchg
dec
mov
add
bound
sub
mov
lods
sahf
js
mov
dec
xor
lcall
or
sub
call
cmp
out
jno
inc
mov
lods
cwtl
mov
ds
sti
dec
in
pop
outsb
add
or
sub
rorb
push
cmc
and
insl
push
es
ds
or
mov
inc
mov
add
cmp
cltd
add
pop
xchg
into
movb
fnsave
popf
mov
sub
xor
ljmp
push
stos
fs
mov
daa
call
or
mov
cs
out
push
int
arpl
mov
lcall
hlt
adc
pusha
cmp
mov
inc
dec
pop
daa
ficoml
leave
fcomp
xchg
shrl
jg
inc
pop
lret
stos
pop
dec
add
lds
nop
rolb
out
movsl
pop
xchg
inc
in
mov
sub
xchg
movsb
in
jmp
push
cwtl
stos
addr16
into
pop
push
xor
std
dec
pop
inc
cmpsb
int
sbb
js
and
shrl
cltd
cmp
orb
adc
mov
push
cmpsl
push
xchg
push
pop
adc
dec
in
dec
pop
push
leave
lret
scas
cltd
cmp
movsb
mov
lods
frstor
cmp
rorl
fwait
cmc
cs
mov
push
push
pop
ficoml
pop
and
jns
clc
cltd
sbb
stos
jg
jl
mov
decb
sub
mov
mov
ljmp
nop
loope
out
or
fwait
lods
push
leave
dec
aad
pop
insl
pushf
test
test
imul
push
jmp
call
ss
arpl
iret
inc
push
add
xchg
int3
xor
inc
fcompl
aaa
dec
cld
leave
pop
pop
mov
pop
repz
stos
mov
cld
xor
mov
jbe
mov
cmp
aas
and
sub
cli
fs
rcr
and
aam
arpl
inc
and
out
push
lcall
insl
mov
sbb
adc
ret
insl
and
daa
push
pop
mov
cmp
jno
shl
push
imul
sarl
test
je
rolb
cmp
cmp
xor
xchg
pop
xorb
insl
or
pop
mov
lcall
rclb
mov
sahf
push
and
je
mov
mov
xchg
mov
nop
or
sub
shr
iret
sub
imull
push
or
and
ja
imull
ljmp
dec
jo
int
jp
sub
xchg
mov
aam
cld
es
jns
mov
mov
xchg
ficomps
in
sub
out
les
jg
mov
popf
into
inc
dec
xchg
test
scas
inc
hlt
lods
jo
fwait
lret
inc
sbb
decb
inc
sbbl
sub
add
sub
jo
adcb
lret
xchg
mov
push
test
jb
dec
out
sub
xor
adc
rolb
ret
add
faddl
pop
ficomps
jecxz
in
shr
aad
adcb
ss
adc
adc
ja
xchg
sbbb
sti
push
xchg
mov
iret
pop
lds
inc
out
jne
cmp
incl
inc
fwait
sbbb
std
sub
mov
jmp
mov
add
repz
out
ret
adc
test
dec
faddl
mov
shlb
adcl
and
pop
cld
out
inc
lods
aad
mov
arpl
out
inc
js
fistl
fs
outsb
cmp
decb
push
filds
pop
movsb
xchg
push
cs
out
aas
out
mov
sub
or
movsb
inc
movsb
mov
sbb
or
sbb
dec
sbb
rcrb
mov
add
in
pop
push
daa
adc
or
inc
fadds
lock
in
jp
icebp
test
mov
mov
push
enter
dec
fs
ss
out
ds
punpcklwd
sbb
pushf
and
call
sub
lret
push
xchg
jmp
hlt
pop
mov
cmp
imul
in
movsb
lds
movsb
or
rorl
out
jnp
push
pop
fists
jnp
sub
dec
sbb
xchg
and
jecxz
or
dec
add
sbb
jno
popa
insl
aam
and
shlb
leave
mov
hlt
stc
mov
daa
jle
inc
popa
xchg
push
scas
jbe
sub
add
cmc
xchg
mov
cld
push
lds
lcall
in
sbb
push
bound
sub
or
inc
movsb
jmp
aaa
loop
notl
mov
lret
xchg
daa
mov
inc
adc
outsb
dec
repz
pop
arpl
add
sar
ds
sbb
xchg
push
lods
mov
das
data16
outsl
xor
fdivr
std
xor
jmp
stos
mov
xchg
inc
shlb
mov
pop
ljmp
aaa
sbb
repnz
lods
mov
aaa
out
lods
push
cmp
aam
call
int
add
adc
mov
test
inc
xorl
xor
clc
fst
xor
mov
xor
push
pop
stc
mov
daa
imul
push
sub
and
fxch
add
into
sbb
jns
mov
jnp
dec
adc
les
lea
stos
lahf
pextrw
jp
mov
mov
jb
mov
movsb
lcall
push
xor
insl
pusha
test
add
sbb
out
dec
ja
jmp
mov
lods
sti
push
lret
repz
notl
orb
xor
mov
dec
rorb
shlb
dec
dec
mov
push
gs
imul
sub
daa
push
xchg
insl
add
lock
xor
push
cmpl
inc
sub
cs
add
xchg
and
mov
push
sbb
fdivrl
fisubl
push
mov
jle
leave
mov
jp
jb
imul
fwait
jmp
ss
pop
ret
imul
bound
std
fs
pop
rorb
sti
int3
les
dec
inc
aaa
aas
and
lahf
bound
pop
js
bound
push
lahf
js
jp
icebp
jl
inc
loope
lret
ret
push
int
xor
outsb
aas
stos
mov
cs
sbb
jmp
push
sub
jo
jae
mov
ja
adc
aas
jnp
cwtl
mov
cmp
mov
xor
cmpsb
lret
xor
mov
stos
inc
ds
mov
addr16
movsl
xchg
inc
mov
add
sub
insl
ss
mov
jle
xor
insb
repnz
fs
inc
mov
out
cmp
or
jmp
scas
add
fidivrs
scas
fisubs
adc
push
push
jmp
addr16
xchg
jg
test
add
mov
mov
test
xor
inc
fldl
fisttpl
jle
add
mov
sarb
data16
pop
daa
repz
sub
popa
fs
ljmp
sub
add
mov
repz
mov
nop
fmuls
mov
and
add
mov
loop
push
lods
or
jne
jo
push
and
inc
lcall
pop
imul
push
iret
xchg
push
repnz
add
xchg
jg
dec
ja
jge
sbb
loopne
sub
das
pop
into
jne
mov
xchg
dec
divb
je
push
sub
or
inc
incb
or
jnp
adc
or
xor
sub
movsb
jmp
movsb
imul
stos
mov
aas
repz
idiv
jns
lret
jle
repz
iret
mov
xor
lcall
call
hlt
in
rdmsr
inc
push
push
sbb
sub
mov
or
cmc
pop
push
cmp
fisttpll
repnz
mov
pop
or
jg
or
dec
bound
dec
lock
add
aad
pop
dec
or
sbb
imul
call
pop
mov
pop
pop
mov
adc
jg
cmp
bound
addl
dec
fnstenv
faddp
jno
xor
aaa
jl
jo
shlb
mov
pushf
mov
xchg
mov
cmpsb
je
mov
int
dec
cmc
subb
test
scas
xor
jo
dec
inc
outsl
push
push
aas
mov
loopne
adc
les
cmp
lcall
dec
jecxz
movsb
ds
push
xor
jmp
mov
mov
data16
ljmp
pop
mov
and
cmp
addr16
das
adc
xor
jae
lcall
ret
popf
mov
xchg
sti
or
add
pop
xchg
adc
sbb
push
mov
into
fbstp
fists
pop
les
push
sbb
sti
mov
imul
ror
test
inc
push
xchg
icebp
repnz
in
hlt
sbb
fstps
push
je
sarl
and
or
aam
jno
in
and
fldcw
push
push
andl
sbb
push
xchg
jl
xor
aas
cs
das
sahf
and
insl
adc
test
das
and
mov
arpl
movsl
jns
cmp
cmp
xchg
xchg
loope
mov
sbbb
adc
sbb
sub
push
add
call
sub
pop
mov
icebp
in
xchg
notl
sahf
cli
sub
inc
into
adc
inc
stos
mov
cltd
pop
repz
xchg
and
fldenv
out
clc
fsubs
or
sub
adc
sbb
cmpsb
mov
clc
mov
jo
cs
dec
pop
popf
or
fdivrl
sahf
adcb
mov
jle
dec
testb
jo
cli
scas
jnp
daa
inc
cmp
adc
fs
cld
lcall
js
loop
cwtl
mov
les
lods
adc
jg
cmp
xchg
add
lahf
fnstenv
in
sub
out
loop
lods
mov
wrmsr
xor
or
push
jle
xchg
jns
insl
sbbb
pop
call
bnd
pop
mov
cltd
adc
fnstenv
ja
push
mov
das
dec
ficompl
pushf
insb
int
adc
adc
lcall
movsl
test
mov
pop
jne
add
popf
pusha
enter
gs
pop
jmp
jmp
orb
sub
outsb
inc
pop
fnstsw
imul
jmp
fisubl
push
pushf
popf
fldenv
leave
andb
adc
add
leave
ja
lods
inc
dec
stos
cmp
daa
inc
sub
push
shll
cmc
inc
cmpsb
dec
cli
out
out
lea
push
push
imul
ror
pop
mulb
xchg
fdivs
lods
and
std
aas
inc
pop
notl
inc
pop
xchg
in
test
call
jge
add
or
arpl
lcall
mov
cs
pop
lret
sbb
cld
mov
adc
dec
and
and
addb
iret
sbb
jo
imul
mov
insb
jecxz
stos
out
lea
rorl
push
cwtl
lods
adc
ljmp
cmp
fnsave
cmpsl
xchg
int3
sbb
pop
pop
aam
sbbl
test
inc
out
mov
lock
fcmovb
stos
inc
orl
pop
push
inc
fbstp
and
pop
mov
xchg
sahf
xchg
cmp
stos
roll
add
push
mov
es
lret
or
js
xchg
push
xor
cltd
xor
dec
and
inc
cmp
cs
mov
jg
cld
sti
jo
aam
fcmovbe
mov
inc
cmp
or
test
mov
leave
dec
jae
pop
addr16
xchg
inc
pop
mov
cld
fldt
pushf
jmp
rclb
sbb
shl
cmc
add
xchg
mov
and
insl
ret
jmp
nop
movsl
call
mov
sub
xor
hlt
xchg
lcall
mov
js
xchg
cwtl
xchg
loop
mov
sti
je
add
insl
push
mov
xchg
mov
lret
xor
add
sub
xor
andl
xchg
xchg
aas
andl
cmp
mov
sbb
outsl
movd
xor
mov
sub
adc
fildl
das
sbb
xchg
cmp
pop
cmp
mov
fnstenv
inc
insl
icebp
in
xchg
dec
mov
push
jecxz
cmp
pop
jo
fdivrl
gs
mov
sarb
mov
cmp
add
jae
out
jne
adc
fwait
test
sbb
lods
jmp
clc
aaa
and
in
adcl
push
mov
mov
mov
mov
movsl
sbb
dec
pop
inc
gs
sub
outsb
repz
sub
xor
fidivrl
pop
adc
mov
jbe
lock
or
mov
or
arpl
fsts
arpl
inc
or
cwtl
mov
add
sub
jmp
daa
push
xor
xor
stos
push
mov
push
xchg
mov
jne
data16
jns
pushf
jecxz
call
or
inc
sbb
rcl
sbb
xlat
adc
repz
pop
mov
sub
add
cmpsb
cmp
cld
cwtl
mov
mov
jno
int
inc
push
popa
sti
adc
dec
xor
sub
adc
push
jp
js
cwtl
inc
cmc
ficomps
loop
addr16
ud0
and
xor
xchg
idivl
mov
push
arpl
out
cmp
xchg
ret
cwtl
cmp
mov
lea
xlat
or
inc
cmp
arpl
imul
sahf
and
sub
enter
sub
jae
out
fcomps
push
ja
mov
cmp
cmp
cmp
pop
mov
dec
scas
mov
dec
push
movsb
lret
clc
pop
sub
cmp
inc
mov
ds
aaa
push
frndint
mov
pop
push
sahf
push
push
loop
jmp
mov
dec
mov
or
add
lret
int3
adc
or
mov
mov
les
scas
outsb
add
hlt
mov
mov
push
pop
and
inc
push
nop
inc
cmp
push
gs
scas
mov
adc
pop
into
testb
pop
jl
jb
xchg
cmpsl
add
inc
dec
add
xchg
xor
adc
push
xor
mov
and
aas
sar
add
movsl
and
mov
pushl
scas
pop
stos
pop
inc
mov
sub
clc
scas
pop
rcrl
xorb
test
add
mov
call
or
and
jnp
loope
dec
xchg
mov
jo
sbb
add
and
mov
mov
cli
push
or
xor
loopne
xor
lret
nop
lcall
subl
and
mov
jmp
mov
in
div
jne
mov
mov
ret
push
and
or
aaa
in
call
jne
push
cli
mov
sub
sub
inc
cmp
test
call
fcomps
xchg
jnp
adc
adc
scas
test
jl
and
popf
mov
adc
adc
jl
das
mov
pop
inc
or
add
mov
in
dec
inc
lea
or
pop
mov
fisubrs
add
mov
in
mov
les
loope
stos
enter
nop
cltd
jb
dec
testl
inc
stos
sub
in
lcall
pop
stos
rorb
mov
roll
dec
into
xchg
sarb
mov
das
sarl
cmp
cmc
shlb
jne
jne
jge
mov
push
push
push
mov
mov
popa
imul
mov
pop
jl
test
rorl
mov
sub
inc
mov
aas
out
clc
pop
bound
cmp
xchg
andb
filds
pop
push
inc
push
mov
pop
in
mov
jb
xor
imul
lret
repnz
mov
invlpg
shlb
xchg
cmp
fbstp
sub
xor
pushf
push
call
je
jp
ljmp
inc
push
jmp
lock
js
push
mov
into
lahf
jmp
movsl
or
js
in
js
hlt
and
dec
cmpsb
lock
cmc
scas
mov
mov
lcall
jge
adc
arpl
sub
and
xor
rcll
xchg
pop
cltd
push
mov
sub
pop
lret
sub
add
adc
es
xor
jl
and
cmp
push
std
mov
test
mov
jno
cmp
mov
cmpsl
push
ljmp
pop
sbbl
leave
js
ret
cmp
mov
in
outsb
adc
js
shll
dec
jne
push
jg
stos
inc
jecxz
bound
adcb
dec
dec
lods
xchg
lahf
fldt
insb
leave
out
pushf
das
xchg
dec
sar
sarl
cli
insb
jae
xchg
mov
icebp
movsl
jp
add
add
add
mov
loopne
xchg
jge
add
jo
pop
inc
or
push
movsb
je
push
into
repz
mov
mov
pop
cmc
jns
jle
pop
push
lahf
push
xor
paddq
xor
and
stc
mov
enter
mov
pop
adcl
or
sub
xor
mov
or
and
cmpsb
xchg
loope
jns
dec
jb
js
into
call
out
pop
movsl
out
out
cmp
cmp
pop
or
pusha
cmpsl
push
outsl
stc
jmp
repz
movsb
cmpsl
icebp
xchg
xchg
or
xchg
push
mul
push
pop
inc
lods
pop
xlat
mov
and
push
mov
mov
adc
mov
xchg
mov
and
cmp
fs
roll
and
jns
xchg
test
ja
fnsave
lea
mov
pop
xor
mov
stos
mov
mov
mov
sbb
in
dec
fcmovne
std
sbb
jmp
push
mov
leave
test
or
cmp
mov
jns
adc
push
and
mov
in
test
jno
xor
rolb
sbb
jb
hlt
sub
fists
popf
pop
jmp
adcb
rorl
inc
lods
out
sarb
pop
rcrb
sbb
mov
rcl
mov
add
out
or
mov
or
inc
outsl
push
jb
test
outsb
push
in
fcompl
or
scas
jnp
inc
mov
scas
lcall
fprem1
dec
jmp
xchg
shl
push
pop
fdivl
pop
stos
xchg
lods
cld
lea
lods
xchg
jne
loope
jp
pop
scas
add
jns
cmp
jne
pop
sub
and
dec
ljmp
movsb
jbe
mov
adc
cwtl
fs
jmp
sar
cmp
loopne
int3
lods
or
fst
popa
sti
pop
pop
lods
es
lds
push
xor
cmpl
out
sub
rorl
sub
pop
jecxz
xchg
push
jge
cmpsb
jb
mov
iret
mov
mov
iret
fwait
je
cltd
lret
std
sbb
repnz
dec
push
mov
dec
cmpsl
dec
mov
inc
adcb
ret
mov
push
cli
pop
lock
arpl
je
or
test
imul
outsb
imul
jns
xlat
stos
bound
and
pop
and
es
test
pushf
adcb
mov
mov
shl
stos
cmp
outsb
or
mov
mov
fwait
movb
movsl
mov
xchg
js
sbbl
and
fwait
adc
insl
lret
lahf
call
push
into
push
dec
and
test
popf
cmp
cmp
adc
movsb
mov
subl
aaa
push
jle
inc
mov
fsts
jb
xchg
xor
pop
rcr
bound
mov
sub
jo
dec
jecxz
adc
sub
mov
ds
xor
or
fistl
ret
push
fldt
xchg
clc
xchg
repz
std
and
mov
je
nop
out
mov
mov
int3
pop
ss
aas
lret
bnd
aam
jo
push
mov
inc
mov
je
sti
mov
add
fs
call
mov
sub
and
in
imull
loop
inc
scas
decb
inc
fs
and
ds
stos
mov
mov
subl
or
mov
mov
or
sub
mov
cmp
fmull
inc
test
cmp
into
cwtl
insl
leave
mov
jge
scas
mov
sarb
movsl
movsb
hlt
outsl
lock
mov
shl
cmp
xchg
insl
sti
adc
sbb
adc
mov
or
xor
or
sub
fcoml
stos
das
mov
int
jae
stos
dec
in
loopne
punpckhdq
dec
stos
adc
mov
mov
or
std
fs
pop
popl
aas
pop
jecxz
pop
arpl
inc
mov
lock
mov
addl
and
gs
mov
cwtl
fistps
jmp
adc
add
pop
sbb
sbb
mov
mov
pushf
inc
mov
movsb
add
pop
jbe
sub
sbb
or
add
negl
sub
push
das
sbb
arpl
xor
andb
or
iret
hlt
decb
cs
into
inc
fwait
cwtl
mov
sub
mov
adc
cmpl
push
xchg
inc
fisubrs
hlt
push
stc
in
fisubrs
cmp
mov
push
cld
aas
xchg
add
sbb
pop
ret
mov
xchg
sub
push
bound
cmpl
push
loope
adc
test
stc
xor
repz
into
pop
xor
push
cmp
mov
insl
pop
das
sbb
dec
das
pop
in
sarb
sub
notb
add
in
in
in
pushf
pop
out
dec
das
sub
mov
cmp
jo
inc
add
out
testb
sbb
cmpsb
sahf
cmp
cmpsb
loope
int
jle
int3
and
sbb
clc
xorb
inc
inc
cmp
pop
or
xor
and
add
dec
cli
xor
pop
bound
loop
cmp
idivb
enter
das
enter
dec
arpl
insl
cmpsb
shlb
in
or
mov
popf
jne
add
xchg
scas
mov
jae
push
into
cmp
or
push
xchg
push
sub
lcall
jmp
mov
add
ljmp
imul
sub
cld
cs
jae
cmp
mov
push
mov
in
jne
push
mov
rcll
mov
or
jae
mov
pop
or
loope
mov
out
fiaddl
int
icebp
loope
dec
mov
push
sbb
addr16
fldl
jge
mov
jnp
and
iret
sub
inc
sub
inc
jge
fwait
xchg
jmp
cmpsl
sbb
in
jns
repz
mov
dec
push
aad
into
rcll
push
mov
jle
inc
lods
push
lds
fbstp
ret
pop
mov
xchg
sub
les
lahf
push
subb
xchg
into
mov
push
mov
out
syscall
cmp
add
cltd
adc
repnz
sub
rcrl
leave
clc
ja
jl
pop
call
push
lods
fldt
daa
ficompl
pop
or
xchg
push
cmp
ja
pop
dec
ljmp
mov
xchg
loopne
mov
scas
mov
jnp
daa
push
ret
xlat
lock
imulb
notb
push
dec
xor
ret
cltd
sti
sahf
repnz
dec
int
inc
push
lods
push
dec
scas
pop
jbe
repz
adc
jae
or
xchg
in
or
das
scas
shrb
jl
addl
push
sbb
xor
sbb
idiv
test
adc
mov
repz
cltd
push
rorb
sub
frstor
scas
aam
dec
js
xchg
nop
jb
insl
inc
cmpsl
or
mov
cmp
subl
ljmp
inc
jae
ja
mov
rorb
mov
testb
xor
loope
and
adc
pop
mov
mov
inc
sbb
loope
enter
pop
cmp
or
jne
sub
fucompp
cmp
stc
rcll
js
in
push
pop
jae
cmp
mov
ljmp
xchg
jle
xor
sti
test
lret
adc
out
sahf
cmc
mov
in
repz
push
sub
push
nop
push
pop
xchg
jge
or
js
pop
outsb
inc
sub
lds
pop
sub
enter
lds
mov
int
sub
sbb
icebp
iret
xor
movsb
mov
cmc
xlat
lcall
xchg
push
cmc
jns
mov
sbb
cmpsb
test
cmp
mov
cs
jns
imul
jp
test
push
and
push
sbb
adc
pop
lcall
fists
pop
loopne
jl
xor
in
ds
ljmp
cmp
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
xor
addb
xchg
inc
arpl
inc
xor
xchg
fldl
cmp
push
fldl
movsl
iret
lock
in
xor
mov
and
addr16
dec
xchg
or
jo
sbb
insl
pop
xchg
inc
xchg
cmp
inc
ret
inc
mov
or
cwtl
xor
add
sbb
pop
int
mov
ja
pushf
ljmp
iret
movsb
jl
mov
jno
jmp
ds
adc
xor
or
or
and
lahf
mov
dec
in
rcrl
jmp
fmull
dec
arpl
sub
pop
test
push
mov
repnz
daa
rolb
scas
addr16
popa
cmp
add
jmp
aaa
mov
ljmp
add
cwtl
jmp
adc
js
jne
test
loope
cmc
bound
sbb
mov
adc
xchg
or
pop
je
fiadds
loopne
pop
scas
pop
cmp
add
fs
mov
outsl
mov
mov
jmp
push
or
mov
incl
mov
lock
lea
and
call
fstpl
je
cld
xchg
mov
add
in
ljmp
idivb
xchg
jge
adc
arpl
in
pop
nop
fldl2t
mov
lcall
sbb
std
jp
pusha
sbb
cltd
push
fcmovnb
lock
cli
cltd
or
sti
cmp
xlat
mov
mov
mov
imul
addr16
xchg
jbe
repz
adc
pop
les
push
pop
push
imul
mov
out
or
sbb
lds
jmp
xlat
inc
inc
or
mov
push
jnp
jg
stc
stc
mov
aaa
xor
test
mov
icebp
daa
push
mov
sbb
sarb
dec
ds
lods
lds
add
aaa
xchg
je
cmp
or
mov
and
lahf
mov
jns
mov
push
pop
in
and
sti
insb
scas
fwait
jns
jmp
lcall
lds
jae
neg
cld
out
pop
inc
aas
aam
out
in
mov
sbb
add
mov
sbb
cld
scas
pop
mov
xlat
xchg
lods
push
sbb
ds
popa
sbb
mov
mov
inc
xchg
jmp
mov
sahf
stc
push
andb
sbb
mov
mov
mov
dec
add
sub
sub
and
adc
xchg
mov
and
imulb
les
shrl
jae
sub
push
adcb
pop
shll
add
data16
pop
and
xrelease
and
inc
loope
cmp
addl
mov
lods
pushl
enter
add
ljmp
sbb
sbb
sbb
jmp
out
mov
mov
add
sub
daa
ret
cmp
pushf
cmp
xchg
nop
leave
mov
mov
outsl
lods
sbbl
mov
and
rcr
mov
mov
fildl
aaa
adc
stc
into
xchg
mov
ds
out
test
movb
sahf
repz
xor
cmp
sub
dec
data16
xor
jo
cmp
sub
iret
jge
xchg
add
xor
pop
xchg
fsubrs
and
mov
or
push
or
sub
add
dec
jp
xchg
mov
fs
mov
lea
enter
xchg
shl
push
mov
dec
adc
iret
pop
mov
mov
xor
xor
enter
filds
sbb
imul
scas
mov
inc
shl
lea
mov
arpl
adc
mov
test
lcall
sub
cmp
adc
mov
sbb
gs
jnp
add
in
out
xchg
pop
jmp
xorl
popa
clc
ret
repnz
jecxz
nop
aad
dec
sbb
repz
cld
xor
inc
mov
lds
aam
out
call
mov
add
icebp
mov
sbb
imul
or
cmc
or
xlat
movsl
loopne
push
les
gs
adc
push
jae
jp
jo
push
and
jle
mov
inc
push
inc
xor
adc
jae
jne
scas
push
fmul
pop
negb
and
call
or
leave
inc
out
lret
sbb
gs
aas
push
repz
dec
mov
ret
loopne
fsubs
mov
jne
fldl
mov
lods
aas
out
jle
inc
mov
xchg
mov
aaa
ljmp
popf
dec
sbb
mov
jp
stc
adc
ds
add
sbb
stc
cmp
fsubs
and
shlb
out
and
lcall
mov
mov
jl
xchg
cmp
int
adc
imul
cs
push
mov
test
int
mov
jmp
insl
mov
push
xor
test
and
scas
mov
filds
pop
xor
scas
clc
cmpsl
push
mov
and
xchg
xchg
and
inc
not
adc
loope
dec
scas
mov
popf
cli
in
xor
mov
in
les
jno
adc
imul
xchg
inc
outsl
out
call
fcmovne
inc
popa
addr16
add
push
xor
clc
lods
int
xor
ja
pop
sbbb
cli
sbb
sub
ja,pt
jb
outsb
pop
cmpl
or
lcall
ror
in
loope
insl
push
imull
mov
push
lahf
or
inc
xchg
and
stos
sbb
notl
sbb
lret
adc
test
js
hlt
std
xchg
pushf
in
dec
fs
fstl
hlt
adc
shll
cmc
push
out
mov
out
push
cltd
fldenv
stos
mov
fadds
rcrb
mov
mov
dec
fldl
insb
dec
jne
push
les
aas
adc
mov
add
inc
mov
nop
add
sar
and
mov
adc
roll
mov
aad
test
orb
add
push
push
xorb
into
flds
cmpb
cwtl
rcrl
aas
sub
and
and
fists
push
and
xchg
hlt
xor
xchg
jge
out
push
cmp
and
fdiv
jo
sbb
dec
popf
stc
and
mov
daa
dec
dec
ja
stos
je
cmc
nop
sbb
xlat
mov
adc
sarb
rol
xchg
and
xchg
push
mov
pop
cmp
shl
mov
mov
xchg
jp
xor
mov
scas
add
push
stos
stos
xchg
hlt
mov
lea
pusha
lahf
xor
cmp
jle
out
movsb
mov
mov
add
jg
ljmp
xchg
jl
leave
mov
mov
lods
ret
test
xlat
dec
icebp
mov
xchg
jae
ret
movsb
dec
dec
mov
std
cmp
cld
decl
push
test
push
mov
jmp
and
and
add
pop
xchg
sti
cli
cmpsb
push
mov
in
inc
int
add
jno
add
mov
and
or
mov
cmpsl
jne
jae
xor
bound
mov
sub
mov
xlat
and
and
sub
out
sarb
cmpl
inc
mov
xchg
imul
pop
inc
dec
imull
pop
adc
jae
add
or
mov
push
pop
add
stc
push
fdivs
lret
dec
jp
ja
out
test
fs
nop
adc
test
adc
mov
mov
jle
insl
pop
pop
cmp
and
mov
ja
lret
movsl
lahf
int3
mov
dec
inc
jbe
jnp
sahf
enter
cmp
out
push
int3
fwait
std
mov
ss
mov
cmp
out
adc
mov
xor
cmp
add
xor
movsb
pop
inc
fidivl
shll
test
jo
pop
stos
ljmp
aaa
mull
rcrb
imul
roll
lds
in
ret
mov
adc
aaa
dec
sbb
xchg
fmull
mov
mov
daa
jno
pushf
stos
pop
es
add
mov
aam
sub
sbb
sub
hlt
std
add
and
inc
pop
pop
jle
ret
xchg
or
lods
fbld
daa
in
cltd
cmp
pxor
adc
out
imul
mov
loope
adcb
lret
jo
mov
stos
fistps
test
hlt
roll
cmc
adc
ds
ficomps
mov
pop
cs
mov
dec
dec
push
mov
mov
sbb
pushf
cmp
pop
ja
xor
clc
dec
rorl
in
je
lahf
push
xchg
xor
and
addr16
and
aad
out
lods
fldenv
jo
pop
das
xor
aas
push
xchg
enter
inc
mov
add
subl
gs
add
lds
in
data16
imul
jbe
mov
pop
sub
push
or
xchg
cwtl
insl
pop
divb
pop
and
test
pshufw
das
add
adc
xchg
or
cmp
mov
test
outsl
icebp
sub
inc
dec
xor
nop
and
add
mov
daa
xchg
mov
in
jb
in
rcll
mov
insl
or
je
mov
pop
cld
data16
sbbb
scas
ret
int3
mov
xor
das
adc
lahf
inc
pusha
clc
mov
inc
int3
icebp
ficomps
cmp
iret
cmpb
int
fld
mov
ljmp
mov
js
adc
dec
jp
jne
not
popa
shlb
out
cwtl
mov
cld
cli
fldl
xchg
mov
scas
js
pop
dec
hlt
sarl
or
inc
inc
in
not
pop
stc
in
push
mov
sub
add
mov
sbb
repz
cltd
xchg
add
test
fwait
cli
movsb
mov
out
mov
mov
aas
addr16
ljmp
insb
adc
imul
imul
inc
into
nop
dec
psubsb
xor
mov
imulb
shrl
addr16
push
fadd
adc
sub
xchg
clc
popf
xor
xchg
sbb
adc
jno
sbb
jmp
xor
dec
clc
mov
add
ja
jne
dec
fwait
xor
sub
decb
xchg
iret
xchg
pop
xchg
push
adc
dec
sub
cs
add
jl
or
push
mov
push
mov
jg
sub
lcall
mov
rcll
cmc
and
int3
lcall
rclb
jbe
push
pop
push
xor
jo
inc
scas
pop
outsb
testl
popf
cmp
insb
lcall
andl
jb
xchg
push
lock
movb
test
daa
or
pusha
cmpl
negl
inc
das
adc
xchg
mov
movsl
clc
pop
andb
clc
cmp
push
mov
add
or
and
adc
movsb
dec
dec
out
sbb
pop
ret
lahf
data16
mov
jg
mov
insl
add
xor
fisubrl
jo
xchg
dec
and
push
aam
int
xchg
int3
inc
jns
xlat
or
push
mov
inc
mov
les
inc
fistpll
loope
xor
ljmp
mov
sub
mov
jl
inc
fisttps
jmp
adc
jge
dec
cmp
stos
mov
insl
adcb
and
popf
and
sarl
fs
sbb
loope
pushf
lds
sbb
rolb
inc
cld
mov
cs
lds
clc
xchg
loop
jno
mulb
pop
and
shrl
into
popf
scas
and
cmpl
stc
ljmp
cmpsl
cmp
mov
dec
lret
adc
pushf
dec
cli
mov
inc
clc
push
movsl
dec
dec
xchg
stc
push
daa
repz
pushf
add
test
xor
fnstsw
mov
bound
test
dec
mov
cmpsb
in
cmpsl
jecxz
sub
mov
adc
insb
sub
loope
movsl
out
mov
jo
and
xor
cltd
push
movsb
xor
ds
or
sbb
sbb
aam
cmpsl
inc
shr
jmp
xor
addr16
mov
inc
mov
mov
iret
mulb
push
mov
xchg
ljmp
xor
push
iret
inc
xchg
dec
lods
ret
das
pop
xchg
arpl
push
jnp
por
and
mov
mov
pop
test
hlt
roll
xor
mov
sbb
add
test
mov
test
scas
xor
fwait
inc
lcall
pop
sbbl
adc
dec
inc
sbb
push
cmp
sbb
sub
adc
and
outsb
sub
or
rep
inc
jnp
mov
fwait
loope
pop
sbb
mov
mov
cmp
aas
cmp
aaa
loop
push
push
test
mov
lods
pop
xor
pop
std
add
mov
mov
and
xchg
and
lcall
sub
es
shll
std
sub
mull
std
mov
rcll
cmpsb
cmp
xchg
lea
popl
mov
jmp
pop
fwait
xchg
xor
dec
mov
aad
sbb
fistpll
push
mov
xor
aad
rcrl
mov
cltd
shll
out
test
mov
in
jae
enter
sub
sbb
rorl
dec
in
xchg
cwtl
addps
inc
mov
and
dec
jno
aam
pop
jmp
loop
push
aam
out
mov
insl
cmpxchg
mov
outsb
xor
enter
ds
outsl
in
xchg
xchg
mov
fstps
xchg
mov
mov
or
fwait
mov
stos
mov
dec
in
inc
into
jnp
push
or
icebp
pop
fbstp
push
ja
imul
aad
rorl
dec
sbb
rcll
sub
lret
repz
cltd
vpshufd
mov
pop
push
xchg
and
mov
and
sub
ja
lcall
insl
cmp
jle
jae
lea
adc
jmp
lahf
popf
ret
add
mov
insb
paddb
add
fwait
out
xor
fsubs
in
dec
int3
inc
sub
sub
and
rcl
lcall
jge
lods
adc
and
push
lds
incl
sahf
and
call
push
and
rcrl
push
mov
pop
mov
sub
mov
arpl
jge
movsb
cs
cmc
gs
add
ret
fldl
mov
out
adc
mov
or
jb
pop
repz
enter
dec
dec
int3
xor
daa
lret
mov
and
add
xor
ret
xor
sub
imul
fbld
add
stos
push
pop
mov
dec
addr16
pop
xorl
adcb
js
pop
sti
jge
mov
pushf
inc
rcll
fs
mov
dec
test
fcompl
mov
inc
rcr
jp
xchg
inc
lea
insb
and
mov
xchg
test
push
outsb
sbb
outsl
ja
int3
rcrl
jmp
mov
outsb
mov
rcll
inc
mov
dec
add
mov
pusha
cs
jl
dec
loop
icebp
and
pop
pop
lock
iret
in
mov
movsb
aad
push
or
fsubs
icebp
arpl
xor
lret
jno
push
in
lods
les
es
cmp
icebp
sub
sarl
pop
mov
out
nop
test
cmp
arpl
fistl
push
adc
inc
push
jae
xchg
inc
xor
leave
sar
jb
popf
movsb
and
sub
pop
sti
je
insl
adc
add
mov
mov
inc
mov
outsl
cmpsl
movsl
and
xor
aam
loop
inc
rclb
and
mov
inc
lods
fidivs
pop
jbe
jl
jb
pop
lcall
and
mov
and
lods
pop
movsb
dec
lret
jnp
fcmovu
jne
rorl
hlt
cmpsb
in
frstor
xchg
faddl
in
xlat
cmp
ret
xchg
test
mov
std
push
push
pusha
stos
xor
pushf
ficoml
sbb
inc
sbb
push
push
cs
inc
stos
sbb
lret
in
mov
aas
lret
ror
and
inc
test
rorb
xorl
or
pusha
jns
pop
sbbb
repnz
into
cmp
ds
xchg
outsb
pop
movsl
or
imul
and
loop
cmpsl
into
imul
sub
cli
jp
lret
rcrl
rolb
pop
mov
jp
push
jl
imul
add
das
cld
push
jmp
stos
adcb
mov
iret
orb
into
mov
inc
pop
aam
jl
ret
xor
pop
js
or
arpl
lods
fcomip
out
popf
add
std
xor
xchg
mov
cmp
lods
rcll
pop
mov
loope,pn
sbb
or
or
hlt
xor
xchg
dec
pop
nop
aad
jae
jae
test
fs
mov
xchg
cmpsl
mov
pop
pop
cmp
dec
push
call
and
shll
aaa
push
test
jns
xchg
add
int3
call
nop
imul
xchg
popf
sub
push
ja
int3
push
das
mov
jb
inc
sub
dec
mov
das
adc
push
nopl
fsubrl
jo
inc
out
cmpsb
mov
shll
or
pushf
push
jb
lock
xchg
movsb
test
pop
ret
xchg
dec
fstpt
orl
push
or
orb
ret
inc
icebp
pop
push
insl
mov
movsb
and
cmp
stos
in
pop
aas
cltd
or
pop
clc
cmp
inc
add
ja
pop
inc
fmull
inc
push
push
call
lds
iret
fisttpll
lods
into
insl
mov
fadds
nop
mov
push
cmp
sbb
add
dec
stos
imul
push
inc
shl
popf
out
dec
and
mov
shlb
orb
sub
enter
lock
ret
fildl
dec
daa
push
pusha
xor
adc
je
insl
xchg
stos
adc
push
inc
xor
in
dec
int3
rolb
xchg
or
outsl
or
push
movsb
lea
and
in
and
sbb
fldl
inc
int3
mov
sbb
leave
sbb
out
mov
jb
movl
xor
js
std
ds
jmp
adc
xor
or
pop
xchg
ljmp
in
and
fwait
mov
adc
mov
jmp
mov
cld
divb
inc
mov
nop
call
mov
lea
mov
jecxz
in
cld
test
bound
je
dec
push
and
pop
jmp
out
fiaddl
inc
mov
xchg
add
push
sub
repnz
adc
stos
aam
jbe
push
mov
call
lods
pop
jno
mov
call
dec
pop
std
jo
movsb
xchg
adc
cs
sub
push
sub
adc
stos
mov
mov
shrl
xchg
aad
popf
es
mov
stos
dec
sbb
push
cmp
aaa
pushf
pop
cmp
pop
or
aas
fidivrl
pop
inc
jle
push
add
cmp
sahf
stc
bound
sub
outsb
add
iret
inc
aas
sub
inc
in
jmp
xchg
jb
pushf
and
xchg
push
movsb
inc
bound
dec
pop
addr16
adc
hlt
setb
sbb
inc
rcrl
add
shr
enter
lcall
mov
xchg
or
push
add
inc
sahf
das
icebp
and
sub
adc
sub
xor
hlt
mov
in
fiaddl
xchg
cltd
into
cmp
jecxz
cmp
rcrb
push
dec
sbb
pop
sbb
loope
pop
fcomps
movsl
shrb
dec
scas
cmp
mov
jmp
je
jnp
adc
fwait
icebp
fwait
and
add
mov
mov
popf
push
lods
in
jecxz
les
add
pusha
loope
stos
jmp
es
add
xchg
lret
pop
mov
clc
repz
jae
xor
lret
or
clc
lret
pop
mov
jg
arpl
sub
jg
lahf
out
mov
or
cmpxchg8b
mov
or
pop
addr16
ret
rorb
stos
mov
es
int3
aas
fwait
out
xchg
cmpsb
mov
incl
cmpsb
fdivrs
sti
in
push
mov
jl
jne
jp
or
scas
sub
add
aaa
jbe
cmp
jb
xchg
hlt
xor
rcrb
outsb
and
lock
or
test
mov
lock
mov
mov
jl
out
xchg
fimuls
inc
xor
dec
xchg
or
mov
out
call
cmpsl
xor
cmp
cmp
pop
or
mov
fs
cmc
stos
lahf
stos
lock
lods
push
shrl
push
sub
cmp
pop
daa
lods
into
faddl
fstpt
xchg
jecxz
loop
andl
aaa
dec
mov
mov
loop
xchg
cmpsl
cmp
out
inc
orb
jae
mov
push
shll
jmp
loop
dec
pusha
scas
mov
addl
inc
daa
cli
cmpsb
test
stc
ret
icebp
xor
rcll
divl
pop
push
or
push
sub
jge
pushf
int
js
or
pop
xchg
aaa
and
mov
xchg
cli
add
xchg
iret
adc
ficoml
jp
push
inc
xchg
sub
pop
pop
jbe
fcoml
aam
push
lret
es
mov
roll
push
push
add
lcall
je
jo
inc
pop
sbbb
inc
ss
call
lret
inc
out
inc
mov
cmpsb
and
jne
fiaddl
ljmp
cld
mov
das
cmp
movsl
jns
sbbb
add
mov
pop
xchg
sahf
xchg
pop
mov
pop
cli
loope
mov
sahf
lods
and
mov
dec
push
xor
arpl
jge
pop
out
inc
sbb
pop
in
xor
mov
bound
aad
sbb
and
or
adc
push
push
sub
sub
mov
arpl
imul
dec
pushw
mov
adc
pop
ss
bound
push
mov
addr16
nop
or
inc
and
in
and
repz
add
shr
pop
loopne
test
fs
xchg
test
push
ljmp
mov
sub
int3
in
mov
push
pop
push
int3
or
xchg
fcmovnu
fnstenv
pop
sarb
mov
out
lods
add
iret
inc
dec
repz
sub
push
fidivl
fcmovbe
clc
jle
jg
out
add
xchg
sbb
cmp
mov
in
aad
jle
cltd
push
or
inc
cmp
pop
push
scas
lds
and
lods
xchg
les
jb,pn
add
cmp
xchg
stc
cmp
xchg
mov
je
aaa
stos
lds
xchg
movsl
push
fs
mov
sub
cmp
int3
mov
testb
push
movsl
movsl
stos
mov
notb
rcrl
xor
mov
in
shll
sub
sbb
jo
xchg
pop
aad
nop
icebp
mov
ja
mov
cmpsb
inc
adc
ficoms
jle
jnp
out
mov
and
mov
fcoml
push
xor
jb
xlat
sub
outsb
add
insb
xchg
or
test
mov
sahf
or
mov
cli
add
mov
ss
pop
sbb
movsb
aas
sub
dec
add
test
xchg
lods
sbb
xor
pushf
cwtl
ljmp
hlt
push
or
mov
shl
lods
bnd
jbe
int3
les
jge
sarb
imul
inc
clc
add
sub
test
lock
bound
sub
fnsave
jbe
jp
jb
nop
adc
loopne
std
cli
movzwl
pop
aam
int
pop
push
dec
dec
cmpl
mov
push
mov
cmc
jp
and
xor
scas
sbb
arpl
push
inc
and
movsb
arpl
stos
sahf
xchg
adc
pushf
or
sbb
addr16
popf
cwtl
fisubrl
sahf
cmp
jg
push
ljmp
into
dec
jg
add
testb
pop
jo
cmp
sahf
cwtl
in
sub
sub
inc
mov
in
jne
lret
pop
jno
cltd
mov
jo
pusha
add
es
das
insl
sub
cmp
cmp
cltd
sub
shlb
int
mov
cli
lcall
xchg
mov
les
les
jecxz
fidivrs
or
out
out
mov
sub
lahf
inc
push
stos
and
or
xchg
fiadds
pop
adc
mov
add
out
in
ss
mov
out
jo
in
sbb
adc
orb
push
xchg
mov
jns
add
stc
roll
rcr
lahf
mov
sub
fimull
dec
and
js
add
movss
add
repnz
into
lret
push
and
mov
test
push
and
lcall
push
adc
and
add
add
jo
add
and
dec
cmp
imul
pcmpgtw
or
cmpsl
mov
je
mov
and
push
mov
cli
out
icebp
lds
dec
imul
insl
add
mov
xor
movsb
in
xlat
inc
repnz
push
xchg
mov
data16
sub
xlat
mov
add
jb
es
inc
rcl
mov
mov
fcmovnu
inc
or
and
dec
push
mov
mov
loopne
leave
in
or
jae
pop
mov
in
adc
aam
stos
es
or
cmpsl
sub
mov
dec
jns
fstl
push
repz
and
jbe
jae
dec
or
js
dec
or
push
incl
fiaddl
and
cmp
jne
lods
pop
sbb
xchg
adc
push
pushf
das
xchg
shl
popa
pop
lret
lahf
sahf
jecxz
jns
dec
dec
lds
push
jle
dec
mov
push
rol
cli
fsts
mov
lret
xor
les
into
push
movsb
push
lods
ret
or
xchg
repnz
in
jg
adc
fldenv
mov
stos
ffree
fisubrl
mov
pop
sbb
xchg
icebp
out
cmp
negb
jb
loopne
add
xor
adc
mov
sbb
fsts
ja
push
stos
mov
mov
mov
push
xchg
push
in
in
sahf
push
mov
mov
aaa
sbb
test
inc
repz
jo
out
add
mov
test
push
jmp
in
mov
inc
adc
test
and
jle
mov
and
imul
sbb
cld
cmp
data16
lods
or
or
jb
xchg
popf
stc
mov
das
aad
sub
loop
jecxz
xchg
cmp
into
inc
mov
lds
dec
add
sub
cmpsl
filds
adc
frstor
in
mov
push
xor
loopne
or
ss
and
xor
or
lahf
xor
fwait
cltd
shrl
sbb
bound
imul
cmp
pop
shll
dec
sbb
mov
inc
leave
push
pusha
pop
mov
fdivs
stc
loop
repnz
stos
cli
pop
pop
in
outsl
dec
into
pop
and
push
push
or
xchg
push
mov
sbb
pop
out
insl
cmp
mov
sar
lret
shlb
and
push
lods
les
cmp
push
test
jo
sub
mov
pop
pop
mov
out
and
icebp
fwait
shlb
call
aaa
mov
or
xor
test
das
in
inc
or
outsl
insl
imul
shll
xchg
adcb
jns
dec
loopne
xchg
mov
dec
push
add
xor
adc
cli
lock
dec
jns
dec
add
pusha
rclb
adc
xchg
adc
xor
sbb
xor
cwtl
jns
imul
and
test
mov
in
gs
iret
cmp
and
clc
popa
das
mov
fisubl
fidivs
jns
dec
icebp
cld
imul
fistpl
nop
bnd
cmp
sbb
shll
dec
in
xchg
add
jne
mov
call
rcr
icebp
add
xor
push
xor
mov
push
and
mov
jg
shll
cltd
popa
xor
sub
arpl
loopne
cld
sbb
push
out
xchg
dec
cltd
ret
int
sti
inc
ret
cmp
mov
mov
jg
mov
mov
aam
mov
and
pop
adc
ljmp
lods
aaa
pushf
mov
sbb
add
mov
sar
jge
lahf
xchg
adc
subb
mov
jno
mov
xor
call
leave
mov
imul
jno
mov
leave
xor
shll
cmp
cld
sahf
stc
ja
cmp
cmp
in
push
add
cld
popa
bound
or
sbb
xchg
mov
imul
or
push
pop
adc
sub
and
xchg
xchg
lods
sbb
push
or
mov
push
mov
lods
es
or
outsb
push
jge
sub
movsl
dec
xchg
cmp
in
scas
mov
inc
xorl
mov
push
xlat
push
dec
and
mov
test
push
dec
xchg
pop
cwtl
stos
and
js
adc
xor
or
lds
jnp
jb
mov
ds
clc
xor
sbb
pusha
int
cli
sarl
sbb
push
push
int
cmp
scas
jb
jecxz
pop
daa
pop
adc
dec
out
sbb
dec
lcall
ds
test
int
nop
pushf
sahf
inc
pop
xor
fwait
sub
clc
mov
xchg
outsl
jno
shlb
or
arpl
mov
test
jne
jp
sub
cmc
sbb
fsubs
inc
push
les
fs
popa
or
test
inc
or
jae
xor
in
pushf
rclb
popf
inc
cmp
mov
shl
aam
inc
pop
adc
mov
xchg
lcall
adc
add
dec
sub
adc
and
xchg
aaa
aaa
xor
repz
xor
insl
sub
inc
subb
lahf
push
cmc
jecxz
fsts
and
andb
pop
adc
mov
pop
push
inc
pusha
dec
rcl
pop
push
xorb
fldt
jp
sbb
xchg
decl
adc
out
cmpsb
in
dec
push
pop
lds
cmp
pop
dec
les
cld
adc
aas
xorl
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
adc
jnp
aad
sbb
addl
sbb
data16
mov
and
xchg
or
jg
sub
push
orb
test
sbb
test
jnp
push
mov
lret
adc
push
leave
je
test
shrb
call
push
popf
jne
pusha
fchs
add
out
sti
pop
mov
ret
imul
imul
push
clc
js
push
push
lret
cmp
mov
fs
adc
pop
shlb
mov
cs
addr16
inc
enter
push
cmp
jae
imul
mov
dec
rorb
lods
xor
psraw
inc
mov
in
lods
jl
mov
icebp
lahf
fcoms
lods
out
xchg
lret
out
mov
or
cmpsl
flds
mov
test
dec
cmp
inc
and
pushf
clc
inc
mov
in
out
fisttpl
dec
fst
cmpb
xchg
ret
and
repz
push
popa
xor
fucomi
jae
in
xchg
adc
popa
jno
dec
cltd
cltd
pusha
or
cmp
cmc
in
call
imul
bswap
dec
ficompl
aas
leave
fwait
ja
dec
incl
aaa
mov
fbstp
pop
or
loop
sbb
rolb
mov
sub
jp
push
pop
xor
int3
pop
shl
inc
jle
push
jl
in
test
sub
int
and
dec
mov
or
movsl
xchg
leave
jns
es
call
inc
xchg
inc
sbb
mov
out
in
and
lods
das
jmp
mov
in
iret
ljmp
sub
out
or
mov
dec
lods
xchg
dec
ja
pop
jnp
push
sbb
lods
add
jle
cmp
ss
lahf
popa
ret
push
push
push
cmp
mov
and
scas
es
and
les
jp
mov
ret
push
dec
inc
xor
and
xchg
adc
imull
cs
fdivs
sub
hlt
xor
jg
es
and
cmpsl
test
mov
sub
adc
jge
aad
arpl
pushf
xchg
mov
cmp
fists
cmc
jb
fdivr
adc
mov
sbb
daa
adc
push
adc
sbb
sub
mov
push
cmpsl
out
shlb
subl
inc
mov
clc
mov
xor
les
cld
sbb
ds
and
inc
test
lahf
sbb
sub
in
push
mov
and
add
mov
add
ret
lret
xchg
xchg
in
lret
dec
add
bound
jle
mov
sub
insl
pop
std
sti
aaa
xchg
ljmp
or
xchg
pop
xor
nop
xchg
arpl
test
cmp
push
mov
ja
popa
iret
jp
or
push
iret
pop
adc
fmull
gs
inc
outsb
pushl
test
enter
mov
cli
inc
aad
inc
adc
adc
or
xor
insl
dec
leave
shll
aaa
sbbb
push
pop
cld
ret
or
jne
mov
sbb
xchg
xor
pop
jp
insb
pop
mov
jmp
sbbb
mov
aam
shrb
mov
js
xchg
xor
mov
xchg
xor
in
pop
jae
xor
clc
fsubs
outsb
out
es
xlat
push
enter
fsubl
bound
andb
clc
or
mov
lret
adc
mov
and
iret
sahf
fimull
ds
sbbb
dec
mov
jge
and
stos
out
or
jnp
add
push
pop
cmp
je
shrl
jae
imul
int3
rcrb
push
andb
adc
inc
add
outsb
shr
shll
outsl
push
addr16
xor
jle
mov
cli
push
dec
push
fisttpl
push
hlt
add
push
dec
pop
add
xor
pop
mov
xchg
mov
sub
test
push
stc
mov
cwtl
jl
shr
or
lret
sub
push
mov
push
jno
mov
push
imul
mov
mov
lds
aaa
pop
cmpsl
int3
les
sbb
adc
call
rcrl
mov
icebp
outsl
push
leave
mov
inc
mov
adc
xchg
imul
aaa
jle
or
and
fnstcw
jmp
loope
pop
dec
mov
cmc
data16
and
xchg
mov
mov
jg
dec
fdivrl
out
ret
add
cmp
mov
or
call
add
xchg
mov
jg
push
aas
inc
movsl
jmp
sbb
pop
pusha
dec
add
in
mov
and
sbb
xor
notl
int3
and
jbe
lods
daa
movsb
ljmp
dec
in
xor
jb
les
dec
mov
adc
inc
fcmovb
cmp
fwait
adc
test
scas
and
sub
das
cmc
mov
pop
adc
xor
testl
mov
dec
xor
dec
inc
dec
fbld
icebp
push
adc
mov
cmpb
adc
orb
aas
enter
jb
or
cmp
nop
ficoms
pop
lock
adc
dec
push
popf
inc
scas
test
xor
mov
inc
xchg
mov
call
sbb
jns
rcll
cmp
icebp
test
cmp
ljmp
sub
hlt
xchg
lds
adc
sbb
cmp
jecxz
js
jmp
sbb
jae
xchg
movsb
cmpsl
in
adc
outsl
jb
inc
and
adc
jecxz
jb
add
cmp
pop
out
in
dec
pop
push
push
jle
movsb
mov
xor
scas
mov
mov
sub
xchg
xorb
push
sub
testl
dec
stos
jns
inc
add
gs
ds
aad
cs
cmpsb
pop
gs
inc
dec
rolb
push
out
cmp
cli
dec
cmp
push
jl
push
leave
inc
lret
xlat
lret
cs
sub
jo
xor
mov
fmul
cwtl
sbb
inc
mov
xor
std
adc
lods
in
and
pop
nop
inc
mov
adc
mov
cmp
inc
jmp
dec
xor
or
jnp
pop
pop
movsb
imul
in
out
in
in
pop
frstor
mov
lea
mov
rorl
das
mov
pop
testb
xor
and
cmpsl
sbb
inc
lods
ret
scas
arpl
sub
pop
mov
push
fidivs
push
sbb
push
gs
push
fdiv
rcrl
cwtl
cmp
jne
mov
movsb
in
pop
sahf
push
add
pop
xchg
out
pcmpgtb
mov
xor
aam
xlat
or
inc
mov
xlat
outsb
cmp
jg
imul
dec
push
jecxz
inc
mov
sub
js
push
cmc
mov
push
ficoml
jl
out
sub
jl
flds
loope
rclb
push
shrl
sbb
add
je
fildl
and
cmp
sub
xchg
repnz
test
ss
xchg
push
lods
ret
pop
sbb
aaa
loopne
outsl
jl
mov
dec
icebp
adc
cwtl
js
js
ret
xlat
testl
rcrb
inc
frstor
push
scas
repz
pop
pushf
ss
jg
inc
cwtl
jmp
mov
push
fsubs
and
adc
and
pop
inc
mov
iret
fstpl
pushf
jb
js
aaa
jno
xor
add
addl
les
inc
lret
popf
and
je
stc
sbb
xor
adc
mov
fistpl
xchg
inc
adc
and
jnp
jg
addr16
movsl
mov
dec
aas
lea
inc
mov
mov
add
pop
fildll
fbld
and
push
mov
testb
cwtl
push
jns
sub
xor
dec
hlt
insl
dec
outsl
stos
scas
or
jle
sarl
mov
mov
cmpsb
push
inc
xchg
imul
fs
fsubl
int
mov
mov
and
xor
test
into
xor
and
xor
xchg
jbe
bound
jns
xchg
pop
mov
in
leave
leave
orl
jo
and
fs
mov
fcmovnbe
aad
cwtl
push
xchg
cltd
gs
lret
cmpsl
mov
jbe
or
or
out
push
imul
jne
jns
stos
pop
cmp
inc
sub
pushl
pop
cwtl
mov
cs
xor
lret
mov
push
mov
jge
adc
xorb
sub
fcmove
vmread
push
notl
fs
xchg
pop
hlt
dec
mov
pop
jg
or
mov
fs
inc
mov
rcll
and
fwait
jge
aad
rol
jmp
mov
nopl
negl
test
fs
adc
cmp
dec
inc
lret
out
pusha
dec
into
dec
push
sti
popa
stos
imul
xor
shrb
mov
cwtl
mov
lods
pmaddwd
pop
sub
xor
aaa
mov
mov
inc
int
sub
mov
daa
xor
insl
gs
loopne
pop
imul
idivl
jae
lods
mov
cmpb
pushf
insb
mov
pushf
scas
add
test
adc
inc
test
ljmp
jmp
pop
cmp
push
clc
scas
mov
ret
nop
mov
lcall
idivb
bound
pop
mov
pushf
scas
push
addr16
xor
pushf
or
shrb
xchg
shrl
ja
jne
jg
fdivr
mov
pop
cli
test
jl
jle
cpuid
dec
inc
sti
sbb
mov
fdivl
aam
negl
jb
mov
and
ss
mov
xchg
dec
psubq
push
fmull
int
sbb
pop
mov
jmp
gs
push
push
out
pop
mov
int3
sbb
loop
aaa
push
frstor
jne
stos
mov
mov
ret
fs
mov
jnp
loop
out
pop
dec
mov
in
inc
or
iret
mov
call
pop
fisubrl
sub
adc
icebp
mov
ds
jns
dec
adc
lret
jbe
push
outsb
cmp
mov
adc
or
sub
pop
jp
gs
mov
adc
mov
push
enter
stc
xchg
mov
xor
hlt
cmpsl
sbb
movsl
push
jg
and
scas
imul
push
push
push
mov
add
mov
push
mov
mov
ds
adc
lock
sub
push
mov
pop
cmp
cmp
js
cmpsl
inc
jle
int3
push
sub
xorl
add
repnz
outsl
cwtl
jecxz
out
dec
test
xchg
pop
inc
and
and
mov
test
cmp
leave
lock
jecxz
dec
sub
push
and
mov
fs
xchg
ja
ljmp
test
adc
negb
les
pop
std
sbb
push
push
popf
add
out
ja
test
mov
adc
push
xchg
shll
push
ret
sbb
and
outsb
fwait
mov
xlat
push
lcall
out
xlat
je
movsb
enter
out
cltd
mov
rcll
int3
sub
xchg
aaa
inc
push
mov
xchg
fdivl
lods
cmp
idiv
xlat
pop
cmp
or
jae
jle
push
daa
pop
sub
mov
cmpsl
lea
dec
and
sbb
aas
dec
mov
cltd
sbb
inc
sub
das
cmp
lock
sub
push
lcall
mov
stos
jle
or
fsubs
dec
popf
or
xchg
scas
xor
pushl
sbb
enter
push
mov
mov
sub
sub
push
mov
xor
sbb
fidivrl
cmp
cwtl
sti
xor
into
add
sub
testl
test
xor
fisttpl
inc
mov
jge
pop
int
in
dec
mov
fisttpl
addr16
push
pop
fmul
sub
sbb
out
inc
nop
and
mov
xchg
insl
cmc
or
mov
fnstenv
cltd
test
mov
lret
and
loope
in
enter
mov
add
clc
sub
lds
push
adc
pop
jp
stc
xchg
push
mov
and
je
jmp
je
jae
mov
aam
aam
dec
roll
daa
xlat
ds
in
mov
lock
fiadds
out
movsb
js
adc
arpl
mov
sub
dec
add
popa
push
push
pop
xor
cmpsl
fnstcw
mov
gs
outsb
cmp
adc
xor
add
push
sbb
into
mov
imul
push
pop
add
inc
mov
mov
jns
loope
popa
cld
adcb
cmpsb
clc
into
movsl
cmp
sbb
push
and
rclb
fsubl
lods
add
in
sub
or
jmp
scas
sbb
mov
scas
repnz
mov
push
sub
aad
mov
nop
mov
fisubs
das
call
and
pop
mov
cwtl
outsb
out
and
fdivr
lods
jns
mov
and
fsub
push
mov
rdmsr
adc
add
fsts
jae
pop
loopne
dec
in
sarl
ljmp
es
inc
mov
pusha
xchg
cmp
dec
push
dec
and
push
xor
or
mov
pop
roll
or
xchg
rorl
shll
xchg
shl
aaa
cltd
je
mov
mov
fisubl
mov
pop
sbb
rcll
push
ljmp
adc
jg
data16
enter
jp
push
inc
lods
call
and
xchg
sub
cs
jp
xor
pushf
dec
aaa
sbb
test
out
xchg
dec
mov
cwtl
mov
fs
dec
push
in
mov
xor
push
dec
mov
ret
decl
cmp
jo
push
push
inc
mov
data16
das
vmovaps
shll
mov
jnp
repnz
sbb
xor
loope
inc
inc
out
jno
pop
lods
cmp
xchg
push
xor
stos
popa
add
inc
es
scas
or
push
lret
pop
roll
sub
das
push
lret
sub
lods
gs
js
xchg
sub
or
mov
push
or
xorb
adc
xlat
pop
mov
cwtl
test
out
sub
int3
fcomps
push
jg
dec
sar
in
lret
jle
inc
push
call
stos
push
push
mov
mov
jle
jl
iret
cwtl
cmp
iret
js
push
mov
jo
hlt
and
sub
mov
mov
jnp
je
dec
sub
lret
mov
mov
ret
out
hlt
test
addl
mov
ljmp
pop
mov
add
and
xor
push
insb
push
mov
shll
ds
sarl
adc
aad
ficoms
rcl
pop
inc
jb
enter
push
push
in
call
pop
inc
imul
jno
fists
imul
push
cmpsl
mov
xor
and
outsb
mov
dec
jle
add
add
jp
repz
cmpsl
les
ljmp
scas
cmc
movsl
lods
mov
pop
mov
jns
testl
xchg
cmc
gs
xchg
mov
push
aad
movsl
and
fwait
hlt
sti
cld
out
or
aaa
lcall
mov
outsb
mov
cmp
xchg
jle
and
ja
jl
pop
sbb
push
xor
and
mov
repz
push
adc
dec
mov
mov
mov
sbb
add
movb
jne
in
xchg
and
dec
inc
adc
mov
into
push
aas
inc
test
sub
mov
notb
mov
jae
dec
xchg
push
mov
ret
lret
xchg
loopne
and
push
stos
add
dec
lods
add
sbb
cmpb
shl
sbb
lods
leave
hlt
pop
cmp
dec
out
cmp
dec
pop
aad
pop
scas
fs
fwait
nop
ret
shll
jo
ret
or
aas
or
jno
repnz
in
lcall
push
cmp
stc
pop
outsl
xor
stos
lods
jnp
inc
pop
mov
pop
dec
loope
jle
mov
in
push
pop
aad
adc
adcb
mov
test
mov
clc
and
sbb
adc
sti
push
das
insl
ljmp
lock
xor
pop
xor
insl
pop
jmp
int
pop
incb
hlt
or
dec
jl
and
sahf
mov
andb
icebp
xchg
lods
sub
mov
mov
popf
std
sub
push
lahf
lods
stc
pop
adc
js
jmp
jp
orb
in
mov
nop
mov
pop
xchg
ret
fisubs
xor
sub
cltd
ret
insb
and
cmp
fmuls
and
xchg
inc
call
ja
cltd
cmp
repnz
je
pop
jl
pop
cltd
jecxz
ficompl
and
xor
jge
daa
jg
mov
ret
loopne
push
mov
xchg
xchg
xchg
mov
mov
mov
sub
cmp
pop
out
adc
pop
test
cmp
out
mov
ret
clc
jnp
mov
or
rcrl
jmp
adcl
push
cmpsl
popf
xchg
jg
je
andb
jmp
outsb
lds
xchg
hlt
loope
int3
xchg
cwtl
lahf
xchg
xchg
fs
out
push
cwtl
xchg
int
sbb
jo
sub
add
loop
in
mov
mov
pop
jb
mov
adc
xor
sti
and
mov
pop
addr16
repnz
insb
sbb
xchg
or
sbb
xchg
jg
out
mov
pop
xchg
sbb
ret
movl
sbb
push
jl
xchg
or
pop
iret
sahf
dec
notl
or
outsl
jae
inc
and
adc
lock
inc
fisttpll
jecxz
sahf
inc
adc
test
fnstsw
js
xor
sbbb
xor
push
lods
and
das
cltd
cmp
sbb
pop
jnp
test
adc
loop
fs
and
push
repnz
cltd
fiaddl
push
das
iret
xchg
test
push
test
cltd
mov
and
divl
push
sub
inc
fdivrs
xor
jecxz
pop
and
test
or
inc
pusha
js
cltd
rcrl
pushf
daa
pop
sbb
mov
mov
imul
mov
or
outsb
or
in
movsl
mov
loop
cmp
lods
pop
and
cld
aas
mov
push
les
jne
and
int
inc
jo
pop
push
mov
out
js
jecxz
dec
test
loop
sbb
jne
dec
lock
out
mov
pushf
mov
sub
xchg
repz
sbb
hlt
test
leave
inc
pop
push
cmpsb
xor
adc
lea
inc
push
xor
cmc
es
mov
cmp
lea
in
xor
xchg
ljmp
mov
pop
fbld
cmp
push
fisttps
rsm
aaa
mov
ja
insl
iret
or
pop
xor
mov
mov
xorb
and
outsl
add
xor
adc
pushf
mov
test
sbb
in
push
push
xor
xor
xchg
pushf
pop
inc
aas
push
std
mov
aad
jl
adc
cwtl
xor
hlt
sbb
xor
subl
jge
adc
dec
jnp
fs
test
clc
mov
push
mov
dec
and
push
fsubr
mov
mov
push
add
nop
mov
cs
out
sti
push
xchg
adc
stos
fadds
popf
cmp
mov
pop
fcomps
sbb
jnp
inc
sti
daa
push
jbe
or
cmp
filds
sub
clc
out
nop
adc
nop
orb
push
cli
add
in
aas
lds
fcompl
jge
jp
rol
imul
mov
or
dec
dec
imul
xchg
int3
adc
mov
add
mov
push
pop
adc
leave
outsb
sbb
icebp
test
mov
test
sub
ja
lcall
xchg
adc
xchg
inc
addb
inc
add
lods
adc
inc
shlb
xchg
mov
pusha
sti
jne
aas
cmpb
sahf
es
adc
push
insl
pop
ljmp
popf
lcall
sub
dec
mov
test
xchg
scas
dec
jno
xlat
pushf
xor
mov
mov
aas
ret
into
pop
mov
xor
cmp
inc
sub
push
add
xchg
call
sub
data16
imulb
aaa
mov
aad
cmp
pop
mov
arpl
push
into
jnp
jno
nop
mov
cltd
sbb
pop
mov
std
das
jg
jecxz
or
pop
push
sbb
xor
clc
push
clc
push
js
mov
es
ds
iret
shl
mov
sbb
or
imul
sub
mov
mov
loopne
fdivr
mov
inc
jle
adc
pop
xchg
cwtl
add
into
dec
jg
pop
orb
arpl
subb
jno
inc
or
nop
ret
xor
jp
mov
or
mov
pop
dec
cs
lcall
int
push
scas
pop
xchg
negl
dec
xor
jo
xor
xchg
xor
repz
orb
popaw
testb
xchg
add
push
add
stos
repz
mov
mov
test
lcall
mov
mov
outsb
sub
mov
mov
subb
pop
mov
adc
lods
push
inc
push
notl
ds
lahf
add
mov
int
adc
out
cli
mov
ss
jl
popf
jae
out
sbbl
push
xchg
pcmpeqb
inc
add
sahf
or
jb
out
dec
rcl
jne
add
cmp
adc
push
mov
outsl
shlb
mov
push
out
ljmp
loop
xchg
dec
rorl
shll
xor
loop
sub
stos
outsl
xor
xchg
sub
dec
sub
pusha
xor
dec
xchg
dec
js
roll
in
push
mov
js
sbb
shll
cmpsl
xchg
sti
jmp
jl
cmp
pop
and
lret
sti
insl
xor
int
movsl
or
mov
insl
cmp
pop
movsl
mov
stos
or
les
adc
popa
dec
fadds
sbb
stc
push
inc
popa
loope
lcall
jge
orl
lea
mov
inc
inc
repz
into
test
fistl
orl
scas
jns
ror
btr
push
push
xchg
cmp
mov
xor
jns
lahf
xchg
sub
in
icebp
fwait
adc
dec
lret
fdivp
or
fisubl
arpl
push
nop
call
in
out
shrl
xchg
pop
mov
test
add
dec
sbb
pop
stc
je
or
sbb
xor
push
mov
mov
ret
xchg
or
lods
dec
clc
negb
mov
push
out
sbb
cmp
jp
sub
pusha
pop
xchg
inc
jge
jbe
int
sbb
testl
xchg
adc
push
fmul
iret
xor
adc
insb
fsts
pop
jbe
adc
jb
loopne
addr16
sub
sti
call
xor
inc
xchg
xor
imul
inc
loop
xchg
repnz
dec
test
jo
cltd
xchg
mov
jecxz
sbbl
push
pop
int
jmp
out
mov
out
jns
mov
cmp
daa
push
push
loop
adc
pop
incb
inc
pusha
popa
sahf
dec
fisubl
cwtl
inc
mov
stos
inc
mov
push
sub
sbb
fildll
bound
insb
sub
mov
sub
jg
sbb
stc
lods
mov
add
je
xchg
xchg
jbe
dec
sub
mov
nop
cwtl
bound
mov
in
mov
test
sbb
fs
loopne
int
inc
cmp
rorb
and
xor
mov
fbstp
cmp
dec
ss
xor
imul
sbb
repz
pop
hlt
mov
jnp
cmp
xor
les
mov
sbb
test
mov
and
xchg
call
shlb
adcb
scas
dec
sbb
add
and
out
mov
daa
movsb
xchg
nop
mov
push
roll
mov
inc
clc
pop
push
sub
dec
cmp
lock
or
test
enter
mov
insb
push
aad
aas
es
enter
push
xor
adc
xorb
pop
xor
int3
pop
inc
test
add
inc
mov
mov
mov
mov
and
addr16
push
pop
out
mov
dec
cltd
mov
or
mov
jg
xchg
mov
pushf
out
push
fdivl
test
jg
and
lcall
orl
sub
xor
sti
push
pop
inc
rcl
loopne
fmull
cmpl
adc
inc
mov
push
add
in
aaa
push
aam
fisubrs
rcrb
bnd
push
xchg
movb
xor
leave
and
sub
clc
jbe
loopne
jne
and
mov
push
push
xchg
insl
mov
mov
sub
cmp
loope
inc
xchg
inc
imul
mov
sahf
push
lret
lea
cmp
movsl
cmpsb
in
lret
push
mov
jnp
rclb
sbb
sub
xor
pop
xor
cmpsb
shl
mov
scas
xchg
pop
int3
iret
or
aaa
imulb
jge
jle
gs
int3
or
xlat
mov
or
sub
int3
fisttps
xchg
les
push
mov
pushf
stos
fmulp
jecxz
jo
or
fstl
adc
xchg
cmp
push
outsl
aas
and
jb
cmp
jecxz
adc
pushf
push
test
out
into
xor
dec
lcall
sub
addr16
pop
mov
cwtl
fucom
dec
mov
mov
mov
pop
mov
mov
mov
mov
scas
jns
add
enter
mov
insb
and
jle
pop
nop
xor
xchg
or
imul
or
pop
push
fdivs
ret
out
or
das
sub
xor
mov
pop
fucomip
pop
inc
scas
mov
ds
lods
cpuid
data16
icebp
fcomip
test
mov
shrl
add
sbb
sbb
cltd
mov
dec
out
add
jg
imul
pop
xchg
lret
pop
xchg
stc
test
mov
cmove
and
sbb
shlb
cmp
fnstenv
stos
inc
jecxz
lds
mov
das
sahf
orl
iret
jle
add
fstps
nop
mov
insb
mov
or
jmp
and
es
pop
inc
mov
jbe
mov
lahf
sub
cmp
shl
das
mov
aaa
or
stos
fdivrs
fld
into
movsl
and
repnz
push
std
test
das
mov
insl
in
lods
sti
xchg
sbb
ljmp
or
push
mov
aad
sub
adc
stos
popl
push
out
lcall
aam
pop
data16
jg
inc
cmp
scas
aad
adc
daa
inc
cmp
mov
xor
push
std
rcr
xorl
jb
add
movsl
push
movsl
add
sbb
stc
mov
dec
out
in
and
pop
xorb
cmpsl
xlat
insb
add
loop
subb
test
lea
sbb
push
adc
xchg
add
xchg
clc
xchg
xor
pushf
xchg
mov
sbb
dec
push
sub
xchg
arpl
sub
xchg
cmp
sub
scas
mov
out
jl
pop
outsl
xor
movsl
out
mov
mov
sbb
mov
pandn
and
mov
jo
pop
push
mov
mov
jmp
and
in
ficoms
or
jbe
inc
add
ljmp
xchg
shlb
je
xor
mov
fmull
clc
fs
adcb
jle
sbb
sti
push
push
and
pop
xor
ret
sub
jb
mov
push
lds
les
into
es
push
imul
in
dec
cmp
mov
jae
enter
sub
out
adc
out
subl
sub
cmp
mov
pop
or
cltd
jmp
sub
xor
push
pop
push
mov
inc
jns
mov
int
inc
rcr
inc
sarb
sbb
jb,pn
test
outsb
cwtl
lock
lret
mull
pop
test
mov
idivl
shlb
cmp
lds
sbb
mov
and
pushf
mov
or
add
jmp
pushf
mov
insl
jg
cwtl
out
sub
shl
dec
lret
or
pop
ret
jge
nop
or
ficomps
mul
mov
xchg
int3
std
or
cmpsl
add
mov
inc
into
leave
popf
ss
fdivrs
push
push
idiv
test
mov
xor
out
out
mov
push
add
and
pop
js
aad
jns
push
rorl
xor
xor
pusha
fidivrl
std
sub
xchg
movsb
cmc
jnp
add
and
inc
cld
push
xchg
mov
cmpsb
dec
and
jno,pt
call
and
aad
and
repnz
out
loope
lds
mov
stos
jnp
in
addr16
xchg
lods
popf
jb
mov
clc
sub
dec
movsb
inc
repz
outsb
or
movsl
loop
inc
insl
filds
xchg
movsl
mov
add
add
in
mov
cmc
push
subb
pop
add
loop
aas
int
ss
nop
jp
cmpsl
daa
ds
outsb
pusha
jl
xor
leave
fs
push
push
mov
subb
imul
cmp
push
clc
inc
sbb
scas
sub
xor
or
fucomi
test
inc
mov
pusha
xchg
lcall
push
fdiv
cld
popa
xor
xor
xor
leave
faddl
int
outsl
enter
sbb
lea
popa
adc
lods
test
sub
jo
cltd
pop
movsl
dec
fidivrs
lock
rcll
leave
loopne
test
push
mov
jno
xchg
jo
xor
push
shl
iret
addl
dec
adcb
dec
jb
push
testl
mov
loopne
pop
adcl
pop
out
ret
adc
cmp
xchg
sbb
xchg
arpl
and
outsl
xor
or
push
shrl
movzbl
inc
iret
inc
or
rcl
outsl
les
adc
repnz
sub
scas
jp
mov
insl
mov
fsubrs
jle
adc
shll
sbb
xchg
in
push
lods
into
shll
inc
pop
cmpsb
adc
adc
or
or
and
push
es
imul
test
cmc
add
pushf
test
enter
dec
sbb
aas
out
and
or
popf
das
leave
push
aaa
test
int
push
aad
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
push
mov
addl
addl
out
xchg
push
ror
adc
jl
adc
enter
and
inc
jg
sbb
pop
xlat
fmulp
cmp
enter
add
cmp
andl
mov
sbb
in
idivb
pushf
sub
xchg
cmpsl
mov
push
adc
aaa
stos
xchg
push
ret
outsb
xchg
adc
gs
add
in
mov
inc
lds
cwtl
add
or
mov
push
std
dec
jmp
jl
jp
insl
xor
jo
push
out
loopne
popf
jno
mov
sti
and
mul
push
add
jmp
les
jae
sbb
enter
or
jg
sub
pop
js
pop
mov
sub
ficoms
push
or
push
popf
in
inc
incl
pop
pop
popa
push
fwait
in
and
jg
mov
dec
pushf
mov
into
push
andb
xchg
cmpsb
sbbl
mov
out
dec
icebp
lds
and
andb
adc
sahf
daa
sub
cmp
xchg
loope
mov
in
cltd
mov
or
jmp
and
mov
xchg
cmp
pop
test
movsl
addr16
xchg
mov
fsubrl
inc
inc
cld
stos
sbb
fbstp
jmp
das
inc
adc
jo
xor
pop
and
mov
xchg
lods
repnz
incb
and
scas
out
mov
or
call
popa
push
dec
lock
mov
fucomi
xchg
sbb
test
fisubrl
mov
sbb
test
sub
xor
cmp
inc
lea
xchg
jmp
mov
dec
inc
jle
xchg
sbb
sub
cmp
adc
inc
sbbl
std
push
addr16
bound
pushf
fsubr
lea
in
cmp
out
repnz
add
out
mov
pop
cmp
pop
dec
insl
xchg
and
mov
and
sarb
sbb
lds
mov
dec
lret
iret
sti
subb
mov
iret
add
dec
test
loop
repz
sub
jo
xchg
push
add
in
push
mov
pop
aam
xlat
sub
sub
adc
mov
mov
dec
pop
popa
xchg
or
adc
fistl
sbb
imul
and
pop
popf
std
pop
lcall
jns
cmpsl
negl
scas
xor
or
ss
cmpsb
inc
enter
loopne
mov
inc
jb
jle
divb
add
dec
mov
cwtl
lret
xchg
pop
ret
loop
cmp
sub
scas
in
pusha
pop
daa
or
les
cltd
movsl
pop
sbb
mov
int3
test
add
cmp
in
xchg
pusha
sar
sbb
push
test
fsubrl
mov
jno
cmp
dec
add
push
mov
jne
fcoms
movsl
sub
lcall
pop
xor
test
and
push
lock
pushf
inc
cmp
sbb
repnz
or
ds
aaa
mov
sbb
dec
jge
mov
sub
add
xchg
cltd
push
out
sbb
xorl
test
loopne
les
inc
xchg
test
stos
mov
mov
bound
mov
inc
aaa
cmpsl
hlt
lea
mov
xor
mov
call
pop
jmp
repnz
jne
mov
sbb
nop
in
mov
mov
push
in
xchg
mov
cld
shl
push
sbb
js
es
lods
lret
movsb
pop
aaa
xchg
cmpb
xor
movsl
arpl
stos
lret
pop
push
pop
movsl
mov
cmp
js
xor
cli
repnz
outsb
mov
xor
or
cmp
inc
jo
pop
data16
xchg
lock
and
rcrl
pop
cmp
shlb
push
and
repnz
addr16
stos
mov
arpl
add
mov
lcall
jg
or
xchg
repz
sub
xor
test
call
lret
cwtl
or
add
jp
xor
rol
aad
mov
cmp
jo
cmpsb
leave
mov
xor
cmp
aam
add
aad
outsl
daa
adc
mov
cmpsl
pop
mov
mov
xchg
and
ja
lods
adc
or
push
xchg
insl
and
sbb
xor
pop
add
push
test
in
dec
int3
pop
cld
lret
shll
loope
es
jb
sahf
fmulp
push
rclb
js
jp
mov
ret
fwait
jp
sbb
and
inc
jg
push
or
movsb
mov
dec
cmp
push
sub
or
aam
test
outsb
cmpsb
push
sarl
cmp
cmp
fsubr
inc
jl
jne
sbb
inc
enter
rcl
ret
mov
aaa
mov
outsb
shll
cmp
fs
out
jmp
std
and
cmc
pop
lret
mov
sub
xcrypt-cbc
cmpsl
adc
sbb
xor
push
pop
outsl
and
ret
xor
cmc
mov
inc
outsb
mov
cli
mov
mov
aas
push
ljmp
xor
pusha
mov
fldl
jg
cmp
mov
stos
scas
xchg
jbe
pop
jg
sub
inc
mov
adcb
push
cmp
cwtl
sbb
mov
push
and
ret
push
loopne
and
dec
dec
mov
sbb
in
push
jb
addl
and
xchg
and
mov
aas
mov
lahf
mov
adc
bound
mov
stos
pushf
push
into
hlt
mov
push
add
xchg
mov
jae
mov
std
fwait
in
jno,pn
add
sub
mov
sarl
push
cmp
pop
daa
sub
ror
shlb
and
cli
cmp
xchg
roll
bsf
loopne
push
mov
push
cmp
bound
xor
inc
pop
stc
nop
xchg
test
sbb
inc
dec
xor
flds
out
sub
dec
jno
std
sbb
loope
lret
icebp
cmc
mov
dec
or
lret
cltd
dec
dec
sub
out
repz
sbb
jg
dec
inc
push
jo
popa
push
xorb
xchg
jne
jecxz
xchg
jne
inc
fists
mov
dec
xor
mov
push
mov
sub
out
lea
or
push
lds
pushf
ja
addr16
add
scas
sub
push
fnsave
mov
xchg
lret
hlt
jge
in
mov
xchg
mov
pop
push
mov
xor
or
ljmp
lcall
int3
mov
mov
in
cmp
movsb
sbb
mov
and
lock
pop
call
push
out
xor
add
push
mov
in
xchg
xchg
shlb
adc
adc
nop
cmp
scas
or
imul
sbb
sub
mov
sbb
movsl
int
jns
sub
jne
inc
add
sub
push
cmp
ret
or
cmp
loopne
sub
loopne
hlt
addr16
add
int3
push
das
push
pop
sti
cmp
stos
fstpl
cmp
bound
mov
mov
pusha
push
loope
xchg
ja
test
orl
xor
stos
testl
cs
mov
out
sbb
mov
xor
or
inc
ror
cs
cmp
adc
push
sbb
dec
dec
pop
sub
arpl
lret
push
or
mov
repnz
xor
adc
in
lcall
sub
lds
xor
inc
push
cli
out
sbb
jecxz
mov
imul
jp
shl
or
nop
outsl
pop
lock
clc
leave
lea
mov
xchg
test
iret
push
gs
jle
adc
or
jmp
es
ljmp
mov
shl
clc
pop
mov
and
push
mov
aas
cmp
mov
imul
cmpsl
add
ret
inc
add
fsubp
sub
std
imul
jg
mov
push
js
into
lret
push
xor
sbb
xor
test
and
rolb
cld
aaa
sub
idiv
or
lods
fists
push
in
xor
jle
sarl
adc
jge
into
lcall
cmp
jb
and
or
cli
mov
shrb
sar
in
xlat
push
sbb
icebp
push
adc
cmp
sbb
stos
inc
sub
push
lods
push
push
mov
dec
insb
sbb
mov
sub
fsub
dec
inc
aaa
inc
fwait
cwtl
aaa
ficoms
aad
push
jp
and
cmp
cmc
add
xor
inc
pop
dec
lret
cli
arpl
ljmp
mov
pushf
andb
scas
xchg
hlt
test
lock
je
push
cs
jp
mov
insb
dec
enter
mov
xchg
xor
test
dec
pop
push
pop
clc
popa
stos
adc
fadds
jne
fstl
add
cmp
in
pop
add
xor
imull
aas
pop
js
and
sub
aaa
adc
call
inc
pop
xchg
in
ds
int3
mov
mov
mov
inc
adc
jae
jmp
insb
sbb
add
adc
sub
flds
jl
or
movsl
shr
push
dec
push
shl
out
sbb
sbb
jmp
lods
fistpll
int
cmpsl
aad
add
pop
nop
cmp
mov
cmp
stc
inc
fistl
sbb
cli
mov
aaa
mov
fmuls
mov
xor
js
mov
jne
in
dec
stos
roll
push
xor
dec
lcall
add
jle
mulb
jmp
xchg
mov
mov
pusha
mov
ljmp
fcomip
and
mov
pushf
pop
cs
aam
add
loop
ficompl
pop
mov
repnz
adc
or
fwait
adc
hlt
or
ja
cmpsl
fildl
push
and
push
ja
leave
push
dec
xor
xchg
sub
sub
out
xchg
cmp
mov
fadds
les
in
testb
xor
mov
inc
scas
jbe
xor
adc
rorb
xchg
arpl
and
cltd
lods
mov
outsb
dec
or
imul
and
test
lahf
test
leave
hlt
adc
data16
in
scas
mov
add
sbb
movsl
mov
incl
and
int3
daa
popa
outsb
fs
jmp
adc
sub
rdmsr
daa
outsb
and
cmp
and
mov
sbb
cli
add
lock
pop
pop
imul
push
insb
pextrw
or
pop
sub
aam
mov
adc
inc
fcoml
sub
mov
adcb
out
mov
cmp
push
enter
adc
add
in
xlat
cmp
and
dec
cmpsb
inc
jmp
faddl
stos
ds
popf
pushf
adc
or
in
and
or
and
test
pop
mov
in
popf
sbb
inc
jb
cmc
outsl
cmp
iret
pop
sub
jecxz
fnsave
adc
jmp
xchg
sub
jp
dec
mov
inc
sarb
lods
rorl
lret
aas
cmc
or
mov
adc
xor
bound
mov
fcmovnu
add
add
cld
inc
cld
xor
sub
sub
aaa
pushf
sbb
div
ljmp
mov
imul
fs
fidivrl
pop
lret
aas
and
xchg
cmc
sub
xchg
push
adc
adc
ljmp
movsb
mov
push
lods
lret
and
fs
pop
cltd
insb
loop
jg
and
add
sub
je
inc
inc
add
mov
or
cs
push
fidivrs
push
inc
pop
add
sbb
jl
sbb
push
pushl
mov
loopne
test
pop
sbb
inc
mov
mov
lea
fwait
lods
pusha
jae
sbb
arpl
jl
mov
inc
xchg
sahf
in
push
mov
loope
and
in
jp
mov
mov
call
sbb
xchg
inc
pushf
pop
jae
js
mov
jmp
test
out
arpl
adc
sahf
sbb
jg
mov
pusha
inc
ja
shll
fs
loop
push
jmp
out
mov
mov
cmp
pushf
dec
inc
mov
mov
cmp
cmp
push
jb
frstor
addr16
push
adcl
testb
icebp
xchg
push
sub
fld
ret
movsb
mov
xchg
mov
sahf
idivb
ror
adcl
mov
fptan
adc
outsb
lods
movl
arpl
inc
movsb
lea
dec
lea
pop
insl
mov
push
les
xchg
les
xchg
mov
idiv
fcoms
sbb
fistpl
push
adc
lods
push
shrb
adc
les
xchg
hlt
int3
sbb
bswap
aas
xchg
mov
test
push
loope
ljmp
scas
bound
pop
cmpsl
movsl
jbe
or
test
jmp
imul
xor
xor
push
inc
mov
pop
decl
clc
clc
xor
out
jbe,pn
ret
jmp
and
ficoml
cmp
push
fdivrs
subl
mov
jnp
mov
out
push
push
jge
leave
cld
or
loope
push
mov
repz
pop
into
mov
mov
sbb
mov
or
insb
jnp
pop
cmp
adc
cmp
mov
lods
lahf
loopne
cmp
cltd
and
ret
ljmp
in
cli
xor
dec
and
fld
mov
or
pcmpeqd
jp
adc
icebp
aas
add
out
nop
clc
aas
les
gs
push
mov
iret
mov
or
clc
mov
adc
and
lret
push
cmc
mov
mov
cmp
xor
pushf
pop
les
cmpsl
int3
inc
ja
lahf
cmp
fucom
lea
adc
stos
push
aam
sub
push
mov
enter
inc
pop
mov
xor
stc
outsb
insl
pop
push
cmp
mov
test
jmp
insb
popa
sbb
adc
and
pop
mov
dec
xor
xchg
fidivrs
sbb
scas
push
call
stos
xchg
inc
outsb
push
or
push
inc
cmp
adc
adc
or
test
mov
push
bound
adc
nop
push
xor
cwtl
adc
test
sub
dec
dec
popf
iret
fwait
and
pusha
pop
movsb
push
or
cmp
subl
out
jge
pop
mov
cli
adc
out
mov
aam
outsl
mov
jno
sbbb
jno
xchg
jg
movsl
mov
and
adcl
xchg
out
punpcklwd
cmp
add
sahf
and
into
pusha
stos
push
in
pop
enter
push
imul
or
sahf
std
mov
pop
push
lods
cmpsb
test
lahf
fisubs
lods
test
stc
popa
mov
push
dec
lcall
fmul
jmp
adc
ficoms
call
paddq
xchg
into
lahf
clc
lret
and
loop
fstps
push
lret
push
and
push
jecxz
cltd
push
or
lahf
cmp
mov
pusha
xchg
cvtpi2ps
rcrb
pop
jge
scas
jne
sbb
pop
push
ljmp
mov
sbb
dec
pop
adc
lods
push
rolb
aaa
xchg
sahf
jmp
aaa
out
inc
cs
pop
insl
xor
bnd
jmp
cmp
mov
loopne
shrl
sar
mov
push
add
add
dec
inc
leave
sarl
leave
or
mov
cmp
xlat
cmp
push
rorb
jmp
xorl
pushf
mov
add
sbb
in
adc
add
sub
pop
jge
iret
dec
outsb
sub
nop
push
mov
sbb
xor
in
sahf
dec
stos
xor
aad
push
pop
cmp
xlat
and
mov
adc
add
inc
sub
pop
outsb
pop
sub
or
inc
and
sub
popa
cmp
jecxz
clc
je
stos
cmp
sub
push
sub
pop
in
xchg
ljmp
cmpsb
or
ret
xor
cli
mov
xchg
fidivrl
enter
dec
push
or
sub
lea
sbb
sbb
and
cmpsl
enter
ret
push
out
add
mov
mov
sbb
out
mov
sbb
iret
repnz
addl
aad
xlat
movsb
call
push
xchg
mov
mov
fldt
sub
test
add
test
mov
xor
xchg
arpl
aaa
sub
mov
inc
iret
dec
out
push
mov
xor
pop
mov
fs
outsb
leave
or
mov
jns
aam
sbb
mov
mov
arpl
lea
or
addr16
repnz
rorl
and
leave
jle
and
dec
jp
scas
pusha
mov
jecxz
iret
pusha
push
adc
dec
outsl
mov
loope
jl
jg
xor
and
xchg
testb
pop
and
add
addb
fs
ss
dec
enter
adc
cmpsb
push
mov
jne
xchg
lret
frstor
int3
mov
sbbl
cmp
sbb
adc
pop
pop
imul
mov
mov
push
daa
push
or
leave
aaa
mov
lcall
xor
add
mov
dec
pop
rorb
sub
sub
inc
cmpsb
cmp
cmp
mov
aam
fisubrs
ret
mov
testb
dec
ja
cmp
clc
sbb
aaa
loope
push
adc
or
sahf
jno
mov
sub
and
in
xchg
and
iret
xchg
testl
jnp
pop
mov
sbb
or
outsb
push
loopne
sbb
sbb
mov
dec
incb
xchg
cli
adc
in
adc
mov
lea
repnz
cmp
fistpl
stc
sbb
sbb
pusha
divl
sub
jge
aam
daa
push
push
test
pop
and
scas
and
insb
cmpsb
shrl
dec
adc
lret
cmp
in
pop
popa
and
lcall
loopne
push
jmp
ret
push
add
pop
hlt
jns
add
pop
cli
xchg
ja
jge
rclb
arpl
inc
add
fistpl
ja
inc
xchg
ja
jo
push
pusha
pop
sti
push
in
arpl
adc
lods
lds
repnz
jmp
jns
and
sti
add
jne
rcll
jo
out
lea
pop
push
dec
test
imul
jge
adc
xchg
scas
xlat
jmp
sub
adc
mov
push
push
and
jb,pn
mov
cwtl
jecxz
push
ds
xchg
xlat
rolb
add
sbb
in
sbb
push
and
mov
push
mov
mov
std
pop
push
pushf
inc
and
pop
setb
test
mov
jae
pop
shlb
ljmp
push
es
sub
pop
insb
and
cs
push
dec
add
mov
ret
aas
call
adc
shll
mov
je
icebp
rorl
jb
and
bound
or
insb
ret
fdivs
cmp
push
rcl
fucomi
out
jp
popf
sub
push
xchg
rcl
mov
cwtl
and
sbb
xor
fwait
sbb
cmp
in
add
in
add
or
jno
roll
movsl
dec
test
cltd
adc
out
pop
mov
jo
mov
or
inc
scas
js
fucomi
or
out
inc
pop
mov
pop
mov
mov
pushf
sbb
xchg
inc
add
add
ja
shll
jge
cmp
ljmp
mov
inc
sub
icebp
mov
mov
int3
ret
mov
pop
cmp
sbb
les
mov
pop
mov
mov
enter
dec
js
mov
bound
jp
jecxz
decl
clc
xor
mov
or
mov
insl
mov
fildl
cmp
jb
pop
xchg
fs
mov
xor
loop
pop
mov
lock
repnz
scas
int
jbe
push
dec
push
mov
stos
jb
das
add
lock
mov
ss
jmp
sbb
sub
mov
jb
sbbl
cmp
pop
or
jle
orl
ljmp
test
jg
fbstp
popa
jle
icebp
pop
dec
push
je
cs
fwait
testl
mov
jl
xor
div
mov
jg
jne
jno
dec
sar
or
mov
dec
xor
add
enter
scas
cmp
cmpsl
or
in
xor
jmp
jmp
xchg
dec
ret
jns
lret
jle
stos
pushf
inc
cmc
test
ds
cmp
or
dec
loope
out
inc
mov
mov
jne
pop
out
mov
repz
outsb
and
jns
sti
inc
mov
jp
xchg
imul
rcrl
dec
in
aam
lods
les
pushf
sbb
insb
dec
punpckhwd
pop
sbb
aaa
sti
outsl
xlat
sub
xor
orb
mov
jp
add
xchg
sub
addr16
inc
jp
leave
and
xchg
fs
mov
data16
insb
pop
add
fsubrs
lret
mov
inc
lods
insl
cmpsl
dec
int3
push
daa
shl
cmp
or
int
sub
lods
sbb
cmp
add
ret
das
jmp
sub
addr16
rolb
or
shl
mov
cmp
cmc
push
cmp
mov
cmp
inc
daa
push
jp
dec
pop
int
repnz
inc
ret
or
cltd
test
add
push
push
int3
lock
and
adcl
adc
sti
pop
or
sbb
xchg
out
repz
or
or
repnz
jmp
rcrb
sbb
loopne
xor
adc
je
fs
pop
aaa
xor
fdiv
out
or
and
push
outsb
hlt
mov
dec
addb
inc
ja
mov
out
int3
in
push
rclb
mov
sub
lock
mov
lahf
and
cwtl
imul
test
arpl
imul
test
xchg
out
into
mov
dec
add
cs
lea
clc
cmpsl
mov
movl
mov
mov
mov
in
addr16
push
xor
jo
xor
mov
rorb
lods
push
jno
mov
inc
xor
xor
inc
fsubs
test
jae
sbb
out
push
pop
loope
int3
stc
and
aaa
ss
pop
pusha
mov
imul
xchg
mov
fwait
sub
sub
pop
ret
and
inc
cmp
jge
dec
xorl
decb
push
mov
mov
lret
enter
sub
pop
shl
sbb
notb
insl
pusha
xchg
jecxz
mov
shrl
mov
sbb
and
xchg
clc
ljmp
push
mov
xchg
push
and
imulb
or
adc
popa
sub
imul
in
test
xchg
fstpl
pop
aad
aas
xchg
xor
adcl
jno
outsl
loope
mov
int3
mov
cltd
and
mov
inc
adc
jl
pop
inc
inc
stos
negb
add
mov
xor
xchg
sbb
dec
rcr
jno
shll
add
push
push
lahf
scas
aad
mov
int
cmp
lcall
push
xchg
iret
lds
sbb
dec
mov
sub
fidivrl
xchg
aaa
aam
arpl
bound
ds
add
in
shl
push
sub
jae
adc
clc
je
cld
clc
xor
aaa
imul
xchg
div
adc
inc
lret
jg
rolb
in
mov
pushf
adc
push
push
cwtl
mov
test
js
push
in
paddusw
pop
push
push
sbb
insb
mov
jge
test
pop
jo
or
int3
cmp
jg
adc
out
lods
mov
idivb
je
jmp
clc
dec
sub
das
mov
dec
dec
xor
push
or
es
cmp
cmp
cmp
inc
and
mov
push
fmull
popa
jl
cli
pop
insb
mov
fidivrs
aam
mov
push
xchg
jle
jnp
jb
sub
push
pop
sub
fmuls
cmp
mov
adc
xor
daa
les
movb
arpl
jg
mov
adc
jae
in
xchg
mov
xor
scas
cmp
add
mov
lret
call
test
ret
in
add
bound
cmc
in
xor
out
rsqrtps
shll
sti
jp
adc
aas
pop
mov
adc
cs
jo
and
aam
push
rcr
popf
les
das
jle
pop
repnz
daa
repz
rol
shrl
xor
test
jo
push
xchg
xor
mov
sbb
cmpsb
adc
dec
xor
push
mov
pushf
or
pushl
push
push
sub
cmpsl
clc
pop
xchg
adc
mov
xorl
sub
adc
jno
jmp
mov
jb
stc
xlat
loop
lock
sub
hlt
and
xor
mov
pusha
fidivs
cmp
cmp
cmp
insb
adc
call
cmc
gs
mov
push
rorb
mov
fbstp
mull
jno
push
jns
mov
sub
divb
adc
mov
inc
jp
fldln2
data16
scas
es
hlt
gs
andb
add
mov
into
fwait
inc
pop
dec
dec
mov
and
jmp
rorl
popf
lods
xor
xor
mov
aas
loope
mov
jle,pt
call
or
aam
push
pusha
push
shll
lcall
push
push
icebp
xor
fbld
push
cmp
mov
pop
jbe
mov
push
arpl
lock
xchg
repz
icebp
jmp
xor
sahf
add
mov
xor
push
fbstp
loope
in
xchg
stos
jmp
out
add
sbb
fsubl
test
loopne
sbb
mov
into
inc
jbe
and
cmp
cmpsl
xor
test
xor
push
subb
cmp
jne
cs
push
les
adc
in
sahf
stc
int
idivl
fst
xchg
nop
lret
mov
aad
dec
fwait
out
pushl
adc
adc
jne
rcr
sub
repnz
lret
sub
repz
out
pop
mov
and
inc
cmp
andl
lods
jge
dec
add
into
test
repnz
lcall
inc
xchg
mov
roll
sub
adc
xchg
xchg
ds
test
pop
notl
outsl
jle
xchg
pop
jo
mov
inc
or
cmpsl
sbb
jecxz
and
test
repnz
aas
fs
jno
xchg
out
cwtl
mov
insl
sti
adc
dec
test
push
arpl
aad
sub
mov
mov
cmp
push
jle
pop
xchg
cmp
push
and
xchg
test
cmpsb
jo
push
addr16
and
inc
cmpsl
lcall
pop
inc
jb
sbb
adc
dec
sahf
mov
jecxz
jb
js
xlat
mov
dec
mov
fimull
jb
daa
imul
jl
imul
xchg
movsl
add
popl
cmpsb
mov
pop
gs
insb
sub
andl
cmp
sub
clc
sub
cmp
repz
scas
mov
fcmovnb
and
sub
cmp
or
bound
jge
mov
jmp
lcall
jb
popa
xor
xor
addb
jl
mov
dec
mov
sub
sbb
mov
mov
adc
insb
mov
xorl
add
mov
sbb
out
or
sub
cmp
push
movsb
jne
aas
add
rorl
jnp
test
cmc
cmpsl
ficompl
lret
xchg
adc
or
rcrb
mov
push
adc
sub
ljmp
je
rclb
mov
aam
and
xchg
push
fidivl
out
push
imul
xor
ret
cmp
jg
pop
clc
out
cmpsl
mov
hlt
lock
mov
add
gs
adc
mov
xorl
add
pop
cwtl
mov
fidivrs
test
rcrl
sarl
in
jae
and
gs
dec
cmp
push
sbb
push
mov
xor
push
fwait
pop
xor
cmp
das
in
jae
cmpb
out
sti
das
fucomi
dec
push
aad
dec
xor
jmp
test
pop
jae
clc
dec
jb
xchg
jnp
dec
popf
imul
pop
xchg
call
xchg
lock
arpl
rcr
adc
push
xchg
xlat
shl
push
inc
xlat
add
ds
xor
clc
mov
out
icebp
jo
out
push
mov
adc
cs
lods
add
mov
pop
mov
and
adc
sbb
pop
and
adc
sub
push
mov
sbb
sbb
out
mov
or
imul
sbb
push
shll
xor
and
mov
jl
aad
ljmp
fldpi
jo
push
pusha
mov
outsl
mov
sbb
sub
fdivrp
jle
push
dec
sub
sbb
dec
shll
imul
push
fs
insb
add
ds
inc
mov
repnz
adc
jp
daa
imul
cmp
push
jbe
shl
pop
scas
mov
into
je
jle
add
outsb
or
shl
repz
mov
mov
in
int
push
and
sub
scas
dec
dec
adc
arpl
or
push
add
sub
ja
aam
std
inc
scas
cmpsb
das
lahf
xor
inc
pop
push
cltd
push
fs
in
cltd
addr16
mov
lods
ret
sub
xchg
loope
aad
jp
testl
xchg
dec
out
cs
adc
xor
lcall
outsb
dec
sub
cltd
pop
cmp
sub
jmp
insl
popf
jbe
sub
and
inc
inc
fwait
push
testb
sub
sbb
loope
fsubrs
gs
push
mov
pop
shlb
cmp
xchg
insb
cli
outsb
jae
push
push
daa
in
scas
xchg
cld
add
cmp
mov
dec
inc
cmc
mov
or
repnz
or
push
push
lock
test
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
out
mov
lret
dec
test
push
hlt
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
