push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
adc
sub
jnp
jnp
mov
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
add
jmp
xchg
jb
mov
ret
dec
and
popf
jb
lahf
push
outsb
sub
cli
adc
mov
adc
in
cli
lods
push
fwait
mov
jge
sbb
fmul
sbb
repz
test
mov
popf
lods
xor
dec
adc
xor
dec
rolb
leave
mov
cmp
xlat
movsb
repnz
jg
lock
out
jle
sahf
js
cs
mov
out
add
icebp
jae
ja
or
inc
stos
pop
mov
lds
rcl
sbb
adc
in
aaa
out
aaa
mov
mov
movsb
add
mov
sarl
mov
into
leave
stos
pop
ret
mov
dec
pop
pop
je
lods
das
xchg
outsb
adc
nop
mov
or
add
insb
das
jle
fdiv
lea
fwait
lahf
jmp
adcb
aam
adc
rcr
fstl
jl
pushf
push
rorl
lret
insb
mov
push
aam
das
aaa
loop
jp
pop
mov
rorb
adc
sahf
sbb
jmp
pop
rclb
sub
filds
jge
leave
mov
shlb
xor
std
or
es
nop
or
mov
mov
mov
stos
outsb
mov
pop
fmuls
imul
jns
in
add
leave
call
jge
fisubrl
imul
sub
lahf
mov
lock
in
mov
inc
call
rcll
jb
or
jne
imul
iret
cmp
cmpb
xor
push
add
and
dec
pusha
dec
les
imul
jecxz
adc
inc
fidivrl
push
mov
push
js
scas
gs
ficoml
movsb
cmp
sbb
sti
jnp
mov
cltd
push
cltd
add
push
int3
stos
xlat
test
pop
or
scas
sti
xlat
ljmp
push
mov
push
fidivs
fsubrl
xor
pop
notl
mov
inc
add
sub
jecxz
fwait
out
bound
ljmp
pop
enter
xchg
xchg
testl
imul
or
mov
add
push
mov
sbb
mov
mov
add
pushf
or
cld
lods
cmp
adc
gs
adc
pop
aad
push
mov
cli
pushf
loop
xchg
sbb
or
pop
movsb
movl
rclb
xorb
ds
push
in
adc
les
cmp
mov
xchg
in
inc
das
jb
ds
dec
sub
imul
mov
jecxz
adc
xchg
dec
lods
int
fldt
out
xchg
adc
mov
test
shll
hlt
arpl
imul
jmp
sub
jp
jns
add
or
mov
pop
xchg
or
and
test
jo
xchg
fisubl
scas
repnz
ret
jge
adc
subl
divb
popa
pusha
aas
cmpsb
or
pop
dec
push
sbb
adc
xlat
int
pop
lret
cltd
xchg
in
outsb
mov
loope
sub
sbb
xlat
inc
out
movsl
rcrl
cmpsl
xorl
fxch
xor
sbb
and
cmp
dec
je
push
in
outsl
sbb
xor
movsl
movsl
dec
pop
insl
scas
addr16
aam
loop
sub
fldl
das
mov
repz
dec
repnz
xor
xor
loope
xchg
mov
jecxz
orl
fxam
aad
out
pop
mov
pop
inc
int
cmp
inc
testb
pushw
or
sbb
sbb
jne
dec
and
lods
std
push
ret
es
cmc
call
lret
cwtl
lahf
cmp
fucomi
pushf
pop
dec
add
je
sbb
xlat
jl
push
fucomip
lret
mov
mov
and
cmpsl
filds
mov
dec
pop
push
inc
xchg
sub
lcall
jne
mov
adc
roll
addl
mov
add
sub
or
lret
pop
push
xchg
jb
push
cmp
movsl
mov
ret
insb
in
enter
enter
sti
int3
or
mov
lahf
decb
dec
aad
fsts
mov
negb
out
xor
push
xchg
mov
ffreep
daa
shlb
mov
scas
add
push
xchg
xlat
xchg
mov
bound
and
andl
and
in
pop
push
movsl
jecxz
call
inc
cmc
or
outsl
sbb
adc
data16
mov
rcll
xchg
mov
insb
decl
pop
dec
or
fsubrs
cmc
stos
punpckhwd
dec
outsl
stc
fsubl
jecxz
jo
add
fsubrs
ror
mov
in
push
xor
movsb
insb
inc
rorl
fisubrs
mov
mov
push
fdivs
or
ja
mov
arpl
jmp
cld
stos
cs
fwait
shrb
rorl
mov
cltd
xor
mov
jb
repz
stos
loope
cli
stc
adc
inc
pop
icebp
clc
or
add
jmp
lahf
cmc
push
push
mov
xchg
in
cmc
int
fisttpll
movsl
add
shlb
adc
mov
in
and
ret
popf
decl
dec
dec
js
rcrl
mov
mov
xor
mov
mov
popf
cmc
xchg
or
dec
pop
cmc
xchg
cmp
test
ss
ret
or
cmp
mov
sahf
aaa
mull
jl
push
das
add
xacquire
sub
xchg
dec
dec
in
ret
dec
sbb
adc
pop
stc
xchg
stc
mov
in
lcall
lret
mov
ljmp
sahf
cmp
test
jecxz
lock
add
les
pop
add
enter
ja
mov
add
xchg
fistps
jmp
stos
in
shlb
sbb
push
test
movsl
mov
scas
dec
xchg
adc
mov
popa
ljmp
shrb
loope
jbe
xchg
adc
cmp
mov
in
mov
mov
lods
shrl
es
or
mov
sbb
push
loope
or
ficompl
test
jnp
inc
xor
std
testl
xor
repz
mov
movsl
jo
dec
in
es
fldenv
rclb
lea
lahf
int3
lahf
clc
lea
jg
movsb
fdivrs
cmp
inc
test
inc
xchg
mov
fwait
mov
xorl
daa
mov
or
sbb
sbb
adc
mov
sbb
loopne
inc
dec
mov
and
js
xchg
xchg
mov
je
incl
loop
push
mov
aaa
imul
jecxz
cld
mov
jnp
jns
addb
jnp
mov
filds
add
mov
pop
mov
das
inc
sti
clc
dec
xchg
in
pop
loop
inc
cmp
adc
xchg
call
cmpsl
cs
std
jecxz
sub
mov
add
mov
and
mov
ljmp
sahf
out
dec
insl
dec
sbb
stos
and
inc
dec
nop
pusha
insl
je
test
insl
sub
mov
fmuls
rcrb
sahf
jle
nop
gs
mov
mov
ret
js
lods
out
lahf
inc
sbb
out
test
mov
mov
in
pushf
or
sti
or
mov
sub
cmp
das
mov
inc
inc
in
xchg
inc
fidivs
push
jae
outsb
scas
jle
rcl
sbbb
in
flds
mov
push
fwait
in
inc
fsub
mov
mov
pushf
cld
gs
cmc
sub
in
icebp
mov
out
in
adc
push
fnsave
push
and
out
inc
hlt
sub
cwtl
rorl
ffreep
ror
subl
cmp
arpl
loop
fwait
cltd
js
shlb
jo
dec
test
aad
jae
ret
push
mov
sbb
and
lea
mov
out
pop
out
call
push
mov
push
cmc
push
repnz
xor
mov
or
scas
lcall
and
xor
adc
sti
dec
jns
or
pop
pop
push
dec
jnp
cmp
jg
pop
and
dec
cmp
cmp
adc
xchg
js
stos
adc
sub
push
test
jbe
std
das
mov
mov
mov
aas
shll
xor
mov
mov
ds
call
xchg
lret
rorb
cwtl
repz
scas
push
rcr
ret
cltd
test
xchg
mov
js
mov
push
es
rcrl
add
and
xor
mov
scas
pop
xor
mov
adc
syscall
popf
add
add
adc
jecxz
cld
cmp
adc
xchg
jno
pop
xchg
and
mov
jae
mov
outsl
push
or
xlat
sarl
nop
dec
push
cmp
fimuls
mov
adc
jge
sub
hlt
jmp
pop
jge
adc
out
pop
jmp
jo
rclb
sub
pop
loop
or
test
data16
sahf
jne
xor
mov
sti
adcl
push
es
rcrb
dec
imul
js
rcrb
adc
mov
jbe
cmpsb
sbb
sbb
popa
dec
jae
mov
ret
nop
fimuls
sbb
dec
int3
jmp
add
std
testb
cwtl
lahf
ret
xor
imul
int3
jbe
test
push
hlt
mov
popf
push
sbb
hlt
loop
mov
and
shr
add
mov
out
stos
les
repnz
rcrb
popa
pop
xchg
test
lods
pusha
fmull
xchg
jbe
mov
fwait
pop
mov
leave
mov
data16
pop
xor
loop
mov
mov
addr16
add
jecxz
sub
das
stos
outsl
pop
mov
inc
filds
sub
fisubrl
imul
push
and
and
arpl
xchg
jae
dec
sbb
lahf
sub
add
fsubr
cli
pusha
cmp
js
mov
cmpl
jg
cmp
xor
jecxz
push
sbb
iret
mov
jo
enter
add
in
pop
clc
jns
mov
cld
ret
xchg
xor
bound
xor
mov
add
push
cmp
mov
push
movsl
in
jle
pushf
scas
cmp
xchg
fstpl
sbb
aam
test
jbe
cmp
ret
incl
mov
mov
shll
popa
pop
sub
pop
xchg
aaa
mov
mov
xor
mov
cltd
out
aad
std
sbbb
rep
push
jo
inc
aas
add
fisubrl
xchg
mov
out
add
int3
push
sahf
mov
fbstp
xlat
and
cltd
and
xor
cli
push
cmp
xorps
or
insl
decl
into
jmp
xchg
enter
xchg
or
xchg
gs
in
mov
jae
push
or
mov
or
clc
shr
mov
iret
imul
jnp
mov
das
jl
mov
sbb
rorb
ljmp
or
jmp
aam
xlat
mov
inc
jne
jne
hlt
std
imul
shrb
in
inc
dec
out
adc
mov
and
into
cmpsl
cli
ja
mov
inc
div
fwait
push
or
aad
jle
jge
shlb
or
push
loopne
inc
test
jo
sub
das
push
xchg
lret
inc
js
ljmp
mov
pop
test
outsb
int3
in
add
xor
cmpb
es
mov
mov
in
stc
push
shlb
aas
js
jne
push
test
cld
int3
jo
jnp
sbb
mov
push
ficomps
mov
dec
cs
cwtl
add
mov
or
ja
dec
adc
cld
inc
scas
inc
xchg
ret
push
aad
aaa
jp
scas
jne
mov
mov
jno
push
push
jmp
iret
clc
lahf
pop
sbb
xorb
daa
dec
jb
addr16
pop
pop
push
call
fcomps
mov
mov
adc
roll
mov
dec
mov
xchg
fs
imul
out
test
sub
pop
xlat
add
cmpb
mov
ja
mov
lret
int
shr
pop
and
add
jns
popa
imul
mov
cmp
push
cmp
es
pop
cmp
mov
ja
mov
and
or
arpl
rcll
cmp
aas
pop
out
push
in
add
stos
cmp
xchg
pop
in
mov
sbb
xor
imul
fistps
push
loope
fistpl
cmp
aaa
xlat
ja
xchg
mov
push
or
mov
pop
loope
and
mov
fmul
push
aas
or
add
inc
out
adc
push
scas
addb
pop
jb
xchg
insl
xchg
and
lcall
ss
lock
cmp
xor
cmp
in
clc
scas
lods
mov
idiv
adc
pop
xor
push
in
cmpsl
jmp
fists
xor
dec
dec
popa
and
add
movsl
scas
sar
aas
push
and
nop
enter
inc
loope
add
or
fldenv
inc
pop
mov
test
fs
fcomps
xchg
stos
aas
lods
jge
movsb
xchg
pop
mov
push
in
daa
mov
sbb
insl
call
call
cmc
dec
xchg
loopne
sub
pop
mov
xchg
pop
add
pushf
inc
mov
lock
cmp
add
stos
notb
int3
int
fdivrs
lock
ds
cmp
sub
into
jno
nop
fldl
adc
add
xchg
mov
pop
mov
stos
xchg
imul
xchg
cmp
out
addr16
mov
decl
ret
or
pop
add
loopne
std
lret
data16
sti
test
adc
and
das
mov
pop
sub
les
mov
enter
jmp
stos
lods
std
xchg
fistpl
out
cmc
call
cwtl
movsb
add
nop
mov
fwait
inc
leave
ja
or
inc
push
pop
incb
pop
mov
or
mov
or
scas
rolb
test
xchg
pop
pop
out
jbe
sub
mov
aam
cs
gs
int
fs
decb
jo
outsl
pop
add
out
adc
add
fcomi
in
xor
iret
std
nop
rcl
sahf
out
scas
adc
lods
in
jnp
aam
mov
js
dec
nop
cld
and
fdivrs
ficoms
fistpll
insb
mov
cmc
repnz
mov
mov
bnd
jp
ret
xor
int3
sahf
jns
repnz
inc
inc
and
cmp
cmp
cmp
out
inc
lds
pop
xor
sub
inc
sbb
out
mov
push
dec
movsb
stos
mov
dec
pushf
in
loopne
xor
inc
mov
pop
adc
sub
or
rcll
seta
jb
sub
jle
and
aad
rcr
pop
js
or
mov
push
push
pop
pop
sub
jmp
call
adc
pushf
clc
xor
push
outsl
scas
dec
nop
lret
cli
jle
push
pop
aaa
call
sbb
fdivs
jl
pop
dec
sbb
shrl
mov
add
xchg
inc
mov
fucomip
rcrl
inc
out
dec
jbe
repz
movsl
dec
and
or
imul
cmp
mov
xchg
call
mov
xor
shl
mov
dec
lret
lret
mov
test
cmp
add
pop
and
mov
cli
pop
adc
mov
dec
mov
outsb
arpl
stos
fwait
sbb
jbe
and
aaa
jne
or
jbe
arpl
imul
jecxz
lahf
cmpsl
jae
dec
xchg
mov
inc
das
loope
je
dec
push
inc
sbb
inc
mov
xchg
aas
xor
push
or
xor
xor
xchg
mov
out
mov
in
popf
sub
or
or
mov
daa
mov
sbb
outsl
pop
scas
cmpsl
mov
cltd
mov
mov
inc
mov
loopne
cld
mov
in
inc
clc
push
mov
lds
lcall
inc
mov
lods
mov
pop
mov
sbb
in
rcrb
stos
dec
dec
repz
sti
fisttpl
adc
sub
stos
mov
lret
mov
je
xchg
adcb
push
jp
xrelease
xor
icebp
ss
push
dec
or
mov
jnp
xchg
xchg
push
cmp
lds
and
mov
pushf
push
lds
adc
pop
or
push
shll
call
cmp
mov
pop
fs
pop
repnz
clc
in
lods
lock
mov
dec
push
and
mov
dec
cmp
lods
sub
test
lock
push
mov
sti
cmpb
cli
jp
cmp
dec
mov
out
mov
fldt
clc
push
nop
push
scas
and
idivl
or
cmp
mov
push
repz
jl
xchg
and
xchg
mov
adc
clc
test
popf
inc
xadd
cs
cmp
mov
sbb
jb
nop
pop
mov
cmpsl
daa
fnstsw
dec
jnp
loop
dec
and
fsubs
mov
add
inc
bound
gs
ret
ret
int3
cmp
cs
xchg
mov
sbb
and
jns
aad
sbb
std
orb
popf
or
pop
out
out
xchg
fmul
fdivr
pop
scas
lods
push
je
jne
xchg
xchg
mov
test
mov
push
scas
add
idiv
mov
faddl
push
adc
pop
scas
adc
cvtps2pd
aad
popf
mov
ret
rorb
jge
mov
add
adc
fdiv
jecxz
jecxz
cltd
je
jo
cmc
movsl
mov
lods
mov
dec
cld
sbb
mov
jge
loope
mov
mov
outsl
or
imul
sub
inc
or
dec
dec
shrl
ret
and
int
and
push
jb
jg
push
pusha
sub
cli
sbb
pushf
jns
shrb
js
jge
lcall
js
repz
adc
sub
lcall
inc
xchg
mov
test
outsl
xchg
cwtl
fwait
dec
int3
andl
or
shlb
in
in
or
mov
and
lret
jae
shrl
aas
inc
outsl
int
mov
nop
cld
mov
push
stos
not
dec
push
and
fisubs
dec
sbb
testl
ds
cwtl
aad
mov
aad
xlat
inc
xchg
dec
loopne
aam
test
push
out
int3
mov
sbb
negl
inc
xor
xor
xor
inc
push
loope
aas
pop
cwtl
and
xor
or
xchg
xchg
out
daa
push
pushf
add
fisttpll
scas
daa
setne
xor
sub
fbld
arpl
dec
cmp
nop
js
push
mov
cmp
jp
test
mov
cmp
mov
loop
mov
cmc
or
jmp
dec
push
push
in
mov
xchg
cmpsb
cwtl
jbe
jnp
lahf
gs
loopne
enter
push
and
sbb
rcl
ljmp
lods
mov
pop
ss
ret
xchg
or
test
cwtl
mov
sbb
rcrl
push
fadds
leave
pop
mov
jbe
outsl
mov
imul
out
jnp
cmp
cld
add
fstpt
mov
aaa
jge
hlt
mov
stc
cmpl
outsb
aad
mov
adc
gs
fucomp
sti
data16
mov
rolb
mov
sub
jno
movsl
rolb
pop
decl
mov
xor
dec
jg
repnz
pop
rolb
daa
and
pusha
push
sub
idivb
sti
or
push
mov
mov
pop
call
xchg
add
xchg
stos
es
pop
cmpsl
into
push
xchg
test
mov
mov
xchg
daa
and
mov
pop
dec
adc
lods
sub
les
fadd
mov
jp
repnz
dec
mov
pop
addr16
xchg
sub
jge
lock
adc
lds
loope
mov
adc
cmpsl
out
ret
pop
ret
push
mov
or
icebp
cli
xchg
fidivrl
xor
cmp
int3
mov
cwtl
and
add
add
push
mov
jle
xor
xchg
inc
addr16
xor
jmp
call
push
sbb
mov
stc
pusha
addr16
std
sbb
mov
mov
fiadds
sub
dec
or
mov
out
push
mov
cmp
adc
push
fwait
and
iret
pop
xchg
sbb
sbb
xchg
subl
push
cwtl
pop
adc
inc
xlat
adc
and
mov
pop
popa
push
mov
lock
jg
call
mov
mov
sarb
test
lahf
fcomi
jns
rolb
mov
mov
jbe
dec
lock
cmp
addr16
sti
mov
cs
xor
jns
push
stos
mov
inc
stos
sbbl
loop
or
add
push
push
push
clc
scas
cld
lods
in
lock
or
mov
sbb
pop
push
arpl
cmp
inc
outsl
push
mov
fs
jp
xchg
xor
dec
in
xor
sarl
mov
sub
cmp
jmp
adc
cmp
adc
imul
cwtl
addr16
xlat
cmp
mov
push
das
and
push
pop
xchg
jp
scas
fists
dec
xchg
cmp
mov
push
adc
popf
pusha
jae
into
sbb
mov
aaa
stos
scas
cwtl
pop
jnp
ljmp
inc
sbb
pop
dec
aas
loope
xchg
sahf
inc
lods
das
xor
pop
pop
lret
xlat
lret
jnp
mov
incb
or
dec
sbb
adc
xchg
sbb
mov
mov
shl
sub
xor
jmp
pop
add
cltd
xchg
pop
jbe
inc
push
lret
adc
mov
imul
cmpsb
cmp
dec
and
ss
lds
jbe
or
push
mov
and
xor
inc
adc
cmp
test
lret
push
rcr
sti
xchg
mov
scas
xor
sub
inc
mov
cwtl
inc
xchg
pop
pop
insl
add
push
lret
sub
das
cwtl
decl
enter
xchg
cli
cmp
dec
daa
clc
lret
mov
adc
sub
ljmp
jo
push
scas
xor
jno
ror
jle
add
mov
outsl
loope
js
cs
adc
icebp
rcl
push
mov
enter
xchg
sarb
xchg
out
imul
mov
je
or
cmpsl
sti
inc
loope
gs
insl
test
xchg
push
add
call
repnz
test
rol
xor
loop
dec
call
inc
jl
dec
into
sarl
mov
out
xor
cld
dec
out
movsb
mov
in
in
jl
shll
je
fdivl
mov
sbb
movsb
nop
cmp
lock
sbb
scas
ljmp
imull
xchg
shlb
jae
add
mov
inc
cli
aaa
add
test
cwtl
cltd
push
mov
jge
testb
arpl
and
rcrl
shrb
sub
ret
xor
mov
icebp
aas
fimull
inc
xlat
stos
inc
lahf
cmp
clc
out
fcomps
fnstsw
int
addr16
xlat
pop
jo
jnp
inc
mov
and
dec
sbb
pop
stos
push
xor
push
cmpsb
enter
xor
out
lods
icebp
mov
jle
ret
hlt
inc
push
pop
pop
dec
jno
sbb
out
xor
mov
test
fwait
aam
cmp
mov
stos
add
cli
mov
fbstp
popa
push
adc
repnz
xchg
sub
nop
mov
icebp
dec
in
jecxz
pusha
stc
sub
pop
lahf
lock
sub
cmp
push
mov
jmp
lret
push
aaa
xor
imul
dec
sar
mov
jns
sub
jle
jnp
or
cmp
iret
jmp
or
ss
in
jl
aam
and
test
jl
push
cmp
lods
enter
push
sub
addl
lea
cltd
xor
ljmp
mov
add
aas
daa
sub
lret
loope
mov
out
aad
dec
test
mov
adc
dec
es
xchg
mov
clc
lea
loop
push
mov
fstl
fstl
inc
push
adc
push
push
stos
and
jnp
inc
pop
mul
gs
js
mov
sub
mov
add
mov
cmp
ja
jb
cs
hlt
inc
and
mov
xchg
mov
inc
leave
add
mov
pushf
test
xchg
outsb
or
lock
sub
fistl
xchg
repz
jns
mov
je
adc
dec
adc
jl
out
push
mov
out
js
add
xchg
into
aad
mov
mov
adc
mov
dec
call
fdecstp
lds
inc
push
dec
outsb
or
cltd
jge
sti
ud0
adc
jbe
inc
xor
aad
adc
ret
or
add
mov
cli
into
push
das
jmp
push
jp
mov
pop
loop
mov
clc
stc
clc
pop
hlt
jno
test
jg
xchg
dec
repz
inc
fwait
stos
mov
pop
shll
popa
movsl
sbb
movsl
bound
mov
or
scas
aaa
xchg
dec
sarl
adc
jle
mov
ljmp
enter
repz
loope
imul
and
mov
xchg
dec
loop
popa
jbe
lret
lcall
nop
cmpl
shlb
sbb
fdiv
mov
add
stos
dec
cltd
push
or
sbb
popf
mov
in
push
pusha
icebp
ljmp
mov
jle
jmp
out
or
inc
jecxz
adc
jne
into
inc
out
mov
fnstenv
daa
jmp
jns
xor
pop
test
xchg
inc
addr16
lods
lret
inc
sahf
ret
cmp
push
mov
or
mov
push
jne
cmc
add
xlat
fstl
ror
inc
or
push
mov
and
jne
pop
cmp
mov
push
dec
pop
loope
push
xorb
addr16
and
cltd
jecxz
cwtl
xor
lret
inc
in
fdivrl
fwait
cli
sbb
jne
pop
or
loopne
and
inc
push
test
push
pop
sub
pop
push
ss
data16
fldt
aaa
jl
int3
in
sub
addr16
mov
mov
insl
js
lret
cltd
rcr
mov
in
lds
cwtl
fucomip
adc
aas
adc
adc
and
test
sub
out
mov
inc
add
cwtl
insl
fisubl
lods
aaa
inc
and
sbb
hlt
push
jb
jcxz
add
jp
xor
fildl
sbb
imul
push
jecxz
add
lock
mov
cwtl
movsb
scas
into
sbb
jno
stc
movsl
popa
nop
pop
add
add
cmpb
and
and
loopne
mov
fwait
ret
iret
shl
repnz
mov
jmp
loopne
lahf
push
cmc
mov
sahf
out
dec
mov
sbb
mov
or
and
push
call
jae
in
cmp
fs
mov
fstpt
and
mov
adc
mov
sub
aad
inc
sbb
shll
sbb
out
xchg
push
addb
inc
add
cld
and
imul
dec
call
bound
test
push
aad
jns
roll
call
fcmovnu
cld
mov
bnd
xor
rcrb
les
aaa
sti
bound
cmp
mov
dec
sbb
mov
jnp
fs
and
ret
pop
cmp
andl
pop
fdivrl
ror
out
mov
inc
sub
dec
xlat
inc
and
push
mov
push
lcall
push
mov
movsb
iret
and
fs
test
out
mov
fcmove
add
js
pop
popa
jecxz
fisttpl
lods
divl
popf
sbb
in
jne
pop
inc
inc
push
push
pop
jmp
sbb
dec
movsl
les
sti
mov
in
xorl
mov
jecxz
push
out
dec
stos
out
pop
mov
nop
xchg
sbb
aam
adc
lea
lock
shl
inc
xchg
sti
sbb
sub
pusha
idivb
je
jb
push
mov
xchg
mov
fidivl
scas
add
mov
fstps
push
call
das
add
loope
mov
repz
sti
pop
in
and
push
adc
pop
mov
lds
outsl
aam
push
enter
jp
mov
mov
hlt
or
add
mov
loopne
push
pushf
in
xlat
add
sbb
push
add
xchg
dec
dec
int3
dec
push
aas
dec
popf
cld
xchg
pop
out
push
xchg
mov
enter
out
pop
test
xor
xor
pop
les
int3
sbb
xchg
lcall
jo
aas
sub
popf
jg
aas
or
xlat
jl
xor
or
push
push
add
pop
repnz
lret
jb
fsts
inc
sbb
push
pop
fmuls
dec
jecxz
dec
jnp
jge
add
and
outsl
clc
lods
cld
adcl
aam
add
jmp
icebp
mov
fcomp
imul
outsb
fmull
in
movsb
sti
lock
mov
daa
pop
add
xchg
jg
inc
shlb
lret
iret
sub
fstps
frstor
pop
sub
lods
push
push
icebp
subb
dec
xchg
or
in
sub
adcb
jg
jne
jno
inc
sbb
or
add
pop
xchg
sahf
test
and
loop
les
dec
dec
insl
xor
scas
inc
popa
sub
xchg
cmp
stc
scas
pop
jl
sahf
cmpsb
out
xchg
lods
sbb
pop
add
xchg
fdivl
dec
dec
jmp
mov
sahf
into
jb
mov
pop
sbb
loop
add
cmp
lahf
add
sbb
das
outsl
mov
jae
aaa
mov
ret
fcom
stc
mov
xchg
jecxz
movsb
sbb
add
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
mov
mov
jnp
mov
jnp
div
or
sub
cmc
ljmp
imul
mov
jno
lods
and
lock
loope
ret
pusha
addr16
sbb
lock
add
cltd
in
test
cmp
sbb
pushf
push
iret
xchg
xlat
mov
movsb
repz
fildll
xchg
xor
add
or
out
adc
xchg
xchg
and
stos
push
cmpsb
out
cs
xor
test
hlt
int
xchg
test
xorb
jns
loope
add
inc
and
sti
lcall
stos
mov
daa
pop
mov
pop
ret
sahf
fimull
adc
ffree
push
jl
aaa
bound
pop
stos
daa
test
add
mov
inc
mov
mov
jl
imul
sbb
xchg
and
leave
pop
jp
mov
ljmp
xchg
les
cmpsb
nop
inc
sub
mov
adc
fwait
xchg
inc
mov
sbb
dec
aas
jns
and
sub
cmpb
fcomip
dec
mov
mov
enter
mov
mov
out
fistpl
insl
add
pop
push
lret
stc
xchg
adc
mov
icebp
icebp
out
push
lods
cs
out
jp
xor
cmp
mov
test
lods
push
sbbl
xchg
push
xchg
inc
xlat
dec
and
jae
stc
add
dec
aam
in
aaa
mov
mov
ficompl
pop
ljmp
fldenv
sub
mov
or
sti
mov
pop
in
inc
jge
sub
cs
stos
push
lods
out
cmp
mov
insl
orl
or
repnz
sqrtps
xchg
movsb
data16
mov
repnz
cs
sbb
addr16
out
pop
push
lret
les
fwait
sub
xor
xchg
or
je
pop
mov
clc
add
popa
mov
jge
rclb
and
lods
or
adc
mov
mov
lahf
jg
test
cld
jo
in
mov
cli
outsl
or
fcmovne
mov
jnp
lds
fucomp
and
sahf
mov
in
jne
call
pop
ret
mov
add
mov
adc
mov
jnp
dec
jo
xchg
mov
inc
xchg
adc
add
mov
push
and
lahf
out
arpl
xor
cmc
pop
xchg
mov
sub
movsl
arpl
test
pop
hlt
test
pop
imul
jnp
push
dec
leave
xor
or
cs
mov
das
bound
ret
cmp
imul
jae
sti
scas
push
add
cltd
push
inc
cld
xchg
popf
pop
imul
cld
mov
aam
cmc
add
imul
nop
mov
xchg
out
xor
and
int3
or
lock
adc
stos
jns
repz
repz
outsl
sahf
mov
xlat
cmp
add
mov
dec
and
pop
test
inc
cmpl
in
xor
mov
sub
xor
jle
icebp
sub
push
adc
sbb
pop
out
sbb
cwtl
stos
mov
sub
rep
call
fisubrs
mov
orl
cmpsb
xor
mov
push
xor
or
cmp
out
les
divl
jp
je
aas
shlb
sbb
clc
cmpsb
jl
stc
adc
negl
in
enter
cld
push
call
inc
mov
xor
xchg
popa
mov
mov
push
repz
cltd
test
popa
out
jmp
in
dec
add
mov
pop
fmuls
js
iret
push
pop
andl
or
xchg
vmovd
inc
into
lret
cmpl
imul
cli
push
imul
leave
imul
add
jne
xchg
rolb
pushf
mov
jmp
ss
xor
mov
aaa
mov
iret
mov
popf
mov
sub
jno
mov
sti
lea
xchg
mov
jae
pop
sub
mov
std
sbb
sub
lods
into
and
sub
xchg
fucomp
js
sbb
notb
push
push
cs
dec
ja
mov
xchg
mov
mov
js
mov
sub
shll
sbb
outsb
lea
enter
adc
aam
xor
jecxz
push
lcall
sbb
push
push
test
iret
mov
xor
inc
sub
addl
push
movsb
xor
or
dec
or
stos
scas
js
lcall
lods
adc
jae
fsub
scas
pusha
ret
mov
mov
pop
mov
icebp
ret
bound
insl
inc
outsl
mov
loope
xchg
mov
mov
test
adc
inc
pop
cmp
pop
adc
js
repz
roll
xchg
stos
jg
xor
mov
or
xlat
clc
add
daa
fsubl
in
jl
mov
dec
pop
popf
loopne
aas
iret
rol
pop
loope
jl
cwtl
pop
ret
cltd
test
loope
adc
cmp
ret
adc
leave
push
lahf
aam
mov
ret
ljmp
cmp
scas
lahf
inc
test
mov
mov
dec
mov
mov
inc
jb
and
sub
pop
lods
mov
add
jo
pusha
sub
lahf
lods
roll
add
cli
ds
shll
inc
pop
stos
inc
jmp
hlt
jmp
out
or
movsb
out
jge
jo
loope
mov
ljmp
pop
aam
inc
std
mov
sahf
cmp
mov
push
sbb
subb
stos
in
sub
loope
inc
dec
imul
out
test
jecxz
push
and
xor
push
outsb
and
or
adc
popf
push
fists
and
sub
jle
mov
adc
and
ret
leave
subl
inc
test
inc
out
add
and
out
nop
cs
outsb
push
imul
inc
cmp
cli
add
jmp
inc
inc
leave
fadds
in
cli
out
or
lcall
lock
lock
add
cli
dec
and
dec
lods
cmp
pop
lahf
mov
int
lahf
pop
add
stos
mov
push
fidivrs
or
dec
sbb
iret
bnd
and
ss
mov
xchg
icebp
pop
or
inc
xchg
subb
mov
push
mull
imul
dec
daa
cmp
mov
int
sbb
push
mov
xlat
loop
enter
movsl
mov
adc
jne
leave
je
dec
pop
pop
int
push
dec
loope
inc
add
push
mov
or
push
push
mov
sahf
xor
adc
mov
dec
xlat
cmc
adc
add
sysexit
jnp
mov
pop
pop
fwait
xchg
sub
je
jmp
xlat
cmpsb
stos
repz
aad
ret
pop
cmp
fs
std
call
dec
xlat
xor
inc
pushf
mov
xlat
mov
jl
js
jge
mov
cmp
jns
mov
out
jge
bound
mov
pop
push
mov
jbe
aad
or
adc
lock
lret
bound
es
mov
out
repz
shr
data16
adc
adc
xchg
add
mov
add
add
or
xchg
inc
xor
or
cmovg
dec
mov
pop
popf
ds
aaa
repnz
xchg
inc
loopne
push
jge
or
fisttpll
mov
xor
jmp
xchg
pushf
mov
aas
mov
cmpsl
push
arpl
out
fcomip
mov
sub
aas
xor
jns
mov
ja
fwait
jg
popf
hlt
lcall
jg
cli
sarl
sub
cmp
push
push
popf
test
or
stos
and
mov
repnz
lds
mov
loope
add
sbb
add
stos
mov
shlb
mov
cmp
test
and
jp
push
push
in
push
iret
repnz
shll
mov
sbb
add
aaa
adc
pop
push
lret
inc
cmp
lods
aas
rolb
xchg
nop
inc
jae
mov
std
xor
xor
jg
shr
lods
cmp
iret
pop
repz
lret
shlb
sbb
xchg
sbb
stos
sbb
decb
cmpsl
adc
sarl
shll
or
jp
js
lods
push
lds
imul
popa
andl
or
mov
ja
or
mov
dec
into
adc
mov
or
into
outsl
sti
xchg
push
imul
out
xor
test
movsl
dec
dec
outsb
mov
push
insl
nop
push
sbb
xor
imul
arpl
icebp
roll
mov
jmp
cmc
lret
jb
aas
mov
jnp
int
sar
stos
mov
cmp
ljmp
xchg
push
ja
jle
push
jge
sbb
icebp
dec
out
test
cmp
sub
insl
adc
jne
and
sbb
cmp
clc
lcall
repz
cmp
mov
gs
mov
jns
cltd
xchg
cmp
mov
das
sbb
sarl
test
push
or
aaa
pop
cmpsb
dec
sbb
sarl
or
sub
inc
data16
punpcklwd
and
rclb
or
pop
insl
repz
notl
cld
sbb
inc
fisttpll
dec
dec
mov
mov
sbb
popa
in
add
aas
popf
repnz
sub
xchg
aas
dec
ljmp
push
push
in
sub
shlb
add
lahf
testb
lahf
nop
dec
cmc
ja
lea
rep
jno
cs
jo
pop
and
aaa
sahf
and
dec
rcll
mov
xor
adc
pop
mov
mov
cmp
adc
jae
cmc
jno
loopne
xchg
pushf
nop
fidivl
leave
popa
fldenv
jmp
hlt
rorl
test
mov
pop
jmp
mov
ror
push
ss
in
sub
adc
out
push
subb
repnz
add
sub
stos
pop
mov
xor
ret
loope
movsw
cmp
push
cwtl
lea
jnp
fists
inc
aam
mov
lret
xor
ss
mov
sub
xchg
pop
js
into
sub
popa
sbb
repz
add
scas
aad
mov
shll
mov
rcrb
inc
call
push
into
bound
push
mov
pop
icebp
push
cmp
mov
jae
push
pop
jl
cmp
rcl
lahf
push
mov
mov
sti
or
dec
orb
sbb
dec
addr16
jns
mov
xchg
pop
test
inc
lods
fwait
push
insb
popa
dec
push
push
xchg
in
mov
test
dec
inc
in
mov
icebp
mov
loop
arpl
push
cmp
xchg
mov
jne
pop
xchg
jno
xorb
mov
arpl
ljmp
mov
loopne
icebp
dec
ljmp
in
inc
dec
push
shrl
les
push
ret
dec
lret
fcoml
je
pop
loopne
xchg
outsb
mov
movsl
push
add
jbe
push
fwait
inc
out
std
push
insb
inc
clc
cld
jns
dec
sbbl
mov
call
in
shlb
std
inc
jmp
sahf
jo
test
iret
jne
imul
imul
sub
mov
mov
mov
lods
ret
shrl
out
daa
in
out
mov
jg
lcall
push
xchg
ret
fcmovnbe
subb
mov
sbb
mov
loop
outsb
shlb
xlat
inc
dec
jno
das
sub
test
push
in
fsts
dec
aas
add
sbb
ret
ret
and
in
mull
push
xorl
lcall
pop
inc
and
push
adc
sti
mov
xor
enter
mov
xor
pop
das
xchg
pop
xchg
push
fwait
shr
push
inc
mov
add
test
ffreep
in
xchg
fwait
ja
xor
sbb
das
andl
adc
push
addb
sbb
outsl
push
pop
sar
adc
sub
ljmp
pop
outsb
and
push
adc
je
lahf
sub
pslld
or
xlat
mov
movsb
or
loop
in
leave
enter
jbe
repnz
test
add
test
cli
fdivrs
popa
enter
ror
add
stc
ss
push
dec
xchg
jecxz
push
inc
adc
idivb
inc
les
ficomps
or
aas
sahf
sub
xchg
dec
sbb
add
jge
stos
inc
mov
in
imul
test
pop
mov
adc
bound
or
jle
test
push
jl
insl
mov
pop
mov
cmpsl
mov
xor
sbb
test
jb
pop
sahf
mov
pop
mov
rolb
aad
data16
test
dec
mov
enter
call
sbb
mov
lods
jl
fsubs
fistps
fadds
leave
jp
nop
pop
dec
adc
jbe
inc
mov
in
inc
lcall
aad
or
int
push
cmp
push
mov
mov
push
dec
shlb
cmp
popa
out
add
or
pop
aad
inc
dec
pop
out
loope
jl
sub
lock
loopne
cmp
mov
mov
ja
or
aas
test
cmpl
sbb
adc
xor
outsb
lret
shlb
xlat
fisttpl
cltd
ret
adc
popf
addr16
sub
rcrl
lahf
bound
ljmp
rcrb
mov
adcb
mov
addl
call
mov
dec
jle
loope
cmpsl
inc
ret
ja
pop
mov
pop
fidivs
xchg
insl
fsubl
mov
scas
gs
inc
call
fdivs
inc
js
dec
adc
movsl
lahf
leave
pop
ret
jge
data16
lock
mov
pop
add
xchg
iret
cwtl
fdivrp
lock
sub
and
lret
jmp
fiaddl
xor
dec
dec
outsl
cmp
lods
xchg
push
or
cmp
popf
xchg
mov
out
lret
pushf
daa
ljmp
push
mov
mov
pop
jne
mov
imul
mov
sti
and
add
mov
or
or
dec
sbb
push
xchg
dec
ljmp
jl
insl
cmpsb
push
jmp
ret
outsb
lods
rcl
cmc
cmpsl
adcb
mov
xchg
lcall
sahf
lds
dec
lods
add
mov
jle
and
mov
cwtl
or
mov
mov
out
mov
out
dec
addr16
adc
scas
sbb
scas
sub
jb
mov
pop
fcmovne
ret
sbb
fisttpl
cwtl
xchg
loopne
lea
mov
inc
ss
clc
jnp
cmp
mov
pop
or
push
stc
mov
fldenv
xchg
lea
movsb
aas
fs
stos
adc
lds
mov
adc
mov
enter
cmp
loope
and
push
sahf
inc
pop
push
out
jbe
fildll
add
xor
out
xchg
dec
out
jmp
jns
mov
int
mul
gs
mov
sbb
pushf
push
arpl
xor
fbld
test
lret
mov
pop
add
cwtl
mov
cmp
test
shlb
call
cmp
inc
adc
jne
sti
repz
je
popa
mov
jbe
sbb
xchg
mov
add
xor
cmp
imul
in
cmp
pop
xchg
dec
pusha
mov
aad
out
mull
cwtl
lcall
loope
mov
inc
push
sbb
or
add
cmp
shll
cvtps2pd
and
je
push
outsl
cwtl
ret
xchg
xor
jbe
xchg
mov
es
mov
pusha
adc
inc
add
outsl
cmpsl
xlat
mov
ss
movsl
shlb
pop
clc
dec
aad
daa
aaa
sub
fwait
ja
inc
push
mov
xchg
fbld
lret
cmp
xchg
push
cltd
and
pop
cmpsb
insl
test
xchg
cmp
shll
loop
cmc
imul
xchg
ja
fwait
addb
test
testb
mov
fistpll
clc
mov
addr16
test
jb
cmp
cs
aas
mov
mov
pusha
jb
xor
lods
adc
ds
aam
shll
sti
cwtl
out
das
sbb
js
ss
repnz
ds
incl
adc
ljmp
out
fistpll
lods
pop
jle
repnz
test
jle
addb
jne
jae
pop
aam
movsl
mov
jno
mov
ss
xchg
mov
sti
sarb
and
insl
jno
jge
inc
loope
test
xor
inc
push
scas
lret
repz
daa
call
loope
xor
leave
push
pop
jg
and
xlat
mov
pop
mov
iret
add
sub
pushl
insl
push
or
out
out
mov
sub
dec
pusha
out
cld
dec
fwait
into
push
jmp
ds
xchg
xchg
imul
outsb
mov
cmp
lock
push
popa
stc
inc
mov
and
inc
cmp
std
int3
add
shrb
das
xchg
shrl
sahf
bound
cwtl
fldl
ljmp
stc
xor
lahf
loope
jecxz
and
xchg
dec
in
jg
mov
jge
push
cmpsb
je
sub
xchg
leave
xchg
loope
mov
xchg
dec
test
shll
mull
lcall
rol
jmp
inc
cli
cmp
pop
push
int3
js
pop
jnp
movsb
mov
lea
jns
arpl
xor
pop
jmp
or
sarl
adc
pusha
popa
mov
or
cmpsb
pop
stos
inc
loopne
cwtl
addl
xor
jae
leave
cmp
push
push
leave
jl
dec
push
adc
mov
nop
lret
sbb
aaa
mov
out
sbb
cmpsb
sbb
pop
cmp
inc
sti
out
xchg
jecxz
mov
mov
fsubr
daa
scas
nop
jg
cmp
dec
and
iret
adc
scas
in
fidivs
imul
pop
testb
shl
mov
mov
fidivrl
xchg
xor
push
xchg
dec
add
inc
mov
ficoml
je
lods
into
sbb
sarl
adc
inc
jb
enter
mov
lods
inc
leave
xchg
inc
push
mov
lret
sbb
sarb
sbb
popa
int
xlat
data16
xchg
inc
dec
aaa
jb
xchg
mov
jno
and
leave
sub
inc
xor
loopne
push
imul
outsb
inc
aam
dec
mov
jbe
std
pop
daa
and
decl
orl
addr16
xchg
stos
out
dec
or
imul
sar
mov
pop
scas
jg
aam
pop
std
add
scas
movsb
sub
js
pop
fsubl
add
rorl
add
into
rcrl
lds
xchg
sahf
mov
test
aaa
shl
push
popf
xor
push
xchg
and
scas
and
loop
out
jo
mov
rorl
or
mov
adc
fcom
dec
mov
outsb
movsb
add
xor
lahf
rolb
lret
ret
nop
xor
mov
divl
pop
repz
les
jb
fwait
and
xchg
orb
das
in
inc
dec
pop
cmp
fs
pushf
jecxz
cmpsl
ja
mov
and
xchg
add
sbb
in
fidivs
dec
loopne
les
cmpsb
mov
clc
adc
cmp
push
ss
sbb
xorl
mov
out
rol
xchg
aam
cmpsb
mov
pop
stos
xchg
lcall
sbb
add
adc
inc
rolb
push
stos
xchg
push
das
cmpsb
mov
cli
cmp
test
pop
push
out
scas
into
inc
jo
jle
mulb
lods
xor
je
daa
cwtl
fiadds
xor
aaa
pop
adc
xchg
xor
ja
leave
jl
xor
xor
lods
sahf
fsubs
scas
mull
cmp
insb
pop
daa
ret
dec
out
adc
sbb
scas
lea
fimuls
add
push
cmp
mov
lret
jnp
sbb
push
das
pop
scas
aaa
dec
add
cmpsl
xchg
fcompl
into
and
mov
xchg
jmp
and
mov
xor
stos
and
adc
xchg
test
push
fcomp
xchg
dec
mov
mov
and
in
enter
xchg
and
inc
movsb
fldcw
mov
sbb
jbe
imulb
dec
lcall
adc
push
and
popf
dec
mov
push
scas
aas
sarb
mov
mov
aas
adc
lcall
mov
and
inc
cmp
push
mov
in
into
incl
inc
sub
int
pop
add
jp
fildl
test
sub
cld
nop
movsl
jnp
mov
xor
lahf
outsb
in
jg
inc
in
adc
decl
sbb
add
int
add
dec
int
xchg
ret
jle
iret
pmaddwd
adc
adc
cmp
pop
iret
sbb
rolb
xlat
imul
clc
or
cwtl
push
xchg
gs
dec
cmp
out
js
imul
adc
fcmovb
negl
pusha
add
clc
outsb
fsub
lock
sbb
sbb
loop
mov
and
iret
jge
mov
loope
pop
cld
mov
lock
dec
test
mov
xchg
inc
xor
bound
inc
or
les
and
mov
fdivrs
push
imul
repnz
xchg
jno
dec
shlb
daa
stc
stos
inc
lret
dec
jns
cmc
mov
mov
pop
popf
enter
and
js
jmp
outsl
dec
and
popf
xor
dec
cmp
outsl
fucomip
adc
cltd
nop
cmpb
adc
fs
arpl
xchg
fnstenv
loope
mov
adc
jge
dec
xor
xchg
lret
fwait
and
push
push
push
es
xor
popf
je
add
rorb
pop
inc
pop
pop
or
pushf
xchg
es
pop
inc
sub
mov
movsl
push
cmc
aam
out
jns
mov
imul
hlt
and
nop
bound
dec
in
je
jno
rcr
push
fsts
lret
pop
mov
xor
dec
ds
shlb
mov
scas
iret
test
sub
mov
push
mov
repnz
dec
sbb
pop
mov
imul
je
jge
mov
test
xchg
inc
js
lcall
mov
out
mov
insb
pop
ret
imul
cli
lea
mov
enter
xlat
ss
shll
or
pushf
aam
push
pop
gs
es
inc
push
imulb
mov
mov
test
bound
popa
outsb
pusha
xchg
jns
outsl
out
shlb
jbe
loop
jmp
pop
addr16
test
push
int
or
jb
sub
int
pushf
cmp
cmpsl
xor
ljmp
mov
aas
xchg
ret
sub
xchg
gs
push
rcr
sub
aaa
xchg
jp
sub
jecxz
mov
lea
jnp
sub
inc
xor
int
pop
test
sbb
mov
dec
push
popf
inc
test
lods
or
or
sub
pop
clc
xchg
mov
or
ja
imul
adc
movsb
mov
insl
out
orl
ljmp
cli
scas
loope
outsb
jae
push
sar
xor
inc
test
scas
ljmp
dec
arpl
jne
icebp
or
mov
sub
pushf
xchg
pop
xor
outsl
data16
mov
stc
lret
and
sbb
orb
pop
orb
push
fwait
sbb
ja
test
add
sbb
sahf
push
cmpsb
dec
rol
movsl
mov
mov
lret
dec
sub
cmp
das
popa
fsubrs
dec
pop
test
into
aam
fisttps
dec
jge
dec
nop
cmp
scas
lret
fidivrl
orb
mov
mov
cmp
ficoms
sbb
imul
cltd
pusha
js
scas
pop
mov
loopne
dec
aam
cltd
jmp
in
fisubl
dec
outsb
push
inc
and
lods
jne
clc
mov
jnp
sub
scas
mov
push
mov
test
adc
fidivrs
in
cmp
xor
negl
mov
push
cs
dec
icebp
loopne
fbld
sbb
jp
iret
mov
mov
sub
xchg
call
jle
jo
icebp
pop
jno
in
xlat
enter
daa
int
mov
stc
push
leave
pop
cmpsb
pop
mov
lret
mov
jg
lock
pop
xchg
inc
adc
pop
iret
push
stc
cmc
and
movsl
or
xchg
sahf
je
push
bound
cmc
pusha
arpl
nop
cltd
leave
cltd
jmp
pop
jae
iret
and
arpl
das
dec
pusha
mov
and
push
iret
repz
jnp
mov
test
out
fldl
mov
mov
jae
xor
sub
xchg
jnp
fdivrl
imul
addl
test
in
or
xor
outsb
idivb
push
mov
cmpsb
arpl
add
pusha
inc
cwtl
ss
mov
xchg
pop
add
dec
hlt
les
inc
jge
test
arpl
shr
lods
sbb
mov
out
cmp
addb
dec
xlat
fucomp
jno
or
cmpsl
test
inc
push
lods
xor
push
push
xchg
daa
adc
inc
arpl
sbb
sub
xchg
dec
adc
lods
adcl
popf
push
and
jecxz
out
out
test
dec
in
or
pushf
jge
shlb
popf
cmpsb
test
inc
dec
add
mov
mov
lock
mov
fistpll
jb
mov
fxch
push
xor
lds
test
sbb
in
das
mov
jo
or
in
scas
sub
xchg
repz
cs
push
add
sub
dec
loopne
scas
int
popa
adc
or
mov
cmpsl
and
pop
mov
cmp
push
ja
call
jae
adc
jmp
in
test
xor
fcmove
mov
addr16
or
and
stos
or
in
jo
lock
push
mov
imul
fcomps
imul
daa
dec
or
push
push
pop
scas
insb
xlat
xor
or
cli
fcomps
sarl
jecxz
ss
movsb
ret
bound
adc
data16
sbb
cmp
popa
and
pop
xchg
aas
jnp
xchg
enter
je
lds
lcall
ret
fildll
mov
test
xchg
push
push
jge
cmpsb
test
mov
fildl
ret
mov
jl
aam
mov
scas
adcl
cltd
jg
push
push
sarb
adc
pop
adc
sub
lret
adc
or
sub
mov
into
test
enter
xor
jno
lock
jbe
dec
or
loop
or
inc
scas
mov
mov
jae
aaa
dec
test
or
sbb
mov
add
push
or
and
adc
lock
xchg
imul
inc
jbe
rorl
cs
pushf
lret
pop
xlat
inc
push
gs
sub
fabs
sarl
cmpsb
clc
mov
out
mov
jns
inc
mov
push
repz
dec
and
xor
inc
sbb
stos
push
jnp
cmpsb
jb
iret
fimull
cmp
xor
jb
test
lea
out
dec
cmp
cwtl
sub
dec
stos
mov
mov
mov
xor
sbb
jne
cmpsb
out
inc
pop
dec
popf
out
mov
xlat
jl
fmull
pop
jl
cmc
mov
jno
dec
xlat
pop
shrl
int3
enter
sub
jbe
nop
adc
push
inc
aam
stos
jg
and
call
aam
mov
cmp
mov
sub
push
sub
or
aas
adc
or
js
or
dec
mov
enter
jns
mov
mov
sub
cmpsl
xlat
xchg
mov
jns
jl
xor
stos
in
jno
std
aaa
and
dec
push
sub
sub
xchg
cs
sahf
jp
fists
lret
mov
dec
add
pop
icebp
xor
test
push
push
cmpsb
fsubs
adc
mov
shrl
add
mov
dec
add
cmp
sbb
cmp
sbb
rorl
loope
popf
mov
pop
ficomps
fs
xchg
mov
ficoml
test
dec
dec
dec
sub
cmpsb
sub
mov
int
fiadds
push
mov
stc
aam
mov
repz
repz
dec
fs
loope
mov
adc
cmp
rclb
insl
lea
mov
or
addr16
cmpsb
ret
dec
mov
test
lea
xor
and
push
add
adc
stos
into
imull
push
cld
lcall
in
gs
mov
bound
out
out
loopne
pop
imul
or
xor
loop
cmp
popa
push
sbb
pop
push
xor
std
mov
xchg
jo
push
mov
ja
inc
mov
xor
in
jae
fsubrs
pop
ljmp
sbb
insl
and
outsb
cmp
ds
loopne
faddl
lds
in
cmp
mov
cld
sti
mov
mov
jge
ja
mov
sbb
loope
push
out
movsl
fisubrs
cmpsb
push
nop
inc
cmp
mov
dec
cmp
add
lds
mov
xor
add
rcll
loop
cs
clc
andl
ret
cmpsb
popf
das
mov
cmp
mov
fstl
ds
push
push
sbb
fldcw
sbb
push
jge
pop
dec
xchg
xlat
decl
and
jg
jg
js
movsb
nop
std
dec
add
jle
pop
xor
test
pop
fsincos
jb
stos
push
dec
jle
call
jge
inc
cltd
shlb
sahf
lods
fs
push
in
cltd
xchg
adc
bound
mov
xchg
mov
aaa
test
xlat
arpl
and
fiadds
and
rorl
aam
arpl
out
sbb
rclb
dec
inc
fisubs
scas
sub
cwtl
push
fmul
xchg
pop
and
add
or
push
test
mov
xchg
sahf
leave
xchg
sahf
inc
ror
daa
adc
das
pop
repz
add
xchg
rorb
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
loope
dec
sti
out
sarl
sahf
jnp
in
lds
cmp
pop
xchg
sahf
xor
inc
scas
lret
push
enter
mov
push
lcall
xchg
sbb
aam
js
or
pop
in
gs
adc
mov
dec
arpl
pop
jge
cltd
cmp
cmp
call
mov
dec
xor
rolb
sbb
ret
push
in
mov
cmp
les
xchg
es
sub
out
arpl
cmp
and
enter
imul
or
mov
rorl
pusha
mov
pushf
mov
rclb
xchg
fcomps
stos
lahf
rcl
or
test
pop
mov
and
sti
dec
and
sub
ja
inc
add
insl
daa
mov
xchg
aad
lds
ljmp
sti
pop
mov
and
arpl
loop
sub
jge
loope
ljmp
js
add
jmp
loop
sahf
and
mov
mov
push
icebp
fmuls
pop
rolb
add
mov
ss
ljmp
push
pop
ficomps
jecxz
dec
inc
cmp
push
ja
add
push
pop
mov
fnstcw
sbbl
mov
sahf
mov
mov
aam
dec
jp
lcall
xor
sbb
sub
stos
out
roll
mov
cmp
ret
int
fildl
mov
xchg
mov
sub
or
mov
dec
adc
fidivs
mov
sub
sub
shr
pop
pop
rcr
enter
clc
pop
cld
mov
into
inc
orb
pop
mov
imul
shlb
cwtl
hlt
jmp
or
mov
imul
arpl
sbbb
orw
jg
adc
inc
xchg
or
scas
mov
bound
pop
adc
add
fisubrl
inc
inc
lahf
int
sti
add
inc
scas
push
inc
and
push
pop
sahf
xchg
or
mov
in
xorl
pop
hlt
mov
push
adc
lods
movl
adc
test
pop
inc
push
dec
adc
hlt
jne
ja
fistpl
gs
fdivrp
fsubl
js
sbb
lret
cmc
lea
pop
lds
int
ja
test
or
iret
cmp
pop
jae
sahf
imul
arpl
xor
mov
cmp
dec
or
mov
push
fwait
push
testl
dec
sub
insl
xor
clc
adc
sti
shrb
xchg
xchg
mov
sbb
pop
xlat
orl
push
xchg
mov
ds
fs
or
inc
jg
enter
jnp
mov
pusha
addl
lea
mov
sub
test
sub
push
roll
inc
loope
or
lea
data16
aad
ljmp
jge
shll
enter
xchg
movsl
ret
pushf
daa
js
into
pop
dec
ret
int3
sbb
ret
inc
push
inc
fst
push
push
ja
loope
xor
aam
fistps
popf
addr16
ljmp
lret
out
lahf
call
movsl
fwait
push
or
mov
int3
decb
ljmp
push
sbb
adc
mov
push
lret
xchg
inc
bound
push
or
sub
leave
add
push
and
aas
adc
adc
test
push
mov
stc
inc
aas
or
inc
bound
subb
dec
iret
stc
repnz
insb
xchg
jecxz
test
sbb
lods
lahf
xchg
push
adc
pop
add
add
pop
push
into
insb
sarb
cmp
outsb
icebp
ficompl
xchg
inc
shlb
rorl
inc
test
xor
xchg
outsl
adc
inc
inc
lret
push
scas
outsl
ljmp
test
setbe
cmp
cltd
jne
fsubrs
lea
xchg
or
and
add
mov
test
or
cmc
fucomip
push
jmp
jbe
scas
fnstenv
fwait
jle
or
mov
test
push
ja
orl
and
mov
mov
cmc
shrb
repnz
xor
imul
ret
divb
and
sbb
mov
cltd
and
sbb
mov
cmc
cmpsl
rorl
repz
mov
shll
mov
pop
fld
mov
movsb
mov
jb
bound
das
inc
out
addr16
sub
xor
inc
pop
cmpsl
cli
into
cltd
jle
xor
jge
sti
cmp
mov
loope
mov
imul
fistl
in
jmp
int3
xchg
insl
fildl
or
cmp
jb
test
ror
leave
push
js
sbb
insb
xchg
shll
mov
mov
pop
sahf
rorl
push
add
sbb
and
pop
mov
hlt
cmp
stos
xor
test
push
scas
iret
repnz
xchg
int3
jl
shlb
pop
mov
sbb
or
sbb
movsl
sbb
fwait
aaa
lcall
shr
outsl
gs
inc
xlat
roll
jae,pn
mov
sub
jecxz
mov
out
pushf
shrl
sub
movsb
push
inc
lret
lcall
stos
push
mov
pop
jp
cmpsb
push
aam
das
cmp
inc
lcall
test
jmp
fimuls
int3
test
mov
sub
int
les
sbb
inc
mov
in
pop
add
mov
andl
jnp
leave
jo
shl
in
inc
mov
push
jmp
push
jnp
or
pop
dec
lods
adc
jno
and
jg
inc
mov
lret
and
stos
vcvtps2pd
scas
or
loop
add
nop
pop
js
cmp
add
pop
xor
stos
or
mov
fs
jle
negb
cmp
xor
xlat
test
or
jnp
pop
sbb
push
mov
ljmp
in
inc
jne
mov
outsl
mov
sahf
push
iret
dec
std
out
xor
pushf
in
inc
adc
dec
or
xchg
inc
push
mov
push
push
aam
adc
popa
mull
aad
push
pop
add
push
xor
into
fldpi
data16
dec
xchg
call
cmp
dec
pop
adc
out
mov
jp
push
out
fmuls
in
mov
and
popa
adc
imul
pop
or
in
mov
cmp
xlat
test
cmp
std
daa
pop
in
cmp
and
mov
fnstsw
test
fnsave
push
xchg
jg
pop
push
clc
inc
frstor
lds
jnp
inc
add
test
sahf
mov
cli
pop
lcall
ret
ss
sub
sub
inc
lods
push
dec
cmp
add
mov
sub
in
xchg
mov
dec
repz
sub
lret
or
lahf
iret
sahf
xor
dec
rcrb
leave
dec
pop
test
push
sub
imul
shr
and
lods
push
xchg
stc
dec
pop
lea
mov
scas
out
push
in
add
dec
inc
dec
dec
jp
repz
mov
mov
add
out
rol
adc
push
mov
jae
daa
mov
pop
or
and
aad
cld
fstps
mov
lcall
inc
lock
pusha
or
push
jp
popa
nop
xchg
dec
xor
inc
xor
jge
lcall
shll
xlat
or
xchg
pop
cmp
mov
cmp
aad
ss
jge
sahf
es
or
or
mov
and
lea
adc
aam
fcmovne
mov
cwtl
test
or
js
dec
sub
inc
mov
add
fstpt
test
mov
pushf
rolb
and
test
daa
sbb
sbb
jmp
sarb
sbb
shrb
mov
mov
mov
mov
mov
addb
mov
adc
stos
sub
das
jge
bound
sub
std
inc
clc
mov
cmp
lock
pop
jae
lds
cmp
iret
xchg
or
mov
push
push
ljmp
je
mov
ss
idivl
mov
in
out
xchg
fldt
aad
aas
adc
xchg
or
std
or
inc
cmp
xchg
mov
adc
and
add
mov
daa
fs
mov
mov
in
pop
xor
pop
push
loop
xor
icebp
testb
mov
call
fdivrp
cmp
insl
pop
add
addr16
rorl
jbe
push
rcll
lret
cmp
xchg
std
aam
bound
icebp
mov
fwait
sub
bnd
and
std
cmp
scas
lret
and
dec
dec
mov
mov
rol
mov
sub
dec
pop
gs
mov
fst
aaa
mov
adc
fs
lods
insl
adcl
cmp
cmp
inc
pusha
and
popa
mov
mov
bnd
les
and
lahf
pop
mov
dec
inc
jne
and
dec
lret
push
lret
into
sub
lahf
movsl
cmc
pop
jge
shlb
rclb
sti
lret
mov
out
fwait
mov
and
pop
lret
es
test
jle
dec
xor
jg
mov
mov
cmp
test
xchg
aam
push
fcoml
scas
xlat
adc
xchg
xchg
mov
xchg
popa
shlb
repnz
ds
lret
in
jns
test
mov
dec
cs
lret
loop
push
or
mov
imul
xorl
mov
pop
jg
jl
call
mov
cs
cmp
fstps
inc
test
lods
lret
rclb
ret
gs
imulb
push
jp
imul
xor
out
lahf
clc
imull
jnp
pop
inc
mov
popa
mov
shlb
es
mov
test
push
xor
das
push
lcall
pop
and
mov
and
popa
cmc
adc
pop
pop
cmp
rorb
out
xchg
mov
pusha
addr16
in
aam
lret
dec
popf
mov
in
xchg
add
pusha
icebp
push
xchg
pop
mov
cmp
int
adc
and
clc
or
or
leave
xchg
stc
movsl
sub
pop
jns
repnz
sub
mov
push
cmp
cmp
add
out
adc
push
add
xchg
push
dec
push
fnsave
pop
xchg
out
jns
sub
pop
jmp
sub
xlat
inc
test
cld
sbb
inc
xchg
xchg
outsl
mov
mov
mov
lcall
add
stc
nop
loop
lock
ret
js
lret
mov
dec
or
xchg
in
mov
xchg
test
lahf
mov
lcall
jp
mov
or
dec
repz
push
idivl
mov
jmp
push
iret
daa
pop
xor
or
jge
pop
mov
cli
je
enter
bound
dec
cmp
lcall
push
cmp
loop
cld
iret
aam
inc
fcmovb
or
dec
adc
pop
loop
out
fs
and
fildl
scas
stc
fmul
ss
sub
lea
sub
lea
jbe
iret
lods
fcmovu
mov
bound
mov
adc
scas
test
mov
push
jmp
mov
fisubrs
cmp
inc
inc
enter
pop
repnz
aad
sbb
inc
rclb
mov
fildll
jnp
mov
sbb
xchg
push
sub
dec
sub
xor
sub
outsb
lcall
pop
jg
pop
stc
mov
sbb
enter
lock
jbe
mul
cmp
cmpsl
pop
in
jge
int3
cld
roll
sahf
das
and
adc
nop
or
mov
aas
arpl
pop
add
inc
insl
fbstp
xor
lea
lock
lock
sti
or
stc
cmp
and
mov
jo
mov
mov
hlt
cwtl
adcl
push
push
and
movsb
sbb
sahf
xor
loop
sub
rclb
pop
dec
stos
fs
sub
imul
iret
insb
popa
cmpsb
test
sbb
sub
jmp
idivl
fwait
lods
fwait
cmp
ret
push
loop
jbe
outsl
das
rorb
jecxz
lock
movsl
inc
add
mov
jns
js
mov
pushf
rol
sbb
inc
push
push
mov
les
xchg
cmp
and
push
ja
lret
repz
push
dec
xchg
push
add
jl
cmp
jno
arpl
ss
aas
lahf
pop
xchg
pop
pop
mov
mov
pushf
out
call
mov
aaa
add
clc
sbb
dec
sub
pop
movsb
xor
scas
fmull
sub
xchg
mov
decb
popf
push
and
push
aaa
xor
or
cld
push
push
push
cmp
fsubrs
arpl
push
rolb
flds
cmp
fsubr
jmp
leave
ficoml
mov
mov
leave
or
sbb
jae
es
jle
data16
call
jmp
mov
jp
aas
sahf
imul
fwait
aad
push
stc
or
int3
cmpsb
mov
in
int
and
cwtl
in
repz
adc
or
pop
fidivl
inc
imul
mov
xchg
cmp
lds
and
xchg
dec
stos
xchg
imul
xchg
adc
imul
add
loope
push
pop
fcomi
into
test
mov
aam
pop
iret
xor
adc
mov
std
popf
push
mov
push
sbb
mov
inc
bound
imul
flds
push
pop
dec
stc
jae
and
cltd
in
out
sbb
repz
pop
pop
or
test
add
xchg
test
sub
adc
jle
or
hlt
shll
js
scas
cmp
nop
mov
loop
imul
pop
icebp
cltd
es
das
repnz
dec
sti
mov
xor
sbb
mov
cmp
mov
cmpsl
imul
sbbl
bound
std
push
xlat
sub
and
movsb
andb
pop
stos
sub
sub
sub
lock
cli
xchg
cmp
mov
add
dec
cs
lret
inc
repz
lds
xlat
sbb
loope
leave
sti
cmp
imul
jp
mov
add
and
push
rorb
mov
scas
je
add
rcr
dec
mov
bound
shl
xchg
fists
or
cltd
jbe
mov
js
fisttpl
lret
pop
enter
pop
inc
or
shlb
and
sbb
pop
inc
in
int
sub
xor
sarb
sub
loope
adc
sub
lea
cmp
pop
jl
fwait
push
test
pop
clc
lret
call
dec
push
inc
rcrb
push
sbb
movsl
jno
mov
fs
push
stc
and
test
xchg
inc
mov
addr16
add
jle
aad
nop
push
cli
outsb
pop
pop
sub
add
or
mov
mov
insb
aam
test
cltd
scas
mov
insl
fcompl
or
sbb
stc
mov
xchg
xchg
xchg
mov
dec
addr16
fsubr
pop
ret
ret
adc
xchg
mov
fwait
ret
cld
out
loope
or
test
jecxz
sub
repnz
dec
and
repnz
jnp
imul
jnp
dec
nop
shll
mov
in
rclb
fwait
or
xchg
mov
mov
adc
mov
push
xchg
push
repz
cmpsb
and
stos
xchg
clc
add
addl
pop
inc
sub
rcrl
and
cli
enter
xlat
popa
xchg
push
sub
popa
lds
sbb
repnz
aaa
jecxz
xor
cmpsb
bound
or
mov
fcompl
mov
shrl
pop
cmp
sbb
mov
or
adc
lods
lods
mov
pop
stos
js
sarb
adc
test
sbb
icebp
pop
mov
jno
and
adc
add
out
seta
pop
and
xchg
jae
fsin
ret
sub
in
xchg
xchg
inc
mov
subb
mov
cwtl
mov
rorl
insl
mov
call
cli
adc
movsb
adc
cltd
mov
mov
xorl
xchg
push
cmpsl
dec
out
xchg
imul
jno
jg
cmc
push
sub
roll
mov
pop
or
dec
pop
adc
mov
mov
jg
les
mov
movsb
stc
repz
lret
pop
loope
cmpsl
nop
inc
cwtl
dec
cmp
cwtl
test
sub
mov
xchg
test
xchg
mov
adcb
xor
or
push
movsb
in
mov
or
xor
out
mov
out
data16
nop
enter
xchg
mov
mov
push
fisubrl
mov
les
hlt
dec
fbld
push
xchg
aam
or
cmpsb
pushf
daa
das
sbb
cmp
fnstsw
cld
shrb
push
inc
jecxz
loope
lgs
jns
loopnew
lret
dec
inc
xchg
jle
cwtl
xchg
ficomps
test
sub
sbb
jne
inc
push
lds
daa
lahf
clc
pop
test
inc
adc
cmpsl
xchg
shrb
sub
cmp
xchg
lds
ficompl
pop
fidivrs
test
dec
sbb
mov
push
out
pop
xor
and
fwait
mov
bound
andl
xor
pop
mov
insl
shll
lret
pop
repnz
push
sbb
push
mov
imul
sub
bnd
loopne
repnz
sub
sarl
orb
jl
fstpt
popa
cmp
or
and
cld
pop
cmpsb
int
inc
xor
push
xchg
in
pusha
aam
cwtl
xchg
and
push
xchg
inc
jge
and
aam
je
add
or
dec
push
add
hlt
aad
sub
xor
lret
dec
add
sub
inc
in
mov
outsl
outsb
insb
mov
scas
lcall
xchg
push
xor
sbb
test
jmp
cli
pop
sub
or
and
push
mov
icebp
cmpsb
stos
jno
shlb
icebp
mov
push
xchg
mov
pusha
and
cmp
fbstp
sbb
movnti
cmp
adc
aas
ss
inc
mov
les
jge
popf
aas
arpl
lret
fwait
das
jge
clc
push
dec
push
xor
cwtl
lods
or
cmpl
out
ljmpw
mov
shrb
xor
rorb
lods
stc
add
lahf
mov
aam
mov
add
cmp
or
mov
push
sub
gs
pop
jno
jge
addr16
test
out
fimuls
pop
add
push
pusha
cmp
lea
sbb
mov
add
xchg
insb
into
bound
test
fistps
mov
sahf
call
stos
xchg
das
adc
sbb
test
repnz
outsl
sub
cmp
sbb
push
dec
push
dec
pop
push
jg
lods
adc
mov
push
cwtl
xor
dec
out
add
pusha
pop
sub
mov
popl
sahf
js
cwtl
in
bnd
adc
pop
repz
push
iret
stos
mov
jo
push
test
dec
mov
sti
addb
jne
test
mov
dec
cmp
add
push
xchg
push
daa
repz
xchg
addb
into
js
sbb
cwtl
jnp
adc
mov
jl
inc
sahf
push
ds
inc
das
enter
mov
aam
jg
push
mov
les
dec
stos
mov
mov
push
dec
fwait
sbb
cmp
jl
les
mov
stos
sub
sub
and
jns
mov
loop
sar
sub
popa
dec
loop
cmp
fcmovb
pop
jae
dec
dec
popa
cmp
add
mov
and
fisubl
pop
fs
cmpsl
pop
outsb
pop
xor
jge
aaa
sahf
mov
pop
out
fs
xor
jl
dec
out
and
xchg
stos
xchg
push
push
mov
dec
leave
jp
sti
push
dec
std
stos
leave
test
pop
pop
stos
jne
mov
int
push
and
sbb
inc
push
mov
inc
je
or
lods
cwtl
jne
shlb
sbb
mov
pop
adc
jnp
pushf
mov
ret
lea
xor
inc
mull
xchg
ret
ret
ljmp
xchg
repz
or
jmp
stc
mov
movb
fwait
push
jbe
xchg
cmpsl
out
pop
xchg
pop
and
adc
add
lods
sub
pop
jmp
jle
stc
mov
push
js
and
inc
jle
jp
jo
cmpsl
inc
pop
sbb
ds
arpl
sbb
cs
add
sbb
xchg
insl
adc
or
pop
pusha
mov
dec
ds
jne
push
sbb
and
xor
cmp
push
sbb
mov
push
subl
js
mov
push
imul
mov
push
push
xor
orb
sub
or
pop
gs
imul
or
cli
sbbl
cmp
pop
mov
jmp
push
jmp
outsb
push
adc
sbb
and
sbb
xchg
xchg
and
out
inc
aad
cld
cwtl
xor
in
push
mov
push
call
cmc
jne
stos
popa
fistps
xchg
or
and
pop
mov
or
jl
sbb
lock
addb
cltd
push
jl
dec
sub
sbb
mov
pop
scas
mov
incb
lret
inc
adcl
sbb
lret
nop
mov
pop
out
ds
lods
pushf
insl
xchg
mov
scas
test
inc
addb
in
or
xchg
sub
mov
sarl
sub
lcall
fidivrs
aas
sub
xlat
cmp
pop
in
mull
cltd
out
lret
sub
test
fildll
fcom
pop
sub
das
enter
aad
jle
loop
mov
jns
pop
cld
pop
ljmp
hlt
das
fnsave
mov
jb
lds
sub
loope
mov
lds
cmp
push
and
jae
mov
cmp
lock
movsl
cld
stos
arpl
rorl
sub
pop
sub
enter
push
jbe
mov
insl
sub
rclb
in
shl
shlb
push
pop
out
sub
push
or
imul
repnz
mov
ret
fisttpl
sbbb
fstpl
xchg
pop
fwait
inc
fidivrs
mov
repnz
mov
shrl
notb
lds
pop
mov
insb
sti
cltd
and
jmp
cltd
jns
mov
jne
sub
xchg
std
jg
push
addr16
ss
jne
hlt
fidivrl
ja
mov
jmp
push
sub
aas
lcall
jp
dec
iret
cmpsb
test
xchg
sub
mov
xchg
push
push
arpl
xchg
sub
ret
dec
imul
and
pushf
clc
and
ja
add
mov
mov
scas
jne
ror
popf
dec
pushl
outsb
xchg
test
inc
jno
sbb
sbb
not
movsl
mov
movsl
shll
push
iret
ficomps
mov
inc
pop
das
adc
pop
scas
xlat
push
insl
cmp
outsb
sbb
pop
fstp
add
xor
xor
fidivl
ss
repnz
xchg
jne
int3
lds
and
inc
popf
outsl
stc
push
push
push
add
jae
or
es
pop
sub
sub
mov
xor
shrl
xchg
sub
pop
sbb
divl
scas
xor
std
xchg
jecxz
add
in
fidivs
mov
xor
es
sub
dec
cmp
mov
jle
xor
inc
lods
aad
mov
adc
mov
sbb
jecxz
hlt
sahf
add
mov
dec
xor
push
cmp
mov
pushw
sbb
stc
add
mov
mov
pop
inc
sub
arpl
dec
and
sub
cmp
ss
shr
cltd
ror
lods
push
repnz
shl
imul
and
hlt
lea
jmp
push
cmpsl
lahf
mov
lock
and
pop
mov
jne
notl
and
scas
loope
push
cmpsl
and
and
mov
sub
pop
or
pop
movsl
or
clc
pushl
cltd
lock
rorl
movsl
cmp
sub
cmp
sub
sub
lcall
xchg
xchg
das
lret
fimull
icebp
loope
scas
sti
push
sbb
dec
xchg
mov
sbb
adc
sarb
cmc
adc
fldcw
dec
out
loopne
xchg
jo
mov
and
test
lds
arpl
repnz
aaa
and
lahf
insb
or
sub
repz
xchg
add
imul
inc
push
sub
cli
test
mov
cmpsl
sub
aas
fsts
dec
inc
mov
push
test
xchg
orb
jg
or
mov
repz
stos
cmpsb
and
cmp
dec
jb
ficoms
sbb
lea
mov
mov
mov
and
push
inc
stos
sarb
mov
mov
cmp
adc
sbb
stc
nop
leave
cwtl
push
into
push
fcompl
in
and
hlt
cmp
clc
movsl
dec
push
inc
cli
loope
ljmp
or
mov
pushf
mov
push
push
jns
in
jge
in
and
mov
add
subl
xor
sbb
pop
push
jb
ds
pop
shr
aad
inc
icebp
ret
push
mov
in
push
push
and
adc
mov
add
lods
and
mov
bound
outsl
mov
ja
in
mov
insb
insb
sarl
mov
enter
and
mov
sar
push
push
mov
jns
cmp
ret
add
mov
pop
xor
mov
pop
push
push
hlt
andb
mov
or
or
lods
arpl
add
fstps
pop
pop
repnz
mov
test
loop
lcall
pop
into
fdivr
and
orb
dec
mov
sub
popf
insl
cmp
xchg
jp
xor
mov
mov
and
cmc
inc
mov
pop
dec
inc
clc
out
insb
imul
xor
enter
adc
lock
iret
ds
pop
pop
pop
stos
leave
test
jnp
sub
push
pop
sahf
int
dec
sub
cmp
std
mov
inc
jmp
test
mov
test
mov
jb
test
dec
test
cmc
lods
divl
add
mov
xchg
in
js
xchg
sub
cltd
add
scas
xlat
xor
sti
jns
pop
test
xor
jecxz
add
in
add
dec
cmpsl
test
cmc
pop
xchg
xchg
jmp
or
cmpb
jmp
lret
lret
xlat
dec
pop
ror
imul
sbb
shll
icebp
jnp
stos
jns
push
push
cmp
jmp
sbb
mov
push
orl
fisubl
add
xor
mov
out
and
daa
inc
mov
mov
pusha
aad
mov
xchg
aas
scas
sahf
shl
pop
mov
sbbb
push
add
mov
jecxz
lahf
addr16
inc
rcr
shll
jb
ss
dec
sub
mov
add
insb
mov
hlt
mov
jae
adc
mov
jnp
push
pop
dec
xlat
dec
cs
inc
lcall
roll
setno
pop
push
mov
or
iret
push
and
and
inc
dec
cmp
in
test
inc
xchg
cmp
cmp
xor
movsb
and
pop
inc
shlb
subl
sub
xchg
pop
sbb
mov
loop
fisubl
pop
dec
insb
jg
hlt
push
mov
fwait
dec
rcl
lret
test
xchg
push
movsb
hlt
mov
dec
jl
sub
xchg
jl
cmp
mov
adc
mov
testl
push
add
cmp
sbb
loope
repz
xor
lods
xor
lret
jo
int3
xchg
clc
cmpl
push
push
sti
jnp
je
popa
mov
xlat
pop
enterw
mov
xor
xor
or
cmpb
hlt
das
sbb
xchg
ja
mov
decb
rcrl
sub
or
and
cwtl
aad
sub
cmp
mov
xor
sub
negb
stos
icebp
fs
aad
and
dec
mov
dec
xchg
mov
addr16
test
out
add
sbb
stos
jmp
es
in
lcall
test
cmp
mov
xchg
std
add
dec
mov
stc
icebp
std
cltd
ljmp
xor
mov
loop
loopne
add
or
cmp
jge
xor
add
add
push
lret
test
push
fadds
xor
mov
lea
add
shrl
rolb
sbb
js
ss
enter
aaa
loope
stos
fimull
icebp
out
outsb
push
imul
adc
cmp
push
jo
std
lea
or
and
adc
xchg
ds
push
cmp
call
into
fucom
lods
pop
push
mov
js
jecxz
jbe
lahf
pop
lahf
pop
jae
cli
add
inc
je
jne
fwait
mov
addl
xor
iret
call
xchg
inc
fistl
dec
nop
jl
out
enter
movsb
add
adc
jge
jge
adc
push
vmovq
iret
int3
mov
xchg
in
lods
scas
xchg
sahf
sub
aaa
pop
sbb
divl
lcall
addb
sub
jl
fstpt
das
mov
fidivs
and
push
push
xchg
into
cmp
idivb
movsb
movsl
xchg
pop
mov
es
sbb
clc
pop
movsl
mov
add
in
mov
pop
lock
adc
jecxz
jnp
or
dec
push
push
jb
aad
add
outsl
push
lret
adc
pusha
sbb
pusha
adc
sbb
add
cmp
loop
rcrl
sbb
pop
imul
in
dec
inc
loop
add
addr16
add
insb
add
xchg
and
pop
and
push
test
jle
sbb
fmuls
jns
push
mov
mov
out
adc
jae
pusha
xor
mov
cltd
in
add
xchg
cmp
pop
rolb
inc
ljmp
or
sub
mov
and
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
repz
lahf
sub
jnp
sahf
jnp
and
push
push
fs
xor
push
into
pop
leave
xchg
cwtl
jb
push
pusha
sete
aaa
aam
lret
mov
leave
je
pop
paddsw
adc
sti
aad
lods
stos
inc
xchg
xchg
add
stos
popa
add
ficoml
or
mov
mov
hlt
mov
lret
jle
shll
addr16
inc
out
lahf
into
mov
mov
test
xchg
stos
inc
adc
cmpsl
sub
sbb
in
push
mov
pushf
dec
pop
movsl
jae
add
insb
adc
in
test
dec
xor
inc
adc
inc
pop
aam
dec
loopne
rorb
pop
push
cmp
push
adc
inc
div
dec
sbb
rolb
rclb
scas
in
push
xlat
divb
sarb
cmp
mov
lret
xchg
xor
lcall
out
fisttpl
jge
pmulhuw
lock
push
sub
in
inc
or
movsb
je
stc
xor
scas
subb
leave
inc
push
repz
dec
add
enter
jae
or
adcl
add
cmp
in
scas
inc
add
or
cmp
mov
push
lcall
shll
and
mov
xchg
or
int3
adc
jb
cmp
xchg
adc
dec
sub
loope,pt
clc
mov
fwait
stos
rol
lods
push
fmull
icebp
inc
xchg
jne
dec
loop
pop
dec
shlb
ret
movb
les
aaa
add
push
xor
test
jbe
jbe
or
or
or
lcall
sbb
out
add
or
inc
repnz
mov
movsb
mov
mov
mov
cmp
adcl
ljmp
in
mov
xchg
in
nop
std
mov
lods
aam
jmp
outsl
mov
pop
xchg
insl
sub
imul
pop
mov
mov
push
stos
push
fsts
cmp
cmpsl
popa
das
in
jae
callw
push
dec
shl
fdivs
divb
out
in
jno
jp
mov
xor
or
scas
and
addb
jecxz
sub
adc
ds
je
xchg
mov
push
push
cmpl
sbb
scas
jae
outsl
mov
out
pop
fdivrl
cmp
adc
mov
pop
ret
mov
inc
cmp
mov
fwait
in
ja
jno
test
sbb
or
pop
lcall
sti
mov
dec
lods
mov
cmpsb
insl
lcall
leave
and
cmp
popf
sahf
mov
loopne
or
sti
mov
addr16
aad
movsb
adc
add
pop
leave
movsb
inc
aas
xchg
outsl
cwtl
jg
jo
xchg
repnz
leave
inc
xchg
aas
mov
add
or
shl
out
sbb
push
jle
xor
push
sub
jg
aaa
jns
in
jbe
jns
adc
mov
and
pop
lret
test
push
sub
push
dec
shlb
mov
jnp
add
inc
lret
cmpsb
arpl
mov
enter
sub
xor
cmp
sub
iret
data16
jns
and
sbb
loope
mov
push
push
fiadds
cmp
in
lret
push
repnz
push
stos
dec
lcall
adc
pop
out
lea
enter
mov
test
cmpsl
cmp
lods
pop
sub
push
xorb
lds
push
lret
cmp
andb
mov
cli
mov
and
inc
cmpl
fistpll
sahf
ja
ret
ljmp
jo
dec
mov
dec
and
xchg
jae
shl
cmc
and
gs
hlt
cmp
aas
dec
mov
clc
cmpsb
mov
pop
cld
xor
mov
fiadds
push
js
pushaw
hlt
cmp
ja
popa
punpcklbw
mov
ds
push
lcall
flds
push
mov
or
add
cmp
pop
or
mov
mov
adc
xchg
loopne
test
lret
sub
push
xlat
jecxz
inc
mov
and
cmp
sti
mov
jne
cmp
inc
mov
mov
test
negb
movsb
incl
mov
mov
in
sub
shl
xchg
dec
lret
cmp
jno,pt
imul
push
xchg
mov
inc
jns
int3
popf
cmpsl
pop
stc
in
pushf
xchg
mov
mov
pusha
jmp
daa
or
rcrl
lret
pushf
sbb
inc
pop
aam
jg
push
sahf
mov
pop
push
add
and
mov
cld
jns
mov
pop
mov
sub
lds
mov
add
mov
pop
inc
enter
imul
xlat
mov
lods
and
jae
fwait
ja
in
loop
int
dec
xor
mov
add
mov
push
les
mov
xor
stos
cmp
shlb
clc
lods
mov
or
pop
push
jmp
stos
xchg
andb
and
outsb
decb
push
mov
fldlg2
push
jg
sub
je
lahf
negb
xchg
pop
xor
jno
and
fsub
or
aaa
xchg
bound
fs
xor
cmp
jb
rorb
mov
imul
stos
push
ret
aas
mull
stos
int3
shl
ret
shlb
mov
or
in
xchg
push
mov
test
sahf
test
in
xchg
mov
push
sar
les
scas
leave
into
pop
push
mov
push
push
add
xor
ss
test
mov
cmp
mov
scas
out
jae
ja
add
icebp
popl
lods
xor
jno
push
movl
scas
daa
enter
in
out
or
cmpsl
mov
sti
pop
or
je
pop
lock
push
mov
and
lock
jne
cli
mov
cmc
adc
jg
insb
mov
popf
xchg
les
xchg
rol
in
mov
fisubrl
xchg
xchg
jle
int
dec
xchg
pop
sub
mov
loope
xor
mov
mov
xchg
clc
dec
pop
pop
das
incb
adc
js
lret
cmp
sub
rolb
cmp
add
jg
xchg
jno
mov
sbb
clc
dec
loopne
or
push
mov
push
mov
jnp
loope
sbb
and
sub
cmpsb
gs
and
pop
imul
leave
cwtl
into
xchg
bound
aam
repz
fwait
movsl
je
cmpsl
mov
movsb
jp
sti
rcll
xchg
mov
sbb
inc
mov
inc
jno
push
or
aad
dec
sbb
xchg
cmp
cmc
jb
mov
btc
pop
movd
fdivp
adc
sbb
or
das
out
xlat
or
filds
sub
dec
pop
das
ds
inc
lock
cmc
fstps
iret
test
dec
adc
daa
fsubl
add
push
lods
pop
cld
call
addr16
movsl
dec
mov
mov
or
test
inc
shlb
and
sbb
mov
mov
sub
push
pop
loopne
and
jge
push
pusha
mov
outsl
lock
xor
in
jbe
repnz
pusha
inc
cli
sub
push
lock
jnp
jnp
inc
xchg
mov
add
add
shrl
in
jg
lods
xor
popf
pop
outsl
cmpsl
aam
mov
sbb
jl
shlb
cmp
shll
push
lds
ficoms
gs
dec
outsl
sbb
outsl
push
dec
inc
divl
xlat
push
jge
pop
loopne
int
add
inc
mov
insl
scas
movsl
xor
sarl
mov
shl
push
test
repz
sub
jbe
fwait
mov
outsl
jnp
out
xor
mov
mov
push
test
push
lods
jg
ja
mov
pop
xchg
ficomps
sbb
pop
add
sti
pop
imul
sbb
movsl
xchg
push
pop
jno
into
push
outsl
cmp
scas
jnp
shll
xor
mov
pop
fmull
shlb
pop
fisubl
mov
loop
mov
mov
sysret
lods
or
dec
test
sbb
jns
xchg
or
shr
and
andps
std
mov
push
mov
pop
mov
xchg
adc
pushf
daa
insb
aam
jecxz
mov
jnp
pop
sub
sbb
jl
rolb
pushl
adc
in
fdivrl
cmp
shrl
and
xchg
xor
push
leave
cs
sbb
push
adc
hlt
aaa
orl
push
sub
mov
out
iret
pop
ljmp
adc
adc
fidivrl
popa
sbb
lds
xchg
pop
cmpsl
push
push
out
jg,pn
bnd
sbb
jecxz
divb
sub
cld
lret
add
jns
pop
push
sub
sbb
lret
fimuls
xchg
inc
out
pop
inc
andl
out
fcomp
inc
or
jo
adc
stos
out
mov
mov
fisubrs
sub
dec
inc
xor
pop
push
into
aam
sub
adc
xchg
dec
cwtl
into
jno
lret
push
enter
xor
xrelease
inc
inc
out
xchg
and
xorl
daa
jnp
cmp
xchg
cmp
scas
jecxz
xchg
int
cli
jns
pushf
push
aam
mov
aaa
pop
sub
setb
lret
pop
mov
ret
dec
test
scas
xchg
jne
mov
movsl
out
xlat
lcall
cli
mov
jns
subl
movsb
ljmp
cmpsb
mov
add
lock
push
ret
ljmp
in
test
and
paddusw
add
xchg
addr16
pushf
fwait
out
hlt
mov
pop
dec
pop
pop
jae
popa
je
aad
mov
lcall
pop
adc
xchg
into
mov
xor
fsubs
mov
push
add
mov
repz
cmp
mov
pop
std
adc
pop
mov
inc
or
sbb
mov
testl
imul
cltd
fldt
mov
inc
and
lcall
jns
sub
shll
sub
pop
in
xchg
mov
pop
push
add
pop
test
lcall
push
std
inc
addb
mov
adc
scas
out
mov
aad
mov
test
ss
cmc
mov
or
enter
mov
and
lock
pop
lret
inc
cmpsl
clc
inc
repnz
mov
stos
pop
mov
push
xor
mov
push
push
jne
iret
incl
adcb
stos
dec
xchg
xchg
mov
cmp
insb
loope
pop
stc
pop
cmp
adc
movsb
in
push
push
cli
in
loope
sbb
pop
xor
or
push
mov
pop
leave
das
sarl
adc
or
inc
mov
std
fcoms
mov
inc
jecxz
sbb
xchg
std
in
imul
jb
or
movsl
jl
mov
incb
in
lret
in
mov
inc
lock
jno
shll
mov
clc
and
cmc
jnp
outsb
orb
test
jo
andb
cmp
cmp
test
scas
int
sar
shll
out
xor
and
inc
mov
out
pop
xlat
mov
xchg
cmpsb
push
dec
jnp
or
fimull
xchg
add
aaa
pop
mov
in
jmp
dec
or
cmp
ds
pop
repz
sub
or
sub
mov
loopne
xor
sahf
xchg
imul
hlt
mov
inc
ljmp
jno
les
les
pop
andl
neg
cmp
insb
shrl
test
adc
rcl
imul
inc
jl
negl
jmp
pop
inc
pop
jmp
jle
stos
jne
mov
pop
aad
sahf
jge
frstor
lea
xchg
sub
gs
mov
xchg
stc
fistpll
adc
xorl
and
mov
stc
popf
mov
mul
stc
pushf
lds
stos
jle
dec
cmp
dec
fstpt
pop
jmp
gs
inc
jbe
mov
push
cmp
ljmp
mov
pop
pusha
xchg
das
or
adc
mov
clc
les
aad
dec
or
scas
jbe
or
loop
pop
ret
mov
shrl
hlt
jp
enter
dec
inc
cmp
mov
jae
xchg
arpl
aam
call
inc
xor
lock
cli
cmc
ljmp
outsl
xchg
inc
nop
sub
and
xchg
insb
pop
xor
inc
shlb
jl
xchg
dec
jb
in
cmp
repz
sbb
loop
cmpb
pop
inc
push
fwait
mov
arpl
ss
mov
sti
lret
adc
dec
ror
sub
mov
rcr
stos
fwait
arpl
or
pop
sbb
es
in
fs
or
xor
ffree
mov
inc
stc
push
arpl
scas
aad
inc
jno
mov
in
mov
test
ret
xchg
pop
mov
das
daa
lea
push
xchg
or
adc
incl
shll
fwait
jmp
jg
push
dec
jno
mov
lahf
pop
sbb
cltd
jno
push
push
xor
mov
dec
shrb
nop
inc
out
xor
imul
jo
aas
and
add
nop
mov
fs
lods
lret
imul
outsl
push
gs
in
mov
add
stos
outsl
cld
shlb
mov
mov
daa
jmp
pusha
vorps
fsubrl
stos
shrb
ret
mov
pusha
shrl
mov
pop
pop
cvttps2pi
cmp
push
jmp
inc
push
je
or
sub
nop
nop
jns
mov
insl
mov
mov
jns
fsubrl
fsubrs
mov
loop
xchg
cmp
mov
fbld
xchg
sbb
negb
xchg
lods
push
pop
push
or
stos
or
insb
or
mov
cmc
jg
sub
fsubl
test
mov
or
sbb
addr16
dec
add
sbb
das
sbbl
cli
xchg
adc
int3
mov
imul
pop
mov
adc
jb
jg
push
xchg
mov
xchg
jae
dec
mov
int3
aaa
adc
jl
aaa
mov
ret
cli
imul
test
sbb
daa
sub
adc
xchg
cmp
lods
cmp
je
or
xchg
ffreep
push
and
xor
jno
sbb
movsb
dec
push
xor
push
sahf
stc
dec
shlb
inc
cmp
shll
ret
mov
stos
xor
xchg
hlt
lods
push
dec
xchg
inc
movsl
sbb
dec
inc
cli
mov
mulb
or
adc
jb
mov
sar
insb
inc
nop
xor
adc
cltd
arpl
pop
test
std
and
arpl
aad
aad
xchg
mov
rorb
data16
popa
pop
jno
ljmp
mov
movsl
jno
jo
ret
cli
sub
pop
aas
sbb
rolb
dec
or
test
fisubrs
or
movsb
mov
cmpsl
out
popaw
pop
mov
jne
ja
fstps
push
in
dec
scas
shll
mov
ja
and
ffreep
cmp
mov
jnp
adc
xlat
je
pop
lods
scas
aas
repz
mov
fstps
adc
out
out
xchg
push
fdivrp
orl
mov
inc
loop
fldenv
jle
mov
push
adc
xchg
leave
insl
push
inc
test
add
aaa
scas
and
xor
adc
call
add
adc
xorb
addb
and
movsl
jecxz
dec
fwait
mov
sti
fidivs
rcl
jae
shlb
xor
lds
sub
and
and
int3
dec
scas
and
sbb
push
jp
rclb
xchg
or
cmc
cmc
pop
lcall
std
lret
int
sbb
outsb
fdivrs
adc
and
cmpsb
ret
mov
lret
dec
out
test
rorl
adc
xchg
mov
xor
cwtl
roll
mov
jno
jl
rclb
fsubl
pop
fwait
adc
sub
mov
push
cmp
int
ja
inc
fdivrl
push
or
inc
inc
cmp
sub
dec
push
jns
mov
stc
orl
dec
ret
xor
es
push
xor
push
shlb
je
dec
pop
add
cmpb
pusha
daa
push
test
sbb
enter
jp
mov
or
pop
jns
pushf
pusha
cmp
adc
mov
jns
and
sbb
jbe
xlat
push
mov
inc
add
divb
push
js
and
push
sbb
inc
mov
dec
sub
cmpsl
fs
xchg
gs
insb
ds
xchg
inc
mov
sub
sub
sub
or
stos
mov
xor
divl
std
or
lds
aas
mov
scas
pop
imul
xor
addr16
sbb
lret
arpl
jbe
inc
adc
sbb
int
mov
pop
leave
mov
push
icebp
stos
mov
call
mov
lea
push
mov
dec
rol
add
or
or
dec
or
cmp
das
iret
dec
test
rol
and
inc
mov
adc
adc
mov
add
sub
push
dec
call
fwait
add
dec
nop
inc
aaa
and
mov
sahf
into
mov
sub
push
mov
cli
addr16
cmp
popf
insb
sbb
loope
push
aaa
jnp
dec
mov
sbb
jge
and
arpl
pop
ljmp
pop
mov
dec
xorl
push
in
pop
int
sub
popf
or
les
jmp
ret
pop
loop
in
stos
add
inc
xchg
jnp
mov
loope
dec
cmpsb
dec
movsb
inc
push
jb
sub
push
out
add
outsl
das
lods
movd
idiv
test
ret
js
jl
sub
data16
cmp
inc
add
sahf
out
out
sub
outsb
pop
jp
movsl
lock
cmp
loop
negl
pop
lea
push
stos
or
push
pop
jne
sahf
sbb
lahf
push
inc
test
enter
xor
inc
mov
jmp
cmp
inc
mov
cltd
inc
popf
paddq
ja
rcrb
mull
fwait
or
cmp
enter
js
dec
mov
sbb
scas
adc
dec
ret
lahf
mov
aam
lret
daa
push
or
xchg
xchg
pop
push
pop
sar
rcr
adc
mov
call
inc
inc
mov
mov
scas
lods
pop
es
sub
or
jae
outsl
inc
adc
ss
int
add
ljmp
fistpll
hlt
pop
pushf
gs
jge
outsl
push
jb
mov
ror
push
pop
fs
es
xchg
fstpt
int3
outsb
mov
xchg
mov
cmpsl
xchg
mov
bound
or
outsl
fs
out
cmp
lahf
mov
push
scas
cld
repnz
movsw
mov
cmpsb
inc
cmpsl
jg
and
fisttps
test
sti
mov
pop
pop
dec
lret
pop
push
adc
pop
loope
int
fimull
cmc
xor
pop
sbb
jl
cmpsb
cmp
jnp
inc
in
jg
adcl
mov
lods
push
mov
xchg
or
xchg
mov
cmp
mov
add
addr16
ljmp
outsl
jne
mov
fwait
dec
ja
shll
sub
mov
jecxz
add
sub
test
push
hlt
out
cltd
subl
and
jno
mov
cltd
call
mov
mov
mov
mov
testl
ja
cmp
mov
out
and
cmpsl
out
mov
mov
sbbb
push
cmpsb
js
adc
pop
ss
xlat
pop
cs
and
or
sub
lahf
imul
into
insw
cmc
inc
enter
loopne
ror
jae
sub
scas
jno
add
adc
adc
insl
nop
pop
pusha
std
add
test
loope
xlat
xchg
or
mov
pop
nop
into
aas
mov
sahf
daa
in
loopne
inc
sbb
les
cmp
xor
and
pop
sbb
sti
xor
rol
jo
subb
aam
out
jbe
jp
sbbl
test
mov
mov
mov
pop
outsb
nop
push
jmp
jecxz
cli
movsb
adc
mov
fsts
add
adc
push
and
lcall
rorl
adc
aad
mov
ds
xor
test
das
loopne
sarl
and
cs
outsb
scas
fdivl
mov
fdivs
dec
hlt
push
xchg
xor
inc
push
ret
js
inc
mov
ljmp
xchg
push
scas
xlat
stos
inc
or
loopne
stos
imul
xchg
fstpl
cltd
movsl
or
push
xor
mov
pop
popa
add
test
cmpb
xchg
cltd
mov
push
ja
xor
jbe
call
push
xchg
add
add
mov
and
fwait
ret
enter
xchg
mov
cmp
mov
mov
dec
mov
insb
pop
sub
or
push
fcoms
mov
pop
mov
sub
pushf
pop
fists
jle
mov
adc
adc
ja
jp
andb
mov
mov
aas
cmc
or
mov
aad
cmp
xchg
fsubrl
mov
bound
js
into
nop
cmp
inc
insl
cltd
sub
xor
push
add
jp
mov
lock
jl
das
fcmovb
out
fsubrs
test
cwtl
leave
test
ljmp
inc
push
movsl
mov
xlat
imul
ja
adc
cmpsl
test
sar
hlt
sbb
aad
movl
dec
nop
callw
daa
aad
sub
and
test
in
push
lods
ds
mov
leave
in
and
pushf
ret
data16
cmp
and
or
jae
sti
push
pop
inc
test
jge
cli
das
mov
shlb
fisttpl
arpl
inc
aaa
xchg
aaa
add
clc
std
push
jge
inc
je
lods
add
in
clc
ret
out
mov
cmp
jnp
adc
bound
rolb
shr
mov
and
dec
sbb
sbb
aaa
add
jne
mov
adcb
nop
cwtl
aas
fldt
xchg
dec
bswap
add
inc
and
clc
adc
xchg
mov
popa
mov
loope
mov
jns
jl
inc
aaa
andl
cmc
cmp
adc
notl
mov
inc
rclb
push
add
adc
push
ja
ja
clc
or
out
pop
test
add
repz
add
xor
push
jbe
outsb
scas
push
sbb
cmpsl
loop
add
repnz
inc
inc
jg
xor
mov
sbb
popf
and
lea
cwtl
stc
xchg
jl
nop
cwtl
sti
dec
lea
add
imul
clc
pusha
cmp
in
mov
movsb
std
or
adc
cwtl
mov
sbbl
jmp
shlb
pop
pop
sub
stc
popa
push
xor
jo
movsl
xor
push
inc
sub
scas
jnp
jb
mov
out
sbb
ret
push
sub
dec
cmp
xchg
cmpsl
or
mov
leave
mov
rcll
divb
jns
out
js
and
push
and
fstpt
or
stos
idiv
jne
inc
fxch
out
or
fidivs
stos
or
shll
dec
jo
movb
das
pop
repz
pop
xlat
gs
out
mov
mov
leave
aas
jg
xchg
leave
add
and
pop
sbb
add
and
lcall
nop
dec
jmp
or
ljmp
push
loope
fistpl
in
cmpl
sbb
fsubp
movsb
add
pop
mov
popa
scas
jge
lcall
icebp
sahf
addr16
cmp
arpl
push
call
dec
xchg
sar
movsb
xchg
xor
mov
mov
and
lret
inc
int3
jbe
aaa
faddl
leave
fisttpll
mov
lods
jns
dec
hlt
lret
xchg
sbb
add
jnp
sbb
xchg
out
ret
outsl
jle
fldl
fnstenv
xor
sub
cltd
xchg
pop
jmp
mov
push
xchg
mov
or
mov
cmp
dec
or
sub
roll
pusha
stc
cmpb
pop
jnp
sub
aaa
sahf
adc
cld
push
jmp
mulb
sub
fs
cmpsl
fdivrl
rorl
xor
add
or
lock
pop
dec
je
sahf
dec
loope
lods
xor
dec
dec
aaa
and
jmp
add
repz
iret
fldcw
mov
cmpsl
vsubss
rcrb
inc
ss
mov
movsb
scas
adc
add
enter
push
jnp
add
inc
clc
popf
arpl
shll
inc
xor
ss
movsb
pcmpgtw
shll
ja
or
cmp
popf
ret
mov
ficomps
imul
mov
add
cmp
rorb
movsb
inc
jbe
push
pushf
out
and
pop
rcrl
push
movsl
xchg
rclb
xlat
hlt
rcr
push
jne
inc
push
daa
iret
mov
sbb
mov
inc
cmp
add
popf
and
cs
adc
test
es
inc
jnp
mov
mov
out
fistpll
fs
loope
imul
mov
popa
sub
mov
fcmovb
call
jno
nop
or
jae
xchg
lahf
lea
rcrl
enter
cmp
push
daa
lock
aam
xchg
pop
sbb
push
mov
outsb
in
cs
and
ja
or
repnz
or
xchg
leave
in
pop
lds
sbb
clc
push
flds
ret
mov
mov
rcrb
sahf
ja
sub
mov
enter
mov
xchg
in
push
lock
mov
in
out
into
jno
xor
cmp
and
arpl
mov
sub
and
aaa
dec
xchg
add
mov
jnp
rcrb
inc
dec
pop
movsb
aas
dec
outsl
faddl
fucom
cmp
pop
cmp
sti
cmpsl
addr16
lds
aam
rol
adc
aaa
cmp
mov
addr16
shl
repz
call
shrb
xor
inc
cmp
pushf
jg
jb
jae
pop
xor
outsb
mov
push
repnz
sbb
ret
mov
add
xchg
hlt
sub
ret
cld
nop
or
leave
out
mov
les
bound
les
bound
daa
mov
cmovns
sub
sbb
xchg
cmp
pushf
call
ljmp
jge
or
mov
fisubrl
popa
es
cmp
jno
test
xor
inc
and
xchg
add
dec
push
sbb
xchg
mov
cwtl
jbe
xchg
xchg
mov
jb
fwait
xor
lods
jae
movsl
fldlg2
xchg
dec
mov
addr16
sbb
daa
ret
inc
sbb
mov
rorb
fdivrl
shrl
cmp
arpl
or
xchg
enter
pushf
aas
jp
jnp
cmp
imul
shlb
mov
xchg
je
jns
sti
hlt
sub
xchg
lcall
or
js
faddp
subb
int3
insl
inc
cmpsb
sub
mov
pop
mov
xchg
inc
inc
add
xchg
cltd
push
mov
rolb
mov
mov
sbb
loope
cmp
das
loop
jmp
data16
cld
pop
pop
daa
cld
stos
xor
push
xor
neg
mov
rcrl
repz
adc
or
cmp
sbb
icebp
jge
xor
frstor
push
or
adc
mov
push
xor
dec
xchg
js
das
std
and
jecxz
xchg
in
lahf
das
jle
xorb
push
call
inc
fcoms
push
jmp
sbb
loop
je
imul
test
pop
lods
repnz
mov
into
cmp
ss
mov
sti
mov
and
lock
fidivl
mov
sub
hlt
jbe
xchg
bound
loope
dec
cmp
fwait
daa
pushf
cmp
cmpsb
push
xor
pop
or
pop
out
and
int3
lods
bnd
dec
pop
dec
rcrb
sub
fcmovbe
mov
mov
and
stos
xchg
popf
pop
cmp
icebp
adc
rcrl
sti
adc
xchg
push
popf
out
loopne
and
scas
pop
pop
dec
bound
xchg
gs
je
sbb
cmp
cmp
shll
mov
xchg
imul
xchg
jp
adc
sti
xlat
fdivrs
popl
xor
cmp
and
sbb
lods
lock
mov
into
sahf
mov
sbb
aad
pop
lea
out
mov
and
inc
lock
push
push
ret
into
orl
sbb
pushf
push
test
push
lock
and
pop
xchg
adc
cltd
mov
leave
lods
jbe
stos
subb
mov
add
push
mov
mov
jmp
sahf
fcoms
in
adc
ljmp
push
mov
fstp
lret
mov
insb
inc
cmp
imul
pop
mov
aam
lret
push
or
int
rorl
add
sbb
ss
inc
add
lock
push
xchg
popf
aad
mov
mov
cmp
adc
aas
out
arpl
repz
xlat
cmp
xor
push
pop
rorl
mov
cmp
shlb
sahf
enter
xor
dec
xor
or
mov
leave
cwtl
sub
push
pop
loopne
outsb
cmp
fs
push
ret
or
out
ljmp
negl
imul
xor
out
xor
cli
push
mov
mov
aas
hlt
fcoms
out
mov
fimuls
push
push
dec
inc
cmp
add
lock
aam
test
dec
test
sar
mov
test
cmc
mov
lret
out
outsb
cld
inc
shl
or
jno
popa
dec
xchg
shrl
rcrb
inc
enter
sahf
dec
sbbl
pop
sub
mov
out
mov
out
lret
lcall
int
ret
mov
fbld
int3
pusha
call
fistl
mov
imul
mov
cmp
xor
bound
ret
out
jle
adc
inc
jp
sub
popf
pop
cmp
psubd
addr16
jnp
jb
sbb
xchg
fwait
adc
fistpll
mov
std
lods
xchg
pop
mov
in
inc
push
fcomi
pop
dec
pop
aam
addr16
xchg
dec
xor
mov
std
jl
xlat
movsb
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
inc
pop
lods
or
sahf
jnp
ds
push
jl
jns
lea
xor
mov
int
xchg
leave
xchg
test
adc
xor
push
add
jge
cli
ds
ficomps
shlb
iret
sbb
push
add
and
mov
xlat
ja
dec
sbb
cmp
lods
push
lret
push
shll
lea
push
mov
pusha
aaa
sbb
icebp
sbb
popa
call
cmovno
dec
pushw
mov
xchg
pop
add
rorl
adc
icebp
std
mov
hlt
push
rolb
lods
and
loop
fucomi
mov
sbb
and
adcl
cld
sbb
dec
jmp
mov
lock
clc
lds
jmp
sbb
es
out
outsl
push
out
xchg
dec
cmp
sub
aad
mov
ficoms
vmwrite
and
int
outsl
lods
cmpsl
decl
lret
testl
inc
cmp
pop
pop
pcmpeqb
jb
test
das
js
lds
add
mov
sbb
add
mov
jb
inc
push
movaps
lock
cmpsl
aam
ret
xchg
lods
mov
lcall
pop
mov
dec
mov
lods
cltd
repz
icebp
lret
xchg
jl
out
test
outsb
inc
jg
push
sub
mov
inc
fwait
cwtl
cld
mov
fcom
adc
xchg
fdivs
add
gs
js
jecxz
ret
cli
xor
cmp
notl
jo
pop
stc
cmp
call
pop
idiv
lock
pop
sbb
mov
loope
jl,pn
jecxz
dec
adc
jge
in
jl
fs
ja
mov
and
dec
jl
xchg
mov
sub
jmp
fsubs
mov
ret
sub
push
ja
rcrl
repnz
cs
pop
fisttpll
inc
mov
jl
imul
mov
jae
test
mov
in
and
push
sub
test
pop
scas
lods
mov
out
lret
ds
push
xchg
fdivs
mov
jmp
adc
mov
in
stos
pop
mov
cmp
cli
outsb
in
or
mov
jne
int3
jbe
inc
adc
and
xchg
call
stos
movsl
movsl
pop
jmp
mov
fwait
mov
mov
daa
xchg
sub
mov
dec
mov
aad
mov
cmc
cmp
mov
pop
or
stos
test
pop
ljmp
in
pushf
ss
mov
adc
lahf
neg
cmove
adc
adc
or
xchg
fwait
cmpsl
xor
in
xchg
inc
add
cli
push
out
dec
mov
pop
jge
stc
mov
jmp
xlat
pop
or
cmp
fsub
in
jns
mov
xchg
pop
cltd
jo
movsb
add
push
jb
rcll
aaa
iret
push
inc
stos
stc
xor
movsb
mov
std
lock
push
daa
es
lea
add
loope
nop
shrl
push
jge
sbb
dec
jg
dec
xor
pop
xchg
jbe
ss
popf
outsb
in
inc
loope
inc
mov
mov
push
xor
daa
roll
and
or
les
xor
push
mov
xor
imul
imul
mov
repz
xor
lea
push
jns
xchg
out
lcall
xchg
imul
sub
jp
orl
fwait
jge
push
adcl
cld
mov
xchg
or
xchg
xor
pop
lret
xchg
ss
data16
mov
and
loope
scas
adc
mull
fs
push
mov
fwait
jmp
cli
cmp
aaa
inc
xor
ss
xchg
xor
outsl
pop
leave
or
jns
sbb
pop
test
push
shlb
and
add
push
je
and
xchg
and
out
sbb
cld
adc
push
cmovo
inc
icebp
cmpsb
push
cwtl
outsl
out
sub
nop
add
mov
sub
ret
inc
jae
cwtl
jmp
outsl
jb
test
dec
mov
dec
sti
dec
das
cmp
and
hlt
inc
popf
dec
je
cwtl
dec
fildl
insl
cmpsl
push
xchg
mov
std
pushf
fidivrl
mov
fisubl
test
push
pop
sbb
outsb
dec
mov
xchg
sub
pop
cwtl
jno
inc
pop
cld
call
jae
sbb
imul
push
test
push
mov
cs
movsl
rcl
out
adc
aas
xchg
pop
dec
jne
pop
and
int
aad
jno
cmp
fdivr
pop
xchg
mov
insb
stc
sub
dec
push
dec
jl
mov
test
addr16
lods
clc
leave
ds
mov
jae
iret
cmp
or
aad
add
push
mov
add
jp
jae
cmp
cs
adc
pop
lock
add
and
into
pop
filds
inc
jnp
dec
pop
dec
cmp
lahf
pop
call
ss
inc
sbb
mov
test
sub
adc
out
jno
mov
pop
push
adc
stc
imul
sbb
xor
cmpl
xchg
push
test
add
mov
mov
dec
mov
add
lds
push
inc
adc
out
pusha
outsl
pop
sub
xor
sbb
jmp
cmpsb
ret
jno
dec
inc
aad
mov
add
adc
sbb
lahf
cmpb
lret
xor
std
imul
inc
lea
loope
lea
push
push
mov
pop
push
jecxz
out
xchg
iret
xchg
mov
mov
and
cltd
and
push
jle
leave
fidivl
dec
adc
daa
ja
in
inc
int3
pop
push
xor
push
jae
cs
insl
lods
cmp
or
and
test
mov
jbe
rorb
mov
jg
pop
mov
sub
or
or
lods
pop
rcrb
xchg
aas
leave
bnd
or
pop
insb
fwait
imul
jo
push
push
cmp
pop
and
daa
arpl
mov
jmp
or
je
jecxz
ss
lahf
movsb
xchg
stos
cmp
cwtl
xchg
test
xor
push
xchg
outsl
bound
mov
cld
dec
nop
mov
or
pop
jle
std
xchg
pop
or
mov
out
inc
dec
jno
hlt
xchg
mov
cmp
rcr
aam
jnp
movb
adc
adc
inc
fbld
dec
mov
stos
sbb
sbb
xchg
cmc
mov
cltd
popf
mov
sahf
adc
icebp
jns
addr16
call
aad
add
inc
add
pop
test
lock
fcoml
aam
repnz
xchg
and
lods
sbbl
ljmp
mov
cmpsl
push
push
lea
add
push
lea
or
or
push
pop
push
mov
aas
push
cltd
push
inc
test
pop
add
test
cmp
imul
out
in
out
aaa
cmp
scas
cmp
adc
sub
jno
jno
jno
cmpsb
dec
cmp
mov
in
jmp
push
or
mov
jmp
in
inc
add
in
jp
popf
xchg
enter
adc
mov
lret
inc
std
push
inc
test
add
adc
lods
or
inc
pop
mov
ret
lret
test
push
jg
and
and
push
sub
jnp
es
dec
xor
mov
inc
jl
push
xor
testl
xor
les
js
pop
sahf
imulb
aas
or
pushl
jl
dec
mov
pusha
inc
mov
pop
int
push
divb
push
mov
cmp
mov
dec
int3
int
push
dec
fcmovu
lds
jp
mov
add
ret
insb
sub
inc
xchg
mov
bnd
mov
adc
bound
jno
stc
outsb
jns
js
cmpsl
push
jae
aam
rorb
mov
dec
jmp
repz
mov
pop
or
sbb
inc
lret
push
leave
arpl
jmp
iret
mov
bound
push
jb
mov
inc
push
add
cmp
lcall
aad
mov
ja
jge
lahf
rorl
insl
mov
or
fdivrl
pop
dec
jae
fwait
mov
inc
mov
int
adc
xor
ss
sahf
cmc
lcall
subb
jecxz
jmp
cmp
fwait
cbtw
popf
or
add
and
es
inc
mov
cltd
into
sbb
orb
sbb
jg
xor
cmpsl
jmp
in
lea
jae
sub
add
add
lret
popf
hlt
jle
aad
cmc
xchg
sbb
xchg
fadd
and
addb
add
aas
jmp
xor
xlat
fwait
imul
mov
cmp
mov
jle
loop
sub
adc
je
fsub
xor
lds
mov
dec
mov
test
stos
adc
mov
popl
pop
test
mov
repnz
cmpsb
mov
popf
xchg
test
std
jmp
lret
and
xor
out
push
or
addl
mov
fmull
mov
rclb
push
ror
or
lods
shrl
sub
lret
jmp
test
dec
jbe
aam
xchg
stos
or
fsts
dec
and
jle
xor
xor
repz
aaa
fcomp
jle
hlt
add
inc
out
xor
push
lods
or
lcall
sbb
cmpsl
out
or
jbe
ds
cmpsb
mov
outsb
pop
arpl
aad
sbb
fisubrl
lds
cltd
dec
cmp
cmp
jecxz
cwtl
dec
rclb
loopne
in
scas
jp
mov
adc
mov
mov
adc
xchg
cmp
mov
fabs
add
adc
cwtl
sbb
sub
mov
pop
mov
lock
lods
inc
or
imul
iretw
jmp
sbb
fdivrl
sbb
fwait
jle
in
xor
sub
cmp
out
aaa
sti
jp
inc
xchg
in
cltd
stos
adc
add
adcb
pop
push
je
rolb
cmpsb
push
dec
xchg
jg
sbb
mov
inc
sbbl
xchg
pushf
lods
sub
sbb
stos
mov
in
jge
subb
aas
sbb
dec
dec
and
sub
test
mov
dec
adc
and
or
adc
add
sbb
or
sub
cs
jmp
std
mov
mov
sarl
sbb
or
int
xchg
int3
add
test
jp
xchg
pop
fnstsw
leave
jl
test
sarl
mov
aam
xchg
repnz
rcrl
out
jbe
sbb
ss
or
jge
fistpll
stc
mov
jae
jg
imul
or
das
sbb
inc
mov
dec
insl
pop
dec
bound
mov
repz
jnp
jne
mov
and
shlb
xchg
pop
sub
add
sub
or
xor
and
mov
fcomps
adc
sbb
fs
mov
adc
push
movsb
jecxz
mov
cli
pop
sahf
outsb
cmp
xchg
hlt
push
outsl
pop
mov
sbb
or
sti
mov
shll
cmpsl
cmp
dec
fbstp
mov
mov
inc
push
cltd
adc
jo
adc
out
iret
push
les
or
in
xchg
add
push
sub
cltd
xchg
scas
xor
or
das
out
test
mov
inc
push
pop
imul
cmc
push
add
std
sub
push
in
cmp
xchg
and
jle
lea
in
insl
inc
jae
testl
inc
cwtl
clc
lock
ds
mov
loop
insb
cli
aaa
fsubs
repnz
cmp
call
and
iret
movsl
ds
pusha
mov
inc
mul
cmp
dec
fdivs
sarb
pop
scas
mov
mov
icebp
sbb
addl
aam
outsl
cmp
dec
ja
ficompl
sub
cmp
test
mov
add
inc
repz
mov
aad
xor
add
push
arpl
dec
out
add
add
push
cmp
sbb
in
dec
sti
sahf
out
xchg
add
sarb
add
and
test
mov
xchg
jg
jno
add
cwtl
aam
add
pop
pop
in
dec
cmpsl
mov
cld
fistpll
jecxz
fistl
jno
add
adc
ja
repnz
lds
mov
cmp
fldl
mov
dec
jne
rolb
sti
cmp
or
int3
pop
lds
fmuls
ljmp
movsb
faddp
xchg
pop
jns
addl
dec
mov
inc
inc
jbe
or
ret
popa
daa
in
jae
jge
sub
shrl
lock
dec
jg
ret
pop
cmp
pushf
enter
imul
cmp
divl
es
mov
frstor
sahf
xchg
dec
xor
daa
push
xchg
adc
cmpsl
inc
leave
dec
fsubrl
shlb
xchg
push
xlat
cmp
xchg
add
pop
jno
dec
adc
addr16
add
mov
mov
in
rcr
inc
push
test
dec
loop
lret
inc
fbstp
mov
loope
mov
adc
fs
xchg
mov
jbe
dec
inc
test
aad
dec
fs
lcall
push
adc
xchg
jnp
mov
shl
scas
pop
sub
mov
mov
add
int
push
cmpsl
mov
xchg
push
adc
into
ret
mov
inc
repnz
shr
jge
jae
adc
or
add
in
orl
lods
sub
loopne
cmpsb
icebp
scas
push
push
in
shrl
insl
sub
stos
orb
sbb
adc
test
negb
iret
daa
lret
mov
dec
push
dec
push
pusha
cwtl
mov
push
and
outsl
push
or
or
mov
lods
mov
ss
jecxz
jp
xor
inc
mov
inc
or
insb
lods
jnp
mov
lods
xlat
aaa
cmpsl
jne
mov
xor
mov
loope
xchg
adc
test
xor
cmp
inc
les
stos
ds
push
pop
icebp
gs
inc
test
sub
ljmp
test
lcall
jno
sbb
mov
pusha
arpl
sub
je
test
insb
mov
and
push
add
in
adc
popa
mov
mov
das
scas
xorl
sti
mov
jg
adc
in
xor
in
popf
test
roll
into
adc
sbb
arpl
rcll
add
cld
lock
add
sbb
aaa
jmp
repnz
adc
cwtl
dec
adc
or
loop
cwtl
iret
inc
popa
sbb
popf
ss
mov
mov
iret
stc
test
push
cmpsb
mov
cmp
ljmp
div
fstpl
push
enter
leave
jmp
cmp
push
mov
xor
or
shlb
xor
sub
mov
mov
mov
fwait
cwtl
jb
insb
lcall
pop
inc
cmp
movsb
pop
xlat
nop
andl
ja
ljmp
mov
outsb
inc
filds
cmp
lret
ljmp
pop
or
and
jns
xorl
push
mov
sub
je
sbb
jp
add
sub
lock
and
fildll
push
sub
and
addb
daa
jo
and
es
sar
inc
test
imul
dec
aas
sub
aad
mov
lret
inc
jge
popa
adc
outsl
and
icebp
dec
push
lret
js
scas
xchg
push
ret
outsb
jae
and
mov
test
test
dec
jle
mov
insb
andb
add
dec
mov
and
cltd
movsb
adc
jnp
mov
jmp
enter
and
loopne
pop
xor
mov
mov
sub
mov
fcmovb
std
jne
dec
push
out
inc
cmpl
test
jns
xor
and
xchg
lret
inc
testl
bound
addr16
mov
fs
shr
daa
cwtl
ja
loop
sahf
daa
add
loopne,pn
inc
jbe
xorl
das
push
int3
jl
cmpsl
mov
lock
xchg
aad
cmp
push
cmpb
push
das
mov
jb
clc
aas
andl
jb
add
fistpl
push
mov
pushfw
adc
lahf
outsl
stos
loope
xchg
insb
push
pop
push
mov
cwtl
push
or
adc
out
rolb
inc
jb
pop
sbb
nop
dec
push
cmp
or
mov
push
int3
ljmp
lods
adc
stc
or
pop
in
or
dec
pusha
pop
bound
sarb
outsb
mov
xchg
cmp
daa
aad
or
xchg
xchg
inc
clc
stc
mov
popa
rolb
ss
lret
pop
fwait
test
pusha
adc
pop
jg
loopne
rorb
loopne
inc
ss
and
out
dec
mov
fstps
out
iret
add
mov
pop
stc
pop
mov
sub
xchg
push
sub
dec
mov
aaa
iret
faddl
jge
adc
mov
pushf
sub
fwait
and
rcll
adc
loop
ret
mov
shr
xchg
insl
lret
mov
ret
mov
sbb
jp
or
and
jg
sti
in
out
jns
mov
cmp
jnp
mov
mov
cmc
in
xor
adc
test
into
mov
dec
jno
pushf
sahf
push
pop
fldl
jne
loop
test
adc
inc
jecxz
idiv
pushf
movsb
pop
push
xchg
add
pop
push
into
cmp
in
sub
pop
xchg
sub
pop
dec
fdivs
into
lods
mov
popf
mov
adc
scas
sbb
jmp
sbb
sahf
sbb
mov
mov
out
out
push
fcomip
lret
jmp
push
fucom
mov
push
jo
jbe
pop
fsts
and
xchg
push
mov
and
enter
pushf
mov
fdivl
mov
sahf
jecxz
dec
pop
loopne
cwtl
xor
sbb
dec
mov
movl
pop
int3
faddl
aad
mov
mov
ds
lea
das
push
ror
scas
jno
cmp
repz
jmp
mov
push
jl
adc
pop
inc
mov
out
insl
sbb
mov
stos
pop
xor
or
dec
iret
pop
icebp
insl
sub
mov
sub
leave
mov
and
shrb
mov
cmp
shl
pop
std
insb
and
or
sbb
push
fnstsw
xchg
or
pop
push
ret
test
scas
ret
test
inc
inc
adc
and
repz
mov
mov
js
sub
push
addr16
cltd
cmp
stos
ljmp
lods
aad
sti
inc
fcmovb
push
cmp
rcrl
adc
jno
outsb
imul
sub
std
inc
sbb
popf
and
fwait
out
sahf
iret
xchg
xchg
cltd
dec
stc
xor
pop
lock
out
pop
into
std
add
std
or
cmp
scas
mov
push
dec
jnp
or
lret
cmpsl
loopne
das
sub
ja
inc
dec
das
jno
jno
movl
xchg
cmp
inc
inc
sbb
sub
sub
lret
daa
jmp
sub
bswap
dec
lahf
mov
ds
xchg
dec
xchg
or
mov
sahf
aas
test
adc
jmp
ret
mov
jle
es
mov
ret
xchg
xor
mov
inc
out
stos
scas
or
cmp
xorl
scas
inc
ret
ljmp
or
mov
sub
and
inc
sbb
sbb
imul
inc
sti
cs
adc
aad
or
xchg
inc
pop
xchg
sbb
dec
and
aad
dec
aas
fcomps
movsl
aas
xor
insb
inc
es
dec
mov
sub
testb
lret
shll
mov
cmp
dec
lret
inc
mov
and
inc
test
mov
jae
lcall
jmp
mov
shll
int
jo
inc
imul
fstpl
mulb
xor
xor
es
cmc
es
insl
mov
dec
xor
mov
mov
or
aaa
lret
push
mov
test
pusha
bound
and
fcomi
out
sub
clc
mov
aaa
data16
lea
add
test
leave
imul
fs
mov
es
xor
shrb
sub
insl
mov
mov
negl
stc
les
imul
pop
test
lods
cmp
mov
enter
subb
test
adc
enter
adc
inc
mov
aam
pushl
das
push
sbb
push
or
lock
xor
test
xor
xor
lcall
mov
jle
scas
jle
and
movsb
xchg
jge
aas
das
cmpsl
xor
mov
inc
fisttpll
pop
mov
shrl
cmpsl
arpl
insl
add
pop
stos
push
mov
out
xor
in
dec
mov
adc
insb
lahf
ljmp
xor
lods
mov
cmp
cmp
outsb
sbb
leave
popa
sbb
push
add
std
xor
add
push
xor
lods
test
fldl2e
nop
in
push
stc
cli
ds
mov
ret
lock
jb
mov
mov
cld
fnstenv
dec
add
mov
sahf
adc
cmp
add
imul
xor
es
jne
je
pop
and
lret
shll
imul
pop
fdivrs
fidivl
or
in
mov
xchg
jb
mov
sub
cli
or
fbld
imul
inc
pushf
dec
icebp
mov
rol
out
cltd
into
enter
js
and
pop
loop
sub
std
add
icebp
mov
mov
frstor
jb
inc
lea
pushf
xlat
push
cmp
mov
pop
mov
adc
sbb
dec
mov
pusha
inc
stos
inc
mov
or
inc
repz
or
push
mov
icebp
push
addl
push
stos
push
inc
pop
out
jle
cmc
out
inc
mov
lock
sub
lock
sbb
ds
enter
mov
test
mov
mov
aam
lahf
sub
push
xchg
jo
and
xchg
test
les
jge
xchg
cli
jp
jo
sbb
loopne
xchg
mov
mov
fmul
pop
mov
add
add
pushf
xchg
or
mov
inc
imul
addb
insb
ss
imul
xchg
mov
dec
inc
mov
inc
and
out
push
pop
mov
mov
loop
push
int
jb
or
and
mov
pushf
pop
sbb
xchg
mov
mov
add
push
loopne
add
les
imul
sarb
adc
ret
out
adc
sbb
fistps
xchg
dec
jge
scas
or
rclb
mov
pop
sub
pop
inc
dec
mov
mov
jecxz
sub
nop
insl
inc
xor
cmc
mull
rolb
repnz
leave
test
dec
cld
jmp
cmc
push
add
bound
idivl
scas
test
xor
mov
das
dec
rcrb
subl
sub
dec
pop
jp
add
popa
sub
cmpsb
outsl
data16
imul
mov
ficompl
scas
jecxz
adc
movsl
dec
xchg
cmp
xor
ljmp
jge
mov
inc
fisubrs
sti
dec
inc
repz
xchg
out
pop
ret
cmp
lea
adc
dec
push
in
loop
inc
mov
negl
fwait
test
das
imul
test
fadds
out
fnsave
cmp
je
mov
ret
lret
into
cs
inc
mov
or
sbb
dec
pop
push
mov
add
xor
push
xchg
pop
jmp
enter
addr16
insl
mov
adc
pop
mov
push
fstpt
or
aas
pop
rorl
sub
stos
adc
mov
lret
mov
adc
jmp
jge
in
ja
push
xor
cmp
mov
add
cmp
mov
imul
aad
ret
in
fimull
pusha
xchg
adc
pop
shlb
jbe
test
and
andb
mov
push
xlat
pop
jae
scas
sbb
test
pop
xchg
sbb
and
je
fcompl
psllq
xor
pop
add
loope
push
or
mulb
cmp
jle
xchg
add
jns
dec
jmp
cli
jne
fs
xorb
shlb
xor
jbe
shrb
mov
push
push
in
jmp
popa
rorb
and
bound
jbe
pop
int
lahf
mov
divl
fistpl
jns
popa
insb
jns
jae
cmp
mov
popa
pusha
jns
add
scas
imul
out
sbb
and
repz
and
jne
lcall
mul
push
xor
pop
inc
xlat
and
pop
imul
inc
inc
loope
push
add
xorb
andl
push
sub
mov
sub
shrb
dec
adc
inc
push
push
push
mov
fwait
and
leave
lret
rcll
adc
test
aaa
cwtl
mov
adc
pop
mov
mov
xchg
sbb
arpl
xor
pop
pop
cli
xor
push
mov
imul
out
nop
lds
pop
jmp
cmp
and
or
outsl
repnz
sbb
int
or
lea
xchg
dec
lods
inc
dec
push
lret
push
push
cli
adc
aam
push
xor
xchg
fidivrl
sbb
jg
shll
xchg
stos
jno
out
cmpsb
mov
mov
push
les
jmp
xor
mov
push
in
cmp
mov
sbb
roll
sub
aas
jns
ja
adc
inc
rcrb
sbb
fwait
data16
xchg
mov
xor
xchg
je
lds
xlat
mov
cmpsb
movsb
bound
std
xor
xor
add
xchg
cld
loop
cmp
xchg
mov
lods
jmp
fisttps
xchg
hlt
arpl
cmpl
cmp
dec
jb
rcll
insl
and
add
xchg
pop
call
jo
notb
pop
and
mov
frstpm(287
cltd
bound
and
in
pop
loopew
or
push
mov
xchg
xor
mov
dec
out
ja
mov
pop
and
shl
dec
xchg
fcompl
push
or
sahf
fdivrl
mov
sub
pop
cmp
xor
jmp
ret
aad
push
dec
mov
jo
movsl
mov
sar
dec
sub
loope
push
inc
lods
lods
test
sub
pop
sub
ret
sarl
mov
xlat
mov
push
cmp
add
ret
insl
jno
rcrb
lcall
insb
push
adc
jecxz
adc
repnz
or
scas
push
dec
lahf
xor
out
mov
pop
in
jmp
ret
ds
js
scas
sarb
lods
lahf
mov
xchg
inc
jl
dec
push
out
dec
xchg
xor
push
jne
push
mov
ss
and
js
jae
jmp
out
xor
adc
pop
hlt
cmp
pop
lret
jl
mov
sub
scas
scas
sub
mov
lock
imul
xor
cmpsb
mov
or
fstpt
mov
pop
iret
and
or
stc
sub
fs
fs
mov
inc
or
stc
xchg
push
lahf
push
mov
repz
jno
sub
je
cmp
mov
dec
lahf
mov
out
stc
sub
xchg
mov
or
jle
adc
fwait
inc
or
dec
sub
adc
xchg
sahf
push
in
mov
jp
mov
xchg
setae
pop
pop
push
mov
jb
pop
and
push
inc
repnz
je
imul
and
in
mov
into
insb
int
mov
push
push
out
out
push
or
xor
pop
jne
and
pusha
movsb
inc
fbstp
imul
fsts
rolb
xorb
mov
gs
iret
int3
loop
push
std
inc
push
cmpsl
cmp
sub
rcrl
xor
or
stos
jnp
xchg
inc
xor
mov
pop
add
ret
sub
sbb
inc
xor
jne
ret
push
xor
bound
pop
add
icebp
les
aaa
stos
iret
jp
jbe
cmpsb
out
fwait
xlat
insb
xchg
mov
fdiv
jl
rcrb
xchg
cld
mov
les
roll
loop
pushf
push
clc
push
fmuls
cmp
cmpsb
xor
arpl
mov
cmp
pop
mov
pop
ret
scas
push
or
cmp
mov
push
out
pop
mov
dec
sub
add
pusha
push
lcall
lahf
popf
inc
pop
jb
icebp
mov
mov
jnp
xchg
push
xchg
mov
sub
sbb
mov
test
testl
int
jp
sbb
dec
pop
adc
inc
mov
inc
pop
adc
add
push
or
test
mov
or
mov
cmp
lcall
pop
push
push
mov
outsb
pop
icebp
push
mov
cmpsl
cmp
add
movsl
popf
pop
push
into
sub
jle
sub
mov
add
xor
in
imul
and
add
insb
insb
push
loop
mov
push
xlat
mov
and
push
loopne,pt
arpl
dec
dec
and
imul
pop
cltd
test
xorl
add
inc
mov
push
lods
mov
fstpl
and
dec
dec
js
xor
lret
mov
loopne
cmc
inc
addr16
loopne
sbb
cld
das
aad
and
fcmovnb
push
cmp
bound
sti
out
pop
push
xchg
mov
or
xchg
cmp
jecxz
jbe
xchg
ja
xchg
inc
shll
mov
in
dec
pop
sahf
xchg
lret
jl
mov
pop
fs
xlat
cltd
push
iret
mov
mov
aaa
xor
push
jl
mov
jmp
in
jmp
inc
pushf
iret
xchg
sbb
mov
xor
mov
pop
adc
xchg
ret
or
aad
adc
dec
mov
sarl
or
inc
mov
jo
jg
out
mov
dec
and
sub
jg
test
out
sbb
leave
and
lea
jb
add
enter
mov
cld
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
adc
sub
sahf
jnp
mov
lahf
and
mov
mov
lea
mov
push
fsubrs
mov
dec
rorb
mov
pop
jecxz
mov
fstps
push
pop
mov
lock
std
fs
test
lock
shll
fwait
xchg
lret
sbb
pop
sbb
sahf
pop
xchg
push
repz
test
les
mov
incb
dec
loop
shll
mov
shr
add
mov
jle
std
sub
subl
jno
fistps
inc
add
lods
push
jmp
fsts
lods
push
ret
mov
int3
out
and
or
out
test
rolb
out
lcall
ret
scas
and
out
xorl
cli
xor
cmp
sbb
stc
adc
inc
dec
outsl
inc
mov
pop
lods
into
imul
mov
lods
adcb
ret
adc
inc
push
in
pop
mov
cmp
icebp
sbb
es
add
push
push
mov
jmp
int
sub
jae
sahf
subb
movsl
xchg
mov
or
ret
clc
mov
jne
xor
out
cwtl
mov
std
sti
out
imul
rclb
mov
bound
xchg
orb
popf
dec
out
or
inc
mov
mov
add
cltd
and
mov
shll
cmp
out
fcoms
in
jo
pop
jp
push
pop
outsl
xor
lock
push
fisubs
cmpsb
jg
addr16
mov
cmpsb
popa
or
scas
sbb
adc
sub
sti
mov
pop
xchg
mov
out
inc
xchg
fcmovbe
rcr
out
mov
dec
dec
scas
mov
lcall
adc
adcb
int3
fsubrl
clc
add
dec
test
dec
in
cmp
xchg
dec
test
movsb
psrlw
adc
aad
in
mov
stos
mov
es
dec
mov
jle
call
call
mov
movsb
sbb
stos
and
cltd
mov
rcrb
inc
inc
inc
adc
out
faddp
fsts
mov
pop
push
sub
hlt
lock
fisubrs
mov
mov
mov
jge
ret
mov
add
fimull
mov
inc
xor
adc
cwtl
dec
jb
lock
mov
jae
add
sti
xchg
dec
sub
pop
sub
xor
pop
ret
xchg
fisttpl
test
ja
jl
adc
push
fidivl
pop
mov
adc
dec
iretw
mov
cmpsb
dec
jne
xor
div
rcl
test
push
int3
sbb
push
jae
daa
inc
dec
jb
clc
push
pop
xor
out
cmp
jle
jne
sbb
sub
push
subl
xchg
iret
insl
stos
fwait
daa
xchg
dec
pop
or
insb
out
rol
and
mov
es
test
into
adcl
dec
je
mov
pop
bound
test
fwait
sub
mov
mov
cltd
data16
dec
jp
rcrl
mov
sbb
pop
cmp
push
jb
pusha
rcl
push
add
xor
xor
jns
int
mov
xor
ss
mov
pmaxub
icebp
or
ret
push
sti
loop
jb
js
xor
test
lcall
push
sbb
add
mov
mov
mov
push
into
lret
dec
jmp
rolb
mov
and
sub
add
jo
jecxz
xchg
ret
in
sbb
nop
sub
push
add
jne
andl
mov
cwtl
dec
add
sarb
xchg
mov
sbb
xor
andb
and
pop
jne
and
ret
das
shl
jmp
xchg
sub
mov
stos
lcall
cmp
dec
xchg
push
shll
pop
inc
add
imul
popa
mov
mov
cmpsl
fcomps
mov
mov
jle
lods
popf
outsb
push
mov
push
ret
mov
mov
sbb
jo
repnz
mov
dec
stos
ljmp
and
and
sbb
xchg
jg
jecxz
push
loopne
stos
loop
scas
mov
inc
mov
push
fdivrl
stos
mov
pop
aaa
dec
xor
pop
lods
xchg
loopne
icebp
or
sahf
ljmp
mov
jnp
sub
insb
cmpsl
xor
loop
cmp
and
inc
fistpll
lea
and
stc
cld
or
adc
loope
stos
xchg
and
fcmovb
cld
mov
fsub
data16
push
fs
mov
add
sti
shrb
push
int
pop
rorl
push
cmp
dec
push
orb
stos
xor
sub
lcall
add
repnz
sbb
cs
icebp
sti
rorl
into
push
outsl
sbb
jg
subb
mov
test
ds
dec
and
and
jae
hlt
mov
andl
sti
call
and
loope
cmpsl
inc
lods
and
orb
fsubs
sbb
jb
pop
insl
push
test
cmpsb
add
scas
fsubl
jle
mulb
mov
in
das
pop
pop
cltd
cmp
and
xchg
add
ret
shrl
fadds
and
add
cmp
sbb
inc
daa
adc
daa
outsl
push
jns
push
jo
mov
out
xchg
insb
sarl
test
jbe
inc
xorl
add
out
and
lcall
push
add
xchg
or
lcall
lock
seta
dec
popa
xchg
test
cld
dec
cmpsl
and
xchg
mov
sahf
iret
sti
inc
lcall
xchg
stc
add
ror
pop
push
adc
sbb
jecxz
sub
xchg
into
xor
or
jl
dec
stos
dec
les
movsb
pop
pop
inc
push
add
jg
xor
sbb
inc
xchg
sub
aas
outsl
jae
fildl
inc
mov
sub
fsubl
in
adc
mov
lods
aam
mov
or
or
xchg
std
clc
cmp
pop
and
push
fistpl
pusha
repnz
or
xor
mov
insb
loope
inc
pusha
adc
xor
sbb
inc
out
lret
jae
pop
leave
clc
mov
pop
addr16
ret
and
push
xchg
in
mov
out
dec
iret
xchg
cs
jb
push
pop
jne
pop
push
adc
int
or
xchg
pushw
sub
inc
and
xchg
mov
dec
mov
inc
sbb
xchg
out
push
dec
jge
repnz
push
out
ret
cltd
andl
jmp
subb
pop
lret
bound
addl
das
add
and
shrl
xchg
inc
xor
push
cmp
jg
scas
xor
js
cmp
dec
mov
sahf
push
incb
cltd
mov
mov
into
addr16
ds
push
sahf
pop
jbe
xchg
stos
es
repz
adc
ds
insl
addr16
mov
push
mov
xchg
push
out
cmc
xchg
add
dec
repz
inc
out
sub
xor
cltd
stos
out
data16
iret
jne
sbb
mov
cltd
add
xor
or
jmp
inc
int3
and
pop
test
mov
sub
mov
xor
les
cmp
jmp
shrb
mov
icebp
fs
stos
pop
jl
xor
and
adc
stc
jg
xor
push
inc
xor
aas
push
loopne
or
in
jne
test
divl
jno
mov
xor
pop
xor
add
repz
pop
pop
push
popa
xchg
mov
fld
lcall
mov
inc
js
sahf
push
bound
ret
int3
cmpsb
repnz
call
test
jns
inc
fisttps
in
mov
and
or
jmp
mov
pop
cmc
mov
add
mov
pop
and
fisubs
adc
bound
mov
dec
shl
sti
mov
cmp
std
in
adc
and
cmpsb
push
andl
mov
movsb
pcmpeqb
ja
rol
sti
push
out
lea
push
and
dec
jecxz
outsb
xchg
cmp
add
dec
nop
aad
adc
xchg
fldenv
pushf
xchg
jbe
outsl
fimuls
jnp
test
std
cmp
add
bound
adcl
jb
sbb
jmp
add
mov
and
pushaw
push
push
test
gs
jne
mov
lds
push
xchg
adc
adc
lods
cld
push
mov
and
call
std
adc
mov
icebp
ljmp
mov
add
repnz
lds
out
cltd
cltd
mov
ja
faddl
pop
clc
push
xor
pop
stos
jle
fsts
in
gs
pop
mov
es
jae
dec
and
or
adc
test
add
lahf
je
orb
inc
mov
cmp
xor
sub
arpl
xchg
lods
pop
lods
ds
cld
cmp
dec
jg
xchg
or
pop
dec
jmp
mov
aaa
pushf
xchg
movsb
add
add
fwait
or
inc
mov
imul
push
insl
add
inc
xchg
mov
dec
sub
test
adc
fucomip
gs
sub
push
lret
shlb
fs
or
xchg
pop
mov
inc
dec
leave
cmp
pop
iret
adc
add
and
push
mov
jae
sbb
lea
mov
fcmovnb
aas
or
adc
movsb
jg
lcall
movsb
popa
inc
xorl
sub
or
mov
adc
mov
bound
leave
cmp
insl
loopne
popf
push
xor
or
jecxz
cld
insl
loope
lret
pop
xor
outsb
movsb
add
push
movsl
add
stc
testl
hlt
in
cli
mov
fxch
push
xchg
dec
xor
repnz
xchg
jmp
aam
cmp
iret
pop
insl
inc
pop
jae
fwait
outsb
push
test
shr
or
or
movsl
dec
sub
sub
inc
loope
push
mov
xlat
inc
outsb
subl
push
pushf
dec
jbe
insb
jge
es
and
cmp
push
pop
push
les
ljmp
dec
dec
jae
lock
push
fsub
jmp
inc
jge
sbb
and
cltd
and
xor
clc
pop
push
pop
xor
mov
ficompl
mov
or
pushf
and
mov
dec
and
lret
dec
in
xchg
inc
sub
movsl
xor
js
fnstsw
in
jl
sbb
ds
xor
inc
mov
jne
stos
shl
cwtl
jb
jnp
incb
xchg
dec
test
push
les
mov
scas
movsl
frstor
cli
xor
cwtl
sbb
adc
fwait
lret
in
mov
sahf
jle
jmp
push
pushf
mov
xor
sub
rcll
addl
ja
or
xor
gs
mov
dec
in
push
enter
pop
inc
xorb
cmp
scas
sub
addr16
out
jmp
adc
xchg
rcr
inc
push
call
out
or
xor
lahf
push
jge
icebp
mov
repnz
pop
sahf
cmp
sbb
xor
push
out
inc
data16
xlat
stos
sbb
sarb
jb
jle
xchg
and
daa
lcall
cltd
sbb
dec
nop
and
ret
push
jbe
outsb
xor
push
in
fwait
pop
repz
cli
loop
adc
imul
rolb
in
pusha
jle
ljmp
push
outsl
cs
movsb
stos
ljmp
add
test
jae
jge
movsl
inc
add
shlb
les
jmp
jb
push
add
mov
xchg
lds
sbb
rorl
mov
lcall
cmp
shl
and
ja
add
inc
adc
mov
sub
in
dec
das
rclb
push
dec
lock
rcrb
lods
add
xor
or
fiadds
andb
shl
test
cmp
dec
arpl
dec
sbb
movsl
adc
jge
mov
mov
test
jmp
ss
push
cmp
pop
add
lcall
shrb
out
rcll
xor
xchg
mov
adc
gs
add
mov
fsts
popf
mov
repz
out
andb
mov
shlb
adc
sbb
shlb
jmp
out
int3
xchg
xlat
ffreep
xchg
sti
stos
push
je
xchg
imul
push
jle
or
cwtl
aas
lcall
jle
les
lret
adc
adc
test
stc
lock
adc
mov
mov
in
test
jle
shrb
jmp
xor
insl
jmp
adc
mov
out
dec
mov
push
fidivl
push
shrl
xor
cmp
je
icebp
xchg
mov
mov
add
std
sbb
jl
cmp
mov
popf
stc
xor
fbstp
in
mov
test
push
aas
or
out
sti
pop
xchg
nop
xchg
int3
cmpsl
rcl
cltd
outsl
cmp
sub
xchg
add
out
mov
gs
pop
dec
sub
mov
pop
cmp
adc
test
dec
fidivl
out
std
mov
sahf
cltd
cwtl
lds
incb
jbe
or
pop
mov
leave
push
push
fs
rorl
and
mov
xor
in
lods
out
addb
ror
or
or
sbb
outsl
mov
dec
jb
inc
in
cli
das
or
mov
jno
gs
addr16
mov
nop
int
je
cs
adc
outsl
sub
pushl
jnp
scas
int3
fst
rcrb
dec
dec
aaa
pushf
test
dec
jle
div
mov
xor
dec
pop
lods
insl
mov
loop
aas
jb
ja
adc
dec
mov
and
addb
dec
adc
push
call
lods
sbb
xlat
out
mov
call
test
and
fdivr
repnz
add
pop
cwtl
jno
jmp
mov
dec
fnsave
insb
stos
xchg
scas
inc
mov
xor
and
push
inc
iret
daa
pop
roll
sub
and
fldenv
lea
ds
cltd
mov
pop
test
ficoml
loop
pop
xor
orb
mov
and
popf
into
ljmp
lock
fs
fwait
xbegin
pop
orl
jno
imul
loope
jg
adc
bound
push
cli
aas
shll
movsl
int
push
repnz
inc
mov
nop
xor
cltd
mov
test
pop
xchg
add
xchg
pop
sahf
cmpsl
or
add
aad
push
movaps
mov
fwait
out
icebp
add
lods
movsb
faddl
lcall
xchg
hlt
cmp
xchg
jg
add
mov
call
fcmovnbe
mov
jno
mov
mov
xchg
mov
int
orb
mov
sbb
movsl
std
push
xchg
add
adc
loopne
mov
jl
cs
sub
or
popa
sti
clc
lock
fldenv
xchg
outsl
lahf
sub
jge
add
push
fstpt
push
dec
dec
xchg
pop
mov
pop
cmp
inc
out
push
push
push
add
femms
push
dec
mov
add
dec
iret
jge
mov
mov
ljmp
fs
dec
inc
xchg
out
movsl
cmp
arpl
cmp
cmpsl
cmp
push
jmp
add
jo
cmp
add
repz
xchg
fadds
pop
sub
xor
inc
pop
push
rol
clc
imul
sbb
fldenv
mov
insl
xchg
cmp
pop
jp
es
int
pop
pop
mov
sbb
movsl
imul
mov
mov
pusha
jbe
inc
add
sbb
ja
inc
andb
cmp
outsb
or
sbb
lock
dec
inc
ja
mov
pop
loopne
inc
stos
test
out
test
jg
imul
add
adc
lcall
stos
xchg
pop
hlt
lahf
mov
mov
inc
call
fimull
arpl
mov
mov
aad
pop
mov
cs
mov
mov
pop
xchg
or
ljmp
lret
lods
push
mov
pop
cmc
fidivrs
sub
pop
dec
xchg
sub
lock
mov
test
or
fists
into
fdivr
add
inc
ret
lret
in
pop
aam
dec
add
jp
adc
or
outsl
mov
or
push
fisttpll
mov
mov
mov
push
sbb
fisubl
lea
cmp
arpl
xor
mov
or
and
call
cwtl
adc
sbb
in
lock
aaa
sbb
scas
add
popf
ja
sub
and
mov
jecxz
adc
cltd
fadd
mov
jmp
data16
mov
xor
dec
jne
sbb
mov
into
or
xchg
adc
test
and
fdivs
jo
outsb
or
addr16
push
into
arpl
pushf
cwtl
push
push
adc
adcl
cmpsb
xor
mov
imulb
into
test
xchg
bound
mov
pop
dec
xor
or
adc
adc
fstl
movsl
mov
ss
cs
add
mov
lret
cmp
lahf
adc
call
cs
push
leave
out
iret
jmp
and
pop
xor
mov
lahf
cmp
cmp
ljmp
bound
cwtl
lahf
dec
hlt
pop
lods
pop
xchg
mov
lret
cmp
mov
arpl
ljmp
pop
ljmp
rcll
clc
imul
add
pop
mov
ja
or
push
call
mov
stos
pop
or
mov
adc
cmp
inc
stc
mov
dec
js
rolb
mull
pop
mov
sbb
scas
mov
jae
sahf
loop
dec
xchg
jl
jecxz
jno
fiadds
and
lea
fnstsw
mov
jecxz
jne
jb
pop
movsl
test
lret
push
mov
xor
push
ljmp
and
dec
pusha
mov
fisttpll
jmp
sub
ljmp
mov
xchg
push
pop
rcll
out
leave
xor
pop
lds
fwait
pop
and
pop
shl
movsb
ss
or
mov
add
stos
rclb
push
inc
hlt
lods
test
fildll
sbb
fdivrl
fmull
test
jo
mov
imul
sub
test
jns
std
fwait
and
sbb
shll
xchg
mov
inc
fs
insb
popf
and
daa
jae
adc
push
jle
fdivrs
and
cmp
lock
scas
mov
jge
mov
loop
or
jb
xchg
inc
cld
xchg
xlat
imull
push
mov
jg
mov
mov
mov
inc
push
sbb
and
rorl
push
out
cmpb
adc
dec
fildll
sbb
mov
sarb
jae
loopne
jbe
xchg
test
mov
cmp
lret
jb
mov
xor
xchg
mov
loope
or
sbb
repz
inc
lods
lret
xchg
dec
add
add
out
mov
sub
stos
cltd
mov
fnsave
or
insl
lock
cltd
xor
insb
mov
fidivrl
push
and
sbb
mov
call
add
inc
mov
jl
fisubrl
ss
aas
mov
inc
pop
push
aad
repz
or
rorl
dec
cmp
and
or
arpl
out
dec
loop
push
pop
in
xor
clc
inc
mov
or
inc
scas
fidivl
xchg
fdivs
call
sbb
jl
jecxz
add
pop
mov
mov
xchg
mov
jae
inc
jmp
clc
loope
cmp
lahf
dec
nop
sub
push
inc
or
cmp
fs
jae
enter
sub
xor
ljmp
rol
loop
ja
das
ja
test
and
into
outsb
inc
aas
xchg
jo
int
xor
cwtl
xchg
jp
xor
cld
lods
icebp
ss
scas
mull
dec
add
or
jge
lock
in
std
cltd
adc
xor
jbe
jl
fmul
sbb
or
and
xor
mov
inc
in
jns
cmp
jns
xor
lahf
or
mov
insl
jne
movsl
cli
sub
aas
into
ror
cld
push
push
sti
std
pop
pop
outsl
jecxz
enter
movsl
aaa
rorb
xchg
mov
fbld
jecxz
cltd
dec
std
add
xchg
mov
jns
mov
movsb
das
pop
xchg
out
pop
cltd
xor
in
nop
cmp
mov
scas
add
cmpb
push
in
insl
sahf
fisubs
xchg
pop
cmp
pop
sub
mov
icebp
push
mov
mov
nop
jge
daa
xor
fs
sub
enter
cmp
cwtl
rorl
mov
pop
enter
orl
mov
cmpsb
lods
cmp
subb
inc
xchg
js
out
mov
scas
adc
mov
pusha
lret
sub
sbb
test
xor
jp
sbb
pusha
fsubrl
int
ss
lea
sahf
ss
or
mov
ljmp
or
clc
mov
mov
xchg
lea
pop
mov
mov
inc
xor
inc
shll
ds
mov
add
dec
mov
fs
ljmp
test
pop
roll
test
jno
hlt
daa
outsl
mov
xor
push
test
aam
xchg
adcl
loop
lret
je
add
rcr
daa
popf
scas
test
fisubrl
aaa
inc
repz
in
fwait
sbb
je
push
test
xchg
sub
mov
lea
mov
mov
xchg
data16
pop
jns
fsub
xor
loope
mov
pshufw
scas
repnz
mov
jle
aam
data16
jmp
test
loopne
add
jl
clc
cli
push
les
int
scas
pop
xchg
xchg
xor
icebp
jno
bound
mov
cmpsl
icebp
cmp
iret
xchg
loop
aaa
dec
xlat
add
xchg
sbb
dec
in
pop
add
lret
sub
cmp
xor
fists
dec
nop
xor
cmpsb
push
test
enter
orl
lds
jae
and
sti
mov
sub
and
mov
aam
mov
stc
pop
shlb
dec
cmpsl
xorl
movsl
jge
popa
add
xor
shlb
adc
rcrb
adc
out
imul
scas
fwait
les
dec
push
imul
loop
adc
or
pop
add
fcmovnu
sub
in
subl
add
icebp
pop
ret
stos
lret
ja
lock
loop
stc
mov
xor
cmpsb
add
js
xor
stos
das
pop
pop
or
xor
insb
sbb
adc
mov
fsubs
jecxz
shrb
or
push
out
mov
or
in
pusha
sbb
sub
jae
sbb
inc
enter
jmp
cmp
xchg
cmp
aad
add
xchg
inc
and
pop
dec
fcmovnu
push
jae
push
add
push
push
pop
bound
cmc
int3
mov
aas
ret
mov
jb
sub
cmpsl
add
int
or
or
sbb
xchg
mov
and
xchg
scas
aas
daa
insl
sbb
sbb
mov
in
addr16
xchg
in
jle
mov
sub
shrl
jae
nop
pop
and
sub
pop
loope
imull
sahf
pop
lods
mov
outsl
mov
aaa
mov
inc
or
adc
add
mov
push
aas
divb
aad
adc
imulb
pusha
sahf
add
imul
in
cmp
mov
decl
cmovns
push
xlat
add
push
adcb
aas
fs
test
xor
push
data16
movsl
ljmp
bsf
cmp
and
fstl
ja,pn
and
jecxz
out
sbb
dec
mov
mov
and
movsl
lea
mov
pusha
or
lods
repz
insb
lahf
add
sbb
je
icebp
jmp
xor
pop
ljmp
repnz
test
xchg
cmp
jmp
add
jns
inc
adc
add
sti
xchg
add
push
sti
xchg
push
addl
adc
sti
cmp
mov
jecxz
andl
cmpsb
mov
push
push
mov
add
pop
rcll
sahf
scas
push
xchg
pusha
push
xchg
push
mov
pusha
retw
cmp
aaa
xchg
rorb
pop
les
push
and
inc
sbb
inc
or
jo
sub
cld
sub
adc
jle
jecxz
cwtl
or
lahf
shl
jecxz
ret
js
xchg
pop
inc
xorb
mov
sub
xor
lret
push
sbb
pushf
subb
je
es
js
add
jo
stc
adc
pop
clc
adc
call
sbb
jb
push
adcb
or
outsb
jge
xorb
xlat
jp
in
lods
lcall
sbb
mov
mov
psubq
int3
push
clc
dec
andb
mov
jne
or
fsubrl
add
int3
stos
pop
js
ds
rclb
aas
and
testl
mov
aaa
or
outsb
pop
out
int3
daa
mull
in
jbe
pop
clc
movsl
adc
or
sar
push
fidivs
jnp
jge
lods
xor
jg
inc
data16
xchg
es
ret
sub
mov
push
ja
aam
pusha
das
sysexit
push
fsubrs
ja
dec
sahf
mov
cmpsl
in
rolb
popa
sub
fadd
sahf
ds
cmpsb
xchg
inc
dec
stos
mov
pop
xchg
scas
push
cmpsb
and
jne
scas
enter
dec
es
xor
stos
or
ds
xchg
ds
sbb
dec
lcall
maxps
jae
and
fisttpll
pop
ret
xchg
push
cvtps2pd
js
sbb
cli
lcall
sub
push
cmpsb
int
stos
sbb
les
stos
mov
shll
int3
jmp
repnz
jae
or
jb
shll
cs
cmp
inc
in
push
mov
xor
lods
outsl
sarl
mov
sub
sub
xor
cltd
cmp
jge
cmp
lods
in
fidivs
loop
sbb
sbb
orl
pop
in
shll
jmp
loope
stos
dec
bnd
push
ret
inc
xchg
xchg
adc
cmp
mov
mov
and
mov
jge
mov
dec
and
add
adc
cwtl
std
pop
jmp
or
arpl
sbb
pop
xor
push
add
scas
adc
decl
lret
dec
xchg
outsb
bound
es
cmp
fmuls
cmp
int
mov
fwait
in
repnz
clc
xor
xchg
push
lods
int3
pop
pop
and
enter
pop
mov
test
mov
xor
negb
mov
jg
addr16
jns
sbb
push
xor
xchg
xchg
in
std
dec
jl
stos
mov
lods
mov
lods
fbstp
ss
call
imul
out
and
das
hlt
mov
aas
int
dec
clc
mov
cs
dec
push
jecxz
std
xabort
sarl
fidivrs
ljmp
data16
stos
outsl
scas
mov
sti
jae
inc
mov
movsl
scas
push
or
shlb
pushf
cmc
daa
and
adc
fimuls
sbb
push
push
pop
aam
inc
cmp
and
ljmp
cmp
jecxz
push
mov
rorb
lods
inc
dec
push
in
outsb
xlat
mov
aam
and
aaa
adc
xor
jmp
mov
adc
ret
xchg
pusha
repnz
xchg
stos
sbb
sub
sub
in
and
scas
and
dec
jl
push
iret
gs
in
mov
and
mov
loope
popa
lahf
xchg
mov
push
subb
or
add
jge
pop
or
inc
jb
call
rclb
add
jb
cmova
sbb
test
xchg
cwtl
adc
sahf
outsb
sub
adc
mov
push
sbb
int
loopne
repz
test
pop
fcoms
jnp
push
sar
add
inc
enter
jmp
xchg
or
ffree
xor
push
add
cmpsb
mov
inc
pop
aad
rolb
rcrb
ja
mov
ss
mov
out
movsl
shll
sbb
push
aaa
mov
pop
and
xchg
xchg
jnp,pt
mov
es
xchg
and
lret
imul
or
in
push
push
lret
mov
adc
sub
orl
and
push
ret
dec
clc
xchg
sbb
retw
sbb
lock
push
push
sbb
inc
jae
xchg
adc
mov
mov
fsts
ss
stos
and
std
outsb
xchg
mov
out
inc
lock
mov
mov
xchg
rolb
sbb
mov
sbb
pop
clc
xchg
pop
lods
in
ret
cmpsb
pop
rcl
icebp
out
arpl
mov
jge
mov
ret
stc
into
imul
dec
lock
mov
imul
mov
mov
dec
cmp
daa
aam
sbb
add
push
and
pop
xchg
pushf
sbb
sbb
xchg
test
movsl
call
push
jbe
or
stos
push
pop
ja
daa
inc
xor
cwtl
add
or
lret
negb
aad
testb
xor
fwait
push
lret
idivl
subb
pop
int3
jg
cmc
xor
cmp
pushf
or
xchg
leave
inc
ret
mov
cmp
aam
or
test
popa
and
inc
mov
lahf
lahf
cmpsl
dec
pop
lds
mov
mov
xor
jg
addr16
fwait
sbb
jle
inc
bswap
inc
mov
leave
fisttpll
lea
mov
sub
pop
mov
pop
sub
scas
leave
add
daa
inc
icebp
and
sub
add
push
xchg
hlt
stos
ss
pop
xor
lret
gs
call
loop
enter
arpl
mov
push
mov
pop
daa
dec
cmp
xlat
or
dec
cmpsb
mov
pop
pop
mulb
dec
xor
mov
sub
repz
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
or
popa
popa
mov
jnp
xlat
sahf
jnp
mov
jg
popa
dec
outsb
das
fwait
add
sub
fs
mov
push
mov
sub
dec
mov
fstps
sub
fwait
and
mov
push
sti
rolb
mov
lahf
test
mov
cmc
cmp
mov
inc
mov
shll
ja
lcall
ret
std
pop
or
loopne
add
cs
mov
les
push
into
push
jne
stc
call
out
call
mov
addr16
push
mov
cmp
jb
jmp
shl
stc
or
pushf
fldenv
mov
cmp
jg
jne
fistpll
jge
lret
push
ljmp
ret
mov
pop
or
mov
loop
push
xchg
inc
push
test
ds
icebp
fcoml
jl
fistps
ss
pop
jg
cli
mov
mov
mov
and
pusha
or
inc
or
addr16
dec
lcall
cmp
icebp
xchg
scas
mov
icebp
sbb
xchg
jmp
pop
mov
xor
xchg
hlt
adc
cmp
insl
and
fildll
test
xlat
mov
rcrl
fdivl
clc
loopne
ret
mov
aam
pop
jp
rcl
jmp
cmp
cmc
loope
fisubrs
jg
pop
mov
xchg
leave
xchg
jmp
jg
popa
aaa
les
add
cmp
cli
ret
popf
lret
je
cmp
add
outsb
xchg
mov
lods
xchg
ljmp
mov
push
test
lret
shll
push
lock
cmp
jl
push
jbe
jmp
xlat
leave
lahf
inc
lcall
jne
push
mov
repz
imul
jns
outsl
jg
xchg
adc
in
loopne
test
cmp
notb
mov
lahf
mov
dec
lds
adc
jns
ljmp
popa
adc
popl
jbe
and
enter
mov
cmpps
dec
jae
dec
in
das
shlb
jae
daa
clc
mov
inc
clc
imul
ja,pn
xlat
inc
adc
je
popf
and
xchg
xchg
add
popl
or
mov
push
xchg
add
xchg
adc
mov
in
stos
sbb
pop
cltd
mov
adc
xchg
adc
enter
cmp
push
cmp
insb
scas
lret
and
cmp
pop
and
lods
add
adc
out
cwtl
repnz
cmpsl
mov
cmp
xchg
into
mov
leave
xor
jnp
pop
fcompl
stos
aas
leave
fdiv
addr16
jge
sarl
inc
xor
ja
test
pop
mov
lods
jno
outsl
mov
stc
adc
repz
ja
jle
into
loopne
mov
mov
push
fnstenv
lock
xor
ror
cwtl
jmp
test
sub
sbb
cmpsl
std
fdivp
sbb
pop
cmp
aas
add
xor
pop
mov
xchg
fnstsw
cltd
std
ja
gs
or
cmp
add
aaa
or
movsb
jae
loop
sub
add
out
sub
dec
push
xchg
fcoml
in
cmp
std
outsl
xor
call
xor
and
shrl
xchg
push
pop
pop
mov
fst
out
jae
popl
dec
and
iret
addr16
xchg
and
enter
adc
mov
std
pop
push
or
xor
lret
push
jbe
clc
adcl
inc
addb
bound
adc
scas
lea
xchg
cmp
imul
test
push
dec
push
aas
mov
mov
fidivl
and
push
mov
adc
clc
fldt
outsl
aad
aam
rorb
sub
mov
xor
out
ljmp
pop
loop
mov
imul
out
xor
cld
xchg
pop
ja
pop
ds
push
insl
out
ja
xchg
sub
sbb
hlt
outsl
adc
push
push
ja
movsl
pushf
pop
addl
pushf
xchg
push
ja
mov
out
xor
mov
test
clc
mov
push
push
addr16
inc
adc
xlat
inc
lfs
sub
or
dec
bound
sbb
sbb
fiaddl
pop
pop
xorl
sbbb
dec
insb
xchg
xlat
jne
pop
or
iret
in
mov
push
or
test
ljmp
xorb
rol
or
jmp
ret
mov
cmpsb
adc
outsb
xchg
inc
dec
or
xchg
lahf
divb
dec
sub
cmp
or
cmp
icebp
in
cmp
fadd
pop
pop
and
add
add
mov
xchg
mov
sbb
lahf
out
cmpl
icebp
adc
ds
cmp
cmpsl
and
fldenv
dec
lds
bound
pop
cld
aaa
inc
jno
pop
sbb
jnp
add
aad
pop
jmp
mov
cwtl
sbb
loopne
test
sub
call
push
pop
dec
ja
mov
sbbb
adc
in
sarb
mov
fildll
rcll
loop
test
dec
rcl
pop
clc
stc
stc
popa
add
sub
subb
jg
divl
xchg
adc
stos
xchg
daa
adc
mov
push
jge
loope
mov
subb
loop
cmp
dec
adc
inc
sbb
jl
push
jno
sub
mov
movsl
out
into
push
sbb
mov
sub
imul
xor
lods
add
mov
jmp
push
daa
into
pop
loopne
add
pop
rolb
mov
inc
stc
cmp
xor
in
cmp
mov
lods
in
mov
pop
scas
fiaddl
mov
rcrl
or
sbb
pop
xor
adcl
fucomi
or
js
insl
push
lds
push
in
addr16
ljmp
negb
js
out
push
mov
pop
mov
ror
xchg
bound
test
in
cmp
mov
cmpsl
jle
repz
dec
dec
mov
sbb
or
and
int
fisubl
inc
stc
dec
mov
mov
fs
push
pop
cwtl
xor
jl
lret
repz
mov
pop
push
pusha
outsl
out
jne
pop
push
pop
mov
pop
jb
out
test
and
mov
lds
ja
ja
mov
ljmp
lea
movsb
add
in
fsubs
pop
cli
and
movlps
ds
cmp
mov
cmpsl
arpl
cmp
out
cmp
sbb
inc
fdivs
jg
in
push
insb
cmp
imul
sub
xor
arpl
push
pop
pop
or
dec
in
fstpt
jb
arpl
pop
inc
test
cmp
push
pop
push
mov
ja
xchg
sbb
loope
fs
test
mulb
in
clc
lret
shll
lret
fcoms
pop
add
imul
es
pop
sbb
sbb
cmp
out
jnp
and
xchg
loop
xor
mov
or
adc
mov
jae
loope
inc
mov
stos
jecxz
pop
jl
xchg
or
ror
push
insl
or
out
dec
add
mov
or
cmp
cmc
dec
lcall
pop
addb
fs
ljmp
mov
sti
dec
ficomps
ret
pop
xor
mov
lret
inc
cmpsl
imul
test
stos
insl
andb
enter
mov
push
mov
add
xchg
mov
dec
aas
and
xchg
cli
sar
sub
imulb
test
xor
je
repnz
sub
lods
daa
mov
fldl
adc
mov
mov
jp
cltd
ja
aam
sub
mov
mov
sbb
aad
push
adcl
mov
in
sbb
pop
lods
inc
mov
lcall
notb
pop
mov
push
or
outsl
pop
jne
bound
mov
push
sbb
repz
jae
push
outsb
popf
pop
insb
in
cpuid
lret
xchg
repnz
stos
push
cltd
add
lock
jecxz
pushf
mov
pop
test
mov
out
pop
pop
adc
lret
dec
divl
test
mov
out
out
pop
cld
push
cmp
adc
insl
fsubl
fcoml
loope
xchg
in
and
faddl
jb
xchg
aam
mov
lds
add
cli
enter
mov
add
xchg
mov
mov
hlt
addr16
movsb
out
es
or
jae
clc
push
jae
xchg
mov
or
pop
int
rorb
pop
in
dec
in
movsl
mov
std
xor
int
sub
addr16
in
lods
mov
xor
out
aam
shl
fwait
fs
shl
out
fsubs
fldln2
jb
xor
stos
mov
cld
mov
enter
mov
insb
icebp
rolb
push
push
xor
xor
mov
inc
jns
lea
and
cli
pop
push
test
out
imul
xchg
lahf
mov
in
arpl
xor
fimuls
loopne
cmp
add
mov
sub
pop
mov
sub
popa
push
mov
pop
sub
in
test
inc
xchg
jp
jmp
stos
jo
imulb
iret
out
adc
adc
xchg
mov
mov
lahf
mov
add
jnp
inc
outsl
dec
es
cmpsl
dec
and
cli
or
cmp
pop
push
enter
xchg
push
ret
add
cmp
notb
ficoms
data16
shrb
mov
cmpsb
int
les
loop
daa
test
jp
nop
xchg
mov
jae
pushf
push
ret
out
ret
loop
cmp
xchg
stos
mov
rcrl
pop
ljmp
jl
ret
push
cli
add
arpl
das
add
mov
xor
rclb
loope
jle
add
inc
inc
popf
xchg
lea
bound
aam
js
icebp
daa
lcall
jmp
fmulp
jns
repz
pop
pop
inc
mov
das
xlat
sub
scas
mov
xor
jb
shll
stc
mov
or
daa
cmp
daa
pop
imul
es
shr
jb
mov
lea
xor
xchg
mov
jge
mov
into
fistl
aaa
aad
jecxz
jl
frstor
push
aas
shl
jl
sbb
sahf
jb
mov
lods
lock
lock
enter
push
inc
dec
mov
in
loope
fmul
sub
xchg
jp
push
xor
in
lret
add
mov
mov
incl
push
cmp
xchg
xchg
imul
inc
outsl
lcall
sbb
repz
out
pop
loop
or
loopne
jns
mov
sbb
pop
xchg
and
dec
repnz
mov
mov
dec
cmp
movsl
rolb
das
push
out
lahf
cmp
adc
loop
adc
loop
or
stos
clc
xor
movsl
xorb
mov
dec
push
or
insl
adc
push
scas
mov
xchg
imul
outsl
cmp
xchg
clc
arpl
stos
pop
mov
mov
jno
repnz
mov
sub
test
fsubs
jp
mov
cmp
sahf
inc
or
in
mov
lcallw
mov
adc
mov
pop
stos
aad
jmp
mov
stos
call
cmp
mov
cmp
pop
mov
push
sbb
mov
fisubs
inc
push
scas
clc
mov
aas
int3
icebp
movsb
subl
in
xchg
iret
jecxz
pop
jmp
cli
add
dec
mov
xor
jno
xor
pop
dec
lret
lds
repz
sub
lods
into
push
cli
out
jg
sbb
and
movsl
pop
fbstp
lods
ja
cld
and
andb
fcmovnu
repnz
cmpl
out
and
mov
ss
pop
pop
ljmp
cmpsb
orb
ljmp
push
fld
mov
stos
cmc
mov
call
popf
arpl
xor
pop
xchg
jmp
ret
pop
xchg
mov
inc
aas
sbb
sbb
pop
push
dec
sbb
add
mov
aaa
pop
fmuls
and
aam
arpl
sti
jg
jmp
sahf
pop
addb
mov
les
shrl
pop
fwait
rcl
scas
sti
nop
cmp
jle
mov
lods
cmp
mov
adc
mov
int3
cmpsl
shlb
clc
push
mov
adc
or
test
jg
aad
lcall
out
out
push
stc
jnp
dec
xor
fwait
inc
add
movsb
sub
mov
push
xor
loope
mov
cltd
pop
mov
sbb
pusha
push
cmp
push
out
out
cwtl
fwait
jl
cltd
inc
dec
jbe
xchg
loopne
or
shl
xor
ss
mov
inc
mov
jae
jb
into
add
into
xchg
fwait
add
mov
push
jl
rcll
imul
pop
jno
xchg
sbb
fisttpl
notb
jne,pt
repnz
fs
mov
xor
cwtl
adc
push
movsl
aas
cmp
push
sahf
push
das
movsb
lcall
pop
out
push
iret
pusha
loopne
imul
jbe
mov
enter
into
sbbb
inc
mov
fisubrl
clc
and
arpl
ss
loop
dec
mov
pop
mov
testl
sub
mov
popl
jmp
and
add
mov
push
aaa
movsb
ss
jle
xchg
and
sbb
push
dec
adc
out
data16
call
or
nop
and
add
add
adc
jns
adc
leave
sub
lcall
push
push
pop
pop
std
dec
lahf
lret
add
cmpsl
mov
jp
into
mov
daa
add
cmpsb
mov
stos
hlt
push
xchg
or
ds
out
or
and
dec
cltd
insl
popf
dec
add
xchg
cli
xchg
sbb
add
das
scas
xor
adc
inc
out
inc
xchg
xchg
ret
notb
pop
test
sub
and
adc
mov
xor
les
mov
or
aaa
mov
xchg
lret
and
clc
jg
push
add
adc
sbb
cmp
xchg
insl
insl
sub
loopne
or
add
shlb
inc
jno
or
mov
cmp
xor
clc
pop
pop
iret
scas
sub
aaa
jo
idivb
insb
inc
sti
xchg
jb
xchg
jno
fldenv
mov
and
pop
mov
fdivrs
lcall
call
xor
mov
test
inc
jo
mov
aaa
loop
rolb
jg
jnp
jne
and
push
jns
jp
push
mov
std
insb
mov
pop
mov
mov
sub
pop
iret
aaa
stc
jnp
pop
cmp
jl
pop
sub
add
and
xor
cld
push
xchg
int3
fldcw
jl
cli
in
mov
testl
rol
fidivrl
and
fdivr
adc
mov
push
cmp
rcll
fucomi
and
adc
dec
push
mov
dec
mov
mov
movb
cs
xlat
jp
jle
test
mov
xor
cmp
divl
pop
mov
imul
and
ds
loopne
out
push
shl
test
loop
fmul
xor
test
fs
cmpl
std
repnz
in
pusha
mov
inc
int
pop
fldpi
mov
push
mov
sub
xchg
xchg
mov
iret
or
loope
xor
das
iret
cmp
cmc
mov
lods
outsl
sbb
es
mov
sbb
imull
mov
stos
pop
push
sub
sub
xchg
insb
or
jne
push
aaa
push
subb
mov
imul
arpl
aam
jae
jne
loop
mov
aaa
add
jl
repz
adc
cmpsb
jbe
int3
imul
pop
in
aaa
subps
xchg
sub
out
inc
hlt
jl
jmp
aas
inc
shlb
shl
xor
in
push
inc
jge
or
repz
xor
push
jl
mov
push
data16
scas
jns
mov
cld
in
mov
inc
test
cmp
test
enter
gs
imul
loope
call
fcoms
cmpsb
cli
and
xchg
jg
arpl
push
test
aam
mov
xor
scas
ror
pop
je
sbb
cs
jmp
dec
cmp
and
out
stos
jecxz
lcall
je
or
loope
mov
pop
jbe
xor
shlb
dec
inc
jmp
mov
cmpsl
jbe
mov
sub
fwait
mov
fldl
sbbl
cmp
push
xchg
mov
loopne
sbb
cltd
ja
pop
shrb
push
iret
lret
fs
call
mov
leave
pop
push
bswap
data16
adc
dec
xchg
dec
into
sbb
fsubrl
outsb
inc
mov
add
cmp
js
or
jecxz
addps
stos
movsb
std
mov
xchg
mov
sbb
mov
inc
test
or
mov
repnz
not
xor
pushf
or
aad
es
lock
out
dec
jp
cli
mov
fisubrl
pop
cmovno
test
icebp
jne
repz
aaa
cwtl
ja
jnp
clc
fs
bound
xchg
dec
jb
call
xor
or
and
dec
xor
pop
adc
inc
mov
clc
mov
aad
push
jns
nop
pop
fs
enter
jge
movb
cmc
ja
iret
xor
sahf
scas
daa
mov
fldl
dec
sub
ficomps
cwtl
sbb
imul
test
dec
mov
hlt
xor
or
imul
inc
xchg
lea
nop
jbe
xor
mov
pop
mov
mov
lods
bound
cmc
int3
mov
popa
bound
std
fidivs
and
mov
pop
pop
mov
mov
jno
loope
sbb
cmp
jmp
out
jge
das
xlat
int3
pop
jns
mov
adc
mov
jae
cltd
inc
xchg
stos
mov
push
cmpsb
loop
xchg
icebp
sbb
jne
leave
les
lods
loop
xor
lret
subb
outsl
popa
ret
or
mov
ja
aad
xor
dec
fiaddl
inc
mov
out
push
xor
pop
dec
cwtl
push
aas
lods
xchg
xchg
adcl
cwtl
ffreep
cmp
jae
sub
mov
in
clc
sub
jge
divl
mov
pop
add
popf
inc
mov
insl
pop
shlb
inc
xchg
mov
xchg
inc
shll
mov
mov
add
outsb
js
movsl
repz
out
mov
mov
loope
sti
out
push
inc
mov
mov
nop
push
aad
cmp
adc
push
xor
jo
les
xlat
repnz
sti
arpl
insb
xchg
es
sub
mov
fs
inc
je
jo
aas
outsl
int3
stos
shlb
cmp
mov
addb
mov
ljmp
sub
dec
inc
mov
cmp
popl
cmp
stos
insl
lcall
sahf
adcl
sub
dec
out
jle
mov
xchg
fsubrl
cmp
lds
xchg
addr16
inc
pop
in
pop
addl
xor
and
call
lret
add
mov
sbb
in
cmp
inc
xor
inc
push
add
hlt
pop
popa
adc
push
jb
sbb
int
data16
aad
data16
inc
sarb
out
lea
push
pop
test
and
stc
mov
mov
ljmp
push
and
mov
jle
push
aaa
dec
in
or
std
xor
xlat
aaa
ret
sub
lock
dec
mov
sbb
jp
mov
pushl
fwait
imulb
inc
fmull
jge
movsl
rcrl
mov
sub
jecxz
or
push
push
out
mov
cli
adc
and
jbe
sbbb
dec
jno
adc
jecxz
and
xchg
dec
aam
mov
stc
lea
lret
mov
mov
aad
xor
mov
push
enter
push
pop
iret
ss
dec
inc
fists
mov
mov
cwtl
cmp
xchg
lods
int3
inc
rcr
cltd
cs
insb
sub
push
jge
sar
add
sub
out
add
mov
push
cmp
mov
mov
adc
push
add
es
test
arpl
sbb
pop
mov
loope
cltd
pushf
add
iret
inc
add
faddl
shrb
imul
insb
outsl
scas
out
push
mov
icebp
mov
sbb
mov
mov
test
xor
sub
out
sbb
int
int
sub
xchg
mov
xor
dec
es
lret
sub
mov
inc
mov
pop
sbb
clc
push
rclb
inc
cwtl
xor
xor
fidivs
pop
bound
pop
mov
sbb
lea
xchg
or
pushf
jge
mov
pop
ljmp
jno
mov
lahf
rclb
pop
popa
mov
js
decl
lock
enter
dec
cmpsl
push
cs
pop
out
loop
and
push
sub
orb
push
enter
sbb
pop
fcomp
jae
int3
cmp
cld
ret
adc
sub
call
push
cmove
jle
call
sub
icebp
shlb
sub
sbbb
cmc
jl
jge
imul
dec
std
imul
ret
pop
in
es
and
jle
xchg
pop
mov
xchg
scas
pop
stos
or
adc
gs
xor
sbb
imul
push
mov
mov
out
or
sbb
pop
addb
fs
mov
cli
pop
push
enter
or
test
hlt
xor
xchg
ret
jmp
fsubr
incb
xchg
out
cmp
popf
cli
cmp
push
lods
bnd
sbb
mov
es
adc
stos
or
mov
lret
pop
push
int3
or
sar
and
mov
xchg
addr16
or
fbld
mov
stos
repz
loop
cmp
lock
daa
add
mov
jecxz
xor
xchg
xlat
jae
icebp
xor
cmp
mov
mov
lods
or
fdivl
fisttps
xor
dec
aad
cld
insb
mov
jecxz
mov
pushf
pop
insb
push
repnz
jbe
aaa
aam
test
lcall
jecxz
sub
ljmp
and
hlt
aad
or
out
in
daa
hlt
outsb
jg
push
int
mov
adc
lahf
add
repz
add
sub
je
mov
js
adcb
and
push
jno
xchg
pop
pusha
and
xor
dec
icebp
mov
jl
test
add
xchg
pop
lcall
pop
aaa
test
pop
daa
and
adc
adc
mov
out
pop
cmp
mov
push
ja
cld
jmp
fsubr
ret
loopne
inc
cs
fmuls
pop
pop
imul
test
rorb
xor
xor
orb
cltd
fwait
inc
cmc
adc
dec
jne
cmp
insl
push
mov
lret
dec
ja
adc
lods
jbe
mov
std
dec
out
repnz
add
sti
xor
pop
decb
dec
scas
jmp
lret
ds
in
pop
addr16
scas
daa
and
or
inc
push
xchg
inc
pop
cmpsl
jmp
ljmp
mov
and
push
int
dec
js
mov
ja
sti
mov
pop
out
mov
data16
jg
jmp
stos
push
jecxz
cwtl
popf
mov
dec
cld
in
or
lret
sub
loop
imul
pop
or
js
push
ja
pop
or
add
mov
pop
inc
fistpl
add
push
cmp
sbb
mov
inc
pop
loopne
push
pop
push
das
lock
push
stc
pop
sti
ss
sub
pop
mov
or
mov
push
pusha
je
add
add
scas
loopne
fisubrs
pop
xchg
aas
outsl
push
jo
sub
faddl
pushf
outsb
js
pop
push
stc
pop
call
dec
or
ffree
xor
sbb
dec
xlat
add
add
or
cmp
scas
push
sub
xchg
orl
shll
jg
cmp
xor
sbb
rcrb
sti
loope
mov
js
rcrb
cmp
xor
fwait
daa
out
fcmovne
xor
sub
pop
bound
pop
fistl
sbb
jecxz
dec
sub
je
ljmp
adc
inc
loope
lods
call
sbb
jns
jbe
mov
arpl
push
inc
inc
adc
mov
out
mov
in
xchg
dec
dec
dec
xlat
in
es
cmp
fsubrs
out
sub
inc
cmp
or
shrl
mov
int
fiadds
adcb
lahf
push
insl
or
push
out
mov
movsl
and
inc
insl
push
and
cmp
sti
sub
imul
ja
mov
or
xor
push
xlat
push
xchg
xor
mov
mov
lea
or
cmp
mov
loop
insb
jae
pushf
push
inc
loop
mov
scas
sbb
shlb
sbb
push
push
mov
adc
fsubrl
inc
ja
imul
xor
ss
mov
xchg
jns
lret
add
jbe
pop
sub
out
add
leave
sbb
inc
push
ret
test
mov
repnz
mov
leave
outsb
xchg
movsb
cmp
mov
and
jg
sbbl
into
insl
in
dec
dec
into
outsb
call
sub
addb
push
scas
dec
imul
movsb
mov
lahf
das
ret
xchg
repz
mov
dec
std
jle
les
push
adc
pop
daa
lods
push
lret
cli
sbbb
inc
mov
test
test
mov
jnp
jae
out
sub
push
adc
push
push
dec
mov
xchg
enter
loope
ja
mov
stos
mov
pushf
aam
jmp
sub
cmp
insl
lods
dec
adc
mov
xchg
inc
pop
xor
mov
scas
stc
ja
cmpsl
mov
clc
xor
loop
jno
push
js
call
in
push
int3
add
adc
add
pop
fidivrl
cld
je
push
inc
rcr
mov
xchg
pusha
add
test
inc
cmp
jns
xor
mov
cmpsl
sarl
dec
lret
jbe
sbb
jp
stc
xchg
lcall
or
xchg
stc
cmp
jecxz
sbb
xchg
ret
mov
jl
ss
sti
jl
jmp
adc
test
lods
sub
shll
lea
and
adc
cmp
push
dec
lock
and
cmpsb
xchg
test
or
mov
ss
mov
aam
inc
mov
sbb
xchg
shll
rcll
sbb
mov
push
sub
fadd
push
sbb
in
xchg
sub
inc
xlat
and
or
lods
and
scas
mov
loopne
mov
mov
in
jno
jnp
xor
lea
test
push
push
push
mov
pop
jle
lret
sub
loop
sub
lahf
cmpsl
jle
xor
dec
xchg
mov
sbb
sbb
inc
adc
rclb
pusha
mov
cli
loope
xchg
ror
cmp
imul
sub
mov
mov
mov
es
in
lods
xchg
inc
inc
in
inc
js
inc
mov
cli
push
xor
mov
insb
sub
arpl
push
icebp
dec
pop
inc
xorl
sbb
scas
push
mov
adc
mov
mov
int
mov
xchg
repz
and
test
fdivrp
in
xor
and
or
ja
lods
data16
lret
push
aad
stc
sub
divb
push
pop
mov
sub
enter
pop
xchg
adc
scas
mov
mov
mov
push
cltd
test
fwait
pop
stc
rcll
outsl
lock
cli
sbb
loop
push
mov
int
or
or
lea
js
and
fsubs
dec
jbe
inc
dec
test
cltd
push
scas
aam
ret
lea
aaa
mov
ret
lahf
xor
test
cmpsl
mov
nop
iret
imul
add
or
mov
ffree
or
rolb
call
mov
stos
fistl
in
int
push
dec
insb
adc
mov
cmpsl
xor
cmp
movsl
push
ficoml
and
dec
jecxz
or
inc
pop
in
lcall
sbb
xor
scas
mov
inc
inc
test
fnstsw
idivl
jl
or
enter
inc
xchg
andb
test
gs
cmp
xlat
scas
cs
int3
or
in
dec
orb
stc
aaa
mov
addb
lds
jecxz
imul
mov
mov
nop
lahf
pushf
sbb
and
stc
iret
push
xchg
int3
push
daa
and
sub
cmp
aaa
xchg
or
imul
in
jo
outsb
loope
jl
and
or
fmull
xor
sbb
ret
xchg
jge
hlt
and
mov
mov
int
sub
mov
pop
ds
rolb
add
popf
loope
pop
pop
xor
mov
loopne
inc
inc
dec
in
or
outsl
mov
in
in
push
xlat
fsubl
inc
sub
lea
cmp
test
jle
or
in
ret
jge
sbb
pop
pop
xor
fidivrl
mov
cmp
leave
out
hlt
repz
push
dec
and
cmpsl
add
stc
sbb
dec
fs
and
jmp
jo
scas
cmp
mov
mov
aaa
mov
add
popa
aad
into
xchg
pop
sub
lret
icebp
push
lods
sbb
pop
inc
adc
outsl
jecxz
into
lea
mov
adc
outsl
dec
or
mov
pop
jb
jne
and
scas
pusha
repnz
inc
inc
adc
shlb
jno
push
ja
jns
aam
iret
adc
int3
dec
aas
inc
dec
icebp
gs
push
outsl
mov
mov
add
jle
jnp
jl
jns
xor
shll
loope
mov
call
loopne
and
and
jl
push
test
cld
mov
jnp
mov
testb
das
dec
mov
aaa
shll
testb
sub
sbb
mov
ljmp
push
and
aam
fbstp
xchg
adc
jp
ret
mov
dec
adc
clc
jmp
inc
xor
bound
fstpt
testl
sbb
aad
aam
aaa
mov
sub
orl
push
or
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
les
jnp
xlat
sahf
jnp
test
js
pop
inc
std
in
add
nop
jns
and
push
or
popa
out
data16
lret
arpl
sub
fmuls
xchg
les
dec
cmc
loopne
ja
fwait
adcl
testb
outsb
mov
lret
push
lret
and
lret
dec
cmp
loop
jg
cmp
xor
rcrl
ds
mov
dec
or
test
push
mov
push
xchg
rcll
xchg
addr16
dec
bound
nop
xor
pop
lock
pop
mov
adc
repz
jge,pt
lock
notb
fwait
icebp
push
fiaddl
pop
sbb
mov
cmpsl
push
lods
cmp
cmpsl
mov
in
jo
and
add
push
jl
es
or
idiv
mov
fcom
push
int
pop
xchg
inc
add
pop
outsb
outsl
std
imul
rcll
in
sbb
push
xlat
xor
int
jmp
mov
fdivp
lds
leave
cmp
test
jg
sbb
pop
xor
mov
cmpsl
cwtl
xorb
repz
mov
rcll
or
jmp
aaa
mov
xchg
mov
or
loop
fs
mov
mov
xor
cmp
ljmp
sbb
aas
lahf
lods
mov
mov
mov
cmp
out
lea
jb
or
lret
stc
cwtl
sbb
fucomi
lods
xchg
pop
xchg
pop
incl
call
jae
and
or
push
ficomps
aas
lock
in
mov
rolb
int3
subl
and
mov
sub
jae
lods
lcall
stc
popf
push
fcomip
out
push
scas
setne
adc
or
add
in
jle
push
xor
sub
int
push
lahf
orl
jl
and
nop
pop
cmp
imul
add
xor
jne
out
xor
pusha
pop
sti
sahf
push
cltd
jo
fadds
das
jo
ret
jecxz
out
cmc
hlt
mov
pop
rcll
mov
mov
stos
push
cmpsl
pop
xchg
pop
add
xlat
or
jo
loopne
cmpsl
xchg
cmpl
inc
cld
test
jns
subl
lret
ret
int3
jne
fldl
cmp
cmp
lods
cltd
mov
lcall
fsubrp
xor
rolb
jbe
sub
jge
sbb
mov
dec
pop
mov
sbb
in
stc
lcall
sbb
cmovns
xchg
or
cmp
addb
jmp
imul
lahf
pop
inc
imul
sub
add
out
arpl
push
xlat
jg
aaa
stc
xor
orb
ja
sahf
pop
fs
fwait
scas
in
fldt
mov
add
cmpsb
mov
jae
leave
ja
test
mov
lods
inc
or
ficoml
popl
and
test
mov
into
mov
out
mov
cmp
lret
jnp
jmp
dec
loope
lahf
stos
jle
das
xor
dec
inc
notl
xor
xor
jbe
xchg
push
cmp
int3
mov
in
sub
movl
add
push
add
push
xchg
mov
leave
mov
test
mov
and
push
mov
xchg
push
and
jo
jnp
push
fisttpll
xchg
into
cmc
test
sti
inc
int
mov
sahf
jnp
call
mov
pop
or
lret
mov
aad
add
pop
scas
push
inc
adc
roll
les
in
mov
rep
and
dec
lret
xor
mov
sub
pop
inc
sbb
jecxz
adc
insb
ja
out
push
stc
cmc
repz
les
out
cmp
or
daa
lret
mov
outsb
xor
in
mov
out
dec
adc
hlt
and
das
outsl
mov
mov
adc
outsb
jl
out
in
dec
enter
push
icebp
xchg
les
fnstenv
popa
mov
stc
arpl
pop
or
dec
adc
push
mov
daa
jbe
leave
call
in
idivb
rcl
and
push
out
pop
jne
mov
sbb
add
jle
outsb
lea
test
inc
cli
mov
inc
mov
and
jae
push
jbe
adc
push
into
xor
sub
push
mov
daa
mov
fnstcw
adc
sbb
sahf
pushf
pop
mov
in
leave
movsbl
inc
adc
xchg
scas
lahf
sbb
pop
call
fisttpl
mov
cmp
and
imul
popf
addl
setne
jmp
jnp
cld
push
fsubp
adc
cmc
inc
cmp
xchg
fsubrs
loopne
repnz
fcom
lret
and
mov
mov
sbb
cltd
xor
jnp
fldz
jbe
popa
xor
mov
mov
cmp
xchg
pop
dec
aam
fisubl
ja
xchg
sub
imul
shrb
push
loopne
loopne
std
icebp
lea
jp
data16
jbe
mov
jo
stc
mov
adc
pop
into
xchg
mov
mov
push
inc
pop
js
inc
xchg
aaa
cmp
aad
lahf
inc
aam
jp
aas
loope
inc
int
push
rcrl
decb
pop
sbb
in
frstor
std
or
les
stos
sbb
add
add
xor
mov
data16
mov
sbb
mov
cmc
fidivl
adc
cltd
jle
out
xor
mov
pop
or
jno
xlat
inc
loopne
dec
mov
xlat
fcoms
fidivs
ds
cmp
sbb
into
stos
jbe
sub
adc
jmp
ljmp
sti
enter
sbb
gs
faddl
cmp
movsl
mov
iret
mov
roll
xlat
aad
fcompl
jp
outsl
je
daa
dec
jnp
adc
mov
sub
insb
inc
movsb
adc
mov
and
dec
scas
push
mov
or
divb
pop
aas
mov
jae
call
into
fimuls
xchg
cmpsl
and
jne
in
or
arpl
xor
adcl
pop
out
loopne
mov
ja
in
xor
inc
aad
imul
mov
addr16
pop
test
jbe
or
jmp
sbb
push
sub
inc
in
or
and
mov
data16
movsb
testl
rcrb
aaa
mov
out
inc
mov
gs
push
pop
cs
mov
sub
fildl
cmc
sub
in
leave
clc
lahf
loope
or
je
cmp
and
call
push
mov
dec
fstl
mov
pop
cmpsl
fwait
mov
dec
pop
filds
xor
add
push
loop
out
into
int
mov
mov
add
sub
cli
rcl
jp
loopne
jle
shlb
and
mov
xchg
mov
dec
andl
xor
mov
fisubrs
mov
add
lcall
pop
xchg
outsb
jbe
outsb
sbb
sub
pop
mov
adc
into
orl
pusha
push
int
fisttpll
ret
lods
mov
lahf
or
call
clc
sbb
jecxz
push
and
stos
jmp
sbb
les
pop
aaa
jb
int3
call
sti
imul
jmp
es
bnd
cmp
in
xor
adc
imul
test
push
movsb
loope
mov
bound
jns
inc
inc
inc
out
cmc
ljmp
jb
jg
aaa
sbb
jle
bound
cmp
or
xchg
ja
out
push
in
js
or
ficoms
in
jb
xor
push
xchg
aad
inc
mov
call
inc
cmp
icebp
pop
adc
arpl
testb
xor
lret
aad
pushf
xchg
in
ret
cmp
int
sub
psrlq
in
add
lret
push
cmp
cmpsl
sub
aaa
push
cmp
out
mov
pop
add
ljmp
test
sbb
cmp
out
sahf
sub
call
jle
inc
xchg
sbb
aas
sbb
xchg
fnstsw
ficoms
lahf
inc
mov
push
stc
movsl
test
test
jns
pop
cmpsl
pusha
leave
jp
mov
dec
pushw
stc
out
jge,pn
bnd
es
or
or
aas
nop
jmp
and
lea
jge
lret
mov
subl
iret
xor
adc
in
xlat
jne
stos
inc
cmpsb
cmp
hlt
in
jmp
adcb
shrb
aam
mov
in
dec
int
inc
push
add
cmp
sub
and
add
xorb
rolb
movsb
mov
push
jb
push
mov
nopl
push
movsl
adc
mov
daa
test
popf
loope
movsb
pop
cwtl
inc
sbb
mov
mov
out
adc
shll
jbe,pt
scas
mov
jnp
sahf
lret
rcrl
daa
jns
idivl
shll
or
cmp
shrl
lock
ja
aad
jne
sbb
insl
mov
jp
push
jno
cmpsb
ret
add
cmpsb
sbb
in
cmp
xchg
faddl
cmpb
xlat
aaa
pusha
test
mov
nop
inc
jno
insb
loope
fwait
mov
jp
jno
push
icebp
in
fidivl
sub
pusha
cli
lods
inc
and
out
fdivr
sub
jo
popf
and
shl
mov
pop
test
insl
mov
orb
out
jle
das
ret
jmp
pop
adc
xchg
test
in
fstpt
test
mov
cwtl
lret
xchg
jecxz
pop
xor
push
ud1
cmp
or
or
mov
shl
cmp
inc
repz
aaa
ss
mov
dec
add
xchg
sarb
dec
xor
jle
mov
jns
les
ss
dec
hlt
dec
jmp
lea
push
mov
insb
add
jecxz
pop
lods
sbb
jno
ja
scas
push
cwtl
jp
int3
jecxz
sub
sbb
mov
pop
mov
and
shl
dec
outsl
sub
outsl
mov
neg
pushf
ja
stos
push
mov
mov
push
cltd
outsl
jmp
repz
mov
cli
adc
rorb
mov
mov
mov
clc
ficomps
inc
pop
cwtl
jecxz
mov
mov
jecxz
xor
mov
xor
adc
lods
cmp
push
push
js
and
bound
mov
mov
fs
mov
lret
pop
popa
jmp
fmuls
sbb
push
mov
jl
dec
clc
mov
mov
js
aaa
inc
cmp
lret
pushf
mov
mov
push
lods
hlt
pop
inc
sbb
mov
lahf
dec
fbld
sub
inc
xor
andb
xchg
jno
xor
out
rolb
and
ret
cmp
insl
dec
mov
mov
inc
aam
in
sub
int3
sub
std
and
sbb
leave
mov
enter
dec
adc
leave
add
mov
cmpsl
xchg
dec
shll
fcomp
dec
mov
jge
stc
stos
in
cltd
leave
rorb
movsb
mov
sahf
adc
lds
test
sbb
mov
sub
fldl
inc
test
stc
enter
xchg
in
xor
fadds
dec
mov
mov
add
add
push
es
jge
sub
xchg
or
fidivrl
es
cmpb
lea
pop
rorl
push
lea
mov
clc
mov
pushf
sbb
loop
fnstenv
into
mov
cmovnp
dec
ss
out
sub
rclb
mov
scas
sub
pop
mov
leave
lcall
pop
or
fdivl
push
adc
loope
mov
jmp
pop
mov
add
fcmovnbe
sub
mov
cltd
jmp
jbe
pop
addl
ss
sbb
mov
into
es
aad
mov
ds
pushf
mov
xchg
imulb
aaa
dec
jae
cmp
adc
mov
or
push
adcl
and
xchg
mov
pop
sub
cmp
ret
stos
adc
test
cmp
iret
jecxz
mov
mov
mov
push
cmpsb
jle
mov
mov
cmpsb
cmp
adc
addl
sbbb
fisubs
pushf
ss
mov
mov
sub
pop
cmc
addr16
nop
sub
lcall
das
negb
push
cmpsb
sti
test
cmp
lds
cmp
repnz
aad
ljmp
sub
dec
adc
enter
and
out
ds
leave
lahf
xchg
push
pop
scas
sub
call
mov
inc
dec
scas
aaa
ss
jl
dec
jns
stos
lret
sub
dec
std
jge
push
into
lock
xorb
inc
cmp
aad
iret
add
lahf
jecxz
shrb
inc
push
fstl
dec
mov
sbbb
stc
fistpll
ss
lock
sti
cmc
cmc
loop
jmp
leave
cwtl
in
xor
outsb
rcrb
push
sbb
mov
mov
std
stos
push
push
rclb
sub
and
outsb
cmpsb
add
jle
push
jbe
sbb
pop
add
mov
ret
cmp
xchg
sbb
xor
pop
push
sarl
adc
sub
jg
mov
pop
in
stc
pop
in
imul
adc
sub
jne,pn
gs
cli
xor
lret
push
fistl
hlt
sbb
out
int3
jl
dec
xchg
jmp
jne
sti
xchg
mov
fcomp
push
movsb
cmp
ljmp
jp
dec
frstor
popf
mov
mov
sub
mov
flds
xchg
icebp
testb
adcl
iret
mov
cmc
pop
ret
pop
cld
inc
scas
scas
mov
inc
fucomip
or
iret
in
mov
add
jmp
in
push
pushf
icebp
adc
shll
outsb
mov
jl
int3
xchg
xor
aas
stc
or
jg
pop
xor
imul
lods
shll
fimull
add
daa
in
push
aaa
ja
pop
jge
ret
mov
fxtract
inc
orl
sbbb
into
dec
mov
js
rorl
cmpsl
outsb
jg
int3
xchg
pop
or
cltd
pusha
inc
pop
mov
add
pop
icebp
std
push
and
imul
mov
repz
bound
mov
mov
fcoml
sbb
add
mov
into
pushf
inc
icebp
in
mov
cltd
bound
jae
fxrstor
cmove
aas
pop
dec
mov
mov
sti
mov
pop
jle
sbb
jb
add
bound
adc
mov
mov
cmc
loop
cmp
cmp
inc
jnp
add
loop
inc
mov
es
in
ja
push
stos
pop
pause
fwait
xchg
and
or
sub
push
jo
mov
addl
int
mov
in
bound
add
xor
inc
rep
xchg
int3
loop
cmp
inc
lods
push
pop
fsubr
ss
std
push
mov
insb
ds
ret
movsb
clc
lret
lahf
lods
xchg
push
sbb
adc
jp
outsb
dec
aas
xchg
cmc
jo
in
push
jmp
inc
xchg
dec
movsl
arpl
and
sti
jl
fidivrs
scas
dec
aam
cli
shll
aaa
push
jb
mov
and
popl
std
in
mov
or
je
sbb
push
pop
adc
insl
jmp
in
cs
fld
push
pop
in
lds
and
push
mov
iret
mov
out
mov
or
or
sub
scas
cmp
xor
jb
cmc
or
sub
jg
ret
dec
jbe
xchg
jl
sbb
mov
mov
dec
pop
adc
adc
push
push
mov
imul
sub
fnstsw
sbb
call
mov
test
scas
and
shll
test
test
outsb
mov
xor
aaa
or
pop
and
mov
pusha
mov
push
sbb
loopne
pop
cmp
fs
dec
insl
pop
hlt
jl
add
mov
xlat
fwait
push
js
mov
xchg
dec
inc
sbb
fwait
sub
or
push
mov
insl
dec
movsb
das
lret
fsubrp
in
jbe
pop
stc
jp
pop
stos
mov
push
sbb
test
and
inc
add
jl
pop
inc
add
lea
xor
mov
rorl
ja
or
push
ficomps
mov
test
popf
push
and
cmp
inc
test
lahf
cmc
pop
cltd
inc
xchg
stos
movsl
push
inc
fcomps
or
outsl
jmp
int
xchg
into
mov
cmp
loop
mov
mov
inc
xor
lock
mov
push
and
aaa
popa
inc
sub
js
pop
xchg
xchg
push
cmpsb
push
or
fcmovnu
sub
xchg
mov
xor
test
cli
addr16
nop
cmp
cltd
jne
pop
xchg
adc
jne
fsubrl
push
or
lcall
mov
cmc
jecxz
int3
lds
inc
push
nop
or
inc
shrl
or
pop
scas
mov
dec
popf
mov
add
pop
and
nop
hlt
xchg
jne
mov
push
int3
add
cmpb
lds
idivb
cmp
lea
js
adc
xlat
or
scas
out
push
fldcw
dec
mov
sarl
popa
inc
rolb
jo
scas
pop
xchg
xchg
lret
mov
and
int
ljmp
cmpl
or
aaa
adc
sbb
jl
mov
mov
cmp
out
xlat
ljmp
movsl
test
cmp
fistpll
push
sbb
addr16
mov
cmp
push
out
sub
shlb
inc
add
pop
sahf
xchg
cmp
cmp
xchg
cmp
mov
cmp
inc
jnp
jl
call
fsts
mov
cltd
mov
pop
mov
xchg
popa
bound
je
es
push
add
sbb
push
fadds
push
sti
jp
mov
insl
in
xchg
xchg
imul
ret
loope
adc
xchg
jbe
repnz
sbb
daa
movsl
stos
sub
add
movsb
sub
testb
cs
sbb
ds
out
repnz
mov
leave
icebp
adc
cmp
xchg
daa
sub
add
js
sarl
stos
mov
push
call
loopne
jae
mov
inc
test
push
push
fdivl
and
loope
addr16
in
dec
sbb
out
jmp
sarl
pop
cmpsl
jge
dec
cmpb
sbb
and
mov
adc
mov
into
pusha
or
imul
ss
and
add
pop
inc
es
jge
jecxz
jns
test
or
mov
mov
pop
mov
bound
dec
mov
pop
call
adc
mov
sub
jns
stc
pop
push
test
jnp
leave
jo
cs
or
sub
xchg
int
push
or
and
pop
and
inc
jmp
add
xorb
push
adc
xchg
jecxz
adc
test
mov
and
push
insl
scas
jnp
adc
jp
cmp
inc
test
jb
cmpsl
sub
or
adc
jle
xchg
jae
push
or
sub
cmpsb
dec
push
push
shl
ficomps
push
mov
test
pop
push
push
out
popf
pcmpeqd
pop
and
mov
or
adc
mov
hlt
cmpl
scas
std
loop
add
sbb
dec
insb
pop
addr16
add
mov
pop
push
sub
sub
fidivrs
bound
jbe
rol
into
jmp
das
mov
push
pushf
lret
pop
mov
outsb
mov
pop
cmc
mov
adc
fcompl
call
fwait
in
fisubs
jae
push
cltd
lods
fdivs
dec
loop
testb
lods
pop
inc
sbb
mov
movsl
ss
push
cmp
adc
lock
xchg
push
mov
in
lea
sar
scas
dec
leave
jno
jl
sub
imul
dec
pop
pop
test
or
test
loope
sbb
es
iret
mov
loopne
in
adc
push
into
test
int3
and
pop
push
dec
xchg
add
fistpl
scas
loopne
add
mov
dec
sub
imul
test
repz
sarl
shll
ljmp
stos
cmp
sub
xor
pushf
sub
mov
add
les
dec
add
mov
adc
push
push
pop
xor
xchg
xchg
adc
daa
lahf
lock
mov
or
hlt
push
es
out
dec
jnp
add
push
xor
in
shl
mov
pop
setg
mov
adc
xchg
cmp
dec
or
int
fisubrs
repnz
dec
push
clc
sub
outsl
dec
jbe
pop
dec
sbb
loopne
push
andb
xchg
scas
sahf
mov
or
or
cmp
xchg
or
mov
mul
mov
aaa
jae
ret
out
mov
push
jp
pop
add
adc
pop
fistpll
jge
and
and
sahf
adc
in
shr
xchg
sbb
xor
pop
cmp
xchg
pusha
pop
pop
or
xchg
pop
pcmpeqb
addr16
push
ret
popf
xchg
iret
loope
std
mov
pop
pop
adc
sbb
cltd
rclb
xor
mov
xchg
dec
push
subb
lods
aaa
mov
repnz
mov
pop
cld
dec
in
jnp
or
scas
aas
jle
pop
xchg
in
cmp
mov
popl
ljmp
aam
in
inc
pop
xchg
or
aad
inc
idivl
psubsb
bound
repz
xor
aaa
pop
jle
add
xchg
jb
add
mov
pusha
fadd
pop
loope
in
arpl
cmpsl
push
cmp
jp
dec
shll
cmp
mov
lcall
popa
xchg
jns
sbb
sub
jb
std
into
mov
sbb
cs
dec
pop
lods
rcll
pop
adc
popa
push
xchg
addb
adc
out
push
fistps
stos
sbb
arpl
cld
fists
mov
add
mov
fwait
subb
sahf
cltd
add
pop
pop
dec
mov
pushf
jmp
lret
in
out
xchg
outsb
repz
xchg
aas
mov
cwtl
pop
sti
imul
sbb
adc
push
xchg
push
repz
faddp
jecxz
sbb
or
pop
aam
jo
sub
fildl
adc
sub
out
aas
mov
int
hlt
sub
pusha
xchg
fisttps
push
pop
fidivs
out
lods
adc
mov
jg
adc
mov
rcll
into
test
fildll
movsb
test
in
jmp
or
shl
mov
mul
adc
scas
pop
jnp
jns
leave
imul
xor
repnz
or
sub
pop
jb
push
insl
or
in
pop
sbb
or
lods
mov
xor
adc
lret
or
test
aaa
mov
mov
jp
mov
popa
roll
and
push
rcrl
sbb
callw
popa
jecxz
xor
shl
lods
fsubs
dec
stc
in
cltd
scas
lahf
mov
stc
sub
push
or
shrl
inc
mov
es
nop
out
xchg
jmp
arpl
dec
add
add
inc
mov
rol
inc
dec
fwait
or
lcall
jno
or
icebp
adc
adcb
incb
ljmp
fstl
and
aad
dec
pop
jmp
fwait
mov
and
adc
loop
cwtl
bound
pop
bound
xor
mov
mov
les
push
xor
sbb
pop
lds
arpl
scas
fisttpl
jno
int3
popa
jns
or
cmp
add
cmpsl
scas
cmpsb
icebp
pop
imul
xchg
js
andb
shl
imul
dec
inc
mov
xor
insb
pop
pop
lahf
xchg
jp
dec
mov
push
fxch
jno
mov
or
les
cwtl
xchg
cwtl
jne
add
fildl
push
pop
and
les
es
lods
gs
xlat
adcl
pop
fisttps
popf
jo
mov
jnp
cmp
jecxz
popf
adc
mov
es
or
dec
mov
push
aas
jo
pusha
and
shrl
bound
pushf
out
test
xor
pushf
js
pop
or
mov
mov
imul
in
ficoml
push
pop
push
pusha
sub
jno
inc
xchg
add
adc
sbb
lcall
jg
mov
inc
dec
sub
lret
daa
cwtl
jnp
popa
adc
sbb
bound
mov
cmp
cltd
inc
or
arpl
scas
mov
insb
mov
or
lds
stos
test
and
ds
enter
cld
mov
or
pop
pop
roll
mov
out
sbb
scas
or
dec
fistpll
sbb
pop
std
hlt
push
mov
xchg
mov
mov
dec
jnp
sti
bound
xor
in
imul
iret
push
mov
stos
jo
xor
and
addl
adc
push
popa
mov
outsb
aam
lret
aaa
mov
int3
addps
mov
lahf
lret
jp
mov
les
xchg
fcoml
xchg
popf
inc
movsl
mov
push
pusha
and
ret
sbbl
push
add
fldt
jnp
inc
outsb
stos
add
dec
push
dec
xchg
fdivs
add
xor
cs
jne
imul
ja
cld
xchg
jno
lods
jp
dec
movb
xchg
add
mov
loopne
jne
push
or
rcrb
jp
push
out
test
xchg
xchg
test
loop
nop
outsl
jo
out
insb
sarl
shrl
aam
sahf
mov
push
mov
sbb
add
cs
ret
mov
insb
das
ds
sub
push
mov
jl
mov
xchg
lret
lret
fsubrs
out
pusha
jnp
pop
andl
fnstsw
sbb
sub
mov
das
stc
xor
add
sbb
adc
cmp
jl
add
iret
pop
push
push
xor
xor
out
push
or
inc
je
aam
pop
mov
shll
and
rcr
or
loop
or
dec
jg
dec
invd
push
mov
pop
xchg
in
cmp
jl
xchg
cltd
inc
out
ret
iret
sahf
sub
scas
mov
outsb
loop
cs
cmpsl
insl
xor
cmp
pop
xor
loop
xorl
jbe
jo
cld
pop
inc
dec
pop
inc
xlat
mov
or
jno
mov
sbb
stc
or
push
push
adc
push
dec
scas
call
inc
aam
mov
pusha
cmc
mov
jnp
out
ljmp
xchg
or
mov
pop
inc
imul
and
cmp
inc
mov
inc
and
stc
hlt
xlat
sub
inc
int
jge
lods
jae
rcrb
arpl
mov
xchg
cmc
cld
mov
mov
mov
jo
sbb
and
mov
cmp
pop
mov
decb
fdiv
dec
xchg
inc
les
cmpsb
sbb
adc
lcall
mov
xchg
pop
sbb
sti
repnz
hlt
repnz
mov
jbe
xor
in
cmp
int
mov
negl
lret
in
jg
adc
fistl
mov
xor
mov
sti
lret
cmp
add
inc
fs
mov
pushf
addl
and
lods
push
jo
or
add
scas
sub
adc
movsl
repz
cmpsl
in
sub
jae
fwait
bound
lds
ret
ret
fistl
rcl
sub
jge
enter
in
cmp
repz
cmp
dec
in
fxch
ds
and
xor
xor
mov
mov
fwait
stos
ja
sub
jge
icebp
cmp
mov
mov
cmp
mov
push
and
adc
push
adcl
sbb
adc
inc
pop
mov
jp
jg
scas
dec
jns
inc
xor
and
rclb
pusha
xlat
push
inc
ljmp
cmc
lcall
aam
pop
and
fistpl
inc
add
in
std
into
mov
nop
insl
stc
add
jo
jle
andb
fistpl
mov
test
push
outsl
ret
in
mov
lock
lods
arpl
fisttpll
loopne
popf
cltd
cmp
testl
mov
pushf
loop
arpl
cmpl
movsl
xchg
ljmp
int3
roll
idivb
push
ss
and
xorl
pop
jecxz
mov
out
jecxz
add
xchg
sbb
sahf
xchg
shl
adc
stos
cmp
fisubl
xor
jbe
xchg
lcall
push
xchg
mov
dec
mov
inc
sbb
sbb
pop
and
fs
aas
fs
mov
cltd
popa
and
bound
pop
notl
push
enter
out
aad
test
rcrb
pop
xor
xchg
jmp
sbb
inc
dec
xchg
clc
cmp
xchg
xor
push
mov
ror
adc
int3
aas
sbb
push
and
and
jo
or
out
pop
scas
push
push
adc
xchg
mov
and
inc
loopne
pop
mov
loopne
or
rorl
test
sub
insl
mov
jb
popf
cmpsb
dec
stos
add
pop
lea
lds
jnp
sahf
lret
lret
testb
mov
flds
shrb
lea
arpl
cmp
or
loop
pop
lods
nop
notb
gs
inc
enter
or
jns
jbe
jmp
pop
mov
jmp
test
test
ljmp
sbb
sar
xor
cld
add
xchg
jns
movsl
sub
sahf
mov
pop
sub
std
lods
mulb
xchg
lock
push
mov
fwait
movsb
add
faddp
dec
faddl
ljmp
mov
aas
mov
lods
jmp
in
cmp
loopne
push
aam
gs
xchg
pop
push
ja
pop
push
jmp
cmp
sbb
outsb
pop
bound
adc
add
stos
or
sbb
imul
mov
cwtl
imul
pop
fbstp
push
cmc
call
mov
rclb
inc
aad
mov
repnz
mov
lock
xlat
jge
lret
cli
sub
sub
out
int
pop
adc
fimuls
shlb
mov
pop
mov
xchg
gs
aas
cwtl
ret
ds
fwait
dec
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
stos
mov
jl
mov
mov
std
or
loope
inc
xor
aad
sub
mov
dec
sub
pop
cmp
sub
xor
mov
nop
adc
pop
in
fs
lret
pop
gs
outsb
fstps
nop
mov
pop
mov
cwtl
int3
xchg
fidivrs
sub
sbb
and
jl
movzwl
jb
sub
ret
call
insl
add
test
pop
js
inc
or
sbb
sub
pushf
inc
dec
dec
sti
inc
mov
mov
bnd
jnp
addb
jbe
jns
pop
pop
mov
cs
xor
fdivp
mov
pop
cmp
dec
pop
hlt
roll
cmpsb
push
scas
in
std
movsb
ss
imul
xor
sub
mov
push
push
cmpsb
mov
and
aad
and
push
ret
mov
js
sbb
push
jmp
stos
jbe
repnz
jg
loopne
xor
adc
jmp
aad
adc
inc
cli
sti
add
enter
inc
xchg
mov
sbb
jg,pn
fs
test
inc
push
inc
inc
cmp
cltd
pop
subl
pop
jge
out
cmp
subb
andl
pop
inc
inc
sub
mov
xchg
clc
xchg
push
loopne
scas
dec
and
push
test
movsb
out
push
cmp
outsb
fidivrs
xchg
int
outsl
push
and
mov
push
loope
cmc
dec
sarl
lret
in
je
aad
lcall
ds
xor
xor
pop
mov
mov
lods
push
jno
cmp
dec
pop
add
mov
lret
cmp
and
sub
leave
ds
arpl
push
stc
mov
mov
mov
adc
push
sbb
fcoml
testb
mov
mov
divb
inc
ja
mov
andb
sub
push
pop
shlb
stc
paddd
dec
mov
push
out
dec
addr16
lds
push
loop
pop
scas
xor
pop
mov
notb
shll
pop
lahf
sbb
or
push
movsb
js
mov
fsts
and
cmc
bound
push
jb
push
shrb
mov
xor
xchg
ljmp
sbb
dec
lahf
gs
dec
mov
mov
subb
imul
push
into
into
mov
popf
out
stos
das
idiv
pop
xchg
es
icebp
inc
not
ds
add
imul
loopne
lcall
aaa
aam
outsl
ljmp
insl
xchg
adcb
mov
cli
rorb
xchg
add
cs
out
pop
std
enter
pop
icebp
or
stos
adc
inc
jb
or
mov
dec
andb
xor
enter
lea
ja
cmp
popa
repnz
add
push
dec
mov
cmp
jbe
sbb
push
pop
roll
xchg
aam
mov
sar
call
test
adc
sti
add
mov
xor
loopne
in
sti
add
repz
push
cli
movsl
pop
addr16
adc
mov
xor
enter
repnz
jns
push
and
or
and
mov
cmp
aam
insb
adc
nop
jne
shll
pop
sti
ljmp
mov
sahf
xor
jb
or
jbe
push
outsl
cli
lret
pop
ds
dec
lds
mov
das
jae
std
mov
jle
lcall
cmp
xor
in
push
enter
mov
mov
into
jno
clc
mov
stos
jno
andb
outsb
mov
int
xlat
loopne
mov
sbb
out
lock
mov
aas
into
ss
out
pop
mov
mov
and
shrl
mov
pop
sbb
cmp
push
mov
add
dec
or
inc
clc
and
ja
bound
fs
push
es
iret
aad
xchg
xor
daa
ds
inc
icebp
xchg
leave
pop
adc
aad
push
int
aam
sti
in
idivb
outsb
jl
cltd
cld
or
hlt
ret
loopne
pop
xchg
inc
std
xor
pop
jbe
sbbb
lds
cmp
fyl2xp1
xor
hlt
adc
cltd
xchg
or
fnstsw
lea
enter
dec
pop
leave
mov
into
jge
push
jb
mov
nop
movsl
mov
sub
dec
inc
movsb
rorl
sub
and
push
xor
adc
imul
in
inc
pop
jnp
ja
or
add
cmp
inc
mov
push
inc
push
sub
lea
in
loop
adc
iret
adc
adc
shr
dec
lods
add
shlb
ret
sahf
inc
mov
fs
cmc
rol
dec
adc
jno
adc
outsb
adc
cmpsl
fbld
iret
fdivrl
mov
sbb
rorl
in
or
xor
test
inc
push
jno
shrl
sbb
mov
fcmovnbe
insl
jb
push
cs
sbb
outsb
enter
in
xor
adc
add
sub
mov
hlt
loopne
adc
iret
inc
add
inc
lea
mov
and
dec
push
lret
pop
cwtl
lock
jmp
adc
loope
orl
div
out
sub
mov
mov
sbb
popa
push
stc
pop
repz
adc
mov
mov
idivb
mov
ret
dec
ret
imul
push
ja
shll
cmp
fwait
scas
xor
arpl
sbb
mov
xor
xor
mov
adc
pop
repnz
pushf
out
imul
es
sbb
mov
ret
dec
xchg
add
movsb
decl
add
or
les
lock
mov
popl
movl
lahf
cmp
pop
aad
xor
lea
aad
jnp
adc
jp
test
pop
sahf
adc
or
mov
sub
inc
sub
stc
cmp
mov
das
call
mov
out
lcall
in
mov
das
inc
cli
int
inc
lcall
or
test
sbbb
pop
jmp
push
add
aad
and
popl
and
ret
dec
xchg
ss
fmuls
cmp
loop
push
shll
popa
rclb
push
sbbb
dec
mov
negl
jns
hlt
lds
popf
add
sahf
and
ds
dec
adc
sub
incl
lcall
gs
jbe
movsl
sub
xor
jno
mov
xchg
movsl
cmp
jnp
cli
loopne
shlb
pop
popa
mov
sahf
mov
pop
and
sbb
ljmp
lret
and
call
pop
out
or
sbb
push
mov
inc
scas
in
cld
jg
mov
test
jae
stos
rorb
je
xchg
cmp
push
inc
mov
not
xchg
loop
add
cmp
arpl
and
fwait
repz
cltd
lock
fwait
aaa
sbb
cwtl
loopne
ret
lods
arpl
pop
jb
jb
imul
pop
xchg
xor
jmp
pusha
iret
sbb
in
add
shll
push
cmp
js,pn
sarl
movsl
jne
jne
mov
cld
push
clc
jge
lcall
jbe
cmpsl
mov
imul
add
sbb
mov
or
fcomp
xchg
pusha
sar
in
jg
jb
out
arpl
lahf
sbb
out
out
dec
pusha
or
push
ret
cmpsb
pusha
setae
and
mov
jno
and
subl
push
test
inc
rcl
js
loop
inc
popf
jmp
push
aas
or
xor
je
mov
int3
cmp
adcb
into
push
js
in
testb
mov
pushf
inc
paddq
xchg
push
mov
into
lods
lret
and
xchg
or
jecxz
stos
xlat
or
sbb
mov
or
sahf
xchg
mov
gs
adc
int3
xor
push
out
inc
sub
pop
dec
aas
xchg
into
or
js
shrb
rcrl
lds
cs
ljmp
incb
mov
lret
sub
fxch
ret
in
push
in
shll
inc
ds
js
in
lods
lcall
movsl
outsb
push
mov
xchg
ret
pop
nop
cmpsb
es
mov
sbb
loope
mov
sub
stos
add
in
gs
jno
dec
jbe
mull
xchg
test
mov
jmp
pop
jge
fwait
jmp
jo
mov
out
in
movsb
sub
jo
mov
xchg
icebp
aas
cmpb
dec
dec
jb
movsb
mulb
adc
test
dec
in
mov
or
sbb
xor
jp
pop
int3
es
ror
int3
push
xor
jne
adc
push
dec
pop
lret
insb
cld
inc
inc
cmp
out
xchg
and
pop
mov
mov
dec
dec
add
lret
es
lock
xor
mov
adc
arpl
push
and
xchg
and
shll
ja
ret
arpl
and
and
mov
ktestb
sub
ja
nop
js
ret
jl
xchg
sbb
bound
nop
sbb
push
fisubrl
insl
divb
aaa
cmp
xchg
sbb
lock
inc
cmpsb
and
xchg
popa
jae
mov
mov
jecxz
mov
xor
xchg
xor
test
push
push
cmp
mov
in
js
sar
jmp
fscale
lds
fnstcw
pop
das
aaa
lcall
jno
into
mov
sub
popf
shl
fldcw
jecxz
cmp
jo
lcall
jmp
dec
pop
add
sub
inc
roll
sbb
xor
test
or
outsl
mov
push
push
repz
xchg
popa
adc
ljmp
aaa
add
push
cmpsl
xchg
sar
mov
test
ss
xchg
mov
sub
and
aad
int3
dec
add
jae
imul
insb
pushf
add
popa
inc
push
or
pop
test
inc
xchg
cmp
mov
jecxz
inc
ret
in
test
xchg
dec
fnsave
adc
cmp
daa
jmp
jl
or
mov
aam
insb
les
mov
sub
sub
xchg
test
lea
mov
imul
mov
daa
jnp
ja
ja
adc
gs
aad
add
push
sub
leave
jnp
lret
clc
dec
out
jg
xchg
mov
sbb
lods
into
pusha
arpl
mul
aam
mov
dec
sub
pushf
lret
pop
xchg
jo
je
mov
test
insb
imul
mov
xchg
lea
out
pushf
popa
and
mov
fiadds
xlat
imul
add
adc
and
mov
mov
cs
xor
and
sahf
cmpb
add
mov
push
outsb
fsubp
popa
sbb
jns
mov
and
jbe
lahf
lcall
pop
outsl
ret
mov
test
adcb
lahf
cmp
out
sub
les
mov
gs
xchg
fildll
fnstsw
or
cmpsb
insb
fsubrl
dec
pop
dec
test
insl
xor
xor
stc
out
push
cmp
mov
add
int
mov
aad
push
pop
adc
lret
cmp
punpckldq
push
call
test
adc
dec
out
cmp
test
pop
popf
mov
out
xchg
leave
sub
es
cmpsl
movl
and
movsb
push
test
aad
rolb
push
mov
loopne
jne
lcall
sub
outsl
or
test
sbb
add
sbb
int
adc
add
lds
cs
mov
inc
mov
jg
cmp
xor
xchg
jo
add
jns
std
daa
enter
mov
dec
xchg
popa
sub
jnp
jns
std
jp
cmc
push
jmp
fmul
rcl
icebp
pushf
mov
cmpb
and
jmp
stos
addl
aad
fimull
jbe
jle
sbb
push
inc
cmp
and
pop
loop
leave
pusha
mov
fwait
mov
xor
cmpsl
mov
test
add
sub
popa
push
pop
adc
fsubs
aam
fadds
dec
imul
mov
pop
sbb
jmpw
add
cld
rclb
sti
push
loope
pop
test
xor
outsl
pop
mov
popa
inc
pusha
push
loop
xchg
xor
movsl
das
xchg
lahf
imul
arpl
push
pop
andl
cmp
pop
lods
addr16
loop
add
cmpsb
fwait
dec
lret
aad
sub
inc
mov
mov
loope
imul
push
xchg
inc
daa
repnz
gs
movsb
popa
add
pop
and
movsl
xchg
cmp
jne
pop
jl
sbb
movsb
mov
pop
ds
ss
xchg
pop
addr16
lds
pop
mov
fwait
lds
or
iret
sti
mov
addb
mov
divl
jp
rorl
js
mov
jo
xchg
adc
jge
and
daa
xor
or
out
out
sub
sub
push
pop
sahf
sbb
push
in
iret
xchg
add
adc
pop
jle
push
lods
jmp
sti
addr16
fidivrl
fstl
lods
and
mov
cwtl
jno
inc
pop
negb
insb
jl
lods
shr
jg
jge
or
lcall
mov
or
in
out
ss
and
movsl
or
insl
sar
sub
sub
out
or
or
in
jns
lcall
fwait
test
add
mov
vpsraw
out
test
mov
and
mov
xchg
cmp
inc
push
bound
cmpsl
sbb
lret
mov
xchg
cli
divb
mov
cmp
loopne
fsubl
popa
fwait
dec
lcall
into
stos
pop
js
jo
jg
shrb
inc
add
in
mov
pushf
mov
movsb
aas
mov
push
sub
sbbl
loope
push
mov
cli
dec
aad
xor
imul
xor
loop
ror
or
xchg
and
mov
stos
push
fldl
fcmovbe
cmp
aad
cmp
in
add
mov
fwait
lods
icebp
call
fldenv
lock
jno
sub
inc
and
xor
jbe
mov
imul
nop
add
or
ss
mov
cmp
fmull
mov
in
ja
movups
push
rcrl
loopne
fcom
mov
rorl
lds
mov
adc
clc
insb
leave
adc
push
jg
mov
ljmp
mov
inc
sahf
rclb
fcomip
sub
add
es
jne
outsb
xchg
arpl
addl
out
cmp
push
cmp
test
xchg
push
adc
out
jo
and
sub
push
gs
sahf
movsb
mov
sub
mov
int
push
aaa
aaa
lret
mov
cmp
push
fwait
jnp
jo
jb
jmp
pop
sbb
ljmp
cwtl
jmp
and
jl
or
mov
mov
movsb
inc
int
lret
aad
test
inc
ljmp
dec
ret
mov
jle
pusha
shlb
jno
popa
pop
aad
push
scas
jne
inc
gs
mov
pop
dec
int3
mov
mov
xor
or
cmpsl
into
scas
dec
js
stc
pop
mov
or
sub
lds
jge
scas
add
mov
xchg
stc
inc
pop
mov
jmp
nop
sti
jecxz
mov
xchg
test
xor
popa
fildl
mov
xchg
sarl
push
mov
push
subb
push
dec
stos
lods
imul
inc
data16
push
shlb
xchg
stos
ret
pop
cli
lock
xchg
in
cs
push
xorl
test
bnd
scas
andb
xchg
jl
adc
ds
or
inc
mov
movsb
cmp
or
fdivl
in
jns
leave
jl
add
mov
mov
push
loope
rcrb
mov
cmc
enter
js
xchg
das
mov
inc
cmc
cmp
insl
xor
dec
lock
push
sbb
sub
mov
or
mov
jns
add
dec
out
das
and
mov
xchg
insl
add
jecxz
xchg
ret
pop
pop
xchg
fsubl
push
mov
int3
outsb
pop
orb
xor
es
or
add
jmp
sub
push
cmp
in
cmpsl
pop
mov
xchg
loopne
std
clc
mov
scas
sub
pop
adc
xchg
scas
pop
push
xor
pop
ret
push
and
hlt
push
loop
lods
fwait
pop
dec
call
lods
sarb
into
xlat
push
aad
mov
lods
add
sub
and
loopne
ss
sarb
cmp
sahf
loop
scas
push
loopne
xchg
stc
push
insl
and
or
out
sbb
sub
cli
lret
das
dec
push
mov
push
cmpb
sti
jno
repnz
in
popa
and
push
inc
lcall
sbb
loop
jne
in
mov
sahf
fcoml
adc
inc
std
fnsave
out
in
iret
or
inc
outsl
dec
loopne
jge
call
xchg
leave
gs
pop
adc
jp
les
rcr
ljmp
jnp
loopne
cmp
cmc
out
movsl
push
ja
flds
ss
inc
out
xchg
cmp
les
or
sub
mov
pop
push
and
sbb
dec
pop
call
test
sub
push
mov
loope
orl
mov
lea
push
xorl
add
pop
xor
pop
xchg
aam
stos
loopne
jb
mov
ljmp
rorb
cmp
scas
lods
pop
adc
in
adc
sbb
and
xchg
sbb
mov
and
xor
out
enter
outsl
in
or
mov
xchg
mov
jle
jbe
mov
shll
stc
and
loope
ljmp
mov
sub
ss
sarl
sbb
popl
inc
sbb
fisubrl
test
or
and
neg
jns
jg
lahf
mov
jns
fsubrs
jmp
repnz
repnz
xor
xchg
in
sub
sub
imul
dec
pop
or
xchg
dec
movsl
lods
popf
outsb
fimuls
sbb
loop
dec
ja
sub
in
pop
and
lret
imul
mov
outsb
xor
daa
pop
ret
pop
jle
inc
cs
in
jmp
jmp
jns
mov
adc
add
and
pop
xchg
call
push
movsl
enter
notl
or
adc
xchg
movsl
and
insb
cld
lods
and
mov
testl
loop
or
int
pop
loop
clc
mov
cld
stc
ljmp
jae
fdivrl
mov
movsb
arpl
shrb
or
out
push
inc
jle
add
clc
lret
xlat
negl
in
fcomps
xchg
addb
imul
negl
cmp
dec
inc
mov
jle
stos
pop
mov
es
sub
xor
ljmp
push
xchg
mov
inc
iret
test
or
int3
mov
divl
fisubrl
cmpsb
mov
adc
mov
test
push
push
dec
lcall
fisttpll
mov
aaa
push
jl
xchg
pop
stos
cld
sarl
or
cltd
mov
test
insb
mov
jl
xor
jo
ds
cmp
insb
aas
mov
push
jne,pt
loopne
fsubs
mov
cmp
mov
and
sbb
add
inc
or
mov
inc
mov
int3
or
gs
push
mov
insb
sbb
xchg
xor
les
add
stc
push
mov
test
mov
and
mov
nop
jb
ret
imul
mov
inc
xchg
js
inc
or
fldl
mov
out
adc
jg
jmp
push
sub
sub
xor
jle
mov
mov
out
push
mov
test
out
mov
cli
mov
lock
out
or
popf
hlt
stos
les
lret
in
pop
pop
shlb
sub
inc
dec
dec
nop
out
mov
mov
rol
pusha
xor
push
mov
pop
or
cmp
lods
pushf
and
mov
cli
mov
add
stc
int3
or
adcl
mov
or
lock
cltd
outsl
movsl
int
add
pop
or
std
pop
dec
add
gs
pop
dec
or
call
add
testl
jbe
sub
es
insb
test
in
insb
jbe
gs
fdiv
cmp
jbe
mov
sub
pop
xchg
loop
and
out
sub
bound
mov
lds
xchg
mov
mov
in
mov
call
int
xor
mulb
ret
sahf
lea
nop
jne
pop
loope
add
push
rorb
push
jb
adc
cmpsb
std
and
push
fwait
sti
test
jmp
add
push
xor
lea
pop
aam
jmp
xchg
sbb
mov
cwtl
pop
dec
or
popf
push
cmp
call
push
shll
in
mov
inc
mov
nop
negb
or
aaa
in
sub
xchg
mov
push
sar
jo
mov
mov
xor
loop
cltd
pushl
mov
xor
shlb
rcrl
ss
adc
rclb
inc
adc
xchg
int
scas
xlat
les
js
stos
in
inc
shr
je
jge
mov
arpl
xor
int
push
jmp
push
jae
and
or
cmpsb
pop
push
add
shl
pop
fidivrs
testb
call
mov
or
cld
cld
leave
and
and
loop
pop
xor
mov
adc
pop
test
cmc
sub
notb
insl
ficomps
ss
lds
mov
add
mov
sti
add
lods
cld
call
push
mov
call
push
cli
pop
and
sbb
data16
xchg
cmp
or
pop
hlt
or
mov
subl
aaa
xchg
fsubs
mov
lods
jne
fiaddl
lahf
cmp
jmp
adc
cmp
ficoms
shlb
mov
mov
adcb
je
jle
adc
adc
pop
mov
mov
lods
or
sub
nop
xor
xadd
sbb
and
rcl
hlt
aas
adc
aaa
cmp
push
jne
mov
outsl
lret
stos
sub
in
sbb
mov
je
cli
push
xor
ss
mov
and
lds
sub
cs
push
out
pop
arpl
cmp
dec
inc
jmp
sub
ret
pop
pushf
outsb
xor
inc
testl
push
test
xchg
or
sti
test
es
xchg
and
in
negl
mov
add
daa
jo
mov
jecxz
popf
push
loope
sbbl
loop
push
mov
add
mulb
ja
movb
or
add
aam
shlb
mov
loope
pop
mov
in
fnstsw
mov
mov
gs
xchg
lds
nop
orl
mov
inc
cld
into
cli
aad
int3
lds
xchg
xor
int
add
jl
xchg
jl
mulb
mov
push
or
pop
idivl
orl
xchg
es
jle
mov
mov
xchg
xor
mov
sahf
js
xchg
mov
js
popf
and
jno
mov
inc
scas
pop
mov
daa
in
cltd
sub
cmp
push
dec
in
fsts
cmp
mov
ja
pop
iret
ja
push
rolb
test
arpl
sahf
data16
sub
push
jnp
cmp
cmp
push
jo
ss
aas
sub
or
fcomi
dec
mov
push
push
push
dec
lods
add
scas
arpl
mov
mov
jo
cld
in
jp
outsl
and
sbb
jg
aam
outsl
mov
push
adc
lock
or
hlt
xchg
dec
pop
das
or
popf
sbb
and
push
les
xchg
or
pop
and
rol
pop
cmp
or
lods
push
mov
ret
shlb
roll
into
add
pop
mov
fsub
adc
mov
jnp
jg
xor
les
mov
xor
inc
push
mov
push
cmpsl
lods
sub
push
ljmp
jle
inc
mov
dec
sub
aaa
and
pop
cmp
mov
mov
add
popf
addr16
cli
cmp
dec
dec
cmpsl
and
pop
iret
lock
outsl
or
jmp
xlat
xchg
shlb
sub
ret
xchg
jo
aaa
movsb
pop
adc
adc
and
mov
sub
sub
xor
mov
fistps
sub
mov
push
rorl
in
repz
jl
loope
sub
andps
cld
in
pop
dec
sbb
stc
xchg
lods
sub
xor
fwait
cmp
pop
cmp
jnp
add
add
xor
arpl
or
and
sub
fistl
lock
jg
add
movsl
jne
sbb
lock
popl
shll
xchg
popf
fldcw
mov
mov
stc
shll
lods
lds
repz
rclb
xchg
jno
andb
sbb
pop
fdivrs
or
pop
cmc
cmp
test
mov
inc
add
xchg
xor
dec
dec
movsb
mov
sbb
mov
inc
inc
mov
mov
inc
sbb
shrl
scas
xchg
rcll
inc
pop
rorb
cs
cmpsl
in
or
dec
mov
ror
gs
leave
lahf
fnsave
aad
cmp
das
fimull
jnp
in
and
inc
cmpsl
loopne
jnp
add
clc
fbstp
es
mov
fsubs
pusha
loope
xor
nop
dec
or
std
and
fwait
leave
scas
aad
imul
xchg
dec
scas
and
lea
or
add
fsubrs
mov
scas
test
push
xor
leave
adc
dec
pop
jo
inc
jae
and
mov
mov
jo
std
orb
or
jbe
fwait
bound
test
sbb
aas
popf
inc
pop
idivl
mov
mov
pusha
pop
in
lods
and
inc
fs
das
lret
and
cmp
sbb
dec
push
add
sub
pop
mov
dec
nop
pop
xchg
push
ljmp
and
in
xor
cmp
push
adc
or
mov
adc
inc
mov
pop
xchg
push
adc
outsb
pop
xchg
push
push
dec
sub
add
mov
cmp
or
rcl
cld
push
push
ret
lret
rcrl
xchg
icebp
dec
jbe
aad
lock
push
mov
cmpl
jae
outsb
pop
aas
dec
in
mov
xor
mov
mul
jne
sbb
mov
adc
pop
pop
xor
add
stc
add
mov
inc
scas
inc
jg
adc
jb
movsb
xchg
and
xchg
xor
mov
and
divb
mov
pop
inc
addb
stc
add
push
jae
pop
dec
loop
cmp
pop
jmp
jbe
dec
or
shll
int
jbe
movsl
pusha
les
sbb
out
xchg
inc
dec
add
dec
enter
aas
pop
push
mov
xor
nop
or
dec
loop
mov
fdivl
rcr
repz
pop
mov
jmp
sbb
loope
fstl
or
aas
rcll
clc
aad
das
add
xor
xchg
mov
cli
adc
sub
lahf
mov
xchg
lds
int
xor
dec
push
xor
mov
cwtl
or
xchg
sbb
jmp
loopne
cmp
lret
cmp
mov
xchg
cmp
cmp
push
in
mov
jg
std
rcrb
je
std
pushf
xchg
xchg
xorb
int
pushf
aam
xchg
xorl
jmp
jbe
xchg
je
fisubs
mov
mov
cli
mov
push
inc
cmpsl
cltd
or
push
lcall
or
push
pop
xor
fdivrl
push
dec
cli
cmpsl
and
aam
ss
sub
sub
cmp
cmp
stos
push
mov
adc
mov
mov
adc
js
jb
sarl
dec
les
cs
imulb
pop
push
jecxz
pop
xor
adc
pop
jle
imul
arpl
or
aam
cmp
rcrl
mov
out
jp
fsubrp
pushf
jbe
ret
shll
xor
icebp
int
adcl
jge
push
dec
mov
inc
imul
imul
or
push
mov
pushf
mov
add
rorb
lea
cmp
bound
xor
icebp
pushw
lods
sbb
inc
addr16
cld
jae
pop
stos
jbe
mov
fldenv
fwait
arpl
rcr
cmp
pushf
mov
into
jle
ret
and
sbb
aaa
sub
aas
paddw
pop
dec
push
lods
ret
shrl
and
mov
and
mov
fadd
arpl
jne
dec
xlat
sub
adc
and
inc
xchg
dec
cld
xchg
nop
dec
pop
into
xchg
xor
loope
inc
add
inc
inc
idiv
aas
push
xchg
notl
mov
comiss
inc
and
rcr
sub
sti
movsl
outsb
pop
jg
test
mov
inc
push
cmp
jne
pop
gs
repz
xchg
xchg
add
jmp
cli
stos
pop
je
fcomps
mov
mov
lock
insl
jp
jnp
and
ffree
inc
in
lods
loopne
jo
sbb
inc
mov
cli
sbb
sbb
push
and
lret
out
jmp
jno
and
insl
daa
xlat
gs
pop
mov
pop
push
xchg
cwtl
mov
pusha
bndstx
push
sbb
xchg
pop
in
hlt
call
out
and
xchg
xchg
int
sub
inc
pop
adc
and
mov
je
mov
repz
in
aas
ljmp
ljmp
xchg
sbb
xchg
jbe
hlt
cmp
or
fs
or
andb
loopne
fstpt
mov
push
inc
fcompl
xchg
sub
repz
rorl
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
inc
in
bound
sahf
jnp
bound
jmp
xchg
push
popf
bound
lock
fidivrl
adc
pop
cwtl
mov
adc
xchg
addl
aaa
and
lcall
dec
sti
mov
je
ljmp
jns
xchg
pop
mov
sti
mov
les
sbb
or
repnz
push
mov
imul
push
scas
mov
add
jns
dec
xchg
test
test
int
inc
lods
lds
and
xchg
pop
sahf
adc
cltd
scas
sti
mov
shl
cli
inc
test
xor
xor
mov
insb
mov
mov
pop
call
add
mov
scas
cmp
adc
sti
pusha
and
mov
jl
in
adc
cld
inc
push
push
push
dec
cli
xchg
adc
xlat
repz
cs
mov
mov
std
push
dec
and
out
jg
cli
stos
es
push
mov
or
dec
push
sub
adc
stc
sti
jae
pusha
call
cmpsl
push
jle
inc
aas
ljmp
lock
fisubrl
xchg
pop
jns
xor
lea
fdivrp
and
inc
fistpll
add
xchg
cmp
pop
std
rorl
int
in
fcoml
jne
pusha
jne
pop
test
sbb
and
push
movsl
jmp
and
je
loop
mov
pop
and
push
div
adc
xchg
mov
sub
aaa
test
mov
xor
stos
cld
cmp
or
repnz
or
jbe
insl
sti
int3
out
pop
leave
and
inc
push
fsubl
adc
and
and
pop
lock
iret
in
dec
insl
and
nop
ljmp
nop
sbb
les
pop
rorb
dec
ja
sbb
cmp
inc
jno
mov
lcall
fldenv
daa
lock
mov
movw
mov
mov
dec
xchg
arpl
push
adc
test
stc
inc
mov
mov
sbb
leave
push
xor
mov
jecxz
cld
pop
mov
inc
ret
and
movsb
and
notl
add
sahf
jmp
mov
shld
negb
jecxz
sub
testl
sbb
mov
inc
dec
es
or
mov
push
push
arpl
sub
cmp
arpl
loope
lock
pushf
jecxz
dec
ret
push
mov
repnz
je
push
push
enter
inc
addr16
xchg
loop
jg
jbe
nop
or
xor
add
test
or
add
test
mov
lcall
sub
je
ds
xchg
adc
inc
fiaddl
int3
fs
clc
aaa
pusha
and
add
cmp
out
out
sub
fcompl
jne
sub
imul
adc
pop
pop
mov
fwait
xor
fiaddl
inc
mov
adc
mov
insl
xchg
cs
mov
ficomps
cwtl
mov
test
jl
dec
mov
xlat
mov
mov
in
sbb
jbe
out
mov
popa
roll
jne
xchg
mov
cmc
xchg
jnp
xchg
dec
mul
adc
je
fcmovu
jno
and
push
jg
imull
jmp
adc
in
pop
adc
lahf
push
jnp
sub
shr
ret
or
jb
insb
mov
xchg
in
inc
lock
jl
fldl
pop
cmpsl
aas
mov
popa
fimull
add
mov
sarl
aas
xor
mov
xchg
sbb
pmulhw
iret
and
add
bound
je
dec
cmp
call
scas
inc
pushf
lcall
ret
pop
mov
pop
jo
fwait
push
insl
sub
mov
or
pop
jecxz
fsubr
or
jbe
mov
jecxz
les
addl
or
xchg
xchg
stos
ss
rol
rol
jecxz
mov
lods
dec
sbb
xlat
cmp
pop
adc
divb
and
sub
mov
mov
cs
dec
sbb
leave
xchg
mov
nop
aaa
stos
mov
lahf
in
jge
jne
inc
test
dec
ljmp
stos
daa
xor
pushf
outsl
and
in
jmp
push
pop
xor
mov
bound
pop
mov
inc
xor
inc
sub
into
ret
sub
jae
push
push
cmpsb
fmul
push
adc
in
mov
push
xor
fsubrl
test
lds
test
insl
in
jge
add
lcall
ja
xchg
jno
data16
in
test
xor
fisubs
sub
adc
and
test
lret
loope
sahf
pop
mov
mov
dec
mov
mov
lea
mov
inc
mov
sbb
sub
mov
cmp
push
ret
or
sub
repnz
push
jb
add
dec
jbe
dec
addb
cmp
xor
outsb
cmp
nop
insl
sbbb
mov
lcall
mov
or
mov
pop
cs
arpl
mov
nop
das
adc
popa
cmp
or
aas
mov
flds
or
mov
test
adc
cld
dec
test
add
mov
sbb
out
popf
jge
ret
pop
sbb
in
fidivrl
adc
jb
adc
movsb
sub
pop
scas
push
add
adc
bound
addr16
push
push
mov
push
jle
insb
inc
and
mov
imul
push
popf
jne
aas
lea
sub
enter
popf
push
movsb
push
mov
add
and
or
test
add
imul
jg
int3
xorb
jne
xor
sahf
ja
mov
mov
inc
jp
imul
jmp
std
loopne
test
rolb
inc
test
or
ret
loope
push
cmp
lea
ret
add
scas
jo
push
inc
adc
adc
xor
mov
xchg
test
stc
fwait
xchg
inc
addr16
int
sbb
pop
jns
xor
stc
xor
subb
push
jg
imulb
filds
sub
stos
movsl
pop
or
fcoms
cmp
outsl
sub
push
lock
xchg
mov
inc
jge
inc
xor
mov
nop
imul
and
jl
mov
pop
jae
shll
call
test
cmp
or
mov
push
js
xchg
fisubrl
mov
into
test
xorl
lcall
outsl
add
cwtl
sarb
mov
stos
or
loopnew
das
dec
mov
mov
dec
lods
xchg
dec
mov
mov
mov
jo
jmp
lcall
push
fmul
scas
js
mov
js
rorl
lea
cli
xchg
add
mov
scas
jns
mov
stos
adc
arpl
out
ss
dec
mov
loop
push
or
xor
cli
inc
incb
mov
fcomps
in
push
neg
insl
adcb
mov
push
and
lock
or
movsl
adc
dec
xor
les
hlt
cmp
loopne
mov
ret
mov
cmp
sub
and
popf
inc
lret
and
aas
lret
aam
push
imul
mov
shlb
mov
out
imul
es
push
fwait
daa
xor
std
push
add
sub
pop
xor
adc
pop
test
popf
inc
std
pop
xchg
stos
bound
jbe
mov
mov
xor
dec
inc
arpl
fdivrs
stos
push
mov
jge
add
inc
mov
fsubrp
sub
jp
scas
mov
mov
pop
pop
hlt
insl
in
fdivrs
sbb
bound
lret
lods
out
mov
cli
xchg
test
cmc
roll
test
mov
sub
shlb
addl
es
cmp
mov
call
jle
je
mov
mov
dec
enter
sti
lcall
addr16
ret
dec
ror
mov
insb
lret
call
inc
pushf
lds
or
iret
cmpsb
mov
jmp
lcall
cmp
mov
enter
xchg
les
pusha
mov
push
push
dec
shl
or
ss
dec
add
orb
mov
stc
scas
xchg
pop
rcr
xor
and
or
fcomps
into
adc
mov
xchg
adc
mov
cmc
fldt
dec
and
pusha
xor
jbe
cmpsl
bound
dec
jp
jge
dec
mov
out
push
ret
inc
mov
test
lods
adc
xor
pop
fstpl
sbb
repz
mov
mov
adc
lahf
xor
ss
fcmovne
push
jno
xor
inc
loopne
mov
pop
cmp
mov
pop
fucom
stos
mov
aad
cmpsb
xchg
dec
pop
clc
sub
enter
or
jnp
inc
sbb
add
jmp
inc
nop
add
dec
fs
mov
mov
leave
dec
xor
push
jnp
bnd
and
pop
in
mov
or
adc
push
jb
or
das
or
leave
xchg
lgs
push
jne
inc
cmp
sub
shlb
push
test
orl
and
mov
adc
icebp
in
popf
test
pop
dec
inc
aad
adc
adc
fcmovnb
iret
insl
jns
xchg
add
mov
and
add
pusha
jmp
pusha
imul
int
ljmp
jbe
fucom
add
popf
pop
arpl
sarb
xor
xchg
jae
sbb
outsl
push
out
jo
rcll
outsl
int3
rcl
aas
mov
add
cltd
ret
in
sub
push
push
mov
decl
shl
dec
and
in
nopl
lods
sub
shrl
stos
push
sbb
inc
sti
and
loopnew
ss
inc
mov
test
mov
jne
loope
add
sbb
notb
sub
outsl
or
das
push
outsl
mov
test
adc
cmp
repnz
icebp
mov
dec
stos
lea
inc
or
icebp
iret
jns
ljmp
mov
dec
daa
push
inc
push
jne
mov
jmp
js
adc
lret
fmul
sub
xor
pop
add
inc
and
pushf
andb
xor
je
out
fs
mulb
cmp
repnz
stos
ja
imul
adc
xor
xchg
mov
dec
flds
ja
das
mov
xchg
ljmp
and
andl
or
out
dec
rcrb
lods
sub
arpl
dec
rcll
dec
loopne
and
test
mov
out
or
dec
or
dec
jae
lds
sbb
mov
or
dec
xor
inc
jns
imul
mov
xchg
push
and
lods
out
dec
xor
push
fadds
and
cmc
mov
ljmp
push
cmp
push
into
dec
dec
sbb
divb
xor
daa
outsb
lea
mov
ljmp
push
mov
int3
xor
aad
inc
jg
scas
loopne
jecxz
mov
or
inc
pop
sbb
sub
test
mov
out
inc
dec
dec
mov
add
jae
rcrb
push
loop
push
cs
imull
mov
fbld
ret
scas
loopne
mov
neg
or
push
mov
testl
in
pop
pushf
mov
cmpsb
stos
stos
inc
shlb
sub
aam
inc
sbb
mov
mov
sub
sbb
xchg
cmp
xlat
loopne
mov
and
daa
scas
aam
bound
sub
out
jl
sar
cwtl
pop
push
adcl
mov
pop
or
mov
push
fs
mov
pop
mov
sar
xor
into
dec
ss
repnz
ficompl
pop
jge
inc
rcll
loopne
cmp
xchg
loope
mov
sub
adc
cmc
xor
ds
cwtl
in
fstpl
aam
xor
xor
jno
in
mov
add
jg
fidivs
addr16
mov
sbb
shlb
jl
das
test
testb
in
movsl
xlat
cs
sbb
jmp
cmp
pop
lock
enter
pop
sub
test
or
outsb
xor
ficompl
push
xor
repnz
popa
jbe
pop
cmp
arpl
xchg
cmc
or
jle,pt
push
stos
mov
pop
and
jle
cmp
xlat
lcall
scas
dec
push
mov
in
mov
fstpl
mov
push
test
enter
add
out
jbe
clc
movsl
shl
push
loopne
lock
int
and
pop
push
inc
jmp
or
movsl
lea
movsb
or
insl
fbstp
lahf
mov
int
xor
aad
test
or
pop
push
pusha
test
loope
loop
or
aad
jmp
mov
and
sbb
xchg
scas
movsl
pushf
mov
dec
arpl
fwait
ja
cwtl
jge
mov
or
cmp
xor
adc
mov
push
adc
sub
out
add
ret
jne
test
scas
test
mov
pop
pop
outsb
push
cmpsb
adc
ds
xchg
in
cmc
adc
int3
sti
jo
rcl
lods
dec
push
fnstcw
sbb
mov
mov
mov
dec
movsb
jns
mull
ret
dec
cmp
stc
aas
loope
popf
movsl
out
dec
aas
push
pusha
xchg
xchg
jmp
sbb
sbb
lock
popl
orb
in
xchg
shrl
push
cltd
or
mov
icebp
jp
fcom
mov
stos
sub
int3
loop
stos
fs
scas
cld
test
xor
lahf
inc
pushf
fnstenv
cmpsl
int
and
adc
stos
sbb
or
mov
movsl
mov
xchg
cld
xor
out
arpl
adc
add
xchg
ret
push
rorl
add
orb
pop
shll
and
cmc
test
cmpsb
mov
addr16
sub
imul
int3
outsb
xor
fsubrl
adc
pop
lods
mov
imul
cmpsb
icebp
push
pop
pop
push
sahf
or
ja
jns
and
shll
clc
xchg
add
stc
jnp
aam
or
mov
fwait
add
dec
les
mov
jb
xchg
aas
outsb
push
test
mov
outsl
lods
js
cmpsb
sub
cli
inc
sti
sbb
movsb
mov
xor
cmpl
push
jle
imul
dec
or
pop
xchg
iret
lods
dec
stc
push
ret
mov
jns
mov
ljmp
mov
xor
or
testl
pop
ret
loopne
jb
push
int
mov
outsl
pusha
jo
adc
out
mov
cwtl
push
push
ret
orl
and
lods
pop
push
sub
nop
data16
je
test
xor
xchg
pushf
dec
push
xor
pop
push
test
mov
xchg
dec
aad
les
sbb
scas
iret
inc
mov
test
loop
pop
cmp
or
mov
and
sub
or
loope
addr16
push
rcrl
adc
in
add
scas
hlt
or
or
and
fmuls
xlat
add
or
pushf
pop
popa
scas
xchg
jg
incl
shr
ljmp
jmp
adc
xorb
push
out
out
shrl
xlat
xchg
cmp
out
cli
adc
adc
pop
aad
or
iret
ja,pt
out
popa
pop
and
imull
orb
fcompl
test
notb
cmp
mov
jbe
dec
cmp
mov
and
pop
jb
data16
add
out
test
inc
insb
lods
jo
fisubrl
in
mov
push
arpl
mov
jg
cmp
fidivrl
in
jl
inc
and
and
dec
pop
mov
xchg
pop
in
test
xor
pop
mov
push
mov
mov
adc
in
out
pop
adc
and
es
xchg
inc
pop
mov
mov
cmc
jmp
pop
mov
bound
inc
out
cmovne
inc
push
and
jg
push
ret
jge
jmp
test
cmp
mov
int3
cmpsl
sub
mov
rorb
push
sbb
mov
fdivs
adc
pop
out
lcall
dec
cmp
push
dec
shll
fcomi
rcrl
xlat
lcall
xor
fisttpl
xor
and
mov
popa
sub
mov
nop
pop
fldz
dec
int
imul
fstl
gs
int3
cwtl
and
adc
inc
test
cwtl
cmp
xor
jnp
mov
mov
mov
adc
mov
sub
hlt
xlat
and
xlat
pop
dec
enter
mov
fcoml
rcrb
mov
and
aaa
mov
push
data16
leave
and
xlat
mov
inc
int
cmp
jns,pt
sub
ffree
sbb
fldt
mov
mov
insb
mov
ret
mov
push
dec
jns
dec
dec
insb
push
and
jne
lock
xchg
pop
cmp
and
shl
mov
adc
pop
mov
out
nop
mov
sbb
icebp
or
fiadds
in
jns
push
jp
ljmp
jno
mov
cmp
xor
xchg
filds
push
pop
leave
inc
jae
adc
cld
sbb
pushf
add
data16
mov
pop
test
fsubp
daa
sub
mov
js
mov
or
das
pop
mov
xchg
adc
push
out
ljmp
jle
sbb
inc
dec
fistl
mov
pusha
sbb
addr16
lret
mov
into
addr16
push
mov
xchg
out
pop
and
xchg
aaa
mov
push
mov
scas
cmp
ja
cld
shlb
mov
cmp
dec
pop
shlb
int3
les
imul
shrl
dec
or
dec
add
jo
int3
inc
pop
nop
push
pusha
or
dec
mov
jns
or
push
dec
lds
sbb
cltd
or
rorb
iret
loopne
and
mov
inc
loope
sub
test
mov
xlat
inc
jb
and
dec
sbb
fs
outsb
or
rcrl
leave
scas
sti
cltd
mov
jae
repz
xor
fs
es
jnp
sub
mov
lods
xchg
mov
out
mov
das
fmul
or
lret
mov
inc
push
mov
and
xchg
fistps
shl
xchg
cmp
mov
xchg
mov
sbb
fimuls
ret
adc
jmp
in
sarb
dec
int
sbb
mov
or
inc
cmp
mov
mov
sub
fsubl
into
jmp
fnstsw
mov
popf
imull
jle
filds
jecxz
xchg
rcll
loopne
rcrl
out
orl
inc
push
lods
dec
clc
pop
mov
push
pop
in
push
mov
outsb
iret
test
and
sub
les
inc
mov
push
cltd
testl
aas
push
or
ffreep
sub
adc
mov
push
cli
mov
sbb
les
inc
rep
cmp
dec
int
leave
xchg
mov
and
push
sub
lock
sub
adc
or
idivb
dec
adc
pop
lcall
icebp
xor
popf
and
pop
ret
mov
add
xor
mov
sarl
mov
jl
xchg
into
dec
shlb
cwtl
adc
mov
mov
cmp
xorl
out
shrb
pop
leave
mov
dec
das
or
mov
xor
lret
jnp
nop
xor
loop
xchg
fsubl
jle
cli
xor
js
sbb
shlb
xchg
lock
xor
pop
jecxz
jno
adc
outsb
repz
adc
xchg
mov
pop
or
jecxz
icebp
in
testl
je
inc
or
fwait
xchg
in
popa
or
push
dec
fdivs
lcall
sub
in
jb
xlat
mov
mov
mov
loopne
pop
les
push
movsb
push
or
mov
jae
push
movsl
push
push
js
aaa
mov
pusha
mov
aaa
sbb
loopne
ret
xor
in
jne
fstpt
adc
dec
or
adc
mov
std
pop
notb
stos
sub
fstps
dec
ds
mulb
push
call
mov
cmpb
and
shlb
cmpsl
stos
insb
ds
xchg
sti
imul
xchg
icebp
adc
inc
not
push
test
fistpll
mov
aaa
cs
mov
jne
out
xor
cmp
jg,pn
addr16
fcompl
sti
cltd
fsts
push
dec
push
movsl
xchg
inc
pop
or
flds
dec
inc
inc
push
cmovbe
pop
mov
int3
pop
unpckhps
ja
adc
rcr
cmp
lods
mov
stc
rcrb
mov
cli
data16
cmp
shll
imul
ljmp
enter
cmp
mov
imull
jecxz
loope
sub
pop
ljmp
lds
call
loopne
xor
stos
and
cmpl
push
inc
enter
and
push
clc
movsb
push
pop
inc
adc
lock
lods
std
and
and
js
inc
mov
popf
mov
out
sub
mov
std
mov
xchg
loope
cmpb
mov
jmp
int3
lret
and
stos
fisttpl
xlat
pop
push
lret
adc
push
enter
aas
pop
lea
insl
dec
dec
sub
pushf
mov
pop
pop
aas
push
scas
je
repnz
mov
xor
loop
lcall
push
pop
cmp
stc
push
enter
aas
cld
jnp
aaa
mov
mov
leave
mov
cltd
sbb
xchg
aas
out
ror
cli
inc
sbb
std
imul
into
mov
ljmp
sub
or
aas
pop
sub
dec
insb
sub
push
mov
bound
jb
shl
nop
das
inc
and
iret
push
lahf
fadds
rclb
addb
inc
push
pop
pusha
movsb
xchg
push
mov
pusha
sub
push
and
popf
push
cld
dec
sub
pop
inc
mov
inc
push
fucomi
pop
fmulp
imul
ret
inc
adc
aaa
shr
mov
mov
scas
adc
push
in
or
pop
push
lods
adc
movups
cmp
ja
mov
insl
outsb
loop
mov
pop
mov
push
scas
dec
movsl
jl
xorps
jbe
add
out
jmp
jae
sub
lds
sbb
imul
pop
push
inc
pop
adc
pop
mov
mov
fsubrl
push
movsl
sub
jno
push
mov
shll
ficompl
in
mov
mov
aam
out
outsb
in
sbb
cs
faddl
scas
jb
xchg
loope
je
cmp
xor
imul
jne
scas
lock
xchg
pop
in
inc
or
mov
rcrb
aaa
repz
cld
cltd
pop
sbb
aam
add
sbb
push
mov
cmp
push
out
add
cmp
popa
jecxz
jno
or
ss
into
in
cmp
xlat
jb
mov
inc
xchg
daa
sti
add
mov
lcall
andl
js
pop
repz
pop
pop
jo
mov
sub
push
aad
sbb
ja
xchg
lret
lahf
mov
pop
test
sbb
jmp
xchg
pop
cmp
xchg
ret
jno
mov
adc
inc
in
adc
pop
adc
xor
in
gs
arpl
xor
vpaddw
repnz
or
sahf
add
push
jne,pn
inc
cmp
sub
inc
or
add
cmp
xchg
cld
imul
adc
cmp
cld
ljmp
xor
jle
shlb
cmc
xor
mull
in
fnsave
je
inc
dec
mov
mov
lock
in
imul
inc
xchg
pop
mov
adc
add
adc
icebp
fistps
mov
sub
jg
jo
jle
shrb
or
insl
leave
insl
mov
pop
cmp
pop
stos
outsb
cmc
ja
mov
negw
cmp
xor
insl
and
stos
and
jnp
mov
shrb
jl
inc
pop
daa
and
fmull
sbb
fdivrl
and
add
in
cmp
dec
cmp
test
jecxz
cmpsb
xor
inc
in
cwtl
nop
gs
jne
int3
data16
fidivrs
add
mov
in
and
or
loope
pop
or
je
pop
cld
jbe
lods
cli
pop
les
js
xchg
clc
dec
push
pop
push
xchg
jle
in
repnz
lock
inc
in
pop
aam
call
repz
cmp
and
sub
outsl
add
enter
adc
movsb
and
mov
pushf
inc
sub
lock
mov
add
ret
sti
lods
lods
mov
jle
fdivs
mov
inc
lods
lret
adc
mov
cmp
lods
stos
dec
xchg
mov
ljmp
sti
lds
sbbl
mov
jle
ljmp
pop
loop
mov
mov
xor
testl
mov
cltd
jns
xor
std
jecxz
jno
es
and
insl
incb
jns
and
jg
xchg
movsl
push
orl
bound
sbb
outsb
adc
jmp
out
pop
out
insl
cmc
or
cmp
ljmp
cmp
ja
xor
sub
lret
mov
jae
sbb
arpl
push
sub
vpcomub
xchg
jl
fildl
sahf
lods
icebp
cwtl
push
inc
mov
das
xor
pop
dec
aad
ja
pop
pop
outsb
push
adc
jne
jb
mov
nop
into
sbb
mov
xorb
xor
in
scas
sbb
addr16
outsl
dec
push
aam
stc
and
sub
outsb
dec
adc
insb
jnp
js
mov
or
rcr
mov
mov
cmp
pop
lods
xchg
addl
push
lods
out
out
js
inc
jecxz
das
sti
jmp
std
in
rcrb
in
adc
call
xchg
dec
pop
xchg
mov
std
xlat
shlb
dec
popf
dec
data16
inc
adc
inc
aad
jmp
dec
xor
fbld
or
orb
or
ret
cmp
add
jl
stos
mov
lea
movsb
stos
ret
and
mov
icebp
cmp
adc
pop
sub
xchg
ljmp
and
adc
inc
pop
pop
push
std
mov
add
sbb
pop
movsl
pop
in
pop
jo
fisubrs
subb
and
arpl
idivl
aas
lods
dec
rorb
push
mov
jg
push
jecxz
insb
xchg
das
out
stc
mov
or
aad
notb
adc
int3
xchg
sub
jne
add
add
loope
inc
mov
imul
inc
sbb
lret
iret
es
sub
mov
jmp
push
leave
sub
push
jo
mov
aaa
fcomip
jne
test
cwtl
jns
mov
das
ret
mov
out
gs
pop
sbb
rclb
adcl
int3
scas
scas
mov
xor
adc
and
test
outsb
jmp
shld
pop
loop
hlt
mov
clc
xchg
cwtl
mov
cmp
add
fidivs
fadd
push
push
jae
cs
pop
les
and
sbb
cmp
ret
and
jge
aam
cmp
push
aam
repnz
out
pop
push
in
xchg
xchg
scas
mov
in
mov
scas
dec
stos
push
sbb
cld
mov
popl
adc
lret
mov
push
and
das
mov
adc
sbb
adc
daa
das
enter
mov
stos
scas
jg
mov
mov
mov
dec
daa
sub
inc
pop
cmpsb
repz
mov
cld
pop
es
inc
enter
push
push
dec
mov
into
je
ror
dec
outsl
pop
sub
das
roll
sub
lret
mov
pusha
cmp
lods
mov
js
xchg
stc
inc
popf
fcom
or
pop
and
jo
push
xchg
jmp
push
int
and
adc
ljmp
das
or
mov
testl
sahf
inc
movsb
xchg
pop
es
jp
add
aaa
enter
mov
xor
leave
pop
xor
pop
stos
into
push
push
cmp
xchg
jno
icebp
xor
xor
xchg
fcmovu
lods
iret
add
and
in
dec
stos
bound
push
push
imul
mov
lds
cmpsb
test
add
aam
lock
test
or
cs
data16
ffree
test
pop
and
fmuls
mov
push
xor
jo
or
gs
imul
andl
pop
add
das
daa
clc
insb
inc
repnz
fisttpl
cmp
jl
or
or
rorl
lods
push
sub
mov
sbb
icebp
subb
lret
pop
adc
cmp
sub
cltd
cltd
and
push
and
imulb
or
or
outsb
fisubs
xor
lret
or
fdivrs
xor
invd
test
or
clc
cltd
movb
push
stc
mov
push
rorb
lret
std
jmp
icebp
push
and
lods
dec
pop
lret
or
jge
aas
pushf
inc
int3
movb
in
push
pop
popf
xchg
mov
out
dec
fiaddl
mov
or
cltd
mov
jge
push
xchg
pop
arpl
mov
test
inc
xor
dec
ss
adc
loope
roll
pop
mov
pop
sub
shlb
cmp
aas
jmp
lods
fs
mov
pop
pop
push
fwait
je
push
shl
loopne
and
int3
ret
adc
hlt
push
adcl
inc
xchg
inc
movsb
or
cmp
jne
mov
aam
dec
push
test
data16
add
inc
xlat
pop
dec
mov
and
add
or
fstpl
fstl
push
mov
sarl
pop
mov
out
insl
push
ljmp
shl
jo
ss
push
xchg
imul
or
xchg
dec
test
push
jg
sub
fcoms
and
mov
rcrl
ret
jb
mov
jnp
fs
sbb
dec
jge
or
pop
movsb
and
push
jmp
xchg
jp
arpl
aam
test
scas
ret
hlt
add
enter
test
fildl
mov
scas
cwtl
xor
mov
mov
icebp
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
push
fdivrl
sahf
jnp
and
rclb
fxch
push
or
adc
dec
shrl
out
lds
xchg
push
xchg
jae
and
xchg
jo
lods
mov
insl
dec
push
fldcw
xor
mov
hlt
incb
jmp
aas
mov
push
inc
dec
mov
mov
aam
push
cmp
ror
ljmp
sahf
adc
lods
mov
test
aad
add
mov
mov
xchg
push
out
mov
xorl
mov
incb
std
xor
and
adc
sub
aas
jge
lods
mov
ljmp
negl
fisttps
aas
icebp
mov
es
outsb
clc
scas
xlat
and
iret
shlb
or
mov
in
inc
pop
fnstcw
xchg
fs
jg
mov
jno
out
sub
jge
fbld
mov
push
ficoml
movsb
je
add
push
scas
and
push
jp
jb
mull
mov
xchg
lret
mov
pop
or
push
int3
ljmp
testb
xor
int3
cli
xchg
pusha
sub
jb
push
jb
das
inc
cltd
jp
mov
outsb
testl
cmp
mov
dec
adc
repz
jmp
bound
push
jecxz
mov
sbb
aaa
jne
fistps
fldcw
insb
dec
fdivr
mov
loop
mov
iret
or
mov
mov
sub
mov
aad
test
sub
and
xchg
inc
icebp
and
out
add
ljmp
iret
push
mov
inc
pop
cmpsl
cli
das
push
mov
sbb
cmp
das
adc
mov
in
lret
sub
mov
cmp
in
dec
and
sub
lods
pop
pop
mov
sbb
fs
test
ljmp
add
dec
mov
mulb
and
scas
mov
mov
sbb
fcomip
xor
xchg
rorl
jge
jae
xor
stos
dec
aad
inc
cmp
mull
sub
sbb
push
adc
test
lock
sub
xor
mov
les
dec
push
mov
pop
or
and
xchg
enter
pop
jg
push
sahf
cld
ss
scas
adc
imul
or
je
xor
or
mov
xor
js
repz
call
adc
outsb
dec
pop
pop
pop
loopne
sbb
sub
stc
pop
jl
mov
xchg
clc
inc
lea
push
pusha
not
popa
jg
push
repnz
test
add
fiadds
mov
movsl
jecxz
xor
pop
fisubs
mov
lds
in
mov
daa
dec
mov
pop
push
ss
add
icebp
sub
lret
dec
push
pop
and
add
pop
xor
ret
filds
imul
and
dec
ret
adc
cmc
dec
dec
inc
ror
cmp
into
and
or
and
jo
pop
andl
cltd
pop
stc
xchg
jo
inc
sub
add
adc
ret
mov
mov
iret
aaa
adc
xchg
fbld
cmp
ret
sub
mov
movsl
lahf
xorb
cmp
dec
and
test
aam
sahf
cwtl
dec
arpl
idivl
pop
sub
adc
mov
scas
lret
lret
mov
mov
sub
pop
fsubl
and
or
or
int
and
pushf
xchg
call
mov
out
fs
bound
xor
inc
lret
mov
insl
ret
or
mov
push
inc
push
movsb
repnz
repz
jno
sub
inc
push
sbb
leave
dec
mov
dec
aam
sahf
movsb
xor
daa
movsl
mov
test
andb
in
adc
dec
cmc
subl
inc
ror
dec
ss
xor
and
inc
fstps
add
pop
stos
cwtl
pushf
or
adc
sbb
inc
mov
lcall
ret
imul
xor
xchg
std
add
cmp
xchg
dec
xorl
dec
adc
adc
xchg
inc
call
nop
sub
pop
cltd
aas
mov
add
mov
pop
loopne
lret
adc
jne
xor
jno
mov
sub
or
rorl
mov
in
xorl
int
fcomps
repz
sub
subl
js
pushf
insb
loope
inc
push
test
or
mull
xchg
scas
dec
scas
push
jge
pop
and
add
jnp
nop
icebp
mov
push
sub
push
imul
into
add
jp
fstl
mov
bound
inc
mov
mov
rcrb
pop
inc
or
outsl
in
daa
shlb
add
fiaddl
test
jne
fstp
leave
movsl
scas
loop
sub
xor
lds
jg
movsl
xchg
sarb
xor
xor
adc
aad
adc
mov
es
stc
mov
xor
mov
lahf
out
cmp
mov
push
or
push
cmpsl
xchg
mov
dec
mov
add
in
sbb
pusha
pusha
stc
push
dec
xor
inc
inc
mov
sbb
in
or
fistpll
inc
cmp
xchg
lods
bound
out
cwtl
mov
repnz
xchg
add
adc
fsubl
clc
add
into
gs
movsb
sub
cmp
insl
ret
les
leave
sub
add
or
adc
mov
jmp
bound
sbb
fstpt
cmp
or
mov
pop
das
jmp
rcr
js
rcll
adc
mov
out
mov
pushf
in
xor
mov
pop
les
loopne
lods
lret
xor
fnsave
jle
sub
rclb
pushf
jbe
imul
pushf
mov
inc
adc
mov
fmull
cld
sbb
shl
pop
mov
scas
inc
or
xchg
push
jge
push
xor
repnz
divb
jmp
inc
test
fldcw
insb
cwtl
lret
adc
repnz
cwtl
fwait
sub
pop
xor
and
xchg
pusha
inc
cld
std
js
cwtl
hlt
fcmovbe
push
push
push
lds
pop
sbb
rorl
jmp
fisubl
mov
or
and
cli
icebp
into
mov
adc
cmp
lahf
sub
adc
mov
das
gs
popf
jns
push
cmpsb
shr
push
push
adc
and
dec
pop
hlt
test
mov
fbld
cmp
les
push
fs
in
sub
fadds
js
dec
imul
js
outsb
pop
cs
rorb
sub
xor
daa
add
mov
inc
mov
push
rorb
in
insb
xchg
push
adc
mov
loopne
pop
lds
jo
dec
adc
je
testl
out
or
xchg
mov
mov
jo
jl
inc
cmp
mov
adc
in
pop
mov
mov
jl
aaa
cli
fcmove
mov
and
repz
mov
xchg
sub
faddl
cmp
outsl
fs
inc
pop
mov
cmp
dec
mov
mov
gs
stos
jle
inc
or
push
cmp
mov
test
push
and
mov
aam
push
lahf
insb
std
sub
xorl
mov
rolb
sbb
int3
jnp
dec
xor
xor
cltd
dec
fnstenv
daa
mov
jb
jecxz
js
in
insb
sahf
pop
fcmovb
pop
ficompl
aas
inc
dec
ret
sub
inc
int
or
adcb
imul
ret
pushw
xor
imulb
enter
push
sub
insl
scas
xchg
pushf
xchg
and
ret
pop
hlt
dec
cmpsb
lahf
loopne
imul
or
insl
adc
ret
dec
pop
jno
xor
sbb
fstp
stc
out
lret
mov
sub
pmaxsw
test
stc
jb
jmp
outsb
push
pop
rcrb
sbb
ss
addr16
sbbl
adc
jbe
pop
sbb
pop
jmp
add
add
jmp
fdiv
sbb
pop
fs
cs
sbb
inc
ja
mov
jne
les
cmp
dec
imul
inc
leave
ds
ja
scas
xlat
sub
adc
js
cli
sahf
into
shlb
shlb
push
divb
push
pop
divb
popl
adc
fwait
aad
push
test
jg
insb
adc
loopne
jns
sub
mov
test
arpl
call
mov
cmp
rorl
lds
dec
ror
inc
jno
test
adc
xor
test
inc
jl
gs
mov
lods
popf
faddp
dec
pop
mov
out
in
mov
es
lret
lcall
popa
fwait
xchg
dec
ret
or
sub
lret
and
dec
divb
add
cld
or
movsl
fsts
ja
popa
push
add
cmp
dec
loopne
out
mov
fwait
jge
push
dec
lea
fsubrl
adc
adc
stos
jg
push
add
clc
dec
push
fwait
sbb
jns
subl
imul
cltd
add
lcall
jnp
popf
adc
repz
xor
sub
xchg
pop
jne
stos
pop
dec
mov
cltd
pop
addr16
xor
pusha
sbb
sti
push
sub
aaa
ror
scas
or
pushf
or
popa
push
add
cmp
inc
sbb
jo
adc
addr16
cmpsl
inc
pusha
mov
insb
jge
int
scas
cld
mov
fdivrs
out
pop
scas
cmp
cmp
jae
enter
jo
sbb
push
in
xchg
sbb
mov
mov
mov
enter
subl
inc
xchg
das
cmp
pushf
or
sbb
jns
cmpsb
call
sbb
mov
jno
push
cld
lods
mov
pop
das
inc
out
icebp
std
cmp
xchg
bound
jle
xor
add
jg
inc
daa
and
lcall
dec
rorl
inc
inc
negb
into
jge
mov
ret
dec
popa
xchg
pop
sti
ja
es
sub
sbb
in
xchg
mov
mov
sbb
sub
pusha
repz
mov
jo
sbb
or
in
movsl
mov
ljmp
sti
rorl
in
mov
mov
stos
adc
xor
rcll
in
push
sub
jnp
repnz
sbb
dec
insb
jne
jecxz
dec
mov
cld
or
in
negb
cmpsb
sbb
adc
inc
pop
sbb
push
adc
out
fsubr
pop
daa
mov
push
sbb
repz
inc
rolb
mov
add
add
cmp
cli
mov
sbb
repnz
pop
mov
inc
or
fwait
adc
rorb
in
out
in
push
popf
rorb
push
xchg
outsl
aas
gs
push
insb
xor
push
scas
stos
jne
dec
movsl
lods
inc
xchg
lea
cmpsb
inc
mov
push
rorb
lcall
jo
adc
inc
adc
js
mov
jmp
add
cli
xchg
cmp
iret
ja
std
push
aas
cltd
mov
pxor
mov
decb
outsb
sub
xchg
aam
fisubl
in
xchg
clc
cmpsb
out
aas
loope
push
push
jmp
jnp
xchg
push
xor
xor
push
mov
sbb
stos
fbstp
xchg
aas
call
imul
sub
cmp
loop
pop
push
subb
mov
adc
cmc
and
shll
push
dec
adc
sti
mov
inc
gs
lock
daa
sbb
rcrb
dec
dec
mov
dec
rolb
js
or
sbb
loope
icebp
ljmp
xchg
mull
cmc
lret
jae
pop
add
mov
leave
cmp
lock
pop
addr16
addb
jae
xchg
cmp
inc
imul
adc
lahf
and
pusha
hlt
enter
cmp
sub
or
push
ror
jle
and
mov
push
cs
scas
push
sbb
clc
mov
seta
xor
rolb
mov
mov
xor
idivl
add
fnstcw
and
jnp
pop
xchg
sub
inc
insb
fnstcw
xchg
std
xor
add
lods
dec
ljmp
inc
rclb
adc
ljmp
test
stos
push
sarl
push
push
loop
ljmp
mov
xor
xchg
xor
jnp
push
push
push
adc
pop
mov
pushf
mov
ficoml
popa
inc
dec
sbb
push
dec
mov
push
mov
inc
sub
call
sbb
xor
les
push
push
call
ss
nop
xlat
dec
jmp
ss
push
sarb
jge
cmpsl
adc
int3
and
jnp
push
push
popa
mov
add
jae
inc
jmp
mov
arpl
mov
fwait
dec
lcall
and
mov
dec
nop
and
or
mov
pop
out
xor
in
pop
xchg
adc
movsl
sub
push
or
lahf
fnstcw
xor
ret
jge
hlt
jecxz
xchg
mov
jmp
out
xlat
pop
test
subl
aam
adc
jg
xchg
xor
pop
dec
mulb
ljmp
adcb
push
mov
mov
pop
sahf
cmpsl
ss
aaa
test
mov
out
rclb
pop
shrl
mov
xor
in
xor
add
loope
divb
aas
cmp
bswap
loopne
mov
sub
pop
leave
fcomip
xchg
inc
and
testl
mov
xchg
sub
je
push
in
out
fldl
mov
xchg
test
push
hlt
xor
call
arpl
es
xor
addb
out
mov
jae
xchg
mov
ss
inc
cmp
loop
or
inc
fsubrp
or
lret
enter
xlat
idivb
mov
dec
je
pop
ret
cmc
nop
dec
mov
jns
pushf
jnp
sbb
push
sub
mov
mov
jns
and
test
xchg
mov
xor
mov
mov
mov
mov
adc
dec
and
xchg
sub
faddl
imul
repz
push
adc
xchg
and
scas
cmp
and
push
jno
hlt
lock
lahf
inc
dec
ror
jg
into
push
pop
das
inc
add
and
and
pop
fisttpll
jnp
mov
hlt
mov
mov
and
insl
ret
xor
and
mov
sub
dec
cmp
popa
sbb
jge
adc
test
push
add
aas
push
xchg
xor
jae
pop
in
mov
xchg
mov
adc
xchg
cmc
push
das
mov
add
add
adcl
sbb
jns
cmp
pop
movsl
jg
sbb
lds
test
mov
inc
ret
cmp
in
add
mov
jg
sub
lcall
push
movsb
lret
stc
cmp
cmp
call
xchg
test
pop
cmp
jg
cmp
push
adc
add
inc
iret
jmp
push
jg
addb
nop
test
lods
ret
and
pmulhw
in
and
jle
push
inc
stos
xchg
jmp
pop
dec
insl
sub
mov
and
pop
fcoms
push
mov
adc
pop
fcompl
call
inc
lds
and
mov
sbb
push
pop
in
xchg
imul
ss
insb
and
sub
loope
filds
cld
cltd
jns
dec
push
outsb
js
mov
daa
push
xchg
add
dec
and
or
adc
rcll
sbb
mov
or
jmp
push
cmp
cmp
xchg
lret
repz
xchg
out
sahf
mov
mov
dec
popf
repnz
dec
push
pop
push
sarb
or
cvtps2pi
das
push
add
negl
push
dec
stos
test
cmpsl
and
fidivrs
lret
mov
jge
movsl
dec
cmp
outsl
lds
mov
fadds
movsl
out
jbe
push
adc
sbb
outsb
aad
and
pop
sbb
roll
mov
jl
and
pop
loop
hlt
lret
in
push
mov
push
sti
cld
cmp
in
out
xchg
mov
lcall
add
and
lods
pop
add
insl
lcall
idivl
fistpll
pop
test
inc
cld
mov
push
inc
pop
je
add
dec
shlb
add
mov
popa
sub
lcall
pop
cmp
out
clc
adc
rorb
fsub
push
icebp
aam
push
pop
loopne
into
fs
sub
pop
cmp
mov
repnz
jnp
sub
jmp
sbb
dec
pop
cwtl
inc
jno
cli
jmp
jno
xlat
mov
rclb
cli
lcall
jne
sub
jnp
dec
sbb
int
les
fidivrs
scas
sub
pop
mov
add
test
mov
push
sbbb
shrb
mov
pop
outsl
and
shll
repnz
pop
loop
xor
or
jecxz
mov
pusha
ds
add
adc
xor
add
push
loop
dec
jnp
dec
in
or
rorb
cmp
sarb
dec
lahf
pop
jp
in
xchg
test
add
sub
cli
imul
subl
fdivl
clc
xchg
xchg
jbe
shl
push
lahf
mov
sub
adc
subb
xchg
fwait
sbb
pushf
add
pop
mov
fcomip
hlt
fsubrl
inc
jge
das
dec
imul
daa
les
push
sub
pusha
paddd
mov
lret
test
xor
push
into
mov
add
sbb
or
sbb
xchg
mov
add
adc
cs
repz
mov
jp
xchg
and
lret
popf
fdivr
xor
fs
ljmp
stos
mov
repnz
aaa
jl
push
mov
sub
dec
testl
and
inc
lea
jecxz
test
lret
cs
jno
inc
mov
adcl
call
js
push
push
push
inc
xlat
in
mov
data16
flds
stos
shll
mov
test
test
sti
out
fmull
inc
dec
push
lea
test
in
cs
fildl
dec
push
lods
dec
adc
imul
cwtl
or
std
int
inc
popf
xchg
sub
stc
int
shlb
cs
popf
aaa
movsl
test
adc
pop
jne
pop
mov
lcall
negl
in
fcomi
jmp
jno
loop
add
cwtl
aam
inc
pop
dec
sbb
gs
mul
fcmove
jb
gs
mov
xorb
call
jge
mov
mov
repnz
insl
loop
hlt
movsl
and
mov
rcr
call
lea
andl
jno
mov
imul
or
cwtl
xchg
pop
cmc
mov
jl
sti
inc
stos
iret
mov
jbe
jmp
fldenv
insb
dec
mov
and
pop
call
test
rol
outsb
sub
lcall
sub
or
dec
or
push
pusha
xchg
dec
mov
nop
ja
out
pop
movbe
cmp
clc
xchg
aam
push
call
or
std
testb
push
les
pop
push
out
jne
sysret
fcmovne
test
push
test
dec
xor
outsb
dec
fldl
inc
int3
sub
add
push
xlat
pop
xchg
call
and
mov
fimuls
out
rorb
cmpsb
mov
mov
cld
aaa
mov
sarl
cmp
subl
dec
mov
enter
push
sbb
push
mov
xor
stos
add
inc
out
jle
fldenv
test
sbb
cwtl
xchg
sbb
push
adc
int3
cmp
lahf
out
mov
jo
notl
mov
sti
mov
fistps
fsubrs
aas
ret
mov
sub
mov
sti
fisubrs
out
adc
jle
rorb
imul
xor
mov
adc
mov
test
cmp
and
pop
mov
popf
fsubl
dec
int3
xchg
addr16
stos
adc
push
add
inc
push
fdiv
pop
leave
out
jno
imul
adc
in
sbb
mov
gs
adc
fstl
sub
rcll
mov
icebp
ficoms
mov
adc
lea
and
movsl
rol
je
mul
int
mov
mov
inc
and
je
inc
pushf
lret
adc
stc
leave
push
stos
ret
mov
pop
clc
fs
outsl
cmp
sbb
push
pop
add
dec
sbb
in
leave
or
insb
inc
cs
or
into
and
adc
mov
mov
xorb
outsb
push
dec
es
in
jg
sbb
and
mov
push
repz
ds
lret
cs
clc
shlb
mov
mov
mov
mov
mov
les
outsl
ss
xchg
xchg
enter
dec
mov
sbbb
fimuls
sub
xchg
sbb
xchg
sbb
aas
clc
int
xchg
lods
xchg
jb
push
inc
loopne
sub
clc
push
sbb
lcall
pop
mov
cmp
lea
xchg
mov
adc
and
addr16
ss
or
jle,pt
push
rcrl
inc
data16
fcom
ds
xchg
aas
inc
inc
xchg
jmp
popa
std
cld
mov
mov
or
lods
sub
je
stos
pop
push
mov
add
aas
add
fisubl
rcrb
dec
sbb
push
clc
popl
sbb
pop
pop
pusha
lret
pushf
fimuls
in
clc
ss
dec
scas
stos
mov
mov
add
xchg
mov
cmp
mov
sbb
cs
out
sarb
pop
fistps
push
xchg
cmp
lds
das
loopne
pop
mov
jmp
and
mov
and
pause
loope
jbe
cmp
fs
in
js
xchg
mov
je
in
jnp
shrl
dec
lods
cmp
cli
fcomps
jecxz
aaa
adc
insl
xchg
add
adc
inc
cmp
and
cmc
aam
clc
sbb
int
iret
shrl
xchg
popf
ljmp
std
sbb
dec
fdivl
out
or
inc
pop
pushf
scas
je
and
dec
cld
push
add
decb
imul
add
subb
ret
cli
dec
ja
add
or
or
ret
std
leave
push
sbb
mov
cmp
mov
xor
xchg
fmull
mov
xchg
or
cli
insl
js
movsl
mov
in
rclb
push
add
jae
mov
push
ds
roll
jmp
outsl
pop
jnp
test
hlt
gs
repz
mov
sbb
inc
mov
push
aas
adc
jp
mov
loop
lahf
into
xor
rorl
std
movsl
daa
cltd
jne
nop
into
pop
xorb
inc
push
mov
lahf
sbb
cmpsl
jnp
mov
out
out
adc
das
jmp
jp
cs
adc
in
jno
adc
mov
imul
arpl
sub
push
add
lock
xchg
clc
push
fldt
in
jg
decb
inc
and
cmp
pop
out
dec
jl
sub
int
mov
out
xchg
mov
outsb
pop
mov
mov
pop
mov
dec
sub
test
lahf
iret
and
or
test
xchg
imul
lcall
pop
xor
and
pop
pop
or
jo
lret
int3
pop
subb
sub
sub
rol
mov
stc
sbb
call
movsl
adc
jne
leave
push
xchg
loop
mov
cmp
push
xor
div
adc
mov
mov
hlt
pushf
mov
sub
icebp
xchg
dec
cmp
and
stc
mov
clc
dec
jbe
mov
jg
jne
insb
in
dec
pop
aad
leave
dec
pop
or
jp
dec
enter
jmp
and
incb
adc
mov
fs
and
inc
push
dec
jnp
adc
sti
dec
pop
jb
out
dec
add
dec
es
jg
mov
sub
jns
fsub
lds
jg
add
imul
call
fisttps
scas
adc
popa
fidivs
and
out
jl
mov
cs
in
in
movsl
movsl
or
add
push
enter
jbe
in
scas
rcll
pop
inc
pop
sbb
add
inc
sti
int3
enter
push
push
leave
and
pop
cmp
mov
fadd
jae
scas
ja
sbb
push
sbb
pop
cs
movsb
and
add
and
enter
in
jmp
adc
es
mov
and
loope
xlat
call
sub
fidivrl
popf
int
jge
and
mov
xchg
adc
mov
mov
and
push
ja
in
lea
test
cmpsb
lods
imul
lods
sti
es
sbb
insl
mov
or
cmp
and
arpl
push
xor
loopne
pop
sti
mov
xor
sbb
cmp
xchg
repz
frstor
add
ret
insl
movsl
jae
jp
jae
loop
out
jge
cs
fcomps
test
out
jno
lret
call
adc
addr16
and
inc
out
inc
mov
xchg
xor
loope
adc
mov
and
test
shll
pop
in
sbb
mov
dec
mov
mov
fsubl
jne
xorl
cs
aam
jbe
stos
push
dec
js
xor
xor
loop
scas
dec
cmp
inc
jmp
xchg
pop
dec
xchg
aad
or
aas
cmc
insl
cwtl
dec
inc
test
fildll
out
testb
dec
outsl
loop
or
mov
push
daa
add
adc
test
lds
inc
jbe
nop
adc
insb
mov
sub
cmc
xchg
jmp
movsl
mov
mov
movsb
lahf
and
test
dec
fwait
test
je
jns
xor
inc
lock
imul
pop
mov
push
repnz
cmp
fsubl
jg
adc
add
fwait
pop
jbe
inc
push
sub
out
add
iret
cmpsl
xchg
jnp
dec
xchg
lret
dec
dec
xor
xchg
sub
mov
pop
sbb
fldenv
in
xor
sbb
jne
arpl
aam
mov
mov
addl
sti
jbe
out
push
jo
sbb
gs
add
mov
mov
push
ja
or
mov
cli
dec
fbstp
jnp
cld
out
add
cmpsb
mov
out
hlt
inc
daa
sarl
sbb
test
pop
cmp
or
and
out
stc
pop
jno
inc
lods
stos
enter
adc
mov
dec
cmp
jmp
in
inc
push
popa
js
mov
scas
xlat
sbb
or
mov
fldt
sbb
and
icebp
pop
test
sub
push
inc
les
js
mov
es
xlat
adc
mov
xor
sbbb
inc
or
fwait
aad
mov
cmp
dec
incb
add
xchg
cmp
nop
mov
jns
inc
icebp
sub
mov
sbb
sub
cmp
cmpsb
jns
cmp
jo
dec
ds
pop
in
loop
xchg
inc
lods
scas
mov
mov
jbe
daa
adc
jb
pusha
out
lret
shlb
adc
and
mov
lods
adc
cmpb
jecxz
cltd
inc
dec
ret
jns
jp
or
or
mov
xchg
stos
sbbb
dec
pushf
xchg
les
cs
adc
adc
test
movsb
fwait
add
inc
sub
xor
cmc
adc
loopne
jp
jge
push
int
iret
test
movsl
mov
stc
push
pop
imul
mov
incl
outsb
aas
inc
pop
or
jge
call
xchg
and
sub
ret
jbe
pushf
sar
in
adc
sbb
lods
mov
and
or
xor
stos
pop
adc
mov
push
xor
push
and
nop
bnd
mov
inc
jp
sub
test
xor
push
gs
or
mov
in
mov
call
das
lahf
push
pop
and
mov
pop
jo
test
pop
adc
into
cmp
pop
jno
dec
sahf
sbb
negb
cmp
cmp
iret
xor
subl
dec
aam
enter
clc
push
mulps
jge
or
mov
int3
mov
cld
xchg
sub
repnz
cmp
jb
and
jg
jo
inc
push
lods
pusha
lcall
gs
jne
rol
je
je,pt
sbb
sub
adc
sbb
stc
push
or
xchg
mov
mov
ds
and
mov
fldt
cmp
mov
cmpsb
pusha
mov
push
mov
push
xor
pop
mov
xor
sbb
sbb
jns
shl
cmp
mov
int3
outsl
pop
jae
fisttpl
ret
sbb
out
sbb
mov
loop
shll
lret
pop
jmp
out
mov
mov
cld
into
add
les
daa
daa
dec
pop
xor
pop
out
dec
loopne
dec
imul
pushl
sbb
add
jecxz
addl
push
or
test
adc
lret
add
or
lods
mov
cmpsb
xchg
lock
in
mov
cmc
push
mul
jecxz
addr16
dec
push
das
pusha
cmp
fldenv
insl
jmp
and
aam
repnz
cmpl
mull
mov
sbb
insl
imul
jmp
test
dec
and
std
sbb
cwtl
or
cmp
jnp
add
ret
inc
adc
aaa
xchg
outsl
inc
sub
dec
inc
ss
lock
jp
fnstsw
stos
sbb
inc
mov
ds
push
repz
xchg
inc
lcall
jmp
adc
int3
pop
js
movsb
or
ss
movsl
mov
loop
xchg
push
scas
xor
imul
dec
mov
sbb
push
loope
call
lret
mov
cwtl
bound
inc
shll
jge
cltd
inc
imul
adcl
lods
inc
sub
rcrl
dec
jl
inc
inc
mov
mov
inc
jnp
add
rorb
push
popa
push
rcrl
nop
lods
sub
pop
pop
aaa
xor
push
out
add
test
push
push
lret
jge
or
xlat
xor
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
xor
jl
sbb
in
adc
addr16
mov
pop
into
sarl
ss
inc
and
pop
jp
push
jl
aas
pop
stos
icebp
sub
jne
push
mov
sub
dec
push
mov
xor
mov
daa
shll
pop
xchg
outsl
pushf
pop
adc
hlt
mov
mov
nop
mov
add
das
jmp
test
mov
cmc
aas
jmp
jnp
cmp
mov
sbb
xor
push
int
and
jp
or
out
fs
lcall
dec
xor
outsl
rol
sti
mov
pop
xchg
xor
lea
fisubrl
pop
cmp
in
mov
out
mov
cmp
or
shll
xor
push
jle
mov
das
sub
and
incb
or
push
outsb
pop
cld
fdivl
push
jge
jle
xor
sbb
dec
adc
in
and
inc
je
idivb
sbb
mov
imul
mov
xchg
outsl
sbbb
xorb
lds
xor
test
push
ss
and
dec
nop
add
popf
std
repnz
into
or
xchg
mov
pop
jae
test
pushf
fisubl
jae,pt
add
xchg
cmp
iret
dec
int3
sub
gs
cmp
js
jp
int
xlat
test
inc
out
insl
aaa
cmp
mov
lods
pop
and
xchg
sbbl
call
clc
cltd
ljmp
out
outsl
adc
xchg
mov
clc
inc
aaa
pop
fdivrs
ret
cmp
push
jg
ljmp
jp
call
daa
adc
mov
ja
push
hlt
and
imul
cmpsb
data16
jl
dec
adc
mov
mov
inc
xlat
pop
xor
add
and
sub
and
adc
daa
int3
insl
cwtl
push
mov
notb
ret
mov
mul
out
iret
test
mov
out
popf
mov
or
push
mov
into
mov
push
scas
popf
push
enter
je
mov
js
ss
add
out
pop
inc
xchg
xor
scas
sub
test
sub
aaa
in
inc
pop
stos
add
push
in
sbb
pop
into
fs
ret
mov
xchg
iret
mov
inc
loopne
mov
jge
mov
in
int
filds
cmpsl
arpl
cmp
push
jmp
sub
sbb
es
cld
push
movsb
inc
and
lods
iret
scas
aad
inc
sbb
and
cmp
xchg
jmp
push
std
pop
sbb
push
rclb
cmpsb
inc
and
cmpsl
call
clc
adc
scas
ljmp
jecxz
pop
xlat
mov
sub
stos
lock
xlat
aad
pop
jnp
lds
inc
icebp
std
cmp
lahf
sbb
mov
xor
sbb
xor
jge
notb
mov
inc
push
push
add
add
sub
fdivrl
pop
sti
cmp
cld
adc
clc
jno
cwtl
orl
fwait
xchg
aad
mov
popl
adc
mov
mov
and
mov
and
jbe
test
fwait
arpl
dec
jno
mov
cli
xor
or
xchg
lahf
cltd
test
mov
ljmp
xor
xor
cmp
insl
mov
push
push
into
xchg
cmp
xor
xchg
stos
data16
inc
push
hlt
and
fidivl
and
jae
adc
push
daa
rcll
mov
cmc
std
loopne
in
insl
sub
cld
dec
inc
out
cmpsb
out
in
in
add
aam
mov
gs
inc
dec
jl
rcrb
fisttpl
loopne
pop
stc
dec
sti
sub
or
out
xchg
loop
dec
movl
sbb
sbb
imul
gs
mov
adc
mov
xchg
mov
shl
ljmp
test
inc
add
add
jg
rcrl
xchg
cmp
push
adc
frstor
push
mov
jae
add
in
sub
sub
sbb
xor
pusha
loopne
out
cmpb
lahf
cmp
aam
xor
pushf
rol
cmp
or
add
sbb
adc
push
es
fisttpl
mov
pop
cmp
aam
push
inc
fdiv
jb
pop
and
testb
movsb
outsb
dec
scas
push
inc
sbb
pop
imul
ljmp
subb
push
jne
sub
add
jmp
xchg
shrb
fcmovnu
mov
mov
mov
add
xor
add
arpl
std
jmp
sbb
inc
dec
or
lret
fsubs
sub
ss
lods
push
adc
jl
inc
cwtl
imul
jle
scas
jp
mov
cmpsb
scas
repz
lahf
push
jecxz
sub
imulb
mov
aaa
pushf
sar
sbb
adc
imul
cld
and
adc
mov
std
xchg
fs
addr16
cmp
call
pushl
fsub
out
sbb
test
or
fidivrs
popf
sub
dec
xor
sahf
xchg
sub
ret
lcall
lods
push
sahf
sahf
ja
fsts
adc
and
mov
or
pop
out
pushf
xchg
shll
repz
mov
addr16
fdivl
push
outsl
loop
mov
iret
pop
or
sub
std
cs
mov
movsl
int3
es
xchg
ficompl
cmp
add
mov
lret
or
and
stc
mov
les
jbe
xchg
mov
xor
and
adc
xchg
push
pop
mov
insl
loopne
hlt
and
call
cmp
sub
xor
sub
pop
sti
out
mov
mov
addl
bound
std
adc
int3
mov
or
dec
push
jge
and
mov
xchg
mov
fsts
and
or
shll
mov
xchg
xchg
and
pop
sti
leave
call
xor
xlat
fstpt
jmp
jl
cld
das
sub
fimuls
in
xchg
pop
lret
mov
out
aam
int
pop
sub
std
mov
ds
cmpsl
scas
fs
fistpl
mov
sub
test
in
cld
inc
cli
fwait
jbe
jp
lds
lahf
shr
jne
test
jg
push
aam
sub
add
lea
sbb
pop
gs
xchg
lds
shll
sub
adc
nop
adc
das
fucomi
jg
lea
andl
adc
jne
pop
add
sbb
lret
cmc
push
rorl
jecxz
xor
daa
inc
movsl
je
in
imull
jo
lret
lcall
jb
sti
imul
out
clc
lret
add
fs
movsb
ficomps
outsb
sub
xor
test
push
dec
xor
inc
dec
cld
xor
lret
loop
pop
mov
mov
push
push
pop
dec
cmpsb
cmp
js
loope
mov
fidivs
mov
mov
pushl
sahf
mov
ja
adc
popf
push
popa
mov
jb
mulps
or
mov
xchg
ja
stos
lock
leave
push
dec
fisttpll
outsb
fidivrl
in
in
ja
adc
inc
scas
iret
aas
jo
push
scas
popa
pop
mov
sbb
and
loopne
movsl
popa
xchg
push
mov
inc
add
pop
pop
and
popf
outsb
int3
or
sub
insl
adc
daa
or
adc
dec
sbb
jnp
stos
sub
mov
sub
xchg
xchg
cmpsl
xchg
iret
dec
jge,pt
or
cmp
jno
xlat
rcr
push
jo
push
mov
loop
adc
das
xchg
inc
ss
in
fadd
fistpl
sbb
pop
adc
xor
nop
sahf
xor
ds
sub
mov
insl
xor
mov
jns
outsb
insl
dec
mov
out
cmpsb
push
dec
imul
xchg
pop
add
or
inc
mov
jle
movsl
je
pop
inc
dec
add
pop
mov
adc
lcall
sub
adc
and
jno
xchg
fistpl
dec
lods
pop
out
and
sub
xor
jl
data16
iret
popa
cld
or
lds
sbb
xor
cmp
cmpsb
mov
andl
and
xchg
cld
dec
popa
sub
in
xchg
pushf
out
lods
xchg
push
inc
fldl
dec
mov
pop
popa
xchg
in
push
or
ss
je
data16
jge
or
dec
arpl
sub
std
or
arpl
mov
sbb
and
mov
and
push
sbb
aam
aam
dec
clc
adc
push
push
push
push
jl
push
out
hlt
fdivrs
mov
mov
les
mov
mov
xor
push
cwtl
icebp
cmpsl
inc
std
mov
cs
xchg
orl
out
push
mov
push
xchg
cmp
dec
lods
rep
dec
int
cld
jb
aam
mov
dec
pop
mov
add
fistl
imul
imul
js
jle
adc
mov
cmpsl
pop
cmp
popa
cs
adc
enter
inc
mov
mov
and
fstl
mov
and
cmpsb
addr16
inc
sti
mov
mov
stc
out
test
mov
sub
pop
jae
dec
dec
aad
inc
push
sbb
sub
jecxz
sbb
sub
adc
pop
mov
dec
out
mov
fwait
pushf
and
pop
lret
or
mov
in
fucom
or
adc
lods
push
call
jl
leave
push
dec
fidivrs
pop
sub
xor
mov
jne
cld
in
call
adc
mov
sub
cmp
jb
mov
inc
xchg
mov
push
cmp
sub
bound
loopne
fcomip
xorb
cmpb
out
xor
pop
cmp
sbb
int3
push
push
paddq
pop
jbe
pop
add
and
push
test
add
xor
cmp
mov
cli
cmp
rclb
ret
adc
mov
popf
out
comiss
mov
xchg
mov
pop
mov
sub
adc
sahf
cmp
jo
mov
idivb
xorb
test
outsb
sub
adc
mov
call
icebp
mov
lahf
dec
cmp
ret
je
add
jbe
sub
mov
adc
sbb
pop
daa
mov
loope
aaa
xchg
jbe
mov
mov
adcb
push
jmp
xchg
sub
icebp
xchg
scas
dec
outsl
cmc
aas
cmp
test
in
adc
movsb
das
push
or
pop
ljmp
bound
mov
fwait
ljmp
cmp
push
xorl
pop
repz
sbb
fcoml
lds
loop
shr
xchg
and
pusha
lods
out
je
das
cmpsl
jmp
mov
aad
fisubrl
ficomps
xchg
push
cmp
lea
push
or
xchg
scas
add
fcmovnu
or
xor
xor
lret
aam
add
push
jnp
rcrb
fstl
mov
std
ret
xlat
inc
sbb
pop
xor
imul
inc
cwtl
movsb
ljmp
xor
push
xchg
mov
jo
xor
add
js,pn
bound
aad
mov
addr16
sub
mov
ss
xchg
rcll
jo
fcoms
mov
je
into
test
pushf
lret
out
pop
dec
lods
cli
hlt
xchg
fsubs
dec
or
add
cmp
insl
mov
jecxz
mov
mov
es
cmp
mov
icebp
arpl
outsl
xor
inc
add
xlat
push
ficomps
inc
sub
adc
pop
jmp
and
inc
in
popa
out
mov
js
lock
loop
lcall
dec
dec
pop
pop
lods
and
mov
aaa
test
loope
jl
adc
jnp
adc
xor
rclb
popl
push
or
push
jp
cmpl
mov
dec
mov
or
std
leave
add
call
cmp
sub
pop
dec
in
stc
mov
imul
add
jle
stc
jbe,pn
clc
lret
iret
daa
pop
mov
sahf
fwait
in
xor
arpl
push
shrl
mov
daa
inc
sbb
push
dec
into
in
iret
test
add
jle
fbld
pop
xor
and
xor
adc
inc
xchg
loope
hlt
lret
ds
stos
or
mov
pop
sub
test
cmpb
inc
xchg
aas
daa
adc
ds
aas
and
rol
inc
cmpsl
or
xor
ror
jno
popf
xor
cwtl
cmp
fiadds
shlb
in
imul
sub
dec
mov
mov
inc
outsb
pushf
mov
xchg
pusha
cld
ja
inc
cmp
push
subl
rolb
insl
popa
inc
bound
and
out
inc
cld
cmc
mov
lock
dec
jno
sbb
mov
mov
out
divl
xchg
push
insl
jp
sbb
in
sti
aad
cli
sbb
jns
xchg
fcoml
enter
cmp
out
cmp
xchg
push
lahf
lock
xchg
fnstcw
adc
in
cmpsb
and
and
das
cmp
adc
enter
jns
mov
jp
push
enter
or
lret
cmp
jge
imul
mov
fisttps
mov
xchg
lahf
bound
xlat
popf
mov
add
xchg
inc
xchg
xor
xchg
iret
and
das
sbb
jecxz
cmp
daa
dec
lret
shl
dec
repz
lock
orb
sti
shrb
lea
mov
movsl
push
movsb
dec
xor
pop
mov
repnz
sbb
mov
mov
lcall
movb
xchg
mov
and
push
add
std
loopne
rcr
and
shrb
or
or
push
sbb
jp
mov
mov
shl
cmp
or
push
movl
dec
mov
mov
test
push
loop
jns
or
inc
push
icebp
movsl
dec
push
imul
insb
add
add
cmc
fstps
push
ds
mov
mov
and
loope
mov
hlt
loopne
mov
aam
es
aad
jae
or
testb
xor
adc
mov
pushf
ss
lea
mov
jp
adc
pop
rclb
ficomps
enter
fists
lea
ja
inc
imul
push
data16
cmp
in
scas
pop
paddusw
xor
insl
xor
push
scas
movsb
cmp
add
outsl
xor
adc
mov
rcll
dec
out
mov
push
addr16
lods
stc
mov
mov
xlat
fwait
add
ja
testb
add
cwtl
das
cld
push
and
mov
adcb
mov
ljmp
pop
xor
mov
mov
mov
push
inc
inc
jecxz
imul
inc
xor
and
fstpt
lret
fsts
pop
adc
pushf
dec
imul
shr
mov
nop
lcall
push
mov
in
enter
or
mov
nop
fists
out
rolb
jb
mov
outsb
sub
scas
pop
sub
call
lock
mov
mov
imul
fwait
mov
call
insl
fildll
and
ret
xchg
stos
rol
mov
or
fcoml
jecxz
cmp
lret
push
addr16
dec
ljmp
scas
lret
push
sbb
leave
jl
push
inc
lret
adc
add
in
sub
hlt
adc
and
rorb
add
idivb
push
sub
pop
mov
nop
dec
add
and
testl
sbbl
cmpsb
xorl
pop
mov
hlt
hlt
bound
pop
mov
ljmp
cmp
ret
test
xchg
pop
cs
stc
dec
push
pushf
btc
or
rcrb
pop
dec
insb
mov
sbb
lock
adc
sahf
jae
cwtl
xor
xchg
adc
dec
xor
mov
test
lock
cltd
inc
pop
inc
xchg
cltd
int3
push
mov
es
mov
js
dec
lahf
pusha
daa
push
out
jge
int3
shll
enter
xlat
insb
xchg
mov
rcrl
test
fisubs
cld
xor
push
ret
shll
sub
lret
rcl
xlat
fadds
loopew
stc
add
or
cmp
or
loopne,pn
cli
lret
and
sbb
sbb
xchg
leave
fs
mov
fcomps
or
popa
in
jb
push
jle
mov
xchg
addr16
std
je
pop
mov
sahf
cld
fcmove
outsl
ja
iret
js
dec
or
icebp
dec
pop
xchg
sti
ret
push
cld
xor
into
jb
cld
fstpt
addr16
sub
ljmp
bound
inc
sub
test
imul
insb
data16
repnz
test
jg
dec
cmpsb
adc
cli
push
pop
jg
sub
repz
cmpsb
cli
cs
jo
push
test
or
jmp
test
xchg
idiv
add
dec
mov
in
pop
mov
xchg
push
or
adc
loopne
clc
jb
lods
xlat
push
aam
inc
cmp
xor
adc
pusha
adc
push
jbe
mov
cmp
push
gs
or
pop
push
aad
lret
pop
or
xchg
andb
cwtl
pop
or
push
in
rcr
sub
test
shr
xor
pop
ret
cwtl
or
jnp
shl
inc
lahf
fwait
insl
sub
push
sub
mov
stc
xor
sub
or
popf
jo
pop
mov
cmpsl
mov
out
int3
roll
push
mov
loope
jb
or
fnstsw
outsl
pop
adc
dec
sub
push
adc
es
fistps
mov
xor
xchg
xchg
mov
iret
cmp
and
and
inc
inc
xor
jb
and
scas
int
aas
jmp
jbe
jmp
push
pop
add
push
or
jl
mov
push
movsl
outsl
clc
rcrl
cmp
adc
popa
lret
subb
lea
fsubr
lds
testb
loop
or
xor
out
sbb
dec
and
dec
xchg
jle
clc
aaa
cmpsb
inc
not
ss
pop
scas
xchg
mov
lret
sub
pop
movsl
ds
dec
frstor
das
pushf
mov
psubsb
cld
cwtl
inc
call
inc
sbb
insb
push
aas
adc
jg
mov
test
adc
push
lds
xor
mov
pop
scas
or
push
das
inc
mov
xor
jecxz
xor
adc
scas
cmp
mov
hlt
jbe
dec
bound
insl
out
enter
in
cld
cld
mov
cmp
je
push
mov
jbe
mov
or
pop
fdivrs
pop
movsl
imul
test
cmp
inc
or
scas
jb
jbe
notl
cs
jge
sub
arpl
pop
cmp
adc
ret
mov
sub
jbe
out
jge
jecxz
xor
jne
mov
mov
push
dec
sbb
jne
jae
sub
or
mov
mov
and
sbb
orl
dec
jbe
mov
and
dec
rorl
test
fcoms
cmpsb
push
mov
lcall
dec
dec
xchg
mov
mov
pusha
gs
fwait
jmp
jmp
sub
xchg
repz
ds
or
sub
jb
dec
push
or
add
and
dec
mov
add
jmp
incl
cmpsb
addr16
ss
adc
aas
cvtdq2ps
stc
aas
sub
ret
push
leave
ja
in
lcall
xchg
sbb
mov
cmc
dec
repz
cmp
rorl
dec
pusha
call
inc
out
fildll
ficomps
or
lods
xor
pusha
xor
lock
das
and
lcall
mov
sub
pop
push
sarl
add
gs
ljmp
mov
or
xchg
mov
lds
orl
ret
jecxz
fldenv
fildll
push
jb
ficoms
ret
push
pop
ljmp
xor
in
shll
mov
mov
out
in
cmp
sbb
aad
cmp
lahf
or
scas
into
cmp
mov
sub
inc
jg
pusha
lock
mov
ret
mov
stos
in
fidivl
loopne
jns
dec
rcr
test
or
cwtl
sbb
hlt
push
dec
inc
hlt
cmpsb
dec
div
sbb
popa
ror
insl
mov
orl
jge
ret
jmp
adc
sub
mov
pusha
lods
mov
pushf
lock
loope,pn
mov
cs
push
std
xchg
inc
in
push
bnd
out
lret
push
enter
loope
xorb
loop
inc
mov
js
out
lret
mov
mov
jo
push
or
or
jne
movsl
or
jae
jmp
outsb
inc
pop
fldl2e
and
in
cmp
pop
lock
fnstsw
ffree
in
add
mov
ret
mov
or
das
faddl
je
stc
ror
xchg
mov
test
clc
and
xchg
mulb
cmp
adc
push
lret
mov
cmpb
adc
sbb
test
ret
movsl
lret
mov
movsl
sub
aad
cmp
push
mov
mov
repz
and
imul
pusha
loopne
insb
repz
fidivl
sarb
lods
enter
or
mov
fwait
in
inc
sbb
scas
add
dec
out
nop
stos
xchg
scas
movsb
and
fwait
or
push
mov
mov
sub
push
xchg
sahf
push
jge
xchg
sub
jo
cld
ja
std
lods
lret
pop
and
std
arpl
push
add
and
push
pop
fstpt
sub
xchg
mov
add
cld
inc
pop
ljmp
and
jnp
out
push
lahf
aas
idiv
mov
fstps
or
xchg
xchg
xchg
pop
lret
sub
outsb
cmpsb
mov
mov
mov
movsb
mov
nop
mov
add
outsl
push
data16
jmp
pusha
dec
mov
mov
stos
movsb
sub
les
jo
aas
js
mov
emms
xlat
pop
outsw
pop
pop
dec
push
or
fildl
loop
insl
loopne
mov
test
adc
in
test
clc
rorl
loop
pop
dec
test
lcall
or
jecxz
sbb
mov
push
adc
icebp
in
sbb
mov
dec
shr
and
pop
sbb
push
jl
cmp
test
arpl
xor
jle
adc
sub
xchg
imul
das
jns
push
add
cmpsb
jl
adc
push
xchg
adc
jnp
xchg
lods
loopne
lret
adc
fiaddl
mov
push
xchg
inc
aaa
ret
adc
add
xor
insb
jae
jbe
sub
pop
mov
pop
stos
push
push
test
aad
xchg
stos
pusha
jne
stos
ds
loopne
jns
cltd
int3
fucomip
xor
and
sub
and
cld
jl
movsl
push
lods
rorb
mov
test
bound
je
mov
movsb
sbb
fbld
pop
push
es
and
inc
bound
push
cmp
push
adc
ljmp
lock
add
xchg
sub
mov
jp
lahf
ljmpw
lahf
outsl
fcompl
and
jnp
cmp
mov
xchg
es
into
jae
addr16
inc
in
push
bound
pop
out
loope
stc
or
adc
cmc
bound
sub
and
push
int3
adc
sbb
xchg
in
test
adc
jl
loopne
arpl
lret
add
xor
sbb
pop
aad
xchg
es
inc
cmp
cmp
add
dec
cmp
or
in
xlat
cmp
and
cmpsl
mov
test
dec
outsl
pop
sar
mov
in
add
popf
pop
in
fldenv
mov
pushf
orb
cmpsb
loope
in
fwait
xchg
and
xlat
pushf
mov
cmp
ds
cs
stos
out
cltd
xchg
fsubr
push
movsl
xchg
xor
cli
xor
stos
add
inc
loopne
and
mov
push
lret
or
cmc
push
mov
ja
dec
insl
adc
icebp
add
mov
sub
cld
data16
imul
pop
hlt
push
pop
mov
mov
lcall
leave
adc
pusha
lret
jno
push
mov
push
and
mov
push
cmc
inc
mov
ret
dec
mov
lahf
mov
icebp
and
aam
mulb
jo
push
inc
popf
and
mov
lds
mov
mov
xchg
xor
add
pop
loop
mov
jae
mov
mov
adc
push
and
sub
mov
or
cltd
or
cwtl
call
es
cmp
push
sub
rclb
lcall
je
out
inc
pop
lcall
push
mov
pusha
sub
loopne
push
push
in
push
aad
shll
stc
xlat
push
ljmp
lods
mov
jmp
mov
outsl
mov
jle
ret
jle
sti
pop
inc
fidivrl
hlt
pop
push
jg
adc
mov
daa
sbb
fstps
mov
movsl
fnstcw
push
nop
pop
jb
adc
enter
out
lsl
adc
outsl
and
xchg
or
ret
mov
sti
out
pop
adc
mov
andb
sti
or
nop
insb
sub
shrl
in
pop
inc
popf
bound
lock
xor
lahf
rol
test
pop
sub
lods
cmpsb
out
mov
aaa
mov
dec
push
add
leave
and
dec
mov
cmp
lds
jbe
sub
pushf
roll
sahf
mov
inc
add
cwtl
loop
or
cmpsl
and
mov
cmp
push
and
jl
mov
sub
xchg
lods
cmp
ja
cld
xlat
mov
and
push
aas
enter
in
mov
add
xchg
les
bound
in
cmpsb
fwait
lods
outsb
ljmp
or
in
test
jnp
movsb
insb
popa
test
push
sub
sahf
jecxz
fistl
test
push
pop
out
sub
add
in
adc
mov
xchg
cmp
push
loopne
lret
pop
mov
pop
out
out
mov
mov
cwtl
loopne
lea
movsl
mov
loope
push
sbb
ss
insl
stc
sahf
das
dec
mov
or
dec
or
imul
fucomi
mov
pop
cli
fs
add
adc
int
push
add
movsl
cmp
ss
inc
dec
add
aaa
add
aad
sbb
adc
and
mov
rcrb
in
mul
jb
les
inc
push
dec
out
icebp
inc
stc
mov
inc
loop
mov
insb
pop
push
fdivr
mov
cmp
dec
mov
xor
xor
pop
cmovge
xor
mov
pusha
lock
jno
iret
stos
dec
jno
dec
add
shlb
stc
out
in
add
sbb
mov
jnp
inc
insb
fdivrp
sbb
mov
push
push
push
loope
ret
int
outsb
xor
xchg
sbb
dec
cs
push
adc
hlt
jno
aad
loope
addl
or
jo
jno
push
test
sub
es
clc
outsl
imul
pop
aad
sub
shlb
xchg
lods
loope
jbe
loop
out
or
xor
jb
jmp
inc
pop
testl
or
inc
in
cmp
cmpsb
push
dec
outsl
jmp
mov
data16
xlat
lods
add
cli
inc
sub
daa
test
std
ret
ucomiss
ja
test
data16
testb
cmpsl
loope
mov
and
pop
out
xchg
lahf
sbb
std
sti
cmp
mov
das
jp
stc
clc
pushf
mov
sub
xchg
mov
jl
test
push
imul
push
pop
lods
mov
test
or
mov
jg
cld
pusha
cli
aas
mov
push
xchg
pause
cmp
and
repz
mov
pop
mov
gs
add
xchg
lods
pop
xchg
dec
lret
mov
cmp
int3
mov
test
icebp
inc
jnp
cmpsb
inc
xchg
sub
inc
cmp
cmpsl
repnz
add
repz
mov
bound
insl
ret
cli
jl
mov
xor
cltd
mov
ja
cmp
sbb
addb
ret
lea
and
popa
xchg
fnstsw
cwtl
in
fstps
and
rcrl
add
jmp
rolb
inc
popa
jg
jge
and
loop,pn
imul
icebp
cmp
jnp
rcl
cmp
out
in
movl
sub
gs
and
out
frstor
enter
ja
cmc
andl
fstpt
sub
insb
xor
sahf
and
aas
jo
sbb
xor
inc
inc
ss
mov
popf
mov
add
xchg
aad
js
dec
sbb
mov
fmulp
push
xlat
jmp
fisubrs
fbld
arpl
and
sahf
push
out
xchg
insl
ljmp
arpl
mov
or
xor
sub
dec
cmp
enter
jle
jge
das
mov
clc
pop
jl
call
sub
ror
sbb
pop
add
pop
pop
or
xchg
mov
subl
imul
mov
push
pop
dec
hlt
mov
and
or
sar
jmp
push
jge
mov
cld
cs
sbb
fstps
sub
sbb
cmp
sahf
push
test
cmp
cli
movsl
lahf
xor
xchg
aam
repz
mov
insl
movsb
xchg
push
test
mov
test
mov
pop
mov
pop
scas
in
rol
xchg
mov
es
cwtl
jg
in
filds
pop
addr16
and
imul
in
mov
inc
call
lahf
shrb
pop
mov
adc
cmc
jmp
dec
push
inc
dec
nop
je
dec
hlt
pop
or
into
dec
pop
mov
sbb
mov
xor
jbe
rcll
roll
adc
scas
loope
mov
aam
jae
loop
lods
into
and
ljmp
mov
cmpsl
pop
adc
data16
hlt
inc
popa
sbb
inc
push
or
lret
mov
sub
ret
pusha
fnstenv
incb
and
sub
dec
ds
rcrl
mov
mov
inc
cwtl
daa
dec
xchg
pop
sub
daa
adc
test
pop
cmp
in
mov
ret
xchg
adc
enter
jp
cmp
movsl
je
xor
push
inc
adc
mov
test
push
xchg
das
xor
lea
jns
dec
sti
or
bound
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
inc
repnz
jnp
std
sbb
pop
test
sub
test
adc
cli
das
test
adc
cmp
cmp
jle
stc
sub
push
mov
mov
push
xchg
push
mov
pop
popa
sbb
aad
call
mov
and
mov
mov
sub
cltd
push
faddl
push
fs
std
mov
pop
inc
xchg
pop
lcall
int
sti
mov
and
mov
mov
fistl
xchg
adc
in
insl
sbb
cmc
or
ss
sbb
cmp
jle
sbb
mov
leave
cld
aaa
mov
push
xchg
push
xchg
out
and
mov
rcr
jge
rcrl
cmp
in
mov
mov
clc
mov
mov
jnp
mov
push
push
jbe
lods
fs
xchg
sub
push
jbe
dec
ret
inc
in
add
rcrl
jno
int3
jg
sbb
sti
hlt
push
cmp
sub
insl
rcll
cmp
and
addr16
bound
xchg
lea
pop
addr16
xchg
pop
dec
clc
jne
fsub
jnp
mov
mov
repnz
push
sub
test
xchg
sbbl
lock
push
push
dec
pop
scas
aam
test
clc
cs
aam
adc
mov
pusha
xchg
adc
repz
movsl
pop
xchg
jnp
adc
cmp
dec
gs
xor
daa
cmp
adcl
xor
dec
test
cmp
add
sarb
xor
dec
out
outsb
and
add
pop
cmp
mov
lahf
rcll
ret
pop
lahf
stos
lds
test
dec
mov
or
testl
xorb
fisttpl
push
pushl
mov
mov
push
sti
mov
fldl
add
or
mov
adc
enter
inc
dec
test
test
add
mov
pop
add
push
not
fstps
pop
out
negl
loope
popf
jnp
push
mov
and
xchg
mov
sub
xchg
mov
adc
sub
cmc
movsl
mov
ds
cmc
loopne
cltd
pushf
xchg
in
inc
sbb
xchg
cmpsb
xchg
rcll
jno
movsl
inc
or
stos
das
dec
scas
mov
jne
cld
decl
das
sub
push
pop
jb
dec
sub
loope
shlw
add
sub
cld
jge
inc
cmp
inc
out
push
pop
gs
xchg
xor
ss
and
stos
mov
nop
mov
dec
jl
lea
fstpt
jle
addr16
pop
adc
mov
jge
inc
aam
sahf
outsb
jb
test
sub
push
imul
pop
pop
shlb
cmp
out
lods
push
jl
or
jo
push
push
adc
pop
and
leave
ret
pop
fisttpl
push
ficompl
pop
test
or
test
jns
mov
loope
cwtl
pop
cmp
mov
xor
mov
pop
mov
shll
mov
jne
inc
dec
jmp
imulb
push
xor
inc
mov
stos
jg
fcomps
adc
cmpsb
xchg
sub
pop
xchg
rcrb
test
xchg
cmpsb
fwait
paddq
inc
int
test
sarb
push
lea
test
mov
mov
push
sbb
jno
xchg
push
test
fidivrs
in
lods
xor
mov
cmpsl
das
jp
repnz
fdivs
pcmpeqw
fidivl
nop
subl
ja
push
mov
bnd
push
lcall
mov
mov
sbb
add
movsl
int
sub
push
pushl
sbb
inc
fisttpll
ds
cmp
dec
pusha
sub
inc
andl
insl
std
out
sub
rol
mov
push
push
xor
add
mov
or
data16
nop
addr16
inc
fcoms
inc
fiaddl
jo
sub
sub
jecxz
cltd
sti
jmp
sub
adc
icebp
test
stc
in
loopne
imulb
ret
mov
fiaddl
mov
cmp
xor
fdivrs
xlat
pop
inc
cmpsl
sti
jne
js
stos
and
inc
jmp
lret
loope
or
jg
add
cmp
repz
mov
jecxz
jecxz
push
and
out
sbb
fadds
push
bound
jl
and
rclb
je
mov
pop
jno
sbb
mov
fidivrs
mov
xlat
test
call
inc
negb
test
jl
xor
loope
jg
dec
das
push
cmpsb
jbe
lret
outsl
repz
pop
lods
cmp
imul
sub
pop
outsb
cli
sbb
fsts
test
xchg
popa
js
dec
xor
lock
jl
cmp
scas
jae
xchg
cmpsb
js
lea
in
xor
pusha
pop
xchg
push
movsl
cmp
push
and
or
mov
push
and
std
push
mov
mov
cmp
mov
or
imulb
sbb
sub
or
cmp
gs
mov
pushl
insb
push
and
ss
pop
in
lods
inc
test
mul
adc
hlt
sbb
jmp
iret
lods
cmp
sbb
in
jb
inc
jne
out
mov
mov
fwait
jb
xlat
movsl
jl
push
pop
mov
rcl
jne,pn
into
or
cmp
mov
sub
or
pop
call
outsb
divl
xchg
hlt
jp
lods
inc
fidivrl
rcr
aam
sub
cmc
out
loope
jo
push
test
das
out
mov
call
or
out
push
adc
mov
cmp
inc
les
lods
sbb
popf
adc
or
adc
pop
dec
mov
mov
jmp
cli
push
sbb
test
sahf
jmp
lods
cmpsb
hlt
add
push
mov
sbb
mov
int
icebp
mov
or
mov
pusha
sbb
xchg
xchg
loopne
cmp
inc
movsl
jmp
sbb
pop
out
in
add
js
add
int
stos
sbb
inc
ds
outsb
loopne
sub
mov
or
les
cmp
fmul
repz
ja
cld
mov
push
xchg
daa
aam
sbb
mov
lret
mov
int
dec
xor
add
and
mov
movsb
pop
pop
lcall
xor
mov
nop
lods
jge
pushf
cmp
lods
ja
cli
xor
out
sub
cmp
repz
push
jbe
jb
out
test
cld
in
lea
inc
lea
adc
cmp
mov
add
pop
insl
sub
mov
fisttps
ljmp
scas
jnp
aam
lods
out
aam
sarl
and
cs
sub
pusha
push
ss
scas
fs
rcll
rorl
mov
scas
xorb
orl
out
xor
sti
jno
sbb
je
mov
xchg
xor
dec
mov
jp
jp
adc
fnstcw
rcrb
repz
fsubl
sets
fisttps
pop
xchg
jns
cmp
xlat
aas
into
cmp
das
sub
test
scas
insb
rcll
clc
push
pop
xor
rcrl
xor
adc
ret
fstps
mov
add
outsb
call
decl
pop
and
mov
mov
aam
dec
adc
lock
jg
inc
pushf
sahf
jg
in
jge
test
xchg
or
and
mov
jecxz
push
in
cmp
aad
mull
outsb
pop
adc
orl
lea
dec
cmp
lods
xchg
mov
mov
jbe
rcrb
sbb
push
inc
cltd
sub
ret
inc
and
pop
pop
and
sub
lods
mov
jbe
xor
mov
adc
outsl
pop
lods
iret
movsl
iret
xchg
xchg
adc
pop
ljmp
adc
inc
dec
mov
fwait
push
out
icebp
je
out
and
sub
and
std
in
cmp
inc
push
jecxz
mov
rorl
xchg
add
dec
hlt
sub
jmp
pop
das
idiv
mov
inc
xchg
ljmp
push
add
xchg
xchg
mov
push
fmul
fisttps
addr16
sbb
push
mov
lds
out
and
ja
mov
aad
and
push
stos
mov
mov
hlt
sub
call
in
sub
mov
adc
mov
mov
xor
xor
test
hlt
insl
cmp
cwtl
or
or
pop
sbb
test
je
xchg
test
les
push
and
outsb
cmp
and
in
add
cltd
adc
mov
inc
shrl
clc
insl
stos
popf
mov
jp
fwait
sub
fldcw
in
push
pushf
cmp
shrb
lahf
adc
pop
pop
jnp,pt
mov
inc
mov
mov
jne
shll
das
jg
sub
cmp
pusha
outsl
pushf
inc
mov
fsubrs
test
xor
test
jecxz
and
xchg
outsb
push
filds
lret
lea
pop
icebp
jge
iret
push
dec
inc
call
or
xchg
add
adc
jl
cmpsb
fs
sub
xchg
ljmp
pop
jmp
mov
lock
stos
xor
jge
adc
pop
mov
aaa
pop
inc
ja
int3
xor
sti
cmp
icebp
scas
mov
fstps
lock
cmp
and
loop
mov
lret
push
mov
out
adc
xchg
pop
test
scas
rol
sbb
inc
xchg
stos
pop
push
data16
inc
pop
sbb
mov
jge
sub
xchg
psubw
into
testb
bound
inc
jns
or
mov
adc
pop
pop
mov
mov
mov
out
push
insb
pop
daa
imul
pusha
sbb
pop
add
in
xor
cli
pop
insl
inc
fistps
addr16
jbe
out
mov
lock
push
sub
fwait
inc
pop
inc
fs
aas
adc
add
out
inc
lret
in
mov
sbb
fcmove
or
and
mov
push
stos
lcall
arpl
add
mov
sbb
mov
push
enter
cmp
insl
pushf
dec
daa
cltd
cs
fdivrs
daa
xchg
pop
imul
lds
xor
xchg
in
mov
aaa
pop
xchg
movsb
mov
mov
scas
mov
add
ret
pushf
push
push
xor
adc
cmpsl
and
mov
xor
adc
scas
stos
into
cmp
add
addr16
in
pop
shll
arpl
mov
rol
cmp
sbb
test
clc
pop
adc
cld
xchg
dec
stos
adcl
popa
dec
cmp
pop
jmp
in
add
cmp
imul
jno
in
xchg
sub
mov
adcl
fisubrl
lods
add
xor
cmpsb
pop
movsl
xor
pop
dec
scas
int
out
and
xor
pop
mov
mov
sub
in
sahf
inc
fistl
jb
xor
add
cwtl
xor
mov
pop
es
mov
lret
add
in
xor
xchg
and
dec
sub
loopne
push
popa
mov
xor
cld
add
mov
ss
in
push
xor
imul
mov
push
leave
lods
mov
push
mov
out
mov
sub
inc
xchg
jbe
pushf
sbb
lret
insl
scas
sbb
popf
into
cmp
adc
mov
aaa
test
jl
insl
pop
mov
sbb
lods
scas
sub
popa
fisttps
or
add
sbb
inc
or
mov
mov
jns
sarl
lods
fcomp
imul
das
inc
adc
fmull
sub
scas
fstps
cmp
push
add
adc
cli
add
jbe
xchg
mov
push
fimuls
sub
lret
xchg
sbb
movsl
mov
out
pop
or
mov
inc
call
cld
cmp
dec
jne
and
pushf
jp
push
inc
scas
lret
outsl
lea
pop
mov
insb
icebp
jne
and
xor
pop
insb
mov
xor
add
inc
sbb
or
jle
jb
pop
jae
jbe
push
sbb
nop
mov
jae
cmp
iret
outsl
scas
mov
or
sub
push
arpl
lods
mov
pop
jmp
sbb
xor
nop
mov
mov
pop
adc
sbb
add
popa
ret
cmc
inc
sbb
cli
ljmp
jp
pop
push
inc
xchg
adc
push
inc
xchg
add
fiaddl
pop
xor
xchg
mov
or
sahf
pop
add
fstps
push
jl
push
cmpsl
sbb
adc
mov
adc
push
cld
dec
dec
sub
mov
cli
pop
fwait
cmp
add
fcmove
sbb
insl
mov
xor
repz
daa
fucomi
pop
ret
push
outsl
jp
adc
adc
out
enter
pushf
lcall
pop
cmp
sub
mov
andl
rcl
xchg
pop
sub
ret
inc
in
mov
jmp
subb
fcomip
scas
mov
fimuls
popa
das
cmp
jb
popf
in
jnp
sbb
js
push
inc
xor
scas
lret
pop
pop
mov
cmp
lds
rcr
lods
hlt
js
jb
test
and
fisubrl
push
gs
aas
cmp
cli
push
repz
jmp
push
sbb
inc
out
cmp
cmp
jle
out
leave
test
add
es
les
shrb
cmpsl
out
adcb
gs
and
or
pop
jl
enter
fdivr
jl
shlb
popf
mov
in
sbb
xchg
mov
xchg
xor
pop
jne
lock
movsl
push
std
xchg
dec
mov
out
scas
jmp
mov
ss
xchg
xchg
test
sahf
addr16
sbb
out
xchg
lods
cli
jle
xor
loopne
sub
iret
mov
dec
lret
outsb
repnz
adc
fisubl
mov
xchg
mov
cwtl
add
mov
xor
icebp
ret
jl
dec
dec
sbb
sti
and
scas
pop
push
lahf
inc
jmp
les
xchg
outsl
mov
lods
jle
xor
loope
push
push
mov
insl
inc
int
pop
daa
out
loopne
mov
and
pop
outsb
cli
adc
xchg
stos
push
stos
adc
loope
imul
push
xchg
push
jmp
xchg
adc
pusha
mov
les
inc
cld
es
stos
push
cmp
shll
pop
push
push
mov
pop
movl
mov
test
movsl
outsb
cmp
pop
das
inc
in
loopne
and
daa
popa
bound
xor
imul
rcll
xor
mov
or
repnz
push
cltd
cmp
or
std
push
dec
imul
setp
mov
cmp
pop
arpl
out
inc
mov
pushf
mov
fldenv
push
fimuls
popa
xorb
jp
xor
outsb
jae
inc
xor
add
dec
adc
stos
pop
mov
gs
push
mov
in
push
shl
lods
push
inc
hlt
sbb
push
jns
rol
aam
aaa
add
test
test
cmp
clc
cmpsb
cli
in
and
push
addr16
push
loope
or
mov
aaa
mov
sarb
push
jmp
inc
add
es
stc
enter
les
fndisi(8087
test
xor
mov
gs
clc
sbb
enter
cmp
lcall
iret
fmuls
inc
lods
push
test
pop
adc
cmp
daa
lods
push
in
mov
adc
sub
add
mov
cmp
and
shrd
inc
mov
inc
pop
dec
sub
jae
pop
adc
int3
adc
int3
hlt
inc
jge
pop
outsl
ljmp
push
aas
dec
nop
sarb
sub
js
hlt
fdivs
inc
sbb
xchg
adc
shll
or
lret
inc
sbb
std
and
lods
arpl
fidivs
dec
inc
push
into
push
pop
mov
dec
or
mov
call
leave
sub
les
mov
fs
movsb
xor
or
shl
daa
dec
adc
es
sbb
push
je
lods
sysenter
fdivs
mov
and
shrb
mov
and
push
jnp
aas
mov
stos
ficomps
sbb
fwait
jg
and
sub
push
cltd
test
clc
and
sbb
mov
pop
cmpsl
xlat
ud1
pushf
pop
cmp
add
pop
xlat
fs
xchg
mov
ror
lret
test
fimuls
sub
lock
pop
xor
xchg
mov
xor
jl
lahf
sub
cmpsl
jns
or
xchg
neg
imul
and
mov
inc
mov
mov
dec
mov
dec
mov
jg
lret
pop
xchg
jmp
cmpsb
popf
lock
loope
in
cwtl
das
test
add
std
imul
cmc
aam
gs
pusha
ret
fsts
sar
mov
sahf
xchg
pop
jne
dec
gs
enter
mov
inc
pop
stos
and
and
lock
in
mov
jecxz
dec
ss
sbbl
pop
loope
and
loopne
and
push
lret
mull
test
and
pop
cmp
adc
and
add
out
pusha
mov
loope
inc
test
pop
inc
or
and
fstpl
sbb
fcoml
aam
mov
aas
ja
inc
xchg
mov
aad
aad
mov
xorb
add
sbbb
rep
into
aam
lahf
push
movsb
mov
mov
nop
sbb
aaa
aad
loop
into
dec
jnp
ds
cmp
push
inc
leave
sbb
enter
clc
lret
out
test
out
cmp
scas
cmp
sahf
movsl
iret
rcrl
fbld
dec
and
and
push
dec
into
jns
dec
roll
pushl
xlat
pop
push
inc
mov
mov
in
jnp
add
es
call
rcrl
ljmp
xchg
and
xor
push
test
add
sub
clc
mov
and
iret
dec
scas
rorl
fcmovnbe
mull
xor
xlat
fdivs
and
xor
movsb
and
mov
push
push
out
mov
pop
insl
add
pop
movsb
enter
cmp
and
xor
js
or
lret
jbe
and
les
cmovne
or
mov
inc
int
scas
mov
rcll
mov
push
jge
icebp
cmp
xchg
sti
inc
sbb
mov
push
adc
cmp
mov
fisubs
std
inc
pushf
pop
popa
subl
push
inc
mov
adc
imul
sbb
mov
add
mov
pop
add
or
adc
mov
inc
testb
push
arpl
enter
cmp
in
aas
into
cmp
outsb
aaa
lahf
jmp
jmp
out
inc
mov
jne
mov
add
mov
fildl
xchg
cmp
cld
in
fnstenv
out
inc
lcall
mov
and
mov
jl
outsl
movsl
xor
dec
mov
fidivrs
sarl
clc
push
mov
xchg
sahf
pop
add
fadd
xor
mull
data16
dec
pushf
inc
ret
in
clc
mov
pop
popa
xchg
and
and
stos
pop
test
xor
pop
stos
push
mov
cld
push
fstp
inc
lret
jg
lods
pop
cmp
ss
adc
es
pop
xor
push
mov
and
add
push
fisttpll
sahf
add
fs
mov
cmp
mov
or
outsb
ljmp
rorb
fs
push
mov
pushf
adc
cmp
push
inc
push
mov
or
pop
and
xlat
pop
in
dec
aaa
cmp
xchg
adc
sub
xor
xchg
les
mov
lds
ja
test
pop
jmp
mov
test
idivl
leave
sub
bound
repz
js
xchg
mov
add
cs
xor
rcrl
sbb
pop
mov
insl
dec
inc
add
testl
pop
pushf
xchg
in
xor
jbe
cmpsb
in
lock
push
push
in
sub
jns
dec
clc
imul
pop
lret
dec
ret
clc
xorb
push
adc
movsl
test
mov
inc
lods
push
loopne
push
sub
xor
cmp
adc
test
push
push
push
sub
xor
jle
mov
rolb
mov
jle
ret
lcall
sub
fwait
dec
loope
lods
jae
mov
std
inc
scas
call
outsl
cmp
sub
jg
int3
mov
mov
adc
and
movsb
xchg
mov
fsts
popf
mov
mov
or
push
xchg
sbb
mov
mov
cmp
pop
jns
xorl
cwtl
jp
inc
nop
testl
sub
and
dec
xchg
push
rorl
aas
ss
dec
les
mov
or
mov
xor
jmp
je
cmp
idivb
mov
out
int
popa
imul
push
mov
push
mov
add
or
jp
lret
pop
clc
fwait
in
lea
xchg
mov
mov
test
jmp
test
into
lock
stos
mov
in
test
mov
iret
push
cmc
jb
cmpsb
xlat
fwait
push
pop
into
mov
insb
pop
cmp
cltd
push
inc
fwait
sbb
fcomi
xor
in
mov
pusha
xlat
mov
cmpsl
xor
mov
icebp
scas
push
lock
add
xchg
xor
jle
xchg
add
insb
sub
pop
or
aam
jbe
push
repz
test
mov
adc
lds
ja
pop
jecxz
lcall
xchg
gs
add
and
scas
mov
mov
dec
fbstp
testb
jmp
or
or
pushf
adc
cs
rolb
fwait
xchg
or
faddl
cmpsb
adc
roll
inc
and
push
mov
push
inc
js
inc
movsl
lods
ljmp
or
clc
inc
jle
jae
inc
clc
add
xor
cmp
pop
sub
test
cwtl
or
movsl
inc
adc
call
mov
mov
adcb
mov
nop
hlt
popa
testl
add
pusha
gs
ffree
push
sub
bnd
addr16
addr16
test
pop
lods
icebp
add
jecxz
inc
dec
inc
jl
jp
fsubrs
orl
pop
push
fadds
fdiv
adc
cmpsb
dec
cmp
scas
iret
dec
icebp
mov
lock
lods
mov
ss
cmp
add
push
add
mov
repnz
icebp
test
jno
pop
cmp
mov
popa
mov
mov
adc
push
xor
and
sub
out
jae
movsb
enter
push
mov
xlat
mov
or
into
loopne
into
loop
push
mov
fwait
inc
xor
out
and
sbbl
push
cmp
push
in
push
mov
mov
movsb
out
add
in
or
bound
xor
jns
dec
cmpsl
cmpsl
xor
add
dec
inc
fsts
cmp
xacquire
xchg
test
in
dec
cmp
ret
lahf
sub
jne
cmp
lahf
lcall
push
adc
jb
cmpsl
sbb
and
jl
xchg
sbb
test
dec
mov
stos
pushl
lahf
dec
push
sar
and
and
bound
out
push
push
mov
cmc
shll
in
lock
add
sub
jnp
jecxz
mov
orb
pop
sbb
data16
movsb
cli
mov
cmp
jp
sti
dec
js
mov
test
cmp
pop
sahf
outsb
sbb
lods
loope
mov
and
inc
inc
push
hlt
scas
adc
inc
lret
fisttpll
sub
cmp
gs
out
dec
insb
pop
xchg
sub
sbb
pop
mov
and
and
outsl
addr16
jmp
leave
cli
push
jno
cmpsl
xchg
push
push
mov
fldenv
orl
pop
jl
or
enter
addl
mov
subb
mov
movsl
repz
into
dec
adc
dec
rcr
or
xchg
xchg
jb
push
lret
into
in
arpl
lock
pop
dec
push
push
fwait
xor
in
push
ret
push
or
outsl
jnp
mov
sub
and
mov
jb
jb
push
stos
jns
pop
lods
in
add
outsb
leave
xor
cmpsb
xchg
mov
sub
cli
push
movsb
shr
addr16
dec
and
repz
xchg
cmp
cmp
rcrl
xchg
xchg
dec
mov
xchg
adc
inc
arpl
out
dec
sbb
dec
in
pop
jb
mov
push
mov
xchg
push
imull
mov
setne
iret
adc
push
cmp
outsb
nop
enter
sarb
sarb
ss
add
lcall
sbbb
repz
call
jbe
push
stos
aas
xchg
imulb
cltd
je
fildl
cs
push
into
adc
mov
stos
mov
aam
push
jmp
stos
inc
inc
or
fcoms
and
pop
push
push
ljmp
add
out
cmpsb
popf
adc
jnp
stc
mov
loopne
xchg
adc
scas
loope
pusha
cmpsl
cmpsb
imul
sbb
shr
scas
sub
mov
in
nop
jle
pop
imul
add
jecxz
dec
inc
repz
rcrb
dec
pop
mov
ds
sbb
test
xchg
push
dec
scas
jo
add
loop
cld
xchg
mov
add
lret
leave
stos
add
aam
outsl
shrb
sahf
js
cmp
pop
xchg
ja
or
xchg
in
test
adc
push
lods
pop
mov
pop
inc
mov
dec
ja
sub
dec
xchg
jo
jno
fidivl
test
lock
out
clc
insl
inc
pusha
std
mov
jns
mov
out
fmul
lea
dec
gs
roll
pop
xor
jecxz
fwait
push
ffree
pop
adc
add
iret
mov
cmp
daa
shll
scas
sahf
idivl
je
mov
or
fidivrl
repz
adc
pop
aad
mov
xchg
jns
aaa
and
cmpsl
aam
rcl
mov
pop
out
loop
inc
add
cmp
ficoms
ja
ljmp
pop
lcall
cmp
or
pusha
dec
or
inc
jae
pop
fsubrl
jp
cmp
and
sub
inc
sbb
jmp
test
xchg
or
dec
mov
add
push
div
or
daa
and
mov
outsl
sbb
sub
es
cwtl
repnz
aaa
dec
sbb
fs
pop
ftst
lods
xchg
cltd
shl
pop
rorb
push
loopne
adc
sahf
cmp
lea
es
addr16
push
loopne
xchg
mov
cmp
movsl
dec
mov
and
repnz
je
jle
sahf
push
cmp
les
or
mov
sbb
addr16
div
sub
adc
es
movsl
inc
mov
mov
lods
mov
pop
mov
or
sahf
adc
xorl
out
jo
xchg
rclb
push
addb
xchg
cs
lret
pushl
enter
pop
and
jge
cmpsl
leave
cmp
inc
ds
jecxz
dec
fmull
mov
wrmsr
ret
sbb
xchg
pop
xchg
push
dec
sahf
mov
xor
jo
imul
xor
sbb
cmpsl
into
inc
add
clc
mov
xchg
stos
fsubs
mov
out
data16
push
movsb
cmp
mov
push
and
mov
inc
push
aam
pop
outsb
clc
or
arpl
mov
fcmovnbe
lret
mov
sahf
dec
inc
sahf
sti
test
subl
arpl
mov
subl
setns
dec
sub
lret
mov
enter
dec
jae
movsl
sar
push
push
push
or
xchg
dec
fcoms
or
jl
call
std
dec
pop
cmp
stos
push
rclb
push
mov
into
inc
jnp
jns
pop
pop
pop
or
mov
lret
mov
jge
dec
les
mov
cmp
pop
out
js
pop
mov
add
or
cltd
call
jo
cmp
push
gs
aam
xor
mov
and
in
dec
int
insb
cmpb
pop
test
inc
scas
cwtl
shrl
mov
dec
inc
out
lock
mov
push
adc
pop
sub
in
push
mov
out
jns
jecxz
sbb
sub
test
mov
fs
lock
push
iret
loop
fisubrs
cmp
gs
inc
lock
adc
test
int
jle
xchg
or
shll
xlat
pavgw
mov
and
shll
subb
repnz
add
popf
inc
mov
fmul
jno
lret
nop
mov
daa
sbb
stos
mov
hlt
inc
sub
fdivr
add
lds
sub
sub
mov
xor
push
mov
push
dec
sbb
out
je
roll
or
in
sbb
cwtl
sub
cmp
xchg
cld
xchg
ret
int3
sbb
push
xchg
lods
push
mov
xchg
inc
fists
popa
inc
inc
ljmp
xchg
or
sahf
mov
cmpsb
pop
icebp
out
cmpsb
lea
out
mov
adc
push
xchg
lret
rcrb
rcl
loopne
sbb
dec
or
in
dec
and
push
jne
xchg
lds
ret
hlt
or
femms
pushf
xlat
and
mov
mov
add
xchg
std
lods
lea
test
daa
or
or
call
out
pop
leave
cltd
fcmovnu
and
ficompl
cwtl
gs
mov
mov
out
add
lahf
daa
inc
sbb
mov
dec
inc
jle
fdivrl
out
cmp
aaa
xchg
std
xchg
arpl
xor
or
xor
lock
addr16
cwtl
in
lret
inc
inc
ret
sub
pop
inc
scas
mov
movsl
movsb
jb
push
jb
test
sub
lds
das
dec
adc
xor
inc
imul
sub
out
mov
scas
cmpsl
dec
sbb
ljmp
push
jns
mov
xchg
int
repnz
push
jns
pop
inc
mov
stos
add
fstp
inc
xlat
cmp
sub
inc
mov
ja
push
xlat
cltd
sub
mov
movsb
inc
sub
cli
repnz
fistl
push
addr16
cmp
pop
mov
sbb
fwait
in
aad
mov
inc
cltd
adc
test
mov
mov
push
jnp
sbb
mov
daa
popa
mov
sub
out
xor
out
add
arpl
push
rcll
in
es
popf
xchg
dec
cwtl
mov
aam
ja
jnp
adc
xor
cmp
and
arpl
push
cmc
aad
insl
popa
mov
in
adc
and
or
test
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
pop
cmc
int
and
jnp
sahf
jnp
push
push
icebp
loop
sbb
divb
sbb
sbb
jo
sbb
push
pop
xor
adc
andl
stos
mov
and
nop
adc
pop
outsl
mov
cmp
inc
rcrb
mov
sahf
mov
push
mov
repz
sub
inc
fs
bound
cmp
outsb
jbe
mov
adc
loop
imul
popa
fidivrs
push
pusha
xor
mov
in
insl
ja
fs
inc
aad
adc
adc
xchg
sub
xlat
and
xor
in
movsb
fistpll
pop
in
scas
dec
mov
lods
dec
in
xchg
je
pop
push
mov
hlt
push
jmp
aam
mov
sub
leave
xchg
test
xchg
mov
cwtl
leave
inc
shrl
lcall
xor
pop
jle
js
imull
lret
inc
dec
lret
jae
aaa
movsb
pop
loope
mov
jno
outsl
mov
sub
push
push
push
push
sbb
int3
xor
push
loope
push
les
mov
lods
outsw
cwtl
in
daa
xor
jl
inc
xchg
mov
cltd
test
sub
nop
repnz
push
insl
dec
and
jg
das
ss
or
cs
fs
mov
mov
outsb
fbstp
xor
cmp
xor
cmpsl
stos
pop
pop
rol
or
mov
adc
ja
cmp
in
dec
pop
and
lock
addr16
cli
add
jo
int3
sbb
lock
xchg
mov
je
ljmp
les
pop
jl
push
popf
fdivrs
jno
mov
shlb
mov
dec
bound
jno
int
stc
cmp
mov
clc
out
cwtl
fwait
xor
pusha
dec
decb
inc
outsb
jmp
jge
lods
dec
sti
sbbl
xor
arpl
shl
adc
scas
xor
fsubrs
mov
mov
xorb
sahf
stc
add
popl
popf
mov
je
pop
mov
dec
pushf
mov
inc
adc
fsubl
xor
sbb
in
add
mov
push
sub
mov
clc
in
jno
jnp
or
push
xor
ret
cmp
lock
sub
pop
pop
imul
cs
gs
hlt
pop
adc
call
xchg
movsb
sbb
rorb
addr16
loope
mov
xor
adc
mov
cmp
test
add
test
xchg
out
push
imul
xor
adc
xchg
inc
push
mov
insl
stc
pop
lahf
inc
dec
lahf
dec
dec
pop
adc
iret
mov
enter
icebp
shr
pop
hlt
test
es
loop
aas
test
jne
dec
hlt
dec
repz
ret
and
mov
sbb
cli
adc
or
xlat
fwait
popf
nop
dec
mov
cwtl
data16
add
std
lods
aas
fisubrl
js
mov
push
mov
mov
jmp
pop
adc
mov
lret
jecxz
lods
pop
into
jmp
vpcmov
push
es
out
ror
loopne
and
xchg
push
ret
ret
nop
adcl
sbb
xchg
sbb
mov
dec
sub
pop
es
add
enter
jmp
pop
fdivrs
inc
sub
insb
fadd
movsl
mov
dec
arpl
in
xchg
repz
loope
mov
imul
push
jb
cmp
inc
xor
xchg
aas
repnz
int3
sbb
imul
jno
int
inc
xor
outsb
popa
cmp
outsl
scas
pop
test
fistps
inc
mov
mov
xor
cli
sahf
es
xor
mov
cli
nop
cltd
lds
mov
bound
jb
popf
mull
cltd
ret
mov
mov
mov
jl
jmp
adc
jl
mov
add
inc
dec
jbe
es
cmp
jmp
cmp
out
inc
les
sarb
push
adc
mov
inc
out
xchg
lock
add
shll
icebp
pop
loope
xor
pop
lret
lret
fs
fnsave
mov
lcall
repz
rorl
cld
xchg
lods
frstor
inc
cmp
pusha
mov
cmp
ficoml
jo
or
arpl
mov
jb
sbb
dec
dec
jmp
jb
or
push
xchg
inc
int3
inc
stos
cmpsl
mov
pushw
and
cli
pop
jmp
pop
sbb
pop
lods
ss
sbb
out
aaa
jmp
lods
adc
xor
add
shr
push
mov
inc
sub
or
adc
nop
pop
and
out
xchg
dec
or
mov
xchg
insb
mov
repnz
rclb
cmpsb
xchg
sub
lods
mov
or
add
bound
fistps
mov
es
add
jb
ja
or
add
sbb
mov
js
mov
add
fwait
in
mov
mov
push
pop
cltd
pop
outsb
xchg
sbb
xchg
enter
or
fiaddl
fiaddl
bound
loop,pt
or
sahf
repnz
fwait
mov
push
dec
mov
push
lahf
and
or
fnstsw
fbld
mov
fs
popf
popf
and
adc
fwait
sbb
test
inc
mov
in
jbe
jge
mov
inc
mov
sbb
jp
cmpsb
sbb
sbb
jb
test
imul
sub
call
das
decl
lea
popf
and
mov
fiadds
and
loopne
cmp
lods
js
jl
arpl
pop
push
test
push
faddl
lahf
test
cmp
push
jge
cmp
fldl
aam
icebp
in
inc
push
arpl
fs
lret
jbe
or
jbe
aas
clc
mov
fadds
data16
jg
ror
popa
outsb
sub
dec
mov
or
sub
mov
leave
push
mov
xchg
repz
jl,pt
sub
call
jno
inc
stos
inc
sub
jecxz
test
outsb
fsubs
outsb
jnp
dec
and
push
sbb
sub
mov
adc
shlb
in
mov
and
inc
nop
rorl
adc
mov
jae
outsb
aas
xchg
stc
mov
int
lret
inc
push
ret
shll
call
mov
lods
mov
pop
and
rorb
pop
cmp
jno
sarl
stos
sbb
push
xchg
add
push
movsl
and
adc
or
add
and
mov
sub
dec
js
jns
mov
mov
pop
int3
mov
fdivrs
xchg
push
and
lds
cmpsb
inc
pop
cli
seto
rcrb
ret
ret
dec
push
mov
in
std
mov
or
mov
lods
mov
mov
sbb
adc
out
ficomps
scas
jb
sbb
fisttpll
and
test
dec
fists
jns
pop
shll
dec
sub
and
jmp
mov
enter
sti
fstpl
sbb
loope
pop
mov
push
sbb
test
push
out
add
sub
mov
out
in
test
or
ja
insb
sbb
sbb
sbb
gs
pop
inc
shrl
adc
mov
mov
jne
or
fs
inc
bound
dec
out
push
into
js
or
test
push
jb
sahf
or
aad
sub
pop
decl
mov
shrl
shl
sub
lahf
jg
call
stos
mov
or
rorl
jns
dec
clc
jbe
mov
push
jne
lock
or
mov
push
add
cwtl
hlt
jo
jae
scas
sti
xchg
pop
lock
xchg
out
mov
leave
enter
fidivs
rolb
dec
or
mov
add
fimuls
and
popa
pop
cmp
ret
fimull
lcall
xor
in
adc
lcall
xor
daa
aaa
push
std
or
xchg
pop
jge
imul
leave
adc
jne
cmp
sti
mov
loope
inc
pop
mov
dec
mov
hlt
fiadds
pushf
shr
aad
and
movsl
ret
out
cwtl
cltd
rcrl
rorl
adc
cli
sbb
sbbb
repz
mov
mov
arpl
jp
rcrb
mov
jns
dec
iret
jne
or
add
adc
inc
into
add
movsb
loop
jecxz
cmp
dec
ret
pop
mov
xchg
pop
xchg
add
cmp
repz
lcall
ficoms
mov
mov
mov
sub
cmp
pop
lock
outsb
and
sub
cmp
scas
xchg
jmp
sbbb
and
pop
jbe
xchg
jb
inc
pop
sbb
jmp
mov
push
rcrl
jl
mov
in
les
push
dec
ja
adc
mov
in
pusha
std
rsqrtps
testb
mov
hlt
xlat
jns
mov
xchg
mov
dec
add
sub
push
test
cmp
in
repz
or
push
push
test
sahf
jb
sbb
test
jns
enter
fxam
pop
fnstcw
push
sbb
int
mov
fisttps
dec
insl
pusha
jns
and
gs
xchg
je
aas
adc
test
xchg
in
mov
adcl
sbb
popa
mov
xor
adc
adc
test
push
cli
out
addr16
lock
dec
mov
push
loopne
jle
jecxz
inc
pop
not
jmp
inc
stc
es
push
xchg
rcrb
js
sub
pop
test
les
mov
lods
mov
jo
lods
adc
repnz
lret
pop
es
pop
push
mov
adcl
movsl
pusha
clc
xchg
sbb
lcall
jp
cmp
dec
sub
dec
stos
loope
xchg
push
mov
iret
sahf
dec
adc
stos
sbb
dec
or
addb
hlt
in
sub
pop
inc
icebp
aam
ret
ds
aas
mov
sbb
inc
stc
iret
mov
bound
or
dec
sub
dec
scas
mov
ret
aam
xchg
xchg
sub
ret
mov
sbb
fisttps
jbe
mov
fs
scas
out
mov
cli
insb
cmpsl
sahf
mov
jnp
xchg
dec
mov
js
push
sbb
push
or
repz
dec
add
jmp
xor
loopne
std
loop
je
pop
in
outsb
lcall
cwtl
push
mov
shl
sahf
addl
negb
test
test
pop
popf
sbbl
ret
mov
jmp
incl
aam
jb
aas
lods
sbb
scas
mov
mov
arpl
sahf
fmul
inc
das
cwtl
imul
sbb
mov
pop
sbb
rorl
outsl
mov
mov
dec
xchg
push
push
mov
into
pop
adc
add
inc
adc
arpl
iret
mov
inc
cli
sahf
push
rol
fwait
adcb
test
xchg
std
shrl
jl
int3
jb
sbb
jns
sub
aam
nop
stos
repnz
pop
call
les
negl
push
stos
add
scas
mov
dec
stc
cs
and
mov
decb
push
lock
mov
das
aas
mov
xor
lea
adc
rorb
insl
pop
push
in
xchg
je
add
cli
out
lahf
ja
repnz
bound
repnz
cmpb
push
xchg
loope
xchg
pop
push
push
into
mov
dec
fdivs
fcmovbe
xor
and
inc
cltd
lret
jmp
inc
sbb
cmc
cmp
loopne
shr
out
and
aad
xor
data16
inc
add
scas
push
scas
callw
jno
adcb
cltd
push
mov
mov
bound
std
push
mov
shll
lret
dec
jae
adc
arpl
mov
loope
mov
xor
dec
loope
adc
mov
and
xchg
mov
xor
cmp
in
icebp
inc
cs
fld
subl
cmp
push
je
push
xchg
jl
cli
sbb
mov
or
push
das
adcl
adc
loopne
jmp
lcall
mov
mov
xor
lcall
and
add
fisttpl
rep
pop
xchg
lret
test
cmc
js
mov
cmpsb
nop
jp
push
mov
push
xchg
lock
in
mov
dec
jmp
and
inc
lcall
mov
push
out
ret
mov
dec
inc
mov
mov
xchg
sbb
test
sbb
addr16
movsl
aad
daa
push
inc
push
xchg
out
sbb
pop
sbb
mov
pop
jae
fs
xchg
push
in
std
int
test
xchg
popa
dec
cwtl
jmp
push
push
in
add
fwait
sahf
sti
add
cmpsb
mov
lds
add
dec
push
push
je
jle
stos
xlat
push
add
mov
bound
xchg
xchg
stc
mov
int
movsb
mov
bswap
fdivrp
loope
dec
fwait
jg
cmp
mov
sbb
fiadds
push
shrb
repnz
push
xchg
xchg
enter
adc
mov
jnp
les
fs
aam
mov
popf
outsb
lret
in
xchg
cli
push
out
adc
xor
or
sbb
ja
cmp
in
js
dec
jecxz
ret
shll
rorb
das
rclb
xor
sub
mov
roll
mov
addb
mov
shrb
out
out
scas
add
ret
lods
cltd
enter
jne
and
lahf
mov
push
jne
pop
jo
mov
mov
push
sub
lds
mov
in
ja
andl
out
daa
jg
or
repz
lcall
test
and
add
icebp
bound
add
cmp
leave
movsb
gs
or
fs
mov
js
nop
add
dec
divps
call
icebp
std
mov
add
mov
sub
cltd
pushf
shlb
les
imull
jge
popa
int3
mov
dec
add
sbb
filds
add
std
fs
adc
in
cmp
dec
testb
jecxz
stc
faddl
repz
sbb
sbb
jns
cmpsl
test
lods
xchg
scas
inc
mov
lods
ficoml
adc
xchg
or
iret
call
jp
out
ja
inc
lock
cld
jge
mov
xor
sub
cmp
in
icebp
les
cmpsl
xchg
sbb
pop
icebp
xorl
in
daa
ret
mov
movsl
cli
add
mov
sub
jno
mov
gs
int3
cmc
subl
sbb
iret
and
cmp
mov
sahf
mov
and
push
sar
lods
sahf
sti
mov
loop
insl
fcom
addr16
mov
adc
add
cmp
xchg
adc
mov
scas
rorb
fsubrs
loopne
call
sub
out
loope
cmp
das
pushf
out
adc
lret
rolb
enter
xchg
add
jb
fists
dec
inc
sbb
push
cwtl
ficompl
push
insl
adc
adc
pop
in
aaa
cmp
imul
fldcw
mov
aam
mov
cmpsb
jecxz
mov
popf
mov
mov
fwait
mov
mov
push
mov
lods
data16
mov
les
dec
bound
mov
loopne
jp
push
adc
fbstp
in
cs
sub
push
cltd
mov
insl
pop
call
lods
mov
sub
jge
push
mov
fidivrs
xor
sbb
out
shll
cmp
mov
fwait
mov
mov
fistpl
mov
stos
add
bound
sub
mov
or
fstpt
mov
std
jl
out
jp
das
loopne
jle
jo
dec
push
cld
lock
jg
int3
outsl
inc
subl
add
xor
cwtl
sub
cmpsb
sbb
and
push
fcoms
push
imul
pop
sbb
or
mov
inc
dec
jae
fs
inc
stc
inc
andl
hlt
and
xorb
adc
daa
push
push
pop
mov
sti
cmp
xchg
movsb
lds
insl
sti
sarl
jge
sbb
sub
and
push
inc
xchg
int
xchg
movsl
mov
mov
dec
fucom
lods
jge
test
xchg
cld
mov
pop
daa
pusha
adc
ja
xor
test
push
mov
sub
mov
lret
mov
xchg
dec
adc
adc
jle
in
inc
inc
cmpsb
add
xchg
pop
loopne
or
cli
xchg
int3
inc
rcrb
imul
loopne
push
mov
cmc
into
pop
js
add
shl
adc
arpl
sbb
sti
ds
test
orb
movsb
and
jp
cmpsl
jecxz
data16
mov
push
testl
push
fcmove
add
xchg
add
push
and
adc
jg
xchg
and
mov
clc
lea
push
test
js
xor
loop
mov
sahf
dec
divb
dec
out
call
and
jge
add
ljmp
pop
insb
aaa
push
xchg
jns
out
in
into
mov
mov
mov
call
adc
pop
fwait
cltd
lret
adc
sbb
dec
push
cli
dec
lock
andl
or
mov
cli
push
jp
xchg
vmovhps
inc
sarb
fnstsw
jb
cmp
inc
cwtl
push
or
pop
dec
dec
aaa
xchg
sti
leave
cmp
and
mov
mov
rcr
jb
mov
and
ret
loop
pop
std
jmp
shlb
push
dec
and
in
roll
int
inc
mov
test
clc
mov
push
imul
inc
les
ficoms
sub
adc
in
jbe
dec
addb
loope
rcrl
pop
cmp
cmpsb
xchg
xchg
cmp
mov
test
add
adc
mov
add
sub
dec
add
cmpsb
jbe
push
mov
cmp
int3
shll
and
js
test
xchg
pop
fs
adc
sbb
jmp
outsb
inc
fstpt
jno
cmp
xchg
bswap
in
fiaddl
cmp
push
mov
push
nop
xchg
or
adc
loopne
xchg
xchg
dec
aam
push
and
pop
mov
or
shr
mov
jb
inc
outsl
mov
ficomps
cmp
cmpsl
xor
inc
in
jle
adc
out
and
and
add
jae
popa
push
jns
xor
jae
sbb
negl
dec
outsb
test
jle
rcrl
lods
lods
leave
jmp
test
cmp
push
or
push
call
js
hlt
cli
jecxz
cmp
sti
fmul
mov
push
dec
sahf
inc
ljmp
dec
mov
add
xchg
mov
xor
add
aam
pop
mov
sbb
nop
mulps
scas
push
aam
sub
xchg
fidivs
sbb
mov
pop
insb
mov
nop
mov
jo
mov
cmpsl
push
out
adc
and
and
push
inc
fdivrs
incl
pop
mov
addr16
mov
int3
jbe
mov
rorb
or
leave
mov
add
pop
xor
add
xor
and
inc
addr16
in
xlat
flds
push
inc
rolb
push
test
jge
pusha
xor
clc
push
in
mov
jno
repnz
pop
pop
push
push
pop
mov
inc
mov
sbb
pop
xor
enter
sbb
loop
hlt
mov
aam
std
jmp
dec
jbe
std
test
shrb
popf
out
mov
jbe
imul
outsb
pop
jb
ja
lcall
push
adc
pushf
dec
push
aas
notl
cmc
bound
arpl
loope
mov
fcoml
adc
mov
loop
jecxz
or
test
imul
and
es
add
cmp
inc
mov
cmp
std
inc
lret
push
aaa
dec
push
mov
clc
ds
jmp
cmp
mov
xchg
das
pusha
mov
cwtl
sbb
push
push
fsubp
sub
orb
jg
mov
inc
sbb
jnp
cltd
xchg
jge
pop
pop
inc
das
xchg
xor
pop
sub
aas
mov
fwait
ljmp
cmp
or
and
out
mov
out
mul
jge
daa
adc
inc
mov
popf
scas
jo
jo
repz
or
outsl
nop
cli
xor
repnz
icebp
loop
out
int
pop
sarl
aam
sbb
mov
sahf
arpl
jg
sti
cmpb
mov
pop
pusha
in
lahf
xchg
adc
push
mov
out
ss
pop
daa
jecxz
inc
adc
in
loop
lds
adc
fildl
cltd
add
or
push
lods
inc
adc
xchg
pop
loope
cmovo
fwait
mov
imul
aam
and
push
pop
or
pop
in
aas
push
ret
mov
push
mov
daa
insb
std
into
sbb
or
in
xchg
push
adc
sbb
jp
mov
nop
imul
pop
mov
mov
dec
inc
push
shll
int3
shr
test
and
inc
sub
test
jmp
lods
jb
mov
push
imul
fidivrl
sub
mov
fisttpl
cmc
pushf
out
sbb
cmpsl
push
add
jo
in
je
cmpb
jl
pop
enter
push
inc
mov
sbb
ss
bnd
outsb
fwait
arpl
fcoms
imul
shll
insl
movsb
mov
clc
clc
pop
push
adc
mov
shll
pushf
dec
add
xchg
adc
jecxz
ror
fwait
mov
iret
test
xor
js
dec
sub
outsl
mov
sbb
movsb
ds
leave
ret
xchg
test
add
test
jl
hlt
mov
sbb
aas
and
jne
ss
adc
icebp
pop
pop
addr16
add
icebp
mov
mov
repz
mov
imul
lret
and
inc
mov
mov
fwait
lds
movsb
mov
mov
je
lahf
in
or
add
xchg
insb
mov
stc
mov
adc
cltd
or
jecxz
in
jmp
inc
adc
or
in
popf
mov
xchg
addl
fimull
test
dec
xor
loopne
and
cmp
inc
jl
movsl
sub
cltd
or
push
mov
cmc
mov
enter
mov
pop
pop
fldcw
jecxz
mov
inc
inc
movsl
testl
inc
jmp
aaa
rcll
sub
leave
cmp
jns
and
movsb
nop
jecxz
mov
add
popf
int
fsubs
fs
pop
fwait
mov
dec
or
movsl
push
jle
lea
pushf
and
addr16
je
or
addr16
or
punpcklwd
add
fs
addl
pop
es
shl
aaa
jns
add
scas
not
inc
sbb
push
gs
cmp
push
push
push
je
push
xchg
test
outsb
sbb
subb
sti
cmp
in
xlat
xchg
ja
and
inc
je
lock
or
cmpsl
xchg
stc
push
push
push
sub
mov
pusha
bound
cltd
gs
jp
into
mov
imulb
out
daa
inc
xchg
shrl
xchg
xor
into
sub
jo
test
sub
popa
jle
or
mov
stos
popa
mov
push
pusha
and
filds
fcompl
and
cs
testb
dec
jp
dec
scas
mov
add
adc
mov
outsb
push
add
and
ror
inc
mov
repnz
das
xor
and
add
data16
xor
push
repz
jmp
and
out
xchg
adc
adc
or
divl
fs
fs
enter
jge
push
leave
sub
stos
mov
jnp
stos
mov
mov
jg
inc
or
imul
xor
sbb
sarl
sahf
jp
into
lds
xor
gs
aas
add
repz
adc
ret
add
movsb
fbld
mov
scas
xor
das
cmp
mov
sahf
cmc
jae
addr16
mov
lods
xchg
orl
cmp
movsb
negl
call
test
sbb
rcrl
mov
gs
pusha
pushf
sbb
pop
inc
and
pop
sub
dec
add
jecxz
mov
ret
imul
frstor
xchg
das
and
jae
imul
inc
dec
sub
aad
sahf
fists
popa
sbb
inc
push
lret
jbe
xchg
ret
cli
mov
lds
mov
jno
mov
adc
push
repnz
sub
cmp
lret
cmp
mov
sahf
xor
shll
mov
mov
les
xchg
mov
addr16
cmp
test
es
movzwl
cld
inc
pop
js
dec
add
mov
out
sub
mov
dec
xchg
sbb
mov
mov
sub
cmc
sbb
cmpsb
mov
in
dec
repnz
cmpsl
pop
and
stos
enter
sbb
add
idiv
dec
stc
jle
out
test
fistps
adc
adc
mov
daa
mov
mov
mov
xor
mov
or
nop
shl
xor
scas
in
in
fbld
xchg
and
in
and
cs
dec
rcrb
shrb
jecxz
repz
dec
in
fnstenv
push
int
mov
jmp
cs
in
mov
mov
xchg
push
cmpsl
mov
cmp
cwtl
sub
mov
push
push
xor
mov
out
daa
dec
insl
je
movsl
dec
sub
call
mov
adcb
cmpl
std
fwait
iret
cmpsb
cmpsb
gs
lahf
jne
gs
xchg
fnstenv
mov
jne
aas
push
aam
ljmp
cmpsl
insl
mov
mov
push
out
in
loop
xor
fcomps
fstl
ss
and
pop
popf
ja
jae
loope
push
incl
and
mov
sarl
mov
xchg
mov
orl
loope
repz
push
cs
mov
xchg
jmp
inc
inc
idiv
out
xchg
std
repz
xchg
or
sbb
jl
sub
fwait
sbb
pop
shld
popa
mulb
outsl
push
pushf
jg
in
mov
push
out
add
scas
and
add
movsl
add
leave
dec
clc
fwait
ja
dec
test
adc
ljmp
pop
cmp
cs
or
push
mov
add
xchg
sbb
mov
daa
les
xchg
cwtl
sti
mov
test
divb
shll
jecxz
add
mov
xor
push
inc
shll
mov
add
repnz
pop
mov
mov
in
sti
ja
jae
insb
mov
push
ljmp
rclb
inc
loope
rorb
jmp
leave
lods
cwtl
jae
mov
cmp
mov
add
jo
scas
mov
lret
stc
out
sub
sub
dec
adc
xor
fdivrs
mov
dec
and
lds
mov
or
movb
xor
ds
jge
iret
insl
rolb
dec
pop
in
and
adc
sub
mov
sbb
popf
test
ret
dec
sub
daa
mov
dec
sti
es
fmuls
jb
lds
jae
stos
or
insb
lds
or
sbb
mov
in
mov
push
mov
addr16
mov
outsb
shll
insl
in
les
call
sbb
or
fistps
shrb
out
in
lretw
test
call
std
push
arpl
movsb
pop
mov
repnz
das
outsl
ss
mov
lret
int3
fisttpll
pushf
fdivp
cli
xor
loop
xchg
lcall
popa
xchg
enter
push
pop
sbb
dec
mov
jne
leave
testb
cli
outsl
mov
les
xchg
push
popf
cmp
cmp
xchg
mov
xor
pop
mov
xchg
cwtl
sbb
rcr
in
xor
adc
xor
lock
jmp
imul
test
aas
test
outsl
inc
jne
mov
inc
cld
sbb
inc
in
xchg
out
in
movsb
dec
cmp
orb
mov
into
pop
stc
test
test
enter
push
lcall
lea
cli
mov
imull
xor
movnti
aas
sub
push
outsb
rcrb
mov
push
adc
insb
jb
pop
lahf
jge
pop
pop
fists
stc
mov
pusha
pop
sbb
and
mov
mov
pop
cld
aaa
jle
mov
pop
stos
imull
aad
mov
dec
lods
repnz
popf
lahf
pop
and
xor
insb
dec
xor
push
mov
mov
pop
mov
hlt
aas
push
xchg
inc
dec
dec
stc
jmp
sahf
pop
cmc
nop
sub
loopne
ds
cmp
js
or
mov
pusha
ds
adc
loopne
testb
pop
mov
test
push
dec
insl
int3
popa
addb
std
push
movsb
cmp
adc
ja
sbb
lods
mov
inc
cmp
stc
je
mov
dec
cmpsb
push
inc
test
push
lods
cld
mov
int3
push
jnp
xchg
lods
and
cmp
hlt
adc
lret
aad
cmp
jmp
pushf
lahf
inc
mov
jno
mov
rorb
sbb
bound
push
push
iret
cmp
popf
pop
xor
inc
enter
jne
nop
imul
lds
push
insl
mov
mov
or
add
pop
leave
lahf
pop
mov
xchg
push
xlat
les
xchg
push
popa
test
ljmp
sub
ljmp
cs
inc
cmp
loop
push
mov
iret
or
out
stc
aam
add
xchg
es
mov
in
xor
and
lds
jae
lea
pop
sbb
hlt
fisttpl
push
xchg
test
sub
fstl
mov
sti
sub
jo
loope
mov
jno
xchg
sahf
loop
jl
xchg
jbe
ret
ror
sub
aas
jp
fidivs
in
jg
cmpsb
out
push
aas
lcall
add
mov
inc
lcall
das
in
lods
add
cwtl
fistl
xchg
jmp
inc
inc
dec
or
dec
rorb
jg
jbe
mov
xlat
fadds
or
mov
mov
sub
xor
ficomps
or
outsb
xor
pop
ljmp
stc
xor
std
adc
shl
mov
or
out
jge
cmpsb
in
add
outsb
jnp
mov
stc
push
jge
cmp
add
push
mov
push
sbb
xchg
mov
pop
and
inc
div
cmp
jne
push
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
mov
jp
dec
mov
movb
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
