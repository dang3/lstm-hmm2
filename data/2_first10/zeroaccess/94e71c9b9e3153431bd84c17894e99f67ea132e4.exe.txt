push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
int3
aaa
cmpsb
lea
bound
pop
bound
xor
cmp
jns
jbe
jge
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
dec
dec
pop
cmp
adc
mov
jg
std
test
cs
inc
sti
sbb
sub
fidivrl
negl
and
sbb
mov
dec
movsb
push
sti
jbe
aad
pop
dec
hlt
shll
push
ss
or
cmpsl
mov
call
bound
or
aaa
or
sbb
cmpsb
sub
cmp
lea
lock
cwtl
popfw
add
cmp
jne
jns
xchg
fs
cmp
fcmovbe
xor
cmp
aas
outsb
cmp
xor
jp
add
or
pusha
incl
imul
dec
push
lret
inc
jl
sub
push
jo
into
adc
insb
mull
add
lods
pusha
pushf
add
lock
mov
out
int3
shrl
lods
cltd
jo
add
or
jmp
fadds
fs
xor
jg
sub
push
dec
adc
pop
hlt
aas
inc
popf
xor
and
ret
test
pop
jecxz
mov
mov
and
sbb
dec
xchg
dec
push
dec
xchg
enter
and
pop
sbb
pusha
or
ss
addr16
scas
cmpsl
and
nop
inc
cmpsl
mov
fcmovnbe
fucomip
cmpsb
mov
xor
sti
pop
pop
sub
pop
pop
and
cwtl
add
dec
jl
sbb
cmp
push
in
hlt
mov
aas
adc
subb
sub
mov
cmp
adc
pop
cltd
dec
inc
movsl
sub
popf
out
bound
fs
adc
ss
leave
movsb
pushl
push
jmp
sub
mov
mov
pop
adc
into
dec
lret
out
lods
push
aam
jg
sbb
pop
cmpsb
ret
iret
fwait
mov
adc
adc
xchg
and
xor
mov
sbb
nop
into
mov
in
in
leave
push
sbb
in
mov
pushf
mov
movsl
fisubrl
iret
pop
pop
test
ja
movsb
or
cmp
es
cmpb
mov
mov
sbb
sbb
leave
jnp
call
fldcw
jecxz
sub
mov
les
lods
movsb
les
iret
rclb
je
jecxz
jp
test
and
xchg
jg
xor
pop
or
sbb
mov
ficompl
lret
fstps
scas
cmp
inc
mov
xchg
push
es
push
mov
jge
idivl
and
iret
pop
in
pop
push
push
in
inc
push
mov
jge
rclb
arpl
push
jo
cltd
add
lock
mov
cli
and
sub
aas
push
xchg
xchg
nop
push
xor
inc
mov
xor
jle
mov
jge
cwtl
daa
dec
cmp
cmp
mov
and
inc
mov
js
test
movsl
loopne
sbb
stos
jecxz
cwtl
mov
inc
in
jmp
inc
pushf
mov
pop
push
cwtl
inc
inc
push
and
cmp
nop
faddl
inc
addr16
push
and
fstl
test
loope
das
xchg
out
jns
cmp
xchg
dec
jle
cmp
xor
shll
or
pop
push
pop
es
repz
and
mov
aad
icebp
push
popf
cli
pop
std
lock
or
xor
jnp
xor
sub
shl
adc
inc
mov
ret
mov
and
dec
test
arpl
das
lds
mov
pushf
and
fisttpll
into
shl
add
mov
dec
lret
xchg
fdecstp
add
and
add
inc
jg
js
jle
loopne
stos
sarb
xorb
inc
sub
fdivr
andl
mov
add
sahf
mov
pop
clc
movl
gs
push
fidivs
inc
xchg
rcrl
mov
rcr
test
push
dec
test
or
scas
insl
movsl
cmp
imul
cld
add
jge
loop
adc
insb
adc
dec
cmp
dec
and
pop
mov
daa
xor
in
loopne
add
xchg
insl
adc
jbe
mov
rcl
aas
insw
sbb
cmc
mov
je
push
outsl
sarl
rcrb
loopne
lock
add
repnz
fiadds
loope
add
lcall
push
xor
sti
push
negb
inc
outsb
sbb
dec
sti
ret
jle
xor
mov
cmp
out
add
cmp
into
mov
pusha
pop
cltd
ss
mov
or
jle
cmc
ret
fs
das
sub
add
adc
mov
push
push
xor
stc
jnp
jmp
gs
adc
xorb
sarl
mov
test
in
es
mov
xchg
bound
test
push
xor
inc
stc
repnz
adc
pop
jns
stos
adcl
icebp
sti
mov
bound
aam
adc
stc
jb
lods
js
divl
inc
inc
xlat
mov
cmp
mov
mov
out
lods
push
test
repnz
sub
movsl
aad
xchg
insb
jecxz
test
push
cmp
xchg
push
sbb
loope
rcrl
xorb
rorb
inc
cmpsb
setg
ljmp
mov
fld1
jno
and
out
outsl
mov
dec
loope
jg
les
insl
jle
test
pop
push
dec
fsubrl
sbb
push
inc
adc
aad
in
and
in
adc
into
pop
adc
popf
xchg
mov
jno
and
mov
insb
and
mov
es
jl
pop
add
scas
cmp
mull
adc
lods
jge
lock
add
dec
mov
cmp
fsubrs
rcl
jno
mov
jp
aam
repz
cld
and
pop
mov
dec
int
xchg
sar
push
push
sub
mul
daa
push
lock
and
mov
dec
xchg
sbb
insl
das
push
lahf
cmpsb
popf
or
and
jmp
pop
test
push
mov
cwtl
dec
inc
sub
inc
adc
jns
push
aas
mov
jmp
sub
push
fwait
mov
sti
add
cmp
add
inc
cltd
mov
je
xchg
in
mov
fdiv
and
arpl
cs
add
jns
in
aad
orb
je
stos
imul
leave
scas
mov
jmp
or
and
ljmp
adc
cwtl
std
cmp
mov
in
inc
add
sub
cltd
fdivs
jmp
push
pop
push
les
mov
adc
jle
insl
sub
adcl
sub
nop
or
add
mov
add
sub
sahf
adc
stos
adc
test
adc
push
sub
out
xor
pop
in
mov
iret
pop
or
imull
test
inc
dec
imul
or
outsb
pop
cltd
or
sbb
shll
je
and
pop
sbb
sbb
or
jl
mov
stos
mov
add
xchg
mov
lock
sbb
pop
adcb
dec
inc
add
jp
sbb
or
mov
xchg
cs
jo
jne
gs
dec
std
mov
sub
js
repnz
sub
repz
cld
jno
or
sub
outsb
push
aam
outsl
add
sbb
sub
pop
adc
popa
cmp
pusha
jmp
shll
or
fmull
out
cmp
bound
mov
mov
aad
cmc
lods
insb
mov
inc
movlps
pop
ret
movsl
mov
xchg
xchg
rcrl
loopne
imul
pop
pop
sub
xor
mov
out
push
jns
in
ss
dec
xchg
xor
xchg
xor
adc
dec
and
pop
test
pop
repnz
xor
mov
call
xchg
lcall
mov
dec
ficoml
sub
repnz
in
ret
cmp
out
cltd
inc
shl
pop
jo
push
aas
in
mov
lret
pop
mov
test
dec
shr
pop
mov
out
popa
arpl
push
mov
iret
shrb
sub
dec
sarb
add
pushf
inc
daa
in
or
pusha
jno
mov
pop
das
test
jns
sti
pop
xchg
inc
mov
pop
aad
and
push
aam
cmpsl
xor
inc
or
adc
inc
add
pop
adc
ljmp
mov
repz
bound
mov
je
int
dec
dec
dec
negl
mov
cld
pop
imul
in
js
xchg
aaa
add
sub
jmp
lret
jg
lods
sbb
mov
in
lock
sub
or
mov
daa
movsb
out
lret
cmp
jecxz
dec
dec
add
push
clc
std
sub
mulb
jge
adc
pop
fs
sub
jnp
cld
aaa
sbb
mov
int3
jecxz
fcmovne
pop
pop
loopne
aam
xchg
push
add
and
mov
mov
movsb
or
xor
push
xchg
sub
xor
mov
and
and
fs
roll
dec
pop
pushf
jle
cmp
pop
lcall
mov
mov
cmpb
outsb
in
mov
adc
aad
leave
or
mov
je
add
mov
pop
movsb
fistpl
test
xchg
arpl
loopne
mov
rolb
cmpsl
mov
fidivrl
gs
lret
dec
leave
push
mov
gs
lret
mov
ds
andl
loope
xor
fstpt
icebp
in
call
or
in
dec
scas
mov
push
dec
fstpt
xchg
ret
repz
daa
mov
jbe
pandn
in
or
xor
mov
ljmp
shlb
pop
push
adc
mov
dec
fcompl
pop
cmp
adc
inc
xor
mov
mov
dec
dec
movsb
les
pop
in
xor
cmp
add
sbb
cmp
inc
mov
mov
pop
pop
out
pushf
pop
sub
pop
inc
pop
cmpsb
pushf
stc
adc
jp
sbb
hlt
fdiv
sete
repnz
xor
mov
lods
pop
inc
stc
mov
ds
xchg
or
lret
out
cmp
shlb
addl
lahf
or
xchg
push
aad
mov
or
lahf
pop
sub
push
popa
add
lea
enter
data16
fmull
leave
fidivrs
mov
lret
jl
cld
add
mov
mov
call
xor
or
loopne
xor
push
insb
lahf
xor
fwait
xor
adcl
iret
pop
xlat
jae
push
shrl
cmpsb
rcrl
xchg
mov
adc
sbb
sahf
push
ljmp
inc
cmp
aam
bound
xchg
and
inc
mov
jae
mov
inc
jmp
aad
add
adc
test
pop
pushf
stc
out
push
jmp
jl
xor
fs
imul
add
cmp
push
push
outsb
repnz
push
add
int3
sti
in
push
mov
aaa
push
sub
andb
mov
sahf
lods
pusha
pop
pushf
fwait
cmpsl
adc
arpl
mov
mov
xchg
adc
outsb
hlt
mov
out
pop
xchg
mov
imul
dec
ret
insb
sub
pop
xchg
rorb
jne
sti
sbb
es
dec
loopne
or
in
insl
divb
mov
ret
or
mov
sub
orl
ds
and
pop
pushf
mov
sbb
pop
mov
inc
and
lods
xor
outsb
int3
icebp
push
mov
sbb
lret
pop
and
xor
and
aam
mov
xchg
dec
push
mov
push
into
call
inc
xchg
mov
add
test
dec
scas
dec
arpl
xchg
leave
in
in
cltd
movsl
sub
sahf
adc
cli
push
dec
dec
adc
mov
push
mov
inc
add
xor
sahf
data16
jmp
jmp
fnsave
and
push
ret
fsubs
mov
push
enter
stos
cli
lahf
or
or
jmp
stc
nop
pop
push
sbb
mull
lds
push
push
bound
mov
add
lahf
push
lret
dec
inc
mov
lret
jle
mov
cmp
pusha
adc
push
push
lods
movsb
sub
iret
cmp
xorb
addb
fimuls
or
aad
in
imul
cmc
insb
std
xchg
sbb
int3
xchg
dec
stos
pop
cmc
mov
push
ss
and
xor
dec
ljmp
jge
mov
sbb
adc
popa
pop
outsl
jmp
mov
mov
call
out
shll
mov
sahf
jl
jl
stos
or
jne
test
bound
cmc
fmul
sbb
loope
dec
pop
out
xlat
int3
add
xor
jle
xlat
xor
movsl
or
loop
es
mov
iret
mov
add
pop
sbb
shrb
or
xchg
in
add
dec
scas
xchg
mov
sub
mov
or
adc
mov
inc
sbb
sti
mov
dec
bound
jbe
nop
mov
mov
dec
xor
jbe
in
in
mov
and
sti
repz
movsl
sbb
and
cli
lret
xor
aaa
mov
adc
shll
jnp
pushl
cmp
pop
ficomps
fmuls
or
dec
mov
adc
and
lea
sti
inc
mov
psadbw
xor
jmp
jae
push
xchg
mov
jb
push
das
push
or
inc
mov
dec
sti
mov
int3
stc
ss
mov
jmp
repnz
push
xchg
mov
xchg
jmp
fdivs
cmc
test
mov
jo
push
pop
cmpsb
mov
pusha
mov
pop
adcl
cmpsb
outsl
mov
mov
adc
popf
and
fidivrl
sbb
stos
bound
je
jae
aaa
dec
sbb
or
pop
sbb
int
imul
sahf
inc
out
and
rorl
dec
ret
push
test
popl
ds
ret
mov
xchg
lock
lea
jno
xchg
cli
movsb
jnp
mov
cmp
sub
out
enter
sub
pop
mov
in
sbb
mov
ja
clc
stos
div
and
ret
in
mov
add
cs
daa
mov
sbb
and
sub
fcmovne
call
pop
mov
xchg
icebp
inc
sbb
lcall
add
ret
xchg
jmp
mov
shlb
pop
sbb
xlat
call
ss
sbbb
incl
fcoms
sbb
sbb
in
pop
fstpl
mov
inc
ret
out
mov
adc
mov
cmp
sub
hlt
imul
cmp
popl
mov
movsl
ror
in
stos
std
ljmp
xor
lock
sub
jne
int3
dec
ja
mov
mov
mov
mov
and
aas
sub
push
push
mov
js
sbb
fsubs
lds
sarb
xchg
lcall
lea
mov
hlt
filds
ss
fcoml
in
sub
jae
add
jge
imul
ja
orl
jns
mov
cmp
cmp
pop
test
push
adc
inc
mov
push
mov
sub
push
scas
pop
mov
jg
mov
push
fldl
adc
lds
repnz
lea
call
das
jle
dec
pop
sbb
push
mov
cmp
cld
mov
mov
mov
xchg
je
add
imul
outsb
cmp
gs
in
mov
push
cmp
sub
test
adc
add
clc
gs
ret
sahf
sub
mov
sub
dec
jb
jne
subb
fwait
cld
in
pop
jne
jp
mov
pop
leave
and
divb
mov
popa
movsb
fwait
popa
ja
inc
xchg
adc
das
pop
pushf
daa
sub
aam
xor
push
xor
fidivl
nop
sub
fwait
shl
fildll
seta
or
push
jmp
or
leave
pop
out
sti
mov
adc
sbb
loop
mov
and
and
cmpsl
inc
je
imul
mov
adc
inc
cmpsb
mov
sub
les
aas
jne
push
jle
into
adc
pop
and
rcr
jne
mov
xchg
pop
popf
hlt
mov
les
loopne
mov
xor
xchg
xchg
jl
in
push
cli
in
adc
mov
xchg
rclb
in
mov
arpl
or
fildl
jb
sub
jle
ss
ror
ja
and
jmp
nop
fwait
cwtl
js
mov
popa
loopne
mov
pop
je
std
dec
cmp
scas
insl
mov
stc
mov
push
and
inc
inc
mov
adc
xor
adc
mov
jl
dec
loop
add
lcall
hlt
cld
inc
mov
jl
pop
rorb
push
fs
jle
jecxz
sub
jecxz
jg
pop
push
or
imul
push
popa
cmp
cmc
xchg
lahf
das
mov
and
add
xor
jae
ds
or
pop
lods
inc
adc
ret
fidivrs
cmp
pop
cltd
sbb
fdivr
lock
insl
sbb
adc
xlat
mov
fldcw
negl
cmp
ss
fisttps
dec
call
arpl
jmp
dec
cmp
in
xor
pop
in
xchg
dec
xchg
inc
sar
je
es
dec
daa
sbb
icebp
mov
in
adc
divl
dec
push
adc
jnp
dec
mov
in
mov
loop
sub
fsubl
loope
inc
jnp
repnz
cmpsb
pusha
test
aad
loopne
addr16
jno
mov
imul
adc
subb
push
sbb
push
mov
xchg
push
push
lahf
repz
loop
notb
leave
dec
hlt
loop
inc
push
clc
pop
loop
pop
jecxz
mov
xchg
mov
xchg
loopne
push
jmp
in
xchg
out
mov
sbb
and
addr16
mov
cmp
pop
je
dec
mov
in
shrb
xchg
sarl
mov
xchg
jo
outsb
pop
scas
sbb
inc
inc
aam
mov
sbb
insl
fdivl
cmp
bound
mov
mov
imul
std
push
cmp
xorl
enter
adc
xor
ffree
fiaddl
xchg
push
sbb
daa
cli
mov
into
in
jle
dec
jl
jo
enter
sub
mov
mov
lea
sub
dec
inc
jo
mov
scas
test
aam
xchg
add
orb
cld
cmpsb
push
xor
rorb
scas
mov
mov
xor
mov
or
int
adc
sub
shlb
arpl
mov
ss
pop
dec
jae
or
ja
mov
add
popa
fucomp
push
dec
sbb
pop
inc
adc
adc
add
lcall
xor
xlat
mov
mov
inc
mov
negb
cmpsb
and
push
xchg
daa
sti
ss
fabs
out
or
out
lret
lcall
xlat
xlat
cli
pop
add
and
test
les
icebp
mov
pushf
movsb
mov
scas
nop
loope
push
or
sub
into
int
mov
cmp
ljmp
jle
mov
pop
mov
sbb
pop
push
lret
movsl
cld
fiadds
xchg
shll
inc
xor
lods
dec
adc
push
out
lcall
lcall
push
push
mov
ret
dec
adc
pop
insb
adc
mov
and
test
mov
adc
push
sti
shrd
bound
mov
dec
cmp
inc
lods
nop
dec
xor
jmp
rolb
hlt
push
in
in
cmp
je
dec
test
lcall
mov
ret
xchg
jnp
and
loope
cli
xor
dec
repz
jae
push
or
pusha
lea
push
fimull
cltd
jg
data16
xor
cmpsb
ljmp
cs
push
xor
lahf
inc
out
pushf
inc
addr16
mov
jnp
nop
lret
addb
sbb
dec
shlb
lret
sarl
mov
inc
sub
pop
test
cmc
lcall
andl
xor
sbb
xchg
xchg
xor
dec
inc
lods
sub
dec
mov
in
int3
repnz
mov
insb
loop
inc
push
pop
and
aaa
xor
mov
xchg
fdivrs
mov
stos
call
jae
lret
fsubl
xlat
dec
cmp
dec
rolb
sbbb
setno
dec
jae
lret
mov
inc
das
andb
into
adc
ds
mov
fsubl
enter
cltd
popa
xor
push
or
and
outsl
and
pop
mov
cld
jae
stc
into
out
add
outsl
jl
add
inc
shl
lret
mov
sbb
push
popa
arpl
lcall
test
mov
xor
sarb
sub
pop
repz
sbb
inc
aas
leave
mov
mov
sub
sbb
insl
pop
scas
jns
mov
int
mov
out
fwait
xlat
add
dec
pop
sbb
cmpb
xchg
das
pushf
cld
jge
push
mov
sub
repnz
sub
and
pop
loopne
fdivr
mov
and
test
xchg
mov
sbb
lret
in
xchg
repz
xor
sub
str
fldl
cmp
outsb
out
stos
xchg
cld
and
cmp
lods
xor
cmp
xchg
xchg
push
sub
sub
mov
aam
cmpsb
dec
iret
cld
sbb
lds
and
xchg
xor
arpl
aas
sbb
dec
out
out
push
mov
sbb
lods
out
dec
ret
xor
iret
fwait
cmc
xlat
in
mov
jb
bound
sub
xor
and
enter
rcr
cmp
lods
clc
mov
push
adc
mov
stos
outsl
pop
xchg
lds
lods
sub
push
or
lea
xor
mov
push
pop
scas
insl
hlt
repz
cmp
int
xor
ss
packuswb
outsb
and
sub
outsb
aaa
mov
ss
ja
xchg
repnz
xlat
xchg
xor
mov
fsubrl
outsl
fistpl
add
or
jnp
mov
rolb
lock
cld
xchg
shll
jle
jl
subl
or
mov
xchg
mov
xchg
jne
fs
push
or
imul
jb
mov
pop
inc
xor
fdivrs
and
sub
jge
xor
or
push
xchg
sbb
ja
stos
mull
and
cmpsb
rorl
loopne
fidivl
mov
xlat
pop
mov
clc
mov
or
and
jge
mov
lock
dec
cmp
inc
sbb
fdivr
mov
stos
divb
xor
cmpl
cwtl
sbb
cmp
imul
test
jmp
jecxz
mov
push
or
int3
ror
es
jl
cmc
clc
cwtl
popf
inc
addr16
lahf
orb
movsb
cmc
insb
in
add
push
stos
mov
fdivl
sub
mov
fisttpl
mov
adc
pop
lds
outsl
mov
and
cld
icebp
push
data16
inc
cmc
ror
je
in
inc
imul
stos
repnz
fisubrs
lods
ret
cmp
and
std
call
push
jae
xor
clc
popa
les
or
cmp
xlat
mov
mov
nop
loop
mov
pop
pop
insb
inc
mov
mov
cmp
lret
fdivrs
pusha
cs
stos
fcoml
and
xor
sarb
cs
out
dec
adc
sbb
jno
push
test
data16
hlt
addr16
mov
lds
mov
cwtl
js
mov
jmp
xlat
mov
pop
je
cmpl
cmp
dec
xchg
sbb
aam
frstor
sub
pop
lret
lock
lcall
enter
ja
pop
jge
jbe
mov
xor
leave
test
mov
jmp
popf
mov
push
pop
mov
movsl
inc
and
fucomi
jb
mov
dec
in
aad
nop
mov
les
stos
stos
inc
fs
rcrl
push
sub
inc
loop
adc
out
inc
jmp
data16
iret
out
jle,pn
hlt
mov
test
or
xchg
inc
shrl
mov
movsl
arpl
adc
mov
aaa
add
imul
das
adc
pop
xchg
jmp
iret
and
aaa
std
clc
pushf
ss
adc
inc
addr16
pop
out
or
sub
push
aad
xchg
bound
aaa
jnp
in
xor
xchg
fadds
or
into
push
out
mov
sahf
mov
jne
push
std
xchg
xchg
test
jle
test
mov
fnsave
in
popa
adc
mov
pop
add
dec
mov
dec
and
pop
sbb
xchg
sbb
dec
outsl
insl
movsb
push
lock
jecxz
sbb
jnp
push
lcall
mov
out
push
pusha
pop
cwtl
into
cmpsb
adc
ret
push
ret
pushf
sbb
in
aam
xchg
adc
cwtl
bound
mov
sub
repz
jge
daa
jmp
or
push
jge
pop
inc
rcl
sub
pop
das
push
sbb
nop
sbbl
inc
add
out
in
jmp
inc
movsb
dec
mov
xor
ds
sub
pop
ret
ds
add
adc
test
fsubrs
mov
adc
jecxz
test
xchg
jge
jns
dec
sub
xchg
stc
push
xchg
stos
aaa
out
add
pop
lret
sbb
xchg
mov
cmp
inc
outsb
mov
add
roll
int
add
xor
jno
std
aaa
movsl
add
loopne
push
dec
pop
cltd
xchg
cmp
lret
dec
scas
sbb
test
adc
mov
jae
js
sbb
lds
rcrb
out
dec
mov
ds
rcr
mov
dec
pushf
test
jo
pop
lds
call
jmp
inc
sub
in
or
cld
js
dec
or
pop
lds
push
in
ret
ret
cwtl
add
lcall
sbb
xchg
mov
hlt
lahf
imul
jmp
push
repnz
cmpl
vpaddb
in
jecxz
dec
mov
shrl
cmp
cmp
aad
nop
pop
mov
shlb
xlat
arpl
jns
jmp
vmfunc
fidivrs
lods
shrb
jmp
xchg
pop
push
inc
mov
push
imul
je
pop
jl
out
lods
pop
int
jg
mov
nop
mov
cmpsb
cwtl
lock
sub
repnz
sbb
sub
sub
ljmp
pop
pusha
cmp
incb
jge
xorb
in
inc
icebp
test
clc
lret
insb
xchg
fsubs
inc
and
js
adc
xchg
pop
insl
mov
sub
js
xorl
jmp
and
cwtl
jo
pop
jecxz
es
iret
or
mov
ss
hlt
stos
or
mov
pushf
pop
push
neg
fidivl
pop
pusha
dec
ljmp
hlt
dec
jg
rcr
or
imul
and
inc
mov
repz
cmpsl
popf
or
and
cwtl
fists
and
imul
sub
sbb
jmp
xorl
test
pop
in
fnstsw
aad
out
loopne
mov
test
test
scas
mov
pop
pop
jp
stos
jl
dec
xlat
xor
xor
hlt
loope
adc
sbb
xor
ljmp
cld
mov
xchg
mov
push
aam
movsb
aas
inc
ja
dec
or
xchg
insb
mov
out
or
push
rcr
sbb
adc
mov
aad
cwtl
shll
xor
mov
pusha
mov
mov
nop
out
sbb
adc
push
jo
fsts
fcmovbe
xchg
into
aas
dec
push
pop
xor
mov
das
aad
pop
adc
std
or
cmp
push
jge
xchg
in
dec
cld
ljmp
xchg
scas
mov
bnd
mov
insb
rcl
adc
lea
imul
and
shlb
dec
stos
cltd
sub
dec
cmp
pop
adc
iret
sahf
mov
mov
push
loope
daa
sbb
push
mov
push
movsl
ret
es
lds
int3
insl
pushf
xlat
pushf
scas
xor
ljmp
std
mov
push
push
out
add
rcrl
xchg
sbb
in
pop
pop
cli
xor
in
adc
sub
pop
mov
sahf
in
pushf
mov
xor
loope
add
sti
xchg
and
fwait
mov
or
sahf
mov
pop
int3
xor
push
add
push
lahf
inc
add
ss
mov
pop
ja
jns
enter
xor
pushf
call
hlt
fchs
lcall
ds
xor
cmp
testl
xor
jnp
rcrb
and
xor
push
iret
mov
xchg
push
out
lret
xor
aaa
jp
call
cwtl
dec
jle
call
inc
jl
into
and
xchg
jge
fldenv
outsb
imul
cmpsl
aas
sar
testb
lds
or
jno
or
push
or
push
aad
fcoml
xor
dec
mov
adc
mov
jae
jecxz
sub
and
mov
mov
jae
stc
or
inc
mov
jl
popa
sub
fdivr
push
cltd
push
fiaddl
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
mov
or
pop
bound
pop
bound
sbb
sbb
sub
fmuls
and
push
enter
xchg
xor
fwait
jecxz
adcb
mov
data16
int
pushl
aas
mov
cmp
scas
xchg
pop
mov
ret
lock
loop
or
cmp
jle
pop
dec
adc
add
jns
lock
mov
cs
jno
cltd
stos
out
jbe
into
mov
js
sub
inc
filds
icebp
xchg
dec
cmp
cmp
subb
test
pushf
icebp
jge
int
test
sub
dec
sub
mov
dec
mov
xor
repnz
and
jnp
push
int3
bound
les
pop
add
push
push
bound
int
mov
mov
sbb
notl
lods
sub
mov
iret
fisubrl
daa
xchg
nop
lahf
mov
jge
test
mov
xchg
cmpb
push
xchg
bnd
push
faddl
xor
jmp
pop
jo
imul
cmc
jmp
cmp
mov
mov
js
dec
sbb
push
mov
pop
stos
and
add
neg
pop
sti
fcmovnb
movsb
adc
lret
movsl
jns
xlat
push
push
mov
fs
pusha
sbb
outsl
sti
push
std
cmp
ljmp
xchg
mov
rcrl
dec
mov
shrb
mov
sar
cmpsl
add
das
or
test
mov
nop
inc
enter
cwtl
mov
lods
imull
adcl
and
pop
mul
and
les
outsb
mov
mov
out
mov
add
jl
jne
cmp
push
das
sbb
lods
icebp
inc
xor
xchg
pop
pushf
mov
sub
cmpsb
cmp
ljmp
sbb
sub
push
ret
cmp
xchg
roll
sarb
out
loop
push
mov
loop
arpl
movl
and
test
fsubs
xchg
mov
popl
addr16
scas
outsl
mov
add
fidivs
hlt
cs
jb
xor
call
sub
or
aad
shlw
inc
jp
xlat
ljmp
lea
and
adc
imul
adc
cli
pop
dec
mov
fdivs
mov
mov
or
pop
mov
pop
lods
arpl
xor
repnz
nop
int
add
filds
cmp
les
arpl
push
xchg
lods
test
rorl
dec
jne
xorb
mov
out
dec
mov
push
aam
insb
add
out
xchg
sub
jg
sti
std
bnd
lock
lock
sub
aam
int
mov
push
mov
sbb
rcrb
lcall
push
pop
adc
aaa
fnsave
scas
aas
gs
testb
pusha
jnp
inc
sub
add
or
je
aad
jo
ja
scas
sbb
stc
mov
push
dec
mov
stos
stc
xor
mov
or
jg
outsb
mov
stos
rolb
outsb
mov
aam
pushf
rorb
cltd
and
addr16
lret
xor
outsl
xor
ds
xchg
pusha
xchg
pop
decl
sub
sbb
sbb
mov
loopne
adc
inc
popl
pushl
or
mov
pop
xor
xchg
aam
jne
rcll
xchg
ds
insb
mov
idivl
sbb
sbb
xchg
imul
jnp
push
loop
or
js
xor
incb
add
and
mov
std
in
mov
lret
repnz
outsb
fisubrl
in
addr16
icebp
nop
std
idivl
sub
inc
daa
clc
fwait
out
repnz
dec
pop
stc
add
dec
jbe
ret
sbb
cld
pop
and
inc
mov
cmp
out
stc
ret
addr16
cmc
cmp
xlat
xchg
sub
cltd
xor
xor
nop
adcl
xor
sub
push
push
xor
roll
insb
pop
or
push
dec
pop
movswl
or
out
dec
push
into
arpl
push
mov
ret
pop
in
or
cltd
pop
std
push
jle
mov
sub
adc
loop
cmpsb
sub
mov
jno
out
push
push
ret
pusha
mov
ret
ss
xchg
mov
mov
int3
lret
call
lret
and
lret
int
cmp
pop
pop
mov
lahf
push
push
jae
push
outsb
in
cmp
loopne
mov
test
dec
stc
dec
shll
push
out
sbb
out
lret
enter
fs
jns
jl
jbe
mov
leave
mov
sub
cmp
sti
paddusw
popf
push
xor
mov
ja
inc
inc
out
sbb
jne
push
lock
lea
jp
jae
lret
bound
sub
xor
fldenv
xchg
rcl
repz
mov
push
icebp
adc
mov
call
daa
pop
stc
sub
dec
pop
fwait
mov
test
push
cmp
jmp
icebp
sbb
sbb
push
and
mov
sbb
in
repz
lret
out
out
repnz
fldl
mov
dec
repnz
mov
add
adc
push
movsl
cmp
jae
lret
inc
imul
stos
mov
xchg
cmp
loop
lret
inc
lcall
test
stos
cmpb
inc
mov
data16
fnstenv
test
xor
add
shll
sti
xchg
mov
cld
frstor
movsb
push
jne
sbb
or
insl
stc
sbb
mov
in
je,pn
mov
mov
jae
insl
lock
out
es
lock
mov
add
xchg
repnz
cmp
in
dec
outsl
das
mov
xchg
mov
mov
jp
xchg
insl
ret
push
push
repz
ret
in
shrb
idivl
in
adc
fnstsw
dec
or
sbb
cwtl
mov
mov
mov
mov
add
mov
lea
xchg
scas
xor
lds
add
rcl
ret
sbb
mov
inc
in
dec
xor
and
inc
in
incb
cmc
xchg
adcl
mov
int
psadbw
xchg
or
int3
jo
adc
xor
dec
addr16
push
hlt
shl
ret
xor
jbe
jge
add
ficompl
pop
outsl
cwtl
gs
cmp
xchg
daa
jmp
push
inc
cmp
imul
dec
enter
sub
sub
fsts
jge
pop
push
mov
mov
fcoms
outsl
aad
ljmp
call
lahf
sti
cmp
pop
test
adc
leave
jmp
pushl
mov
mov
xorl
js
adcb
in
push
divl
ss
sbb
inc
fldt
idivl
mov
jbe
mov
pushf
xor
push
movsb
xor
inc
cmpsb
aas
das
lock
std
cld
jmp
cmp
pop
call
rolb
pop
in
insl
addb
fcomp
xchg
movsb
leave
sub
jo
in
in
pop
sub
mov
push
dec
test
jnp
sbb
or
sub
xchg
mov
add
mov
scas
push
push
jbe
dec
mov
add
xor
mov
loope
xor
mov
leave
add
test
mov
adc
inc
cmp
mov
subb
dec
or
out
mov
pop
or
xchg
mov
lret
pop
rorl
in
jnp
push
movsl
rorb
adc
lock
into
mov
pushf
lea
push
jmp
or
in
out
and
test
sub
jne
cmp
mov
and
inc
in
xchg
adc
cld
xlat
iret
insb
aad
sbb
je
arpl
and
data16
fsubrl
andb
pop
das
or
repz
xchg
cs
jmp
add
push
std
mov
addr16
in
ss
test
lea
or
cmp
lea
repnz
push
and
xor
or
imul
mov
rorb
hlt
icebp
mov
dec
in
rolb
push
mov
imul
jb
repnz
xor
cmp
push
xchg
cltd
jg
aad
cltd
lahf
adc
movsb
inc
pop
mov
aad
test
and
inc
outsb
loopne
dec
xor
fidivrl
outsb
fucomp
movsb
xchg
xlat
add
loope
in
jle
xor
dec
rclb
cwtl
jecxz
cmpsb
push
cmp
push
sub
mov
idivb
mov
subl
das
cltd
or
mov
push
inc
xchg
setnp
and
int
not
mov
into
xor
cli
ds
popa
mov
aad
sub
sbb
repnz
mov
and
test
cmp
mov
int
cmp
out
sahf
fs
lods
push
orl
adc
insl
fsub
pop
xchg
std
push
aam
inc
mov
mov
mov
je
outsl
xlat
sub
arpl
xor
insb
and
inc
push
inc
test
lcall
mov
add
dec
mov
idivl
cmp
mov
pushf
iret
repnz
stos
fldl
cmp
push
xlat
pushf
mov
jb
js
rolb
movsb
fstp
mov
sti
pop
xor
out
aam
push
cltd
cmc
int
repz
dec
jmp
pop
test
adc
pop
bound
jno
inc
mov
daa
inc
bound
push
cmp
repz
fcoms
mov
fsubrs
dec
in
test
jns
in
inc
push
cltd
xor
cltd
je
jns
xor
cld
fs
dec
sbb
out
mov
jl
das
cmp
xchg
scas
sub
movsb
cmc
jns
jmp
push
sbb
notl
adc
jnp
push
test
ss
add
pop
daa
into
rcll
test
loopne
fsts
movsb
lret
mov
mov
lea
sub
ret
loopne
xchg
lahf
xor
cmc
jp
mov
cmp
jbe
jns
inc
xchg
mov
mov
imul
sbb
paddd
aad
fwait
in
addb
pop
adc
mov
js
andl
or
fs
inc
sub
xchg
jnp
rcrb
in
push
or
sub
mov
sti
lcall
out
cmpl
test
roll
and
cld
add
fnstsw
ja
shrb
scas
cmp
sbb
hlt
test
push
subb
scas
inc
pop
daa
jl
repz
jmp
pushf
outsb
ds
aam
pop
hlt
lds
repnz
adc
movsl
sub
cmpsl
aam
xchg
aaa
pop
jp
mov
nop
mov
mov
dec
sub
inc
repz
mov
xor
iret
lock
outsl
mov
xchg
in
add
mov
es
xor
mov
dec
dec
dec
and
popa
das
nop
loop
outsl
in
add
sbb
dec
arpl
test
stos
mov
sub
jge
inc
sub
mov
xchg
enter
int
sub
ret
rclb
pop
push
xchg
int
lret
pop
repz
xor
es
inc
lret
jle
inc
dec
cmpsl
add
cmpsb
popl
fildl
pop
pop
scas
adc
xchg
dec
sbb
arpl
add
jmp
clc
push
xor
pop
add
jbe
stos
sbb
jl
imul
xchg
mov
adc
jecxz
sbb
sbb
pop
lahf
mov
outsl
les
aam
lret
add
mov
and
mov
mov
or
rcrb
adc
rcrb
and
addr16
jno
in
push
lock
arpl
jmp
data16
push
sub
iret
clc
ss
lea
aaa
std
daa
push
xchg
test
aas
lret
ss
mov
sub
add
aam
and
clc
jp
das
pop
icebp
push
pop
in
nop
jle
daa
jb
pop
mov
imul
jne
repnz
movsb
mov
hlt
loop
lds
ret
jp
jg
and
add
mov
hlt
mov
sarl
dec
and
jmp
jecxz
cmp
pop
lea
push
add
not
mov
and
shlb
pop
jnp
xor
jp
repz
cwtl
cld
push
andb
add
rcr
fldt
sub
cwtl
xor
daa
add
movsb
and
lret
sub
inc
or
fidivl
pop
pop
mov
push
setl
mov
aam
jo
es
repz
or
cmpsl
push
xchg
sbb
cltd
add
lahf
js
push
into
sub
cmp
imul
fcoml
push
adc
inc
in
ret
mov
sub
xchg
mov
ror
xchg
arpl
inc
loop
mov
loope
mov
hlt
xor
mov
outsb
push
nop
lods
push
pop
mov
leave
and
mov
and
pcmpgtd
xchg
imul
nop
pop
push
xor
lods
rorb
cwtl
imul
lret
jmp
sub
in
jp
or
pushf
lods
int
out
xchg
out
insl
outsl
sbb
sub
or
stos
into
imulb
xchg
sbb
les
enter
sub
ss
sbb
xor
pop
cmp
insl
sub
and
sbb
and
pop
icebp
aad
jmp
call
fmull
popf
and
xlat
arpl
push
lods
popf
rcrb
or
mov
mov
sub
popf
add
out
adc
fs
clc
xchg
mov
add
jge
dec
xor
les
iret
xor
cltd
jb
push
or
pop
movsb
fisubs
in
pop
imul
xor
dec
cmp
test
adc
jle
xchg
out
orb
mov
sbb
inc
imul
push
push
pop
xchg
sub
loopw
push
les
inc
out
mov
or
sti
cli
dec
and
lahf
add
and
cmc
inc
int3
sbb
in
jno
inc
sbb
mov
pushf
ret
cli
leave
pop
ret
adc
test
stos
les
xchg
ds
jo
adc
bound
dec
dec
xor
les
call
xor
mov
pop
mov
clc
stos
cmc
xchg
sti
mov
dec
push
cwtl
pop
sbb
ja
mov
push
mov
cltd
dec
test
cmp
dec
pop
or
lret
add
adc
jb
mov
mov
inc
clc
sbb
jl
jge
fldl
mov
push
ds
or
jle
sbb
xchg
lods
pop
ja
and
rorl
mov
mov
mov
push
add
adc
lds
test
fcoml
and
sbb
push
or
xlat
les
ret
or
sub
sub
out
cwtl
push
stc
cwtl
popl
inc
push
insl
inc
pop
adc
lds
pop
xor
mov
and
lods
jo
insb
sarl
and
insb
pop
fbld
jo
dec
insb
insb
pushf
pop
sub
rol
pop
sbb
fldcw
jle
movsl
daa
mov
decb
add
adcb
mov
loope
sub
xor
stos
mov
inc
add
push
push
mov
pop
inc
mov
xchg
xchg
mov
cld
es
sti
xchg
mov
dec
dec
loopne
adc
es
pop
push
data16
sti
mov
aad
mov
flds
fists
xchg
pop
addr16
and
inc
sahf
mov
lea
pop
mov
mov
and
fmuls
and
push
sbb
push
mov
aaa
adc
daa
mov
out
and
ja
xchg
jge
lret
loopne
jle
sahf
mov
xor
mov
dec
dec
shll
and
xor
les
ljmp
fadds
je
pop
cmp
call
lods
fwait
xor
xor
popa
and
mov
push
lea
sti
adc
loopne
dec
sub
in
inc
pop
adc
xor
ljmp
mov
orl
adc
jb
jg
lahf
push
adc
sbb
adc
sub
adc
or
push
iret
enter
lret
iret
gs
insb
adc
lods
xlat
fstl
les
pop
mov
sti
pop
mov
cmp
or
mov
popf
nop
das
xor
sub
dec
popa
aam
pop
fidivs
xor
js
outsb
mov
xchg
cmp
add
lahf
mov
mov
jno
clc
cld
into
addl
lahf
fcompl
mov
daa
vpunpckhdq
mov
sbb
movsl
outsl
xchg
adc
jmp
lock
lret
pushf
pop
test
cmpsl
das
lret
add
sbb
ret
lock
sbb
jg
arpl
mov
cld
mov
in
mov
ds
push
addr16
lahf
pop
jg
mov
xchg
es
sbb
repnz
or
fs
loope
dec
sub
xchg
or
cs
sbb
inc
xor
outsl
mov
mov
loopne
or
mov
add
cmp
and
or
movb
lcall
movsl
cmpsb
inc
jmp
or
mov
cmpsl
xchg
mov
add
pushf
sub
jo
lods
push
xchg
cmp
dec
out
xchg
ficomps
push
repnz
push
cmp
cmp
xor
push
pop
jp
mov
mov
sub
data16
pop
sahf
lds
pushf
je
lret
dec
shl
lods
or
andl
repz
push
arpl
ret
das
lcall
jg
pop
and
mov
clc
aaa
bound
and
cmp
idivl
mov
mul
jmp
aam
push
cmpsb
xchg
addr16
xchg
mov
add
pop
outsl
sahf
sub
jmp
mov
cmp
cmp
rcrl
mov
js
push
insb
cli
mov
and
push
lods
jle
arpl
pop
fisubl
arpl
mov
mov
xchg
movsb
daa
mov
pop
mov
out
fadds
sti
ficompl
aad
aaa
rolb
outsb
inc
add
lret
aad
test
movsl
lahf
mull
add
outsl
mov
ljmp
mov
inc
fs
cmpl
inc
sqrtps
lahf
or
sbb
pop
test
add
into
pop
mov
das
rclb
fbstp
push
push
fnsave
mov
mov
movsl
mov
dec
test
jae
push
aam
dec
mov
loope
lods
lods
in
jle
pop
jns
jbe
mov
xor
adc
ret
inc
icebp
and
add
and
aad
int
cmp
lret
pop
inc
repnz
in
inc
lds
sub
insb
fisttpl
xlat
push
xor
lds
jle
clc
pop
push
fcomi
xlat
and
mov
push
imul
mov
and
adc
mov
xor
jge
adc
mov
cmpsl
lods
hlt
xor
jno
lods
sub
mov
arpl
jp
and
sarb
pusha
jg
pop
or
call
int
fcoms
push
lock
push
ljmp
and
mov
xor
sti
fbld
add
dec
inc
adc
pop
das
sub
pop
mov
fdivrl
and
jg
cli
sbb
xor
add
pop
inc
jno
in
jmp
or
cmp
inc
adc
mov
js
inc
and
adc
out
cli
xor
in
push
xor
hlt
imul
cli
lods
mov
add
sub
test
dec
divb
xchg
pop
jp
dec
subl
shr
pop
mov
aam
aaa
sub
call
push
mov
call
push
xor
inc
out
mov
push
push
mov
jge
mov
das
inc
mov
sbb
and
repz
xor
xchg
lods
test
fwait
jle
fnstsw
and
imull
sub
jo
inc
mov
sbb
mov
sbb
push
ds
or
xor
and
push
insl
cmp
push
mov
lods
ficoms
jp
shr
inc
cmp
fs
push
dec
adc
test
pusha
aam
sbb
and
push
sbb
repnz
iret
cs
ret
or
or
movb
pop
sbb
pop
xchg
insb
les
cmpsb
mov
ljmp
ss
bnd
sbb
ljmp
sub
fsts
adc
lea
test
pop
mov
sbb
std
push
inc
xchg
xchg
pop
mov
ljmp
in
xchg
cwtl
int3
xchg
sti
mov
leave
imul
xchg
test
das
jp
out
mov
xchg
aam
repnz
adc
lret
out
test
cs
mov
in
imul
dec
icebp
jb
cmp
ss
scas
test
add
mov
daa
outsl
mov
adc
test
lods
ds
adc
sub
cwtl
fwait
and
out
imul
add
adc
mov
jns
lock
xchg
pop
xor
in
subl
xchg
shrl
push
lret
ljmp
rcr
push
sbb
mov
movsl
mov
movsl
pop
rclb
adc
filds
bound
stc
xor
test
loop
xor
cs
scas
les
sub
cmp
bound
fnsave
xor
iret
mov
xlat
out
pop
call
lods
or
stos
jmp
cwtl
out
shrb
mov
xchg
shll
pop
push
inc
out
inc
sbb
std
cmc
ds
das
shl
mov
leave
popa
sbb
ja
mov
cmp
mull
push
mov
dec
out
or
cld
decl
or
mov
sbb
cmp
gs
cmp
xor
in
stos
insl
cli
inc
mov
push
mov
js
arpl
sbb
arpl
sahf
jne
sahf
mov
pop
out
push
push
push
stos
pop
outsw
sub
lods
inc
mov
sbb
outsl
xchg
mov
cs
or
notb
movsb
data16
cli
inc
sbb
lahf
popf
js
mov
fldcw
addb
mov
fisubrl
sub
cmp
mov
mov
pop
pop
dec
jl
loopne
shrl
mul
aaa
loop
cmovno
or
mov
sbb
xlat
nop
aad
push
pop
jno
push
cmpsb
in
adc
int
shrl
stos
xchg
add
add
das
mov
movsb
aas
and
sti
les
jg
sbb
mov
call
cmp
test
loop
mov
inc
cmp
sub
test
xchg
mov
test
mov
fidivl
push
std
repnz
in
and
mov
push
fcomi
xor
arpl
fdivrl
inc
jno
fimuls
icebp
pop
gs
mov
adc
test
lea
adc
mov
and
sbb
and
add
mov
pushf
rclb
arpl
xor
imul
cmp
out
mov
out
inc
mov
stos
sub
sbb
shrb
xchg
addr16
mov
and
xchg
test
and
into
cmp
test
pushf
ret
fadds
mov
add
push
call
add
inc
jl
je
sahf
jo
inc
fidivl
cmp
outsl
adc
mov
pop
push
mov
loopne
pop
lds
addr16
mull
fistpl
mov
movsb
daa
scas
xchg
ds
push
xchg
jle
sub
mov
push
push
add
and
pop
jmp
add
jnp
je
jbe
xor
ret
aaa
or
lock
sbb
mov
loop
enter
int
or
leave
add
pop
nop
dec
pop
cmp
xlat
ret
xchg
fwait
je
and
les
mov
mov
adc
push
jns
add
sbb
sti
mov
jnp
lret
mov
pop
pop
xor
into
adc
sar
add
je
insl
cwtl
inc
adc
filds
lock
mov
cmp
popf
cmp
in
dec
mov
mov
cmp
jnp
out
sub
xor
xor
test
sbb
fsubl
mov
push
das
add
and
repnz
cmp
stos
adc
jb
add
cs
js
test
aad
cmpsl
loope
enter
sbb
xor
movb
movsb
in
jge
jle
pop
cmpsb
mov
sub
or
jmp
lret
cli
enter
dec
in
inc
or
sbb
popa
fwait
pop
mov
adc
div
insl
movsb
lods
mov
jmp
in
inc
lds
sbb
cmc
movsb
sub
lea
adc
mov
sub
mov
add
adc
mov
repnz
test
or
cmp
push
pop
out
les
cmp
mov
push
cmpl
cwtl
pop
jmp
push
push
push
jmp
stos
jbe
out
in
cltd
and
insb
mov
and
mov
pop
in
daa
sub
ret
pusha
lock
mov
lods
inc
dec
gs
jp
mov
adc
and
dec
mov
jns
shr
lds
lds
mov
popf
lret
push
adc
adc
mov
scas
mov
jbe
or
fincstp
test
inc
xchg
cltd
imul
xchg
loopne
adc
daa
mov
xchg
lock
mov
jb
pop
jb
xchg
push
inc
testb
cmp
test
dec
addr16
pop
aaa
add
movl
mov
push
sbbb
outsb
mov
dec
and
out
loope
push
dec
xchg
dec
mov
add
push
mov
jle
in
and
daa
or
mov
idivb
lea
stos
les
cmpb
fdivl
or
jno
cld
outsl
ss
dec
fwait
ja
loope
lock
mov
stc
pop
xor
scas
jbe
int3
loop
icebp
loopne
pop
test
adc
pop
subl
mov
fldz
xchg
xlat
push
icebp
push
lods
inc
sar
inc
jecxz
fcoms
imul
cmp
pop
push
jge
cs
mov
loope
or
mov
fsubs
repz
fsubs
adc
test
push
imul
and
pop
mov
or
jl
fimuls
loopne
repnz
and
adc
movsb
aaa
or
stos
in
cmp
or
mov
xor
cmp
cs
mov
clc
fmuls
or
pop
sti
mul
sti
sbb
loopne
ljmp
push
hlt
nop
clc
cmp
push
es
dec
fwait
inc
or
imul
mov
mov
cmp
test
mov
dec
fstp
icebp
hlt
lods
dec
push
sub
inc
mov
scas
push
out
movsl
mov
cmc
xor
add
pop
xchg
das
pop
ljmp
xchg
in
sub
xor
stos
mov
push
jp
jo
push
jbe
push
sub
movsb
loope
push
pop
fsubrp
cmpsb
mov
pop
cld
lds
add
stos
xchg
divl
xchg
fistl
xchg
loopne
xchg
jb
in
cmp
lea
bound
stos
adc
fdivr
in
mov
sbb
js
jg
sti
pop
sub
xchg
inc
sbb
xor
push
sub
add
popf
iret
adc
in
push
mov
cmp
in
dec
mov
xor
iret
xchg
push
orl
outsl
or
pop
out
adc
push
mov
outsb
addl
and
and
and
lea
add
sti
cld
ficomps
mov
pop
ss
xor
shlb
inc
test
lahf
inc
dec
sbb
or
lcall
adc
outsb
lods
icebp
jns
cmp
cwtl
cs
xchg
fsubrs
mov
aaa
loop
sbb
mov
or
cmp
cmpsl
jl
sub
iret
pop
dec
loop
jbe
in
dec
test
mov
in
push
mov
pop
imul
inc
jmp
inc
xor
mov
mov
dec
shr
lret
sbb
xchg
test
jnp
and
pop
inc
pusha
pop
adc
push
dec
ss
inc
or
xchg
inc
mov
mov
je
das
fadd
and
fstl
push
or
ljmp
or
faddl
ret
cmp
int
pop
sti
add
xor
out
stc
sbb
xchg
clc
sbb
sub
sbb
xchg
cmp
arpl
pop
dec
or
popa
mov
lods
xchg
out
ficompl
sahf
pop
bound
je
sbb
jg
add
dec
dec
cmp
adc
in
shll
shlb
cmp
mov
in
jle
mov
int
in
outsl
cmp
outsb
jno
push
sbb
aaa
and
into
mov
mov
dec
jnp
xchg
xor
jnp
push
fstpt
aaa
std
sbb
adc
jmp
push
mov
mov
or
ss
or
inc
mov
cmpsl
nop
adc
xchg
mov
mov
test
or
lret
add
movsb
push
sti
ja
stc
lahf
inc
pop
icebp
jnp
pop
stc
leave
rolb
mov
xchg
or
and
enter
dec
xchg
cld
pop
bound
sbb
mov
fwait
pop
jp
ret
mov
loopne
adc
pop
outsb
clc
repnz
and
fistpll
mov
nop
and
lea
out
out
mov
lock
xchg
das
cmc
push
lahf
xchg
cld
sbb
xor
mov
out
cmp
jns
mov
cmp
cmp
or
repz
lahf
and
imul
lods
cld
mov
mov
or
int
mov
and
cmp
mov
dec
inc
das
outsb
mov
nop
cmp
js
fcompl
mov
mov
dec
lock
data16
push
push
push
fldl
nop
cwtl
xchg
adc
jl
icebp
stos
addr16
or
add
cld
fists
mov
jae
adc
into
xchg
xchg
hlt
mov
ss
mov
jnp
add
sub
sbb
adc
repnz
mov
int
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
arpl
ret
bound
pop
bound
lods
insb
xor
sub
sbb
fldcw
stos
testb
in
inc
cwtl
loope
sbb
xchg
push
sahf
icebp
jle
sub
pop
jle
pop
push
adc
out
mov
sub
in
or
sub
shlb
xchg
loope
push
jg
popl
adc
inc
mov
outsl
xor
mov
lods
jnp
push
dec
cmp
repz
das
pop
cmp
lea
inc
push
fsts
jno
out
sbb
mov
add
mov
rorl
ret
dec
add
ds
test
nop
mov
popa
or
mov
mov
jle
mov
add
shlb
out
lret
push
shr
sub
popa
in
and
test
movsl
loop
cltd
dec
test
jmp
inc
rcll
push
enter
stos
movsb
int3
addr16
fwait
mov
ja
clc
jp
test
cld
mov
test
cmp
fadds
xor
rol
loopne
inc
xor
insb
adc
imul
popa
fbld
jmp
jbe
in
subb
sub
int3
add
in
daa
dec
mov
es
test
adc
sahf
out
push
jmp
shlb
cwtl
cmp
lea
cmpsl
xchg
xchg
ja
jge
sti
outsl
repnz
fisttpl
or
xor
sbb
mov
imul
push
jmp
int3
push
cmp
lcall
movsl
call
dec
stos
lods
ss
leave
mov
orb
add
std
cmpsb
mov
int3
inc
push
scas
call
xor
test
and
mov
jp
cmp
push
stc
and
cmpsl
and
ljmp
jb
shl
pop
dec
cli
or
push
sub
cld
decb
mov
sbb
into
push
push
dec
adc
call
cmp
dec
push
cli
inc
test
mov
out
movl
jge
push
aas
decl
push
xchg
fisubrl
pop
in
repz
sbb
jne
inc
lods
jge
xchg
cltd
pop
in
adc
iret
add
or
pop
xchg
mov
dec
je
mov
in
test
sahf
scas
cmpsl
mov
loop
or
insb
je
outsl
mov
stos
insb
sub
ret
outsl
inc
fldcw
les
dec
cs
push
shrb
sarl
lods
ret
mov
mov
aas
xorb
adc
jno
mov
out
fdivp
call
pusha
cmpb
adc
and
adc
ret
sahf
dec
subl
lret
jecxz
cli
cmp
cmpsl
out
mov
dec
sti
rclb
std
test
fidivs
cld
fstps
xor
dec
cltd
dec
popf
and
pop
mov
mov
or
outsb
bound
xchg
add
shl
jae
sbb
add
push
pop
test
or
inc
mov
enter
lcall
aas
xor
inc
enter
mov
and
in
pop
cmp
lods
pop
int3
enter
in
and
xchg
sahf
mov
adc
ret
das
rol
xchg
ffree
repz
lret
cmp
cs
xor
movsb
push
mov
sbb
push
scas
pop
loopne
mov
ja
sbb
in
cltd
sub
ds
jle
cmp
add
sub
in
push
lret
je
adc
aaa
daa
push
pop
scas
aam
aam
xchg
flds
in
mov
test
push
fistpl
rclb
out
jge
and
call
les
adcb
mov
mov
cmpsb
xchg
add
xor
mov
pop
sti
leave
sbb
daa
pop
into
pop
or
xor
pushf
jg
icebp
enter
xchg
sub
cmp
pop
jmp
sub
leave
xchg
xor
mov
sub
xchg
bound
in
fs
pop
adc
xchg
and
stos
in
cmp
inc
sbb
jmp
xchg
popl
dec
dec
clc
jo
cmp
and
adc
sub
sbb
sbb
sub
inc
inc
fs
pop
test
or
ss
gs
dec
jle
xor
jg
and
lods
mov
add
shll
add
mov
arpl
or
xorb
aaa
cmp
scas
lods
sbb
mov
pop
iret
mov
cmpsb
fmuls
push
fsubrp
mov
out
and
jp
cmpb
mov
push
pop
and
jns
int3
fidivrs
lods
std
sub
arpl
sbbb
sub
add
pop
loopne
add
arpl
jns
not
and
lcall
pavgw
in
mov
adc
inc
jg
adc
jg
aad
call
mov
fwait
xchg
iret
sbb
push
gs
sahf
bound
cli
pop
add
pop
push
mov
mov
int3
or
dec
je
xor
mov
gs
xor
call
dec
fidivrl
sbbb
addb
out
arpl
or
scas
push
lock
pop
mov
pop
test
or
out
int
and
jo
inc
daa
pop
shlb
adc
sub
adc
repnz
out
xor
lea
stos
push
and
jnp
cmp
das
push
popa
sbb
mov
stc
xchg
and
and
push
cltd
inc
and
out
testb
xor
push
stos
sarb
and
inc
and
mov
sti
mov
xor
aaa
in
sub
insl
push
sbb
aas
clc
int
cmc
in
clc
add
ds
mov
sub
leave
jecxz
dec
inc
pusha
cmp
mov
jbe
sbb
xchg
jp
sub
adc
aam
add
jns
dec
mov
in
or
lcall
mov
push
cs
clc
or
fildll
clc
xchg
sub
inc
jg
fmuls
lods
das
fldenv
lahf
ss
mov
xchg
jmp
add
mov
push
nop
test
mov
jle
movsb
test
mov
dec
xchg
sbb
stc
cwtl
jl
cmc
cmpsl
in
mov
jl
push
cs
pop
bound
mov
mov
add
repz
imul
mov
cmpb
cmpsl
sub
fidivs
icebp
jbe
or
mov
inc
jmp
int
mov
xchg
movsb
add
inc
pop
push
cwtl
movsb
push
outsb
mov
stos
roll
mov
pop
adc
or
xlat
mov
push
and
scas
repnz
push
fbld
xlat
or
ret
mov
test
std
in
fcoml
push
loope
ret
adc
mov
xor
icebp
loopne
and
push
test
fdivp
cmp
ja
push
leave
lds
std
es
lods
imul
rcll
loopne
data16
pop
xchg
mov
mov
xlat
fincstp
mov
arpl
and
fidivs
ficoms
les
sbb
push
adc
aas
mov
xchg
inc
dec
outsl
insl
adc
sub
pushf
xchg
adc
rorb
test
push
pushf
sub
jns
clc
out
in
popa
pop
mov
xchg
jecxz
xchg
sbb
shll
mov
jl
xchg
dec
mov
test
imul
aad
and
mov
test
clc
xchg
ficompl
push
pop
mov
jb
stos
js
add
adc
mov
and
fbstp
push
test
nop
aaa
andb
mov
mov
pop
gs
jns
inc
sub
dec
stc
ss
mov
push
push
or
sahf
cwtl
icebp
sub
mov
and
mov
push
adc
xchg
mov
sbbl
into
xchg
cli
pop
aad
adc
fs
jecxz
daa
shr
mov
bound
rcll
testl
jmp
dec
pushf
xor
idivl
mov
loop
push
add
cmp
mov
and
pusha
sub
jle
xchg
cli
mov
or
pop
adc
cs
pop
or
push
lret
push
lea
mov
cmpsl
shrb
xor
xor
jecxz
xor
sub
fsubrp
int3
imul
mov
out
sub
in
sub
or
ljmp
mov
repnz
xchg
shrl
imul
inc
push
sub
jp
mov
imull
mov
rorl
decl
out
pop
and
dec
mov
out
or
adc
ja
mov
mov
adc
in
xchg
dec
scas
adc
negl
jno
scas
pusha
dec
imulb
and
adc
aam
sub
sahf
add
loope
add
and
pop
inc
dec
add
adc
into
fcmove
lds
je
and
mov
bound
dec
adc
out
test
and
lods
cmpsb
xchg
adc
xchg
mov
ljmp
or
or
pop
icebp
xchg
sub
cltd
les
cmp
cli
jl
mov
jbe
dec
pop
inc
daa
xchg
pusha
lcall
mov
out
and
mov
xchg
mov
jecxz
bound
xchg
in
xlat
test
dec
fs
jns
xor
fcompl
fldenv
push
pop
std
pop
rorl
cmp
loop
arpl
mov
call
jg
pinsrw
dec
daa
popa
xchg
push
call
dec
inc
rorb
filds
out
mov
mov
sar
mov
lods
add
out
addr16
push
adc
dec
pop
push
sbb
push
rol
mov
fsubrl
mov
and
in
xor
xlat
mov
ljmp
push
jo
mov
jns
xor
test
add
xchg
inc
xchg
das
add
inc
mov
pushf
mov
add
ljmp
cmpsb
pushl
ret
pop
dec
mov
cwtl
pop
inc
loopne
lods
test
ljmp
sub
shl
xor
out
mov
data16
aas
call
sbb
push
xchg
add
cmp
repz
cmpsl
lret
pop
mov
leave
stc
dec
mov
or
clc
mov
push
pop
push
shll
stc
push
jl
jle
jnp
xor
cli
pmuludq
insl
in
push
push
sbb
stos
cmp
mov
lret
mov
xchg
pop
mov
insb
movsl
adc
mov
or
gs
outsb
std
sub
mov
lock
stc
lods
jb
shrl
rorl
jg
aaa
mov
mov
fildl
aas
es
mov
adc
mov
cwtl
fwait
rcrb
sub
testb
pop
adc
push
aas
push
ret
add
test
jg
cli
pop
or
xchg
out
mov
xchg
repnz
cmp
pop
in
movsl
dec
lods
notl
jnp
xchg
push
xor
pushf
adc
lock
jle
pushf
pop
sbb
mov
mov
movsl
clc
pop
call
mov
pop
xchg
imul
aaa
stos
sti
pop
xchg
pop
and
xor
adc
dec
fcoms
pop
mov
and
pop
cmpsb
rcrl
pop
xor
aam
mov
push
cld
dec
scas
push
or
mov
les
in
mov
push
sbb
or
outsl
imul
cmpsl
repz
imul
rol
shlb
push
jl
int3
cmp
xor
push
jb
sub
sbb
fcmovne
popf
pop
loope
pop
xchg
cmp
or
and
outsl
fmuls
fidivl
adc
movsl
dec
orb
add
jmp
lods
sbb
mov
pop
pop
aam
adc
jo
cmc
xlat
inc
inc
jge
push
inc
mov
clc
push
cmpsl
xchg
push
outsb
inc
ret
jge
inc
fsubs
sahf
add
movsb
clc
daa
cmpsb
adc
push
mov
lret
sub
or
mov
jmp
cwtl
ja
inc
mov
xor
in
pusha
outsb
loopne
pop
sti
push
cmp
push
je
into
push
hlt
div
mov
jno
movsb
test
fsub
cmp
nop
sbb
jp
dec
aad
cltd
push
mov
in
sti
outsb
std
mov
mov
mov
addr16
xor
dec
jbe
mov
inc
loop
out
shll
pop
sbb
push
cs
inc
es
mov
stc
outsb
outsl
push
out
gs
test
out
mov
jnp
mov
or
dec
jp
add
xchg
cmp
nop
adc
lahf
or
mov
fwait
mov
pop
dec
lahf
pop
mov
insl
fsts
gs
ficompl
andl
rcrb
xor
stc
insb
cwtl
push
cmp
cmp
popa
ret
imul
cmpsl
xchg
jle
cmp
stos
shlb
jg
sarb
loopne
mov
movsb
fdivrl
roll
fnstsw
int3
mov
xlat
and
in
flds
pop
hlt
and
and
cmp
loope
lds
and
mov
mov
jg
bound
push
movsl
sub
fiaddl
loop
rolb
aas
mov
cli
hlt
daa
in
lock
sahf
cmc
dec
xor
sbb
push
jne
or
cmp
and
jg
sub
push
lea
loopne
xor
dec
sbb
and
adc
jb
aaa
mov
push
mov
and
xchg
jmp
repz
sahf
jae
into
cmpsl
cmp
pusha
jb
push
mov
jecxz
pop
mov
fwait
inc
push
cltd
ja
push
lret
adc
xor
mov
scas
imul
cli
cmp
jae
xchg
xor
jmp
nop
pop
fstpt
aas
int
out
ret
test
and
inc
cltd
dec
shlb
insb
shlb
mov
shr
sbb
pop
bound
rcrl
ja
pop
push
pop
ret
adc
xchg
cwtl
cli
mov
repnz
outsl
or
subb
push
push
push
popa
sbb
insb
jnp
xchg
movsb
and
fs
rcrl
jbe
jne
sub
mov
fmul
fistpl
repnz
jbe
leave
ljmp
js
sbb
or
popa
fiadds
adc
xchg
out
je
ja
jae
push
add
jnp
inc
nop
adc
clc
jno
test
ret
out
mov
sbb
pushl
push
lea
out
ds
push
hlt
cmpsl
enter
xchg
pop
mulb
xor
mov
aaa
dec
sbb
cmpsl
popa
push
outsl
sahf
and
in
hlt
inc
rorl
rclb
inc
push
lret
rcr
fildl
sub
sub
hlt
inc
insl
das
mov
sbb
mov
insb
aas
sbb
lock
ds
lods
into
sbb
xor
cmp
push
ljmp
push
mov
addl
inc
jb
test
iret
push
adcl
xchg
int3
and
mov
mov
cmp
aad
xor
inc
push
jns
sub
das
mov
cmp
push
jnp
lods
int
data16
je
or
adc
sub
repz
push
inc
dec
xchg
sarb
or
imul
adcb
sbb
jge
data16
sbb
sub
and
mov
sub
add
pop
es
scas
sub
loop
out
inc
jp
loopne
or
inc
fsubrl
das
jb
sbb
aas
mov
loop
inc
inc
push
and
jg
clc
das
in
dec
ret
arpl
xchg
mov
ss
sahf
add
mov
xchg
mov
mov
aad
aad
xchg
mov
bound
clc
sti
xchg
subb
cwtl
cmpsb
adc
add
dec
inc
push
daa
dec
cmp
in
rorb
inc
push
in
xor
cmc
cmc
xchg
jb
xchg
mov
jl
sub
pop
or
cwtl
pusha
aad
loope
mov
and
lahf
lods
mov
inc
inc
jge
psadbw
fcoms
add
ja
adc
fabs
inc
mov
ret
xor
pop
jmp
test
in
xor
inc
es
mov
pop
fsts
int
cmpsl
test
repnz
or
dec
nop
adc
jecxz
nop
cmc
mulb
adc
mov
mov
adc
xchg
dec
xchg
int
push
mov
push
mov
and
daa
and
fbld
mov
cmp
mov
mov
jbe
adc
lcall
test
aas
popf
mov
mov
out
inc
push
sbb
jecxz
and
pop
mov
scas
lods
cld
mull
add
dec
push
nop
push
movsb
and
mov
mov
negb
jecxz
lds
mov
cs
repz
shrb
dec
add
sbb
adc
notb
xchg
and
inc
ds
sub
jns
dec
jg
outsb
stos
push
test
mov
sbb
arpl
mov
or
aaa
rcr
sbb
aas
jl
cwtl
inc
sbb
imull
jge
cltd
xchg
push
je
jg
and
push
mov
int
xor
add
subb
loopne
ret
and
sub
inc
orps
cmp
in
jae
cmc
xchg
push
rolb
shll
push
test
cmpb
lods
popa
cmc
push
sub
stc
test
shrl
sbb
sbb
mov
xchg
mov
jno
popa
sub
adc
fmul
ja
jne
mov
jo
add
mov
adc
repnz
imul
divb
jae
dec
pop
adc
or
cmp
les
push
fcompl
int
mov
xchg
int3
fs
xchg
adc
pop
in
push
scas
mov
aam
jecxz
lds
and
mov
xor
mov
insb
cmp
push
push
iret
enter
lcall
ficoml
dec
pushf
pop
ljmp
scas
jns
ret
cs
pop
dec
and
add
adc
xlat
pop
push
fucomip
xor
fisubl
xor
lahf
ja
std
scas
jns
outsl
cmp
fadds
loope
xchg
cmp
std
stos
roll
pop
in
shll
cmp
sbb
push
in
push
enter
adc
jg
or
sbb
fcompl
pop
xchg
inc
iret
ds
decl
je
fisubrs
jns
dec
cmp
aaa
out
fldt
sub
push
imul
dec
jb
push
lods
push
xchg
loopne
push
stos
andb
scas
pop
mov
jnp
rolb
imul
jb
mov
clc
ret
rolb
push
or
stos
pop
aam
iret
loope
in
cmp
int
inc
aad
test
mov
shld
ja
notb
add
add
and
jecxz
adc
jp
inc
mov
lods
cmp
cmp
add
mov
repz
repz
jecxz
sub
inc
insb
mov
mov
fadd
dec
inc
je
sub
imul
fwait
cs
jg
sbb
lcall
repz
adc
push
inc
les
rcrl
shlb
imul
pop
lods
mov
adcl
stos
xor
mov
jl
pop
cld
cli
scas
xor
xchg
xchg
ret
lock
outsb
fwait
pop
jnp
pusha
bts
jp
pop
popa
sub
rcrb
push
lahf
insb
mov
xchg
fiadds
jae
popa
mov
or
push
sbb
jo
fsubl
push
and
hlt
mov
mov
ret
dec
arpl
insb
cmpsb
add
pop
jnp,pt
jne
outsl
mov
jmp
pop
sti
stc
lahf
push
test
mov
or
push
pop
or
mov
scas
add
xchg
popf
cmp
cmp
mov
pop
popf
cld
cmp
dec
pop
in
xlat
cmpb
cmp
adc
leave
jne
push
push
std
lods
in
push
or
mov
call
xor
add
and
loop
cli
sbb
inc
es
into
mov
and
dec
repz
cli
adc
dec
jge
push
pop
aad
xor
cmp
cwtl
mov
pop
sub
mov
xor
xor
pop
xlat
stos
lahf
addr16
sub
cmp
or
jno
jp
bound
dec
mov
test
mov
inc
bound
cmp
dec
and
shll
ljmp
push
fstpt
pop
inc
std
dec
xor
test
mov
or
and
test
fcompl
out
adc
add
mov
dec
gs
xchg
inc
lea
pop
jmp
int3
mov
cmpsl
in
rcll
sahf
pop
add
add
es
add
sub
adc
dec
stos
js
mov
xor
push
sub
jmp
rorb
insl
mov
or
dec
pusha
dec
mov
jne
loope
dec
imul
xchg
arpl
out
loop
std
sub
repnz
lods
int3
fs
cmp
adc
xlat
loop
pop
mov
pop
pop
cmpsl
push
push
aad
imul
or
insb
dec
jb
inc
xlat
mov
jae
dec
and
mov
scas
push
ret
subl
mov
je
jbe
jno
xchg
and
pop
xor
nop
mov
mov
mov
pushf
jle
sahf
push
aas
jne
in
jno
lcall
test
jp
jl
test
sub
clc
shlb
sub
or
add
xor
jo
jp
dec
popf
fdivl
call
jl
iret
push
push
icebp
test
mov
jg
pop
and
stos
lds
shrb
mov
outsl
rcll
pop
adc
dec
lea
dec
sbb
xor
data16
test
jg
inc
hlt
je
es
nop
insb
push
arpl
stc
testb
mov
dec
jg
in
cld
mov
push
sub
jmp
stos
shll
add
lods
xor
adcl
push
aas
jbe,pn
sbb
mov
cmp
das
adc
jl
les
cmp
and
pop
daa
mov
je
sbb
jb
iret
into
sbb
xchg
andb
push
add
sbb
fwait
popa
imul
push
xchg
mov
pop
les
adc
mov
std
push
mov
sti
mov
jecxz
mov
mov
or
jg
iret
fbstp
push
scas
push
mov
inc
std
or
psllq
pop
repz
cmp
daa
or
mov
lods
and
mov
and
stc
push
mov
push
pop
pop
jae
aas
iret
jo
ret
testb
out
sbb
jle
sarl
shrb
cmp
xchg
fdiv
inc
dec
fiaddl
xchg
cmp
push
or
nop
or
lahf
ss
lea
and
rcll
jl
pop
lret
outsl
js
mov
call
lret
xor
mov
jp
sbb
and
cmp
xchg
pushf
jae
pushf
ret
jo
lahf
js
xchg
sub
sbb
insl
outsb
das
pop
insl
imulb
xchg
pop
add
jg
ja
xchg
jg
xchg
add
jo
ljmp
mov
dec
enter
outsl
das
dec
sub
test
lret
ret
shl
fwait
aad
insb
push
sbb
jp
inc
ds
lret
ret
mov
pop
pop
clc
jl
adc
test
sti
stc
push
loop
repz
fiadds
inc
loop
adc
ds
std
push
inc
or
jae
sbb
mov
popf
lods
test
in
cmpsb
in
mov
daa
push
push
pop
ret
dec
or
push
push
scas
gs
jns
mov
negb
mov
pop
xchg
push
mov
andb
arpl
xlat
lea
std
add
add
cmp
stos
aad
jae
js
leave
call
sbb
cmpsl
dec
into
sahf
adc
xor
scas
jge
orl
xchg
pop
mov
test
adc
push
lahf
das
inc
loopne
mov
cmpsl
mov
in
cli
dec
fld
movsl
add
and
in
jbe
fildl
sbb
push
jno
add
pop
sbb
jo
mov
test
mov
fcmove
xchg
dec
sbb
lods
sbb
ss
loope
mov
mov
mov
aas
xchg
stos
les
incl
jnp
ficoms
cld
inc
in
stos
and
in
cmp
fimull
push
mov
in
outsb
arpl
loopne
mov
popa
xchg
test
jmp
push
lock
dec
mov
mov
jle
push
enter
xchg
in
lea
pop
inc
rsm
and
pop
xor
mov
pop
je
xor
dec
mov
mov
fcompl
ret
aam
jl
mov
push
lret
jmp
pop
jl
jp
jmp
pusha
sbb
sub
ljmp
or
add
test
dec
fbstp
pop
xchg
mov
sub
and
jmp
jno
push
fdivl
inc
jle
in
mov
sbb
loope
mov
es
lods
fisubrl
loop
lret
push
sub
mov
iret
push
pop
js
je
lds
rcrb
sub
mov
jbe
lret
sub
push
loopne
add
add
lds
movsl
push
loopne
sub
ds
lock
xchg
aas
xor
jnp
xchg
mov
lods
ds
xor
jo
in
mov
ret
add
mov
lret
les
cwtl
repz
cmp
adc
les
dec
call
pop
xchg
mov
mov
cmp
xchg
sub
nop
pop
mov
adc
nop
sub
negl
pop
das
mov
insl
and
or
inc
push
adc
sbb
xchg
arpl
add
push
xchg
pusha
xchg
iret
add
lods
inc
pop
sub
les
jno
or
dec
pop
push
mov
mov
or
mov
cmp
inc
inc
in
out
daa
pusha
xor
add
mov
aaa
fs
jp
pop
bound
and
scas
lahf
sahf
out
mov
mov
cld
pop
les
or
and
xchg
mov
ds
jge
lret
sahf
inc
shrl
sbb
incl
fldl
icebp
in
push
js
dec
push
in
mov
mov
clc
sbb
std
push
fisttpl
sub
rsm
cli
jne
dec
jae
or
out
fnstcw
jmp
mov
mov
jo
and
sbb
xor
dec
pusha
jae
outsb
cld
mov
inc
jne
jmp
repnz
mov
loop
inc
sbb
movsl
or
ljmp
dec
jmp
loopne
dec
ds
mov
mov
rcrb
arpl
push
std
mov
adc
addr16
and
ret
call
xlat
setb
jl
sti
cmpsl
sbb
add
popf
add
lret
jmp
repz
hlt
leave
and
and
out
loop
fcompl
fcomip
les
sbb
std
out
jns
xor
and
insl
mov
mov
inc
test
ret
mov
sbb
fldt
xchg
repnz
or
mov
pop
jae
out
andb
sbb
lcall
int3
dec
enter
mov
jmp
mov
scas
adc
stc
call
and
fsub
dec
das
inc
lcall
bound
pop
mov
xor
cld
mov
shll
std
pop
mov
xchg
adc
dec
enter
shl
jg
xor
mov
add
rorl
mov
jp
mov
jg
or
loopne
xor
dec
sbb
movsl
std
test
rolb
xchg
and
sti
add
inc
repz
fildl
add
scas
mov
dec
pop
jns
stc
xor
movsl
push
pop
fldcw
push
addl
scas
insb
cmp
xor
push
loop
push
pop
inc
add
outsb
movsb
pop
pop
pusha
fdivr
icebp
adc
pushf
mov
push
xlat
pop
adc
dec
fisttpl
cwtl
xor
mov
xor
ljmp
lods
pop
push
aam
shrb
or
mov
iret
jno
popf
ds
or
stos
push
cli
push
jnp
fsubrl
filds
std
sub
inc
aam
jbe
int
in
stc
cmp
outsl
mov
dec
xor
aam
cwtl
push
fwait
pop
or
mov
setne
scas
inc
testl
and
mov
xorb
xor
mov
jg
mov
pusha
push
sub
push
ret
push
push
fdivl
jg
xlat
sub
mov
or
push
mov
addb
pop
xchg
mov
std
call
push
repz
scas
in
loop
pusha
pop
ret
lds
outsl
jp
test
pushf
aad
push
js
inc
gs
mov
xchg
iret
sahf
sbb
dec
mov
ljmp
nop
inc
jb
hlt
js
addl
sbb
inc
dec
sbb
shlb
inc
gs
mov
into
push
stos
sbb
or
add
sti
cli
or
push
adc
bound
xchg
dec
jp
fidivl
inc
test
mov
cmp
and
mov
in
pop
jmp
lds
mov
fstl
dec
mov
jns
lahf
sub
sbb
inc
jae
scas
mov
dec
addr16
pushf
xor
out
cmp
add
lock
and
in
jmp
dec
sbb
pop
out
sub
push
or
jecxz
add
daa
in
push
jl
jge
push
sbb
sbb
mov
add
mov
jae
xlat
fdivl
mov
icebp
sbb
mov
adc
popf
cld
stc
addb
xchg
pusha
cmp
inc
insl
std
cs
rcrb
aad
je
mov
ret
cmp
shrb
arpl
bound
cwtl
adc
es
mov
mov
jo
cmp
cmp
movb
loop
push
movsb
inc
adc
mov
cmpsl
inc
stos
stc
cmp
daa
push
pop
mov
or
cmp
and
cs
mov
adc
adc
sbb
stos
cld
dec
shlb
pop
gs
inc
push
ds
pop
jl
sbb
loopne
xchg
mov
mov
mov
dec
jmp
stos
push
adc
pop
in
stos
push
in
or
inc
sub
lret
loopne
xchg
inc
fwait
out
into
cmp
inc
test
dec
pusha
sbb
sbb
subb
pop
movsb
pop
mov
push
popa
movsl
or
jbe
lock
mov
in
cmc
xlat
sbb
popf
pop
adc
push
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
cmp
testl
ds
cld
lcall
push
mul
push
xchg
cs
mov
andl
mov
cmp
xchg
fidivl
adc
inc
sbb
xor
stos
and
mov
and
inc
sbbb
stc
xchg
sub
xor
lret
shll
lds
mov
fisttpl
cmp
data16
xlat
push
pop
popf
pop
or
sahf
in
mov
test
mov
arpl
int
push
std
ss
test
lods
scas
add
xor
in
mov
daa
jo
rorl
insb
pop
push
lock
test
jmp
lea
mov
iret
or
shrb
inc
pusha
mov
rcrl
in
pop
push
xchg
rcrl
fmul
inc
dec
mov
aaa
add
lea
ret
mov
inc
imul
sbb
jg
je
inc
out
mov
pop
mov
cld
xor
sub
adc
shrb
xchg
int
pop
fs
mov
jno
push
push
mov
scas
sarl
lods
and
add
xor
js
push
adc
fs
and
les
into
mov
hlt
pop
fldt
cmp
xlat
imul
adc
int3
pop
push
aas
outsl
pop
addr16
cmp
pushf
add
stos
jns
sbb
adc
icebp
cmp
int
ror
push
inc
cmp
sub
xchg
and
add
sar
mov
sub
inc
scas
lea
ss
lds
leave
or
xchg
test
arpl
mov
xlat
decl
popa
push
mov
and
mov
movsl
out
mov
xchg
jl
mov
adc
cld
mov
loope
popf
in
ds
jne
xor
fadds
int
out
dec
push
loop
pop
sub
adc
stos
or
es
test
mov
ret
iret
mov
ret
pop
xchg
xchg
cltd
jne
jecxz
sbb
push
jg
push
lret
mov
mov
xchg
cmc
and
push
inc
sub
jbe
lods
std
push
stos
sbb
sbb
clc
pop
sbb
cmp
ss
call
js,pn
sub
loope
nop
cmp
nop
mov
out
push
shr
gs
in
test
and
push
sbb
mov
mov
sub
xor
jl
ret
pop
test
inc
mov
push
out
mov
mov
int
fucomp
shll
clc
xor
aas
mov
call
sub
daa
add
push
push
and
jnp
repnz
mov
fs
adcb
fsubp
mov
fldt
push
iret
sbb
dec
mov
mov
scas
jg
lea
fsubrs
jp
sti
fiaddl
inc
push
ljmp
call
ss
cmc
mov
inc
loope
and
repz
imul
cld
sbb
fld
adc
addl
sti
jp
add
mov
inc
mov
aaa
xchg
cmp
in
add
xor
add
ds
ljmp
pop
std
and
dec
cmpsl
jp
push
test
fcompl
mov
ss
cmpsl
popa
pop
and
call
cmp
sti
stos
jb,pt
mov
and
jecxz
mov
or
dec
inc
iret
inc
scas
call
push
popf
sarb
ljmp
adc
aas
stos
cmp
jmp
adc
sub
pusha
xchg
popa
mov
jge
mov
mov
shll
xchg
nop
movsl
shrb
xchg
test
ja
cmp
lods
add
bound
cltd
arpl
cmpsl
inc
fldl
in
mov
or
mov
imul
adc
push
iret
sahf
sbbb
dec
mov
mov
loopne
in
hlt
inc
dec
pop
pusha
push
sub
pop
loope
in
jae
and
mov
clc
push
and
fdivrl
xor
jno
fisubrs
inc
push
jecxz
cmpsb
inc
sbb
mov
add
mov
push
inc
mov
stos
jecxz
inc
mov
dec
aad
mov
dec
mov
pop
cmpsb
sub
jp
or
mov
or
aad
push
pop
adc
jecxz
mov
cmc
cmpsl
and
test
adc
jg
jle
jnp
call
sbbl
shrl
lea
xor
loopne
out
xchg
scas
pop
inc
aad
jecxz
stos
shlb
push
dec
xor
adc
rcrl
popa
jns
jno
sbb
nop
sbb
inc
mov
xorb
aam
test
mov
inc
aad
mov
out
fst
jge
enter
sbb
xlat
mov
iret
fcomps
mov
jnp
mov
std
pop
jg
sbbb
or
sbb
and
and
jb
mov
out
mov
and
in
test
dec
adc
adc
jle
inc
add
push
pop
push
pop
mov
push
jmp
xor
imul
mov
shlb
ret
sbbb
call
call
aas
aaa
add
jae
ret
jne
sarb
lret
sbb
dec
cmp
ljmp
aaa
cmp
cmpsb
daa
jp
push
repz
jnp
inc
ucomiss
sub
adc
sub
mov
pop
mov
cs
adc
push
movsl
fiadds
push
clc
arpl
loopne
stos
ja
call
imul
cmp
fcmovbe
pusha
push
test
pop
mov
lock
xor
sti
lods
pop
push
sbb
pop
loope
dec
in
aad
xchg
xor
mov
cmp
adc
aaa
ret
sbb
scas
shll
out
dec
mov
and
mov
fiaddl
pop
pop
movsb
int3
out
dec
test
addr16
or
and
pop
jbe
je
sbb
movsl
push
jmp
pop
je
shlb
xor
fists
pop
push
adc
push
push
cmp
sarl
push
push
fmuls
mov
jle
das
imul
in
push
mov
jle
add
cmp
sbb
inc
mov
in
lods
mov
fcmovnbe
pop
icebp
xchg
test
das
out
test
stc
out
sahf
loope
jnp
mov
adc
cmp
pusha
ffree
dec
loop
loop
loop
pop
push
mov
repz
lods
ljmp
out
xor
test
fwait
test
mov
xlat
lret
add
cmp
subl
dec
scas
adc
popa
jb
scas
sub
sub
mov
popf
pop
call
push
cmpsl
cmpsl
flds
jbe
js
or
cld
push
or
data16
ljmp
arpl
movl
jmp
push
mov
rclb
jns
les
mov
test
sbb
xchg
pop
mov
mov
aas
lcall
imul
dec
cs
jb
pop
or
jmp
ffreep
mov
and
mov
lcall
add
imul
cld
mov
push
out
leave
sti
cmp
lods
xchg
mov
sahf
xlat
xchg
xor
into
pop
jl
adc
push
ljmp
out
inc
ret
mov
leave
ficomps
fisubs
or
pop
add
jb
ss
bswap
test
repnz
push
xlat
dec
add
mov
in
sub
orb
add
jl
sub
or
in
push
add
negb
shll
xlat
xchg
xor
out
mov
ja
cmp
and
out
sub
push
lds
rolb
jae
test
jns
and
xchg
push
dec
add
inc
cmp
inc
cli
mov
int
inc
aam
mov
lock
movsb
mov
int
cmp
out
xchg
scas
mov
cmp
dec
and
xor
hlt
pop
jno
int
leave
in
rorl
xor
sbb
xlat
cmpsl
cwtl
mov
mull
clc
jb
sbb
call
jmp
or
icebp
arpl
xchg
xchg
cltd
adc
pushf
dec
pcmpgtb
adc
stos
mov
cmp
mov
flds
pop
push
xor
jnp
push
mov
pop
or
test
and
mov
mov
jno
orl
push
shll
mov
jns
dec
stc
int
ficomps
xchg
pop
mov
das
xchg
mov
lahf
pusha
fiaddl
fldt
and
aam
push
mov
mov
pop
jle
push
lods
add
mov
or
and
inc
inc
and
adc
push
daa
addr16
js
movsb
pop
xor
mov
or
mov
ret
push
outsl
and
xor
test
cmp
push
jnp
test
and
ret
bound
fstl
scas
lock
cmp
aaa
mov
push
mov
and
inc
push
bound
lahf
inc
std
or
sbb
push
pusha
inc
lods
xor
pushl
push
mov
push
or
outsb
fcmovb
push
imul
or
jge
mov
and
xorl
sahf
icebp
inc
xchg
sub
mov
lret
fstpt
cmp
mov
sub
cwtl
xor
ds
xchg
inc
sub
jg
jne
clc
jnp
outsl
cmpsb
addr16
aad
fnstcw
inc
or
loope
iret
xchg
enter
cmp
imul
jns
mov
dec
add
inc
iret
sbb
add
sub
daa
rcll
pop
iret
inc
dec
filds
cmpb
push
push
adc
out
in
cmp
mov
mov
andb
mov
popf
rorb
data16
movsl
ret
cmpsb
lock
outsb
xchg
scas
arpl
roll
adc
aaa
andl
dec
adc
mov
pop
pop
adc
add
mov
pop
repz
shrl
push
mov
les
cs
aaa
repz
adc
push
int3
xchg
dec
push
shr
pop
or
sbb
shlb
sub
push
xchg
lcall
sbb
shlb
or
push
mov
cltd
aam
adc
mov
sbb
fmuls
je
test
pop
or
mov
popa
nop
sti
sti
dec
pop
sub
xchg
je
subb
mov
loop
ljmp
faddl
lret
leave
xchg
jne
xor
adc
out
xor
jns
mov
add
mov
test
mul
addr16
out
aad
push
cld
in
repz
stos
jns
dec
call
and
testb
xchg
adc
xchg
xchg
xor
pop
sub
dec
mov
jne
cmpsl
std
and
pushf
or
in
and
mov
out
std
mov
arpl
hlt
mov
movsb
jns
xchg
cmc
cmp
out
movsb
decb
loop
cmp
test
sub
push
sub
sbb
xor
test
mov
and
mov
mov
mov
mov
lret
pop
andb
push
sbb
fldenv
push
sbb
insl
cmp
fwait
jbe
mov
cmp
cmpsl
mov
mov
test
fsubrp
sub
subl
push
sbb
jo
sbb
lds
insl
and
das
shlb
adc
mov
rolb
sarb
or
xor
cmpl
nop
popf
aam
dec
enter
lcall
loopne
testb
js
cmp
movsb
fidivrl
aad
lahf
and
or
cwtl
and
inc
sbb
cltd
cmp
bound
pop
xor
sbb
imul
cmp
jecxz
pop
inc
xchg
adc
inc
fs
mov
cmpl
adc
int3
fstpl
pop
mov
inc
clc
push
add
jnp
xlat
scas
xchg
xor
pop
mov
frstor
inc
and
ds
inc
fstl
rcl
int
xor
sub
ss
xlat
daa
dec
pop
fwait
push
mov
cltd
cmp
outsb
and
ljmp
in
xor
jb
scas
xor
imul
imul
fsubr
pop
mov
mov
out
movnti
ja
adc
test
mov
and
xlat
cltd
inc
mov
fbld
add
in
inc
xchg
aaa
or
lods
lods
adc
in
xor
sbb
sti
jge
fnstenv
and
aaa
pop
jp
adc
stos
aaa
in
rolb
stos
adc
jmp
outsl
in
inc
aam
ss
popf
mov
insb
fsubrp
cmp
and
push
icebp
mov
js
sub
fdivl
push
lret
jns
out
aas
push
repz
out
and
cmp
pop
testb
in
pop
pop
pop
xor
jns
pop
mov
fcom
repnz
xchg
lds
stos
popf
cmp
mov
mov
lcall
outsl
mov
int
jmp
lahf
outsl
fldenv
adc
dec
int3
out
add
sbb
dec
outsl
movsl
add
lret
aad
adc
lea
daa
adc
sub
add
cmp
dec
lock
cmp
repnz
add
pop
mov
fnsave
js
repnz
stos
lods
stos
pushf
shll
insl
enter
cmp
adc
pusha
mov
mov
or
fimuls
add
mov
xlat
std
add
pop
scas
scas
push
pop
ficomps
sahf
outsb
pop
mov
cwtl
cmp
int3
loope
inc
test
lods
pause
popf
and
lea
sahf
rclb
xchg
insl
in
jnp
pop
out
cmp
or
and
pop
adc
mov
loope
xor
int3
add
nop
mov
mov
stos
sub
sub
jb
sbb
data16
xor
fs
inc
insb
sbb
arpl
fsubrs
decl
adc
cmp
xor
call
bound
sbb
not
mov
daa
mov
in
mov
imul
jne
xchg
adc
cmp
adcb
data16
outsl
cmp
mov
fwait
fwait
rcrl
sub
in
lcall
test
loopne
mov
imul
sub
jge,pt
push
pop
fmul
mov
ss
gs
add
pop
jb
mov
dec
jmp
push
xlat
adcb
jo
fistpl
jno
out
aaa
cmc
in
inc
mov
pop
shll
test
and
and
pop
and
rcll
xchg
mov
lret
ss
mov
xchg
ljmp
fisubrs
mov
scas
xor
mov
lret
in
insl
mov
ret
mov
adc
sub
inc
negb
and
or
out
notb
and
movsb
add
aam
jae
inc
dec
sbbb
out
mov
mov
push
imul
pop
mov
push
lahf
jmp
xchg
mov
insl
pop
jnp
repnz
shll
and
je
ljmp
pop
mov
sbb
add
out
outsl
adc
or
fldt
xor
dec
enter
cmp
fwait
aas
scas
mov
cmp
mov
inc
into
mov
push
dec
push
loopne
pop
outsb
sbb
cmp
rcrl
or
enter
insl
stos
mov
movsl
xor
sti
sub
sbb
daa
lahf
mov
cmp
repz
inc
inc
sbbb
jne
jo
hlt
hlt
lret
mov
jecxz
mov
mov
gs
out
cmp
mov
add
xor
sbb
jmp
jno
lret
pusha
add
test
mov
sti
stc
mov
pusha
loope
fisubrl
pop
cmp
fwait
sub
sub
and
jecxz
rolb
cmp
sbb
arpl
xor
out
lea
dec
imul
xchg
inc
out
loopne
cltd
xchg
lea
and
sub
lods
jne
push
cmpsl
add
leave
and
aaa
sbb
jl
xchg
xor
lods
push
testb
add
test
lret
imul
jp
outsb
inc
mov
ds
jl
and
or
xchg
imul
sbb
mov
ss
arpl
gs
movsl
sti
sbb
icebp
lods
or
test
or
jno
mov
gs
ret
out
push
pop
lret
mov
dec
push
cld
jae
daa
mov
or
fcom
rcrl
insb
cmc
int
std
inc
fsubs
dec
and
jmp
jo
addr16
stos
adc
movsb
jge
imul
iret
sbb
add
aas
inc
aas
mov
in
cli
in
ror
dec
call
cmp
sahf
dec
push
push
fcmovne
pop
ljmp
sbb
inc
inc
in
dec
mov
push
movsl
push
adc
jo
lock
and
add
test
push
lsl
pop
call
inc
fxch
and
jmp
jns
pop
ljmp
add
lods
add
adc
jmp
aas
ss
adc
dec
inc
xchg
bts
mov
push
or
mov
lahf
fbstp
test
mov
inc
test
fcomip
out
push
mov
mov
fnstsw
fsubr
push
daa
insl
and
incb
add
movsb
dec
push
incl
or
jp
adc
add
or
add
das
idiv
icebp
or
fisubrs
lock
int3
test
xchg
inc
jno
jmp
ss
loop
data16
sahf
inc
test
lahf
sarl
sti
push
sub
xchg
push
xchg
add
push
mov
popf
xchg
inc
lret
cmp
in
pop
jge
sbb
adc
mov
sbb
jb
pop
cmp
mov
xor
gs
xor
lret
ljmp
adc
jmp
ffreep
jl
xchg
les
or
outsb
inc
loopne
jl
and
hlt
sub
int3
jecxz
imull
mov
push
sbb
add
popf
arpl
jp
push
les
fsubrs
push
dec
test
push
sbb
push
imulb
rcll
dec
lods
mov
leave
iret
xor
push
pop
pushf
shll
jnp
cmp
xor
sbbb
inc
imul
xchg
push
sti
push
pop
inc
sub
mov
mov
lods
push
repz
inc
pop
inc
mov
cmp
jno
imul
push
mov
mov
adc
repnz
adc
incb
add
adc
or
mov
dec
test
mov
cltd
mov
cmp
int
and
jle
mov
sbb
pushf
into
xor
rol
xchg
in
outsl
mov
faddl
lret
pop
loop
loope
push
xchg
out
push
getsec
mulb
popl
and
push
int
mov
fsubrp
cmp
mov
sub
icebp
push
or
into
cmpl
cmp
mov
dec
adc
mov
repz
ror
adc
imul
shlb
pop
xchg
jno
call
out
mov
or
mov
fiadds
cmc
xor
fwait
xchg
mulb
mov
mov
add
jae,pt
xor
int
push
adc
xorb
pop
sub
jge
aam
add
std
jge
data16
out
flds
inc
sbb
jmp
dec
cld
jl
jo
adcl
push
mov
push
and
xlat
lds
pop
or
test
aas
mov
lods
negb
fucomi
pop
addr16
inc
sbb
das
and
jnp
adc
cmp
dec
xor
add
mov
fstp
pop
lret
montmul
cmpsb
lds
add
pusha
push
lret
arpl
xor
notl
adc
push
cmp
inc
sbb
push
aam
stos
dec
test
sti
jb
jecxz
or
movsl
ja
movsl
ss
dec
insb
push
in
add
add
stc
sbb
pop
lcall
adcb
out
popf
popf
lret
mov
in
inc
xchg
pop
cli
push
add
sbb
lea
push
pop
lret
pusha
out
jl
mov
add
fnsave
adc
ss
xor
shlb
xchg
sbb
inc
xchg
push
inc
xchg
bound
bound
shll
jno
lcall
mov
aas
and
adc
mov
sub
lods
adc
or
and
fcmovnbe
test
mov
test
loopne
pop
xchg
xchg
inc
push
out
js
xor
into
ja
icebp
or
mov
xchg
test
push
in
mov
adc
or
jnp
mov
jp
sub
orb
cwtl
inc
std
lods
decb
or
adc
push
inc
sbb
xchg
outsl
mov
lahf
add
jmp
cmp
push
inc
cmp
data16
mov
push
loope
jmp
enter
sub
lahf
lods
sahf
jecxz
jnp
adc
jl
mov
mov
sbb
pop
lods
jle
imul
sarb
pop
fadd
rcrl
pop
cs
idivl
and
mov
xor
lahf
add
mov
lea
in
dec
jp
dec
xlat
sub
or
popf
sub
dec
rcrb
xchg
pop
cmc
pop
out
xchg
sub
lahf
mov
or
rcl
rorb
scas
je
sahf
jp
shll
hlt
xlat
push
xor
lods
add
cs
cmpsl
mov
dec
in
adc
gs
cmp
dec
nop
sbb
push
push
jmp
addr16
mov
push
int3
add
push
fcmovne
inc
xchg
clc
lock
cld
js
mov
test
hlt
add
jge
push
jg
mov
jge
aas
lcall
push
ljmp
inc
sbb
ja
mov
add
xor
cs
mov
push
sbbb
in
jmp
lds
cmp
sbb
repz
jo
add
sub
cld
lcall
xchg
shlb
mov
ljmp
orb
xchg
inc
daa
data16
ret
shl
xor
xchg
arpl
fwait
idivl
aaa
cmpsl
cmp
dec
dec
dec
xchg
mov
pop
dec
add
into
subb
fsts
push
pop
sub
outsb
sbb
add
jbe
aas
pop
mov
jb
pusha
cmpsl
adc
inc
dec
sbb
dec
dec
popa
fld
push
popa
jb
outsl
pushf
js
movsl
nop
pop
lea
jmp
out
out
imul
lret
inc
je
inc
sti
clc
inc
jle
int
repnz
hlt
test
jnp
push
lock
inc
rcll
or
imull
scas
fdivr
xor
fsubl
jl
mov
pop
pop
fiaddl
xor
or
xchg
dec
test
jmp
jge
cmp
push
and
adcb
xor
mov
dec
and
clc
mov
push
fisttps
notl
jecxz
dec
sub
loop
movsl
pop
push
or
mov
jae
dec
xchg
js
xor
out
test
cmp
nop
push
loop
ja
and
movsb
dec
lcall
test
pop
rclb
sahf
stos
filds
xchg
mov
std
sbb
and
inc
pop
sub
test
push
inc
stc
in
add
mov
adc
int
icebp
sub
scas
test
xchg
pop
cmp
sub
pop
cmp
popf
popa
inc
enter
add
clc
lds
mov
push
cmp
arpl
sarl
inc
mov
std
loope
mov
popf
adc
lret
jle
add
xchg
dec
adc
xchg
mov
mov
lods
icebp
inc
dec
jecxz
dec
fnstenv
outsb
lds
es
lret
nop
inc
xlat
scas
insb
xchg
xlat
xor
cmp
cld
movsb
add
jp
sub
add
xor
xor
xcrypt-cbc
cmpsl
adc
iret
inc
call
mov
and
cltd
dec
scas
mov
je
and
pop
inc
fs
out
imul
cli
mov
fadds
push
repnz
pop
jmp
sub
cmp
stos
lock
pop
nop
shlb
dec
movsl
arpl
fmull
dec
lret
enter
and
xchg
mov
cwtl
repnz
icebp
sbb
scas
jne
jo
cld
inc
cmp
enter
cmp
cmpsl
ja
mov
cmp
aam
daa
dec
xchg
out
gs
es
inc
test
fsubrp
sub
leave
or
test
or
jge
xor
and
aad
jno
add
dec
fcomi
dec
xor
or
mov
lock
push
push
gs
outsl
mov
cmp
lret
sar
mov
push
adc
mov
or
scas
xchg
inc
pusha
ffree
movsb
mov
les
mov
clc
adc
cmp
pop
sub
dec
lds
ficoms
cmp
das
sub
dec
inc
dec
fimull
out
and
pop
inc
push
inc
outsl
ljmp
loop
pop
fmull
pusha
aam
hlt
push
mov
push
into
insl
sub
push
rolb
xchg
adc
pop
xorb
and
inc
sub
mov
into
lahf
nop
lret
xor
je
push
xchg
insb
mov
sbb
xchg
sub
pop
out
enter
push
mov
out
sbb
jp
and
xlat
and
daa
push
add
js
mov
into
jnp
lret
push
xor
sbb
and
push
pop
rclb
inc
xrelease
mov
jge
jecxz
sbb
lds
std
push
cli
es
je
in
sbb
xchg
cltd
jmp
add
inc
sub
push
arpl
test
aad
inc
xor
lahf
sub
loopne
loop
mov
into
cmp
sbb
fwait
xchg
xchg
ss
sar
pop
fisttps
sbb
push
cmpsb
dec
mov
stos
in
mov
dec
out
das
jle
dec
inc
flds
scas
rcrb
mov
mov
jl
filds
pop
fnstenv
cli
sbb
xor
lea
clc
push
fbstp
push
mov
push
sbb
inc
aaa
cli
arpl
mov
dec
push
xchg
repnz
adc
adc
nop
jbe
in
pop
mov
fwait
mov
out
cmpsl
mov
push
inc
dec
es
out
jl
or
xchg
in
sbb
out
scas
adc
sub
cwtl
mov
call
arpl
or
enter
ss
ret
adc
scas
leave
xchg
push
cld
mov
fists
sub
dec
loope
mov
xorb
push
shrb
jae
daa
adc
addb
sbb
sahf
clc
sarl
pop
mov
iret
pop
mov
adc
push
mov
out
subl
sbb
push
jmp
rcr
xchg
mov
fcoms
es
xor
test
inc
cmp
in
outsl
adc
inc
repz
leave
and
repnz
icebp
adc
aas
push
adc
add
add
mov
mov
lock
lock
sbb
cltd
addb
and
mov
mov
in
mov
jo
push
add
jb
test
aas
adc
pusha
and
popf
push
cmp
lock
shlb
jnp
or
adc
repnz
cli
mov
xor
sbbb
mov
bound
pop
in
jmp
or
gs
stos
pusha
adc
cmpsl
js
jg
cmp
pop
arpl
mov
add
xor
push
jno
fldl
addr16
stos
fistl
mov
rol
mov
fisttpll
cmpsb
cltd
imul
mov
leave
fdiv
in
pop
and
cmp
add
lret
arpl
sub
mov
in
mov
cmp
dec
add
pushf
repnz
push
mov
inc
jp
gs
dec
loopne
test
lods
les
or
fsubrs
jne
pop
dec
mov
jb
shl
cmc
cmp
dec
jbe
aad
jp
or
mov
and
movl
xchg
les
sub
pop
out
mov
in
in
and
sahf
ret
xchg
pop
lds
jl
loopne
and
adc
daa
scas
mov
outsl
fs
push
shll
xchg
xadd
imull
inc
pop
pop
aam
sub
dec
jge
and
or
mov
fiadds
inc
pop
popf
pop
fistps
cli
xchg
jns
test
adc
jp
inc
stc
imul
sub
fwait
adc
push
xor
shrl
lahf
inc
jmp
ret
rorb
out
adc
sub
fsts
dec
leave
repnz
outsl
ret
in
stc
test
dec
inc
ds
cmp
sarb
xchg
rcl
cmp
xchg
stos
daa
mov
sbb
loopne
dec
in
sbb
inc
or
push
push
push
sete
sbb
insl
dec
dec
cmp
aaa
sbb
into
cmpsl
int
or
pop
popf
cmp
pop
jo
cwtl
roll
jmp
pop
test
mul
push
aaa
sub
jns
xor
aam
test
mov
dec
push
in
fildl
div
lcall
xchg
push
not
cmp
sbb
jo
ficompl
ljmp
cmpsb
ss
cmpsb
lock
pop
add
adc
push
mov
adc
mov
int
push
ja
xchg
and
xor
in
jg
and
push
push
mov
ret
shrb
xor
stos
pop
sbb
jo
pop
push
mov
sahf
pop
scas
mov
and
lret
popf
js
pop
cmp
out
pop
or
mov
sti
or
push
adc
xor
pop
cld
jbe
dec
mov
loopne
pop
jge
xchg
in
mov
outsl
in
or
in
sti
fadds
xchg
mov
adc
jno
pop
jbe
xchg
mov
jae
test
iret
pop
pop
mov
xchg
dec
leave
aaa
xchg
rclb
dec
add
xchg
pop
mov
ret
ljmp
fidivl
xchg
cmp
dec
xor
add
mov
ljmp
aad
jecxz
pop
lock
xor
jl
in
jno
and
lods
and
aas
sub
and
int3
pop
mov
ja
nop
aas
inc
pop
ljmp
inc
ljmp
movsl
cmp
dec
out
pop
popa
insb
repz
js
das
orl
mov
cmc
pop
lods
jmp
aad
scas
outsb
add
xlat
cmp
or
mov
xchg
adc
push
or
and
test
dec
pop
pop
dec
dec
mov
dec
outsb
jle
mov
and
adc
in
ss
dec
dec
jbe
mov
xorb
lods
in
mov
test
test
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
pusha
and
mov
push
ja
out
jbe
out
out
rcrl
push
jae
mov
outsb
cmp
push
and
lock
mov
cmp
popa
add
addr16
cmp
lock
pop
popw
aam
jae
ja
lods
mov
stc
push
cmp
mov
jne
pop
ret
stc
push
sub
jo
cmp
cmp
int
or
adc
insl
sub
sbb
jnp
jae
xchg
mov
cmpl
aam
outsb
mov
xor
sub
pop
mov
cmc
jb
pop
mov
sub
sub
nop
jno,pt
mov
dec
xlat
es
mov
dec
mov
aam
mov
mov
pop
subl
sbb
mov
mov
inc
inc
pop
push
pop
jmp
xchg
sub
xor
jno
lcall
mov
sub
mov
and
dec
loop
sbb
sbbl
sub
leave
insl
add
jns
xchg
aam
outsb
sbb
sti
insb
mov
enter
movsl
push
call
dec
lds
and
mov
stos
and
ja
cmc
push
or
push
cmp
adc
lahf
xchg
imul
in
dec
cld
adc
xchg
dec
icebp
aaa
stos
add
fs
movsb
fdivl
pushw
and
jb
sub
test
mov
or
mov
aaa
sti
enter
scas
ja
cli
jp
xchg
clc
push
lahf
ljmp
xor
loopne
sub
and
aad
ficoml
mov
mov
lock
rcrl
sbbl
or
shlb
icebp
es
mov
psrlq
loopne
movsb
out
lods
sub
dec
in
or
sbb
leave
sub
and
lret
sub
sub
or
mov
or
ret
fmull
ds
sbb
je
and
dec
scas
cmp
sarb
mov
outsb
push
outsb
ljmp
std
test
dec
pop
jo
adc
out
sub
int
in
inc
cwtl
mov
out
push
cmc
inc
out
mov
popa
push
mov
sub
push
and
push
adc
pop
in
fs
addr16
sub
ret
add
sti
mov
xchg
js
ret
nop
jle
repnz
pop
mov
cmpb
and
fdivrs
push
test
xorb
test
call
outsb
pop
jecxz
pop
ljmp
mov
pop
bound
test
lods
xchg
dec
mov
dec
data16
mov
mov
jecxz
call
cwtl
mov
mov
cld
inc
cld
rcll
or
mov
or
inc
repz
inc
loopne
int3
popf
sub
xchg
cmc
xchg
mov
mov
cld
aam
inc
lods
inc
pop
cmpsl
pcmpgtd
xor
xchg
jp
adc
and
movsb
scas
jo
push
call
dec
inc
gs
push
sbb
jmp
mov
call
ljmp
sarl
xchg
jmp
xchg
push
mov
push
push
divb
lds
dec
sub
pop
imul
sbb
push
add
stos
inc
dec
push
adc
shrl
js
jne
aaa
addr16
push
add
jmp
jnp
movhps
cmp
ds
cli
sbb
pop
ljmp
fildl
cwtl
jae
bound
mov
xor
daa
out
js
mov
pop
or
jne
sbb
add
shlb
adc
sub
fists
addr16
mov
lret
sti
nop
and
xor
inc
xchg
xor
mov
inc
jecxz
sbb
aaa
pop
fs
dec
test
sub
jnp
pusha
inc
cmc
insb
subb
sbb
stos
test
mov
movsl
frstpm(287
sbb
movsl
cmc
out
push
push
bound
xor
incl
rorb
add
and
aad
fs
push
inc
lods
jl
and
inc
mov
push
push
daa
jl
pop
sbb
xor
lds
bound
xchg
xor
or
push
in
pop
xor
enter
mov
out
ja
cwtl
pop
and
stos
inc
inc
cmp
fucomp
lea
xchg
push
push
cli
adcb
mov
push
out
pop
push
xlat
inc
mov
and
cmp
xchg
add
mov
jae
mov
mov
icebp
xchg
or
mov
ljmp
int
outsb
scas
imul
fsub
pop
test
mov
pop
out
into
mov
push
add
sahf
sti
dec
jp
in
das
hlt
fdivl
adc
add
adcb
mov
stos
and
mov
das
pop
mov
dec
or
xchg
dec
das
out
orb
das
cs
popa
cmp
scas
jnp
mov
es
jnp
sbb
jno
dec
mov
cmp
mulb
icebp
cwtl
or
mov
nop
out
out
lret
fwait
cmpsl
aad
push
jno
add
or
push
cmc
in
mov
xchg
jns
call
push
push
jecxz
adc
push
popf
push
cli
lcall
out
aas
stc
cmc
cmpsb
iret
fucom
fdivs
call
xchg
clc
xchg
lock
std
das
das
popf
push
mov
pushf
ret
js
shll
pop
cmp
adc
ja
cli
xchg
mov
add
mov
pop
push
ret
rcrb
les
xor
adc
ror
mov
xor
rcll
addr16
shlb
jl
out
push
jb
loope
and
ret
xchg
dec
lret
enter
ljmp
sub
ljmp
jns
mov
push
adc
jge
mov
cmp
enter
mov
push
xor
stc
adc
pushf
les
push
push
in
fidivrl
push
mov
push
movsl
mov
add
sub
sahf
xchg
jge
mov
sti
cmp
xchg
popf
scas
adc
dec
shl
add
mov
out
sub
mov
mov
imul
and
jns
fidivrs
in
mov
adc
dec
xchg
jne
xorb
les
pushf
xchg
xchg
aaa
ds
xchg
push
jo
pop
ror
dec
sub
pusha
ljmp
sarl
in
or
inc
adc
adc
fcomi
push
repz
mov
setl
cwtl
jl
das
lcall
or
jno
out
xchg
add
ficoms
dec
pop
adc
xchg
rolb
scas
popa
sbb
inc
sbb
sub
dec
insb
push
fdivl
dec
pop
aam
jae
mov
xor
or
xchg
jecxz
sbb
outsb
dec
mov
aad
mov
mov
mov
ret
adc
imul
push
jge
cmp
scas
and
shrb
push
xlat
xor
lods
outsl
popf
daa
cmpb
add
and
jecxz
mov
in
mov
dec
or
sub
inc
cltd
push
or
sarb
addr16
jbe
xor
inc
mov
imul
pop
pop
mov
cmp
jns
or
pop
push
repz
push
ljmp
insl
push
ficomps
xchg
fstp
jbe
out
mov
fwait
test
xor
dec
adc
mov
aaa
mov
mov
js
clc
test
andb
repnz
ret
daa
fidivs
jns
or
lods
inc
in
pop
mov
mov
cmp
cmpsb
xor
cli
mov
mov
sub
je
xor
lock
or
inc
bound
lea
rclb
dec
push
pop
out
insb
dec
and
loop
lea
xor
sub
lds
iret
xchg
xor
mov
js
jmp
sub
out
daa
out
nop
mov
imul
xor
push
mov
lahf
adc
fisttps
pop
inc
fsubs
test
popa
or
mov
sbb
ficoms
cmp
and
sub
mov
lcall
lret
out
les
pop
jp
inc
adc
in
pop
xchg
popf
sub
adc
outsl
leave
jl
sbb
mov
pop
fsubrl
adc
xchg
cld
enter
mov
xchg
stos
stos
pop
xorb
jecxz
insl
nop
dec
push
mov
sbb
out
lds
xor
pushf
adc
popf
dec
and
push
jp
jo
insl
adc
lret
xchg
je
jae
or
rcrl
mov
add
subl
mov
adc
repz
inc
jae
jo
scas
xchg
pop
push
push
mov
mov
push
pop
sbb
cltd
into
adc
jecxz
aaa
mov
cs
or
xor
sub
loop
jnp
xchg
ja
add
push
mov
dec
mov
mov
jnp
add
iret
adc
jl
shll
scas
sub
pop
cmp
data16
scas
mov
jge
cmp
rcr
cltd
ljmp
mov
or
js
mov
sub
daa
js
sub
sub
cmp
push
inc
jno
call
add
stos
aam
dec
push
jb
push
mov
pop
dec
loope
mov
adc
sub
push
aam
mov
sub
pushf
pop
cli
adc
mov
movsb
mov
int
es
mov
adc
stos
orl
jl
lods
out
add
sub
add
sbb
mov
in
into
outsb
test
ret
push
sub
or
pop
sub
pusha
clc
in
or
ljmp
pusha
movsb
mov
or
cmpl
push
adc
mov
dec
mov
test
cmp
pop
push
lret
divps
in
mov
sti
jne
add
lret
punpcklwd
mov
fadds
in
hlt
je
dec
mov
das
pop
mov
push
mov
sbb
push
ss
jl
mov
push
aad
lret
subb
and
pushf
clc
js
std
jno
aas
pop
lcall
out
adc
mov
push
jae
sbb
aad
fistl
and
mov
scas
and
or
xchg
jg
and
test
inc
pop
xchg
int
ss
cmp
jbe
cmp
ljmp
std
inc
mov
xor
rcll
rclw
sbb
push
aam
outsl
or
or
push
xchg
iret
dec
xchg
inc
loopne
repnz
repz
cld
sub
adc
gs
add
dec
lahf
dec
out
cltd
loope
ret
loop
mov
cmp
aaa
sub
shl
xchg
adc
sub
test
in
rclb
in
inc
sbb
adc
xor
inc
pop
lahf
lea
xor
sub
lods
adc
push
mov
insl
pushf
aad
adc
add
and
push
int3
or
jb
jge
push
inc
sub
xlat
and
push
add
cs
stos
and
scas
lahf
xchg
mov
outsl
into
out
sub
mov
insb
je
xchg
mov
sub
in
pop
sub
push
adc
insb
hlt
scas
mov
add
jns
fisttpl
lret
dec
dec
add
cmp
xchg
shl
mov
inc
imul
sbb
lahf
dec
sub
or
mov
jecxz
je
mov
pop
mov
adcl
mov
sbb
and
out
add
dec
pop
pop
pop
lods
sub
into
inc
pusha
data16
jecxz
ds
dec
frstor
cmp
add
cs
jne
leave
add
cmp
jp
fstpl
mov
push
pop
outsb
or
jae
dec
and
or
repnz
xlat
add
pushf
imul
xchg
out
and
add
mov
cmpsl
adc
mov
mov
lahf
iret
cmpsl
xchg
call
jbe
clc
sbb
inc
dec
aas
rorb
mov
and
adc
into
clc
push
mov
mov
dec
ja
xchg
les
jg
dec
fdivr
jbe
sub
xchg
dec
or
test
push
addr16
stos
mov
cvttps2pi
sub
in
jo
jle
fnstsw
add
pop
insl
sub
sbb
pop
jg
xor
jl
mov
cmp
stos
add
cltd
test
sub
xor
int
test
push
out
cltd
push
xor
or
add
mov
jle
repnz
cmp
rorl
inc
int
gs
mov
outsb
mov
in
ret
fisttpl
jae
xchg
enter
xor
jg
gs
lods
scas
nop
sub
test
sub
mov
std
xchg
into
rorl
hlt
inc
mov
fldt
push
sbb
fimull
bound
xchg
or
das
add
inc
xor
enter
cmp
gs
nop
lock
mov
mov
xor
js
bswap
sub
push
in
cltd
sub
je
cltd
xchg
cmpsb
imul
mov
jns
xor
pop
mov
inc
push
pop
pop
xchg
jle
adcl
scas
jae
adc
ret
jno
jl
pop
dec
fcomip
dec
lods
daa
and
hlt
or
sti
dec
adc
pop
inc
cmp
out
mov
cld
mov
lcall
xchg
dec
mov
push
scas
movsl
cmc
sub
xchg
rorl
push
cmpsb
outsl
lahf
jl
mov
mov
stc
bound
xor
push
and
sbb
push
mov
fs
sub
jmp
jp
std
jns
fcmovne
test
cs
sbb
pop
stos
mov
xchg
mov
sarl
scas
sbb
int3
adc
push
fbstp
orl
pushf
xchg
pop
movsb
rcrb
imul
push
pop
test
pop
cwtl
cmc
inc
jbe
je
loopne
cmp
sub
inc
or
test
mov
mov
pop
das
inc
dec
sub
addr16
xchg
or
cltd
roll
jmp
dec
lcall
pop
sub
cmpsb
nop
pop
pop
sub
lret
cwtl
pop
fcmove
rcrb
inc
xor
pop
mov
std
push
push
dec
xchg
sbb
jne
xchg
lret
jns
mov
stos
xor
clc
cmp
cmp
and
mov
fs
sub
or
scas
sahf
pop
add
xchg
inc
xorl
insb
dec
pop
lods
adc
ljmpw
or
fmull
fwait
ret
aas
in
addr16
pop
subb
notb
lret
stos
jbe
dec
mov
test
sahf
aad
sysret
ja
dec
test
out
push
mov
stos
daa
dec
adc
ja
dec
pop
sub
bound
xchg
mov
les
mov
push
mov
aas
xor
adc
dec
adc
pushf
test
inc
out
sahf
fsubp
les
enter
leave
sti
xchg
movd
inc
dec
jo
push
or
out
ja
mov
and
xchg
mov
adcl
mov
aam
inc
roll
aaa
mov
das
gs
movsl
mov
adc
test
mov
inc
mov
cmp
in
sbb
sbb
jmp
jbe
mov
pop
or
popl
outsl
in
add
sub
xchg
scas
and
jns
and
dec
mov
rcll
xor
mov
outsl
mov
cs
mov
ret
inc
dec
jecxz
push
aas
mov
push
and
fsubl
out
lahf
inc
add
add
andl
fcomi
out
popf
jmp
mov
inc
test
ret
clc
cs
pop
dec
cltd
aas
mov
sbb
sbb
daa
mov
push
insl
xor
fsubp
cmp
push
mov
int
sbb
imul
add
or
xchg
lock
andl
out
inc
sub
mov
pop
pop
fwait
dec
mov
bound
shlb
sub
addl
mov
add
mov
bound
sbb
aas
mov
call
cmpl
push
jne
imul
jno
fcmove
jbe
addr16
cld
dec
insb
movsb
or
mov
pop
mov
jne
leave
test
mov
paddusb
mov
mov
ret
pop
test
push
es
out
inc
insl
int
jmp
aaa
in
aam
hlt
jnp
mov
pop
pop
jle
or
pop
test
leave
sbb
xor
jp
push
mov
flds
jb
jmp
dec
pop
mov
js
hlt
xchg
jmp
mov
js
in
jge
imul
aas
cmp
inc
adcl
movsl
lds
pop
jecxz
addl
add
jg
in
push
pop
and
in
in
es
mov
and
dec
push
and
mov
add
adc
icebp
pop
sahf
popa
jmp
in
sub
loope
xchg
adc
mov
cmp
sub
loopne
dec
push
lret
mov
jl
adc
and
push
or
out
or
ljmp
mov
jecxz
loopne
mov
sub
inc
cmp
inc
sub
pusha
lea
mov
jae
lds
or
sarl
add
mov
sbb
imul
jne
pop
stos
push
outsb
test
lds
adc
rorl
sub
jl
inc
lcall
xchg
pop
dec
movsl
scas
es
aaa
or
pop
jl
xchg
and
pop
dec
arpl
out
and
wrmsr
cmpsb
jns
sub
xchg
add
jl
les
pop
mov
add
push
lret
fmuls
add
mov
jl
ss
push
and
pop
sub
arpl
inc
xor
and
aaa
xor
mov
out
adc
lahf
or
jns
call
push
das
arpl
mov
lret
mov
hlt
invd
cmpsb
xor
fwait
xchg
in
jle,pt
lods
jmp
decb
inc
push
and
lea
loope
dec
push
and
icebp
cmp
xlat
and
pop
pop
push
sti
imull
sub
fists
dec
cmp
movsb
cmpsl
lock
xchg
sbb
mov
gs
mov
cltd
rclb
mov
mov
jbe
outsl
add
push
jae
pop
or
fisttpll
lock
inc
rclb
pop
test
int3
jle
sbb
cmpsl
dec
xchg
int3
imul
dec
addr16
clc
out
xchg
prefetchwt1
or
jo
and
scas
mov
shrl
and
mov
int
mov
cmpsl
inc
pop
xchg
inc
push
push
loope
xchg
mov
add
jns
mov
iret
jmp
jns
pusha
pop
movl
mov
subb
push
gs
and
ss
insb
pop
jne
inc
adc
add
dec
nop
movsb
scas
jae
call
and
into
mov
add
jmp
or
cmp
or
sbb
aas
fwait
pop
iret
jb
cmc
fdivl
fwait
pushf
int3
pushf
stos
repz
sub
push
les
inc
es
pop
ftst
xor
popa
lods
movsb
into
sbb
fdivs
test
jnp
push
sbb
stos
mov
insl
imul
loopne
jnp
adc
or
push
mov
sub
mov
and
mov
cwtl
int3
and
sbb
push
fst
pop
testb
jl
cmp
pop
aam
xchg
dec
ss
in
cmpsl
mov
jne
dec
adc
mov
pop
iret
pop
jno
les
xlat
lahf
pushf
push
or
popf
xchg
es
xlat
jno
aad
cli
dec
or
pusha
xchg
jle
in
leave
sti
xchg
xchg
je
mov
push
ret
test
add
loop
out
lods
jmp
push
push
mov
gs
std
clc
jo
add
xchg
jmp
ds
lods
lods
or
psubq
jo
loope
popa
pusha
or
inc
ss
add
mov
lcall
cli
push
aas
cmp
imul
icebp
es
inc
mov
cmp
dec
stos
mov
cmp
mov
or
std
push
push
sub
cwtl
fldl
psraw
xchg
mov
lahf
jp
loopne
insb
mulb
cmp
aad
jo
cld
push
call
mov
sar
jne
jb
popf
addr16
rcl
mov
cmp
cmpsl
sahf
std
cmpl
stos
and
jae
adc
lds
leave
pusha
cmp
sbb
jmp
sbb
shrl
push
adc
or
js
cmp
pop
and
stos
mov
stos
mov
sti
popl
xchg
xchg
add
or
xor
es
loope
ret
shl
xchg
and
or
in
jl
pusha
sbb
stos
daa
inc
dec
popa
xlat
lret
aad
lret
cmc
push
push
sti
mov
out
roll
push
or
sub
in
bound
jecxz
popf
xor
push
jns
aaa
subl
test
adcl
bound
jo
xchg
cmp
mov
jp
mov
add
dec
shr
loope
insb
fdivp
mov
fidivl
push
lods
ds
cmp
mov
test
inc
inc
repz
clc
mov
mov
inc
call
lods
xor
out
leave
mov
jmp
mov
and
cmp
ss
dec
jge
push
and
jmp
and
push
adc
pusha
movsb
ret
gs
pop
jmp
mov
out
rdtsc
mov
lsl
cs
imulb
aas
ret
cmp
lock
shl
dec
int
lea
or
popf
add
jbe
lret
jecxz
movsb
shlb
in
mov
jp
hlt
out
subb
or
loop
or
dec
decb
and
jmp
cli
enter
push
fs
or
clc
mov
test
ret
enter
imul
pop
cmovno
mov
inc
sub
imul
lock
dec
popf
fs
inc
iret
pop
jl
add
sti
imul
call
adc
xor
scas
cltd
sbb
jns
sub
sub
icebp
es
push
rcrl
pop
and
xor
push
out
add
or
or
push
add
cmp
push
or
dec
in
push
adc
mov
jbe
or
lret
push
cmc
fildll
pop
lock
mov
sub
or
push
lds
testl
ds
mov
jo
adc
cmpsb
arpl
shr
jno
les
pushf
mov
mov
outsl
xor
imull
les
mov
in
repz
fwait
sbb
or
inc
xchg
std
fstpt
and
jle
pop
out
dec
xchg
subl
les
add
push
outsb
lahf
ret
pop
loopne
mov
jae
cwtl
jns
mov
popa
dec
lds
mov
or
icebp
loope
mov
pushl
mov
dec
lea
push
ret
push
rcrb
mov
mov
pusha
out
rorb
xchg
pusha
pop
add
adc
cwtl
enter
pop
xchg
fcmovb
mov
movsl
int3
push
fisubs
sti
mov
testb
fwait
int3
movsl
pushf
adcb
inc
shll
call
jns
add
and
sbb
test
jge
clc
push
inc
and
lret
and
scas
push
pop
xchg
xchg
stos
xchg
je
fdivl
pop
fidivs
jge
or
rcrb
add
pop
xchg
mov
test
addr16
dec
sahf
loop
mov
call
jg
in
into
xor
lahf
or
jge
mov
inc
sarl
stos
fldenv
addl
push
and
add
push
test
pop
jg
mov
xchg
icebp
mov
mov
pop
je
sub
mov
mov
ret
or
outsb
fs
push
dec
shrl
test
int3
mov
jg
fistpll
cmp
hlt
jge
popf
cmp
lock
cmp
adc
add
add
mov
push
mov
inc
jp
mov
popa
clc
adc
dec
ret
xchg
or
loopne
addr16
ret
out
stos
cmp
and
fadd
or
dec
inc
xor
rorl
stc
or
js
movsb
push
mov
cld
xchg
push
add
addr16
into
mulb
jb
mov
popa
xor
push
mov
lock
testb
cmp
sti
std
and
cmp
pop
sub
cmp
jb
je
sbb
jg
mov
inc
mov
sbb
add
xchg
outsb
adc
xor
push
pop
fistpl
fdivs
add
pop
mov
aam
or
xor
push
xchg
lea
pop
push
sub
mov
shlb
ret
test
jle
fwait
sbb
add
cltd
gs
dec
icebp
ds
loop
js
sub
and
mov
jle
stos
je
pusha
inc
jo
mov
mov
pushf
pop
outsb
xchg
ljmp
into
dec
pop
sbb
xchg
mov
xchg
call
add
shrb
xchg
add
adc
pushf
insb
fistpll
ja
sbb
sarl
mov
mov
js
negl
addr16
and
jno
nop
mov
hlt
pop
jmp
mov
mov
shrl
push
imul
push
xchg
mov
push
sbb
push
adc
out
les
ss
ret
and
cwtl
roll
movsb
inc
inc
es
sbb
jne
lcall
pop
mov
clc
xchg
adc
enter
sbbb
mov
mov
loop
test
stc
xchg
adcb
xchg
lahf
insb
add
pop
push
push
cbtw
push
mov
add
and
fwait
aaa
int
fidivrs
pushf
ret
ljmp
xor
rclb
push
mov
sub
add
and
dec
es
stos
lea
pop
mov
mov
sub
and
enter
mov
bound
jnp
xor
cmp
fs
fmuls
xchg
xchg
data16
xchg
repnz
push
sbb
inc
pop
repz
insl
sbbl
out
out
int
pop
shlb
test
fisttps
es
cmp
inc
es
add
xchg
not
mov
mov
mov
ljmp
out
mov
and
xchg
sub
les
pop
mov
loopne
ja
lret
sti
or
and
adc
notb
xlat
adc
lea
leave
hlt
adc
mov
mov
scas
jg
pop
sbb
cmp
inc
jge
xor
and
dec
in
sbb
gs
sub
dec
jmp
mov
lds
iret
push
shr
xchg
pushf
push
mul
adc
xchg
incl
lods
xchg
incl
out
out
jns
iret
jl
push
and
or
cmpsl
sti
por
mov
leave
ja
dec
out
pop
mov
rcl
lahf
cmp
xchg
add
stos
cmp
sbb
inc
dec
mov
gs
in
call
cmpsl
addb
ss
push
cwtl
dec
stos
xchg
sub
insb
int3
xchg
adc
jne
mov
xchg
movsl
xchg
mov
les
gs
sub
mov
cli
jmp
into
push
lcall
inc
loopne
lods
sub
and
mov
jl
mov
movsl
xorb
jmp
sar
inc
clc
xchg
test
jl
dec
test
sti
mov
imul
test
push
mov
and
or
rcl
push
jle
out
aas
je
je
cmp
push
add
cmp
mov
adc
cltd
adc
out
push
adc
mov
lods
dec
andps
enter
push
push
mov
gs
hlt
xor
dec
lea
rcrl
aaa
pop
jmp
cmp
push
ja
jmp
add
adc
int
mov
mov
out
jo
outsl
sahf
jbe
aas
fimuls
mov
flds
and
dec
and
xchg
sbb
repz
shrb
mov
sarl
jmp
sub
xlat
or
sbb
js
int
addb
adc
mov
push
addr16
jecxz
cmp
xor
mov
dec
lods
test
sub
cmpsl
cmp
loope
nop
mov
push
shll
xchg
cmp
out
mov
xor
jo
xchg
mov
sbb
and
xchg
pusha
mov
hlt
dec
inc
sbb
les
xchg
jmp
adc
jg
pushf
loop
push
mov
out
fwait
mov
lods
mov
sahf
cmp
insb
les
mov
lods
in
out
rclb
xchg
loop
out
mov
mov
ds
and
pop
xchg
jmp
mov
shrb
stos
sub
mov
xchg
mov
sti
inc
cmp
daa
or
jle
test
mov
jle
leave
sub
test
icebp
dec
loop
movsb
divb
neg
push
out
push
dec
notb
push
add
pop
pop
stc
sbb
lea
add
jnp
roll
repz
inc
outsl
push
das
test
lahf
or
lret
jmp
mov
test
push
in
jbe
xor
fnsave
push
cmp
dec
mov
fcomps
dec
adc
dec
inc
xor
push
mov
or
mov
mov
jns
aam
sahf
data16
daa
outsl
mov
aam
jb
pop
xor
cs
data16
xchg
sub
mov
das
inc
or
or
icebp
shr
pop
adc
filds
mov
and
xchg
aam
aas
cmp
das
in
ret
test
mov
js
sarl
xchg
inc
insb
mov
negl
cwtl
data16
xchg
xlat
pop
cs
adc
call
pusha
sbbb
loop
imul
xlat
int3
add
in
sbb
mov
pushl
test
jbe
xor
orl
pusha
sbb
popf
aaa
sub
in
jg
daa
sti
jmp
fsubrs
lock
mov
outsl
sahf
push
add
repnz
dec
xchg
jo
mov
aam
add
mov
int3
lcall
cmpb
sbb
pop
movb
push
enter
xor
rolb
mov
lea
or
imul
add
xchg
push
jo
xorl
shrb
or
dec
ret
das
mov
xacquire
xchg
jp
std
das
cli
inc
sbb
add
push
orb
or
dec
mov
aam
hlt
stc
imul
jns
mov
dec
ss
pop
mov
stos
pop
ret
bound
mov
add
adc
push
outsb
dec
int
aam
dec
inc
or
pop
jnp
in
pop
or
pushf
pop
push
popf
cmc
xor
sub
cmp
inc
sub
popf
fstpt
mov
mov
lahf
adc
int
sti
or
jnp
or
push
pop
stc
or
rclb
loope
and
push
mov
and
mov
iret
outsl
sbb
mov
sub
addr16
adc
loop
or
js
mov
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
jns
xor
shlb
hlt
pop
bound
fisubrs
push
shll
mov
loopne
push
fcoms
xor
adc
dec
cmpsl
xchg
push
jnp
xchg
xchg
push
iret
test
push
sarl
or
pushf
fwait
mov
movsl
pop
mov
faddl
out
imul
loope,pt
jns
cltd
lea
or
test
outsb
jae
jg
nop
xchg
int
mov
arpl
nop
or
jecxz
sti
movsb
mov
and
pop
sub
movsl
mov
fs
data16
push
dec
out
push
ror
mov
cvtdq2ps
mov
push
or
adc
dec
xchg
imull
test
inc
xor
mov
dec
loopne
ss
les
xchg
mov
insl
dec
inc
cmp
mov
in
sahf
insb
dec
adc
sbb
and
mov
dec
out
and
xor
hlt
jl
and
and
mov
adc
enter
lret
cmp
dec
jb
insb
repnz
maskmovq
lea
imul
lret
lock
les
insl
ja
dec
pop
adc
lds
inc
hlt
pop
lds
add
in
and
ret
into
cmp
and
pop
sti
inc
notl
loopne
pop
mov
push
mov
repnz
xchg
cmp
mov
pop
cld
btc
rclb
out
loope
jno
pop
js
jl
xchg
std
push
aas
mov
xchg
cmp
push
jecxz
mov
mov
lcall
cs
xlat
cli
and
push
mov
add
and
aaa
inc
into
pop
into
mov
fldcw
jne
pop
loopne
inc
js
daa
repz
mov
ss
mov
in
ret
mov
iret
in
and
enter
ficomps
adc
sub
xchg
js
outsl
scas
sub
in
ljmp
in
scas
fwait
push
mov
in
mov
xchg
mov
mov
pop
jnp
jecxz
inc
addl
xchg
fidivrs
mov
movl
in
pop
xchg
push
xchg
mov
mov
cld
out
popf
int
xchg
pop
push
repnz
lea
cltd
sti
mov
outsb
adc
jp
icebp
and
sbb
js
mov
inc
iret
or
add
sbb
push
imul
xchg
pop
mov
mov
nop
dec
xor
mov
xor
aaa
pop
icebp
xor
arpl
insb
fimull
dec
push
loopne
inc
xchg
mov
pushf
sub
mov
cmp
adc
pushl
pushf
jmp
push
dec
cwtl
xchg
movsb
loop
in
add
mov
and
dec
jmp
daa
test
jmp
outsb
inc
jae
shlb
je
cmp
sub
fcoms
jno
pop
mov
divl
mov
and
shr
scas
cmp
xchg
jle
xchg
repnz
mov
pop
pop
sub
ss
push
test
popa
int3
sbb
inc
stos
jmp
in
loop
mov
adc
js
inc
mov
sub
mov
mov
lds
jne
xchg
mov
cmc
add
into
xchg
jnp
xchg
ljmp
ljmp
cmp
cmp
xchg
sub
cs
xchg
and
lea
add
push
ficoml
xor
inc
icebp
push
push
and
js
cltd
pop
xchg
push
fsubs
call
popw
pop
aad
mov
addb
notb
arpl
add
inc
mov
ret
inc
nop
scas
fscale
in
add
inc
in
dec
mov
cmp
cmp
in
fisttps
dec
sarl
jmp
clc
push
mov
and
cmc
in
inc
and
movsb
outsl
inc
test
clc
popa
lods
ds
in
dec
scas
sbb
adc
xlat
pop
push
lahf
imul
or
and
adcl
int
mov
mov
in
into
mov
mov
push
inc
xlat
popa
push
push
mov
push
inc
cmp
dec
je
call
outsb
ret
iret
push
incl
pop
lods
movsl
js
mov
aam
cs
aaa
cmp
outsl
xchg
push
mov
inc
xor
adc
repz
push
js
or
push
push
mov
mov
fistpl
cmpsl
idivb
hlt
gs
inc
scas
mov
cmp
out
add
mov
call
or
or
loope
xor
sub
cmpsl
lods
imul
repnz
stos
out
sbb
lock
cmp
jecxz
out
push
shrb
rcrl
imul
mov
mov
icebp
shrb
outsb
add
lahf
je
dec
lods
jecxz
mov
mov
sbb
and
push
fisttpl
test
inc
dec
jmp
xsavec
ss
cmpsl
mov
loope
sub
cmp
mov
movsb
popa
inc
fisubl
xor
int3
shrb
out
dec
mov
push
sarb
cld
out
xchg
mov
jle
mov
pop
outsb
ficomps
pop
dec
sub
pop
leave
adc
movsb
rcrl
jmp
sub
cwtl
fisttpll
out
mov
shll
add
std
xchg
inc
sbb
mov
test
inc
movaps
or
mov
add
imul
xor
sub
andb
push
cmc
xchg
lret
pop
push
mov
pop
icebp
xchg
mov
mov
jp
pop
mov
ret
dec
jnp
out
jbe
xchg
popa
push
stos
ret
stos
pavgb
push
mov
loope
mov
or
mov
aad
inc
inc
lret
push
xchg
rcrl
pop
xor
jno
sub
pop
test
pop
ja
add
out
ljmp
pop
inc
stc
push
pushf
pop
and
jne
and
jno
in
adc
lret
fimull
add
or
andb
jnp
inc
push
inc
or
sbb
lcall
xor
sbb
xor
sti
cmp
insb
sbb
dec
mov
movsl
movsb
sub
jb
mov
xchg
inc
adc
fcomps
lods
sub
xchg
lea
push
int
adc
mov
jp
int
mov
popf
sub
adcl
cmp
lock
inc
cmp
shlb
and
sbbb
mov
mov
dec
out
out
mov
lds
mov
xchg
stos
cmc
pop
pop
dec
push
dec
lret
inc
rcrb
hlt
inc
and
and
xchg
or
mov
and
jecxz
add
sub
inc
mov
pop
sub
nop
sbb
inc
xchg
bound
sbb
jp
sub
add
adc
cmp
mov
jge
imul
xchg
or
gs
mov
dec
jo
jno
dec
cld
jae
insl
jg
xchg
mov
aam
aad
popf
lds
bound
or
fmull
cli
imul
pop
fists
loop
and
repnz
pop
push
xor
and
lret
jbe
stos
mov
sub
insb
pop
push
mov
jns
sarb
icebp
and
repnz
xchg
sub
dec
mov
push
shll
lret
mov
add
pmovmskb
add
decb
sbb
cmp
bound
xchg
cmp
gs
aam
xor
movsl
xor
push
cmpsl
jnp
bound
and
adc
xchg
shrb
stos
or
mov
arpl
lods
out
enter
xchg
mov
pop
mov
xchg
mov
dec
out
pop
jae
out
or
adc
mov
ret
sarl
mov
push
out
lods
js
es
xchg
cmp
xchg
es
adc
mov
cli
popa
pusha
cli
push
es
outsb
popa
or
test
adc
imul
and
cmp
stc
test
and
test
adc
dec
mov
push
pop
pop
scas
xchg
adc
fs
dec
in
js
or
out
cmpsb
fiaddl
cli
xor
cmpsb
dec
mov
sbb
ret
lcall
mov
mov
stc
subl
xor
adc
mov
push
push
inc
idivb
push
sub
lock
sti
sbb
and
fldl
cwtl
outsb
mov
popf
mov
pop
fs
addl
out
push
dec
call
adc
jg
lcall
adc
subl
sub
jo
jo
lcall
mov
testl
cltd
js
pushf
dec
es
loop
xchg
js
dec
jmp
stos
repnz
rorl
cs
sbb
mov
mov
stos
sub
loope
in
jb
xchg
mov
or
and
fadd
mov
adc
jb
pop
in
xchg
rcl
repnz
pop
add
call
inc
and
repz
jae,pn
xchg
dec
xor
cmpl
sbb
repnz
inc
and
test
push
cmpsb
xchg
aad
mov
stos
into
cmpb
invd
pop
mov
std
jmp
subl
repz
pop
or
leave
fcompl
ficoml
ret
inc
xchg
ret
mov
stos
not
xor
mov
sbb
sub
or
ljmp
sbb
add
xlat
testl
roll
fdivrl
lods
jge
insl
hlt
or
pushf
sbb
fucomip
adc
imul
xor
iret
lock
popa
sub
mov
enter
out
add
clc
sbb
add
sub
in
add
jle
and
rcrb
pop
bound
mov
jae
pop
mov
xor
lret
iret
pop
mov
sbb
cld
push
in
fisubrs
xor
mov
and
lods
cmp
and
bound
lock
jmp
inc
mov
xchg
cmpsl
push
adc
and
in
push
sbb
cli
pop
push
clc
mov
rol
fidivrs
xor
xor
push
mov
mov
lahf
shlb
fwait
stos
xchg
addl
shl
mov
jp
dec
lcall
stc
xor
scas
js
into
jns
ds
aas
mov
xchg
inc
push
xchg
pop
push
pop
xor
mov
hlt
push
jno
fxch
pop
pop
cmpb
jnp
or
in
in
call
daa
pop
loopne
inc
push
and
xorb
inc
jb
loope,pn
sub
sub
pushf
and
push
pop
mov
rclb
fdivr
jp
mov
inc
out
movsl
dec
dec
mov
sarl
in
sbb
bound
mov
jecxz
shrl
push
daa
mov
loop
aam
push
add
cmp
pusha
sbb
icebp
cltd
cltd
cmp
dec
cwtl
push
inc
add
inc
addr16
mov
in
inc
push
ds
mov
push
dec
mov
cmpsl
xor
lahf
repz
loopne
push
push
push
xor
pop
push
fstpt
or
mov
sbb
mov
test
xor
push
jge
pop
mov
push
and
sbb
sub
data16
adc
mov
lcall
in
adc
lods
mov
mov
dec
inc
lret
mov
les
sbb
sbb
sbb
pop
std
subl
pop
lods
cmpsl
arpl
das
in
xchg
push
sahf
imul
hlt
lret
add
dec
pop
cmpsb
aaa
push
cmp
pop
pop
mov
data16
adc
jg
cmp
and
test
mov
pop
ret
lcall
mov
jmp
or
loopne
imul
dec
decl
inc
testb
xor
or
sub
fdivs
out
lret
jp
push
in
and
das
mov
outsb
inc
push
ss
pop
jb
mov
adcb
xor
mov
test
stc
icebp
mov
jg
in
divl
cwtl
pop
pusha
arpl
cmc
lcall
jmp
push
dec
ret
xor
shrb
call
dec
mov
xor
jecxz
dec
mov
in
adc
mov
popa
jp
sarb
adc
aas
adc
jno
lcall
daa
ficoms
mov
adc
pop
bound
mov
stos
add
ret
in
les
dec
push
dec
in
cli
mov
int
clc
aaa
jecxz
cmpsl
mov
xor
sub
mov
daa
push
lret
xlat
add
loopne
call
mov
xor
add
add
rclb
add
data16
dec
movsl
iret
loop
xchg
lahf
daa
lea
inc
and
inc
jne
jnp
insl
in
xor
inc
dec
out
call
or
push
lahf
scas
or
cmc
cltd
icebp
mov
push
bound
out
pop
fcmovne
sub
lret
sub
cmovg
test
shlb
mov
sbbb
sarl
jmp
test
aaa
jge
cwtl
daa
dec
xchg
icebp
push
pop
jo
pop
pop
adc
test
ss
in
sub
icebp
mov
insl
shl
jns
out
adc
pop
or
scas
aad
lcall
cmp
call
mov
or
mov
addr16
push
dec
call
repz
test
cmpb
adc
outsb
mov
insb
push
xlat
mov
dec
add
pop
mov
push
stc
dec
out
cli
test
push
xchg
out
rcl
pop
lods
ret
adc
fs
push
fmul
outsl
xchg
dec
repz
push
fwait
lcall
push
or
push
xchg
and
dec
inc
sub
movsb
outsl
lcall
movsb
ss
push
jg
mov
les
or
mov
loope
je
ret
pop
cmc
inc
mov
xor
ret
fiadds
mov
iret
jg
and
icebp
je
pop
test
xchg
andl
mov
aad
popf
jae
subl
lock
lahf
jnp
inc
xchg
movsb
pop
push
movsb
mov
pop
and
aaa
dec
push
je
insb
inc
lahf
dec
cmc
cwtl
dec
add
sbbb
mov
jmp
daa
mov
and
ret
push
xchg
jnp
inc
loopne
mov
fdivr
pop
sub
and
cmp
test
leave
jl
aas
pop
xchg
bound
mov
xlat
out
sbb
dec
pop
mov
dec
lahf
mov
jecxz
call
pop
inc
lahf
mov
and
clc
inc
xor
jmp
jg
pop
div
cmp
push
testb
sbb
ret
inc
mov
dec
xlat
cmp
cld
imul
fisttpl
inc
xor
stos
pushf
repz
jecxz
fstl
mov
or
mov
pop
je
or
cs
test
and
inc
hlt
pop
cmp
xchg
inc
aad
sbb
xchg
js
and
aad
jns
push
int3
sarb
sbb
subb
outsb
test
jmp
mov
pusha
call
xor
and
hlt
fnstenv
mov
jge
mov
cmc
pop
push
std
pop
loop
imul
cwtl
ljmp
lds
ljmp
outsl
xchg
lret
shlb
mov
add
xor
testb
fs
scas
dec
push
inc
jnp
outsl
mov
rcrb
and
lods
cwtl
cmp
mov
insl
dec
cltd
jge
lret
adc
cmp
out
lret
jae
pop
je
jp
inc
addr16
and
jle
add
stos
imul
mov
mov
push
jae
inc
cli
ljmp
cmp
in
mov
je
xchg
push
lea
push
shll
clc
xor
pop
jb
pop
and
scas
data16
xor
into
iretw
jbe
sub
addr16
inc
sub
push
push
xchg
mov
lods
jne
out
inc
jne
mov
lcall
das
inc
xchg
xchg
orl
rcrb
imul
cmp
dec
pop
rcrl
insb
mov
addb
pushf
pop
outsl
adc
in
sbb
lock
jecxz
arpl
loope
cmp
push
aam
xor
ja
xor
fdivs
cs
das
mov
sarb
mov
xchg
dec
adc
and
or
jecxz
test
les
jle
fsts
fstl
mov
loope
mov
fldln2
int
mov
je
shrl
in
addr16
adc
ret
sbb
xor
out
ja
aas
jl
in
xor
andl
out
vmread
push
adc
mov
ret
dec
add
inc
fdivrs
adc
xor
jno
mov
or
xor
mov
movsb
add
flds
insb
and
inc
mov
outsb
push
xorl
cmp
repz
inc
loopne
sbb
lea
and
sub
test
add
int3
add
push
rcll
gs
movsl
sbb
in
shlb
bound
fmull
les
jle
incb
add
or
add
gs
lock
jbe
jmp
outsl
push
lods
jmp
mov
lret
inc
xchg
cs
xchg
fs
rcll
lcall
cli
xchg
push
repnz
leave
cld
lods
ret
clc
mov
dec
dec
lods
inc
xchg
jb
in
iret
adc
in
jle
in
push
add
lds
and
test
push
fs
and
cmp
int3
add
mov
add
dec
addb
and
mov
loope
xchg
cwtl
jecxz
js
xchg
mov
iret
ret
xchg
leave
dec
jbe
fildl
dec
lret
jge
sub
movsl
xor
sbbl
jns
out
fs
push
cmp
xchg
mov
out
push
fisttpll
xorl
and
lcall
in
loopne
test
mov
cmp
call
and
dec
mov
test
and
out
sbb
xor
shll
add
push
hlt
add
adc
fcoms
pop
out
stc
test
xchg
das
sahf
dec
xchg
xor
cld
stc
jecxz
clc
int
pushf
jae
icebp
jb
xchg
add
sbb
and
arpl
mov
orl
fbstp
ds
shrb
popa
xchg
push
sub
std
fisubrl
jg
cmp
popf
enter
jg
mov
stos
pop
mov
push
jae
push
pop
jnp
and
mov
jmp
testl
push
loopne
loopne
cmp
cmp
lods
js
add
dec
jbe
sbb
lcall
cmp
daa
insl
imul
push
imul
mov
mov
push
dec
cmp
pop
inc
stc
shr
cmp
icebp
adc
mov
out
pop
sti
js
mov
sub
movsl
inc
je
add
scas
mov
repz
or
clc
pop
mov
fstps
gs
faddl
lahf
testb
div
pop
pop
cmc
xchg
leave
hlt
pop
fistps
sub
or
pop
xchg
adc
cmp
push
xchg
jl
out
fldl
in
add
mov
xor
cwtl
test
cld
test
cli
in
out
and
icebp
test
xchg
aas
add
scas
outsb
mov
pushf
mov
jnp
or
mov
sub
pushf
mov
xchg
cwtl
or
in
std
mov
push
fcmovnb
pop
add
and
jb
and
sbb
adc
adc
and
inc
mov
xchg
out
pusha
inc
insl
test
jl
cmp
aam
cwtl
outsb
xchg
xchg
loop
pop
popf
loopne
ja
dec
or
in
div
xor
scas
push
and
mov
ja
iret
jge
jmp
cmpsl
repz
js
sbb
bound
sahf
mov
dec
cmpsb
mov
ja
sbb
loop
popl
add
inc
jge
imul
jno
jmp
adcb
sbb
dec
out
repnz
lcall
cwtl
enter
int3
daa
dec
inc
cmc
stos
je
ljmp
pop
add
xchg
stos
repz
int3
jmp
imul
sbb
pop
fwait
inc
cmp
roll
fwait
movsb
adc
pop
mov
xor
js
xor
or
mov
hlt
mov
lret
and
mov
pushf
aam
adc
sub
inc
pop
leave
pop
ss
add
test
jl
in
dec
imul
mov
xor
mov
js
fiaddl
dec
movsl
xor
les
dec
leave
or
cmp
sti
cmp
aam
mov
inc
insl
mov
lock
popa
inc
cmp
lcall
loope
cmpsl
lds
and
adc
mov
vmwrite
mov
adc
and
sahf
dec
mov
xchg
pusha
cmc
jae
push
jmp
add
ss
push
dec
insl
pusha
shl
subl
jl
rorb
cmp
rcll
add
das
cmpsb
popf
clc
popf
xchg
scas
adc
xchg
rep
aaa
bound
ret
push
inc
xchg
stc
loop
ret
add
mov
arpl
inc
add
sub
add
cs
mov
sbb
popl
pop
pop
mov
in
xor
jno
jecxz
ficoml
mulb
lcall
cmpl
std
fisttpl
or
out
ss
fs
loop
adc
ret
arpl
xchg
push
cmpsb
sbb
mov
icebp
cmpsl
xchg
out
cmp
mov
subl
pop
fabs
and
iret
pushf
cmpsl
jae
sub
insb
adc
aad
loopne
sub
pop
leave
sbb
inc
aad
in
jecxz
push
hlt
gs
lods
adc
mov
lds
pushf
outsb
imul
lret
sbb
cmp
adc
push
fldcw
jecxz
movsb
imul
arpl
scas
push
je
fbld
movsb
mov
int
outsl
mov
cltd
out
add
and
push
mov
cltd
jge
xchg
int
dec
dec
cmp
adc
mov
jg
dec
mov
repnz
cld
pop
mov
pop
and
xchg
xchg
aaa
pop
lds
mov
mov
adc
mov
fs
mov
shrb
mov
mov
shll
test
mov
ds
nop
cmpsb
fstpt
out
hlt
dec
inc
jo
insb
sbb
scas
xchg
mov
push
shr
dec
fisubrs
mov
xor
shll
cmpsl
or
inc
fimuls
jne
jl
adc
bound
pop
push
test
or
repz
call
push
sbb
jle
fcmovne
gs
aam
mov
aas
mov
int3
jo
dec
dec
sub
jno
dec
iret
je
or
dec
cmp
out
mov
adc
movsb
stos
es
adc
cmp
icebp
push
add
lds
loope
dec
into
jle
out
cli
nop
sbb
dec
jmp
pushf
das
lock
shr
and
ret
and
int3
in
into
sub
cltd
mov
push
ja
fildl
pushf
pop
ficoms
stc
xchg
pusha
iret
sub
adc
scas
sbb
dec
dec
add
lods
imul
mov
xchg
xorl
adcb
cmp
aad
movsl
jl
imul
fwait
push
or
adc
mov
insl
enter
xchg
es
mov
lcall
clc
outsb
jmp
or
pop
push
push
adc
mov
pusha
cmp
xchg
jecxz
lret
addr16
insb
sub
add
mov
lds
hlt
bound
imul
sbb
repz
mov
insl
iret
sbb
movsb
dec
lahf
sub
mov
adc
addr16
sub
popa
mov
dec
test
or
cmp
push
sbb
push
mov
jle
je
xor
aam
roll
shr
fsubs
and
outsl
push
imul
sbbb
xchg
or
sub
loopne
std
cmp
fdivrs
pop
add
mov
add
pushf
popf
int3
cmp
loopne
push
pop
das
addb
mov
lcall
lods
sub
dec
and
loopne
mov
dec
mov
outsl
push
cmp
or
scas
jbe
fucomp
lea
inc
and
mov
dec
mov
xchg
ret
push
push
mov
fmull
jae
shll
mov
cli
or
xchg
cli
mov
outsb
xor
test
mov
add
xchg
fldt
testl
or
out
sbb
xor
push
cmpl
mov
cmpsb
dec
xor
adc
and
fmuls
data16
jl
leave
lcall
push
jae
ja
std
xchg
push
mov
es
cwtl
push
loop
aad
and
cmp
push
pop
or
sbb
push
jnp
mulb
lods
cmp
inc
scas
mov
fstpl
daa
sub
enter
dec
mov
mov
mov
aas
or
outsl
jno
aam
insl
lret
or
hlt
push
dec
push
and
rcrl
xchg
neg
sbb
sbbb
cmpsl
gs
mov
shll
dec
add
je
mov
popa
mov
repnz
mov
lahf
rclb
aad
add
scas
fidivrs
jp
cmp
jmp
mov
adc
mov
sub
int3
dec
adc
xchg
sti
in
cmpsl
add
jns
pop
rcrb
push
inc
iret
dec
cmp
mov
xchg
and
scas
movsb
popa
xor
mov
sub
out
ljmp
push
clc
sub
pop
or
ret
mov
xor
movl
xor
xor
xor
stos
lock
xchg
jne
lods
je
fcoml
lret
push
int
pop
lahf
iret
dec
daa
sarl
insb
jns
cmpsl
sub
or
test
or
xchg
push
gs
mov
insl
sbb
scas
adc
int
xchg
sbb
fnstenv
push
outsl
sbb
nop
inc
jbe
pusha
cltd
dec
push
test
sbb
push
push
fs
es
jmp
inc
jo
leave
sbb
push
mov
testl
into
pop
repz
cli
in
cmp
jae
scas
shlb
mov
inc
mov
sub
inc
and
inc
inc
inc
xchg
jg
mov
inc
cmp
mov
repz
fidivs
mov
xchg
sahf
xchg
scas
lods
pop
test
add
cmp
push
xchg
adc
out
lcall
out
stc
dec
es
bound
testb
pop
fcoms
lcall
xchg
pop
jno
out
xchg
cmp
mov
adc
cmpsl
rcll
inc
mov
dec
mov
out
icebp
mov
push
sbb
test
js
ret
jmp
in
rorl
sar
leave
fimuls
dec
jno
dec
mov
imul
imul
mov
das
mov
call
inc
lcall
aam
xchg
add
add
cld
mov
imul
mulb
push
mov
jecxz
cs
lods
mov
ss
hlt
mov
inc
xlat
sti
jb
xchg
scas
into
inc
jne
sub
add
adcl
dec
test
pop
adc
icebp
add
mov
sub
jmp
xor
cli
loopne
cmp
es
pop
lds
mov
ljmp
stc
cmp
jle
pop
mov
sbb
loopne
mov
xchg
xchg
dec
mov
push
sbb
pop
mov
sahf
pop
cld
pop
sti
pusha
push
scas
xor
loop
leave
insl
iret
xchg
xchg
sub
mov
dec
mov
xorb
les
add
adc
pushf
xchg
cli
test
and
sub
daa
ds
and
xchg
enter
sarb
fists
sub
and
dec
movsl
iret
push
imul
aas
aam
lods
das
push
mov
lahf
jle
cmp
jns
mov
xor
daa
xchg
imul
inc
jmp
iret
sbb
xchg
hlt
sub
ljmp
mov
cld
in
xor
loop
dec
shr
or
xor
mov
incl
inc
fdivp
in
cmp
add
xchg
pop
cmp
push
dec
les
lcall
std
mov
xor
push
das
test
pushf
and
lahf
stc
pop
mov
dec
pop
fisubrs
push
inc
sub
iret
icebp
in
dec
add
or
push
lods
sub
lret
push
mov
push
mov
adc
mov
or
fldt
add
add
fsubs
sub
in
scas
mov
fdivl
push
fwait
sbb
add
jno
lret
cli
nop
mov
mov
fucomp
cwtl
ljmp
into
mov
jnp
or
test
mov
arpl
inc
aad
sub
or
jae
notl
test
and
out
mov
mov
sbb
int3
add
pop
mov
add
repz
filds
js
scas
enter
mov
inc
xor
mov
loop
push
push
icebp
fcoms
xchg
or
jmp
iret
push
rorb
lahf
add
adc
inc
sub
xchg
out
or
xchg
inc
add
dec
jecxz
jl
xor
fcmovnb
gs
rcrb
int3
adc
or
xchg
gs
lock
in
push
xlat
jg
sbb
lret
bndstx
add
dec
pop
out
mov
lds
jle
fildll
leave
orl
sbb
lret
jbe
sub
lds
jbe
or
mov
lock
xrelease
repnz
repnz
mov
mov
adc
xchg
sub
xor
and
xchg
pop
push
icebp
test
mov
hlt
insb
xchg
ficompl
divl
fisttpl
pop
fcmovnbe
and
divb
or
pop
dec
clc
faddl
mov
jge
pop
cld
loope
push
daa
add
push
push
int
sub
jo
pushf
inc
sub
outsl
pop
sub
bound
insl
and
pop
aad
inc
mov
leave
imul
xor
push
jae
cs
sbb
insb
mov
inc
sub
daa
dec
orb
adc
jl
cwtl
ljmp
ret
or
mov
push
push
lea
mov
xchg
sbb
mov
out
pop
dec
and
gs
xor
loopne
in
mov
test
pop
mov
enter
mov
stc
sub
jbe
jl
mov
clc
daa
xor
jp
insb
lds
lock
setl
mov
pop
sbb
inc
fwait
les
stc
push
addr16
and
test
dec
mov
and
dec
ds
mov
dec
xorb
mov
and
scas
imul
adcl
adc
inc
or
movsb
pop
jmp
mov
bound
scas
mov
xchg
push
in
lcall
std
push
add
das
jge
push
mov
sbb
test
mov
dec
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
fs
mov
int
bound
adc
push
inc
inc
cli
filds
xor
mov
sbb
xchg
add
lret
js
out
imul
les
mov
das
xor
scas
or
repnz
dec
cmc
adc
in
mov
xlat
and
jg
mov
cmp
sub
popa
insl
lahf
leave
cld
adc
gs
loop
lret
push
inc
adc
pop
inc
or
into
xchg
ds
xchg
nop
call
push
ss
movsl
add
mov
aam
mov
push
mov
aam
daa
jnp
je
and
pop
ret
mov
icebp
jbe
dec
scas
popa
leave
or
mov
popf
dec
mov
jmp
pop
scas
jae
je
pushf
mov
test
test
dec
fstl
bound
mov
sar
xlat
and
aaa
sub
jne
popa
or
inc
pop
popf
pushf
xchg
fdivrp
mov
loopne
pop
gs
fiadds
jmp
sbb
jb
mov
cmp
pop
xchg
pop
dec
int
mov
lea
or
sbbl
stc
push
out
mov
push
es
push
lock
cmpsb
xchg
add
sbb
xchg
mov
shr
addr16
xchg
or
lret
das
adc
add
push
test
frstpm(287
cmp
jmp
stos
in
or
sub
mov
pop
pop
loop
cmpsb
jo
mov
xchg
jno
shlb
xchg
scas
xor
cmp
mov
sub
xchg
jl
pop
gs
int
roll
mov
adc
shrb
ss
mov
cs
inc
lret
jbe
xor
push
sahf
and
adc
pop
enter
nop
mov
xchg
xorb
xor
rcrb
jno
in
orl
lret
dec
inc
test
xorb
mov
pop
jge
sbb
shrb
dec
sub
xor
sbb
adc
adc
pop
rorl
cmp
je
mov
mov
adc
jl
push
in
sub
scas
adc
vmovshdup
cmp
mov
rolb
pushf
lcall
rorl
jg
and
sbb
mov
jg
pop
data16
aad
pop
sarl
lahf
inc
mov
js
ds
mov
xchg
or
inc
ret
mov
movsb
loop
xor
fimuls
push
pop
lods
add
xchg
fisttpl
mov
mov
mov
les
xor
aam
mov
adc
sub
insb
repz
and
add
pop
bswap
add
rcr
das
iret
jbe
sbb
es
repz
cld
int3
andl
push
inc
int
aad
sbb
jbe
jmp
xor
xchg
cmp
and
js
imul
lods
lcall
mov
into
dec
int3
nop
pop
insl
sbb
mov
testb
cmp
leave
les
xchg
shrl
add
and
adcl
adcl
or
arpl
mov
pop
in
inc
xor
leave
out
mov
push
lea
test
xchg
arpl
ret
movsb
loope
sarl
xchg
jbe
les
cwtl
insl
repnz
push
mov
xor
fldl
pushf
pop
cli
gs
xchg
inc
cmp
mov
aas
pop
test
aad
leave
sbb
inc
loope
scas
cmc
lea
stos
push
inc
pop
jl
push
clc
aas
lea
pushf
lahf
test
jb
push
cltd
inc
outsb
arpl
cmp
out
xchg
repz
mov
ja
mov
aaa
js
test
lods
add
or
sti
or
xchg
fstpl
push
ja
imul
jmp
cmpsl
push
dec
push
fisttps
mov
xor
and
loop
fmuls
das
iret
arpl
test
cmp
jnp
clc
xor
dec
add
mov
out
ljmp
rol
adc
sahf
pop
jmp
pop
cld
sub
mov
imul
adc
repnz
jmp
cltd
adc
pop
mov
cmp
inc
cwtl
idiv
pop
scas
test
xchg
jns
shlb
mov
xchg
ret
jnp
bound
sbb
mov
mov
ja
mov
imul
dec
inc
test
add
rcl
or
jnp
stos
mov
xchg
push
pusha
fcoml
jge
icebp
int3
mov
bound
lret
jmp
jle
push
jge
xchg
pusha
cmp
push
js
push
pop
and
jecxz
int
pop
adc
scas
cmpsl
cli
mov
mov
mov
inc
mov
xchg
pop
mov
shll
mov
repz
add
or
addr16
test
pop
rolb
pop
mov
xchg
or
mov
or
loope
repz
leave
imul
insl
add
and
loop
xchg
push
outsb
cmc
jne
and
sahf
pop
xchg
adc
xor
shlb
cmpsb
divl
adc
mov
std
stos
mov
addr16
or
sbb
add
inc
mov
jmp
cmp
pop
inc
mov
cmp
push
stos
lods
andl
jno
push
sahf
lahf
push
cmp
mov
mov
cmp
into
xchg
push
in
les
push
xorb
dec
cli
repz
jb
std
movsb
mov
rclb
jge
cmp
ss
lds
out
dec
xchg
jmp
and
dec
sbb
enter
and
lods
cmp
push
cli
xchg
aas
in
cmp
jnp
gs
jno
repnz
and
xor
cwtl
out
sbb
gs
xchg
sti
hlt
dec
ret
rolb
stc
fwait
push
jmp
lcall
aad
push
cmp
ljmp
adc
or
imul
lea
push
pop
ja
sarb
ss
xor
lock
int
enter
inc
arpl
jbe
sarb
mov
pop
mov
mov
inc
pushf
xchg
or
cmpsl
jmp
lea
pop
inc
cmp
xchg
cmp
or
mov
ja
sbb
adc
loopne
jne
movsl
je
ja
mov
aaa
nop
pop
rolb
frstor
mov
aam
mov
cmp
cs
stos
hlt
push
fildll
or
call
and
and
inc
cmp
fidivs
cmp
cmpl
insl
or
ljmp
adc
lods
clc
mov
xor
inc
pop
outsl
cmp
sbb
xchg
in
aas
int
xchg
test
test
arpl
mov
or
xlat
stc
cmp
leave
sbb
mov
mov
or
adc
sets
notb
pop
or
mov
mov
out
into
lea
outsl
mov
es
pop
idivb
mov
jp
gs
cmp
fsubrp
daa
mov
and
dec
or
lcall
xor
mov
call
jo
sbb
mov
insb
push
out
popf
adc
lret
cmpsb
lret
adc
scas
push
fmuls
leave
popa
outsb
adc
loopne
mov
cwtl
push
stc
scas
bound
mov
mov
mov
push
fsts
clc
cwtl
fcmovnbe
lea
popf
dec
dec
sbb
add
mov
mov
mov
jns
push
mov
mov
add
pop
test
mov
in
cmc
xchg
mov
mov
idivb
push
data16
stc
mov
popa
lcall
sbb
fadds
xchg
inc
mov
pop
and
das
sub
push
pop
push
incb
pop
stos
lret
push
cltd
cli
jge
clc
add
cmp
in
adc
mov
sub
cmpsb
je
adc
sub
mov
rolb
mov
pop
pushf
icebp
xchg
sbb
addr16
push
subb
pop
cwtl
leave
frstor
push
mov
ja
pop
lret
pop
push
add
cmc
pop
das
mov
mov
repnz
xchg
push
cmpsb
test
and
das
xchg
and
in
movsl
ret
test
aas
mov
jmp
test
inc
add
or
push
enter
out
xor
pusha
mov
lahf
and
adc
mov
mov
mov
or
sbb
cld
ret
dec
das
or
or
dec
pop
inc
mov
out
pop
imul
lret
xchg
and
jbe
pusha
xchg
mov
pop
mov
outsb
inc
sbb
lret
fwait
pop
dec
scas
clc
test
push
mov
scas
sub
or
sbb
push
sub
sti
je
mov
xchg
adc
dec
and
push
mov
lcall
xor
sti
test
mov
fwait
sub
je
cld
mov
cltd
xchg
sbb
xchg
orb
mov
je
dec
sbb
and
addr16
mov
leave
in
lret
fidivs
cs
lahf
test
adc
push
fadds
pop
jbe
test
pop
and
in
inc
and
mov
xchg
pushf
andl
sbb
movsb
lahf
xor
mov
movl
add
mov
jmp
xchg
in
lcall
outsl
pop
mov
test
jl
cmp
sub
jae
mov
mov
mov
jge
or
push
mov
add
sbb
arpl
fwait
sar
lea
push
add
loope
pop
push
iret
or
sub
mov
xor
daa
mov
insb
les
jne
sub
lock
sbb
aad
aas
add
cld
pop
in
pop
lods
jg
in
dec
cli
and
frstor
sbb
aad
jne
divb
cmpsl
add
or
adc
aad
outsb
and
jle
daa
cwtl
mov
pop
fstl
mov
iret
pop
sub
rcrl
jb
mov
popa
cltd
shrl
insb
cmp
arpl
xchg
push
gs
arpl
fmuls
mov
test
dec
jbe
or
adc
fbld
imul
out
dec
mov
lcall
aam
in
int
mov
push
inc
addr16
insb
add
sbb
outsl
fidivl
inc
loop
test
and
hlt
pushf
inc
pop
sbb
iret
push
shl
mov
addr16
mov
in
sahf
mov
or
push
or
out
faddp
and
push
sub
mulb
aam
mov
mov
pop
adc
dec
repnz
push
push
cmpsl
ret
icebp
rorl
jb
enter
repz
stc
shr
push
push
push
and
movsl
or
mov
add
or
js
push
mov
sub
lock
pop
and
cmpsb
aad
or
xor
push
sub
enter
out
mov
in
dec
pop
cltd
fdivr
cmp
xor
std
mov
test
ror
nop
mov
xchg
popf
mov
and
outsb
lds
aas
hlt
mov
mov
aam
xchg
inc
mov
pop
ljmp
push
dec
in
sub
aaa
sbb
xchg
data16
in
xchg
fistpll
lods
addr16
ja
movsb
ljmp
mov
movsb
aas
inc
push
pusha
fs
xchg
jge
out
icebp
cmp
repnz
clc
mov
je
or
or
sbb
out
rolb
push
add
lea
insl
fcmovnu
shr
xchg
std
out
adc
sti
and
and
hlt
mov
subb
out
outsl
arpl
hlt
push
mov
lcall
int
sahf
fildll
pop
test
shll
mov
insb
sahf
ds
mov
jns,pn
jge
push
xchg
wrmsr
subl
jb
cmp
int3
stos
scas
pop
add
xchg
xchg
into
adc
pop
and
aam
icebp
ljmp
nop
mov
mov
jl
in
cmpsl
mov
addr16
xchg
int
pushf
ja
mov
lods
jbe
jecxz
mov
push
outsb
cltd
scas
call
and
lahf
mov
orl
push
leave
push
lea
daa
mov
lea
fsubl
das
pop
push
inc
push
xchg
push
xor
ds
outsl
cmpsb
scas
sub
cltd
adc
dec
insl
sub
jne
and
loopne
mov
cwtl
push
mov
imul
jecxz
push
ja
jmp
iret
dec
out
lret
testb
jmp
clc
outsl
out
jecxz
lods
std
push
mov
fmul
push
orb
pop
adc
mov
out
test
push
call
inc
call
into
or
sub
pop
jnp
jp
testl
mov
jl
pop
xchg
dec
inc
pop
sub
jno
into
and
lahf
scas
imul
mov
repnz
testl
jmp
or
cmp
mov
cli
lret
ljmp
push
lahf
xchg
push
xor
sub
cwtl
dec
inc
cmp
sahf
mov
out
mov
add
cwtl
dec
mov
in
jnp
sub
arpl
repnz
pushf
sbb
cmp
xor
cs
lods
lods
ljmp
mov
jno
pop
push
aam
mov
inc
movsb
push
std
inc
push
je
push
data16
mov
push
insl
mov
push
shlb
dec
sub
push
iret
mov
mov
jns
dec
fs
pop
and
inc
aad
inc
inc
adc
xor
cltd
stos
imul
adc
gs
aam
adc
pop
rorb
mov
mov
lret
imull
into
sbb
inc
sub
mov
sbb
jecxz
jns
xchg
mov
jno
in
mov
call
inc
xchg
cli
mov
inc
das
cmp
rcr
push
add
inc
push
xor
mov
jmp
fimull
test
pop
dec
repnz
mov
pusha
cs
mov
insb
or
insb
or
dec
shrb
sbb
iret
scas
jns
aad
sbb
cwtl
outsb
push
ret
out
pop
or
jae
mov
inc
mov
sbbl
push
mov
adc
jge
push
cmp
cmp
insb
negl
and
jnp
add
imul
jmp
lock
cmp
xor
inc
push
fldcw
fists
lret
or
mov
shll
jne
notl
ja
inc
cltd
sbb
sti
inc
push
test
dec
mov
das
insl
jb
out
mov
add
out
imul
mov
sarb
ds
iret
sbb
pop
mov
xor
push
or
inc
pop
bound
inc
cmpsb
test
inc
push
adc
fdivrp
jl
loope
cmpsb
or
pop
aam
fs
sti
cmp
imul
subl
sub
fadds
push
dec
xlat
test
in
lods
xchg
in
dec
lds
xor
sahf
in
jns
ss
xchg
testl
mov
rol
jns
lock
popf
push
jp
sbb
xchg
jp
les
jp
gs
out
mov
inc
pushf
xchg
ret
adc
es
ds
adc
scas
out
or
pop
xor
pop
mov
fnop
sub
stc
fstl
lock
pop
out
mov
fadds
movsl
aam
dec
test
push
andb
xchg
lock
movsl
notb
loope
sbb
jle
push
sbb
or
pop
cmpsl
and
fcompl
xchg
cmpsb
lea
pop
dec
xchg
mov
add
xlat
pop
xchg
fidivrl
lods
fs
jmp
movsb
pop
jnp
cmp
cmpsl
jge
jns
stc
sti
push
jbe
or
jnp
sub
jns
jb
and
jae
pushf
cwtl
sub
xor
xchg
mov
jnp
mov
xchg
aas
push
cmp
mov
mov
xor
repnz
js
fidivl
mov
lods
cwtl
push
addl
sub
loop
ret
and
ljmp
repnz
pop
push
pop
pop
mov
lret
cmp
or
add
lods
sarl
mov
dec
ds
adc
cwtl
lock
add
lods
mov
inc
insl
sti
xchg
das
cmpl
ja
mov
mov
jge
cli
cli
dec
cwtl
lods
inc
lret
mov
aas
xchg
jno
push
fsubr
int3
ret
push
jb
xchg
movsb
jge
inc
adc
out
jo
mov
pop
sti
in
in
jmp
daa
out
push
sbb
inc
jbe
out
sub
stos
movsb
ja
mov
push
sbb
test
pop
or
stos
popa
push
insl
imull
mov
push
lahf
flds
mov
cltd
jg
cld
adc
mov
ja
push
out
sub
ds
scas
test
in
xor
mov
shll
mov
popf
ret
pop
dec
ss
icebp
mov
stos
mov
bound
sub
jbe
xchg
ds
push
imul
insb
or
bound
out
adc
cmp
mov
mov
dec
lds
out
xchg
call
pop
mov
sub
in
shlb
add
aaa
sbb
addr16
dec
les
jbe
loopne
pop
lahf
xor
push
inc
cmpb
sarb
mov
data16
and
jb
lods
ljmp
loope
js
cmc
xchg
in
xor
cmpsl
mov
mov
outsb
aam
rcl
add
aaa
pop
jg
dec
out
lods
push
mov
sbb
imul
mov
loope
lret
in
pop
ficompl
outsl
shlb
sub
loop
mov
cmp
jae
sbb
adc
inc
sti
push
xlat
ja
test
or
add
inc
mov
pusha
jnp
and
in
movsb
in
add
pop
adc
les
in
sahf
mov
cmp
arpl
or
nop
lret
mov
push
jno
xchg
xorl
mov
shrb
cmp
xlat
mov
scas
mov
scas
int
popa
les
outsb
mov
stos
stc
pusha
js
test
or
sub
pop
push
push
dec
dec
fcmovb
mov
and
or
sub
jg
scas
mov
jp
jb
and
ds
inc
stc
xchg
cmc
arpl
outsl
jecxz
test
lds
imul
hlt
fstps
adc
xor
sub
insb
push
notl
xor
int
lret
aaa
dec
mov
xlat
jnp
test
stos
pop
lds
and
push
imul
lock
mov
cmp
and
fistpl
or
pop
jb
aam
cmc
cmp
es
and
testb
movsl
xor
xor
mov
sub
rol
mov
push
lahf
push
fistl
jnp
dec
push
scas
xor
call
inc
dec
and
outsb
call
leave
dec
and
ss
iret
sbb
outsl
and
dec
pusha
pop
stos
cmpsb
outsb
mov
inc
adc
test
mov
mov
or
jp
cmp
in
stc
frstor
es
or
xchg
iret
push
mov
jmp
jmp
das
lcall
inc
and
in
push
aam
inc
cmp
into
cmpsl
pop
jp
and
inc
push
xchg
jno
loope
lds
add
cmp
add
dec
add
mov
lea
orl
sbb
sbb
icebp
cli
pop
inc
sub
xorb
add
dec
gs
xchg
bound
cld
cmpsl
jbe
jnp
lahf
add
cmp
and
mov
out
sbb
inc
dec
gs
sub
sbb
xchg
loop
push
mov
aad
out
aas
and
iret
into
sbbl
test
aaa
ret
jmp
xor
repz
mov
cmpsb
sub
mov
or
push
xor
adcb
xchg
imul
pop
orb
xchg
or
mov
xchg
sbb
std
test
notl
roll
xchg
sub
ja
pop
inc
cmp
jl
mov
stos
cmpsb
or
inc
xchg
cmp
into
jno
pop
mov
fcmovnbe
cs
in
dec
dec
and
das
add
pop
outsb
pop
mov
mov
and
gs
cmp
in
mov
hlt
adc
mov
pop
xor
sub
popl
sbb
cmp
pop
push
imul
jmp
iret
inc
cmp
cltd
cmpsl
mov
cmpsb
jb
push
mov
cmp
aas
push
xchg
lahf
adc
ret
jg
iret
ret
xchg
xor
insb
jnp
jge
sti
or
mov
xor
out
stc
cmc
and
dec
push
push
sub
xorb
jmp
mov
xor
lds
out
gs
out
push
arpl
mov
jns
repz
jmp
movsl
cmp
jb
cmp
and
add
shll
add
mov
ja
jb
cltd
xor
orb
ljmp
pop
sbb
loope
inc
test
pop
mov
jle
out
cmpsl
inc
movsl
cmp
enter
pushf
xchg
fidivl
mov
push
cmp
aaa
movsb
jne
adc
orl
mov
mov
scas
adc
push
or
hlt
sub
pushw
adc
jo
jne
inc
lcall
out
inc
rcll
xor
mov
aas
movaps
mov
outsb
js
popf
add
repnz
or
push
imull
sbb
sti
adc
mov
scas
xor
jle
sahf
insl
sarb
iret
inc
in
sub
mov
sbb
push
daa
mov
adc
xchg
jnp
xchg
and
popf
insb
test
movsl
ds
imulb
push
mov
or
aad
cmpsl
xor
add
pop
and
xchg
cmp
js
fwait
xchg
or
movsb
sub
cmpl
cmp
xor
cwtl
out
add
fiadds
jne
out
cmc
cwtl
or
mov
sarl
mov
push
ja
call
and
es
or
lods
pop
daa
xchg
cld
xor
enter
jl
xor
fildl
jo
and
mov
mov
fwait
hlt
inc
jp
ss
std
lea
mov
jb
imul
cmpsb
icebp
xor
jp
inc
das
jle
push
lret
push
sahf
es
xchg
cltd
adc
insl
inc
int3
mov
sbb
stos
add
les
xchg
andl
cwtl
rcr
mov
dec
jp
xchg
jmp
push
mov
js
mov
mov
xchg
dec
sti
int
arpl
and
or
in
addb
sub
aam
inc
xor
jecxz
and
jne,pt
and
dec
mov
xchg
divl
lret
gs
push
ds
or
rol
aam
aam
jbe
mov
call
and
pop
mov
std
in
inc
daa
es
adc
jle
int
xor
fcomp
or
fisttpl
dec
inc
es
adc
pop
jb
jnp
cmp
fsubrs
into
subb
shlb
loopne
loopne
adc
xor
or
leave
scas
xchg
inc
scas
inc
push
mov
fbld
popa
in
lds
jae
push
lods
xchg
add
dec
mov
aad
cmp
mov
cmp
jnp
ljmp
stos
xchg
mov
pusha
shll
or
or
mov
inc
mov
adc
gs
pusha
sbb
pushf
mov
or
xor
push
repnz
mov
cmpb
test
add
lret
leave
inc
int
imul
mov
repz
pop
imull
jno
add
lds
stc
popf
ja
inc
sbb
sub
mov
jb
inc
movsb
push
jno
adc
jns
add
pop
inc
sbb
inc
push
int3
lods
push
adc
push
pop
mov
or
adc
popa
call
roll
cltd
into
imul
xchg
int3
add
sbb
hlt
pop
xchg
sar
mov
lods
ret
lret
rcrl
sub
xchg
gs
mov
mov
roll
and
cltd
sub
sbb
lcall
xchg
insl
sub
sbb
or
hlt
jns
outsl
adc
stos
jnp
testb
popf
lods
scas
mov
in
addr16
inc
xchg
sbb
popa
in
addr16
pop
add
and
pop
jns
jmp
std
ret
or
xor
inc
mov
jo
lcall
inc
andb
jp
push
jns
mov
mov
sarl
inc
iret
xchg
testl
fs
inc
test
iret
mov
in
add
sub
pop
jmp
and
sub
push
jge
imul
lcall
sub
arpl
in
fcomi
or
adc
inc
xor
insl
jecxz
call
add
push
movsl
push
cwtl
and
rorl
lds
inc
fistpl
repnz
stos
push
imul
adc
cli
pop
and
pop
sub
fldenv
pusha
lods
subl
fwait
sub
sub
sbb
test
pop
mov
mov
and
mov
lret
cmp
mov
insb
push
inc
pop
xor
and
mov
mov
jno
leave
add
out
fistpl
fisttpll
push
fistpll
add
jnp
pop
mov
arpl
stc
mov
jecxz
cltd
sub
scas
sub
xchg
out
cwtl
xchg
test
sub
cmp
fst
push
mov
adcl
mov
push
adc
and
aaa
jecxz
scas
inc
or
fcompl
lods
add
movsb
mov
cltd
out
mov
pop
adcl
xchg
or
push
sti
add
dec
jg
nop
mov
inc
int
xchg
dec
aas
mov
or
dec
les
push
xor
and
in
rolb
mov
mov
mov
cmp
sub
xor
outsb
or
mov
and
out
imul
stc
stos
jae
insb
cmpsl
cmpsl
mov
xor
loopne
clc
mov
ror
popa
jge
adc
jge
cmp
fwait
push
lcall
xchg
add
sub
outsl
mov
mov
sub
jle
lock
arpl
and
lock
jecxz
add
inc
jmp
push
lods
ljmp
adc
out
push
insb
xor
imul
arpl
mov
mov
push
out
jg
lods
iret
jg
jg
mov
mov
addr16
push
inc
mov
add
and
dec
jbe
gs
sbb
in
inc
dec
je
repz
mov
fistpll
repnz
pop
fidivrs
mov
sbb
mov
shrb
lods
pushf
fistpl
lods
mov
or
daa
cmp
pop
stos
rcl
push
dec
sbb
int3
cmp
jo
aaa
cld
cmc
sub
cmpsb
fucom
dec
test
adcw
add
int
push
mov
fnstcw
mov
sub
js
stc
xchg
sahf
gs
xchg
ja
loopne
pop
add
sbb
add
outsb
loop
ret
sahf
repz
mov
mov
outsl
inc
out
lods
cmp
sti
mov
mov
cwtl
push
aam
shrb
sub
sbb
cmpsl
xor
and
arpl
jo
insl
push
mov
xor
fidivrs
iret
and
mov
sti
repnz
xorb
insl
cs
imul
movsl
outsb
lds
nop
into
cmp
mov
call
mov
scas
outsb
sub
mov
sbb
mov
push
in
lret
int3
inc
sbb
movsb
mov
xor
imul
pop
xchg
lcall
xor
sub
jle
dec
lret
jae
aas
fstps
out
push
inc
in
xchg
xchg
mov
push
add
push
fcmovbe
insb
pusha
fsubp
xor
jl
jle
testl
cmp
push
sub
in
jo
push
jl
or
cmp
cmc
fcoml
lcall
std
mov
mov
movsl
cmc
test
jae
dec
in
cmp
and
adc
add
xchg
push
cmp
into
lods
sub
in
mov
xlat
iret
adc
push
push
mov
mov
adc
in
dec
add
sti
add
test
int3
scas
inc
jo
xor
or
jecxz
xchg
addr16
daa
scas
and
xchg
pop
xchg
push
lea
xchg
lcall
sbb
das
xchg
inc
push
ss
js
ja
loope
mov
arpl
gs
mov
xor
push
sahf
icebp
in
int
leave
call
in
into
jb
fldt
add
scas
xorl
pop
fdivs
popf
jns
mov
and
scas
bound
out
shrb
xchg
mov
cmpl
xchg
std
pushf
fmull
mov
inc
imul
sahf
mov
inc
dec
ret
cmp
mov
push
cmp
add
jmp
xchg
lods
push
les
sub
add
jl
push
ljmp
stos
aam
fistl
shr
test
loop
lods
dec
fisubrs
fucomi
ja
xchg
mov
sub
and
inc
push
iret
loope
lods
shll
sbb
jae
ret
inc
movsl
adcb
pusha
mov
iret
mov
sbb
mov
mov
test
out
aas
repnz
jg
repz
cmp
jne
sbb
idiv
aaa
push
mov
fsubl
ljmp
enter
cmpl
sbb
cmp
xchg
mov
jecxz
push
and
gs
push
mov
popl
cmp
lods
movsl
lock
jg
cmp
adc
fwait
cmp
xchg
mov
ljmp
jno
ficomps
xor
mov
and
icebp
xchg
imulb
mov
inc
mov
sub
aad
leave
in
stos
lret
mov
test
test
lock
push
rolb
ss
insb
xchg
cmc
inc
subl
xor
fwait
mov
lcall
xchg
xlat
dec
addl
fidivs
div
push
js
inc
push
cs
aad
cmp
push
add
fcmove
mov
cmc
jg
inc
dec
mov
imul
mov
ljmp
inc
repz
jnp
mov
test
sbb
inc
jbe
inc
js
jbe
xor
cmp
add
jg
mov
imul
fdivrl
jo
ror
mov
dec
imul
fsubp
xor
divl
push
dec
xchg
mov
std
adc
jge
mov
pop
out
test
std
mov
imul
outsb
je
cmp
push
leave
dec
das
hlt
mov
int3
icebp
mov
mov
testb
sbb
shrd
sbb
shrl
jno
fnsave
or
inc
ljmp
dec
aad
mov
mov
lret
sbb
or
lock
mov
xchg
arpl
test
clc
xor
lea
daa
sbb
push
stc
imul
ss
std
lods
and
add
fisubs
popa
test
mov
test
lret
sbb
add
sub
xchg
fs
pop
pop
fwait
pop
std
ret
sbb
or
push
dec
or
ljmp
clc
outsl
inc
mov
rcrb
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
xchg
mov
int
bound
insb
sbb
inc
je
pop
add
mov
cmp
outsb
xor
dec
popf
shrb
inc
dec
sbb
sub
jnp
das
inc
xor
adc
cmp
cmpsl
and
cli
sub
sub
jle
clc
sub
stos
xor
xor
jns
mov
xchg
jbe
stc
popf
and
push
or
hlt
push
lret
test
mov
pop
cmp
cmp
fwait
scas
scas
mov
add
orb
mov
lods
gs
push
mov
sbb
test
ret
ja
test
push
aaa
mov
xchg
xchg
add
mov
jecxz
cmp
xchg
xor
mov
test
dec
cmp
aam
iret
xor
adc
pop
js
movsb
mov
jge
cmpsl
jg
icebp
adc
xor
cmc
cmpsb
testb
add
pop
test
je
das
and
loope
pop
mov
lods
sbb
cmpsb
jg
fistps
ret
xchg
enter
mov
xlat
out
or
add
iret
mov
das
inc
pop
imul
add
frstor
or
filds
adc
scas
sub
out
sub
push
test
and
mov
push
xchg
jecxz
es
push
xor
xchg
and
xor
xchg
jp
out
cmpsl
imul
rcrl
or
add
add
inc
arpl
push
scas
fcomps
cmp
fsubr
jbe
cwtl
sti
stc
repz
imul
dec
dec
xchg
adc
cmpsb
mov
into
stos
push
inc
sbb
push
clc
mov
sbb
dec
jmp
push
cld
dec
shl
push
rorb
mov
popa
cld
sbb
mov
jae
je
mov
dec
pop
push
xlat
mov
aam
sub
and
and
fsubr
inc
aas
pop
out
scas
inc
cmp
sbb
jle
add
loop
hlt
cmp
mov
mov
lahf
push
jmp
inc
stos
pusha
mov
outsb
das
or
divl
push
fcomip
aam
jno
xor
ds
mov
popa
bound
xorb
dec
jp
xchg
xor
mov
popa
lcall
jb
mov
cli
push
test
nop
cli
out
mov
add
lret
ret
imul
test
fcoms
cmpsl
pop
and
jge
jmp
adc
sub
sub
jl
inc
jmp
jmp
scas
fs
sahf
in
mov
pop
xorl
or
in
xchg
mov
daa
enter
cltd
xchg
cmp
sub
sub
and
or
in
push
in
scas
xchg
xchg
jb
cmp
pop
pop
cmp
addr16
dec
add
or
lret
inc
test
dec
imul
lods
cmpsl
inc
xchg
mov
ss
test
arpl
aas
mov
fiaddl
mov
xlat
cmpsl
imulb
sub
pushf
iret
sbb
fldl
xor
inc
sbb
sbb
adc
idivb
mov
orl
repz
or
push
xlat
mov
fstpt
inc
xor
shrl
add
pop
cmp
ret
mov
hlt
sbb
push
test
mov
dec
hlt
add
xor
aad
test
insb
add
lret
ss
inc
push
sahf
jno
mov
enter
dec
outsl
push
mov
cmp
fisttpl
inc
mov
mov
jmp
rcrl
or
adc
or
stos
fcomps
mov
pop
xor
jno
mov
dec
sub
imul
out
in
loop
or
aaa
nop
mov
bound
jg
mov
mov
scas
test
sub
mov
add
mov
sbb
out
repz
inc
push
je
cmp
mov
and
adc
push
sahf
jl
loope
and
test
cmp
loope
popf
ss
call
cmc
int3
pop
addr16
stc
sahf
popa
test
fstpl
push
fmul
mov
ja,pn
dec
push
stos
dec
xchg
aas
loope
lcall
sub
dec
in
or
int
fcmovne
add
cmp
dec
in
mov
sub
sub
push
cwtl
cwtl
jbe
jnp
aas
push
mov
sbb
xchg
repz
xor
fwait
les
adc
in
in
outsl
jns
mov
cmp
xchg
xor
clc
in
rcll
stos
aad
mov
or
mov
inc
jb
gs
ret
sti
add
psubusw
pop
ret
sbb
push
adc
out
push
aam
ja
pop
mov
jmp
pop
adc
aad
into
xchg
stos
xchg
or
fbstp
aas
inc
int3
inc
cmc
sub
sbb
mov
mov
repz
orb
pop
mov
mov
mov
sub
pop
xor
sub
and
push
andnps
cmpsl
xor
cmpsb
repnz
and
nop
iret
scas
pop
and
or
rcrl
pop
movsl
out
pop
inc
test
mov
jge
mov
adc
mov
mov
das
mov
jmp
into
movsb
loopne
cmp
cmp
test
sub
add
sbb
arpl
out
into
jnp
faddl
inc
cmp
aad
lock
and
repz
jg
mov
mov
cmp
xchg
push
pop
mov
add
cmp
dec
scas
js
enter
adc
in
iret
rcrl
insl
js
xor
xchg
mov
adc
sbb
imul
push
sub
mov
lahf
daa
mov
inc
mov
orl
jecxz
jle
dec
popa
repnz
dec
or
or
mov
ret
dec
das
push
js
mov
cmp
pop
into
insb
cmp
imul
sbb
jle,pn
push
mov
sub
icebp
in
aaa
iret
push
xchg
mov
fists
and
negb
cld
jmp
pop
pusha
pop
negb
sbb
icebp
cmp
or
nop
ja
int
add
cmpsb
dec
jg
pop
push
pop
rorl
sbb
xchg
test
add
imul
ss
cld
mov
mov
les
and
scas
movsb
ret
xor
and
loop
sub
subl
leave
and
imul
clc
repnz
hlt
pop
xchg
mov
sub
or
jae
test
repz
mov
outsb
rcrb
push
lods
das
addr16
out
movd
icebp
lea
dec
push
jnp
add
push
hlt
ljmp
enter
adc
xor
push
push
test
icebp
shrb
adc
jbe
jb
sub
adc
into
test
jecxz
inc
jl
jecxz
jb
movsl
icebp
ds
fidivrs
xor
ss
int
inc
inc
fdivrs
imul
sbb
inc
pop
pusha
cli
insl
in
shll
orb
push
xor
jmp
sbb
clc
jecxz
dec
jge
cmpsl
fld
adc
sbb
dec
movsl
repz
jo
movsl
xor
xor
adc
dec
cltd
mov
add
xor
mov
and
jp
fldt
mov
sbb
test
xor
pusha
lret
mov
jbe
adc
popf
test
sub
stos
ret
jb
jmp
movsl
mov
add
sbb
jo
xchg
out
push
in
mov
sbb
mov
sub
es
mov
dec
nop
and
sub
popf
andb
andl
dec
popf
out
sbb
mov
lret
and
push
xchg
add
mov
imul
out
push
or
fwait
int
cmp
repz
inc
fsubl
popf
pop
fadds
test
nop
out
xlat
inc
out
cltd
cwtl
int3
movb
cmpsl
cmp
iret
popa
popa
inc
into
ret
sbb
mov
out
lret
cmpsl
out
inc
push
cwtl
aam
sahf
movl
lock
pop
dec
push
hlt
cmp
rolb
ljmp
xchg
scas
jae
dec
mov
jbe
jl
lcall
shlb
faddl
stos
das
cmc
lods
push
and
test
jmp
loope
scas
xor
mov
pop
adc
cmc
lock
jl
mov
inc
pop
xchg
sbb
shl
add
test
jmp
pusha
jmp
mov
int
xchg
loop
ss
js
incb
scas
sub
mov
push
xchg
sti
sahf
gs
pop
jl
ret
mov
dec
xor
insb
pop
or
sbbl
xchg
push
pop
in
cmpsl
sub
insl
lea
mov
gs
mov
clc
imul
sti
aam
xchg
inc
sub
iret
nop
mov
add
es
pop
push
cmpsb
stos
imul
xor
cmc
andb
and
negb
fwait
dec
or
fs
xlat
repnz
movsl
stos
rol
dec
fwait
insl
xchg
mov
adc
test
insb
insb
mov
mov
fstl
cwtl
lret
test
loope
decl
or
mov
sar
stos
cmpl
mov
rcrl
cs
xchg
std
test
outsl
sub
xchg
mov
scas
push
dec
and
dec
stc
fs
push
push
xchg
dec
dec
roll
rol
jnp
push
mov
adc
pop
mov
pop
jb
daa
mov
mov
mov
mov
jg
ror
loope
aaa
jno
fimull
push
in
fstl
pop
pushf
rclb
xchg
inc
aad
inc
mov
adc
jb
inc
push
jecxz
in
fs
or
jmp
xor
xchg
push
aam
push
fisttpl
hlt
xor
and
aas
popa
faddp
jae
lcall
jns
dec
iret
loopne
jg
sub
pop
aad
fisubrs
in
into
int
mov
or
call
pop
bound
xchg
sub
add
ds
or
lods
ss
movsb
cmp
aam
nop
cltd
mov
jge
push
jp
movsl
mov
adc
cltd
push
das
and
aaa
mov
out
cmc
insb
movsb
pop
xchg
imul
or
and
pop
or
and
mov
inc
lods
jge
mov
inc
insl
adc
lock
add
push
dec
xchg
orb
call
les
pop
subl
lcall
dec
aaa
mov
jne
mov
mov
lcall
mov
mov
adc
loopne
adc
sub
in
hlt
push
jnp
sub
stos
aad
aas
lds
ljmp
push
lret
dec
dec
ficoml
dec
lahf
loop
mov
adcb
mov
ds
aas
int
or
test
or
adcl
shrl
inc
imul
outsl
and
mov
idivb
inc
or
je
scas
cmpsb
loopne
or
pop
mov
mov
rcl
addr16
or
sarb
mov
dec
xlat
xor
xor
addl
hlt
and
pop
fsub
movsl
dec
mov
adc
imul
sbb
stos
mov
js
and
scas
rclb
pusha
stc
js
int
shlb
gs
mov
in
mov
inc
push
fucomp
push
mov
into
xchg
jbe
ret
lcall
jg
call
mov
push
inc
push
aad
les
pop
shrl
in
lods
lods
sub
fnstcw
mov
add
xor
cmp
ds
xor
inc
scas
test
repnz
mov
imul
adc
mov
test
mull
cs
fiadds
leave
out
cmpsb
push
and
jmp
notl
pop
bound
pop
in
xchg
std
pop
das
insb
mov
lret
fistpll
jb
enter
mov
shlb
jecxz
das
adc
xlat
mov
mov
out
popa
ja
jge
inc
orb
loopne
inc
sub
testb
mov
fnsave
dec
push
sbbb
bound
fdivl
or
stos
inc
cltd
inc
ret
fs
fsubp
orl
jle,pn
into
lock
mov
sbb
lahf
or
xchg
mov
into
dec
xchg
mov
je
mov
jl
out
aas
adc
or
mov
jno
shl
clc
mov
adc
je
movsb
pop
fisttpl
ds
xor
stos
in
xchg
add
hlt
call
push
aad
pushf
and
inc
mov
jo
adc
lahf
lods
lret
xor
jle
cmpl
pop
das
xor
pop
sub
notl
mov
insl
enter
lahf
scas
out
or
sub
push
pusha
icebp
ljmp
out
lock
adc
call
mov
dec
or
xor
mov
push
loop
cld
mov
xchg
sbb
mov
xor
test
loop
mov
sub
xchg
rcrb
cmp
inc
cmp
push
pop
mov
les
jmp
fldt
xchg
push
lea
cmovg
cmp
clc
push
fistl
pop
sti
sbb
push
sahf
add
inc
push
inc
or
inc
dec
loope
cmovno
ss
sbb
mov
iret
lret
dec
sbb
xchg
aas
lcall
das
pop
add
sub
out
xchg
pop
pop
dec
out
fdivs
in
or
test
jmp
push
sub
insl
adc
dec
xorb
add
pop
cmc
popf
divl
and
cltd
add
sub
jnp
in
inc
mov
fs
lret
mov
mov
out
fisubrl
mov
mov
sbb
adc
stc
jmp
dec
mov
and
pop
mov
test
adc
daa
inc
loope
aad
add
popf
std
add
in
xor
outsl
add
mov
mov
inc
pop
sbb
ss
jl
mov
andb
addr16
repz
nop
test
jns
stc
imul
loopne
push
push
mov
inc
push
cmp
arpl
cmpsl
outsb
xor
jb
mov
xchg
push
leave
push
jnp
adc
and
xchg
insb
and
lods
fisttpll
data16
scas
aaa
scas
daa
aam
idiv
ja
cmp
xchg
fiadds
sub
sarb
xchg
xchg
in
mov
arpl
hlt
mov
je
out
pop
adc
pop
cmpsl
inc
subb
aam
or
sarb
test
aaa
cli
pop
mov
dec
mov
mov
mov
dec
incl
jmp
push
mov
je
xor
mov
sbb
es
arpl
cmp
pushf
or
xor
adc
frstor
jl
and
pop
sbbb
jmp
xchg
sbb
mov
jle
insb
xor
dec
xchg
lods
and
mull
out
daa
jge
sub
add
ja
iret
sahf
adc
push
and
imul
pushf
orl
pop
dec
cmp
add
ds
mov
repz
xchg
jb
cmp
mov
jo
jecxz
sub
cmp
daa
daa
bound
popf
or
adc
xor
jge
push
pop
and
add
cmp
mov
dec
push
sbb
xchg
inc
add
aas
and
les
nop
sbb
mov
dec
aas
shrb
xchg
je
ficoml
cmc
in
mov
and
test
test
bound
jecxz
cwtl
xor
push
jae
inc
inc
hlt
inc
mov
mov
xchg
jb
imul
leave
clc
bound
push
or
and
cmpsb
setge
loope
and
xor
jbe
inc
sub
scas
or
or
mov
enter
sahf
ja
sub
jbe
adc
push
hlt
or
pop
subb
sahf
pop
sub
int3
cwtl
xor
dec
xor
mov
arpl
out
push
cmc
shrl
into
and
daa
subl
or
mov
sbb
mov
ljmp
mov
loopne
mov
sahf
push
cmp
push
mov
sub
mov
xchg
insl
rcrl
outsb
pop
les
das
fldcw
inc
inc
add
in
rcrb
jo
pop
xorl
lods
fcmovne
test
and
push
mov
sub
xchg
sbb
and
push
jne
jp
insb
addr16
mov
out
mov
sbb
and
ja
inc
stos
cmp
pop
jbe
add
loopne
negb
adc
sub
cltd
push
imul
enter
add
ljmp
sub
pop
cmpsb
push
fcmovbe
rclb
sbb
mov
mov
xchg
lods
mov
cli
or
xlat
or
mov
std
sbb
inc
ja
fcomip
push
push
cmc
push
mov
sbb
cli
fimuls
mov
mov
lea
inc
dec
mov
pop
add
lret
dec
sti
push
icebp
inc
inc
add
inc
outsl
sbb
mov
call
pop
xchg
movl
scas
pop
loop
fisttpll
mov
inc
adc
mov
cs
std
jle
les
roll
scas
or
inc
shrl
das
mov
lret
xor
mov
sbb
mov
jmp
aas
xor
stc
sub
mov
imul
iret
sbb
or
repnz
xchg
and
call
bound
addb
mov
lcall
clc
pop
enter
mov
ret
jmp
aad
lods
or
cs
sub
dec
inc
mov
movsb
pop
in
xor
mov
adc
inc
sarb
testb
pop
out
cmp
gs
jno
sahf
mov
mov
fmuls
xchg
stos
mov
outsl
test
scas
add
movsl
mov
mov
cmp
pop
mov
test
xchg
test
inc
repnz
and
sbb
cs
ja
push
jmp
xor
cmp
sub
lret
dec
mov
and
xchg
cli
jbe
adc
adc
filds
sub
dec
scas
out
test
cmp
sub
jl
fldenv
fldl
daa
fidivrs
cli
pop
mov
daa
testb
xchg
push
fldenv
scas
hlt
jne
scas
sub
xchg
cmpb
les
out
ds
xor
icebp
mov
outsb
out
call
jmp
clc
mov
sbb
cmp
xor
and
inc
cmp
fisubrs
insb
push
in
fwait
addr16
sahf
jbe
push
pop
pop
les
fsubl
jmp
rcrb
mov
sub
push
inc
cmp
or
sub
movsb
sbb
cs
push
adc
jne
in
data16
add
repz
imul
cmc
lahf
adc
jns
pop
pop
pop
push
out
repnz
cwtl
cltd
stos
sub
adc
fmulp
and
adc
inc
mov
jnp
lock
jb
fwait
pop
adc
cmpl
aaa
jecxz
xor
jb
sub
lods
mov
adc
inc
sbb
add
and
mulb
daa
pop
jo
pop
mov
mov
lods
jg
add
outsb
loop
lods
outsb
js
and
call
mov
ds
sub
pop
push
sbb
loope
push
loop
adc
data16
testl
or
andl
sub
mov
inc
lahf
pop
ljmp
test
and
pop
sbb
mov
xchg
xchg
sub
cmp
mov
pushf
stos
incl
loope
sub
adc
cmp
jnp
xor
pusha
or
ret
repz
sbb
push
pop
es
je
dec
push
fwait
nop
dec
cwtl
mov
in
fiaddl
pop
pop
insb
cmp
repnz
lea
mov
xor
enter
push
fcomps
push
push
leave
xacquire
stos
dec
sbb
xor
mov
mov
and
dec
test
fcoml
pop
pop
into
in
xchg
popf
into
divl
push
sub
inc
dec
adc
ds
xchg
jno
xor
es
fistps
cmp
ss
pop
mov
xor
enter
sti
jp
push
mov
insl
cld
loopne
push
loope
lds
ficoms
repz
sbb
push
pop
jl
in
imulb
xchg
jmp
addr16
push
es
lea
xor
mov
call
pushf
aaa
push
or
mov
or
adc
push
pop
daa
lcall
lahf
pop
dec
mov
call
fildll
xchg
xchg
pushl
dec
test
add
les
jbe
call
fwait
or
mov
mov
xor
fwait
inc
add
sahf
test
mov
inc
pop
loope
insb
cmc
test
scas
fcmovbe
jl
aas
sub
inc
xor
jg
push
sub
scas
into
dec
and
ss
and
or
frstor
call
mov
adc
mov
cmp
stos
lock
push
push
sub
shll
loopne
repnz
mov
fwait
sarl
jp
cmp
pop
inc
loope
and
or
jbe
aad
inc
sbb
stc
in
inc
or
scas
in
in
mov
sahf
pop
cld
sarl
les
sbb
xchg
push
movsb
mov
or
fs
jns
pop
inc
jo
jle
mov
mov
mov
int
and
and
adc
movb
adc
and
les
jo
leave
rorl
adc
das
jno
xor
dec
xchg
scas
inc
xchg
push
jle
jmp
inc
popf
sub
cmp
cmp
js
divl
call
shlb
xor
fdivrl
add
in
out
mov
bound
ror
mov
mov
pop
sub
mov
mov
inc
push
movsb
inc
jle
xor
sub
leave
mov
jae
call
outsb
and
insb
cld
cmp
std
inc
aam
inc
sub
andl
push
loope
add
xor
insl
pop
push
or
icebp
cltd
pop
xor
aaa
in
enter
inc
test
jge
inc
not
push
loope
push
test
es
or
test
mov
xchg
fs
mov
sub
or
add
push
adc
mov
push
add
out
add
and
fcoms
pop
stc
addr16
idivl
pop
inc
pop
inc
fimull
cli
fstpt
nop
aaa
push
sbb
adc
xchg
adc
addl
cli
dec
popf
pop
cmpsb
adc
and
push
sbb
in
and
inc
mov
mov
lock
ljmp
test
inc
push
sarb
sti
and
aam
add
orl
inc
lds
and
xchg
repz
imul
sbb
push
test
fnstsw
push
cmp
jge
xchg
scas
cld
jae
mov
idiv
movsl
test
test
and
pop
or
imul
adc
sahf
daa
jb
or
pop
aaa
or
data16
pop
add
dec
sub
mov
into
scas
xor
ja
hlt
fisttpll
call
sub
sub
test
and
cwtl
stc
sahf
aam
add
dec
jge
movsl
push
movsl
ja
mov
mov
mov
arpl
mov
pusha
insl
hlt
iret
mov
jmp
shlb
imul
xchg
mov
mov
test
cmpl
cmp
cmp
pop
or
mov
loop
mov
jbe
hlt
xchg
mov
inc
push
fcomps
xchg
and
test
sub
dec
mov
pop
and
decl
push
sub
and
lahf
jl
std
int3
mov
loop
bound
ja
cmp
in
pushf
and
test
pop
test
negb
fldcw
fdivrs
lret
xor
pop
in
pop
andb
add
inc
adcl
push
mov
xorb
push
pop
and
mov
push
out
enter
and
pusha
mov
andb
inc
mov
xor
xlat
jecxz
jg
cmp
cmc
xchg
and
dec
sub
cmovge
jl
mov
pop
jnp
aam
jmp
sub
adc
leave
mov
jno
fmuls
xor
or
mov
push
into
push
mov
aaa
pop
scas
pop
xor
cmp
jmp
pop
cmp
lret
cmp
mov
pushf
adc
add
test
cli
mov
xchg
cwtl
lock
xchg
sbb
mov
mov
add
jns
aas
aaa
adc
jmp
pusha
sbb
sub
adc
mov
mov
mov
xor
fbld
sbb
das
push
mov
add
mov
call
lods
cmp
hlt
and
pushw
cmp
insl
dec
xor
imul
in
cmp
jno
push
insb
adc
cltd
loop
cwtl
mov
lcall
out
mov
popf
pop
test
xor
std
lock
in
inc
jo
sbb
sub
out
shrb
or
xchg
mov
repz
ret
shlb
push
aad
dec
lret
pop
jmp
int3
test
popa
icebp
push
jl
pop
rcrl
clc
imul
scas
sbb
sub
xor
push
cmpsl
lahf
rcr
sub
dec
std
cld
das
leave
or
pop
sbb
mov
lock
push
xchg
outsb
xchg
xor
pop
insl
sub
or
mov
push
mov
repnz
push
es
pushf
loop
mov
push
add
cld
mov
insb
jno
aaa
shrl
xchg
movsl
into
push
mov
sahf
dec
sbbb
cmp
call
and
int3
js
cmp
adcl
jns
rclb
incl
ret
test
and
and
or
add
push
push
jae
mov
sub
inc
loopne
fdivrs
jbe
cmp
test
mov
lods
adc
push
cmp
test
inc
pop
mov
xor
movsb
lret
pop
xor
inc
or
mov
sub
sti
sbb
jae
rcrb
dec
fbstp
lods
add
mov
stos
mov
push
mov
inc
xor
sub
sahf
inc
repnz
dec
jo
out
pop
ret
out
xor
xor
stos
xchg
jecxz
hlt
push
add
lret
neg
and
decb
xchg
and
fcomip
aas
mov
jle
sub
cs
mov
push
ss
xchg
mov
inc
push
xor
cmp
jp
mov
xchg
cwtl
data16
dec
test
mov
push
adc
aaa
cmc
gs
movsl
in
push
pusha
nop
xor
xchg
je
pop
in
popa
push
mov
push
mov
dec
push
cmp
arpl
loop
pop
xor
rolb
je
adc
and
mov
sbb
or
fisttpl
pop
les
pop
sbb
adc
or
and
insl
jns
stos
pop
xor
sbb
movsb
jne
add
mov
decb
int3
cmpsb
ja
jle
pushl
not
scas
pusha
frstor
and
fldcw
or
loope
sahf
enter
jae
fisttpl
sbb
mov
xchg
push
inc
jp
fmull
jbe
xor
rcrb
push
dec
cmp
pop
adc
push
pop
gs
jp
je
ja
xchg
insl
sbb
mov
pop
add
icebp
leave
inc
and
jg
push
xchg
xor
push
lds
and
push
imul
sbb
inc
ret
and
push
adc
subb
push
jge
and
cld
loope
inc
mov
aaa
imulb
test
pop
jne
mov
jmp
add
sbb
test
jge
jne
add
sub
xor
mov
cli
rorl
dec
ret
jl
and
sbb
dec
inc
push
aam
pusha
xchg
fwait
jne
push
mov
pop
jg
or
mov
xor
push
jno
inc
lock
popa
cld
sub
arpl
push
test
loope
aad
or
add
dec
and
enter
mov
addl
mov
adcl
popf
in
push
sbb
imul
scas
scas
call
call
fcomps
je
iret
lret
dec
jecxz
xchg
mov
xchg
or
pop
shrl
ret
aad
enter
and
rcrb
in
decb
xchg
and
add
mov
loopne
mov
adc
sub
rolb
aad
pushf
jae
add
jno
flds
pop
pop
xchg
rcrl
movsl
loop
add
in
popf
sbb
push
sub
popf
in
add
pop
cmp
out
fsts
int3
fdivr
mov
xor
mov
lea
dec
cwtl
push
hlt
jb
nop
push
imul
or
sub
push
stos
dec
push
or
sbb
mov
ljmp
les
js
fnsave
shlb
inc
cs
pusha
xchg
pop
jns
lock
push
xchg
xchg
adc
cmp
sbb
icebp
nop
aam
pop
mov
mov
mov
add
mov
mov
xor
ret
mov
add
fidivs
aaa
into
fdivrs
mov
insb
fmull
movsl
aam
mov
mov
aad
jg
cmp
xchg
aad
add
outsl
sub
fiadds
sarb
and
adc
or
lds
icebp
cs
push
lods
xchg
mov
mov
inc
xchg
in
sub
pop
xchg
lahf
push
out
std
or
xor
dec
hlt
je
pushf
push
dec
out
insb
mov
aam
scas
xchg
andb
daa
sar
test
mov
cmp
sub
fistpll
mov
jle
testb
sti
inc
loop
ja
push
jge
sub
and
int3
outsb
inc
ljmp
movb
push
cmpsl
enter
jae
push
repnz
std
sbb
fstpt
jg
xor
xor
aad
jne
imul
repnz
sub
test
in
pop
mov
repnz
push
subl
lods
lret
xchg
idivl
sub
mov
adc
mov
cmp
sub
ret
out
pop
notl
sub
push
sbb
mov
mov
jecxz
insl
les
ret
test
pop
shl
fdiv
pop
test
xchg
dec
cmp
push
jne
dec
mov
or
mov
incb
out
adc
mov
iret
jecxz
pushf
sub
andl
dec
or
fnstenv
jb
cmp
mov
pop
push
pop
movsl
sti
sbb
push
inc
mov
add
mov
push
jno
pop
incl
enter
test
testb
sub
jae
push
jp
and
push
mov
sbb
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
lods
xor
push
pop
bound
mov
rol
fildl
mov
sbb
leave
mov
jo
xor
ret
cmp
out
sti
orl
es
shrl
testb
xchg
inc
int3
test
push
in
inc
cli
push
pusha
ds
das
or
mov
or
dec
add
insl
inc
out
push
sti
mov
cld
dec
movsl
insb
lea
hlt
xlat
loope
dec
jg
jns
jo
ja
xchg
fs
mov
or
push
cwtl
sbb
out
mov
imul
pop
add
cmp
testl
dec
fcompl
js
pop
cli
std
and
push
movb
cmc
idiv
mov
sbb
and
out
jo
fwait
dec
push
or
test
push
xchg
pop
wbinvd
mov
push
fists
movsl
mov
movl
lcall
mov
loop
mov
cmp
mov
test
mov
adc
jbe
js
mov
adc
ret
pop
aas
cmp
dec
add
xchg
lahf
ret
mov
std
mov
repz
pop
xchg
jbe
cwtl
insb
push
dec
stc
out
andb
mov
arpl
test
push
jl
popa
adc
ret
rolb
repnz
lret
jnp
xchg
jae
jne
sub
add
sahf
jl
jl
in
stos
push
mov
add
xor
xor
fnstenv
add
in
mov
mov
lock
add
dec
pop
lods
sbb
aaa
ficoms
enter
jae
test
das
xchg
int
iret
sbb
xor
sbbb
pop
gs
das
or
cmpsb
out
jo
jmp
mov
enter
sub
scas
sti
mov
sub
jbe
loope
icebp
arpl
or
jne
add
jns
dec
ffreep
add
mov
sub
arpl
movsb
mov
inc
test
sbbl
pop
xchg
sbb
add
les
and
imul
clc
dec
pop
push
ljmp
hlt
push
int
out
push
cmpsb
jge
pop
ret
std
pop
pop
pop
or
adc
jns
lret
add
and
adc
jg
stos
stc
icebp
das
push
movsl
mul
fwait
ss
repz
pop
push
jmp
pop
mov
cli
mov
fs
adc
dec
push
pusha
jp
arpl
insl
add
pop
mov
cld
into
mov
leave
xchg
pop
leave
mov
nop
sbb
call
xchg
bound
jmp
push
pop
mov
mov
cmp
out
mov
dec
push
out
ret
xchg
xchg
movsb
sbb
dec
mov
test
std
orb
pusha
and
fnstsw
shlb
nop
and
add
in
push
xchg
roll
push
inc
es
mov
xchg
mov
or
xor
in
cltd
enter
adc
stos
dec
fs
inc
mov
add
call
add
arpl
or
inc
pusha
leave
xchg
jnp
fsubr
xchg
xchg
mov
pusha
xchg
test
hlt
sub
lret
jb
lods
lcall
jge
fsubrl
xor
insb
mov
dec
call
out
and
call
push
ds
daa
popa
xor
dec
pop
jns
lods
cmp
rcr
rolb
addr16
xchg
or
mov
out
std
cmpb
sti
test
push
es
dec
stc
xchg
cmp
pop
adc
sbb
add
pop
xchg
mov
cli
mov
ds
sahf
jnp
mov
pop
mov
xbegin
mov
and
cltd
insb
ds
stos
sti
pushf
stos
cwtl
cmp
ljmp
adc
pop
mov
aaa
mov
jo
or
lock
push
scas
adc
in
inc
mov
jnp
pop
aas
addr16
neg
mov
pshufw
cmpsl
mov
in
sbb
enter
sahf
daa
fwait
scas
pushf
mov
mov
cmp
cltd
add
xchg
or
push
fisubs
pop
adc
int3
divl
popa
cmp
inc
test
call
jmp
scas
xor
inc
jo
sub
sbb
test
xor
dec
fcmove
xchg
lahf
jg
scas
ror
add
test
fs
addr16
mov
daa
jbe
jb
mov
or
and
pop
lock
repz
fucom
mov
pusha
or
mov
std
pop
cmc
lods
jmp
mov
adc
shrb
fstps
icebp
sub
jg
icebp
in
out
arpl
lock
mov
lea
icebp
dec
xchg
inc
cmovo
mov
mov
cli
jmp
in
clc
add
jmp
fcmovbe
pop
rclb
and
outsb
or
xchg
push
cltd
test
sbb
cmp
mov
pop
sub
fisttps
cmp
xor
add
jmp
jecxz
jo
cmp
adc
sahf
mov
fdivrl
sub
iret
int
cmp
cltd
fistpll
cmp
or
push
mov
xchg
popa
pop
xchg
aad
fisubl
inc
icebp
notl
test
inc
add
faddp
xor
pop
repnz
mov
push
pop
jae
incb
pop
inc
in
cltd
adc
xor
mov
aaa
mov
in
adc
sbb
ljmp
paddq
and
push
test
pop
sub
jae
leave
dec
insl
and
pop
mov
shlb
inc
je
jg
mov
test
daa
in
cmp
out
out
rcrl
mov
mov
shl
inc
jmp
fs
cmp
mov
ds
push
mov
inc
ds
and
or
nop
jg
leave
lret
mov
mov
scas
mov
test
das
lods
dec
or
xor
leave
mov
mov
fs
stos
movsb
pusha
jge
push
out
sbb
loop
mov
lret
nop
in
adc
sbb
scas
or
and
lods
scas
push
mul
std
inc
push
or
imul
xchg
and
hlt
cwtl
dec
cmp
mov
xchg
push
inc
int
sbb
cmp
sub
call
dec
and
jg
xor
add
sub
call
sub
fldcw
jo
es
popa
lods
cmp
jne,pn
and
mov
mov
pushf
cmp
jecxz
les
iret
pop
jbe
sbb
and
out
cld
xchg
enter
rorb
rcrl
sbb
or
and
jbe
ss
test
mov
xchg
xchg
dec
les
inc
mov
outsl
orb
push
enter
inc
inc
repnz
outsl
mov
or
and
ds
and
insl
xor
mov
jne
adc
in
cwtl
shlb
les
and
scas
test
cwtl
adc
cli
pop
jmp
aaa
push
insl
cwtl
out
loopne
icebp
xor
sub
stc
cli
jbe
popf
dec
aad
and
jne
xchg
lret
cmpsl
cvttps2pi
push
cwtl
incl
fsubs
jb
repz
push
push
and
jo
mov
dec
xchg
inc
xor
das
add
jmp
dec
rcrl
dec
cmp
popf
outsl
in
fimull
call
jbe
pop
dec
lahf
and
push
rcr
xor
insl
aaa
test
mov
out
jmp
push
cld
push
xor
bt
lds
imul
cmp
inc
scas
ss
mov
sub
jnp
mov
and
stos
sub
and
insb
dec
xchg
adc
lods
shrl
pop
push
xchg
inc
mov
fisubrs
or
cmp
insl
lock
or
mov
aas
inc
mov
lret
pop
sbb
cmc
sahf
xchg
mov
call
xchg
push
ss
mov
inc
mov
test
ds
data16
mov
and
push
add
data16
or
add
xchg
sbb
jns
xor
rorl
push
inc
das
stc
mov
repz
insb
sub
lret
lret
cltd
add
push
mov
ja
or
stos
cmp
dec
std
mov
mov
sub
out
fcmovne
push
mov
in
je
mov
sbb
mov
mov
iret
mov
sbb
inc
sub
add
lea
shrb
xor
lcall
dec
lods
fdiv
dec
pushf
cmp
lahf
sbb
insb
dec
iret
rolb
mov
pop
sub
cmp
pop
jecxz
repz
push
insl
js
insl
shll
clc
xor
inc
leave
scas
pop
xchg
nop
push
test
decl
cmp
or
dec
dec
pop
mov
mov
adc
imul
jno
frstor
in
pop
in
and
cmpsb
mov
into
lcall
xchg
pop
cmp
pop
mov
or
lods
push
dec
sub
jp
je
mov
cmpsl
cmp
push
lds
test
pop
pcmpgtb
repz
adc
notl
je
gs
cmp
test
add
push
jmp
outsl
pop
lcall
mov
leave
inc
sub
popl
pop
daa
ss
xor
aas
in
rorl
and
fwait
rclb
inc
or
or
mov
cwtl
push
mov
pop
out
movsl
rolb
fdivrs
andl
mov
sbb
dec
in
add
xchg
pop
stc
in
ret
ds
lret
test
rcl
cs
outsb
adc
inc
stos
dec
push
pop
loop
cmp
cmp
xchg
pop
stos
sahf
and
or
add
lahf
js
cli
stc
pop
jno
pop
xchg
fisttpl
jno
pop
arpl
fld1
fwait
imul
popf
push
imull
fistps
addr16
cmp
mov
repz
aam
divl
stc
popa
mov
cld
add
sbb
xor
and
pushf
scas
andl
lods
xchg
mov
mov
jae
mov
sti
das
fnstsw
pop
daa
add
scas
or
popf
rolb
push
sub
or
out
das
insl
out
sub
inc
into
ret
jmp
mov
mov
or
xor
xor
ljmp
cmc
inc
push
push
movsb
lea
adc
sbb
sub
mov
sarb
test
cmp
dec
fwait
popf
mov
lea
mov
adc
lock
push
roll
add
ret
add
pop
and
cltd
push
mov
inc
arpl
pop
std
lret
sub
mov
jmp
imul
cmp
sti
fcmovnbe
adc
lods
in
icebp
and
lcall
pop
jbe
xchg
dec
fidivrs
fwait
aas
push
jno
cmpb
inc
std
in
mov
dec
jno
pop
sbb
shlb
daa
cli
push
in
push
mov
xchg
insb
out
popa
mov
mov
sbb
xlat
hlt
aam
jle
cmpsb
sbb
push
pop
xor
divl
inc
jb
in
sti
imul
adc
pop
fwait
gs
scas
call
rep
data16
lcall
movsb
lock
and
jo
out
push
or
cmp
fdivr
push
mov
test
inc
dec
xchg
cld
scas
rclb
aaa
out
xor
or
daa
jo
stc
inc
xchg
pop
sbbb
scas
sub
lret
mov
cmpsl
or
mov
push
loope
imul
xchg
stos
add
sbb
mov
aam
into
xor
scas
stc
mov
fistps
nop
pop
movsl
lock
icebp
outsb
xchg
sarl
imul
fstpt
dec
scas
sub
ret
out
jp
pop
mov
xchg
outsl
add
cltd
pop
orl
ret
cmpsl
mov
xor
sub
in
in
std
mov
test
push
and
loopne
mov
or
jne
ret
cmp
in
add
add
xchg
xchg
aaa
sub
rcrl
loope
sub
test
les
int3
xor
orb
setl
dec
mov
sub
push
orb
and
repnz
sbb
and
lock
xor
jne
mov
pop
adc
inc
jnp
mov
shll
into
mov
insl
add
push
adcl
or
sub
mov
jmp
push
jl
sub
xchg
cmpsl
loopne
dec
shrl
mov
outsb
jo
pop
or
in
popa
add
nop
jge
mov
or
mov
cmp
dec
popa
xchg
cmc
pop
loope
testb
lods
sahf
fcoms
mov
xchg
xchg
out
mov
or
xorb
push
add
lods
out
or
pusha
xchg
adc
sub
jle
cltd
fiaddl
cmp
fdivl
sbb
ret
sbb
hlt
xor
call
mov
or
popa
cld
inc
jnp
nop
pop
pop
shl
push
cltd
mov
ficoml
enter
faddl
fildl
dec
fs
shrb
and
outsb
jno
mov
cmp
arpl
add
inc
pop
mov
out
lahf
fs
mov
xchg
icebp
jno
pop
orl
add
shlb
ds
repnz
sbb
pop
icebp
mov
add
inc
push
adc
mov
nop
cmp
in
sub
movsl
pop
cmp
cmp
pop
fists
sbbb
jae
inc
pushf
adc
and
gs
jae
rcl
stc
inc
rcrb
or
push
lods
sub
orb
sahf
jnp
rclb
sub
dec
in
stos
mov
push
pop
push
push
mov
sbb
pop
roll
repz
sbb
push
cmc
shl
aad
add
popa
popf
fisttps
sub
inc
int3
or
push
adc
lea
lea
out
cmp
xor
rorl
push
lods
jge
daa
movsl
test
xchg
fsubp
or
gs
scas
rolb
lcall
sarl
sbb
in
stos
lea
mov
pop
test
cs
inc
pop
leave
adc
adc
in
pop
leave
mov
and
mov
mov
mov
cs
add
sub
cmpsb
js
mov
ljmp
pop
pop
jo
fimull
sarb
mov
push
sbb
push
inc
push
in
je
and
ret
gs
outsb
jl
iret
xchg
xchg
jae
inc
xlat
adc
btc
mov
xchg
push
pop
lods
rorb
pop
or
mov
inc
jge
cld
jge
lea
xchg
mov
int3
adc
cmp
pop
enter
in
dec
stc
repz
jg
pop
in
shlb
test
pushf
xor
mov
sub
push
jns
rcl
mov
fdivr
cmp
jno
mov
lock
in
sbb
ja
pop
adc
clc
scas
mov
stos
jne
add
adc
fucomip
cld
movsb
mov
dec
les
fwait
int
xchg
cli
iret
add
lods
xchg
dec
mov
mov
ret
scas
push
jbe
mov
or
mov
aam
jnp
mul
xchg
mov
mov
inc
adc
or
inc
push
add
repz
sbb
pop
mov
push
fs
test
fsubrs
mov
jp
push
cmp
jae
sub
mov
fwait
sbb
and
fidivrl
addl
sub
inc
call
xchg
adc
stos
dec
ss
pmaddwd
ret
insb
ljmp
lahf
nop
mov
sub
out
stc
jne
sbb
lret
movsl
xor
test
push
or
nop
fldt
dec
stc
outsl
mov
into
mov
pusha
xchg
ds
adc
or
sub
ficoms
repz
inc
xchg
xchg
xchg
dec
mov
pop
push
enter
gs
fadds
popf
push
imul
sti
lods
adc
sbb
jns
pusha
subb
movsb
movsl
aad
popf
dec
in
cmpb
add
jmp
pop
arpl
pop
sbb
adc
js
roll
das
lret
in
les
adc
pushf
xor
sub
aaa
or
jbe
not
lret
jnp
rol
push
sub
adc
lods
out
jne
inc
cmc
lock
xchg
cmpl
fidivl
mov
js
stc
sub
lods
jns
mov
mov
jo
adc
push
lret
xchg
leave
inc
ss
xor
and
mov
cmp
dec
aad
jle
aaa
push
cmp
out
xchg
mov
mov
cmp
inc
jns
filds
scas
cmp
and
mov
aad
push
inc
add
leave
xor
and
and
mov
push
pop
dec
cmp
inc
cmc
data16
test
push
jnp
mov
sub
jb
inc
mov
lock
aaa
inc
pop
cltd
dec
outsl
xor
call
out
push
mov
cs
push
lea
push
sub
mov
aas
scas
test
cs
xor
pop
cmc
mov
mov
sub
xchg
imull
jns
bound
aas
es
out
loope
jb
out
jp
mov
pop
cld
sub
add
pop
jo
pop
or
push
outsl
sub
out
mov
lock
cmp
jmp
inc
leave
mov
dec
xchg
rolb
jle
push
push
lock
int
mov
jmp
push
lahf
cli
imul
add
out
les
movsl
ficoml
add
imul
mov
xchg
inc
es
xchg
pop
inc
xchg
add
fiaddl
cmpsb
ret
mov
loopne
inc
jbe
add
ljmp
fistl
push
mov
pop
imul
scas
scas
mov
push
push
fsubl
test
int3
mov
es
fs
sub
jmp
orl
mov
mov
mov
repnz
test
lods
xor
push
xchg
xor
pop
ljmp
imul
or
dec
adc
jno
outsb
aam
popa
cmc
sub
movsb
mov
pop
aas
stos
aam
pop
jbe
push
add
pusha
adc
sbb
out
mov
push
jge
movsl
add
xchg
lods
idivb
sarl
ljmp
jbe
add
rclb
mov
and
fwait
popa
push
arpl
push
sub
sbb
aad
lcall
fdiv
mov
popa
mov
dec
test
insb
push
lcall
andl
int3
incl
outsb
imul
cs
pop
call
mov
outsl
xchg
mov
fcom
sbb
xchg
ret
int3
je
ss
leave
fldz
dec
dec
enter
cmp
sti
ret
loope
sbb
pop
xor
int
or
mov
movl
in
cmp
scas
adc
stc
in
or
rcrb
pop
mov
mov
in
push
pop
xlat
cwtl
out
mov
mov
into
xchg
call
mov
shlb
mov
loopne
cli
push
icebp
pop
push
not
mov
inc
ljmp
mov
rcrl
cwtl
daa
mov
arpl
xchg
pop
cmpsl
mov
pop
add
cs
das
rcll
xchg
push
dec
int
mov
popf
pop
outsb
or
ss
jg
rdmsr
popa
cmp
push
inc
or
loope
mull
sub
imul
mov
push
jmp
add
call
in
jo
std
fcompl
cmp
fbstp
pop
dec
or
cmpsb
sub
mov
sbb
or
jbe
int
jg
jno
and
inc
lret
mov
repz
add
push
stos
hlt
call
test
daa
out
outsb
xor
adc
cmp
cmp
loop
bound
xchg
shl
inc
mov
test
ljmp
xor
inc
scas
icebp
clc
cmp
xor
pop
fs
xchg
arpl
or
std
mov
mov
je
mov
jmp
xchg
fsubr
gs
lret
jl
loop
cltd
jle
sbb
pop
pop
mov
push
fs
cwtl
sub
jg
outsb
daa
imul
push
and
imul
jge
add
imul
inc
dec
jmp
popf
in
jle
cmp
aaa
jae
sarl
fstpl
ljmp
xor
push
jo
or
jb
dec
mov
out
pop
lds
stos
pusha
jge
lock
fs
adcl
stos
daa
adc
shll
in
xchg
mov
mov
push
incb
mov
xchg
loope
popa
inc
aaa
hlt
gs
push
rclb
clc
add
adc
push
loope
aad
inc
std
lea
fsubp
push
or
and
sub
js
movsl
aas
stc
outsb
aaa
mov
and
loop
fsubs
cwtl
out
gs
pushf
dec
sar
fnstenv
ror
mov
xchg
or
sbb
jge
cmp
sahf
inc
cwtl
hlt
push
insl
mov
inc
fisttpl
sbb
cmpsl
sub
mov
push
or
fs
fcomps
loop
mov
jmp
loop
sbbl
fsts
into
inc
ljmp
mov
pop
and
call
sbb
loop
stc
into
mov
mov
pop
in
cmp
test
pop
sub
dec
stos
test
cltd
jnp
jge
data16
aam
out
adc
imul
push
clc
mov
jge
out
push
xor
pop
add
cld
dec
filds
and
xorb
lock
inc
popa
gs
cmp
sti
daa
cmpsb
and
sub
mov
sbb
out
dec
ficoml
ret
mov
sbb
into
pusha
scas
out
movsb
dec
in
insb
les
pop
xchg
xchg
clc
jle
add
cmpl
add
aas
cmp
fstpt
mov
or
jp
sub
fbstp
clc
cs
jp
fwait
cmp
lahf
mov
je
js
sbb
iret
push
push
popa
clc
in
cli
fs
and
sub
xchg
in
movsl
mov
addl
es
mov
sbb
icebp
cmpsl
and
cltd
cli
scas
test
inc
test
icebp
sbb
pop
test
dec
inc
adc
mov
fldt
stos
cmp
jge
mov
mov
jge
sub
or
mov
fists
inc
dec
pop
and
scas
int
cmp
lret
sahf
aam
inc
fcomps
mov
xor
lahf
lods
ficoms
aam
xchg
and
hlt
sbb
add
dec
mov
jl,pn
mov
lods
sbb
cwtl
loopne
dec
imul
imul
jne
lahf
dec
loopne
xor
ret
sbb
push
mov
fs
jns
mov
inc
push
aas
ret
and
lock
or
lods
idiv
fsubrp
sub
dec
mov
gs
out
jae
add
inc
mov
std
sub
fwait
scas
xchg
add
rclb
js
mov
inc
dec
cmp
sub
adc
call
dec
ds
das
in
xor
lcall
ljmp
xor
mov
or
addr16
fstpt
ds
cmp
push
in
dec
outsl
mov
pop
inc
xchg
jo
bound
scas
nop
xchg
mov
jl
push
inc
dec
pop
push
and
cmp
sbbb
pusha
sti
leave
les
add
mov
bound
cmp
adc
je
jno
mov
imul
lcall
in
sbb
xchg
aas
enter
fcomps
add
notb
lock
mov
add
lea
rcrl
push
or
adc
pop
lock
cmp
popa
inc
jl
and
mov
inc
bound
cmp
lods
fisubl
outsl
cmpsl
add
stc
cli
ret
shlb
mov
sub
sub
sbb
in
cmp
cmpsb
or
xchg
mov
push
push
pop
mov
mov
outsb
inc
in
ror
xor
mov
jb
and
dec
cltd
mov
push
sub
mov
sbb
adc
fidivrl
int
cmp
add
lcall
xor
inc
add
scas
lcall
pop
jbe
dec
lds
add
dec
cmc
add
pop
inc
shll
fsts
adc
jecxz
xchg
add
pop
movsb
sbb
into
adc
xor
sbb
dec
sarl
mov
lea
mov
jbe
lcall
dec
or
mov
mov
adc
push
cmpsl
int
jae
fimull
jle
ret
test
sub
lds
popf
cld
ret
xor
out
push
mov
push
icebp
mov
or
sub
cmpl
xchg
jle
inc
add
pop
push
inc
ss
sbb
fnsave
loope
outsb
mov
les
xor
rcrb
xchg
enter
int
jae
push
dec
icebp
ss
in
mov
test
pop
adc
mov
test
and
pop
data16
ss
lret
fdiv
pop
jb
imul
jnp
xchg
add
loope
cmp
xchg
xor
push
clc
pop
cmpsl
sub
mov
shrl
scas
dec
or
popa
mov
cmp
jmp
les
pushf
mov
testb
or
push
mov
lret
and
iret
inc
jne
lret
lret
popf
and
xor
pop
lret
clc
shlb
mov
aad
push
rorl
pop
jns
or
fwait
jbe
sbb
cwtl
push
jecxz
xlat
outsl
add
lea
sbb
push
inc
ljmp
mov
out
daa
xor
mov
xchg
sub
movsl
cld
adc
jne
adc
mov
es
aam
cmp
test
call
popl
in
out
lahf
cmpsl
aad
cltd
fwait
inc
ret
dec
movsb
pusha
jmp
cli
xor
dec
call
ss
ret
stc
add
pop
bnd
xchg
clc
or
loope
push
sahf
add
xchg
or
cmpsl
sbbl
mov
mov
or
iret
mov
addb
pop
fcompl
add
mov
es
cmp
push
lods
sbb
dec
jnp
or
dec
add
fwait
inc
push
mov
sub
pop
dec
xlat
pop
mov
jbe
mov
cmp
jp
cltd
cmpsb
lock
call
sarb
imul
mov
jge
pop
into
xchg
pop
test
loope
pop
jl
mov
sbb
xlat
push
mov
leave
push
addr16
adc
adc
lock
movsb
push
inc
jo
sbb
cmp
das
rorb
ret
pop
xchg
push
push
or
sahf
jp
xchg
insl
xchg
add
cs
xor
mov
adc
ret
mov
test
sub
sbb
test
popf
sbb
cmove
push
xchg
or
movsl
cmpsb
mov
push
push
pop
and
dec
mov
daa
or
movsb
decb
mov
rcrb
sbb
mov
push
mov
pop
or
jl
insl
dec
jecxz
add
add
clc
test
loopne
aas
jb
jo
pop
mov
jge
repnz
and
pop
movsl
lahf
dec
ret
mov
das
fwait
hlt
dec
dec
bnd
aas
lds
push
std
cmp
mov
and
repz
popw
aad
pop
mov
or
shlb
mov
cmp
mov
out
lods
test
mov
xor
jl
inc
movlps
inc
xlat
dec
mov
mov
push
out
jle
pop
insl
data16
mov
xorb
dec
aad
sub
dec
push
in
add
cmp
or
arpl
mov
lret
pushw
in
icebp
xor
shrl
imul
ss
lret
into
lock
xlat
sub
cmp
jo
or
push
dec
push
cmp
outsb
pop
cmpsb
inc
mov
test
mov
xor
dec
dec
adc
cltd
jg
in
jle
pop
cmpsb
les
leave
sbb
std
in
add
mov
enter
cmp
xchg
mov
fmul
lea
fildll
imul
mov
adc
stc
or
imul
popa
mov
jae
lea
leave
das
push
cli
stos
mov
adc
popa
jmp
stos
sbb
into
pop
test
adc
test
dec
je
outsl
lock
mov
push
xchg
dec
int
and
insl
in
dec
insb
inc
add
fcomps
int3
inc
jmp
add
adc
jmp
cmp
frstor
rcr
int
add
adc
lds
daa
mov
push
jg
dec
push
push
xlat
fcomi
or
mov
mov
or
lret
in
dec
lds
frstor
xor
cwtl
repz
mov
add
jle
add
sbb
icebp
imul
sub
cmp
fwait
xchg
and
notb
jno
inc
cmp
jne
mov
jecxz
pop
xor
mov
loope
add
inc
or
pop
loop
xor
in
arpl
mov
mov
cld
push
adcl
and
cmp
repz
pop
fs
outsl
fdivrl
cmp
push
je
jnp
rcr
xor
inc
pop
nop
test
fcmove
sarl
adc
fisttps
call
push
add
jno
or
iret
mov
aad
into
icebp
fs
rcll
shlb
sub
or
imul
cs
inc
sub
xchg
add
jmp
pop
xadd
addb
cwtl
mov
adc
sahf
jo
push
sti
sti
sub
lds
add
push
imul
cwtl
loopne
flds
lock
and
popa
dec
subl
fcomi
aas
ret
push
adc
jp
es
push
loop
int
mov
es
into
add
loop
mov
mov
lcall
mov
jecxz
popa
ret
pop
dec
mov
inc
push
adcb
inc
repz
stos
cwtl
push
inc
ljmp
or
inc
xchg
mov
lods
cmp
cmc
mov
cmc
pop
adc
push
cmc
lret
fdiv
movsb
addr16
insb
shll
sti
pusha
fnstsw
popa
lahf
into
pop
adc
or
push
pop
add
dec
decb
add
outsl
fwait
popa
sub
scas
mov
jne
mov
add
pushf
shll
mov
cmp
mov
lcall
jo
mov
mov
jmp
fistpl
outsb
mov
shrl
xorb
in
loop
loopne
outsb
ds
fld
pop
mov
aad
inc
ret
sub
xchg
add
push
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
into
lods
and
std
and
int
bound
lahf
push
mov
jnp
lret
or
sbb
shl
mov
mov
xchg
rcr
pop
push
inc
adc
cwtl
sub
push
xchg
jno
or
imul
sbb
push
addr16
enter
mov
mov
test
mov
sbb
pop
rol
or
inc
sbb
adc
pop
pop
aas
push
and
int
xor
fisubrl
insb
dec
jmp
cmp
fcomps
jle
out
out
inc
fmulp
pushf
in
jae
pop
popa
test
mov
cmp
subb
fcomp
hlt
addr16
push
sbb
fsubrl
cmp
lea
mov
and
mov
cmp
add
inc
lods
mov
stc
std
push
or
mov
or
xchg
mov
cmc
inc
cmp
fidivrl
cs
insl
push
test
movsb
or
adc
js
stos
int3
sub
adc
dec
popf
scas
cmp
push
loopne
in
and
icebp
and
enter
mov
and
sbb
dec
xchg
movsb
fisttpl
out
push
cli
outsb
fwait
nop
pop
pop
iret
es
jge
jnp
push
cmpsb
cmc
das
inc
mov
pop
sbb
add
movsl
sbb
mov
jns
sbb
stc
inc
inc
xor
xchg
mov
cmp
mov
outsb
frndint
movsb
cmc
in
or
in
out
mov
inc
js,pt
ror
mov
lret
call
js
inc
flds
in
cs
or
add
ds
push
lds
xor
adc
adc
xor
push
and
inc
dec
jb
or
shr
add
cmp
aam
or
or
xchg
push
and
popf
cmpsb
or
lret
push
jl
adc
arpl
add
insl
jg
adc
dec
sub
or
mov
mov
inc
and
dec
leave
ror
or
sub
loop
nop
mov
cmp
outsl
or
sub
mov
es
pop
push
data16
inc
xchg
sbb
lcall
ffree
jo
or
aaa
jb
inc
xchg
std
mov
fndisi(8087
and
inc
es
sub
mov
test
loope
and
push
repnz
add
in
in
xor
push
cmp
lret
in
testl
push
imul
and
mov
ja
pushf
xchg
push
lcall
out
dec
or
orb
and
and
sbb
clc
inc
rcll
jno
push
mov
imul
movb
pop
push
ret
push
mov
push
mov
int
inc
xchg
test
dec
ds
fisubrl
subb
or
cmp
outsl
jno
cmp
pop
call
data16
mov
xor
cmp
or
adc
lods
jne
movsl
adc
cmpxchg
sarb
inc
xlat
xchg
dec
push
sbb
ret
xorb
bswap
pop
test
mov
cld
xchg
out
cli
jp
mov
xchg
push
jnp
je
mov
leave
cwtl
and
nop
mov
insb
push
mov
xchg
mov
rclb
insb
lcall
or
mov
sub
cmp
mov
incl
mul
push
int
push
jbe
jbe
ficoms
add
xor
jno
jp
mov
jbe
cli
jmp
in
adc
loope
xor
or
xchg
lret
adc
loop
jp
hlt
mov
loope
xchg
or
ljmp
adcl
outsb
xchg
lea
out
cmpsb
or
addr16
cmp
fbstp
iret
sub
jle
int3
cmp
int
mov
call
push
pop
mov
inc
push
xchg
mov
xor
push
jb
shl
xchg
addr16
aaa
push
push
lret
loope
xchg
iret
sub
fwait
xchg
in
fnsave
in
mov
jo
leave
repnz
jo
push
xchg
cmp
fistpl
enter
pop
loop
mov
sub
cwtl
dec
shrl
mov
or
pop
jnp
or
mov
inc
pop
loop
sahf
imul
adc
push
pop
sub
mov
add
and
addr16
sbb
add
dec
in
push
adc
xor
in
mov
push
mov
neg
or
test
pop
xchg
push
in
sbb
xchg
dec
pop
or
or
and
jg
decb
dec
xlat
xor
or
mov
call
and
in
mov
xchg
or
ds
jg
stos
xchg
xchg
pop
out
lods
into
jae
in
push
xor
aam
fdivs
jbe
push
mov
popf
neg
lret
jg
lods
adc
addb
mov
add
lahf
and
adc
out
add
sbb
xchg
push
stc
ljmp
or
insl
movsl
cmpsb
mov
rcrb
mov
and
or
movsb
push
fsubrl
stos
xor
xor
lds
sbb
stos
sbb
xor
push
imul
jne
cmp
les
es
xchg
xor
and
and
xchg
out
lret
jge
mov
lock
sbb
shlb
loopne
cmpl
ds
lods
dec
out
pop
mov
mov
push
aaa
push
test
nop
cld
cmpb
jp
call
adc
inc
xor
add
fistpll
pop
repz
pop
add
add
mov
fsubrs
lea
mov
pop
inc
insb
gs
jle
ljmp
or
cmp
xor
rorb
fbld
sti
xchg
push
mov
out
sub
imul
xchg
nop
enter
xlat
jnp
or
pop
xchg
dec
cmp
pop
pop
xchg
imul
sbb
filds
push
cmp
outsb
or
sti
fs
and
cwtl
sub
push
lock
xor
or
push
lods
lods
xor
daa
sti
adc
subb
dec
ljmp
nop
out
dec
pop
xchg
mov
dec
sbb
xlat
dec
add
cmp
adc
mov
daa
cmpsl
mov
insl
sbb
sti
mov
fdivr
pop
test
ret
xor
ss
add
sbb
js
push
jnp
and
xorl
negl
jl
in
xadd
stos
fimull
jle
or
dec
cmp
inc
ds
gs
movsl
xchg
mov
mov
in
mov
pop
xchg
lahf
and
add
std
aas
xchg
sbb
popf
mov
push
leave
mov
dec
jo
jns
std
addl
rclb
inc
mov
dec
iret
push
aas
sub
js
dec
scas
imul
push
cmp
xchg
loopne
inc
mov
mov
jle
jbe
add
stos
jmp
and
mov
ret
xchg
int
iret
addl
jmp
xor
cmp
ja
fs
xchg
xor
mov
rolb
cmp
mov
push
mov
aad
jmp
mov
fmull
lds
nop
pusha
and
dec
lods
arpl
and
dec
cltd
push
ret
call
daa
subl
repz
push
pusha
test
cmp
sub
xor
adc
and
shlb
jecxz
imul
push
subl
pop
inc
dec
mov
imul
pop
push
push
cs
out
cmc
push
icebp
mov
mov
sub
lock
xor
add
fidivrs
sub
cmpsb
cwtl
mov
pop
xchg
aad
sbb
data16
popa
push
or
daa
decl
push
and
sbb
fwait
fs
les
pushf
incb
mov
test
ror
int3
jmp
pop
mov
mov
adc
cmp
dec
ljmp
xchg
arpl
jnp
repnz
or
sbb
std
pop
ds
ljmp
inc
jmp
cmpsl
pop
inc
sub
lahf
cmp
cltd
in
femms
test
jg
ret
xlat
rclb
push
jne
mov
xor
lret
dec
mov
cmp
fsubr
sub
xchg
jle
ja
mov
aad
in
ret
add
out
xchg
clc
sbb
cwtl
xlat
adc
pusha
add
dec
or
popa
iret
lods
fidivrl
stos
pop
test
push
push
or
push
leave
add
ret
pop
clc
xchg
or
mov
mov
out
sbb
dec
or
or
add
cmp
testl
fwait
mov
cmp
fcom
dec
call
fimuls
ljmp
adc
inc
repz
movsl
xor
push
jne
imul
rolb
pop
fmulp
in
or
in
xor
out
adcb
add
jmp
xchg
sti
and
cmp
cmp
xor
cmc
or
fnstcw
mov
push
das
cmp
inc
das
cld
inc
fildll
aad
mov
dec
shlb
movsb
mov
pop
arpl
xchg
mov
jns
gs
mov
leave
dec
push
xor
jne
xchg
jge
push
and
jo
jp,pt
dec
scas
imul
bound
push
xorb
ja
sbb
cmp
sbb
and
rorb
mov
sub
mov
push
sub
mov
sti
popf
adc
scas
std
xchg
xchg
mov
insl
pop
subl
out
nop
add
loop
sbb
or
es
adc
test
adc
ss
jae
mov
inc
aad
mov
jge
sbb
ss
push
movsl
lcall
xor
in
in
mov
and
mov
sbb
iret
push
call
push
push
mov
shll
sub
dec
cwtl
adc
enter
xchg
mov
sub
aas
gs
pop
aam
jecxz
dec
inc
nop
and
mov
mov
xchg
fwait
adc
dec
cmp
inc
mov
inc
push
and
jecxz
cmpsl
cmp
mov
xchg
push
jle
sbb
or
popf
stos
out
rorb
cmpsl
daa
and
and
fmuls
mov
dec
jns
enter
shlb
fbld
nop
leave
sarl
loopne
push
cmc
arpl
dec
out
pop
outsl
add
xor
shl
icebp
negl
sbb
inc
out
dec
mov
cmpsb
adc
imul
insl
cmp
nop
jmp
mov
cmp
aam
cwtl
mov
jle
hlt
repnz
stos
xchg
xor
repnz
lcall
mov
xchg
test
cmp
jne
js
mov
fisubl
dec
shlb
cmp
data16
daa
ret
adc
sub
outsb
pop
xchg
out
dec
fs
dec
cmp
mov
jb
out
jb
out
pop
xchg
cltd
cmpsb
in
pop
sbb
ja
jge
mov
cs
xor
rcrl
inc
pop
xchg
jp
mov
jge
in
xchg
xor
xor
xor
cmp
mov
out
daa
mov
fcompl
inc
fbstp
sbb
adc
adcb
and
mov
insl
mov
lds
das
sub
xor
bound
push
push
push
stc
pop
aam
ds
mov
mov
adc
push
mov
mov
jnp
push
xor
inc
sbb
out
mov
mov
das
ljmp
iret
add
jl
js
lds
xchg
and
jg
and
lfs
lret
mov
outsw
dec
test
sbb
jecxz,pt
inc
or
test
sbb
cli
jl
addr16
cmp
pushf
inc
adc
pop
cltd
dec
loopne
sub
and
outsl
sub
je
rcrb
dec
add
jge
aaa
movsb
inc
insl
jge
push
mul
ret
cmp
sti
mov
or
and
gs
jl
outsl
fmul
push
lods
icebp
jl
lcall
xchg
pop
push
add
sub
xlat
stos
dec
and
mov
pop
jecxz
repz
or
out
aas
add
stc
cmp
jmp
ret
xor
sbb
gs
mov
mov
pop
sbb
xchg
inc
lcall
sub
shrb
mov
and
add
and
mov
stc
and
rcr
out
scas
push
imul
and
js
cmp
adcb
pop
fcmovbe
mov
aas
fcoml
sub
test
xor
dec
xchg
daa
xchg
push
data16
orb
shlb
imull
xorl
rolb
sahf
ljmp
shl
in
sub
ret
sub
jl
mov
pop
inc
mov
jo
xchg
call
mov
div
xchg
mov
in
mov
sub
push
repz
pop
flds
add
or
mov
sahf
pushf
add
cmp
adc
bound
inc
fcoml
pushf
and
aas
xor
sub
push
dec
add
sarl
pop
enter
ret
push
fisubl
xor
adc
out
mov
jb
push
into
cmp
push
push
add
adc
mov
lahf
adc
mov
dec
xor
sub
insl
and
push
mov
sub
sbbb
dec
dec
sub
add
lret
push
je
addl
in
sbb
add
inc
lcall
pop
xor
xor
fcoms
sub
or
mov
sbb
cmp
cmc
pop
lret
bound
inc
add
jno
ds
aas
jae
in
push
mov
mov
cmp
lret
xlat
insb
inc
dec
lahf
push
mov
push
sbb
jne
xchg
jg
pop
stos
ret
mov
jbe
pop
sbb
pop
cmp
dec
push
adc
add
inc
sub
lahf
push
mov
xchg
adcl
cmp
sbb
mov
add
push
or
push
adc
xchg
daa
add
xchg
sti
cwtl
cmc
or
loop
push
jmp
sbb
movsl
orl
nop
popa
cli
pop
mov
out
jge
cmp
xor
mov
jb
outsl
gs
mov
mov
xchg
add
arpl
pop
test
sub
xchg
push
inc
lret
aaa
pop
lahf
cwtl
and
push
cwtl
mov
in
addr16
sub
je
jl
push
mov
mov
jle
subb
mov
dec
cmpsb
mov
jbe
mov
sub
out
cmp
repz
adc
sti
mov
cmpsl
insl
pusha
cwtl
movsb
jmp
xchg
fwait
mov
in
fs
in
mov
xchg
sub
xchg
je
jg
pop
andb
inc
ss
sbb
decb
xchg
dec
enter
mov
sub
mov
cmpsl
in
add
lahf
cmpsb
int3
push
call
cmp
into
inc
orl
or
nop
pop
push
pop
or
and
cltd
or
jp
out
std
clc
sarb
sbb
adc
jbe
sbb
lea
insb
sub
test
or
ret
popl
lea
mov
mov
sub
pop
dec
xchg
pop
insb
and
lret
sbb
lcall
dec
ret
jae
in
mov
out
aad
ss
psubd
mov
jno
jbe
jae
inc
mov
inc
pop
mov
push
js
rorl
fsubs
fidivl
gs
sbb
test
sti
mov
popa
aaa
xchg
dec
popf
mov
dec
out
xchg
jle
cmp
pop
mov
or
adc
insb
push
ret
std
cld
dec
adc
cmc
ss
sub
lcall
ss
jge
loopne,pt
push
in
fisubs
das
leave
arpl
pop
dec
mov
add
shll
sub
in
mov
sbb
xor
xchg
clc
mov
test
or
mov
sbb
repnz
sbb
fbld
mov
imul
imulb
repnz
leave
mov
and
lods
cld
pop
xor
sbb
gs
add
rcl
and
cmp
xor
movsl
or
mov
and
call
fsubl
rcll
jnp
je
int
push
jne
scas
shll
lock
xor
mov
dec
insb
mov
mov
or
dec
pushf
sbb
mov
pop
xor
or
jae
sub
jle
scas
inc
ror
push
lods
xor
test
jb
das
jnp
pop
pop
mov
push
jbe
dec
xchg
xchg
out
cmpsl
jmp
jp
js
testb
xor
cmc
addb
xchg
jp
stc
mov
mov
jmp
jl
test
sbb
inc
adc
cmpsl
xchg
mov
mov
mov
lahf
sbb
adc
movl
cli
sahf
out
sbb
sub
jb
les
dec
jl
call
jbe
ret
aaa
fcmovnbe
fdivp
jp
and
scas
out
popl
dec
lock
aas
mov
sbbb
xor
push
mov
cmp
aas
imul
add
adc
lds
cmpsb
jb
dec
aaa
xor
es
cmp
pop
cmpsb
push
nop
xor
xor
lds
pop
cli
cmp
addr16
mov
xchg
test
adcl
mov
mov
imul
or
cmp
push
ss
fnsave
iret
inc
pushf
and
addr16
js
inc
icebp
aas
ret
mov
test
cmc
xchg
es
mov
inc
jae
scas
or
sbb
stc
lea
paddusb
rcrb
out
lock
mov
pop
mov
pop
popf
sbb
add
adc
int3
imul
mov
out
inc
cmp
and
mov
sbb
enter
or
ret
ret
fcmovnb
push
mov
dec
adc
or
jns
inc
mov
xor
pop
mov
xchg
int3
xchg
inc
popa
xorb
lds
push
lds
iret
push
mov
lds
mov
xor
mov
push
ds
popf
push
loop
cmpb
xor
xchg
mov
jge
aad
pusha
fimull
sub
in
mov
mov
scas
hlt
inc
clc
mov
mov
pop
imul
mov
popa
fwait
mov
fildl
repnz
pop
out
push
cmpsl
les
sub
movsl
aad
push
pop
in
loop
jg
sbb
mov
nop
jne
fnstenv
push
fwait
cs
pop
dec
inc
and
dec
dec
lds
lds
loopne
push
popl
insb
push
pop
mov
mov
fcomps
pop
leave
dec
mov
sti
lahf
sbb
aad
inc
inc
adc
xchg
pop
pusha
xorb
mov
pushl
dec
push
clc
sbb
or
push
jge
jle
cltd
xor
sub
shll
movsb
stc
repz
out
xor
sub
lods
or
xchg
fldenv
shlb
cmc
cmpsb
mov
and
scas
loope
in
icebp
cmp
movsl
dec
and
jg
mov
pop
jb
mul
jp
adc
xchg
cmp
test
jg
ds
mov
aam
mov
jno
sub
xchg
xor
inc
movsl
add
mov
xchg
xchg
fistps
xchg
insb
lods
stc
jle
add
gs
cmpb
mov
cmp
out
inc
xchg
inc
dec
es
sbb
lods
adc
pop
icebp
xchg
aas
xchg
xchg
clc
mov
js
pop
lret
popa
sub
mov
cmpsl
movsb
mov
jb
sub
outsb
addr16
scas
shl
rcrb
cmp
xchg
leave
movsl
adc
lcall
out
paddsb
in
sub
icebp
add
repnz
mov
fistpll
orb
mov
arpl
pop
dec
jnp
call
scas
iret
cmp
sub
inc
jno
pop
iret
xchg
cmp
add
dec
xlat
cwtl
popf
adc
fwait
imul
jo
pop
hlt
jnp
orb
sub
ficoms
jbe
add
leave
lds
jl
jno
out
jne
cmovg
mov
sub
fisttpll
dec
xor
sub
popf
loope
jmp
inc
cld
or
push
adc
jb
add
inc
out
mov
add
push
push
mov
xchg
subl
inc
clc
fstl
stos
dec
popf
ret
jp
sbb
inc
testb
xchg
xlat
movsb
bound
in
and
xor
out
data16
push
lds
into
push
sbb
pusha
mov
mov
sahf
sbb
xlat
lret
sbb
shrl
inc
sub
aad
cmp
lret
repz
cmpsl
or
mov
lahf
mov
inc
mov
jg
xchg
lret
andb
dec
arpl
pop
rolb
adc
xlat
adc
dec
loopne
aam
shll
popa
push
imul
add
and
mov
cltd
dec
aad
test
cmpl
fnstcw
add
int3
hlt
fidivrl
ds
jae
cmc
dec
sbb
cmp
out
test
lds
cltd
imul
or
mov
fs
in
ficomps
push
push
ret
fstp
mov
xor
mov
call
neg
pop
movsb
pop
add
gs
test
mov
int3
pop
mov
or
leave
mov
call
in
adc
pop
xlat
fstpt
push
fadds
rorb
mov
fs
add
jne
lret
into
and
fiadds
xchg
fwait
mov
dec
inc
outsl
movsl
roll
daa
stc
and
std
push
push
inc
xchg
loopne
addb
mov
adc
or
jae
imul
xchg
sub
mov
call
push
dec
pop
cmp
push
je
or
mov
sub
adc
cmp
negl
cmpsb
adc
mov
sbb
or
dec
arpl
or
cmpsb
ficoms
lods
loopne
cmp
insb
iret
mov
inc
push
call
ss
or
pop
mov
inc
jae
ficompl
inc
pop
or
test
inc
fimuls
push
aam
inc
popl
rclb
cld
xor
call
xor
insl
push
add
add
cmp
lret
pop
or
and
push
mov
insl
push
push
cmp
pop
xorl
iret
dec
rcrb
shr
push
mov
es
subb
loopne
mov
mov
shll
jle
aad
sbb
mov
addr16
and
sub
xor
jp
mov
jecxz
fldcw
mov
jecxz
add
xchg
sub
cmpsl
insb
jb
inc
dec
add
aad
push
pop
stos
repz
out
mov
lds
in
push
div
aas
icebp
dec
jge
dec
stc
xchg
mov
sti
test
rolb
test
fistps
adc
cli
scas
call
stos
dec
out
ret
or
loop
sti
daa
out
cmp
push
cmpsl
int
in
xor
inc
cmp
out
in
ss
xchg
into
add
mov
jmp
test
enter
ret
nop
insl
int
xchg
mov
loope
into
mov
sub
dec
and
sub
mov
inc
pop
jge
gs
fbld
inc
and
or
xchg
stos
pop
mov
pusha
push
dec
xchg
dec
test
dec
adc
sub
test
clc
sti
mov
sub
imul
jbe
push
int3
mov
sbb
into
movsl
push
and
mov
lods
push
sub
add
repnz
rcr
sbb
push
test
imul
adc
add
stos
mov
leave
fwait
mov
mov
jno
mov
and
mov
enter
push
ljmp
xchg
scas
sbbb
xchg
and
cmp
in
test
xor
fidivs
xchg
loopne
cmpsb
push
nop
insl
and
movsb
shll
push
daa
mov
add
stos
push
and
fst
stos
jnp
dec
lret
stos
lods
lahf
movsb
sarl
mov
pop
rcr
or
push
jge
sbb
lret
jne
daa
enter
pop
push
pop
fildl
mov
mov
xorb
and
mov
pop
ret
scas
or
inc
movsb
loopne
dec
je
cmp
insl
mov
lahf
cmpsb
fwait
sub
or
push
cmp
inc
lret
outsb
in
mov
orl
push
push
out
adcb
xchg
jae
jg
int3
int3
sub
cld
in
jb
xchg
pop
out
xchg
add
fcompl
ljmp
cmpsb
insb
lods
push
gs
adc
and
cli
xchg
pushf
fs
ss
mov
mov
mov
dec
pop
inc
sub
mov
rolb
je
out
push
aaa
fldt
push
cmpsl
xor
push
cmp
decl
mov
inc
pop
adc
inc
sub
pushf
push
repz
rcrl
les
adc
pop
dec
add
in
inc
fnstsw
mov
ret
inc
jno
sbb
fwait
jmp
push
adc
xchg
dec
xadd
icebp
mov
stc
or
popa
and
mov
jne
xchg
nop
or
cmp
sub
enter
in
add
mov
cmpsb
dec
rcrl
add
out
inc
inc
shrb
push
dec
add
mov
push
mov
jg
scas
cmp
push
fistps
xor
pusha
mov
cwtl
add
les
ret
addl
int
clc
xlat
pop
xor
add
mov
loopne
cmp
fwait
push
lcall
mov
push
out
dec
shlb
ret
cmp
ss
ja
insb
int
movsb
mov
cmp
repz
fildll
adc
rorl
inc
test
adc
lret
lahf
mov
dec
mov
loopne
inc
push
jecxz
xchg
pusha
or
cmc
mov
pop
fucomp
ficoms
imul
lcall
cli
dec
lods
adc
sub
sub
sub
outsw
cmp
mov
pop
mov
xor
or
jecxz
addr16
fisubrl
aaa
xchg
mov
shl
inc
imulb
mov
jecxz
or
fwait
div
mov
ret
and
hlt
fldt
ret
jl
dec
ss
mov
sub
mov
xchg
mov
aad
jecxz
adc
lret
cmc
sbb
pop
mov
xchg
sub
or
sub
push
mov
js
je
push
in
idivl
shl
cwtl
push
or
xor
orb
jno
xchg
lock
adc
aaa
cltd
adc
mov
xchg
mov
adc
mov
cmp
sbb
dec
lea
mov
jge
sti
dec
cmpsl
inc
les
xor
mov
test
sbbl
ss
mov
and
xchg
scas
cmp
pop
flds
sti
pop
test
rcll
mov
or
cmp
aas
lock
sbb
add
in
jbe
pop
add
leave
shll
out
or
push
lret
test
mov
fdivrl
je
shrb
inc
jp
adc
xor
std
cmpsl
test
xchg
push
fs
std
mov
nop
mov
jnp
je
insl
shl
lods
cmp
sbb
or
test
in
mov
repnz
xor
and
mov
mulb
in
jbe
jbe,pt
mov
jp
sbb
mov
loopne
mov
popf
aam
out
int
xor
insb
mov
ljmp
jmp
push
cmpsl
inc
push
cmp
ss
lds
clc
dec
sbb
stc
inc
mov
push
mov
and
inc
dec
push
xchg
in
mov
jo
adc
std
outsb
stos
xchg
inc
aam
add
test
imull
push
or
pusha
repnz
cmp
cmovb
cmp
mov
std
lret
outsb
mov
cmpsb
sub
bound
in
sbb
in
jo
cmpsl
mov
rcrl
lea
fldt
mov
pop
inc
pop
aad
lret
inc
imul
adc
cwtl
sarb
std
jbe
sub
push
loopne
rep
ret
and
inc
repnz
sbb
mov
pop
mov
push
push
hlt
and
inc
outsl
and
daa
push
cmpsb
mov
or
jmp
push
lds
or
cmc
mov
xchg
out
sarb
pop
rcrb
and
xor
adc
lcall
push
cmpsb
cmc
jmp
out
in
fistpl
fchs
pop
mov
data16
jp
cmp
mov
inc
mov
adc
pop
sahf
les
rsqrtps
in
call
cmpsl
pop
adc
gs
dec
sub
inc
or
insl
dec
xchg
sbb
mov
pop
sbb
cmp
or
cmp
push
out
and
rep
push
je
cli
push
imul
cmpb
iret
inc
cs
rcrl
das
xchg
adc
dec
pusha
sbb
cmp
lods
sub
fistpll
jb
fndisi(8087
mov
jb
les
xchg
or
daa
stc
testb
lret
xchg
cmpsb
mov
testb
pop
xorb
inc
sbb
add
popa
jb
clc
dec
cmpsb
fbld
jb
jge
cmp
and
jge
sarl
sti
sbb
lods
xchg
jle
add
cmpl
repnz
mov
sub
mov
xchg
loop
int3
jecxz
stos
pop
stos
aaa
inc
addr16
xor
jecxz
movsb
les
mov
repz
or
das
fwait
inc
sbb
add
fwait
adc
or
sub
out
in
aas
sub
fsincos
loopne
test
test
and
divb
xor
sub
ss
cld
pusha
mov
dec
loopne
call
roll
popa
mov
sti
adc
data16
dec
inc
mov
aaa
pop
ljmp
insb
sbb
inc
stc
jle
sub
test
pop
insl
testl
out
ja
test
lea
imul
push
adc
mov
jns
sbb
lret
icebp
and
faddl
and
cmpsl
push
jno
push
leave
inc
cmp
or
fucom
dec
pop
pop
dec
in
decl
scas
xor
jecxz
adc
fdivrs
sbb
movl
js
sbb
mov
jbe
jmp
testb
negl
mov
jecxz
sub
mov
test
movsl
inc
out
mov
xor
mov
insb
out
and
pop
dec
cmp
xor
and
mov
sub
mov
push
mov
jo
outsl
int3
mov
les
xlat
shlb
ljmp
dec
add
inc
test
imul
xor
and
cld
xlat
popf
sbbl
cld
icebp
push
xchg
and
jg
adc
or
sub
xor
and
adc
adc
imul
in
pusha
and
int
and
dec
icebp
or
sub
inc
data16
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
add
popa
int
bound
aaa
sbb
dec
out
cli
mov
stos
in
dec
popf
cmpsl
hlt
push
repz
shll
mov
pushf
ret
pop
addr16
push
movsl
sub
mull
pop
mov
cltd
mov
add
decb
push
das
push
jp
pusha
xchg
mov
sarb
pop
xor
push
cmp
leave
cmp
cmp
imul
mov
popf
lcall
js
into
lods
dec
inc
int
or
xchg
cmp
sahf
imul
mov
out
dec
stc
jp
push
xchg
ja
test
aam
icebp
mov
ret
das
jle
sahf
sahf
nop
push
sarb
xor
es
rorb
ja,pn
shll
sbb
cs
mov
cmp
nop
fwait
and
daa
repnz
sbb
pop
mov
push
arpl
lret
into
movsb
xbegin
sbb
jecxz
std
cmp
and
mov
sub
mov
cmc
inc
jg
outsb
mov
jp
pop
gs
push
iret
ljmp
xchg
roll
or
mov
add
lds
inc
dec
fdivl
leave
jecxz
stos
push
mov
repz
fidivrs
mov
mov
in
mov
mov
push
dec
cmp
push
in
mov
add
inc
push
pushf
sub
int3
mov
in
aas
cltd
sub
lcall
loopne
daa
ret
jmp
xchg
sbb
mov
lret
lret
stc
xor
jge
frstor
mov
cmp
pusha
shlb
ror
jp
enter
xor
mov
cmp
repnz
jae
popf
cmp
movsl
jno
mov
push
mov
stos
dec
imul
mov
xor
out
pop
or
sbb
xor
mov
mov
xchg
gs
je
fwait
decl
lds
aaa
shrl
sbb
pop
rol
sti
ja
stc
mov
adc
int
jle
loope
pushl
jg
or
mull
inc
inc
mov
fdiv
stc
adc
out
sbb
pusha
push
or
bound
std
and
dec
loop
lds
faddp
movsl
addl
adcl
movsl
mov
sbb
xchg
sbbb
std
movsl
and
into
sub
and
adc
or
in
in
pcmpeqd
lods
mov
xchg
ret
pop
test
adc
add
adc
aad
and
stos
div
sbb
push
gs
or
mov
lock
repz
push
sarb
lea
sub
sbb
xor
inc
inc
sbb
or
push
xor
rcl
xchg
test
nop
or
jo
std
mov
cmp
stos
gs
add
sbb
stc
mov
fisttpll
lcall
xchg
adc
rol
incl
imul
push
jl
push
adc
pusha
fucompp
fistl
mov
nop
xorb
mov
out
enter
out
push
arpl
and
push
pusha
pusha
or
ja
fwait
adc
mov
mov
xor
mov
aad
mov
push
fwait
pop
loop
pop
inc
cltd
imul
in
xchg
bswap
fnsave
jle
pop
shl
bound
mov
nop
push
mov
jmp
int
and
sub
inc
sar
out
push
shll
push
add
push
je
inc
sub
popf
lcall
dec
in
adc
xor
ds
push
jge
push
sbb
or
sbb
lock
sbb
xor
or
cmp
sbb
xor
sbb
xor
out
rcl
jle
sbb
push
dec
or
push
int3
jg
push
pushf
push
jl
jle
inc
fucomi
push
lods
fsubp
imul
aad
sbb
fstl
nop
fnstsw
cmpsb
dec
and
mov
ja
jne
jge
scas
push
fiadds
lcall
and
mov
outsl
inc
loop
data16
ror
mov
push
xchg
xor
gs
mov
scas
jle
sbb
leave
cmp
mov
out
in
adc
jecxz
add
hlt
xchg
xchg
xor
cltd
mov
imul
jbe
and
sbb
nop
lret
sbb
jge
xchg
js
add
cli
fstpl
mov
nop
pop
int3
repz
cmp
mov
xchg
jno
scas
adc
jbe
fwait
aas
mov
xlat
inc
sti
loop
js
aad
cltd
xor
or
push
mulb
ss
aad
inc
pushf
mov
or
pop
or
add
xchg
sbb
mov
insb
or
shrl
mov
out
xlat
fistl
sub
fists
or
push
loope
movsl
xor
add
in
and
cmc
xlat
enter
push
push
repnz
cmp
scas
dec
push
call
add
repnz
and
jbe
push
pushf
adc
push
data16
mov
pushf
repnz
movsb
arpl
addr16
int
pop
jle
leave
fsubrl
or
push
mov
push
pop
xor
mov
pop
cmpsb
jecxz
fwait
mov
bound
cld
ss
mov
sub
mov
int3
lods
sub
xor
mov
out
jnp
lcall
por
mov
mov
pop
test
push
cs
test
cmc
xchg
xor
repnz
dec
mov
mov
push
push
xchg
cmpsb
sbb
xor
mov
pop
gs
clc
dec
cmp
mull
pop
into
cmp
clc
and
xor
xchg
inc
scas
lods
fs
mov
dec
cmp
mov
mov
sbb
icebp
icebp
push
hlt
and
les
cmc
xchg
stc
jb
adc
mov
cmpsb
sbb
in
xchg
mov
fsubrl
or
loop
cs
xor
aad
jae
fs
dec
add
dec
mov
pop
push
sub
pop
pop
andb
jg
lock
ljmp
rclb
push
enter
les
das
mov
insl
popf
push
mov
jo
lret
push
stos
aas
xchg
outsb
scas
mov
mov
xor
shrl
xchg
mov
clc
cld
push
xchg
nop
mov
loop
cli
ds
inc
fiaddl
aad
test
cmpb
mov
cwtl
cmp
les
js
cs
sub
jg
mov
dec
xor
xchg
sarb
push
es
lret
jns
mov
cmpsl
pusha
sbb
fdivrs
punpckhwd
popf
xchg
xor
lds
and
stc
cmc
xchg
aas
js
pushaw
aad
mov
in
movsl
sar
mov
in
jl
sbb
mov
sbb
dec
shr
lahf
dec
mov
sub
out
jle
pop
int3
inc
push
rol
mov
dec
mov
out
out
repz
in
pushf
xchg
and
mov
dec
dec
mov
jno
imul
cmpsb
mov
mov
stos
leave
arpl
nop
in
lock
adc
shlb
sbb
push
mov
popl
fbld
pop
inc
xchg
das
lret
cltd
in
push
pushf
mov
lret
orb
dec
sarb
sbb
xor
dec
push
data16
and
in
in
sahf
sti
orb
lret
cltd
jo
loop
lods
jb
mov
popa
out
jmp
adcl
mov
xor
sti
cmp
pop
lcall
aam
stos
aad
add
lock
int3
cmp
push
adc
jbe
aad
dec
daa
pop
jno
pop
add
movsb
fisttpl
iret
in
jbe
mov
mov
push
sub
xor
fdivrl
aas
mov
pop
adc
fwait
mov
xor
jle
lcall
xor
xchg
mov
lea
repnz
fs
into
stos
stos
mov
pusha
repz
mulps
sbb
rclb
jnp
xchg
stos
pushf
inc
push
sbb
jae
insl
adc
shll
add
xchg
cli
jae
cmp
rcll
mov
stc
shlb
insb
adc
jno
aaa
mov
or
xor
adc
aas
xlat
mov
fsubl
xor
lret
dec
in
inc
pushf
data16
xor
data16
xor
push
sbb
sub
mov
rcrl
pushw
mov
or
ret
push
int3
out
xchg
sbb
add
sahf
shl
inc
adc
imul
sbb
icebp
push
push
push
sub
insb
int
jae
cmp
adc
adc
mov
fildll
outsl
and
sbb
cmpsl
je
imul
lods
or
dec
js
add
daa
ffreep
adc
mov
jg
xor
xor
les
scas
out
dec
notb
leave
jo
cmp
cmp
icebp
jmp
loope
xchg
xor
xor
and
add
rcr
jb
and
fnsave
int3
ret
test
jl
inc
xchg
mov
fildll
test
sarb
jne
lret
or
cmp
and
das
or
sub
imul
add
pop
xlat
pop
lcall
pop
mov
xchg
rolb
cmp
es
xor
sti
arpl
push
and
fstpl
jns
dec
and
push
jo
jbe
sub
pusha
mov
cwtl
cli
ds
repz
out
cmpsb
ficomps
shl
push
aaa
loop
sub
nop
mov
into
cmp
mov
mov
jp
mov
loop
test
dec
sub
test
enter
pop
adc
push
ret
dec
sti
and
inc
test
mov
jbe
and
fwait
ret
and
xchg
or
pop
int3
out
loopne
adc
xlat
mov
icebp
shrl
test
icebp
fs
mov
pop
inc
repz
jge
jle
xchg
sub
sbb
cwtl
nop
sub
loop
ljmp
mov
fldenv
or
or
insb
adc
sbb
arpl
addl
mov
xlat
ret
stos
mov
sarl
das
xchg
shlb
in
shrd
inc
xor
jns
ret
sbb
insb
nop
cmp
stos
jo
sub
push
outsl
push
mov
dec
rolb
dec
jno
mov
lods
fsub
loop
mov
mov
dec
aad
adc
std
jbe
xor
mov
das
not
int
cs
mov
pop
dec
into
out
and
pushl
xor
scas
popf
pop
pop
popa
mov
jp
repnz
xlat
inc
push
imul
adc
or
aad
or
jg
adc
fsubrl
inc
pop
jno
repnz
lds
sbb
mov
fmul
mov
movsb
mov
adc
ror
aam
mov
rclb
sub
mov
imul
mov
cmp
arpl
mov
aas
pop
xchg
mov
movsb
xchg
mov
stc
dec
jl
test
dec
jne
pop
inc
xchg
fwait
pop
sub
lods
dec
xchg
or
add
push
out
push
fsubs
fdivp
dec
add
repz
mov
inc
push
enter
push
mov
mov
subl
sub
dec
shlb
sti
jge
xor
adc
mov
imul
ss
and
popa
mov
std
and
inc
dec
outsl
fwait
mov
sub
addr16
aam
and
jbe
add
lods
out
and
xchg
mov
aaa
and
and
pop
push
outsb
mov
mov
inc
adc
ret
sbb
shl
add
fiaddl
insl
inc
pop
rolb
lcall
clc
lock
jg
sti
pop
js
mov
repz
push
mov
leave
jns
cli
push
sbb
insb
aam
dec
and
lret
das
ja
mov
jecxz
es
push
and
and
mov
popf
cltd
call
in
enter
push
cmpsb
out
arpl
fdivr
add
jbe
ss
cmp
lea
mov
aam
testl
lret
or
add
sbb
and
movsb
inc
pop
add
add
sub
push
incl
mov
sub
std
test
xor
inc
stos
lcall
mov
inc
mov
sub
aam
inc
cmp
mov
adc
xchg
in
pop
xchg
push
mov
and
insl
jl
mov
addl
out
inc
push
leave
jmp
or
popf
dec
divl
adc
pop
adcl
jge
fwait
sbb
and
mov
aas
jl
loopne
add
pop
lock
in
dec
push
insl
loop
iret
pop
dec
dec
lahf
sub
out
xor
push
insb
mov
cmp
mov
cmpsl
movsb
je
push
inc
mov
test
roll
pop
push
das
icebp
adc
ret
lret
iret
mov
out
xchg
pusha
lea
mov
xchg
movb
mov
pop
mov
jnp
add
xor
sbb
add
unpcklps
cmp
pmulhw
mov
imul
cltd
fsub
sti
sub
pusha
mov
adc
loop
outsl
mov
dec
push
outsl
int
and
mov
mov
xchg
js
sub
movsb
call
sbb
nop
loop
jl
or
and
outsb
sbb
ss
mov
stc
push
mov
into
out
insb
mov
lods
and
arpl
cld
inc
adc
push
adc
adc
jae
ss
xchg
push
lahf
pop
test
xchg
fs
mov
divl
outsl
jo
out
fdivp
into
filds
cld
fsts
jmp
mov
js
push
aaa
mov
aam
notb
das
add
addl
in
sahf
rcr
sbb
sti
xchg
gs
sahf
push
lret
add
lds
pop
ljmp
addr16
ljmp
aam
lret
je
or
mov
lea
mov
cmp
mov
and
or
or
cmpsb
mov
mov
xor
insl
popf
mulb
push
movb
jne
call
xorb
jp
inc
aam
loop
ds
mov
lods
rcrl
mov
mov
insl
sub
aam
sub
add
arpl
das
dec
rorl
mov
cmpsl
push
out
mov
push
mov
stos
xor
stos
inc
into
cmc
lret
nop
xor
icebp
fwait
int
xchg
add
lock
es
add
xlat
inc
test
aam
jns
push
xchg
pop
cmc
mov
sbb
in
es
gs
loope
in
sbb
pop
mov
in
scas
and
sbb
rorl
icebp
das
jne,pn
subl
les
pop
iret
inc
fmul
loopne
scas
scas
pop
inc
inc
shlb
mov
call
fwait
cmpsl
xor
shrb
pop
inc
jmp
xor
test
aaa
push
andb
movsb
loop
lahf
fsubs
adc
jo
mov
sub
in
pushf
mov
into
dec
add
pop
rclb
cmpsl
cmp
xchg
shr
test
in
std
mov
jmp
xchg
fnstenv
add
jge
out
icebp
cmpb
test
add
add
sub
pop
int
jbe
push
push
stos
xor
hlt
and
cmpsb
repz
xor
dec
gs
inc
ja
popf
inc
xlat
test
into
daa
sub
pop
lock
push
icebp
rcrl
mov
mov
jo
and
repz
push
inc
repnz
insb
or
xchg
jbe
sub
or
mov
lods
mov
adc
rcll
pop
pop
xchg
inc
push
mov
xchg
les
jae
inc
iret
enter
sbb
pop
xrelease
aad
icebp
mov
push
leave
pop
adc
andb
inc
push
and
xchg
adc
out
into
out
aas
or
xchg
aam
mov
sub
jb
pop
pop
or
cwtl
inc
icebp
notb
sub
xor
hlt
inc
add
push
pushf
je
aam
mov
adc
test
jnp
test
cmp
cmp
xor
call
dec
push
inc
xchg
cmpsb
mov
test
jae
imul
cmp
xchg
sbb
inc
pop
push
ja
aaa
daa
push
imulb
fcomps
xchg
jmp
in
dec
cli
pop
lock
cmp
loopne
jbe
and
dec
lahf
and
lea
add
sahf
fidivs
aam
cmp
mov
test
push
mov
outsl
dec
fnstsw
dec
les
pop
jns
f2xm1
in
lds
push
push
mov
and
push
xor
clc
sbb
push
fildll
mov
push
mov
sub
jecxz
xlat
aaa
mov
sub
or
hlt
pushf
xchg
aas
adc
and
mov
cmp
call
cmc
add
add
or
pop
push
add
and
cmpsb
hlt
cmpsb
xor
in
lahf
enter
adc
cmp
aaa
int3
stc
adc
sbb
ror
sub
dec
cli
cmp
cmp
shlb
lret
mov
jp
pop
jl
push
dec
inc
icebp
ret
mov
xchg
inc
dec
scas
pusha
jno
or
out
xchg
inc
mov
xor
and
dec
je
mov
jmp
xchg
arpl
int3
loope
out
jle
sbb
loope
and
inc
jecxz
in
cmp
xchg
js
add
inc
jmp
movsl
daa
jl
into
xchg
add
cmp
xchg
cltd
mov
adc
sbb
dec
cmp
mov
fnstcw
push
pop
jbe
xor
inc
outsl
movl
jge
pop
adc
in
cmp
roll
cmp
es
adcb
es
mov
test
mov
out
scas
cmc
jecxz
jge
dec
addb
out
rorb
aam
lods
cli
xchg
das
inc
cmc
sbb
add
out
das
lret
mov
test
out
inc
js
or
mov
test
sbbb
ss
scas
call
mov
cmp
incl
sbb
push
cmpsb
lcall
mov
cli
cli
ljmp
xchg
popf
and
jp
aaa
jno
push
pop
or
or
push
stos
xchg
push
add
or
xor
cli
in
xor
call
jns
imul
rclb
and
test
loop
jmp
gs
sub
psubsw
nop
cmp
or
or
dec
cmp
xchg
aam
sub
push
add
frstor
movsl
jge
dec
daa
fwait
mov
mov
in
jmp
cmpsl
mov
add
or
fcmovnu
cmp
insb
mov
fidivrl
test
hlt
call
inc
cmp
loop
and
mov
std
test
mov
and
stc
pop
xchg
test
jg
push
mov
loope
sahf
sub
adc
pop
inc
or
mov
sbb
jbe
cmp
cmc
gs
pop
jo
or
and
cmp
adc
sub
xor
dec
pop
lods
mov
scas
push
mov
jmp
pushf
xor
jo
pop
and
push
cmp
test
jnp
in
sti
jno
xlat
jg
stos
in
mov
xorl
adc
mov
sbb
fidivs
mov
and
decb
mov
les
pop
or
rcll
out
adc
push
sahf
std
arpl
jnp,pn
cs
push
das
mov
scas
popf
mov
addb
outsl
add
sub
mov
pop
mov
int3
in
bound
and
je
and
ficoms
ljmp
jl
and
xchg
mov
mov
lock
and
dec
decl
xor
lea
inc
xlat
lock
data16
mov
inc
call
mov
pop
lahf
fcmovu
mov
addb
adc
std
loope
insl
sub
inc
in
mov
dec
cmc
mov
jne
aaa
lret
or
pusha
adc
add
int
je
xor
jae
cmp
dec
mov
xchg
mov
mov
jnp
xor
arpl
cs
cmpsb
jno
aaa
lds
scas
add
inc
push
sbb
cli
hlt
cmp
xchg
inc
scas
data16
dec
rclb
cmp
subl
jle
stos
xchg
sarl
mov
pusha
mov
movsl
shl
mov
insl
pop
push
mov
mov
add
fbld
dec
cltd
aas
es
pop
sbb
mov
adc
push
lea
pop
jno
rol
fmuls
cmc
sub
mov
out
ss
loop
sub
or
das
or
or
add
push
inc
push
jl
lret
out
mov
push
mov
dec
xchg
into
into
das
sub
pop
push
mov
mov
adc
sub
ds
shrl
orl
rol
fcomps
dec
leave
movsb
jno
cmpsb
pusha
int
ret
out
jb
cli
pop
stc
fbstp
mov
stos
mov
or
pop
sbb
xchg
inc
mov
adc
jo
adc
adc
inc
aaa
xor
and
js
inc
mov
aaa
cltd
adc
push
cltd
insb
inc
push
das
mov
mov
jne
das
push
and
das
add
xchg
imul
sub
out
das
mov
xchg
xchg
cli
push
cs
in
xlat
mov
es
inc
push
shlb
iret
xchg
dec
fdivrs
cmpsl
xor
pop
push
add
sbb
mov
nop
mov
and
in
out
cmp
sub
add
aad
shlb
ja
sub
fimull
add
jo
dec
gs
mov
sub
mov
and
adcb
pop
dec
mov
insl
shll
dec
pop
enter
lods
sub
gs
rcr
sbb
jnp
in
sub
imul
adc
mov
es
mov
push
push
popf
add
ret
xchg
ret
out
push
out
sbb
stc
out
adcl
lret
movsb
xor
int
in
in
test
sub
xor
or
push
sub
sbb
insb
insb
sbbb
mov
test
sbb
movsl
or
mov
cmp
into
mov
out
mov
jne
add
push
das
xchg
or
mov
adc
push
lea
pop
xor
cmp
jo
call
cmp
test
xor
mov
adc
mov
movsl
push
pop
or
lcall
or
ret
leave
out
shlb
add
fstpt
es
roll
sahf
repz
stos
mov
xor
inc
push
daa
pop
loope
cmp
push
dec
push
ret
xor
sbb
sbb
fcomip
idiv
js
add
aad
cmc
lcall
inc
adc
inc
adc
rclb
sbb
add
push
push
add
cli
sbbl
adc
mov
jns
xorb
cmp
movsl
cmp
stc
int
call
xchg
andb
push
repnz
std
cmp
lock
stc
push
inc
adc
push
push
mov
gs
fsts
mov
call
testb
jle
pop
dec
pop
call
xor
in
cwtl
xor
daa
scas
add
daa
sbb
push
lret
sti
inc
push
dec
cmp
lock
jg
movsl
faddl
mov
inc
or
loopne
daa
inc
repz
dec
aaa
and
mov
mov
sub
and
push
cmpsb
daa
jmp
cli
or
lcall
loope
in
xlat
sbb
or
cmpsl
pop
insb
push
sarl
pop
roll
or
rcrl
popf
push
push
push
movsl
pop
outsb
clc
jge
add
lock
push
les
iret
testl
mov
mov
and
in
sarl
or
push
jp
mov
into
jnp
xor
xor
pop
and
and
sub
mov
mov
rcr
push
addr16
jg
icebp
pop
inc
lea
aam
leave
cmpsl
dec
cmp
add
lock
cmpb
and
push
mov
les
test
sarb
xor
lods
sub
insb
stc
andb
cld
rcll
dec
lret
mov
add
sbbb
hlt
jl
stos
into
icebp
jge
mov
loop
out
mov
inc
stos
mov
ss
lret
stc
decb
add
shl
jbe
subb
or
jge
mov
jg
push
rcll
pusha
aas
push
and
mov
fldt
sbb
inc
dec
xor
dec
mov
dec
dec
aad
xchg
push
pusha
or
inc
adc
fistpll
pop
movsl
popf
add
ret
add
insb
inc
mull
cli
sub
mov
pop
add
mov
mov
fucomip
js
cltd
movb
push
mov
ja
dec
fsubrs
scas
ret
rcll
sub
fyl2x
daa
dec
les
ficoml
mov
lods
andb
jmp
inc
mulb
cmc
or
stc
pop
mov
pop
push
adc
or
xor
es
and
popf
scas
dec
cld
add
addl
mov
mov
int
dec
sbb
mov
cmp
ja
pop
sub
push
mov
jo
pop
iret
je
fcmovnbe
inc
adc
jmp
xor
cwtl
xchg
dec
add
dec
out
aas
fisubl
push
jbe
xchg
lods
sahf
cmp
jno,pn
adc
fiaddl
inc
repz
or
dec
cmc
cs
test
push
jo
frstor
int3
les
cs
lret
aaa
push
out
pop
loopne
inc
testb
cmpsb
sbb
sbb
cmp
xchg
aad
sbb
cltd
cmp
lds
sarl
mov
jno
rclb
int
jns
and
js
mov
xchg
pusha
push
and
add
test
inc
dec
mov
ss
out
dec
dec
pusha
adc
pushf
adc
das
adc
jl
pushl
or
sub
sub
xchg
daa
mov
lea
lds
mov
push
loope
cmp
sbb
cmc
daa
lret
or
adc
cltd
lret
push
loopne
js
ja
ror
mov
ds
out
lods
popa
lcall
cmpsb
jno
pusha
sbb
fsubr
lahf
sub
cmp
add
jmp
call
mov
sub
pop
test
cwtl
addr16
mov
add
or
aas
neg
pop
emms
jg
pop
jns
test
mov
arpl
cmp
out
sbb
pop
out
leave
in
xchg
pop
mov
or
push
fiadds
enter
xorb
data16
and
lret
addl
cmp
jge
aam
scas
dec
dec
xor
jno
lds
movsl
scas
loopne
add
jge
jecxz
xor
jae
inc
mov
aad
into
incb
sub
jne
sub
mov
stos
in
ret
lods
mov
jno
jle
icebp
xor
out
ss
je
jmp
and
lea
pop
adcb
mov
push
cmp
movsl
fisubrs
in
stos
mov
ret
jle
sub
jecxz
inc
ljmp
cmp
addl
aam
les
frstor
ret
mov
and
insl
push
mov
sub
popa
inc
add
xchg
adc
test
pop
gs
jbe,pn
jl
lock
push
inc
xor
aam
push
js
mov
mov
cmp
cmp
lahf
repnz
fiaddl
cltd
pop
idivl
std
iret
stos
mov
mov
xlat
and
xchg
xor
rorb
dec
mov
leave
and
mov
mov
cmp
sti
stos
jp
test
inc
mov
push
mov
or
psubsw
lods
fwait
mov
fneni(8087
push
mov
je
outsb
and
mov
add
xor
insb
dec
repnz
repnz
jp
lods
orl
xor
subb
popf
rorl
test
inc
insb
xchg
out
mov
es
push
mov
pop
sbb
sti
cmc
mov
mov
pop
or
xlat
mov
or
nop
aaa
data16
out
sbb
pop
jl
insb
sbb
sbb
loop
push
sbb
in
jmp
mov
or
xor
jl
mov
sbb
lock
iret
xchg
shll
mov
cmp
push
repnz
pop
jmp
dec
cwtl
push
mov
inc
fwait
sahf
call
inc
loopne
or
or
adc
pop
fsubrs
sub
scas
int3
mov
fbld
dec
jae
test
mov
outsl
sub
xchg
clc
test
std
jae
xor
inc
arpl
mov
fbstp
jecxz
fwait
outsl
lods
mov
int
push
mov
pop
inc
adc
insl
dec
sbb
jecxz
add
scas
loop
mov
inc
aaa
adc
scas
aas
mov
inc
inc
jae
xchg
lret
les
dec
xchg
jmp
fwait
ss
dec
shrl
pusha
jae
paddusw
out
lret
push
mov
cmc
mov
and
adc
sub
imul
inc
inc
iret
fcmovnu
jno
repnz
inc
sub
arpl
xchg
and
push
add
sbb
dec
jle
movsl
clc
xchg
mov
and
cli
lds
cmpsl
fwait
testb
mov
push
xor
les
push
sbb
sbb
mov
mov
dec
mov
push
sbb
add
fwait
inc
xchg
cmp
movsl
pop
cltd
push
gs
jp
cwtl
and
fldenv
xor
out
cmp
xchg
cmp
cli
xor
es
imul
enter
ret
dec
pop
push
sarl
aaa
popa
loopne
or
mov
int3
sub
testb
fucom
mov
mov
and
or
mov
mov
jl
dec
push
inc
push
xchg
frndint
push
cs
jl
xor
inc
mov
enter
and
mov
pop
loope
or
aad
cwtl
pop
in
addr16
sub
nop
loop
rolb
push
scas
fidivs
xchg
in
pop
js
push
outsl
andb
pop
rclb
test
cmp
xor
sarb
imul
pushf
enter
fwait
pop
mov
lds
mov
data16
pop
jae
lods
loope
js
xor
push
daa
sbb
popa
dec
pushf
mov
xor
sbbb
out
cltd
push
sbb
stos
aad
pop
push
inc
jl
fistpl
mov
pushf
iret
xchg
int
and
inc
lahf
out
push
and
movb
inc
arpl
mov
pop
and
xchg
ds
je
push
jle
aaa
movsb
rclb
xchg
sbb
sbb
fsubl
xchg
dec
xchg
ljmp
add
jo
xor
std
inc
push
aad
pop
das
outsb
nop
movsb
sbb
imul
stos
inc
xchg
and
test
or
cli
or
xlat
xlat
add
out
cmc
int3
lods
xchg
in
shl
jmp
lret
bound
lcall
scas
dec
push
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
push
aad
test
add
outsb
push
or
test
adc
sbb
mov
add
insb
inc
push
jle
mov
xchg
pop
popf
sbb
mov
jge
sub
sub
and
repz
sub
sub
cld
mov
movsb
ljmp
repnz
inc
push
addr16
add
ja
shll
mov
mov
out
loopne
cmpsl
ret
mov
jmp
ss
jo
mov
mov
push
mov
adc
out
mov
stos
data16
pop
leave
in
push
icebp
push
test
movsl
std
lods
inc
push
aam
out
add
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
loopne
ds
shl
in
ja
add
lock
loop,pt
ror
pop
push
scas
add
jne
dec
pop
sbb
xchg
fdivs
les
lods
arpl
adc
out
mov
and
adc
adc
adcl
call
ss
mov
push
cmpsl
imul
ret
popf
pop
add
and
jg
fisubrs
js
push
adcb
mov
js
xor
loop
pop
jge
mov
lds
stos
dec
fidivrs
rcr
mov
out
mov
add
pop
sub
sub
addb
xchg
add
clc
mov
test
add
push
jnp
mov
pop
jl
add
cltd
mov
into
ljmp
push
test
arpl
js
mov
es
push
cmp
and
dec
ffree
mov
popa
pop
add
insl
cmp
jl
adc
jo
xor
mov
jle
push
lcall
mov
xchg
dec
sub
int
inc
rorb
pop
sti
aas
mov
sub
mov
inc
sbb
xor
adc
lcall
repnz
pop
jae
and
movsl
or
add
add
and
aam
aam
ljmp
je
stc
std
lahf
dec
mov
add
lods
add
add
adcl
das
stos
inc
cmp
mov
test
lahf
call
fcompl
lock
nop
jmp
inc
jns
push
in
mov
loopne
fldl
je
movsl
jmp
mov
leave
loope
cmp
inc
dec
jo,pt
loop
movsl
shrb
movsl
sub
cld
mov
les
popa
lods
cmp
jl
loop
xchg
in
jg
cwtl
adc
lret
sbb
or
scas
or
insb
fimull
pop
sbb
lods
clc
bswap
scas
and
pop
pop
xorb
push
jle
scas
mov
cmc
pop
pushf
pusha
lods
push
lret
dec
jle
sti
cmpsl
mov
dec
mov
pop
mov
add
push
lret
test
xor
subb
jecxz
jns
xchg
shrb
imul
lods
add
cmp
cltd
adc
lods
push
jo
xchg
loop
sub
mov
adc
mov
cmc
ret
popf
jns
lock
cmp
cltd
cmp
or
call
loopne
ss
ret
mov
xchg
sub
xchg
pop
movsl
sbb
movsb
jmp
aas
xor
push
sub
add
mov
mov
fs
stos
xchg
add
adc
int3
jnp
adc
push
add
out
lods
cmp
stc
stc
pop
adc
or
add
jp
ret
cli
cmp
jp
loop
and
inc
push
dec
pushf
test
aad
daa
jno
sub
mov
ret
or
mov
adc
insb
mov
je
xchg
mov
int
pop
mov
lods
push
pushf
stos
sbb
and
or
inc
mov
sub
push
sti
push
arpl
xchg
jnp
ret
aad
mov
mov
dec
movsl
out
lcall
push
dec
mov
fs
lods
push
lret
scas
sbb
xor
push
xchg
push
sti
dec
xchg
cmp
and
push
outsb
sub
arpl
fsubr
insl
inc
sbb
pop
push
xor
gs
aaa
push
bound
cmp
add
add
cmpsb
mov
pushf
xchg
sbb
xchg
imul
jmp
leave
frstor
cmpsl
addr16
sbb
jg
jnp
and
into
adc
mov
sub
and
jle
repnz
add
fs
mov
scas
movsb
xchg
cmc
cmc
das
mov
out
xchg
mov
aaa
movl
in
mov
fistps
cmpsb
aam
mov
lds
hlt
jbe
pop
insl
fisubl
xchg
push
addr16
or
in
nop
mov
pop
scas
mov
lahf
gs
jo
pop
std
test
lods
jmp
or
mov
mov
pushf
cmp
mov
ja
lods
xchg
jno
add
add
sub
das
jle
jg
imul
lock
add
add
iret
adc
jns
push
push
lret
in
push
add
repz
inc
sarb
loopnew
mov
lret
sub
add
repnz
nop
sbb
pop
sbb
and
into
push
sbb
adc
adc
and
jns
add
outsb
jns
std
sahf
add
sti
mov
mov
jne
xchg
mov
sub
pop
je
add
push
lds
jg
push
fbld
pop
jg
lahf
in
mov
loope
adc
int3
pushf
subl
jmp
loop
ficoml
or
cvtps2pi
xorl
add
add
add
add
and
mov
mov
ret
stos
add
lods
add
add
loop
xchg
add
loop
dec
cmpl
data16
addb
sub
xor
mov
aam
mov
popf
loop
popf
cmp
aaa
stos
rcll
adc
loope
push
cmp
inc
stc
adc
xchg
pop
lret
aam
xchg
fwait
xchg
sahf
xor
stos
fnstsw
dec
out
cmp
pop
test
xchg
cmc
jbe,pn
ljmp
loopne
call
insl
add
cs
sarb
in
fistpll
repz
dec
and
in
jbe
pop
jbe
push
mov
in
dec
stc
loope
repz
add
add
or
ret
lods
sub
mov
push
cmpsl
lods
add
lods
add
add
inc
jmp
movsb
pop
into
addr16
mov
jo
lret
sahf
adc
jo
mov
push
in
out
push
add
mov
push
shll
jmp
aas
xor
adc
pop
mov
pop
dec
idivb
cltd
in
push
pop
repnz
pop
push
and
and
addr16
das
add
scas
sbb
mov
mov
sarl
sarb
push
mov
and
mov
fadds
and
pop
xchg
and
push
or
shr
mov
sldt
add
fld
add
ror
outsl
clc
rolb
lods
add
lods
add
add
cmp
lods
insb
js
ja
mov
xchg
mov
xchg
cwtl
bound
nop
sub
movsb
inc
outsb
add
push
test
lea
andl
dec
sub
sbb
lods
aas
into
mov
testl
jg
loop
jo
js
stos
test
sbb
sbb
sbb
xor
add
lock
arpl
sub
cld
dec
cs
and
dec
or
movsb
fwait
or
and
xchg
dec
push
cmp
stos
cld
cs
ljmp
imul
loope
sti
or
clc
lds
adc
das
mov
inc
jg
loope
add
add
lock
out
repz
mov
ret
in
mov
lods
add
or
add
jge
fs
loopne
add
mov
add
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
cmp
xchg
add
lods
add
add
jb
or
out
pop
pop
mov
adc
jo
sti
pop
cmp
stos
int
call
fcomp
fistps
gs
sub
add
xor
subb
adc
loop
jg
mov
sbb
mov
jecxz
push
xor
repz
mov
push
sbb
mov
xor
rclb
mov
mov
hlt
in
xchg
lods
pop
or
loope
inc
ljmp
bnd
shll
filds
test
sub
outsb
out
add
add
mov
push
mov
xlat
push
and
push
daa
xchg
add
lods
add
add
xchg
fs
inc
sub
rol
inc
fcomps
sbb
sbb
mov
jecxz
negb
into
jmp
xor
or
pop
stc
aaa
and
repnz
cmc
jne
pop
rclb
jnp
sti
mov
int
pop
jne
out
mov
jb
leave
sahf
loopne
dec
add
or
ficoms
jp
adc
nop
cmp
pop
adc
and
jnp
adc
stos
mov
fcoms
test
xchg
loopnew
fstpt
inc
mov
and
mov
mov
dec
loopne
fists
jp
xchg
hlt
cli
call
inc
mov
jg
ljmp
push
rcll
add
adc
negl
dec
lods
inc
dec
sbb
push
lods
rorb
pop
into
out
jecxz
xchg
mov
add
orb
repz
pop
push
sub
ret
nop
jb
push
notl
gs
test
add
leave
push
push
ss
xchg
sub
adc
fadd
add
or
jb
hlt
dec
inc
dec
mov
lahf
and
es
aad
movsb
push
pop
movsl
pop
xchg
lret
jno
push
and
clc
push
mov
dec
les
mov
das
dec
pop
cltd
mov
cmp
mov
mov
popl
fcomp
add
jae
and
sbb
cmp
xchg
cmp
cmp
in
fimuls
js
mov
cwtl
add
lods
add
add
fstps
sub
push
push
sbb
xor
dec
xor
and
je
bound
cmp
push
popa
cld
mov
inc
cmpsb
xlat
jae
sbb
mov
xor
jge
js
dec
cwtl
adc
mov
mov
aas
sub
mov
shrb
or
fs
fstl
sbb
sbb
cmpsl
xchg
inc
fldcw
lock
rorb
test
sub
sbb
or
stos
adc
or
rorb
cwtl
lahf
js
mov
mov
push
repz
aas
out
ret
lea
jmp
mov
fisubrl
mov
add
mov
sbb
std
negb
sub
fisttpll
loope
cltd
add
lods
add
add
ss
or
jl
shrl
push
push
mov
out
orb
sbb
ds
daa
sub
lods
pop
sub
ja
movsb
adc
int
insl
mov
xor
pop
fimuls
xlat
ljmp
add
pusha
push
jg
sub
test
mov
push
fsubrl
sbb
xor
dec
xchg
in
adc
js
in
mov
mov
jno
enter
bound
dec
sbb
mov
bnd
xor
push
mov
sbb
js
inc
sldt
add
fidivl
xchg
mov
scas
fbstp
inc
mov
js
cltd
add
lods
add
add
and
sub
movsb
jbe
jle
js
cmpb
jecxz
lret
pop
fcompl
push
into
adc
cli
ljmp
xchg
fcomps
mov
push
push
mov
insl
cltd
sub
mov
mov
fbld
mov
lea
repz
push
add
sub
sub
dec
stos
adc
jb
push
jge
and
dec
ja
adc
jl
test
aam
xor
call
push
bound
pop
inc
jnp
mov
mov
mov
fcomp
adc
loop
xlat
fsubs
sbb
dec
in
fwait
scas
fdiv
pop
sub
sti
sbbl
add
pop
cmpsl
push
adc
in
addr16
popa
aad
xchg
inc
ja
mov
inc
push
stc
mov
std
and
fimuls
in
xor
inc
push
es
cwtl
in
mov
pop
enter
stc
daa
and
hlt
fsubl
cmp
dec
sbb
int
mov
mov
pop
and
jnp
sbb
pop
mov
out
aad
rclb
cmc
fstpl
push
lock
sti
out
andb
push
mov
jns
mov
fistl
adc
das
fistps
xor
cmp
ja
js
rep
adc
push
add
xor
jb
insl
xor
and
das
fwait
add
lods
add
add
mov
add
gs
repnz
test
loopne
fcmovbe
mov
enter
cs
mov
lods
xor
addr16
xchg
or
pop
push
push
repnz
movsl
aaa
icebp
sub
cmpl
adc
push
or
cmp
sub
jne
xor
sbb
mov
ja
in
fdivs
int
pop
sub
mov
jle
iret
jmp
push
dec
mov
jbe
jno
pop
movsb
cmp
lret
popf
dec
in
lea
pop
dec
pop
outsl
mov
xchg
xlat
ljmp
les
jp
mov
and
pop
lds
mov
add
add
push
add
mov
out
movsl
inc
movsl
fistpl
add
mov
fcomp
cltd
mov
data16
testl
aad
js
movsb
shlb
sbb
sbb
jbe
mov
add
mov
jne
add
fs
lods
cmp
jb
push
push
sbb
mov
fcoms
fs
xchg
add
xor
sub
or
lods
cmpsl
into
or
int
je
fmuls
loopne
pop
and
or
lret
xchg
pop
jge
cmp
orb
in
lret
mov
dec
lret
jecxz
shll
push
mov
push
dec
sbb
dec
movsl
lcall
jmp
repz
fimull
cwtl
stos
xor
add
notb
fbstp
dec
mov
leave
pushf
xchg
push
nop
loopne
cmp
mov
cltd
xchg
in
loop
insb
jo
out
sbb
sbb
dec
mov
push
les
cs
xor
test
cmp
stos
push
or
ret
xchg
loopne
mov
movsl
and
or
idiv
or
mov
aaa
cld
xor
mul
xchg
push
sub
clc
out
lds
jne
nop
ret
fstpl
addl
je
lods
int3
lock
add
cld
mov
or
rclb
pop
inc
pop
iret
pop
aad
ss
dec
xchg
dec
xchg
xor
add
je
test
cmp
pop
mov
popa
testb
into
sbb
push
mov
movsb
sbb
daa
in
inc
scas
and
pop
mov
and
ljmp
add
es
ja
mov
pop
fsubrs
fs
enter
inc
rorb
push
dec
outsl
add
jno
in
cwtl
aaa
push
repz
add
les
ljmp
dec
push
dec
cmp
es
ljmp
repz
pop
adc
fldcw
ds
in
hlt
mov
fstl
dec
mov
mov
add
cld
sub
pop
fistps
add
inc
mov
popf
and
pop
cwtl
popf
sub
sub
mov
mov
inc
popa
out
sbb
das
fwait
out
arpl
jnp
bound
cs
cli
inc
inc
mov
je
sub
mov
mov
lock
bswap
mov
icebp
xchg
movsb
xchg
lea
adc
xchg
les
xor
jb
sahf
sarb
jns
lock
adc
xchg
inc
fst
push
add
mov
bound
xor
cmp
cmpsb
jl
xchg
enter
mov
fisubs
clc
add
push
dec
outsb
jae
lret
jle
repz
clc
imul
add
gs
cmp
subb
jno
aaa
inc
lock
sub
xlat
nop
roll
inc
push
push
movsl
push
mov
out
sarb
pop
push
jbe
push
hlt
loop
scas
push
sub
jmp
inc
dec
sbb
stos
push
or
arpl
sti
xchg
xchg
aad
out
cmpl
popf
addr16
insb
nop
sbb
mov
and
test
pop
lahf
stos
test
mov
and
scas
mov
pop
xor
push
inc
pusha
mov
je
fnstcw
sahf
sub
loope
or
fistps
push
pop
cmc
adc
adc
mov
lds
aaa
lahf
add
lods
add
add
cmp
fstpl
push
movsb
shll
xor
daa
fcmovu
icebp
lret
enter
lods
cmp
arpl
sub
in
cltd
iret
or
xchg
xchg
inc
push
cmc
push
in
lret
inc
jmp
sbb
ljmp
ja
rol
notl
pop
js
popf
shrb
lea
mov
pop
in
addr16
adc
mov
loope
inc
sub
nopl
out
push
jb
pushf
mov
inc
pop
movsl
insl
jge
cmp
outsl
lock
ds
fsubrs
daa
lods
sbb
std
mov
cmp
mov
sar
test
add
dec
mov
xchg
sbb
scas
dec
xor
shll
adc
cmpsl
push
movsb
xor
je
imul
imul
imul
cmp
sbbl
sub
inc
das
stc
pop
mov
mov
xchg
cltd
ja
pop
cld
mov
aaa
leave
mov
lock
and
int
ficoml
cwtl
xchg
popf
jle
adc
pop
cld
jecxz
adc
imul
into
scas
cwtl
inc
xor
stos
mov
and
add
mov
imul
out
enter
ja
insl
push
mov
sbb
inc
xlat
and
aam
push
lock
cmc
das
sbb
xchg
iret
dec
lea
mov
add
inc
mov
es
inc
aam
icebp
aas
xchg
cmc
loop
sub
outsb
out
push
push
es
push
push
dec
movsb
inc
aad
fisttpll
dec
testb
mov
mov
and
xor
cmc
push
mov
daa
inc
int3
cmp
popf
cli
dec
stc
push
pop
lret
mov
cmp
out
jno
push
push
repz
fists
js
push
dec
and
nop
cmp
rorl
ds
push
push
popa
fldl
cld
sub
mov
lods
mov
add
xor
sbb
jb
xchg
fiaddl
mov
lds
mov
roll
add
add
sub
fildll
ljmp
add
enter
inc
inc
cmc
hlt
pop
dec
adc
cmp
mov
jne
add
daa
dec
pop
or
outsb
lock
enter
pop
xchg
test
in
rclb
es
ljmp
xchg
nop
imulb
jbe
or
lock
shr
adc
ficoms
jae
out
pop
xlat
adc
shlb
andl
loop
xchg
std
aad
jno
aaa
or
mov
cmp
sub
jmp
not
xchg
cltd
ds
cwtl
sub
xchg
xor
xchg
aaa
cmpsl
nop
loopne
stos
dec
push
inc
adc
testl
and
out
add
lods
add
add
add
nop
sahf
push
loopne
sub
push
pop
fdivl
not
leave
pop
pushf
xlat
jp
stos
inc
not
xor
mov
jno
pushf
cmp
rcr
xchg
test
mov
push
aam
pop
xchg
imul
scas
int
lods
test
in
sahf
inc
dec
cmc
xchg
movsl
jl
loop
inc
xor
test
mov
pop
dec
cwtl
call
das
fcoml
xor
in
mov
pop
add
dec
and
pop
stc
adc
insl
inc
mov
push
lds
sets
mov
mov
jne
xchg
add
jnp
insl
dec
inc
and
iret
cmp
cmp
daa
push
imul
addr16
int
mov
add
xchg
pop
test
inc
arpl
and
inc
and
add
nop
js
xor
fdivrl
out
ret
pop
ret
xchg
ja
mov
or
in
ds
jg
push
inc
mov
pop
jg
sbb
mov
stos
es
ja
pop
fwait
lret
mov
in
dec
loopne
or
cmp
jns
push
js
mov
insl
xor
lea
add
std
leave
jle
insb
imul
dec
je
add
shr
lea
out
push
jns
jbe
jno
pusha
into
pushf
mov
mov
mov
cmpsb
adc
movsb
push
jae
bound
ljmp
add
add
jne
jg
clc
cs
push
arpl
add
test
and
gs
insb
pop
add
lock
loopne
in
cmpsb
repnz
sbb
jo
xchg
dec
int3
push
pop
fwait
pushf
sub
adc
xchg
push
mov
xor
and
sti
cmp
push
mov
and
cmpl
sbb
subl
popa
ljmp
xchg
jmp
lahf
aam
jb
jo
inc
xchg
into
lcall
and
int3
loop
push
mov
push
imul
test
sbb
lds
je
jb
cmp
lea
aaa
or
dec
mov
je
lcall
add
lods
add
add
hlt
lods
mov
fimuls
mov
notl
inc
inc
pop
mov
in
and
mov
out
aas
mov
out
sahf
pushf
ljmp
and
addb
js
or
insb
and
leave
ficoms
add
dec
test
das
adc
andps
mov
xchg
repnz
sbb
popa
cmp
test
mov
lret
lahf
aam
mov
sbb
int
mov
in
fldt
mov
stos
or
sub
roll
push
leave
sbb
adc
cld
push
pop
loopne
rcll
ljmp
repnz
add
fists
dec
mov
xchg
adc
xorb
mov
add
add
adc
xchg
pop
cmc
loope
test
or
lea
stos
push
adc
pop
fmull
fdivl
mov
mov
hlt
mov
ja
xchg
shrl
stos
out
or
xlat
mov
jbe
mov
shlb
mov
mov
out
xor
aaa
in
push
enter
loope
adc
shll
test
ljmp
lea
into
adcl
pop
fldpi
push
push
cmp
loop
hlt
and
cmp
ss
push
mov
jo
leave
imul
pop
add
mov
sub
add
fisttps
push
lea
adc
mov
add
pop
stos
ja
out
xchg
loop
je
lock
jb
test
mov
push
icebp
sub
je
mov
cmp
sub
inc
lock
lcall
cltd
ret
adc
sub
xchg
insb
sub
jne
nop
adcb
jae
push
loope
sub
mov
jecxz
pushf
sbbb
ret
cmp
lcall
jecxz
mov
pop
jne
mov
sti
push
inc
xchg
jns
mov
into
pop
into
or
xor
ljmp
loopne
in
popa
cs
lods
pop
sbb
add
add
jle
out
sbb
mov
lea
add
cli
xor
dec
add
and
xor
lock
cmp
data16
dec
sub
pop
inc
inc
jecxz
pop
mov
lahf
push
sbb
hlt
cmp
mov
sbb
jmp
mov
das
mov
mov
scas
int
jge
popl
popf
dec
xor
out
aad
push
dec
cltd
pop
jp
ja
jne
and
or
xchg
push
adc
mov
popa
xchg
dec
push
frstor
xor
cmp
sub
notl
rolb
mov
popf
idivl
std
subl
adc
mov
jo
and
cmp
repz
mov
add
add
lret
inc
push
or
loope
jae
insl
or
pop
cmp
xor
xchg
sub
adc
xchg
mov
jae
sub
imul
jae
pop
rorl
daa
fsubrs
add
sub
cld
pop
pop
pop
and
xchg
int
and
test
jg
sahf
mov
loope
in
xchg
enter
aad
outsl
js
jl
repz
imul
adc
sub
scas
je
cmp
mov
dec
push
pushf
xor
cmp
inc
dec
mov
xchg
cli
mov
push
ret
xchg
cmp
dec
cmpsb
iret
xchg
nop
ffree
popf
aam
cltd
xchg
fldcw
add
lods
add
add
mov
jp
mov
daa
sub
movsb
mov
scas
mov
test
pop
mov
xor
xor
loope
adc
das
addr16
inc
dec
push
jp
fwait
lret
and
sbb
out
leave
ljmp
insb
data16
inc
loop
xchg
fsubr
inc
cmp
sub
loopne
fsubr
fstl
or
in
inc
xor
mov
ret
push
test
insl
sbb
xor
xlat
or
mov
ljmp
inc
test
mov
jecxz
add
add
mov
jbe
hlt
mov
and
cmpsb
lods
mov
add
lods
add
add
sub
pop
stos
jle
in
cmp
aas
cmc
inc
call
sub
movsb
jmp
arpl
mov
shrl
sub
imul
xor
xlat
pop
push
mov
stos
scas
mov
faddp
out
push
das
dec
imul
mov
mov
pop
popa
fmull
fstpl
pop
push
sub
jecxz
xor
jnp
jae
sti
pop
fwait
mov
sti
pop
xchg
xchg
cli
push
aaa
fnstcw
pusha
mov
push
xor
cmp
xchg
test
push
in
popa
lret
movsb
adc
and
xor
into
mov
sub
out
mov
popl
add
lock
xchg
popa
mov
imul
fbld
push
xor
dec
xor
jmp
std
or
push
sbb
gs
cs
les
push
stos
jl
xor
xor
es
fs
fisttpl
jecxz
int
sbb
loope
adc
xor
loopne
mov
loopne
jnp
push
or
out
mov
mov
or
fcomps
fidivs
ja
xor
mov
lock
shll
mov
in
and
sbb
push
lods
jnp
jns
pop
test
fucomi
outsb
and
pop
mov
outsl
nop
add
lods
add
add
cmc
xchg
int
or
repnz
xchg
dec
lahf
sbb
add
and
add
xchg
mov
aad
xchg
mov
inc
out
out
cmpl
fwait
inc
jmp
jmp
int
arpl
fcmovnu
jb
dec
pop
stc
repz
push
ds
inc
mov
inc
fildl
ja
nop
leave
sub
cltd
lods
imul
mov
mov
popa
insb
cmpsb
std
popf
decb
imul
mov
xchg
sub
and
movl
pop
in
jne
scas
jp
xchg
popf
icebp
add
mov
and
add
xchg
add
lods
add
add
add
mov
sbb
and
shrb
loope
xchg
popf
int
cmpsb
mov
iret
add
iret
xor
sub
ret
in
stc
ja
fcos
fisttps
cmp
mov
pop
out
mov
mov
fistl
movsl
pushf
jbe
jp
das
lods
adc
adcb
cmp
scas
dec
outsl
inc
inc
int3
add
or
mov
push
and
movsb
lea
mov
and
ds
int3
adc
cld
lret
xor
jge
addr16
fcmovnu
mov
and
stos
sbb
ss
jb
mov
add
mov
and
jg
call
into
inc
mov
sahf
sub
xchg
add
lods
add
add
sahf
je
lods
lahf
outsl
ds
or
lahf
rcrl
jbe
adc
out
xchg
or
add
jl
add
adc
sbb
hlt
push
test
jb
rcll
out
sub
stos
add
jecxz
adc
mov
and
nop
push
mov
push
fs
add
lea
mov
movsb
ss
sbb
call
adc
adc
sarb
sbb
and
scas
stos
and
jo
jne
jae
cmp
mov
nop
xor
add
xchg
xlat
xchg
bound
lods
popf
fs
xchg
pop
popf
jns
dec
shl
add
insb
xchg
fisubrs
cwtl
sar
repz
cmp
add
loop
cmp
mov
mov
or
cs
mov
mov
cwtl
adcb
mov
sub
sub
push
jb
mov
inc
add
imul
loope
push
mov
shlw
and
lret
xor
dec
mov
subb
test
add
push
xchg
lret
clc
push
stos
jg
cmp
sub
push
cli
lods
das
mov
add
iret
addr16
test
in
mov
cmp
clc
xor
ss
inc
mov
or
add
add
int3
sbb
out
loopne
lods
mov
xchg
add
lods
add
add
push
dec
mov
imul
int3
pop
fs
leave
or
inc
or
sti
inc
mov
lcall
cli
mov
in
into
movsl
les
lods
push
xor
cmpsb
mov
dec
int3
inc
test
push
ror
subb
mov
ret
lock
outsb
lods
dec
lods
test
cmpsl
add
outsl
or
add
inc
inc
or
mov
movsl
stos
and
pop
es
bound
cmc
jbe
add
mov
icebp
psrad
dec
loop
jge
rcll
lret
mov
jle
js
sbb
add
test
fildll
jge
pop
lret
xchg
add
lods
add
add
mov
movsb
call
dec
shl
xchg
mov
push
jecxz
ljmp
jae
inc
scas
les
xchg
sub
int
xchg
mov
dec
hlt
xchg
inc
loop
out
xor
fdivs
out
xchg
xor
pop
xchg
sub
mov
xor
es
insl
xchg
mov
push
mov
cmp
jg
jecxz
cmpsl
sbb
lahf
pusha
inc
jae
cmp
push
jnp
jne
sbb
inc
sub
lcall
inc
jnp
mov
xor
in
inc
aam
inc
into
loopne
cmp
addr16
imul
add
lods
fcomi
sarb
add
xchg
add
lods
add
add
xchg
std
mov
sub
mov
sub
dec
xchg
pop
xchg
pop
ficoml
push
jae
ret
repz
shrb
movsl
data16
out
push
sub
mov
jp
cmp
add
mov
or
in
or
or
es
push
loope
or
mov
fnstenv
jb
mov
sbb
or
push
mov
mov
and
jecxz
sub
xchg
jbe
adc
in
ret
xchg
shlb
std
mov
ret
push
jns
add
or
ja
dec
cmp
dec
or
xchg
add
lods
add
add
out
repnz
fwait
xchg
fnstsw
ret
test
ljmp
and
pop
pop
jmp
pop
pop
vpsllq
cmp
and
jg
sub
idivl
popa
leave
inc
cmpsl
lret
pushf
jae
push
leave
outsl
xor
ja
test
sbb
push
arpl
rclb
cmp
lret
push
movsl
fmull
test
mov
jne
shll
mov
ss
sbb
ds
jle
dec
mov
aad
lock
inc
fnstenv
jmp
mov
outsl
mov
push
arpl
jge
mov
daa
dec
cmc
aad
iret
xchg
add
lods
add
add
xchg
xchg
inc
test
sarl
mov
repnz
inc
push
sub
subl
add
aaa
mov
call
call
push
adc
xor
into
push
adc
push
push
hlt
and
iret
dec
sub
hlt
push
jl
push
sub
pop
test
fwait
icebp
mov
push
sti
jmp
xor
push
mov
xchg
roll
sbb
cmp
sahf
ficoms
fs
cld
sub
mov
cmp
in
jae
cmp
jmp
jo
ljmp
add
daa
ss
xor
and
mov
aas
mov
add
lahf
addl
jo
es
xchg
jecxz
shlb
out
inc
xchg
scas
xor
test
xor
mov
pop
les
push
sbb
cmp
aaa
in
mov
xlat
adc
or
xor
add
roll
mov
jae
je
aam
inc
sbb
sbb
xlat
enter
xchg
mov
int
jl
cmp
add
pop
lcall
mov
js
jge
adc
lods
testl
cmp
mov
jno
mov
cld
ss
sbb
cmp
add
out
mul
aaa
cmc
xchg
lcall
jmp
add
lods
add
add
add
push
push
out
push
dec
dec
or
inc
push
out
cmp
jbe
adc
xchg
sarl
mov
push
jnp
in
inc
sarb
jae
pop
ljmp
test
inc
or
lea
dec
in
repnz
jno
dec
inc
adc
pop
xor
call
lahf
pusha
or
inc
fisubrs
addr16
inc
cmpsl
fdivl
xor
xor
pushl
stos
push
sarl
mov
fisubl
ficoms
xchg
mov
movsb
sub
sbb
push
pop
mov
sbb
jne
adc
mov
adc
mov
adc
movb
add
push
aad
out
fucomip
ss
cmp
int3
out
movsb
add
lods
add
add
dec
fdivrl
and
in
nop
sbbl
out
cmp
jo
cmp
in
pop
dec
popf
push
and
fs
dec
in
outsl
repz
enter
int
ret
cli
fidivl
cmp
or
add
mov
pop
lea
les
cmp
loope
push
imul
fpatan
inc
dec
pusha
push
mov
inc
cmpl
add
sub
mov
arpl
bound
sbb
and
mov
cli
in
sbb
movsl
push
xor
outsb
jbe
lret
outsb
negb
xchg
xchg
inc
movsl
add
lods
add
add
dec
aam
ss
push
jmp
sahf
adc
and
aad
inc
out
call
ret
xchg
jne
aam
mov
addl
sub
inc
pop
leave
cmp
aam
inc
lods
xor
xchg
ds
push
jle
fsubrp
or
popa
pop
inc
stos
out
icebp
push
push
hlt
xchg
xchg
inc
cmp
add
sub
cmp
into
je
sbb
xlat
push
sti
pop
addr16
sahf
pop
cmp
xchg
clc
js
pop
jge
cmp
enter
or
lods
imul
mov
insb
sub
xchg
and
add
mov
add
push
les
in
lahf
sti
ja
rcll
stc
out
movsl
add
lods
add
add
mov
inc
jb
imulb
adc
loop
mov
jnp
add
dec
loop
out
out
insl
repnz
inc
sbb
or
pop
test
fidivl
nop
leave
pop
push
insb
push
push
jp
sub
fsts
dec
jo
jne
dec
push
leave
es
sbb
imul
iret
stos
or
jno
jb
jl
cmp
sbb
inc
test
cmpsb
sbb
stos
dec
repz
and
aad
rcl
fcomp
sti
adc
jge
mov
pop
dec
outsb
dec
cmpsb
xor
inc
repz
jle
mov
pop
sbbl
add
xchg
cmpl
push
loopne
lcall
add
lods
add
add
and
or
lret
inc
xchg
pop
jg
pop
cmp
sbb
inc
mov
leave
xchg
sub
daa
fsubrs
xchg
pusha
rcrb
add
in
adcl
sbb
jne
cmp
push
scas
mov
sbb
repnz
fs
pop
mov
inc
ja
adc
add
jge
cmpsb
dec
mov
cltd
inc
push
xchg
sbb
and
es
xlat
in
jge
clc
sub
int3
or
nop
stos
mov
mov
add
cmp
cli
lods
pop
mov
jae
fadds
les
add
add
fincstp
shl
frstor
pop
dec
or
repz
cmpsl
add
lods
add
add
cmp
mov
notl
icebp
gs
scas
dec
adc
pop
push
jle
fwait
push
xchg
pop
or
rclb
cmp
or
mov
js
movzwl
mov
add
jl
sub
mov
in
movsl
and
sub
cmp
stos
and
mov
pop
xor
mov
push
aad
mov
ja
sub
stos
aad
mov
sbb
xor
or
ja
popa
lock
xchg
ret
add
mov
or
mov
xchg
push
repnz
pop
jmp
push
add
outsl
mov
jmp
push
fcmovu
in
mov
jg
cmpsl
add
lods
add
add
rcl
push
push
sbb
movsl
inc
test
cli
and
dec
xchg
stos
xchg
xlat
outsl
sub
inc
iret
lret
addr16
cmpsb
xor
in
mov
imul
or
out
sbb
cmp
sub
xorl
out
dec
unpckhps
setno
mov
out
inc
mov
ljmp
sbb
jb
sbb
mov
adc
pop
jle
in
nop
mov
je
xlat
fxch
inc
dec
inc
nop
mov
out
mov
call
mov
pop
subl
mull
pop
adc
movb
add
stc
sbb
inc
jecxz
mov
adc
pop
clc
lahf
test
add
ret
in
jmp
inc
in
xor
in
mov
xor
jnp
fs
ds
adc
dec
into
jb
movsb
cli
jae
shl
loop
adc
sbb
jb
push
faddl
and
add
iret
repz
in
lcall
or
sbb
mov
out
pop
push
loop
jae
add
test
test
leave
mov
stc
repz
popa
sbb
cmp
mov
cmp
ret
movsb
xchg
ret
addr16
dec
dec
movb
push
lahf
fdivrp
push
add
insb
loopne
xlat
test
adc
add
mov
mov
icebp
and
dec
dec
dec
test
add
or
pop
push
cmp
fs
push
mov
jle
xchg
fstl
mov
test
mov
push
stos
add
mov
jl
outsb
int3
shlb
dec
sbb
mulb
sub
fdivs
push
jo
or
pop
xor
cmp
aam
push
xor
inc
mov
test
faddp
dec
data16
adc
mov
or
lahf
pop
xchg
clc
pop
mov
lea
movsl
imulb
rclb
mov
push
and
jo
jne
pop
stos
xlat
je
lcall
adc
repz
das
cli
fists
dec
es
out
pusha
sub
lods
add
add
jb
pushf
jne
push
daa
cmc
das
out
out
jb
arpl
inc
int3
sti
mov
lds
jno
mov
sub
stos
xchg
fstl
bsr
test
mov
sub
jbe
test
jg
push
mov
pop
jns
jno
adc
cvtdq2ps
push
mov
pop
and
test
jl
ret
cli
scas
mov
adc
dec
dec
popf
xor
dec
adc
inc
aam
fstps
das
int
ret
inc
pop
in
lods
lahf
ds
cli
push
sti
popa
pop
pop
in
es
jmp
outsb
decl
inc
sub
mov
adc
push
adc
cwtl
out
xchg
pushf
mov
mov
add
add
pop
mov
iret
lcall
dec
ret
dec
loopnew
pop
mov
mov
dec
aad
cld
hlt
and
in
in
cmp
cld
sbb
add
bound
int3
add
test
cmc
dec
shll
or
jno
cmc
xlat
enter
mov
int
fucomp
lahf
or
out
jb
or
nop
xor
test
aad
popa
ficoml
js
mov
dec
and
lock
push
jbe
jns
xor
adc
push
lods
and
mov
adc
push
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
