push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
mov
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
in
inc
lret
mov
test
adc
shrb
inc
aam
mov
dec
dec
test
sbb
jmp
ljmp
aaa
stos
fucomi
or
scas
jbe
xchg
sbb
mov
mov
add
or
ja
mov
adc
sbb
mov
xor
adc
jmp
pop
out
cmp
or
aam
dec
lret
cld
or
add
mov
and
ret
inc
jno
ret
jg
push
xchg
cmpsb
pop
pop
movb
or
rcl
push
loop
add
xchg
rolb
xlat
inc
ficoml
pop
add
mov
aad
ss
cld
jno
cmpsl
jp
das
or
cmp
xor
or
fxch
stc
pushf
movsb
clc
jne
ud1
lods
movsb
push
dec
jg
mov
xchg
cli
mov
jl
jne
mov
inc
jb
nop
or
push
std
mov
push
es
pop
xchg
aaa
mov
or
sbbl
out
in
pop
loopne
jp
mov
and
push
dec
faddl
inc
pop
jns
imul
test
xchg
push
sub
jns
mov
rorb
inc
out
xor
ja
scas
dec
sti
or
lcall
cld
leave
stos
out
jp
cmp
popa
push
mov
cmp
into
gs
sarl
push
xlat
cmp
sbb
shlb
adc
aad
ror
fildll
ficoml
aaa
pop
jns
fiaddl
pop
sbb
addr16
jnp
mov
outsl
push
fsts
jmp
addr16
fiaddl
xorb
decb
lods
jl
das
jne
into
cmc
into
aas
xor
pop
test
rcrb
sbb
cld
fildll
repz
lret
xchg
mov
mov
in
mov
or
loopne
test
adc
aad
loope
loopne
sub
adc
dec
mov
je
repz
cmpsb
inc
add
neg
pop
and
mov
fildl
sbb
add
ret
js
sub
xor
inc
je
mov
sbb
out
xor
mov
push
mov
pushf
ja
lds
push
pushl
xchg
jno
mov
les
push
jp
rorb
xor
pop
cld
out
fwait
not
cmp
mov
test
or
mov
cli
loopne
in
dec
hlt
repz
gs
loope
clc
jb
dec
fidivs
int3
sub
jno
repnz
cwtl
adc
scas
push
stos
push
outsl
rorl
ja
stos
imul
push
mov
push
out
aas
adcb
scas
mov
cli
cpuid
or
enter
ret
scas
into
mov
cmp
cmpl
adc
add
jo
dec
inc
and
push
xchg
adc
inc
icebp
stos
push
push
pop
imul
jne,pt
fstps
adc
push
sub
cmp
pop
lods
xchg
jns
out
pop
cwtl
ret
jmp
in
sbb
ja
inc
mov
mov
mov
adc
sub
mov
mov
mov
hlt
xchg
push
push
adc
cltd
repz
inc
dec
and
movsl
jge
insb
in
push
add
andl
mov
or
ret
rorb
sbb
pushf
es
pop
mov
mov
lods
xor
push
xor
cmp
mov
sub
lret
je
jmp
jle
out
inc
int
test
out
pusha
xchg
xor
stos
jbe
loop
ret
xchg
in
fldt
mov
and
ljmp
sub
add
mov
ss
pop
pop
pop
mov
lds
loop
mov
and
inc
sbb
call
sbb
mov
outsl
mov
cs
mov
mov
das
rcrl
xchg
sbb
stos
mov
cs
mov
jle
mov
ds
xchg
mov
int
pop
mov
sub
or
add
out
pop
pop
test
mov
mov
clc
arpl
pop
int3
pop
or
and
lret
lret
loopne
fwait
dec
fwait
xchg
xchg
fs
scas
movsl
sarb
mov
dec
sub
sub
add
sub
sub
cmp
sub
gs
mov
in
mov
cmp
fisubs
call
sub
or
mov
out
sbb
jns
repnz
jno
je
insl
cmpsl
sub
daa
jns
addr16
mov
push
jecxz
or
iret
mov
mov
lahf
imul
hlt
inc
push
and
dec
lret
or
xor
mov
icebp
in
xchg
cmp
gs
dec
pop
xor
sub
jb
sahf
lds
out
push
mov
pop
in
popf
shll
pushf
mov
xchg
sbb
mov
test
push
rcrb
jp
push
dec
dec
mov
mov
and
out
ljmp
pop
mov
fdivrl
stos
fistpl
xchg
mov
das
add
or
ret
cmp
and
lds
lret
bound
movl
dec
xor
pusha
adc
std
mov
xor
pop
inc
and
and
loope
jbe
jb
dec
xchg
rcl
pop
aam
nop
inc
mov
rclb
loop
adc
loop
shll
rcrb
scas
mov
popa
dec
add
lret
aam
ret
ljmp
fidivl
test
js
and
adc
pop
fcmove
lahf
int3
inc
fnsave
arpl
xchg
mov
or
pop
fisubrl
mov
jne,pn
mov
hlt
dec
mov
jbe
xor
adc
rcr
in
cmpsl
xchg
fwait
divl
clc
cmp
add
mov
popf
or
xchg
testb
stc
push
stc
or
shrb
popa
ret
cmp
rcrb
fistpl
mov
sahf
pop
sub
hlt
dec
jle
xor
fidivrl
cwtl
mov
dec
in
fidivrl
sbb
cmp
sub
ds
xchg
leave
inc
insb
lret
les
aaa
test
dec
xchg
in
push
xor
mov
in
adc
loop
mov
ds
pusha
gs
and
push
gs
push
dec
sti
addl
mov
add
es
mov
loope
lahf
mov
enter
ds
push
pop
psrad
sbb
lods
xchg
push
sub
rcll
pop
ljmp
aam
mov
sub
pop
xchg
push
aad
push
ret
cmp
repz
xor
fidivs
sub
or
fcoml
mov
push
adcb
push
push
inc
jnp
push
shrb
dec
mov
loop
insb
xchg
rcr
xchg
mov
idivl
test
cmp
shl
cmpsl
sub
sbb
leave
xchg
jge
dec
cmp
xchg
lea
dec
repz
or
pop
popf
and
cmc
push
xor
cmpsl
pop
xchg
sbb
sub
xchg
xchg
push
cwtl
mov
push
add
ljmp
dec
push
inc
out
clc
jno
fstl
stos
xchg
popf
mov
xor
popf
mov
mov
arpl
pop
aas
inc
js
decb
aaa
push
mov
mov
dec
add
mov
test
loopne
lret
hlt
mov
and
lods
push
sahf
andl
mov
mov
ss
sarl
xchg
mov
loope
lods
adc
sub
add
dec
ds
dec
push
daa
cmp
mov
in
lret
popa
pop
mov
jp
div
insb
jle
sbb
in
and
sub
or
ljmp
adc
mov
add
ss
sahf
fsubrl
ljmp
xchg
mov
jp
pop
cmp
cmpsb
jno
sahf
xor
arpl
mov
xlat
adc
pop
scas
cwtl
cmc
dec
call
xor
xchg
les
xchg
mov
jl
or
sub
sub
sbb
cmp
outsl
jl
jge
dec
jae
nop
mov
rcrl
int3
cmpsl
cmpsl
inc
bound
mov
jns
jbe
mov
ja
xlat
sahf
aam
dec
jae
or
enter
aaa
shl
jae
push
and
xor
sbb
mov
xor
add
incl
xchg
into
mov
mov
aaa
pop
cmp
add
insl
pop
add
rcrl
add
pop
dec
clc
aad
jmp
mov
mov
enter
pop
push
cmp
sub
outsb
jg
faddl
xchg
push
rcr
scas
outsl
mov
dec
xchg
xchg
leave
xlat
inc
mov
fimull
cmp
in
adc
out
jae
flds
jae
push
int3
test
adc
cmp
push
mov
dec
pushf
lret
lods
cmp
sahf
xor
pop
insb
pushl
push
inc
test
xchg
out
mov
orl
mov
sub
fstl
mov
dec
lock
sub
xchg
xor
jge
or
pop
movsb
rcl
adc
cmpsl
std
pop
push
js
daa
and
into
xor
jb
insb
fcmovnbe
std
cwtl
lret
jle
pop
jge
lds
or
xchg
pop
pop
mov
pop
fdivl
adc
inc
jle
rorl
sbbl
adc
scas
xor
mov
jno
lods
xchg
sbb
hlt
scas
std
push
mov
dec
movsl
ja
mov
mov
mov
xchg
dec
cli
mov
mov
gs
jmp
and
xor
aaa
pop
xacquire
enter
fdivrp
mov
cwtl
jl
pop
int3
and
scas
jge
cs
imul
loopne
imul
or
ret
dec
stos
stos
jmp
fidivrl
sbb
nop
test
hlt
add
mov
xchg
jge
xchg
jo
adc
push
popf
cmc
xchg
sbb
aad
shrl
lods
dec
or
ljmp
push
cwtl
jne
lods
repz
pushw
cmp
sub
dec
xor
in
jb
mov
push
dec
mov
push
xor
jg
out
push
div
subb
push
enter
addb
std
sbb
pop
popa
into
in
inc
out
bound
xlat
add
cmpsl
inc
subl
and
stc
dec
pusha
js
test
jmp
aam
mov
pop
and
scas
ss
xor
adc
mov
cmpsb
fsubr
cmp
mov
adc
mov
mov
inc
push
mov
lea
mov
sub
pop
sbb
adc
pop
or
mov
inc
push
pushf
or
jl
mov
test
movsl
lea
inc
xchg
test
movsb
leave
pusha
outsb
out
adc
pop
pop
adc
pop
xor
fsubs
stc
add
push
and
addr16
adc
pop
leave
or
sbb
xor
push
sbbl
in
idiv
adc
mov
xchg
xor
xchg
in
es
mov
cli
fcompl
out
cmc
mov
call
negb
in
pop
testl
mov
outsb
mov
mov
inc
imul
ficompl
pop
add
sbb
adc
jne
sti
fld1
inc
call
mov
sbb
repnz
jle
pop
mov
sub
xlat
mov
sbb
jp
cmp
sahf
jecxz
aaa
jne
cmp
add
test
lahf
iret
call
jmp
and
sbb
imul
push
adc
sbb
mov
mov
nop
shl
sahf
aam
call
xor
inc
sbb
mov
int
jl
and
test
in
gs
lret
outsl
fwait
iret
adc
push
mov
adc
dec
gs
xor
sbbl
leave
iret
push
jno
dec
add
push
jmp
pushf
xor
out
add
pop
repnz
aam
or
add
in
imulb
sbb
mov
mov
mov
repz
xchg
pushf
mov
cmp
lds
sub
cwtl
or
xchg
dec
pop
into
fdivl
scas
xor
push
sbb
mov
and
jp
fadd
or
popf
push
adc
fistl
dec
inc
outsl
insb
xlat
addl
sbb
imul
into
xor
cmp
outsb
dec
lea
mov
data16
stos
mov
push
xor
jb
and
sub
pop
pop
stos
rclb
jg
out
jae
jg,pn
ds
cmc
sbb
sub
add
xchg
jo
xor
xchg
cltd
jno
scas
movsb
xchg
xchg
ret
push
or
stos
push
negb
cmc
sbb
mov
stc
xor
test
pop
or
dec
and
xor
mov
xchg
fwait
bound
jp
fisttpl
nop
popa
mov
cld
mov
jbe
xchg
aad
push
cli
in
inc
jae
pop
push
pop
clc
fucomi
loope
or
pop
into
jge
sbb
dec
cli
pop
ja
repz
jns
cmpsb
shrb
sub
adc
pop
jmp
inc
mov
jns
jbe
cmp
incb
cmpsl
mov
mov
pushf
lds
test
ror
xor
lock
xchg
dec
insl
jp
dec
in
ret
loopne
aaa
inc
pop
jne
je
cmp
mov
inc
or
mov
test
xor
fistpl
aam
sbb
jae
sub
add
loope
test
filds
jne
shr
testl
outsl
ret
mov
aad
inc
jb
pop
imul
push
in
fisubl
cs
jb
cld
pop
cmc
inc
xlat
push
pop
mov
sub
mov
lods
jmp
xchg
sbb
sbbb
mov
rsm
jo
push
outsl
pop
push
out
fimull
adc
imul
dec
andl
sub
jno
jnp
cmp
stc
pop
cmp
xchg
inc
pusha
cmp
dec
scas
clc
inc
push
aam
xchg
test
fcoml
lea
mov
adc
jecxz
sahf
shrb
jp
jl
movsl
out
dec
pusha
jb
lea
mov
aaa
pop
pop
fs
mov
and
loop
add
mov
scas
shll
mov
popf
xlat
or
test
mov
mov
gs
cwtl
xchg
jge
shrl
add
adc
pop
fnstsw
jo
mov
fistpl
xchg
adc
push
subb
jns
pcmpeqd
imul
pop
xor
push
mov
mov
xlat
loope
mov
mov
lcall
jg
stc
or
pushf
dec
sbb
loope
mov
nop
jge
adc
xor
jp
xchg
push
jecxz
das
xor
pusha
or
scas
adc
sub
xchg
push
jge
push
imul
xchg
push
test
sti
in
lcall
loop
add
stos
outsb
addr16
inc
test
adc
out
push
ficomps
add
mov
pop
pop
clc
sub
sub
repz
cmp
dec
cs
xor
call
add
das
mov
ljmp
ja
aad
mov
xor
daa
negl
add
push
add
add
cmp
jecxz
in
jns
mov
mov
mov
pusha
fs
popf
jg
xor
mov
lock
push
and
pop
hlt
sbb
pop
ljmp
mov
fldl
xchg
loop
hlt
dec
aas
movsb
stc
and
mov
push
fstl
add
orb
pop
dec
cmpsb
adc
sbbl
xchg
xor
inc
push
dec
push
push
aam
or
js
out
dec
int3
fistps
xor
out
and
cmp
roll
outsb
imul
mov
lea
sbb
push
out
push
sbb
bound
sub
push
fwait
rcrb
xchg
or
call
nop
mov
and
js
loopne
mov
push
mov
or
cli
or
cmpsb
lret
loop
ss
push
inc
fidivrs
repnz
das
test
testb
sarb
es
xor
das
add
std
xor
aad
mov
out
shl
imul
lret
insl
sub
push
push
ss
mov
inc
aad
loop
pop
int3
pushf
ds
aad
sbb
cld
dec
push
sbb
jp
cmpsl
cmc
mov
add
inc
pop
movsl
pop
inc
in
cli
in
lods
in
loop
jg
mov
inc
sbb
stc
inc
lret
mov
xchg
mov
insl
mov
shrb
mov
dec
mov
push
pop
pusha
pop
notl
movsl
leave
fldcw
push
pop
pop
inc
es
out
cmp
ret
mov
adc
lock
pop
ds
into
lods
scas
loop
mov
add
je
jmp
stc
jbe
sub
stos
lods
loope
cmp
push
pop
adc
cld
add
inc
push
dec
inc
add
jle
out
sub
push
pop
adc
mov
jb
cmp
aam
fimuls
jne
adc
push
inc
outsl
push
cs
jne
jp
jnp,pn
xchg
adc
jnp
arpl
xstore-rng
cmpsl
inc
int3
pop
xchg
cld
mov
enter
movsl
push
jp
vpsrad
xor
mov
pop
sbb
and
shlb
stos
mov
ret
aaa
mov
fwait
in
enter
cmc
hlt
sahf
xchg
cwtl
je
cmp
pushf
push
stos
fsubr
or
outsb
and
mov
into
call
aad
lcall
notb
push
cmp
pop
xor
mov
adc
push
dec
xchg
incl
das
pushf
fnstcw
divl
arpl
stos
xchg
dec
sub
imul
and
cmp
popa
movups
mov
fisubrs
gs
sub
jb
mov
stc
ret
ss
cmp
pop
cmp
pop
imul
xor
jmp
xor
cmc
mov
push
js
xchg
sub
xor
mov
inc
call
loop
test
ficoml
mov
push
and
pop
pop
push
mov
xor
faddl
stos
popa
in
lods
add
sysenter
adc
lock
scas
add
out
xor
stc
fisttps
sub
aas
add
or
xchg
sub
lret
mov
mov
adc
je
mov
insb
fld
cmp
sbb
and
js
movl
in
shrl
mov
adc
aaa
cmp
mov
gs
insb
adc
ljmp
mov
bound
mov
out
add
test
ds
adc
push
mov
mov
jp
sub
mov
adc
les
sbb
sub
shlb
aam
cld
inc
ljmp
lret
cld
fdivrs
mov
jmp
fmull
cmp
out
jno
out
inc
fimull
jno
out
mov
and
lret
mov
js
fiaddl
cmp
add
leave
test
bndstx
ljmp
daa
mov
add
in
sub
insb
movsl
jns
or
push
jno
std
scas
insl
adc
lds
jge
sbb
cmp
add
pop
test
std
in
out
jmp
mov
nop
jno
xchg
pop
sbb
and
into
int3
fisttps
out
scas
fistpl
inc
loope
gs
cmpsl
gs
into
xor
xrelease
nop
sub
jecxz
jb
jne
sub
stos
stc
mov
negl
js
jne
jb
jge
pop
mov
data16
nop
mov
cmc
push
out
jl
aaa
sbbl
lret
icebp
jl
int3
in
movsb
add
clc
loopne
loop
add
pop
and
inc
outsl
jmp
aaa
sub
aad
jg
icebp
push
jl
push
cmp
fcmovbe
pusha
push
jle
dec
dec
jge
cmp
add
lret
jns
in
pop
enter
leave
pop
fisubl
and
inc
xchg
cwtl
shr
lock
mov
pop
or
sti
inc
ret
lret
sbb
sbb
xor
or
ja
cmp
and
xor
jg
xor
into
addb
lock
dec
cli
mov
adc
adc
dec
push
flds
mov
jbe
adc
sbb
fwait
lds
out
loopne
xchg
lds
and
xchg
mov
in
and
rolb
jne
out
inc
cmpsb
mov
stc
and
pusha
lret
mov
dec
xchg
vaddsd
fwait
push
dec
push
add
push
out
and
mov
mov
pop
inc
js
pop
inc
jb
push
cli
pop
or
loop
loopne
iret
xchg
hlt
jae
lds
jnp
stos
lcall
mov
xchg
jae
mov
xchg
pop
adc
pop
nop
ljmp
enter
sbb
andb
or
and
out
xchg
or
jno
xchg
dec
add
pop
xor
jmp
adc
rorl
dec
lods
push
loope
sbb
shr
ja
sti
sub
pop
pop
imul
loope
cmpsl
cli
gs
pop
add
cmp
adcb
cltd
data16
push
sahf
leave
xchg
stc
les
xchg
xlat
rcr
pop
cmpsl
out
bound
mov
data16
xor
xchg
out
sub
mov
lcall
sbb
into
xorl
call
in
mov
andb
test
cwtl
ljmp
adc
imul
pushf
add
out
mov
mov
or
dec
or
shrb
xor
push
dec
pop
es
sbb
les
pop
popf
pop
and
rcrl
jb
std
addr16
inc
mov
repz
lea
daa
cmp
xchg
repnz
addr16
loop,pn
incb
popf
cltd
repnz
push
int3
mov
sub
mov
add
push
inc
sub
dec
or
lret
outsb
aam
xor
jge
add
test
icebp
aaa
ror
jle
je
mov
adc
mov
pop
pop
ds
out
mov
mov
adc
or
pusha
je
push
dec
xlat
fidivs
repz
mov
and
mov
mov
inc
fisubl
push
push
push
mov
inc
in
inc
push
repnz
cwtl
loope
ret
jle
daa
bound
lret
andb
cwtl
jg
xchg
rclb
xor
bound
jge
pusha
ss
xor
ljmp
in
sub
xor
mov
mov
sbb
inc
add
or
xchg
jp
in
ficoml
jnp
outsl
loopne
jns
imul
loope
mov
lcall
sbb
xchg
aad
mov
lea
push
mov
fistpll
outsb
fimuls
fs
push
cwtl
adc
inc
or
ret
rcl
mov
subl
jo
mov
es
es
scas
fdivr
out
mov
mov
jns
fsub
and
mov
push
mov
and
pop
addr16
aas
push
cltd
mov
sahf
adc
mov
sti
push
int
push
lea
or
adc
cmp
xchg
xchg
hlt
fsubs
jle
inc
rol
xchg
cli
add
inc
dec
movsb
fiaddl
xchg
cmpl
hlt
imul
or
jo
push
add
ret
pop
mov
xorb
call
cmpsl
ds
add
out
mov
lahf
push
xor
popf
mov
imul
adc
aas
sub
pop
mov
fcoml
imul
jae
mov
and
push
outsb
stos
fld
outsb
cmp
add
mov
out
aaa
nopl
xor
mov
arpl
enter
jbe
add
jg
addr16
cmp
dec
insl
scas
mov
push
jno
lret
lock
and
mov
sbb
gs
out
sbb
mov
divb
cwtl
cmp
and
adc
fdivl
mov
cmpl
mov
xchg
in
fs
stos
out
fisttpl
mov
mov
pop
cmp
push
cmp
mov
pop
outsl
test
dec
push
sub
cmp
mov
xor
sub
or
mov
insl
ret
call
adc
xchg
les
adcb
inc
sti
jnp
and
sbb
mov
ret
sti
pop
mov
shlb
add
inc
cmp
push
push
jecxz
fildl
mov
mov
fwait
pop
mov
sbb
dec
ss
push
aas
dec
mov
ficoms
insl
inc
mov
xor
pop
lret
inc
cmc
hlt
pushl
pop
jo
mov
std
inc
mov
mov
push
cli
inc
adc
adc
mov
pop
lds
js
les
dec
jmp
xlat
imulb
loopne
or
xchg
add
mov
data16
popa
fs
pop
movsl
lret
in
lea
sbb
mov
pop
mov
int
xchg
inc
mov
and
int
fprem1
or
push
cmp
sbb
enter
insb
jle
test
movsb
push
cmpsb
in
adc
mov
pop
mov
icebp
xchg
lcall
out
rcrl
jnp
and
hlt
ljmp
jae
test
mov
scas
inc
sti
bound
jle
adc
adc
push
jg
sub
je
ja
leave
aam
outsb
jae
in
sbb
add
inc
lret
cmp
sbb
imul
flds
pop
lods
scas
frstor
repz
pop
loop
jae
jp
daa
push
cmp
pop
lea
insl
push
ret
insl
jno
xchg
dec
cmpsl
faddl
push
jp
std
and
lret
jne
imul
mov
cmpl
fldenv
mov
imul
sub
in
ret
repz
cltd
js
and
lret
lret
ljmp
inc
int
out
push
xchg
adc
dec
jno
stc
sahf
push
adc
pop
js
enter
and
sti
mov
adc
push
mov
push
cs
cmc
cmp
fisubrl
imul
and
mov
rclb
mov
aas
xlat
xor
sahf
jge
dec
fisubl
xchg
testl
inc
mov
arpl
daa
jge
lret
xorl
pop
sbb
sbb
je
out
xchg
call
je
adc
jle
jno,pn
repnz
xchg
mov
int
movsb
pop
mov
inc
add
iret
fldl
adcl
jno
dec
scas
out
jae
sub
pop
fnstenv
repz
arpl
xor
pop
popf
mulb
or
push
cs
jo
leave
nop
jl
mov
pushf
push
ss
aad
dec
cmc
scas
jmp
movsb
jmp
daa
push
subl
decl
std
setl
test
jp
add
incl
jl
ret
inc
dec
in
cmp
shlb
and
jmp
inc
adc
repnz
hlt
aas
cmp
test
in
cmp
mov
lea
fdiv
loop
loopne
pop
sbb
pop
xlat
pop
pusha
xor
xor
test
testl
inc
in
fbld
mov
inc
jmp
repz
sahf
enter
jle
cwtl
pushf
cmpsb
adcb
outsb
cltd
xchg
ret
add
nop
ss
shlb
cmp
jl
xchg
ror
dec
shrl
or
or
and
aam
outsb
inc
mov
pop
and
addb
das
xchg
push
sti
inc
mov
cli
fisubrl
jo
fists
sbbb
adc
mov
insb
std
mov
pushf
test
cltd
arpl
cwtl
shll
into
cwtl
shll
mov
aaa
mov
mov
xor
flds
jg
and
push
jno
cmp
xchg
mov
mov
movsb
cmp
mov
jo
sbb
arpl
add
push
mov
out
pop
popa
nop
adc
or
xchg
mov
fmuls
popl
dec
cmp
inc
mov
inc
inc
mov
sbb
or
ds
cmp
pop
out
shll
xlat
sub
push
outsl
sub
mov
test
gs
fwait
xchg
aas
mov
sub
push
jl
cmp
bound
and
sub
mov
xchg
aad
out
jmp
cmp
jbe
and
push
sbb
add
daa
or
push
mov
dec
push
movsl
mov
sub
lcall
dec
jmp
int
imul
dec
pop
in
or
sub
jmp
lods
adc
mov
shl
mov
cmp
lea
jecxz
mov
mov
push
jmp
lret
mov
dec
add
and
push
in
dec
and
mov
ljmp
cmp
jmp
xchg
push
sub
mov
push
add
cmp
push
mov
pop
sbb
fdivr
outsl
sbb
popf
sub
lret
rorl
push
loope
scas
enter
aad
jmp
add
ret
aas
repnz
scas
les
and
push
scas
cmpsb
push
dec
ja
push
lds
mov
ljmp
mov
xchg
xchg
mov
sbb
cld
mov
sbb
lds
cmp
add
sbb
outsb
xor
sbb
cmc
sbb
fdivs
adc
sbb
push
cmp
adc
icebp
adc
mov
inc
pop
jp
gs
push
lahf
xchg
mov
movsl
negl
or
jno
repnz
jl
jb
inc
cli
mov
sub
mov
sti
mov
mov
sti
loope
sahf
lea
mov
jno
inc
pop
clc
or
xor
sbb
mov
pop
in
clc
cmpsl
rclb
or
add
pop
mov
pop
scas
pop
xchg
lods
xchg
mov
in
out
in
sub
and
call
fwait
jge
lods
dec
pop
add
jp
push
pop
mov
inc
jnp
sub
int
aaa
jbe
outsl
xorb
data16
jbe
loop
jl
sbb
call
xchg
addr16
pop
or
das
dec
push
jo
inc
push
mov
cwtl
movsb
mov
xor
inc
lcall
push
lea
and
test
leave
xlat
mov
into
nop
test
mov
ficoms
popa
push
fld
rorb
ficomps
jecxz
mov
or
push
jl
xor
sbb
or
scas
mov
ljmp
outsb
loop
int
jno
push
imul
aas
cmp
add
sub
pushf
push
add
dec
cmp
and
mov
jb
mov
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
test
dec
pop
jl
jae
jg
sub
push
sub
cmp
stos
jne
cmp
loopne
in
adc
pop
fiaddl
cmpsb
fsubrl
out
lcall
fcomp
mov
cmp
fistpl
xor
fisttpll
scas
lret
out
add
sub
cmp
inc
mov
inc
test
inc
lods
out
inc
pop
stos
mov
lea
jbe
aas
lock
mov
sub
lds
push
add
test
sub
cmp
int3
sub
cmp
add
ror
sub
mov
js
test
mov
push
fldl
mov
cli
or
mov
mov
jl
push
push
push
test
xchg
out
cltd
add
sti
cmp
sbb
mov
adcl
iret
push
loopnew
out
inc
aad
jno
or
movsl
int3
andl
mov
mov
lret
sti
cld
arpl
mov
std
mov
cwtl
inc
mov
addb
dec
mov
daa
imul
sub
sbb
ret
in
cmpsl
fdivr
xchg
mov
or
in
mov
andl
and
cmp
stc
push
push
nop
mov
cld
arpl
stos
dec
xchg
ds
xchg
jecxz
dec
or
frstpm(287
pop
mov
mov
hlt
repnz
jno
push
mov
and
sub
adc
jmp
jl
mov
sbb
mov
push
cltd
dec
stos
aam
jns
orps
push
rcl
jmp
rcll
push
test
add
notb
jo
sbb
ds
sbb
mov
dec
mov
sar
jecxz
ret
insl
pop
repz
js
xlat
mov
je
inc
mov
in
jo
int
cmp
xchg
jno
cwtl
ja
dec
cmpsb
jb
std
xchg
lods
pop
in
aam
pusha
insl
xchg
xchg
pop
orl
add
or
clc
mov
enter
cmp
jo
es
pop
icebp
push
or
daa
add
pop
imul
lock
and
ss
cmp
cmp
lret
dec
arpl
mov
dec
js
pop
adc
in
fdivrs
mov
push
pushf
cmp
in
stos
jge
dec
or
xchg
and
mov
inc
movsb
jl
mov
dec
shlb
neg
pshufw
jne
sub
or
repnz
xchg
fadds
push
adcl
addl
orl
xchg
mov
mov
jae
xor
outsl
jmp
xchg
icebp
jbe
jp
xorl
mov
call
pusha
repz
fcmove
test
or
dec
mov
subb
jno
inc
push
lahf
mov
cmp
xor
rorl
clc
ja
xchg
xlat
mov
fdivs
cmp
add
sub
or
jbe
loopne
je
mov
movsl
ret
pop
fsubrl
or
and
repz
ds
loopne
aaa
jmp
sub
mov
jns
push
js
push
jmp
adc
jge
test
enter
call
call
jae
dec
stos
ljmp
adc
mov
ja
mov
fsubrl
cmp
push
xchg
imulb
push
add
inc
mov
shlb
inc
fucomp
mov
push
cmp
daa
je
nop
jne
data16
ljmp
fstl
ss
or
or
xlat
mov
adc
arpl
xor
cmp
mov
test
jo
cmp
nop
dec
std
add
inc
inc
adc
cmpsl
sbb
aad
mov
inc
and
call
sysret
mov
aam
pop
ud0
fcoms
orb
cmp
fwait
adc
mov
pop
ljmp
outsl
bound
sbb
adc
outsl
jo
pushf
inc
sbb
pusha
test
lods
out
cmp
and
adc
push
fcmovb
lock
adc
push
pop
arpl
add
push
rep
push
jbe
call
insb
add
mov
out
sbb
jbe
hlt
ds
int3
in
inc
push
mov
flds
mov
js
setnp
insl
ja
xchg
dec
rol
sbb
mov
mov
xor
cmc
test
jmp
xchg
mov
push
out
pop
and
imul
shrb
or
movsb
jg
test
fisubs
jmp
xchg
or
daa
enter
popf
mov
add
pop
and
dec
mov
sub
inc
imul
out
inc
xlat
test
push
pop
jmp
pop
addr16
jle
imul
mov
cmc
pop
push
sti
aaa
mov
pop
cmpsl
dec
dec
sarb
cmpsl
add
cmp
pop
sbb
mov
fstps
and
bound
dec
jne
mov
push
popf
push
add
aam
mov
xorb
repnz
ljmp
mov
imul
xor
imul
stos
mov
mov
xchg
jbe
or
mov
xchg
lock
out
shll
xor
jecxz
repnz
add
insb
cmp
dec
xchg
adc
jae
js
cmc
pop
mov
push
fsts
ja
inc
push
jo
rclb
out
inc
mov
ret
scas
fdivrp
push
outsl
insl
hlt
inc
inc
mov
stc
push
sub
xorb
cmc
in
dec
in
test
sub
bound
adc
outsl
stc
lock
mov
jne
cmp
push
sub
mov
or
insl
repz
ja
fwait
jle
repz
andl
lret
sbb
xlat
jg
cltd
inc
push
ret
inc
mov
jae
adc
ret
sbb
xor
data16
lods
jb
sub
data16
push
daa
sbb
clc
xchg
pop
push
xchg
insl
rorl
xor
push
xchg
mulb
movl
xchg
push
arpl
jecxz
cmp
add
sarl
mov
aad
xor
leave
inc
and
idivl
mov
aam
lock
jno
jge
test
mov
push
push
test
mov
roll
scas
mov
sbb
xchg
pop
adc
int
call
dec
inc
jp
xchg
orb
pop
sub
xchg
jns
stos
inc
negb
jae
mov
movsb
cmp
mov
adcl
jmp
xchg
fwait
jnp
push
in
mov
xchg
fldt
push
mov
ss
dec
jns
testl
lahf
cmp
jbe
lcall
cmp
inc
loope
jns
fwait
jne
jge
sub
inc
mov
fcmovu
mov
push
sbb
into
pop
cmp
pop
xchg
add
test
inc
or
call
ret
insb
dec
addr16
aaa
sub
pusha
repnz
pop
sbb
rcr
push
and
mov
pop
in
lret
mov
insb
dec
mov
cld
mov
and
into
int
jmp
nopl
mov
sub
mov
movsl
push
jge
add
dec
cli
out
xchg
adc
xchg
sub
scas
rorb
pushf
std
add
jl
push
xor
faddl
mov
popa
dec
insb
xor
sbb
jb
jbe
push
cmp
sub
sub
jnp
outsb
xlat
mov
aaa
roll
add
jecxz
mov
or
mov
or
mov
popf
mov
sahf
mov
jg
out
dec
neg
jno
lods
add
push
fcompl
pusha
outsw
cmpsb
or
adc
mov
popa
in
xor
ja
stos
sub
dec
pusha
jl
sar
and
negl
mov
test
jns
push
push
jns
pop
popa
repnz
aas
daa
sti
test
dec
lock
mov
fnstsw
negb
lahf
or
sbb
xchg
mov
mov
xor
mov
outsb
mov
pop
in
xor
popf
mov
inc
mov
xchg
dec
dec
xchg
jmp
mov
fldl
ret
popl
je
dec
rorb
mov
roll
cwtl
dec
sub
fs
and
push
sub
lods
cli
or
andb
or
sub
push
addl
or
and
add
inc
or
mov
adc
pop
or
jnp
lret
jmp
lock
lahf
dec
jbe
jle
sub
sbb
sub
push
scas
test
in
mov
stos
lods
insl
inc
scas
pop
dec
add
jecxz
stos
pinsrw
push
ret
mov
mov
sbb
popf
xchg
mov
lea
push
and
adc
sub
in
sub
and
bound
xor
addr16
je
xchg
mov
fdivs
pop
hlt
mul
hlt
or
jl
ret
mov
sahf
std
shlb
loop
mov
lods
sub
cwtl
inc
popa
cmp
jecxz
add
cmp
ljmp
mov
jno
push
mov
cmc
push
jecxz
idivb
jl
lret
mov
cs
mov
iret
stc
insl
shlb
pop
xchg
mov
in
out
lret
xchg
scas
lods
push
adc
cli
cmp
add
loopne
mov
inc
scas
dec
sbb
pop
xor
push
movsl
jecxz
mov
jo
push
leave
sub
xchg
or
filds
xor
xor
mov
sub
jge
push
xchg
les
cmp
aas
cli
ja
shll
sbb
push
mov
das
int
inc
and
xlat
lea
enter
loopne
cmpsl
sarl
test
adc
and
ja
sub
je
repz
cwtl
lea
cmp
push
sub
jp
pop
roll
or
or
xchg
mov
int
add
pop
xor
sbb
xchg
decb
xor
cltd
imul
repnz
mov
mov
ljmp
pusha
jle
push
mov
jno
lock
sbbl
lods
call
nop
dec
aas
xchg
aas
mov
shlb
lcall
and
mov
test
ficoml
adc
dec
imul
rorb
outsl
xchg
leave
bound
lret
repz
call
xchg
fidivs
lods
mov
sarb
xchg
or
push
out
jbe
test
push
dec
jp
pop
push
jns
mov
inc
lods
inc
clc
hlt
lret
in
inc
ds
mov
inc
das
pusha
add
insb
insl
outsb
sbb
sarl
ss
shlb
lods
js
repnz
cmp
xorb
xchg
dec
cmpsb
stc
rcrb
xchg
push
std
mov
xchg
stos
test
jno
jne
imul
adc
sub
imul
jne
es
pop
cmp
pop
in
cmc
sar
mov
fs
aas
pop
dec
in
mov
jmp
leave
hlt
lahf
or
xchg
sti
pop
pushf
lods
xchg
mov
mov
xchg
ret
mov
jnp
xchg
sarl
add
mov
mov
insl
adc
icebp
addb
nop
fadd
mov
clc
lahf
push
shlb
fcompl
sbb
mov
inc
push
jecxz
mov
fdiv
iret
in
jb
call
pop
in
jp
jo
jo
pusha
addr16
out
xchg
xchg
bound
dec
lcall
and
push
push
arpl
jns
les
inc
push
and
inc
cs
jbe
and
imul
popa
lcall
lahf
mov
add
jbe
sbb
mov
sbb
sahf
push
adc
stos
mov
loop
out
mov
movsb
mov
roll
call
jns
loop
inc
lods
inc
mov
shlb
insb
cwtl
cmpsl
scas
pop
inc
inc
scas
pop
cld
mov
js
xchg
bound
leave
mov
jo
jecxz
lods
push
sub
inc
aas
lods
adc
push
mov
mov
rcrl
repz
lcall
add
mov
ds
iret
inc
ret
adc
clc
mov
int
mov
mov
enter
test
enter
and
xor
into
loopne
fidivrl
cmp
rcl
mov
dec
jae
pop
cmp
mov
mov
lahf
jmp
hlt
shll
xchg
jle
push
test
xchg
cmp
dec
cmp
add
aam
int3
lods
pop
jne
xor
dec
push
outsb
inc
mov
xor
adc
jbe
mov
push
js
pusha
shrl
sar
jp
fcomp
mov
loopne
mov
jno
cmpb
in
cwtl
out
cs
dec
jnp
xlat
ds
call
pop
daa
add
cwtl
fisttpll
mov
jle
testl
dec
jns
xchg
xchg
mov
sub
ljmp
xor
scas
cmpsb
rdpmc
je
jmp
iret
add
faddl
int
mov
lahf
dec
subb
hlt
push
in
je
xchg
adc
lahf
cwtl
xor
mov
inc
dec
add
fistpl
negb
push
inc
imul
aaa
in
xchg
cmp
inc
mov
push
jecxz
dec
xchg
mov
adc
pushf
insb
or
ja
rorl
loope
out
cltd
lods
xchg
and
cmpsb
or
das
cld
fxch
ja
clc
nop
sbb
jo
std
fidivrs
int3
pop
pop
jb
mov
xor
pop
pop
aaa
es
mov
xor
sbb
popa
jae
add
xor
dec
je
nop
sbb
jle
mov
repnz
mov
sbb
add
xchg
imul
add
sbb
insl
pop
fwait
and
cmp
cmp
inc
mov
dec
insb
cmp
add
pop
out
xchg
sub
je
mov
xor
ds
xor
test
inc
arpl
xchg
sbb
and
popa
cwtl
push
push
mov
pusha
xchg
xor
iret
out
and
jg
sbb
inc
mov
test
mov
jae
jge
hlt
xchg
int3
add
and
pop
inc
jp
cmpl
sub
outsl
xor
aaa
xor
push
out
cwtl
inc
aam
or
jae
ljmp
cmpsl
adc
into
ret
xor
aaa
call
jmp
pusha
pushf
add
dec
outsl
stos
jb
xor
jne
push
scas
ret
mov
int
lahf
and
scas
lds
stos
repnz
pop
cmp
test
shlb
xchg
mov
int3
jns
into
ss
jne
mov
cltd
lds
leave
lret
daa
lret
sub
pop
mov
cmp
out
jns
outsb
add
pop
inc
jl
outsl
outsb
add
fsub
call
cltd
sbb
int
scas
mov
leave
lret
pop
insb
push
xchg
icebp
int3
xor
xchg
mov
add
sub
rol
fsqrt
shlb
fsubr
sub
adc
push
fwait
leave
cmp
push
imul
or
pop
sti
fcmovnb
int3
rcrb
jo
pop
mov
test
mov
int3
out
fs
loop
bound
bound
jne
lea
out
fistl
iret
or
sub
ret
scas
or
cli
mov
mov
mov
fadd
pop
enter
mov
js
outsl
xor
adc
adcl
inc
xor
adc
pop
xchg
mov
pop
jecxz
jo
sub
mov
lods
stos
xchg
xchg
adc
shl
push
jae
push
movsl
push
aam
cs
add
sub
cmp
push
fwait
movsl
cmpsl
bound
mov
scas
inc
add
push
mov
dec
adcb
add
sbb
add
jno
fdivrl
xor
adc
push
add
pusha
scas
xor
or
call
inc
sar
in
and
jp
stos
ficomps
push
test
mov
daa
ds
push
pushf
push
rcl
and
adc
fldl
adc
repz
sub
lahf
jle
xchg
nop
add
inc
xorb
or
sbb
mov
mov
loopne
pop
dec
ja
adc
call
add
mov
imul
adc
xor
sub
sub
xor
rclb
leave
out
cmp
test
mov
dec
shlb
cmp
lds
lods
dec
dec
jmp
push
and
inc
xor
mov
ss
lahf
or
mov
rol
pop
mov
aas
out
ret
sbb
dec
lret
mov
add
iret
push
pop
cli
sub
ret
cwtl
scas
shll
pop
gs
add
jge
sbb
fwait
cwtl
cmp
or
inc
rcr
jecxz
xor
jp
hlt
clc
pushf
adc
inc
mov
repnz
sbb
sub
push
adc
adc
mov
cmpl
xchg
push
aaa
mov
cmpsl
add
and
and
mov
xor
lahf
sarl
call
inc
fbld
popa
and
pusha
pop
push
sahf
xchg
pusha
popa
push
jb
unpckhps
movsb
test
mov
je
cld
cmpsl
ja
jle
mov
test
lret
aam
cmp
sub
pop
xchg
in
movl
push
jle
lods
imul
movsb
jb
sbb
popa
sub
ljmp
arpl
ror
sbb
in
or
mov
cmp
fs
xchg
cld
sbb
outsb
or
popa
sarl
sub
ljmp
xchg
orb
xor
xor
dec
test
sbb
cwtl
cmpsb
outsb
rol
lcall
jmp
int
mov
mov
push
imul
int3
dec
js
jl
add
nop
and
inc
into
arpl
fxch
or
cmp
mov
fcomps
xor
xchg
loop
jb
leave
dec
cmpb
mov
sub
pushf
imul
and
fstp
inc
xor
push
arpl
ss
out
and
shlb
mov
pop
mov
xchg
mov
popf
inc
push
cli
cwtl
sub
cmp
or
sbb
and
daa
sti
sub
sbb
push
cmp
bound
ret
mov
xor
xor
push
js
test
cmp
xor
inc
xchg
jp
add
jnp
ficomps
ret
mov
aam
mov
cmp
ljmp
adc
and
mov
or
gs
inc
pop
or
dec
sbb
jns
lea
mov
sub
dec
cmp
xchg
ret
add
cmpsb
lret
test
cmpl
add
subb
xor
ror
push
movsb
pop
mov
and
cmp
xlat
leave
cmp
ja
cld
adc
and
loop
data16
pop
aad
loop
sub
hlt
mov
dec
out
dec
das
out
ljmp
and
mov
iret
aas
ret
jge
push
in
xchg
out
pop
shlb
xor
ja
pop
mov
insb
out
mov
pop
jl
rorl
push
lahf
mov
jle
call
loope
xchg
enter
popa
imulb
inc
fld
xor
js
stos
dec
adc
loope
jmp
sarl
in
add
rcll
pushf
xchg
pusha
mov
popa
gs
mov
sarl
aaa
xor
add
add
cmpl
repz
mov
mov
sub
inc
push
mov
bound
popa
mov
pop
pop
mov
mov
push
cli
and
inc
add
popf
ljmp
shll
jae
gs
scas
push
and
adc
pop
mov
nop
or
push
xchg
aas
sub
fs
mov
xchg
mov
imulb
in
stc
in
sub
push
jecxz
jb
mov
adcl
push
jne,pn
sarl
xor
fwait
cli
clc
mov
xchg
aam
data16
sub
test
cmp
mov
or
mov
dec
dec
adc
das
or
lock
ljmp
sub
movsb
dec
mulb
jns
scas
jge
adc
les
add
add
dec
jle
jle
jb
ficoms
js
pop
fimull
je
cmp
jne
xor
scas
pop
mov
jp
cmpsb
and
int3
push
push
push
and
mov
mov
test
jecxz
xor
jp
test
push
mov
insl
sbb
add
je
mov
dec
imul
cs
ror
cmp
scas
imul
dec
dec
jg
call
out
enter
jnp
push
fdiv
push
lods
stc
pop
inc
ss
cwtl
repnz
xor
sahf
out
sar
movsb
popa
jns
shlb
jb
bound
ficoml
and
cmpsl
or
aad
sbb
inc
sbb
jmp
or
notb
pop
out
rcll
aad
sti
fisubrs
adc
ret
jle
fistpll
jo
push
mov
out
imul
ret
in
fcompl
and
data16
aaa
xchg
lret
cld
pushf
into
mov
pop
push
or
divl
inc
cmova
sbb
push
loop
dec
pop
pop
jg
inc
and
imul
or
mov
mov
int
dec
lahf
aaa
std
push
jb
stos
pop
loop
in
fnstenv
test
in
stos
std
and
std
mov
out
out
push
ja
adc
mov
xchg
add
ja
je
push
or
cmp
es
xchg
fs
jmp
add
cmp
xor
sbb
mov
enter
fxch
sbb
popa
and
dec
in
aad
mov
mov
xchg
sbb
mov
inc
loop
pop
adc
inc
int
mov
daa
mov
cmp
ljmp
hlt
mov
or
ficomps
sub
dec
aas
dec
mov
pop
pop
lds
outsl
ljmp
shl
sbb
pop
rcll
adc
fwait
roll
aas
out
push
and
jle
mov
pop
mov
add
add
js
mov
xor
ret
or
clc
popf
add
in
pushf
pop
cmp
sub
movsb
dec
pop
ss
mov
xlat
pop
adc
subb
or
jns
call
out
add
mov
repz
repz
pop
dec
inc
mov
into
pop
and
add
xor
test
push
cmp
ret
pop
and
sub
ds
ds
adc
adc
mov
xchg
adc
pop
test
sub
lds
sbb
push
std
popf
xor
mov
pop
pop
arpl
push
inc
xchg
lock
fimuls
mov
mov
dec
cmove
jne
and
sub
sbb
pop
or
mov
push
or
icebp
push
out
or
mov
sbb
xchg
jp
jmp
dec
pusha
loopne
adc
shll
fmulp
repz
adc
loop
test
xor
pop
ret
outsl
adc
jle
bswap
or
cmpsl
inc
int3
xchg
mov
cwtl
xchg
test
mov
xor
outsb
mov
adcb
xor
aam
dec
xchg
fcomi
cmpl
pop
add
mull
cmc
xor
fwait
outsl
dec
xor
pop
add
pushf
adc
xchg
bnd
sub
or
jecxz
xor
pop
aas
push
rolb
arpl
mov
popf
cli
jo
and
cmp
loop
xchg
sub
cld
cwtl
mov
leave
push
push
lds
inc
scas
xor
shrl
lret
xor
push
pop
xor
push
pop
popf
mov
jns
sbb
lea
sub
adc
cmp
xchg
add
sub
bound
aad
out
mov
mov
pop
pop
inc
adc
push
jnp
or
add
cmp
movsb
out
aam
cmc
cmpsl
mov
loope
imul
fidivrl
adc
pop
jg
jmp
mov
xchg
adc
mov
pop
xor
into
bound
xchg
cmp
and
dec
rcrb
mov
adc
pop
cmc
aad
inc
mov
out
cwtl
push
push
into
stc
cltd
pop
aam
and
stos
inc
insl
cld
mov
sub
pop
outsl
xor
int
lock
jmp
mov
cltd
shl
pop
jl
stos
imul
rcrb
testl
popa
jge
pushf
jne
mov
xchg
adc
pop
inc
xor
xor
xchg
xchg
jg
or
rclb
sbb
dec
jno
repz
stc
inc
lcall
mov
adcl
fnop
add
push
push
cwtl
add
sbb
int3
mov
sbb
lock
xchg
jl
movsb
mov
std
in
xlat
sbb
inc
fists
mov
xchg
push
lahf
arpl
ret
push
daa
cli
mov
std
xlat
xor
das
fnstsw
repz
call
push
insl
enter
xchg
adc
add
jo
aaa
cwtl
enter
mov
negl
mov
call
push
push
adc
scas
dec
lret
mov
or
cwtl
jle
pop
out
js
adc
lods
insb
xchg
fidivl
ja
or
out
enter
outsl
pop
mov
int3
inc
add
sub
cmp
icebp
mov
fldenv
movsl
orb
push
jmp
mov
mov
add
lds
xchg
aas
pusha
or
es
sbb
or
imul
cmp
mov
mov
mov
ss
js
mov
sbb
les
movsl
in
jb
fwait
mov
mov
lds
mov
repz
jno
sti
roll
add
or
es
push
sbb
pop
outsl
scas
inc
adc
imul
fwait
jae
sahf
js
xor
sbb
fildll
cmp
mov
test
pop
xchg
cld
mov
sbb
mov
mov
cmc
push
push
cld
int
mov
push
or
notl
rclb
in
dec
in
add
adc
mov
mov
fsubr
mov
stos
dec
pop
jnp
sbb
add
adc
pop
jp
sbb
loop
fstpl
sbb
or
dec
jp
push
or
inc
or
es
in
pop
jns
dec
push
fcoml
and
add
aaa
cmp
std
jnp
ret
inc
fcoml
or
inc
enter
popf
dec
iret
stc
andl
jmp
mov
push
pop
test
pop
shrb
cmpsl
xchg
jg
jns
cs
out
mov
arpl
jno
es
stos
pop
adc
jmp
xor
mov
push
jnp
mov
es
inc
stos
mov
cmc
inc
and
or
jb
pop
leave
mov
rorl
mov
add
mov
jl
cltd
xor
ret
loope
outsl
jle
aad
xor
push
adcb
push
out
or
and
cmp
sbb
adc
fistpll
and
gs
aas
jl
rol
out
das
pop
aas
mov
cmpsb
out
mov
aas
and
xchg
ret
insl
imul
mov
push
add
movsl
jecxz
fisttpl
pop
jle
pushf
pop
mov
add
bound
inc
inc
aam
ret
xchg
cli
sub
int3
sti
lahf
loope
sub
in
bnd
or
std
mov
inc
inc
or
outsl
cld
int
fldt
je
loopne
bound
shll
mov
scas
jbe
cs
jns
mov
lea
and
aaa
push
mov
int3
or
push
jp
cmc
hlt
pop
xor
icebp
scas
and
add
movsb
test
and
cmpsl
mov
sbb
jno
mov
call
es
add
mov
lcall
jns
imul
sar
mov
sbb
jne
cmpsb
ja
jmp
test
xchg
sbb
jbe
mov
rcrb
xorl
mov
aam
sub
in
sahf
mov
mov
lahf
xchg
push
mov
mov
out
add
jne
or
mul
cli
push
shrl
aad
shll
jno
or
pop
lea
lret
mov
enter
popa
mov
lcall
inc
jg
mov
sub
jmp
movsl
mov
ret
cmp
sbbl
lahf
cld
sbb
lock
lret
js
int3
mov
inc
mov
mov
fwait
push
adc
shll
adc
mov
lock
cwtl
test
fcomps
inc
xor
sbb
mov
or
sub
cwtl
push
inc
std
call
xchg
cmc
jbe
adc
rorb
ds
push
daa
xor
or
repz
pop
subb
ds
pop
fwait
add
cmc
nop
lods
loopne,pt
mov
pop
push
test
mov
mov
in
push
xchg
hlt
enter
xchg
subl
dec
aad
pop
xor
adc
mov
daa
adc
adc
in
jo
sub
adc
std
push
pop
imul
fstps
jg
test
pop
mov
nop
mov
jnp
sub
out
jge
stos
lahf
adc
sti
xchg
mov
mov
fisubs
lock
sahf
out
and
inc
adc
stos
cs
xchg
aaa
sti
pop
out
or
ret
xor
rorb
jb
loopne
std
push
roll
mov
mov
pop
inc
sbb
and
ja
add
orb
rolb
or
push
lods
pop
lods
ja
scas
lods
xchg
aas
mov
jae
jle
push
leave
pop
mov
push
outsl
pusha
mov
lea
push
fmuls
addb
fidivrl
adc
imul
das
icebp
cmp
add
jl
mov
cmp
push
mov
xchg
sbb
sti
cmp
loopne
data16
pop
jne
push
das
jb
mov
inc
xchg
bound
cltd
imul
int
in
insl
js
sub
inc
sub
pop
into
idiv
in
imul
cmpl
and
ja
adc
xchg
jns
xor
leave
inc
mov
bound
loopne
pop
imul
lahf
lds
sbb
push
jl
xor
mov
adc
jns
nop
repnz
popl
out
popa
outsl
lret
jnp
or
jg
or
push
mov
xorb
out
sbb
lcall
sub
mov
pop
fisttps
stos
gs
pop
sub
sbb
arpl
sub
lret
jle
and
daa
mov
cmp
sub
push
push
push
in
pop
lret
or
leave
rcr
xchg
pop
cmp
push
push
rol
pop
insb
xor
sub
sbb
rolb
jnp
lcall
sub
mov
pop
sbb
movl
popl
hlt
mov
rcr
jle
add
dec
pop
fstl
repz
popa
dec
push
popa
sub
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
dec
and
pop
jl
ret
cwtl
lock
in
push
test
push
mov
mov
adc
in
int
cwtl
xor
cmp
push
sub
ret
ds
add
pop
add
mov
int
lods
mov
add
movsb
loopne
hlt
leave
pop
or
sbb
jg
sub
mov
mov
bound
mov
pop
jecxz
push
ss
pop
mov
or
clc
dec
or
sub
cmpsb
icebp
enter
mov
in
std
add
out
jo
sub
fstl
fstpt
imul
mov
xor
xchg
pusha
push
inc
cmp
push
mov
loop
pop
cmpsb
or
adc
jbe
mov
daa
enter
jge
cld
adc
test
push
xchg
cmp
loope
insl
movsl
jne
fcoml
aaa
or
fisttpll
or
dec
insb
xchg
mov
add
movsl
imull
pop
mov
inc
xchg
adc
in
push
and
out
mov
dec
in
enter
test
lahf
out
leave
mov
movsl
lea
inc
out
mov
cmpsb
in
or
xor
in
dec
pop
gs
shl
cld
mov
idivl
or
out
flds
mov
decb
xor
mov
mov
imul
testb
mov
sarb
int
and
sahf
lahf
pop
movsb
add
or
leave
loop
adc
pop
push
jle
daa
dec
sub
jle
gs
dec
or
arpl
jns
dec
outsb
jecxz
stos
adc
jmp
hlt
jbe
push
push
inc
push
add
sbb
or
jl
movsl
or
cwtl
push
adc
inc
ds
jle
sub
dec
xchg
mov
mov
cmp
loopew
inc
mov
xchg
or
repnz
incl
popa
cld
rol
lods
jl
mov
scas
lock
xchg
test
pop
clc
es
fwait
jb
jmp
cmp
xor
cs
pop
jnp
ljmp
adc
aas
adc
dec
test
jle
add
push
aam
sbb
mov
mov
xchg
push
cmp
mov
adc
inc
es
test
dec
int3
adc
and
mov
lds
ljmp
ficoms
daa
mov
ret
inc
inc
jo
jne
lods
test
push
test
mov
push
xor
insl
lods
mov
and
sti
xor
cmp
add
addr16
int3
pop
push
movsb
push
sahf
cltd
lock
add
or
push
or
and
xor
lret
mov
dec
mov
rolb
notl
int
lods
kaddw
xchg
clc
dec
ljmp
sbb
mov
inc
cld
cmp
les
add
jns
int3
outsb
add
xor
sub
imul
sbb
cmpb
ficoml
aas
push
inc
popf
fnsave
xchg
in
jb
out
add
push
movsb
in
mov
loop
and
scas
mov
jl
in
and
inc
int3
out
cmovno
out
aam
popa
sub
sbb
jecxz
ror
data16
in
test
cmp
movsb
xchg
inc
stos
fcoms
imul
fldl
movsl
subb
xlat
shrb
aaa
cs
mov
dec
int3
out
hlt
mov
aaa
xchg
pop
je
jl
xlat
out
lretw
mov
mov
lds
imul
mull
cmpsb
jno
or
out
or
rcll
lods
repz
arpl
out
mov
cmp
movsl
pop
incb
push
sarb
jle
ret
andb
outsl
jmp
dec
add
sub
sbb
inc
gs
xchg
mov
fidivl
push
or
push
movsl
adc
or
mov
dec
jl
mov
pop
add
movsb
iret
cmp
in
mov
outsb
sbb
js
jp
mov
loopne
pop
xchg
ud0
pop
in
cld
xchg
enter
mov
std
addr16
adc
loopne
sub
je
loop
push
divb
repnz
add
adc
lods
daa
adc
mov
sub
mov
enter
cltd
lret
jecxz
cmp
jmp
out
xchg
sub
jne
lds
lods
cmp
xchg
sub
ja
loop
mov
sahf
out
in
cmpsb
imul
cmpsl
adc
xor
push
jecxz
jae
aam
movsl
pop
mov
add
shrb
and
and
dec
mov
push
scas
loopne
or
add
jne
gs
insl
fadd
mov
cmp
mov
xor
or
test
call
push
mov
or
mov
add
clc
sbb
das
lds
test
dec
imul
dec
xor
xor
inc
shlb
movsl
lcall
mov
push
mov
andb
mov
jge
and
sbb
js
repz
pop
dec
scas
lcall
adc
pop
pusha
inc
movsl
push
movl
pop
ljmp
out
mov
xchg
loop
call
lock
jl
xchg
push
ljmp
push
ret
xor
add
loop
lret
mov
cld
mov
lret
pop
icebp
push
repz
ljmp
in
fcomp
in
jl
mov
pop
xor
daa
jp
push
and
cmp
das
imulb
xchg
in
and
xor
jno
sbb
mov
shlb
pop
sub
out
mov
or
cwtl
icebp
popa
es
lods
xchg
pop
push
mov
sub
pop
stos
add
cmp
cmp
subl
std
insb
adc
cld
gs
and
xchg
sarb
clc
int3
clc
push
rolb
pop
xchg
push
push
int
push
push
mov
out
or
mov
in
pop
in
in
push
pop
push
push
push
xor
test
enter
add
ljmp
push
or
lret
cld
test
cltd
sub
cltd
or
lods
loope
jne
or
or
jle
jno
repz
dec
inc
xlat
jl
jp
mov
add
aaa
adcb
xchg
mov
pop
das
lods
xor
negl
xor
outsl
daa
loopne
sbb
testb
xchg
inc
shlb
mov
pop
mov
insb
inc
sub
xchg
add
mov
mov
add
pop
mov
fistpll
clc
fidivrs
test
or
test
jl
idivl
icebp
adc
jbe
and
dec
movsb
addr16
cmpsb
push
sbb
test
jg
push
sbb
out
stos
je
adc
add
sarb
adc
lret
inc
push
cmpsl
and
nop
xor
dec
adc
cmpsb
pop
mov
clc
aad
pop
push
sahf
pusha
lar
ss
pop
xchg
mov
cmc
cmp
xlat
aas
ss
in
dec
mov
jge
mov
test
aaa
loop
fs
cwtl
jne
cltd
andb
lcall
pusha
test
mov
jge
subb
popa
xchg
out
sarl
jne
add
icebp
jp
lcall
pop
nop
mov
push
mov
sub
jmp
pop
shrb
sub
sbb
inc
inc
push
mov
int
repnz
out
jg
and
cld
mov
ss
xchg
adc
stc
into
hlt
mov
test
add
mov
addb
test
mov
mov
xchg
adc
fwait
sbb
dec
cmc
jg
xor
inc
es
imul
sti
in
add
out
or
cmp
add
xchg
cmp
lret
bound
inc
les
xor
insl
dec
dec
scas
add
aas
imul
andb
test
mov
push
fcompl
adc
arpl
jmp
cmp
scas
insl
and
mov
in
in
or
mov
push
xor
insb
push
pop
jne
push
ds
fdivp
jo
sub
add
daa
jno
popa
andnps
es
pop
repnz
push
inc
dec
push
inc
and
stos
outsb
je
sbb
shrl
dec
add
repz
fnstsw
aaa
inc
sub
stc
shl
mov
js
in
dec
out
add
popa
sbb
xchg
enter
and
mov
pop
test
adc
xor
ret
sub
out
pop
jg
dec
xor
addr16
push
pop
add
dec
pop
lock
cmpsb
mov
sbb
int3
addr16
xor
mov
mov
jecxz
add
dec
inc
cmp
inc
xchg
inc
ds
cmpsl
filds
dec
xor
imul
dec
repz
push
mov
push
addb
sub
int3
pop
test
aam
imul
pop
shl
in
or
add
bswap
inc
xor
enter
sub
xlat
mov
sbb
cmp
jnp
cmp
js
pop
jge
cmp
or
mov
adc
adc
mov
movsb
out
imul
add
jb
cli
addr16
push
push
lods
mov
mov
bound
jle
add
cmp
push
mov
imul
movsb
jb
fstpt
and
and
mov
sub
popa
and
das
xchg
dec
sub
dec
es
test
bound
sbb
repnz
adc
sbbb
sbb
xchg
sbb
xlat
in
mov
lods
push
fnsave
ret
xchg
sub
or
in
add
sbb
jae
adc
scas
stc
repz
sbb
scas
fwait
cmpsl
rcrb
inc
pop
xchg
imul
stos
push
mov
dec
dec
pop
jge
xchg
dec
dec
es
push
popf
pop
inc
xor
mov
xchg
xchg
out
pop
aad
clc
int3
leave
or
inc
cli
shlb
xchg
mov
push
dec
xchg
outsl
adc
pop
das
sub
cmovae
mov
lcall
test
es
pop
in
push
enter
es
jae
int3
push
iret
ret
mov
and
std
mov
pop
popa
jae
in
or
push
cs
outsl
lea
jg
mov
test
loope
lret
aad
dec
ljmp
pop
imul
iret
das
ljmp
jl
xor
in
mov
je
mov
in
inc
repnz
out
lods
jle
sub
add
push
outsl
mov
rolb
test
xchg
in
fcoms
sub
imul
add
out
mov
lds
jno
mov
outsl
mov
loop
inc
orb
mov
push
cmc
sub
mov
push
into
lret
adc
scas
imul
pop
cwtl
add
xchg
stos
shll
mov
mov
cld
scas
lods
sub
xlat
or
dec
mov
sbb
sub
sahf
daa
pop
xchg
pop
and
push
pop
cld
clc
das
adc
in
dec
pop
aas
add
jmp
fs
xchg
pop
movsb
js
aaa
cli
xchg
ss
dec
mov
xchg
adc
lods
push
and
test
and
jge
sti
cwtl
aaa
dec
inc
jb
insb
inc
stc
mov
fnstsw
loope
and
dec
xor
sub
and
stos
loop
jnp
cmp
dec
cmp
sub
cs
add
fwait
mov
imul
adc
aaa
inc
mov
movsb
mov
push
sarb
iret
xchg
jno
mov
or
cmp
lahf
icebp
cmp
dec
cli
hlt
lock
enter
jbe
lods
push
adc
ret
out
xor
lods
fsts
addr16
add
mov
lcall
loopne
imul
leave
pop
pusha
xchg
in
push
arpl
mov
pop
sti
pop
xorl
fnstcw
lods
jnp
mov
out
mov
mov
into
addl
std
in
fadds
inc
sbb
subl
push
test
mov
jle
femms
jae
imul
cld
mov
out
jecxz
dec
ja
in
outsl
push
pop
lods
xchg
cmp
xchg
insl
pop
ds
cmp
lcall
or
das
popa
fwait
jnp
mov
roll
dec
imul
adc
mov
lret
xor
cmp
pop
dec
movsl
mov
ja
sbb
xchg
in
pop
mov
test
push
hlt
imul
cmc
jmp
push
pop
inc
mov
in
shll
outsb
cli
ffree
xchg
mov
in
push
mov
dec
cmpb
push
pop
sahf
pop
pop
mov
mov
mulb
cmp
jns
lods
cmpsl
push
sub
cld
rclb
fldt
inc
aam
push
cmp
mov
xchg
mov
pop
adc
cwtl
into
mov
out
sbb
add
pop
daa
mov
je
or
and
inc
xor
xchg
jecxz
outsb
dec
mov
repz
and
mov
xor
out
outsl
jmp
ja
xor
ja
or
lea
push
popf
adc
insl
jno
cmp
and
sarb
dec
adc
adcb
es
dec
repnz
sbb
les
pop
rcrl
dec
scas
cmpsb
or
mov
iret
xchg
lret
scas
out
adcb
rcll
and
jae
std
outsl
cmp
loop
push
xchg
lret
daa
clc
push
cmp
push
sub
or
sub
aaa
inc
or
adc
hlt
pop
jecxz
test
aam
xchg
cmp
jmp
sub
cmp
inc
or
wrmsr
mov
xlat
dec
cmp
mov
mov
out
cld
push
sub
xorb
lock
add
repz
mov
sarl
sub
loop
andb
iret
sbb
fwait
push
pop
cmp
sub
into
mov
popf
idivl
mov
and
xchg
jbe
mov
push
push
dec
dec
pop
stc
fldenv
mul
stos
lods
xlat
scas
cltd
push
icebp
add
add
jmp
aam
scas
cmp
out
cmp
stos
lea
rclb
fwait
adc
mov
sbb
pushf
pop
add
repnz
inc
or
sbb
jno
add
inc
add
mov
test
push
dec
push
mov
push
jle
mov
jecxz
push
pop
pop
lods
xchg
std
sbb
repz
iret
xchg
dec
sbb
mov
pcmpgtw
xor
rcl
xchg
in
push
jo
xchg
mov
ds
bound
sti
push
push
lahf
or
enter
mov
in
data16
testb
call
setne
cmp
xor
movsl
mov
cmp
ja
mov
fnstsw
push
adc
out
lock
pop
inc
sbbb
cwtl
rorl
rcl
pop
loope
or
xor
push
pop
mov
out
pop
in
inc
push
orb
in
push
les
jp
out
push
inc
or
pop
call
dec
pop
mov
and
add
adc
pop
imul
xor
cmp
lret
mov
xchg
cli
inc
mov
mov
lret
stos
mov
in
sbb
inc
mov
stc
dec
push
xor
jo
push
pushf
dec
xchg
in
pop
jae
aad
jb
and
push
rorb
imul
cmp
or
in
bound
inc
xor
fwait
pop
fdivs
aad
out
push
push
int3
pop
fdivrs
leave
test
and
xor
popa
sahf
fbstp
das
and
or
outsb
je
cmpsb
push
adc
das
popa
and
pop
call
dec
cmp
jecxz
lret
shrl
adc
xchg
inc
stos
mov
ljmp
inc
outsl
je
pop
sub
inc
stos
sub
xchg
or
jg
pop
mov
loopne
pop
sub
in
inc
je
dec
and
cmpl
lods
cmp
popa
pop
pop
jl
push
lock
jae
test
pop
and
imul
cmc
sub
mov
push
scas
ja
jmp
mov
in
test
scas
out
or
dec
in
loop
lods
mov
lods
lods
push
arpl
push
insb
and
cmc
imul
popaw
mov
js
push
mov
jmp
ret
icebp
data16
ds
imul
sbb
in
in
sbb
xorb
dec
popf
lahf
sub
add
push
xor
push
daa
mov
cmpsb
sub
stos
daa
or
les
mov
xor
lea
and
icebp
or
add
stc
sbb
loopne
rorb
xlat
popf
fs
and
lret
lds
fldcw
enter
or
sub
xchg
outsl
bound
jae
addb
cmpsb
or
lahf
je
js
scas
stos
add
in
cmpsb
mov
push
push
and
stos
movsb
stos
jmp
mov
push
or
xchg
push
lret
pop
push
jns
adc
xchg
stc
sbb
lea
ss
mov
test
aam
cmp
imul
lods
ret
fmul
aas
nop
ret
fsubl
in
outsb
mov
xor
aam
and
mov
lock
and
adc
cltd
cmp
mov
mov
push
mov
push
into
pop
scas
cmc
jp
sbb
mov
and
xchg
lret
push
lock
es
add
dec
push
popa
je
hlt
fincstp
push
call
mov
sbb
int3
inc
jnp
lahf
mov
shrl
cmp
jecxz
dec
ja
in
dec
push
mov
fnstenv
imul
mov
cmc
inc
into
sub
inc
sbb
inc
ja
inc
das
mov
add
mov
or
lods
je
cmp
xchg
addb
sbb
xor
into
adc
jae
sbb
mov
aaa
jg
cmp
inc
cli
ret
call
xlat
imul
cmp
lods
sub
mov
xchg
dec
mov
mov
jp
mov
adc
ljmp
mov
mov
cmp
sahf
loop
push
mov
cmc
or
or
xchg
cli
mov
out
je
cmp
jmp
out
push
icebp
leave
push
shll
inc
jge
push
mov
mov
push
cmp
pop
add
fldcw
and
out
inc
into
int3
ja
repnz
mov
mov
mov
pop
pop
out
hlt
pop
lock
mov
frstor
push
sub
push
mov
addr16
rclb
loope
add
sub
cmpsl
pop
sub
cmp
adc
adc
sbb
sbb
shlb
test
leave
cs
or
adcl
cltd
imulb
add
imul
stc
mov
xchg
out
mov
push
jb
push
cwtl
adc
inc
or
ljmp
pop
in
iret
add
xchg
xchg
jecxz
sub
fstpt
dec
push
sbb
daa
pushf
jno
mov
ja
push
mov
cmpsb
lods
pop
jns
sub
icebp
adc
imulb
xrelease
out
cmc
push
mov
and
sub
jmp
or
mov
dec
aaa
les
test
cmp
cmp
sub
in
fucomip
push
push
sahf
push
dec
mov
dec
or
or
outsl
sbb
mov
and
mov
jae
mov
ror
xchg
jle
mov
mov
std
cmp
push
jo
xor
jmp
or
test
mov
ja
test
fstp
pop
jns
sahf
or
mov
cmovp
pop
dec
bound
addr16
mov
mov
dec
stos
aas
dec
add
cmp
xchg
data16
imul
sahf
inc
int
mov
js
mov
push
adc
pop
repz
jno
stc
imul
mov
addb
gs
mov
cwtl
push
add
ja
aaa
call
out
out
push
sbb
mov
mov
cmp
xchg
pushf
sahf
jg
bound
sub
fadd
loope
jns
and
xchg
jp
hlt
sub
adc
push
push
dec
cwtl
push
call
jmp
ljmp
scas
and
movsl
arpl
mov
mov
fsubl
in
or
shlb
inc
out
xlat
loop
arpl
and
push
ret
xchg
xchg
aam
dec
pop
pop
jae
and
jge
jp
daa
cs
sbb
aam
subb
mov
aas
xchg
fidivl
xor
dec
sarl
push
ror
adc
nop
in
mov
shl
daa
jae
fisubrs
bound
enter
mov
in
insb
cmpsl
dec
movsb
xchg
in
push
mov
aam
aam
mov
and
lcall
mov
cli
push
dec
cmc
add
pop
pop
dec
lret
mov
out
ljmp
aam
jge
xor
in
fcoms
out
lds
and
ja
outsb
xor
add
cmc
lret
js
pop
xor
in
addl
popf
hlt
cli
inc
xchg
pop
sbb
mov
loop
jp
call
sbb
scas
cli
mov
sbb
loopne
adc
sbb
dec
fwait
mov
jo
sub
mov
adc
sbb
mov
and
cs
aas
stos
stos
jg
mov
pop
xor
call
xchg
add
sub
jecxz
pop
xor
push
ljmp
test
or
or
push
dec
loope
rcrl
ljmp
sub
pop
inc
leave
enter
dec
add
inc
cmc
sub
mov
fistl
dec
adc
inc
sbb
inc
jb
ret
mov
add
or
jge
pop
mov
ret
dec
jno
xor
in
sbb
lea
into
inc
add
addr16
adc
jl
outsl
xchg
fwait
or
and
js
shlb
and
sbb
imul
popa
add
ficoms
or
sub
lods
arpl
andl
stc
or
lcall
fs
pop
fimuls
jle
push
xor
push
push
jnp
shrd
and
or
dec
mov
movsl
push
rcr
jg
subb
fldcw
mov
add
out
mov
imul
or
loopne
or
ss
fwait
mov
dec
sub
push
rcrl
cmp
fnstcw
cmc
punpcklwd
cmp
in
gs
nop
mov
lcall
jl
push
cmp
adc
inc
lea
and
cld
out
lods
jmp
ljmp
hlt
add
mov
cltd
mov
adc
cmp
popa
in
jmp
test
cmpsl
cld
mov
push
dec
sti
nop/reserved
adc
add
jmp
add
dec
sbb
dec
vmovaps
dec
cmpsb
push
je
pop
fdivrs
je
and
cli
jl
inc
mov
dec
out
insl
test
orl
jns
push
addr16
and
scas
push
ja
and
rsm
ja
es
cmp
daa
pop
mov
dec
mov
and
mov
add
adc
das
pop
ja
mov
cmpl
ret
ret
imul
mov
mov
or
cmp
cmp
pop
cltd
pusha
cmp
clc
shll
sbb
mov
adc
sub
pop
dec
lret
mov
push
rcrb
lds
push
enter
mov
xchg
es
mov
dec
and
iret
push
push
in
mov
movsb
jle
sti
int
adc
push
sti
cli
out
xchg
cwtl
mov
jae
ljmp
negb
in
fwait
cmp
cmp
mov
test
gs
movsb
pop
jge
jp
inc
jl
js
sbb
pop
fisubrs
xor
lret
xchg
addl
pop
into
xchg
aad
mov
stos
push
mov
mov
fs
jbe,pn
or
fnsave
aaa
xor
inc
insb
ds
adc
inc
in
mov
mov
jbe
fidivrl
pop
push
ljmp
push
xor
aam
das
lods
aas
sub
aaa
mov
dec
cli
es
sbb
push
adc
mov
shlb
lds
sbb
scas
fsts
ds
cs
adc
lods
cli
pop
dec
cmp
adc
clc
sahf
in
mov
xchg
test
test
sarb
inc
mov
pop
inc
xchg
sahf
in
xor
xchg
out
bound
or
iret
dec
sbbb
sub
insb
dec
xor
cmp
lahf
xlat
es
xchg
and
xor
clc
lahf
lcallw
out
pop
lret
call
int3
cwtl
inc
pop
aas
dec
jecxz
testl
incb
in
test
xchg
shrl
into
out
xor
mov
in
movsl
mov
sbb
data16
imul
fstpt
mov
stos
cli
mov
inc
shld
jae
mov
sahf
mov
das
xor
cmc
dec
dec
push
push
loop
mov
subl
aam
cmp
cmc
jge
pop
mov
outsb
lock
test
and
cld
ret
adc
dec
push
adc
icebp
mov
cmp
test
cmp
imul
jl
dec
notb
loop
xchg
daa
xchg
mov
cmp
aaa
mov
add
cwtl
pop
mov
push
jb
mov
or
out
insb
and
jnp
stos
mov
scas
and
xor
push
add
dec
das
or
xor
xor
mov
in
ja
xorb
pop
les
mov
xchg
xor
pop
sarl
fimull
fldenv
sub
dec
jbe
push
mov
fmull
addr16
mov
adc
popa
dec
icebp
popf
stos
ss
into
mov
cmp
sti
adc
mov
mov
fcmovnbe
aam
daa
stc
xor
ss
ljmp
fadds
pop
enter
add
jg
and
ljmp
mov
rorb
xchg
das
popf
jge
test
mov
mov
xor
push
pop
add
sarb
lea
sbb
daa
or
stc
lret
scas
cmp
cmpsl
mov
xchg
imull
or
cmp
aas
sbb
pop
add
adc
insb
inc
cwtl
adc
add
cmp
testl
out
addr16
int
cmp
jp
fs
pop
cmpl
inc
add
or
add
inc
lcall
sbb
jmp
test
pop
and
je
and
les
xchg
cs
pop
adc
lods
adc
pop
and
add
idivl
dec
fsubs
and
cmp
jno
fnstsw
mov
enter
push
orb
and
mov
or
xchg
sbb
or
xor
out
add
pop
and
dec
aad
repnz
sbb
cmp
cmp
add
scas
gs
pop
shlb
ja
out
popa
bound
incb
ljmp
into
xchg
js
or
add
push
mov
xor
mov
fwait
and
push
call
sbb
or
cmpsb
xor
ret
pop
sub
xchg
cmp
sar
pop
jg
out
mov
inc
ds
gs
int3
out
jle
mov
popa
inc
imul
adc
xor
insl
nop
push
adc
insl
imul
lcall
push
mov
mov
adc
sbb
or
pop
fs
add
imul
call
mov
pusha
icebp
mov
cmpsb
jmp
push
les
hlt
mov
dec
cmpsl
push
inc
jp
test
out
add
and
fsubrp
cwtl
in
sub
aas
jge
addr16
rorb
lock
leave
sbb
out
xchg
dec
aaa
stos
mov
ret
or
lds
scas
pop
cmp
mov
fmull
mov
repz
cmc
jae
jo
std
mov
add
fstps
push
add
lods
movsb
jg
sub
cmpsb
dec
vmwrite
lea
add
mov
cmpsl
adc
subl
popl
addl
andb
mov
jecxz
neg
pop
in
adc
das
pusha
add
lret
aam
int
mov
mov
adc
jecxz
bnd
movsl
sub
loope
sahf
aaa
popa
mov
xchg
call
scas
xor
jno
enter
mov
mov
add
fsubrl
inc
sar
addr16
imulb
mov
shrb
loope
push
insb
dec
das
push
rorb
inc
inc
xchg
or
or
mov
addl
mov
jnp
cmp
hlt
shlb
outsl
mov
cmp
pop
leave
sub
es
dec
push
out
idivl
loop
add
push
adc
stos
push
mov
jge
add
fdivs
mov
pusha
out
out
push
xchg
jp
nop
adc
inc
add
add
push
inc
aas
dec
aaa
shll
jns
xor
dec
or
mov
xchg
pop
inc
adc
mov
stc
int
lret
sahf
dec
in
mov
mov
sub
les
xlat
in
out
loop
jb
mov
std
stos
int
bound
mov
cmp
notl
jnp
int
ret
push
icebp
clc
jo
les
faddl
fdivrs
xchg
xchg
or
push
xor
add
pop
mov
scas
and
xor
enter
push
pop
test
adc
sbb
mov
add
mov
xchg
sbb
lret
add
pop
ret
xchg
dec
sbb
jge
addb
cli
in
xchg
test
cld
inc
or
xlat
sub
int3
xchg
icebp
jmp
fstpl
mov
push
xchg
pop
mov
jg
dec
mov
rol
aas
std
stos
mov
cmp
stos
cmpl
push
insl
mov
call
jp
pop
sub
dec
adc
push
out
sti
cwtl
ret
mov
mov
test
lcall
xor
popa
pop
push
or
js
inc
jne
xchg
sub
jmp
mov
xchg
pop
lahf
lret
ret
push
shlb
test
pop
dec
es
fwait
mov
push
mov
inc
xor
test
pop
movsl
mov
lret
xchg
push
mov
pushf
sbb
lret
pop
loop
mov
pop
or
enter
lods
mov
cld
jo
sbb
outsl
outsl
stos
add
fcomps
push
call
or
cmp
mov
mov
xchg
cmp
push
leave
push
pushl
lret
lock
dec
nop
fnstcw
inc
xchg
jnp
cmp
cmpsb
mov
jmp
cmpsl
or
into
inc
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
pop
xchg
fnsave
pop
pop
jl
adc
xchg
adc
xchg
ljmp
and
test
mov
xor
inc
rorb
hlt
sahf
es
jge
sbb
inc
adc
out
cmp
insb
pop
xor
repz
cmp
std
adc
jecxz
mov
pop
lods
or
mov
push
push
push
arpl
push
dec
mov
jne
add
aaa
inc
cld
js
inc
std
mov
and
adc
or
enter
jl
cltd
lods
mov
movsl
dec
mov
test
popf
repz
aaa
sti
inc
jbe
inc
cmpb
add
pop
inc
dec
ljmp
mov
shlb
call
sbb
and
loope
sbb
orb
cld
jle
fcoms
and
xchg
pop
pop
push
lahf
loop
sbb
mov
add
sarb
pusha
push
mov
pop
push
jmp
dec
dec
adc
mov
mov
sub
inc
subb
push
out
fnsave
scas
fistpll
imul
xchg
in
lret
test
stos
gs
or
cltd
shrl
sbb
cmp
lods
push
les
aad
repnz
jbe
mov
js
ret
jnp
out
jecxz
push
test
sub
sti
aad
ds
pop
icebp
fimull
in
fistpll
cld
in
stos
lret
imul
lret
xlat
xchg
lock
pop
cs
sbb
aaa
add
mov
hlt
lret
sbb
out
jle
mov
push
aaa
imul
push
je
imul
mov
and
je
dec
fstpl
out
inc
mov
sbb
xor
sub
out
in
popa
sbb
fldt
dec
js
mov
pop
cltd
inc
sub
mov
mov
mov
cmp
xchg
and
pusha
gs
jns
fmul
pushf
pop
fwait
add
xchg
dec
or
xchg
fidivs
add
push
push
jne
mov
push
je
xchg
push
dec
xchg
add
int
add
test
push
fildll
xchg
pop
incb
sbb
add
mov
jge
insl
scas
xchg
xor
rcll
shrb
mov
pop
jp
lret
mov
fistpl
and
push
add
aam
out
inc
push
pop
cmp
aas
and
stc
rcrl
dec
xor
popa
xor
mov
push
loope
lahf
testb
cmp
adc
repnz
daa
popf
out
int3
mov
push
filds
iret
int3
mov
shl
ret
and
jae
stos
add
mov
lods
popa
add
lcall
rol
out
or
jne
cli
stos
in
dec
mov
ljmp
lods
inc
xchg
loopne
je
pusha
aam
repz
and
enter
pop
push
cmp
lahf
scas
dec
adc
jo
int3
sbb
ja
pop
inc
in
pop
shrl
push
xchg
cmp
sbb
dec
mov
xor
loopne
fidivrs
cmp
dec
mov
mov
mov
sti
adcl
sbb
inc
mov
mov
inc
or
adc
adc
mov
aaa
pop
adc
outsb
sub
push
mov
push
sbb
sbb
outsl
stos
stc
pop
sbb
aas
pop
data16
mov
sahf
imul
outsb
mov
bound
cmp
scas
mov
add
mov
xchg
or
arpl
and
inc
inc
inc
dec
inc
jp
xchg
cmpsl
loop
xor
jmp
and
adc
and
adc
or
push
jle
ret
outsl
daa
xor
mov
inc
mov
jp
sbb
and
lods
xor
into
repnz
push
inc
jmp
ror
cmp
fidivrl
inc
and
daa
loope
push
mov
adc
shlb
in
dec
pop
push
aad
imul
stos
addr16
mov
popa
inc
adc
mov
in
pop
imul
cs
adcl
jb
insl
test
mov
mov
clc
popa
out
lock
test
out
adc
cmp
mov
fldl
popf
xor
cvtdq2ps
dec
mov
int
mov
dec
lods
rcll
jbe
imul
clc
es
enter
push
fisubs
sbb
cmp
je
in
mov
add
push
pop
adc
cmc
mov
mov
adc
rcr
jnp
add
mov
jl
mov
mov
jecxz,pt
xor
xchg
jecxz
mov
adc
jno
cmovo
enter
pushf
push
je
pop
pop
pop
pop
lcall
repnz
mov
dec
push
fistl
aas
or
mov
sti
das
aaa
xchg
sub
dec
pop
and
jl
mov
cwtl
mov
pusha
sbb
inc
cmpb
jl
clc
popf
xor
addr16
fistps
mov
and
shlb
dec
jb
rcll
cmc
sarb
xor
add
or
pop
int
jg
mov
fs
sti
aaa
pop
xchg
mov
mov
ja
jecxz
xlat
sbb
xchg
jl
movb
pop
sti
mov
inc
pop
adc
push
js
je
pop
push
xchg
mov
ljmp
clc
pusha
ss
aas
mov
dec
sub
lods
ds
shrl
les
mov
add
cwtl
inc
rorb
jns
out
lea
add
mov
inc
iret
scas
test
ja
push
mov
pusha
and
icebp
or
insb
test
cmp
mov
fisubl
pop
cmc
inc
pop
int
or
dec
pushf
mov
test
jle
mov
test
and
arpl
xchg
dec
adc
pop
and
movsb
in
mov
jbe
ljmp
scas
test
push
xor
mov
mov
cmp
xchg
repz
dec
data16
and
rsm
add
sahf
out
xchg
jg
pop
ret
mov
cmp
sub
addr16
mov
mov
scas
and
decl
xchg
loopne
mov
and
cwtl
sti
js
sahf
mov
inc
push
mov
icebp
push
lahf
pop
adc
inc
xchg
xlat
mov
mul
outsl
push
lods
rep
pop
jae
pop
jo
or
pop
imul
sub
dec
jns
rolb
cmp
push
inc
scas
roll
andl
imul
ja
or
clc
ds
cmp
mov
sbb
gs
data16
inc
push
popf
sti
cld
ja
cmc
lahf
out
ss
or
xchg
ds
and
push
orb
popa
jmp
into
bound
jns
xor
mov
enter
pop
enter
lret
and
es
mov
or
adc
ljmp
in
in
cmp
lock
test
mov
rcr
lcall
push
ror
mov
lock
inc
repnz
pop
jp
dec
pop
jns
mov
pop
arpl
xor
gs
xchg
push
leave
in
shl
push
xchg
cltd
cmpsl
and
sub
mov
out
sbb
adc
jecxz
movl
or
lret
dec
es
and
outsb
cmpsl
fbld
call
push
cmpb
push
popa
das
mov
sarl
push
push
mov
les
add
adc
imul
jne
ficompl
xchg
icebp
test
loopne
pop
adc
add
fs
pushf
push
xchg
or
dec
fadds
sarl
mov
push
mov
les
loopw
insl
push
les
adc
shll
sub
out
mov
mov
mov
rep
push
sub
xchg
scas
dec
movsl
call
adc
sub
sbb
mov
inc
pop
rol
push
rorb
xorb
mov
sub
jne
adc
pop
loope
fmulp
cs
or
jnp
popa
cmp
mov
repz
mov
test
mov
push
rcrb
loopnew
adc
inc
or
fwait
insb
mov
addr16
jns
add
push
mov
jmp
cmpsl
fistpll
mov
push
test
fisubs
aad
pop
ljmp
cmp
orb
es
and
int3
lcall
loopne
mov
mov
in
mov
xor
xchg
aad
mov
and
cmpl
adc
cli
loope
jge
test
push
lods
ret
out
iret
in
fadd
int3
loopne
sub
ret
sbb
dec
jae
loop
mov
lods
mov
and
push
cmp
cmp
roll
push
inc
mov
insb
out
mov
pop
jne
sub
mov
sti
lea
and
sbb
and
pop
dec
jns
insl
shll
lahf
hlt
stos
pushf
jae
lcall
lahf
and
dec
push
loop
or
mov
xor
inc
fisubl
cmpb
adc
arpl
mov
movsl
jg
and
mov
sbb
loope
movsl
fisttps
xor
sbb
int
stc
mov
pushf
mov
fldt
movsl
fs
add
jmp
jecxz
jle
push
sub
push
int
pop
and
jp
pop
sub
push
mov
xlat
adc
push
mov
adc
mov
mov
xchg
dec
divl
fs
mov
rolb
xor
prefetcht2
jp
out
leave
fdivl
xchg
and
cld
add
addb
mov
add
jge
pop
mov
push
adc
adc
sahf
aaa
insb
out
stos
push
ret
fsubs
sahf
mov
fs
inc
inc
push
fwait
jge
test
rorl
mov
into
mov
pop
cmpsl
xor
cmp
fcmovne
dec
pop
xor
sbb
push
or
cltd
repnz
dec
mov
mov
js
hlt
pop
xchg
sbb
clc
jns
push
adc
xchg
jb
inc
push
sub
loop
test
outsl
jns
add
lret
and
pusha
push
xchg
sti
cmp
lods
inc
fimuls
jecxz
inc
and
cwtl
push
pushl
or
cs
mov
shlb
push
or
fs
add
lret
push
aas
jae
jb
push
xchg
aam
lods
and
data16
fnstsw
jnp
xchg
and
and
dec
daa
js
mov
adc
fsts
jl
rcrl
mov
cs
jae
rorb
stos
ffree
xor
adc
push
sub
sbb
jbe
push
push
jecxz
cmp
sbbb
lret
jno
sub
test
sahf
mov
sbb
sub
jno
mov
mov
in
lea
fcmovnb
mov
gs
fstps
lods
aam
dec
mov
inc
xor
sub
pop
lods
cmp
les
push
xchg
scas
rcr
mov
add
cltd
rolb
mov
jno
cmp
leave
test
jae
and
movsl
lahf
cmpsl
xchg
clc
in
mov
rclb
sub
cmpsb
push
outsl
push
pop
lret
bound
nop
push
les
cmpsl
loopne
or
add
fdivl
push
mov
xor
lock
jae
dec
xchg
repz
and
in
test
testb
adc
jne
mov
cwtl
and
push
test
mov
adc
dec
sub
sar
stos
pop
mov
jbe
out
xor
cltd
cmc
stos
repz
iret
sub
pusha
gs
test
or
xor
mov
xchg
jnp
lods
pop
xchg
adc
dec
mov
test
mov
jae
js
ret
mov
movsl
push
sbb
mov
jne
push
scas
or
cmc
pop
or
sub
into
mov
sbb
dec
mov
int
lcall
sub
std
mov
sbb
mov
and
clc
push
jbe
sbb
xor
cmp
sub
fstpt
popl
add
lods
arpl
dec
mov
loopne
jmp
sub
cmp
dec
inc
mov
cwtl
adc
push
pushf
jns,pn
fwait
enter
ja
mov
push
and
jmp
mov
adc
inc
addr16
dec
sbb
fistpl
xchg
mov
lock
dec
cmp
mov
cmpl
sbb
xchg
mov
push
and
lods
or
mov
shrb
xchg
addl
repz
dec
mov
add
loop
insb
xchg
bound
jmp
iret
xorl
js
in
inc
xor
movsl
mov
arpl
mov
xor
loopne
scas
les
in
jns
or
dec
or
sub
in
add
notb
xor
daa
cmp
loope
mov
pop
mov
push
lods
jno
divb
cmpsb
fistl
cmp
leave
mov
or
xchg
pop
jnp
arpl
adc
les
adc
mov
andl
cmpsb
jo
push
push
mov
mov
popf
xchg
bound
mov
pop
lods
xlat
sub
in
movb
andb
je
ja
ljmp
in
pop
ss
inc
jg
sbb
repz
mov
insb
mov
popa
shr
or
add
ffree
add
mov
push
in
mov
jge
nop
adcl
stos
cmc
lcall
mov
sub
sbb
fpatan
daa
das
push
test
add
stc
fsub
adc
dec
aad
add
ljmp
lret
lcall
dec
in
xlat
sti
jp
sub
fs
mov
std
or
ficomps
sti
fcoml
jle
xchg
lret
sub
fmuls
ss
and
aam
mov
ljmp
pop
cmp
inc
add
xchg
cmc
push
jbe
cmp
sarb
or
std
sbb
imul
inc
mov
and
mov
fcmovu
or
xchg
sarb
mov
test
mov
cmp
xchg
sbb
xor
in
scas
cs
sbb
imulb
mov
hlt
mov
or
movsl
jge
movsb
sub
shlb
in
or
inc
sbb
xor
sti
dec
test
inc
or
repz
jbe
fwait
pcmpgtw
xchg
popa
fildll
fs
outsl
xchg
sub
mov
or
stc
push
in
sub
mov
nop
jmp
js
ja
inc
pushf
subb
js
scas
mov
push
dec
xchg
shrl
stos
mov
sbb
push
jle
xor
xchg
out
leave
gs
add
mov
dec
sbb
mov
adcl
js
inc
pop
in
outsb
push
in
xchg
jo
outsl
stc
pop
je
sbb
adc
add
mov
loope
push
or
fnsave
call
xchg
mov
jecxz
fldcw
sub
push
push
sti
xchg
int3
xor
pop
roll
int
std
pusha
cmp
cli
inc
dec
and
sub
mov
xchg
adc
mov
mov
dec
sub
lods
call
pop
ljmp
dec
cmp
xor
and
shll
pop
nop
xchg
repnz
xchg
or
fdiv
or
gs
dec
les
push
arpl
add
add
dec
push
hlt
je
jecxz
mov
out
fwait
mov
pop
hlt
sarb
jl
adc
mov
mov
addr16
shl
arpl
mov
cmp
sub
rorl
call
pop
fwait
inc
sub
jmp
ljmp
or
dec
cmp
aad
jo
cmp
pop
imul
mov
js
cmp
push
jnp
jns
or
imul
mov
aam
and
and
mov
adc
xchg
fmull
sbbb
popf
and
adc
cmpsb
mov
stos
ret
arpl
cmp
fiadds
push
mov
test
rorl
jmp
aaa
call
pusha
inc
lret
test
cmpsb
and
pop
ljmp
hlt
sbb
mov
or
sbb
js
in
loope
push
mov
insl
mov
add
mov
dec
insb
js
daa
lea
pop
outsb
shlb
out
jecxz
iret
nop
daa
mov
and
fisubrl
and
out
push
sbb
push
add
mov
outsl
push
cli
inc
lret
xor
sbb
lods
jo
sbb
pop
repz
popa
popa
aas
jle
mov
sbb
jb
popa
loope
iret
push
int
scas
addr16
xor
cmp
cmpsb
out
xor
dec
pop
xor
pop
cmp
push
mov
int3
stc
cmpsl
mov
adc
dec
jp
inc
xchg
sahf
push
pop
xor
add
inc
mov
ds
xlat
stc
lcall
mov
jmp
mov
mov
imul
jns
insb
jmp
pop
dec
inc
and
or
negb
adc
subb
adc
xadd
jg
cmpsb
push
jle
jne
ret
je
ret
push
sbb
loop
mov
clc
mov
add
add
mov
sbbl
decb
lret
lods
mov
movsl
jg
jl
inc
je
aaa
xchg
test
test
jl
jp
jle
mov
cmp
push
pop
dec
jnp
cmp
mov
jo
and
int3
sbb
sbb
lret
sub
fst
movsb
or
fidivl
out
or
inc
imul
stc
lods
icebp
bound
lahf
fistpll
ss
cmpsl
jg
cmp
inc
inc
adcb
cli
aaa
ljmp
inc
loope
push
xchg
adcb
xchg
add
inc
shlb
xorl
and
int
mov
inc
mov
mov
xor
mov
test
lret
ss
push
sbb
sbb
dec
push
cli
sarb
out
je
testb
xor
mov
fstpl
lods
push
ret
fs
cmpsb
pop
cltd
popa
movsb
add
loop
arpl
xchg
lock
mov
inc
push
mov
pop
push
mov
cmp
ret
cmp
gs
icebp
and
call
test
enter
stc
sbb
xchg
pop
movsb
mov
jae
sbb
jmp
mov
xchg
hlt
test
sub
enter
add
mov
repnz
in
jg
sub
inc
nop
test
leave
repnz
rol
cmp
arpl
fnsetpm(287
mov
mov
add
rcll
inc
in
mov
xor
mov
mov
inc
aad
or
dec
andl
mov
orb
leave
movsb
add
sbb
or
cmpsb
imul
insb
js
mov
arpl
out
xor
push
rolb
jge
aas
and
popf
cmp
jecxz
pop
loopne
jmp
ror
inc
ret
fmul
pop
mov
cmp
cld
fisubl
mov
mov
inc
adc
bound
fldl
dec
push
cmp
xchg
idivb
arpl
mov
pop
adc
jle
lock
fucom
jmp
loope
pop
imul
scas
xchg
adc
mov
jno
cmp
mov
mov
adc
sub
pushf
and
lods
cwtl
inc
pop
or
jle
std
sub
mov
scas
xor
xchg
jmp
xchg
jno
shll
mov
data16
out
mov
mov
mov
or
mov
call
and
ss
mov
xchg
leave
inc
xchg
xchg
push
test
call
mov
cld
test
xor
lahf
ljmp
pop
inc
push
rclb
cmpsb
in
xor
leavew
mov
aam
jb
inc
cmp
testb
fists
jmp
lock
ljmp
fxch
enterw
das
fnstsw
das
outsl
lcall
es
lret
mov
outsb
sbb
jge
call
hlt
ret
and
push
rclb
inc
xchg
cwtl
cmc
mov
mov
push
adc
mov
dec
mov
lret
cwtl
sbb
xchg
pop
cmc
inc
cmpsb
test
hlt
enter
into
adc
hlt
scas
es
dec
mov
xor
clc
ret
fdivl
sub
adc
xchg
push
fisubs
jle
fnstcw
fdivp
pop
cmp
rcl
outsb
outsb
movsb
in
fdiv
push
inc
cmpsl
into
and
in
mov
dec
inc
mov
mov
test
aam
jb
sub
mov
sahf
mov
xor
add
js
fildl
mov
mov
xor
out
jb
sbb
shlb
mov
cld
cmpsl
push
mov
lret
sub
clc
sbb
mov
jecxz
test
xor
cwtl
mov
shl
out
sbb
es
xchg
pop
or
cld
pop
outsl
dec
shrl
or
leave
jmp
lods
pop
std
push
inc
jp
pop
dec
jp
cmpsl
or
or
xchg
js
jo
xor
and
dec
mov
lret
aam
dec
push
dec
movsl
push
mov
pop
push
dec
fmull
lret
jns
jmp
lock
shrl
xor
lods
mov
sub
jnp
cli
push
aad
xchg
push
loop
jb
cmp
test
ljmp
jnp
mov
out
mov
add
mov
mov
push
mov
std
and
mov
push
repnz
nop
pusha
jno
and
jbe
xchg
xchg
and
out
ljmp
pop
xchg
or
out
or
call
xchg
imul
jle
rorb
jge
pusha
pop
or
fsubrs
test
jge
sbb
xchg
dec
adc
lock
inc
cld
push
xchg
lds
and
popa
cmp
jmp
mov
ss
repz
js
lock
xchg
cmp
stos
pop
adc
mov
push
pusha
ret
sbb
jne
and
aas
add
ret
divps
xor
popa
xor
arpl
loop
push
fiaddl
add
hlt
push
pusha
mov
fcmovnu
test
popa
mov
xor
repnz
fwait
cmp
add
fucomi
xor
hlt
subb
adc
ret
jns
jo
and
fidivrs
dec
xor
in
gs
scas
lahf
inc
jb
test
push
lods
push
sub
or
ret
fstps
cmc
dec
mov
movsl
inc
scas
fwait
jmp
or
cld
sbb
inc
bnd
sub
out
lds
dec
xchg
sbb
inc
add
xor
scas
jge
test
mov
fstl
int
mov
cmp
jb
addr16
xor
cmc
std
loop
mov
dec
pop
leave
sahf
shrl
cmp
dec
cmp
cwtl
sub
add
or
and
addl
jne
dec
into
xor
adc
sub
lret
pop
arpl
imul
xor
or
jle
adc
push
mov
push
mov
adc
inc
jle
icebp
dec
lock
jae
in
xchg
mov
clc
shl
pop
jle
pop
ds
or
sub
out
imul
xchg
add
fidivrs
andl
lea
inc
das
gs
jne
push
or
lods
sub
gs
leave
pop
inc
add
xchg
or
cwtl
int3
xor
js
mov
cmpsl
pop
dec
cmc
cmp
cmp
rorl
stos
fmul
add
div
fld
test
stos
add
or
xchg
insl
push
push
icebp
jnp
mov
xor
xlat
xchg
nop
mov
stos
insl
sti
add
jo
or
jnp
fidivrl
pop
negl
leave
fists
mov
pop
mov
push
mov
repz
mov
cmp
jnp
or
mov
iret
xchg
arpl
gs
insl
jo
int
add
xor
adcl
sbb
loop
jb
je
clc
mov
push
jmp
retw
out
push
enter
lahf
inc
shll
leave
sub
cmp
inc
enter
lret
jbe
inc
stos
in
fbld
sub
sbb
fisubrs
cmp
or
or
xor
or
pop
iret
dec
aam
dec
mov
and
sahf
lahf
cltd
and
mov
or
cmp
ficoms
and
lds
push
rclb
cmpl
xor
pop
inc
movsb
sbb
pop
lret
sti
cmpb
push
push
fwait
inc
xchg
xor
ret
xor
into
fistpll
addr16
sub
dec
sbb
cmc
int
jge
daa
fs
test
mov
xchg
pusha
sub
mov
sahf
cmp
cmp
sahf
xor
mov
scas
scas
daa
frstor
cmc
jmp
cmp
add
xor
jmp
or
ja
mov
movsb
mov
add
mov
sub
mov
mov
flds
lods
dec
arpl
xchg
lcall
push
sub
aad
cld
mov
lock
and
or
mov
imul
or
fs
pop
fsubrl
ljmp
aaa
lea
push
test
leave
cmpsl
or
xchg
mov
mov
mov
in
imul
push
mov
inc
shll
iret
push
dec
sub
dec
aaa
mov
es
adc
xor
mov
pop
or
jmp
inc
xor
mov
or
cmp
or
cmp
shlb
iret
mov
mov
xor
decb
enter
mov
cmp
aas
pop
stos
insl
mov
int
jnp
test
adc
pop
orl
iret
jmp
arpl
iret
xchg
push
mov
aas
cltd
outsl
cmp
xlat
xor
lret
sti
push
ja
sbb
sub
fdivr
lds
or
jae
mov
or
mov
lds
loopne
mov
inc
out
hlt
imul
sbb
imul
aam
int3
loopne
scas
and
rcl
sub
jo
nop
inc
jbe
andl
dec
mov
loope
out
dec
jno
xor
loop
jmp
vmulps
aaa
push
jle
adcb
das
push
hlt
fcoml
mov
int
and
jg
push
cltd
sub
xor
lods
pop
sbb
push
mov
xor
ljmp
sub
adc
lods
sbb
pop
jbe
cmpb
jnp
mov
lret
push
cmc
mov
cltd
sbb
or
enter
mov
xchg
addb
sbb
mov
mov
addr16
push
mov
fstpt
mov
les
loop
repnz
scas
out
xchg
jns
add
jge
lcall
cmp
push
dec
aaa
jmp
repnz
notb
inc
addl
cltd
rcl
mov
lods
jmp
cmp
lock
inc
fldenv
adc
add
testl
ret
dec
sbb
push
jnp
or
mov
into
push
fnstcw
popa
decl
add
movsb
ret
pop
leave
pop
lahf
mov
lahf
insl
xlat
stos
test
dec
mov
adc
cld
in
sub
nop
jp
mov
int3
mov
mov
pop
xor
cmpl
xchg
cmp
ficoms
adc
sbb
repnz
stos
scas
repnz
adcb
mov
cltd
lcall
sub
jbe
sysret
cltd
mov
test
insl
out
test
pop
fildl
aaa
popa
jne
loopne
orb
cs
xor
dec
push
aas
jg
cs
sub
mov
mov
xor
ret
mov
lds
pop
cltd
jmp
mov
bound
xchg
daa
mov
in
rcr
mov
push
cmp
insb
cmp
pop
aam
adc
addr16
mov
or
and
sbbb
pop
addr16
out
js
sbb
aaa
mov
mov
mov
test
pusha
mov
pop
int
mov
bound
ja
inc
mov
mov
inc
push
sbb
rcll
jno
mov
cld
inc
add
adc
sahf
jne
sub
scas
xorl
outsb
push
rclb
inc
xchg
cltd
dec
pop
lea
xchg
add
fs
ds
call
stos
enter
inc
fcompl
daa
xor
inc
or
cmp
cmpsl
lea
pushf
enter
aam
sti
dec
lcall
faddp
aad
jmp
add
bound
push
inc
add
mov
jle
loop
call
mov
pop
inc
inc
mov
cmp
aad
in
bound
mov
mov
pusha
push
or
ret
or
xor
int
sbb
push
jg
loopne
movsb
repz
test
fcmovne
mov
add
sub
xchg
sub
xchg
add
or
cltd
jp
or
adc
sub
adc
xchg
add
inc
data16
mov
scas
inc
fists
add
imul
sti
or
and
mov
mov
sti
cmp
loopne
stos
sarl
lods
clc
jge
push
sub
in
leave
cmp
dec
jae
push
lret
mov
movsb
sti
and
or
or
mov
xlat
push
out
and
xor
je
push
dec
jge
dec
test
aam
iret
add
inc
stos
je
jns
push
divl
pop
int3
iret
nop
push
icebp
mov
add
jl
ret
fisttps
pop
mov
enter
sbb
sub
dec
or
repnz
out
popl
arpl
ds
sbb
mov
mov
adc
dec
loop,pt
dec
into
stos
push
out
sti
pop
xor
aam
jb
int
dec
fistpl
pop
pop
mov
out
mov
test
movzbl
jg
xchg
sti
dec
cmpsb
and
dec
inc
sti
jecxz
stc
mov
and
jecxz
push
xchg
jae
sub
dec
xlat
repz
push
sbb
call
mov
or
sbbl
xor
bound
arpl
adc
aam
into
adc
icebp
in
fwait
mov
popf
cmp
mov
std
and
mov
cmp
lcall
jmp
psubq
loope
popa
imul
ret
stc
xchg
push
out
dec
cli
pop
jecxz
test
xchg
idivb
push
rcrl
mov
fldcw
rorb
pushf
jmp
call
outsb
pop
sub
mov
shl
shrb
cmpsb
stc
stos
mov
lahf
jle
push
pop
out
loope
jb
sub
test
aas
sbb
push
ret
xchg
sub
mov
dec
jecxz
sub
jns
hlt
cwtl
mov
mov
mov
arpl
testl
out
inc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
out
jmp
jl
outsb
push
call
dec
int
stc
cmp
adc
cld
test
push
aam
repnz
mov
lret
pop
ljmp
mov
call
test
bound
and
pop
adc
xchg
hlt
push
fldl2t
rcrb
jecxz
mov
jne
jle
cmp
xor
fcoml
fcmovne
xlat
fs
iret
or
push
jmp
loope
fwait
push
jb,pn
and
sti
pop
rcrl
jg
in
pusha
xor
arpl
test
jle
add
dec
cmp
ret
sahf
lods
sub
xchg
pop
or
and
mov
add
fcoml
adc
xchg
jbe
test
push
into
cmp
popa
jge
in
hlt
sub
push
jp
out
jecxz
ffree
pop
or
sub
inc
sub
mov
test
pop
sub
fiadds
cmp
inc
push
xor
dec
fcmovne
test
ret
push
fmull
fcomp
or
and
fwait
mov
mov
insl
or
scas
cmp
sub
jno
in
lods
aas
addr16
dec
mov
adc
dec
or
loope
add
jae
xor
shl
or
scas
hlt
rclb
mov
push
lcall
dec
mov
push
sub
mov
push
jmp
cmpb
and
cmp
cmp
mov
push
xchg
adc
in
xor
sub
mov
cmpsl
mov
popa
or
in
or
and
jge
leave
inc
cmp
sub
dec
pop
or
inc
add
xchg
cmpl
xchg
jnp
jb
and
or
inc
cld
sub
in
adc
pusha
int
pop
roll
fwait
call
popf
sbb
loopne
imulb
stos
xor
rcrl
orl
add
mov
inc
andps
fmuls
jne
dec
mov
aas
dec
insl
fbld
pop
js
and
data16
xor
sbb
ret
repnz
lahf
inc
cmpsl
das
pop
adc
inc
das
cmp
push
lods
inc
mov
cmpsl
sbb
jmp
pop
aaa
into
loope
mov
out
mov
cmp
or
imul
aam
jae
ja
dec
mov
fstps
xor
sbb
in
cmpsl
ljmp
mov
repnz
jecxz
shr
sahf
pop
jo
int3
cmp
scas
mov
push
and
add
test
inc
or
mov
push
mov
fnstcw
movb
jmp
add
push
enter
xor
xor
lcall
scas
add
hlt
adc
cs
mov
pop
enter
add
jle
dec
cmp
test
xchg
add
add
dec
jne
mov
xor
enter
push
dec
scas
popa
push
xchg
push
pop
jp
inc
add
loope
insl
mov
push
push
stos
lret
jae
push
jp
inc
mov
jmp
or
adc
add
inc
dec
pop
subl
iret
push
pop
les
stos
lret
leave
and
cmp
xchg
xchg
das
notb
movsb
xchg
outsl
faddp
pop
sti
cmpsl
lock
mov
adc
ret
sbb
imul
adc
test
lahf
push
cli
and
dec
andb
sub
flds
pushf
dec
cltd
hlt
dec
mov
push
pop
aad
xor
or
mov
stc
jae
jl
or
dec
mov
bound
repz
mov
insl
push
cld
lods
push
jbe
iret
pushf
lahf
mov
lods
mov
or
dec
call
jle
fidivl
lret
scas
in
pushf
push
pop
aas
xchg
cmpsb
ficoms
or
pop
test
mov
les
in
jbe
inc
arpl
stos
sahf
xor
leave
out
cmpsl
daa
in
lcall
test
cmp
push
adc
cmp
xor
jmp
push
mov
push
cmp
xchg
sahf
pop
mov
aaa
mov
push
jl
push
xor
inc
sbb
or
in
pushf
cmp
jl
jmp
push
sbb
sub
jno
pop
add
inc
data16
fsub
imul
push
es
sti
addl
adc
inc
dec
repz
in
es
adc
sbb
inc
xchg
orl
ficoml
popa
and
sub
lret
clc
mov
lcall
push
js
dec
xor
xlat
push
movsb
pop
test
xor
sbb
fisubs
bnd
out
cmp
or
adc
cmp
popa
ret
loope
test
mov
mov
fucomp
adc
std
pop
mov
jo
ficoms
inc
std
out
movaps
out
loope
or
inc
popl
dec
adc
xchg
aam
pop
jae
cltd
andl
jl
rcrb
push
cli
std
xchg
cltd
inc
shll
daa
pop
pop
and
xchg
loopne
cmpsl
xor
adc
add
xchg
xorl
jnp
push
cld
push
add
mov
imul
inc
outsl
stos
cmp
notl
loopne
push
fsubrl
adc
mov
jge
mov
jo
lret
add
arpl
lret
lcall
out
aam
push
inc
and
orl
adc
das
cmpsl
daa
push
dec
adc
mov
repz
push
ds
and
xchg
and
rcl
push
adc
popf
or
fldenv
pusha
fldt
mov
sbb
add
push
add
cmc
push
bound
lods
lahf
gs
lods
and
xchg
adc
sub
xor
or
mov
fstl
mov
imul
push
leave
hlt
dec
push
add
mov
add
ror
xchg
push
inc
lods
pop
xor
jb
push
dec
xor
popf
bound
test
in
add
pop
sbb
ja
popa
xor
jno
ret
cli
add
add
lret
mov
scas
or
mov
dec
xor
cli
gs
sti
lcall
mov
rcr
push
fs
xchg
or
cmp
push
aad
pop
test
push
fmuls
aaa
ja
pop
nop
jns
inc
adc
in
push
int3
shrb
jb
xchg
arpl
mov
stc
ljmp
sub
lcall
xor
dec
or
sub
pop
sbb
or
fbld
and
aad
rorl
es
nop
fisubs
sbb
in
inc
cmp
mov
insl
mov
cmc
sub
pop
loop
imul
cltd
or
bound
adc
inc
lcall
mov
jmp
push
test
and
or
dec
jg
sbb
cmp
negl
mov
or
pop
in
fs
testl
stc
push
outsl
sbb
xor
sahf
jae
cmp
push
mov
ds
or
push
jle
push
push
xchg
ljmp
inc
mov
scas
out
loop
jne
leave
mov
push
xchg
sbb
out
dec
cmp
inc
sbb
ljmp
mov
cs
xchg
in
xchg
fwait
xchg
fcoml
mov
and
xchg
mov
ror
out
in
mov
stc
push
clc
negl
and
sbb
add
ss
mov
mov
std
cs
sbb
jmp
push
aas
andb
or
je
mov
mov
in
add
adc
in
and
pusha
or
mov
or
inc
lahf
inc
and
rolb
add
xor
cwtl
dec
pop
sub
pop
mov
or
inc
fnsave
mov
loopne
fisttps
and
xchg
cli
movsb
int3
aad
cld
cwtl
sbb
jns
push
mov
sti
fwait
dec
xlat
movsb
or
xor
mov
sub
xchg
sub
mov
icebp
mov
pop
mov
xor
iret
sbb
push
das
jge
dec
mov
sahf
test
push
arpl
adc
xchg
fists
dec
push
lds
adcb
dec
and
sbb
and
adc
mov
cmpl
ljmp
dec
ja
loopne
pop
xchg
cmpsl
insl
mov
mov
out
mov
or
mov
call
dec
xor
out
adc
cwtl
jg
push
push
rcl
fwait
mov
pushf
push
inc
sbb
arpl
sarl
cli
push
mov
adc
add
popa
push
addr16
mov
jno
cmp
inc
fisubs
mov
lds
sbb
xchg
xchg
out
xor
scas
pop
adc
ja
and
mov
push
subb
jmp
push
mov
and
jmp
dec
jl
add
mov
lock
jbe
mov
ljmp
enter
jo
fstl
addl
dec
jbe
pop
inc
nop
das
js
jge
fwait
js
sub
jge
test
bound
fwait
add
jae
ficoms
movsl
insl
lods
aas
fs
push
dec
fiadds
or
int3
loop
lods
sub
cmc
icebp
scas
outsl
andl
mov
ret
mov
pop
fbstp
in
daa
jb
lock
std
lret
mov
cld
stos
push
leave
enter
movsl
dec
inc
and
ss
mov
add
jecxz
pop
jle
inc
call
frstor
cmp
push
xlat
std
popa
push
out
pop
mov
dec
pop
pop
fisubl
out
in
and
sar
addr16
mov
rcr
out
outsb
adc
mov
cmp
xlat
fdivl
lret
into
test
adc
xor
cli
int3
mov
dec
lds
ds
jnp
inc
jmp
mov
jb
mov
or
aad
xchg
mov
push
mov
hlt
jg
mov
jmp
jmp
imul
pushf
cmp
xor
and
mov
aas
push
lahf
mov
nop
stos
insb
mov
sahf
lods
mov
jne
loopne
int3
loope
into
clc
pop
nop
mov
pop
roll
test
lods
fwait
pop
adc
xor
or
jbe
stos
fsubrl
fiaddl
push
pop
shlb
xchg
mov
fimull
das
orl
and
mov
pop
mov
pushl
outsl
mov
test
sarb
xchg
xchg
mov
inc
jmp
stc
inc
xor
sub
sbb
jae
mov
or
cmp
stos
les
xor
and
cmp
inc
mov
push
add
hlt
adc
jmp
adc
out
dec
adc
loop
mov
shll
fs
push
in
inc
jmp
cmc
ret
mov
jae
and
mov
push
mov
sub
repnz
mov
leave
lret
movsb
aas
push
xchg
push
dec
fisubrs
aad
lods
aad
sbb
es
je
js
cwtl
scas
mov
mov
in
jnp
cltd
adc
aam
pop
mov
bound
add
fs
jge
hlt
test
outsl
sub
jns
test
jne
leave
fiaddl
xchg
or
jl
ljmp
mov
pushf
dec
or
adc
pusha
in
adc
pop
subb
lret
and
mov
pushl
or
iret
mov
adc
or
fs
jbe
adc
cltd
rolb
cmp
mov
in
sub
add
add
xchg
dec
dec
xchg
mov
xchg
xchg
enter
fsubr
add
add
movsl
stc
mov
push
mov
lret
out
pop
dec
stos
aas
dec
insb
mov
daa
cmp
mov
xchg
push
sbb
in
adc
and
xchg
daa
repz
pushf
or
pop
out
pop
in
repnz
call
bound
or
shll
adc
mov
xor
movsl
jbe
cmp
dec
dec
dec
mov
pop
add
movl
inc
pop
jg
adc
iret
jo
jmp
shl
jg
jge
add
pop
adc
scas
sbb
pop
adc
push
adc
je
es
adc
xor
movsb
cmc
sub
lock
inc
mov
out
pusha
add
call
adc
jbe
clc
pop
push
in
cmpl
xchg
insb
pop
push
mov
out
sbb
cmc
cmp
movsb
push
inc
mov
stos
mov
inc
mov
pop
and
adc
int3
and
cli
sub
inc
fdiv
lret
push
sbb
fsubl
pop
mov
fsubrl
and
inc
sbb
in
les
adc
sub
inc
stos
aaa
xor
or
dec
dec
push
pop
add
xor
push
fs
xor
mov
ss
push
ss
ror
lretw
push
into
sub
pop
mov
or
pop
and
daa
mov
sbb
push
mull
xchg
fcomp
sub
jmp
repnz
inc
data16
fwait
mov
es
cmpl
in
subl
mov
test
nop
lret
cmpsl
outsb
pop
mov
sbb
test
mov
cmpsl
push
insb
mov
inc
fmull
jmp
mov
mov
fiadds
jbe
aas
jle
sbb
jp
inc
lock
mov
leave
lds
addr16
test
fdivrs
ja
test
and
mov
push
bound
ret
inc
sub
mov
movsb
je
adc
daa
mov
inc
cmp
cmc
in
sbb
sub
inc
adc
jbe
fistl
inc
inc
pop
xchg
popa
aas
in
jo
ror
sub
jne
push
pop
shrb
pop
andb
push
repz
push
js
xor
lods
enter
sbb
setnp
fsubrl
pop
jge
out
mov
in
push
cmp
xchg
and
adc
dec
out
aaa
jp
inc
jne
mov
inc
mov
mov
pusha
and
incl
or
lret
leave
jg
adc
fdivrs
xorb
pop
xchg
stos
adc
ret
shll
cmp
in
xchg
mov
out
push
enter
adc
push
and
pop
loop
adc
dec
dec
aad
stc
xchg
sub
test
jb
push
getsec
jecxz
lahf
popf
fs
not
mov
mov
aaa
int3
in
mov
adc
jle
pop
sub
mov
or
adc
out
inc
xor
test
mov
inc
lods
dec
mov
hlt
jo
cmpsl
stos
insb
jge
xchg
lock
movsb
mov
rolb
faddl
dec
adc
sbb
in
push
stc
mov
lock
shll
push
cld
data16
popf
mov
lahf
or
xor
sahf
pop
aaa
pop
inc
mov
sbbl
rclb
adc
pop
dec
adc
mov
mov
cld
dec
sbb
dec
mov
cld
int3
out
push
xchg
mov
pop
add
ss
or
or
js
inc
loopne
out
mov
mov
add
aaa
icebp
jg
and
mov
cmpsl
cmp
inc
xor
loope
mov
mov
mov
jo
fists
adc
jns
cmpsl
add
sub
xor
loop
pushf
ja
popa
sti
movsb
mov
dec
out
into
add
icebp
test
cltd
idiv
mov
cltd
or
jge
cltd
mov
in
loop
cli
sub
xchg
clc
mov
xor
fcompl
mov
and
adc
push
es
jmp
mov
movaps
push
lret
aas
lock
mov
jge
movsl
dec
leave
repnz
or
jmp
rolb
mov
sub
je
shlb
pop
stos
je
push
cmp
push
shrl
xchg
ds
fwait
xchg
mov
loopne
mov
jle
add
fisttpll
xchg
cld
loop
pop
push
sbb
dec
jle
in
leave
pop
mov
xchg
inc
mov
or
jns
daa
xchg
push
loopne
clc
jo
mov
out
dec
insb
mov
push
mov
lock
cmpsb
je
mov
arpl
add
and
ja
cmpsb
mov
shll
sbb
push
rcll
push
rcrl
jo
cwtl
inc
jne
pop
mov
out
mov
in
aaa
lcall
pop
outsb
icebp
ficoml
pop
adc
or
jg
aaa
aaa
inc
xchg
sbb
in
fsubl
js
cmp
in
fiaddl
sbb
xchg
sbb
out
ljmp
xor
movsl
lea
jge
add
in
xchg
cld
or
jnp
pop
jae
in
sub
jno
mov
sbb
sarl
push
or
xchg
jl
mov
cmp
test
push
into
cli
jns
jg
push
pop
test
or
xchg
pop
orl
aaa
stos
aam
jno
outsb
outsb
in
and
arpl
mov
mov
loope
sub
push
loopne
sbb
mov
inc
mov
mov
scas
jbe
ljmp
loopne
jle
inc
inc
icebp
icebp
dec
mov
jns
push
pusha
add
out
xor
sbb
sete
lods
or
pop
sbb
mov
in
std
jl
mov
call
add
xchg
or
rcll
ljmp
xor
mov
mov
shr
sbb
lcall
rorb
out
jp
or
mov
test
lock
loopne
pop
mov
std
sub
push
mov
int
imull
push
movsb
je
inc
rorb
adc
je
shrb
add
int3
sbb
jecxz
pusha
icebp
test
imul
add
bound
sbb
call
fildl
xchg
enter
push
gs
ss
ja
popl
or
adc
ret
xor
call
jecxz
push
pop
outsb
lods
pop
in
jnp
xor
dec
bound
rclb
xchg
sub
cmc
add
test
dec
xchg
xchg
dec
lods
gs
lods
fldcw
sarl
addr16
jb
cmpsb
in
mov
test
add
out
je
lret
imul
cmp
or
mov
and
outsb
pop
xchg
pop
popa
cmp
cmp
xlat
fs
ret
cmp
jmp
pop
movsl
decl
jl
adc
lahf
int
lcall
or
dec
and
les
or
mov
test
dec
fstpt
cmc
aaa
sbb
inc
icebp
inc
aaa
add
push
fldcw
sub
xchg
dec
rcl
pand
ret
imul
aam
dec
push
pop
xorb
dec
pop
movl
adc
add
rcr
test
ja
mov
jno
and
jbe
pop
sub
adc
adc
test
xlat
xor
adc
push
icebp
sti
adc
popf
mov
cmp
mov
int
int3
aam
xchg
ss
fstl
add
cmp
arpl
negb
dec
jb
jae
ftst
cmp
jo
xchg
adc
shll
inc
dec
jns
add
jge
and
int3
cmp
cs
add
sbb
xchg
je
xchg
mov
dec
push
mov
ja
pop
or
enter
push
push
movsl
xlat
or
rcl
hlt
cmp
fsts
and
dec
movsl
xor
pop
fbstp
icebp
sahf
fucomi
ds
fwait
test
jno
int3
aaa
dec
or
sbb
inc
mov
lock
ljmp
movsl
out
popf
subl
push
xor
outsb
flds
mov
sub
or
lahf
mov
lds
inc
sbb
push
and
out
push
sub
jnp
cmp
lds
jb
sub
xor
push
push
push
mov
mov
push
dec
xor
scas
mov
ljmp
push
cmp
adc
fisubs
in
xor
out
or
fwait
xor
in
movsb
sahf
je
add
fs
rcll
push
sahf
stos
pop
cmp
das
sub
xchg
enter
dec
inc
xchg
adc
int
stos
popf
test
push
hlt
mov
pop
outsl
mov
mov
jne
hlt
jo
adc
sbb
sti
sub
imul
pop
mov
test
ds
mov
stos
lock
sbb
cmp
std
imul
jle
fwait
mov
repz
mov
sub
pop
stos
cld
int3
int3
out
xchg
nop
mov
nop
jle
push
mov
inc
mov
sub
out
jns
jno
fwait
lret
xor
jbe
inc
stos
dec
jae
jge
mov
out
movsb
clc
lret
movsb
push
dec
adc
rclb
add
negb
push
stos
push
mov
mov
adc
insl
xchg
jo
lahf
mov
loop
push
movsb
xchg
mov
rorb
sub
roll
sbb
adc
popa
or
adc
mov
cmp
jp
push
rorl
jge
jl
jae
add
setnp
push
dec
imul
push
and
and
push
gs
jl
fisubs
mov
adc
mov
dec
add
fadd
sbb
in
jne
imul
add
imul
cmp
mov
cmc
loopne
movsb
dec
mov
pusha
jecxz
dec
out
leave
push
sahf
shlb
dec
sahf
imul
xor
dec
cli
lret
mov
bound
das
ss
lcall
stos
mov
test
loopne
push
nop
pop
sub
xchg
pop
jle
fcomp
std
adc
lock
jg
xor
out
orb
push
push
or
push
cwtl
fwait
or
pop
jnp
fdiv
jecxz
icebp
lahf
sti
mov
and
loop
push
pop
adc
mov
testl
call
arpl
push
movl
repz
push
es
ds
pop
mov
test
jb
push
jns
cld
bound
stc
inc
push
fmuls
sbb
xchg
and
sbb
cmp
ljmp
or
js
stos
mov
fsubp
mov
or
call
or
js
dec
xlat
mov
fs
and
pop
xor
in
outsb
pop
fs
ret
mov
add
ljmp
out
stc
mov
jmp
xchg
mov
inc
mov
lcall
push
push
bound
enter
in
jl
jl
jae
mov
xor
inc
daa
lcall
addr16
jge
jae
mov
sbb
dec
jp
xchg
imul
rcll
cmpsl
mov
fstpt
xchg
and
sub
pop
mov
push
ss
testb
or
or
das
mov
inc
pop
cld
ja
and
sub
add
ds
flds
outsb
test
mov
lret
xchg
shl
cltd
ret
in
subb
jno
pop
imul
fdivs
scas
xchg
add
movsb
push
jle
and
dec
enter
inc
in
push
pusha
push
push
incl
push
ljmp
sub
fists
push
adc
fwait
call
fstpl
mov
cmpsl
roll
nop
adc
and
mov
xchg
xchg
push
pop
cmp
lods
xorb
jns
lret
in
mov
pop
xchg
pop
xlat
push
mov
push
push
jmp
cmp
jp
sbb
out
adc
das
xchg
dec
pop
out
cs
bound
pop
leave
les
hlt
push
add
add
dec
adc
mov
in
mov
jp
cmp
inc
jl
aad
sbb
outsb
aad
jo
pop
cwtl
imul
push
test
in
in
mov
and
addr16
jbe
push
mov
std
mov
in
cmc
hlt
test
pop
lea
mov
lods
pop
lock
xor
movsb
add
int3
movsl
lods
or
mov
enter
cmp
xchg
add
adc
xchg
and
leave
ss
out
lods
jmp
std
lret
inc
decl
or
mov
jle
daa
pop
lcall
mov
mov
in
nop
je
bound
mov
jecxz
sbb
dec
mov
outsb
sub
jp
in
leave
xorb
out
push
pop
in
inc
and
lcall
xchg
lods
and
pop
sar
test
sbb
mov
pop
nop
xor
jno
loop
sti
shl
dec
add
sub
movsb
insb
jmp
outsl
shll
adc
xor
xor
enter
pop
popw
flds
cwtl
cs
out
das
call
jp
xchg
cmp
das
push
jo
mov
mov
lock
jmp
pop
in
and
cwtl
das
sahf
xlat
mull
mov
mov
testl
loopne
cmp
dec
push
xor
or
mov
sub
inc
push
adc
outsb
sti
faddl
repnz
out
cmp
fwait
xchg
scas
stc
push
lcall
lods
incb
jl
and
rorl
std
or
xorl
call
aas
mov
mov
push
leave
add
pop
and
test
test
sbb
js
or
xor
cmp
push
mov
les
mov
or
les
ret
xchg
sbb
shlb
push
ficoms
xor
pop
imul
cld
jnp
fisubs
sbbb
add
mov
bound
fsubl
pop
arpl
push
xlat
cmp
js
stos
xchg
iret
adc
mov
ds
push
xchg
jns
dec
pop
es
pushl
jae
dec
aad
push
xchg
dec
popa
popa
cmp
mov
sub
xchg
lcall
xor
lock
fcmovne
sbb
mov
or
aaa
fs
and
jl
or
mov
dec
push
das
lds
add
inc
sbb
ret
jge
or
fldl
call
xor
rol
sub
dec
push
xor
push
ja
sbb
imull
pop
pop
mov
inc
add
lret
push
jg
xchg
xor
into
fsubr
xor
adc
xrelease
lds
repnz
adc
lods
add
adc
pop
dec
int3
je
outsb
mov
shrl
lods
loope
shlb
pop
push
xchg
lods
mov
jbe
mov
cmp
popf
movsl
mov
jp
lret
test
xor
pop
lea
aam
push
shlb
xchg
adc
cmp
xor
cs
in
cld
inc
addr16
imul
pushl
rol
cwtl
dec
add
adc
add
fs
lods
inc
lcall
inc
clc
cmp
ss
jno
rorl
mov
mov
out
iret
sbb
js
mov
out
add
shlb
add
popa
je
test
cmpsl
ss
xorl
xor
lcall
clc
jl
dec
mov
jl
jno
xchg
test
pand
popf
ds
adc
add
es
hlt
addr16
push
test
jnp
mov
jmp
sub
loope
scas
jp
jp
sahf
push
sub
mov
mov
imul
daa
inc
push
and
sti
jge
stc
fdivs
ljmp
enter
xchg
test
jae
and
stos
in
call
lea
in
addb
xchg
arpl
in
xor
and
shlb
fidivrs
stos
mov
lock
mov
pop
lods
outsl
jle
jae
ror
test
aad
cmp
aas
loope
xlat
xor
cmp
xchg
pop
dec
pop
ljmp
xchg
pop
decl
out
outsb
push
cmp
mov
ds
icebp
and
enter
push
push
shlb
aaa
popf
mov
hlt
cltd
pop
sbb
icebp
jne
sbb
sub
rcrb
fsubs
mov
je
insl
dec
mov
push
dec
outsb
adc
orl
cmpb
int3
cmc
repnz
es
aas
xor
dec
stos
mov
mov
xchg
lcall
and
cmp
push
adc
mov
stos
push
nop
lret
shlb
xor
dec
lods
sub
arpl
inc
ja
fcom
inc
xchg
jbe
gs
dec
clc
mov
push
shll
or
push
pop
jne
mov
clc
cltd
cmp
cmc
sahf
inc
insl
jae
cmpsl
out
inc
mov
cli
lock
cmp
mov
addl
loope
inc
mov
jmp
cmp
mov
ja
xor
jb
pop
loopne
mov
lods
das
jle
fistl
push
scas
xor
sti
dec
es
mov
dec
push
or
xchg
and
adc
and
dec
in
sahf
gs
mov
add
sub
jmp
mov
sub
inc
push
inc
loope
repnz
sub
in
sub
icebp
dec
dec
jns
lods
aaa
xchg
pop
inc
repz
mov
test
test
xchg
imul
lock
fcmovne
sbb
aad
dec
inc
leave
icebp
sahf
jno
lods
aas
push
ret
and
mov
mov
dec
aam
in
pop
xchg
scas
pop
sub
mov
inc
and
jp
inc
cmpsb
mov
dec
shrl
arpl
lock
fistps
jo
jb
xlat
icebp
popf
and
dec
lcall
mov
push
push
lret
cmp
cmp
mov
orb
scas
pop
inc
std
pop
sar
outsl
pop
aam
xchg
int
jg
sahf
push
ja
pop
rclb
lcall
cmpsb
mov
pop
mov
sub
jne
xor
dec
cli
dec
and
push
jne
xor
cmp
adc
xor
lcall
or
xchg
pop
inc
push
hlt
clc
loop
sahf
lods
loop
mov
repz
inc
ret
and
cmpsb
test
shl
add
enter
push
inc
aas
inc
call
xchg
push
sbb
pop
sub
sub
enter
int
mov
and
adcl
mov
sbb
mov
sahf
push
fsubs
xchg
ret
std
sub
pop
lock
rclb
push
xchg
sub
add
arpl
mov
push
jecxz
inc
sbb
enter
sub
lret
jo
jne
fistpll
sub
loopne
sbb
inc
fscale
add
add
in
cwtl
push
stos
outsl
cmpsl
xor
lock
mov
jle
ret
xchg
ret
fldz
out
daa
test
outsl
mov
xor
jae
or
mov
lret
pop
push
xlat
cmpsb
pop
mov
cmc
pop
xchg
loop
jae
test
in
test
dec
or
dec
inc
pop
xor
mov
sahf
lea
popf
mov
loopne
cmpsl
fisttps
fidivl
out
neg
and
gs
sbb
mov
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
sysret
clc
and
orb
xor
divb
pop
xchg
andb
jae
movl
xchg
arpl
scas
pop
ds
jp
sub
sti
test
outsl
push
inc
icebp
xchg
mov
mov
xor
mov
je
pushf
movsl
cmp
imul
fcoms
icebp
xor
fsubrs
pop
in
insb
rcr
mov
xor
sub
pop
jbe
out
fisttpl
ficoms
mov
mov
mov
ds
pop
add
pop
xor
sbb
fsub
push
stos
sbb
sbb
pop
xchg
cmp
test
mov
dec
stos
pop
adc
call
clc
aam
push
push
add
repz
mov
xchg
in
dec
lds
sbb
mov
movsb
iret
leave
xchg
push
jp
cmpb
xor
pop
lcall
cmp
leave
sbb
stc
in
xorb
xor
jnp
out
fmuls
stos
ljmp
pop
mov
jbe
add
std
lret
jo
icebp
cmp
push
pop
add
sub
sub
aas
lea
fs
jp
stc
lret
xlat
mov
jg
dec
push
test
cmp
lods
sti
mov
fnsave
pop
out
jl
xor
and
dec
popw
pop
jno
in
pop
ljmp
fistps
jge
inc
cli
sub
cld
js
lahf
mov
cs
in
inc
sbb
pop
sbb
aas
push
not
rorl
jmp
stos
jae
in
ror
sbb
jns
push
pop
test
out
addr16
add
xchg
jge
push
sub
or
ds
inc
dec
out
popf
sub
sbb
iret
add
cmp
cmp
push
inc
jb
or
out
pop
mov
xchg
call
shlb
loope
rorb
mov
add
outsb
or
dec
mov
fwait
scas
ror
pop
mov
daa
out
popl
mov
shlb
or
push
les
sarb
push
mov
outsl
sti
sub
stos
xchg
fs
pop
rcrl
test
ds
cmpsl
and
lcall
and
lods
xchg
and
mov
mov
xchg
shll
dec
gs
add
ret
mov
stos
mov
imul
push
scas
outsl
adc
jg
xor
mov
xchg
loopne
mov
in
repnz
out
vpsubsb
repz
adc
xlat
int
testl
xchg
jle
iret
enter
sub
and
sub
jmp
lock
ret
push
sub
cmp
call
popa
jne
call
lds
lret
mov
rclb
xchg
roll
jle
push
cmp
repnz
jae
mov
jle
rolb
inc
call
lds
jno
inc
cmp
mul
sbb
mov
dec
out
or
mov
or
sbb
sbb
lods
scas
push
sbb
xchg
adc
sub
imul
mov
notl
push
fcomi
out
jecxz
xor
test
into
mov
push
dec
rcrb
ljmp
mov
xor
pop
jb
cli
lods
sub
add
dec
out
fmuls
mov
jecxz
xor
xchg
adc
std
dec
jnp
rorb
push
dec
xchg
stc
jbe
cs
inc
out
cmovnp
shrb
addl
jle
cmpb
xchg
push
loopne
cmp
xchg
addr16
dec
cmp
mov
rorb
adcb
cmpsb
aad
jge
dec
adc
jnp
pop
fdivrs
cmp
lock
push
les
popf
cmp
add
sbb
xchg
fildl
monitorx
cmpsl
repz
dec
jge
or
xor
mov
jmp
mov
adc
stos
add
add
aad
add
lret
sbb
and
call
ret
inc
xchg
xor
cmpsl
or
cmpsb
sub
jo
xor
sbb
xor
xchg
sbb
loopne
out
mov
les
cmp
test
mov
mov
inc
cld
sub
mov
out
sarb
pop
or
inc
cmpsl
clc
push
rcr
sbb
mov
dec
and
loop
dec
cltd
cmp
add
pop
pop
shl
in
loopne
addb
pop
bound
inc
stos
enter
lahf
icebp
sbb
fsubs
lret
push
xor
sub
cwtl
test
add
and
stc
mov
or
imul
cli
sbb
and
or
xchg
xchg
or
lock
mov
lret
sarb
mov
pop
insb
add
mov
push
or
or
lds
mov
aam
fldenv
in
nop
andl
sbb
lahf
movsb
mov
test
mov
mov
flds
sbb
incb
xchg
jl
inc
pop
mov
popf
inc
mov
sahf
xchg
shll
int
jle
fwait
cmp
xchg
cmp
ret
lahf
repnz
jl
loope
dec
cmp
iret
ret
popa
jl
cltd
pop
dec
fwait
outsl
dec
test
xor
mov
rcrl
cmp
or
mov
pop
int3
rep
dec
lods
mov
xchg
aas
mov
mov
popf
fcoml
pop
cmpsb
push
sbbb
inc
mov
insl
dec
or
fisubrs
test
inc
das
std
aas
cmp
mov
insl
lods
mov
cmp
scas
push
es
imul
sub
sbb
shrb
lds
pusha
aaa
stc
mov
or
pop
ret
push
les
lods
cmpsl
adc
movsl
sbb
das
sbb
push
cli
push
add
inc
xchg
mov
and
sbb
lea
pop
sub
dec
add
or
dec
dec
pusha
iret
lock
mov
and
mov
adc
or
push
fwait
adc
xor
out
sar
mov
lods
orb
sbb
daa
loopne
mov
cmpsb
int
sub
sbb
call
xor
xor
add
xchg
xor
outsl
or
arpl
lea
sub
mov
dec
push
pop
rcrl
test
or
stos
lea
push
ret
xchg
dec
outsb
push
adc
sub
and
push
inc
cld
icebp
aam
mov
add
xchg
test
cltd
mov
cmp
sub
test
xor
mov
xchg
xor
inc
negb
pop
test
inc
scas
pop
out
lds
ror
inc
push
insb
int
push
pop
fstp
std
in
sbb
out
mov
std
rcr
fidivrl
std
add
and
xchg
rorl
xchg
and
or
adc
ss
and
ds
push
sbb
push
test
xor
dec
ret
pop
aam
xchg
fs
out
aam
inc
sub
mov
add
lea
rclb
test
pop
fisubrs
push
test
cmpb
xchg
mov
mov
mov
inc
xchg
ds
sbb
mov
mov
testl
mov
iret
adc
imul
inc
pop
xchg
push
mov
pop
lds
xchg
xor
shll
xchg
mov
sub
imul
and
aad
push
mov
aaa
add
bnd
pusha
sbb
loop
in
stos
fiadds
cmpl
inc
sub
dec
testl
cmpsb
cmpsl
adc
and
inc
lret
push
or
xchg
data16
push
sarl
pop
jl
jo
sub
inc
fdivs
jle
jno
jbe
push
cmp
loope
sub
outsl
aad
imul
dec
in
sti
cmc
push
dec
mov
pusha
stos
mov
xchg
stos
xor
mov
push
repz
popf
arpl
ljmp
lcall
stos
mov
imul
call
mull
in
cmp
sarb
sub
int3
push
sub
mov
cmp
mov
jge
lret
stc
inc
repz
cmpsb
mov
xchg
add
xor
push
jno
lock
jl
xchg
je
cmpl
mov
in
sti
cmp
jns
lods
ljmp
adc
dec
mov
push
ljmp
nop
jno
fwait
int3
inc
add
cmpsl
adc
jo
jo
push
subl
pop
arpl
out
icebp
out
pop
jno
mov
dec
mov
xchg
or
popa
dec
or
dec
mov
in
aaa
or
and
out
ds
into
push
mov
xor
ss
pop
mov
fcomps
stos
lcall
insb
pop
mov
leave
pop
lock
sub
or
jecxz
xchg
xchg
dec
sub
movsb
cld
mov
loop
or
cmp
add
arpl
and
xchg
cmp
fsubr
inc
in
les
rcll
xchg
cmp
inc
iret
push
sub
in
push
cmpsb
test
cli
push
or
inc
xor
hlt
push
insl
cmp
cmp
cs
jp
lcall
cs
testb
out
dec
daa
icebp
psubq
xor
dec
sub
iret
mov
xor
adc
fcom
cld
mov
or
scas
cs
int
xor
sbb
sub
sarb
int3
out
sbb
push
jle
iret
in
lahf
mov
rcl
das
inc
dec
adc
inc
dec
xchg
rclb
dec
sub
data16
jo
push
ss
pop
mov
cmp
cmp
sbb
mov
sbb
ljmp
fldenv
in
and
fwait
popf
test
mov
jne
and
stc
repnz
aam
rorb
mov
cmp
push
jl
pop
mov
out
xchg
sahf
and
inc
movsl
pop
jge
repz
sti
rcll
sub
pop
test
inc
loope
lret
xchg
pop
dec
icebp
xlat
sub
cs
push
push
xchg
cmc
and
mov
aaa
loop
sbb
sub
cltd
mov
leave
sub
push
jbe
jg
add
adc
addb
stos
adc
adc
xchg
shll
inc
mov
fdivs
push
fs
sub
aam
mov
adc
cmpsl
pop
out
scas
pop
inc
test
scas
test
fisttpll
xchg
inc
call
xchg
pop
loope
mov
ljmp
fsts
shll
jb
cld
cltd
jg
push
sub
mov
nop
xchg
into
lods
cmp
mov
pop
xor
lods
cmp
sub
loop
sub
sbb
mov
pop
xor
mov
cmpsb
push
and
dec
cld
adc
pop
pop
stos
rorb
fnstenv
cmp
add
pop
pop
add
mov
sub
enter
jmp
ret
and
adc
addr16
mov
daa
stos
inc
and
fistpll
inc
repz
jl
push
cmpb
jbe
lcall
cmp
add
xchg
in
out
push
es
dec
and
into
mov
xor
push
mov
mov
clc
adc
repz
test
jg
xor
sub
or
mov
mov
mov
and
repz
aas
mov
and
notb
aas
mov
cmp
inc
jbe
sub
jle
and
pop
pusha
add
lock
add
aad
das
inc
ficoml
aam
and
icebp
inc
pop
repz
outsb
and
add
pop
sbbb
jbe
jns
and
aam
mov
jmp
test
pushf
arpl
nop
flds
aas
pand
ret
aas
inc
pop
dec
inc
pop
loop
outsl
push
js
out
xor
jge
pop
push
stos
int3
jnp
adc
xchg
nop
sbb
stos
cltd
xor
or
stos
sub
iret
lahf
push
mov
pop
addl
aam
mov
pop
mov
inc
and
xor
cmc
cltd
adc
cmpsb
sbb
jo
stos
add
dec
icebp
sub
js
xchg
mov
sub
scas
inc
test
dec
push
fldcw
fwait
stos
aaa
add
daa
mov
movsb
cs
jbe
pop
sbb
hlt
lcall
lcall
cld
in
sub
fcomp
into
xchg
jmp
jae
fwait
rorl
pop
pop
jb
mov
and
rorl
dec
mov
or
ficoml
xor
push
gs
lock
fcompl
insl
or
je
pop
xchg
dec
std
aas
adc
sub
data16
dec
jmp
xor
in
jo
mov
xor
push
xchg
inc
addr16
inc
add
jp
or
stc
fstpl
or
mov
adc
in
pop
dec
inc
pop
sbb
mov
aad
imul
inc
es
negl
nopl
push
imul
push
add
mov
xchg
cli
pop
or
push
xchg
rcr
aam
ret
lcall
pop
push
dec
pop
sbb
dec
fnstsw
aaa
jo
es
push
fisubs
vmread
xchg
jae
cltd
cltd
insl
xor
xchg
ss
mov
sub
mov
das
xor
push
cld
mov
sub
cld
das
lds
test
xlat
jns
sub
iret
lods
fiaddl
dec
adc
jle
movsb
pushf
push
fimull
jae
and
add
push
jno
insb
xlat
pop
cmc
sub
dec
sbb
add
jns
bound
ss
je
mov
or
and
rorl
and
dec
jnp
add
xchg
cld
fidivs
cld
clc
jo
sub
aaa
and
cmp
jge
arpl
aad
mov
xchg
aas
dec
pop
mov
pop
cmpsb
adc
inc
xchg
es
jl
mov
sub
adcl
xor
mov
jg
icebp
sbb
or
loop
adc
hlt
idivb
dec
add
movsl
add
mov
push
js
mov
dec
mov
jge
outsl
xor
and
in
push
jle
xchg
fldl
xchg
mov
sbb
pop
outsb
lret
xchg
push
and
push
repz
sbb
leave
pop
inc
out
mov
and
jb
add
dec
mov
scas
mov
inc
jae
push
pop
xchg
outsb
cmc
sub
or
sub
xchg
in
mov
dec
imul
dec
and
mov
mov
xor
sbb
jb
stc
aad
sti
out
or
cwtl
or
aad
xor
push
mov
pop
adc
test
and
dec
or
sbb
std
cmp
push
js
mov
or
inc
enter
fisubrl
cld
sahf
out
pop
jmp
rolb
lds
cmp
in
and
testb
dec
mov
test
pop
push
mov
mov
and
ret
dec
and
inc
add
mov
xor
pop
iret
into
push
test
dec
fadds
cmp
jne
xchg
cli
dec
jecxz
dec
mov
xchg
fsts
inc
inc
gs
popa
jae
jmp
fucomi
jmp
out
add
xchg
shrb
fmull
cmc
push
pop
mov
mov
push
add
cs
mov
add
mov
xor
cmp
cld
jmp
inc
inc
xchg
testb
cmpsl
shlb
lahf
mov
jmp
inc
mov
lods
sub
ljmp
mov
cltd
test
aad
testb
or
mov
or
int3
addr16
inc
inc
shlb
cwtl
outsl
xchg
leave
sbb
imul
enter
scas
jns
aad
inc
fnstenv
cmp
xor
pop
loop
dec
sub
xor
insb
push
call
enter
lods
inc
sub
movsb
mov
sub
rorl
filds
xchg
xor
xor
pop
nop
shll
adc
mov
cmp
mov
repnz
push
xchg
fadd
fistpl
arpl
cmpb
sbb
mov
and
out
nop
scas
inc
sbb
inc
lret
xchg
or
stos
test
push
mov
inc
push
das
leave
adc
cld
clc
shl
inc
cmpsb
push
adc
jmp
insb
or
xor
mov
movsl
xor
dec
pop
ljmp
ja
mov
xor
adc
addl
mov
lret
pop
rcl
insl
sub
test
pop
stc
ret
xchg
loop
push
cld
ret
xchg
jle
rcl
rcll
sbb
add
and
cmp
mov
xchg
jns
sbb
in
inc
mov
pop
mov
and
mov
jbe
push
or
jae
mov
dec
mov
fs
cmp
loope
fstl
push
int
mov
dec
ror
jae
roll
nop
mov
xchg
mov
outsl
je
jb
outsl
jl
mov
and
imul
mov
outsb
add
aam
lds
leave
dec
jge
push
mov
je
xchg
mov
into
inc
lods
or
scas
jne
shl
sarb
rol
jae
dec
jg
mov
addr16
jne
pop
push
xchg
movsl
inc
out
xchg
xchg
mov
cmpsb
push
call
pushl
jne
call
insb
push
lods
mov
aam
cli
jge
sbb
leave
cmp
mov
mov
dec
mov
testl
jg
fwait
or
jmp
daa
mov
xor
push
mov
pusha
jge
fsub
adc
lahf
inc
pop
push
cs
push
outsl
outsb
fstpl
inc
or
daa
push
repz
mov
dec
lea
mov
push
cld
adcb
and
test
inc
push
jmp
adc
lods
cwtl
pop
outsb
pop
push
movsb
das
sarb
test
cmpsl
fmull
jge
xor
jbe
scas
and
adc
daa
shl
mov
in
add
mov
subl
pop
inc
push
mov
mov
leave
inc
cmpsl
dec
xchg
gs
jb
xchg
xchg
bound
cmp
popf
push
mov
jns
mov
rorl
fldenv
rcr
xorl
mov
fsubrs
sub
xlat
cltd
loope
add
test
lret
scas
push
mov
push
stos
push
cmpsb
cmp
out
pop
icebp
test
or
gs
push
push
mov
out
pop
jp
xor
mov
fidivs
jecxz
int3
sub
out
paddb
xor
push
test
rolb
mov
fnstsw
adc
xchg
and
adc
loopne
outsb
xchg
add
cli
ss
pop
jb
dec
cmp
mov
sub
jo
pop
out
daa
lret
dec
scas
cmp
cmc
sti
add
xor
adc
addb
mov
pop
cmp
and
xchg
lret
dec
test
xorb
sub
cmp
bound
xchg
inc
push
dec
outsl
push
or
xor
pop
jbe
adc
lret
jp
adc
shll
outsl
lods
pushf
jb
push
cltd
mov
jae
aam
dec
stos
push
fxch
mov
test
cli
xor
ret
cmpsb
xor
fadds
xor
rorb
and
jnp
clc
jae
out
jp
sbb
lock
movsb
xchg
mov
adc
adc
mov
push
mov
das
inc
dec
pop
jns
mov
aas
sti
cmp
inc
insl
fdiv
sarl
popf
pop
jb
enter
xchg
push
sarb
scas
aad
mov
add
add
pop
movl
jbe
enter
fistl
and
mov
js
mov
pop
test
add
xchg
push
fiadds
cmpsl
subb
ret
lock
sub
adc
or
cmp
sbbl
inc
cli
pop
xchg
lahf
cmp
pop
mov
arpl
lret
sub
add
sahf
out
cmp
popa
imul
xchg
cli
mov
fadds
fidivl
cli
push
call
ret
inc
jne
lret
add
fucom
insb
inc
xchg
push
cwtl
adc
sbb
mov
inc
cmp
andb
cmp
jne
adc
inc
gs
cmpsl
or
mov
mov
ret
aaa
mov
mov
imul
cmp
sub
test
dec
mov
sub
clc
lahf
pop
jl
pop
popf
jg
loopne
fisttpl
pop
jbe
arpl
shll
xchg
aas
or
or
mov
mov
pop
or
outsb
inc
jecxz
pop
add
iret
or
push
dec
shl
ficompl
lcall
shlb
cmp
mov
cltd
je
and
dec
jmp
sub
cmp
push
sub
and
rorb
jp
mov
push
push
out
adc
iret
jo
out
mov
in
sahf
test
mov
out
push
loope
push
rcrb
test
push
test
pop
loopne
int
sbb
into
icebp
jge
dec
pop
repnz
adc
insb
movsb
daa
popa
mov
xchg
out
cli
cmp
je
jg
pop
inc
pop
push
pop
int
movsb
outsl
inc
cmp
dec
adc
dec
xlat
adc
mov
and
movsb
lea
jmp
cmp
adc
sbb
push
loop
push
lret
mov
gs
cmp
test
or
iret
sbb
prefetchwt1
adc
aaa
jo
push
daa
in
cmp
and
imull
mov
dec
pop
test
push
shr
ljmp
cmp
mov
dec
sar
test
les
mov
and
sub
dec
push
jge
sti
sub
inc
outsb
mov
int
and
push
dec
mov
adc
pop
in
pop
enter
mov
inc
xor
popl
add
dec
icebp
incl
in
xchg
ret
fsubl
cmp
pop
sub
int3
jns
mov
mov
decl
and
xchg
aam
test
jb
aam
pop
mov
lea
cld
imul
jno
clc
mov
push
push
test
test
clc
mov
in
mov
cld
nop
xor
mov
addr16
mov
mov
sub
fldz
mov
aad
sbb
xchg
cmpsl
sti
sahf
lds
xor
xchg
sub
outsb
sbb
inc
and
mov
call
or
push
push
jecxz
pop
mov
mov
js
or
lea
xchg
int
lret
pusha
mov
sbb
pop
mov
popf
mov
xor
leave
inc
cld
in
outsb
push
jp
jle
lods
lret
lods
and
addr16
sub
out
sbb
roll
daa
adcb
out
jnp
xor
and
xlat
push
jge
incl
or
out
sub
fdivr
xor
arpl
mov
pop
push
inc
xchg
or
lret
pop
addl
cld
shlb
ret
in
pushf
inc
test
ffree
ljmp
xor
aas
cmp
lock
mov
inc
pop
repnz
es
dec
adc
aas
iret
cmp
jecxz
pushf
xchg
inc
mov
in
lret
mov
cwtl
jge
jns
in
ja
fistps
add
outsl
fmulp
loopne
lret
inc
rep
mov
sub
jo
sbb
scas
lret
dec
cmp
pop
inc
into
sbb
lcall
adc
sbb
fstl
push
jo
mov
shrb
fsts
mov
movsb
pop
xchg
mov
insl
mov
xchg
loopne
sub
sub
pop
mov
sbb
cli
adc
xchg
jb
pop
ret
sbb
push
xchg
lods
js
into
cmp
aas
mov
and
pop
pop
cltd
mov
inc
aas
hlt
lret
inc
jmp
dec
mov
inc
mov
push
push
fwait
pop
adc
xchg
leave
sbb
jne
jle
xchg
xor
and
insl
arpl
pop
testb
inc
push
or
xor
push
dec
sbb
inc
pushf
jg
mov
add
xchg
pushf
add
and
mov
das
dec
dec
into
or
into
fsts
rclb
stc
push
fwait
hlt
xchg
pusha
sbb
and
add
mov
inc
adcb
mov
hlt
fcompl
xor
lods
ja
mov
xchg
lds
dec
mov
cmp
xchg
lds
dec
fldcw
out
stos
mov
xor
js
and
xchg
jecxz
mov
fwait
es
inc
cmpsb
pusha
xor
inc
enter
sbb
and
pop
jge
icebp
test
outsb
daa
es
cld
movsb
or
jl
mov
notb
xorb
pop
pushl
mov
fs
fdivrl
push
inc
enter
xchg
outsb
aaa
idivl
fimull
leave
pop
outsb
push
ja
dec
sarl
in
loopne
cli
jae
mov
xchg
out
xchg
ss
jno
not
xchg
add
shlb
jns
ja
dec
pop
cld
icebp
clc
inc
pop
stos
pop
add
aaa
xor
sahf
jnp
jae
cmpsl
pop
or
jo
inc
mov
out
pop
rorb
ljmp
and
ret
ljmp
addl
pusha
andb
orl
sub
mov
dec
jnp
xchg
sti
jg
rorl
jo
mov
stos
add
shlb
iret
aam
mov
push
insl
orb
add
mov
mov
sub
pop
push
jle
orl
out
pcmpgtd
inc
push
insl
stc
add
loope
pop
ret
aaa
push
orb
inc
les
jbe
lods
jnp
mov
sub
arpl
std
xor
movsl
inc
cwtl
addr16
xor
xor
sub
xlat
pop
mov
push
mov
sti
outsb
ljmp
xor
cmp
push
and
rcrb
iret
pop
cmp
jmp
jecxz
sbb
imul
xor
inc
clc
push
jne
mov
inc
rcrl
das
or
rolw
in
pop
sbb
pop
int
jno
pop
outsl
jne
sbb
enter
xchg
int
out
pop
sbb
ja
fs
notb
mov
jecxz
sub
sbb
mov
cmp
clc
or
imul
movl
jp
fs
imul
or
movsl
fucomi
dec
out
fcmovnbe
into
lret
call
popa
pop
lea
sti
fmuls
xchg
xor
sbb
out
scas
pop
daa
fwait
xchg
dec
adc
mov
jo
mov
popa
push
lahf
repnz
mov
lret
dec
jl
mov
scas
in
push
pop
insl
cmp
sbb
popa
add
cmpsl
lret
and
fwait
aas
es
mov
xchg
mov
inc
bound
scas
xor
pushf
ror
pandn
pop
inc
test
aas
insl
popf
repz
test
mov
inc
stos
adc
rcl
xchg
mov
movsl
leave
mov
fsubl
mov
in
mov
adc
mov
push
xchg
cmp
fistps
lods
push
xchg
push
or
test
repz
mov
dec
loop
ss
mov
inc
mov
loop
sub
push
pop
movl
sub
sbb
push
mov
mov
aaa
dec
shrb
cmp
mov
and
add
push
lods
orl
pop
fimuls
jb
fs
test
pop
test
arpl
pop
sub
push
jle
data16
pop
iret
dec
pop
jle
cmp
pop
sbb
stos
call
fdivr
add
xor
dec
mov
minps
sahf
sbb
xor
push
rclb
adc
sarl
out
in
sub
in
cmp
cwtl
sub
or
stc
lods
pop
push
xor
inc
lock
jle
lods
sub
rcl
jbe
out
lods
mov
push
scas
dec
push
push
rclb
inc
out
dec
inc
cmpsl
xchg
ret
fsts
inc
movsl
jmp
mov
sub
adc
dec
out
clc
lock
cwtl
out
xchg
pop
or
mov
loop
jl
scas
push
xor
mov
sahf
mov
mov
fldenv
sub
mov
sti
mov
xor
xchg
inc
sub
dec
xor
sbb
dec
orl
ficompl
xchg
xor
xchg
stos
xchg
inc
pushf
dec
cmp
mov
call
call
jns
or
dec
int
mov
inc
jb
cmp
inc
movsl
cmpsb
lods
outsl
lcall
stos
lahf
and
mov
sarb
mov
pop
sub
ja
or
adc
inc
cmp
mov
ljmp
sahf
add
call
into
loopne
adc
pop
lcall
add
cmp
mov
sbb
push
sub
popa
fcmovnb
xor
in
dec
pop
pop
loopne
ret
adc
lahf
jl
mov
popf
jmp
xor
pusha
jns
fsubrs
mov
cmp
inc
out
dec
in
shl
data16
ja
xchg
jne
insb
arpl
mov
std
dec
jo
xor
inc
sbb
jle
jmp
mov
inc
sbb
fs
jb
cmp
mov
push
push
and
stc
icebp
addr16
and
cmp
inc
push
inc
inc
pop
pop
pop
or
push
xor
inc
push
fisttpl
pushf
push
xor
out
sbb
and
jns
icebp
fstps
push
push
mov
fiaddl
andb
orb
pop
jp
pop
mov
hlt
xchg
cmp
add
dec
pop
test
sbb
popa
jge
mov
dec
pop
loopne
test
dec
cmp
mov
cli
repz
fs
mov
mov
mov
xor
nop
jge
dec
add
dec
rorl
loope
in
loopne
or
xor
scas
into
imul
cmp
icebp
pop
int3
mov
lock
sbb
stos
loop
dec
pop
sub
push
mov
test
outsb
cld
add
and
push
pop
out
stos
sti
inc
add
lea
ret
push
pop
movsl
or
stos
cwtl
xchg
lods
adc
shl
sti
dec
jno
jo
ss
mov
or
jo
repz
ror
cltd
cmp
mov
mov
ljmp
fs
jecxz
loopne
push
dec
cs
and
inc
sub
arpl
fcoms
jp
jmp
dec
into
mov
cmp
inc
in
inc
push
mov
loop
sbb
xor
cmp
or
push
sub
and
mov
dec
and
push
hlt
int3
push
adc
xor
ret
popf
loope
mov
aad
add
sbb
inc
add
and
sub
cmpsb
add
lods
pop
xchg
jge
add
xchg
rorl
xchg
mov
adc
sub
icebp
push
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
aad
shrl
nop
jl
pop
pop
jl
fistpl
add
mov
mov
aad
call
sahf
pushf
sub
or
lock
mov
pop
sbb
movsl
fcompl
clc
jle
stc
imul
outsb
add
adc
popf
mov
add
xchg
and
inc
xor
add
and
mov
negl
test
add
aam
test
pop
add
pop
add
lds
call
lods
insl
cltd
stc
stos
mov
or
mov
add
push
add
daa
xor
sbb
ret
fimuls
call
mov
daa
repz
jno
iret
lea
popa
filds
cltd
flds
sbb
aam
int
mov
stos
out
xor
pop
insl
jl
nop
xor
mov
mov
mov
dec
cmp
mov
les
lcall
mov
iret
add
call
jb
mov
fisubl
sbb
aas
or
mov
aaa
adc
mov
into
dec
mov
sbb
fcompl
cmp
push
adc
fidivrl
out
in
movsb
pop
mov
lea
sbb
push
xchg
cmpsl
or
push
sbb
xor
faddp
add
and
pop
std
nop
in
fnsaves
pop
cmp
cmpsb
pop
mov
aaa
addr16
sbb
dec
dec
hlt
addr16
adc
repz
repnz
sbb
xchg
aad
and
out
icebp
into
jp
test
stc
stos
jmp
and
jae
cli
aad
into
mov
inc
xchg
scas
out
push
iret
xchg
push
pop
sub
add
dec
jl
mov
inc
pop
das
jg
push
sub
and
pop
cmp
jecxz
xor
ret
arpl
popf
rcrl
jmp
or
cmp
xor
dec
mov
pop
lds
data16
adc
xchg
sbb
xchg
scas
negl
sub
stos
and
xchg
mov
xchg
push
ficoml
or
scas
cli
push
dec
push
mov
aaa
xor
fildl
mov
mov
adc
jmp
js
orl
cmp
and
clc
sbb
fwait
pop
jno
data16
aaa
fs
pop
loopne
popf
movsl
scas
fwait
test
test
mov
pop
mov
ret
mov
aam
dec
jl
mov
fs
or
fstps
inc
fisttpll
iret
fistl
std
xor
jl
mov
stos
repz
mov
pusha
sub
adc
lret
arpl
aad
dec
rclb
push
add
mov
mov
repz
clc
cs
mov
xchg
out
and
dec
sbb
subb
rcr
idivb
imul
loopne
inc
or
jecxz
mov
xor
push
mov
rcll
and
pop
xor
aad
pop
test
out
out
mov
insb
cmp
lret
mov
icebp
push
mov
pop
push
hlt
jbe
add
pop
mov
in
pop
das
or
sbb
mov
mov
xchg
adc
or
xchg
push
call
inc
or
fcmove
or
shrb
sub
inc
jl
and
ljmp
std
or
pop
aas
dec
mov
movsb
sbb
shrl
push
and
std
jne
daa
in
aaa
test
sti
aad
jp
shlb
and
mov
cli
push
mov
fwait
xlat
icebp
outsb
scas
in
jo
inc
cmpsl
inc
or
insb
mov
pop
cwtl
pop
int
sti
mov
add
xchg
sbb
int3
mov
pop
xor
roll
lcall
fstl
in
nop
or
adc
mov
add
popl
push
xor
pop
xchg
or
and
ja
jmp
push
fldcw
pop
xorl
in
mov
xchg
push
jnp
jo
push
dec
xchg
sahf
jnp
ret
std
or
mov
outsb
lahf
or
mov
pop
push
outsb
xor
mov
xchg
mov
cmp
cld
sbb
in
aas
je
sub
fsubs
jne
incb
fmull
push
iret
push
mov
out
fbstp
adc
incb
mov
xor
inc
jle
filds
movsl
daa
cmp
sbb
mov
movsb
sbb
iret
fisubs
inc
and
or
popf
stc
inc
push
inc
sbb
jb
adc
cmp
push
lea
cwtl
cli
cmp
xor
or
icebp
sti
repz
call
stos
sbbl
ret
jne
lcall
adc
push
mov
gs
pop
lcall
xor
es
leave
pop
stos
leave
pop
mov
inc
cwtl
stc
push
aam
loop
cmpsb
sub
pop
ss
rorb
and
mov
call
in
lahf
mov
dec
orl
sub
fstpt
push
popa
shlb
dec
daa
aam
inc
cli
aad
inc
pop
mov
mov
inc
and
mov
inc
cmp
mov
push
lea
push
ret
jne
addr16
jecxz
mov
pop
dec
mov
jge
cmp
fsubrs
cmc
mov
aas
movsb
popa
arpl
sahf
clc
pop
fimull
or
negl
add
cli
pop
cmpsb
adc
int
push
inc
add
jl
lret
add
or
add
aas
insb
jg
mov
or
ret
rcl
fcoms
into
push
mov
dec
in
pop
aad
inc
stos
sbb
xchg
movsb
xor
push
iret
data16
adc
mov
mov
imull
mov
push
cld
adc
enter
gs
xor
dec
ss
loope
bound
push
loope
sbb
pop
xchg
and
clc
andl
fistl
scas
mov
jg
daa
movsl
test
mov
mov
and
jns
push
lret
push
xchg
lret
scas
xor
ret
or
cmc
mov
cmp
add
sarb
adc
mov
jnp
int3
add
imul
daa
add
das
adc
rorl
inc
insb
ss
mov
push
jg
mov
sub
fisttpll
xor
push
pop
jnp
andl
jmp
mov
incl
mov
lds
ljmp
pop
hlt
xchg
and
xchg
cmp
repnz
cmp
imul
mov
test
dec
xchg
aaa
sub
sahf
fadds
dec
jmp
cmc
gs
adc
or
rcrb
aam
cmpsl
repnz
mov
adc
popa
adc
out
das
sub
xchg
sbb
mov
mov
icebp
inc
in
fidivrs
das
in
dec
clc
dec
fs
or
movsb
xchg
mov
test
inc
daa
push
mov
mov
jg
imul
sahf
imul
js
addr16
jl
xor
in
in
rorl
jecxz,pn
repnz
inc
sub
repnz
mov
jbe
push
call
popf
in
push
sbb
push
movsb
dec
iret
push
addr16
pop
and
insl
popf
subb
jo
int3
fchs
aas
arpl
dec
enter
fwait
movsl
mov
push
cmpsb
lret
scas
xchg
jno
filds
popa
nop
cwtl
cmp
dec
inc
mov
mov
xchg
sti
subl
xor
cmp
adc
lahf
xchg
jg
mov
sub
in
mov
add
mov
sub
out
lcall
pusha
sbbb
mov
lret
pop
ja
scas
jge
cli
and
mov
outsb
mov
clc
mov
and
and
sub
call
scas
lcall
fnsave
push
pop
mov
cmp
and
inc
mov
mov
testl
repz
test
lahf
dec
xchg
lret
imul
cmp
andb
mov
and
push
pushf
sub
mov
cmp
inc
mov
pop
loop
dec
fisubs
lea
lahf
inc
xor
mov
mov
into
gs
mov
sbb
insl
repz
dec
push
or
sbb
inc
je
and
popf
shrb
push
out
xor
imul
jnp
lcall
loope
insl
cmp
dec
xchg
mov
pop
fistpl
cs
sub
push
xchg
fistpll
pop
faddl
movsl
sti
in
push
mov
out
mov
adc
dec
data16
jo
cmpsl
scas
sub
cmp
mov
in
pop
xchg
stc
fcmovnu
xchg
lea
push
xchg
adc
pop
mov
mov
cwtl
sbb
ds
dec
cwtl
xchg
sti
sbb
xor
mov
iret
addl
jbe
into
sarb
or
xlat
rcl
inc
sahf
fstp
pcmpeqw
insb
pusha
gs
aad
sbb
data16
push
outsb
jl
add
jbe
push
mov
adc
mov
aaa
and
es
jmp
aas
repz
mov
int
mov
nop
jle
push
xor
cltd
stc
addr16
push
mov
scas
push
jecxz
cmp
enter
dec
or
loop
xor
mov
lea
xchg
push
jnp
outsl
jns
mov
and
pusha
inc
dec
lret
dec
add
sub
xor
xor
xor
xchg
cmp
lret
add
pop
jbe
ss
arpl
sahf
sbb
mov
out
cld
jns
sub
jae
scas
imul
jmp
mov
xchg
out
mov
stos
jnp
lods
and
xchg
push
mov
add
and
add
sbbb
dec
scas
mov
fsts
popa
jp
pop
dec
sub
scas
inc
into
add
into
stc
xchg
dec
xchg
cmp
mov
pop
push
pop
sbb
jne
xchg
or
cmp
jl
pop
jp
loop
push
add
stos
xchg
sbbl
jge
adc
lods
jecxz
daa
pop
push
dec
sbb
in
scas
int3
adc
cmp
add
mov
sub
mov
mov
repnz
scas
mov
push
rclb
std
test
or
mov
pop
inc
push
outsb
or
aas
adc
inc
push
inc
std
mov
cmp
rcrl
cltd
xchg
int
xor
xchg
in
mov
out
movsb
ljmp
sub
out
scas
jae
or
fwait
sub
and
lock
push
mov
or
fidivrl
sbb
and
and
scas
adc
mov
mov
cwtl
adc
movl
jnp
arpl
cmp
mov
dec
shl
imull
pusha
into
ret
sub
adc
or
inc
mov
dec
cld
negl
or
push
fwait
xchg
adc
fsubrp
aam
shll
mov
inc
lods
xlat
jmp
call
idivb
add
sbb
add
mov
out
mov
aaa
pop
out
lahf
inc
mov
into
adc
cmp
test
xor
ret
lcall
mov
cmpb
pop
ss
sub
dec
and
fdivrp
ja
call
scas
xchg
cmp
int3
push
xchg
push
stos
enter
jno
sahf
mov
sarb
test
mov
hlt
pop
jno
imul
test
mov
cltd
ljmp
add
test
sbb
add
xor
bound
int
imul
je
jg
xor
pusha
lahf
cmpsb
jmp
mov
add
lea
out
jg
push
jnp
and
lret
sti
mov
adc
sub
cmc
sbb
xor
lahf
fsubl
dec
jecxz
xor
test
xchg
xchg
pop
dec
mov
or
ficoml
inc
pop
xor
nop
cltd
jno
mov
mov
mov
lcall
loopne
dec
pop
imul
icebp
clc
dec
mov
sub
pop
clc
xchg
push
les
and
sbb
and
leave
hlt
popa
shll
mov
dec
inc
stos
stos
sub
popa
movsl
lock
js
dec
cld
cli
pop
decl
arpl
add
popf
out
sahf
push
or
cmp
mov
and
sbb
in
roll
jg
cwtl
mov
sub
fnsave
movsl
test
fnstcw
jbe
jl
inc
jmp
enter
pop
arpl
clc
mov
sbb
inc
inc
push
adc
outsb
cmpsl
xlat
mov
stc
mov
xchg
lret
jg
test
dec
icebp
stos
or
addr16
inc
mov
les
shlb
jmp
push
sub
iret
jmp
outsl
xlat
fdivrl
aaa
jmp
dec
je
iret
add
jp,pt
xchg
fnstsw
clc
xlat
inc
lret
push
sub
sub
leave
mov
scas
lock
test
adc
push
push
sub
popf
js
sub
dec
cmp
cmp
mov
jle,pt
inc
pop
or
gs
jmp
rcrb
and
or
jg
js
push
push
aad
pop
lods
or
mov
mov
lods
xor
js
mov
arpl
repz
sbb
mov
sti
test
add
sub
jle
insb
test
xor
enter
je
outsb
data16
aaa
popf
insl
pop
adcl
mov
mov
mov
xchg
cli
or
clc
xchg
sbb
ss
es
adc
sbb
dec
sub
push
jecxz
pusha
inc
push
out
adc
test
push
mov
inc
loope
ja
cmpsl
stc
loope
dec
filds
or
scas
mov
mov
mov
insl
pop
stc
les
mov
insb
push
inc
mov
dec
test
fmul
adc
mov
pop
js
arpl
cmp
inc
shl
push
jns
cmp
shl
ficomps
push
movsb
aas
in
add
inc
popa
into
mov
pop
xor
lods
xchg
stos
dec
inc
movb
adc
ret
pop
mov
sbb
data16
mov
test
inc
stc
loopne
dec
xchg
adc
push
ss
dec
jl
lock
nop
lret
dec
out
mov
test
xchg
fcompl
jg
cmc
pop
mov
mov
into
fdivrl
in
jbe
fnsave
leave
loopne
outsl
cmp
arpl
adc
pop
sbb
icebp
mov
hlt
andb
nop
sub
sbb
add
mov
nop
jge
stos
jae
mov
loopne
cmc
in
inc
mov
lds
fbld
cmp
mov
xor
mov
inc
cmpb
mov
bound
inc
mov
xchg
shr
inc
ficompl
sbb
out
mov
sub
xor
repnz
das
mov
sbb
pop
loope
and
mov
fwait
or
in
and
and
dec
or
lret
les
jp
adc
xor
movsl
sbb
or
mov
pop
jle
jmp
xor
cmp
xor
lcall
cmp
int
adc
xchg
push
sbbb
leave
jae
xchg
inc
stos
mov
movsl
cmp
arpl
imul
xchg
dec
in
mov
push
adcb
push
dec
addr16
std
jmp
dec
xlat
xor
dec
imulb
cltd
mov
sub
in
lock
enter
bound
dec
test
mov
inc
xchg
and
std
pxor
adc
pop
push
lret
push
sbbl
add
es
lock
addr16
sbb
push
xchg
call
add
test
push
pop
add
inc
push
enter
xchg
sbb
pop
mov
mov
das
jo
mov
cli
adc
jl
pushl
es
dec
fisttps
movsl
je
mov
mov
ret
and
cs
rcrl
rorl
mov
adc
out
lcall
xchg
aas
filds
sub
cld
test
ret
xlat
stc
jb
out
and
bound
push
lds
fwait
aam
push
scas
jge
test
insl
cwtl
int3
cmp
inc
sti
iret
inc
andb
jne
fldl
sub
push
inc
into
adc
jbe
and
repnz
shll
pop
test
adc
movsl
in
push
cmc
adc
cld
mov
sbb
inc
xchg
lods
sbb
stc
int
xor
mov
lods
mov
arpl
xor
out
iret
testb
loope
mov
add
cmp
and
dec
cs
xchg
jnp
jne
sub
cmp
test
jle
mov
sbb
mov
pop
dec
popa
nop
arpl
mov
lahf
repz
pushw
push
inc
jns
jae
sub
jmp
push
clc
lock
cmp
mov
std
int
mov
dec
loopne
in
or
in
aam
push
sbbb
cld
out
aas
add
push
sbb
dec
sub
fs
ja
jae
pop
jnp
jbe
push
adc
repz
push
jb
push
and
xlat
mov
imull
cmpsb
test
scas
sub
cwtl
xchg
xor
test
or
cwtl
jmp
jecxz
jg
xor
mov
push
testb
pusha
movsl
sub
push
int
fimuls
inc
ljmp
outsb
nop
push
data16
roll
push
xchg
inc
dec
hlt
push
movsb
loop
test
testb
mov
jo
mov
stc
jnp
mov
mov
add
dec
pop
push
addr16
dec
cltd
movsl
scas
xor
mov
or
push
ja
insl
lods
sbb
inc
test
push
cs
adc
bound
or
and
fidivl
aas
inc
add
arpl
cmpb
mov
mov
jnp
push
shlb
jge
mov
ljmp
test
dec
mov
xchg
lods
iret
jns
cltd
adc
aad
push
cli
in
mov
mov
sbb
mov
call
push
lods
inc
sub
cwtl
jbe
push
cwtl
andb
rclb
test
bound
mov
rcrl
loopne
int
xchg
scas
lcall
xor
into
enter
bound
icebp
lahf
mov
cmpl
out
jne
loopne
std
jno,pt
push
pop
pop
adc
and
fdivr
push
push
cli
adc
sbb
adc
js
call
aad
pop
dec
inc
data16
pop
jmp
mov
mov
stc
into
js
inc
xchg
pop
pop
in
adc
and
out
xchg
addr16
loopne
mov
xor
cmpsl
and
popa
insb
add
repnz
inc
sbb
pop
test
xor
dec
xor
or
sbb
mov
ss
dec
mov
xchg
cmp
push
mov
jns
add
sub
loop
clc
les
fcmovu
push
add
mov
ror
aam
arpl
xchg
cmp
jmp
and
and
or
xchg
icebp
dec
mov
imul
lret
lret
fs
int3
sbb
lods
sbb
notl
in
adc
sbb
call
cld
dec
add
mov
jmp
ds
adc
mov
dec
jae
jo
mov
das
data16
in
mov
inc
lcall
mov
add
lea
popf
cmpsl
loopne
push
jl
adc
repz
mov
inc
mov
lds
int
jno
or
arpl
cltd
pushf
loope
cmc
leave
shlb
cmp
lcall
cmc
imul
lock
fisubrs
lret
sub
mov
jmp
cmp
mov
adc
ljmp
adc
ss
xchg
jnp
out
xchg
ret
cmc
add
mov
aad
and
aas
sbb
imul
xchg
mov
xchg
aas
popf
ds
dec
pop
mov
and
inc
cmp
cmpsb
fcmovbe
iret
addl
or
aam
jge
ret
dec
mov
or
mov
sbb
test
fwait
iret
bound
hlt
add
cmp
mov
push
in
popa
pusha
mov
vpaddusb
cmp
mov
mulb
scas
xchg
sbb
out
cmpsl
dec
inc
mov
inc
cs
movsb
xor
jae
pop
mov
mov
js
inc
fcomip
movsl
and
loope
mov
sub
mov
out
aam
movsb
xchg
mov
in
ds
xlat
daa
pop
mov
jnp
mov
xor
cmp
rcll
push
xchg
mov
add
fcomp
pop
mov
jns
jns
in
jmp
push
fadds
fwait
out
dec
xchg
pop
and
xchg
repz
pusha
push
jae
push
fucomp
adcb
cli
movsb
ret
mov
inc
shrl
add
or
rcll
lock
das
adc
je
cli
push
mov
xchg
lcall
and
roll
mov
loopne
fisttpll
add
sub
movl
cmp
std
fcoms
cld
jmp
popa
or
clc
push
mov
pop
xchg
mov
and
jecxz
sarb
mov
xor
lock
sbb
jb
xchg
insl
or
pop
mov
xor
test
adc
mov
imul
movsb
mov
popa
cmc
mov
lret
outsl
jae
arpl
cld
push
pusha
and
sub
test
push
inc
out
shl
xchg
adc
and
rcr
lcall
test
aam
push
pop
dec
repnz
mov
orb
adcb
sub
repz
data16
inc
lea
adc
cmp
sbb
fisttpll
pop
xchg
sub
pop
mov
sbb
and
lret
call
pop
lcall
push
jp
xor
mov
mov
mov
sbb
test
or
orb
cmp
loopne
mov
mov
xchg
or
les
mov
imul
mov
add
popa
sbb
xchg
cmp
test
jne
push
enter
mov
pop
sub
repnz
cmp
negb
sub
lods
test
push
dec
jecxz
pop
xchg
dec
mov
test
in
sahf
pop
pop
jp
jmp
popf
aaa
out
sub
xchg
mov
mov
je
addr16
test
xchg
dec
repnz
cmp
repz
inc
and
cmpsb
pop
aad
pop
pop
call
out
inc
aas
push
mov
jo
sbb
sbb
add
sbb
aaa
in
lods
or
ds
pop
sub
fwait
jl
addl
mov
mov
inc
mov
xchg
add
mov
dec
adc
int
mov
jnp
js
dec
push
add
jp
pop
cltd
out
notb
push
sub
add
popf
jp
mov
cmp
inc
jl
sbb
faddl
mov
out
pop
stos
roll
test
shrl
in
ja
notl
push
test
ret
out
and
push
out
andl
out
int
mov
add
lea
clc
std
sub
mov
mov
cwtl
aas
jo
inc
mov
sti
test
insb
add
mov
push
cmp
clc
push
lret
fildll
mov
cld
out
sti
lds
sbb
pop
pop
notl
loop
xchg
and
pop
adc
and
sbb
shrl
jg
lret
orb
dec
ss
pop
in
xor
pop
mov
pop
pop
add
xchg
ss
sbb
mov
inc
xor
ret
outsl
sbb
mov
fcos
push
cwtl
aad
or
popa
sbb
ja
mov
add
arpl
shl
fildll
cmc
ret
inc
mov
mov
mov
fidivl
mov
les
lcall
insl
sbb
mov
lock
fcmovnb
inc
and
jmp
cmp
xor
hlt
mov
je
lret
mov
mov
dec
mov
jmp
inc
push
scas
or
mov
int
fnstcw
push
shlb
pop
repz
shll
add
icebp
xorl
jae
add
cmp
loop
js
dec
enter
adc
pusha
sub
insb
jns
sub
xchg
mov
push
cs
inc
sti
mov
aam
in
andb
sub
adc
test
xor
mov
shlb
orl
cld
data16
sub
arpl
xor
inc
enter
and
mov
data16
sub
out
xor
adc
ds
andb
and
pop
and
and
mov
mov
jns
dec
add
dec
pop
ficomps
and
cmp
sbb
icebp
aaa
jp
les
js
es
adc
addr16
jmp
clc
jae
cmp
insb
scas
out
xor
inc
fcoms
mov
mov
adc
lret
mov
js
lret
jno
subb
lods
jbe
data16
xor
popf
sbb
sub
ret
dec
cmc
mov
dec
pop
mov
in
fs
pop
jbe
mov
xor
inc
aaa
mov
loopne
push
rcr
push
or
inc
int3
or
dec
test
movsl
push
xchg
shll
mov
inc
int
mov
cltd
inc
imul
xchg
int3
adc
adc
in
inc
idivl
sbb
in
fnstsw
movups
jnp,pt
dec
adc
jo
bound
mov
sub
mov
cmp
mov
push
in
out
pop
adc
aam
dec
in
das
cmp
fisubrl
cld
mov
rcrb
cmp
ja
mov
cmp
sbb
add
stc
ss
xor
xchg
mov
sub
xchg
push
mov
pop
fwait
lods
leave
dec
jns
aaa
pop
dec
inc
movsb
hlt
inc
cmp
test
add
mov
push
outsb
push
jge
shl
dec
jle
out
es
jo
or
add
mov
repz
out
dec
movsb
pop
stc
hlt
push
push
and
xor
jbe
mov
sbb
mov
cmp
fucomp
jno
in
pinsrw
and
pop
push
xchg
xor
inc
pop
scas
daa
jo
int
sub
sub
lea
ret
scas
fiadds
push
test
les
stc
pop
inc
pusha
push
sbb
mov
cli
cwtl
jne
jmp
dec
mov
mov
sub
in
out
aaa
enter
cmp
pop
or
xor
push
sub
cs
or
cmc
lahf
ret
repnz
out
shl
data16
cli
pop
dec
jo
stc
adc
sti
cmp
sbb
adc
movsb
adc
mov
fstl
lret
mov
sbb
rcl
push
add
or
cmpsb
cwtl
lock
mov
minps
repz
test
mov
adc
xchg
das
or
repnz
xor
mov
mov
dec
mov
repz
lcall
inc
add
bound
or
icebp
or
loope
test
inc
lock
addr16
sbb
stc
cwtl
movaps
shrl
stc
sti
dec
lret
pop
and
cwtl
mov
adc
ss
dec
xchg
inc
pushf
imul
inc
pop
nop
dec
out
cli
data16
or
fadds
sarl
push
lds
mov
mov
jb
push
dec
inc
cld
setno
inc
mov
mov
test
fs
enter
pop
out
neg
icebp
push
or
mov
adcl
add
loopne
xchg
mov
stos
dec
ljmp
mov
rclb
mov
in
repz
sub
pop
lods
xor
mov
sbb
mov
jb
mov
mov
icebp
mov
add
addr16
dec
sub
inc
pop
out
aaa
cmp
and
daa
adcb
jmp
scas
ret
loopne
repnz
in
repnz
out
imul
inc
outsl
jg
test
sahf
xchg
adc
ds
or
mov
iret
cld
lea
imul
getsec
fldcw
dec
jbe
jmp
xlat
popf
inc
popa
or
push
sbb
mov
lcall
or
jp
stos
push
outsb
inc
imul
jmp
push
sub
dec
andl
loopne
popa
push
mov
add
adc
ret
pop
adc
inc
pop
inc
clc
sbb
sti
xchg
ficompl
data16
mov
xlat
in
sbb
add
mov
sbb
popf
adc
fidivrs
lea
iret
ret
cmp
daa
inc
push
gs
fwait
mov
cmp
add
test
orb
jmp
inc
push
fs
rorb
inc
xchg
sbb
fwait
ja
into
or
or
sub
sbb
add
sbb
pop
mov
test
sahf
fucomi
incb
inc
mov
add
dec
add
cmp
xlat
push
in
lods
and
adc
sarl
cmpsb
cmpsl
loopne
push
inc
je
out
inc
test
inc
std
xor
insl
popa
rorb
arpl
cmp
out
jg
dec
lcall
out
fbld
clc
test
xchg
sbb
stc
andl
cmp
frstor
and
into
lret
cmp
shlb
xor
add
jp
jbe
test
leave
sbb
lea
xchg
iret
iret
jmp
xchg
mov
or
in
push
pop
test
push
pop
nop
xchg
outsb
mov
scas
mov
jne
sbb
xor
jno
ljmp
shlb
inc
inc
outsb
xor
das
scas
out
lds
pop
inc
fistl
lcall
inc
orl
sub
hlt
stos
cli
sbb
lds
int3
adcl
add
int
fsubrs
mov
idiv
xchg
mov
loopne
out
cmpsb
or
negb
xchg
inc
xchg
adc
dec
sub
dec
ftst
ljmp
cs
stos
xor
pop
daa
int3
xlat
xchg
mov
inc
fcompl
mov
xor
jae
mov
test
hlt
adc
movsb
enter
int
cmc
mov
in
in
jne
or
mov
les
stos
fdivrs
data16
cmpb
and
das
mov
sar
inc
pusha
mov
jle
xor
mov
xlat
sub
dec
mov
mov
adc
and
scas
sti
mov
mov
mov
call
roll
xchg
sbb
mov
mov
fbld
jg
out
lods
insb
and
pop
ljmp
mov
push
ret
aam
push
sbb
rcr
jl
hlt
mull
wbinvd
fadds
pushf
mov
add
out
decl
out
xor
pop
notb
ljmp
and
mov
leave
shlb
imull
push
gs
mov
into
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
sahf
push
pop
cld
dec
adc
add
aas
shlb
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
