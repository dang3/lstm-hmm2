push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
jl
or
mov
mov
rcll
out
fucomp
lock
int3
add
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
mov
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
dec
pop
ret
jnp
cmp
jle
inc
call
pop
xchg
rcrb
lret
sub
das
cmp
xor
jge
or
loopne
pop
adc
inc
aam
movsb
outsl
or
push
add
pop
xor
xor
dec
push
pop
adc
push
test
xor
push
jmp
mov
ret
push
sub
nop
nop
xor
dec
fbstp
mov
fldcw
pusha
sbbb
jmp
push
or
arpl
pusha
int3
mov
das
jp
xchg
pop
jecxz
and
fbld
sub
test
nop
addr16
sbb
and
mov
push
add
mov
xchg
popa
mov
jbe
mov
shll
popa
jne
mov
lcall
jge
push
mov
inc
sbb
inc
int3
das
roll
shrb
push
xchg
sbb
mov
xchg
decb
xchg
scas
in
dec
xorl
cli
frstor
mov
test
push
xor
lea
inc
mov
lods
add
subb
inc
sub
inc
inc
cmpsb
xchg
jbe
xor
fldenv
sarb
jg
cmpb
cmpsb
xor
inc
icebp
cltd
popf
orb
ret
mov
mov
pop
repnz
pop
aaa
mov
in
fs
frstor
cmovbe
mov
mov
mov
std
cwtl
dec
insb
jae
ret
in
and
ss
movsl
sub
and
popa
loopne
mov
dec
popf
jp
sbb
movsb
push
dec
push
dec
sub
shlb
sub
jnp
in
adc
mov
xchg
or
add
fs
xor
jo
push
jmp
iret
adc
jae
dec
and
imull
lahf
nop
and
imul
nop
cmc
andb
adc
or
mov
repnz
test
in
scas
lcall
outsb
pop
xchg
cltd
mov
lock
sbb
xchg
ljmp
mov
sbb
push
shrl
aas
addr16
inc
push
dec
mov
sub
adc
adc
stc
out
cmp
call
jecxz
cmpb
and
jo
adc
addr16
movsb
inc
or
or
push
sahf
cmpsb
std
notb
in
movsb
jmp
jl
push
sbbl
cmc
scas
and
andb
loopne
movsl
hlt
add
xchg
lods
and
ljmp
sahf
dec
ja
pop
scas
sbb
add
mov
cltd
fwait
inc
inc
dec
cmp
mov
jecxz
sbb
cmp
fidivs
psubusw
or
sti
cltd
fs
dec
add
mov
lods
pop
jb
jne
inc
mov
mov
push
xlat
dec
outsl
add
jmp
out
and
out
mov
or
stos
mov
jne
mov
scas
call
arpl
xchg
test
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
int3
das
mov
lods
jns
add
call
insb
pop
rcrl
lock
popl
mov
jmp
daa
jmp
mov
xor
xor
push
inc
mov
call
dec
jb
or
pusha
das
adc
jle
mov
mov
add
repnz
xchg
fwait
test
insl
inc
in
out
fdivrs
jle
stos
sub
lret
mov
sbb
jg
or
sbb
fs
dec
es
inc
mov
push
repnz
add
lods
lahf
pop
push
cmp
xchg
adc
push
pop
cltd
mov
xor
push
pop
mov
push
and
mov
push
lret
inc
xchg
test
jg
and
mov
dec
xchg
call
push
jae
dec
icebp
fcompl
cli
xchg
sub
insb
lock
mov
jle
and
out
sub
sub
jno
jge
inc
clc
xchg
push
dec
mov
popf
pop
dec
movsl
cmp
or
rclb
push
mov
xchg
mov
dec
adc
testb
and
mov
adc
mov
xor
or
outsb
adc
fdivs
push
add
fstps
orl
push
mov
pushf
jnp
ljmp
fwait
pop
xor
mov
cmp
push
jl
lock
cli
mov
dec
scas
sub
dec
cs
dec
mov
scas
adc
imull
imul
adc
das
test
jp
int3
pop
rcll
mov
xor
int3
pop
mov
fistpll
add
xchg
add
lcall
out
push
iret
sub
mov
dec
jae
ret
xchg
test
imul
pop
add
xchg
xchg
aad
add
ja
jnp
insl
outsl
imul
pop
mov
imul
or
xor
int3
std
call
inc
mov
xchg
push
inc
mov
ror
ret
push
fsts
ret
add
je
lods
sarl
or
mov
and
mov
sbb
mov
loop
out
insl
addl
das
mov
repz
and
icebp
out
js
sbb
and
xchg
fstpt
popa
jae
sbb
xlat
dec
les
jbe
jle
inc
inc
inc
xor
int3
fwait
dec
mov
fcmovnbe
xor
je
lret
popf
xchg
mov
inc
iret
or
rcll
adc
in
sarb
movsb
arpl
jecxz
adc
dec
pop
fsts
addr16
inc
pop
and
stos
es
lea
cmp
lcall
in
add
add
int
cmc
xchg
mov
inc
loopne
andb
stos
sub
pop
add
in
jecxz
or
mov
cmpb
cmc
dec
cmp
xchg
roll
stos
cld
ror
add
xchg
je
mov
jl
mov
push
xor
sarb
inc
hlt
pop
mov
es
imul
clc
jp
add
inc
imul
mov
dec
and
sbb
sbb
inc
adc
out
fisubl
fld
aam
cmp
mov
pop
lock
aam
rorb
inc
test
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
ret
or
add
js
arpl
lcall
addr16
movsb
push
ljmp
stc
jae
xchg
lods
std
aad
xchg
mov
xchg
push
sbb
mov
bound
not
pop
xchg
mov
add
test
xor
mov
iret
rorb
test
fwait
je
sub
and
negl
aas
add
out
inc
xlat
mov
adc
add
add
and
and
ror
jae
push
es
sahf
sbb
test
jmp
sbb
call
push
loopne
cmc
inc
testb
mov
or
jb
add
sub
cmpsl
inc
add
fistl
and
fsts
mov
push
mov
jl
test
cwtl
scas
jle
aas
sub
mov
je
ret
or
test
mov
lods
cmp
pushf
test
push
ret
les
test
test
arpl
dec
push
rcr
jae
or
xor
push
in
add
addr16
and
xchg
xchg
andb
rcrb
lahf
xchg
mov
jl
or
idivb
sbb
and
dec
add
jno
cmp
popa
aas
sbb
imul
aad
push
sbb
js
cmp
adc
or
mov
and
fdivs
or
mov
fimuls
dec
out
mov
movsb
mov
jne
or
dec
stos
cwtl
mov
movsb
jge
cmp
add
adc
test
in
in
lock
mov
clc
sbb
add
outsb
ja
inc
popf
or
jl
mov
cmpsb
inc
mov
nop
rorl
iret
sbbb
adc
jo
jle
cmc
scas
shlb
rorl
mov
jp
loope
test
inc
repnz
xor
add
xchg
insb
mov
jmp
inc
xchg
insl
xchg
xchg
cmp
adc
jno
roll
cmp
add
pushf
jno
pushf
and
mov
jo
xor
mov
add
pop
daa
lea
inc
cmp
pop
push
cmp
adc
mov
lea
pushf
push
mov
daa
andl
push
xor
push
sbb
std
xor
jge
test
enter
sbb
addr16
or
mov
fisttpll
scas
push
and
jno
pushf
flds
ror
dec
pop
inc
fisubs
jp
fdivrp
mov
xchg
addr16
js
ds
or
fiadds
cmpsb
add
jg
inc
pop
add
cmp
les
adc
dec
push
cmp
loope
jle
mov
pop
pop
test
mov
jae
orl
add
rcll
mov
outsb
xchg
lods
in
dec
sbb
dec
sbb
xchg
int3
jnp
push
in
sahf
fs
pop
out
xchg
mov
fwait
lahf
xor
or
aam
xchg
popf
mov
cmp
sub
sarb
into
sub
lds
inc
stos
fimuls
and
mov
xchg
dec
sub
movl
movl
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
popf
inc
lcall
les
xchg
stos
sbb
out
fistl
push
jbe
cmp
sub
fwait
jecxz
imul
arpl
jg
mov
mov
icebp
mov
or
jmp
dec
cltd
cmp
push
xchg
outsl
push
iret
adc
cltd
push
rolb
dec
xlat
repnz
outsb
xchg
in
or
and
imul
xchg
jp
mov
out
rcl
mov
std
and
arpl
mov
mov
dec
test
call
stos
test
cmpsl
test
pop
rol
imul
adc
fucom
cmc
pop
mov
iret
ja
test
jns
sahf
mov
clc
orl
daa
cltd
mov
aaa
ja
mov
jb
mov
dec
nop
popa
jle
movsl
fwait
mov
dec
adc
mov
inc
push
fwait
jne
daa
jne
imul
inc
icebp
in
mov
mov
push
lret
es
inc
incb
xchg
mov
lock
shrl
shll
cld
lret
rcll
ret
adc
mov
mov
arpl
aam
out
sahf
lahf
push
ljmp
cmpsl
mov
inc
sub
pop
pop
pushf
push
xor
mov
test
outsb
cwtl
arpl
mov
xor
std
fucomp
js
jge
cmp
jne
add
movsl
scas
jge
jno
jno
dec
test
dec
add
addr16
sub
push
jno
outsl
mov
jbe
cmp
idivl
pop
inc
xchg
mov
push
jnp
cmp
sub
test
dec
lret
fisubrs
js
push
xchg
cltd
add
aam
outsl
mov
dec
add
js
add
andl
mov
mov
sbb
mov
jns
jbe
or
adc
sbb
mov
jle
sbb
icebp
sbb
lret
sbbl
imul
stos
pop
mov
setae
arpl
cmc
mov
inc
iret
fstpt
je
pop
hlt
pop
std
ja
inc
mov
movsl
sbb
fimull
jb
xor
out
iret
fmull
rolb
stc
into
leave
mov
test
addr16
lcall
outsl
hlt
inc
out
pop
push
fnsave
jae
fisubl
mov
xchg
fwait
inc
leave
ljmp
popa
mov
add
xchg
sti
test
cld
leave
pushf
adc
adc
adc
scas
out
push
enter
push
repnz
push
lret
adc
mov
scas
xor
push
inc
repz
or
mov
out
cli
es
shrd
jb
loopne
sub
pop
xor
xchg
pop
lret
movsl
mov
add
mov
jle
popa
push
pop
rcrl
push
ss
jle
call
xchg
add
push
pusha
push
mov
jns
pusha
shll
test
mulb
mov
adc
popfw
jp
and
mov
aas
jae
mov
shll
cmp
mov
mov
popa
inc
lods
mov
adc
sbb
jns
dec
dec
sbb
decb
cmp
in
in
shlb
aad
in
jg
jmp
das
xchg
lcall
cvtps2pi
add
add
test
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
cli
inc
sarl
les
fstpt
cmpsb
and
cmc
pop
imulb
pop
add
stos
jmp
or
enter
test
cmp
mov
sarb
mov
mov
xor
push
xchg
test
add
imul
popa
adc
xor
add
sub
andl
dec
icebp
aas
sub
sbb
cmp
in
fmull
or
idivl
cmp
mov
out
dec
out
test
pop
mov
mov
and
testl
xlat
sbb
int3
cmpsb
inc
enter
imul
mov
fisttpl
out
ja
mov
add
test
sub
add
mov
js
mov
adc
nop
frstor
jns
in
add
lcall
pop
mov
adc
push
xor
mov
ljmp
add
push
repz
rorl
push
inc
pusha
loope
mov
mov
shrl
int
adc
mov
add
fwait
and
repnz
mov
aam
push
clc
pop
mov
mov
or
jb
mov
stc
inc
repnz
rcr
dec
in
pop
push
lahf
push
daa
cli
xchg
arpl
inc
cmpsb
shrl
mov
lcall
cs
fiadds
roll
loope
pop
inc
in
mov
xchg
dec
call
push
shrl
addr16
and
cltd
pop
scas
push
jmp
jmp
jb
iret
push
hlt
lods
push
movsb
es
cmp
sbb
scas
jnp
movsb
arpl
mov
dec
push
and
mov
outsb
push
and
addb
sbbl
pop
repnz
aaa
dec
lock
mov
xchg
or
inc
into
pop
jno
inc
leave
sbbb
and
insb
pop
xchg
fs
je
popa
js
add
std
or
in
icebp
pushf
mov
sbb
or
dec
stc
pop
imul
mov
jae
setnp
int3
jbe
stc
unpckhps
stos
shl
mov
or
sbb
rolb
pop
pushf
mov
dec
cmc
shrb
sarl
lea
arpl
scas
mov
push
or
sahf
int3
clc
sub
repnz
out
bnd
and
test
xlat
mov
jmp
jae
jle
jp
jne
jne
push
test
mov
xor
or
mov
addb
adc
fs
jb
jmp
loope
and
xchg
mov
movsb
scas
xor
and
mov
xchg
lcall
sub
aaa
and
jp
dec
icebp
fidivrl
es
mov
lds
inc
dec
mov
ljmp
jg
xlat
ss
add
rcrl
hlt
or
es
jo
test
leave
or
lds
mov
xor
pop
xorb
xor
fstps
pop
push
pushf
repnz
inc
inc
mov
std
insb
and
and
sar
out
data16
xor
pop
jle
ds
ds
xor
push
fistpll
or
scas
pop
insl
mov
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
dec
mov
mov
mov
jle
scas
dec
imul
rcr
mov
xchg
aaa
fpatan
in
mov
jge
lea
jl
cli
xor
jo
repnz
mov
lret
xchg
xchg
jmp
push
or
add
in
into
pop
push
lret
and
shr
hlt
jae
sti
shlb
frstor
lret
pop
jae
cwtl
or
sbb
fnsave
pushf
mov
aad
out
lock
dec
mov
orb
mov
fdiv
add
xchg
shl
frstor
pusha
push
push
mov
aas
sbbb
and
scas
lahf
cld
ror
fucom
push
push
sbb
hlt
adc
fs
pop
xchg
push
or
loop
dec
mov
rcr
std
jl
ja
push
das
fistpl
bound
mov
ficoml
lods
negb
inc
jge
das
aad
fs
or
outsl
xor
xchg
insl
sbb
and
lea
repnz
push
adcl
js
insb
into
mov
cmp
mov
mov
adc
mov
fldl
xor
gs
in
jbe
lahf
jnp
sbb
dec
jbe
xor
fwait
mov
stos
push
stos
pop
gs
or
adc
loopne
dec
mov
mov
sbb
mov
adc
adc
and
cmpsb
stc
xorb
jmp
clc
xor
ret
dec
or
xchg
sub
in
and
xchg
xor
pusha
jl
sub
stc
inc
mov
cmp
pop
loop
adc
pusha
subb
mov
jno
push
popf
inc
jmp
in
mov
mov
les
lret
lods
pop
outsb
jne
sub
adc
repz
out
add
test
inc
xchg
xchg
jmp
fcmovu
outsb
pop
jmp
pop
dec
aas
cmp
out
push
inc
xchg
sub
popa
add
mov
and
fcmovnb
dec
mov
push
gs
lds
jecxz
xchg
mov
xchg
in
sbb
ljmp
dec
leave
sarb
mulb
les
push
dec
lds
xor
and
jmp
mov
in
lret
fucom
das
add
dec
push
popf
inc
out
mov
mov
leave
mov
out
pop
lcall
jl
sbb
add
je
pop
scas
test
outsb
adc
mov
call
mov
out
rolb
sbb
add
jmp
mov
fs
std
mov
mov
int3
icebp
js
stos
jmp
cmpsb
dec
sbb
es
xor
and
outsb
aas
jb
sbb
fnstcw
ss
mov
jne
lods
fsubrs
mov
and
flds
sbb
ret
rcr
xor
sub
mov
movsb
add
rcl
inc
lods
push
xchg
movsl
ficompl
cmp
and
dec
jl
fbstp
xchg
aas
cmp
pop
ret
dec
cli
cld
aad
cmp
xchg
pop
inc
push
mov
push
xor
shrl
mov
dec
mov
rorl
nop
inc
ja
outsl
pop
pop
leave
mov
in
lods
push
dec
shlb
fcoms
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fnstsw
call
mov
mov
fxam
push
jnp
rolb
pop
enter
push
inc
sub
lds
adc
mov
add
shlb
nop
mov
scas
push
mov
outsb
inc
and
push
add
xlat
pop
neg
std
out
enter
sub
jg
jnp
jno
ljmp
test
in
mov
cwtl
jl
cmc
les
inc
and
push
lcall
cwtl
sbb
or
aad
jo
or
mov
addr16
rorl
xchg
sbbb
and
in
fs
xchg
cltd
sbb
mov
push
xchg
xor
test
aam
rorb
or
jne
insl
and
out
or
ret
movsl
je
push
push
mov
mov
gs
inc
rorb
xchg
dec
inc
js
pop
xchg
in
inc
and
lock
sbb
adc
pushf
out
inc
mov
xchg
ret
test
pop
jg
neg
repz
xor
inc
les
pop
mov
xor
ss
xchg
fsubrl
ljmp
outsb
icebp
rcr
fidivrs
repnz
add
dec
or
testb
jo
fnstsw
mov
jb
dec
dec
xor
sbb
sub
icebp
jo
shll
sbb
aad
and
dec
fs
aaa
movsl
pop
dec
adc
int3
jbe
int3
dec
inc
xchg
addl
arpl
xchg
dec
inc
dec
inc
xorl
fwait
loope
fs
out
push
inc
shlb
aas
je
cmp
inc
push
call
jnp
cld
or
cmp
test
bound
cld
jle
insl
cmp
shrb
and
leave
nop
adc
push
xor
pop
xlat
xor
repz
out
aad
mov
cmp
mov
mov
fnstenv
jo
pop
dec
mov
jp
push
push
and
ja
sub
mov
sbb
mov
mov
add
jge
push
xor
into
jae
cmp
fisubs
adc
outsb
fs
mov
mov
adc
inc
cmc
or
rol
jb
in
int3
jae
or
in
jb
cmpsb
cmp
movl
pop
jns
lock
repz
inc
inc
and
imul
pop
xor
xor
adc
xchg
daa
fnstenv
push
mov
adc
mov
bound
lods
sarb
movsb
sahf
cltd
adcb
mov
lods
popa
lahf
sbb
xor
push
mov
or
movsb
adc
adc
xor
jo
xchg
mov
cmp
leave
mov
sbb
cmp
cld
lret
xchg
pop
mov
std
push
mov
cmc
dec
push
cltd
repnz
jge
insb
aaa
bound
icebp
push
les
ror
and
cmp
add
cmpsl
jp
or
cwtl
xor
add
orl
dec
movsb
mov
into
stc
inc
mov
xor
inc
cmpsb
push
lds
pop
add
dec
in
or
cmpsb
loopne
push
sbb
icebp
push
sub
jno
lcall
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
fbld
pop
int
jge
faddl
andb
scas
adc
jae
sub
pop
xchg
outsb
loope
aad
imul
sub
sbb
outsb
sub
jne
cmp
cmpsl
pop
pop
add
daa
push
dec
insb
jo
dec
dec
xor
mov
leave
ds
setbe
lret
inc
sti
mov
lret
add
sub
outsb
ljmp
add
aas
punpcklwd
lret
out
xor
imul
inc
test
mov
rcrl
arpl
adc
scas
outsl
jnp
cltd
sti
subl
out
cltd
imul
divl
movsl
pusha
in
fmuls
xor
cmp
jbe
jge
popf
and
sbb
inc
sbb
mov
push
xchg
jo
jg
or
jne
mov
sbb
insb
push
imul
sbb
xchg
lods
inc
sub
inc
movlps
and
sti
ficoms
enter
pusha
notb
rcl
cwtl
jmp
sub
dec
cmp
sahf
aad
xchg
xor
cmp
cmp
arpl
adc
add
bound
adc
cmc
ljmp
pop
pop
pop
jge
lret
roll
roll
jg
loop
aaa
dec
xor
cmpsl
dec
xor
adc
mov
arpl
sarl
fsubrp
jnp
hlt
jne
ret
adc
int
adc
jle
sub
aam
data16
stos
push
push
dec
xor
mov
lahf
pop
xor
pushf
dec
aaa
aas
popf
faddl
inc
jmp
mov
jecxz
mov
dec
fldt
fistpl
addb
fldt
movsb
ja
dec
push
add
sub
dec
push
les
pop
ss
adc
adc
mov
pop
stos
rorb
push
stos
mov
mov
jmp
xor
pop
das
xor
push
jmp
or
push
mov
and
push
push
jmp
insb
lcall
test
xchg
std
pop
ffree
mov
fxch
cmp
sub
jmp
fcoml
inc
mov
xorb
mov
add
push
xchg
outsb
add
jmp
insl
fwait
hlt
jl
xor
pop
xor
pop
push
cmp
ret
lahf
scas
lock
rclb
cltd
popf
mov
add
inc
scas
push
dec
mov
jno
out
push
call
lahf
jp
mov
jp
fisttpl
testb
sub
in
mov
jae
out
lret
mov
cwtl
adc
or
je
and
dec
sub
enter
pop
enter
iret
cmp
xor
and
daa
es
or
inc
out
test
and
bound
ficoms
sbb
repnz
or
cmc
out
add
add
xchg
cmp
pop
and
arpl
dec
pop
ret
inc
and
cmp
repnz
jge
xor
inc
add
or
inc
xor
mov
sbb
xorl
push
aam
xchg
fsts
movsb
gs
xchg
xchg
imul
xlat
test
mov
mov
insb
pop
insl
pop
cli
xor
dec
push
or
and
repz
fimull
ljmp
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
shll
cmc
mov
mov
iret
inc
dec
enter
gs
arpl
loop
push
push
mov
mov
inc
sbb
sub
mov
jmp
loopne
and
cmpsl
xor
sarl
sub
jge
addl
stc
pushf
in
ja
pop
lods
lods
xchg
pop
push
shrl
mov
arpl
and
jl
insb
mov
arpl
mov
ljmp
imul
dec
add
out
cltd
jb
dec
xor
pop
sub
js
sub
out
push
pop
push
fists
mov
call
ljmp
inc
dec
dec
pop
push
push
jp
outsb
insb
cmp
dec
stos
in
pusha
cmp
int3
mov
mov
cmpb
ret
inc
outsl
mov
dec
shr
jae
jb
jp
jmp
xor
mov
mov
lds
push
neg
inc
adc
ret
or
stc
in
pop
adc
push
int
or
xlat
pop
pop
mov
xorb
push
test
adc
test
loope
push
xchg
js
outsl
push
xor
daa
jnp
mov
paddsb
mov
or
addb
xchg
inc
inc
mov
mov
fucomi
popa
hlt
inc
cmp
cmp
jne
insl
mov
push
jmp
xchg
adc
sbb
addr16
je
xor
cli
adc
xorl
lock
lret
adc
gs
mov
out
and
stos
sti
out
in
push
call
call
cli
aas
arpl
push
xor
mov
jno
mov
das
xchg
jne
adc
jmp
shlb
in
sbb
sbb
adcb
int3
shll
ds
loopne
loope
insb
sahf
pop
stos
fwait
mov
add
push
ret
jns
xor
xchg
pop
fimuls
test
jle
lock
jnp
leave
inc
cld
sarb
shll
loop
scas
pop
iret
cmp
addl
push
addr16
cmpl
inc
faddl
rorb
into
test
lods
popa
fsubl
xor
and
adc
loope
pop
cwtl
pushf
pusha
inc
push
in
cmp
cltd
push
pusha
inc
mov
mov
das
ja
mov
icebp
sarb
mov
test
sub
ss
rolb
push
cwtl
lods
call
pop
xchg
shlb
and
popf
push
mov
ds
mov
mov
sub
pushf
dec
pushf
insl
push
daa
test
mov
mov
xchg
call
cltd
cmp
jecxz
adc
fs
in
int3
and
pop
dec
sbb
and
js
cmp
mov
sub
pop
sbb
cmp
jg
mov
mov
jmp
lods
test
into
fwait
and
xor
dec
inc
jns
mov
hlt
mov
sub
and
loopne
into
call
jge
fs
and
ficoms
mov
cmpl
mov
test
cltd
iret
mov
or
push
jae
pop
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
hlt
imul
pop
pop
dec
mov
stc
pop
xchg
xchg
sub
xor
adc
or
mov
add
fs
ss
fsts
outsb
dec
out
dec
je
sbb
cmp
jmp
jne
mov
add
xchg
lret
jno
push
cmp
stos
add
cmp
push
jae
jnp
pop
idiv
sbb
lret
addr16
jns
sahf
outsb
lods
loopne
or
mov
lahf
jmp
mov
lods
test
fmuls
push
fsubl
fdiv
dec
and
mov
add
push
mov
jp
mov
jo
push
pop
jecxz
rcrl
je
mov
lods
inc
inc
push
in
test
push
das
xchg
popl
test
xchg
movsl
movsb
pop
pop
inc
dec
in
nop
stc
jge
cmc
xor
test
imul
jns
cmpsb
sub
sub
push
aad
dec
push
lahf
pop
jo
sbb
mov
cmp
mov
push
or
jle
xchg
mov
insb
add
int3
dec
sub
push
mull
outsl
push
cmpsb
pop
in
cmpsb
xchg
pop
add
inc
inc
pushf
mov
dec
pushf
push
or
adc
jle
and
cli
jns
test
addr16
repz
adc
pop
data16
pop
push
xor
repnz
sub
dec
fldenv
mov
mov
data16
iret
push
jmp
lahf
mov
test
repnz
mov
jnp
test
stos
ss
pop
in
ljmp
mov
cld
mov
sub
mov
fstps
nop
pop
stc
popf
pop
aad
jp
xor
mov
xchg
mov
push
xor
xor
imul
test
push
mov
fidivs
or
jg
add
lret
call
push
mov
adc
ret
fisubs
hlt
std
and
leave
mov
mov
pushf
cltd
dec
sub
test
outsl
aaa
pop
adcb
push
pop
sbb
sbb
push
sbb
aam
jne
xchg
shll
push
stc
pusha
sbb
setb
imul
jo
stc
xor
or
outsl
mov
mov
in
cld
pop
lret
add
rcr
outsb
xor
sub
imul
add
divl
addb
cmp
out
bound
cmp
xor
fisttpll
call
fldt
push
enter
adc
rorl
sbb
sbb
mov
into
lods
repnz
sbb
add
mov
jl
arpl
inc
push
and
shll
mov
test
mov
lahf
sub
jno
xchg
cmp
pop
es
rcrb
push
xor
xchg
ljmp
push
pusha
and
mov
fldenv
xor
mov
jle
out
repz
clc
outsl
mov
fildl
pop
pop
cmp
xor
cmpsl
xchg
adc
rcrl
icebp
sahf
add
lds
mov
int3
shlb
or
jge
in
jmp
cmp
mov
mov
div
imul
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
dec
jecxz
sahf
mov
les
mov
fcoml
dec
int3
inc
cmp
rolb
stc
insl
mov
inc
add
dec
sbb
stc
xor
out
ja
ja
in
jnp
cmp
gs
or
push
push
xchg
mov
mov
and
dec
aas
lret
repz
fdivrl
jo
call
lods
leave
ds
insb
in
mov
dec
lcall
sbb
aad
test
cmc
pop
push
xor
pop
cmp
add
ret
mov
push
nop
outsl
dec
pusha
and
cmpsb
inc
inc
or
xor
fucomi
fisttpll
loopw
dec
lcall
cli
sbb
sbb
push
js
cmp
imul
dec
push
loopne
ss
shr
xchg
xor
mov
add
ljmp
mov
xor
ret
jo
cmpb
test
inc
add
and
mov
pop
daa
push
fcos
and
ret
movsl
dec
mov
mov
cmp
mov
mov
repz
mov
xchg
shr
sbb
and
xchg
sbb
clc
aas
adc
shrl
jp
jecxz
cmp
jp
ljmp
gs
or
mov
mov
repnz
sub
mov
adc
jne
xor
sbb
vaddsd
rcrl
mov
cmp
push
sub
xchg
cvtps2pd
daa
jg
dec
and
fnstenv
lds
out
push
call
push
sbb
xor
mov
enter
xlat
icebp
repz
xchg
mov
dec
xchg
clc
dec
std
jl
cmc
pop
add
xor
mov
xlat
or
imul
fdivrp
pop
roll
aaa
aam
dec
xchg
pusha
inc
test
loop
fmull
imul
stos
pop
insl
negb
mov
cmp
or
out
bound
cwtl
negb
add
cmp
das
lds
ljmp
sti
jecxz
mov
pusha
shrb
js
add
dec
dec
fldl
fistl
fistl
sbb
push
xchg
cmp
cli
bound
xor
imul
cmpsl
and
add
cmpb
xor
lret
clc
jg
dec
sbb
push
mov
orl
out
icebp
aas
or
scas
enter
xor
mov
cwtl
rclb
shll
sahf
iret
and
int3
mov
dec
pop
mov
lock
cmp
es
scas
mov
into
and
xor
push
outsl
mov
pop
jl
scas
pop
sub
add
or
jl
jp
jae
fldcw
mov
cli
lods
jb
aad
pop
cltd
pop
pop
xchg
mov
push
cmpsb
or
mov
or
xor
out
cmc
scas
sub
es
push
in
sti
es
mov
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
scas
adc
fnstsw
les
mov
call
mov
rolb
inc
into
xchg
jle,pt
test
sti
ret
lahf
ljmp
mov
adc
jae
inc
and
arpl
dec
fdiv
mov
insl
je
ljmp
add
push
mov
ds
mov
jae
loopne
pop
mov
test
mov
and
cltd
dec
movsb
ds
jnp
and
nop
xlat
lds
in
jns
enter
mov
lahf
insb
push
filds
nop
push
aam
sub
mov
iret
stc
sti
sub
add
mov
sbb
loopne
mov
test
add
je
xchg
das
inc
clc
and
jns
and
cmpsb
mov
push
dec
sti
ljmp
push
jnp
icebp
sub
fldcw
jle
loopne
mov
fwait
add
out
jecxz
xchg
outsl
incb
and
push
int3
push
int
sbb
ret
sti
adc
mov
shr
xor
inc
repnz
xor
push
xchg
fdivl
int3
sub
push
cwtl
cmp
loope
arpl
in
neg
in
dec
rclb
inc
jp
cli
sbb
jp
fidivrs
fistl
les
shlw
sti
loop
mov
xchg
sbb
sub
xor
mov
outsb
xchg
out
fbld
leave
dec
add
outsl
xchg
shlb
mov
mov
test
frstor
mov
into
push
mov
ljmp
ja,pt
ficomps
mov
xor
push
and
int3
pop
adc
js
push
adc
into
push
imul
jns
andl
div
in
out
faddp
xchg
push
mov
or
or
jo
insb
inc
jg
push
popf
push
and
push
iret
popf
fnstsw
stc
sub
inc
sub
int3
aas
jecxz
mov
or
xchg
fmull
push
adc
addl
test
pop
jge
push
mov
jmp
cli
fldt
aam
or
xor
movsl
aad
lods
dec
sub
lods
mov
stc
lret
mov
pop
inc
dec
xlat
sub
and
popl
mov
jb
push
in
xchg
dec
lea
cmp
and
push
pusha
xchg
cmpsb
mov
in
aad
aam
xor
mov
enter
jbe
sbb
je
sbb
mov
outsb
jnp
dec
fiaddl
adc
xchg
call
das
lock
fstpt
dec
xchg
lods
sub
sbb
inc
es
mov
cld
hlt
dec
xor
loop
adc
rol
imul
or
lahf
sbbb
subl
jne
nop
push
pop
pop
adc
add
mov
test
mov
cli
popf
or
cwtl
push
add
les
lds
sbb
je
pop
inc
movsl
sub
dec
adc
into
jb
push
cwtl
mov
out
rcrl
adc
xchg
jg
cmpsl
jle
inc
mov
mov
andb
mov
add
inc
rcll
sbb
stc
or
dec
outsb
cmpsl
cmp
push
and
std
sti
nop
inc
xor
stos
aas
mov
stc
enter
cmc
add
add
mov
pop
or
adc
add
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
xchg
test
mov
les
xchg
sub
cmp
fs
jb
nop
lock
ja
pushf
mov
dec
roll
insl
fsts
cmp
push
aas
mul
subl
mov
jge
adc
rorl
scas
jmp
add
inc
test
dec
xchg
jp
data16
xor
jno
mov
int3
pop
add
mov
and
xchg
movsb
dec
jl
outsl
aas
lret
cli
into
in
or
add
cmp
leave
cmc
dec
inc
testb
sti
inc
mov
fldcw
out
mov
adc
or
xor
mov
jb
dec
call
mov
popf
das
pop
loop
sub
push
and
sub
sbbb
sub
filds
xchg
rcrl
cwtl
sub
mov
push
push
fldenv
es
std
popf
popf
inc
xchg
push
rclb
jno
pop
push
std
sbbb
and
and
adc
ret
das
mov
stos
pop
mov
imul
xor
into
xchg
out
xchg
mov
addr16
popa
fdivrs
ljmp
jle
xchg
dec
loop
or
mov
mov
xchg
clc
imul
xchg
cwtl
inc
fs
roll
lock
adc
xor
adc
scas
and
cmc
loop
xor
int3
pop
or
or
ss
and
hlt
mov
xlat
mov
sbb
xchg
mov
jno
xchg
jcxz
hlt
nop
cmp
sbb
aaa
sti
enter
sub
adc
les
sbb
sub
sbb
lcall
and
xor
push
outsb
push
jns,pt
xlat
xchg
dec
sbbl
outsb
out
enter
lea
daa
or
idivb
in
pushf
dec
add
pop
movlps
xlat
sbb
fdivs
xor
data16
ds
outsb
test
shll
cld
iret
mov
cmpsb
movsb
sub
pop
popf
out
fsubrp
dec
and
dec
fisttpl
mov
add
rclb
hlt
mov
sbb
fs
pop
imul
in
xlat
leave
and
sub
and
enter
sbb
cli
call
cltd
shlb
or
lds
jno
pop
lcall
cwtl
shl
orb
test
in
out
sub
or
pop
insl
or
test
xor
into
and
fiadds
cmpsb
lahf
dec
xchg
inc
fdivrs
pop
or
jnp
stos
lcall
notl
ret
inc
pop
je
mov
leave
div
pop
es
in
jne
cmp
shll
dec
or
xchg
fisubs
xor
out
insb
mov
and
inc
fxch
arpl
push
push
pop
xchg
push
imul
sbb
jo
dec
dec
subl
stos
add
cli
leave
add
push
pop
adc
pop
jp
mov
ss
sub
mov
fstps
mov
push
in
imul
sub
test
not
jno
push
jg
arpl
out
push
and
cmp
stc
jl
scas
and
imul
pushf
mov
pop
jns
in
into
cmp
xor
mov
popf
inc
clc
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
rcr
xchg
mov
les
ficompl
adc
dec
je
int3
mov
jecxz
pop
ficoml
push
jno
mov
icebp
nop
jnp
xchg
test
mov
sbb
jl
stos
inc
scas
leave
test
or
xchg
push
lcall
jne
dec
adcl
lcall
inc
test
loope
in
pop
fs
cmpsb
push
fcoml
xor
lods
pushf
fwait
imul
fnstenv
fcoml
sbb
inc
and
mov
sub
iret
ja
insb
xor
test
daa
xlat
sub
out
into
sbb
test
add
mov
and
cmp
outsb
shlb
in
inc
rcrl
add
cs
xor
mov
rcll
loop
cmp
and
inc
andb
pop
inc
enter
mov
cli
pop
out
pop
imul
xchg
je
add
add
adc
cmp
insl
hlt
and
jp
pop
sahf
push
test
pop
mov
or
pop
in
iret
in
jp
stos
dec
push
repnz
push
jb
aaa
sahf
int3
cwtl
and
push
mov
stos
xchg
imull
mov
xor
pop
addb
inc
jg
mov
in
bound
jmp
mov
add
mov
fwait
dec
fbld
jno
mov
ret
rcrl
or
mov
inc
aam
aam
test
dec
mov
in
js
push
aad
fsincos
pop
imull
call
ljmp
fisttpll
or
and
test
cs
cld
in
dec
and
jp
icebp
xor
in
leave
lcall
dec
outsb
mov
data16
inc
mov
shll
mov
cmp
lcall
jb
mov
cmp
mov
movsl
jecxz
lret
hlt
mov
mov
mov
sub
cmpsl
pop
cs
cltd
and
jmp
lods
sar
outsb
and
aad
sbb
inc
arpl
fwait
js
nop
mov
pop
lds
sti
pop
ss
add
or
lcall
call
in
xchg
jnp
outsb
fsubrs
cmpsb
sub
xchg
jbe
or
push
lcall
mov
mov
fwait
ss
sbb
popf
xchg
and
xor
and
pop
nop
pushf
adc
clc
ficoms
mov
xlat
pop
imul
xor
push
jae
js
push
mov
scas
loop
jae
sbb
call
scas
push
add
and
inc
mov
notb
dec
aas
jns
add
inc
lea
mov
mov
sbb
lcall
or
and
out
stc
add
add
aam
in
in
ret
or
push
loope
sbb
gs
mov
fldcw
jle
jb
jnp
add
sbb
stc
into
push
push
ja
jp
mov
das
add
sti
and
dec
or
mov
add
leave
fnsave
fidivl
pop
and
aaa
cwtl
outsl
lock
xchg
sub
test
sbb
loop
xchg
jp
lods
add
or
mov
dec
not
jmp
int
mov
sbb
mov
shll
nop
nop
mov
les
ret
inc
or
add
jns
jmp
sub
test
lret
mov
sub
cmpsl
dec
xor
andb
dec
xchg
ret
cmp
xchg
jecxz
scas
dec
cs
push
jle
push
je
frstor
mov
mov
mov
lret
add
xor
loop
lds
fmull
hlt
or
add
xchg
adc
jg
pusha
popa
rcll
mov
dec
das
jo
pop
mov
mov
cmp
insb
xor
jmp
loop
pop
mov
lea
push
int
jno
ret
xorl
pop
lea
out
or
fbld
lahf
shr
negl
pop
pop
xor
data16
sbb
divl
xchg
adcl
adc
dec
sbb
xchg
dec
ret
dec
xor
or
or
inc
std
je
stos
sub
mov
dec
sub
fisttpll
ja
xor
cmp
insb
scas
inc
ds
fisttps
push
movsl
jb
push
jle
pushf
pusha
loop
rorl
fimuls
mov
pop
xlat
repnz
out
jno
sahf
lods
jp
sbb
test
fisttps
mov
addr16
mov
repz
movsl
push
dec
mov
out
xor
das
psllw
mov
pop
int
mov
mov
sbb
shlb
sub
cld
push
or
sbb
mov
add
out
insl
in
shll
push
sbb
dec
stos
mov
mov
xor
sbb
in
push
mov
stc
out
jno
lahf
in
dec
xchg
in
xor
jns
mov
mov
lea
inc
pop
mov
adc
jae
js
das
int3
repz
outsl
lods
test
lea
es
xchg
aas
pop
loope
jb
rcl
jle
xchg
adc
or
push
mov
pushf
js
test
clc
adc
aaa
lret
mov
int
std
jecxz
mov
shlb
hlt
test
jbe
mov
adc
mov
cmp
rol
cld
in
jno
mov
vrsqrtss
pop
je
xchg
dec
adcb
cmpsb
outsb
jle
pop
xor
adc
mov
xor
bound
pop
dec
push
inc
rcll
or
jmp
mov
mov
or
adc
inc
in
push
cmpsb
fldt
sub
es
dec
loop
xor
xor
adc
mov
imul
sub
ret
inc
andl
dec
nop
adc
pusha
push
jmp
xchg
pusha
dec
das
mov
mov
xchg
or
cmp
mov
jne
lcall
pop
mov
in
adc
xor
cld
sbb
decb
cmc
push
jno
cmp
mov
mov
gs
in
outsb
sahf
out
in
mov
mov
adc
add
adc
insl
mov
bound
adc
xor
push
push
push
sub
in
adc
inc
push
cmpsb
sbb
insl
or
leave
int
outsb
lock
inc
rcll
fcomi
call
fcompl
pushf
sbb
cmp
jb
add
inc
shll
pop
test
jle
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
adc
dec
xchg
mov
les
fidivrl
mov
mov
dec
push
mov
and
adc
push
lcall
cmp
dec
rorb
or
dec
outsl
std
xchg
inc
sbb
sbb
stc
xchg
imul
cltd
in
xlat
sub
or
into
out
dec
scas
cmc
iret
jge
stos
rcrb
xor
xor
and
test
stos
movsb
cmp
push
inc
and
popa
sub
loop
aaa
push
push
jg
call
inc
cmp
jle
pop
leave
or
jns
push
adc
pushf
inc
mov
lret
pop
sti
mov
lret
insb
mov
sbb
dec
aad
add
orb
pop
or
ja
mov
in
aaa
shlb
js
outsl
ficomps
subl
inc
mov
jb
in
clc
ss
push
jb
enter
mov
out
sbb
pop
xlat
cmp
pop
sbb
inc
insl
sub
add
test
mov
popa
or
mov
ds
push
rorl
adc
call
mull
push
gs
orl
fdivs
adc
ret
xchg
mov
jbe
jle
aaa
popf
jno
ret
mov
push
gs
lret
imul
out
xchg
js
sbb
ja
and
adc
push
adc
fs
test
push
xchg
mov
inc
add
jns
push
out
xchg
push
jge
xor
stc
inc
sub
or
icebp
push
xor
xchg
pusha
pop
daa
xchg
test
jl
add
sti
jecxz
pop
and
lods
or
orb
sub
fldenv
xchg
aas
xchg
jo
pop
stc
ds
push
popa
leave
jp
leave
add
xchg
outsl
mov
lea
lret
sbb
push
out
std
or
jne
imul
in
addl
xchg
xorb
xchg
pop
lcall
loope
jl
sbb
mov
mov
push
or
aad
mov
pop
in
inc
pop
inc
or
pop
scas
and
and
xchg
mov
lret
iret
push
pop
jb
inc
fdivrl
aam
mov
jp
stos
aam
push
jge
rcr
push
sbb
jg
lock
push
bnd
stc
loopne
imul
mov
hlt
cs
pop
fistl
mov
inc
insl
jns
cmp
fwait
inc
adc
dec
lods
out
pop
cmp
lret
hlt
popf
div
dec
pop
mov
inc
xchg
or
cmp
mov
dec
xlat
sti
xchg
rolb
test
int3
mov
mov
jge
pushf
xchg
and
inc
gs
inc
jns
and
push
mov
push
int
lock
mov
pop
cmp
sub
stos
cltd
inc
outsb
aas
mov
push
jle
jne
gs
mov
lea
mov
fdivrs
stos
pop
jl
jo
push
sbb
cli
inc
xchg
cwtl
inc
pusha
inc
or
int
movsb
ds
push
loopne
push
stos
rcl
push
call
into
mov
sub
push
rorl
cmp
frstor
fnstenv
xchg
jno
pop
push
enter
fstpl
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
frstor
stos
mov
mov
lods
dec
rol
and
aaa
mov
int
add
andl
xor
mov
iret
adc
loopne
bound
push
ljmp
cmc
rcll
sbbl
jmp
jo
xchg
ret
push
sbb
adc
adc
push
xlat
jp
push
and
pop
pop
fsubrl
popa
nop
mov
mov
hlt
jne
jge
mov
in
lahf
imul
push
out
popa
repnz
pop
scas
inc
es
lahf
pop
jo
mov
arpl
sarb
sarl
je
std
nop
lock
je
pusha
sub
and
clc
pop
iret
ja
bound
xor
and
mul
mov
movsb
mov
lret
sbbl
jge
pop
xchg
sti
cwtl
adcl
xchg
imull
in
orl
pop
lret
or
aaa
es
or
or
dec
movsl
sbb
lcall
add
jl
jne
fcomp
int
sub
aad
insb
daa
add
adc
push
xlat
pop
push
repnz
pop
roll
fcomps
movsb
push
cli
and
mov
popa
outsl
outsl
cmp
insl
mov
mov
sub
or
mov
lahf
inc
aad
fldcw
fsubl
cmpsb
cmp
cld
xor
push
gs
enter
mov
add
je
cmpl
shlb
dec
xchg
or
lret
movsb
cmc
popa
mov
or
shufps
or
mov
out
adc
and
push
sub
jl
stos
mov
mov
aam
clc
cmp
jecxz
leave
testb
fnstsw
add
in
dec
and
das
shlb
jge
iret
insl
push
loopne
push
push
cmp
push
testb
test
sbb
das
cld
pop
jecxz
sbbb
sub
idivl
mov
sar
iret
and
enter
stos
out
movsb
test
push
xor
or
and
cld
stos
scas
xor
cli
push
add
fidivrs
loopne
scas
or
daa
pop
imul
loopne
mov
pop
push
repz
push
fs
add
ficoml
jne
xchg
mov
int
xlat
leave
fyl2xp1
test
add
push
repz
xchg
mov
push
int
mov
leave
out
inc
jb
jl
dec
inc
jbe
push
int
fmuls
outsb
stos
out
nop
daa
jno
xchg
dec
sbb
aam
jo
and
and
pushf
sbbb
or
jns
xchg
push
ret
jae
inc
mov
insl
dec
adc
sub
subl
pop
cmp
fbstp
je
mov
push
sub
cmp
xchg
xchg
loope
rcrb
das
and
fs
adc
jno
ja
push
xchg
repnz
sbb
repz
sub
cmpsl
lcall
push
cmp
les
and
cmc
sbb
imull
xor
push
stos
fidivrl
das
push
sbb
fldl
jb
imul
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
push
mov
mov
mov
imul
arpl
pushf
repnz
ja
or
in
mov
mulb
icebp
push
test
test
mov
bound
and
xchg
dec
stos
loopne
jae
icebp
mov
in
push
das
push
pop
das
adc
stos
mov
dec
xor
mov
xchg
cmp
xor
push
sub
call
nop
mov
shrb
rorb
mull
sarb
cli
test
push
out
roll
push
xor
mov
inc
inc
sarl
test
jl
div
movsb
inc
pusha
and
sbb
nop
arpl
push
pop
inc
pushf
pop
mov
pop
sbb
fadds
mov
dec
shll
mov
loopne
lret
in
xchg
fistpl
rcrl
cltd
push
xchg
ret
daa
aas
xor
mov
pushl
inc
fildl
dec
and
insl
scas
lea
jns
xor
push
sub
inc
fstpt
addr16
sahf
adc
mov
and
inc
imul
loopne
xor
lcall
repz
shr
adc
ret
push
pusha
outsb
enter
xor
mov
ret
dec
mov
aaa
add
pop
adc
in
mov
loope
dec
xchg
aad
jmp
adc
arpl
or
inc
out
sbb
mov
out
inc
scas
push
shlb
lret
xchg
sub
inc
hlt
xlat
mov
add
dec
mov
jl,pn
outsl
xor
outsl
jg
in
lods
jmp
ss
or
movsb
push
lods
push
dec
adc
insb
mov
sub
mov
dec
mov
inc
mov
push
or
jbe
jmp
jl
cmpsb
loope
push
clc
movsb
push
adc
ret
into
jp
icebp
push
cmp
ficoms
lea
std
jle
arpl
push
icebp
mov
std
add
pop
es
pop
popa
roll
jecxz
add
adc
movsl
iret
adc
cmc
rolb
pop
mov
into
or
aam
leave
push
cmpsb
adc
iret
sbb
mov
les
or
js
mov
rorl
fldz
fwait
repnz
adc
cmp
cmp
push
inc
add
mov
jl
sub
cmpsl
mov
lock
adc
xlat
pop
negl
test
in
dec
pop
inc
cwtl
popf
adc
inc
lret
es
dec
leave
ret
mov
call
mov
mov
nop
lea
adc
xor
jle
jne
icebp
jnp
inc
lret
mov
jbe
pop
sbbl
sub
mov
dec
inc
push
dec
aad
iret
push
bound
xor
movsl
test
mov
mov
hlt
xchg
adc
mov
xor
add
cmp
mov
in
mov
rcrl
inc
lcall
cmp
loop
sub
jne
jb
pop
jae
lock
sbb
aas
leave
xchg
or
std
and
and
cltd
rcrb
jo
andl
fcoms
mov
mov
cmc
push
movsl
popl
xchg
out
xchg
dec
sub
test
push
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
iret
nop
mov
les
les
sbb
add
dec
stos
mov
shl
add
fwait
cwtl
push
jo
mov
and
pop
jmp
fs
shll
das
mov
fildll
std
and
loope
cli
sub
stos
sbb
sahf
dec
push
inc
pop
jle
mov
hlt
call
adc
rcr
lock
xlat
das
test
or
loop
dec
repnz
dec
aad
xorl
inc
and
xor
aam
cmp
pop
push
loope
ffreep
ss
das
pop
xchg
test
xchg
dec
scas
outsl
or
xlat
dec
mov
mov
jb
push
pop
or
andl
add
or
leave
mov
les
out
ss
pusha
fldt
push
dec
out
add
jl
shlb
rolb
pop
cs
gs
cmpl
mov
push
mov
popa
clc
std
dec
cmp
shrb
mov
dec
or
nop
gs
or
inc
mov
push
fisttpll
aaa
add
ffreep
insb
mov
cli
push
call
add
sahf
cs
jno
shl
cli
jb,pt
popa
mov
jo
mov
sbb
pop
push
cmp
flds
adc
push
int
dec
mov
mov
mov
mov
ja
mov
mov
or
out
imul
push
test
lahf
and
icebp
pushf
inc
shll
fidivrl
imul
or
scas
and
stos
ficoml
rep
es
dec
lahf
cmp
out
aad
pop
dec
mov
cmp
jo
imul
stos
movb
adc
adc
mov
repnz
jae
loope
xlat
hlt
xor
js
sbb
hlt
xchg
xchg
iret
dec
or
jb
push
mov
lret
shl
sub
push
xchg
lds
push
jne
andb
sbb
pop
mov
sti
lods
push
mov
xor
sahf
dec
scas
call
cmp
fmul
push
into
jl
push
sbb
adc
push
inc
sub
xchg
jp
mov
pop
aam
adc
clc
ret
dec
inc
ss
outsl
xor
fcompl
sub
pop
xchg
mov
andb
add
in
movsl
mov
push
movsl
pushf
rolb
in
push
xor
loop
and
mov
jle
rclb
pop
orl
pop
xchg
inc
inc
push
call
test
lret
xchg
cmp
ret
sbbb
mov
dec
fsubs
aad
mov
xlat
addr16
and
jl
jmp
mov
outsb
test
sahf
adc
jle
fs
or
sbb
sbb
enter
bnd
mov
sub
push
stc
push
dec
dec
adc
bound
cmp
dec
mov
sub
movl
ss
add
xorl
mov
jge
or
dec
xchg
int3
scas
mov
or
shll
pop
xchg
bound
ret
xchg
or
push
jle
pop
sbb
mov
mov
pop
or
test
idivb
add
ss
push
jg
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
pop
arpl
mov
les
mov
xchg
mov
cltd
fmulp
xorb
mov
or
adc
ja
mov
jle
xor
int
push
shlb
xchg
mov
fmull
xchg
or
pop
fs
push
lret
sbb
and
mov
sti
sbb
or
push
xchg
cwtl
mov
pop
sub
dec
adc
ds
xchg
insl
adc
cmp
sbb
jns
jmp
push
xchg
xor
push
call
inc
sbb
or
into
push
xchg
out
fcompl
and
cwtl
ja
sti
xor
mov
adc
movsw
into
lods
stos
int
pop
scas
addr16
fwait
rcrl
xor
sbb
adc
jne
loope
mov
mov
out
add
sub
inc
out
xor
jno
orl
sub
int
imul
aaa
xor
inc
mov
mov
fmull
jmp
sub
aas
push
jmp
xor
movsb
xchg
inc
fildl
sbb
push
push
mov
or
mov
hlt
flds
scas
orl
jnp
mov
mov
add
mov
iret
or
cmpsl
jle
mov
cltd
cmp
mov
scas
mov
mov
adc
xchg
test
fnsave
dec
sbb
jno
hlt
lods
ja
jge
rcrl
lods
out
mulb
sti
test
pop
mov
gs
adc
xchg
push
in
add
and
xchg
dec
addb
xor
movsl
jnp
push
test
and
mov
mov
test
mov
dec
lahf
test
data16
push
fsubl
xor
daa
or
sti
daa
shll
dec
andl
fwait
and
aad
ds
ficoml
sbb
subl
sub
adc
jmp
aam
xchg
mov
arpl
lret
mov
enter
lods
loope
xchg
fcmovnu
jecxz
stos
rcrb
add
jo
mov
test
xchg
arpl
jb
mov
jmp
push
vmovsd
adc
sbb
jbe
cmpl
call
xchg
jecxz
stc
inc
dec
popa
jg
xchg
or
lea
test
or
inc
jbe
sbb
cmova
pop
or
lret
enter
pop
mov
out
dec
popa
push
dec
xchg
jo
aaa
xlat
sar
insb
mov
in
and
das
insb
add
cmpsb
unpcklps
cmp
loop
adc
out
pop
imul
popa
in
or
ret
jno
or
jle
cld
jne
mov
mov
add
into
and
jnp
in
pop
and
cld
xor
mov
and
aam
xchg
fwait
mov
shrl
ret
imul
sarb
or
hlt
mov
jmp
pop
xor
add
add
add
outsl
and
mov
or
xor
je
or
xlat
orb
sbb
pusha
std
ljmp
insl
inc
mov
gs
movsb
loope
addr16
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
loopne
sbb
pop
add
or
push
push
subl
sbb
cld
xchg
lahf
mov
add
stos
or
in
sbb
imul
push
bound
out
hlt
push
int
movsl
mov
mov
push
imul
pop
jle
lods
dec
int3
sbb
mov
and
push
mov
movsl
pop
fs
pop
jge
jmp
popa
pop
ds
sbb
mov
shlb
rolb
push
push
dec
inc
xchg
adc
and
inc
outsl
cmpsb
fmulp
jg
pop
mov
xorb
push
mov
rolb
sbb
or
jo
ds
test
xchg
nop
je
lret
fstpt
lcall
xor
lea
cmp
mov
pop
fmuls
sbb
inc
idivl
xor
out
jae
push
push
xchg
int
xchg
or
clc
inc
sub
rorl
push
pop
add
stc
pop
test
stos
imul
xchg
rorb
bound
fbld
mov
movsl
outsl
lret
insb
fwait
sub
xor
sub
sbbb
sub
cltd
mov
loop
fwait
inc
aaa
cli
push
xchg
cmp
vpextrw
lds
fnstcw
outsl
sub
fisttpl
adc
out
js
sub
jmp
sti
icebp
lret
ficoms
xlat
adc
add
mov
xchg
sub
lret
or
imul
out
test
sbb
icebp
or
sti
xchg
popf
cld
inc
sbbl
sbb
int
sub
icebp
xchg
cmp
mov
cld
das
mov
insl
fbld
mov
popf
cli
xchg
shll
push
rep
jae
dec
iret
push
pop
add
fimuls
adc
sub
pop
cmp
xor
push
jmp
add
sahf
adc
jne
push
das
in
mov
cli
es
adc
insb
mov
inc
repnz
sti
push
mov
mov
xor
mov
and
int
sbb
mov
mov
cmp
inc
mov
mov
outsl
mov
addb
pop
add
notl
gs
xor
loop
pop
fstpt
dec
cmpsl
jmp
or
adc
xor
dec
mov
add
mov
mov
mov
cmp
sub
pop
ja
faddp
push
inc
xor
es
jb
iret
xor
add
loope
movsl
stos
jbe
fmul
loopne
cld
adc
jae
or
popf
jmp
in
std
cmp
addl
push
enter
imul
iret
mov
rorl
inc
test
xchg
pop
mov
stos
push
stc
je
mov
add
insl
cmp
cmpsb
sub
pop
xor
push
rcl
pop
jl
mov
insb
cmpsl
and
push
push
fstps
and
aam
jmp
dec
fcompl
fisttps
add
es
shll
cmpsl
inc
pop
adc
push
xchg
out
leave
imul
outsl
push
dec
sub
arpl
push
jno
add
adc
outsb
pop
jne
add
jp
leave
mov
and
stc
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fstl
dec
mov
mov
out
xor
repz
imul
stos
fcompl
jge
and
in
scas
imul
xor
jae
daa
dec
jle
stos
pop
and
insb
aaa
pushf
sub
jge
test
xor
imull
loop
pop
sbb
ret
fdivrs
inc
idivb
xor
adc
mov
xchg
jecxz
push
je
push
mov
push
add
push
mov
or
in
lods
fwait
jg
mov
adc
lret
push
fdivs
in
call
cmpsb
push
mov
sbb
mov
rol
inc
in
push
mov
mov
xchg
in
je
adc
inc
daa
and
lods
xchg
sarb
jl
pusha
jo
in
mov
int3
mov
jo
lea
pop
mov
lret
xchg
in
imulb
shrl
dec
ljmp
push
mov
inc
out
scas
add
out
and
dec
xor
add
adc
jnp
push
xor
cmp
lret
js
sub
mov
repnz
jg
or
data16
in
out
inc
cld
nop
mov
jecxz
cwtl
test
lret
ret
cmp
pushf
rorb
xchg
bound
stc
jno
mov
sub
xchg
pop
mov
or
mov
sti
push
inc
sarb
rcll
xchg
sti
mov
xchg
stc
adc
ss
sub
adc
fadd
aad
repnz
pop
pop
test
daa
fsubl
push
mov
pop
inc
dec
sub
xor
xchg
ret
lret
lock
dec
lods
imul
jg
sbb
push
outsl
xlat
movsl
lock
lahf
or
dec
cltd
pop
je
push
pop
lret
mov
lds
je
test
dec
ljmp
inc
es
and
jnp
mov
sbb
shlb
insl
shll
rorl
mov
lret
dec
je
xor
ret
test
stos
inc
clc
test
jle
and
add
hlt
or
dec
cli
sti
fbstp
lahf
std
mov
mov
stc
ljmp
push
pusha
aas
mov
fs
gs
dec
or
lret
xchg
jnp
insl
mov
sbb
jno
jo
adc
je
std
cld
add
sub
or
and
xor
cmp
out
test
lock
es
push
fnsave
xchg
sub
add
mov
hlt
mov
stc
push
stos
push
jns
insb
sbb
scas
cs
mov
mov
push
sbb
fdivl
or
movsb
scas
dec
jge
je
pop
xlat
push
push
adc
add
dec
or
icebp
in
push
cltd
scas
lods
addr16
jg
sarl
jae
cmp
ljmp
jno
mov
and
lea
cltd
into
pop
iret
in
imull
xor
push
cwtl
pop
jge
dec
push
and
scas
push
test
daa
mov
loope
mulb
mov
shlb
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fnsave
fnstsw
les
mov
mov
paddq
cltd
stos
shlb
and
cmc
pop
imul
lods
xchg
cmp
subl
and
pop
jg
in
and
scas
ja
dec
add
cld
icebp
add
mov
divb
dec
je
push
iret
mov
sub
mov
out
xor
and
movsb
pop
mov
rcll
andl
and
xlat
xchg
cld
mov
mov
fcompl
mov
movsl
stos
in
and
mov
sub
sahf
lret
mov
push
imul
cltd
into
push
adc
push
dec
xchg
mov
mov
or
lods
or
faddl
jge
inc
cli
jge
jmp
decl
stos
xchg
sahf
test
mov
test
out
cwtl
daa
cmp
cld
mov
jl
dec
rcl
push
dec
in
clc
movsb
dec
mov
adc
ror
xor
jnp
inc
inc
cmp
into
pop
test
fistpll
stc
xor
mov
xchg
lcall
dec
jmp
xchg
fcmovne
add
xchg
or
jmp
add
mov
mov
and
fwait
add
cmp
es
dec
ds
xchg
stos
sub
pop
popa
cmp
jmp
pop
pop
adc
pop
jo
inc
inc
rcrl
push
mov
loopne
pop
les
insl
sahf
loop
ja
in
mov
rorb
nop
jmp
jo
mov
shll
sbb
idivl
stos
and
add
sub
repnz
es
cmpl
fsubrl
pop
into
xchg
add
jecxz
and
mov
hlt
outsb
inc
inc
lret
imul
orb
ljmp
aaa
push
cmc
push
add
es
rclb
sub
jg
pusha
mov
xlat
dec
int3
push
cmp
mov
adc
out
push
inc
dec
push
adc
and
fwait
mov
xchg
mov
or
lret
add
or
stos
jbe
test
mov
push
sbb
imul
scas
js
mov
sub
xor
cmp
xchg
mov
aaa
movsl
or
paddusb
mov
and
mov
ss
pushf
jge
xchg
cmp
daa
int3
je
jbe
vmread
inc
jg
in
adc
mov
or
push
adc
push
pop
mov
and
add
jge
sub
cwtl
in
bt
adc
mov
inc
fisttps
popf
xchg
mov
jle
mov
add
stos
and
inc
push
add
scas
dec
add
arpl
popa
add
xchg
add
scas
ja
sahf
mov
dec
outsb
leave
in
repnz
cmp
inc
jbe
xchg
mov
mov
jb
jmp
sub
push
lea
lret
imul
pusha
in
adc
dec
jp
fldenv
pop
aam
dec
cmp
mov
inc
mov
mov
scas
aaa
inc
or
push
mov
fldcw
jge
lods
repnz
pop
es
mov
psubsw
fbstp
sti
shll
push
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
mov
pop
mov
mov
loope
mov
cwtl
sbb
movsb
sti
mov
loopne
adc
int
imul
rorl
mov
ja
mov
in
aam
pop
mov
ss
pop
icebp
xor
aas
int3
insb
sub
pushl
mov
push
lea
jecxz
int3
adc
cmp
shr
jnp
das
mov
sub
xor
dec
jnp
and
mov
or
loopne
inc
icebp
scas
das
in
test
jno
dec
pop
xchg
cmp
fs
gs
mov
daa
mov
adc
sti
sub
jl
rcll
mov
xchg
push
aas
mov
xchg
adc
and
sbb
cltd
sbb
pop
clc
insl
sub
xchg
enter
mov
xor
inc
and
xor
fnstenv
mov
std
pop
or
mov
insb
inc
stos
gs
mov
mov
mov
movsl
push
mov
pop
sbb
in
dec
mov
inc
and
or
xchg
dec
stos
pop
ljmp
loop
or
push
pop
jg
mov
cli
sbbb
jg
shll
push
sub
lcall
and
and
cltd
lret
mov
lea
add
loop
xchg
cmp
in
jmp
nop
aaa
cltd
gs
jl
mov
mov
imul
dec
scas
jecxz
stc
cs
dec
outsb
jge,pt
sbb
clc
sahf
in
xchg
push
mov
jns
insl
cs
fstl
lods
jo
cmp
mov
xor
hlt
notb
jno
inc
adc
xor
fwait
add
inc
or
sti
insl
loope
mov
test
mov
lds
inc
repnz
das
outsl
inc
movsb
or
shll
or
lods
je
lcall
jae
jl
ret
lods
mov
imul
inc
push
pop
add
hlt
es
or
arpl
mov
xor
inc
ds
or
fchs
imul
test
rcll
dec
stos
xor
cmp
repz
lods
or
popf
cmp
and
mov
mov
loop
popa
cmc
pushf
xor
dec
cmp
push
push
out
mov
movsb
sbb
pop
ja
nop
inc
out
and
test
jbe
mov
inc
sahf
imul
insl
xchg
xor
fcmovu
push
or
sbb
cmp
popa
inc
cmpsb
sub
test
lock
cmp
xor
cli
pusha
repnz
push
mov
je
jae
dec
cmp
xchg
in
jle
jb
repnz
cs
cmp
fcmovu
xor
mov
add
xchg
or
lahf
fcoml
dec
add
jne
in
adc
cs
mov
subl
mov
adc
sbb
mov
sbb
test
push
filds
dec
shll
mov
lea
pop
and
push
inc
pusha
adc
push
pushf
or
or
mov
stos
je
hlt
ljmp
lcall
xchg
insb
mov
stos
or
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
leave
jp
mov
les
fisubrl
ret
mov
pop
scas
adc
dec
inc
jmp
cld
loopne
push
lds
xchg
mov
sub
push
cmp
dec
inc
pop
pop
lcall
int3
mov
mov
or
mov
and
xor
ja
cmp
or
imul
enter
rcr
adc
loopne
jp
into
test
pop
add
fidivl
push
sub
mov
pop
in
popa
in
fs
call
cmp
and
nop
js
pop
sbb
inc
aaa
imul
pop
subl
jb
das
xchg
ds
jns
aaa
sub
mov
xchg
mov
stos
cmp
dec
or
jno
xlat
outsl
adc
test
pushf
sbb
aaa
in
mov
push
xor
mov
imul
jns
bound
mov
mov
inc
xor
and
pop
mov
jmp
xchg
jno
es
stc
scas
cli
dec
push
in
movsl
fcompl
cmp
in
fisubs
iret
mov
cmp
jge
cmp
jns
pop
sbb
addr16
gs
hlt
cmpsl
lea
xchg
decb
in
or
bound
mov
xchg
leave
scas
repnz
lds
fs
and
push
dec
int3
mov
add
sub
ret
pop
cmpsb
adc
jno
add
and
inc
scas
loop
mov
sti
mov
pop
and
dec
inc
adc
dec
cli
xchg
fwait
push
fsubr
sbb
xchg
lds
lods
insl
cwtl
and
inc
push
dec
in
int3
ret
imul
lret
shlb
or
clc
or
cli
std
or
pop
or
dec
inc
inc
roll
insl
in
jae
fldcw
pop
mov
push
outsl
mov
es
pusha
add
stos
ja
dec
inc
ljmp
mov
cmc
stos
add
negl
sub
mov
fstpl
pop
stc
fdivp
and
ret
pminub
sub
pop
mov
xchg
jmp
fs
icebp
jp
imulb
inc
and
lahf
jno
pop
sbb
mov
rcll
aam
cmpsb
jo
daa
and
mov
mov
inc
das
pop
push
sub
mov
lfs
icebp
repz
mov
in
push
ds
cli
lock
inc
subb
loop
xchg
xchg
loop
mov
add
and
insb
movsl
mov
fdivrs
dec
pop
xchg
pop
jge
mov
fists
mov
and
push
out
pop
sbb
jl
push
dec
lcall
cld
push
sub
cmp
bound
test
push
mov
jmp
pop
imul
jo
mov
fmuls
pop
jo
adc
dec
mov
ds
push
ljmp
mov
iret
cmpsl
shrb
xlat
je
fcoms
pop
insl
flds
setge
leave
and
sbb
ljmp
lods
adc
push
pusha
fs
dec
add
into
xchg
fwait
mov
mov
mov
fnstenv
rorb
ret
clc
es
add
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
xchg
mov
das
popa
scas
fisubrl
clc
aam
push
push
jnp
cmp
cwtl
mov
mov
es
pop
lret
push
inc
jge
and
dec
movsl
ss
jl
sub
mov
daa
loope
dec
aaa
dec
inc
shlb
test
mov
into
in
inc
mov
repnz
xchg
push
fistpll
xor
push
jmp
inc
clc
data16
cmpsl
sub
test
imul
cmp
dec
sbb
inc
mov
adc
sub
jle
cmp
sub
sub
or
sub
aad
arpl
and
mov
xchg
test
add
xor
ljmp
dec
mov
lret
nop
cltd
dec
fdivrp
fsubrl
imul
icebp
mov
sub
lcall
and
push
push
inc
and
xor
shll
test
mov
lods
fwait
mov
ficoml
xchg
lret
inc
push
clc
je
pushl
push
xor
mov
jp
nop
aas
jecxz
shl
test
adc
adc
pop
dec
or
add
xor
fcompl
dec
filds
sub
les
inc
mov
leave
je
or
das
int3
ja
dec
xor
adc
sbb
mov
js
fwait
rcll
mov
call
or
dec
inc
dec
and
push
gs
xor
mov
pusha
pushf
xchg
jp
sbb
lahf
dec
jle
dec
cmpsl
cmpsl
mov
mov
inc
int3
stos
jle
test
pop
sub
cli
movsb
rcrb
aam
inc
sti
cmp
test
xchg
pop
mov
and
bnd
adc
into
je
jp
loope
and
xor
sbb
movsb
jp
mov
pop
jo
cwtl
es
sbb
sbb
mov
push
dec
rolb
inc
inc
dec
cld
pop
popl
inc
xchg
dec
xor
mov
es
ret
sbb
ret
lods
std
cmpsl
inc
cmpb
xchg
mov
and
cmpsb
dec
or
jno
test
fdivrl
mov
mov
js
clc
inc
data16
mov
mov
shll
and
lret
xor
sbb
fmuls
mov
int
and
sbb
cli
stos
sahf
jmp
sub
jecxz
enter
out
sbb
or
addr16
jb
mov
hlt
xchg
sbb
dec
decb
test
mov
mov
pop
addr16
jmp
movsl
jg
push
fwait
aas
mov
fisttps
jnp
xor
dec
push
cmc
cmp
into
pusha
jns
shll
xor
dec
sub
ret
lahf
sub
mov
fwait
jle
fwait
xchg
fwait
push
mov
lock
rcl
push
imul
rclb
popf
and
xchg
xchg
addr16
dec
inc
push
leave
pop
divb
fdivrl
or
xor
pop
fmull
xor
les
inc
iret
jge
ja
lock
sahf
xorl
xchg
lods
sbb
out
lea
pop
leave
imul
mov
ja
adc
jnp
loop
inc
cmp
jae
jno
and
aas
mov
xor
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
cmp
or
jae
mov
gs
mov
inc
push
inc
jo
rcr
sub
movsb
xor
cmp
lea
leave
sbb
jne
into
push
and
mulb
lock
in
push
lods
mov
icebp
ja
add
std
adc
pop
xchg
cmpsb
inc
test
je
cld
xchg
icebp
test
sbb
and
ret
mov
test
loope
shl
dec
leave
int
lods
jne
test
lcall
lahf
and
dec
imul
outsl
mov
push
jbe
cld
dec
xor
lods
enter
fs
icebp
enter
adc
sbb
sub
xor
js
test
aas
repz
cmpsb
ret
popa
xchg
sub
sbb
cltd
fstpt
mov
push
insl
pop
cmp
shll
jp
fstps
xor
call
jb
in
aam
sbb
and
sbbl
mov
test
ja
dec
push
pop
out
jns
mov
mov
mulb
shl
dec
ret
sub
mov
dec
test
arpl
lret
and
lods
shlb
jno
dec
subl
lahf
jecxz
mov
jbe
fsubrs
xor
imul
iret
adc
out
int3
xor
mov
lcall
mov
sub
xchg
cwtl
inc
sub
fwait
or
stc
mov
push
pop
iret
cmp
bound
loopne
xchg
test
int
pop
ja,pt
out
and
push
xchg
sbb
sbb
push
dec
loope
ret
xchg
lahf
mov
inc
es
rcrb
arpl
mov
mov
pushf
je,pn
adc
int3
mov
cmpsb
bound
sub
or
ja
daa
fwait
mov
insl
sbb
imul
xchg
sbb
dec
adc
loope
mov
inc
in
xchg
inc
mov
pushf
adc
sub
jb
xor
mov
push
add
nop
pop
mov
je
loopne
aam
cmc
pop
pop
inc
arpl
daa
or
addb
stos
clc
lock
or
aam
and
hlt
leave
shr
push
xor
jle
and
shlb
add
xor
clc
test
call
loopne
push
mov
or
std
arpl
push
inc
cmc
sub
outsb
add
mov
jl
add
xchg
mov
ljmp
fwait
dec
out
push
push
pusha
rcrb
or
mov
mov
outsb
enter
jae
jp
pop
sbb
sahf
ret
loopne
pop
mov
divb
mov
push
cwtl
pop
lods
inc
jo
jb
js
and
mov
sbb
pusha
mov
sbb
pop
xlat
shll
int
xor
push
shll
out
sub
adc
mov
mov
fisubrl
cmpsl
inc
mov
xor
cmp
mov
lahf
push
in
imul
jno
lods
ds
imul
cmp
mov
test
inc
pop
and
inc
inc
icebp
sbb
sub
pop
insb
add
andl
or
push
lods
cmp
mov
push
in
add
inc
or
jecxz
sbb
aas
mov
or
add
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
iret
pop
push
sarl
ret
int
sub
ljmp
mov
sub
cmpsl
es
pop
or
ss
xchg
loope
inc
stc
jno
adcb
rep
clc
fs
pop
mov
mov
lds
sbb
outsb
lods
mov
sbb
add
sub
dec
test
mov
mov
and
sahf
push
inc
rorl
insb
xor
xchg
xchg
int
stos
pop
push
and
mov
lret
ds
push
rolb
out
repz
xchg
fisubl
stos
jle
mov
outsb
dec
pop
dec
xor
ror
mov
leave
xchg
push
hlt
fwait
cmp
hlt
mov
xchg
mov
add
xor
dec
rcrb
data16
loopne
push
call
fs
sbb
in
dec
mov
xchg
ja
mov
dec
fldt
sub
xchg
jg
test
mov
shrb
sub
sbb
orl
mov
jle
dec
mov
pop
imul
dec
sbb
ss
inc
push
fisttpll
dec
and
enter
scas
and
ljmp
sbb
add
push
add
and
ret
xor
pop
add
xlat
jb
aad
loopne
mov
xchg
push
lret
and
push
lock
pop
inc
mov
lcall
lock
movsl
and
icebp
xor
fs
mov
lcall
iret
lods
sub
aaa
and
das
mov
lcall
xor
insl
jle
or
xchg
repnz
and
andb
lds
mov
rcrb
add
jg
cmpsl
xchg
lds
and
adc
and
ret
push
daa
cmc
addr16
mov
in
xchg
lret
fcomps
add
aam
dec
xor
push
or
add
out
mov
pop
ret
jecxz
inc
dec
scas
stos
stc
lock
push
dec
push
mov
icebp
adc
pop
cmp
imulb
cs
andb
test
jle
mov
je
subb
or
dec
sarb
or
in
movsb
sti
cltd
leave
cs
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
lock
jecxz
jge
mov
dec
add
movsb
inc
stc
mov
outsb
into
adc
pop
es
add
dec
or
xor
sub
mov
lods
jns
mov
dec
mov
dec
or
divb
jmp
cmp
add
push
or
mov
orb
jb
mov
xchg
xor
add
inc
sbb
push
dec
adc
mov
sub
pushf
pop
mov
and
cmp
stos
pop
mov
fwait
cmp
nop
fisubl
int3
lods
adc
das
push
cmpsl
jl
test
adc
or
mov
das
aas
lods
jnp
mov
call
dec
popf
mov
jp
jge
mov
insb
outsl
mov
test
lock
outsb
inc
and
lcall
mov
fs
andb
imul
mov
int3
xchg
xor
mov
push
loopne
subl
pmullw
pop
adc
mov
push
xor
sbb
addl
inc
or
pop
or
xchg
mov
sti
test
movsb
xlat
test
cmp
call
test
shrl
pop
or
mov
arpl
mov
lcall
sbb
jle
add
adc
out
jno
xor
pop
or
ficoms
cmp
in
and
sub
jmp
or
push
jnp
mov
or
popa
inc
push
cmp
aam
bound
repnz
jb
cltd
xchg
xor
lods
push
movsl
cmp
jle
repnz
pop
out
sub
cltd
in
leave
pushf
and
arpl
out
ja
movsb
cmp
inc
outsb
jbe
rolb
ljmp
sbb
fnsave
rcll
dec
adc
mov
rcr
mov
sbb
xchg
xchg
insl
std
clc
imul
mov
or
add
sub
inc
call
outsb
fsts
and
jnp
fiadds
sub
loope
mov
inc
shlb
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
mov
mov
test
sbb
push
movsb
or
dec
or
or
adcb
insb
jp
vpunpckhdq
imul
and
scas
data16
sti
pop
add
or
das
scas
lcall
inc
mov
popf
scas
aam
stos
jno
push
or
sub
jmp
xchg
icebp
dec
mov
xchg
fs
js
pushf
sarl
jbe
or
xchg
fs
xchg
mov
mov
pop
enter
jmp
jecxz
adc
out
dec
and
push
cmc
sub
es
addr16
sub
mov
jp
or
rcr
dec
sti
into
test
js
jne
jne
ljmp
inc
nop
sub
inc
mov
shll
mov
fnstcw
mov
in
jg,pt
and
push
xor
jl
cli
movsb
leave
jbe
sub
mov
shll
loope
jno
movl
into
jp
mov
sbb
scas
adc
stos
pop
xchg
push
test
push
mov
fs
mov
je
scas
ficompl
hlt
adc
outsb
add
push
into
sti
xor
sub
or
xchg
std
jnp
mov
add
inc
mov
bound
mov
popa
adc
shlb
xchg
inc
insl
mov
call
xchg
filds
pop
sub
sub
pop
jno
xchg
xlat
pop
mov
add
mov
cmpsl
fldcw
and
jnp
add
mov
push
test
add
jg
dec
loop
xchg
mov
ficoms
aas
int3
mov
test
jae
std
mov
jge
xchg
pop
mov
outsl
ja
or
xchg
pushf
mov
and
test
jmp
xlat
jbe
mov
xor
daa
lea
fiaddl
inc
sti
jb
xchg
rcrl
inc
outsl
jle
inc
push
pop
xchg
cmp
sarl
sub
ljmp
push
lods
test
movsb
mov
inc
les
or
or
loopne
dec
into
test
mov
mov
sub
adc
lret
popa
add
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
dec
push
mov
mov
mov
movsl
xor
pop
dec
jp
inc
sti
rclb
dec
jmp
mov
cli
outsl
mov
es
or
push
sbb
enter
sbb
fs
iret
and
shl
addr16
imull
popf
mov
cmp
in
mov
int
movsl
sbb
mov
in
adc
adc
mull
mov
cli
cmp
stc
and
sub
nop
lods
add
rcrb
jnp
into
inc
jb
je
ja
mov
or
fs
loope
mov
add
adc
sbb
xlat
lds
adc
and
adc
jmp
cld
loope
dec
insb
je
inc
push
mov
data16
jno
mov
lret
sahf
outsb
jp
mov
pop
jmp
fwait
int3
adc
orl
inc
cs
mov
loop
mov
lret
shrb
lret
fimull
xchg
test
std
repz
testl
xor
and
pushf
ret
pop
push
lods
cmp
jne
cmp
adc
sbb
xchg
xchg
mov
jnp
icebp
mov
mov
jmp
xchg
and
shlb
dec
pop
and
inc
xlat
pop
movsl
mov
push
add
enter
sbb
cmp
mov
xchg
push
jno
dec
sarb
push
cmpl
cmp
sahf
dec
dec
jmp
xor
fstpt
cmc
iret
les
push
push
mov
popl
xchg
lods
int3
dec
add
lret
inc
fcoml
lcall
mov
xor
fcoms
insb
sub
add
faddp
xor
dec
and
sbb
mov
xchg
adc
push
xor
pop
pusha
xor
add
jg
lock
jae
jb
sbb
sbb
mov
ret
das
xlat
push
into
jge
jb
jg
inc
imul
add
fistl
cltd
push
fs
mov
mov
je
xchg
sbb
popa
shlb
xchg
cmp
dec
aam
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
jnp
sahf
scas
mov
mov
mov
inc
lret
ds
push
shll
dec
mov
or
xchg
dec
outsl
aad
mov
lcall
adc
push
inc
lock
sbbb
xchg
sbb
add
pop
out
div
push
mov
jg
ret
popa
testl
loope
cmp
push
das
pop
sbb
popa
sbb
clc
scas
mov
push
cwtl
xchg
and
add
mov
cmp
mov
imul
movsb
out
mov
subl
repz
aad
cs
inc
sti
test
sbb
mov
hlt
in
sbb
into
sti
cwtl
xchg
loop
mov
hlt
shll
or
lcall
sub
push
stos
or
pop
leave
jl
dec
xchg
mov
inc
and
gs
xchg
out
hlt
daa
xchg
push
gs
fxam
repz
into
or
gs
add
daa
movsb
call
adc
mov
das
pop
ret
sbb
popf
in
movsb
ret
pop
pop
and
lahf
aaa
xchg
mov
aaa
xchg
inc
pop
pop
out
xchg
mov
sub
add
mov
test
and
scas
lea
mov
ss
add
daa
or
jnp
xor
cmpsb
ss
pop
and
jl
xor
xor
add
add
jecxz
outsl
adc
pop
lods
jl
fisubrs
push
pop
nop
jge
inc
mov
mov
pop
insb
loop
sbb
jae
xchg
or
jbe
sbb
sbb
and
xor
push
cmp
mov
sbb
gs
xor
sbb
imul
lods
mov
jmp
fistps
sbb
fildl
int3
into
ja
jecxz
jmp
call
imul
data16
sub
out
add
mov
test
or
jb
push
fst
jmp
mov
lods
inc
mov
loopne
jp
iret
sbbb
mov
sbb
and
popf
shrb
xor
mov
stos
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
dec
xchg
imul
repz
mov
andl
jae
rcr
movsb
movsl
hlt
and
jo
shll
add
adc
lahf
shr
add
bound
lcall
cli
push
dec
dec
mov
imul
lods
add
lcall
dec
stos
or
shl
push
int3
shlb
rcr
nop
sbbl
and
js
in
jae
les
fcompl
cmp
dec
mov
movsl
mov
lods
ss
out
xlat
repz
cmp
ret
in
lds
pop
push
xchg
cmp
sbb
mov
mov
pop
stos
sub
pop
movsb
out
mov
shl
adc
push
dec
ficompl
jns
inc
cs
ss
cmp
mov
jns
enter
jmp
out
data16
test
fsubs
pop
xlat
shrb
subl
mov
pop
shll
loopne
fsts
or
mov
pop
adc
jle
pop
call
push
mov
cs
cmp
push
xor
jo
pop
sti
adc
xor
mov
dec
mov
mov
inc
arpl
jmp
shlb
jmp
das
pushf
hlt
hlt
scas
cmpsl
or
pop
dec
xchg
fsqrt
popa
hlt
lea
mov
jnp
pop
popa
add
xchg
or
mov
icebp
pop
sti
sbb
in
mov
sbb
xor
aad
movsb
and
adc
hlt
inc
mov
aaa
icebp
addb
cmpsl
inc
insl
push
insb
imul
mov
cmp
xchg
adc
je
ret
fucom
mov
jl
jecxz
lea
dec
adc
adc
push
insl
fcoml
pop
push
add
pushl
lcall
mov
in
rcll
mov
iret
mov
xchg
fcmovne
and
and
sbb
data16
push
inc
clc
sbb
imul
cld
and
rcl
repz
pop
xchg
sbb
fdiv
xchg
inc
xchg
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
lds
xchg
es
mov
mov
imul
lock
nop
scas
daa
adc
push
sub
xchg
cmp
pop
movsb
adc
lret
jl
mov
mov
stc
orl
mov
test
imul
dec
mov
fwait
nop
add
or
js
les
lret
sbb
ficomps
adc
popf
jo
mov
movsl
add
fwait
in
mov
aam
push
mov
xchg
and
out
dec
ss
mov
test
es
jbe
sahf
push
xchg
mov
ret
imul
mov
sub
and
movzwl
push
inc
sbb
sarb
and
dec
xchg
lods
and
pop
lret
addr16
cmp
int3
or
cmp
sub
lret
sbb
addr16
ja
cmp
or
or
ffreep
or
stos
xor
mov
les
jae
push
lret
inc
test
mov
dec
mov
dec
xchg
stos
imul
loop
jne
pop
jmp
sti
test
je
bound
iret
xchg
mov
clc
push
cmp
sub
push
xchg
jl
gs
xchg
cld
ss
iret
addr16
mov
popa
shll
enter
and
in
jge
xor
test
fs
sbb
dec
inc
sub
sahf
je
loopne
xchg
dec
pop
sarb
sub
mov
aaa
gs
std
jb
dec
movl
in
dec
mov
repnz
dec
bswap
je
sbb
das
enter
lcall
sbb
dec
fs
push
mov
aas
add
sub
or
cmp
iret
decb
leave
loopne
add
jno
flds
push
leave
nop
mov
in
fwait
sbb
fs
sub
jmp
js
bound
sub
jne
repz
mov
jecxz
push
dec
fidivs
daa
push
add
hlt
stos
xchg
leave
dec
loopne
shll
xchg
in
lahf
cmp
inc
arpl
and
and
push
movl
nop
sbb
shl
dec
cmc
in
push
ret
sub
sub
mov
out
mull
mov
xor
mov
push
lret
push
fisttpl
xchg
sbb
and
sbb
sbb
in
jae
testb
cltd
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
push
mov
jecxz
fwait
mov
mov
push
test
cmp
imul
sub
in
dec
inc
and
sbb
dec
dec
flds
ds
lret
mov
mov
dec
dec
cmp
gs
cmc
cmpsb
scas
push
adc
push
jmp
movsl
les
pop
pop
cmpsb
pop
push
cmp
lods
sti
data16
mov
out
movd
or
cmp
cmpsb
fsts
adc
pushf
adc
dec
test
push
fldt
lea
and
fstpt
ja
and
add
push
add
out
push
push
cmp
jbe
lret
sbb
ds
jmp
mov
int
rclb
xor
fstpl
mov
add
stc
jge
sbb
ret
adc
mov
jb
add
pop
shlb
push
scas
stc
std
add
mov
sbb
test
pop
or
sbb
fistps
add
cld
loopne
stos
mov
fistl
dec
hlt
hlt
mov
in
shufps
lcall
repnz
xor
jne
xchg
jo
jne
lcall
or
jbe
jb
sbb
scas
out
xlat
mov
jb
mov
sbbb
or
jae
sub
inc
fdivl
lock
movsb
stos
ds
push
aas
mov
out
and
pop
sbb
cmpb
sbb
jb
push
pushf
cmp
adc
adc
jo
xchg
hlt
xor
insb
xchg
pop
sub
or
bound
add
mov
mulb
imul
insb
sub
sbb
adc
adc
sbb
mov
adc
sub
push
adc
punpckhdq
fstp
mov
adc
insl
sbb
pop
mov
lea
adc
in
jae
test
xchg
lret
insb
inc
jecxz
imulb
aam
inc
movsb
mov
sub
xor
inc
fwait
movsb
fcmovnbe
ret
sbb
dec
mov
les
lcall
jmp
push
std
sub
sahf
in
inc
dec
daa
cmp
push
mov
and
and
lds
pusha
lods
out
je
dec
pop
dec
lahf
xchg
loope
or
inc
test
icebp
lea
push
psllw
pop
xlat
dec
ret
pop
fsubp
sub
pop
ficompl
lret
pop
push
sub
cmp
call
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
mov
lahf
mov
mov
mov
or
sub
sub
jp
or
xor
jae
enter
aas
int
push
pushf
stc
test
popf
cmp
or
and
adc
inc
jns
add
cwtl
gs
das
sahf
icebp
mov
xor
xchg
outsb
push
xchg
or
mov
and
pop
mov
cmpsb
pop
mov
mov
rcr
xchg
bound
jnp
out
add
or
mov
xchg
in
push
out
sub
jmp
lock
mov
ljmp
pop
xor
scas
push
icebp
jge
add
enter
in
into
outsb
xchg
sbb
mov
cmp
jp
ret
les
lds
push
and
xor
cmp
xchg
mov
cmpsl
and
out
loop
and
ret
testb
enter
icebp
push
mov
xchg
push
sbb
in
pop
pop
pop
cltd
push
mov
mov
inc
fstpl
movsl
dec
mov
push
fwait
or
sti
fisttps
adc
rcrl
fwait
pushl
sub
pop
jb
adc
or
and
in
out
cmpsl
pop
mov
xorb
std
sbb
in
pop
call
lds
fcom
enter
sub
rep
cs
and
pop
sbb
inc
or
jge
fcmovne
rolb
imul
int
loope
xlat
das
mov
xchg
fwait
jne
pusha
sbb
push
lahf
jg
jns
shll
arpl
xor
sbb
inc
fwait
jecxz
inc
xchg
add
ret
sub
les
sbb
imul
fucom
int3
std
inc
jo
sbb
lods
mov
push
imul
movsb
dec
xchg
mov
es
sub
lret
lea
xchg
and
jo
fimuls
push
cltd
in
pop
mov
outsb
scas
pop
push
in
sub
xchg
xchg
xor
scas
adc
cmp
xor
ret
cmp
mov
int
or
addl
fisttpl
xchg
lea
popf
cmpsl
enter
fcoms
iret
mov
xorb
add
sub
in
out
imul
inc
jnp
add
popf
inc
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
fildll
fucomp
movsl
mov
mov
gs
push
dec
and
mov
jno
aad
ror
cli
mov
divb
sbbb
lea
and
sub
adc
test
pop
test
addr16
push
push
out
arpl
xor
mov
out
mov
xor
daa
adc
sbb
mov
dec
pushl
lcall
pop
cmpsb
pushf
testb
jmp
cmp
sub
ret
mov
and
outsb
insl
cmc
lret
pop
loop
sbb
sbbl
fmuls
mov
outsl
cmp
jnp
add
mov
movsl
ljmp
adc
mov
icebp
cli
sbb
inc
out
mov
movsb
shl
or
js
lock
andl
addr16
jns
or
xchg
mov
xchg
mov
sbb
cli
out
inc
push
mov
push
add
lahf
daa
sbb
rorl
mov
jle
leave
cmpsb
adc
movsl
clc
movsb
or
sbb
jmp
cmp
pop
cmp
sub
xchg
sbb
pop
cli
push
and
test
maskmovq
cwtl
leave
cmpsl
mov
inc
mov
xor
cmp
mov
jl
cwtl
insb
adcb
dec
xor
fwait
sbb
in
mov
inc
adc
sarb
cld
lea
pop
pop
pop
fldl
sub
mov
inc
mov
ret
into
mov
cmp
pop
negb
cmpsb
adc
inc
shl
ja
cmc
ja
mov
mov
mov
adc
pop
mov
mov
pop
jge
xorl
outsl
cmp
or
add
stos
cmpsl
cmpsb
inc
ss
je
cmpsl
adc
arpl
add
pop
cs
lea
int
fnstcw
filds
cmp
les
into
mov
mov
andl
scas
ret
lds
insb
cmpsb
inc
xchg
adc
sbb
mulb
popa
loopne
ret
add
cmp
lods
test
mulb
sub
fmuls
or
adc
sub
xor
mov
pop
jns
dec
aaa
push
imul
push
lock
int3
mov
mov
add
cmpsb
in
dec
pop
cmp
ret
push
ss
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
movsb
aad
mov
mov
mov
das
iret
sti
test
test
dec
negl
jmp
xchg
ret
pop
decl
push
adc
pop
mov
inc
inc
cmpb
jle
xchg
shlb
fsubrl
push
iret
jmp
mov
dec
mov
dec
stos
mov
mov
sbb
inc
into
test
popf
push
iret
cld
arpl
push
pop
cwtl
fmull
inc
lret
bound
push
jne
jb
pop
lcall
lods
negl
inc
lock
fnstsw
ja
jb
add
insb
stc
sbb
mov
ljmp
hlt
or
xchg
clc
push
xor
lock
mov
push
cmp
jno
jge
lcall
cs
xchg
add
sub
cs
aam
icebp
cld
mov
adc
adc
out
out
sub
sub
dec
cmp
les
push
push
stos
ja
test
and
fldt
or
cld
xchg
jne
decb
mov
mov
aas
out
mov
ret
cltd
jne
sbb
inc
addb
cmp
or
repnz
push
push
aas
dec
mov
je
inc
movb
stc
jbe
fisubrl
xchg
loopne
sahf
test
jae
andb
mov
cmp
xor
gs
jb
js
enter
dec
jo
test
sub
aam
xor
repnz
shll
pushf
add
mov
pop
cmp
sbb
aaa
cmc
aaa
cmp
xchg
xchg
mov
mov
or
cmp
mov
inc
repz
fsubrs
in
pop
inc
mov
pop
dec
shlb
push
pop
sub
ret
add
jno
xchg
jb
inc
in
out
pop
sbbb
ss
xor
jg
xlat
aam
out
cwtl
es
adc
xorl
push
rcrb
inc
jo
pop
cmp
xor
mov
dec
lahf
in
push
jmp
sarl
out
and
jg
fwait
sub
mov
dec
lcall
fiaddl
sbb
jb
add
jnp
mov
lea
pop
loopne
scas
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fnstsw
and
test
adc
mov
add
idivb
xlat
popf
sbb
pop
inc
cmp
les
out
loopne
enter
lret
sub
xor
subb
jg
loop
outsl
push
aas
pop
movsb
sbb
ret
dec
aaa
loopne
mov
pop
jae
jecxz
movsb
add
xorb
paddb
repz
enter
stos
shl
sub
mov
mov
addr16
outsb
stos
nop
push
test
roll
test
repnz
leave
mov
xor
pop
push
punpcklbw
mov
xchg
out
push
in
mov
xchg
aad
xor
or
push
pop
jp
push
adc
mov
ds
lea
mov
mov
jo
adc
movsb
mov
das
std
mov
loop
and
roll
aad
inc
mov
xchg
inc
pop
lods
out
mov
xor
orb
lds
bound
sti
sub
lods
mov
lret
dec
jg
mov
shl
xlat
cld
mov
mov
adc
sahf
dec
repnz
sub
lret
add
xchg
movntps
scas
sbb
mov
add
jb
icebp
mov
sub
jp
out
add
mov
xchg
dec
popf
fldl2t
mov
ret
pop
cmp
mov
test
dec
sub
jae
inc
inc
int
mov
cmpsl
mov
fnstenv
clc
xchg
jae
mov
ret
call
outsb
sub
sub
sbbb
and
out
cmpsl
sbb
inc
inc
dec
stc
sbb
pop
dec
ss
je
ror
lds
pop
dec
inc
mov
add
cmp
jp
movsl
cld
popa
mov
mov
mov
jle
cmp
mov
and
nop
cs
movsl
pusha
xor
ss
sbb
push
xchg
mov
mov
sbb
loop
or
enter
stos
push
mov
cmp
out
in
fs
fadds
push
lods
sub
stos
inc
in
rclb
stos
inc
fistps
sbb
fwait
js
sub
adc
sti
fwait
mov
sarl
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
dec
mov
movsb
lods
mov
mov
xlat
mov
mov
cmp
and
lret
pushf
lcall
rcr
push
leave
cmp
fmul
sbb
xchg
push
sbb
lods
add
add
add
addr16
cmp
pop
xor
push
push
add
mov
fidivs
popf
lock
lahf
xchg
ja
test
dec
and
je
jb
cld
sub
fdivl
movsb
repnz
mov
push
int3
cmp
or
fisttpll
outsb
scas
out
fsub
pop
xor
cld
push
and
xchg
and
mov
xor
push
mov
insl
jp
test
jmp
ja
testl
jmp
add
insb
push
add
xchg
aas
add
roll
ja
movsl
das
xchg
jno
adc
call
roll
pop
pop
sub
les
adc
repnz
in
pop
dec
stos
xchg
pop
xchg
push
cmc
mov
push
mov
mov
in
mov
outsb
mov
ss
adc
std
sbbl
lret
and
cmp
cld
ds
lods
subl
xor
xchg
dec
sub
inc
sbb
nop
test
add
push
jbe
scas
fcmovnu
stos
jns
pop
mov
ficoms
jns
das
pushf
xchg
shll
add
test
pop
push
enter
js
pop
lcall
mov
fiaddl
mov
add
pop
ret
aas
and
jnp
push
dec
je
xchg
fs
or
aad
std
ret
divl
and
pop
dec
call
fs
insl
mov
jbe
dec
rcrl
xchg
xchg
mov
ret
scas
lods
pop
xor
sbb
add
inc
push
ds
mul
adc
fisubrs
add
mov
int3
mov
lds
or
mov
push
lret
xchg
lret
inc
scas
xor
inc
aad
xor
fnstcw
pop
and
jl
loope
sti
push
negl
or
mov
push
enter
subb
insl
out
divb
or
mov
cmpsl
dec
mov
repz
push
bound
cmp
add
mov
ljmp
xchg
mov
jbe
fucomi
scas
push
push
pop
xor
push
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
pusha
sahf
lcall
mov
or
dec
pop
pop
or
fs
and
pop
pop
scas
sarl
scas
movsl
pop
and
sub
jae
sub
lret
test
push
push
inc
cmc
addr16
aas
pushf
cld
xchg
mov
and
mov
jecxz
loop
mov
test
fisttpl
add
jae
cli
mov
or
clc
pop
pusha
fwait
sbb
add
sub
inc
das
sub
xor
sub
push
or
test
adc
push
sahf
pop
pop
pusha
or
inc
outsb
xor
lds
push
int3
popf
in
sub
pop
js
jmp
daa
shll
aad
cmc
daa
fmull
hlt
mov
dec
dec
jg
out
add
cmp
pop
aam
mov
dec
cli
dec
pop
in
jne
cmp
call
popa
pop
decb
imul
jno
mov
xchg
dec
scas
shrb
cmp
aas
jno
inc
push
sub
mov
inc
xlat
dec
cmp
lahf
jge
scas
fs
ds
fidivrl
inc
push
push
test
jp
ljmp
cmc
mov
pop
sbb
add
mov
imul
and
push
and
out
lea
xchg
ja
dec
mov
adc
clc
xlat
hlt
clc
jl
lret
xor
test
push
fnstsw
push
test
out
je
repnz
mov
and
test
ja
jne
aam
movsl
xchg
iret
xchg
pop
xchg
jns
loop
hlt
xor
dec
mov
sbb
mov
mov
pop
into
lret
and
jle
xor
cs
sbb
out
jge
pop
sti
jp
xchg
leave
shl
sahf
dec
popf
dec
fidivl
jl
mov
mov
iret
rcrl
xor
and
push
js
add
mov
repz
cmp
rolb
mov
dec
adc
add
decb
cmp
mov
mov
clc
pushf
add
into
data16
stc
xchg
push
sti
fistl
mov
mov
and
out
xor
sub
pop
jnp
sti
adc
icebp
jb
mov
jno
adc
decl
cmpsb
fisttps
addb
pushf
mov
xlat
xor
sub
mov
or
pop
dec
sbb
divb
cmpsl
enter
scas
jge
gs
inc
rorl
pushf
idiv
sbb
jmp
add
out
add
fstpt
mov
out
pop
out
add
pop
ss
push
loop
inc
xor
in
or
adc
or
sub
mov
mov
hlt
fcoms
add
push
imul
xchg
pop
jge
out
out
out
and
fildl
cmp
cltd
xor
push
subb
pop
in
push
adc
xchg
add
icebp
sub
mov
sbb
out
jge
sub
and
sub
call
mov
clc
loop
sbb
push
mov
mov
loopne
push
js
add
arpl
ds
dec
mov
ja
cmc
sub
pop
hlt
lea
cwtl
jmp
mov
fisttpl
fdiv
daa
mov
or
adc
lret
jg
jge
movsl
cmp
dec
dec
in
xchg
loopne
push
or
dec
jl
and
pushf
cmc
cltd
sbb
jp
repnz
mov
test
repz
in
and
sbb
jns
cli
fwait
and
push
in
out
lock
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
jnp
shrw
mov
mov
mov
cmpsb
popf
pop
cld
cld
inc
jle
bound
pop
fcompl
arpl
iret
insl
shlb
ljmp
jb
xor
cmp
sahf
push
popa
mov
push
xor
and
xchg
clc
xor
dec
dec
push
scas
insl
mov
push
xor
cmp
aas
cmc
mov
mov
in
out
out
xchg
adc
nop
xchg
mov
fimuls
mov
dec
sbb
and
fs
loope
ljmp
dec
pop
mov
sbb
jns
xor
mov
notl
imulb
ret
pop
sbb
xchg
push
fwait
push
mov
shrl
or
mov
fs
xor
xchg
clc
imul
mov
bound
fwait
jbe
cli
mov
in
je
and
inc
jle
or
cld
xchg
stos
cmp
mov
mov
jmp
pop
outsb
sub
jnp
jno
fdivp
stc
xchg
cmp
or
imul
addr16
rcr
inc
stc
xchg
jle
sub
push
mov
jno
mov
inc
xchg
sbb
fstl
aaa
mov
mov
imul
test
adc
adc
in
popa
shll
rolb
hlt
adc
adc
pop
push
scas
jne
sar
movl
lret
imul
repnz
xlat
arpl
cmc
xchg
popf
xchg
jmp
sbbl
xchg
or
mov
decl
rcll
into
push
jle
jecxz
sbb
insl
test
pop
ja
mov
cmp
xchg
lods
sti
int3
dec
xor
push
jmp
or
lret
mov
xchg
push
jle
lock
pop
lahf
js
mov
ja
mov
out
insl
bound
push
lock
adc
dec
test
jno
and
in
in
jg
push
stc
jne
mov
and
lds
xchg
js
jecxz
xchg
push
fcomip
push
aas
fsubrl
les
enter
or
adc
aas
ret
bound
arpl
jl
stc
xor
cmp
mov
loope
movsl
push
shll
ss
mov
lods
test
jle
popf
xlat
pop
cwtl
push
sbb
movsb
jecxz
and
dec
loope
jmp
popf
orb
icebp
movsl
cmp
out
inc
popa
or
ret
xchg
leave
mov
rcrb
mov
xor
jnp
sbb
adc
out
fsubrp
mov
xchg
mov
add
lahf
aas
js
loop
cmp
cltd
push
or
pop
xor
cmp
nop
jbe
fs
jne
push
inc
lods
push
mov
sub
xor
testl
test
loop
pop
push
jbe
punpcklbw
les
mov
sub
mov
out
dec
xor
cld
pop
cmp
xchg
in
push
mov
sti
push
pop
xchg
ljmp
ja
test
in
sti
lods
or
or
jns
lahf
enter
adcl
bound
mov
test
lods
jno
js
in
scas
in
sbb
pop
mov
push
mov
mov
fistpl
negb
cmpsl
fmuls
test
add
sub
push
aas
dec
daa
lods
xchg
call
shll
scas
lret
mov
pop
and
test
rolb
inc
cld
test
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
xchg
inc
mov
mov
xchg
jne
push
icebp
movsb
cld
mov
push
stc
or
and
shr
lds
js
mov
in
out
rclb
dec
fxch
or
sbb
push
shl
test
or
adc
cmp
out
int3
xchg
movsb
add
je
xor
cmpsl
adc
inc
imul
inc
dec
in
add
pusha
push
pusha
test
mov
sbb
fwait
int
shll
bswap
call
out
push
inc
pop
ret
mov
lock
push
pop
lods
sbb
test
xlat
scas
sahf
add
pop
lcall
push
into
aad
push
push
cmpsb
lea
cmp
dec
out
movsb
jg
and
fcmovnbe
and
and
in
shrb
cmp
call
mov
pop
mov
xchg
mov
dec
mov
sbb
or
mov
sahf
adc
les
lret
int3
and
inc
sbb
push
sbb
ret
fistpl
and
lds
sbb
divb
ficoms
xchg
inc
cmp
loope
filds
sub
mov
jg
filds
xchg
addl
mov
flds
dec
sub
fidivrs
pop
ret
std
add
imulb
mov
insb
adc
lods
mov
xchg
out
xor
add
call
out
sbb
add
scas
test
mov
popf
pop
mov
test
mov
cwtl
lea
ret
lea
or
or
insb
or
adc
xor
iret
outsl
cmp
popf
adc
lds
in
pop
xchg
and
xlat
jae
ja
sbb
inc
inc
pop
adc
mov
outsl
rcrl
adc
mov
int3
pop
pop
fwait
push
mov
adc
movsb
fldenv
cmp
xchg
mov
lcall
and
scas
xor
xchg
add
cmc
sub
mov
repz
lahf
sarl
add
js
sub
adc
adc
mov
cmp
nop
dec
pop
outsl
int3
mov
cmp
pop
and
xlat
int
jl
loop
out
xorl
mov
and
inc
jnp
adc
sbb
or
jns
add
insl
dec
cmc
mov
out
cld
and
fcomps
leave
jl
repnz
movsl
dec
cmp
and
or
shl
popf
fstpt
stos
push
faddl
pushl
push
rolb
fdivr
xchg
je
repz
mov
xor
ret
mov
dec
mov
cmp
ss
cli
jae
adc
push
pop
jle
stos
xor
push
dec
jp
aam
inc
aad
cwtl
aas
lcall
js
adc
adcb
lret
mov
jmp
jge
dec
push
cmc
js
sub
in
sub
cmp
in
in
xorl
sbb
js
mov
mov
dec
push
push
dec
pop
daa
sarl
or
daa
leave
outsl
dec
lret
popa
stos
aaa
mov
int3
sub
mov
sub
add
inc
mov
addr16
in
int
sub
popf
cli
jb
enter
adc
xor
into
outsb
inc
jbe
push
sub
inc
cwtl
lock
test
push
iret
mov
add
push
adc
sub
mov
jo
mov
repz
ja
negb
test
push
cmp
sbb
gs
ffreep
add
inc
sub
loop
xchg
test
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
sahf
push
iret
mov
mov
sub
aam
and
ds
mov
push
inc
repz
jb
xchg
jle
ljmp
cmp
clc
or
sti
push
pop
mov
mov
mov
and
enter
jp
pop
mov
pop
pop
aam
jmp
mov
enter
icebp
mov
push
mov
xor
dec
cmp
int
nop
popf
xlat
xchg
push
sti
addb
test
mov
or
jge
push
push
cmpl
popa
jecxz
mov
out
lea
js
push
push
jp
dec
add
xor
mov
xchg
xchg
mov
add
rclb
cld
adc
dec
mov
out
cmp
leave
fmull
and
or
fadd
enter
iret
movsb
mov
cmp
dec
sahf
push
inc
call
add
jg
sub
js
je
idivb
cmpsl
jmp
subl
fsubrl
test
push
cmpsb
stos
inc
push
cmp
push
popa
es
jne
jae
bound
mov
jmp
je
and
and
jbe
scas
dec
jae
xchg
sub
sarb
sbb
out
cmp
stos
and
ss
add
xchg
aad
adc
scas
and
mov
sub
sbb
stc
mov
or
std
pop
call
jae
add
push
stos
rorb
insb
repnz
mov
lret
lds
js
lock
out
pop
arpl
loope
mov
lea
test
sbb
cmp
push
movsb
mov
jge
or
cwtl
push
inc
and
jecxz
push
scas
call
push
rcrl
jno
sub
shll
aas
leave
bnd
sbb
mov
cmp
flds
cwtl
sbb
adc
and
sbb
sbbb
mov
push
or
push
jp
sub
and
add
faddl
movsb
add
inc
data16
enter
arpl
push
ljmp
push
sarb
mov
shrb
stos
hlt
add
mov
jbe
xor
bound
xor
sub
imul
jl
into
xor
jne
or
or
pop
out
or
push
std
adc
and
push
mov
jb
in
lahf
pop
or
verw
ljmp
repnz
cltd
pop
lcall
jmp
sbb
out
push
cmp
imul
ss
pop
gs
pop
cli
aam
sbb
xchg
xor
or
imul
stos
cmp
jge
iret
pop
inc
lret
xor
adc
dec
sbb
or
xchg
xchg
or
or
imul
push
rcr
pop
insb
mov
stos
or
adc
adc
mov
cmpb
mov
dec
jo
push
pop
push
call
movsl
pop
or
cmp
inc
flds
sub
jo
repnz
sbb
add
lret
icebp
sbb
stc
add
aad
aad
loope
push
pop
push
pop
daa
mov
xchg
lea
js
aaa
add
outsb
cmp
mov
sbb
pushf
jle
cld
dec
pop
sub
jmp
cs
push
int3
cld
js
imul
in
mov
jnp
pusha
sahf
push
jmp
jp
or
dec
xchg
les
pop
sbb
dec
jae
subl
jbe
lret
and
adc
mov
sub
add
inc
in
jno
add
add
add
fisubrl
mov
or
js
jmp
les
fimull
inc
aas
push
sti
xor
jae
xchg
pop
xor
push
add
ss
push
rcr
mov
jge
push
psubw
mov
cltd
pushl
cltd
jae
scas
ds
fchs
fs
jmp
mov
pop
call
js
jp
cmp
dec
xchg
mov
ss
mov
push
xor
xlat
ret
and
sbb
sub
mov
dec
xchg
fs
dec
push
xor
ja
scas
jg
adc
inc
leave
xor
iret
inc
xchg
xchg
repz
stos
xchg
and
jne
pusha
jne
insb
sub
mov
and
in
cmp
out
imul
sub
push
cmp
mov
sbb
ret
inc
mov
jp
hlt
arpl
lods
bound
xchg
adc
xchg
sbb
mov
and
xchg
mov
sub
jno
leave
iret
sub
xchg
les
mov
enter
rorb
pop
fistpll
movsl
mov
and
jne
jb
bound
xorl
imul
push
adc
mov
mov
jno
xor
inc
sahf
and
adcl
jecxz
pop
mull
pusha
adc
in
mov
lret
ret
sbb
negb
inc
mov
imul
pop
pop
jb
cmpl
cmp
out
test
jne
js
push
int
jl
mov
dec
pop
dec
sbb
dec
sub
mov
mov
add
jmp
popa
out
jbe
ss
push
mov
into
test
imul
std
aam
inc
sub
cmp
iret
in
mov
sbb
jg
push
clc
adc
jns
pop
fsubl
xchg
push
std
iret
insb
or
sbb
xchg
inc
sbbb
bnd
push
int
jo
popa
jno
jnp
pop
jge
mov
sub
dec
outsl
js
fadds
gs
shlb
mov
fstp
divb
jmp
cs
rcrb
addr16
xchg
add
mov
inc
popf
xor
inc
data16
adc
adc
pusha
outsl
sub
popf
popa
insb
mov
aas
sub
fwait
inc
push
inc
popa
dec
and
cwtl
test
jb
outsb
pop
xchg
jmp
xchg
out
adc
dec
mov
xchg
ja
aad
in
cmp
mov
jae
sub
add
mov
sbb
push
sbb
test
sbb
lods
sbb
jl
fs
push
popf
in
sbbb
inc
or
jae
push
dec
ljmp
add
shrw
sbb
fs
mov
repz
jle
dec
sbb
nop
or
movb
sub
xor
jns
mov
pop
test
cld
das
sbb
dec
xor
sub
or
int3
dec
addr16
and
aas
mov
dec
inc
sbb
sarb
mov
mov
insl
push
jno
pop
pop
jbe
cmp
mov
mov
add
insl
pop
ss
cmp
outsl
mulb
sub
and
xor
inc
sbb
inc
imul
jecxz
mov
xchg
xor
mov
xchg
addr16
push
sbb
nop
add
pmullw
hlt
ss
xor
shr
jp
out
in
inc
stos
xchg
into
ja
shl
arpl
inc
out
sbb
insl
sub
loope
pop
xor
lods
hlt
inc
fdivs
xor
dec
cmpsl
cmp
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
insb
mov
xchg
les
ret
xor
ja
mov
cmp
dec
mov
pop
push
in
aaa
fmuls
fwait
push
pop
jecxz
hlt
push
fmul
lds
insl
lret
mov
mov
mov
and
out
mov
xor
scas
mov
push
push
sbb
pop
push
pop
add
fistps
arpl
cmc
loop
lods
mov
icebp
pop
repz
or
movsl
in
outsl
adc
cli
xchg
sub
push
ds
hlt
lret
jae
mov
roll
out
cwtl
xchg
inc
lret
mov
xchg
jae
andb
out
popa
sbb
xor
fxch
fidivrs
cmpsl
rcr
mov
or
ret
ja
mov
leave
or
jp
jb
sbb
movsl
aaa
negb
jge
in
imul
aaa
repnz
stos
xchg
dec
sub
movsb
adc
mov
xor
xor
add
scas
add
push
insl
dec
mov
jns
sbb
fiadds
xchg
int3
mov
das
scas
pop
fisttpll
sbb
mov
aam
xchg
push
mov
fildll
inc
mov
je
adcl
jae
rorl
iret
jno
fs
daa
adc
popf
jno
xor
or
or
sub
aam
sarb
add
push
sub
shrb
fdivs
xchg
aam
lret
iret
fwait
popf
ja
pop
fildl
fdivr
inc
in
test
out
std
add
test
pop
and
adc
dec
push
add
pushf
insl
shrb
jno
lds
ret
les
mov
xor
mov
out
movb
mov
sub
fnstsw
xchg
gs
or
add
movsb
arpl
ds
hlt
ret
insb
xchg
xchg
pop
outsl
pusha
imul
cld
push
jns
rcr
gs
inc
xlat
shrl
pushf
jae
xor
xchg
xor
shl
push
fwait
and
and
push
jb
gs
je
flds
cld
test
ja
stos
lea
lock
or
push
adc
pop
call
mov
mov
pop
jecxz
pop
faddp
sahf
sub
inc
bound
daa
lret
cmp
pop
lahf
xchg
pusha
fs
xchg
fucom
lcall
ret
insl
mov
rorb
jns
loope
jns
sub
fdivrl
push
stc
cmp
sbb
popa
imul
lret
jbe
enter
repz
lcall
cltd
std
push
or
inc
push
stos
les
inc
xchg
nop
lea
pop
pop
cmp
lea
outsb
xchg
movups
pop
lea
ret
enter
sub
jne
pop
jnp
outsl
mov
sbb
mov
xor
cwtl
add
pop
mov
leave
adc
js
jne
pop
inc
mov
ds
adc
bound
or
sbb
subb
xchg
jae
pop
xchg
ljmp
aaa
jle
jns
bound
cmp
imul
xchg
dec
lcall
and
xchg
sbb
dec
jg
repnz
mov
mov
sarb
sbb
imul
jmp
pop
jle
lret
js
cmp
data16
jl
mov
sub
inc
out
sbb
inc
in
add
hlt
test
in
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
nop
xchg
inc
fstl
les
mov
imul
jo
jmp
mov
cmp
out
lcall
cltd
mov
xchg
cmp
mov
and
addb
sbb
fdivrl
cld
cmpsb
lds
inc
add
outsb
in
dec
outsb
mov
and
std
pop
cwtl
cmp
dec
and
scas
mov
xor
pop
das
xor
and
or
push
lock
inc
bound
and
pop
test
add
jg
popa
cld
cmc
stos
cwtl
fucomip
cmp
xchg
jp
int
mov
cmp
jp
shll
iret
pop
sub
pop
popl
fdivl
daa
ljmp
inc
or
lcall
mov
stos
in
push
dec
mov
pop
insl
out
inc
pop
fcoms
lods
cmp
jle
add
pop
push
jae
xor
inc
test
xchg
and
ret
movsb
int3
inc
ret
jno
cmpsb
add
inc
or
pop
and
pop
repz
dec
loop
jnp
cmp
out
or
popf
pusha
add
dec
shll
or
add
or
das
mov
sbb
cmpsb
out
sbb
cmpsl
ljmp
mov
push
hlt
int
in
and
inc
rorb
sub
sub
insb
lahf
pusha
call
inc
xchg
dec
and
fldenv
negb
push
push
hlt
lods
loope
xchg
mov
mov
outsl
push
lret
js
pop
int
das
mov
cmove
scas
cmp
pop
inc
mov
sti
xor
xchg
push
out
sub
mov
pop
jae
push
push
jl
int
pop
shlb
fbstp
jo
jo
push
xchg
fisubl
mov
cmp
jo
js
subps
adc
into
call
jp
mov
push
sbb
pop
push
dec
enter
sub
cli
mov
stos
mov
ss
dec
sub
mov
xor
push
mov
mov
int
adc
xor
adc
scas
xchg
push
sarb
and
push
popa
sahf
xchg
rcrb
mov
mov
jne
test
mov
jbe
pop
cmp
mov
or
dec
divb
or
mov
into
or
inc
xchg
sbb
pop
jl
mov
out
pop
lcall
or
sub
xchg
jge
xor
jge
es
add
pop
mov
add
jmp
pop
inc
dec
lds
sbb
addr16
sbb
enter
inc
daa
repz
adc
lret
std
insl
in
mov
mov
int3
pushf
push
jne
xlat
inc
jle
out
inc
nop
adcb
mov
cmp
jg
mov
jne
fstpt
sbb
or
jne
daa
sub
cltd
in
les
push
aad
out
jae
mov
aaa
pop
xchg
mov
bound
cmp
into
push
inc
push
xor
mov
stos
adc
pop
lahf
out
pop
in
xor
cmp
xor
ds
nop
nop
and
inc
jmp
leave
push
iret
lret
pop
imul
push
mov
sbb
xchg
ficomps
push
and
sti
mov
or
cmp
ss
cmp
push
or
dec
push
pop
leave
imul
inc
rcr
xor
bound
arpl
add
push
xor
dec
inc
fcomip
xchg
mov
sub
add
add
push
mov
sti
out
jp
dec
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
call
lock
mov
fdivs
cmpsb
lahf
fst
mov
push
mov
dec
jg
test
add
or
and
int
stos
mov
sub
sub
stos
loope
pop
hlt
lcall
dec
repnz
mov
incl
lea
mov
andl
mov
lea
fisttpl
and
dec
cmpsl
addr16
pop
cs
sbb
test
mov
mul
bound
sbb
inc
cmp
mov
leave
test
pop
mov
push
bswap
clc
adc
in
sub
pop
sahf
sbb
inc
pop
add
pop
fnstsw
push
call
dec
and
mov
insl
or
ds
jbe
addl
ja
and
mov
jbe
or
sbb
jg
mov
out
enter
lret
gs
pop
add
and
push
jns
dec
add
lods
mov
cmp
outsl
mov
pop
daa
fsubl
adc
enter
ret
fs
jp
add
cs
and
xchg
xor
fs
out
leave
push
xor
fucomi
push
sub
push
or
idivb
mov
cli
nop
jb
cmp
push
mov
rorb
xor
mov
mov
mov
push
cli
and
inc
movzbl
imul
mov
push
xor
arpl
push
jecxz
pushf
test
out
dec
test
add
xchg
mov
cmpsl
int
in
or
jmp
add
movl
sbb
sbb
pop
jnp
jge
push
sub
ds
pop
fbstp
push
mov
movl
mov
scas
jmp
cmpsb
lods
pop
pusha
and
xchg
dec
xor
call
mov
and
ret
cli
aam
mov
loopne
dec
push
lock
incb
xchg
sub
xchg
int
mov
repz
ret
mov
dec
or
inc
dec
enter
fldl
and
test
xor
xor
out
push
cltd
xchg
int
into
inc
scas
xchg
xor
vunpckhpd
bnd
pop
sbb
loope
and
std
aad
pop
andb
leave
addb
add
aas
int
aam
fdivrs
add
pop
pop
div
aad
std
push
loopne
jge
xchg
movsl
adc
arpl
popf
popf
xor
pop
adc
mov
pop
xchg
adcb
dec
test
pusha
xchg
imul
add
mov
mov
into
dec
mov
inc
sub
push
ficoml
cmp
push
xor
fdivrl
lods
fisttps
dec
jb
int
stos
lret
adc
cmpsl
inc
je
cmp
in
and
popf
pop
cmc
in
in
divl
rolb
add
rorb
push
inc
adc
shl
int
les
sahf
lahf
repnz
lds
dec
mov
dec
aaa
mov
jo
cmp
sub
cli
movsb
xchg
clc
lahf
leave
cmpsl
jl
or
ss
mov
out
movsl
sbb
add
or
cltd
fnstenv
jns
pop
pop
pop
addb
add
xchg
adc
and
and
add
mov
popa
dec
sbb
dec
dec
loop
mulb
cwtl
fisubs
mov
lret
shll
leave
ljmp
jp
clc
xor
jp
cmp
bndstx
jae
or
add
les
out
rcrl
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
sarl
fnstsw
clc
mov
mov
jg
mov
jne
xchg
ja
mov
sbb
jg
lds
sti
pop
sub
and
push
sub
testb
jg
in
clc
enter
push
or
mov
mov
mov
rcll
mov
or
pop
dec
int3
push
push
not
inc
mov
cli
lds
and
test
inc
mov
and
push
xchg
in
xchg
push
push
lcall
shrl
int
out
sub
ficoms
pop
add
scas
aas
jbe
jo
mov
insb
adcl
cmp
ret
shrb
jo
push
xor
mov
mov
fstpt
loope
verr
addl
cmp
repnz
cwtl
sbb
mov
daa
std
arpl
jo
xchg
lret
setbe
lahf
fistl
or
ret
xchg
xor
pushl
test
dec
lock
sahf
cltd
pusha
insb
adc
mov
les
dec
imul
or
ss
or
gs
lods
lods
xchg
das
cmp
out
loop
adc
sbb
and
lea
pushf
xchg
jnp
gs
xchg
hlt
fnsave
fdivrs
jl
daa
pop
gs
subl
sub
or
stc
jmp
dec
mov
iret
inc
mov
mov
cli
stos
mov
mov
test
pop
push
sub
in
pop
jnp
xchg
repz
jge
test
iret
or
cmpsl
xchg
shlb
test
mov
xchg
mov
push
into
push
pop
test
xor
mov
mov
fs
adcb
sbb
cltd
xor
mov
xchg
cmpl
dec
push
mov
sub
stc
enter
xor
popf
ljmp
lods
test
mov
sahf
and
out
pop
mov
aas
jo
and
add
inc
outsl
mov
outsb
sbb
xchg
or
xchg
cli
pop
pop
js
sub
jne,pt
fldl
and
cwtl
push
pop
lods
push
xchg
test
inc
mov
push
pop
ror
sub
dec
out
leave
jo
subb
pop
push
mov
lods
fldt
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
or
push
sahf
push
cld
mov
mov
adc
fidivrl
cmpsl
sub
in
pop
popf
lret
stos
lods
mov
dec
cmp
rcrl
push
jne
mov
aad
mov
inc
cs
test
shlb
push
or
test
cmp
dec
pop
sub
xor
ja
sub
xor
test
sub
sbb
add
adc
sbb
aas
mov
dec
outsb
xor
popf
xchg
cmp
cmp
and
inc
decb
pop
inc
push
insl
int3
sbb
pop
sub
cmpsl
lcall
aam
xor
jp
clc
pop
cmpsw
pop
inc
jp
xor
or
cmpsb
push
nop
or
pop
fs
add
sbb
cmpsb
rolb
add
inc
and
and
stc
clc
mov
lea
jmp
add
fscale
cmp
push
popa
scas
js
or
fnstcw
lcall
and
scas
cmpsb
sub
and
mov
in
xlat
inc
sub
fnstcw
push
xor
add
xchg
and
jae
add
scas
inc
cmpb
and
iret
add
dec
xchg
xor
testb
push
xchg
shrb
into
das
push
fsubrl
sub
dec
or
std
add
mov
leave
imul
cmc
icebp
mov
rcrb
into
sub
ja
mov
and
dec
je
rcr
lret
and
mov
jle
adc
push
sti
sbb
pop
mov
outsb
push
mov
inc
push
hlt
mov
pop
inc
in
cmp
repnz
add
or
and
subb
aam
ds
push
push
or
jnp
push
stos
fdivrl
jge
inc
mov
mov
jnp
dec
xor
mov
sahf
cmpsl
jmp
push
aam
mov
es
fdivl
dec
ljmp
sbb
sbb
inc
outsl
xor
jmp
ss
mov
sbb
add
jb
addr16
or
inc
push
or
xchg
add
leave
jge
leave
inc
popf
sarl
jo
or
stos
stos
xchg
xor
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
mov
lods
jecxz
add
mov
xchg
hlt
dec
jg
mov
xchg
xchg
lret
pop
adc
jnp
xchg
das
lds
adc
jb
mov
push
mov
jno
and
mov
mov
adc
arpl
in
mov
xor
mov
js
push
ds
sbb
in
jns
in
or
pushf
mov
mov
mov
in
sbb
xchg
lcall
dec
cmp
sub
insb
mov
dec
out
add
pop
fiaddl
lods
push
ds
test
fstpt
scas
push
sub
jg
or
mov
jecxz
mov
sti
or
jge
out
xor
jl
loope
shrl
movsl
cmp
mov
xchg
pop
mov
jp
jecxz
mul
or
fcmovnb
push
xor
sub
dec
inc
jns
stos
clc
xor
cmp
js
push
addr16
pusha
fbld
ss
ficomps
push
pop
and
outsl
xor
into
loopne
js
dec
mov
pop
sub
out
int3
jae
or
jo
dec
fidivrs
or
call
popf
push
movsl
dec
popf
jbe
pop
movsb
test
mov
lret
fisubrs
mov
test
pop
flds
dec
push
imul
in
jns
cmp
jns
jae
jnp
mov
dec
ds
pop
lret
mov
outsb
in
out
mov
shlb
lret
leave
lds
imul
add
inc
mov
gs
pop
fisubl
lods
les
mov
das
call
out
decb
jg
rorl
movsl
add
xchg
mov
mov
jl
roll
and
imul
sbb
lock
fwait
mov
dec
test
lea
adc
aas
aas
inc
add
xchg
cltd
jno
mov
sub
sub
xchg
lock
les
loope
cmp
fwait
add
stos
loopne
std
dec
add
mov
jo
notl
or
mov
push
mov
inc
mov
inc
xchg
inc
xor
xlat
xchg
inc
mov
mov
enter
sub
lea
aaa
sbb
mov
sbb
imul
mov
out
mov
add
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fldl
cli
movsb
int
mov
mov
xor
idiv
outsl
lret
and
in
add
mov
cmp
repz
and
mov
fcompl
cmpsb
outsl
sub
xchg
xchg
clc
lahf
and
mov
xor
mov
inc
sbb
push
mov
mov
xchg
jl
fadds
scas
in
xor
dec
push
fldt
jecxz
call
dec
lret
mov
add
sub
mov
pushf
pop
jnp
pause
push
sti
xchg
scas
cmp
movsl
into
sub
call
in
jecxz
into
jmp
jecxz
ret
push
lods
or
ret
ss
and
mov
nop
test
push
sbb
xor
movl
cmp
fadds
jae
add
inc
inc
scas
ret
xchg
inc
out
push
mov
fwait
mov
je
dec
xchg
mov
and
inc
xor
dec
xchg
xchg
outsb
daa
xchg
sbb
aas
outsl
push
sbb
loope
filds
dec
bndldx
bound
sbbb
push
rcl
int3
or
sbb
mov
int
fdivrs
leave
lods
lds
adc
in
sbb
inc
aad
loope
outsb
scas
cmpsl
and
je
dec
jge
cld
dec
add
mov
pushl
cli
push
jb
outsb
shlb
les
lods
sar
mov
int3
push
arpl
addl
add
push
xchg
xor
xchg
pop
fdivrs
cmp
shl
scas
in
dec
test
fiadds
and
mov
jp
push
jecxz
pop
add
inc
jg
push
adc
and
jbe
fadds
je
fistpl
and
sbb
push
and
aaa
movsb
push
lea
mov
mov
test
pop
es
push
leave
inc
sbb
call
subl
mov
push
pop
push
es
sbb
nop
push
je
iret
push
push
cmp
lret
xchg
pop
xor
xlat
orl
sbb
jne
enter
ret
inc
and
ss
fildl
sbb
or
lret
sbbb
mov
cmpsl
mov
xlat
dec
pop
lea
sarb
imul
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
shrl
les
fldenv
sbb
movsl
mov
std
test
loopne
adc
xor
mov
jle
dec
jmp
scas
stc
addr16
push
mov
imul
roll
push
ret
sub
imul
push
fnstsw
jnp
std
sub
xlat
gs
add
and
hlt
in
outsb
push
xor
test
jno
and
hlt
inc
sbb
rorb
rorb
hlt
test
sbb
mov
outsb
mov
xchg
test
sbb
rcl
fwait
push
push
test
dec
push
adc
jmp
jg
pop
add
mov
test
xor
fmuls
pop
int
push
out
shll
mov
dec
mov
and
push
popf
sub
stos
and
pop
xchg
adc
repz
mov
push
clc
shl
insb
lcall
test
in
cmp
enter
xchg
out
xor
rcpps
inc
movsb
sub
lea
mov
push
fildll
scas
sub
push
and
cld
pusha
mov
and
dec
ljmp
dec
xchg
fwait
push
jae
insl
xor
xchg
push
mull
mov
shlb
xchg
jns
cmp
addb
es
dec
out
testb
sbb
or
fcomp
jns
popf
pop
mov
arpl
jo
mov
cld
pop
cwtl
mov
jnp
mov
adc
stos
ret
dec
rclb
outsl
es
jge
pop
mov
cmp
int3
stos
cmp
adc
push
dec
inc
arpl
xchg
int
outsb
les
pop
sub
fwait
aad
jb
scas
sub
xor
or
mov
sub
add
fisubrs
cs
int3
stc
jo
mov
ljmp
dec
inc
pop
ret
lret
jecxz
push
fcomp
dec
pop
cld
ror
es
stos
mov
idivb
aaa
push
aas
or
cld
shrb
ffree
and
push
call
jecxz
mov
into
cltd
arpl
pop
orl
push
data16
xchg
ja
out
push
dec
or
ret
xlat
jbe
outsl
cmp
fs
mov
insl
inc
push
js
xchg
mov
xor
add
xchg
or
fs
fcoms
mull
xchg
mov
cmpsb
or
sti
jnp
dec
arpl
and
sbb
mov
xchg
xor
or
lods
dec
lea
or
stos
out
dec
sbb
xor
sbb
adc
push
out
or
and
inc
ss
hlt
pop
mov
div
or
mov
jo,pt
insl
pop
cmp
outsb
lods
xor
mov
adc
fwait
sub
mov
das
clc
jbe
movsl
arpl
mov
jmp
sub
xor
out
lret
pop
scas
mov
jge
xchg
lret
loop
or
cs
pop
push
and
inc
xor
jmp
test
fmuls
inc
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
decb
mov
mov
js
lds
icebp
cmpl
in
mov
adc
nop
pop
cld
mov
scas
mov
mov
sub
test
sarl
or
popa
jnp
dec
out
adc
mov
jg
mov
sbb
xor
test
nop
mov
gs
sub
jge
mov
fdivl
lods
and
push
and
sbb
add
cli
and
sbb
add
stos
inc
addb
sub
ds
adc
sub
sub
sbb
hlt
lcall
jnp
push
xchg
call
mov
or
xchg
popf
enter
push
lock
outsb
xor
and
aam
inc
mov
push
or
aas
mov
in
or
es
hlt
or
dec
jle
lahf
in
push
or
jns
xchg
push
in
ficomps
mov
dec
pop
inc
scas
push
imul
push
nop
std
imull
ljmp
dec
inc
gs
adc
clc
pop
lods
jb
sbb
jo
pop
dec
int
shlb
xchg
aas
dec
pop
nop
out
jl
cmp
mov
sub
ljmp
fwait
pop
clc
dec
mov
loop
pusha
mov
in
push
ret
inc
sbb
push
mov
mov
pop
xchg
int
adc
or
mov
add
fwait
sbb
xchg
pusha
aas
mov
mov
aas
cmc
into
nop
pcmpeqb
outsl
push
sarb
and
cmpsb
jb
jp
sbb
sahf
cmpsl
and
sti
or
dec
push
lahf
leave
frstor
jl
inc
lods
dec
lods
jnp
stos
aam
sub
lcall
cmc
cli
out
cmp
clc
jne
cmp
xlat
icebp
push
adc
filds
or
jecxz
cwtl
cmp
mov
xchg
inc
inc
js
mov
fcomps
shl
dec
or
and
out
adc
clc
test
jb
adc
ret
pop
jns
jns
adc
icebp
add
cmpsb
icebp
int
cvtpi2ps
out
sbb
nop
push
daa
add
xchg
jno
insb
shlb
and
mov
fs
add
mov
push
jne
inc
arpl
cmp
push
xor
inc
sub
sbb
adc
xchg
mov
je
in
jno
add
push
cmp
sub
imul
ss
lea
adc
fcom
out
sub
ljmp
sbb
aam
sub
mov
cwtl
xchg
out
in
mov
arpl
sub
dec
xchg
and
lahf
js
je
pop
sub
xchg
push
mov
and
xor
inc
mov
and
pop
sbb
sbb
xlat
and
dec
mov
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
fldenv
mov
outsb
or
hlt
cltd
push
sbb
add
lahf
mov
mov
fisttps
imul
dec
lds
xchg
fisubl
dec
in
jle
cli
sbb
dec
fbstp
xorb
mov
adc
jno
and
popf
xchg
std
add
xchg
arpl
insl
cli
mov
jns
andb
orl
lods
mov
sub
mov
xor
mov
mov
in
lret
cwtl
shrl
mov
adc
xchg
adc
sbb
in
push
xor
dec
aam
in
sub
dec
cs
in
jl
aas
mov
jle
and
pushf
gs
loope
jne
xchg
lds
cmp
xchg
lcall
jp
testb
or
je
push
jne,pt
addr16
xchg
jnp
arpl
sti
sub
mov
lret
test
jnp
mov
pop
or
push
lahf
lds
or
clc
sbb
fwait
pop
push
cmp
dec
mov
in
dec
movsb
xchg
adc
dec
push
les
lds
push
add
xchg
addr16
in
xor
push
jge
mov
imul
inc
mov
push
leave
mov
ret
mov
or
ficoms
sub
dec
rclb
mov
scas
jae
fwait
add
aaa
add
js,pt
mov
daa
lds
pop
inc
and
xor
cmc
and
mulb
xor
leave
ficoms
scas
subl
and
pop
iret
int3
and
jle
cli
js
mov
jge
jo
lods
or
pop
or
imul
jb
cmc
pop
fstl
jp
jae
add
enter
add
adc
and
subb
popa
fstpt
sbb
push
sub
out
testb
imul
int
out
mov
sbb
gs
lock
pop
pop
mov
mov
es
imul
fwait
inc
push
sbb
dec
je
push
pop
xchg
movsb
pop
pop
xlat
pop
and
jmp
pop
pop
mov
mov
iret
lock
push
repnz
jmp
and
jbe
sti
xchg
loopne
xor
pop
xchg
orb
movsl
out
cli
rcrb
imul
push
aas
clc
lods
inc
inc
push
sbb
jge
mov
cmp
xor
sub
cltd
jle
add
hlt
fsubrs
or
mov
pop
addb
cmpsb
fdivrl
scas
enter
fsubrl
pop
sub
sti
cli
jae
scas
scas
add
dec
add
mov
cmp
sbb
repz
cmp
push
cmpsl
rolb
in
or
fbstp
in
or
sar
or
aam
dec
dec
inc
popa
std
imul
and
mov
adc
insb
into
hlt
add
mov
fsubs
jl
inc
mov
dec
jecxz
mov
adc
ljmp
and
aas
lods
movntps
ficompl
xchg
gs
dec
push
stos
data16
or
je
xchg
cwtl
icebp
xchg
or
sarb
ret
loope
fcmovu
jbe
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
stos
and
nop
pop
push
mov
mov
loope
sub
push
and
jecxz
dec
lea
hlt
pushf
arpl
dec
fs
inc
outsl
out
inc
ret
fistl
gs
scas
vmovlps
aas
jb
lds
push
mov
push
xor
daa
add
fcomip
das
lds
jle
xor
push
xchg
pop
dec
mul
mov
jns
mov
jno
stos
add
push
jecxz
sbb
repnz
shr
or
das
mov
cmp
and
jae
sbb
push
jno
daa
jp
mov
xchg
pop
add
loop
std
xchg
sub
dec
mov
mov
push
xchg
cltd
xchg
mov
xchg
int3
push
mov
push
in
mov
mov
cltd
loopne
ficoml
cld
int
jbe
loopne
sti
lods
push
dec
and
push
out
fwait
js
outsl
in
rcrl
mov
push
xchg
imul
int3
inc
pushf
je
movsl
mov
xchg
inc
popf
push
jns
addb
and
adc
ffree
loope
lock
add
xor
icebp
cmpsb
test
aad
lret
jbe
test
sub
fsubrl
and
daa
sub
pop
loopne
pop
insl
mov
daa
xchg
and
rorb
cld
std
xchg
push
stos
fimuls
jp
adc
test
sub
mov
xor
test
and
fbld
nop
iret
loop
add
add
fiadds
jb
xlat
mov
lea
pusha
out
repnz
movsl
ja
cmpsl
lcall
stos
xchg
call
cmp
jns
out
orl
loope
lock
pop
inc
scas
dec
xchg
jne
push
jno
dec
sub
repz
sar
out
xor
push
lods
pop
push
and
cs
dec
ror
out
insb
ljmp
pop
cmc
test
push
sti
fsub
adc
cmp
sub
movsl
stc
fdivr
jbe
popa
push
sbb
mov
lea
flds
mov
call
popa
dec
icebp
push
xor
mov
mov
add
pop
pop
push
dec
xor
xchg
xchg
cli
pop
push
loope
push
sbb
mov
es
imulb
adc
sbb
lea
sarb
pop
adcl
xchg
cmc
sti
stc
call
jns
sbb
adc
pop
popa
jg
adc
addr16
and
add
sub
out
mov
cmp
notb
jmp
gs
sub
idivb
pusha
data16
daa
xor
mov
test
mov
imul
add
shl
popf
and
inc
rclb
and
lret
adc
cmpsb
mov
insl
sbb
stos
jns
pop
out
mov
sub
std
adc
sbb
or
lea
or
imul
clc
and
jns
stos
mov
xor
fmuls
rcl
inc
pop
cli
lods
mov
fldenv
push
and
loopne
jnp
repnz
cmpsl
push
out
dec
push
mov
pop
fnstsw
leave
leave
mov
jmp
dec
cld
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
fisubrs
iret
jge
mov
mov
out
jo
in
fcmovnu
loopne
xchg
ret
aam
test
in
inc
fs
xor
in
popf
fildl
add
rcrl
xchg
mov
es
repz
cwtl
addl
jo
and
push
std
outsb
andb
fsubrl
scas
popa
orl
int
cltd
lea
mov
mov
or
push
out
or
push
or
xchg
fs
add
mov
cmp
fisubs
mov
mov
arpl
fcmovne
hlt
cmpsl
out
sbb
xor
cli
inc
and
adc
sub
iret
cltd
jb
add
mov
mov
rcr
and
scas
jns
in
adc
or
inc
icebp
fsts
pop
lret
clc
xor
loope
jbe
stos
insb
or
sub
mov
and
movsl
xchg
cmp
sbb
insl
cmp
pop
icebp
lret
mov
pop
aaa
cld
inc
outsl
dec
mov
out
arpl
xchg
inc
testb
xorb
movsb
fiaddl
sbb
dec
pop
cli
or
mov
sbb
lods
mov
xchg
jl
dec
or
std
pop
adc
imul
fs
js
push
fcmovne
jb
test
jbe
insl
cmpsl
jp
cli
cmpsb
jmp
pop
outsl
adc
sahf
xchg
and
add
pop
ljmp
orl
fsts
mov
adc
pop
mov
dec
mov
xchg
int3
insl
cmpsb
jb
xor
test
xor
adc
mov
push
sbb
int3
pop
lods
out
mov
fidivrl
pop
dec
sub
mov
out
cltd
mov
dec
into
in
jb
pop
push
inc
jge
enter
out
mov
rolb
test
movsl
pop
out
nop
pop
out
adc
imull
test
or
dec
and
aaa
xchg
mov
dec
test
push
clc
cs
push
jge
cltd
mov
dec
les
pusha
movsl
mov
push
xchg
fnsave
pop
push
aaa
mov
sub
into
xchg
sub
or
andb
rorl
sbb
loope
stos
jo
mov
add
jg
daa
cvtps2pd
lcall
mov
in
xchg
pop
mov
dec
add
lds
sub
lahf
xchg
into
adc
aam
incb
mov
mov
jns
cwtl
xor
test
ljmp
xchg
add
pop
pop
inc
xor
and
insl
jbe
movsl
and
movups
jle
into
push
cmpsb
test
and
arpl
add
xchg
je
dec
iret
xchg
rcrl
fmuls
cmp
jae
jbe
mov
mov
icebp
jge
cmovb
add
mov
fistl
fs
imul
pusha
pusha
and
insb
mov
shl
cwtl
sub
movsb
int3
fdivr
push
mov
lods
push
pop
pop
cld
addb
shlb
jmp
inc
xchg
xchg
test
shr
inc
outsb
xchg
pushf
ljmp
data16
hlt
cltd
and
test
mov
loope
clc
ret
inc
sub
fadds
jmp
out
mov
and
fidivrs
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
dec
frstor
mov
mov
into
ror
in
leave
sub
in
sub
dec
blsic
bound
fidivs
adc
ror
faddl
addl
mov
ret
mov
out
and
add
inc
ficoml
lock
scas
add
pop
dec
pmullw
and
lods
pop
sbbl
cmpsl
xlat
stos
repnz
jns
ljmp
inc
mov
mov
mov
fcmovnb
sub
jl
and
imul
mov
out
cmpsb
lahf
jno
sbb
clc
dec
orl
popa
or
ja
out
add
lods
aas
mov
popa
cmp
or
int3
mov
call
and
lahf
shll
lds
or
lea
cmp
js
and
addr16
xchg
scas
addl
xor
imul
ljmp
adc
mov
popa
in
addr16
pop
add
adc
and
scas
aaa
lahf
addr16
xchg
mov
cmp
or
loopne
or
sahf
jle
mov
pop
fcomps
sub
bnd
mov
mov
leave
inc
xchg
lret
mov
xchg
jo
in
pop
scas
dec
sti
push
pusha
jbe
jb
mov
jne
push
rorl
xchg
in
mov
or
push
inc
xor
pop
sbb
test
inc
insb
ret
out
adc
lods
mov
mov
data16
aas
mov
in
mov
push
xor
cmp
add
cmpsl
xor
or
or
scas
jle,pn
inc
dec
movsb
push
push
or
test
xlat
andb
cmp
cmp
inc
inc
mov
pop
xor
dec
shlb
ds
pop
loopne
dec
mov
movsb
mov
mov
cmc
lcall
mov
inc
cltd
or
xor
sub
xchg
inc
mov
scas
sbb
std
pop
cmp
aam
jp
add
bound
cs
xlat
jo
sub
or
pop
test
mov
fucomi
mov
mov
test
enter
jg
inc
imul
icebp
pop
inc
mov
jb
mov
scas
lds
dec
mov
sub
out
enter
sub
cmp
je
lods
sahf
mov
add
imul
nop
aas
or
inc
insb
and
mov
add
jne
movsb
mov
cmp
movsb
cmp
nop
jmp
dec
ret
mov
jae
test
inc
adc
imul
add
fisubrl
pop
push
push
and
insl
dec
fsubr
mov
jge
xchg
sahf
scas
pop
cltd
arpl
loopne
test
and
rcl
add
lahf
pop
mov
pop
out
sub
adc
pop
jns
out
push
inc
sub
in
fistl
xor
inc
ret
inc
pop
lds
cltd
or
jno
leave
dec
test
cld
xchg
fisubs
out
inc
jle
into
pop
push
push
jmp
bound
push
mov
add
pushf
xchg
in
loope
lcall
cmpsb
cmp
mov
push
add
adc
mov
push
pop
xor
in
xchg
pop
mov
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
and
add
leave
xor
mov
jge
rorl
sti
lds
jbe
pop
adc
imul
mov
xchg
xchg
jnp
adc
mov
dec
pop
je
add
lret
sub
adc
pop
into
sub
outsb
dec
je
je
into
scas
adcb
mov
pop
mov
xor
es
rcrb
xchg
mov
out
push
adc
inc
lea
test
roll
mov
scas
fistpl
mov
mov
sbb
cmpsb
adc
leave
xchg
or
push
xchg
dec
bound
ds
sub
mov
sarb
ljmp
std
push
xchg
push
faddl
shl
mov
inc
js
pmulhw
daa
mov
lock
enter
outsl
jno
pusha
jge
fimuls
pop
mov
andl
ret
xchg
lods
std
pushf
or
push
ret
and
daa
push
test
push
sbb
fwait
add
adcl
clc
loop
sbb
inc
test
mov
xlat
lock
adc
cmp
mov
adc
dec
imul
and
leave
shll
sahf
out
cmp
add
inc
dec
mov
popl
dec
inc
add
out
negb
mov
arpl
add
dec
and
pop
dec
test
or
fdivs
inc
add
cmp
test
lea
push
add
repz
jno
xchg
adc
xchg
lea
fisttps
sbb
cmc
cvttps2pi
stos
std
les
xchg
ss
aas
enter
cmpsb
pusha
xor
cmp
pop
sub
jnp
xchg
popa
dec
mov
arpl
fldcw
cmp
dec
sub
cmpsb
es
into
jle
cmp
and
pop
icebp
ljmp
mov
nop
adc
out
mov
imul
sti
jg
mov
ret
mov
jle
lods
xor
sbb
cmp
push
xor
aad
pusha
mov
push
in
cmp
ss
or
or
lea
lahf
nop
stos
mov
cmp
test
xor
fistps
mov
dec
ja
cli
cmpsl
lret
test
leave
dec
int
mov
xor
mov
cs
fsubrs
cltd
cmc
loop
imul
inc
jge
sbb
xchg
jmp
cwtl
aaa
cmc
cld
outsl
in
jle
xor
push
insb
ss
stos
lods
jg
shrl
xor
jg
cltd
mov
clc
pusha
xchg
jmp
push
sbb
jecxz
mov
ret
pop
nop
add
icebp
iret
test
aaa
sahf
jbe
push
push
ficoml
add
pop
mov
jnp
ljmp
loopne
and
xor
aad
cmpsb
cmc
test
es
loopne
push
lds
in
scas
ljmp
push
jp
push
jb
cmp
pop
inc
cmp
ds
add
cltd
add
stos
xor
push
orl
aad
inc
pop
mov
fstps
fdiv
ret
jle
push
sbb
dec
scas
sub
hlt
xchg
es
adc
leave
pop
adc
inc
sub
add
aam
sub
outsb
jb
insb
lock
mov
jp
jle
cmpsb
repnz
dec
adc
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fisttpll
cmp
mov
sub
int
xor
push
sbb
pop
fcomps
sbb
loope
jns
cmc
mov
das
mull
lea
cmp
sub
dec
int3
mov
pop
test
adc
push
data16
fsubrs
subl
push
push
hlt
shrl
xchg
aam
pop
loop
push
mov
leave
xchg
call
in
test
rol
push
pop
int
adc
add
push
pop
mov
add
or
popf
shll
push
fldl
cmpsb
ret
sub
addb
xlat
aaa
pop
mov
push
xor
pop
clc
and
jne
jnp
add
dec
mov
cmp
and
lds
nop
cli
sti
jge
inc
lret
loope
adcb
enter
nop
mov
subl
xor
push
mov
pop
push
repz
inc
in
pop
jmp
inc
sub
jl
jp
aam
inc
mov
or
jnp
lret
sbb
adc
hlt
mov
ret
mov
out
xchg
xor
std
movsl
jecxz
aad
or
push
mov
in
xor
outsb
jp
in
cmp
and
clc
sub
stos
or
outsb
leave
in
sub
and
ficoml
notb
pop
lcall
scas
push
mov
cltd
je
clc
popa
or
or
mov
flds
push
clc
fistps
xchg
cmp
push
or
push
push
fiadds
sub
test
lock
push
nop
mov
add
sub
popf
jnp
or
test
dec
jecxz
sub
jl
addr16
sti
test
cwtl
push
pop
push
test
xchg
call
and
push
pop
ret
sbb
sbb
add
xchg
inc
mov
outsl
popl
pop
dec
je
xchg
sti
xor
mov
pop
fmul
push
and
lods
dec
iret
ss
adc
stos
lcall
sub
and
adc
jo
mov
push
sub
add
sbb
pusha
mov
mov
cmp
push
cld
gs
in
mov
sbb
das
sbb
lds
pop
test
push
movsl
in
sbb
out
rorb
mov
fldpi
sbb
mov
rorl
fwait
lcall
bound
in
mov
mov
mov
imul
lods
sbb
loope
inc
movsl
out
in
push
xor
xchg
imul
sub
push
and
and
ja
jecxz
das
aad
add
out
mov
jmp
call
xchg
fldcw
cmc
add
jbe
mov
mov
bound
pusha
sti
sub
dec
or
imul
mov
cmp
or
cmc
shrb
adc
pop
or
push
lock
movsb
imul
lcall
inc
js
pop
adc
sub
inc
call
xchg
and
mov
cli
insb
inc
xchg
mov
call
sub
dec
addr16
mov
xchg
testl
fsubrs
xlat
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
fstl
inc
mov
mov
and
sub
es
rcrb
push
pop
and
int3
push
ficoml
fisttps
push
sub
pusha
sahf
and
testb
dec
mov
lock
fwait
nopl
int3
es
xorl
jne
dec
call
fistpll
jl
mov
pop
or
mov
cwtl
cmp
insb
jae
cmpsl
add
fstpl
xor
dec
add
dec
bound
pusha
pop
dec
and
es
popf
call
cltd
or
cli
and
or
in
aas
popf
push
jmp
xor
idivl
xor
andl
ret
mov
dec
andl
sbb
push
bound
push
pop
inc
dec
mov
mov
lea
lret
and
push
mov
cmp
popa
cli
mov
xchg
or
ljmp
pop
iret
jg
lock
xchg
fchs
sbb
std
pop
push
testb
dec
cld
push
out
adc
nop
add
dec
ds
in
pop
inc
in
shlb
or
mov
mov
push
fcomip
pop
repnz
jmp
fwait
add
xchg
cmpsl
in
mov
cmpsb
jg
rolb
cmpsl
sahf
pop
xor
iret
xchg
sbbb
mov
out
mov
cwtl
cmpl
test
jmp
shrl
inc
in
lods
mov
xchg
inc
repnz
ljmp
aad
cmpsb
std
lock
jnp
lahf
push
test
daa
jle
int3
mov
outsl
cs
sbb
add
repz
or
stos
fidivrl
fst
bound
mov
jo
cli
mov
adc
sub
out
mov
ficoml
push
shl
xchg
ret
jg
gs
sbb
dec
mov
push
data16
int3
cmpsl
js
stos
pusha
push
sub
stos
xchg
and
inc
pop
shrl
lods
or
xor
cmpb
in
or
cmp
adc
push
and
out
ffree
push
loope
nop
mov
in
movsl
xor
sbb
sbb
mov
rol
pop
cmp
add
enter
mov
xor
les
cmp
rclb
pop
ret
sbb
push
mov
xor
pushf
das
inc
xor
push
jns
push
mov
into
mov
add
xor
cmp
fwait
cmp
fisttpll
push
imul
inc
and
push
ret
inc
xor
push
xchg
scas
jge
jb
popl
jne
xchg
xor
mov
mov
dec
jl
fidivs
dec
sbb
lock
push
push
enter
sbb
insl
iret
fs
aad
mov
push
mov
lock
xorb
leave
ud2
xorb
pusha
mov
pop
loopne
xor
int3
jecxz
loopne
mov
shrl
pop
mov
jne
fldenv
pop
daa
lcall
cld
mov
in
insl
pushf
jg
xchg
inc
add
pop
shrl
or
inc
cli
lock
mov
sub
imul
int
lods
cwtl
mov
push
xchg
inc
inc
mov
aaa
es
mov
imul
add
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
sub
clc
push
mov
or
je
lods
in
mov
push
add
add
add
idivb
and
cmpsl
mov
ja
bound
test
outsl
sbbb
mov
mov
out
rcrb
and
fmul
cmc
inc
mov
inc
daa
jo
scas
aaa
dec
shrb
leave
or
mov
dec
push
jle
push
and
sarb
xchg
imul
loopne
jns
rorb
dec
mov
ss
or
outsb
mov
and
imul
jne
push
test
adc
mov
rorl
fcompl
sub
loope
or
and
fistpll
push
js
mov
ja
push
cmp
popa
out
jl
or
pop
aaa
cmpsb
add
shl
jns
movsl
push
pop
mov
bound
jecxz
inc
lds
addr16
sbb
mov
jge
aad
mov
add
mov
push
enter
mov
scas
sbb
jp
scas
scas
dec
inc
sahf
andb
iret
ja
jo
mov
push
pop
in
cmp
or
lods
and
lock
sub
movsb
mov
dec
sbb
jmp
loope
cld
fstpt
sahf
jb
inc
bound
je
cmc
pop
cmpsl
xchg
ret
popf
xchg
repnz
push
ss
aad
into
cmp
in
cwtl
or
jo
push
adc
xchg
loop
dec
es
jb
dec
jmp
lods
hlt
lods
mov
inc
cmpsl
daa
aas
mov
sti
daa
or
test
arpl
aas
lock
aam
inc
adcb
jno
xchg
sub
push
roll
mov
insl
jns
mov
mov
mov
sub
in
or
adc
mov
std
inc
add
add
jle
and
fistps
fisubrl
mov
bound
sbb
mov
mov
js
or
inc
popf
rclb
sbb
lods
adc
mov
mov
cmp
mov
jns
lock
pop
add
ja
les
mov
add
add
movl
movl
jmp
pop
daa
fcompl
mov
aad
add
bound
mov
mov
mov
or
fmul
push
pop
mov
mov
mov
dec
xchg
les
popf
xchg
push
stc
mov
mov
xor
mov
and
cli
mov
add
int
cltd
sbb
cmp
lret
movsl
inc
mov
cmc
dec
aad
cmpsb
in
sub
dec
jg
repnz
mov
adc
sbb
push
xlat
movsl
xchg
dec
lds
dec
aam
push
popf
sahf
fsubp
xchg
push
ret
cmp
mov
or
stc
mov
cmp
xchg
pop
jcxz
retw
sbb
in
insb
cmpsl
or
lea
fwait
or
daa
stc
pusha
in
cli
popa
jg
je
push
lea
sbb
clc
sub
inc
inc
mov
xor
mov
lock
repz
mov
outsl
es
add
ds
push
fistl
inc
repnz
ss
inc
dec
into
or
sarb
and
dec
xchg
loopne
lret
sarl
mov
mov
mov
sub
add
mov
outsb
cmp
xchg
pop
fsubrl
push
push
push
mov
mov
shr
nop
mov
sub
addl
mov
mov
adc
stos
lcall
xchg
push
inc
xor
push
popf
out
cmp
mov
into
filds
pop
daa
adc
pop
jne
mov
xchg
adc
cltd
push
cmp
iret
xor
and
dec
sar
cwtl
movsl
and
dec
das
mov
testl
shrl
push
sbb
or
mov
sbb
in
aad
out
pop
adc
leave
rcrb
mov
jg
xor
sbb
hlt
add
mov
js
addr16
dec
mov
test
sub
adc
add
lods
or
aam
mov
outsl
pop
mov
adc
fwait
lea
dec
mov
ret
xchg
jl
sbb
test
insb
mov
rol
and
repz
sbb
fldenv
dec
lea
lret
dec
mov
lock
add
dec
or
in
outsb
mov
add
jnp
mov
imul
ficoml
pop
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
aam
xchg
nop
aam
mov
mov
pop
pop
fsubrl
lods
xor
mov
xchg
pop
xor
outsb
loopne
outsb
xchg
jbe
add
xlat
add
sub
insl
or
ljmp
cmp
sub
mov
sbb
push
sbb
in
orl
pop
xchg
scas
test
mov
dec
jns
and
enter
dec
daa
gs
mov
negl
hlt
insb
ja
mov
push
xchg
dec
inc
popf
out
hlt
push
push
loop
inc
lock
mov
dec
lret
test
stos
scas
outsl
std
pop
pop
xchg
imul
add
pop
jmp
mov
pop
jae
ss
add
aam
and
inc
ret
jle
and
cld
or
in
sahf
mov
insb
ljmp
xchg
mov
outsl
test
mov
scas
cld
test
cltd
mov
mov
sub
outsl
fmuls
mov
aaa
inc
cmp
loopne
popa
inc
lods
dec
imul
xchg
in
push
inc
push
mov
cmp
sbb
lret
add
hlt
mov
mov
push
hlt
mov
cli
or
jl
dec
jmp
movsl
adc
rorb
pop
jl
jns
movsl
mov
je
fcoml
jle
xor
jbe
je
sbb
mov
mov
hlt
jns
sub
pop
pop
mov
xor
cmpsl
sarb
mov
int3
inc
out
rclb
ret
xor
jmp
cmpsb
cld
sbb
ja
or
dec
jae
mov
xchg
andb
lret
icebp
pop
sub
mov
push
and
stc
sub
add
mov
cmp
enter
mov
mov
xchg
sbbl
sti
insl
cmp
adc
xor
cld
sbbb
je
fidivrl
and
movsb
xchg
mov
jmp
outsb
sarl
ljmp
mov
cmp
adc
sbb
ljmp
lea
jae
stos
push
lock
gs
pusha
jge
dec
in
mov
pushf
rcrl
jl
inc
add
push
mov
adc
icebp
xor
dec
lds
je
adc
dec
cli
shr
movl
fistps
cli
lahf
xchg
cwtl
dec
push
ljmp
push
mov
sbb
cli
insb
popa
or
cwtl
mov
add
mov
pop
cli
sti
or
xor
and
xor
jmp
mov
imul
cmp
and
cld
ds
jmp
lods
arpl
out
jae
cmp
jmp
mov
mov
cmp
data16
xor
andl
jle
adc
je
stc
inc
lahf
pushf
mov
sbbl
ds
jb
inc
into
test
push
fwait
mov
cmpsb
lret
cmp
cmc
pop
mov
leave
ds
adc
ret
push
push
push
aam
adc
pop
fmull
and
popa
das
orb
jl
mov
jmp
xlat
xchg
push
lcall
fists
shrl
les
fildl
add
in
adc
lret
ret
dec
and
jmp
add
rcrl
ljmp
adc
push
and
dec
jb
iret
or
fdiv
xor
sbb
push
jne
jbe
add
popw
xchg
dec
lret
dec
lock
jns
leave
addr16
push
in
push
jo
xchg
push
push
outsl
jae
push
sbb
int3
mov
inc
mov
stc
fidivrl
mov
scas
cmpsb
jg
call
and
push
mov
lods
sbb
jne
enter
inc
and
add
inc
std
or
repnz
orl
mov
jns
cmc
sbb
sbb
push
jle
rcrl
cltd
xchg
push
mov
and
nop
nop
pop
iret
mov
fidivrl
xor
sahf
out
fsubrl
dec
sbb
mov
dec
xor
lea
cvttps2pi
fs
add
add
mov
out
mov
mov
push
lret
mov
dec
jbe
mov
cld
inc
js
lret
and
into
push
push
sbb
and
fists
push
add
inc
sub
mov
mov
test
ffree
mov
mov
adc
adc
sub
pushf
pop
orps
lock
push
inc
cmp
mov
mov
mov
jle
xchg
out
std
aas
fiaddl
inc
icebp
fnstsw
pushw
fcmovbe
push
fldcw
cs
rcrl
sub
mov
jno
out
add
nop
cmpb
lods
stc
dec
and
pop
dec
cltd
movsl
pop
sbb
pop
popw
cmp
rclb
out
add
inc
dec
shl
dec
push
pop
mov
dec
and
fwait
gs
jp
pop
cmp
pop
cmc
scas
mov
cmpsb
shll
mov
or
arpl
out
jle
insl
sbb
and
sbb
aaa
sub
insl
lods
xchg
mov
cltd
pop
leave
movsb
sub
outsl
addr16
adc
lock
mov
adc
clc
dec
call
inc
dec
xchg
divl
ret
inc
jns
jg
shrl
lods
lock
lahf
push
pop
popa
test
adc
mov
jb
jne
out
dec
pop
gs
dec
inc
mov
dec
pop
mov
mov
adc
icebp
das
mov
lods
jb
push
jns
outsl
mov
cli
and
mov
push
dec
mov
fsubrs
push
adc
add
push
xchg
stc
adc
loop
pop
mov
pop
xchg
sti
cmp
daa
mov
aaa
mov
imul
add
add
adc
and
pop
mov
stc
das
mov
sub
pop
push
aaa
cmpsl
mov
mov
mov
ja
mov
xchg
or
std
or
shll
popa
bound
movsb
xor
dec
jg
cmp
pusha
jae
pop
jecxz
mov
dec
sub
outsb
dec
pop
test
and
mov
popf
daa
cs
cmp
mov
sub
push
pop
jmp
xchg
inc
inc
mov
orl
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
arpl
mov
mov
mov
ss
add
addr16
and
scas
jb
xor
push
inc
mov
stos
push
mov
rcll
das
xchg
push
pop
cmp
clc
dec
in
push
inc
ficoms
jno
sub
in
mov
clc
sar
scas
fs
ret
ret
aaa
mov
sbb
out
add
out
mov
test
or
es
jo
add
lock
cmpsl
cs
and
cmp
push
adc
mov
sub
jo
mov
aaa
cwtl
pop
sahf
jmp
outsl
xorb
aaa
mov
jnp
out
cmp
adc
mov
imul
mov
cmp
or
lret
cmp
jmp
add
mov
jnp
sub
inc
negl
insl
mov
xchg
jmp
clc
jns
push
fcomps
mov
aam
pushf
mov
andb
add
popf
push
pop
das
repz
out
cmp
dec
les
ret
fcmovnb
out
xor
mov
add
lret
adc
adc
ret
dec
les
pop
or
cmp
sahf
es
xchg
outsl
ja
sub
mov
mov
adc
fsts
inc
scas
mov
xor
cld
add
pop
xor
mov
inc
pop
push
shlb
shll
popa
in
push
mov
jbe
icebp
fdivl
das
inc
rclb
fcmovu
int
jp
mov
fsubs
cwtl
test
push
outsl
or
sub
fistl
daa
pop
pop
cmp
mov
xor
and
lahf
insb
imul
adc
stc
mov
inc
addl
cli
out
shl
mov
sbb
gs
push
loopne
add
insl
fildll
cli
or
adc
or
lock
pushf
mov
jbe
add
fnstenv
mov
pop
cmp
xchg
xor
pop
dec
pop
adc
pop
loopne
pusha
inc
testb
repz
sub
cli
jecxz
or
lret
or
fisttpll
jecxz
or
mov
outsb
and
mov
pusha
cld
add
push
jmp
test
cmc
stos
pop
mov
jmp
and
pop
mov
inc
add
test
bnd
fldt
mov
dec
lret
mov
outsb
sub
inc
xchg
mov
cmp
and
xchg
cmpsb
pop
std
xor
sub
xor
cwtl
xchg
fsub
sahf
arpl
mov
sub
xchg
cwtl
arpl
cmp
mov
cmp
dec
inc
fld
jle
pop
addl
rclb
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
add
mov
mov
loope
in
jecxz
jnp
int
mov
enter
ror
andb
lock
lds
and
test
scas
mov
bound
xchg
mov
adc
mov
loop
insb
je
fisubs
jns
dec
or
mov
mov
hlt
xor
sarb
je
fisttps
and
leave
sub
cmc
mov
arpl
mov
rcrl
xor
popa
pop
jne
fwait
out
ss
xor
jg
mov
or
push
dec
jne
inc
mov
hlt
mov
jg
mov
sbb
cmp
test
inc
push
cmp
add
scas
and
test
cmp
dec
rorb
pop
push
or
jmp
pusha
aas
sbb
dec
push
es
rclb
lods
mov
pop
hlt
adc
popf
enter
stos
bound
into
xor
loope
inc
scas
or
add
fisttpl
push
mov
es
push
dec
insb
xor
adc
and
dec
mov
inc
insl
lods
sarl
sbb
pop
push
icebp
addr16
mov
xchg
mull
or
lret
and
mov
ljmp
fcoml
test
fwait
or
pop
inc
cmpsb
test
fcomip
adc
popa
cmp
test
mov
ljmp
cmpsb
imul
ror
mov
sub
jae
cmp
inc
pop
add
sbb
and
outsb
lods
leave
or
mov
lock
add
je,pt
cmp
jge
out
lea
pop
jno
push
inc
and
cmpsl
mov
daa
xchg
fsubs
jnp
pushf
std
ljmp
inc
add
jo
dec
dec
pop
add
add
and
aad
and
ret
clc
inc
push
adc
xchg
pop
imul
pop
add
push
push
shlb
invd
out
inc
test
scas
push
or
fadd
addr16
sbb
sbb
mov
push
cmp
cmpb
lahf
test
mov
and
and
cmp
adc
test
stc
add
or
mov
pop
jns
xor
insl
pop
mov
pop
jno
sub
repz
and
dec
nop
jne
pop
sti
xor
icebp
movsl
xor
adc
and
out
shl
shrl
mov
jmp
mov
test
loop
mov
mov
pop
pop
inc
push
aaa
dec
iret
fldl
pop
filds
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
mov
insb
mov
mov
shll
dec
loope
stc
xchg
mov
add
fcompl
jbe
testb
enter
lea
dec
lock
pop
sbb
pop
rcll
mov
movsb
and
pop
mov
lods
pop
test
mov
lods
mov
inc
cmp
test
addl
inc
push
stc
js
push
out
mov
daa
cmp
sti
mov
out
mov
sub
nop
js
mov
pop
bound
leave
mov
sbb
fadds
loop
push
mov
ss
shrb
mov
mov
and
ret
into
mov
and
mov
cmp
mov
jmp
push
bound
mov
mov
imul
mov
icebp
das
and
call
pop
mov
cwtl
add
sub
and
adc
fstl
mov
mov
adc
out
and
jmp
cmp
call
std
nop
leave
es
cwtl
jnp
imul
add
into
and
xor
and
adc
jae
pop
push
xchg
lret
ja
lods
gs
sbb
iret
in
inc
pop
jle
cmp
jbe
mov
daa
jne
addb
xchg
and
jno
ret
adc
int3
and
stc
cmp
mov
or
fcmovu
dec
shlb
or
xchg
std
cmp
or
xchg
or
jge
test
cmp
add
test
int
imul
aam
mov
popf
cmp
jae
loope
pop
jp
xor
xchg
push
sar
mov
out
mov
pop
cmpsl
je
aas
xor
lock
add
jno
fisttps
in
dec
jnp
inc
inc
cmp
es
mov
dec
insl
aad
inc
sub
stc
pop
xor
es
jmp
jge,pt
mov
xchg
rol
pusha
pop
xor
pusha
flds
jle
jnp
push
aaa
jnp
and
sbb
rclb
sbb
jae
lods
mov
mov
decb
outsb
in
sti
sbb
pop
inc
push
mov
popa
movsl
outsb
cmpsb
ds
dec
add
push
into
sbb
or
adc
call
in
mov
jne
jg
jl
mov
jnp
jb
push
jo
ret
cmp
xchg
mov
mov
push
sub
jp
test
mov
shlb
mov
ja
lahf
push
out
call
and
cwtl
mov
mov
popf
imul
mov
push
xor
lods
and
inc
mov
xchg
cmp
sbb
out
aaa
mov
cmpsl
mov
into
rcl
cwtl
adc
call
subb
ret
push
out
cltd
pop
mov
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
or
jb
mov
jle
fcmovnb
pop
ja
ret
mov
scas
jl
rcrl
dec
ss
pop
arpl
imulb
or
dec
or
pop
lock
pusha
sbb
add
into
push
jmp
push
jae
ret
mov
xor
int
sub
and
fistpll
sub
mov
mov
roll
out
mov
cld
and
mov
inc
sub
pusha
stc
test
mov
into
jge
test
jg
mov
xor
jo
push
xor
popa
pop
clc
xor
xor
and
sub
cli
jp
xchg
mov
xchg
ret
ds
repz
mov
in
imul
fsubr
loopne
movsl
pop
mov
mov
aam
push
imul
test
mov
punpckhdq
jl
xlat
adc
inc
ljmp
ror
daa
cmpsb
mov
jno
inc
jne
mov
loopne
int
loopne
into
je
fcomp
adc
dec
pushf
jmp
adc
lods
adc
cmp
insb
pop
push
sbb
repz
pusha
ret
pusha
js
mov
adc
jg
sbb
add
mov
mov
mov
hlt
loopne
loopne
lds
les
push
sbb
mov
xchg
sub
sbb
cltd
dec
filds
cmp
xchg
push
ret
repnz
and
and
xor
or
inc
push
and
clc
subb
pop
mov
addr16
andl
xchg
inc
sub
mov
mov
lods
xlat
jecxz
and
aas
dec
pop
dec
jns
pop
add
mov
sbbl
ljmp
jnp
pop
mov
add
or
mov
inc
sub
movsl
add
cmpsb
push
fsts
test
push
fsubrs
and
dec
jge
adc
movsl
cmpsb
enter
pushf
sub
andb
pushf
lret
es
add
mov
dec
leave
xor
push
xchg
fisttpll
inc
sbb
adc
das
lods
jp
xchg
adc
inc
adc
repnz
xlat
sbb
lret
fisttpll
sbb
pop
sub
sub
call
shrl
lods
push
cmp
pushf
sahf
sub
out
arpl
movsb
sub
mov
pop
xor
mov
xchg
mov
dec
mov
push
mov
cs
mov
rorl
add
fadd
mov
xchg
repz
test
cmp
pop
fiadds
adc
xchg
pmaxub
pusha
pop
sub
cltd
inc
lahf
cld
inc
sub
xor
int3
into
mov
clc
pushf
xor
sub
xlat
dec
mov
sbb
repnz
cmpb
loopne
mov
test
loopne
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
xchg
ficoms
sub
outsl
insb
movsb
jns
gs
sbb
test
loop
mov
jb
nop
xchg
push
iret
and
ret
adc
push
test
lock
jbe
jns
push
jns,pt
cmp
and
repz
sbb
jg
and
pushf
fwait
pop
out
bound
xorb
lds
in
popa
inc
ja
jnp
cmp
icebp
icebp
inc
frstor
mov
cli
mov
ds
jmp
in
jae
mov
nop
xlat
inc
lcall
outsb
pushf
xchg
cld
lock
push
pop
lods
fmul
shlb
adc
xlat
push
push
leave
xchg
aad
pop
mov
data16
inc
lret
or
out
bound
std
mov
xchg
xchg
sub
cmc
cwtl
into
dec
jecxz
dec
shll
and
add
inc
adc
add
dec
in
fwait
jnp
daa
mov
shrb
xchg
into
push
and
divb
sub
dec
pop
scas
xor
addl
pop
xor
aas
pop
mov
repnz
mov
mov
inc
add
out
inc
ljmp
adc
loopne
int3
mov
roll
fstpl
and
push
rcll
mov
push
in
out
mov
jno
cmpsl
pop
int3
mov
aas
cmp
popf
arpl
ljmp
shll
inc
inc
scas
mov
fcoms
lret
push
test
pop
xchg
pop
mov
clc
sahf
jb
pop
xor
in
repnz
mov
orb
lds
gs
inc
es
sarb
cmp
pusha
es
outsl
imul
loopne
sub
jmp
lcall
daa
sarl
xchg
es
fimuls
or
cmpsl
aas
jnp
push
adc
pop
adc
jb
repnz
cmpsl
roll
das
mov
jno
cld
lret
add
cmpsb
cmp
cmc
inc
pop
aaa
pop
mov
shll
scas
pop
pop
mov
mov
es
fdivr
outsl
jns
inc
imul
scas
push
adc
fisubs
mov
imul
xchg
add
inc
inc
rolb
lcall
jle
loopne
in
and
cltd
call
push
push
dec
enter
call
push
test
lea
outsb
xchg
and
add
pop
rcll
sbb
lock
pushf
insb
scas
sub
pop
ficomps
popa
add
jle
mov
bnd
mov
out
out
loope
cwtl
mov
loop
add
mov
into
test
scas
pop
fnstcw
loop
loopne
movsl
data16
js
repz
adc
stc
loopne
add
pusha
test
lret
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
mov
jecxz
jle
mov
sbb
dec
call
jno
inc
iret
fwait
sbb
ds
lock
or
sbb
xor
xchg
fildl
or
cld
hlt
ret
std
sub
mov
push
pop
sbb
sub
jge
fisttps
lret
addb
lfs
out
inc
or
or
out
xchg
cli
sub
inc
or
mov
add
inc
cli
jecxz
pop
aam
pop
inc
jle
test
sbb
sahf
adc
imul
out
mov
out
pop
ficoms
cmp
daa
sbb
sbbl
xor
mov
push
lods
into
add
inc
repnz
sbb
cmp
stc
push
mov
sub
mov
push
xor
mov
movsl
clc
pop
divl
mov
inc
dec
in
mov
cld
xchg
cld
stos
xchg
dec
test
add
aad
push
repz
addr16
movb
int
in
mov
lea
add
add
stc
faddp
xchg
pop
clc
inc
and
add
push
sub
and
sbb
dec
xor
cmpsl
dec
and
mov
adc
mov
mov
mov
lret
call
enter
out
mov
aam
leave
and
and
outsb
push
aam
mov
inc
je
mov
xchg
or
xor
rcll
in
xor
sub
jno
imul
dec
or
lods
hlt
pushf
xchg
orl
push
push
mov
dec
lahf
sbb
pop
clc
neg
jmp
test
cmc
outsl
out
pop
inc
xchg
outsb
fs
ljmp
imul
int3
call
icebp
cmp
stos
add
mov
sub
inc
roll
jb
mov
arpl
movsl
rolb
push
lret
mov
jb
int
sub
imul
xor
outsl
int3
inc
ss
out
mov
mov
add
adc
sub
add
mov
inc
add
dec
js
cmp
xor
test
iret
mov
mov
cmp
fsubs
dec
sti
in
xchg
mov
sbb
dec
out
outsb
xchg
add
inc
mov
mov
sbb
arpl
enter
movl
cwtl
in
daa
stos
jecxz
dec
adc
fwait
insw
lret
push
mov
fldenv
movsl
jns
mov
cmp
jmp
cmpl
add
cld
adc
push
rclb
cmpsb
loop
imul
mov
sbb
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
fistps
in
xchg
mov
in
dec
add
add
adc
mov
xlat
ret
cmc
pop
push
xor
cli
mov
mov
jae
push
je
xchg
cmp
mov
hlt
pop
jno
popf
jns
or
jl
sub
aaa
lods
por
lret
popf
pop
mov
mov
pop
test
mov
xor
xchg
clc
cmp
jb
cmp
sbb
aam
data16
add
push
fstpl
mov
pop
fmulp
in
mov
cli
in
mov
hlt
push
pop
fcoms
das
aas
aaa
pop
add
mov
clc
insl
push
push
sbb
aaa
pop
pop
stc
lret
jge
addb
scas
mov
pop
imul
adc
fldln2
or
pop
movsl
pop
ja
int3
push
xchg
inc
clc
mov
mov
outsb
insl
sub
daa
rcll
int
shrb
jne
call
mov
inc
adc
xchg
nop
jle
sarb
stos
mov
or
jo
sbb
stc
pop
in
jno
movsl
lods
repnz
dec
push
mov
mov
mov
fstl
push
xchg
inc
and
bound
push
divl
sub
mov
jge
mov
cmpb
xchg
les
std
mov
pop
sbb
xor
inc
inc
mov
cmp
icebp
push
adc
xlat
and
mov
push
xchg
aas
shr
inc
ret
cltd
mov
mov
fisubs
test
push
ror
cmp
cwtl
or
gs
push
jg
sub
add
or
push
xchg
cmp
push
xor
and
mov
jecxz
mov
jb
xor
add
add
inc
rcl
bound
fmul
xchg
insl
fisttps
push
pop
testb
rorl
hlt
loope
not
lret
in
iret
shrl
dec
shrb
adc
push
cmc
shll
cmp
lret
pop
sub
shlb
mov
loopne
or
jb
jae
divb
int
arpl
push
inc
les
push
pop
mov
in
out
adc
repnz
mov
jbe
add
fxam
add
cmp
nop
andb
cmp
cli
push
lock
pop
xchg
sbb
ljmp
notb
aad
cmp
adc
fcomp
in
jmp
jp
ficompl
test
cwtl
ljmp
pop
add
aam
bnd
adc
adc
ret
add
xor
mov
cli
faddl
arpl
ljmp
lcall
popf
mov
shr
xchg
out
gs
push
or
lods
sbb
ja
js
inc
mov
and
sbb
jmp
cwtl
jecxz
ret
mov
rolb
ret
cltd
push
push
xchg
lret
pop
pop
jmp
xchg
inc
adc
push
lret
adc
add
insb
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
or
in
les
fsubl
stos
orl
and
outsl
sbb
xchg
jl
out
mov
fisubl
imul
mov
sbb
jnp
insl
and
aas
xor
xlat
push
cmp
cmp
adc
cmp
andb
add
loopne
jle
into
imul
int3
sub
sub
outsb
xor
pop
insl
jae
dec
and
xor
add
pop
inc
mov
mov
and
mov
adc
inc
xor
sarl
arpl
cwtl
movsl
pop
push
das
or
cli
les
and
ficoms
push
loop
int3
ss
sub
in
sbb
sbb
repz
fstps
cltd
repnz
scas
dec
lock
adc
dec
icebp
jge
jne
lcall
aad
jmp
xorl
inc
lea
gs
mov
popf
outsl
push
jne
rcr
xadd
test
xor
jnp
sub
cmp
stos
pop
mov
and
sub
xorb
pop
mov
dec
fstp
lahf
call
pop
push
add
out
mov
xchg
addr16
or
das
inc
xchg
repnz
add
sti
xlat
jmp
fisubrl
clc
mov
frstor
in
push
adc
adcl
xchg
inc
cmp
imul
dec
cmp
cltd
in
jmp
jo
out
cmp
pop
dec
rorb
pop
adc
sub
arpl
sub
nop
xor
push
xchg
inc
sub
mov
stos
test
repnz
popa
into
add
test
mov
mov
fwait
jmp
or
xchg
jmp
push
sub
out
hlt
jecxz
xchg
sbb
xchg
cmpb
stos
fisubrl
jae
jle
push
pop
xor
ret
ret
test
fwait
add
imull
pop
mov
or
arpl
dec
js
ljmp
arpl
and
push
outsl
cmp
testl
cmpsl
int
and
out
test
shr
in
adc
jp
mov
fiadds
jns
addr16
adcb
aaa
mov
jp
jnp
icebp
call
idiv
ds
into
movl
mov
lds
inc
mov
in
sti
xor
rcl
nop
add
mov
test
lss
jg
push
test
xor
ds
push
test
xchg
aam
sub
xchg
inc
mov
pop
inc
imul
sub
dec
pop
pop
cli
mov
jo
aad
ljmp
cli
cmp
pusha
imul
pusha
cmp
xchg
lret
insl
popa
sub
jge
lods
fs
gs
mov
mov
lea
movsb
pop
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
lock
dec
xchg
mov
mov
cs
ret
lret
incb
pop
cmp
shll
fs
inc
xor
push
sbb
fsubl
jmp
sbb
jmp
test
gs
aaa
pop
adc
fsubrl
and
repnz
mov
add
iret
insl
add
add
insb
cmpsb
outsl
ja
jl
fldcw
enter
or
cmc
xchg
adcb
mov
fistpll
cltd
insb
jbe
cli
aaa
mov
not
mov
repnz
outsb
adc
enter
jg
setl
mov
push
scas
pop
jno
out
fists
mov
fwait
in
inc
out
test
xlat
pusha
pushf
pop
cmp
jp
fscale
xor
test
out
pop
jecxz
cwtl
or
mov
stos
fiaddl
sar
lods
pop
jbe
sbbl
jg
jnp
pop
sub
cmp
aas
jge
add
push
push
aam
sahf
push
xchg
pop
ja
popf
pop
dec
out
in
enter
pop
test
jne
fadds
stos
mov
xchg
mov
dec
mov
cmpsl
pop
and
dec
stc
lcall
mov
sub
pushf
cmpsl
mov
addb
mov
lea
mov
add
ljmp
sub
pop
mov
shll
jg
ja
out
cmp
fcompl
mov
mov
sub
int
mov
mov
sbb
fwait
scas
xchg
aaa
shrb
pusha
aad
mov
mov
inc
fnstsw
cltd
pop
gs
imul
push
fldenv
sub
or
pop
xchg
int
int3
push
loope
imul
lahf
pop
xchg
insl
push
mov
loopne
inc
icebp
fsts
push
and
aaa
or
xchg
push
cmp
pusha
or
jbe
sbb
iret
shll
sub
rorb
and
cmpsl
pop
loope
andl
push
mov
jp
mov
adc
push
xor
stos
jb
fcoml
sbbb
popf
icebp
in
cmp
add
sbb
or
js
and
ror
js
stos
jl
push
dec
lds
aam
xchg
enter
add
xchg
sub
sub
mov
mov
or
add
sub
xchg
in
dec
stc
mov
popf
bnd
cs
cmp
popa
cmc
nop
push
pusha
and
add
nop
ss
jmp
xor
cmp
fwait
test
and
das
mov
jle
mov
jg
mov
roll
add
lcall
pop
xchg
out
jp
iret
test
and
lods
aam
xchg
push
pushf
mov
fstpl
pop
sub
test
xor
movsl
adc
and
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
shll
mov
mov
pop
inc
insb
jp
fwait
scas
nopl
jb
std
jge
mov
mov
dec
cmp
mov
es
sub
ret
lcall
or
mov
cmp
inc
push
cmc
les
jns
cmpsb
sahf
leave
jp
lock
shlb
adc
mov
xchg
sub
xor
dec
and
pop
out
jns
jae
int
mov
cmpsl
mov
push
mov
shlb
cmp
jb
mov
ja
sub
clc
cmp
cmpsb
cmp
lahf
ficoms
sbb
adc
dec
sahf
cmpsb
push
arpl
jo
mov
mov
in
lcall
sbb
jle
or
sub
movsl
or
mov
xor
in
jne
push
adc
xchg
std
lret
xor
xorb
flds
stc
add
std
popf
into
add
or
outsb
enter
dec
pop
addr16
das
bound
ja
decb
push
jb
push
jns
aad
xor
cmp
jle
fstpt
rolb
push
inc
ret
aad
add
fisttpl
pop
xor
movsl
adc
loope
mov
lahf
in
sub
xor
pop
push
xor
in
std
jbe
fistpl
adc
or
ret
mov
pop
addr16
sbb
dec
cmp
xor
arpl
cli
jge
sarb
mov
xchg
imul
ja
push
jne
xor
nop
je
loopne
mov
xchg
and
shlb
fsts
mov
scas
pop
repnz
push
jp
pop
ret
test
popf
mov
into
jmp
into
jg
je,pt
notl
into
sbb
mov
pop
mov
lods
stos
mov
ja
add
jl
jb
int3
fistpll
xchg
inc
mov
and
leave
and
mov
add
inc
stos
push
shll
mov
sub
mov
add
sub
stos
mov
fnstsw
add
xchg
or
mov
push
jno
pop
imul
in
mov
aas
aaa
or
lods
and
dec
sbb
addl
ja
push
add
aas
push
rcl
mov
inc
aad
or
scas
push
ja
mov
push
loop
xchg
lods
icebp
gs
lcall
test
mov
popf
sahf
jmp
push
jo
fwait
mov
jecxz
pop
pop
mov
cmc
cmpsb
imul
iret
push
and
xchg
imul
inc
sti
cmp
or
mov
jne
push
or
iret
stos
mov
in
xor
mov
sub
out
leave
sub
pop
sub
pop
sub
out
cwtl
mov
push
mov
mov
cmp
cmp
mov
push
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
lods
jecxz
sahf
mov
mov
mov
mov
jl
push
xchg
jmp
test
push
sbb
pop
into
pop
fisttpl
sbb
mov
fimuls
aas
mov
cmp
xlat
insl
aaa
loop
jge
out
adc
mov
aam
fwait
dec
mov
outsb
and
jno
mov
jle
jmp
enter
dec
add
xor
adc
in
sub
xlat
jnp
enter
gs
push
sarb
in
jp
insl
inc
dec
sub
je
inc
cld
shlb
gs
push
icebp
pusha
mov
xchg
push
std
rcl
lcall
sub
mov
mov
test
push
cs
cs
or
icebp
jnp
mov
pop
cmp
addr16
cli
xor
inc
dec
popa
cld
xchg
mov
mov
add
add
fcoml
lods
mov
cli
mov
sbb
push
arpl
and
enter
push
es
in
pop
pop
enter
mov
dec
roll
xor
aas
xor
stos
dec
add
arpl
and
mov
test
mov
scas
inc
pop
adc
scas
sar
stc
aas
mov
shl
dec
mov
movsb
inc
jnp
iret
loope
mov
popa
mov
xchg
jge
test
sub
and
std
sub
jg
cmp
cmp
jns
pop
sub
sub
mov
std
sahf
outsb
xor
lods
fiadds
sub
add
iret
or
icebp
push
pop
das
inc
and
push
push
js
stos
jp
ds
daa
mov
arpl
jo
xchg
jbe
clc
data16
sub
mov
scas
pop
dec
mull
sbb
xor
mov
sub
inc
jg
rcrl
dec
push
jl
xor
pop
xchg
adc
stc
push
test
or
push
mov
test
mov
insl
stos
mov
jmp
iret
leave
mov
test
ds
sarl
push
jb
push
cmp
cmp
loop
in
out
and
or
cmp
mov
into
std
fisttpl
fs
mov
fildll
je
outsl
lcall
pop
pop
push
shl
mov
jle
and
pusha
aad
add
adc
jne
loop
pusha
jle
push
neg
push
pop
and
push
pop
ljmp
mov
sub
pmaxsw
jbe
cmc
mov
xchg
add
cltd
sbb
leave
cmpsl
mov
pop
loop
add
cmp
vpopcntb
mov
jae
pop
jle
rcll
lea
jecxz
cmp
pop
dec
pop
test
dec
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
adc
mov
addr16
push
outsl
cmpsl
in
xor
scas
repnz
jb
fwait
pushf
ret
push
out
pushf
icebp
dec
popf
xchg
mov
loope
aad
call
mov
leave
lods
cwtl
and
xor
inc
sbb
cmp
lret
loope
sbb
fdivl
std
repnz
fidivs
inc
adc
and
inc
popa
or
or
inc
xchg
jmp
add
push
jmp
add
sbb
xchg
ficoml
pop
aas
push
pop
pop
inc
jge
ret
rcrb
leave
icebp
filds
inc
sbb
cmp
sbb
pop
adc
imul
sub
adc
dec
mov
lods
je
in
call
inc
pusha
sti
and
loope
mov
shrb
cmp
ljmp
movsl
lods
and
push
xor
xchg
in
sub
cs
jo
inc
xchg
mov
mul
jl
in
repnz
xor
xchg
lcall
add
mov
ja
insb
adc
mov
rcll
jmp
lods
add
daa
cli
stos
shlb
sub
pop
repnz
rolb
pop
imul
jecxz
aam
push
imul
dec
mov
sbb
jle
test
push
jle
test
jb
jns
and
loopne
fwait
mov
xorb
mov
mov
ds
addb
ja
mov
mov
dec
push
mov
stos
xor
enter
stc
adc
or
hlt
rorl
mov
popf
lret
das
pop
adc
gs
and
mov
jecxz
mov
inc
sub
fisubrl
xchg
aas
mov
jmp
xlat
fsubs
ret
adc
inc
sbbl
sub
sti
cmp
aaa
adc
roll
shll
repz
rcrb
arpl
sub
or
sbb
dec
fucomp
lods
mov
lds
lret
mov
mov
or
aam
int3
mov
or
nop
mov
push
scas
sub
mov
jmp
lods
lret
pushf
mov
and
adc
jns
dec
aam
rcr
or
pop
stos
sbb
xor
mov
xchg
pop
mov
jp
jge
sarl
pusha
dec
imul
xchg
add
cmp
jb
jmp
xchg
mov
sub
icebp
dec
cmp
loope
imull
inc
cli
inc
sbb
mov
lea
sti
stos
fsubl
jg
mov
add
xor
cmpsl
cmp
pop
outsl
int3
icebp
scas
mov
popf
and
inc
mov
outsb
and
out
outsb
pop
sbb
adc
sar
jge
xchg
cmp
jmp
call
mov
mov
sub
fisttpll
mov
mov
mov
mov
add
mov
inc
cmc
cmpsb
jbe
xchg
shll
adc
divb
add
int3
cli
mov
loop
push
add
loop
add
aas
sbb
ljmp
aas
jnp
out
ret
sub
inc
sub
into
adcl
movsb
mov
mov
dec
popa
lea
push
aad
sbb
call
xor
hlt
pop
xorl
iret
xchg
jae
mov
rorb
adc
ja
rcr
or
mov
rolb
aas
and
jmp
and
movsl
inc
ljmp
inc
fwait
xchg
xchg
fs
jns
adc
cmpl
mov
out
sbb
sub
push
jle
scas
sahf
imul
mov
scas
dec
stc
cs
push
pop
test
leave
mov
jns
insb
sub
sub
mov
aaa
pop
pop
andl
fistpl
jno
xlat
mov
dec
gs
pop
pop
xchg
mov
cmc
nop
dec
rorl
push
hlt
fildl
pop
popa
dec
ret
mov
out
pusha
fsubrs
lods
scas
andl
and
sar
lret
mov
sbb
pop
mov
pop
nop
xlat
aaa
push
inc
stos
inc
stos
cwtl
adc
call
dec
daa
add
mov
adc
add
adc
stc
nop
out
jb
jno
pop
nop
das
aam
fstps
pop
jns
arpl
add
dec
insb
pop
aam
pop
and
or
daa
sub
mov
and
jle
inc
dec
cmp
loopne
push
test
pop
cmp
cwtl
stc
mov
and
ret
lea
cmp
mov
jae
scas
cmpsl
sbb
dec
mov
cmp
int3
add
enter
nop
out
mov
test
lret
stc
pop
push
or
sub
sub
and
sub
push
mov
or
mov
pushf
loop
jno
push
sub
cmpsb
rcrl
jb
andl
lock
pop
fimull
adc
cs
rorl
cmp
pop
icebp
insl
or
pop
cli
inc
jns
xlat
dec
xor
mov
loop
outsl
xchg
cld
and
pop
leave
xor
in
xchg
xchg
insl
push
jb
pop
dec
pop
cltd
es
jns
sub
int
sbb
inc
xchg
jl
xchg
aaa
out
incb
mov
push
sbb
popa
lock
sti
cmp
sti
cwtl
and
enter
add
int
lods
aad
data16
dec
add
cwtl
inc
mov
mov
push
jb
imul
in
test
iret
dec
or
orb
inc
notb
imul
mov
mov
sbb
pop
movsl
lcall
sub
movsb
fimuls
pop
je
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
shr
ror
mov
mov
int
ret
leave
xchg
rcrl
xor
out
loop
imul
hlt
das
sbb
fsubrs
ljmp
and
adc
sub
jge
lods
int3
aam
pop
fstpt
mov
add
jmp
test
lods
fwait
mov
popa
test
cmpsl
sub
xchg
and
jnp
test
rcrb
xchg
inc
in
inc
add
jle
mov
rdtsc
cmpsl
in
outsb
pop
dec
push
adc
pop
aad
cmpsb
jno
mulb
pop
lods
push
mov
in
cltd
sbb
leave
add
jb
xor
jbe
pop
mov
mov
test
cmp
jmp
nop
xor
cmp
cmc
sbb
jle
push
mov
and
push
jae
mov
dec
pushf
or
sbb
jp
ds
jmp
orb
or
sbbl
jne
sti
jmp
and
cwtl
mov
pushf
fcomi
cmc
or
lcall
cmp
adc
adc
pop
jae
aam
in
sbb
cmpsb
dec
js
jns
dec
ds
orb
jbe
xchg
or
mov
jge
adc
ret
insb
push
cmp
fimull
je
pusha
jno
inc
mov
add
adc
add
call
cltd
in
mov
insl
popa
mov
cmp
dec
dec
cmp
push
insb
pop
lcall
or
push
adc
cmp
repnz
inc
push
shrl
faddl
adc
mov
fwait
xlat
xchg
out
pop
fnstenv
jnp
stc
dec
dec
adc
shll
rcrb
lock
das
imul
fdiv
lods
push
repz
cmp
sub
jge
out
cmp
push
lahf
mov
add
xor
adcb
rol
int3
inc
cmp
and
push
lret
clc
cli
aam
rorb
adc
lds
xchg
push
jns
or
dec
xor
push
lahf
loopne
int3
push
pop
fstps
mov
stc
es
mov
ret
hlt
and
xor
push
das
gs
daa
push
inc
fcomps
lcall
lea
stc
xchg
jno
sbb
mov
call
fistps
outsb
iret
test
mov
mov
enter
xchg
pop
push
lcall
jns
idivl
mov
scas
popa
jmp
add
xchg
je
aaa
cwtl
in
inc
cld
stos
test
js
push
clc
mov
jno
lods
push
outsb
stos
stos
fwait
mov
add
pop
adc
or
daa
add
fimull
test
dec
dec
js
negl
jecxz
lret
jae
lret
es
out
into
ja
inc
pushf
rorl
inc
jmp
mov
pop
aas
add
cmp
mov
insl
loope
xchg
xor
sbb
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fisttpll
mov
mov
mov
xchg
in
and
dec
sub
push
popf
jge
loop
pop
inc
das
scas
aaa
pop
stos
inc
mov
add
cmpsb
and
sti
repnz
xor
sub
rcrl
push
jl
cmp
mov
sbb
jo
jbe
imul
fcoms
xchg
testb
in
jp
jo
ficoml
loopne
aad
jle
jne
add
test
rorl
fwait
add
roll
push
push
adc
mov
push
xor
lds
lret
dec
imul
mov
xor
mov
pop
xchg
push
fisttps
mov
adc
mov
add
ja
lea
arpl
bnd
loop
dec
mov
mov
test
inc
mov
adc
pop
push
xchg
inc
push
aas
add
and
add
ret
ds
daa
dec
add
inc
sub
jae
mov
push
jae
cmp
repnz
data16
jge
inc
jne
cmc
ficomps
insb
or
push
roll
xor
lahf
add
negl
inc
out
adc
mov
lret
ret
movsl
cmp
jo
aam
cmp
adc
adc
lahf
pop
sbb
and
gs
push
xor
out
pop
sbb
sbb
negl
lret
mov
sbb
loopne
data16
xchg
hlt
jl
fsubs
mov
ja
sahf
jl
je
xor
dec
aaa
lods
xor
or
and
nopl
push
mov
push
dec
cltd
xor
mov
inc
push
rol
mov
inc
mov
data16
and
push
xor
dec
fwait
pushf
ficomps
das
std
pop
movsb
js
inc
dec
xchg
push
inc
dec
out
or
fst
push
push
and
inc
mov
inc
jmp
push
icebp
lock
lret
dec
cwtl
jle
loopne
xchg
xlat
ret
pushf
jbe
loopne
lahf
roll
mov
cs
adc
pop
test
lods
push
fisttps
js
pop
cmpsb
orb
int
add
cmp
jbe
and
or
sti
mov
bound
sbb
adc
mov
and
out
inc
enter
or
pop
subl
stos
push
jbe
jecxz
sbbl
inc
dec
push
push
inc
add
mov
clc
mov
fdivl
sub
cs
mov
adc
ja
adc
mov
je
cmp
and
test
out
mov
xchg
adc
mov
mov
inc
stos
jne
insl
insl
lods
inc
push
enter
cli
xchg
xchg
pop
sbb
fsubrp
push
aas
pop
dec
imul
test
xchg
jb
addr16
aad
mov
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
fstpl
mov
mov
jo
loopne
mov
test
mov
mov
add
sbb
in
and
xchg
xchg
mov
cld
insl
test
cmp
fidivl
and
stos
icebp
cltd
jge
sbb
fwait
outsb
stos
pusha
jns
insl
mov
es
xchg
leave
scas
mov
jecxz
mov
out
sbb
xlat
dec
mov
xor
inc
in
andb
push
jno
and
mov
rcrb
jae
cmp
shlb
xchg
and
sbb
adc
out
inc
pushf
xchg
jle
mov
adc
repnz
xchg
pushf
push
lods
das
ljmp
pushf
cwtl
or
nop
repnz
imul
std
sbb
adc
aas
push
in
sahf
fwait
xor
iret
cmpsb
push
mov
mov
icebp
dec
jmp
inc
cmp
cmc
leave
repnz
push
xchg
mov
fwait
pop
cmp
in
movsl
cmp
and
je
xchg
inc
push
fwait
cmp
pusha
mov
out
pop
fdivrs
adc
je
in
sub
pop
adc
sbb
in
out
insb
imul
mov
push
mov
bound
pop
sub
dec
je
rolb
pop
pop
and
and
clc
xchg
lods
pushf
push
data16
xchg
cmp
fimuls
push
sbb
subl
mov
mov
mov
pop
imul
aam
cmp
hlt
iret
adc
jb
and
mov
inc
sub
jne
and
pop
dec
sbb
inc
cmp
mov
xchg
mov
leave
pop
pop
pop
movd
aad
fdivrl
loop
mov
mov
stos
jp
mov
mov
jmp
adc
pop
push
rcrl
inc
push
dec
test
iret
cmp
in
cmc
cmp
pop
fsts
mov
xor
or
xor
mov
xor
in
inc
jb
clc
pushf
inc
into
outsb
shlb
cmc
pop
enter
loopne
insb
inc
and
adc
jns
cmp
lea
in
pop
dec
jb
xchg
cli
jae
scas
mov
push
lret
loope
in
mov
fadds
cmp
aaa
stos
out
pop
in
fmuls
cmpsb
xchg
push
icebp
divb
pop
dec
push
sahf
mov
or
dec
icebp
clc
xor
mov
ficomps
mov
out
mov
sub
jns
mov
mov
xor
subl
and
lock
xchg
jns
fwait
lds
cmpsb
cmp
push
push
jne
and
in
lods
sbb
dec
mov
xor
jg
pop
cmp
and
lahf
mov
jno
sbb
lret
adc
jmp
mov
popa
not
inc
mov
jl
jp,pn
inc
ja
mov
xor
sub
std
enter
xchg
cmp
mov
sbb
jmp
and
repz
and
fiadds
or
xchg
cwtl
pop
inc
inc
jecxz
mov
imul
add
push
fidivl
adc
repnz
add
cltd
das
movsl
pop
sbb
inc
in
mov
jns
add
and
push
lahf
gs
xchg
xorb
movsb
push
and
mov
add
push
gs
xor
xchg
dec
inc
mov
or
mov
jbe
repnz
std
aaa
stc
in
xor
fistpll
dec
sub
divl
int3
and
jbe
xchg
sub
xchg
xor
es
repnz
pop
mov
loop
xorl
rcll
dec
stc
fistpl
push
and
lock
sbb
repz
into
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
movsb
insb
sarb
mov
xchg
add
dec
aas
test
bound
xchg
addr16
imul
je
scas
mov
mov
gs
mulb
sar
adc
mov
dec
mov
call
lcall
adc
inc
orb
dec
cmpsl
outsl
imul
inc
xchg
xchg
je
adc
scas
pop
lahf
orl
and
mov
popf
cli
mov
call
push
pop
mov
add
cmp
adcl
rolb
mov
or
push
push
xchg
inc
gs
dec
test
inc
jns
sbb
hlt
inc
sub
test
sti
fistl
imul
add
push
push
outsb
shrl
dec
adc
mov
loopne
sbb
inc
lods
mov
out
test
aaa
loop,pt
jnp
mov
hlt
adc
repnz
cmpsl
pop
stc
loop
or
lods
inc
xor
dec
mov
push
xorb
mov
lds
iret
sbb
xchg
push
lahf
and
cmp
aad
or
std
sbb
lahf
and
xor
ja
add
cmp
jo
cmpsb
into
leave
repz
js
cmp
and
push
mov
mov
jmp
loopne
out
sbb
pop
jno
mov
std
data16
movsl
sahf
or
push
push
call
int
fdivrs
add
push
xor
pop
inc
cmpsb
pop
sub
stos
and
and
mov
jmp
inc
mov
jnp
lods
adc
xor
ret
push
pop
sbb
ds
lds
scas
pop
insl
inc
xlat
adc
add
shll
dec
pop
jae
dec
adc
adc
les
mov
rcll
imul
jmp
sti
or
xor
sbb
addl
loop
dec
out
cli
aaa
cmp
mov
ja
jno
call
jbe
lret
xor
sub
mov
fstpt
xor
repnz
mov
in
jno
dec
adc
ja
push
dec
push
fcoms
dec
test
pushf
cmpsl
lret
jmp
cwtl
hlt
movsb
mov
scas
xchg
cmp
adc
icebp
cmp
sbb
xchg
dec
dec
xor
aaa
mov
dec
insl
or
fucomi
mov
mov
je
sub
pop
aam
leave
adc
sub
mov
bound
push
je
mov
ds
inc
lret
pusha
test
popl
push
xchg
test
arpl
or
enter
fildll
test
add
loop
xchg
dec
inc
sbb
push
leave
and
jle
das
add
xchg
repnz
dec
mov
lcall
push
sbb
test
rorl
adc
mov
sub
pop
xchg
pop
je
adc
cwtl
sarb
and
mov
jge
dec
cmp
dec
loopne,pt
out
frstor
leave
repnz
and
aad
pop
adc
jle
xchg
and
ret
mov
pusha
inc
adc
jmp
mov
outsl
repnz
repz
iret
jg
cmpsb
sub
mov
insl
in
in
jp
push
push
jge
and
xchg
dec
stc
mov
jns
cmp
push
test
nop
add
clc
fstp
push
mov
mov
ja
dec
dec
sbb
cmp
ja
cld
fstps
xlat
cmc
mov
enter
sbb
mov
xlat
sbb
inc
out
insb
call
pop
inc
add
cmp
shl
daa
pushf
outsl
mov
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
jge
lods
jecxz
int3
sarb
jns
xchg
add
pop
pop
pop
inc
pop
dec
fsubp
mov
aad
cmp
mov
xchg
mov
frstor
lcall
orl
sbb
arpl
pop
subl
xor
mov
adc
shrl
xor
jge
jle
inc
out
test
jbe
imull
pushl
adc
push
rcr
mov
jnp
pop
fisubrs
jo
mov
lahf
cmpsl
sahf
sbb
les
mov
rclb
popf
cs
stc
aad
jp
or
fldt
push
out
test
inc
sti
cwtl
loopne
xor
lods
xchg
and
jnp
adc
rcrl
jns
testl
fcmovu
dec
mov
jbe
lods
int3
jno
xchg
es
jecxz
mov
incl
int3
push
lock
xlat
xor
and
add
push
fwait
popl
xor
repz
xchg
xchg
xchg
xorl
shrb
sarb
fstps
push
mov
daa
insb
int3
incl
push
push
lahf
add
stc
xchg
cli
jne
stc
or
mov
sahf
aaa
inc
std
cmp
int
gs
xchg
jmp
fldt
scas
xchg
sbbb
lcall
xor
and
pop
dec
and
idiv
lods
xor
adc
fimull
or
pusha
xchg
fisubl
js
push
loop
xchg
fiaddl
pop
sub
cmp
clc
dec
inc
stos
add
repnz
ret
and
dec
iret
push
xor
dec
sub
pusha
inc
je
mov
pop
mov
mul
jo
fdivl
shlb
push
add
xchg
and
cld
dec
adc
push
push
jne
push
aas
inc
int
inc
push
cltd
cmp
jge
adc
in
add
sti
aaa
ret
lock
imul
hlt
push
hlt
push
pop
inc
pop
pop
push
dec
adc
int
mov
jae
mov
ret
or
sbb
mov
mov
test
push
lret
ffreep
lds
test
ret
pop
xor
pop
fisubrs
pushf
test
push
sbb
in
and
push
mov
testl
in
and
xor
mov
sbb
shlb
fwait
pop
pop
inc
push
sbb
xlat
xchg
int3
std
cwtl
nop
shll
mov
mov
mov
cmp
ss
jle
pop
lcall
cmp
scas
pop
outsb
dec
and
xchg
sub
je
test
aam
xlat
push
movl
js
pop
jo
scas
in
or
lahf
xchg
iret
or
adc
dec
jo
adc
fisttpl
fsubrs
rol
mov
dec
insl
jae
or
mov
pop
add
dec
gs
out
or
push
cmp
loope
pop
sbb
xor
imul
sahf
pusha
gs
decb
ret
in
test
fisubrl
xchg
push
std
and
mov
imul
rcll
mov
sahf
sbb
rcrb
gs
sbb
movb
jb
jns
xchg
pop
lods
mov
mov
sub
lods
push
fbstp
mov
mov
xor
pop
lock
test
jl
insb
inc
push
call
push
mov
sti
sbb
push
adc
je
fisttpll
xchg
aas
stc
in
add
jge
cli
enter
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
or
iret
or
sarb
jg
ret
ret
arpl
insb
jle
imul
in
xor
loop
jecxz,pn
pushf
cmpsl
clc
aad
cli
xchg
inc
dec
pop
in
cmp
dec
xor
nop
push
or
pushf
nop
mov
arpl
insb
add
repz
mov
mov
pop
mov
xchg
repz
xor
inc
dec
repnz
push
lcall
ret
push
sub
lock
outsl
cmp
imul
push
out
xchg
dec
mov
cmp
out
xchg
xor
adc
add
mov
out
mov
pop
dec
mov
clc
insb
add
jge
dec
jns
pop
arpl
jg
cli
sub
aaa
jnp
pop
mov
ficoml
pop
adc
lahf
sub
xchg
xchg
jb
inc
scas
xor
cmpb
ret
pushf
addl
je
fidivl
ret
loopne
inc
pop
dec
int3
sub
mov
inc
sbb
hlt
jg
jge
add
gs
mov
xchg
out
ret
iret
sti
bound
in
dec
insb
repnz
mov
fwait
mov
mov
mov
es
pop
aam
inc
sti
cmpsl
subb
add
fiaddl
ss
sahf
jo
add
sbb
lods
adc
push
aam
movsb
scas
mov
pop
push
lcall
push
mov
lods
sbb
insb
pop
or
test
into
lods
repz
mov
mov
adc
xchg
push
add
xchg
ror
enter
cwtl
loope
pop
outsl
ja
in
or
cmp
or
mov
imulb
in
movsl
stc
fs
fidivrs
mov
dec
fcom
icebp
out
inc
and
inc
mov
pop
add
adc
cmpsb
dec
lcall
xchg
xchg
cmp
mov
sbb
aaa
sbb
push
test
and
jne
pop
hlt
lahf
jns
add
cmp
inc
repnz
movl
jno
aas
loope
int
rcll
xor
scas
fmuls
adc
mov
movl
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
push
sahf
test
sarb
push
dec
mov
stc
jl
dec
subb
push
adc
out
fistl
mov
cmp
fs
xchg
arpl
lea
push
inc
int
fidivrs
cli
scas
ret
mov
stc
mov
xorl
outsl
iret
dec
out
scas
pop
data16
or
shrl
outsb
lds
jne
popf
mov
pop
loopne
mov
and
sti
jmp
and
mov
mov
bound
sbb
push
pop
iret
cmp
out
fisubl
pop
ds
inc
js
dec
lret
out
testb
mov
fbld
test
stos
or
sub
pop
mov
aam
cli
ret
test
call
mov
aad
mov
push
mov
cwtl
sub
adc
outsl
test
inc
das
dec
not
lods
add
mov
test
test
xor
bound
jp
and
out
je
bound
les
push
mov
xor
mov
aam
and
add
gs
add
data16
mov
jo
int3
sti
mov
int3
cmc
push
jb
ljmp
test
dec
cmpsb
xor
xchg
cwtl
pop
or
pushf
test
jle
mov
fildl
sbb
aam
jae
add
cli
sub
dec
or
test
pop
xchg
jg
jno
lea
push
cmp
or
insl
pop
pop
xor
push
bound
movsb
clc
pop
subl
test
sahf
lret
dec
imul
enter
xor
in
rcll
mov
aad
dec
test
xor
inc
inc
push
push
cli
pusha
sub
aam
sub
jno
bnd
xor
inc
ljmp
sub
lcall
mov
dec
add
imul
pop
dec
sub
inc
push
pop
or
std
popa
call
rorl
inc
and
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
and
faddp
mov
mov
push
mov
fiadds
int3
test
cwtl
xorb
popa
lock
out
or
cmp
or
ljmp
jo
clc
xchg
sbb
cmpb
sub
aam
pop
test
imul
hlt
add
imul
push
mov
dec
xchg
popf
or
dec
mov
stos
jns
xor
icebp
xlat
ret
jns
fdivl
rorl
fwait
mov
jnp
rclb
fsts
subl
repnz
daa
test
loope
test
mov
sbb
jl
push
outsl
lea
push
in
insl
pop
gs
pop
mov
enter
mov
shll
xor
adc
fistpll
push
ret
or
mov
and
repz
sbb
aaa
pop
out
push
xor
test
mov
repnz
enter
mov
cmp
jmp
fs
push
sub
ret
ds
out
or
loopne
rcrb
sub
pop
aad
pop
test
jb
sub
push
ret
nop
mov
pushf
xchg
cld
insl
cltd
xor
test
js
push
mov
dec
lret
js
jl
les
fdivrs
push
orb
out
dec
mov
cmp
xchg
pop
xlat
enter
arpl
andl
dec
push
ds
mov
pushf
adc
push
mov
cmpsb
cmp
mov
jmp
popa
sahf
stc
filds
nop
fisubrs
bound
sahf
push
pop
inc
shr
test
jns
popf
sbb
mov
movsl
sti
leave
cmpsl
xlat
jnp
fbld
loop
mov
ret
inc
test
push
cmpl
mov
push
xchg
xor
mov
cwtl
adc
jmp
push
sub
cmp
insb
lret
ljmp
rolb
mov
adc
sahf
sbb
lods
and
xchg
bound
cltd
inc
int3
push
fmuls
notb
mov
adcl
jmp
and
fstl
jb
sahf
nop
hlt
inc
or
xor
xlat
jecxz
dec
ljmp
mov
jle
push
pushf
xchg
or
sbb
and
call
leave
scas
xor
lret
inc
push
mov
mov
jne
js
lahf
stos
inc
inc
fnstsw
fdiv
outsb
lods
cmpsb
data16
add
lahf
aas
out
pop
mov
in
scas
push
das
xchg
cmp
xor
xor
in
pop
mov
aad
repz
jbe
xchg
pop
insb
sbb
shl
xor
adc
sti
test
cmp
pop
ret
fistl
incl
inc
daa
popa
pop
scas
js
xchg
int
imul
cmp
inc
ja
out
notb
add
and
xor
pop
fimuls
mov
lods
mov
mov
stos
adc
or
jl
movzbl
sbb
imul
cmc
leave
xor
adc
insl
stos
adc
lea
pop
fwait
push
pop
mov
out
fildl
nop
aad
fcoms
cmp
in
push
cmp
stc
rol
cmp
in
jmp
add
repz
inc
js
and
dec
subb
fwait
xlat
sub
mov
push
pusha
sub
mov
repnz
insb
add
scas
lea
or
pop
xchg
jb
int
imul
mov
mov
imul
mov
leave
sub
xchg
cmpb
cltd
mov
pop
arpl
bound
pushf
pop
xor
js
sahf
inc
cmpsb
test
jmp
aad
stos
xor
xchg
fucomip
adc
aas
sti
mov
pop
imul
sbb
je
mov
adc
je
inc
call
dec
xchg
pop
push
addb
or
jl
or
adc
inc
add
std
data16
sub
sub
add
inc
jecxz
mov
pop
bound
lret
mov
imul
out
enter
adc
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
push
mov
mov
addr16
mov
xchg
das
in
ret
adc
mov
mov
rcrb
int3
out
adc
xchg
dec
jle
jl
dec
adc
fldt
outsb
jl
cwtl
add
add
pusha
shll
out
adc
pusha
pop
bound
orl
imul
test
jecxz
loopne
pop
shr
push
ds
adc
or
inc
push
pushf
out
mov
xor
lock
rolb
jg
push
cmpsl
push
xchg
or
fstps
push
push
mov
fxtract
cmp
cli
lea
inc
cmp
shll
aam
stos
push
mull
and
mov
mov
jo
out
js
daa
mov
shll
imul
dec
gs
insb
push
pop
push
rclb
or
xchg
xchg
pop
sub
inc
cwtl
es
xlat
push
cmp
rclb
stos
push
fnstsw
movsl
push
lods
push
test
sub
mov
xor
outsb
ficomps
movsl
loope
mov
adc
mov
xlat
scas
pop
mov
mov
les
mov
push
or
xchg
push
xchg
inc
or
push
jecxz
xorb
stos
mov
sbb
loop
push
cmp
xlat
mov
and
xchg
fists
cmp
outsb
clc
jne
dec
sbb
xchg
popf
push
cld
ljmp
pusha
and
inc
mov
and
sub
in
xchg
fadd
or
les
inc
xchg
imul
push
lea
or
addl
cld
in
dec
clc
pop
cli
lret
fiadds
mov
push
adc
sar
lock
cwtl
popa
pop
insb
stos
inc
dec
lods
loopne
test
sahf
xchg
fs
stos
or
jnp
adc
out
mov
mov
dec
cmpsb
sar
daa
jl
or
pop
daa
lret
lret
jecxz
in
out
xorl
push
inc
aad
xchg
js
icebp
and
mov
test
mov
sub
jbe
pop
cmovp
dec
dec
faddl
scas
sahf
mov
jno
inc
push
fmull
add
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
inc
inc
jl
fs
xor
scas
fidivl
mov
cmp
mov
cmpsl
lahf
and
insl
inc
clc
rol
push
adc
cli
out
and
loope
add
loop
in
cmp
rcl
outsb
repnz
push
aaa
int
cmpsl
js
mov
push
push
jns
scas
xor
cmp
jbe,pn
jnp
push
scas
ss
push
cmpsb
repnz
inc
sub
inc
fildll
jae
sub
fisubl
and
xchg
sub
stos
push
ret
cld
push
sbb
dec
lret
adc
dec
add
es
das
fists
lahf
cs
push
push
push
insl
in
lret
jl
out
jnp
inc
or
dec
scas
fiaddl
dec
je
mov
mov
bound
mov
sbb
into
icebp
xor
icebp
adc
lahf
cmpsl
sbb
cld
aas
inc
jbe
cmp
mov
je
outsb
clc
mov
hlt
add
adcb
fsubl
and
in
pushf
in
ss
insb
or
inc
mov
lea
sbb
pusha
mov
ss
xchg
loopne
imul
mov
mov
mov
aaa
jle
jo
sub
aaa
es
mov
or
rorl
add
loop
movsb
fistpll
jne
adc
or
imul
ftst
mov
cmp
xor
adc
mov
popa
mov
stos
outsb
dec
stos
enter
js
mov
clc
lods
mov
jge
ror
icebp
scas
jnp
cld
adc
les
es
js
pushf
adc
test
or
stos
popf
dec
ss
idiv
adc
les
movsb
mov
dec
in
mov
and
pop
pop
mov
sub
enter
mov
es
push
cmp
lods
jnp
pop
xchg
int
popf
and
loop
xchg
loopne
stos
cmp
xchg
adc
push
adc
jnp
lret
in
cs
shll
or
enter
lock
int
outsb
push
out
push
mov
scas
mov
sub
cmp
xor
rolb
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
nop
fsubr
sarb
dec
dec
les
xchg
xor
sbb
daa
cmp
pop
add
mov
pop
mov
mov
shlb
xchg
sbb
stos
ret
pushf
scas
mov
stos
outsb
sbb
xor
mov
arpl
add
cmp
stc
imul
jns
jne
fnstenv
es
dec
adc
mov
fs
ret
push
xchg
push
aaa
dec
mov
ret
adcb
fs
into
loope
jl
lock
push
cld
ljmp
movb
pop
or
sti
pop
out
dec
int
push
test
fildl
mov
lret
xorb
loope
mov
rcrl
jp
xchg
fiaddl
loop
add
inc
jmp
dec
mov
jbe
insb
dec
rorb
jl
loope
xlat
push
jb
in
out
outsl
or
movsl
test
mov
adc
mov
in
pop
shlb
imul
lret
jmp
mov
jle
pop
and
mov
mov
sub
xor
or
pop
repz
push
jnp
and
xchg
mov
std
jb
out
mov
sbb
fcmovnb
mov
out
fstp
mov
adc
cmp
cwtl
insl
push
iret
shr
insl
jmp
lcall
dec
pop
xor
pop
nop
in
add
xchg
xchg
stos
out
cwtl
jo
or
mov
outsb
loope
stos
test
daa
xor
lock
fcmovu
lea
popa
cmc
ss
jno
jnp
sub
imul
mov
fndisi(8087
inc
inc
jns
test
push
mov
jge
bnd
out
jl
iret
mov
jge
push
lret
fwait
jbe
jecxz
push
imul
add
xor
push
ja
mov
dec
fbld
and
push
mov
das
push
je
rcll
rol
hlt
loopne
aad
push
stos
mov
jl
cmp
ss
addr16
inc
adcb
imul
pop
mov
addr16
or
dec
xor
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
iret
push
repz
pop
mov
and
shrb
push
mov
dec
cmp
or
imul
and
outsl
fs
xchg
cwtl
je
popf
pop
es
data16
clc
ret
imul
js
push
filds
pop
data16
add
jnp
sub
int3
lret
and
js
repz
cli
lods
pop
mov
notl
sbb
pop
shrb
icebp
mov
fists
add
cmova
xchg
dec
lods
cmp
in
std
mov
cmp
jo
mov
mov
inc
popa
data16
and
mov
adc
test
es
push
ret
jbe
psubusb
mov
mov
outsl
out
mov
jne
int
pop
stos
leave
cmp
daa
cli
mov
cmp
aaa
dec
mov
jno
cs
iret
cmpsl
std
sti
aaa
add
cmp
pushf
cmp
lahf
jns
mov
mov
xchg
push
aam
jge
xchg
dec
mov
inc
mov
cmc
add
les
sub
fiadds
cwtl
jbe
ds
mov
std
adc
imul
jge
movsl
loopne
andb
push
push
testb
cli
daa
icebp
call
mov
lea
call
and
xorl
int3
dec
rcrl
fildll
adc
xor
jecxz
sbb
in
xlat
pushf
jbe
movsl
pop
leave
aad
xchg
ret
mov
adc
mov
xor
mov
outsb
aam
out
sbb
dec
aaa
pop
test
fwait
adc
sbb
cmpsb
cmpsl
and
movsb
mov
and
pusha
in
mov
mov
xor
xchg
jg
je
xchg
jne
mov
call
out
sub
mov
pandn
notl
lea
cli
fidivl
jl
inc
push
push
mov
inc
dec
cmp
xchg
ret
cs
mov
nop
push
pop
jg
and
push
ljmp
sbb
adc
jge
inc
and
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
dec
cmp
sarb
testb
jae
ja
mov
fadds
jnp
std
cmp
add
js
push
and
mov
mov
pop
test
dec
iret
pop
mov
mov
scas
test
in
adcb
push
or
ds
in
outsb
es
pusha
push
cli
inc
or
ret
inc
out
jns
or
ss
or
and
xor
pop
lahf
les
sbb
inc
pop
icebp
inc
stc
scas
mov
inc
nop
jg
xor
or
stos
sub
in
daa
mov
mov
arpl
cmp
ror
iret
daa
mov
fdivl
out
xchg
cmp
mov
je
das
push
mov
and
dec
inc
adc
iret
lahf
shrl
push
xor
scas
pusha
dec
call
std
jp
pushf
and
call
loope
sub
cmp
jmp
movb
push
pusha
and
sub
and
out
repnz
cld
and
mov
sbb
stos
rorl
out
add
leave
pushf
and
andb
lahf
repnz
cmp
idiv
inc
cmp
das
cmp
add
xor
add
xor
into
pop
shrl
icebp
add
ljmp
lods
xor
arpl
lods
lds
cmc
dec
push
aas
add
inc
add
iret
sbb
jecxz
jle
xrelease
fdivrs
cmp
mov
aas
das
inc
dec
test
push
mov
mov
int3
movsb
jns
xor
push
add
sub
mov
push
mov
cmc
xchg
and
loop
sbb
sub
outsl
jle
mov
xchg
inc
mov
and
fcompl
xchg
jge
mov
pop
lcall
fildl
test
icebp
lds
int
pop
mov
hlt
xor
push
sbb
sbbl
repz
sub
enter
fistpl
popa
add
xchg
sbb
add
rorb
pop
addr16
xor
adc
dec
cmpsb
arpl
nop
push
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
iret
inc
sti
sarb
nop
iret
shr
daa
push
mov
sub
mov
repnz
mov
xchg
adc
add
in
popf
jp
popf
lcall
aaa
repnz
adcl
test
mov
movsl
jp
lock
sbb
mov
int
cltd
sarl
test
arpl
push
shrl
aas
pop
cmc
mov
cwtl
imull
pop
int3
pop
push
cmc
xlat
faddl
add
inc
int3
ret
lds
nop
xchg
xchg
enter
sbb
aaa
or
mov
jle
sub
jmp
inc
mov
inc
cmc
xchg
mov
lds
ljmp
out
add
sahf
push
mov
inc
sbb
repz
icebp
pop
jmp
orl
adc
stos
inc
cmp
xchg
mov
mov
mov
xor
pop
dec
sahf
and
cmc
jmp
jmp
fs
push
dec
push
and
sub
insb
inc
loope
adc
or
pushf
out
icebp
push
push
jge
or
shlb
je
jns
adc
insb
adc
out
pop
in
das
das
mov
cmp
icebp
cs
ss
imul
inc
test
pinsrw
fsubrl
adc
xor
cmpsb
in
repz
sahf
push
xchg
sub
xchg
mov
sub
push
cwtl
add
jl
outsb
mov
sbb
jnp
sbb
jbe
test
sbb
lret
repnz
incl
ja
rcll
mov
fs
and
test
add
push
cmp
cwtl
mov
je
push
pushf
int3
cmp
sub
push
mov
mov
push
push
add
leave
mov
fldenv
or
dec
and
mov
test
or
es
in
imul
jp
cmc
out
je
fwait
mov
test
dec
jp
rolb
xchg
cld
repz
adc
cltd
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
int3
and
mov
push
imul
js
fisttpll
jno
or
addr16
imul
jle
ret
and
iret
sbb
je
adc
push
jne
add
popa
cltd
test
push
add
mov
cltd
imul
popf
out
push
out
fwait
xchg
xlat
nop
in
test
repnz
pop
aam
mov
fbstp
ljmp
hlt
sbb
push
test
inc
adc
xchg
icebp
int3
cwtl
stc
std
fs
push
out
pop
jbe
add
loopne
jp
cmp
adc
add
mov
in
xlat
cmc
mov
push
cmpsb
imul
fcoms
pop
cmp
js
add
dec
mov
mov
pop
inc
xchg
or
cli
sbb
mov
shlb
fnsave
sub
bound
cmp
or
imul
pop
push
mov
mov
sbb
or
jae
jmp
xchg
fstl
dec
mov
mov
ja
cli
push
and
mov
adcl
jmp
ss
test
mov
arpl
loopne
js
sbb
jge
adc
scas
in
aam
scas
fistps
adc
int3
push
lahf
sbb
fldl
or
dec
mov
mov
pop
mov
push
jp
outsl
sub
pop
lods
fsubl
filds
icebp
popf
insl
or
pop
jmp
pop
pop
aas
scas
fs
lret
test
ds
or
xchg
pop
imull
insb
shrl
sub
xor
ss
movsb
mov
pop
inc
add
enter
ljmp
in
sub
pop
out
addr16
movsb
imulb
cmp
inc
lods
jne
fadds
movsb
clc
xor
xchg
mov
out
jne
cmp
popa
push
nop
xchg
dec
test
aam
icebp
scas
dec
aaa
dec
test
pop
in
mov
stos
dec
or
jno
add
sub
fs
xchg
pop
repnz
xchg
push
inc
rorl
int3
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
xchg
addr16
movsb
xor
mov
xchg
jno
push
push
repz
loopne
ja
xchg
ucomiss
xor
subb
rcll
sahf
insl
push
outsl
movsb
add
aad
or
fldl
push
movsb
pop
out
rcl
inc
into
cmpb
idiv
aas
into
lock
je
out
xchg
mov
push
cmp
stos
in
popf
inc
jno
inc
push
in
imul
cs
pop
xchg
jne
cmp
inc
mov
dec
or
sub
ds
das
mov
xchg
jo
push
or
xorb
pop
xor
iret
ret
mov
and
sub
in
jns
push
loopne
cwtl
adc
sbb
adc
mov
add
jnp
jmp
mov
mov
mov
push
lods
add
ss
shll
jno
aam
or
push
or
loope
sar
fs
push
out
notb
push
mov
mov
mov
xchg
add
aad
inc
sub
cmp
xchg
addr16
cmp
test
test
pop
or
inc
out
dec
add
inc
jg
inc
icebp
insb
xchg
dec
cwtl
aam
add
pushf
sub
mov
mov
jae
insl
xor
ja
pop
jo
sbb
or
out
movsl
xchg
imul
jmp
jmp
leave
fst
sbb
mov
js
xchg
push
add
popa
mov
imul
inc
push
dec
rorl
and
movsl
sub
das
lds
cmc
cli
stos
xor
iret
jge
push
ds
inc
add
push
and
add
cli
adc
xchg
add
mov
fmul
lds
ret
inc
xor
sbb
xchg
loop
orb
inc
sbb
and
ljmp
jae
mov
jns
aaa
xchg
adc
divb
lds
add
sbb
push
dec
out
enter
gs
add
cltd
test
mov
mov
dec
subb
cwtl
mov
jo
mov
movsb
and
add
lret
push
and
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
inc
lock
stos
or
mov
ss
insl
xchg
pop
xchg
es
sub
repz
test
mov
ds
es
mov
loope
jecxz
push
movsb
sti
push
xchg
les
les
sbb
or
adc
test
mov
dec
xchg
inc
popf
adc
dec
mov
shl
cmc
popa
jns
in
pop
daa
mov
push
orl
dec
sub
ret
sbb
pop
pop
pop
fnstsw
sbb
adc
jb
dec
lock
les
mov
mov
ljmp
or
pop
out
dec
add
addr16
int
jp
cld
xor
cmpsl
adc
xchg
out
stos
dec
out
dec
push
imul
cli
xor
loop
ret
ret
mov
inc
cs
lcall
notl
subb
ret
mov
and
inc
notl
jg
mov
loop
test
dec
mov
lock
mov
out
test
repnz
mov
arpl
xchg
xor
or
js
push
jno
stos
out
push
test
xor
push
sub
orl
clc
movsl
out
and
mov
mov
sti
cmpsb
push
sbb
or
subb
mov
movsl
push
ss
xor
sbb
dec
sbb
lcall
sbb
add
dec
ja
cmp
or
cmp
dec
pop
mov
out
adc
mov
insl
imul
js
cmp
add
xor
int
jp
mov
xlat
in
and
xor
push
ds
cmp
rcll
mov
push
cmpb
mov
mov
xchg
xor
or
xchg
push
repnz
sub
pop
ret
loopne
cmpsl
pop
sbb
xchg
mov
orl
xchg
aad
rcl
jae
sti
push
ds
mov
jle
fs
icebp
ljmp
rorb
and
into
pusha
add
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
add
and
sarb
mov
imul
mov
push
jg
xor
push
popa
jge
pop
ja
rcr
and
jne
scas
insb
addr16
mov
mov
xchg
pop
daa
out
aam
aam
cmp
mov
mov
rorb
mov
fcoml
movsb
cwtl
lea
pop
shrl
lcall
dec
sti
fucomip
pop
into
push
ss
aas
pop
lahf
push
xor
call
mov
xchg
pop
push
lods
dec
rcll
jbe
enter
in
push
mov
pop
fiadds
sub
inc
fsubrs
repz
int
outsl
add
les
ret
sub
xchg
dec
aaa
dec
push
xchg
sbb
xor
adc
decl
mov
push
xchg
pop
arpl
or
into
mov
clc
test
pushf
scas
shlb
out
dec
js
jp,pn
xchg
and
pop
xchg
xor
rcl
loop
xchg
add
pop
or
aas
rolb
ja
mov
ds
mov
xchg
dec
xor
cmpsb
jns
popa
sub
or
jg
and
insb
mov
inc
cld
adc
subb
ror
mov
or
jg
mov
pop
dec
jmp
sub
sti
add
sbb
pop
add
or
push
jno
pop
mov
add
sbb
jmp
shrl
out
test
pop
clc
stos
lds
cmpsb
test
jmp
sub
mov
push
sub
jge
test
xor
adcl
push
fiadds
dec
sahf
fnstsw
pop
lods
ds
outsb
adc
cmc
jbe
enter
cmp
xlat
cmpsl
mov
xchg
loopne
pop
data16
mov
sahf
outsl
push
and
insl
mov
cmp
insl
clc
popf
sbb
lret
jbe
xor
inc
sub
mov
xchg
mov
xchg
lods
daa
flds
sbb
adc
mov
jns
ficoml
mov
mov
pop
div
push
bound
scas
or
add
mov
ficoms
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
aaa
sbb
movsb
pushf
adc
mov
outsl
add
fisubrl
test
cmp
test
jne
mov
mov
aad
rolb
lods
push
mov
or
pop
dec
sahf
les
fwait
lds
xor
dec
sub
push
xlat
mov
insl
in
call
sub
sbb
add
mov
out
xor
jo
lret
stos
dec
pop
mov
mov
jl
mov
cmp
mov
pusha
mov
sti
adc
shl
arpl
add
and
pop
fstps
inc
int3
movb
and
std
mov
mov
mov
fs
addr16
mov
insb
pusha
sub
test
mov
xor
or
jle
leave
aad
loopne,pn
sysexit
pusha
sbb
cli
pop
insl
cli
xor
stc
addl
or
adc
shlb
xchg
adc
xchg
out
fisttpll
loop
es
inc
out
sub
mov
xchg
sahf
inc
lds
push
out
and
xchg
jae
sbb
mov
mov
loope
test
dec
adc
ljmp
pop
mov
and
out
das
orl
aaa
push
cmp
cli
aam
not
xor
jns
imul
add
imul
adc
cmp
out
xor
test
and
jae
scas
cld
inc
cmc
add
jg
cmpsb
and
xchg
pop
lock
cmpsb
cmp
adc
inc
mov
ja
mov
sub
jne
push
xchg
inc
push
loope
adc
out
cltd
inc
ljmp
fcompl
movsb
ds
cli
mov
jecxz
jle
push
rorl
and
dec
sub
push
mov
imulb
mov
dec
in
adc
lock
movb
inc
push
scas
sbb
rol
cmpsb
push
rcrl
push
and
pop
mov
sbb
rcrl
fcmovnu
clc
inc
loopne
jg
int
or
push
push
mov
test
adc
jmp
inc
imul
push
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fstl
pop
sarb
popa
movsb
fsubl
xor
ja
mov
xor
dec
lds
add
inc
insb
mov
les
andl
sar
sbb
xchg
in
in
cmp
lcall
cmp
xcrypt-ctr
cmpsl
popf
mov
push
adc
sub
loopne
mov
pusha
dec
add
imul
jno
popa
inc
and
mov
lret
nop
xor
cmp
jb
push
lock
scas
jae
fidivrl
push
adc
pop
fidivs
movsl
mov
cmp
jno
sahf
cmp
xchg
in
sub
adc
jo
inc
jb
xchg
stos
mov
inc
jne
or
pop
addb
jmp
jnp
imul
inc
out
out
pop
test
and
dec
xor
popf
mov
addps
dec
jecxz
dec
push
cld
xchg
scas
cmp
stc
adc
pop
data16
sti
movsb
test
mov
adc
xchg
pop
int3
jb
lods
imul
and
mov
mov
mov
add
xor
xchg
test
pop
fsubrl
jae
xchg
xorl
or
xor
push
push
sub
stc
in
mov
repnz
xor
test
mov
sub
loopne
mov
mov
imull
bound
es
dec
mov
out
imul
scas
in
xchg
add
inc
in
lds
ficompl
sub
jp
jle
jg
aad
xor
pop
popf
rolb
ss
out
repnz
stos
jo
popf
inc
out
inc
lret
cmc
idivl
rcrb
loope
mov
mov
aas
push
dec
enter
and
js
test
stos
cmpsb
fistpll
mov
rcll
icebp
pop
std
arpl
or
rcrb
rorl
lcall
sub
adc
cmp
outsb
cmpb
add
push
shlb
xchg
push
insb
sbb
adc
movsb
mov
in
xor
dec
fld
and
in
sub
inc
shr
adc
mov
pop
cmp
lods
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rorl
mov
mov
sub
ret
imul
leave
ds
daa
ror
ss
xchg
sbb
imul
mov
das
das
lods
inc
sahf
pusha
fists
cmp
fldt
cld
pop
cmp
out
jno
and
sub
dec
sbb
fwait
dec
add
pop
push
push
lods
cmp
out
xor
xor
sub
stc
add
loop
pop
scas
sub
lea
and
cmpsb
out
out
jno
jne
arpl
repnz
mov
push
mov
rorl
outsl
into
dec
ret
sti
cmp
lret
cs
rcl
das
add
pusha
xor
pusha
mov
push
insb
sahf
inc
xor
xchg
in
addb
or
xchg
mov
js
mov
das
jae
mov
and
lock
push
mov
mov
cmc
mov
lods
jns
and
leave
mov
neg
adc
call
pop
push
nop
lods
or
mov
pop
in
iret
pop
jb
xchg
dec
lea
inc
ss
jp
push
xorl
fsts
int3
or
jge
jnp
ret
xor
mov
insl
lret
push
inc
mov
xor
dec
mov
push
and
cmp
sbb
test
daa
jno
push
daa
iret
data16
repnz
mov
pop
orl
fcoms
arpl
push
sarb
sub
scas
mov
xchg
dec
or
int
mov
call
mov
jb
push
cmpsl
lahf
xchg
mov
cmpsl
jmp
add
decb
cmpsl
test
arpl
aas
fsubrs
jge
or
iret
push
sarl
mov
mov
loop
pop
jmp
push
xlat
pop
add
mov
daa
iret
sbb
stos
test
sub
lcall
jl
jo
lcall
push
mov
and
xor
sub
jno
data16
cmp
or
jecxz
loope
cmpsl
sti
aaa
sub
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
je
mov
mov
inc
sbb
add
xor
fcompl
jecxz
mov
push
xor
call
int
stos
mov
in
mov
cs
int
xor
dec
std
inc
mov
ret
jnp
out
mov
cmpsl
add
push
pop
decb
popa
xor
mov
sbbb
pop
pop
in
lds
pop
pop
add
sub
mov
in
in
lods
bound
jo
pop
mov
outsl
lds
mov
adc
add
stc
inc
nop
mov
int3
pop
je
or
popa
xor
fmul
pop
imul
or
insb
dec
push
mov
sub
test
cmp
xor
xor
dec
jp
insb
aaa
jp
int
pop
out
stos
or
add
cmp
inc
cs
gs
daa
xchg
jb
add
or
stos
andl
mov
les
js
and
sbb
and
loop
adc
ja
nop
xchg
mov
xlat
bound
sti
jnp
xor
gs
jp
xor
js
subl
aas
inc
stc
push
repz
dec
pop
jbe
add
mov
adc
aas
cmp
mov
repnz
xor
pop
or
inc
test
daa
mov
dec
pop
dec
stos
push
das
icebp
add
jl
test
and
inc
fwait
xor
sub
fmull
dec
xor
and
adc
popf
and
mov
add
shrl
ficoml
or
push
adc
aam
xor
jbe
mov
inc
push
xchg
lds
push
clc
inc
jecxz
mov
cltd
sti
lahf
negb
mov
xor
push
nop
mov
or
sbbb
out
inc
insb
push
jl
fwait
or
popf
jns
lea
out
imul
lods
sbb
add
out
outsb
push
jmp
stos
add
sbb
mov
std
mov
js
or
xor
cmpsb
insb
add
add
dec
sti
sbb
into
xchg
sbb
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
ret
sarl
mov
push
mov
mov
aam
mov
jbe
dec
sub
ret
adc
inc
add
call
xchg
imul
add
xchg
dec
pop
mov
mov
mov
add
jo
adc
stc
xchg
add
inc
cmp
mov
dec
dec
cli
mov
retw
cli
xchg
cmp
pop
loopne
sbb
inc
cltd
loop
icebp
xor
mov
jb
rcl
push
rcr
mov
testb
jno
xchg
or
das
jp
sub
push
sub
sahf
and
subl
add
test
rcll
or
push
fidivl
pop
rorl
popa
push
mov
sbb
xor
mov
imul
test
inc
push
mov
mov
cmc
imul
and
xchg
nop
adc
and
into
ds
mov
mov
icebp
adc
dec
in
push
xor
imul
adc
inc
push
ret
movsl
mov
ret
mov
lret
jb
jns
mov
jno
lods
mov
adc
shll
std
push
pushf
nop
inc
repnz
outsb
aaa
fiaddl
imul
bound
dec
in
bound
xor
cwtl
arpl
dec
cmc
repz
out
out
xchg
pop
cwtl
addr16
sbb
and
repz
or
pop
jg
inc
mov
mov
and
jo
ljmp
push
stc
mov
mov
xor
xchg
sbb
sbb
jle
clc
mov
rcl
or
push
sbb
mov
call
mov
xor
xor
xchg
aaa
leave
dec
adc
add
in
out
jge
repnz
inc
add
pop
dec
or
pop
pop
outsb
imul
loopne
js
push
add
lret
push
pop
push
leave
stc
ds
cltd
ds
imul
mov
lds
sbb
mov
adc
jb
outsl
jbe
pop
cwtl
fldenv
rcl
lret
arpl
push
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
xchg
nop
nop
repz
mov
push
and
ret
adc
push
mov
scas
mov
inc
xor
hlt
cmp
and
ret
push
adc
in
pop
mov
and
mov
rorl
pop
mov
add
inc
inc
outsb
mov
fistpll
aaa
jno
push
arpl
cmp
ret
xchg
ss
in
dec
in
ret
push
popa
clc
pop
loopne
cli
xor
aam
jmp
sahf
outsb
xor
leave
push
jae
sbb
cli
mov
gs
fists
pop
inc
inc
sub
or
mov
inc
adc
sti
jns
inc
dec
mov
pop
sbb
and
push
std
mov
in
inc
jno
mov
loop
or
mov
mov
mov
dec
arpl
sbb
loopne
fs
loopne
insl
xchg
and
insb
jecxz
jno
mov
sub
std
add
add
mov
cld
cmp
testl
sbb
repnz
cmp
add
testl
test
nop
aaa
outsb
shrl
dec
ljmp
in
lock
mov
int3
repz
test
push
push
jbe
xchg
loopne,pn
fisttps
aam
mov
or
lret
mov
sbb
popf
jb
lods
loop
sub
or
je
and
icebp
jbe
lods
mov
push
or
pop
jo
pop
jns
in
aas
bound
loopne
cmp
mov
fst
mov
xchg
mov
roll
in
xor
sahf
push
lds
fs
inc
jmp
cmp
sub
insb
fucomi
aam
js
adc
cmp
nop
pop
into
mov
das
xchg
adc
imul
enter
aad
mov
dec
enter
sub
jb
adc
pop
icebp
add
lods
jge
fnstsw
or
dec
jno
scas
sbb
mov
int3
dec
bound
aas
imul
outsb
jle
enter
icebp
xor
xor
std
jae
aas
sbbl
xor
xor
fsts
call
mov
mov
ret
add
and
jmp
xor
frstor
test
aam
inc
sarb
dec
fmuls
push
or
arpl
push
xchg
leave
pop
pushf
popw
or
mov
and
jnp
jecxz
cs
sub
in
or
xor
jge
push
add
pop
push
mov
lahf
lret
testb
arpl
imul
mov
adc
adc
jne
inc
mov
jecxz
orl
popf
into
cwtl
fs
shll
dec
push
add
mov
out
xchg
jg
and
aaa
fmuls
jmp
testb
sti
and
xor
pop
cmpsb
mov
dec
push
push
inc
lret
aas
out
cs
into
dec
and
mov
js
mov
cli
or
adc
in
jg
movsl
xchg
sti
nop
cmc
fcoms
dec
xchg
out
pop
sub
dec
sbbl
iret
sbb
popf
ljmp
scas
repz
mov
cmp
leave
in
cmpl
fidivrl
xor
xchg
cmp
in
stos
data16
mov
dec
jns
and
push
mov
jg
sti
sbb
mov
leave
je
imul
test
cmp
jle
scas
fiaddl
dec
adc
jge
or
sub
jb
pop
je
mov
inc
int3
dec
pop
push
test
movsl
ds
xor
inc
jg
and
pusha
in
push
insl
shr
jb
sub
and
mov
sub
adc
outsl
inc
jle
mov
cli
xchg
bound
xchg
sbb
das
aaa
or
rcl
imul
stos
pusha
lret
clc
fs
ja
rolb
popa
shlb
dec
jbe
addr16
xchg
fwait
pop
xchg
fs
int
ss
mov
cmp
inc
cmp
outsb
call
pop
mov
stos
ficoml
test
pop
imul
xchg
pop
data16
add
mov
sub
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
shll
sarb
lahf
and
rolb
push
mov
daa
xor
repz
pop
jecxz
jecxz
cmpsl
inc
jmp
jno
gs
stos
mov
push
mov
add
inc
cmpsb
cltd
out
jmp
xchg
mov
jl
aad
mov
pop
in
xor
nop
push
clc
mov
stc
outsl
test
pop
das
adcb
add
negb
aaa
ficomps
sbb
out
jp
xchg
cmp
repz
pop
dec
push
pusha
pop
inc
adc
scas
repnz
jmp
sahf
mov
daa
into
dec
mov
inc
dec
out
lods
rcrb
lock
insl
lcall
movsl
inc
xchg
sahf
popf
addr16
mov
inc
insl
push
adcb
or
ja
push
mov
ffreep
imul
div
xor
or
loope
outsl
rcll
addb
out
xor
jns
jge
ds
cli
leave
fsubl
cmp
pop
jns
pushf
rcrb
out
pop
sahf
imul
xor
mov
int3
push
jns
shll
loopne
into
inc
rcll
lods
addb
std
shlb
cltd
sar
xchg
decb
scas
jmp
dec
jne
pop
fisubl
dec
scas
xchg
stc
ror
addl
rclb
sbb
inc
cmc
clc
and
fidivrl
pop
std
dec
add
mull
fs
iret
inc
pop
into
iret
xor
cwtl
out
ficompl
pop
clc
and
cmp
icebp
mov
je
pop
dec
xor
mov
scas
repz
inc
jb
test
lcall
add
pop
imul
out
sbb
je
jns
mov
repz
jp
negl
and
pmaxsw
xor
mov
gs
or
dec
in
outsb
pop
pushf
in
ret
loopne
xor
stos
movsl
and
xor
inc
ret
push
mov
add
push
and
stos
push
push
lret
popf
mov
fistl
movsb
test
adc
rclb
hlt
cmpb
jg
add
clc
inc
jb
fs
cmp
insl
mov
test
sub
xchg
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
and
xor
mov
fisubl
inc
xorb
ss
fld
ss
lods
cmp
sub
jnp
pop
sub
lret
pop
mov
out
cld
sbb
inc
fs
in
add
dec
dec
push
lds
jno
mov
cli
mov
lret
lea
daa
xchg
subl
lock
pop
aam
inc
cmp
bound
xchg
sub
sub
cmc
sbb
in
cs
in
std
pop
adc
shll
scas
add
std
mov
xor
ja
jns
aad
pop
mov
clc
mov
jns
mov
pop
dec
pusha
ds
and
xchg
jns
pop
aad
outsl
cmp
adcl
push
testl
out
pop
aam
push
leave
ljmp
in
stos
lahf
js
enter
jle
out
jg
movsl
mov
or
sub
sbb
js
inc
jl
push
pop
fxrstor
pop
ret
decl
and
test
push
mov
fsubrl
adc
decb
sbb
jnp
pop
sub
and
jb
js
push
xchg
sbb
or
repz
pop
pusha
mov
inc
leave
rcll
fmull
outsb
daa
std
mov
ret
pusha
jnp
fisubs
enter
or
in
adc
ret
dec
add
sub
into
sbb
xchg
xor
jb
mov
dec
daa
push
leave
xchg
gs
in
pop
and
ss
loop
push
mov
mov
ljmp
dec
dec
jns
out
mov
sbb
cmp
repnz
cld
pop
add
mov
loop
jb
mov
aam
push
dec
xlat
mov
lret
icebp
inc
std
add
inc
int
insl
adc
sbb
repz
stos
and
sbb
mov
repz
jle
cmp
xchg
add
leave
les
cmp
sbb
push
or
dec
jp
es
xor
sub
sti
lret
push
insb
dec
sysexit
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
movsb
aam
sarb
shr
adc
addr16
fwait
jo,pn
lret
sbb
cmp
int3
je
lcall
das
int3
adc
jb
repnz
pop
and
jecxz
ret
call
decl
jne
xchg
mov
in
mov
xor
popa
inc
add
jp
arpl
lret
adc
imul
dec
add
stos
sub
push
ret
jge
jg
xchg
mov
mov
and
sti
dec
cmpsb
adc
xchg
jmp
adc
mov
aad
mov
lock
push
fisubrs
and
loopne
mov
push
jg
adc
mov
jg
nop
sub
ja
out
jb
popf
fidivl
movsb
cmp
sbb
call
dec
mov
cmp
ret
jno
daa
nop
cltd
push
xor
das
push
sbb
imul
mov
arpl
jo
pop
rorb
std
lcall
adc
enter
cltd
cmp
mov
push
dec
fcomps
insl
addr16
xor
mov
lcall
mov
or
xor
add
mov
pop
cld
jg
jg
and
popa
push
mov
call
jl
dec
add
test
and
cmp
fsub
or
xchg
jbe
in
stc
aad
mov
jle
adc
lea
repnz
xor
push
rcrl
lods
repnz
test
sarb
mov
cld
sub
sub
movsl
cmp
iret
subb
add
cli
test
sbb
sbb
nop
jp
or
js
faddp
push
lret
push
add
jae
fstps
das
movhps
add
xor
test
out
movsl
mov
xchg
cmpsl
or
push
loop
lcall
mov
fnstenv
sahf
jle
arpl
in
inc
pop
movsl
dec
divb
aad
jbe
inc
jg
insl
adc
pop
adc
mov
push
inc
fisubl
dec
mov
mov
jecxz
in
xchg
mov
jl
inc
pop
inc
push
jnp
in
jmp
pop
test
mov
test
pop
rolb
cmp
mov
mov
dec
inc
mov
cmpb
shl
fs
xchg
out
cwtl
ret
mov
jl
mov
repnz
inc
push
mov
scas
cmp
pop
in
sarl
mov
mov
inc
push
adc
fs
jmp
int3
int
pop
lods
cld
mov
std
fucomip
cmp
iret
xchg
push
pop
addl
std
push
mov
test
repnz
mov
dec
es
sub
fsubs
xor
cli
mov
aam
and
sub
push
inc
jno
jg
push
les
movsl
das
mov
mov
jno
push
add
or
pop
jbe
xor
popf
sarb
in
push
xchg
int
push
loope
inc
jle
in
jb
outsl
cmp
jnp
cmp
imul
insl
push
add
or
call
mov
jno
push
cmp
roll
or
push
stos
cli
pusha
sub
inc
arpl
in
fs
push
mov
fidivrl
and
lods
scas
stos
add
add
sbb
mov
cmp
dec
sub
dec
pop
out
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
adc
dec
xchg
pusha
inc
sarb
inc
jb
fwait
negb
je
loope
jnp
aaa
iret
mov
in
mov
sbb
int3
mov
sub
mov
int3
dec
and
inc
sbb
push
xor
sub
std
pop
xor
imul
data16
call
out
push
inc
and
xchg
loopne
jno
loopne
stos
iret
sub
add
in
or
and
dec
sbb
hlt
mov
or
ss
aas
mov
inc
push
out
push
cli
adc
sub
mov
movsl
xlat
fidivrl
cmp
clc
dec
xchg
add
sbb
sub
jl
aam
push
inc
pop
jbe
adc
and
cld
push
xor
cltd
lock
dec
mov
ss
sti
jno
pop
xchg
jle
dec
push
aad
into
pusha
mov
mov
arpl
dec
pop
pop
je
mov
or
lcall
cmpsl
cmp
test
outsl
or
fwait
stc
sub
mov
pop
sub
push
xor
mov
mov
jecxz
mov
xchg
pop
loop
inc
lea
ret
mov
push
mov
je
or
and
daa
daa
adc
push
sub
hlt
pop
xor
pop
outsb
mov
lock
mov
and
call
xchg
cmpsb
sub
pop
push
inc
nop
aaa
xchg
inc
bound
test
cmovg
xor
xor
ficompl
mov
and
fwait
shlb
xor
mov
cli
jmp
pop
push
mov
mov
iret
test
es
mov
and
xchg
mov
mov
add
sar
xchg
cld
notl
push
pushl
mov
sub
fsubrs
pop
out
test
lods
dec
and
or
cli
jne
decl
shl
xor
fisttps
mov
xor
popa
push
aad
pushf
insb
mov
sbb
movsb
fiaddl
fwait
jb
and
jecxz
push
xchg
mov
flds
rorb
lret
repz
bound
push
pop
xor
adc
pop
and
dec
es
lds
imul
sbb
xor
leave
clc
pop
repz
test
imul
arpl
mov
push
push
inc
mov
inc
jg
aad
nop
push
mov
in
mov
inc
and
repnz
aad
and
fstsw
inc
xor
lds
hlt
mov
push
outsb
pushf
in
clc
lret
dec
push
sub
mov
les
bound
scas
mov
das
adc
mov
mov
sub
mov
fs
daa
xchg
jns
cld
pop
xchg
mov
idiv
jle
dec
or
xchg
or
cld
pop
std
cs
dec
imul
mov
push
jnp
add
repnz
aam
push
push
pop
pop
push
push
mov
dec
ja
sbb
or
pop
daa
jne
dec
dec
cltd
xchg
dec
push
in
lods
cwtl
repnz
ja
pop
loope
subl
lods
or
scas
clc
hlt
out
imul
in
sar
fcomp
pop
and
mov
mov
jno
add
cmp
or
pop
cmp
mov
add
fldl
mov
and
fadds
sbb
push
clc
sbb
es
pushf
mov
mov
add
std
ja
std
mov
loope
loope
add
jp
pop
dec
mov
fisttpl
jp
xlat
shr
mov
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
pop
push
sahf
jmp
sarb
decb
or
scas
cli
es
ja
mov
dec
into
jns
scas
testl
repnz
jp
nop
pop
aam
icebp
shlb
shlb
xor
mov
out
cmp
pop
mov
or
and
rcl
cmpsl
mov
dec
subb
or
lds
std
shl
fstpl
jge
pop
xor
rcll
popa
out
xchg
stc
and
arpl
fs
pop
test
push
shll
adc
in
lret
cmpsl
mov
ret
pop
jb
in
inc
add
cmp
jg
push
arpl
jno
add
ljmp
mov
ret
adc
mov
aam
mov
sti
push
pop
out
in
and
pop
stc
mov
ljmp
push
test
cs
and
notl
shrl
jmp
push
lea
xor
in
loope
out
push
js
test
adc
cmp
xchg
pop
rcrl
nop
imul
or
stos
pop
dec
jo
pop
iret
pop
mov
xor
inc
mov
cmc
add
test
sbb
pop
pop
pop
sbb
adc
arpl
cmc
pushf
mov
addr16
dec
arpl
sbb
test
push
mov
xchg
jb
mov
and
jno
mov
xlat
leave
add
cmpb
mov
cs
xchg
cmp
pop
mov
les
dec
dec
cmp
mov
inc
xor
out
mov
xchg
mov
jl
jge
dec
enter
push
ljmp
pop
xchg
pop
leave
icebp
pop
pop
fwait
mov
scas
push
pushf
sub
stc
sub
mov
mov
push
les
loope
fisubrl
sub
int3
sbb
rclb
cmp
dec
mov
mov
cmpsl
xor
adcb
adc
fimull
loop
fisubs
scas
sbb
test
sub
and
div
jge
fcoms
xor
icebp
popl
cltd
pop
imulb
movsl
rolb
xlat
cmp
cmp
fsubs
test
ds
shl
out
ljmp
cmp
mov
cmc
mov
sahf
dec
add
jne
pop
sub
sub
jbe
outsb
icebp
fsubrs
cmp
es
mov
mov
lds
bnd
dec
lds
bnd
enter
mov
imul
int
in
sbb
inc
adc
mull
loope
mov
xchg
andb
roll
rcl
loope
fs
mov
sub
xor
xchg
aas
sbb
add
faddl
mov
daa
add
cmpsl
repnz
test
pop
jmp
cltd
xchg
pop
imul
push
push
add
popa
lods
aam
insb
add
hlt
sub
add
aam
cli
dec
mov
lds
inc
jge
xor
les
inc
fsubrl
dec
inc
stos
fwait
xchg
push
adc
sbb
push
es
lock
pop
lahf
lods
mov
sahf
sbb
je
lcall
sub
push
dec
lret
test
js
push
lret
pop
push
pop
and
addr16
mov
jle
mov
js
dec
test
lock
mov
lcall
push
mov
jp
test
test
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
hlt
cmp
outsb
lock
xchg
jg
xchg
test
inc
loope
jg
push
mov
out
and
dec
sub
add
mov
lock
rorb
mov
and
test
dec
adcl
dec
negb
sbb
pop
push
pop
aad
push
push
repz
cmp
ficoml
mov
std
adc
sub
push
fcomps
lods
push
mov
faddl
and
fldl
mov
jmp
xchg
jg
sti
push
js
mov
xchg
idivb
dec
and
fsubr
and
cmp
pavgb
sbb
lods
pushf
xor
sbb
add
lds
jl
ds
rcrl
cmp
jecxz
pop
in
aas
fdivl
fmulp
or
dec
sbb
dec
hlt
pop
scas
mov
xchg
xor
dec
cli
pop
clc
in
mov
adc
mov
cli
repz
lods
iret
dec
and
dec
push
mov
int
jmp
out
arpl
lock
push
cwtl
in
int
mov
fsubrl
mov
int3
xlat
sti
or
mov
dec
sub
pop
fisubrl
add
imul
icebp
fcoms
js
mov
jmp
out
ret
movsl
out
stos
or
mov
sub
or
xchg
pop
fcmovnbe
jge
jbe
data16
fwait
xor
sbb
xchg
ja
add
or
stos
and
test
pop
outsl
orb
adcb
outsl
dec
call
leave
ror
imul
movsb
jno
fisubs
mov
inc
push
and
lods
mov
pushf
sbb
mov
mov
test
or
outsb
xchg
test
sbb
out
aad
push
popf
jae
pop
mov
hlt
or
xchg
leave
cmp
imul
iret
lea
xchg
add
rcl
stos
add
cld
adc
pop
out
fimuls
jmp
dec
iret
push
pop
adc
mov
add
subb
repz
push
jle
stc
subl
cmp
adc
mov
ret
push
stos
pop
mov
subl
mov
mov
cmp
sbb
push
testb
xchg
notl
inc
movsl
loop
movsb
decb
adc
fnstcw
xlat
mov
inc
push
insl
ds
xlat
jno
scas
xlat
jg
stc
nop
push
push
pop
push
xchg
hlt
std
shl
das
fs
movsb
sub
sub
enter
ret
pop
ss
and
mov
mov
jnp
test
mov
cmp
xor
fwait
adc
inc
popa
sbb
in
mov
mov
fadd
andb
xchg
cmp
sub
cld
pop
mov
ljmp
mov
fidivrl
jns
mov
into
add
shr
xchg
popa
lods
pop
mov
and
jo
cli
ret
inc
sbb
sub
xor
cli
clc
movsb
mov
out
int3
stc
daa
movsl
lret
sub
jle
adc
in
jmp
inc
push
aas
out
imul
jb
out
sarb
add
mov
aad
insb
ror
daa
scas
test
mov
repz
in
mov
jno
and
test
outsl
shr
je
mov
cmp
adc
dec
lahf
cmp
or
inc
popa
decl
mov
movsl
mov
add
push
xchg
lea
enter
mov
pushl
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
xchg
pushf
jecxz
pop
sarb
push
cs
push
bound
in
fstl
mov
mov
stos
lods
xchg
es
popa
out
idivb
add
mov
pop
and
dec
js
rcrb
mov
inc
sbb
inc
push
mov
pop
inc
push
loop
stc
ja
xor
pop
mov
pop
jns
int
mov
xchg
fsts
pop
mov
ret
outsl
mov
sbb
mov
jb
sbb
lds
xchg
and
int
test
cmp
jo
lcall
cmp
cmpsb
iret
sti
and
int3
mov
add
jo
inc
cmpsb
adcb
andl
ja
pop
mov
xor
jne
test
call
cmp
das
mov
stos
sub
iret
add
mov
mov
dec
xadd
xchg
notb
push
add
push
inc
and
aas
xchg
add
out
pop
outsl
out
push
inc
push
clc
lret
mov
cmpsl
cmp
out
cmp
pop
popf
loopne
cwtl
xor
adc
jmp
add
fisubs
movsl
pop
in
jmp
hlt
das
push
movsl
inc
test
iret
lock
pop
out
sbb
xchg
in
xchg
mov
fdivrs
cmp
hlt
sti
sbb
cmp
mov
add
cmpsb
xchg
rolb
ss
pushf
lock
jl
shr
xchg
ljmp
push
mov
or
mov
jg
lahf
cwtl
mov
mov
sti
lret
adc
mov
xor
je
fwait
xor
sbb
mov
int
iret
add
js
mov
sub
jo
add
jns
ss
js
call
jmp
mov
movsb
mov
int3
and
push
xchg
movsb
mov
cltd
mov
mov
mov
enter
lods
lock
sti
mov
out
aaa
sbb
faddp
out
push
in
cltd
scas
xchg
push
jl
jnp
incl
inc
xor
xchg
jge
orl
xchg
pop
leave
cmpsl
mov
mov
dec
fs
sub
cmp
push
mov
mov
in
insb
mov
int
pop
rorl
jb
mov
icebp
xlat
fsubrs
push
ljmp
leave
xor
inc
mov
push
sbb
inc
adc
rcll
mov
inc
int
xchg
fs
inc
xchg
std
sub
or
mov
aad
jne
aas
cmp
or
loopne
or
mov
mov
dec
popf
int3
lods
mov
mov
mov
cmpsl
add
push
cmp
popf
mov
lahf
out
push
mov
cld
jle
sbb
jecxz
es
add
icebp
jno
test
mov
push
inc
test
jl
movsl
xchg
repz
mov
mov
jge
loopne
arpl
xor
xor
xchg
xchg
scas
testb
test
sub
rcl
push
ss
jle
repz
lret
ljmp
sub
mov
sbb
pusha
xchg
imul
xlat
pop
mov
lock
cmp
dec
lds
xchg
adc
push
push
into
pop
pop
cmp
cmp
dec
daa
sar
or
push
fcoml
pop
lret
pop
stos
jo
jbe
fldcw
divl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
and
xchg
nop
pop
sarb
or
fcompl
cmp
add
sbb
inc
jne
movsb
pop
repz
punpcklbw
repz
test
mov
or
jge
fwait
arpl
fldcw
sub
ljmp
cli
mov
or
shrb
sbb
dec
pop
pop
mov
push
pop
mov
negl
inc
outsb
xchg
mov
mov
mov
add
out
jns
dec
in
xchg
mov
repnz
pop
mov
das
les
push
pop
inc
xchg
imul
pop
cmp
sbb
add
sub
loop
lret
xchg
lcall
jno
cmp
jbe
sarb
sub
sub
mov
and
lahf
scas
sub
push
xchg
and
add
jl
aaa
aam
cmp
xchg
jmp
push
imul
jge
cltd
sub
jno
pop
mov
inc
cs
shl
mov
shrb
xor
insl
push
pushf
movsl
inc
jnp
call
mov
int3
roll
lods
cwtl
jle
pushf
aad
lahf
xchg
dec
dec
cs
jp
jns
out
fldenv
fildll
jg
jl
outsl
sub
outsb
push
out
ljmp
enter
mov
and
add
repz
lret
mov
ret
jae
and
inc
stos
int3
fnsave
pushf
test
movsl
cli
js
cli
push
or
adc
mov
loop
sbb
jp
sub
pop
xlat
lock
std
push
lcall
and
mov
xor
mov
jmp
jl
xchg
hlt
adc
cmp
sub
push
xor
mov
jmp
mov
jno
pop
cmpsb
mulb
movsl
jbe
dec
test
jbe
pop
xchg
andb
ljmp
xor
hlt
cmp
mov
adc
repz
xor
or
mov
cmpsb
or
jg
inc
pop
push
mov
out
jnp
ret
mov
out
iret
lock
scas
push
xchg
push
lods
or
mov
repz
repnz
sbb
and
in
jle
sub
dec
aaa
xor
rcll
out
mov
or
adcb
iret
je
inc
jno
jne
cli
or
sahf
adcl
pop
xchg
les
mov
xchg
or
es
mov
lcall
popf
mov
mov
outsl
lods
dec
daa
xchg
pop
inc
lcall
pop
arpl
lret
or
and
in
xchg
mov
shll
jp
int3
adc
pop
jmp
mov
repnz
sub
loopne
inc
mov
sub
sbb
in
jp
mov
pop
inc
loope
cmp
xor
aas
pushf
mov
xchg
lds
rorl
add
and
sub
rcr
push
mov
or
fistpll
xor
jo
add
outsl
std
sub
inc
rcrb
sti
lds
popf
mov
push
aaa
cmpsb
jne
fistpl
repnz
outsl
popf
add
clc
decb
push
movsb
jb
flds
popf
push
push
repz
push
lret
stc
inc
std
movsb
and
sub
pop
out
subl
enter
insb
sbbb
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
out
mov
sbb
sarb
jnp
shrl
and
fcoms
dec
push
push
push
insb
cmp
sbb
call
je
pop
pop
jo
mov
fistpl
leave
sarl
repnz
sahf
pop
bound
stos
mov
popa
int
js
in
mov
scas
pop
daa
push
lods
cld
inc
in
int
out
adc
popf
into
aam
and
aaa
cmp
push
popa
lods
push
xor
repnz
mov
repz
and
mov
sarb
int3
dec
mov
movsl
cmpsl
movsl
not
popf
push
or
jne
adcl
xchg
lock
ret
and
mov
jle
mov
out
in
cli
jbe
repz
mov
insb
cmpsb
lea
mov
std
mov
mov
or
xor
sbb
cmp
jecxz
xchg
lods
sbb
cmp
addr16
xchg
flds
sub
mov
cmp
cld
xor
loop
push
cmp
add
add
movsl
add
out
arpl
push
je
mov
mov
jle
sub
movsl
inc
ljmp
lds
decb
xorb
jp
push
or
xlat
pop
push
and
jp
lcall
outsl
inc
lcall
xchg
stc
leave
push
cmp
xor
sti
hlt
dec
mov
inc
imul
push
rcrb
bound
mov
mov
fdivrp
popf
xor
cmc
xor
popa
mov
mov
popa
adc
stos
xchg
xchg
push
mov
xor
mov
and
call
inc
out
xlat
jmp
mov
std
pusha
in
mov
cld
jo,pt
js
ss
imul
cmpsl
sar
jne
test
pop
jo
add
dec
cmpb
movsl
mov
pop
cwtl
lods
test
mov
sbb
xchg
dec
fldl
push
mov
sbb
xchg
stos
jmp
xchg
xchg
aas
shl
cld
or
scas
pusha
mov
jmp
push
jo
mov
in
push
xchg
addb
inc
mov
std
shll
fistl
das
inc
adc
xchg
loop
push
cmp
xchg
test
push
mov
aaa
rcrb
mov
in
jg
and
jp
ss
icebp
or
test
mov
andb
inc
movsl
pop
xchg
aad
mov
lods
arpl
shll
insl
movsl
pop
js
or
sub
pop
repz
pop
in
repnz
inc
mov
inc
in
mov
jns
push
test
popa
cs
call
fnstsw
ja
and
aam
add
or
fsubs
pusha
fucomip
scas
inc
outsl
lock
mov
adc
std
clc
xor
std
mov
xchg
push
mov
movsl
mov
outsb
adcb
orl
sub
push
sbb
cmc
pop
mov
lock
std
lea
push
clc
out
sbb
mov
shrb
nop
lods
xor
xchg
bound
mov
loope
pop
or
sbb
inc
fstps
adc
push
lahf
pop
push
adc
std
xchg
xchg
add
arpl
pop
out
jl
cmpsl
xchg
stc
or
cmc
sti
cltd
push
jnp
push
insl
std
in
fwait
inc
add
sahf
mov
cltd
adc
idivb
inc
inc
test
fld
daa
adc
jae
adc
out
push
and
push
push
hlt
push
adc
push
ds
adc
sub
push
pop
pop
sub
mov
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
loop
hlt
iret
cmpsl
outsl
sarb
mov
jmp
xchg
xor
leave
lock
mov
push
mov
outsb
dec
enter
mov
sbb
int
push
aaa
mov
fstl
rorl
enter
mov
loope
fisubrs
add
cwtl
push
cld
ja
mov
test
pop
push
and
or
mov
pop
loope
fcoms
fists
es
shlb
subb
push
loope
ja
leave
mov
lods
push
lock
cmp
pop
push
mov
in
inc
cld
sti
cld
cmpl
sub
scas
jb
out
add
cmp
xchg
out
or
mov
or
xor
pop
fdivl
and
repz
shll
sbb
mov
mulb
mov
mov
iret
fmul
jne
xchg
es
push
pop
jl
and
adc
movsl
xchg
fcompl
mov
addl
pop
xchg
js
xor
outsl
jnp
fisubrs
shrl
out
movsb
dec
stc
push
iret
popa
mov
test
mov
mov
jmp
sti
mov
js
in
negl
fldl
arpl
gs
inc
aam
lock
mov
jge
mov
xor
push
fdivrs
stos
clc
stos
bound
in
sbb
fstpl
or
add
mov
xor
jl
dec
and
xor
mov
dec
or
mov
iret
dec
pop
mov
hlt
mov
pushf
xor
in
adc
pushl
subl
scas
and
lods
cmp
mov
adc
iret
sbb
jno
xchg
hlt
and
fnstenv
cmpsl
push
add
mov
cmp
scas
dec
loopne
psrlq
xchg
fstpt
imul
sbb
leave
xchg
cmp
add
mov
dec
adc
adc
push
push
jns
outsb
notb
xor
fucomp
in
add
js
sbb
xchg
cmp
call
dec
inc
sub
outsl
pushl
push
lahf
dec
mov
outsl
js
inc
xchg
std
cmpsb
xchg
pushf
mov
adc
pop
xchg
add
sub
lods
lahf
xorl
cli
xchg
jge
and
cmc
lods
cmp
ret
fmull
in
ljmp
or
push
sub
lds
dec
mov
sbb
pop
xor
insb
xor
ljmp
cmp
addr16
je
add
xchg
push
pop
repnz
aaa
push
cmpb
mov
adcl
fcoms
jg
sub
dec
xchg
sti
cmp
test
inc
jp
pop
adc
cltd
jmp
push
popl
std
in
dec
in
inc
mov
or
jle
sahf
dec
in
rorb
fidivl
xchg
jl
mov
ret
xchg
lcall
adc
mov
push
outsl
fdivp
ja
cltd
pushf
addr16
ret
push
pop
or
mov
or
add
pop
mov
cltd
je
arpl
mov
push
shrl
sub
test
cmp
mov
sarb
mov
shrl
xor
aas
xor
ds
push
xor
sti
dec
pop
fst
pop
xchg
ret
cmc
lods
pop
mov
jno
xchg
sahf
pop
sub
sahf
mov
ljmp
test
shlb
dec
jmp
sub
push
cltd
shrb
out
lahf
jle
aam
je
mov
jmp
cld
sbb
mov
sahf
aas
cbtw
jecxz
ja
mov
push
pop
and
fsubr
or
lcall
xchg
xor
push
mov
adcb
cmp
push
pop
mov
pop
in
pop
out
mov
inc
rcl
andl
push
mov
add
pop
mov
out
jbe
add
mov
push
lods
cmp
dec
cmpsb
mov
test
je
pop
mov
shlb
lahf
js
jne
push
aam
inc
mov
mov
pushf
xor
mov
or
scas
mov
sarb
ret
rcr
add
sti
push
jo
mov
fldt
fldenv
sub
xor
jge
push
xchg
loop
faddl
data16
int3
shl
push
xor
cmp
lea
ja
dec
jmp
enter
neg
cmp
sub
fbstp
in
fisttps
insl
out
fwait
leave
or
pop
mov
xor
mov
fimuls
fidivl
or
enter
sub
int
aam
lahf
push
ljmp
jl
add
mov
mov
rcrl
push
dec
sbb
or
rcl
fwait
cmpsl
lcall
stos
les
inc
xchg
mov
lods
jle
jge
dec
inc
add
clc
jle
xchg
dec
cltd
inc
cmp
xor
mov
mov
jb
pop
and
lock
icebp
pushf
sbb
and
and
sbb
hlt
es
xchg
or
lahf
inc
xor
mov
fmul
jns
std
inc
and
loope
jb
flds
add
cmp
ror
jne
jo
xchg
daa
and
jecxz
fsub
mov
fnclex
sbb
mov
mov
dec
mov
and
arpl
in
mov
lea
repz
dec
bound
imul
not
mov
out
sbb
sub
aas
lds
xchg
in
pop
mov
movsb
pushw
cmp
inc
inc
pop
nop
lock
mov
mov
scas
ljmp
testl
adc
inc
push
fisubrl
sub
sub
adc
movsb
int3
lret
enter
inc
xchg
inc
xor
sub
pop
fcmovnb
aaa
inc
mov
mov
jnp
adc
fs
sub
ja
leave
or
je
jg
xorb
sahf
sbb
repz
rcl
mov
aad
add
cmp
xor
xchg
mov
and
push
stc
cmovne
pop
std
sub
dec
fdivrl
xchg
and
xor
dec
orb
and
orb
cmp
repz
sbb
lcall
inc
pop
xchg
push
imul
in
das
add
mov
mov
inc
mov
add
lock
sbb
je
inc
mov
idiv
pop
sub
scas
adc
jmp
scas
clc
loop
call
les
cmp
icebp
jns
sbb
cli
pop
bnd
xchg
mov
aaa
into
mov
inc
sbb
pop
test
or
mov
or
into
dec
in
jns
jbe
imul
imul
xor
or
pop
mov
inc
xchg
sbb
jmp
xor
or
sbb
enter
mov
out
jnp
push
pop
test
lahf
mov
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
pop
add
movsb
sarb
dec
les
xchg
jae
push
mov
out
enter
mov
or
fisubs
adcl
daa
pop
push
and
lahf
mov
subb
dec
push
jp
lds
jno
inc
cmpsb
add
mov
lods
xchg
xlat
mov
mov
push
popl
and
inc
pop
jnp
push
stc
frstor
add
xor
call
stos
mov
pop
stc
mov
and
adc
sahf
fcmovb
sbb
outsb
inc
lods
test
cmpsl
movsb
sbb
or
inc
xchg
daa
popa
sbb
inc
pop
mov
jl
push
cmpsb
jp
dec
and
dec
icebp
ss
mov
lods
add
cltd
in
and
mov
add
sbb
jle
mov
pushf
jb
or
or
push
sub
mov
mov
mov
jmp
imul
icebp
or
cmp
xchg
sahf
inc
mov
xchg
mov
in
sti
js
push
lahf
int3
sbb
xor
arpl
aaa
sub
xchg
leave
pop
les
clc
fsubl
es
adcb
daa
add
and
outsb
sti
and
mov
dec
cmc
or
sub
mov
stos
mov
popa
int
mov
xlat
xchg
push
xchg
cld
cld
out
mov
cmp
movsl
xor
fisubrl
add
incb
or
cmpl
scas
sbb
jp
das
lahf
and
mov
inc
mov
push
adc
in
sahf
add
aam
pop
mov
lcall
loope
popf
xchg
in
xor
sub
out
inc
mov
je
jno
or
sarb
jns
xchg
in
in
inc
addr16
push
lea
psllw
fcmovb
adc
int
cwtl
insl
divb
bnd
rorb
shl
out
mov
mov
lods
movsl
sub
pop
addr16
dec
xor
inc
rcl
dec
in
lahf
js
and
cmpsl
dec
mov
dec
jns
std
ljmp
fst
enter
lret
push
mov
cmp
xlat
stos
aas
sub
shl
push
nop
and
mov
fisttps
ret
arpl
and
push
xchg
jecxz
push
ss
loop
jae
hlt
in
jnp
xchg
cmp
push
and
pop
inc
dec
shll
mov
sub
mov
cld
or
popf
pop
js
int
push
sbb
pop
mov
test
or
mov
mov
add
mov
cmc
add
pop
or
sbb
daa
out
and
jo
inc
popa
icebp
lods
and
and
sahf
test
dec
fsubr
jmp
fsubrs
lock
aam
ljmp
xor
mov
or
push
cmp
inc
mov
mov
cmp
adc
stos
outsl
std
lret
adc
jae
pop
hlt
xchg
xchg
scas
fwait
inc
jg
fcoms
push
loope
fs
je
push
std
push
sub
shrb
add
fisubl
jbe
adc
popf
gs
adc
mov
mov
push
dec
sbb
pop
shlb
mov
xor
ja
test
adc
int3
lahf
movsl
push
inc
mov
hlt
insl
out
enter
in
mov
xor
mov
aad
out
data16
pop
sbb
mov
lea
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
cmp
rorl
mov
add
rcrb
inc
or
mov
and
int3
push
or
pcmpgtb
movsb
and
pop
in
mov
cmpsl
hlt
scas
rcl
dec
sub
arpl
sub
jb
xchg
inc
cmp
sbb
adc
mov
fwait
cmpsl
movsl
daa
pop
fcmovu
popf
ret
pop
jle
pushf
mov
push
and
xchg
or
adc
movsl
or
jl
jne
fsubl
pop
ss
addl
data16
xor
mov
cmp
add
mov
sub
ljmp
pop
stc
jne
and
fld
test
xlat
xchg
out
dec
xor
push
lods
dec
fcoms
mov
adc
iret
lea
xchg
mov
adc
hlt
cld
fwait
lds
inc
aad
into
sbb
into
mov
imul
and
push
jge
test
adc
pop
jmp
mov
inc
push
cwtl
add
sbb
test
push
pop
mov
lcall
int
ss
add
jnp
stos
mov
call
mov
dec
mov
gs
lds
add
jno
and
push
push
jno
cmpsl
outsb
shll
add
cld
xchg
jae
lahf
sub
inc
jg
add
xchg
repnz
je
frstor
pop
es
scas
jmp
in
ljmp
cmp
popfw
shlb
stos
cmp
bound
ficoml
aam
pop
loop
inc
dec
jb
mov
push
fnstenv
scas
adc
pop
les
pop
stc
aas
xchg
adc
xlat
inc
fs
or
cmp
mov
addr16
jo
xchg
enter
popf
jbe
jae
xchg
cmp
lahf
into
mov
pop
in
in
aam
or
xchg
mov
outsl
sahf
jp
aas
pop
sbb
pushf
mov
notb
test
std
aad
inc
adc
or
daa
add
lods
sbb
pop
insl
sbb
mov
pop
es
test
movsb
sbb
and
addr16
cmp
fmul
aad
mov
aad
fwait
clc
insl
sbb
and
icebp
sub
push
out
ds
enter
gs
ja
and
jo
jae
stc
fchs
lcall
leave
or
mov
xchg
cli
lods
cmp
addr16
jb
pushf
jae
mov
mov
outsb
in
iret
test
les
ds
mov
mov
mov
dec
mov
xor
loope
in
mov
add
add
lds
xor
fmul
mov
ja
sbb
out
call
das
lds
out
jg
orb
out
and
inc
bound
pop
cmc
and
iret
sbb
or
jne
adc
scas
add
push
repnz
enter
jns
xchg
cmpsb
mov
cmp
mov
xchg
ja
inc
xchg
mov
cmp
mov
sub
call
jl
jp
mov
pop
insl
xchg
sarb
push
or
fldt
pop
fs
xchg
jno
icebp
mov
es
mov
jg
sub
imul
test
aam
push
mov
sbb
xchg
pop
inc
ds
inc
xchg
cld
popl
adc
js
enter
sub
call
xchg
lcall
cmp
mov
fildl
adc
inc
dec
add
adc
dec
lods
fisubrs
push
adc
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
lret
imul
sarb
inc
repz
or
int
mov
sub
mov
sub
test
adc
adc
jo
xchg
out
pop
je
sub
jno
xchg
push
jecxz
enter
push
lods
cmp
push
cmp
lahf
mov
pop
sti
pop
aas
push
fadds
jno
out
cmc
push
stos
jle
mov
enter
fimuls
adc
push
popf
pop
movsl
or
mov
pop
jle
xor
inc
fisubs
mov
sub
stos
pop
pop
test
mov
cmc
pop
sbb
xchg
pushl
xor
xlat
pop
js
push
ja
ds
pop
push
andb
dec
inc
fcoml
gs
pop
rcrl
outsl
jo
mov
dec
loope
shrl
and
cmp
lods
shll
cmp
mov
insl
sbb
mov
sbb
or
rcpps
fcoms
pop
or
add
mov
test
pop
data16
mov
mov
test
popa
sbb
xchg
lods
out
and
sub
xor
cli
mov
imul
pop
mov
mov
pop
movsb
cmp
pop
pushf
and
aad
pop
dec
aas
xchg
ss
push
mov
lods
daa
data16
fldl2t
lods
add
or
cld
mov
jne
je
fwait
lods
sub
dec
sti
adc
inc
sbb
lahf
in
lea
icebp
fwait
addb
and
push
pop
push
adc
push
xor
in
lds
repz
cmp
pop
xchg
rcrl
and
imul
jl
icebp
dec
xor
imul
les
fstps
inc
mov
stos
stos
adc
aam
mov
mov
pop
xor
xchg
fimull
pop
xchg
sub
fwait
mov
into
movsb
inc
es
leave
xchg
push
jno
mov
test
push
sub
pop
sti
and
mov
xor
cmp
push
jae
ss
xor
les
mov
stc
jl
xor
fwait
mov
and
imul
sahf
in
stos
js
pop
lea
popa
aam
aad
nop
nop
add
outsl
testl
lret
mov
in
add
cmp
xor
cmp
jmp
lahf
dec
stos
stos
jle
sahf
out
adc
popa
inc
cmpsl
push
mov
and
pop
out
je
cwtl
mov
ret
mov
scas
in
cltd
xor
add
dec
xchg
cmp
sarl
add
mov
and
or
cli
and
mov
test
xchg
sub
scas
xchg
inc
pop
pop
jle
leave
mov
xor
fs
rcrb
ljmp
xchg
xor
leave
cwtl
insl
push
push
cmp
outsl
mov
inc
lods
clc
add
pop
pop
fnstsw
loope
mov
aaa
pop
hlt
xor
jno
outsb
aad
add
and
dec
arpl
push
inc
inc
and
push
mov
ljmp
cltd
push
ret
aam
aas
inc
xor
xor
clc
arpl
lret
lcall
pushl
xchg
insl
std
dec
lock
mov
adc
dec
xchg
push
cmp
ljmp
and
mov
aam
push
and
iret
mov
jae
add
pop
dec
mov
mov
mov
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
leave
outsb
push
sahf
arpl
mov
mov
sub
movsb
push
loopne
mov
jae
fildl
les
out
xor
test
loop
mov
fstpl
cld
lret
enter
icebp
or
sub
pop
cmpsl
mov
outsl
test
and
adc
add
jb
iret
sub
push
xor
and
fsubrl
outsl
mov
ds
loop
fistpll
pop
xor
lea
pop
sub
inc
sbb
rcl
push
xchg
lahf
lahf
rol
jmp
dec
dec
xor
lcall
cmpsb
xchg
ds
outsb
push
mov
jae
rol
es
dec
cmp
lods
int
mov
xor
and
inc
dec
mov
aas
call
pop
cmp
dec
cmp
mov
cmp
cmp
xchg
stos
repnz
xor
cwtl
dec
xor
cltd
adc
push
imul
inc
imul
and
or
lods
push
testl
jnp
add
in
xchg
in
scas
loope
add
scas
adc
inc
aam
test
leave
mov
in
jecxz
mov
daa
sbb
pop
cwtl
lods
mov
sbb
movsb
lods
push
xor
xchg
xchg
out
lock
lods
or
mov
mov
cmp
jae
mov
jns
push
shl
mov
ja
xor
out
subb
sbb
xor
inc
aas
sbb
pop
push
push
shlb
cvtpi2ps
mov
mov
test
jle
leave
add
jp
push
ret
test
aas
cmp
fsubrs
ret
xor
repz
push
inc
adc
mov
push
lahf
xor
cmp
mov
sub
addr16
jne
pop
mov
pop
mov
clc
jge
das
adc
test
cmp
outsl
int
push
loope
sbb
pop
fistl
leave
jg
rorl
test
enter
adc
cltd
push
jg
cmc
push
std
jns
sub
sbb
push
jb
mov
mov
sub
sahf
stos
jae
dec
popf
dec
sbb
adc
test
push
sub
ja
jecxz
rorb
jo
incl
xor
and
cmp
add
pushf
imul
mov
std
stos
popf
cmpsl
test
roll
fistpll
sbb
inc
stos
adc
sub
pusha
jmp
test
bound
jle
push
popa
xchg
mov
out
adc
dec
jecxz
in
mov
jne
mov
imul
and
xchg
pushf
jmp
jge
andb
repz
xchg
push
cltd
and
ds
scas
int
adc
add
movzwl
mov
cmpsb
repz
aam
pop
lea
fdivrl
mov
je
push
jns
fwait
push
out
inc
into
mov
and
vpaddw
jp
negl
mov
pop
and
xchg
out
popw
xchg
inc
inc
repz
push
adc
dec
dec
add
mov
stos
in
sub
dec
shll
fwait
and
rcrl
loope
minps
pop
outsl
sub
xlat
lods
inc
cmpsl
jns
iret
adc
cmpsb
fwait
cwtl
nop
dec
mov
sbb
sub
aas
pop
stc
xor
movsl
aad
js
jecxz
jge
sahf
mov
jno
shrb
xchg
data16
pop
insl
add
arpl
inc
push
mov
mov
ret
sahf
roll
sahf
jb
add
decb
add
mov
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
pop
adc
sahf
out
popf
sarb
sbb
lea
inc
leave
outsb
mov
lods
push
test
ss
cmc
mov
mov
mov
inc
ret
push
push
sbb
push
pop
sub
dec
js
push
lock
dec
xchg
in
clc
cmp
dec
sub
fadds
shr
mov
push
adc
pop
push
sbb
inc
dec
je
xor
bound
dec
inc
mov
and
gs
adc
mov
loopne
out
pop
sub
daa
jge
cmp
mov
pop
pop
cli
cmc
push
lds
sub
add
xchg
mov
sub
xor
orb
std
ds
daa
mov
fisubrs
xchg
lcall
xor
xchg
cmpsb
mov
mov
scas
sub
jp
jecxz
iret
outsl
adc
add
repnz
inc
and
inc
dec
in
sub
pop
xchg
nop
jae
dec
add
stc
xor
jb
or
imul
adc
xor
scas
nop
mov
inc
xor
xlat
leave
add
and
or
cmp
xchg
or
fcomip
cmp
int3
call
cmp
push
scas
mov
bound
xor
andl
lds
xchg
mov
xlat
out
mov
nop
adc
lods
aaa
dec
inc
ss
les
push
in
pop
xchg
cmpsb
cmp
mov
mov
outsb
in
xor
int3
test
mov
repnz
movsl
adc
sub
adc
fildll
in
mov
insl
jne
push
daa
xor
push
out
adc
out
cmpsb
nop
jb
aas
pop
pop
adc
cwtl
test
cmp
mov
lret
pop
or
mov
cmc
or
enter
andb
cwtl
inc
fadds
mov
sbb
cmpb
inc
lahf
sbb
cwtl
xor
sbb
mov
pop
fisubl
push
xchg
hlt
fdivrl
shlb
inc
daa
mov
sbb
inc
pop
pop
lcall
adc
ljmp
out
pop
ljmp
jae
xchg
mov
mov
and
sub
rep
mov
mov
scas
call
hlt
sub
adcl
in
inc
jge
mov
inc
push
add
movsb
pop
or
rolb
push
sbb
in
idivb
cld
es
cmc
mov
cmpsl
add
xchg
cli
xor
cmp
fwait
mov
insb
in
and
mov
cmp
enter
sbb
adc
popa
sahf
pop
ja
sarl
jmp
dec
jle
movsb
mov
xchg
adc
pop
ds
loop
cltd
pushl
sub
lock
cmc
pop
int
inc
cs
or
lahf
and
sar
jp
dec
and
dec
or
adc
mov
add
xchg
mov
addl
jne
xorl
addr16
xchg
add
inc
out
rcl
sbb
arpl
mov
add
shlb
push
sub
loop
jge
in
or
test
ret
or
addr16
and
sub
in
push
clc
adc
loopne
aam
lahf
cmp
orl
pusha
fidivs
ja
mov
jge
in
les
sti
arpl
imul
xor
mov
dec
filds
and
aad
mov
mov
push
inc
push
pop
mov
xchg
jnp
repnz
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
subl
mov
pop
dec
test
sub
out
mov
cmp
sti
mov
daa
rclb
pusha
xchg
mov
xorb
sarb
xchg
or
imul
push
iret
adc
mov
add
into
cmc
or
call
cmp
in
and
sub
adc
fstps
rorb
pandn
dec
repz
rcrl
fimull
sub
data16
cs
sub
fnsave
or
mov
dec
scas
int3
fisttps
gs
add
inc
jle
pop
mov
cmp
imul
push
cmp
sbb
sbb
popl
xor
dec
pop
ds
mov
js
icebp
push
mov
xor
cmp
repnz
cwtl
sub
push
pop
loopne
adc
data16
in
ja
jae
add
xor
sub
mov
push
int
mov
lea
and
fiaddl
xchg
or
cld
or
push
shll
and
xchg
insl
shrb
outsb
sub
mov
clc
clc
test
movsl
les
ret
rorl
mov
pop
inc
cltd
clc
mov
pop
loopne
sub
movsb
push
enter
push
push
and
mov
cmc
arpl
and
mov
data16
or
cmp
and
cld
xorb
adc
orl
cmpl
divb
xchg
test
mov
out
ret
pop
test
push
cwtl
jno
push
fiadds
adc
dec
sti
inc
fadd
mov
and
aam
out
int3
push
mov
push
or
xchg
mov
sub
and
fidivs
pop
cli
push
jnp
fwait
mov
xchg
mov
xchg
mull
lods
inc
ret
sub
stos
fistps
daa
xor
lods
pop
inc
pop
xchg
xor
push
push
fnstcw
je
push
push
fucomi
and
jmp
int3
adc
sub
rclb
mov
ds
inc
xchg
fstp
xor
xchg
cmp
or
mov
xor
into
inc
hlt
mov
mov
jle
xor
xchg
cmc
xor
fcomp
iret
in
aas
push
fs
pop
mov
jl
out
jecxz
test
ja
inc
adc
scas
push
xor
mov
sarb
fwait
add
mov
sarb
sbb
insl
push
aas
adc
dec
and
push
fs
into
clc
adc
jns
cwtl
cmp
std
adc
push
jecxz
js
popf
test
mov
imul
std
or
icebp
add
shll
push
mov
aaa
arpl
stos
jne
mov
sbb
out
icebp
lock
dec
mov
cmp
es
mov
jg
shl
mov
mov
mov
add
movsl
pop
pop
pop
mov
jo
arpl
push
ret
in
xor
mov
imul
lods
push
mov
repz
mov
je
jge
das
aaa
lea
or
or
insb
jne
cmp
jmp
xchg
mov
sub
pusha
jb
repnz
shrl
enter
ret
pop
fbld
out
sub
xor
jnp
push
xchg
mov
es
arpl
lret
and
mov
test
aam
test
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
or
shl
call
xorb
cmp
inc
into
addb
loop
mov
bnd
push
lock
popa
sbbb
cmp
aas
inc
xchg
popa
pop
jle
push
aaa
cs
cmpsb
popf
cld
xor
das
and
sbb
xor
xorl
in
dec
cltd
loopne
test
sub
mov
xor
repz
dec
subb
jmp
bound
cmp
lret
adc
cld
jbe
adc
lcall
in
dec
aad
in
xchg
shll
xor
dec
bound
lcall
mov
rolb
xorl
lahf
adc
mov
xor
or
dec
xor
hlt
arpl
out
jle
movsb
jge
adc
xchg
and
adc
dec
stc
fisubl
addr16
sti
sbb
cmp
xor
pop
stos
jg
xlat
loope
jmp
pop
adcb
xor
inc
repnz
lds
and
push
cld
xchg
sbb
in
lret
jmp
cld
sbb
push
stos
pop
cmp
insl
ret
cmp
insl
loopne
xchg
mov
cmp
das
nop
les
mov
out
inc
int3
pop
test
mov
shll
arpl
lahf
into
sub
loopne
mov
or
jl
or
and
push
repz
inc
rorl
xor
and
mov
popa
mov
inc
add
xor
aas
jge
nop
call
or
push
xchg
pop
mov
dec
fistpll
or
lahf
jnp
arpl
xor
push
sub
mov
fsubs
aaa
out
mov
add
faddl
push
mov
icebp
mov
and
pushf
or
or
mov
mov
mov
cmp
dec
rcrb
sub
stc
pusha
xor
mov
sub
cmpsb
pop
jmp
sub
out
pop
mov
inc
fnsave
mov
mov
or
rclb
dec
lcall
sub
mov
xor
cmp
icebp
cmp
fidivl
mov
mov
sbb
push
jb
dec
mov
and
pop
filds
mov
mov
rcll
xor
data16
dec
icebp
fnstcw
sbb
jnp
movsl
rorl
lock
incl
and
popa
fs
xor
sub
sahf
ss
mov
or
cld
repnz
sarl
sbb
aad
orl
add
cs
lea
icebp
add
inc
pop
shl
sbb
sub
das
inc
jmp
sysret
push
test
imul
pop
aad
call
push
xchg
lock
mov
aaa
pop
xor
scas
push
dec
jbe
es
pop
push
push
fldl2t
je
add
adc
aad
fs
ja
cmp
iret
inc
and
inc
call
add
dec
xchg
dec
add
pop
dec
push
pop
popa
sbb
aad
pop
out
mov
mov
into
sub
out
or
mov
not
xor
fwait
je
xor
popf
mov
fimull
xchg
mov
mov
mov
adc
add
int3
push
xchg
or
cmp
lods
push
aad
inc
out
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
xor
sarb
mov
mov
shlb
movsb
imul
les
or
mov
cmp
js
je
outsl
mov
mov
jbe
aad
imul
push
les
jne
pop
jp
mov
dec
test
aaa
mov
cli
mov
and
jnp
mov
sub
push
mov
inc
fisttpl
xor
pop
sbb
pop
stos
push
mov
aad
push
mov
shrl
dec
xor
insl
icebp
rcll
pushf
add
cmpsl
roll
ret
and
test
jmp
sub
stc
addb
mov
out
out
sub
lcall
bnd
pop
pushf
inc
sub
dec
mov
test
loopne
popf
test
sub
or
mov
push
out
ds
cmpsb
push
bound
aas
fcmovnbe
jle
cmpsl
sub
cmc
inc
push
xchg
pusha
addr16
xor
or
loop
jmp
sub
push
mov
lahf
adc
loopne
adc
cwtl
cmp
dec
stos
int
push
xchg
and
mov
in
jmp
cmp
push
xchg
mov
mov
add
aam
pop
je
sub
dec
or
fdivs
rcrl
push
mov
lcall
xchg
add
in
sub
push
sbb
and
adc
cwtl
xchg
ja
mov
lret
aaa
mov
imul
mov
pop
mov
mov
xor
ja
jne
xchg
xchg
dec
sbb
insl
iret
sbb
and
xor
pushf
jg
cmp
pop
sbb
fucomp
in
iret
mov
test
xchg
adc
aas
and
jb
inc
or
es
aam
push
sub
jae
jbe
cmpl
jo
inc
addr16
adc
addr16
in
out
and
adc
xchg
cmp
hlt
xchg
mov
jae
enter
insl
sub
sbb
pop
or
push
push
mov
ret
sbb
pop
mov
mov
test
arpl
cmp
dec
fdivl
fsts
sahf
insb
jmp
stc
jle
dec
addr16
or
std
xchg
sub
scas
sbb
xchg
mov
clc
out
rcrl
jp
lret
imul
jne
inc
std
inc
fs
jae
pop
cltd
nop
adc
or
loop
lock
repnz
jae
es
mov
add
movsb
dec
push
addr16
mov
test
mov
js
or
incb
xchg
add
xchg
add
data16
adc
call
rcll
xor
in
jo
xor
cmc
dec
xchg
xor
dec
cwtl
mov
fcmovnbe
cltd
and
cld
mov
out
cmp
in
xchg
pop
movsl
lret
out
lea
push
roll
push
inc
lret
popa
ss
pop
cmp
mov
push
pop
sub
lods
andb
aas
imul
adc
paddusw
nop
jnp
jmp
jo
dec
or
incb
push
iret
cld
cltd
xchg
mov
sbb
scas
xor
and
mov
popa
xlat
jg
daa
mov
adc
pop
loope
inc
mov
stos
ffreep
adc
aad
cmp
movsl
test
lcall
lcall
gs
fwait
shrl
pop
ret
dec
in
movl
pop
mov
add
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
mov
push
sahf
pop
mov
mov
mov
in
stc
stos
mov
jno
je
shl
loop
testb
lods
sbb
xor
setge
xchg
dec
and
xchg
cmp
adcl
mov
dec
movsl
aaa
movsb
cmp
insl
dec
nop
test
repnz
adc
cld
dec
clc
test
mov
mov
mov
push
pushf
bound
mov
lret
or
fneni(8087
jo
xchg
sbb
out
adc
fildll
mov
cld
push
sti
mov
call
andb
ja
cmp
cld
lahf
sub
aam
or
mov
aaa
push
into
lahf
lret
fwait
addb
ficoml
pop
pusha
jge
jmp
sub
and
jge
incb
outsl
in
rolb
sarl
mov
push
loop
fwait
dec
leave
dec
cmp
clc
stos
cmpsl
fcomps
dec
dec
fldenv
aaa
fcmovnu
sbb
mov
xchg
leave
test
jnp
popa
scas
adc
cltd
rcll
add
mov
lret
jae
adc
in
or
adc
cli
mov
daa
mov
orl
adc
into
xor
js
shll
cs
cwtl
jns
mov
sub
in
loope
xor
test
dec
dec
xor
ret
and
jno
and
call
push
lahf
xor
mov
outsl
mov
xchg
mov
notl
sti
jns
sub
pop
js
in
gs
dec
pop
mov
pop
xchg
ret
dec
or
fbstp
or
push
mulb
adc
pop
lret
xor
inc
sahf
adc
add
imul
lods
insb
pop
or
pop
push
and
sbb
test
push
es
movsl
test
inc
xor
loop
int
shl
push
fxch
mov
push
cmpsb
cmp
sub
ss
push
stc
mov
mov
addr16
inc
dec
dec
movsl
les
or
cmp
inc
imul
icebp
in
dec
mov
mov
pushf
icebp
mov
push
in
sahf
xchg
jno
imul
adc
adc
mov
in
ds
icebp
push
push
jge
popa
pop
pop
sub
sbb
inc
lcall
cmp
movb
fmulp
pop
fisttpl
mov
xor
rorb
sbb
sub
fwait
mov
movsb
mov
push
loop
nop
sti
adc
cmp
dec
dec
jno
pushf
cmp
lahf
mov
xchg
sbbb
xchg
fwait
sarl
sbb
jmp
and
out
mov
add
ja
imul
cmpsl
fwait
jle
push
rcrl
dec
dec
fisubrs
pop
cli
sbb
add
rcll
xor
pop
leave
dec
xchg
jnp
dec
mov
jbe
fwait
adc
shlb
nop
mov
stos
daa
or
addr16
sar
rcll
xor
inc
and
push
in
daa
xor
dec
inc
cmp
mov
enter
loope
out
test
mov
mov
cmpl
fidivrl
mov
xorb
pop
or
and
es
push
push
icebp
ljmp
sti
incb
dec
leave
cmovns
je
pop
dec
push
adc
lods
lock
enter
pop
rcrl
loop
mov
adc
mulb
repz
lret
pop
lds
xchg
xchg
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
outsb
dec
and
dec
les
mov
cs
lret
mov
mov
pop
jg
gs
js
xchg
gs
repnz
xchg
scas
jbe,pn
adc
ljmp
add
mov
push
movsb
lods
mov
imul
jmp
fisubrs
cld
mov
neg
or
out
or
mov
xchg
cmp
fstpl
int3
mov
sub
in
scas
fidivl
out
dec
mov
insb
lods
jne
arpl
pushf
pop
jg
or
int3
test
icebp
sub
insl
sub
outsb
sbb
and
stos
icebp
push
cmpsl
leave
fildll
testb
cmpsl
in
mov
inc
pop
or
sub
xchg
pop
popf
add
adc
mov
in
or
imul
clc
mov
stos
xchg
and
mov
test
aam
push
fstpl
mov
mov
leave
gs
pop
sbb
jns
lret
lods
inc
mov
shlb
andb
aaa
in
add
das
mov
aam
dec
ss
arpl
mov
das
add
fwait
stc
cmp
inc
iret
shrl
pop
pop
arpl
pop
shrl
in
shl
dec
jg
fldl
adc
outsl
jecxz
call
lret
cmp
adc
aad
mov
ror
scas
adc
scas
dec
xchg
sbb
mov
stos
pusha
int
mov
loope
mov
movaps
sub
and
jns
pop
ljmp
sbb
out
movsl
and
setb
cmp
test
stos
mov
outsl
out
ja
fadds
and
and
push
in
aad
hlt
cmc
lea
cltd
push
pop
outsb
jo
mov
or
dec
loope
inc
fs
ret
xchg
lds
jge
xor
mov
xchg
lds
mov
int
movsb
dec
cs
add
and
inc
js
push
or
pop
in
stos
mov
das
and
add
inc
mov
cmp
lret
fwait
out
inc
data16
mov
jmp
in
out
loopne
data16
xlat
sbb
xor
adc
sbb
cmpl
dec
ret
stc
jae
fdivr
adc
idivl
xchg
pusha
lods
or
aaa
jl
pop
fsubrs
adc
cmp
jl
cmp
dec
dec
fcmove
les
mov
inc
xchg
ror
add
xlat
jbe
xlat
dec
pusha
sub
test
clc
sahf
mov
dec
pop
xor
jo
loopne
sbb
shrb
popa
mov
and
inc
dec
fwait
ret
sub
ret
sub
lcall
xchg
push
lods
out
xor
pop
add
xchg
inc
xor
cltd
fsubl
mov
popa
add
jg
dec
inc
cmpb
in
outsb
test
call
cs
mov
dec
sub
push
and
lods
or
into
jl
fwait
icebp
mov
je
aam
xchg
jecxz
and
sub
rcrl
outsb
cmp
jecxz
jmp
mov
pusha
int3
xor
call
jne
scas
lret
lods
or
cmp
lret
rolb
scas
jne
out
pusha
gs
jmp
mov
or
out
dec
addl
repnz
mov
into
cltd
or
cmpb
cltd
icebp
hlt
sahf
sub
adc
jno
outsb
iret
ret
cmpsl
mull
out
push
xchg
dec
pushf
xor
sbb
stos
pusha
adc
mov
roll
lods
dec
jns
jno
mov
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
jbe
cmp
sarb
stos
fcmovu
adc
jl
sbb
cmpl
sub
divb
xor
and
mov
icebp
push
test
fidivl
sbb
inc
push
jle
push
enter
roll
dec
lahf
jg
enter
insb
arpl
jbe
xor
adcl
stos
mov
je
fimull
out
lock
adc
pop
and
xor
movsb
jae
mov
decl
decl
mov
xorl
clc
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
pushf
and
add
gs
arpl
push
outsl
inc
jne
jae
jb
and
inc
add
sub
call
daa
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
push
and
inc
add
add
sub
dec
and
inc
add
addl
fsubrl
inc
add
add
inc
add
sub
lods
daa
inc
add
push
movsl
scas
or
inc
add
sub
and
inc
add
sub
inc
sub
cwtl
daa
inc
add
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
shlb
inc
add
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
inc
and
inc
add
push
movsl
cmp
xlat
movsl
dec
add
inc
and
sbb
hlt
stc
sarb
inc
pop
jg
add
add
add
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
daa
inc
add
cli
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
add
test
or
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
movsl
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
test
add
test
xchg
test
cltd
test
popf
test
mov
test
test
test
mov
inc
add
test
mov
test
xlat
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
add
test
or
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
add
add
aad
dec
add
add
add
add
add
add
add
add
rclb
add
loopne
add
rorb
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
push
mov
add
add
jb
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
inc
mov
add
add
pop
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
add
rorb
in
add
hlt
mov
add
lea
add
lea
add
lea
add
lea
add
add
push
lea
add
add
add
orb
add
add
mov
lea
add
lea
add
lea
add
mov
add
mov
add
add
cmp
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
dec
popl
add
add
je
add
mov
add
lods
popl
add
add
fimull
add
cld
popl
add
nop
add
sbb
add
xor
add
fs
add
jbe
add
mov
add
scas
nop
add
mov
nop
add
fcoms
add
nop
add
push
xchg
add
sbb
add
xor
add
dec
xchg
add
pop
xchg
add
outsb
xchg
add
adcb
add
xchg
add
mov
xchg
add
ficoms
add
xchg
add
or
add
sub
add
add
add
push
xchg
add
fs
add
jbe
add
mov
add
mov
add
int3
xchg
add
fcoml
add
clc
xchg
add
or
add
xor
add
push
xchg
add
fs
add
jo
add
jl
add
xchg
xchg
add
cmpsb
xchg
add
mov
xchg
add
out
add
clc
xchg
add
add
add
adc
add
xor
add
add
outsb
xchg
add
xchg
add
xchg
add
rclb
add
xchg
add
add
add
es
add
cmp
add
dec
xchg
add
bound
add
jle
add
mov
add
mov
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
xor
add
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
