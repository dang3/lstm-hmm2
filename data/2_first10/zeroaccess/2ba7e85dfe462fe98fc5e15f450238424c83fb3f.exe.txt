push
mov
sub
addl
push
subl
push
xorl
lea
incl
push
push
movl
call
adc
mov
andl
push
xorl
xor
adcl
inc
andl
push
adcl
push
xorl
call
xorl
test
movl
je
push
push
push
andl
call
test
movl
je
adcl
xor
jmp
orl
push
andl
push
addl
call
test
movl
je
lea
push
call
jmp
addl
push
push
addl
push
andl
call
addl
test
movl
jne
push
addl
push
call
jmp
push
push
addl
call
andl
test
jne
andl
push
push
subl
push
sbbl
call
addl
test
movl
jne
andl
push
push
call
adcl
test
movl
jne
mov
mov
and
movl
and
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
sub
movl
xor
add
xor
lea
mov
movzbl
or
mov
lea
mov
mov
addl
mov
xor
mov
add
mov
or
mov
movzbl
sub
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
addl
xor
orl
add
andl
mov
movzwl
or
mov
adcl
xor
orl
add
movl
mov
mov
mov
subl
mov
orl
mov
negl
mov
mov
adcl
mov
orl
mov
movl
push
mov
mov
xor
movl
xorl
mov
xor
add
movl
jmp
notl
mov
xor
lea
adcl
push
xorl
mov
xor
orl
lea
sbbl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
mov
sbbl
pushl
negl
call
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xorl
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
push
pushl
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
xor
andl
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
xor
movl
lea
movl
cmp
jbe
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
mov
sub
or
mov
mov
movl
sub
andl
xor
mov
mov
mov
cmp
movl
jne
push
xorl
xor
inc
andl
push
subl
push
call
test
movl
jne
sbbl
push
subl
push
call
orl
test
movl
jne
addl
push
adcl
push
adcl
push
call
sbbl
test
jne
sbbl
push
push
andl
call
xorl
test
jne
andl
lea
sbbl
mov
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
xor
add
dec
mov
jmp
mov
test
je
xor
mov
mov
add
mov
mov
add
mov
incl
mov
sbb
mov
inc
mov
movzwl
adc
mov
mov
movl
cltd
mov
andl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
inc
adc
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
movl
mov
adcl
subl
xor
adcl
mov
or
mov
sbbl
xor
movl
mov
cmp
jne
mov
cmp
je
adc
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
push
push
pushl
pushl
call
jmp
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
jmp
movl
mov
movl
cmp
je
xor
xor
mov
sub
and
mov
mov
xor
orl
add
movl
cmp
movl
je
andl
push
xor
adcl
inc
push
push
call
adcl
test
jne
adcl
push
push
subl
call
andl
test
movl
jne
push
orl
push
push
addl
call
orl
test
movl
jne
addl
push
push
negl
call
adcl
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
xorl
mov
mov
pushl
mov
pushl
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
pushl
call
mov
mov
mov
jmp
push
xor
inc
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
orl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
movl
mov
or
push
or
mov
notl
xor
mov
push
addl
mov
adcl
add
cmp
je
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
orl
xor
subl
add
add
jmp
lahf
es
mov
fwait
icebp
sub
adc
gs
jb
jb
pop
pop
jb
adc
and
popa
lds
bound
push
test
insl
push
iret
pop
inc
cmp
jg
mov
sub
data16
imul
xor
mov
xchg
fiadds
add
insl
fldl
push
repnz
arpl
scas
sub
cmpsb
jmp
inc
and
push
icebp
adc
jo
jnp
nop
pop
cmpl
sahf
cmp
mov
shrb
push
sti
iret
andb
enter
imul
or
sbb
fadds
std
push
movsl
icebp
pusha
mov
push
inc
push
test
mov
aam
ret
jecxz
or
sbb
stc
mov
data16
push
rcrb
repnz
mov
stc
cmc
pop
popa
mov
sbb
in
pop
sbb
pop
enter
pop
pop
mov
mov
mov
mov
and
and
stos
fildl
and
sbb
mov
pop
and
dec
mov
jbe
jmp
xchg
dec
pusha
xor
rcrl
mov
pop
movsb
cmpsl
sbb
rcr
or
adc
and
push
cmpl
sbb
inc
push
cmp
push
dec
test
xor
repnz
icebp
mov
push
insb
mov
sbb
subl
sbb
bound
jae
cmp
mov
sub
mov
push
jno
fnstcw
push
sub
mov
push
imul
sti
inc
dec
sub
mov
in
sbb
das
mov
push
popl
adc
xor
or
das
adc
sub
mov
sbb
ret
loop
fadd
rclw
lret
xchg
insl
ljmp
stc
add
rclb
push
push
mov
fadds
and
mov
sbb
adcb
adc
pop
jbe
mov
pop
pushw
xor
daa
aas
pushf
imul
push
and
mov
dec
pop
mov
sub
filds
cltd
popf
xchg
and
push
push
cmp
hlt
add
js
loope
in
pop
shlb
jle
mov
bnd
or
ret
mov
decb
or
mov
inc
ja
stos
aas
ss
andb
jp
push
inc
mov
aad
ret
mov
arpl
dec
shll
ds
sbb
add
loopne
sub
hlt
scas
insl
pop
mov
lret
lock
je
ljmp
cld
out
pop
mov
push
subl
out
roll
fisubrl
push
mov
mov
data16
xor
jmp
and
mov
push
sub
nop
cli
je
jmp
sub
jns
and
rcrb
in
adc
mov
push
adc
inc
popf
xor
xor
mov
mov
fistpl
and
xchg
ljmp
pop
mov
xor
cltd
clc
sbb
lock
mov
lods
dec
rclb
mov
pop
dec
popf
xchg
cltd
pop
jl
ret
mov
mov
mov
sahf
jmp
mov
adc
push
or
or
xchg
xchg
fs
pop
mov
or
push
pop
jl
mov
fidivs
stc
mov
cltd
pop
jne
mov
ljmp
xor
cmpsl
mul
mov
push
dec
sub
jmp
or
hlt
sbb
xchg
dec
add
sbb
sub
push
fiaddl
lcall
mov
out
sub
lret
int
repnz
push
jns
cmp
xchg
mov
les
or
aad
sbb
jecxz
fs
mov
pop
mov
dec
mov
mov
stos
jl,pn
cmpsl
sbbb
loop
cli
xor
inc
call
mov
daa
mov
scas
in
ror
sub
inc
lods
or
test
mov
mov
pop
dec
xchg
and
push
fcoml
sahf
sbb
into
ds
out
shlb
mov
and
popf
je
stc
sahf
pop
xchg
aas
jg
inc
test
popa
push
jle
add
pushf
jno
outsb
fdivl
scas
xchg
repz
into
jle
mov
adc
ret
mov
and
jb
mov
inc
mov
daa
fcmovnb
loope
test
lock
ja
push
pslld
push
jb
pushf
das
dec
mov
mov
sarl
jbe
and
outsl
fwait
dec
mov
iret
filds
mov
jbe
push
imul
dec
mov
xchg
jo
push
jge
add
test
fidivs
in
fwait
sahf
jne
sbb
and
mov
les
cmpxchg
enter
cld
mov
sbb
xorl
xchg
test
int3
imul
ljmp
jl
data16
clc
jmp
lods
xchg
call
lret
adc
xchg
xor
outsl
mov
push
jg
call
movl
pop
stos
fsub
mov
pop
aam
in
pop
adc
and
xlat
and
aas
xchg
sub
inc
cmpsb
in
test
faddl
add
lods
and
mov
in
jmp
scas
jno
outsb
dec
fisubrl
aaa
push
adc
ljmp
cmp
int3
or
push
sub
fwait
push
lea
int
ret
fcomps
out
dec
neg
pusha
xor
rorb
mov
xor
mov
dec
add
nop
dec
xor
ud2
ss
outsb
push
jge
and
or
and
mov
fildll
notb
pop
icebp
ljmp
push
dec
xchg
imul
lods
add
std
adc
mov
stos
leave
out
mov
enter
xchg
insl
push
push
fisubl
inc
xchg
fisubrs
daa
mov
scas
jl
enter
cmc
xchg
aad
xchg
out
sti
lods
aas
sbb
sti
movb
mov
and
push
daa
stos
aad
add
outsb
pop
add
cwtl
insl
pop
daa
sub
lds
outsl
push
push
icebp
xchg
cmp
mov
adc
cwtl
es
sub
daa
call
out
mov
sbb
pusha
jmp
add
add
stos
loop
data16
xchg
testl
mov
and
mov
daa
outsb
jb
lock
dec
fdivrl
iret
jne
push
mov
adc
jne
jne
adc
pop
negb
cwtl
aam
and
cmp
mov
add
lods
add
xorb
pop
jns
mov
inc
jmp
push
into
sbb
jl
icebp
sahf
push
and
ror
sbb
mov
adc
out
sbb
cmpsb
ret
dec
lea
lods
pop
mov
sub
dec
inc
scas
add
lds
addr16
adc
or
je
jns
fnstenv
enter
insl
push
add
and
pop
movsb
arpl
or
ja
aas
xchg
fwait
mov
shl
fdivs
mov
or
dec
ret
jmp
mov
in
notb
ja
ret
inc
push
sbb
cmp
mov
xlat
mov
faddp
rcrb
test
xchg
push
sbb
and
sub
mov
xor
mov
ds
jbe
dec
jno
les
repnz
pop
mov
arpl
pop
mov
out
mov
mov
pop
mov
xor
jmp
push
jmp
push
and
shrl
sbb
jmp
popa
jmp
sti
jl
and
pop
adc
add
iret
aas
insb
les
fwait
pusha
rol
inc
xorb
test
cli
adc
or
loop
xlat
adc
sahf
sbb
bound
pop
push
mov
sbb
int
imull
fidivs
sub
inc
fmul
push
jle
xchg
xchg
sub
sarb
loop
xchg
xchg
push
pop
sub
test
in
in
add
ror
push
cmpsl
mov
xchg
adcl
mov
test
fs
cmp
sti
pop
xor
scas
push
xor
xor
je
xorl
or
add
sub
pop
cmc
push
mov
imulb
push
mov
repnz
or
jbe
xor
dec
faddl
dec
jecxz
test
jp
aam
sub
inc
test
dec
cmp
mov
outsl
clc
push
jb
xor
mov
or
movsl
testl
mov
stos
int
test
and
scas
lahf
add
add
out
pop
pop
scas
jle
pop
fisubrs
ret
or
lret
inc
addr16
mov
push
lods
ret
icebp
fst
iret
lods
rcll
ja
xorl
or
xor
loop
dec
cmp
lds
pop
daa
xchg
dec
pop
ret
fwait
xchg
xchg
out
repz
jae
movsl
sub
popa
mov
lahf
xchg
sub
out
fdivl
push
jae
mov
rclb
pop
add
pop
cld
ss
mov
mov
dec
aam
push
push
test
mov
repz
popa
jp
push
mov
jg
test
out
lcall
subl
incl
into
cmp
mov
outsl
xchg
push
xchg
incb
rorl
jle
stc
ret
sub
push
cmp
mov
push
fists
xor
loopne
and
repz
cs
dec
out
sub
insb
rolb
jl
out
jb
dec
insl
jnp
sub
jns
popa
arpl
out
lods
ret
in
dec
adc
ja
loop
jp
in
cld
addr16
fimull
pop
les
sub
mov
mov
adc
bound
subl
sub
lret
pop
pop
je
aad
jg
push
mov
push
dec
in
sbb
aad
bound
imul
fwait
sub
cld
push
add
dec
dec
sarl
mov
ret
mov
mov
std
jmp
push
add
xchg
repz
jnp
imul
xorl
loop
mov
gs
dec
mov
stos
add
loope
xor
std
rcrb
or
loope
mov
xlat
jp
pop
cmp
adc
lcall
push
inc
sub
xor
inc
mov
lcall
enter
pop
mov
inc
clc
push
ror
test
sbb
sarb
mov
fwait
xor
in
popa
icebp
mov
mov
fidivl
and
sbb
mov
jl
jle
sub
mov
sti
sbb
cmp
out
jge
or
jl
dec
hlt
fnstsw
push
cltd
adc
cmc
push
inc
fwait
dec
shl
lods
test
jp
push
dec
add
and
mov
aam
and
jno
in
incb
adc
in
mov
jo
push
stc
stc
lret
bound
cmp
sti
xchg
les
dec
and
push
push
lmsw
jae
ss
cmp
imul
das
imul
and
shrl
rol
or
frstor
nop
push
sbb
test
and
stos
add
mov
mov
push
iret
popa
in
pushw
add
lea
invlpg
jecxz
sbb
je
nop
sub
ret
sub
jns
mov
pop
adc
xchg
add
or
and
mov
xor
bound
sbb
out
xor
js
ds
bound
mov
mov
mov
adc
and
sbb
mov
test
ret
sbb
pop
jl
call
add
mov
jo
add
cmp
xchg
fwait
push
arpl
call
pop
pop
push
cmp
xor
sbb
ljmp
dec
lods
jne
or
and
test
iret
popa
in
jns
mov
mov
filds
push
or
adc
lock
or
ret
or
cmpsb
jmp
sub
jg
jae
cmp
push
mov
mov
fisubl
orb
loopne
mulb
ret
xchg
dec
in
adc
sbb
and
vmwrite
insb
mov
or
je
pop
je
rolb
mov
and
fistl
jae
jae
cmp
ret
xor
dec
mov
clc
or
pop
mov
mov
xchg
imul
scas
sbb
mov
inc
xchg
imul
mov
aam
inc
nop
or
bound
pop
or
notb
hlt
test
push
pop
test
test
mov
jae
movsb
jo
and
adc
pusha
sbb
daa
jle
imul
cld
iret
in
add
jmp
scas
dec
cwtl
push
pop
inc
inc
popa
or
adc
push
cmp
test
fsubl
push
mov
dec
pusha
ficoml
leave
lret
ret
lahf
fidivrl
xchg
sarb
out
jecxz
jmp
iret
jecxz
and
xchg
inc
pop
insl
popf
hlt
fisttpl
flds
jl
cmp
lea
add
xchg
adc
jns
xlat
lcall
push
loop
pusha
add
testb
jno
dec
stos
and
cmpsb
aad
popa
mov
cmc
in
xchg
jo
es
in
mov
mov
mov
rclb
push
add
fildl
data16
imulb
adc
sub
mov
inc
sub
or
arpl
jle
mov
xchg
std
mov
and
xchg
mov
mov
outsl
rcll
mov
out
pop
out
add
mov
ficompl
sub
pop
leave
stos
lret
pop
test
ja
fstl
in
aad
faddl
jno
lcall
sti
jl
or
mov
xor
test
sub
rcll
repz
add
sahf
popf
mov
mov
mov
lea
jmp
lcall
fcmovbe
xor
outsl
pop
mov
xor
push
xlat
popl
and
movsl
repnz
fs
es
inc
sbb
stos
fmull
addl
adcl
cmp
mov
sub
cmp
adc
xchg
icebp
in
mov
jnp
sbb
in
xchg
pop
mov
sub
enter
arpl
mov
dec
or
add
xchg
jae
hlt
addr16
jmp
lods
jno
loop
popa
sti
add
stos
or
out
roll
scas
loop
fistpll
mov
add
xor
jnp
fnstsw
rcll
sbb
pop
pcmpeqw
adc
cld
scas
jp
scas
xlat
enter
inc
ja
test
mov
lahf
mov
jno,pt
jno
insl
faddp
mov
repz
call
add
pop
or
out
aas
xor
inc
mov
mov
loopne
mov
xchg
imul
ret
stos
popa
mov
loopne
dec
repz
mov
fstps
or
push
push
xchg
dec
xchg
dec
cli
es
fisubrs
mov
cmp
hlt
fldenv
xchg
pop
in
es
mov
in
push
mov
daa
mov
inc
pop
nop
cmp
and
and
hlt
add
andb
dec
sub
lahf
add
ljmp
lock
pop
xor
repnz
push
xchg
repz
dec
add
imul
enter
adc
adc
out
mov
int3
ja
orl
je
insb
mov
sub
push
in
fnstenv
xor
es
lahf
arpl
pop
sbb
push
xchg
out
fistpl
mov
mov
sbb
adc
mov
mov
xchg
mov
or
xchg
mov
or
es
cld
xchg
mov
orl
jecxz
popf
ljmp
sub
fildl
clc
adc
pop
dec
xor
cmpsl
inc
xchg
push
sbb
add
ss
push
pop
stos
or
imul
and
fldcw
cmc
mov
jno
arpl
jecxz
loope
sbb
scas
into
stos
repz
loope
test
clc
lods
rorl
push
mov
add
lock
imul
leave
or
rolb
stos
adc
jns
imul
ficoms
mov
sub
pushf
aas
or
cmpsl
xlat
gs
aam
jnp
es
ja
jg
pop
mov
xchg
mov
xchg
pusha
gs
daa
mov
leave
out
addr16
repz
arpl
mov
cmp
mov
or
push
mov
or
jnp
jbe
sbb
push
shll
stos
cmpsb
in
bound
je
cmp
jae
sbbl
insl
stc
pextrw
daa
cmp
push
jmp
cmpl
stos
out
pop
mov
inc
enterw
sub
test
fists
add
popf
xor
loope
push
or
adcb
mov
cmp
lcall
jae
mov
imul
xchg
loop
lods
sbb
lds
cmp
add
aam
aad
popf
fmull
xchg
movsb
aam
mov
das
mov
mov
add
xchg
cmp
in
loop
mov
pop
xchg
mov
push
push
mov
mov
sub
loopne
ret
ret
xchg
mov
mov
cltd
cld
jb
xchg
cmp
fimull
orl
mov
jb
scas
cli
pushl
imul
jmp
out
daa
jp
mov
sti
in
fld
mov
or
nop
add
sbb
inc
or
outsb
ret
cmp
das
jnp
mov
add
add
xchg
pop
ds
std
mov
dec
mov
pop
push
sbb
xchg
and
xor
mov
jo
or
mov
pop
and
stos
xchg
push
cmc
dec
bnd
push
or
pop
jle
mov
jo
lock
push
xor
lea
pushf
xchg
lods
rcrb
xchg
jo
pop
ret
or
into
mov
in
fcmove
subl
daa
arpl
into
pushf
test
in
mov
fmuls
stc
popf
xor
test
and
test
stc
adc
add
push
sub
fisttpl
pop
repnz
shll
in
clc
es
mov
sub
loopne
rorb
push
sar
pop
stc
xchg
rcl
mov
lret
loope
cmp
and
mov
js
lods
jb
cmp
cmp
js
int3
testb
incb
xchg
dec
cmp
into
pushl
fcmovnu
addr16
cli
int3
sub
mov
xchg
sbb
inc
je
shll
popa
std
push
or
lahf
out
xchg
iret
fs
aad
test
push
outsb
outsl
pop
push
mov
hlt
out
pop
arpl
xchg
int
mov
pop
mov
mov
mov
dec
xor
aaa
cltd
dec
or
inc
mov
jns
push
in
mov
mov
mov
test
lea
lea
dec
adc
imul
or
test
jg
je
fists
push
ret
sarl
cmp
or
mov
xchg
push
and
popf
bound
mulb
in
lret
pop
dec
mov
ret
jecxz
xlat
jo
add
xchg
enter
mov
js
imul
shll
add
fimull
jbe
inc
test
clc
adc
push
mov
stc
testl
push
inc
pusha
hlt
out
sub
mov
ja
xchg
hlt
xchg
roll
sbbb
inc
cmp
insl
pop
in
lret
jmp
sarb
or
aaa
inc
jb
andl
push
mov
jbe
push
cwtl
dec
out
lahf
pop
xchg
repnz
push
fiadds
dec
mov
pop
rorb
mov
ljmp
in
xchg
mov
mov
adc
fld
ret
repz
int3
insl
xor
inc
mov
divb
push
lcall
shrl
clc
cmp
inc
xchg
push
mov
jmp
xchg
test
mov
nop
mov
stos
adcl
je
jle
daa
jbe
push
add
in
dec
rorb
rcrl
jmp
sub
cmp
sub
inc
cli
xchg
pop
inc
in
sub
pushl
ljmp
sahf
pop
jp
in
and
push
pop
or
mov
fnstenv
dec
mov
jb
xchg
cmp
aad
xor
mov
jb
js
xchg
ljmp
insb
ss
mov
out
cmp
mov
sub
push
or
lahf
xor
or
xchg
out
addb
das
add
pop
dec
mov
xchg
cltd
std
jmp
into
sbb
or
rcll
sbb
add
out
lods
pop
sbb
test
jae
pop
into
mov
pop
insb
mov
pop
or
mov
pop
cs
jge
mov
cwtl
xchg
push
shlb
gs
push
cmp
cmc
push
cmpsl
lods
mov
pop
pop
push
hlt
insb
xchg
dec
out
pusha
inc
or
js
xor
pop
add
jle
adc
pop
mov
enter
inc
ss
cwtl
sahf
or
xor
repz
xorb
jno
jnp
add
lcall
leave
setns
out
or
imul
lods
enter
andl
popf
sub
sub
adc
mov
and
jg
pop
dec
fnstenv
aaa
inc
es
pop
scas
jno
dec
daa
arpl
mov
mov
push
xchg
popf
roll
sahf
jbe
movsb
and
mov
push
mov
cs
jns
fildl
xor
dec
or
mov
xor
dec
xchg
pop
jb
xor
lcall
inc
or
les
or
cmp
mov
xchg
fwait
cmp
jb
xor
push
push
out
adc
xlat
mov
out
xor
pop
nop
pop
bound
gs
jns
jg
in
adc
int3
enter
push
test
mov
fsubrl
sub
fisttps
test
les
add
inc
cmp
mov
sbb
aas
daa
sbbb
lcall
mov
jnp
divl
xchg
add
jns
cmp
and
mov
cmpsl
hlt
fadds
dec
popf
sbb
and
or
call
mov
pop
out
push
imul
xchg
sub
sti
push
lret
popf
sub
mov
mov
xchg
xlat
inc
xor
push
lea
and
pop
scas
test
cli
or
xchg
movsb
lret
xchg
jmp
icebp
pop
bound
sar
shrl
cs
sti
insb
sub
mov
dec
push
aam
loop
dec
adc
inc
popa
or
mov
mov
cmc
and
jle
sub
push
sub
aad
mov
sbb
sub
fs
mov
pop
push
insb
popf
loopne
xor
jne
inc
sub
push
cmpsb
jg
mov
imul
pop
lcall
sbb
mov
mov
mov
jae
and
fmul
jp
pushf
add
fidivl
mov
cmc
cmp
out
call
adc
je
sub
xor
aad
shrb
mov
pop
insl
inc
sub
shlb
sarb
adc
dec
sti
jg
inc
and
aas
cmc
pop
lahf
dec
xchg
xrelease
cmp
cwtl
test
in
mov
mov
stc
fs
scas
sbb
arpl
mov
mov
shl
cmp
mov
bound
ret
fistps
adc
mov
pop
adc
push
cld
mov
aam
inc
les
mov
inc
inc
pusha
popa
xchg
mov
jo
add
push
fmul
movsb
pop
jl
gs
arpl
out
push
cmp
xor
mov
lock
jmp
fsubr
sahf
cmp
pop
ret
cltd
in
in
xchg
out
cmp
mov
and
loopne
lahf
mov
and
adc
lock
xlat
popl
pop
lret
outsb
out
and
add
cmp
cmp
test
negb
xchg
cmp
xchg
outsb
lods
ds
adc
and
mov
test
sbb
sbb
sbb
rcrb
inc
dec
xor
ret
inc
out
and
inc
pop
cmp
mov
repnz
jns
dec
xchg
sub
jp
push
mov
or
inc
xlat
fisubs
xor
sbb
stos
push
pop
mov
sub
dec
ret
out
iret
adc
jl
mov
xchg
insl
jmp
sahf
stos
dec
mov
aad
aad
sub
and
insl
loop
mov
push
lcall
scas
scas
xchg
jbe
inc
scas
cmp
lea
jbe
sub
mov
rclb
ja
bound
inc
pop
xor
aad
shll
adcl
mov
fimull
jp
and
mov
push
fiadds
getsec
arpl
fadd
xor
scas
sbb
mov
jmp
add
mov
test
int3
mov
mov
std
cmp
dec
pand
mov
mov
movsb
in
icebp
adc
repz
mov
and
jae
cwtl
pop
clc
insl
jns
mov
arpl
mov
lock
test
in
and
outsb
int3
adc
sub
ss
imul
push
loope
mov
lods
jne
int
fbld
xchg
imul
jecxz
icebp
cltd
cmc
push
bswap
push
into
sub
jmp
inc
cmp
aad
cli
fiadds
fwait
inc
push
cmc
repnz
jmp
xor
xor
lea
cmp
sub
ja
fwait
aam
adc
mov
out
xor
or
and
mov
out
dec
sub
xor
inc
gs
jnp
out
xchg
or
aaa
lods
in
ds
int
sub
add
std
lahf
popf
dec
jge
mov
mov
iret
fidivs
xchg
add
in
popf
xchg
mov
stc
insb
push
cmp
cmp
data16
int3
inc
push
aad
repz
pop
decl
lcall
mov
cs
in
push
push
cmp
sbb
popa
rcrl
mov
cmp
jns
or
lret
rcll
addr16
xchg
arpl
ds
mov
dec
lahf
or
loop
shlb
rcll
adc
xchg
push
push
mov
insb
je
or
ja
dec
scas
jg
rcll
add
fnstcw
decb
mov
sahf
int
bound
fdivrl
jb
shll
mov
scas
cmp
out
xor
notb
outsb
jmp
lret
rorb
mov
std
sub
iret
sbb
cmpl
dec
jb
xor
fsubs
dec
or
mov
mov
sbb
push
dec
cmp
ss
arpl
roll
addr16
ss
mov
adc
dec
cmp
dec
xor
clc
add
dec
inc
rolb
push
jns
lods
loope
mov
or
add
mov
fst
sbb
movsb
fmulp
cmpsl
ljmp
rcrb
imul
test
icebp
or
pop
push
jg
imul
and
xchg
lods
int
xchg
push
loop
insl
inc
adc
dec
repnz
xchg
mov
mov
mov
push
add
daa
xchg
stc
mov
xor
mov
mov
mov
mov
out
lahf
sbb
mov
push
mov
lret
dec
sub
sbb
cmp
adc
sbb
scas
bound
lcall
pushl
cwtl
mov
mov
pop
lds
cmpsl
loopne
mov
sahf
add
repnz
rorb
and
fisubl
int3
js
or
and
imul
jns
push
push
fmul
dec
inc
cwtl
cwtl
push
lods
bound
dec
mov
pusha
ja
and
scas
xor
or
jmp
hlt
cmpsb
xlat
mov
shl
fwait
pop
add
ss
nop
sbb
pusha
sbb
in
mov
fcomp
inc
data16
fisubl
xchg
lock
push
call
sub
pushf
mov
dec
test
and
out
insb
add
call
or
loopne
pop
push
test
mov
sub
fbstp
cmp
cwtl
push
cmc
xchg
pop
mov
sti
fldenv
pop
jl,pt
xor
xchg
or
and
or
push
or
jo
xor
cmp
push
push
inc
mov
lcall
aad
js
xchg
mov
push
mov
leave
dec
xor
add
jns
mov
ret
cmp
xor
inc
adc
mov
sbbl
arpl
mov
int
into
clc
inc
jns
rcrl
xchg
ljmp
loopne
fistpll
sti
or
add
mov
je
push
sbb
js
or
mov
fildl
insb
jnp
xlat
sti
pop
sbb
mov
push
std
jae
pop
icebp
jae
mov
and
ljmp
out
sti
in
pop
insb
lea
mov
add
push
sbb
jp
or
int
in
mov
repz
jmp
jnp
negb
jg
mov
push
aas
or
pop
push
imul
jg
imul
ret
out
lods
pop
popa
shll
cmp
mov
cmp
je
push
jmp
mov
mov
inc
loopne
in
sub
pop
inc
addl
cmp
pop
jg
jbe
je
sarb
lcall
sbb
pop
xor
outsb
inc
jp
or
loopne
jo
push
int3
clc
add
pusha
dec
adc
jbe
je
ss
jno
dec
pushf
inc
adc
out
cmp
jns
inc
andb
lods
ljmp
js
lock
insl
jb
pop
add
pop
jns,pn
call
mov
scas
cmp
adc
push
mov
mov
lods
pop
jge
das
imul
inc
fcmovnb
out
jp
test
mov
mov
andl
ss
lret
aam
or
lock
sahf
ret
mov
lcall
add
and
xchg
pop
cmp
call
xchg
adc
out
push
push
sbb
fiaddl
fisubs
sub
pop
sbb
xor
cmc
rcrl
cwtl
insl
shl
stc
fcmovu
dec
jle
iret
pop
mov
pop
mov
outsl
jbe
jl
rcrb
cwtl
das
out
outsl
or
pop
iret
adc
or
jb
xchg
mov
mov
mov
ja
aad
scas
sahf
and
scas
mov
popa
dec
cmc
repz
xchg
lods
push
sub
inc
mov
sbb
std
shll
pop
mov
mov
xchg
jb
into
mov
cwtl
daa
adc
rolb
sbb
sbb
sahf
mov
mov
xor
adc
lret
int
roll
out
adc
add
push
add
fdivr
adc
xor
addl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jb
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
jmp
das
cmp
test
subl
in
pop
jb
pop
pop
jb
sub
shlb
xchg
xor
fwait
outsl
sub
andl
sub
je
dec
negb
jge
dec
cmp
xor
sahf
adc
xchg
int
fnsave
shl
int3
cwtl
cltd
test
xor
es
loope
into
dec
repnz
jge
ja
adc
decl
cltd
xor
out
and
inc
sub
mov
mov
inc
lret
das
push
arpl
sub
add
test
test
pop
test
jnp
fucomp
cwtl
jae
xchg
mov
sub
or
and
cwtl
jne
mov
jbe
sbb
call
and
rcrl
rclb
das
outsb
inc
mov
out
in
push
sbb
mov
cmp
xchg
and
xchg
jp
stos
dec
mov
fdivl
xor
push
inc
mov
out
mov
shll
mov
movsl
movsb
jnp
sub
repz
loop
xlat
and
sti
pop
mov
adc
add
popf
adc
lods
lea
pop
mov
imul
xchg
loop
mov
pop
mov
lret
mov
push
jmp
lcall
sbb
dec
mov
iret
xor
fdiv
aaa
dec
sti
jg
into
and
int3
arpl
and
xchg
mov
cwtl
daa
mov
pop
inc
and
mov
sti
out
xchg
les
jmp
mov
enter
adc
cmp
mov
push
cld
jb
aas
mov
or
xor
mov
push
cltd
xor
pop
dec
cltd
test
addr16
adc
mov
pop
out
push
jge
cmp
push
mov
outsl
mov
pop
cmp
in
fsubrl
lds
lret
cmp
arpl
fisubs
pop
int
sahf
and
enter
mov
es
adcb
icebp
dec
jno
lods
arpl
sti
insl
shlb
stc
ss
imul
mov
loop
jns
out
push
in
fbstp
dec
insb
pop
or
cmp
call
xor
push
movsb
add
inc
sub
outsl
or
xor
cli
pop
int3
into
cmp
lea
in
js
addb
push
lcall
imul
lahf
jns
adcb
dec
inc
fcom
inc
xchg
xor
sub
or
or
movsb
or
push
pop
mov
paddusb
lret
mov
popa
fiadds
mov
add
dec
push
sub
xor
lods
in
cmp
cwtl
push
pop
jp
cli
mov
aam
cmp
pop
mov
test
repnz
pop
outsb
push
out
mov
mov
pop
mov
cmpsb
xor
mov
fucomip
hlt
sub
dec
mov
adc
fisttpl
xchg
mov
decb
jb
fldcw
mov
cwtl
stos
mov
pop
jno
xchg
cli
push
and
push
mov
mov
cmp
inc
leave
imul
test
push
inc
data16
pop
inc
stc
pushl
mov
imul
mulb
xchg
xchg
inc
xor
sbb
mov
call
jl
sbb
jg
lock
cltd
fisttps
jno
inc
lea
or
sbb
insl
aaa
push
jno
mov
mov
jle
fistl
xchg
adc
lock
sub
jo
repz
mov
scas
sbbl
fcoms
scas
push
fidivs
cmp
out
mov
mov
test
push
fimull
mov
xchg
mov
fwait
ret
mov
stos
in
cmp
cmp
and
inc
mov
outsb
data16
leave
push
dec
test
test
xchg
and
push
pop
js
test
mov
cmpsl
int3
jl
add
insb
pop
or
jnp
fdivs
push
imul
call
dec
dec
xor
push
sub
jnp
mov
cmp
ljmp
ret
push
pushf
or
and
add
loop
shll
fmuls
cwtl
rolb
xchg
cltd
adc
mov
sub
cli
push
ljmp
lret
and
lock
sub
imul
push
loope
jb
adc
test
inc
cmp
push
repz
pop
add
repnz
test
inc
pop
repz
neg
daa
test
pop
xchg
xlat
lock
fs
icebp
lds
add
scas
test
push
jge
xchg
sti
push
adc
mov
ret
sbb
rorb
test
dec
les
pop
sub
mov
sbb
cmp
mov
mov
fdivrl
aam
xor
push
rorl
push
cmp
notl
pushf
jo
xchg
sub
hlt
ret
divb
xchg
js
jne
push
notl
fcmovnb
cs
lods
push
xlat
cli
mov
jecxz
add
mov
sub
pop
out
lds
xchg
xor
sbb
and
dec
call
frstor
leave
or
ljmp
dec
dec
call
lods
pop
xchg
push
inc
sahf
mov
insb
xchg
incl
push
mov
and
inc
cmp
je
or
and
rorb
testb
ljmp
xor
pop
sahf
lret
sbb
stos
adc
bnd
xchg
pop
daa
push
or
lods
push
cli
out
xchg
fs
out
jmp
lock
cmp
jns,pn
es
mov
scas
repz
das
sbb
into
fwait
cmpl
push
lods
movsb
mov
es
xlat
cmpsl
test
cmp
sub
test
xor
pushl
cmp
out
xchg
fwait
pop
hlt
das
loopne
test
aam
or
mov
je
in
aas
sub
movsb
nop
jmp
ss
outsb
mov
testb
xchg
dec
aas
outsl
jge
ficoml
gs
cmp
popf
andl
cmp
dec
inc
or
pop
outsl
lret
add
cmpb
dec
ret
mov
cmp
dec
sub
or
sub
ss
xor
movsl
jb
sbbb
loope
cmp
xchg
cmpb
outsb
in
push
aaa
push
mov
addw
pushf
pop
insl
es
mov
lea
mov
push
fs
dec
xchg
scas
fldl
xchg
movsb
xor
push
mov
in
or
out
jo
add
xchg
or
mov
xor
add
adcl
cmpsl
ss
adc
push
jns
lret
pop
dec
add
inc
pop
pushf
push
in
mov
out
movsb
adc
sub
push
pop
inc
xchg
mov
mov
addr16
cltd
call
sbb
mov
out
push
sub
cld
xor
adc
jp
jb
add
insl
icebp
bound
roll
rorb
push
jle
aad
rcll
add
pop
fdivl
mov
js
out
jg
hlt
sbb
in
popa
test
inc
sbb
jge
dec
sbb
sbb
bound
sbb
mov
and
movsb
sbb
test
push
add
lock
loopne
inc
xchg
or
mov
adc
arpl
mov
shlb
jmp
cs
loopne
inc
lods
sbb
and
nop
xor
adc
jmp
xor
les
mov
mov
call
lret
xchg
and
fs
in
xchg
aam
ficoml
aad
sbb
cmp
mov
adc
je
lds
fucomip
and
loop
xchg
imul
scas
pop
pop
enter
jg
xor
fsub
cmpsb
sbb
lret
pop
orl
leave
pop
sbb
pop
pop
lret
xor
mov
jns
nop
mov
mov
or
test
inc
xchg
out
pop
push
mov
js
std
jo
inc
inc
pop
movsb
cwtl
and
push
jno
or
and
int3
popf
sahf
jl
dec
ds
cmp
aaa
mov
imul
into
jae
xor
adc
cmpsb
jae
aad
cmp
ja
or
nop
out
mov
sub
adc
inc
in
push
dec
stos
mov
xchg
les
cmp
add
push
mov
in
or
ds
pop
daa
mov
and
scas
icebp
daa
ss
xor
xor
fildl
or
and
out
call
mov
jns
sahf
sbb
push
incb
dec
stos
lcall
mov
test
sub
cmpsb
ljmp
out
sti
cmp
mov
das
nop
jns
or
cmpsb
mov
sbb
adc
cmpsl
fwait
in
rolb
jo
and
xchg
sbb
adc
test
mov
add
popl
je
mov
lods
add
inc
mov
repnz
push
sbb
push
scas
shlb
inc
mov
in
push
in
bound
inc
out
out
push
and
and
daa
data16
pop
jbe
xor
sarb
je
dec
push
std
mov
incl
imul
sbb
iret
popa
iret
mov
inc
jae
jp
test
xchg
inc
inc
sbb
push
das
xor
pop
and
sbb
fcmovnb
sarb
sub
insl
je
sub
add
stc
inc
int
fwait
sub
ja
push
lods
mov
or
pop
jl
ljmp
lret
jb
sbb
outsb
xor
repz
stos
push
sti
jo
push
fcom
lret
or
xor
jns
ds
push
pop
ret
add
jbe
mov
test
dec
or
push
sub
pop
xor
or
dec
lods
aaa
test
rorl
pop
push
mov
lock
add
repnz
out
pop
lods
andl
sbb
enter
lret
vcmpsd
shl
mov
lods
arpl
imul
sbb
adc
fistps
in
leave
ja
daa
mov
and
test
lcall
pop
jp
mov
mov
in
pop
mov
and
fstp
loopne
loopne
xchg
mov
push
adc
jne
testl
dec
add
lret
inc
mov
lahf
rep
and
push
sub
add
xchg
mov
cmp
push
sbb
dec
aaa
sub
push
lcall
cmp
xor
xchg
inc
mov
cmpsl
lret
pop
dec
mov
xchg
lock
sub
jg,pt
fwait
pop
pusha
fwait
pop
test
test
lods
xor
shll
ret
ss
pop
adc
jmp
sahf
loopne
pop
jle
aad
sbb
dec
or
push
inc
fdivs
dec
xorl
cmpsb
pop
inc
scas
iret
and
sub
int3
mov
iret
imul
cmp
sub
push
or
add
rol
stc
into
push
pop
dec
xor
add
push
lahf
sbb
and
mov
outsl
cmpsb
mov
adc
xchg
mov
xlat
jb
lret
adc
mov
shl
mov
lret
std
int
lret
cmp
sbb
inc
lret
push
pop
outsb
cld
stos
aad
jl
into
xchg
aam
push
gs
mov
fstpl
sbb
adc
clc
paddd
mov
ljmp
push
popa
ja
pop
shrl
sub
fsubrs
mov
insl
or
xchg
cli
movsb
ss
daa
add
movsb
jle
test
cmp
dec
movsb
jge
and
lock
jne
in
fiadds
shrl
push
imul
or
lods
cmp
divb
adc
fcomip
jns
movl
mov
xchg
dec
push
adc
in
push
neg
xor
shll
pop
xorl
in
sbbb
repz
aad
mov
xor
dec
or
aad
stos
dec
jge
mov
xchg
sbb
cmpsb
aas
movsl
sbb
ja
sub
xor
inc
inc
push
lods
sar
mov
repnz
cli
inc
clc
and
lds
mov
mov
xchg
push
movsl
mov
xor
cs
or
daa
lea
dec
data16
pusha
pop
xor
movsb
mov
hlt
out
int3
xchg
mov
pop
pop
pop
mov
mov
cltd
sub
jo
std
pop
mov
inc
push
xchg
pop
pushf
clc
xor
shrl
jmp
popf
fistps
cmp
add
push
push
jecxz
inc
loope
pop
rolb
insl
push
imul
fisttps
dec
movsb
cmpsl
nop
pusha
jo
lock
push
push
xor
lea
js
in
sarl
dec
ss
mov
add
inc
mov
push
inc
outsb
loopne
mov
jl
lret
inc
jns
or
adc
scas
jo
xor
mov
jg
mov
sbb
add
aas
sbb
inc
sbb
inc
adc
lcall
push
dec
inc
jae
stos
xor
jmp
shrb
sbb
nop
scas
rcl
ja
lret
mov
jle
pop
dec
push
inc
mov
lods
xor
stos
xchg
jg
ja
insl
pushf
cmp
or
sbb
mov
mov
aaa
orb
inc
loopne
cmp
lods
mov
lahf
push
js
fcmovb
cld
and
push
stc
scas
shrl
inc
das
cmp
cli
jge
pushf
cli
mov
pop
jp
xchg
loop
sub
pop
adc
sbb
mov
negb
xchg
in
shl
icebp
pop
inc
fiaddl
add
loop
mov
rorl
jae
iret
xchg
xor
or
dec
adc
imul
hlt
icebp
mov
sub
mov
call
int3
out
mov
or
fiadds
xchg
test
mov
sbbb
add
jb
scas
lds
leave
adc
sub
sub
pop
push
ja
mov
ret
out
and
insb
xor
outsb
stos
out
mov
and
dec
push
hlt
jge
in
jl
js
xor
xlat
mov
jle
dec
in
lret
xor
test
mov
or
mov
loopne
pushf
inc
or
xchg
movsb
test
in
sub
mov
rclb
imulb
imull
mov
lods
cmc
sarl
mov
dec
pop
xchg
movsl
es
xlat
xchg
pop
mov
xor
hlt
inc
cmpsl
notb
dec
pop
decl
clc
adc
sub
mov
js
pop
iret
andb
das
mov
shrl
fldl
jne
jg
out
pop
cmp
inc
dec
dec
aam
les
lock
enter
pop
add
mov
imull
mov
sbb
cmp
sbb
adc
sbb
cld
pop
push
sbb
xor
sbb
cli
in
incb
jae
mov
repnz
rolb
mov
test
pop
or
pusha
xchg
jbe
int3
jge
push
cli
mov
sbb
push
lret
mov
sahf
out
std
cmp
sbb
aaa
xlat
push
xor
cmp
out
add
in
push
lods
xlat
sahf
dec
addl
shlb
dec
mov
jle
pop
xor
xchg
lret
cltd
test
aas
lret
pusha
out
push
dec
daa
pop
add
dec
xchg
xchg
jno
inc
push
push
sbb
ljmp
cmp
pop
jg
sarl
fst
fdivl
and
sbb
mov
mov
ret
sbb
mull
adc
js
out
enter
sub
inc
sub
test
inc
pushf
fsubrl
out
and
call
mov
sub
out
sarb
fucomi
sbb
insb
popa
aas
imul
mov
pop
es
out
shr
scas
popa
jg
cmp
cmpsb
push
outsb
ret
imul
orb
insb
cmp
fstl
adc
mov
ret
jbe
mov
jecxz
sub
mov
xchg
mov
pop
loopne
lods
jmp
inc
dec
fucom
out
fdivrs
sub
mov
inc
push
and
subl
xchg
aas
mov
and
jl
pop
loop
rorl
rcll
xor
and
out
mov
imul
pushl
data16
and
mov
push
mov
or
mov
outsb
es
outsl
jp
mov
mov
lods
scas
sbb
outsb
mov
insb
xchg
dec
push
pop
ljmp
outsb
fdivrl
add
jle
pushl
jnp
sbb
stos
xor
and
je
pop
jg
insl
xor
and
aaa
in
push
or
cli
inc
pop
daa
cs
bound
movsb
cs
leave
adc
sbb
cmpsb
and
push
add
scas
push
in
jnp
cmpsl
in
sub
cltd
sbb
inc
lods
dec
inc
cltd
sub
test
push
sbb
sbb
sbb
mov
popa
mov
adc
je
jge
jno
add
xchg
pop
lods
out
ja
sub
imul
leave
mov
les
std
or
out
sbb
cmp
adc
xor
inc
in
mov
mov
into
xchg
ficoms
mov
aad
and
aam
sub
add
out
inc
arpl
repnz
push
pop
mov
push
sbb
jne
jle
test
pop
pushf
sbb
sbb
loopne
adc
mov
or
out
jle
out
cmp
jno
xor
or
ljmp
fxtract
push
insb
daa
dec
cmp
sbb
aaa
out
lock
outsl
cmp
lret
fidivrl
jno
fistpl
xor
inc
pusha
das
mov
imul
in
gs
dec
es
dec
and
cmc
adc
sub
ljmp
bound
and
es
jmp
test
cltd
push
clc
mov
pop
inc
cmp
fstpl
movsb
inc
por
xchg
cs
outsb
push
fmull
imul
push
sub
sub
and
mov
push
lahf
int
or
mov
adc
inc
mov
add
xor
popa
ljmp
inc
add
add
mov
fists
aam
cmp
insl
pop
mov
push
mov
in
or
mov
sti
es
jae
popf
fdivrs
lret
mov
cmpsb
imul
shll
jno
xchg
cmp
fldt
imul
cltd
add
xlat
fistl
jno
fst
lret
jl
int3
mov
pop
cwtl
and
cmpsl
out
pop
push
pop
add
pusha
xchg
stos
scas
lret
out
fimuls
sti
sarb
push
push
jno
sub
jo
je
cmp
psubq
cld
xor
pop
bound
sub
jbe
xor
xchg
dec
xchg
fsqrt
jno
mov
lock
and
rorb
nop
out
sub
fiadds
mov
dec
jge
and
adc
fpatan
repz
or
pop
push
add
xor
mov
xor
xchg
lea
pop
movsb
xchg
jp
and
sbb
dec
xchg
fstpt
arpl
mov
jb
sub
test
dec
mov
jge
rcrb
add
mov
in
mov
test
xchg
shll
xchg
mov
and
shlb
jl
xchg
dec
mov
inc
jmp
mov
addr16
sahf
call
filds
das
rol
fwait
imul
inc
or
mov
lea
std
test
ret
push
and
mov
mov
mov
cmpl
mov
std
sub
fsubl
lea
adc
mov
inc
test
push
mov
fs
or
mov
enter
xchg
iret
adc
xchg
rorl
jne
xor
in
test
mov
xchg
insl
sbb
mov
mov
aas
pop
sarb
add
pop
or
push
jnp
cltd
and
dec
mov
pop
fidivrs
aaa
in
xchg
out
imul
mov
mov
mov
popa
insb
cmp
stos
subl
push
or
fidivrs
clc
or
rcl
push
jno
ljmp
and
add
cmpsl
or
loop
mov
push
std
out
ds
mov
pop
out
add
pop
cmp
es
inc
jge
daa
int3
mov
mov
pop
xor
aam
cmp
mov
and
jne
dec
sub
inc
jbe
std
push
jb
out
pusha
push
cmp
lea
in
insl
std
sbb
fdivrl
fs
sbbb
fiaddl
xor
xchg
xor
in
rcrl
lahf
and
mov
into
mov
in
mov
ja
mov
sub
arpl
mov
mov
lahf
adc
cmpsb
pop
inc
cmp
sub
iret
jecxz
push
insb
int3
es
ja
scas
jmp
iret
sub
jno
mov
xchg
dec
adc
out
les
sbb
es
pop
and
clc
pop
outsl
mov
xchg
stos
int3
jmp
jmp
sbb
sub
mov
test
imul
dec
sub
dec
loop
mov
popf
sbb
cmp
jbe
fsubs
sub
icebp
adcl
test
orb
gs
cmpsb
pop
xor
push
rclb
scas
sub
sbbl
sub
outsb
mulb
jnp
clc
lcall
push
in
push
out
in
fcmovb
mov
sbb
xchg
loope
pusha
mov
idivl
in
add
xchg
mov
adc
adc
repnz
into
in
and
testb
shrb
inc
insl
test
xchg
xor
and
xor
mov
inc
data16
clc
pop
jne
mov
lret
sub
add
mov
pop
out
mov
lock
mov
mov
aas
shll
add
or
sbb
xor
loopne
inc
mov
enter
repnz
jb
mov
imul
shll
mov
movsl
loope
cmp
fnclex
fisubl
daa
jne
inc
push
sbb
sbb
popa
jb
lret
loope
pop
loope
imul
out
mov
xchg
push
cmp
push
out
call
je
scas
dec
in
cmpb
mov
add
xchg
mov
les
jns
sahf
mov
pslld
inc
ds
shll
xor
test
sbb
in
xor
repnz
fsubrl
divl
rol
xor
mov
mov
icebp
mov
out
adc
pushf
cli
fistl
fstl
dec
jns
sbb
mov
sbb
jno
lcall
mov
push
dec
mov
loop
fcompl
out
mov
nop
outsl
mov
sbb
inc
mov
nop
xor
jnp
aas
xlat
pop
decl
outsb
lods
fadds
loope
add
xchg
xchg
popf
jg
test
imul
lea
nop
mov
jecxz
icebp
xchg
mov
sub
jmp
xor
sbb
fwait
imul
dec
mov
jbe
outsl
add
inc
dec
adcl
dec
sbb
mov
jge
inc
in
sbb
aam
pop
outsb
hlt
incb
jmp
sub
cmc
lods
xchg
hlt
pusha
push
loop
jb
push
icebp
xorb
add
and
fsubrl
xchg
jmp
ret
adc
in
mov
mov
and
mov
ficoml
jmp
popf
xor
or
xor
int
ljmp
cmpsl
adc
into
dec
xor
jbe
inc
xor
ja
cmp
pusha
push
dec
stos
cmpsb
xor
int
xor
adc
lcall
cltd
mov
cld
aad
scas
lahf
daa
mov
mov
xchg
hlt
insl
jle
and
lcall
add
cld
aaa
fsubrs
daa
jl
cmp
mov
aas
or
addb
push
xlat
or
cmp
jbe
test
push
jp
lods
mov
cmp
iret
and
cmp
and
cmp
fstps
dec
push
inc
xor
out
jmp
pop
cs
xchg
ficoms
mov
mov
sub
jno
stos
xorl
ss
mov
lds
mov
add
mov
pop
xchg
orb
jecxz
mov
and
jle
lret
in
sbb
into
mov
add
xor
es
adc
nop
daa
shl
popa
divb
or
mov
addr16
pop
cli
outsb
dec
stc
movsb
pop
add
xor
test
fidivl
jmp
sar
xlat
xchg
or
call
jbe
arpl
leave
add
orb
out
ret
jmp
jns
mov
negl
add
out
sub
push
fcmovbe
mov
or
or
pavgw
into
sbb
and
leave
int3
pop
xchg
ss
aas
gs
fwait
inc
test
push
jle
lahf
popf
mov
cmp
clc
and
movsl
pop
movsb
out
mov
les
dec
push
lock
jnp
lea
cmp
ss
jb
xor
jae
cmp
mov
xor
imulb
lds
repnz
inc
js
nop
call
aam
jecxz
pop
push
jo
or
add
cmp
cwtl
mov
vcvtps2pd
iret
push
lods
xchg
loop
or
and
mov
and
aam
out
cli
push
das
aaa
mov
cltd
mulb
add
jle
in
pop
iret
jge
adc
jg
dec
jno
lret
add
pop
adc
mov
pop
and
ficompl
xor
sbb
hlt
dec
in
inc
or
fisubrs
xor
push
jo
out
int3
icebp
xor
outsl
push
push
sub
pusha
and
imul
jbe
or
bound
aas
mov
inc
adc
mov
aad
adc
outsl
pushf
sbb
icebp
or
sub
cli
xchg
frstor
jg
pop
jg
push
in
and
repz
xchg
stc
sahf
pop
push
or
cltd
xchg
mov
cmpb
jne
aam
adcl
dec
lret
cltd
notl
push
ds
cwtl
cwtl
lds
cmp
ds
lock
dec
adc
loope
into
mov
xlat
data16
dec
sub
mov
pop
subb
out
push
pop
lahf
push
mul
jl
out
mov
lcall
jae
cmp
scas
mov
pop
pop
mov
icebp
fcmovnbe
pop
out
add
imul
xor
lahf
popf
add
and
int3
jne
mov
jl
cmpsb
rcrb
mov
or
mov
inc
mov
loope
insb
sub
shlb
int3
dec
adc
daa
subl
add
lcall
mov
jno
in
adc
push
dec
pop
mov
inc
stc
repz
sbb
jno
stos
jge
push
cmp
mov
fcmovnb
push
stc
in
dec
xor
dec
test
cmp
gs
or
push
dec
aaa
adc
jbe
cmp
add
es
inc
cmp
daa
adc
mov
fimuls
inc
jo
add
ja
movsl
sbbl
jl
loopne
xor
fdivrl
sub
jg
mov
dec
loop
roll
mov
mov
into
outsb
or
ret
and
pop
lods
mov
xchg
imul
sbb
pop
mov
movsl
iret
sar
test
adc
fs
push
std
jo
push
and
ret
or
les
and
mov
push
mov
mov
pop
push
add
scas
imul
popf
xchg
push
inc
loope
jle
adc
sbb
iret
xor
rcrb
ret
cmp
in
mov
mov
movsl
cwtl
fisubrl
in
scas
lods
inc
mov
fsts
movsw
lahf
pop
lret
mov
inc
lods
mov
add
std
stos
outsb
pushf
jnp
dec
test
push
les
inc
add
fs
xchg
mull
test
push
mov
out
mov
sub
shlb
movsl
adc
mov
dec
leave
dec
test
add
cltd
lock
aas
in
dec
cs
adcb
inc
sub
leave
movsb
or
sub
fmull
cmp
movsb
jl
imul
mov
xchg
pop
and
adc
lds
clc
add
sub
repnz
je
mov
out
ja
out
cld
push
mov
push
lock
mov
xor
dec
sbb
sub
push
push
pop
mov
xor
fnstenv
push
shl
lahf
jge
sub
cld
cmc
jnp
ret
pop
into
sub
daa
sbb
and
iret
dec
subb
jae
lds
mov
int
cmc
jne
aad
cld
xchg
test
popf
pop
cmc
data16
lcall
cwtl
push
mov
mov
pop
movsl
ja
push
dec
lcall
cli
mov
xor
jbe
int
and
adc
loope
sbb
dec
test
add
sub
adc
in
fsubs
jae
adc
aaa
mov
dec
mov
fimull
add
push
sub
fnstcw
ret
ja
and
xchg
shrb
inc
test
adc
dec
out
fldl
mov
jecxz
dec
mov
cmpsl
aam
addl
fmul
xor
sbb
and
and
lahf
pop
imul
xchg
xchg
mov
lea
shll
cli
sub
mov
int3
mov
sahf
out
add
jb
xor
sbb
mov
fdivrl
or
in
ds
xchg
adc
scas
outsb
inc
loope
pop
sbb
lock
jle
arpl
bound
push
std
push
les
loop
mov
outsb
jg
out
cmp
and
loope
lods
push
aad
lahf
subb
nop
pop
mov
mov
mov
aaa
jae
cmp
jae
notb
cwtl
cmpsl
dec
test
lret
enter
jns
lea
push
repnz
add
mov
push
rorb
inc
pop
stos
xchg
cmp
mov
fadd
outsb
enter
hlt
call
shl
add
mov
or
test
ret
dec
sub
pop
mov
xor
mov
mov
pop
dec
mov
and
xor
test
adc
lods
pusha
jg
sbbl
sub
push
xchg
xor
cmpsb
pop
sub
xchg
sbbl
lahf
jecxz
mov
mov
out
dec
aam
cli
int
into
imul
inc
xchg
pop
push
lret
idivl
clc
dec
xchg
lea
inc
pop
or
push
dec
mov
notb
mov
cmp
xchg
jg
ret
aas
push
and
cmpb
loopne
xor
test
inc
mov
dec
ljmp
sbb
dec
inc
or
ss
out
jno
sti
cmp
push
lock
aam
jb
cwtl
enter
lea
push
mov
in
fdivs
inc
dec
add
push
outsl
push
addl
add
xchg
pusha
loope
jns
scas
xor
rorb
cmpsb
testb
mov
sbb
pop
pop
leave
ret
push
mov
push
or
movl
mov
not
movsbl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
mov
sbb
sub
mov
xor
movl
cmp
movl
jne
xor
mov
orl
push
mov
add
mov
mov
mov
xor
add
jmp
mov
lret
mov
mov
test
jb
adc
jb
inc
cmp
aaa
pop
ljmp
xchg
js
sti
dec
push
xchg
imul
sub
adc
aaa
repz
add
inc
and
sti
adc
xlat
shll
aaa
and
or
adc
daa
in
sarl
inc
notb
xchg
imull
cli
flds
test
adcb
mov
pop
sub
aas
test
test
and
rcl
addr16
mov
std
or
pop
out
aaa
fs
xor
push
push
jno
insl
adc
and
mov
inc
adc
mov
jecxz
loopne
jbe
stc
xor
fcmovnbe
lea
cmp
pop
pop
xchg
pop
int3
pop
and
dec
or
jmp
mov
xor
pop
sub
stc
lret
movsl
inc
and
pop
push
or
add
popf
push
xchg
adc
lock
push
adc
dec
call
cmpsl
add
and
dec
mov
and
push
xchg
xchg
and
aaa
in
in
movsb
push
jmp
clc
inc
or
and
inc
pop
std
std
ret
xor
repnz
andb
lcall
pop
mov
cmp
icebp
push
adc
lods
push
mov
iret
sbb
shrl
popa
mov
cltd
push
movsb
fisubs
jb
adc
arpl
inc
sahf
test
dec
mov
xor
xor
aaa
jo
mov
add
and
popa
int3
mov
jns
xchg
lds
and
sub
nop
jne
stc
cmp
nop
push
dec
sub
roll
cwtl
xor
sbb
add
push
inc
in
popf
fldenv
xor
hlt
jae
sbb
test
add
in
mov
pop
pop
fcmovu
vmovddup
push
mov
testl
int
ljmp
mov
xor
push
lods
je
xor
xor
dec
arpl
sbb
cmp
pop
mov
subb
sbb
or
out
pop
xlat
or
sbb
pop
cli
or
push
daa
mov
mov
mov
dec
xchg
jmp
pop
jo
iret
mov
js
in
aas
push
or
ja
fcomps
inc
push
aas
add
sub
pop
sub
inc
fiadds
mov
enter
pop
inc
cmp
fstpl
cmp
sub
jne
jecxz
sbb
out
nop
in
mov
push
outsb
cmp
xchg
jmp
cmp
pop
add
fcmovnu
loop
test
mul
test
aaa
lea
mov
mov
jno
filds
and
inc
push
enter
and
mov
insb
mov
adc
and
mov
sbb
mov
out
into
movsl
aaa
outsb
mov
cmp
lods
stos
cmp
mov
adc
lret
out
iret
xchg
mov
ret
or
inc
push
jno
dec
jae
ret
push
pop
mov
add
les
and
xchg
adc
fisttps
ljmp
sub
adc
aaa
pop
es
mov
or
bound
jne
pop
inc
mov
fdiv
test
inc
jle
cmp
pop
loop
jb
jb
out
in
insb
or
sahf
test
pusha
add
rcrl
test
mov
sbb
xlat
lods
xor
je
xor
mov
sub
inc
lret
popa
enter
incb
mov
inc
or
mov
ja
xor
xchg
fidivl
dec
cli
mov
in
je
shrb
rorb
mov
hlt
outsb
rcrb
cltd
ljmp
lods
movsl
ret
sub
cs
ret
add
and
cld
pop
mov
and
shl
dec
or
xchg
add
xor
lods
push
ficomps
lret
out
mov
xlat
movsb
dec
jbe
dec
popa
in
mov
push
insl
enter
inc
cmpsb
mov
fsubp
je
shr
bound
dec
dec
cmp
cmp
mov
cmpl
pop
fwait
push
push
jg
or
mov
int
cmp
stc
lret
jl
xchg
mov
popf
xor
xor
outsl
inc
jne
cmpsl
adc
jo
cmc
add
in
pop
dec
stos
push
lock
inc
add
frstor
jl
pop
lds
push
addb
jnp
mov
and
rorb
and
push
xor
aad
and
mov
pop
sub
adc
out
add
cs
out
jb
lds
imul
es
push
push
sysenter
xor
mov
or
mov
pop
cld
orb
push
adc
mov
loopne
push
lock
call
sub
inc
sbb
cli
test
pop
fidivrs
pop
ds
int
mov
call
dec
sbb
hlt
jae
mov
sub
xor
xlat
push
and
ss
in
sbb
cltd
cmp
sub
dec
sub
sbb
jae
cmp
push
mov
ja
data16
dec
jmp
jecxz
andb
scas
imul
lods
xchg
mov
fyl2xp1
push
into
push
mov
push
lcall
ljmp
mov
je
movsl
xor
pop
orb
jmp
pop
lock
mov
push
xchg
xchg
insl
mov
das
shrb
loope
jge
movsb
pop
in
sbb
in
sbb
xchg
pop
mov
into
dec
pop
jnp
push
mov
negb
movl
xor
mov
mov
push
inc
cltd
ds
push
loope
int3
push
dec
jmp
xchg
popa
push
loope
test
dec
cld
xor
fdivp
out
push
out
out
pop
add
jl
fisubs
cmpsb
shll
mov
lods
sbb
insb
push
xor
clts
out
ret
jmp
mulb
xchg
pop
mov
mov
or
pop
mov
scas
imul
scas
cmp
aas
xchg
or
arpl
cld
outsb
cmpsb
ja
push
inc
jno
cli
mov
xchg
movsb
dec
imul
in
out
pop
mov
add
xor
mov
fdivrs
xlat
shr
ss
cmp
mov
cmpsb
jns
pop
dec
das
jp,pt
sahf
mov
xor
sub
into
aad
arpl
ljmp
int3
jmp
daa
xchg
dec
loopne
int
cmp
scas
mov
or
fisttpll
xchg
stos
cltd
jle
sub
xchg
repnz
fisubrl
sub
inc
adc
cmpsb
sub
loope
adc
xchg
les
sub
in
icebp
and
xchg
or
iret
lods
std
sbb
xchg
inc
mov
pop
dec
push
dec
jns
xchg
insb
in
ds
popa
popf
sub
mov
cmp
xor
popa
mov
mov
lock
imul
mov
add
mov
clc
dec
xchg
cltd
imul
fildl
iret
inc
cmp
sbb
hlt
mov
fiaddl
push
cmp
adc
in
xlat
cmp
cmpsl
pushf
jmp
add
add
sbb
cmpsb
add
push
sbb
mov
leave
inc
popa
test
int3
fidivrs
and
cltd
sti
add
fmul
outsb
xor
lcall
pop
pop
pop
imul
sub
sahf
push
imul
idiv
nop
test
pop
int
rcrb
inc
mov
xchg
xchg
je
xor
test
and
push
push
push
cmc
repz
adc
aam
je
arpl
xor
sbb
lret
sbb
aaa
mov
ret
sbb
push
out
ja
adc
push
int
pushw
out
std
or
dec
mov
ror
sti
out
mov
shlb
scas
outsb
push
sbb
mov
mov
pushf
xchg
xchg
in
inc
mov
ja
sahf
lods
and
push
jae
iret
iret
mov
lcall
aad
inc
add
pushf
fidivl
cmc
cs
pop
outsl
shlb
iret
dec
imul
adc
popa
out
ja
loop
xor
fcmovu
xorb
mov
movsb
ret
or
mov
test
xchg
ljmp
lds
dec
pushw
mov
hlt
ret
into
lock
pusha
sbb
stos
xor
movsb
lcall
xchg
push
sub
fucom
xchg
jns
ja
and
mov
imul
xchg
sahf
lahf
in
cld
adc
jb
test
inc
ja
pop
fnstenv
dec
pusha
sbb
sub
and
fsubrl
mov
mov
and
pop
in
decb
scas
push
xor
shl
xor
jmp
bound
add
ljmp
out
aas
lret
mov
stc
and
pop
jns
inc
adc
sahf
fwait
cmp
dec
mov
fimuls
popf
test
cmp
xorb
ja
pop
fsubl
jecxz
mov
shll
mov
test
bound
jb
mov
out
or
push
mov
mov
clc
mov
push
leave
sahf
dec
add
push
jo
adc
sbb
int3
insb
cwtl
ljmp
jecxz
bound
xchg
push
or
cwtl
pushf
shrb
pop
add
aaa
lahf
dec
mov
mov
push
jno
popa
fisubrl
xor
push
xchg
cmp
out
data16
fdivrs
push
fs
inc
cmc
sbb
and
stc
and
cmp
adc
sti
ljmp
fbld
jnp
leave
sbb
mov
mov
aas
nop
hlt
sub
enter
icebp
adcl
imul
loopne
je
dec
mov
imul
xchg
lcall
cltd
cltd
neg
push
dec
or
or
jbe
dec
pop
jbe
xor
out
pop
cmp
sbb
push
fs
ds
insl
sbb
jo
dec
sbb
mov
repnz
jge
mov
enter
add
jbe
iret
les
ss
xor
out
mov
add
cld
outsb
sbb
popf
mov
sbb
outsl
sti
fs
inc
xor
push
int
cmp
lods
sbb
push
dec
shr
repz
je
jp
jnp
cs
rol
scas
jne
mov
call
add
mov
cmp
stc
insb
push
hlt
mov
jb
adc
popf
sub
mov
clc
mov
aas
shlb
aad
imul
lods
mov
cmc
cmpsl
test
inc
dec
push
imul
inc
mov
fnsave
test
and
jne
scas
sub
xchg
sti
mov
adc
adc
xchg
xchg
sub
das
push
mov
pop
aaa
inc
inc
mov
or
aas
dec
enter
sbb
repnz
test
jbe
jecxz
push
rorb
mov
push
fnsave
addr16
and
xor
and
aam
fcoms
xchg
rorl
fwait
jp
outsb
lret
or
aam
addl
xor
lret
pop
dec
adc
jo
pusha
int3
xor
sub
xchg
mov
daa
std
mov
mov
out
pop
test
std
xchg
lret
pop
add
bound
jae
lods
and
sub
push
rorl
out
ja
rcll
idivl
mov
out
fldcw
loopne
ficomps
or
xor
addr16
pop
movsl
ret
out
lret
xor
cmc
add
dec
jp
out
mov
pop
lret
loope
inc
mov
sbb
cmpsb
jae
out
mov
xchg
jnp
clc
lods
xchg
arpl
mov
sahf
push
les
stos
inc
imul
fildll
aam
pop
pop
jo
ficoms
mov
test
inc
mov
enter
out
mov
jle
mov
daa
cltd
lcall
xor
and
in
push
and
call
insl
enter
loop
jg
iret
mov
sarl
sti
xor
push
xchg
jmp
nop
push
push
xor
std
mov
inc
mov
push
fidivs
cmpsb
adc
call
mov
mov
or
roll
inc
mov
jns
loope
sbb
loope
js
add
ficoml
cmp
popa
mov
cmc
subb
sarl
mov
lds
scas
sete
insl
jle
aas
mov
jb
inc
xchg
pop
mov
inc
push
jnp
sbb
push
stos
leave
dec
or
ret
push
push
popf
mov
out
inc
xchg
fsubl
es
pop
out
andb
xor
stc
fiadds
push
pop
jp
mov
xor
pop
lcall
sbb
into
sbb
in
shr
add
cmpsb
imul
cmc
out
das
sbb
ljmp
mov
adcb
test
scas
aad
xor
and
cmp
add
jbe
or
and
ds
jnp
jecxz
adc
push
ss
cmp
mov
sti
mov
xchg
cmp
lods
rcr
adc
in
pop
std
ret
mov
daa
cmp
mov
repz
lcall
push
lock
xor
pop
push
jp
pop
cmp
push
fisttps
mov
jns
jb
outsl
movsl
push
jge
adc
adc
psubd
adc
js
mov
loope
daa
lret
outsl
subb
pusha
dec
adc
repz
pop
ja
push
fnstenv
jl
sub
movsb
pop
flds
cs
and
mov
dec
out
in
cmp
in
cmpsb
adc
inc
jmp
cvtdq2ps
inc
fistpl
out
mov
jp
push
in
gs
pusha
xchg
dec
addr16
dec
fsubl
add
out
lds
jecxz
jne
jecxz
jns
call
mov
loope
stos
in
out
mov
pop
movlps
es
pop
sbb
push
ds
pusha
dec
mov
out
lea
jmp
in
mov
aas
dec
cmp
aas
adc
pop
cmp
call
shll
sbb
arpl
scas
pop
jp
mov
push
fldenv
in
cmp
and
or
mov
fsubp
fs
lods
into
mov
imul
or
pop
push
xor
pop
cmp
cmpsb
imul
fisttpll
mov
xlat
cmp
push
into
jbe
xchg
aas
mov
dec
lods
jmp
hlt
xchg
stc
dec
cmpsb
xor
idiv
out
aas
sub
dec
scas
xchg
cmp
movsl
dec
cmc
or
scas
clc
cmp
cld
repnz
out
notb
das
sti
pop
rol
mov
mov
scas
in
scas
cmp
loopne
dec
movsb
mov
jmp
je
and
test
xchg
into
nop
lret
ss
stos
cmp
hlt
and
es
dec
mov
add
mov
add
pop
popf
loope
mov
rorb
lods
jne
pop
sub
or
shrl
and
xor
jle
lock
xchg
jno,pn
mov
stos
es
inc
push
repz
and
or
in
adc
ja
add
outsb
fnclex
jl
cs
fmull
mov
mov
xchg
cmp
push
pushf
sbb
imul
xor
nop
roll
sbb
sub
push
aam
hlt
pop
sbb
sbbl
mov
lock
pop
aaa
ljmp
mov
insb
fstps
icebp
push
lods
adc
mov
xchg
pop
mov
ret
or
dec
cmp
fwait
mov
dec
mov
sub
scas
insl
test
ss
jns
adc
mov
or
movsb
lcall
clc
cmp
push
sub
mov
and
sarb
push
push
pop
pushf
mov
jg
jns
jb
or
pusha
ds
int
add
jae
loope
repz
ret
ffreep
cs
jne
jecxz
loop
enter
mov
mov
pop
pop
jp
mov
push
stc
loop
xor
fwait
test
mov
xchg
adcl
dec
mov
or
cmp
dec
xchg
das
dec
lods
jg
insb
mov
je
cmp
ss
ret
cmpsl
cld
stos
push
mov
jg
ja
popa
cmpsl
fldt
in
sbb
push
dec
push
stos
dec
mov
xchg
pop
test
dec
int
outsb
orb
mov
xlat
cld
add
mov
std
push
jle
sti
inc
fisttps
test
adc
cltd
ret
je
xchg
cmp
cmp
ret
xor
mov
adc
aam
sbb
loope
xchg
jmp
in
dec
leave
loope
clc
outsb
fidivrs
jp
cli
mov
rorb
pop
push
pop
push
stos
sbb
cmpsb
imul
in
push
mov
out
lahf
repz
mov
push
push
or
mov
add
nop
jo
push
push
or
ds
in
xchg
mov
scas
movsl
data16
fsubrl
xchg
mov
jle
rcr
xchg
mov
mov
or
das
mov
jle
add
xor
and
imul
lcall
or
sahf
ss
scas
push
cwtl
add
daa
adc
jle
les
jle
cmp
adc
sti
int
imul
cmp
clc
inc
loopne
mul
jb
divl
pop
pop
adc
fsub
je
clc
fnstsw
mov
out
stc
dec
adc
stos
pop
adc
mov
sbb
xchg
out
mov
or
icebp
flds
movntps
addl
loope
movsl
and
dec
xor
clc
stc
repnz
push
stos
xchg
mov
sbb
jb
cmp
cmp
ret
xchg
pop
out
enter
movsl
inc
leave
ja
vaddss
push
mov
xchg
jl
lahf
test
xchg
rorb
jnp
xor
pop
or
add
dec
nop
enter
inc
lods
shll
in
in
in
mov
cli
and
pop
jb
dec
cli
dec
outsb
pop
pop
in
das
inc
dec
in
in
jo
fidivrs
pop
mov
mov
mov
jbe
dec
and
jno
lcall
pushf
dec
mov
mov
popa
push
pop
mov
jae
dec
sub
enter
rolb
hlt
mov
out
cld
int3
rorl
jb
cltd
jae
jno
xchg
shll
ret
aas
jns
mov
and
xor
or
in
cld
call
insb
daa
jg
dec
add
push
dec
xchg
mov
mov
jl
sbb
cld
icebp
insb
sub
lds
and
data16
cli
sbb
pop
mov
sub
push
stos
addr16
push
fidivrs
setge
cmpsl
lret
push
imul
pop
sbb
imul
push
inc
popa
shlb
fistpll
dec
lock
mov
js
cmp
push
cwtl
mov
push
cmpb
xor
sub
setne
mov
adc
pop
loop
dec
adc
fcmovu
mov
js
pop
hlt
insl
xchg
int
jns
fnstcw
cmpsb
mov
cmp
mov
mov
jg
jbe
xchg
pop
jb
jecxz
jb
sub
add
xor
clc
sti
cmp
repz
mov
mov
mov
pop
lret
mov
setb
and
and
cli
rcll
push
dec
inc
fcoml
push
aam
sbb
mov
insb
adc
add
jmp
loope
add
ficoms
scas
daa
inc
inc
fcoms
adc
mov
lahf
mov
mov
call
cmp
sbb
daa
or
xor
jbe
cmp
pop
inc
cmp
push
sbb
imul
fs
clc
sbb
jecxz
pop
push
sub
fwait
add
pop
add
jno,pn
mov
mov
sub
xchg
jno
in
sahf
sbb
jg
repz
fcmovnu
in
scas
decb
mov
push
push
or
push
movups
xchg
push
imul
mov
pop
pusha
ret
mov
sbb
lret
inc
mov
mov
xlat
sub
test
sarb
cmp
mov
xchg
mov
imul
inc
orl
and
int3
std
in
push
or
cmp
mov
push
xchg
mov
call
dec
pop
rcl
sub
int3
repz
lret
ss
adc
sbbb
js
mov
xchg
bound
mov
sbb
xchg
data16
jno
test
sbb
nop
dec
xor
lods
cmpsb
sub
and
frstor
sub
lea
lods
rcll
daa
imul
mov
test
pop
dec
mov
mov
jmp
cmp
jb
leave
mov
pop
mov
imul
lock
lods
pop
pop
les
rorb
push
clc
outsb
and
push
dec
les
fistps
mov
aam
stc
mov
popf
dec
aaa
shll
mov
jmp
cmp
mov
movsl
mov
in
or
sub
cld
data16
xchg
test
mov
daa
scas
xor
leave
jno
pop
lods
out
testl
mov
xor
sbb
xor
adc
pop
int
je
xchg
iret
popf
dec
es
insl
lret
in
imul
add
xchg
cs
in
push
xor
mov
jne
ja
mov
sub
mov
loope
hlt
sbbl
js
andl
xchg
dec
fs
dec
mov
cwtl
repnz
rcr
into
inc
les
out
xchg
xor
mov
cwtl
ljmp
cli
fnsave
sbb
xchg
fidivs
scas
movsb
mov
stos
sbb
push
std
test
in
outsl
loope
enter
push
gs
movsl
mov
lock
mov
add
cmp
les
je
cmp
stc
test
inc
mov
lret
loopne
jne
jecxz
push
movsl
and
daa
or
push
lds
cmpsb
pop
jmp
out
jl
push
push
int
loop
xor
or
mov
xor
roll
or
iret
int3
pop
pop
push
sbb
es
roll
je
test
pop
and
xor
scas
cmp
pop
pop
enter
mov
fsubrp
mov
xor
push
xor
enter
insl
outsb
xor
shrb
ljmp
adc
xchg
std
idivl
mov
test
sub
mov
lahf
lds
dec
fdivl
pop
push
int
push
out
cmp
rorb
xchg
sub
and
int3
test
mov
or
dec
inc
adc
ljmp
sub
adc
int3
adc
cmpsl
jbe
and
push
fldenv
mov
or
adc
xchg
push
or
push
test
call
jmp
gs
xchg
int3
push
les
scas
pop
inc
test
xor
lahf
pop
fcmovu
cmpsl
mov
cmp
stos
negb
js
xchg
bound
mov
and
pop
fiaddl
arpl
jnp
mov
xor
lret
jmp
cmp
and
push
mov
and
popa
inc
push
daa
test
push
or
popa
fldenv
xor
or
outsb
and
loop
insb
imul
ss
imul
sahf
fcomps
cmp
cmp
cmp
cmp
adc
sbb
jge
sbbl
out
pop
xor
dec
les
jl
xchg
lret
add
loope
std
nop
xor
push
push
adc
pop
sub
xchg
push
stos
lcall
sbb
cld
xchg
adc
idivb
aam
rcr
stos
popf
adc
fstp
ror
xchg
xor
adc
add
pop
int
push
jecxz
outsb
int3
je,pt
jb
adc
jns
cmp
add
mov
adc
mov
aaa
push
add
lret
sub
inc
dec
xchg
or
aas
cmp
pop
fcom
mov
pop
repnz
dec
fcoms
aam
adc
xchg
pop
movsl
mov
stos
add
and
scas
and
aam
rcr
fs
out
or
addr16
js
inc
les
fld
stos
pop
mov
mov
pop
mov
pop
cmp
xchg
sub
push
push
jb
scas
adcb
push
jg
aam
stos
mov
and
xchg
inc
dec
rol
fwait
mov
push
in
and
mov
cli
sub
xor
shl
cmp
jp
or
loope
rolb
and
scas
cmp
sbb
dec
or
clc
scas
cmp
cmp
fnstsw
adc
inc
adc
xchg
jecxz
push
jne
aas
test
out
iret
mov
in
popa
adc
push
adc
pop
out
into
mov
mov
ds
ds
pop
mov
xchg
movsb
mov
pop
ss
bound
push
xchg
addr16
xchg
faddp
cld
lcall
jnp
push
loopne
sbb
out
jo
jmp
push
jg
fwait
inc
pusha
xchg
test
rcrb
mov
cmp
addl
rcrb
and
pop
mov
mov
adc
mov
adc
mov
push
mov
test
cwtl
pop
mov
sub
cmpsl
cmp
xchg
xchg
bound
stos
lods
mov
lods
pop
out
sti
push
clc
sbb
enter
rcrl
adc
repz
out
fcmovne
hlt
jl
dec
pop
sarb
lock
mov
sbb
xchg
fwait
loope
adc
inc
or
jne
mov
xor
js
cmp
or
movb
ret
and
mov
xor
sub
lods
les
sub
push
leave
or
cmp
stos
sub
loopne
out
imul
mov
ss
std
negb
jb
dec
daa
sbb
shlb
imul
sbb
add
lahf
popa
sbb
dec
pop
into
fcoms
mov
mov
cld
or
push
xor
xchg
mov
les
sti
aad
dec
mov
push
and
push
ljmp
enter
leave
loope
psubq
leave
dec
inc
sahf
pushf
push
testl
imull
or
pop
nop
adc
push
pop
jmp
or
shl
sbb
xchg
mov
inc
xor
pop
dec
xchg
pop
pusha
add
lods
test
jmp
int
jp
mov
mov
jge
ja
mov
mov
sbb
loop
aad
out
movsb
out
mov
data16
pop
adc
xor
and
or
arpl
es
or
cli
std
push
cmp
jne
movsb
cmp
outsl
jge
mov
fdiv
jecxz
das
icebp
out
bound
adc
dec
inc
es
testb
mov
imul
inc
sbb
stos
push
jae
mov
test
popa
xor
pusha
lret
or
in
or
leave
sbb
pop
sbb
orl
loop
or
and
xchg
jmp
daa
mov
lods
inc
cmp
dec
or
adc
sbb
push
in
pushf
xor
outsb
jb
push
xchg
shlb
into
adc
xchg
xchg
cmp
pop
leave
in
sbb
imul
ljmp
xor
test
scas
or
icebp
scas
dec
dec
dec
jge
cltd
adc
lret
mov
mov
cltd
sbb
dec
je
mov
jne
rcll
sub
lock
cmp
pop
out
je
stos
sbb
rclb
cld
outsl
jo
and
push
stc
iret
out
insb
icebp
lock
icebp
cmp
scas
fldl
hlt
jns
inc
js
popf
xchg
xchg
out
lods
cmpsb
nop
xchg
pusha
mov
repz
xchg
dec
or
add
dec
add
push
pop
and
rorb
jno
mov
jb
xchg
int
fisttpll
pop
mov
or
cmc
mov
pushf
pop
jns
outsl
jle
scas
fwait
push
push
and
or
leave
pusha
jge
out
stos
mov
fsubrl
pop
sbb
sbbl
mov
stos
les
test
cmp
fildl
ljmp
inc
repz
je
mov
jbe
adc
xchg
test
leave
es
and
icebp
dec
jge
es
into
xchg
mov
sbb
in
or
inc
adc
dec
in
insb
insl
dec
mov
mov
lods
cmp
scas
jne
sti
movsl
inc
sbb
jmp
xchg
mov
out
shrb
rolb
ja
xor
imul
aaa
mov
out
enter
std
dec
shlb
stc
fucomp
das
lahf
out
cmp
push
dec
dec
rclb
stc
dec
sti
lods
test
aaa
mov
cs
rolb
or
xorl
mov
xchg
mov
insb
sub
push
sbb
out
aad
jge
and
fstpl
out
xor
add
lods
aaa
sar
push
movsl
iret
xor
cltd
dec
mov
testb
adc
lahf
mov
popf
dec
add
es
cmp
xor
cmp
lret
push
push
or
lea
faddl
mov
daa
jne
sub
xchg
push
lock
pop
sub
or
lds
lods
jl
ja
push
sub
xor
mov
outsb
das
es
adc
cmp
int
cs
movsb
xor
nop
mov
cmp
aad
jp
das
iret
test
sbb
pop
mov
lea
mov
or
xorl
movsb
xor
lahf
add
rolb
div
fistl
cmp
and
les
sbb
loopne
cmpsb
aad
fisubl
jno
ret
ds
test
fwait
pop
or
mov
push
ror
dec
popf
push
out
mov
push
in
dec
mov
cmp
pop
xor
inc
add
add
adc
mov
add
jg
fwait
add
pop
cltd
mov
int
fmuls
cmpsb
inc
shlb
aaa
pusha
mov
pop
jmp
pusha
mov
add
imul
adc
fxam
push
stc
call
mov
push
lods
sbb
sbb
cmp
pop
cmpsl
sbb
arpl
fucomi
inc
jmp
pop
push
push
jo
mov
and
sbb
lret
repnz
push
testl
mov
es
icebp
in
dec
rcrb
push
rorb
mov
push
mov
es
mov
movsl
mov
sahf
xor
sti
cwtl
test
hlt
pop
aam
adc
jns
xor
ljmp
frstor
dec
jp
jnp
pop
xor
xchg
xchg
dec
push
pop
loope
out
repz
xchg
mov
xor
movsb
push
cmc
jbe
mov
mov
jp
sub
ja
sbb
popf
cmp
cmp
int
test
pop
lds
std
or
clc
lret
dec
notb
sbb
add
loopne
xchg
leave
or
fisttpl
cmpl
jb
in
sbb
or
out
adc
data16
cmpb
sbb
iret
std
ret
ds
pop
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
sbb
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
push
addl
mov
xor
orl
push
mov
decl
add
sbbl
mov
mov
addl
test
movl
je
mov
and
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
xor
andl
add
mov
mov
xor
or
sub
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
and
add
andl
mov
xor
mov
add
xor
add
sub
mov
mov
sub
xor
add
neg
mov
sub
lea
xor
xor
cmp
movl
je
mov
xor
movl
add
cmp
jne
pushl
orl
call
movzbl
add
mov
movzbl
xor
mov
add
mov
xor
add
cmp
movl
je
pushl
andl
pushl
xorl
call
mov
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
incl
add
movl
cmp
movl
je
mov
mov
mov
mov
inc
mov
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
jmp
mov
adc
mov
sbb
mov
xorl
add
dec
mov
sbb
mov
or
mov
xorl
add
movl
mov
movl
jmp
mov
mov
add
orl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
jmp
lret
sbb
ja
mov
sbb
loop
add
dec
add
jb
pop
jb
out
mov
mov
out
mov
adc
mov
sti
sub
cld
mov
push
jle
lret
push
lods
pop
ds
add
push
rclb
in
out
js
ret
jns
xor
outsl
mov
pop
in
sti
pop
fstpt
js
mov
mov
stos
dec
outsl
sub
loope
test
pusha
jno
push
add
test
xchg
es
outsb
mov
mov
adc
and
and
mov
dec
fildl
xchg
dec
aaa
shll
xor
fnstcw
add
cmp
xor
es
mov
sub
inc
and
in
sti
fwait
pop
pop
loop
in
ret
push
mov
int
lods
jne
movsl
stos
hlt
mov
mov
inc
push
stos
lcall
push
jb
scas
push
test
xor
hlt
pushf
or
jp
mov
ret
sbb
inc
lods
mov
subl
pop
out
jnp
adc
fucom
sahf
jnp
or
insb
jle
fldl
adc
movsl
lods
int
out
sti
xchg
sbb
loopne
xlat
mov
fidivl
movq
pusha
pop
daa
fldenv
xchg
out
inc
cs
push
shlb
mov
loope
mov
cmp
jno
mov
andl
sbb
dec
out
repnz
sub
ficomps
ljmp
mov
cltd
sbb
cmpsb
insb
push
mov
dec
xchg
clc
int3
jg
inc
fptan
cwtl
mov
xchg
call
mov
adc
push
cmpsb
jge
std
push
ret
jp
xchg
loopne
rcrl
sbbb
adc
adc
iret
mov
andl
pop
mov
and
sub
dec
movsb
cmpsb
dec
xor
cmp
sarl
rcll
sub
test
xchg
and
dec
cmpsl
lock
dec
dec
xlat
fld
cmp
inc
jbe
ss
bound
rcrb
and
icebp
mov
add
add
adc
mov
enter
mov
arpl
inc
lret
loopne
out
push
test
ds
arpl
mov
cmp
aas
shrl
leave
sbb
mov
jb
in
sub
jne
jp
repz
in
xchg
dec
jne
scas
push
pop
pop
adc
int
xor
mov
out
jge
pop
stos
cmpsb
sbb
push
mov
ja
mov
mov
es
daa
lods
lds
ror
inc
sti
pushf
add
mov
aas
loope
jl
repnz
lea
out
mov
cltd
ficoml
scas
shlb
cld
inc
mov
inc
adc
in
sub
es
dec
jle
jp
jb
sti
xchg
sar
test
xchg
jno
mov
push
cmp
aaa
psrlq
jecxz
vpsllq
data16
mov
mov
and
mov
dec
push
lret
into
inc
lahf
mov
fistps
inc
add
test
or
or
lret
adc
xor
mov
addr16
loopne
cmc
sub
mov
inc
movsl
sub
xchg
dec
iret
and
xchg
loope
mov
xor
pop
lcall
jecxz
ja
jno
sbb
clc
adc
in
pop
mov
outsb
nop
mov
inc
sbb
jnp
pusha
inc
aas
xlat
mov
aam
jge
jo
insl
mov
dec
cmp
insl
dec
aaa
std
pop
imull
gs
pop
xchg
sbb
scas
jne
nop
fnsave
enter
add
jp
or
xor
imul
push
add
loope
mov
jmp
mov
movsb
sbb
cmp
xchg
push
sub
add
rcr
ret
jl
xor
int3
sbb
mov
insb
xlat
jnp
cli
in
repz
daa
xor
jge
inc
add
insb
jbe
mov
loope
pop
sbb
andb
divl
insl
mov
mov
jecxz
mov
hlt
ds
lea
jmp
test
insb
lret
bound
mov
mov
inc
dec
xor
aam
stos
xor
dec
cmc
push
ret
sub
sub
push
or
mov
xchg
mov
add
jmp
ret
xor
mov
cmp
cld
inc
jecxz
int3
xchg
add
notb
adc
lds
pop
jns
push
cmc
int3
inc
lock
int
inc
cmpsb
jp
or
xchg
nop
dec
xor
imul
clc
or
dec
xor
cld
xchg
jb
hlt
icebp
fld
xlat
jne
push
js
call
jae
mov
push
test
xor
dec
pusha
imul
jle
in
or
popf
dec
in
adc
cmpsb
jne
test
mov
push
mov
fdivr
aad
fsubrs
lds
cmp
jae
push
jno
xchg
xlat
lret
rcr
inc
adcb
inc
fistl
mov
mov
pushf
stc
dec
push
cli
sub
clc
enter
sub
sbb
cwtl
push
sub
or
data16
out
je
orl
push
mov
mov
icebp
pop
and
pop
push
pop
shll
jle
pusha
jl
in
mov
mov
xor
test
add
cmpb
addr16
ret
mov
sub
data16
scas
xor
aaa
and
inc
jge
imul
js
data16
out
xor
test
lcall
inc
or
stos
or
mov
movsl
in
inc
sbb
dec
jp
xor
pop
xchg
cld
push
xchg
mull
fsubrl
imul
mov
push
test
cmpsb
outsl
cmpsb
sbb
xchg
mov
jmp
aad
xor
js
jno
repnz
stc
jl
pop
fabs
sti
lcall
out
lock
insb
mov
push
mov
mov
loope
dec
jle
rcll
push
push
jecxz
cwtl
outsb
stos
scas
mov
fldt
arpl
aad
mov
orb
out
and
insl
and
sbb
popa
scas
lcall
or
movsb
jo
and
or
outsb
jmp
or
mov
jle
dec
test
sarb
jp
mov
xchg
and
jle
std
sub
mov
pusha
in
popl
mov
ljmp
add
inc
icebp
in
adc
loopne
pop
sbb
repz
dec
sbb
movsl
push
test
dec
fdiv
xchg
stos
idivl
push
xchg
lcall
xor
jecxz
dec
cltd
fwait
jmp
dec
imul
xchg
pop
loop
mov
fwait
pop
inc
out
mov
add
mov
mov
mov
cmpl
ja
stos
test
movsb
cmp
int
xor
mov
fsubs
mov
pop
xlat
sub
repnz
sub
rorb
leave
or
das
dec
mov
lea
or
int3
je
adc
lahf
adc
loope
sub
aas
sub
dec
sub
sbb
mov
mov
cs
sbb
daa
clc
into
rolb
or
loop
mov
xchg
std
insl
sarl
das
pop
mov
sbb
loop
in
rcrb
shl
mov
lods
sub
daa
or
lds
mov
jg
imul
inc
or
xor
jno
or
rorb
jp
out
push
pop
out
insl
mov
xor
sub
adc
aad
cmpsb
repnz
and
add
insl
rolb
sub
mov
mov
pop
repz
adc
pop
sub
loope
movsb
sahf
jns
jbe
ja
cmp
lret
in
mov
xchg
out
insl
daa
mov
xchg
sub
cli
jnp
mov
rep
jae
push
mov
fst
push
mov
push
jg
jg
push
stos
xorl
es
iret
dec
dec
inc
sub
fdivrl
lods
push
test
adcb
xor
pop
sti
scas
lahf
sub
fadd
inc
inc
mov
jge
add
mov
add
pop
sarl
and
gs
loope
pop
xchg
adc
cwtl
ja
repnz
sub
fcoml
mov
pop
lret
stos
int3
lods
xchg
jp
push
jbe
adc
lret
jmp
xchg
sub
dec
mov
outsl
xchg
sbb
stos
jnp
loop
insb
ja
js
mov
pop
dec
inc
fnstenv
lret
xchg
xlat
mov
add
mov
mov
mov
dec
dec
and
test
mov
jno
sti
xchg
inc
mov
pushf
into
sub
xor
in
aad
jge
or
lret
cmc
and
sbb
daa
xor
jl,pt
scas
sub
es
sbb
ret
cmp
scas
xchg
adc
pop
popf
aas
mov
pop
test
out
push
add
in
fisubrl
jo
call
mov
arpl
inc
sub
push
mov
cmpl
rcr
adc
mov
mov
int
stos
add
sti
mov
cmpsb
sarb
or
inc
sub
add
sub
mov
test
sbb
jg
fwait
sub
popa
jp
sti
xor
lds
adc
pop
lret
imul
cmp
fstpt
pop
mov
cmp
cmpsb
dec
adc
out
sarb
cmp
popa
rcrb
mov
mov
xlat
mov
shlb
push
pusha
adc
jp
jno
sub
dec
xor
mov
sbb
jecxz
pop
adc
adc
xchg
sbb
dec
dec
and
cmp
pop
cmp
xor
mov
dec
dec
push
mov
inc
mov
cs
jbe
aas
repnz
dec
sub
dec
mov
jae
cmp
nop
icebp
push
xchg
pop
sti
mov
fildll
mov
fadds
adc
cmpsb
iret
in
int
shrl
mov
lods
jnp
jbe
ja
rcl
add
mov
mov
sbb
push
mov
in
or
fstl
inc
pop
test
ret
inc
repz
push
push
or
mov
clc
pushf
add
or
shlb
adc
push
jb
jo
stos
daa
jmp
rcrl
cmp
aam
mov
lods
push
mov
or
dec
dec
pusha
pop
mov
pop
and
loopne
stos
mov
je
outsl
out
adc
jecxz
out
in
push
pop
cmc
stos
mov
mov
pop
iret
pop
mov
jmp
imul
jno
inc
ror
int3
and
sub
insl
push
lea
aas
xchg
xor
sub
cs
fbstp
xor
push
outsb
mov
or
rolb
fistps
sub
gs
inc
std
jl
cmc
xor
imul
or
es
lds
negb
xchg
mov
pop
rorl
subb
hlt
adc
adc
pop
sahf
cmc
add
push
cs
mov
sbb
add
inc
mov
stc
loopne
rorb
push
cmpl
sub
gs
sbb
and
pop
mov
xchg
lret
cwtl
fneni(8087
fcmovne
sbb
adc
pop
aad
xchg
pop
mov
push
mov
mov
test
mov
cmp
and
fsubrs
aaa
lcall
inc
and
mov
pop
in
cmp
ret
dec
inc
out
jbe
mov
sub
aas
pushf
test
pop
fisubl
mov
sbb
enter
mov
push
mov
xor
cmp
mov
xor
lret
sub
jae
repnz
mov
arpl
cmpsl
mov
jno
loopne
jno
mov
std
mov
xchg
pop
test
jp
icebp
bound
pop
push
aam
sub
movsl
popa
xor
adc
or
inc
inc
loope
into
mov
ret
mov
shlb
pop
fcmovu
cmp
mov
sbb
adc
inc
xchg
lods
cmp
push
jbe
xor
aaa
fdivrs
movsl
pop
clc
inc
out
data16
cld
iret
push
imul
inc
push
add
repnz
fistl
jge
jbe
mov
inc
push
xor
enter
out
sub
pop
mov
sub
lock
sbb
mov
int
mov
mov
insl
aad
dec
push
add
ret
in
mov
jp
or
in
fwait
test
push
add
ja
fisubs
fdivr
ret
adc
dec
data16
jb
in
lods
jp
in
sarl
sub
imul
in
pop
out
pop
fadds
sbb
jp
jne
push
xor
or
mov
and
cld
push
pop
add
mov
xchg
lea
xor
fnstcw
jbe
shll
nop
lds
cmp
jecxz
out
xchg
mov
out
sar
push
jno
adc
imul
jnp
dec
jecxz
push
lds
cmpl
ret
arpl
lret
sbb
hlt
add
push
popa
jno
ja
push
mov
lods
xchg
mov
ss
lea
mov
leave
pop
and
test
out
fimull
rcll
pop
jno
movsb
mov
test
dec
or
add
and
stc
lahf
or
push
lea
sti
stos
mov
dec
mov
pop
popf
push
xchg
mov
inc
dec
xchg
insl
jp
jb
dec
lret
mov
mov
push
mov
in
pop
mov
add
jns
or
and
pop
xchg
jle
lods
add
aad
xchg
addr16
jbe
pop
inc
dec
xchg
and
les
mov
inc
jmp
xchg
push
cmp
stos
out
in
push
mov
bsr
jl
xor
pop
je
or
push
cmpsb
xchg
xor
and
mov
xlat
in
fucomip
in
test
xchg
fists
jo
or
pop
push
stos
fs
mov
ja
test
adc
pop
cli
push
popf
popf
inc
xchg
pop
inc
xchg
loopne
mov
inc
mov
and
stos
or
add
and
push
mov
lcall
ss
inc
mov
je
dec
jg
mov
push
and
pusha
fsubrl
inc
sbb
push
shrl
xor
jno
pop
adc
ret
xlat
mov
xor
jbe
dec
fisubrs
clc
outsb
ficompl
inc
jle
icebp
imul
add
movsb
sub
hlt
pop
jg
enter
stos
insl
jno
sbb
or
dec
fidivrs
aaa
push
push
cmp
cmp
popf
loopne
or
jmp
sub
sub
fiaddl
leave
mov
or
repz
ret
jnp
int3
movsl
cwtl
popl
fcoms
sbb
lds
sbb
push
test
fcomp
xor
xor
jo
lock
or
inc
cwtl
shrb
xchg
add
add
push
shlb
ret
out
sbb
sahf
aad
push
pop
pop
pop
nop
cmp
out
outsb
dec
test
dec
add
cli
ficoms
mov
adc
dec
mov
jb
stos
ret
lds
loope
in
movsb
xchg
adc
sub
clc
lods
stos
imul
cs
push
test
inc
stos
adc
lret
sbb
outsl
lods
das
jns
adc
push
incl
stos
push
addb
xlat
call
jmp
mov
pop
cmp
andl
out
lds
jo
ljmp
cmp
adcl
in
bound
les
jb
xor
gs
lahf
xchg
xor
popa
pop
arpl
inc
push
add
mov
and
pop
nop
inc
movb
xchg
mov
pop
rcl
add
pop
mulb
loop
js
xchg
popa
sub
iret
mov
fnstcw
lods
loope
in
in
adc
jbe
pop
std
and
or
lods
je
xchg
inc
pop
add
xchg
pop
insb
xor
jo
call
je
out
ret
and
mov
test
pop
push
dec
xchg
mov
add
or
push
and
out
fs
clc
jns
fcompl
imul
xchg
mov
or
mov
jmp
nop
hlt
inc
pop
enter
movsl
xor
or
pusha
mov
or
inc
cmp
adc
test
insl
int3
loope
pushf
mov
fsubl
lock
xor
sahf
mov
dec
and
dec
or
testl
movsl
xchg
lahf
push
xchg
in
cmp
mov
out
fbstp
mov
repnz
mov
mov
and
shll
xlat
mov
sti
mov
lds
pop
mov
dec
daa
pop
loope
out
fisubl
ret
icebp
jae
jae
outsb
push
jne
inc
jge
fs
fcoms
imul
out
xor
mov
jp
mov
sti
adc
jnp
adc
popa
and
or
sub
negl
jecxz
lea
aam
icebp
push
sub
into
mov
ljmp
hlt
sub
dec
lods
popf
pop
push
inc
rorl
das
lock
shll
loop
push
out
cmpsl
dec
and
leave
or
jb
mov
dec
cmc
jp
aad
cmp
lods
in
imul
mov
push
xlat
or
jp
mov
sub
rclb
or
enter
xorb
cli
adc
cmpsl
jnp
cmp
sbbb
addr16
rcl
xlat
push
push
jmp
ljmp
adc
push
dec
adc
idiv
in
adc
push
in
sbb
add
mov
mov
cmp
fstl
jns
cli
into
ret
push
lds
xchg
ja
lahf
push
nop
or
push
cmp
cltd
sub
xlat
pop
sti
imul
mov
and
insb
inc
mov
dec
movsl
xor
cmc
out
int
sbb
sbb
xchg
adc
push
jg
and
cwtl
out
pop
push
pop
jmp
fcomp
aad
decb
jnp
xor
add
sbb
sub
xchg
scas
sbb
repz
cmp
xchg
shlb
outsl
js
pop
sbb
test
mov
cwtl
jb
and
lea
aad
and
dec
jo
cmp
jns
out
test
addr16
lcall
push
push
xchg
push
or
mov
mov
inc
jne
stos
sub
test
push
xchg
jl
add
insl
out
push
push
stc
inc
fidivrl
push
ret
mov
scas
rcrb
sbb
cld
lret
mov
push
call
sub
inc
les
repnz
mov
hlt
daa
pop
xor
test
insb
jp
outsl
mov
sub
mov
sub
push
inc
cmp
gs
shl
mov
mov
pop
xor
outsb
xlat
cmpsl
inc
jp
sub
js
jl
test
xor
cmp
dec
xchg
push
loop
mov
aas
inc
lock
stos
mov
imul
add
subb
and
push
jmp
lret
aam
scas
mov
dec
int
pop
xor
addl
mov
insb
jns
cs
sbb
stos
or
push
in
push
mov
fiaddl
fisttps
mov
in
dec
mov
fs
or
cmp
xchg
lods
pop
xchg
sbb
shrl
sbb
sbb
inc
and
cmpsl
loope
sbbb
pop
test
cli
mov
mov
iret
ss
outsl
dec
and
inc
mov
push
sti
xorb
inc
pusha
push
xchg
and
ljmp
rcl
insb
sub
push
adc
popf
shrl
xlat
mov
ss
pushw
bound
daa
cmp
fsubl
xor
xor
xor
adc
repz
push
or
jmp
dec
jb
hlt
out
or
or
xchg
xor
loopne
out
shrb
iret
or
pop
leave
in
and
aas
in
pop
shrb
xchg
inc
movzbl
lods
lret
data16
xchg
cmp
and
mov
cli
and
push
cmpsl
ret
or
cli
mov
push
pop
cmp
adc
jl
xor
or
vdivps
in
pop
hlt
push
data16
adc
lret
out
ja
mov
mov
lret
push
subl
loope
xlat
xor
out
fnstenv
mov
pop
iret
mov
xor
mov
sbb
shll
outsl
and
gs
jne
cmpsl
mov
mov
sbb
adc
adc
outsb
mov
insb
mov
popf
loop
pop
pop
adc
fists
push
jl
inc
pop
dec
xchg
lock
call
mov
pop
inc
add
inc
fcoms
cmpsl
pop
pop
insl
insb
mov
pusha
sub
lock
fmull
sbb
fwait
mov
xor
rcll
jae
pop
pop
pop
ret
ret
mov
mov
fcmovnb
jbe
mov
fcmovb
inc
test
push
cmp
dec
in
shlb
xchg
fisttpll
ds
aas
hlt
bound
icebp
fmuls
cmc
fwait
jno
cmp
mov
lahf
cmp
mov
xor
cmp
nop
outsb
cmp
jo
mov
mov
push
lret
jno
xchg
pop
lahf
push
inc
xchg
xchg
jo
xchg
sbb
mov
sbb
sbb
cmc
out
andb
std
fs
dec
sbb
cmpsb
shll
imul
std
jp
mov
xor
push
cli
dec
inc
inc
out
cmpsb
cmpsl
lds
aad
jmp
mov
stos
adc
sub
xchg
and
jmp
inc
push
inc
ret
inc
push
scas
test
jge
jg
aaa
xor
cmp
push
inc
fists
loop
adc
iret
fistl
cmp
rorb
sbb
push
or
stos
std
fistpl
push
jge
sahf
leave
lock
inc
mov
lahf
call
xor
repz
add
mov
pop
pop
dec
inc
pop
rorb
jmp
mov
inc
sar
sbb
xchg
add
pop
adc
add
imul
iret
pop
or
shlb
add
stc
lcall
fcmovu
pop
add
xchg
xchg
dec
mov
mov
mov
cmc
lret
and
cltd
pop
adc
nop
dec
data16
mov
xchg
lret
repnz
nop
jo
dec
dec
inc
and
xchg
sub
and
mov
mov
cltd
repnz
pop
dec
mov
jg
adc
ss
pop
cmp
dec
das
shlb
dec
out
fdivl
pop
cmp
adc
adc
adc
mov
or
jns
pusha
xchg
push
cmc
stos
or
and
fisttps
sub
xor
das
in
or
ja
shl
add
mov
movsl
faddl
lahf
dec
lock
enter
rclb
or
fs
je
cmc
lods
ljmp
push
mov
mov
fwait
ret
stc
mov
cmpsb
testl
sub
jns
cmp
data16
stos
pop
data16
in
adc
rorl
mov
outsl
pop
mov
cmp
orb
xor
mov
pusha
xlat
int
sahf
les
lahf
lock
add
sahf
sub
or
add
jae
packuswb
sbb
jmp
out
adc
cmpsb
cmp
sbb
fcompl
test
pop
pusha
cmp
sbb
jb
xchg
cmpsb
push
sarb
je
orb
mov
cli
out
push
mov
in
pop
out
outsl
pusha
in
jne
out
pop
out
loopne
mov
lahf
adc
mov
cmpsl
inc
loop
sti
xchg
je
push
mov
ret
movsb
cmpsb
lock
inc
sbb
inc
xchg
popa
clc
inc
outsl
sub
pop
cmp
xor
mov
and
jmp
lcall
pop
mov
test
imul
sahf
pop
pop
mov
xchg
cld
push
inc
pop
sqrtps
xor
ret
test
in
and
xchg
dec
sbb
push
pop
shlb
inc
mov
lods
xchg
lea
push
stc
dec
clc
mov
mov
fbstp
and
mov
sbb
test
lea
inc
xchg
std
popf
cltd
ljmp
in
jg
mov
pop
xchg
mov
shlb
idivl
push
fxch
cli
xor
cwtl
add
adc
push
faddl
jg
mov
sbb
cli
test
mov
pop
pushf
jnp
push
lock
imull
mov
test
mov
sbb
and
call
repnz
rorb
enter
imul
and
inc
and
mov
in
in
inc
sahf
repz
aas
cmpsl
jmp
xchg
daa
out
lds
push
mov
outsb
aas
mov
push
sub
or
sbb
mov
sbb
sahf
xor
cltd
insl
mov
jmp
sarb
inc
jmp
mov
cmp
fisubrs
xlat
add
dec
addr16
dec
inc
cmp
mov
and
lret
lods
pmaxub
in
stc
add
ljmp
fs
xor
decb
push
xchg
mov
xor
fmull
sub
jne
shl
scas
cmp
and
stc
test
cmpsl
shlb
test
jl
push
ja
pop
test
or
icebp
sbb
icebp
in
push
int3
dec
xchg
sub
stos
shl
dec
add
in
mov
lret
dec
scas
repnz
rcll
push
and
stc
jo
adc
lods
repnz
mov
stc
shr
insl
jl
sub
aad
repz
iret
out
sub
sbb
sub
inc
int3
lcall
fadd
ret
addb
outsl
pop
shl
and
mov
stos
cmp
pop
test
pop
fsubrl
std
aaa
xor
in
jnp
cltd
aam
movsl
cmpsl
jle
push
adcb
xchg
in
idivl
mov
and
mov
push
sarb
cli
out
and
add
mov
iret
jns
xor
xchg
out
jg
test
fstpl
pop
jbe
pop
arpl
outsl
iret
adc
mov
loop
loope
adc
xchg
mov
cwtl
xchg
addr16
clc
out
imul
pop
dec
test
mov
popf
ljmp
fmul
fadd
push
xchg
sub
jmp
mov
mov
push
push
and
mov
dec
push
int
mov
sarb
ss
sbb
in
xchg
xchg
out
add
out
rorb
les
sub
add
ss
jbe
lahf
cmc
xchg
stos
stc
dec
stc
xor
xor
test
xchg
xchg
test
outsb
gs
repz
mov
xchg
pop
mulb
mov
adc
mov
inc
xor
cli
hlt
imul
dec
enter
push
lret
and
and
mov
movsl
popf
dec
rorl
sub
lea
outsl
insl
fcmovnbe
pop
mov
loopne
jge
mov
mov
add
lret
bound
sub
test
jecxz
dec
mov
add
fnstsw
fiadds
mov
pop
sbb
popl
mov
inc
cs
jne
jnp
cmp
jb
imul
in
aas
mov
inc
lcall
icebp
jbe
or
sub
ficoml
repz
and
mov
add
inc
shrl
adc
ss
lret
ret
pop
ljmp
pop
adc
mov
mov
aad
adc
cmpxchg
pop
mov
popa
inc
les
shll
push
lret
mov
and
daa
xor
in
imul
in
je
jle
popa
push
lret
push
or
cld
cmpsl
pop
jmp
mov
fwait
shrb
jp
adc
jmp
mov
lret
and
aam
cmc
mov
pop
rcr
das
mov
andb
or
fldt
push
mov
xchg
mov
cli
mov
fwait
push
cld
push
and
push
sbb
imul
pop
mov
cld
in
popa
mov
jb
mov
pop
lock
xor
inc
lods
ljmp
pop
sub
in
nop
movsb
rcl
mov
mov
aad
out
aas
cmp
mov
mov
nop
and
aaa
gs
sahf
dec
sub
je
inc
inc
pop
test
inc
inc
push
out
ja
inc
in
xor
jbe
pop
bound
and
mov
lea
repz
insb
loop
test
leave
push
ret
pop
cmc
inc
and
loope
mov
aad
jp
and
shl
aad
dec
in
mov
ffree
out
mov
cmc
fld
sbbl
xchg
sub
fdivs
test
lret
fwait
gs
adc
xchg
mov
hlt
mov
jmp
fsubr
fistpll
idivb
fwait
cmc
push
push
adc
pop
mov
xor
adc
cmpsl
aaa
or
adc
rcl
shr
dec
mov
jne
push
imul
mov
mov
pop
pop
inc
outsb
cmc
pandn
jge
test
mov
sub
mov
fldt
fbld
push
sub
out
lret
xor
insb
les
sub
test
and
mov
mov
inc
push
jecxz
xor
fmuls
xchg
add
mov
dec
push
sub
or
je
push
test
sub
cli
or
nop
imul
stc
out
push
je
mov
xchg
sahf
mov
int
movsl
cmp
cmc
inc
nop
addr16
cwtl
movsl
lods
fptan
stc
loopne
xchg
fs
mov
cmpsl
les
cmpsl
dec
push
rcrl
inc
scas
mov
subb
dec
enter
mov
cmp
out
add
imul
pop
rolb
push
xchg
fs
in
push
popa
enter
mov
or
pop
std
cwtl
dec
xchg
sub
out
fldcw
pop
pop
out
mov
pop
mov
rcl
xlat
popa
adc
push
daa
add
ss
jecxz
sahf
xchg
push
xchg
rclb
xchg
push
mov
dec
sub
cmp
pop
xchg
stc
sub
mov
call
mov
xchg
sub
out
mov
mov
shlb
or
or
mov
add
push
cmp
inc
and
pop
pop
fnstenv
xchg
sub
jb
into
xchg
loop
addl
jp
fwait
sub
lahf
jae
push
jecxz
daa
inc
sbb
stos
cs
cwtl
std
push
addr16
loope
inc
push
inc
aad
mov
sub
push
js
inc
xchg
push
call
inc
push
rcl
or
cltd
mov
rcll
adc
leave
cmp
mov
imull
mov
pop
mov
lds
popf
cmpl
jno
add
lds
daa
dec
ret
mov
dec
lret
xchg
xor
je
jb
and
fsub
jg
add
sub
insb
loopne
pop
cmp
adcl
arpl
push
stc
sbb
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
jmp
xchg
cli
testl
jae
adc
cld
mov
jb
clc
pop
jb
or
add
sbb
and
push
push
and
jmp
cwtl
bound
dec
xchg
mov
aam
dec
lret
ljmp
lods
les
ja
outsl
cld
leave
push
jne
jl
adc
mov
lods
mov
and
js
ss
xor
mov
aaa
mov
fcoml
popa
inc
push
mov
sbb
out
jbe
ret
add
and
rcll
add
and
cld
sbb
jnp
call
mov
outsl
and
xchg
adc
and
stos
pop
ret
and
lds
stc
sbb
sub
sti
in
push
rcrl
fists
movsb
hlt
testl
add
cltd
push
test
inc
adc
imul
inc
mov
int3
mov
shll
sub
in
mov
dec
imul
les
jb
outsl
sahf
icebp
dec
and
xchg
jnp
ds
jo
aad
cmp
add
pop
out
sbb
jg
clc
inc
or
fwait
sbb
adc
popf
mov
call
add
cmp
ficomps
xlat
pop
fucomi
pop
and
cmp
push
push
in
ret
and
in
cmp
mov
sub
and
popf
sub
push
fiaddl
fucomp
bound
fs
pop
outsl
xor
sbb
and
sbb
pop
lea
lret
sub
push
cmpsb
lds
jb
stc
fwait
nop
fcoml
scas
pop
mov
aaa
or
sub
pop
pop
pop
fidivs
mov
mov
inc
mov
push
dec
rorl
int3
mov
mov
aad
ret
dec
lds
dec
or
jecxz
cmp
ljmp
push
int3
repnz
xchg
imul
or
sbb
lods
jmp
adc
xor
push
cld
hlt
stos
fsubrs
je
movsl
sub
repz
push
pop
push
scas
pushf
sub
push
out
mov
sbb
push
jno
xchg
sti
stc
fucomi
aad
imul
pop
adc
pop
push
pop
pop
lods
stos
sub
leave
call
inc
fisubrs
aaa
cwtl
pop
mov
imul
scas
push
pop
mov
cmp
add
mov
fiaddl
movsb
push
cltd
jae
mov
test
movsl
xchg
xchg
mov
es
mov
xchg
mov
cwtl
imul
lods
sarb
iret
insl
inc
mov
popa
dec
jl
and
outsb
stos
orl
mov
push
shr
cmp
rcrb
push
jne
les
bound
mov
jmp
lahf
sarb
into
push
mov
lods
popf
or
mov
imul
add
cltd
cmp
xchg
fs
shl
xor
xchg
lahf
mov
je
jecxz
bound
outsb
ret
adc
insb
lahf
xchg
jae
sbb
pop
pop
loop
imul
cs
mov
divb
xor
fstpl
pop
mov
pushf
add
jecxz
mov
mov
add
cmp
xor
ss
stmxcsr
inc
cmp
inc
movsl
call
negl
out
cmp
imul
jne
lahf
dec
sbb
pop
cld
dec
xchg
aam
inc
jmp
or
loopne
pop
pop
test
fdivr
int3
mov
or
in
in
test
xor
outsl
pushf
shll
adc
or
loopne
imul
jae
in
imul
cmp
mov
fcmovb
lods
xor
int3
jecxz
icebp
cltd
adc
mov
mov
test
iret
in
popa
xor
setno
cmpsl
pop
jnp
stos
sbb
mov
xor
mov
daa
cmp
ret
fdivr
push
hlt
fimuls
fildll
inc
xor
mov
or
out
testb
cmp
push
mov
sub
xlat
pop
adc
dec
aam
decb
or
ret
ds
pop
out
xor
es
push
sbb
mov
shll
repz
pop
test
lret
out
ljmp
aam
cmp
jo
xchg
negb
shl
pop
xor
nopl
in
insb
ljmp
arpl
shll
lret
lds
insl
mov
arpl
prefetch
or
jmp
call
popf
mov
jmp
lea
popf
ss
cltd
ljmp
jle
mov
dec
adc
sti
cmp
popf
repnz
xchg
mov
loopne
push
sub
mov
adc
jns
sahf
push
lods
jp
mov
jg
shl
push
mov
sbb
lcall
mov
fldcw
sbb
mov
mov
sbb
pop
jl
andb
stos
bound
sbbb
mov
movb
out
pop
mov
iret
dec
mov
mov
adc
fsubrl
popa
das
pop
xorl
mov
pop
adc
jb
mov
ljmp
push
in
mov
test
sbb
xlat
xor
gs
out
fnstcw
push
dec
int3
xor
movsl
sahf
dec
sti
nop
cmp
sbb
add
in
arpl
sub
or
aaa
xor
iret
scas
ret
or
repz
sub
sub
leave
icebp
test
mov
test
es
or
in
jbe
mov
popf
or
insb
mov
push
and
push
cmp
cmp
jae
sbb
loop
jnp
out
mov
pop
nop
dec
push
or
adc
shrl
jb
mov
push
xchg
adc
scas
pusha
push
or
sarb
xor
ja
pusha
jg
inc
push
mov
aam
push
xchg
inc
js
and
fnsave
int
inc
popa
push
mov
shll
in
daa
inc
cmp
mov
mov
js
adc
jmp
ljmp
sbb
aas
in
fsubrl
dec
mov
leave
xchg
mov
lret
add
roll
shll
and
pop
mov
push
add
cmp
mov
dec
das
loop
add
jecxz
pop
ss
mov
pop
test
stos
leave
mov
push
dec
push
std
dec
popf
fldenv
mov
call
call
shlb
mov
mov
outsl
xchg
fwait
pop
ss
popf
sub
inc
cmp
into
dec
sbb
sub
roll
xlat
repnz
push
jmp
stos
loope
push
cmc
das
push
sub
xlat
out
not
or
dec
push
pop
mov
push
xchg
pop
mov
or
xlat
mov
ja
mov
cmpsl
mov
rorl
ret
and
mov
imul
jecxz
lds
fldcw
pop
mov
inc
mov
or
data16
out
xchg
out
and
sbb
xor
xlat
sub
push
repz
shrl
repnz
movsl
jb
cmpsl
popf
sbb
repz
jmp
lret
sbb
or
insl
cmp
decl
mov
mov
add
repz
adc
pop
jmp
sbbb
xchg
add
push
push
mov
xor
jp
outsb
dec
add
sub
fmull
fs
cmp
clc
lods
inc
bound
psubb
mov
pusha
test
icebp
daa
scas
lret
into
imul
cs
push
push
pop
cmp
jns
and
ror
popf
cmp
cld
notl
lock
cmp
lcall
adc
ljmp
jbe
sbb
test
outsb
fstp
pusha
popa
lods
ss
test
or
inc
jnp
and
sahf
cs
push
cmpsb
es
jge
lods
mov
stos
stos
fisubrs
dec
cmp
sub
aaa
std
mov
scas
les
mov
sub
push
mov
and
roll
adc
inc
aaa
arpl
inc
lods
cmp
movsl
jno
jb
imul
cwtl
jecxz
negb
pop
cmpsl
push
or
add
xchg
dec
in
enter
mov
mov
mov
lret
mov
fmulp
cld
lcall
dec
aad
movsb
jl
pop
std
sub
enter
sbb
fmull
sub
cmp
addl
push
mov
mov
adcl
int3
test
and
mov
in
leave
popa
inc
ds
loopne
jmp
in
aad
add
sub
arpl
clc
inc
push
std
cmp
dec
cmc
repnz
in
fs
lods
mov
fldln2
in
sahf
sbb
test
nop
pop
mov
cmc
jmp
mov
push
lds
xor
inc
dec
dec
aad
adc
push
js
mov
das
jl
repz
shl
lahf
pop
or
cmp
dec
out
mov
mov
mov
arpl
icebp
fdivrs
push
pop
jno
sub
push
lret
xchg
arpl
cli
les
push
std
sbb
mov
int
push
mov
mov
out
enter
mov
popf
ficoms
mov
adc
xchg
xchg
jge
jl
pop
mov
call
aaa
enter
pop
xchg
int3
cmp
fisubl
mov
mov
out
lret
sub
cltd
lods
ds
dec
jge
add
into
popa
or
js
push
stos
lock
adc
repz
and
sub
mov
decb
test
icebp
gs
in
fstpt
leave
cmp
int3
inc
adc
clc
test
sub
int3
push
arpl
sub
and
cmp
aas
lds
push
in
vmovsd
adc
add
movsl
imul
pop
andb
jge
lret
mov
aad
stos
push
lahf
add
out
js
xor
pop
mov
jo
inc
lds
cs
and
scas
enter
sub
es
ret
mov
mov
insl
arpl
sbbb
mov
cltd
and
jne
jbe
or
inc
dec
mov
sbb
icebp
in
or
lret
jecxz
push
add
outsb
ljmp
scas
mov
xchg
xchg
sub
in
add
sub
inc
and
hlt
fwait
push
lds
cmp
iret
scas
fwait
repz
push
add
clc
aam
xorb
cwtl
jmp
pop
rorl
mov
imul
icebp
outsb
mov
iret
cmp
jns
sub
jg
adc
scas
jl
call
icebp
xchg
rcrb
pop
fcompl
push
loop
add
pop
push
fildll
sub
sarl
push
sub
mov
lods
imul
push
or
jp
xor
outsl
and
fidivl
out
jnp
insl
int
roll
pop
int
mov
adc
lahf
test
inc
mov
xchg
popa
inc
enter
xor
jmp
cwtl
push
mov
adc
subb
shll
insl
dec
lods
lock
lret
jae
lret
or
jo
jge
jns
out
fdivr
clc
adc
xchg
orb
cmp
and
daa
les
popa
hlt
repz
dec
popf
scas
push
repnz
jmp
in
ret
xor
mov
mov
jno
add
add
pop
adc
sub
push
ljmp
mov
lods
adc
std
inc
sub
mov
gs
ret
stc
sub
xchg
mov
push
xchg
loopne
mov
xchg
mov
inc
adc
jl
cltd
ss
lret
nop
xor
int
or
add
out
inc
test
fmul
outsl
xchg
mov
sbb
into
mov
cmp
loop
mov
xchg
adc
loopne
outsb
movsl
lods
pop
insl
je
push
push
push
mov
xor
pop
adc
xchg
adc
sahf
sbbb
pop
mov
xchg
push
mov
cmpsb
leave
mov
sti
movsl
jnp
orl
and
sub
or
lcall
sbb
fnsetpm(287
in
bound
cmp
and
fstpl
jo
mov
stc
inc
xchg
mov
ss
mov
lret
xchg
ret
shlb
sbb
mov
inc
adc
loope
jg
dec
sahf
or
push
sbb
dec
ss
xchg
fsubrs
xchg
sub
rcr
sub
cmp
push
sub
addl
call
ljmp
sti
lahf
je
push
out
insb
and
movsb
jbe
dec
fistl
popf
or
pop
sahf
cmp
fadds
jl
into
xlat
lods
fdivl
loopne
rcrb
in
jge
xorb
and
or
pusha
jmp
lahf
xchg
sbb
jg
popf
cmp
jg
ljmp
jb
adc
sbb
push
add
leave
ficoml
imul
jp
xorb
loop
cmp
mov
fcomp
rcll
jl
mov
lcall
lea
icebp
shrb
fcoms
outsb
ret
push
cltd
xor
sti
mov
idivb
mov
jbe
jbe
mov
xchg
mov
out
mov
fwait
fwait
repnz
cmp
enter
xchg
shr
cwtl
and
decb
call
add
pop
dec
xchg
push
fcmovbe
std
lock
fmull
mov
or
or
jae
sbb
sbb
lds
inc
jle
xchg
test
aaa
jae
mov
inc
push
popf
lret
push
fs
aad
popf
pop
mov
fisubl
xor
xchg
inc
and
xchg
out
cltd
add
xor
adc
ja
cmp
popa
lahf
xor
xchg
add
add
xor
and
adc
daa
pop
fidivl
out
pop
jp
bound
push
aam
mov
fidivs
mov
fnsave
xor
fbstp
fsubrl
jno
xor
into
mov
push
mov
outsb
scas
daa
pushf
and
insb
xor
add
test
ss
or
and
add
sub
int
jmp
adc
rcrl
xchg
jne
int
outsl
mov
insl
outsb
or
iret
mov
cli
call
dec
cmp
loope
pop
daa
mov
sub
js
push
leave
scas
jns
dec
cmp
pop
aad
ret
in
mov
mov
enter
mov
inc
pushf
rclb
out
add
push
mov
sarb
in
movsl
fwait
orl
pop
push
mov
je
or
shlb
rcll
cmp
cmp
xchg
xor
fsubrs
sti
loop
inc
pop
enter
fs
cmp
push
mov
pushf
jle
mov
lock
and
mov
add
mov
or
dec
mov
add
icebp
in
mov
out
int3
lods
push
pop
mov
ret
jecxz
out
dec
outsb
testb
mov
dec
data16
daa
mov
cld
fnstsw
sahf
ljmp
out
loop
add
jmp
loopne
mov
add
movsb
loop
mov
outsb
mov
sbb
shrl
mov
cmp
cmp
fs
adc
mov
out
mov
dec
adc
adcb
add
movsb
sbb
xchg
mov
xor
lods
push
push
xchg
inc
lret
mov
jmp
test
lods
sarb
mov
test
sub
pop
and
shll
ret
ja
and
push
cmpsb
sbb
mov
imul
xor
add
je
stc
in
fisttps
xor
es
sbb
inc
xlat
rorl
popa
aaa
push
inc
pop
cs
enter
xor
cli
pop
out
sub
rclb
aad
xor
pop
mov
adc
stos
mov
jge
mov
decl
shrl
mov
dec
xlat
jmp
sahf
int
sub
out
ja
fstps
and
mov
lahf
push
fstps
mov
mov
mov
push
testl
aad
and
xchg
dec
mov
add
js
or
jnp
xor
mov
out
or
xchg
jmp
bswap
mov
xchg
adc
in
test
push
push
imull
pop
dec
mov
arpl
pop
sub
jnp
cmc
addl
push
mov
iret
sub
aas
cmp
sub
repz
push
mov
push
dec
in
jno
lret
stos
xchg
je
mov
xor
roll
push
jp
icebp
jle
hlt
lea
addr16
xor
and
cmp
in
xor
sub
insl
push
roll
xlat
mov
test
push
and
test
les
dec
and
cltd
mov
orb
js
adc
jae
cmp
sbb
dec
pop
push
inc
mov
lret
fbstp
sbb
adc
lret
gs
movsb
mov
rorb
je
push
xor
xchg
pop
inc
sub
cs
mov
pop
lcall
adc
cmp
negl
aam
out
lods
cwtl
std
loope
jp
pop
imul
add
sbb
lret
jg
mov
mov
bound
jo
mov
dec
stc
filds
pop
sti
lcall
es
cmp
addb
or
orb
and
shr
jg
popf
pop
xor
movsl
flds
dec
aam
xor
lret
adc
in
test
jg
lcall
push
jl
push
fdiv
js
icebp
aaa
cmp
sbb
jb
lret
push
push
jmp
adc
sahf
add
aam
mov
cmp
shll
inc
inc
jo
lret
fisttpl
xchg
sar
loop
repz
push
cmpsb
test
pop
dec
push
scas
hlt
mov
inc
shl
push
flds
lahf
mov
jp
shll
adc
inc
lods
daa
pop
lahf
xchg
roll
cwtl
fsubr
dec
mov
ja
jp
push
xor
pop
mov
mov
adc
fadds
aam
mov
mov
or
dec
add
rorb
popa
lock
cmp
lret
push
push
push
adc
add
pop
in
mov
xor
add
jp
cmp
or
push
aaa
popa
jbe
push
int
jnp
fidivl
js
sahf
mov
cmpsl
fcoml
mov
dec
mov
enter
dec
push
mov
scas
jb
mov
push
data16
call
ror
aad
mov
jae
test
cmc
cmp
or
add
fcomip
dec
cmp
xchg
je
icebp
mov
sbb
int3
rorb
ss
jnp
cltd
pop
pop
fwait
test
xorb
lods
jg
cwtl
pop
xchg
cltd
mov
and
sbb
push
xchg
in
in
cli
lcall
rclb
jg
sub
nop
outsl
mov
push
clc
add
pop
insl
cmpsb
sbb
jno
rorb
add
sub
push
aad
lret
jnp
jbe
xchg
stos
int3
ljmp
mov
pop
fistps
out
xor
or
loop
inc
je
roll
mov
and
xchg
jns
push
cwtl
sti
addr16
sub
in
leave
xor
aam
dec
leave
push
inc
imul
and
sub
xchg
xor
in
and
in
repnz
mov
iret
mov
repz
adc
fistpll
lds
jecxz
je
ss
addr16
in
aad
int3
popf
lret
addr16
add
test
in
ret
xchg
aam
push
mov
dec
dec
imul
xor
push
dec
std
out
xlat
xchg
ret
addr16
sbb
sbb
cmpl
in
jnp
pop
xchg
push
int3
mov
or
out
lret
stos
popf
test
push
jmp
jae
iret
xchg
xchg
xor
out
xchg
mov
in
jge
mov
mov
in
lcall
pop
add
mov
rcrb
pop
dec
xor
push
adc
cli
test
loop
lahf
imul
gs
mov
out
ret
ds
ret
push
into
xlat
inc
stos
xchg
mov
push
sbb
stos
or
das
sar
jg
fwait
scas
ss
out
shlb
adc
imul
cmp
push
mov
inc
or
not
sbb
not
mov
mov
and
frstor
xor
mov
addl
sub
lea
ret
aas
js
ret
sbb
sub
out
sub
mov
ljmp
adc
roll
cmc
inc
xor
outsl
sahf
mov
sub
push
outsl
push
pop
xchg
and
mov
arpl
inc
inc
bt
shll
in
mov
xchg
test
lods
decl
pop
and
mov
lock
inc
ja
push
mov
outsb
popf
cli
movsl
inc
push
jno
xchg
mov
inc
pop
scas
movsb
mov
jge
jo
push
in
push
test
iret
popa
testb
int3
sbb
pop
cmpsl
mov
dec
sbbl
daa
push
adc
xor
fwait
cmc
add
xchg
push
cwtl
imul
in
jmp
xchg
iret
pusha
mov
mov
mov
pop
shl
scas
bound
shll
pusha
jg
add
cmpsb
inc
int
int3
sbb
xchg
mov
lcall
dec
rcl
push
scas
test
xlat
xlat
dec
repnz
icebp
cld
xor
rorl
fneni(8087
adcl
scas
dec
mov
mov
popf
repnz
xchg
je
adc
out
lock
pop
pop
in
push
mov
loopne
cmp
dec
jno
sub
or
out
jns
and
and
xor
popf
mov
jp
fsubs
and
mov
push
sbb
data16
js
fidivrl
mov
test
or
jbe
pop
cmpsb
ljmp
popf
sub
pop
dec
xchg
js
sbb
punpckhbw
push
daa
rol
jae
into
sub
dec
in
jl,pn
out
sbb
jle
pop
adc
lods
rorl
clc
push
aas
push
ljmp
pop
leave
jmp
inc
jp
fildl
daa
outsl
mov
mov
scas
jl
mov
and
mov
jmp
mov
jno
out
mov
fmull
sbb
mov
push
jbe
mov
ss
andb
in
ja
push
sarb
jp
lahf
jb
xor
loop
addb
or
xchg
add
ljmp
out
cmpsl
dec
arpl
sarl
adc
into
movsl
and
xchg
sti
cmp
mov
ss
std
or
cmpl
mov
jl
mov
icebp
adc
pop
xor
cmp
insb
inc
sarl
push
push
dec
addr16
pop
mov
lcall
xor
xchg
sub
adc
mov
test
push
daa
pusha
rcrb
sarl
jl
scas
adc
and
or
push
mov
inc
mov
xor
mov
clc
in
stc
mov
cmp
insl
repnz
pop
insl
cmpsl
je
inc
pushw
mov
cwtl
push
pop
pop
insb
out
adc
adc
mov
adc
int
mov
sbb
add
imul
cmp
scas
fnstcw
mov
sub
xchg
mov
dec
mov
mov
jle
dec
cmp
out
mov
loopne,pn
xchg
cmp
shll
out
in
stc
mull
mov
sti
sub
inc
sub
push
dec
mov
loopne
outsb
jmp
cs
mov
gs
filds
fdivs
cmp
dec
nop
jb
cmpsl
or
jns
dec
pop
stos
std
mov
test
std
jno
in
xchg
push
push
jns
mov
out
push
mov
mov
pop
sub
cld
rorl
cmp
dec
hlt
push
push
cmovae
or
mov
ficompl
xor
std
pop
sbb
dec
sbb
notb
in
mov
mov
mov
sub
bound
lcall
push
ret
icebp
dec
push
cmpsb
xor
inc
jle
or
adc
imul
ds
sub
fnstcw
pop
rcrb
push
adc
push
ds
mov
jb
cltd
pop
inc
xor
inc
repnz
iret
pop
fstpt
mov
xchg
scas
fldcw
mov
jbe
popa
divb
or
stos
std
fs
rcrb
in
cmpb
dec
fistpl
mov
ljmp
jp
flds
lea
push
xchg
dec
xor
mov
pop
pop
cmp
icebp
add
mov
sub
sub
out
lods
mov
cltd
addl
loopne
rcrl
daa
pushl
lea
popf
xor
gs
lret
add
pop
jne
add
test
jbe
dec
nop
nop
push
jns
xor
xchg
jno
add
push
cli
mov
pop
sbb
out
rolb
inc
lahf
ja
lods
lods
mov
stos
pop
test
adcl
jle
mov
push
jo
xchg
gs
scas
arpl
pop
aaa
lahf
addr16
dec
sbb
sub
mov
sub
dec
cmp
cmp
cmp
popa
es
imul
add
mov
mov
imul
leave
addb
cli
mov
cmp
lret
adc
es
xchg
mov
xchg
test
sbb
add
rcr
mov
mov
mov
je
clc
not
loop
fisubl
xchg
cld
repz
loope
pop
dec
dec
xchg
in
xchg
cmc
push
lods
mov
cmpsl
sub
mov
push
test
jmp
enter
fs
and
stos
cmp
js
ljmp
sbb
ror
test
jne,pt
iret
sahf
leave
gs
jo
xlat
xchg
and
fdiv
mov
sbb
xchg
shlb
cmp
shrb
add
mov
cli
sbb
into
subb
mov
mov
push
xor
inc
xchg
inc
ret
inc
fistps
mov
mov
lahf
inc
push
push
mov
aam
iret
cmp
push
cmp
xchg
jge
adc
mov
adc
mov
inc
sub
in
out
out
daa
cmp
jge
cltd
push
ret
jns
xchg
pop
movsb
xchg
lret
test
mov
les
push
xor
or
push
jg
icebp
jne
pop
enter
cltd
dec
jbe
jge
lods
adc
es
xchg
stos
push
mov
pop
inc
enter
mov
test
jb
loop
mov
lahf
ja
fwait
push
mov
lret
in
mov
sbb
imul
mov
idivb
ss
shlb
int
clc
pop
sbb
movsb
xchg
push
mov
dec
mov
adc
push
aaa
cmpsl
sub
mov
pushf
repnz
adcl
cmp
pop
test
lods
add
and
inc
add
in
dec
ja
or
movsl
ja
mov
sbb
mov
mov
jb
mov
cltd
in
stos
mov
std
stc
lret
ret
sub
ret
inc
pop
outsb
out
ret
sbb
out
insl
into
push
add
shlb
jne
cli
enter
data16
insb
fldenv
pop
test
jns
fmull
sbb
inc
mov
fs
sub
jg
xor
int3
mov
xchg
xor
mov
xchg
clc
std
lahf
mov
push
xchg
hlt
dec
test
adc
gs
test
fbld
cs
jle
loope
sub
fldt
xchg
xchg
popf
dec
jnp
xor
jg
lea
cltd
hlt
sti
push
sbb
cmpsl
daa
mov
dec
out
dec
push
pop
sub
push
sbb
jmp
das
dec
and
or
imul
loopne
lcall
cwtl
pushl
pushf
push
sub
mov
or
jp
mov
arpl
add
lcall
call
xchg
xchg
sbb
shll
pushf
sub
pop
sbb
jecxz
shlb
lock
sbb
jbe
pop
sbb
push
jg
test
jp
lret
into
dec
lret
and
movsl
jecxz
ret
in
cs
cli
insl
iret
cmpsb
movsb
push
push
jb
stc
lds
mov
adc
jno
dec
call
cmp
lods
xchg
dec
jo
push
daa
fisubs
mov
fsubrl
dec
sti
jno
pop
add
jo
popf
mov
int3
push
repnz
push
push
inc
push
out
aas
mov
inc
mov
fiaddl
dec
mov
inc
jge
jnp
mov
push
pop
cmp
dec
cwtl
mov
add
data16
in
mov
dec
dec
hlt
cmp
pushf
out
cmp
pushf
xchg
cmp
xlat
inc
movsl
daa
outsl
mov
inc
mov
dec
mov
jno
sub
dec
outsl
push
cmp
cli
int
cmpsb
test
aas
pop
sub
icebp
fdivs
dec
fs
cmpl
in
mov
gs
xchg
push
stos
into
cmp
jns
iret
inc
fisttpl
cmpsb
daa
pop
out
rcrl
adc
rolb
pandn
test
add
mov
xor
jnp
sahf
jle
jns
pop
mov
mov
mov
sarl
jmp
inc
dec
xor
daa
sti
insl
jne
mov
clc
xchg
adc
jnp
mov
or
sarl
mov
jae
sbb
jecxz
push
fists
pop
inc
fistps
mov
push
cmc
push
movb
js
xchg
clc
xchg
mov
out
pop
int
or
mov
adc
popa
rclb
mov
sbb
aas
repnz
lods
arpl
mov
rcll
mov
xor
push
jns
dec
imul
cli
aad
mov
inc
add
sbb
jecxz
ret
cmp
out
mov
push
sbb
mov
pop
popf
pusha
push
out
insb
nop
and
push
mov
lds
pop
je
dec
and
pop
int3
lock
sub
or
cld
sahf
sti
mov
xor
ficoml
insb
cmp
pop
in
ljmp
mov
int
ficoms
loopne
jp
cmc
dec
cmp
mov
xchg
mov
xor
mov
push
int3
add
sub
sub
lods
stc
ja
fcmovnu
leave
flds
sub
addr16
sahf
xchg
xchg
in
sbb
movsb
lock
and
cld
popa
and
or
leave
and
data16
inc
push
out
mov
xchg
jnp
cmp
bound
sub
xor
and
cli
faddl
cmc
inc
add
scas
mov
mov
xor
inc
xor
jmp
cmpsb
in
sbbl
fists
add
ret
sub
mov
jbe
aam
xlat
push
dec
fists
cmpsb
cs
pop
jns
lret
xor
xchg
fs
add
xor
dec
cmp
dec
pusha
ss
cs
stos
or
xchg
aaa
nop
and
mov
add
mov
push
cmp
outsl
test
call
ja
xchg
mov
xor
dec
sti
int
andl
div
roll
jg
test
jecxz
xchg
mov
push
ficomps
cmpsb
xchg
cmp
pop
fisttpl
xchg
mov
mov
in
inc
fidivrl
mov
cmpsl
jg
leave
aas
js
mov
int3
ffreep
mov
jmp
ja
cmpsb
jns
adc
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
or
mov
push
push
mov
sbb
mov
and
mov
adc
mov
mov
and
andl
movl
sbb
movl
sbb
mov
mov
neg
sub
xor
add
mov
sub
add
mov
xor
xorl
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
push
call
jmp
sub
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
call
cmpl
jb
orl
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
subl
sub
sub
mov
or
orl
sbb
mov
and
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
xor
movl
lea
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
call
mov
dec
mov
jmp
lea
sub
mov
sbb
mov
mov
xor
mov
sbbl
xor
xorl
add
mov
mov
mov
mov
add
adc
push
mov
adc
mov
sbb
mov
mov
sub
mov
mov
xor
mov
addl
add
movl
cmp
movl
je
mov
jmp
movl
mov
cmp
movl
jne
push
movl
jmp
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
add
andl
mov
orl
mov
adc
mov
xor
orl
add
movl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
movl
add
cmp
notl
mov
movl
push
je
adc
mov
adcl
add
addl
mov
or
mov
xorl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbb
push
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
push
inc
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
jmp
xor
test
or
loope
lds
jo
jne
int
jb
pop
jb
js
or
dec
add
loopne
jnp
in
out
mov
or
pop
pop
xchg
sbb
cmpb
out
in
ljmp
jl
loopne
jmp
pop
and
out
lcall
mov
cmp
fbstp
mov
leave
insl
es
ja
pop
div
push
mov
fdivrl
mov
mov
cmc
cmp
lods
adc
mov
sbb
sub
ror
xor
pop
mov
cmp
inc
lret
orl
es
dec
stc
lret
lret
mov
cmp
notl
lret
std
mov
sub
dec
mov
xlat
inc
mov
icebp
sub
movzwl
lret
cld
std
cli
js
push
movsl
jge
mov
fisttpll
cli
repz
and
xor
push
add
sbb
ret
adc
push
rep
mov
jno
mov
sub
lds
scas
jno
push
cmp
bound
push
ud1
adc
faddl
imul
dec
jecxz
lret
mov
addb
jbe
dec
and
inc
mov
mov
push
cmp
movb
mov
xchg
lcall
sub
jae
push
repnz
mov
in
sub
cmp
stos
loopne
dec
cmp
scas
sub
adc
and
xor
cmp
pop
or
cmp
xor
mov
jp
daa
andb
jp
mov
mov
push
pop
pushl
aad
push
mov
pushf
xor
repnz
lds
in
test
mov
in
mov
fs
push
fists
scas
pop
xchg
mov
lock
and
shll
pop
adc
xchg
dec
enter
inc
adc
aas
aam
and
lods
int3
mov
push
push
scas
stos
mov
inc
mov
xor
test
jae
pop
mov
aad
pusha
xor
cmp
xor
mov
xchg
inc
lahf
inc
lahf
insb
or
call
pushf
pop
call
jmp
fst
mov
pop
scas
loop
scas
cli
test
cmp
inc
xchg
in
je
fdivrp
pop
jmp
or
pop
xchg
push
jl
aaa
sub
sarl
icebp
adc
subb
sbb
adc
insl
sti
mov
push
roll
xor
aam
push
sub
je
jmp
cwtl
popf
cmpsl
out
aaa
cmp
popa
inc
xchg
mov
dec
fdiv
cs
xchg
cmp
pop
add
and
mov
xor
cs
in
cmp
ja
addr16
lea
cmc
mov
test
sbb
outsb
je
fs
pop
mov
test
stc
cli
push
cld
push
dec
cmp
adc
cmp
dec
mov
jg
pusha
mov
clc
int
enter
sti
loop
fmuls
das
mov
dec
cmpsb
mov
or
fildl
xlat
push
jbe
fdivl
sub
inc
cmp
dec
pop
mov
int
aaa
sahf
sti
push
xor
push
mov
mov
push
andb
stos
andb
cmpsb
xchg
imul
and
sbb
lods
lret
test
cwtl
or
adc
and
mov
lods
loopne
cmc
cmpsl
and
push
or
add
je
dec
clc
sbbl
add
in
mov
dec
imul
cmp
jecxz
lock
fs
rep
adc
inc
jle
mov
jno
mov
push
add
sub
push
stc
dec
xchg
xor
rorl
addr16
std
lahf
mov
divb
mov
arpl
ljmp
sahf
outsb
add
jge
xchg
mov
mov
sub
push
es
mov
push
mov
push
cmc
jns
scas
mov
sub
jno
jo
lods
lods
push
inc
mov
fstpt
push
mov
push
repz
mov
and
stc
or
inc
dec
subb
add
push
xchg
jg
adcb
lods
int
aad
imul
mov
rcrl
fsub
pop
sub
sbb
shrb
or
push
xchg
lahf
les
out
popf
add
ficomps
jbe
ret
fcomp
rcr
sub
ds
xchg
lahf
shll
mov
ss
hlt
inc
inc
outsb
ja
icebp
movsl
mov
jno
mov
sbb
mov
mov
int3
frstor
jle
cmp
aam
lret
or
jbe
pop
xor
cltd
xchg
xchg
mov
je
roll
sahf
fs
imul
jl
aaa
test
mov
popa
imul
xor
out
aaa
inc
xlat
jl
popa
and
jl
sahf
insb
popf
sub
sub
mov
test
push
fstl
cmp
shlb
or
mov
add
ret
stos
mov
mov
js
ds
jl
addr16
xor
hlt
add
imull
mov
adc
mov
out
aam
mov
inc
lahf
cmp
movsl
cwtl
mov
inc
subb
xchg
notb
mov
mov
pop
push
ljmp
push
mov
lcall
inc
jne
lret
dec
ljmp
shlb
push
dec
adc
rcrb
aam
imul
stos
dec
dec
cltd
mov
sbb
xlat
mulb
shll
mov
popa
aas
xchg
dec
or
mov
push
popaw
fwait
and
add
lods
dec
test
clc
and
lret
jne
mov
inc
pusha
sub
ljmp
mov
jmp
adc
xlat
sub
outsl
pop
mov
pop
gs
jmp
cmp
les
imul
sub
ds
sbb
add
fimuls
aad
xlat
in
jne
inc
nop
loopne
dec
cld
or
punpckldq
sub
inc
in
sahf
fwait
sub
cwtl
dec
outsl
or
int
pushl
daa
test
popa
rorb
mov
fidivrs
push
xor
sbb
dec
inc
mov
push
aaa
sti
push
sub
lcall
mov
mov
jae
shll
jecxz
inc
xchg
mov
lods
repz
cmpsl
and
mov
pop
lds
js
popf
out
mov
push
gs
xchg
repnz
aas
cltd
pop
jo
ljmp
in
inc
cmp
nopl
jge
cmpsl
cli
mov
mov
jne
repz
subb
or
popf
mov
fldcw
sbb
shll
sti
sub
ljmp
dec
rcrb
and
mov
jg
sub
pop
loop
int
gs
mov
loope
mov
aaa
inc
adcl
decb
mov
hlt
and
adc
loop
lcall
stos
add
sub
inc
jecxz
stos
sub
stos
push
pop
cld
lea
sub
addr16
js
ljmp
scas
adc
jmp
or
movsl
scas
out
sti
or
cmp
fstps
push
sub
sbb
or
inc
or
nop
je
fbstp
outsl
jmp
fisubrs
mov
repz
repnz
adc
mov
sahf
add
test
pop
dec
mov
fdivl
adc
dec
adc
loop
or
in
das
fisubrs
popf
aad
daa
lea
xchg
test
leave
dec
pop
rolb
sbb
ret
add
mov
outsb
xor
ret
xchg
push
or
mov
mov
repz
mov
lret
mov
daa
mov
mov
test
pop
adc
inc
push
pushl
fucomip
jp
and
jmp
xchg
cmp
and
adc
mov
int3
outsb
fcoms
pushf
testb
in
adc
jbe
jl
and
inc
mov
and
push
mov
and
xchg
mov
ret
pop
cltd
cld
xchg
test
mul
ds
push
stos
xchg
push
sbb
sub
arpl
fcomi
mov
ja
xchg
je
pusha
xlat
movd
les
ds
fistpl
cwtl
inc
stos
gs
mov
push
xchg
loop
adc
xlat
ret
pop
ljmp
call
sbb
stos
fsubs
pushf
outsb
inc
fdivrp
xlat
add
pop
jb
in
fistpll
jmp
aaa
ret
cmp
sub
push
enter
mov
icebp
and
dec
pushf
dec
faddl
dec
popa
adc
xor
ljmp
ret
mov
push
scas
out
lret
fmulp
adc
data16
jns
imul
lods
dec
icebp
jmp
pop
out
and
std
jl
xchg
adc
in
mov
xchg
movsl
enter
add
lahf
mov
xorb
insl
into
dec
add
ljmp
pop
inc
jl
or
sub
push
std
scas
mov
jmp
cmp
in
mov
adcl
dec
mov
call
flds
cwtl
inc
and
sbb
imul
imul
fmulp
mov
jnp
insb
jecxz
shlb
or
mov
out
xchg
adc
jbe
xor
mov
mov
push
xlat
sbb
testb
loope
repnz
cmpsb
sahf
or
and
loope
xlat
mov
mov
mov
loope
xchg
fcomip
mov
pushf
or
into
sbb
jge
mov
insb
out
sbb
sub
add
fs
add
roll
xchg
mov
jl
inc
outsl
cmpsl
xchg
and
pop
mov
pop
push
das
inc
jecxz
or
inc
push
mov
loopne
rclb
in
fisttpll
out
cmc
sub
jle
je
pop
jl
mov
insl
add
mov
and
ss
push
loop
scas
add
xlat
imul
stos
sbb
jno
jo
pop
mov
and
loopne
dec
retw
imul
outsb
mov
sub
imul
int3
or
lahf
dec
adc
xor
xlat
cmp
and
pop
loopne
nop
lret
cmp
push
nop
and
jo
daa
xchg
jp
mov
xor
push
fisttpll
jmp
test
jge
push
outsb
or
pop
mov
inc
dec
mov
xor
int3
inc
or
inc
pop
addr16
push
cmp
mov
mov
cmp
mull
jge
out
std
das
daa
fwait
xor
aad
inc
outsl
xchg
or
rolb
lcall
mov
xchg
adc
jno
lea
es
push
scas
rcll
addr16
cli
lcall
adc
mul
outsl
mov
mov
inc
out
sub
cmp
das
adcl
hlt
mov
xchg
mov
addl
rclb
popl
push
add
cwtl
dec
jae
bound
call
cmp
fsubl
push
push
arpl
clc
daa
inc
mov
adc
xchg
js
jp
int3
dec
push
jp
or
ds
es
and
mov
sbb
adc
pop
fnsetpm(287
mov
sbb
xor
sub
mov
mov
or
mov
push
clc
popa
xchg
aam
pusha
push
add
repnz
or
pop
vmread
xor
mov
jns
sbb
and
rol
mov
push
pop
cmp
daa
movb
scas
shlb
and
bound
sub
in
ret
and
setne
dec
js
push
les
jmp
je
mov
imul
dec
inc
ret
test
iret
jae
mulb
into
jp
andb
jl
sahf
dec
push
pop
or
ja
xchg
push
clc
andl
lds
clc
cld
outsb
inc
es
xchg
stc
cmp
pop
data16
test
lea
in
in
outsb
fdivrl
cwtl
jmp
push
in
imul
push
xchg
aaa
adc
invd
loop
pop
rclb
icebp
je
inc
mov
mov
sbb
cmp
pop
jge
inc
dec
repz
jbe
ror
cwtl
les
adc
and
les
push
add
test
popl
pop
pop
dec
sarb
addl
jge
in
cmp
push
push
push
into
mov
adc
ja
nop
pusha
pop
xor
movsl
call
mov
arpl
pop
or
fwait
loop
xchg
sbb
mov
outsl
sub
push
mov
xor
lods
sub
jnp
jo
in
mov
sub
fsts
or
cmpsb
push
imul
aaa
jge
out
mov
das
stos
fwait
or
push
lods
shl
lcall
rcr
xor
test
adc
push
xlat
mov
push
jb
sti
xor
xchg
jmp
dec
mov
xlat
mov
adc
adc
and
cmc
ljmp
mov
push
repz
pop
sbb
sbb
or
nop
or
test
mov
jle
xchg
sub
xchg
andl
cmc
rcll
shll
xor
or
lock
daa
mov
xchg
in
mov
scas
cli
int
mov
adc
jbe
pop
ja
je
cmp
pop
outsb
cmpsb
cltd
xchg
dec
fcoml
test
cltd
push
push
add
mov
mov
loopne
andb
fdivr
pushfw
sbb
pop
and
adc
sahf
dec
pop
dec
lret
test
jl
sbb
punpckhwd
lock
es
inc
sub
mov
push
dec
roll
adc
loopne
cmpsb
inc
movsb
lahf
mov
rol
push
inc
insb
add
daa
loope
faddl
rclb
test
movsl
xchg
dec
or
mov
imul
pop
loop
sbb
fwait
int3
push
push
add
fadds
call
rcrl
je
cmpsb
push
mov
dec
jno
std
insl
hlt
clc
jno
nop
xor
mov
mov
lods
ret
fs
fmull
fwait
std
lock
iret
idivb
jmp
imull
dec
pop
ljmp
stos
jl
jo
fwait
ret
movsb
fs
pop
xlat
ss
out
gs
or
ja
push
mov
cmp
pop
and
stos
outsl
inc
adc
pop
gs
sub
movsl
out
in
adc
clc
push
in
xor
sti
sbb
test
and
call
mov
and
divl
pop
cmp
inc
sub
test
and
clc
jbe
scas
lahf
sub
icebp
mov
jb
mov
imul
mov
jb
jno
push
xor
lods
sub
mov
or
xor
pushf
inc
in
pop
cli
icebp
ds
int3
xor
jge
call
in
rcll
lods
test
xor
xchg
and
repnz
inc
jp
add
icebp
sarl
in
enter
mov
cltd
or
aaa
pop
mov
inc
aam
notb
gs
xor
cmp
push
loope
inc
mov
or
inc
jg
into
ret
cmp
scas
mov
sbb
sarb
jge
loop
sub
cwtl
nop
mov
jmp
jmp
pop
leave
xchg
addr16
xchg
jl
cmp
mov
popf
cli
mov
mull
xchg
inc
insl
popa
jecxz
push
or
dec
cmpsb
xchg
mov
xchg
lea
push
adc
andl
ja
mov
clc
and
push
and
in
pop
lods
sbb
inc
sbb
pop
sub
sub
xchg
mov
cmp
jp
in
arpl
das
in
movsl
cmp
repz
ljmp
mov
dec
xchg
xchg
mov
repnz
pushf
lahf
mov
or
outsl
in
scas
cltd
out
or
push
out
rorb
addr16
loopne
push
mov
xor
pop
inc
push
pop
loopne
or
or
cmp
cmp
pop
mov
jle
dec
test
cmpsb
push
mov
insl
xorb
jl
pop
xor
pop
cmp
pop
jno
test
aaa
fldz
xchg
shrb
adc
inc
test
pop
fcomps
inc
cmpsb
jmp
and
test
mov
mov
incl
add
dec
cmp
jae
sbb
test
jl
test
aad
inc
shr
mov
imul
lods
xchg
cmp
jae
loopne
adc
insl
cltd
jnp
add
sub
jne
inc
cmp
mov
popf
repz
andb
lret
test
sbb
lods
movl
cs
or
dec
and
ljmp
sub
movsl
ret
idiv
cmp
popa
sub
pop
aad
lahf
ret
xor
aam
xchg
push
or
push
and
sub
mov
sbb
lds
sbb
cs
loop
sub
add
or
insb
clc
loope
cltd
push
sarb
loope
fs
mov
xchg
pusha
xchg
insl
mov
jg
daa
push
loope
in
mov
cwtl
jns
rorl
inc
stc
jne
sub
xchg
add
in
sbb
stos
ret
outsl
and
inc
inc
inc
sahf
scas
cmpsl
lret
lea
lods
cmp
out
xor
fists
mov
cmp
jp
ljmp
add
mov
sbb
negb
mov
xorps
xlat
and
cmpsl
mov
add
das
in
adc
shlb
sbb
adc
mov
pop
outsl
ret
cltd
in
sbb
dec
rcrb
imul
adcb
dec
lods
fldenv
adc
add
mul
add
sub
xor
data16
addr16
add
xchg
adc
idivb
xchg
loop
rolb
popa
dec
fstpt
int
push
out
xchg
mov
cmpl
jle
xchg
fcmovbe
inc
push
jbe
test
aad
js
jl
pop
data16
test
add
push
ljmp
pusha
out
adc
dec
stos
test
lcall
cmp
dec
jb
dec
pusha
inc
test
test
sub
test
orl
sbb
rclb
test
sub
in
jne
ljmp
icebp
sbbb
and
es
cs
mov
sub
clc
pop
pop
dec
pop
cmp
xor
jns
mov
sub
sub
jb
jp
push
jo
daa
sub
out
rorb
xor
xor
iret
push
into
xchg
push
cmp
scas
inc
mov
lds
xchg
xlat
xor
add
adc
arpl
andb
inc
gs
popf
dec
std
movsb
cmp
adc
aam
cmpl
cmp
jns
sub
sub
lret
mov
lret
repnz
pop
jbe
jb
inc
inc
faddp
ret
xchg
imul
ret
fisttpl
mov
xor
jne
lock
out
aad
fists
lahf
cmc
jp
pushf
cltd
jo
repz
cmp
pop
add
jne
out
add
mov
mov
add
xchg
jge
pop
jg
adc
sahf
ret
decl
mov
lret
or
push
xor
sbbl
and
jno
push
je
add
adcb
repz
in
cld
inc
jne
ss
pop
push
xor
xor
and
xchg
push
sbb
and
rcll
mov
sbb
adc
push
or
or
dec
add
sub
ss
xchg
enter
fs
loope
or
stc
push
ret
jp
nop
dec
sub
push
aam
jge
call
add
dec
movq
dec
or
ss
push
mov
inc
jmp
fcoml
sub
xchg
lds
popf
scas
mov
xchg
xchg
cwtl
outsb
lds
in
mov
cmp
jle
adc
xchg
cltd
cs
sub
outsb
dec
add
insl
insb
adc
push
mov
inc
pop
cltd
ficompl
iret
cli
daa
push
and
and
icebp
shr
popa
inc
shl
mov
dec
fisubrs
hlt
in
or
push
enter
mov
iret
xor
mov
jnp
pop
nop
and
addr16
leave
hlt
andb
adc
xor
xchg
inc
adc
insl
or
dec
nop
inc
movsl
int
hlt
pop
or
mov
jae
sbb
mov
addb
inc
mov
cmp
mov
mov
hlt
mov
inc
cmp
pop
sub
and
leave
push
lret
and
cltd
xor
xchg
adc
aaa
gs
sub
aad
mov
sub
push
aaa
sarl
push
mov
mov
aas
je
orl
gs
fucomi
pop
mov
or
or
scas
test
into
scas
sti
add
ljmp
xor
fwait
pop
adc
mov
and
xchg
out
and
nop
pop
xchg
push
pop
imul
push
mov
jmp
pop
in
loop
cmp
pop
pop
aam
add
pop
dec
pusha
push
push
sbb
shll
jmp
test
mov
dec
adc
popf
xlat
jmp
add
inc
mov
cmc
imul
and
sub
orb
dec
push
lods
ljmp
test
nop
in
sub
push
mov
lret
shr
inc
cld
in
push
adc
aaa
mov
mov
sbb
leave
insl
int3
popf
clc
sbb
pop
movl
xorl
cmpsl
mov
mov
fisttps
mov
test
arpl
and
mov
int
pop
in
mov
orl
fnstenv
mov
xchg
push
fldenv
push
cmpsl
cmp
ss
sub
push
xor
lret
inc
jbe
xor
movsl
int
stc
jp
jbe
or
mov
arpl
cltd
jge
enter
mov
cmpb
lahf
dec
pop
xchg
notl
xchg
lcall
cld
bound
or
sbb
push
dec
addb
jmp
cmpsb
xchg
mov
imul
cmp
xchg
call
push
jg
fisubs
and
dec
push
sbb
inc
jnp
in
jp
inc
pushf
jns
cld
int
inc
aam
xchg
and
loopne
jmp
adc
push
mov
push
mov
je
jo
mov
mov
add
test
fistpll
xor
loopne
adc
push
sub
inc
and
loopne
push
push
sub
out
dec
pop
int
mov
pusha
inc
out
fisubrl
loopne
add
mov
xor
jecxz
and
adc
xor
sub
lods
clc
in
sarb
das
ljmp
test
and
inc
push
lcall
jnp
dec
lret
adc
sbb
and
jle
xlat
ja
lods
insb
cld
nop
shl
xor
pop
cld
dec
mov
dec
in
mov
push
mov
xor
sbb
das
cmc
lret
lret
scas
mov
movsb
arpl
cmc
jns
flds
add
les
aaa
in
add
mov
xor
jl
push
jae
sub
mov
mov
mov
clc
mov
std
add
lock
int3
int
rcrb
mov
and
clc
push
in
pop
aad
jns
mov
stos
sbb
mov
outsb
mov
inc
pop
nop
cwtl
mov
dec
mov
push
or
inc
popa
push
mov
aas
test
ret
push
ss
subb
mov
inc
mov
call
or
sbb
pusha
loop
mov
pop
sub
or
or
mov
dec
push
rorb
mov
fists
xlat
subl
adc
cwtl
lcall
xor
je
mov
sahf
sub
into
dec
add
into
sbb
push
outsl
mov
push
pop
aam
negl
or
pushf
mov
cmp
es
pop
pop
aam
or
sub
arpl
je
push
xchg
xor
mov
fstpt
add
jge
cmc
mov
dec
jae
pop
ss
into
mov
mov
sbb
inc
xchg
mov
push
jge
mov
fsubrl
int
repz
jae
add
frstor
dec
xor
mov
add
lock
in
mov
cmovl
xchg
test
xchg
pop
cmp
rorb
cmp
enter
insb
pop
jmp
ljmp
es
cmp
mov
mov
pop
repnz
push
and
movsb
adc
popl
enter
jg
movl
lret
push
daa
ret
ret
lods
and
jle
cmc
aad
pop
cmp
movsl
test
xchg
xor
popa
repz
mov
mov
nop
sbb
fdivrs
test
push
dec
push
lods
inc
int
aas
lods
repz
fldl
cmp
xchg
stos
pop
ret
adc
mov
jle
inc
sti
push
int
or
inc
xlat
jbe,pt
xor
xor
inc
cwtl
call
dec
jo
mov
rolb
daa
xlat
les
dec
inc
lea
sbb
mov
stos
add
or
imul
in
movsl
or
add
ds
shr
cmp
mov
lahf
pusha
nop
and
imul
cld
jge
adc
sahf
xchg
xchg
out
ja
adc
scas
lock
leave
mov
jge
sahf
into
mov
cli
cmp
mov
sysret
inc
xor
test
int
cwtl
cmp
push
fidivl
js
notl
sbb
inc
hlt
gs
mov
pop
fcmovnb
push
js
jg
fsubrl
lahf
xchg
push
pop
sti
rclb
and
xor
jmp
popf
mov
dec
faddl
push
push
es
xchg
aam
push
pop
xor
mov
push
loope
push
mov
addl
and
orl
gs
aas
xlat
mov
insl
shrb
jmp
jae
cli
shll
aaa
sub
stc
fisttpll
fistpll
mov
icebp
lock
adc
or
jns
out
das
outsl
movsb
or
insb
inc
push
lds
stc
in
mov
ret
and
aam
adc
fsubr
mov
mov
jge
jecxz
push
roll
inc
sahf
scas
hlt
iret
cmp
push
sub
test
jp
add
les
lods
xor
ja
xchg
jp
fidivs
lock
rcrl
inc
loope
sbb
rcrb
out
je
and
clc
movsb
push
shrl
mov
inc
decl
jne
std
jnp
pop
mov
sbb
inc
and
inc
pusha
or
hlt
mov
mov
pop
out
lahf
test
pop
out
imul
movsb
imul
sbb
ljmp
insb
repnz
push
xor
lret
out
shll
adc
or
adc
dec
mov
mov
ret
or
rol
test
repz
cmp
ret
andb
push
cmp
cmp
repnz
pop
xchg
cmpb
sub
jnp
imul
push
mov
mov
dec
lea
mov
pop
xchg
add
inc
fwait
dec
popa
xchg
subb
inc
imul
mov
fldt
push
mov
test
xor
mov
pop
cmp
inc
outsb
out
cs
in
outsl
xchg
aam
inc
mov
fsubrs
ret
pop
int3
gs
fdivp
jg
sbb
das
jb
dec
or
in
jg
mov
lock
inc
test
icebp
sub
or
and
inc
jmp
pop
push
stos
inc
and
adc
hlt
jae
cmpb
std
sahf
mov
arpl
xor
mov
das
cmp
adc
push
lea
add
rcrl
pop
inc
pop
stos
lods
jbe
xlat
pop
or
pusha
arpl
jg
lret
leave
and
push
mov
inc
clc
xchg
mov
push
push
test
in
jno
mov
in
inc
and
sub
sbb
mov
test
mov
cmp
push
push
test
jg
stc
sbb
pop
or
ret
dec
push
lods
sub
sbb
dec
lods
xlat
daa
jge
xchg
mov
pop
mov
mov
flds
test
cmc
je
mov
pop
adc
sbb
cltd
or
jne
add
fs
adc
pop
fsubl
js
cmp
test
lds
cltd
and
hlt
add
imul
mov
add
push
xchg
jae
pushl
sahf
dec
and
sbb
xchg
jae
aas
dec
jecxz
das
mov
xor
cmpsb
mov
lret
xchg
loopne
mov
fistpll
adc
lods
mov
inc
push
fiadds
pushf
ficompl
int3
ja
cs
sbb
push
add
shll
add
loop
and
and
push
jne
sti
ds
adc
andb
jle
stos
negb
out
inc
jo
loope
mov
subb
repnz
jo
xorl
pop
les
jl
mov
pop
in
out
jbe
ret
filds
or
push
jbe
add
push
test
jge
out
pop
leave
push
and
inc
in
aam
mov
int3
lods
ret
int
dec
ljmp
sbb
jo
inc
call
bound
mov
flds
push
and
cmp
mov
or
fbstp
push
inc
xlat
pop
setno
fsubr
aad
fcomps
cltd
pushf
mov
pop
cmp
ss
mov
xchg
aaa
pop
sbb
adc
mov
push
lret
popa
or
addl
sub
push
aaa
stos
call
cmp
cli
scas
mov
or
imul
dec
icebp
int3
sti
mov
mov
sti
sarb
xor
icebp
mov
mov
icebp
jno
arpl
and
push
andl
push
aas
cmp
mov
mov
sbb
jle
mov
xchg
mov
insl
fldenv
lret
or
insb
popf
scas
rorb
sarl
sbb
or
or
pop
push
clc
test
imul
lea
les
sbbb
mov
push
aam
sbb
movsb
punpckhdq
pop
fs
in
ss
add
jb
mov
int
das
mov
push
popa
lahf
cld
mov
xchg
orb
mov
rcr
push
mov
add
mov
add
outsl
ret
outsb
je
insb
inc
jns
lea
mov
loopne
add
test
sbb
outsl
shl
mov
mov
stos
jnp
xchg
bound
loopne
push
dec
adc
add
fistps
mov
mov
pop
mov
sbb
and
jno
sub
or
sbb
arpl
xor
subl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
subl
add
adcl
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
mov
adcl
xor
mov
add
inc
movzwl
mov
xor
movb
lea
or
mov
sbb
mov
mov
addl
xor
orl
sub
orl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
push
movl
xor
mov
movzwl
sbb
push
adcl
mov
adcl
xor
mov
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
mov
movl
xor
sbbl
jmp
and
mov
fwait
sbb
loope
fwait
jecxz
jb
rcrb
jb
add
int
jle
cmp
inc
mov
push
mov
sbb
addr16
gs
ret
adc
sbb
push
push
adc
negb
in
push
xor
pop
addr16
int
mov
int
rolb
divl
lods
push
mov
arpl
inc
test
mov
sub
lahf
inc
bound
sarl
fnstcw
push
mov
mov
pop
hlt
jns
scas
jle
rcll
adcb
adc
sub
lahf
popa
std
cwtl
insb
cmp
test
mov
ja
and
pop
push
lods
movsb
xor
jb
mov
push
mov
mov
test
pop
xchg
pop
add
inc
sub
loopne
sbb
imul
xlat
in
cmpsb
mov
imul
cmp
and
and
inc
inc
or
call
push
pop
mov
ret
cmpsl
mov
push
sti
stos
xor
pop
pop
out
or
or
push
stos
lahf
xor
pop
mov
jnp
mov
mov
pop
mov
daa
inc
mov
pop
xchg
adc
xchg
sbb
ja
mov
das
push
scas
and
mov
popf
or
aas
mov
inc
call
ss
test
insb
dec
or
jle
adc
lcall
mov
insl
ss
out
cmp
call
adc
es
push
adc
xor
or
xchg
popf
pop
gs
cmc
aas
daa
arpl
adcb
test
mov
mov
push
arpl
call
scas
add
ret
arpl
in
push
popa
cwtl
cmovg
sub
push
sar
mov
lcall
gs
jb
adc
imulb
lahf
pop
jnp
nop
stos
add
fcompl
pop
mov
inc
ljmp
gs
imul
out
fsub
xor
pop
mov
dec
call
push
lret
xor
sub
xor
jns
bound
jns
add
aas
sbb
mov
pushf
sub
addr16
xchg
and
ljmp
ja
mov
ret
sbb
pusha
cmp
mov
push
push
cmp
pusha
imul
jg
scas
dec
mov
and
cmp
jmp
xchg
jecxz
fcoms
out
push
adc
out
dec
sbb
jmp
dec
jl
pop
jne
xor
fsubrs
scas
test
xchg
loope
push
pushf
imul
pusha
fsubrs
cltd
pop
ds
mov
iret
jno
cmc
push
cwtl
mov
scas
xor
and
sub
sbb
mov
pushf
out
xlat
fldl
add
xor
ret
dec
add
mov
fstl
daa
repz
mov
xorl
push
push
imul
leave
aad
sti
dec
cli
mov
xchg
adc
scas
in
cmc
cmp
jp
mov
inc
stc
data16
dec
pusha
data16
push
mov
adc
mov
cmp
imul
test
jbe
mov
clc
loope
cmp
mov
icebp
pushf
cmp
out
stos
in
aas
dec
sbb
sbb
mov
sub
ss
dec
lods
fs
jbe
mull
sub
js
iret
add
std
ret
stos
es
xchg
jb
nop
popf
mov
imul
lcall
cli
cmpsl
sub
out
aam
cmp
shll
inc
loope
rorb
arpl
or
mov
lret
lods
inc
inc
sbb
clc
enter
jae
rcll
pop
out
and
dec
pop
popa
jle
mov
into
push
push
lea
js
fsts
jnp
mov
imul
lods
sbb
loopne
dec
data16
sub
adc
stos
arpl
cld
jecxz
rcl
mov
pop
fisttps
jle
inc
in
lahf
add
xor
mov
dec
pop
mov
repnz
popf
aas
insb
lea
pop
lea
aad
jnp
add
imul
xorb
or
jge
daa
iret
call
out
sti
sub
rcrl
and
xchg
addb
mov
pop
test
mov
add
xlat
adc
pushf
inc
pop
xor
scas
cltd
std
push
hlt
inc
and
inc
mov
loopne
jnp
outsl
mov
daa
notb
fs
dec
inc
stos
or
cmpsb
jp
mov
cmp
fdivr
das
jge
xchg
lcall
add
outsl
add
mov
jp
xchg
inc
xor
andb
fwait
outsl
fs
inc
jge
sub
ds
lea
rclb
in
sbb
test
hlt
push
mov
test
adc
push
imul
add
push
dec
mov
rorb
push
mov
mov
cmp
xor
dec
xchg
lock
and
xchg
adc
leave
daa
mov
push
xor
mov
jge
icebp
sahf
fbld
stos
leave
inc
addr16
loope
repnz
daa
mov
sbb
popa
push
xchg
jno
sub
mov
data16
in
cs
test
je
xchg
ficomps
push
test
fildll
jl
jno
sbbl
cmpsb
cmpsl
xchg
dec
xchg
or
clc
lret
pushf
mov
enter
sub
mov
xchg
cmp
insb
mov
add
mov
pusha
sahf
lock
or
pop
push
push
or
wbinvd
and
sub
shrb
dec
outsl
and
xor
cmpsb
test
push
fildll
mov
in
fcmovne
jle
repz
mov
aad
mov
out
dec
mov
in
sbb
sbb
add
xchg
or
mov
dec
not
sti
orb
bound
aad
sub
shll
push
es
add
insb
adc
lcall
testb
stos
mov
push
repnz
pop
sub
xor
iret
push
stc
xchg
jl
push
cmc
pop
jne
add
fs
mov
or
adc
or
int3
ret
mov
xchg
inc
test
push
pop
inc
lret
jl
xchg
pop
pop
pushf
mov
mov
lock
xor
loopne
test
and
cli
neg
fwait
pop
ljmp
mov
or
subl
or
push
jmp
pop
nop
push
pop
dec
push
fisubs
jecxz
inc
add
pop
mov
mov
dec
jge
mov
lods
stos
jo
push
jecxz
sar
dec
jg
leave
lock
xlat
mov
data16
in
rorb
call
push
cmpb
mov
dec
outsl
dec
pop
movsl
mov
xchg
sbb
cmpsb
xchg
cmpsb
xor
mov
mov
push
lods
dec
test
movsb
sub
je
mov
and
outsb
imul
pop
stos
and
pop
je
aam
mov
mov
add
sub
xor
and
icebp
mov
cs
fwait
pop
add
jbe
mov
fisttpl
sbb
push
notb
inc
cs
and
aas
lahf
scas
imul
pop
cmp
jb
clc
popa
inc
leave
push
mov
xlat
cmp
ljmp
repz
out
dec
int3
jnp
lods
and
jle
push
and
xchg
shlb
mov
inc
fists
fwait
mov
or
adc
push
insl
or
xor
ds
sub
and
sar
add
rol
gs
movsl
into
clc
stc
stc
xor
fidivrs
leave
adc
xchg
adc
sbb
jb
mov
fists
les
pop
fmul
dec
adc
in
pushf
jns
orl
lret
jne,pt
xchg
jle
sbb
cld
insb
test
sbb
lcall
xor
pop
add
pop
mov
jo
nop
add
movsb
cli
mov
add
aad
mov
jns
in
ss
aad
push
mov
gs
rcrb
fstl
imul
lods
dec
lret
das
sub
shll
outsl
repnz
adcb
inc
rcll
gs
mov
xchg
pop
mov
das
sbb
cmc
fstpl
and
sbb
pop
mov
daa
das
mov
insl
sub
fs
stos
or
fnstsw
sub
jns
jno
and
aam
cmpsb
cli
push
jo
inc
movsl
sahf
bts
lods
fyl2x
pusha
pop
push
repnz
data16
push
and
mov
xchg
jae
outsb
mov
push
xor
imul
xchg
jne
fisttps
cmp
push
cmc
mov
fmuls
iret
jno
jmp
and
pushf
dec
fdivs
sar
mov
push
pop
repnz
cmc
rclb
sub
mov
pop
xor
pop
sub
mov
popf
pop
popa
fdivrs
add
jmp
or
xlat
clc
imul
mov
loop
int3
jge
loop
stos
jne
pop
jp
inc
test
out
pop
and
jmp
aas
ret
shlb
test
lods
rcr
sub
fsubrl
fdivrs
insl
jae
xlat
push
mov
and
xchg
jle
push
adc
add
cld
and
popa
ret
clc
mov
pushf
repz
mov
sub
inc
cmp
in
inc
fcompl
add
adc
lods
std
hlt
repnz
or
jle
aas
add
outsb
cmp
orb
jg
add
jno
nop
stos
mov
push
shlb
insb
push
mov
mov
cmp
or
adc
pop
in
movsl
adc
lcall
imull
std
daa
negb
push
xor
jbe
add
cwtl
fld
add
fs
fsts
daa
imul
mov
sbb
xchg
fwait
stos
xchg
mov
adc
addb
mov
push
mov
cltd
imul
imul
fnstcw
cwtl
out
fistps
rorb
arpl
jl
xor
das
popl
pusha
jge
push
sti
out
and
jo
or
push
ret
mov
std
out
pop
dec
sbb
pop
push
push
dec
mulb
into
lcall
add
jb
xchg
sub
xlat
shll
ret
push
nop
jb
int3
int3
into
rcrb
out
mov
sahf
mov
sbb
push
call
xor
lahf
outsb
mov
int
cld
adcl
testl
pop
and
leave
cmpsl
inc
cmpsb
xchg
repnz
scas
jo
dec
call
and
or
inc
mov
inc
mov
gs
aad
mov
addr16
dec
push
mov
cmp
sub
add
jb
into
add
mov
aaa
popf
inc
stos
test
jnp
sbb
mulb
out
lods
pop
mov
insb
adcb
xchg
jg
mov
jmp
cmpsl
add
jmp
outsb
cmp
dec
lret
ss
jp
out
jl
mov
xchg
xchg
cmpsl
pop
mov
repnz
in
mov
push
jge
enter
mov
jne
movsb
sarb
in
mov
lock
jns
aad
jnp,pn
push
cld
pop
xorb
add
push
lcall
push
dec
mov
xor
lds
lods
push
inc
lds
sbb
fsts
adc
or
mov
sub
push
in
and
xchg
sarb
mov
lahf
mov
fisttps
inc
stos
bound
mov
testb
mov
add
sbb
out
in
mulb
scas
mov
stos
inc
mov
jns
xchg
sbb
xor
lea
mov
mov
cli
mov
sbb
push
hlt
movsb
sarb
popf
adc
push
cwtl
mov
pop
test
and
jecxz
in
cmp
add
test
test
lds
adc
sub
cmp
stos
pop
stos
fbstp
call
in
dec
sbb
or
sub
inc
stos
or
mov
push
imul
sbb
ret
xor
into
out
inc
pop
and
scas
out
movsb
add
add
push
push
stos
inc
add
fstpt
fdivs
add
sub
das
and
lcall
mov
into
lret
cwtl
or
pusha
adc
or
sub
or
stc
xlat
adc
lcall
and
stos
lret
aaa
add
pop
dec
xor
or
andb
movsl
cmp
push
sub
arpl
loop
pop
inc
dec
cld
iret
add
jb
sbb
sti
and
sbb
cmpb
mov
inc
lods
cmp
dec
leave
ss
lds
sti
outsl
aam
imul
xor
cld
out
pusha
cmp
mov
ja
jp
leave
or
jp
ja
dec
dec
jle
jno
cmp
jne
repnz
sbb
in
and
inc
xchg
shrb
std
and
popf
call
push
rorl
push
pop
lock
xchg
sub
adc
xchg
or
sti
mov
xchg
push
cmp
push
push
sub
jg
adc
inc
adc
stos
sub
mov
jns
and
movsb
xor
int
fndisi(8087
aaa
xor
insl
jbe
stos
push
int
inc
or
adcl
scas
ss
pop
pop
popa
or
mov
out
and
pop
sbb
mov
into
jb
jne
inc
jl
inc
add
xchg
jle
xor
sub
das
insb
inc
movsb
add
push
adc
add
jno
mov
ja
mov
lds
or
inc
mov
testl
mov
fsubrl
data16
cld
sbb
mov
fwait
add
sti
sub
or
and
pop
shll
sti
lret
push
jle
xor
and
mov
lock
rcr
fsts
test
sti
stos
cmp
mov
dec
or
int
scas
andl
sti
lods
fwait
sbbl
jae
movsb
clc
inc
inc
xchg
ja
mov
inc
xchg
cmc
or
xchg
push
lea
int3
cltd
xchg
or
mov
bound
adc
js
rorl
sahf
inc
jg
sub
inc
xor
js
aad
push
jbe
jg
stos
std
enter
pushf
xor
jae
jno
push
adc
inc
aam
jmp
push
lods
jmp
mov
enter
pop
xlat
lret
sbb
inc
lods
xchg
sbb
lock
lods
inc
cmp
push
dec
ja
mov
xor
inc
es
jbe
mov
out
add
sbb
mov
mov
cmp
pop
sbb
cmc
mov
or
add
imul
addl
push
movsl
ljmp
xchg
mov
jl
adc
cmpsl
stos
ret
clc
and
mov
mov
scas
xor
fisubrl
mov
jbe
xchg
sub
jmp
cltd
icebp
subb
jle
dec
loopne
mov
cmp
es
daa
xchg
sub
xor
xorl
in
lret
out
jmp
mov
out
push
add
push
mov
or
and
sbb
cwtl
aas
es
jmp
cwtl
mov
dec
and
jnp
icebp
aad
imul
je
fcmovnb
shl
adc
arpl
pop
into
xor
mov
push
icebp
mov
and
push
inc
pushf
cmp
jge
cmpsb
jnp
jmp
arpl
sub
cmpsb
cmp
out
lea
sbb
xor
or
jae
shll
test
movsl
mov
xor
loope
push
subl
nop
sti
pop
repnz
sbb
scas
lods
aas
mov
or
lds
test
and
mov
xlat
mov
mov
dec
decb
push
or
mov
inc
inc
dec
jge,pt
add
jno
out
add
pop
shr
pmulhw
mov
divl
sbb
insl
test
fs
outsl
scas
fsubs
in
sub
dec
xchg
adc
push
jnp
stc
test
push
into
shrl
ret
push
ljmp
rcrl
outsb
or
adc
jge
xchg
imul
into
mov
pop
int
imul
imul
cmp
pop
cmpsl
xchg
adc
lods
cwtl
inc
jne
out
push
addr16
cmp
in
mov
xor
bound
ds
cmpsb
inc
stos
pop
push
insb
ss
inc
les
rcl
bound
lods
and
sbbb
pop
pop
test
mov
cltd
sbbb
inc
mov
fadds
and
cs
call
fcmovb
nop
cmp
lea
sbb
mov
xor
aas
mov
fcmovnu
jnp
add
xchg
testb
mov
sbb
scas
mov
fcom
sub
cmpsl
scas
test
fwait
data16
jae
int3
or
mov
addb
scas
push
hlt
cwtl
repz
cwtl
and
mov
scas
shrl
push
inc
mov
mov
mov
inc
mov
mul
shll
inc
sti
je
rorl
inc
mov
mov
sub
cmp
cmp
fmulp
pop
push
mov
xor
mov
push
jae
inc
int
sub
cmp
icebp
test
arpl
out
xchg
lahf
jl
sbb
lahf
subb
fistpll
in
inc
ljmp
ljmp
sub
jl
js
mov
loopne
sbb
fdivs
fsubrs
lods
insb
mov
push
xlat
das
lock
icebp
movl
pusha
aad
mov
or
mov
in
std
jo
pusha
jecxz
inc
leave
scas
dec
lcall
and
sti
scas
sahf
int3
shlb
int
push
lahf
sbb
std
push
shrb
adc
call
inc
push
push
adcb
ret
or
sbb
lods
or
enter
xor
cs
sahf
dec
mov
in
pop
stos
sub
xchg
add
aad
pushf
sbb
jmp
sub
mov
xor
xchg
push
nop
pusha
lods
test
call
call
sbb
fnstcw
cltd
mov
xchg
lret
push
mov
adc
mov
xchg
adc
stc
inc
mov
adc
inc
xor
cmc
popf
jmp
insl
mov
enter
push
lock
sub
mov
shlb
fmull
std
out
sbb
and
je
addr16
mov
xchg
xor
mov
jo
adc
add
mov
mov
pop
cmp
shlb
popf
mov
push
dec
in
rcrl
bound
insl
int
mov
bound
add
xchg
adc
push
cmp
xchg
data16
add
add
icebp
adc
xchg
stc
cmpsb
sub
mov
lret
enter
jle
xor
xor
pusha
je
out
test
inc
daa
xchg
inc
clc
outsb
mov
lock
jne
gs
sub
pop
or
mov
pop
pop
stos
int3
les
mov
push
aas
ljmp
fldl
fcom
mov
sti
jp
je
mov
push
lods
pop
xchg
xor
bound
cld
or
sbb
add
and
xchg
pusha
call
or
movsb
sub
and
cmp
xor
mov
ljmp
mov
push
xor
xchg
and
outsb
add
sbb
popa
ds
sbb
shrb
lahf
inc
xorb
ret
fisubl
stos
pop
repnz
adc
lret
jbe
adc
stc
repnz
xchg
mov
jae
arpl
cmp
adcb
dec
jb
cld
pushf
push
xor
push
or
sbb
fidivrl
mov
push
fsubl
xor
cmpsl
jb
xchg
bound
cwtl
aaa
xchg
mov
in
or
push
fwait
scas
sbb
rclb
bound
inc
js
jae
sbb
les
dec
or
clc
adc
divb
jl
add
dec
sbb
enter
insb
xor
nop
jle
sar
jg
add
shrb
dec
stc
mov
fdivr
arpl
cwtl
lahf
cmp
andl
sahf
jle
adc
xchg
xor
adc
mov
xor
mov
push
dec
cmpsb
out
gs
or
rclb
cwtl
push
fs
sub
test
sub
sub
insl
mov
xchg
jp
xchg
pop
ret
or
cmpsl
adc
mov
dec
stos
stos
lods
int3
test
fists
add
stos
adc
pop
movsl
sbb
dec
js
mov
xor
mov
adc
cmc
jo
push
mov
inc
push
aas
mov
jl
jns
sbb
stc
push
add
or
sub
sub
dec
div
jae
xor
pop
lcall
push
mov
int
fldcw
popa
and
xchg
cmpl
pop
test
inc
lahf
shrb
scas
jge
or
int
pop
and
ja
jg
xor
jmp
inc
in
sahf
jne
roll
xor
dec
sti
ds
sub
push
xchg
lcall
xchg
jnp
lock
out
jg
mov
cmpsl
outsb
sub
in
mov
inc
cltd
lods
mov
push
fwait
or
js
pop
loope
cmp
adc
xor
push
outsb
pop
nop
sbb
bound
lds
pusha
inc
cwtl
shrb
scas
shrb
jno
fmul
fdivr
adc
mov
push
mov
popa
bound
in
dec
ficoms
push
lahf
xchg
xor
xor
shll
testl
pop
shrl
fwait
testb
add
push
lahf
nop
movsl
rorb
stos
or
xor
pop
xor
sahf
xor
andb
cmp
mov
out
cld
into
cmp
fldcw
daa
sbbl
int
push
enter
fwait
loop
lods
push
or
mov
mov
pop
jne
lds
hlt
or
dec
in
or
loop
mov
rolb
or
add
imul
rorb
push
pop
mov
lret
sarl
ret
xchg
ds
mov
out
mov
pushf
das
jns
mov
movsl
test
fadds
sbb
mov
adc
lcall
lock
sub
div
sub
leave
leave
mov
xor
arpl
jns
aaa
cmp
cmc
xchg
jmp
stos
mov
xchg
enter
je
mov
mov
push
and
mov
mov
mov
ret
fwait
out
ds
add
mov
mov
dec
in
lcall
and
jmp
mov
fwait
ljmp
push
push
push
je
lds
add
pusha
roll
mov
aaa
inc
test
mov
and
mov
shlb
dec
cmp
jmp
mov
xchg
dec
hlt
ds
adc
fisubrs
adc
je
movsb
pushf
pop
outsl
rol
mov
and
gs
xchg
cld
pop
and
rcll
bswap
jb
jge
mov
pusha
xchg
push
arpl
xlat
lods
dec
popa
les
pop
lds
mov
sti
test
xor
int
adc
fisubs
pusha
mov
cmp
jle
mov
cmpsb
popfw
test
sub
sub
jmp
sarb
dec
pop
les
dec
jae
sti
xchg
jge
loope
lcall
push
xorb
pushl
mov
fsubrs
fiaddl
add
lods
mov
call
mov
add
aam
shrl
stos
test
pop
lret
popa
jbe
mov
testb
inc
sub
jge
cmp
rclb
dec
pop
out
cli
ret
jle
mov
mov
lret
gs
jbe
arpl
mov
test
outsb
lahf
out
out
push
sub
js
test
xchg
mov
setne
enter
cmc
fucom
addr16
inc
int
jecxz
jge
cli
push
popf
or
dec
mov
shr
xchg
movsl
adc
les
xor
lret
in
push
add
cmp
mov
js
orb
mov
jl
lret
imul
stos
nop
mov
movsl
mov
and
pop
sbb
gs
inc
cmpsl
dec
sub
or
jo
inc
xchg
and
sbb
roll
das
jmp
lret
cmc
sub
cmc
imul
fs
push
movl
cvtdq2ps
pop
out
xchg
sbb
jmp
test
nop
sbb
sbb
xor
sbb
sbb
scas
popa
mov
xor
movlps
rcr
rcll
jns
xchg
data16
pop
outsl
lahf
stos
sub
cmp
dec
jae
les
and
xchg
cmpl
in
shl
sbb
sub
sub
sbb
ss
addr16
pop
je
cld
mov
out
push
cld
mov
sbb
testl
aam
std
lods
pop
add
pop
test
push
inc
jg
sbb
fwait
dec
std
mov
push
fwait
xlat
pop
push
rorb
je
ret
adc
mov
je
cld
lcall
add
xlat
loop
mov
nop
fdivrp
push
inc
add
orb
scas
int
or
mov
sbb
mov
roll
sub
xlat
out
lcall
outsb
or
leave
lahf
popa
shrb
lret
xchg
lea
xchg
ret
cli
loope
bound
and
frstor
pop
lea
mov
mov
inc
test
fsts
repnz
or
mov
outsl
add
imul
mov
cmpsl
addr16
data16
xchg
xchg
bound
adc
fadd
test
add
push
mov
cli
fcmove
imul
xor
mov
cmp
pushf
outsb
push
jmp
mov
push
mov
fs
sahf
xorb
shlb
stos
push
pop
test
mov
add
out
dec
movsl
pop
xor
jl
lods
push
pop
dec
loope
jo
cltd
les
inc
mov
out
scas
or
stc
push
jns
adc
inc
ljmp
mov
cmc
inc
pop
inc
scas
mov
cs
sbb
mov
dec
shrb
out
sub
add
pop
enter
or
sbb
pusha
xchg
repnz
insb
icebp
dec
fwait
inc
shl
sarl
in
jb
ds
cmp
xor
pop
test
inc
scas
out
cwtl
mov
adc
jle
fldenv
iret
push
inc
mov
and
aaa
mov
mov
xor
mov
fwait
jnp
push
insb
xchg
aaa
cs
into
cmp
aaa
mov
mov
seta
mov
and
mov
inc
rclb
sub
pop
rolb
jecxz
nop
mov
pop
fdiv
dec
jno
pop
jbe
adc
outsb
imul
mov
or
shrl
and
sar
std
mov
jno
xor
subl
mov
shr
mov
lds
imul
or
leave
iret
adc
gs
add
mov
inc
test
cmp
mov
inc
mov
xchg
push
push
das
sarl
fcompl
or
pop
lds
rorl
and
adc
inc
xchg
scas
push
fcompl
in
out
scas
scas
sahf
and
fbstp
xor
or
stos
jo
scas
or
pop
insb
xor
pop
dec
mov
dec
mov
sti
in
ficomps
mov
push
push
push
aam
stos
imul
jb
nop
xorl
icebp
or
add
xlat
ret
pop
cltd
cmp
mov
incl
inc
add
gs
push
jle
cmp
sbb
jle
jae
ret
test
fsubl
xor
fs
insl
not
fwait
or
aam
and
fwait
iret
in
call
pusha
gs
mulb
mov
add
in
repnz
aad
inc
xchg
repnz
jg
int
movsl
cmp
mov
int
mov
icebp
in
insl
sahf
leave
xchg
aad
sbb
rdpmc
aad
and
xor
mov
dec
xchg
and
loopne
xor
xchg
fs
rcr
sub
pusha
cmp
jnp
mov
movsl
cld
push
fwait
adc
je
sbb
jmp
repz
cmp
pop
test
popf
push
dec
mov
js
shll
xchg
es
push
mov
ret
mov
adc
pop
mov
adc
sbb
mov
roll
push
xchg
repnz
movsb
adc
data16
fldt
arpl
outsb
scas
ljmp
sbb
and
mov
imull
sub
adc
aam
mov
outsl
data16
rolb
adc
jae
jmp
and
or
jb
xor
les
gs
pop
mov
jmp
mov
dec
imul
pop
mov
test
das
inc
push
andl
leave
insl
iret
push
dec
in
mov
mov
mov
pop
das
inc
pop
or
nop
mov
mov
mov
xor
jl
call
or
cmp
test
and
cli
jecxz
push
adc
in
and
daa
aam
add
inc
inc
mov
movsl
and
fdivrs
cmp
rcrl
fldl
pop
sbb
stos
iret
xlat
cmp
shl
sub
iret
pop
fcom
jmp
push
test
jns
rcrb
hlt
adc
mov
jae
dec
test
mov
dec
outsl
aaa
adc
das
mov
loop
fiadds
mov
imul
pop
sub
pop
aaa
or
pop
sub
jae
cmp
mov
dec
pop
mov
leave
cmp
stc
fnstcw
inc
cmp
xchg
outsl
imul
dec
adc
fdivrs
test
mov
je
push
fadds
and
or
fmull
xchg
in
rorb
mov
jecxz
sub
xorb
test
xchg
loope
pop
dec
jb
mov
addr16
popf
sbb
test
jecxz
and
dec
mov
inc
sub
adc
scas
das
pop
je
adc
sub
popa
andl
inc
push
adc
xchg
les
scas
iret
fistps
sbbb
loope
or
clc
test
add
jmp
jno
add
movb
js
clc
loope
add
or
or
sti
in
bound
cmpb
cltd
cmpsb
sbb
or
fimuls
xor
lahf
jbe
dec
pop
fisubl
test
mov
jle
sbb
pop
test
mov
xchg
jp
mov
pushf
add
mov
insb
fstpt
xor
int3
mov
dec
cmp
rolb
stc
sarb
popf
mov
jecxz
mov
inc
sti
aas
cwtl
js
hlt
xlat
sahf
xchg
lahf
fwait
nopl
les
scas
pop
call
je
pop
xchg
mov
xor
shll
dec
adc
and
inc
pop
adc
and
jbe
gs
push
inc
jns
mov
loopne
enter
stos
add
jmp
mov
or
mov
mov
xor
mov
subl
xor
movzwl
or
mov
mov
xorl
add
addl
movzwl
mov
mov
movzwl
sbbl
xor
sbbl
add
mov
mov
mov
inc
mov
cmp
movl
jne
mov
mov
orl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
dec
mov
mov
xor
xor
sub
add
mov
mov
add
movl
movl
movl
xor
mov
xor
mov
mov
adcl
xor
add
mov
movl
mov
je
andl
mov
adc
mov
xor
orl
xor
adcl
sub
sbbl
sub
adc
xor
mov
mov
mov
subl
add
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
add
or
dec
mov
mov
mov
add
notl
xor
mov
xor
add
xor
or
sub
imul
mov
mov
orl
add
and
adc
mov
mov
add
mov
addl
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
subl
sub
add
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
or
mov
xor
orl
add
movl
jne
movl
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movzbl
xor
sub
sbb
xor
neg
mov
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
adcl
xor
sub
xorl
sub
adcl
xor
movl
mov
not
mov
mov
movl
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
push
pushl
call
jmp
mov
xorl
jmp
fnstsw
mov
aam
aas
push
xchg
jb
pop
jb
mov
loopne
int
adc
pop
sahf
xchg
leave
mov
mov
jg
unpckhps
out
pop
adc
pop
ss
add
sub
mov
pop
pop
xor
push
dec
stos
jle
xor
add
jbe
outsl
clc
ret
loope
jo
aad
js
daa
sub
pop
les
jp
or
sub
subb
jno
mov
ss
push
mov
fidivl
mov
and
test
cmpsb
xor
mov
cli
lahf
out
or
divl
xchg
xlat
push
js
fnstenv
mov
mov
dec
inc
cltd
orl
pushf
and
dec
pop
ljmp
push
add
inc
out
fsubrl
push
dec
mov
cmp
ficomps
and
mov
or
or
ret
in
cltd
out
shlb
loop
cwtl
enter
es
inc
xchg
lds
pop
into
test
aad
mov
sahf
mov
cmp
stc
inc
leave
xchg
jb
cmp
ss
cmp
adc
testl
inc
jmp
ja
xor
jecxz
scas
sub
xor
aaa
adc
push
pop
and
call
pop
ja
and
loope
vpsraw
jl
inc
jbe
cmp
push
movswl
lds
inc
mov
sarb
sub
mov
ret
jb
jno
lds
gs
push
and
int
pop
xor
and
cltd
xchg
push
cli
push
cld
push
push
add
pop
lahf
aaa
inc
and
popa
inc
sbb
dec
xchg
sub
xchg
sub
xchg
outsl
inc
scas
sub
add
lds
xor
jmp
aad
sub
ss
cmc
and
adc
add
in
pusha
inc
aad
cmp
std
mov
lret
jb
push
sti
add
xchg
filds
lods
mov
adc
lods
imul
sbb
inc
rcrl
dec
inc
inc
or
cmp
inc
shll
dec
fisubl
orb
scas
mov
mov
sbbb
cmp
inc
push
movsl
mov
and
cs
dec
int
jbe
inc
dec
andl
or
popa
inc
into
enter
jno
nop
pop
cmp
ds
ret
dec
sub
mov
jb
cmc
inc
outsl
jno
sbb
add
cli
mov
mov
cmpb
cmpb
negl
and
sahf
sti
in
rcrl
hlt
mov
mov
lods
push
push
xor
or
dec
add
pop
aad
aam
adc
iret
xchg
xor
out
aam
xor
scas
dec
sbb
adc
testl
shrl
ds
enter
jb
xchg
xchg
ds
cmp
jno
adc
mov
sub
hlt
add
mov
adc
xor
push
aad
imul
inc
fisttpl
loop
mov
stos
int3
rcrb
sbb
ja
pop
adc
jmp
xchg
or
pop
sub
cmc
inc
insl
mov
aad
ja
mov
jo
insb
mov
mov
xchg
mov
xchg
icebp
popa
in
mov
push
push
loop
roll
out
xchg
daa
jne
adc
scas
dec
fyl2xp1
scas
add
dec
sbb
add
int
mov
jg
outsl
inc
ljmp
add
lcall
mov
cmpb
lods
jg
or
inc
rcrb
push
adc
cmpsb
push
push
pop
mov
shlb
in
fldcw
sbb
cmp
out
pop
clc
stos
mov
fwait
sub
rcll
sbb
mov
sbb
jl
dec
mov
xchg
popf
fwait
es
ss
ret
lret
mov
movsb
jmp
jmp
and
dec
das
lea
bound
push
add
xchg
stc
gs
aas
push
mov
inc
jp
pop
xchg
test
mov
sub
inc
repnz
jge
xchg
int
or
inc
loopne
cli
roll
adc
movsb
sbb
daa
xor
iret
lds
and
add
popa
lds
fldcw
daa
je
cs
arpl
nop
cmp
push
clc
aaa
adc
mov
cmp
les
fwait
sub
ljmp
fsubrl
jbe
dec
leave
in
daa
add
fldcw
or
jbe
out
clc
mov
aam
mulb
dec
js
adc
cli
out
sbb
fcoms
bound
mov
decl
push
xor
loope
inc
aam
inc
imul
je
jno
addl
and
mov
pushf
clc
adc
pop
mov
out
mov
xor
push
bound
out
lock
jecxz
sahf
pop
mov
movsb
fcmovnu
cmpsb
aas
fs
cs
fs
xchg
insl
nop
out
mov
icebp
pop
fstpt
lret
xor
jb
dec
ret
popa
loop
out
mov
call
push
shrl
int3
loop
jae
inc
inc
out
xchg
add
jae
repz
stos
ret
mov
shrb
sbb
xor
nop
out
pop
pop
cmpsb
filds
sub
xor
xchg
jne
cmp
ror
daa
outsb
push
jns
push
sbb
xchg
js
xchg
push
push
and
pop
loopne
cli
scas
or
lods
ja
pop
jne
adc
cmp
inc
dec
mul
je
adc
cmp
leave
daa
test
aas
mov
mov
je
mov
aad
push
xor
add
int3
cmp
xchg
and
jmp
das
nop
push
or
shr
jecxz
pop
insl
mov
and
in
fidivs
shr
and
xchg
in
adc
add
xor
or
cmp
or
mov
dec
inc
sbb
andl
pusha
cld
stc
cli
sbb
mov
sbb
movsl
sub
and
inc
icebp
ficoml
in
pop
lahf
inc
push
addl
enter
add
mov
push
cmp
cli
lcall
shrl
push
sub
lea
iret
ror
pushf
pop
jns
fadds
add
lahf
scas
rcrl
inc
push
cmp
pop
adc
clc
and
xchg
fwait
sbb
pop
cld
or
fldcw
jno
out
popf
sbb
sbb
mov
and
int
pushf
movsl
lret
aaa
sti
out
lret
mov
insb
les
dec
jno
xchg
sbbl
pusha
testl
inc
int
cli
mov
lret
adc
sub
jg
pop
push
xlat
fs
push
dec
pop
pop
or
xchg
cmp
dec
xor
shll
mov
imulb
in
add
inc
push
cmp
adc
lret
fdivrl
sarl
cli
fidivs
call
fwait
sbb
dec
stos
repz
adc
into
jae
mov
sbb
mov
cmpsb
js
mov
xlat
sbb
daa
je
and
jecxz
in
hlt
cmp
es
push
cltd
push
push
jbe
loopne
and
popa
xor
jbe
mov
es
dec
das
leave
xor
sub
inc
lahf
xor
mov
int
lret
shrb
mov
ljmp
push
daa
lahf
lret
sti
pop
clc
mov
enter
cmpl
dec
or
leave
mov
in
adc
leave
aaa
icebp
push
ds
or
dec
fistps
icebp
imul
lret
divl
call
sub
fnstcw
sarb
fs
sbb
mov
pop
jg
pop
clc
stos
inc
aam
cld
or
or
lock
loop
jl
add
xchg
test
jo
push
pushf
xchg
inc
lret
jo
fsubl
mov
in
in
push
cmp
push
scas
popf
mov
push
cmp
xchg
test
out
out
sbb
movsb
imul
xchg
fstps
sub
jno
insl
inc
into
dec
and
call
jno
adc
sbb
xchg
lcall
pop
neg
leave
mov
cmp
pop
cld
xor
inc
mulb
mov
cmc
inc
popf
insl
jg
inc
push
add
mov
add
mov
negl
repnz
jp
out
ljmp
jg
jg
pop
mov
shlb
lret
pusha
xor
sub
icebp
dec
std
insb
jnp
pop
js
mov
mov
push
xchg
push
add
adc
out
js
cmc
dec
aam
insl
out
sub
ja
push
mov
push
pushf
lods
push
roll
jns
dec
jbe
loope
jmp
sub
mov
loope
xchg
mov
push
aaa
mov
insb
dec
fsubr
sub
aad
inc
outsl
sar
mov
rcll
mov
sbb
cmp
fisttpll
mov
loope
lock
dec
inc
mov
xorl
mov
clc
jmp
nop
ljmp
xchg
add
dec
mov
int3
xor
into
jmp
inc
add
cmp
fwait
adc
push
xchg
cmp
adc
sbb
test
sarb
adc
inc
inc
jp
les
int
pop
test
lret
leave
rcrb
or
jge
loop
ret
mov
push
mov
cmpsb
popf
sbb
stos
mov
push
push
imulb
shlb
repnz
cmp
pop
pop
cmp
inc
push
bound
fsubrl
adc
mov
stc
stos
je
sbb
or
xchg
das
stos
cmp
xchg
push
jecxz
jg
inc
cld
or
sub
clc
cmpsl
xor
xchg
mov
icebp
pop
xchg
mov
adc
inc
pop
movsl
ud1
pop
add
pushf
mov
adc
xchg
sahf
jle
cltd
sub
push
lea
mov
jne
cmc
fs
push
dec
xchg
fdiv
inc
mov
add
adc
fimuls
mov
pop
not
mov
jle
pusha
jecxz
cmpsb
xor
aas
cmpsl
push
mov
xchg
jecxz
jecxz
sub
imul
jp
push
pushf
int
je
push
jae
add
enter
stos
hlt
mov
inc
mov
pop
add
in
mov
sbb
popf
cmpsl
fstl
mov
pop
call
cmp
add
mov
or
mov
xchg
cmp
testl
mov
jns
push
or
jle
xchg
ss
jns
inc
ja
cs
mov
call
mov
cmp
inc
mov
xor
pop
ljmp
dec
loope
or
mov
add
cs
adc
js
adc
sbb
mov
mov
jae
mov
adc
es
adc
jne
sbb
scas
popf
mov
movb
outsb
mov
dec
sbb
sub
arpl
inc
pop
mov
das
mov
inc
fimuls
test
or
jno
jnp
int
in
popf
lock
or
pushf
dec
outsb
int3
js
jmp
and
inc
fs
decl
imul
pop
mov
dec
cmpsb
adc
in
mov
sub
or
shrb
pop
and
adc
pop
cmp
push
out
aaa
les
cmp
cmc
xchg
push
add
sbb
and
cltd
inc
in
in
xor
call
js
shl
sbb
xchg
rcrl
xchg
and
daa
ljmp
inc
jne
mov
popf
jbe
je
mov
pop
pop
inc
dec
mov
adc
mov
and
into
lods
movsl
jg
scas
in
jge
rol
pop
dec
jp
inc
cmp
icebp
or
repz
inc
cmc
scas
iret
lret
repz
pop
cmp
gs
mov
xlat
fnstenv
jecxz
pushf
out
and
jmp
jnp
int
pop
sbbl
cmp
into
outsl
push
adc
test
pop
mov
movsl
add
mov
mov
ss
imull
sahf
std
mov
and
std
daa
pop
xchg
pop
or
and
ljmp
jg
mull
adc
scas
adc
sub
pop
fwait
jge
dec
sub
sarl
dec
cmp
jbe
push
jp
cmpsb
cmp
mov
lds
lock
inc
popa
jb
pushf
lea
xor
inc
es
sbb
insb
stos
loopne
out
into
fstpt
movsl
clc
inc
push
pop
mov
in
sti
cmpsl
adc
and
cld
dec
add
jge
negl
scas
cmpsl
inc
popf
pop
cmp
mov
push
jl
popa
in
pop
push
sbb
or
and
jmp
rorl
scas
and
imul
xchg
popa
cmp
mov
or
arpl
rorb
push
inc
loope
fs
jno
jo
fidivl
dec
rol
xlat
clc
daa
xor
dec
mov
repnz
test
adc
psrad
or
and
ret
mov
sbb
sbb
mov
movsb
leave
dec
inc
imul
imull
movl
pusha
xchg
insb
mov
js
aam
and
dec
mov
ja
mov
sbb
shrb
into
cmp
ret
ss
loop
cmp
fs
pop
aad
mov
repnz
adc
outsl
adc
xor
and
push
mov
push
mov
and
inc
push
cli
dec
sbb
enter
fwait
add
mul
nop
xor
adc
and
lods
push
or
insl
push
pop
fst
sub
sbb
inc
pop
sub
out
jae
stos
pop
push
add
loop
lods
scas
dec
and
in
push
mov
int
jb
push
sub
jnp
lds
aas
mov
sub
rcll
shll
sub
stos
jp
add
in
or
mov
cmpsb
xor
mov
arpl
ror
loopne
inc
imull
hlt
add
jb
push
int
icebp
movsl
aas
mov
fimuls
mov
mov
movsb
je
jl
outsl
mov
ja
lahf
es
mov
dec
jo
les
xor
lret
inc
sbb
pop
das
dec
xchg
mov
test
mov
and
dec
lahf
push
pop
mov
jmp
not
xchg
data16
test
or
decl
clc
test
loop
dec
scas
fs
xorb
loopne
jmp
jns
icebp
sub
scas
arpl
dec
repnz
je
test
sub
xlat
push
xchg
pop
mov
adc
inc
cld
sar
inc
lcall
mov
ljmp
lcall
outsb
rorl
rorb
jmp
cmp
rcl
or
adc
stc
push
movsb
push
in
nop
cmpb
cltd
sbb
pmullw
jg
aad
mov
jle
stc
cmp
fistpl
dec
sub
aaa
pop
push
mov
dec
sarl
bound
es
bound
mov
adcl
insl
imul
add
fstpt
repnz
mov
shll
cvtdq2ps
cmp
sbb
mov
jnp
xchg
mov
enter
addr16
inc
xchg
es
jne
mov
shll
lods
sar
jbe
cld
adcl
and
lret
mov
xchg
and
es
test
fidivs
decl
mov
mov
xchg
push
pop
adc
mov
stos
pusha
mov
pop
push
shlb
xor
popw
cwtl
cmp
inc
addr16
sbb
daa
and
and
loopne
mov
cmp
fidivs
loopne
xor
popa
icebp
in
or
or
inc
mov
cltd
cltd
xor
sbb
pushf
loop
adc
aad
call
jg
sbb
and
push
ss
icebp
pop
orl
fidivrs
jo
mov
sub
out
pop
adc
mov
sbb
adc
inc
pushf
jp
loopne
mov
mov
sbb
or
and
mov
fcom
xlat
push
ffreep
std
loope
lds
dec
mov
push
or
mov
push
sbb
mov
mov
aam
pop
cmp
adc
adc
enter
or
test
leave
sahf
jno
jmp
stc
jmp
rolb
or
pop
mov
nop
sub
inc
or
push
push
cmp
enter
or
push
addr16
mov
jns
fs
in
stos
pushf
das
movsl
sub
mov
mov
pushf
cltd
pop
inc
subl
sub
pushf
std
cmp
orb
mov
add
scas
fcoml
les
rcl
adc
fptan
fmul
mov
fcomps
ja
inc
cmp
xor
jbe
pop
xor
push
sub
lcall
roll
in
out
loope
and
inc
movsl
sub
mov
jno
inc
sub
test
cld
push
scas
scas
jge
sub
mov
jbe
jl
or
adc
xor
mov
stc
lret
push
arpl
xor
loope
out
cmp
movsl
sub
pop
mov
fs
mov
je
mov
sub
cmp
mov
out
ljmp
lret
cmp
aam
xchg
mov
ljmp
xchg
mov
cmp
dec
ret
bound
adc
insb
fs
ss
jle
xchg
and
xchg
shll
fs
fwait
xor
andb
fwait
lock
nop
adc
rcll
add
sbb
int3
jmp
js
sahf
shl
imul
adc
ficomps
jge
aad
push
mov
in
mov
scas
pop
stos
xor
push
dec
out
dec
sbb
cmpb
gs
imul
sbb
loop
inc
pusha
and
std
jmp
pop
loopne
movsl
addl
mov
add
mov
jg
in
xchg
pop
ds
push
mov
hlt
push
add
inc
jg
repnz
pop
xor
sub
dec
popf
stos
sbb
sbb
add
pop
orb
lds
and
ljmp
idivl
cld
mov
lock
jmp
fdivr
shll
lods
jg
mov
fisttpll
xchg
xchg
test
add
cwtl
mov
lods
rcll
push
repnz
ret
ljmp
inc
xchg
mov
mov
inc
mov
mov
cmp
cmp
dec
in
stos
xchg
sar
and
and
cmp
sub
fidivs
add
outsl
or
adc
fs
rcl
xor
cli
mov
das
hlt
dec
out
push
dec
insb
sub
ds
sti
movsl
jnp
inc
call
add
and
mov
and
cmpsb
testl
add
out
sub
stos
hlt
loope
push
jg
je
and
outsl
adc
push
sarl
pop
neg
or
mov
push
cmp
shll
test
scas
cmpsb
in
sti
sbb
cmp
mov
add
out
adc
adcl
adc
xchg
das
cmp
mov
dec
ljmp
dec
inc
mov
mov
pop
arpl
push
jnp
sahf
xchg
add
xchg
mov
aad
jo
out
faddl
adc
lea
aaa
popa
cmp
pop
pop
push
mov
addb
incb
loopne
xchg
and
and
xor
jmp
xchg
fisttps
mov
ret
incl
int
dec
jmp
fwait
jne
cltd
sub
shl
sbb
movsl
dec
adc
aad
jbe
jl
sti
pop
pop
aas
fdivs
pop
or
fisttpl
mov
ja
mov
push
test
loop
cld
or
cmp
imul
int
aad
mov
cmp
mov
aam
add
jo
lea
push
es
mov
hlt
mov
jno
mov
mov
mov
test
mov
ljmp
out
inc
sbb
mov
mov
movl
mov
enter
inc
out
add
hlt
test
mov
add
xor
insb
scas
push
jnp,pn
cmp
push
xor
lcall
dec
lock
lahf
mov
jg
jg
dec
sub
push
inc
pop
mov
insb
mov
add
ffreep
cltd
bound
mov
and
add
add
xchg
mov
jno
imul
inc
test
xlat
mov
movsl
dec
inc
lods
je
jb
sahf
pop
mov
sbb
xlat
add
ret
dec
sbb
mov
out
push
or
sbb
sub
xchg
aaa
jge
mov
mov
xchg
inc
or
gs
and
pop
lret
sbb
and
fisttpll
jp
sbb
pop
inc
push
sbb
jmp
das
jne
sbb
mov
fldl
aas
fwait
or
mov
enter
xchg
push
lods
and
sub
jo
ds
pop
pop
dec
sbb
push
xchg
in
mov
pop
ja
cld
dec
jns
sub
mov
push
mov
mov
ja
mov
out
xor
fwait
pop
imul
iret
mov
mov
dec
dec
mull
push
add
out
mov
sub
xor
sbb
and
jge
int3
ss
cmpsl
and
movsl
xchg
pop
mov
xor
xchg
sbb
sahf
xchg
into
ljmp
xor
push
flds
fistpl
jbe
mov
push
je
jmp
test
aas
outsb
iret
push
mov
das
movl
push
in
inc
cld
shlb
add
inc
push
mov
sbb
iret
mov
jecxz
filds
test
popf
jl
out
daa
movsb
outsl
cmp
and
adc
cmp
frstor
xor
mov
push
sbb
xchg
adc
lods
imul
sbb
cmp
mov
cmc
stos
stc
leave
dec
imul
into
fdivp
test
std
scas
movsb
cltd
sub
cmp
test
xor
push
out
movsb
xor
mov
rclb
sar
sub
mov
mov
pusha
cmp
sub
jmp
sbb
sbb
mov
and
lahf
loopne
ret
pop
mulb
ds
push
push
shll
mov
mov
pop
adc
jp
pop
push
aad
pop
loopw
mov
dec
out
fwait
dec
pop
rcrb
push
mov
mov
mov
fdivl
andps
ds
pop
aam
cld
addr16
jmp
sbb
shrl
insl
popa
xlat
iret
jmp
dec
add
je
dec
ja
cltd
mov
inc
idivb
mov
pusha
aas
sbb
dec
lret
leave
mov
jge
aaa
jecxz
cmpsl
cld
fs
subb
jb
cli
xchg
bound
mov
ja
pop
js
ja
mov
out
scas
out
imul
pusha
push
shlb
pop
sbb
cwtl
int
outsl
xchg
lods
lcall
push
xorl
xchg
neg
sti
sub
jb
or
jnp
cltd
mov
dec
and
into
jmp
lods
mov
daa
shr
mov
test
sbb
cltd
cmc
inc
xchg
int
xchg
xlat
fisttpll
mov
mov
dec
xchg
rolb
mov
movsb
dec
mov
ljmp
mov
shlb
xlat
repz
notb
in
movsb
sub
popf
inc
sub
enter
test
fldl2t
repz
mov
mov
xor
mov
rcll
out
and
in
sub
movl
sub
icebp
test
scas
cmpb
jbe
cwtl
push
sub
pop
push
mov
in
dec
and
lcall
adc
and
rorw
fnsave
mov
movsl
movl
cli
mov
fdivr
dec
es
pop
fadds
lock
lods
cli
or
and
add
scas
xchg
out
stos
stc
adc
sub
rolb
das
xlat
jno
sbb
pop
ds
jp
pop
addb
add
jb
imul
inc
int3
loopne
rcrl
in
outsl
xchg
fwait
test
scas
aad
les
cli
les
cmp
cld
xchg
dec
cmp
adc
mov
sbb
cmp
or
push
sbb
jns
gs
sbb
mov
or
mov
lret
rclb
divb
int
mov
xor
in
fwait
jl
adc
xchg
in
push
mov
daa
iret
bound
outsb
daa
imul
shlb
insb
dec
mov
jp
cs
sbb
mov
xor
outsb
and
or
push
test
fcoml
sti
loopne
jge
sub
or
cwtl
repnz
jg
jge
adc
enter
dec
mov
ret
dec
push
sbb
aaa
aas
or
sub
rolb
lea
daa
jnp
loope
xor
aaa
sbb
test
in
mov
call
and
mov
fadds
in
sbb
lock
test
das
mov
flds
pop
daa
push
iret
imul
push
scas
jmp
sti
test
icebp
scas
movsl
inc
loopne
out
dec
or
movsl
cmpsb
inc
in
sahf
lock
mov
dec
jmp
flds
cmpsl
in
outsb
or
inc
inc
push
xchg
dec
xchg
test
mov
sbb
cmp
ret
lods
movsl
pusha
into
div
xor
loope
xor
rolb
loope
test
aas
fsubs
loop
fnsetpm(287
adc
jnp
inc
pop
mov
pushf
add
push
fs
push
sbb
jle
pop
ss
int3
xchg
in
cmpsl
add
xor
or
test
push
jle
xchg
aad
xchg
add
arpl
js
push
clc
rclb
faddl
aad
in
mov
or
mull
cmc
sti
iret
inc
notb
add
cli
adc
adc
std
cmc
aad
daa
mov
outsb
add
divb
and
cltd
add
iret
inc
dec
xchg
push
ja
mov
sarb
dec
xchg
cmpsb
mov
add
outsb
xor
cmp
inc
add
icebp
push
jg
imul
mov
bound
std
jge
fildll
aas
movsl
xchg
popa
insl
and
mov
sbbb
cmpsl
xor
jnp
call
mov
cmp
pop
fsubs
in
xor
icebp
inc
movsb
aam
icebp
inc
mov
clc
push
int3
jb
cmp
es
dec
sub
mov
or
fcompl
mov
mov
cmpsb
clc
mov
shll
out
xchg
or
ret
xor
jae
push
xchg
gs
dec
xor
mov
adc
out
aaa
adc
mov
ja
pop
clc
test
inc
jmp
push
xchg
je
cmp
pop
aad
dec
dec
cmpsl
push
shlb
dec
repz
lds
popw
push
sub
jle
das
xor
repnz
cwtl
and
pusha
inc
pop
cmc
lcall
addb
aam
cmp
loop
jbe
dec
inc
shrb
insb
dec
sbb
fdecstp
int
pusha
mov
or
or
push
mov
sub
mov
mov
test
and
pop
sub
mov
int
sbb
jg
cmp
sub
dec
mov
scas
into
xchg
mov
dec
daa
mov
fldenv
scas
in
insb
pop
std
pop
lock
ljmp
sub
mov
stos
aam
xchg
inc
mov
pop
movsb
subb
jle
cltd
repnz
js
inc
ds
repz
dec
loop
cmp
cmp
pop
dec
aaa
add
pushf
cmp
stc
lods
incb
xchg
shl
int3
cmp
jae
test
push
shrb
pop
aam
or
xor
push
xchg
mov
mov
sub
movsb
lahf
ja
pop
pop
fnsave
insb
imull
outsb
cmp
std
jno
sub
push
shlb
sbb
stos
fwait
mov
mov
jbe
shlb
in
add
pushf
dec
clc
cmp
and
cs
push
jb
pop
aam
mov
mov
faddl
xor
or
sub
cmpsl
flds
mov
dec
testl
cmp
lcall
vhaddps
push
jnp
fidivrl
xchg
push
sti
mov
clc
data16
loope
popa
mov
xor
loopne
jae
push
popa
sub
xlat
fsubrl
cmc
xchg
add
repz
push
sub
push
insb
test
sub
dec
jnp
lea
mov
jne
cmp
pop
scas
push
inc
pop
lcall
mov
lods
add
loop
cmc
inc
or
mov
jno
sbb
out
pop
push
aam
inc
add
pop
lds
cmpsb
or
push
sub
jp
xchg
scas
dec
xchg
test
cmc
imul
adc
sbb
jne
shlb
add
mov
inc
ljmp
add
loop
adc
sbb
sbb
mov
inc
push
mov
push
adc
insb
jge
pop
jp
dec
xor
pop
in
ror
adc
mov
push
test
sub
push
sti
lahf
subb
inc
dec
jle
jb
adc
mov
iret
mov
and
inc
mov
pop
out
mov
lret
iret
ds
ret
pop
push
ss
sub
xchg
lcall
or
repz
pop
mov
mov
imul
cvtpi2ps
in
les
jo
jl
mov
xchg
jb
inc
pushf
or
les
mov
sti
mov
and
popf
xchg
mov
jl
add
xor
addr16
jo
aad
push
inc
jl
mov
testl
sbb
sbb
cli
or
mov
aas
inc
mov
adc
outsb
sbb
inc
adc
ss
and
mov
xchg
or
sahf
sub
mov
cmp
ss
lea
sub
lock
jbe
mov
lret
jne
call
repnz
mov
xchg
and
movsb
cli
adc
pop
xchg
repz
rorb
test
pmuludq
sbbb
sti
inc
rorl
cmp
jp
jp
inc
jl
or
xor
mov
cmc
fnsave
ljmp
ljmp
lock
pop
sub
and
adc
fcoml
pop
in
repz
sub
pop
idiv
cmp
movsb
cmp
cmc
push
fsub
mov
mov
mov
cltd
mov
mov
int
lret
cmpsb
adc
add
add
lret
push
leave
ljmp
sub
call
pop
inc
add
ffree
mov
in
cmp
xor
jecxz
sbb
push
mov
clc
dec
and
dec
sbb
add
fcomp
cmp
stos
dec
les
mov
lahf
sbb
push
lret
mov
in
xor
cmp
fstl
mov
lret
pushl
and
cld
add
ror
xchg
rorl
sub
xor
subl
xor
sub
sbb
sub
xor
mov
mov
mov
add
subl
imul
add
mov
add
mov
mov
andl
add
addl
or
mov
adc
mov
sub
mov
incl
add
xor
adc
mov
mov
add
mov
subl
add
orl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
jmp
inc
xor
jae
mov
loope
cmpsl
push
jge
rcrb
jb
insl
cs
adc
cmp
or
and
cltd
out
pop
mov
dec
fsubl
movb
adc
adc
dec
hlt
pop
push
imul
push
add
add
fbstp
xchg
mov
xchg
xchg
add
movsl
addl
sti
daa
sbb
ret
or
cmc
minps
and
inc
push
mov
hlt
mov
inc
dec
pop
or
mov
sahf
pusha
dec
push
pop
mov
cmpl
push
arpl
push
and
or
adc
fucomp
and
add
push
pop
fidivs
xor
inc
pop
mull
test
sub
xchg
lock
mov
js
test
pop
adc
js
sub
mov
jecxz
sti
adc
pop
lock
and
pop
mov
out
bound
push
daa
inc
jp
dec
sbb
push
out
inc
xchg
roll
mov
nop
pop
jb
or
xchg
in
dec
icebp
xlat
out
loop
scas
rorb
test
fsub
add
pop
iret
pop
dec
add
push
sbb
adc
add
jge
push
mov
inc
jb
icebp
inc
jecxz
cmp
pop
cmpsb
push
jmp
enter
movsl
cld
and
mov
jp
out
insl
xchg
mov
cmp
cmp
pop
mov
and
cmp
pop
and
xchg
stc
inc
popf
mov
xchg
xchg
push
adc
jne
sub
fldt
pop
mov
add
jno
mov
insb
adc
pop
xchg
bound
pop
stc
dec
or
inc
test
movsb
and
clc
cmp
fucomp
mov
ds
ss
mov
adc
mov
sbb
or
mov
mov
dec
sbb
jge
popf
pop
add
mov
adc
pusha
sub
aam
inc
mov
lea
mov
test
mov
data16
leave
outsb
fiaddl
scas
out
repz
aad
ja
sbb
inc
cmp
sbb
and
cmc
lcall
repnz
push
add
xchg
pop
push
pop
stos
and
or
aaa
sub
lcall
mov
sub
in
mov
test
in
cmc
aam
clc
scas
ss
adc
fistpl
xor
sbb
pop
ljmp
adc
sbb
push
sub
jae
test
das
data16
imull
add
in
sub
push
hlt
cltd
mov
movsl
je
xchg
pop
rclb
repz
in
and
outsl
xchg
mov
imul
stc
or
mov
adc
add
sub
or
add
pop
inc
dec
jno
inc
xchg
cmp
aaa
cmpsw
cmpsb
mov
ret
dec
cld
inc
std
cli
mov
push
mov
add
mov
int
std
adc
lcall
inc
dec
sub
movsb
in
icebp
jne
mov
outsb
popf
cmc
test
or
daa
dec
mov
mov
lahf
out
xor
adc
or
dec
lock
ret
sbb
ljmp
int
sbb
cmp
adc
xchg
push
sbb
mov
ss
cs
cli
inc
dec
scas
sub
fadds
mov
lahf
sbb
cmp
mov
jbe
xchg
rcll
jo
cwtl
int
push
nop
add
mov
mov
int
stc
push
cmp
mov
xor
mov
sbb
flds
imul
dec
fstp
mov
sub
or
movsl
push
addr16
inc
pop
and
aaa
add
or
xchg
xchg
pop
in
pop
rol
in
xchg
jnp
cmp
adc
outsl
dec
into
dec
stc
in
adc
enter
add
sbb
add
subl
inc
sub
and
pop
addr16
inc
aad
cmp
pop
roll
mov
ds
rclb
in
setns
lods
mov
xchg
mov
pushf
pushf
pop
push
mov
es
fnstsw
inc
xchg
call
xchg
mov
mov
rcll
jne
xchg
push
fnstsw
mov
dec
loop
mov
xchg
pop
nop
rcr
and
loope
sub
lock
hlt
loop
jmp
jecxz
imul
xor
mov
mov
js
in
inc
add
mov
call
jmp
jbe
jmp
int
jle
dec
mov
dec
lea
insl
lahf
sbb
jno
jbe
test
jae
mov
lods
mov
ljmp
mov
movsb
out
movsl
popf
jmp
pop
cli
cli
fldl
xor
andl
mov
aam
ja
jne
ljmp
outsb
pop
sbb
imul
rcr
cs
imul
sti
lret
inc
and
and
sbb
xorl
aam
inc
lods
xor
xchg
xor
sbb
sbbl
clc
clc
pop
sub
dec
sbb
xor
mov
cmp
repnz
push
push
fstpt
mov
int
xor
xor
xlat
das
std
jp
fcoml
mov
pop
xchg
ss
xchg
dec
mov
mov
stc
xor
jno
dec
ss
xchg
addr16
mov
sbb
outsl
out
xor
enter
popf
insl
jecxz
xlat
jp
mov
in
es
xor
push
jnp
das
ret
fucomip
xchg
jb
cmpb
mov
into
sbb
stos
adc
push
dec
inc
dec
sbb
or
rcl
sbb
add
and
cmp
jl
repz
loop
enter
adc
sti
fistps
test
aas
pushf
or
mov
xchg
mov
ds
push
pusha
shrb
movups
rorb
gs
adc
or
add
mov
insb
leave
push
rclb
insl
mov
lock
jb
dec
push
and
add
mov
push
and
jmp
adc
rcl
loop
push
aas
pop
sub
mov
xchg
fnsave
rcrb
sub
push
rcrl
or
push
dec
dec
shll
pop
out
mov
leave
and
adc
adc
imul
ss
das
test
mov
sbb
imul
jbe
push
pop
nop
ficoml
push
fisubl
std
add
mov
pop
out
cmp
aad
jl
push
push
mov
and
jp
sub
mov
cwtl
mov
jbe
push
int
or
fcomps
push
sbb
or
add
bound
lahf
lret
xor
xchg
std
xor
rorl
pop
out
out
in
and
fstl
jmp
repnz
insb
lea
ficoml
insl
not
out
sbb
lea
sbb
insl
pop
inc
jne
sbbb
aad
dec
and
inc
mov
call
inc
outsl
addl
mov
call
cmpb
int3
cltd
ss
jae
cmp
sbb
mov
pop
cld
push
cmpsl
xchg
aam
scas
mov
hlt
pop
fcmovnu
insb
pop
xor
and
cmpsl
pop
push
pop
lahf
imul
in
fimull
insl
xlat
fbstp
add
test
or
pop
addl
fiadds
cld
xor
repz
idiv
sarb
xor
cmc
fs
and
ds
popf
mov
adc
dec
dec
mov
cmp
jg
push
lea
sub
aas
cmp
push
shll
test
and
in
xchg
cmp
jmp
pop
aam
es
test
cmpl
insb
xchg
mov
and
push
arpl
pop
sti
sbb
or
add
sub
xchg
xor
xchg
inc
xor
lea
arpl
je
dec
dec
and
aam
xor
xor
repnz
outsl
mov
sbb
ffreep
scas
cli
jecxz
pop
cltd
out
mov
xchg
lcall
pop
retw
xor
sbb
sbb
fidivs
sbb
sub
clc
ljmp
jp
jge
aad
xor
ret
and
ds
ret
lret
pusha
lds
je
sbb
jb
shr
push
call
xchg
adcl
fcoms
into
jg
clc
nop
pusha
xor
aaa
bound
mov
adc
std
lahf
push
iret
in
mov
cwtl
mov
sub
or
dec
cli
pop
or
stos
mov
cld
pushf
cmp
retw
data16
add
pusha
xchg
jnp
sbb
inc
fwait
or
fbld
xchg
into
bound
pushf
add
add
mov
mov
push
pop
cld
shrb
cwtl
sub
into
iret
fdivrl
js
pop
dec
inc
or
mov
lds
mov
mov
sahf
dec
negb
xor
mov
mov
cmp
popf
xchg
sbb
daa
repnz
in
pop
ret
test
jo
xorl
mov
push
push
in
ret
inc
leave
pop
cmp
pop
in
mov
push
int
xchg
xor
icebp
jg
adc
adc
ljmp
shl
lahf
sbb
cwtl
pop
cltd
cmp
or
aas
xlat
rcrl
xchg
outsb
cltd
jns
cmp
mov
gs
push
repz
cmp
dec
xchg
inc
addr16
out
push
fisubs
jl
sbb
push
mov
fidivrl
mov
cmpl
jbe
jmp
sbbb
cmovne
push
lock
fsts
leave
push
adc
stos
pushf
in
xchg
mov
adc
sub
cmp
or
fs
xchg
jecxz
test
mov
pop
add
stc
jle
jno
mov
mov
push
daa
outsl
hlt
mov
mov
sbb
negb
pop
cmp
inc
popf
xor
xchg
testl
icebp
data16
sti
sbb
adc
mov
jbe
mov
iret
int3
mov
cld
ja
dec
in
mov
or
xchg
push
out
out
mov
sub
sbb
sub
cmc
sub
in
pop
mov
shlb
or
repnz
das
test
xchg
push
sub
fisttpll
in
lret
subb
ds
jge
cmp
lds
jnp
push
daa
pop
in
lods
fisttpl
fiadds
cmc
adcb
jmp
sbb
sti
push
sub
cltd
cltd
ljmp
into
das
je,pt
dec
pop
dec
flds
dec
push
xchg
and
and
ljmp
ljmp
dec
push
cmp
fwait
shl
jbe
mov
fstpl
mov
mov
or
pop
imulb
lret
hlt
xor
fldenv
push
mov
test
xchg
sbb
ljmp
inc
sub
sub
lret
mov
xchg
popa
jl
pusha
jge
xchg
cld
dec
out
adc
pop
sbb
insl
dec
cli
mov
stos
sub
jle
mov
lret
sahf
push
mov
mov
cmpsl
mov
push
mov
jge
sarb
sub
push
or
xor
lahf
fsub
push
stc
sti
idivl
sbb
jns
dec
scas
adc
into
inc
es
hlt
std
push
pop
cmp
in
push
ret
xlat
das
les
int
outsb
inc
sbb
sub
cltd
push
sub
inc
mov
adc
repz
xor
in
push
lds
clc
jno
adc
in
push
mov
dec
and
das
popa
mov
aam
es
int3
imul
dec
les
or
lods
movsl
movsl
sub
daa
fldt
imul
push
jns
and
xor
ret
xchg
pop
not
gs
call
sarb
loope
in
cs
pop
dec
xorb
cmp
call
dec
sub
popf
mov
arpl
sbb
rclb
aam
dec
cmp
or
sbb
stc
cmp
fiadds
subb
xchg
mov
inc
fidivs
adc
adc
enter
ret
lods
and
push
cltd
mov
fdiv
outsb
mov
pop
cwtl
cmp
mov
faddl
add
je
test
mov
arpl
test
xor
cs
cwtl
cli
sub
jmp
insl
sub
lahf
insl
jle
mov
inc
jg
stos
mov
inc
jno
daa
jo
push
test
and
orl
jp
pop
es
jmp
and
aas
andps
in
dec
rclb
int
cmc
lock
lods
jns
ljmp
mov
stc
test
push
cli
dec
es
xor
sbb
loope
subl
imul
je
adc
cmpsb
pop
push
or
push
lret
loope
inc
jge
mov
cmp
fistl
movsb
cwtl
les
xlat
enter
loopne
inc
add
sbb
insb
push
mov
in
fmuls
mov
mov
adc
push
imul
jne
ficompl
mov
aad
xor
xchg
bound
cmp
add
ficomps
lret
mov
sub
adc
pop
push
and
stos
mov
dec
shrl
out
xchg
mov
sahf
push
bound
int
and
call
pushf
daa
cs
in
jecxz
mov
sarl
cwtl
inc
xor
lcall
sbb
sti
add
push
xor
cmovg
jle
pop
jle
in
or
sub
imul
repnz
jp
mov
stos
push
orb
fidivl
fldt
repz
movsb
xor
subl
or
sbb
inc
xchg
std
andl
ja
mov
jmp
enter
dec
mov
out
lds
push
and
mov
int3
out
cmp
ficomps
clc
push
data16
mov
and
loope
sbb
jae
dec
add
insb
xor
arpl
mov
mov
mov
dec
mov
ds
ja
in
adc
add
mov
jg
test
adc
movsl
mov
cmp
or
cmp
add
insb
call
xor
mov
outsb
mov
scas
mov
xor
incl
xor
loope
sbb
push
insl
inc
cld
insb
pop
pusha
pop
or
mov
imul
jb
pop
push
inc
push
roll
cmc
nop
movsb
push
add
bound
arpl
dec
pop
jb
xchg
mov
in
xlat
lret
gs
jae
xor
cmp
xor
popf
push
xchg
jno
xor
les
adc
imul
shll
mov
cmc
cmpsb
in
fnstcw
leave
shrl
loop
push
mov
xchg
push
ss
pop
out
lock
dec
xchg
jl
cmp
fiadds
into
shl
mov
aaa
or
and
cmp
xor
loope
loopne
test
push
dec
mov
push
mov
neg
pop
cwtl
fidivs
in
icebp
mull
jmp
repnz
push
popf
fldt
mov
adc
cmp
cmpsl
cmp
lahf
rclb
push
or
dec
inc
jmp
mov
jnp
or
js
add
inc
cmpb
test
jne
bound
iret
sub
pop
pop
adc
dec
aam
rolb
mov
cmp
push
xor
adc
fstpt
cs
cwtl
adc
adc
fildl
cli
cmc
jo
add
mov
sub
sbb
fisubrl
mov
sub
pop
int
inc
xchg
fstp
pop
jl
add
icebp
aaa
xor
mov
int
adc
add
adc
dec
push
imul
push
nop
dec
loope
xchg
xchg
mov
push
dec
and
add
or
les
push
xlat
cs
adc
pushf
mov
xor
jl
in
jne
leave
xchg
int
inc
lock
stos
into
out
rcl
dec
mov
pushf
add
std
cmc
xor
cltd
fwait
and
xchg
shrl
mov
sub
ret
ss
adc
or
fcompl
loop
push
scas
roll
loopne
hlt
aad
cs
mov
inc
repz
ds
xchg
mov
mov
psrld
cwtl
ret
sub
stos
adc
pop
pop
jge
mov
mov
leave
imull
repz
rclb
mov
xchg
pop
pop
dec
push
add
fiadds
ret
lahf
and
ljmp
mov
pop
insb
insl
in
and
lret
cmp
sub
cltd
jmp
imul
sbb
ja
aam
dec
and
mov
pop
idivb
outsb
mov
xchg
jecxz
pop
xchg
lods
mov
les
je
js
mov
sahf
ljmp
sete
sti
arpl
pushf
sbb
cmpb
sub
inc
inc
pop
pop
mov
or
mov
sub
add
roll
out
dec
or
dec
cmp
sub
pop
inc
scas
mov
sbb
sub
sub
jno
add
adc
inc
shl
pop
std
push
mov
inc
popa
xchg
jmp
lahf
inc
cwtl
scas
arpl
in
cmpsl
mov
rcr
in
lock
push
outsb
adc
std
lahf
xor
xor
pushf
nop
mov
jle
lds
ret
mov
ds
stos
mov
rcl
xor
into
fcmovu
shlb
pop
adc
sti
stc
dec
fwait
cmp
test
insb
in
cmp
fcomi
adc
and
mov
inc
lret
test
and
clc
je
je
ss
push
outsb
mov
xor
jl
adc
mov
lcall
sub
cmpsb
mov
add
cmp
add
ljmp
jae
adc
mov
scas
mov
sti
and
xchg
mulb
je
sbb
sti
xor
hlt
imul
xchg
cmpsl
out
xchg
xchg
idivb
pop
mov
mov
outsl
xchg
or
incb
insl
xor
push
cmc
cltd
mov
pop
stc
jne
lods
imul
data16
int3
dec
adc
cmc
das
jge
sub
out
scas
push
fs
dec
aaa
cwtl
cltd
ds
adc
std
jmp
mov
clc
push
sbb
xchg
push
movb
mov
mov
pop
nop
push
and
mov
sub
or
insl
cmp
ret
rcr
pop
int3
movsb
ret
fistpll
mov
arpl
inc
push
jecxz
jns
mov
dec
clc
mov
lods
pop
mov
in
outsl
and
and
cltd
sbb
add
adc
fldl
shl
hlt
mov
js
std
movsb
pop
loop
dec
daa
or
or
inc
lret
ret
and
adc
jg
movsb
mov
or
cltd
lods
add
lcall
mov
les
xchg
xor
lcall
sbb
mov
insb
iret
fsts
cmovs
xchg
sti
jo
cmpsl
int3
idivl
call
fstpl
into
in
ret
jecxz
inc
movsl
sbb
xchg
enter
mov
cs
filds
mov
add
in
ljmp
inc
jb
lret
sbb
pop
cmpsb
bound
cmp
sbb
adc
lcall
and
pop
js
push
jecxz
pop
fisubrs
outsl
insl
neg
dec
and
ret
aaa
jno
push
rcl
mov
hlt
mov
push
sarl
inc
ss
jns
fcomp
fcomi
jno
xor
mov
shr
sahf
adc
cwtl
repz
sbb
sbb
dec
mov
rcr
fnsave
fisttpl
cld
add
mov
fwait
mov
insb
dec
pop
push
mov
test
mov
shlb
inc
fsubs
enter
shl
jnp
dec
jg
in
aas
mov
inc
cld
cmp
dec
jl
fsubrl
sbb
fildl
mov
ret
divl
xor
fstl
sub
sub
scas
mov
cmp
or
mov
jecxz
loope
out
push
push
push
adc
dec
add
pushf
ja
mov
scas
out
lahf
enter
stos
mov
je
cmpsb
mov
xor
xchg
pop
mov
lret
lret
aas
jl
xchg
and
add
xchg
add
ret
sbb
xchg
xchg
push
pop
xlat
jmp
test
pop
ret
mov
sti
test
mov
xor
push
lock
sub
push
sub
cmp
or
js
insl
int
icebp
adc
mov
insb
xchg
push
addr16
clc
add
out
int3
popf
dec
pop
test
xchg
xor
push
sub
nop
ljmp
dec
clc
mov
sub
repz
cmp
mov
shlb
inc
ret
in
popa
dec
jb
xchg
test
jg
jnp
ss
cmp
and
jmp
push
dec
add
xor
fs
std
call
lret
out
pop
mov
cld
ret
loop
jg
idivl
xor
add
push
enter
lods
ljmp
mov
adc
addr16
inc
nop
xor
divl
in
dec
fbld
test
test
mov
sub
and
add
shll
mov
or
inc
and
add
call
xchg
jg
mov
dec
loop
pop
das
in
test
add
cmp
mov
shlb
sub
xchg
ss
fsubl
in
ds
ja
das
hlt
sbb
and
icebp
int3
rcll
ja
add
shll
and
mov
mov
mov
scas
xchg
xor
pop
and
ret
fdivrs
xchg
inc
xor
and
pusha
das
mov
inc
fwait
addl
mov
mov
inc
aaa
sar
pop
popf
xchg
jo
push
out
xchg
lds
mov
aas
rcrb
push
int3
dec
orb
push
std
cmp
ret
incb
pop
xchg
jne
lea
xor
adc
dec
mov
mov
pop
cmp
push
rclb
ja
push
hlt
inc
lock
fwait
lods
push
cmc
movsl
imul
sub
lcall
xchg
mov
clc
push
pop
xchg
in
push
sub
fidivs
push
test
mov
mov
jne
mov
jnp
aam
mov
stc
es
sbb
insl
dec
sti
mov
stos
dec
jp
push
xchg
cmpsl
test
adc
lcall
ljmp
shrl
lods
or
aad
nop
sbb
fidivl
jmp
push
pextrw
mov
mov
sub
and
insb
in
mov
rcrl
sahf
sbb
sub
cmp
sub
outsl
orl
dec
popf
jae
shll
mov
lds
lcall
or
adc
cmp
mov
xchg
shl
mov
and
ja
pop
std
sub
mov
mov
or
jmp
lods
cmp
pop
pop
lods
pop
xor
pusha
sahf
jge
jno
sbb
es
mov
push
fimull
add
addr16
push
je
je
sbb
mov
xchg
fucomip
es
lods
sbb
pop
fidivs
ja
mov
or
imul
int
push
push
jecxz
xor
inc
cld
mov
ja
cmp
add
enter
cmp
inc
repnz
jne
lcall
imul
dec
fsts
stos
popfw
xchg
adc
mov
sti
mov
xor
ss
mov
aam
popl
mov
jbe
xchg
sbb
and
test
xchg
mov
addr16
loope
ja
mov
enter
clc
adc
ljmp
dec
sub
add
mov
call
aas
and
sahf
test
pop
lods
or
push
cmp
cmpsb
jae
mov
mov
jl
xor
es
xchg
scas
test
pop
jnp
bound
pop
pop
pop
fcmovbe
jns
std
sub
pop
dec
fwait
and
imul
mov
inc
or
pop
cmpsb
jne
aam
xor
xchg
mov
and
bound
adc
ljmp
mov
in
inc
out
outsl
mov
mov
cltd
pop
iret
iret
aad
imul
mov
pop
add
movsb
mov
sahf
inc
lods
xor
into
xlat
sahf
rcll
pop
mov
cmp
xlat
adc
jbe
nop
jbe
mov
imul
es
add
mov
and
fdiv
cmpsb
ds
cmpsb
cli
outsb
mov
test
add
addl
inc
xchg
das
shr
jmp
mov
cmp
add
lea
pop
fnstsw
pusha
in
jno
loopne
or
or
out
mov
nop
push
in
sub
push
das
stc
scas
push
rolb
hlt
or
add
mov
mov
dec
cli
xchg
push
push
xor
xchg
adc
test
mov
int
mov
test
ljmp
add
pop
mov
sahf
push
xlat
mov
insb
fwait
cmp
stos
and
iret
enter
mov
dec
pop
iret
mov
adc
test
fsubrl
adc
jb
dec
fwait
dec
and
mov
dec
sbbl
pushf
addr16
into
mov
jle
insl
sub
pop
je
xorl
mov
mov
fcmovnu
pop
into
popf
addr16
sbb
adc
test
ljmp
idiv
mov
mov
out
test
test
xor
lea
pinsrw
push
leave
xchg
mov
ret
inc
dec
push
pop
shll
inc
lahf
push
dec
loop
fdivs
or
out
push
xlat
stos
push
aad
mov
out
fs
mov
pop
rorl
sub
scas
mov
fists
sbb
out
and
lods
or
add
pop
fmul
sbb
mov
pop
aaa
fdivrp
or
ja
ficomps
ret
leavew
scas
xor
test
sub
lods
lahf
dec
jne
sbb
pop
sub
sbb
and
ja
popa
mov
cwtl
inc
xor
movsl
jb
jmp
mov
outsb
fcoml
fbstp
add
pop
lret
insb
or
dec
out
nop
aas
pop
in
lods
fidivs
ss
insl
push
dec
pop
aam
clc
and
push
lahf
or
inc
xchg
mov
jno
cmp
mov
lahf
sub
push
xorl
cmc
xchg
stos
in
mov
lods
ficomps
dec
xor
inc
push
xor
icebp
adcb
test
mov
roll
aas
sete
dec
dec
nop
mov
test
icebp
adc
jns
sarl
mov
and
bound
fs
gs
mov
push
adc
and
shll
in
test
jns
add
hlt
test
popf
fwait
lods
push
neg
mov
sub
xor
sbb
dec
adc
inc
cmp
orl
repnz
pusha
jae
xchg
cmp
mov
dec
sbb
jae
xchg
cwtl
movsl
cwtl
xlat
shll
xor
push
movsl
das
into
add
cmc
negb
out
push
push
jns
and
jb
pusha
or
mov
call
in
fcmove
fadd
out
dec
sub
xchg
insb
shl
sub
push
mov
and
mov
sbb
notl
test
push
aaa
iret
cmp
inc
push
stc
jp
aam
sbb
and
dec
repz
pushf
pushf
movsl
outsb
dec
adc
and
xlat
add
clc
stos
int3
idiv
adc
ficoms
dec
imul
ret
jnp
lods
sti
pop
hlt
bound
xor
push
adc
stc
mov
fidivl
ljmp
lret
gs
adc
gs
je
js
ljmp
test
xor
movsl
adc
sbb
inc
or
dec
dec
cmp
adc
mov
flds
cmp
cltd
mov
jmp
jbe
int3
mov
inc
jmp
xchg
sub
push
cmp
ss
js
enter
mov
mov
int3
mov
jae
cmp
es
ret
mov
ljmp
das
addl
ss
ret
popf
out
gs
inc
dec
imul
lret
mov
dec
hlt
hlt
ljmp
mov
test
aad
std
clc
rorb
mov
lret
push
call
lods
ficoml
mov
fmull
ljmp
arpl
shll
inc
cltd
cmpl
jecxz
out
jns
jb
xchg
push
or
movsb
jge
shrl
lods
mov
push
sub
pop
xchg
stos
fbstp
and
repnz
and
adc
jecxz
adc
dec
out
out
scas
adc
jbe
test
xor
loope
xchg
rolb
out
movsl
and
gs
jnp
mov
mov
nop
mov
xlat
imul
lret
mov
lea
test
call
mov
push
mov
adc
test
xor
xchg
mov
and
and
cmpsl
imulb
jns
in
repz
push
lock
shll
cmp
xor
leave
xor
or
sub
sub
inc
xchg
sarb
in
stos
rclb
add
shl
jo
push
push
test
adc
les
rclb
aaa
dec
xor
push
inc
sub
mov
add
aas
or
adc
jnp
lcall
or
xchg
mov
stc
dec
in
pop
out
and
stos
cmc
xchg
test
dec
faddp
inc
bound
outsb
flds
sbb
cmp
pushf
mov
out
add
fwait
cli
enter
icebp
cmc
stos
jl
mov
les
xchg
outsl
loop
ret
in
cs
lock
cmp
nop
sbb
icebp
scas
mov
push
fcomip
lahf
add
aas
jnp
lods
cs
xor
mov
lds
movsb
lahf
cwtl
fsubs
ffreep
pop
xchg
pcmpeqb
adc
inc
add
mov
pop
mov
lods
mov
mov
or
sbb
fcmovbe
or
sub
ret
lds
push
inc
pusha
jo
inc
pop
and
jmp
mov
jns
mov
push
push
mov
aaa
ds
gs
mov
xchg
and
addr16
mov
in
sbb
test
mov
mov
lcall
mov
mov
scas
test
orl
mov
lods
lahf
inc
push
cmp
and
icebp
popa
mov
shll
lock
cltd
imul
xor
push
je
cmp
jae
xchg
adc
out
mov
push
into
mov
jae
es
arpl
fisubs
adc
jne
fists
xor
imul
or
xchg
inc
mov
repnz
mov
pop
push
pushl
sub
outsb
add
and
inc
repz
shlb
out
sub
mov
or
or
test
add
clc
mov
rcll
push
and
xchg
lret
sub
xor
or
ret
push
mov
pop
in
xor
loope
ds
insl
push
ffreep
mov
mov
in
adc
pushf
das
or
adc
dec
jg
mov
jnp
gs
lds
pop
adc
lcall
out
sbb
rcrb
pop
push
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
jmp
or
aad
mov
sahf
fidivrl
push
add
pop
jb
jne
lahf
dec
ficoml
or
fs
int3
push
adc
sbb
jnp
dec
lret
test
xchg
divb
inc
loopne
jl
enter
sub
adc
mov
mov
cli
clc
push
pop
dec
sub
mov
xchg
movsl
lods
out
dec
std
jle
loopne
lock
mov
jge
call
jae
enter
jb
inc
fsubl
mov
jecxz
int
vorpd
adc
adc
mov
xchg
hlt
stc
xor
sbb
movsb
std
ret
fisubs
cmp
divb
lret
jge
outsb
or
loop
stos
mov
jmp
or
mov
pop
dec
adc
es
and
mov
lds
incl
repnz
push
leave
pop
jge
dec
cmp
mov
sub
mov
push
mov
inc
shl
cmp
inc
inc
xor
js
inc
jbe
dec
clc
repnz
lds
push
and
xor
sbb
jecxz
push
mov
lret
push
jb
cmpsb
xor
lock
sbb
inc
adcb
mov
dec
in
fadds
and
leave
or
imul
lods
add
mov
sahf
movl
xchg
bnd
pop
out
popf
nop
inc
mov
movsl
int3
jecxz
mov
inc
out
pop
insb
xlat
ret
add
adc
sti
push
mov
add
sub
jecxz
push
aad
out
push
xor
dec
adc
dec
inc
aad
jmp
dec
in
jg
ljmp
mov
shlb
and
lret
mov
daa
xchg
cld
outsb
sub
inc
out
insb
mov
pop
out
add
testb
jbe
inc
push
jp
inc
push
stos
or
mov
stos
mov
rolb
ret
sbb
lcall
push
sbb
in
mov
fists
xchg
cmp
sub
xchg
xor
cmc
and
jno
sub
sub
add
nop
call
int3
movsb
fcom
test
pop
out
jl
mov
aas
adc
push
sbb
and
mov
out
bound
popf
icebp
daa
popa
cli
lods
adc
fdivl
roll
jp
cmc
adcl
cmp
pop
loope
or
cmp
sbb
mov
daa
and
xchg
add
sbb
xor
pop
out
push
adc
sahf
push
stos
sahf
enter
stos
push
and
in
lock
adc
ds
push
cltd
stos
icebp
sbb
aam
aad
sub
shlb
and
je
and
push
push
mov
inc
imull
andb
andb
mov
out
cli
add
mov
sahf
aad
sub
nop
out
xchg
icebp
mov
inc
xor
inc
cmp
jl
sti
push
shlb
and
mov
jmp
out
mov
jne
shrl
sub
leave
dec
push
jne
cmp
push
push
les
pop
in
shl
jne
xor
lods
mov
stc
sub
xchg
and
sbb
cmpsl
add
cmp
or
add
enter
movsl
xor
cmp
add
rcrl
pop
cmc
or
call
imul
aam
sub
xor
jnp
test
sbbb
jno
js
or
gs
and
or
sub
stos
aas
mov
mov
fwait
movsl
movsl
sahf
aaa
fsubrp
or
movl
or
mov
lds
lret
mov
xchg
mov
daa
lds
test
mov
les
js
js
xor
mov
mov
stos
xor
cmpb
dec
ja
lods
stc
and
stos
ljmp
bound
clc
cs
dec
outsb
pop
push
xor
pop
inc
out
mov
mov
xor
mov
inc
or
rolb
mul
mov
add
push
mov
push
lahf
je
pop
inc
sbb
add
je
lods
add
dec
clc
or
pop
inc
filds
daa
imul
aad
fidivl
mov
sbb
xchg
dec
orl
repz
movsb
inc
sbb
dec
push
fsubrs
jno
lret
ror
stc
add
cmpsl
lret
fimull
jo
push
mov
cltd
ja
scas
xchg
shrl
or
cmp
les
sbb
inc
sub
call
daa
mov
cmp
push
rorl
std
adc
scas
cs
les
and
mov
dec
scas
cmpsl
scas
pop
sbb
orb
mov
cmp
jecxz
mov
push
movsb
popf
push
clc
xchg
hlt
push
xchg
pop
or
cwtl
sub
inc
insb
scas
pop
adc
mov
idivl
fistpll
xchg
mov
stos
in
xchg
shlb
pop
and
loope
mov
jg
sub
pushf
inc
insl
cld
out
cmovno
adc
in
sub
pop
cwtl
jl
jb
aaa
aaa
adc
mov
dec
fidivrs
movsl
sub
popf
sti
es
and
clc
lock
int3
lds
jge
push
int
jne
popa
mov
mov
ret
lcall
add
jmp
fildll
push
js
and
shll
int3
fsub
insl
leave
in
hlt
pcmpgtd
mov
data16
xchg
pop
lods
inc
mov
xchg
test
mov
jl
into
jp
bswap
hlt
pop
inc
dec
pushf
xchg
push
pusha
and
lea
inc
cmpsl
sub
cltd
shlb
inc
iret
lret
ret
cli
adc
mov
popf
imul
or
or
cld
pop
sub
dec
lods
add
xchg
iret
je
inc
push
xchg
iret
std
jbe
lock
mov
inc
movsl
jmp
leave
mov
ss
ror
mov
jg
clc
or
pop
mov
in
inc
je
lret
out
inc
add
ret
pusha
xlat
add
insb
test
push
in
mov
fyl2x
loop
ja
dec
test
mov
push
in
mov
ss
je
push
and
lret
shr
jbe
xchg
lret
scas
cmpsb
add
mov
cmp
jecxz
pop
sbb
shrb
lahf
add
dec
notb
mov
fdivrs
sahf
adc
mov
cld
push
sub
test
mov
sbb
mov
cmp
push
dec
pop
shll
jle
enter
outsl
incb
negl
pop
pop
insb
cmc
mov
or
mov
mov
pop
data16
sub
daa
sub
add
movsb
inc
bound
les
mov
mov
inc
lea
loopne
sbb
dec
out
mov
sub
mov
mov
jb
push
pop
movl
cli
xchg
jmp
cwtl
mov
out
fs
add
mov
outsl
je
sbb
adcb
ret
adc
outsb
xor
xchg
fcmovne
mov
fs
jae
lods
jg
and
int3
mov
jl
bound
cwtl
aam
mov
scas
xor
in
push
test
mov
xor
imul
sbb
lods
pop
pop
push
adc
ss
mov
fcmovb
lret
jnp
call
jl
rcrl
cmpsb
mov
rol
add
jmp
fdivp
push
pushf
call
movsb
stos
stos
add
imul
rcll
xchg
test
dec
test
push
cwtl
mov
fistpl
push
ret
jg
cmp
mov
loop
rcll
sub
data16
lds
jb
bound
cmp
add
cwtl
pop
pop
cmp
xchg
mov
popf
cwtl
mov
stc
mov
rcll
sbb
ret
pop
pop
inc
lods
jno
jnp
mov
test
negl
jl
mov
cwtl
test
sbb
push
aaa
pop
aad
or
cld
mul
dec
imul
add
stc
decl
xchg
les
cli
jno
sbb
out
inc
cmp
cltd
or
pop
scas
les
fdivp
fcom
sti
xchg
mov
test
and
jp
mov
in
mov
inc
lock
test
fldt
jge
aad
jp
popa
jp
insb
test
std
xchg
or
cmp
cmp
sbb
jecxz
mov
sub
jnp
pop
js
pop
jp
add
cmp
push
push
or
and
or
mov
adc
shll
cmpsb
gs
push
cmp
enter
std
sub
lret
in
icebp
imul
sbb
push
cmp
push
and
mov
or
jne
sub
jno
or
dec
fwait
pushf
jno
testb
ror
lds
ss
stc
lret
jecxz
xchg
mov
fwait
lcall
fnstsw
pop
aas
arpl
stos
sub
into
pop
cmp
dec
lock
pop
addl
jno
or
insl
je
adc
sbbl
and
es
jns
cmpl
xchg
ss
mov
sbb
sbb
push
fwait
scas
lret
cmp
jg
int
aas
pop
jae
jne
pop
sbb
xor
jmp
mov
daa
or
je
sub
js
xchg
in
or
add
dec
mov
pop
push
mov
movb
pop
mov
ret
popf
add
adc
fcomp
jp
outsb
addl
je
insl
out
xor
repz
dec
in
sbb
out
xchg
sbb
pop
sbb
lret
out
mov
add
adc
dec
jbe
adcb
dec
fdivrs
jno
daa
popf
mov
push
ficompl
out
mov
into
imul
mov
scas
je
push
mov
dec
adc
push
cmp
sbb
push
orl
outsl
pop
rclb
pop
jo
fwait
int
lret
sub
in
xchg
dec
stos
push
in
mov
or
pop
pop
je
inc
push
inc
mov
adc
out
cs
xchg
push
sahf
pop
test
jmp
stos
xchg
mov
jge
pusha
js
push
lcall
fwait
popa
mov
mov
sbb
xchg
arpl
sub
pop
bnd
push
mov
mov
std
pop
pop
fs
jp
cs
pop
dec
repnz
mov
add
imul
ret
jb
pop
jnp
inc
and
dec
sub
push
pop
aad
push
xchg
inc
and
jge
popa
leave
bnd
inc
push
rorl
push
xchg
xchg
and
cltd
sbb
loop
ds
push
pop
repz
jns
cmpl
pop
jns
or
mov
aas
sbb
lods
fldt
repnz
sbb
xchg
jecxz
inc
aas
push
xchg
scas
pop
aaa
fcomip
fdivs
sub
pop
add
push
hlt
jnp
lds
cmc
jmp
inc
pop
jp
rorb
icebp
cmp
add
adcb
out
push
fcmove
xchg
sub
sbb
jmp
and
sub
cmp
xor
mov
pop
adc
clc
cmp
movsb
mov
jne
sbb
jo
lods
xor
push
cmc
nop
test
ss
pop
dec
es
and
add
out
xchg
dec
testb
jge
repz
pop
mov
movsb
dec
paddsb
clc
cmp
adc
and
ja
loop
int
cltd
mov
dec
adc
push
or
das
jecxz
or
add
nop
test
cli
fsubrs
sbb
xchg
test
cwtl
jecxz
cld
popl
jo
sub
inc
imul
mov
test
sbb
push
sahf
int3
ret
out
inc
rol
jl
jl
loopne
ret
pop
iret
sbb
int3
movsl
ret
mov
sahf
pushf
mov
fbstp
xchg
adc
icebp
adc
mov
sahf
repz
xchg
lcall
in
xchg
cwtl
andb
addr16
pop
ja
repz
sahf
mov
inc
mov
inc
movsl
sub
dec
outsb
shll
data16
notb
pop
cmc
aam
lret
loope
push
and
sbb
ljmp
cmp
xor
or
xor
hlt
outsb
or
inc
adc
pop
lock
lret
sbbl
sub
adc
jnp
clc
pop
jno
cmpsl
lods
mov
les
negb
sbb
xchg
mov
push
xor
pop
xchg
push
enter
and
jle
push
push
xchg
sbb
dec
notb
jns
in
dec
lock
xor
cltd
ds
or
orb
cmc
nop
imul
ror
pop
pop
es
push
int3
out
fbld
shll
xchg
shl
lret
pop
scas
ss
in
subb
pop
popw
and
push
xor
lods
shll
xchg
ja
xchg
dec
dec
cli
mov
int3
mov
cs
in
cmp
mov
scas
sub
pop
shll
mov
test
gs
inc
mov
inc
mov
push
xor
xchg
and
dec
mov
mov
push
adc
ret
sahf
fdivl
into
push
out
or
js
sbb
mov
rcll
cmp
std
inc
adc
inc
std
sub
jge
adc
sahf
adc
fisubs
push
add
cmp
mov
je
arpl
les
fmuls
stc
enter
mov
push
ficoms
fstl
xlat
xor
inc
out
cmp
ds
jns
pop
dec
cld
leave
jns
bnd
dec
in
jbe
pop
sahf
or
in
daa
outsl
stc
into
pop
ljmp
push
and
rclb
adc
aad
loope
inc
jge
scas
lret
dec
cmpsb
push
and
xorb
in
out
xorb
stos
mov
cmc
into
mov
xchg
inc
aaa
idivb
insl
dec
out
out
mov
jge
push
mov
dec
jno
addb
add
add
pop
xchg
dec
dec
mov
pop
scas
push
jecxz
jmp
pop
dec
cmp
fcmove
jnp
jb
adc
and
lcall
test
gs
cwtl
jne
mov
sub
fwait
lcall
push
lret
adc
cld
jno
jge
je
cld
pop
outsb
jns
lea
push
xchg
cld
mov
dec
inc
inc
sub
faddp
scas
in
sbb
xor
sub
repz
adc
sbbl
pop
stos
jae
dec
stos
jecxz
fwait
cmp
sahf
push
mov
imul
out
jecxz
jne
repnz
std
les
dec
and
adc
xor
sbb
xorb
rcll
mov
adc
daa
testl
mov
xchg
fiaddl
dec
movsb
data16
out
mov
or
rcrb
push
xor
into
test
stos
in
jnp
fldcw
fsubrs
xor
jo
mov
popa
mov
pop
out
sbb
shlb
and
add
mov
mov
push
or
jns
mov
jbe
sub
xchg
aad
inc
orb
shr
stc
fwait
scas
shlb
lods
addr16
movsb
or
cmp
xchg
pushf
mov
xchg
push
faddl
push
fnstcw
jae
aaa
ja
cmpsb
rcrl
insl
fdivp
mov
inc
and
movsl
adc
mov
xchg
dec
rcrl
xor
cmpl
sbb
fsubrs
inc
loope
or
and
inc
xor
ljmp
or
jle
jge
mov
push
sbb
xchg
xor
addr16
add
xchg
cli
movb
insb
popa
filds
sub
fcmovne
add
lret
mov
pop
mov
sub
inc
lods
xchg
xchg
cmc
fwait
jne
jne
add
sub
sete
les
and
arpl
add
stos
into
cmp
movsb
or
mov
outsb
and
repnz
mov
xchg
cld
push
inc
jmp
insb
test
mov
pop
adc
cli
cmp
test
lahf
test
jne
arpl
cmp
out
jecxz
mov
mov
lret
dec
push
pop
jecxz
mov
aad
andb
std
out
xchg
mov
or
outsl
jecxz
cli
hlt
xchg
leave
aad
test
bound
rcl
aam
pusha
shrl
std
popf
push
stc
aas
jbe
rclb
cmpsl
mov
pop
lret
inc
mov
adc
dec
inc
jmp
sub
cmpsb
test
sub
pop
mov
js
pop
or
pop
sub
or
sarl
dec
fwait
movsb
mov
stos
mov
in
or
dec
mov
rcrl
repnz
mov
ljmp
in
imulb
fdivl
lea
nop
sub
fsubrl
jp
or
dec
movl
data16
jmp
loopne
hlt
leave
iret
fwait
sub
sbb
add
lock
test
insl
icebp
lret
in
shll
orl
mov
daa
clc
addr16
jns
dec
stos
in
cmp
pop
mov
push
or
mov
inc
stc
cmp
push
add
push
inc
dec
add
push
fs
jno
loope
outsl
cwtl
outsb
jmp
out
xchg
and
cmpsl
pusha
out
add
pusha
jno
push
pushf
sub
rorl
ret
dec
cmp
out
adcl
cmpsb
aad
adc
adc
bound
jg
jp
arpl
data16
sub
mov
and
xchg
rolb
pop
movsl
popa
addb
xlat
pushf
scas
daa
outsb
rcrl
mov
nop
mov
mov
mov
stos
adc
push
sbb
jb
add
shrb
push
int3
sbb
movsb
inc
es
adc
rcl
out
xchg
jmp
rolb
xor
test
jb
out
jo
sbb
dec
shll
ljmp
pop
mov
int
xchg
and
mov
fisttpl
sbb
mov
jns
faddl
pop
add
mov
outsb
push
inc
inc
cmp
rorl
push
stos
mov
stc
jnp
aad
int3
clc
leave
lret
in
xchg
lar
jmp
test
pop
call
mov
push
xchg
mov
cmp
cld
fdivrs
sti
lret
cltd
push
or
sti
das
mov
movsb
fdiv
stos
insb
ss
in
test
mov
inc
jne
outsl
sbb
lea
mov
lret
das
cli
movsl
push
scas
shrb
stos
insl
jmp
mov
mov
mov
and
ss
pop
stos
popf
setg
inc
mov
mov
movsl
and
cmpsl
xchg
mov
pusha
test
or
pop
xchg
inc
out
clc
es
adc
push
push
pop
aam
out
int3
adc
mov
xchg
mov
and
mov
pop
mov
sbb
adc
mov
fst
add
push
xor
push
repnz
sbb
pop
test
push
loop
adc
push
out
push
xchg
sub
gs
int
adc
mov
stos
outsb
insl
cmp
pop
inc
inc
sarl
in
or
ljmp
jle
cmp
xor
push
ljmp
scas
dec
adc
into
adc
push
mov
loopne
push
cmpsl
or
icebp
sbb
les
movsb
inc
outsb
inc
jl
negb
add
sbb
sbb
push
push
or
cltd
cmp
add
dec
imul
and
push
jle
push
push
mov
adc
and
orl
dec
fcmovne
mov
dec
rclb
mov
rcr
jp
push
xor
cmp
and
cmp
sbb
mov
cwtl
and
mov
addl
ret
push
es
ret
jo
insb
or
jb
xor
jmp
sub
shll
push
ret
pop
in
xor
push
insl
xchg
push
lods
fwait
ds
inc
mov
sub
and
and
es
and
std
sub
lahf
pop
ljmp
outsb
push
stos
mov
adc
insl
cltd
fisubl
bound
mov
js
or
fwait
sbb
and
insl
jae
dec
jmp
inc
push
sub
aam
jge
int
push
repz
xor
roll
stos
test
fisttps
or
loope
int3
scas
orl
sub
inc
rcll
mov
ljmp
ret
daa
pop
fmull
iret
jle
mov
cmp
xchg
pop
nop
fldl
lret
sar
aas
std
cmp
fdiv
xchg
repnz
inc
cmp
xchg
sbb
cwtl
sbb
cmc
arpl
cmp
push
ret
sbb
xchg
sub
adc
xor
pop
int3
inc
test
daa
jno
iret
push
scas
stos
jp
iret
cwtl
roll
scas
cmp
popf
arpl
imul
jae
lea
sti
out
add
je
gs
mov
pop
aas
inc
xor
data16
das
cmp
jmp
movsb
xchg
adc
adc
nop
leave
inc
cmp
in
xchg
mov
les
pop
ss
jg
push
ret
pop
mov
gs
mov
adc
or
loop
add
aam
jge
dec
xor
push
mov
xor
pop
jmp
jl
push
inc
pop
sub
jo
xchg
call
push
rcl
mov
mov
xor
sub
bound
mov
pop
jne
mov
xchg
mov
pop
xchg
lea
imul
cld
adc
mov
imul
pushf
inc
mov
sahf
iret
or
mov
pop
add
jne
fadds
nop
pop
mov
mov
pop
xchg
fsubrl
inc
shlb
add
adc
into
add
ret
aam
sbb
sub
loopne
rolb
lea
inc
xchg
sbb
xchg
xor
orb
popf
mov
stos
dec
sub
lcall
js
repz
dec
xchg
push
sar
dec
cltd
mov
fisttps
out
push
test
stc
and
and
mov
sar
fisubs
inc
lock
mov
or
test
sub
movsl
xor
in
mov
and
rclb
je
addr16
pusha
mov
ror
mov
out
hlt
aad
in
xor
sub
mov
jno
xor
repnz
popa
mov
lret
mov
mov
lcall
cwtl
leave
fsubl
daa
mov
out
fcmovnb
mov
lret
ret
scas
xor
fisubl
xor
addr16
out
cmp
dec
push
dec
cmp
cmp
hlt
sahf
jbe
xchg
push
sbb
push
or
xor
mov
mov
pop
les
rcrl
mov
int3
pop
fdivp
call
jl
jno
popa
sbb
xor
cmp
pop
xchg
mov
lds
add
clc
xor
cmp
cmp
inc
lcall
into
gs
popf
stos
mov
cmpsl
cld
movsb
loope
int
in
mov
sahf
scas
push
data16
add
pushw
inc
aam
and
dec
xor
stos
mov
loope
jb
jg
insb
inc
xor
mov
shlb
push
shl
xchg
pop
push
shrl
sub
xchg
pop
repz
pop
cs
loopne
adc
bound
cmpsl
enter
out
cld
dec
es
adc
and
pop
gs
or
test
data16
sub
pop
je
pop
shrl
add
pop
push
inc
cmpsl
adc
jo
rclb
incb
sbbb
inc
cli
inc
dec
mov
mov
adc
mov
out
add
in
pop
in
fwait
push
outsb
imul
jle
push
cmpsl
sbb
mulb
or
ja
xchg
jg
lret
or
cmp
pop
stos
clc
xchg
add
outsb
add
out
and
clc
test
xchg
push
cmp
pushf
mov
test
ret
sub
pop
cmp
adc
jno
aaa
xchg
cmp
cwtl
sub
push
std
addr16
jbe
mov
push
aas
mov
push
pop
mov
adc
ss
jo
jl
pop
pushf
mov
mov
cli
add
mov
out
mov
inc
mov
push
pop
sarb
jbe
nop
pop
mov
and
sbb
cmpl
mov
and
xchg
mov
xchg
jp
dec
cmc
mov
sub
and
or
ja
and
ljmp
fldl
lea
out
push
arpl
lods
mov
jle
cmpsb
popf
movsl
sbb
data16
mov
sbb
loop
pop
test
sub
and
test
jbe
inc
sub
leave
lea
push
cmp
roll
jecxz
call
or
leave
repnz
xchg
or
outsb
fisubl
xchg
cld
sbb
in
inc
cltd
dec
je
aaa
nop
dec
jecxz
mov
add
push
ljmp
enter
push
inc
fmull
push
mov
mov
xchg
jle
call
xchg
and
lret
dec
lret
std
inc
sub
push
sbb
fmull
cwtl
insb
adc
xchg
ret
sub
fisubrl
call
push
xchg
xchg
push
stc
cmp
sbb
jbe
daa
insb
xor
sbb
pop
push
jno
das
sbb
sub
adc
stos
nop
xchg
mov
push
xchg
push
sub
or
xchg
icebp
jg
loope
test
pop
and
add
lds
push
icebp
ja
pusha
jnp
dec
ret
mov
std
pusha
add
and
or
test
xchg
sahf
jae
popf
mov
jo
in
ss
pop
test
shll
cmp
xchg
call
fistpll
movsb
push
das
int3
ss
dec
cli
pop
cmp
push
add
pop
jg
xchg
pop
cld
jl
pop
sbb
xor
scas
aad
cli
adc
jae
mov
and
pushf
jns
cmpsl
addr16
cwtl
push
sahf
in
cmp
pop
mov
xchg
scas
jnp
ss
rclb
pop
mov
outsb
and
pop
mov
mov
movsl
push
mov
ds
pusha
daa
push
mov
mov
xlat
clc
dec
add
push
mov
sub
insl
sbb
push
pop
push
mov
dec
sahf
cmpsb
and
pusha
mov
adc
dec
pusha
cmc
or
or
fsts
adc
pop
mov
divl
and
or
jbe
mov
scas
sti
mov
lods
aad
push
jo
jmp
pop
ds
cmpsb
fdivrp
jg
jne
lods
xchg
mov
popf
xchg
fnstsw
iret
aaa
lcall
cmpsb
pop
and
mov
int
cmpsl
add
xchg
adc
add
jg
xchg
mov
fs
lret
jmp
cmc
mov
cmp
gs
jg
or
pop
int3
fs
inc
mov
mov
pop
rcrb
dec
jmp
scas
add
add
sbb
adc
jmp
add
sub
push
test
fidivl
rcrl
test
mov
aaa
lods
push
mov
jno
adc
inc
dec
sbb
sbb
lret
push
or
clc
inc
scas
arpl
pop
sub
push
lret
mov
mov
sub
test
dec
and
cmpsl
cmp
mov
outsb
mov
add
pusha
les
gs
pop
and
sbb
shrb
fiadds
mov
in
mov
es
xchg
push
or
mov
push
int3
and
pop
dec
enter
push
mov
out
dec
pop
pop
sub
mov
stos
scas
or
lods
lods
insb
mov
inc
popf
pop
shrl
leave
lods
mov
das
call
pop
std
pop
shll
mov
sub
sbb
mov
shl
sbb
ja
outsl
and
repnz
sbb
add
dec
das
negl
in
pop
xchg
in
cltd
ja
lods
int
loop
or
fidivrl
insb
adc
push
addl
lock
push
mov
adc
repnz
jge
dec
inc
pop
dec
mov
lahf
les
into
mov
stos
stos
cmpsl
adc
push
inc
cmp
test
pop
pop
sub
popa
fisubl
ljmp
push
cmp
gs
cli
lock
shll
into
clc
jl
sbb
mov
int
jp
ret
imul
rcl
jl
mov
mov
adc
push
lods
xchg
sub
cmp
pop
jl
stos
pop
shl
and
xchg
ja
cli
sbb
aad
pop
sahf
std
xor
pop
push
ret
or
fnstsw
inc
push
sahf
xor
sbb
shrb
xlat
xor
imull
add
std
int
sahf
cmpsb
push
sahf
mov
dec
push
or
sti
sbb
mov
hlt
aad
sub
ret
mov
mov
mov
jns
imul
cmpsb
inc
loope
lock
cmp
sbb
lds
jns
out
mov
mov
lods
mov
jl
cmpsb
xlat
test
mov
mov
jae
sbb
jno
dec
jl
push
add
insb
mov
push
sub
int3
jne
hlt
dec
lret
push
push
jbe
jmp
mov
test
insl
add
pop
or
jbe
popw
dec
or
dec
lcall
cwtl
stc
push
pop
add
pushf
leave
stos
dec
daa
jl
enter
stos
fmuls
fnstcw
add
pop
lds
jmp
push
rorb
and
enter
daa
icebp
inc
adc
cmp
pop
std
aam
mov
push
mov
sbbl
add
sahf
sbb
mov
mov
xor
push
pop
push
js
repnz
mov
sub
fwait
and
movsb
idivl
lret
xor
mov
push
cwtl
adc
in
out
sarb
insb
arpl
mov
outsl
lret
sbb
enter
roll
push
aas
adc
lcall
or
stos
mov
repz
pop
adc
inc
popf
outsb
or
in
sbb
sbb
repnz
xchg
ss
push
sbb
cmp
jno
xacquire
xor
jno
rol
pop
xor
mov
fwait
add
and
jecxz
pushf
imul
andb
ficomps
addr16
movsb
test
ficoml
loopne
xor
aam
cmc
sar
xchg
call
jecxz
ja
lea
jge
mov
push
movsl
negl
jno
adc
fwait
mov
or
inc
dec
pop
and
sbb
jmp
xchg
push
addr16
mov
popf
dec
pushf
cli
movsb
jl
cmc
inc
xchg
add
jmp
incb
test
sub
int
mov
sub
jp
je
xlat
pop
pop
and
std
xchg
sbb
cltd
and
dec
xorb
adc
pop
push
ljmp
ds
inc
push
cmpsb
je
int
fs
mov
xchg
push
insl
punpckhbw
mov
mov
mov
xor
jns
mov
inc
std
inc
imull
int
cwtl
xor
movsl
xchg
adc
jmp
test
mov
add
out
push
pop
lods
jg
mov
adc
mov
inc
inc
int3
add
jecxz
sbb
fisubrs
mov
lods
out
mov
xchg
dec
pop
int3
sbb
add
popa
sahf
inc
cmp
aam
pop
mov
rolb
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sbb
xrelease
push
mov
aaa
pop
ret
jnp
jge
rcrb
jb
rcll
imul
sub
add
dec
rorb
popf
loope
dec
dec
and
loopne
xor
movsl
sbb
je
add
cpuid
add
mov
negl
mov
mov
mov
xchg
out
mov
pop
lods
xor
mov
sbb
sbb
jp
inc
pop
lret
cmp
cmp
mov
jnp
xor
std
add
pop
jp
xchg
add
cld
mov
popf
stos
inc
movsb
stos
mov
orb
fbld
test
hlt
dec
push
jae
mov
xchg
pop
aaa
xor
je
js
movnti
shll
jle
pop
dec
adc
imul
push
icebp
jp
push
or
inc
mov
cmp
xchg
repnz
or
adc
int
sbb
js
test
std
mov
arpl
xchg
fldcw
ljmp
ss
xchg
fwait
dec
mov
cltd
shrb
cmp
dec
icebp
iret
jge
sbb
fmul
loope
jnp
ja
xchg
lds
jb
testl
cmpsl
loop
fbstp
push
push
jg
rcl
das
sub
mov
jmp
jp
ds
roll
jp
imul
or
daa
jmp
jl
testl
rcr
cmp
mov
daa
ret
shrl
xchg
push
ljmp
shl
inc
imul
adc
imul
into
mov
in
imull
hlt
insl
les
xchg
inc
push
pop
xchg
add
popa
sahf
jge
pop
jbe
divb
js
dec
int
aaa
out
push
mov
call
int3
inc
clc
xchg
cmp
stc
adc
and
aaa
dec
cmp
pop
ret
pop
lods
adc
fucom
insb
les
daa
pop
enter
loope
adc
add
pop
rcll
inc
xor
mov
leave
cmp
idivl
fsubp
add
rcl
fisttps
lea
push
bound
push
push
and
arpl
imul
arpl
fcoml
jl
sub
xchg
call
push
inc
incb
cltd
sub
or
sub
rcrl
pop
cwtl
test
mov
push
jb
sub
cld
cmpsb
adc
sarb
sarb
idivb
jge
movsl
insb
and
inc
nop
xchg
xchg
xor
push
sbb
push
mov
dec
pop
scas
insb
aaa
adc
fidivrs
test
inc
cmp
lds
xchg
cmp
sub
movsb
movsb
fisubrl
aas
push
sti
std
cltd
push
out
and
dec
and
in
scas
movsb
cmp
mov
mov
imul
scas
sti
xchg
mov
jmp
pop
adc
ret
dec
cmp
xlat
fistpl
push
inc
push
fisubrl
push
cmp
sti
pop
adc
clc
push
sub
lahf
out
xchg
rolb
lock
pop
repz
fists
sarb
lds
push
add
enter
dec
adc
adc
aaa
jo
pop
inc
stos
lcall
nop
or
push
jmp
jne
lcall
js
movsl
test
and
dec
pop
inc
xor
cmpsb
insb
test
sub
mov
and
jp
das
xor
and
mov
cmpsb
hlt
mov
adc
lds
and
ss
test
adc
push
pop
cmp
shrb
nop
add
xchg
cmc
stos
and
jmp
jno
sub
push
mov
inc
aam
add
fs
xchg
xchg
mov
mov
cld
jge
frstor
loop
xchg
out
and
xor
sub
xchg
cmp
add
mov
rorb
lcall
fadd
adc
ret
jne
mov
jmp
inc
mov
or
cmp
ss
jmp
mov
jno
cld
test
pop
lret
roll
fldt
mov
dec
inc
or
inc
test
add
mov
mov
xor
rol
cmc
or
adc
xchg
sbb
cmpl
and
mov
pushf
and
gs
out
xor
repz
inc
jae
sbb
lret
subb
and
mov
xlat
std
pop
wbinvd
roll
ja
adc
fs
jbe,pt
mov
lret
mov
dec
cmp
mov
ss
mov
arpl
das
lcall
ja
pop
xchg
sti
popf
outsb
insl
adc
lcall
sbb
lods
jae
imul
inc
ret
jmp
xor
and
es
inc
adc
pop
mov
adc
sub
adc
call
lahf
push
cmpsl
outsb
xor
rdmsr
push
shll
stos
popa
test
cli
jl
faddp
jae
mov
xorl
jns
es
pop
pop
mov
jl
push
mov
fwait
or
sbb
lret
scas
lahf
loop
test
push
sub
dec
xor
int
mov
lock
notb
aas
xchg
push
mov
or
or
sbb
pop
mov
sahf
sub
sahf
jne
lret
push
jns
sbb
stos
dec
adc
out
movsb
test
out
test
jge
fnstsw
outsb
pop
mov
fbstp
fbld
sbb
mov
in
pusha
icebp
add
mov
aad
xor
call
lock
sbb
je
jmp
stc
loop
stos
repnz
pop
out
xor
inc
jecxz
fimuls
or
pop
mov
das
adc
mov
mull
ds
jl
mov
sub
lods
scas
sbb
xor
out
lret
cmp
loopne
pop
ret
movsl
mov
add
inc
in
dec
bound
xchg
mov
push
sbb
hlt
lret
adc
adc
dec
jmp
cld
daa
mov
cltd
dec
mov
ss
dec
cmp
gs
ret
sub
lahf
pop
or
push
sbb
cmpsb
cli
add
inc
int3
ret
mov
mov
pop
iret
add
xchg
repnz
stc
xchg
cmp
pop
inc
or
cmpsl
cmc
and
je
adc
mov
data16
loop
outsl
push
cmp
jbe
push
cs
ret
sub
movsb
jne
shlb
dec
test
filds
mov
push
cmp
add
lods
push
stos
popf
or
enter
les
or
push
orb
inc
adc
inc
movsb
fwait
pop
gs
add
and
stos
mov
mov
imul
inc
pop
sarl
jnp
jmp
jge
les
mov
call
shll
fs
jge
jne
daa
sar
out
inc
lds
adc
jle
test
mov
mov
add
outsl
mov
push
xlat
ja
popa
sub
push
leave
lods
lret
mov
test
push
push
mov
scas
or
inc
add
lret
and
fcom
mov
nop
mov
pop
add
push
imul
sbb
insb
mov
popa
lret
xchg
xlat
fistl
dec
fcomi
je
enter
cmp
mov
jmpw
jbe
adc
fbld
out
push
das
push
decb
addr16
xchg
cmpsb
xor
int
pop
in
mov
sti
push
xchg
outsl
lret
lods
es
xor
dec
sub
rol
in
fldcw
std
sbb
adc
js
and
clc
rcll
loope
jmp
mov
xchg
out
inc
into
insl
push
sub
jle
cmp
test
mov
cwtl
sbb
lcall
mov
jp
push
mov
xchg
sub
addr16
in
outsl
push
or
test
mov
aaa
cmp
pop
sub
sub
sbb
je
data16
mov
or
lcall
aas
pusha
sbb
das
into
loopne
nop
xor
xchg
repnz
cli
jmp
jnp
loope
repnz
cmp
ret
pusha
test
sbb
out
repnz
shlb
mov
jge
ds
das
repnz
jne
or
push
ja
stos
mov
hlt
incl
jp
inc
adc
jg
test
push
loop
mov
aad
loopne
dec
inc
add
inc
cmp
push
dec
shrl
jle
push
mov
fs
clc
sbb
cld
xchg
hlt
fstpt
loope
test
add
lds
xchg
jmp
jecxz
mov
xchg
ss
xor
std
sub
jl
push
add
add
les
shl
je
addb
xor
ret
fimuls
push
sbb
test
push
imull
addr16
xor
hlt
dec
mov
test
jns
stos
aaa
leave
or
and
pop
data16
mov
push
mov
js
jmp
loop
cmp
iret
pop
inc
add
cmp
scas
or
xlat
xchg
fld
mov
dec
sar
js
cwtl
dec
insb
mov
stos
push
rcll
ljmp
ss
into
cmp
sahf
xor
icebp
and
push
subb
addr16
adc
dec
adcb
lret
inc
inc
sub
push
pop
inc
add
bound
add
int3
xorb
call
mov
cld
popa
push
sti
cli
sub
pushf
cld
dec
sbb
jge
jbe
cmp
lret
les
dec
push
or
mov
cmp
sub
test
cmp
jns
jmp
inc
fsubp
aaa
and
fiaddl
gs
js
or
jle
xlat
cmp
inc
mov
pusha
imull
add
jmp
mov
jne,pt
add
cmp
hlt
dec
xor
add
jno
or
movsl
xchg
inc
jbe
lret
inc
pop
add
or
add
and
div
push
push
add
pop
xchg
push
fsubrs
aam
add
adc
scas
jnp
xor
inc
push
xor
or
xchg
inc
mov
mov
pop
mov
cmp
push
mov
and
jecxz
and
jecxz
xchg
and
fwait
repnz
push
aam
data16
rorl
lcall
add
mov
roll
pop
dec
pop
push
push
inc
iret
mov
rcl
cmpsb
gs
dec
mov
stos
sub
and
cmp
incl
js
xchg
inc
out
fnstcw
repnz
mov
xlat
imul
fimull
sub
add
testl
and
add
test
pop
mov
mov
or
pushf
push
and
add
cmp
in
bnd
or
ss
pop
iret
mov
cs
inc
sub
roll
inc
loop
or
shr
push
aaa
sub
mov
mov
push
pop
or
movlps
das
pop
dec
xor
jp
or
icebp
mov
sub
arpl
incb
push
iret
push
or
and
mov
pop
arpl
jns
test
repz
mov
add
loopne
bound
xchg
push
je
jae
loopne
adc
lret
shlb
fwait
jp
jl
jns
push
in
pop
add
push
add
sub
sub
xchg
lahf
cmpsl
mov
inc
movsl
push
mov
or
out
mov
mov
lcall
jge
push
xor
and
mov
pop
sti
xor
push
inc
test
scas
cmpsb
add
clc
lcall
xchg
clc
cmp
xor
or
sarl
mov
mov
adc
fmuls
lret
push
std
js
cmc
dec
jl
or
mov
arpl
popa
xor
outsb
aaa
pop
gs
fmuls
movsb
shlb
dec
fsubp
lds
pop
aas
xor
lods
es
push
aad
push
lock
cmp
stc
fdivrs
mov
and
add
scas
arpl
idivb
inc
insb
sbb
test
movsl
hlt
popf
rorb
inc
ljmp
out
dec
cmp
dec
fidivs
gs
mov
xchg
xor
xchg
cmp
xor
xor
xchg
mov
daa
add
lods
insb
mov
test
sub
mov
mov
dec
test
loopne
dec
sub
aas
pop
adc
fildl
jne
inc
scas
push
popa
jl
fwait
cwtl
push
dec
mov
in
call
clc
sub
and
xchg
sbb
shlb
popa
cmp
inc
or
rol
and
test
sbb
cmp
jns
lret
sub
pop
pop
push
sub
je,pn
in
dec
sti
sbb
pop
mov
fadd
or
pop
and
arpl
and
xchg
imul
les
loope
cmc
add
dec
loopne
xchg
push
adc
xchg
inc
int
fdivrl
hlt
sbb
xchg
adc
add
outsl
cli
lods
mov
lea
push
mov
xchg
pop
movsb
dec
lret
loope
mov
mov
rolb
fildl
xchg
hlt
sbb
pop
push
jl
adc
sub
insb
sub
or
push
leave
in
add
ss
cld
mov
jecxz
pusha
inc
xor
pusha
test
cld
push
push
subb
out
daa
ficoml
out
inc
adc
mov
popa
dec
lret
data16
sub
addr16
leave
out
add
stos
cmpsl
mov
or
stos
lea
pop
repnz
ss
hlt
fisttps
xchg
lea
mov
xor
sahf
iret
adc
cmp
push
xchg
adc
bound
mov
mov
stc
loop
sbb
dec
jne
movsl
daa
out
sti
jmp
lock
mov
stc
pop
sub
je
push
inc
fbld
lahf
ds
aad
mov
pop
lds
adc
add
push
in
out
push
xchg
sbb
cs
jno
push
adc
xchg
mov
add
test
xchg
outsl
scas
out
lock
add
arpl
lcall
add
and
push
fisttpl
add
popa
xorb
push
mov
test
xchg
lds
cld
mov
mov
cs
and
pop
test
div
test
and
or
out
imul
das
mov
xchg
add
mov
sahf
cmp
add
push
addr16
sbbb
test
out
sbb
sbb
xchg
mov
xor
loope
push
lods
ljmp
cltd
or
movsl
pop
lahf
lcall
or
jmp
das
jecxz
and
cltd
mov
jg
loopne
les
lret
cld
hlt
adc
mov
xor
mov
jno
repz
pop
mov
or
add
outsb
lds
sub
dec
mov
mov
mov
mov
out
lahf
bound
std
fbld
stos
imul
dec
fildll
pop
jno
add
arpl
or
into
icebp
es
pop
test
jo
xor
stos
in
lret
test
xchg
xor
push
daa
outsb
add
xor
cmpsb
dec
aaa
push
out
cld
scas
mov
cmpsl
xor
pop
rcll
mov
cmc
imul
sahf
mov
jnp
cmp
mov
dec
adc
es
pop
sbb
lahf
sub
push
cmpsl
out
imul
xor
xor
jmp
movaps
cmp
aaa
daa
sub
push
cmp
sbbb
dec
pop
add
cmp
inc
cltd
jle
aam
or
and
xchg
mov
and
out
jne
les
mov
imul
lcall
push
xchg
addb
and
and
cmp
das
cwtl
ljmp
cmp
adc
rcrb
inc
pusha
into
push
ds
sbb
xchg
pop
xchg
dec
dec
add
arpl
out
mov
loopne
xchg
add
shr
cli
xlat
clc
in
ret
dec
subb
sub
push
xacquire
sub
into
cli
xor
call
leave
test
add
mov
jne
int3
scas
out
ds
xchg
push
shr
fnstenv
dec
loope
test
jnp
pop
inc
add
xlat
arpl
fs
loopne
nop
int
inc
das
fsubrp
stc
or
mov
inc
mov
movsb
jp
push
sti
cltd
loope
add
loope
mov
pop
out
inc
jge
add
push
push
arpl
adc
testl
xchg
xchg
mov
cmp
xor
inc
sub
aad
inc
adc
or
xorl
xchg
add
sbb
popf
sbb
adc
movsb
fdivrl
cmp
jl
test
inc
cld
push
adc
outsl
cltd
and
mov
inc
lods
lods
fimull
sub
pop
mov
repz
ljmp
cwtl
pushf
mov
loop
div
sti
sub
shlb
cmp
ror
xchg
dec
or
mov
div
push
into
sbb
enter
sbb
test
pop
mov
cwtl
dec
test
mov
sti
add
push
jno
sti
push
dec
push
inc
imul
fisttps
addr16
in
or
fildl
icebp
fucomi
jmp
push
cmp
jo
rolb
fs
and
fbld
sahf
jp
adc
std
pop
xor
fbstp
push
xor
rcrb
add
dec
movsb
mov
mov
test
cwtl
nop
test
repnz
in
scas
cmp
sbbl
rolb
and
cmp
movsb
fld
fcmovnbe
jns
mov
push
loope
mov
fstps
pop
adc
les
xchg
arpl
jns
push
xchg
inc
jne
inc
add
jbe
fadd
int3
adc
pop
fwait
into
mov
lds
data16
movsl
mov
icebp
cmp
stos
or
or
cmp
push
arpl
mov
stos
sbb
loopne
in
int3
enter
xor
xor
addb
adc
lret
lahf
sahf
outsb
pop
sbb
repz
or
jle
call
lock
mov
jl
ret
xor
out
lahf
mov
adc
cld
mov
mov
adc
cmp
pusha
adc
fldt
jge
sbb
mov
hlt
stc
pop
inc
pop
lret
adc
loopne
lds
in
repz
mov
mov
movzbl
testb
xchg
cmpsb
jb
add
fcom
adc
push
pop
push
jl
push
sub
push
mov
sbb
call
out
xchg
test
cmc
push
fstpl
lret
cmp
xor
dec
cmp
ret
inc
lcall
adc
movhps
mov
scas
sar
stos
gs
sbb
dec
fsin
sbb
lods
xlat
or
daa
or
ret
mov
cmp
inc
sti
dec
insl
dec
sbb
mov
inc
aaa
mov
xchg
xchg
pop
push
subb
xor
pushf
mov
pushf
push
outsb
repnz
test
je
sbb
sbb
fsubr
cmp
into
es
sub
jp
in
mov
stos
push
xor
and
push
pushf
pop
shr
sbbb
sbb
ret
jne
mov
aas
inc
push
xchg
fsubp
fwait
push
dec
fcmovnbe
sbb
ljmp
fs
jo
int3
call
sbb
ljmp
mov
mov
pushf
clc
out
xor
and
insl
adc
cmp
into
es
inc
dec
jns
add
adc
xor
popa
sub
rorb
aas
es
or
stos
mov
sub
xor
stc
inc
insl
push
mov
cmp
add
push
call
pop
sub
add
and
or
sbb
or
or
sub
adc
cmp
popa
cmp
add
xchg
and
loop
sarb
int
mov
lret
mov
lds
cmc
cmpsl
mov
pop
je
cmc
mov
movsb
add
stos
adc
inc
and
push
and
xor
xor
jb
push
ja
insb
push
lret
addr16
lea
enter
scas
insb
std
sub
arpl
fisubrs
pop
decl
mov
es
aas
dec
int3
out
jl
jl
adc
cmp
add
mov
mov
or
cmp
in
aaa
sarb
push
and
rcl
sub
mov
add
push
dec
pop
andb
push
or
data16
dec
cmp
imulb
cltd
in
push
push
xchg
and
or
sub
pop
pop
lret
jmp
or
push
scas
pop
cltd
lods
mov
or
add
inc
or
inc
cmc
sub
fisubrl
sti
loop
jg
add
adc
dec
ja
mov
mov
negb
gs
lds
sub
cmp
xor
stc
push
and
jno
iret
and
mov
xor
jmp
in
xorl
push
gs
push
arpl
popf
push
ja
inc
lods
aad
cltd
mov
test
fwait
insl
scas
or
stc
test
scas
ja
or
nop
inc
sti
adc
fadds
lods
xchg
movsl
fmulp
adcl
mov
jo
imul
mov
clc
mov
adc
in
push
push
in
lea
icebp
adc
xor
repnz
popf
stos
nop
mov
mov
aad
hlt
mov
iret
out
stos
loopne
movsb
es
push
movsb
lahf
adc
mov
adc
pop
js
xchg
cmp
arpl
jl
sahf
mov
inc
mov
mov
pop
sub
repz
aad
mov
mov
dec
dec
xchg
xchg
mov
fs
xchg
or
lcall
adc
xchg
xor
push
push
bound
ret
adc
lods
jp
sbbb
aaa
pop
lds
push
sbb
pop
mov
push
ds
sarl
cltd
jl
mov
lahf
jo
fisubs
bound
cmp
test
pop
xor
in
mov
mov
jo
out
test
addr16
inc
fwait
cmpl
je
push
loope
jg
push
or
adc
lret
mov
bnd
dec
or
add
push
je
mov
test
push
loopne
sub
jo
mov
cs
mov
add
popl
xor
cmpl
mov
sub
in
fstl
in
lods
sub
or
lret
xor
in
add
pop
pop
call
insb
mov
xchg
xchg
addl
sbb
test
mov
mov
mov
and
das
cmp
adc
mov
xor
mov
jnp
cmpsl
or
dec
aas
sub
pushf
pop
les
in
popa
daa
xor
adc
cmc
xchg
inc
jecxz
add
and
add
loope
aas
mov
fwait
outsl
mov
imul
les
push
mov
in
mov
div
or
sub
xchg
jle
test
jge
push
test
xchg
outsl
mov
or
cmp
add
call
xchg
sbb
mov
push
in
mov
fimull
push
rcrb
mov
test
pop
xor
pushf
push
cltd
add
outsl
and
movl
cmpsl
sub
mov
mov
jmp
dec
cli
sub
xchg
sbb
in
cltd
das
lock
imul
push
push
inc
arpl
jo
mov
lock
fistpll
ljmp
mov
stc
scas
pushf
scas
jns
stos
int3
leave
inc
leave
mov
js
loop
mov
test
dec
es
push
mov
cmp
popf
mov
ja
insl
add
dec
xorl
mov
mov
out
repnz
or
aas
sbb
call
stc
insb
inc
mov
or
xor
pop
into
addb
imul
fistpll
jbe
push
sub
push
ret
jg
arpl
mov
add
sub
jecxz
mov
lods
les
xchg
dec
adc
andb
xchg
inc
xchg
mov
sbb
je
jecxz
cltd
xor
xchg
jp
mov
sti
daa
insb
jne
scas
dec
js
stc
mov
or
push
jnp
roll
cmpsb
ljmp
jne
push
xor
xchg
lahf
sub
sbb
adc
or
inc
cmpsl
cmp
shl
mov
stos
jg
cmp
push
add
out
in
jo
scas
ret
std
mov
test
stos
inc
pop
and
mov
mov
ficomps
or
mov
je,pt
adc
sub
mov
jne
mov
scas
cld
dec
cmpsl
adc
dec
stc
push
jl
out
cmc
je
pop
movsb
and
cwtl
sbb
mov
cld
mov
pusha
arpl
xchg
sbb
add
cmp
and
pusha
adc
or
push
cltd
mov
cmpsb
mov
jbe
xchg
and
iret
xchg
or
mov
pop
fnstenv
std
inc
mov
aad
xchg
js
int3
push
sbb
dec
hlt
jmp
out
mov
cltd
fldl
cmpl
xor
dec
dec
adc
add
lahf
loope
shl
mov
pop
mov
sbb
sbb
outsb
loop
gs
cmp
pop
out
jecxz
pop
xchg
fstpl
jcxz
adc
dec
inc
rcr
sbb
push
iret
mov
fnstsw
int3
notl
mov
jge
popa
dec
fildll
jo
cmp
add
in
ss
push
cmp
pop
stos
in
push
inc
das
jp
push
sbb
dec
imul
inc
in
ret
mov
ss
je
mov
jo
mov
out
mov
add
adc
cmp
cld
xchg
enter
adc
jmp
push
mov
popa
jnp
xchg
mov
les
mov
sahf
push
stos
push
iret
fstl
clc
dec
loope
and
pop
xor
stos
hlt
sbb
shll
jl,pt
mov
inc
xor
dec
in
xor
sbb
push
pop
out
pop
jg
je
aad
out
insb
test
and
les
mov
in
fldenv
inc
cmp
das
insl
and
rolb
sbb
add
or
repnz
jle
mov
cmp
dec
xchg
outsb
jne
jnp
inc
fst
imul
or
aad
sub
js
test
testl
jmp
adc
cmp
jge
xor
jb
movsl
mov
cmp
xchg
jl
mov
data16
mov
or
adc
arpl
pop
jns
add
aas
int3
or
inc
es
xchg
popa
nop
insb
adc
and
test
int
cwtl
adc
cs
cs
jg
and
pop
lds
inc
mov
add
addr16
or
mov
inc
push
decl
inc
pop
insl
adc
fs
int3
sub
jnp
test
sbb
xor
clc
sti
jecxz
pop
pop
sbb
pop
jne
jge
leave
popa
or
out
lods
mov
dec
dec
and
sub
push
cmp
loopne
jg
ror
insb
outsb
cmp
fistl
xchg
mov
dec
push
mov
mov
ljmp
rcr
call
cld
ds
add
cwtl
jmp
addr16
xor
push
inc
test
cld
rsm
fbld
in
lock
repz
push
sub
pop
jae
sarl
add
insb
pusha
jg
inc
sub
mov
shrl
add
mov
lods
insb
dec
sbb
fnstenv
xchg
scas
cmp
push
and
xchg
ret
aaa
lahf
addr16
arpl
test
xor
out
repnz
comiss
pusha
pop
js
pop
mov
sahf
es
xchg
pop
cltd
mov
inc
sbb
inc
dec
icebp
dec
in
mov
iret
sbb
iret
mov
cmp
sub
sub
dec
xor
sub
inc
adc
cld
roll
or
add
fcoms
adc
sub
test
leave
stos
mov
jae
in
jge
les
shrl
jmp
incl
insb
jge
sarb
adc
cmpsb
sub
popf
fldcw
jg
dec
add
jnp
insl
xchg
cmp
mov
popa
sbb
out
ja
out
lock
sarb
lods
adc
inc
mov
adc
mov
inc
ficompl
xor
mov
dec
xor
test
pop
jmp
push
outsb
inc
popl
addr16
shlb
sub
fcompl
xchg
mov
mov
xor
lret
pop
mov
mov
adc
add
adc
pushf
js
jmp
mov
pop
lahf
cli
cs
sub
mov
jnp
je
push
fsubp
or
cmc
lret
outsl
or
xchg
or
stos
cmpsl
cmp
cltd
add
jb
jne
pushf
aad
ds
xchg
adc
aam
push
stos
mov
mov
cmpsb
and
jl
jg
imul
pop
shrl
cwtl
and
jmp
ds
scas
pop
jl
int3
mov
mov
pushf
mov
nop
pop
aad
xchg
push
and
push
mov
out
int3
out
mov
imul
addl
push
push
mov
in
jle
sub
cmp
sub
out
ja
mov
push
repz
jp
rcrb
ljmp
mov
std
mov
mov
pop
sbb
jmp
insl
sahf
xor
sahf
fisttps
aad
in
mov
ds
mov
imul
xor
mov
xchg
pop
repz
in
mov
cmpsb
scas
inc
add
mov
pop
mov
cli
stos
mov
aad
cmp
cmp
mov
aas
test
enter
xchg
add
aaa
test
jmp
jb
add
addb
jne
add
adc
aas
out
lods
clc
mov
mov
dec
fimull
push
jecxz
jnp
and
push
jle
dec
push
std
adc
rorl
jmp
lcall
addr16
mov
les
xchg
enter
cwtl
inc
ret
dec
lcall
aas
out
fiaddl
call
stc
lret
sub
cmpsb
cli
adc
xor
loope
xor
sub
mov
push
gs
jne
repnz
push
enter
dec
or
xchg
xor
pop
mov
out
mov
jbe
jb
mov
out
jg
cmp
faddp
call
stos
sbb
lret
push
pop
pop
sar
and
mov
loope
test
cli
jns
push
xlat
or
pop
push
lcall
lcall
mov
insb
sub
pop
call
aam
adc
jl
dec
cmp
mov
and
lret
inc
aaa
lret
pop
push
out
mov
sarb
pop
pop
and
jge
push
jl
out
or
jnp
xchg
mov
push
mov
sti
icebp
jge
daa
jl
enter
mov
mov
push
test
xchg
stc
cwtl
pop
lds
test
sbb
xchg
cli
lcall
leave
fistpl
sbb
pop
mov
add
mov
cmpsl
jmp
mov
push
sbb
cmp
insl
push
jo
xlat
sub
aam
pop
movsl
jb
push
jmp
cli
test
jno
fs
mov
shr
dec
xchg
shlb
cwtl
or
jno
mov
lret
pop
aas
imul
cld
adc
out
je
clc
movsb
out
or
dec
xor
add
and
sbb
test
cmp
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
add
add
add
add
add
roll
add
lds
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
add
add
inc
push
lea
jmp
movsb
pop
shrb
add
inc
cmp
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
adc
ret
loope
pop
movsl
xchg
add
add
add
jle
outsl
mov
mov
and
pop
dec
je
jmp
in
xor
xchg
mov
dec
incb
adc
mov
push
xor
rolb
adc
push
pop
jne
mov
push
jmp
call
shrl
std
out
pop
dec
adc
test
loop
aas
add
leave
test
dec
xor
jge
xor
rorb
repnz
mov
pop
aam
mulb
movsl
mov
fcomps
mov
nop
sub
ds
jns
mov
nop
test
js
loope
adc
fidivrs
rorb
out
ljmp
add
das
cltd
stc
push
ret
hlt
or
sub
push
addb
dec
mov
out
in
out
mov
mov
mov
aam
lods
jl
xchg
repz
lcall
inc
inc
addr16
clc
or
scas
sahf
inc
xchg
rcll
lods
jp
jb
xlat
pop
jmp
lea
adc
ret
mov
inc
push
and
mov
mov
add
sbb
cltd
jb
mov
test
out
push
call
out
or
and
mov
clc
ljmp
enter
fwait
inc
xor
mov
jle
fs
ss
or
pop
rcll
jnp
arpl
mov
inc
mov
cmpb
pop
mulb
ret
sbb
adc
fidivs
mov
cwtl
gs
mov
push
repz
in
insl
repz
sub
fwait
mov
lock
mov
mov
xchg
stos
add
jmp
or
inc
xor
add
out
add
aad
pushf
mov
fcomip
mov
icebp
dec
or
aam
add
pop
imul
mov
in
adc
and
xor
cmp
int
pop
enter
data16
mov
xchg
jbe
daa
sub
pusha
cwtl
ja
xchg
inc
shlb
fnstenv
cmp
shlb
sub
out
push
jne
popf
dec
ss
sub
out
pop
and
int
int
xchg
xchg
jbe
sub
mov
mov
add
sub
ret
xor
cmp
add
imul
push
add
inc
test
push
roll
push
outsb
mov
mov
into
cmp
scas
lret
outsb
cwtl
psrlq
xor
xor
or
push
push
movsb
lds
cmp
adcb
push
cld
mov
inc
pop
adc
mov
fbld
aam
xlat
imul
jb
out
lcall
lcall
test
mov
call
or
sbb
mov
stc
adc
rorb
fstpt
lret
dec
mov
mov
fimull
lahf
cld
adc
mov
cs
push
or
adc
cmp
and
xchg
dec
dec
pop
xor
push
lock
sbb
and
shr
dec
inc
jae
cmp
enter
mov
lods
push
adc
push
push
adc
push
std
outsb
xchg
lods
lock
mov
xor
movsl
ret
push
movsl
cmp
into
orl
int
mov
mov
cmpb
push
sti
scas
inc
sub
or
add
xor
lahf
add
mov
push
js
mov
jae
add
out
add
out
push
mov
push
nop
mov
mov
push
call
loop
jae
jl
push
dec
loopne
ds
shr
xor
push
ja
fs
push
inc
je
hlt
sub
jmp
cmp
add
sub
inc
scas
mov
lods
sub
movsl
cs
jmp
or
addr16
in
jo
or
mov
loop
ljmp
repz
enter
pop
cmpsl
sub
ds
repnz
mov
inc
lds
sub
aad
call
sub
jno
adc
inc
add
or
loope
push
mov
jecxz
clc
xor
mov
push
pushf
mov
in
adc
mov
into
das
sti
sahf
adc
mov
aas
das
or
pop
pop
mov
testl
sahf
ljmp
mov
pop
push
cmc
add
xchg
hlt
fcomip
sbb
push
pop
sbb
es
test
inc
pop
or
xchg
add
mov
popa
pop
push
sub
in
sub
in
nop
mov
cmp
subb
jge
stos
aam
cmp
sarb
imul
and
mov
jge
xor
sub
sbb
jle
push
or
int3
test
cmp
dec
or
jne
repnz
dec
mov
adc
imul
sti
mov
jo
dec
enter
mov
push
or
push
adc
cmp
out
cmpsb
js
mov
xchg
add
fldt
xchg
xor
adc
jge
aam
into
add
dec
push
cmp
fwait
in
sub
mov
stc
mov
add
gs
popf
jg
enter
xor
mov
add
add
add
mov
pop
movsb
fnstenv
sub
pop
cmp
arpl
js
sub
push
lods
jl
ret
and
stos
hlt
and
lahf
dec
test
popa
push
test
mov
jae
icebp
adc
sahf
test
lds
cmp
lret
jae
ficomps
fistpl
mov
stc
movsl
bound
push
fisubrs
pop
xchg
repz
add
scas
mov
or
push
pop
mov
xor
mov
repz
cmp
scas
ljmp
scas
bnd
xor
lcall
push
or
cmp
clc
adcl
xlat
aaa
imul
dec
fildl
push
mov
mov
push
sar
test
ljmp
cmp
mov
xor
insl
out
pop
mov
and
and
jge
sti
xchg
insb
pop
rol
add
mov
out
or
jl
push
jae
mov
out
mov
aaa
dec
or
pop
bnd
inc
cmp
in
cmpsl
ja
cmpsb
dec
in
add
add
cmp
imul
test
mov
mov
ret
in
pop
adc
mov
sub
xor
jno
fnsave
xchg
sub
pop
xchg
dec
cmc
insl
and
jno
jae
sub
bound
mov
xor
nop
leave
call
popf
loopne
lret
mov
jo
sub
or
jae
inc
fndisi(8087
lods
push
inc
xor
in
xchg
or
pop
imul
inc
in
mov
pop
in
mov
shll
int3
add
sbb
inc
fstpl
pop
sbbb
loope
ss
xchg
repz
mov
add
add
add
or
xchg
mov
sbb
mov
cmp
mov
push
and
std
ret
loop
int3
stos
xor
xchg
inc
fiaddl
sbb
out
pop
test
aaa
xchg
push
sbb
out
sub
add
push
inc
outsb
and
ljmp
pop
fidivrs
test
scas
lods
int
sub
sbb
outsl
dec
lret
jle
ficompl
in
mov
mov
inc
js
cmpsb
je
aaa
loopne
jae
outsb
or
std
pop
cwtl
lods
pushf
inc
faddl
js
add
sti
test
or
addr16
shr
push
cli
mov
jle
int3
sbb
inc
int3
das
jno
cmpsl
lret
sub
popa
mov
jb
mov
and
mov
mov
mov
pop
or
imull
dec
popl
popa
dec
mov
mov
popf
decl
mov
pop
lods
fildl
cwtl
cmpsl
dec
addr16
or
mov
imul
or
fdivrs
in
enter
call
pop
cs
jl
sar
leave
add
pop
push
jno
add
jmp
sbb
jae
and
fisubrs
mov
jg
mov
cmp
sub
nop
xchg
push
jnp
adc
push
iret
push
sahf
xor
or
add
xor
flds
mov
pop
add
repnz
jge
jne
mov
test
mov
mov
and
hlt
mov
sarl
lods
sbbl
sub
sbb
repz
push
push
test
xlat
cltd
adcl
or
mov
pop
js
mov
ds
es
cmp
inc
add
lods
xchg
cmp
jecxz
nop
rcrb
and
aad
nop
add
out
add
ffreep
test
cs
int3
aad
and
insb
push
or
mov
pop
js
push
mov
pop
addr16
jne
inc
push
mov
daa
lcall
xor
nop
jo
in
xchg
stc
data16
dec
flds
notb
and
ret
sti
jp
sbb
jge
jge
and
stc
in
stc
clc
inc
pop
sub
mov
testb
pop
rcll
mov
jne
sub
ljmp
ja
je
jno
stc
imulb
outsl
cs
xchg
loope
js
adcb
into
jl
sub
dec
lea
pop
sbb
xor
push
stc
mov
movsb
jae
mov
mov
jle
lea
lods
rorb
orl
shll
adc
jo
pop
xlat
decb
roll
loope
jmp
out
and
xor
push
hlt
data16
rorb
pop
adc
inc
lcall
jg
incb
xor
repz
test
sub
pop
push
enter
in
int
test
in
push
inc
or
out
dec
jnp
pusha
xchg
out
movsb
test
and
lcall
ss
in
adc
stos
ja
psubusw
xlat
sti
sbbl
jl
faddl
lret
xchg
les
out
arpl
test
fiaddl
push
inc
adc
jge
jle
cmp
fs
cmpsb
or
lds
aad
repnz
cwtl
ja
imul
xor
in
and
mov
sahf
add
std
loopne
jl
jmp
sub
adc
lds
and
fcmovnb
dec
pop
bnd
add
data16
lods
cld
mov
push
jge
mov
out
add
xorl
dec
adcb
push
test
iret
and
fcoml
sbb
xchg
stos
int
xchg
xchg
daa
pop
rclb
mov
jmp
xchg
push
test
xor
cmp
rep
adc
sbb
and
adc
mov
ficoms
cmpsb
jb
jge
rorb
pop
in
pop
xchg
cli
mov
jg
js
jnp
movsb
sub
test
pop
fildll
fnstsw
ds
movsb
loopne
cmpsl
jmp
shll
sbb
pop
jle
dec
mov
sbb
jmp
jge
stc
xchg
ljmp
dec
jle
cmp
fiadds
xchg
sbbb
pop
cwtl
in
jae
push
data16
mov
pop
jp
mov
and
pop
shufps
sahf
js
jg
mov
jle
lahf
adc
push
mov
jo
inc
or
sbb
pop
sub
jecxz
in
dec
test
out
sub
fcomi
das
test
fildll
push
push
xor
inc
push
cmp
mov
jnp
or
adc
call
push
mov
dec
mov
lods
jns
test
inc
ja
addb
xchg
jbe
and
cmp
out
nop
dec
imul
mov
mov
fs
mov
out
cs
test
mov
cmp
xchg
negl
jnp
push
fwait
mov
roll
xor
addr16
mov
dec
pop
bound
xor
dec
ja
mov
sbb
xor
cmp
sbb
add
dec
test
scas
bound
ret
out
add
or
pop
ret
add
cmp
rcrb
mov
jns
xor
mov
mov
jmp
incb
out
add
jmp
push
jg
fucomp
mov
test
jl
xchg
add
out
add
push
mov
cmp
addr16
in
push
loopne
pop
xor
lods
or
xor
int3
mov
int
sbb
pop
mov
inc
cmpsb
out
push
lcall
je
and
adc
lock
or
lea
iret
xor
sub
sar
loope
push
add
sub
sub
loopne
in
mov
pop
sub
in
sahf
jne
stos
mov
je
test
xor
add
shlb
cmpsb
adc
jmp
or
jb
adc
cli
popf
loope
in
mull
pop
and
xorb
jp
mov
push
dec
xchg
and
rorb
out
insl
mov
cld
jae
pop
push
push
daa
and
mov
dec
popa
inc
loop
xchg
out
xchg
adc
push
dec
push
jl
push
pop
add
jp
shll
mov
dec
push
pop
shr
sbb
je
mov
add
and
ljmp
addr16
inc
test
xor
pop
sbb
lods
cwtl
mov
xor
call
in
sbb
sub
and
sub
pop
sub
test
rorl
xchg
mov
mov
fisttpll
divb
in
push
mov
aam
pop
pop
lret
push
push
or
xchg
dec
ret
stc
push
scas
jecxz
xor
fidivrs
das
cmpsl
mov
ljmp
pusha
jbe
push
loopne
cmpsb
iret
jle
movsl
mov
cmp
je
lds
pop
dec
ljmp
xchg
divb
jnp
out
add
sub
fs
out
cli
push
inc
pushf
loope
jl
shl
and
testb
mov
mov
mov
repnz
fxch
push
sahf
fstl
add
popa
outsb
aas
sbb
add
test
xchg
mov
dec
arpl
cwtl
jne
mov
mov
and
fdivrl
dec
xchg
das
mov
je
jp
lret
adc
cmc
or
jp
cmp
mov
ds
push
add
mov
mov
xchg
mov
std
hlt
inc
loopne
iret
mov
and
add
imul
dec
mov
sub
js
fmul
gs
dec
adc
popa
fisttpl
aad
rcl
push
add
idivb
mov
add
roll
pop
loop
mov
mov
cmp
cmpsl
negb
popf
jne
xchg
repnz
in
lds
lock
mov
ss
pushf
andb
fst
push
pop
or
stos
js
dec
push
xchg
xor
cmp
inc
les
mov
mov
jo
mov
cmp
mov
shl
jae
addr16
jae
in
mov
sub
es
cmp
sub
cmp
jmp
stc
jl
dec
inc
insl
insb
fdivs
es
loopne
cmp
jo
push
jne
jge
aaa
fidivrs
sub
imul
adc
cmp
pop
inc
icebp
shrl
lods
cli
ds
fs
adc
outsb
jle
int
mov
push
add
imul
in
dec
mov
fiaddl
dec
nop
idiv
xchg
rcrl
lods
xlat
stos
fdivrs
cld
rcr
das
mov
or
fisubs
repz
loopne
insl
jmp
cmc
addr16
mov
nop
rcl
in
mov
mov
in
out
push
je
inc
add
mov
in
pop
mov
test
sbb
push
jne
loop
inc
push
into
les
add
insb
cmp
jb
dec
dec
dec
test
mov
and
jp
pop
cmp
into
leave
repnz
rcrb
cmp
jp
test
xchg
sbb
add
ds
sub
mov
mov
int
ret
mov
and
dec
add
dec
push
mov
cmpsl
and
push
js
insl
xchg
cmp
jnp
negl
test
and
push
iret
cmp
out
sahf
mov
push
mov
mov
in
pop
dec
loopne
rclb
cli
imul
inc
pushf
cmpsl
pop
fwait
pop
mov
jb
sub
xor
ss
and
mov
gs
icebp
mov
lret
daa
jnp
es
repz
lret
xorl
nop
ret
or
mov
or
rorl
rcrb
xchg
mov
call
out
cmp
push
mov
ljmp
out
jno
push
fmul
pop
addr16
insl
enter
jbe
aaa
inc
fsubp
shll
mov
xor
aad
scas
xor
mov
push
inc
jb
ficompl
pushf
shrb
ja
xor
aam
out
mov
cmp
mov
and
orb
push
inc
adc
sub
shrl
pop
or
repnz
mov
lret
mov
push
cmpsb
cmpsl
icebp
mov
cld
jp
loopne
out
xchg
aaa
rcll
jecxz
add
xor
mov
inc
pushf
adc
add
xor
mov
xorb
cmpsb
dec
addr16
pop
dec
in
sbb
stos
test
cmp
cli
cmpsb
dec
test
cwtl
mov
in
inc
icebp
and
and
bound
cld
out
outsl
sti
inc
icebp
fisubrl
fmuls
decb
sbb
call
out
and
into
mov
dec
je
cltd
add
out
add
jmp
jmp
hlt
das
xchg
xchg
jecxz
mov
pop
mov
dec
inc
dec
sub
dec
sub
jae
cmp
add
or
lds
pop
push
sub
jnp
sbb
push
mov
sbb
popf
jo
xchg
pop
lock
fstl
sub
xchg
cmp
mov
jmp
sbb
cmp
mov
or
out
mov
adc
popa
and
xchg
push
fstpt
xor
dec
pop
roll
popa
mov
adc
js
in
mov
fcomps
pop
stos
je
mov
dec
in
outsb
out
sub
adc
std
push
sbb
cmp
mov
clc
mov
dec
inc
lret
imul
adcl
ljmp
cmp
xchg
xchg
xchg
pop
adc
mov
clc
leave
lcall
sub
cltd
and
mull
sbb
pop
xchg
sbb
sarb
fisubrl
int
testl
repnz
push
inc
sbb
add
movsb
and
lcall
shlb
mov
xchg
inc
cmp
mov
inc
push
outsb
inc
fldl
xchg
insb
xor
xor
daa
lahf
mov
sub
push
jp
sbb
divb
insl
pop
mov
adc
push
in
fcomps
or
jb
roll
lea
les
mov
insb
fldenv
add
push
mov
xlat
mov
push
mov
add
repz
rcll
sub
int
xlat
mov
inc
jge
inc
lea
sub
sub
aas
add
xor
aam
dec
jb
xchg
add
leave
or
xor
xor
xor
add
add
add
sbb
aaa
enter
xchg
inc
push
xlat
adc
outsb
or
addr16
mov
out
mov
xor
mov
out
pushf
mov
inc
shrb
mov
out
ret
jae
repz
mov
vpackuswb
jns
sub
sahf
jnp
inc
or
mov
sbb
xor
cs
mov
mov
inc
or
push
scas
xor
add
mov
push
pop
xchg
add
inc
out
xor
adcb
mov
xchg
xor
mov
push
xor
dec
pop
xchg
xchg
bnd
pop
mov
sub
sbb
and
mov
shrb
and
inc
mov
repnz
fists
ja
lcall
es
pop
stos
repnz
ficomps
clc
scas
cmp
das
mov
rolb
test
pop
push
in
rcr
xchg
out
rorl
arpl
mov
xor
add
js
push
pop
mov
inc
gs
dec
daa
mov
adc
fdivrl
lods
fimuls
arpl
test
iret
cmp
stos
inc
sbb
pop
loopne
jp
xchg
sub
pushf
mov
ljmp
cmpsb
leave
inc
or
jle
mov
pop
jp
sbb
pop
push
dec
stc
cmp
scas
xchg
and
icebp
or
loop
andl
sti
test
cli
dec
push
fdiv
add
dec
sub
xchg
adc
mov
fdivrs
sub
insb
ds
imul
pop
gs
in
push
xchg
lret
mov
xchg
ret
jmp
outsl
cmp
push
push
rolb
mov
add
cltd
ja
daa
loop
out
divl
out
add
in
mov
add
mov
in
clc
sahf
imul
jmp
mov
movsb
add
and
pop
adcb
dec
sbb
and
xchg
es
xchg
push
push
addr16
push
adc
pop
add
addr16
rolb
enter
sbb
dec
xchg
push
bound
lds
add
mov
stos
adc
ds
xchg
push
lahf
xor
mov
mov
cmp
mov
sbb
cmp
call
popf
push
imul
add
stos
mov
mov
or
mov
mov
jnp
int3
xchg
jbe
dec
iret
lods
les
xchg
test
mov
inc
fmuls
sti
fimull
push
repnz
sbb
inc
aam
lret
lea
decb
and
inc
jg
and
test
sbb
push
or
lods
das
push
pop
fistps
pop
es
andl
jae
jmp
sbb
push
mov
pop
ss
and
xor
pushf
pushf
mov
movsb
testl
into
mov
dec
xchg
nop
sbb
std
sarb
mov
sub
sub
xor
popf
xchg
sub
jmp
arpl
dec
cmp
cmp
mov
mov
jns
jmp
dec
loope
dec
iret
adc
fisubs
xchg
test
scas
adc
imul
pop
bound
push
lods
inc
movb
xchg
aas
dec
nop
xchg
and
push
lret
sahf
push
mov
cmp
sbb
or
lsl
jmp
jns
pop
ja
pusha
push
mov
xchg
push
call
inc
mov
or
xchg
pusha
lahf
add
out
add
repnz
xchg
bound
xchg
jl
add
cmp
paddsb
inc
push
jp
lds
lock
jae
mov
stos
add
jno
fsubrs
lcall
lahf
push
sub
or
mov
mov
xchg
mov
push
mov
pop
scas
mov
les
lods
pop
outsl
push
xor
leave
les
jb
push
bound
leave
push
cmp
mov
lret
ss
cmp
mov
mov
movsl
roll
outsb
out
cld
dec
popa
inc
jp
push
mov
test
scas
adc
in
xlat
adc
cmpsb
dec
scas
lret
aad
jne
cmp
ja
fs
movsb
addb
xor
mov
and
sub
pop
into
aaa
std
out
es
dec
pusha
in
fwait
mov
sbb
loop
out
dec
add
sub
cmp
xchg
pushf
mov
in
inc
scas
add
bound
xlat
rorb
push
mov
arpl
lods
loopne
test
hlt
adc
cmp
pushf
jmp
into
or
xchg
cmp
cmp
fcoms
pusha
mov
or
mov
cmp
stos
push
out
stos
ds
test
jg
jb
mov
jg
mov
aas
gs
mov
pop
cmp
jb
gs
pop
iretw
inc
adc
mov
scas
mov
push
sbb
jae
in
nop
or
test
push
scas
imul
movsb
repz
or
cld
cld
pop
push
inc
mov
push
xor
movsb
add
int3
dec
or
or
out
sbb
aas
adc
je
cs
repz
sub
xchg
ja
sahf
arpl
out
sbb
xor
and
push
mov
imul
icebp
iret
stc
mov
loopne
frstor
add
add
add
insb
std
out
insb
pop
push
sbb
cmp
fwait
adc
push
movsb
push
inc
and
pop
mov
and
lods
and
hlt
dec
rcl
fcompl
and
mov
mov
bound
xchg
xor
fsubs
push
xor
fisttps
daa
stc
adc
adc
or
lea
adc
into
jnp
mov
in
mov
fdivrl
mov
mov
ret
mov
mov
test
outsl
dec
mov
int3
shl
test
nop
ret
push
arpl
cltd
sub
faddl
or
dec
stos
mov
cmpsb
jns
cmp
ss
shll
jb
or
pop
mov
leave
inc
pop
push
mov
mov
je
jbe
std
lcall
mov
cmc
mov
mulb
inc
sar
xchg
jnp
add
add
jne
mov
lods
cld
lahf
sbb
pop
push
pop
xchg
subb
pop
daa
lds
gs
cmp
nop
lret
leave
int3
sub
inc
and
fsubr
jp
xor
sub
sahf
sbb
outsl
out
cmpsl
or
cld
jae
rcr
xor
test
mov
pop
in
jnp
mov
inc
sub
adc
in
lcall
pop
fidivrs
cli
les
cmp
jecxz
sub
push
xor
mov
inc
cltd
mov
adc
push
sub
pop
mov
cmp
or
lret
inc
pop
jecxz
mov
lret
inc
xor
dec
push
mov
mov
pop
mov
dec
xchg
out
fwait
lea
imul
add
jle
lods
icebp
loop
scas
mov
dec
call
loop
les
jno
lcall
add
sub
cltd
popa
or
mov
stc
mov
dec
jecxz
mov
adc
pushf
xor
pop
ficompl
arpl
xchg
sar
lock
pop
push
mov
pop
jg
mov
cld
imul
hlt
daa
movsl
pop
sub
insb
sahf
xor
shlb
sub
push
or
xchg
add
pop
mov
xor
out
jmp
sub
jo
dec
scas
inc
lds
cmp
sub
cmpsb
mov
pop
sub
mov
rcll
or
cmp
sbb
and
xchg
mov
shr
aaa
mov
jno
nop
sub
cmp
adc
mov
pop
xchg
sbb
out
cmp
push
shlb
adc
and
mov
and
or
jbe
push
subb
jo
xor
test
rorb
movsb
icebp
mov
rcrl
mov
lods
cmpsl
pusha
pop
pop
adc
inc
sbb
jge
pop
sub
pop
mov
je
aas
fidivrl
pop
int
mov
lods
mov
push
jb
inc
scas
in
imul
xor
or
xchg
das
iret
lods
iret
insl
xor
mov
add
cwtl
das
je
dec
push
clc
add
jmp
and
lcall
lret
mov
mov
cld
cmp
jo
sbb
mov
inc
std
cmc
push
mov
cld
stos
imul
dec
pop
dec
adc
inc
pop
into
rcll
sub
sub
in
cmp
repz
pushf
add
mov
fistps
cmp
or
bound
idivl
dec
jbe
lods
adc
outsb
stc
sbb
dec
mov
insl
cld
mov
arpl
add
jnp
mov
xlat
movsbl
pop
adc
add
add
lea
push
push
iret
repz
fldl
push
fstl
jge
pushl
sub
mov
xchg
mov
xor
push
mov
mov
clc
out
outsl
mov
mov
stos
ret
and
push
push
pop
cltd
and
lcall
jle
sbb
das
cs
mov
push
or
mov
das
cltd
sbb
mov
inc
call
mov
and
lret
xchg
pop
xchg
scas
aam
rorb
out
sub
push
dec
adcl
xchg
mov
push
and
frstor
or
jecxz
mov
xor
push
cmp
and
inc
add
xchg
ss
lods
jmp
and
outsl
stc
dec
inc
cmp
stos
popa
cmc
add
inc
dec
lahf
add
das
repz
inc
popf
idivl
enter
cmp
mov
adc
jne
fsubs
add
sbb
pop
enter
cwtl
lds
cs
fnsave
loopne
mov
mov
xor
inc
shl
jmp
std
dec
call
ret
xor
inc
scas
les
jle,pt
xlat
jl
jmp
xor
add
xchg
dec
imul
and
cmp
jne
lods
push
push
aas
push
cmp
add
adc
mov
mov
scas
aad
jecxz
les
loop
or
xlat
inc
int
dec
es
xor
lock
sub
test
cmc
cmc
jp
sub
nop
push
dec
popa
mov
push
jg
stos
cmpsl
mov
shl
add
imul
aaa
in
mov
orb
mov
outsb
sub
loop
mov
jne
cmp
jge
jg
jns
dec
lea
mov
out
cld
cmpsb
add
out
add
sbb
cld
and
insl
lret
jl
bound
mov
push
jb
cmpsb
sub
pop
xchg
loop
mov
jno
sbbl
negl
sbb
scas
outsl
push
mov
xchg
inc
shlb
enter
cmp
imul
mov
mov
xor
lcall
jg
inc
xor
xchg
push
jg
stos
push
ja
hlt
sub
xchg
jmp
add
fists
lea
sahf
jbe
xchg
loope
cld
imul
jnp
pop
rcr
dec
sbb
sahf
int3
cmp
fbld
fwait
out
mov
sub
cli
lret
jnp
sbb
inc
jg
repnz
je
int
pop
int3
push
and
jns
aam
je
dec
aaa
push
loopne
push
std
orl
jo
cmc
adc
mov
lret
mov
enter
sbb
pop
cmp
ret
mov
loop
xchg
sahf
mov
pop
in
pop
loopne
mov
fstp
and
inc
out
loopne
mov
mov
loopne
test
inc
adc
iret
xchg
push
push
bound
dec
xor
repz
rcll
jnp
icebp
jmp
xchg
imul
push
mov
popf
pop
mov
test
inc
test
xor
sub
xchg
js
lds
xor
mov
leave
lock
pop
xor
jnp
loope
test
repz
mov
aaa
scas
test
xchg
xchg
in
sub
fisubs
psrlq
jg
mov
lock
lock
sub
fistpll
cmc
mov
cs
push
sbb
idivb
cmpsb
and
sub
jbe
cmpsb
mov
outsb
idivl
testl
test
add
add
add
mov
repnz
push
and
mov
dec
pop
andl
mov
xchg
jle
int3
bound
inc
and
and
dec
lods
xchg
jl
rcll
jge
lret
test
sub
stos
bnd
cli
pop
es
insl
and
cmpsb
arpl
mov
sti
out
movsl
push
dec
call
and
mov
and
cltd
xor
push
sbb
outsb
mov
inc
mov
xor
and
mov
or
les
jecxz
cmp
iret
into
sahf
or
xor
es
mov
scas
pop
sub
mov
std
pop
mov
cld
fimull
push
insb
add
jo
mov
outsl
mov
cmp
lods
fildll
dec
loope
iret
into
repz
inc
xchg
or
movsb
cmpsl
adc
jmp
fs
in
xor
jbe
sub
pop
iret
mov
push
loopne
fucompp
lahf
cmp
cmp
test
add
mov
pop
ljmp
jl
fistps
jle
xchg
xorl
stos
xor
sub
and
inc
fstpt
xchg
std
cli
mov
test
mov
icebp
and
insb
inc
dec
movsl
popl
jnp
into
mov
je
aam
lcall
es
push
enter
sbb
mov
jge
cwtl
and
lahf
jb
mov
test
subl
lock
mov
js
mov
fs
sbb
cmp
jecxz
aaa
jecxz
mov
cmp
movsb
dec
xchg
or
movsb
xchg
rolb
adc
cmp
dec
gs
inc
test
pop
sti
sti
lods
xchg
loop
xchg
dec
shlb
repz
add
add
add
incb
loop
xor
pop
dec
kmovw
lcall
push
gs
xchg
jmp
or
or
sub
and
ficompl
mov
pop
sbb
push
lea
lea
inc
out
daa
mov
scas
mov
pop
stos
dec
sbb
jb
xlat
and
lods
inc
call
loopne
pop
cmp
std
repnz
mov
pop
mov
lret
mov
cmc
lods
sub
adc
sub
out
and
leave
adc
sub
sub
adc
arpl
cmp
jge
enter
jae
pop
ss
stos
jmp
add
and
repnz
aaa
dec
inc
std
add
jno
movsb
int3
push
xor
pop
xchg
aad
movsl
es
pop
lds
mov
pop
mov
cmp
push
cmp
adc
pushf
cmc
mov
mov
ror
test
lock
aad
daa
mov
dec
and
scas
arpl
add
orl
gs
xchg
xchg
in
gs
dec
add
cmp
mov
mov
jbe
outsl
pusha
data16
sub
movsb
sar
push
dec
pop
repnz
xchg
shll
mov
cmpb
outsl
cmpl
gs
out
mov
scas
xchg
lahf
pushl
cld
ljmp
push
andl
in
and
rcrb
das
mov
jb
mov
bnd
leave
scas
or
jb
pop
dec
mull
mov
int3
or
push
mov
dec
lcall
in
sbb
jge
sub
dec
mov
imul
fwait
cmp
xchg
dec
cs
cmp
in
jno
push
std
xor
cmc
cld
xchg
add
in
push
cld
cs
repnz
std
push
lret
in
mov
add
out
add
cmpsb
xorb
and
add
int
sbb
xor
ret
add
lds
andnps
loope
std
sub
jmp
mov
lock
xor
aam
mov
pop
xchg
out
xlat
iret
mulw
adc
adc
mov
shr
push
loop
dec
mov
pop
jl
add
stos
xchg
fsubrs
mov
lods
daa
inc
insb
negl
xchg
mov
popa
sub
outsb
xor
cli
frstor
xor
rorb
cmpl
test
xchg
jp
mov
cmp
jle
dec
xchg
pop
test
pop
pusha
cmp
add
xchg
test
dec
xchg
incb
jecxz
subl
iret
xchg
shll
jno
xchg
lret
mov
pop
mov
dec
repnz
fstpl
mov
mov
jo
mov
push
jle
loopne
pop
xor
lea
and
push
movsl
pop
cltd
xor
mov
cmp
inc
mov
cmp
mov
and
mov
repz
inc
aaa
lret
mov
mov
jl
pop
mov
insl
add
lcall
mov
and
inc
adc
ret
popa
cmp
into
fs
pop
loop
add
pop
sahf
negl
movsl
fnsave
inc
pusha
mov
mov
cmp
in
aam
or
pop
lods
adc
add
fwait
xchg
push
imul
call
lret
andl
push
inc
push
and
imul
adc
xchg
dec
push
loop
fdivr
cmp
ja
xor
cmpsl
rclb
sbb
inc
sub
and
les
mov
and
dec
leave
sbb
dec
jecxz
cwtl
scas
add
out
add
adc
arpl
dec
add
in
push
adc
mov
hlt
or
loop
pop
jo
mov
jmp
int3
pop
mov
cld
lds
enter
xchg
jp
mov
ror
dec
loop
ret
adc
jecxz
adc
sub
and
push
in
in
pop
push
movsl
cmp
movsl
mov
cld
in
sbb
decl
xchg
xchg
pop
addr16
push
mov
faddl
scas
add
fcmovne
add
sub
stc
dec
add
aad
fidivs
pop
push
pop
cmp
push
aas
jmp
lahf
cmc
js
sbb
mov
and
cli
test
jo
cmp
fdivr
hlt
outsl
cmpsl
pop
push
jno
gs
mov
dec
push
int3
mov
test
jg
lcall
std
movsl
into
arpl
add
stos
lods
int3
pushf
es
dec
rcrb
jbe
ret
dec
push
mov
outsl
ja
push
addb
out
or
mov
push
popf
adc
jl
ds
test
jns
mov
hlt
push
sti
push
push
popf
jmp
sbb
hlt
pushf
cld
xor
push
notl
inc
pop
les
cmp
loopne
lock
xor
sarl
push
jmp
cmp
cmp
sbb
loopne
sti
int
fwait
test
pop
adc
dec
cmp
jo
movsb
push
orl
fdivp
mov
data16
mov
out
jg
inc
aas
hlt
push
jge
xor
fldt
add
arpl
mov
sub
sub
jns
aaa
mov
fcompl
pop
mov
test
jecxz
dec
daa
or
jmp
imul
hlt
outsb
cmpsb
fnstcw
add
out
add
adc
adc
adc
in
cmp
jns
mov
fst
mov
mov
mov
mov
fdivl
insb
cmc
mov
and
jno
out
adc
mov
cwtl
pop
mov
jle
add
test
cld
sbb
mov
mov
xor
pop
fcmovbe
in
mov
lret
pop
pop
or
iret
imul
pop
and
cmpsl
xlat
and
or
sbb
mov
push
or
dec
outsb
jae
lods
pop
cld
cmp
pop
lcall
push
cmpb
hlt
or
lea
xchg
mov
into
popf
ret
xor
popf
inc
mov
xchg
sub
aaa
sahf
daa
push
test
push
inc
mov
pop
mov
popa
call
pop
shrl
ljmp
enter
cmp
popf
inc
cmp
xchg
or
adc
adc
add
cmpl
out
push
lea
inc
push
lods
mov
or
loop
popf
inc
or
pop
sub
xor
add
pop
sahf
ds
or
lods
sub
int
mov
xor
movsl
jle
popf
mov
nop
push
pop
inc
and
call
dec
aad
jne
lods
ret
test
stos
vandpd
stos
push
addr16
mov
pop
sarl
fdivs
push
xchg
jb
mov
test
pushf
test
fstl
aad
lods
push
sbb
fdivs
push
and
push
lods
mov
int3
aad
cmp
inc
mov
std
adc
scas
push
shrd
fmull
inc
dec
jmp
add
cmpsb
pushf
addr16
cmp
push
dec
and
lret
sbb
push
lock
popf
rorb
mov
and
gs
daa
or
push
jo
mov
add
out
add
sbb
jbe
push
std
jmp
cmpsb
test
pop
xlat
and
push
sub
jl
push
sub
cmp
and
call
mov
add
pop
lea
sub
xor
jg
ror
mov
push
mov
mov
insl
lcall
ret
push
outsb
lcall
mov
pushl
std
loope
sbb
andl
sbb
fcmove
sub
lret
push
jno
mov
sub
lds
pop
fidivrs
imul
push
mov
pop
cmp
pop
fcomip
lods
lret
jo
loopne
pusha
mov
xchg
idivb
mov
pop
dec
and
testl
lock
fwait
std
pop
cmp
sub
mov
and
adc
sti
mov
andb
mov
repnz
fwait
aad
push
ret
push
dec
shr
andb
imul
add
insb
xor
add
mov
add
jmp
ja
inc
push
scas
popf
xor
js
dec
ficomps
outsb
xchg
test
push
jmp
fadds
mov
stc
aas
mov
insb
xchg
pop
pop
push
ja
aam
sub
pop
out
out
pushf
cwtl
mov
xchg
adc
in
sbb
lcall
insl
in
cmp
xchg
fisubrs
movsl
sahf
dec
inc
sub
jae
adc
cs
movsl
pop
fadd
mov
stos
push
subl
jl
int3
push
les
jle
lahf
or
sub
cmpl
cmpsl
xorl
xchg
pop
stos
and
or
andb
andl
sbbb
mov
dec
mov
add
add
add
pushf
cmp
push
in
sbb
imul
or
loop
lds
sbb
fnstcw
data16
mov
shrb
popa
sub
lds
jmp
loop
bound
mov
in
rcrb
dec
and
adc
popf
fcomps
dec
in
xchg
jns
sti
jb
in
in
or
in
mov
xlat
or
xchg
push
in
cmc
clc
jae
push
push
repnz
dec
aad
arpl
xchg
jmp
mov
push
cli
inc
jb
push
test
pop
test
jg
mov
pop
and
dec
enter
out
and
mov
pusha
and
adc
iret
mov
bound
adc
cmp
and
dec
push
in
or
mov
bound
mov
cld
movsl
cltd
pop
das
xor
mov
mov
xchg
jo
mov
push
jns
outsb
mov
mov
sti
mov
imul
inc
xor
push
mov
nop
out
arpl
in
dec
xor
jae
dec
xlat
pop
out
lds
xor
loope
add
ljmp
es
in
jg
mov
gs
cmp
aaa
cmp
sub
daa
loop
xchg
mov
pop
movsl
pop
cmpsl
and
sub
or
and
pop
xor
lcall
sub
sahf
rcll
cmp
or
mov
fs
aas
sub
popa
adc
mov
je
into
sbb
aam
mov
cmc
push
movsl
inc
nop
adc
adc
jbe,pt
test
les
push
push
sub
enter
add
repz
jmp
adc
cld
xor
add
out
add
push
dec
push
stc
pusha
stos
jecxz
cmp
fnsave
lret
add
clc
cmp
adc
jmp
cmp
out
addr16
cltd
ret
rcll
and
mov
cmp
dec
cmp
sub
in
inc
push
mov
popf
icebp
out
mov
push
adc
jb
cmp
cmc
cmc
loopne
push
pusha
add
js
rcl
inc
mov
mov
dec
lcall
inc
sub
cmp
addr16
mov
push
jb
div
icebp
dec
mov
sahf
cmpsb
and
dec
jg
or
fisubrs
sbb
movsb
inc
rol
mov
daa
dec
cmp
xor
xchg
lods
fwait
xchg
lea
fisubl
push
pop
insb
stc
mov
or
movsl
rcrb
add
jnp
jecxz
ja
icebp
xchg
test
xacquire
jbe
clc
dec
mov
jle
inc
hlt
lds
jbe
cmp
xchg
iret
nop
mov
test
inc
test
hlt
nop
jb
dec
aas
jbe
jno
pop
push
sub
xchg
mov
hlt
lds
cmp
addr16
xor
sub
pop
lds
std
sbb
jle
movsl
jae
mov
mov
mov
adc
adcl
sahf
jmp
add
mov
call
xchg
inc
pop
jne
mov
jmp
mov
cmp
add
mov
fwait
dec
xlat
cli
adc
mov
push
pop
shld
testb
shll
add
fs
xor
pop
pshufw
mov
jge
add
insb
xchg
outsb
mov
jo
xchg
insl
pop
das
outsb
clc
pop
aad
xchg
or
lcall
and
mov
add
mov
and
inc
lahf
jg
fwait
imul
orl
mov
jmp
aam
outsl
shrl
imul
shl
ss
out
cli
and
subps
mov
lods
inc
mov
nop
pop
je
inc
add
jno
or
sar
incl
iret
out
cmpsb
push
dec
shrb
sahf
xor
and
out
cmc
add
sbb
or
inc
cld
pop
loop
insl
pusha
insb
mov
icebp
sbb
iret
mov
nop
cli
lret
xchg
outsb
pop
xor
mov
cmp
push
int
imul
or
ret
das
sub
mov
pusha
mov
or
cmc
push
lret
mov
cmc
int3
sub
popa
mov
xlat
movsl
xor
sbb
mov
popa
fs
loope
xor
dec
out
jle
idivb
push
mov
call
inc
or
push
in
lcall
push
into
test
fwait
push
js
add
mov
cmpsb
and
dec
loope
pop
xchg
push
ficompl
fucomp
scas
xchg
lret
repz
and
adc
fisubs
js
imul
sbb
fucomip
in
stos
stos
inc
xchg
js
add
mov
sbb
sub
in
data16
es
dec
xchg
lods
sbb
pop
fs
jmp
jnp
leave
cwtl
xor
scas
inc
dec
aas
push
inc
and
push
adc
mov
pop
scas
add
push
test
sub
gs
dec
aaa
mov
dec
pop
ds
leave
fwait
bnd
jno
or
cs
mov
mov
scas
call
call
xchg
filds
out
add
rcrb
jne
mov
and
cwtl
insl
inc
pop
mov
repnz
mov
pop
or
mov
adc
and
or
jbe
nop
jmp
add
add
int
inc
sbb
in
mov
mov
ds
jl
bound
push
inc
xor
movsl
in
imul
mov
cmpsb
shll
fs
inc
inc
ret
shlb
hlt
es
jns
pusha
imul
jno
out
scas
jae
pop
xor
adc
int3
pop
hlt
in
adc
dec
jle
addr16
and
cwtl
xlat
xor
mov
adc
out
adc
sahf
je
mov
mov
jg
jo
stc
jbe
aad
jae
pop
test
adcb
enter
push
pop
inc
cmp
adc
fcmovnb
sbb
sti
and
or
out
cltd
pusha
stos
dec
push
and
loop
and
dec
add
repz
test
les
in
jmp
xchg
add
cmpsb
jmp
fimuls
rcr
and
fwait
xchg
lret
xchg
cwtl
jecxz
outsl
xchg
jecxz
icebp
cmp
mov
push
je
sysret
push
mov
lods
pop
out
mov
test
inc
pusha
enter
les
nop
lahf
lret
jb
xor
cmp
sbb
adcl
jno
test
in
push
dec
or
rorb
dec
jae
cmp
mov
sbb
sar
mov
mov
ret
imul
sub
sbb
je
sbb
mov
pop
out
es
push
pushf
dec
xchg
test
mov
inc
dec
xchg
jp
dec
test
in
std
xchg
lret
or
sub
out
add
cmpsb
xchg
fidivs
cmc
sbb
dec
cmp
sub
xor
sub
ljmp
mov
and
inc
lahf
dec
mov
jle
push
fadds
pcmpeqw
je
push
mov
inc
adc
mov
push
dec
fldl
mov
push
rcr
or
xor
dec
sbb
bswap
cwtl
stos
dec
adc
push
inc
jae
jb
push
push
shl
sti
mov
xor
add
enter
rclb
call
mov
xor
and
scas
cmp
mov
pop
negl
pop
fldcw
cmp
fwait
xchg
add
or
push
idivl
push
scas
rcrl
lret
lea
shrb
gs
mov
add
xor
dec
add
or
subb
jge
xorb
mov
addr16
and
inc
xchg
push
inc
xchg
or
mov
dec
std
in
sub
cmp
popf
push
jmp
arpl
cmp
dec
test
jl
xchg
subb
adc
add
ror
mov
add
dec
or
cli
in
pop
jnp
shlb
out
cwtl
imul
sbb
jne
xor
xchg
movsl
clc
rclb
js
sbb
stc
cmp
popa
mov
lcall
inc
arpl
xchg
test
xchg
push
je
shl
clc
cmp
sub
fsubs
or
mov
jns
out
insb
jae
dec
popf
fists
and
xor
ret
pop
pop
test
mov
lods
and
xor
pop
inc
inc
lea
xchg
ficoml
add
mov
cmpsb
mov
int3
push
js
sarb
add
mov
fcmovnbe
mov
loopne
inc
push
dec
jmp
lret
jmp
mov
loop
loopne
cs
je
push
imul
imul
je
dec
add
mov
adc
test
push
adc
les
push
xchg
insl
dec
in
sub
pop
cmp
xor
and
or
mov
jmp
and
mov
inc
inc
ja
push
fisttpll
je
nop
mov
sub
or
adc
lcall
xchg
mov
fs
and
lret
je
xor
lret
add
inc
inc
sub
pop
bound
fdiv
testl
dec
mov
push
push
xchg
xchg
pop
or
sarl
hlt
add
lahf
fnstcw
mov
les
mov
shrl
pop
dec
jno
testl
dec
sarb
shlb
pop
in
fnstcw
lods
ret
movsl
and
mov
dec
lods
xor
arpl
cmp
jb
push
mov
mov
lods
jle
pop
movsb
lods
aad
adc
mov
pop
xchg
loopne
test
les
sub
xchg
cmp
jmp
push
outsb
icebp
add
imul
pop
in
mulb
sub
jg
cmpsb
cli
fisttpl
mov
in
jg
in
in
imul
fcompl
aad
cmpl
out
pop
movsb
sbb
sub
jns
cmp
mov
jno
int3
pop
mov
les
jbe
inc
or
xor
pop
out
mov
pop
pop
std
add
sub
push
movl
lret
pusha
adc
xor
addb
insb
cli
add
fdivrs
out
jbe
mov
arpl
mov
add
out
add
into
clc
aam
xchg
pminsw
dec
adc
sub
ret
fistpl
jmp
cmc
jno
inc
jno
mov
js
jle
pusha
repnz
inc
inc
in
xlat
jb
stos
push
addl
shrb
push
cltd
mov
xchg
lahf
popf
xchg
cmp
and
into
add
aaa
data16
nop
or
sbb
mov
test
aas
adc
jae
pop
xor
outsb
adc
push
lods
or
add
xor
sbb
pop
int
aas
jne
fsubs
ss
ds
cmpsl
inc
mov
push
mov
mov
fstpt
jno
mov
cmp
stos
scas
push
lahf
mov
xchg
xchg
xor
stc
negb
and
add
icebp
mov
mov
adc
data16
add
cmpsl
pushf
sbb
test
adc
jmp
pop
jae
sub
ljmp
dec
mov
in
cltd
cmp
jg
in
push
std
xorl
mov
mov
aam
sti
ret
je
xor
pop
sub
mov
sbb
nop
dec
shrb
xchg
mov
inc
scas
adc
sub
subb
cwtl
cld
push
xchg
sti
pop
ret
fs
test
xor
pop
imul
mov
lock
pop
adc
dec
jecxz
mov
xor
ss
mov
cs
rcrb
mov
inc
clc
ljmp
or
and
or
cmpsb
xor
fistpl
jle
mov
test
test
jecxz
out
pop
insb
sbb
mov
jl
enter
mov
add
out
out
out
lods
sbb
mov
pop
and
cli
mov
jg
inc
sbb
fldl
fldl
mov
ss
adc
sahf
roll
out
add
jne
mov
mov
mov
xchg
sub
adc
loop
xchg
xchg
jl
sbb
fwait
mov
roll
aad
add
and
icebp
adc
je
push
fildl
call
cmpl
aad
jp,pt
mov
push
cmp
std
scas
in
sbb
adc
aas
out
mov
lahf
fimuls
sub
and
sbb
lods
call
outsb
aad
ret
idivl
mov
add
sbb
pop
mov
mov
lds
cmp
mov
xchg
out
pop
and
cmpsl
push
outsl
sub
jmp
js
or
stos
movsb
repz
das
das
xchg
orb
jle
pop
xor
jno
testl
mov
sub
or
into
imul
and
jge
pusha
sti
out
inc
add
push
ss
je
pop
ror
xchg
rolb
pusha
mov
fwait
jo
lods
pop
test
sub
pop
fcmovb
scas
sub
xchg
sub
sti
sub
ja
mov
add
push
fst
outsb
icebp
pop
xchg
mov
in
bound
arpl
xchg
gs
je
xchg
mov
adcb
ret
or
jg
lcall
push
inc
enter
in
cs
pop
pushl
xor
add
xor
dec
or
mov
push
dec
nop
push
aad
and
rcl
ljmp
xor
loop
iret
icebp
push
pop
das
pop
xor
mov
mov
sub
add
cmpsb
pop
inc
lods
xchg
cmp
push
es
dec
into
aaa
xor
add
inc
dec
mov
xchg
adc
rcrb
ret
add
out
add
xor
and
outsb
imul
test
sbb
stc
ret
je
insl
js
in
imul
pop
rol
mov
fwait
ss
or
int3
sbb
movl
ss
or
mov
jmp
cli
sub
orl
push
fidivrl
push
and
cmp
mov
mov
push
pusha
xchg
cmp
mov
call
mov
fisubs
dec
aad
jns
add
dec
xor
aam
fsubrs
adcb
orl
add
adc
orb
aad
les
repnz
in
cmc
mov
lahf
xchg
xchg
pop
or
int3
std
lret
mov
pop
in
mov
lcall
adc
sti
add
movsb
mov
and
fnstsw
outsb
icebp
test
cmp
lret
inc
or
adc
stc
cli
push
mov
in
sbb
adc
mov
in
mov
movsb
cld
inc
lock
add
or
daa
out
xlat
xor
cmp
outsb
add
aam
mov
lret
frstor
arpl
int3
and
or
shrb
sub
mov
nop
dec
pop
jg
adc
xchg
sahf
addb
adc
mov
aas
repnz
pop
ja
and
inc
mov
into
aaa
mov
jg
push
daa
xchg
out
or
movsl
out
lods
test
xchg
or
jl
mov
adc
mov
lretw
xlat
mov
data16
mov
test
cwtl
pop
test
ja
inc
out
jae
pop
sbb
repnz
add
and
daa
mov
leave
hlt
add
add
xlat
and
aaa
std
out
test
inc
insl
push
and
lds
add
add
add
or
fcoms
shll
outsl
push
add
adcb
inc
insl
pop
push
mov
loopne
xor
lret
jnp
iret
dec
int3
add
inc
mov
mov
jnp
test
nop
sbb
or
testb
rcrb
sub
lahf
sub
xor
js
addb
mov
cli
jg
jl
or
js
cmp
lret
cmp
add
sbb
inc
dec
test
mov
dec
cmpsl
and
xchg
jno
or
mov
jbe
fst
inc
sarl
cltd
cmp
xchg
xor
fwait
daa
jp
or
adc
jae
mov
sti
fidivl
mov
jb
inc
mov
push
mov
das
imul
addl
or
xlat
aaa
dec
cmp
jo
data16
aas
inc
pusha
add
mov
stos
orb
mov
cmpl
jnp
enter
xchg
fnsave
pop
aaa
xor
pop
js
gs
push
rorl
loop
movsb
xor
jb
imul
xchg
or
js
xchg
and
cmp
sbb
dec
lods
push
in
outsl
loopne
and
xchg
mov
in
shrb
insl
sbb
sbb
cmp
dec
sti
ljmp
pushf
in
adc
add
in
insl
cmc
and
negl
mov
dec
stos
bound
push
dec
and
fsubp
gs
loope
mov
orl
jnp
jmp
lcall
lods
lods
fsubrp
mov
fndisi(8087
ljmp
inc
dec
nop
int3
popf
fistps
aad
pop
jns
xor
add
add
add
cmpsl
fstpt
test
and
enter
or
lahf
inc
fs
xchg
ss
lds
adc
cmp
push
adc
out
dec
andl
out
jne
cmp
cmp
ret
mov
dec
dec
pop
lcall
loop
dec
negl
xor
xchg
lods
pop
xor
mov
fmull
arpl
xor
loop
xor
inc
mov
mov
cmc
pop
icebp
dec
mov
pop
into
mov
push
lock
or
jb
xchg
mov
je
into
or
pop
jnp
into
into
lock
scas
jbe
leave
pop
push
or
loopne
idiv
stos
insb
and
sti
cmp
jb
clc
ret
es
jge
decb
fidivrs
sub
test
lea
test
loope
es
in
bound
dec
xchg
dec
mov
out
in
pop
mov
jbe
into
xor
add
jne
vmptrst
mov
mov
xorb
ljmp
xchg
xor
clc
rcll
mov
test
mov
ja
adc
insl
popa
shl
fisttps
xchg
jae
inc
xor
int
sub
ja
mov
aad
cmc
out
sbb
dec
pop
xchg
add
push
test
cmp
rcrl
cwtl
aaa
pop
test
ljmp
sub
das
lods
pop
adcb
testl
pop
jge
ja
pop
jle
cwtl
mov
jae
mov
mov
repnz
jne
jmp
insl
imul
mov
scas
ret
cmp
xchg
loop
loop
sbb
cmp
data16
mov
insb
insl
arpl
mov
out
add
lret
loope
pop
xor
mov
lahf
or
mov
jp
mov
push
cmp
in
in
rcrb
daa
or
sub
sub
loope
mov
and
jmp
pop
jp
jne
pop
pop
mov
mov
mov
fcomps
add
xchg
scas
je
arpl
hlt
cmp
bound
pop
inc
cmp
insl
daa
in
int
ret
decb
popa
push
mov
pop
es
add
or
dec
insl
fists
jnp
fdivrp
mov
and
hlt
push
pop
in
adc
lods
push
rorb
ss
and
lcall
inc
sbb
icebp
sti
sahf
rclb
adc
test
cmp
jmp
mov
push
sbb
js
add
mov
jp
and
and
loope
leave
pop
mov
cmp
jno
add
inc
notl
aad
pop
fadds
in
flds
lahf
fistps
sub
inc
sub
sbbl
push
daa
or
jo
or
scas
sbb
adc
mov
je
int3
int
bswap
cli
lods
mov
stos
pop
add
add
jmp
aam
lock
cmc
push
sbb
mov
dec
mov
xchg
cs
inc
aas
sub
out
pop
and
push
push
or
jp
icebp
sub
mov
sub
sub
or
xor
adc
rcr
jp
dec
jnp
mov
add
sti
sbb
movsb
dec
inc
add
add
sarb
mov
adcl
fisttps
xrelease
cmp
mov
push
les
js
mov
das
call
inc
fdivrp
out
ja
xor
fdivrp
dec
pop
and
add
out
add
mov
push
scas
imul
push
pop
push
lcall
decl
jb
mov
scas
jg
cmpsb
ret
cmpsb
pop
inc
jae
pop
push
pop
fldcw
shll
in
popf
imul
enter
cltd
frstor
repnz
cmpsl
andl
fcmovu
inc
pushf
cld
push
adc
nop
fidivl
repnz
jno
xchg
jnp
inc
mov
mov
lods
dec
mov
jl
enter
daa
sbb
mov
mov
loop
push
lahf
xlat
out
inc
movsb
pop
push
scas
lods
js
cmpsl
push
cmc
jl
aam
outsb
in
dec
jmp
xchg
cmpsl
iret
and
lods
jl
sub
inc
xchg
in
xchg
cmpsb
inc
cltd
rolb
inc
iret
fsubrl
push
pop
pop
add
cs
scas
cltd
pop
push
ret
jmp
xchg
dec
xchg
mov
lcall
pushf
cwtl
pop
mov
adc
sub
push
add
add
jns
popf
mov
je
lods
push
mov
js
lsl
add
add
pop
and
lods
and
sbb
lods
add
pop
jne
sbb
lea
int
mov
cltd
adc
call
in
mov
inc
mov
add
adc
lods
dec
mov
jno
push
xchg
xor
jmp
cmpsb
enter
fsubrl
enter
push
inc
mov
imul
addb
ss
stc
pop
lret
data16
mov
or
jno
push
mov
push
fisubs
cmp
inc
sub
push
xor
cmp
sti
aam
jmp
jns
mov
or
xor
xor
subl
aaa
mov
std
adc
xor
xchg
lret
rorl
aad
pop
int3
and
outsb
loope
mov
cltd
mov
sbb
je
dec
or
add
out
add
andb
stc
lds
mov
add
adc
inc
test
mov
inc
je
and
inc
mov
pop
push
mov
xchg
jns
rorb
pop
mov
wrmsr
mov
dec
repnz
in
outsl
jnp
xor
and
sbbl
xchg
push
fldt
aam
cltd
test
jbe
add
adc
leave
cmc
jmp
fcoms
pop
in
dec
mov
pop
inc
pop
xor
cmp
dec
push
jne
add
clc
cwtl
xchg
es
stos
in
xchg
mov
enter
cld
inc
sti
sub
jmp
inc
push
pusha
imul
sbb
cmc
out
mov
movsl
mov
and
sub
insb
or
aam
lea
sbb
iret
loope
test
pop
out
or
sbb
jns
and
insb
nop
sbbl
neg
ja
pop
xchg
jp
inc
daa
js
mov
insl
aam
mov
sub
dec
pop
rolb
push
lcall
rolb
ret
loop
push
push
in
push
fneni(8087
push
mov
in
lods
xchg
pop
jecxz
cwtl
add
pop
adc
mov
xchg
stos
cmp
outsb
dec
inc
push
xchg
push
mov
in
testb
insb
iret
stc
cmp
or
and
dec
mov
stos
adc
iret
rorl
mov
lds
xor
loope
mov
cmpsb
int3
cmp
adc
add
or
repz
push
push
in
cmpsl
sub
mov
andb
mov
push
fmul
mov
inc
push
in
fiaddl
push
dec
add
push
dec
sbb
enter
lods
sub
sub
cmp
aam
mov
xor
cmp
mov
add
out
add
jmp
mov
pop
jge
xchg
das
aam
cmp
aas
add
inc
mov
push
dec
xorl
fadds
sbb
loopne
adc
adc
bound
mov
out
jmp
cmc
jae
andl
mov
cmp
lahf
jae
mov
pop
sub
dec
jp
push
fmull
sbb
pop
loope,pt
test
aad
jle
stc
cwtl
or
jmp
mov
hlt
mov
inc
mov
dec
dec
fiadds
mov
jo
or
outsb
mov
xchg
lret
xchg
icebp
out
fs
stos
das
or
xor
maxps
jmp
ss
outsb
xchg
xlat
jmp
mov
mov
cmpsb
push
adc
jo
gs
dec
into
mov
or
cmp
into
jl
jge
mov
cmpsb
push
js
xchg
ret
push
jne
std
lret
dec
mov
sahf
or
mov
rclb
negl
cmpsb
shll
xor
xchg
jg
adc
loopne
sahf
inc
mov
pop
jmp
bound
scas
push
sti
ret
loopne
sub
lods
jp
int3
fidivrs
adc
leave
push
pop
mov
add
js
test
mov
mov
inc
push
je
push
pop
push
insl
add
adc
sarl
push
out
mov
js
pop
aas
lret
mov
push
out
out
inc
movsb
xor
sbb
cmp
je
mov
arpl
icebp
mov
subl
dec
es
divb
xchg
ja
lods
je
loop
mov
jb
in
sub
or
jno
jp
js
xchg
stos
and
add
dec
push
ret
mov
jge
shrb
test
rolb
add
add
add
repnz
stc
or
xchg
inc
add
dec
or
mov
outsb
hlt
sub
mov
xor
or
outsb
pusha
dec
popf
adc
dec
jno
jbe
fstps
dec
scas
mov
jecxz
mov
or
pop
sti
mov
inc
ret
jge
adc
loop
gs
cmp
push
aas
lea
test
fld1
subb
jge
sub
adc
out
leave
push
mov
xchg
xor
jno
jo
mov
push
sbb
popf
pop
inc
mov
out
ror
xchg
add
cmp
jnp
pop
shll
in
push
xchg
cmovbe
sub
sub
sub
or
iret
lock
mov
aaa
and
popl
add
add
xor
das
loope
push
arpl
icebp
sbb
push
sub
add
sub
jnp
add
jb
mov
addr16
pop
mov
fnstcw
mov
pop
out
fnstsw
jae
push
aam
mov
in
stc
call
fisttpl
loope
filds
cs
add
or
scas
and
mov
insb
sub
and
stc
adcb
pusha
dec
xchg
outsl
fs
inc
pop
jbe
lea
push
addb
jmp
outsb
sahf
mov
dec
movsl
in
xor
repnz
insl
loop
sarb
es
stc
dec
pop
xor
bound
push
xchg
mov
push
push
xchg
sarb
rcll
pusha
cs
mov
mov
inc
jmpw
dec
jecxz,pt
sub
aad
out
cmpsb
sbb
test
ja
hlt
cmpl
dec
sub
in
jmp
lahf
jle
dec
sub
leave
fwait
cmp
mov
add
add
std
mov
inc
mov
pop
xchg
jge
insb
dec
mov
push
mov
cmp
fmuls
add
call
or
andb
jb
inc
push
gs
push
dec
adc
adc
mov
in
push
addl
lcall
aas
jnp
sarb
push
adc
xchg
and
jne
sti
repnz
lret
out
mov
int3
and
jmp
es
jle
dec
add
inc
adc
jb
and
xor
push
sub
mov
popf
sub
ja
fs
orl
mov
xor
sub
cmp
and
mov
push
data16
call
xchg
fisttpl
clc
in
sti
pop
fmuls
fnstsw
mov
aaa
bound
scas
enter
xor
mov
sub
dec
add
not
ds
into
add
out
mov
jecxz
sahf
dec
mov
vpsubusw
fwait
bnd
jl
cmp
sub
mov
repz
xchg
sbb
cld
insb
or
test
mov
adc
push
sbb
cmp
imul
mov
mov
jmp
jae
xchg
sub
daa
add
fwait
xor
push
movl
lds
xor
cmp
pop
adc
push
pop
mov
sahf
out
xchg
lahf
pusha
mov
aad
adc
xor
inc
push
rorb
dec
nop
mov
in
mov
mov
pop
out
push
in
xchg
add
mov
incl
test
repnz
aam
add
add
add
fsubs
jb
jecxz
ret
or
xchg
jno
cmc
jne
call
dec
sbb
sti
enter
outsl
and
sbb
or
xchg
xchg
test
loope
cltd
insb
enter
add
repnz
fld
jne
cli
test
cmc
inc
testb
outsl
fdivl
int
ljmp
test
dec
xchg
mov
leave
push
loopne
sti
mov
cmpsl
das
daa
push
inc
in
dec
add
inc
shll
adcl
movsb
jecxz
mov
xchg
int3
sub
sarb
mov
or
insb
mov
pusha
insb
test
push
or
aas
xchg
mov
xor
popf
lock
adc
add
data16
shll
mul
in
jl
test
loop
add
dec
mov
imul
rcr
mov
jae
mov
sti
ljmp
fists
pop
movsl
divl
push
or
mov
aad
icebp
lds
xor
push
jp
add
gs
inc
add
repz
jmp
out
aam
pop
popa
rcll
mov
ret
dec
push
cld
stos
andb
pop
imul
stos
dec
in
jecxz
add
xchg
popf
les
push
and
aas
lds
adc
jbe
fcompl
mov
adc
add
or
add
in
ja
stc
repnz
paddsw
je
adc
sub
mov
pop
mov
cmp
movsb
outsl
xchg
outsb
mov
mov
mov
or
and
ret
stc
mov
add
mov
lret
xorb
icebp
lret
cld
adc
jo
cmp
mov
add
out
add
ja
push
gs
mov
pop
xchg
mov
cmpsb
and
mov
testl
sub
shrb
dec
call
and
mov
mov
mov
sub
or
mov
dec
pop
pusha
lock
iret
sbb
lea
daa
iret
mov
movsl
out
mov
mov
flds
popa
and
loope
pop
orl
aas
mov
mov
fldcw
decb
push
mov
pop
jno
shlb
xor
push
cmpb
subl
push
push
das
cmpsl
out
jp
dec
out
jbe
jne
insb
fistps
dec
and
add
mov
insb
es
fldl
gs
mov
je
test
or
cld
xor
lahf
in
dec
fidivl
int3
imul
add
mov
pop
insl
inc
scas
xchg
push
mov
cmp
adc
lahf
fdiv
sbb
xchg
xor
xchg
sti
bnd
pusha
lret
mov
mul
stos
arpl
subb
or
stos
in
lret
or
jo
inc
popf
push
push
mov
pushf
xchg
mov
fs
mov
cmp
jle
mov
jns
xor
jmp
mov
test
es
add
lcall
sub
lock
push
cmpl
repz
loopne
icebp
xchg
sbb
push
aam
adc
pop
stc
imul
or
and
dec
push
cmc
icebp
sub
test
scas
inc
lahf
popf
sti
adc
cmp
lret
pop
pop
fidivs
jns
push
lret
sbb
lahf
jp
jp
in
xor
xor
insb
push
adc
add
add
add
cmp
cltd
mov
or
out
push
add
cwtl
and
repz
test
or
dec
jl
pusha
cmpb
cmp
cvtdq2ps
mov
mov
jge
jl
inc
mov
insb
popf
mov
gs
cmpsb
sbb
roll
rolb
jne
add
pop
fstps
mov
push
adc
hlt
ret
ficoms
hlt
and
outsl
adc
jp
insw
pop
es
pushf
iret
fsubrp
cmp
scas
adc
and
adc
mov
push
xorb
or
push
sbb
jns,pt
lock
and
js
pop
lret
ficomps
pop
xchg
out
cmp
sti
cmpb
aad
ret
fmull
xchg
pop
xlat
dec
stos
xchg
testb
mov
jecxz
cmpsl
inc
iret
nop
arpl
fnstenv
jp
rcr
out
sub
dec
cmp
daa
pusha
loope
sub
dec
mov
cli
fldenv
pop
repz
jp
mov
jns
jo
xor
or
cld
arpl
mov
movsl
push
shll
lcall
rclb
and
and
mov
cmp
mov
push
lock
jmp
or
xchg
stos
movsl
mov
cld
sub
out
movsl
fimuls
cmp
pop
mov
lods
xchg
mov
fwait
jne
test
aaa
sub
push
ljmp
es
xchg
jp
repnz
mov
fstp
lea
lea
push
out
sub
loope
cmp
das
cld
jne
cmp
xor
call
test
jl
int
pop
ljmp
push
adcl
imul
lahf
loope
adc
sub
dec
pop
fiaddl
add
add
add
sub
icebp
sub
movsl
jp
mov
mov
and
mov
dec
dec
add
cmc
cmp
sub
mov
mov
pop
mov
testl
outsl
push
dec
scas
rcl
fcmovbe
out
xchg
cmp
pop
rorb
inc
add
cmp
pop
popf
xor
sahf
mov
lahf
lods
cs
test
cmp
jno
inc
push
push
mov
pushf
push
cmpl
into
rol
jno
xlat
shr
mov
int3
ret
mov
pop
push
mov
sbb
pop
call
aad
sbb
ds
cmp
insl
pop
xchg
adc
fldcw
xchg
jle
push
mov
popf
nop
mov
pop
dec
push
data16
xchg
arpl
ficoms
pop
aaa
das
cmc
jnp
xchg
in
xchg
lahf
dec
jns
add
sbb
cmp
in
push
push
hlt
inc
mov
ret
and
jnp
es
or
mov
sub
jmp
dec
out
inc
sbb
xchg
xor
aad
out
lret
pop
lea
repnz
fimuls
lea
mov
pop
gs
add
jno
pop
mov
test
sub
sbb
mov
lea
dec
pusha
fsubr
cli
pop
outsl
xchg
aad
ret
inc
ror
cs
loope
mov
mov
pop
cld
push
mov
daa
pop
xchg
jmp
je
pushf
inc
jle
sti
lock
aam
dec
int3
jae
mov
fstpt
dec
add
mov
add
outsb
addb
mov
mov
adc
lcall
lret
adc
jns
fcmovne
in
outsb
notb
pop
jo
das
fsts
mov
pop
xor
adc
xlat
push
add
out
mov
idivl
push
jecxz
inc
faddl
add
add
add
xor
outsb
and
add
jecxz
xor
fsubrl
cmp
stos
bound
xor
fildll
adc
jae
fimull
mov
sub
push
jle
rep
stc
out
adc
mov
jge
adc
ds
pop
cmpsb
push
movsl
mov
stos
xor
ss
in
ds
ss
sti
mov
sbb
pusha
lret
test
adc
in
lret
mov
jbe
lret
out
aam
jns
or
out
pop
test
dec
sub
xor
rcl
or
push
loope
fcomps
lock
mov
in
fmul
repz
or
inc
xlat
adc
mov
test
mov
mov
in
mov
bound
aad
js
cwtl
mov
out
bound
jecxz
out
js
push
mov
mov
sub
pop
xchg
rorb
sbb
icebp
sub
scas
fldcw
jne
lahf
add
cmp
mov
push
xor
ljmp
mov
js
xor
in
in
ret
jae
pop
bound
cmpsl
or
cwtl
popf
push
in
int
sub
xor
and
out
clc
mov
pushf
pushf
push
je
adc
in
inc
dec
and
aaa
adc
inc
ret
in
notb
cwtl
inc
xor
xchg
fs
mov
mulb
adc
xchg
push
mov
xor
rclb
xchg
pop
push
pop
push
out
enter
scas
mov
loope
xchg
and
xchg
xchg
gs
add
and
mov
lds
out
jg
or
out
sbb
mov
sbb
push
pop
cmp
push
adc
xchg
push
xchg
push
sbb
stos
cmpsl
mov
add
mov
adc
pop
mov
add
add
add
stos
add
mov
icebp
in
xor
popa
push
dec
or
add
popf
mov
pop
loop
cli
addb
pop
ja
insl
loope
jne
or
xor
mov
and
mov
jge
xchg
xchg
jae
daa
lods
imull
push
in
push
or
pop
push
xor
shrb
sbbl
sti
push
xchg
jecxz
test
sub
mov
pop
mov
xchg
inc
cmp
cmp
mov
ret
fbstp
push
gs
lds
rcrl
or
jmp
stos
cmp
inc
dec
popf
jle
jecxz
jo
in
jae
stc
push
mov
mov
loope
pop
lods
cwtl
lcall
mov
aaa
add
sbb
movsl
in
les
test
rorl
outsl
pop
xchg
cli
popa
aaa
adc
shlb
sahf
loopne
aaa
mov
xchg
cli
xor
andl
mov
pop
int
lds
jp
lret
xchg
leave
fs
add
xlat
adc
jp
js
pusha
push
push
imul
jmp
xchg
ljmp
popa
fnsave
dec
push
and
jne
es
lds
jae
fsubr
mov
rcll
add
jno
in
popf
imull
push
pop
dec
sahf
or
mov
jl
aam
cmp
inc
shlb
call
mov
repz
jmp
out
dec
loopne
add
shrb
push
lods
lret
jmp
mov
push
push
or
into
rcll
dec
sbb
mov
xchg
aas
ret
mov
arpl
je
inc
pop
nop
repz
dec
mov
imul
scas
ds
sbb
add
out
add
pop
sbb
pop
xchg
nop
cmp
outsl
lds
dec
inc
mov
pop
addr16
je
shll
sbb
pusha
out
ja
jecxz
inc
ljmp
arpl
test
mov
loopne
mov
pop
icebp
or
outsb
xor
pushf
notb
mov
adc
in
mov
ja
mov
mov
repz
add
add
jle
ret
out
or
xor
pop
jle
in
cli
rorb
dec
fwait
add
ficoml
imul
roll
fs
and
lahf
lahf
sub
xor
lret
fwait
in
popf
sbb
or
xchg
flds
push
push
dec
test
ljmp
push
ljmp
push
fdivrs
sbb
movsl
fmuls
push
add
div
call
add
adc
pop
nop
addr16
lret
lds
out
insl
out
push
mov
mov
dec
xchg
sahf
cld
fcmovu
pop
inc
loope
mov
cmp
jb
lret
scas
test
jno
xor
lret
lea
sbb
mov
popa
call
cld
fcoml
orb
adc
mov
rcll
fcompl
sub
mov
mov
out
in
aaa
adc
jg
in
aaa
out
cmp
adc
inc
sub
sub
clc
ret
add
ret
add
fdivl
in
mov
xchg
push
scas
fists
push
adc
lods
xor
adc
lea
sbb
sbb
pop
push
mov
add
mov
int3
adc
pusha
enter
into
insb
not
out
pop
stos
fidivl
cmc
mov
lods
sub
or
aam
add
dec
or
scas
jmp
arpl
add
loope
add
add
add
push
insl
jg
push
cltd
xor
or
jmp
sub
dec
cmpsb
sbb
lock
lds
push
lods
cmp
mov
mov
addb
and
aam
ds
ja
xchg
lcall
std
out
in
xor
std
ja
fimuls
enter
out
sub
stos
jne
gs
lahf
push
rcr
inc
adc
cmp
fsts
jl
popl
outsl
adc
in
xchg
sub
add
mov
adc
rcrl
aas
into
call
sbb
std
insl
shl
test
fiadds
xor
sbb
push
inc
mov
das
je
pop
mov
mov
sbb
pop
flds
dec
dec
add
jl
cli
mov
outsl
sub
jecxz
sbbl
mov
dec
jb
fwait
lods
mov
pop
loopne
push
mov
mov
mov
jle
dec
push
pusha
vhsubps
xorl
mov
sbb
movsl
mov
push
add
addb
inc
pop
dec
dec
repnz
push
rorb
jne
push
or
mov
inc
pop
test
daa
sbb
mov
loope
movsl
leave
in
pop
es
sub
jecxz
inc
out
xor
test
pop
and
inc
inc
sbb
mov
sbb
ds
dec
outsb
jmp
invd
out
mov
push
lcall
adc
lods
adc
shll
add
mov
inc
inc
inc
stos
movsb
mov
iret
add
mov
in
out
mov
rorl
and
adc
out
insl
test
jl
fmuls
sub
sbb
sub
fldenv
cmp
push
popa
pop
cmp
push
lds
add
stos
rcrb
adc
in
test
push
imul
cwtl
fsub
add
out
add
sbb
xor
fyl2x
loope
insb
ficompl
mov
push
inc
mov
in
mov
jb
int
cmpsl
xlat
imul
je
xchg
cmpsb
loop
cld
jmp
out
pop
mov
in
xchg
fsub
mov
incb
xor
or
dec
enter
mov
insb
pop
dec
fisttpl
pushf
lret
push
fs
lret
je
dec
jecxz
or
xor
xchg
jmp
movl
add
fs
cld
dec
mov
sarb
mov
dec
pop
bound
cmpb
popf
pop
stos
xchg
leave
jge
ror
or
js
js
xchg
fwait
and
loop
movsl
push
or
or
int3
jbe
inc
in
xor
lahf
dec
pop
push
aas
movsl
data16
cltd
push
lds
inc
inc
push
out
bound
aas
es
movsl
push
jecxz
xor
dec
jecxz
sub
xor
lcall
imul
jns
dec
nop
cmp
hlt
dec
jae
jbe
fnstcw
or
in
pop
mov
cmp
fcoml
mov
cltd
sti
stos
mov
jp
push
adc
mov
xor
sub
dec
dec
mov
xchg
xchg
pop
mov
dec
add
mov
loop
stos
add
inc
xor
and
jg
mov
mov
push
fisubs
and
inc
mov
scas
ret
les
int
sub
mov
fsubrs
dec
mov
add
shrb
jno
and
xchg
push
cli
adc
pop
add
bound
mov
or
push
lcall
pop
push
leave
popf
lret
popf
pop
xlat
aaa
add
arpl
in
add
add
add
sbb
push
sub
mov
inc
pop
fistl
pop
and
mov
stc
out
leave
jmp
xor
xchg
xchg
ret
inc
andl
not
addr16
sbb
mov
fsubr
push
xorl
mov
cmp
icebp
or
jg
cmp
sbb
enter
mov
stos
aam
mov
es
aad
or
jae
hlt
lret
ret
stc
cmp
mov
call
mov
cmp
xchg
ljmp
repnz
and
test
xor
and
pop
test
add
test
mov
mov
insl
adc
lock
loope
mov
and
call
fs
xor
pop
inc
cmp
xchg
icebp
sbb
sub
push
add
pop
lods
idivb
dec
mov
sub
int3
test
dec
aas
stos
das
enter
fnop
jg
popa
lods
add
xchg
fcmovnb
stc
fwait
clc
dec
popf
and
jbe
jecxz
mov
stc
into
test
add
xchg
into
cld
loope
sbb
and
fwait
xlat
int
dec
pop
xor
lods
mov
popa
subl
sbb
mov
psrld
pop
sub
jle
cli
xor
mov
mov
incb
imul
dec
mov
and
and
addl
add
adc
je
pop
xor
mov
icebp
aam
sbb
jbe
mov
in
fcomip
inc
aaa
jbe
arpl
ja
jg
jmp
movsb
add
jmp
jmp
lcall
cmp
adc
lock
xor
ss
ret
rcrl
add
call
pop
out
and
in
aas
stos
out
add
add
add
dec
fs
xchg
or
cld
mov
aas
cmp
pop
shll
or
rcl
adc
adc
jnp
adc
cmp
aam
inc
dec
inc
jg
insb
stc
addb
push
pusha
push
and
out
in
dec
xchg
ret
mov
mov
cmpsl
lods
movsl
cmpsl
mov
aaa
test
ret
jb
mov
sbb
inc
mov
mov
xor
mov
aaa
and
sarl
fildl
scas
cmp
bound
xor
push
dec
stos
ficoml
jle
or
dec
ret
aam
sub
stos
sbb
mov
lea
dec
dec
cmp
push
fcoml
out
sbb
push
mov
scas
adc
jns
xor
xchg
push
out
push
pop
jne
sub
mov
dec
xor
cmp
cmpsb
pop
fmul
mov
xor
push
cld
sub
push
adcl
in
inc
jns
sub
insb
pop
cmp
loopne
jb
or
fists
test
mov
mov
les
cmp
das
fpatan
in
mov
dec
cmp
je
push
adc
mov
push
adc
mov
xchg
insb
sbb
jg
inc
cmp
and
in
loopne
mov
pop
add
test
inc
and
enter
pop
fdivrl
jne
adc
jnp
xor
ret
cmp
arpl
enter
divl
inc
pushf
xorl
sbb
xor
lds
in
in
cmpsb
xor
or
mov
out
fldcw
mov
jns
jp
inc
xchg
xchg
stc
xchg
incl
loop
push
data16
dec
imul
xchg
jmp
add
lcall
mov
sbb
into
push
pop
fs
cmp
je
test
pop
lret
leave
xchg
dec
fwait
stos
das
dec
dec
add
push
sub
jmp
repz
in
fld
cltd
loop
sbbl
popa
mov
mov
jmp
xchg
popl
inc
test
xchg
mov
mov
jne
daa
dec
xor
ds
or
sub
mov
mov
xchg
and
fists
xchg
dec
cmp
mov
not
scas
and
xchg
pop
into
or
push
ja
sub
lcall
and
lock
dec
cmp
push
push
pop
mov
orl
negb
int
adc
mov
lret
daa
add
mov
jmp
adc
add
out
adc
into
jb
inc
rolb
jo
addr16
in
pop
lcall
shl
inc
repz
push
inc
push
sbbl
pop
mov
sub
leave
pop
cmp
xor
dec
add
or
pop
push
pop
jno
jmp
decb
mov
mov
push
cmpsl
lods
dec
out
out
aas
arpl
dec
add
pop
dec
mov
cmp
out
daa
add
adc
inc
addr16
xor
inc
sub
cmpsb
repnz
cwtl
dec
adc
gs
cld
aaa
xor
pop
xchg
js
test
sbb
out
fwait
pop
repnz
jnp
sub
mov
mov
shr
je
lock
pop
push
js
cmpl
pop
jnp
sbb
xor
cmp
mov
cmpsl
add
or
pop
fdivs
std
adc
stos
xchg
add
into
psrld
rcr
fistps
sub
add
out
add
push
mov
iret
out
cmp
pushf
cld
push
dec
mov
inc
cld
dec
imul
adc
out
add
mov
jecxz
ljmp
push
sbb
insl
and
repz
test
push
test
lahf
scas
ds
frstor
mov
mov
xor
xchg
xchg
jle
dec
push
jp
add
dec
or
pop
pop
std
in
or
jnp
pop
iret
in
xor
cmp
leave
addl
in
mov
push
das
jmp
inc
shl
inc
sub
push
ficomps
add
mov
push
inc
jbe
mov
icebp
inc
adc
push
je
push
and
notb
mov
negl
jno
iret
cmp
xor
xor
inc
or
in
and
fisttpl
or
mov
das
popa
outsl
mov
lds
pop
dec
inc
sar
data16
mov
fidivrl
sarb
mov
aas
mov
mov
nop
xor
pushf
adc
aas
jmp
dec
xchg
lahf
sub
aad
xchg
inc
dec
dec
shll
xchg
push
insl
sbb
outsb
stos
xor
rorb
dec
popa
fbstp
dec
lods
add
gs
inc
jle
dec
mov
jb
lods
pop
xchg
ret
sarb
mov
xor
pop
sub
call
lret
pusha
inc
lret
aaa
out
push
int
subl
and
sbb
imul
inc
and
adc
add
cltd
xor
lret
mov
jno,pn
ljmp
js
dec
js
lea
mov
aad
cmpsl
je
bnd
bnd
add
mov
nop
jne
sbb
xor
cli
fmul
dec
add
inc
inc
aaa
int
xor
lock
pushf
pusha
pushf
cld
cld
mov
aaa
or
in
add
out
add
push
icebp
mov
jno
push
push
xchg
cwtl
xchg
xchg
cld
sarb
cld
shrl
bswap
mov
jo
lret
lods
sub
inc
and
xor
icebp
in
mov
mov
jmp
push
jecxz
pushf
or
ds
test
push
mov
stos
inc
pop
fsubs
subl
xor
popf
call
cmp
lcall
mov
mov
pop
xor
inc
add
dec
repnz
mov
sub
lock
xchg
inc
dec
pusha
rol
and
adc
dec
sahf
cmpsl
mov
mov
in
add
in
cmp
adc
or
test
jg
dec
push
cmp
out
adc
ljmp
push
add
pusha
inc
into
lds
xor
outsl
inc
cmpsl
enter
fisubs
pop
cmp
out
add
jo
mov
shlb
mov
pop
in
mov
fisubl
lahf
clc
loopne
aad
out
or
pop
ror
test
les
and
orb
scas
hlt
xor
arpl
call
push
das
mov
pop
push
add
nop
mov
outsl
xor
cwtl
and
leave
sti
lcall
or
jo
xor
mov
rcrb
push
das
mov
pop
or
ja
jo
or
setp
mov
mov
xchg
jle
mov
sub
pop
push
cmc
pop
outsl
mov
fisubrs
aaa
xchg
jno
push
cmc
jp
lcall
inc
push
add
inc
gs
jg
mov
sbb
out
add
out
add
cmp
loopne
jb
andb
dec
int
cltd
nop
fwait
xor
cmp
aaa
adc
ja
stos
xor
sbb
das
shl
and
ljmp
ljmp
add
sbb
fcomi
sbbb
stos
xchg
inc
adc
fnstcw
and
rcll
inc
imul
xchg
data16
in
xchg
in
stos
add
push
mov
jno
outsl
out
cmp
cmpsb
stos
xchg
fs
call
or
add
mov
adc
lods
popf
or
sbb
dec
adc
mov
inc
stc
pop
push
jo
jl
mov
daa
mov
and
ljmp
pop
std
push
cwtl
loope
xor
sbbl
gs
rorl
gs
dec
dec
push
ror
cmp
in
fnstenv
fld
mov
jae
sti
mov
es
popf
test
sub
outsl
jge
or
sbb
mov
arpl
faddl
inc
mov
sbb
xchg
push
fiaddl
xchg
jns
stos
into
jns
sbbl
mov
and
jns
out
jle
add
xorl
mov
inc
xor
cmp
fincstp
stos
lcall
hlt
xlat
ret
mov
cs
lea
xchg
sbb
and
jge
inc
lret
and
rclb
push
mov
or
mov
jp
jbe
jle
into
xor
cli
cwtl
imul
ret
pusha
or
and
shl
fisttpll
ja
cli
mov
cmp
jle
fstpt
mov
inc
xchg
dec
xchg
dec
into
adc
sub
add
add
push
mov
jmp
inc
jnp
fisubl
arpl
addr16
cwtl
enter
lret
and
in
add
aad
stos
push
stos
mov
lcall
sbb
mov
data16
pop
out
arpl
nop
cltd
mull
fsubrs
mov
ss
mov
out
adc
roll
cmpsb
xchg
ljmp
dec
neg
mov
nop
xor
std
mov
repnz
ja
and
xor
ds
adcb
repnz
scas
push
in
ret
jno
pop
sbb
fiadds
pop
stos
repz
fdivrl
repz
xor
imul
repnz
inc
out
fxch
xchg
call
push
cmp
add
popf
and
xchg
pop
cmpsl
bound
push
subb
sbb
sub
arpl
jge
pop
push
mov
pusha
or
shlb
pop
mov
lods
and
leave
int3
inc
mov
and
xor
cld
mov
mov
pop
rcrl
xchg
push
xorl
lds
add
inc
gs
addl
push
inc
adc
mov
aam
adc
ja,pt
int3
out
xchg
jb
sbb
cmp
jns
push
and
enter
test
cmpsw
xchg
das
lea
jecxz
mov
aas
push
dec
sar
or
fndisi(8087
mov
in
sbb
stos
mov
mov
mov
xchg
jge
jle
inc
in
sub
mov
ljmp
stos
outsb
mov
leave
shrl
cli
push
call
xchg
imulb
xchg
or
imul
push
inc
xor
pop
daa
push
rcrb
push
xor
call
jbe
mov
add
and
jg
push
mov
outsb
movb
add
add
add
sbb
lock
or
xchg
xchg
jo
dec
dec
cli
adc
mov
stos
bound
mov
jmp
std
inc
xor
jae
call
aas
repz
repz
fld
jg
pushf
dec
ljmp
push
out
pop
ja
cwtl
jmp
test
pop
sbb
stc
push
mov
adc
fistps
imul
testb
inc
sahf
cld
pop
out
adc
in
push
popa
adc
repnz
pop
nop
push
cmp
inc
mov
mov
aaa
push
mov
or
movsb
mov
aad
xchg
and
pop
inc
push
xchg
adc
lock
pop
into
lock
fmuls
pushf
cmp
pop
mov
and
pushf
pop
sbb
rorb
test
xchg
mov
test
sub
cmp
add
adc
pusha
loope
adc
cmp
pop
js
int
push
iret
leave
cmpb
ret
aas
xchg
add
gs
test
inc
xchg
mov
imul
or
cld
push
aam
rclb
mov
pop
js
hlt
mov
lock
jns
scas
dec
pop
xchg
mov
push
mov
mov
gs
rorb
shlb
sbb
push
sub
dec
mov
jge
aam
or
sahf
incb
in
xchg
adc
je
mov
jnp
push
test
push
cltd
js
sub
mov
mov
sbb
inc
sbb
ret
pop
imul
push
jg
mov
pop
mov
mov
faddp
xor
in
loopne
fdivrl
lret
sbb
xor
mov
mov
xor
inc
mov
jno
test
jnp
sti
mov
in
cmp
hlt
add
out
add
aad
outsb
aam
push
ja
fsubrp
mov
inc
mov
push
pop
iret
sub
mov
sbb
orb
loopne
cmp
jae
orl
jecxz
es
mov
js
fs
mov
or
inc
lret
shlb
test
shrb
dec
test
out
subb
in
jae
pop
cmp
push
rcrl
pop
stos
cmc
rorl
xor
rorl
ret
jno
jb
add
out
cmpsl
lock
into
xlat
push
dec
mov
es
mov
dec
movsb
pop
fists
out
clc
cmpb
xchg
in
ljmp
je
ror
sub
mov
test
sar
iret
push
popf
movsl
xchg
mov
into
leave
dec
sub
jo
in
movsb
push
jl
xchg
fs
xchg
sub
insl
fidivl
and
fisubl
dec
ret
test
daa
daa
testb
divl
rdpmc
ffree
jp
rcrb
pop
popa
std
xchg
xlat
test
xor
adc
cmc
test
pop
or
call
imul
arpl
and
daa
mov
xchg
idiv
adc
repnz
xor
cs
xchg
fnsave
jb
and
sub
test
aaa
mov
icebp
imul
mov
dec
movsl
pop
push
xchg
cmpsb
movsl
xchg
xchg
aaa
icebp
and
push
jae
out
stos
mov
sub
movsl
adc
paddd
sbb
jl
icebp
dec
and
sbb
adc
test
push
push
aam
and
lods
jne
pushf
cmp
sub
fdivl
mov
fiadds
xchg
jmp
cli
and
mov
filds
mov
fbstp
fs
dec
int3
lret
add
lret
add
xchg
mov
jge
daa
mov
adc
mov
loop,pt
mov
mov
repz
inc
fmuls
dec
push
pop
mov
mov
push
mov
ret
xchg
sub
fstl
mov
sbb
negl
xchg
ds
testb
sbb
jmp
aaa
lock
insl
sbb
push
bnd
jo
and
mov
stos
sub
cmp
arpl
or
out
xor
cltd
aam
rolb
stos
js
dec
pop
inc
push
call
test
scas
lcall
neg
dec
cmpl
cmp
inc
ds
sbb
fwait
addl
dec
push
and
arpl
loop
in
lcall
aam
jno
ljmp
pop
mov
iret
adc
loope
add
test
rorl
repz
rcrb
and
pop
lods
out
aas
dec
adc
pusha
inc
pusha
pop
lods
sub
test
leave
adc
ds
fstl
call
sti
shl
testb
enter
dec
add
enter
lret
in
test
les
cmp
lahf
cli
cmp
stos
cmp
outsb
or
ds
fsts
cmc
je
mov
jge
jb
pusha
insb
xchg
dec
in
cmp
mov
sbb
arpl
data16
or
cmpb
pushf
lahf
mov
and
fnstcw
sbb
enter
mov
jl
add
clc
or
dec
flds
stos
inc
out
push
cs
jp
xchg
pop
mov
stos
jo
fnstcw
xor
mov
inc
xor
