push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
jl
cmp
pusha
addl
cmp
jp
jbe
ret
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
dec
ret
push
out
cmp
pop
daa
xchg
sbb
nop
fidivrs
lea
mov
sbb
jl
cmp
xchg
sub
jp
or
ret
incb
adc
pop
cmp
sub
sbb
jbe
in
out
inc
loop
push
repz
push
jno
loop
cmpsl
mov
push
or
iret
insb
xchg
or
lcall
xchg
pushw
mov
push
dec
inc
inc
xor
inc
xor
je
mov
sub
and
push
push
adc
rcl
sub
mov
xchg
sub
lahf
pushf
xor
add
pop
int
loopne
xor
fcmovb
cmc
inc
mov
enter
cmp
cmp
pop
movsb
or
movsl
fisubrl
lea
xor
and
repnz
call
jnp
mov
js
dec
insb
loopne
mov
iret
movsl
jns
add
cs
lods
repz
jno
lret
daa
mov
enter
sbb
gs
in
xor
sahf
or
ljmp
sti
push
fisttpll
lds
xchg
xchg
aam
or
incl
push
mov
jns
pop
cmp
sbb
add
dec
dec
push
ret
fcoms
jo
mov
cwtl
dec
jbe
movsb
je
repnz
pop
cmp
xor
rclb
mov
cmpb
cmp
in
dec
mov
gs
jp
adc
test
inc
pop
xchg
out
sbb
imul
inc
ljmp
scas
mov
and
and
cwtl
mov
cmp
rcl
push
in
ret
inc
subb
js
jecxz
mov
add
stos
mov
xor
dec
lds
data16
fwait
lret
leave
cwtl
xchg
enter
jnp
push
into
jmp
outsb
fidivrl
fisubl
leave
push
cs
test
dec
icebp
jl
sbb
mov
outsl
out
sub
out
push
add
push
sti
xor
xchg
and
adc
and
jno
les
outsb
mov
dec
hlt
cmp
sahf
sub
lcall
mov
fidivl
push
into
imul
dec
sbb
sub
cld
into
fldcw
cld
mov
inc
pop
mov
and
mov
int
lea
mov
jle
push
ja
hlt
cwtl
aas
and
inc
lret
jne
push
mov
inc
and
lahf
add
fldl
push
loop
mov
or
enter
push
in
stos
pop
test
mov
sub
jbe
repz
jb
xor
cmp
insl
inc
movsl
test
cmp
imul
sub
add
cmp
mov
lret
sbb
dec
lret
mov
xor
mov
push
jmp
loop
shll
mov
mov
into
push
aad
das
jno
idiv
mov
dec
and
jo
nop
xchg
xchg
jp
mov
leave
mov
mov
mov
adc
mov
jmp
das
cmp
mov
idivb
fstpl
pop
sbb
mov
inc
loop
adc
aas
inc
pop
mov
or
dec
pop
int
push
mov
jmp
push
cmp
shrb
fists
jl
fs
pop
xchg
cmp
add
test
popa
mov
aad
pop
ds
lods
cmc
outsl
pop
stc
frstor
daa
mov
or
xor
push
adc
xchg
sub
aaa
aas
sbb
ds
xchg
push
js
pop
sub
bound
sbb
add
lcall
xor
pop
push
push
pop
loope
adc
mov
shlb
test
sub
push
inc
pushf
scas
sub
inc
jge
pop
and
or
and
cmp
push
inc
js
xchg
sbb
cmovb
dec
mov
test
movsl
out
pop
add
test
jle
push
push
pop
lret
jo
sbb
adc
and
icebp
ljmp
test
cwtl
and
inc
push
mov
xlat
mov
jle
cmpsl
mov
mov
cmp
outsb
jge
adc
jno
dec
dec
push
dec
popa
das
sar
sub
dec
ret
jle
dec
jmp
sub
add
adc
jbe
lret
fisubs
jp
in
roll
jecxz
jecxz
push
mov
popa
pop
js
pop
repnz
mov
xor
inc
xchg
movsb
pusha
int
jecxz
push
jo
loop
ljmp
lahf
sub
fldl
xor
or
lcall
jl
push
mov
mov
jbe
mov
dec
xor
subl
in
outsb
imul
push
in
and
scas
mov
adc
int3
in
cs
cmp
add
hlt
push
push
mov
sub
mov
lret
sub
or
pop
inc
mov
test
add
inc
fnstsw
push
xor
push
pop
mov
sub
or
in
push
mov
xor
mov
push
dec
push
pusha
and
xor
pop
lods
mov
sbb
inc
sbb
ds
add
adc
lds
cmp
ret
fildll
sahf
mov
jmp
pop
mov
xchg
mov
dec
mov
cmp
outsl
repz
cmc
adc
sub
cmp
addl
adc
ljmp
cwtl
dec
mov
jne
push
sti
mov
dec
jp
push
rolb
sbb
rcr
mov
push
aaa
ret
mov
inc
insl
inc
lock
cmpsb
jo
cmp
push
stos
sub
pop
cli
add
sbb
andb
popa
aas
pop
push
mov
lcall
mov
jae
or
punpckhdq
stos
pop
push
or
push
cmp
aas
scas
leave
cmp
fsubl
ljmp
pusha
test
repnz
push
pop
cltd
stos
adc
call
mov
cwtl
fcoms
jl
sbb
fs
xlat
jecxz
roll
hlt
fiadds
sbb
loope
mov
inc
add
dec
ljmp
insl
insl
adc
mov
sbb
mov
popa
mov
mov
aad
loope
xor
icebp
pop
cmp
rcrb
mov
xchg
test
mov
out
push
aaa
stc
test
decb
dec
incb
push
xor
addl
xchg
ljmp
fidivs
and
dec
add
or
jne
jnp
mov
into
cmp
mov
xchg
mov
div
push
leave
pushf
btc
scas
adc
hlt
pop
es
into
mov
cmp
addl
add
stc
pop
sub
pop
gs
scas
shr
cli
outsb
and
adc
cmc
xor
ret
cmp
ficoml
loope
rolb
cmp
push
adc
daa
or
sub
jnp
ret
js
pop
aam
addr16
ds
shl
mov
pop
aas
fidivrl
out
pop
pop
test
fsubrl
adc
pop
lret
icebp
dec
push
insb
mov
fwait
inc
cmc
sub
xor
mov
xor
scas
fsubl
fimull
pop
std
dec
aad
aam
mov
outsb
sahf
lock
movsl
inc
jge
mov
cs
mov
mov
test
inc
int
in
std
cmp
or
sub
mov
sbb
js
divl
pop
jp
mov
mov
aad
mov
insl
lahf
movsb
stos
adc
mov
push
pop
loopne
or
or
inc
xchg
jge
daa
loopne
jns
mov
fucomip
mov
jl
in
out
sar
adc
xchg
pushf
orl
ja
cmc
cmp
es
int3
mov
dec
icebp
push
adc
movsb
int3
dec
mov
adc
sar
mov
pop
mov
xor
iret
ljmp
rcrl
lock
cmp
in
mov
add
in
adc
inc
mov
cwtl
sbb
test
das
ret
jp
subb
rol
ja
sbb
mov
pop
or
cli
adc
mov
iret
pop
mov
mov
jns
mov
mov
iret
movsl
mov
pop
push
lods
pop
loop
out
and
inc
js
adc
xor
xchg
dec
mov
pop
cmpsb
lcall
push
lret
mov
xchg
jp
div
mov
lcall
test
cwtl
mov
gs
subb
divb
jge
pop
mov
cmp
push
lea
rorb
in
dec
add
int3
adc
xor
push
cmpsb
lahf
mov
repnz
pop
pop
push
inc
push
test
and
lret
stc
ss
cwtl
fucomip
cmp
jae
data16
dec
inc
jge
sbb
scas
pop
and
add
sub
popf
push
mov
add
mov
pop
mov
icebp
sti
cmc
push
lahf
aad
aad
arpl
insl
and
out
out
fcomps
inc
jo
les
shll
cmc
je
jo
lods
or
notl
sbb
rcrl
gs
orb
pop
repz
pusha
add
adcb
and
and
dec
jne
in
sahf
inc
sbb
shlb
dec
add
outsb
loop
dec
pushf
mov
sbb
loopne
pop
or
daa
fadds
pop
clc
mov
lock
leave
sbb
test
subb
cltd
add
and
adc
stos
cmp
xorl
clc
clc
jl
pop
icebp
ret
dec
arpl
fmull
popa
aam
popf
repz
insb
imul
push
or
sub
add
mov
push
test
sub
jne
dec
popa
faddl
subl
pop
movsb
pop
lea
sti
adc
in
loope
fnstenv
scas
sbb
jle
sub
lret
cmc
sbb
add
test
add
dec
xchg
push
nop
cld
add
mov
int
setnp
hlt
and
cmc
addr16
lret
negb
les
mov
xor
pushf
adc
bound
cmp
je
adc
es
pop
xchg
xchg
adc
fisttpll
sbb
loope
hlt
xor
sbb
out
enter
xchg
int3
jo
add
cmp
pop
mov
xor
sub
pop
cli
insl
xchg
sbb
xor
out
sbb
xchg
sbb
pop
mov
or
jmp
push
dec
shll
push
arpl
stc
shll
test
rcrb
in
test
in
cmp
pop
ret
xchg
cmp
inc
mov
loope
fcmovu
pop
sub
mov
ja
jmp
cmc
int3
repz
add
jle
out
shll
test
jne
jae
sbb
cwtl
xor
lret
add
movsl
sub
jb
sbb
testl
pop
pusha
jne
jne
add
xorb
mov
daa
sbb
dec
pop
jb
loopne
xor
push
leave
sub
push
mov
js
fldl
pusha
das
jae
inc
loop
into
pop
test
pop
lds
lea
inc
sbb
pop
push
jmp
mov
jo
jne
adc
jle
outsb
mov
pop
shrl
shl
insl
ret
mov
aaa
mov
imul
cmp
lods
in
shrb
ret
push
lret
add
push
lret
sahf
or
ss
cmpsl
loop
in
out
fldenv
push
rcrb
push
mov
lock
push
inc
fsubl
call
stos
xchg
pop
jns
pop
mov
hlt
inc
shll
std
fucomi
test
adc
push
mov
dec
lds
xchg
mov
mov
xchg
xchg
repnz
in
and
xor
js
adc
rcll
inc
std
outsb
sbb
push
xchg
lret
fwait
add
das
aam
sbb
or
jno
inc
sub
add
lret
push
xchg
adc
push
xchg
mov
sbb
jbe
pop
insl
inc
imul
inc
incl
and
outsb
fs
dec
mov
jnp
sti
outsb
sub
test
mov
cld
mov
incl
cmp
mov
inc
adc
les
inc
dec
push
pusha
scas
jae
int3
mov
clc
std
mov
rclb
pop
push
cmp
sbb
xlat
adc
scas
xchg
in
or
loopne
mov
test
dec
aad
xchg
sbb
xchg
or
mov
sahf
popf
inc
mov
add
mov
jnp
imul
hlt
and
dec
sbb
lret
sbb
jecxz
or
mov
push
int3
rclb
pop
sarw
repz
and
test
or
xchg
cmpsl
jae
cmp
aaa
shl
stos
ficompl
out
or
cmp
and
in
dec
fmull
sbb
int
dec
imul
sub
add
scas
cltd
aam
and
push
fcomps
lahf
stos
aaa
cmp
and
pop
fincstp
xchg
push
loop
xchg
adc
mov
arpl
or
das
jbe
push
push
mov
mov
or
cmpsl
dec
imul
pushf
xchg
in
pop
test
mov
cmp
fmull
rorb
jae
cmp
in
and
xchg
aam
mov
and
push
sbb
bound
aaa
xchg
pushf
mov
adc
mov
jno
nop
adc
xchg
into
ret
sub
fcmovnu
push
int
outsb
fsubrl
test
or
cltd
loope
mov
or
mov
out
je
jmp
imul
rcrb
popf
dec
sahf
nop
inc
sbb
shll
xor
xor
xchg
fbstp
shrd
inc
insb
mov
aam
jp
icebp
outsl
sub
pop
jp
inc
sbb
mov
test
decb
cmp
ret
lret
sahf
adc
out
inc
das
aaa
lods
out
xchg
xor
cli
loopne
aam
repnz
dec
xchg
xchg
jo
scas
cli
add
popa
push
pop
sub
mov
sbb
out
js
ret
and
outsb
fbstp
and
or
clc
aas
xchg
call
sub
xchg
xchg
xor
sbb
ljmp
pop
dec
out
jb
lret
jbe
sbb
adc
sub
inc
sub
enter
aam
and
nop
push
ret
xor
lock
pop
popa
lds
ret
jne
xchg
adc
xor
insl
add
daa
jbe
or
jp
lods
xchg
fmull
xlat
inc
inc
lret
mov
and
ret
push
out
hlt
fwait
test
int3
insl
into
bound
push
aaa
andl
pop
cmpsl
or
stos
cli
shl
inc
aam
cmc
jae
aam
fstl
sahf
cmp
aas
test
and
sahf
sub
jecxz
pushf
imul
mov
or
hlt
lds
cmp
sahf
mov
dec
loope
mov
or
test
fsubrl
pop
mov
and
xchg
cmp
scas
lock
cmpsl
mov
mov
fcompl
cmp
inc
mov
lea
xchg
aas
jns
insl
cmp
and
mov
xor
orb
jl
les
adc
jne
sbb
sub
mov
adcb
popf
cmp
imull
scas
stc
cli
ds
xor
pop
dec
and
mov
into
lea
andl
xor
jbe
insl
mov
out
or
and
or
pop
cmp
pushf
test
out
aad
cmpsb
ja
shlb
xchg
lock
nop
in
dec
push
adc
jo
mov
test
pop
push
jge
push
std
adc
cmp
push
xor
and
into
insl
mov
or
jbe
and
dec
ljmp
test
shrb
jns
xchg
daa
mov
popa
adc
out
or
shrb
sub
sub
stos
cmpl
insl
dec
cwtl
dec
pop
jg
xor
ja
fcomps
inc
pmaxub
fcoml
push
in
add
dec
mov
lods
aad
push
clc
sahf
sbb
fst
adc
jl
and
mov
jb
xchg
cld
mov
idiv
mov
leave
push
sub
mov
jo
adc
cmp
daa
xor
sub
cwtl
inc
cmc
lret
lods
jl
push
mov
in
xchg
arpl
scas
or
lods
add
pop
dec
sbbl
mov
inc
js
scas
cmpsl
mov
and
xchg
lods
inc
or
inc
push
imul
inc
pop
pop
call
lahf
jae
cltd
mov
pop
je,pn
mov
inc
dec
mov
in
and
and
insb
add
lds
mov
mov
add
xchg
lds
jae
iret
push
arpl
adc
xchg
insb
pop
push
mov
bound
bound
out
test
iret
ljmp
mov
nop
sbb
mov
fs
fildl
loopne
inc
cmp
push
mov
push
cli
lods
lds
fwait
iret
movsl
scas
and
test
js
cmp
loopne
lret
stos
push
add
hlt
fs
xor
sub
dec
lock
dec
loope
mov
repnz
out
in
fucomip
test
gs
or
or
jne
imul
movsb
inc
dec
stos
cmp
cmp
insb
ds
inc
inc
lea
arpl
xor
and
inc
mov
mov
fcomps
push
inc
jp
addl
xchg
test
lods
jmp
outsl
inc
jmp
ja
cli
pop
jbe
cmp
lds
add
clc
gs
push
inc
adc
add
pop
mov
add
arpl
jb
cmp
test
mov
add
mov
or
push
lret
push
xchg
sti
push
icebp
or
outsb
jns
ja
mov
test
jns
mov
add
sub
mov
mov
or
call
mov
dec
dec
inc
push
lds
pop
cmp
sub
scas
sub
cmpsl
or
lock
das
and
dec
fisubrs
cltd
cmp
xor
inc
sub
roll
adc
lret
sahf
out
es
mov
inc
popa
xor
dec
xor
mov
and
outsb
test
sub
push
es
push
jmp
pop
or
test
jbe
inc
enter
cli
test
dec
dec
cmp
loopne
aas
clc
sbb
inc
and
scas
insw
lea
add
sub
imul
lds
stos
shll
in
pop
push
xchg
in
ja
add
and
pop
cmp
stc
or
add
mov
shrl
pop
cwtl
mul
xor
push
pusha
add
repz
or
insl
sub
lods
scas
or
movsb
ss
jbe
ss
dec
movsl
mov
lahf
pushfw
and
fstpl
mov
add
xchg
lret
leave
xor
popf
fcom
hlt
ljmp
and
std
dec
into
and
push
mov
scas
fldl
push
insl
lea
pushf
stos
je
xchg
push
fbstp
sub
notl
mov
test
mov
and
pop
dec
les
mov
rolb
mov
pop
shll
gs
popf
mov
or
popa
enter
loopne
cmpsb
icebp
shlb
jg
pusha
xor
les
mov
clc
adcl
xor
dec
jp
and
int3
dec
add
jae
pop
lahf
hlt
sub
jp
push
xor
mov
jnp
push
jmp
insb
jmp
push
xor
push
inc
fs
mov
stos
push
insl
jns
loopne
ds
ret
mov
push
and
or
and
add
stos
cwtl
in
aas
pusha
fwait
xchg
push
inc
aad
dec
push
or
push
mov
mov
add
mov
loopne
fst
shl
or
jo
cli
push
bound
pop
fistl
fbstp
ror
mov
cmpsb
imull
push
xor
je
inc
xchg
repnz
lcall
dec
mov
inc
xor
xor
dec
push
out
fldenv
push
add
lret
sub
jns
test
inc
xchg
jmp
jg
mov
ret
jp
xchg
aad
nop
adc
adc
imul
popa
cli
into
das
mov
repz
pop
rorb
decl
fsubrs
add
and
call
xchg
ret
sbb
call
jnp
and
loop
sbbl
int3
ftst
mov
fucom
mov
jmp
mov
or
or
push
movsl
sbb
mov
jb
stos
scas
dec
dec
push
pop
pop
shll
xor
enter
sbb
inc
addr16
aad
ljmp
daa
jecxz
adc
jecxz
lds
xor
sbb
and
inc
scas
test
mov
mov
mov
call
adc
push
sarb
cmp
cmp
xchg
lret
pop
fldt
xor
and
add
popa
jmp
sbb
mov
sbb
cmp
sbb
fwait
xchg
cmp
mov
outsb
sub
pop
inc
test
les
jle
and
pop
add
fnsave
insb
cmc
in
pop
insb
cmp
add
mov
imul
test
push
andl
jae
and
inc
xorb
lahf
add
pop
push
leave
xchg
xchg
dec
das
adc
les
mov
je
push
movsb
out
pop
bound
fs
sub
inc
push
sub
cs
sub
inc
xchg
sub
xchg
sub
test
ljmp
subl
jb
lcall
adc
sbb
ficoms
call
mov
push
mov
push
sbb
inc
adc
mov
cltd
adc
fstps
rolb
movsl
cmpsl
mov
ljmp
add
sbb
xchg
or
ljmp
adc
and
incl
fsubr
xchg
decb
pop
inc
lret
stos
sub
push
jle
pop
adcb
scas
pushf
inc
fisubrs
rcll
xchg
out
rolb
js
sbb
pop
inc
pop
pop
lret
outsl
xchg
xchg
cmpsl
xchg
mov
out
pop
inc
sub
inc
xchg
or
mov
pop
into
dec
mov
insl
sub
gs
add
jo
pop
cmp
sub
inc
cli
stc
test
mov
fsts
rorl
cmp
or
xor
jle
or
movsl
and
pop
xor
fs
rolb
repz
mov
mov
adc
hlt
cmp
inc
sti
scas
dec
subb
es
pop
daa
arpl
and
out
add
jbe
test
mov
xor
xchg
add
mov
jmp
add
or
arpl
push
je
test
cli
imul
jecxz
repz
jnp
sbb
test
adc
pushf
loop
pop
pop
popf
dec
mov
or
andl
push
out
sar
mov
adc
jno
outsl
adc
pop
aam
inc
mov
mov
lods
add
in
cmp
inc
jne
xchg
int3
jmp
and
test
test
out
mov
test
push
mov
mov
mov
lahf
decb
cmpb
call
aad
or
adc
loope
in
sbb
mov
sub
cltd
in
js
mov
add
pop
out
pop
add
xchg
pop
xchg
cmp
gs
xor
and
es
xchg
add
outsl
sti
lds
aam
int3
jl
xchg
les
loopne
imul
outsl
ret
pop
out
lds
pop
data16
insb
mov
push
push
add
in
je
int
into
arpl
fadds
adc
clc
into
sbb
lcall
xchg
xchg
popf
xor
inc
and
sbb
sbb
test
or
cmp
jmp
dec
or
mov
mov
shr
sbb
jo
jne
cmp
and
lret
icebp
mov
cmp
out
or
insl
scas
fisttps
add
push
dec
mov
mov
xor
jns
leave
bound
cld
js
mov
std
or
lods
cmp
cwtl
push
stos
xchg
imul
mov
loope
data16
mov
das
es
lods
leave
fildll
jmp
pop
sbb
mov
inc
cmp
loope
lods
and
xchg
mov
lds
cs
fs
les
aaa
pop
push
push
enter
aaa
xlat
mov
and
fisubl
cmp
shl
dec
jo
movl
imul
cmp
xchg
fildll
pop
in
jg
pop
mov
lcall
ret
lods
adc
lcall
dec
pop
sub
imull
mov
dec
ds
lahf
jecxz
cwtl
adc
sbb
jl
pop
jo
dec
cmp
lods
dec
xor
js
mov
add
mov
ja
pop
and
xor
pop
jno
fs
jp
inc
fidivs
ret
or
cli
mov
cltd
popa
xchg
mov
loop
rcrl
sub
sub
pop
and
adc
leave
and
pop
dec
in
mov
push
mov
jno
movsl
adc
or
and
jne
dec
xorl
adc
std
insl
mov
hlt
pop
lock
rcrb
and
cs
mov
fidivrl
mov
mov
xor
roll
mov
insb
push
ljmp
xor
jge
fucom
adc
sbb
icebp
xor
adc
andb
cld
adc
or
lea
iret
rcll
dec
and
in
push
mov
dec
in
cmp
push
fnsave
push
icebp
jno
icebp
pop
scas
xchg
scas
push
lods
enter
out
mov
aaa
or
dec
add
sahf
and
mov
cmp
js
int3
hlt
xchg
xor
rorb
insb
ljmp
popa
jge
andl
sbb
movsl
mov
mov
jecxz
ja
movsb
test
mov
imul
jbe
mov
pop
loope
data16
and
cmp
dec
push
adc
mov
sub
or
lret
push
jno
xorl
mov
add
arpl
push
cmp
in
xchg
leave
inc
or
add
out
out
jmp
jnp
push
cs
jno
ret
imul
adc
in
xchg
push
cmpsb
cli
popa
out
mov
jge
add
mov
mov
mov
roll
xchg
dec
sbb
pop
stos
in
out
push
inc
pop
jle
jae
daa
inc
add
lahf
scas
out
lea
pusha
mov
fisttps
enter
mov
loope
imul
pop
jle
and
xchg
jecxz
dec
xchg
mov
cmp
mov
mov
aaa
mov
js
jge
scas
imul
sahf
loope
jmp
lods
lods
fldenv
mov
or
in
mov
xchg
or
fsubrl
insb
lds
pop
idivl
jnp
fcompl
fistl
pop
stos
cli
cmpsl
add
lea
or
xchg
mov
push
ret
pop
ljmp
fisubrs
call
xlat
test
mov
cs
arpl
xchg
push
pop
subl
pop
pop
aad
movq
xchg
pop
leave
fmuls
fsts
mov
or
inc
and
fnstsw
mov
fidivrs
stos
in
int3
nop
test
frstor
push
jecxz
push
pop
add
jo
mov
popa
repnz
mov
cmp
bnd
shrl
mov
jbe
and
pop
mov
push
scas
fcmovne
and
stos
lret
add
scas
fwait
int3
les
xor
ljmp
or
rcll
push
push
mov
cs
mov
sbb
pop
add
stos
andb
jne
popa
ret
shlb
pop
mov
push
add
int3
add
sbb
inc
mov
fstps
mov
jbe
int
xchg
mov
seto
repnz
add
test
fwait
xorl
imul
ds
js
pushf
in
dec
push
jl
sub
out
jae
or
fcmovne
es
rcll
dec
push
xor
aam
ss
xlat
jnp
inc
loopne
push
insb
cmp
pop
push
jne
test
add
out
scas
sbb
cs
int3
add
and
pushf
fisttps
sub
pop
rolb
jp
shr
imul
pusha
push
mov
mov
daa
sub
das
sub
in
xor
push
push
fldt
pop
dec
cmp
fs
jl
sub
shl
add
fnstenv
lea
sub
loop
mov
xchg
in
daa
and
cmp
test
int3
call
and
inc
jae
adc
jo
ss
push
xchg
test
lods
jns
adc
jno
push
jge
mov
aas
xchg
dec
mov
movsl
outsb
movsb
test
xor
and
mov
push
cmp
out
inc
mov
jae
fidivs
jnp
push
lret
pop
outsl
js
mov
cwtl
test
stos
sbb
and
loope
jno
push
in
out
outsb
xchg
fistps
jbe
jnp
mov
ficoml
mov
or
jge
xchg
pop
movsb
xorl
xor
sub
popa
sbb
sbbl
popf
dec
mov
test
or
xchg
mov
ret
test
stos
jbe
popf
arpl
fucompp
sub
jmp
mov
fisubrs
shll
add
aas
ret
add
jns
mov
dec
xchg
lcall
std
add
push
cs
jns
imul
idivb
add
je
cmpsl
sbb
or
inc
ss
test
fcomi
addr16
addl
mov
xlat
sti
or
or
mov
nop
data16
mov
lods
loope
arpl
mov
adc
rcrb
pop
mov
xchg
clc
xchg
shrb
enter
add
in
mov
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
xor
addl
cwtl
js
enter
inc
xlat
cmp
push
scas
stos
pushf
roll
dec
xor
repnz
jmp
insl
sbb
pop
orl
movsl
pop
push
stos
sbb
ds
div
in
mov
or
pusha
sahf
scas
insl
xchg
lret
or
int
jmp
sarb
out
mov
mov
or
jns
pop
mov
push
cmp
enter
sub
loop
add
and
fnop
inc
js
out
add
sbb
mov
mov
sbb
jp
jmp
add
out
repnz
loope
pushw
int
ret
sub
int3
sub
fcompl
dec
je
add
cltd
mov
xor
mov
xchg
cwtl
and
cld
xorl
cltd
pop
cmp
jnp
mov
dec
shll
sbb
pushf
pop
xlat
mov
popf
jmp
pop
jo
dec
bound
adc
fdivl
jb
mov
mov
out
loop
mov
pusha
cmp
add
xor
inc
pop
lock
fisubrs
xor
loopne
add
xchg
push
ljmp
dec
jnp
mov
pop
lock
fsubrl
xor
mov
sub
or
lods
out
sahf
arpl
dec
jns
test
addr16
xchg
xchg
cmc
mov
repnz
push
in
sub
cwtl
xchg
outsl
push
adc
lds
push
das
mov
psubq
lahf
xor
mov
out
in
in
jge
or
or
scas
fcmovnu
mov
cltd
ja
mov
popa
daa
imul
xchg
push
incl
sub
sbb
aaa
dec
cmp
ja
loopne
test
and
pop
sbb
push
or
imul
adc
pop
leave
aam
bound
mov
push
pop
xchg
aas
mov
int3
loopne
mov
add
test
jg
push
sbb
mov
inc
clc
sub
rol
repz
arpl
fstps
rclb
cmp
out
inc
lret
cli
pop
sub
xor
pop
adc
add
in
inc
xor
test
mov
adc
movsb
cltd
movsb
enter
call
and
dec
mov
mov
test
ja
daa
dec
push
sbb
test
dec
and
jp
loope
adcl
cmp
pop
sarb
mov
stos
inc
push
daa
in
pop
jg
mov
sub
mov
adc
outsb
out
pop
pop
or
jbe
loop
lret
cmpsb
jmp
cld
push
xchg
out
dec
push
mov
mov
test
pop
add
xchg
jbe
xchg
in
jne
pop
jne
pushw
rcl
in
lods
popf
xor
pop
in
pop
aaa
lds
ret
sub
xchg
lcall
dec
adc
ljmp
pop
mov
sbb
xor
push
hlt
dec
test
outsl
mov
clc
cld
adc
pop
inc
mov
stc
or
mov
mov
add
lcall
icebp
imul
mov
cmp
pop
mov
mov
subb
aad
rorb
js
lea
cmpsl
xor
adc
inc
das
xchg
or
jecxz
shlb
push
mov
pop
push
iret
ret
popa
inc
jmp
jnp
nop
stc
pop
or
and
addr16
ja
xor
dec
fbstp
test
mov
bound
repz
cmpsb
shll
xchg
push
sti
int
and
mov
ljmp
lret
and
mov
xchg
in
out
xlat
mov
adc
jns
mov
add
xor
sub
xchg
mov
test
lcall
addr16
mov
mov
xor
and
or
mov
cmpsb
test
xchg
cmp
sub
rsqrtps
xor
fsubrl
fiaddl
leave
or
inc
sti
call
loope
adc
faddl
in
fdivp
movsl
mov
inc
aaa
rcll
aaa
add
jnp
repz
rcr
popa
cwtl
mov
xchg
mov
daa
lret
test
or
lahf
sbb
and
lahf
cmp
push
sahf
popf
pop
lcall
sub
push
cmp
xchg
mov
push
and
out
add
pop
cltd
aas
pop
xchg
out
movsl
dec
pop
stos
std
pop
add
add
into
js
in
lahf
aam
imul
xor
repnz
popl
lahf
dec
adc
nop
push
pop
xorb
add
mov
fsts
int3
aas
imul
sbb
mov
mov
dec
ss
jno
xchg
inc
and
orl
inc
mov
dec
and
cmpsb
outsb
mov
add
dec
out
push
fwait
and
lods
push
ret
xlat
jb
inc
aas
sbb
pop
jp
adc
adc
ja
jp
cmp
in
cmc
mov
inc
loopne
xor
inc
cmp
test
insl
mov
inc
insb
sahf
lds
adc
dec
dec
or
fnstenv
movsl
pop
and
jns
sahf
mov
ret
adcl
fnstcw
xchg
jp
hlt
gs
sti
ret
loop
jmp
pop
sub
mov
addr16
sti
pushf
imul
jp
pop
inc
pop
adc
xchg
add
push
inc
dec
outsl
mov
xchg
push
clc
in
jne
subl
jb
cmp
es
mov
mov
ret
and
and
mov
lcall
cmp
lahf
mov
add
scas
insl
xor
jecxz
ret
inc
xor
scas
test
lahf
add
cmpsb
lods
mov
pop
std
repz
inc
jle
push
fldcw
insb
or
push
cmpsb
mov
pop
movsb
divb
add
fidivrs
out
inc
cmp
jnp
fnstsw
out
in
daa
and
mov
push
mov
movsl
mov
sub
ja
mov
push
mov
idivb
fwait
adc
mov
lea
push
cmpsb
inc
imul
hlt
jno
xchg
lret
and
xor
add
sub
mov
fisubl
in
inc
sbb
mov
mov
mov
jg
push
lret
sub
testb
add
xor
pusha
pop
add
mov
adc
loope
sub
push
add
add
in
aaa
xor
inc
ret
push
std
xchg
inc
mov
sub
mov
movsl
rclb
mov
in
mov
mov
inc
inc
hlt
jmp
divb
mov
js
pop
imul
mov
pop
sub
dec
jle
sbb
fidivl
push
jb
inc
fs
fdivl
mov
dec
jo
jo
mov
imul
insl
icebp
jecxz
sarl
mov
dec
sub
stos
push
repnz
inc
int3
dec
mov
insl
cmp
jle
mov
inc
imul
leave
ret
fiadds
push
add
xor
test
jo
adc
pop
adc
stos
and
fcomps
inc
repz
nop
inc
gs
jmp
mov
sub
sub
cmp
idivb
mov
xor
jl
inc
and
jp
subb
push
int3
mov
add
sub
xchg
les
push
lods
xor
out
cltd
cmp
xchg
mov
or
mov
xor
pop
push
arpl
andb
or
xlat
out
mov
mov
dec
in
sub
sbb
sub
sahf
inc
push
push
rcll
jnp
mov
mov
out
out
mov
outsl
wbinvd
and
testl
je
imul
adc
addl
or
pop
push
loope
and
mov
out
out
stc
jg
mov
movsb
stos
xchg
push
test
adc
ret
iretw
jbe
lds
and
ljmp
push
mov
aas
gs
gs
addr16
daa
mov
loop
popf
nop
pop
mov
enter
adc
push
pop
and
cmp
pop
pop
add
xor
test
xor
dec
bnd
mov
mov
xchg
mov
pop
add
lret
cwtl
mov
pop
mov
insl
in
popa
sbb
adc
repnz
push
inc
sarl
mov
dec
andb
sub
repnz
or
test
jae
ljmp
loop
dec
adc
in
cltd
mov
and
pop
xchg
or
in
xchg
sbb
stc
cltd
ret
test
ret
cmpsb
sti
pop
adc
ljmp
xchg
cld
mov
dec
ret
add
repnz
adc
mov
mov
or
mov
repnz
shl
aam
hlt
mov
xor
xor
hlt
popf
cmp
and
dec
gs
lock
mov
cli
lahf
stos
sti
ss
loope
sbb
lret
cmp
xor
repz
pop
scas
and
stos
push
adc
add
add
repnz
in
pop
xor
and
pop
xchg
test
insb
xchg
jge
mov
sar
add
mov
lods
mov
xor
in
ret
xor
idivl
pop
movsl
clc
lods
jmpw
adc
lods
cmp
cmp
jge
push
fwait
mov
and
adc
cli
mov
mov
clc
ds
and
lods
cli
les
sbb
mov
and
movsl
sbb
pop
jne
in
icebp
jp
or
not
and
push
add
mov
fistpl
cmp
add
mov
stc
push
xor
push
cmpsl
dec
cmp
movsb
jno
sbb
fists
mov
mov
sbb
inc
mov
pop
mov
mov
lea
shll
mov
cs
in
enter
sub
outsb
push
inc
movntps
stos
sbbb
or
cmp
rolb
add
fnstcw
and
add
cs
je
xor
je
push
outsl
and
push
add
or
mov
xchg
push
add
aad
xchg
mov
subl
adc
ds
testl
jbe
mov
mov
pop
sub
ljmp
jle
sub
sahf
popa
mov
mov
fildll
daa
mov
icebp
dec
mov
mov
sub
and
jo
std
xchg
jecxz
int3
insb
jg
mov
scas
adc
dec
mov
lret
cli
adc
lahf
xor
xor
pop
out
push
lock
mov
sbb
popa
lcall
xor
mov
in
jge
jo
mov
test
bound
fadds
cmp
outsb
push
ret
xor
stc
pop
xor
das
insl
mov
adcb
inc
clc
lods
jl
lods
ds
inc
incl
lds
std
sbb
cli
call
popf
dec
movsb
stos
sbb
and
add
mov
in
mov
fsubl
mov
push
xchg
mov
push
mov
stc
stos
xor
xor
cli
pop
sub
pop
ja
popf
xlat
add
jne
lods
jge
sbbl
icebp
xchg
mov
addr16
jge
call
in
or
clc
xor
push
push
lods
cmp
and
faddl
rclb
mov
fldt
sub
push
push
cmp
lock
daa
out
cltd
ror
sub
sbbl
inc
enter
pop
out
or
sub
test
test
shrb
test
pop
loop
xlat
lods
or
dec
inc
or
fs
inc
push
mov
or
and
fsincos
sub
sub
dec
mov
pop
popf
out
rclb
inc
mov
cld
xchg
adc
test
mov
repz
lds
xchg
or
xchg
pop
push
jns
and
push
add
add
jl
inc
and
aas
xor
out
mov
adc
jbe
push
or
orl
or
jnp
mov
sbb
mov
cmp
sahf
es
adc
pop
cmp
decb
xchg
loop
sub
aad
xor
mov
sarl
movsl
cmp
xchg
inc
push
inc
or
cmp
fcomps
or
mov
sbb
adc
push
data16
cmp
sub
in
sub
sahf
or
stos
push
sub
xchg
push
subb
add
fiaddl
or
orl
movsl
fadd
pop
push
dec
lret
call
jecxz
lahf
sub
into
mov
add
sub
insl
jae
pop
clc
add
fiadds
inc
cmp
test
cmp
xorb
test
ss
ljmp
fistpll
pop
xchg
js
outsl
mov
push
std
cmp
jnp
pop
in
repz
out
movsb
mov
sub
fistl
fcomp
xor
sbb
and
leave
mov
jg
lret
repnz
rcrl
repnz
ficompl
or
jl
sub
imul
stos
fs
mov
lcall
das
fistpl
jmp
cmpsb
add
int3
retw
mov
stos
iret
and
add
xchg
dec
test
mov
flds
ljmp
cmpsl
out
mov
jge
cmc
cmp
xlat
mov
cmp
in
popf
xchg
push
repz
gs
push
test
std
cltd
loop
aad
nop
xor
fstpt
adc
and
cmc
jg
insl
xor
fisttps
push
mov
insb
aad
xor
cmp
sub
push
cmpl
sti
cs
cmp
call
pop
inc
lea
lds
sti
into
mov
out
mov
mov
cmpsb
fsub
sbbb
inc
sbb
mov
std
and
aaa
shll
or
daa
sub
lret
or
aad
testb
pop
movsb
movl
test
adc
or
sub
ljmp
cmp
jb
aam
dec
or
gs
jbe
sbb
mov
ja
sbb
push
cmpsl
or
imul
mov
mov
ja
int3
mov
aas
scas
push
cmp
stc
cs
push
mov
pop
repnz
inc
fdivr
inc
sub
scas
xchg
xchg
push
into
and
fisubl
jae
jns
orb
lret
xor
add
icebp
ret
jg
mov
call
pop
push
push
shlb
mov
arpl
dec
fstp
fwait
test
insl
jbe
add
push
mov
xchg
or
dec
cltd
dec
xchg
pop
jno
clc
arpl
jecxz
sbb
in
mov
negl
in
popf
jbe
fistl
icebp
rcrl
push
fistps
leave
cmp
pushf
and
mov
dec
sbb
pop
xchg
or
sub
mov
enter
add
lret
dec
jge
iret
inc
imul
loop
xchg
sbb
jne
jnp,pt
mov
dec
mov
xchg
inc
pop
inc
xorb
cwtl
mov
push
dec
cmp
lds
movsb
lret
push
mov
mov
scas
shr
int3
pop
cltd
leave
add
xchg
sub
push
and
sub
fs
idiv
shll
pop
push
mov
dec
add
sub
sarl
and
int3
adc
sub
repnz
leave
mov
lret
xor
pop
jns
scas
xchg
xor
jmp
xorl
push
push
dec
insb
sbb
cmp
call
fnstsw
shr
stos
cltd
xor
mov
or
nop
mov
sbb
bound
insl
out
fiadds
retw
inc
adc
inc
mov
stc
xchg
ret
sub
and
in
repz
mov
aaa
cs
jne
iret
sub
or
popl
cmpsl
add
aas
aaa
xor
sbb
sahf
ficomps
call
arpl
push
inc
cmpb
int
test
loope
test
jl
or
aaa
iret
hlt
mov
fwait
in
sti
mov
ret
dec
ljmp
sahf
mov
xlat
cmp
xor
lods
inc
fwait
xchg
dec
outsb
push
push
lods
jmp
cmc
mov
jnp
cmp
sub
flds
lods
aad
push
inc
insl
into
or
stos
jl
and
pop
scas
sbbl
sbb
ret
loop
jns
out
xlat
shll
sub
cmp
ret
je
mov
or
adc
nop
in
fisttpll
and
sub
or
mov
mov
das
lock
fmull
or
in
out
out
test
fucomp
les
mov
xchg
mov
fwait
lret
pusha
aad
adc
pop
les
mov
and
repnz
or
imul
in
out
sbb
xor
hlt
ret
push
out
push
dec
cmp
xchg
mov
in
cmp
aas
sub
mov
arpl
push
fimull
imulb
std
mov
xor
pop
js
rorb
ficompl
sbb
addb
pop
or
dec
push
lock
fistpl
pop
mov
mov
fdiv
sbb
stos
data16
jge
jmp
subb
outsb
pop
mov
inc
sahf
or
dec
sbb
push
data16
fwait
lods
lret
les
fsubrs
inc
jg
and
lahf
mov
in
push
add
stos
jae
dec
pushf
fsub
or
adc
fsubrp
sarb
adc
inc
push
popa
pusha
data16
repz
outsl
mov
ljmp
push
dec
mov
cli
push
andb
gs
outsl
and
push
fstps
pop
in
mov
roll
pop
outsb
push
xchg
push
xor
add
xor
pop
out
adc
aad
push
xchg
jmp
lea
loop
iret
shlb
dec
jns
sahf
pop
sbb
pop
out
mov
inc
and
mov
add
lahf
push
push
push
inc
push
cmp
jmp
jbe
rorb
push
jns
push
push
ret
xor
clc
and
pushf
imul
pop
sarl
inc
out
hlt
add
in
dec
divl
inc
mov
dec
dec
inc
jp
dec
push
pop
xchg
jns
add
das
and
ljmp
call
dec
inc
aaa
or
xchg
fiadds
fstl
in
and
jle
jl
pop
dec
shrl
ds
ret
bound
add
cmpsl
sub
testb
lahf
cmpsl
int
jae
dec
sete
mov
dec
scas
jecxz
mov
loopne
mov
pop
cmc
mov
aaa
int3
pop
int
shl
mov
sbb
mov
fistl
jmp
mov
inc
dec
in
inc
rdmsr
dec
popf
movsb
rcll
dec
and
test
lcall
pop
subl
testl
in
inc
in
jne
in
aaa
mov
inc
and
mov
jno
pop
je
or
rorl
add
shl
push
lcall
out
pop
xchg
lret
mov
jge
call
test
cmc
add
hlt
pop
mov
push
gs
push
push
gs
in
cmpsl
mov
and
int
mov
scas
daa
or
das
sbb
out
outsl
push
mov
mov
push
push
mov
ret
dec
mov
shr
xor
jl
jge
nop
xlat
push
adcb
sbb
divb
leave
movsb
mov
pop
jge
sahf
out
cmpsb
mov
pop
xchg
jmp
sti
cwtl
and
test
bound
or
insb
lock
cmp
es
out
scas
scas
cmp
data16
or
in
xchg
push
imul
sbb
inc
pop
jge
insb
adc
dec
mov
lods
jbe
pushf
dec
jnp
mov
movsl
insb
std
inc
sbb
scas
ss
pop
in
adc
mov
in
adc
cmpb
icebp
and
test
scas
xor
sub
mov
cmp
test
test
dec
stos
sti
jg
cmp
sub
or
movsb
test
gs
fucomp
je
jbe
hlt
sti
and
mov
jl
xchg
pop
and
xchg
push
fsubrp
inc
mov
aam
dec
packssdw
dec
xor
repnz
gs
mov
in
aaa
sbb
xor
fldenv
jnp
fstpl
adc
cmp
pop
pop
or
add
iret
ret
add
jne
pop
imul
out
or
sti
mov
loopne
sbb
cld
fistl
pop
das
xchg
das
and
mov
mov
fwait
mov
sbb
pop
jmp
sub
cs
xor
mov
daa
xchg
jae
add
addb
movb
mov
test
int3
lahf
and
or
sub
jbe
out
test
cmpsl
adc
shrl
das
jns
outsl
push
pop
xchg
jmp
pop
inc
mov
fs
jne
pusha
cmc
inc
mov
xlat
icebp
cmp
repnz
pop
out
insl
insb
sbb
mov
lods
ljmp
push
inc
das
and
ds
dec
or
imul
adc
mul
arpl
adc
adc
fadds
call
cmpsl
and
insb
stos
ss
push
lods
loopne
pushf
and
dec
fbstp
hlt
cmpsl
mov
sbb
add
xchg
std
pop
xchg
mov
mov
xor
push
aad
xchg
das
or
dec
pop
pop
and
xor
test
in
and
or
mov
roll
repnz
inc
pop
in
lret
shrl
sbb
inc
push
out
inc
push
add
insb
pop
in
mov
adc
outsb
add
ds
sub
sub
xchg
jo
xchg
jecxz
imul
xor
lods
add
jae
and
or
fucom
xor
stc
dec
das
repz
ljmp
mov
inc
mov
xchg
aam
out
add
adc
inc
pop
lock
in
pop
hlt
inc
pop
jle
adc
cld
sbbb
xor
push
or
sbb
fisubrl
cwtl
aam
mov
dec
idivb
ss
fiadds
in
xchg
mov
add
dec
jl
pop
xchg
daa
xchg
pusha
push
xor
loop
mov
movsl
jp
in
mov
xor
dec
push
inc
sbb
cmp
mov
pop
xor
sub
adc
pop
mov
add
data16
jmp
outsl
pop
mov
add
lcall
jo
pushf
pop
aad
push
pop
movq
jmp
mov
es
push
dec
mov
jge
jb
imul
mov
stos
or
inc
jo
loope
and
sbb
out
inc
pushf
dec
mov
push
nop
or
adc
movsb
fs
mov
push
inc
pop
pop
pop
or
arpl
div
add
and
xor
movsl
inc
enter
jnp
pop
push
mov
adc
in
jb
push
enter
lea
add
mov
rcrl
pop
cmp
sub
lods
ja
jnp
idivl
loope
ds
hlt
mov
dec
mov
ret
outsl
cmp
out
mov
in
aad
mov
jecxz
push
xchg
popa
clc
punpcklwd
js
bound
push
lahf
fnsave
inc
repz
gs
lret
insb
xchg
mov
mov
daa
or
stos
in
js
sbb
push
cmpsl
in
add
lods
in
popa
mov
cmp
popf
orb
mov
pushf
imul
sub
xor
fcoms
xchg
jmp
xlat
sub
mov
scas
or
add
sahf
mov
dec
lcall
inc
jle
je
das
popa
inc
scas
out
cld
fidivrs
add
cmp
add
out
je
sub
xchg
lock
test
adc
pop
cmp
jae
push
xchg
ficompl
out
fimuls
or
jae
lods
push
loope
dec
adc
pop
xchg
int3
xchg
push
sbb
fcompl
loop
shl
sti
mov
jmp
inc
mov
mov
pop
sti
pop
arpl
hlt
xchg
or
sarb
pop
outsb
ret
fnstcw
push
scas
jl
movsl
and
add
adc
cli
aas
sahf
rcl
sbb
mov
push
jmp
adc
pop
add
test
repnz
cmp
push
pusha
inc
cmc
fwait
outsl
push
cwtl
jp
pop
push
add
mov
rcl
jno
out
jo
fisttps
and
lods
adc
mov
cmp
adc
aad
notl
add
fucomp
inc
es
jnp
fdivrl
mov
out
movsb
cwtl
inc
pop
sahf
ret
jmp
clc
jno
scas
ficomps
aas
pop
movlps
inc
lret
push
shl
lcall
sub
and
cmp
push
xor
gs
mov
leave
or
stos
or
dec
loopne
je
pop
xchg
inc
mov
pop
cmpsl
fists
add
xchg
inc
rcll
mov
pop
loope
inc
dec
push
out
xchg
push
inc
aam
jbe
dec
push
push
outsb
aas
cmp
mov
adc
movsb
test
jne
sub
sahf
subl
mov
hlt
cmp
mov
aas
xchg
movsb
aad
out
outsb
sbb
out
cmp
insb
xor
movsl
sbb
push
xchg
mov
mov
aad
mov
sub
movsl
pop
mov
in
push
pop
jnp
push
xchg
mov
movsb
ficoms
xchg
test
fldt
push
pop
jge
push
clc
mov
and
push
insl
mov
mov
lret
iret
hlt
cld
pop
sub
xchg
pop
or
adc
xorb
out
inc
jb
push
pusha
cmpsb
out
add
push
jbe
jge
pusha
pushf
mov
std
lods
in
leave
cmp
and
adc
or
test
sbb
dec
fiaddl
mov
jnp
outsl
fiadds
cmp
and
popf
add
nop
lret
sub
inc
in
lret
dec
pusha
fisttps
arpl
and
outsb
inc
xor
sub
push
jo
push
sti
pop
jmp
rcll
stos
sbbb
or
js
cmpsl
ret
dec
addl
clc
dec
mov
call
mov
sub
mov
cmp
mov
xchg
test
pop
pop
loope
sub
nop
push
loope
sub
rcll
jnp
pop
inc
xchg
push
dec
and
sub
push
mov
pop
or
out
popa
or
aam
cmpsl
jo
lods
pop
jne
xor
push
mov
out
imul
inc
movl
ret
mov
arpl
fwait
shlb
add
out
push
jp
add
mov
adc
jne
cwtl
insl
imul
cmp
rorl
stc
test
inc
cltd
fnsave
mov
xchg
out
adc
dec
adc
mov
arpl
popf
mov
sbb
out
mov
inc
leave
push
adc
iret
mov
aam
mov
es
jge
repnz
popa
sub
cmp
xchg
out
and
xchg
adc
mov
js
ret
cmp
imul
lock
dec
test
js
fidivrs
pop
enter
sub
jb
xor
fildl
nop
movsb
dec
or
scas
xchg
loopne
xchg
fisttpl
lcall
pushf
outsb
adc
add
shr
enter
nop
add
xchg
xchg
outsl
dec
lods
mov
cmp
add
into
cwtl
jno
cmp
mov
mov
jmp
push
xchg
aaa
fwait
insl
push
add
mov
daa
lods
lahf
aas
ds
pop
inc
enter
scas
les
lock
jmp
dec
push
das
adc
mov
stos
pop
mov
pop
movsb
sub
mov
fs
inc
adc
fimull
pusha
cmp
pop
mov
push
imul
das
lcall
inc
xor
loope
mov
aam
mov
inc
lods
jmp
mov
cltd
inc
xor
push
cli
popf
fnstenv
cli
push
xchg
push
sub
push
cli
stos
lods
movsb
fildl
mov
pop
shlb
loopne
loop
xlat
in
ret
xlat
mov
push
dec
cmp
repnz
inc
cmp
or
xchg
cmp
das
mov
inc
xor
push
and
jle
popa
std
adc
lret
ret
sti
mov
lahf
aaa
sub
xor
pusha
cmpl
fwait
sahf
xchg
xchg
out
mov
mov
mov
aas
icebp
icebp
inc
ret
mov
cwtl
cmpsb
imul
je
loopne
aaa
mov
aaa
pop
adc
stc
lock
pop
inc
pusha
sub
fcmovu
pop
arpl
outsl
pop
in
stos
mov
outsl
inc
insb
leave
scas
jmp
adc
sbb
out
xchg
fnstcw
sbb
cltd
dec
pusha
add
xchg
insb
pop
cltd
mov
lret
xlat
jo
movsl
aad
loopne
std
lds
push
jnp
enter
cmpsb
xchg
sub
xchg
shll
dec
jne
test
lcall
inc
outsb
mov
dec
cmp
out
and
sbb
cmp
aam
cltd
lcall
shlb
push
test
rcrb
cld
cltd
mov
rcrl
cld
pusha
pop
jno
imul
and
inc
sti
test
dec
sti
inc
int3
push
lea
out
out
icebp
mov
add
dec
and
sub
lods
in
stos
mov
xor
test
lcall
outsb
lods
jbe
and
cmpsb
pop
or
or
aas
pop
push
je
dec
ljmp
mov
xor
das
gs
daa
dec
jg
xchg
shrl
mov
popa
push
pusha
xchg
adc
popa
pop
xchg
sub
aad
or
loop
shrl
xchg
stos
and
xchg
and
jno
or
cmp
ljmp
jns
movsb
cmp
sub
or
leave
adc
or
xor
movsb
fidivs
xchg
pop
push
inc
cld
jl
rorb
xor
pop
push
mov
xlat
lds
jne
out
xor
mov
mov
xorb
or
in
sbb
in
xor
leave
inc
xchg
push
xor
je
mov
int
jl
inc
adc
jle
pop
push
aas
icebp
dec
aas
mov
lahf
mov
fdivrl
dec
or
or
fwait
push
inc
loope
movsl
fdivr
xchg
adc
and
xlat
and
xor
lret
add
lods
inc
and
mov
stc
inc
sub
sar
cmp
insb
insb
xchg
int3
push
and
js
jbe
in
xor
insl
jg
and
into
stos
pop
jg
ret
and
loope
fiaddl
and
fbstp
outsl
xchg
xchg
push
pop
pop
adc
mov
inc
icebp
add
popa
or
pop
outsl
push
aam
inc
inc
inc
out
cmp
mov
scas
xor
pushf
addr16
idivl
enter
sub
sub
or
mov
neg
test
xchg
sub
jnp
push
xor
sub
ret
shl
out
loop
pop
xchg
add
js
push
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
and
addl
aam
adc
push
push
mov
inc
fbld
dec
lock
or
pop
xchg
pop
xor
inc
int
and
es
js
mov
push
inc
add
adc
sbb
rolb
and
push
jno
popf
rorl
ja
nop
mov
pushf
aam
pop
inc
adc
jno
clc
cwtl
lock
xlat
js
ret
inc
or
out
jmp
dec
inc
push
out
ja
jnp
fwait
mov
sahf
xchg
dec
mov
mov
int3
js
loope
mov
jns
inc
cs
ljmp
imull
scas
push
pop
je
pop
in
sbb
ss
mov
pushf
rol
ja
neg
pop
enter
sbbb
icebp
xchg
arpl
sub
sub
jmp
sar
sub
or
js
fistps
cmpsl
xlat
bound
adcl
mov
imul
pop
pop
jb
inc
sbb
dec
pop
pop
adcl
sbb
sub
sub
mov
stos
or
xor
push
push
push
mov
jmp
movl
and
data16
mov
sub
cltd
pusha
and
mov
in
adc
sub
mov
mov
pushl
sub
push
mov
cs
test
push
fisttpl
sbb
cld
add
fstpt
mov
mov
pop
subb
cmc
ret
xchg
sbb
rorl
mov
pop
or
fdivr
cmp
add
outsl
fadds
push
push
cmp
adc
xchg
std
outsb
mov
rorb
lea
mov
ror
or
mov
gs
fwait
movsb
jmp
pushf
xor
inc
push
cmp
add
push
imul
lea
gs
mov
cmp
jp
cmp
mov
mov
subl
hlt
adcb
inc
icebp
jb
shl
jge
and
ja
xor
gs
inc
into
aas
inc
xor
loopne
iret
pop
mov
or
rorb
imul
cmp
cmp
int
dec
xchg
dec
push
mov
inc
ret
lds
out
push
aas
pop
pop
mov
movsl
sub
inc
adcb
push
rcrl
jbe
dec
sar
test
jnp
jg
xchg
divl
shlb
xchg
test
pop
int
bnd
sbb
mov
notb
sub
inc
xchg
and
popl
add
sbb
mov
daa
js
leave
mov
mov
inc
mov
xchg
cmp
mov
out
ret
xor
sbb
jg
xchg
inc
push
dec
jg
movsb
les
jecxz
lock
in
movsb
jnp
push
popf
outsb
jmp
jge
add
shl
bound
repz
flds
cltd
incl
sahf
dec
jmp
stos
cs
push
in
dec
add
sbb
stc
sub
jnp
loopne
pushf
adcl
pop
popf
mov
add
xor
xlat
in
int
hlt
or
cmp
pop
lret
sub
xchg
cld
ljmpw
adc
jl
fstpl
push
ljmp
insl
pop
and
cmp
icebp
ds
sub
mov
in
popa
rcl
xor
jle
arpl
mov
add
lret
add
sbb
mov
rcrl
stos
lods
mov
mov
jg
lret
stos
shl
fidivs
lahf
std
mov
dec
xlat
fisubs
mov
dec
or
pop
insl
lods
dec
dec
js
leave
ja
das
add
dec
jne
hlt
mov
sub
add
test
mov
push
test
ss
sarl
insl
mov
lds
dec
shll
test
push
imul
mov
outsb
and
xor
or
mov
push
or
push
out
mov
lds
dec
sub
mov
jp
outsl
xor
inc
or
enter
nop
lret
scas
out
out
cmp
ljmp
mov
pop
imul
lret
pop
rcrb
mov
stos
in
or
movsbl
aaa
fstl
icebp
fsubs
jb
js
and
aad
scas
jo
sbb
jp
ss
add
imul
jo
test
andb
mov
idivl
cmp
sub
push
mov
pop
ret
mov
push
add
pop
cltd
dec
shufps
jg
sbb
mov
rcrl
mov
pop
pcmpeqw
shlb
jge
paddw
loop
pop
mov
fidivl
addr16
pop
loope
mov
cmp
in
add
and
outsb
dec
sbb
rcrb
and
pop
mov
fsubrl
loope
jecxz
dec
mov
sbb
data16
mov
mov
rcll
sub
fucompp
imul
pop
mov
sbb
fst
ret
aam
jecxz
hlt
add
push
and
in
xchg
scas
jp
mov
adc
repnz
stos
gs
xor
iret
add
pop
dec
sub
mov
out
mov
scas
adc
mov
aaa
adc
inc
push
jle
shl
rorl
or
fiaddl
lea
loope
test
xchg
into
sbb
xor
or
in
mov
mov
iret
sbb
sub
sub
push
sbb
add
in
in
xchg
xor
mov
sbb
in
montmul
cmpsb
es
loope
mov
movsb
dec
dec
enter
mov
sti
mov
aas
js
and
xchg
mov
mov
repnz
jnp
ds
shrl
xchg
push
imul
mov
subl
punpcklwd
pop
stc
xchg
lahf
fadds
lcall
or
push
lea
add
mul
sbb
dec
xchg
push
pop
nop
addb
mov
mov
pop
pop
jp
enter
aad
xchg
cmp
dec
adc
lcall
xchg
pxor
cmpsl
addr16
jae
mov
test
lcall
addr16
cwtl
jbe
std
loopne
mov
test
xchg
repz
mov
inc
dec
les
mov
and
xor
lods
jns
scas
scas
add
gs
ud2
jo
inc
stc
xor
jl
mov
xchg
inc
xor
pop
enter
mov
dec
addr16
in
aad
out
cmpsb
lahf
in
gs
sub
xchg
enter
addb
subb
jl
scas
or
daa
adc
and
pop
jno
adc
and
out
ret
mov
ret
cwtl
frstor
add
movsl
pop
xchg
mov
dec
or
sub
stos
call
cltd
pop
movsl
pop
ds
push
push
mov
rcrl
adc
mov
pop
mov
fdivrl
test
in
mov
xchg
std
pop
mov
mov
cmpsl
jecxz
cmpsl
inc
test
cmpsl
jae
lds
xor
cmp
xchg
outsb
mov
data16
fistpll
daa
mov
divb
pop
popf
mov
out
and
mov
jl
outsb
push
sbb
sbb
push
icebp
stos
xchg
add
popf
cltd
and
mov
mov
xchg
sub
sbb
movsl
sahf
js
add
div
push
fisttpl
in
inc
stos
or
popf
pop
stos
jp
xchg
enter
mov
xchg
or
insb
sub
sbb
cmp
xchg
arpl
movsb
mov
cmp
loope
enter
jno
imul
in
ss
cs
pop
notrack
pop
movsl
ret
jne
mov
mov
xchg
push
call
mov
adc
test
psubusw
orb
insl
push
mov
adc
xchg
mov
mov
repz
hlt
adc
lods
jnp
mov
sbb
ret
out
movsb
mov
or
test
or
loop
bound
pop
addb
out
xor
jo
jbe
dec
insl
fstps
fiaddl
in
jl
into
inc
mov
int3
add
push
pop
adc
xor
sti
add
push
or
roll
adc
leave
mov
lods
imul
imul
cmp
lahf
mov
push
cmp
ret
in
adc
adc
xor
gs
jae
and
xor
sub
scas
shrb
and
fistl
inc
pop
pop
not
xor
push
adc
lods
and
cli
mov
cmp
mov
nop
shll
sub
imul
mov
sahf
ss
mov
push
mov
ja
rclb
xlat
sbb
stos
adc
dec
mov
pop
fisubl
fdivl
dec
push
adc
insl
outsl
aas
push
mov
into
pusha
or
sbb
scas
jmp
sbb
cmp
cmc
lods
cmpsl
push
daa
sarb
loopne
aad
rorb
imul
and
adcl
inc
insb
and
and
insb
popa
adc
cld
stos
and
jbe
ret
sbb
pop
jg
adcl
std
and
outsl
rol
dec
in
push
push
ljmp
div
cwtl
lds
jo
data16
scas
test
push
mov
adc
cwtl
xor
mov
mov
loopne
call
push
fld
loopne
push
lock
adc
mov
or
mov
cwtl
sub
mov
cmc
dec
out
pop
push
dec
dec
or
ffreep
jecxz
test
outsl
imul
push
movsl
jmp
in
pushf
out
sbb
lock
push
stos
sbb
or
push
nop
vpaddw
jecxz
mov
cmp
mov
je
xchg
and
add
mov
pop
addr16
dec
add
mov
clc
jns
or
lods
push
push
dec
mov
jg
jo
popa
je
dec
push
shll
mov
int3
ds
fiadds
rorb
loop
orb
push
and
pushf
dec
sti
sbb
dec
sub
add
push
mov
movsb
sub
cld
lea
xor
lods
cmpsl
adc
gs
outsb
jge
add
dec
sbbl
cmp
xchg
iret
mov
ja
mov
dec
outsb
jmp
pop
dec
loop
dec
dec
adc
lock
aad
loopne
nop
scas
repnz
outsb
roll
pop
sbb
in
popf
mov
dec
mov
inc
pop
pop
and
mov
mov
imul
xchg
test
int
movsb
loopne
jno
rorb
inc
outsb
lahf
inc
and
js
dec
xor
sahf
mov
in
pop
dec
jno
call
xchg
adc
testw
cmpsl
pop
aas
jae
test
and
sub
movsl
imul
sub
imul
push
jmp
xor
notl
pop
pushf
lock
scas
call
imul
bound
fs
add
ret
or
jbe
dec
sub
cs
add
xor
test
inc
out
xor
ret
bound
into
or
sbb
and
cli
mov
adc
iret
loop
fiaddl
and
mov
jbe
mov
or
or
and
adc
dec
adc
or
test
lret
call
xchg
push
add
test
cmpsl
outsl
repz
insl
xor
xor
mov
test
mov
jmp
test
pop
pop
shl
push
push
fidivrl
mov
jl
push
or
cmpsb
sub
pop
jg
out
mov
lcall
daa
add
and
adc
das
xlat
or
in
sti
xor
fs
call
push
jne
fnstcw
dec
fsubrl
adc
lret
xchg
stos
ret
lds
jns
outsl
cld
ret
xchg
xchg
xchg
push
dec
inc
push
je
clc
mov
jg
or
add
add
daa
orl
pushf
inc
fs
xor
scas
push
out
sbb
mov
aam
call
js
enter
lcall
test
add
add
jg
mov
sub
push
sbb
out
js
add
push
or
add
mov
std
data16
ljmp
lods
repnz
xchg
cmp
mov
and
cmc
dec
dec
in
jb
les
lods
nop
pusha
mov
push
add
sbb
adc
outsl
ja
and
cld
xor
insb
add
xchg
and
inc
dec
dec
and
xor
int3
cmpsl
les
data16
popf
out
gs
pop
inc
lods
incb
xor
lret
add
inc
incl
repz
dec
mov
lock
jbe
adc
push
pop
sub
out
test
pusha
rcr
lret
pop
cmp
pop
or
in
imul
pop
sysexit
inc
mov
xor
ja
push
push
scas
sub
sbb
or
das
mov
cmpsl
pushf
mov
inc
or
inc
mov
movsb
add
movsl
loop
and
dec
jno
fidivl
push
sub
cmp
jmp
arpl
sub
nop
dec
lcall
push
inc
sub
inc
aad
stc
jno
addr16
out
mov
lds
loopne
xchg
xchg
or
pop
aas
imul
call
jle
dec
loop
cld
fidivs
and
cwtl
jge
movsl
out
sbb
imul
fcompl
sbb
xor
aam
insl
je
dec
imul
cli
adc
ret
xchg
adc
addr16
repz
jae
aas
inc
lcall
es
xor
cmpsb
lods
pop
mov
and
out
sahf
pop
cmp
aas
movsb
fisubl
ljmp
inc
add
pop
mov
ljmp
push
mov
pop
xchg
dec
xor
push
mov
jo
jmp
push
dec
cmpsl
mov
sbb
int3
sub
leave
pop
fildl
ljmp
cmp
push
sub
pop
loope
xchg
cli
xchg
jmp
orl
test
sbb
jnp
lret
mov
scas
push
xchg
mov
movsl
es
pop
or
or
lret
pop
cmpsl
jmp
and
adc
sub
pop
lahf
mov
stos
xchg
mov
mov
out
rol
fistpll
push
push
inc
movsl
movsb
loop
lock
fsubrl
jle
pop
out
inc
and
sbb
aaa
outsb
es
inc
push
in
and
lahf
mov
int
cmp
sbb
fnsave
call
mov
and
pushf
push
mov
and
lds
imul
cmp
lods
loop
jg
or
jecxz
sbb
mov
jns
shrb
dec
lahf
roll
add
dec
shrb
adc
jbe
popa
sti
leave
cs
fwait
mov
mov
mov
jno
xchg
xchg
mov
hlt
jno
mov
daa
push
mov
push
cmpb
cmp
imul
cmpsl
sti
xchg
fistpl
outsb
pop
das
pop
or
loopne
out
sub
in
fmuls
ftst
push
dec
adc
inc
push
stos
mov
jno
cli
adc
cmpsb
mov
xchg
xchg
mov
push
or
sub
or
cli
cmp
cmp
jp
inc
sbb
fstpt
mov
mov
insb
xlat
mov
loop
ss
sbb
lock
fisttpll
sub
outsb
mov
hlt
dec
das
in
cld
clc
enter
dec
xchg
ds
pop
and
ficoms
mov
or
jg
cmp
mov
jecxz
insl
or
imul
mov
or
cltd
loope
inc
mov
fnstenv
sbb
insl
push
or
shl
xlat
mov
in
repz
iret
aas
in
out
push
jecxz
pop
test
inc
aaa
cmpsl
outsb
adc
and
push
mov
ljmp
sub
fs
imul
mov
fsubrs
data16
jle
lds
dec
pop
mov
mov
aas
xor
mov
movsb
xchg
outsl
mov
aam
mov
adc
in
loop
mov
cmpsb
mov
mov
sbb
in
xorl
ja
xchg
js
sbb
push
mov
je
sub
push
loope
cltd
mov
adc
sub
loopne
inc
mov
pop
or
xchg
inc
cmp
test
adc
hlt
cmpsb
repz
and
repz
xchg
fwait
sub
fstpl
ret
and
pop
inc
jnp
sub
dec
lret
dec
out
mov
clc
bnd
xchg
jl
ret
in
icebp
jmp
arpl
sub
popa
fnstenv
inc
stos
ljmp
mov
cmp
add
pop
pop
jl
mov
loopne
add
testl
sbb
fisttpl
mov
xor
and
pushf
fadds
cmp
sbb
leave
jle
ljmp
adc
xor
sbb
rcll
imul
cvtps2pi
sti
push
jle
imul
push
addr16
fcmovnu
sub
xchg
jns
xchg
push
test
fmull
sbb
jbe
pop
test
pop
loopne
cwtl
test
notb
pop
adc
iret
lret
push
clc
push
shrb
test
inc
cmp
cmpsb
int3
inc
lea
jg
std
mov
mov
out
xor
test
sub
dec
ss
jae
test
push
and
pop
xchg
mov
in
out
js
or
push
sti
insb
dec
sub
clc
cwtl
in
mov
inc
dec
or
adcl
sub
js
popf
sub
test
push
jne
pop
dec
add
cmp
cmp
push
jbe
fadds
mov
add
out
adc
in
int3
imul
imul
in
cs
lgs
dec
adc
icebp
out
inc
xchg
pushf
and
inc
add
jne
in
or
xchg
cwtl
icebp
in
mov
mov
scas
or
sahf
jb
sub
insb
mov
mov
inc
sbb
shlb
nop
data16
arpl
test
jecxz
and
aad
jnp
dec
test
jne
mov
lods
js
mov
scas
pushf
xchg
jo
mov
test
arpl
paddd
pop
mov
xor
cli
dec
dec
shll
scas
pushf
mov
ja
and
cmp
std
mov
jne
popa
cmc
icebp
mov
imul
gs
pop
mov
inc
mov
mov
fwait
pop
jae
cs
mov
push
sub
fnstcw
outsb
cmp
fbstp
jge
std
call
jno
lock
popa
test
ja
mov
pop
lods
scas
popa
in
repz
jo
xchg
sti
cmp
ljmp
jmp
fmuls
dec
xor
adc
xchg
fistpll
sbbb
jle
dec
pop
stos
pop
inc
insb
adc
jle
iret
imul
mov
push
in
sbbb
sbb
cmpsb
stc
gs
pop
movsb
adc
mov
sbb
jns
daa
hlt
lds
push
sbb
sub
mov
nop
inc
iret
lret
and
pop
ja
lahf
frstors
gs
mov
mov
fdivl
sub
test
cmpsb
add
shr
out
xorb
ret
loope
shlw
mov
fucomip
jge
jne
lds
pushl
je
jecxz
imul
dec
cwtl
dec
push
stos
sti
pop
adc
fs
push
in
push
jmp
aas
in
cs
mov
cld
xor
xor
push
xchg
pop
bound
mov
dec
das
xchg
cmc
jmp
repnz
in
popf
mov
and
hlt
push
add
shrb
hlt
lds
mov
mov
nop
add
stos
pop
clc
bound
sbb
mov
or
rcr
fimuls
outsb
and
and
testb
lock
jb
cmpsl
int
movsl
add
mov
cld
out
xor
mov
mov
outsb
inc
push
push
dec
popa
cmp
fldcw
xor
cmp
dec
jae
mov
push
lret
mov
pop
cmp
jbe
and
faddl
sbb
sbb
jl
enter
jg
mov
jge
mov
and
dec
ds
xchg
mov
add
aas
xor
sbb
push
pop
loopne
adc
insl
bound
test
lods
in
int3
xor
mov
xlat
negl
das
insl
sbb
inc
push
and
mov
insb
addr16
out
fstpl
push
test
pop
in
loop
movsb
or
scas
pop
stc
push
sbb
std
repnz
cmp
in
push
cmp
mov
aad
and
add
sbb
mov
cmp
arpl
lods
push
jge
mov
jb
mov
loop
shr
mov
pop
imul
jo
pop
and
sub
mov
push
push
xchg
dec
test
mov
add
out
xchg
jmp
fwait
jo
scas
iret
xor
lret
xor
inc
and
decl
pop
jmp
jno
sahf
ret
and
icebp
pop
gs
cmp
imull
mov
outsb
test
fiadds
sbb
or
mov
mov
mov
sbb
inc
pop
fidivrl
jno
push
and
adc
shlb
jns
stos
inc
jmp
pop
mov
jle
test
cmp
es
movsb
sub
pop
inc
icebp
add
mov
nop
xor
or
pop
xchg
jae
testb
sub
pop
pushl
mov
aaa
sub
mov
movl
jl
jno
mov
sbb
adc
mov
push
pop
ret
add
imul
decb
lret
scas
jne
mov
fwait
pop
gs
in
mov
cmpsb
pop
adc
call
rolb
cltd
je
fs
adc
movsb
xchg
adc
out
cmpb
mov
pop
sub
je
pop
pop
adc
pop
and
dec
add
and
adc
cmp
addr16
inc
jns
lods
and
push
setno
pop
jle
sub
cli
inc
and
and
mov
dec
inc
lret
fsubrs
int
js
dec
adc
add
enter
or
lret
ret
jg
inc
sbb
xchg
out
sub
sahf
add
dec
mov
push
xchg
push
cmp
lods
push
imul
cmp
sbb
popl
inc
or
mov
lahf
mov
fwait
and
in
test
into
lcall
call
scas
call
and
mov
mov
cli
jge
jp
mov
pop
insl
cmpsl
or
pop
sub
insl
int3
imull
xchg
mov
xor
loopne
mov
xorl
ljmp
sub
dec
test
add
rcll
bnd
lret
dec
es
rorb
add
lret
inc
lock
imul
out
rcrb
xchg
in
push
jns
xchg
jle
sahf
push
push
cmp
int
adc
push
insb
or
inc
jge
test
cli
push
jg
stos
pop
test
and
cwtl
mov
cwtl
pop
dec
mov
scas
pop
fisubs
sub
aad
xchg
in
outsb
aaa
xor
add
push
jno
inc
pop
scas
dec
je
sub
sbb
sarb
push
or
sub
sub
add
mov
pop
jp
sbb
fisubs
ret
adc
shl
aaa
popa
add
pop
push
nop
outsl
lahf
jns
test
fiadds
sbb
cli
mov
mov
test
loope
sbb
data16
mov
inc
push
movsb
mov
xor
jge
jl,pn
mov
add
adc
xchg
dec
or
jns
xchg
xchg
jmp
xlat
clc
roll
or
dec
leave
dec
cwtl
ss
mov
ss
and
xlat
xchg
cmp
stc
scas
or
jl
jb
and
sub
cltd
stc
popa
cld
ljmp
call
fcmovne
aad
mov
push
mov
retw
out
xchg
ja
arpl
mov
cltd
cmp
out
mov
xchg
adc
sbb
ror
pop
cmp
addr16
out
es
loopne
xchg
sub
push
and
pop
loopne
jo
hlt
mov
daa
inc
inc
call
icebp
sarb
lret
pop
jno
add
push
and
rolb
inc
imul
mov
inc
jo
scas
fldl
sub
stc
imul
repz
test
fwait
data16
xchg
js
in
push
cs
ds
mov
cwtl
xor
sub
dec
cmpl
mov
mov
mov
mov
jg
pushf
xchg
jl
sub
lods
cmpsb
or
or
rcrl
ret
inc
idivb
scas
out
xor
push
inc
mov
loope
mull
mov
das
xchg
outsl
xor
aam
bnd
jnp
arpl
pop
adc
dec
inc
mov
adc
jne
or
cmp
jp
jo
movsl
aas
mov
sub
jle
inc
jge
cmc
xor
pop
xor
ds
xlat
call
jg
in
xor
mov
mov
out
sub
mov
jae
xchg
sahf
cs
or
cmp
adc
sub
or
sub
inc
rcrb
push
fisttpl
lods
sub
pop
out
inc
or
lea
stc
inc
cld
pop
lock
adc
adc
loop
scas
push
repnz
popf
cmp
or
sbb
jbe
pushf
xor
jns
into
mov
lcall
mov
and
mov
dec
test
jo
repz
and
xor
loope
lret
daa
aaa
and
dec
icebp
daa
ljmp
mov
mov
nop
mov
pop
cs
jmp
sbb
xor
mov
inc
loope
push
push
push
fimull
rol
ret
mov
pop
cmp
lock
lcall
std
in
pop
imul
add
out
push
pushf
ljmp
mov
cmp
adc
dec
imull
ret
dec
push
and
das
push
xor
lods
adc
lds
jbe
xchg
push
test
fisttpll
repnz
aam
stc
lret
jle
mov
lcall
fisubl
test
mov
cmp
inc
int3
mov
sbb
insl
into
mov
mov
xchg
adc
jbe
adc
inc
jb
add
enter
cwtl
into
mov
inc
lcall
jbe
sti
out
mov
push
clc
sti
into
mov
roll
sbb
pop
pop
mov
mov
pop
xor
es
mov
pop
add
push
loop
lcall
sbb
jno
leave
pop
gs
mov
xor
mov
cmpsb
mov
jmp
jle
pusha
lds
sahf
imul
stos
dec
jbe
bound
adc
xor
icebp
sub
stos
fimull
sbb
stos
sbbb
add
out
add
jo
sub
das
ret
pusha
xchg
pop
sbb
inc
pusha
cmpsb
dec
out
adc
mov
dec
xorb
outsl
stc
test
mov
in
inc
adc
into
cmp
xor
inc
inc
lods
dec
imul
dec
jl
stos
in
imul
outsl
adc
nop
inc
in
pop
cs
enter
daa
out
pop
das
jb
lret
ror
cmp
aad
outsl
mov
imul
insl
push
lret
in
xchg
xor
gs
xchg
cmpsl
or
and
scas
rcl
and
fs
stos
outsb
push
sub
cmp
lahf
xor
mov
rcrl
int
insb
aas
in
std
push
pop
pop
mov
loop
fwait
push
fs
or
fildll
xchg
inc
mov
ret
lock
dec
faddl
dec
scas
mov
pop
les
sbb
jnp
stc
lods
enter
aad
mov
lea
and
or
inc
fcomi
cmc
fdiv
int
and
data16
sbb
cli
sub
aas
inc
popf
dec
xchg
cmc
std
push
adc
xchg
in
sbb
jg
in
pop
cmpsb
test
into
cli
fistps
and
and
xor
adcb
adcl
mov
xchg
sub
push
gs
popf
sub
loopne
rorl
iret
iret
nop
lret
xor
mov
xchg
aad
mov
test
add
add
inc
sub
std
out
jno
pop
lds
mov
cld
xor
hlt
mov
xor
and
adc
stos
aaa
mov
fs
movsl
sub
and
pop
or
aam
dec
stos
fdivrl
clc
mov
mov
xchg
pop
popa
and
push
daa
and
in
cmpsb
es
loope
cmc
ss
add
scas
inc
pop
mov
ror
ja
inc
mov
pop
mov
inc
push
pushw
add
hlt
push
mov
imul
loope
push
cmc
cmc
mov
inc
push
mov
rcrb
push
or
or
xor
test
mov
sarl
sbb
and
dec
mov
xor
ret
push
out
and
movl
sahf
or
jg
sti
mov
mov
hlt
mov
xchg
call
pop
pushf
pop
out
jge
subb
scas
sbb
mov
popa
shlb
lods
push
sub
sub
add
mov
and
jnp
loop
cmp
negl
aam
xchg
jecxz
jb
pop
jo
and
insl
test
pop
sahf
bound
mov
xor
stos
es
ljmp
cmpsl
push
test
jb
pop
icebp
inc
pop
add
mov
or
inc
and
imul
xchg
movsl
dec
lret
jno
bound
aam
and
sub
scas
les
fisubs
fisttpll
xlat
mov
pop
dec
cmp
dec
adc
aas
aam
inc
and
inc
outsl
sbb
fistpl
fcomps
mov
icebp
pop
shll
add
lods
sarb
push
test
push
push
or
pop
stc
in
pop
enter
das
adc
dec
mov
mov
or
popf
into
fidivrs
mov
loopne
cli
cwtl
iret
call
and
pop
jb
xlat
outsl
push
dec
roll
mov
xchg
lods
out
fiadds
mov
xchg
mov
inc
mov
test
sarb
push
imul
mov
jb
in
mov
inc
bound
mov
and
mov
fs
stos
mov
loopne
les
ljmp
xor
imull
jl
aas
mov
arpl
shll
sbb
sub
pop
mov
fidivl
call
xor
sub
xchg
or
pop
jb
pushf
loop
hlt
add
aas
jl
popf
fwait
lea
inc
daa
mov
sbb
loopne
dec
sub
push
adc
movsb
test
stos
and
add
les
push
push
dec
push
jns
addl
popf
ljmp
hlt
add
rcll
lret
cmp
out
lret
mov
loopne
std
inc
inc
cmovg
xor
icebp
pop
xor
inc
adc
test
pop
lods
ja
sub
push
and
jmp
jg
pusha
into
clc
aam
mov
mov
jp
pushf
repnz
ja
push
sbb
imul
sub
icebp
movl
xor
xlat
sub
pop
popf
add
cmpsl
push
int
jb
sub
in
roll
xchg
shll
push
pop
aas
hlt
jnp
je
mov
nop
pop
inc
push
sete
jnp
inc
add
push
or
push
pushf
xor
sub
cltd
xchg
sub
divb
xlat
dec
push
fcmovbe
add
jo
mov
inc
cld
inc
lret
popf
xor
sbb
add
or
lcall
mov
test
iret
scas
imull
lahf
mov
xor
mov
jecxz
jl
lock
addl
cs
sbb
cmp
stos
hlt
stos
imul
mov
in
mov
insb
add
movl
xchg
mov
xor
cmpsb
lods
push
jmp
shll
test
or
xchg
stos
lock
xor
out
mov
jg
test
dec
ja
dec
stos
add
ss
hlt
adc
or
and
fwait
xchg
and
ret
inc
cwtl
shrl
test
add
xchg
pop
lret
jecxz
cmp
cmp
out
mov
popa
and
cmp
dec
aad
imull
mov
sub
cld
clc
mov
sub
and
dec
xchg
mov
call
mov
xchg
and
jnp
and
dec
mov
xchg
iret
xchg
push
mov
and
idivl
pop
cs
imul
mov
cld
mov
test
out
xchg
shl
addr16
je
jmp
movswl
mov
inc
sub
loopne
mov
scas
mov
lock
jl
mov
faddl
sbb
xchg
inc
lods
shlb
pop
shl
mov
jg
mov
mov
lahf
mov
fdivl
pusha
movsl
adc
xor
fs
cmpsb
and
add
out
cmp
lahf
adc
jne
cli
adc
dec
cmc
call
and
imul
das
xor
push
mov
ret
push
pushf
mov
and
dec
mov
jmp
int3
cmpsb
movl
enter
adc
mov
jnp
mov
and
inc
jnp
lret
mov
mov
pop
jb
adc
call
aas
pop
sbb
push
pop
adc
cmp
push
pusha
lea
push
imul
fbstp
cmpsl
sbb
test
std
or
inc
push
lret
pusha
mov
repnz
xchg
or
call
add
pop
adc
sbb
enter
sub
or
int3
fbld
push
mov
and
das
mov
iret
ret
adc
cwtl
cld
jne
rcll
leave
or
add
cli
test
and
mov
andb
mov
cmpsb
adc
cwtl
mov
jnp
pop
pop
jl
insl
xchg
jg
mov
leave
sub
aas
ss
mov
sub
clc
push
stc
push
jmp
push
scas
mov
shrb
dec
lret
stos
or
stos
push
rcrb
mov
mov
int
add
push
test
sbb
add
add
leave
jns
xchg
add
add
cmpb
sub
and
mov
ret
mov
and
fsubrl
dec
das
hlt
push
in
sbb
jbe
sub
addr16
or
les
inc
cmpsb
push
or
xchg
mov
loopne
jne
out
scas
xor
push
pop
nop
sub
add
dec
scas
movsb
add
cmpb
fldl
lds
ss
sti
sub
out
lcall
pop
inc
out
subb
ljmp
aas
fwait
dec
ror
enter
jge
sub
bswap
jb
sbb
test
add
jp
enter
ja
adc
jb
cmp
icebp
into
add
mov
jno
jge
aaa
mov
pop
add
arpl
mov
movsb
lods
add
xchg
mov
enter
or
or
jge
xor
out
std
mov
add
pushf
into
std
mov
sbb
ja
push
je
inc
pop
cmp
inc
sub
movsl
cmc
aaa
ljmp
sbb
pop
pop
lds
xor
into
movsb
bound
ds
mov
push
fmul
rcrb
cmp
xchg
sbb
int3
nop
mov
aaa
mov
sar
hlt
xchg
addr16
cmpsl
test
mov
repz
andl
pop
xchg
adc
ficoms
iret
repz
rep
cmp
mov
mov
and
mov
arpl
ret
cmc
hlt
adc
hlt
jp
rcrb
cli
sbb
popa
jns
and
mov
push
rcll
pop
ret
add
sub
ja
hlt
or
jno
sti
fnstenv
addb
mov
stos
pop
push
dec
int3
cmc
push
imul
fisttpll
outsb
fwait
jecxz
mov
inc
add
or
push
outsb
bound
and
mov
dec
jbe
xlat
shll
xlat
aam
iret
scas
int3
pop
xlat
sub
fxch
out
or
and
jne
jmp
outsb
sahf
lds
xchg
mov
mov
bound
imul
ss
mov
sbb
shlb
rclb
nop
cmp
push
jnp
bound
sbb
insl
lods
inc
push
aaa
jb
cli
add
lds
stc
jnp
inc
arpl
addr16
add
sub
inc
lret
int
xchg
pop
subb
jmp
mull
stc
xor
sub
test
inc
loopne
inc
sub
je
movsb
xor
in
mov
cltd
js
sub
or
inc
pop
cmp
pop
orl
and
add
adc
xorl
icebp
push
mov
dec
dec
imul
test
xor
mov
and
pushf
adc
icebp
mov
insl
test
xchg
sti
adc
cmpsb
push
xchg
stos
fwait
jne
nop
xor
mov
cmp
jnp
ficompl
lock
nop
popf
mulb
movsb
cmc
mov
ror
xchg
fisttps
cmpsl
outsl
push
cltd
and
cmpsl
js
out
test
dec
stc
sub
testb
aas
or
sbb
std
clc
sub
xchg
mov
in
fsubs
jae
out
inc
mov
sarb
negl
jle
std
sbb
inc
jmp
pop
lret
stc
cli
and
cmp
jle
stc
subl
ret
mov
pop
dec
ss
aad
add
popf
pop
mov
int3
adc
mov
and
sbb
cmpsb
jl
add
ss
pop
jg
movsl
in
mov
stos
mov
jle
dec
adc
push
mov
push
mov
insl
lret
jne
outsl
insb
dec
gs
jg
ret
inc
outsb
xchg
add
adc
mov
addr16
popf
add
cmc
or
jmp
sub
sbb
mov
dec
push
push
jb
js
lds
pop
pop
daa
cmp
scas
mov
cltd
push
inc
or
outsb
out
xchg
cs
sub
xchg
incl
popf
pushf
pop
sbb
ds
mov
fists
sub
fwait
in
adc
mov
clc
fsubrl
ss
push
or
adc
push
push
call
mov
out
adc
insb
xor
movsb
fcmovne
or
inc
add
dec
popa
lock
dec
call
pop
mov
pop
pop
xchg
cwtl
xchg
mov
cwtl
push
cmpsl
mov
cmp
aam
xor
or
dec
cli
add
insl
xchg
sbb
sub
pop
or
cmpsl
es
outsb
stos
enter
mov
xor
sbb
push
push
outsb
lcall
into
add
in
data16
test
popf
pushf
inc
out
sbb
jecxz
pop
movsb
call
jnp
adc
enter
lea
hlt
je
jmp
mov
popa
inc
ljmp
xchg
imul
adc
fidivl
insb
cmp
ret
pushf
fnsave
shll
adc
int
into
pop
cmc
loope
adcl
xor
xor
inc
popf
jl
jge
outsl
adc
jae
loope
arpl
insb
sbb
push
jne
out
sbb
xor
mov
add
cltd
addr16
jae
inc
pop
dec
pop
loopne
cmc
loop
jne
je
stos
add
push
lret
in
mov
xchg
jnp
iret
repnz
call
cmc
repnz
inc
mov
mov
xor
xchg
inc
mov
out
ja
mov
pushf
dec
hlt
js
xchg
insb
jb
mov
imul
mov
loop
ds
inc
fs
jmp
push
cwtl
mov
loop
mov
dec
inc
sbbb
xor
mov
movsb
fucom
push
fld
pop
ficompl
mov
xchg
adc
enter
inc
lds
lds
je
decb
mov
xor
add
iret
pop
fwait
test
mov
cmp
xor
cmp
dec
sbb
pop
ja
xchg
xchg
and
pusha
cmp
sahf
movsl
pop
into
xorl
xchg
sti
lds
out
pop
mov
inc
cmpsl
mov
mov
cli
std
ret
jmp
out
pop
push
ja
sti
std
cwtl
leave
cmp
bound
push
mull
movsl
add
aam
cmp
testl
in
dec
push
int3
ljmp
xor
cmpsl
or
jl
sbb
xor
mov
adc
in
and
mov
jo
stos
rorl
cmc
adc
imul
push
sub
js
lret
int
je
push
lds
aaa
cmpb
imul
ret
clc
adc
fidivl
xor
or
hlt
xchg
inc
sub
out
out
out
lds
and
int3
sub
loope
inc
fstl
jnp
mov
xchg
ds
loop
xor
cmp
mov
mov
xor
in
pop
dec
out
scas
leave
mov
enter
xchg
pop
andl
cmp
call
xor
iret
clc
xor
mov
in
test
mov
icebp
xchg
pop
pop
or
jl
movsb
loop
and
push
sub
shll
jno
rorb
ljmp
mov
int
sahf
adc
mov
imul
cmp
sub
fld1
fnsave
test
outsb
std
xchg
pop
or
iret
ljmp
dec
pop
push
inc
mov
imul
rorl
clc
push
out
cs
inc
jbe
pinsrw
outsb
loope
frstor
pop
test
mov
subl
out
popf
aas
flds
arpl
testb
and
in
stc
mov
jl
add
in
cmpsl
cmp
jge
enter
test
sbb
mov
daa
hlt
add
fisubs
cld
jle
scas
jae
add
ljmp
and
aad
fnstsw
push
loopne
outsl
nop
pop
outsb
xchg
cmp
xor
stc
leave
jno
xchg
inc
cs
sbb
cmpsl
inc
xchg
sub
int
xor
push
jg
mov
inc
mov
ret
mov
inc
pop
hlt
in
xchg
push
cltd
stos
push
mov
movsb
mov
test
ret
popa
in
shl
cmp
dec
shlb
inc
lret
cmp
test
cld
inc
icebp
lods
push
push
pusha
fcmovu
adc
adc
xor
push
adc
ja
ljmp
add
arpl
sti
fcomi
mov
int3
sub
fildl
sub
or
adc
add
aaa
mov
cmp
pop
ss
mov
rorb
sbb
and
push
sub
pop
cmp
in
pusha
div
add
ljmp
mov
push
push
test
jmp
push
divb
fistl
out
loop
je
inc
sbb
xor
cmpsb
sub
jp
clc
push
adc
int3
push
push
and
cmp
inc
inc
std
dec
call
mov
cmpsl
adc
mov
mov
jae
push
arpl
stos
mov
xor
sahf
sub
inc
adcl
mov
imul
sub
lcall
es
jmp
test
inc
data16
jecxz
fisubrl
sbbb
mov
and
mov
sbb
mov
pop
insb
cld
and
xchg
lahf
add
pop
ret
adc
cmpsb
test
xlat
in
loope
in
cmp
imul
push
push
ja
out
xchg
nop
jbe
incl
push
popf
push
inc
mov
arpl
jns
cwtl
dec
or
jp
repz
test
aad
mov
cmc
bound
pop
and
jg
push
insl
push
jg
push
cltd
dec
cmc
imul
lret
jns
jno
mov
lods
fnstcw
mov
mov
jl
sbb
push
sti
inc
or
mov
xor
mov
sub
xchg
cmp
mov
adc
mov
cltd
and
jge
daa
xorb
out
dec
das
lods
jmp
xchg
je
sub
sbb
fptan
addr16
hlt
adc
std
add
push
ljmp
lods
adc
cmp
jno
notl
insb
in
xchg
mov
sbb
mov
je
pop
jge
fnsave
mov
adc
fnstsw
sub
pop
jnp
cmp
roll
sarl
sbb
add
shll
hlt
lock
jl
jne
cltd
shlb
ret
inc
aaa
dec
cs
mov
testb
rolb
sbb
mov
sub
push
cwtl
and
daa
hlt
test
or
dec
cwtl
stos
fisubrs
dec
aas
add
sbb
imul
sbb
mov
mov
xchg
mov
adcl
daa
xor
lret
dec
or
sub
cmp
adc
jge
pop
iret
sbb
mov
and
sub
mov
mov
pushf
adc
mov
ljmp
pop
push
mov
cmpsb
ret
mov
jbe,pn
stos
lcall
rol
fidivl
cmp
xor
sti
and
mov
xlat
mov
shll
cli
in
cld
test
dec
jp
sti
lahf
stos
push
cmc
lret
xor
inc
mov
jp
xchg
int3
sahf
xchg
popf
push
sub
and
cmp
dec
add
push
sahf
jbe
loop
sub
add
imul
cmpsb
dec
cmp
pop
test
subl
cmp
js
inc
scas
fistpl
dec
aam
daa
dec
unpcklps
jmp
dec
pop
push
scas
add
mov
stc
negl
jb
popa
vmwrite
sti
cmp
push
in
adc
mov
popa
sbb
add
mov
mov
adc
jmp
vunpcklpd
out
mov
mov
repz
jmp
pop
xor
cmp
rol
push
xor
adc
hlt
inc
cmpsb
lahf
cmp
dec
cmp
cmp
imul
cmp
push
cwtl
pop
mov
cli
xor
push
push
mov
loop
arpl
notb
push
stc
push
js
mov
aam
jbe
jp
hlt
push
mov
xorb
push
adc
cmpxchg
mov
enter
lahf
mov
dec
inc
cmc
mov
mov
jb
movb
dec
jmp
bnd
mov
pop
jne
cmp
mov
or
pop
pop
stos
insl
shrb
jle
fs
and
mov
cmp
mov
cmpsl
push
pop
adc
xor
cmc
test
leave
or
lds
jmp
cmpsb
mov
rcrb
xchg
jae
dec
lret
andb
sahf
imul
or
aaa
cltd
mov
shrb
push
xchg
lret
outsb
scas
add
ss
inc
push
imul
lods
sub
test
insb
sub
dec
cmp
xchg
fs
std
repz
pop
or
sbb
xchg
jl
mov
hlt
cmp
cmp
insl
and
xchg
cmp
mov
pop
sub
ss
cmp
jg
insl
jae
sbb
xchg
ret
pop
jnp
lods
push
jl
fcmovu
clc
jno
in
fimuls
ficompl
clc
testb
ficomps
sahf
aam
ficoms
push
test
mov
jl
jo
add
xor
cmp
push
xchg
fcoms
mov
fistpll
xlat
and
jecxz,pt
push
stc
dec
test
adcl
cli
fisubrs
hlt
mov
cmp
ficoml
mov
cs
sub
lds
push
cmp
lret
lret
sbb
stos
mov
addl
jae
sub
jns
jbe
js
pop
jp
lcall
xchg
mov
std
adc
push
orb
mov
inc
movsb
mov
imul
je
lods
push
add
imul
or
and
jl
std
mov
loop
cmp
pushf
and
into
mov
mov
jle
shrl
movsb
pop
inc
stos
and
and
mov
in
aam
mov
adc
adc
std
or
push
adc
stos
ret
xchg
jmp
cmc
repz
xchg
fistpl
dec
jecxz
fsubr
dec
cli
ja
bound
in
popa
not
imul
pop
mov
repnz
sub
cmp
ljmp
jo
dec
and
divl
xchg
in
sub
jne
das
out
scas
psubsw
inc
xor
xor
out
mov
sub
cli
bnd
adc
xchg
sbb
sbb
jp
dec
lods
sahf
leave
cs
sub
mov
inc
xchg
fbld
imul
dec
mov
jbe
stc
dec
imul
adc
adc
xchg
dec
ss
cmp
and
dec
and
mov
in
push
ret
pop
push
mov
pop
hlt
or
adc
gs
and
cmpsl
scas
jecxz
xchg
mov
cltd
dec
push
clc
aad
bound
aam
fldcw
rcl
xchg
xchg
mov
fstps
sbb
jp
pop
xchg
aad
out
push
adc
add
lcall
mov
decl
xor
lods
outsb
sbb
lds
pop
int3
adc
pop
cs
lahf
shll
mul
xor
imul
cmp
cmp
jl
out
daa
cltd
push
test
imul
call
xchg
in
jmp
pop
out
lcall
mov
jns
add
pop
add
jp
or
mov
inc
mov
pop
jno
add
arpl
rdmsr
dec
jp
out
arpl
cmp
aaa
popf
pop
aas
fwait
loopne
jno
jo
mov
cmp
inc
jecxz
aas
insb
jne
mov
jmp
dec
cmp
adc
sti
and
inc
pushf
dec
jp
out
enter
test
and
cwtl
lret
movsb
mov
pop
sub
je
mov
push
fwait
js
lea
add
loopne
mov
pop
int
aas
cmpsl
sub
imul
sub
jae
mov
xchg
int3
mov
dec
xlat
cli
add
sbb
jmp
or
mov
inc
push
ljmp
scas
out
je
mov
and
jmp
or
push
xchg
vucomisd
loope
add
mov
ss
aas
mov
pop
cli
push
pop
mov
lods
sub
adc
sbb
fildl
sbb
loope
mov
in
in
sub
cltd
aad
lret
lods
push
push
aas
xor
pop
lahf
mov
push
scas
xchg
vcvtpd2psy
mov
sub
sbb
push
clc
daa
push
pop
push
push
cwtl
test
es
movsl
cltd
test
stos
outsb
push
push
loope
jl
jecxz
rcl
mov
mov
inc
push
dec
add
push
sub
call
inc
arpl
pop
or
out
cmp
into
jmp
mov
pop
sarl
mov
push
push
mov
imul
jb
fldenv
rcrb
int3
inc
test
dec
sti
jae
bound
hlt
int
loop
sbb
cld
push
in
mov
jle
out
enter
enter
in
mov
dec
pop
in
aad
add
add
add
and
xorb
ret
add
dec
shll
lds
xor
mov
stc
xor
sbb
lds
aam
add
shll
leave
fwait
inc
jmp
mov
dec
dec
push
cmp
mov
pop
sub
aam
mov
leave
dec
xchg
or
incb
jb
ds
scas
pop
cmp
pop
bound
sarb
adc
pushl
dec
ss
ja
in
pop
mov
imull
insb
push
xchg
xorl
or
or
daa
outsb
fstpl
inc
xor
jp
repnz
dec
add
adc
out
popf
arpl
std
aaa
cmc
int3
es
sub
stc
repz
les
inc
lods
cld
out
pop
sbb
or
aad
xchg
jae
mov
mov
andl
jns
mov
xchg
mov
cli
sub
in
sti
pop
xor
xchg
pop
jne
clc
lea
sub
cld
arpl
lock
mov
add
push
cs
add
lcall
popw
fidivs
push
adc
mov
xor
add
pop
xlat
fistps
dec
add
dec
jbe
jle
clc
mov
scas
adc
inc
sub
xchg
or
adc
pop
mov
loop
arpl
add
sub
outsb
mov
movsl
push
jbe
dec
sbb
add
ret
add
xchg
sub
jle
cmp
mov
fmulp
in
push
mov
nop
bound
loope
sarb
mov
push
push
push
outsl
cmp
into
dec
test
mov
cmp
rorb
and
test
jg
cs
pop
fcoms
decl
ss
sbb
lret
push
xlat
mov
pushl
aam
fisttpl
popf
cmp
cmp
insl
cmpsl
sbb
aad
notl
pop
imull
mov
xchg
ret
sbb
inc
cmp
mov
outsl
in
sti
adc
in
fs
xorb
leave
push
xchg
outsl
mov
fcmovnb
fmull
xchg
stc
jae
arpl
movsl
and
lahf
xchg
fistps
mov
loopne
xor
int3
xchg
cmpl
loop
mov
push
cmp
fnsave
jno
or
sahf
shlb
and
cld
stos
xchg
xchg
jle
iret
and
xchg
mov
push
testb
mov
xchg
repz
jle
xor
pop
mov
xor
mov
xchg
push
cmp
and
xor
and
sbb
inc
push
fistpll
icebp
in
roll
jmp
mov
xchg
add
jb
push
adc
pop
lock
fdivl
push
xor
rcrl
add
jp
arpl
daa
push
adc
mov
pop
sbb
push
ds
shlb
add
and
pop
sub
xchg
sub
rcl
dec
sbb
stc
sub
pop
popa
cmp
sbb
das
inc
addr16
std
insb
or
jp
sar
sbb
or
xchg
ds
gs
xchg
mov
adc
mov
fucomp
xor
movsb
pop
push
and
hlt
leave
pop
es
push
ljmp
add
outsl
fsubrs
sbb
lods
push
mov
loop
and
arpl
pop
add
jne
dec
sbb
jo
and
jg
and
sbb
mov
cmc
adc
push
pop
or
call
push
add
jbe
inc
add
ja
es
mov
adc
push
test
scas
les
lods
pop
mov
push
fstp
fistpll
aaa
adc
sbb
stos
subl
inc
adc
sub
add
and
addl
mov
and
fisubrs
out
in
jnp
in
std
mov
std
jl
pop
fisubl
adc
sahf
mov
addr16
jge
mov
jne
mov
mov
js
int3
cli
push
cmp
pop
andb
dec
scas
sbb
lcall
int
sahf
xchg
pop
cli
mov
xor
and
add
push
pop
push
daa
add
lods
cwtl
mov
lods
mov
popa
adc
add
pop
js
fs
add
aam
pop
xor
notl
imul
pusha
mov
xor
mov
jg
sbb
clc
xor
dec
inc
inc
cmpsb
dec
out
xchg
xchg
stos
or
aad
pop
lcall
push
bound
and
pop
jg
ss
outsb
nop
inc
lret
loope
rcll
xor
shlb
subl
fdivs
jecxz
adcl
into
daa
sub
mov
sahf
jno
fcmovu
int
xor
imul
inc
mov
fld
lds
mov
dec
inc
add
jbe
xchg
sub
dec
pop
xor
mov
stos
or
out
sbb
mov
xchg
in
sub
mov
jnp
negl
rcrl
mov
inc
test
jne
out
or
push
jl
sahf
imul
and
popa
into
dec
inc
mov
sbb
notb
push
std
pushf
out
and
sub
sti
repz
movsl
inc
or
andl
aam
cmc
in
clc
les
cmp
hlt
fistps
in
pop
mov
fnstsw
aaa
push
pop
clc
loope
push
and
cli
push
inc
loop
scas
rorb
jae
mov
or
in
pop
xor
xor
inc
jne
jbe
dec
scas
out
aam
lods
loope
in
iret
movsl
push
aad
push
sti
lods
bound
scas
sub
movl
mov
xchg
mov
cwtl
pop
adc
data16
rorb
pop
xchg
loope
push
mov
add
mov
inc
mov
mov
adc
xchg
clc
mov
test
xchg
clc
sub
fwait
dec
inc
sbb
das
pop
sbb
jns
mov
xor
sbb
ja
jmp
or
jle
popf
cli
inc
ss
addr16
dec
in
inc
push
ret
icebp
jo
lea
test
xchg
adcb
push
aam
sbb
and
sbb
xor
push
shlb
lods
sbb
fidivrl
add
xor
cmp
cltd
sub
ljmp
fadds
pop
ja
lret
inc
cmpsl
and
test
mov
sub
push
dec
shr
ds
lcall
std
lds
and
pop
subb
movsl
mov
bound
loopne
aam
cmp
cld
dec
aad
push
and
hlt
pusha
jbe
pop
and
xchg
aad
mov
addr16
stos
fidivrs
aam
jb
mov
adc
mov
xor
adc
mov
movsb
cmp
or
out
pop
int
cmc
movsb
loop
outsb
jl
mov
pop
pop
push
ljmp
cwtl
mov
shl
pop
ficoms
push
mov
jle
xor
imul
mov
dec
push
cmp
push
mov
ss
pop
ss
mov
ret
cmp
mov
cld
dec
xchg
ss
xchg
xchg
inc
adc
push
negl
add
mov
push
cwtl
xchg
dec
popa
addr16
or
scas
andb
inc
push
test
repz
adc
add
xacquire
push
mov
jnp
pop
mov
jb
push
sbb
push
cmp
push
dec
loopne
adc
push
ljmp
movsl
jecxz
arpl
lret
dec
clc
add
push
sub
inc
lods
in
enter
orb
movsb
ret
stos
sti
adc
mov
imul
pop
push
jns
jne
sbb
dec
shlb
sub
xchg
mov
sub
or
and
les
add
xchg
and
dec
stc
aas
in
popf
or
or
aas
fidivs
ret
sbb
loop
sbb
nop
or
dec
dec
clc
fcmovnb
xor
stos
les
test
mov
adc
jo
leave
pop
inc
cli
jge
mov
jae
jo
cmpsl
jle
sbb
rol
and
jle
lret
call
pop
adc
sbb
jne
out
test
gs
push
leave
jmp
cmp
push
testb
daa
xchg
jae
int3
cs
cltd
mov
push
and
add
mov
cmp
push
clc
dec
iret
bound
mov
add
mov
lret
jge
movsb
dec
push
push
mov
insb
inc
add
mov
xchg
mov
pop
pop
out
and
mov
sbbb
adc
insb
dec
xchg
push
jmp
fcomps
int
in
push
cmp
cmc
add
inc
add
shl
inc
push
movsl
jmp
es
in
ret
and
jb
imul
mov
nop
mov
add
stos
int
repnz
repnz
pop
sbbb
cmc
imul
dec
repnz
mov
pop
push
jge
cmp
dec
imul
xchg
mov
mov
in
aam
dec
xlat
les
xchg
insl
stos
jb
dec
adc
sbb
ret
repz
add
stc
fcmovbe
jl
lods
test
enter
sahf
sbb
sbb
movsb
inc
sbb
nop
in
xchg
add
xor
stos
aam
pop
fwait
sarl
rol
mov
test
and
je
lcall
adc
sub
adc
push
in
push
sub
xchg
imul
xchg
jl
stc
sti
fmul
jg
push
out
xchg
mov
jp
repnz
mov
aam
outsl
stos
sahf
mov
or
test
push
pusha
test
test
push
js
movsb
aas
dec
mov
sbb
push
shrb
imul
dec
mov
jl
movsl
popa
leave
xor
mov
push
mov
sti
dec
imul
fucomip
arpl
fstl
push
mov
in
pop
rcrl
fnsave
push
ljmp
push
or
das
lds
xorb
mov
lock
stos
imul
stos
xchg
mov
pop
outsb
fisubl
in
les
xchg
mov
clc
in
cmpsl
add
out
rolb
push
shlb
jns
adc
mov
inc
mov
gs
stc
cmc
mov
inc
mul
lock
fnstsw
and
data16
and
adc
xchg
subl
xor
jae
decb
scas
dec
dec
jo
mov
lret
loope
push
mov
movsl
or
lods
loop
xchg
popf
sub
mov
push
fdivl
sbb
sbb
rorl
add
sbb
pop
lret
adc
adc
orl
adc
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
adc
addl
push
lret
testb
dec
mov
lods
mov
inc
mov
stc
outsb
pushf
xchg
out
scas
icebp
sbb
test
mov
or
xor
cltd
sbb
aas
rolb
aam
sub
jnp
inc
jecxz
aaa
add
cmp
lahf
clc
sbb
mov
dec
cmp
push
add
jg
pop
std
jge,pt
xor
test
test
push
add
loop
mov
cmp
lcall
jns
rclb
movsl
outsb
es
in
icebp
rol
dec
jns
mov
jae
push
xor
jno
cltd
adc
or
loope
jg
es
sub
gs
movsb
xchg
xchg
and
adc
xor
call
adc
fsubs
pop
in
xchg
in
scas
jno
addl
pop
lret
fcmovnu
push
mov
xor
test
out
push
push
jne
scas
pop
icebp
sbb
pop
arpl
repz
iret
mov
ja
adc
cwtl
mov
cmp
aaa
cld
inc
push
ret
insl
jns
imul
in
js
or
loope
popf
push
add
and
test
into
pop
sarb
ljmp
xchg
bound
call
fs
pop
testb
xor
out
subb
xchg
add
mov
inc
fcmovu
cld
or
pop
or
es
ja
and
out
fdivs
sub
sub
mov
ficoml
add
outsl
aam
inc
scas
pop
mov
push
test
or
jmp
in
ljmp
xlat
jns
nop
cmp
cmpsl
jmp
add
mov
cmp
sti
lret
scas
xchg
inc
fistps
call
adc
in
out
xor
inc
clc
dec
pop
loop
cmc
cmp
loope
mov
jle
jge
mov
dec
lcall
loop
or
adc
stos
nop
mov
jmp
xchg
imul
jns
adc
jbe
dec
icebp
call
fsubrl
loopne
addl
dec
xchg
cmp
sbb
ret
push
dec
in
aad
ret
loope
fstl
add
jp
scas
xchg
add
pop
and
xor
sbb
fcompl
popf
pop
push
push
fs
mov
or
push
pop
scas
rcl
push
cmp
inc
fsub
lahf
pop
pop
jnp
or
ljmp
stos
xchg
push
push
and
mov
mov
icebp
dec
in
mov
inc
adc
test
jle
icebp
sbb
jno
fdivrs
jmp
sti
enter
cs
arpl
std
mov
stos
xchg
cli
xchg
lock
mov
inc
mov
inc
jmp
push
mov
incl
xor
mov
fstpt
jno
test
mov
adc
subb
jecxz
or
cmp
pop
push
int
jbe
testl
pop
or
fwait
jb
inc
out
enter
in
shll
arpl
jmp
and
shl
mov
inc
in
cli
fiadds
push
xor
xor
xchg
mov
jbe
xor
dec
mov
mov
into
loopne
arpl
or
push
and
aaa
cmp
daa
ss
mov
push
loop
mov
dec
mov
movsb
and
push
pop
test
arpl
test
testb
add
cmpsl
stos
icebp
fs
mov
cmp
mov
and
pop
ret
push
dec
jbe
push
add
fisubl
cmpsl
xchg
mov
xchg
sub
mov
jge
fs
mov
cld
xor
dec
mov
mov
cltd
dec
push
mov
add
sti
cmp
iret
sub
loopne
add
cmp
jle
cmc
rorb
jne
frstor
lcall
xchg
sbb
xlat
xchg
pop
std
repnz
sbb
shrb
out
mov
lret
cltd
xchg
adc
mov
mov
js
cmp
jbe
mov
xrelease
pop
and
notl
rolb
icebp
sub
add
cmpsl
insb
insb
popf
cmp
call
inc
inc
push
mov
jb
aaa
int3
shrb
cmp
clc
jle
xor
lods
ljmp
in
or
lds
sti
out
jl
pop
mov
add
bound
lods
lea
and
adc
jns
inc
lahf
shr
xor
xlat
cmp
pop
fldt
std
bnd
in
shlb
push
sbb
dec
push
mov
xor
jnp
out
sbb
das
inc
in
and
push
dec
fldcw
jbe
push
pop
sub
je
cmpsl
aas
dec
adc
mov
loope
push
mov
inc
sbb
jae
or
ficoml
xchg
rcr
stos
imul
outsb
inc
lahf
mov
cmc
inc
idivb
jl
iret
les
push
cwtl
fstl
mov
dec
or
subb
dec
test
mov
loop
ror
ret
scas
xbegin
in
es
mulb
dec
pop
inc
mov
inc
aam
movsl
inc
push
out
popf
or
mov
pop
outsl
add
lret
jnp
cwtl
xchg
or
out
icebp
lahf
adc
js
repnz
shlb
jl
or
or
push
mov
jecxz
jae
lret
push
xchg
push
add
pandn
loop
scas
dec
and
jnp
das
mov
and
or
fistl
dec
arpl
js
xchg
aam
mov
or
data16
cli
imul
repnz
aas
xchg
bswap
je
pop
data16
ss
mov
or
mov
test
test
lock
sbb
mov
mov
cmp
jae
sub
mov
adc
lds
cmp
outsl
push
or
dec
clc
push
ds
cmp
out
push
xchg
clc
and
lret
into
push
xor
iret
xchg
sbb
sbbb
out
inc
jecxz
mov
mov
pop
mov
mov
push
cmp
xchg
and
fs
dec
mov
andb
mov
jp
mov
ret
lea
jge
pop
lock
and
ror
mov
mov
xchg
iret
imul
xchg
mov
jg
loope
cld
dec
iret
inc
lahf
or
add
lea
xchg
addb
mov
sbb
shrl
jp
jg
scas
fisubrl
mov
cld
pop
icebp
pop
neg
pop
pop
jecxz
in
aas
mov
pusha
div
sbb
pop
xchg
pushf
fwait
add
xchg
pop
pop
inc
mov
jnp
adc
idivl
dec
cmpsl
mov
jp
pop
pop
or
lods
je
pop
and
repnz
insl
pop
dec
mov
fs
mov
xchg
sub
lods
mov
rol
sbb
and
ss
pop
and
xchg
and
loopne
xchg
test
mov
test
stos
lock
lods
mov
std
pop
fstpt
outsl
mov
fcmovnu
out
pop
push
mov
mov
dec
sub
cltd
repz
adcl
fs
sbb
stos
push
mov
mov
pop
push
js
sbb
pop
cmp
sub
arpl
fisttpl
cmpsl
pop
mov
jg
dec
pop
scas
add
mov
dec
cmp
jle
rcl
cltd
jae
adc
inc
rorb
push
dec
mov
dec
mov
in
shlb
jecxz
outsl
push
icebp
jbe
cmp
xorl
sub
nop
fs
fistl
push
inc
inc
enter
sti
mov
cmp
je
mov
xlat
pop
mov
gs
adc
xor
cmp
imul
cltd
jb
xor
in
cmp
sbb
call
stos
out
mov
or
cmpsl
adc
ret
lea
mov
cmp
xchg
push
out
lods
sbb
xchg
cmp
imul
xchg
adc
imul
inc
dec
adc
js
data16
push
shlb
daa
add
jno
and
in
xor
cmp
lods
sbb
sbb
xor
sbb
add
lock
cmpsl
sbb
pop
js
xor
fstp
fs
cli
push
sbb
shr
aam
dec
inc
pop
dec
stos
sub
fwait
xchg
scas
adc
sar
and
movsb
fisubrl
stc
movsl
push
xchg
mov
outsl
nop
rorb
loope
jmp
arpl
addr16
pop
notb
cmpsb
pop
mov
stc
xor
test
inc
pop
cli
xchg
clc
jp
call
mov
dec
add
xchg
test
dec
mov
ret
inc
aad
jae
lock
jne
jmp
mov
add
jge
pop
fisubl
pop
scas
jecxz
or
jmp
mov
mov
jmp
inc
inc
filds
inc
or
cli
push
adc
xchg
out
push
xor
sub
jecxz
pop
call
mov
fstps
repz
and
push
adc
lret
dec
scas
or
jae
cli
stc
xor
ds
dec
out
sub
inc
pop
cld
pop
mov
in
push
pop
or
test
fstpt
aam
add
arpl
mov
fisttpl
adc
sahf
ret
xchg
int
sarw
lret
scas
popa
pop
xchg
lea
and
dec
pop
pusha
out
mov
mov
sub
mov
dec
leave
push
mov
lock
in
adc
fcomip
repz
loop
push
les
dec
in
xchg
and
mov
imul
jnp
pop
push
pop
ljmp
shll
mov
fnsave
xor
repz
lods
jae
out
adc
fadds
xchg
sbb
jecxz
rclb
nop
out
xchg
mov
push
inc
jl
ljmp
pop
mov
filds
fsts
push
pop
xchg
mov
cmpsb
shl
xchg
cmp
mov
call
lods
xlat
adc
outsb
pop
inc
mul
jp
pop
rcrl
addb
jecxz
in
mov
xor
scas
jne
xadd
aaa
ret
add
mov
lahf
fwait
and
pop
jmp
stos
lock
sbb
and
into
inc
outsl
mov
fs
int3
lods
fldl
push
test
pop
dec
add
sbb
add
jno
imul
or
cmp
xchg
inc
push
mov
sahf
pop
fnstsw
jge
pop
es
sar
pop
adc
jo
add
push
push
dec
pop
dec
shll
mov
ret
xchg
dec
inc
aam
dec
addr16
push
pop
fcoml
or
fst
movsb
push
xchg
jb
jno
mov
loop
adc
cltd
xchg
clc
add
xchg
nop
add
xor
mov
ficomps
enter
adc
idivl
loope
ja
dec
pushf
xchg
xlat
test
jae
mov
dec
jmp
push
pop
inc
or
ror
or
cmpsb
les
rep
sysexit
rcrb
sbb
shll
call
fildll
cmpsb
mov
push
pusha
in
inc
mov
mov
fidivl
pop
mov
xchg
lods
stos
test
xor
idivl
jl
sub
rclb
push
or
out
add
loopne
mov
mov
lret
inc
sbb
add
dec
dec
out
jecxz
es
outsb
repz
movsb
mov
adc
shll
nop
xorb
leave
sbb
pop
sti
daa
mov
fistl
jo
arpl
lcallw
inc
xchg
xchg
rorb
jmp
call
shrb
jno
and
sub
inc
arpl
scas
dec
andb
xchg
lds
out
sbb
fidivl
out
sbb
pop
inc
mov
add
lret
adc
cmp
ficoms
idivb
divb
sbb
push
scas
dec
mov
mov
outsl
gs
adc
pop
mov
inc
popa
ret
stc
or
dec
xchg
arpl
enter
in
out
mov
pop
rcl
aad
inc
inc
dec
pop
inc
mov
pop
and
gs
xchg
jne
ja
lea
shrl
adc
loop
aas
jmp
mov
pop
cwtl
bound
arpl
mov
cmp
or
mov
testl
call
dec
xor
pop
lret
aad
call
aam
and
cmp
push
shrl
enter
sbb
ljmp
xchg
push
dec
insb
xor
jnp
jae
xchg
xlat
xor
mov
aam
sbb
mov
xchg
pop
loop
arpl
push
push
push
movsl
std
je
std
into
inc
xor
jge
js
inc
cmp
inc
das
fistl
sbb
hlt
pop
mov
mov
xchg
sarb
and
dec
pop
mov
cmp
call
push
or
loope
rclb
fidivrl
or
js
dec
mov
pop
pushw
cmp
shrl
pop
mov
les
or
stc
mov
mov
daa
xchg
add
mov
dec
popa
or
ficompl
push
xchg
mov
subb
inc
jl
inc
and
mov
add
cmp
xchg
pop
scas
jmp
repnz
aam
sbb
mov
mov
outsl
mov
ljmp
addr16
xor
stos
and
add
mov
or
addb
xor
xchg
pop
mov
push
data16
mov
icebp
xlat
test
push
pop
dec
ret
sub
jnp
dec
pop
test
int3
or
fisttps
jno
inc
xchg
and
out
lret
test
lock
adc
cwtl
push
mov
bound
cwtl
push
cs
push
mov
jns
pop
out
cmp
or
cli
test
or
stos
xchg
inc
pusha
out
mov
cld
es
inc
sub
cmp
pushf
sub
pop
stc
push
nop
in
lods
arpl
pop
decb
mov
icebp
push
and
pop
out
popa
popf
mov
std
mov
add
mov
xor
push
loop
push
clc
in
dec
out
scas
shrl
aad
mov
into
jmp
and
popf
jle
int
iret
insb
jl
xchg
mov
loop
jb
lock
mov
pusha
cli
mov
gs
out
dec
push
jmp
and
out
mov
in
dec
popf
neg
sub
mov
je
push
cmp
imul
mov
mov
scas
mov
repnz
xchg
cmp
adc
addr16
jmp
mov
test
push
fdivrl
les
jb
movsl
jmp
xchg
repz
nop
push
clc
andl
in
sbb
mov
test
hlt
pop
adc
stos
jle
stos
mov
adc
inc
dec
nop
mov
pop
insb
xchg
sub
adc
ds
movsb
sbb
inc
and
pop
mov
cld
or
movsb
gs
adc
sbb
jmp
pusha
inc
fmuls
or
cmpsb
int
push
cmp
jle
lret
idiv
jo
mov
insl
adc
pop
dec
mov
pushf
fcmove
lret
into
out
and
out
dec
mov
test
out
push
or
sbb
leave
adc
xor
cmpsb
arpl
adc
and
das
jmp
add
lret
mov
add
pusha
xlat
jmp
mov
push
add
test
sub
sbb
clc
insb
jge
dec
or
lods
pop
scas
out
leave
xchg
mov
popf
das
push
mov
xchg
fucomip
mov
ret
ffree
inc
xor
sub
push
dec
xchg
push
xchg
xor
and
lock
addr16
jge
mov
gs
adc
pop
call
cs
jno
adc
mov
fimull
lcall
rcl
popa
sbb
bound
lods
aaa
xchg
int3
dec
rolb
xchg
cmp
xor
das
pop
jle
cmpl
in
scas
mov
int
rcrb
stos
js
scas
jae
fucomip
insb
add
das
add
sbb
scas
leave
mov
adc
fbld
or
jecxz
iret
in
pusha
sbbb
insb
nop
scas
xchg
cmp
jle
movsl
inc
les
mov
in
fmull
xchg
testb
or
fdivrp
mov
inc
daa
cmpsb
pop
addl
and
insb
adc
xor
mov
pop
shll
push
jae
ja
scas
stc
rcr
pop
adc
rolb
cmpsl
ja
fnstenv
and
pushw
xor
xor
sbb
push
mov
insb
pop
sar
jge
jb
lret
popa
cmp
sub
bound
and
sub
rorb
aad
push
mov
inc
cmp
icebp
stos
inc
jmp
dec
mov
cmpsb
add
mov
and
xor
in
mov
sub
dec
les
push
repnz
mov
cltd
cmp
sbb
inc
sbbb
or
hlt
jp
daa
xor
adc
hlt
mov
mov
adc
xor
add
and
mov
sub
add
add
cltd
cwtl
bound
push
push
mov
lcall
call
sbb
fdivl
in
push
out
scas
movsb
jbe
ret
mov
stos
ds
scas
sub
dec
xchg
in
xor
insl
push
scas
bnd
jl
and
into
sub
xchg
leave
and
push
loopne
mov
sbb
sti
fistps
test
lea
lds
data16
cmp
movsl
out
test
aad
or
dec
repz
pushf
or
mov
inc
int3
pop
mov
movsl
sub
test
mov
jl
bound
sti
ds
int3
mov
cmc
sub
insl
sub
xchg
mov
popf
dec
and
dec
pop
movsb
push
dec
xchg
and
lods
lock
push
repnz
insb
dec
dec
push
loope
decb
jo
stos
insl
mov
and
fimull
in
pop
cld
aam
cmp
dec
push
sbb
mov
add
aam
in
dec
scas
je
cmpsl
mov
or
inc
popf
leave
test
jbe
push
leave
push
test
xlat
rorl
popa
dec
pop
ljmp
add
scas
hlt
lret
mov
bound
enter
push
jb
test
rcrl
pop
gs
jge
gs
jmp
std
xor
mov
daa
cmc
iret
hlt
movaps
xchg
daa
push
sbb
add
jg
movb
adc
lret
into
inc
adc
fcmovbe
sbb
mov
push
xor
cmp
addr16
push
outsb
sbb
test
out
pop
push
and
test
sbb
sub
xadd
out
loopne
dec
sbb
mov
out
scas
inc
push
dec
inc
ret
push
sub
cmpsb
cwtl
out
xchg
pop
pop
in
mov
pop
rcll
adc
lcall
rorl
mov
push
cmc
sarl
mov
hlt
mov
push
sbb
iret
push
adc
cmp
out
jns
iret
out
pop
add
xor
sbb
jl
add
test
cmp
mov
dec
mov
insl
mov
fildl
frstor
ret
mov
out
xchg
repnz
xorl
add
cli
add
xchg
into
sub
outsl
push
lock
mov
push
pop
mov
mov
cmpsb
jp
test
cmc
scas
xchg
test
mov
xchg
call
aad
hlt
add
inc
insl
shlb
or
scas
mov
xor
dec
leave
cwtl
dec
stos
orb
addb
cli
rcrl
fisttps
enter
fnstenv
loop
adc
ss
jno
add
xor
mov
mov
sti
mov
push
sbb
or
adc
fisubrl
inc
xchg
xchg
push
pop
test
fsubrs
mov
xor
inc
pusha
xor
mov
add
mov
sbb
xchg
ja
add
inc
pop
jne
mov
or
cmp
cmp
in
mov
in
xor
adc
stos
aaa
and
mov
add
sub
in
mov
insl
xchg
pop
adc
pop
rolb
pop
dec
adc
mov
push
jb
jo
mov
cld
push
lods
cmpb
cld
call
or
mov
ja
sti
mov
mov
test
lock
jb
jno
add
cs
jle
push
and
and
and
add
std
int3
shlw
mov
sbb
mov
aad
gs
or
adc
xchg
mov
adc
xchg
dec
cmpsl
adc
leave
jle
ror
mov
mov
adcb
pop
jecxz
aad
cltd
cmp
clc
xor
daa
sti
movl
and
jl
fisubl
ffree
lods
shlb
push
movl
cmp
jl
lcall
sbb
xlat
adc
sbb
jne
pop
xchg
adc
xchg
je
inc
cli
dec
mov
in
jns
jo
lahf
add
inc
leave
inc
icebp
cmp
xchg
insb
xor
arpl
pop
clc
pop
mov
in
out
mov
pop
cltd
jl
cmpsb
test
xchg
hlt
hlt
or
and
adc
or
out
jl
cltd
decl
mov
mov
inc
mov
ja
sbb
aad
inc
jl
xchg
push
and
pop
sbbb
push
fwait
test
dec
mov
ret
or
pop
in
mov
test
fwait
mov
stc
loope
push
into
or
add
inc
add
mov
push
das
fnstenv
test
neg
test
push
and
add
call
sti
into
inc
adc
and
cmpsl
dec
and
lahf
ss
dec
fimull
mov
cmp
repz
vpmacsdql
ja
loop
addr16
adc
repnz
xchg
add
and
test
insl
xor
pop
pop
inc
jmp
lods
andb
sbb
rcr
fnstenv
xor
leave
jmp
mov
pop
push
sahf
xor
inc
shrb
fidivrl
popf
dec
xchg
xor
dec
jge
xchg
je
test
fidivs
sub
loop
inc
jnp
push
cmp
xor
push
jbe
rcrl
dec
popf
sbb
push
adc
call
sbb
test
jo
lods
nop
sub
rcrb
les
aas
imul
cwtl
es
xor
mov
imul
dec
and
stc
out
cmp
cmpsb
in
mov
mov
dec
mov
dec
out
mov
cmc
xchg
push
push
dec
ss
addb
ds
add
arpl
xor
sti
ljmp
sub
inc
pop
movsl
inc
add
or
dec
fdivrl
in
mov
mov
jp
push
mov
popf
and
lahf
xchg
jp
pop
or
dec
push
cmpsb
pushf
mov
stc
das
xchg
jg
mov
add
cmp
in
xor
fsubp
jp
xchg
mov
xchg
xchg
push
inc
sbb
pop
mov
adc
data16
jp
and
ljmp
fstpt
lds
daa
xchg
ret
gs
lea
mov
inc
mov
fsubs
dec
ja
mov
sub
or
inc
bound
data16
sub
std
call
rolb
mov
dec
loop
mov
xchg
daa
out
out
jmp
push
movsl
das
mov
fmul
xchg
dec
jae
mulb
icebp
inc
jl
loope
jb
std
cmpsl
mov
iret
cmp
imull
mov
leave
jp
sbb
sahf
ja
inc
std
mov
adc
sub
sub
lock
orb
mov
fcoms
popa
cmp
mov
jmp
or
adc
outsb
inc
add
push
roll
xchg
ljmp
xor
xadd
and
mov
cmpsb
sarb
int
es
pusha
mov
fiadds
lahf
es
xor
out
mov
pop
jo
dec
mov
loope
aad
std
jns
dec
aas
repz
add
test
fs
sub
xlat
les
stos
sbbl
sbb
arpl
test
jl
push
scas
mov
repnz
mov
mov
outsb
mov
mov
mov
cli
pop
push
dec
mov
je
in
repz
rorb
adc
sub
mov
jmp
and
and
xor
cmc
rorb
std
lds
xlat
xchg
adc
pop
movsb
jno
cli
inc
xchg
stos
in
sub
rorb
xlat
pop
test
stos
imul
testb
sbb
cld
push
or
jmp
ret
ja
xor
pushf
pop
sbbl
movsl
lret
mov
in
loopne
xor
loop
push
fs
push
into
sbb
std
sub
cmpsl
or
mov
jge
outsb
pop
sbb
mov
ja
mov
cmp
xor
push
cmpsl
xchg
rcrl
cmp
jge
jg
ljmp
mov
test
add
push
mov
test
mov
daa
sbb
xchg
test
lea
push
cmpsl
mov
aaa
hlt
mov
fwait
out
outsl
sub
push
mov
mov
popf
or
jecxz
out
sbb
dec
in
iret
outsb
aaa
mov
xchg
xchg
mov
mov
xchg
adc
fsubrs
cmp
sub
inc
xchg
repnz
inc
jbe
add
scas
add
push
ret
aad
inc
repnz
cmc
clc
cmp
xor
fdivrs
mov
dec
call
movsl
adcl
jl
movsl
lods
ret
mov
out
mov
push
mov
push
mov
andl
lock
and
call
imul
sub
lahf
sbb
sbb
xchg
sub
jno
mov
sbb
adc
push
adc
dec
fscale
dec
and
jb
cmp
mov
fldl
in
mov
xor
mov
pop
or
test
or
jns
in
push
pop
sbb
mov
lcall
sti
add
rcrl
push
int3
dec
sub
add
aam
call
mov
into
push
pop
int
stc
pop
js
push
pop
idivb
rolb
lock
ds
dec
jp
push
xor
movsb
mov
es
adc
jnp
clc
pop
and
xchg
enter
jns
or
jns
out
xorl
ja
stos
sbb
shrl
in
add
pusha
fldenv
xor
ljmp
fldt
mov
jns
sahf
pop
mov
and
stc
push
inc
adc
add
cmp
pop
mov
push
ret
inc
pop
and
ret
pop
rolb
aaa
mov
cld
mov
addr16
data16
push
xchg
cwtl
sbb
sbb
jno
shl
sahf
sahf
push
pop
jb
aam
fwait
sub
clc
jno
pop
outsb
jns
pusha
cmc
call
rorb
add
into
push
or
aad
clc
mov
or
xchg
cmp
push
inc
mov
and
lcall
dec
sub
ja
clc
out
add
imul
mov
mov
adc
rcr
jo
or
or
mov
mov
ret
shrb
pop
xchg
adc
cmpsl
icebp
outsl
add
cmpsb
push
cmp
xchg
xchg
cld
out
sbb
mov
sahf
pusha
cmp
lods
das
arpl
je
mov
and
fadds
movsl
push
js
adc
push
scas
sub
sub
inc
push
add
std
mov
cld
cmp
in
xchg
dec
jae
arpl
adc
fs
cmpsl
cmp
repnz
stos
push
lcall
pop
aad
mov
hlt
mov
popf
subb
push
push
jne
cmpsb
daa
fstl
insb
int3
test
inc
cld
in
inc
inc
out
cmp
fwait
sub
jae
sbb
leave
lods
pop
sub
jae
dec
mov
jle
cmp
lea
add
decb
adc
jbe
dec
sti
dec
or
xchg
in
imul
and
das
xchg
sub
or
pop
xchg
sub
scas
rsqrtps
pop
push
stos
je
dec
jns
ss
mov
adc
imul
out
jecxz
push
cmc
mov
xor
aaa
jmp
cmp
mov
xor
pop
ret
xor
xchg
adc
and
or
test
xor
fimull
push
jge
fnstcw
andb
add
add
or
cmp
dec
cs
cmp
push
fs
mov
cltd
pop
push
mov
dec
dec
xor
adc
aad
aad
jbe
push
int
inc
add
nop
fidivs
add
push
fmulp
mov
add
xor
jp
cli
imul
ds
and
mov
xchg
inc
mov
sbb
adc
fs
fistl
sbb
mov
push
nop
mov
mov
cmp
nop
pop
mov
mov
push
pushf
add
lods
and
std
cwtl
data16
xlat
stos
shlb
inc
popf
movsbl
ret
mov
jecxz
mov
loope
icebp
xor
sub
rcr
fstl
jl
and
xor
in
inc
mov
test
jp
popa
cld
les
popf
sub
push
ficoml
decb
shrb
xchg
adc
out
fs
enter
pop
sub
sub
sub
inc
arpl
and
cltd
cmc
or
js
cmp
aad
sub
cmpsb
jmp
xchg
lret
cld
pop
lds
sahf
dec
push
ss
insb
fwait
mov
mov
xchg
sahf
xor
mov
mov
inc
js
js
subl
and
push
sbb
mov
lahf
das
pop
in
test
pop
test
orl
sub
push
insl
cmpsb
cld
sbb
popa
and
or
cmp
jle
push
cwtl
loopne
sub
movsb
add
or
test
das
jmp
sbb
jge
inc
pop
mov
jl
ret
lret
adc
cmp
mov
cltd
jmp
mov
insb
xchg
dec
cmpl
ror
push
jns
test
mov
nop
sarb
in
outsb
inc
insb
cmpsl
sbb
bound
mulb
cmpsl
xchg
mov
sbb
pop
pop
mov
dec
loope
xchg
or
je
cmp
es
mov
adc
loop
jb
and
stos
push
jecxz
mov
dec
repnz
out
xchg
clc
and
test
mov
enter
jns
out
mov
add
mov
xor
cmp
mov
leave
push
cli
sbbb
inc
sbb
test
in
sbb
out
loop
dec
and
xchg
mov
jb
cs
jl
bound
divl
sbb
mov
das
movsl
mov
repz
lahf
pop
pusha
add
fstps
or
or
cmpsl
sbb
pop
xchg
insl
dec
cmpsb
push
pushf
aad
dec
iretw
je
push
or
dec
out
bound
sbb
aas
aaa
xor
inc
gs
dec
shll
das
cmp
dec
int
sti
pop
mov
mov
add
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
ret
rolb
andl
jno
adc
sub
cmp
fldenv
fs
adc
int
dec
push
sti
shrl
mov
mov
push
les
and
or
repnz
xchg
psubusb
cmp
mov
clc
or
inc
lock
pop
mov
xchg
cld
cmp
insl
out
enter
popf
xor
mov
sbb
test
cmpsb
leave
pop
in
mov
jo
sub
int
cmp
cmp
fcmovnu
inc
fadds
mulb
push
call
dec
pop
mov
and
test
repz
push
sbb
and
lret
inc
outsl
ret
jns
es
xchg
inc
mov
rorb
xchg
sbb
inc
push
xor
daa
test
mov
cmp
ret
pop
sub
cmpsl
addr16
fbstp
popa
bound
ret
pop
dec
gs
mov
fisubs
scas
mov
xchg
cmp
mov
fsub
mov
test
or
bnd
add
cmp
add
add
push
cmc
rclb
pop
fidivrs
aad
ret
inc
mov
dec
cmp
leave
push
inc
negl
push
jbe
pop
pushf
test
clc
in
pop
fisubrl
mov
and
lcall
fisttpl
or
mov
pushf
fwait
jo
into
call
inc
cwtl
jle
or
mov
fsubl
mov
neg
mov
dec
and
pop
xor
and
in
cmc
mov
es
sub
insl
out
mov
inc
stos
lock
sbb
adc
xchg
and
sbb
add
mov
mov
idivb
ret
xor
sbb
adcb
addr16
push
pop
cmp
inc
mov
push
dec
daa
clc
xchg
leave
pop
cli
push
mov
das
adc
loope
cmp
jmp
fs
mov
xchg
or
jge
subl
lahf
sub
stc
xchg
popa
mov
sub
jmp
jl
arpl
dec
and
mov
jmp
and
icebp
dec
jno
cmp
nop
add
xchg
add
sub
mov
stos
jae
jb
jb
lods
addr16
data16
push
scas
pusha
popa
out
in
jns
mov
je
add
cmp
test
outsl
add
addb
mov
lods
push
imul
xor
mov
movsl
adc
pushf
mov
clc
and
mov
fwait
movsb
sti
add
cmpsb
push
jg
pop
jbe
jmp
loope
mov
cmp
add
adc
xor
dec
sub
inc
and
pop
mov
xchg
cld
test
push
ret
insb
test
in
es
je
push
movsl
fdivrs
insb
or
jb
aas
cmp
push
lock
jg
mov
stos
leave
xor
movsl
pop
nop
sbb
or
xor
fcmovne
sub
repnz
mov
repnz
push
xchg
fsub
lods
out
popa
pop
shl
mov
dec
cld
out
hlt
or
lcall
cmp
adc
cmp
jne
add
pop
xor
mov
jae
pop
pop
xchg
inc
mov
dec
mov
stos
lods
ljmp
xchg
imul
mov
mov
stc
fdivrs
jg
adc
popa
pop
mov
cs
jg
inc
mov
shl
cmpsb
arpl
movsb
adc
mov
inc
xchg
sbb
iret
jle
xchg
and
dec
pop
add
imul
cmpsb
shrl
std
push
stc
lods
fwait
mov
lcall
lret
pop
jb
loop
adc
test
ljmp
mov
adc
test
pop
xor
clc
mov
push
aaa
pop
and
imul
add
repnz
fs
xchg
mov
cwtl
iret
inc
int
xor
push
iret
test
pop
sub
jle
pop
imul
fdivrl
in
aam
cmp
mov
js
lea
sub
lahf
out
add
inc
inc
pushf
popw
jl
jp
push
mov
jb
or
mov
inc
decl
loopne
xlat
push
arpl
mov
lcall
mov
arpl
mov
mov
loop
lea
bound
js
xchg
cmp
fcompl
mov
cli
aam
mov
inc
lods
call
in
mov
aad
mov
xor
mov
outsl
int
push
add
fidivs
jae
fwait
push
lret
cs
jae
push
dec
mov
inc
imul
jmp
xchg
adcl
sub
or
adc
xchg
sub
fsubr
add
jno
adc
fs
jns
inc
jge
lret
push
lea
jmp
cmp
cs
stos
out
and
xor
cld
xchg
xor
sbb
adc
dec
dec
and
fwait
mov
es
fsubrl
mov
test
push
movsb
daa
nop
and
fwait
scas
addr16
push
inc
add
pushf
mov
loopne
jecxz
xor
and
cli
and
fcmovb
cmpsl
stos
cmp
into
loopne
jmp
rcrb
in
push
sub
dec
int
movsb
adc
popa
sahf
dec
loopne
push
lods
cmp
add
xor
jmp
mov
pop
ret
mov
repnz
scas
mov
sbb
jbe
test
cmc
ret
mov
imul
dec
hlt
xor
xlat
out
cmp
popa
mov
aam
sbb
cmp
sahf
cli
sbb
xor
mov
test
sbb
nop
shll
inc
cwtl
jmp
data16
mov
add
or
jp
fidivrs
or
inc
aad
out
mov
imul
dec
add
fisubrl
lods
pop
cmpsb
cmpb
lock
icebp
repnz
test
mov
mov
dec
imul
mov
mov
xor
adc
mov
xor
cli
pop
xor
ss
insl
pop
push
pop
jns
dec
xchg
xchg
imul
inc
outsb
lcall
dec
push
orb
xlat
adc
push
ret
xchg
mov
xchg
arpl
inc
std
fisttpl
adc
mov
mov
cmp
mov
rclb
ljmp
xchg
or
dec
add
push
sub
mov
cmc
fcompl
jp
mov
inc
insb
dec
mov
shrl
rorl
push
mov
pop
insl
leave
and
adc
cmp
fiaddl
jbe
cmp
or
cs
lods
lret
pop
pusha
push
fstpt
out
nop
mov
iret
subl
iret
xor
xor
repz
push
adc
es
cmpsb
push
mov
cmp
xor
mov
mov
xlat
add
scas
dec
dec
push
add
sbb
dec
xor
ds
push
in
mov
pop
dec
dec
fstp
out
pop
inc
lods
das
mov
loopne
push
ja
adc
std
mov
fmul
dec
shl
xchg
jecxz
iret
mov
and
repz
into
movsb
inc
sbb
addl
mov
pop
fnstenv
clc
in
pop
sahf
cmp
icebp
jmp
jmp
aad
mov
es
xchg
cli
fisubs
iret
idivb
ja
and
in
xor
stos
sub
lea
pop
fildl
mov
stos
jge
movsb
xor
cwtl
lahf
fnsave
cmpsl
xlat
push
test
out
in
lds
adc
mov
movsb
cmp
pusha
xchg
or
mov
mov
aaa
jle
mov
add
mov
xor
add
pop
add
adc
sbb
mov
jp
cmpsb
divl
sti
es
or
andl
mov
paddusb
shl
inc
push
jno
sub
stc
mov
push
pusha
outsl
push
pop
lds
in
cmp
lds
shll
mov
mov
negl
add
fsubr
pop
push
cmp
ficoms
pop
mov
dec
add
or
dec
nop
inc
mov
push
or
daa
or
or
jno
int3
sti
push
test
pushf
out
inc
pop
xor
loope
cmp
pop
sub
sahf
add
mov
inc
jp
pop
mov
inc
popf
sbb
imul
popa
ja
dec
inc
mov
lea
jle
pop
testl
mov
adc
mov
pop
pop
icebp
stc
pusha
jb
aaa
and
loop
aam
out
jle
jno
cmp
mov
aad
mov
mov
dec
sbb
pop
dec
jns
insb
sub
pop
cs
in
pop
nop
pop
or
inc
add
add
fcomps
jp
sti
inc
add
pop
dec
mov
mov
lcall
mov
xchg
jl
push
sahf
addl
cmp
jnp
pop
cmp
mov
sbbl
scas
loopne
imull
cmpsb
sbb
aad
inc
lea
xor
mov
lret
xchg
adc
out
adcl
adc
pop
add
neg
xchg
cltd
push
xor
ficomps
imul
push
fcomps
repz
leave
push
enter
dec
scas
push
xchg
mov
mov
les
cmp
scas
add
or
ret
iret
xlat
pop
mov
lahf
or
lods
inc
jge
and
mov
pop
stos
inc
out
cmpsl
dec
sti
jae
xchg
push
and
push
test
and
mov
mov
xchg
inc
mov
fnstcw
repz
arpl
pusha
lods
mov
aaa
mov
sbbb
sti
xchg
imul
pop
dec
inc
or
nop
out
sub
mov
outsl
jmp
dec
icebp
xor
cs
dec
sbb
sub
outsb
into
int3
das
iret
out
sub
or
sahf
in
or
das
pop
stos
in
mov
movsb
and
lds
sub
sarl
fnstcw
test
jmp
test
scas
jmp
pop
cmp
cmp
imul
daa
push
push
rolb
mov
mov
jg
cmp
add
pushl
inc
in
icebp
in
add
or
push
cmpsl
cmp
pusha
popl
notb
sub
cmpl
pop
sub
cmpb
loopne
into
ficoms
and
xor
movsl
pop
inc
inc
sbb
shl
movsl
jno
pop
sbb
mov
lods
cmp
out
lds
gs
mov
mov
xchg
mov
jg
inc
mov
cs
out
ss
sub
sub
popf
adc
jnp
fdivs
push
sub
test
xchg
fstps
sub
fbstp
inc
mov
cmp
adc
lahf
popa
and
and
lods
cwtl
sti
pop
sahf
mov
jecxz
mov
pusha
clc
mov
outsl
rcrl
xorb
imulb
xor
jae
push
addl
xor
cmp
cmpsl
lahf
leave
mov
push
inc
xchg
ljmp
jecxz
mov
insl
dec
cmp
fistps
jns
xor
insb
pop
dec
add
dec
push
aad
mov
ja
sub
or
mov
lds
lods
shrl
fwait
lret
push
mov
jp
pop
push
outsb
cli
xchg
cmp
pop
sbb
int
shr
pop
negl
dec
inc
pop
movsl
xchg
sahf
push
lahf
aaa
push
push
outsb
cmp
sbb
sub
scas
mov
vorpd
mov
data16
mov
and
cmp
lods
enter
in
test
xor
push
repz
ja
jmp
fsts
mov
aad
scas
int3
mov
pcmpeqd
xor
sub
push
in
andb
stos
pop
rcll
in
subb
cmp
dec
pop
div
out
cmc
dec
fdivs
jae
aam
mov
adc
pop
mov
sbb
jns
pusha
das
loopne
xchg
adc
nop
jg
cmp
cli
adc
test
dec
xchg
cmpsl
js
lea
ja
shr
lea
jno
add
push
dec
movsb
cmp
fnstsw
mov
jle
xor
xchg
in
rcll
int
pop
sbb
push
ljmp
cltd
mov
mov
xchg
daa
mov
repz
scas
stos
and
repnz
jg
stc
mov
and
pop
movsb
call
push
andb
ss
and
mov
out
push
push
add
jo
loop
mov
mov
push
push
mov
adc
mov
aam
xchg
mov
or
mov
pop
pand
mov
ss
adc
mov
fwait
dec
es
cltd
sub
stos
mov
mov
out
out
out
rol
loop
mov
and
jl
mov
xchg
jns
repnz
mov
pop
and
dec
mov
fdivr
pop
add
push
cmp
and
mov
sbb
ja
int3
lock
pop
outsl
pop
cmp
imul
mov
sarl
and
sbb
mov
inc
add
inc
rorb
push
lods
das
ja
jp
mov
xlat
fidivrs
stc
imul
js
ss
push
pop
outsl
sahf
cmpsb
sbb
dec
xchg
cmp
sbb
and
sbb
test
loope
js
subb
and
movsl
das
popf
ret
add
shlb
xchg
dec
push
out
sub
hlt
scas
loope
mov
inc
jb
sub
in
imulb
sub
pop
dec
out
xchg
addr16
dec
mov
push
mov
or
sbb
scas
je
test
in
mov
xchg
adc
add
ret
iret
pop
and
leave
cli
fmuls
adcb
mov
mov
dec
dec
add
std
imul
or
lahf
aaa
push
imul
ljmp
or
cmp
xchg
or
leave
dec
xchg
or
pop
mov
mov
sbb
fmuls
xchg
out
mov
dec
push
imul
push
int
and
xor
frstor
adc
pusha
push
and
repz
sti
add
xor
js
push
jnp
rcl
sub
xor
aam
insb
mov
dec
push
push
cmpsb
ljmp
cltd
gs
outsb
add
add
lea
or
cltd
call
xchg
mov
rorb
mov
mov
pop
mov
xor
mov
or
pop
xchg
mov
scas
sahf
add
cs
dec
pop
shll
pop
enter
cmp
cmp
mov
inc
fwait
mov
rcl
dec
cmpsl
mov
fistpl
xchg
cmp
rol
cmovo
mov
shrb
and
test
cmp
iret
or
mov
test
cmpl
push
xchg
add
pop
xchg
pushf
fisubs
mov
test
data16
jae
cltd
push
stc
movsl
aad
test
insb
pop
jo
cmp
cmp
or
das
addr16
mov
int
imul
sub
xchg
or
gs
cmp
jo
jno
out
stos
xor
pop
push
lock
xchg
insb
jbe
push
mov
inc
outsl
sub
mov
sub
jmp
dec
xchg
add
repz
inc
rol
fstpl
push
jg
mov
jae
outsl
fs
cmp
out
and
sarl
out
outsl
mov
pushf
pop
aas
mov
sub
sub
leave
fisttpl
xchg
adc
fbld
cmp
sub
xchg
xor
jp
pusha
xor
push
jp
test
ds
jmp
pop
xlat
jmp
sbb
xchg
stos
or
lret
iret
je
jns
jnp
les
pop
pop
shl
aad
sub
sub
cmp
jle
loop
jle
aas
addb
fs
stos
insb
jns
inc
and
and
fwait
mov
iret
cwtl
cmp
mov
sahf
mov
push
and
inc
cmpsb
or
cmc
daa
loop
or
inc
shlb
xor
sahf
pop
mov
mov
cmp
xlat
mov
dec
mov
cwtl
cmpl
push
lds
jmp
dec
xlat
shrb
pop
or
ficompl
pop
jle
lcall
xor
mov
mov
sbb
pop
and
rol
adc
add
xor
push
out
mov
in
aad
xchg
call
jecxz
cwtl
pusha
sbb
into
add
out
mov
scas
or
aam
fdivrp
pop
stc
imul
imulb
pop
jp
and
cmp
bound
add
inc
mov
mov
dec
push
shlb
hlt
and
sub
insb
mov
sbb
ret
rcr
jnp
push
mov
addb
clc
dec
rolb
jg
push
shll
push
push
adc
mov
loop
cli
les
push
push
outsl
lods
aad
mov
push
push
jae
mov
mov
mov
jg
push
out
and
dec
mov
mov
js
je
into
push
mov
xchg
xchg
shrl
clts
cwtl
mov
loopne
mov
inc
add
aaa
int3
in
daa
lds
sub
jl
and
lret
mov
or
mov
repz
push
mov
in
jge
lds
push
arpl
mov
and
icebp
sarb
push
inc
fsubrs
push
int3
xor
pop
outsl
ret
nop
cmp
out
stc
repz
sub
inc
adc
sub
dec
xchg
mov
pop
push
jb
pop
lea
cltd
sub
addr16
cld
mov
inc
jge
stc
test
rep
ret
inc
mov
pusha
jge
xchg
stos
insb
xor
mov
or
cltd
pop
rorl
pushf
fisttps
fsubs
jnp
or
cmp
mov
loope
jb
jp
cltd
cli
daa
popa
xchg
lret
out
cmp
pop
sbb
andl
and
or
ljmp
mov
sbb
into
lods
jp
sbb
dec
cld
xor
dec
fidivrs
mov
aam
sti
shll
mov
xor
rolb
xchg
nop
cld
cmpsl
cmp
movl
adc
jge
jl
dec
clc
aam
repz
pop
mov
js
and
jo
jbe
or
js
aaa
fdivrs
fdivl
maxps
xor
frndint
and
mov
nop
push
mov
and
ss
push
sbb
inc
fcmovbe
test
mov
push
fmul
in
jno
sbb
xchg
cmp
add
or
outsb
lea
pop
push
sbb
mov
sti
call
addr16
mov
jns
out
pop
jg
dec
outsl
lods
mov
addr16
std
sbb
cwtl
das
aaa
sbb
mov
lea
cmc
sarb
inc
mov
aad
pop
jl
leave
fstl
mov
movsb
mov
movsl
jp
addr16
andb
mov
call
push
popa
dec
rol
ror
mov
xchg
mov
subl
jns
out
or
ss
pop
cmpsb
inc
es
jle
int
and
shll
ficoml
and
imul
arpl
mov
in
adc
pop
aam
incb
test
fs
sub
fiadds
das
xchg
push
roll
add
mov
enter
xorb
popa
push
dec
push
shrb
daa
nop
mov
xorl
add
bnd
dec
xchg
pushf
out
cs
add
cmpsb
adc
mov
jmp
xchg
out
add
aam
jns
xor
addr16
aas
mov
cld
xor
cwtl
sbb
add
or
xor
cmpb
xor
and
push
sti
inc
je
sti
ja
xchg
sub
or
loope
sbb
sbb
inc
stc
lea
out
jns
daa
mul
in
in
mov
mov
into
out
sub
fcomps
stc
shlb
imul
fnsave
popa
repnz
mov
sbb
fcoml
inc
mov
rcr
repnz
sbb
dec
sub
adc
cmp
notl
dec
and
pushf
push
shl
inc
pop
lcall
add
add
lahf
or
mov
bound
insl
sub
and
jl
inc
pop
sub
stos
dec
pusha
mov
mov
out
xchg
mov
xor
loope
cli
jp
mov
sbb
push
mov
mov
cmpsl
sti
ret
andl
mov
loop
daa
adc
in
xchg
xor
xor
mov
fadd
out
ja
inc
test
dec
push
jg
lock
sub
sbb
jl
xor
or
jno
pop
inc
imul
mov
cmp
push
mov
pop
jmp
jle
cmp
jnp
inc
push
push
mull
dec
movsb
and
mov
jge
outsl
add
divl
cli
outsb
arpl
mov
xor
lret
in
rorl
or
cld
int
and
mov
mov
lods
das
cwtl
adc
iret
sbb
rcr
push
push
inc
xlat
ds
xchg
adc
pop
lahf
scas
sbb
xchg
aas
jo
js
or
imul
cwtl
je
and
outsb
das
or
inc
imul
fcompl
inc
aad
popl
jo
push
rcrb
cld
pop
mov
fnstsw
je
aas
fwait
mov
sbb
sub
xchg
xchg
push
and
add
cmp
mov
jne
pop
dec
fwait
cwtl
lret
pushf
mov
test
add
lock
push
lods
sbb
rolb
int
dec
scas
pop
mov
add
sbb
sti
dec
jmp
mov
mov
adc
rcrl
into
mov
in
test
xor
aaa
repz
popf
dec
sub
lods
push
dec
or
les
out
mov
mov
std
sbb
inc
add
pop
in
inc
adc
dec
add
leave
fwait
clc
xor
cwtl
push
hlt
insb
and
push
cmc
adc
pushf
jo
push
pop
inc
in
xchg
jecxz
dec
dec
sub
sub
mov
pop
pusha
pop
andb
push
mov
test
sahf
push
cmpsl
pop
lea
test
dec
push
lods
popa
setnp
xchg
push
jmp
movsb
scas
or
cmpsl
mov
xchg
roll
jge
fwait
hlt
insl
pop
jb
repnz
addr16
or
ffreep
pop
pop
or
popf
jge
nop
int3
dec
iret
pop
add
fisttpll
add
movsl
bound
es
mov
sbb
sbb
sub
bound
test
jle
cmc
je
in
inc
sbb
lret
inc
jbe
int
dec
sub
lahf
or
into
inc
test
xchg
xchg
jl
fs
clc
xor
scas
mov
mov
mov
or
xchg
or
scas
push
cwtl
leave
xlat
xor
out
jne
loop
cmp
xor
jnp
or
or
inc
fs
adc
adc
xchg
rol
inc
scas
loop
lahf
adc
sub
jg
push
scas
out
imul
leave
and
mov
mov
hlt
inc
rol
mov
jb
gs
mov
adc
mov
fiadds
mov
stc
rclb
pop
cmp
mov
loope
dec
push
adc
cmp
je
divl
repnz
mov
cmp
stos
dec
add
xor
jae
mov
dec
sbb
cmp
xchg
scas
cmp
push
icebp
pusha
xor
out
push
lret
cld
movsb
mov
testb
fcomps
and
or
push
and
sbb
dec
push
xchg
add
mov
cmp
mov
pop
push
add
mov
mov
mov
add
push
xchg
jno
adc
or
out
xchg
lahf
adcl
push
fs
mov
and
jns
fsubl
in
jmp
inc
push
xor
fld
cmp
xchg
jmp
ss
testb
dec
add
sbb
mov
andnps
push
ret
int
mov
aam
rorl
lods
stc
insl
xorl
jbe
mov
loop
jge
mov
lret
mov
jge
mov
push
sbb
mov
jl
lods
mov
xor
adc
pop
jno
pop
pop
jmp
mov
xchg
fdivs
inc
dec
adc
ja
and
nop
movsb
lcall
leave
loope
cmp
and
sarl
mov
push
jl
xchg
rcll
cmp
rorb
jae
fsubrs
and
jg
adcl
call
jbe
fstpl
je
mov
ds
push
xchg
jecxz
aaa
outsb
adc
aam
xchg
cld
jp
fsubr
xor
or
mov
xchg
jno
cmc
and
notrack
and
xor
addr16
inc
push
stc
or
ret
in
ror
push
in
add
pusha
lret
inc
in
test
sbb
rolb
clc
jae
sub
fsub
imul
mov
add
sbb
push
cmp
gs
jno
std
sbb
and
lods
and
test
into
push
dec
sbb
loop
fs
push
jb
movsb
mov
mov
sub
dec
ljmp
mov
xchg
lahf
hlt
repz
shrl
cld
mov
inc
pop
dec
mov
mov
mov
mov
stc
dec
aaa
mov
fidivl
cmp
mov
out
mov
xor
ret
out
and
lock
xchg
mov
adc
cmpsb
inc
stos
imul
mov
cli
xchg
push
dec
fcoml
sbb
lods
pop
mov
mov
mov
imul
sub
xor
add
jae
dec
jns
jae
outsb
xlat
icebp
sbb
bound
sub
enter
std
data16
mov
shrb
ret
addl
push
das
and
dec
mov
xor
mov
jle
sub
pop
pop
loope
stos
in
clc
insb
dec
popa
mov
cmp
mov
movsb
fldt
cmp
pop
daa
mov
or
jmp
and
fidivrs
daa
dec
lcall
insl
xchg
xchg
in
pop
scas
nop
jle
and
shrb
icebp
mov
gs
xor
adc
test
inc
cs
mov
sti
ds
stos
and
xor
stos
push
loop
dec
mov
pop
pop
sbb
outsl
xchg
pushf
cmpsb
in
jns
scas
mov
iret
sub
sub
and
and
loop
pop
outsb
in
adc
mov
adcl
jle
ljmp
lods
ret
push
ret
pop
lret
add
inc
push
sahf
jnp
mov
lods
jne
sub
sub
addb
mov
popa
xchg
test
cmpsl
xchg
fnstsw
inc
cs
roll
jnp
xchg
enter
xlat
fistl
dec
nop
cmpsb
je
icebp
mov
mov
or
jb
pop
popf
and
mov
jecxz
mov
enter
es
xchg
mov
ret
xchg
shlb
ret
xchg
adc
addr16
mov
pop
mov
push
push
arpl
jne
es
mov
pushf
inc
in
jne
pop
lds
jb
jge
int
inc
loop
adc
aaa
pop
sub
pop
scas
mov
mov
call
ljmp
add
jle
out
leave
mov
test
add
lds
js
in
int
jne
cmp
sub
and
mov
sbb
push
ljmp
fcmovnbe
pop
jp
loope
popa
jp
arpl
mov
inc
jecxz
xor
sbb
cmp
cs
xchg
ror
repz
cmpsb
inc
xor
cmpsb
lahf
into
popf
loopne
xor
icebp
into
mov
cli
pop
testl
stos
loop
adc
jno
mov
lds
lret
lods
test
xlat
xor
cmp
mov
sbb
in
sbb
adc
mov
pop
lea
iret
inc
mov
add
xorl
push
sub
sbb
cmp
adc
and
mov
divb
loope
mov
ret
and
insl
cmp
push
jecxz
fldcw
push
cmp
mov
dec
mov
scas
ljmp
pop
jo
mov
mov
sbb
mov
mov
ret
inc
addr16
push
popf
dec
mov
aaa
sbb
sub
pop
enter
adc
push
sub
xchg
pop
cmp
jno
arpl
hlt
fists
add
xchg
xchg
xchg
push
cmpsb
push
inc
mov
in
push
push
jl
data16
xchg
and
mov
dec
pop
xchg
cmpsb
or
outsl
push
mov
mov
adc
nop
dec
pop
shll
sbb
shrl
fnop
sub
dec
and
and
push
jmp
or
leave
cmp
push
cld
jle
inc
or
int3
and
inc
sbb
jno
lods
jo
std
push
in
out
outsb
imul
inc
jmp
repz
imul
xor
aaa
sbb
add
popf
push
stos
cltd
dec
aad
jmp
xor
and
jae
movsl
cmc
lret
or
fadds
repz
loop
push
push
jge
insb
xor
add
cli
add
xchg
cmp
cwtl
xor
call
mov
addr16
mov
push
insb
add
and
jno
jg
sar
sbb
mov
mov
xor
roll
idivl
cmp
sbb
fldcw
jb
xor
mov
inc
mov
pop
fcompl
lods
or
dec
in
test
mov
outsl
notl
fstpt
sbb
sbb
add
pop
nop
imul
cmp
mov
out
insb
mov
push
cmp
ret
in
adc
mov
xchg
out
dec
xchg
dec
cmp
push
in
ret
xchg
dec
out
adc
add
inc
and
mov
add
std
push
js
push
movsl
sub
jbe
dec
xchg
ljmp
lods
sbb
loop
hlt
pop
inc
adc
sarl
std
mov
aas
loope
and
mov
les
subl
push
sbb
jmp
mov
push
xor
jnp
mov
and
add
and
mov
test
sub
mull
fistps
xchg
dec
or
jno
adc
adc
stos
imul
sbb
adc
jg
add
mov
aaa
jnp
xchg
mov
fsubr
movsb
shrb
aam
add
push
ljmp
imul
xchg
test
xchg
cmpsb
inc
das
fistpll
mov
xor
mov
jnp
add
jl
cmpsl
ficomps
and
push
fcmovne
inc
dec
jbe
lret
jb
ss
sahf
test
pushf
add
push
jmp
mov
fmull
or
or
jnp
popa
iret
cmp
stos
fsubp
xor
fistpl
push
mov
inc
xchg
repz
dec
movsb
xor
rcrl
ret
mov
or
sbb
loope
sbb
adc
xor
sub
cwtl
shl
leave
cmp
or
or
mov
cmp
aam
sbb
insb
lds
inc
shll
push
xor
sub
sub
fwait
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
and
addl
bound
xor
faddl
ja
or
add
filds
inc
lods
jp
xchg
mov
ror
dec
scas
dec
adc
xor
sub
js
mov
xchg
ret
and
sbb
inc
jmp
mov
pop
push
add
xor
subb
lcall
sbb
sub
jecxz
pop
nop
pop
pop
ljmp
jp
sbb
clc
fwait
xchg
pop
jl
test
shr
add
sahf
into
mov
int
pusha
sub
mov
mov
mov
negb
cmp
sbb
loop
sarl
subb
mov
lret
fiaddl
push
fdivp
cmpsb
cmc
sbb
add
lods
icebp
dec
pop
xchg
push
cltd
ja
movsb
ss
dec
xchg
pusha
scas
hlt
pop
push
push
mov
std
sahf
pop
ret
sub
fwait
jecxz
xor
data16
jne
pop
cmp
mov
xchg
inc
dec
stos
clc
cmc
test
lock
shll
adcb
push
jno
pop
mov
sbb
bound
in
adc
sub
out
sub
aas
pop
mov
cmpsb
xchg
shl
int
mov
bound
pop
mov
lock
cmp
call
pusha
mov
das
mov
inc
dec
arpl
xchg
sbbl
jnp
insl
add
lds
jne
cwtl
cmpsb
sub
sub
push
fcomip
mov
iret
push
fimuls
ficompl
sahf
and
call
mov
jl
push
into
int
jne
mov
movsl
std
or
push
addl
lret
mov
dec
nop
mov
dec
insl
test
dec
sarl
jg
imul
xchg
outsb
and
cmp
or
dec
inc
popl
orl
ja
add
or
mov
cmp
lcall
insl
data16
pop
sub
jno
add
test
jecxz
cmp
test
mov
xor
cs
mov
lods
cmp
cmp
sbb
or
mov
mov
andl
jno
test
sbb
repz
dec
jle
fsubrl
mov
sti
or
lcall
fimull
push
cmpsb
insb
xor
pop
sbb
inc
push
mov
mov
ss
inc
lahf
pushl
and
xor
test
sub
add
mov
jbe
dec
adc
data16
sub
jnp
cmc
mulb
enter
fs
mov
imul
push
mov
out
dec
aaa
jecxz,pt
divb
cmp
hlt
int3
mov
inc
fidivrl
xchg
inc
aad
cmpb
mov
sbb
stos
mov
and
das
fists
xchg
scas
sbb
sarl
int
sub
rcpps
scas
push
push
ret
push
adc
or
fisttpl
fwait
aam
adc
cmpsb
jle
mov
mov
mov
xlat
dec
lahf
test
icebp
adc
shrb
inc
stc
lret
repz
ss
sub
xor
shrb
aad
scas
outsl
cltd
mov
fstps
sbb
leave
fnstcw
insl
jbe
icebp
mov
mov
fsubrs
push
std
mov
inc
add
jo
xchg
gs
cmp
push
inc
xchg
mov
pop
repnz
aad
inc
push
fucom
outsb
mov
cs
sbb
push
in
push
stc
adc
push
stos
cld
pop
mov
pop
push
mov
je
lret
js
mov
xchg
push
andl
pop
das
daa
dec
mov
or
shr
push
ja
out
iret
jo
es
or
les
adc
sti
and
in
cltd
add
jp
mov
cmc
bnd
stos
mov
sbb
sbb
sub
pop
jne
fisttpll
inc
adc
loope
loop
add
outsb
cmp
cld
jns
xchg
sub
mov
dec
adc
mov
dec
scas
jbe
daa
mov
fsubrp
push
repz
xchg
adc
sbb
mov
jle
push
or
mov
pushf
xor
cwtl
inc
bound
sbb
rolb
ud0
icebp
mov
cmpsb
mov
pop
icebp
and
push
ret
arpl
inc
push
xchg
lds
ds
mov
sub
icebp
sti
cmove
div
add
dec
call
mov
pusha
ja
arpl
mov
cmp
iret
xlat
aaa
mov
dec
sub
xchg
fsubrl
enter
clc
call
fnstcw
clc
lods
pop
xor
pop
shrb
mov
xor
cltd
jns
mov
mov
in
imul
mov
add
pop
push
imul
jno
in
ficompl
movsl
fsubrl
jae
stc
xchg
xlat
push
add
xor
add
dec
pop
mov
pop
add
jae
xchg
loope
ret
outsb
xor
icebp
outsb
mov
loope
mov
cmpsb
dec
cmp
cmp
aad
sbb
cli
jecxz
pxor
into
test
int3
sbb
out
sbb
ror
or
add
pop
into
xchg
jmp
push
inc
jno
jp
pop
int
xor
push
xchg
xor
lea
xchg
jne
xlat
push
dec
pop
add
mov
cli
les
inc
cmp
xchg
mov
cmp
push
insb
sub
jae
out
shl
mov
push
pushf
and
lea
jecxz
add
fnstenv
or
xor
push
sbb
inc
push
mov
movsb
repz
push
push
cmp
adc
sbb
addr16
out
lods
jno
inc
out
mov
cmp
cmc
scas
loop
fmuls
mov
daa
xor
xchg
xor
out
insb
insb
scas
in
out
pop
es
pavgw
jae
mov
push
clc
push
push
mov
loopne
mov
inc
mov
xchg
mov
je
push
aas
or
add
in
loope
aas
sbb
arpl
repz
outsl
mov
fwait
dec
sub
nop
ss
scas
int
xchg
imul
cmc
shrb
pop
in
sbb
xchg
fnstcw
jl
out
push
aas
xchg
stos
les
jmp
test
mov
jne
mov
ret
pop
rcrl
dec
jbe
test
test
xchg
jmp
jb
dec
push
push
jecxz
xor
inc
fisubs
xchg
push
cmp
idivb
into
repnz
adc
mov
mov
push
adcl
cmpsl
mov
xchg
fidivl
mov
adc
push
adc
jg
push
cmp
mov
or
pop
push
or
pushf
cmpsl
adc
subl
or
loop,pn
adc
or
pop
popf
ds
and
mov
sbb
fs
lds
movsl
enter
loop
xchg
pop
ficoml
jno
jnp
fsubrs
aas
popf
push
adc
mov
movsb
pop
and
ret
pushf
dec
add
jl
movb
mov
jnp
ret
dec
call
mov
aad
gs
ljmp
push
mov
sub
es
mov
mov
out
pop
adc
shl
cmpb
push
sub
push
loop
inc
or
pushf
int3
pop
notl
or
jae
adc
andl
mov
cmp
adc
adc
push
cltd
lret
pop
pop
pop
and
jp
jge
adc
cmp
ret
mov
pop
sub
fistl
xchg
push
push
or
push
sti
xchg
pop
jo
dec
dec
sar
add
fcomi
and
pop
aas
mov
mov
jno
aas
or
adc
adc
jp
jecxz
inc
arpl
jns
sbb
xor
push
xlat
test
jnp
imul
mov
cmp
jne
repnz
shlb
cwtl
pop
sub
sbb
add
jns
shll
loopne
xchg
pop
repz
insl
xchg
js
sbb
das
aad
mov
cmp
jae
cltd
push
stc
rorl
push
lods
mov
sbb
dec
xorb
popf
push
cmp
jbe
in
movhps
jg
inc
jl
ret
mov
adc
lds
xchg
in
pop
push
in
jmp
add
repz
cwtl
fwait
or
push
mov
adc
xor
scas
sbb
iret
xchg
fwait
pop
arpl
xchg
mov
fmuls
inc
arpl
movsl
xor
stos
xchg
es
shl
adc
mov
sbb
cwtl
pop
js
add
iret
jl
mov
jp
pop
cwtl
shl
fsubr
je
jg
lds
repz
jmp
fcompl
cmp
xor
or
inc
sub
jno
xor
cmp
pop
xor
addr16
inc
xchg
pop
jno
inc
mov
aad
sub
pop
arpl
cmc
imul
add
nop
lcall
jno
push
sbb
popa
jbe
xlat
fwait
out
add
rorl
jae
in
sbb
ret
sbb
xor
and
mov
scas
in
mov
movsl
cmp
pop
jnp
jb
and
inc
add
pop
sub
xchg
pop
addr16
dec
and
je
push
add
fwait
cmp
xor
cwtl
push
or
imul
mov
out
sub
xchg
push
dec
cmc
fdivrs
xor
scas
pop
andl
repz
inc
xchg
ret
setne
fsub
xlat
pop
xchg
and
cmp
mov
add
xchg
lret
movsl
xorl
mov
lock
adc
pop
je
dec
adc
sub
jge
sbb
imul
mov
mov
pop
loopne
je
out
out
icebp
mov
adc
dec
xchg
pop
aaa
lods
inc
add
dec
xorb
scas
faddl
mov
movsl
jl
jns
xchg
loopne
sahf
imul
jno
rclb
xchg
push
adc
add
pop
movsl
insl
popf
nop
scas
mov
mov
mov
push
mov
jae
xor
test
mov
pop
adc
mov
mov
scas
jge
rcrb
and
and
in
test
pop
out
dec
mov
inc
lahf
scas
dec
xchg
dec
pop
adc
and
add
ljmp
xor
cmp
pop
mov
sub
push
mov
adcl
inc
adc
rorb
in
dec
mov
outsl
lahf
lods
stc
negl
ds
xchg
pop
lahf
int3
ss
into
popa
dec
or
ds
jb
lods
shrb
push
bound
push
or
sbb
xor
and
or
mov
jno
adc
out
mov
adc
jmp
inc
pop
dec
add
pop
rcr
xor
ret
or
cwtl
xchg
popa
addr16
and
adc
popl
xchg
and
xchg
iret
mov
daa
lock
test
mov
adc
adc
jne
add
aas
sbb
xor
mov
or
scas
dec
aam
xchg
scas
inc
adc
and
sub
add
mov
or
filds
dec
push
mov
add
pushf
rolb
sub
inc
dec
in
ret
lds
mov
sbb
mov
arpl
push
stc
add
fbld
inc
sub
das
rcr
xchg
fisubrl
pop
mov
imul
popa
xorb
or
add
push
push
jno
insb
pop
shll
add
add
int3
cmp
incl
mov
negb
aam
cmp
loop
xor
inc
jl
daa
push
jmp
and
int
mov
sub
mov
test
mov
add
push
and
pop
into
out
lcall
lods
imul
lret
xor
jo
repz
shlb
lea
pop
jp
mov
or
scas
jo
repz
xchg
shlb
daa
pop
mov
ret
sub
dec
pop
jmp
pushf
pop
xchg
xor
or
add
sub
lods
sub
popf
aam
stos
or
add
loope
and
fwait
mov
add
insb
cmp
pavgw
cmp
fcomps
mov
sbb
pop
mov
out
mov
add
cmp
mov
pusha
cmp
mov
std
cmp
imul
loop
loopne
stos
shll
xor
cmp
ret
mov
dec
leave
outsb
out
inc
xor
xchg
adc
mov
lret
pop
or
mov
test
and
add
fidivrl
mov
test
adcb
dec
jle
pop
data16
jmp
in
pop
rcl
lods
xchg
pop
pop
dec
std
adc
int
add
lds
pop
sarb
xlat
out
nop
inc
adcb
add
push
xchg
popa
jne
fdivs
pop
inc
mov
arpl
loop
mov
or
es
subb
in
jmp
add
iret
cmp
fsts
pusha
push
inc
add
int
xor
jmp
mov
shl
test
repnz
jl
pop
cmp
push
adc
sti
pop
gs
xchg
push
jecxz
rcrl
xlat
xchg
jne
adcb
ljmp
mov
mov
aam
pop
inc
mov
adc
je
mov
iret
inc
pop
cli
dec
mov
int3
jp
rol
sbb
or
in
insl
and
stos
pop
movsl
leave
fstp
adc
mov
popa
inc
daa
cmpsb
faddl
pusha
mov
sub
mov
js
sti
cmp
xchg
push
lea
push
or
movsl
mov
mov
pop
imul
push
inc
rorb
scas
sti
and
mov
cli
add
add
aad
cmpsl
jmp
xor
gs
or
js
dec
or
dec
jp
xchg
lods
mov
jbe
in
fcmovb
rorl
push
push
repnz
fldenv
cmpsl
in
and
adc
bswap
movl
mov
out
mov
push
xchg
jbe
adc
xchg
lahf
std
push
and
jecxz
clc
idiv
xchg
enter
xchg
fsub
out
rcl
jno
cltd
sub
roll
cwtl
cld
test
in
scas
stc
adc
push
iret
adc
fcoms
rorb
push
pop
or
cmp
xchg
jnp
clc
nop
je
sbb
sbb
push
mov
adc
sub
sub
sbb
xorb
pop
xorb
movsl
mov
pop
fcmovb
dec
lods
or
jle
arpl
add
mull
jo
add
fildll
lds
es
scas
and
sbb
addr16
mov
and
jne
xchg
stc
scas
sbb
movsl
das
pop
cmp
popa
lea
inc
dec
enter
xor
lea
jmp
add
fucom
std
adc
aam
cmpsb
xor
mov
adc
jle
sub
dec
cld
jmp
add
aas
lods
xor
push
xchg
cmp
mov
lahf
fisubrs
mov
clc
lock
test
rolb
sti
in
add
int
jns
inc
cmp
pop
loope
add
arpl
sbb
ds
fdivrs
push
xor
lods
mov
adcl
add
inc
mov
shl
xor
mov
xor
test
mov
pop
sbb
das
ret
add
push
test
and
pusha
aad
fisubl
jne
push
add
jmp
aaa
popf
jbe
cwtl
xchg
or
mov
xor
rcr
mov
mov
mov
scas
sub
dec
push
pushf
iret
mov
cltd
push
pop
subb
mov
push
sbb
jb
push
insb
inc
insl
scas
dec
std
shlb
xor
xor
fcomp
les
cmp
cs
mov
in
in
pushf
pop
jle
lea
gs
insb
mov
push
adc
cmc
mov
sarl
adcl
out
clc
xchg
test
out
cwtl
cltd
mov
pop
clc
push
sub
cs
or
xor
in
cmpsb
jle
lahf
mov
or
fimuls
jnp
adc
push
jecxz
sbb
cmpsl
dec
add
pop
dec
push
inc
mov
or
sub
inc
ret
loope
or
aaa
jno
jno
js
push
popf
outsb
sbbb
add
lret
outsb
push
xchg
cmp
jnp
mov
mov
jb
xchg
out
pushf
or
das
xor
and
jmp
mov
imul
mov
fisubl
aaa
jnp
sub
pushl
xor
imul
sti
popf
sub
addb
dec
in
sti
jb
mov
add
pusha
add
sbb
rcll
ljmp
shl
and
dec
icebp
xchg
fldl
sbb
aas
or
xchg
jge
cmp
push
lcall
mov
add
jle
test
and
rorl
mov
or
cld
mov
addb
xchg
add
xor
fwait
stos
fxch
sahf
mov
xor
inc
enter
pop
jnp
jb
fcmovne
aad
aas
cltd
outsl
inc
andl
imul
cmp
mov
add
mov
callw
jns
subl
rolb
dec
lods
int3
mov
out
pop
or
je
xor
mov
mov
notb
cmp
add
xor
lods
rorb
sbb
data16
jmp
push
mov
mov
out
push
mov
clc
sbb
pop
lods
or
clc
lret
push
outsb
sbb
mov
pusha
dec
mov
jne
in
aad
repnz
push
ret
mov
repz
dec
cmpsb
mov
pop
mov
mov
bound
push
mov
insb
sub
adc
mov
mov
ret
jmp
add
pop
lods
pop
mov
or
mov
call
sbb
sub
stos
push
push
xchg
mov
xchg
mov
scas
loop
add
adc
popf
xchg
jmp
icebp
push
in
scas
push
jmp
sub
add
or
shll
mov
push
jle
sarl
std
cmp
enter
inc
loope
mov
pop
cmp
std
clc
inc
cmp
push
cwtl
cmp
and
inc
les
sub
adc
xlat
add
jecxz
pop
neg
fwait
hlt
sbb
mov
test
std
bound
in
rcll
es
xor
insl
add
rolb
pop
andb
xchg
cmpsl
shrb
shrb
movsl
xchg
inc
mov
into
cli
sbb
jne
or
sub
xor
mov
jp
mov
stos
add
xchg
or
xor
pop
cli
movsl
mov
pop
pop
outsl
jbe
cmp
mov
fcomps
mov
cltd
mov
mov
jo
repnz
inc
fimuls
loope,pt
xchg
mov
xor
push
movsb
inc
inc
nop
in
mov
mov
addr16
outsl
je
sbbl
mov
sbb
je
xor
imull
and
sbb
pop
xor
jb
lret
cmp
ror
fidivs
fldl
repnz
out
sbb
push
inc
mov
in
les
fimull
pop
sub
int3
popa
sti
ret
or
mov
fwait
jbe
insl
add
pop
dec
fldl
jl
dec
push
add
cli
out
scas
pop
sub
push
out
pop
or
jo
ret
xchg
pop
lcall
xor
lods
fdivrs
pop
push
mov
xlat
je
das
jmp
fldl
fs
add
outsb
data16
ss
aaa
xchg
sahf
lcall
dec
dec
xor
lret
nop
cmp
sub
adcl
out
mov
stos
xchg
lods
push
aam
mov
daa
push
outsl
scas
pop
cmp
add
ret
jbe
pushf
lds
adc
xchg
pop
lods
add
inc
leave
cmovae
cs
loope
pop
mov
pushf
lea
pop
scas
jl
dec
dec
mov
insl
mov
ss
push
jns
fists
cmp
arpl
insl
jmp
jle
mov
xchg
adc
aas
dec
lret
add
sbb
fistl
andl
lahf
out
stc
sub
add
add
push
popf
repz
push
xor
push
es
mov
mov
clc
nop
cltd
jns
aad
loopne
mov
leave
aad
shrb
mov
in
jge
pop
ret
movsb
xor
mov
dec
jg
pop
sbb
pop
cmp
mov
fwait
pop
jle
and
scas
popf
outsl
dec
add
pop
je
loope
pop
in
push
mov
jecxz
push
mov
ljmp
mov
push
jecxz
mov
mov
stos
or
add
mov
pushf
shlb
sbb
push
xor
imul
adc
lret
or
mov
mov
mov
mov
repz
pop
in
fdivrs
pop
les
nop
mov
or
loopne
dec
cmp
arpl
sbb
push
sbb
cmp
mov
xorb
hlt
xor
sub
xchg
xor
into
or
adc
aaa
mov
sar
dec
mov
pushf
dec
clc
xor
dec
in
push
pop
loope
mov
cli
mov
ret
inc
mov
insl
cmp
push
mov
icebp
add
repz
les
or
inc
divl
mov
icebp
jbe
xchg
lock
or
jp
adc
inc
pushf
pusha
lret
sbb
mov
sub
js
out
mov
out
sbb
inc
clc
xorb
push
arpl
xor
pusha
or
clc
or
lret
mov
ljmp
in
xchg
pop
cmp
pop
in
mov
fldcw
cli
pop
push
out
loopne
int3
push
mov
push
rorb
xchg
ret
rorl
mov
rorb
fbld
xchg
and
push
pop
inc
push
pop
lret
sahf
rcll
aas
insb
push
cltd
enter
mov
movl
stos
dec
xor
mov
mov
jecxz
push
sbb
ficomps
mov
add
jl
adc
mov
in
cmc
in
rorl
imul
mov
insb
pop
add
ret
jae
adc
leave
and
addb
pop
hlt
shll
jo
inc
sub
test
sub
leave
mov
cld
dec
addl
push
fadds
outsl
mov
dec
test
fnstsw
jne
pop
xchg
jmp
bound
push
sbb
fstpt
sub
sahf
cmp
cmpsb
mov
insl
sbb
pop
je
inc
je
enter
out
mov
cmp
lock
or
rep
sub
clc
push
arpl
fmuls
push
push
sub
pop
mulb
repz
push
and
mov
in
inc
mov
jmp
sub
xchg
xor
mov
jmp
and
jmp
jle
mov
and
movsl
mov
test
jecxz
test
add
cld
cli
test
ja
or
jne
cwtl
push
pop
inc
mov
psllq
iret
cmp
sti
pop
out
fsub
ret
gs
jle
cmp
loopne
aaa
cmp
mov
sub
xor
sub
pop
xor
xchg
aad
pop
rolb
int
ret
imul
imul
inc
insb
lock
inc
adc
mov
mov
popf
daa
xchg
es
sti
mov
mov
push
adc
xor
loopne
stos
pop
add
ret
sbb
push
xchg
lcall
or
inc
or
mov
ja
sbb
or
adc
cwtl
ja
jmp
fwait
jno
sbb
sbbl
mov
adc
mov
hlt
and
into
daa
imul
sub
imul
and
push
inc
mov
add
call
divl
xor
mov
mov
ds
aam
dec
jb
fucomip
xor
cmp
sub
int3
inc
dec
movsl
out
pushf
mov
lods
mov
pushf
and
pop
les
or
cmc
ret
pop
aas
jne
pop
mov
push
das
or
outsb
test
or
mov
sahf
movq
dec
sti
std
test
sarb
mov
pop
mov
pushf
sub
push
inc
roll
xchg
pusha
xchg
loop
shr
clc
and
lahf
jo
data16
aad
insl
data16
mov
aaa
xor
adc
inc
jge
imul
dec
not
dec
pop
js
shll
lock
dec
inc
xchg
popa
push
dec
add
imul
rcrb
jecxz
lret
dec
popa
lods
lcall
mov
ja,pn
push
add
sub
push
push
cmpsb
push
adc
cmp
lahf
popa
fldt
adc
cmpsb
sbb
arpl
add
in
push
jb
dec
adc
mov
cli
xlat
hlt
sub
and
scas
shll
add
sbb
xor
cmpb
mov
add
subl
sub
xor
les
out
ret
movsl
mov
inc
shl
cmpsl
mov
inc
pushf
stos
mov
popa
mov
dec
mov
inc
sbb
arpl
xor
xor
sbb
xchg
mov
xchg
jmp
arpl
adc
mov
sub
pop
xchg
enter
pop
xchg
xor
out
scas
inc
push
repz
push
lahf
push
hlt
aam
pop
lea
mov
inc
es
sbb
jns
or
sbbb
nop
adc
xor
xchg
pusha
jge
push
call
push
cmc
out
pop
adc
pop
loop
xchg
pusha
dec
jne
gs
pop
das
mov
aaa
out
or
push
adc
mov
lds
sbb
fnsave
sbb
loop
xchg
mov
dec
hlt
or
jne
mov
out
pusha
shlb
jle
fdiv
xor
sub
inc
jecxz
push
outsl
test
lds
in
leave
push
repnz
or
pop
stc
add
adc
or
aad
dec
or
fsubrs
push
scas
popa
mov
dec
jle
xchg
inc
push
dec
mov
mov
sub
inc
rorl
cmpsl
add
pop
cli
scas
xchg
add
mov
mov
dec
and
jae
movsb
in
inc
imul
imul
in
popa
adc
in
and
in
xor
call
and
mov
dec
scas
push
ret
bswap
cltd
mov
xor
dec
leave
call
cmp
or
or
pop
mov
mov
ja
movsb
sti
stos
pop
into
test
mov
mov
lahf
cwtl
or
mov
push
mov
addl
insl
hlt
cmp
outsl
push
sbb
pushf
xor
test
dec
sbb
aas
mov
mov
insb
sbb
push
push
mov
pop
in
mov
adc
sub
test
sbb
cli
inc
sbb
aam
movsl
bnd
xchg
mov
and
push
aad
push
inc
pop
test
in
iret
stos
cmp
in
push
in
xor
jnp
shrl
sahf
pushf
rorl
jge
testb
mov
cld
lea
sub
leave
lahf
mov
cmp
add
sbb
repnz
out
cmp
or
cmp
or
inc
mov
push
xchg
mov
adc
pop
ja
mov
jnp
imul
pop
push
pop
daa
mov
sub
mov
in
inc
cmp
mov
lock
or
add
sar
sub
movsb
test
xchg
or
add
and
gs
adc
nop
adc
jp
jl
repnz
out
xor
mov
call
mov
xchg
push
icebp
data16
clc
pushf
adc
mov
test
pop
jg
or
pop
xchg
mov
call
mov
jmp
loopne
push
jmp
bound
sub
jp
popa
pop
daa
push
cmp
fisubs
dec
xchg
enter
sbb
xchg
mov
xchg
inc
jp
aas
lahf
jmp
mov
out
add
mov
clc
repnz
mov
xor
into
fs
dec
into
fldt
sti
pop
cmp
xchg
dec
out
lods
mov
mov
popl
pop
loop
ret
cltd
mov
xor
mov
mov
ficompl
cmpsb
out
fidivl
gs
jne
mov
pop
sbb
fldcw
movsl
mov
mov
add
in
neg
arpl
mov
jle
adc
inc
fwait
dec
mov
adc
push
pop
into
push
je
ret
in
jle
push
imul
out
xor
out
jb
leave
divl
jno
mov
ss
mov
andl
dec
sbb
and
clc
xchg
hlt
fists
je
outsl
lods
sub
add
sub
lock
ret
fwait
xor
outsl
add
and
jns
jo
cmp
mov
push
xchg
or
idivl
rclb
leave
pop
scas
mov
xchg
pop
mov
or
ret
mov
mov
sahf
or
sbb
out
fcomip
rorb
push
inc
pop
inc
in
cmp
jb
pop
jbe
or
sarl
negb
stc
out
adc
lods
decb
pusha
pop
push
int3
shl
les
call
xlat
fmull
pop
push
addr16
push
jbe
iret
xchg
push
mov
dec
enter
fcoms
test
and
repz
out
fdivrl
add
je
dec
xor
mov
mov
stos
mov
or
xchg
jg
and
cmp
mov
stos
add
sub
push
push
test
nop
cltd
icebp
mov
dec
nop
pop
xor
into
out
imul
mov
shrl
mov
sahf
ja
pop
and
sub
cmpsb
xor
sub
aam
orb
enter
leave
adc
add
or
in
push
aaa
js
pop
out
push
clc
pop
fadds
int
dec
add
or
push
sbb
leave
dec
cmp
and
pushf
and
imul
sub
ljmp
out
cwtl
and
push
mov
in
jo
mov
jmp
adc
inc
jmp
incl
iret
pop
jae
test
and
shl
pushf
lret
cli
roll
aas
add
subl
dec
inc
mov
testb
add
add
push
sub
sbb
bound
inc
push
inc
orb
in
push
pop
nop
mov
in
or
outsl
push
sub
adc
dec
and
scas
scas
xchg
stc
xchg
nop
jo
xor
sarb
pushf
inc
lock
mov
pusha
and
jg
push
les
and
fcompl
out
cli
dec
das
mov
inc
outsb
test
cmp
insl
mov
push
xchg
and
imul
fneni(8087
jl
ljmp
int
dec
add
test
push
popa
jle
or
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
aas
stos
push
ss
mov
add
pop
repnz
or
mov
inc
fwait
jle
push
das
push
shrb
mov
cs
mov
mov
orb
pop
pop
or
jle
lds
mov
pop
pop
je
mov
jmp
lock
inc
inc
xchg
push
sub
push
inc
ljmp
mov
int
and
push
adc
sub
dec
pop
add
stos
cmp
mov
mov
out
and
stos
rcrl
in
ds
add
stos
sub
xchg
mov
stos
inc
xor
fnstsw
lea
fs
or
jo
mov
xchg
das
sbb
cmp
mov
pop
pop
scas
test
sti
decb
test
call
in
adc
mov
mov
sub
or
icebp
mov
add
lea
xor
leave
mov
or
xor
push
sbb
dec
dec
adc
cmc
fildll
or
scas
jno
and
in
lea
lock
fmull
dec
loopne
imul
shrl
dec
hlt
mov
ss
pusha
jnp
lahf
js
fisttpll
fldl
sub
xchg
shrl
pop
es
jmp
xchg
mov
sbb
sbb
imulb
lahf
jns
neg
mov
push
shll
inc
scas
xchg
or
into
mov
jg
pop
pop
repz
shr
lods
pusha
dec
icebp
inc
cmp
lret
jg
ret
sub
sub
sbb
lret
pop
pcmpeqw
popf
mov
push
inc
imulb
mov
xchg
fcmovnu
mov
ds
fldcw
es
mov
add
pop
loope
imulb
sbb
or
mov
cmp
and
rcrl
not
mov
xor
ret
stc
leave
pop
fisubl
mov
aam
inc
pop
jne
push
incl
call
xchg
out
imul
fstpt
jge
fisubrs
mov
cmp
xor
sub
in
jle
int3
jl
jmp
fld
sub
das
cmc
nop
xchg
push
mov
outsb
mov
cmp
addr16
inc
jbe
inc
fisubs
outsb
dec
sti
and
nop
in
push
pop
ja
xchg
pushf
mov
out
adc
repnz
push
sub
jbe
cmp
and
push
sbb
les
dec
mulb
roll
je
fmulp
fld
xchg
cmc
ret
bound
mov
test
loop
mov
lds
lock
outsl
sub
pop
mov
adc
lock
mov
iret
adc
out
adc
pop
or
orl
mov
push
enter
xchg
sub
ror
add
cli
mov
cmpsb
ljmp
or
jecxz
loopne
add
cmp
insb
mov
movsl
sahf
call
lahf
adc
loope
xchg
add
cmp
cmp
pop
fldl
test
lahf
sahf
jnp
btr
sti
mov
and
jo
imul
inc
cmp
stos
sarl
and
out
dec
adc
imul
sub
outsl
jecxz
mov
lret
mov
sbb
pop
call
aas
stos
jle
popf
lret
push
inc
rcll
lods
xor
dec
push
dec
mov
inc
fcomip
ret
pop
pop
fsubr
and
test
dec
lret
jecxz
dec
mov
incl
clc
fwait
jecxz
popa
rorl
adc
sarb
xchg
pop
fcompl
mov
mov
iret
push
mov
adc
xor
and
mov
movsl
in
push
inc
sahf
jnp
fcmovne
cmp
insl
mov
lock
aad
jge
int3
mov
fidivs
xor
pop
aad
repnz
outsl
lret
xor
iret
push
icebp
int
inc
or
mov
aaa
lods
iret
add
jge
mov
mov
and
fldl
inc
add
mov
fdiv
pop
gs
cmp
fnstenv
fisubs
rcrl
dec
vpsrld
ffreep
imul
dec
sub
mov
lcall
test
sbb
sub
adcl
jb
repnz
adc
ja
xor
jge
jnp
adc
dec
mov
xor
out
sub
and
cmp
stos
cmp
or
sub
jmp
ret
add
add
cld
in
xor
lret
and
mov
sub
fcompl
xchg
cli
push
out
leave
aad
mov
aam
leave
mov
in
mov
cmp
neg
jae
loopne
lcall
mov
in
test
aaa
int3
lods
pop
sub
fsubs
push
cmpsb
inc
mov
lock
ljmp
out
movsb
in
std
jae
std
or
lods
hlt
inc
mov
mov
lock
mov
sahf
test
outsb
xchg
jp
push
xlat
or
test
pop
pushl
push
fldcw
ficoml
pop
push
cmc
mov
add
cltd
loopne
test
leave
inc
jb
dec
inc
sbb
push
stos
arpl
add
int3
inc
dec
mov
mov
xchg
pop
pop
adc
stos
pop
sbb
jmp
and
jo
adc
push
aaa
lds
orb
jnp
sahf
fmull
sbb
mov
jg
loope
rcrb
out
outsl
andb
call
js
lret
cmpsb
insl
push
mov
clc
fcmovu
push
test
mov
or
in
push
sub
sti
mov
adc
addr16
jmp
adc
in
shll
outsl
cmp
mov
lahf
stc
mov
jl
adcb
cmp
xchg
lods
mov
gs
sub
subl
fsubrl
cmp
pop
jbe
cwtl
filds
sbb
jecxz
pop
shlb
push
cmp
sub
ja
jae
pop
inc
jns
and
insl
sbb
mov
cmpsl
js
xchg
jb
insl
sub
adc
test
push
push
sti
jb
jbe
fldz
dec
ficoml
jns
adc
jecxz
cwtl
out
cmpl
sub
or
xor
aaa
les
pop
add
clc
outsl
negb
out
sub
xor
mov
jne
mov
pop
dec
jb
rorl
pop
es
cwtl
mov
xor
pop
jbe
push
mov
sbb
push
je
aam
mov
mov
sub
aaa
mov
push
rclb
pop
push
push
fcompl
dec
addr16
lea
xchg
das
jbe
sahf
fcomp
sbb
xchg
and
outsb
test
jmp
sbb
iret
std
popa
adc
aam
outsl
imul
cmpsl
adc
xor
mov
push
push
jecxz
adc
or
repz
sbb
adc
add
out
sub
mov
scas
xor
jge
sbb
icebp
scas
push
push
sub
mov
ljmp
mov
and
pop
push
sbb
and
pop
jbe
ret
mov
jg
xor
lods
cmp
mov
cmpsl
dec
je
add
ficoms
lods
popf
xchg
ljmp
out
sub
xchg
mov
xor
pop
mov
imul
mov
ret
adc
cmc
aam
loop
push
pop
or
rcrb
cmpsb
ja
sub
sub
pop
inc
sbb
jp
and
movsl
xor
mov
lret
or
sub
fldcw
jp
and
sti
lds
sbb
jno
test
add
cwtl
pop
loopne
icebp
mov
dec
pushf
inc
push
cmp
rcll
data16
jg
mov
adc
fistps
mov
inc
sub
xchg
pop
push
in
call
lcall
data16
add
xor
dec
mov
mov
and
pop
sub
mov
pop
test
pusha
pop
stc
inc
leave
or
mov
shrl
mov
jle
cmp
scas
mov
push
sarb
mov
popa
or
shll
jns
cld
xor
xlat
loopne
jmp
out
xorl
push
inc
imul
mov
push
call
loopne,pn
dec
andb
pop
jmp
dec
out
test
scas
jmp
shrl
movsb
xor
jge
mov
mov
dec
jnp
call
inc
jno
mov
add
mov
test
loope
scas
and
les
add
dec
mov
push
loopne
sbb
xlat
fs
ljmp
mov
mov
xor
mov
jb
add
stos
aad
xchg
mov
add
loope
mov
roll
vpaddd
jo
enter
push
cmp
les
mov
pop
hlt
mov
dec
mov
loopne
mov
cwtl
rorl
aad
mov
sbb
movl
sbb
sub
mov
outsl
dec
xchg
bound
aas
ja
es
jecxz
lcall
adc
in
mov
xchg
jnp
mov
jmp
adc
jbe
in
sbb
mov
inc
test
in
cmp
pop
mov
data16
jno
lret
adc
stos
inc
pop
inc
mov
jp
les
mov
hlt
dec
in
mov
ds
imul
mov
lds
dec
in
xchg
jns
arpl
subl
mov
add
jp
mov
hlt
sbb
mov
xor
dec
add
push
mov
ss
dec
hlt
rolb
xchg
xchg
pop
pop
jne
je
push
rcl
mov
push
pop
pop
ds
in
and
lea
daa
ja
cmp
out
addr16
rorb
sbb
xor
outsl
push
lcall
sbb
lahf
and
fsts
lods
mov
push
je
jl
jg
mov
rclb
mov
jmp
sub
and
mov
mov
cwtl
sub
outsl
lods
fdivrs
sbbl
testl
jp
sbb
push
mov
or
cmp
std
sub
push
mov
stos
insl
sbb
cmp
dec
sbb
lret
shrb
and
xchg
push
xor
shr
rolb
cmp
cmp
jo
mov
addr16
push
mov
xorb
insb
jno
xchg
stos
jnp
push
out
insl
cmp
gs
ss
jo
sub
or
xchg
test
loop
mov
int3
nop
inc
jmp
shlb
inc
jg
rolb
pop
xchg
xlat
add
jecxz
sti
xor
jmp
adc
adc
lods
shlb
xchg
xor
jb
std
test
fistpll
out
add
lret
mov
inc
lahf
adc
cmpsb
jmp
ljmp
sub
and
mov
je
mov
lods
xchg
mov
push
pop
out
xor
popf
cmpsb
jne
cmp
jecxz
daa
mov
das
jne
cltd
in
aad
lock
enter
mov
mov
lret
in
rcrb
lods
sbb
mov
mov
dec
lret
ljmp
into
xchg
cmpsl
sub
test
icebp
inc
adc
dec
jne
mov
mov
aaa
adc
mov
sbb
jg
ss
push
loope
repnz
shrb
dec
mov
mov
bnd
mov
add
mov
aad
jge
lret
insb
divb
and
or
dec
and
xchg
inc
mov
adc
je
lahf
or
test
sub
add
inc
mov
sub
dec
and
mov
movsl
call
dec
iret
pop
adc
cmc
mov
dec
sub
ljmp
push
leave
je
or
shrw
push
sbb
imul
adc
sbb
mov
out
fisttpll
iret
adc
sti
aad
int
aad
pusha
sub
xchg
hlt
sti
imull
pop
rol
scas
daa
je
movsb
lods
push
adc
push
test
and
cwtl
mov
lods
cwtl
mov
mov
rcll
rcrl
xor
sbb
dec
aas
adc
seto
enter
das
jbe
pop
pop
popf
add
stc
iret
sub
std
or
and
mov
jmp
inc
pop
inc
push
xchg
xor
mov
nop
lret
adc
lea
sub
aas
add
adc
xchg
xor
insl
daa
mov
dec
mov
lcall
or
popa
or
jmp
mov
push
and
popa
jmp
cld
movsb
mov
stos
pop
fdivs
daa
xor
into
adcl
popa
lret
or
ficompl
in
cld
enter
push
jnp
cmp
fucomp
popf
sbb
mov
lahf
stos
jg
xchg
add
fisubs
push
inc
andb
push
in
mov
sbb
sub
and
inc
ret
xor
hlt
cmp
mov
pop
fdivs
jo
ljmp
jo
repnz
mov
jb
cltd
and
les
loop
sub
mov
jne
test
dec
mov
in
push
ja
jb
cmp
decl
das
insl
jne
shr
test
mov
gs
ret
fisubl
repnz
xlat
popa
cwtl
push
popfw
jae
frstor
mov
test
and
into
jp
jne
push
jnp
mov
pushf
dec
ret
pusha
fs
loope
sbb
pop
aas
into
jb
imul
jae
pop
ror
sub
inc
fcoms
shrb
lods
dec
xor
out
cmp
mov
andb
call
rolb
incb
or
rcr
xchg
xor
sbb
sub
adc
xchg
into
int
cld
stc
adc
fistl
mov
jae
push
push
push
cmp
imul
add
repnz
shrb
sbb
sub
bound
adc
xor
push
sub
movsb
pop
daa
movsb
popa
nop
popa
mov
in
enter
jle
imul
hlt
shll
inc
sub
lock
pop
jb
das
stos
subb
adc
inc
cwtl
rol
mov
xchg
mov
pop
lea
mov
push
jnp
mov
in
xor
fstl
fiaddl
cli
ret
pop
dec
mov
mov
sub
xchg
cmp
dec
push
sub
insl
hlt
push
stos
stos
cs
push
jg
lahf
dec
imul
mov
inc
pop
xchg
pop
out
subb
ret
subb
pop
cmp
add
jno
mov
sub
sub
stos
jne
test
mov
sbb
and
addr16
loope
push
xchg
mov
stc
insb
sub
pop
jp
or
sub
cmp
push
out
pop
nop
outsl
rol
cld
cmp
push
loop
pop
inc
jecxz
dec
xor
out
push
add
cmp
push
sbb
ror
mov
mov
lret
cmp
jbe
daa
lds
f2xm1
mov
loope
or
scas
icebp
rcll
sahf
lods
jns
stc
push
ror
lods
gs
push
cli
mov
sahf
lods
fwait
scas
jbe
test
imul
enter
mov
lods
mov
pop
cs
int
inc
fisttpl
and
xchg
cmp
mov
out
outsl
shl
es
push
fsubl
mov
enter
jp
repz
mov
in
aad
insl
jp
adc
cmp
jne
xlat
and
fisttpl
dec
aaa
es
mov
add
mov
cli
jnp
add
xor
mov
cmp
mov
mov
mov
scas
and
adc
jns
repnz
fistpl
lcall
ja
inc
clc
jg
iret
rcrl
inc
jg
or
lea
pop
cmc
pop
leave
sub
std
mov
xchg
cmp
mov
fistl
stc
aam
mov
jg
fcmovu
pushf
add
cmpsb
sub
dec
mov
sti
push
mov
push
hlt
imul
adcl
jp
bt
and
mov
mov
ljmp
iret
inc
or
popl
jo
jo
shl
mov
repnz
dec
daa
andl
mov
movsb
or
xor
cmpsb
popa
inc
sti
jecxz
insb
push
ds
clc
adc
jo
push
sub
call
dec
push
into
fwait
push
jle
push
shll
out
lret
jl
ss
data16
push
inc
ds
addr16
inc
adcb
jge
sub
insb
lock
ds
hlt
dec
test
mov
mov
push
mov
jmp
inc
shrl
hlt
cmpsl
outsb
int
mov
roll
sbb
push
in
adc
fdivrs
cltd
add
clc
fldenv
leave
sbb
repz
mov
scas
rcrb
std
jns,pn
push
push
xor
and
mov
pop
jmp
and
or
pop
pop
inc
sbb
sub
push
rorl
cmp
popa
mov
xlat
daa
fucomip
sub
cmp
xchg
xchg
int3
jo
jb
inc
mov
add
shl
scas
mov
add
adc
dec
rcrb
les
cs
pop
sub
cmpb
popf
and
mov
in
adc
inc
aam
or
sub
adc
sarl
inc
sarl
or
fcmovb
mov
sub
test
dec
add
jae
outsl
notl
outsb
sti
clc
cld
adc
push
mov
xor
popa
and
aam
xchg
inc
jge
inc
call
push
mov
inc
movsb
rorl
cmp
xor
jecxz
cld
sub
jno
adc
cmpsl
pop
or
mov
gs
inc
push
mov
jp
stos
jle
xchg
orl
mov
nop
repnz
scas
pop
mov
add
dec
imul
daa
je
cmp
sbbl
popa
push
push
xchg
ds
lods
aas
inc
nop
ja
fldl
push
pusha
cmc
or
or
sub
test
adc
adc
push
cmp
lods
sub
out
movsl
lahf
icebp
insl
pop
or
cmpsb
nop
popa
push
jecxz
rorb
sub
jno
mov
inc
iret
jae
xchg
adc
jo
cltd
ret
ljmp
loope
sub
jne
arpl
test
cmpsl
flds
and
mov
add
cmc
jmp
mov
sub
xor
dec
mov
std
inc
mov
mov
pop
insl
mov
nop
xor
pop
mov
inc
xchg
movsl
pop
mov
ljmp
adc
adc
or
cmpsl
jne
popl
add
fbld
jge
jp
aam
in
sbb
fstp
aad
shl
xchg
fcomps
cmp
pushf
ss
jge
rolb
rolb
pop
push
mov
outsb
js
sahf
clc
jmp
test
push
fisubs
or
dec
cli
push
cmpsb
jo
js
add
pusha
lret
add
sbb
add
call
or
fdivs
pop
lret
ret
dec
cmc
shlb
movsb
ret
mov
cmc
cwtl
xor
mov
add
fnstsw
ret
nop
add
adc
push
fiaddl
cld
push
push
sahf
inc
pop
mov
cmpsb
call
leave
pop
loop
imul
imul
stos
pop
ds
outsl
cmp
cs
xor
push
fsubrl
out
lahf
pop
scas
pop
outsb
aad
xchg
mov
shrb
mov
sbb
mov
add
xorb
test
sub
nop
js
scas
stos
notb
mov
or
imul
dec
dec
xor
or
jno
es
pop
jge
mov
ret
loop
ss
cmp
rorb
xchg
and
aad
lret
inc
in
mov
addr16
mov
mov
xor
shrl
mov
repz
sbb
sbb
mov
xchg
data16
sbb
dec
fisubrs
adc
cld
repnz
gs
mov
and
call
add
fimuls
pop
xchg
mov
nop
mov
insl
ret
cli
insl
int3
data16
int
test
lods
lret
cli
xchg
mulb
mov
outsl
push
mov
cmp
adcb
orl
xor
js
mov
jnp
mov
cmpsb
cmp
in
mov
daa
mov
sub
int
pop
popf
dec
in
add
or
cbtw
faddp
mov
ss
into
or
icebp
jmp
rclb
rcrb
mov
mov
cmp
add
fildll
nop
xor
ror
ljmp
mov
sahf
pop
pop
mull
test
jecxz
test
js
sti
mov
pushf
xchg
fcoms
popa
dec
pusha
cmp
cmp
fiadds
out
ficoms
pop
xchg
jg
xor
mov
in
inc
mov
push
adc
mov
loop
ret
adc
test
sbb
jl
sbb
nop
or
or
and
sarb
sub
popf
xchg
addb
mov
xlat
scas
mov
movsb
xchg
or
dec
dec
xchg
mov
dec
sbb
xor
add
subb
test
imul
popl
call
xchg
jnp
push
push
fidivl
jno
xchg
dec
jecxz
push
jno
insl
add
addr16
jmp
js
inc
cli
jmp
mov
fnstsw
inc
push
mov
mov
cmp
sub
nop
lret
lods
into
pop
pop
in
mov
stos
ret
fwait
arpl
add
movl
out
scas
rcll
mov
imul
ret
dec
push
jbe
repnz
sbb
push
aaa
add
mov
call
sbb
cmp
cmp
fs
mov
mov
inc
lds
pop
insb
scas
daa
cmc
mov
in
mov
sbb
in
in
jbe
mov
mul
rolb
les
sbb
sub
ficoml
xor
ret
push
push
ficomps
xlat
pushf
sbb
adc
xor
ucomiss
sbbb
scas
mov
cs
das
in
xchg
xor
mov
insb
lods
mov
mov
push
testl
scas
flds
mov
xor
scas
push
mov
jne
adc
mov
test
insl
nop
xchg
pop
pushw
aad
jge
inc
cmpb
cmc
dec
imul
addr16
inc
sub
cmp
or
or
push
dec
jecxz
mov
mov
cmp
cmpsb
lods
adc
sub
pop
push
or
test
sub
xchg
xor
lds
aas
sub
out
cmp
inc
aaa
bound
out
lea
test
jno
ds
inc
and
adc
mov
shr
lock
push
mov
fstl
out
xor
adc
imul
dec
cwtl
test
mov
cwtl
adc
push
call
insl
cltd
adc
mov
and
or
lods
mov
out
rorl
inc
lahf
adc
xchg
es
ret
inc
std
mov
sbb
mov
les
sti
jl
imul
lcall
cmp
lods
insl
push
pop
xchg
cli
mov
ret
arpl
ret
cmc
in
pop
stos
mov
lahf
ret
xchg
xchg
sub
xor
int
stos
int3
cld
xor
jecxz
pop
jno
inc
cs
pop
pop
subb
inc
cmp
cmpsl
nop
mov
pslld
scas
cmpsb
jb
push
incb
inc
inc
pop
adc
sbbb
fs
les
or
shr
es
ljmp
sbb
jae
hlt
xor
mov
out
pop
loope
mov
mov
into
dec
and
lahf
sub
mov
in
xchg
xchg
fnsetpm(287
and
inc
lret
mov
mov
ret
cld
test
xchg
mov
and
xchg
xchg
sar
shrl
loopne
or
or
inc
xchg
pop
sub
dec
push
xor
sub
mov
insb
ret
push
push
jae
es
ret
add
shll
roll
xchg
lods
dec
xchg
lods
stos
jbe
push
ret
cli
xchg
sti
jne
fisubrs
mov
cld
jg
jns
int3
leave
pop
pushf
xor
scas
push
cmpsb
enter
xchg
shrl
out
push
lods
shlb
imull
test
ret
mov
sub
mov
dec
jge
in
lods
shll
or
pop
xlat
ja
or
mov
mov
mov
sub
std
loopne
add
jae
mov
mov
sub
and
mov
repnz
mov
dec
or
inc
mov
xor
push
ljmp
int3
mov
popf
pop
test
jb
mov
add
and
xor
jp
xchg
icebp
fstps
fadds
loopne
mov
loopne
sbb
inc
dec
and
aas
repz
fldt
and
fsubl
adc
cwtl
lcall
jb
popa
outsb
pop
jns
mov
jno
adc
xchg
and
cmp
repnz
xor
mov
push
and
adc
mov
lds
out
mov
add
iret
sub
add
movsl
cmp
insb
cmp
pandn
pop
dec
mov
stc
or
pop
je
test
les
jo
les
dec
or
sub
mov
lret
and
inc
adc
pop
mov
icebp
pop
fdivrp
dec
mov
lret
movsb
mov
rclb
pusha
xchg
decb
outsb
call
cld
rcll
call
jno
jg
test
pop
mov
hlt
xchg
insb
es
add
arpl
jge
push
fs
add
gs
mov
or
jne
push
jmp
ret
pop
mov
inc
jge
mov
sbb
clc
les
adc
gs
or
and
fwait
push
lcall
jecxz
xchg
outsb
add
cltd
fwait
je
cmp
push
movsl
je
addb
out
popf
cmc
insl
pop
in
in
lahf
in
sub
adcl
inc
lcall
sub
repz
lahf
sbb
mov
nop
popa
gs
inc
pushf
jg
push
push
dec
ljmp
jnp,pt
push
adc
pop
dec
cs
xor
sub
popa
stos
sbb
or
shl
repnz
cltd
adc
in
jne
xchg
loop
mov
mov
sbbw
jle
rorb
push
mov
icebp
fldenv
cmp
addb
mov
outsb
and
out
nop
xchg
stos
inc
pop
fsts
rolb
ljmp
adc
add
cmp
add
xchg
pop
mov
and
mov
bswap
das
jecxz
ret
add
mov
imul
jne
and
xchg
xorb
add
clc
push
xor
sahf
xchg
lcall
mov
jmp
enter
pop
or
xlat
push
ja
cmpsl
push
fxch
pop
sbbb
and
int3
push
in
inc
jge
push
xor
adc
jns
daa
push
add
or
cmp
sbb
pop
jp
loope
scas
sbb
jl
dec
call
xor
jo
xchg
push
test
orl
pop
lcall
xchg
lds
dec
test
cmp
jge
fsubs
cmp
jp
stos
cmp
pop
icebp
pop
add
ss
jmp
adc
mov
test
movsb
and
dec
sahf
dec
and
jle
sbb
inc
int
adcl
xchg
cmp
lock
sub
push
cmpsb
hlt
rcl
das
int
int
add
loope
adc
enter
aad
xchg
lahf
and
lods
cmp
scas
fcoml
adc
icebp
cmc
rorb
push
push
mov
lret
scas
cld
xchg
stos
jecxz
sbbl
cmpsl
sub
mov
pop
loopne
enter
cmp
jb
cld
pop
aad
pop
mov
and
bound
loope
stos
pushf
lret
jae
jb
lcall
int
insl
fistl
mov
fnstcw
jne
push
gs
dec
idiv
aad
mov
bound
movsb
mov
cli
lea
addr16
jecxz
fistpl
and
ret
popa
stos
push
pusha
clc
clc
fidivrl
push
pushf
and
or
cmp
mov
daa
insl
sbb
das
sahf
int
cli
cmp
jp
jne
pop
jae
lea
and
add
cltd
jnp
sbbl
imul
int
cmp
sbb
lcall
mov
mov
mov
nop
inc
add
mov
xchg
cld
lret
sbb
and
in
dec
xor
imul
mov
ja
adc
lret
xor
js
xorb
test
mov
adc
or
into
loope
jno
push
test
fidivrl
dec
mov
loop
xor
hlt
icebp
fimuls
outsb
rolb
scas
int
loopne
add
stos
mov
orb
mov
out
xchg
push
adc
fwait
or
adc
addl
or
sub
xchg
push
jmp
fldt
mov
adc
adc
and
nop
mov
pop
and
dec
daa
popa
add
aas
dec
roll
sub
negl
jl
movsb
repnz
and
scas
aam
jl
fbstp
xor
dec
sbb
dec
jae
dec
fcoml
mov
out
sub
mov
test
mov
sbb
jns
in
popa
das
in
xchg
test
mov
cli
ret
and
fstpt
sbb
adc
div
rolb
scas
mov
fsubl
adc
movsb
daa
stos
scas
pusha
jb
call
mov
aad
xor
and
sub
dec
imul
adc
incl
mov
test
mov
fldcw
in
adc
sbb
xor
jmp
shl
xchg
les
stos
pushf
imul
xor
aaa
pop
lahf
shrl
adc
pop
pop
dec
popa
sbb
rcl
xchg
push
mov
jno
rcrb
popa
stc
xchg
mov
out
sarl
jmp
test
push
mov
mov
dec
jne
or
sbb
pop
lret
inc
push
push
mov
xchg
scas
sbb
mov
inc
push
or
inc
cld
pop
mov
or
insb
aam
pop
leave
push
xor
lcall
iret
popa
lea
cmp
push
jecxz
lcall
mov
adc
int
loopne
int
test
lods
in
push
test
hlt
and
push
jbe
pop
fcompl
xchg
push
sub
je
push
adc
push
dec
or
jmp
jnp
cmpl
jo
in
or
dec
imul
ja
xor
dec
sub
js
pushf
stos
negb
sbb
insb
cld
push
cmp
scas
and
mov
inc
pop
mov
std
mov
sti
mov
jnp
mov
pop
mov
inc
inc
int
cld
testb
push
push
push
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
mov
mov
push
addl
pusha
test
xchg
ret
bound
test
inc
ss
and
stos
lret
pop
mov
xchg
dec
cmpsb
adc
dec
xor
in
jp
mov
push
mov
pop
xor
stc
mov
xorb
fsubr
in
dec
adc
fcmovu
push
mov
sarl
xchg
push
jmp
daa
mov
inc
bound
imul
mov
enter
mov
inc
xchg
sbb
orl
and
pop
sti
pop
sarb
xor
gs
pop
mov
rcrl
xor
frstpm(287
push
pop
push
push
test
pop
fcoml
mov
cld
jle
inc
inc
fildll
cmp
lret
sbb
fcmovne
testl
pushf
dec
xor
pop
adc
jle
call
mov
std
push
xor
sub
mov
cmp
push
mov
jbe
out
xchg
leave
popa
nop
mov
outsl
gs
pop
mov
pusha
and
popf
int3
push
mov
sbb
xchg
cmp
mov
mov
push
push
add
or
add
jmp
mov
inc
fists
icebp
js
inc
adc
or
and
lods
out
sbb
jo
in
cmp
push
xchg
fistps
rolb
test
jmp
repnz
call
mov
es
int
cmp
sub
push
push
fsts
fcmovnbe
out
pop
jne
js
addr16
adcb
rolb
int
test
jne
repz
insb
mov
or
push
es
pop
outsb
xlat
cmp
sbb
add
mov
mov
add
mov
push
jns
sub
mov
stos
mov
push
push
in
and
xor
lods
xchg
xchg
imul
imul
jne
mov
pop
leave
mov
loop
loope
and
jge
ds
insb
les
js
test
sbb
fildll
js
dec
mov
pop
push
cltd
push
jnp
lock
xor
loope
mov
push
add
lea
pop
ja
int3
fsubr
push
imul
mov
sub
mov
ret
inc
mov
lods
rcrb
movsl
jg
daa
push
ja
add
subb
pop
mov
sub
lahf
out
sub
jnp
cmp
add
sbbb
mov
xchg
push
sbb
cs
or
cmpsl
inc
mov
insl
dec
cmpsl
cmp
mov
push
fs
adc
aas
add
aad
das
cltd
xchg
sbb
dec
xchg
test
scas
ds
push
adc
adc
stos
movsb
add
lea
or
jns
in
lahf
sahf
dec
mov
sbb
in
es
push
xchg
mov
aad
rep
adc
stc
mov
adc
cmp
test
movsl
sbb
push
jo
pusha
popa
cmc
mov
or
jns
xlat
int3
push
or
cmpsl
iret
loope
jge
test
lods
cld
adc
fadd
shrl
mov
push
das
mov
mov
sbb
mov
outsl
fcompp
mov
and
subl
fs
pop
fdivrl
adc
cmp
and
inc
mov
stc
or
scas
and
test
loope
cld
or
fldl
xchg
push
jb
lret
sub
mov
mov
xorb
mov
sub
data16
in
das
push
mov
andl
pop
sub
jae
imul
and
cmp
fdivrs
scas
or
lret
lods
mov
sbb
imul
xchg
test
xor
mov
insl
fstp
int3
jnp
mov
sbb
lds
pop
cmp
sti
push
jo
stos
loope
icebp
inc
push
cmpsb
sub
sub
call
ffreep
dec
or
push
pop
mov
adc
xor
imul
jnp
inc
adc
insl
add
pushf
mov
mov
lcall
cmpsl
jo
cltd
stc
push
test
sarb
add
mov
jecxz
dec
cmp
xchg
push
add
add
push
or
xor
adc
js
cmc
fcomi
sub
shlb
test
repz
pop
and
test
dec
pop
xor
arpl
rcrl
cmpsb
or
sti
aas
mov
and
and
add
cmp
fcompl
cmp
popa
icebp
mov
cli
mov
sub
out
mov
mov
lret
dec
vcvtss2si
stos
mov
int3
stos
cmpsb
inc
outsb
mov
inc
icebp
adc
test
fsqrt
pop
pmullw
sub
movsl
stos
into
xchg
pop
adc
mov
sub
xchg
mov
repz
movsl
ret
cld
cmp
clc
or
add
mov
mov
jns
xchg
hlt
inc
fdivp
and
sbb
push
frstor
cli
pop
cmc
cmp
jle
in
test
jg
pop
clc
scas
mov
and
xor
pop
mov
fwait
pushf
adcl
dec
dec
jmp
fsubr
loopne
fs
inc
cmpsb
aad
pop
loope
sarl
dec
mov
inc
in
cmc
aas
out
jge
mov
loop
hlt
mov
or
dec
xchg
lcall
das
add
shlb
cmp
mov
cmpsl
push
dec
imul
loop
imul
lods
cmc
stos
int3
add
inc
fstps
lds
mov
jns
fsubp
inc
xchg
imul
ret
jge
xchg
mov
lock
and
xchg
cmp
jmp
xchg
add
sbb
nopl
int3
test
fst
cmp
jmp
mov
mov
mov
and
insb
add
pop
movsb
shr
jnp
and
push
dec
gs
and
dec
adc
adc
mov
xchg
incl
or
pop
repnz
xor
pop
movsb
or
inc
aam
callw
xor
shll
xchg
xor
pop
fsubs
gs
push
cmpl
jecxz
push
sbb
xchg
xlat
test
add
cwtl
stos
lcall
loopne
inc
out
jno
nop
in
in
push
aam
iret
dec
adc
ss
in
movsl
ds
test
fisttpll
mov
mov
test
je
pop
in
inc
leave
push
sub
sbb
shr
or
std
inc
repnz
or
mov
repnz
pop
test
aad
sbb
daa
leave
mov
rorl
negl
jle
movsb
int
fadd
outsl
stos
or
rorb
mov
xchg
decb
iret
mov
outsl
out
add
xchg
inc
cwtl
mov
dec
pop
cmc
push
and
movsb
movsb
lret
sbb
pushf
sub
jp
faddl
arpl
adc
enter
xchg
aad
inc
sbb
rcll
mov
sub
dec
sub
cmc
xchg
adc
xchg
sub
xor
loope
jne
sub
and
jmp
adc
adc
addr16
imul
pop
cwtl
ss
test
sub
add
iret
addb
xchg
mov
mov
les
push
lret
test
xor
shl
pop
push
cmpb
fstl
xchg
jnp
addr16
arpl
mov
xor
mov
adc
mov
inc
lret
arpl
mov
sbb
repnz
rorb
mov
cmc
jo
test
push
add
push
not
sbb
mov
adcl
dec
std
lret
popa
outsb
pop
movsb
and
call
sbb
xor
stc
inc
leave
sbbl
aas
stos
lret
test
mov
jbe
out
mov
in
mov
or
testb
mov
int
rcrb
xlat
ljmp
dec
mov
ja
sbb
sbb
adc
sbb
or
scas
jnp
inc
push
xor
xchg
roll
inc
xchg
jnp
cmp
xchg
outsb
fdivrl
clc
or
inc
pop
fcoml
scas
or
clc
dec
stc
jnp
pop
cmpsb
stos
and
enter
push
orb
inc
call
jle
fistpll
xlat
jle
fs
fwait
or
ds
xor
lret
ss
jg
xchg
inc
jns
lret
rsqrtps
cmp
fwait
jbe
aad
scas
push
adc
ret
fstp
push
mov
mov
mov
and
jmp
sbbb
test
cwtl
popl
xchg
sbb
push
scas
adc
outsb
mov
inc
iret
or
test
pop
add
inc
testl
xor
into
ljmp
pop
or
shll
sub
mov
lds
leave
cmp
mov
xchg
add
lahf
pop
xor
sbb
xor
out
inc
bound
ret
jne
jmp
rcll
dec
ja
idiv
fcomps
movb
mov
nop
inc
popa
cmp
mov
cmc
mov
inc
cld
pusha
repz
adc
push
bound
loopne
in
movsb
aaa
mov
pushf
cmc
add
mov
dec
mov
sub
js
pop
pop
add
cmp
loop
sahf
imul
mov
adc
mov
sbb
and
ss
sub
jp
push
cmp
and
dec
cli
mov
jecxz
sbb
jo
cld
jno
repz
mov
and
or
mov
cmp
lret
adc
jnp
pop
outsb
inc
lods
mov
dec
int
arpl
mov
inc
cmp
or
xorl
sub
sbb
std
cli
lds
add
fadds
mov
nop
or
fs
or
push
mul
push
mov
nop
or
mov
add
dec
mov
adc
outsb
aam
loop
jmp
push
xchg
mov
pusha
and
sub
and
call
popf
jmp
jg
hlt
sbb
popf
sbb
popa
add
subl
sbb
and
adc
mov
xchg
sub
stos
int
lcall
std
nop
mov
in
mov
dec
pop
push
shll
cmp
dec
add
mov
scas
lret
dec
rcll
ja
aas
sbb
not
stos
lret
inc
repz
jle
js
mulb
fdivr
imul
push
dec
rcll
pop
mov
pop
mov
bound
add
fldl
jno
ds
dec
push
dec
fwait
sub
les
movsl
cli
push
xlat
lds
lods
adc
mov
lods
pop
in
std
daa
aam
fldenv
dec
clc
call
sub
jb
dec
mul
fstl
mov
push
je
popa
inc
rorb
cmpsb
seta
jo
pop
or
cmc
add
jmp
dec
xchg
mov
loop
mov
pop
inc
jge
jg
daa
inc
xor
ret
sub
inc
sub
pop
es
test
mov
pop
cmp
inc
sub
es
sub
aas
repz
jnp
sbb
pop
cs
push
sub
pop
out
jge
ret
pop
and
in
rorb
jno
cmp
xchg
add
loope
sti
or
test
lds
xlat
jb
lcall
cmp
pop
lock
adc
test
cwtl
scas
daa
xor
inc
sub
mov
ret
stos
adc
shll
mov
mov
jne
push
loop
xchg
or
daa
mov
insb
jecxz
mov
xlat
mov
mov
sub
stos
add
or
push
jle
ljmp
fisubs
icebp
out
repz
sbb
mov
adc
cmc
movsb
or
lret
cmpsl
mov
inc
test
enter
pop
mov
inc
out
js
mov
push
dec
add
sbb
dec
jmp
pop
ljmp
cltd
adc
pop
xor
cmp
ds
cmp
jmp
and
into
push
shrb
daa
aaa
mov
and
fiaddl
popf
pop
jle
and
pop
add
std
jno
adcl
fsub
lea
call
jbe
cltd
inc
pop
inc
js,pn
dec
js
pop
mov
push
or
add
fldt
dec
push
in
enter
sbb
pop
xchg
lods
loopne
ror
in
imul
or
inc
mov
out
xchg
xor
add
push
out
addr16
in
lods
scas
cwtl
adc
rcl
js
adc
push
mov
jg
sbb
pop
das
fmulp
mov
cltd
or
loope
dec
pop
sbb
adc
popa
cmp
mov
sbb
cli
inc
bound
sbb
dec
cmc
fimuls
cmp
dec
adc
cmp
lret
or
js
daa
aam
xorl
push
sub
fsubs
add
loopne
sub
je
dec
inc
and
and
jae
mov
les
sbb
imul
sub
sti
fsubrl
ret
daa
outsb
inc
adc
orb
mov
jns
pop
xchg
push
bound
mov
pop
in
loope
mov
into
adc
or
insl
push
js
mov
pop
pop
ds
fwait
lea
aam
imul
push
add
ds
cwtl
and
xchg
dec
xchg
inc
std
mov
call
popa
xchg
sub
add
addr16
data16
mov
fdivrl
or
mov
jae
aaa
gs
or
pop
fstpl
mov
jo
or
sarl
mov
in
sbb
pop
in
jecxz
loopne
mov
cmpsl
xchg
pop
adc
aam
shll
arpl
shl
shr
xor
add
or
inc
fistps
xchg
leave
xchg
js
int
daa
popf
xchg
scas
loope
incl
nop
jns
pushf
ret
js
out
xor
cld
lods
fwait
push
imul
sbb
clc
das
sbb
pop
iret
dec
dec
mov
mov
and
fistpl
mov
xor
es
loope
les
lcall
outsb
cmc
push
lret
cli
or
or
xchg
sbb
inc
cs
or
sub
jne
fidivrl
or
xchg
lock
cmp
jp
mov
imul
movsb
bound
xor
or
dec
xchg
cwtl
push
mov
jg
dec
fldl
insb
fnstsw
adc
icebp
fldl
cmpsl
inc
add
ret
movsl
push
lahf
lret
scas
sub
jecxz
mov
in
and
push
imul
cld
dec
jmp
sbb
xchg
scas
mov
mov
or
push
outsb
sbb
jle
cmp
arpl
mov
fst
lods
mov
adc
push
push
xchg
mov
xchg
adc
push
ja
jnp
sar
inc
ret
and
cs
movl
push
xor
fcomps
mov
mov
xlat
cmp
xchg
dec
mov
pop
insl
cmc
lea
ret
xor
add
jge
es
adc
adc
sbb
dec
sub
sub
and
xorl
add
nop
shrl
aam
fdivrs
cld
dec
pop
in
lds
cmp
addr16
addr16
xlat
and
adc
jae
adc
out
mov
mov
add
sarb
mov
and
adc
mov
imul
xor
or
icebp
lods
lods
aam
in
or
icebp
or
jmp
adc
inc
call
adc
jmp
data16
pop
adc
or
cltd
mov
enter
shll
sbb
ja
cld
xchg
mov
movsl
loop
cmp
sar
inc
or
call
push
mov
xchg
pop
pushf
pushf
sar
idivl
std
les
subl
cmp
push
push
pop
cli
and
cmpsl
or
lods
iret
mov
stos
jo
xor
out
cld
bound
les
pop
jp
lahf
or
rcrl
cmpsl
push
jp
sub
push
sub
cmp
dec
bound
sbb
jne
sbbl
mov
push
jb
jb
sub
aaa
mov
push
add
add
pop
mov
and
sub
jl
mov
pop
outsl
stc
cmp
daa
outsb
jb
mov
sbb
fistpll
jo
jne
sbb
jge
das
in
inc
cmp
ljmp
and
aad
and
dec
cld
hlt
je
mov
shrl
jmp
pop
test
popf
sub
cmp
push
imul
or
xchg
rclb
jno
push
divl
cmpsb
lock
mov
pop
inc
xchg
add
pop
inc
lock
sub
loop
in
insb
pop
insb
jecxz
sub
lahf
or
push
fistpll
push
leave
or
mov
int
stos
sub
cs
mov
rep
xchg
movsl
and
push
lock
fsubrs
into
sahf
push
mov
ja
cmp
movsb
mov
push
add
rorb
lret
aam
push
and
xchg
sbb
out
push
inc
mov
fs
adcb
sbb
dec
cltd
dec
jp
inc
test
cmpb
mov
or
fsub
sti
inc
out
or
roll
imul
add
mov
or
sub
push
flds
xor
mov
mov
cwtl
je
mov
jae
sbb
sub
push
pop
adc
fucom
pop
rol
xchg
fsubrl
popa
bound
jle
mov
into
aaa
mov
cmpsl
xorb
into
in
inc
push
fisubs
shlb
mov
pushf
push
xchg
jnp
push
fucomi
sub
fdivrs
adc
mov
adc
arpl
test
bound
push
aad
fs
ds
push
pusha
faddl
divl
enter
jle
push
clc
loop
scas
test
frstor
lds
std
mov
adc
cmp
xchg
xor
mov
aaa
cld
pop
cli
xchg
rolb
incb
mov
stc
jecxz
or
daa
or
mov
aaa
in
sub
adc
imulb
lods
mov
mov
or
addr16
xor
scas
sar
flds
inc
mov
mov
pop
shrl
mov
lea
inc
lcall
cmp
icebp
sub
sbb
xchg
xchg
pop
lret
in
jmp
xchg
sbb
scas
insl
es
daa
jl
push
sbb
dec
lahf
fs
int
aad
xchg
push
adcl
jmp
lods
hlt
mov
mov
cld
mov
jge
sbb
test
shll
neg
out
dec
jl
loop
xlat
adc
jl
mov
jae
lret
mov
in
inc
iret
cmp
mov
xor
dec
xchg
mov
fisubrs
mov
xor
mov
mov
lock
mov
imul
push
f2xm1
sbb
or
or
sbb
hlt
dec
add
push
xor
mov
les
imul
bound
or
lock
xchg
in
add
xlat
imul
push
push
xor
fcmove
xor
pop
ja
popf
mov
repz
repz
popf
dec
in
or
enter
ret
fadd
hlt
fs
cmpsb
mov
icebp
imul
cmp
test
xor
adc
xchg
push
xchg
clc
lea
js
sarb
inc
pop
jg
daa
xchg
in
pop
out
fs
xchg
loop
or
xchg
sub
mov
mov
fistpll
arpl
lock
mov
inc
test
jle
lcall
push
mov
in
xorb
jo
dec
int3
lds
pushf
push
lods
pop
jp
mov
ja
mov
sbb
push
cmp
insb
aaa
fs
call
cmp
jbe
mov
aam
sub
jno
dec
pusha
jbe
adcl
push
xor
daa
icebp
inc
cmp
or
out
push
inc
cmp
ljmp
clc
sbbb
mov
cmp
test
mov
pop
movb
mov
adcb
jbe
cmp
xchg
pop
cmpsl
ret
clc
jl
adc
loope
jg
or
pop
mov
insb
cwtl
inc
ficompl
sub
out
jo
int3
fidivl
mov
aad
xor
jl
jae
sub
pop
in
rcrl
push
add
das
adc
and
test
push
pop
xchg
gs
push
lds
ds
mov
jns
mov
nop
inc
mov
mov
lcall
cmpsl
lret
outsb
dec
jbe
mov
das
arpl
pop
lods
sub
loopne
jmp
lds
iret
andl
xlat
in
fs
lret
test
pop
mov
fistps
fisubs
in
loopne
xchg
decl
adc
sbb
lods
pop
mov
fxch
xchg
push
push
and
js
mov
push
xchg
sbb
insb
int3
push
lahf
jmp
mov
int
cltd
jg
xor
lcall
xor
scas
pop
repz
or
cli
fnstsw
dec
pop
sub
mov
xchg
jbe
pop
jbe
lods
into
xchg
inc
and
jo
pop
scas
in
mov
jnp
cmp
xorb
jbe
add
jecxz
movsl
add
mov
fisubrs
jp
jl
pop
sub
lock
inc
insb
xor
ja
in
sub
movb
and
sub
orl
cld
jge
fs
jle
stc
dec
adc
out
popf
js
or
xor
outsb
stos
push
out
push
push
push
sahf
subb
daa
je
jno
out
fwait
xor
insb
sbb
xor
into
les
push
sbb
push
scas
xor
xchg
cld
add
mov
dec
pop
adc
adc
and
or
mov
mov
add
test
mov
test
in
mov
xor
mov
push
jmp
sub
inc
cltd
loopne
adc
push
cmp
mov
add
stc
xlat
or
adc
mov
xor
push
push
out
popf
mov
dec
mov
fisttpll
icebp
mov
inc
outsb
in
negl
sti
pop
xchg
add
mov
jns
jecxz
lds
xchg
mov
xchg
shl
jnp,pt
das
inc
mov
push
pushf
es
mov
jo
test
dec
shlb
xor
mov
clc
scas
sub
repnz
pop
push
add
mov
inc
ret
movsl
out
push
imul
jae
rcrb
pop
out
dec
shr
in
mov
call
sti
int
mov
je
adc
lahf
push
mov
mov
mov
test
xchg
mov
mov
cltd
cmp
jb
movsl
js
lods
add
loope
leave
sbb
cmp
sahf
add
call
popa
xor
int3
push
nop
and
pop
sbb
mov
int3
pushl
cmpsl
adc
mov
sti
imul
xchg
jae
pop
loop
xchg
cmp
xor
stos
je
je
jne
lds
ss
dec
push
pop
imul
add
xor
cli
cltd
mov
jmp
pop
stos
jo
cli
jle
fcoml
leave
jg
add
shlb
cmp
xor
imul
insb
stc
setge
dec
inc
lret
mov
in
add
sbb
jbe
mov
je
orl
sbb
jge
das
sbb
or
icebp
cmpsb
clc
mov
test
ss
push
sbb
out
jae
sub
pusha
inc
dec
mov
cmp
pop
js
adc
popa
ret
cmp
loope
daa
ficoml
jno
in
mov
cmp
push
lahf
xor
test
lcall
pop
ret
sti
xor
pushf
fsts
mov
mov
cmpsl
adc
jp
pop
movsl
test
repnz
lcall
push
nop
inc
and
arpl
insb
mov
xchg
cwtl
cld
fmuls
ret
in
mov
lds
lds
sub
mov
add
push
daa
sahf
das
xchg
mov
add
faddl
ds
mov
mov
cli
xchg
and
mov
es
addr16
mov
popl
leave
scas
jb
divl
fnsave
ficoms
ret
mov
dec
test
cmp
int
pop
ret
lret
outsb
mov
mov
sub
aam
jg
out
adc
mov
sbb
cmp
xor
cmpsb
in
stc
mov
cmp
adc
mov
rcr
imul
loope
jmp
stos
jp
cmpsb
test
sbb
lret
bnd
fidivs
cli
pushf
scas
inc
addl
jl
xchg
imulb
add
adc
push
mov
fidivrl
and
movsb
adc
dec
std
lds
push
jge
pop
int3
cwtl
lahf
dec
stos
cltd
fs
je
fildl
bound
je
movsb
xor
sbb
mov
cmp
xor
in
imul
aam
std
mov
pop
inc
jmp
pop
push
ffreep
stos
sbb
sti
arpl
cli
adc
les
outsb
sbb
lret
mov
cld
rclb
idivb
fstpt
dec
rorb
mov
faddl
mov
sbb
add
add
cmp
or
sbb
mov
inc
cmp
loop
rcll
out
xor
add
mov
and
stc
cmpl
xor
out
lods
ret
mov
sub
add
lods
push
inc
jnp
xchg
rcr
add
mov
test
and
out
lahf
loop
cmc
add
aas
ret
inc
inc
xor
jecxz
push
mov
insb
insl
mov
lock
sub
dec
mov
inc
and
inc
mov
and
popf
or
stos
je
sub
dec
fs
ljmp
jecxz
scas
sub
iret
mov
jbe
xchg
jl
jne
subb
jb
or
rcrb
mov
fsubrs
xor
rcrb
and
shrl
add
stos
xchg
daa
mov
sbb
mov
ret
shlb
lret
fmuls
inc
scas
push
stos
enter
subl
addl
mov
or
mov
xchg
pop
out
movl
mov
push
mov
push
mov
jl
in
call
arpl
or
pop
rclb
push
js
sub
xchg
xor
pop
rorb
inc
pop
xchg
jmp
adc
mov
lods
ficoml
mov
outsl
lahf
sub
insb
ret
jb
xor
movsb
inc
sbbl
pop
cli
adc
loopne
jmp
fwait
loop
ficomps
stos
pop
lods
fildl
lret
jg
icebp
in
loopne
sahf
iret
lds
jo
out
sti
mov
cmp
sahf
outsb
in
jno
jle
loope
dec
ret
cmc
int3
add
lcall
les
xchg
inc
loop
inc
ja
stos
pop
inc
push
push
and
je
xor
in
xor
stos
cs
lock
lcall
in
cmpb
fsubrs
mov
lret
add
mov
dec
inc
pop
mov
dec
test
xor
adc
mov
mov
out
inc
ret
pop
jne
icebp
loopne
ja
aaa
fisttpl
rorb
jp
adc
je
inc
loopne
rorb
es
jns
andl
add
add
repz
out
jmp
div
push
jg
mov
xchg
mov
and
and
daa
outsl
pop
dec
push
or
inc
sbb
and
out
jle
les
js
mov
sahf
test
mov
push
jle
cmpsl
test
jle
add
push
xor
shl
or
push
sub
jb
sbb
dec
sbb
ret
repnz
gs
adc
pusha
and
ja
adc
mov
in
scas
cmp
cmp
aad
call
movsl
and
jne
sti
std
out
je
jp
jns
ficoms
sbb
fstpt
cld
mov
outsb
mov
adc
out
movsl
lret
sub
sbb
fs
xchg
jns
xchg
mov
dec
pop
xchg
scas
jle
push
cli
adc
cmp
sbb
inc
fsts
jae
pop
stos
jg
lods
outsl
and
movsl
pop
test
cmp
dec
aam
jb
pop
test
or
loop
aam
xchg
mov
lods
lea
setg
aas
iret
or
xchg
sbb
test
sbb
in
shll
sbbb
mov
in
mov
jmp
mov
dec
lds
adc
fistpl
xor
loopne
pushf
mov
pop
jg
test
insl
enter
xadd
adc
mov
int3
mov
outsl
or
mov
aaa
jecxz
int
push
add
ficoms
dec
and
dec
sbb
sti
push
ljmp
fbstp
cltd
jmp
out
test
sub
jns
lret
imul
fisubrs
dec
jge
xor
mov
outsl
movsl
sbb
stc
dec
mov
sbb
stc
mov
jmp
push
fs
aas
stos
arpl
aaa
cmp
pusha
mov
cmp
push
or
push
pop
leave
in
mov
xor
dec
xor
pop
sti
mov
inc
scas
or
pop
scas
and
adc
mov
sbb
cmc
mov
xor
idivb
and
xchg
lods
fnstcw
addr16
in
data16
jbe
pop
mov
sbb
push
xor
push
dec
cmp
push
cmpsb
cmpsb
popf
mov
pop
sarb
pop
into
popf
scas
push
ja
lods
fbld
mov
lods
mov
sub
ret
xchg
inc
je
stc
popf
stos
and
sub
dec
pop
xchg
mov
dec
shlb
shlb
sahf
mov
xor
gs
movsl
add
sub
popa
popf
cmp
pop
sub
lock
insl
mov
jns
ret
fs
jp
unpckhps
push
sub
pop
jmp
mov
ret
push
pop
ds
cmc
mov
mov
jns
xorb
aam
xor
test
lcall
bnd
aad
mov
pop
dec
mov
stc
iret
mov
inc
pop
inc
repnz
ljmp
imul
ja
and
movsb
mov
fstpl
or
repnz
loope
psubd
adc
decl
cmp
sub
adc
ljmp
hlt
rcl
inc
cmpsl
inc
push
cs
arpl
mov
sbb
stc
xchg
xchg
sbb
adc
and
cmp
ret
pushf
pusha
nopl
sahf
adc
mov
sub
jecxz
lret
xchg
scas
fstl
call
cld
sbb
mov
sarb
xchg
addl
repz
dec
or
xchg
ucomiss
jmp
jbe
add
mov
cwtl
ficoml
cmpsb
push
xor
push
data16
and
xor
loope
daa
jno
pop
inc
pop
cld
mov
inc
jmp
mov
test
loope
dec
dec
push
lods
les
outsl
and
fisttps
mov
inc
popf
push
xchg
sub
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
test
addb
mov
jp
xchg
movsb
push
pop
mov
inc
inc
and
pop
xlat
add
mov
in
pushw
cmp
mov
inc
test
sbb
push
push
sti
jbe
negb
or
mov
pop
sti
inc
pop
and
push
int3
sbb
jg
sahf
push
or
push
repnz
cmpsl
lret
mov
loop
and
mov
stc
jo
push
or
xchg
lods
mov
push
mov
shll
jl
jnp
cmc
xchg
dec
std
hlt
aad
test
test
in
jne
and
fsubs
lcall
aas
add
divb
mov
rcll
addr16
push
pushf
loope
insb
lods
push
mov
inc
popf
lods
aaa
and
mov
xor
mov
in
pusha
pop
pop
dec
add
xchg
rolb
xchg
scas
out
xlat
sbb
inc
sarb
dec
mov
lret
jecxz
addl
ljmp
jg
sbb
ret
inc
aam
sub
ljmp
dec
insb
mov
xor
test
add
in
mov
orb
out
add
mov
lods
or
pop
stc
adc
stc
jne
sbb
insb
stos
clc
cwtl
or
lahf
ds
jmp
sahf
addl
fs
sub
test
mov
mov
and
adc
fs
or
mov
outsl
and
pop
js
and
cmp
or
adc
jmp
jmp
pop
dec
or
add
icebp
and
xor
lret
lcall
test
mov
xor
outsb
testl
aad
into
xchg
jae
call
cmpl
pop
sbb
pop
jle
mov
jecxz
pop
push
add
sbb
mov
lods
lahf
push
mov
mov
loope
sub
ret
add
divl
xchg
cmp
lock
test
cmp
imul
jl
xchg
lea
mov
mov
mov
arpl
popf
mov
ds
loopne
rol
loope
adc
push
cmp
inc
xchg
lret
lods
bound
js
add
int
mov
add
or
mov
hlt
sbb
sbb
push
mov
sahf
mov
mov
and
inc
fwait
lcall
xchg
jp
or
dec
push
adc
jecxz
stc
ficomps
pop
inc
inc
mov
add
inc
mov
lea
pop
cmp
lock
xor
enter
or
repnz
imul
addl
fbld
movb
mov
fidivrl
call
imul
dec
ljmp
sbb
pop
repz
push
push
xchg
mov
xor
push
and
jno
mov
mov
outsb
xor
sub
test
mov
fadds
mov
imul
mov
pop
fwait
sbb
mov
mov
pop
out
and
rcrb
pusha
mov
js
push
dec
rol
fmull
xchg
in
cs
mov
sahf
cmp
cmp
mov
adc
iret
sbb
push
les
pop
and
ds
jmp
insb
notl
data16
add
aam
lods
mov
insb
cmp
xchg
fwait
mov
pop
aad
pusha
das
repz
in
sub
mov
add
mov
dec
jl
xchg
hlt
inc
or
ret
pop
imul
push
pop
mov
int3
test
or
ret
es
outsl
mov
pop
or
pop
arpl
dec
ja
addr16
mov
mov
cld
icebp
cli
xchg
push
mov
and
mov
ffree
lock
addl
xor
scas
lock
inc
mov
push
pop
sub
sbbb
pushf
movsl
jb
jle
push
cmp
sub
xor
test
sub
es
push
movsb
and
mov
out
inc
lods
and
lods
addr16
jne
jecxz
loop
pop
adc
sahf
arpl
cltd
shll
fildl
or
mov
pop
mov
dec
frstor
cs
loopne
xchg
push
push
std
fwait
into
ss
scas
push
shl
dec
lds
cli
sbb
aam
incb
ret
xor
test
xchg
xchg
je
mov
jp
pop
in
loopne
push
mov
imul
cmp
cwtl
sub
push
into
jg
out
push
dec
pop
inc
inc
popf
shll
mov
push
shlb
das
es
sub
enter
nop
imul
repnz
rcll
push
pop
fldt
inc
arpl
inc
jmp
test
jmp
xor
cmp
mov
mov
test
imul
xor
sbb
add
sbb
sbbl
cmp
and
pushf
and
outsl
sub
adc
add
sub
aaa
popa
test
xchg
insl
mov
jp
dec
stos
jecxz
push
xchg
xor
aam
pop
adc
pop
adc
dec
ficoml
pop
mov
repz
adc
add
xchg
lods
inc
jo
jge
and
push
pop
push
mov
jge
test
data16
je
pop
cmp
xchg
out
jecxz
jge
psrad
jg
and
push
fmulp
stc
pop
mov
push
dec
cmp
pop
mov
sbb
fwait
pushf
cltd
ja
call
inc
xor
fistps
imul
adc
or
jns
or
sahf
push
jb
fstpt
mov
jno
push
movsb
sub
clc
mov
inc
xchg
mov
cmp
aaa
test
into
jne
cmp
mov
dec
dec
adc
jl
loopne
sbb
push
ljmp
ds
inc
in
push
daa
sub
sub
mov
movsb
nop
mov
or
sti
stos
hlt
adc
pop
xor
sbb
sahf
sub
push
mov
inc
xchg
sub
sub
and
incl
mov
and
popa
movsl
and
push
or
in
in
bound
aaa
shrl
sbb
jnp
push
jl
sti
push
jl
leave
mov
roll
xchg
dec
inc
sbb
push
ret
push
and
mov
loope
mov
stos
push
fnstsw
adc
or
jmp
daa
leave
aad
cld
mov
jo
adc
test
rcll
and
add
bound
jae
cs
mov
jns
js
pop
scas
aaa
xchg
mov
fs
aas
adc
jp
jno
and
icebp
dec
out
je
orb
add
pop
xchg
adc
pop
jmp
es
xchg
dec
xor
testl
jge
int3
jge
test
xchg
add
mov
inc
movsl
push
fdivrl
mov
dec
sbb
add
add
push
mov
sti
xchg
dec
push
xor
sub
fsts
outsb
add
mov
adc
rolb
mov
jae
insl
mov
test
mov
insl
loope
dec
idivb
test
ret
je
mov
pop
outsl
or
mov
iret
sbb
or
in
mov
cmp
daa
mov
add
cmp
fstps
addr16
fldl
test
mov
push
ficoml
cmp
dec
mov
in
pop
je
add
or
cmc
pop
or
sub
jg
mov
scas
and
sub
mov
jecxz
xchg
xor
ljmp
cltd
scas
mov
std
je
shlb
xor
mov
push
inc
inc
pushf
mov
divb
mov
xlat
aas
arpl
dec
or
mov
std
shll
push
out
fbld
ljmp
stos
push
movsb
bound
dec
jmp
cld
repnz
dec
pop
push
xchg
xor
and
test
call
sbb
mov
dec
mov
lcall
pop
xchg
jle
and
dec
js
mov
add
push
add
repz
nop
fisubrl
ret
mov
push
adc
fucom
jp
jcxz
jp
and
shlb
push
pusha
out
xor
pop
jl
jle
insl
dec
pop
and
nop
and
xlat
lock
push
cs
jae
mov
xchg
xor
push
and
mov
cwtl
add
les
push
mov
or
jno
ja
out
cmc
mov
inc
rolb
ss
enter
out
sub
mov
dec
icebp
test
arpl
jne
in
dec
ret
and
fcoml
cvttps2pi
cmc
jns
xlat
push
je
xchg
fsts
sbb
xchg
das
jnp
or
pop
fcom
outsb
lret
jmp
or
les
cmc
mov
out
sub
cmp
lock
sub
fwait
push
mov
inc
mov
sahf
pop
mov
mov
sbb
xchg
gs
je
inc
add
mov
ljmp
xchg
xor
jnp,pn
insb
fisttps
adc
in
cmp
push
dec
fisttpl
add
cmpsl
lret
outsl
roll
and
cmpsl
lcall
sbb
pop
andb
or
lea
dec
imul
fdiv
xor
sbb
push
call
lods
cmp
cmp
mov
dec
test
in
out
and
dec
sar
sbb
js
cmp
xor
aaa
mov
inc
lods
pop
outsb
iret
or
aad
hlt
rorl
es
jge
xor
lcall
popf
insl
rcll
and
jne
mov
cmpsl
or
jg
out
xchg
ret
inc
dec
inc
and
mov
pop
mov
ret
pop
or
ljmp
push
fldcw
out
insb
testb
cmp
out
mov
test
mov
add
and
jbe
mov
daa
decb
stc
pop
sbb
test
push
sbb
fwait
pop
add
mov
cli
rcrl
mov
or
mov
scas
and
mov
xor
push
fcompl
sub
subb
push
cmp
arpl
or
jg
xchg
scas
addl
cmp
cmp
test
mov
js
shl
sub
lock
js
adc
aaa
imul
daa
xchg
les
shll
jge
add
push
sub
ja
xor
pop
add
cltd
mov
and
lahf
push
mov
or
popa
iret
xchg
jbe
pop
roll
mov
jg,pn
and
mov
lods
les
xor
push
jo
push
xor
mov
dec
push
aam
jmp
pop
rcrl
cmp
mov
adc
pusha
data16
and
divb
push
jns
push
adc
fwait
jae
xor
loope
je
jb
clc
lahf
or
pusha
add
inc
mov
loope
in
pop
cmp
int
push
push
sub
out
sbb
xchg
arpl
or
mov
in
and
fwait
cltd
movsb
dec
xchg
iret
mov
fsubl
imul
enter
xchg
test
xor
mov
sub
nop
mov
jmp
mov
jmp
imul
movsb
mov
cmp
or
sbb
clc
test
jmp
dec
ret
jecxz
popa
or
add
fistpll
cmpsl
mov
int3
lahf
xchg
ret
jle
or
sbb
inc
fmulp
xor
stos
test
sub
aad
adc
push
jae
mov
cs
scas
dec
cli
push
scas
inc
fildll
popa
pop
push
and
in
ror
lds
dec
rclb
loopne
adc
enter
movsl
popa
fildl
aad
iret
or
cltd
ljmp
mov
sbb
dec
movsl
mov
mov
xchg
push
jno
repz
mov
cs
mov
icebp
dec
or
lods
bound
adc
sbb
and
mov
in
aaa
aad
push
clc
icebp
in
and
fbstp
or
pop
mov
movsl
xchg
cwtl
fisubl
lock
test
dec
pop
and
mov
jae
jmp
mov
cmpb
int3
pushf
or
je
ljmp
stos
out
inc
aad
test
sub
jl
mov
cwtl
out
daa
movsl
addb
lcall
sub
cmp
fmul
test
lds
loope
add
mov
pop
jecxz
adc
ja
sub
jmp
pop
inc
cmp
aam
or
shlb
movsl
pushf
cmpsb
loopne
sbb
rorb
xor
mov
and
fcmovnb
pop
dec
adc
xchg
fwait
sub
pop
and
inc
inc
jle
inc
aam
outsb
stos
cltd
arpl
imul
adc
mov
das
dec
xor
jbe
xor
adc
sub
mov
adc
pop
pop
push
jmp
es
outsb
cmp
jmp
jle
fcoms
fsts
mov
jmp
jbe
clc
push
pushf
lcall
daa
bound
jae
xchg
data16
test
cmp
pop
scas
inc
in
adc
mov
icebp
cmp
leave
inc
cld
test
addb
inc
sbb
add
imul
adc
mov
and
insb
shll
ss
pop
push
mov
push
mov
in
rcrl
outsb
fs
out
adc
loopne
insb
inc
scas
ret
pusha
or
pop
ja
nop
and
sahf
push
mov
xchg
push
xor
inc
push
inc
xor
cmp
iret
adc
xor
dec
push
sub
jbe
es
out
popf
adcb
movsb
mov
repnz
pop
jbe
jecxz
daa
cli
lcall
xchg
pop
pop
push
jle
push
sub
sahf
mov
stc
add
add
pop
cmp
jae
dec
adc
fimull
sub
mov
enter
popf
pop
sbb
jle
and
clc
mov
add
out
add
daa
jns
and
cmp
inc
dec
test
add
cpuid
xor
jmp
addr16
sub
icebp
push
push
fs
loopne
and
cmp
or
std
insl
movsl
lcall
out
es
cltd
pop
gs
xor
in
shll
dec
inc
dec
sub
fisubrs
pop
jge
sub
scas
jle
inc
mov
pop
adc
in
js
push
mov
sub
xchg
and
test
rcl
mov
mov
adc
and
mul
xor
sti
movsb
mov
push
mov
cwtl
gs
jnp
inc
xor
sbb
xchg
aad
pop
dec
jp
test
outsb
sub
xchg
lret
cmp
xorb
jo
call
das
aas
incl
jno
jecxz
shlb
or
pop
movsb
inc
mov
pop
aas
sbb
fiaddl
adc
push
into
jmp
test
lret
pusha
andl
push
push
fstl
test
push
subl
sbb
pop
je
lds
xor
dec
das
pop
mov
sub
or
mov
ret
rol
mov
out
push
jge
sbb
es
scas
xchg
dec
cmp
mov
nop
jne
push
int
loop
push
and
shr
test
add
fsubl
dec
fs
jnp
pop
adc
mov
adc
mov
out
aaa
js
sbb
inc
xchg
xchg
outsl
addr16
mov
push
xor
and
aaa
lods
mov
fsub
jmp
mov
dec
fnstcw
xor
or
outsb
incb
sub
adc
popf
imul
sub
das
cli
sbb
clc
or
ret
enter
sbb
dec
out
add
fdivr
lods
icebp
pop
lea
dec
xor
inc
mov
pusha
test
push
data16
inc
mov
and
and
pop
pop
arpl
fwait
push
lcall
scas
fld
add
cmp
and
scas
cmpsl
xchg
push
xchg
fdivrl
mov
sahf
fsub
in
sbbl
pop
ret
adcb
pop
mov
inc
movsl
pop
and
xchg
insb
xchg
test
call
cwtl
outsb
adc
or
jne
pop
repz
cwtl
sbb
pop
mov
enter
xchg
dec
push
mov
cli
es
dec
xor
cli
xchg
outsl
jo
xor
sub
jbe
xor
cld
mov
fidivs
jmp
pop
data16
and
cmpl
mov
add
cmpsb
jl
inc
and
loope
pushf
pop
hlt
or
jle
ds
jno
fdivrl
or
shl
sbb
mov
aas
lahf
jmp
sbb
imul
std
test
xchg
inc
js
into
xlat
stos
adc
add
lds
daa
cli
mov
xchg
cmp
stc
and
mov
sub
movsb
gs
sti
adc
inc
sub
imul
mov
cmp
icebp
or
in
add
jl
mov
iret
cltd
and
mov
call
lret
mov
cmp
jae
pop
enter
jge
cmpsl
aas
push
xchg
xor
or
popa
dec
sbb
xor
cltd
cmp
jbe
sub
shrb
repnz
xchg
fs
cmpsl
stos
push
fs
mov
sbb
dec
mov
sub
fimuls
dec
jb
mov
mov
inc
cmp
enter
or
jnp
mov
xor
push
inc
sub
test
fidivs
jb
xor
loop
cmp
imul
push
cmp
mov
icebp
jmp
ds
fisubl
mov
cmp
das
fisubl
pop
gs
cmp
hlt
sbb
sti
lret
sub
lret
dec
dec
pop
mov
or
jmp
loop
mov
sbb
lea
popf
repnz
jmp
in
les
jbe
mov
gs
jno
ret
clc
and
into
push
cmp
rep
cmp
pop
sub
imul
xor
or
stos
jo
xor
loop
cltd
aas
je
daa
or
lods
fucomip
into
fstps
push
sarb
arpl
gs
outsb
hlt
out
jae
in
lret
cli
fwait
ror
adc
adc
movsb
idivb
cmpl
lods
das
mov
mov
std
cwtl
sti
or
pop
fmul
ja
sub
cli
repnz
jns
lds
and
push
loopne
flds
hlt
loop
lret
scas
fisubl
jno
mov
fcompl
mov
push
out
in
xchg
cmpsl
addb
sbb
mov
push
insl
pop
mov
test
push
push
mov
cmp
cld
fdivl
or
pop
arpl
xor
mov
loop
jle
or
add
mov
adcl
pop
mov
mov
mov
sub
mov
lds
lret
andb
nop
pop
je
mov
xor
shll
jmp
pusha
or
jg
add
sbb
repz
inc
jb
push
dec
shll
and
pop
pop
jo
sar
add
sbbb
pop
dec
insb
int3
insl
cmp
imul
aas
push
jo
cs
adc
stos
lods
hlt
jns
cmp
xchg
dec
out
les
push
xor
add
cmp
repnz
daa
leave
lods
std
lcall
in
lock
into
daa
imull
dec
popa
lcall
xor
mov
pop
and
pop
add
jb
scas
add
imul
aad
inc
push
cld
dec
mov
mov
and
inc
mov
scas
pop
and
int
jmp
xor
ja
inc
add
push
push
imul
jae
or
adc
jo
inc
mov
shlb
xchg
scas
pop
pop
inc
xor
jmp
inc
xor
push
dec
mov
sbb
push
cmovne
xchg
pop
cmp
test
imul
xchg
std
ret
aam
cmp
xchg
mov
aaa
xchg
pop
jo
push
xor
push
not
cmp
into
xor
loopne
jae
sbb
dec
data16
stos
pusha
jecxz
in
pop
mov
xor
sbb
das
rolb
arpl
mov
jns
pop
popa
sub
nop
jmp
ret
push
in
cmp
add
push
iret
lods
push
push
mov
dec
lods
sbb
adc
lcall
xchg
adc
fsubrs
cltd
cmp
sub
add
adcl
mov
xchg
mov
int3
sbb
lods
cmpsb
pop
pusha
push
xchg
mov
push
add
pop
xor
mov
push
ds
mov
mov
fsubrs
add
aam
imulb
das
dec
jle
cmp
in
out
or
cmp
inc
mov
xlat
hlt
xchg
or
aad
push
stc
enter
insl
jecxz
mov
inc
icebp
test
xor
daa
imul
icebp
loopne
dec
mov
test
add
mov
xchg
mov
lcall
or
mov
adc
cmp
or
mov
add
fdivrs
and
mov
enter
sub
sbb
imul
cmp
aam
dec
repz
jg
fimull
jl
fcompl
inc
hlt
jns
jo
sbb
mov
cltd
lret
mov
ficoms
arpl
testb
push
ja
in
dec
lcall
sbb
pop
repnz
jge
into
rcrb
or
lock
cld
mov
or
decb
lock
xor
inc
push
cs
in
pop
ss
aaa
mov
repz
sub
cmp
fs
icebp
aad
lock
lret
iret
das
ljmp
shrd
pushf
ljmp
dec
shrl
sub
or
adc
pop
dec
stos
in
dec
divb
jecxz
rclb
mov
bnd
scas
mov
push
inc
lods
lcall
push
int
rol
sbb
jno
sbb
stos
lahf
out
or
imulb
jns
pop
mov
mov
imul
andb
out
enter
mov
and
sahf
xor
ficoms
push
inc
fimull
into
push
xchg
ret
cmp
rorb
adc
mov
dec
xor
xchg
sbb
jmp
loope
mov
push
cmc
imul
mov
call
test
dec
into
jp
mov
nop
sti
sbb
mov
sahf
sbb
nopl
out
xor
aam
clc
mov
xchg
ret
pushf
loop
fistpl
mov
mov
sub
dec
pop
imul
aam
or
rolb
mov
sub
psubq
or
popf
movsl
inc
adcb
push
aam
mov
je
pop
pop
roll
sub
ret
je
ds
testl
nop
sub
in
cmp
ja
les
ret
jg
and
sub
pop
pop
aaa
ret
lods
repz
insb
mov
iret
pop
sub
in
add
out
shll
imull
lcall
les
loop
fisttpl
sub
int
push
out
dec
add
mov
movsl
sbb
test
and
push
adc
xchg
cmc
data16
xchg
icebp
xchg
lcall
push
xor
fistl
out
ss
or
sahf
xchg
ret
aam
jg
add
pop
cwtl
les
shl
add
sbb
add
out
jae
je
pop
cmp
mov
scas
inc
mov
test
lds
js
nop
push
mov
pop
sahf
jmp
jnp
cli
insl
xchg
lds
adc
xchg
out
cmp
and
daa
xchg
loop
mov
and
add
out
cmpsl
cmpsl
lods
in
je
js
clc
lock
push
mov
add
xchg
xlat
fnstsw
sarl
pushf
xchg
jp
mov
sahf
adc
je
xor
stc
push
xchg
mov
popf
mov
es
sub
in
lds
adc
or
mov
push
fadds
iret
push
adc
enter
stos
mov
xchg
mov
mov
stos
mov
outsw
ret
dec
insl
add
push
inc
xor
gs
push
mov
sub
test
mov
cmpsl
inc
mov
mul
adc
mov
mov
cmp
xchg
jmp
sbb
lock
xchg
decb
xchg
lret
and
popa
push
hlt
cmc
or
fistps
push
cmp
aad
rcrb
mov
out
sub
addb
sbb
leave
ljmp
xlat
jmp
das
adc
mov
into
adc
int3
fsubl
xorl
jg
jle
cwtl
add
imul
push
lcall
out
mov
jmp
inc
and
push
aaa
lea
sbb
add
ret
aam
in
jo
jmp
lcall
mov
out
inc
daa
jne
iret
mov
cmp
sub
xchg
cli
mov
sub
add
adc
jmp
cwtl
mov
hlt
iret
or
jg,pn
and
dec
ret
jl
mov
xchg
cmp
ljmp
jg
xor
mov
mov
or
cmp
test
or
jo
or
push
adc
das
mov
les
ficoml
xchg
les
or
ficoms
push
pop
fmul
test
repnz
iret
mulb
adc
cltd
cmp
xor
mov
push
sbb
fcomip
mov
or
inc
xor
addr16
add
pop
inc
hlt
xchg
fadds
jne
jp
mov
push
push
ljmp
ss
push
imul
dec
cld
push
movsb
fbstp
and
mov
lock
test
push
repnz
fnsave
in
or
vpmacssdd
inc
xchg
fistpl
jp,pn
push
mov
mov
addr16
or
mov
or
inc
mov
or
cmp
xchg
cmp
loopne
test
or
jge
sbb
cwtl
sbb
mov
leave
xchg
adc
popf
data16
stos
leave
xor
adcl
ret
dec
insb
mov
jmp
pop
fiadds
xor
add
popf
xor
pop
js
insb
or
sub
pop
dec
ja
mov
lcall
cmp
fucomp
sub
mov
jle
shlb
in
je
icebp
push
dec
pop
jo
outsb
das
sub
lret
adcb
or
xchg
insb
push
mov
push
daa
mov
hlt
add
xor
lods
xor
pop
popf
sti
push
push
shr
sub
and
cs
sbb
int
inc
sub
pop
push
loope
es
or
mov
and
mov
fs
adc
mov
mov
clc
push
add
test
xor
xchg
lock
lret
xchg
outsl
dec
or
push
jnp
cmp
shll
cmp
dec
add
and
outsb
mov
push
fsubs
push
ja
jno
mov
sbb
dec
mov
mov
mov
outsl
cmp
xchg
loope
mov
mov
push
out
xchg
call
adc
out
mov
idivb
aam
fisubs
mov
out
fs
je
add
sbb
jo
add
mov
leave
push
rolb
ljmp
call
shlb
divb
push
fwait
xlat
mov
xchg
mov
pop
inc
inc
cmp
pop
inc
sub
fidivl
arpl
or
aad
mov
ljmp
add
xchg
leave
jge
pop
and
add
aaa
jmp
test
sub
scas
mov
or
lcall
inc
push
cmc
iret
jmp
push
repz
adc
js
cs
shr
mov
lret
mov
dec
inc
dec
cmp
pop
or
mov
mov
je
mov
prefetchwt1
fsubrs
jo
sbb
insb
jne
fldt
outsb
loope
jbe
dec
daa
add
mov
in
aaa
mov
test
sub
jmp
cld
jg
jo
enter
mov
xor
dec
mov
adc
ret
jno
aaa
testb
shll
mov
jecxz
lds
mov
pop
sub
cmpsb
mov
xchg
push
mov
lds
xchg
enter
shlb
sub
repnz
ljmp
rolb
add
xchg
inc
mov
stos
jge
adc
xchg
cmp
jl
and
sub
sub
add
leave
mov
insl
or
out
mov
rorb
out
xchg
insl
push
cli
cmp
push
jns
popa
mov
inc
dec
pusha
aad
jb
ds
or
push
push
push
not
fistl
mov
sti
es
aad
nop
cmp
xor
inc
jl
cli
adc
xchg
mov
pop
nop
push
ret
scas
adc
in
aad
imul
popf
sbb
ja
cld
hlt
xchg
neg
lcall
dec
pushf
pop
lret
push
push
mov
push
ret
adc
in
pop
mov
xor
in
mov
jp
push
repnz
lcall
mov
lahf
icebp
pop
in
and
dec
jo
pop
in
jno
inc
fwait
in
aaa
dec
call
jmp
push
jle
clc
jecxz
leave
cmpsl
bound
cmc
in
enter
mov
push
mov
xorl
mov
jb
pusha
push
stc
out
divb
in
stos
xor
repnz
lock
xchg
gs
data16
xlat
xor
aad
lret
movsb
or
xchg
mov
movsb
jle
dec
xchg
out
jbe
mov
in
xorl
xor
jo
push
mov
movsb
jmp
jns
pop
jmp
faddl
div
sbb
outsl
rorl
cmp
mov
xchg
subl
dec
psrlq
jne
cmp
add
push
xor
lcall
push
fsubrs
outsl
xchg
leave
iret
sbb
rorb
or
out
lcall
pop
push
cmp
inc
push
mov
stos
push
insl
inc
xchg
mov
ljmp
cltd
int
ret
push
iret
inc
in
icebp
push
scas
jmp
mov
in
repnz
sbb
loopne
xchg
xor
icebp
xor
call
loop
cmp
xlat
jg
adc
or
insb
decl
pop
inc
sub
lock
jg
push
loop
and
adc
push
sbb
fisubl
ficomps
push
inc
scas
inc
dec
rcl
test
xchg
cltd
outsb
test
pushl
stc
jbe
push
idiv
je
mov
out
inc
es
icebp
bound
cmp
mov
mov
cmpsl
mov
pushf
ror
inc
sub
adc
mov
mov
es
arpl
inc
rcrl
xor
push
repnz
dec
pop
mov
xchg
adc
imulb
or
and
add
cli
jle
push
pop
cltd
arpl
mov
and
cwtl
into
enter
and
enter
xor
pop
enter
pop
add
xchg
pusha
mov
xchg
push
mov
adc
mov
into
push
icebp
negb
ds
std
rorl
daa
pop
dec
xchg
push
rolb
jl
mov
pop
or
arpl
or
xchg
jecxz
sub
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
and
sbb
addb
push
inc
sub
mull
gs
mov
inc
shl
and
mov
pop
in
std
cs
mov
and
mov
mov
ljmp
inc
push
and
mov
mov
jb
cmp
loope
aas
pop
mov
rcr
movups
cmp
in
pop
add
and
push
rol
jbe
pop
mov
addr16
ss
bound
cmp
mov
fcomi
mov
jl
mov
inc
add
xor
in
adc
test
cmp
cmpsl
and
adc
js
jae
xor
sahf
jmp
dec
int
iret
ror
mov
ljmp
and
lret
adc
xor
adc
lock
ss
je
roll
inc
pop
out
out
popf
std
fstpt
push
push
and
xchg
mov
xchg
mov
movsl
aam
ret
inc
adc
outsl
movsb
dec
bound
in
fsubl
push
outsb
movsb
xor
push
mov
out
shlb
cmpsl
out
sahf
inc
fsubl
jp
ja
lret
pusha
push
mov
jle
jg
lock
int
push
sub
jbe
clc
mov
and
add
leave
divl
xlat
pop
fdivs
mov
add
fisttpl
mov
pop
jne
negl
loope
shl
pop
sbb
mov
decb
mov
mov
sub
aad
notb
xchg
dec
xchg
and
in
push
jmp
jne
les
jae
cmp
cmpsl
mov
in
test
adc
jle
ds
push
push
xchg
and
into
mov
jne
sbb
iret
icebp
push
test
mov
sbb
push
sub
adc
andps
and
stos
or
js
hlt
movsb
or
ljmp
inc
ljmp
repz
cmpsl
or
or
mov
push
mov
subl
push
jg
test
mov
push
xchg
inc
mov
xchg
mov
adc
mov
mov
cmp
push
ss
mov
mov
dec
sbb
ds
mov
push
aam
dec
sbb
push
enter
rcrb
inc
pushf
cmc
push
ret
mov
mov
push
lea
addr16
xchg
shll
mov
imul
pushf
aam
xor
loop
lret
push
insl
push
jne
scas
fstpt
dec
outsb
jno
clc
dec
ror
aam
in
jle
arpl
inc
icebp
mov
or
pop
lock
popa
gs
pop
aas
imul
xchg
mov
and
xchg
sbb
popf
pushf
sahf
lods
cwtl
lock
mov
out
insl
lds
sbb
dec
mov
shll
xor
and
sbbl
insl
imul
fcmovu
cltd
mov
mov
stos
lret
popf
pushf
sbb
dec
xlat
sub
push
sub
mov
les
mov
lcall
jo
ficompl
adc
jbe
lret
loopne
jp
push
out
int
pop
dec
mov
aas
adc
or
inc
fs
xor
cli
pop
xor
xchg
jle
pop
mov
jmp
jne
lea
scas
and
out
pop
dec
mov
es
mov
pop
outsb
les
xchg
xor
fnstcw
mov
push
dec
shl
push
jnp
out
cli
out
pop
jge
call
xor
int3
cwtl
cmpsb
outsb
int
and
subl
xor
mov
movsb
cltd
xchg
mov
mov
add
psadbw
sbb
icebp
xor
xor
lcall
arpl
xchg
dec
out
jmp
arpl
frstor
clc
add
out
adc
mov
mov
add
mov
mov
xchg
mov
add
je
fldenv
int3
fmull
dec
pop
sub
jp
lods
nopl
in
in
popf
xchg
add
push
push
xchg
scas
roll
inc
adc
ret
test
jo
enter
pop
scas
mov
repnz
call
jb
dec
ss
mov
mov
loopne
dec
jo
mov
mov
sbb
xor
and
pop
mov
cmp
mov
pop
loopne
mov
cmp
or
sbb
pop
jmp
mov
insl
sub
mov
add
test
mov
mov
or
mov
pop
dec
push
scas
cmp
repz
mov
fildll
adc
push
insb
movsl
js
inc
repnz
loopne
jbe
cli
ret
out
cs
cltd
mov
adc
xlat
mov
sarl
xchg
pop
sub
es
shl
stos
push
cmpsb
and
pop
xor
nop
push
lods
mov
aad
jno
in
cmpsl
mov
xchg
clc
jg
dec
int3
cmpsb
cmp
fadds
cs
fcmovb
cs
mov
push
jno
pop
cmp
adc
push
adc
pop
sbbb
repz
dec
dec
adc
push
imul
pusha
lods
push
iret
insb
xor
sub
add
sbb
cmpsl
ficompl
inc
sub
call
push
sub
mov
xchg
pop
mov
add
ds
sbb
adc
in
adc
or
lahf
sahf
daa
lods
repz
outsb
call
cmp
int3
movsb
dec
pop
cltd
incb
mov
gs
push
and
ljmp
xor
sbb
ss
mov
push
jbe
jmp
das
pop
pop
dec
xor
sub
sub
ffreep
xchg
inc
inc
sub
out
clc
int
adc
cwtl
mov
push
pop
add
lea
aad
cmpsl
cltd
or
outsl
adc
dec
es
jo
in
cltd
jb
and
popa
mov
jno
cmp
or
add
loopne
xchg
or
add
scas
lret
test
pushf
test
mov
insl
cmp
and
repz
mov
in
jl
repz
adc
xor
lcall
lods
mov
loopne
stos
cltd
jp
jle
sbb
mov
vfrczss
inc
dec
popf
leave
dec
mov
ret
mov
xor
dec
scas
pop
pop
lds
je
adc
push
and
push
cmc
orb
pop
jl
pop
mov
stos
dec
mov
add
addr16
aad
xor
faddl
xlat
mov
xor
gs
mov
fwait
push
movsb
sbb
mov
jnp
fdivrs
fisttpl
jmp
decl
cltd
stos
dec
mov
adc
dec
repz
xchg
xchg
mov
push
enter
mov
mov
jo
out
test
int3
and
and
rcpps
ja
in
subb
mov
pop
mov
arpl
leave
cmp
xor
mov
cwtl
xor
fsts
mov
mov
sbb
adc
std
push
sub
inc
sub
call
dec
sub
mov
out
cmp
fbstp
pop
xchg
test
mov
push
mov
dec
flds
stos
mov
dec
ss
or
push
dec
lods
mov
mov
push
js
cli
fsubrs
mov
adc
add
fadds
fnsave
push
flds
test
mov
mov
movsb
movsl
add
jecxz
insb
sbb
loopne
mov
stos
test
add
add
sub
cmp
push
push
xlat
adc
push
push
adc
sub
out
fidivrs
inc
xlat
outsl
sbb
xlat
and
pop
or
mov
pop
or
icebp
sti
je
cmc
sub
in
or
xchg
mov
add
sub
fs
adc
iret
xor
mov
leave
divb
scas
stos
popf
jnp
mov
js
mov
pop
pop
mov
inc
sub
enter
mov
jl
push
or
push
je
push
add
jnp
dec
inc
mov
aaa
out
sysexit
xchg
xchg
mov
nop
lock
sti
and
mov
mov
cmp
lret
lock
sbb
inc
adc
cmpsl
lods
ja
dec
jns
insl
lret
lods
fcompl
add
mov
sbb
outsb
xchg
xor
in
repnz
push
mov
jbe
fcompl
pop
in
dec
adcb
and
jno
outsl
fisubrs
stc
daa
sarl
mov
bound
add
xor
push
mov
mov
pop
repz
sub
movsb
stc
ret
outsb
imul
test
cmp
sbb
mov
inc
xor
adc
xor
lret
ljmp
mov
push
aad
push
fdivl
call
aas
in
xor
push
xor
inc
in
sbb
mov
mov
inc
lods
sbb
icebp
loop
imull
or
sarb
outsl
std
daa
mov
lret
cmpsb
das
fs
xchg
faddl
and
ds
sub
adc
inc
jno
push
repz
mov
lahf
ret
out
cmp
mov
or
or
sbb
movsl
mov
cs
or
ja
dec
es
jbe
and
jle
inc
inc
jmp
jmp
or
in
jnp
adc
and
pop
add
push
dec
std
hlt
push
stos
xchg
jge
pusha
and
xor
push
xor
adc
push
cmp
jecxz
test
into
mov
mov
dec
mov
adc
aam
push
pop
xor
sti
insb
push
mov
fdivr
inc
xor
mov
aas
sbb
pusha
sahf
je
lret
sahf
add
sahf
sub
stos
daa
jnp
mov
jno
mov
add
ret
mov
cmp
fisttpll
fs
xchg
push
mov
xchg
jl
mov
shlb
mov
jbe
mov
cmpb
push
mov
movl
aad
sub
arpl
adc
pop
xor
frstor
add
insb
js
or
xchg
mov
dec
jg
jl
xlat
mov
pcmpeqd
push
push
inc
or
add
jbe
lods
push
push
jno
neg
shrl
pop
cli
ret
test
inc
ljmp
packsswb
in
or
mov
jbe
xor
jg
jmp
inc
fmull
jne
sbb
ret
mov
gs
adc
adc
les
popa
push
mov
pop
sti
sub
lahf
test
clc
clc
in
pop
add
push
cli
xor
outsl
inc
cmp
jnp
jnp
jecxz
or
jo
pop
orl
aaa
pop
or
scas
sbbl
out
in
or
shrb
test
imul
mov
xchg
pop
xchg
lods
and
nop
f2xm1
sub
mov
mov
movsb
sub
iret
xchg
test
dec
sub
data16
stos
into
inc
ret
inc
jo
or
pop
cmp
lock
jle
mov
mov
jb
or
fistl
xor
mov
arpl
adc
les
fldl
mov
xor
push
popf
je
outsl
lret
sbb
push
cmc
jle
das
lret
in
cmpsb
bndstx
add
clc
repnz
jb
cmp
shrb
lods
or
jne
mov
mov
test
fisubrl
or
push
pushf
xchg
pop
sbb
or
ja
rcr
xor
adcl
mov
lock
mov
rolb
in
enter
and
fisttps
repz
sbb
aad
js
jbe
adc
out
cmc
into
sub
hlt
out
pop
in
mov
bound
pop
mov
inc
mov
and
or
xchg
es
in
inc
add
adc
mov
mov
mov
sub
cmp
or
insl
mov
xor
in
inc
lcall
jns
lret
sub
mov
mov
das
inc
add
testb
test
mov
mov
xorb
int3
cmovg
xlat
inc
lods
xchg
in
xchg
aaa
fldenv
in
out
xchg
cli
sti
pop
pushf
mov
sub
outsb
lock
add
add
sbb
dec
jecxz
aas
xchg
testb
dec
jle
sub
imul
sti
fs
test
popf
jb
xchg
mov
mov
movsb
jecxz
mov
pop
cmc
inc
add
mov
lcall
fnstsw
neg
jbe
leave
mov
aaa
xchg
sti
lds
imul
cmp
mov
push
sub
stos
add
mov
ss
sahf
push
inc
enter
and
cmp
sub
les
jo
out
popa
or
nop
outsb
inc
shrl
xor
lods
jb
sbb
test
pop
sub
jno
sbb
or
push
repnz
push
iret
test
fldcw
mov
mov
jge
sbb
mov
test
lock
and
test
into
cmp
and
aaa
mov
mov
sub
inc
sbb
test
in
dec
sbb
mov
inc
inc
stc
test
out
xchg
mov
enter
fcoms
push
gs
loopne
mov
in
cld
sub
jecxz
jmp
and
xchg
jge
xchg
jnp
xor
lret
out
bound
inc
imul
xchg
lds
jo
movsl
sbb
loop
filds
repz
mov
and
les
adc
pop
xchg
mov
scas
cmp
and
ljmp
into
push
mov
ret
andb
movsb
sub
stc
adc
mov
es
and
mov
stos
cmp
jne
gs
popa
loope
outsl
jle
mov
pmuludq
jge
or
inc
pop
adc
fistl
ss
mov
and
dec
adc
loopne
and
mov
divl
xor
or
cmp
sub
mov
inc
aad
fnstcw
pusha
hlt
imul
push
enter
sub
mov
mov
int
lret
aam
adc
xor
shlb
add
and
repnz
in
loope
jge
or
rclb
mov
jns
in
adc
shld
and
mov
mov
rcl
fbld
xchg
xor
cmp
pop
mov
pop
sub
push
in
jmp
pop
jmp
cli
aaa
mov
scas
bound
push
lcall
push
or
inc
pop
push
sti
pop
or
xchg
jbe
int
dec
out
std
add
xor
cmp
inc
push
loope
lcall
pushf
loope
popa
or
pop
daa
and
lcall
cmpsb
cmp
mov
mov
pavgw
adc
mov
mov
adc
xchg
ja
xchg
cltd
dec
aas
test
movsl
mov
popa
cmp
insl
xor
fs
aas
stos
scas
sub
faddl
rol
push
mov
xchg
xchg
pop
mov
and
pushf
ror
stos
cmpsl
cmp
dec
arpl
pushl
bnd
insl
arpl
out
popa
arpl
push
push
mov
cli
jns
or
leave
daa
push
jno
mov
mov
jo
dec
sub
and
mov
shlb
jge
pop
stos
xor
mov
push
add
xchg
mov
fwait
rcrb
cli
out
test
add
lock
insl
dec
cmp
sub
mov
cwtl
out
aad
stos
shlb
mov
dec
pusha
mov
and
in
dec
enter
xchg
aas
lods
lret
adc
push
push
push
cmc
or
imul
mov
add
out
dec
pop
loopne
insl
lods
sbb
repnz
testb
and
sub
out
cmc
inc
jp
jle
bound
inc
lds
mov
cmp
int3
sti
push
or
add
sub
xor
loope
aas
xchg
push
pop
int
xor
in
scas
xchg
cli
sarl
addb
fwait
push
ret
sbb
mov
out
push
test
je
inc
jge
or
ficomps
scas
dec
cld
stos
xor
jge
inc
mov
into
jne
mov
nop
pushf
jp
ss
andl
fsqrt
int
scas
icebp
sub
daa
add
leave
lods
and
sti
lds
jno
and
ljmp
js
in
sub
lods
loop
push
sahf
out
push
sub
shrl
lock
adc
xchg
or
mov
push
in
in
mov
mov
mov
mov
inc
pusha
lods
shlb
sbb
or
lret
fiadds
out
jnp
movsb
cli
mov
je
andl
xchg
es
inc
jmp
fldl
jg
xchg
imul
mov
pop
cvtps2pi
aam
inc
out
icebp
rol
stos
repz
enter
jmp
mov
cwtl
psrld
xor
pop
and
aas
mov
dec
adc
inc
xor
test
lea
popa
and
add
data16
add
adc
mov
aam
add
and
cmc
sub
out
add
add
test
mov
fsubr
fidivs
xor
xchg
pop
fmul
adc
jae
test
xor
mov
sbb
and
scas
add
sub
fbstp
and
mov
ficoml
sub
cmpsb
mov
xchg
jmp
xchg
rcrb
lret
pop
dec
xchg
outsb
add
popf
pop
loop
dec
in
repnz
scas
leave
in
cmpsl
in
shrb
xlat
sub
mov
dec
mov
xor
inc
sub
rorb
push
mov
das
hlt
popf
repz
push
mov
int
fwait
xor
adc
lods
mov
sub
fidivs
inc
xchg
mov
lahf
mov
fdivl
sti
push
add
cmp
sub
ja
add
or
and
mov
out
sub
jb
and
mov
add
jo
mov
and
add
inc
fprem1
xor
add
int3
mov
jae
cltd
cmp
cmc
mov
ss
leave
jmp
pop
adc
scas
mov
enter
jbe
movsb
in
push
pop
jle
lcall
fstps
add
add
das
jmp
jb
leave
stc
mov
adc
pop
mov
out
vmovq
jo
mov
push
aas
out
pop
inc
pop
test
xor
pop
jg
add
cmp
ljmp
stc
lret
sbb
es
or
mov
and
stc
mov
sub
fidivrs
subb
sbb
cmp
inc
mov
push
dec
or
or
dec
and
xor
inc
push
jo
mov
and
gs
testl
push
cmp
dec
jecxz
push
pop
xchg
aad
ja
shrb
dec
mov
sahf
or
sbb
add
movsl
sub
mov
sub
cmp
xor
cmp
pop
push
lods
mov
cmpsl
xor
push
and
mov
xchg
add
iret
dec
call
xchg
adc
and
or
testb
xor
pop
fwait
pop
add
pop
xchg
push
je
jae,pt
gs
mov
mov
jp
imul
lea
repnz
out
jecxz
cli
push
sahf
sbb
outsb
adc
mov
movsl
pop
jecxz
push
je
loop
mov
adc
jecxz
xor
and
pop
jmp
mov
movsl
add
pop
clc
add
cmpsb
xor
adc
xchg
mov
dec
call
lahf
gs
repnz
sbb
mov
xchg
icebp
cmp
dec
test
dec
pop
mov
pop
rclb
adc
and
loope
xor
sbb
or
adc
int3
rorb
or
add
mov
fwait
mov
pop
push
stos
jle
xchg
test
sub
xchg
and
mov
lcall
je
push
push
scas
je
xlat
jnp
inc
call
dec
jg
rcrb
mov
push
push
imul
sbb
fsub
loope
test
sub
ds
and
cmp
inc
adc
mov
mov
stos
and
into
mov
popl
mov
jp
into
scas
inc
dec
or
adc
mov
jg
pop
outsb
clc
mov
das
jl
aaa
sub
ja
dec
or
and
in
sub
ljmp
mov
xchg
subb
dec
jp
out
push
leave
jb
ja
filds
roll
or
out
cld
shl
jno
adc
test
pop
aam
enter
subb
xor
subl
push
and
mov
and
clc
adc
pop
sub
add
arpl
fisttps
test
ds
ds
mov
push
mov
sbb
scas
sub
sarl
push
inc
xchg
shrb
mov
ret
aad
into
or
jecxz
sbb
sahf
pop
sub
sub
jecxz
push
arpl
dec
mov
sbb
cltd
cmp
sbb
fwait
mov
lods
inc
call
inc
sbb
jmp
jmp
cmpsb
loope
xchg
cmp
push
push
mov
sbb
movups
inc
call
jecxz
stos
xchg
cmpsb
in
fiaddl
ljmp
mov
xlat
ja
pop
inc
out
pop
aaa
movsb
inc
arpl
xor
mov
xor
jns
add
and
xor
outsb
jle
cs
lods
push
jge
aas
pop
mov
xchg
mov
add
lret
in
test
lcall
pop
cmpsb
int
lret
test
sbb
ss
ret
xchg
inc
iret
das
ja
loope
daa
jno
sbb
pushf
shrl
vmovapd
xchg
mov
push
or
add
sbb
insb
jl
pop
dec
dec
scas
dec
jae
imul
mov
cltd
sti
inc
fdivrs
sbb
aad
and
push
cmc
pop
test
stos
mov
and
in
xchg
flds
xchg
iret
ret
gs
and
mov
out
jb
scas
in
adc
pop
mov
dec
mov
sbbb
mov
jge
xor
sahf
push
xor
xchg
pop
fwait
inc
loope
int
dec
lahf
push
and
xchg
sbb
sub
daa
adc
test
and
test
pop
xor
pop
dec
inc
jbe
xor
xor
sbb
push
lock
loope
xor
pop
add
bound
xchg
dec
data16
lods
movsl
xchg
imul
lret
aad
mov
in
adc
js
pop
pop
push
mov
or
imul
and
lods
jmp
or
pop
shrb
mov
or
faddl
pop
xor
adc
add
lret
dec
inc
xchg
sar
xor
xor
negl
clc
mov
jmp
mov
insl
push
mov
pop
xchg
inc
movsl
xchg
mov
out
push
add
sub
cmp
add
sbb
or
push
sbb
dec
mov
dec
fwait
stos
les
xchg
ret
cmc
mov
les
cmp
cmc
int
iret
mov
hlt
insl
ret
mov
push
repnz
fcmovu
jno
pop
mov
mov
fisubs
lcall
pushf
divb
mov
pop
mov
int
dec
push
popa
mov
mov
lcall
orb
push
fcomps
dec
add
adc
xchg
mov
inc
das
sub
enter
pop
xchg
inc
mov
jmp
cltd
push
das
aad
or
ret
or
jl
std
dec
sbb
inc
add
orl
push
clc
xchg
and
movsb
sbb
into
sub
sub
sbb
push
arpl
xlat
les
jle
lcall
lock
xor
pop
dec
xor
push
cmpb
cltd
add
pcmpgtd
loope
xor
add
push
push
inc
adc
leave
sbb
sub
leave
sub
ffree
inc
in
sbb
sub
je
movsb
inc
hlt
push
mov
fldenv
mov
gs
sub
xchg
lea
test
cld
pop
and
gs
je
or
mov
loopne
dec
in
add
bound
out
notl
add
dec
xor
xor
sub
cmpsb
mov
add
mov
adc
scas
cmpsb
jno
xlat
scas
mov
and
adc
out
sbb
enter
insb
mov
cmp
pop
loop
pop
mov
jle
mov
sbb
or
addb
cli
fld
adcb
mov
in
mov
push
pop
scas
sub
imul
dec
shll
cmpsl
push
push
pop
mov
shll
jle
popa
gs
mov
movsb
pop
les
xchg
icebp
fs
pop
xchg
push
jmp
push
sub
lock
or
daa
outsb
inc
fimull
mov
test
stos
inc
xchg
sub
es
mov
inc
lods
pop
xchg
mov
xchg
popa
fstl
sub
sbb
mov
cs
out
ljmp
popf
je
jae
aam
jnp
fiadds
cmp
stos
push
inc
negb
dec
scas
call
jl
fnstcw
in
pop
xchg
mov
pusha
jmp
mov
in
inc
ret
adc
or
inc
pop
pop
pop
ja
repnz
cld
mov
shl
popf
mov
flds
je
or
fdivrs
sahf
ror
pop
pop
adc
mov
add
xchg
adc
xor
xchg
adc
fmull
sbb
lods
mov
jle
push
jno
lods
fidivrs
pop
loope
movsl
pop
jbe
rolb
or
aas
xor
inc
cmp
fwait
shl
rcrl
pop
cmc
hlt
scas
jo
push
in
and
mov
lret
inc
mov
inc
rcll
cmc
test
lods
sti
xchg
jnp
fisttps
push
mov
jmp
jno
pop
movsl
mov
nop
jecxz
mov
xchg
mov
cmp
or
je
or
inc
inc
jno
dec
add
xchg
push
loope
roll
test
lods
adc
rorb
xor
dec
sti
jbe
insb
mov
aas
mov
nop
mov
push
bound
mov
inc
stc
cmp
or
sbb
push
jmp
dec
adc
lods
pusha
sub
ret
adc
aaa
icebp
outsl
negb
or
repnz
xlat
mov
outsl
imul
bound
jmp
pop
push
in
hlt
out
pop
jnp
xchg
js
sub
push
and
cld
push
ss
in
inc
dec
gs
jle
jae
inc
dec
sbb
pop
lds
lret
enter
out
hlt
in
jle
sbb
iret
stc
adc
dec
jmp
jge
rcr
imul
cmpsl
xor
rclb
jne
sub
mov
xchg
sbb
lcall
mov
movsb
inc
test
ss
ret
enter
fsts
inc
stos
inc
dec
int3
inc
out
sarl
inc
out
and
inc
jb
push
addr16
lret
xor
sbbb
pop
jbe
aaa
inc
js,pn
sub
ja
and
stc
shl
jo
nop
pop
ss
clc
push
and
mov
adc
rorl
fadds
dec
inc
and
sub
imul
sub
xchg
jge
xor
scas
xchg
pop
fldl
icebp
add
rclb
mov
in
push
cmp
les
mov
pop
sbb
ljmp
in
clc
xchg
sub
xor
fs
mov
cmp
and
imul
ljmp
insl
sti
push
mov
movl
inc
jno
lea
repnz
xor
cmp
inc
aam
mov
or
push
sub
mov
mov
rorb
xlat
shlb
movsl
pop
int3
aas
pop
test
inc
sbb
push
push
aad
test
out
pop
mov
leave
sub
adc
mov
int
cltd
lods
int
jns
and
out
dec
inc
leave
movsb
push
cmc
xor
data16
fmull
jns
mov
inc
subl
outsb
ljmp
fst
sub
adc
pop
cmp
out
addr16
mov
and
push
mov
sbb
shll
subb
or
sub
call
cmpsb
mov
mov
aad
sub
dec
dec
xor
loop
decl
push
loopne
rorl
test
or
dec
and
in
inc
fcmovnu
jbe
sbb
mov
inc
addl
and
and
cmp
ljmp
mov
outsl
repnz
xchg
insb
cli
inc
and
adc
push
add
add
push
xchg
scas
std
pop
push
and
adc
xor
es
outsl
or
fcompl
test
in
pushf
cmc
icebp
mov
movsl
mov
arpl
jg
add
mov
inc
icebp
or
jmp
stos
addr16
sahf
out
pop
xlat
mov
push
test
fimull
cs
add
es
mov
push
jbe
enter
push
rcl
jno
cmp
cmc
mov
cltd
xor
dec
fcos
sub
jl
mov
add
ss
mov
jb
pop
jae
cltd
xor
stos
addr16
pop
out
xchg
or
add
repz
in
mov
pop
lock
and
xchg
andb
add
cmp
jbe
mov
fbstp
dec
mov
adc
lock
bound
xchg
loopne
xor
and
aas
cltd
and
add
xchg
decl
sbb
adc
mov
fimuls
push
lcall
mov
popa
mov
in
add
sahf
and
inc
scas
sbb
push
jo
cmc
mov
in
mov
aaa
xor
dec
dec
mov
leave
out
jb
xchg
add
or
jbe
movsb
pop
imul
mov
and
and
cmp
daa
and
mov
inc
add
push
stc
arpl
ds
shrl
mov
lcall
push
stos
jb
addr16
add
iret
sub
bound
clc
in
aam
dec
insl
les
jl
out
leave
mov
jg
rclb
in
or
sbbb
inc
pop
daa
add
arpl
aas
pop
mov
pushf
and
mov
leave
jg
mov
cld
shll
cmc
mov
push
loope
jmp
fildl
mov
sub
repz
pop
jb
push
stc
or
popw
flds
rorb
lods
lahf
fst
icebp
test
push
lahf
popa
cmp
pop
stos
or
mov
xor
jae
addl
ja
icebp
ljmp
mov
sarl
or
imul
xchg
loopne
daa
push
xor
adc
sub
gs
idiv
cmp
inc
adc
push
pushf
fdivl
repz
out
sbb
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
or
cmpsl
jl
std
addb
jecxz
mov
daa
pop
in
imul
pop
or
xchg
push
stos
nop
cli
sub
fcomp
das
test
xor
push
hlt
cmp
or
decb
pop
inc
stc
int
cwtl
sti
repz
sub
adc
adc
fldl
cmp
cmp
gs
inc
outsl
xor
je
ret
push
lret
lea
and
stos
dec
rcrl
ret
or
add
sbb
push
mov
or
xor
mov
cs
push
aaa
dec
clc
mov
call
aas
out
sub
icebp
xchg
dec
sbb
dec
mov
stc
cwtl
xor
pop
mov
dec
lret
add
mov
jne
xor
pushf
ljmp
lcall
cld
jae
jg
aaa
jp
int
and
jne
pushf
mov
mov
out
or
pop
pop
test
mov
cltd
jno
mov
sub
add
or
push
std
cmp
repz
in
cmp
jg
call
mov
sarb
pushf
mov
imul
mov
ret
mov
xchg
dec
cs
int3
outsb
jecxz
lock
push
dec
and
push
mov
int
ds
stos
inc
push
stos
push
push
inc
or
mov
pop
push
mov
adc
or
in
hlt
or
outsl
jg
push
mov
shl
popf
cmp
inc
and
xchg
or
dec
xchg
ret
and
into
hlt
loope
and
inc
push
push
outsl
xchg
insb
test
lret
dec
mov
sub
pop
inc
repz
shr
dec
mov
fmull
loop
inc
out
dec
xchg
fmull
push
mov
cmp
pop
sub
mov
cmpsl
xchg
xchg
inc
sbb
sub
stos
clc
or
leave
pop
aad
push
jl
fidivs
adc
sahf
xchg
call
sbb
mov
mov
mov
cli
dec
or
adcb
sub
xchg
adc
fistl
dec
mov
orl
adc
adc
jl
dec
incl
xchg
mov
xor
fisubl
sbb
adc
inc
das
xchg
mov
rcrl
jae
sub
or
dec
cli
loope
dec
push
fdivr
out
mov
xchg
into
jae
jo
and
outsl
out
insl
cmpb
les
addr16
push
scas
or
jns
jge
cmp
cld
das
mov
xor
cmp
das
sub
fisttps
sub
sub
iret
aad
sub
mov
in
add
cmp
push
mov
inc
dec
sbb
mulb
shrb
add
rorb
das
mov
and
in
adc
fildl
divl
inc
xchg
cmp
push
int
pop
cltd
aaa
sarl
stos
jnp
lret
int3
ja
sbb
push
movsl
xchg
push
rorl
dec
cmpsb
push
sub
cli
stos
shlb
loopne
repz
cmp
pop
jns
into
lret
mov
ret
nop
ret
out
pop
push
clc
cmc
xchg
push
out
mov
mov
add
imul
lret
dec
icebp
insl
xchg
test
sub
jo
mov
and
and
pop
ret
mov
dec
andl
popa
xchg
je
push
and
mov
jns
movlps
mov
addr16
fildll
fmul
lret
rorl
dec
mov
and
out
xchg
mov
sarl
xorl
push
mov
stos
push
xor
das
fwait
inc
stc
notl
mov
ljmp
icebp
dec
stc
cs
loop
inc
adc
pop
dec
out
popa
dec
jne
repnz
jmp
cmpsl
sbb
inc
mov
dec
jg
mov
outsl
or
inc
insb
dec
test
fnstenv
ja
jbe
mov
and
test
loopne
les
popa
into
lret
gs
gs
fldt
jg
mov
stos
ja
push
inc
xchg
mov
add
repnz
int
pop
inc
mov
add
inc
inc
xor
jmp
adc
sub
mov
adc
sbb
pop
xor
jmp
test
test
icebp
gs
mov
adc
mov
jl
insl
add
jbe
jge
movsl
mov
xor
mov
xchg
hlt
mov
outsl
push
pop
hlt
jmp
jmp
sub
sbb
inc
inc
popa
and
xchg
mov
adc
mov
andb
or
cs
loopne
into
outsb
cmp
push
dec
imul
addb
or
lods
cmp
cwtl
cmpsb
fildll
cmp
mov
cmp
movsl
jecxz
nop
and
and
jge
xor
movsl
cmp
test
jle
push
fcomps
fldt
fcomps
mov
js
push
test
cwtl
or
mov
out
repz
jae
fst
lcall
cmpsb
mov
adc
lods
aam
jns
outsb
push
inc
cmp
xor
pop
les
cli
jno
mov
insb
push
dec
pop
insb
and
mov
add
push
jmp
lods
cmpsb
es
nop
mov
nop
stc
inc
mov
inc
lods
movsb
mov
outsl
mov
sbb
add
add
icebp
stos
sahf
sti
jo
push
cmp
push
insb
adc
add
sbb
stos
and
inc
mov
jecxz
mov
xchg
xchg
orb
lods
je
push
sbb
aaa
int3
lret
mov
xor
xor
aad
out
outsb
daa
mov
in
adc
cmp
test
pop
std
in
and
adc
jp
fdivl
dec
leave
stos
mov
movsb
fisubl
sti
mov
mov
test
sub
inc
int3
dec
movsbl
popf
inc
dec
pop
cmp
cmpl
sbb
xchg
fcoms
xor
sbb
inc
and
ljmp
xchg
pusha
cmc
mov
repz
push
ljmp
cmp
mov
lock
stos
jbe
in
lds
int
aad
dec
mov
fsubr
pop
mov
out
stos
cwtl
icebp
cmpsl
push
ficomps
cmpsb
mov
dec
mov
cmc
xchg
pop
je
loopne
xchg
xchg
in
add
and
adc
scas
jmp
mov
inc
int3
testl
ljmp
xchg
pop
jbe
push
sub
cmpsl
cs
out
add
mov
sbb
paddsb
fistl
or
sub
nop
or
mov
push
add
scas
clc
add
andl
fiaddl
xchg
and
dec
xchg
adc
ja
js
inc
jns
jmp
rcl
repnz
push
and
pop
mov
out
imul
outsb
subl
nop
jb
popf
scas
aaa
adc
pusha
mov
daa
addr16
ja
xor
pushl
inc
out
mov
mov
insb
cmp
add
dec
pop
mov
push
pop
cmp
xchg
push
jecxz
mov
xorl
xor
out
cwtl
out
cmp
je
adc
lods
bound
enter
lret
enter
push
jne
outsb
adc
fnsave
popa
push
outsl
maskmovq
notl
jb
into
jbe
aam
xchg
call
int3
pop
insl
gs
sbb
les
shrl
in
mov
fsubs
inc
sbb
sub
fwait
clc
loop
dec
adc
test
sub
mov
mov
rclb
pop
es
xchg
xor
sbb
jecxz
xor
dec
jmp
loope
xor
fwait
imul
imul
hlt
mov
mov
xchg
cltd
jl
or
jne
jmp
lds
pop
movsb
pop
push
mov
inc
ljmp
inc
in
fcmovnu
xor
jg
into
mov
rorl
xchg
mov
insl
and
inc
shrl
push
jnp
fnsave
lods
repnz
xchg
lret
cmp
rorb
jl
dec
or
lcall
and
imul
std
adc
std
stc
xchg
xchg
in
shlb
divl
push
std
in
das
push
mov
cmp
sbbl
fwait
pop
xchg
xchg
int
bound
jne,pn
es
pop
and
xchg
pop
fcoml
jno
cmpsb
faddl
pop
adc
sbb
call
push
adc
xchg
inc
push
xor
inc
aaa
mov
jns
cs
cmp
xchg
jbe
andb
push
lods
lods
add
test
adc
lret
inc
sbb
or
jg
mov
daa
out
in
mov
nop
cmp
xor
mov
std
out
inc
mov
sub
enter
mov
cmpsl
cmp
jge
mov
hlt
inc
xlat
stos
push
lds
lcall
push
test
lods
mov
xor
adc
sbbb
mov
cmp
std
mov
pop
xchg
inc
mov
fisubrs
loop
ret
jo
or
push
punpckhdq
add
iret
hlt
xor
sbb
repnz
arpl
push
lahf
lods
movntq
out
out
dec
mov
or
negl
pop
and
fmul
das
xor
jbe
inc
js
cmpsb
mov
and
incl
lahf
cmp
aaa
mov
xchg
inc
mov
push
jae
jge
leave
dec
xlat
jg
inc
dec
add
and
fmull
mov
push
xor
mov
adc
int3
insl
jb
outsb
psubsw
loop
jne
or
test
push
shl
inc
xchg
ljmp
inc
xchg
call
inc
add
dec
cmpsb
add
sub
dec
fsubrs
add
js
push
jg
mov
inc
lock
or
pop
sub
and
dec
mov
pop
or
imul
jae
mov
lret
xchg
add
scas
xor
lahf
fbld
out
jmp
lea
jp
pusha
jae
loopne
dec
aas
mov
mov
dec
jno
xchg
decl
jl
adc
sub
int3
pop
ds
lret
lret
cmp
bnd
ljmp
pop
test
sahf
shrl
pop
pop
ds
mov
push
dec
and
sahf
xchg
mov
sub
xchg
in
dec
ret
adc
jmp
and
mov
testb
js
mov
cmp
out
stc
sahf
in
lock
pop
inc
adc
sub
scas
hlt
sbb
jmp
add
ss
fwait
daa
dec
imul
movb
lret
pop
rcl
xchg
js
loop
mov
test
ret
jbe
push
or
pop
scas
fidivrs
adc
mov
outsl
sbb
mov
dec
pop
inc
or
mov
loop
xor
rclb
xlat
shlb
sub
mov
sbb
ror
sahf
imul
andl
jb
mov
std
ljmp
dec
mov
dec
push
les
mov
test
mov
dec
pop
pop
jmp
mov
call
pop
pop
dec
stos
xchg
insl
insb
aam
dec
popa
scas
inc
movsl
sub
int
in
mov
aaa
inc
pop
dec
cwtl
sahf
sbb
jle
push
xchg
outsl
sub
mov
ret
lcall
mov
addr16
call
outsl
mov
fdivs
jl
mov
add
pop
mov
or
pusha
pop
and
cmp
jle
dec
cmc
data16
xchg
sti
popa
pop
mov
add
sub
xchg
out
sub
mov
xchg
xchg
or
push
sub
scas
mov
sub
xchg
or
xchg
pop
cli
jmp
xchg
ret
cmpsb
ja
mov
pop
push
push
xor
int
clc
scas
arpl
in
mov
fsubl
sub
stos
pop
stc
jp
les
fistpl
jecxz
mov
xchg
enter
lret
add
mov
les
lods
cld
std
dec
dec
dec
into
xchg
lock
shrl
popf
pop
ljmp
stos
mov
andb
cld
scas
lea
add
sub
ret
lcall
dec
enter
movsb
dec
fnstsw
jnp
sahf
fwait
xchg
inc
lahf
je
lret
adc
js
sub
incb
ret
dec
sbb
movsl
inc
mov
clc
dec
or
jae
divl
cmpsb
aad
ret
loop
fdivp
lds
loop
mov
add
xor
rclb
int
ret
push
incl
cwtl
fldcw
dec
mov
int3
pop
mov
push
push
inc
jg
push
ljmp
pop
lcall
out
je
push
dec
adc
daa
xchg
imul
out
leave
arpl
cli
lret
orb
pop
push
rorl
adc
mov
push
mov
lods
and
popf
outsl
nop
push
pop
fidivrs
imul
insb
add
ror
stos
adc
jle
dec
cwtl
insl
inc
imul
pusha
push
or
sbb
cmp
mov
loope
out
ljmp
inc
in
lods
adc
mov
fstpt
push
cmc
mov
jnp
pop
dec
pusha
enter
dec
leave
inc
inc
fisubrs
leave
xor
lock
outsl
insl
adc
test
mov
push
mov
xor
fwait
inc
imul
jae
in
sbbb
mov
popf
test
cmp
or
jb
xor
pushf
iret
pop
je
ret
mov
jae
sub
test
sbb
mov
lea
lods
mov
push
or
mov
les
xor
pop
or
or
push
ja,pn
jbe
out
lds
fsts
jmp
mov
jbe
mov
cmp
dec
je
mov
shlb
ret
mov
rorb
lods
pop
push
stc
mov
or
xor
adc
outsb
clc
jae
jno
push
dec
and
xlat
xor
xchg
fisubl
insb
popf
cmp
or
fcomps
mov
jl
add
rcll
testl
xchg
pop
stc
adcb
jmp
xor
nop
xchg
cmpsb
sub
mov
ret
scas
jecxz
fistl
fildll
jns
out
xor
lret
or
fcoms
stos
inc
negb
loop,pt
jo
push
es
data16
call
lcall
lcall
mov
inc
mov
addr16
ljmp
cmp
ja
pop
or
push
loopne,pn
sbb
shll
xchg
dec
cwtl
movsb
jmp
push
pop
cmpl
out
or
cmp
out
sti
enter
push
in
stos
lcall
loop
cmp
cmp
jb
sbb
hlt
and
mov
and
xor
xor
add
dec
aad
mov
push
rorb
jecxz
xor
pop
mulb
notl
sub
test
inc
sbb
imul
inc
cmpb
insb
jns
sbb
jmp
bswap
repz
outsb
jmp
xchg
lods
inc
fs
sbb
pop
mov
testb
in
cmpl
inc
addr16
adc
inc
mov
neg
or
push
not
gs
icebp
jbe
and
pop
rorb
sarl
inc
inc
enter
js
pop
out
pop
xchg
pop
icebp
and
movsb
cli
xor
test
jmp
fs
out
pusha
xor
test
pop
jnp
dec
mov
xchg
push
inc
dec
lods
sbb
or
loop
sub
and
fistps
and
fcom
xor
inc
mov
mov
pop
push
popa
adc
movl
lods
jge
imul
orb
jmp
inc
mov
inc
aam
data16
inc
xor
ret
sbb
sbb
das
mov
mov
pop
adc
inc
inc
cli
and
sub
shlb
test
mov
cmp
sbb
add
out
mov
xchg
or
fcmovnbe
cmpsl
out
jmp
mov
xlat
pop
xor
gs
cmp
aaa
ret
icebp
jle
inc
dec
pop
xchg
out
cmp
sub
inc
push
aam
and
or
sbb
pop
aam
xlat
js
cmpsl
lock
movsb
push
xchg
enter
xor
repz
test
xchg
lcall
inc
dec
jnp
xor
sub
in
in
push
mov
xor
outsl
or
nop
fdivr
sub
insl
dec
clc
in
mov
xchg
sub
sti
push
mov
jge
das
jb
mov
push
lahf
and
inc
mov
jl
dec
mov
sti
outsb
add
repnz
std
in
cmpb
sbb
mov
pop
in
int
mov
sbb
pop
sub
sti
pop
mov
into
out
xor
mov
jno
and
pop
cld
shlb
push
mov
adc
ret
ret
inc
mov
and
cmpsb
xor
push
pop
iret
sahf
jne
addb
add
popf
dec
fwait
ret
mov
cmp
sub
mov
sahf
rolb
xchg
mov
adc
jo
addr16
xchg
popf
xor
jnp
cmp
xor
mov
mov
add
pop
add
mov
movsl
sub
push
enter
lds
jb
push
pop
push
xor
xor
mov
idivb
fsubrl
rcrl
dec
fwait
add
fstpt
xor
xor
mov
cmpsb
pop
iret
mov
mov
in
loop
stc
mov
jo
sub
or
loop
dec
jne
mov
and
mov
and
cwtl
in
mov
jne
mov
dec
jmp
packuswb
roll
cli
adc
nop
aaa
insl
add
sub
popa
push
mov
cmc
xchg
jo
pop
ret
daa
mov
fldcw
lcall
daa
cs
mov
and
xor
lods
movsb
test
mov
stos
mov
ljmp
jg
add
enter
sbb
enter
mov
jp
pop
les
loop
loope
test
fiaddl
push
cltd
loopne
inc
mov
les
adc
mov
add
or
inc
xor
lret
cmp
ficompl
xchg
sub
mov
mov
leave
xchg
in
xor
lods
push
cmp
ficompl
cmp
push
in
inc
sub
dec
icebp
add
movsb
mov
lcall
in
adc
push
jecxz
movups
cwtl
cmp
lock
lock
or
pop
pop
les
jno
mov
ds
cmc
jecxz
fdivr
aaa
out
add
aaa
rolb
and
lods
and
jle
jle
jecxz
cmp
mov
pop
and
mov
push
inc
loop
out
sub
test
and
add
pop
imul
push
je
test
lahf
lcall
xchg
jns
lea
repnz
adc
adc
testl
popa
into
mov
popf
aam
fildl
imul
mov
cltd
dec
bound
inc
push
in
or
stos
cmpsl
cmp
out
dec
dec
mov
pop
les
enter
jnp
dec
scas
jbe
jge
mov
sbb
jns
push
call
ret
push
push
into
jne
dec
inc
adc
xor
or
adc
stc
push
mov
shll
xchg
addl
mov
add
xchg
mov
xchg
iret
stos
scas
mov
stos
pop
cmc
cwtl
pop
fstps
pop
sbb
lea
cmp
mov
ficomps
adc
cmp
lcall
lahf
mov
pop
mov
ret
test
cmp
es
lcall
xor
fists
fcompl
into
repnz
ret
push
aad
dec
rolb
dec
pop
sub
sub
dec
movsl
or
or
xlat
or
sub
dec
fimull
xchg
mov
push
fnstsw
andl
in
dec
lods
adc
pop
ds
push
cwtl
mov
adc
stc
adc
jl
mov
xor
shll
mov
mov
repz
mov
pop
fs
cmp
pop
push
push
xchg
ret
fisttps
mov
dec
ds
pop
call
jecxz
insb
add
scas
andl
cmp
push
adc
jmp
mov
not
xlat
sbb
loopne
aam
fdivrs
les
dec
lret
push
mov
shlb
dec
repnz
out
ljmp
push
fistps
sahf
or
pop
mov
mov
push
lock
cwtl
fnsave
add
and
xor
cld
ds
adc
clc
nop
adc
scas
or
sbb
int
imul
fsubrl
mov
out
out
or
dec
clc
outsl
rclb
stos
adc
hlt
mov
cmp
inc
frstor
xor
out
movsb
push
enter
adc
or
notb
xchg
mov
cltd
icebp
push
cld
ret
repz
idiv
add
cmp
sbb
mov
adc
lret
jmp
pop
sub
inc
aaa
or
mov
inc
push
mov
shl
mov
xor
cli
push
cwtl
mov
sbb
sub
dec
add
and
popw
nop
jbe
clc
lds
mov
dec
jg
mov
add
mov
orl
or
fstpl
lock
inc
mov
pop
iret
in
adc
push
fdivrl
add
sarb
ja
jae
ficompl
out
loop
test
pushf
hlt
andb
or
mov
aas
sub
clc
adc
shrl
out
cli
scas
mov
mov
cmpl
sub
dec
xchg
gs
ja
push
mov
and
sbb
cmp
cmp
xchg
jns
jecxz
sub
in
enter
icebp
add
imulb
fistps
std
xchg
sub
push
xor
gs
dec
adc
xchg
lret
jns
pop
xorl
lods
lret
lcall
mov
and
subl
enter
popf
sti
push
cmp
cmp
adc
inc
sub
pop
test
push
fwait
pop
std
repz
ja
test
popf
in
aam
cmp
orb
and
push
cmp
push
push
xchg
or
push
push
in
lods
stos
data16
pusha
in
es
fcompl
pop
add
mov
or
push
mov
xor
in
mov
inc
or
mov
rclb
push
pusha
jb
pop
fisubrl
in
movsl
sub
push
test
xchg
mov
jmp
jo
loopne
xor
adc
adc
popa
or
hlt
dec
test
adc
jo
stos
clc
mov
mov
ja
lods
mov
xor
cmp
xor
incl
sbb
push
xor
fiaddl
mov
fsubrl
push
test
push
xor
inc
mov
sbb
jmp
imul
mov
xchg
aas
movsb
incl
pusha
jl
pop
hlt
popa
test
xchg
pop
bound
shrb
pop
in
in
jl
ret
syscall
push
insb
lahf
xchg
dec
pop
and
iret
inc
lret
mov
lahf
xlat
pop
popa
in
xlat
adc
inc
xchg
pop
and
call
xchg
hlt
sbb
and
stc
fwait
mov
mov
push
dec
sbb
xchg
les
xlat
in
mov
insl
dec
jns
or
je
xchg
sbb
xchg
clc
sbb
pop
mov
aad
jmp
jmp
push
or
push
pop
iret
aad
and
jno
push
add
mov
imul
in
stos
je
mov
cltd
pushf
arpl
sub
mov
iret
or
fbld
adc
xor
movsl
adc
mov
mov
out
in
jo
push
daa
sbb
fstpl
out
cmp
in
out
stos
pop
jae
sti
dec
rorb
lcall
fistpll
pop
scas
clc
sbb
clc
cltd
xchg
insl
sbb
jmp
inc
stc
insl
mov
and
mov
sbbb
add
cmpsb
or
stc
call
js
ljmp
mov
out
mov
outsl
imull
lods
mov
into
push
sarl
sbb
loop
in
lcall
or
test
pop
xlat
mov
mov
cmp
mov
aam
ljmp
add
mov
and
mov
fstpl
xlat
and
sbb
js
lret
inc
es
rorb
cmpsl
rclb
cs
shl
dec
xor
addr16
enter
roll
fistl
jle
clc
cmp
push
jecxz
jo
daa
push
cmp
and
xchg
call
lods
mov
jecxz
dec
jge
mov
fldt
mov
negb
in
or
pop
in
loopne
xor
fnstsw
dec
lret
fldt
mov
mov
inc
lret
mov
std
xor
mov
mov
mov
int
fsubrl
insl
or
sar
out
test
ret
sbb
dec
ss
add
mov
rol
sbb
mov
stc
mov
and
cmp
cmpb
filds
lret
jae
pop
call
cmp
pop
in
cli
sbb
inc
and
ds
xchg
cmp
sti
pusha
pop
mov
std
movsb
sub
sbb
stc
mov
inc
xor
mov
test
mov
mov
sub
xlat
ret
imul
divl
stos
sbb
ja
popa
icebp
in
jle
add
add
jbe
and
pop
cmpl
testl
sbb
data16
cmpsb
fcmovb
mov
sbb
loop
inc
dec
mov
out
sub
push
xchg
and
pushf
cwtl
orb
sub
daa
pop
aam
call
adc
dec
pop
or
xor
push
adc
mov
or
and
mov
std
daa
xchg
cmp
push
pusha
sbb
movsb
mov
inc
aas
pop
les
mov
loope
push
lock
cmc
into
cmp
mov
cmc
aam
lock
out
jge
fcom
mov
loop
cmp
notl
and
das
sbb
sub
cmc
shl
mov
sti
cs
aas
jle
mov
xor
push
sub
dec
cmp
loopne
fidivrl
inc
sub
cmp
pop
dec
bound
loop
std
and
or
es
inc
xlat
push
adc
mov
xchg
int3
dec
repz
jmp
popf
jnp
adc
subb
dec
lea
and
or
lock
lahf
mov
add
push
push
add
lcall
loope
jno
fwait
pop
sbb
or
dec
shrl
jmp
mov
pop
mov
push
pop
lea
mov
jns
add
in
fdivl
repnz
jecxz
and
mov
xor
cmp
inc
jmp
jb
fcompl
and
clc
pop
sub
dec
adc
lahf
sub
imulb
xchg
add
addr16
mov
mov
sahf
popl
out
xor
and
sbb
pushf
scas
adc
pop
mov
jle
or
push
orl
xchg
test
mov
jmp
shlb
xor
jo
out
xor
inc
fisttpl
pop
lahf
inc
sar
adc
pop
sub
ss
pop
adc
add
lret
shl
shl
xor
jbe
mov
mov
inc
aas
repz
mov
sar
or
icebp
loope
lock
push
push
test
cmpsb
cmc
inc
sub
std
pop
fcompl
cmc
cmp
ds
xchg
push
pop
mov
cmp
push
xchg
ret
fdiv
into
mov
pop
pop
cmpsb
or
mov
iret
leave
pusha
push
jmp
cmp
mov
mov
xchg
rol
xchg
je
sbb
popf
push
aaa
xchg
out
or
sbb
add
sbb
mov
ss
xchg
jmp
cmpl
in
ljmp
sub
pop
or
sbb
mov
loope
mov
and
sbb
or
xchg
icebp
call
adc
push
sti
xor
lret
pop
mov
pop
sub
adc
popa
test
cmp
out
or
lock
movsl
xor
adc
arpl
lahf
dec
imul
sbb
imul
mov
sub
jnp
xchg
cmp
or
and
dec
sub
out
inc
dec
mov
ja
mov
leave
movsb
test
mov
cmp
jge
lods
into
inc
outsb
stos
clc
pusha
into
dec
mov
lods
cmc
das
or
cmc
xchg
test
test
mov
sbb
les
cld
jne
shlb
jne
rorl
aad
fs
adc
out
lds
push
sub
push
call
push
cltd
inc
repz
int3
cmpsb
sub
pop
ds
push
fnstenv
xchg
aad
ret
cwtl
inc
mov
sbb
add
jne
adc
shl
and
insb
fcomps
mov
and
and
ss
sub
push
push
test
fwait
xchg
jnp
in
jmp
mov
lods
lret
push
imul
add
in
or
mov
pushf
mov
dec
movsb
stc
sub
cmp
lea
aad
lcall
jnp
sbb
xor
and
rcl
or
inc
aam
xchg
out
gs
imul
push
push
test
adc
fiaddl
xor
inc
sbb
sub
test
xchg
hlt
shrb
ss
fldcw
stos
aaa
popf
mov
pusha
mov
cmp
outsb
mov
out
add
jb
pop
out
lcall
sahf
or
mov
cmc
std
jmp
loop
push
push
xchg
divb
movsl
push
test
fwait
in
shr
jne
or
insb
loopne
adc
dec
sbb
lcall
sbb
inc
aas
pop
bound
dec
fidivrs
rolb
addr16
lea
pop
lock
jmp
movsl
push
pop
sub
sbb
aam
js
pop
jbe
push
adc
inc
jge
sub
lods
pop
xor
xchg
push
xchg
out
jle
or
addr16
std
xchg
cmp
lock
popa
or
dec
imul
std
push
and
push
shll
mov
mov
loopne
xchg
psubusw
push
aaa
outsb
arpl
out
and
pushf
das
shlb
lods
out
push
mul
shl
jbe
sbb
negl
adc
mov
mov
sbb
ss
lahf
push
cmpb
fimull
mov
iret
aam
pop
aad
test
scas
test
daa
xchg
sti
cmp
cmp
mov
push
stos
push
adc
mov
xchg
fldl
push
sbbl
push
jmp
xchg
in
jae
mov
sub
stos
mov
add
stos
das
xor
and
sub
push
jg
push
loopne
jne
shrb
sub
das
das
xchg
out
cld
sbb
mov
mov
rorb
sbb
adc
mov
mov
imul
dec
mov
sub
shlb
cmp
stc
xchg
dec
sub
push
popf
mov
hlt
dec
mov
mov
inc
scas
cli
jmp
lea
push
shrl
push
aam
mov
movsl
sub
sub
sbb
insb
push
jl
pop
std
and
lods
cmc
cmpsb
mov
and
xchg
pop
xchg
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
cmp
mov
daa
pusha
addl
adc
test
cwtl
fsubrs
push
mov
pop
inc
loope
mov
cmp
adc
push
les
shrl
cmpb
push
add
dec
rclb
bound
scas
push
stc
fistps
xchg
jae
into
dec
xchg
mull
cmp
fcompl
dec
mov
js
pop
pop
or
xlat
mull
aam
mov
jno
mov
in
out
daa
out
daa
pop
jns
jnp
inc
push
nop
arpl
xlat
shrb
mov
dec
sbb
leave
lahf
cmove
in
lea
mov
loopne
xchg
or
pop
leave
loop
ss
xchg
pop
bound
lods
in
push
cmp
test
xchg
sub
nop
jp
sub
adc
xor
mov
mov
call
push
add
jmp
mov
mov
scas
cs
in
xor
cmp
mov
cmp
daa
xchg
test
jb
mov
rorb
call
push
mov
dec
sbb
aam
pop
imul
xor
mov
or
add
and
loope
cmp
ret
push
or
mov
mov
or
ret
idivl
ljmp
lret
xchg
loope
popf
out
faddl
test
mov
shl
mul
jb
add
rcrb
imul
add
cmp
icebp
loop
push
pop
add
test
orb
neg
sbb
jecxz
std
hlt
imul
mov
adc
into
and
mov
gs
adc
sub
jae
dec
jmp
dec
iret
out
stos
enter
fisubs
pop
mov
jns
jecxz
adc
into
mov
pop
push
in
stos
push
jl
imul
jecxz
fwait
mov
sbb
xchg
cmp
rorl
leave
push
inc
cmp
pop
sbb
cwtl
lods
clc
push
mov
std
or
pop
push
int3
add
or
xchg
dec
xor
bnd
cmp
es
retw
cli
jge
loop
push
mov
pushf
xchg
leave
xor
sti
mov
shrb
aas
sti
inc
sub
xchg
sahf
xchg
rorb
sub
daa
cmp
filds
inc
stos
data16
push
mov
hlt
or
pop
jb
fisttps
jo
and
fstpl
xor
loop
dec
fucom
mov
bound
shl
ret
fstl
lret
scas
sub
sbb
jb
test
jge
nop
lods
jns
ljmp
cmp
pop
nop
aam
dec
mov
push
sbb
jmp
sbb
adc
push
jge
mov
fstp
dec
xchg
nop
jge
pop
test
aaa
sbb
xchg
push
xchg
cmp
dec
inc
insb
sbbl
insb
lret
pop
sub
cs
lods
add
enter
inc
je
lds
jae
call
fisttpll
popa
or
imul
mov
jno
mov
int
daa
jecxz
scas
push
pop
cmc
add
xor
notb
sti
push
out
pop
scas
pop
cli
fidivrl
pop
pusha
stos
push
sub
daa
inc
rolb
adc
pop
gs
pop
cmpsl
mov
lock
or
outsl
push
lock
fcmovnb
lret
es
cltd
cmpsl
int3
pop
lahf
mov
and
adc
and
or
jle
pop
mov
xor
out
or
cmp
enter
pusha
xchg
in
lods
and
fs
mov
jg
cmp
shr
inc
xchg
loope
out
xchg
test
ljmp
fdivs
mov
dec
xlat
in
sub
repz
imul
addr16
in
aas
bswap
mov
fsubp
aaa
dec
mov
cli
xchg
xchg
inc
insb
and
scas
test
push
inc
dec
fcmovu
fisubrl
outsl
mov
popa
dec
or
push
sbb
mov
fisubl
dec
xor
xor
and
or
or
test
sbb
out
cld
ds
cmpsb
jl
loope
jo
inc
mov
aad
xchg
loope
ficoms
rorl
loopne
add
and
xchg
cmp
add
gs
mov
xor
sub
loope
in
jmp
sbb
lahf
sub
mov
clc
push
dec
xchg
xlat
push
lock
mov
mov
jno
movsb
shll
pusha
arpl
push
fbld
fsubl
push
ss
test
incl
pop
fst
aam
mov
jns
shll
sub
or
xor
int
lea
mov
xlat
pop
aaa
sbb
pop
mov
mov
mov
jo
xchg
incl
gs
andb
sub
outsb
xchg
aaa
push
and
outsb
cmpsb
mov
inc
push
fs
shrl
or
sar
add
sbb
jns
lock
out
cltd
cmp
sbb
pop
ret
out
mov
mov
sbb
call
cs
inc
in
aad
ss
stos
push
inc
lret
hlt
fcoml
push
push
sbb
adcb
jnp
xchg
dec
addr16
pop
sub
push
testl
or
adc
lods
xchg
cmpsb
mov
add
jl
call
lahf
sti
aam
aas
jns
cli
sarb
insl
ret
ljmp
das
call
mov
xchg
fcmove
cwtl
jb
jo
xchg
loope
jmp
stos
div
adc
in
sbb
cltd
or
push
and
jo
xchg
add
push
std
dec
cmp
cld
add
jnp
mov
mov
js
pop
hlt
iret
add
outsb
jae
pop
pop
jae
inc
add
aaa
int
in
aaa
push
repnz
or
sarb
pop
dec
icebp
jae
jo
test
sahf
pop
rorb
jnp
int3
fs
dec
dec
mov
push
movsb
pop
dec
into
cmp
push
pop
sahf
je
ja
sbb
xor
pop
or
xchg
repnz
xchg
cs
xchg
adc
xlat
repnz
das
mov
xchg
rcr
aas
xchg
mov
in
xlat
sub
fdivp
mov
mov
imul
outsb
aaa
dec
dec
les
sti
cltd
or
std
hlt
xchg
or
fisttps
and
cmp
push
sbb
lds
test
jnp
dec
dec
jecxz
pop
sbbb
inc
aas
dec
in
adc
pshufw
ljmp
jbe
mov
add
dec
and
aaa
jp
outsl
push
inc
jmp
rol
or
stc
notl
inc
popw
sbb
push
insb
cmp
sub
jmp
and
stc
and
xor
sti
xchg
add
inc
int3
cmp
shlb
add
les
and
cmp
stos
xor
xchg
mov
xchg
push
push
cmp
cmp
int3
jp
mov
movsb
arpl
sbb
push
shlb
les
cwtl
aam
sbb
scas
lahf
dec
mov
cmp
cli
out
sbb
aad
sarl
jmp
clc
add
pop
inc
lods
loope
mov
pop
inc
sub
sti
ret
mov
push
jmp
insb
mov
fistpll
mov
movsl
outsl
idivb
xor
dec
test
adc
mov
cmpb
fimull
aas
ljmp
into
lcall
push
mov
lods
pop
in
xor
daa
push
cmpb
push
sub
push
iret
mov
fnsave
scas
out
ljmp
in
jo
sahf
mov
mov
int
inc
sub
into
jno
notl
push
inc
jecxz
pop
inc
add
xchg
mov
cltd
mov
sub
xchg
mov
call
aad
add
pop
sub
testb
push
outsl
or
push
cmp
movsl
jp
xchg
popa
cmp
out
es
add
sahf
push
icebp
leave
pop
loop
or
sbb
int3
cld
nop
inc
add
add
push
or
mov
fsub
add
sub
mov
sbb
sarl
imul
mov
mov
roll
pop
out
mov
push
arpl
mov
inc
or
scas
lds
pop
sbb
or
xchg
pcmpeqw
out
insb
fwait
dec
inc
cs
sbbb
jo
or
adc
fwait
incb
lods
or
or
cmp
jecxz
dec
dec
fucom
jb
sub
out
push
sbb
sbbl
cmc
adc
jae
divb
and
add
xor
mulb
cmpsb
js
jno
lds
repnz
inc
add
cwtl
mov
xor
jmp
fucomp
les
push
inc
pusha
add
push
call
and
popa
adc
int
aad
loopne
xchg
decl
test
jb
ret
loope
imul
movsl
sti
in
repz
pop
movsl
or
mov
mov
adc
mov
hlt
dec
push
inc
xchg
call
fs
mov
icebp
out
mov
push
movsb
cmp
in
xchg
add
cmpsl
xchg
sbb
mov
push
lds
notb
nop
jge
out
sahf
push
adc
dec
ja
les
push
jbe
cld
incl
call
in
sbb
jns
and
xchg
jae
dec
mov
or
pop
add
xor
sbb
lahf
xchg
cltd
sub
inc
push
out
in
mov
and
inc
test
mulb
cld
shr
aam
sti
mov
mov
sahf
cmpb
xchg
ret
mov
mov
das
push
movsb
fwait
je
adc
or
mov
sub
pusha
lret
dec
inc
push
mov
jmp
mov
xchg
or
xlat
push
pop
out
xor
sbb
add
sbb
in
aaa
xchg
sub
inc
ja
fadds
jp
sti
outsl
mov
dec
sub
xchg
cmp
sbb
clc
popf
ret
mov
mov
ja
jae
nop
fimuls
xchg
mov
lcall
inc
stos
cltd
test
dec
adc
push
stc
adc
lret
cmp
out
dec
xor
jb
or
pop
mov
loop
fldl
loop
pop
lea
call
push
test
rcr
sbb
xor
shrl
addr16
test
mov
decb
rcr
lea
cmpsb
or
bound
popa
jno
jle
inc
test
cs
iret
cmp
cli
inc
out
mov
out
pop
insl
push
cmp
lock
in
jno
sahf
in
push
inc
xchg
stos
repz
mov
movsl
xor
cmovge
sahf
pop
jl
push
loop
andb
and
ss
xchg
add
pop
addr16
nop
scas
add
dec
jno
sbb
imul
ja
mov
xor
insl
out
push
bound
lcall
xchg
mov
jbe
loope
mov
mov
push
test
pop
stos
or
push
sub
iret
sbb
pop
popa
mov
lcall
push
imul
ror
pop
adc
faddl
push
push
bound
in
movsb
popl
pop
sar
fdivrl
mov
push
mov
push
pop
stos
sub
sub
jno
cmc
outsl
jmp
ja
stos
test
add
sub
mov
dec
rdmsr
mov
pusha
push
enter
cmp
ljmp
add
or
or
call
aam
and
js
xchg
test
sbb
push
icebp
xor
stc
jl
mov
lock
sub
leave
rcll
dec
pop
popf
pop
adc
sub
fisttpl
dec
mov
not
mov
add
cltd
add
sti
push
dec
lock
cmpsl
pop
js
xchg
lods
data16
xor
xchg
lcall
mov
into
sbb
xlat
xor
mov
mov
jns
inc
jo
leave
and
test
hlt
add
ljmp
dec
sti
sbb
mov
and
mov
mov
xchg
sub
leave
outsb
mov
dec
inc
je
or
aas
inc
sbbb
push
adc
mov
mov
rorl
in
addr16
inc
test
pop
sub
or
inc
jmp
bound
mov
aaa
mov
or
fnstcw
inc
jl
push
sarb
or
fnstenv
adc
notl
jg
icebp
pop
fcomip
push
inc
push
or
out
out
push
div
or
loopne
mov
mov
sti
push
decl
pusha
jns
and
xchg
sbb
push
lcall
jmp
fdivrl
inc
aas
lahf
fists
les
pop
pop
adc
andb
je
movsl
das
leave
fs
std
inc
ljmp
inc
fsubrs
daa
pushf
pop
mov
in
push
sahf
std
inc
push
sub
fwait
pop
push
xlat
and
sbb
xchg
mov
cmpsb
jmp
iret
leave
ret
scas
jbe
imul
mov
aad
adc
pop
dec
push
add
lahf
movsl
in
sbb
cmp
jne
pop
push
jmp
rcr
inc
test
or
aam
pop
push
lahf
jno
fwait
adc
out
rcrl
dec
aam
out
xchg
and
std
pop
push
cwtl
and
aas
and
ror
push
fdivrp
add
cmpsl
cmp
lock
js
fnstenv
push
or
loop
push
pop
cltd
adc
shlb
cmp
xor
cmp
inc
je
ss
inc
sbb
dec
push
or
enter
adc
ljmp
adc
in
shlb
popa
mov
sub
push
sbb
repnz
cmc
mov
aas
mov
jge
dec
mov
push
pop
pop
mov
leave
push
and
xchg
jae
loope
jbe
add
loop
shlb
mov
xorb
enter
fwait
dec
mov
or
leave
mov
in
or
das
and
adc
lods
pushf
es
test
je
mov
shl
gs
aad
xlat
pusha
and
jns
cwtl
sbb
xchg
push
popa
cmc
out
cmp
jae
jno
out
jp
repz
ror
push
fbstp
and
push
int3
add
mov
mov
push
jle
push
das
lret
fildll
xchg
in
lods
subb
jecxz
sbb
repz
popf
outsl
inc
mov
dec
xchg
ljmp
fwait
cmp
cwtl
push
push
sbb
ret
into
insb
dec
cltd
fcomps
popa
inc
nopl
leave
stos
fdivrl
mov
cmp
mov
pusha
jp
jnp
cwtl
pop
sbb
popa
mov
enter
push
sub
or
push
mov
sahf
les
pop
scas
dec
das
mov
btsl
push
cs
cwtl
lcall
ret
repz
inc
mov
xchg
pop
push
jne
jo
inc
loopne
xor
pop
jl
cmp
jne
fstpl
dec
sbb
in
fcompl
push
test
inc
jns
sub
mov
mov
sub
repnz
out
out
sub
dec
lods
push
xorl
movsl
scas
push
inc
shll
push
gs
test
sbb
or
mov
sub
aam
mov
cli
mov
pop
rcrb
fsubrp
pop
jne
jno
xchg
rorl
outsl
adc
das
test
mov
xchg
sub
outsb
scas
call
scas
sbb
loopne
mov
mov
pop
push
in
repz
pop
movsbl
aad
sub
mov
lret
rcrb
mov
pop
adc
mov
dec
xor
insb
cmp
sub
into
push
mov
std
or
outsb
xchg
shl
es
push
inc
sbb
push
daa
or
mov
insb
cmp
mov
inc
dec
mov
mov
push
sbb
sub
fcomip
sub
mov
int3
xchg
out
sbb
fstl
negl
mov
int3
dec
pop
daa
aaa
int3
sbb
inc
es
pop
rorb
inc
sti
lock
pusha
les
xchg
aas
dec
nop
adc
movsl
add
jmp
stos
push
sbb
cmp
clc
pop
mov
sub
mov
cmp
imul
xor
clc
fisubrs
jno
inc
je
push
sbb
push
jne
idivl
popf
fstpl
pop
arpl
or
call
sub
jne
pop
mov
mov
xchg
mov
std
fnstcw
aaa
aas
cmp
sbb
clc
push
bnd
icebp
in
jno
pop
push
mov
jno
mov
jb
mov
mov
cmpsl
dec
movsb
sar
sub
xchg
push
fidivrs
cmp
adc
in
in
lods
mov
iret
into
imul
pop
fsts
ds
jmp
mov
mov
outsl
das
dec
xor
xchg
and
shlw
sub
pop
jp
out
jb
jg
setne
lods
mov
loopne
in
jmp
jle
fwait
and
aad
fwait
in
xchg
and
lcall
cmp
mov
push
dec
mov
fs
insl
dec
or
test
scas
jl
pop
mov
push
jns
enter
push
cs
cld
sub
add
and
clc
repz
mov
mov
mov
clc
sbb
mov
or
pop
lret
ret
ret
pushf
cmp
jp
fsubrp
mov
pop
sub
fstpt
das
mov
iret
mov
jae
dec
sub
or
jo
or
popf
push
adc
mov
push
xor
outsb
mov
and
into
mov
or
stc
push
jmp
rorb
jg
jns
insl
cmp
xchg
lods
push
mov
or
mov
and
sub
pop
sub
and
jmp
shlb
cmc
pop
pusha
movb
xchg
out
jl
std
filds
clc
dec
and
outsl
push
add
xor
or
shrl
test
outsb
pop
mov
pop
insb
xchg
xchg
into
mov
repz
sub
sti
dec
mov
insl
adc
lds
jnp
fbstp
cmp
mov
mov
call
insl
or
nop
loopne
xor
pop
lret
add
mov
aad
das
ret
ljmp
inc
nop
dec
xchg
mov
pop
sarl
xchg
mull
mov
push
xchg
dec
pop
pop
iret
ret
jb
xor
cmp
repnz
mov
xchg
cmp
test
dec
call
daa
mov
push
ljmp
cld
dec
pop
xorl
popf
xchg
ss
xchg
out
mov
mov
jl
adc
jo
sub
scas
push
mov
cwtl
das
aad
mov
ret
sbb
sbb
pop
sbb
mov
cmp
mov
cmp
fistps
push
xlat
adc
dec
cltd
call
mov
mov
jne
mov
js
mov
into
jns
push
xchg
movsb
cltd
add
pop
enter
int
add
leave
ja
mov
in
js
dec
sub
cmp
jb
adc
shl
sbb
in
adc
ret
ss
push
sub
mov
dec
jb
mov
insb
addr16
aam
rcll
test
sbb
mov
repz
imul
insl
sahf
sub
jns
sub
inc
or
mov
push
into
pop
stc
pop
lret
loop
bnd
or
mov
dec
pop
add
rcrl
pop
jl
sub
cmpsb
xor
outsl
sbb
push
aam
dec
test
lcall
ja
inc
xchg
outsl
or
fs
dec
sbb
mov
pop
popa
add
xor
or
or
sbb
and
push
xchg
push
mov
mov
sar
push
mov
fdiv
popf
sub
ja
aaa
push
shl
mov
push
lods
jmp
adc
inc
adc
mov
lods
mov
in
add
mov
push
ds
push
sub
mov
inc
inc
fimuls
cmp
in
jge
lds
cmpsb
addr16
inc
dec
xor
xchg
test
popf
repnz
jg
inc
push
xor
mov
adc
stos
pop
adc
std
pop
jle
xchg
lds
ja
out
dec
pop
test
std
ret
mov
roll
sub
mov
and
cs
and
arpl
cwtl
testl
push
movsl
add
push
test
pop
popa
adc
dec
push
fs
cmp
fdivrs
xchg
cmpsl
inc
adc
or
test
mov
pop
push
in
rorb
aam
test
sti
dec
mov
fsts
add
jns
daa
or
pusha
or
out
mov
sub
lret
jmp
shrl
lret
sbb
cmp
mov
inc
test
sub
or
fs
pop
fcmovnb
in
cmpsl
andb
fisubs
lods
cwtl
xor
and
xchg
test
imul
push
insl
ror
cmc
or
inc
jo
cmp
jb
mov
dec
xchg
inc
adc
jbe
mov
mov
cmp
jge
pop
into
jbe
out
pop
loop
imul
imul
repz
into
fs
roll
mov
and
adc
push
addr16
adc
andb
xor
daa
inc
jg
push
sbb
arpl
icebp
mov
dec
cmpsb
xor
cmpsl
in
pop
sbb
stos
cmp
stc
mov
jno
jns
mov
adc
dec
movsb
dec
inc
jo
in
adc
stos
out
test
je
pop
or
loope
dec
int3
and
xor
jns
mov
fs
test
rcrb
push
cs
adc
cmpsl
mov
sahf
lods
mov
lea
testl
inc
sub
jmp
out
out
loope
js
iret
leave
fildl
mov
push
add
movsb
in
nop
mov
setle
cmpsl
xor
in
faddl
push
xorb
inc
inc
jmp
int
stc
repnz
aam
repnz
insb
flds
cmp
xor
dec
xor
push
rcrb
ret
sub
mov
inc
adc
cli
test
in
incb
sbb
bound
stos
dec
xchg
ja
xchg
lret
mov
pop
push
push
fidivrs
aas
in
out
addr16
pop
mov
and
jns
pop
lcall
cltd
bound
push
jb
mov
pop
and
aad
xchg
mov
or
repz
push
mov
lret
jne
repnz
mov
xor
mov
in
inc
leave
sub
std
mov
insb
test
sbb
repnz
or
mov
xor
lods
rorb
pop
add
sbb
lret
sub
jl
neg
fs
jg
ret
mov
push
rcrb
cmc
lea
movl
out
cmp
sti
shrl
xor
ljmp
sub
and
mov
xor
xchg
cmp
mov
and
mov
mov
sarl
orb
fwait
cmpsl
outsb
jecxz,pt
adc
add
cmp
or
popf
push
adc
in
jb
inc
push
pop
sahf
fdivl
push
daa
mov
insb
xor
push
pusha
sbb
xor
cmpsl
xor
cli
sbb
or
xchg
sar
adc
ficoml
shll
scas
mov
xor
or
xor
cmpsl
jno
js
jo
out
inc
shl
mov
lret
or
sub
add
out
sahf
aaa
movsl
scas
mov
or
jecxz
faddp
push
cmp
sbb
mov
hlt
loopne
sub
jns
or
aam
aaa
dec
aam
in
aaa
and
mov
and
movsb
mov
out
flds
lock
push
jp
lods
lahf
movsl
add
test
in
dec
push
xor
mov
inc
xchg
sbb
leave
idivb
popf
mov
ljmp
pusha
jmp
sub
bound
mov
in
sbb
add
sub
popa
pop
sbb
sub
add
xchg
dec
mov
or
mov
mov
sbb
outsb
aad
pop
data16
push
pushf
inc
push
movsb
jmp
pop
lahf
mov
leave
out
add
xor
cltd
mulb
jp
jle
xchg
fstpl
mov
fisttpl
sub
xor
sbb
xchg
mov
xchg
mov
stos
fistps
and
push
loope
incl
addr16
dec
jl
cmp
sti
icebp
cmp
test
sbb
mov
and
sbbl
mov
mov
loopne
fldenv
mov
cmp
div
adc
push
ficoml
jge
xor
dec
fistps
mov
cmp
shrl
mov
adc
stc
mov
in
xor
and
icebp
or
lods
addr16
rorb
jns
fwait
daa
add
out
cmc
scas
sti
mov
je
pop
xor
jne
jb
pop
or
pusha
cmp
std
add
lahf
cmpsl
pop
lods
sbb
jne
lods
pusha
inc
pop
negb
push
fidivrs
int
adc
pop
adc
ret
mov
fnstcw
jne
loop
pop
imul
mov
test
push
shl
fs
cmp
cld
mov
add
pop
repz
ror
mov
dec
mov
aad
movsb
pop
shrb
pop
push
dec
add
cltd
fwait
mov
sub
lds
repz
repz
lods
mov
cmpsb
stos
sub
in
aaa
push
sbb
jge
sarb
jl
popf
mov
jg
call
add
jnp
jge
cmp
xor
xor
fsts
dec
imul
cld
inc
out
pop
push
xchg
or
and
adcb
sbbb
out
mov
in
inc
and
insl
push
pop
or
loope
mov
sbb
jge
test
ss
fidivrl
addr16
mov
aam
sbb
subb
insb
xchg
jne
push
jne
sbb
imul
movsb
lea
test
adc
and
jmp
mov
mov
lret
adc
in
int
pop
jb
or
out
and
vaddss
adc
pop
adc
fdivp
dec
fucomp
sbb
loop
dec
rcl
adc
test
xlat
push
rcll
xchg
mov
pop
xchg
scas
xchg
lods
mov
ljmp
outsb
pop
ret
pop
adc
icebp
stos
into
ret
je
pop
dec
dec
xchg
stos
sysenter
bound
negl
fcomip
cmpsb
fisubrs
mov
mov
test
loop
pushf
ss
push
insl
sbb
cmp
mov
push
daa
sub
or
int3
or
inc
xor
cmp
cmp
jne
mov
enter
fwait
outsl
jae
push
cmc
addr16
pop
int3
outsb
mov
lods
lret
adc
outsb
sub
sub
lock
mov
push
mov
cmp
femms
jmp
jle
or
loope
cmp
xchg
out
add
gs
insl
lock
test
add
lods
lret
test
sub
dec
jnp
add
adc
testl
out
outsl
xor
cmove
xor
dec
movsb
inc
mov
pop
cmp
fs
sbb
or
adc
cmpsl
mov
xchg
xchg
sarb
jbe
xchg
pop
pop
jecxz
fwait
gs
test
jge
pop
mov
jp
pop
cwtl
repz
sahf
and
or
dec
aam
sub
jp
fdivrs
test
inc
sahf
into
cs
shll
addr16
mov
jbe
push
xchg
sub
add
pop
ret
mov
mov
shlb
sub
aaa
mov
out
xchg
adc
xchg
inc
rolb
jo
or
adcb
icebp
push
fisubrs
arpl
sub
pop
in
push
shl
or
sbb
inc
addr16
adcl
and
xchg
add
lahf
push
mov
loope
xlat
inc
mov
adc
xchg
idivb
add
stos
outsl
push
cwtl
sub
adc
jno
callw
xchg
movsb
daa
mov
imul
mov
sbbb
push
sub
mov
dec
dec
jmp
add
sub
cltd
dec
push
loopne
sahf
int3
mov
and
mov
mov
and
mov
out
mov
cmp
add
cltd
adc
push
sbb
adc
jne
mov
or
mov
jno
ret
xor
loop
push
es
insl
inc
adc
call
add
xor
fwait
test
xor
xchg
leave
aaa
imull
push
mov
sub
jge
cmp
xchg
adc
testb
data16
lret
fists
adc
stos
das
cmc
pop
popf
mov
xor
jnp
ds
bound
in
ja
mov
mov
shlb
add
cmp
sti
mov
jnp
pop
adc
adc
xor
bnd
xchg
in
dec
inc
xchg
int3
repnz
lret
jae
int3
jns
push
xchg
inc
aad
jns
ss
mov
sbb
das
mov
mov
jns
push
ljmp
fwait
xor
or
jg
cltd
in
cmp
mov
sbb
gs
loopne
sbb
cld
mov
lret
sahf
or
push
inc
inc
jne
jge
aad
out
push
fidivrs
xor
flds
jmp
arpl
add
shrb
je
movsl
inc
dec
jge
clc
es
insb
inc
jno
loope
and
xchg
dec
ds
push
incb
aaa
adc
xchg
add
mov
movsb
sub
das
mov
movsl
push
insl
sub
or
xchg
push
sbb
subl
cmpb
arpl
les
jmp
inc
insb
fisttpll
lock
mov
push
mov
call
sub
inc
mov
mov
data16
lods
shr
cmp
popf
in
stos
sub
and
push
in
pop
sahf
jne
xchg
adc
cli
notl
cmp
addr16
sarl
xchg
test
dec
mov
dec
sbb
sbb
test
sbb
xor
insb
repnz
ja
loop
decl
push
add
and
xor
cmc
pushf
fs
loope
xor
xchg
out
fs
mov
dec
int3
dec
sub
pushf
into
sub
and
inc
and
mov
or
xor
lcall
dec
and
popf
addr16
loopne
inc
fwait
jg
int
jbe
pop
xor
inc
fldt
or
insl
in
mov
je
lds
cmp
add
cli
mov
push
jl
add
enter
mov
cmp
data16
stos
jl
decl
sbb
aam
in
jle
push
pop
sti
jmp
cltd
std
dec
int
or
mov
lret
and
mov
jns
clc
pushf
mov
shl
push
mov
fimuls
in
rcrl
lret
push
pop
ss
filds
cli
out
jmp
lods
pop
or
sbb
xlat
pushf
lret
push
cmpsb
xor
xchg
push
int3
fidivs
leave
call
xchg
outsl
bound
mov
movsl
in
sbb
pop
fwait
aaa
cli
inc
pop
xor
mov
arpl
or
stc
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
loopne
sbb
pop
pusha
addl
jecxz
cs
mov
into
lock
mov
pop
in
mov
sbb
les
sbb
sahf
push
xor
xor
and
inc
pop
dec
pop
and
test
push
std
and
addr16
outsb
pop
and
imul
jg
lahf
jo
cmp
pushf
mov
arpl
cmp
pop
or
lcall
repnz
jl
or
js
mov
jb
cmp
mov
push
jle
pusha
mov
les
dec
in
or
xchg
or
outsb
xor
sub
push
dec
pop
dec
or
cltd
les
and
sbb
push
or
pop
shl
add
scas
in
gs
jb
hlt
test
mov
nop
xor
insb
arpl
xlat
in
mov
test
adc
hlt
jnp
jo
push
shl
jle
push
mov
jno
add
shll
mov
jp
sbb
xor
loopne
leave
icebp
push
in
test
into
add
xchg
inc
lods
shrl
sub
sti
ret
cmp
incb
subl
and
xchg
add
jnp
and
push
rcl
dec
push
outsl
subl
arpl
int
cmp
add
cmp
sbbb
and
xor
push
push
ljmp
xor
mov
lea
loopne
cmpsl
lret
cmc
xlat
int3
iret
mov
dec
imul
ret
jno
mov
push
mov
xchg
push
ficoms
push
lret
mov
cwtl
mov
stos
adcl
dec
cmp
jge
loopne
push
cmp
mov
mov
xor
cmp
mov
xchg
xor
aad
pop
call
call
in
ret
jmp
lds
mov
pop
mov
pusha
sub
pop
sbb
sub
cmp
adc
mov
stc
out
sbb
rolb
cmp
mulb
mov
inc
imul
cwtl
or
test
mull
cmp
sarl
jl
mov
pop
cmp
or
outsb
int
adc
dec
sbb
inc
stc
aaa
fldenv
mov
stos
pop
push
notl
push
mov
push
mul
jnp
lcall
repnz
rcl
cmpl
mov
or
sbb
or
pop
add
sub
cltd
sbb
xchg
lahf
mov
xchg
dec
or
add
es
popf
adc
aaa
xchg
mov
mov
in
shrl
sub
ret
adc
pop
daa
call
sti
push
mov
lahf
sbb
nop
and
orb
arpl
arpl
out
pop
adc
out
decl
xor
ret
stc
pusha
push
push
mov
pusha
clc
jge
adc
in
mov
in
mov
ret
dec
sub
or
fistpl
mov
sbb
shrl
sahf
and
lds
insl
lds
jecxz
and
mov
cmpsl
sub
jle
les
push
dec
xchg
mov
fwait
daa
pop
xor
sub
fnstenv
xor
and
rcll
pop
or
mov
xchg
gs
jbe
xchg
xor
data16
out
out
push
sbb
push
sub
dec
adc
fnstenv
test
mov
fistpl
jle
inc
loop
lret
xor
and
xchg
add
dec
mov
mov
cld
inc
data16
aas
or
je
cld
fcomps
mov
dec
inc
loope
lods
popa
and
iret
into
dec
dec
and
stos
dec
push
adc
sub
push
sarb
int3
fwait
and
and
and
adc
add
mov
adc
mov
lods
adc
pop
jmp
movsb
mov
push
fs
or
stos
sbb
or
rorb
jbe
sub
enter
fdivrs
add
dec
test
mov
mov
jecxz
dec
loopne
mov
add
sub
inc
mov
test
iret
in
in
fisubrl
into
or
xlat
jne
xor
test
loope
jne
mov
cmpsl
xor
pop
das
imul
push
out
dec
scas
pushf
lcall
jge
outsl
int
stos
jbe
fnstsw
mov
jle
inc
add
dec
sbb
jo
adc
sbb
fistl
add
repnz
das
push
das
cltd
xchg
and
cwtl
inc
shl
mov
pop
shrb
mov
into
in
mov
adc
inc
js
lock
inc
jns
sbb
push
fdivr
lret
mov
ficomps
daa
cmp
push
jo
adc
aas
popf
cmc
mov
sbb
fsubrp
xchg
in
pop
pop
aad
pop
lods
test
inc
in
pop
hlt
xor
sub
iret
jg
mov
cmp
xor
mov
push
adc
repz
xchg
pop
mov
add
jg
adc
out
pop
imul
scas
ljmp
andl
xchg
mov
fsts
mov
jp
dec
push
imul
stos
mov
mov
aas
pusha
xchg
xlat
mov
inc
scas
push
push
out
mov
push
lcall
sbb
cmp
xor
jg
mov
mov
stc
repz
icebp
ret
nop
je
sahf
js
testb
cltd
or
xor
insb
scas
adc
loope
lcall
addr16
cmp
xchg
gs
divl
lcall
pop
call
imul
xor
inc
popf
xor
jnp
test
fwait
push
inc
je
pop
fmul
add
mov
ret
out
dec
arpl
out
jmp
aaa
popf
inc
pop
pop
inc
imul
mov
cltd
fdivp
jne
std
pop
iret
and
cwtl
incb
inc
imul
mov
xor
pop
jno
cltd
loop
scas
stos
sub
mov
mov
adc
addr16
sbb
xlat
sbb
cmp
cmp
gs
pop
out
and
mov
jmp
lcall
xor
out
jp
lret
push
cmpl
jg
gs
push
inc
test
mov
insb
ljmp
cs
sub
insb
push
jl
test
pop
mov
xchg
mov
xchg
js
push
enter
int
dec
insb
scas
jbe
aad
sub
and
sbb
jae
mov
mov
mov
jae
xor
push
das
adc
jge
mov
ret
cld
mov
xchg
sub
orl
imul
cs
lcall
cmpsb
jne
or
arpl
nop
dec
jecxz
and
rolb
mov
xlat
jbe
dec
xchg
ror
fdivrl
out
xor
add
test
fsubr
movsl
leave
clc
xchg
les
sbbl
jecxz
cmp
mov
xchg
outsl
inc
aam
mov
sbb
out
into
inc
in
inc
dec
outsb
cmpsl
xor
insb
inc
or
add
rorb
in
mov
scas
fwait
inc
call
or
pop
aam
push
repz
dec
adc
hlt
je
pop
popa
cmp
sbb
shlb
movsl
push
cld
pmaxsw
js
cmc
shlb
adc
xchg
rol
xor
and
in
push
xor
test
cmpsl
mov
or
aas
mov
insb
inc
sahf
pop
hlt
in
inc
jmp
sub
je
cmp
lods
pusha
sarb
test
xchg
lea
push
add
cmp
subb
dec
jmp
jmp
clc
pop
add
loop
jmp
movsl
xor
mov
or
xchg
and
fsubrs
jl
dec
jecxz
adc
cld
cmp
jns
movsl
addr16
mov
imul
jmp
adc
adc
popa
insb
sbb
sub
movsl
test
add
loop
mov
popf
mov
sbb
adc
push
push
mov
clc
jle
add
fimuls
inc
mov
scas
add
push
imul
sub
lret
mov
pop
ret
leave
sub
lods
pop
addl
scas
jno
push
lret
adc
sti
jb
pop
xor
mov
idivb
and
push
sbb
xchg
aam
adc
mov
xchg
mov
or
adcl
push
add
pop
stos
stos
scas
and
mov
pop
rol
lds
mov
rcrl
int
out
sbb
sti
les
sub
sub
int
data16
push
gs
punpckhwd
in
inc
push
jl
fldl
loopne
fadds
rclb
fidivrs
test
mov
mov
jg
clc
loop
add
mov
jo
xchg
scas
dec
out
jns
xor
aam
daa
popf
rorb
outsl
lods
icebp
and
repz
dec
scas
in
movsb
bound
fdivs
push
push
in
flds
rorb
cmp
mov
inc
dec
loopne
mov
arpl
inc
inc
out
roll
mov
xor
enter
movsb
pop
add
jmp
mov
rcrl
sub
into
adc
dec
sub
arpl
pop
mov
adc
in
into
ljmp
into
mov
sub
sub
cmc
mov
incl
mov
divl
testb
pop
sub
mov
es
push
push
add
movsl
jmp
add
scas
xchg
mov
xor
call
cmp
arpl
pop
ret
out
fldt
add
mov
leave
cmpsb
pop
push
and
jle
test
cmp
aam
test
mov
mov
arpl
ret
mov
ds
push
and
sahf
cmp
mov
mov
xchg
imul
dec
subb
xchg
mov
mov
sbb
shl
inc
adc
fidivl
subb
jb
pop
addb
repz
scas
into
jnp
push
in
cmc
xchg
mov
int
popa
adcl
test
jae
dec
into
rcl
in
std
add
out
loop
out
stos
out
les
andb
dec
xchg
dec
aas
cld
adc
cmp
jo
insl
jmp
stos
or
mov
adc
jne
adc
pop
push
or
fs
fs
inc
add
mov
pop
loop
cld
int3
bound
cmp
mov
mov
dec
xor
in
jmp
fimuls
ret
js
push
push
dec
aam
dec
push
inc
gs
clc
lds
mov
ficomps
pop
inc
mov
adc
rolb
fcom
sbb
mov
cmp
jmp
pop
cli
mov
aam
inc
movsl
dec
scas
sarl
in
mov
jno
push
scas
gs
xchg
dec
mov
pop
adc
xchg
lds
iret
mov
iret
shlb
add
jp
jno
inc
int
pop
mov
pop
insl
aas
sub
sub
cli
cmpl
test
push
cmp
push
pusha
xor
lock
vaddps
addr16
or
fndisi(8087
push
mov
not
adc
xchg
enter
push
cmc
les
ret
xor
pop
gs
popl
or
lods
pop
movsl
lods
nop
push
push
mov
pop
adc
ret
pop
mov
jp
mov
push
js
xchg
aaa
push
sbb
scas
hlt
sahf
cmp
mov
pop
enter
adc
icebp
scas
test
mov
pop
rcrl
inc
push
cmp
imul
pop
jl
shll
jl
cwtl
pop
shrb
mov
dec
adc
xchg
pop
fsubs
sub
hlt
leave
jle
out
enter
ret
cld
sub
movsb
into
mov
ror
out
and
scas
aad
insl
pop
adcl
icebp
fs
cmp
xorl
fcmovbe
and
mov
in
outsl
stos
jo
xor
and
ljmp
cmpsl
cmpl
add
insb
xchg
jns
xchg
xor
xor
nop
lret
leave
pop
aad
lcall
dec
neg
insl
xchg
dec
stos
test
idiv
aaa
bound
sahf
push
shlb
popf
jle
dec
sti
shll
pop
jle
pop
pop
push
bt
ret
lods
stc
decb
jl
dec
inc
cmp
adc
sub
adc
xor
movsb
jmp
mov
shr
xchg
push
lahf
aaa
cld
loope
js
test
hlt
mov
pop
jo
dec
dec
or
mov
stc
dec
lcall
cld
addr16
xor
stc
and
push
cwtl
rcrb
mov
call
gs
fsubs
iret
fdivs
mov
sbb
call
insb
sbb
scas
cmp
adc
jbe
pop
lret
cs
loopne
scas
and
sub
das
repnz
ja
lods
ret
and
cld
add
inc
inc
addr16
and
jne
cld
jge
dec
xchg
dec
pop
xchg
outsb
or
pushl
dec
aaa
or
inc
xchg
add
lcall
jnp
or
and
lods
or
push
mov
lods
fdivl
inc
cmpsb
fisttps
push
lods
and
push
test
fiadds
sub
jae
mov
lds
sbb
adcb
xor
dec
push
adc
mov
arpl
pusha
das
bnd
mov
and
jmp
jecxz
add
pop
icebp
pop
clc
adc
xchg
jl
sti
jae
add
testl
add
test
cmp
mov
mov
jb
mov
in
pop
inc
mov
push
iret
mov
fdivrs
test
mov
or
mov
addl
mov
and
aas
jb
das
shll
or
in
jle
in
sub
jbe
cmp
mov
mov
cmpsl
mov
fstl
imul
xor
orb
cli
dec
ja
pop
mov
outsl
dec
imul
and
repnz
imul
test
xor
pop
push
mov
mov
push
loopne
out
mov
bound
call
mov
jne
mov
push
jne
movsb
jno
out
lods
and
pop
rorb
imul
cmp
add
in
add
in
icebp
es
into
dec
repz
mov
int3
jge
lret
mov
pop
mov
js
je
xor
xor
in
out
dec
mov
xchg
hlt
inc
stos
pop
cmp
jmp
adc
jmp
shlb
add
and
adc
push
add
push
add
push
cltd
push
int3
cmp
pop
inc
test
in
les
cs
or
std
outsl
cmp
sub
je
sub
hlt
inc
or
iret
das
xchg
test
pop
dec
push
ljmp
mov
dec
clc
aaa
fisubrl
or
inc
pop
mov
push
jge
cmp
rol
jecxz
scas
fs
ja
xor
jmp
lcall
add
lret
pop
into
out
aam
inc
ja
inc
cmp
sbb
sbb
int
dec
mov
inc
enter
nop
cld
mov
jo
lcall
pop
jge
adc
loope
fldpi
pop
les
xchg
mov
mov
incl
add
ds
js
jno
gs
xor
xchg
repz
data16
add
insb
test
pop
lods
cmp
mov
push
stc
xchg
out
scas
sub
push
cli
pop
std
js
add
pop
inc
xchg
jo
push
in
push
adc
add
repz
mov
lods
icebp
stc
bound
mov
push
je
in
jecxz
pop
and
call
iret
jb
fs
aad
shrb
jl
jne
shrl
xor
lcall
mov
outsb
mov
lods
stos
jae
cmp
in
cmp
mov
lods
push
ljmp
fldcw
adc
jg
xchg
pusha
dec
dec
jecxz
xchg
or
add
jo
das
jbe
xchg
sbb
add
popf
insb
sbb
add
jecxz
inc
pop
xor
mov
sub
mov
push
mov
jb
pop
push
rcrl
or
jmp
xchg
subb
cmp
mov
mov
adcb
cmp
or
scas
pop
rorb
ds
mov
push
sub
jle
loopne
push
xlat
in
jle
pop
test
out
dec
sub
mov
js
jle
cwtl
add
pop
adc
dec
ljmp
jmp
aad
loop
nop
icebp
out
out
out
mov
sbbl
arpl
out
popf
pop
sub
inc
cmp
jmp
stc
lret
mov
arpl
repnz
inc
jns
cmpsb
mov
jecxz
shrl
pop
daa
sub
rcrb
pop
outsl
xchg
pop
xchg
sub
or
fnsave
sub
insl
sbb
jmp
in
add
jge
out
cmp
daa
std
mov
jge
mov
xor
xchg
mov
addr16
sarl
push
cs
jg
lret
jnp
add
sub
inc
cmp
movsl
inc
pop
and
inc
jge
lods
int
jb
in
cmpsl
lds
jne
jle
cmp
mov
test
repnz
rorb
ret
jmp
popa
or
arpl
imul
repz
adcl
mov
scas
jecxz
dec
rcr
test
rol
xor
std
xchg
or
ret
inc
xor
cmpsl
psllw
sarb
jns
or
ror
data16
int
mov
dec
dec
test
mov
mov
mov
add
icebp
das
push
ret
mov
adc
push
mov
sbb
ret
dec
shl
aad
xchg
imull
iret
sbb
xchg
fbstp
push
adc
lea
daa
fdivs
into
cmp
in
out
adc
in
and
xchg
mov
or
ljmp
popf
dec
aam
jl
xchg
or
lock
or
mov
loop
add
jecxz
scas
cli
mov
ljmp
pop
cmp
fbld
jno
xor
insl
pop
out
add
movsw
xchg
pop
lods
ficoml
aam
imul
ret
dec
mov
imul
pusha
mov
xchg
mov
push
xchg
lds
lahf
push
fwait
mov
push
aam
xor
ja
or
addl
pop
pop
rolb
adc
dec
mov
push
js
mov
pop
rolb
push
int3
imul
xchg
shll
fscale
pop
pop
je
insb
lret
pop
xchg
fldl
sahf
xor
test
out
mov
insb
sub
xor
adc
repz
fcom
sbbb
into
cltd
push
mov
ljmp
arpl
xor
and
and
add
pop
rcrb
cltd
push
jge
jno
fildl
popa
pop
movsb
xchg
fldcw
lret
sub
mov
or
out
push
xchg
movsb
jle
xchg
sbb
xor
stos
pop
sbb
inc
adc
sub
sbb
sub
gs
sub
mov
leave
cmp
shlb
dec
fs
jl
adc
decb
cs
sbb
stc
stos
out
jg
pop
sbb
outsl
add
xor
push
jbe
int3
xchg
in
cwtl
daa
adc
inc
xchg
jo
rcrb
dec
push
in
push
test
call
test
xlat
icebp
cmp
lahf
xor
mov
add
es
repz
adc
mov
mov
inc
mov
cld
mov
add
push
fs
repz
call
nop
jne
pop
xchg
dec
das
sbb
test
pop
aad
fdivrs
cld
lds
cmpsl
push
and
imul
xor
xchg
lock
xchg
mov
sub
lret
adc
dec
mov
xlat
jno
mov
rcrl
xor
xor
cwtl
std
ljmp
rcrb
out
fiadds
or
pop
xchg
stc
xchg
and
movsb
push
adc
mov
dec
rolb
adc
push
dec
mov
push
push
mov
adc
and
jo
xchg
xchg
les
icebp
mov
loope
ljmp
into
and
lret
daa
adc
push
pop
mov
mov
aas
clc
cltd
mov
add
or
lret
sbb
cmp
dec
xchg
lds
and
inc
insl
mov
sbb
rcr
sbb
mov
adc
popa
sub
mov
rcr
mov
stos
divb
sbbb
leave
clc
outsb
inc
sub
sub
dec
pop
mov
or
or
add
out
je
sub
arpl
pop
cmp
jp
cltd
cmp
inc
xchg
push
pop
stos
dec
mov
adc
test
adc
pusha
push
mov
hlt
fwait
les
out
xor
in
mov
mov
popf
js
xor
nop
lret
jo
push
inc
push
cmp
mov
mov
imull
loope
divl
fwait
sub
jbe
scas
or
fcmovbe
notl
dec
imul
shl
jb
add
dec
push
cmp
int
std
sbb
fists
mov
pop
adc
sbb
aas
imul
mov
cli
test
aas
js
mov
xchg
nop
jle
lret
push
mov
and
roll
and
push
ret
aas
cld
pop
sub
inc
cmp
pop
inc
mov
in
dec
sbb
add
add
insl
lea
and
sub
into
out
xchg
divb
xor
cmpsb
mul
sahf
pop
test
push
test
cmpsl
xchg
mov
inc
mov
and
popf
hlt
xor
mov
fldenv
and
or
popa
jo
hlt
mov
and
adc
add
aas
out
mov
stos
add
jg
mov
xlat
add
outsl
sub
push
or
jge
pop
jl
fildl
in
jb
sub
in
fisttps
push
lahf
and
cmp
in
cltd
lds
jecxz
or
xorl
or
fists
mov
or
adc
jg
fwait
orl
adc
jp
jmp
es
punpcklqdq
pop
lret
into
arpl
les
jl
sub
fcoml
cmpsb
fildll
fs
enter
xor
and
or
test
adc
outsl
fcmove
mov
or
pop
dec
and
sahf
xchg
fst
adc
lock
das
out
push
loopne
and
lcall
cmpsb
into
ret
jns
adc
ret
rorl
inc
js
insb
push
push
cmp
into
sub
int
mov
adc
ret
xorl
jecxz
shlb
and
push
jns
push
std
mov
xchg
cmpsl
push
push
jns
jp
shlb
iret
jnp
xor
pushf
pusha
cmc
in
loopne
xchg
jl
pop
and
adc
cli
push
subl
adc
popf
int
or
ret
jmp
pusha
jecxz
pop
sti
sarl
scas
mov
mov
dec
mov
je
fsubr
aam
cmpxchg
inc
cmp
xlat
inc
in
scas
fisttpl
imull
lret
popa
mov
add
push
lret
add
sahf
fisubl
xchg
lret
sbb
arpl
push
test
inc
loopne
ss
stc
arpl
mov
and
nop
push
dec
cmp
jne
in
repz
movsl
mov
aam
aaa
pop
stc
repz
fs
push
jno
jnp
popa
mov
lahf
roll
lret
sub
in
repz
xchg
add
jle
out
dec
mov
or
sbb
loopne
add
out
jbe
add
cwtl
pop
fisttpll
cmpl
pop
xor
cmp
incl
mov
cmp
mov
lds
jge
popa
push
sar
xchg
fisubrs
sub
outsl
sbb
cmpsb
mov
mov
xchg
add
dec
fwait
sarl
jo
int
mov
mov
in
pop
flds
xor
xchg
out
or
cmp
mov
das
mulb
add
sub
jbe
fwait
dec
pusha
aas
mov
cmp
and
ficomps
fstl
mov
mov
push
call
add
stos
cmp
cli
xchg
inc
cwtl
adc
pushf
push
mov
fbstp
mov
fs
cmp
xchg
inc
mov
loop
cmp
inc
imull
xor
leave
sbb
fs
mov
inc
mov
fisubrs
pop
testl
add
je
scas
movsb
out
push
lret
int3
push
push
addr16
js
add
jb
dec
mov
add
in
test
ss
inc
push
fdivl
stos
mov
outsb
das
decl
adc
rcrl
gs
pusha
loopne
adc
sbb
lea
push
loope
sub
mov
mov
ret
mov
inc
loop
and
jle,pt
push
mov
repz
scas
pcmpeqb
rep
test
push
xor
aaa
lods
cwtl
mov
sub
xchg
in
adc
sub
mov
and
or
lret
jnp
mov
ss
ljmp
adc
arpl
lret
mov
mov
fdivrl
jne
test
dec
add
aas
out
popf
test
mov
lret
out
in
dec
sti
adc
idiv
stc
lret
sub
shrb
and
pop
xchg
add
ds
pushf
pop
lret
mov
loop
xchg
cmp
jecxz
mov
pop
fsubr
out
mov
repnz
into
out
cmp
rcll
cmp
and
js
repz
mov
call
pop
add
add
pop
xor
fld1
cltd
mov
ret
rcrb
sub
or
clc
mov
je
or
dec
add
enter
jns
push
outsl
pushf
mov
push
adc
push
adc
mov
movsl
adc
das
jp
sub
xchg
lds
ficoml
je
sbb
into
push
test
cmp
gs
adc
cld
cmp
outsb
and
popa
test
and
mov
xchg
xlat
pop
into
mov
dec
ret
mov
cmc
aad
push
xchg
xor
lcall
loop
lds
loop
xor
es
mov
lcall
lea
cmc
inc
and
pusha
cmpsl
neg
fbld
jne
sbb
xor
pop
inc
or
or
xchg
mov
mov
push
xor
test
cld
mov
mov
mov
scas
movb
inc
mov
sub
dec
mov
adc
jnp
sub
sbb
lea
sub
hlt
push
call
test
xor
ret
rcll
mov
lcall
jmp
stc
push
jnp
cmp
ja
data16
jl
xchg
mov
xchg
clc
xchg
out
xchg
push
roll
aaa
pop
in
push
xlat
sub
flds
fs
test
aad
xor
je
inc
loope
mov
xlat
sub
stos
cmc
sub
xchg
and
pop
xchg
xor
fnsetpm(287
in
repnz
and
aam
orl
xchg
mov
fstpl
out
cmpsl
hlt
xor
add
or
loop
js
shll
and
and
test
notl
sti
ret
and
mov
pop
mov
xor
adc
scas
jae
decb
nop
sbb
repz
dec
add
scas
mov
sarl
xlat
dec
sub
inc
xor
and
mov
add
sarl
pop
xor
and
dec
xor
add
loop
push
in
jne
adc
mov
inc
xchg
das
bound
imul
push
repz
fildl
pop
std
push
ja
orb
mov
add
inc
rorl
out
mov
addr16
xorl
pop
mov
stc
sub
imul
std
jle
add
je
incl
inc
or
dec
fcoms
test
icebp
mov
rol
add
xchg
mov
sahf
or
adcl
dec
loopne
sbb
call
mov
sub
cmpb
add
std
aas
push
add
mov
push
sub
cs
push
int
sahf
inc
repz
cmp
ror
andb
ljmp
test
addb
jae
je
in
icebp
sub
arpl
mov
push
cmp
add
mov
xor
das
mov
popa
mov
ds
sbb
insb
out
pop
and
jae
fwait
cwtl
clc
rcll
xchg
sub
je
js
mov
scas
iret
bound
xchg
xor
stc
test
fisubrs
das
lret
cs
fildll
aam
mov
cmpsb
ficoml
pop
mov
cmp
gs
mov
and
shrl
andl
and
sub
mov
repz
mov
pop
mov
sbb
mov
cmp
push
mov
pop
ljmp
loope
sbb
fs
cmp
out
in
mov
fcmovu
inc
push
cmc
mov
jnp
jo
xchg
mov
int3
es
or
mov
mov
popf
test
scas
ss
jb
rolb
clc
sbb
orb
sub
xchg
dec
imul
or
mov
movsb
ljmp
loop
and
jl
negb
jbe
pop
out
push
enter
rcrb
pop
outsl
mov
xor
mov
push
repz
push
je
sarb
adc
test
mov
in
cmp
sub
fdiv
fdivrs
xor
icebp
push
rcll
adc
lcall
xor
mov
sti
push
leave
mov
cmpl
push
jg
pop
pop
lods
sub
push
xchg
mov
pusha
jmp
jl
std
cmp
xchg
das
pop
hlt
lret
push
insb
push
cmpsl
push
mov
dec
mov
ret
push
stc
mov
lahf
mov
lea
bswap
sbb
mov
in
roll
xchg
aam
or
out
sbb
ja
lea
lcall
scas
fbld
mov
xor
out
add
imul
add
sub
icebp
dec
popf
cmp
lahf
cmp
mov
push
inc
pop
popa
push
jnp
mov
test
push
xchg
or
vpand
cltd
stos
mov
or
adc
in
flds
in
jns
es
jno
es
xchg
fs
or
movsl
ds
std
jb
inc
cmp
and
int3
or
cmc
icebp
hlt
push
push
xchg
inc
and
jge
ds
cmp
outsl
cwtl
int3
arpl
or
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
popa
mov
add
hlt
std
mov
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
