push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
les
jl
rcrl
jl
cs
cmp
and
popa
pusha
or
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
mov
dec
fcomps
xor
push
inc
sub
andl
mov
xlat
ss
fistpll
inc
and
lcall
fmul
inc
adc
sti
add
dec
lahf
lods
pop
dec
cli
test
adc
pop
pop
arpl
xchg
divl
movsl
mov
andb
push
adc
out
xchg
pop
lahf
sub
aad
cmp
push
je
stos
adc
cmpsl
outsl
fildll
adc
scas
lret
push
add
fsubrl
out
and
push
and
cmp
adcl
cmp
mov
xor
into
mov
in
outsl
or
je
pushf
mov
dec
and
pop
inc
arpl
xchg
push
in
jns
or
lcall
insl
out
insb
addr16
rcrl
add
add
dec
mov
test
lret
sub
call
sbb
icebp
cmp
cwtl
sbb
dec
push
mov
stc
xor
rcrl
imul
js
xchg
push
push
mov
pop
mov
push
jmp
mov
loop
fwait
mov
cltd
jno
jbe
and
outsl
jle
jo
mov
sbb
add
push
xor
xchg
pop
popf
mov
ret
pop
enter
push
xchg
out
jnp
fs
cmp
paddw
in
clc
insb
dec
shll
lret
cmp
minps
push
or
mov
jp
sub
bound
loopne
fistps
ljmp
mov
or
andb
cmp
sarb
out
or
xorb
mov
mov
jnp
sub
cmp
sub
xorl
pop
repz
sbb
out
jle
data16
popf
fcmovnb
outsb
add
mov
outsl
out
fists
jbe
ljmp
pop
lahf
popf
out
arpl
and
jo
fwait
test
xlat
pusha
xor
adc
rorb
repnz
ljmp
adc
sub
jnp
push
leave
stos
je
push
mov
push
mov
aam
mov
inc
ja
cltd
dec
cmp
push
push
sub
cmpsl
andb
aam
cmp
aas
mov
dec
ss
nop
sbb
inc
pusha
cli
stos
push
inc
es
mov
mov
jnp
inc
jge
stos
jmp
fstps
insb
xchg
ret
dec
add
jo
mov
scas
dec
stos
or
cltd
inc
xchg
insl
outsb
inc
hlt
cmpsl
cmp
ja
dec
cmp
mov
jg
ljmp
pop
and
in
int3
mov
jae
jne
xor
arpl
push
sti
aaa
jno
lret
lods
sub
mov
sbb
lods
jecxz
je
into
test
pusha
add
sbb
mov
repz
push
push
and
mov
in
push
add
les
push
lahf
addr16
inc
mov
push
sbb
rolb
push
stos
sub
push
aad
lock
outsl
fbld
stos
fcomi
xchg
jmp
mov
jns,pn
inc
ds
inc
outsb
inc
shlb
fwait
inc
mov
adcl
add
stos
pop
repz
rorl
pusha
or
pop
pop
jg
mov
subl
in
ja
dec
dec
cmp
xchg
ret
xor
cltd
mov
cs
mov
xchg
mov
dec
push
jge
std
pop
or
repz
dec
sti
pop
outsb
hlt
aam
dec
and
jmp
xorb
mov
imul
outsb
es
sahf
les
data16
adc
out
and
add
push
mov
incb
pop
call
sub
sbb
ljmp
int
or
xchg
fld
xor
mov
lods
into
repnz
or
pop
inc
movq
push
hlt
adcl
sarl
sub
fisubl
add
xchg
dec
icebp
xchg
xchg
mov
andb
negb
repnz
cmp
enter
stos
mov
pop
xlat
push
push
dec
inc
fildl
in
outsb
shrb
add
cmpsb
pop
inc
push
popa
xchg
ljmp
push
pop
xchg
dec
mov
insb
adcb
sbb
lret
add
pop
scas
daa
sub
inc
or
add
or
arpl
cmp
xor
cmc
push
and
add
mov
fnsave
shl
sbb
pop
jmp
dec
jae
mov
mov
js
adc
sbb
pop
sub
mov
dec
add
subl
add
imul
sarb
ret
inc
data16
dec
jae
mov
icebp
ja
xchg
pop
and
test
mov
sbb
dec
test
mov
xchg
sahf
aas
add
add
cmp
push
cmpl
pslld
insl
sub
mov
les
sub
popf
add
xchg
cmp
lret
or
lcall
lret
xor
lret
cmp
aam
ret
arpl
divl
mov
mov
jnp
mov
decl
movsl
clc
xchg
mov
lds
out
insl
mov
push
xchg
out
mov
pop
jne
push
int3
and
cmp
pop
or
mov
call
xchg
test
fisubrl
xchg
and
or
ret
repnz
stc
rolb
mov
shrl
daa
in
inc
mov
pop
or
or
jno
xor
adc
pop
inc
dec
jnp
xchg
xor
call
int3
and
or
jnp
push
hlt
sarb
loope
and
sub
mov
lret
fistpll
dec
mov
push
pop
mov
adc
int3
fs
dec
and
sbb
sub
sbb
xor
mov
ss
fistpll
gs
insb
xor
xor
inc
clc
and
leave
xor
fs
push
pop
and
mov
pop
mov
insl
outsb
dec
jbe
cmp
mov
gs
pushf
movsb
push
xchg
loope
jp
pop
lret
popa
lcall
mov
aas
push
pusha
cmpsb
sar
inc
push
js
in
ja
xchg
dec
subl
jecxz
call
loop
xadd
pop
out
insl
dec
dec
shl
mov
jmp
cld
xorl
cmc
stc
out
icebp
adc
loope
push
outsl
subb
and
loop
cmp
pop
out
mov
push
cmc
out
jecxz
jecxz,pn
lods
popf
ficomps
jecxz
popa
mov
aas
pushf
mov
mov
movsl
xchg
call
add
push
dec
xor
lret
ja
and
cwtl
cmp
cmp
push
or
sti
je
lahf
test
mov
call
cmc
pop
inc
in
and
insb
popf
sbb
add
adcl
scas
xorl
dec
test
mov
sbb
in
sub
or
mov
out
int3
add
push
loop
mov
mov
test
int3
xchg
mull
xor
mov
xchg
xchg
popf
outsb
mov
ja
fsts
mov
in
xchg
and
stos
mov
jo
mov
pop
testb
pop
daa
test
repnz
imull
and
fmull
lret
mov
in
adc
mov
sbb
sub
adc
stos
scas
addb
repz
jns
push
push
inc
ljmp
testl
cwtl
cmp
or
test
aad
icebp
addr16
mov
inc
shrl
or
xchg
inc
ja
int3
out
in
push
or
repz
sub
cmp
mov
imull
sbb
mov
in
add
movsb
fstpt
shll
mov
jl
push
daa
push
xchg
sahf
inc
cmp
push
mov
mov
adc
shl
mov
stos
sub
jnp
jne
and
cmpsl
sbb
aam
push
adc
inc
das
mov
popa
call
les
std
xchg
or
sub
imul
cmpsb
cmpl
loope
jmp
test
je
movsb
into
in
jbe
mov
es
push
cmp
dec
rcrb
mov
xor
cmp
cmp
lock
pusha
xchg
mov
add
or
imul
aad
repz
orb
adc
scas
push
pop
xchg
pop
fiadds
stc
push
xchg
adc
outsb
push
mov
pop
cmovno
insb
push
scas
dec
adc
inc
push
mov
pusha
test
ret
ret
mov
cmp
rcl
pop
addr16
hlt
xchg
iret
repnz
mov
push
clc
in
cmp
cmp
inc
inc
loopne
jne
sub
leave
dec
or
or
test
loope
inc
test
repnz
ret
jo
cmp
icebp
cli
lret
movsl
fmull
mov
rol
inc
in
inc
push
out
out
jl
mov
lock
or
cmp
nop
push
loop
lret
mov
out
outsb
cmp
xchg
jle
iret
repnz
jnp
or
mov
push
cli
clc
adc
lret
jne
mov
push
cmc
cmp
out
jl
cmc
pop
clc
sub
mov
xchg
sbb
mov
add
ret
sarb
aad
iret
loop
push
mov
cmpsb
aam
mov
out
xor
outsb
cld
cmc
xchg
pop
jae,pt
rorl
aam
cmp
cltd
xor
adc
pushl
pop
sub
in
mov
pop
aaa
int3
iret
pop
test
movsb
test
mov
daa
xchg
test
in
repnz
fnstsw
fsubl
mov
fs
sbb
mov
dec
pusha
jl
lods
test
neg
and
dec
cmp
jge
dec
jbe
test
pinsrw
jg
adc
cmp
movsl
jmp
xlat
push
jmp
xchg
pop
outsb
repnz
cli
stc
mov
aam
push
das
push
lods
aaa
push
xchg
sti
mov
lea
jmp
or
adc
les
add
std
dec
fbld
xacquire
sbb
in
fs
or
xchg
mov
lods
add
shrl
mov
xor
divb
jne
lds
pop
xlat
jb
cmc
in
shll
or
jo
mov
add
push
test
mov
addr16
dec
pusha
or
dec
cmpsl
jl
jle
loopne
leave
mov
and
mov
ret
bound
adc
mov
sub
jp
mov
or
popa
push
ds
add
enter
mov
fisubs
xchg
cs
dec
push
out
call
pop
push
jmp
dec
pop
in
xchg
jmp
add
jge
inc
xor
ja
into
adc
dec
nop
xor
lods
popa
movsb
mov
mov
xchg
clc
gs
cmc
or
push
int
or
mov
outsl
and
jmp
lahf
push
or
lods
dec
add
mov
add
shl
mov
jle
outsl
sub
xchg
shlb
fisubs
pop
je
cmp
push
call
loopne
das
sti
insb
unpcklps
push
xchg
xchg
dec
adc
mov
mov
sbb
in
push
mov
mov
pop
xchg
pop
sbb
addr16
add
mov
and
std
mov
adcl
fdivs
push
ss
fs
mov
fdivl
in
lahf
lcall
cs
push
mov
inc
fdivr
in
mov
sbb
cld
sub
in
xchg
mov
cmp
adc
aam
mov
jne
les
dec
daa
xchg
mov
sbb
xchg
jp
or
pop
imul
ret
sbb
lods
int
aaa
loope
pop
add
popa
cld
mov
sub
in
aaa
adc
xchg
repnz
aad
cmp
pop
inc
xchg
and
or
or
sarb
loope
push
adc
mov
add
out
dec
inc
jmp
xlat
inc
or
psubsw
inc
dec
lock
dec
mov
adc
mov
jge
mov
enter
in
sbb
popa
mov
test
jecxz
lret
inc
inc
cli
jecxz
sti
xchg
mov
and
add
out
out
test
outsb
stc
sub
add
push
sbb
adc
adc
add
shll
in
mov
sub
jo
call
inc
shl
xchg
pop
loop
ljmp
je
push
lret
lock
cld
xor
cmp
rcll
call
dec
lahf
pusha
cmpsb
in
jle
rcl
push
fadd
xchg
ljmp
subl
xor
and
inc
and
gs
pop
cld
lcall
jg
ret
mov
inc
outsl
stos
ret
push
sbb
idivl
inc
mov
notl
mov
movsl
stos
cltd
fcmovb
inc
jmp
es
push
je
daa
inc
sahf
and
pop
int
sahf
aad
or
mov
rorl
jg
cld
sti
xchg
xor
out
push
fbstp
popf
inc
add
fidivs
sbb
adc
xchg
inc
xchg
mov
and
pushf
dec
daa
add
xor
cmpb
das
adc
hlt
sub
loopne
fwait
jl
adc
into
dec
bound
jne
int
or
inc
jl
in
inc
in
inc
pop
loope
push
xlat
mov
cwtl
xchg
fs
loop
leave
imul
dec
icebp
mov
xchg
mov
adc
idivb
test
out
mov
sbb
mov
sbb
addl
stc
and
cmp
cs
mov
inc
jb
mov
sub
rclb
or
mov
insb
test
xor
sbb
rolb
fsub
pop
cmp
jmp
mov
test
ficompl
jle
subb
insl
jnp
orb
repnz
out
pop
mov
leave
cmp
xor
pop
jno
jne
and
xchg
jns
movl
inc
xchg
xchg
sti
pop
adc
push
fwait
xor
arpl
out
mov
inc
cs
dec
jo
mov
xchg
jne
pop
sbb
ret
mov
out
sti
movsl
arpl
arpl
mov
or
neg
pusha
xchg
xchg
cmpsl
and
mov
das
ljmp
cmc
addb
pop
xor
add
adc
jbe
mov
jmp
data16
jecxz
push
adc
mov
inc
shl
pop
lods
jge
int3
gs
lods
or
jae
adcb
mov
aas
mov
mov
push
xor
lahf
leave
adc
arpl
jecxz
mov
or
mov
es
popf
add
andl
inc
movsb
xchg
outsb
clc
cmp
sub
inc
hlt
dec
movsl
adc
loopne
dec
cmp
sti
adc
jmp
and
mov
je
pushf
test
sub
add
mov
cmpsl
adc
push
push
dec
add
ds
scas
pop
mov
loopne
sti
sahf
xor
sbb
push
je
push
movb
adc
ja
pop
sub
sbb
xor
gs
ljmp
jmp
shlb
and
pop
scas
pop
test
mov
xor
lahf
cmp
adc
pop
push
mov
push
add
popf
sub
jnp
or
inc
sub
mov
test
cmp
sub
or
inc
mov
es
outsl
loopne
sbb
movl
adc
jne
pop
inc
rep
or
add
push
outsl
pop
sbb
push
pushf
popa
dec
or
mulb
fsubs
pop
icebp
fdivrl
fstpl
bound
outsb
dec
xor
sub
jne
fldl
push
jmp
inc
ljmp
sub
and
cmp
push
sbb
fidivs
mov
xchg
fnstcw
data16
dec
xor
aam
lods
cli
adc
loop
sahf
add
xlat
cmp
lea
rorb
aas
sbb
add
or
jb
xor
popf
push
inc
dec
mov
push
mov
jne
sub
cmp
int3
add
cmp
test
mov
les
push
xlat
xchg
xchg
outsl
pop
je
repnz
and
int3
add
pop
pop
shll
insb
and
inc
push
add
test
cmp
cli
movsb
outsl
push
xor
mov
rclb
adc
xor
dec
mov
mov
fisubrs
inc
mov
add
dec
push
mov
sbb
jecxz
mov
add
pmaxub
ficomps
sbb
xchg
push
mov
xor
xchg
add
loop
leave
data16
push
pop
mov
jle
pop
jle
out
jge
ljmp
jmp
xlat
xor
sti
mov
jp
icebp
push
sar
jecxz
ret
cmp
cmp
and
std
dec
or
sahf
shl
cmp
or
or
sub
repnz
jecxz
jecxz
pop
inc
or
adc
sub
and
jbe
inc
out
sbb
sbb
aas
pop
adc
movsb
cmp
push
add
pop
mov
mov
cmp
mov
push
pop
jb
notl
sbbb
cmp
ret
xor
push
adc
in
and
je
push
pusha
add
inc
imul
mov
jo
std
mov
mov
shl
sbb
cmp
pop
mov
shr
jl
pop
loopne
cmc
pop
jl
rcr
and
mov
loop
enter
push
sbb
hlt
mov
lret
adc
jbe
sub
stc
or
in
push
in
adc
sbb
cwtl
scas
cmpsl
inc
in
loopne
sub
push
inc
test
test
psubq
out
inc
jo
and
mov
rclb
insb
test
adc
shl
lds
daa
cltd
jnp
js
push
pop
sub
ja
std
pop
and
lock
loop
dec
jl
jg
cli
cltd
fadds
mov
popa
test
movsl
pusha
jno
and
sub
dec
into
test
cmc
ret
xchg
mov
add
mov
mov
pop
loopne
inc
xchg
lods
cld
dec
test
jecxz
add
sbb
in
pop
push
inc
jno
jp,pn
scas
inc
or
cld
xlat
mov
notb
orb
xchg
mov
in
cmp
add
lods
imul
inc
sub
pop
into
dec
add
pop
pop
and
mov
pop
pop
cmp
out
sti
sub
nop
cld
lcall
mov
dec
xchg
stos
sahf
pop
jne
pushf
jbe
mov
test
mov
lret
fistpl
clc
mov
xchg
jl
mov
popf
in
pop
xchg
jecxz
fcmovnu
cmp
jbe
pop
pop
mov
js
pop
in
ja
pushf
add
xor
bound
push
out
pop
adc
xor
stos
pop
sbb
ds
xchg
scas
es
pop
addr16
jbe
push
lods
xchg
adc
xor
pop
aam
sub
pop
rolb
mov
inc
fucomp
mov
and
and
sahf
and
daa
mov
fcmovu
or
mov
decb
push
mov
mov
mov
adc
pop
daa
sub
popa
push
sbb
and
mov
mov
and
xchg
mov
gs
dec
repnz
test
sahf
xor
pusha
cli
dec
dec
lahf
dec
push
add
nop
mov
and
cmpsb
mov
xchg
rcl
jl
or
dec
sbb
xchg
aaa
out
je
mov
stc
inc
stos
cli
lret
lret
add
pop
fldl
aad
mov
insl
in
lahf
lods
movsb
and
jecxz
fwait
dec
lods
lods
sbb
pop
lds
sbb
cmp
shl
mov
popl
cmp
shrl
pop
mov
int3
idiv
aaa
push
push
sarb
cltd
in
cmc
mov
imul
adc
jmp
imul
fadds
ljmp
adc
sbb
xorb
cmp
out
and
loop
bound
adc
mov
out
xor
jnp
pop
inc
dec
fbstp
inc
into
nop
sub
jp
fwait
inc
out
or
jmp
mov
sbb
repnz
jmp
and
imul
loope
mov
leave
jo
fistpll
sti
add
xor
or
outsb
cltd
movl
hlt
cwtl
or
hlt
cwtl
shrl
mov
inc
ss
loopne
jae
push
xor
mov
ljmp
ret
mov
mulb
dec
sti
fidivl
mov
mov
xchg
out
mov
mov
call
push
mov
leave
lea
pop
mov
lds
iret
lahf
cmp
pop
inc
push
cmp
xlat
xchg
jecxz
jo
xchg
mov
movsb
mov
lcall
xchg
and
xchg
sub
dec
sbb
adc
or
icebp
pop
xchg
sbb
fists
and
out
mov
pop
aad
loopne
inc
adc
notb
sarb
bound
xchg
push
mov
cwtl
insb
sbb
jle
jp
pop
cs
adc
jne
adc
movsb
or
pushf
jns
in
xchg
add
pop
out
call
pop
jb
mov
pop
mov
mov
xor
stos
mov
jge
dec
rcr
mov
pop
pop
popf
ret
sbb
mov
outsb
cmc
xchg
andb
mov
or
imull
test
roll
mov
cmpsb
hlt
or
jb
in
cld
in
hlt
pop
fimull
jg
into
scas
imul
addl
jle
fdivrs
and
sbb
cs
in
repz
data16
sub
or
mov
and
cmp
rcrl
jl
nop
adc
pop
add
xchg
scas
ret
push
fstps
lret
and
cmp
pop
mov
jbe
ret
enter
mov
jae
sarb
sbb
and
bound
add
mov
pop
aaa
sub
and
or
push
hlt
pop
cmp
xchg
or
cmp
sbb
ret
cmc
int
jmp
and
push
cmp
sub
xchg
add
jnp
jmp
cmp
sbb
dec
out
inc
jle
cld
pushf
popa
push
ss
pop
sbb
push
fs
jge
mov
push
int3
out
scas
xor
pop
and
dec
cmp
xchg
call
mov
and
add
xchg
sbb
in
test
push
inc
xlat
push
jmp
fidivrl
cmc
xchg
pop
xor
or
out
sub
inc
adc
xor
fcmovnu
das
jo
push
lds
loopne
loopne
xor
mov
daa
mov
mov
imul
aas
or
enter
dec
ja
adc
or
sbb
xchg
pop
or
dec
xlat
jnp
imul
adc
sub
repz
rcrb
sub
jns
xor
pop
add
xchg
mov
sub
mov
xor
mov
jns
jge
mov
inc
push
lahf
mov
mov
clc
lahf
movsl
and
pop
and
push
mov
iret
xchg
dec
jmp
push
outsb
arpl
adc
daa
ss
lods
jp
and
int
mov
out
pop
clc
xchg
cmp
lock
into
mov
push
cli
add
push
mov
adc
notb
mov
insb
jecxz
push
sub
mov
sbb
in
push
stc
scas
mov
xorb
add
mov
adc
divb
imul
and
add
push
pop
cmp
pop
data16
iret
mov
lret
adc
and
loop
push
icebp
and
or
jno
cld
push
sub
jno
subb
inc
fdivl
jmp
sub
mov
into
cltd
sbb
ret
icebp
mov
les
loope
lret
cmpsl
push
dec
adc
test
sub
cmp
scas
or
mov
jne
dec
js
or
jmp
ja
jle
ja
lcall
stc
mov
sub
sarl
sahf
aam
iret
or
rorl
bound
pop
sub
cwtl
xor
push
pop
jecxz
push
int3
jb
std
jecxz
add
mov
mov
int3
pop
hlt
xorl
int3
mov
sub
jo
aad
out
test
pop
int
cmpsb
dec
fidivl
sub
jb
xor
push
fiaddl
push
jns
mov
fisttpll
cmc
shll
fld
push
push
jb
std
jmp
leave
and
inc
pop
pop
ret
pop
cwtl
ja
jg
mov
push
fcomi
sti
imul
sbbb
sub
in
scas
jb
lods
xor
inc
sbb
or
nop
xchg
sbb
nop
cmc
jnp
sarb
add
cltd
lds
sbb
int3
mov
mov
jno
push
mov
and
test
jmp
cmp
int3
mov
jb
rclb
cmp
call
popa
leave
lods
adc
sub
out
sub
cmp
ret
mov
pushl
das
pop
xchg
xchg
push
dec
cltd
add
mov
and
ret
stos
insb
pop
lods
mov
cmp
notl
aaa
mov
orl
cmp
cmp
dec
movsb
outsl
or
dec
push
aaa
mov
mov
out
inc
pop
sti
gs
andl
lock
dec
pop
dec
mov
jbe
xchg
imul
pop
mov
inc
js
mov
es
ficomps
orl
and
andb
hlt
push
sub
inc
and
xchg
loope
and
push
pushf
stos
or
jnp
js
enter
inc
stos
repnz
jbe
add
cltd
popa
ss
stos
pop
in
lods
scas
ja
cmp
jge
arpl
in
sub
clc
jbe
popf
cmp
loop
mov
out
es
test
lahf
fnsave
lahf
add
push
xor
jo
pop
cmc
jl
cmp
movsb
mov
sbb
frstor
add
scas
pop
into
stos
mov
scas
lcall
or
pop
call
mov
gs
les
add
and
sbb
add
adc
cmc
daa
push
push
mov
outsl
pop
aad
imul
sbb
cmp
xchg
sbb
pop
mov
scas
ret
mov
loope
nop
enter
mull
movsb
mov
daa
aas
lcall
hlt
mov
scas
orb
cmp
pusha
inc
dec
sub
cmpsl
mov
mov
lock
fucom
js
sbb
movsb
mov
pop
sbb
sbb
icebp
mov
jae
add
inc
inc
iret
push
scas
mov
in
addr16
sub
push
lahf
inc
les
aaa
pop
ja
inc
std
lock
sbb
loopne
jmp
imul
push
mov
orb
inc
adc
dec
pop
lahf
ja
movsb
push
daa
push
dec
push
push
lret
mov
movsb
aad
and
inc
in
push
sbb
mov
std
or
stc
sbb
add
or
add
outsb
mov
mov
sub
lcall
sahf
pop
rorb
inc
cltd
faddl
insb
out
popa
lock
cmp
out
mov
leave
cwtl
mov
mov
dec
fsubrp
data16
mov
xor
int
cmc
cmpsb
or
into
sub
addr16
mov
adc
xor
pop
rcr
mov
lods
lock
xor
in
sbbl
addr16
clc
mov
push
cmp
or
cmp
push
je
daa
inc
insb
movsl
movsb
cmc
dec
mov
and
lahf
cmp
fldt
rcl
insb
mov
fs
les
in
adc
in
adc
pop
cltd
in
sub
push
ret
jl
push
and
divl
xor
les
or
mov
sbb
std
jge
call
loopne,pt
dec
int3
mov
scas
sub
pop
test
pop
aaa
mov
lcall
aad
imul
mov
fiaddl
pop
bound
cmp
xchg
lods
lahf
mov
pop
lock
insb
sbb
jbe
push
adc
pop
aaa
dec
cmp
bound
mov
and
fcomps
adc
push
addb
xor
cs
ss
xor
jle
inc
idiv
mov
xchg
dec
rorl
lret
sub
mov
cmp
movsl
fisubrs
sbb
cmp
lret
add
adc
pop
push
arpl
sti
cmp
cs
jmpw
inc
lods
pop
es
test
push
stos
out
aam
mov
ret
fwait
in
pusha
test
inc
cmp
decl
scas
pop
lods
das
xlat
mov
aaa
iret
and
sub
outsl
movsl
imull
sub
jmp
push
sbb
xor
sub
out
out
bound
loop
cmp
adc
shll
shll
aas
or
xchg
aaa
cmp
mov
sbb
push
push
dec
fwait
sbb
insb
xchg
xchg
dec
dec
mov
add
jno,pt
push
dec
add
or
add
lea
add
das
pushf
dec
stos
insb
pop
int3
pop
das
jb
xor
ljmp
repnz
xchg
pop
pop
inc
or
mov
ds
push
push
and
stos
mov
push
lcall
jae
fiaddl
pop
xor
jbe
cld
fcmovne
xor
mov
je
mov
cmp
orl
jp
inc
fwait
mov
dec
test
aam
add
repz
mov
mov
fdivs
or
lret
push
and
push
mov
xchg
add
or
dec
and
ret
inc
fldl2e
scas
mov
imul
cltd
sbb
pop
mov
add
fcmovne
cmc
jbe
lods
push
cs
lcall
aaa
xor
cmp
push
or
mov
add
jno
xchg
cmp
test
imul
xor
pop
lret
inc
fcomi
jae
mov
jp
pop
loope
enter
sbb
push
cwtl
dec
xchg
mov
jnp
pop
and
rcrl
out
adc
clc
add
sbb
mov
lods
repnz
shrl
aam
daa
les
add
mov
mov
xchg
je
add
lret
sub
comiss
lahf
mov
jp
imul
and
repnz
jnp
subb
mov
and
ret
push
stos
shrb
xor
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
test
pop
jl
dec
pop
jl
inc
cmp
adc
popa
lahf
stos
jp
cs
adc
mov
mov
enter
push
hlt
test
outsb
lcall
add
xchg
cwtl
add
inc
jae
gs
clc
jl
popf
fdivrs
test
pop
lret
lret
mov
push
insb
rcr
push
mov
or
std
movsl
rcrl
fcmovb
pop
xchg
notb
mov
sub
push
xchg
push
sbb
mov
icebp
adc
sbb
lods
mov
cwtl
jp
pusha
jno
inc
test
lret
test
push
dec
jp
sti
insb
jg
inc
cmp
cmp
xchg
add
jbe
int3
sbb
in
push
push
icebp
fdivrs
cmc
fcmovne
fidivrs
jns
lods
mov
add
scas
or
int3
outsl
mov
jb
les
mov
daa
cmp
cmp
dec
std
push
rorl
dec
idivl
cmp
push
stos
push
pop
ja
and
outsb
insl
es
xchg
and
xor
mov
test
dec
xchg
cmc
ljmp
rolb
int
push
add
icebp
cli
sbb
loop
ret
mov
push
mov
jne
shrl
sti
cld
and
sub
pop
jmp
pusha
sbb
xor
dec
push
adc
cltd
je
in
xor
fisubl
pop
dec
and
lock
sbb
adc
push
push
test
nop
sub
fistpll
les
pop
cmp
mov
inc
pop
jnp
inc
out
or
mov
mov
pop
fwait
gs
cmpsl
mov
vpmaxsw
cmp
test
jb
mov
scas
notl
dec
cmpsb
in
lret
xchg
or
xchg
scas
xchg
pop
insb
jno
pop
insl
cwtl
adc
cmpsb
sub
imul
fimull
jecxz
sti
sub
repnz
add
mov
movsl
gs
pop
pushf
or
jl
test
pop
insl
push
and
adc
leave
mulb
insb
jo
out
mov
ret
and
adc
xchg
je
mov
mov
shl
inc
push
and
mov
lahf
xchg
cmp
mov
xlat
mov
pop
xorb
or
movsb
fnsave
jb
dec
loopne
out
mov
movsl
stos
in
lret
mov
sub
imul
imul
outsl
adc
inc
int
daa
jecxz
in
aas
inc
add
lret
or
jnp
cli
or
mov
push
aad
jno
sbb
daa
stos
fs
sub
inc
push
je
push
add
inc
loope
push
adc
sar
dec
mov
div
xchg
aam
jge
lret
inc
sbb
and
jmp
repz
ja
mov
jne
sahf
fdiv
out
or
adc
dec
sbb
cltd
mov
incl
mov
push
fwait
jp
stos
jecxz
fistpl
mov
mov
jmp
dec
adc
cltd
mov
testb
data16
das
fwait
les
mov
into
sub
pop
loop
sbb
stos
mov
js
mov
rclb
xchg
repnz
sub
aas
jmp
jge
sub
sbb
sbb
mov
hlt
daa
lock
daa
or
icebp
sahf
push
sbbl
mov
jmp
aas
and
or
scas
pop
pop
cmpsl
dec
add
and
mov
push
mov
leave
and
dec
shrd
popa
cmp
xor
mov
inc
out
fstpt
fwait
into
jb
ja
pop
loop
or
mov
cmp
mov
and
ljmp
data16
xor
push
jno
popf
ret
xor
mov
adc
and
repnz
xchg
cmp
aaa
es
add
loope
shll
mov
je
mov
lock
cli
negb
sub
xlat
fcmovu
xlat
mov
ss
push
mov
cmpsl
int
xchg
ja
in
dec
push
mov
sub
dec
lock
mov
adc
aam
fwait
add
xor
mov
rclb
out
sbb
pop
rorl
cmpsb
repnz
test
ret
jmp
movsl
rcll
or
cmpsl
push
ljmp
lcall
jecxz
pop
shrb
dec
popf
repnz
sub
sbb
pop
callw
mov
clc
test
sbb
lods
in
inc
xchg
push
rol
in
int
into
cmp
and
or
sbb
ficoms
ja
sub
jecxz
adc
and
push
xchg
or
dec
sbb
gs
movsb
add
mov
or
and
subl
rcr
mov
jmp
push
sbbl
aaa
dec
sbbl
inc
sub
sbb
jne
fisubs
inc
jns
jns
sbb
lea
sub
aam
xchg
aas
jg
mov
bound
and
pop
fisubrs
sbb
mov
arpl
xchg
mov
add
mov
xor
mov
jnp
aas
daa
push
cmpsl
pusha
sub
cld
lret
or
push
jae
pop
mov
fs
ret
mov
jmp
jp
enter
pop
cmpsb
stos
fwait
push
out
xor
movsb
and
decl
out
ret
jns
sbb
popa
sti
out
mov
dec
jns
adcw
out
and
jo
jmp
pop
aam
xchg
push
sub
pop
pop
mov
les
int
xlat
cmp
pop
shl
inc
das
addr16
mov
pop
cmp
cmp
xor
fpatan
pop
jge
add
jbe
mov
test
ss
mov
adc
jno
mov
hlt
lcall
and
and
ret
inc
push
add
sbb
push
inc
pop
and
sub
insb
mov
push
scas
fwait
add
aad
pop
inc
lea
es
shl
and
inc
mov
idiv
lods
mov
dec
cli
mov
cmpsb
jecxz
lahf
push
push
ret
push
pop
mov
mov
mov
or
pop
ss
cmp
and
dec
loop
int
mov
imul
push
mov
pop
or
hlt
jp
push
sub
dec
inc
adc
jg
push
inc
inc
and
inc
and
dec
iret
dec
pop
or
js
cmc
push
xchg
mov
mov
fucompp
xchg
add
enter
fwait
dec
xor
out
fdivl
loop
mov
icebp
sbb
jo
jnp
ljmp
sti
cmc
sub
xchg
mov
and
fists
push
in
in
inc
adc
repz
ljmp
adc
mov
fsubrl
push
loopne
lea
repz
mov
andb
mov
xorb
call
cmp
hlt
xchg
mov
mov
mov
popf
jnp
mov
xchg
sub
adcl
cld
ja
mov
add
int3
scas
cmp
pusha
fucomip
mov
inc
cwtl
les
mov
xchg
xchg
jle
iret
sub
mov
mov
jmp
add
pop
adc
jecxz
fcmovnu
cmp
jbe
bound
aas
mov
out
add
outsb
add
dec
cmp
cmpsl
jp
out
inc
movsb
loop
pop
pop
jmp
mov
xchg
loopne
test
imul
xor
dec
lods
rorb
repnz
cmp
jns
jo
std
adc
mov
sahf
cmc
pop
jecxz
mov
aaa
std
pop
mov
push
mov
fdivr
es
xchg
xchg
xor
call
sub
stos
sahf
mov
pop
mov
pop
pop
inc
out
loop
and
push
or
jecxz
inc
outsb
mov
cmp
cmp
xor
pop
ss
call
fldcw
inc
sub
mov
inc
mov
out
adc
fiadds
lcall
dec
adc
lahf
popf
xchg
pushf
cld
cmp
cmp
push
call
sbb
rclb
and
mov
mov
std
inc
lods
out
mov
mov
fcmovbe
fsubrl
ljmp
sbb
mov
push
into
xchg
pop
or
mov
sub
push
cmp
dec
aaa
sbbb
test
mov
aaa
leave
cwtl
in
test
ljmp
cld
push
push
into
pop
xchg
fstl
mov
lods
xorb
dec
loope
das
fisttpll
add
daa
movsl
loopne
add
sub
call
out
push
leave
flds
cs
cmc
movsl
sbb
inc
ss
lods
pop
mov
inc
jo
fwait
daa
push
movsl
jnp
mov
jle
pop
addr16
mov
lods
cwtl
push
jge
sbb
xor
loop
mov
in
jl
popf
hlt
cli
pop
add
mov
or
or
push
jp
movsb
push
pop
pop
inc
mov
mov
ja
push
out
cmpsb
inc
add
imul
adc
add
dec
out
mov
stos
loopne
mov
push
push
mov
rep
jmp
shrb
fdiv
int3
inc
in
cmpsl
mov
jnp
sbb
xor
int
push
mov
xchg
inc
std
lret
fst
inc
outsb
rorl
pop
mov
mov
xor
cld
lods
add
movsb
add
stos
push
mov
mov
push
pop
fcoms
lea
jmp
or
cmpsb
jmp
mov
call
std
popf
mov
cmp
sub
test
iret
adc
jno
jge
jns
pop
xchg
mov
sbb
ljmp
cmp
pop
adc
in
test
fmull
mov
test
jle
inc
hlt
jo
mov
cmp
enter
xlat
fs
out
xchg
dec
adc
push
sarl
outsb
lods
adc
mov
xor
cs
dec
movsl
stos
shlb
fisubs
or
cmp
ficomps
out
scas
sub
dec
inc
and
pop
adc
jmp
add
and
mov
mov
xor
in
cld
sub
clc
mov
in
and
loope
lea
jecxz
xor
stc
push
inc
js
xchg
dec
xchg
push
xor
sti
ror
lock
es
jl
pushf
sbb
add
and
movsb
sbb
repz
mov
movl
pop
mov
repz
lods
push
mov
xorb
cs
dec
push
mov
gs
or
daa
or
lods
mov
push
or
xor
jno
add
imul
shrl
mov
or
cmp
add
mov
push
xchg
lahf
mov
std
ljmp
mov
cmp
pop
insb
sti
push
cwtl
movsl
push
lret
addr16
add
addr16
lods
cmpsl
scas
pushf
std
aas
mov
jo
in
cmp
aam
sub
xchg
test
xor
gs
xor
cmpsl
push
adc
mov
in
rolb
xchg
mov
mov
cmp
pushf
jno
push
andl
and
or
ret
pushw
xchg
adc
scas
sub
mov
sbb
xor
mov
mov
inc
xchg
jo
imul
push
xor
pop
imul
leave
in
or
sbb
add
test
mov
cmpsl
jecxz
or
rorl
int
pop
flds
in
cmp
jbe
lcall
test
stos
fdivr
push
test
xchg
js
pop
movb
stc
pop
inc
mov
sbb
lds
lods
das
adc
mov
addb
push
sub
pop
inc
mov
xchg
and
sbb
xorl
mov
jl
hlt
sti
into
iret
sbb
sbb
inc
mov
xchg
sbb
cwtl
or
add
mov
mov
nop
inc
adc
inc
stos
xchg
sub
sbb
int3
mov
out
repz
inc
jle
mov
cmp
push
or
jg
pop
jp
in
imul
jo
sbb
add
sub
mov
stos
imul
pop
adc
hlt
loop
mov
jae
lods
nop
xchg
in
jae
int3
cwtl
push
test
adc
inc
xor
insb
shlb
jp
jmp
push
ret
cmp
add
std
inc
jae
imul
jecxz
fcmovbe
fwait
mov
divl
sbb
fiaddl
inc
lock
incl
and
repz
ret
out
aad
mov
shl
pop
cs
movsl
sbb
bound
pop
adc
sub
adc
push
data16
push
sub
test
fmull
xor
test
jp
imul
and
cmpsl
push
jecxz
jo
in
mov
xchg
jle
xchg
mov
dec
jbe
in
pusha
cs
cli
sbb
shl
xchg
push
sbb
idivl
insb
pop
out
inc
insb
and
mov
imul
stos
xorl
mov
xchg
mov
or
test
add
jnp
xchg
call
and
fstpl
jmp
shll
mov
test
out
mov
pop
push
cmp
popf
add
mov
xchg
xchg
dec
aad
dec
mov
outsb
hlt
jb
dec
mov
dec
xor
jmp
cmp
jne
pop
mov
cs
lock
stc
pop
jno
je
rorl
pop
fcomps
jge
popa
aam
add
lea
dec
jecxz
sbb
loope
mov
shll
mov
icebp
pusha
inc
insb
repnz
adc
jge
notl
clc
jne
out
sbb
or
pop
push
xor
push
rol
repnz
flds
dec
lods
loop
aas
sbb
sti
mov
cs
jb
es
pop
dec
aas
inc
frstor
repnz
mov
aam
jno
stos
pop
and
inc
into
and
testl
and
push
scas
and
roll
jl
ret
cmp
mov
les
jne
addr16
nop
loop
fbstp
lahf
mov
lock
jp
scas
pop
in
cmc
cmp
cmpsb
mov
push
es
test
enter
cmpsb
jne
sbb
gs
sbbl
xor
mov
gs
incl
mov
call
jae
rorb
xchg
cmp
push
sub
sbb
lock
jae
fisttps
insb
inc
adc
in
sbb
mov
in
sbb
std
fdivrs
or
xor
push
cmp
imull
mov
add
xchg
cwtl
scas
jl
loop
fdiv
adc
add
or
inc
mov
inc
jge
jne
inc
push
or
push
call
push
les
sub
jg
insb
push
sub
out
pop
xchg
scas
imul
mov
jne
mov
ret
dec
pop
xor
loope
ss
adc
ss
adc
scas
jecxz
repnz
mov
push
cmp
push
ret
adc
mov
cmp
das
adc
lods
xchg
shrb
jb
adc
mov
push
pop
push
push
dec
icebp
sbb
cmpsb
inc
and
jmp
jecxz
dec
fimull
je
fldl
inc
cltd
xor
stc
andb
test
dec
daa
inc
push
jmp
push
fs
hlt
xchg
push
or
cmpsb
or
and
inc
cmp
icebp
out
in
sub
nop
aas
inc
adc
push
test
cmpl
int
lret
mov
xor
out
cld
in
push
xor
callw
mov
aam
daa
pop
mov
fdivrs
xchg
clc
jecxz
cld
mov
or
lock
xor
aaa
mov
pusha
jl
and
push
fwait
shr
insl
cmpsb
mov
jecxz
lods
out
insl
cmp
enter
lds
rclb
xchg
cmp
stos
pop
and
pop
mov
push
push
xchg
lock
cmp
mov
mov
scas
out
cwtl
push
adcl
pop
inc
cmpsl
push
or
push
scas
mov
lods
sbb
out
call
stc
inc
push
out
add
aam
scas
ss
cltd
mov
mov
mov
xchg
push
mov
or
xchg
loope
pop
repz
mov
in
cmp
jno
outsb
rcr
pop
jo
inc
inc
dec
mul
push
jb
rol
je
pop
cmp
outsb
xchg
xorb
lods
in
dec
les
mov
jnp
stc
dec
and
xchg
xlat
jbe
push
pop
jp
push
fs
out
aad
mov
pushf
sbb
inc
sub
pusha
mov
pop
mov
call
iret
int3
mov
ficomps
and
xchg
fwait
and
dec
xor
and
add
dec
leave
or
mov
lods
insb
cli
cmp
adc
ret
and
in
int3
pop
pushf
dec
fisttpl
and
sbb
sub
mov
fs
push
mov
fildll
mov
lret
mov
mov
std
mov
dec
inc
popa
negl
shrl
int
push
addr16
cmp
push
pop
adc
or
jl
mov
sub
fcmovbe
arpl
xor
jle
scas
push
daa
lock
es
lea
push
das
enter
add
aad
bound
mov
out
es
or
inc
into
rorb
sub
sbb
inc
addr16
or
or
and
movsb
pushf
add
mov
add
jnp
leave
cwtl
insb
mov
hlt
subl
jae
fiadds
pushf
and
cmc
sbb
xor
rclb
dec
fnstcw
jb
nop
stc
rcr
lret
jecxz
add
push
pop
inc
sub
mov
fcoml
test
inc
adc
xchg
dec
jl
stc
pop
repz
mov
movsl
mov
enter
ja
pop
in
test
in
pop
jge
hlt
cmp
and
mov
jle
push
lds
xor
mov
pop
aam
inc
addr16
push
sbb
sub
in
daa
or
adc
jecxz
sub
mov
cmpsl
cmc
std
sub
lds
xor
add
jns
push
cmp
imul
aas
and
shl
mov
icebp
hlt
iret
std
adc
in
into
mov
test
leave
dec
push
fs
inc
push
mov
ljmp
test
aam
lock
or
mov
js
mov
push
fldl
cmp
ret
lds
pop
lds
jp
pop
test
jp
jne
mov
test
xlat
dec
xor
mov
leave
inc
movsb
lock
lret
es
jns
movsl
imul
outsb
test
sahf
adcb
fld
and
sub
in
out
mov
sbb
loopne
pop
jecxz
dec
mov
mov
jmp
push
rcr
popf
dec
out
jae
add
std
mov
ss
repz
jns
xchg
in
cmp
test
mov
mov
cli
mov
dec
push
into
xchg
orb
je
and
pop
mov
enter
cld
rcrb
add
add
notl
xchg
je
lret
push
daa
loopne
lock
cmp
js
nop
dec
dec
dec
mov
push
sbb
xchg
jecxz
int3
xchg
ds
xor
sbb
xchg
xchg
popf
cmpsl
xor
sbb
cmpsb
out
shlb
mov
cld
test
inc
inc
mov
mov
adc
loope
addl
push
sbb
jecxz
gs
fsubrs
aad
negb
ds
sarw
and
push
mov
cmp
movsl
call
cld
and
mov
mov
add
push
jl
push
xor
fsubrs
cli
rorl
adc
sahf
dec
or
add
lods
add
in
xor
test
push
xor
push
outsl
lcall
dec
mov
dec
xchg
es
insb
fwait
push
insl
leave
aam
pop
inc
ja
mov
pusha
loope
pop
idivl
enter
scas
cvtps2pi
aad
sbb
es
enter
mov
add
xchg
jns
push
imull
push
pop
lods
sti
aaa
mov
push
test
jecxz
cltd
arpl
push
mov
dec
inc
xchg
push
cmp
ja
leave
cli
push
sbb
jp
inc
mov
inc
cmp
or
mov
xchg
je
jle
cmpsb
pop
stos
rcl
outsb
es
or
loop
dec
push
lahf
mov
sbb
pop
mov
in
lret
mov
xchg
mov
mov
add
fcmovnbe
lods
add
and
mov
movl
jge
cs
mov
leave
mov
pop
outsb
dec
jbe
lods
cmp
repz
and
ret
sbb
dec
sarb
jo
add
in
imul
stos
lcall
notb
cmc
inc
and
pop
jae
xor
mov
loop
pusha
cli
insl
mov
inc
mov
xchg
mov
mov
ljmp
lds
es
mov
adc
out
sarl
inc
fldcw
inc
inc
adc
divl
loope
jp
ja
pop
cli
insl
cmp
cs
push
aas
lea
into
repnz
jb
mov
out
mov
addl
xchg
repz
dec
mov
es
aas
fwait
shrb
sub
mov
pushf
shl
sbb
push
sub
aaa
mov
mov
je
cmpsl
pminsw
repz
ret
push
xchg
jns
dec
push
data16
sti
jl
fnstenv
ss
fidivrl
add
cmp
or
aas
sahf
xchg
cmp
xchg
aas
inc
cmpsb
jl
xchg
mov
lock
loop
push
push
imul
pop
stc
xor
out
out
call
add
xor
add
cmpsl
imul
cmpsl
push
xchg
pop
cmp
lock
xchg
jge
dec
lds
or
or
and
inc
loop
sarw
inc
ficoml
ret
mov
add
test
jl
dec
jb
or
pusha
push
and
xchg
or
iret
inc
pushf
mov
lds
loope
fsubrs
xchg
scas
mull
xchg
push
and
ljmp
pop
daa
addr16
popa
ja
adc
push
push
scas
cld
fwait
mov
ret
xor
clc
pop
push
xor
mov
je
sbb
mov
jp
repz
dec
jb
mov
lea
xor
sub
js
jo
jp
mov
in
enter
shll
movsb
les
sub
mov
xchg
cmc
adc
add
sub
mov
scas
lret
push
jle
pop
dec
pop
adc
and
scas
icebp
roll
in
jl
fldt
xchg
mov
fwait
orb
xchg
dec
and
xor
jo
adc
mov
leave
xor
push
scas
push
push
lret
cmc
lods
fnstcw
in
clc
sbb
mov
imulb
pusha
int
scas
add
dec
xchg
xchg
inc
outsb
push
jmp
and
fstp
inc
rclb
or
fs
rorb
pop
dec
lcall
std
call
pop
js
inc
ficomps
adc
sbb
jbe
mov
jp
dec
pop
gs
mov
insb
gs
or
pop
mov
push
or
and
or
pop
mov
andb
fldenv
js
andb
fsub
in
lock
jno
add
mov
mov
jge
dec
pop
pop
add
outsb
push
cli
jg
sti
fmul
ret
mov
pusha
dec
in
or
loop
push
cli
loop
andl
push
inc
jecxz
mov
dec
dec
int
jns
inc
cmp
mov
subb
sub
aas
inc
or
cltd
jae
clc
lea
aam
rcll
in
jl
addr16
mov
and
adcb
or
adc
scas
cmp
int
ficomps
mov
push
aad
jle
cmp
add
cmpsl
fdivp
fiadds
mov
adc
push
les
test
add
subl
xlat
cmp
fcomps
loope
bound
jg
lret
adc
sbb
jge
dec
xor
inc
dec
enter
xor
out
jae,pt
cmp
add
loopne
push
out
inc
pop
out
jbe
pop
fwait
inc
sahf
ss
push
lcall
push
pop
pushf
mov
popf
or
add
enter
gs
shrl
ret
loop
stc
jecxz
lcall
das
loop
pop
jp
mov
pop
inc
scas
dec
dec
lods
push
aaa
inc
and
inc
clc
shl
jg
popf
pop
jbe
pop
div
dec
jecxz
cmp
cmp
daa
xlat
lcall
jo
rcrb
mov
add
and
int3
jne
das
cld
or
push
sbbb
sbb
popf
mov
ja
dec
loope
jecxz
push
cmp
jnp
sub
cmp
adc
ret
std
fnstsw
jno
mov
sub
xchg
ja
cwtd
mov
lds
push
and
arpl
dec
adc
push
scas
loop
dec
pop
or
lret
jle
popf
shll
jo
sub
call
iret
in
sbbl
imul
test
std
cmpsl
ficoml
stos
adc
jp
insb
je
push
aaa
test
add
sub
flds
cmc
cmp
jo
push
adc
lea
jae
imul
ja
adc
inc
ss
das
lahf
lea
in
je
aam
fdivrs
cli
fwait
xor
fwait
sbbb
call
push
mov
testb
and
mov
test
pop
outsb
cltd
inc
subl
stos
push
sub
sbb
outsb
sub
or
adc
lcall
jmp
push
xchg
stos
bound
test
addb
insb
adc
push
sbb
sub
add
or
lret
jne
mov
add
mov
lock
ret
mov
fs
dec
add
movsl
sub
xor
pop
mov
nop
adc
mov
mov
and
dec
scas
lcall
lret
outsl
call
mov
pop
xchg
sti
xchg
or
cld
pop
pop
mov
jecxz
xchg
sarl
adc
xor
pop
loopne
cmp
stos
movsl
xchg
cmp
xchg
push
loopne
sub
outsl
mov
popf
mov
sbb
insb
les
and
jne
clc
lcall
lds
pushf
or
push
aam
cwtl
loopne
sbb
add
push
je
int
xor
jnp
outsl
ftst
aaa
and
push
inc
lods
sti
sub
push
mov
hlt
dec
mov
fistps
sub
cmp
fisttps
or
nop
cmp
mov
cmp
dec
push
push
jg
push
in
xchg
ljmp
and
and
incb
leave
pop
push
lahf
movhps
stc
sbb
sbb
inc
xor
xor
adc
pop
xor
or
loop
mov
rorb
adc
mov
mov
push
daa
cmc
lods
jmp
xchg
roll
stos
push
jp
sbb
je
inc
push
rcrb
xor
sub
sub
xor
mov
sbbb
les
lods
xlat
loop
bound
sub
into
or
mov
and
insl
imul
hlt
bound
xchg
cld
jmp
sahf
into
mov
xchg
sub
mov
add
pop
ss
xor
movsl
cs
dec
decb
test
mov
nop
iret
mov
cwtl
push
mov
leave
or
fdivl
or
sub
dec
loope
push
sub
adc
fildl
push
mov
adc
push
inc
mov
cmp
mov
xor
out
mov
fs
or
jbe
lret
push
sub
repz
sti
andl
mov
pop
data16
js
and
lea
cmc
cmp
mov
and
push
loop
xchg
push
cmp
cld
fistl
outsl
rorl
or
xchg
rdmsr
addr16
dec
loope
ljmp
push
mov
stc
ljmp
push
or
jmp
sub
sahf
mov
das
and
nop
test
pop
in
repnz
cwtl
das
push
push
ja
leave
test
push
push
cmovae
ficomps
xor
lods
jmpw
dec
ret
push
jno
dec
hlt
dec
cmpb
lods
xchg
popf
xlat
pop
ficomps
sarb
mov
push
imul
sbb
into
inc
test
mov
sbb
loop
inc
adc
push
dec
clc
inc
dec
in
sub
add
xchg
int
bound
pusha
stc
adc
mov
sub
xor
mov
dec
xchg
jle
or
lcall
jle
push
out
mov
dec
mov
cwtl
xchg
or
mov
lods
sub
jl
mov
sub
lods
jo
sarb
pop
push
or
and
sub
push
and
lcall
push
loopne
mov
je
test
pusha
or
shl
xor
addl
loop
es
fs
movl
cld
and
clc
fwait
jae
push
mov
fs
pop
or
add
pop
jbe
sahf
ret
stos
dec
inc
dec
hlt
push
fadd
push
repz
sbb
ja
inc
xor
jno
das
jno
and
gs
mov
sub
mov
lcall
cmp
xor
fwait
loopne
or
leave
fimuls
xor
ds
xchg
std
jp
jno
jmp
jae
pop
js
or
mov
pop
dec
mov
dec
xlat
pusha
shll
mov
jecxz
icebp
mov
and
int3
jl
bts
mov
xor
movsl
nop
popf
icebp
inc
xchg
adcb
jmp
and
ljmp
pop
mov
xor
jnp
scas
or
testl
shrb
xchg
nop
jl
sbb
push
ds
aas
daa
mov
jns
loope
call
in
aad
arpl
fstp
mov
fldt
insb
sbb
or
sbb
jns
xlat
mov
idivb
or
out
cli
mov
jmp
test
cwtl
mov
out
pop
clc
cs
popl
imul
test
cmpsl
pop
pop
pop
jge
xor
dec
repnz
movsl
notb
inc
and
xchg
sub
movsb
mov
xorl
mov
pop
mov
leave
packsswb
std
xchg
fwait
cwtl
pop
mov
repnz
lcall
or
or
lds
push
ret
and
cmc
les
test
inc
mov
pop
rorl
rcrb
mov
pop
inc
cmp
sti
mov
in
les
mov
jno
and
ja
fwait
outsl
push
xchg
addl
inc
push
aad
xor
mov
imull
sub
lock
inc
xor
mov
fbstp
fistpll
cltd
mov
ljmpw
gs
xor
push
mov
popa
and
pushf
imul
inc
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
inc
bound
cwtl
loopne
cmp
sbb
add
xchg
push
sti
setb
les
and
int
jnp
mov
ret
leave
sbb
mov
shl
dec
ds
push
pop
add
jmp
iret
xor
and
xor
mov
jno
xor
jl
adc
cmp
xchg
and
adcb
ficomps
cmpsb
xor
xchg
sahf
aad
inc
add
or
mov
lods
xchg
push
addl
mov
mov
leave
xor
pop
imul
inc
inc
shll
mov
jmp
xor
cmc
jmp
out
cmp
xor
mov
mov
and
test
rcr
ret
jg
and
push
xor
pop
stc
xchg
adcb
lds
negb
test
xchg
das
in
inc
das
aam
push
incb
test
pop
js
bound
inc
fiadds
jmp
jb
mov
pushf
sub
out
aad
call
dec
pop
push
cmp
mov
pop
inc
xchg
icebp
jg
aas
push
sub
adc
sub
sub
je
popa
cmpl
les
dec
dec
shll
out
xchg
jp
repz
icebp
xchg
clc
shlb
push
fldenv
mov
in
pushf
in
push
mov
jecxz
jl
add
shlb
repnz
lcall
incl
push
xchg
sub
mov
leave
mov
adc
aaa
stos
dec
test
fsubrp
shlb
scas
mov
or
xchg
shlb
sti
ret
mov
mov
pusha
icebp
jbe
into
das
add
cld
idivb
sub
inc
sbb
inc
sbb
adc
sbb
add
xor
shrb
aam
xchg
pop
push
daa
cmp
das
pop
divb
sub
stos
roll
out
sub
popf
in
jns
jbe
cmc
push
outsb
mov
psubusb
lret
mov
ret
pop
hlt
pop
sub
push
cld
les
rclb
dec
dec
in
xchg
mov
notb
sub
xor
lea
aas
mov
or
sbb
int
xchg
mov
lahf
daa
sub
push
popa
sub
imul
xor
xor
jnp
icebp
cmc
cmp
imul
or
inc
mov
cli
jo
imul
orl
cmp
add
arpl
orl
mov
test
repz
mov
add
jno
add
push
ret
sbb
push
sarl
mov
mov
push
mov
cmp
mov
sti
sbb
adc
sbb
pop
mov
lret
fildll
mov
dec
aaa
and
and
xor
dec
push
cmp
push
adc
fildl
add
dec
scas
mov
cmp
mov
push
fmull
aad
xchg
mov
sbb
mov
or
test
adc
lods
dec
xchg
jle
jns
dec
cmp
into
pop
pop
aas
rclb
pop
xchg
add
xchg
cmc
xlat
scas
out
inc
pop
xchg
iret
shlb
mov
mov
ljmp
mov
icebp
add
and
push
fwait
test
adc
cmp
movsl
inc
push
out
iret
xchg
ss
mov
cmpb
add
gs
hlt
xlat
inc
nop
mov
test
push
sub
dec
cmp
in
scas
dec
iret
repnz
dec
int
test
mov
sbbl
ror
test
mov
andl
ds
into
lret
hlt
jno
aam
scas
fcomi
adc
outsl
cmp
out
aaa
inc
dec
int3
adc
pushf
sub
push
ret
mov
xor
call
cs
js
adc
into
fs
fcmovne
js
adcl
cltd
adc
inc
cld
stos
shrl
xor
sbb
subl
fildl
mov
sub
inc
loopne
push
popf
and
push
aam
lods
jne,pn
out
rorl
fistpl
cmpl
dec
xor
ds
pop
pop
sub
insb
pushf
pop
mov
in
adc
jg
fdivrs
pop
cmpsb
test
mov
adc
mov
inc
data16
xor
dec
sub
cmp
test
in
jne
and
sar
mov
mov
jae
pop
dec
outsl
loope
dec
cmc
int3
jns
adc
pop
stos
test
icebp
test
rcr
or
mov
fs
out
scas
sahf
stos
ds
dec
mov
and
cmpsb
add
jbe
imul
push
in
scas
inc
outsl
or
icebp
outsb
outsb
dec
inc
or
arpl
inc
loope
imul
jbe
js
sub
test
add
or
sbb
mov
jnp
jmp
jne
test
add
xor
pop
mov
jmp
sbb
int
pushf
mov
insl
push
adc
xor
icebp
cmc
mov
add
leave
shll
mov
and
mov
xor
adc
or
cld
dec
xchg
sarb
jg
pop
sti
mov
or
outsl
push
push
xor
push
das
cmp
jae
jp
dec
cmp
jge
decl
push
mov
push
and
pop
iret
mov
scas
push
sbb
aam
dec
jns
cwtl
aaa
and
movsl
adc
cltd
repnz
cmp
gs
decl
jle
icebp
hlt
push
stos
decl
mov
ret
sub
stc
rolb
repnz
mov
cmp
mov
add
ficomps
xchg
out
inc
pushf
nop
pushf
dec
lods
jne
cld
enter
mov
and
pushf
stos
aaa
dec
pop
xchg
clc
pop
loopne
mov
mov
xchg
push
rorl
push
mov
test
pop
inc
clc
cld
bound
pop
xchg
push
sub
pop
test
inc
loope
mov
lahf
mov
arpl
mov
mov
dec
ds
jb
imul
add
in
xchg
test
mov
pop
call
mov
cmc
les
and
iret
jmp
cmp
and
std
inc
lret
loopne
enter
add
cmp
xchg
pop
mov
jns
gs
ss
popf
mov
lahf
imul
add
addl
push
aas
mov
popa
sub
mov
sbb
mov
notb
xchg
sbb
outsb
sahf
outsl
cmc
ja
inc
add
aaa
jecxz
popa
cmc
push
sahf
mov
pop
jmp
int
cli
stos
cld
dec
inc
jae
mov
sbb
xchg
cmp
js
call
aad
jo
popa
nop
jb
js
cmp
pop
test
jo
daa
mov
movsb
or
bound
xor
pop
cmp
pop
cmc
cmp
daa
iret
push
addr16
add
fwait
iret
imul
jne
mov
push
filds
jo
outsl
scas
sbb
mov
pop
enter
pop
sbb
rol
sub
push
dec
psubq
aaa
jnp
push
pop
iret
nop
loop
or
mov
mov
dec
sub
subb
pop
in
inc
pop
jl
add
fs
nop
lret
int
dec
fldcw
in
cmp
stos
and
xchg
sbb
pop
adc
call
mov
and
mov
sbb
pop
mov
adc
stc
fadds
das
xlat
insl
out
mov
rolb
mov
loop
add
jns
fcomi
xchg
jno
fisttpl
push
adc
mov
out
cmc
imul
cwtl
xchg
push
dec
cs
imul
pushf
scas
mov
pop
jg
mov
sarb
xor
mov
inc
js
and
scas
lds
lcall
fldz
jnp
lret
or
xchg
fiadds
fst
mov
lods
sti
pop
dec
je
pop
ja
xchg
cmp
jbe
loope
cmpsb
dec
call
mov
loop
loop
das
jl
and
cmp
imul
cmpsb
xchg
rclb
push
inc
fidivs
pop
mov
bound
fwait
sub
xor
jecxz
mov
add
sub
xchg
test
push
or
in
notl
stc
mov
mov
push
inc
insb
add
xor
test
sub
jecxz
jno
sub
pop
add
mov
ja
cmp
inc
xchg
decl
xchg
nop
lods
pop
add
fists
pop
mov
jecxz
cmp
adc
jmp
popa
or
insb
and
push
dec
scas
out
stos
mov
mov
xchg
bound
ljmp
idivb
mov
cmp
push
and
push
fisubrs
pop
or
imul
pop
inc
xchg
test
xlat
xchg
mov
lcall
jmp
jge
or
movsb
lcall
pop
mov
sub
mov
mov
xchg
push
pop
push
push
adc
popa
add
sub
adc
push
push
and
pop
dec
ds
icebp
lea
jle
js
je
int3
push
pop
fstpt
push
sti
or
mov
fbld
and
adc
out
imull
arpl
jge
pop
pop
fldcw
movsl
out
out
jl
mov
fsubl
sub
adc
inc
sub
cmp
adc
das
cld
cli
cmp
or
xchg
jmp
cmpsb
jl
insb
or
sti
nop
mov
or
pop
aas
cli
scas
rorb
add
pop
push
and
mov
in
arpl
test
push
or
xchg
jbe
cmp
push
xchg
rcrb
leave
adc
pusha
jae
xchg
xor
rcll
jle
cld
shlb
adc
cmp
insb
pop
jl
mov
xor
out
mov
push
cs
lret
cmp
and
mov
les
mov
or
aad
fdivrl
call
test
test
lods
mov
aaa
ja
sub
enter
pop
mov
shlb
outsb
cmp
sbb
jge
push
and
mov
ds
mov
ljmp
mov
pop
jae
cmpsb
pop
sub
push
into
stc
pop
in
xchg
call
mov
cmp
cmp
ret
add
fs
pop
push
adcb
push
int
cmpl
mov
lea
imul
outsl
mov
enter
dec
je
sahf
divb
inc
pop
sbb
adc
out
int
imul
popf
dec
adc
sbb
adc
mov
push
outsl
mov
ret
mov
inc
fst
cmp
getsec
and
stc
ficoml
add
sub
insl
and
movsl
lods
adc
cmp
push
inc
xchg
pop
scas
jbe
sub
sbbb
mov
sub
faddl
sub
jg
insl
mov
fwait
xchg
mov
outsb
lods
mov
pop
jo
dec
add
sub
push
divb
fnsave
cwtl
or
adc
das
fdiv
jbe
insb
or
and
incl
sbb
cld
addr16
adc
lret
test
fs
hlt
jne
gs
mov
xchg
dec
in
jmp
std
sbb
push
pop
push
stos
sub
addr16
sar
mov
cs
push
out
fcmovbe
sub
pushf
int
mov
data16
cmp
add
fcom
jno
mov
sbb
fwait
add
adc
adc
mov
mov
fwait
dec
pop
nop
xlat
mov
mov
fists
xor
sub
jae
test
test
jbe
int3
and
mov
scas
add
push
mov
popf
mov
int
incl
add
rol
cmp
into
test
lahf
pop
inc
mov
sbb
push
mov
ret
jo
cli
jge
in
pop
mov
test
push
sbb
pop
pop
push
cmpsl
pop
jl
xchg
int3
gs
js
aas
xchg
inc
pop
jecxz
mov
mov
ljmp
imul
jmp
cltd
fsubs
xlat
lock
insl
ja
and
push
ljmp
xchg
sub
clc
mov
push
mov
xchg
cmp
xchg
jmp
and
inc
push
das
xchg
fs
mov
hlt
lods
shlb
mov
lea
dec
lock
lea
dec
adc
imul
mov
add
mov
clc
scas
jbe
outsb
into
cmp
sbb
jle
add
xor
mov
jno
mov
call
fwait
pop
fs
xlat
jnp
pop
push
mov
dec
data16
lret
lahf
outsl
ror
jg
fdivrs
jp
daa
popf
push
addr16
xor
or
stos
pop
xchg
mov
jp
push
inc
mov
iret
leave
dec
adc
cmp
mov
mov
hlt
cmp
lret
fcomps
dec
adcl
pop
in
and
sarl
enter
cld
pop
jp
int3
roll
jns
xchg
inc
repz
and
jno,pt
clc
pop
test
outsb
js
add
mov
fdivrl
es
sbb
cwtl
aad
inc
sub
jnp
cmpsb
enter
xlat
jo
push
jnp
jecxz
dec
mov
imul
icebp
add
out
adc
and
cmc
sbb
xchg
push
mov
pop
fnstenv
faddp
sub
lea
push
mov
lret
movsb
push
scas
push
jnp
add
subl
aad
add
or
sub
push
mov
sti
ficoml
imul
test
fwait
mov
sarl
xor
sbb
or
into
aam
fidivl
dec
mov
jnp
sbb
mov
fwait
sub
iret
xchg
mov
jg
scas
cli
movl
nop
roll
fildl
xchg
inc
xchg
jp
adc
lcall
pop
dec
popa
and
mov
push
xor
push
mov
rcrb
sub
into
repnz
mov
mov
dec
xchg
into
pop
mov
imul
push
out
push
test
mov
xchg
xlat
aad
sub
call
mov
jne
inc
fnstsw
in
mov
adc
mov
push
sbb
xor
and
cmp
pop
addr16
xor
pop
nop
inc
cmpsl
in
cltd
or
mov
lea
push
fdiv
push
imulb
add
jbe
pop
jge
and
and
mov
mov
and
fsts
jmp
pop
pop
xorl
iret
mov
and
lcall
mov
cmp
push
inc
in
sub
sbb
mov
fldcw
pop
dec
dec
loopne
and
fsub
sbb
jae
inc
shlb
mov
aas
jp
shl
jbe
stos
mov
pop
mov
and
xchg
or
xchg
add
fld
inc
das
sbbl
sbb
inc
stos
ja
repz
popf
ss
add
dec
scas
and
add
mov
cmp
dec
xor
shlb
push
lcall
jge
pop
rcll
mov
mov
pop
inc
xor
je
or
mov
scas
adc
sub
or
push
out
enter
daa
push
inc
jbe
ljmp
test
fwait
ret
lcall
inc
out
in
sbb
cmp
lock
nop
cmp
mov
insb
add
push
and
cmp
das
cs
mov
jmp
mov
xor
outsb
arpl
sub
adc
jae
cvtps2pi
xor
mov
dec
xor
xchg
lcall
imul
cmp
sbb
inc
fucomip
push
dec
cli
mov
into
test
mov
push
ret
or
lcall
aad
test
sub
mov
adc
icebp
cmpsb
js
xchg
jl
xchg
loope
lock
lret
push
out
and
insl
jmp
cwtl
mov
mov
sub
fisubs
mov
into
out
jne
jmp
imul
mov
adc
adc
int
jmp
out
adc
stos
mov
inc
shrl
lret
xor
sub
movsl
pop
rorl
xor
fcmove
mov
test
xchg
popa
adcl
andb
sub
cmp
lods
dec
mov
outsb
ficoms
loope
mov
lret
in
push
adc
stos
iret
fsubrl
mov
lret
pop
jge
ja
in
sti
xchg
imul
leave
or
inc
xchg
cmc
inc
fs
cmp
jae
cltd
mov
setnp
pop
rcl
xchg
xchg
and
inc
pop
and
dec
jo
push
aas
jns,pt
test
roll
cmp
jns
xchg
sub
and
popa
mov
and
sbb
pop
xorb
inc
push
aaa
repnz
add
addr16
outsb
jge
int
adc
inc
push
and
mov
add
inc
rcl
jecxz
ljmp
push
frstor
hlt
insl
xor
mov
aam
js
je
or
xchg
inc
cltd
ja
sarb
and
and
stos
sahf
dec
clc
mov
cld
popf
xor
dec
or
notl
into
inc
pop
insl
inc
mov
popa
leave
rolb
icebp
stos
pop
cmp
les
test
ret
aas
cld
mov
pushf
jnp
call
rorb
sahf
pushf
adc
ljmp
sbb
mov
and
insb
inc
cmp
mov
data16
and
sub
cwtl
and
ret
les
and
xchg
mov
push
popf
lock
jp
jp
repnz
fcomps
iret
test
out
cmp
jb
or
sti
sbb
test
inc
cmp
test
icebp
xor
sbb
nop
test
rol
int3
fists
insl
jg
lahf
in
pop
bound
popf
cmc
mov
es
mov
ljmp
and
aaa
inc
sbb
and
cmp
das
mov
push
jge
ss
call
fs
jmp
aam
mov
in
adc
dec
mov
push
cs
enter
mov
jecxz
loope
lods
mov
mov
sub
inc
pop
fisttpll
nop
mov
sbb
setne
mov
sub
jp
mov
fucomi
mov
shll
loopne
xchg
mov
cmc
xor
dec
push
xchg
test
cli
push
fisubrl
pushf
mov
jmp
inc
jb
cmpl
and
lahf
jns
xor
sahf
jnp
test
wrmsr
xchg
xlat
pusha
and
nop
and
je
xor
add
push
out
addb
mov
dec
js
dec
bound
mov
jecxz
aaa
inc
xchg
int
mov
jno
lahf
xor
sbb
xor
movsl
loope
cmp
jae
jp
adc
movb
mov
or
leave
mov
repz
mov
neg
xor
and
insl
xchg
mov
push
orl
stos
cmp
or
push
test
or
enter
dec
nop
pop
in
or
sbb
mov
mov
daa
jb
std
cltd
cmc
mov
leave
sbb
inc
dec
mov
jmp
jbe
pop
fisubl
ror
mov
pop
or
xor
mov
jno
rcrb
pop
test
and
add
cmp
mov
clc
gs
dec
out
test
push
fsubl
ljmp
xchg
aam
inc
cmpsl
xor
jmp
inc
je
icebp
aad
loop
pop
xor
adc
inc
dec
cmpsb
stc
cmp
xchg
dec
jle
cmp
pop
mov
insl
dec
adcb
dec
sbb
inc
jl
mov
inc
in
sbb
push
sbb
pop
xchg
dec
aad
xchg
xor
mov
or
pop
mov
sub
dec
pop
push
mov
mov
call
mov
push
dec
mov
and
filds
xchg
sbb
mov
jne
rcl
movb
sub
lods
pop
mov
dec
sahf
mov
iret
mov
cs
xchg
adc
cltd
fidivrl
sbb
xlat
inc
sub
mov
and
add
inc
repnz
loop
mov
fimull
inc
or
pop
shr
out
lock
ljmp
cmpsl
inc
push
fucomip
jns
flds
xchg
dec
pop
iret
lods
pop
add
call
fidivs
pop
pop
clc
cli
sbb
inc
mov
out
xchg
idiv
sti
push
rep
es
lock
push
sub
cmpsb
ret
into
inc
push
xor
lret
andb
and
sub
ds
out
push
mov
cwtl
jecxz
sub
and
ret
fwait
orl
xchg
mov
cmpsb
add
adc
jecxz
pop
jp
cs
cltd
into
jns
mov
out
pshufw
insb
pop
test
test
dec
sbb
sbb
push
cmpl
std
adcb
sbb
frstor
sbb
cld
mov
pop
or
adc
lock
loopne
stos
push
mov
and
in
and
jmp
cmpsl
xor
cmp
loope
inc
push
ficomps
out
jg
pop
fdiv
test
sub
adcl
leave
push
push
test
mov
leave
aaa
fisttps
add
insb
aam
add
pusha
adcl
subl
mov
pushl
test
nop
gs
jl
shr
test
divb
movsb
scas
stc
mov
inc
mov
jg
inc
lret
xor
inc
push
mov
imul
cli
scas
mov
dec
mull
dec
test
xlat
daa
jns
stc
scas
xor
push
pop
divl
sbb
popf
and
rclb
mov
movsl
dec
arpl
mov
adc
and
mov
fidivl
cmpb
jg
stos
sti
sar
jne
mov
bound
cmpsb
adc
cmp
cmc
pusha
in
mov
sbb
roll
pop
xchg
movsl
inc
xchg
dec
icebp
fsubr
into
mov
xchg
dec
int3
or
fistpl
inc
dec
test
mov
dec
or
stos
sub
jle
dec
push
xchg
fisttpl
out
cmpb
cs
std
inc
add
ret
fimuls
mov
fnstenv
test
push
js
pop
lds
cltd
mov
test
test
test
jne
fwait
and
scas
push
xor
add
or
fcompl
mov
dec
jl
or
ds
dec
into
pusha
dec
dec
fs
xchg
lock
and
inc
lret
pop
ja
js
lock
jnp
xor
test
lea
lea
mov
sbb
or
out
aas
mov
jae
xchg
stos
and
fistpl
fnstsw
inc
lcall
ss
test
popf
shll
jnp
xor
inc
inc
push
adc
and
mov
arpl
inc
cld
xor
adc
into
or
jmp
stos
sub
jp
hlt
cltd
hlt
sub
loop
cwtl
ret
pop
mov
sub
cli
lahf
inc
dec
ja
hlt
fstl
inc
aas
add
ss
fwait
out
movntps
call
jbe
out
lret
adc
xchg
outsl
sub
cwtl
scas
mov
add
mov
mov
lds
nop
sti
ss
ja
test
das
push
add
push
mov
pushf
clc
jg
fisttps
and
pop
rcl
push
shrl
jecxz
add
mov
mov
lds
stc
inc
mov
movsb
xchg
jmp
je
iret
das
mov
push
xchg
pop
cmp
adcl
and
imul
mov
pop
pusha
shrl
mov
mov
push
jge
lahf
popa
mov
jecxz
dec
mov
push
push
push
fstp
xchg
add
mov
mov
mov
popa
jo
xor
dec
sbb
cmpsb
in
enter
dec
mov
pop
ficomps
stos
stc
mov
sbb
jmp
aam
mov
mov
nop
jae
repnz
push
addb
and
sbb
push
cs
and
sbb
xchg
in
ljmp
push
inc
and
add
dec
mov
mov
cmpsb
sbb
lahf
repnz
insb
test
out
fisttpll
cmp
scas
mov
iret
jbe
ss
mov
pop
xorl
ss
aas
faddl
cwtl
sub
adc
shlb
xor
mov
ja
sub
das
das
add
int3
cld
xchg
ret
push
sub
pop
daa
mov
lret
cmpsb
ljmp
add
push
cmpsl
adc
xchg
subl
cmc
lahf
push
dec
push
iret
xchg
adcb
xchg
dec
es
scas
push
fcomip
movsb
imul
push
xchg
xchg
add
and
or
ss
pop
push
pop
lea
movsl
test
jo
pop
inc
sti
push
adc
jle
outsl
push
mov
mov
and
jb
dec
stos
mov
xchg
or
dec
stc
les
adc
out
push
sbb
lock
jmp
insl
push
test
loop
les
cmp
xor
iret
add
loop
jae
add
jge
xorl
call
dec
stc
popf
and
xchg
xchg
test
dec
mov
mov
mov
test
cmp
cmp
cwtl
pop
movsl
sti
dec
mov
mov
or
or
dec
daa
mov
in
das
loop
mov
inc
xchg
push
xor
ja
repz
xchg
cmp
push
push
jg
xor
imul
mov
sub
mov
insl
pop
orb
jge
cmp
xlat
mov
push
push
push
out
fldcw
cmc
hlt
popa
out
addl
lea
rcll
stc
sub
push
xchg
out
push
pop
stos
jmp
mull
cmc
cld
pop
mov
jecxz
add
mov
dec
mov
mov
mov
test
sub
mov
out
imul
jl
test
dec
test
subb
mov
call
and
icebp
sub
rcrl
fcmovbe
xchg
repnz
call
pushf
dec
push
xchg
xchg
scas
xchg
mov
fmuls
faddl
push
sbb
mov
sarl
mov
mov
add
or
mov
into
sub
lret
in
sub
sbb
mov
jns
push
cs
xlat
push
jmp
mov
fcoms
jb
push
xchg
cmp
dec
rcrl
push
dec
and
push
mov
cli
bound
jbe
enter
mov
rclb
or
lret
movsb
popa
push
pop
xchg
mov
dec
lcall
jp
cmp
jge
dec
sbbl
jne
jle
sub
push
and
jl
xchg
nop
out
inc
fstps
incl
and
adc
inc
lock
pop
pop
push
xchg
mov
xchg
pop
popf
sub
xchg
add
jnp
pop
sti
pop
mov
aaa
daa
push
arpl
mov
mov
cltd
cwtl
in
push
sub
sub
cmp
pop
repnz
add
test
sti
into
mov
xlat
mov
pop
ret
outsl
sub
lods
out
in
or
shll
jmp
loope
inc
jns
xor
shl
in
ret
fwait
int
pop
jp
push
xchg
popf
fldcw
fiaddl
add
mov
xor
fwait
aaa
movsb
int
arpl
das
fisttpll
sub
pop
cmpsb
jno
adc
or
sahf
or
clc
loope
adc
pop
dec
push
je
loope
sti
pop
xor
or
jmp
ret
jne
jo
jns
cld
push
pop
mov
mov
scas
lret
cwtl
lds
cmc
lahf
js
pop
mov
mov
jmp
and
ds
inc
add
dec
xor
insb
inc
mov
sub
dec
jg
pop
jne
call
imul
imul
mov
adc
sti
loop
insl
jmp
aam
fs
stc
xchg
lret
jbe
inc
pop
xchg
in
dec
cmp
xor
popa
lock
lods
aam
into
add
bnd
div
sbb
stc
or
inc
and
rolb
stos
stc
dec
mov
stos
mov
pop
lds
scas
lods
imul
dec
std
out
jge
mov
and
into
repnz
test
dec
xchg
test
inc
jns
mov
sub
divl
xchg
mov
sbbl
sbb
bound
mov
dec
add
xchg
inc
iret
push
cmpsl
lock
mov
stos
inc
mov
stc
sbb
sbb
outsl
xor
cmp
and
cltd
and
pop
loopne
cmp
jnp
adc
shll
push
nop
out
or
cli
jl
fldenv
int
add
into
out
adc
pop
pop
nop
or
or
pop
mov
loopne
add
adc
in
andb
fdivl
test
ljmp
xor
jp
sbb
addl
push
mov
pop
adc
jb
pop
scas
cs
stc
cmpsl
xchg
dec
loop
or
and
jne
rclb
fs
outsl
aam
jmp
mov
aad
in
cltd
adc
jnp
test
xor
insb
std
mov
lods
dec
fmuls
and
add
shlb
dec
in
movsb
icebp
pop
push
fld
jb
std
jp
or
add
xorb
shlb
adc
push
roll
scas
es
jmp
scas
push
enter
push
mov
stos
mov
dec
movsb
add
push
aas
test
loopne
mov
xchg
xor
mov
movsl
sbb
jo
jle
mov
and
inc
pushf
ficomps
jmp
cmp
sub
testb
aad
pop
xchg
dec
cmp
stc
das
cltd
pop
jg
mov
addr16
xor
jbe
js
repz
popa
cs
dec
pop
mov
pushl
nop
cmc
js
sti
cs
push
movsb
leave
pop
cwtl
ja
sbb
xchg
jecxz
dec
popa
rclb
orl
adc
cmpsb
mov
jmp
push
mov
add
jae
sbb
mov
cmp
pop
push
std
call
sub
jns
push
ljmp
mov
pushf
and
push
xchg
mov
imul
xor
add
sub
test
in
loope
xchg
mov
pop
lock
out
inc
std
fsubs
sarb
cltd
pop
mov
mov
xchg
adc
aad
pop
or
mov
loopne
xchg
shlb
lods
or
mov
cld
jl
or
ret
inc
ja
notl
mov
or
mov
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
loop
sub
push
push
jl
jmp
jl
cli
out
enter
add
fadds
fadd
cmp
sub
addr16
test
mov
in
mov
lds
sbb
lds
jns
jno
daa
cmp
push
sti
xchg
mov
daa
mov
or
negb
out
sbb
push
sahf
mov
roll
imul
icebp
sahf
fchs
xor
movsb
aas
ret
pop
push
out
idivb
fimuls
aas
cld
cmp
cmp
pop
or
cmp
fmull
mov
inc
out
test
stc
xchg
rclb
enter
ja
adc
dec
je
adc
hlt
adc
adc
mov
shl
and
hlt
cmp
call
neg
data16
cmp
call
lods
stos
push
sarl
or
decl
cs
fwait
int3
pop
ja
cmp
xchg
enter
pop
stos
add
or
ret
cld
aaa
sti
xor
push
lret
mov
sub
pop
lods
test
sarl
cmpb
inc
adc
push
imul
jge
in
sarl
xor
leave
in
out
inc
pop
push
and
aam
imull
insl
cmpsb
mov
mov
test
dec
out
fistps
sbb
adc
out
and
sti
lods
xor
xchg
sbb
pop
pop
out
sub
rcrl
adc
mov
mov
movsl
mov
mov
xlat
cwtl
rcrl
or
and
dec
jno
les
xchg
scas
test
add
sbb
inc
insl
jb
xor
jns
mov
outsb
mov
movsl
and
or
cld
pop
jbe
movsl
ret
inc
mov
das
mov
lods
or
testb
push
mov
rorl
fsub
cmp
sub
dec
pop
sbb
das
pop
addr16
in
and
pop
aaa
mov
push
out
mov
fwait
leave
pop
scas
pop
bound
inc
push
cmp
push
repnz
out
outsl
or
ds
sub
and
cmc
cli
xor
sub
push
sub
lcall
dec
and
inc
mov
adc
and
inc
fsubrl
ja
shld
repz
repnz
std
jns
jge,pt
stc
test
in
pop
inc
int3
fs
in
in
adc
mov
sub
adc
jg
fs
push
pop
shll
cmp
dec
es
andl
or
mov
gs
sbb
imul
xor
push
push
movsl
add
shrb
push
push
pushf
bnd
mov
outsl
outsb
mov
bnd
les
repnz
xor
cmp
out
cmc
or
push
add
ret
xor
notb
fwait
into
jnp
dec
shrb
arpl
jmp
mov
sahf
mov
jg
fnstsw
jbe
mov
mov
xchg
cmp
insb
xor
and
mov
adc
jl
lea
or
dec
movl
sub
loop
pop
fucomi
push
and
pop
xchg
cmp
mov
mov
and
fcomps
cmp
adc
repnz
sti
xor
sbb
or
fs
mov
inc
test
loope
cli
mov
outsb
push
dec
sbb
dec
cmp
or
leave
push
mov
lahf
das
mov
sbb
add
mov
add
int3
fimull
ret
jo
mov
dec
fwait
dec
divb
mov
add
ret
jg
dec
push
xor
jmp
dec
mov
pop
sub
jl
pop
fwait
jns
mov
inc
lret
mov
jecxz
aas
jae
iret
hlt
mov
outsb
push
push
mov
add
test
in
sub
bound
mov
add
test
gs
sub
adc
testl
cmpsl
jne
push
icebp
lcall
pushf
mov
jne
out
std
jg
sbbl
jne
aam
push
outsl
fidivs
sub
adc
fnstcw
sbb
xchg
in
movsb
in
cs
or
pop
cwtl
enter
jl
jne
repnz
out
insl
add
xor
sti
inc
mov
mov
jno
dec
xor
lods
push
ret
jae
xor
adc
dec
xchg
or
add
xor
sahf
xchg
je
ja
dec
lret
cmp
lret
jno
inc
ljmp
mov
inc
xlat
gs
xchg
mov
adc
lods
xchg
jb
repz
popa
push
pop
sbb
in
xor
add
jle
fsubrs
cltd
jb
lea
int3
sub
adc
jo
add
repnz
scas
lock
leave
clc
mov
adc
push
scas
jle
pop
xlat
into
jp
rorb
xchg
add
jle
sub
mov
shr
jmp
jecxz
clc
outsb
shl
test
cmp
cmp
or
int
sbb
test
in
movsb
jae
insl
outsl
sbb
mov
insb
in
leave
mov
jnp
ds
ret
out
fldenv
sbb
mov
or
push
inc
lahf
movsb
add
adc
xchg
imul
repz
mov
and
das
cmpsb
jno
xchg
cmp
mov
jmp
push
pop
or
adcb
mov
xor
mov
in
xor
xchg
lahf
scas
xor
sub
sarb
fsts
inc
inc
sub
scas
sub
arpl
cmp
cmp
cmp
or
call
dec
jmp
arpl
push
ss
xchg
pop
shlb
pop
cltd
gs
fisttpl
push
orb
icebp
cmp
stos
sbb
mov
push
icebp
xchg
into
dec
lret
insl
es
sbb
pop
leave
test
pop
movsb
adc
dec
push
test
add
ja
lea
adc
dec
mov
or
mov
sti
or
push
xor
icebp
out
or
jle
add
test
add
sbb
ret
mov
movl
cmc
inc
xchg
sub
cmp
adc
cli
inc
cmpsb
xor
aaa
rep
mov
jno
or
mov
xor
add
incb
test
cmpsb
sbb
push
mov
enter
aaa
scas
adc
test
push
mov
lcall
jnp
sbb
adc
dec
stos
out
adc
ror
or
mov
pop
mov
and
into
pusha
mov
aam
sahf
sbb
pop
js
cmp
dec
pop
test
sbb
addr16
loop
mov
in
outsl
adc
fcoml
adc
sbb
int
add
test
lea
jg
and
adc
sub
test
iret
jg
mov
das
bound
ja
xchg
movsl
mov
and
or
xchg
lret
decb
inc
mov
pop
mov
cmp
mov
cmpsb
xchg
mov
or
inc
in
add
nop
xor
lcall
mov
shrl
push
mov
sahf
rcrb
inc
sub
leave
and
mov
ljmp
jecxz
cwtl
aas
adc
stos
fwait
sub
mov
movups
sub
push
cmp
cltd
fmulp
sahf
inc
rcll
cmp
inc
cmp
jmp
test
shlb
xor
movsb
mov
imul
sbb
iret
jp
or
sub
shll
xchg
adc
jp
rclb
xor
fwait
inc
jge
lods
dec
cmp
pop
lret
cwtl
dec
into
icebp
xchg
dec
mov
jbe
cmp
mov
cld
sarb
inc
or
cmpsl
leave
xchg
stos
mov
inc
add
cmp
neg
fs
xlat
pop
sbb
int
xor
push
xor
push
lods
and
vpsrad
push
pop
cmpsl
ja
mov
mov
shl
ja
lret
mov
jnp
add
mov
or
mov
cmp
mov
test
pop
fst
jbe
jno
xchg
out
add
jp
aam
push
repnz
xchg
and
popf
ficomps
or
in
xchg
adc
js
or
lcall
sub
loop
ret
sub
sub
int3
test
mov
js
push
or
lds
mov
cld
jbe
arpl
push
push
sbb
rcr
inc
fucomip
and
ja
adc
popa
imul
add
pop
mov
xchg
stc
outsl
jge
mov
jp
into
xchg
lock
imul
out
insb
push
fwait
push
pop
fwait
pop
int
sub
jno
pusha
push
ja
push
mov
add
out
lahf
and
or
inc
loope
and
out
call
outsl
jae
movsb
pop
mov
popa
lock
jo
pop
fsubrp
nop
jno
mov
out
ret
imulb
sub
in
mov
shll
fcoms
hlt
add
pop
in
jb
cmp
in
and
div
sub
fldenv
inc
pop
out
push
sub
fsts
sbb
nop
jl
pushf
mov
or
push
push
mov
sti
sbb
lcall
push
and
icebp
aad
scas
or
imul
fdivl
shl
mov
xor
inc
jge
dec
fwait
nop
aad
in
clc
test
jae
xor
mov
repz
or
cmp
mov
loop
int3
mov
aaa
lods
xor
sbb
mov
lahf
rorl
inc
sbb
jle
mov
mov
xchg
lods
mov
pop
pop
stos
and
call
xchg
loopne
sub
or
shll
repz
inc
dec
and
xor
sahf
es
andl
addr16
addr16
mov
push
scas
lret
xchg
mov
add
xchg
mov
cld
sbb
xchg
inc
dec
xchg
sub
adc
push
arpl
fists
sub
dec
pop
bound
lock
jge
lret
or
outsb
adc
xchg
push
inc
rorl
xor
push
hlt
daa
or
hlt
mov
sarb
xor
fwait
cwtl
in
repnz
push
xlat
rcll
jbe
imul
lods
xor
jge
push
out
cmp
jo
xchg
cmc
cmpsl
xchg
js
stc
mov
push
inc
jl
inc
dec
mov
add
or
or
and
mov
daa
mov
push
das
ljmp
in
adc
pop
push
cmc
movsl
js
add
leave
mov
js
loope
jmp
pop
lds
out
pop
and
mov
fcmovu
xor
lret
lahf
aad
dec
push
inc
mov
in
test
add
pop
mov
aam
cmp
xchg
inc
pusha
and
pop
and
cmc
cmc
sub
adc
and
ljmp
cmp
filds
pop
push
mov
cs
clc
xchg
lahf
cld
push
mov
imull
lods
and
pushf
arpl
jno
sbb
cmp
pusha
pusha
and
imul
test
mov
ror
into
movsb
shlb
gs
mov
pop
push
outsl
loope
int3
fistpll
pop
sub
jmp
cmpsl
mov
fwait
cltd
jle
mov
lahf
aas
pushf
and
in
or
sub
jns
mov
test
ljmp
sub
mov
cmp
pop
jb
dec
and
rolb
ja
mov
push
mov
outsl
dec
sbb
pop
xor
push
mov
mov
repz
test
push
xchg
sbb
xor
cmp
sbb
ret
ja
dec
popa
xchg
orl
lret
mov
addr16
fsubl
push
or
ret
adc
push
adc
sti
jecxz
cmpsb
pop
sub
xor
pop
outsb
adc
lock
in
cwtl
jmp
jmp
pop
shl
inc
jno
int3
inc
xchg
cmp
fistpl
mov
scas
cmpsl
lret
test
jno
mov
scas
mov
xor
dec
mov
lea
loop
mov
push
cmp
ret
pusha
xchg
mov
mov
dec
ret
push
jo
in
testb
fldcw
icebp
inc
lods
pop
data16
sub
adc
add
inc
xchg
mov
sub
lcall
mov
dec
and
mov
pop
push
and
xchg
fsubrs
xchg
mov
out
cmpl
clc
xchg
fs
pop
dec
push
int3
sub
std
or
adc
sbb
in
sbb
fdivr
int3
test
push
mov
insb
movsl
push
cmp
lock
mov
pop
and
stos
stc
aad
xchg
mov
pop
or
push
mov
mov
stos
sub
sub
fmull
das
sti
cs
mov
push
imul
movaps
and
adc
imul
inc
add
gs
fmuls
insb
lds
nop
pop
dec
mov
inc
insb
scas
xor
mov
sbb
sahf
jecxz
push
add
cwtl
rolb
test
in
scas
jbe
dec
add
mov
push
mov
pop
fwait
mov
mov
cltd
out
ss
testl
mov
cmpsl
ds
add
dec
jno
xchg
lret
xchg
xchg
push
pop
loope
sub
out
or
xchg
and
inc
push
out
lret
lock
in
aad
das
bound
xchg
push
stos
lahf
xchg
mov
xchg
int
popf
dec
cld
dec
adc
sbb
in
in
mov
dec
stc
mov
or
and
push
aas
sbb
xor
dec
nop
stos
xor
cmp
mov
adc
inc
add
into
hlt
bound
add
push
or
popa
or
fbstp
stos
inc
or
cmpsl
mov
add
xor
mov
sbb
mov
aam
mov
jmp
push
push
and
sbb
in
jns
jmp
pop
js
andb
pop
stos
adc
push
xchg
imull
jae
in
lods
mov
push
xchg
out
in
pop
mov
cld
ja
inc
je
outsl
or
ss
xchg
cmp
mov
sbb
out
stc
cli
mov
in
je
cmc
stos
mov
shrl
pop
out
xchg
in
jmp
mov
mov
into
mov
adc
into
das
jnp
repz
jo
mov
fists
xchg
orb
test
rolb
sub
adc
fcompl
iret
popf
sub
dec
mov
cmp
pop
jmp
and
pop
sbb
xor
inc
xchg
ljmp
xor
movsb
fwait
scas
inc
and
mov
adc
fists
lret
fcmovnb
pop
das
sahf
jmp
dec
push
pop
stos
xchg
icebp
jmp
aas
jbe
mov
mov
negb
xchg
lcall
pop
inc
movsb
jl
mov
sbb
pop
and
xchg
pop
add
xchg
mov
repz
int
xlat
mov
lret
repz
xchg
test
push
sub
xor
jne
pop
sti
fucomi
cmpsb
outsl
xor
cmp
adc
and
out
cmpsb
cwtl
dec
out
int
rorl
lret
sbb
add
loope
pop
subb
cltd
pop
inc
test
mov
mov
lea
jp
fincstp
popa
aam
mov
divl
out
xchg
mov
inc
mov
and
xchg
mov
ret
divl
test
lods
mov
popa
es
pop
inc
rorb
pop
pop
scas
gs
out
jne
pusha
sbb
aas
mov
fdivs
test
shl
pop
pop
cmpsb
fsubrl
std
rorl
ret
mov
xorl
jb
sub
sbbb
xchg
mov
lcall
add
enter
sbb
jg
adc
pusha
and
and
xchg
jl
cmpsb
nop
push
xchg
xchg
mov
cmp
xchg
aas
push
add
jae
pusha
sbb
push
xor
inc
jnp
mov
arpl
pop
mov
adc
adc
mov
mov
push
add
ret
xchg
inc
out
into
enter
popa
xchg
push
pop
in
xor
icebp
scas
mov
and
sub
jb
xchg
popl
sti
mov
rorb
call
mov
ret
xchg
js
mov
pop
adc
lret
mov
push
xchg
jnp
mov
fs
sbb
xchg
pop
xchg
mov
and
push
int
aad
popf
push
push
xorb
cltd
outsb
mov
mov
sub
stc
lret
push
and
jno
lret
nop
ss
aas
adcl
pop
mov
inc
repnz
lods
movsl
es
loope
repz
cmp
lods
jp
arpl
pop
test
push
jl
xor
pusha
inc
movsb
mov
sbb
mov
lock
clc
inc
inc
cli
cmp
movsl
xchg
ss
add
adc
test
int3
add
test
popf
inc
test
nop
push
or
lods
mov
pop
mov
cld
and
call
jg
push
cmpsl
addr16
loopne
cltd
jne
mov
ljmp
dec
lock
setne
shlb
add
cs
adcb
and
mov
pop
jo
mov
mov
daa
push
xchg
rcrb
pop
out
inc
pop
mov
cmp
mov
push
cmp
push
ret
push
xor
pop
or
pop
sub
xor
imul
fs
and
or
pop
lock
popf
cmp
sub
lods
lds
lock
ja
adc
cmp
pop
pop
mov
xor
xchg
or
iret
test
ret
mov
jne
mov
xbegin
ljmp
push
sub
loope
fidivs
out
xchg
pop
xchg
mov
test
fistl
inc
xor
sub
pop
cmp
jne
fstpl
into
aad
fdivl
insb
push
fs
pop
sbb
pop
pop
mov
in
rcr
lods
jecxz
and
loopne
int3
inc
jns
and
and
or
nop
jae
inc
mov
in
in
and
pop
xlat
sub
aaa
push
movsl
stc
out
xchg
adc
daa
ret
xor
sub
negl
mov
add
xor
int3
dec
xlat
mov
pushf
dec
cli
mov
ja
inc
cmp
jnp
loope
sbb
out
or
test
jo
out
roll
pop
push
pop
out
aaa
scas
and
and
arpl
pop
fcmove
std
jg
mov
test
inc
test
je
popa
mov
gs
fs
or
pop
jbe
add
ss
add
stos
and
push
into
sbb
sbb
into
insl
or
xchg
daa
movsb
out
add
push
loop
push
sbb
into
pop
subb
inc
dec
sbb
icebp
xor
movsl
mov
dec
jns
shlb
ret
inc
xlat
pop
xchg
jmp
push
inc
rolb
shlb
inc
jmp
mov
jns
mov
cwtl
imul
cmp
inc
pop
xor
sbb
xor
in
or
movsl
sbb
xor
lea
dec
fdivl
jle,pt
pop
out
int3
fidivl
shlb
push
sbb
int
out
adc
adc
jns
xor
push
cmpsl
pop
adcb
push
mov
jg
mov
sub
add
repz
mov
push
add
mov
sub
int
jbe
in
inc
in
enter
daa
jo
cli
mov
jo
dec
push
mov
out
xchg
iret
mov
jo
je
cli
jl
mov
test
addr16
test
scas
lret
stos
stos
sti
ret
dec
cmc
xor
or
out
jne
call
imulb
pop
pop
dec
push
mov
cmpsb
loop
repz
pusha
and
cld
or
add
pop
shrl
mov
leave
mov
mov
cmp
add
outsl
add
push
fs
lret
mov
fwait
lret
bound
sbb
sbb
sbb
push
jb
rorb
xlat
jo
pop
shl
shll
sbb
sbb
cmc
add
shll
xorl
insl
sub
rcrl
mov
xor
insb
mov
and
hlt
pop
pop
inc
movsb
fldt
cmp
sub
xor
in
inc
pop
mov
or
push
mov
sbb
loope
in
push
notl
xor
repz
btl
xor
in
call
ja
ljmp
in
cmp
dec
fsubl
sbb
stos
sbb
and
cwtl
jb,pt
pop
loopne
jae
sub
call
jp
inc
out
ljmp
sbb
cltd
jecxz
inc
sbb
sub
push
out
cltd
ficomps
sbb
stos
cld
rclb
push
xor
or
cwtl
mov
stos
or
movsl
test
arpl
aam
out
pop
xor
inc
les
stos
icebp
aad
sarb
dec
dec
sahf
cmpsb
mov
in
das
add
pop
popf
idiv
int
add
mov
sbb
jo
inc
inc
cwtl
shrl
movnti
in
mov
bound
icebp
ja
clc
test
or
mov
fisttpl
test
test
adc
popl
bound
hlt
add
mov
fcoml
dec
mov
in
push
das
hlt
cmp
enter
shll
mov
loope
test
movsb
and
jge
and
and
popa
inc
dec
movsl
xchg
pop
dec
jle
into
in
add
adc
dec
lods
jo
sub
in
loope
rcrl
lcall
and
mov
out
inc
mov
dec
and
fcomi
mov
fwait
dec
push
rcr
outsl
pop
repz
sti
lret
pop
stos
jge
lcall
sub
imulb
pop
jle
aaa
in
adc
mov
sub
mov
jb
bound
ljmp
push
add
or
arpl
sbb
inc
outsl
loop
push
lock
inc
sar
das
rorl
pop
mov
and
pop
mov
cld
jp
pusha
subb
aam
and
jb
jno
mov
pop
jg
movsb
dec
xor
cmp
inc
xchg
aad
inc
xchg
cmp
fs
lods
mov
loop
sub
cmp
sub
and
push
mov
cmp
pop
popa
or
lcall
stos
cld
mov
movsl
push
arpl
enter
inc
lcall
dec
cli
sbb
cmpb
scas
lret
push
lcall
push
movsl
fwait
cmp
pop
adc
repz
mov
repnz
lock
or
cmc
int3
loopne
push
test
mov
push
push
and
xchg
jle
push
mov
les
cmp
or
jae
jg
jg
cmpb
call
icebp
jg
push
xchg
sub
lods
inc
into
fcmovne
cmpsb
mov
lds
fwait
and
mov
pusha
scas
lods
outsl
push
sub
stos
lods
adc
mov
sahf
xor
sahf
sub
sub
xchg
test
enter
rolb
adc
mov
push
imul
in
adc
jg
adc
movsl
mov
addr16
push
or
sbb
mov
hlt
scas
pop
sarl
pop
ja
cltd
jb
addr16
fwait
clc
mov
push
loopne
call
mov
iret
lret
cld
mov
fildl
mov
xor
mov
movsl
scas
rorb
in
jmp
inc
jne
hlt
push
or
fmuls
and
in
in
push
add
push
addb
das
xchg
addr16
and
push
xor
sub
add
inc
pusha
clc
pop
and
fdivrs
stos
pop
std
pop
insb
in
sbb
scas
stos
sbb
dec
mov
insl
dec
test
lahf
adc
call
fwait
fs
stc
test
cmpsl
xlat
bound
call
pop
ret
sbb
scas
hlt
xchg
xor
pop
mov
loop
arpl
xchg
cld
mov
icebp
jae
in
mov
push
pop
sbb
mov
jno
ja
xchg
and
push
iret
jno
shrl
adc
xor
fsubl
xchg
pop
mov
in
ficompl
inc
repnz
jmp
jl
lock
mov
insb
push
fcoms
inc
xchg
add
jecxz
insb
pushf
lds
mov
outsl
jne
inc
jb
push
and
icebp
fidivs
mov
inc
mov
cmpsb
repz
pop
dec
mov
pusha
jb
and
adc
or
out
cwtl
jge
xchg
sub
inc
push
push
fs
repz
negl
sbb
icebp
mov
pop
lahf
lahf
mov
cwtl
xchg
fbld
adc
enter
mov
adc
xchg
push
cmp
push
popa
dec
sti
aas
ret
mov
clc
les
adc
xor
std
jno
ds
mov
dec
cld
fstpl
add
or
push
pushf
add
cld
lcall
out
nop
xor
xor
rorl
and
adc
jbe
sub
ret
in
mov
out
sbb
pop
jmp
stc
sbb
mov
jbe
dec
rorl
insb
adc
popl
lock
push
push
jne
inc
push
jne
outsb
test
push
xlat
andb
jno
sbb
jecxz
inc
push
cmp
sub
add
dec
inc
jmp
add
inc
mov
inc
fidivl
inc
or
mov
mov
ret
push
arpl
je
jbe
hlt
fistpl
mov
xchg
push
decb
mov
ret
jl
lahf
test
lahf
fcoml
adc
cmp
jmp
push
and
pop
or
mov
pusha
pop
cmp
mov
fidivrl
in
mov
mov
decl
cmp
cmpsb
sbb
int
leave
out
pop
xchg
decl
lods
jb
icebp
or
sub
repnz
ret
aad
inc
in
xchg
popa
sar
add
add
adc
lods
in
jo
inc
loop
mov
out
div
xchg
decl
cmp
xchg
mov
or
push
sbb
mov
int3
mov
mov
push
jl
mov
xchg
lds
cmp
jmp
movsl
adc
sti
inc
adc
dec
int
sbbb
mov
dec
cmpsb
adc
scas
xchg
in
lret
cmp
cwtl
dec
cmp
xor
and
mov
jl
and
add
inc
dec
nop
popf
ret
jne
push
stos
sub
mov
pusha
jmp
lods
addr16
mov
test
mov
lods
int3
and
sub
dec
das
and
pop
or
pop
push
scas
aaa
push
dec
fbld
aaa
add
sub
and
cmp
sub
cmc
pop
sbb
mov
insb
sbb
stc
jge
pop
or
test
pop
clc
adc
push
sub
sbb
push
shl
stc
xchg
scas
push
aaa
jb
cmpsl
outsl
push
xchg
push
dec
fwait
add
nop
pop
sar
inc
cmp
imul
mov
cltd
jecxz
jnp
loop
out
ror
es
jecxz
cmp
mov
je
lcall
ss
push
mov
imul
scas
loop
into
cltd
aam
mov
div
cmp
jg
shl
mov
sub
mov
aaa
fcoms
cmp
ljmp
enter
cld
cmc
in
jae
add
mov
fstps
push
aad
mov
shrl
cwtl
shl
sub
jl
or
inc
adc
xchg
sbb
or
sub
xchg
stos
add
out
xor
add
sbb
xor
sbb
jno
mov
aas
call
cmp
xchg
fdivrl
add
stos
or
int3
cmp
pop
lods
push
divl
es
cmp
mov
xchg
inc
notb
add
adc
add
mov
das
lods
push
push
fsubrp
jle
lods
mov
icebp
inc
hlt
into
fisubrs
cli
mov
xchg
and
dec
jg
daa
ret
add
arpl
popf
bound
loopne
lods
ret
pop
out
fstl
lods
xor
insl
mov
imul
cmp
mov
inc
sahf
xchg
or
hlt
xchg
adc
jmp
jg
stc
pop
add
xor
repz
and
sub
sbb
cmpsb
mov
punpcklbw
mov
pop
push
mov
jb
fiaddl
jp
xchg
iret
jo
fcoms
ret
adc
xor
lea
add
sub
sub
sub
inc
iret
idivb
insb
ljmp
aaa
mov
int
out
mov
mov
add
ss
xor
das
dec
and
ljmp
sbb
inc
je
mov
mov
push
repz
push
test
adc
outsl
jl
lea
inc
xchg
push
aas
cltd
pop
idivl
faddl
lahf
mov
dec
imul
sbb
lcall
sti
fwait
nop
and
lret
mov
je
and
cmp
imul
int
or
xor
pop
cmpsl
dec
test
mov
jno
cmpsl
popa
pop
mov
sbb
jle
lahf
test
popa
xor
lds
mov
mov
xchg
adc
mov
xchg
sub
xchg
scas
jmp
xchg
mov
in
inc
out
mov
cmp
or
and
or
popa
mov
pop
inc
xchg
push
dec
out
aad
mov
testb
fcoms
jb
adc
insb
mov
popf
lea
mov
and
xchg
inc
pusha
imulb
add
cld
mov
ret
dec
lods
mov
popa
aam
addr16
iret
out
jo
cmc
xchg
mov
popf
outsl
xorl
int3
shlb
mov
into
fstps
or
pushf
fisttps
cmp
cmpsl
insb
pop
add
sarl
push
repnz
xlat
nop
adc
std
sahf
cwtl
cli
dec
rolb
bound
popa
loopne
pop
insb
in
jge
pop
jmp
cltd
mov
outsl
xor
dec
adc
mov
jge
dec
xor
push
mov
aad
or
sbb
adc
push
test
or
ljmp
cmp
pop
loope
inc
out
cmc
pop
pop
add
icebp
test
lea
xlat
rorb
lcall
add
dec
and
mov
inc
jns
bound
loopne
inc
mov
imul
cmp
xchg
ret
pop
mov
sbb
mov
pop
push
in
push
imul
pop
insb
mov
hlt
mov
lock
stc
out
pop
and
xchg
push
testl
xor
mov
jge
cmp
ljmp
lcall
and
cmp
push
lock
jo
ss
das
add
and
xchg
in
fs
adc
inc
arpl
mov
adc
sub
cmp
inc
jo
lods
lcall
ret
imul
lret
sahf
lsl
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
push
mov
cmp
jmp
jl
fisubrs
jecxz
cmp
lock
cltd
jne
and
cmp
or
sub
dec
xor
jge
mov
or
scas
jno
leave
xor
outsb
aam
inc
movsb
sub
pop
sbb
cmp
scas
sti
repnz
enter
shlb
loop
cmp
mov
sbbb
fwait
and
in
repnz
pop
sbb
xchg
push
das
dec
lods
inc
jecxz
mov
jl
cs
sarl
fwait
lods
sub
mov
cmpb
mov
in
mov
sbbl
out
test
and
shr
sbbb
nop
or
in
mov
adc
push
inc
lahf
rcll
adc
dec
jecxz
ljmp
or
aaa
cmp
sahf
test
das
fcmovbe
hlt
sub
int3
mov
ljmp
in
in
out
mov
repz
cmp
cmpsb
fmul
sub
mov
nop
arpl
in
std
or
loope
mov
fdivs
imul
in
ret
lds
or
lds
cli
ljmp
jle
xchg
mov
addr16
ret
dec
imul
ficomps
mov
jnp
xchg
jge
lea
rorb
sub
push
jo
sub
loop
cmpsb
cmpsl
push
jnp
cli
dec
or
pop
ss
and
inc
in
test
mov
scas
imul
repnz
leave
adc
dec
mov
and
xor
xor
es
lret
pop
adc
push
jns
push
es
lret
jl
ja
xor
sahf
adcl
push
dec
sbb
out
sbb
ja
outsl
push
sbb
jle
push
andb
lret
xchg
mov
adc
xor
testb
lods
repz
xchg
cmp
movsb
mov
ja
cmp
xchg
dec
mov
mov
xchg
aam
fimuls
mov
xchg
mov
addr16
push
daa
push
cmp
sub
cmp
adc
inc
out
insl
sbb
cmp
lcall
cmp
int
dec
cmpsl
fs
mov
ja
aas
repnz
pop
ja
or
xchg
sub
fistps
and
rorl
lock
cli
mov
cwtl
mov
test
lret
xor
lret
repz
xchg
fsubrs
add
sahf
out
and
mov
xchg
xchg
or
fcmovb
inc
mov
call
xchg
mov
xchg
mov
lcall
add
jmp
in
pop
negb
scas
inc
and
lods
cmp
loopne
movsl
rep
mov
inc
xchg
popa
pop
dec
sbb
rcll
hlt
jnp
sbb
adc
adc
sbb
nop
jns
mov
mov
sub
pop
jns
and
test
and
push
notb
shl
loopne
pushf
dec
hlt
scas
cmp
ret
pop
push
dec
add
movsl
xor
cmpl
rcrb
insl
fstpt
or
mov
notb
or
push
lods
lock
adc
fs
and
fdivs
pop
pop
mov
xor
insl
xchg
arpl
cli
xchg
jp
cmp
inc
stos
mov
fmull
mov
call
cmp
mov
jp
leave
outsl
inc
adc
ret
into
das
jl
sbb
stos
imul
pop
dec
lods
add
je
pop
jne
fadd
push
inc
mov
fidivrl
test
xchg
ficomps
inc
or
adc
bnd
xchg
inc
push
cmp
inc
shll
push
push
inc
jmp
adc
out
inc
sub
cmpsl
mov
dec
jecxz
adc
and
sbb
insb
mov
ss
mov
jecxz
push
stos
jmp
jns
sbb
or
pop
sbb
push
pop
push
push
ds
sbb
mov
pop
out
adc
out
addl
mov
ret
in
push
sbb
in
mov
stos
popf
scas
mov
mov
movl
cmp
sbb
inc
mov
sbb
icebp
sub
lods
or
mov
mov
insb
aam
call
mulb
test
push
xchg
cmp
test
movb
movsl
dec
jg
out
popa
pop
fdivrl
in
daa
push
loop
cmp
cli
dec
lret
aas
cs
adc
mov
dec
xor
push
outsb
adc
fcomi
rcrl
xor
outsb
or
mov
cwtl
shlb
sbb
call
adc
out
mov
or
or
inc
imulb
adc
mov
jmp
test
mov
cld
scas
lods
and
stos
iret
out
pop
pop
cld
mov
xor
ja
dec
cmp
sub
add
cli
or
int
fcomip
shlb
lcall
xlat
js
into
adc
lods
ljmp
adc
mov
cmc
add
xor
or
jecxz
and
xor
daa
aas
lods
outsl
mov
cmp
test
xlat
ret
lcall
mov
pop
jb
out
outsb
or
cmovg
aad
mov
enter
push
in
add
inc
loopne
dec
xchg
or
and
jnp
push
xchg
loopne
sbb
mov
mov
and
fdivp
mov
inc
sti
inc
mov
sbb
push
ret
jle
cmp
push
or
add
jmp
cmp
fwait
pushf
stos
sahf
mov
popf
jp
pusha
add
sub
sarl
clc
mov
fsts
sbbl
and
ljmp
gs
jmp
or
push
into
xchg
mov
loopne
xchg
js
idiv
es
rcr
mov
mov
dec
bound
xor
ffreep
pop
ljmp
loop
mov
sbb
test
adc
push
popfw
sub
je
inc
pusha
out
nop
rcrl
cs
pop
xchg
test
out
insb
imul
dec
xlat
call
mov
jl
jecxz
dec
xchg
test
inc
jne
je
mov
cltd
int
fwait
addr16
lret
shrl
mov
pop
sbbb
jmp
subb
push
mov
jno
pop
adc
dec
ja
jno
ja
push
and
in
xchg
lcall
icebp
movsl
pop
dec
add
ret
jb
clc
es
stos
push
mov
dec
loope
sub
test
and
mov
cltd
mov
dec
pushf
outsb
dec
sub
bound
lods
xlat
incb
insb
mov
lods
stos
push
scas
rcr
add
movsb
loopne
in
mov
int3
fcomps
push
or
mov
adc
call
std
enter
sbb
lret
sub
pop
xchg
enter
xor
movsl
sub
int3
mov
xchg
repz
inc
mov
int3
or
nop
idiv
or
sbb
xorb
insl
repnz
sbb
pop
rcrb
xor
fisubrs
jp
and
ljmp
push
push
imul
mov
dec
push
mov
call
rolb
mov
imul
and
add
fdiv
aam
xchg
dec
data16
nop
push
movsb
sub
and
pop
hlt
ret
pop
inc
cmp
push
movb
xor
xchg
jns
lods
and
jns
push
nop
xor
cld
push
sarb
sbb
xchg
enter
mov
cmpsl
out
mov
int
cli
xchg
or
js
sub
sbb
pop
fsubr
mov
mov
push
cmpsb
or
and
rorl
inc
sbb
sub
repz
adcl
or
test
into
filds
cmpsb
add
sbb
pop
inc
jbe
out
and
out
pop
in
mov
sbb
imul
inc
pop
jne
mov
jno
out
incb
std
jle
or
sti
repz
in
pop
jecxz
fistpl
xor
jb
jle
mov
inc
sbb
and
cwtl
into
arpl
ret
loopne
arpl
div
mov
mov
push
cmpsb
nop
mov
dec
push
test
jns
call
das
ss
and
sub
pop
fildll
loopne
sub
pusha
mov
jp
push
rolb
std
inc
loop
or
mov
dec
fildl
out
mov
sbb
mov
out
jno
mov
xor
je
cmp
jnp
add
test
insb
pop
pop
cmp
int
mov
jne
idiv
cmp
mov
sub
lds
jns
movsl
adc
lahf
push
ljmp
ljmp
mov
adc
repnz
cmp
fwait
subl
xor
cmc
mov
xor
pop
sub
cmp
cmp
mov
fstl
nop
out
lock
push
sti
movsb
js
imul
sub
jb
pop
sbb
roll
jne,pt
cld
mov
in
or
xchg
inc
and
sbb
add
jne
cld
xor
loope
mov
bnd
lea
ss
sahf
inc
push
push
inc
in
cmc
mov
inc
push
sbb
inc
xchg
jno
jg
pop
leave
fwait
xor
sub
jg
add
hlt
out
in
in
push
mov
pop
movsb
mov
rcl
mov
sub
inc
pop
mov
daa
sub
adc
jbe
lds
fidivs
sbb
sub
call
pop
push
imul
vpaddusb
jl
xchg
cld
xor
mov
cmc
nop
shrl
lret
mov
daa
jg
add
repnz
imull
insb
notl
pop
in
add
push
mov
shl
inc
jb
arpl
dec
pop
lret
call
cld
xchg
or
aad
adc
cmp
lret
adc
dec
mov
pushf
sbb
call
hlt
fcomi
mov
into
lods
or
xorb
in
loop
inc
test
add
stos
addr16
adc
sub
mov
pop
push
push
lods
int3
sbb
add
or
iret
ja
call
fcompl
std
pop
push
push
cmpsl
cmp
jo
shrl
fisttps
xor
mov
jnp
js
bound
mov
test
mov
xchg
dec
orl
jae
xchg
jns
mov
lret
scas
ljmp
mov
call
jo
push
test
jg
adc
pop
loope
imul
ret
lcall
jl
xchg
or
data16
aad
add
or
or
sahf
xor
mov
call
jp
mov
xor
sub
out
daa
xchg
je
xchg
and
ja
ss
mov
push
mov
jp
xor
into
lds
adc
mov
push
icebp
xor
out
pop
push
decl
and
outsl
stos
xchg
imull
repz
xor
cmpl
daa
lret
push
cmp
or
inc
push
jae
push
xchg
xchg
add
and
decl
pushf
lods
out
jmp
jecxz
jge
push
xor
mov
or
mov
add
insb
sahf
push
stos
outsl
dec
movsl
mov
loop
test
jg
xor
into
and
test
andb
lods
clc
xchg
cmp
xchg
mov
sbb
push
lcall
movsl
ljmp
cs
inc
pop
mov
and
lods
ficoml
out
and
or
scas
pop
jl,pn
mov
xchg
mov
push
push
jge
aas
fs
and
pop
movsb
mov
movsl
ficoms
inc
inc
cmpsl
adc
lret
dec
into
pop
mov
dec
pushw
push
add
cmp
movhps
adc
or
enter
adc
test
bound
xor
mov
aas
inc
or
pop
mov
mul
push
mov
cld
hlt
adc
mov
pop
loop
ss
mov
hlt
mov
cltd
and
or
fisubs
lahf
lcall
jns
mov
inc
pop
dec
loopne
dec
mov
scas
outsl
adc
lods
sub
cmc
jnp
loop
mov
sbb
pop
jle
bound
test
aad
xor
pop
adc
insb
insb
adc
fsubrs
lret
dec
movsb
xor
cld
dec
cmpb
aas
xor
stc
inc
xor
dec
fcomi
mov
stos
div
adc
jg
fstp
sarl
push
adc
imul
and
mov
test
in
or
xchg
rorb
lahf
mov
or
jg
pop
repnz
mov
cli
ja
mov
js
daa
jb
dec
adcb
popf
out
scas
lahf
add
dec
mov
xor
and
stos
mov
mov
imul
stos
outsl
scas
pushl
mov
notb
cld
in
adc
jno
ds
data16
into
cs
fmull
inc
mov
shr
sub
es
clc
mov
fisttps
lods
fwait
jmp
add
ret
lahf
testb
ja
lcall
pop
sbb
bound
and
push
pop
xchg
xchg
sbb
jno
inc
icebp
xchg
sub
addr16
cmc
fcoml
push
shll
mov
inc
fldcw
jbe
cli
add
add
sub
cs
inc
mov
es
int
ret
xor
dec
jbe
test
ja
shr
fsts
jne
push
inc
aam
inc
aam
sbb
loopne
dec
in
pop
or
and
mov
mov
sub
pusha
mov
in
push
push
sbb
mov
lds
imul
emms
cmp
dec
jno
aam
mov
nop
popa
push
insl
pusha
repz
outsb
cmp
fwait
mov
dec
fcompl
ret
sub
outsl
pop
insl
or
sbb
stos
sti
imul
sbb
mov
push
inc
mov
add
jl
mov
int
fdivs
push
pop
xchg
test
lods
mov
or
pop
lahf
insl
daa
jl
mov
add
push
repnz
out
lods
push
les
aam
pop
push
ljmp
fcoms
adc
pop
sar
sub
mov
mov
mov
mov
dec
and
push
add
push
hlt
je
insl
idivl
fdivs
jns
fsts
enter
mov
clc
test
pop
in
mov
mov
testl
mov
into
xchg
call
cmp
rclb
pop
and
xor
mov
leave
shlb
iret
add
repz
movb
xchg
popa
or
scas
add
adc
push
and
jnp
sbb
sbb
sub
push
sbb
cmc
pop
mov
xchg
outsb
test
add
inc
orb
mov
pop
ret
xlat
out
xor
inc
sub
adcl
xchg
sbb
popf
cwtl
inc
jle
cltd
cmp
sbb
hlt
jp
mov
jb
dec
or
pop
or
mov
xchg
sbb
sub
mov
cmp
decl
sub
mov
and
fists
aam
mov
pusha
aaa
adc
sbb
sbb
lea
pop
sbb
js
sub
sub
in
outsl
cltd
inc
pop
push
push
dec
pop
dec
fdivrs
fdivrl
xlat
jns
test
jmp
bound
sbb
inc
je
mov
in
ss
adc
and
iret
aam
daa
jge
repz
loope
mov
ret
jno
add
stos
loope
mov
ret
mov
mov
test
pop
in
iret
fwait
sbb
mov
adc
cmpsl
pop
js
add
jb
cmp
out
imul
arpl
movsl
fadd
xor
mov
ss
jmp
loopne
adc
mov
lret
xchg
fwait
inc
dec
movsl
push
cmpsb
xor
and
jg
push
adc
mov
lods
adc
and
sub
aad
lcall
xor
call
push
sbb
int3
je
mov
rcll
bound
or
xchg
inc
sbb
mov
repnz
fmul
popa
inc
movsb
dec
mov
push
test
mov
inc
sbb
lcall
outsb
jp
jne
xchg
dec
or
push
dec
cmp
fxch
lahf
xchg
ljmp
pop
cmp
push
sub
and
call
stc
movsb
add
insl
mov
or
addb
cld
jecxz
push
xor
add
rorl
inc
push
decl
mov
xor
adc
add
push
sbb
adc
or
mov
mov
push
movsl
outsb
adc
shlb
add
pop
mov
and
adc
lahf
mov
or
rolb
jl
dec
push
fldt
and
sbb
inc
orb
ret
xchg
lock
cmpsb
adc
mov
sbb
insl
xchg
sbb
inc
outsb
mov
in
mov
test
push
mov
fidivl
fldl
mov
clc
and
enter
insl
hlt
js
add
ja
mov
add
xchg
inc
les
sub
lea
sub
xchg
fimuls
add
orl
shll
sub
fldcw
cmp
pushf
xchg
pop
cmp
adc
rcrb
cmpsl
aad
xchg
pop
nop
inc
pusha
mov
pop
ss
int3
jno
daa
rcr
mov
pop
lret
cltd
ret
mov
leave
cld
in
adc
push
cmp
xchg
cmp
inc
subb
inc
sub
add
addl
mov
fiaddl
loop
pop
popa
cmp
sbb
pop
loop
pop
jns
push
andb
stc
int3
idiv
arpl
stos
xor
movsl
cs
xchg
std
jmp
push
mov
pop
mov
adc
aas
adc
cli
xlat
mov
fldl
loopne
shlb
cmp
xchg
repz
shlb
jae
rcrl
mov
and
jnp
inc
lret
push
mov
pop
mov
ret
fsts
ret
dec
test
fdivrs
out
sbb
pop
cmpsb
int
jae
jecxz
add
mov
dec
hlt
push
jmp
sub
dec
cmc
daa
aaa
sbb
sbb
mull
call
subl
mov
aad
mov
out
pop
aaa
lahf
imul
fcoml
cli
fistpl
mov
mov
scas
xor
or
or
out
lret
ds
jp
int3
popa
jnp
into
adc
ds
sub
loop
loopne
lods
jns
rcr
sbb
xchg
sbb
cmpl
js
push
or
lret
mov
adc
imul
loopne
mov
fisttps
xchg
push
popf
les
mov
cltd
or
repz
daa
push
sub
mov
and
dec
call
jmp
add
xor
jle
test
jl
inc
mov
inc
inc
fs
flds
imul
add
cs
in
rorb
push
push
sub
hlt
aas
dec
cmp
inc
mov
stc
dec
cmp
dec
mov
subb
inc
and
insb
inc
push
pop
shll
stc
xor
sbb
sar
ds
pop
adc
mov
leave
inc
out
std
sub
ficompl
mov
lods
sub
pop
ret
imul
call
or
push
inc
pop
adc
test
lret
add
iret
mov
mov
movsb
in
pop
pop
mov
cltd
xor
stc
andb
mov
or
xor
daa
xchg
sti
cmpsl
inc
pop
shrb
xlat
adc
and
fwait
jp
push
push
jmp
lret
mov
xchg
js
test
lods
es
cmp
xchg
push
mov
ret
add
ss
loop
leave
mov
jmp
in
mov
mov
sarb
sbb
lods
cmp
ret
push
lahf
out
sbb
das
xor
lock
sbb
sbb
xchg
pop
not
push
test
adc
jns
jmp
jno
xchg
nop
es
adc
cld
mov
addl
cltd
inc
outsl
test
fisubl
mov
insl
sub
push
sub
cmp
mov
sbb
inc
adc
div
adc
fwait
dec
and
pushf
andb
xchg
cmp
jp
lods
or
punpcklbw
cmpsl
int3
fs
es
gs
xchg
repz
mov
insb
mov
dec
xchg
fcom
das
decl
jl
pop
mov
xchg
sub
fnstenv
mov
mov
adc
adc
pop
cmp
loope
outsb
lock
mov
cmp
pop
in
or
test
std
imul
sbb
mov
out
inc
aas
sub
jb
mov
fbld
repnz
pop
outsb
jnp
in
adc
pushf
fiaddl
pop
fildl
aam
vpmovb2m
ljmp
mov
mov
out
pop
jbe
xchg
loopne
or
pop
mov
jl
dec
nop
dec
cmp
ffreep
ljmp
ret
into
pop
mov
mov
mov
pop
iret
jo
fcomps
adc
hlt
mov
pop
sbbl
into
cmp
adc
cwtl
pop
xor
fists
dec
lahf
mov
xchg
pop
and
fs
call
inc
dec
js
mov
sub
outsb
sbb
aam
and
and
push
xor
lock
loope
addl
push
and
jo
sbb
cmp
mov
lret
ds
les
push
movsb
push
or
xchg
or
mov
fmul
sbb
test
sub
arpl
cmc
out
xor
xchg
fnsave
jl
jo
das
sbb
push
add
and
or
mov
dec
xchg
mov
push
clc
outsb
test
inc
leave
jg
mov
dec
or
js
loop
cmp
or
mov
push
dec
mov
aam
sbb
jg,pn
pushf
shrb
loop
push
imul
or
xor
mov
vmovups
shl
jg
dec
add
sarb
jnp
add
cltd
rcll
es
mov
or
fucomp
in
or
nop
cmpsb
lret
aam
aaa
iret
or
dec
xchg
mov
fildll
mov
insb
sbb
and
ret
shl
or
test
fcomp
in
in
leave
xchg
xchg
mov
cmp
imul
fbstp
mov
insl
loopne
sbb
pop
mov
cmp
jno
sub
into
xor
xor
mov
in
cmp
xchg
sti
mov
repz
ret
insl
into
rclb
jns
push
inc
scas
cmpsb
fmul
push
notl
xorb
xor
outsb
stos
jno
pop
mov
xor
jbe
loop
cwtl
mov
add
dec
pop
leave
dec
push
dec
dec
imul
cmp
repnz
into
clc
add
mov
fdivp
movsl
pop
into
clc
fcoml
fldln2
or
push
mov
sbb
ret
or
xchg
push
ja
lret
in
fucom
outsb
imul
and
add
push
adc
sti
pop
ret
gs
dec
cmp
popf
mov
stc
das
movsb
xchg
decl
add
ljmp
pop
jmp
addb
cmp
flds
mov
out
fwait
sahf
cmc
and
mov
insb
xchg
cmc
aam
fdivp
frstor
inc
mov
aad
adc
cmpsb
shlb
cmp
fnsave
xchg
and
es
addr16
outsl
push
dec
and
sbb
xchg
mov
jg
mov
xchg
cmp
lret
push
jg
scas
pop
sub
inc
mov
jno
pop
sub
popa
ret
aaa
addr16
icebp
stos
add
push
sub
or
addr16
add
imul
pop
test
or
je
insl
imul
xor
in
dec
inc
mov
jmp
xchg
testb
push
outsb
cld
push
jo
pop
add
cli
sub
dec
mov
hlt
aas
stc
sub
pop
and
stos
xchg
add
fdivs
push
xor
and
lahf
cld
ja
bound
jge
mov
std
xor
rcrb
pop
jnp
aaa
sbb
mov
fstpt
icebp
jge
fwait
push
test
dec
xor
sti
jge
jo
sub
mov
lret
or
jo
pop
inc
mov
nop
notrack
mov
popf
jbe
xchg
mov
pop
sbbb
inc
push
xchg
icebp
push
inc
push
push
or
cli
xchg
in
pop
int
out
push
icebp
out
sub
xlat
sbb
jnp
je
fcoml
int
rorl
ljmp
xchg
js
fucomi
in
pop
sbb
frstor
cmp
les
and
lock
or
aaa
in
mov
push
das
push
push
sub
cli
shrb
lods
dec
mov
sbb
adc
pop
pop
add
xchg
imul
lods
and
pusha
add
pop
mov
add
enter
scas
movb
add
aam
fistps
jno
xchg
cmp
dec
inc
push
popa
mov
int
sub
mov
iret
rorb
xor
xlat
jno
dec
fistpll
popf
in
test
add
clc
sbb
or
mov
and
or
cmp
mov
pop
cmpsl
mov
mov
jmp
adc
data16
daa
es
aam
sub
xchg
push
sbb
dec
shl
mov
dec
xchg
fsubrp
mov
jmp
sub
lahf
fidivrs
inc
mov
std
jp
aam
xchg
loope
cmp
xchg
sbb
mov
in
adc
cmpsb
add
pextrw
xchg
xchg
sbb
push
jmp
mov
in
insl
aad
daa
xchg
lock
lahf
dec
push
mov
test
cwtl
xor
jg
xchg
ss
cmp
data16
iret
fisttpl
enter
stc
mov
mov
fld
and
cmp
cmc
lret
jle
cmpsb
inc
call
pop
int3
ds
jae
sbb
fiaddl
jmp
in
mov
and
enter
adc
jno
into
push
inc
cmp
xchg
int
frstor
cmc
ljmp
xor
xchg
fimuls
push
cmp
lret
loop
aas
inc
lods
ret
stc
bound
dec
jmp
enter
fsts
adc
fimull
add
aaa
js
mov
in
aas
filds
cmpsb
pop
push
pusha
cli
mov
mov
stos
lret
xchg
adc
nop
pop
push
xchg
push
mov
lods
das
jne
dec
das
push
int
cmp
lods
out
nop
jnp
sbb
mov
mov
xchg
jl
ret
movups
in
push
and
push
das
enter
imul
mov
cld
stc
dec
sbb
add
add
jne
stos
cwtl
das
test
and
les
pop
cli
jbe
repz
xchg
cmpsl
movsb
fs
jae
mov
adc
pop
popf
inc
leave
mov
mov
xor
test
fimull
sub
push
fldenv
mov
aas
dec
jmp
jb
mov
dec
jns
loope
adc
scas
shlb
adc
mov
gs
subl
jo
pop
mov
mov
lahf
pop
aam
push
push
cmpsb
test
push
xor
sbb
mov
loope
mov
lcall
ret
rcr
out
adc
in
mov
pop
insl
jl
dec
addl
aaa
lock
dec
pop
lcall
loope
mov
out
jmp
insl
sub
enter
test
cmp
pop
cmp
cmpsl
jns
or
pop
lock
pop
adc
sbb
imul
data16
xchg
lcall
adc
sarl
pushf
lock
dec
pop
add
sbb
push
fwait
int
xchg
inc
inc
mov
mov
adc
clc
pop
inc
mov
std
hlt
mov
in
xor
xor
sbb
cmp
dec
mov
ja
push
mov
loope
jecxz
sub
sub
push
daa
not
push
mulb
pop
cmp
sbb
fstpl
push
insl
das
ljmp
outsl
push
adc
cmpsl
adc
pop
outsl
popa
adc
arpl
pushf
popa
stc
sub
jnp
cmc
mov
divl
js
loop
outsb
mov
hlt
mov
xchg
mov
jl
jle
mov
jecxz
and
fmulp
andl
loop
and
das
mov
xchg
mov
inc
gs
frstor
cmp
jge
insl
xlat
push
stos
xchg
cs
jo
xor
aam
dec
mov
inc
lods
bound
jne
mov
testl
inc
addr16
jl
jno
fdivr
cli
push
dec
cmp
xor
dec
fidivrl
xor
mov
jbe
mov
adc
cmp
ss
inc
fcmovnbe
iret
int
imul
ds
mov
pushf
add
dec
scas
xchg
ficompl
mov
dec
loopne
pop
pusha
insb
mov
cwtl
cmp
cmp
cmp
xchg
repz
cmp
mov
dec
xor
nop
mov
xor
mov
xchg
or
test
mov
mov
je
jbe
jno
mov
pop
or
cmp
or
jo
les
push
xor
inc
aad
or
inc
mov
data16
mov
ja
sbb
sbb
jl
cmp
out
pop
fisubs
nop
loop
pushf
imul
mov
test
mov
push
mov
icebp
bound
adc
inc
lret
imul
xchg
jne
mov
mov
adc
xor
mov
pop
stos
call
sub
out
loopne
dec
fimull
adc
in
dec
mov
xlat
repz
data16
adc
pop
test
mov
in
mov
lods
mov
icebp
sub
dec
mov
je
clc
or
ret
xchg
jno
jno
pop
lods
add
mov
push
mov
shrb
hlt
mov
test
sub
sub
data16
or
jnp
das
jge
dec
or
push
stc
sahf
dec
inc
push
test
sub
xor
call
cmp
int
clc
jbe
in
clc
aaa
mov
and
jns
sub
dec
sbb
or
shlb
leave
je
jl
sbb
sub
test
sub
xlat
sub
ret
jno
stos
mov
mov
jbe
dec
scas
inc
nop
je
movsb
lret
js
pop
ja
jae
scas
inc
sti
inc
testl
cmp
dec
mov
jle
sbb
inc
sub
push
add
sub
xorb
jecxz
daa
and
subl
out
lock
push
add
pop
sbb
ja
mov
rcl
out
mov
popl
xor
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
cmp
fmul
jl
jmp
jl
aam
out
jmp
sub
and
cmp
loopne
sar
gs
or
adc
sti
insb
dec
lcall
lcall
cs
mov
push
out
cmp
and
adc
insb
fwait
pop
mov
in
jb
inc
xchg
cmpsb
mov
aaa
mov
or
xchg
jae
lcall
push
inc
mov
mov
ja
cs
mov
test
jbe
cld
push
mov
cmp
pop
push
rcrl
jg
add
sub
jge
add
idivb
aaa
inc
jle
das
mov
or
and
addr16
les
push
jmp
cmp
xchg
shll
pusha
shll
and
jb
sarl
out
jl
shrl
sub
xchg
or
popl
xor
pop
js
pusha
or
mov
jno
pusha
add
loopne
ret
data16
pop
inc
cmp
ret
jno
mov
or
jnp
loop
cmpb
rorl
std
jo
or
adc
dec
xlat
das
icebp
iret
int3
imul
pop
add
movsl
scas
or
pop
aaa
add
pop
jo
repz
push
fs
inc
xor
sub
sub
or
pop
inc
xchg
jb
enter
out
xchg
sbb
push
push
dec
fucomip
aas
inc
cli
jg
hlt
jmp
stos
cwtl
mov
inc
mov
push
repz
mov
mov
inc
je
cmp
sub
inc
sub
ss
repz
repnz
sbb
out
out
fs
xrelease
cmpsl
add
out
and
inc
addr16
push
popa
ljmp
repz
js
push
mov
mov
fisubrs
mov
push
add
hlt
sub
pop
dec
lock
lock
push
repz
cmp
add
int
mov
or
push
push
scas
sub
sbb
clc
sbb
mov
push
cli
mov
dec
ret
rorl
xorl
sub
cmpsl
mov
xchg
shr
pop
inc
les
pushf
stos
and
stos
inc
loop
mov
inc
pop
jno
out
dec
pop
mov
shrl
jle
sahf
sahf
jae
arpl
loop
push
loop
iret
push
je
mov
push
shlb
out
jo
adc
mov
lahf
push
frstor
leave
mov
leave
sub
pop
repz
push
add
adc
cmp
adc
shlb
inc
pop
notl
jbe
mov
pop
jmp
mov
xor
or
lea
in
mov
xchg
shll
cltd
cld
xlat
stos
xor
loope
testl
cmc
lret
sahf
in
stc
inc
fnstsw
sahf
or
dec
mov
lret
cmp
outsl
lds
sub
xchg
pop
cwtl
xor
inc
stos
lea
or
divl
sbb
xchg
fwait
mov
sub
mov
push
shld
bound
add
sbb
loopne
sbb
xchg
sbb
inc
in
cmpb
test
jmp
es
mov
mov
add
fstpt
jne
popa
hlt
pop
add
inc
ds
ret
repnz
in
jnp
rolb
sbb
adc
sbb
std
rcrb
pop
out
daa
cld
cmp
mov
insl
jmpw
repz
inc
lret
lret
fidivrs
add
lret
inc
sar
not
dec
les
jne
jmp
mov
mov
pop
movsb
jns
clc
lock
and
cmp
inc
lret
movsb
add
dec
decl
pushf
outsb
stos
outsl
inc
cwtl
xchg
scas
and
ss
xchg
and
icebp
stc
aaa
mov
mov
js
jge
and
pop
pusha
sti
mov
mov
and
mov
test
enter
fisubs
inc
xchg
int
jno
sarl
sub
lods
xchg
sti
add
aaa
iret
or
cmc
stos
rcrl
add
inc
out
insl
mov
mov
and
cmp
cmc
stos
out
xchg
mov
jns
mov
cmp
mov
std
dec
mov
jmp
and
push
lods
cld
lock
cmc
mov
je
imul
fisttpl
jb
fwait
cmc
pop
dec
and
nop
shrb
clc
pushf
test
bsr
push
add
xor
lret
mov
lock
leave
imul
adc
fwait
mov
das
les
sahf
adc
dec
test
cs
outsl
rcl
data16
insl
pop
inc
fsubs
aas
mov
adc
pop
add
add
mov
js
mov
icebp
pop
pop
xor
sub
filds
sbb
lcall
xor
mov
xor
sbb
repz
gs
mov
cmp
mov
add
push
cli
or
sub
pop
fdivl
lods
cmp
sbb
enter
mov
cmp
dec
adc
shlb
stc
es
xor
or
cmc
hlt
add
fs
jae
sbb
outsb
xchg
sbb
imul
pop
lods
add
into
push
xchg
repz
outsb
dec
push
xchg
mov
iret
push
jb
xchg
xchg
fldcw
adc
xchg
sub
in
insl
jge
and
xchg
pop
addr16
sti
adc
fistpll
flds
popf
push
jl
sti
into
fidivrl
in
mov
sub
mov
out
or
aas
insb
pop
adc
mov
in
xchg
out
gs
push
popa
cltd
es
ffree
push
test
adc
pop
jg
mov
mov
cmpsl
iret
out
addr16
jg
pop
lret
xor
cmp
cmpsl
setp
push
jl
cmp
in
stos
cmp
aad
xor
ljmp
inc
cmp
pop
cmpsl
push
adc
lret
imul
pushf
xlat
mov
inc
int
mov
inc
adc
das
sub
popf
sub
mov
mulb
stos
push
xchg
cwtl
insb
sbb
xchg
cwtl
repnz
mov
in
adc
mov
andnps
das
jae
dec
inc
mov
cmpsb
rep
mov
stos
es
shl
mov
dec
mov
adc
shrb
push
lret
test
popa
jb
shlb
daa
push
jo
bound
dec
lods
or
dec
insl
xchg
add
adc
push
mov
adc
aam
fninit
pop
push
fstl
xchg
or
push
loop
cmpsl
dec
xor
into
mov
push
dec
pop
xor
lods
ja
fadds
pushf
in
ss
cmp
and
jo
cmp
inc
pop
notb
fcmovb
xchg
dec
cmpsb
imul
cld
jg
ljmp
cmp
scas
dec
xchg
mov
pop
mov
jns
mov
sub
mov
dec
cltd
test
mov
fs
and
fbstp
xor
or
xor
pop
add
push
and
lahf
shrb
xchg
adc
push
cmc
cld
cmp
fs
cmp
inc
and
lahf
add
shll
xchg
jb
test
xor
ret
lret
and
mov
cmp
and
fs
sbb
push
cwtl
inc
sbb
repnz
dec
push
int
pop
or
mov
lret
ja
cmc
sti
xlat
cmp
decl
mov
mov
es
sbb
inc
lock
xlat
fildll
sub
cli
rolb
loopne
dec
sti
lahf
or
in
sbb
lock
out
fcom
mov
push
sub
pop
inc
inc
cltd
adc
data16
xor
xor
xchg
xchg
add
sbb
fmul
mov
jbe
test
xchg
loopne
push
out
shrb
stc
test
pop
jb
and
cmp
scas
shr
adc
icebp
cmp
popf
pushl
cmc
idivl
ret
ja
int
add
sbb
and
std
add
jecxz
dec
out
mov
in
push
test
loopne
test
pop
mov
dec
iret
out
pushf
mov
xchg
adc
jle
jecxz
push
adc
cmp
and
addr16
or
and
cmpl
or
jb
clc
jl
cli
mov
leave
div
add
jmp
add
orl
dec
push
fstl
mov
mov
push
loop
jp
or
mov
sbb
cltd
int3
imul
ffreep
xlat
sahf
fstpl
inc
add
mov
ret
and
gs
xor
fwait
adc
sub
cmp
jb
adc
fsubrl
fwait
mov
cmp
xchg
mov
dec
dec
bound
and
push
mov
inc
sahf
ret
cmp
mov
hlt
call
inc
pop
sbb
cld
movl
xchg
jb
bound
sbb
xchg
adc
dec
out
cmp
fnstcw
mov
or
stos
insb
out
hlt
fnstsw
mov
enter
xlat
pop
loopne
inc
insl
fwait
into
add
sti
js,pt
push
jg
or
and
fists
outsb
cmpsl
sub
xchg
sahf
pop
sbb
int
sbb
and
fisttpl
mov
loopne
jae
sub
nop
jnp
dec
out
enter
ss
mov
sarl
scas
dec
cmpsl
cmp
or
daa
push
ss
fs
insl
inc
mov
sub
cmp
out
xchg
xchg
sub
xor
mov
ffreep
ljmp
sub
sbb
nop
or
sub
and
aam
lcall
sbb
sub
ss
hlt
stos
push
and
pop
or
push
jo
and
jl
inc
xor
and
sub
movsl
shrb
divb
roll
cmp
xor
cld
fwait
lcall
pop
inc
and
mov
outsb
ds
pop
push
and
and
addr16
clc
pop
lsl
lahf
sti
and
out
mov
add
lret
xor
loope
ja
inc
insb
out
jae
fisttpll
xchg
decb
fucomi
cs
in
jno
jge
lock
sbb
push
shr
sbb
jnp
cli
sbb
inc
xor
popf
inc
add
lock
adc
ja
adc
shlb
movsb
jb
xchg
jne
mull
fnstsw
std
dec
cmp
jg
mov
lret
pushf
loop
jae
jp
pop
cltd
ss
pop
loope
out
aaa
fistpll
int
mov
sbb
jnp
push
jl
arpl
jb
jo
or
das
or
sub
adc
ret
in
push
int
or
cmp
in
mov
idivb
movsl
xchg
adc
in
xchg
dec
std
jg,pt
or
xchg
mov
sbb
push
out
call
fdivrs
cmp
shl
sahf
mov
mov
aad
shrl
mov
xor
aas
fldt
sbb
fisttps
inc
and
sub
or
dec
mov
inc
xor
sbb
inc
inc
adc
push
xchg
jmp
mov
push
call
rcll
enter
pop
data16
add
mov
dec
and
aaa
jg
inc
jo
or
cwtl
bound
outsb
sub
jns
sbb
xchg
imul
mov
fnstsw
mov
push
jg
dec
and
sarl
fs
adc
xor
ljmp
pop
jp
ret
stc
xor
sub
mov
cmpsb
or
dec
loope
out
pop
sbb
cltd
jo
data16
inc
jnp
adc
ret
jg
or
xchg
out
stos
ret
sahf
push
sub
xor
imul
lea
add
inc
mov
stos
pop
jp
shrb
sub
lahf
movsl
ljmp
leave
jmp
cld
mov
fnsave
scas
sbb
negb
mov
test
dec
into
jecxz
iret
mov
ds
test
ret
jl
insl
xchg
adc
adc
push
cld
sbb
xor
and
movsb
sub
jmp
and
push
bound
outsb
lret
fistps
in
fwait
int3
sbb
adc
lods
in
mov
cmpsb
pop
ss
je
ljmp
dec
cld
sub
scas
adc
rcrl
xor
pop
mov
mov
clc
subl
pop
mov
add
js
inc
ja
mov
mov
das
rcrb
or
sbb
lock
xchg
xchg
cmp
popa
sub
sbb
sahf
push
bound
out
pushf
inc
and
and
xchg
ffreep
push
in
adc
js
xor
push
and
cmp
mov
mov
dec
sub
inc
sbb
addb
sbb
and
lock
mov
pop
xchg
pop
xor
push
faddl
mov
cmp
adc
push
pushf
popf
xor
dec
incl
ja
pop
and
pop
mov
gs
ror
xchg
adc
test
mov
xor
loope
push
jp
sbb
dec
lcall
cmp
or
mov
mov
or
jne
mov
dec
aaa
jbe
dec
into
test
cmp
or
dec
aam
push
push
jbe
notl
dec
cmpsl
dec
pop
lods
mov
or
xchg
cmp
push
mov
add
jmp
mov
fmulp
lods
sarb
mov
push
orb
or
and
mov
nop
add
sti
stos
sub
sbb
adc
insb
pushf
xchg
shlb
out
testl
js
dec
insb
jg
xchg
xchg
cmc
test
mov
push
cmp
std
adc
pop
jle
jmp
fwait
lods
lods
xchg
faddp
bound
xor
inc
jo
cld
and
notb
sub
lock
fs
in
cltd
call
adc
inc
xor
stc
fwait
loop
pusha
ficoml
push
sbbb
dec
jno
packuswb
and
add
adc
add
jp
mov
adc
jb
dec
sub
dec
sbb
cli
in
bound
mov
inc
jno
add
push
shll
mov
push
int
lcall
and
pop
xchg
std
xor
fcoml
pop
pop
dec
xor
xchg
mov
pop
fcoms
leave
test
xor
pusha
imul
stc
pop
ret
out
add
inc
push
les
push
pop
xchg
jle
inc
jbe
sub
bound
outsl
mov
xor
loop
or
push
outsl
dec
adcl
ljmp
mov
fwait
int
pop
mov
cmpsl
mov
jb
movsb
stc
hlt
add
jbe
pop
fstp
lret
lock
jb
loope
sub
sar
jecxz
movsb
mov
jl
vhsubps
and
and
inc
mov
xchg
add
sub
aas
ljmp
xchg
push
ret
pop
movsb
push
psubsb
sbb
fcmovnb
cld
test
and
pop
testb
test
push
fmull
add
mov
inc
sub
cltd
arpl
dec
cmpsb
xchg
mov
mov
cmc
icebp
lret
or
out
jl
and
pop
imul
pop
mov
sub
add
daa
movsl
mov
sbb
in
adc
sub
out
insl
idiv
pop
cmpb
gs
fimull
sbb
add
jl
idivl
and
sbb
jg
mov
cs
pop
and
cwtl
out
test
fbld
adc
call
xchg
mov
cmp
mov
aas
insb
out
daa
out
pop
add
xor
das
inc
fucom
shl
in
dec
adc
sbb
test
add
dec
cmp
mov
call
pop
and
sbb
insl
mov
add
inc
add
pop
enter
in
daa
push
ljmp
clc
aam
inc
mov
and
push
cmp
xchg
int
pop
push
lret
outsl
rcll
ret
loop
mov
or
dec
mov
cld
push
cmp
std
call
insb
cmp
jne
insb
ret
add
mov
cmp
aas
mov
lea
outsb
addl
mov
mov
jae
movsl
push
dec
insl
and
xor
test
scas
pop
push
xor
mulb
or
inc
push
cmp
addr16
sbb
cmc
movsb
push
sub
scas
fcmovbe
dec
inc
pushf
push
divps
call
sbb
mov
sub
or
mov
jle
in
and
xor
add
and
je
imul
or
popa
push
mov
mov
pushf
call
test
div
jp
mov
ret
das
movsb
mov
jae
mov
call
data16
pusha
inc
adc
loop
enter
rcll
push
lods
addr16
mov
mov
or
push
cmp
mov
repnz
aaa
out
packsswb
cli
xor
add
mov
jne
pop
mov
cmpsb
lcall
inc
stos
adc
test
mov
push
push
push
shll
out
test
cmp
pop
xor
cmpsb
xchg
xlat
or
jle
add
pop
mov
mov
mov
mov
xor
lea
mov
nop
or
inc
in
fdivrs
pop
adc
bound
cld
sbb
aas
xorb
cmp
inc
arpl
fadds
cmp
cmp
mov
sbb
fdivrl
js
inc
push
mov
inc
add
cmp
fs
out
push
sbbb
or
aaa
shl
pop
rcl
dec
or
push
push
push
lods
es
dec
add
mov
dec
int
xor
jl
daa
pushf
pop
int3
jl
cmp
jl
xchg
pop
fcomps
cmp
cmp
mov
fimull
ds
inc
pop
push
filds
fs
jne
dec
shlb
push
or
aad
mov
pushf
add
and
cld
ret
fbld
add
jmp
mov
xchg
push
ljmp
push
lds
out
xchg
out
mov
pop
jmp
inc
jae
ss
cmp
sub
dec
adc
fsubl
pop
inc
scas
jb
mov
or
out
sbb
mov
cwtl
dec
sub
mov
stos
ljmp
test
push
mov
dec
scas
arpl
sti
gs
addr16
pushf
loop
sbb
iret
pop
es
push
push
push
pop
add
and
cmpsl
pop
cmp
pushf
test
pop
sbb
and
jp
stos
xchg
stos
shll
scas
iret
dec
mov
lcall
lcall
lods
push
insb
mov
mov
pop
call
sbb
lock
shr
aad
int
or
sub
jl
andb
pop
jmp
lods
test
and
sbb
call
sbb
mov
scas
lea
mov
sbb
fstpt
xor
stc
fiadds
decl
xor
mov
ret
cvtdq2ps
inc
xor
sbb
pop
int
icebp
cwtl
mov
and
pop
mov
bound
fbstp
test
jg
leave
adc
mov
jmp
dec
mov
mov
test
lret
sti
fsubs
lsl
mov
and
xor
cmp
in
es
add
ficomps
and
push
lret
jns
lcall
dec
sbb
jno
push
pop
pop
xor
rol
out
jb
mov
cwtl
ret
jne
cmp
jecxz
add
and
and
ljmp
adc
mov
sbb
jbe
data16
pop
cmp
dec
js
dec
xlat
push
iret
jb
mov
lock
loopne
mov
push
dec
lock
mov
xor
iret
outsb
outsl
dec
pusha
jns
out
adc
mov
xchg
mov
fwait
orl
mov
aam
sbb
jmp
mov
push
push
jg
jp
imul
sub
adc
and
lods
test
bound
sub
and
das
aad
xorl
gs
cmp
jmp
add
cmp
int3
dec
mov
add
mov
mov
dec
mov
fcoms
inc
popa
inc
push
test
movsl
pop
adc
stos
das
add
mov
xchg
stos
push
mov
pop
shlb
repnz
aaa
jbe
push
inc
jge
cmp
xchg
jo
inc
dec
loope
cli
loope
mov
and
movsb
mov
dec
mov
xor
gs
test
cmpsl
leave
clc
mov
out
jge
push
ss
cmpsb
adc
jno
jmp
ds
pop
mov
iret
fs
je
imul
push
fs
cltd
inc
mov
sub
sub
fistpl
movsb
std
mov
sbbl
testl
leave
nop
and
loopne
sbb
sub
aas
pop
push
mov
outsb
push
jns
fisubrl
sti
insb
jo
mov
or
pusha
dec
popa
pop
or
daa
andb
inc
ja
lret
das
xchg
movsl
mov
out
sbb
cmp
outsl
bound
push
inc
jno
loop
jg
scas
and
mov
xchg
enter
into
dec
cmp
mov
je
push
mov
lock
inc
or
icebp
dec
ljmp
jae
lds
mov
fnstenv
hlt
mov
push
lcall
rcll
cmp
and
roll
jle
ret
ret
sbb
xchg
aad
xchg
pop
sbb
cmp
clc
mov
mov
or
orl
imul
and
cmp
cli
mov
adc
fwait
rclb
lcall
inc
into
pop
rol
xchg
sbb
sarb
adc
dec
adc
xchg
movsl
mov
out
sti
out
jecxz
pop
imul
xchg
mov
enter
inc
mov
movsl
cmp
push
mov
and
xchg
sbb
mov
sub
adc
int
cmp
jno
cld
sub
jmp
test
and
arpl
inc
xchg
inc
mov
mov
mov
mov
les
repnz
and
sbb
out
bt
rcrl
sub
mov
mov
lock
clc
jne
pop
ret
xor
or
rorb
testl
jne
pop
and
outsb
inc
adc
push
sbb
test
enter
fcmovnbe
cmp
and
mov
mov
mov
daa
push
mov
push
adc
repz
dec
sbb
inc
es
sbb
xor
mov
sbb
mov
loopne
pop
js
rcr
mov
xor
xchg
mov
test
ja
mov
mov
dec
push
pop
aad
js
pop
push
pop
enter
sbb
cld
or
jne
test
in
negl
mov
xor
xor
sub
pop
cmp
in
lcall
stos
mov
mov
cmp
xor
stos
inc
fdivl
cwtl
dec
xchg
mov
dec
lahf
outsl
cltd
lods
sbb
sbb
mov
scas
lods
dec
clc
aas
xor
lock
cmpl
daa
jbe
and
or
jno
sbb
into
test
jp
sub
movsl
pushf
pop
xchg
or
and
pop
lods
push
mov
cs
inc
repz
jae
inc
xor
pushf
je
sub
jl
pop
and
xchg
lahf
das
sti
and
mov
fdivs
out
loop
dec
loop
add
daa
lock
test
dec
inc
cmp
dec
scas
test
or
ja
sub
add
ljmp
dec
push
jb
mov
inc
testb
sub
cmp
cmc
jecxz
pusha
jge
shll
xor
in
fisubrl
jbe
enter
sub
popf
mov
roll
push
push
pop
inc
mov
sub
addb
int3
sub
jg
mov
xchg
ret
in
mov
inc
jmp
or
mov
push
push
out
out
pushl
jo
xor
jp
adc
pop
mov
outsb
push
pop
sahf
inc
gs
pusha
or
sbb
sbb
cli
rclb
inc
push
sahf
out
jne
cli
inc
xor
mov
push
es
addr16
insb
in
xchg
sub
icebp
mull
imul
js
mov
stos
in
cmc
adc
inc
mov
dec
sarl
js
clc
xor
cmc
loop
xor
dec
repnz
push
ret
test
nop
cmp
inc
or
push
push
adc
inc
stc
inc
pop
aas
pmuludq
cld
popf
pop
call
xchg
jg
loope
mov
mov
mov
or
enter
fdivl
pushw
xor
dec
mov
xlat
pop
out
repz
jns
sti
jo
sub
stos
xchg
xor
loope
push
lock
mov
ds
imul
add
xor
mov
mov
xor
jp
iret
xchg
pop
mov
in
jno
dec
scas
adc
jnp
ret
ret
push
ss
outsb
xor
mov
jmp
cld
pop
cmpsl
shlb
xor
xor
push
and
cmp
push
fcmovnbe
push
loopne
lahf
lahf
es
pusha
inc
mov
sub
sbb
dec
mov
xor
in
movsl
in
push
mov
xchg
sbb
dec
xchg
add
xor
pusha
mov
adc
in
and
jecxz
roll
push
and
popa
mov
nop
int3
mov
int
add
pop
inc
test
shrl
inc
adc
or
mov
push
imul
fcoml
push
cmc
inc
mov
dec
push
cmp
insb
or
popa
xchg
and
jle
loopne
sub
xor
ds
inc
pushf
lret
jae
pop
xor
sub
pusha
imul
sub
popa
repz
movsl
negl
cmp
pusha
dec
jno
aad
push
scas
imul
call
xor
mov
jmp
sbb
xchg
call
mov
mov
dec
inc
jo
inc
mov
adc
xor
lret
mov
aas
insb
cmc
faddl
adc
fs
jbe
mov
add
arpl
cwtl
test
ret
xchg
mov
and
iret
movsl
stc
mov
xchg
or
incb
arpl
in
imulb
iret
addr16
hlt
cmp
add
addr16
mov
sbb
insl
xor
mov
sub
mov
mov
mov
test
popa
and
add
mov
mov
dec
adc
mov
insb
inc
xchg
dec
mov
mov
mov
nop
xor
lcall
xor
inc
int
inc
jbe
ret
vprotd
xchg
mov
mov
jne
mov
mov
pushf
fbstp
in
bound
dec
push
add
cli
jnp
and
mov
sti
mov
cmpsl
movsl
shrb
out
insb
mov
cmpsl
psraw
xchg
dec
sub
jl
test
jl
std
imul
popf
iret
pop
das
popf
xchg
dec
ljmp
scas
jmp
stos
movsb
jb
shrb
mov
push
xchg
rorl
call
mov
mov
jp
lahf
arpl
xor
pop
push
ret
jne
test
aas
stc
aad
xorl
scas
rclb
jl
outsl
xchg
je
clc
dec
xor
pop
pop
pop
sbb
cwtl
xor
dec
in
xor
sbb
shll
insb
xchg
sub
inc
mov
jb
sub
or
in
out
fimuls
loopne
stos
mov
iret
pop
inc
arpl
and
repz
sbb
gs
sahf
push
xor
mov
out
mov
cld
xor
aam
pop
mov
fildll
into
ljmp
add
ja
and
outsl
push
push
notl
mov
lods
cwtl
imul
sub
cmpsl
pop
sahf
dec
push
pop
dec
movsl
in
adc
clc
and
loopne
loope
ret
jae
jmp
xchg
sbb
cmp
and
clc
ja
cwtl
mov
jp
push
lea
mov
add
movl
insl
push
jb
enter
lea
gs
adc
testb
push
sbb
stos
add
jbe
pop
std
mov
add
mov
fnstcw
and
or
ret
mov
aad
inc
icebp
adc
jbe
xor
mov
and
inc
pop
cmpsl
mov
push
testl
fwait
imul
cs
addl
sbb
or
stos
mov
or
sub
imul
jle
dec
add
arpl
mov
cmpsl
hlt
adc
fdivl
out
and
jb
mov
sarb
jbe
push
jno
test
iret
pop
ds
dec
inc
std
mov
pop
pop
mov
addr16
xchg
mov
insb
push
enter
adc
sbb
mov
ret
sti
pop
xor
xchg
outsl
push
data16
xlat
inc
inc
movsb
sub
aas
in
sub
lret
fisttpll
xchg
add
xchg
imul
sbb
popa
rorb
and
aam
sbb
fsubrs
jnp
loopne
lret
sub
mov
loopne
gs
adc
and
in
test
inc
outsl
outsb
xor
inc
and
sbb
jno
adc
or
and
out
je
adc
and
out
xor
loop
pop
mov
sbb
insb
call
push
sti
jns
xor
adc
leave
sbb
fwait
mov
jg
out
outsb
push
xchg
sub
xchg
push
dec
xchg
mov
lods
movsl
pop
sub
sar
data16
aad
jo
popf
stos
imul
and
loop
stos
dec
xchg
loopne
sbb
dec
push
testl
aas
in
pop
push
int3
popl
cmpsb
dec
aaa
test
imul
push
jne
pop
iret
or
push
jns
pushf
loop
ret
pop
in
or
xchg
pop
pop
xchg
aaa
leave
repz
adc
dec
jb
imul
fsubp
push
cli
sbb
push
popa
popf
pop
adc
mov
xor
shlb
push
sarl
dec
repz
in
add
mov
cmp
inc
ds
int3
xlat
lods
pop
movsb
leave
jns
mov
nop
pop
insl
call
jecxz
add
xchg
jl
repz
adc
sbb
mov
sub
xlat
inc
fwait
mov
inc
out
dec
lock
fimull
pop
sbb
movsb
sbb
outsl
js
cmp
xor
and
lds
xor
xlat
fsubrl
xchg
cmc
or
xor
xorb
pop
lret
mov
jl
outsb
jle
xchg
or
fiadds
mov
sti
cld
movlps
pop
mov
loop
cld
mov
jb
test
sbb
jmp
adc
fcom
mov
pop
loop
lea
lret
sub
xchg
xor
adc
test
enter
cmp
jg
cmp
rolb
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
cmpsl
shlb
dec
test
jl
call
cmpsl
mov
adc
mov
mov
or
pop
frstor
mov
hlt
testb
cmpb
mov
cli
adc
loop
mov
out
mov
movsb
push
inc
pushf
jnp
mov
mov
aas
mov
call
arpl
jl
mov
call
cmpsb
mov
cmp
xor
or
jp
inc
vpminub
dec
mov
dec
fwait
in
hlt
jecxz
add
ret
push
aam
jl
es
scas
cmovne
adc
fists
in
cmpsl
sbbb
out
shlb
imul
popa
sti
cmp
ja
pop
and
jg
pop
shll
sub
push
mov
jne
xor
aas
xor
in
dec
loopne
out
into
xor
cmp
pop
mov
pop
sbb
fcmove
dec
push
fwait
xor
enter
xchg
xchg
aas
xchg
std
sub
lock
sbb
inc
sub
pop
push
int3
mov
jle
dec
ss
mov
std
dec
inc
mov
test
les
orb
push
pop
loop
cmpsl
jmp
call
ret
and
cmp
inc
push
mov
jns
leave
dec
int3
mov
dec
loop
icebp
imul
adc
out
jo
dec
ja
outsl
mov
or
push
insb
push
cmpsl
jecxz
repz
stos
ret
jg
nop
xor
xlat
pop
pop
pop
shlb
mov
lret
in
xchg
in
or
pop
mov
pushf
addr16
cmp
jbe
mov
add
movsb
imul
in
dec
rorb
inc
inc
stc
or
loopne
ret
push
repnz
adc
test
loope
sub
scas
ret
iret
mov
call
mov
addr16
mov
add
sti
imul
rorb
cld
mov
cld
fs
lock
imul
loop
fnstcw
flds
push
in
jp
aaa
icebp
int3
cmp
stc
lret
lahf
push
sub
rolb
xchg
ss
mov
sbb
orb
cmpsb
dec
mov
je
push
scas
cmp
push
ficoml
pop
into
movsl
mov
mov
scas
mov
addr16
pusha
in
iret
sbb
ljmp
add
push
dec
shlb
pop
sub
aas
cmpsb
popf
clc
adc
pop
mov
xor
std
mov
push
dec
jae
sub
jmp
out
imul
mulb
or
nop
movsl
pop
scas
cmp
lret
enter
pop
jbe
std
sub
cmp
fimuls
addl
cmp
cli
dec
xchg
loopne
sti
push
sbb
dec
xchg
stc
cmp
cmp
xchg
cs
cmp
jle
mov
std
test
aaa
dec
dec
in
aad
outsl
and
sbb
das
icebp
int3
lea
mov
pushf
loope
fstp
negl
je
ljmp
popf
fmuls
int
pusha
mov
mov
push
adcl
xchg
in
and
push
fcompl
pop
mov
fildl
insb
je
test
or
push
test
into
sub
loope
xchg
jne
pop
pop
or
mov
dec
out
jle
push
pop
add
mov
pop
lcall
inc
loope
lea
lods
add
inc
mov
or
mov
and
jns
push
sbb
je
xor
mov
inc
leave
aaa
sbb
fnstcw
push
mov
jp
iret
xchg
pop
scas
cmp
jmp
xchg
aas
stos
push
pop
lds
push
scas
mov
aad
movsb
enter
jge
out
lock
xchg
bound
sub
scas
xchg
push
mov
iret
jge
dec
cmp
scas
je
ret
sub
pop
pop
hlt
mov
sbb
out
loop
insb
fldt
mov
and
xchg
or
add
add
lcall
imul
push
inc
iret
clc
dec
mov
mov
mov
stos
dec
mov
inc
xchg
cs
jae
clc
dec
sbb
std
lcall
dec
loop
outsb
cmp
cmp
mov
mov
loope
jmp
sbb
xor
rclb
push
jmp
sbb
stos
mov
pusha
rclb
loopne
test
cwtl
rcrb
fisttpll
lock
xchg
flds
mov
mov
dec
out
pop
push
ds
sub
cmp
scas
xor
decl
mov
les
lret
mov
testb
sbb
out
leave
in
sbb
outsl
fimull
mov
push
inc
push
sbb
cmc
clc
push
sar
cmp
lods
sti
pop
insl
fidivs
or
jae
icebp
dec
mov
xchg
push
dec
adc
xchg
stc
and
call
and
stos
adc
cld
orb
fcmovne
fbstp
iret
mov
test
xchg
and
inc
fcompl
std
sti
je
std
add
mov
jl
jmp
xor
xlat
std
adc
mov
pop
and
ljmp
xor
repnz
sub
xchg
rorb
aas
movsl
sub
inc
ds
mul
movsb
popa
pmulhuw
call
mov
mov
movsl
add
xor
fdivl
into
sub
mov
repz
adc
sar
push
repz
pmaxsw
cld
mov
mov
fldcw
xor
jbe
test
rolb
mov
sbb
in
xlat
les
jge
pusha
nop
fcoms
adc
cmp
push
enter
je
scas
xor
xor
ljmp
mov
jmp
movb
test
mov
ja
mov
or
movsl
call
ret
cltd
pop
adc
sbb
ret
fnstenv
pop
add
pop
das
dec
mov
rolb
dec
outsb
push
fistl
sbb
xlat
daa
xor
popa
in
fadds
into
lret
lds
cmc
xlat
cwtl
outsb
push
stc
jo
adc
adc
and
xchg
jp
loope
push
rol
or
rorl
addr16
out
sbb
sbb
sbb
or
xchg
je
mov
mov
imul
nop
repnz
nop
data16
data16
gs
jb
sahf
pushf
sub
mov
mov
stc
lahf
in
outsl
inc
mov
call
lods
add
cld
int3
mov
lahf
adc
push
cmp
push
mov
xchg
dec
insl
out
arpl
xchg
js
or
adc
es
push
js
leave
xchg
push
das
sub
push
test
cli
cmpsb
mov
mov
push
lret
inc
mov
fcom
mov
jne
or
mov
and
aad
sbb
cmp
js
lods
aaa
push
add
repnz
inc
sub
jns
push
xor
jne
loopne
xor
aaa
or
pop
cmpsb
lret
test
xor
sub
scas
cmpsb
loope
rclb
lods
das
sbb
jecxz
xor
mov
dec
sbb
xor
xchg
cs
mov
lahf
lods
cmp
and
cwtl
xchg
pop
int
sbb
push
arpl
stos
push
cmpsl
and
cwtl
xchg
ss
mov
test
imul
hlt
adc
xchg
push
data16
sub
scas
mov
js
mov
scas
stos
jp
into
inc
sbb
adcb
dec
lods
shrb
out
sar
adcb
xlat
mov
mov
loope
sahf
or
nop
adc
std
test
jl
xor
pop
hlt
dec
pop
lcall
sahf
cld
cmp
call
mov
adc
scas
pop
mov
adc
sbb
dec
sbb
loopne
das
and
scas
lea
enter
jmp
xor
nop
cmc
adc
in
pop
icebp
mov
sub
into
jne
inc
push
ljmp
or
jns
jo
and
and
loop
popf
push
scas
sbb
daa
mov
inc
ja
jecxz
mov
je
sbb
fsub
scas
cmc
ficoms
lcall
push
add
sti
or
movsl
jmp
adc
aaa
mov
insb
xor
or
add
daa
inc
xchg
pop
roll
int3
fldcw
sbb
popa
lock
xchg
stos
inc
xchg
inc
mov
inc
push
ss
push
mov
jg
into
sbb
adc
enter
xorb
mov
cmc
sar
push
push
or
repnz
push
jg
ja
mov
xlat
mov
push
addr16
xor
cmc
pop
sti
sbb
push
ret
mov
sub
mov
xchg
xorl
dec
insl
lock
insb
cmc
jne
mov
cmp
push
sbb
out
xor
aad
jb
in
jno
pop
clc
and
sub
jp
xchg
mov
pop
mov
test
inc
pop
dec
in
mov
inc
pop
stc
stc
clc
push
daa
sbb
and
shlb
jnp
ja
imul
fisubrs
pushl
subl
lret
and
loopne
dec
mov
ret
add
or
ret
out
movsl
aad
inc
rclb
andl
push
mov
pop
fnstenv
in
add
mov
shlb
pmulhuw
mov
outsl
sbb
inc
hlt
lods
mov
popf
xor
iret
inc
frstor
sbb
or
mov
ds
add
lret
cmp
xor
nop
push
sarb
nop
jae
pop
jg
xchg
mov
lods
mov
insb
xor
and
repz
xchg
cmpsb
xchg
cmp
sub
aam
subb
jle
push
or
mov
mov
icebp
gs
lods
das
pop
cs
sub
fdivrl
adc
mov
mov
mov
cmp
stc
out
in
lods
popf
imul
jp
jle
sub
mov
dec
xchg
pop
mov
outsl
cld
and
mov
cwtl
in
mov
hlt
jo
xchg
divb
inc
rcrl
mov
mov
out
mov
push
jnp,pt
fisubl
xchg
sub
xor
int
lret
std
add
xchg
ds
push
mov
fcmovbe
xor
in
add
jne
iret
lods
mov
or
iret
mov
sbb
push
stc
lds
cld
mov
into
dec
inc
loopne
inc
xchg
lret
cli
sub
xorb
jae
lret
mov
push
and
xchg
inc
imul
jbe
and
mov
mov
loope
or
mov
xorl
iret
cs
push
push
adc
jmp
cwtl
lcall
xchg
xchg
jmp
sbb
out
jle
int3
xlat
jns
mov
adc
outsb
or
sbb
mov
add
fsubrl
dec
push
rcll
mov
jnp
sub
pop
pop
xchg
add
sbb
pop
cld
push
scas
mov
xor
leave
nop
test
fldl
dec
shl
push
loopne
pop
pop
mov
sbb
test
shr
dec
or
add
lahf
adc
jle
popf
roll
out
imul
sub
orb
add
jns
xchg
lds
mov
fs
fwait
shlb
loopne
and
test
nop
test
aaa
lea
arpl
ja
addr16
cmp
cs
es
sahf
fs
dec
movl
ljmp
stos
int
stos
in
int3
cmpl
call
inc
ljmp
lods
lods
test
xchg
xlat
sbb
and
mov
mov
dec
cs
mov
ss
fndisi(8087
jl
addr16
ret
dec
and
add
jb
repnz
mov
in
out
add
pop
inc
add
adc
roll
mov
pop
nop
out
and
inc
test
dec
push
push
cmpl
aad
sbb
int3
bound
movsb
xor
pusha
or
fs
test
mulb
cmp
je
sub
mov
scas
add
enter
pushf
data16
cmp
inc
jno
pop
sahf
mov
xchg
mov
cmp
sbbl
add
fsubrl
or
pop
outsl
mov
inc
and
or
add
test
xchg
rcrl
leave
mov
dec
jno
ds
lods
out
nop
out
fcmovb
popf
and
push
add
out
sbb
js
sahf
xchg
test
pusha
inc
arpl
and
jge
jae
dec
adc
inc
xchg
aad
xlat
xchg
hlt
push
jg
dec
inc
jno
mov
adc
rclb
adc
aas
pop
add
jmp
mov
cmpsb
lods
xlat
aam
fistpll
into
dec
dec
stos
xchg
pushf
sti
cmp
scas
xor
out
jo
mov
mull
ja
mov
lcall
es
js
adcl
divb
leave
movsb
push
cmpsb
lock
adc
lret
pop
add
lock
nop
imul
pop
nop
ret
cltd
ret
int3
or
jno
pop
and
bound
iret
add
or
arpl
out
js
int3
xchg
sbb
xchg
sbb
xchg
jle
mov
lock
insb
pop
pop
mov
sbb
mov
inc
test
jb
daa
ljmp
jne
rcl
loop
sub
inc
sbbb
mov
cltd
mov
fists
cli
fstps
sahf
mov
es
adc
push
sbb
and
adc
inc
adc
mov
pop
rol
xchg
shlb
mov
sbb
xchg
aaa
fcmovb
cltd
add
jno
sub
out
cmp
push
inc
jl
pop
xor
sbb
or
ret
mov
sbb
lea
movl
cmp
dec
cld
jbe
fstpt
xor
mov
pop
insl
sbb
insb
pop
aas
xchg
es
xchg
pop
push
sub
push
imul
pop
xor
xor
shrb
das
out
inc
addl
lods
pushf
sub
sub
popa
out
loope
mov
mov
enter
loope
mov
mov
stos
scas
dec
jo
movsb
xor
stos
xchg
sbb
pushl
sti
sbbb
rclb
push
jmp
mov
nop
jo
sub
add
ret
push
cmp
xchg
pop
sbb
mov
rorl
cltd
add
fldl
std
pop
jb
mov
inc
fxch
and
arpl
or
mov
or
push
sub
enter
sbb
lret
pop
mov
lret
out
pushf
out
lret
clc
sub
sub
mov
ds
jmp
xchg
push
enter
mov
ljmp
fsts
xor
rcr
fcoml
and
mov
pop
pop
cmp
clc
jae
xor
add
out
jb
or
stos
movb
mov
aaa
dec
and
in
inc
sysexit
xchg
and
out
mov
call
popf
mov
out
dec
jns
insb
ljmp
std
out
mov
push
ret
mov
test
aas
inc
movsl
add
mov
mov
cmp
pop
popa
aaa
decl
jecxz
lds
sbb
xchg
arpl
push
outsb
mov
fwait
sbb
stc
roll
nop
mov
repz
std
in
push
lret
repz
adc
pop
clc
hlt
in
add
xchg
push
sub
lea
push
mov
jb
fdivs
sahf
mov
ja
repz
aas
arpl
inc
jo
pushl
divb
fwait
xchg
dec
cmp
fimull
fisttpl
and
cltd
out
test
fistps
sub
loop
pop
scas
dec
lahf
or
mov
call
js
sbb
imul
je
or
mov
mulb
out
scas
sti
push
or
stos
mov
push
xor
mov
push
icebp
mov
inc
scas
adc
adc
outsb
or
mov
cmp
hlt
inc
sub
inc
inc
mov
cld
pop
das
adc
popf
inc
shrl
or
scas
fisubs
jae
nop
mov
add
sub
gs
xchg
jae
notb
aad
xchg
dec
and
pop
jmp
adc
dec
insl
cwtl
cmp
inc
lock
xlat
fisubs
sub
arpl
add
fimull
inc
pop
cmp
loopne
add
test
loope
inc
and
xchg
popa
les
cmpsb
jae
pop
test
sub
ja
adc
insb
out
xchg
insb
ds
mov
or
pop
mov
ljmp
and
cmp
sub
nop
dec
pop
mov
jns
push
test
mov
jecxz
push
pop
int3
rorl
push
lods
inc
and
pop
cmc
push
movsl
push
stos
jecxz
pushf
push
ret
inc
jns
sbb
jecxz
popa
call
jns
and
dec
outsb
jmp
dec
jno
inc
les
push
xor
and
pop
pop
ficoms
push
mov
pop
jle
mov
loopne
mov
rcll
int3
cmpl
mov
cmpsl
xchg
inc
imul
or
sbb
pop
stc
push
mov
jbe
push
adc
std
cmp
fsubl
dec
test
cmpsb
mov
pop
cs
sbb
js
sbb
je
movsl
repnz
sbb
and
inc
push
into
pop
cmc
fbstp
dec
cmp
daa
addr16
adc
add
and
sub
rcl
addr16
fucomp
dec
and
int
movsb
rolb
fwait
ja
cmp
xchg
jne
sub
xor
mov
jmp
jg
and
and
cmp
and
mov
mov
jge
push
jl
and
inc
pop
sbb
cmpsb
pop
loope
movsl
icebp
push
mov
mov
inc
adc
les
lret
stos
fsubl
cmp
pushf
std
sub
jae
sti
int3
iret
pop
pop
or
mov
mov
cmp
ret
push
pop
push
xor
jmp
dec
sti
or
jo
mov
cmp
mov
cmpsb
ja
xor
sub
test
adc
mov
mov
xor
mov
enter
insb
mov
in
ret
mov
cmp
mov
ficoml
push
dec
fisttpll
mov
imul
sub
xchg
add
hlt
pusha
sbb
rorb
jle
mov
sbb
mov
pop
cld
jns
test
fistps
movsb
push
add
jecxz
arpl
out
aaa
jne
mov
sbb
dec
mov
hlt
adc
adc
jg
lods
notb
jge
xchg
arpl
dec
xor
icebp
mov
outsl
icebp
mov
xor
xchg
pop
es
pop
push
loop
xchg
jb
or
jmp
mov
sub
call
cmp
js
sub
sub
mov
sbb
out
gs
add
ss
nop
mov
dec
cli
fadd
int3
push
push
pop
sahf
mov
adc
out
adcb
aas
idivb
aaa
int
jl
jge
shll
xchg
jae
sti
xor
cmp
mov
xchg
mov
pop
ret
aaa
add
clc
mov
inc
push
push
insb
testb
jmp
mov
rclb
and
imul
fadds
loop
cs
daa
add
mov
or
add
adc
lods
je
pop
test
repnz
xor
fisttpll
int3
pop
xchg
add
inc
sbb
jnp
loopne
scas
pop
dec
inc
or
lcall
mov
pop
pop
adc
iret
fldcw
add
fnstcw
fadd
push
cltd
repnz
pop
fwait
sub
div
adc
cmpsb
in
aas
aad
ret
xor
sbb
adc
outsl
bound
ret
fs
push
push
loope
xchg
insb
sub
inc
and
ret
pop
sbb
sub
daa
ss
lea
fdivrs
push
jl
jmp
imul
adc
pop
or
dec
xchg
and
test
and
or
mov
scas
popa
jg
lcall
cmp
adcl
dec
dec
dec
sbb
jecxz
sbb
imul
rcll
mov
and
sbbb
inc
popa
ds
lods
stos
mov
jle
ret
mov
das
icebp
xchg
push
or
dec
pop
addr16
sbbl
cmp
jns
xlat
mov
fcoml
push
mov
bound
lret
call
sti
ja
xlat
orl
loope
cmc
cmp
inc
pop
out
lods
pop
adc
cmp
outsb
pop
or
mov
and
add
inc
ljmp
fwait
push
sahf
test
arpl
jnp
aas
fsub
push
dec
repz
aas
or
add
aam
in
push
in
xchg
jae
test
ret
out
push
mov
or
xor
aam
adc
pop
mov
fwait
cs
hlt
aad
jne
insl
popf
sbb
subb
outsl
inc
pop
and
pop
xorl
dec
xacquire
or
sbb
xor
fdivrs
xchg
xchg
dec
adc
movsb
xchg
rolb
adc
in
add
mov
test
sbbl
push
sbb
or
icebp
movsb
into
pop
lods
shlb
test
cmp
cmpb
xor
iret
sarb
shl
psubd
cmp
sub
std
fimuls
movsl
out
shrd
inc
js
je
cmp
test
mov
call
xchg
cmp
mov
and
add
push
lds
or
inc
das
scas
cmpsl
paddsb
pop
enter
jo
clc
mov
dec
pop
or
xor
iret
pusha
mov
jle
adc
out
call
into
sub
xor
stos
inc
inc
or
jne
cmpsl
and
xchg
push
repnz
mov
mov
mov
and
push
jbe
in
and
jl
fisttpl
mov
imul
push
mov
sbb
push
clc
add
xchg
aaa
aad
mov
mov
lret
pop
push
adc
loope
add
sbb
stos
test
lret
icebp
jle
clc
jb
das
imul
inc
insb
fistl
js
loop
sbb
and
scas
outsb
insb
or
dec
mov
xchg
dec
int3
mov
xor
stos
xchg
or
pushf
aas
push
jp
mov
dec
insb
aas
jbe
adc
fldl
in
mov
aaa
mov
xchg
mov
imul
and
cmp
xlat
mov
mov
cwtl
pop
aam
cmp
ljmp
jle
ljmp
jge
xchg
pop
stc
repz
cmpsb
shll
fisubs
cld
pop
mov
push
push
out
add
nop
lock
fdivr
mov
dec
cmp
in
jmp
sub
aas
adc
cmp
stos
test
push
pause
mov
roll
data16
push
fdivr
mov
push
or
inc
sbb
jl
mov
mov
negl
out
scas
cmp
in
add
loope
loop
test
push
mov
hlt
sbb
mov
sahf
or
sbb
mov
and
int
cmove
or
in
pop
sub
or
xor
mov
sub
or
test
mul
and
inc
mov
xlat
shlb
push
dec
jmp
out
mov
lret
jno
sub
adc
pusha
xor
sbb
out
test
nop
lcall
cltd
std
jbe
ficoms
jge
xchg
idivl
out
mov
scas
jno
add
lods
pushf
fisttpl
adc
adc
mov
fwait
dec
pusha
push
cmpl
jmp
lds
xchg
xchg
mov
in
mov
pop
push
adc
pop
leave
sub
std
jecxz
fwait
mov
popa
add
out
dec
arpl
lcall
into
mov
outsl
push
xor
cmp
jbe
popf
iret
fldenv
call
cmp
out
mov
xor
cmp
cmp
and
repnz
adc
insl
pop
stos
pop
pop
in
sbb
adc
icebp
mov
adc
imul
mov
dec
leave
xor
push
sub
mov
cmp
loop
and
rolb
sub
leave
sub
cmp
lret
movsl
cmp
enter
push
dec
ret
in
jbe
repnz
xchg
gs
mov
pop
xchg
xchg
sub
dec
push
pop
dec
sub
out
les
sbb
mov
stc
fists
dec
int
sbb
ss
pop
mov
test
sub
and
test
jb
xor
inc
mov
lcall
inc
js
mov
cmp
sub
jecxz
xor
cmp
lea
popf
xor
mov
pop
pop
mov
dec
daa
pop
mov
jp
adc
mov
push
jns
out
ffreep
mov
out
push
stos
pop
fs
xchg
leave
scas
jg
mov
inc
or
jg
cmpsl
or
push
sub
fwait
push
pop
xchg
sub
adc
jmp
fnsave
push
dec
fistl
jge
dec
sub
add
sbb
mov
inc
mov
pop
or
sti
cli
cmc
imul
xor
cld
xchg
push
push
andb
xlat
push
paddusb
cmp
lods
xchg
xchg
jge
cmp
jne
pop
test
add
ja
adc
inc
idivb
aaa
jge
xlat
ficomps
mov
mov
add
nop
pmovmskb
xchg
call
mov
xlat
mov
sar
cmp
inc
ss
mov
fwait
in
loopne
scas
mov
das
jge
adc
push
adc
sbb
mov
mov
test
mov
test
fninit
jg
push
xor
pop
int
lret
dec
mov
int
or
mov
arpl
cmpsb
jge
lds
insl
push
jp
xor
lea
jle
push
ja
xchg
add
pop
lahf
jle
flds
pop
and
arpl
mov
mov
call
ja
mov
push
cmpsb
mov
or
jmp
or
je
sbb
ret
pop
push
aad
loopne
ss
outsb
pop
cwtl
loop
outsb
inc
adc
ljmp
outsb
andb
aam
sub
inc
push
outsb
in
aad
mov
inc
adc
adcl
mov
add
inc
shll
xchg
jp
sub
cmc
cmp
adc
aam
nop
pushf
in
push
jo
in
push
js
mov
ror
xor
push
aam
mov
add
iret
lods
inc
ljmp
mov
aaa
mov
sub
inc
rcll
xchg
lahf
adc
and
gs
mov
or
xchg
subb
lock
movsl
mov
jle
rcrl
mov
fisttps
inc
imul
mov
xor
daa
push
scas
push
popa
lret
xchg
ret
push
push
xchg
mov
repnz
lds
adc
push
lds
push
mov
jae
shl
xchg
push
cmp
mov
dec
pop
rcll
insb
inc
pop
push
push
cmpsl
les
cmp
push
jns
cli
ss
movsb
pop
inc
cs
jle
push
push
mov
gs
gs
jp
xor
loopne
inc
arpl
pop
dec
leave
add
jae
imul
aad
mov
testl
rorl
arpl
shr
aad
sbb
and
jnp
xor
cmp
aas
sub
into
cmp
xor
mov
mov
ss
ret
mov
repz
aam
cmp
inc
jne
out
dec
xor
insb
cmp
adc
push
cmc
int3
sbb
stc
out
add
adc
rolb
and
lods
sub
inc
xchg
aas
popf
in
mov
pop
inc
cmp
fisubl
lods
and
std
dec
jo
inc
cmp
jb
push
mov
shll
xor
sbb
pop
scas
inc
ds
cmp
xchg
jle
in
dec
dec
or
mov
sarb
inc
and
dec
pusha
sti
adc
xchg
dec
in
fdivl
mov
adcb
inc
jmp
shrl
hlt
test
mov
mul
test
nop
orl
loop
lods
mov
fsub
stc
push
pop
xor
scas
push
divl
pop
addr16
or
mov
xchg
std
aas
gs
out
fcom
jg
cwtl
std
mov
pop
mov
ljmp
daa
xchg
loopne
mov
fwait
pop
adc
push
scas
jae
push
dec
data16
jmp
subl
ja
mov
sbb
inc
outsl
sbb
inc
jne
sbb
jnp
stos
scas
add
sub
out
xlat
sarb
mov
loope
xchg
ret
mov
mov
test
scas
add
jae
out
mov
call
imul
scas
cmp
lock
xor
dec
or
inc
mov
mov
xor
fidivrs
and
and
pop
mov
jne
push
inc
loope
cmpsl
sub
repz
mov
dec
sbb
mov
inc
xor
mov
lds
jno
cmp
pop
in
mov
inc
mov
jae
stos
jbe
push
mov
push
movsb
mov
sub
adc
cli
insl
pop
sti
cmp
sub
push
push
lcall
mov
xlat
adc
inc
xor
outsl
sahf
jl
aaa
mov
adc
out
cli
imul
in
js
pop
push
mov
lcall
xchg
push
sub
repz
xorl
movsb
mov
xchg
mov
dec
cmc
jmp
inc
lahf
inc
xor
lret
movsb
cli
push
mov
mov
sub
xor
xchg
fcomip
insl
in
mov
add
cli
addr16
shll
cmc
xchg
scas
js
inc
adc
mov
mov
popa
inc
arpl
mov
inc
xor
pop
jbe
cltd
jl
lret
pop
xchg
pushf
int3
inc
xchg
rcll
insb
stos
xchg
xor
sub
and
lret
sbb
mov
mov
jb
rorl
mov
inc
sbb
shrb
sbb
inc
cwtl
cmpsl
sub
lret
sbb
push
aad
or
jl
and
mov
mov
lds
xchg
shr
loop
fistpll
mov
cmc
cltd
movsb
push
and
icebp
out
sbb
mov
or
sub
insb
adc
xchg
das
xchg
xlat
pop
push
movl
mov
fidivl
or
mov
rorl
je
sbb
rcl
and
into
shl
push
add
mov
mov
repz
cwtl
outsl
pop
xor
movsl
enter
push
push
clc
into
filds
jecxz
sahf
and
mov
xor
add
scas
jne
add
daa
mov
cmp
jne
imul
aaa
sbb
dec
or
in
in
lahf
inc
stos
daa
add
or
fmull
faddp
add
mov
insb
inc
xchg
scas
stos
cmc
mov
add
cwtl
lods
out
mov
or
push
jnp
jge
cmp
aas
fs
ret
jp
out
mov
lahf
sub
dec
dec
setae
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
sbb
jl
jmp
jl
enter
push
pop
push
dec
xor
stos
loope
mov
aaa
movsb
jge
mov
mov
jl
enter
mov
int3
lret
movsl
xor
jnp
out
dec
mov
cmp
pop
push
les
mov
sub
lods
or
xor
mov
xor
xrelease
cmp
or
dec
pop
xchg
enter
xor
loop
jecxz
pop
dec
or
addl
mov
pop
call
cmp
rclb
cwtl
aad
outsb
mov
xchg
das
and
std
dec
inc
test
mov
pop
xchg
cwtl
ljmp
or
sbb
jp
sahf
mov
mov
xchg
aaa
dec
xchg
xchg
test
popf
push
jg
scas
orb
push
ret
cmp
or
test
sbb
sub
aaa
mov
lds
rclb
test
push
cwtl
jb
inc
pop
je
and
lahf
dec
dec
test
out
jp
out
out
mov
iret
ss
sub
lock
dec
mov
pop
dec
adc
mov
add
jbe
sub
inc
xchg
inc
xchg
mov
cmp
out
shl
mov
dec
mov
mov
movsb
arpl
in
sub
push
and
sub
pop
cmp
and
mov
jg
jp
arpl
xchg
lar
mov
add
es
xchg
sbb
cmp
add
int3
fisttpll
xor
sbb
xchg
mov
mov
stos
mov
test
fcomp
push
mov
xor
xchg
shlb
outsl
clc
adc
add
testb
or
add
fs
shrl
cmp
inc
jns
jne
mov
cmp
mov
adc
int3
or
movsb
sub
aas
ja
loopne
adc
add
mov
pushf
adc
andl
sbb
ret
push
mov
mov
push
or
and
sbbb
mov
mov
push
mov
pop
arpl
mov
mov
pop
call
cmp
sahf
addb
push
mov
loope
fimull
mov
pop
inc
xor
stc
movsb
pop
or
jge
gs
push
dec
iret
push
popf
pushf
sub
test
es
cmp
add
mov
sbb
add
out
test
test
xlat
dec
pop
dec
mov
inc
jnp
add
mov
js
push
push
daa
mov
sti
mov
stos
and
lcall
jmp
popa
mov
adc
push
mov
jbe
push
ficompl
cwtl
shll
mov
les
aad
pop
jns
inc
stc
les
xor
sbb
xchg
jae
int
sbb
add
cmp
push
mov
jno
xor
bound
in
mov
jae
push
jecxz
fisubrs
xorb
inc
das
push
xchg
gs
add
mov
test
dec
mov
jecxz
adc
out
int3
jg
fs
aad
dec
pop
cld
xchg
or
out
outsb
cmpb
xchg
xchg
bound
popf
fcomi
leave
push
pop
mov
xchg
cmp
int3
xchg
movaps
cmp
jns
mov
in
add
mov
adcb
out
ljmp
jno
xchg
inc
jecxz
adc
gs
add
outsl
jecxz
mov
lea
ret
mov
rorl
pushf
xchg
adc
xchg
pop
filds
xor
faddl
icebp
jmp
stc
jbe
test
sbb
ss
cmp
lahf
ja
xchg
push
mov
into
xchg
adc
ja
dec
jae
sub
sti
out
xchg
jnp
lds
xor
push
mov
mov
and
mov
push
dec
xor
adc
mov
xchg
inc
xchg
roll
aas
add
jne
dec
push
jo
sub
fdiv
pop
cmc
sbb
jge
scas
ss
sub
push
cwtl
xchg
lcall
testb
jbe
and
iret
rolb
popf
jb
pop
fsubl
xor
push
inc
xor
add
jae
fneni(8087
repnz
stos
jae
enter
xchg
mov
jne
mov
adc
jo
inc
inc
aam
ret
jbe
popf
cli
enter
test
adc
ret
repnz
lahf
scas
mov
aas
pop
shrl
jge
dec
mov
loop
cli
in
outsl
cs
stc
sub
outsb
das
xchg
out
jmp
sub
add
cmp
leave
pop
jno
popa
inc
icebp
mov
xchg
sbb
std
mov
in
mov
call
jno
arpl
dec
divb
or
add
jb
cmpsl
inc
dec
cmp
inc
inc
int3
lock
push
hlt
cld
mov
sti
adc
scas
fistpl
xchg
dec
fcompl
mov
andl
test
mov
ficoml
mov
insb
inc
xor
out
out
xor
fbld
pop
add
out
iret
sub
out
inc
lret
ss
jnp
mov
xor
in
repz
nop
rcrl
loope
mov
pushl
mov
aas
mov
pop
and
stc
mov
xchg
sbb
fs
ja
daa
in
rcll
dec
mov
out
and
sub
cld
xchg
mov
sub
outsb
mov
leave
cmc
sub
xor
and
cmpsl
mov
xlat
xor
negb
push
dec
loop
add
adc
inc
loopne
nop
in
ret
cmpsl
cmp
xor
mov
mov
push
mov
dec
xchg
and
dec
xor
dec
fstps
mov
aam
push
inc
mov
xchg
cld
xchg
mov
shll
rorl
cmp
xchg
cmc
sbb
cld
imul
sbb
pusha
dec
sbb
roll
inc
popf
jp
cmp
scas
ljmp
cs
xchg
loopne
mov
aam
cld
fld
loop
fcompl
inc
pop
cld
pop
mov
out
hlt
icebp
cld
mov
scas
pop
mov
xchg
in
adc
stc
dec
sbb
cmp
xchg
pop
dec
pop
movlps
fcmove
inc
xor
int3
xor
in
and
mov
mov
lcall
ds
js
stc
adc
xchg
inc
mov
adc
scas
leave
decl
inc
sbb
mov
loope
in
xor
adc
das
insb
pop
sbb
cmp
subb
inc
or
push
or
push
fists
push
mov
cmpsl
jae
mov
mov
inc
cs
das
cmp
out
or
inc
insb
lcall
push
pushf
pop
and
loopne
add
push
es
xor
xor
sbb
push
lcall
pop
cmp
test
mov
cltd
shl
fmull
into
rcrb
mov
imul
sbb
sub
cmp
pop
inc
aaa
pop
adc
dec
aam
jo
es
pop
mov
jmp
lods
adc
loope
insl
nop
test
mov
insb
aam
cs
std
fsubrs
loope
shrl
mov
mov
pop
pop
mov
sahf
mov
arpl
cld
stos
cltd
inc
cmp
push
pop
jle
test
mov
lret
popf
lret
or
addr16
push
pop
movsl
popf
cmp
sub
sti
jb
lahf
dec
mov
or
inc
dec
ds
jne
xchg
sub
hlt
jl
fists
test
adc
inc
xchg
sub
push
es
or
pop
test
into
int3
dec
push
xchg
aam
int
inc
push
loopne
xor
push
push
leave
mov
mov
mov
imul
sbb
mov
cmp
or
test
test
fdivs
push
cmpsb
mov
gs
add
ret
int3
scas
out
push
sub
aaa
stos
in
jbe
inc
mov
das
fldt
dec
cmp
cli
sub
sub
mov
call
imul
jae
fmul
insb
clc
mov
adc
xchg
in
ror
push
push
loope
mov
sti
adcb
and
repz
cmp
roll
fwait
test
mov
fld
cli
sar
push
dec
or
imul
adc
jb
inc
inc
aas
adc
jl
dec
enter
cmp
aaa
sub
jle
push
xor
mov
mov
pop
or
roll
mov
stos
xchg
rorl
mov
mov
call
adc
push
fldt
inc
stos
das
cmp
adc
out
push
andl
ss
push
int3
sbb
rcr
mov
repz
shll
call
aam
out
ds
push
call
fstpl
decb
bound
xor
ss
js
testb
jb
sbb
xchg
xor
or
leave
mov
das
call
mov
inc
loopne
aas
daa
cmpsb
dec
cld
enter
outsb
dec
xor
push
mov
xor
data16
fucomip
mov
xor
scas
pop
dec
jp
pusha
cmp
pop
dec
insl
jnp
push
rcrl
sbbb
xor
dec
orl
jmp
stos
push
inc
fcoml
or
cmpsb
clc
jle
or
xchg
shl
js
mov
in
pop
xchg
loop
lcall
arpl
mov
fdivrs
jle
xchg
ror
adc
shrb
adc
daa
sti
shll
mov
loopne
cmp
out
clts
js
jae
popf
xor
jnp
pop
in
popa
jg
decl
jmp
js
jne
test
push
sub
popa
xor
xlat
in
loopne
sbb
dec
dec
out
jno
ss
imul
push
or
mov
mov
add
inc
pop
andl
sbb
sbbl
neg
xor
cmpsl
jp
subb
xor
out
mov
mov
mov
mov
dec
mov
insb
add
dec
movsl
lds
mov
decl
mov
clc
cmp
neg
pushf
movsb
inc
mov
or
mov
xor
arpl
lods
push
mov
fldt
pause
xchg
in
and
sub
movsb
mov
cltd
int
xchg
das
dec
push
inc
dec
jb
dec
dec
pop
sub
fs
repz
pop
xor
inc
pop
mov
popa
add
xchg
push
pop
jne
mov
fsubs
lret
stos
rclb
and
leave
pop
jae
or
int3
cmp
mov
mov
stc
push
push
cwtl
jmp
out
jl
xor
aad
int3
sbb
sbb
cli
orb
les
xchg
imul
scas
stos
mov
push
cmp
jo
cli
xchg
int
int
add
in
invd
enter
icebp
loopne
ss
lret
pop
cmp
mov
sub
loopne
hlt
xor
icebp
dec
mov
xchg
les
dec
aad
mov
fwait
sub
sbb
mov
sbb
lahf
and
aas
ret
ds
and
jmp
loopne
testb
das
push
js
jno
test
pop
gs
add
jns
xchg
icebp
jbe
pop
aaa
mov
add
jp
packssdw
icebp
cli
test
add
gs
mov
arpl
mov
xchg
add
jle
mov
shll
add
es
mov
mov
cwtl
mov
cmc
repz
inc
push
xchg
and
jno
and
xchg
jmp
add
sbb
sti
mov
pop
int
stos
adc
xor
xlat
lret
mov
pop
adcb
xor
adc
and
mov
je
loope
out
nop
ficompl
loop
pop
sub
invd
das
or
in
lea
loope
dec
mov
js
cmp
jle
mov
inc
jg
jp
ss
or
test
push
inc
sbb
lea
in
sbb
jle
inc
aad
out
loop
adc
orb
out
movsl
in
sub
in
fistpl
leave
arpl
fs
inc
push
cld
cmpsl
out
cli
jo
imul
and
lahf
xchg
call
daa
sti
movsl
dec
insb
dec
mov
push
lret
sbb
cltd
bound
xor
jp
insl
imul
mov
or
popf
out
sub
leave
jno
inc
sub
ja
mulb
xor
jge
pop
test
movsl
sub
or
sbb
insl
pop
push
in
arpl
incb
pop
stos
xor
sbb
pop
sbb
mov
xchg
xchg
sbb
das
xor
add
cmp
jl
push
mov
add
xor
dec
or
xchg
jge
inc
mov
dec
xor
jp
adc
insl
inc
movb
add
fisttpll
test
icebp
adc
xchg
enter
pop
das
rcrl
mov
xchg
pop
pop
xchg
outsl
pop
mov
sub
fisttpll
push
out
mov
dec
xchg
into
out
popf
pop
push
or
cmovb
mull
jno
notb
loop
sbb
and
xor
inc
imul
adc
lldt
out
stos
inc
mov
sbb
lds
jmp
jne
test
jae
shl
jnp
sub
jno
and
mov
inc
fs
aad
orb
xor
mov
jmp
fwait
cmp
xor
dec
filds
mov
sbb
or
ja
cmc
and
sub
ret
aad
cmp
leave
jle
xor
lret
push
jae
mov
daa
xor
and
pop
lcall
cs
ret
mov
out
test
pop
lock
pop
repnz
scas
or
arpl
sti
push
lods
int
pop
popa
les
mov
mov
xchg
call
mov
cmp
adc
jecxz
fidivrs
outsb
and
xorl
dec
iret
and
orb
mov
loop
push
fsubrs
xor
aaa
rcrb
xor
mov
negb
push
sub
insb
in
inc
jmp
outsb
push
inc
imul
out
xchg
mov
add
stos
or
cmovl
mov
bound
popf
jns
rolb
xchg
xchg
rolb
popf
xchg
ljmp
xor
jmp
pop
and
push
or
adc
add
adc
sbb
ficoml
jbe
xor
push
pop
insb
sbb
stos
adc
jns
or
outsl
mov
or
dec
loop
in
in
ljmp
sub
icebp
fildll
xor
loopne
pop
jmp
in
push
adc
sbb
pushf
fwait
jo
in
fwait
mov
jmp
xor
xor
sahf
pushf
push
adc
imul
and
rol
push
ss
jbe
rcrl
bound
lcall
cmp
mov
dec
inc
movsl
mov
push
loopne
pop
add
xchg
aaa
into
xor
xor
pop
mul
mov
repnz
and
sbb
mov
fucomip
pusha
inc
out
dec
pop
cmp
xchg
scas
popf
jae
es
testb
test
xchg
nop
and
cmp
xor
daa
jnp
arpl
lahf
es
cmp
inc
and
push
mov
cwtl
mov
adc
jl
jmp
repnz
loope
mov
pop
in
fstl
repnz
sarl
fstpl
jns
test
cmc
jmp
push
ret
pushf
outsl
xchg
jle
shlb
out
xchg
scas
xchg
xchg
mov
adc
mov
mov
jne
decb
inc
insb
or
imul
cs
jle
lods
inc
pop
mov
adc
xor
mov
adc
mov
xchg
incl
insb
popa
icebp
push
jge
test
mov
push
mov
mov
mov
cmc
jg
jo
clc
lods
sub
push
loop
add
pushf
push
inc
xchg
adc
dec
repnz
mov
mov
mov
loop
push
cwtl
out
addl
outsl
fsubl
and
ljmp
pushf
outsb
sbb
mov
jmp
cli
movsb
jge
mov
xor
mov
push
jb
jb
imul
cmp
mov
cmp
pushf
lods
iret
cmp
mov
shrb
outsb
shl
emms
scas
cmp
mov
int3
test
daa
sbb
jecxz
gs
xchg
mov
arpl
xchg
and
mov
iret
lret
push
leave
xlat
dec
jbe
test
fiadds
fistl
sbb
sti
rcll
add
cwtl
fucomp
in
loopne
dec
loope
jg
mov
push
mov
cmc
enter
into
dec
and
fisubrl
sub
int
es
xchg
xor
cltd
nop
xchg
icebp
inc
or
pop
mov
cltd
aaa
and
mov
cmp
sub
loop
xor
sub
inc
pop
pop
dec
adc
ror
lea
es
xchg
insb
popf
repz
leave
es
sub
push
aam
repz
adc
cs
loope
imulb
daa
fisttps
stos
push
sahf
push
loop
and
ret
push
scas
leave
nop
je
mov
ja
push
movsb
ds
test
aam
shlb
adc
std
mov
out
push
aam
inc
jne
jno
xchg
stc
stos
movsl
sbb
jge
jnp
xchg
fidivrl
sbb
and
adc
push
les
lcall
xor
ret
cmp
pop
rcl
pop
jns
cld
adc
shlb
insl
int
inc
lds
pop
pop
ret
inc
cmp
arpl
out
sub
push
inc
subb
fmull
cwtl
xchg
jne
insl
cli
outsb
sub
stc
lahf
cmp
enter
xchg
popa
push
ljmp
ret
iret
mov
out
in
xor
ja
leave
ljmp
hlt
xor
pop
sbb
icebp
std
rclb
pop
jge
cmp
pop
faddp
push
and
mov
mov
in
cltd
movsl
inc
mov
mov
rolb
push
shrb
cmp
aad
mov
je
int3
sub
inc
jb
loop
imul
lea
fld
lock
mov
das
bound
lea
mov
pop
mov
cli
add
push
mov
sub
xor
push
hlt
cmp
inc
or
xchg
ds
jecxz
cmp
aaa
dec
or
add
add
adc
push
enter
pop
cmp
add
loop
fdivs
cmp
cmp
xchg
enter
mov
cltd
inc
inc
sub
mov
dec
loop
into
insb
ja
iret
xorl
scas
push
insb
scas
hlt
gs
xchg
fcmovu
mov
cld
mov
jnp
xchg
xchg
lods
ss
sarl
dec
jbe
mov
repnz
cmp
sub
sub
and
mov
mov
cmp
xchg
pop
push
imul
sub
call
ret
sub
jno
adc
ja
nop
ljmp
out
mov
int3
jge
leave
adc
fsubr
adc
mov
fwait
dec
jbe,pt
test
fdivs
sahf
in
mov
test
pushf
fcompl
sub
cmp
jge
sub
sub
loop
out
ds
iret
or
xor
pop
adc
lock
adc
xor
and
aaa
xchg
in
xrelease
inc
adc
xchg
cwtl
pop
testb
test
popf
comiss
daa
xchg
loop
mov
xchg
jle
jp
xor
pop
inc
dec
jg
mov
push
fisttps
add
ficoml
xor
xchg
lret
add
test
xor
xchg
mov
cltd
ss
xor
ss
xor
lods
push
xor
push
sub
push
stc
sub
cmp
ret
cmpsb
hlt
fwait
cmp
repz
aad
mov
test
stos
insl
xor
mov
adc
sub
or
bound
ret
int
faddp
xor
xor
movsl
fst
fcmovb
rorb
dec
addr16
mov
adc
ficomps
mov
jb
sbb
fidivs
sbbb
loop
jmp
inc
push
into
cmp
shlb
pusha
sub
sti
pop
xchg
cmc
and
mov
cmp
addl
fwait
ret
ljmp
xchg
je
mov
mov
filds
lea
jnp
data16
push
cmp
lods
cmp
leave
jno
arpl
out
sub
fs
push
cmp
mov
or
inc
xchg
xor
pop
in
test
mov
mov
or
or
mov
dec
lcall
scas
dec
dec
xchg
jae
rcll
insl
call
dec
nop
cmp
pop
aas
and
rorb
pusha
inc
ds
push
test
addr16
imul
fdivs
lock
addr16
test
pop
push
int
sbb
icebp
add
mov
daa
adc
xchg
jmp
leave
push
cmp
cmp
push
mov
loope
sbb
stc
les
shrl
add
xor
mov
pop
dec
push
ret
out
or
aad
mov
mov
loop
and
jb
in
out
inc
pop
mov
stos
jmp
shlb
pop
je
rorb
push
adc
cs
ret
pushf
jb
lcall
pop
push
rol
sbb
cmp
and
inc
push
out
adcl
icebp
xchg
in
sub
std
sbb
jo
ds
test
cltd
into
jmp
mov
sub
inc
fmull
xchg
mov
and
jae
stos
loope
sub
ja
jns
inc
in
adc
cltd
dec
mov
cmpsl
xchg
lds
insb
lock
xor
cmc
push
in
sar
addl
out
shr
imul
fisttpl
add
xor
in
add
jbe
pop
or
lods
inc
fistpll
mov
inc
sbb
or
test
mov
sub
sub
sbb
cld
mov
outsl
stos
dec
addr16
mov
jns
aam
push
sub
dec
pop
sub
jge
shlb
mov
jecxz
mov
les
xchg
xchg
incl
in
cwtl
push
mov
cmp
in
daa
loop
aaa
add
inc
xlat
xor
sahf
xchg
adc
divb
cmp
notl
dec
pop
xchg
sti
push
arpl
add
out
push
pop
pop
mov
lea
cmp
out
rclb
sbb
js
mov
std
dec
sbb
mov
jnp
mov
adc
push
jp
mov
fisubs
add
adc
jmp
out
inc
sahf
sarb
les
inc
adc
mov
adcb
mov
xchg
cmp
xlat
shr
sub
out
cmp
rcrl
cli
lods
push
dec
jno
mov
mov
les
aam
mov
sahf
dec
vpcmpgtb
fs
inc
daa
xchg
fnstcw
lods
gs
or
mov
sbb
mov
addb
adc
out
sbb
push
sbb
fmul
add
push
movsb
aas
addb
pop
xor
aam
fdivrs
adc
pop
inc
adc
sbb
inc
inc
mov
pop
sbb
call
insl
add
dec
mov
std
lods
sbb
idivb
jb
in
cli
loop
inc
iret
jno
scas
add
test
mov
and
gs
mov
mov
loopne
shrb
loopne
adcb
inc
test
test
out
jmp
mov
sbb
pop
add
xchg
inc
aas
and
sbbb
jmp
or
jmp
ret
dec
ss
jb
sbb
xchg
mov
xchg
dec
adc
xchg
test
fwait
mov
adcl
pxor
pop
push
push
into
into
ja
jno
in
sahf
sub
cmp
pushf
ds
test
pop
dec
repz
cmp
xchg
cmp
xor
stos
and
jno
add
les
fnstenv
data16
lds
sub
mov
pop
xchg
loope
cmpl
and
jno
add
out
mov
and
adc
ds
dec
or
ds
cmp
mov
das
les
dec
testl
or
dec
pop
mov
xor
mov
fimuls
out
daa
iret
sub
mov
cltd
gs
pop
push
xchg
push
mov
adc
fimull
inc
dec
jae
adc
xchg
pop
mov
dec
movsl
push
test
push
lock
push
cmpsb
push
and
jmp
pop
repnz
push
lea
add
loopne
xchg
ret
int
insl
and
imul
insb
dec
cld
dec
pop
mov
fstl
les
push
subb
insl
imul
mov
or
cld
fcmovu
sub
adc
icebp
mov
insb
mov
sbb
loop
and
test
push
loop
push
jne
dec
decb
rep
dec
cmpsb
aas
adc
shlb
xchg
scas
leave
mov
lahf
ret
lock
mov
outsb
inc
sub
push
adc
dec
rclb
dec
jmp
cmp
pop
ror
sbb
lods
sbb
lock
and
fildl
xor
les
movsb
jg
std
pop
lret
cmp
cmp
fidivrl
xor
cs
sub
xchg
outsb
sbb
ffree
rclb
push
movsb
into
fadd
xor
pop
mov
cwtl
clc
lret
add
and
jmp
xchg
fistps
push
rcrb
jge
fstps
mov
pop
pusha
scas
jmp
mov
push
xor
mov
in
pushf
adc
imul
outsb
pop
lret
arpl
stos
pop
xchg
shll
movsl
jbe
movsl
sub
fdivrl
js
fwait
cmc
pop
xor
sub
stos
fwait
xchg
cld
pop
add
pusha
inc
lfs
mov
imul
adc
mov
pop
or
mov
sarb
enter
insl
loope
icebp
mov
movsb
push
mov
ja
jo
jmp
int3
mov
cmp
mov
xlat
xchg
add
ljmp
add
adc
mov
mov
and
xor
xor
xlat
fildl
cmp
and
push
or
js
dec
fcmovne
and
push
pop
idivb
out
js
fbld
fiadds
and
clc
push
jg
and
punpckhwd
fisttpll
stos
inc
push
add
sarl
mov
xor
repz
inc
cmp
outsb
pop
sub
sub
or
arpl
xor
and
dec
adc
shl
adc
ljmp
or
loopne
jb
inc
clc
dec
cltd
or
scas
cmp
sbb
add
adc
pop
rol
cwtl
fwait
push
mov
fldenv
or
popf
notb
mov
fimuls
fcmovb
js
leave
sbb
leave
daa
mov
mov
dec
sbb
sub
pop
ja
out
testb
scas
sahf
pop
mov
mov
fdivr
stos
fimuls
dec
dec
loopne
cmpsb
push
jb
push
sbb
cmpsb
xchg
les
sub
push
repnz
pop
pop
mov
loop
pop
inc
dec
jmp
push
fwait
adc
jmp
push
mov
jl
test
pop
arpl
add
insb
int
and
mov
push
jne
push
push
hlt
idivb
cmpsl
aam
xor
push
rcrb
lahf
xchg
in
jnp
mulb
dec
xor
xor
cmp
mov
lock
push
lock
addr16
enter
repz
iret
fwait
cs
mov
cld
mov
es
sub
inc
mov
pop
lret
movl
fistpll
jg,pt
push
jns
mov
or
stc
push
popf
insl
adc
inc
mov
mov
loopne
gs
and
add
in
pop
into
cmp
xchg
sti
dec
fcomp
sarb
jne
lods
add
push
mov
repz
or
fwait
lds
leave
sub
leave
shl
pop
aad
out
stc
pop
cld
sarb
shrb
mov
cmp
dec
pop
out
in
sub
iret
mov
jae
jae
js
mov
jecxz
jns
pop
shll
mov
cmp
test
jg
je
dec
add
jle
mov
cmc
cmp
repnz
mov
xchg
dec
int3
sub
xorl
shll
jp
add
sbb
call
push
cmp
cmp
jg
xchg
dec
pop
mov
pusha
and
pop
or
or
icebp
lahf
sti
es
jno
mov
mull
fsubl
push
mov
jecxz
clc
bound
ja
xchg
movsb
outsl
jb
jno
xchg
add
mov
int
mov
das
in
fiaddl
pop
jo
je
imul
popa
dec
cwtl
fs
in
mov
ret
xchg
xor
and
and
les
out
inc
xchg
or
xchg
pop
adc
int
or
mov
jmp
cmp
mov
mov
pushf
xor
mov
les
or
insl
pop
outsl
pusha
fwait
sub
sub
clc
add
jecxz
jp
into
outsl
out
sbbl
lcall
and
sub
scas
stc
xorl
stos
sub
fisubs
push
cmpsl
sbb
or
popa
and
cmc
mov
xchg
and
jno
mov
xchg
xchg
mov
out
dec
xor
aaa
in
pop
dec
mov
data16
fnstenv
push
push
pusha
mov
adc
stos
pop
add
test
rol
mov
fdivl
loopne
pop
mov
outsl
push
xor
mov
mov
stos
sub
test
sahf
out
inc
subl
jl
mov
jmp
inc
jo
mov
cmp
testb
out
add
ret
icebp
mov
push
lret
clc
and
adc
sub
lret
and
push
push
popl
ds
xorb
fiaddl
addr16
cs
mov
pop
pop
push
push
mov
dec
mov
adc
adc
cwtl
xchg
cmp
lock
outsb
arpl
mov
mov
loop
cli
push
dec
push
mov
ror
in
clc
call
fistpl
add
aaa
stos
outsl
mov
push
mov
jecxz
in
divl
add
push
flds
mov
push
addl
jmp
das
sub
adc
shll
cmc
mul
jo
push
xor
sub
or
cmpsl
lods
sti
pushf
in
or
fiadds
add
cmp
push
pushf
xchg
dec
ror
push
test
jmp
adc
fwait
ss
push
sub
xchg
mov
lahf
dec
jl
adc
es
cmp
inc
ja
rolb
fcmovne
mov
lret
adc
or
popa
data16
ret
fmull
xchg
inc
jl
popf
stos
subb
loope
sbb
jb
out
into
inc
inc
out
push
jg
and
int
dec
inc
sub
fcmove
scas
add
nop
adc
sub
mov
jp
test
pushf
inc
and
push
inc
subl
je
loopne
push
rorl
icebp
das
lahf
adc
jmp
add
cltd
sbb
dec
dec
fucomip
sub
xor
into
add
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
jge
ljmp
jp
dec
mov
shll
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
test
push
dec
negb
addr16
cmpsb
jb
cwtl
faddl
or
add
cmpsl
cmp
mov
pop
push
xor
pop
out
int
jp
add
jno
sarl
and
push
mov
call
mov
fs
cmp
cmp
fsubrl
inc
mov
inc
out
mov
loope
mov
jg
or
ret
and
push
xchg
or
out
xchg
jp
or
xlat
push
ret
mov
xlat
dec
jbe
outsl
push
neg
enter
inc
cli
insl
lret
push
push
add
movsb
cmp
cmpsb
lahf
cmp
mov
clc
das
fisttps
test
mov
loopne
mov
jg
aaa
repz
call
dec
xor
rcrl
pop
jo
andl
mov
in
xchg
stos
jne
cwtl
in
mov
out
sub
sub
xchg
iret
mov
cmp
mov
sub
mov
sbb
mov
pop
xchg
orb
scas
dec
dec
cmp
cmp
push
out
jnp
jmp
mov
enter
push
push
shlb
sbbl
orb
repnz
cli
aas
and
mov
cltd
mov
sub
lea
insl
jne
pop
insb
and
arpl
cmp
out
sbb
sub
ret
aad
xchg
imul
mov
or
outsb
cmp
std
stc
orb
fadds
push
rcrl
mov
jl
xchg
fwait
pop
xchg
jmp
aam
daa
movsl
adc
fiadds
xchg
push
push
div
and
stos
in
movsl
push
inc
mov
jb
push
mov
cmpsb
mov
jle
xchg
insl
out
jne
leave
jecxz
fisubrs
shrl
jne,pt
sti
repz
push
xchg
or
mov
int3
mov
push
or
and
push
add
lods
xchg
rcll
xor
cmpsb
and
dec
out
setnp
mov
dec
scas
out
not
roll
xchg
mov
test
in
xor
push
cmp
mov
dec
aad
add
push
mov
adc
jae
imul
in
daa
dec
lods
xchg
lea
cmp
inc
mov
mov
insb
sub
ds
jl
push
rcrb
bound
mov
or
scas
mov
dec
adc
mov
push
mov
xchg
mov
inc
mov
mov
xor
sub
inc
add
inc
push
mov
push
loopne
adc
pop
cmp
enter
rorl
scas
push
push
out
push
repz
mov
pop
bnd
andl
push
dec
aam
xor
jmp
push
fmull
jb
pop
sti
ja
add
mov
mov
adc
cmpsl
lcall
adc
into
sub
adc
dec
xor
xchg
adc
lods
add
pop
jae
call
jae
adc
mov
mov
testl
imul
cld
es
mov
xor
cmp
and
icebp
icebp
push
jmp
lcall
inc
mov
imul
stc
mov
aas
aas
ret
or
mov
inc
hlt
addb
outsb
shlb
sbb
add
jmp
or
out
inc
adc
adc
add
scas
add
add
in
xchg
iret
jno
mov
daa
loop,pn
sbb
shll
jb
pop
sarb
dec
inc
jp
shr
rcl
mov
cwtl
divl
mov
ret
int
not
lds
mov
xchg
push
dec
into
xorl
pop
lds
nop
stc
adc
popf
aam
sub
inc
nop
mov
mov
jno
and
push
ss
test
scas
lret
or
inc
pop
jge
pushf
mov
xchg
test
aam
outsb
movsb
shl
push
ljmp
xchg
out
xor
adc
mov
lea
lcall
lods
adc
cmp
dec
sub
imul
mov
popl
les
mov
cmpsl
arpl
loop
call
into
in
xor
test
enter
dec
cs
xorl
ljmp
or
inc
push
stos
mov
hlt
jl
pusha
pop
adc
pop
aaa
out
dec
push
mov
pushf
in
ss
inc
shl
push
inc
inc
mov
movsb
fidivs
and
push
iret
adc
out
loope
jmp
push
in
pop
jne
mov
inc
rcll
out
shl
mov
cmp
leave
jbe
sbb
xor
mov
and
fnstcw
pop
xchg
inc
inc
lods
dec
movsb
out
mov
mov
xchg
mov
popf
adc
fwait
or
push
shll
xorl
adc
push
ss
pop
xchg
mov
loop
call
sbb
xorb
fmuls
add
pop
xchg
outsl
mov
and
and
ret
out
repnz
cmpsl
xchg
or
jnp
and
lahf
mov
jae
outsb
scas
dec
xor
push
xchg
pop
mov
xor
fwait
cld
mov
stc
add
leave
sbb
negb
dec
hlt
xor
test
scas
cmpsb
xor
dec
lea
dec
ss
sub
pop
mov
imul
idivl
jnp
adc
mov
int
arpl
cltd
pop
test
pop
test
out
popf
mov
out
jle
sti
sub
mov
pop
push
cmpl
mov
dec
sub
adc
and
jmp
push
cmp
inc
cmpsl
jl
pop
imul
push
rcrl
xchg
mov
data16
pushf
adc
jo
pusha
push
lods
xor
cmc
xchg
mov
ljmp
xchg
mov
mov
in
cmpl
int3
mov
pop
mov
pop
inc
dec
xlat
jb
pop
pop
cmp
int3
arpl
inc
lods
les
jp
lods
push
mov
cmpsb
into
stos
dec
push
daa
add
frstor
add
test
push
or
dec
test
mov
push
pop
mov
repnz
push
sub
cmp
sub
int
adc
stc
add
dec
repnz
scas
ss
jne
push
in
and
fldenv
jg
sbb
es
adc
sbb
insl
dec
mov
mov
add
push
mov
pop
push
rorb
pop
les
fdivr
pop
cs
sbb
jno
imul
mov
add
pop
sub
mov
and
ss
push
ret
data16
add
and
in
jnp
ljmp
mov
fistl
xlat
fbstp
add
add
add
mov
or
lcall
and
add
xor
hlt
movsb
nop
add
pop
add
loope
or
dec
add
dec
lret
add
pop
add
nop
fs
imul
mov
dec
push
fs
ret
add
aam
arpl
imul
or
inc
adc
mov
hlt
inc
outsb
sbb
push
jbe
aam
pushf
add
cmpsb
cmpl
xchg
dec
lock
pusha
xlat
adc
rorb
push
jno
push
ljmp
or
add
pop
icebp
or
outsl
pop
adc
sub
add
sbb
mov
iret
push
aad
push
pop
dec
leave
push
rclb
pop
popf
mov
rcrb
es
incl
adcl
in
mov
mov
xchg
jbe
les
roll
rorl
loopne
sbb
int
aaa
mov
filds
mov
aaa
add
and
adcb
enter
ljmp
jge
cmpsb
push
aas
and
push
jne
add
and
jnp
mov
push
hlt
mov
lods
and
or
jnp
lret
mov
shr
sub
pop
push
lret
mov
cld
xor
js
les
sub
cmp
mov
push
adc
jo
rcll
jbe
dec
shll
fs
sub
cmp
lcall
test
fwait
pop
fcoms
jnp
cmc
mov
ljmp
mov
sbb
jle
xor
ret
add
mov
jmp
jo,pn
jnp
jns
dec
mov
push
jne
iret
xor
paddb
xchg
mov
addb
lret
dec
xchg
clc
data16
decb
rol
cmp
imul
in
ds
mov
das
jl
jp
scas
sbb
pusha
mov
sbb
cmp
xor
cmc
call
and
cmpsb
lret
xor
or
mov
or
iret
stos
pop
sbbb
mov
js
test
loop
adcb
adc
out
jne
push
push
mov
add
cmp
mov
mov
cltd
mov
rol
fdivrl
sub
mov
mov
cltd
out
xor
bound
inc
xchg
sub
out
mov
mov
mov
psubsb
aaa
inc
adc
jb
maxps
in
sub
test
xor
sub
cmpsb
arpl
cmc
dec
mov
cmpb
lret
pop
pushf
adc
pop
push
cmp
je
xorb
ss
cmp
ficoml
cmp
cmp
pusha
xchg
idivl
bound
mov
push
push
and
xchg
xchg
mov
clc
sbb
bound
xor
or
add
stos
and
mov
test
test
push
push
dec
pop
pop
out
xor
addr16
test
addl
dec
cwtl
je
iret
sbb
gs
push
push
fisttps
jecxz
cmp
aam
mov
cmp
or
test
mov
xchg
dec
or
xor
movl
pop
fcomip
cmpl
mov
push
adcb
xchg
movsb
dec
push
xchg
mov
adc
mov
das
adc
ja
ljmp
add
add
inc
clc
gs
popf
jg
mov
dec
sahf
push
fwait
pop
jb
add
scas
add
add
sti
cmpsl
add
in
pop
jae
gs
or
sbb
js
jecxz
cmp
test
mov
add
outsb
mov
or
loope
movsb
mov
ret
fstpt
lds
adc
into
jo
pop
in
int
mov
xchg
jne
dec
adc
lods
and
out
or
test
sbb
fwait
aam
jb
mov
push
lcall
and
dec
dec
dec
mov
rclb
mov
sbb
add
sbb
xor
push
mov
xchg
pop
enter
nop
stos
dec
mov
xchg
outsb
int
mov
lcall
jnp
test
aam
mov
clc
lret
and
pop
and
bound
dec
pusha
ss
fldt
push
push
rcll
insl
popf
add
pop
xlat
pop
sarb
dec
xor
cmp
mov
mov
stos
insb
push
dec
jmp
das
jp
sub
sub
sti
xor
push
push
pop
xchg
iret
cli
push
lods
cmp
mov
pop
cld
dec
hlt
xor
movsl
pushfw
cltd
hlt
cmp
inc
push
pushf
mov
mov
movaps
sbb
popa
shlb
jmp
jbe
movsl
pop
popf
sub
sub
xchg
stc
xchg
cmp
jecxz
enter
fcmovnb
add
into
leave
ja
sub
pop
xor
and
mulb
fiaddl
pop
pop
xchg
mov
mov
sub
sbb
push
mov
ret
arpl
sbb
adc
and
push
iret
jecxz
pop
cmp
adc
loop
clc
xchg
pop
push
push
or
jns
out
cmp
push
mov
xor
jbe
cs
mov
dec
push
push
dec
data16
add
mov
mov
pop
icebp
mov
nop
cs
push
mov
loope
adc
movsb
xchg
fisubrl
inc
cs
cmp
pop
movb
stc
outsl
xorb
mov
in
jae
orl
xchg
into
dec
sahf
adc
test
fisubrs
dec
xlat
pushf
and
sub
out
push
inc
push
cmc
pushw
inc
adc
insl
or
lahf
or
stos
sbb
push
out
out
mov
and
mov
ss
pushf
cmpsl
pop
cmp
xchg
lea
mov
fnsave
mov
lock
mov
lcall
dec
adc
popa
mov
data16
mov
inc
fimuls
mov
out
push
xchg
mov
call
adc
mov
inc
call
cs
push
jae
in
testb
xor
dec
mov
adc
xchg
mov
lret
mov
or
adcb
mull
xor
das
mov
fwait
pop
lock
daa
nopl
push
push
inc
pop
or
imul
lock
inc
cmp
push
dec
and
int
pop
fisubs
mov
loop
sbb
repnz
cwtl
pop
mov
or
hlt
cmp
arpl
jo
jnp
and
pop
add
sbb
push
xor
pop
sbbb
dec
imul
sub
add
sbb
sub
or
ds
js
mov
pusha
out
jb
loop
xor
add
movsl
mov
fsubs
dec
leave
int
frstor
popf
cwtl
xchg
fmuls
jb
pushf
xchg
bound
lods
imul
jmp
ret
push
scas
mov
or
repz
sub
sbb
xor
push
jle
mov
repnz
xor
xchg
aaa
aaa
and
cli
push
add
mov
jge
out
ret
out
call
mov
sbb
ret
mov
sbbb
cmp
insb
cmc
test
mov
dec
dec
and
das
out
imul
jp
insl
or
cmp
xchg
outsl
adc
sub
push
cmc
mov
inc
or
sbb
jo
imul
jp
pop
test
lahf
sbb
enter
xchg
sbb
addl
nop
mov
inc
jecxz
mov
mov
cmp
fstpt
shr
insb
pop
in
imulb
lcall
sub
xchg
xchg
pop
mov
pop
clc
scas
xchg
cmp
push
movsb
loope
mov
jecxz
repnz
loopne
push
cmp
pusha
mov
add
mov
mov
out
fstl
loopne
sbb
pop
adc
xchg
or
sbb
cmc
jg
mov
and
mov
pop
push
sar
int3
adc
push
loop
lods
testb
rolb
cmp
cwtl
movsl
mov
xor
jmp
jecxz
dec
in
jnp
pop
dec
cmovns
jle
mov
repnz
or
orb
test
out
cmp
add
inc
mov
sub
nop
mov
dec
dec
xor
dec
das
sub
and
in
push
jl
adc
push
adc
dec
sbb
js
shrl
jg
mov
mov
clc
xchg
ds
lods
xor
xor
icebp
ret
iret
clc
cmp
fnstsw
cmc
and
jb
xor
fcmovnb
dec
cmp
push
jne
mov
mov
xor
fldt
call
adc
fistpll
pop
xor
das
xchg
insl
loope
inc
sub
mov
iret
test
outsl
jp
fs
subb
cmpsl
pushf
addr16
xor
int
movsl
push
jle
imul
push
jno
orl
xor
pop
jo
inc
pop
add
sub
outsb
xchg
lock
mov
nop
push
cwtl
dec
push
cmpsb
decb
mov
and
iret
stos
clc
mov
mov
data16
movl
cmp
mov
inc
sub
cmc
cs
lea
mov
cmp
repnz
xor
adc
ss
jne
outsb
adc
fxch
xchg
dec
push
shld
sbb
ret
js
mov
mov
out
daa
add
ficoms
imul
adc
sbb
mov
mov
inc
mov
cmp
imul
ljmp
fadd
mov
sahf
xchg
sub
imul
stos
aaa
push
daa
and
jl
lods
xchg
out
clc
mov
pop
enter
add
add
add
add
call
jecxz
jns
shr
mov
aad
add
scas
add
add
shl
or
loopne
shl
cld
add
xor
jo
adc
jmp
aad
push
xor
cmp
xchg
insb
ljmp
push
std
mov
rolb
mov
leave
push
stc
add
nop
xchg
push
cmpsb
call
ret
pop
add
inc
adc
sub
orb
pop
sub
inc
cli
in
loop
dec
in
popf
and
jne
insb
jmp
jl
pop
sbb
lds
aam
mov
and
add
nop
sbb
jbe
jb
xor
push
pop
jno
lcall
xorb
call
popf
lahf
xor
inc
rcrb
xchg
cld
jo
mov
addr16
pop
aam
lahf
pop
ret
pop
adc
fucom
cltd
mov
movsl
and
out
std
gs
sub
popa
pop
push
mov
push
jno
sbb
adc
data16
cli
mov
pop
lock
pushf
cmpsb
add
loop
xlat
pusha
fisubs
insb
pop
and
pop
push
xchg
imul
fcoms
cmp
adc
icebp
imul
das
jae
lcall
or
fistpl
enter
mov
lods
cmpsb
outsb
fnstcw
jo
mov
or
outsb
fsubr
ljmp
inc
repnz
jns
push
or
mov
mov
lret
cmp
fstl
sbb
jmp
test
unpcklps
lret
mov
pushf
je
fisubs
in
pop
call
sub
add
pop
jns
add
lahf
jbe
fimuls
mov
dec
and
movsb
scas
in
mov
lds
out
mov
dec
sti
data16
mov
test
lods
mov
ret
jno
aad
repnz
pop
add
lods
popa
popf
mov
mov
xor
and
inc
outsb
or
stos
jns
sarb
add
and
dec
cs
pop
cmp
xor
mov
or
fs
repz
adc
leave
ret
or
int3
mov
cli
adc
mov
xchg
aaa
fsts
sub
mov
subb
mov
lret
push
or
add
mov
mov
mov
and
pop
into
cwtl
mov
gs
inc
in
mov
inc
push
in
mov
cltd
mov
jmp
xor
out
push
push
mov
repnz
sti
mov
enter
loopne
cmp
in
rcll
inc
mov
mov
mov
cmpl
xchg
je
push
mov
movsl
data16
repnz
cmp
dec
pushf
pop
inc
mov
sti
add
andb
hlt
insb
pop
mov
lods
mov
push
push
movsb
loope
ror
cmp
pop
jae
xchg
add
jo
inc
dec
imul
xchg
or
cmp
mov
movsl
mov
lret
test
mov
pop
inc
daa
adc
aaa
es
arpl
jae
cmpsl
push
scas
mov
sbb
xchg
sbb
push
test
lret
sub
xor
push
lock
lds
shrb
and
inc
mov
sub
aas
jle
iret
js
push
sbb
push
push
adc
mov
add
xchg
adc
test
mov
paddb
add
add
add
out
data16
lods
cld
mov
hlt
xor
jg
add
scas
add
add
push
out
fdivrs
dec
or
fisubrl
and
sbb
dec
aad
lret
lcall
dec
jo
aam
pop
jb
xchg
or
xor
jnp
sub
enter
je
push
sbb
push
inc
addr16
out
pusha
mov
imul
adc
jmp
test
push
xchg
mov
pop
cmp
jb
test
int
fsubrs
dec
jle
icebp
push
lods
movsb
adc
test
imul
into
dec
cmpsl
pop
and
cmp
mov
adc
mov
in
int
jecxz
fcoml
js
pushf
adc
cld
sbb
aad
jns
ds
or
insl
lcall
popf
idivl
fistpll
outsb
dec
xorl
negl
test
dec
or
rcll
cmp
in
add
hlt
adc
pop
add
loopne
enter
mov
ficompl
dec
nop
sbbl
fidivrl
jbe
imul
sub
dec
cld
cmpsb
scas
pop
adc
add
pop
int
dec
sbb
mov
or
ds
sub
hlt
or
mov
or
notl
jno
cmpsb
mov
out
fdivs
dec
lea
mov
inc
call
out
xor
add
fwait
and
xchg
push
xchg
orb
movsl
es
ss
dec
jmp
mov
push
inc
lods
popa
loop
jl
mov
mov
fdivrl
cli
pop
xlat
mov
jnp
sar
xchg
sbbb
mov
sub
push
add
dec
dec
pushf
mov
push
pop
clc
sahf
dec
fs
lea
jo
ljmp
adc
sub
sahf
sarb
pop
jmp
rcrb
dec
xor
je
mov
incb
xor
mov
lods
scas
dec
rorb
lahf
add
or
pop
and
push
xor
ror
xor
sahf
add
push
cli
fistl
int3
andb
mov
pop
mov
fldt
clc
sbb
push
in
jns
adc
xchg
mov
xor
sub
adc
jge
jae
push
imul
lods
je
push
lods
std
std
adc
dec
nop
pop
in
je
inc
out
mov
jmp
and
into
ds
or
sahf
mov
xchg
dec
xchg
lods
popf
mov
pop
adc
push
sub
aam
js,pt
xor
fisttps
imul
sub
repz
sahf
repz
pop
imul
imul
add
sbb
add
in
ja
daa
cmp
push
xchg
and
les
push
in
bnd
popa
dec
movsl
insl
into
stos
jo
mov
inc
cmpsb
lret
mov
imul
mov
and
aad
ror
jl
mov
fs
adc
push
pop
inc
adc
mov
push
adc
lahf
pop
cmpb
ljmp
jle
mov
insb
test
bnd
mov
mov
outsl
lret
cld
adc
inc
inc
inc
add
jae
cld
add
neg
jmp
cli
and
fdiv
pop
cs
scas
add
add
call
call
push
mov
pop
dec
mov
xchg
and
pop
dec
lret
and
adc
cmpb
jmp
dec
imul
inc
inc
test
mov
mov
daa
push
les
mov
jns
dec
test
sub
pop
fidivrl
cmp
and
pushf
inc
sbb
jns
aaa
push
loop
mov
pop
mov
mov
and
add
mov
jb
cmp
lock
push
nop
fists
cmp
mov
cmp
push
stc
pop
sarl
jg
int3
push
or
jmp
add
test
push
adc
es
push
sbb
inc
test
mov
inc
mov
sub
shll
xchg
scas
sub
cmp
dec
fldl
test
inc
pop
push
out
mov
push
jle
js
popa
inc
int3
ljmp
rcrb
adc
sbb
cmpsb
arpl
dec
xchg
daa
adc
pop
pop
sub
add
adc
aam
xor
es
mov
cmpsb
rcl
out
lods
shll
mov
xchg
pop
mov
push
cmp
fisubrl
mov
dec
sub
inc
inc
outsl
xor
dec
jge
stos
fbld
push
sub
pop
dec
and
notl
jg
jge
mov
test
faddl
out
cmp
insb
ret
adc
xor
pminub
sub
push
aad
cmp
ret
cld
xchg
pop
mov
add
inc
sahf
adc
add
jo
mov
add
mov
inc
mov
test
pop
sub
icebp
and
sbbl
or
add
push
sbb
leave
pop
mov
repz
push
mov
out
adc
int3
loop
jb
ret
shrl
adc
inc
jl
sub
inc
int
insl
rolb
imul
xor
bound
sub
cld
fldenv
rep
ds
popa
dec
aaa
jg
sbb
loopne
inc
dec
das
inc
in
mov
push
fcmovb
idivl
mov
mov
add
mov
ret
scas
testl
aas
pop
mov
in
jb
mov
jle
push
xchg
test
mov
mov
mov
cmp
sub
adc
fs
xchg
dec
push
insl
aas
mov
arpl
lock
ja
cmp
cmpsb
sbb
dec
sti
idivb
pop
mov
idiv
mov
ss
gs
aam
imul
popa
test
fcomp
leave
sbb
rclb
das
fs
and
mov
arpl
adc
outsl
aaa
push
and
sub
inc
fwait
loope
push
mov
gs
cmp
push
xchg
jbe
mov
and
cwtl
rcrb
push
loopne
fmuls
fldenv
data16
sbb
les
mov
jb
sbb
js
pushf
mov
push
addr16
addl
sbb
flds
adc
jae
mov
out
inc
mov
xor
adc
shrl
mov
in
cld
mov
mov
jne
icebp
cmpsl
and
mov
arpl
je
push
add
mov
and
jmp
mov
arpl
fnstsw
add
scas
add
add
push
scas
push
test
mov
arpl
imul
lock
jns
sbb
and
dec
out
mov
fbstp
jmp
popf
xor
sub
cmp
jecxz
daa
fs
cmpsl
sub
mov
aaa
adc
xchg
or
addr16
lods
ss
sbb
xor
xorb
adc
dec
cmp
or
daa
fisubrs
mov
mov
and
fmull
ret
cmp
dec
adc
xchg
mov
sbb
xor
mov
mov
gs
and
cld
imul
addr16
pop
and
insl
inc
test
mov
movsb
adc
pop
xchg
scas
std
test
adc
jle
dec
enter
int
mov
insb
sbb
xor
cmpsl
and
jg
test
fnsave
xchg
fdivr
test
arpl
mov
and
imul
inc
shlb
push
xchg
stos
sub
sbb
into
adc
je
xor
ljmp
pop
stos
or
or
cwtl
stos
dec
incl
jg
add
icebp
orb
push
leave
movsb
addb
mov
mov
sbb
xor
adc
div
jge
inc
mov
cmp
and
xor
mov
aaa
sub
les
mov
icebp
or
push
xchg
cld
enter
inc
test
inc
jge
cmp
mov
repnz
xor
mov
enter
nop
lret
xlat
movb
and
nop
mov
lea
mov
and
daa
shlb
fwait
imul
lds
push
aaa
pop
pop
and
lahf
xor
mov
les
jb
imul
dec
cmp
repnz
pop
scas
sub
mov
lahf
mov
add
ret
and
push
jmp
mov
hlt
fs
push
mov
lods
xlat
and
push
dec
mov
shll
pop
shl
pop
and
shrb
dec
xchg
cltd
negb
or
leave
testl
bound
call
mov
cld
scas
lock
sub
cltd
fstps
ret
mov
imul
cmp
jl
jns
adc
repz
and
jae
mov
lods
pop
jno
lret
mov
ds
gs
clc
add
lahf
sub
mov
inc
mov
mov
shll
subl
sub
cs
dec
push
loop
and
sbb
jmp
pusha
sbb
adc
aad
scas
rcl
or
imul
imul
mov
jns
loop
adcl
or
test
adc
cs
inc
and
addr16
xor
int
sbb
mov
roll
or
mov
mov
xor
fxch
mov
jnp
pop
xor
dec
nop
mov
aad
or
out
xchg
addr16
insb
loopne
insb
push
xchg
fwait
xor
hlt
push
out
adc
les
mov
enter
pop
int
mov
jmp
sbb
mov
add
add
add
add
test
sbb
dec
fisubl
ds
cmp
add
adc
pop
dec
rol
int3
adc
fsts
mov
jmp
xor
mov
mov
sub
mov
mov
rorb
fdivl
and
cmp
shl
adc
ror
js
loope
enter
scas
shl
pop
inc
orb
add
jecxz
aas
hlt
mov
dec
lock
repz
xor
insl
aaa
sbb
popf
xor
mov
push
ja
or
lea
mov
adc
jbe
or
subl
mov
out
lock
stc
mov
shrl
in
adc
push
fidivrs
fimull
clc
pmulhw
add
push
and
sbb
xchg
int3
unpckhps
dec
xor
test
sub
jle
js
lds
jle
cmp
mov
aas
push
mov
addr16
xchg
and
mov
push
jae
lret
inc
cmc
sti
aad
add
dec
inc
inc
mov
mov
xor
bound
cli
data16
ljmp
fwait
mov
push
sub
cltd
enter
ret
addr16
fs
clc
add
mov
cmp
movsl
xor
jno
cmp
add
mov
inc
call
add
lods
ret
xchg
inc
int3
rcr
leave
hlt
stc
lds
sbb
inc
mov
dec
push
js
mov
scas
dec
inc
cmpsb
stc
hlt
in
popa
divl
dec
add
lret
or
xchg
ret
mov
jle
adcl
jecxz
pop
inc
jnp
jb
test
cmp
sbb
loopne
mov
xchg
jg
std
xor
or
or
rorl
test
clc
mov
adc
addr16
and
jo
and
and
cld
sub
push
in
rcrl
jb
mov
repz
lret
cmp
pushf
cmp
mov
xchg
mov
or
pop
ja
inc
lods
loopne
jg
xor
xchg
push
ljmp
or
pop
ret
and
fbld
loopne
dec
or
dec
push
mov
imul
mov
pop
inc
push
mov
mov
or
mov
les
pusha
ds
or
stos
aad
adc
fisubl
mov
daa
sub
or
sbb
ljmp
mov
sub
adc
inc
inc
and
xchg
jnp
mov
out
jl
js
flds
add
push
fidivrl
loopne
xor
jg
xchg
mov
inc
fwait
movsb
aaa
push
icebp
xor
add
mov
jmp
add
cltd
xchg
stos
fnstsw
pop
mov
xchg
pop
subb
cwtl
cmp
xchg
cmc
fcom
push
in
mov
inc
movl
aam
mov
test
cmp
data16
ret
out
mov
gs
stc
or
adc
aad
cltd
call
adc
sub
cld
rep
or
cltd
xor
mov
add
xchg
jns
push
jl
adc
pop
cmpsb
ret
in
xchg
or
psllw
mov
adc
adc
mov
push
pop
sub
dec
mov
jl
jae
aam
cmc
hlt
xor
dec
icebp
std
adc
xor
mov
sbb
call
out
inc
dec
add
mov
scas
add
add
rcll
push
mov
test
add
popa
jbe
cwtl
and
imul
ds
rcrl
ljmp
rcll
push
test
push
aaa
inc
aas
lahf
pop
adc
sti
push
test
fldl2t
adc
adc
adcl
sub
ret
shlb
adc
jno
test
clc
pop
adc
push
outsb
rcr
lret
xchg
fdivrs
mov
add
rcll
pop
lcall
cwtl
mov
cli
in
cmp
pop
dec
mov
pop
mov
mov
inc
cmp
xor
mov
dec
mov
sbb
xchg
adc
pushfw
xor
aam
stc
mov
stos
test
sub
xor
mov
add
or
xchg
sbb
out
jbe
dec
inc
in
ja
sbb
sub
stos
out
pop
inc
sarl
mov
push
aad
pop
hlt
and
bound
mov
fnstsw
mov
in
jle
outsl
add
jno
imul
mov
fidivl
and
jle
dec
les
arpl
icebp
and
mov
push
popa
or
in
dec
xlat
mov
leave
xchg
test
cmp
popf
push
push
pop
bnd
dec
and
test
nop
arpl
stos
jo
ficomps
mov
mov
mov
mov
xchg
pop
insl
fcomps
push
and
mov
sahf
ret
in
daa
sbb
add
push
jmp
jge
jnp
scas
in
pop
pop
xchg
int
xchg
lods
icebp
sub
push
jle
sbbb
mov
cmc
test
aam
ss
icebp
add
clc
mov
test
xor
repz
xchg
and
jmp
sub
adc
fmuls
outsb
sbbl
iret
pop
stos
jbe
mov
stos
jecxz
rorb
cmp
fcmovne
test
push
testb
adc
mov
inc
scas
bound
sub
pop
xor
test
lcall
test
lock
xor
push
xor
jl
sti
ds
adc
or
popf
ret
mov
cmp
shll
lahf
pop
push
fdivrl
cmpsb
push
push
pushf
xorb
xchg
inc
fs
xor
or
lret
adc
push
into
dec
ljmp
mov
pop
repz
add
mov
popl
mov
clc
sahf
in
xor
sub
faddl
into
jmp
lods
mov
imul
data16
xchg
addl
sbb
lock
loopne
aad
cmp
push
cli
test
inc
aad
cwtl
mov
enter
call
add
subl
dec
pop
xor
bound
pop
dec
xchg
rorl
pop
aam
ret
stos
lods
inc
std
es
xor
cmpsl
movsb
outsb
pop
pop
aas
pop
pushf
rolb
mov
shll
mov
orl
outsl
out
xor
ret
imul
jecxz
ret
popl
dec
arpl
outsl
shlb
shr
fisubrs
dec
mov
lds
stos
mov
out
jnp
int3
mov
mov
outsl
movsl
dec
add
leave
or
add
or
add
scas
add
add
ds
pop
orl
scas
fimuls
movsl
pop
fld1
inc
ret
cmp
mov
jbe
mov
add
dec
fiaddl
in
repnz
fstl
jns
push
mov
fwait
mov
js
mov
sbb
mov
cmpsl
mov
sti
xor
dec
mov
or
add
cmp
daa
in
je
popf
xchg
inc
xor
mov
loopne
fildll
iret
loop
in
cld
sbb
aam
adc
jmp
arpl
mov
inc
mov
sahf
mulb
gs
xchg
fs
xchg
mov
fdivrs
add
fld
dec
push
hlt
cld
nop
lds
fidivs
xor
sarl
pop
xchg
pop
mov
xchg
xor
mov
bound
adc
mov
pop
lret
xor
mov
inc
cmp
outsl
jbe
out
bound
imul
or
jp
stos
xor
or
nop
out
sbb
mov
repnz
es
les
stos
mov
icebp
sub
sub
popa
xchg
xor
or
mov
je
inc
add
hlt
lea
adc
push
cld
ret
sub
push
sub
lcall
push
data16
ljmp
js
adc
test
scas
pop
push
js
xor
in
pop
bnd
neg
imul
leave
xchg
cmp
nop
inc
jl
mov
outsl
mov
stos
add
adc
into
sub
jle
add
inc
arpl
fwait
imul
into
fstpl
add
pop
shrb
fucom
pop
or
repnz
lock
psraw
bound
cltd
leave
dec
fisttpll
imul
cmp
in
jp
test
pop
dec
push
aad
stos
mov
dec
add
push
sbb
ljmp
ret
aam
cmp
add
pop
or
loop
ds
mov
mov
jno
fwait
call
and
inc
mov
push
push
call
icebp
outsb
mov
in
fdiv
lret
pop
daa
shrb
cltd
sbb
and
stc
in
int3
jecxz
icebp
test
popf
inc
icebp
pop
loope
scas
jg
jl
xchg
lods
das
loope
inc
cmp
loopne
push
push
xchg
cs
ret
push
jbe
xchg
shlb
ret
sbb
sbb
mov
xchg
call
cmpl
lock
ret
push
sub
sbb
inc
cld
and
roll
ror
test
push
xor
loope
adc
inc
adcl
mov
xor
aas
xchg
daa
mov
lea
cmp
or
sub
ja
inc
out
cli
popf
inc
int3
add
stos
jne
cmp
mov
clts
or
aas
sbb
adc
es
or
daa
cs
dec
push
pop
inc
jnp
push
xlat
dec
fcmovne
adc
ret
push
and
in
or
xor
inc
shll
mov
outsb
and
pop
adc
adc
and
pop
leave
and
fsubrs
fstpl
inc
adcb
cwtl
xchg
movsl
inc
aas
fsubs
fistpll
cltd
and
cmp
stos
push
enter
lahf
lcall
in
cli
call
out
imul
into
dec
inc
xor
xchg
sbb
inc
add
cltd
ja
daa
xor
cltd
dec
add
scas
add
add
aad
add
fs
jne
insl
outsb
arpl
imul
mov
or
or
jb
out
pop
js
lahf
xor
nop
push
test
push
lods
add
and
cmc
push
in
mov
lock
or
ss
out
loopne
jecxz
inc
add
and
push
jnp
add
mov
dec
dec
cmpsb
xlat
push
jbe
jo
outsb
lret
mov
xlat
xchg
test
sbb
test
xor
out
push
daa
mov
int
mov
mov
xchg
popa
enter
ret
cld
xchg
movsb
movsb
xchg
lahf
mov
stc
push
mov
andl
push
int3
mov
xor
jmp
std
mov
outsl
mov
lahf
fcmovnu
mov
test
addr16
or
pop
pop
inc
loopne
mov
rclb
cmp
cmp
pop
dec
sbbb
jns
aas
dec
inc
mov
jnp
cmc
xchg
mov
in
push
mov
je
sbb
icebp
add
mov
in
js
dec
popf
in
daa
stc
jbe
mov
xchg
in
jmp
xlat
lahf
sti
popa
fistpl
pop
fistl
jo
aam
fidivl
lret
push
je
push
adc
loopne
or
popf
leave
test
sub
popf
adc
loopne
dec
xchg
xchg
push
pop
call
insb
sti
push
mov
push
fcompl
data16
mov
enter
xchg
scas
xchg
jmp
dec
push
add
cmpsb
mov
push
fmul
jae
cmp
jb
sub
outsb
shll
sub
pop
ficompl
int3
dec
adc
dec
xchg
push
mov
stos
or
jae
imul
movsb
pop
repnz
mov
fbstp
mov
mov
mov
dec
mov
xor
pusha
icebp
xchg
addr16
xchg
int3
js
xchg
dec
xchg
push
xacquire
insl
dec
push
or
jne
mov
and
dec
mov
inc
out
xchg
push
or
repz
push
add
mov
adc
dec
notb
mov
jns
mov
push
ja
fs
gs
pop
call
out
jp
outsb
and
add
vcvtss2sd
mov
mov
jp
pop
sarl
or
insl
sub
test
jbe
mov
fsubr
mov
cmp
xor
shl
test
xor
in
data16
inc
push
loope
inc
rcl
add
adc
iret
xor
dec
and
add
aas
stc
inc
push
dec
xchg
cmp
mov
call
ja
ret
push
cmp
fimull
and
insb
scas
js
sti
xchg
mov
loop
mov
inc
and
xchg
call
push
mov
push
push
test
adc
xchg
add
jmp
sbb
popa
int
into
sbb
lods
mov
xor
jle
outsl
mov
fwait
sub
push
pop
push
mov
mov
fdivrl
or
loopne
lahf
in
adc
pushf
adc
push
fidivrs
int
jge
popf
xchg
stos
sti
in
int
test
cmp
cmp
aas
ret
push
jl
cmpsl
mov
mov
pop
outsb
push
in
lret
mulb
or
jge
xor
add
xor
jmp
shlb
shlb
xchg
inc
mov
loop
aad
push
push
add
scas
add
add
or
add
adc
bound
loope
jno
jnp
xchg
pop
add
xchg
xchg
sbb
mov
fistpl
scas
enter
dec
pusha
dec
daa
mov
cmp
jno
mov
inc
in
cld
test
xchg
cmp
mov
ficompl
and
push
inc
xchg
xchg
lds
adcb
push
pop
sbb
push
adc
repnz
scas
dec
dec
dec
pop
cmpsb
cmp
sahf
idiv
outsl
mov
jmp
out
dec
push
xchg
pop
sbb
jbe
xchg
shr
int
jbe
cmp
mov
loop
inc
cmpl
pop
jno
fs
out
out
sarb
rcll
test
mov
jne
aaa
xchg
in
sti
loopne
and
dec
aaa
jbe
push
loop
lret
outsb
cmp
lret
scas
lcall
and
shlb
and
pop
push
loopne
cs
loope
mov
dec
sbb
or
enter
test
jno
jmp
jg
call
pushf
mov
add
pop
dec
push
mov
push
out
out
loopne
sub
cs
mov
pop
insb
add
lcall
sbb
jae
jmp
test
lds
xor
mov
mov
adc
inc
adc
imul
pushf
cmp
in
jb
lcall
out
out
mov
pop
mov
push
and
push
and
sub
inc
and
cmp
mov
and
icebp
inc
fwait
aas
push
into
push
ret
bnd
js
adcl
xor
lds
repz
pop
aaa
sbb
in
icebp
aas
jecxz
lret
xor
stos
movsb
outsb
mov
iret
or
push
cld
in
jle
int3
data16
out
xchg
and
mov
cmp
xchg
add
fimull
aas
inc
in
sahf
in
mov
push
stos
shr
fisubl
lods
test
push
cmpsb
push
sbb
call
mov
cwtl
stc
jle
lods
and
push
pop
xchg
add
loop
and
mov
xlat
ficompl
or
and
shl
orl
and
cmp
sub
addb
jge
jg
into
shrb
sbb
aam
mull
mov
in
and
cmpsb
jne
push
pop
fidivs
enter
mov
into
push
clc
cmp
mov
outsl
or
xchg
cwtl
push
test
mov
aaa
inc
loop
jmp
leave
xor
mov
xchg
ficoms
pmuludq
cmp
ds
jecxz,pn
adc
ljmp
stos
cmpsl
stos
xorb
xor
mov
pusha
test
sbb
or
or
dec
mov
fiaddl
jmp
xchg
enter
das
cmp
sub
add
push
cmp
sub
pusha
mov
inc
pop
stc
nop
iret
xchg
mov
mov
pop
jo
lahf
push
rcr
pop
jmp
lcall
test
clc
jmp
add
cwtl
cmc
rol
ds
mov
jns
test
nop
pop
cmp
stc
push
scas
shl
and
xor
pushf
adc
jnp
add
stc
mov
stos
push
xlat
mov
testl
add
les
adc
mov
sbb
jo
pop
nop
loop
mov
push
xor
notb
ffreep
mov
insb
dec
inc
cmp
pushf
lahf
jbe
das
addb
mov
mov
repz
sub
pusha
add
add
call
adc
adc
cld
test
orw
bnd
sbb
andb
ret
aad
jno
cmpsb
xor
add
jo
push
movsb
lods
or
push
mov
mov
out
fldenv
sub
cld
xor
dec
cmp
push
inc
sbb
push
dec
xchg
loopne
repz
and
sbb
hlt
ss
notl
in
sbb
out
push
test
or
and
push
roll
sub
mov
add
les
hlt
fsubs
lods
mov
popf
out
xchg
jmp
mov
cmp
push
mov
jmp
loop
std
cld
imul
insb
fstpl
shrb
adc
rorb
mov
mov
xor
jo
pop
cmpsl
inc
mov
out
sbb
aas
xchg
cwtl
movsb
mov
int
test
clc
lea
and
mov
loop
xor
jge
fwait
sti
mov
inc
in
orb
ljmp
and
adc
mov
outsb
jne
das
sbb
xchg
mov
xor
mov
in
ficompl
iret
insl
push
sarb
mov
aas
push
pmaxsw
dec
sbb
push
lds
icebp
sbbl
pop
jns
in
adc
sahf
aaa
inc
cmp
int
xchg
or
push
mov
cs
les
sbb
jbe
lods
ja
cmpsb
gs
xor
imul
xor
dec
pop
xor
out
int
popf
aam
movsl
in
je
clc
jg
adc
subl
bound
movsb
sub
or
sub
or
push
pop
daa
lcall
pushf
xchg
test
es
and
jl
xor
mov
xor
add
fildll
mov
sub
xchg
sti
pop
and
out
mov
nop
clc
imul
xor
and
sub
rol
scas
xor
sbb
cltd
pop
pop
xor
xor
pop
add
sub
dec
mov
add
xor
enter
jo
mov
lods
out
in
les
adc
movsb
ret
pop
ljmp
loope
ret
cmp
mov
repz
std
es
dec
sbb
stos
add
test
loope
cmpb
xor
jmp
cmpsl
lea
imul
mov
divl
or
test
scas
xchg
int3
mov
pop
mov
cmpsb
xchg
dec
scas
mov
inc
popa
sub
pop
cmp
sub
movsl
pop
loope
inc
xchg
pusha
out
pop
adc
adc
enter
mov
mov
leave
dec
sbb
jmp
cwtl
in
aas
test
lahf
pmaxub
and
inc
xchg
sub
xchg
xor
cmp
pop
mov
sahf
xchg
mov
es
stos
jge
lods
mov
and
adc
loop
mov
ss
cltd
add
xlat
dec
call
adc
fistpll
cmpsb
push
add
scas
add
add
sahf
js
sbb
inc
inc
sub
icebp
xchg
cs
shll
loopne
std
mov
mov
cwtl
fdivr
xchg
and
mov
lret
mov
je
and
negb
ja
cmpsb
dec
arpl
mov
push
jo
jge
push
cmp
dec
add
arpl
push
movsb
jbe
fidivrl
fldt
pop
test
xchg
icebp
fadd
aaa
fsts
jge
hlt
xor
in
lods
xor
xchg
mov
arpl
shlb
sbb
inc
test
pop
fistl
xchg
cli
xchg
cmp
add
out
dec
jnp
xchg
pop
inc
jns
add
jecxz
adc
dec
shl
icebp
ficoms
cmpsb
xor
inc
fdivr
mov
cmp
fwait
aad
lcall
repz
or
sbb
cltd
xor
sahf
or
xchg
dec
pop
shld
fcompl
mov
jle
mov
mov
js
imul
repz
or
sbb
mov
and
fwait
cmp
push
sbb
cld
xor
es
xor
aaa
stos
cmc
popa
xchg
push
sahf
inc
push
mov
jmp
and
mov
fnstsw
cltd
shl
jnp
adc
push
scas
mov
movsb
ficompl
aam
add
mov
mov
inc
pop
mov
rclb
xchg
mov
push
cltd
pop
imul
int
in
loope
in
jl
xchg
inc
adc
nop
pushf
or
rol
or
sub
pop
xchg
jb
fisubl
sub
sbb
ret
inc
mov
inc
fwait
lea
scas
popf
cmp
pop
xor
add
incl
shl
arpl
push
pop
jecxz
sub
lret
xlat
fcoms
imul
add
test
aam
mov
push
int3
sahf
das
cwtl
adc
jae
aam
test
addr16
inc
jecxz
andl
std
repz
popa
push
mull
test
mov
sub
mov
fdivrp
into
xor
or
jb
mov
dec
xor
movsb
add
mov
icebp
sti
xchg
push
xor
orb
cmp
lcall
lea
add
xchg
or
xor
sbb
dec
xchg
inc
pop
scas
int
lcall
xor
rorl
and
xchg
cmp
xchg
jmp
pushf
testl
push
lret
pop
aas
or
orb
dec
xor
jne
pop
out
repz
je
mov
stc
dec
push
mov
rclb
js
lods
fstl
mov
xlat
lret
pusha
lret
outsl
mov
cmp
pop
pop
lds
adc
jb
adc
inc
fwait
sbb
push
cmp
adc
dec
xchg
cmp
ds
pop
lret
test
dec
ret
jo
add
adc
lods
gs
scas
xlat
fxtract
adc
and
jnp
loope
movsb
repnz
dec
mov
xor
dec
mov
js
mov
mov
arpl
add
xlat
sbb
aam
jo
lds
lods
rorl
mov
out
ljmp
dec
in
inc
out
jnp
mov
cmp
jg
push
add
scas
add
add
aas
mov
aaa
out
stos
fstps
lods
jae
push
jecxz
xor
in
enter
push
outsb
sub
xor
xor
mov
scas
jbe
popf
mov
add
jmp
sbb
xor
cmpb
inc
jge
fsubl
cwtl
xor
xor
jae
adc
scas
jae
mov
sbb
iret
cmp
xor
iret
flds
xlat
push
push
jnp
xor
sub
mov
les
test
call
pop
jbe
mov
mov
stc
jbe
subb
inc
dec
aam
pop
add
sbb
ljmp
ljmp
les
sub
rorl
frstor
mov
push
dec
scas
lahf
sub
scas
inc
cwtl
pop
cli
cmpsl
xlat
pop
xchg
pushf
daa
rcrb
roll
and
mov
fnstenv
jno
lahf
icebp
nop
icebp
pop
popa
arpl
hlt
lret
inc
dec
dec
addr16
sub
pop
cli
clc
xor
sarb
cmp
add
lahf
loopne
lea
lock
ds
xchg
sti
lock
xorl
sarb
rorb
sbb
out
mov
adc
xchg
std
scas
fnsave
mov
ljmp
loope
and
inc
add
or
lods
sbb
mov
dec
mov
xor
push
fistpl
add
cmp
fstpt
push
dec
pop
rorl
mov
int3
divb
pop
fxch
test
ljmp
xor
jns
push
lcall
mov
test
insb
test
sbb
xchg
push
jns
nop
jge
cmpb
stos
fnsave
jne
popa
mov
int3
xor
jne
inc
xlat
cmp
jnp
rorb
ljmp
pushf
aas
fisubrl
std
ss
mov
sub
and
in
ljmp
xchg
mov
stos
and
aaa
xor
jle
stc
imul
and
push
test
in
pop
mov
inc
or
sbb
add
mov
pop
scas
loopne
pop
mov
sbb
mov
sbb
sub
std
cmc
negb
jmp
push
add
add
pop
aam
xchg
into
ret
push
dec
jb
xor
push
in
mov
xor
push
ds
divb
ss
sub
push
mov
movsl
mov
das
pop
loop
sub
rcrl
dec
push
xor
jae
jmp
fstps
or
jae
cmp
std
pop
adc
xor
out
mov
sbb
mov
xchg
mov
pop
pop
pop
out
inc
push
fiadds
xor
pop
adc
ffree
push
popa
jg
shll
stos
loop
pushf
and
in
dec
rclb
pushf
mov
push
jo
ret
repnz
mov
xchg
jae
iret
adc
lret
push
int3
jge
das
aad
out
push
fwait
out
add
push
out
mov
or
rcrl
lds
nop
sub
shl
pop
mov
dec
mov
cmp
gs
ljmp
mov
xchg
icebp
lds
jg
sahf
call
lret
mov
inc
jno
lret
jno
sub
testl
insl
into
pop
and
jns
pop
das
ret
into
mov
add
add
add
adc
jg
jns
pop
xorb
out
pop
add
scas
add
add
mov
lfs
stc
xor
cmp
repz
ficoml
mov
and
inc
dec
bound
xchg
rol
cmp
pusha
xchg
mov
pop
sbbl
pushf
sbb
bound
mov
scas
xchg
cli
inc
ds
lock
movsb
jne
iret
push
sbb
adc
shl
sbb
mov
push
imul
int
jg
outsb
push
and
jnp
clc
mov
cmpsb
fadds
push
jmp
mov
xchg
inc
dec
sbb
clc
push
mov
lods
out
clc
jmp
fld
cs
jle
dec
inc
shlb
out
dec
imul
pop
loope
dec
push
and
fcomi
adc
rclb
jmp
dec
push
mov
pop
mov
mov
xchg
mov
cmp
mov
pop
cmp
out
test
stc
shll
xlat
stos
cmp
xor
cs
scas
imul
inc
xchg
aad
jbe
loopne
inc
pushf
iret
push
int
nop
sub
cmp
test
jae
lahf
add
jne
mov
in
imul
fstpl
mov
pop
inc
lods
xor
test
loopne
pop
sti
enter
jecxz
xor
pusha
cmp
jne
dec
xchg
movsl
iret
into
push
sub
jbe
insl
sub
in
mov
push
ret
adc
mov
hlt
hlt
xchg
outsb
adc
xchg
or
imul
inc
mov
and
mov
jp
lods
push
fimuls
ss
mov
pop
gs
lock
fwait
mov
push
insb
or
mov
int3
stos
scas
pop
cmp
add
fstpl
add
imul
mov
cltd
push
dec
jae
out
sub
stos
xchg
pop
mov
xchg
icebp
jnp
dec
pop
shll
scas
pop
rcrl
inc
loopne
int
jns
loop
pop
sub
stc
cmp
mov
push
push
jg
aas
stos
push
dec
into
cmovs
xor
add
cld
inc
test
push
cmp
jmp
insl
mov
sbb
fdecstp
pusha
mov
jns
ss
fstps
loope
hlt
shr
lret
movsb
rcrl
frstor
mov
int
addr16
xlat
cmp
shr
push
testl
pushl
mov
mov
cmc
mov
les
sbb
mov
jno
pop
push
mov
ss
nop
jl
mov
inc
sub
adc
push
movmskps
jmp
cmc
sbbl
loopne
leave
stos
mov
lret
or
movsl
jl
and
sbb
je
mov
sub
xor
xchg
aam
xchg
in
lods
jecxz
mov
jmp
sub
mov
inc
sbb
fcomps
add
dec
dec
notb
mov
popa
out
xor
adc
xor
and
sub
adc
test
and
jmp
mov
nop
add
testb
ja
cmc
repnz
pushf
inc
xchg
jnp
stos
repnz
in
shll
imul
ss
add
and
imul
orl
mov
shr
cmp
push
xor
mov
dec
lods
cmp
jle
sub
dec
add
adc
inc
pop
push
cltd
xor
aas
dec
jno
jns
sbb
add
mov
notl
pop
cmp
mov
add
scas
add
add
xchg
decb
cld
in
sub
mov
mov
dec
iret
or
pop
stc
mov
into
cld
aad
stc
sbb
iret
movsl
push
sub
daa
cmpsl
xchg
adc
arpl
add
mov
cmp
pop
scas
insb
js
jg
mov
push
aad
mov
js
xchg
inc
je
pop
sbb
fcomps
roll
and
imul
test
ret
sub
cli
mov
inc
and
and
mov
pop
cmp
push
adc
clc
insb
mov
mov
mov
push
mov
inc
xor
mov
push
push
pop
fnstenv
and
loope
fsts
call
fnsave
cmp
jle
jnp
fsubrl
pop
mov
sarb
xor
scas
mov
jl
into
push
or
fs
push
xor
loop
xchg
movsb
mov
push
in
adc
out
sub
insb
jecxz
xchg
push
cwtl
mov
cmp
mov
sub
lret
test
in
lods
xor
push
or
fucomip
jne
cmpsb
pop
sti
aas
test
inc
mov
xor
sbb
adcl
lds
sbb
stc
or
pushf
and
mov
add
ja
cwtl
into
cmpl
insl
movsb
xchg
pop
xchg
add
mov
iret
test
xchg
xor
ret
or
push
cltd
cs
adc
or
rclb
pop
lret
xor
mov
jle
mov
sub
xchg
int3
jecxz
push
adc
out
mov
fs
pop
fsubs
lahf
bound
out
cmp
lcall
fs
stos
mov
pop
cmp
sub
jp
sub
inc
stos
xchg
mov
dec
mov
adc
push
mov
shrl
dec
movsl
cmc
shrb
int
test
enter
and
or
push
inc
popl
loop
imul
sub
loope
ljmp
sub
jecxz
push
sbb
ror
mov
pop
add
xor
repz
das
in
sub
jno
mov
push
or
aas
movsl
in
iret
pusha
or
fbld
cwtl
stos
push
daa
ljmp
mov
xchg
cltd
imul
movsl
lret
mov
loope
lret
add
and
in
cmp
pop
int3
sbb
cmp
int3
sbb
call
jg
testl
and
xor
mov
mov
xchg
xor
dec
push
fidivrl
test
shll
add
adc
mov
ret
jmp
xchg
fdivrs
cli
test
std
mov
mov
out
sub
rcrl
mov
shlb
pushl
dec
dec
cmp
xor
jg
cmp
pop
jmp
lret
lea
cmc
popa
jecxz
xor
push
mov
movd
pop
xor
mov
sub
leave
jecxz
lcall
rolb
sub
xlat
iret
call
jmp
pop
insb
jge
dec
push
cmc
fistpll
or
enter
push
xchg
mov
xchg
pop
in
mov
pop
xor
sbb
jge
inc
adc
dec
adc
add
fmuls
aam
dec
rcrl
xchg
add
add
add
add
sti
lods
or
jmp
mov
bound
add
cwtl
loop
cmp
mov
mov
ljmp
lahf
dec
mov
les
fsubrs
xchg
stc
sti
push
xor
aam
clc
push
fcmovnb
inc
dec
lea
fdivrl
lods
fisubl
jmp
mov
in
stc
jg
dec
mov
pusha
lret
xor
mov
mov
add
mov
xor
pop
rorl
mov
pushf
scas
mov
inc
inc
and
repz
push
pop
or
pop
lock
int
push
jecxz
pop
adc
push
js
rol
repz
aaa
repnz
jnp
lds
mov
push
mov
xlat
sbb
out
xor
movsl
dec
rcrb
inc
int
push
sub
incl
push
jp
adc
sub
or
adc
jg
clc
or
lea
imul
jo
inc
arpl
icebp
in
sub
ljmp
aad
sar
push
mov
push
push
lea
enter
dec
sahf
mov
in
inc
test
adc
mov
pop
adc
jns
cli
xchg
lret
subb
push
and
dec
sbb
insl
rorb
adc
xchg
sbb
mov
es
push
andb
loopne
les
push
ret
call
push
loopne
popa
out
sbb
dec
daa
cwtl
ret
loopne
xor
in
imul
mov
pop
and
pushf
jns
adc
scas
mov
pop
jmp
jge
repnz
rcr
or
pop
repz
pop
push
into
inc
lea
cmp
mov
fdivrp
and
sbb
andl
jbe
pop
mov
out
pushf
and
aaa
mov
mov
shrb
fsub
xchg
jecxz
and
mov
mov
scas
push
icebp
cmp
fimull
dec
pop
aam
push
cmp
cmc
bound
xor
shl
iret
push
movsl
pop
mov
and
and
xadd
lds
mov
xchg
mov
adc
aas
jecxz
mov
push
dec
sub
scas
jo
mov
jo
pop
jno
cmp
sbb
lods
lret
subl
scas
cmp
mov
cwtl
repz
in
addr16
push
pop
or
cltd
fistps
xchg
fldl
mov
aam
stos
add
stc
popa
inc
aam
xchg
movsb
or
pusha
xor
inc
push
pop
sbb
add
adc
testl
xor
andl
cmpsl
icebp
mov
xorl
push
fisttpll
jno
lods
mov
jmp
or
cld
mov
lret
adcl
fiadds
sbb
lret
and
xorl
out
jno
pop
rcll
push
mov
shll
sbb
clc
jae
cmp
stos
dec
ja
addr16
pop
inc
fdivl
jb
jg
out
in
mov
dec
inc
rorb
dec
pop
fidivl
cmpb
jne
iret
repz
sbb
call
mov
into
scas
xor
xchg
cltd
lock
ds
jmp
push
jmp
add
icebp
mov
sbb
notb
add
inc
add
sub
imul
xchg
jle
imul
and
stc
push
inc
popf
mov
push
xorl
int3
jo
aaa
mov
bound
jle
jp
add
in
push
cld
cs
repnz
add
xor
pop
mov
add
scas
add
add
shlb
out
aaa
push
jmp
fcomp
clc
imulb
cmp
mov
fimull
lock
jnp
fistpll
xchg
mov
bound
ffree
inc
call
test
mov
test
mov
js
or
sub
jge
and
push
add
add
in
insb
sti
cmp
mov
dec
jecxz
enter
js
fmull
jge
loopne
aaa
rcrb
mov
jne
lahf
or
and
and
cmp
jp
pop
das
mov
cltd
dec
and
mov
mov
xor
cmpsl
xor
mov
push
dec
cltd
imul
push
fwait
jge
lock
jmp
push
add
shlb
test
mov
andb
add
xor
scas
adc
rol
fcmovu
xor
adc
out
dec
xor
mov
dec
push
rolb
icebp
mov
inc
lret
in
inc
in
or
mov
ljmp
sbb
add
data16
cmp
dec
pusha
in
pop
lds
lods
shr
dec
lret
out
add
add
mov
sub
mov
jmp
jb
lds
jp
mov
lds
mov
nop
das
xor
loop
loope
out
idivb
mov
cli
icebp
roll
mov
push
sbb
scas
mov
cmp
or
push
push
inc
sbb
das
sub
flds
dec
incb
shll
or
mov
imul
sbb
dec
adc
repnz
cld
sbb
test
jns
adc
add
pop
mul
inc
and
and
jne
mov
std
sbb
mov
lahf
sbb
push
inc
rcrl
dec
or
mov
sbb
pop
sbb
push
sub
pop
mov
inc
stc
fildl
or
rclb
dec
cld
xor
cmp
popa
test
movsl
dec
mov
sub
add
inc
outsb
jecxz
dec
jle
popa
shrb
scas
cmpsl
xor
xor
sbb
ljmp
xchg
lods
sbb
jnp
xlat
aas
mov
pop
cltd
stos
rorl
sub
add
or
cmpsl
roll
dec
and
ss
mov
lret
or
outsb
mov
aad
fistps
outsl
ljmp
mov
das
xchg
stos
loopne
lahf
xor
pop
sbb
out
aaa
or
clc
push
lock
sti
icebp
fcmovu
stos
and
pop
out
cltd
xchg
sub
aad
mov
cltd
pop
or
addr16
icebp
push
xchg
jns
jmp
jnp
in
xchg
pusha
outsb
ljmp
aam
pop
stc
pop
nop
pop
pop
and
sbb
jge
filds
fwait
jle
adc
cmp
xchg
pop
inc
inc
and
add
ret
lock
adc
aas
or
ljmp
mov
mulb
pop
cli
xor
pop
pop
jmp
andb
cmp
in
dec
mov
xchg
in
ss
fs
aaa
or
inc
pop
enter
stc
movsl
pop
jge
pop
sti
cli
sub
mov
or
mov
xor
loopne
mov
sub
adc
dec
add
mov
or
jo
imul
add
int
sbb
jo
mov
sbb
xchg
mov
pop
les
push
movsb
add
mov
lahf
xchg
ret
fsubrl
ljmp
mul
imul
in
mov
dec
in
push
loope
inc
js
adc
test
scas
push
sbb
sbb
arpl
sti
dec
pop
cmp
iret
lods
lret
stos
mov
mov
xchg
xchg
mov
jg
sti
imul
pop
lock
and
les
inc
inc
popf
pushf
fs
mov
mov
jle
mov
adc
bswap
sarl
mov
mov
push
hlt
xor
shrl
addr16
pop
xor
ret
scas
jp
xchg
dec
call
test
push
or
mov
push
add
dec
lods
inc
lods
inc
push
out
mov
xor
sub
mov
cmc
pop
sbb
mov
jge
and
shlb
hlt
out
stc
jg
scas
push
jne
sub
jg
insb
xchg
jmp
xor
call
sub
loope
dec
and
pop
push
dec
cmp
je
rorl
or
push
and
dec
lahf
pop
jg
add
jge
cmc
mov
sbb
sub
pop
cmpsb
aaa
lods
popa
scas
sbb
out
mov
jb
popa
or
push
pop
pop
inc
sbb
les
outsl
cmp
jg
jne
cmp
arpl
fimuls
add
and
imul
hlt
mov
cmp
push
xchg
jl
out
sbb
bound
pop
addl
hlt
inc
seto
pop
pop
push
ljmp
std
cld
inc
roll
xchg
mov
scas
and
adc
pop
stc
sahf
dec
mov
in
fildl
cmp
arpl
repnz
or
dec
call
out
scas
insl
push
shlb
push
mov
xor
xchg
sar
ja
int
aam
mov
rcrl
incb
dec
test
clc
repnz
xchg
sub
cmpsl
inc
in
dec
xchg
cltd
dec
xchg
xchg
fmull
into
push
push
push
push
sbb
dec
lock
repnz
mov
cld
stos
add
pop
lods
testb
mov
das
mov
js
pop
cwtl
inc
repz
outsl
rcll
mov
dec
punpcklbw
jl
enter
push
sbb
push
cmpsl
dec
std
nop
pop
sub
pushf
repz
stos
dec
pop
ret
jne
mov
xchg
addr16
pusha
mov
sahf
pop
sar
test
dec
cmp
lods
test
ror
jge
push
popa
jae
cmp
pop
clc
mov
add
jge
sarb
add
leave
pop
push
cmp
rol
xor
out
push
fildl
xor
sahf
add
cmp
push
cmp
int3
jne
sahf
cli
loopne
inc
cmpsl
mov
clc
fists
pop
xchg
outsl
sbb
aad
lods
repnz
and
and
pushf
out
int3
xchg
mov
push
dec
cli
out
xchg
test
ljmp
jae
jbe
test
or
andb
jge
xor
cltd
sub
push
mov
movsl
enter
aaa
adc
mov
scas
xchg
adc
popa
mov
mov
jns
cmp
shl
lret
mov
nopl
data16
xor
ror
repz
mov
aaa
xor
or
dec
inc
add
rolb
add
add
add
add
ret
repz
fcmovnb
pop
sbb
and
add
je
push
dec
cltd
fists
rclb
inc
cmpsl
xchg
pop
xchg
sbb
mov
hlt
xchg
ljmp
pop
mov
inc
mov
orb
dec
mov
xchg
jmp
into
test
add
test
xchg
xlat
cmp
nop
cmc
sub
outsb
mov
xchg
lds
mov
cmc
repz
inc
xor
clc
ret
sub
repnz
jmp
push
cmp
lock
stos
adc
xor
rcl
xchg
stos
shll
dec
sub
mov
gs
pop
nop
inc
ljmp
push
adc
add
js
loop
daa
inc
insl
add
stc
adc
push
add
mov
aas
mov
jae
aad
ds
pop
add
lcall
mov
je
and
insb
outsb
sub
enter
dec
mov
arpl
xor
lea
rclb
ret
jp
adc
mov
mov
mov
pop
iret
xor
cmp
lcall
call
mov
subl
ret
sbb
jb
mov
shlb
and
xor
aas
xchg
clc
xchg
push
ss
mov
pop
sub
cmp
sbb
cs
mov
aad
mov
or
stc
sub
mov
dec
addl
push
fidivl
fstpl
or
es
mov
jne
cmp
or
xor
test
pop
dec
jp
dec
mov
out
aad
mov
jle
jns
and
push
hlt
inc
and
aas
jo
jmp
and
test
enter
push
mov
pop
sbb
outsb
adc
jle
das
mov
testb
sbb
fdivl
mov
jb
push
scas
repz
pop
dec
xor
add
xchg
dec
test
pop
adcb
xor
pop
push
mov
rcr
stos
gs
fisubrs
hlt
fs
aad
movsb
push
cld
dec
dec
imul
jnp
sahf
jbe
stos
xor
sbb
or
sub
outsb
pop
les
stos
fldenv
es
outsb
mov
dec
cld
push
xor
popa
jge
xchg
adc
int
or
dec
jg
or
inc
xor
call
cmpl
daa
out
and
gs
and
jbe
xorb
add
cmp
jmp
push
push
je
aas
xorb
push
in
push
inc
imul
pop
sbb
je
and
adc
test
push
xchg
fcom
pusha
pop
inc
push
mov
loopne
icebp
fadds
and
push
add
ret
cwtl
jge
pop
lcall
xchg
aad
or
jmp
mov
push
mov
and
test
mov
test
or
cmp
adc
mov
fisubl
dec
mov
outsl
pop
subb
adc
into
add
incb
cld
add
jb
cmp
mov
xchg
push
icebp
xor
mov
fcom
pop
push
push
xchg
pusha
push
mov
mov
dec
les
add
into
lods
sbb
add
add
add
add
and
gs
daa
sti
mov
push
scas
cmpsl
cltd
inc
push
jno
add
xor
mov
aas
sub
xorl
pushl
lock
jl
xor
inc
mov
jne
mov
es
in
insl
inc
push
jl
push
lret
sbb
or
add
out
les
and
ret
cmp
fnstsw
mov
xchg
mov
es
ror
scas
mov
sub
int
cmp
sub
xor
inc
push
popa
pop
dec
or
ficoms
mov
out
pop
sarb
inc
or
pop
imul
pop
mov
shll
cld
iret
dec
fidivrl
inc
out
cmp
sbb
in
iret
popa
push
mov
xchg
mov
dec
sbb
add
loopne
stos
jo
pop
xchg
outsb
pop
jg
lret
cmp
and
pop
popf
nop
adc
fucomp
sti
js
pop
add
adc
mov
arpl
adc
or
mov
xchg
aam
mov
in
jmp
and
stos
ffree
mov
in
xor
mov
roll
add
mov
xchg
xchg
jnp
test
push
fcoml
or
jge
fidivl
pop
ja
xchg
mov
dec
test
fidivrs
jle
test
arpl
dec
sti
or
daa
pop
dec
into
mov
ds
mov
outsb
adc
loopne
addr16
mov
and
mov
dec
mov
xor
mov
mov
loopne
iret
call
lods
movsl
push
xchg
dec
cld
sub
cwtl
shlb
insb
jmp
int3
mov
mov
mov
add
and
mov
loopne
fidivrl
jb
std
loopne
lret
loope
ficoms
test
test
mov
aaa
mov
jae
and
rcrb
push
outsb
cmp
faddl
mov
shrb
sbb
adc
mov
mov
stos
lret
fwait
pop
ja
push
or
push
cwtl
lcall
je
fldcw
repz
sarl
inc
mov
bound
ss
adc
mov
cltd
daa
xlat
shr
add
imul
jb
iret
shrb
out
cli
int
xchg
das
jo
scas
test
jo
stos
rcll
cmp
push
jb
imul
inc
addr16
mov
outsb
jp
mov
mov
mov
addr16
add
testl
addr16
jle
inc
cltd
test
cltd
sub
pop
push
mov
mov
mov
int3
mov
lods
mov
insb
sahf
xor
stos
out
sbb
lcall
test
xchg
jae
xchg
stc
jne
loopne
wrmsr
inc
subb
movsl
cld
shll
fwait
mov
mov
daa
ret
or
adc
iret
faddl
cwtl
cmp
fucompp
jle
add
jg
iret
ljmp
xor
xor
sub
ret
jmp
and
jo
cli
mov
push
ss
ja
cmc
and
aaa
ficomps
add
cld
xor
cs
mov
inc
outsb
mov
lahf
jle
std
out
jbe
cmpsb
fs
or
jp
inc
pop
adc
dec
fisubs
ficoms
sbb
mov
rorb
jno
lcall
fimull
outsb
aas
das
pcmpeqw
and
mov
mov
aas
sysexit
pop
push
sbb
arpl
int
add
scas
add
add
ret
add
sti
sbb
sub
insl
adc
out
ret
push
test
fsts
adc
out
movsb
cwtl
lds
cltd
push
and
pop
inc
cmp
in
mov
mov
mov
inc
repnz
int3
jne
into
cmc
sbb
mov
jnp
sbb
mov
lods
xor
push
inc
sub
les
ss
mov
cmp
jns
cwtl
sbb
lock
bound
int3
mov
inc
or
pop
mov
xor
rol
mov
pop
add
setl
sbb
jne
inc
pop
sub
xchg
popf
push
mov
les
out
xchg
xor
insb
inc
cld
xorb
aaa
jo
lcall
cmp
scas
pop
jno
jo
or
pop
imul
loope
shr
add
sub
or
inc
repnz
add
jne
out
add
or
jp
jo
pop
ret
mov
cmp
pop
std
movsl
inc
ss
dec
jne
or
or
sub
pop
out
aaa
das
push
out
fimuls
fisttpll
inc
and
cld
outsl
incl
cmpsb
mov
fsubr
inc
rorw
jp
xor
std
cmp
lahf
dec
sub
testl
enter
es
mov
mov
add
data16
fbld
fcomip
mov
mov
ss
stos
fnstenv
cmpl
movsb
pop
fimuls
jge
dec
lods
jmp
fstl
xchg
xor
xchg
insb
jle
pop
push
cmpsb
faddl
adc
lahf
test
cltd
pop
daa
lock
pop
mov
push
lret
pop
cmp
into
or
pop
sbb
cs
inc
push
sti
imul
add
call
add
mov
xchg
push
aaa
cmp
pop
push
stc
dec
mov
push
adcb
out
cmpsl
mov
pop
xor
ficompl
push
out
pop
hlt
lret
insb
mov
inc
in
adc
js
fildll
jb
pop
sub
push
push
pop
cli
lods
jg
cmp
jge
lock
inc
or
gs
test
nop
pop
mov
mov
jl
mov
aas
and
popf
cmc
cld
inc
sbb
shll
xchg
mov
push
imul
pop
jno
aad
dec
sub
shr
ss
popa
fwait
in
push
xor
mov
cmp
decb
cmc
shlb
jle
lock
xchg
loope
jl
rcl
mov
inc
test
xor
dec
xor
cmpsl
inc
pop
mov
dec
ret
and
enter
pop
popa
je
mov
pop
pop
jmp
add
cmpsb
sbb
sub
add
mov
fnsave
aas
xchg
enter
push
pop
adc
into
fsts
or
jo
pop
nop
stos
adc
push
and
gs
cli
enter
out
in
sub
in
push
xor
fisubl
pusha
xchg
sbb
fdivr
cld
and
mov
pop
or
loopne
fldenv
sbb
insl
inc
add
xor
cmpsl
dec
jne
pop
sahf
pop
addr16
jbe
cmp
pop
dec
jb
xchg
jge
push
loopne
fidivs
pop
jp
inc
sub
rclb
mov
xchg
push
pop
inc
mov
or
ja
rcll
jo
add
jae
mov
or
mov
mov
hlt
cmc
clc
xor
sbbb
jecxz
pop
mov
mov
push
cmp
dec
or
outsb
jl
add
scas
add
add
jge
push
jne
or
dec
lods
mov
jp
scas
dec
add
pop
mov
ds
and
out
jecxz
ret
adc
in
or
xchg
lahf
inc
test
lods
mov
mov
mull
push
rcrb
cmpsl
in
dec
repz
ficompl
jl
add
cwtl
fs
mov
fcmovu
aas
push
dec
lret
lcall
loope
and
push
inc
and
cmp
std
mov
jecxz
mov
xor
fildll
cmp
out
xchg
xorb
aam
inc
mov
aas
dec
stc
mov
loope
movsl
inc
aas
adc
clc
sbb
cltd
test
jbe
jne
pop
ja
xchg
ror
push
lret
mov
jge
dec
insb
xchg
cmp
movsl
ljmp
or
inc
rep
loop
mov
or
mov
loope
les
outsl
inc
xor
sbb
xor
sub
cmp
scas
jns
cmpsb
adc
int3
jns
jns
sbb
sub
cmp
test
mov
pop
je
loope
mov
mov
inc
out
ljmp
stos
pop
loop
jl
adc
popf
dec
sub
inc
sbb
lret
jg
int
int3
shl
roll
in
mov
ret
imull
inc
cmpb
sbb
lret
test
pop
mov
push
cltd
vfmadd213ps
push
sub
aad
fldt
sarb
fnstenv
int3
xor
jns
repz
jo
mov
sbb
orl
aam
pop
stos
pusha
push
add
mov
aad
or
adc
or
xor
in
mov
lea
mov
xor
into
jecxz
lcall
jp
bound
dec
sub
test
pop
iret
cmc
imul
mov
push
andl
sub
test
mov
movsb
insb
dec
push
or
in
mov
push
sub
add
cmp
jno
std
aaa
inc
mov
xor
scas
icebp
xchg
sbb
and
push
push
xchg
lret
stos
mov
adc
fidivrl
clc
loope
jb
xchg
mov
fs
mov
push
push
popa
cs
loopnew
jnp
rcll
xchg
pop
hlt
hlt
lea
inc
adc
clc
sub
jo
test
cli
call
testl
adc
xchg
push
mov
cmpsl
push
fsts
lret
pop
popf
cmp
mov
dec
sub
pushf
loop
outsl
in
lds
cmp
or
push
mov
in
jb
mov
push
repz
push
dec
dec
adc
repnz
subb
mov
mov
pop
sbbb
xchg
fmulp
inc
subl
push
mov
movsl
adc
pop
dec
outsb
lds
lahf
test
mov
outsb
xorl
lret
xchg
inc
sahf
lea
arpl
and
in
mov
out
sub
ljmp
cmp
mov
adc
jno
and
addb
scas
lea
out
jae
lret
pop
mov
pop
lret
mov
ror
imul
dec
cltd
ret
pusha
push
ret
cmc
mov
cpuid
pop
pop
jmp
pushf
fldcw
mov
xlat
pop
movsl
jg
outsl
xchg
fnstcw
repz
rcll
xchg
or
lcall
jge
sub
scas
add
add
lods
adc
adc
mov
icebp
push
xchg
sub
mov
repz
imul
pop
mov
jne
fsubrp
mov
push
push
jb
arpl
repnz
sbb
fwait
mov
adc
rcll
xor
adc
dec
outsl
inc
sarl
addr16
adc
jge
xchg
jmp
cmpsb
jge
add
mov
mov
sub
scas
sbb
xorl
adc
xchg
and
push
cmp
mov
push
and
xor
idivb
cmp
push
pushf
repnz
movsl
xchg
cwtl
mov
mov
add
pop
sub
or
decl
cmpsb
cmp
das
inc
insb
fcomp
xchg
mov
les
icebp
xor
enter
jge
xchg
inc
std
mov
shlb
addr16
lcall
cmp
in
out
insl
fisttpll
cs
pop
aaa
std
xchg
or
loope
pop
fstp
outsl
ja
sahf
cmp
ds
or
mov
cwtl
mov
rclb
out
clc
cmpsb
or
stc
insb
mov
xchg
out
pop
mov
loop
add
sub
repnz
lahf
lds
fdivrl
cli
cmp
sbb
mov
pushf
mov
ja
sarl
movsl
xor
mov
mov
inc
mov
fisubrl
add
mov
pop
mov
cld
mov
pop
ret
jo
xchg
add
fadd
lret
sub
mov
in
xor
stos
jle
push
add
jmp
das
imul
fiaddl
pop
pop
adcb
cs
jecxz
test
mov
push
nop
repz
subb
data16
mov
mov
and
cmc
scas
in
sbb
cmp
push
mov
mov
mov
pop
xor
dec
mov
push
out
movups
dec
aas
pop
pop
jmp
inc
xor
and
xchg
pop
lods
scas
push
out
ja
je
je
rcrl
xor
xor
in
inc
mov
xchg
hlt
xchg
inc
xchg
cli
mov
pop
dec
add
mov
sbb
xchg
jno
xchg
in
ret
push
adc
sti
test
jg
ljmp
add
cmp
outsb
int
jnp
add
lea
pusha
xchg
ljmp
sbbb
fistpll
mov
mov
lock
sarb
mov
mov
xor
les
sub
pushf
cld
mov
sbb
shlb
test
jo
push
and
add
or
scas
push
mov
or
lret
add
push
xchg
and
in
int3
jmp
inc
dec
outsl
jmp
aaa
rolb
push
outsb
xorl
inc
les
push
pop
pop
repnz
nop
loopne
sarl
fdivs
fcomp
push
push
lds
sbb
aad
xchg
shlb
repnz
jp
scas
loope
test
cmpsb
test
cld
mov
les
je
or
sub
leave
lods
cmp
cld
movsl
jmp
mov
in
cwtl
sbb
sub
add
add
add
call
jmp
and
add
arpl
scas
add
add
fwait
push
stos
test
inc
push
icebp
adc
xchg
cmp
sbb
or
sti
mov
ss
cmp
pop
pop
push
arpl
dec
jns
outsb
push
in
jno
jns
adc
xchg
mov
dec
fisubrl
and
cli
daa
out
test
mov
fs
push
or
test
aad
nop
mov
pop
aaa
outsl
mov
jnp
xor
dec
gs
add
shl
test
fisubrl
shlb
xor
insl
xchg
mov
movsb
lret
adc
popl
js
or
mov
add
std
lahf
pop
mov
fs
inc
or
lret
pop
ja
loope
movsb
add
mov
mov
add
push
test
or
mov
jbe
cmpsl
enter
mov
jp
jns
test
je
addr16
ljmp
sbb
lret
mov
fsubl
push
jp
pop
subb
push
imulb
sbb
jp
idivl
mov
pushf
cmpsl
sub
test
scas
stos
mov
mov
leave
or
xchg
adc
mov
decb
cmp
aam
sahf
cmp
inc
fadds
xor
nop
call
pushf
mov
mov
mov
test
in
lds
jo
dec
mov
inc
xlat
mov
xor
sbb
push
lds
dec
mov
sti
je
or
dec
jmp
xchg
fisubrs
popa
test
sub
mov
lock
and
cs
cmovbe
and
mov
sti
jmp
pusha
out
push
mov
lods
and
mov
repnz
rorb
add
add
lahf
lods
aad
push
cmp
fisubrl
repz
std
in
inc
mov
pop
js
jb
inc
sarl
clc
cwtl
fmulp
stos
popf
adc
arpl
dec
jb
je
mov
testl
pop
shll
in
ret
shlb
sbb
cld
stos
fsubs
loope
mov
iret
scas
fdivp
jmp
data16
push
popa
outsb
adc
mov
out
in
pop
dec
adc
xor
stc
sub
iret
mov
movsl
scas
mov
data16
xchg
pushf
cmp
and
jecxz
and
js
xorl
or
fidivs
out
jo
mov
cmpsl
lds
rorb
xchg
leave
mov
add
into
sbb
out
inc
in
mov
testb
rorb
cmp
push
es
popa
pushf
jae
enter
movsb
xor
xchg
jo
inc
lea
and
imul
sub
ja
int3
int
out
xor
lds
jno
xchg
or
lods
inc
add
fs
lods
sub
enter
push
xchg
sbb
xchg
adc
ret
arpl
mov
dec
divb
and
jb
mov
daa
es
lods
ret
shrb
mov
mov
scas
push
jns
pushf
lret
dec
pop
das
push
std
pop
jp
in
mov
addb
cld
out
subb
aam
mov
test
orl
pop
out
movsl
fisubrl
fsubs
nop
stos
or
dec
sbb
shr
mov
aam
adc
dec
mov
das
push
ret
add
add
add
add
cmp
pop
rcrb
addl
scas
add
add
sub
mov
in
dec
nop
jne
aas
lret
sbb
add
cmpb
pop
add
das
mov
aas
ds
mov
push
xorl
and
pusha
sysexit
mov
mov
inc
mov
inc
sbb
or
xor
addr16
adc
lea
pop
add
xchg
push
or
ljmp
sbb
stos
je
jo
cwtl
inc
hlt
dec
stc
pop
or
pop
clc
pop
xor
push
shll
xchg
jge
cmpsb
pop
jmp
dec
xor
sub
enter
add
movsb
orb
fprem1
outsb
stos
stc
dec
mov
add
pop
outsb
out
mov
popf
loope
mov
mov
mov
inc
or
push
adc
mov
push
xchg
xchg
inc
mov
inc
and
and
sub
cld
outsb
inc
mov
into
cmp
lcall
aam
cvtps2pd
lcall
inc
fcomps
mov
or
jae
xchg
mov
pop
popa
add
loopne
inc
mov
lcall
and
mov
out
mov
mov
cli
movsl
push
add
jae
sbb
lds
pop
repnz
push
inc
mov
into
pop
daa
rcrl
and
cmp
imul
sbb
inc
push
in
and
pusha
pop
push
or
pop
lret
out
popf
inc
lods
decb
jmp
cmpsb
loope
mov
negl
dec
jne
xchg
add
xchg
sub
push
and
sbb
push
stc
lahf
imul
and
mov
jno
or
pop
jl
sbbl
mov
out
imul
fsubrp
xchg
mov
xchg
xor
ljmp
mov
arpl
stc
mov
movsb
and
fst
adc
mov
cmp
mov
lahf
shrl
mov
dec
cmp
and
mov
jne
lock
xchg
scas
movsb
cmpsb
push
mov
mov
xor
clc
fnstenv
divb
and
mov
pop
xchg
popa
fidivrl
add
xor
std
movsb
dec
pop
pushf
arpl
jmp
mov
cmpsb
test
in
mov
ret
bswap
add
in
pop
rcr
cli
jno
cmp
iret
push
xchg
jecxz
push
aam
cmp
or
adc
icebp
repz
loope
pop
or
sbb
out
bound
mov
cmpsl
mov
jae
pop
clc
andb
xchg
xlat
sbb
push
mov
jge
sub
add
or
aam
push
ficoms
mov
mov
ds
fsubl
cmp
popf
pop
mov
repz
and
mov
mov
pop
or
jnp
fistl
aaa
pop
or
addr16
popf
xor
fcmovu
pop
scas
shll
mov
popa
adc
sub
hlt
lahf
sub
mov
inc
ret
adc
xchg
stos
xchg
or
iret
nop
shll
pop
lahf
shll
repz
lahf
pop
cmpsl
sbb
lock
pop
sbb
popf
adc
add
pop
push
mov
decb
sub
es
sub
cmp
in
mov
cmpsb
call
xchg
push
aaa
add
mov
cmpsb
mov
push
dec
fisttpl
scas
add
add
scas
mov
xor
dec
push
jle
shr
dec
push
rclb
cmpsb
sbb
jg
inc
add
dec
add
imul
push
subb
sbb
sub
push
push
xor
xchg
imul
aad
scas
mov
mov
int
or
fs
jb
xchg
daa
addb
add
js
sarl
shlb
jmp
fsts
pop
mov
out
xor
xor
enter
rcrb
mov
cmp
xor
rorl
cmp
push
clc
not
stc
adc
mov
jb
arpl
mulb
cli
xchg
cmp
addr16
mov
aam
or
in
addr16
orb
leave
mov
ret
int3
and
cmpsl
jg
dec
imul
dec
lds
xchg
data16
imull
jae
add
add
xor
xchg
je
out
jns
test
aas
jmp
dec
mov
ljmp
push
xchg
or
adc
xor
mov
inc
push
jno
inc
das
fs
rep
pusha
mov
out
xchg
mov
and
nop
in
call
in
xchg
aam
popf
mov
js
jnp
jg
pusha
add
push
xchg
icebp
outsb
dec
sub
mov
into
fiadds
add
mov
sbb
push
sti
xchg
mov
ret
stos
and
xor
loop
sbb
out
aaa
xchg
xchg
pop
sub
aas
sahf
test
mov
or
insl
xchg
xchg
cli
lcall
enter
mov
cmp
mov
rorb
lock
mov
mov
lret
cld
xor
repz
in
add
cld
xchg
les
mov
sti
mov
mov
in
es
inc
xchg
push
and
ja
out
push
fdivr
mov
in
push
into
andb
xor
lret
gs
aaa
push
sahf
dec
mov
mov
mov
test
ret
push
pop
loope
call
dec
push
cmc
lods
arpl
mov
add
push
pop
js
iret
fnstsw
xor
or
cmp
pushf
pop
rcrb
out
jnp
push
sar
add
sbb
add
xchg
jge
push
jne
add
inc
xchg
cmpsl
out
fdiv
cmp
jle
push
ret
movsl
ljmp
add
inc
sbb
out
imul
fsubrl
and
xor
sbb
lcall
int
xor
hlt
xchg
sub
insb
test
adc
push
mov
out
pop
adc
jns
mov
loopne
push
and
arpl
or
clc
and
sub
movl
xor
jmp
pop
ss
inc
inc
lret
out
mov
ficompl
pop
mov
clc
in
add
xor
add
repz
scas
test
jno
push
dec
sbb
cmp
push
popf
sahf
xchg
mov
push
fsubrp
sub
mov
lds
or
test
cmp
adc
jl
jbe
xor
cmpsl
inc
mov
mov
and
dec
xor
cmp
mov
lea
bound
bound
adc
jge
in
adc
xchg
insb
loope
jecxz
mov
out
popf
call
add
add
add
add
fdivrs
out
jbe
outsl
cmp
leave
push
repz
scas
add
add
xlat
scas
dec
and
push
add
pop
mov
sbbb
aad
push
xchg
xor
cmp
and
xor
inc
in
jp
push
jne
xchg
dec
xchg
xor
push
sbb
add
out
jno
repnz
sub
lcall
outsb
push
out
xlat
lcall
add
adc
push
stos
dec
arpl
addl
cmc
mov
push
ss
inc
mov
sub
icebp
inc
jb
pusha
sub
out
jp
sbb
fwait
or
pshufw
cmp
pushf
sbb
outsl
aas
push
mov
cmp
mov
dec
inc
inc
sub
rcrb
cmc
xchg
dec
mov
ja
xchg
aas
mov
icebp
mov
int
popf
mov
lods
jge
xor
fisttps
test
sarb
xchg
pop
rcrb
push
sub
and
sbb
aad
iret
dec
mov
call
fldenv
lods
ret
push
add
and
hlt
outsb
cmp
xor
jle
sbb
xor
ss
enter
mov
mov
pop
dec
sub
xor
aad
je
xlat
cmp
je
std
cmpsl
mov
movsl
and
test
push
hlt
fdivs
fisttpl
cmp
sub
and
sbb
mov
xor
push
imul
or
cmp
pop
shlb
cwtl
stos
and
les
push
cmpsl
or
push
xlat
sbb
xor
fstp
icebp
popf
push
fstp
repz
dec
add
sbb
lds
xchg
or
fbstp
mov
or
mov
inc
cs
clc
cli
ja
push
rcr
inc
lret
test
jne
aaa
dec
lcall
mov
inc
cli
sub
cmp
dec
adc
lcall
push
inc
je
ds
shll
lods
fstl
mov
stc
adc
jne
enter
or
orl
out
sti
stos
mov
ljmp
xor
xchg
orl
add
mov
hlt
repnz
jp
arpl
cwtl
push
stos
adc
dec
or
jg
inc
sub
fadds
sti
sub
popf
out
mov
jl
push
pop
dec
pop
call
cmp
repz
sbb
fsts
adcb
jg
dec
das
aaa
push
lret
sub
andb
add
loopne
icebp
movsb
mov
shll
aas
push
dec
and
xor
in
pop
xchg
jg
and
xchg
loope
mov
cltd
mov
jp
inc
sbb
sbb
adc
cmp
out
rorb
int3
repnz
loope
mov
dec
jle
call
sub
loopne
inc
or
push
inc
cmp
cmp
lahf
push
xchg
cmp
adc
xchg
add
xchg
int
or
jl
loop
pusha
cmc
movsl
cmp
fistpll
dec
js
pop
stos
xor
enter
sub
cmpsb
lcall
mov
aaa
inc
inc
jmp
cwtl
xor
mov
adc
lcall
jg
push
mov
lahf
sti
pop
rclb
pushf
fsts
add
add
add
add
fimuls
daa
add
mov
add
aam
and
stos
rcrb
stc
out
dec
or
push
pusha
dec
mov
pusha
daa
xchg
sub
mov
inc
int3
xchg
enter
cmp
clc
and
mov
pop
or
lods
in
adc
push
loop
mov
pushf
xor
movsb
push
push
fnstcw
cld
mov
adc
pop
mov
xchg
inc
gs
push
mov
call
rcl
ds
xchg
inc
jb
and
jl
cmp
movsb
out
push
xchg
std
sti
or
mov
dec
and
xor
enter
sahf
mov
jmp
cmpsl
add
mov
push
inc
xor
negb
nop
mov
mov
pop
iret
clc
xor
out
lret
cltd
xchg
push
adc
imul
push
test
and
dec
lods
loope
pop
xor
sbb
loopne
roll
xchg
or
add
ret
push
add
int
movsb
jmp
iret
mov
fdivrs
mov
mov
push
arpl
imul
mov
cmp
cltd
xor
cmpsb
aad
mov
js
push
popa
sbb
sub
sbb
jmp
mov
pusha
or
or
in
pop
jnp
add
inc
xchg
int3
xchg
dec
imul
shll
xchg
push
pop
inc
xchg
pop
mov
or
mov
sahf
fs
or
hlt
inc
mov
addl
fiadds
sbb
andl
dec
xchg
xchg
push
repnz
dec
xor
mov
addr16
mov
cld
inc
push
mov
roll
add
and
mov
jl
adc
int3
das
dec
sbb
hlt
push
push
or
xor
movsl
mov
jo
adc
fsubs
aas
mov
addr16
sbb
cmp
dec
stos
mov
cmp
out
inc
ja
ss
in
dec
test
xor
pop
aad
jae
sbb
in
mov
enter
daa
mov
call
add
adc
inc
add
bound
jnp
adc
mov
lods
mov
jns
out
stc
push
leave
xor
imul
adc
add
mov
mov
pop
addr16
aas
sarb
lock
mov
cmpsb
xchg
aas
jge
test
das
aam
rcrl
daa
or
mov
jp
xchg
and
add
fwait
aas
adc
test
popf
xor
push
sub
xchg
test
xchg
xor
pushf
mov
add
sbb
xchg
push
sub
fcomp
mov
pop
std
int
add
cmc
lret
loopne
xor
inc
scas
data16
mov
dec
sub
xchg
and
pop
mov
jns
pop
jb
divb
push
icebp
ret
cmp
aas
mov
adc
jg
es
inc
and
scas
imulb
or
out
scas
add
pop
xchg
inc
fistps
push
scas
gs
mov
stos
aam
push
mov
xchg
fists
jp
mov
sub
out
and
rcll
sbb
dec
mov
inc
dec
xchg
add
push
mov
cli
ss
xor
add
inc
dec
mov
popa
dec
push
sbb
loop
roll
add
scas
add
add
je
in
mov
mov
dec
cmpl
lods
push
stc
push
adcb
fadd
andb
mov
aas
xor
mov
mov
jmp
mov
xor
xchg
out
gs
mov
ds
ficoms
xor
out
mov
int
mov
inc
xor
sub
xchg
push
fsubl
es
aaa
and
in
sbb
inc
fiadds
mov
cmp
jae
pop
fstl
and
cmpsb
loop
cmp
rorl
mov
out
inc
cmp
mov
mov
ja
push
aad
hlt
out
adc
add
imul
mov
push
cmp
sub
scas
and
inc
aam
shll
movsl
mov
xor
xchg
xor
cltd
mov
stos
push
add
rorb
adc
adc
pop
scas
mov
jno
lret
mov
mov
pop
adc
mov
in
pop
pop
push
test
mov
repnz
push
mov
shll
push
test
xor
inc
xchg
xor
dec
adc
out
jge
ret
lds
mov
or
lods
mov
sub
movsb
out
std
push
pop
popa
jle
pop
cmp
cltd
sbb
movsb
cmp
ljmp
mov
inc
shl
inc
aaa
cwtl
stc
push
jp
sub
add
mov
xchg
cld
add
outsl
jge
stos
push
ds
push
jmp
xlat
mov
xlat
jmp
rcrb
dec
inc
in
loope
inc
loopne
ds
js
add
int3
mov
xchg
inc
push
push
xchg
adc
shr
lea
loopne
adc
inc
pop
fistps
push
stc
sbb
xchg
test
pop
js
add
ljmp
scas
hlt
push
hlt
mov
imul
sbb
aaa
inc
jl
ljmp
aas
add
jno
push
in
lods
imul
xchg
lds
push
sarb
ja
jnp
hlt
jp
mov
push
sbbl
cs
les
stos
jne
push
lret
mov
cli
dec
and
jge
in
pop
inc
in
jecxz
addr16
int3
clc
sub
in
cli
push
xchg
sub
stc
sbb
jmp
js
inc
mov
mov
adc
mov
cmpsw
xor
jb
out
jnp
aaa
scas
lock
push
movsl
inc
xchg
out
lock
mov
xor
lods
sub
andl
lods
movsb
dec
xchg
stc
jmp
add
mov
lahf
imul
popa
adc
xchg
xchg
push
add
pop
cs
inc
sbb
in
jp
mov
fdivl
mov
loop
adc
sbb
ret
mov
decl
outsb
out
mov
inc
fildll
and
push
jecxz
ds
sbb
pop
and
xlat
xchg
lcall
jp
imul
es
mov
mov
cmp
mov
mov
in
cltd
lock
test
push
jecxz
andl
xor
or
sbb
mov
faddl
mov
lds
and
in
push
dec
sub
adc
adc
xlat
add
xlat
and
aaa
std
out
and
pop
fiadds
xchg
add
scas
add
add
or
and
mov
repz
or
adc
or
mov
or
push
aas
inc
out
icebp
cmpsb
les
xchg
sub
imul
pop
jnp
mov
mov
jbe
int
je
psrlw
fbstp
movsb
loopne
aaa
mov
push
sbb
pop
mov
mov
int3
test
pop
lret
ret
sbb
aad
push
aad
bound
jp
inc
ds
cmp
xlat
add
dec
push
sahf
sarb
inc
mov
notb
je
lds
test
out
stos
mov
imul
or
push
inc
and
movsl
sarl
xchg
cmp
jnp
lea
mov
inc
pop
jg
push
xor
in
sub
jle
mov
ja
sti
cmp
mov
adc
clc
dec
jae
dec
bound
data16
fsubrl
outsb
adc
ljmp
xchg
sbb
stc
call
mov
and
xchg
iret
push
adc
cld
xchg
js
bound
inc
mov
jg
ret
mov
pop
fisubs
xchg
xor
cs
sbb
call
jl
and
push
jb
and
out
and
xor
cld
mov
inc
cmp
das
xor
push
or
add
cmp
and
das
mov
adc
fsubr
sub
outsl
pop
stc
sbb
daa
adc
lahf
outsl
sub
jge
ss
in
shll
hlt
xlat
addr16
ret
ret
test
inc
repz
imul
out
cmp
js
pop
scas
pusha
pop
sbbl
hlt
jo
enter
and
loop
scas
popf
cmp
aas
mov
push
shlb
mov
cld
add
rcrl
lea
into
add
mov
negb
xchg
insl
add
out
adc
jecxz
pusha
test
pop
mov
and
int
jno
ds
rolb
fcomps
out
and
pop
jnp
fs
push
arpl
adc
das
push
cwtl
jle
inc
and
test
data16
cmpsb
adc
hlt
pop
mov
stos
mov
push
xor
pop
negl
add
jbe
mov
jecxz
stos
into
jg
insb
rcll
mov
and
cmpsl
pop
mov
dec
ror
pop
stc
dec
inc
push
arpl
out
scas
mov
fldcw
out
cmc
sbb
sbb
fsub
mov
jmp
add
roll
pop
cld
mov
nop
jne
fwait
inc
mov
dec
adc
dec
loope
adc
jnp
and
or
mulb
dec
hlt
mov
mov
mov
xchg
bound
pop
adc
mov
push
sub
insb
ret
in
stos
ss
frstor
jbe,pn
dec
inc
or
lret
jp
jae
push
jb
pop
mov
add
jmp
imul
push
in
stc
sub
add
cwtl
mov
sbb
cmp
mov
rcrb
sbb
cmp
adc
xchg
pusha
cld
xchg
mov
js
lcall
dec
frstor
stos
inc
xchg
dec
inc
inc
cmpsb
mov
inc
mov
jl
sub
add
add
add
nop
int3
popf
fistps
lea
jmp
shlb
add
pushf
dec
xor
jns
sarl
repz
ficompl
fnstcw
or
xchg
arpl
es
shr
aam
dec
scas
xchg
daa
or
test
cmp
shlb
pop
add
push
aam
dec
jl
lahf
dec
xchg
push
adc
xor
pushf
pop
xchg
daa
jbe
int3
mov
mov
lret
jp
jnp
push
roll
dec
test
xor
fsqrt
loop
xchg
mov
xchg
mov
and
mov
jmp
pushf
inc
dec
xchg
or
inc
xor
sub
inc
ret
daa
in
or
sahf
movsl
push
stos
cmp
xchg
fiaddl
push
gs
jge
filds
jmp
jmp
fimull
cwtl
fstpt
sbb
pushf
mov
xchg
shll
loop
xor
lea
pop
jmp
or
cmpsl
lock
arpl
divps
mov
xchg
cmpsl
pop
mov
in
pop
mov
xorl
push
adc
js
repnz
adc
cli
mov
aaa
jle
neg
mov
pop
add
or
rclb
ret
mov
ja
rolb
stos
pop
mov
loopne
filds
xchg
mov
push
jecxz
out
mov
scas
lcall
jmp
mov
popa
adc
sub
dec
inc
mov
clc
mov
xchg
inc
inc
or
dec
fildll
fcmovnu
fwait
or
and
lret
sub
iret
mov
sub
xchg
test
scas
lret
sub
xchg
xchg
inc
push
xchg
fisubrl
loopne
xor
or
loopne
lcall
sahf
int
mov
sub
cmpsb
fildll
into
stc
call
jbe
ret
push
mov
inc
jne
xlat
jno
xchg
xor
lods
imul
cmp
repnz
cmc
test
mov
or
outsb
adc
mov
fwait
mov
adc
in
add
and
lcall
aam
pop
pop
dec
dec
adc
cmp
iret
mov
push
sub
xor
push
inc
lret
adc
dec
push
addr16
push
mov
dec
pop
enter
mov
fwait
xor
js
shl
jne
jae
push
subb
imul
pop
add
cmc
int
sub
mov
dec
xor
xor
leave
rcrl
icebp
mov
add
movsl
push
pop
enter
dec
push
mov
mov
nop
aas
and
arpl
mov
das
out
mov
xchg
repnz
out
mov
subl
add
push
loopne
mov
or
xchg
jp
adc
dec
push
int
mov
les
dec
rcl
mov
scas
sbb
test
pop
mov
lcall
sub
jae
adc
hlt
dec
loope
movsl
xchg
xchg
fcmovnbe
cmp
push
and
pop
xor
addl
sub
jl
cld
dec
mov
or
push
out
in
jne
pop
adc
cltd
jp
sbb
inc
lret
shlb
inc
fstpl
stos
rcll
mov
gs
xor
sub
sub
add
cmp
xor
ret
sub
mov
jmp
xchg
in
cmp
or
sub
scas
sbb
sbb
das
mov
imul
dec
cmpsb
fidivrs
add
data16
mov
pop
mov
push
mov
popf
add
scas
add
add
and
cld
jb
jbe
xchg
loopne
out
fidivs
jle
cltd
imul
cmp
or
push
lods
inc
and
mov
jecxz
xchg
sbb
outsb
xor
clc
out
cmp
push
sarl
sbb
stc
int3
ljmp
push
mov
mov
adc
sahf
xchg
cs
jns
test
mov
add
or
test
sbb
mov
js
xor
pusha
sub
loop
push
movb
add
sbb
sub
mov
cmp
add
dec
sbb
mov
dec
adc
mov
add
xor
mov
ss
inc
jg
xchg
jns
imul
pop
int
es
aas
add
jg
jg
push
dec
inc
repz
pop
test
adcb
stos
aas
jl
aad
int3
dec
js
negb
inc
out
or
test
cmp
inc
adcl
nop
xchg
adc
pushf
cmp
pop
push
dec
pop
jecxz
jnp
sbbl
xchg
in
lahf
mov
mov
xor
and
in
insl
or
pcmpgtw
dec
dec
dec
cmc
aad
mov
pop
iret
int
stos
cmp
rcll
pop
jge
cmp
add
cmp
mov
stc
daa
pop
std
push
ja
lods
sahf
cmpsb
imul
inc
sbb
es
arpl
pushf
add
sti
into
aad
fadd
int
pop
jno
gs
cld
push
add
inc
cmp
and
divb
sub
ficompl
arpl
les
adc
js
negb
dec
sbb
mov
out
cwtl
pop
iret
ret
int3
cmp
in
or
mov
mov
int
in
movsl
sbb
pop
push
cltd
shr
or
loope
jb
jne
mov
scas
addl
mov
and
pusha
test
test
subb
aaa
jmp
push
sbb
mov
push
push
cmpsb
xor
lret
inc
cld
xor
push
lahf
ret
jnp
jb
jns
adc
cmp
dec
out
and
icebp
push
lds
outsl
shrb
ficomps
out
jo
int3
sbb
jp
jne
or
mov
lods
pop
dec
pop
inc
inc
inc
iret
jnp
jae
inc
shlb
xor
push
push
aaa
adc
cwtl
hlt
out
lods
int3
ror
push
adc
icebp
fwait
les
push
shr
jecxz
pop
loope
addr16
and
ret
xor
sub
mov
fbld
mov
or
pop
jb
fldt
lds
loope
loopne
mov
and
lods
lahf
push
aad
add
and
sbb
enter
and
sbb
in
inc
xchg
xchg
aaa
fiaddl
ja,pt
call
stc
dec
fistps
std
jecxz
inc
push
pop
adc
gs
fstps
dec
sbb
push
repz
movsb
xorl
jae
sbb
std
imul
inc
bound
or
push
adc
xor
out
add
iret
mov
fs
leave
inc
ficoml
lods
fsts
dec
cltd
add
mov
add
sub
mov
mov
cld
or
icebp
pop
pushf
lcall
lods
or
fdivrs
mov
inc
dec
pop
iret
pop
mov
addr16
inc
fdivrp
out
ja
or
pop
int3
iret
xor
add
mov
pop
aam
mov
jns
iret
xor
ficoms
add
cs
jnp
jl
add
popa
int
mov
pop
push
push
dec
inc
dec
mov
and
dec
test
pop
cld
imul
hlt
mov
push
fwait
pop
mov
enter
int
int
sahf
push
fiaddl
jno
sub
cmpsb
jns
pop
or
and
add
push
pop
cmp
fwait
movsl
xchg
dec
mov
scas
aam
jecxz
int
loopne
hlt
inc
pop
adc
fs
lahf
adc
push
loop
inc
inc
fiadds
les
sbb
les
add
jno
push
push
xlat
lea
sahf
dec
int
adc
imul
xchg
pop
inc
add
fnstsw
sbb
sahf
cltd
sub
lret
and
fstl
dec
movsb
es
jg
sbb
inc
insb
sbb
mov
decl
xor
sbb
jb
push
push
pop
jae
shll
std
jae
sbb
pop
cmp
or
xor
xor
xor
div
dec
push
jg
adc
pop
xor
jbe
push
push
xchg
lds
fnsave
xchg
std
mov
dec
ret
std
pop
test
jecxz
stc
mov
sbbl
test
adc
aas
xor
adc
xor
xor
sti
leave
jmp
shlb
shrl
sub
pop
jg
dec
rcrl
lahf
call
cmpsb
push
pop
mov
mov
movsl
dec
add
mov
shll
hlt
ret
pop
push
pop
jno
cld
pop
xchg
dec
andl
push
shr
imul
lret
mov
push
sbb
xorl
out
insl
mov
fmuls
xchg
test
inc
cli
pop
lods
insb
in
push
repnz
int
popa
dec
dec
cmp
push
mov
inc
cli
pop
sbb
mov
adc
decl
enter
xor
dec
pop
cmp
pop
ds
pop
outsl
pop
cmp
icebp
inc
data16
jecxz
jg
jns
mov
mov
inc
cmc
out
mov
jg
push
push
popa
test
mov
in
cmp
xor
nop
shrl
and
or
xor
push
sbb
in
xchg
ficomps
lret
mov
adc
jp
hlt
dec
jb
or
stc
and
mov
addl
sub
cmp
aad
jmp
pop
in
shll
pop
sub
push
jo
jne
or
jg
out
xchg
aas
cmpsl
add
jae
jle
lea
outsl
cmp
ret
xchg
or
inc
movsb
and
lcall
int
lods
sti
cmp
add
in
negl
add
add
js
nop
imul
mov
and
jbe
shlb
jl
sbb
xchg
ret
ficoms
dec
and
dec
mov
sbb
pop
push
mov
movsl
ljmp
jp
mov
in
pusha
in
shll
loop
into
fisttpll
xor
fwait
bts
repnz
int3
adc
dec
and
shll
xor
and
js
js
or
sti
adc
enter
test
dec
movsl
fisubs
cmp
push
push
je
negl
pop
sub
adc
repz
in
dec
sbb
ja
mov
cltd
mov
xor
repz
or
scas
add
add
shlb
lds
sahf
cmp
cs
loopne
sbb
dec
aad
in
adc
cmc
jmp
in
fs
shll
daa
adcb
push
pop
cmc
adc
cmc
inc
shrb
inc
dec
enter
in
lahf
loop
lahf
xchg
sbb
mov
adc
fs
and
push
dec
mov
pop
scas
mov
movsb
fcoml
lahf
out
jo
fxch
adc
or
cs
xchg
in
scas
out
mov
pop
lcall
ds
in
or
sub
inc
insl
pusha
push
pop
into
xchg
daa
adc
mov
and
clc
lds
sub
inc
pusha
sbb
aam
adc
iret
sbb
mov
jle
das
mov
out
jbe
push
mov
sub
fs
inc
adcl
mov
and
loopne
xlat
jne
mov
push
cmp
dec
xlat
daa
pop
inc
iret
jnp
pop
push
push
pushl
stos
ficompl
cmp
adc
pop
std
data16
pop
xchg
dec
dec
dec
insb
stos
xchg
cmpsl
lea
out
cmp
inc
mov
out
subl
pop
xor
jmp
pop
mov
dec
pop
mov
mov
cmp
shll
sbb
sahf
push
inc
mov
out
pop
pop
loop
daa
outsl
sub
sarl
dec
mov
dec
inc
js
pop
orl
and
inc
jo
sub
mov
popf
pop
loop
popf
push
ds
daa
bound
mov
js
xchg
adc
push
in
rolb
data16
pop
jmp
lret
and
jecxz
mov
pop
add
pushf
dec
mov
mov
push
fwait
jno
dec
adc
aad
pop
test
scas
mov
jge
inc
leave
cmc
out
incl
push
xchg
add
data16
cmpsl
jb
fdiv
fld1
jnp
jbe
xchg
add
xchg
mov
xor
cli
adc
pop
in
addr16
test
je
inc
in
mov
sbbb
rcrb
and
int
mov
jge
das
sbb
aas
push
dec
fisttpll
push
dec
pop
or
sbb
or
movsl
cmc
xlat
inc
xor
push
adc
out
insl
cwtl
mov
test
pop
jo
push
pushf
in
imul
inc
adc
dec
je
xchg
push
mov
fnstsw
dec
dec
shrb
cmp
jmp
clc
pop
cmp
addr16
sub
stos
into
sbb
out
mov
test
xchg
add
gs
lret
inc
insl
inc
and
inc
fstpl
mov
jo
je
repnz
sbb
mov
pusha
jae
sub
lock
sti
je
ja
mov
xchg
adc
sbb
or
inc
cltd
loope
inc
or
jb
mov
mov
ret
inc
adcb
mov
clc
pop
je
js
into
data16
mov
pushfw
mov
push
or
ljmp
scas
sub
into
decb
mov
in
push
clc
rclb
dec
mov
push
ljmp
sbb
mov
mov
lds
js
rcll
mov
jno
ds
add
sti
addr16
push
cmc
lcall
rcrb
xor
push
pop
pop
fiaddl
cmp
inc
gs
ja
mov
add
xor
cmp
decb
pop
test
add
mov
cwtl
mov
rcll
adc
inc
pop
stos
sbb
push
in
mov
js
and
test
push
cmp
fisttps
aam
mov
jo
mov
pop
pop
js
mov
inc
es
addb
or
push
inc
push
dec
in
mov
adc
lods
inc
outsl
xchg
lcall
fsubs
sbb
sbb
incl
pop
frstor
nop
inc
bound
imul
inc
mov
xchg
das
jb
mov
mov
jno
lds
push
in
xor
rcl
jo
jnp
sub
repz
jl
adc
fs
int
cli
ret
mov
hlt
dec
push
in
lret
mov
cmp
and
mov
or
je
mov
mov
add
xchg
pop
out
xchg
test
and
push
xor
je
and
popa
lock
lock
jns
lock
nop
xor
adc
fidivl
test
ret
cmp
or
push
xor
push
sahf
inc
notl
loopne
pusha
mov
ret
cli
es
inc
call
jnp
loopne
cli
rcrl
aaa
ret
decl
outsb
ss
mov
add
dec
adc
xchg
addr16
in
xchg
add
repz
dec
mov
loope
inc
or
cmp
fcoms
mov
in
inc
jb
fcomps
scas
inc
push
jg
or
push
jl
std
clc
adc
sub
xchg
imul
test
mov
sub
fcoml
test
push
add
cmp
xchg
jecxz
sub
jno
cmp
test
js
pushf
mov
jmp
js
add
cmp
jbe
call
push
stos
pop
daa
stos
jecxz
or
fimuls
shl
rorb
lods
sbb
adc
adc
dec
pop
dec
in
insl
rcl
push
xor
leave
jbe
pop
jnp
ds
roll
into
inc
sub
push
outsl
test
xchg
jmp
pop
jl
out
popf
sub
cmovae
aam
imul
fsubs
loop
jle
lods
pusha
cltd
cmp
pop
add
sub
ljmp
mov
jge
out
xchg
mov
inc
fmuls
sub
sub
fmull
adc
std
adc
orb
pop
ljmp
bound
push
stos
mov
jecxz
xchg
xlat
cmovbe
jo
pop
mov
add
jno
mov
rcll
dec
aam
add
jne
subb
vrsqrtps
xchg
test
xor
cs
add
mov
repz
fwait
arpl
fmull
mov
test
ret
pop
cmp
xor
pop
jne
pop
stos
jge
sti
fwait
xchg
int3
sbb
ja
loope
push
std
das
incl
mov
dec
dec
lods
dec
cmp
arpl
pop
scas
fst
push
rcrb
adc
sahf
xlat
fs
aam
xchg
orb
push
mov
push
ja
or
loop
orb
es
dec
loop
push
sub
mov
std
pop
or
xchg
jno
adc
push
sarl
mov
xchg
fcomip
je
cli
dec
push
ret
mov
jge
cmp
in
and
push
lods
add
scas
add
add
sbb
std
mov
cvttps2pi
clc
xchg
cmp
push
mov
inc
not
mov
jl
jg
repz
dec
or
stos
aam
cltd
fldenv
lahf
out
into
mov
call
shl
ss
ds
test
cmc
daa
fdivr
jb
cmp
or
push
mov
ja
push
push
test
out
outsl
into
pusha
dec
sbb
inc
add
int
sbbl
or
xchg
push
fisttps
jl
iret
in
mov
mov
stc
ficoms
cmp
add
ficompl
push
mov
aaa
mov
mov
sar
pusha
cli
push
and
cmpsl
test
les
adc
sti
stos
sub
push
rcll
js
icebp
sbb
jp
add
fdivrl
inc
icebp
mov
daa
ja
fadds
shlb
xor
out
mov
iret
dec
jge
pusha
lock
push
pop
dec
call
jo
scas
sahf
int3
popa
ss
sbb
pop
clc
je
xchg
mov
iret
push
mov
pmaxub
popf
dec
subl
insb
or
inc
aad
add
iret
push
enter
add
jnp
nop
bnd
lds
cltd
adc
mov
xchg
rorb
mov
jmp
mov
xchg
pop
mov
and
rcrb
push
ret
mov
mov
aaa
gs
mov
or
jno
pop
outsl
inc
lods
testl
sbb
idivb
js
loope
mov
icebp
fidivrs
mov
mov
lds
cmp
fsub
in
sbb
daa
sub
mov
call
xor
sahf
mov
mov
pop
aas
xchg
adc
pop
push
imull
dec
aaa
gs
sbb
and
iret
insl
or
or
rcl
hlt
fsubrl
insl
ljmp
push
or
scas
fsubs
mov
popa
mov
shl
fiadds
or
cmc
insl
aad
mov
imulb
and
insl
push
add
inc
outsl
int3
arpl
mov
ficompl
adc
xchg
jns
pop
jge
mov
dec
ds
imul
xchg
cld
vmread
mov
cltd
gs
mov
cld
lcall
or
sti
shll
adcl
jmp
rorb
loope
scas
dec
mov
dec
repnz
fidivs
loopne
push
push
leave
mov
in
test
mov
out
test
cmc
push
inc
iret
push
dec
mov
and
jp
push
and
push
mov
cltd
mov
sbb
stos
push
loop
daa
fidivrl
mov
push
push
clc
popw
insl
mov
mov
jmp
nop
stos
js
push
and
cld
lods
mov
outsl
add
add
outsl
and
enter
or
lods
xlat
les
ss
shlb
xchg
sahf
outsl
sub
hlt
inc
mov
mov
scas
leave
push
mov
je
pusha
cli
add
inc
jno
jp
push
fimull
insb
sub
xchg
jbe
inc
mov
movsb
pop
push
pop
rol
in
sub
jno
pop
lahf
inc
icebp
rcll
mov
imul
imul
scas
je
inc
and
add
in
jmp
lahf
jle
stos
xchg
mov
add
add
and
cmp
sbb
push
sbb
push
rorl
shlb
add
sbb
mov
fisttps
and
and
mov
jnp
lods
aaa
leave
mov
xchg
insl
cmpb
inc
clc
pushf
and
mov
mov
fimull
sbb
jge
lret
mov
ficompl
mov
shll
cmp
mov
ds
mov
test
sub
dec
stos
les
cmp
psubw
test
dec
lahf
mov
push
pop
ret
sti
mov
hlt
and
pop
inc
sbb
mov
test
cmpsb
push
mov
test
pop
xchg
sub
pop
push
xor
int3
enter
outsl
lret
cwtl
sarl
push
mov
cltd
xlat
mov
dec
cmpsl
or
xor
imul
add
ljmp
dec
xchg
pop
loope
test
xchg
mov
call
data16
fstl
pop
adc
int3
in
fbld
fsts
add
jge
test
fwait
or
add
lcall
mov
faddl
dec
sarl
mov
ds
jle
stos
movsl
cmp
insl
adc
inc
or
movsb
ss
jne
cmc
pop
push
call
add
stc
xor
les
lods
cmpsb
mov
aas
jb
jg
dec
insb
and
xchg
xor
call
pusha
adc
or
cmp
xor
mov
mov
rcrb
stos
push
mov
fsub
in
mov
add
cwtl
fimuls
mov
out
mov
push
test
lcall
in
ja
lds
pop
fdivrp
daa
out
outsl
mov
push
jmp
mov
xchg
movsl
push
mov
enter
je
sbb
pop
jnp
pop
adc
sub
int3
lcall
jne
jb
mov
arpl
fst
leave
movsl
pop
mov
push
icebp
sahf
gs
jns
dec
xchg
and
cmp
popa
sub
push
std
cmp
jg,pn
shrl
dec
and
jmp
cmp
cli
rcl
test
push
les
aas
cmp
and
mov
je
ds
jle
hlt
xor
inc
cmpsl
inc
mov
fidivs
dec
push
xor
jp
xchg
les
cmp
das
icebp
into
push
xor
scas
add
in
scas
loopne
push
inc
shrl
imul
mov
xor
clc
lods
push
or
inc
pop
adc
or
hlt
mov
enter
inc
leave
loope
rorb
pop
jle
out
push
imul
daa
iret
fdiv
pop
outsl
jno
inc
ret
std
lods
loop
js
aam
or
xor
mov
mov
mov
loop
shll
fldcw
jl
in
push
in
jmp
mov
mov
jne
fistl
fisubrs
push
jmp
cmp
mov
leave
in
or
mov
cmp
jno
jg
int3
lea
subl
xor
bnd
push
cmp
mov
cmpb
je
sarl
fwait
out
cmp
insb
xchg
pop
jge
in
xorl
jo
mov
dec
mov
sub
mov
jae
add
mov
decl
mov
insb
xchg
add
mov
pop
daa
clc
push
outsb
orl
mov
repnz
fcoml
cmc
push
aad
mov
jge
jae
ss
or
daa
mov
lock
das
sub
out
and
shll
aam
dec
cltd
xor
sub
pop
out
and
inc
fisubs
popa
imul
jle
ss
jle
rcrb
add
lods
mov
push
sbb
popa
lods
or
adc
gs
dec
cmp
cs
stos
pop
mov
cmpsl
push
push
stos
les
lret
ss
jns
cltd
pop
int
push
xchg
in
pop
mov
and
fisttpl
lcall
cmp
push
xor
mov
push
adc
inc
fisubrl
int3
sahf
movsb
dec
pop
xchg
fisubrs
or
or
or
inc
add
add
inc
pop
les
shr
push
rcll
insb
movsl
push
ja
inc
mov
je
insl
xor
pop
inc
outsl
xor
pusha
push
push
idivl
mov
sahf
cmpsl
popa
fcoml
stos
movsb
repz
mov
lret
pop
cmp
sub
fldenv
out
push
xor
enter
mov
test
shl
enter
or
mov
push
inc
add
pop
inc
aaa
add
loopne
push
push
stos
xchg
ljmp
sub
mov
xchg
mov
call
scas
hlt
xor
loopne
adc
sti
test
call
rcll
jl
push
mov
xchg
dec
ja
aad
sbb
gs
insl
xchg
in
fdivr
mov
imul
stos
lods
popf
popa
scas
dec
popf
push
jge
dec
cmp
cmc
and
or
idivl
mov
dec
out
push
cmp
or
and
jmp
or
cmp
mov
xchg
ljmp
loop
xor
xchg
jmp
movsl
mov
sar
and
push
sahf
ja
jbe
dec
jecxz
sbb
faddl
test
sahf
jns
pop
jnp
push
inc
stos
add
stos
mov
cltd
mov
stc
es
pushf
movsl
mov
in
imul
stc
test
xor
push
popa
pop
jg
jae
ss
leave
fs
pop
cwtl
fsubl
push
ret
jb
pop
adc
movsb
data16
dec
sbb
cmp
rorl
jae
cld
mulb
cmp
pop
loope
sahf
in
xor
cli
pop
mov
pop
shlb
inc
andb
fstpl
scas
mov
leave
lods
std
add
ficompl
popa
imulb
ret
mov
inc
jb
lahf
mov
xor
aas
dec
insb
adcb
jp
incl
xchg
pop
lock
push
imul
jg
push
int
mov
push
and
test
push
ljmp
lahf
int
cwtl
xor
incb
or
fisttpl
fwait
add
jecxz
sub
fwait
pop
push
dec
loope
jmp
xchg
js
hlt
jp
lret
out
jle
pop
stc
xchg
mov
lret
imul
or
sbb
push
jcxz
sub
and
inc
addb
mov
push
js
arpl
in
xor
or
mov
cwtl
loope
inc
add
rsqrtps
push
int3
jmp
mov
nop
mov
mov
cmc
repnz
jg
and
jb
push
dec
fldcw
leave
sbb
mov
rclb
add
add
add
xor
xorb
icebp
lret
aam
imul
jb
cmp
mov
add
test
and
mov
daa
adc
and
xor
dec
in
pop
xchg
mov
mov
sub
dec
mov
sub
test
rcll
adc
sti
pusha
imul
jl
cmc
into
ficoml
das
scas
rclb
add
xorb
stc
push
lea
fs
adc
mov
add
iret
and
pop
jne
shlb
mov
and
or
ds
or
push
pusha
lret
push
rolb
xchg
pop
pushf
push
mov
rcrl
icebp
movsb
test
push
arpl
jge
divb
cmpsb
xor
sub
int3
jo
pop
sahf
dec
insl
scas
mov
inc
stos
loop
js
pop
push
pusha
jle
adc
leave
mov
into
fs
rorb
cmp
call
stos
jne
jae
sub
mov
test
mov
or
insl
mov
inc
add
neg
and
loope
jl
lret
aad
xchg
mov
sbb
shl
push
decb
jecxz
jmp
ljmp
mov
xchg
sub
cld
pop
jo
push
cmpsl
in
fwait
mov
push
and
icebp
adc
fwait
lods
popa
jbe
in
and
pushf
push
lods
jno
or
outsb
in
cwtl
iret
and
fistpl
sub
enter
xchg
or
cld
andl
rorl
dec
lds
mov
dec
ret
xor
mov
mov
pop
sbb
es
mov
sbb
sbb
xchg
lret
pop
xor
ss
sti
push
std
jbe
mov
ja
sub
fwait
mov
es
sub
pushf
xchg
aad
push
fwait
xor
jge
sbb
das
sub
pushf
mov
in
scas
or
pop
in
add
jbe
dec
adc
fs
lahf
xchg
xchg
mov
andl
dec
lcall
sbb
stos
out
pop
imul
stc
push
js
push
cmpl
rcrl
outsb
aas
inc
adc
mov
es
das
sbb
cs
in
cwtl
jp
cmpsl
inc
mov
xchg
and
sbb
adcb
xor
out
sub
jecxz
sub
pop
cmp
xor
mov
and
xchg
fwait
mov
nop
mov
lret
mov
sbb
mov
and
mov
inc
adc
aad
in
push
sub
xor
jno
mov
dec
push
and
jb
lahf
push
hlt
gs
out
lahf
sbb
jl
inc
xchg
aam
sbbl
cmpl
inc
stos
push
xor
data16
out
bound
movsl
cltd
xchg
adc
in
dec
push
xor
ds
cmp
xchg
inc
loopne
out
cmp
in
jo
and
or
cmp
loop
cmp
fstpl
jne
popf
push
mov
sub
addl
pop
into
sbb
pop
mov
sub
jmp
sub
pop
sbb
jbe
pop
xchg
lret
icebp
aaa
mov
mov
ljmp
jnp
or
gs
mov
jnp
push
out
push
data16
push
cmpl
push
xor
scas
outsl
xchg
mov
or
mov
jmp
int
negb
lret
add
in
jp
jp
in
sarl
movsl
inc
lret
add
hlt
push
movsb
and
mov
pop
cltd
or
pop
sub
pop
push
cmp
insb
jecxz
cmp
cmp
clc
pop
das
in
xor
mov
test
movsl
in
xchg
sti
test
dec
dec
std
adc
jl
pusha
mov
jns
add
cmp
inc
dec
jnp
jle
xchg
or
mov
xor
adc
mov
int3
xchg
sub
in
or
je
insl
push
popa
adc
mov
insl
mov
dec
jmp
lret
push
addr16
jnp
sahf
ficoms
clc
mov
idivb
and
cmc
fnsave
scas
lret
and
pop
xchg
dec
nop
xchg
pop
mov
arpl
test
cld
push
xor
add
add
popa
xchg
test
outsl
negl
nop
cmp
add
ret
inc
aaa
pop
add
jo
jnp
test
or
lcall
pop
enter
push
movsl
mov
push
cmp
lods
push
loope
shrl
mov
or
lock
pop
test
dec
je
rclb
and
pushf
mov
aas
imul
loope
rorb
subl
xor
lods
sub
cli
mov
and
movsb
mov
jo
int
ljmp
xor
jge
sbb
sub
mov
jg
icebp
faddp
sbb
sti
int
insl
into
ret
push
je
add
and
out
xchg
pusha
mov
sub
mov
and
mov
cmp
pusha
rcl
aas
je
sbb
mov
adc
xor
rolb
mov
cmp
jne
dec
rcrl
outsb
arpl
lds
test
and
and
push
movsl
inc
lods
popf
in
mov
leave
fcoml
xor
xchg
cmp
in
outsl
int3
adc
pop
xchg
pop
dec
aaa
mov
xor
addl
testb
icebp
outsb
adc
out
push
popf
fists
or
in
imul
mov
sub
or
shl
out
push
ficompl
mov
imulb
and
popa
xchg
fcoms
jno
pop
jne
pop
mov
or
and
cmc
mov
push
adc
faddl
and
gs
xor
adc
xor
fmull
loope
or
xchg
sbb
mov
cwtl
sub
in
jbe
xchg
fucom
pop
push
es
jno
lret
imul
pop
out
cltd
add
inc
mov
pusha
jnp
mov
pop
or
icebp
call
bound
mov
dec
sti
cs
add
adc
mov
lahf
cli
pusha
and
xor
mov
sbb
inc
jno
pop
andb
cmp
xorl
repnz
sub
fsubl
imul
xchg
sbb
mov
sub
lea
mov
mov
or
sahf
fldt
popf
mov
dec
in
mov
shll
push
adc
inc
stos
pop
inc
inc
cmp
cmp
mov
and
jge
sub
sti
aaa
dec
jmp
test
xchg
jbe
ja
fwait
outsb
xor
test
cmpsl
xchg
mov
add
add
add
imul
lahf
push
jl
dec
jo
cwtl
in
jns
add
scas
add
add
mov
loop
es
inc
bound
push
ljmp
outsb
and
adc
push
ja
pop
mov
jecxz
adc
sahf
into
into
lds
jno
es
in
ja
adc
add
jge
fistps
fsub
lea
scas
cmp
cld
jle
loopne
enter
ss
fsts
gs
lahf
addl
jns
inc
out
push
mov
sbb
cmpsb
cmp
rcrl
cld
push
sbb
scas
test
cld
imul
pop
jl
xor
xchg
mov
inc
test
dec
dec
in
jnp
jp
sub
add
jle
lahf
sub
fidivs
enter
lea
lds
mov
cmp
sbb
je
push
mov
in
adc
jge
cmpsl
lret
sarl
xchg
jl
int
lret
add
in
add
es
sub
push
das
xorb
mov
dec
and
movsl
call
and
es
mov
add
ss
xor
cmp
lcall
les
jmp
mov
push
xchg
ficoms
fidivs
lret
jno
sbb
xchg
jne
push
ljmp
arpl
jo
xchg
out
pop
sub
adc
loop
jae
jb
jecxz
xor
mov
lea
or
push
inc
pop
std
ret
jnp
push
xchg
mov
and
sbbb
xchg
out
leave
adc
adc
clc
rol
pop
lods
adc
mov
inc
cmpsb
testl
pop
pop
and
ds
in
outsl
sbb
dec
jecxz
push
pusha
xlat
push
xchg
mov
and
cmpsl
xchg
movsb
leave
mov
mov
cltd
sbb
push
mov
cmp
insb
icebp
lods
pushf
push
jmp
pop
xchg
mov
jecxz
push
or
scas
sub
jae
adc
sub
xor
ja
push
gs
sbb
ret
in
movsl
fildll
add
ljmp
xor
ds
lods
cmp
scas
popl
int
mov
insb
mov
or
adc
mov
lods
std
lock
push
sub
xor
lret
icebp
mov
movb
mov
mov
ljmp
jle
mov
rcl
iret
xor
mov
add
scas
repz
shrb
mov
pop
roll
cmpsb
ds
add
mov
jl
cltd
in
dec
jmp
test
push
jp
loop
jne
xchg
leave
loope
inc
sti
test
xor
cmp
das
or
fisubrs
and
mov
xchg
dec
sub
cmp
mov
stos
or
orb
fldl
loope
addb
mov
cltd
std
fsubs
mov
ja
push
mov
out
fwait
cmpsl
sbbl
jle
popa
or
sbb
insb
inc
in
jns
cld
lcall
dec
insb
push
and
stos
adc
xchg
ret
cmpsl
jne
in
mov
in
dec
fists
popa
lds
add
mov
push
hlt
mov
call
into
and
int3
out
xchg
mov
fdivrl
cmp
xor
ret
cmp
push
int
adc
fs
loopne
add
clc
in
shrb
mov
inc
add
out
mov
cmp
or
cmc
dec
sub
add
scas
add
add
mov
jae
sbb
mov
fsubrp
inc
fnstsw
pop
insb
roll
cmp
sub
arpl
push
in
push
sti
jo
jnp
cs
adc
insb
sbb
sub
jns
popa
bound
dec
or
aam
lods
ja
dec
fdivrs
gs
sbb
imul
jle
or
adc
and
sarb
xchg
jp
iret
mov
xor
rorl
insl
outsl
or
hlt
popf
aam
push
fcmovbe
jecxz
scas
push
and
or
leave
leave
cmp
push
cmp
jg
ljmp
xor
clc
loopne
shrb
cmpsl
lock
in
in
mov
mov
test
cwtl
inc
testl
test
sub
and
mov
stc
pop
inc
jno
jo
add
roll
dec
inc
std
mov
mov
sub
lock
xor
xor
ror
add
loop
dec
imul
push
cwtl
fisttps
sahf
lods
inc
cmp
jbe
fcmovne
ss
lods
xchg
dec
xor
addr16
jne
xor
clc
sub
mov
jmp
pop
sub
xlat
jp
sbb
xchg
cmp
negb
mov
test
nop
xchg
mov
dec
gs
jmp
sub
fs
dec
inc
jno
xor
mov
mov
cli
pop
dec
pop
push
gs
mov
cmp
xchg
das
nop
imul
pop
stc
fildll
sub
jae
and
jb
pop
mov
mov
jno
adc
and
or
sub
lock
cs
shll
outsb
into
push
mov
testl
cmp
adc
cli
arpl
mov
loopne
jae
icebp
ss
add
dec
and
shrl
cmp
jecxz
pop
mov
aad
xchg
pop
push
mov
sub
jmp
sub
dec
out
repnz
mov
dec
out
and
xchg
pusha
push
push
pop
mov
or
cmp
adc
push
leave
insl
pushf
cmc
aas
lret
adc
add
stos
enter
repz
inc
cmpsb
scas
mov
push
imul
jmp
sbb
dec
xchg
lret
mov
call
out
lock
mov
mov
out
lea
dec
shll
inc
call
rcl
xor
xor
aas
mov
sbb
loope
xchg
dec
sbb
add
mov
xchg
or
dec
pop
mov
cli
iret
cmp
mov
xchg
fs
cmp
enter
sbb
je
outsl
sub
xchg
cmp
adc
lret
mov
add
mov
sub
cmpsl
lods
shrl
xchg
bound
jl
and
sub
xor
cmp
mull
xlat
enter
cwtl
xchg
sarl
sub
js
push
outsl
dec
adcl
cmpb
cmpsb
cs
movsl
mov
iret
xchg
sbbl
testl
jno
mov
hlt
loopne
popf
divb
dec
cmp
roll
aad
adc
loopne
lcall
mov
pop
mov
adc
insl
xchg
loop
cmpsl
dec
cmpps
cmp
add
mov
xor
adc
lds
add
pop
ds
in
cmp
sub
push
ljmp
es
sbb
or
lods
xchg
mov
int3
sub
inc
fdivr
rcl
pushf
add
loop
loopne
in
push
cmpsl
fcmovu
pop
adc
jmp
imul
push
scas
mov
jl
mov
dec
bound
or
lds
jg
jg
mov
call
call
mov
rol
xchg
nop
in
push
xor
mulb
sti
in
cmc
bound
in
test
jbe
ret
rcll
sbb
test
sub
rdtsc
mov
adc
adc
addl
int
jno
jle
inc
jge
xchg
aad
mov
fisubrs
popa
jne
xchg
out
cs
andl
jge
enter
jle
stos
aad
dec
jecxz
cmp
out
in
dec
jge
xchg
imul
push
inc
cmp
push
stc
sarb
mov
mov
cmp
shrb
adc
jg
fisttpl
aas
inc
add
arpl
pusha
bound
add
leave
jbe
test
in
pop
adc
enter
arpl
mov
mov
out
mov
bound
push
xchg
in
xchg
in
or
fcmovnb
test
testl
sbb
xor
xchg
fcmovu
sti
fnstenv
inc
sub
in
ret
adc
xor
add
mov
or
adc
xchg
and
pop
pushf
and
sbb
pushf
and
adc
cltd
jno
lock
rclb
mov
or
sbbb
cmp
dec
dec
lahf
pop
dec
ja
mov
inc
popa
xor
rolb
es
mov
imul
and
jbe,pn
repnz
lret
aad
xchg
adcl
xchg
repz
dec
stos
shll
inc
fwait
push
or
outsl
xchg
out
mov
jb
push
rorb
mov
xchg
jg
fisubrl
add
loope
dec
push
jno
dec
mov
mov
sbb
iret
cmp
or
cld
pop
lahf
popf
out
push
cmp
stos
mov
and
test
adc
lods
test
and
xchg
loopne
je
lock
sub
loop
out
add
pusha
sbb
mov
push
inc
cmp
nop
and
inc
xchg
in
int3
lock
adc
in
xor
movsb
mov
mov
es
mov
sub
push
jae
fldl
inc
or
enter
mov
push
push
test
bound
mov
das
jp
fstl
push
sbb
call
mov
popa
mov
ror
fimull
dec
add
xchg
sub
lds
lret
push
and
icebp
in
add
ja
or
push
je
sahf
push
fildl
test
mov
xlat
daa
inc
in
cltd
jg
loope
outsl
outsb
imul
mov
xchg
xchg
out
out
stos
hlt
les
pusha
les
divb
in
fildl
dec
xchg
inc
xchg
ud2
fisubs
adc
push
pushf
and
or
hlt
push
xchg
mov
into
in
or
xchg
lea
fcmovu
shll
push
imul
imul
dec
pop
imul
push
xchg
add
scas
add
add
dec
in
into
sbb
inc
mov
push
pop
cmpsl
jns
jge
pop
inc
xchg
jg
sbb
push
and
xchg
xor
in
push
sub
jns
jmp
mov
xchg
and
mov
sub
add
sbb
mov
add
xchg
xchg
dec
adc
push
shrb
add
loop
or
pop
sbb
push
push
mov
stc
add
psadbw
ss
ret
aaa
rcr
rcr
fpatan
gs
in
jmp
test
inc
fmuls
xor
pop
sub
mov
les
pop
clc
jb
lret
push
clc
xor
adc
jmp
xor
sahf
adc
pushf
imul
lods
ficoms
scas
jbe
fs
push
sahf
outsl
push
hlt
or
or
xor
mov
jge
mov
inc
mov
mov
mov
pop
mov
outsl
sub
movsl
stos
outsb
jns
mov
sub
test
or
jl,pt
jecxz
push
idivb
inc
pop
imul
mov
sbbb
imul
testb
movsb
outsb
pop
mov
jne
loopne
stc
inc
adc
push
mov
mov
xlat
or
dec
cmp
mov
ficoms
bound
outsl
ds
lock
nop
xor
cmp
in
or
hlt
adc
test
stc
je
fnsave
mov
sub
sub
lods
incl
cmp
sbb
jmp
stos
sbb
fdivrp
nop
mov
cltd
sub
inc
xor
movsb
in
add
sub
xchg
sbb
aas
inc
loopne
into
dec
fsubrl
sub
mov
mov
mov
and
into
mov
fcoms
push
shlb
or
das
out
mov
rcll
mov
nop
jmp
lods
sub
sbb
inc
cs
dec
out
or
or
aaa
lahf
push
cmp
out
jnp
add
jno
std
xchg
cmp
pusha
sub
fistpll
out
sub
in
jge
enter
rclb
es
or
sar
ret
cwtl
xchg
xor
jp
out
popa
testb
leave
adc
mov
push
cmp
push
push
sub
iret
push
pop
imul
and
imul
lea
lcall
jns
std
aaa
loope
jbe
dec
jge
outsb
dec
sub
iret
push
arpl
jo
rorl
sbb
or
lods
test
pop
rorl
xchg
mov
jae
pop
lods
and
mov
xlat
sub
mov
jb
lret
bound
les
jne
inc
leave
mov
ret
shrl
push
into
lods
and
lret
pop
mov
cmp
testb
sub
pop
sbb
out
inc
shrl
mov
mov
adc
mov
mov
pop
mov
jle
jb
imul
cmpsl
lods
shr
je
jecxz
pop
sar
cmp
aad
stos
pop
es
inc
pusha
sti
xchg
cli
xchg
xchg
mov
jbe
add
repz
pushf
or
fdiv
push
cmp
cmp
cmp
jg
dec
xchg
mov
pop
repnz
scas
pop
stc
jbe
inc
fnstenv
out
mov
adc
jmp
or
scas
jmp
popa
mov
or
ljmp
scas
add
add
jge
jmp
pushw
into
xchg
cmp
sahf
repnz
xchg
ss
stos
popa
xor
mov
mov
inc
cld
mov
inc
pushf
ret
lds
cs
fisubrl
ret
and
mov
mov
pop
jae
scas
jmp
dec
std
iret
aad
fisttpll
test
dec
add
stos
push
and
jb
mov
repz
cs
cmp
ficompl
mov
dec
inc
and
testb
inc
cli
adc
test
sub
int
imul
aad
push
dec
mov
mov
out
jmp
xlat
adc
cmpsl
mov
jecxz
outsb
xor
sbb
or
push
push
cwtl
dec
jmp
popa
data16
push
push
scas
and
add
sbb
repz
mov
mov
adc
mov
dec
out
xchg
cwtl
ja
inc
lea
lcall
jbe
in
xchg
push
push
add
push
and
mov
popa
push
fcoml
neg
add
inc
mov
or
dec
addr16
inc
inc
in
xchg
dec
add
jcxz
into
xchg
out
clc
movsl
inc
movsl
jbe
arpl
xchg
popf
ds
out
fdivr
xchg
sub
scas
lock
outsb
or
xchg
adc
pop
movsl
cmp
das
inc
push
pop
jg
mov
in
mov
mov
push
pop
mov
jno
pop
jmp
sbb
xor
mov
cmp
sub
dec
ret
test
sub
fcmovb
rcrb
sub
mov
sub
xlat
pushw
testb
cmp
insb
mov
and
push
mov
into
mov
mov
inc
xor
int3
sub
jge
cmp
stos
cli
fldl
inc
mov
inc
and
jbe
push
ret
jb
xlat
repz
adc
insl
cmp
leave
mov
into
call
in
dec
jecxz
sub
adc
mov
nop
and
mov
cmp
orb
cli
sub
pop
pop
add
dec
sub
scas
test
ss
loop
mov
cli
and
push
test
mov
shll
out
xchg
add
sbb
and
adc
xchg
leave
add
cmp
xchg
les
das
int3
fistpl
adc
in
mov
inc
das
mov
adc
ret
xorl
sbb
xor
fiaddl
addr16
mov
fnstenv
pop
xlat
fs
fidivrl
adc
sbb
adc
in
or
mov
jb
sbb
scas
not
insb
inc
dec
add
mov
pop
mov
stos
mov
sahf
push
mov
in
es
xchg
push
push
mov
jae
jl
adc
lret
mov
sti
or
xchg
mov
adc
iret
cwtl
xchg
jb
xchg
out
push
xchg
sbb
inc
jge
addb
arpl
jnp,pt
jb
loop
jnp
scas
pop
scas
or
scas
mov
loop
cwtl
adc
mov
or
xchg
insl
cmc
add
fmull
add
push
popf
shl
sahf
popa
adcl
int
fs
cmc
add
jg
mov
mov
test
std
add
sarl
mov
movl
aas
rorb
call
inc
push
push
sub
add
test
push
cld
mov
in
add
scas
add
add
inc
push
out
fisttpll
mov
inc
aas
out
call
addr16
loopne
rolb
sub
jecxz
mov
lds
lahf
ja
out
dec
jbe
andb
pusha
pusha
sbb
stos
fwait
negb
popf
adc
xor
push
mov
insb
jg
sub
pop
repnz
mov
movsb
in
or
in
sarl
xchg
mov
loopne
iret
fisubl
adc
cwtl
inc
pop
dec
ss
xchg
ss
data16
in
jecxz
jns
ljmp
fsubrs
push
sub
dec
push
mov
push
sbb
pop
inc
adc
add
lret
fwait
out
out
or
test
jno
push
xor
test
lcall
cwtl
ja
jne
test
fnstcw
jg
or
sbb
das
xor
rcl
fstpt
mov
mov
adc
subl
pop
push
add
mov
jmp
push
xchg
int
jne
add
or
frstor
fs
lock
icebp
jge
inc
or
mov
imul
jecxz
fists
lds
ret
sahf
ja
cli
pop
xchg
xor
aas
mov
repz
fistps
jmp
lods
ficoml
xchg
ror
test
bound
push
or
aas
test
ficompl
sbb
test
pop
xor
mov
std
pop
cmp
cwtl
dec
insb
scas
iret
shrl
adc
xchg
pop
jbe
sub
pop
pop
pusha
add
xchg
mov
popf
xor
pop
push
mov
cltd
filds
aaa
test
or
outsl
leave
push
fwait
or
ret
pusha
in
push
add
adc
xor
sbb
arpl
aaa
jmp
out
decb
sub
fsubs
loopne
hlt
arpl
pop
fistps
fistps
inc
mov
and
jmp
cmc
nop
mov
cmp
inc
jne
out
int3
ret
das
or
pop
add
ljmp
and
stos
cmp
dec
xor
lods
inc
jns
xor
mov
rcrl
pop
shrl
cli
cmp
jecxz
pop
mov
in
jnp
mov
add
leave
js
std
cmpb
jnp
pop
cmp
out
in
xchg
xchg
jge
pop
pushf
fisubs
pop
adc
int
dec
push
dec
ror
mov
mov
jb
loopne
pop
dec
fs
mov
lock
adc
xchg
xchg
loopne
xchg
fs
cld
rcrb
outsb
ret
sti
iret
jo
sub
push
gs
or
or
aad
xchg
mov
loope
divl
pop
mov
add
repnz
andb
movsb
lods
je
mov
ret
mov
jmp
fstps
mov
mov
mov
adc
scas
jp
out
xchg
je
mov
les
mov
imul
xlat
mov
mov
mulb
pop
sbb
fldl
stc
stos
and
sahf
pop
fcomip
imul
dec
sub
pop
pop
aad
jno
add
push
xchg
rorl
jge
xor
mov
jmp
lahf
outsb
push
and
rorb
xchg
shl
mov
inc
jne
out
bound
sbb
pop
push
leave
popf
lret
popf
pop
xlat
loope
lock
mov
xchg
aam
add
adc
sub
test
xchg
ret
pop
icebp
test
pop
sbb
into
push
repz
cwtl
sub
jle
cmp
test
pop
loop
mov
scas
out
lret
setp
shll
or
data16
addb
mov
inc
shrl
cmp
xor
lcall
mov
and
test
in
jge
sub
imul
imul
loop
dec
xor
mov
xchg
enter
jae
out
sbb
jp
push
imul
inc
mov
nop
xor
fstpt
xchg
test
out
movsb
xchg
fisubrl
jecxz
mov
sub
add
fnstenv
shrl
mov
shrb
jne
stos
aaa
scas
mov
imul
dec
push
and
icebp
xchg
and
rorl
mov
adc
lret
lock
xchg
ret
add
cs
lcall
mov
in
test
mov
mov
push
sbb
sub
add
outsl
mov
cltd
sub
outsl
mov
jmp
cwtl
fnsave
enter
cmp
cmp
cwtl
cmp
or
loope
nop
test
dec
xchg
cmp
cmp
add
fmull
jbe
jmp
shl
sarb
mov
leave
data16
outsb
or
push
outsl
sub
js
jae
cwtl
sbb
clc
fsts
aad
scas
adc
lods
sub
lahf
or
test
cmp
outsb
mov
sbb
les
cmp
add
or
adc
sahf
jno
int3
mov
inc
enter
mov
adc
and
xchg
xchg
sahf
in
pop
aas
adc
sub
inc
mov
lods
mov
stc
and
test
ja
jle
rorl
or
pop
lahf
adc
jl
adc
push
fimuls
orl
pop
mov
not
imul
scas
ret
inc
sahf
push
test
icebp
or
stos
std
adc
ret
mov
push
push
jae
ss
xchg
jp
mov
in
ret
jl
psubb
incb
sub
adc
lds
or
jecxz
dec
icebp
ds
fsubr
jmp
scas
jl
mov
outsb
cmp
out
fisttps
lcall
mov
pop
bnd
push
test
or
jle
sub
cli
xchg
movsb
jmp
in
stos
mov
push
sub
sub
sbb
data16
mov
xlat
jp
push
mov
add
pop
fmull
fmuls
dec
mov
or
lret
and
xchg
hlt
jge
adc
aaa
and
popf
pop
pop
insl
cmp
jge
pusha
rclb
lds
xchg
addr16
cmp
mov
or
test
mov
mov
inc
test
sub
out
mov
xor
inc
pop
and
jg
mov
mov
push
inc
sub
je
repnz
cmp
data16
roll
dec
idivb
popa
sub
pop
cmp
test
dec
pop
fisubrl
cmp
add
ret
xchg
movsl
leave
lahf
sbb
add
add
add
call
pop
out
dec
pop
popa
sub
inc
ss
inc
fadds
add
push
les
push
ss
jle
mov
lret
fldenv
loopne
test
es
mov
std
cmpb
pop
push
lods
xor
dec
xchg
orl
cs
movl
xor
iret
jmp
xchg
push
push
inc
bound
out
outsb
dec
out
mov
jmp
popf
rcr
inc
mov
imul
mov
mov
jmp
mov
mov
add
loop
and
xchg
pop
cwtl
pop
fisubs
fimuls
xor
enter
mov
jb
mov
loop
rcrl
cltd
ror
push
cmc
adc
xor
scas
aad
insb
dec
mov
inc
add
test
adc
rclb
adc
push
int
test
cmp
les
mov
pop
rcl
popf
xor
lret
cmpsl
inc
rcrl
mov
test
xor
inc
sub
sarb
out
cld
add
adc
stc
ljmp
mov
mov
mov
inc
pop
jp
jnp
ss
xchg
mov
xchg
inc
shrl
mov
test
lahf
add
cmp
arpl
adc
and
push
add
lea
add
adc
cmp
popa
aas
mov
mov
and
jecxz
or
shlb
repz
and
cmp
xor
mov
ret
pop
popa
mov
inc
xchg
push
adc
mov
lods
hlt
cmc
roll
jl
ret
mov
cwtl
push
mov
leave
xlat
xchg
xor
js
pop
daa
fs
push
cmpsl
popf
inc
mov
adc
test
sbb
push
mov
cs
push
add
data16
adc
out
or
ret
loopne
mov
and
add
pop
clc
call
sub
test
push
mov
push
sub
in
pop
fsub
sbb
imulb
mov
in
xchg
sub
and
arpl
pushf
adc
xor
mov
inc
fldt
rcr
ret
out
xor
adc
jno
mov
in
popa
out
imul
sub
popf
pop
arpl
int3
out
das
les
aam
in
div
jecxz
idivl
mov
lock
outsl
lods
adc
out
inc
leave
adc
in
or
lods
das
cs
pop
fisubrl
loope
stos
stos
dec
pusha
dec
push
das
scas
xchg
mov
jl
imul
je
mov
push
or
hlt
es
sarl
pusha
fildll
jo
adc
rcrl
les
pop
sub
xor
jmp
ret
sub
je
mov
repz
mov
pushf
push
mov
stos
sbb
adc
adc
push
into
add
arpl
mov
ss
out
cmp
pusha
gs
movsl
mov
or
cmpsl
mov
shll
sarl
inc
cs
outsl
add
jmp
lret
ret
icebp
mov
js
cmpsb
int
out
lods
mov
mov
aaa
outsb
mov
pop
push
repz
out
stos
in
jb
insl
hlt
jns
pop
lods
aas
or
push
add
add
add
jnp
data16
decl
std
or
insl
icebp
fildl
add
inc
jns
push
mov
mov
je
lcall
xchg
and
inc
jno
pop
xor
mov
rcl
fistpll
lcall
mov
or
repz
movsb
nop
cli
loopne
dec
mov
fcmove
cmp
fisubrs
bound
sti
dec
mov
jbe
fdivr
add
fucomip
mov
push
and
push
cld
pshufw
dec
or
outsl
or
cmp
test
out
jecxz
mov
xor
lret
jb
xchg
pop
mov
sahf
rcr
arpl
cmc
pop
add
xor
out
fisttpl
lahf
cmp
cmp
addl
out
dec
fsubl
sbb
stos
cmp
loop
inc
mov
lahf
cmpsl
inc
jge
imul
adc
sub
clc
push
loope
lods
sbb
ffree
out
xor
mov
mov
dec
push
clc
dec
cmp
inc
sbb
lret
sti
lea
hlt
jb
and
dec
mov
mov
popa
pop
push
push
mov
adc
aas
or
movsb
test
lret
imul
das
in
sbb
imul
div
leave
ret
pop
inc
push
dec
sbb
add
and
cmpsl
pop
mov
dec
pusha
rol
lretw
stos
out
mov
push
push
mov
pop
cltd
or
hlt
popa
insl
push
cltd
mov
popa
cmp
lret
lcall
pop
std
add
jb
adc
jge
dec
test
dec
iret
out
out
popf
push
xor
cmp
test
inc
mov
mov
fcomps
inc
pusha
popa
les
test
inc
push
ficompl
cmp
enter
or
dec
jne
pushf
nop
pop
cmp
adc
inc
imul
mov
adc
clc
adc
sahf
iret
loop
scas
rolb
add
push
jl
cmc
mov
pop
loopne
data16
cmp
test
xorl
aas
insb
out
cmp
loopne
clc
push
arpl
xor
sti
inc
or
xchg
test
sub
jmp
sub
into
fstpt
shrb
outsl
repnz
test
jmp
call
adc
mov
push
push
sbb
cmp
loopne
jo
xor
inc
jmp
dec
or
lock
sub
insb
adc
mov
mov
xchg
push
insb
bound
inc
cmp
sbb
pop
dec
adc
popf
in
xor
scas
loope
sbb
hlt
mov
mov
repz
or
loopne
or
shll
mov
mov
inc
xchg
nop
xchg
les
je
mov
cmc
fldcw
in
sub
hlt
pop
addr16
push
frstor
jge
testb
xor
icebp
pop
scas
mov
cmp
clc
and
push
je
inc
sub
in
dec
jb
test
dec
es
in
je
jno
lea
mov
js
ret
and
mov
outsb
inc
pop
cmpsb
pop
push
and
cs
loope
ljmp
loop
cmp
sub
outsb
xchg
jmp
fisttpll
test
imul
jbe
add
fnstcw
sub
jl
loope
lret
dec
int
pop
or
loope
scas
fs
inc
loop
xchg
fidivrs
fs
pop
out
cmp
push
mov
inc
sub
xchg
fsubs
dec
pop
jbe
pop
imul
add
add
ror
rorb
rcr
fistpll
push
mov
xchg
cmp
add
add
dec
mov
jl
jo
pop
dec
jb
cmp
push
dec
leave
mov
stos
xlat
adc
jne
test
imul
gs
mov
pop
ds
or
or
push
mov
fucomp
mov
or
sarb
dec
negb
push
ret
xchg
cltd
adc
unpckhps
xlat
notb
cmp
int
pop
dec
aaa
push
bound
gs
jnp
cwtl
test
dec
in
es
rorl
mov
cmp
adc
pop
popa
test
jl
out
es
bound
sbb
jge
pop
jl
or
pop
lret
mov
jne
jl
inc
or
mov
cs
xchg
xchg
xchg
out
dec
mov
push
jge
lds
das
jmp
xchg
or
push
jl
sti
add
cmpsl
mov
cmp
pop
xchg
data16
mov
adc
fs
cmp
pushf
pand
adc
ljmp
movsl
popf
aaa
js
jmp
pushf
push
pop
sahf
and
pop
sub
fs
adc
push
loope
repz
loopne
add
loop
mov
lods
push
mov
add
jge
jno
leave
mov
push
cmp
das
mov
and
sti
xor
je
loopne
sbb
jo
add
xchg
aad
push
scas
iret
add
xchg
xor
lcall
pop
jno
in
gs
xlat
fdivr
or
roll
adc
jge,pn
mov
inc
adcb
lretw
mov
xchg
pop
fwait
push
cli
iret
aaa
or
or
in
lods
mov
push
xchg
and
sti
fs
test
xchg
ljmp
adc
les
dec
out
mov
popa
jnp
push
inc
mov
sbb
cmpsb
aam
push
outsb
aam
bound
jb
sbb
gs
mov
sbb
lea
sbb
repz
adc
mov
fs
jae
in
jne
xchg
push
inc
sub
pop
je,pn
shll
clc
addb
push
subl
mov
push
adc
sub
add
mov
mov
xchg
jnp
pop
icebp
mov
push
push
imul
mov
mov
lret
jne
xorb
or
mov
xor
pop
pop
or
dec
push
lds
jbe
retw
stos
mov
sbb
cmpsb
setle
and
dec
mov
sbb
imull
jge
pusha
loope
dec
das
push
lock
int
jl
out
mov
ds
xchg
mov
cmp
inc
pop
or
mov
pop
lret
mov
cmp
jbe
enter
mov
aaa
adc
add
jle
xchg
pop
notl
xchg
ret
mov
sbb
imul
rcrl
cld
in
in
pushw
mov
hlt
out
fdivp
sub
push
or
es
divl
fdivr
mov
hlt
ljmp
inc
rcrb
push
xchg
sarl
aad
or
cmp
fiaddl
jae
inc
int3
xchg
push
lds
jb
andl
lret
sbb
fadds
vmwrite
push
jge
mov
jno
out
and
push
imul
mov
fidivl
add
add
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
in
and
jecxz
add
xor
mov
in
lods
dec
out
fcompl
jb
adc
mov
aam
nop
jae
mov
shll
push
xlat
adc
xor
and
cmp
shll
add
push
xor
pop
xchg
scas
push
xchg
xor
cli
fdivs
bound
pop
cmp
scas
push
pop
push
adc
dec
cltd
push
pop
subl
insb
sub
fcomip
fldl
das
sahf
inc
xor
mov
or
dec
ljmp
dec
fnstcw
push
nopl
add
or
cli
jae
xor
sbb
xchg
cwtl
mov
je
fcoms
scas
fwait
lahf
arpl
or
insb
stc
push
or
arpl
or
mov
inc
xor
push
daa
aaa
jle
dec
lret
pop
add
cwtl
ret
negl
es
arpl
sbb
pop
inc
pop
dec
xchg
and
xchg
mov
out
pop
test
push
xchg
mov
test
in
icebp
pop
cwtl
add
lods
cmpsb
mov
xchg
xor
xor
mov
scas
xlat
cli
repz
jmp
ret
data16
aad
lea
addr16
in
les
stos
xor
mov
push
adc
mov
mov
pop
mov
rcrb
sti
lret
scas
call
inc
inc
mov
inc
push
adc
lahf
dec
jl
push
pop
push
pop
and
lods
pushf
and
push
mov
js
jns
lds
out
notb
mov
mull
pop
cmp
jmp
mov
scas
mov
gs
adc
rcrl
call
dec
xchg
adc
adc
adc
cmp
cmp
pop
mov
mov
or
jno
jb
sbb
aam
push
adc
sahf
mov
pop
mov
int3
loope
fs
xchg
rcr
inc
inc
mov
jg
adc
xchg
or
je
xchg
pop
or
test
inc
cmpsl
ret
fcos
xor
cltd
or
sub
cli
insb
xchg
and
lret
in
mov
push
lods
cmp
addr16
scas
movsb
mov
cltd
imul
inc
aam
scas
jl
insl
inc
dec
mov
cmp
lret
pushf
mov
xchg
incb
ds
nop
mov
inc
cltd
shl
push
push
pop
repz
ss
ss
lret
mov
es
mov
sub
std
and
push
mov
subb
inc
leave
dec
dec
loop
fadds
mov
gs
or
bound
adc
cmp
movl
push
mov
xchg
aaa
notb
jbe
cmp
lock
inc
xchg
popa
push
and
invd
xchg
movsl
out
xlat
mov
and
shlb
push
mov
pop
stc
jno
inc
cmpb
out
sub
nop
jmp
shlb
or
sbb
dec
push
xor
pop
mov
push
and
jnp
sub
and
lea
mov
cmp
cmpsl
mov
cmp
popf
xchg
adc
dec
xchg
jmp
adc
adc
jae
aad
jb
loop
test
push
and
arpl
mov
jg
sub
adc
out
mov
inc
rolb
inc
inc
pusha
arpl
mov
cmpsl
xchg
sub
fs
add
inc
gs
jg
mov
shlb
cwtl
out
add
lock
xor
mov
sub
sbb
out
jmp
jnp
mov
adc
xor
mov
mov
shrl
mov
orb
lods
lcall
xchg
xor
mov
and
mov
loopne
xchg
cmpsl
nop
mov
mov
lret
aaa
ds
roll
or
cmpsl
shrl
cmpsl
movsb
std
scas
push
xchg
imul
popa
jecxz
hlt
push
mov
repz
data16
dec
sti
push
xchg
jecxz
adc
iret
out
ds
jbe
std
lret
xchg
mov
sub
fidivrs
in
fsubr
insl
daa
lea
inc
pop
xchg
adc
mov
fwait
stc
shrl
xor
test
push
sub
cwtl
aad
in
xchg
add
jae
sbb
pop
jle
sbbl
sbb
sub
xor
mov
mov
mov
das
inc
inc
js
dec
push
mov
add
pop
les
iret
stos
push
sbb
out
stos
cld
inc
or
subb
cmpsl
and
bound
push
loope
inc
shll
xor
sbb
pop
mov
adcb
sbb
jl
stos
testl
sbb
jge
jmp
data16
call
cltd
js
cwtl
mov
sbbl
or
stos
ds
push
inc
icebp
leave
fidivl
mov
mov
scas
xchg
xor
lods
jp,pt
dec
push
into
loopne
movsl
jg
mov
lods
or
cmpb
sub
adcb
rolb
bound
nop
shrb
out
aad
jbe
sub
lds
add
mov
leave
ljmp
mov
add
mov
add
xchg
push
inc
bound
pop
or
add
outsb
rcrb
mov
call
insb
push
sbb
addl
repnz
inc
mov
mov
mov
inc
sub
jecxz
shll
iret
loop
adc
jecxz
adc
cmp
mov
movsl
insl
stos
ret
inc
sbbl
in
fcomps
out
cmc
mov
and
sbb
enter
aaa
sbb
pop
cmc
jge
and
test
orl
sub
jae
jmp
insl
jbe
fs
or
mov
xor
sarl
add
mov
mov
imul
sahf
xchg
inc
dec
mov
sbb
jb
lds
or
mov
mov
mov
xchg
push
shlb
lea
push
inc
cli
incl
std
shr
xor
sub
xchg
repnz
sub
popa
mov
out
imul
cmp
int
pop
or
xchg
adc
add
call
sbb
hlt
xchg
xor
jns
lahf
and
test
xor
and
mov
sub
jg
sub
mov
sbb
push
pop
notl
lods
sbb
mov
iret
orl
rcr
inc
jmp
cmp
push
mov
ja
fcompl
aaa
nop
cmp
inc
xchg
mov
add
inc
xchg
dec
xchg
mov
cmpsb
cmc
lods
ljmp
sbb
leave
sbb
shrb
xor
outsl
jmp
sahf
adc
mov
fmull
mov
mov
lock
imul
cmp
pop
cmc
mov
sar
ss
sarl
stos
mov
rclb
dec
jb
pop
insl
jl
mov
push
test
xlat
cmp
inc
mov
mov
daa
scas
xchg
outsl
push
mov
jae
movsl
lret
push
pop
ss
jae
mov
cld
ljmp
lret
inc
sti
popa
lods
and
lock
pusha
or
mov
add
sbb
sub
pushf
dec
dec
lahf
xchg
mov
insl
mov
std
jb
mov
xchg
mov
push
add
aaa
and
or
aas
incl
daa
jns
lods
popa
mov
inc
negb
les
inc
xlat
lcall
sahf
xor
jmp
cld
cmp
out
int3
incl
dec
adc
add
ss
sub
std
rcrb
push
ja
imul
push
or
arpl
lcall
xchg
mov
movsb
mov
cmpsl
loop
inc
jne
loop
gs
inc
pop
popa
mov
and
push
out
push
dec
sti
shll
sbb
shlb
psubusb
xor
sbb
mov
popa
dec
jl
out
aaa
mov
out
mov
es
gs
sub
dec
shll
dec
mov
repz
cmp
xchg
pop
xor
out
jmp
push
dec
mov
inc
movsb
scas
pop
and
scas
adc
jo
int3
cld
daa
jbe
pop
mov
fdivrl
sub
js
imul
mov
push
lahf
daa
fidivrl
mov
insb
test
mov
pop
xchg
push
dec
push
sbb
out
or
sbb
fmuls
lea
push
push
outsb
sbb
mov
sahf
mov
sbb
fs
jecxz
add
push
mov
mov
iret
orb
mov
movsl
test
movsl
lahf
out
inc
sbb
mulb
ret
fldl
das
stos
and
sti
and
pop
shll
pop
adc
inc
cmp
loop
or
fimuls
mov
out
aas
ror
neg
idivb
test
clc
add
repz
rorl
adc
enter
iret
push
in
jo
or
lods
jle
rclb
aam
sub
int3
movsl
inc
push
or
outsb
mov
mov
cmpsb
dec
lods
and
dec
mov
xlat
xor
mov
cmp
std
shrl
rol
xchg
sbb
lfs
pop
pushf
mov
mov
push
push
ja
adc
les
or
dec
mov
bound
pop
das
xchg
repnz
nop
add
xorl
imul
cmp
scas
add
sbb
or
lock
jmp
loopne
data16
in
enter
cmp
mov
negl
xchg
push
in
push
scas
and
ret
iret
xorl
fs
ljmp
cmp
jae
sbb
ret
movsl
lea
push
stos
lea
bound
gs
mov
inc
add
and
jg
push
adc
das
sub
out
add
scas
add
add
xor
dec
jnp
xchg
inc
pop
mov
push
test
cmp
fxtract
xchg
dec
dec
inc
fistl
jae
sahf
lock
addr16
arpl
into
aaa
test
sub
iret
gs
sbb
fcomi
hlt
jbe
into
repz
mov
je
jne
shll
mov
sub
sti
add
xor
aad
mov
pop
icebp
in
call
mov
push
xchg
imul
imul
jae
push
sti
mov
pop
xchg
dec
ss
xorl
xor
aad
ret
loope
jne
or
aaa
xchg
pop
cmpsb
pushf
fnstsw
or
lea
mov
test
out
cmp
in
into
xchg
movsb
xor
icebp
inc
xchg
in
data16
xor
aaa
dec
mov
aas
mov
js
add
shlb
insl
jae
cmp
push
int
arpl
movsl
loop
mov
xchg
mov
sbb
jmp
xor
xchg
mov
pop
rol
adc
adc
xchg
inc
cli
push
in
or
loope
lods
adc
jbe
mov
addb
into
lods
mov
loop
test
and
mov
pop
pop
and
stos
decl
mov
out
ficompl
push
insb
dec
fildll
ljmp
lea
xchg
add
pop
fs
mov
jnp
cwtl
mov
test
push
hlt
push
push
ljmp
mov
adc
add
ja
inc
repz
clc
fbstp
mov
push
adc
rolb
or
in
sub
or
mov
lretw
push
adc
and
sahf
stos
int
sub
mov
adc
and
jp
pushf
pop
and
inc
in
jmp
push
lods
and
add
push
xchg
add
dec
dec
mov
popa
loopne
add
push
out
das
adc
push
mov
xor
hlt
enter
daa
sbb
mov
ds
add
bound
jnp
insl
sbb
adc
inc
and
sarl
and
dec
imul
lcall
aad
enter
adc
pop
jmp
lea
push
adc
cmp
jae
sub
and
loopne
dec
mov
pushf
test
mov
lahf
or
xchg
mov
sbb
inc
lret
or
pop
mov
loopne
xor
int3
jbe
sti
pop
jge
xor
xchg
scas
test
mov
imul
out
insb
cltd
fistpll
in
orb
into
loopne
mov
lea
lds
rclb
xlat
lret
xchg
push
mov
hlt
push
xlat
dec
add
or
insb
dec
outsl
cmp
xchg
mov
mov
mov
daa
fdivs
dec
pop
aas
divl
fisttpl
inc
xchg
lea
inc
mov
push
rcrb
inc
lock
dec
and
mov
push
ljmp
rcrl
jmp
lcall
cmp
dec
mov
xor
cmp
lods
pop
pop
mov
cs
cmc
sti
push
push
mov
lcall
push
es
push
ret
inc
or
lods
sarb
jb
fsin
xor
sub
dec
repnz
jnp
add
pusha
lahf
adc
ret
and
out
iret
add
loopne
cmp
mov
aaa
mov
repnz
scas
add
add
mov
shrb
mov
ret
subb
aas
scas
pop
popa
sbb
movsb
test
movsl
stos
lret
mov
or
cmp
sub
jl
icebp
jmp
and
out
push
mov
mov
popf
cmpsl
into
mov
fwait
andb
pop
dec
data16
pop
ret
mov
mov
mov
add
or
and
in
jae
in
or
xchg
bound
pushf
popa
and
ss
mov
dec
mov
jecxz
pop
fisubrl
and
addb
lcall
dec
sbb
xor
je
cmp
stc
je
andl
iret
lds
cmp
shrl
sub
ljmp
pop
into
dec
insb
gs
jecxz
in
or
out
xor
mov
fs
jmp
xor
lret
mov
mov
sbb
pop
movsb
mov
mov
dec
jmp
jle
jmp
cwtl
pop
sarl
cmp
js
das
sbb
mov
sub
jne
mov
andb
test
mov
sub
test
cli
call
add
pop
mov
or
jnp
mov
fidivrl
les
enter
cmp
and
push
push
out
jg
mov
jmp
stos
lret
xchg
mov
es
fnstcw
lods
mov
cmpsb
test
inc
cmp
aas
sub
sbb
xchg
inc
stc
ret
adcb
mov
shll
xchg
in
sbb
push
and
rclb
dec
push
push
in
arpl
outsl
mov
mov
pusha
jg
add
scas
popa
int
pushf
nop
xor
shll
lcall
or
cmp
xor
clc
mov
cmpsl
sub
mov
add
mov
lret
push
jo
or
add
sbb
push
jnp
jle
inc
sti
pop
aad
fisttps
pop
cmp
pop
push
lods
repnz
jmp
jnp
mov
or
stos
inc
push
push
in
jge
xor
shr
sbb
ds
dec
pushf
test
call
popf
add
out
mov
lds
out
stos
fidivrs
imul
out
push
leave
leave
jmp
jecxz
xor
lds
jmp
mov
or
addl
jp
adc
inc
std
lcall
pop
xlat
cmpb
and
imul
out
sbb
push
sub
loope
pop
insl
jge
mov
dec
mov
pusha
adc
xor
mov
rolb
and
loopne
std
cmc
ljmp
cmpsl
jg
inc
cmpsl
mov
fsts
push
imulb
test
cmp
and
lods
pop
jae
push
out
mov
mov
jp
fcomps
jl
sbb
cmp
je
mov
xchg
add
mov
dec
imul
aam
xchg
adc
mov
jns
pop
imul
xor
les
sub
addr16
mov
inc
push
inc
iret
adc
and
xorl
in
push
mov
or
pop
pop
or
movsb
insb
in
push
aad
and
cmpsl
jle
xchg
adc
test
push
addl
add
mov
xor
xchg
and
add
add
repnz
mov
xorl
test
fistl
mov
xor
inc
roll
pop
ds
addb
lods
and
pusha
loop
repnz
sub
or
mov
dec
ljmp
leave
fildl
insl
jne
dec
jle
mov
pop
cld
dec
je
xor
jg
cld
push
xchg
mov
ret
xchg
gs
pop
outsb
rcl
ja
arpl
int3
mov
in
movsb
movsl
pop
in
jge
mov
xor
mov
sub
sbb
push
in
ret
mov
inc
push
out
lds
sahf
adc
nop
xor
add
mov
push
inc
dec
inc
mov
sub
add
xchg
out
gs
pop
sbb
addr16
and
das
mov
pushf
jae
fadds
jl
lret
pop
pop
cmp
cmp
adc
xlat
mov
sbb
lods
lock
fmull
stc
sarb
outsl
push
lcall
inc
mov
adc
pop
enter
lret
pop
loop
dec
iret
pop
out
jo
xchg
movsl
xor
hlt
mov
popa
xchg
inc
sbb
jecxz
xchg
pop
sbb
cmpsb
mov
sbb
xchg
xor
test
pushf
rcrb
mov
or
pop
cmp
jle
test
mov
sub
repnz
roll
mov
xchg
inc
mov
cld
xor
into
mov
mov
ret
sahf
push
push
repnz
das
sub
mov
xor
divl
inc
in
dec
xchg
jns
jmp
cmp
out
repz
mov
lcall
lret
inc
repz
jb
xchg
popf
jge
frstor
xchg
je
loopne
mov
add
js
ftst
dec
jecxz
cld
xor
rorb
push
insb
mov
inc
xchg
sbbb
sub
int3
mov
cli
lret
je
push
jnp
mov
ljmp
repz
jecxz
sbb
add
mov
pop
jnp
sub
push
cmp
jg
aas
dec
xchg
and
jb
lods
mov
sbb
adc
xchg
rcll
arpl
and
lret
lds
pop
mov
lds
fidivl
cwtl
sbb
imul
test
cmc
fadds
add
out
je
aad
mov
scas
movsb
imul
sbbb
push
sahf
adc
popa
stc
cmp
dec
gs
out
mov
or
inc
stos
push
insb
inc
pop
add
sbb
push
incl
pop
inc
hlt
and
ds
mov
imul
pop
xchg
ss
mov
cwtl
and
jg
mov
jecxz
ljmp
dec
test
call
xor
mov
dec
push
movsb
sbb
push
mov
jl
adc
stos
jae
enter
out
fimull
and
jae
xchg
mov
divl
stos
mov
lock
rclb
dec
mov
ret
or
ss
jne
call
adc
imulb
sbb
sub
add
popa
lret
arpl
js
adc
add
add
add
add
ret
cltd
out
lahf
idivb
js
jg
in
call
push
add
add
xchg
and
mov
