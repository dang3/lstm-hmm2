mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
mov
xchg
nopl
jmp
mov
xlat
hlt
sub
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cmp
inc
jp
adc
push
ret
xchg
hlt
fbld
jnp
stos
cmovbe
sbbb
sub
js
js
mov
dec
and
bound
mov
mov
sahf
jg
sahf
mov
imul
xchg
xor
jmp
mov
add
mov
sub
mov
xchg
push
sbb
ja
cmpsl
mov
or
popa
gs
sbb
fs
lret
jle
adc
inc
jge
xchg
jg
int
iret
cld
adc
jge
or
scas
mov
push
mov
cmp
fs
adc
cmp
xor
cmp
dec
jne
sarb
and
sbb
mov
ss
cmc
push
stos
loop
adc
hlt
sbb
mov
outsl
adc
add
dec
and
cmpsl
or
jmp
xor
adc
xor
ret
or
xor
xor
out
add
lcall
push
ret
lods
dec
and
and
lock
in
jp
sbb
push
pop
cmp
inc
jb
scas
dec
jge
fadd
outsb
iret
add
pop
js
lock
sub
adc
leave
push
push
sbb
negb
cmp
mov
fwait
out
jge
cmp
addb
mov
push
cmp
xor
sub
imul
outsb
xchg
clc
inc
adc
mov
stos
in
into
adc
and
fs
cmp
test
jp
dec
ret
fcomp
test
mov
imul
outsl
jns
sbbl
and
stos
movsl
add
jmp
andb
repnz
push
out
out
sub
xor
pop
outsb
test
cmpsb
jo
xchg
jmp
cmp
fildll
std
popf
cmpl
cwtl
inc
pushw
push
aaa
add
in
sahf
jl
ds
adc
add
test
lock
loop
cmp
and
fwait
xlat
les
xor
loop
jl
inc
mov
or
in
std
in
std
inc
adcl
add
jmp
jbe
subb
pusha
mov
cld
add
pop
mov
fs
mov
mov
imul
pop
lret
mov
dec
dec
stos
roll
add
mov
cmp
xor
adc
call
cmp
pusha
test
jg
jnp
shl
pop
pop
repz
lea
mov
mov
leave
inc
movsl
call
je
sti
sbb
mov
xor
inc
sbb
ljmp
jle
out
sbb
or
mov
or
testl
push
cmp
push
ret
sbb
xchg
outsl
pop
jl
xor
sub
inc
shl
pop
insb
ljmp
cmp
sub
xchg
sub
insb
mov
lcall
and
out
cmp
jb
push
xor
dec
fnstsw
xorl
aad
jnp
mov
and
ret
in
imul
in
testb
aaa
out
mov
mov
adc
mov
insl
pop
mov
movsl
in
in
add
mov
add
call
into
lret
xchg
not
add
push
xchg
nop
lock
add
mov
outsb
ss
rorl
add
stos
add
pop
rorl
shlb
pop
jle
inc
arpl
popa
push
push
jg,pt
movb
hlt
xchg
dec
and
in
jo,pt
xor
lcall
or
xor
std
cli
leave
jl
ret
push
push
out
pushf
mov
dec
sub
loop
ljmp
pop
movsb
mov
cmp
and
repnz
dec
xorl
cmc
cmp
ja
fbstp
cld
repz
loop
leave
xchg
hlt
dec
dec
xchg
mov
sbb
push
adc
test
jmp
and
inc
dec
stos
insb
daa
push
inc
mov
xchg
movl
pop
mov
dec
sbb
pop
jmp
loope
int3
cmp
push
aad
mov
jns
or
mov
lods
stc
andb
cmpb
push
pop
lahf
push
into
rclb
lods
mov
loope
in
mov
adc
push
lret
inc
cmp
lret
lret
inc
mov
add
push
mov
sbb
outsl
jo
movsl
push
push
dec
pop
pop
xchg
int
ljmp
fistps
fdivr
mov
std
hlt
sub
aaa
ljmp
mov
lret
cmc
jns
jo
mov
out
mov
aad
ficoms
cs
push
jl
add
pop
cmp
repnz
scas
js
mov
xchg
push
lds
jo
bound
push
cmpsl
arpl
into
das
lods
push
mov
dec
xor
insl
and
xor
push
lcall
iret
add
cmpl
or
loope
xchg
dec
dec
jne
mov
in
mov
into
jecxz
pop
out
fisttpl
add
inc
rorb
jnp
lret
sbb
int
popf
pusha
pushf
pop
xor
cmp
in
xchg
dec
std
fsts
testl
cmpsb
rolb
leave
inc
mov
pop
dec
inc
mov
hlt
xor
sbb
xlat
mov
cmpsl
insl
popf
cmp
sbb
rolb
repz
imul
insl
idiv
lods
add
mov
pop
mov
mov
test
daa
jecxz
popa
jo
mov
sti
pop
jns
pop
add
out
std
insb
pop
jmp
shll
das
negb
cmp
dec
jp
xchg
test
orl
lods
fs
push
push
and
mov
repnz
imul
dec
mov
push
inc
jmp
enter
xchg
pop
push
out
push
mov
lea
call
and
cwtl
js
pop
lahf
movsb
je
mov
mov
and
inc
outsl
cmp
lea
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
movhps
jmp
iret
addr16
adc
push
jne
scas
sbb
cmp
add
add
inc
fsubp
bound
sub
mov
dec
ds
inc
and
lods
notb
pop
adc
cmp
mov
inc
cmpl
sarl
sbb
pop
pop
xor
gs
gs
push
mov
push
stos
inc
lahf
sarb
adc
imul
inc
je
add
pavgb
out
pop
fwait
fnstenv
inc
inc
pusha
dec
bound
mov
cmp
mov
adcb
add
mov
push
call
adc
add
jbe
xor
dec
jl
sbb
scas
push
mov
mov
clc
std
mov
stos
push
dec
es
xor
mov
mov
test
sbb
sbb
push
fcompl
mov
aas
and
dec
nop
sbb
mov
ret
push
or
sub
sbb
mov
cwtl
jo
pusha
roll
test
popa
ljmp
cmc
and
in
addl
movsl
sub
mov
sti
inc
push
mov
mov
mov
out
mov
push
imul
dec
push
repnz
adc
mov
enter
imul
dec
inc
rorb
test
cmpsl
test
sub
xorb
scas
insb
lret
dec
xchg
das
dec
int3
sub
fdivs
pop
cltd
mov
jno
stos
adc
push
xchg
dec
hlt
xor
mov
jns
out
hlt
iret
dec
pop
mov
inc
cld
or
push
pop
mov
andb
jnp
in
repz
inc
xor
sbb
stos
jne
inc
add
daa
les
out
lea
mov
dec
neg
movsb
sbb
jnp
sub
mov
imul
xor
adc
adc
fistpll
fiaddl
cmpsl
rorb
les
sbb
outsl
je
jnp
icebp
push
mov
shrl
cmpsl
outsb
bts
cmpsl
xchg
movsl
pusha
cmpl
pusha
ljmp
sbb
jno
rcrl
mov
cmp
adc
inc
add
arpl
ficomps
lcall
mov
insl
fwait
xor
loope
mov
repz
test
aas
pop
dec
sbb
call
xor
lret
jb
nop
test
lret
cld
lds
and
pop
pusha
sub
ljmp
movsl
ja
mov
dec
inc
mov
lret
xlat
aam
add
jnp
adc
jecxz
jo
dec
dec
ficomps
or
lock
dec
aas
dec
inc
adc
sbb
cmpsl
mov
sbb
xchg
mov
add
lcall
or
clc
inc
pop
out
movsl
inc
je
or
xor
and
cld
ds
cmp
xor
clc
or
mov
std
repz
mov
add
mov
push
mov
inc
movsb
pop
cmp
cmp
das
mov
cld
ds
mov
push
cwtl
mov
push
pop
pushf
mov
inc
xchg
in
inc
imul
mov
push
sbb
pop
cltd
lahf
ds
lods
repz
out
adc
mov
scas
xor
push
out
and
insl
dec
mov
push
test
lcall
and
xor
mov
xchg
cmpsb
xchg
push
push
dec
and
pusha
mov
iret
les
stos
mov
loope
jge
inc
mov
cmp
pop
lods
push
pop
cld
std
test
push
rcll
xchg
or
adc
sub
mov
shrl
cmc
aad
ja
push
hlt
test
and
push
pop
outsb
cltd
fdivrl
sub
xchg
mov
inc
in
mov
mov
push
pmulhw
fsub
outsl
dec
mov
pop
mov
enter
imul
xor
sahf
mov
shlb
xchg
cmp
xchg
or
and
cld
push
add
sub
adc
adcb
or
pop
decb
mov
sbb
outsl
cmpb
or
cld
xor
or
add
lret
test
push
add
sub
das
ficomps
fisttpl
push
mov
fsubrs
jp
ret
sahf
cmp
push
cmp
addr16
mov
jmp
imul
xor
lahf
cmpsb
add
das
mov
lret
insb
mov
cmp
pop
scas
popf
xchg
sub
sub
pusha
std
dec
xor
mov
comiss
les
jbe
repz
jno
je
mov
cwtl
jno
pusha
insl
rcrl
jge
test
xchg
sbb
mov
int3
fbstp
jle
pop
dec
jmp
ficoms
fistl
mov
pop
jnp
adc
cmove
adc
sbb
imul
cmp
icebp
stos
jle
and
rclb
push
rcpps
in
daa
imul
adc
out
popl
lea
push
jl
and
fld
jmp
popa
pop
push
pop
repz
ss
cmpsl
xchg
int3
stc
push
mov
sbb
inc
data16
push
jbe
sub
imul
pop
lret
or
and
movsl
mov
mov
sub
sti
fadd
movsl
jnp
icebp
mov
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
paddq
xchg
enter
fiaddl
cli
jns
xor
into
mov
aad
bound
xchg
je
incl
and
sub
push
xchg
xchg
stos
lcall
cmc
xor
test
jge
adc
jnp
dec
loopne
pop
pop
repnz
sub
cmpl
jg
sbb
lds
mov
xchg
cld
je
ret
pop
dec
sub
mov
sub
repz
test
cmpsl
mov
pop
orb
mov
mov
fisubs
stos
outsb
jb
dec
cmpsb
push
mov
xor
rcrb
push
fmul
int
jle
push
adc
pushf
mov
rsm
push
adc
xchg
hlt
add
add
dec
lahf
ja
mov
jno
ficomps
xchg
into
into
mul
sub
or
nop
es
jbe
shrl
inc
jecxz
xchg
dec
jmp
fsts
add
adc
mov
adc
cld
dec
or
xchg
fmul
sbb
add
ljmp
or
jb
sti
or
mov
ss
or
mov
push
mov
inc
xchg
cmpb
stos
das
dec
out
cmp
fidivrl
rol
jmp
add
fwait
pop
out
dec
dec
out
or
cmp
cld
int
fucomi
inc
out
lret
fucomi
adc
inc
test
mov
pop
dec
or
adc
xchg
sub
inc
sbb
aas
cmp
test
dec
addr16
popa
in
stos
sbb
sbb
shlb
inc
add
addb
sub
lea
cmp
ds
lods
xchg
adc
and
rorb
stc
push
pop
aas
sbb
imul
pushf
movsb
mov
and
scas
imul
mov
jnp
mov
xor
pop
mov
jb
std
test
pop
xchg
pop
andl
aas
testb
pop
dec
xor
or
cmp
push
rcll
icebp
xor
sub
rorl
fisubrl
loop
fyl2x
bound
je
xchg
and
pushf
rep
or
out
lahf
mov
addl
scas
mov
idivb
fisubrl
dec
outsb
jne
cmpsb
in
or
test
lahf
mov
nop
or
inc
test
pushf
mov
pop
adc
nop
mov
fxch
les
ja
adc
jo
in
into
outsb
pop
flds
pop
cmpsb
and
cmpsl
inc
push
int3
push
in
inc
into
and
cld
inc
iret
or
cli
sbb
data16
lret
jmp
xor
inc
xchg
lods
sub
dec
pop
xchg
jne
xor
sarb
dec
pop
and
pop
repnz
sbb
or
xlat
xchg
ret
shl
pop
pop
sahf
les
fimuls
mov
mov
shrb
jnp
sbb
mov
in
mov
out
enter
dec
sahf
arpl
dec
and
adc
out
add
push
jg
cmp
mov
lods
adc
sbb
movsb
push
scas
movsl
sbb
das
adc
rcr
or
mov
ss
jl
dec
in
sbb
int
popa
in
add
mov
push
xchg
data16
call
in
cmc
and
mov
dec
xchg
dec
add
cltd
xor
jb
sbb
push
or
jmp
mov
mov
jp
or
negb
mov
or
mov
mov
push
mov
or
mov
jbe
cmp
cmp
add
ss
sub
xchg
mov
add
xor
test
sti
xor
sbb
movsl
push
nop
cmp
sahf
sbb
and
mov
sub
dec
lds
push
adc
sub
mov
mov
and
mov
cmpsb
jg
pop
xchg
scas
xchg
pop
dec
scas
mov
mov
xor
sbb
int3
inc
xchg
sbb
mov
ljmp
popa
cwtl
jb
testl
call
mov
adc
pop
jne
mov
mov
sbb
jns
mov
lods
insb
jle,pn
jne
dec
imul
pop
add
ret
mov
push
cmp
lods
stos
lretw
inc
icebp
jl
popa
lea
je
xchg
loope
in
sub
pusha
into
pop
add
aaa
jae
js
insb
push
icebp
popf
fiaddl
mov
sbb
iret
mov
pop
scas
mov
inc
xorl
cmp
inc
rclb
adc
inc
jle
push
pop
lahf
fs
popf
xor
add
loop
ja
xor
fnstsw
cmp
pop
xlat
fisttps
and
jge
adc
icebp
mov
mov
mov
sarb
push
or
icebp
cmp
jo
inc
sub
cmpb
cmovns
je
fsubrl
call
mov
aas
fdivl
pop
adc
into
in
xchg
ljmp
hlt
nop
in
xorl
sub
aaa
sub
sub
dec
cmp
xor
fbld
js
adc
mov
xchg
lret
lret
mov
mov
loope
faddl
shr
dec
jo
clc
out
cmp
and
xlat
sti
leave
xlat
inc
cmp
lea
dec
daa
insb
daa
add
push
mov
add
lcall
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
std
out
xchg
fimuls
pinsrw
movups
decl
pop
mov
cmp
popf
gs
xchg
pusha
je
or
add
fs
inc
xor
lret
shlb
pop
mov
mov
pop
or
mov
push
lret
mov
xor
rol
mov
mov
mov
jbe
sub
mov
loopne
and
ficoml
lods
repz
js
pop
sbb
addr16
inc
and
fs
fisubl
jnp
and
test
xchg
or
repnz
sti
push
push
xor
mov
adc
fwait
adc
dec
ret
sbb
push
or
cmpsl
clc
sti
mov
cltd
sti
andb
movb
ret
add
sbb
or
cltd
mov
in
jg
push
sbb
mov
fmuls
sti
ja
mov
loope
test
and
xor
sub
int3
mov
mov
and
fs
mov
ljmp
lock
ret
dec
fcomip
pop
sub
xchg
and
ljmp
add
and
cwtl
repz
lds
leave
dec
cs
cmp
fwait
cmp
pop
lret
aaa
mov
je
rorb
lret
or
jle
adc
xchg
add
xlat
nopl
bound
inc
cltd
add
dec
cmp
fs
ljmp
insl
imul
lahf
lods
or
stc
stos
test
pusha
mov
cmp
imul
or
or
and
xor
jle
scas
mov
push
fidivrl
mov
das
popf
pop
imul
cmp
push
mov
mov
add
jne
xlat
sbb
push
loop
gs
inc
pushf
adc
and
imul
or
dec
in
jbe
push
ud1
xor
xor
int3
push
mov
mov
test
jae,pn
add
cmpsl
shll
xchg
or
push
jle
pop
cmp
jnp
push
lret
push
loop
jns
subb
xor
mov
mov
movsb
inc
popl
cli
and
xchg
fsubl
into
frstor
mov
repz
lret
push
cmpl
push
or
cmp
js
mov
hlt
dec
mov
ret
add
adc
push
mov
repz
nop
shl
and
adc
loop
xchg
pop
nop
ljmp
pop
lds
jl
pop
add
lahf
mov
call
sbb
sbb
dec
inc
xlat
mov
outsl
push
je
jp
dec
mov
cmpsb
pop
aam
xchg
aad
outsl
mov
in
imul
xor
das
and
pusha
cwtl
cmp
fcmovu
pop
xor
insl
mov
lods
in
rcr
sbb
movsb
popa
test
jle
pop
sbb
lds
mov
xlat
fldl
das
repz
jno
mov
dec
push
ja,pt
mov
scas
xor
test
mov
sub
icebp
add
clc
push
pushf
into
imul
dec
lods
fwait
pushl
bound
rol
mov
imul
fistpl
mov
jo
filds
mov
ficoms
pop
cmp
fcomp
xchg
xchg
in
jecxz
aam
jo
mov
dec
xchg
pop
pop
jb
sub
or
ror
loop
sub
mov
inc
add
mov
add
rclb
pusha
jecxz
in
xchg
int
or
test
sbb
jno
loopne
test
imul
mov
arpl
inc
inc
adc
xchg
fistpll
xchg
adc
xchg
add
push
mov
xor
lds
inc
pop
cmp
xor
push
push
jl
inc
xsaveopt
nop
std
inc
lods
jns
movsl
push
inc
shll
loope
fstpl
sub
fsubrl
push
xlat
in
push
push
push
scas
cmp
data16
mov
ds
cmpsb
mov
lods
fldl
cmp
and
add
out
pop
aas
cld
test
lds
loope
mov
or
pop
sub
fldenv
movlhps
cltd
pop
ret
push
push
mov
xlat
jo
adc
mov
movq
iret
jns
imul
lea
loopne
mov
test
xor
lods
push
andl
mov
ja
popa
and
mov
or
mov
sti
xchg
jle
xor
pushf
inc
js
dec
or
xchg
jmp
inc
std
push
push
in
pop
sub
push
cmp
subb
xor
sub
test
arpl
jno
inc
pop
mov
rol
fidivrs
fcomi
jmp
inc
cmp
imul
xchg
push
test
ja
fmul
inc
mov
mov
xchg
ret
sbb
insl
pop
fxch
xchg
shl
xchg
addr16
sbb
not
pop
cmpl
outsl
fwait
mov
push
int
cmpsl
lods
insb
lea
push
out
xchg
repnz
shl
and
call
pushf
add
jecxz
inc
dec
or
mov
inc
fnstsw
cld
es
adc
cmp
cmpsb
mov
push
insb
pop
push
or
sub
test
fwait
cmp
imulb
pop
pop
out
insl
test
popf
mov
fisttps
sub
mov
into
je
xor
popa
lret
in
inc
loope
int3
and
aad
mov
lods
mov
add
out
mov
add
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
mov
pinsrw
fcomip
test
rcr
aad
jp
jl
or
sbb
jmp
scas
pusha
mov
adc
cltd
cmpb
fimuls
scas
insb
xor
int
and
sti
fs
adc
je
cli
sbb
or
pop
sub
loop
or
adc
mov
sub
push
jne
cli
jmp
push
jge,pt
cmp
or
mov
and
mov
pop
adc
lea
inc
fwait
or
cmp
pop
xor
xlat
xchg
repz
psubusw
or
les
jg
stc
add
jle
mov
or
and
imul
push
fisttps
sub
aas
in
push
sti
mov
rcrb
jge
mov
mov
pop
call
xlat
pop
sbb
mov
adc
loop
leave
xlat
in
clc
add
inc
jbe
clc
jecxz
xchg
test
lods
mov
pop
and
jo
sub
in
dec
dec
jbe
dec
pop
pop
push
xor
call
aad
add
cmp
sub
push
or
fiadds
popl
daa
mov
cs
push
pop
adc
leave
xlat
adc
xor
inc
faddl
stos
gs
je
and
push
loope
fadd
adc
push
mov
inc
sbb
xchg
jecxz
fwait
and
ficompl
dec
leave
mov
adc
fstpt
sub
sbb
inc
popf
and
sbb
dec
pop
clc
idivb
lahf
sbb
leave
add
sub
je
cli
pop
scas
lcall
xor
bound
pop
xchg
sbb
xor
popa
inc
sbb
jg
mov
add
pop
movsl
cmpsb
add
push
xor
iret
fildll
rcrb
cmp
pop
push
arpl
mov
adc
dec
ljmp
inc
push
fneni(8087
rcrl
ss
mov
xlat
mov
push
out
fwait
test
pusha
push
lock
pop
fdivrl
addr16
cmp
loopne
testl
int3
cmp
orl
or
jle
pop
es
call
cmp
sub
daa
cmp
and
popa
cmp
add
xor
mov
aas
iret
pop
add
insb
sub
and
sub
insl
xchg
out
std
pop
or
add
adc
or
js
xchg
test
dec
lret
or
mov
in
aas
inc
xchg
mov
loopne
add
and
sbb
jle
out
pusha
xchg
sbb
mov
mov
dec
sbb
and
mov
jp
aaa
jbe
adc
das
sbb
pop
mov
cli
into
rolb
and
dec
pop
cli
and
insb
mov
mov
repnz
fistpll
enter
xchg
call
pop
je
cmp
xor
sub
push
and
mov
push
lret
mov
xchg
movl
rcr
jb
cld
cld
lcall
inc
jnp
je
sbb
js
lds
sub
xchg
popf
jmp
loop
pop
cmp
rorb
in
sarb
xor
arpl
scas
jmp
insb
ss
imul
nop
inc
adc
add
es
sbb
aam
test
adc
aaa
out
mov
sbb
mov
dec
sub
mov
sub
int3
cmp
ret
stc
popf
dec
mov
lods
mov
cli
fs
pop
dec
mov
pop
aam
or
stos
andb
jmp
test
xor
in
mov
js
adc
dec
iret
xchg
sbb
mov
adc
mov
lods
mov
adc
cmpsl
mov
pop
add
sbb
mov
xor
sbb
ljmp
out
test
and
and
scas
mov
mov
sub
mov
xchg
xchg
inc
inc
sar
int
xor
jecxz
mov
pop
cmc
ljmp
pushf
hlt
imul
mov
into
push
movsb
inc
push
xchg
outsl
adc
or
test
outsl
mov
pop
ret
in
inc
mov
cltd
dec
mov
and
jge
movsl
lods
lds
daa
daa
sbbb
adc
cmp
sbb
jge
mov
xor
xchg
cmp
insl
lods
adcl
ret
xor
adcb
into
and
sub
leave
shll
test
mov
cmp
cmpsb
xchg
sbb
cmp
std
pushf
push
push
int3
mov
pop
cmp
enter
cwtl
push
dec
cmp
xor
jne
adc
shlb
out
std
xchg
movsl
sarl
xchg
iret
lock
sub
push
dec
les
loop
push
dec
ret
adc
bts
in
cmc
movsb
fcmovnu
sub
pop
and
out
push
fimuls
jb
fsubrl
jl
and
in
adc
dec
cmp
in
jmp
lret
inc
mov
mov
adc
into
sub
dec
or
mov
sub
enter
jae
test
lcall
or
mov
scas
movsb
scas
pop
pop
mov
rclb
jecxz
xchg
xor
out
loop
xor
mov
enter
jge
and
jno
outsb
add
mov
lods
pop
test
loope
pop
sub
pop
add
mov
pop
roll
adc
faddl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
bound
pinsrw
cmovns
dec
xor
and
add
adc
and
call
mov
mov
inc
repnz
lcall
push
sub
sbb
cli
cmpxchg
loopne
arpl
cmpsb
movsl
xchg
adc
popf
ret
add
mov
jmp
adc
push
mov
loop
jne
add
jg
leave
iret
rcl
jbe
push
lcall
mov
mov
test
mov
int
jle
fidivl
pop
int3
sub
jno
mov
pop
dec
dec
sbb
adc
mov
push
je
mov
gs
daa
or
adc
int
testb
sbb
negb
sbb
jge
mov
stos
addr16
jo
jecxz
lds
mov
addr16
sbb
mov
test
pushf
or
fs
cmp
push
add
push
hlt
adc
mov
out
jge
sub
cmp
adc
lods
test
ss
movsb
push
cltd
imul
pop
push
das
and
push
je
lock
xor
adc
sbb
pusha
jg
sbb
dec
jge
les
xchg
popa
je
cmp
fidivrs
sbb
imul
es
test
movsl
mov
bswap
cld
icebp
push
sbb
mov
push
jg
push
push
mov
push
sti
aas
sti
push
push
stos
push
movsl
adc
ja
in
ja
mov
sbb
cmpsb
in
xchg
imul
jmp
pop
call
add
ret
loop
cmpsl
test
sahf
call
ret
loopne
dec
scas
push
pop
orl
xchg
ds
xchg
mov
lods
and
aaa
cmp
jge
mov
adc
daa
lea
and
mov
cmc
mov
add
or
sub
pop
popf
sbb
cmp
out
adc
push
push
mov
xor
ds
mov
xor
fstpt
add
jns
push
pushf
test
enter
sub
push
pop
mov
jae
push
out
out
pop
lods
and
cmpsl
xor
mov
adc
dec
std
gs
and
and
inc
shrb
cld
xor
xor
mov
cmp
lahf
jl
arpl
pop
shlb
stos
inc
push
fyl2x
and
insl
sub
inc
adc
jl
arpl
push
sbb
sbb
push
sbb
fcoml
aas
fildll
jl
xchg
push
shll
cmpsb
into
cmpsl
cmpsl
cli
add
cmp
mov
sub
popa
fs
add
pusha
mov
sbb
ljmp
aaa
test
xchg
inc
fcmovbe
and
sub
scas
cmp
lret
test
jo
jecxz
mov
mov
enter
mov
ja
xor
daa
cmpsb
dec
stc
in
jmp
pop
and
dec
xchg
repnz
xchg
push
ret
loope
fistpl
xor
xchg
insl
outsl
daa
sbb
add
mov
insl
roll
ljmp
lock
pop
ret
xchg
jae
mov
pusha
sub
or
cltd
pop
mov
jb
daa
sub
data16
jle
movsb
and
add
or
mov
dec
push
or
push
lahf
addl
es
cltd
jg
pushf
scas
add
dec
push
cmp
jno
lods
jne
jp
add
and
xor
lods
fs
push
jle
ljmp
mov
shlb
fs
les
dec
call
jl
loope
out
sub
xchg
cmc
jne
sahf
js
int
mov
out
or
out
cwtl
rorl
cli
aaa
inc
jmp
jne
add
outsl
or
and
mov
les
jl
rcll
cld
out
shl
xchg
imul
mov
cmp
sbb
idivl
ss
lret
lea
jmp
sbbl
cmp
adc
les
dec
xchg
push
insb
xbegin
inc
mov
mov
push
xchg
or
jge
ret
aam
stc
xchg
inc
test
jp
or
insb
lret
add
mov
frstor
shl
xchg
les
or
jns
test
or
cwtl
insb
add
add
dec
popa
sahf
and
xchg
dec
sub
cmpl
aas
ja
fdivs
popl
iret
push
daa
lret
ljmp
popf
push
nop
jo
jne
sar
das
cmpsb
push
sbb
jnp
push
cltd
loop
lea
inc
fistl
ret
mov
aas
std
or
cli
sub
push
adc
andl
or
cmc
mov
xor
xor
add
push
sbb
das
mov
xchg
pop
lret
pop
adc
testl
mov
loop
pusha
loopne
mov
adcl
popa
jno
xchg
fwait
or
imul
test
pop
out
popa
or
sub
mov
neg
mov
inc
mov
dec
in
mov
in
push
pop
cwtl
jmp
cmp
lret
jg
push
or
movsb
pop
ror
and
inc
sbb
daa
mov
inc
xor
sub
inc
push
stc
jmp
and
xchg
in
add
xor
jmp
xchg
fcoml
jnp
cmpsl
xor
jl
iret
movsl
cmp
mov
fidivrl
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xchg
out
mov
pinsrw
jno
mov
cmp
into
or
and
dec
mov
lret
in
arpl
cmp
incl
in
repz
out
outsl
xchg
jecxz
add
inc
or
std
mov
lock
lds
mov
pop
fcmove
pop
xor
mov
or
pop
mov
or
sti
mov
or
inc
cmp
nop
push
ss
testl
inc
scas
lcall
add
imul
pusha
mov
fisttps
repnz
xchg
adc
jp
dec
jbe
xchg
ret
aas
cmp
xchg
or
bound
dec
cmpsb
shll
sarl
sbb
fistps
and
repnz
mov
xchg
push
and
fucomip
out
mov
mov
jecxz
in
dec
sbb
out
nop
sahf
and
push
and
inc
pop
mov
popf
mov
test
cmp
jle
and
jp
out
into
out
idivl
insl
sbb
add
dec
sbb
sarl
adc
pop
xor
enter
addb
pop
ja
aaa
mov
and
aad
vcmpordss
sub
loop
push
or
iret
and
add
in
mov
lret
mov
push
daa
xchg
cmp
jmp
xchg
add
and
or
and
mov
lahf
jg
pop
sbb
xchg
mov
fwait
in
cmp
fbstp
push
aaa
cmpl
xlat
mov
fs
inc
mov
mov
sub
outsb
push
jb
rcll
jmp
and
sub
xor
in
dec
pop
movsl
ficoms
add
mov
add
cwtl
jge
enter
cli
jae
ret
test
push
mov
mov
call
and
loop
pmulhw
mov
fisttpll
orl
mov
ljmp
stos
gs
jle
mov
das
jmp
fistps
mov
fdiv
mov
dec
out
or
loopne
cltd
fcoml
ljmp
xchg
mov
outsl
adc
lahf
cli
pop
dec
push
outsl
loopne
cmc
inc
and
cld
sub
adc
mov
bound
out
je
js
pop
jo
shlb
cmc
adc
pop
dec
and
cmpl
jbe
orb
shl
inc
incl
jmp
sub
in
mov
or
sub
pop
clc
xchg
inc
sti
into
cmpsb
loop
cltd
jae
cs
stos
sbb
lock
xorb
dec
dec
sbb
pop
and
cs
inc
leave
cmpsb
sbb
mov
inc
mov
bound
lds
dec
insl
sbb
pop
addr16
xor
fstpl
sbb
mov
xchg
push
add
lea
adc
add
popf
inc
jo
xchg
les
in
shlb
xchg
lods
dec
or
rol
cld
sbb
dec
outsl
or
imul
pop
pop
incl
push
movsl
xlat
sub
outsb
sbb
lcall
sahf
pop
jl
xchg
into
cmc
push
and
push
jmp
mov
fmuls
xor
inc
call
fs
pop
sub
cs
lcall
gs
inc
incb
add
cmp
and
dec
addr16
loop
mov
lods
mov
mov
push
orb
jae
cld
push
je
scas
sbb
or
push
rcll
out
clc
sub
stc
push
pop
xchg
cld
push
pop
xchg
in
jne
mov
es
mov
xchg
pop
jg
lds
lods
mov
mov
ljmp
sbbl
adc
rclb
aam
pop
aaa
in
mov
mov
xlat
idivb
cmpsl
push
mov
sbb
fisubs
adc
sub
sbb
xlat
adc
sbb
into
push
imul
mov
mov
lret
movsl
inc
shrl
or
fs
int
std
rolb
inc
icebp
pop
and
bound
pusha
adc
xor
mov
and
and
inc
aaa
cli
and
xchg
dec
jae
jns
inc
push
movsb
iret
cmc
fucom
cmp
pop
adc
bound
mov
mov
out
push
xchg
xchg
add
jle
movsl
jne
or
test
imul
jmp
iret
sbb
mov
and
inc
enter
jae
push
pushl
xor
ljmp
stc
adc
cmp
cwtl
dec
adcl
and
call
stos
fidivs
add
fstpt
movsb
xchg
cs
cmp
and
vmovaps
dec
lahf
inc
mov
mov
xchg
lds
fisubs
xor
add
dec
scas
cli
lret
jl
repnz
aas
or
push
es
ss
sbb
and
pop
movsl
xor
xchg
mov
sbb
jae
popa
jne
les
sbb
scas
xchg
leave
fwait
pushf
out
adc
push
xor
ljmp
sub
in
push
and
lods
jmp
notb
push
out
jl
fcompl
push
lahf
imul
jmp
xchg
sbb
cmp
jp
push
mov
loop
sbb
xchg
dec
leave
pop
xchg
sub
pusha
aas
push
popa
clc
pop
dec
out
fnsave
or
fcomp
sbb
leave
or
sbb
mov
popa
ljmp
jge
sti
imul
mov
add
int
lret
and
sbb
lidtl
push
mov
sub
sbb
mov
clc
and
cmpsl
pop
andl
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
dec
mov
xchg
data16
pinsrw
xlat
jecxz
je
mov
insb
enter
scas
adc
imulb
add
push
dec
or
movsb
mov
add
loopne
mov
movsb
and
inc
xor
xchg
adc
and
shll
loopne
aas
rorb
add
push
adcl
lcall
loopne
je
cmp
sub
cld
or
les
imul
mov
repnz
mov
push
ficomps
xlat
stos
pusha
inc
and
fistps
lret
movsb
inc
aam
push
nop
xchg
lahf
adc
repz
cmpsb
dec
in
orb
jmp
jne
testl
push
int3
sarl
in
and
jmp
mov
fdivs
pusha
lods
pop
ret
mov
sub
and
sahf
gs
push
fs
dec
gs
addr16
push
repnz
popa
call
sbbl
dec
jecxz
jbe
inc
popf
fidivrs
int
jb
sub
mov
pop
in
adc
mov
dec
mov
imul
test
aad
test
sub
sub
inc
or
int
lcall
ja
mov
ljmp
xor
outsl
and
imulb
push
clc
mov
int3
les
unpckhps
jge
fdivrs
cld
int3
fsubrl
ds
adc
adc
fs
jo
xchg
stos
ret
inc
inc
jns
push
sbb
shl
test
mov
jg
push
dec
sbb
and
lds
repnz
lcall
mov
xchg
ja
jns
adc
data16
pop
fmul
xor
xchg
cmp
cwtl
fwait
sbb
int
xorb
push
cli
sub
mov
lret
outsl
push
fs
cmpsl
imul
adc
into
test
xor
mov
imul
xchg
dec
jb
xor
add
push
jle
mov
out
lods
shlb
or
adc
nop
outsl
mov
stos
gs
push
outsb
arpl
rcrl
xor
fs
nop
leave
cmp
mov
or
fadds
jae
jnp
lret
jp
xor
sub
xor
mov
leave
pop
push
cwtl
mov
jg
cld
cmp
out
pop
loop
xor
jb
fildll
xor
or
jns
faddp
pop
lock
mov
add
dec
and
pop
pushf
movsb
dec
mov
inc
popa
in
mov
dec
mov
sbb
addl
lea
fdivl
inc
jae
out
lahf
mov
stc
mov
mov
scas
pop
movsl
movsb
push
add
aaa
into
movsl
push
cmp
add
pop
jne
movsb
mov
pop
adc
jns
sbb
inc
jae
mov
pop
cmc
inc
mov
insl
repnz
and
js
push
lock
push
jns
sub
out
fwait
jno
dec
in
xor
mov
cmpsb
cmpsb
stc
inc
jge
imul
push
jmp
rclb
mov
dec
jle
dec
inc
push
mov
mull
push
hlt
pop
fcomps
imul
in
fistpl
mov
sbb
and
fsub
repnz
ret
jecxz
je
pushf
pop
call
push
push
adc
cmp
cmpsl
insb
test
es
out
dec
lea
loope
cltd
popa
mov
sti
and
psrlq
mov
adc
mov
jg
push
lahf
das
inc
xchg
pop
push
jo
add
mov
push
in
pop
lcall
xchg
mov
test
popa
pushf
dec
mov
or
jbe
and
shll
xorl
mov
mov
cmp
fstpl
add
jmp
add
inc
sbb
ja
or
or
jo
test
sbb
and
fimull
cmp
xchg
data16
sub
or
in
arpl
in
mov
dec
xchg
scas
inc
pop
adc
push
inc
imul
xchg
icebp
inc
test
xchg
push
push
inc
gs
push
jp
dec
inc
push
loop
lret
stos
xor
inc
jge
idivb
cmc
or
and
jg
in
add
adc
xor
stc
mov
xchg
fstl
xor
mov
or
sbb
movnti
jp
test
jnp
or
add
mov
xchg
inc
lcall
cmp
out
or
scas
inc
push
inc
inc
fdiv
mov
xchg
popa
popa
pusha
add
sbb
movsb
xchg
fildl
pop
mov
loop
out
jl
psubd
ljmp
inc
add
stc
xchg
cmp
movsl
dec
cwtl
sbb
jecxz
jp
jo
mov
xchg
xchg
pop
wbinvd
adc
push
ret
mov
es
divb
lds
cmove
loopne
xchg
mov
ljmp
in
lahf
push
jecxz
xor
ljmp
loop
dec
pop
out
arpl
sub
ss
inc
popa
inc
and
daa
pop
jnp
sbb
or
out
add
mov
imul
lock
jbe
xchg
adc
mov
in
jle
mov
call
mov
push
test
mov
sbb
adc
mov
call
notb
cs
js
pusha
sbb
ret
pop
mov
pop
nop
xor
rcrl
jae
test
push
je
jg
cmp
iret
and
sahf
sbb
add
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
stos
cmc
adcb
andps
enter
inc
fidivrl
push
aam
cmc
sbb
sub
xor
mov
lahf
add
loope
repz
cmp
ljmp
imul
xchg
insl
inc
sahf
shl
cmpsb
xor
lret
add
rorl
mov
inc
aad
ret
lods
dec
mov
jo
mov
movsb
sub
nop
fdivs
cmp
in
loop
or
add
call
icebp
mov
pop
jmp
push
lock
lock
out
andl
dec
and
inc
mov
ja
pop
pusha
mov
push
jo
add
movsl
sub
adc
mull
test
xorb
xorl
xchg
xchg
std
mov
pop
sbb
mov
pop
stos
mov
add
jl
xchg
add
xchg
negl
push
cmp
push
cmpxchg
xor
ret
cmp
leave
bound
ds
jp
insl
cltd
icebp
ja
and
mov
add
aas
mov
jns
movsb
scas
mov
aam
repz
add
movb
jo
icebp
shlb
lods
xchg
fcmovu
aaa
dec
cmp
hlt
push
dec
adc
mov
sti
xlat
lods
shll
push
add
dec
insl
js
push
enter
adc
sbb
repnz
mov
push
add
mov
xchg
push
cmp
in
sub
cmp
ljmp
or
testb
lods
mov
dec
mov
andl
jmp
lods
mov
pop
clc
push
mov
adc
push
jnp
repz
pop
sub
sahf
xchg
pop
adc
adc
out
sti
out
scas
jno
jge
mov
gs
push
loop
loope
std
mov
dec
out
mov
aaa
icebp
sbb
pop
add
ss
ja
subb
fadds
or
push
fisttps
mov
inc
mov
iret
test
xchg
jae
pop
movl
push
popa
ss
inc
mov
mov
scas
mov
cmp
fsubs
dec
mov
xor
and
pop
in
aad
mov
shrb
and
xchg
sub
xchg
je
cmp
iret
fnstcw
lahf
bound
test
mov
pop
mov
ljmp
or
test
push
mov
inc
int
popf
adc
inc
fistps
adc
mov
sub
out
mov
test
pop
pop
jae
insl
push
add
pop
inc
xor
in
fdivs
jge
flds
jmp
or
dec
ret
lret
cltd
icebp
loopne
xchg
loop
jne
faddp
add
jmp
cmc
sbb
hlt
ret
lahf
movsl
mov
bswap
fiaddl
popl
lcall
sbb
cmp
aas
cmp
xor
mov
dec
push
mull
test
mov
divl
aas
push
dec
sbb
ss
cmp
xor
push
or
inc
jge
jnp
mov
scas
fidivl
adc
das
call
ret
sbb
xor
shr
nop
or
push
lret
stc
add
cmc
mov
outsb
mov
int3
jnp
xor
xchg
lahf
and
imul
rcrl
lods
lock
scas
stc
inc
icebp
sub
sbb
fs
jae
fisttpl
pusha
xchg
test
ss
inc
sbb
imul
stos
out
mov
inc
mov
cmp
lock
ffree
lret
pushf
cli
mov
mov
or
rolb
arpl
push
push
call
mov
mov
stos
inc
push
std
and
xchg
and
jnp
cmp
aas
cltd
shr
pop
std
and
inc
lret
jo
addl
sub
or
stos
jo
cltd
pop
and
repnz
lea
sub
pop
mov
out
and
jmp
xchg
pop
push
mov
loopne
dec
pop
mov
enter
enter
aam
hlt
arpl
scas
mov
dec
pop
insl
dec
xchg
call
inc
sbbb
add
add
repnz
sub
rcrl
int
sahf
daa
daa
movsl
dec
jo
es
lock
xor
js
sarb
les
pop
aam
hlt
arpl
mov
cmp
cmp
mov
sbb
sub
dec
or
adc
outsl
mov
movsl
push
pop
dec
or
sbb
rcll
xchg
add
ds
cwtl
or
push
js
out
je
xchg
mov
cld
jo
mov
bound
add
shrl
xor
dec
ret
xchg
stos
repnz
sub
mov
inc
dec
add
enter
add
push
in
sub
movb
xor
xchg
push
add
fiaddl
das
repz
pop
out
or
ficoml
pop
or
int3
or
data16
ljmp
inc
stc
shrl
push
adc
lods
mov
lds
mov
pop
sar
das
and
popa
int
insl
mov
leave
inc
lret
out
mov
cwtl
out
test
xchg
push
add
xor
mov
cmp
and
jnp
clc
jae
pop
push
or
enter
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
xor
mov
add
psubusb
ds
push
int3
popf
or
mov
cld
add
imul
xchg
xchg
ljmp
fstpl
add
jle
jg
bound
jle
es
lock
scas
jb
scas
int3
inc
arpl
out
dec
pushf
div
outsb
repnz
mov
fsubrs
sarl
out
pop
addr16
push
insl
sarl
xor
dec
stos
xchg
xchg
inc
jbe
jp
popf
dec
movsl
push
pop
in
cmpsl
aas
lods
lcall
add
call
pushf
ret
sub
nop
js
das
stos
in
aad
sbbl
aaa
lret
push
int3
fsub
and
mov
ljmp
xchg
stos
lea
dec
insb
insl
enter
dec
mov
adc
lea
data16
sub
out
jb
push
aam
arpl
cmp
pop
aaa
hlt
mov
cwtl
ret
xor
test
movsb
pushf
jl
push
gs
test
mov
or
in
mov
pop
aas
pop
push
test
imul
or
iret
inc
cld
inc
and
jnp
ret
jmp
int
pop
jl
bound
flds
sub
int3
or
std
push
lods
lret
data16
add
and
mov
lret
inc
das
adc
mov
jp
lods
in
adc
inc
mov
push
movsb
lock
xor
lcall
xor
inc
push
mov
daa
sub
scas
popf
test
adc
fisttps
jns
sub
idivl
add
adc
add
int
jle
rcll
push
pop
sub
ficoml
int3
int3
inc
inc
push
sub
dec
pop
dec
arpl
pop
out
and
and
mov
jo
test
cmpl
loop
xchg
push
je
ja
sbb
cmp
adc
jle
popf
pop
adcb
sbb
lds
sub
lods
lods
loope
mov
int3
mov
dec
stc
aam
rcrl
adc
aas
adc
mov
rcll
and
in
sub
call
inc
les
sub
iret
dec
imul
push
xchg
xlat
fidivrs
test
in
sub
cmp
or
movsb
mov
jbe
mov
and
jl
and
pop
lods
jl
sbb
lods
xchg
rol
in
xor
inc
push
jns
leave
sub
push
shl
inc
lret
arpl
mov
lret
dec
xchg
mov
inc
aam
push
inc
mov
scas
gs
push
fstps
lods
or
and
cmp
mov
bound
mov
lcall
inc
mov
shrb
mov
clc
sbb
xchg
mov
adc
mov
push
hlt
inc
repz
sub
xor
or
fcompl
jno
lods
mov
sbb
sub
dec
dec
dec
popf
xchg
inc
int3
js
xchg
xor
cmp
jecxz
out
movsl
in
scas
jno
fwait
jns
out
nop
mov
das
scas
ds
jmp
pop
pop
scas
scas
mov
jnp
imul
syscall
adc
push
aam
cmp
and
jae
stc
sub
cwtl
mov
push
leave
push
add
aam
daa
ljmp
adc
mov
lods
add
xchg
dec
nop
out
push
in
xchg
test
ja
xor
push
aad
scas
out
pop
cmpsl
or
inc
sbbl
inc
pop
movsl
push
aas
fbstp
xor
or
cmpl
dec
fadd
mov
into
loopne
mov
pusha
movsl
sar
enter
iret
lcall
std
jbe
mov
out
dec
pop
pop
inc
push
dec
add
jo
test
pushf
add
test
sete
or
repnz
out
pop
pop
andl
xchg
sbbb
cmp
and
pop
bound
int3
mov
stos
in
lret
ret
insl
data16
repnz
std
rolb
and
movsb
and
or
cltd
dec
xchg
push
aas
int
sbb
mov
pusha
jg
jle
cmp
mov
test
dec
enter
or
das
or
push
and
testb
int
xor
shrb
ret
push
cmp
loopne
pushf
or
ds
adc
mov
std
mov
or
pop
xchg
or
dec
add
sbb
or
loop
sub
mulb
lcall
dec
xchg
sub
lret
push
ret
push
sarb
jo
out
mov
mov
and
fdivrl
pop
dec
xchg
add
rorb
cmp
sbb
pop
sahf
inc
out
sub
xchg
shrb
lcall
pop
icebp
mov
cli
insl
ja
cli
nop
ljmp
jnp
addr16
and
stos
mov
jne
sub
xchg
inc
xor
arpl
ds
adc
aas
mov
adc
mov
add
imul
iret
ljmp
pop
xor
inc
in
pop
insb
add
icebp
mov
inc
add
xchg
loope
mov
insl
jo
xchg
mov
jg
pop
cmpsb
mov
or
mov
pop
les
stos
dec
push
push
jae
adc
repz
add
scas
xor
fstps
outsl
test
gs
in
jle
pop
popa
cmpb
dec
mov
push
mov
xchg
pusha
nop
push
popf
inc
pop
lods
imul
in
cmp
cmp
in
scas
pop
xlat
fnsave
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
dec
sub
adcl
inc
movsl
cmp
or
lods
inc
sub
pop
xor
xor
in
clc
fbstp
insb
imul
aaa
xchg
test
aad
dec
cltd
xor
or
jbe
add
xchg
dec
lret
sub
pop
fs
pop
outsb
mov
insl
sarl
sbb
adc
dec
adc
nop
sbb
xor
push
fwait
xchg
push
mov
add
dec
test
dec
mov
outsb
testl
jno
out
adc
mov
pop
or
push
and
pop
cmp
sahf
xchg
loopne
in
sub
out
pop
daa
xor
sbb
pop
adc
push
fnstenv
jae
mov
pop
repnz
pop
loope
push
fldenv
push
jecxz
aam
adc
int
adc
int
cwtl
adc
cmp
test
mov
nop
stos
scas
pop
cltd
mov
mov
std
jne
mov
cmp
add
jecxz
mov
cmp
notb
js
push
adc
ficoml
les
movsl
xchg
cmpsl
mov
adc
xchg
adc
out
mov
mov
pop
cmp
fmull
icebp
and
add
mov
imul
divb
adc
sub
out
shrb
hlt
pop
iret
mov
push
jns
ja
add
or
jbe
mov
into
mov
mov
push
or
lods
push
sbb
and
enter
adc
add
arpl
sub
fstpt
inc
mov
ret
pop
ljmp
outsb
jbe
aas
dec
es
push
clc
aad
in
popa
xchg
daa
lds
loopne
aas
outsl
jge
inc
mov
sub
jb
orl
shl
out
fdiv
lahf
not
and
xchg
push
push
mov
enter
ret
mov
sub
mov
sub
ja
or
outsb
div
test
pop
push
jge
sub
lret
cmpsl
iret
test
loope
inc
xor
xor
fdivr
pop
mov
aas
mov
adc
and
dec
data16
add
sbb
sbb
adc
xlat
dec
jmp
pop
mov
jns
or
cmp
jge
imul
loop
lcall
cltd
mov
xor
sbb
adc
scas
lret
inc
pop
jp
into
int
mov
sbb
pop
dec
dec
dec
mov
mov
jae
hlt
es
jns
movsb
test
sbb
sub
movsl
cmp
adc
lods
outsl
add
jmp
leave
orb
mov
mov
pop
mov
mov
xchg
cmp
ds
fnsave
in
xchg
sbb
iret
push
icebp
mov
loope
clc
mov
je
call
mov
mov
into
xor
in
dec
pop
fsubr
out
clc
stos
fbstp
aam
xchg
aaa
push
in
mov
push
xor
and
xor
adc
push
idivl
jnp
inc
sbb
jmp
into
out
xchg
and
fucom
xchg
mov
filds
int
and
out
gs
lret
mov
incb
mov
sub
add
and
out
adc
mov
cwtl
mov
arpl
pusha
jno
idivl
leave
add
pop
xchg
sti
arpl
aas
xchg
pop
pop
int3
xchg
aaa
add
adc
mov
out
movsb
daa
xor
lret
add
xchg
jne
mov
mov
mov
mov
adc
addb
xchg
int3
sub
mov
bound
push
in
pop
ds
lods
mov
pop
rcrb
jmp
adc
jge
mov
ss
popf
adc
inc
jbe
icebp
ficoml
mov
fisttpll
jl
fisubrs
cmpl
push
mov
sub
stos
sbb
dec
sahf
fistl
dec
and
sahf
cld
pop
cmpsl
ja
insb
ds
cmp
addr16
lock
bound
test
lahf
shlb
mov
stos
fdivl
adc
lods
orb
mov
std
and
into
dec
pushl
lret
xlat
xchg
pushf
sbb
adc
stos
push
outsb
lds
mov
loop
fcom
mov
sbb
mov
sbb
adc
out
fcompl
fistl
xor
dec
dec
insl
inc
stos
push
decb
inc
inc
xchg
aam
lcall
mov
notb
ret
lret
cmp
ss
mov
dec
cli
jmp
pop
inc
pop
popf
mov
push
pop
mov
push
dec
rorb
in
in
fcom
push
lods
xor
pop
cmpsl
jmp
stc
outsb
lods
dec
mov
pop
fmul
out
sbb
lahf
fwait
xor
push
jge
jp
ljmp
insl
clc
mov
iret
mov
cmp
ss
pop
pop
push
iret
mov
sbb
fwait
popa
cmp
jno
cli
call
cmp
dec
pop
jg
add
rorb
ret
out
in
das
sbb
sti
mov
shll
xchg
inc
aam
mov
lret
leave
cmpl
xor
mov
pusha
call
ljmp
mov
sbb
jl
jns
mov
xor
hlt
pop
mov
subl
fcmovb
jp
pop
movsb
cs
and
iret
pop
enter
outsb
sub
jnp
xchg
filds
inc
xor
loope
jne
add
enter
iret
push
xchg
xchg
xor
sbb
mov
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
aas
popf
xchg
mov
add
or
pop
aaa
add
push
lea
popa
call
cmc
popa
cmp
inc
rclb
pop
into
das
xchg
push
lds
test
jo
push
mov
aas
adc
lret
or
jp
popf
icebp
adc
jb
push
fists
and
inc
outsl
cli
cli
adc
pop
or
repnz
cmp
testb
fs
mov
jmp
inc
jp
adc
sub
cmc
lods
inc
lods
and
mov
ret
rol
into
mov
mov
xor
in
es
inc
sbb
cmp
in
cmp
insb
stc
hlt
mov
dec
shl
cmp
and
iret
fsubl
and
push
cmp
addr16
sub
or
add
sbb
xchg
cld
mov
ss
icebp
gs
push
stos
xor
adc
stos
ret
popf
addb
adcb
movsb
xor
jns
nop
shlb
outsb
mov
aaa
das
imul
sub
dec
jne
inc
sub
mov
mov
sbbb
loop
and
jecxz
xchg
loopne
sbb
ja,pt
xor
cld
int3
mov
sub
adc
and
cmpb
or
js
pop
ss
mov
pop
js
shll
loopne
sub
jno
jo
movsl
ror
jg
fs
push
orl
pop
xchg
mov
test
adc
inc
push
mov
andl
mov
jnp
nop
mov
das
lcall
mov
rorb
pop
ror
and
flds
xor
imull
fimull
xchg
push
lret
hlt
movsb
xchg
lea
pop
push
adc
xor
cwtl
insb
outsl
adc
das
jbe
fimull
mov
rcrb
jns
push
xor
cmp
cmp
mov
cmp
xchg
aas
and
push
daa
xchg
or
pop
adc
test
negb
and
and
and
xor
js
dec
adc
lds
fimull
push
iret
lea
mov
sbb
mov
mov
test
fiaddl
sbb
jg
fisubs
insb
push
in
dec
scas
mov
lods
incb
push
push
icebp
stos
pop
dec
adc
inc
push
lret
cmpsb
push
out
cmpb
and
xchg
cmc
cmp
lds
cmpl
add
cmpsl
ds
outsl
lods
addb
push
cmp
fwait
dec
push
ret
fnsave
mov
inc
inc
xor
jle
dec
lods
push
mov
aad
lret
dec
xor
xor
jbe
test
jecxz
movb
jge
roll
shrl
sahf
cmp
add
notb
test
subl
xor
cmp
mov
test
in
jle
inc
inc
femms
ds
sbb
inc
std
pushl
outsb
lods
dec
fcomps
push
jge
mov
or
scas
int3
mov
pop
enter
mov
in
orb
ljmp
inc
cwtl
sti
jp
pop
daa
pop
pop
std
xchg
cltd
mov
fimull
add
lahf
add
std
xchg
scas
pop
loop
ds
fadd
or
orb
mov
adc
add
mov
loope
adc
ds
xchg
leave
enter
adc
push
rcrl
push
xchg
dec
push
push
xlat
or
popf
mov
adcb
fbstp
inc
inc
mov
and
and
rorl
xchg
out
iret
jmp
out
mov
sti
mov
jl
inc
rcrb
jl
dec
insb
push
cmp
mov
imul
adc
xchg
dec
and
pop
pop
cwtl
jmp
lcall
test
add
pop
mov
lahf
nop
out
add
lahf
pushf
ret
outsl
cmp
das
pusha
stos
mov
mov
int
cwtl
js
movb
repz
xor
lea
or
adc
sbb
xor
aaa
mov
ret
adc
or
clc
shl
out
jp
jns
xchg
aam
pop
daa
push
xor
and
or
popa
sbb
movsl
xor
mov
roll
push
pushf
inc
xchg
test
repnz
sbb
or
xor
push
js
adc
lret
push
ss
add
mov
dec
in
sub
negb
imul
inc
test
jb
push
mov
cmpsb
xor
fs
out
inc
xlat
lea
sub
inc
inc
mov
dec
movb
push
and
out
jmp
dec
and
lcall
inc
sahf
outsl
in
add
or
dec
xchg
out
lea
mov
xor
std
ljmp
sbb
clc
jmp
popa
mov
mov
int3
aam
int3
mov
jmp
add
hlt
mov
les
das
mov
sbb
mov
or
aas
call
addr16
pusha
jle
popa
pop
std
std
jnp
add
push
push
mov
pop
outsl
movsl
lret
fcomp
out
je
iret
nop
aam
sahf
sbb
xchg
pusha
sti
xchg
dec
add
jb
sub
fucom
scas
inc
mov
insl
push
sub
cwtl
dec
in
mov
test
mov
xor
clc
dec
xchg
mov
sbb
dec
add
lock
int3
add
jp
mov
test
cmp
gs
scas
cmp
clc
jecxz
arpl
jge
xor
jmp
in
and
fdivs
mov
mov
mov
jno
jmp
add
std
fdivrl
add
push
jl
adc
cmp
mov
popf
lahf
mov
mov
inc
loope
push
push
loope
push
xchg
jno
test
aam
out
dec
lahf
into
or
sbb
push
cmp
cmp
mov
gs
inc
and
rclb
jge
fadds
xchg
add
rcrb
sub
and
push
xchg
fstpt
out
mov
mov
mov
adc
mov
sub
jle
jae
decl
and
sti
or
test
inc
xor
cmpl
fucomp
daa
xchg
jl
jns
pop
inc
jnp
decb
daa
xor
call
xor
or
adc
data16
sub
repz
mov
or
xchg
mov
loopne
or
inc
dec
xor
and
add
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
pusha
sub
push
jns
sbb
pop
xlat
pop
jl
repz
enter
ljmp
cmp
icebp
repnz
js
out
int3
repnz
mov
pusha
insb
pop
imulb
adc
and
or
mov
adc
xchg
dec
jg
push
in
pusha
jl
push
movsb
cmp
mov
iret
mov
xchg
mov
or
aaa
sub
xor
negl
mov
pop
xchg
gs
out
dec
sub
les
add
loope
push
stos
add
jmp
lock
mov
lock
mov
jmp
sbbl
xchg
sbb
or
push
iret
jno
xor
nop
fists
std
dec
ljmp
hlt
mov
or
push
in
pop
xchg
xchg
aas
stc
je
mov
aaa
je
mov
inc
jae
imul
mov
out
icebp
popa
pop
in
pop
cmc
mov
push
push
scas
sbbl
pushl
pop
cmp
outsb
inc
cmp
std
pshufw
outsb
or
hlt
out
into
das
push
sub
stos
and
rclb
sbb
lea
xlat
dec
fcmovu
scas
xchg
or
in
pop
inc
inc
repz
test
adc
pop
or
push
jbe
mov
mov
aaa
cmpsb
cmovbe
rcl
fsubs
xor
mov
jge
xor
test
sbb
imul
imul
dec
rclb
stos
orl
pop
sbb
mov
imul
xchg
mov
pop
fcmovnbe
mov
or
fwait
xchg
dec
sub
lods
push
rolb
and
repnz
or
rclb
stos
sub
push
jle
enter
push
cs
push
loopne
sahf
scas
lock
test
out
ret
int3
outsl
xchg
mov
addl
push
ficomps
lods
push
xor
mov
lock
sub
push
sub
dec
test
pop
jno
jbe
mov
adc
into
mov
loope
xor
dec
push
fwait
pop
in
cwtl
hlt
jmp
ds
xor
pop
mov
out
sbb
dec
push
sbb
adc
pop
push
es
pop
fs
push
mov
rclb
aaa
pop
orb
shr
pop
xchg
outsb
pop
sub
clc
cmp
push
inc
jmp
jle
push
cmp
mov
cmp
xor
xchg
in
dec
mov
xor
movsl
mov
ja
cmp
test
rorl
fwait
jl
test
and
cltd
addr16
jg
cmc
roll
popa
xchg
mov
jge
xchg
out
xor
mov
inc
inc
popa
cmpsb
lcall
hlt
sar
mov
sub
imul
mov
jecxz
pop
push
mov
aas
popa
dec
dec
sub
sub
or
sbb
lods
dec
mov
ja
scas
imul
test
sbb
push
or
sub
sbb
or
std
add
jecxz
ror
in
repnz
push
into
mov
rorb
into
int3
mov
ret
push
or
mov
mov
mov
inc
inc
inc
popf
mov
jmp
push
and
mov
stc
data16
mov
or
push
or
pop
adc
lret
xchg
into
insl
mov
add
cwtl
gs
cmp
in
jle
imul
arpl
xchg
aam
incb
daa
test
je
cmp
scas
pop
mov
adc
mov
aad
xchg
xor
jle
mov
and
filds
pop
fnstenv
mov
mov
jno
sbb
scas
clc
imul
shlb
and
dec
or
cli
push
mov
std
or
sbb
pop
push
adc
shrl
iret
mov
adc
test
sub
icebp
sbb
adc
cmp
pop
clc
jecxz
pushf
out
inc
dec
movsb
adc
fnstcw
sahf
add
push
scas
sub
rorl
ljmp
sub
cmpsb
ret
outsl
lods
sbb
fcomps
sub
sbb
jle
or
mov
or
pop
jle
addr16
ret
andb
xlat
fnstcw
in
push
push
stos
pop
sub
arpl
push
fs
pop
pop
jle
mov
lret
pop
xchg
loope
pop
cld
dec
and
cmp
jmp
sbb
push
cmp
cmp
addb
inc
stos
imul
popw
fidivs
jmp
pop
divb
scas
mov
add
leave
inc
ljmp
cmpsl
xchg
sub
rcrb
aaa
push
inc
daa
sbb
cmpsl
scas
mov
cmpsb
lea
divl
push
or
xchg
popa
sub
add
dec
push
mov
sbbl
dec
add
cmc
jns
or
jmp
jg
sbb
insl
loopne
pop
cs
add
ss
decl
adc
into
cld
icebp
dec
sbb
arpl
addr16
fstpl
pop
lahf
push
subl
lcall
pushl
aaa
ds
pusha
orl
xor
add
outsl
out
mov
pop
cs
push
or
popf
daa
sarb
adc
idivl
das
imul
sbb
jno
sub
add
call
sbb
push
movsl
sub
adc
inc
lret
xchg
ja
pop
int3
xchg
jl
int
jb
out
inc
in
xchg
stc
or
in
lods
jg
je
pop
adc
pandn
sbb
lcall
aad
repnz
insb
jl
xchg
inc
clc
mulb
in
adc
lds
pop
cmp
stos
shl
insl
xchg
xor
push
push
out
add
das
push
fwait
ret
mov
lcall
push
in
pop
sbb
popf
add
call
hlt
dec
xchg
aas
lods
shr
mov
inc
add
xor
jb
push
sbb
pop
inc
push
in
fs
mov
sbb
mov
sbb
jns
call
push
inc
sti
mov
jg
sub
std
jg
movsb
xchg
aaa
sarb
test
ja
lock
dec
xchg
push
push
adc
jge
push
inc
call
inc
add
cmp
ja
add
loope
add
cmpsb
pusha
lahf
cmp
leave
shl
mov
inc
mov
sbb
hlt
int3
mov
sub
adc
negb
lret
push
sub
movsl
pop
mov
cmp
into
mov
cli
sti
inc
mov
mov
mov
adc
jae
testl
montmul
cmpsb
ret
incb
inc
inc
mov
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
js
js
stos
pop
add
or
gs
mov
call
mov
and
movsl
cltd
cmp
jae
push
adc
dec
sub
lret
pop
movsb
jecxz
insb
cmp
insb
mov
sub
xchg
lret
sti
inc
jb
mov
jmp
mov
cld
sbb
adc
in
test
sub
push
popa
test
iret
pop
mov
arpl
insb
daa
fisttps
imul
or
adc
sti
loopne
test
or
xchg
mov
sbb
pop
out
adc
mov
push
lcall
push
pop
xchg
mov
add
xchg
jae
mov
aam
xchg
dec
mov
jg
xchg
jp
mov
lcall
scas
test
push
mov
jns
arpl
faddl
inc
pop
mov
sbb
mov
pop
cmp
lret
in
data16
sub
xchg
popa
ljmp
andl
xor
in
pop
in
or
fmulp
out
xor
mov
xor
push
adc
pop
movsb
add
subl
fdivrl
daa
mov
dec
jns
lock
xor
mov
or
loop
or
loope
shrb
mov
addr16
in
mov
sahf
sbbl
jmp
insb
inc
xor
push
nop
mov
xchg
sub
mov
and
push
mov
xchg
scas
push
sti
loope
loop
push
xlat
jbe
in
pop
dec
mov
push
cmp
sbb
dec
scas
ret
cld
aam
jb
jmp
nop
mov
call
mov
clc
mov
or
mov
lcall
lods
dec
loop
ljmp
sub
pop
mov
gs
daa
imul
xchg
mov
add
inc
cmpsb
movsl
rcr
push
inc
in
mov
adc
jmp
jmp
sbb
hlt
xor
in
add
stc
mov
cs
aad
jbe
or
mov
mov
jo
pushf
js
lret
gs
jg
jno
dec
push
ret
xorl
xor
imul
sahf
push
in
incb
pop
mov
push
or
inc
inc
mov
pusha
pop
jo
or
inc
sub
orl
ret
stos
mov
pop
add
sbb
sbb
adc
ss
mov
decb
test
outsl
mov
fiadds
in
imulb
sub
out
shl
push
push
in
sbbl
or
mov
add
scas
push
xor
or
adc
mov
jg
sub
out
sub
movb
add
roll
ret
nop
sbbb
ret
xor
mov
cmpsb
and
push
stc
stos
ret
fcom
call
cmp
xor
je
xchg
xchg
jecxz
jno
jnp
das
ret
xchg
scas
adc
mov
data16
jg
mov
jns
inc
cli
mov
daa
std
xchg
aaa
or
sub
xor
stos
mov
sbb
dec
push
in
fwait
notb
nop
sub
rcrl
pop
into
jbe
and
add
sbb
mov
cltd
sub
push
push
loope
push
stos
dec
loope
pop
or
mov
imul
mov
fcompl
orl
jle
or
out
repnz
cmp
mov
in
push
fcmovb
and
fdiv
cld
mov
cli
adc
xchg
lea
xchg
test
or
push
add
xor
add
mov
fwait
mov
sbb
gs
mov
lods
into
lea
insl
test
rolb
imul
xchg
lea
jnp
lods
mov
jb
rorb
jmp
push
faddp
divb
fwait
jne
push
roll
inc
xlat
lahf
sbb
std
mov
cld
out
push
repnz
xor
xor
cmpl
ljmp
pop
call
jae
xchg
aam
aad
inc
mov
std
adc
dec
jae
inc
push
imul
push
outsb
cmp
mov
pop
cmp
out
negl
bound
fisttpll
mov
icebp
out
adc
or
dec
into
sub
ficompl
inc
inc
mov
pop
mov
jmp
mov
sbb
xor
popf
cmp
dec
jbe
push
decb
testb
dec
test
dec
inc
push
pop
mov
das
or
pop
arpl
call
call
cmpl
outsb
imul
cmpsb
push
mov
sbb
jmp
cli
lds
adc
xchg
or
xchg
lret
inc
sbb
xchg
sbb
cli
lds
add
mov
cmp
or
mov
adc
imul
stos
fldenv
jnp
jge
icebp
push
mov
mov
jb
xor
cmp
rcr
add
fwait
imul
mov
xor
out
out
xlat
push
arpl
jo
pop
bound
jbe
cli
in
mov
cmpsb
gs
mov
sbb
ret
lret
andl
loope
pop
inc
add
ret
pop
lock
aam
pop
push
sbb
add
mov
push
fiadds
fadd
adc
jge
and
lret
inc
inc
xchg
xor
mov
rorb
into
popf
cltd
js
xchg
push
scas
xor
leave
repz
jo
stos
inc
iret
adc
pop
pop
add
out
and
and
sub
test
and
fisubl
iret
inc
out
adc
pop
xchg
inc
outsb
mov
ss
in
dec
fstpt
scas
inc
jae
inc
rep
mov
lods
scas
sub
push
dec
push
add
mov
arpl
push
push
cmp
or
out
std
jnp
movsl
jle
add
mov
push
mov
sub
inc
sbb
rolb
aad
lods
xor
inc
addr16
add
dec
bound
dec
out
int3
sbb
fistpl
in
scas
in
add
xor
sub
scas
mov
mov
sub
enter
cmc
rdtsc
and
out
std
lock
scas
push
dec
dec
stos
fistpl
sahf
xchg
mov
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
jno
sbb
dec
add
sbb
sub
in
testl
jp
fsubl
jae
or
jo
pop
loope
or
or
out
dec
push
jmp
dec
pop
add
daa
test
jp
or
pop
cmp
mov
jmp
jle
in
push
shrb
mov
out
mov
fstps
cwtl
push
sub
pop
cmp
sub
sbb
push
mov
fistps
das
out
and
and
in
repz
cwtl
xchg
test
mov
out
cmpsl
daa
enter
dec
jo
jo
pushf
inc
cmp
mov
lret
pop
subl
jne
lret
xchg
popa
xor
nopl
fcoms
shlb
insb
aaa
mov
pop
xchg
sub
xor
cmpsl
pop
xor
xor
lret
xor
lods
popa
mov
sbb
lds
js
mov
lret
movsl
data16
xor
es
dec
adc
push
test
or
mov
adc
inc
push
xor
inc
int3
jmp
sub
xchg
jo
outsb
and
je
es
test
xchg
cltd
xchg
push
cmp
or
adc
out
sarb
mov
faddl
push
lods
dec
push
fwait
mov
inc
or
imul
cmpsl
into
sub
lea
outsb
xchg
popa
aam
cmp
mov
xchg
cmc
add
xor
cmpsb
pop
bound
ror
push
add
shl
mov
lds
aad
xchg
rolb
mull
lods
fstpl
dec
xchg
pusha
mov
fisubrl
aam
iret
in
sub
or
popa
imul
lahf
rorl
adc
cmp
cmp
out
sbb
lret
push
xchg
js
nop
jno
out
fimull
loope
adc
outsl
pop
sub
or
ficomps
jno
cmp
pop
adc
mov
pop
jp
push
std
jl
gs
sbb
test
and
cmp
dec
cmp
sub
vcvtdq2pd
mov
dec
jae
lahf
cli
popa
and
pop
add
push
in
push
mov
rolb
cmc
push
insb
or
dec
mov
pop
lea
data16
and
mov
in
mov
mov
mov
sbb
add
fcmovne
aaa
lret
js
add
lret
fildl
xor
jle
add
or
adc
xor
lret
stc
stos
adc
lods
insb
clc
inc
jo
fs
enter
xchg
testl
lods
lret
lret
sbbb
inc
test
adc
xchg
cmp
movsb
icebp
add
fwait
iret
mov
xchg
dec
aam
adc
addr16
inc
push
sub
xor
sub
subl
dec
ja
hlt
sub
pop
mov
fsubrl
sbb
loop
sbb
or
sbb
out
pop
ljmp
in
pop
popa
pop
bound
cmp
pop
in
adc
roll
mov
xchg
cwtl
filds
xchg
pop
xchg
lcall
insl
loop
fstpl
xchg
and
inc
sub
cltd
adc
xchg
push
jne
test
out
mov
pop
mov
cld
aas
fxch
in
add
cwtl
sbb
out
inc
ficoms
std
ret
repz
les
lods
subl
pop
add
pop
hlt
add
sbb
pop
cmpsl
xorb
aad
push
add
fisttps
and
inc
mov
jg
add
pop
jl
mov
jle
or
cmp
xor
lods
push
mov
les
lret
sbb
rolb
cli
jb
iret
testb
or
pop
mov
icebp
push
cmp
xor
pop
shll
sbb
adc
fbld
cmc
dec
mov
scas
inc
adc
lods
mov
in
inc
arpl
std
or
inc
iret
rcll
mov
inc
push
ja
jl
sahf
cmpl
lea
test
add
hlt
adc
sub
jne
out
out
jns
test
pop
sahf
cmpl
inc
leave
sbb
or
adc
adc
jecxz
lea
pop
lods
fnstsw
push
inc
ds
in
push
iret
pop
and
ljmp
pop
xchg
loope
ss
je
out
mov
cmpl
popa
and
ret
or
rolb
adc
inc
push
add
out
std
ds
rclb
inc
or
mov
ja
cwtl
cmc
fs
andl
imul
popf
ja
enter
fnstsw
push
ret
shlb
push
xor
inc
loopne
cwtl
and
repz
insb
dec
insl
mov
into
in
test
hlt
icebp
pop
lds
loope
dec
mov
mov
sub
scas
inc
add
inc
pop
loop
sub
in
mov
or
jmp
mov
jns
sub
or
sub
sub
pop
stos
daa
mov
mov
fstpl
mov
dec
add
cmpsb
fsts
inc
ljmp
rcr
cmc
fcomi
loop
xchg
aad
daa
test
sbb
push
test
cmp
adc
sbbb
popf
mov
mov
std
jno
pop
sbb
es
mov
sub
mov
push
icebp
arpl
dec
pop
vcvtsi2ssl
cmp
orb
mov
das
mov
add
loopne
stos
mov
xor
movsl
or
sbb
das
shrl
and
push
lret
leave
cmpsl
inc
mov
adc
mov
dec
push
sti
push
arpl
js
sub
data16
add
adc
pop
pop
shl
mov
movsb
cmp
add
insb
push
jne
fmul
xchg
test
mul
les
mov
ficoml
adc
dec
mov
lret
jp
mov
std
add
adc
and
sahf
sub
xlat
add
dec
jl
into
inc
sbb
mov
idiv
test
aam
dec
lret
mov
enter
and
data16
aas
nop
test
jo
and
in
shll
aad
and
add
lahf
push
cmp
xor
imul
and
repz
repnz
and
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
xorl
push
add
sbb
mov
xchg
push
arpl
addr16
and
in
or
jge
outsl
test
imul
jb
leave
aad
cli
addl
repz
mov
cmc
rorb
cld
push
pop
add
or
xchg
push
or
pop
mov
jecxz
cmp
pop
sub
push
test
and
cmp
sbb
xor
cmpsl
dec
scas
add
lea
lods
and
jge
mov
inc
or
out
int3
addr16
cwtl
mov
iret
addr16
jb
aam
es
pop
imul
jp
push
aas
mov
xor
pop
push
pop
mov
dec
aad
ror
mov
fsubrs
rcrl
stos
cmpsl
pop
ret
push
nop
jle
cmpsl
push
mov
outsb
test
addr16
sub
and
dec
cmp
sbb
shlb
cwtl
mov
ficoms
iret
outsl
sti
dec
insb
adc
cmpsb
ret
bound
cmc
jns
sbb
jne
cmp
repnz
negl
fnstsw
sub
inc
mov
cmp
add
fisubrl
das
leave
adc
fnsave
cmpsl
cwtl
jg
stc
stc
sti
pop
ret
inc
jae
shrl
stos
push
push
inc
je
fnstcw
mov
sub
mov
push
push
mov
push
add
out
data16
iret
push
hlt
jg
lret
cmp
mov
aad
xor
add
or
adc
mov
daa
push
fisubs
mov
pop
cmpsb
test
leave
jns
fs
enter
ret
pop
outsl
push
je
jle
or
jle
rorl
inc
loop
rorb
fmul
pop
or
lock
sbb
push
lret
cmp
xchg
fnstsw
in
in
es
stos
pop
test
gs
jnp
movsb
push
lcall
xchg
mov
sub
adc
pop
icebp
and
fucomip
mov
arpl
pop
sbb
movsb
imul
arpl
insb
mov
rorb
mov
sub
adc
data16
les
dec
nop
xchg
cli
repnz
cltd
js
cmc
sahf
iret
and
mov
aam
mov
mov
lods
jbe
add
repnz
outsb
xor
xor
cld
out
hlt
or
xchg
loop
mov
mov
or
push
sub
and
cmp
and
clc
cmp
inc
pop
in
push
test
mov
call
inc
mov
add
orl
mov
inc
xchg
lock
ret
lds
cmpsl
ret
mov
test
imul
fistpll
gs
xlat
jle
pop
dec
jg
loope
inc
xor
cmp
sub
lods
cmpl
movsl
or
rolb
shl
xchg
xchg
shll
or
insb
aaa
test
outsl
fsubl
call
jbe
icebp
sbb
mov
xor
int3
cs
sub
leave
mov
cmp
test
inc
es
xor
mov
push
sarl
mov
and
inc
pop
lret
fstl
add
mov
mov
data16
imul
out
sub
ret
daa
mov
out
adc
lods
xor
xor
sbb
mov
insl
jb
shl
rorl
ja
call
pop
push
loopne
mov
ds
sbb
stos
dec
std
imul
sub
stos
mov
in
or
pop
call
aas
push
and
and
and
jp
push
out
nop
or
add
jp
sub
out
mov
pop
test
repz
add
sub
bound
add
jb
and
mov
cmp
sbb
mov
sbb
fildll
sbb
out
fldt
and
aam
add
aas
leave
insl
or
mov
ljmp
adc
pop
or
sub
dec
enter
orb
adc
nop
fiadds
fcmovnbe
mov
enter
mov
xorb
aad
xchg
mov
push
fs
pop
shrb
bound
imul
or
rcrl
adc
addr16
add
pop
cmpsl
lahf
das
in
xor
cmp
test
mov
dec
in
loop
in
lds
pushf
stc
inc
pusha
int
aaa
sub
pop
sbb
imul
cmpsb
cs
imul
or
dec
sub
lea
xor
push
jmp
lret
mov
jns
sub
pop
xchg
mov
stos
int
xlat
mov
fadds
lock
dec
fisubrl
lea
sbbb
dec
mov
loope
or
add
loop
aas
jo
fs
movsb
xchg
sub
mov
and
rcll
iret
adc
mov
out
add
or
fcoms
loop
imul
test
cmp
in
movsb
daa
test
push
lret
cmp
insl
vmovhps
test
jo
jecxz
dec
enter
sbb
ds
pop
xor
movd
mov
sub
cs
inc
outsb
pop
loop
xchg
mov
xor
or
push
xor
roll
jne
jb
pop
mov
pusha
push
or
cmpsb
xlat
lea
mov
sbb
mov
hlt
xchg
leave
or
push
mov
jmp
mov
adc
in
mov
arpl
sbb
push
pop
orl
imul
sbb
push
mov
outsl
or
cmc
ljmp
test
xor
mov
mov
jb
pop
or
and
shl
mov
les
sub
xor
xchg
idivb
addr16
imul
out
loope
nop
rcll
lea
fmulp
sahf
and
mov
lods
dec
jecxz
fcoms
pop
je
cs
pop
xor
mov
jp
mov
push
or
rcr
mov
sbb
idivb
pusha
inc
arpl
mov
shlb
and
and
inc
out
pusha
lea
cmpsl
mov
movb
xor
fistps
popf
test
ret
fucom
shrl
fisttpll
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
lahf
and
add
inc
cmp
loope
fisubs
jge
loop
lcall
adc
jb
fcompl
pop
rolb
adc
mov
jns
rcrb
nop
in
mov
mov
subb
cmp
jle
aaa
pop
insb
and
mull
inc
stos
cld
lret
test
lock
inc
add
aam
out
or
lock
cmp
inc
and
es
adc
dec
sti
sti
cmc
pop
add
inc
fsubrl
xor
xchg
adc
and
pop
icebp
fst
push
jo
sbb
out
pop
loope
mov
push
fisttpl
push
dec
add
inc
aas
iret
lret
pop
mov
cs
sbb
jbe
sbb
push
icebp
push
xchg
pop
inc
movups
hlt
xchg
sarb
jae
xor
ficoml
outsb
sbb
cmp
mov
mov
and
lahf
add
xor
daa
clc
sbb
xchg
out
xchg
ds
mov
shll
and
dec
scas
cmpsb
rcr
dec
or
or
hlt
cli
mov
pop
scas
add
test
test
push
hlt
jnp
xchg
mov
mov
jge
repz
cwtl
fldcw
mov
and
pop
sub
xlat
mov
stos
adc
addr16
loop
rcrl
cli
pop
loop
cmp
and
xor
jl
sbb
jle
out
sbb
cmpsl
loop
jg
pop
sti
sbb
add
mov
outsb
inc
call
mov
xor
rolb
xchg
fwait
lods
mov
jge
add
sub
cmp
sarb
cmp
mov
mov
imul
and
fnstsw
inc
daa
bound
loopne
test
mov
xchg
js
xor
add
xor
lahf
jl
ja
daa
rclb
icebp
testb
xchg
mov
xor
or
ja
out
imul
icebp
add
pop
pop
pop
lock
mov
pushf
shll
lret
inc
mov
in
js
aas
fadds
pop
loop
xor
rol
loopne
lret
out
xor
dec
test
outsl
dec
scas
int3
lret
ror
int3
lcall
adc
and
pop
jecxz
mov
push
mov
push
adc
cld
hlt
popf
cltd
fdiv
mov
aas
imul
mov
xchg
lock
fbstp
jmp
xchg
aam
sub
sbb
mov
out
pop
adc
clc
not
andl
mov
je
xchg
mov
pop
mov
jl
shrl
sbb
sub
fnstcw
add
xchg
lea
lcall
movsb
cld
int3
andl
ss
xor
push
jb
push
mov
ljmp
push
push
inc
dec
shlb
movsb
sbb
fwait
mov
cmp
mov
push
ficompl
push
outsl
mov
pushf
popf
ds
jne
xor
aam
jg
push
xchg
adc
mov
cltd
mov
fadd
push
mov
xchg
xor
lea
les
cwtl
inc
xchg
jae
stc
push
jae
xchg
lret
xor
icebp
pop
inc
cmp
inc
cmp
push
lcall
in
lea
jne
mov
sahf
jl
sbbl
loop
mov
adc
repnz
jb
and
sub
in
fsub
sbbl
push
and
jge
sbb
fnsave
adc
aaa
enter
jae
in
add
es
mov
inc
mov
test
push
js
jns
mov
stc
iret
cmp
cli
call
cwtl
leave
cwtl
or
add
clc
mov
mov
pop
jg
add
mov
cmp
mov
pop
xchg
ficomps
mov
mov
dec
gs
or
dec
mov
into
adc
add
add
pop
jo
nop
adcl
aad
dec
stc
clc
outsb
cmp
rcrb
cmp
stos
fs
push
notb
and
ss
dec
int3
int3
pop
cld
dec
sti
out
fstpl
mov
testl
frstpm(287
dec
cmc
adc
mov
sbb
inc
push
inc
movsb
push
dec
pop
mov
push
fildl
lret
push
les
mov
je
loop
repz
daa
pop
pop
call
daa
mov
inc
jbe
xor
sub
jmp
fwait
test
in
mov
shll
or
push
xchg
add
pushf
sub
jp
aaa
ror
std
int3
pcmpeqd
shrb
dec
in
push
dec
filds
jl
call
cli
and
inc
push
push
iret
lds
jecxz
jge
test
push
inc
or
cwtl
push
push
aad
cmp
dec
fcomip
cltd
push
bound
push
test
ds
inc
mov
or
mov
jbe
fisttpll
xchg
mov
xchg
jno
popa
mov
in
inc
imul
jae
pop
fists
into
xlat
adc
jg
cmp
mov
test
add
pop
inc
push
cmp
xchg
aad
fstl
into
sbb
adc
push
stos
into
pop
and
push
pop
add
jmp
lea
and
pop
adcb
jne
xor
dec
in
lea
jo
cmp
push
ffreep
lds
in
movsb
sub
pop
xchg
adc
aas
repnz
out
outsb
outsb
inc
adc
mov
pop
and
movsb
pop
addr16
jp
or
test
xchg
adc
mov
pushf
cmpsb
icebp
cs
fidivrs
scas
pushf
stos
enter
push
mov
push
call
adcl
out
adc
jb
xchg
jns
dec
mov
inc
stc
adc
jbe
xor
jo
push
cmpsl
mov
inc
jb
movsl
jle
pop
sub
rcrb
cwtl
int3
mov
test
jbe
xchg
lods
rcll
rorb
pop
sub
mov
sbb
stos
inc
nop
sbb
in
loopne
aad
repz
xchg
fnstsw
gs
outsb
inc
add
mov
cld
dec
adc
push
int3
in
adc
lret
mov
call
cmc
cmpsb
add
mov
cmc
das
in
sbb
mov
out
adc
imul
pop
jo
inc
add
in
jnp
dec
adc
inc
xor
cli
sti
and
aas
mov
icebp
pop
lcall
mov
xchg
stos
mov
bound
popl
mov
in
inc
xchg
filds
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
pushf
xchg
shll
add
push
push
jp
jnp
cmp
or
sti
loop
inc
dec
insl
or
stos
xchg
dec
push
int3
push
gs
pushf
shll
mov
add
push
lods
mov
cs
add
call
ss
call
out
and
dec
mov
xchg
mov
aad
pop
sarl
xor
fldl
clc
in
loope
or
mov
ret
mov
cmp
insb
jae
lods
movsl
pop
popf
call
add
cmp
lahf
shlb
in
dec
aam
xor
js
leave
fnsave
into
lea
jno
cwtl
add
push
sub
adc
pop
push
hlt
lret
mov
imul
pop
pop
mov
xor
fdivrs
imul
adc
das
xor
push
in
stos
sti
sbb
cmp
cmp
insl
test
loop
sbb
lods
mov
mov
iret
clc
not
lret
pop
sahf
outsl
mov
fdivrl
inc
push
repnz
cli
xchg
inc
sub
mov
xor
shrl
push
cmp
or
rclb
aas
leave
pop
inc
mov
das
data16
lcall
and
leave
xlat
dec
xchg
jb
cli
cmp
rcl
xorl
add
pop
sub
mov
push
int
dec
push
ss
lahf
mov
mov
aad
adc
in
gs
or
fldt
out
dec
cmp
and
dec
in
mov
imul
outsb
sbbl
cmpsb
push
lds
cld
imul
std
fsub
rcll
dec
aad
dec
or
jg
jmp
jl
shll
lea
pop
hlt
sub
bound
gs
and
insl
sbb
lods
movsl
jmp
push
std
adc
xchg
sub
push
push
rorb
mov
rcpps
dec
js
mov
push
hlt
cmc
pop
imul
dec
nop
sbb
xchg
jae
dec
pop
sub
sbb
clc
popa
fadd
gs
aas
aam
xchg
jecxz
loop
jne
add
push
mov
mov
bound
xor
xchg
dec
mov
and
lods
movsl
xchg
cmp
ss
or
cmp
cltd
js
jae
aad
fists
and
sub
mov
cld
or
push
push
jle
cmp
or
pop
out
push
jge
out
jno
shl
aaa
push
push
stc
aam
xor
and
lahf
call
aad
jo
adc
int3
fs
arpl
add
sub
mov
sub
mov
nop
cmpsb
cmp
mov
adc
sub
stc
ss
lahf
inc
jmp
cmp
cmp
inc
call
ss
aad
fcomps
jmp
shl
sbbb
js
out
push
add
push
cmc
out
test
lock
jnp
xor
jmp
pop
sarl
imul
pop
mov
jno
clc
sub
mov
push
pop
cmpsb
sub
popa
xor
loope
jnp
rcrb
sbb
loop
push
sarl
out
stos
adc
es
xor
push
leave
data16
jmp
add
insl
mov
iret
test
divb
fs
js
ja
mov
ljmp
jae
mov
inc
leave
sbb
out
and
xor
movsb
jbe
fwait
jp
sahf
jae
ret
in
sbb
dec
xor
mov
xor
push
dec
sbb
jne
not
push
cmpsb
xor
stos
popf
repnz
push
inc
stos
hlt
imul
out
ja
jg
pop
loopne
in
cmp
mov
std
sub
je
pop
xchg
adc
bnd
mov
mov
daa
into
sbb
pop
dec
cmp
fucomi
xchg
or
lret
popf
and
dec
inc
pop
jae
hlt
xorb
in
out
mov
int3
and
hlt
mov
jne
cmp
daa
dec
lret
pushl
out
inc
insb
sbb
lret
mov
cmpsb
cmp
jno,pn
pop
stc
pop
jg
mov
popf
popa
cmp
mov
cmp
fildll
leave
pop
and
outsl
sbb
push
push
fldz
popf
out
xor
cs
dec
cmp
inc
hlt
lret
cld
jl
mov
jg
stos
pop
mov
lock
int3
xor
loope
xchg
xchg
xchg
inc
or
in
xchg
adc
bound
mov
dec
mov
or
adc
sbb
sub
xchg
insb
lock
jnp
cmpsl
and
fs
push
lahf
icebp
in
imull
jo
cmp
pop
inc
movsb
clc
dec
xor
inc
mov
mov
mov
js
pop
aaa
pop
scas
repnz
push
test
cmpb
int
sub
test
inc
lods
push
rol
mov
mov
popf
fists
and
stos
xor
jp
iret
shlb
sbb
imul
add
adc
test
pop
pop
pop
pushf
mov
jns
dec
into
and
movsb
cmp
add
lahf
mov
dec
pop
sbb
xor
mov
or
jp
sbb
mov
jmp
bound
lcall
in
leave
or
jne
jne
js
dec
pop
xchg
mov
or
lods
dec
jno
sbb
jmp
lds
xchg
in
nop
cmpsb
pop
mov
pusha
push
lret
clc
mov
xchg
and
scas
lcall
dec
pop
xor
xchg
mov
punpckhwd
mov
les
sub
pop
enter
dec
add
rcrl
and
adc
jo
mov
pop
int3
and
push
shrl
adc
pop
fwait
outsb
jno
scas
pusha
add
jmp
divb
ljmp
pop
push
xor
sbb
ja
jl
sbb
stos
shlb
pop
sbb
jp
jns
dec
int3
mov
call
iret
lock
loope
aaa
mov
jle
cmpsl
call
mov
subb
jg
or
dec
jge
xchg
sbb
cmpsl
push
cld
and
jg
or
aad
push
xor
jnp
pop
js
push
or
and
sbb
and
stos
cmp
and
shlb
add
pop
jmp
inc
out
popa
push
std
add
test
outsb
jecxz
xchg
sbb
xchg
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
pop
lahf
push
push
hlt
xchg
fsubrl
push
or
roll
push
dec
cmp
fnsave
shr
inc
fstps
fs
adcb
lret
push
fs
ds
inc
and
mov
orb
pop
push
adc
in
in
xchg
test
xchg
cmpsb
ret
sub
jle
movsl
or
mov
ret
sub
push
pop
xchg
xchg
sub
mov
shlb
xchg
lret
je
lds
push
jle,pn
sti
push
lock
xchg
sahf
pop
shrb
inc
and
enter
mov
dec
ret
clc
mov
sbb
jge
call
scas
pop
outsl
add
inc
dec
neg
xor
inc
mov
sub
xchg
out
add
std
cltd
stos
jno
add
adc
outsb
add
dec
inc
sub
in
adc
xchg
jb
popa
jns
test
jb
jl
loop
fldt
xchg
pushf
aas
add
xorl
push
inc
lods
sahf
ret
stc
pop
cltd
test
flds
and
or
mov
or
ljmp
jmp
insb
pop
mov
xchg
push
ret
xchg
push
repnz
into
push
insl
cli
es
add
lea
jecxz
mov
push
mov
xchg
push
cmp
loope
mov
and
arpl
or
das
cmpsl
jne
mov
xchg
mov
lods
sub
mov
mov
push
pusha
movsb
adc
pop
dec
cmp
data16
test
xchg
push
cmp
addr16
cmp
add
jl
ret
mov
pop
outsb
xchg
lret
push
add
sub
clc
testb
les
popa
lods
sbb
in
ret
jmp
repnz
subl
hlt
mov
and
add
push
loope
imul
ds
add
das
add
inc
dec
add
in
leave
lahf
mov
add
xor
leave
jl
fisttpl
mov
xchg
push
iret
xchg
das
sub
xor
sbb
pop
shl
fmul
shll
insb
movl
dec
and
mov
add
mov
in
int3
xor
mov
or
out
cmp
rcll
or
mov
cmp
lods
mov
dec
data16
cmp
mov
cmp
repnz
out
cmp
jne
pop
loope
into
or
xor
inc
xchg
loope
dec
ja
cmp
sub
std
dec
inc
mov
jne
dec
push
scas
cltd
aaa
daa
scas
rcrb
mov
popw
insl
das
push
pop
rolb
cltd
jecxz
inc
mov
xor
scas
fs
cld
add
popf
loope
popa
push
fldt
mov
mov
sbb
adc
or
cmpsb
roll
pop
ret
jae
lds
decl
sbb
lahf
or
dec
in
and
push
inc
insl
imul
sarl
sbb
fisttpl
or
and
ss
fwait
push
mov
shl
inc
fsubs
xor
mov
add
mov
js
dec
sub
dec
int3
loopne
or
xchg
imul
xor
mov
adc
stos
out
cmp
xchg
mov
adc
test
mov
sub
leave
xchg
sub
add
cmp
xchg
popa
xlat
add
mov
inc
pop
xchg
or
dec
push
pusha
test
mov
push
add
jecxz
jecxz
rolb
lock
aaa
mov
sbb
rcrl
out
ret
fldl
shll
inc
mov
insl
cltd
fisubrl
mov
ds
sub
pop
mov
pop
or
in
rcrl
test
mov
loop
test
pop
es
jb
add
push
jne
cmpsl
ljmp
lods
int
mov
jge
fstp
je
or
ja
inc
bound
or
insl
daa
dec
xchg
mov
mov
xchg
in
in
cli
push
jne
add
mov
pusha
clc
mov
movsb
es
pop
out
inc
xchg
or
pop
sbb
push
cmc
aas
jns
int3
icebp
push
scas
jbe
hlt
stos
xchg
test
add
and
mov
aaa
push
nop
xor
adc
cmc
sub
xchg
orb
jge
addr16
jge
outsb
aad
sarb
cmp
push
mov
js
and
push
movsb
lret
mov
mov
ror
sbb
nop
call
movsb
sub
mov
cs
mov
push
stc
fstl
or
jg
jge
into
adc
push
add
in
aas
lret
shl
fs
mov
repz
outsb
pusha
xor
xlat
mov
adc
pop
jae
cld
in
sbb
cmp
mov
or
xchg
adc
les
inc
je
cmp
adc
ljmp
jae
mov
insl
aad
shll
or
js
xchg
jge
jle
cs
mov
aam
pop
es
into
push
mov
jl
push
xor
pop
shl
pop
mov
hlt
xchg
push
mov
les
outsb
jae
cltd
leave
divl
sbb
insb
out
mov
insl
dec
or
call
pop
shrb
loope
xchg
push
dec
push
cmp
xor
cmp
sub
sbb
mov
push
pop
jecxz
jge
fs
inc
fstl
mov
jmp
sub
cmp
add
push
das
jl
jl
mov
jge
fnsave
push
xor
push
popa
mov
pushf
testl
sub
es
stos
push
xor
js
into
les
sbbl
jae
in
ss
xor
cmp
or
pop
mov
push
ret
adc
push
mov
jge
out
push
insb
repz
push
dec
mov
xor
cmp
push
push
test
inc
pop
push
push
inc
nop
lock
call
sbb
mov
test
adc
mov
stc
sbb
ret
addr16
and
lret
add
dec
hlt
gs
out
mov
out
sbb
nop
cmp
mov
ljmp
nop
dec
je
pop
sbb
aaa
xchg
daa
or
pop
lods
popa
pop
xchg
jge
jae
push
sub
mov
cmpl
cmc
dec
popf
shr
add
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
dec
inc
or
add
cmpsb
push
cmp
popa
jp
scas
es
int3
xchg
repz
aaa
out
inc
lret
fidivs
pop
sahf
int3
jns
cltd
iret
mov
std
shl
mov
loopne
int
fmul
push
inc
addr16
test
std
mov
pop
push
fstpl
jle
or
sbb
das
fisubl
and
sbb
loop
and
inc
fisubl
cmp
mov
xchg
cmp
out
adc
pop
sub
mov
fcoms
es
xor
cmp
aad
inc
xchg
mov
push
jmp
out
mov
mov
cmpsb
stos
add
jp
sub
jmp
das
mov
cld
cmpsl
ret
pop
insb
cmpsb
jbe
ss
or
dec
lcall
adc
mov
cwtl
push
mov
inc
cwtl
cmp
pop
dec
add
cmp
aaa
or
and
xlat
sub
out
inc
jl
xchg
pop
xor
into
out
jge
test
mov
in
or
enter
pop
nop
pop
push
imul
mov
popa
add
jne
stos
cwtl
fbld
mov
xchg
lods
mov
push
inc
cmpsb
mov
push
jmp
mov
rclb
jno
or
call
repnz
outsl
fwait
test
ljmp
int3
xor
je
mov
stc
jae
leave
aas
cmovle
jbe
jno
scas
xchg
into
call
sbb
lcall
push
std
imul
enter
lahf
test
sbb
in
sbb
cmpsb
mov
xor
divl
push
xchg
addb
daa
test
jle
adc
repnz
and
popa
jnp
xchg
js
hlt
lea
add
mov
daa
mov
inc
push
push
movsl
jge
aam
dec
jae
lret
movsb
movsl
loop
test
and
imul
roll
popa
idivb
push
pop
adc
ret
xor
sbb
mov
lahf
xor
cwtl
and
mov
hlt
leave
xchg
jno
testl
push
jge
mov
fisubrl
enter
cmpsl
and
pop
push
inc
std
sbb
dec
push
xchg
ljmp
mov
cmpsl
push
xor
pop
push
rol
jns
inc
movsb
jno
pop
sbb
loope
clc
sbb
aam
call
xchg
jnp
push
loopne
gs
jne
aaa
arpl
cmp
jne
adc
pop
push
sti
roll
lret
test
rcr
add
lahf
adc
xor
xchg
movsl
dec
jno
pop
fiadds
lret
add
in
or
jb
mov
shlb
push
xchg
adcl
test
mov
ljmp
rorl
inc
add
js
adc
dec
adcl
jb
push
dec
jmp
lea
xchg
mov
insb
xchg
clc
jl
xchg
xor
push
xor
pop
insb
adc
adc
flds
in
call
xchg
das
leave
cs
or
xor
aas
adc
xchg
xchg
in
sbb
inc
mov
lock
ss
push
sbb
jp
inc
or
adc
ficompl
popf
push
and
lods
std
jbe
fnstenv
pop
dec
in
in
jns
pop
fimuls
mov
out
adc
fbstp
fnstenv
jno
jb
std
cwtl
lcall
imul
movb
mov
xchg
inc
call
jno
inc
mov
insl
cmc
nop
mov
in
jmp
adc
push
es
in
int
sahf
xor
hlt
jg
divw
and
mov
lret
fcoml
insb
add
lcall
cs
stos
sub
sahf
jns
rcrl
adc
movsl
and
mov
pop
xchg
aaa
loop
addr16
imul
inc
out
add
inc
mov
loop
mov
jo
xchg
out
adc
xchg
dec
jbe
mov
into
ljmp
sbb
sub
stc
fucomi
push
sti
rol
pushf
insb
xchg
popf
mov
or
xchg
sub
sti
adc
inc
out
jg
xchg
xchg
out
ds
push
push
pop
sahf
xor
movsl
lret
push
cli
enter
ljmp
imul
push
mov
dec
sub
ja
call
rcr
and
lret
sub
or
xor
push
lods
add
lret
int3
mov
dec
fiaddl
test
lds
pusha
cwtl
push
mov
sub
into
mov
mov
ljmp
or
adc
mov
mov
push
xchg
fiadds
bound
cmc
inc
pop
jmp
sbb
rcrb
mov
sub
push
das
je
fbstp
mov
cmc
mov
jne
icebp
mov
jge
xchg
into
sbb
aaa
mov
lock
mov
jns
dec
sub
stc
shll
sub
or
jmp
icebp
add
sub
addl
or
jmp
shr
and
jl
mov
mov
cmp
push
cmp
shl
loop
jnp
xchg
rorb
nop
rol
and
jbe
stos
into
outsl
fwait
or
lea
cmpsl
jno
fnstsw
cs
xlat
mov
int
and
repz
fsts
inc
mov
pop
push
cmpsl
add
sbb
lcall
imul
outsb
ljmp
or
jbe
add
or
inc
stc
std
jecxz
xchg
in
and
or
inc
imul
mov
adc
bound
inc
sub
mov
aaa
cs
test
outsl
fs
mov
pop
lods
adc
into
add
pop
sub
sti
fcomi
pop
insl
insl
push
js
outsl
push
xor
into
sahf
sbb
cmp
sbb
mov
add
dec
lahf
mov
jno
mov
pop
cmp
dec
scas
in
or
imul
int
xor
mov
popa
in
outsb
mov
mov
add
xchg
int
xor
loopne
fisttps
inc
mov
cmp
adc
scas
dec
cs
mov
fdivr
pop
in
cmp
pop
pop
leave
aas
pop
out
rcr
mov
pop
jno
adc
test
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
das
jb
add
add
js
jo
mov
divl
imul
ja
dec
adc
andl
jbe
xlat
jno
les
mov
std
ljmp
and
sbb
fidivl
xchg
fs
xor
nop
xchg
xchg
or
adc
or
icebp
xchg
ja
dec
fwait
pop
std
mov
jl
aas
sbb
xlat
mov
mov
ds
testl
loopne
clc
dec
cmp
enter
xor
jae
jle
dec
into
adc
push
mov
dec
icebp
push
push
fst
ror
pop
or
jo
adc
notb
add
mov
scas
xor
fdiv
dec
cmp
sub
and
jmp
xchg
sbb
sub
out
xchg
and
enter
push
dec
mov
test
sub
js
lods
pop
xor
cmp
out
test
or
out
loopne
add
jnp
cmp
add
sbb
daa
aam
or
outsl
rcrl
xor
imul
inc
inc
push
push
sbb
nop
int3
shlb
js
mov
cmpsb
mov
jbe
addr16
adc
xchg
cmp
adc
mov
lds
aad
fnsave
jno
in
push
mov
movsb
es
cmp
add
insb
ret
rcrl
add
lahf
dec
mov
hlt
sti
jns
in
mov
into
repz
xor
mov
ds
divl
add
mov
dec
les
fwait
push
insl
push
xlat
cmp
cmp
repz
jbe
or
cmp
inc
push
cmp
xor
fisttps
cld
jge
inc
imul
xchg
repnz
imul
pop
dec
xchg
push
dec
and
jl
pusha
sub
mov
mov
lods
loopne
sarb
dec
outsl
inc
lock
test
and
outsl
add
lock
sti
add
cli
inc
and
shl
cmp
cmc
cmc
cs
stc
pop
or
popa
xchg
mull
lock
or
inc
in
addr16
mov
or
bound
jge
or
shrb
adc
cmpl
push
mov
data16
popa
and
ljmp
xchg
test
pop
pop
movsl
iret
fdivrs
fidivs
decb
shr
ret
sbb
pop
mov
out
mov
pushf
ret
push
xor
push
aam
sti
lods
and
lock
dec
gs
bound
sub
jmp
lods
daa
and
ljmp
dec
aad
and
xchg
mov
subl
in
pop
popa
push
inc
es
jp
sbb
sbb
sbb
push
push
mov
xor
dec
testl
sub
aad
jns
or
sbb
stos
icebp
leave
jl
scas
sub
xchg
orb
add
mov
ljmp
pop
dec
outsl
ja
ss
inc
dec
inc
lret
test
mov
lcall
pop
sbb
sahf
dec
test
adc
sub
mov
lcall
mov
pushf
test
data16
dec
mov
test
stc
adc
aas
leave
outsl
jg
adc
cmpsl
push
add
push
int3
adc
cmpsl
push
out
and
imul
jl
push
scas
fstpl
sub
shlb
jns
xchg
add
dec
sub
dec
movsl
outsl
pop
lret
mov
xchg
cmp
mov
ja
pusha
stc
aad
aas
test
fdiv
int3
aad
or
fidivs
or
jle
sbb
xor
mov
insl
scas
pop
fistpll
push
ja
aam
sbb
repnz
cmp
sarb
push
push
insl
or
incb
call
scas
pop
and
loopne
xor
clc
sbb
jle
inc
push
mov
ds
sti
push
cmp
cs
outsl
lea
jge
jmp
stos
insb
mov
js
aaa
pop
xchg
add
mov
repnz
xlat
jle
xor
outsb
mov
mov
fwait
and
cmp
leave
sti
mov
imul
and
int3
sbb
inc
sbb
cltd
sub
repnz
cmp
sub
and
or
out
mov
jecxz
mov
inc
lret
sub
adc
out
mov
sub
test
adc
pop
lcall
mov
pop
mov
push
mov
arpl
and
mov
xlat
mov
jb
pop
ljmp
or
mov
insl
lahf
jb
and
fmulp
jns
adc
mov
ss
xor
in
lret
mov
xchg
add
push
call
xchg
inc
mov
int3
fs
xchg
adc
or
arpl
xchg
sbb
leave
xlat
xor
mov
mov
jge
inc
lret
hlt
test
push
or
and
test
int
jp
push
mov
sbb
sbb
cmp
fwait
jne
adc
shl
sub
fdivr
fstps
scas
adcl
and
popa
imul
jne
sub
push
or
cmp
shlb
out
add
bound
push
mov
imul
loope
jbe
sub
sbb
xor
push
mov
cld
sbb
mov
stc
push
jl
fdiv
test
mov
adc
xchg
jg
xchg
inc
push
arpl
cwtl
adc
inc
push
jns
pop
push
clc
pop
or
in
push
xor
ss
fistl
dec
int3
sbb
adc
or
gs
push
jmp
xchg
or
iret
call
adc
test
push
pop
out
xor
mov
insb
adc
mov
stos
lcall
fnstcw
adc
or
sti
lods
adc
mov
dec
jne
mov
adc
insb
push
cmpb
xor
std
adc
push
les
iret
cmp
dec
test
cs
adc
adc
lds
fwait
mov
pop
cmpsb
adc
sub
imull
pop
adc
and
lcall
sbb
mov
scas
outsl
lods
outsl
dec
mov
stos
not
jae
in
divl
out
js
sub
inc
lcall
in
ja
sbb
jge
mov
call
lcall
out
xchg
lods
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
dec
lods
dec
push
mov
add
xor
push
sti
add
dec
xor
or
sub
loopne
pop
adcl
sbb
jne
inc
out
mov
jb
mov
sbb
and
out
bound
nop
jecxz
movsl
loop
clc
int
xchg
inc
sub
or
rorl
jmp
sub
cmp
arpl
jecxz
add
fstpt
pusha
cmp
lds
dec
imulb
jae
in
pop
daa
mov
dec
divl
or
jg
out
gs
add
dec
dec
aaa
mov
dec
inc
fdivl
sbb
mov
dec
and
xor
call
lea
mov
sti
fcompl
dec
adc
loope
cmp
mov
in
fisttps
out
aam
sub
xlat
int3
stc
add
ficoms
or
jae
lods
push
out
jb
mov
dec
mulb
cmpsl
sub
push
ja
push
popf
imul
aas
or
sahf
enter
push
push
pop
iret
mov
mov
int3
imul
push
mov
mov
loope
mov
xchg
js
push
sahf
mov
xchg
fisubrl
pop
pusha
jns
pop
jnp
push
leave
notl
xchg
or
out
mov
or
cmc
and
leave
mov
add
adc
cmp
cmp
push
test
mov
mov
mov
fwait
mov
mov
sti
jmp
scas
add
jl
lret
cmp
dec
pop
test
fwait
and
cmp
mov
xor
dec
icebp
push
fidivrl
test
push
xchg
sbb
in
cltd
add
aas
xchg
lods
add
cld
push
adc
mov
adc
subl
push
pop
and
cmp
lret
mov
out
jns
aad
pushf
repz
fwait
mov
mov
bound
in
lcall
or
xchg
stc
mov
jp
lahf
or
fdivp
mov
mov
adc
dec
dec
ljmp
xorb
test
hlt
cmp
lods
rol
push
add
sub
add
out
mov
out
push
imul
push
out
or
ret
xor
mov
xlat
push
cmp
jp
hlt
lret
cmc
icebp
dec
adc
inc
or
outsb
divl
or
cmp
cli
jb
lcall
clc
lea
fsubrl
bound
lcall
sbb
jg
aaa
enter
fsubp
jmp
xchg
xor
insl
mov
icebp
mov
jno
xor
outsl
adc
pusha
mov
leave
jnp
fbld
mov
or
pop
add
jne
std
jne
mov
test
sbb
push
jecxz
push
ret
adc
mov
and
es
and
or
and
sub
sub
jbe
cmp
push
cltd
inc
push
push
jle
je
cwtl
add
push
mov
and
inc
aam
scas
fsubl
das
inc
ret
mov
jmp
arpl
fcoml
mov
push
pop
sti
jl
pop
xor
stos
pushf
xor
fbstp
frstor
pop
pop
mov
arpl
xor
cmp
jge
icebp
jge
fs
adc
fcmovne
push
jno
push
rclb
xchg
or
test
in
insb
nop
fildl
mov
addb
pusha
inc
daa
scas
std
test
push
push
and
and
xchg
lahf
sub
or
mov
jmp
data16
push
in
imul
aam
sti
add
xlat
fbld
xor
push
xor
out
bound
scas
dec
inc
mov
add
mov
lds
xor
push
pop
jmp
addb
dec
out
sahf
aam
aas
push
mov
jp
lods
popf
fcmove
iret
jle
or
mov
sbb
int3
and
icebp
popf
add
dec
xor
mov
pop
jp
out
xor
or
mov
pushf
test
and
in
gs
scas
xchg
rorb
gs
and
lock
jle
frstor
les
xor
dec
cmp
pop
adcl
sub
outsb
ss
mov
mul
sbb
cld
andb
inc
add
jmp
cmpsb
movsl
ljmp
lahf
nop
lcall
in
ss
mov
fldl
out
adc
dec
lret
adc
adc
inc
or
add
lcall
inc
fucomip
cs
divl
jle
mov
clc
xor
xchg
push
lods
mov
push
xchg
test
shl
mov
push
pop
mov
add
mov
inc
in
jne
sbb
imulb
mov
fimull
jg
or
xor
cld
and
lods
movsb
outsl
sub
sahf
rclb
fdivs
push
pop
movsl
dec
sbb
stos
mov
shrl
mov
repz
sarb
add
pop
mov
hlt
or
adc
je
je
cmc
lret
xchg
xor
adc
inc
or
cltd
xor
loop
stos
daa
std
lods
fisubl
and
dec
jle
and
mov
mov
inc
sub
outsb
andl
test
test
out
push
jb
xchg
mov
or
loopne
js
inc
or
mov
sbb
xchg
mov
mov
jl
cmp
mov
loop
xchg
ja
rcrl
call
test
sbb
aaa
ret
std
imul
dec
lods
pushf
das
ja
lret
push
lcall
insl
lock
mov
xor
lods
dec
test
cmp
in
add
ficoms
pusha
bound
xor
jp
repnz
and
xor
in
pop
lret
shll
cmp
in
and
sbb
sahf
push
xor
jb
lcall
pusha
jp
pop
or
push
and
daa
pop
xchg
cltd
jle
sub
scas
pop
mov
push
in
sbbb
int
in
lock
xchg
cmpsl
pop
imul
outsb
or
dec
out
sbb
fwait
push
jno
decl
sub
add
pop
cmp
sbb
cltd
xor
std
jecxz
jne
leave
xchg
movsl
xchg
mov
sub
pop
pop
adc
push
cwtl
or
test
adc
dec
movsl
call
xorl
xor
clc
or
or
mov
je
sbb
daa
pusha
add
xchg
dec
jae
lret
mov
cmp
adc
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pandn
inc
and
loope
mov
adc
adc
xor
xlat
xchg
cli
xchg
cmpsb
jle
jl
inc
push
cltd
xchg
mov
mov
or
add
or
cltd
scas
imul
sti
add
dec
bnd
add
pop
mov
jae
leave
into
mov
rcr
mov
imul
repnz
hlt
pop
movb
jg
mov
and
rorl
xchg
cli
dec
dec
sti
fstps
pop
push
in
and
add
jmp
lahf
pop
push
jo
push
leave
dec
roll
mov
imul
mov
test
rorb
sub
sbb
inc
cmc
xor
adc
jns
xchg
mov
loope
leave
dec
int3
dec
jno
daa
mov
mov
je
xchg
mov
pop
push
lret
cmpl
and
mov
pop
sub
jno
mov
ficoml
lret
or
sarl
mov
jge
mov
test
into
mov
jp
addr16
and
stc
lods
out
sbb
arpl
mov
lock
sub
es
sarl
sahf
jge
or
jae
dec
xchg
fisubrl
ss
mov
ficompl
in
sub
es
mov
rcl
adc
dec
mov
stc
mov
pop
nop
cld
lret
pusha
test
jmp
add
fisubrl
lods
cmp
mov
idivl
sarl
inc
ljmp
arpl
repz
ljmp
jo
in
mov
jne
lcall
dec
bound
imul
mov
or
jmp
test
jns
ljmp
div
sbb
cmp
mov
sbb
clc
cmpsl
xchg
cmp
xchg
xorb
add
sti
sbb
into
stc
inc
jno
mov
scas
dec
pop
into
xchg
fwait
mov
js
mov
mov
push
popf
pushf
loope
xor
test
lahf
or
dec
aad
mov
push
cltd
shl
iret
jns
jecxz
outsl
sbb
push
cwtl
mov
inc
sub
arpl
lods
add
xor
cmc
xchg
clc
push
push
mov
outsl
jns
jb
jno
xchg
and
in
cmp
jl
jb
cmp
xor
dec
inc
aam
cmpsl
jns
dec
sub
or
jne
cmp
pusha
or
call
es
push
mov
pop
push
shl
sbb
je
cli
les
dec
xor
pusha
icebp
jecxz
popa
repnz
movsl
ds
push
jl
inc
loopne
out
jns
pop
add
jp
inc
pop
in
into
mov
fmull
xchg
cld
std
push
xchg
cs
dec
push
nop
mov
ret
dec
arpl
sarb
in
mov
sbb
sbb
lods
sbb
jg
loop
popa
cs
pop
nop
das
ret
cmovo
pop
xor
mov
rcll
xchg
sti
gs
push
mov
xor
xor
mov
push
dec
inc
push
fistpl
nop
push
push
rolb
adc
or
inc
outsl
data16
cmpsl
lea
dec
int3
mov
stos
xor
xor
clc
mov
enter
rorb
daa
imul
out
cli
mov
je
cmp
mov
sub
stc
dec
xchg
mov
dec
scas
faddl
dec
test
ds
push
aaa
xor
sti
xor
out
mov
jno
inc
incl
mov
stos
or
jp
mov
xchg
outsb
in
cmp
loope
cli
loopne
jbe
dec
test
xor
loop
sub
add
push
add
int
or
nop
pop
and
inc
jmp
loope
cmc
or
ljmp
mov
iret
mov
out
inc
jns
rcrb
imul
xorb
push
jns
inc
scas
mov
jge
xor
mov
in
or
sub
out
ss
lret
rol
cmp
xchg
pop
nop
push
push
mov
cwtl
aad
mov
adc
pop
pop
mov
pop
dec
jl
mov
inc
and
sub
dec
dec
loop
stos
rcl
and
jmp
jle
jge
out
pusha
jp
jg
inc
add
mov
stos
sbb
ja
sub
les
push
push
xchg
jne
jbe
cmp
addr16
fldcw
iret
out
or
or
outsb
es
gs
mov
dec
mov
add
adc
imul
add
gs
popf
dec
cmpsl
jp
lret
fwait
leave
pop
in
das
repnz
fisubl
xor
push
mov
mov
movsl
or
sub
mov
call
aas
ret
ds
outsb
fwait
xor
jno
mov
xchg
sub
dec
ljmp
inc
or
sarl
mov
stos
repz
mov
cmp
jb
repz
js
sub
add
loope
cwtl
lods
mov
imul
xchg
jne
and
xchg
push
fisttps
xchg
not
decl
cmp
cli
sbb
and
ss
mov
dec
pop
frstor
daa
movsl
imul
cmp
out
add
adc
mov
test
lods
pop
push
xor
or
sbbl
aam
pop
jp
jecxz
bound
into
inc
cld
push
pop
int3
sahf
inc
mov
xor
or
repnz
and
sbb
jnp
jne
add
loop
ret
cs
daa
ss
mov
and
pop
lock
jl
mov
inc
or
or
adcb
dec
mov
cs
push
mov
rcrl
js
lods
mov
or
out
shl
test
jg
cwtl
lret
imul
mov
and
ret
fs
sub
or
js
adc
pop
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
pusha
repz
loope
invd
add
cmovge
lcall
outsl
jae
repz
scas
cmp
xorl
cs
or
push
inc
adc
pop
jo
lcall
sbb
sbb
imul
jns
int3
into
inc
or
add
scas
pushl
jae
jle
test
jg
aas
inc
shrb
pop
push
insl
mov
add
add
dec
hlt
push
bnd
sbb
jmp
mov
ret
jnp
mov
out
xor
inc
add
or
push
sti
jl
or
jb
xorb
fwait
sub
push
jg
outsl
xorl
sbb
mov
test
mov
xchg
jmp
mov
lret
insb
mov
test
rorb
cmpsb
mov
shr
daa
fnstsw
int
add
cmp
ret
mov
mov
cltd
or
dec
xor
call
mov
pop
inc
aam
leave
faddl
popf
inc
add
push
scas
jl
inc
shll
cli
fistps
mov
mov
ror
nop
jb
adc
jae
jne
sub
mov
pop
fs
cmp
outsl
repnz
mov
xchg
mov
xchg
orl
jmp
mov
lcall
inc
ss
pop
dec
inc
lea
hlt
roll
mov
pop
jmp
aam
jg
outsl
dec
jns
xor
inc
ljmp
push
dec
lahf
aad
and
imul
xor
xchg
insb
mov
das
jmp
lea
adc
je
rol
push
mov
xchg
jecxz
add
mov
push
gs
jbe
shr
stos
hlt
ja
push
ret
mov
sub
jbe
cltd
notl
aas
addr16
cmpsb
popf
sub
sub
sub
jecxz
sub
push
into
sbb
cmpsl
jecxz
test
das
cmp
mov
mov
xlat
ja
loopne
sbb
and
mov
inc
nop
andb
lret
mov
aam
jne
decb
sub
aad
call
xchg
push
adc
fmuls
jb
scas
cmpsl
and
iret
push
int
into
insl
push
jne
stos
loop
add
pop
jno
xchg
int
jg
cmpb
xlat
ljmp
leave
call
dec
scas
inc
add
or
into
fists
sbb
stc
push
mov
xor
pop
pop
mov
and
or
andb
dec
mov
push
int3
cmp
inc
mov
int
stos
test
inc
pop
in
and
jno
je
pop
adc
stc
adc
and
adc
subl
rol
jge
and
jnp
sbb
push
jp
leave
or
mov
or
pop
outsl
dec
mov
sub
into
enter
es
push
pop
test
or
testl
loop
mov
mov
mov
sbb
jmp
mov
mov
push
jnp
outsl
repnz
mov
push
mov
hlt
out
adc
int
inc
cmpsl
pop
inc
movsb
out
cld
shlb
mov
int
inc
dec
scas
cmp
data16
cmpsb
aas
jne
stos
xchg
jp
aas
jae
outsb
je
sahf
pop
repnz
pusha
mov
inc
lcall
ffree
pushf
and
loop
lcall
icebp
into
mov
or
dec
shl
fwait
inc
nop
mov
mov
mov
call
dec
ja
outsl
ret
popl
lret
addr16
call
pop
sar
loopne
mov
push
cld
inc
pusha
fs
jg
les
ret
addr16
mov
frstor
sub
and
out
cmc
decb
inc
sbb
out
pop
inc
sub
lcall
xchg
jnp
dec
sahf
adc
outsl
add
jg
cmp
aam
test
ror
add
xchg
lock
pop
pushf
ret
popa
push
repnz
aas
mov
out
mov
cwtl
xchg
pop
adc
pop
fmull
cmc
es
aaa
sti
dec
subb
ret
jnp
pop
insb
mov
push
adc
sbb
mov
int
outsl
inc
std
mov
scas
pop
enter
mov
mov
shll
and
add
mov
test
call
insb
pop
xchg
aaa
mov
fidivrs
lods
cli
adc
fstps
leave
rolb
add
mov
inc
ret
mov
into
mov
xchg
fisttps
shrb
pusha
cmp
dec
inc
hlt
mov
test
sub
pop
stc
and
pushf
mov
rclb
rolb
outsl
sbb
sti
aaa
jge
lret
push
daa
fld
jo
rcrb
push
test
int
gs
cmp
mov
mov
iret
sbb
dec
in
inc
sbb
pop
pop
inc
call
ljmp
mov
lcall
mov
mov
clc
push
mov
or
pushf
push
cmp
inc
mov
pushf
in
lods
inc
dec
inc
sbb
xchg
clc
int3
outsl
iret
fistpll
cwtl
mov
sbb
insl
lea
test
fisubrs
je
jmp
and
lock
aas
ljmp
rcll
pop
out
jno
mov
iret
xchg
cltd
ret
outsl
pop
sbb
xor
pop
ljmp
in
arpl
pop
inc
and
popa
cwtl
pop
shlb
mov
mov
push
callw
rolb
mov
fwait
xlat
fdivl
sbb
mov
adc
inc
stos
icebp
popf
pushf
xchg
xor
es
add
test
lcall
std
pop
xchg
ror
push
push
inc
in
lahf
jg
mov
mov
mov
ret
add
mov
outsl
cs
popa
jp
lret
addr16
and
push
mov
xor
add
iret
sbb
call
push
cmp
jo
pop
aaa
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
xchg
add
psrld
test
insl
shlb
mov
xlat
xor
fsubs
add
cmp
jge
jmp
adc
lds
out
and
call
das
sbb
subl
nop
push
jl
fistpl
test
dec
add
mov
mov
push
sub
cmp
or
dec
push
int3
push
mov
movsl
pop
popf
dec
loopne
faddl
xor
aas
push
outsl
pop
cmpsb
jg
inc
mov
xlat
fstpt
sub
je
adc
outsl
les
rclb
sbb
push
jecxz
in
cmp
pop
xchg
out
inc
lahf
ret
pop
mov
push
popf
pusha
in
out
mov
mov
or
xlat
stc
mov
and
stos
jg
incb
add
mov
int
mov
cmp
sbb
or
jb
cmp
lret
aas
test
or
xchg
rorb
push
aam
mov
fdivl
sub
out
push
or
flds
add
sbb
stos
fdivs
lret
sbb
cmp
repz
fwait
popf
cld
mov
xchg
jp
sbb
mov
clc
dec
dec
jmp
mov
jbe
cmp
mov
arpl
inc
or
insl
sti
in
aas
and
mov
pop
or
mov
lret
cmpsl
pop
pop
xor
data16
xchg
repz
jo
and
mov
xor
aaa
aam
pop
jb
fldt
das
or
ljmp
add
pop
xor
loopne
pcmpeqb
dec
mov
pop
mov
xorb
dec
push
jecxz
mov
mov
out
push
cltd
dec
in
xchg
inc
cmc
inc
mov
scas
add
mov
adc
out
mov
not
add
mov
cmp
movsl
stos
xorb
add
test
aaa
xlat
mov
gs
imul
sub
stc
xor
mov
cli
jno
mov
ss
daa
xchg
xor
test
xor
rol
jb
sbb
xchg
ljmp
mov
loope
mov
adc
ljmp
aam
outsl
push
popf
and
in
adc
and
rcl
push
ljmp
xchg
mov
and
enter
in
bound
call
sti
inc
repnz
cmp
adc
push
xor
lret
call
sahf
fistpll
or
cmpsl
jns
lret
adc
sub
add
je
dec
ja
dec
data16
movsb
and
dec
into
es
cmc
mov
mov
jp
mov
xchg
cmp
jae
mov
xchg
jo
cmpsb
pushf
add
bnd
sbb
mov
dec
pop
cmp
dec
sub
xchg
cli
push
push
out
cmc
repz
xlat
and
xchg
adc
jge
test
and
gs
je
test
out
mov
pushf
lods
cmp
adc
adc
mov
inc
pop
jbe
lcall
xchg
sub
and
mov
fsubl
popf
movsl
adcb
dec
cwtl
lret
fwait
mov
mov
adc
jno
imul
in
lods
lret
aas
fsubs
sub
jnp
inc
popf
iret
jmp
sub
ds
movl
lcall
std
test
mov
xor
lret
cmp
pop
push
add
xchg
sub
dec
repz
xchg
in
add
mov
mov
das
stc
mov
test
push
shrl
push
ret
mov
cmpl
cmp
and
dec
xchg
sub
push
cmp
mov
mov
out
ss
icebp
sbb
and
inc
lcall
ret
sub
clc
inc
lahf
ret
js
lcall
inc
aad
js
scas
movsb
xchg
mov
test
sbb
sti
sbb
arpl
cmpsb
dec
sub
lods
outsb
insb
xor
mov
sub
fistl
inc
push
sbb
pop
mov
add
mov
mov
leave
mov
out
imulb
out
and
in
test
in
mov
jp
mov
xchg
sub
adc
inc
jae
shrb
roll
rorb
ror
mov
push
xor
xchg
inc
stos
int
aad
pusha
lret
jae
popa
dec
shll
stc
int
imull
lds
insb
lret
decl
jmp
xor
cmp
pop
jg
cmpsb
adc
jecxz
lds
xor
jae
out
cwtl
fldt
push
sti
dec
icebp
out
sub
or
lods
mov
aad
stos
xchg
shrb
shll
and
sub
inc
mov
enter
out
mov
mov
mov
xchg
addb
pop
cs
or
sub
and
cmp
out
mov
jecxz
mov
in
sub
mov
das
arpl
test
or
loopne
leave
icebp
mov
jb
mov
cmpsb
cmp
push
lcall
call
jmp
stos
cmp
ficomps
xor
mov
xlat
stc
je
pushf
xorl
movsb
dec
sbb
jl
fdivrl
adc
movsl
mov
jno
mov
in
lds
lds
sub
mov
pop
scas
xor
xor
in
out
and
jb
xor
sar
mov
dec
pop
pop
repnz
mov
xchg
leave
sbb
ljmp
add
add
shr
fcom
fnsave
push
call
push
lcall
ljmp
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
btr
xor
test
aaa
aam
addr16
lahf
add
xchg
sti
sbbb
in
jl
cwtl
stc
cltd
add
mov
ja
in
pop
jo
pop
sbb
adc
stc
pushf
sub
je
mov
pop
mov
mov
inc
fiadds
dec
lock
out
aas
pushl
imul
ret
push
dec
repnz
cmpsl
pop
ja,pn
sub
mov
sub
and
ret
out
push
scas
testl
mov
aam
dec
iret
xchg
out
dec
jl
xchg
dec
inc
mov
push
stc
out
jl
adcl
pop
mov
mov
sub
mov
test
rcll
adc
sub
pop
jle
jo
int3
test
lods
jle
cmp
je
fstpt
inc
jb
fdivrl
loop
les
jle
insb
cltd
inc
inc
jne
insl
shrd
add
push
pushf
pop
jecxz
lock
lret
pop
jb
inc
pop
mov
inc
xchg
adc
popf
and
push
add
dec
scas
sbb
pop
xor
aaa
push
pop
cmpsl
sub
sahf
jl
ds
pop
xchg
aaa
mov
data16
xchg
sahf
sar
mov
lahf
push
movsl
sbb
out
es
popa
or
outsl
mov
xor
insl
jle
sub
sarl
and
aaa
jge
scas
mov
lods
out
mov
out
jns
sbb
call
ds
cmpsl
adc
imull
fmull
cwtl
mov
adc
fstl
stc
jnp
jge
lods
sbb
adc
ljmp
pop
xchg
sub
jl
adc
inc
inc
sbb
push
mov
test
mov
mov
lret
jmp
stos
xlat
dec
scas
les
cmp
lret
ficoml
sub
dec
test
mov
jge
adc
sub
out
pop
xchg
inc
push
mov
imul
push
sub
out
mov
movsl
or
ret
rclb
lret
es
inc
pop
shlb
cld
and
fisttps
lret
dec
push
das
and
arpl
mov
std
add
pusha
outsb
push
push
push
fcoml
mov
out
mov
sbb
push
push
mov
mov
inc
jecxz
roll
push
adc
aad
pop
adc
and
mov
mov
push
inc
adc
aaa
push
test
incb
mov
push
mov
mov
fwait
add
jmp
xor
mov
cmp
jb
movsl
mov
cltd
cmp
mov
hlt
dec
jb
push
std
or
fsubl
out
inc
jle
add
negb
jo
shll
add
mov
mov
adcl
xchg
xchg
sbb
xor
jg,pn
test
jbe
lea
xor
cmpsb
loop
and
out
push
or
dec
fiaddl
jmp
into
daa
mov
inc
mov
popa
rorl
repnz
push
lock
mov
subl
xor
pop
cli
lods
pop
cld
cwtl
aad
and
inc
mov
mov
out
stos
push
add
iret
mov
and
mov
fcomi
pop
mov
pop
int3
push
scas
xlat
and
xor
out
adc
scas
push
pop
jo
lret
pop
in
cs
nop
pop
clc
mov
mov
xchg
add
dec
arpl
lods
in
dec
adc
movaps
mov
jecxz
daa
int3
jl
in
dec
inc
sub
mov
dec
adc
pop
rol
cld
sbb
andb
inc
sub
cmp
mov
andl
rcll
cmpsb
addb
add
inc
sti
mov
adc
pop
subb
arpl
sub
ss
int
stos
hlt
outsb
divb
pushf
pop
add
mov
out
cmc
daa
add
and
push
scas
inc
lods
pop
imull
ffree
sub
aad
adc
mov
mov
aad
push
mov
dec
xor
adc
jo
push
jo
in
mov
testb
cmp
xchg
jbe
jae
mov
add
clc
pusha
add
ror
les
orl
lea
sub
cmp
jp
jo
cmpsb
pop
push
dec
jb
sbb
rolb
jnp
and
adc
inc
push
lea
in
out
mov
push
ja
daa
mov
bound
sbb
shlb
sub
xor
sbb
xor
jecxz
fisubl
sbb
loope
inc
inc
sbb
push
mov
xchg
push
das
inc
cmp
daa
std
shll
jmp
adc
inc
cli
or
scas
xchg
gs
push
mov
shl
jecxz
cli
outsb
cmp
and
sub
mov
xchg
icebp
fsts
dec
mulb
repnz
outsl
dec
jp
or
mov
xor
xor
cmpsb
inc
outsl
mov
fwait
movsb
test
cld
iret
mov
push
imul
stos
outsb
jl
leave
dec
outsb
lahf
mov
or
push
aas
adc
or
sbb
imul
jb
xchg
cld
cmc
leave
fdivrl
and
and
pusha
sarb
inc
push
or
aas
mov
mov
daa
loope
and
enter
adc
faddl
cmp
in
or
add
dec
lods
or
je
pushl
or
mov
mov
sti
stc
popl
aas
fisttpll
lahf
imul
inc
leave
jmp
push
push
fwait
mov
out
push
cmp
and
sti
stos
sub
test
mov
adc
xchg
in
cs
fdivrl
push
mov
aas
test
popl
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
xor
invd
add
daa
sbb
cmovge
or
jae
out
std
inc
jge
sahf
xchg
imul
add
out
out
mov
push
rcl
aam
mov
xchg
inc
sbb
outsl
inc
clc
inc
jb
scas
fistpll
in
push
femms
xchg
ja
jb
push
inc
push
dec
loopne
xchg
mov
int3
cmpsl
movsb
das
inc
cmp
stos
xchg
call
mov
outsb
inc
loopne
in
pop
iret
into
stc
loopne
mov
lcall
lds
pop
xchg
stos
add
mov
mov
arpl
adc
mov
pop
pop
in
push
and
fsubrp
sbb
out
xor
jo
xchg
cmp
shlb
jnp
cld
xchg
dec
ja
cmp
leave
stc
push
mov
cs
jle
dec
fcompl
shlb
xchg
data16
push
cmpsl
cli
jl
jno
mov
cmp
or
shlb
test
sbb
mov
test
xchg
push
es
or
push
enter
xor
pop
lcall
fldl
stc
adc
cmpsl
jae
pusha
arpl
lds
not
add
sbb
daa
ret
cmc
sbb
mov
lcall
mov
xchg
andl
mov
call
lods
push
inc
inc
mov
inc
pop
xor
mov
and
imul
cwtl
je
inc
arpl
mov
mov
push
std
lods
testb
mov
mov
das
mov
lods
dec
mov
pop
jns
inc
enter
cmp
fnsave
rcll
imul
fwait
pop
pop
push
cmp
push
repnz
std
dec
dec
sbb
inc
mov
test
mov
pushf
or
xor
mov
ret
mov
les
jmp
xchg
out
pusha
test
mov
pop
mov
jle
leave
push
mov
loopne
out
sub
fs
dec
out
mov
rclb
sbb
push
inc
clc
aad
dec
push
ja
sbbl
cltd
sbb
push
push
mov
shl
and
sbb
shlb
fsubrs
fists
dec
inc
mov
clc
movsl
aam
jae
add
enter
sbb
ret
lods
rcr
pop
and
inc
xor
in
sub
add
test
adc
pop
xchg
cmp
movsb
in
loope
enter
mov
les
fidivrs
stos
mov
mov
sbb
mov
pop
sbb
jecxz
sbb
iret
push
cltd
push
shll
adcb
fwait
das
pushf
pop
jl
fimuls
ss
sub
mov
mov
xor
jge
gs
scas
nop
push
cmp
test
shll
mov
dec
and
cmpsl
push
ja
enter
cmc
and
in
jg
outsl
test
xchg
push
sti
iret
daa
jecxz
nop
jge
and
dec
and
jnp
loope
adc
mov
int3
add
and
xchg
test
mov
sti
pop
test
pop
fmuls
fs
add
test
xor
jns
jecxz
sub
and
push
jne
pushf
push
sub
pop
scas
sbb
cmpsb
in
out
xchg
dec
adc
push
mov
cltd
push
mov
cwtl
mov
ljmp
out
loop
shrb
mov
loopne
enter
mov
jbe
mov
loope
or
xchg
jne
ret
fisubrl
jno
push
and
int
inc
ret
push
xor
xchg
in
out
sbb
jecxz
pushl
adc
stos
popa
push
mul
sub
cmp
sbb
in
adc
fcoml
cs
mov
out
js
lds
js
or
pop
xchg
mov
sbb
pop
and
gs
xor
rcll
popa
pushf
mov
filds
imul
jmp
stc
adc
std
xchg
mov
cmp
adc
xor
jl
lahf
inc
push
jbe,pt
ret
addr16
xor
outsb
cmc
and
aaa
sbb
rcrb
fdivrl
stc
out
jno
push
mov
lock
outsl
sub
or
ljmp
inc
mov
loop
int3
fwait
ret
cmp
cmp
popf
sub
fcomps
lods
jg
pusha
clc
push
cmp
mov
jne
stos
shl
movsb
push
or
lret
call
or
push
mov
mov
ror
outsb
jg
jns
loop
fwait
pop
xlat
adc
insb
push
js
adc
and
push
out
mov
outsb
xlat
mov
pop
mov
mov
ljmp
push
ss
mov
push
sub
repz
lock
pop
sti
add
inc
mov
mov
and
lret
jge
xchg
out
mov
jns
mov
inc
insl
movsl
jmp
test
mov
xor
pop
pop
sbb
and
inc
sbb
cli
jnp
fbstp
push
mov
mov
and
call
adc
cs
jae
jle
and
scas
lods
xor
dec
fildl
rcl
or
dec
andl
lret
ror
repz
stos
and
pop
xor
enter
sub
sub
lcall
pop
movl
pop
rolb
sbb
jbe
jnp
es
iret
adc
or
cmc
xor
in
inc
mov
and
jbe
inc
push
pushl
lds
jne
sti
lock
ljmp
shrl
pop
lahf
mov
adc
jg
cmp
fdivrl
or
out
movsl
rolb
lds
sahf
insl
dec
addr16
cltd
mov
popf
test
fmuls
clc
adc
xchg
sahf
mov
or
mov
or
lret
leave
sub
lahf
pop
idiv
jmp
mov
xchg
mov
mov
invd
add
jo
adc
mov
jg
xor
xchg
aam
sbb
sbb
repnz
mov
pop
stos
sbb
aas
cmp
inc
mov
outsl
movsl
dec
mov
jnp
mov
add
xchg
lret
jl
mov
pop
pushf
nop
in
jb
lods
lret
pop
or
mov
cltd
xchg
mov
lret
std
mov
inc
or
mov
jle
ret
mov
fmul
sbb
cmp
repnz
push
mov
daa
mov
mov
lahf
mov
mov
testl
mov
pop
repz
ret
xchg
pushl
dec
ss
mov
inc
movb
push
pusha
fisubs
cwtl
xchg
push
mov
xchg
nop
out
inc
insl
jno
add
sub
test
pop
sub
and
mov
push
cli
jge
andb
add
aaa
inc
xchg
sub
icebp
jge
sub
sti
xor
imul
mov
pusha
or
out
das
cmp
xchg
stos
out
pop
mov
js
or
out
and
cltd
cli
outsl
test
add
lret
xchg
sub
clc
push
adc
jo
shrl
imul
int
repz
or
adc
call
sbb
cmp
inc
mov
and
ss
fcom
dec
shrb
out
arpl
scas
pop
jno
xor
jno
scas
repz
ret
jns
iret
push
push
pop
mov
add
push
jl
addr16
mov
icebp
mov
dec
cltd
aam
daa
pslld
leave
pop
pushf
jg
jb
xchg
lods
aas
hlt
or
sub
cmp
sbb
dec
cmc
mov
movsl
dec
pop
push
mov
rcll
inc
xchg
clc
sbb
dec
push
push
mov
xorb
jl
cmpsb
xchg
xchg
mov
nop
fstp
cmp
mov
xlat
push
clc
in
dec
adc
fnstcw
aad
or
cmp
ja
dec
and
lahf
jecxz
fistps
add
push
fcmovb
mov
es
dec
cmp
pop
mov
mov
hlt
add
movsb
std
in
xchg
aam
dec
mov
ljmp
pop
mov
imul
mov
lock
sbb
aas
imul
sahf
jp
pop
pushf
sub
repnz
outsb
outsb
fisubrl
cli
push
pop
mov
xchg
aam
add
imul
nop
add
scas
sub
lret
pop
dec
add
mov
cwtl
pop
mov
add
or
fdivs
dec
fiadds
mov
cmp
xor
dec
add
mov
sub
test
mov
lock
pusha
movsl
jp
jecxz
repz
or
push
jae
dec
mov
mov
xor
in
fsts
dec
and
movsb
shlb
inc
push
ret
dec
sbb
cmp
mov
sbbb
loopne
dec
test
cmp
ljmp
inc
stos
xchg
inc
sbb
cmp
and
fstpl
pop
mov
daa
pop
gs
dec
mov
lcall
fists
imul
pop
xor
std
sbbb
xchg
dec
ret
dec
test
inc
pop
inc
cmp
mov
inc
stos
fucomi
pop
pop
insl
leave
mov
mov
clc
insb
lock
lret
loop
je
ljmp
stos
lret
add
shlb
fdivrl
lret
pop
das
in
addr16
jo
mov
lret
add
in
push
call
jle
jae
test
jecxz
mov
lcall
pop
pop
mov
cld
rorb
clc
orb
lret
xor
xchg
adc
cmp
pop
push
call
lds
cmpsl
push
sub
sahf
xor
xchg
mov
aad
loopne
dec
loop
add
lods
ss
mov
or
ret
xchg
jle
and
movsl
adc
cmpsb
leave
cmp
lcall
jmp
inc
jecxz
or
or
or
shlb
fidivs
ljmp
test
enter
jb
sarb
arpl
and
mov
jmp
out
f2xm1
fiaddl
loop
or
sub
test
lret
xor
inc
mov
dec
add
xchg
sub
clc
scas
cmp
cmpsl
mov
jl
jge
cmc
mov
fnstsw
ja
int
adc
xchg
ljmp
rorl
add
xlat
cmp
cmp
cmc
mov
dec
and
ljmp
jl
xor
add
cmpsb
dec
leave
or
andl
cmc
out
stc
dec
movsl
sub
mov
xlat
mov
rcll
add
jl
jae
lcall
leave
lods
push
fdiv
insb
popf
movsl
jl
in
sub
mov
inc
repz
sahf
scas
dec
ss
sbb
and
repnz
loopne
pop
bound
push
jne
adc
jbe
mov
push
data16
iret
fs
xor
sbb
ja
mov
mov
jno
sbb
popf
roll
fwait
test
mov
jmp
aaa
mov
push
cmp
push
jns
jae
or
sbb
pushf
xchg
call
daa
cmpsl
lods
or
ret
gs
daa
xor
bnd
mov
aam
pop
inc
mov
daa
adcb
rolb
sub
mov
and
fs
xchg
add
xlat
jb
inc
fnstsw
shlb
push
dec
je
fsubrl
mov
xor
jne
inc
mov
sub
cmp
pop
clc
jno
popa
push
adc
mov
stc
les
std
xor
adcb
arpl
outsb
andb
cmp
push
lods
dec
mov
pop
jnp
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
add
push
mov
icebp
add
mov
mov
sbb
ss
test
cmp
cs
jno
push
les
jnp
mov
fmuls
adc
or
cmp
out
out
fisubrl
sahf
repz
and
push
ja
and
cmp
xchg
fmuls
aam
xchg
aad
mov
xchg
adc
sbb
and
mov
mov
test
mov
and
rorl
dec
bound
fstpt
xor
adc
int3
mov
jnp
xchg
adc
mov
repz
inc
sbb
movsb
lods
lock
lcall
sti
rolb
sbb
sbbb
popf
mov
mov
jg
mov
or
call
cltd
lds
clc
push
std
popa
loopne
imul
mov
lods
inc
ljmp
lahf
sbb
fwait
arpl
or
push
jnp
popa
add
pop
lahf
test
les
push
sar
aaa
xor
outsl
jge
jns
pop
lret
mov
pusha
scas
inc
je
inc
mov
sub
mov
test
aaa
cli
popa
mov
dec
insl
jecxz
andb
arpl
add
and
arpl
mov
mov
test
dec
xchg
mov
dec
add
pmaddwd
xchg
loop
lods
or
into
inc
clc
pusha
xor
add
cmpsl
cli
cmpsb
cld
pushf
out
xor
inc
scas
mov
stos
cli
push
je
or
shlb
adc
xor
jno
aam
scas
cmpsb
push
mov
call
add
push
cmp
jo
cmc
scas
movsb
dec
add
xchg
push
mov
jl
xor
xor
fmull
or
dec
add
loope
cmpsl
cmp
popf
repz
dec
idivl
mov
add
cmc
push
or
lcall
adc
mov
cmp
or
mov
vpmuludq
sti
cmpsl
xchg
je
sbb
movsb
inc
loopw
icebp
and
and
or
rcrl
push
dec
jl
cmp
sti
aas
outsb
cmpl
into
lcall
pop
inc
xor
pop
push
xor
cmpsl
adc
adc
lret
shrl
xchg
test
sbb
xchg
push
jl
pop
mov
or
jae
xor
jl
inc
cli
jmp
push
jo
inc
pushf
aad
or
outsl
mov
inc
jnp
cmp
shll
push
cmpsl
xchg
xor
add
in
in
adc
icebp
cmc
mov
mov
shrb
mov
lods
xor
sub
and
subb
cmpsb
inc
mov
sbb
btc
jmp
inc
xlat
sub
xchg
xchg
dec
cmp
mov
cwtl
jnp
jge
test
cld
mov
or
int
fcomps
movsl
pop
add
fwait
loop
jg
pop
icebp
add
or
fs
lds
jg
jbe
or
or
iret
add
adc
pop
dec
popf
sbb
test
pop
pop
mov
in
jnp
or
mov
in
jecxz
adc
cmp
dec
inc
test
jp
add
scas
mov
dec
jne
xchg
xchg
pop
sahf
lock
xor
add
lret
jne
loope
pop
les
iret
pop
das
jo
out
loopne
pop
jb
movsb
or
roll
mov
lds
mov
outsl
data16
mov
fdivl
add
ja
outsb
movsl
dec
cmpsb
loope
test
or
xchg
xor
movsl
inc
mov
gs
and
pmaxub
sub
jae
xchg
ljmp
cwtl
fs
xor
push
loope
cmp
pop
cli
out
push
mul
mov
push
aam
xor
cmpsb
jecxz
nop
mov
scas
jnp
xchg
stc
loope
jo
and
xchg
fildll
stc
stos
mov
xor
stos
push
mov
mov
ret
mov
xchg
movb
add
fistpll
add
aas
mov
roll
arpl
mov
pop
ret
or
mov
push
ret
jbe
or
mov
je
push
aad
int
fcomip
push
jno
fsubrp
repz
insl
and
ja
push
shrb
jnp
push
into
cmp
clc
hlt
or
mov
push
jg
test
mov
je
xchg
sbb
xchg
pop
add
mov
push
les
clc
mov
scas
icebp
mov
movsb
cmc
leave
nop
jnp
daa
pushl
inc
lahf
mov
push
lods
pop
pop
enter
mulb
or
adc
jl
sub
loop
inc
enter
xchg
xchg
dec
push
sbbl
in
xor
and
mov
and
inc
ss
push
test
push
scas
jb
xor
pop
clc
pop
bound
scas
sub
shlb
pushf
jae
xchg
mov
jnp
adc
int3
and
add
pop
js
xchg
sbb
stc
loopne
stos
mov
cmc
push
add
mov
cmp
movsl
cmp
flds
lret
fld
push
push
push
rcrl
adc
sbb
pop
iret
jne
ror
arpl
cwtl
in
cld
in
dec
lods
pushf
test
push
and
into
test
add
jge
pop
stos
out
xor
xchg
dec
out
cmpsl
or
adc
push
adc
push
add
jmp
iret
push
frstor
push
xor
cs
fwait
add
mov
and
sbb
xor
popf
add
sub
stos
out
movsb
inc
inc
jnp
and
enter
push
or
stos
pop
jmp
repnz
pushf
rorb
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
pushf
jb
mov
add
bt
and
pop
imul
adc
rol
cwtl
inc
jl
xor
mov
test
cmc
fiaddl
loopne
enter
iret
sti
sti
adc
pop
testl
inc
in
bound
leave
add
das
fstp
inc
jbe
and
sarb
xchg
dec
adc
insb
ljmp
pop
iret
daa
int3
inc
xlat
scas
jnp
xchg
cmp
xchg
or
jae
and
mov
test
xchg
dec
leave
icebp
sbb
divl
lcallw
sbb
loop
xor
xchg
dec
pop
inc
mov
add
mov
add
gs
cwtl
movl
pop
pop
xchg
jmp
lret
cmpsl
fs
add
icebp
mov
cmp
xchg
test
jno
xchg
xor
jle
imul
ffree
jo
aas
test
cmc
pushf
stc
fs
pop
mov
mov
aad
jns
adc
imul
loope
add
inc
dec
pusha
dec
mov
xchg
jns
sub
pop
cmp
jns
push
pop
mov
dec
inc
xchg
in
aas
cmp
and
xchg
xchg
add
jle
hlt
ds
addr16
inc
cmpsb
pop
orb
inc
mov
push
sub
scas
xor
lods
test
insb
cmpsl
fcmovbe
push
dec
sbb
xchg
push
pushf
jecxz
ljmp
cmp
lcall
dec
ds
fsubs
sbb
dec
sub
and
and
sahf
ret
gs
std
rclb
lcall
pop
and
mov
cs
mov
or
lret
testl
int
mov
repnz
sub
mov
ret
mov
loopne
sub
xchg
sub
sbb
inc
jbe
insl
mov
ja
mov
adc
inc
adc
mov
pop
aam
shlb
jle
cmp
cmp
add
loop
adc
dec
hlt
xor
cmp
xchg
sbb
adc
ljmp
xor
mov
pop
insl
testl
xchg
idivl
mov
adc
lock
lock
push
enter
or
rcr
push
fs
fwait
ret
push
mov
popf
jb
xchg
stc
cli
rorl
cmp
dec
ret
pop
std
movsl
shll
sbbb
fwait
ljmp
push
jecxz
arpl
mov
mov
jg
dec
add
pusha
insl
cld
cmpsb
push
mov
data16
insb
aas
sysexit
mov
lds
mov
push
xorl
lea
push
lahf
subl
fimull
cmpsl
dec
sbb
mov
push
cmp
aad
divb
fadds
mov
push
movsl
jecxz
out
jns
adc
aad
mov
mov
xchg
and
lahf
out
xor
mov
mov
addr16
in
ja
jl
scas
andl
cs
cmpsb
xchg
test
movsb
gs
fsts
add
cmp
test
adc
pop
into
pop
mov
lcall
sbb
xchg
icebp
jecxz
mov
imul
sbb
jmp
xlat
jo
sbb
push
inc
das
icebp
call
sub
or
mov
sbb
dec
sbb
ret
push
stos
fldl
cmpsl
pop
ds
mov
xchg
lret
mov
cmpsb
out
inc
ror
mov
push
push
sti
dec
stc
es
stc
gs
push
xor
add
out
outsl
push
jp
lcall
ss
das
add
mov
mov
mov
fmull
int
fldenv
adc
hlt
mov
out
fwait
in
pop
mov
out
push
iret
lds
sarb
jle
lods
pop
xor
lret
dec
cmp
pop
stos
inc
mov
in
aad
rorb
pop
mov
inc
pop
push
cmp
pop
jne
push
xchg
fstpt
adc
mov
orb
xchg
pop
pop
out
loop
add
mov
aas
daa
mov
xlat
sub
ss
cmpsl
add
inc
mov
insl
mov
lock
fstpl
and
es
pop
add
xchg
int
and
or
es
in
sub
aaa
push
repz
or
mov
pusha
mov
rcrb
ja
inc
xadd
fisubs
sub
adc
fnsave
xlat
inc
ret
mov
cmp
cmp
aaa
movsb
jae
mov
test
cmp
outsl
int
fldt
sub
inc
sbbl
pushf
fsub
and
mov
movsb
mov
mov
jle
fwait
mov
ljmp
xchg
and
mov
and
fs
ds
inc
repz
stos
mov
arpl
jmp
out
dec
sub
nop
aad
jnp
jp
pop
xchg
dec
cmp
mov
adc
loope
mov
cmp
and
in
mov
pop
lods
in
xchg
test
ret
je
jae
cmp
rorb
stos
adc
ljmp
fs
pop
dec
jecxz
int
jmp
jmp
push
lds
jae
pop
stos
test
mov
add
in
mov
pop
mov
and
sub
cmpsl
out
push
cmp
mov
xchg
inc
jns
adc
loope
xchg
ficompl
xchg
mov
fwait
loopne
mov
sahf
or
lahf
lret
lahf
inc
push
sbbl
enter
xchg
push
in
nop
test
int3
les
mov
pop
stos
mov
out
xchg
lods
cmp
cmp
lods
imulb
xor
mov
loopne
push
loope
ja
dec
div
fs
sar
hlt
icebp
pop
xor
hlt
and
xchg
stos
loopne
insl
fwait
int
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
cwtl
je
mov
add
movsbl
inc
lcall
mov
fsubrl
or
jl
sub
xchg
add
xlat
push
cmpsw
daa
cld
adc
inc
cmpsl
or
popf
lahf
adc
movsb
test
ret
and
mov
popa
dec
fcompl
stc
cmpl
pop
dec
jge
int
lea
xor
jmp
xchg
mov
dec
push
xchg
xor
mov
nop
mov
pop
cmp
push
icebp
mov
cmc
mov
dec
movl
outsb
das
insb
movb
shrb
roll
test
and
and
repnz
jno
jl
fsubrs
cld
aas
mov
and
add
sahf
aaa
in
jge
xchg
sbb
lcall
pop
cli
dec
test
pop
mov
or
addl
imul
hlt
cmp
stos
in
loope
les
pop
je
mov
out
out
inc
mov
or
test
fwait
jo
lcall
push
into
pop
xchg
aas
outsb
push
in
sub
loop
pop
xor
adcb
or
sbb
mov
je
je
lea
outsb
fstp
add
hlt
stos
imul
stc
lods
andb
neg
inc
idivb
stc
mov
mov
adc
bound
in
ret
adc
or
jecxz
cmp
lret
outsb
jnp
add
je
xchg
jnp
fwait
cmc
outsl
jae
test
shll
ficompl
cli
sbb
out
mov
xchg
mov
mov
ret
xchg
test
in
pop
add
add
outsl
or
push
xor
fsub
sub
xchg
out
mov
or
mov
push
ror
or
adc
and
adc
lahf
mov
ret
cltd
outsb
cmp
xor
cmp
cmp
in
sbb
iret
sub
aad
mov
xor
sbb
and
push
xchg
xchg
test
in
mov
jnp
cld
leave
insb
int
pop
dec
mov
mov
inc
icebp
ret
mov
insb
adc
in
sub
xchg
inc
xor
mov
xchg
lods
pushf
xorb
pop
cmpsb
xchg
inc
ret
stc
cld
inc
xlat
mov
outsb
mov
jae
xchg
out
push
or
in
sub
fcmovbe
ljmp
cltd
fstl
inc
cld
leave
inc
jo
pop
scas
je
fdivl
cmp
jle
mov
cmc
loop
adcb
data16
or
pop
jecxz
jge
aad
mov
scas
mov
insb
pop
mov
pop
push
cltd
jecxz
lret
sbb
mov
popa
mov
scas
out
xchg
cmpsl
lds
in
sbb
mov
xchg
fistps
mov
lds
xchg
iret
or
leave
pop
dec
sbb
push
xor
sbb
rclb
mov
fisubrl
cmp
mov
scas
rorb
rol
popf
xchg
test
orl
sbb
jecxz
pop
out
push
je
add
inc
add
sbb
sub
popf
cmp
inc
pop
cmp
jno
inc
add
inc
xor
js
dec
sbb
adcl
mov
das
mov
ljmp
add
popa
enter
in
mov
in
cltd
xor
fistps
ds
dec
sub
mov
sub
cmp
cmp
sbb
in
lds
dec
lahf
xchg
loop
jp
shll
lret
dec
mov
cltd
and
addl
and
int3
aas
xor
cmp
cld
add
push
pop
pop
icebp
sbb
dec
jne
int3
push
or
int3
adc
dec
jle
adc
add
sbb
cmpsl
fsubrs
stc
cmp
cmc
lahf
repz
xchg
xor
repnz
loopne
out
or
and
fs
xchg
mov
shlb
and
xchg
shlb
scas
and
jbe
adc
cmp
dec
xchg
movsb
push
lods
xchg
and
mov
lods
adc
pushl
call
cmpl
and
push
xorl
addb
xchg
int3
mov
arpl
or
js
fcomi
jno
or
cmp
lret
nop
fdivr
outsl
stos
pop
cmp
int3
ljmp
insl
sub
outsl
jl
inc
out
and
mov
xchg
mov
cmpb
jmp
cmc
negb
lret
gs
dec
jle
lock
movsb
push
stos
push
scas
adc
nop
shrl
inc
aad
clc
pop
or
pop
mov
sub
pop
push
cmc
pusha
imul
pop
push
mov
mov
and
imull
mov
dec
mov
cmp
or
jl
in
sahf
xchg
insl
insl
and
jne
dec
les
stc
mov
mov
ss
nop
das
in
add
cltd
stos
clc
add
fwait
cld
push
mov
push
fcoml
in
jnp
xchg
fidivl
mov
daa
test
fcoml
outsl
cmp
ljmp
in
cmp
repnz
sub
xchg
mov
insl
adc
adc
lret
imul
aas
out
mov
adc
sbb
mov
push
lods
sub
aad
nop
fimuls
mov
fs
and
icebp
push
imul
lcall
pop
dec
pop
imull
mov
push
aas
cmp
repz
xor
cmp
outsb
mov
pop
cmpsl
outsb
test
cmp
mov
mov
nop
cs
jne
xor
inc
movsl
mov
sub
out
pop
mov
popf
fidivrs
cmp
popa
jns
test
sbb
movsb
xchg
rorb
push
dec
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
jb
inc
mov
mov
and
push
xorb
mov
ficomps
sbb
xchg
es
adc
testl
pop
cmp
pushf
inc
jp
push
fcomps
mov
pop
mov
add
jne
jo
andl
or
data16
mov
and
fxch
andb
mov
sbb
and
in
push
adc
push
sbb
add
add
inc
or
imul
add
es
out
and
push
sbbb
add
mov
or
xlat
cmp
mov
mov
mov
out
mov
xchg
add
or
jbe
mov
pop
clc
mov
xor
movb
add
mov
ret
mov
jno
adc
arpl
fwait
push
mov
fdivl
std
xor
mov
scas
out
and
mov
in
jmp
mov
push
ljmp
aas
je
into
adc
push
iret
daa
or
outsl
mov
shrl
push
mov
insb
push
add
popa
xlat
ja
push
add
or
jo
dec
js
lea
dec
lcall
addr16
push
inc
loop
mov
xchg
mov
ljmp
sub
cmp
and
mov
shl
lahf
jge
dec
mov
int3
scas
rcrb
sahf
cmc
sub
add
xchg
arpl
jmp
xchg
negl
out
shll
repnz
inc
dec
lret
int3
adc
adc
loope
dec
sarb
test
sub
xchg
cltd
pop
pop
or
cmpsb
mov
dec
movl
mov
cmpsb
aas
sub
lcall
mov
xchg
or
xor
and
jno
sub
or
fs
jmp
xor
notl
or
aas
or
lods
cmpsl
add
push
mov
je
sbb
imul
add
mov
push
cmp
inc
test
in
cltd
and
jmp
xchg
cli
and
ds
inc
mov
inc
mov
dec
outsb
mov
mov
les
sbb
imul
cwtl
inc
adc
fs
lret
cltd
adc
insb
cwtl
push
mov
xchg
insl
fwait
sbb
jnp
sti
sub
aas
lods
ljmp
fisubrl
pop
sbb
push
pop
and
mov
gs
adc
addb
jne
mov
scas
xor
fucomip
gs
mulb
ffree
shrl
jnp
inc
pushf
ss
adc
jge
add
mov
mov
mov
jns
xchg
jl
or
xchg
ret
and
jp
push
daa
add
mov
pop
xor
inc
lods
loopne
jb
push
adc
lods
enter
aaa
add
adc
jecxz
loop
imul
repnz
or
pop
aas
pop
loope
mov
pop
mov
mov
outsl
mov
hlt
in
out
cmp
pop
push
mov
pusha
xchg
sbb
cwtl
inc
xlat
add
and
popa
lea
add
or
sub
mov
cmp
jne
call
mov
jbe
mov
leave
jge
dec
inc
hlt
dec
test
das
iret
adc
lahf
fildll
cltd
iret
jb
fdivrl
ja
add
push
out
push
mulb
mov
int
data16
pop
mov
xchg
popa
dec
int
hlt
ret
pop
jg
sub
adc
pop
pop
leave
add
dec
pop
fmull
add
cmp
repnz
ror
adc
ja
dec
jge
push
mov
xchg
jbe
shrb
sbb
cmpsl
jle
xor
push
sub
cmp
dec
and
cmpsb
fsubrs
pop
jne
test
in
add
cld
pop
aad
aad
in
jo
iret
pop
movsl
push
inc
pushf
mov
out
sbb
sbbb
fstps
aas
dec
xor
out
aad
aam
in
and
fidivrl
hlt
scas
cmp
shl
mov
fisubl
aas
aas
sarb
out
fisttpll
hlt
mov
dec
dec
pop
jle
mov
xchg
add
jo
ja
stos
dec
jge
mov
aas
cmc
cmpsb
mov
inc
outsb
or
pusha
bnd
pop
arpl
push
movsb
ds
into
add
xor
add
cltd
push
pop
lods
gs
lea
leave
mov
stos
shll
and
push
mov
sbb
or
inc
or
pop
stc
loopne
fs
or
popa
xor
fsubrs
into
push
pop
mov
and
jle
shrl
pop
xchg
popf
xchg
inc
inc
jno
scas
pop
mov
inc
xor
lods
mov
pop
mov
jbe
jp
bnd
dec
dec
outsb
dec
ret
xlat
fcom
and
pop
es
push
pop
scas
hlt
dec
push
movzwl
fsubrl
jle
stos
cltd
mov
jge
das
pusha
pop
pushf
cmp
push
int3
xor
dec
fcmovb
sub
cmp
fisubs
and
cli
daa
ja
pop
test
push
sti
ljmp
arpl
adc
pop
lods
add
lock
mov
push
and
jne
call
sbb
imul
mov
in
dec
mov
out
or
mov
cmpsb
adc
push
sbb
adc
jp
dec
outsb
or
xchg
add
insb
cmp
dec
loopne
icebp
push
push
dec
jmp
es
shrb
js
lods
inc
adc
loopne
push
loope
into
jg
icebp
mov
and
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
test
push
invd
add
punpcklwd
xchg
push
jne
aad
push
jns
add
add
xchg
or
movb
pushf
xor
jmp
movsb
mov
ljmp
mov
xorb
repz
dec
jp
and
and
mov
sahf
stc
jl
push
and
pop
das
leave
jl
aas
mov
aaa
mov
mov
insb
push
ret
mov
div
lret
cld
outsl
mov
lods
and
icebp
mov
mov
pop
repz
mov
icebp
pop
repnz
sub
icebp
mov
cmp
dec
add
pusha
cmc
aam
add
xchg
loopne
gs
aas
aam
dec
pop
insl
std
clc
mov
inc
loope
movsb
jmp
dec
clc
mov
sub
ss
lret
jne
hlt
test
mov
xor
rcr
or
or
xchg
jmp
fstpt
fstpl
mov
int
add
clc
shll
out
sub
mov
outsl
and
ja
jp
gs
cltd
jns
or
dec
sahf
cmp
and
add
cmp
into
dec
or
xorb
sbb
sbb
mov
shlb
popa
mov
movsb
sahf
adc
mov
arpl
push
push
test
adc
dec
cmp
push
dec
movsl
mov
sub
pop
mov
fiaddl
mov
cmp
mov
add
lret
mov
insl
mov
inc
jmp
in
leave
in
pop
scas
or
adc
sbb
jns
cmpsl
jnp
out
test
sub
xchg
enter
inc
addr16
in
repnz
adc
push
in
adc
notl
pushf
or
cmpsl
arpl
lds
loop
imulb
add
mov
pop
ret
mov
movsl
xchg
sbb
out
and
test
xchg
adc
lcall
les
in
xor
cld
cmpsb
pop
and
jge
and
jne
jl
cmpsl
and
out
outsl
push
iret
inc
pop
fisubl
pminub
notl
subb
adc
les
cli
inc
inc
imul
clc
stos
mov
pop
sbb
inc
inc
inc
sti
test
call
push
lret
cmp
push
xchg
and
scas
inc
mov
out
leave
outsb
add
cwtl
in
mov
stos
in
jne
fwait
add
cmc
in
jno
pop
sbb
fwait
mov
loope
ja
adc
dec
iret
mov
fwait
movl
lock
and
icebp
scas
add
jo
shr
jp
scas
fistpll
pop
xor
mov
push
mov
cmp
inc
imul
xchg
sub
xchg
movsb
roll
and
add
aam
out
in
cmp
mov
add
xlat
rcll
pop
xchg
sti
stos
xchg
mov
inc
lret
cld
mov
pop
or
stos
loop
cmp
push
inc
cmp
cmp
jg
cmp
add
push
loope
mov
icebp
sub
cmpb
cmp
push
lret
pusha
in
sbb
nop
xor
xlat
push
adc
xor
sahf
mov
sbb
mov
sub
aad
or
movsb
int3
test
test
cmp
jbe
push
jle
add
call
inc
shlb
stos
adc
dec
scas
lcall
inc
bound
loopne
xchg
or
push
inc
hlt
rclb
loope
pop
mov
out
dec
pushf
imul
adc
push
out
sti
jg
stos
adc
xor
push
cmp
xor
out
mov
lock
in
mov
sar
aam
fsubl
into
es
outsb
arpl
arpl
pop
jno
jbe
inc
cmp
xchg
sub
pop
data16
lahf
fwait
push
xchg
leave
push
cli
notb
popf
push
std
rcrl
ds
pop
or
shll
out
mov
push
bound
les
addl
inc
in
pushf
sbb
cwtl
mov
or
add
popf
or
xor
lcall
fstl
test
mov
dec
fisubrl
into
pop
aad
daa
fnstenv
scas
clc
in
sub
push
sub
loop
pop
lret
pop
outsb
add
gs
jle
enter
mov
shr
scas
ds
in
lods
sub
pushf
add
fistl
jb
ss
lcall
adc
mov
out
cmpsb
xchg
xor
lret
pop
push
cmpsl
sbb
mov
int3
sbb
shr
lock
les
push
xor
or
out
mov
xchg
mov
fsubrs
mov
push
outsl
push
sbb
sub
xchg
dec
outsb
test
sub
cmc
jp
push
pusha
and
test
mov
mov
lahf
inc
jecxz
add
int3
inc
pusha
test
leave
outsb
xchg
mov
pop
and
fwait
pop
mov
push
inc
push
xchg
inc
jnp
insl
mov
aaa
outsb
pop
jg
gs
mov
dec
inc
imul
mov
mov
inc
cmp
test
add
push
sub
pop
lret
lret
pop
push
call
jne
arpl
cmp
add
jl
sahf
pop
dec
cltd
movlps
adcl
cmp
mov
loop
mov
inc
push
pop
sahf
mov
push
adc
aas
mov
sub
inc
ret
sub
int3
pop
dec
repz
sbb
cmp
pop
fisttpll
push
sub
in
in
push
outsb
subl
push
sbb
jle
mov
in
dec
xchg
repz
popf
and
mov
movsl
setns
fimuls
icebp
aas
xchg
adc
jl,pt
push
push
outsl
nop
sbb
pop
jle
test
int3
cltd
mov
and
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
xor
dec
invd
add
prefetch
jno
stos
push
adc
test
jge
pusha
lahf
adc
mov
jle
inc
bndldx
aaa
pop
cmp
je
mov
int
adc
mov
mov
add
es
xchg
or
xchg
sbb
out
lcall
mov
pushf
je
adc
lcall
xchg
js
add
rol
push
scas
pop
pop
fwait
shrl
sahf
ja
mov
test
xor
push
je
adc
rorb
scas
pop
xchg
xchg
sbb
imulb
dec
divl
mov
jno
test
and
sub
stos
jnp
lods
repz
pusha
xchg
adc
pop
das
xchg
mov
std
or
lcall
mov
xchg
ret
inc
mov
cmp
mov
lahf
push
jecxz
shr
fwait
jmp
jge
inc
inc
ss
push
push
and
cli
jbe
jns
sbb
xchg
push
int3
lods
cwtl
mov
loop
sbbb
cmp
pop
stc
sahf
mov
pusha
pop
clc
jg
int3
hlt
into
fsubrs
adc
dec
mov
inc
popf
hlt
xor
and
cmp
xchg
push
cmp
sbb
dec
push
and
sahf
pop
hlt
push
mov
ret
lea
add
int
das
rorl
pop
jle
mov
push
cmp
add
loope
and
push
loopne
nop
or
jnp
pop
inc
aam
push
cmp
push
add
cmp
or
adc
push
rcl
ret
andl
loopne
rol
pop
adc
pop
test
subl
push
loopne
adc
call
out
mov
or
cmp
xchg
jmp
rcrb
xor
sbb
mov
cmp
add
mull
lcall
push
sub
mov
aam
clc
xor
or
ja
inc
xchg
pop
add
pop
rcrl
in
aas
cmp
mov
cmp
mov
repz
cli
cmp
pop
sbb
cmp
xchg
sub
xor
mov
sub
mov
jmpw
jle
incb
loopne
mov
and
inc
add
rcl
scas
out
cmc
call
test
nop
cmpsl
mov
out
aam
sbb
xchg
jp
mov
push
sbb
sub
jge
jg
add
outsl
fistps
sub
shrl
imul
das
cmp
adc
int
mov
pop
dec
into
adc
jae
add
ja
or
mov
pop
mov
mov
pop
jne
add
es
pop
mov
push
mov
mov
cwtl
pusha
mov
fnstsw
mov
lahf
pop
sbb
lock
xor
loop
data16
lahf
movsl
cmpsb
pop
push
adc
fmul
out
sub
in
in
mov
xchg
push
xor
xchg
and
ss
sub
pop
loop
test
adc
daa
scas
cmpsl
aam
fisubrs
sbb
out
addl
sub
aas
lahf
aam
adc
inc
inc
pop
or
mov
loope
xor
and
dec
out
lock
arpl
fildll
lcall
mov
xchg
mov
cmp
cli
sbb
fldenv
insl
pop
push
loopne
mov
xor
xchg
xor
loop
dec
jb
mov
loope
dec
and
and
sub
dec
xchg
outsl
call
cmpsl
xchg
iret
sub
popa
inc
lcall
test
adc
sbbl
mov
cmp
lods
mov
shl
push
addr16
push
xor
std
mov
add
dec
loope
sub
call
fs
sbbl
ljmp
addr16
inc
pop
cld
mov
mov
jmp
imul
bound
mov
cmc
mov
or
gs
rcll
jg
ss
je
test
insl
dec
pop
imul
imul
ret
pop
int3
sub
fcoms
cmc
xchg
nop
iret
dec
outsb
jl
mov
cmpsl
push
mov
mov
push
sbb
pop
xchg
sub
mov
jnp
int3
je,pt
rorb
movsl
or
adc
in
jbe
in
xchg
test
aad
adc
add
xor
cmpsl
push
int3
mov
aam
cli
pop
and
dec
mov
adc
mov
jl
adc
loop
aas
cmp
adc
push
imul
popa
xchg
pop
mov
std
xor
cmp
pop
es
adc
push
adc
cmc
rclb
scas
in
cmpsl
cmp
and
xchg
cmpsl
nop
out
cmp
xlat
shrl
mov
xchg
mov
jae
repz
pop
sbb
inc
sbb
test
ret
xchg
not
push
mov
notb
pop
sbb
pop
popf
cmp
jge
mov
into
dec
jecxz
ja
outsb
inc
std
mulb
or
dec
mov
movsl
in
les
inc
fisubs
cmp
push
pop
mov
gs
out
jecxz
xor
test
lds
mov
pop
adc
loope
cmp
mov
aaa
dec
xchg
dec
int3
add
xchg
or
arpl
jno
push
test
cld
sbb
lret
dec
aam
and
sub
mov
dec
dec
les
mov
movsb
stos
adc
test
in
testb
es
sbb
jp
sbb
pop
fiaddl
out
andl
or
push
pop
jno
sahf
insl
jp
insb
lret
add
cmc
jae
lods
popa
pop
jne
mov
sub
loop
xchg
adc
sti
rolb
mov
jp
incb
mov
das
popa
xor
push
ljmp
push
xchg
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
packsswb
add
in
daa
cmp
arpl
frstor
or
loop
jns
test
addr16
fisttpll
jno
fwait
gs
enter
add
and
sahf
or
out
cmp
cmp
ret
pushf
pop
push
mov
xchg
imul
cmpl
sub
lret
hlt
aad
sar
movsb
mov
fdivrs
mov
inc
not
ds
out
aas
or
sbb
xor
xchg
jecxz
dec
call
mov
jge
adc
add
add
int3
add
mov
inc
out
jge
imul
jbe
jo
add
mov
lahf
sbb
shlb
mov
dec
popa
ds
popf
dec
add
xor
fstp
mov
mov
add
push
adc
dec
jmp
sbb
or
pop
call
jecxz
dec
test
sbb
sahf
adc
icebp
mov
insl
and
aad
lret
into
sbb
xchg
loopne
inc
jae
fildl
cli
imul
xchg
testl
lcall
pushf
into
inc
mov
sbb
pop
dec
std
fwait
sbb
in
jne
cwtl
adc
or
mov
lret
decb
sbb
movsl
stos
cmp
fucomi
ret
and
mov
cmp
xor
icebp
mov
mov
adc
imull
inc
sub
mov
and
mov
xor
popf
out
jg
into
sub
sarl
mov
mov
mov
dec
insl
cmp
dec
mov
cmp
push
repz
inc
out
push
xlat
test
stos
dec
mov
lds
sbb
add
aad
imul
fstps
sahf
out
int3
imul
push
ret
imul
xchg
cmpsb
xor
cld
pop
xchg
std
push
fldt
lods
fxch
fs
pop
dec
int
lods
lret
adc
lods
sub
outsb
sub
xor
inc
iret
sub
push
cmp
mov
xor
hlt
pop
inc
shr
xchg
test
stos
add
sbb
sub
cmpsl
adc
inc
jns
and
push
loope
and
sub
je
pop
mov
mov
add
mov
mov
mov
test
rorb
mov
push
dec
inc
lahf
mov
xor
xchg
in
pop
mov
jge
mov
lock
push
inc
add
push
jb
dec
xchg
test
pop
mov
inc
das
or
or
mov
dec
dec
nop
in
push
repnz
scas
test
popa
pop
fs
add
in
movsb
rcrl
sub
and
mov
mov
dec
dec
sbb
call
mov
mov
fimuls
jmp
jg
out
icebp
push
test
clc
xchg
lods
jl
adc
or
mov
stos
and
pop
mov
dec
jns
mov
cmp
jmp
add
push
addr16
popa
mov
xchg
push
nop
xor
shrl
cmp
pop
test
lods
push
lock
ret
fistps
add
jno
xor
pop
pop
inc
arpl
mov
cmp
flds
mov
aam
out
pop
aas
xor
sub
xor
and
xor
sub
add
test
pop
fistpll
loope
icebp
sbb
stos
cmp
mov
fldcw
cli
or
pop
pop
mov
or
cmc
int
mov
rclb
lock
mov
repnz
cld
push
movsl
mov
and
js
pop
ja,pn
call
shll
mov
scas
sbb
js
test
popa
icebp
adc
adcl
sahf
jno
inc
fwait
and
stc
scas
and
inc
cmp
out
jl
nop
adc
mov
fnstsw
ds
aaa
inc
xchg
xchg
push
mov
add
jge
mov
stc
out
sub
pop
pop
inc
ret
scas
inc
xchg
mov
or
mul
mov
scas
sbb
xlat
inc
subb
jne
imul
repnz
int3
jmp
movsl
lret
adc
lods
and
mov
adc
in
das
imul
push
add
test
fs
in
xor
jp
imul
add
adcb
cmp
sbb
outsl
movsb
cmp
ds
mov
or
mov
nop
lock
testb
adc
shrb
icebp
int3
xchg
xchg
call
push
push
roll
mov
adc
or
adc
fimuls
inc
out
lods
cmp
xor
mov
fldl
dec
pop
mov
pop
lock
ljmp
std
push
add
add
mov
adc
sub
push
out
into
fisttpl
push
popf
or
out
in
xchg
jns
xor
push
sbb
int3
dec
stc
jno
cld
bound
mov
cli
mov
lds
cmp
in
xor
or
dec
xor
mov
inc
inc
rcll
inc
popa
cmp
xchg
dec
arpl
movsb
movsl
mov
inc
xor
and
mov
call
ja
insl
cmp
hlt
gs
mov
fdivrs
dec
cmp
mov
outsb
stos
clc
mov
lret
sub
sub
addr16
lcall
bound
out
xor
mov
and
mov
adc
mov
sbb
xchg
or
sbb
mov
sbb
xor
bound
or
inc
and
dec
inc
rorb
add
dec
dec
push
popa
push
cmpsl
in
cmp
lods
test
aam
stos
inc
mov
addr16
xchg
into
inc
xchg
mov
mov
mov
mov
out
inc
fldl
in
decb
mov
lods
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
cltd
shlb
or
movntps
lds
mov
push
out
mov
inc
xor
mov
test
out
cmp
cmpl
enter
pop
imul
push
and
cli
pop
and
icebp
repz
imul
jbe
cmp
sbb
add
mov
rcll
xor
lods
std
push
push
popf
cli
shll
mov
ficompl
xor
outsb
lock
and
or
adc
movsb
add
push
sub
inc
jmp
fsubrl
pop
lret
jns
fdivrp
cmp
or
sub
cld
shlb
movsb
mov
dec
adc
lret
pushf
cmp
in
daa
jbe
hlt
lret
mov
hlt
enter
fmuls
fldenv
jb
add
jp
sbb
inc
sahf
int
rcl
ja
in
push
aad
mov
divl
inc
inc
mov
mov
add
lods
in
fidivrl
test
adc
jg
lods
add
out
dec
rcl
neg
ss
repz
mov
cmpsb
xchg
pop
xor
adc
xchg
dec
lods
cltd
xor
add
push
bound
sub
cltd
or
fisubl
sub
imul
xor
bsf
aaa
in
aaa
add
int3
shrl
push
in
pop
or
and
fnstsw
xorl
lods
dec
sbb
cmpsb
or
add
push
adc
and
mov
xchg
inc
clc
adc
icebp
out
mov
xor
test
fildll
mov
sub
ja
movsl
xchg
mov
shrl
cwtl
loopne
dec
add
inc
add
sub
sbb
add
mov
mov
ss
jne
int
fsubrl
or
inc
pop
cmpsl
sbb
movsl
insl
inc
out
mov
in
jo
call
mov
xlat
xchg
je
jl
enter
adc
outsl
insl
pushf
sarl
popf
xor
andl
mov
call
test
push
aas
adc
jb
add
xlat
dec
int3
mov
ret
add
lret
add
pop
push
cmpsl
lcall
xchg
jnp
mov
xchg
sbb
jo
loope
push
fucomp
lea
rcl
dec
sahf
add
mov
xchg
jb
int
addl
stc
dec
mov
sub
ret
push
int3
sahf
sbb
iret
mov
dec
mov
mov
outsb
in
xor
jge
push
call
rcrb
dec
clc
in
out
loopne
es
imul
adc
push
jp
pop
or
mov
sub
out
mov
sub
faddl
outsl
xor
or
imul
mov
sub
pop
cmpb
cwtl
sbb
clc
data16
sub
in
icebp
outsl
jl,pt
loop
xlat
jne
call
jg
push
repnz
movsl
and
insb
es
sbb
adc
pop
lods
pop
into
xor
popa
xor
or
add
or
mov
loopne
out
test
push
adc
jmp
lret
xchg
pop
insb
aad
sub
loope
pop
inc
mov
and
jl
inc
mov
stos
mov
mov
int3
mov
pop
pop
fcoms
mov
add
stc
aad
icebp
adc
cmp
dec
push
int3
adc
lods
add
out
scas
jge
sti
sub
sub
push
mov
push
popa
pop
mov
push
pop
test
mov
mov
cwtl
daa
cmp
negl
std
lock
push
inc
lret
stc
or
sti
loopne
ds
mov
pop
inc
les
mov
jmp
xlat
loop
je
mov
xor
sarb
xchg
mov
xor
push
jmp
psubd
lods
mov
cmp
sbb
out
adc
sarb
pop
das
lret
pop
fstpl
mov
adc
popa
add
call
mov
test
nop
xchg
xchg
clc
sahf
jmp
inc
xchg
lods
push
insl
xchg
xchg
xchg
xor
and
mov
jle
push
mov
scas
es
fs
adc
stc
rcll
cld
sub
jns
xor
push
mov
mov
and
leave
jg
sarb
dec
dec
sahf
les
mov
push
cltd
jg
into
test
mov
sbb
dec
lcall
cmpsl
pop
movsl
clc
xor
adc
mov
and
fistl
rcrl
mov
lea
pop
push
adc
scas
cmpl
xchg
stos
jp
mov
scas
pusha
pop
xchg
adc
sbb
lods
fucomp
mov
lods
inc
and
clc
dec
clc
int
lods
xchg
inc
ljmp
fwait
and
rcll
dec
dec
inc
sbb
xchg
fstpl
lds
jp
test
jo
scas
test
in
sbb
repz
mov
mov
xchg
ljmp
lcall
jge
inc
sub
sbb
xor
std
inc
fnstcw
xor
xchg
lret
pop
jnp
xchg
rcr
push
pop
dec
mov
pop
test
clc
fmull
xchg
mov
movsb
dec
mov
test
cltd
cmpsl
dec
mov
jg
xlat
repnz
gs
xchg
pop
aam
movsl
xor
ja
jge
sub
ja
sbb
movsb
leave
mov
clc
mov
xlat
popf
jl
adc
mov
cld
push
call
dec
jecxz
jge
leave
pop
jl
aaa
pop
shll
ja
adc
sbb
dec
jge
fdivrs
or
jge
sub
xchg
xchg
add
and
in
out
inc
lret
add
push
and
hlt
mov
jle
lods
jbe
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
cs
out
mov
pfmul
cli
aaa
cmc
andl
pop
pop
and
mov
fs
push
adc
push
data16
jne
add
das
call
sub
outsb
cmp
inc
sbb
out
mov
shlb
aad
xor
loopne
xor
mov
fildll
inc
orb
push
pop
sbb
push
inc
cmp
pop
jecxz
xchg
pushf
push
jp
scas
mov
ljmp
adc
imul
orb
jmp
xchg
out
ss
xor
xchg
xor
jb
adc
idivl
out
ja
mov
sub
cmp
fmuls
push
scas
jnp
mov
test
pop
push
xchg
cmc
arpl
iret
push
subl
out
cmp
leave
dec
and
sbb
add
bound
loop
das
pop
dec
filds
ficoml
iret
cmpsb
or
sub
cmpb
adc
test
je
imul
andb
mov
insb
push
movsl
jg
mov
inc
push
movsl
adcb
call
leave
mov
cmp
testb
mov
pop
inc
stos
push
xchg
pop
loope
outsb
fiadds
into
jg
dec
push
cmc
push
mov
ds
and
insb
fdivs
jo
xlat
push
jl
outsb
xor
jl
sub
xchg
mov
inc
icebp
orb
push
movsb
imul
fdivs
jbe
in
dec
ret
mov
notb
int3
inc
pushf
icebp
cmp
mov
lret
adc
lret
add
push
pop
cmp
test
cwtl
xchg
pop
ds
stos
std
ret
imul
xor
lret
insb
sub
pop
js
pop
movb
sub
mov
ljmp
jp
push
sbb
loopne
sbb
adc
bound
xchg
out
sbb
ss
add
adc
aaa
jno
inc
push
jb
lods
pop
popa
xor
scas
mov
lock
and
subl
and
mov
inc
mov
or
mov
outsb
mov
and
or
test
jae
aaa
or
jb
mov
jecxz
rorl
mov
das
pop
push
mov
or
gs
lds
add
mov
adc
inc
sbb
jo
add
or
xor
cmpsb
mov
sub
pop
mov
xchg
fdivl
icebp
mov
xchg
dec
sti
loopne
push
mov
pushf
cwtl
repz
sub
fdivrs
rcr
or
loope
lcall
loope
cmp
pop
push
jl
scas
or
dec
xchg
or
push
iret
pop
sbb
rcr
dec
test
filds
xchg
xchg
or
and
jnp
add
js
jns
test
and
test
mov
adc
cs
std
xchg
or
lahf
std
jbe
fists
add
clc
aam
xchg
in
cmp
test
sbb
stos
in
sub
fsubl
mov
sub
xor
loope
mov
fiadds
inc
dec
xchg
sarl
std
jnp
sbb
mov
cmp
inc
js
cmp
cmp
sti
aaa
adc
lods
mov
decb
movsb
ds
xor
cmp
mov
cmp
or
mov
sti
out
sub
ss
jno
inc
pop
push
dec
pop
and
jne
mov
imul
and
orl
dec
ja
dec
inc
jmp
xor
jge
pop
mov
or
arpl
jle
orb
mov
dec
lahf
out
xchg
pop
mov
test
pop
sub
insb
mov
lods
movsl
dec
sbb
imul
dec
insb
orps
jg
pushf
aas
adc
jmp
test
nop
adc
dec
ret
pusha
jmp
mov
rorl
popa
push
aad
scas
shl
push
test
ret
pushf
jmp
pushf
mov
push
pusha
and
pop
mov
cmp
mov
out
clc
inc
add
shlb
jne
pop
ret
mov
jo
mov
cmp
sbb
adc
getsec
jmp
push
lret
es
or
shr
and
in
call
es
fcomps
pop
push
int3
call
jmp
in
cwtl
dec
sbb
sbb
daa
jle
scas
cmp
loop
scas
adc
lret
jp
or
push
cmp
js
int3
ret
fwait
push
push
movsb
out
loop
xor
and
insl
cld
dec
adc
dec
cmpsl
sti
sbb
cld
stos
sub
mov
lock
mov
dec
sub
imul
addr16
mov
outsl
mov
scas
aaa
inc
xlat
or
repz
arpl
push
loope
mov
cmp
sub
addl
pop
dec
xor
in
mov
cmpsb
int
data16
outsl
fldenv
aas
ds
fidivrs
test
clc
loop
xor
lods
sbb
lds
in
push
icebp
add
sbbl
popf
push
sub
or
mov
push
out
sbb
adc
stos
add
sbb
fcmove
ret
std
test
mov
sar
jae
test
inc
cmpsb
cli
mul
xchg
andl
fisubrs
test
mov
xor
cltd
dec
sub
or
add
cmpsb
mov
xchg
shll
loop
fs
enter
test
push
data16
movsl
push
jmp
orb
push
cwtl
lret
rcrb
cmpl
adc
add
mov
sbb
js
add
xor
jb
js
adc
cwtl
test
add
sub
fs
cli
fcomps
jb
shr
loopne
add
add
adc
or
inc
or
sbb
inc
ficompl
sbb
test
ja
sti
sub
cmp
and
sub
adc
lock
cmc
movsb
icebp
in
add
adcb
mov
repz
pop
mov
cmpsb
mov
push
in
int
fs
lea
xor
ss
pop
fists
aas
dec
test
ja
in
mov
test
mov
push
pop
in
cmp
insl
test
adcl
insl
sbb
mov
cmc
pop
out
mull
push
fs
jne
push
movsb
leave
fmulp
pop
mov
test
push
test
inc
lock
adc
adc
mov
mov
mov
jns
mov
and
push
inc
pop
in
mov
aam
xchg
dec
sub
in
nop
jge
inc
cmpsb
xchg
dec
inc
add
int
adc
jne
stos
xor
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
jnp
dec
clc
sbb
mov
nop
clc
mov
fisubl
das
adc
bound
rcr
mov
pusha
adc
cmp
outsb
rcr
nop
insl
push
outsb
aaa
inc
or
pushl
push
lods
mov
xchg
and
inc
jbe
ds
mov
lret
andl
fxch
adc
xchg
adcl
addb
clc
xchg
cmpsb
ret
xchg
lock
push
aaa
mov
nop
mov
imul
adc
xchg
pop
jno
mov
out
adc
ja
test
inc
ret
cwtl
xor
pop
sub
rolb
and
aad
sub
fs
or
pop
imul
dec
je
sbb
sub
and
mov
inc
mov
vmread
sbb
fcoms
mov
movnti
ljmp
xor
repnz
jb
fnstenv
mov
xor
sbb
pop
adc
xor
inc
mull
jmp
pop
gs
jge
cs
lret
xchg
sbb
fldcw
xor
test
rcrl
insb
out
push
mov
dec
mov
dec
sti
push
jo
inc
pop
in
sub
jg
bound
enter
and
push
inc
repz
sti
push
xchg
es
jno,pn
mov
mov
aam
loope
in
add
movsb
cltd
mov
leave
fdivrl
into
cmp
mov
lar
ss
int3
xor
ss
enter
call
mov
push
pop
push
fdivl
jb
sub
xchg
cmp
ss
lcall
cmpsl
leave
or
fwait
and
and
and
sub
add
push
int3
or
jle
ss
ss
sub
xor
ret
inc
dec
ret
aas
cltd
aam
sbb
mull
jae
in
test
loopne
push
mov
mov
pop
or
adc
ds
dec
pop
pop
addr16
sbb
adc
xchg
xchg
mov
iret
enter
xor
dec
xor
mov
jns
in
push
push
imul
xchg
and
call
insb
leave
outsl
and
movsb
sbb
adc
inc
or
pop
xchg
shrb
or
and
call
add
mov
lods
int3
leave
and
xor
test
mov
and
jb
nop
jecxz
xor
out
add
adc
pushf
scas
call
or
sbb
cld
xor
jne
mov
nop
push
insb
faddl
mov
xchg
andb
push
repnz
repz
addr16
into
or
test
inc
push
nop
xor
ss
dec
add
sti
int3
and
jns
fs
dec
out
scas
imul
insl
mov
iret
xlat
sbb
adc
lret
sbb
out
mov
inc
cmp
pop
push
xchg
fsubrs
call
mov
push
stos
stc
sub
mov
and
sub
pop
mov
nop
mov
push
xchg
jo
testl
fistpll
aaa
fnstenv
jae
sahf
xchg
sti
mov
cwtl
stc
clc
jne
imul
adc
test
and
inc
ss
cld
mov
pop
inc
iret
mov
lea
ret
inc
pop
ds
data16
dec
sahf
mov
cmp
mov
push
sbb
adc
or
mov
shll
jne
mov
dec
mov
imul
pushf
lahf
cmpsb
lods
pusha
or
movsb
push
test
dec
shlb
ja
push
cmc
aad
xchg
repnz
pop
in
scas
fidivs
xchg
push
adc
cmc
fisubl
imul
push
sub
lea
leave
mov
push
repz
outsl
jno
push
mov
int3
push
jmp
xor
pop
xor
cmp
std
inc
mov
push
in
aaa
or
mov
lods
mov
loopne
imul
or
jecxz
inc
sbb
cmp
aad
adc
test
sahf
mov
pop
xchg
testl
aaa
cmp
or
mov
mov
lret
xchg
ljmp
adc
fimull
lcall
gs
leave
inc
sub
std
rorl
cmc
cmp
movsb
mov
xor
js
mov
adc
cld
and
je
idivb
dec
dec
and
sub
iret
xchg
les
stc
rorl
das
in
pop
cmpsl
adc
pop
sbb
rorl
lahf
stos
sub
inc
outsl
push
loop
pop
gs
push
lods
xor
repz
test
je
inc
and
fisubs
pusha
jae
pop
push
push
cmp
xorl
or
xlat
fbstp
int3
mov
dec
ja
cld
xchg
rorl
icebp
pushf
outsl
cld
insl
scas
in
jne
test
jae
fdivs
inc
movsl
inc
mov
test
clc
xchg
mov
add
mov
enter
mov
adcl
test
fnstcw
xor
pushf
call
bound
aad
push
adc
mov
dec
dec
popf
pop
dec
in
insl
insl
stos
movsl
ja
fsubrl
pop
pop
or
cmp
dec
cmp
xor
push
lock
int3
mov
fs
test
mov
mov
lahf
mov
not
push
mov
ja,pn
aas
div
lods
add
xor
pop
int
inc
pop
dec
shll
jns
push
stos
jb
jb
pop
xor
sti
test
ret
push
adc
xchg
rcrb
popf
mov
cmpsb
pop
cmp
mov
sub
icebp
sarb
dec
loop
xor
push
jnp
xor
ds
sub
in
test
pop
inc
jmp
stos
addr16
mov
daa
inc
xor
jecxz
sbb
add
mov
sub
jae
sbbl
xorl
inc
mov
push
call
xlat
andb
add
test
enter
rolb
mov
or
loope
lds
test
xor
in
jmp
adc
xchg
lock
and
dec
mov
into
dec
loope
stos
xor
mov
and
sbb
xchg
pop
xchg
dec
fwait
xchg
les
add
pop
dec
fldl
mov
addr16
rep
cmp
pop
cli
insb
ret
mov
xchg
sub
sbb
xor
mov
xchg
fisttpl
sahf
xor
mov
sbb
aaa
xchg
inc
mov
sbb
pop
mov
sbb
cmpb
push
imul
fiaddl
es
iret
jp
sub
adc
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
sar
and
and
jne
cmp
cmp
imul
les
inc
pop
fstl
mov
dec
lcall
cmp
xchg
or
pop
sub
mov
mov
mov
adc
and
dec
repz
push
cmp
push
sbb
scas
cmp
test
insl
add
and
xlat
mov
mov
mov
and
rolb
popa
call
mov
psrad
incl
dec
push
fidivs
fstpt
mov
cli
aam
mov
insb
push
mov
mov
cld
mov
pop
cmp
xchg
xor
push
pop
fbstp
mov
ds
test
nop
pop
cmpsl
nop
pop
cs
mov
insl
sar
out
adc
sbb
push
negb
pop
jbe
xor
xchg
xor
adc
jne
js
mov
push
sbb
fistps
cmp
jo
push
xchg
xor
sarl
sub
add
imul
outsl
or
fwait
js
jp
pop
mov
das
mov
arpl
lods
mov
push
adc
rcrl
and
repnz
bound
and
pusha
pop
jno
sahf
js
andb
cwtl
pushf
js
mov
push
stos
push
aas
cmpsb
pop
cld
fmulp
sub
push
mov
daa
out
jae
addr16
lcall
aam
xlat
aaa
sahf
or
xor
xor
hlt
sbb
jecxz
ret
or
or
and
and
pop
jbe
mov
mov
sbb
int3
push
xchg
movsb
push
inc
js
movups
je
jno
roll
push
pop
fwait
aam
dec
cmp
adc
lds
lcall
sub
call
dec
movsl
mov
fists
outsb
fmuls
lahf
out
sub
cmp
mov
push
mov
and
fwait
pop
add
xchg
push
loope
scas
and
xor
inc
jp
or
mov
mov
jne
imul
inc
ss
cmp
adc
stos
fwait
dec
rclb
pop
adc
movsl
fdiv
out
movsl
fsubrs
adcb
push
xor
clc
xor
jae
cli
dec
data16
add
mov
fistpl
popa
mov
lcall
lock
push
pushf
add
sub
pop
fldl
insb
xor
sub
add
push
or
xchg
mov
js
pop
aam
orl
and
sbbl
aaa
les
xor
cmp
and
xor
jnp
test
ss
xor
or
leave
and
ja
cmp
fwait
scas
jae
lcall
call
cmp
push
mov
or
jno
dec
std
bound
stos
push
mov
pushf
ror
mov
fldt
aaa
ds
sti
xchg
data16
mov
ja
push
xor
scas
imul
mov
movsb
lods
cli
sti
insl
jle
inc
std
stos
enter
mov
jge
out
and
or
jge
insl
leave
outsb
in
les
andb
sub
cmp
out
dec
sub
push
in
ss
out
push
adc
jmp
fs
and
fs
rorb
push
dec
hlt
cmp
out
jae
loopne,pn
bound
adc
cmpsb
nop
mov
sti
in
push
lods
imul
push
mov
cld
and
sub
data16
sbb
lods
sbb
cwtl
and
jbe
rclb
add
mulb
dec
jo
adc
fs
pop
mov
jb
push
sbb
dec
mov
mov
scas
leave
ret
mov
sub
addl
out
add
sbb
out
xchg
scas
jo
scas
insb
mov
fisubs
cli
push
pop
rcr
cmp
test
outsl
xor
xor
out
mov
dec
mov
lcall
sub
inc
sub
arpl
and
add
out
pop
mov
dec
jl
inc
hlt
mov
fbld
mov
or
out
mov
ss
jecxz
scas
fdivs
add
in
ret
lea
xchg
or
mov
inc
cli
mov
add
xchg
mov
xchg
jl
lods
jbe
sub
mov
xchg
testl
mov
jns
sbb
pushf
dec
stos
mov
dec
mov
pushf
mov
jb
mov
sub
aam
lock
mov
sbbb
cli
pop
sbb
lret
and
dec
add
daa
loop
int
cmp
int3
cmp
xchg
xchg
push
mov
add
jbe
xor
inc
movsb
jnp
mov
pop
loopne
xor
mov
aaa
cwtl
mov
clc
aad
wbinvd
cmp
call
push
jnp
cltd
xchg
sub
mov
mov
std
lret
stos
cmp
jmp
mov
idivb
std
and
test
shrl
xor
inc
jl
fildll
dec
jno
popa
jle
lock
clc
cmpsl
push
mov
sar
mov
mov
cmp
cmp
test
jb
jecxz
jae
nop
lret
aam
stc
sub
sub
jge
out
adc
test
mov
mov
pop
nop
push
adc
mov
push
jne
fldl
lock
sub
push
iret
sahf
rolb
xchg
add
sub
ret
jecxz
cmpl
outsb
std
jno
lock
cmp
sar
dec
jg
mov
adc
loope
inc
adc
mov
mov
push
mov
jmp
les
mov
jbe
out
cmp
adc
cld
and
cld
ret
mov
int3
cmp
mov
xor
mov
dec
int3
cmpb
cmp
or
pop
dec
pop
xchg
lock
adc
adc
push
popa
mov
sub
dec
dec
jge
leave
ja
cmp
cvtpi2ps
mov
into
push
jno
je
cmp
stos
lods
fcomps
dec
stos
cmp
imul
adc
int3
xor
fcomip
dec
lret
mov
push
aam
fs
mov
push
push
and
pop
iret
fdivs
xor
xor
fisttpll
fwait
fwait
xchg
mov
lret
fmul
cmp
mov
fwait
xchg
testb
outsl
outsl
stos
dec
sarb
cwtl
cmp
cmp
lret
cli
orb
imul
in
outsb
hlt
into
mov
int
mov
aam
add
xchg
jp
test
mov
stc
jae
loope,pt
mov
subb
mov
xchg
xor
sub
jmp
into
add
or
xor
notl
mov
repnz
lock
repz
stc
in
fcoms
adc
mulb
pop
or
cmp
cmp
cmp
pop
push
sub
fcomps
fldcw
xor
iret
add
ret
aam
dec
push
inc
sub
retw
cltd
dec
std
sti
sbb
fdivl
stos
mov
mov
subl
loop
push
push
leave
pop
adc
mov
pop
push
cld
cmp
nop
mov
sub
sbb
in
mov
in
call
mov
loop
nop
sub
jp
mov
into
lahf
rcrl
mov
push
jno
sbb
mov
lret
jle
cmpsl
imul
mov
dec
push
sub
and
sub
cs
imul
jecxz
add
cmpsb
out
imul
xlat
rol
imul
loopne
adc
insl
xor
sarb
loope
mov
pop
inc
fists
jne
add
imul
cmp
pop
xchg
js
ja
push
mov
lahf
sbb
push
jo
out
loope
mov
inc
pusha
push
mov
or
push
jecxz
and
xchg
out
icebp
clc
push
cmp
sbb
arpl
mov
pushf
sub
and
add
mov
or
shlb
cmp
dec
xchg
sahf
std
pop
incb
iret
mov
enter
out
sub
test
sub
sbb
push
or
or
cmpsl
std
fdivs
dec
daa
adc
sbb
xor
cmpb
sbb
mov
inc
push
lret
imul
cmp
push
pushf
cli
sub
cmp
pop
cld
mov
xor
add
lahf
sub
dec
xor
xchg
jbe
and
scas
das
movsb
jmp
jle
popa
mov
arpl
xor
pop
sub
in
aaa
stos
mov
outsl
xor
jge
mov
or
push
mov
sbb
mov
nop
testb
movsb
cs
add
jge
test
sbb
test
mov
pop
in
mov
fisubrl
xor
cmp
and
jnp
pop
call
mov
sahf
adc
popf
aaa
and
sub
je
xchg
incl
mov
adc
repnz
dec
push
aad
dec
out
and
insb
xor
cmp
movsb
aas
fs
mov
ss
mov
arpl
ds
and
xchg
lock
icebp
or
or
and
mov
into
adc
jo
cmp
sbb
and
adc
pusha
dec
fildll
cltd
push
mov
in
push
fwait
sbb
pushf
push
cli
orb
aaa
mov
pop
mov
adc
rcll
test
das
and
insl
leave
push
outsl
inc
aad
lods
push
daa
ret
dec
jg
push
setl
xchg
adc
mov
add
lret
sub
xchg
xor
sbb
das
ss
xchg
push
pop
data16
adc
xchg
ja
leave
fldt
arpl
inc
sbb
rcll
fidivl
dec
lock
cwtl
cmpsb
ds
ret
in
jno
divl
aaa
insb
adc
imul
stc
dec
xchg
je
aad
repz
in
dec
jnp
mov
adc
mov
inc
in
add
std
das
ror
jp
push
out
pushf
test
cmp
jg
dec
movsb
rcrl
push
cli
pop
out
jnp
jle
mov
and
addr16
test
clc
or
mov
mov
es
cmp
je
ljmp
ret
dec
in
fsubr
inc
pop
mov
scas
dec
add
addr16
popf
scas
test
das
mov
dec
and
outsl
jg
cs
movsb
sub
push
jg
xchg
cmp
cld
icebp
enter
cmc
xor
xchg
pop
sub
aas
movb
stc
nop
mov
dec
mov
scas
adc
dec
xlat
cld
stos
cli
sub
fistps
out
inc
mov
mov
test
pop
xlat
pop
xchg
pop
sub
orb
jb,pn
mov
ja
and
dec
push
gs
out
xchg
jo
and
out
lahf
daa
in
mov
cld
xchg
mov
out
in
insb
mov
lock
and
mov
sti
test
rclb
and
adc
mov
inc
insl
mov
push
jo
fld
mov
int3
stos
push
cmpsl
ljmp
inc
cmpsb
ret
int3
or
lock
lea
call
inc
data16
rcrl
or
cmpsb
outsb
cltd
xor
inc
fadd
inc
and
lods
xor
push
arpl
fdivr
push
mov
movsb
jmp
scas
jmp
inc
adc
lock
mov
cmpsb
sub
xchg
adc
add
insb
ficompl
lods
rcll
or
leave
xchg
jle
pop
cld
int
inc
es
xchg
jge
mov
xor
xchg
push
jle
push
lahf
sti
jb
jle
popa
mov
leave
pop
test
nop
mov
fadds
sbb
jge
cmpsl
pop
add
out
sbb
ljmp
mov
das
xchg
inc
pop
push
pop
adc
fbstp
jle
push
jns
cwtl
inc
arpl
imull
adc
sub
imul
inc
popf
shrl
mov
lods
imul
pop
cmc
or
ret
mov
stos
jae
mov
aad
pop
stos
arpl
cwtl
cmc
mov
imul
int3
ret
and
les
mov
cltd
out
test
outsl
out
loope
mov
mov
cli
jns
adc
jb
stc
xchg
jge
dec
or
jno
xor
test
mov
sti
and
cmc
ret
iret
test
loope
sub
lahf
and
xor
push
adc
cmc
cmc
mov
cmp
mov
out
pop
cmp
scas
pop
inc
mov
inc
cmp
sub
test
bnd
stc
repnz
push
and
or
ret
or
loopne
movsb
dec
cltd
fcomps
icebp
and
repnz
icebp
pop
pop
mov
add
sub
orb
mov
out
push
std
shl
ret
and
mov
je
xchg
jge
push
outsb
mov
pusha
add
mov
cmpsl
ljmp
and
jae
addl
in
sbb
dec
xchg
movlps
out
dec
movsl
push
in
pusha
jne
lcall
mov
das
sbb
add
sbb
aas
and
jp
push
out
arpl
adc
jb
fs
data16
sti
movsb
jge
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
mov
mov
daa
in
adc
and
in
std
jb
insl
jno
adc
mov
shlb
aas
jmp
in
sarl
and
ljmp
cli
mov
push
pop
sbb
dec
mov
cmp
leave
outsl
subl
pop
bound
dec
stc
enter
shll
fisubrs
stc
mov
subb
xor
out
and
pushf
push
pop
or
enter
push
test
cmp
addr16
jae,pt
pop
lock
sbb
sub
gs
insl
or
adc
jle
es
jae
jmp
out
and
lret
shrb
fnsave
jae
xorb
jae
addr16
cld
lods
jbe
mov
scas
sub
push
jg
xchg
adcb
jle
ja
popf
pop
push
xchg
std
cltd
sub
out
aad
nop
or
mov
cltd
xor
pop
or
inc
imul
shrl
fmull
shlb
pop
pop
inc
cld
add
pop
icebp
jbe
sbb
sbb
lret
leave
or
lcall
mov
push
push
hlt
ror
jg
pop
ret
lret
jmp
ds
jno
in
imul
pushf
outsl
jno
adc
and
xchg
or
jo
xorb
mov
outsl
pop
mov
stos
incb
mov
mov
jg
sbb
or
fstl
out
mov
xor
adc
pop
dec
or
cmp
xor
out
gs
loop
std
and
aaa
jns
bound
push
cmc
push
cltd
jo
pop
shr
xchg
or
adc
insb
xor
add
loop
xchg
hlt
ret
lea
in
xor
in
fldenv
mov
jmp
dec
or
and
mov
jne
mov
pusha
lods
int3
mov
iret
es
dec
jne
xor
dec
hlt
cmp
mov
or
xor
leave
mov
or
int
fidivs
mov
arpl
xor
push
aaa
mov
push
out
xchg
les
and
cld
jecxz
cmp
scas
push
add
es
sbb
out
mov
pop
pop
into
jecxz
pop
sub
or
int
fmul
xor
pop
stc
mov
ficoms
test
stos
ret
jno
fmuls
mov
nop
sbb
dec
mov
lock
mov
sbb
cmp
into
sub
fwait
out
adcl
adcl
cmp
fiaddl
imul
cmp
leave
sbb
adc
dec
jno
addl
data16
out
push
movsl
jbe
xchg
insl
mov
jo
jl
dec
jae,pt
mov
adc
adc
cltd
add
movl
scas
mov
inc
add
fs
mov
lret
cmp
mov
cwtl
xlat
cmp
ds
call
aaa
cwtl
xchg
es
jge
out
add
adcl
mov
dec
std
add
xchg
mov
xor
sahf
addr16
sarb
cmp
jg
jmp
add
pop
adc
jp
out
pop
outsb
nop
sub
adc
mov
or
xor
aaa
mov
sbb
push
cmp
and
push
cmpsl
out
add
stos
push
sub
mov
inc
sub
cmp
cmp
xchg
and
dec
outsb
xor
mov
enter
mov
stos
bnd
cmp
xchg
mov
mov
lds
imul
ljmp
in
movsb
push
dec
icebp
lret
lea
jns
inc
xchg
js
xlat
fidivl
idiv
scas
icebp
mov
push
fistpll
repz
inc
pop
jmp
icebp
aad
rcll
daa
int3
jbe
loope
mov
xor
sub
out
add
sub
pushf
iret
inc
in
pop
in
inc
mov
fs
in
repnz
adcl
push
adc
loopne
lcall
iret
sub
fyl2x
shlb
jno
lcall
push
test
loop
mov
push
mov
push
xor
xor
ds
ret
shrl
mov
xor
or
int
scas
out
cltd
mov
sub
mov
push
cmp
out
subl
xchg
mov
repnz
pop
leave
lret
movsb
ds
mov
pop
xor
imul
or
int3
fwait
xlat
cmp
sbb
xchg
xor
cmc
or
mov
je
out
mov
inc
call
mov
in
adc
stc
xchg
xor
mov
mov
dec
inc
outsl
sahf
pop
fistpl
xchg
out
outsl
addb
rcll
es
jecxz
pop
rcr
adc
mov
sub
std
imul
repnz
add
test
jle
test
rorb
inc
int
xchg
loop
frstor
pop
out
outsb
xchg
hlt
push
xchg
ljmp
dec
mov
inc
sub
push
clc
cld
dec
lcall
imul
shlb
mov
push
pop
push
push
das
mov
ds
in
pop
ret
in
sbb
xchg
nop
sbb
add
data16
ficoml
fmull
cli
dec
cli
notb
inc
sbb
mov
inc
test
and
adc
jge
sbb
jge
mov
std
push
adc
xchg
mov
push
jbe
outsl
inc
addr16
inc
jno
sti
cltd
dec
add
movsb
ds
imulb
lock
lahf
add
es
es
pop
shll
dec
stos
mov
sub
scas
int3
cld
inc
jmp
sbb
iret
xor
jns
in
dec
hlt
in
out
nop
stos
and
imul
xor
hlt
sbb
imul
mov
jle
pop
push
pop
jp
fs
ret
adc
fldenv
lods
mov
arpl
mov
jmp
loop
pop
or
mov
jbe
test
pop
cmpsl
or
push
mov
xor
pushf
and
in
xlat
jle
cmpsl
mov
cwtl
or
sub
dec
cmp
mov
inc
sbb
xchg
mov
call
pop
cmc
jae
add
xchg
cwtl
cmp
xchg
stc
adc
lods
lcall
addr16
loopne
out
jo
jge
jnp
mov
add
push
xchg
push
mov
push
nop
imul
push
outsl
stos
daa
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
mov
adc
and
xchg
call
cli
fldt
fsubl
stos
mov
lret
mov
or
cmp
test
push
jle
das
mov
outsb
shll
mov
mov
loope
mov
std
pop
aam
xchg
fcompl
and
fimull
or
xchg
mov
inc
movsb
movb
cmc
or
or
addb
jg
xor
nop
add
mov
sahf
ds
shl
mov
xor
cmp
xor
pushf
hlt
jp
mov
mov
in
ret
xor
aad
add
jp
push
stos
dec
sbb
inc
xchg
sarl
add
mov
int
dec
cmpsl
mov
cmp
dec
sbb
push
stos
ficomps
shrb
stc
cld
daa
adc
shlb
insl
in
jb
ljmp
dec
mov
mov
xor
sbb
jle
repnz
jmp
xchg
into
stc
adc
es
cli
movsl
neg
cmp
xor
sub
dec
sbb
nop
sbb
push
dec
in
sbb
nop
enter
push
cmpsb
push
orl
test
orl
mov
add
xor
pop
jb
loop
insb
push
and
dec
pop
ror
add
ret
push
add
lret
xchg
loop
push
popf
mov
mov
xchg
test
shlb
je
adc
pop
aas
xor
idivl
xchg
mov
addl
dec
pop
jo
sub
sti
rolb
in
xor
ja
push
pop
push
adcl
insb
jge
push
in
jle
aad
jecxz
sbb
and
jl
xor
sahf
cmc
dec
push
loope
mov
movsb
in
lea
andb
push
subl
sbb
adc
je
mov
or
or
popa
cmpsl
mov
call
push
rcrl
outsb
ret
pop
xchg
test
fstl
cmp
pop
pop
xor
pop
in
mov
arpl
and
cmpb
lea
jne
adc
mov
scas
ret
pusha
negb
scas
pop
push
cmc
push
or
lods
adc
cmp
aad
rcrb
cs
push
jmp
cltd
pop
pop
mov
xlat
ljmp
jl
in
mov
idiv
adc
mov
imull
out
jo
cmp
test
inc
sbb
int3
arpl
jns
in
sbb
mov
nop
lret
lret
jg
adc
popf
inc
adc
sub
hlt
push
mov
dec
addb
or
push
je
cmp
or
pop
mov
jecxz
dec
mov
xchg
or
xor
xlat
or
into
and
int3
adc
in
adc
sub
jne
xor
fisttps
test
loope
cmp
lds
gs
xchg
mov
xorb
out
fstpt
dec
dec
push
jne
mov
xchg
test
xor
push
fstps
pusha
movsl
push
aaa
repnz
out
xchg
adc
jno
inc
test
xorb
xchg
shll
push
inc
nop
jmp
test
addr16
in
sbb
xchg
inc
std
add
pop
icebp
sub
ret
jle
pop
lds
roll
push
imulb
sbb
xchg
addr16
mov
push
inc
jge
or
gs
icebp
adc
jge
stc
movsb
pop
jl
xchg
not
pop
and
jae
adc
ds
popa
or
stos
int
push
movsb
js
xor
movsl
push
push
loopne
mov
stc
dec
dec
add
popa
push
loopne
cmpsl
insl
cld
pushw
pop
cmpsl
pusha
xchg
jno
imul
jb
push
push
pop
pop
and
es
lods
aas
jle
xor
sbbb
roll
jg
mov
pop
mov
jmp
lret
cmp
mov
mov
or
jne
mov
sti
and
sub
xchg
into
fwait
or
or
or
mov
sbbb
in
dec
add
mov
insb
xchg
adc
rcrl
xchg
jnp
rolb
je
dec
adc
and
ljmp
into
mov
and
jbe
push
in
mov
repz
in
pop
mov
lods
or
push
cmpsl
jns
pushf
cltd
lea
jmp
or
cltd
pop
mov
and
bound
call
xchg
scas
mov
ss
out
cltd
and
push
and
jmp
aas
imul
and
mov
enter
negl
fists
inc
dec
xorb
fs
enter
fbld
jns
or
jne
sbb
stos
mov
das
in
in
dec
mov
push
mov
rcr
fildll
pop
dec
rcrb
push
xor
mov
int
lods
adc
sbb
aam
ret
mov
into
cmp
insl
js
andl
dec
lods
or
std
gs
inc
xchg
aas
sbb
pop
xlat
mov
and
dec
into
int
xchg
jge
testb
jae
jns
test
inc
inc
adc
jle
pusha
std
clc
jmp
pop
sub
cld
aad
xchg
push
std
mov
mov
fsubp
shlb
stos
xchg
dec
add
mov
jl
test
xchg
push
test
push
mov
popf
sbb
xchg
loope
mov
std
lea
add
scas
jo
xchg
rolb
popf
arpl
xor
flds
mov
fimull
outsb
cmp
add
leave
dec
cmp
cmpsb
jns
outsb
lcall
push
xchg
xchg
pushf
dec
ficoms
xor
insb
cs
mov
loop
jns
sub
xchg
daa
sahf
stc
jmp
jno
cs
sbb
push
leave
ljmp
ljmp
jns
and
les
adc
imul
pop
iret
in
aam
or
sbb
pop
in
xchg
mov
or
mov
outsl
push
test
mov
adc
and
ss
leave
lods
scas
lock
jge
sbb
ret
or
push
loopne
pop
pushf
es
jb
push
inc
sub
mov
or
jmp
jle
rcr
jnp
mov
je
xor
dec
mov
scas
mov
mov
mov
push
pop
dec
lahf
mov
sbb
or
xor
mov
loopne
insb
popf
lods
fstps
dec
cmpsl
cmp
jmp
cmp
lahf
cld
inc
int
xchg
sbb
aam
leave
stc
jecxz
rcl
push
insb
dec
fcmovbe
push
inc
mov
jecxz
popf
sbb
xor
xchg
sbb
lods
xor
daa
mov
repz
push
xchg
mov
jmp
cmc
xchg
cmp
push
mov
adc
sub
adc
and
cmp
aaa
hlt
or
cmp
pushf
pop
xchg
stos
les
outsb
xor
pop
push
jns
arpl
std
mov
sarb
stc
shlb
adc
mov
xchg
test
fidivrl
sbb
icebp
xor
jmp
ret
jecxz
mov
outsl
es
jnp
inc
rol
add
pop
enter
pop
pop
dec
std
dec
pop
and
stos
push
cltd
movsb
jno
sahf
aam
test
inc
mov
lret
inc
test
sarb
cmpsb
mov
jnp
negl
enter
sub
jnp
or
jl
testl
in
ljmp
mov
cld
div
cmp
loop
subl
mov
insb
inc
hlt
orl
cmpsl
sub
sbb
lea
cmp
gs
mov
cltd
inc
add
outsl
into
ret
mov
dec
push
xchg
and
mov
mov
fstl
mov
pop
fs
add
movsb
cmp
fistl
into
loope
sub
les
imul
sarb
out
cmp
xor
xchg
ror
lds
lock
bound
inc
imul
fsubrs
int3
ret
jne
and
mov
stc
enter
sbb
jl
jo
aam
mov
push
mov
sub
scas
mov
jle
aad
fisttps
std
cmp
jns
inc
nop
sub
dec
cmp
and
dec
in
fs
cmp
mov
xchg
adc
inc
jmp
in
or
inc
stos
adc
jnp
jns
pop
or
push
xorl
lret
add
cmp
jp
gs
or
cmc
xchg
xchg
mov
je
repz
scas
ja
lods
cmpsb
cmp
xchg
mov
fdivl
dec
int
js
cli
adc
jp
cmpsb
cli
inc
mov
cwtl
mov
cmp
scas
in
std
sub
sar
leave
sbb
fdivr
cmp
fists
pop
or
insb
push
jb
in
push
push
ss
scas
sub
aad
rolb
scas
pop
pop
push
jo
cmp
dec
or
xor
aaa
das
fldenv
bound
and
adc
xor
sahf
hlt
sub
in
jno
orb
in
cli
rcll
xor
pop
mov
mov
stos
adc
dec
or
inc
jl
das
mov
sar
and
mov
loop
or
orl
lcall
mov
jb
xor
nop
mov
in
rclb
repnz
push
cs
xor
cltd
inc
test
xchg
mov
sub
adc
stos
repz
sbb
ret
sub
loopne
jno
test
or
and
insb
jne
dec
fldt
cwtl
adc
fildll
into
enter
push
lods
xchg
arpl
dec
test
mov
xchg
sarb
mov
pop
out
int3
repnz
out
int3
push
fidivs
dec
addl
mov
jno
and
mov
mov
pop
xchg
cmp
inc
lret
jecxz
mov
sbb
xchg
xchg
cmp
pop
mov
mov
adcb
daa
cmp
fwait
into
into
dec
mov
insb
outsl
dec
popf
les
movsb
mov
js
push
in
pop
bound
cs
rcrb
pusha
cld
and
int3
dec
repz
pop
pop
xchg
enter
jb
sub
xor
mov
or
jg
sbb
inc
inc
xor
push
shrl
sbb
dec
mov
jl
push
movsb
mov
test
cmpsl
xchg
cmp
shrb
out
cmc
cmp
inc
mov
mov
pop
ljmp
push
imul
test
cmp
fwait
test
dec
outsl
out
test
adc
xor
testl
adc
jle
add
mov
xor
loope
sub
ja
pop
imul
lret
mov
sub
test
bound
mov
adc
cs
sbb
in
jmp
mov
and
cwtl
fistpll
das
jp
jns
xchg
mov
mov
adc
enter
push
xchg
nop
xchg
adc
lret
pop
sub
mul
mov
and
fdivrl
lahf
jnp
test
xchg
data16
inc
rorb
insl
popa
jb
lds
push
dec
imul
push
pop
adc
es
xchg
stos
je
sub
push
nop
xchg
and
mov
int
lods
mov
dec
mov
ret
into
adc
xchg
arpl
mov
out
faddp
add
cwtl
sahf
mov
in
stos
lret
jmp
fstps
ds
xchg
out
sar
out
ss
xor
imul
idivl
insl
mov
push
and
lods
aam
popf
out
sbb
testb
and
lea
arpl
and
pop
adc
lds
and
test
ds
shlb
sub
push
outsl
loop
iret
jb
add
add
mov
in
insb
std
sbbl
lcall
loop
popa
jo
popf
aam
ss
pusha
inc
ret
rclb
add
jb
adc
add
add
nop
aad
or
lret
ret
jg
jb
xorb
movsl
dec
dec
mov
mov
lock
sti
dec
cmp
xchg
pushf
hlt
jnp
js
mov
jnp
mov
adc
xor
movl
cmpsb
shlb
popa
sarb
cmp
lret
add
dec
fwait
adc
jg
lods
out
mov
bound
decl
lahf
je
pop
xchg
mov
ror
or
in
mov
punpckldq
aam
push
jbe
test
cmp
test
cs
add
ss
int3
jecxz
aas
fnstcw
ja
inc
outsl
pop
clc
outsb
cmp
nop
and
xchg
mov
and
out
mov
and
jno
jmp
lods
mov
out
nop
push
rcr
pop
sbb
add
cmp
nop
mov
adc
fwait
lret
push
loope
push
repz
mov
lret
xorl
cmp
or
and
xor
out
pop
mov
sub
jne
inc
xchg
data16
push
popf
pop
jmp
pop
popf
movb
iret
popf
dec
adc
mov
not
pop
and
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
cmc
xchg
mov
and
cmc
xchg
insb
ja
arpl
fdivs
stos
bound
in
adc
and
push
push
fs
mov
dec
add
adc
inc
inc
pop
inc
inc
loope
repnz
and
sbb
jmp
ss
jno
jne
incb
and
cmp
out
test
dec
loope
loop
inc
fiaddl
xor
test
sub
xchg
in
push
dec
mov
mov
int3
movsl
dec
repnz
push
inc
cli
xchg
mov
push
dec
mov
bound
mov
adc
int
push
jnp
sub
scas
sbb
sbb
mov
test
dec
shrl
test
adc
ret
jmp
adc
mov
or
cmp
mov
adc
cmpsb
daa
enter
mov
jle
pop
sbb
bound
iret
push
orl
add
addr16
push
and
shlb
jg
mov
jns
xor
cmp
call
imul
ret
cmp
and
lret
xor
and
fs
cmp
icebp
test
add
xor
std
xchg
arpl
pop
mov
cmpsl
push
fs
dec
je
xchg
aam
xchg
sbb
adc
dec
lods
sub
fiadds
xchg
imul
ljmp
inc
int
add
test
adc
mov
repnz
pop
out
cwtl
rcrb
in
xor
mov
adc
stos
mov
fdivrp
fcomi
ret
cmp
aas
cmpsb
stc
es
inc
xchg
xor
lahf
lret
push
jmp
pop
ja
jmp
pop
xchg
push
or
pop
mov
and
cltd
sti
adc
outsb
mov
push
push
jmp
and
and
inc
imul
or
cmp
push
daa
push
mov
xchg
mov
push
arpl
mov
add
cmp
mov
movsb
out
cmp
cvtpi2ps
inc
mov
ds
mov
lods
xchg
mov
mov
nop
jl
stc
out
mov
das
repnz
cmc
sub
mov
pop
in
cli
or
cmpsb
jp
cmpsb
sub
xor
ljmp
outsl
fists
pop
lods
fwait
mov
lea
in
and
mov
cwtl
les
add
push
pop
inc
push
outsl
fs
pop
pop
movsl
fs
cli
xor
jle
xchg
xor
mov
mov
lods
aas
cltd
lods
push
loopne
testb
mov
push
mov
sbb
repz
fistpll
orb
subl
insl
out
mov
fwait
aas
mov
ret
cs
loope
sub
mov
fisttpll
jae
cltd
rcll
lods
incb
xorl
cmp
es
adc
or
jnp
jnp
mov
in
subl
stos
leave
lods
popf
gs
fwait
scas
jge
aas
push
push
mov
sub
xchg
add
mov
mov
ds
movsb
or
lcall
insb
push
es
dec
js
mov
repz
fisubs
pop
mov
insb
mov
xchg
into
push
pop
stos
insl
cmpsl
aad
fldt
inc
imul
lds
sbb
pop
mov
mov
sbbl
add
movsb
or
outsl
daa
mov
enter
fistpll
cmc
dec
sahf
cmp
popf
dec
xchg
orb
lret
stos
or
inc
nop
roll
mov
cmp
cs
adc
jae
leave
outsl
add
inc
mov
sub
pop
pop
insb
xchg
lea
outsb
lahf
ja
sub
push
popf
push
imul
sahf
add
lcall
add
xor
adc
fidivl
pop
mov
call
pop
aam
out
fwait
xchg
xchg
sti
push
mov
outsl
neg
mov
xor
icebp
cmpsl
xchg
int3
int
dec
fs
mov
sarl
sahf
lods
mov
mov
sub
clc
xorl
mov
push
in
bound
je
or
push
dec
mov
into
mov
shrb
inc
es
adc
mov
mov
cli
iret
adc
mov
in
pop
push
lods
popf
jmp
add
outsb
pop
sub
xor
push
fnstcw
cwtl
pop
jb
lods
in
mov
push
test
pop
out
in
icebp
dec
or
sub
sti
cld
mov
cmp
push
push
lods
pop
adc
pop
jmp
je
popa
dec
push
stos
adc
add
xchg
mov
sbbb
cwtl
xor
push
sbb
leave
xchg
pop
jb
xchg
mov
and
jbe
out
sbb
or
lods
xchg
out
push
jnp
adc
popf
ret
stos
inc
ja
imul
shrb
cmp
cmc
sbb
inc
push
pop
pop
xchg
jmp
insl
jb
push
cmp
dec
add
imul
div
faddp
mov
xchg
loopne
mov
mov
mov
fstl
sahf
out
sbb
imul
push
rclb
jecxz
ret
mov
lods
stos
push
int3
mov
aas
cmp
scas
std
xchg
inc
callw
aam
aaa
xor
jp
lret
push
push
pushf
fisubl
and
lds
jecxz
cmp
add
mov
aaa
sarb
lods
insl
and
sub
gs
lcall
xor
pushf
ret
scas
pop
mov
adc
ret
scas
hlt
repnz
xor
test
lea
push
push
fildl
stos
movsl
inc
dec
pop
sub
inc
pop
adc
mov
arpl
stos
add
xchg
mov
nop
fists
jbe
cmpsb
mov
push
pop
cs
xor
inc
fimuls
mov
sub
outsl
aam
testl
sub
stc
xchg
or
pushf
sbb
mov
js
xchg
nop
clc
adc
or
ljmp
sub
push
jle
bound
and
jle
popa
pop
les
mov
add
scas
out
cli
push
in
decb
xchg
enter
daa
arpl
cwtl
pushf
int3
lahf
js
push
aad
fwait
dec
cmpsb
dec
push
cmpsb
mov
mov
sbb
outsl
loop
push
cltd
push
mov
idiv
mov
jp
fistpll
add
jno
fsubl
stos
ss
pop
in
jmp
notl
stos
loop
in
out
add
iret
leavew
in
mov
xchg
add
data16
in
ret
out
lea
and
insl
inc
bound
dec
out
or
rolb
ja
sbb
icebp
mov
and
and
jmp
jne
add
subl
xchg
jne
inc
addr16
and
adcb
imul
cs
jne
cli
add
rorb
sub
pop
jo
popf
mov
mov
outsl
movsl
out
test
lret
or
inc
pop
pop
sub
lea
pop
lds
ficoms
out
lcall
mov
pop
add
out
and
in
jecxz
inc
shll
xorl
pop
cmp
jmp
enter
dec
lds
add
repnz
jb
ljmp
mov
dec
scas
inc
mov
mov
scas
sub
mov
stos
inc
cmp
xor
jg
jecxz
shll
movsb
xchg
xor
mov
das
cmp
dec
cli
sub
push
rclb
loop
mov
jbe
stc
outsb
jae
out
ljmp
cld
sbb
sti
cmp
pushf
sbb
lcall
xchg
loope
test
lock
shl
test
cli
hlt
push
inc
push
pop
mov
dec
jl
adc
dec
inc
daa
int
dec
lods
arpl
test
insb
mov
in
fcomps
lods
lret
pop
adcb
lcall
xchg
insl
es
add
dec
in
test
lahf
or
sbbb
xchg
loop
out
sar
xchg
mov
mov
pushf
add
sahf
push
sar
movsl
jg
scas
inc
cld
cli
pop
test
mov
push
mov
jns
aam
sbb
mov
mov
jl
push
shrb
sahf
fwait
lds
int
loopne
aaa
and
xchg
xchg
cwtl
inc
mov
jge
add
sub
or
mov
pop
fucom
les
mov
cltd
das
sbb
pop
test
inc
xchg
pop
scas
sbb
dec
enter
popa
cmp
jmp
stos
xchg
out
mov
pop
test
int3
inc
dec
adc
in
sub
and
dec
cmp
in
mov
jo
mov
cmp
jns
daa
stos
jns
mov
iret
mov
bound
xor
cli
xchg
aaa
cmp
in
adc
cld
lods
inc
sub
lcall
push
mov
mov
fstpt
push
mov
xor
cwtl
cwtl
mov
jne
jae
cmpsl
addr16
rclb
repz
mov
jp
and
and
test
xchg
mov
dec
stc
jo
ret
sbb
dec
in
pop
fwait
push
scas
and
push
push
xor
xchg
mov
cmp
ss
aam
nop
cwtl
and
mov
cmc
out
int3
mov
dec
inc
xchg
inc
inc
add
loop
xchg
outsb
push
add
mov
cltd
leave
sub
cmp
mov
push
loop
div
or
in
push
mov
jp
pop
pop
and
test
pop
test
je
sbb
mov
mov
mov
dec
test
dec
pop
add
and
out
cmp
adc
rorl
or
leave
popa
es
shl
mov
inc
sbb
pop
das
inc
sbb
sub
mov
adc
adc
mov
jg
pop
mov
inc
push
mov
jecxz
lret
icebp
mov
xchg
into
mov
jmp
push
or
clc
lcall
repnz
psadbw
jg
mov
in
inc
jmp
cltd
xor
pop
xchg
mov
inc
xchg
clc
mov
sbb
and
lock
fnstcw
cli
out
in
ret
addr16
adcb
xchg
das
stos
xchg
jmp
out
call
mov
inc
repnz
mov
testl
cmpb
mov
and
int3
xchg
ret
mov
enter
jb
jp
mov
stc
pop
jp
inc
mov
lods
int
mov
mov
xchg
lods
mov
pop
pusha
mov
push
fs
mov
pop
inc
mov
jle
sahf
aaa
mov
adc
sub
movsl
test
and
cwtl
cmpsl
lods
xchg
jge
jg
fwait
mov
push
or
xor
jns,pt
jae
fwait
mov
mov
or
scas
in
sub
jl
cmpsb
xchg
stc
fistps
push
sahf
dec
xchg
jns
out
ret
mov
roll
and
or
stos
ds
ljmp
dec
loope
sbb
repnz
into
fstpt
sbb
cmc
aam
out
sarl
rcl
movsl
in
mov
add
dec
std
movsb
inc
cs
je
add
jbe
roll
add
lock
clc
outsl
mov
push
testb
pop
daa
xor
ret
mov
xchg
jl
insb
dec
sbb
and
aaa
adc
dec
cmp
flds
out
mov
jnp
dec
decb
inc
ficoms
push
cmp
lret
inc
pop
xor
sub
mov
adc
in
adc
or
clc
and
es
cmp
lds
or
push
mov
daa
cs
push
daa
inc
sub
cmpsl
movsl
addr16
loop
mov
xor
xor
pop
sbbb
out
mov
jmp
sbbb
push
mov
add
sbb
insl
push
dec
lahf
push
in
or
pop
aas
div
adc
loop
mov
lock
adc
enter
insb
cs
int3
sbb
adc
inc
test
fwait
push
aam
add
loopne
jp
or
push
adc
and
in
mov
movsb
pop
lea
jne
cld
lods
and
cwtl
iret
mov
in
add
dec
stc
loope
jg
dec
dec
out
push
lret
dec
and
mov
and
pop
mov
daa
add
dec
out
dec
sarl
shll
mov
push
loopne
int3
aaa
dec
notb
xor
sbb
scas
mov
cli
push
fnstsw
jb
xchg
pop
adc
mov
jl
push
cwtl
pop
aaa
or
or
rol
mov
ret
fidivrs
xor
push
xchg
sub
test
inc
mov
add
pop
ja
adc
daa
ss
sub
fmuls
adc
dec
je
loopne
bound
sub
adc
pop
push
or
iret
cvtps2pi
fildl
mov
dec
fs
xlat
mov
dec
mov
and
adc
inc
dec
mov
dec
mov
fstps
pop
mov
adc
xchg
loop
popa
push
jns
dec
push
cmp
hlt
popf
sbb
std
ret
not
hlt
sub
sub
or
xchg
push
pmaddwd
xorl
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
out
repz
js
adc
and
push
in
jmp
add
test
out
std
or
movsb
and
jnp
pop
cwtl
into
jno
cmp
mov
cmp
cmc
popa
push
xchg
fmull
inc
add
cli
les
es
rclb
aam
sub
jl
pop
fisubrs
pushf
pop
push
cmp
into
cwtl
mov
adc
and
xor
jno
jae
punpcklwd
inc
int
jle
xor
add
leave
xchg
int3
cmp
in
sbb
xchg
lahf
lock
inc
xor
pop
push
push
mov
fimuls
sti
fidivrs
lea
sahf
test
andl
cmp
in
loopne
aad
inc
movsl
lret
lahf
lock
into
cs
gs
movsl
push
mov
rol
aam
insl
lcall
jbe
filds
dec
dec
mov
pop
and
mov
adc
inc
sahf
mov
scas
pushf
cwtl
lods
lcall
shrl
lahf
flds
shrl
sti
fs
jge
lret
push
inc
and
mov
pop
frstor
iret
sbb
xor
add
mov
loope
mov
sbb
je
loope
mov
and
dec
mov
rcrb
cmp
dec
test
or
push
pop
scas
fidivl
dec
and
mov
test
and
in
jmpw
ret
push
pop
inc
lods
fnstsw
push
jecxz
add
pop
add
inc
outsb
fisttps
stos
fmull
mov
imul
fs
repz
int
arpl
adc
inc
cmp
inc
xor
xor
pusha
push
sahf
inc
stos
in
cmp
mov
ret
ret
iret
das
push
ljmp
fidivl
ljmp
lret
pop
sbb
cmp
xlat
adc
rcr
clc
fiadds
cmp
xchg
dec
iret
mov
xchg
inc
inc
adc
push
mov
jmp
in
adc
in
mov
mov
xchg
or
pop
maxps
std
lcall
aad
iret
fiadds
test
xchg
in
sbb
test
popa
shlb
iret
das
arpl
sbb
sbb
mov
sub
aaa
movb
xchg
jl
sbb
ret
fs
shll
cmp
adc
shrb
mov
sarb
int
fs
jae
movsb
fistl
add
mov
mov
cmp
repnz
mov
jns
adc
inc
in
fcomps
xor
sahf
jecxz
xchg
sub
jns
and
shl
rclb
insl
add
dec
add
js
loop
cmp
out
or
cmp
mov
into
and
mov
pop
lds
std
jle
pusha
lods
xchg
pop
mov
stos
js
aaa
mov
xchg
fimull
mov
jno
mov
test
shlb
aas
and
adc
pop
jae
add
sarl
adc
mov
insl
stos
mull
jo
arpl
pop
sahf
outsl
sub
je
das
aad
inc
ret
jnp
push
jmp
add
pop
push
jecxz
inc
jns
ret
fmul
scas
jnp
sbb
mov
sub
and
into
pop
push
jo
inc
mov
insl
push
xchg
repnz
or
push
hlt
lock
jle
mov
pushw
stos
mov
sar
lds
sbb
sub
xor
sahf
sbb
fidivl
cld
push
jle
in
hlt
dec
shll
pop
call
jo
push
jge
addb
aad
test
leave
nop
insb
inc
jle
frstor
pop
xlat
mov
and
pop
ds
hlt
mov
sbbl
mov
inc
int3
xchg
shll
sub
xor
testl
sar
testl
xor
mulb
fwait
push
add
or
std
adc
dec
jae
cli
push
pop
inc
jecxz
sbbb
mov
pusha
insb
xchg
sbb
aam
ret
cmpsb
jnp
xchg
gs
jl
and
and
stos
xchg
push
lds
mov
jbe
pop
push
and
sbb
leave
sbb
hlt
shlb
fiaddl
mov
cld
sahf
aas
test
pop
mov
adc
ja
add
clc
and
notl
xor
rcrb
adcl
jns
mov
call
minps
js
xchg
or
add
cmpsl
push
dec
daa
mov
pop
cmpsl
pop
push
fs
adc
daa
mov
insb
testb
lea
jo
aaa
sbb
push
xor
jne
fwait
xor
dec
test
sbb
add
xorl
ficoms
jns
cmp
fxch
jno
jmp
or
imul
and
or
pop
dec
sbb
les
test
in
ja
sbb
cltd
fsubrl
lret
xchg
fwait
xchg
and
add
rorl
aas
imulb
xchg
sbb
ds
cli
push
sbb
int
xor
push
shrl
shlb
mov
mov
jmp
adc
imul
or
mov
mov
mov
push
xor
jl
dec
add
repnz
mov
cwtl
pop
sti
stc
mov
fsubrl
in
imul
inc
insb
cmp
add
mov
cltd
push
lods
mov
popa
addr16
push
sub
sub
and
pop
cmp
xor
les
pop
mov
leave
sbb
cli
shl
rorb
ret
dec
aas
popa
inc
push
xor
cmp
gs
pushf
call
inc
xchg
jns
mov
pushf
cmp
jne
lea
rolb
popa
jmp
cmp
dec
xor
or
imul
imulb
inc
and
out
popf
mov
sti
adc
negl
cmp
pop
pop
inc
cli
dec
mov
sbb
test
mov
dec
stc
and
dec
mov
idivl
sbb
sbb
adc
inc
push
push
insb
mov
and
mov
sub
fnstenv
adc
inc
ja
adc
mov
bound
lods
dec
movsb
lret
lcall
out
call
in
shrb
push
inc
adc
xor
sbb
nop
stos
mov
cmpsb
rolb
insb
ret
or
cmp
mov
xor
pop
ret
mov
pop
aad
push
push
lods
mov
test
jecxz
xchg
adc
ss
xorl
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
stos
js
mov
lgs
inc
bound
out
or
loop
aad
ret
and
scas
pop
push
sbb
mov
sahf
dec
roll
imul
fisttps
pop
pop
add
lds
fcoml
test
pop
iret
ss
outsb
lods
jbe
insb
cld
loop
rcl
fst
mov
sbb
pop
notl
mov
jne
sub
stos
push
cwtd
push
push
out
sti
push
xchg
jmp
sti
mov
adc
xor
nop
add
push
loope
mov
icebp
pusha
xchg
xorb
loop
mov
ljmp
in
cmp
arpl
or
fimull
mov
mov
test
and
adc
pushf
mov
fisubrs
and
lods
dec
rcrl
divl
incb
mov
andb
mov
cs
mov
add
divb
add
cltd
orl
and
mov
pop
addr16
pmaddwd
push
cmpsb
lods
packsswb
in
mov
insb
pop
xor
jnp
nop
mov
mov
mov
xor
push
dec
test
insl
scas
and
mov
scas
adc
sbb
outsl
addl
hlt
adc
les
or
push
pop
sarl
stc
fucom
push
push
lds
fadd
mov
xchg
inc
ds
inc
sub
pop
sub
sub
jge
adc
mov
dec
prefetch
pop
or
hlt
insl
imul
adc
or
sti
sbb
mov
mov
push
xchg
sbb
jo
aas
xor
imul
cmpsb
push
jo
or
xor
jg
adc
das
add
jo
and
enter
int3
mov
inc
aas
fistpll
cmp
mov
mov
jnp
pushf
mov
xor
fcompl
movsl
fldcw
pop
test
lods
ss
aam
arpl
mov
mov
jecxz
mov
hlt
push
jmp
inc
lods
cld
and
xchg
or
push
insl
xchg
xchg
inc
jns
iret
push
dec
arpl
imul
imul
mov
cmp
movsb
inc
aaa
test
mov
xchg
lds
dec
shlb
in
sbb
cmp
aaa
cmpsl
mov
aam
push
add
iret
imul
enter
mov
dec
ljmp
out
lock
mov
push
sub
pushl
dec
imul
xor
dec
jmp
arpl
fmull
mov
addr16
nop
xor
dec
outsb
scas
jge
adc
push
jp
jge
imull
or
jp
repnz
mov
add
inc
and
pusha
lahf
jmp
adc
sbb
pusha
dec
pop
inc
add
adc
mov
sub
push
mov
repnz
push
iret
lahf
stos
shlb
movsl
std
cmpsl
popa
push
xchg
cmp
test
std
jecxz
icebp
mov
sti
mov
jae
push
cli
adc
loope
stos
ss
xlat
xor
dec
lds
add
inc
jg
dec
pop
rcr
pop
and
outsb
popa
cmp
jp
or
lods
mov
dec
jmp
in
orb
inc
mov
jmp
test
jle
arpl
push
mov
mov
mov
and
add
adc
ja
fists
xchg
fwait
cmpsl
je
insb
add
imul
and
fyl2x
lcall
pop
fs
cmp
fisubs
pusha
sub
pop
test
insl
sbb
popa
xor
inc
test
inc
sbb
add
sbb
fiaddl
cmc
sti
ds
pop
dec
xchg
mov
lods
dec
mov
pop
adc
mov
sbb
notl
and
clc
test
imul
mov
int
andb
inc
sub
sub
push
cmp
jge
enter
pop
ret
mov
gs
xor
jge
pop
jb
pop
jnp
mov
xchg
movsb
dec
ds
addr16
hlt
lods
xchg
xchg
fwait
shl
push
cltd
cmpsl
and
es
and
sbb
stos
push
adcb
inc
rep
inc
cli
or
cmp
pop
push
cwtl
inc
andl
and
fidivrs
repnz
xor
and
roll
inc
mov
or
sbb
rcrl
ljmp
mov
sbb
faddl
insl
iret
andb
inc
mov
mov
add
aad
imul
adc
sbbl
push
in
in
jns
lahf
mov
or
cld
int3
and
dec
jne
mov
cmp
sbb
xor
arpl
adc
inc
xor
es
xchg
fwait
mov
sbb
lods
xor
jmp
loop
gs
lret
sarb
dec
sbb
stos
sbb
lret
dec
aam
addr16
mov
std
mov
jno
sbb
inc
pop
into
ljmp
cs
daa
adc
lret
ja
cmp
outsl
mov
pop
leave
add
add
push
sahf
jmp
mov
xor
in
fsubr
shrl
adc
jne
push
dec
xchg
in
jg
insl
or
mov
ds
mov
pop
xchg
add
push
xor
sub
push
lahf
in
pop
mov
std
sti
sub
data16
jmp
lock
clc
repnz
imul
mov
subb
mov
cmp
ret
mov
imul
xchg
in
aas
push
cmp
xchg
repnz
stos
push
xchg
xchg
mov
daa
jbe
ljmp
cld
xchg
sub
pop
lahf
pop
lret
mov
orl
adc
call
xchg
xor
adc
out
xor
push
jmp
stc
mov
stos
aas
movb
add
mov
daa
mov
lahf
outsb
aam
stos
leave
pop
aad
mov
cmp
mov
cmp
fildl
shrl
push
fmull
les
inc
movsl
xor
negb
lcall
stos
mov
add
call
daa
roll
pushl
insl
jecxz
mov
sahf
mov
movsl
rcrl
int
aaa
cmp
loopne
jmp
pop
clc
inc
mov
jnp
inc
jle
in
test
cli
iret
push
push
stos
clc
pushf
mov
cmpsl
sub
or
jecxz
sbb
dec
mov
pop
inc
sub
jle
ljmp
pop
cmp
stos
mov
mov
inc
inc
loope
or
repz
jno
adc
sub
test
pushf
lea
pop
mov
xchg
push
push
jmp
sbb
push
adc
xchg
int3
xchg
clc
mov
mov
xchg
pop
int
mov
fimull
stc
cli
sub
sbb
fcmovne
xorb
and
dec
ds
sahf
stos
hlt
push
mov
jp
scas
ret
fmul
out
sub
pop
lret
insl
xor
or
stos
jne
pxor
cmp
push
push
bound
loope
sub
aas
sti
add
iret
xor
mov
push
and
xlat
mov
in
jmp
movl
ret
xor
addr16
in
jl
pop
or
adc
jns
push
xchg
call
nop
adc
xchg
pop
mov
bound
dec
jle
and
jg
mov
mov
mov
push
repz
mov
jnp
out
addr16
mov
mov
mov
iret
out
pop
bound
call
xchg
mov
dec
mov
test
mov
sbb
or
mov
cmp
adc
mov
push
mov
mov
pop
mov
push
add
fiaddl
cmp
and
xchg
inc
xlat
mov
fstpl
insl
callw
icebp
cld
mov
push
xor
pop
adcb
jnp
sarl
mov
push
imul
cld
repnz
jp
sarl
push
out
jmp
mov
scas
cltd
addl
lea
sub
into
arpl
mov
push
xorl
mov
jecxz
cltd
push
out
test
sbb
jecxz
mov
xchg
mov
push
lcall
lret
incb
ss
fisubl
xchg
xor
push
enter
sti
adc
in
scas
xor
out
xor
leave
xor
in
js
aas
lahf
dec
mov
add
push
dec
das
adc
mov
scas
xchg
js
push
mov
sbb
hlt
hlt
jmp
and
ds
das
enter
incl
sbb
ficoml
decl
dec
addr16
xor
imul
and
test
and
adc
popa
jnp
sbb
mov
add
dec
aad
jl
test
inc
bound
or
sub
inc
idiv
aam
cmp
mov
cwtl
jmp
inc
mov
mov
sbb
rol
daa
jmp
sbb
adc
lss
xchg
pop
pushf
in
inc
cmp
push
inc
add
popa
leave
mov
aas
mov
loope
pop
cli
or
stos
pop
rolb
sub
into
rorb
std
imul
mov
test
cmp
mov
aaa
mov
subb
outsb
push
movsl
mov
imul
cmp
sbb
outsb
inc
push
jb
je
into
jb
sbb
loopne
pop
jnp
movsl
dec
and
mov
pushf
and
lods
loop
cmp
mov
jle
scas
stos
bound
cmpsl
insb
stos
aam
pop
iret
pop
inc
dec
imul
mov
popa
lock
fldpi
scas
sbb
xor
aas
jae
lcall
dec
les
sub
dec
addr16
adc
push
ljmp
sub
or
adc
addr16
pop
sbb
test
mov
xchg
push
mov
test
pop
pop
push
test
movsl
push
popf
mov
repnz
or
lcall
js
adc
lds
jnp
sbb
outsb
lods
push
push
aad
in
fdiv
leave
push
cld
test
movsl
push
pop
mov
push
lret
loopne
push
push
pop
sbb
gs
mov
fisubs
fisubrs
adc
icebp
into
xchg
popl
jecxz,pt
pop
fs
jb
fiadds
xchg
out
add
movsb
repz
xchg
xchg
fnsave
cmp
sub
push
loope
nop
jg
mov
push
add
jo
lahf
shll
out
and
sarb
movsl
in
inc
jnp
xchg
sub
and
mov
inc
xchg
aad
or
mov
pop
push
rorb
repz
into
push
sub
ja
subb
leave
sub
leave
ds
out
inc
inc
and
push
cmc
subl
xorl
sub
inc
or
mov
bound
mov
inc
inc
or
shl
loop
negl
addr16
inc
mov
xchg
sahf
out
add
popf
push
mov
xor
xchg
imul
xchg
movsl
call
jp
hlt
mov
and
xor
jecxz
sub
push
enter
inc
lock
out
mov
mov
jmp
dec
in
push
insb
add
ljmp
stos
or
and
jp
push
mov
xor
test
jmp
in
pop
jno
repz
mov
or
push
cmp
ret
xchg
pop
mov
gs
divl
inc
xor
lds
imul
fdivl
ret
call
inc
movsb
data16
mov
push
movsb
xor
aaa
mov
stc
notb
insb
xchg
imul
stos
in
or
jmp
mov
fimull
jmp
xorb
mov
jnp
lret
ret
fs
jnp
shl
xchg
cmp
inc
mov
pop
clc
and
mov
xor
jmp
sbb
xchg
lret
dec
jl
pushf
call
cld
negl
aam
addr16
jp
dec
mov
in
mov
inc
les
jp
fildll
ss
cmpsl
cmp
add
inc
andb
test
fmull
bound
pop
push
arpl
mov
sbb
scas
or
lea
movsb
shll
cld
push
lret
cld
add
mov
or
mov
in
out
mov
pop
or
push
pop
js
sti
or
mov
dec
nop
fs
bound
mov
jae
insb
mov
sub
jg
in
push
pop
sahf
test
loop
mov
sbb
mov
inc
xor
mov
test
dec
outsb
cld
cmpsl
aam
es
jns
and
mov
sub
sub
push
or
push
inc
inc
dec
xchg
movaps
and
mov
iret
repz
xchg
into
jecxz
ja
and
scas
push
out
mov
mov
mov
xor
mov
mov
mov
cld
mov
mov
mov
sbb
jbe
idivb
xchg
push
xor
fistpll
sub
out
stc
xor
mov
les
push
mov
or
push
scas
stos
add
cli
sbb
adc
pusha
lds
sub
jmp
test
add
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
sbb
test
addl
scas
shl
data16
and
icebp
inc
dec
cmpsl
xlat
xchg
in
cld
pop
cmp
mov
out
mov
enter
lock
cmpsl
enter
pop
test
inc
cmp
in
mov
sbb
mov
pop
dec
xchg
pop
insl
fwait
imul
fsubs
or
and
inc
insl
imul
xchg
flds
insb
outsl
ss
maskmovq
mull
fcmovu
pop
adc
jg
mov
xlat
push
lock
push
popa
divb
jne
xchg
test
insl
dec
xchg
out
std
mov
push
lret
js
jne
sahf
jp
adc
xor
imull
cmp
dec
pop
cwtl
loopne
cmpl
push
repz
sbb
adc
fmuls
sarl
dec
jge
xchg
movsl
jb
cmp
jb
lods
dec
jl
mov
stos
push
mov
sbb
inc
shrl
mov
mov
adc
and
mov
sub
fldcw
inc
inc
addr16
dec
mov
jbe
cmp
imul
mov
mov
mov
clc
mov
mov
xchg
out
scas
jbe
cltd
push
xlat
dec
inc
fbld
mov
subb
addr16
or
jns
fidivl
or
mov
rorl
push
pop
shll
daa
mov
negb
test
pop
mov
popf
mov
nop
push
xor
mov
mov
cmc
rcl
mov
in
das
push
scas
imull
lods
shrl
ds
sbb
mov
jnp
cmp
es
iretw
mov
or
inc
adc
in
aam
and
nop
add
lea
add
bound
loop
popf
or
pushf
inc
fadd
lods
pop
jg
inc
jns
aam
or
lods
cmpsl
test
movsl
adc
mov
xor
sahf
fwait
in
je
or
jl
jmp
in
imul
sti
add
cli
movsl
lret
inc
aaa
sbbl
aad
or
popcnt
ja
ljmp
jg
mov
insl
pop
or
jns
je
cmp
pop
inc
jl
xchg
adc
xchg
pusha
movsb
dec
mov
lret
ss
lret
jmp
sbb
cmp
and
add
in
js
test
dec
icebp
daa
mov
cli
fisubs
cmc
push
cmp
inc
mov
leave
push
ret
decb
repz
stc
inc
push
movsl
push
ds
inc
add
fstpt
or
mov
push
cli
mov
test
dec
shrb
addl
test
outsb
popa
call
jg
mov
adc
jno
shlb
cmp
fs
shll
pop
xor
icebp
popa
insl
sub
das
mov
push
jns
cs
pop
sbb
std
xchg
and
bound
enter
call
pop
xchg
lfs
je
inc
nop
sub
sub
std
loope
out
mov
mov
push
mov
stos
xor
push
or
dec
xchg
cmc
sti
sub
push
insl
ljmp
jp
sbb
addr16
jg
lret
ret
and
testl
or
fwait
mov
imul
cmp
cltd
int3
in
xchg
xchg
les
lock
add
pop
mov
mov
mov
cmp
jno
in
fs
cld
fwait
data16
fnstcw
ljmp
sub
push
adc
ljmp
fidivs
lock
bound
mov
mov
dec
xor
add
sbb
push
icebp
andl
in
jge
fadd
mov
add
lcall
hlt
imul
movhlps
mov
push
add
push
add
add
test
mov
icebp
sahf
cmp
stos
lds
cs
sbb
cs
hlt
out
push
inc
stos
jp
loop
sbb
xor
adc
sarl
cmc
aam
fs
xchg
int
pusha
jb
xor
icebp
inc
ljmp
xchg
les
loop
jb
lods
fidivrl
ret
push
fs
sti
imul
xchg
push
popa
sub
mov
mov
jmp
loope
cmp
add
push
and
mov
jge
dec
push
imul
cltd
dec
inc
sbb
jle
xchg
out
mov
icebp
push
mov
or
and
ja
scas
scas
jne
daa
pop
and
pop
out
sub
sti
filds
les
lcall
out
xchg
mov
stos
pop
add
mov
sub
je
cmp
pop
dec
jnp
shlb
out
repnz
jno
dec
sub
jle
mov
call
stos
mov
sbb
inc
movsb
inc
loop
in
fwait
and
xchg
out
jp
sbb
add
stc
rcrb
xchg
cmpl
push
mov
cli
sbb
xchg
imull
jge
and
fldenv
add
push
repz
roll
cmpsl
dec
mov
xchg
mov
fs
call
xchg
ss
push
cmp
xchg
aas
xor
ficoml
bnd
inc
adc
scas
mov
mov
add
lds
aaa
pusha
fimuls
mov
xchg
jo
icebp
das
adc
and
jbe
dec
pop
mov
mov
test
fdivrp
jge
popf
aam
sub
push
mov
adc
loop
mov
aad
pop
xor
mov
xchg
mov
mov
cltd
loope
mov
rcrl
jl
mov
sub
mov
push
mov
imul
lahf
sub
insb
adc
and
ljmp
push
or
scas
insb
inc
pop
xchg
lahf
jns
js
sbb
addb
insb
outsb
icebp
ret
ds
inc
sub
lock
push
outsb
cli
add
add
jmp
mov
inc
sub
sub
dec
mov
xor
cmpsl
xor
pop
lcall
inc
imul
leave
push
jnp
cmp
push
pop
lds
mov
loope
push
xor
shll
cmp
sbbl
sti
aas
cmp
push
dec
mov
xor
cmpsb
xchg
enter
jge
inc
sbb
ret
ret
jmp
push
mov
inc
jp
and
push
push
jae
cmp
adc
cli
sbb
clc
push
std
fnsave
daa
loope
mov
mov
jl
mov
inc
inc
insb
shr
sbb
flds
sub
imul
hlt
ret
or
sahf
pop
add
movsl
push
jg
inc
cmp
add
clc
les
stc
xor
scas
xor
cmc
mov
outsb
mov
aam
out
andb
jne
arpl
inc
xor
mov
mov
hlt
repz
imul
push
imulb
mov
push
mov
shrl
xlat
xchg
popl
xchg
xor
or
cmp
lahf
insb
mov
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
lock
jbe
jno
in
cmpsl
push
inc
sahf
push
mov
gs
dec
jle
xor
and
or
add
and
std
stos
jne
ficomps
cmp
in
je
leave
mov
cmp
xchg
scas
mov
inc
jmp
nop
mov
imul
and
pop
mov
inc
mov
mov
imul
dec
xor
cltd
mov
out
pop
std
dec
sub
xchg
dec
cmpl
outsl
in
movsb
test
call
cmp
inc
lock
pop
mov
in
xor
imul
xor
sub
xchg
push
hlt
pusha
dec
popa
xchg
sub
mov
jae
pop
leave
sub
fnstsw
inc
mov
sahf
push
in
push
in
lock
daa
pop
or
sbb
testl
lahf
imul
je
dec
std
std
mov
stos
test
cmp
and
in
fdivs
lahf
jl,pt
mov
xchg
mov
inc
inc
xor
imul
adc
sub
rorl
je
and
mov
int3
repz
data16
sbb
xchg
sti
mov
push
sub
or
and
js
out
popf
mov
sbb
dec
dec
pop
repz
jl
repz
cmc
cli
mov
sbb
leave
xchg
bound
scas
popf
ljmp
push
jp
int
decb
cwtl
stc
push
or
or
shrb
mov
jne
lret
dec
push
push
leave
daa
sub
fabs
clc
ss
fidivs
out
stos
xchg
jo
subb
dec
movsl
mov
inc
mov
mov
xlat
ljmp
icebp
scas
jp
or
scas
es
aam
add
mov
cmp
outsb
push
addr16
adc
sti
shrl
pusha
mov
cmpsb
xchg
pop
mov
adc
pop
add
xchg
sub
outsl
add
loope
adc
data16
inc
cmpsl
add
xor
inc
add
mov
jg,pt
push
out
mov
jno
pusha
pop
cld
jp
mov
lods
mov
repz
add
pop
pop
mov
out
pop
jo
push
in
or
mov
popf
sub
or
dec
jo
js
vunpcklps
sub
enter
cmpsb
lret
add
fnstcw
fwait
aad
or
lret
cmpsb
call
testb
xor
divps
inc
and
and
daa
addr16
add
jmp
and
lret
jmp
test
cltd
pop
adc
in
lret
or
orb
outsl
hlt
jg
lret
or
sub
in
test
xlat
or
fisttps
inc
mov
dec
and
jo
dec
outsb
test
mov
gs
sub
add
and
pop
inc
shl
mov
inc
lcall
inc
lods
xchg
lahf
ja
dec
popa
jbe
repnz
sub
ror
popf
push
ds
mov
and
mull
jne
clc
pop
mov
ss
add
rcrb
dec
nop
lds
mov
clc
int3
out
call
and
add
xor
push
inc
xchg
push
mov
adc
adcb
adc
loopne
xchg
push
test
je
push
cmpl
insl
mov
iret
add
cmc
add
je
cli
sub
outsb
push
es
and
xorb
cmpsl
fdivr
test
sub
or
xchg
mov
inc
push
imul
mov
out
mov
fwait
into
mov
and
inc
roll
cmp
lock
jb
mov
outsl
iret
rcrl
aaa
or
cmpb
and
pop
mov
es
sbb
mov
js
xchg
aad
stos
push
cmp
and
or
sub
inc
out
int
loop
push
test
out
push
inc
xchg
pop
dec
icebp
sbb
lahf
mov
ret
movsb
hlt
das
xorps
test
cmp
imul
push
jnp
ljmp
mov
into
pushf
or
sbb
push
pop
adc
in
in
jg
nop
mov
rcrl
fsub
and
or
mov
jp
lods
jnp
cmc
and
addb
push
dec
push
loop
popa
jge
leave
push
add
out
inc
cltd
mov
adc
sub
dec
mov
jmp
js
sub
fstl
jnp
sbb
ss
loopne
jno
adc
pop
dec
sbb
insl
out
call
jb
mov
shl
test
or
cltd
or
fld1
pop
xchg
add
mov
jle
push
subl
or
inc
jge
dec
inc
jmp
push
jl
mov
aam
push
xor
ljmp
nop
mov
xchg
std
lahf
call
sub
jbe
mov
loopne
mov
cwtl
xlat
ficompl
clc
push
or
sbb
or
mov
lea
inc
fwait
stos
movsl
or
sbb
call
pop
jbe
dec
fnstcw
test
loop
sub
rep
scas
inc
cmp
out
pop
loopne
mov
dec
inc
imul
push
scas
lds
loopne
xor
mov
and
sub
shlb
imul
ja
or
aam
mov
aam
cmp
add
cmp
or
dec
mov
push
mov
push
inc
jge
dec
dec
stos
sbb
imul
cmc
push
andl
mov
shll
fnstenv
add
insb
icebp
sti
and
sbb
mov
pop
je
add
xor
inc
inc
or
movsl
cld
cld
or
pop
ret
test
pop
test
xor
lret
and
addr16
lods
das
cmp
mov
bound
jp
cmp
xchg
jmp
fbstp
adcb
lods
je
addb
pop
outsb
lahf
fistl
adc
mov
in
push
lds
rcrl
outsl
iret
mov
and
push
sbb
xchg
stos
dec
and
loop
mov
add
mov
fidivrl
mov
sbb
sub
cli
outsb
rolb
fdivl
inc
xor
cwtl
jl
insb
mov
insl
aad
loopne
fmull
sub
fcoml
jge
test
mov
lahf
mov
fs
push
inc
orb
imul
xchg
les
pop
dec
mov
test
out
lret
mov
jle
incl
call
dec
fmuls
add
js
adc
cmp
push
mov
or
in
mov
xchg
outsb
rorl
fdivrl
and
outsb
rclb
sub
stos
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
fstps
adc
addl
insb
shl
iret
add
lock
jae
mov
ljmp
loope
dec
test
stc
lcall
pusha
mov
add
and
loope
test
out
and
fwait
push
iret
sbb
adc
test
push
jo
scas
or
les
sbb
testb
rcrb
push
sbb
and
and
mov
and
jne
xor
iret
push
jle
mov
sub
jle
xor
mov
push
fs
push
sbb
lock
xchg
sbb
sbb
cmp
mov
into
and
add
mov
pop
iret
mov
fdiv
insl
lret
mov
pop
cmp
in
mov
cmp
daa
icebp
repz
rorl
out
xchg
in
mov
xor
aas
or
xchg
mov
mov
jne
orb
loop
cli
mov
test
ret
xor
mov
addb
imul
in
ja
or
pusha
ret
loope
test
or
call
rclb
or
cmc
daa
mov
push
mov
mov
loopne
dec
test
mov
cmp
int
inc
mov
pop
adc
into
mov
outsb
push
cmc
xor
sub
cmpl
sarl
out
jns
lcall
mov
mov
pop
cmp
jns
in
mov
arpl
cmp
into
inc
dec
gs
sub
cmc
lcall
and
mov
inc
lret
mov
inc
iret
xor
cmp
push
jno,pt
sub
sti
imul
pop
add
or
imul
enter
gs
addr16
jo
sub
nop
stos
sub
cmp
icebp
sub
sbb
cld
out
mov
lahf
push
adc
xchg
into
cmp
outsb
sbb
test
sbb
pop
xchg
and
ja
pushf
shrl
pop
cmpl
out
jmp
mov
mov
out
fsubl
cld
in
jae
push
clc
push
cmp
jle
jo
mov
xor
pusha
jo,pn
leave
lea
ret
dec
test
add
arpl
push
add
clc
cltd
and
jle
out
fcomi
rcrb
pusha
jmp
adcb
out
mov
test
jle
clc
push
movsb
add
and
adc
and
xor
add
pop
add
xchg
cli
jecxz
mulb
pusha
mov
cmpsb
and
push
int3
out
clc
push
and
rolb
scas
arpl
inc
test
pop
sbb
repnz
and
cwtl
arpl
ja
sbb
repnz
adc
repnz
fs
pop
in
sarl
stc
cmp
pop
and
pop
pop
xorl
inc
lods
in
idivb
push
or
cwtl
jge
xchg
bound
ds
mov
insb
mov
jo
int3
aas
repz
repz
adc
stc
loopne
or
xor
sbb
es
sbbb
mov
jb
mov
ss
push
sbb
fxtract
outsb
mov
int
mov
pop
and
mov
mov
test
daa
add
mov
fisttps
cs
aaa
mov
sti
in
pop
out
add
mov
in
in
cld
jbe
popf
stc
dec
les
das
jbe
sbb
jnp
rolb
push
xor
add
xchg
sti
ja
cmp
repnz
adc
sti
fisubs
outsb
push
faddl
out
sbb
orl
lods
push
leave
mov
pop
push
fcomps
dec
xchg
cli
add
mov
dec
mov
pop
mov
jle
subb
loope
je
call
aas
fistl
repnz
inc
jo
sbb
and
push
xor
neg
sub
int
shl
dec
fnstsw
lods
cmpsl
hlt
add
push
add
mov
sub
fsubs
and
push
mov
sub
jae
sbb
cmp
loopne
scas
push
pop
mov
mov
inc
or
mov
mov
and
loope
insb
jno
outsb
fcoms
fdiv
xor
jmp
xor
jp
xor
adc
fwait
stos
jbe
adc
hlt
test
mov
mov
movsl
icebp
stos
imul
enter
call
nop
mov
loop
mov
scas
call
sbb
sar
in
push
dec
clc
mov
xchg
testl
idiv
jne
mov
sub
sahf
sar
sub
in
sub
xchg
cmpsb
out
mov
pushf
cmp
sbb
dec
push
repz
pop
sarl
shr
adc
pop
mov
adc
dec
pop
fs
mov
sub
add
cmp
repz
cmp
or
xor
xchg
cmp
adc
insb
push
pusha
mov
mov
addr16
aam
in
jno
in
xor
dec
ds
pop
mov
xchg
sahf
std
dec
scas
test
xor
and
loopne
fsubl
test
jns
std
mov
fistl
loopne
orl
jo
jp
jl
pusha
fs
fs
xor
dec
or
mov
sbb
sub
xor
mov
jg
xchg
dec
fadd
into
cmpsb
and
and
sbb
js
push
shll
jp
mov
jo
pop
je
popa
mov
movsb
enter
pusha
idiv
cmp
andl
fcomps
and
jbe,pt
lock
xchg
out
ret
add
pushf
mov
lods
sbb
jns
call
jp
sub
aaa
fldcw
outsb
repz
inc
sub
pop
in
xchg
lahf
lds
pop
push
loope
jbe
sub
add
pushf
pop
push
sub
dec
cmpsb
sub
lock
pusha
jne
setno
mov
lock
cmp
dec
inc
stos
jns
mov
jmp
test
cmp
pop
popa
jl
xchg
cmp
cmp
adc
lods
push
cmp
leave
enter
fidivrs
mov
push
cmp
xor
or
xchg
lahf
out
dec
push
jecxz
push
cmc
mov
cmp
test
or
xchg
push
add
fldenv
dec
inc
add
or
add
mov
xchg
sti
dec
and
jecxz
mov
add
enter
adc
xor
call
push
sub
jecxz
pop
push
aas
shlb
jbe
jo
enter
dec
xchg
push
sub
mov
jge
outsl
arpl
pop
inc
inc
fincstp
out
cmp
fdecstp
xor
bound
cld
adc
pop
xor
push
adc
add
dec
cld
clc
aaa
push
stos
ja
mov
mov
out
jmp
fbld
cmpl
add
inc
data16
int3
scas
cld
in
int
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
sbb
add
add
stos
cmp
cli
pop
fisubs
movsb
ljmp
cmp
inc
sahf
popa
push
popl
ja
xchg
test
and
movsl
into
dec
unpcklps
test
fwait
cmp
ret
push
jle
mov
xchg
push
adc
push
mov
mov
outsl
adc
sbb
test
dec
cmpb
cmp
fsubl
xor
ret
addr16
loopne
cmp
adc
imul
ja
loope
xor
sub
xchg
and
out
les
lret
sub
push
mov
js
or
xchg
pop
shll
xchg
jmp
aaa
out
sbb
xor
in
pop
shll
cli
cmp
ljmp
cmp
popa
or
add
sti
mov
cwtl
jnp
idiv
call
inc
push
lcall
jg
pop
fidivrl
in
mov
js
lahf
lret
fiaddl
jecxz
pop
mov
sti
hlt
push
fdivrs
test
mov
scas
cmp
mov
mov
or
ret
sub
int
in
sbb
dec
rcl
dec
mov
jb
fucomp
rorl
stos
shll
cs
movsl
add
mov
or
fsub
andb
inc
or
add
mov
mov
push
aaa
and
rcl
notl
push
xor
xor
dec
fstps
test
daa
leave
sbb
xchg
sbb
pop
jo
iret
mov
aaa
or
pop
pusha
scas
xor
fwait
das
pop
jge
clc
fwait
ret
ret
lods
ret
rcrb
inc
xchg
and
dec
mov
mul
rcr
mov
stos
or
iret
sbb
mov
out
cs
dec
and
lods
imul
incb
insb
lods
mov
loopne
mov
dec
fldl
mov
shl
pushf
icebp
sbb
push
std
mov
scas
and
insb
jbe
ss
nop
pop
test
xchg
fistl
sub
dec
jecxz
pop
fs
mov
push
out
or
mov
sbb
psraw
pushl
addb
sbb
inc
mov
out
push
stos
das
data16
inc
push
lret
jge
xor
mov
or
shl
sbb
mov
cmc
adc
sub
out
int3
imul
push
jmp
repnz
insl
das
scas
add
jb
mov
mov
hlt
cmpsb
leave
and
sbb
fnstenv
into
aad
xor
inc
inc
add
mov
or
pusha
jecxz
fucomp
jle
fnstenv
outsl
mov
mov
popf
test
movsb
jg
add
inc
cmp
mov
popa
sarl
mov
xchg
lahf
inc
xchg
dec
lea
sub
mov
xchg
push
stc
push
flds
andb
lods
insl
imul
mov
pop
and
xor
pop
mov
jae
shll
adc
cmp
jnp
je
aam
push
mov
adc
fs
xorb
out
movsl
sub
out
fstpt
incb
repz
jecxz
pop
mov
adcl
push
and
inc
ja
std
push
fsts
xchg
dec
push
sbb
js
add
sub
lahf
push
push
jbe
jp
lods
out
loop
pop
data16
add
movsl
sarb
sarb
dec
mov
xchg
jne
sbb
or
cmp
into
dec
jecxz
int3
add
repz
movsb
aam
fisubl
xchg
fldl
push
stos
xchg
ss
fstpl
xor
addr16
cmpsl
lret
inc
xor
ljmp
mov
orb
adc
and
ficomps
pop
sub
cmp
push
subps
iret
jne
ret
ret
mov
jg
cltd
subl
lock
jno
dec
push
add
movsb
dec
lds
out
cmpb
or
jecxz
mov
mov
adc
ficomps
push
push
sahf
in
or
je
jmp
out
or
push
lock
addr16
lahf
stos
popa
mov
cltd
ficomps
push
hlt
andl
adc
in
xor
clc
or
xor
jg
adc
and
jno
and
lret
data16
cmc
push
leave
or
push
loopne
out
popf
cmpsb
sub
xchg
add
push
daa
pop
pusha
or
scas
insb
daa
out
ljmp
mov
jae
cmp
lret
or
cwtl
sbb
cld
jge
xor
movsb
mov
sbb
mov
pop
ljmp
jmp
ds
ret
adc
adcl
and
ret
jge
adc
in
and
sbbl
iret
pop
loopne
stos
or
ret
push
sahf
cs
or
aam
xor
je
enter
pop
outsl
cmp
pop
or
pop
stc
imul
clc
stos
fisubs
jb
popa
jae
test
xchg
stos
orb
int
repz
mov
lods
insl
dec
mov
inc
arpl
cmpsb
mov
jb
push
call
jbe
and
xchg
sub
sub
cmp
fwait
jbe
add
cmp
pop
popf
mov
mov
and
cwtl
and
int
imul
mov
add
pop
mov
pop
test
sub
lea
fwait
jge
lods
test
dec
popa
adc
and
je
aaa
push
sbb
ja
aaa
std
in
jnp
mov
std
in
hlt
js
dec
mov
decb
lds
push
incb
addr16
data16
bound
lds
inc
call
lods
imul
data16
shll
addr16
int3
mov
rclb
xor
xchg
mov
fcoml
adc
call
addr16
xor
inc
add
roll
lret
ljmp
dec
or
aaa
pop
add
mov
add
or
dec
jecxz
shl
fisttpll
push
mov
adc
jmp
aas
pop
cmp
es
and
ret
mov
into
loopne
fsubr
xlat
sub
sub
or
or
jecxz
fs
nop
dec
unpcklps
loope
mov
adc
aam
jp
in
or
jne
jecxz
mov
cmpsl
jno
es
andl
pop
ret
test
inc
pop
outsb
pop
not
aas
out
outsl
gs
imul
mov
sti
jne
jne
and
mov
jl
mov
add
or
mov
ret
add
cwtl
addr16
xchg
adc
ja
mov
mov
mov
bswap
xrstors
lea
add
in
jnp
push
cltd
dec
imul
loope
mov
movsl
mov
mov
mov
aas
mov
popf
xchg
cmpsb
ds
std
js
dec
sub
push
into
out
int
ds
mov
scas
lock
push
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
inc
mov
adcb
call
mov
rclb
je
dec
iret
outsl
xor
in
sbb
cmp
inc
jg
pop
pop
add
and
pop
andb
adcl
shr
pop
cld
cmp
cmp
call
jl
xor
push
popa
ljmp
cmpl
sbb
and
cmp
addr16
mov
xor
and
out
jbe
xor
out
xor
scas
test
push
mov
push
fmuls
lea
push
icebp
mov
sbb
xor
cltd
int
push
add
rcl
sbb
out
jo
mov
pop
std
pusha
fldt
push
add
jg
fsubs
xchg
in
sub
push
sbb
mov
adc
adc
mov
pushf
inc
test
pop
jle
push
jg
sub
jp
xchg
mov
mov
stc
inc
out
imul
mov
loope
ss
sarb
mov
pop
insb
cmpsb
into
sbb
dec
fstpt
clc
lret
js
dec
lret
and
fwait
xchg
test
adc
out
pop
out
jg
jnp
mov
fwait
xor
lcall
and
mov
dec
sbb
xor
cmc
lds
and
sub
lret
dec
pop
and
aas
test
jecxz
lds
addr16
mov
jns
jmp
mov
mov
xor
sbb
pop
mov
clc
pop
inc
mov
cli
inc
adc
dec
pop
cmp
addl
lret
pop
daa
jge
notb
test
xchg
pop
ret
and
sub
mov
xrelease
in
lds
js
push
scas
mov
flds
push
and
in
imul
pop
out
adc
pop
leave
push
push
iret
or
insl
sbb
or
mov
mov
inc
cmp
shrb
inc
push
sbb
ja
mov
jmp
or
and
adc
add
ror
mov
or
addr16
xchg
ljmp
imul
in
lahf
xchg
sbb
outsl
push
ds
movsl
in
mov
aaa
and
imul
sub
dec
mov
xor
inc
xchg
mov
jg
xchg
test
out
jecxz
in
mov
gs
sub
bound
xchg
or
inc
clc
out
jae
pusha
sub
cmp
roll
rorl
pushf
inc
jnp
fists
xchg
mov
arpl
jns
mov
imul
jb
jmp
adc
xlat
out
or
shr
rol
jne
lea
lahf
xchg
xchg
in
jle
mov
ss
sbb
mov
mov
mov
mov
gs
das
shlb
dec
xchg
out
adc
or
ja
ds
xchg
pushf
std
push
cmp
and
rorb
ficompl
push
enter
inc
cmp
add
les
sbb
mov
hlt
and
icebp
mov
out
es
jge
fistpll
sarb
dec
adc
loop
xchg
jbe
lds
les
stos
xchg
hlt
lahf
mov
pop
lods
fstpt
lret
cwtl
lea
or
call
or
push
adc
sti
jbe
add
xchg
mov
push
ret
or
insl
out
mov
or
xor
int3
insb
pop
fs
lcall
loope
lock
sbb
xchg
pop
fisttps
movsb
xchg
pusha
dec
ficomps
lods
sub
lcall
push
movsl
and
nop
flds
aad
add
and
popf
jnp
push
mov
xorl
adc
test
add
sbb
add
mov
xor
and
add
pop
mov
cmp
imul
outsl
jo
je
ja
cwtl
iret
cmc
mov
pop
ror
xor
iret
push
loop
std
sahf
lods
sbb
jb
mov
or
scas
mov
fsubrp
js
fildll
sub
mov
jno
test
aas
test
mov
adc
lret
and
dec
or
mov
rcrl
iret
mov
mov
jg
cmp
mov
ja
mov
xor
push
out
loope
lret
js
scas
call
je
xor
sbbl
sti
inc
sarl
movsb
pop
adc
jmp
push
mov
loopne
imul
lods
cmp
lods
dec
pop
cmp
jmp
push
out
icebp
pop
enter
inc
dec
mov
xor
aas
outsb
push
inc
xor
ss
mov
rcrb
xlat
pop
roll
or
add
sbb
cltd
sti
pop
push
dec
push
or
shll
lret
rcll
fiaddl
jl
enter
mov
and
and
sbb
cwtl
cmc
pop
push
lret
paddusw
and
dec
jne
mov
sbb
adc
imul
cmp
fcmovnu
adc
lcall
push
inc
xchg
cmp
loope
aas
dec
or
or
imul
ror
paddw
push
jmp
xchg
dec
movsb
xor
stos
sub
dec
dec
or
mov
fists
xchg
xchg
cmpsb
push
std
mov
jae
mov
jo
mov
stos
cwtl
insl
lret
mov
push
repz
xor
push
and
in
sbb
and
dec
hlt
push
inc
mov
aad
in
cltd
sbb
pop
mov
in
inc
push
add
push
lea
jns
scas
xor
jle
add
mov
call
cmp
or
cmp
sbb
cmp
adc
pop
dec
adc
xlat
arpl
shrl
stos
in
popf
sbb
test
aam
fstpl
jp
push
fwait
jp
cmp
pop
cltd
dec
sub
sbb
stc
gs
add
loopne
fisttps
mov
pop
push
jmp
mov
sub
jge
test
push
add
in
push
out
ror
shr
jo
pop
repnz
mov
shlb
leave
sbbb
or
int
push
sub
sbb
sub
push
pusha
lahf
sahf
shlb
mov
cmp
stc
je
or
mov
adc
movsb
and
lock
cmp
push
nop
xor
movsl
mov
pop
roll
shlb
mov
inc
push
push
cmpsl
je
dec
adc
cmp
and
cs
push
mov
jne
xchg
sahf
dec
jp
jmp
dec
jo
rorl
adc
pop
scas
sbb
popf
jle
cmp
repz
lds
mov
add
xbegin
xor
test
sar
aam
je
cmc
cmp
test
sbb
xorb
stos
mov
pushf
dec
call
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
push
or
adc
addl
fisubrl
mov
or
stos
jns
out
sarl
mov
aaa
push
and
notl
cmp
add
cmpsl
dec
es
ss
sahf
aas
add
dec
mov
jae
add
cmc
cmp
icebp
in
mov
mov
dec
adc
ja
push
stos
mov
cli
push
pop
xor
ljmp
pop
pusha
mov
push
leave
mov
xor
ret
sbb
and
mov
cmpsl
shll
into
mov
dec
dec
mov
rorl
xor
ss
or
aam
pop
dec
int3
cmp
or
mov
pop
stc
mov
add
aaa
arpl
inc
dec
dec
or
fstpt
add
or
out
cmpsb
leave
xor
jecxz
test
inc
dec
or
js
or
push
jbe
sbb
movsb
xchg
shlb
xchg
mov
adc
adc
pop
imul
dec
push
ja
std
aas
cmpsl
pop
xchg
popl
fistl
dec
mov
rcrb
cmpsb
mov
movsb
pop
or
int
dec
fnsave
xchg
jl
dec
lret
jmp
aas
inc
mov
jp
imul
dec
xchg
rorb
pop
mov
mov
add
jbe
pop
and
jae
dec
test
ss
rorb
xor
push
pop
pop
push
add
call
lcall
jmp
add
push
cmp
nop
add
clc
xor
dec
mov
das
pop
jl
dec
int3
jecxz
push
pop
iret
push
mov
aaa
mull
mov
orb
push
ret
aaa
jae
adc
insl
adcb
sub
sbb
and
je
sbb
push
inc
int
pusha
inc
das
jbe
xchg
pop
dec
add
jns
lret
mov
xchg
movsl
lahf
in
stos
adc
mov
dec
das
dec
lcall
pop
shll
jno
mov
cmpsb
in
xor
orl
fildll
xchg
arpl
xchg
adc
inc
ja
aaa
sbb
pusha
mov
les
movsl
and
push
cmc
xchg
xlat
add
xchg
push
mov
sub
ret
add
xor
dec
fsub
pop
push
sub
dec
pop
outsl
jnp
pop
and
xor
push
xchg
mov
xchg
mov
and
jle
pop
or
pop
xor
decb
pop
sahf
loope
inc
mov
mov
xchg
fisttpl
sbb
mov
in
pop
les
pop
xor
lds
sub
jmp
mov
loop
and
pop
xchg
pop
loopne
cmpsl
push
add
lahf
push
outsl
mov
adc
mov
in
push
mov
mov
cmp
sbb
frstor
xchg
ljmp
ljmp
jmp
and
in
xor
add
inc
jb
dec
add
sbb
aas
leave
mov
adc
mov
push
lret
push
fsubrp
std
cld
loopne
stos
jae
lret
subw
jne
or
and
in
fwait
ja
mov
push
fwait
sbb
js
sub
das
cmpsl
icebp
movsb
push
cltd
cld
das
into
mov
outsl
pop
jns
xchg
mov
jl
sbb
sub
mov
fldenv
pop
sub
imul
xor
pop
pop
into
push
or
push
imul
jg
ss
push
mov
jecxz
lods
mov
mov
cmp
inc
adc
mov
xchg
clc
mov
hlt
testb
dec
or
je
call
aaa
test
mov
aad
cld
mov
in
sub
fldcw
lods
add
mov
jo
jge
iret
divb
jno
popa
in
pop
loopne
aam
mov
lahf
movsl
stc
inc
stos
add
jno
dec
add
cld
test
jle
inc
pop
xchg
or
or
out
sbb
sbb
pop
shl
sub
mov
pop
fwait
jne
aad
repnz
test
sar
push
adc
call
enter
fidivrl
in
add
mov
mov
pushf
notb
inc
inc
adcl
mov
in
xor
insl
inc
leave
test
insb
std
inc
adc
dec
pop
icebp
ljmp
in
adc
fdivl
sbb
dec
inc
adc
jnp
call
xchg
in
inc
into
fnstcw
popa
pop
outsb
xlat
notl
sbb
aad
sub
lea
cs
or
xchg
xchg
jle
add
call
jle
or
lock
jb
daa
into
iret
or
sbb
lret
cltd
icebp
jmp
sub
cmp
repnz
or
ja
fisubl
idivl
jge
in
sbb
cmpsb
insb
jno
not
shll
dec
mov
aaa
sysret
les
sarb
insb
pop
mov
out
mov
push
mov
xor
aaa
xchg
push
add
sub
mov
insl
inc
pop
cmp
cltd
push
into
adc
or
fists
loop
jbe
in
inc
daa
loope
mov
int
or
mov
aam
test
stos
mov
mov
stc
or
sub
lahf
mov
dec
mov
mov
cmp
ljmp
bound
nop
cli
aas
pop
scas
enter
mov
fdiv
cs
fidivl
aam
inc
and
push
insl
cmp
mov
or
mov
dec
adc
call
nop
cmpsl
mov
xor
clc
flds
xchg
cwtl
inc
dec
jle
lea
cmp
imul
mov
or
je
pushf
mov
sbb
push
cmpsb
push
xchg
decb
lock
flds
sbb
jle
scas
cmp
inc
int3
in
xchg
lahf
mov
xchg
mov
inc
stos
lods
and
pop
lods
iret
sub
mov
dec
jecxz
stc
mov
or
mov
leave
or
add
subl
mov
sbb
cltd
call
adc
lcall
mov
mov
shlb
dec
pop
mov
pop
jge
rolb
mov
inc
push
sub
out
leave
out
sub
inc
pusha
add
push
xor
xchg
outsb
mov
adc
inc
xchg
lds
dec
fiadds
ficompl
sub
jge
jp
adcl
and
stc
mov
int3
dec
out
sbb
push
fistpl
push
outsl
pushf
imul
enter
repnz
cltd
bound
mov
das
mov
add
loop
sbb
lcall
cmp
sub
xchg
arpl
out
xlat
pop
lock
xor
and
jo
sub
add
mov
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
inc
inc
scas
dec
xor
mov
das
stos
sub
dec
pop
inc
adc
cs
push
lcall
insb
daa
pop
ficomps
xor
xchg
xchg
popaw
mov
mov
cwtl
fwait
js
outsb
test
pop
dec
int3
psubb
inc
jo
fmuls
or
jno
cli
rcl
call
js
cld
mov
lret
into
iret
mov
cmp
es
les
imul
notl
xchg
rolb
paddq
ss
xchg
adc
ljmp
lret
dec
push
jmp
repnz
cwtl
mov
push
loope
add
and
pop
imul
out
fbld
lret
sub
xlat
mov
push
loop
enter
dec
and
mov
mov
push
inc
jo
test
mov
movsl
cltd
sbb
push
pop
int3
add
push
ja
jbe
rolb
jae
inc
mov
loopne
insb
mov
jae
out
ret
pop
or
insl
jno
lfs
or
mov
or
loopne
pop
movsl
in
mov
sub
add
jnp
inc
stos
xchg
outsb
adc
mov
unpckhps
je
lods
sarb
das
jge
or
cmp
cmp
push
push
scas
sub
pop
je
lods
xor
jns
cmc
mov
push
fcompl
xor
pop
jmp
cwtl
dec
xchg
pop
mov
inc
mov
pop
add
adc
mov
adc
filds
jo
xor
scas
xchg
mov
adc
mov
scas
test
aas
subl
xchg
addl
adc
dec
push
pop
cmp
mov
push
inc
movsb
mov
ja
push
push
cmp
inc
sbb
xchg
or
out
mov
or
sti
test
cmpsb
js
push
lock
inc
and
xor
daa
rol
push
fs
ljmp
sub
sub
fdivl
loop
out
fwait
scas
pop
or
fs
xchg
aad
and
jo
adc
push
sahf
or
lret
mov
test
xchg
mov
xor
test
ja
mov
roll
ja
pop
sarl
xchg
inc
jae
add
dec
dec
repz
inc
and
daa
xchg
movl
push
cmc
testb
jmp
mov
mov
adc
lea
arpl
fidivs
jge
adc
insl
clc
adc
mov
jle
pop
stc
and
dec
jo
sub
mov
lea
xor
dec
fisttpl
sbb
mov
xchg
sbb
gs
push
dec
rclb
or
xchg
popf
pop
fucomp
adc
push
fwait
xor
mov
fidivl
fidivrl
or
inc
rclb
bound
mov
pusha
xchg
dec
je
ljmp
repz
testl
cmp
pop
test
mov
ljmp
je
push
xchg
loope
loopne
cmp
sub
mov
rcl
sbb
pop
in
ret
pop
negb
sbb
dec
or
jle
movups
xchg
pop
gs
mov
repz
movsb
lock
push
lods
loope
jmp
inc
nop
movsb
shrl
xor
mov
jge
aaa
lcall
inc
pusha
repz
imul
and
mov
arpl
pop
enter
les
popf
xchg
push
sub
inc
sbb
dec
ds
xchg
dec
imul
sahf
cmc
cmp
mov
sahf
out
fwait
ja
and
int
pop
xor
repnz
inc
lods
push
xor
jns
mov
push
jae
push
testb
pop
icebp
cmp
es
push
jne
xchg
fnsave
xor
out
cmpsb
mulb
rol
and
sub
pop
jno
jmp
aaa
inc
pop
fsts
aad
mov
sub
arpl
outsl
clc
sti
aas
xor
sbb
mul
lahf
repnz
std
in
loope
js
xor
movsb
fst
xlat
pop
fprem1
cld
or
sub
and
inc
iret
mov
dec
test
outsl
mov
cmp
pop
xor
cmpsb
adc
jb
sub
out
fwait
add
adc
xchg
adc
pop
inc
frstpm(287
cmp
mov
adc
js
xchg
add
mov
in
push
adc
into
mov
les
adc
aad
xor
stos
adc
dec
dec
push
mov
sub
push
jmp
push
mov
mov
imul
les
out
add
sbbl
loopne
push
inc
or
mov
std
cmp
mov
mov
xlat
ret
ljmp
dec
add
mov
or
sub
ja
mov
mov
push
adc
shll
pushf
rorb
push
mov
sub
mov
stos
lods
xor
push
movsb
add
and
inc
sbb
into
test
out
xchg
mov
js
insl
bound
jle
mov
fs
test
mov
test
jns
data16
or
jle
adcl
jecxz
ja
pop
pushl
mov
sub
xor
mov
xorl
mov
adc
or
xor
aad
mov
xor
jae
dec
fs
inc
mov
mov
cmp
mov
mov
sarl
addb
xor
stos
jb
dec
push
inc
xor
in
jl
xchg
and
clc
rcrl
push
inc
mov
es
pop
leave
sbb
push
inc
ficoms
dec
add
add
xchg
push
pop
in
xchg
cmp
xchg
mov
sbb
addr16
in
xchg
cmpb
andl
sub
push
and
sbb
and
lea
sub
sbb
aad
addl
hlt
inc
fists
repz
cmp
add
dec
inc
jne
adc
cmpsb
ficomps
inc
cmpsl
xor
push
dec
leave
mov
cmp
pop
iret
imul
add
lahf
dec
xor
movsl
dec
cmpsb
or
cmp
mov
mov
ficomps
sbb
leave
sbb
mov
aas
mov
xchg
add
int3
pop
outsl
loope
sub
fs
out
adc
add
out
popa
je
push
sub
cmp
xor
adc
cli
repnz
fldcw
jo
outsl
scas
mov
aaa
lods
push
in
adc
mov
mov
ljmp
dec
ja
das
sub
aaa
xor
stc
enter
mov
add
data16
stc
or
cmp
psubw
dec
fstpl
mov
orl
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
stos
push
xchg
add
call
xchg
int3
sbb
cmpsb
push
cmp
xchg
xor
je
xor
pushf
fdivl
in
xchg
mov
lock
cwtl
lret
sbb
xorl
outsb
outsl
xchg
cmp
jmp
xlat
enter
and
cmpsl
cs
dec
pop
aas
mov
movsb
shll
loope
nop
sbb
fidivrl
lds
add
lds
into
inc
arpl
pusha
aaa
jae
inc
cmp
aam
je
xlat
scas
movsl
das
jno
addr16
jno
xchg
imul
sub
pop
xchg
mov
daa
xchg
xchg
pusha
jae
xorps
int3
cli
fdivl
dec
mov
push
bound
add
movsl
mov
test
stos
push
add
pop
imul
test
in
and
mov
das
or
leave
loope
dec
out
sub
fs
rclb
loopne
js
jnp
aam
mov
or
adc
and
cwtl
cmp
mov
adc
inc
arpl
aaa
and
push
ljmp
arpl
cmp
jp
daa
sahf
dec
sti
sbb
movsb
push
imul
sub
enter
and
hlt
sbb
aad
out
sahf
mov
mov
adc
cmp
push
cli
cmp
call
lahf
jp
arpl
xlat
out
out
sub
rcrl
and
out
push
add
out
jmp
test
xor
pusha
sbb
cmpsl
push
pop
cmp
gs
inc
out
imul
popa
pop
mov
dec
fisttpll
push
cmpl
ret
xor
in
pop
lahf
mov
rcr
push
lds
mov
rep
xor
clc
cmpsb
mul
in
hlt
jp
in
fxch
shl
cmp
mov
pop
in
mov
pop
outsb
jns
push
shl
cwtl
push
xchg
sbb
or
lret
jmp
fcompl
mov
ja
les
test
push
dec
and
pushf
push
cmp
dec
push
jbe
movsl
out
insl
xor
repnz
xchg
xchg
sub
lock
push
lret
shll
shl
adcb
and
push
cmpb
sub
in
cmp
dec
test
add
jge
inc
ficompl
inc
xchg
ja
cwtl
repz
ljmp
xchg
add
xchg
pop
inc
xchg
loopne
add
repnz
arpl
test
lret
aas
jg
ficoms
mov
inc
dec
pop
ss
fadd
insb
inc
adc
xchg
lods
sub
adc
movsb
push
pusha
push
mov
add
test
push
mov
sbb
mov
add
insl
out
xor
push
out
sbb
test
imul
xor
jle
inc
loope
sahf
inc
enter
and
mov
xchg
mov
pop
and
cltd
enter
mov
xlat
in
xchg
jae
dec
sub
cmp
mov
mov
outsb
mov
xchg
addr16
mov
andb
lds
pop
mov
iret
sub
cli
mov
insb
mov
xor
pop
cmp
sarl
xor
and
xchg
xor
cmp
mov
mov
and
sub
js
rcll
or
or
sti
mov
adc
sbb
or
push
or
and
cmp
test
repz
sub
sbb
cmp
scas
fiaddl
lret
sub
sub
repnz
dec
mov
mov
test
xchg
inc
mov
add
cmp
and
les
or
adc
cwtl
ljmp
repnz
add
leave
mov
mov
inc
repnz
cmp
jne
in
data16
pop
out
and
mov
mov
pop
fidivrs
cmpsb
std
loopne,pn
dec
ret
sbb
mov
jae
pop
and
adc
xor
inc
sti
rcrl
add
outsb
and
movsl
in
fnstcw
xchg
lahf
adc
sub
mov
sub
rorb
mov
jmp
pop
or
push
pop
aas
jne
pushf
js
pop
add
ret
sbb
dec
adc
jecxz
cmp
push
dec
xchg
test
mov
push
in
movsl
gs
xchg
inc
inc
inc
adc
dec
ficoms
je
mov
rclb
shlb
xor
cli
dec
enter
mov
sub
adc
lock
fistl
jmp
pop
clc
nop
inc
mov
jmp
fs
lahf
cmpsb
mov
xchg
es
out
test
dec
jg
rcr
jmp
xchg
mov
jle
imul
inc
pop
cmp
test
add
xlat
push
xchg
imull
mov
jge
outsb
aas
cmp
out
pop
dec
jb
pop
ret
imul
addr16
out
inc
notl
jge
push
gs
dec
pop
add
mov
mov
mov
icebp
mov
fdivs
push
orl
into
mov
pop
xor
mov
sub
adc
adc
dec
sub
mov
and
and
push
cmp
into
lahf
or
stc
sbb
sub
xchg
int3
cmp
xor
popf
dec
xchg
pop
or
push
xchg
xchg
mov
je
pop
mov
test
addr16
ret
inc
icebp
int
sbb
or
sbb
jmp
or
jne
pop
push
xchg
out
mov
jle
sub
push
int
xchg
push
aam
sbb
xchg
dec
loopne
cmp
ficompl
add
int
cmp
int
rolb
sub
and
movsb
int
fiaddl
or
shl
jl
jp
lock
or
or
jg
scas
adc
or
sub
adc
daa
pop
andb
fildll
push
pop
daa
insb
vmptrst
rolb
or
inc
push
and
push
pop
rcll
xchg
add
inc
aaa
jns
neg
or
push
addb
xor
push
cltd
ds
and
fwait
scas
add
sbb
or
shlb
sarb
adc
sti
insl
repnz
sbb
jb
adc
pop
mov
push
jnp
mov
in
gs
pop
push
int
xchg
lea
insl
gs
into
add
dec
popf
icebp
jp
mov
sub
push
pop
addr16
addr16
xchg
in
sbb
jg
pop
hlt
in
mov
push
pop
stos
sbbl
shlb
adc
cmp
mov
cmp
push
es
xchg
mov
pop
xchg
add
inc
loopne
inc
repz
and
sahf
in
out
push
dec
fs
pop
mov
sub
jnp
pop
mov
and
orb
decb
dec
xchg
push
xchg
lcall
adc
dec
inc
cmp
ja
inc
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
fwait
adc
dec
pop
cli
adc
jne
movaps
das
aad
push
testb
cld
mov
in
mov
sbb
pop
lods
int
bound
lods
clc
pop
jnp
push
insl
mov
and
add
and
or
mov
lods
xor
jge
jo
ds
pop
and
ja
and
add
push
bound
ja
sub
loopne
dec
icebp
sub
shlb
sub
push
dec
scas
mov
popa
adc
xchg
je
jne
fistps
addr16
and
lods
mov
insl
push
dec
mov
std
mov
cmp
sbb
loope
mov
adc
sub
lcall
push
inc
inc
nop
and
cwtl
ljmp
dec
xchg
scas
daa
and
push
pop
mov
xlat
push
adc
cwtl
out
dec
add
mulb
pop
rorl
out
mov
pop
mov
push
or
mov
test
cmp
push
sar
push
push
bnd
pop
add
add
hlt
movsl
aaa
inc
insb
mov
mov
jp,pn
and
sub
sub
and
int3
ja
and
and
or
fwait
data16
rol
mov
out
sbb
test
mov
rorl
out
aaa
ss
jno,pt
into
inc
pop
in
cmp
clc
pop
rcrl
mov
cmpb
call
call
cmpsl
xor
add
sub
fs
dec
in
lahf
pop
sbb
push
rorb
rclb
cmp
lcall
outsl
cs
cmc
sub
and
pushf
repz
out
scas
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
