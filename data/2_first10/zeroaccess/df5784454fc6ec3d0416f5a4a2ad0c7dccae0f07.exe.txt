push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
sbb
jle
adc
adc
adc
adc
dec
jp
fisttpl
lds
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
fnstcw
idivl
enter
daa
imul
in
sbb
daa
sub
into
mov
cs
into
repnz
sbb
clc
arpl
pushf
jmp
jmp
pusha
iret
test
xchg
mov
xchg
adc
stos
jmp
enter
and
testl
xor
daa
dec
cmp
jmp
cmp
mov
add
or
pop
popf
mov
pop
andl
mov
faddp
jmp
adc
push
inc
mov
jbe
repz
orb
mov
lret
loope
popl
out
jne
push
mov
sbb
xchg
xchg
mov
mov
mov
movsl
sub
cmpb
testb
mov
xor
mov
fwait
repz
dec
movsl
outsl
pop
out
adc
es
ljmp
hlt
mov
mov
mov
xchg
rcl
mov
mov
cmp
ja
dec
sbb
enter
jae
jp
lret
jb
pop
bound
or
enter
enter
sub
rcrb
out
push
xor
mov
push
rorl
xchg
scas
gs
mov
jno
das
les
loop
sbb
fcomp
add
push
test
cmp
sub
jae
movsb
test
push
mov
dec
lods
cmp
cmp
loop
test
scas
xor
xchg
fldl
push
pop
inc
add
ja
dec
insl
and
push
inc
pop
test
imul
mov
cs
jae
jbe
add
dec
dec
and
dec
lea
test
mov
insb
adc
push
sarl
mov
dec
fcmovne
xor
lods
sub
fdivr
cmpsl
sbb
js
and
jmp
pop
xlat
cld
fcompl
xor
jo
or
stc
std
iret
push
ljmp
pop
pushf
or
iret
push
aam
mov
lds
dec
xlat
mov
enter
aaa
scas
and
js
push
adc
inc
sub
xchg
dec
mov
aam
pop
xor
dec
cmc
adc
pop
scas
pop
out
xorb
shrl
mov
lods
lret
adcl
loopne
cld
daa
arpl
jne
cmp
pushf
fwait
mov
fneni(8087
add
push
mov
add
push
adc
mov
clc
aaa
inc
aas
roll
push
jbe
mov
lods
pop
mov
cmc
js
jbe
out
mov
xchg
pusha
icebp
shr
mov
pop
out
push
xchg
pop
or
insl
fs
adc
mov
sbb
test
out
jno
out
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
es
adc
adc
adc
adc
repz
mov
negb
int3
jmp
mov
xchg
ret
xchg
jbe
dec
xor
psubq
jp
cltd
test
rcr
nop
pop
jecxz
divl
mov
cld
cld
xor
jne
jns
movsl
jmp
stos
mov
xor
dec
stos
fimull
add
or
ss
xchg
or
int
dec
sbb
cmp
loope
and
sub
fs
and
jp
rolb
push
iret
daa
mov
push
cltd
pop
lods
push
xchg
mov
sbb
data16
push
hlt
mov
add
adc
les
jns
mov
cld
loop
shll
test
ret
mov
roll
pushf
sub
dec
sbb
imul
popa
decl
fcmovne
mov
ljmp
xor
mov
psrlw
lret
fldt
dec
js
es
shll
pop
sub
jbe
lahf
and
hlt
mov
test
arpl
xorl
xor
cmp
adc
jno
hlt
add
mov
xchg
out
jmp
addl
lahf
dec
dec
dec
inc
or
sub
cltd
and
lret
or
sarb
jecxz
xor
shrl
dec
xchg
cmpsl
adc
jb
xor
mov
je
adc
dec
pop
mov
arpl
xor
lock
sub
jno
pop
stos
adcb
out
iret
and
data16
pusha
daa
push
jecxz
loopne
sti
rclb
sub
js
je
insb
mov
jecxz
and
pop
or
jl
mov
rorl
add
lahf
cmp
push
ret
xchg
mov
jl
and
popa
addr16
je
jge
ret
xor
sbb
jns
xchg
shl
iret
fwait
dec
fs
xchg
xor
hlt
in
fwait
or
and
mov
fdivl
orb
in
shll
in
lcall
xchg
mov
fs
mov
cmpsl
mov
lock
xchg
jno
hlt
mov
lods
cld
cmp
adc
mov
cmpsl
push
pusha
shlb
fdivl
inc
mov
cmp
js
iret
push
ficompl
test
in
and
xor
cmpsl
mov
cld
pop
or
adc
aad
sbb
push
jbe
jne
lods
sbb
mov
cmp
jne
jb
not
addr16
inc
clc
outsb
test
outsl
stos
repnz
adc
mov
lahf
fiadds
push
mull
cmpsl
adc
inc
dec
push
xor
mov
jge
add
sub
aad
stos
ljmp
ljmp
and
jns
repnz
pop
pusha
jno
dec
dec
daa
aaa
pop
adc
dec
push
adc
lods
xchg
sbb
outsb
mov
movb
jge
pop
outsb
out
xchg
and
xchg
dec
scas
dec
sarl
aas
insb
mov
xchg
je
xchg
push
mov
jnp
sub
pop
mov
cwtl
jb
imul
rep
frstpm(287
cmpl
sbb
outsl
pop
lods
xor
loope
inc
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
pop
pop
rep
orb
adc
adc
adc
aaa
lods
sbb
adc
js
repnz
shlb
push
jecxz
inc
fidivrs
shlb
or
loop
out
mov
adc
push
cmc
loop
gs
cmp
gs
out
icebp
xchg
inc
into
stos
das
enter
rep
cmp
push
std
sub
loop
sbb
nop
xchg
js
mov
int
pop
push
je
out
mov
pusha
inc
lods
lods
xor
out
xchg
cwtl
aam
mov
adc
mov
jbe
xor
mov
pop
out
jbe
jmp
jmp
das
mov
aad
fidivl
arpl
in
lahf
sub
cmp
xor
and
xor
adc
push
mov
push
psrad
lock
sbbl
aad
dec
push
xchg
sbb
xor
shlb
mov
xchg
xor
imul
xor
cld
cld
mov
stos
add
inc
adc
pop
add
hlt
lret
push
mov
add
insl
stos
mov
addr16
test
pop
xchg
lahf
mov
js
mov
insl
sub
xchg
sub
insb
inc
adc
sbb
add
mov
sarb
xchg
pop
je
jns
push
cmp
dec
movsl
mov
push
or
and
out
dec
add
lea
insb
mov
sbbb
fstps
dec
shrl
dec
and
sarb
push
in
adc
inc
jmp
push
sbb
inc
sbb
testb
xor
enter
sbb
jo
mov
jle
scas
adc
aam
movsl
rep
mov
xchg
stos
faddp
sbb
push
ds
sub
mov
es
arpl
popf
cmp
addr16
lret
or
mov
je
sar
mov
data16
test
mov
popa
ror
jns
jmp
xor
mov
add
mov
mov
pusha
outsl
js
popa
and
arpl
stos
jns
mov
scas
inc
pop
pop
cmp
test
jmpw
jbe
inc
in
lret
out
cmp
mov
jmp
cmp
iret
or
cmp
xor
roll
xor
mov
cmp
mov
push
loope
aas
mov
adc
and
push
dec
je
jns
push
push
sbb
jle
mov
or
ljmp
pushf
sti
fwait
lret
and
cmc
dec
cmp
push
xchg
adc
cmpsl
int3
clc
and
vhsubpd
or
shlb
cmpsl
mov
out
mov
popf
xchg
test
test
sbb
and
pop
test
push
out
adc
and
pop
sub
and
dec
outsb
cmp
cmp
xchg
ja
arpl
add
dec
aaa
aaa
inc
mov
ror
and
loopne
ret
inc
daa
inc
loop
cltd
cmpsb
test
or
or
into
xchg
mov
ret
test
cmp
add
sbb
mov
xor
pushf
or
addl
mov
jne
jae
notl
fcmovu
fistps
out
pop
mov
mov
pop
xlat
adc
stc
sarb
loope
les
lock
mov
adc
push
mov
mov
repnz
jmp
jle
push
lcall
dec
into
ljmp
adc
testl
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
inc
js
das
cmpsb
push
mov
or
adc
aas
sub
dec
push
jb
xchg
mov
arpl
cltd
inc
pop
xchg
test
test
or
or
or
ret
push
leave
or
clc
jo
dec
pop
js
rolb
inc
pop
lret
sub
icebp
jl
mov
xor
jg
mov
sbbb
sbb
nop
icebp
xor
xchg
shll
pop
sbb
inc
add
lods
jno
push
ja
push
test
push
stos
jae
cmp
in
pop
out
in
adc
outsb
les
mov
adc
xchg
sbb
fmul
int
mov
insb
out
mov
mov
sti
dec
inc
outsb
aam
orl
jno
outsl
cs
inc
adc
mov
xchg
lea
sub
pop
cs
dec
lock
call
jge
push
mov
jp
xor
lods
xchg
movsb
jb
pop
leave
loopne
int3
xor
sbb
mov
xor
mov
cltd
movsb
das
mov
jecxz
adc
adc
adc
add
inc
sti
cltd
test
dec
dec
add
imul
push
jmp
mov
psubw
adc
inc
pop
pop
add
scas
pushf
pop
xchg
jge
xchg
push
jne
insl
jge
pop
pop
xor
xor
and
sbb
add
push
sub
xchg
mov
ret
popf
and
push
push
jne
add
icebp
add
push
in
inc
mov
cli
icebp
inc
int
shl
and
pusha
adc
arpl
sbb
mov
push
fiaddl
aaa
mov
mov
add
mov
add
sbb
cwtl
aaa
xcrypt-cfb
cmpsl
bound
jb
mov
xor
cmpsb
sahf
push
or
push
jecxz
icebp
stos
addr16
adc
jp
jno
loopne
shlb
stos
mov
int
imul
jl
cmpsb
sbb
dec
iret
and
and
bound
movsl
ja
dec
adc
pop
jmp
dec
mov
fcos
add
or
push
push
int
aad
jns
pusha
nop
ljmp
sti
mov
jo
daa
jle
lcall
sbb
inc
or
cmpsb
mov
stos
mov
bound
in
push
and
sbbb
cmpsb
push
test
aas
movsl
adc
pop
jae
mov
inc
push
ret
jno
arpl
pop
testb
dec
mov
pushf
mov
test
test
ljmp
dec
mov
jb
push
test
cmpb
pop
jmp
test
loop
xchg
lds
xchg
pushf
ficoml
or
push
in
jle
loopne
cmp
lcall
je
lock
push
jno
in
or
cmpb
fsts
and
add
andl
cmp
cmp
sahf
lcall
and
push
leave
pop
negb
or
push
dec
jb
and
test
push
sub
adc
mov
lret
icebp
cmpb
add
cmp
sbb
mov
sbb
je
adc
mov
xor
pop
frndint
pushf
hlt
int3
out
push
jecxz
lods
pop
mov
sbb
adc
dec
dec
sub
mov
dec
movsb
push
insb
mov
add
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
clc
cmp
in
notl
adc
adc
adc
lret
mov
sbb
call
inc
into
jge
push
and
push
mov
popf
pop
cmp
repz
repnz
mov
lret
loopne
xor
test
pop
xor
or
dec
inc
sti
cmpsb
jne
jns
and
fisubl
cld
add
jnp
fldl
adc
mov
push
out
ss
hlt
mov
pop
out
lods
and
xchg
sbb
fildl
cmc
sub
je
lret
xchg
int3
xor
int
loopne
pop
add
add
cmp
mov
and
test
loopne
stc
movsl
in
dec
xchg
sub
sub
fsubs
xchg
push
dec
je
fs
adc
push
andb
xchg
mov
inc
mov
js
insl
sahf
ret
xorl
add
pop
push
mov
cmp
ret
mov
pop
mov
nop
mov
popa
out
dec
lret
xchg
insb
cmp
xchg
insb
push
dec
adc
outsl
push
mov
mov
cmp
push
mov
and
xchg
inc
ja
inc
lret
lea
lock
stc
mov
mov
jno
stc
adc
push
sbb
jecxz
test
ljmp
cwtl
out
pushf
push
insl
aam
jmp
or
addr16
xorl
test
test
mov
pop
or
dec
out
jb
mov
cmp
sub
into
mov
adc
mov
or
iret
popa
mov
pop
xchg
pop
adc
dec
scas
xchg
ret
dec
mov
xor
mov
std
sub
shll
hlt
ret
ja
mov
pop
fsub
in
rcl
cmp
sub
sahf
std
je
inc
mov
jecxz
dec
xor
jle
xchg
add
pop
mov
fists
mov
movsl
les
inc
sbb
lods
jne
or
inc
nop
std
int3
dec
xor
andb
push
mov
icebp
ljmp
rcl
jno
cli
dec
or
jecxz
or
cmc
push
in
sub
jge
roll
shll
and
dec
jle
out
add
jno
mov
lds
jle
popa
addr16
mov
fwait
int3
sbb
es
repz
movsl
jb
fstl
cli
mov
and
mov
rol
fdivrs
iret
mov
imul
lock
mov
jg
mov
sbb
mov
adc
lods
push
cld
loop
xchg
mov
sub
mov
inc
add
jp
std
sub
into
ret
or
pop
ljmp
or
pop
mov
js
push
push
fwait
sbb
lret
aam
ljmp
shl
push
push
push
loope
stos
insl
push
incl
mov
cli
lcall
adc
inc
ljmp
or
sahf
xchg
loope
fs
sub
gs
outsl
cmp
stos
inc
or
outsb
lcall
cmpsl
loopne
ficoms
xor
popa
push
and
les
jmp
and
and
mov
movsb
or
or
test
xlat
add
or
push
dec
scas
xorl
and
repnz
mov
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
xchg
adc
adc
int
adc
xlat
loope
call
and
sbb
xchg
and
fwait
movsl
insb
lds
adc
testl
popa
push
sbb
xor
or
and
lea
sti
or
dec
add
inc
sbb
movsb
cmp
push
test
scas
shl
shll
clc
jno
pushf
jb
ljmp
add
mov
fdivr
movsl
mov
dec
call
aaa
int3
adc
xchg
insb
pop
and
shr
dec
sub
enter
inc
movsl
pop
push
rol
mov
pop
inc
lret
addr16
push
inc
sub
cmpl
xchg
cli
loop
xchg
pop
aaa
popa
cmpsb
pop
cmp
mov
mov
lods
lods
loope
int3
sub
jae
call
jae
push
in
mov
es
stos
lods
aaa
mov
or
jbe
sahf
cmp
cmp
ds
adc
add
mov
and
sub
mov
xor
jmp
cmc
or
imull
fsubp
pminsw
jns
xlat
clc
call
test
xor
and
ficomps
ljmp
xchg
or
cmc
pop
cs
mov
mov
mov
movsl
outsb
lret
test
lcall
scas
jg
arpl
mov
jmp
pop
rcrb
ds
out
cs
test
neg
and
ret
adc
loope
xor
cmp
fdivrl
jbe
pop
popf
sbb
loope
inc
pop
dec
sub
mov
in
dec
mov
cwtl
ss
insl
jg
jle
in
push
es
ljmp
mov
push
sti
mov
es
fnstcw
stc
lcall
std
cmp
push
xchg
sbb
push
mov
dec
or
mov
adcl
push
xor
fsin
and
in
mov
and
jne
mov
fwait
ljmp
sub
es
lahf
sbb
dec
pop
inc
fiaddl
stos
mov
sub
fwait
push
bound
js
adc
or
mov
icebp
sbb
push
fcom
and
xchg
sahf
scas
cli
mov
add
es
das
dec
nop
daa
cmp
cmpsl
iret
push
pop
leave
nop
sbb
add
pusha
jo
ss
jg
push
dec
stos
call
mov
lds
outsl
ds
in
jl
mov
jb
daa
and
cmpsl
test
pushf
xor
pop
ljmp
cltd
fistl
xchg
pop
or
out
xor
dec
add
or
stos
mov
sub
mov
in
sub
inc
xchg
mov
pusha
inc
mov
or
sbb
hlt
addr16
loope
push
mov
jbe
jle
shr
sbb
lret
pop
mov
push
rcl
cld
push
loope
std
push
mov
cld
into
push
loopne
adc
and
les
rorl
and
mov
mov
sub
arpl
cltd
outsl
int
scas
cmovs
mov
push
cmp
aaa
and
or
dec
ja
shlb
sub
pop
push
cltd
sar
xor
push
inc
jnp
ljmp
mov
push
inc
cltd
jno
push
jae
mov
cmc
push
mov
sbb
movsb
dec
push
dec
je
inc
mov
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
lcall
adc
adc
adc
xchg
jmp
stos
pop
fbstp
push
shl
cmpsl
pop
mov
fdivs
mov
jns
lock
pusha
inc
outsl
xor
xor
push
stos
xchg
cwtl
mov
pop
test
lds
jno
insb
aad
push
out
jae
inc
imul
mov
outsb
mov
cwtl
jae
dec
icebp
xor
sub
stc
daa
adcb
mov
cltd
jg
lods
xchg
push
push
ljmpw
stos
sub
test
js
faddl
or
data16
aam
dec
push
int
aas
jmp
outsl
sbbl
jb
push
jnp
xlat
leave
dec
add
sbb
aam
adc
rorb
fbstp
js
sarb
mov
xchg
pop
fwait
add
cld
ret
pop
push
subl
scas
pop
or
dec
fcmovnbe
mov
pop
jbe
push
jecxz
or
incl
sbb
jbe
test
ja
jge
shl
fs
hlt
mov
push
pop
xor
jge
adc
xchg
popf
cld
mov
or
dec
cltd
mov
xor
pop
xchg
mov
mov
push
mov
add
std
les
mov
and
je
inc
es
test
int
mov
rcl
fidivrl
sbb
je
xor
mov
inc
loope
inc
adc
xchg
ret
cmp
xlat
lods
mov
mulb
mov
cmpsl
jns
int3
imul
int3
or
jle
dec
ret
jp
lcall
out
jbe
adc
jg
outsb
daa
lea
adc
arpl
inc
xor
cltd
icebp
gs
shll
in
or
fs
fnstenv
pop
in
orb
gs
inc
xor
fnstsw
lcall
lcall
dec
cmp
adc
xor
and
jno
fnsave
shufps
mov
imul
jg
ret
ss
or
ss
bound
decl
jmp
test
lods
mov
fmulp
inc
xor
aas
inc
xchg
sub
mov
lret
scas
add
shrl
adc
mov
mov
xor
test
or
sahf
call
sub
fdivrs
mov
cs
push
dec
idivb
adc
cmp
xor
mov
fnsave
cltd
insl
daa
sub
aaa
mov
loopne
cld
adcb
xchg
pusha
add
clc
cmpsb
js
push
roll
cmp
pop
sub
dec
aad
mov
cmpsb
cmc
insl
mov
movsb
cld
jns
repz
and
mov
cs
xor
icebp
mov
in
cli
pop
push
inc
lahf
and
int3
add
xor
daa
cmp
dec
mov
and
push
cwtl
mov
or
add
pop
push
cmp
mov
rorl
es
cmp
xor
fnstsw
je
scas
jg
popa
fmul
push
cwtl
test
xor
sbb
pop
and
scas
dec
in
fsubl
in
pop
clc
rol
insb
shll
mov
aaa
lods
mov
scas
out
outsb
cmp
xchg
sbbb
mov
push
add
stc
adc
sahf
mov
iret
jp
cmpsb
push
ret
xor
imul
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
lret
lods
adc
adc
int
adc
maxps
jbe
mov
pop
fistpll
dec
pop
ljmp
xchg
jnp
stc
sbb
push
jp
lret
insb
pusha
adc
rorb
push
out
mov
sub
inc
lret
cwtl
xor
push
mov
mov
lds
loopne
xor
push
test
dec
inc
mov
push
mov
js
dec
ds
or
sbb
pop
sbb
cmc
repnz
jecxz
daa
mov
cmp
xor
pmaxsw
iret
adc
jne
mov
or
scas
push
insl
adc
jbe
mov
jno
lahf
mov
pop
andb
sarb
in
pop
pop
into
push
push
cmpsb
sbb
adc
sub
jbe
mov
stc
mov
sahf
jnp
les
sbb
xor
aaa
or
jle
push
mov
push
or
jmp
or
inc
xchg
jge
setg
adc
sub
sub
mov
push
out
into
dec
xor
or
repz
test
das
xchg
lock
jl
add
popa
aas
jb
jp
mov
jge
out
push
cs
gs
cmp
out
hlt
xchg
enter
dec
push
jmp
daa
and
testl
mov
orl
leave
imul
cmpsl
cmp
stos
cli
or
lret
pushf
jle
cmp
inc
jge
jbe
leave
test
dec
fs
push
mov
std
adc
cmp
insl
xchg
xchg
xor
jns
fsubrp
mov
sub
jo
test
mov
insb
ficoml
hlt
repz
mov
push
inc
push
pusha
in
pop
lods
or
pop
and
jecxz
idiv
inc
in
xor
cs
mov
dec
mov
add
sub
sub
data16
ljmp
ret
sub
jb
iret
andb
pop
loop
pushf
arpl
or
dec
out
mov
push
fisttpll
rorb
ss
dec
in
mov
xchg
rcrb
jg
jb
mov
push
adc
or
xchg
adc
test
jns
and
add
push
icebp
sub
jno
mov
rorb
and
jp
mov
out
and
mov
int3
fs
int
jns
mov
mov
dec
pop
lods
les
std
or
push
mov
sbb
inc
out
and
daa
mov
pop
leave
add
faddl
inc
fs
xchg
pop
sub
mov
jo
inc
ret
in
gs
push
add
sbb
xchg
xor
mov
fbld
std
xchg
daa
jle
pop
and
jns
mov
inc
push
pop
loop
push
push
push
cmp
movsl
sbb
or
inc
jp
dec
jo
mov
mov
inc
inc
push
or
pushf
fcmovbe
cmpsl
insl
in
or
jne
sti
mov
dec
pop
dec
push
mov
je
fstp
movsb
std
adc
pop
inc
push
cmpsl
mov
call
cmc
in
inc
fldenv
xlat
mov
xor
cmc
into
and
mov
int
inc
push
mov
cmp
jle
mov
pop
push
jl
xor
mov
hlt
push
sub
and
popa
rsm
fs
and
shlb
rorl
adc
mov
flds
les
enter
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
pop
push
mov
ficoms
adc
adc
adc
ljmp
mov
mov
sub
xor
into
mov
sub
ljmp
daa
mov
cli
outsl
in
stc
pop
mov
mov
lahf
mov
adc
test
pop
mov
mov
addr16
cltd
cli
sti
loope
xchg
test
cli
out
gs
sub
add
pop
jnp
dec
dec
nop
mov
cwtl
sub
cmp
incl
mov
add
and
jb,pn
daa
sub
jl
jge
and
ds
ret
xor
mov
jmp
enter
cli
sbb
stos
arpl
test
or
mov
add
push
cmp
fdivl
mov
mov
dec
fwait
pushf
lcall
andl
and
repnz
not
loopne
rcll
lcall
aas
jle
adc
lea
fsub
sbb
fdivrs
cld
inc
out
ret
mov
cwtl
mov
pop
cltd
fwait
pop
mov
add
add
lcall
test
loope
hlt
pop
mov
mov
xor
je
iret
inc
or
aaa
jns
repz
adc
and
stos
mov
stc
aaa
std
icebp
lret
push
ljmp
mov
std
mov
xor
in
sarb
jno
pushf
sub
ds
xchg
sti
push
xchg
or
xchg
js
outsb
jmp
pop
notb
movsl
push
add
mov
mov
std
cld
ja
in
xchg
pop
test
xchg
xor
mov
xchg
clc
mov
ds
pop
sub
pushf
insl
mov
cli
cmp
divl
imul
jns
rclb
popa
test
sub
xchg
mov
mov
sub
mov
cmc
divb
add
add
and
adc
pop
push
xchg
outsl
dec
fstl
js
xor
aas
xor
pop
loop
addb
insl
pop
std
outsb
stos
fcomps
scas
xor
sub
inc
loop
out
mov
cmp
jae
test
lret
in
dec
pop
into
mov
mov
sub
repz
jge
xchg
leave
shll
xchg
jne
repnz
in
mov
sbb
jns
mov
shlb
fdivr
or
scas
test
in
xor
add
fistpl
mov
jne
mov
cmp
lock
xchg
outsb
ja
adc
mov
arpl
dec
or
lahf
int3
fwait
mov
mov
dec
sub
scas
lret
aam
pop
add
xor
ret
inc
mov
fisttpl
and
fwait
popf
dec
repz
push
or
adc
sbb
jg
fstl
lods
adc
xor
out
loopne
mov
out
dec
out
nop
sbb
mov
outsl
or
cmc
lods
in
aam
jb
outsl
out
xchg
jg
cltd
cmpsl
in
stc
push
clc
fdiv
pop
iret
or
sbb
imull
popf
adc
pusha
repnz
inc
int
movd
push
mov
je
pusha
sbb
mov
mov
sbb
repz
icebp
dec
adc
shr
mov
mov
shl
jmp
fmuls
sbb
movsb
or
int
adc
sbb
dec
xor
test
inc
pop
cmc
or
mov
and
xlat
imul
sti
sbb
stc
jo
das
sbb
cwtl
mov
pop
sub
xchg
mov
clc
sbb
xchg
imul
dec
daa
sbb
pop
sub
mov
mov
cmp
test
and
test
repnz
add
push
pop
leave
add
mov
and
cmp
stc
cld
mov
xor
xor
shlb
in
sub
sub
outsl
xchg
or
add
jb
idiv
call
xchg
push
xlat
and
and
lahf
dec
in
rep
jae
mov
jb
add
push
jecxz
rcr
mov
roll
ret
jp
sbb
sbb
jge
mov
inc
repz
mov
lods
adc
mov
sbb
movsl
cmp
xor
sti
sub
loope
inc
mov
sbb
mov
imul
sub
pop
test
sahf
mov
fsubl
jmp
xchg
push
mov
hlt
xchg
push
jmp
inc
fisubrs
aad
ss
ja
bound
cmp
insl
das
nop
lahf
dec
lcall
enter
lahf
adc
xchg
daa
lret
push
or
fldl
jnp
xchg
pop
faddl
mov
out
jecxz
addr16
dec
jge
push
inc
jno
cmpsl
jb
push
movsb
in
out
inc
ja
sbb
int
ja
int
xchg
pop
inc
push
mov
xor
mov
ficoms
in
mov
sbb
cmpsl
jl
xchg
ds
xchg
iret
add
adc
push
dec
lret
or
dec
cmpsb
mov
or
jle
call
mov
sbb
cs
adc
mov
push
mov
test
xor
stc
push
cmpsb
xor
shl
scas
jae
or
fbld
in
push
addr16
mov
inc
sbb
xchg
shl
int3
push
iret
sbb
add
pop
loop
cmp
jne
bound
sbb
xor
cmp
push
pop
and
push
jb
vldmxcsr
scas
dec
add
stc
xchg
fisttpll
dec
arpl
inc
test
addr16
sbb
pop
push
push
mov
out
pop
jo
xchg
sub
shr
xchg
fwait
ds
cld
mov
lcall
sbb
test
xor
add
xchg
jp
sbb
les
xchg
and
mov
inc
fists
fs
xchg
data16
or
inc
inc
insb
stc
jle
sub
pop
loopnew
das
xchg
mov
or
xor
leave
inc
cs
insb
or
subl
adc
shrl
and
iret
iret
jo
mov
and
mov
jl
shlb
cmp
call
decb
adc
push
data16
push
or
mov
movsl
pop
popa
std
lcall
mov
push
dec
inc
xchg
xchg
int
mov
lds
inc
lods
js
bnd
or
jno
loopne
pop
hlt
mov
mov
mov
aam
js
movsl
sahf
lea
repnz
repnz
xchg
ret
lds
out
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
mov
adc
int
adc
cli
movsl
lock
xor
push
test
inc
and
fwait
aam
xchg
pop
test
xor
mov
inc
gs
ds
stc
fs
fcomps
or
jo
cmp
jo,pt
roll
cmp
dec
mov
cmp
and
inc
in
daa
int
add
dec
pushf
and
stos
cmc
stos
push
sarb
repz
mov
xchg
lods
add
fwait
xchg
fnstsw
shll
pop
xor
ljmp
or
fs
popf
fs
mov
cld
add
lods
mov
inc
fnsave
adc
daa
outsl
data16
inc
stos
sbb
fbstp
or
jb
cmc
daa
mov
enter
and
or
xchg
popf
outsl
cmpsb
jge
jns
cli
jmp
mov
cli
popa
mov
push
xor
out
lret
movsb
xor
mov
xor
mov
sbb
add
mov
inc
popf
mov
imul
je
adc
cmc
dec
sbb
in
dec
and
sub
notl
cltd
push
sbb
idiv
fwait
or
push
xor
test
or
pop
leave
inc
cmp
xor
sub
xor
movsl
ret
mov
xchg
xor
sub
cld
sbb
repnz
cld
adc
sarl
dec
cmc
adc
sti
pop
dec
xor
xchg
xor
push
lods
jge
push
inc
pushf
call
pop
or
mov
cmp
xor
mov
ljmp
dec
sbb
cli
cwtl
pop
or
aas
cmp
inc
xchg
mov
add
leave
sbb
sbb
in
xor
or
pop
and
lret
jl
stos
mov
inc
push
lods
aas
hlt
add
data16
filds
inc
repnz
lret
add
add
jmp
mov
add
jae
push
mov
lahf
inc
jnp
insl
xor
dec
cmp
ljmp
push
test
lds
enter
in
xchg
mov
adc
jl
adc
movsl
test
testl
and
add
jge
mov
ret
mov
dec
push
jbe
xor
dec
scas
insb
xor
aad
pop
loope
loope
xchg
mov
pop
jno
idiv
adc
add
inc
inc
add
movsb
mov
sbb
pop
cs
lret
lret
ljmp
add
data16
subl
cmc
stc
lds
fs
outsb
mov
lods
mov
fstpl
mov
scas
aaa
xchg
sub
sbb
or
pop
dec
pusha
sub
mov
mov
xchg
inc
push
pop
sub
rcll
or
mov
mov
inc
std
or
dec
mov
scas
outsl
jg
add
and
push
rcll
or
dec
cwtl
lcall
inc
add
inc
jl
sub
popf
fdivrs
ds
pop
es
out
pop
pop
mov
and
movsl
popa
icebp
and
leave
pop
inc
stos
and
sbb
out
add
outsl
in
insb
pop
jno
jg
jecxz
jl
daa
xor
in
mov
imul
cli
int3
pop
jp
aaa
in
sbb
mov
repnz
xchg
fldcw
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
scas
into
xchg
js
les
adc
adc
adc
das
and
lcall
int
sti
sbb
mov
in
cmp
lods
mov
jno
inc
mov
sub
mov
cmc
cs
mov
stos
xchg
insl
enter
jae
dec
xchg
test
fldt
daa
pop
fs
pop
jae
xor
and
mov
add
add
xlat
data16
jle
aam
or
hlt
shll
dec
sbbb
lahf
mov
inc
movsl
shlb
insb
xchg
call
mov
push
je
dec
mov
pop
add
fstl
pop
clc
add
cmpl
fadd
pop
inc
mov
lock
xor
inc
sbb
je
lret
repnz
mov
in
pop
popa
adcl
scas
or
fwait
jle
jae
std
sub
int
lods
cmpsl
test
vrcpss
pop
adcl
sahf
mov
cmc
ds
adc
push
in
and
stos
pop
jecxz
mov
shlb
div
aaa
push
sub
jns
es
push
xor
pop
mov
lret
in
adc
sbb
mov
mov
xchg
ds
and
mov
out
or
mov
xor
sbb
into
int
mov
js
sbb
ds
outsl
mov
mov
repnz
dec
and
ret
outsl
lahf
push
push
mov
sbb
shl
jl
mov
jecxz
mov
jns
test
aam
outsl
fcoml
xchg
test
pop
ja
cmp
int
xchg
sbb
sti
outsl
sbb
sub
cmpb
cmp
test
xor
and
push
leave
sub
rcrb
adc
or
sub
cmpl
push
sub
mov
sbb
jg
iret
add
or
ficoml
enter
pop
loopne
xlat
ss
lret
repz
mov
push
dec
in
flds
dec
ljmp
repnz
inc
cld
ljmp
in
mov
gs
repz
hlt
in
dec
push
ss
aaa
cmpsb
and
out
cmp
testb
fstpl
enter
repz
imul
scas
sbb
adc
sub
cwtl
scas
push
mov
mov
push
push
xchg
mov
subl
scas
jnp
bound
cmp
inc
test
sti
mov
jmp
dec
mov
ret
cwtl
or
jp
loop
mov
test
in
ret
sti
int3
js
add
leave
push
inc
and
loope
into
pop
xlat
sub
push
sub
cmp
outsl
and
and
pop
adc
je
aas
nop
xor
testl
fsubl
sub
jecxz
fsubs
out
adc
and
sbb
lods
ret
inc
mov
jle
test
inc
pavgb
popa
sub
cltd
cmovo
mov
insl
push
inc
repz
dec
lcall
cmp
or
cmp
xor
xchg
cmp
fdivrl
mov
and
cld
jns
neg
into
aad
xor
inc
popa
adc
pushf
pushf
sbb
fstps
and
inc
dec
rcl
cmp
dec
stc
repz
inc
add
cmp
cmp
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
jmp
pop
lods
fwait
ret
int
adc
ja
add
outsl
shrl
je
jp
adc
dec
je
bound
pop
int
mov
sub
push
icebp
inc
dec
sbb
mov
inc
or
xor
fistl
js
push
rcll
sub
pop
dec
push
movb
bound
mov
jb
pusha
pop
lods
pop
shlb
pop
mov
or
in
leave
xchg
and
pop
inc
mov
jno
and
sbb
cmpsl
aam
push
push
fnsave
inc
stos
es
xor
repnz
into
push
inc
ficomps
xchg
cmpsb
test
xor
push
cwtl
fimuls
dec
lods
ljmp
rcll
dec
ljmp
xor
pop
ss
rclb
push
sti
mov
cmpl
push
lcall
icebp
xor
pop
daa
fcom
cs
fnstcw
inc
out
clc
push
fcmovnb
or
lds
xchg
push
fldl
jns
jne
andl
push
out
ss
dec
dec
mov
cld
out
and
in
dec
mov
rcrb
bsr
mov
xor
pop
sub
je
or
jmp
aam
push
repz
rcll
cmpsl
or
inc
sub
cmp
icebp
rolb
fstps
or
xor
rcll
adc
adc
pop
lcall
cmpsl
out
dec
dec
dec
das
jo
jp
xchg
ljmp
mov
aas
or
cmp
add
mov
out
and
addr16
fsubs
outsb
pop
mov
icebp
mov
and
mov
pusha
push
out
psubsw
aas
jbe
pop
test
cmpsb
mov
cmpsl
add
inc
cli
adc
jmp
and
inc
es
sub
mov
xor
addr16
cli
out
and
push
lcall
aaa
scas
jl
rorb
pusha
fcomp
xchg
mov
cmp
add
popf
mov
inc
cmp
dec
dec
lock
inc
ss
aas
push
inc
in
jae
xor
jmp
mov
mov
cmpsb
sub
and
repnz
test
xor
in
mov
and
pushf
and
push
xchg
jmp
push
cmc
imull
movsl
jg
add
xor
add
dec
cmc
imul
cli
fmull
pop
dec
iret
fisubs
enter
xor
enter
mov
xchg
add
ljmp
movsl
cwtl
xchg
pop
shlb
gs
push
test
mov
dec
rol
mov
std
xchg
mov
sarl
lret
popa
xlat
mov
pop
jns,pt
push
xchg
push
imul
loope
lds
test
sub
xchg
mov
rorb
mov
xchg
outsb
mov
adc
cmp
call
test
cmpsb
call
xor
or
out
aam
cmp
xorps
mov
push
mov
cltd
inc
cltd
movsl
jmp
stos
xchg
xor
mov
pushf
fmul
dec
push
pop
and
mov
jp
aad
ja
jl
xchg
jne
xchg
lock
enter
mov
or
mov
hlt
int3
imulb
xchg
add
ljmp
dec
sahf
in
pop
cld
inc
call
xchg
orb
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
jg
mov
int
adc
sbb
lock
and
mov
cmpsb
not
xchg
pop
ret
into
mov
xchg
push
jle
sbb
dec
and
icebp
lret
nop
mov
fldl
lods
xor
sub
bound
test
lea
cs
notb
mov
cmp
sub
hlt
push
loopne
dec
scas
mov
int3
jg
dec
add
mov
cmc
push
sub
dec
mull
int3
cli
mov
cmpsl
lcall
mov
sub
jle
sbb
jle
push
cmp
testl
add
push
out
xor
add
jecxz
test
je
jns
in
inc
jp
sub
pop
xchg
xchg
ret
dec
add
mov
mov
sub
add
imul
mov
mov
add
push
dec
jae
shlb
insl
in
iret
and
add
jnp
inc
dec
bound
pop
sub
jns
cmp
or
dec
sbb
sbb
push
ss
ja
or
pop
fs
pop
xorl
cld
gs
xchg
pop
inc
xor
mov
or
adc
jp
in
mov
sbb
mov
lea
dec
ds
xor
pop
jp
xchg
mov
pop
or
and
and
fbstp
push
inc
mov
jge
mov
mov
xor
pop
mov
clc
xchg
pop
push
ss
std
int
sbb
dec
sbb
xor
inc
mov
push
gs
ret
outsl
push
in
inc
dec
movsl
ss
pop
add
sbb
sub
or
loopne
sahf
adc
push
mov
mov
mov
mov
movsb
cmpsl
mov
push
aas
push
out
bnd
cli
cld
jp
jle
cwtl
cmpsb
pop
jns
xor
sub
push
mov
not
nop
mov
add
testl
mov
outsb
popa
pop
push
adc
lea
cwtl
mov
sbb
fnstcw
sbb
xor
dec
repz
mov
and
addl
int3
or
cmpsb
mov
xlat
call
or
xor
stos
fwait
mov
xchg
mov
add
hlt
frstor
dec
lcall
jbe
xor
in
cmovb
inc
dec
cmp
mov
inc
std
sarb
push
dec
pop
pop
imul
fdivrs
sub
pop
iret
sahf
and
jo
sub
jae
cwtl
push
cli
mov
scas
push
imul
fisubrs
cmpsl
inc
das
insb
adc
sarb
aas
scas
leave
lahf
xchg
push
adcb
sarl
or
xlat
out
inc
fcoml
mov
pop
shlb
push
test
add
add
push
repnz
mov
inc
mov
out
js
aam
ret
lret
xor
jbe
das
push
push
mov
frstpm(287
dec
fcmovb
repz
fldl
mov
jmp
jp
pop
pop
mov
sub
push
sub
loope
lret
jmp
dec
bnd
cmp
xchg
mov
mov
imul
mov
jae
lea
mov
adc
scas
repnz
dec
out
dec
cmp
add
and
jno
pop
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
and
aam
pop
mov
adc
adc
adc
jne
loope
lret
adc
lahf
jno
popa
mov
xor
stos
cmp
cwtl
push
push
leave
sbbl
and
shr
xor
js
lds
rol
mov
xchg
pop
test
xchg
pop
add
add
into
data16
adc
aaa
jg
pop
and
aaa
imulb
xlat
sti
aad
out
jge
push
mov
dec
ret
popa
imul
loope
decb
mov
in
sbb
adc
mov
jecxz
dec
sti
leave
pop
inc
mov
aam
outsb
lret
std
stos
cwtl
mov
xchg
test
bound
push
imul
sbb
loopne
mov
icebp
test
mov
mov
xchg
or
imul
and
icebp
daa
jle
push
mov
and
add
dec
dec
sub
fcomps
or
push
mov
lods
or
dec
pop
mov
add
pop
jo
xchg
mov
xchg
int3
test
aad
loop
mov
cmp
jecxz
cli
flds
xchg
or
mov
lea
push
enter
lcall
sbb
mov
mov
adc
adc
shll
cmp
addb
sbb
xchg
addr16
hlt
in
xchg
jae
jg
ds
iret
dec
stos
dec
dec
pop
cld
call
mov
or
cmc
push
rol
inc
cwtl
inc
jmp
mov
shll
pusha
arpl
enter
lods
iret
ja
inc
inc
dec
in
out
mov
mov
js
mov
test
mov
imul
sub
cmpsl
adc
dec
out
dec
js
dec
mov
aad
aad
lcall
sbb
in
sbb
repnz
cwtl
inc
jae
rorb
inc
lods
cltd
pusha
xchg
mov
cmp
mov
sahf
push
dec
jbe
lods
daa
mov
pop
cwtl
rcrb
mov
hlt
sbb
insb
push
ret
mov
ljmp
daa
daa
jnp
mov
xor
cmp
outsb
int3
mov
outsb
insl
fidivrs
hlt
lds
adc
pusha
in
jbe
imul
imul
fldl
mov
jmp
xor
aad
test
outsl
or
lods
pop
bound
jmp
jbe
xchg
loope,pt
jnp
xchg
mov
adc
ss
dec
aam
mov
sarl
std
mov
mov
out
push
adc
add
cmc
cmp
jl
fbstp
sahf
jp
shlb
sub
add
or
push
xor
or
inc
mov
les
cltd
movntq
adc
push
jmp
loopne
leave
out
jae
mulb
loopne
xor
mov
adc
stos
mov
xchg
jle
or
out
cmc
fcoml
iret
mov
not
pop
pop
sarb
call
xor
mov
sbb
jnp
cltd
mov
inc
cmp
xor
aas
inc
ljmp
loop
lea
rcrl
aaa
loope
jns
sub
push
push
mov
addr16
and
test
jnp
push
stos
dec
lret
insl
sub
pop
xor
push
cmp
in
xchg
xchg
mov
test
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
fldenv
push
test
adc
adc
adc
push
repz
imul
add
movsb
test
lods
xor
int
dec
daa
dec
movl
and
mov
aam
and
stos
test
adc
nop
push
push
inc
stos
push
mov
cmp
or
les
push
cmpsl
push
inc
xor
dec
push
fisttps
paddsw
bound
inc
sbb
xchg
xchg
gs
sub
ret
aaa
test
inc
dec
outsb
in
jle
xchg
insb
pop
loop
push
popf
jge
sub
and
adc
mov
les
ror
sbb
iret
jg
sub
mov
and
inc
cwtl
add
pop
fadds
dec
popf
popf
enter
pushf
mov
jl
mov
int3
jmp
rorl
stos
cmc
loop
jg
jae
stc
pop
and
dec
pop
sbb
add
popa
sti
arpl
sub
sub
xorb
push
xor
call
and
ficoms
sbb
popa
sbb
in
sbb
push
xchg
popa
cltd
xorl
jmp
mov
fsubrs
cmp
je
neg
je
mov
repnz
jo
lahf
inc
dec
popf
add
pushf
enter
push
andl
mov
ljmp
cmp
or
gs
fisubl
push
pop
mov
std
mov
out
xor
jecxz
enter
fists
add
gs
shrl
lret
sub
das
stos
and
pop
inc
fdivrs
xor
bound
stc
push
mov
mov
cmpsl
stc
movsb
sti
mov
aaa
xlat
pop
fmull
mov
inc
or
cmpsl
scas
inc
mov
mov
leave
add
ja
mov
and
sbb
pop
add
and
sub
xorb
rcrl
or
rol
push
add
xchg
xor
jb
mov
int
pop
mov
pusha
bound
ds
pop
ret
and
les
adc
fildl
cmpsl
jecxz
or
ja
add
idivb
cmp
dec
popf
lcall
jne
pop
or
icebp
lret
pop
pusha
sub
out
mov
aaa
lcall
pop
popa
lret
int3
jo
sbb
fstp
repnz
mov
cli
inc
int3
mov
mov
mov
movsb
pop
mov
jl
and
sbb
cmp
pop
pop
jle
out
jmp
std
pop
or
jno
sub
sbb
dec
fistpll
ds
xor
xor
xor
xchg
mov
into
adc
fwait
outsb
out
jbe
mov
arpl
push
test
push
sbb
push
jecxz
and
lods
popf
out
push
cmp
or
mov
pushf
je
inc
sbb
js
repnz
sub
adc
dec
clc
pusha
enter
add
and
lods
dec
sbb
sbb
gs
sbb
jns
sub
mov
scas
xchg
cli
pop
shl
shll
nop
lahf
jp
push
fcoms
or
pushf
mov
cwtl
jb
lahf
xlat
jge
out
fidivrs
sbb
imul
pusha
add
int3
jno
fdivs
stc
pop
sbb
cltd
setp
aad
shrb
push
test
cmp
push
dec
sbb
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
clc
inc
jle,pt
mov
adc
leave
pushf
xchg
out
and
ret
outsb
int
sub
mov
push
mov
iret
inc
lret
xor
inc
and
jp
pop
dec
pusha
sub
xchg
ljmpw
jnp
nop
into
mov
movsl
dec
sbb
xor
push
stc
jbe
cli
mov
ret
adc
jae
sar
mov
scas
pop
sarl
sbb
daa
stos
adc
xchg
dec
mov
and
push
xchg
sbb
push
fdivr
jl
imul
mov
push
xor
les
push
or
pushf
cmp
push
fs
or
addl
mov
jg
add
pop
pop
adc
cmpsl
aam
ljmp
pop
outsl
icebp
imul
mov
aam
push
jp
or
sbb
mov
jp
jbe
cltd
sbb
aaa
out
clc
jne
addl
mov
cli
in
mov
xchg
adc
hlt
and
in
mov
je
jge
inc
aaa
and
sub
cltd
out
ficoml
pop
fildll
and
mov
cmp
or
subb
pop
mov
sbb
sbb
cwtl
sahf
pop
sub
fs
nop
jle
jbe
sub
ret
test
outsl
xchg
xor
or
lods
pop
pusha
mov
dec
jmp
sbb
dec
push
ret
lds
inc
or
cmp
add
mov
jae
loopne
xchg
inc
cld
in
xchg
pop
sbb
mov
int3
push
fcoms
rcrb
aaa
push
pop
adc
cs
stos
insb
dec
mov
sbb
ret
lret
insb
shll
fbstp
cmpsb
sbb
iret
scas
popf
jne
mov
fistpl
cmpsb
xchg
push
popa
divl
and
pop
inc
cmp
xor
adc
sti
rclb
mov
fistpl
jb
leave
sub
dec
std
ss
aas
in
mov
jge
fs
jmp
shl
repz
lods
in
xchg
leave
cmpsl
mov
xor
mov
mov
das
or
dec
outsb
stc
imul
pop
lock
fnsave
mov
loopne
sar
stos
or
ficomps
mov
mov
dec
out
es
fisttpl
test
push
add
test
dec
sub
pop
insb
mov
aad
cmp
xor
lods
sub
push
movsb
mov
lret
sahf
fildl
or
fwait
dec
inc
gs
adc
inc
shld
mov
addr16
xchg
adc
dec
and
lock
inc
outsb
mov
mov
add
repnz
pop
cmp
mov
dec
popa
lret
daa
cmp
out
mov
jae
divb
jecxz
fwait
jno
or
loop
inc
inc
inc
jl
or
fidivrs
push
fucomp
sbb
shrl
push
hlt
das
dec
in
add
xchg
dec
fwait
int3
test
mov
pop
lret
sub
fists
aaa
cld
in
jle
in
je
push
push
lea
arpl
jnp
fnstsw
push
sub
fimuls
jmp
and
addr16
sub
lods
xor
lods
in
cs
popf
lock
push
pusha
push
stos
test
sbb
fimull
aad
ja
fmull
hlt
loop
xor
mov
cs
outsb
inc
mov
fisubl
int3
lahf
xor
mov
cmp
xchg
mov
dec
inc
pop
mov
ss
push
push
ljmp
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
add
jl
mov
sbb
adc
dec
adc
pop
cmp
jno
or
xor
fisubrl
rclb
xchg
adc
divl
dec
into
xor
popf
push
pop
fcoml
imul
fs
sti
push
out
and
outsb
jl
mov
push
cltd
add
push
push
daa
in
sbbb
cmc
jle
sbb
loope
insl
pop
dec
or
gs
js
flds
lea
mov
cmp
cwtl
ss
scas
jl
add
es
mov
adc
lahf
inc
mov
xchg
mov
sbb
insl
mov
in
jb
test
jg
cmp
scas
jmp
sub
push
xchg
inc
mov
ret
and
fbld
clc
mov
cmpsb
push
or
fsubp
fwait
lods
pop
je
out
stos
into
call
push
and
sbb
inc
adc
jbe
icebp
cmp
jp
jmp
mov
sbb
and
scas
mov
out
cmp
fisubl
fbld
cmpsl
sbb
inc
aad
popa
dec
xor
outsl
mov
inc
andl
cmp
sub
lods
in
scas
orb
xor
lods
inc
and
dec
push
dec
adc
mov
cmp
mov
ret
ret
xchg
mov
mov
ja
xlat
loope
pop
jg
jge
arpl
je
js
mov
loop
mov
xor
sbbl
mov
xorl
adc
sti
cld
movsl
push
inc
aas
sub
push
arpl
int
aaa
scas
push
dec
pusha
aam
lret
jo
push
clc
mov
adc
add
notl
jge
jg
xchg
inc
cmp
mov
fs
pusha
xor
ljmp
inc
push
dec
pop
fstpl
incl
sbb
cmc
roll
fildl
rorl
xchg
cmc
outsb
inc
inc
jae
in
mov
mov
lock
add
jo
inc
mov
out
icebp
push
and
push
std
cmp
negl
pop
or
adc
adc
mov
repz
xor
nop
adc
test
sbb
mov
insl
mov
jne
mov
or
stos
lret
daa
jne
or
stos
mov
xlat
mov
jmp
jge
aad
lcall
int3
lods
mov
jns
cli
fdiv
lcall
lcall
mov
rorl
icebp
mov
xchg
push
cli
lea
adc
sti
cmp
push
dec
dec
mov
aam
push
test
stc
and
scas
outsb
jg
imulb
mov
add
dec
fwait
shlb
push
outsl
push
pop
lods
mov
xor
shrb
lods
mov
movsb
sti
movsl
add
test
cmpsl
in
mov
lock
sub
scas
imull
leave
xchg
subb
jg
xchg
pop
jbe
or
in
rcrl
shrb
nop
xchg
imul
shll
cmpsl
push
dec
jmp
adc
dec
aas
imul
imul
mov
cmpsl
mov
mov
or
notl
repz
mov
test
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
and
mov
pop
sbb
sahf
inc
and
lcall
push
dec
pop
nop
mov
mov
mulb
push
inc
jmp
cmp
push
das
xor
mov
jbe
stos
leave
fsubrs
xchg
pusha
fwait
popf
pop
insb
cmp
fcmovb
sahf
loopne
rorl
enter
sbb
je
out
aaa
add
or
repz
add
aaa
or
push
jns
fldt
inc
jo
dec
fs
sub
add
push
call
push
sbb
jae
xchg
xchg
and
dec
std
mov
scas
or
leave
xchg
fnsetpm(287
inc
popa
sub
int
dec
dec
es
sub
pop
pop
mov
add
je
ficompl
inc
push
inc
jno
sub
xlat
stos
jp
test
lcall
cmp
xor
sbb
fs
cmp
test
ret
jl
push
jno
out
daa
mull
and
outsb
or
xor
leave
inc
add
push
mov
pop
in
arpl
es
inc
push
sahf
xchg
ljmp
fwait
push
add
int
pushf
les
ret
mov
lds
stc
dec
aam
push
add
mov
out
out
mov
mov
cli
mov
cltd
ds
inc
daa
pop
scas
pop
inc
shlb
lods
mov
or
popf
xlat
in
cmpsb
adc
jae
xor
inc
inc
out
lret
cld
mov
ljmp
pop
xor
lock
or
jno
adc
fdivl
or
stos
and
mov
xchg
ljmp
xor
push
xor
push
mov
jecxz
daa
push
push
repz
pop
stos
xchg
lcall
adc
shlb
aaa
ljmp
lcall
fdivrl
loop
push
add
mov
pop
test
inc
div
nop
in
mov
push
push
cli
xlat
inc
in
push
enter
sub
std
loop
jg,pt
idivb
aaa
dec
rcr
jge
roll
subb
cmp
adc
sub
pop
and
push
sub
nop
xchg
jle
in
and
cmpsw
inc
add
mov
push
cli
adc
sub
xchg
cmp
addb
add
repnz
fnstenv
and
jle
xor
outsl
cmovbe
jp
ja
es
and
dec
ljmp
fidivs
mov
out
lods
dec
outsl
mov
and
addr16
mov
clc
outsb
lahf
es
aaa
sub
push
mov
std
sahf
sbb
xchg
mov
shrl
fdivl
pop
scas
sub
dec
cmc
cmpsb
dec
loope
pop
sahf
inc
fs
in
inc
pop
mov
mov
cmpsl
push
cmp
sbb
adc
jb
data16
aad
mov
push
sbb
pop
pusha
sub
loopne
jo
inc
test
xor
out
inc
movsb
sub
popa
fisttpl
mov
sub
testl
pop
xor
adc
cli
xor
dec
outsl
jge
scas
pop
push
cli
sbb
fbstp
sbb
lea
imul
jmp
stos
pop
pop
mov
js
push
xor
imul
ds
dec
mov
dec
mov
nop
mov
xor
xchg
cld
or
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
push
lcall
adc
and
das
cmp
push
daa
movsb
inc
pop
pop
mov
cli
inc
fstpt
mov
mov
stos
inc
dec
mov
fnsave
fwait
cmp
pop
mov
cmp
add
push
adc
insl
xlat
sahf
or
ds
in
out
repz
shl
pop
inc
mov
jl
popf
dec
aam
les
bound
cmp
cmp
test
das
push
aad
mov
outsb
push
mov
jno
out
push
and
scas
imul
int3
scas
cltd
lahf
xchg
pushf
cltd
xlat
sbb
push
or
push
movsb
loopne
movsb
mov
outsl
push
jb
inc
std
inc
lahf
dec
loope
xchg
jnp
xor
lret
adc
sub
fs
mov
sbb
mov
mov
cmp
mov
lock
fs
in
shl
scas
test
jno
nop
insb
cmc
std
inc
shlb
testb
pop
nop
scas
rcrl
mov
mov
dec
dec
xor
xchg
scas
lahf
ret
dec
push
xor
dec
sbb
fiaddl
mov
inc
outsb
out
ret
mov
hlt
imul
or
mov
into
sub
dec
push
notl
sbb
xlat
cmp
or
fbstp
mov
in
popa
imul
or
pop
jge
push
in
cwtl
filds
inc
dec
or
cmp
out
xchg
imul
pop
push
adc
mov
out
arpl
aam
cltd
bound
cmc
xchg
mov
jns
ljmp
xchg
or
fcoml
sar
lods
jnp
xor
int3
inc
mov
mov
mov
movsb
jnp
cmp
cs
pop
mov
cmp
lcall
sub
ja
icebp
push
fistpl
sbb
lea
mov
cli
mov
sbb
lahf
pop
in
jae
jmp
mov
enter
imul
ret
dec
es
xor
mov
aam
jno
sub
push
shrl
stc
cmp
aaa
out
jg
loop
dec
test
push
mov
imul
out
pop
cld
dec
add
into
ficomps
mov
jnp
mov
mov
test
enter
pop
jge
sarl
pop
xor
mov
and
cmpsl
jo
and
scas
jbe
dec
fdivs
pop
imul
inc
imul
pop
aam
fs
sub
inc
push
and
mov
cmpsl
push
out
push
insb
lcall
lret
ljmp
sbb
clc
aad
ja
inc
and
sub
cmp
add
jg
xchg
nop
movsl
lock
pop
cmp
jge
pop
imull
scas
test
inc
inc
lahf
jmp
push
adc
jmp
sahf
fildl
lret
mov
sbb
jae
cltd
dec
jmp
lock
mov
scas
movsb
sbb
popa
xlat
flds
out
jl
aaa
jns
loope
pop
aad
cmp
push
push
cltd
xchg
xchg
rclb
cmp
xchg
out
cltd
mov
lds
or
fnsave
and
mov
andl
imul
or
push
sbb
mov
cs
nop
je
sbb
push
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
ficomps
xor
dec
test
adc
adc
adc
dec
stos
sbb
mov
jb
cmp
stc
and
scas
sub
pop
outsb
adc
test
inc
lds
cmpsb
fcomps
in
mov
out
mov
mov
cltd
cmp
xchg
sub
mov
and
leave
test
dec
push
lds
lcall
pop
icebp
mov
and
mov
fsubrl
jmp
cld
cmc
push
dec
mov
mov
xlat
mov
in
adc
or
mov
xor
or
movsb
jmp
iret
pop
cmc
sub
xchg
insb
adc
out
popa
imul
pusha
mov
push
xor
xor
or
xor
or
sub
cmc
inc
and
sub
pushf
test
scas
xchg
add
daa
jns
jno
inc
and
add
xorl
xlat
out
mov
pop
loopne
jbe
sbbb
pop
fldenv
cmp
test
dec
pop
or
cmpsb
mov
pusha
push
sahf
jp
in
loopne
inc
lods
shlb
push
out
sub
mov
jns
push
imul
and
jne
out
call
sahf
icebp
leave
mov
div
das
pop
insl
add
mov
cs
jp
mov
push
loopne
lahf
stos
loopne
pop
mov
stos
rcl
sbb
stc
movsb
shll
imul
ss
push
or
dec
dec
push
imul
out
popw
sub
push
and
jmp
xor
iret
and
je
lcall
cmpsb
clc
es
mov
push
sbb
out
scas
es
ja
xchg
das
inc
cmp
pop
cld
xchg
pop
xchg
test
aam
stos
adc
imul
in
pop
dec
insl
pop
add
mov
add
scas
jmp
in
mov
xchg
daa
out
sub
subl
addr16
xchg
sahf
mov
jnp
sub
mov
in
dec
decb
push
push
lock
pushl
mov
dec
aaa
notb
mov
or
enter
adc
sbb
cmpsb
inc
and
xchg
and
in
cmpsl
or
sbb
dec
cmpsl
mov
push
movsb
mov
or
cmc
push
sbb
dec
pop
pop
ljmp
or
fildl
or
ja
push
xlat
lea
rcll
rcll
or
in
adcl
insb
nop
popf
push
ds
push
push
sub
mov
mov
mov
jbe
repnz
mov
push
in
shll
roll
pushf
mov
pop
aam
mov
je
in
add
mov
mov
cmpsb
cwtl
icebp
mov
adc
cmpsl
cmp
aad
fld
adc
mov
cmp
cmp
mov
popf
xorb
dec
push
in
fwait
cltd
repz
pop
iret
cltd
push
xlat
xchg
test
and
and
pop
and
fmuls
stos
inc
call
mov
hlt
inc
iret
mov
lods
mov
dec
decl
push
clc
and
add
test
int3
mov
cmp
mov
addb
xchg
mov
jae
mull
xchg
mov
jge
jmp
out
dec
popf
imul
stc
dec
pop
repnz
mov
add
push
lret
push
lcall
popa
add
add
cli
gs
pop
add
xchg
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
data16
idivl
jl
adc
adc
adc
lret
pop
adc
lea
sbb
cs
and
popf
xchg
xchg
push
or
inc
sahf
hlt
and
jge
push
mov
xchg
jp
mov
loop
sub
lret
shll
scas
int3
out
mov
push
ret
sahf
or
cmp
mov
cs
sub
sub
jo
insl
xor
stc
test
pop
es
hlt
icebp
pusha
in
ds
pop
int3
movsl
imul
aas
pop
jecxz
sahf
fidivrl
xchg
lret
daa
sbbl
les
mov
lcall
gs
fdiv
sub
push
mov
xchg
pop
filds
fstps
sub
jnp
iret
mov
and
insb
push
xor
mov
sub
inc
add
add
jnp
push
adc
dec
arpl
xor
push
cmp
jno
cmpsl
stos
loope
movsl
mov
and
loop
inc
sbb
iret
jg
sub
sarl
test
out
aam
cli
lahf
aad
movb
sub
add
sbb
leave
inc
and
dec
outsb
xor
shrl
iret
cltd
mov
jmp
push
xor
aad
jbe
jno
sub
sbb
xchg
adc
cli
xchg
test
push
dec
aaa
sbb
fistpl
sbb
das
xchg
in
sub
jbe
push
imul
es
dec
push
pop
mov
or
je
gs
fildll
mov
int3
pop
shrb
stc
sbb
inc
mov
xorb
shlb
xchg
mov
xor
mov
mov
cmpsl
adc
push
sbb
jmp
adc
popa
fxch
das
xor
and
rcrl
enter
out
mov
jno
jnp
jbe
js
lds
scas
xchg
roll
mov
addr16
mov
ret
sbb
jge
mov
roll
data16
cmp
test
xchg
clc
jbe
mov
cltd
ret
hlt
dec
adc
popf
xorl
call
jg
push
jl
xor
pop
dec
or
pusha
cmpsb
repz
test
push
sub
mov
push
hlt
push
cmp
and
push
test
cltd
call
daa
in
mov
dec
sub
xchg
and
pushf
jb
in
imul
mov
or
push
shrb
lods
enter
outsl
or
and
lcall
cs
ret
ds
pop
xchg
or
js
inc
stos
mov
aad
call
adc
in
loopne
in
repnz
repz
lret
ja
out
arpl
in
or
lock
or
mov
les
push
or
sub
mov
hlt
push
pop
addr16
adc
popl
into
mov
or
pop
jecxz
fsubrl
lock
out
mov
jmp
cmp
lcall
add
jo
cwtl
adc
add
mov
sbb
mov
mov
mov
dec
addr16
rorb
xchg
sub
js
pushf
mov
mov
jns
push
jne
add
test
lahf
outsl
add
lods
adc
scas
jo
iret
ljmp
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
lahf
or
mov
int
adc
sub
pop
loop
xchg
ret
ret
fsts
outsb
mov
repnz
in
leave
sbb
orb
mov
pop
and
sbb
add
fnstsw
lods
pop
dec
xchg
jb
cltd
jne
test
push
mov
fdivrs
pusha
xor
sti
imul
movsl
clc
pop
jne
dec
dec
or
adc
sbb
jne
loopne
decl
mov
mov
jmp
mov
jl
aad
clc
cmc
mov
jmp
adc
hlt
mov
sub
je
out
sub
jecxz
inc
or
fldl
inc
rcr
mov
addr16
das
mov
sbb
rcrb
mov
inc
leave
nop
push
xor
test
cwtl
inc
insb
and
add
inc
mov
enter
loope
idiv
stc
leave
rcrl
dec
inc
sbb
mov
cli
cmp
fnstsw
cs
adc
sub
sub
pusha
fsubs
lahf
cmp
sub
pop
jb
add
xchg
mov
fidivrs
mov
cmp
repz
jne
das
js
lret
testl
lret
dec
xchg
or
xor
pushf
mov
sti
or
mov
dec
clc
ret
cwtl
or
sub
enter
cwtl
mov
cmp
jmp
repz
xor
jne
add
mov
ja
shrl
adc
and
push
ss
push
outsb
xor
or
sbb
xorb
inc
fwait
sub
popf
xor
lret
cmpsl
xchg
sbb
inc
fnstsw
or
movsb
es
icebp
das
test
and
loope
outsl
jmp
lods
add
xchg
mov
dec
lahf
es
sub
sub
push
cmp
test
outsl
jecxz
xchg
bound
push
sbb
adc
dec
push
push
add
and
dec
lcall
ret
call
nop
dec
jae
lods
mov
xchg
movsb
leave
pop
add
or
xchg
sub
leave
and
add
lea
sti
add
fiaddl
and
nop
fwait
shrb
call
xor
shl
nop
jnp
and
add
mov
xchg
in
or
pushf
sbb
adc
enter
cmp
loope
rolb
mov
adc
stos
inc
mov
pop
xor
xlat
addr16
push
lea
ljmp
inc
jge
sub
mov
lods
jl
mov
sbb
das
adc
sub
cmp
pusha
push
iret
mov
mov
sbb
mov
mov
out
adc
fstps
je
jecxz
add
fwait
mulb
or
xor
xchg
dec
mov
jo
sbb
fcoml
negl
xor
add
xor
leave
cmp
cld
sub
rcll
sbb
add
mov
jb
or
xor
cld
pop
movsb
inc
dec
test
mov
cli
inc
daa
pop
mov
adcl
shrl
xchg
movsl
int
imul
loop
iret
push
sbb
jne,pn
inc
fisttpl
jle
sub
xor
dec
cli
xchg
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
fnstcw
adc
int
adc
push
aam
das
fmuls
sbb
iret
and
and
outsl
mov
rcll
cmc
lock
scas
add
sub
sub
cs
clc
ret
sarb
pop
jecxz
adc
xchg
xor
jno
in
mov
push
push
mov
iret
int
push
lahf
fnstsw
sahf
mov
push
stos
mov
push
in
dec
jge
mov
xor
movsb
mov
xchg
add
sbbb
sub
cwtl
dec
in
or
sub
lcall
dec
xchg
loop
in
test
insl
jle
push
xor
xorps
filds
push
mov
xchg
lahf
mov
icebp
js
adc
fimull
fcmovne
addr16
call
cmp
or
test
mov
std
inc
das
push
xor
pop
cli
cmp
add
mov
cmp
aad
test
sub
push
out
dec
mov
pusha
out
dec
push
xchg
mov
iret
mov
jmp
test
ja,pt
mov
xchg
call
aas
jp
xchg
les
iret
mov
dec
stc
mov
enter
stc
push
xor
lret
int3
call
sub
adc
idivl
dec
in
push
and
mov
sar
cld
popf
je
xchg
stos
lods
sbb
jno
imul
push
dec
push
bound
lods
adc
sbbl
ljmp
xchg
rolb
cli
sar
pushf
cmc
scas
fs
cmp
out
jne
and
cmp
xor
jb
jecxz
ja
add
out
lret
sbb
jno
aas
adc
mov
xchg
mov
pop
gs
dec
or
adc
mov
xchg
add
divb
push
scas
loop
call
pop
ud0
stos
jb
test
pusha
test
sbb
call
popl
add
cmp
adcl
les
push
bnd
sbb
mov
add
fcomps
aad
push
and
cmc
fimuls
jne
jl
iret
jg
out
ret
lods
add
cmp
shll
xor
aam
sti
xor
rolb
and
in
xor
int
sub
lds
std
pop
inc
jecxz
add
imul
push
movsb
inc
mov
xlat
les
test
or
jg
aad
push
je
hlt
aaa
imul
jmp
or
pop
add
cmc
stos
sub
mov
andl
insl
adcb
xor
rolb
outsb
loopne
dec
clc
or
test
sub
xchg
push
xchg
insb
add
jge
pusha
faddp
aam
sbb
or
cmp
loope
ljmp
cmpsl
inc
dec
mov
popa
fstps
and
aaa
push
xchg
xor
add
sbb
call
mov
ds
lods
or
sbb
jno
add
lahf
sar
sti
in
xchg
and
adc
ds
sbb
sub
movsb
mov
fsubrs
adc
repnz
pop
out
sub
mov
daa
adc
movsl
int3
xor
in
das
jecxz
xor
jnp
in
xchg
xchg
cmp
jbe
xor
je
call
add
fidivs
jbe
outsb
xor
outsl
cmp
or
faddp
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
fmull
adc
int
adc
cmp
xor
out
sub
pop
dec
pusha
aad
loopne
add
or
into
test
shll
push
pop
inc
inc
stos
mov
mov
jmp
or
add
xor
mov
movsl
xor
stc
dec
fs
xor
jbe
or
mov
xor
cmc
rorb
mov
xor
fmul
into
jae
imull
inc
add
cmc
fsubrl
js
ret
jecxz
add
jo
pop
pop
in
stc
xchg
ds
mov
aam
cs
neg
push
add
adc
inc
leave
inc
push
out
pop
mov
xor
adc
or
jbe
sub
mov
pop
lret
int
jle
sbb
jg
dec
mov
dec
cmp
push
fsub
pop
out
push
jge
daa
dec
xor
repnz
imul
fwait
mov
push
mov
cld
mov
out
fidivrs
lahf
sub
das
cmovbe
dec
push
and
add
fs
dec
fs
adc
xchg
adc
std
icebp
ret
cmp
std
das
rolb
clc
frstor
xlat
dec
cmpsl
out
lret
sbb
cmp
jecxz
or
dec
sbb
dec
nop
mov
push
cmpsl
push
mov
clc
xor
adc
or
sub
mov
add
test
pop
leave
xor
adc
or
movsl
adc
jp
aam
cs
sar
pop
xchg
dec
mov
std
pop
shlb
and
lods
push
adc
fstps
mov
out
jbe
mov
stc
cmp
mov
hlt
push
test
dec
insb
pop
mov
cmp
pop
cmp
mov
jbe
insl
int
xchg
insl
int3
jnp
xchg
dec
mov
pop
jbe
jns
repnz
jae
mov
lds
repz
mov
enter
popf
insb
xor
cmpsl
mov
pop
fdivr
adc
and
push
jne
and
pop
int3
add
dec
dec
push
fidivrs
or
jns
jl
std
mov
in
xchg
xchg
xchg
push
test
out
and
aaa
sahf
push
scas
and
lds
rorl
mov
push
cli
sahf
filds
iret
faddp
fisubs
inc
das
jae
jo
mov
fadds
je
cmp
cli
xorb
mov
shrl
jl
cld
push
lds
ljmp
add
test
scas
inc
sub
fmull
sti
push
cwtl
push
pop
pop
cli
lahf
add
and
out
jb
or
mov
sub
hlt
mov
ja
mov
jecxz
pop
mov
scas
cmpsl
xor
jp
stc
jnp
xchg
sarb
loope
xchg
popa
outsl
dec
push
cmp
jg
icebp
in
je
stos
push
andl
mov
test
clc
sub
fwait
dec
push
hlt
adc
cld
rcl
dec
clc
jnp
adc
jae
and
pushf
bound
outsl
icebp
dec
nop
mov
aas
pop
pop
adc
push
jns,pn
jb
xchg
adc
scas
fisttpll
sbb
dec
push
jl
rcrb
ljmp
fmull
daa
mov
add
lods
xor
cmp
pusha
xchg
dec
jp
ljmp
mov
repz
push
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
bound
adc
adc
mov
inc
lret
fadd
add
mov
xor
lds
aas
push
sub
fs
mov
fs
fdivrs
push
data16
xchg
loopne
jno
test
cmp
insl
xor
decl
pop
push
mov
mov
repz
cmp
cld
iret
int3
sbb
push
nop
push
or
aad
shrl
jp
and
ds
push
jns
mov
cmp
sbb
cmp
xor
mov
mov
aam
test
pop
jle
jl
ds
inc
inc
sub
andl
cli
imul
sub
cld
stos
clc
mov
mov
and
push
movsb
pop
mov
cmp
and
xchg
pushf
mov
or
repnz
pushf
ret
mov
fs
jbe
adc
loop
popa
insl
sbb
pop
push
lret
xchg
adc
popf
popf
into
aam
cmc
int3
outsb
jp
pop
cli
loop
call
add
lods
adc
lcall
mov
arpl
addl
or
jbe
cs
fdivrl
cmc
jp
scas
into
inc
lret
outsl
lods
jo
push
and
jo
and
add
lret
movsb
mov
sbb
mov
test
dec
mov
in
ss
bound
aam
inc
insb
inc
mov
stos
jmp
popa
xchg
jge
jnp
cmpsl
add
js
inc
xor
cmpsb
mov
adc
int3
es
popa
out
and
cwtl
inc
inc
and
pop
fimull
aaa
dec
mov
sub
add
mov
outsl
jp
push
clc
mov
sbb
mov
or
mov
repz
lods
in
inc
out
adc
iret
jle
popf
xchg
xor
push
add
ret
faddl
sbb
gs
and
xchg
adc
hlt
lret
xor
mov
mov
repz
lods
cmp
adc
je
pop
loope
test
stos
pushl
iret
mov
scas
ret
pop
ret
and
mov
rcll
mov
jnp
pop
lahf
xlat
or
mov
std
mov
fdivr
mov
int
movsl
jle
sbb
xor
repnz
rclb
xchg
xchg
mov
cwtl
cmp
jne
test
xor
into
in
xchg
dec
mov
inc
fiadds
mov
push
xchg
jmp
jb
adc
xchg
mov
sbb
je
sbb
pop
scas
call
lock
orb
adc
lock
adc
stos
mov
in
mov
roll
loop
adc
or
cmpsb
ja
test
jno
inc
aad
fcompl
and
loop
dec
cld
lahf
jl
iret
adc
inc
aad
push
sahf
clc
leave
inc
jp
imul
repz
cltd
sub
sti
lods
adc
jno
mov
inc
xor
dec
out
stc
mov
fistpll
jb
xchg
test
in
cmp
push
push
hlt
fs
mov
jle
pop
ja
and
test
xlat
dec
test
clc
add
cmp
mov
pop
bound
mov
mov
xchg
xlat
int
jne
and
aad
shl
jge
in
mov
aaa
icebp
stos
das
mov
lea
loopne
xchg
inc
pushf
stos
fs
les
pop
jno
lock
dec
xchg
xor
sbb
cli
int
js
sub
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
xor
pop
adc
xor
adc
pusha
movsl
xchg
loopne
or
fdivrs
movsl
pop
or
mov
pop
add
outsl
push
mov
or
cmp
je
cmpb
leave
jns
mov
push
mov
mov
sbb
sbb
les
out
inc
repnz
fwait
jbe
insl
sbb
push
xor
rcrb
adcb
xchg
mov
adc
inc
add
ss
cmp
sub
xchg
dec
fs
fisttps
adcl
push
in
lock
rolb
jge
insb
daa
in
movsb
lcall
xor
sbb
mov
shl
add
or
dec
gs
enter
loop,pt
cmp
stos
rcl
or
and
push
roll
xor
sub
sbb
out
sub
cs
into
out
jne
mov
aam
pop
das
push
aad
pop
lds
dec
push
mov
addl
mov
mov
mov
push
mov
ror
hlt
push
add
insl
push
testb
test
cmp
sub
cmp
xrstors
jmp
test
inc
rolb
jmp
cli
sub
rcl
pinsrw
in
sbb
xchg
mov
test
push
xchg
outsl
mov
sbb
add
movsl
mov
xchg
jb
hlt
inc
push
out
pop
push
push
outsl
sbb
sbb
adc
rol
jmp
daa
shr
xchg
mov
out
dec
and
sbb
popf
in
out
or
and
mov
sbb
jg
adc
xchg
xor
nop
pushf
shll
xchg
mov
mov
and
nop
dec
mov
or
mov
xchg
mov
sbb
in
shl
xorb
enter
sbb
or
stos
stc
add
fcompl
mov
pusha
cli
stc
jo
cmp
or
loop
stos
push
inc
sbb
stos
clc
adc
out
adc
data16
lock
testb
dec
jge
in
mov
pop
lret
aam
push
sti
lock
pop
fs
loop
js
push
xchg
aaa
mov
dec
sub
mov
adc
jo,pn
das
pop
mov
shrb
into
jg
stos
inc
cli
jo
je
sbb
mov
pop
lods
mov
nop
loopne
or
jnp
ret
inc
inc
mov
push
push
idivl
or
adc
xchg
adcl
adc
pop
mov
sbb
inc
pop
aam
sub
faddp
mov
push
repnz
xor
dec
addr16
in
test
sahf
sbb
xchg
fwait
int3
push
nop
and
scas
js
and
mov
inc
mov
dec
and
bound
cmp
notb
aaa
mov
push
mov
lea
inc
jno
in
xlat
shrb
inc
xchg
xchg
daa
outsl
addl
cmc
lahf
mov
and
test
push
ficoml
mov
inc
movsl
ja
cmp
setl
in
xlat
int
dec
push
popf
mov
std
fstps
dec
imul
add
push
push
dec
push
inc
mov
and
xor
sbb
sub
mov
pop
sbb
mov
sahf
fldl
adc
mov
cmpsb
sahf
sub
rcll
loope
dec
lahf
notb
mov
cli
adc
xchg
xor
push
lea
jbe
fwait
mov
or
and
lret
andl
les
mov
dec
pop
lcall
add
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
jle
mov
xor
adc
ffreep
pop
loop
jg
pushf
leave
data16
or
mov
mov
arpl
mov
sbb
fs
in
les
leave
adc
push
jmp
push
ds
cmp
mov
hlt
fwait
mov
sub
inc
push
pop
cmpsb
xlat
pop
clc
xchg
xchg
imull
ficoml
scas
rcll
adc
jecxz
push
mov
inc
adc
pop
bnd
inc
out
std
sub
int3
leave
and
cmp
xchg
int3
loopne
dec
inc
inc
jne
movsb
hlt
aas
jae
sbb
push
inc
ds
in
xchg
icebp
mov
mov
pop
imul
mov
lock
push
push
dec
in
rclb
push
and
test
rcrb
scas
mov
pop
jg
lahf
mov
inc
fnstsw
loope
insl
cmp
in
test
lea
mov
add
adc
cmp
xchg
sbb
clc
testl
aaa
pop
call
jbe
xor
cmp
aas
xchg
andb
loopne
jno
sbbl
lcall
leave
std
pop
jmp
in
mov
mov
sti
in
icebp
mov
lret
sbb
adc
push
sbb
test
bound
jmp
sub
xchg
xchg
cmp
jo
add
xor
or
mov
xor
jle
iret
inc
push
and
icebp
jnp
xlat
and
mov
push
cli
cmpsl
xchg
sub
addl
jb
ds
cmovle
fstl
lds
mov
push
fs
lret
inc
inc
ss
es
addr16
sti
push
add
or
pop
sbbb
arpl
cmp
shll
fisubs
pop
cli
pmuludq
adc
in
movsb
test
inc
push
jmp
adc
lds
movsl
fimuls
bound
mov
pop
xlat
jns
ror
cmc
xchg
in
loop
lahf
icebp
mov
je
cmp
jno
push
and
repz
and
aad
pusha
inc
addr16
and
mov
nop
jp
sbb
cmp
xor
mov
mov
lret
int
daa
pushf
test
lahf
pusha
pop
ss
mov
inc
mov
pop
push
lock
cmc
push
popf
push
mov
orl
sub
xor
bound
jbe
jb
mov
insl
ret
nop
sahf
sti
push
xchg
cli
mov
adc
cmp
ret
aas
jno
jo
mov
mov
into
xor
test
mov
sti
sbb
jae
popa
cmp
and
and
jp
js
idivl
cs
lret
in
cmp
mov
inc
pop
jp
adc
pop
nop
mov
add
mov
clc
outsb
enter
outsl
shll
mov
divl
add
pop
fldl
fldenv
xor
pop
sub
imul
and
loope,pt
stos
nop
out
popf
inc
adc
mov
sbb
mov
sbb
bound
or
movsb
cmp
fdivs
mov
mov
lods
add
out
inc
jg
stc
push
mov
mov
sub
xlat
pushf
imul
mov
fwait
and
mov
push
jb
mov
pop
fxch
fcmovb
je
das
sbb
dec
outsl
push
les
and
bound
out
cld
jge
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
stos
test
xor
adc
sbb
jno
pop
jle
ss
in
aas
mov
mov
jge
in
scas
insb
adc
mov
adc
pop
cmpsl
je
mov
jb
loop
fnstenv
jnp
fs
dec
xor
outsl
aad
insb
push
into
fst
mov
out
sbb
dec
ficoml
cmp
inc
jecxz
mov
or
jge
mov
sub
imul
mov
sub
dec
mov
scas
addr16
xor
sbb
loop
and
mov
push
in
jle
mov
adcl
fucomp
femms
mov
addb
div
sbb
dec
fcoms
in
mov
test
inc
aaa
in
add
rcll
mov
arpl
out
pop
mov
cwtl
xchg
int3
movsl
jbe
mov
je
xor
pop
mov
adc
sbb
fildll
call
mov
aaa
xor
lea
ljmp
jp
and
pop
out
cmpsl
inc
cmp
push
mov
test
bound
inc
jno
pushf
ret
fisttps
cmpb
fisubrl
test
out
add
push
xor
into
ljmp
dec
jg
fisubl
cmpsl
dec
mov
cmp
sysexit
mov
test
cld
mov
add
daa
xchg
inc
xor
inc
scas
push
pop
add
sbb
push
cltd
int3
mov
popf
dec
inc
add
fdivs
pop
iret
adc
push
lods
mov
in
scas
rorl
mov
jge
add
fsubs
pop
ret
push
jmp
jae
enter
ss
cmp
or
cmp
test
sbb
leave
mov
ja
jno
mov
sub
call
shlb
fs
je
nop
and
cmpsb
pop
loope
jle
xchg
sbb
jb
mov
push
jbe
in
aad
xchg
or
and
jecxz
leave
inc
fimull
in
call
stos
enter
xchg
xchg
in
and
fbstp
sarl
daa
inc
jnp
mov
push
dec
jmp
adc
jle
push
jb
dec
outsl
sbb
push
fnstcw
not
jne
pop
mov
je
jle
sbb
js
cli
in
outsl
push
cmp
lcall
lahf
out
fildl
dec
dec
scas
mov
repnz
or
add
or
scas
dec
lahf
cli
fidivs
jnp
icebp
aaa
movsl
sbb
adc
mov
sbbb
add
je
xchg
push
lret
in
in
jb
add
pop
pop
mov
and
lock
push
mov
scas
cmp
xchg
cmp
leave
aad
insl
jb
pop
lds
jno
inc
inc
and
movsb
mov
aad
cwtl
xchg
cli
add
xchg
out
sub
jne
popf
push
or
push
loope
scas
icebp
es
test
and
xchg
mov
in
fnstsw
sbb
js
fcmovb
dec
cltd
xchg
mov
xchg
mov
ret
in
aad
loop
mov
mov
push
imul
scas
and
sub
aaa
and
in
sub
jmp
aam
cmp
mov
sbb
push
cmp
jge
bswap
addl
lret
xchg
pop
xchg
or
pusha
std
paddsb
shlb
cmp
fimuls
dec
test
or
mov
int3
add
les
mulb
mov
jp
or
dec
call
push
divb
std
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
stos
pop
lock
mov
cmpsb
sub
jae
push
in
cmc
ficompl
fucom
addr16
test
xchg
testb
dec
stc
fnsave
bound
pop
arpl
iret
es
call
lds
mov
fimuls
fs
sbb
test
fwait
xor
jno
mov
mov
mov
mov
add
mov
test
jo
sub
xor
dec
push
movsl
jns
and
mov
aas
gs
aad
dec
rcrb
push
addl
jno
movb
or
ret
xor
test
sub
arpl
mov
cmp
subl
dec
sub
push
leave
pop
ljmp
pop
xchg
xlat
addr16
inc
std
inc
int3
xlat
and
mov
pop
pop
inc
das
loope
mov
fimull
sbb
cltd
rcrb
mov
test
mov
sarl
jbe
addr16
lea
push
mov
outsl
int
scas
adc
ds
xor
sti
movsb
loopne
or
insb
loope
sub
imul
pop
orl
add
cmp
les
xchg
jae
rcrl
pop
lret
dec
aaa
jl
pushf
and
push
dec
or
out
or
scas
scas
jo
lods
dec
lods
dec
in
xor
and
cmpsl
push
pop
sbb
popa
dec
mov
add
sbb
rclb
test
inc
cmp
pop
es
mov
popa
mov
icebp
inc
jle
inc
mov
pop
sbb
mov
cmpsl
or
or
leave
movl
mov
jge
cwtl
jbe
nop
adc
mov
dec
sti
sarb
out
mov
and
out
adc
bound
xor
jne
inc
mov
cmp
cmp
add
pop
inc
and
mov
mov
push
cmpsl
cmc
mov
pop
push
push
cltd
mov
stc
pop
push
cmpsl
mov
pop
pop
cli
mov
push
xchg
jo
mov
jge
mov
mov
nop
call
fiaddl
out
and
push
aas
add
xor
cbtw
sti
orb
stos
in
daa
pop
cmp
gs
add
push
lret
xlat
xor
sub
and
cmp
call
inc
pusha
xchg
adc
shr
movsl
ja
xchg
mov
adc
cld
enter
loope
loope
jmp
adc
stos
popf
mov
dec
and
cmp
push
fdiv
lds
out
mov
cld
xchg
push
dec
int3
inc
mov
inc
pop
ja
icebp
mov
cli
addr16
addr16
lods
push
adc
dec
adc
jmp
jb
ret
inc
sbb
mov
dec
leave
xor
addl
xlat
cmc
dec
mov
shlb
lret
addb
jae
and
add
push
jnp
loopne
jmp
and
inc
dec
mov
push
cld
or
push
js
cmp
inc
sbb
into
in
mov
stos
cld
add
sbb
push
out
add
jnp
jae
mov
sub
pop
and
ljmp
and
jae
xor
mov
je
adc
xchg
push
xchg
jmp
arpl
mov
loope
ss
pop
jbe
or
shlb
xor
rorb
movsb
mov
jle
mulb
jmp
push
in
pop
aam
mov
sarb
mov
cmp
xchg
xchg
add
dec
rcll
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
sbb
xor
adc
inc
jns
call
test
mov
push
das
loopne
adc
xor
fstl
pop
xor
add
push
aaa
push
mov
jle
gs
push
and
stc
imul
push
mov
stc
xor
xor
adc
js
or
out
shll
mov
out
les
mov
push
inc
test
pop
mov
int3
mov
adc
jo
jno
jmp
cs
fsubrs
lahf
idivb
jbe
dec
adc
fs
push
adc
cmp
sub
inc
adc
pop
and
push
cmp
aaa
jnp
sti
and
xchg
push
cltd
rcl
repnz
add
and
jb
addr16
aaa
pop
loop
lock
out
pop
mov
dec
jnp
push
repnz
xor
xor
dec
xchg
pushf
jbe
xchg
pop
ljmp
aad
cmp
in
sbb
sub
xchg
cmp
test
mov
mov
cld
outsb
fisubrl
imul
ja
mov
repz
stos
cmpsb
push
addr16
mov
in
push
lock
lret
sub
sbb
mov
fiadds
sbb
iret
mov
push
pop
adc
or
aad
mov
mov
or
inc
pusha
mov
jmp
cmpsl
xchg
sarl
test
sub
or
mov
mov
adc
jmp
loope
push
xchg
sub
mov
aaa
mov
data16
movsl
cmpb
scas
dec
jp
adc
nop
cmp
adc
ljmp
jp
into
hlt
inc
movsb
in
test
loopne
ret
mov
push
push
push
outsl
popa
sbb
mov
and
add
adc
jmp
popf
idivl
mov
fs
sbb
cld
stc
pop
mov
gs
stc
test
frstor
push
dec
xor
add
xrelease
jne
movsb
rcll
push
pop
xor
fiadds
inc
pop
sbb
jg
fiaddl
push
jb
or
jo
fistpl
dec
cmp
ret
dec
outsb
lods
jne
cs
inc
cmc
pusha
or
pop
inc
lea
cmc
xlat
or
lods
or
imul
mov
es
fsubl
sub
lret
pop
sub
sbb
inc
enter
scas
mov
mov
mov
push
push
jnp
loopne
jmp
popa
es
out
imul
push
gs
out
js
ret
xchg
jns
xchg
inc
mov
insl
xchg
xchg
mov
out
xchg
rolb
stc
fisttps
mov
xor
sub
movsl
jmp
sub
jb
or
and
loopne
mov
xchg
test
pop
dec
mov
test
cld
pusha
into
push
rorb
or
push
ljmp
subb
mov
or
loope
dec
jle
loop
add
mov
lret
pop
fstpt
les
pop
push
into
push
xchg
add
inc
cwtl
xorb
cli
into
pop
outsb
dec
cltd
add
imul
sub
cmpsl
mov
push
xchg
or
cmpsb
mov
dec
sti
sbb
bound
mov
pop
mov
add
cmp
add
aas
and
push
movsb
or
cmp
add
cmc
cmp
ds
cmp
leave
push
jecxz
int
repnz
xor
cltd
pop
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
shll
sbb
jl
pop
sbb
add
fisttps
or
sub
data16
mov
and
repz
es
mov
inc
scas
shr
add
jg
ret
hlt
cmpsl
js
mov
lcall
aas
xchg
xor
aam
call
das
insb
mov
dec
inc
loope
ss
imull
pop
adc
mov
push
fwait
jb
dec
inc
push
in
jo
pushf
pop
shlb
mov
jmp
call
sbb
out
pop
les
xchg
or
mov
and
and
daa
and
mov
cld
jns
dec
repz
xor
jl
jns
arpl
adc
push
test
or
scas
cmpl
push
repnz
push
test
mov
scas
enter
and
jno
adc
add
sti
xchg
andl
cltd
lret
fsubrp
and
arpl
sub
sbb
xchg
jbe
jecxz
test
jns
movsb
mov
adc
mov
popa
pop
sub
mov
jbe
dec
gs
xchg
ret
mov
dec
cltd
call
inc
outsb
and
outsb
iret
loope
test
iret
inc
in
stc
and
sbb
mov
adc
and
mov
in
test
add
and
mov
adc
mov
incl
add
mov
add
sub
sbb
sbb
or
jns
pop
dec
mov
cwtl
loop
xor
imul
hlt
fs
lods
xor
add
fstpl
cmp
pop
push
lcall
loop
test
and
movsb
sarb
pop
shlb
pop
push
jbe
test
fdivrl
fadds
push
cmpsb
mov
out
mov
ficoml
lret
or
or
in
fstl
adc
sahf
bound
loope
popa
and
push
dec
test
xchg
push
add
in
pop
nop
xor
add
pushaw
imul
jl
ss
hlt
push
aad
fidivrs
sahf
mov
nop
jae
test
sti
mov
add
or
cmp
mov
jecxz
loopne
fwait
mov
fsts
sbbb
sbb
int3
mov
and
dec
cmpsb
xor
addr16
jae
jmp
jo
push
lcall
pop
xchg
and
mov
xor
in
lods
mov
adc
outsl
dec
popf
orb
int3
mov
cmp
fnstenv
stos
ret
arpl
mov
push
subl
xor
push
std
in
div
cs
clc
pop
dec
dec
push
jno
add
and
pushl
pop
bound
mov
ja
adc
cmpl
mov
jne
sbb
aaa
dec
push
outsl
mov
inc
xlat
mov
ljmp
into
mov
xchg
lds
cmp
js
lahf
fmull
adc
dec
mov
in
fisttpl
xor
je
or
fmull
pop
adc
aam
xlat
mov
dec
daa
fistpll
mov
ljmp
mov
jo
push
test
adc
arpl
xchg
in
popa
add
dec
addr16
jmp
cmpsl
push
add
shl
mov
pop
and
cld
sbb
add
sbbl
inc
adc
jnp
mov
scas
aam
jg
xor
mov
inc
cmp
and
sarl
mov
inc
jno
lock
shrd
xor
jmp
mov
popa
lcall
cltd
movsb
js
sub
adc
adc
adc
push
scas
loop
mov
shrb
mov
dec
les
stos
lahf
shlb
mov
lds
jne
lret
adc
testl
add
or
add
mov
mov
subl
pop
push
hlt
rcr
cmpsb
andb
pop
pusha
sub
insl
xchg
pop
xor
jns
pop
push
pop
fstl
imul
sti
or
add
cld
call
and
and
mov
mov
shl
adc
aad
lods
adc
sbb
push
out
and
negl
clc
lds
into
pop
cmp
pop
and
out
xchg
loope
dec
dec
or
repz
xchg
cmp
lods
aas
jg
add
inc
cmp
xchg
cmc
iret
sub
push
int3
int3
js
shlb
push
daa
sbbb
stc
test
popf
cmpsb
mov
aaa
les
push
inc
pop
lahf
addl
call
pop
insl
push
imulb
lds
mov
inc
enter
mov
pop
inc
cmp
sbb
sub
sub
into
mov
dec
mov
in
fimull
lcall
push
cmc
add
xor
popf
out
inc
arpl
hlt
adcl
xor
mov
dec
pop
scas
gs
lods
movsb
dec
mov
stc
ficomps
out
arpl
or
hlt
and
insl
dec
push
jbe
push
xchg
sub
movsl
inc
dec
out
push
adc
fwait
mov
mov
xchg
lret
jnp
push
adc
xchg
pop
jnp
call
daa
rcl
add
xchg
aaa
adc
inc
inc
jmp
call
lret
shrl
and
jnp
pop
inc
inc
and
dec
addr16
push
mov
stc
iret
loop
adc
cmp
push
or
fwait
lcall
push
mov
int
cmp
mov
lcall
or
or
mov
cmpsb
lret
dec
inc
sbb
dec
scas
and
loopne
sbb
scas
mov
movl
adc
dec
pop
pop
adc
test
pop
xchg
push
xlat
cli
dec
lret
out
lea
aam
sbb
cmpsl
bnd
test
jle
add
cld
loopne
jne
fistpll
es
push
push
nop
dec
cmp
fisubrl
insl
negl
or
jmp
repnz
and
push
adc
jmp
notb
mov
sub
add
cmp
aam
fidivl
jae
add
xchg
lods
cmpsl
push
xor
and
push
cltd
imull
pop
push
mov
ja
lret
idivl
pop
in
mov
scas
out
xchg
outsb
shr
or
inc
xchg
andb
rcl
shrl
mov
adc
dec
andps
ljmp
enter
mov
es
jge
jb
jmp
dec
pop
js
push
out
cmp
add
and
jge
shr
dec
and
movsb
push
ja
and
xchg
push
test
xchg
imul
into
pop
into
or
rorb
pop
inc
in
pop
or
scas
xor
jp
fiaddl
pop
or
xor
sbb
subb
loope
fnstsw
clc
leave
lods
pop
jne
lds
mov
icebp
outsb
mov
and
pop
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
outsb
push
push
and
adc
movlps
loop
sbb
mov
add
dec
push
pop
fwait
loopne
call
cli
nop
add
cmc
loop
repz
ss
bound
mov
repnz
mov
xor
cld
cmp
and
sub
imul
scas
adc
mov
mov
jge
je
sahf
sbb
mov
jmp
sub
fidivl
or
mov
sbbl
hlt
test
es
popf
xchg
hlt
xchg
sub
xchg
mov
shl
and
mov
xchg
mov
call
out
mov
adc
dec
sarb
pop
push
in
cmp
bound
push
rolb
xor
out
or
cmpsl
ss
insb
cmp
dec
xlat
and
xor
xchg
fs
adc
je
jbe
fwait
and
imul
push
in
mov
add
shlb
in
add
jp
data16
xchg
mov
jno
lods
imul
push
add
xlat
fisubs
pop
dec
sub
push
jle
mov
pushf
sub
ret
imul
orb
or
push
lahf
add
out
test
xchg
pop
cmp
adc
bound
fdivrp
push
fcmovnb
imul
ss
mov
mov
xor
pop
jnp
jmp
addb
aad
sbb
ret
xchg
lock
inc
and
or
push
cs
inc
scas
hlt
mov
pop
pop
add
mov
and
or
int
rcl
adc
or
and
push
movsb
or
cs
movsl
xlat
js
add
outsl
xor
hlt
dec
in
and
push
sub
imul
fisttpl
rcrb
addr16
inc
xor
adc
jbe
cmpsl
dec
jne
pusha
mov
xor
jmp
add
jle
outsb
popa
rol
mov
push
jge
cld
int
ja
xor
mov
std
sbb
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
inc
mov
adc
movlps
mov
add
cmp
pop
or
push
popa
adc
adc
in
dec
jbe
call
fidivrl
xor
xchg
fcoml
dec
pop
mov
or
in
cmp
jmp
lret
inc
pop
xchg
push
les
lods
out
push
adc
inc
mov
filds
xchg
pop
outsl
sbb
dec
mov
mov
repz
clc
setae
or
adcl
jns
ss
sub
push
jl
lret
imul
jle
cmp
pop
xchg
cmp
or
js
add
dec
or
negb
fistpll
imul
lods
mov
es
cld
xor
test
lret
in
lock
pop
mov
repz
out
orl
sbb
jl
jle
and
leave
and
rcll
push
fcomps
cmpsb
xor
jge
int3
and
jmp
in
fs
pop
in
jp
or
mov
hlt
fmuls
cmp
sbb
shrl
and
mov
pop
stos
into
int
sub
jge
cmp
mov
ds
mov
xor
push
cmpsl
xor
cmp
adc
shlb
mov
popa
adc
sub
adc
insl
stos
push
sbb
inc
shlb
cltd
scas
cs
in
popf
pusha
iret
cs
fcmovnu
in
loopne
cwtl
movsb
in
out
mov
shll
jle
pop
mov
les
or
mov
dec
push
sub
out
sub
push
imul
nop
repnz
and
sub
sbb
and
iret
jb
dec
push
add
inc
pop
pop
fisttpll
in
mov
int3
xchg
jo
pop
test
fldenv
in
outsl
gs
scas
dec
cltd
xor
or
xor
jo
shlb
xchg
pop
mov
lea
push
cmp
cmp
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
mov
js
sbb
adc
movlps
adc
loope
fcomi
cmc
mov
mov
sbb
movsl
mov
mov
lock
cmp
mov
arpl
mov
dec
and
jmp
stos
in
mov
push
fwait
mov
mov
sbb
movsb
dec
jne
mov
add
idivl
mov
mov
jg
or
mov
jb
call
fstl
fisttpl
inc
xchg
lea
aas
mov
scas
sbb
sbb
and
inc
movsl
in
fisttps
rcll
mov
in
xchg
scas
pusha
pusha
add
call
jns
mov
and
push
sti
int3
xchg
jp
or
lods
xorl
dec
lahf
mov
ret
dec
xchg
jbe
jno
push
and
jmp
aad
fidivrl
shl
ss
into
pop
mov
fmuls
testb
push
int3
jmp
inc
cwtl
inc
add
jecxz
dec
mov
push
lea
mov
push
push
ret
xor
inc
or
xchg
sti
hlt
jg
fs
pop
in
fdivrp
hlt
hlt
pop
mov
inc
mov
xchg
or
dec
push
sbb
mov
jmp
xorb
sahf
pop
jecxz
ss
xorb
outsb
pop
xor
add
mov
sti
pushf
sti
sbb
scas
sub
pop
jl
outsl
cmp
jge
xchg
in
sahf
adc
icebp
and
jge
mov
and
push
xlat
or
and
popf
gs
cmc
sahf
or
push
pop
enter
dec
push
pop
ja
neg
mov
sbb
lock
scas
pop
jno
rcrl
bound
sub
jp
popa
jecxz
int3
loope
xchg
in
dec
ja
es
lock
roll
out
xchg
or
mov
pop
pop
and
xchg
mov
xor
aam
lea
fldl
icebp
imul
jmp
lahf
neg
xchg
jmp
and
jae
adc
cli
enter
pop
fmuls
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
shlb
adc
movlps
xchg
das
push
inc
jl
push
mov
xchg
fistl
jnp
pop
enter
sub
movsl
xlat
add
push
out
stos
loopne
in
mov
jmp
mov
mov
call
loop
xor
sbb
sbb
add
ja
insl
enter
out
stos
movsb
inc
xlat
push
pop
cmp
adc
inc
mov
inc
pusha
jo
inc
add
lock
mov
testb
cmpsl
mov
pushf
sahf
push
aad
pop
enter
popa
mov
xor
inc
adc
or
loopne
test
ljmp
push
sub
test
push
pop
or
push
cmp
jecxz
sbb
iret
inc
dec
aaa
test
clc
cmpsl
xor
push
xor
mov
test
xchg
jne
xchg
rcr
pop
enter
mov
fmulp
lds
xchg
fcomps
mov
cmp
pop
arpl
cmp
or
lahf
outsb
in
add
and
ljmp
es
adc
and
mov
xor
mov
dec
inc
add
imul
jecxz
add
rcpps
pop
movsl
movsl
xor
dec
lea
rcrb
in
inc
sub
lea
add
push
hlt
out
adc
sub
xchg
jne
jo
inc
rclb
inc
sahf
imul
dec
or
outsb
add
adc
xor
cs
xchg
insb
rorb
xchg
call
in
cmpsl
push
sub
test
jl
adc
sbb
aas
and
cs
mov
xlat
loope
fs
xchg
mov
out
imul
stc
xchg
adc
in
fildll
pushf
and
and
pop
in
loop
and
mov
mov
incb
xchg
or
push
fbld
test
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
pop
in
jle
adc
adc
movlps
cltd
or
jmp
stos
pop
cmp
mull
mov
divb
fcmovu
lods
cmp
xor
mov
cmc
and
push
outsb
cltd
mov
sbb
adc
xor
outsl
or
pop
add
rcr
sbb
pusha
mov
jns
rcrl
dec
xchg
outsl
int3
sbb
cld
push
in
xchg
lds
shl
push
pop
adc
jo
push
dec
lahf
mov
mov
mov
dec
mov
loop
mov
out
aaa
sbb
mov
sub
xor
cld
mov
jno
lds
test
mov
jno
xchg
sbb
dec
repnz
aad
mov
nop
gs
inc
push
into
dec
xlat
nop
int3
push
outsl
cmp
adc
push
push
mov
and
xor
popa
jae
and
fidivrs
int
pop
pop
xchg
and
notb
xchg
inc
xor
sub
pop
ja
cmp
push
dec
pop
or
repz
or
movl
shll
add
mov
clc
pop
mov
jl
aam
out
inc
data16
jp
adc
js
cltd
push
decl
jb
push
adc
xchg
xlat
pusha
or
adc
xchg
stos
fldt
cld
cli
hlt
mov
xor
sub
add
xor
push
and
sub
ret
jns
and
rorl
jne
test
mov
lret
xor
out
leave
xor
cs
inc
aas
adc
mov
xor
fucom
push
add
or
sahf
pop
loope
clc
cltd
mov
push
dec
sbb
jmp
subl
mov
push
js
dec
jb
dec
inc
loope
data16
insb
mov
cmpsl
mov
push
inc
adc
and
pop
mov
jb
cld
lods
pop
dec
aam
jmp
ret
hlt
hlt
or
mov
add
add
add
push
sbb
loope
jae
mov
mov
adc
fmull
adc
lret
jmp
outsb
push
sbb
in
jo
rclb
dec
inc
lds
xor
es
shrl
jl
dec
fucom
mov
shrl
gs
pop
dec
pop
das
lret
push
test
shrb
add
adc
and
stos
xor
dec
sub
cli
lock
fwait
cltd
sub
fistpl
lret
insb
adc
adc
xor
push
popf
mov
movsl
imul
xchg
inc
call
sub
xchg
or
je
cmp
dec
fidivrl
icebp
in
jbe
mov
or
repnz
std
sbb
insb
push
mov
and
pop
jmp
fsts
rcrl
mov
leave
movsb
in
lods
push
aaa
pop
cmp
nop
jg
sbb
out
scas
stos
and
sub
adc
push
xor
les
xchg
pop
mov
lahf
icebp
sbb
clc
or
in
fsubrs
inc
in
call
nop
push
sahf
mov
out
ror
fdivrs
in
aad
ret
iret
dec
dec
add
ret
mov
mov
mov
das
shlb
inc
std
mov
cmpsl
fnstsw
sub
mov
imulb
std
mov
aam
inc
dec
mov
pop
mov
xor
rcr
sub
aad
rclb
divl
fs
sbb
imul
leave
div
stos
mov
clc
fnstenv
jecxz
pop
push
add
push
cmp
jne
cmp
test
fidivrl
mov
loop
jbe
push
xor
sbb
cvtpi2ps
aas
jecxz
inc
push
sbb
pushf
jb
imul
add
call
les
stos
int3
dec
push
repz
call
xchg
outsb
lock
wbinvd
sub
out
pop
pusha
cmp
in
pop
xchg
notl
outsb
insb
adc
movsb
insl
lret
repnz
mov
movsb
push
rclb
cmc
fiaddl
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
cwtl
js
or
adc
movlps
and
loope
sti
jb
aam
push
cltd
ljmp
add
lods
add
out
mov
and
push
fs
sbb
and
jb
scas
and
add
inc
daa
aaa
mov
pop
push
js
mov
imul
rclb
cltd
test
movsl
roll
cmp
xor
das
fsubl
add
out
je
lock
pop
decb
outsb
inc
jge
test
lock
mov
add
jne
mov
mov
pop
mov
dec
xor
out
adc
jno
mov
cmp
pop
mov
lock
ret
sti
ljmp
lds
popf
inc
or
pop
fimuls
or
in
test
mov
dec
dec
mov
cmp
pop
outsb
in
push
test
adc
mov
push
out
ja
out
xor
jae
mov
mov
jb
push
push
or
daa
lret
push
xlat
mul
or
xchg
aas
dec
jb
ret
sbb
jnp
xchg
out
xchg
bound
fildl
subl
jecxz
ja
and
mov
adc
adc
pop
iret
ja
cld
stos
sub
call
mov
sahf
notb
jno
xchg
out
or
pmaxub
fwait
xor
xchg
testb
mov
data16
loopne
sti
adc
push
mov
cmp
or
insl
inc
xchg
test
mov
pushf
cld
mov
xchg
fs
out
fs
xor
jbe
xchg
scas
mov
stc
lret
pushf
push
sbb
sub
adc
sub
push
xor
sub
pop
outsb
data16
xor
rorb
rcrb
mov
testb
jo
mov
sbbb
sbb
or
das
cmp
lods
int
fiadds
repnz
xor
cld
incb
cmp
xlat
adc
not
jne
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
pusha
jo
xor
jno
mov
dec
and
mov
cmpsl
int3
mov
push
push
pusha
call
lods
sub
gs
xor
inc
fwait
popf
mov
jns
xor
cmp
mov
push
mov
jg
aad
add
cld
mov
pop
ljmp
xchg
adc
jp
xchg
sti
les
stos
or
das
movsl
sub
leave
inc
ljmp
and
iret
pop
pop
mov
std
jg
fucomip
pushf
leave
dec
push
jmp
cmc
pop
ret
mov
out
fiaddl
mov
cld
xor
fnstcw
nop
test
filds
outsl
arpl
mov
xor
aam
push
in
test
aas
stos
and
enter
mov
push
inc
push
out
cmc
xor
or
xor
jno
inc
pop
sub
popl
xor
popa
das
jge
push
nop
add
mov
and
lods
mov
call
scas
sub
adc
and
inc
fdivp
scas
arpl
or
pop
insb
push
add
mov
inc
je
fwait
pop
dec
push
adc
sbb
stc
xor
xchg
mov
cmc
and
dec
popf
sbb
sbb
mov
cmp
popa
aaa
dec
cmp
cmp
cltd
cmp
sahf
das
fs
in
negb
cmpsl
mov
out
add
lcall
or
sbb
or
ljmp
xor
repz
mov
popf
ljmp
data16
popf
sbb
dec
outsl
sub
xchg
test
dec
cli
lcall
mov
adc
lahf
push
nop
sbb
or
pop
xor
ficoml
iret
int3
ja
sub
ljmp
unpckhps
inc
adc
mov
mov
mov
outsb
inc
jno
inc
lods
xor
mov
pop
and
mov
push
dec
cld
je
in
mov
mov
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
shrl
mov
lahf
aad
sub
cwtl
fimull
and
movsl
leave
mov
push
and
mov
mov
adc
mov
jbe
movsb
es
shrb
jnp
sahf
pusha
xor
je
adc
xchg
pcmpgtb
push
xor
pop
gs
and
lea
sahf
in
fstl
hlt
fisubs
mov
cmpsl
push
push
xchg
ret
andl
mov
out
arpl
pushf
lahf
rorl
inc
add
sahf
dec
push
test
nopl
xchg
sub
rorb
mov
in
ds
inc
test
js
clc
mov
xchg
repz
jl
fstpt
loope
shl
fscale
dec
test
mov
xchg
inc
test
or
sub
inc
leave
pop
scas
cmp
insb
stos
pop
inc
popf
int3
fldt
inc
test
sbb
jo
idivl
nop
dec
cmp
rcrl
ja
aam
leave
andl
fwait
addb
ljmp
xchg
sub
mov
dec
inc
dec
jmp
xchg
push
xlat
or
mov
aad
outsl
xorl
sarb
lret
aad
cwtl
and
aam
xchg
pop
add
jl
ret
in
or
sub
inc
add
dec
test
pop
fldenv
leave
daa
jecxz
mov
sub
inc
sbb
push
fcmovnu
repnz
sbb
test
jmp
mov
and
ficomps
ja
addr16
repnz
leave
jle
rorb
pop
pop
imul
out
cmc
clc
jle
sti
xor
cmp
mov
xchg
push
push
sub
jo
sub
adc
adc
movsb
adc
jae
stc
mov
cltd
icebp
sub
repnz
adc
xor
cmp
decl
push
and
mov
inc
mov
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
ljmp
fmull
adc
daa
fcompl
add
mov
insb
dec
jb
aam
out
sub
and
hlt
in
fcoml
mov
mov
insb
or
xchg
adc
mov
loope
stos
pop
fimuls
cmp
js
repz
shlb
out
xchg
dec
mov
and
add
lret
or
int
or
cld
pop
push
pop
addl
fimuls
test
or
xchg
mov
fidivl
jo
int
ss
sub
inc
arpl
xchg
scas
xor
xor
fcomip
outsb
sub
jb
mov
aad
mov
or
cwtl
mov
nop
fldl2e
or
fsubs
mov
js
xchg
mov
popa
fdivrl
shl
in
or
cwtl
push
je
dec
clc
push
lcall
test
shll
xor
add
cmpsl
pop
add
pusha
sub
mov
adc
pop
rcll
fstps
sbb
ja
outsl
sbb
test
xlat
jns
scas
cmp
and
inc
jg
movb
or
and
lahf
pusha
nop
test
mov
add
sbb
add
mov
rcll
in
inc
subl
xor
pop
sbb
cmpsl
aam
jnp
adc
push
dec
xchg
data16
jmp
adc
xor
sub
pushf
fmul
mov
add
mov
or
mov
add
push
movsl
inc
pop
push
jae
loopne
or
popa
data16
outsb
out
jmpw
mov
mov
push
push
cmc
xchg
xchg
inc
jg
movsb
out
mov
in
add
push
inc
outsl
dec
idivl
cli
adc
testl
inc
push
test
loopne
cld
inc
daa
mov
adc
add
cmp
js
lods
cmp
stos
pop
cwtl
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
in
lods
push
adc
movlps
jns
mov
insl
sbb
or
cwtl
ss
fwait
pushf
sub
pop
mov
sub
push
mov
out
jge
pop
cld
and
test
pop
int3
imull
xchg
mov
mov
popa
punpckhwd
out
xchg
cld
aam
in
mov
cmpsb
xchg
inc
out
jns
cmp
dec
repnz
cltd
inc
push
daa
jmp
jge
inc
in
test
push
mov
dec
rorl
aam
repnz
lret
push
pop
faddl
cmp
and
xchg
push
lock
jge
pop
or
lods
lea
inc
jmp
insl
mov
mov
pop
push
out
push
push
mov
dec
nop
xor
xor
cmp
rcrl
aaa
xchg
outsl
and
mov
fisubrl
jl
mov
add
mov
sub
and
sub
in
lock
lea
jecxz
and
push
pop
inc
add
cmp
mov
mul
add
mov
inc
add
mov
cmc
mov
jge
pop
pop
insb
and
loope
inc
xchg
jp
mov
loope
mov
mov
xchg
and
inc
mov
jmp
lahf
scas
in
movsl
and
mov
mov
stos
mov
xchg
jecxz
or
adc
test
loopne
mov
cmp
xchg
ljmp
stc
adc
movl
pop
jp
out
mov
xor
mov
add
push
or
or
shlb
repz
orb
outsl
sbb
mov
cmp
sub
push
or
inc
mov
mov
arpl
orb
adc
arpl
cmp
js
fsubr
cmp
sub
cld
xor
add
out
lret
scas
gs
in
mov
ret
push
push
mulb
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
fwait
xchg
mov
fmull
adc
cmp
jbe
xlat
dec
cmpsl
cli
add
adc
push
dec
pushf
idivl
aas
mov
jl
xor
push
xchg
pop
pop
bound
or
mov
jns
bound
ret
adc
scas
pop
jno
inc
push
xchg
cs
mov
cmc
pop
pop
push
cmpsl
int3
mov
popf
in
mov
and
loope
adc
xor
scas
xchg
fidivl
dec
imul
push
cmp
lds
js
jnp
push
sbb
xor
cmpl
dec
sti
mov
adc
mov
sub
aam
mov
push
je
iret
sbb
aad
xacquire
mov
jg
cmc
adc
es
std
lea
lds
js
inc
aas
idivb
icebp
or
cmp
xor
cmpl
lcall
shrb
in
movsl
out
pop
jp
nop
stc
int
mov
jne
movsb
jg
dec
lret
pop
add
aas
dec
pop
pop
bound
and
xor
addr16
lock
arpl
xor
dec
iret
push
data16
divb
push
cld
fdivr
repnz
pop
mov
or
and
fsts
test
cmp
pop
mov
cmp
shrb
mov
xor
daa
stc
and
push
mov
negb
rorb
jns
sti
mov
and
and
inc
lock
push
mov
xchg
sub
repnz
std
cld
dec
insb
cmp
inc
lahf
dec
push
pop
and
flds
adc
cli
data16
xor
dec
imull
in
gs
addr16
gs
inc
cwtl
loop
cmp
in
xchg
dec
hlt
mov
or
leave
or
sub
imul
gs
test
das
mov
mov
jns
outsb
xchg
jno
cmpl
cmp
add
mov
pop
aaa
popf
and
cwtl
xor
and
arpl
sbbb
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
psubd
and
sub
cmp
cli
jmp
outsl
adc
clc
cmp
lret
add
mov
sbb
cmpb
mov
mov
fdivs
xchg
mov
test
inc
ret
xor
fistl
mov
lock
scas
mov
and
fstpt
outsl
mov
les
outsl
push
repz
mov
outsl
adc
dec
or
sub
xchg
mov
leave
jecxz
inc
push
lahf
pop
daa
aas
push
xor
xor
aad
or
fwait
pop
enter
imul
in
test
jg
sbb
scas
aam
and
push
pop
aaa
xchg
lods
lods
insb
fstps
and
lcall
inc
gs
data16
sete
cmp
push
xlat
adc
rcl
aad
clc
jle
addl
mov
mov
ficompl
pop
rcll
jae
adc
mov
adc
sub
mov
fnstenv
and
lret
sub
xlat
sub
in
ljmp
fdiv
cwtl
and
dec
mov
or
mov
jg
cmp
pusha
push
lods
in
imulb
jecxz
adc
sbb
adc
sahf
inc
call
mov
and
enter
sub
test
sbb
shr
push
cmc
popa
push
rclb
es
out
jbe
jne
xor
loope
dec
xchg
and
pop
cs
jl
or
sarl
pusha
adc
not
mov
iret
lock
mov
filds
xchg
imul
jp
sub
mov
push
ret
lahf
jnp
jno
rcr
ljmp
add
hlt
je
popa
aad
xchg
orl
xor
xchg
push
jmp
pop
repz
stc
push
movsl
xchg
std
test
mov
adc
sbb
cltd
xor
mov
scas
out
or
daa
pop
pop
xchg
mov
insl
fidivrs
add
fmull
mov
scas
cmpl
lea
pop
test
sti
dec
pop
and
imul
adc
inc
inc
push
jmp
or
xchg
xchg
in
adc
test
jmp
frstor
ret
dec
or
jae
sldt
frstor
stos
jmp
outsl
mov
xchg
add
and
add
or
xor
push
xchg
push
sub
mov
xchg
shl
repnz
loop
or
jg
shll
cltd
out
call
or
ss
jns
cmp
clc
adc
test
and
sahf
xor
int3
mov
cli
inc
mov
jle
not
mov
cmp
xchg
test
rorl
lock
cmpsb
mov
adc
mov
xor
or
in
cld
icebp
sub
pop
hlt
clc
or
lahf
jmp
popa
add
lds
inc
loope
push
enter
add
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
xchg
bound
jmp
adc
rcr
loope
aaa
mov
rcrb
xchg
jb
idivl
les
sub
add
xchg
sub
push
sub
test
pop
in
xchg
inc
cwtl
sbb
jmp
jg
xor
stc
ret
dec
imul
lret
fdivl
dec
ljmp
cmp
xor
stos
dec
sbb
shlb
lods
rcr
pop
dec
lahf
adc
inc
fnstcw
jge
add
subl
js
out
in
aam
xchg
mov
cmp
pop
repnz
and
xor
dec
std
sti
mov
inc
dec
test
jns
sbb
jnp
mov
in
test
push
lcall
push
lret
popf
mov
inc
mov
out
cmp
fbld
cmp
mov
mov
mov
lahf
xchg
pop
add
inc
mov
leave
idiv
scas
ret
lods
and
hlt
jmp
mov
jae
mov
stos
pop
xor
sbb
in
push
shll
lds
sbb
enter
movsl
mov
stc
fwait
leave
test
iret
sub
inc
xor
xchg
cmp
mov
inc
and
out
incl
daa
addb
jb
push
leave
adc
sub
sti
jp
scas
maskmovq
jg
xchg
mov
jmp
sbb
pop
testb
in
add
in
hlt
jp
cmpsl
jno
mov
cwtl
and
adc
inc
outsl
jp
movsl
mov
mov
cmp
xchg
gs
xchg
test
fwait
mov
jmp
mov
imul
lret
shlb
das
mov
add
cld
je
sbb
jo
add
push
dec
iret
mov
xor
addr16
inc
pop
mov
dec
xchg
cwtl
aam
bound
loop
mov
pop
pop
xor
inc
inc
ret
mov
and
fsub
rcr
push
les
jno
loopne
lret
mov
pop
sbb
imul
lahf
sub
movsl
pushl
mov
push
test
push
jmp
xor
lret
add
pop
mov
jmp
loop
cmp
arpl
sbbb
aaa
adc
or
ret
add
push
or
popf
lahf
movsl
clc
test
stc
xor
pop
mov
movsb
shlb
mov
inc
lock
mov
test
inc
push
jecxz
sti
jp
mov
and
push
outsb
ljmp
ds
addb
sahf
xor
add
mov
inc
xchg
outsb
das
cli
mov
or
js
std
mov
mov
daa
fwait
and
xor
add
add
mov
subl
cli
mov
arpl
cld
mov
data16
inc
js
mov
jnp
push
jl
and
or
and
pop
cmpl
sbb
lahf
stc
fwait
mov
hlt
sti
push
arpl
fdivr
notb
leave
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xor
in
adc
jo
adc
aaa
pop
pop
sbb
or
pop
idivb
andl
jne
loop
leave
xchg
mov
mov
imul
pop
xchg
loope
add
shll
popa
popw
mov
lods
adc
xchg
mov
xchg
inc
aam
dec
ror
into
adc
mov
rcr
push
pop
fwait
cmp
cmp
mov
fisttpl
lret
or
dec
or
mov
jp
jno
cmp
push
sbb
stos
or
jp
jl
dec
loope
cmp
xchg
sbb
mov
scas
outsl
cmp
lods
in
test
xor
dec
mov
push
xor
aas
popa
mov
lret
loope
subl
ds
mov
packssdw
ja
out
mov
stc
xchg
xchg
xchg
lret
push
outsl
gs
mov
adc
or
push
stos
xor
push
daa
dec
repnz
jmp
jae
cwtl
push
dec
push
cmp
sahf
imul
pop
arpl
jnp
repz
or
sbb
stos
cmp
scas
fnstenv
push
xchg
shr
add
lods
pop
pop
in
mov
cmp
inc
loop
lods
and
shrb
inc
and
or
mov
xchg
and
inc
xor
inc
mov
scas
mov
inc
jns
xchg
repz
popf
mov
fstl
mov
enter
pop
out
jp
jg
xchg
cmpsb
mov
das
mov
mov
sub
and
fcmovnbe
or
les
mov
xchg
adc
xor
jle
testl
jmp
lret
push
mov
lods
inc
roll
cmpsl
popf
lock
dec
rcrl
push
lcall
ja
lods
fstpl
adc
jl
cmp
sub
mov
insl
in
xchg
mov
mov
sub
add
mov
and
and
enter
and
movsl
cmp
and
xchg
idivl
call
add
movsl
adc
inc
mov
pusha
jbe
pushf
inc
mov
lock
je
lcall
in
or
xchg
jb
jns
cs
stc
mov
popf
push
test
xor
mov
mov
xchg
inc
repnz
and
xchg
mov
xor
jecxz
lret
xchg
push
pop
push
jae
push
lods
daa
cmp
imul
test
xchg
lcall
xchg
je
mov
mov
pop
xor
call
xchg
cltd
lock
and
std
popf
outsb
gs
fcoml
out
pop
dec
and
push
push
ret
sub
cld
xchg
cmp
jl
out
in
sub
push
iret
ja
out
nop
and
out
iret
cmp
imull
jbe
xlat
fstps
sbbl
mov
ret
fistpl
rolb
fsubl
out
inc
and
cmc
es
and
xor
adc
test
sub
mov
or
inc
icebp
xchg
stos
mov
lods
mov
sbb
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
sub
inc
fstl
adc
adc
jb
sbb
loopne
push
pusha
jae
addr16
and
out
push
push
adc
stos
test
cwtl
cli
and
fimull
gs
sbb
jmp
imul
enter
int
dec
push
mov
jle
cli
pushf
pop
ja
push
pop
fnstcw
ror
or
ss
lock
nop
ret
jno
js
and
or
pushf
xchg
cmp
movsb
into
popa
cltd
cmp
dec
stc
sbb
inc
push
cwtl
dec
bound
sti
into
adc
adc
in
rsm
leave
and
pop
movsb
xchg
pop
xchg
dec
mov
xor
es
sbb
jbe
jae
mov
ja
rcll
and
sbb
dec
xchg
fidivl
cmpb
js
sar
mov
lret
adc
mov
clc
js
in
mov
fmull
add
xchg
sub
out
push
push
rcr
xor
lahf
mov
pop
loop
test
dec
cmp
decl
dec
xor
sbb
adc
leave
mov
in
ret
mov
mov
dec
sub
popf
cmp
lds
int3
test
push
xchg
push
scas
dec
mov
sbb
jno
lds
push
inc
aam
das
xor
sahf
mov
nop
mov
mov
xor
xchg
pop
cmc
add
add
clc
mov
ret
jb
push
sbb
arpl
xchg
jmp
jb
cmp
rorl
or
fbstp
int3
xchg
subb
repnz
lods
fcomi
adc
mov
leave
andl
sbb
jecxz
add
mov
push
or
or
or
cmp
sub
shlb
add
pop
adc
or
mov
xchg
mov
lods
jo
aam
and
jnp
mov
dec
add
ja
sbb
cmp
jp
sahf
fs
xor
xor
out
out
addr16
inc
jbe
fistpl
in
sbb
imul
sub
or
xchg
mov
jno
in
clc
add
fnsave
scas
popf
dec
inc
push
es
jmp
push
sbb
xchg
jb
adc
push
mov
mov
or
adc
fmuls
push
inc
push
dec
fldenv
and
hlt
mov
cs
ret
dec
test
jns
sbb
and
mov
sbb
pop
adc
push
push
pop
fwait
je
fmull
and
jae
pop
stos
sbb
or
jnp
sarl
aam
sub
adc
lcall
and
jmp
dec
xchg
and
jno
pop
mov
dec
push
scas
sbb
sahf
push
fs
imul
in
xchg
pusha
stos
mov
mov
mov
cmc
stos
mov
pop
sub
imul
movsb
ja
inc
or
push
cmp
into
std
push
rol
pusha
add
out
mov
mov
aam
fyl2x
lret
sub
cmp
cmp
repz
xchg
stos
std
das
mov
shll
push
shrl
dec
pop
xor
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
cmp
out
sahf
aad
adc
adc
mov
cs
adc
shrd
cmp
jae
adc
aaa
cli
insl
jg
jg
or
adc
fwait
sahf
lock
pop
jo
mov
jg
mov
cmp
pop
pop
cwtl
pop
std
cld
movsb
cmc
aas
and
sahf
rcr
fistl
fdiv
jae
daa
rcll
mov
add
jmp
lea
push
aam
cs
out
push
loope
pushf
or
jb
mov
lock
in
fisubl
fisubrl
in
jnp
sbb
push
sub
sub
fs
sub
scas
and
push
mov
sbb
push
insl
adc
xchg
fisubrl
adc
clc
jg
or
inc
rcrl
mov
xchg
inc
sub
push
faddp
cltd
xor
ljmp
push
inc
mov
aaa
push
popa
popa
xchg
fstp
andl
inc
iret
iret
mov
jle
in
push
ss
fldt
dec
mov
lods
outsl
xchg
jno
mov
jp
mov
jns
or
mov
mov
aam
ss
mov
fists
movsb
adc
fstpt
pusha
xor
fs
mov
xchg
xchg
lea
dec
ja
cmp
mov
cmp
jge
push
out
ljmp
jg
mov
lret
sbb
cmpsb
pusha
cmpb
js
or
dec
cld
and
cld
push
scas
fcomp
inc
sar
mov
add
loopne
imul
inc
insl
imull
aad
adc
cmc
das
jle
test
mov
mov
xor
scas
int3
pop
mov
pop
repz
imul
dec
xor
pop
sbb
iret
jae
xlat
xchg
test
jno
cwtl
sub
dec
cmp
aad
ja
and
xchg
gs
rol
loope
and
cwtl
mov
mov
scas
pop
push
jno
nop
lods
rcrl
adc
pushf
jne,pt
repz
stos
int
outsl
pusha
enter
xor
repz
sub
jb
and
addr16
adc
push
inc
push
dec
lock
xchg
pop
push
fcom
xor
sub
les
call
sti
mov
and
mov
notl
mov
dec
cs
add
push
pop
fs
push
fsubp
in
sbb
cmp
in
pop
cwtl
rol
mov
xchg
adc
xor
test
lods
bound
pushf
out
jge
xchg
jg
dec
dec
outsl
mov
cmp
push
pusha
xchg
aad
cmpsl
sbb
or
ret
mov
imul
xor
in
fucomip
mov
pop
scas
jbe
cmp
es
cmpsl
add
stos
sub
and
iret
test
and
test
fimuls
xor
cmpb
xor
cmp
lea
arpl
mul
push
es
test
int
stc
pop
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
cmp
mov
jo
adc
mov
push
add
xor
dec
and
mov
mov
in
and
push
mov
lahf
or
jb
xor
popa
fcmove
and
jecxz
add
mulb
add
outsl
or
cmc
push
adc
sub
jno
sbb
cmp
mov
adcb
pop
mov
fldenv
mov
mov
test
xor
xchg
in
cmp
mov
fwait
lods
jno
idivb
sbb
add
adc
loope
mov
ljmp
push
test
xchg
mov
cmpsb
pop
mov
mov
jnp
add
pop
sub
shr
leave
mov
in
scas
push
push
jne
fnstenv
mov
and
popl
shll
mov
and
mov
and
pop
cmp
mov
inc
cs
push
jp
dec
stc
stc
addr16
test
loopne
fmull
push
out
fimull
mov
mov
scas
mov
pop
sub
jns
cld
cmp
pop
pop
mov
iret
pop
out
in
sbb
xor
push
adc
sub
jg
mov
repnz
sub
cli
xor
mov
or
nop
and
and
xor
in
pusha
ucomiss
push
sahf
push
mov
fldl
xchg
sub
jl
testl
push
es
nop
jge
xchg
pop
data16
idivl
xchg
pop
add
mov
mov
mov
in
mov
adc
lds
jbe
in
aaa
jbe
in
or
jae
repz
ret
fcoml
and
sbbb
jg
jp
sub
mov
aas
fnstenv
out
sarl
imul
iret
mov
xor
or
push
pop
stos
fldcw
adc
push
xchg
dec
mov
nop
dec
shl
and
outsb
ret
push
fidivl
fisttpl
pop
stos
sub
xor
mov
lret
sub
jg
push
sbb
mov
or
ret
or
aas
adc
not
out
popf
xor
imul
xchg
sbb
sbb
pop
cmpsl
arpl
jne
dec
lret
aad
rcrb
int3
lret
and
rcrl
or
nop
cmc
inc
fwait
mov
mov
pop
jmp
push
mov
pop
mov
test
mov
test
push
xchg
mov
aam
xor
jb
icebp
sbb
loope
pop
pop
pop
push
test
repnz
and
bound
lcall
mov
int
clc
mov
pop
add
jmp
mov
pop
aaa
mov
xchg
lret
repnz
add
insl
adc
mov
sub
lcall
ljmp
or
pop
imul
dec
push
imul
arpl
pop
sbb
or
gs
mov
xchg
arpl
add
jl
add
push
pushf
jbe
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
mov
aam
mov
rorb
loopne
dec
jo
add
lock
inc
shlb
xchg
scas
sub
mov
cs
mov
cmc
test
xchg
scas
std
cmpsb
sbb
adc
js
push
in
pop
sbb
sub
dec
pop
pop
fcoms
repz
adc
xchg
dec
mov
orl
pop
xchg
add
enter
dec
push
fmuls
lods
adc
in
rcr
out
adc
dec
push
dec
jle
push
push
xorl
stos
and
push
int3
pop
push
cld
push
stos
sub
pop
int
push
xchg
pop
jg
call
add
leave
push
sbb
repnz
xchg
sub
xchg
shll
jecxz
mov
scas
mov
sub
add
sbb
cwtl
mov
pop
push
stc
xchg
sti
add
dec
mov
cmp
push
mov
push
xchg
call
push
xchg
mov
pop
ret
pop
cmc
fbld
sbb
and
jnp
sub
xchg
jecxz
sbb
jp
pop
gs
cmc
ss
mov
shll
jb
dec
cmp
lock
mov
and
push
mov
mov
test
in
xor
std
jns
jae
mov
fwait
push
stos
cmp
in
push
movsl
incl
jge
gs
mov
pop
pop
mov
rcll
pop
xor
loop
scas
imul
imul
sbb
std
adc
pop
push
jne
mov
inc
dec
cmp
mov
pop
xchg
jge
movsb
jne
out
rclb
pop
outsl
aaa
pop
loope
rclb
sub
lea
or
ret
adc
mov
aad
sahf
popa
add
call
sbbl
xchg
stc
inc
inc
insl
call
mov
cmp
add
adc
jmp
and
pop
jg
andb
in
and
shll
sub
psrlq
and
adc
push
xchg
in
xchg
push
xor
pushl
mov
aas
fnstenv
mov
pop
or
lahf
mov
and
test
pop
jae
adc
push
inc
jns
fs
xchg
fcmovne
and
xor
xor
cmp
inc
les
fcmovb
cltd
aad
push
js
mov
in
in
mov
dec
xlat
adc
addr16
lods
gs
mov
call
jmp
popa
or
cmp
in
es
lahf
pop
movsl
mov
cmova
inc
shlb
push
add
mov
push
lret
cltd
jle
hlt
or
outsl
addr16
cwtl
pop
sbb
adc
sub
mov
dec
jbe
loopne
lods
pop
loope
test
jne
shrl
stc
add
push
stos
xor
je
xor
jo
mov
mov
add
imulb
mov
leave
xchg
or
sub
inc
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
mov
rcll
jo
adc
mov
mov
sub
rclb
dec
push
jecxz
mov
nop
pusha
mov
sub
ja
inc
out
lcall
xor
pop
push
fildl
popa
lods
and
test
lds
loop
push
mov
or
dec
jb
mov
lahf
inc
and
repnz
sbb
pop
clc
retw
popf
scas
or
mov
mov
xlat
scas
mov
es
push
loopne
ljmp
js
fcmovnb
leave
or
lahf
mov
mov
aam
mov
xchg
dec
or
addr16
rcrb
jecxz
inc
mov
inc
in
and
sub
sub
repz
lock
push
pushl
dec
jae,pn
lods
push
mov
add
ja
adc
pop
stc
pop
sahf
fs
mov
sahf
push
and
pop
cs
xchg
or
divl
xchg
mov
pop
add
mov
repz
out
pop
sub
mov
mov
pop
jle
mov
cld
cli
jg
imul
xor
js
add
jp
ds
push
shrl
mov
mov
mov
or
cltd
sub
pop
lea
mov
loope
adc
sub
jecxz
test
lahf
hlt
fadd
jl
or
xor
out
call
push
adc
add
adcb
nop
and
or
or
mov
sti
push
adc
aaa
lds
lcall
orb
sahf
push
out
xlat
cmpsb
ret
call
sub
jnp
popf
shrb
adc
adc
gs
fidivrl
cmp
hlt
mov
pop
test
frstor
push
pop
cwtl
mov
in
lock
int
mov
mov
sub
sbb
bound
mov
or
in
in
mov
push
pop
mov
insb
out
xchg
inc
enter
pop
imul
dec
je
popf
shll
pop
or
dec
sub
jo
jnp
sarl
fidivs
add
sub
hlt
xchg
inc
inc
push
cwtl
xor
repz
cmp
lods
mov
jmp
xor
mov
das
xor
sbb
ficoms
add
loop
pop
xlat
mov
jns
push
jg
add
lock
pop
jae
push
ja
fcompl
fisubs
dec
xchg
loope
jb
clc
psubq
lds
sbb
sbb
sahf
or
outsb
jmp
scas
mov
jno
insl
mov
adc
or
sbb
sub
aam
add
pop
push
mov
pushf
ljmp
cmp
sub
xchg
leave
nop
scas
pop
push
in
pop
pusha
imul
jle
mov
and
mov
or
outsl
iret
mov
mov
push
rcrb
xchg
mov
lods
push
ret
pop
rcl
dec
addr16
mov
mov
xor
xchg
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
mov
mov
adc
adc
rolb
dec
test
dec
icebp
lods
sbb
or
dec
and
xchg
dec
xchg
mov
mov
cltd
inc
mov
push
lret
mov
pop
and
xchg
mov
dec
cmp
pop
or
insl
inc
inc
xor
sbb
jne
jb
fstpt
stos
lods
in
push
adc
cmp
addl
cmp
mov
dec
scas
and
xchg
shlb
add
xlat
dec
mov
out
mov
add
dec
stos
cmpsl
pop
sub
and
lcall
fdivrp
pop
or
add
hlt
mov
mov
sbb
add
xchg
pop
add
and
popl
stos
mov
aad
or
sbb
jno
push
xlat
lret
cld
je
iret
add
pop
scas
aad
bound
out
fwait
sahf
sbb
jo
in
inc
push
ja
sti
or
and
ret
int3
hlt
pusha
sarl
ret
lods
push
push
jp
lods
lret
add
jg
lcall
dec
lret
push
ficoml
xor
mov
fcmovnu
mov
sbb
movsb
push
sub
xor
mov
cmp
cmc
nop
orl
sub
add
or
cltd
shll
inc
xchg
mov
bound
lea
scas
in
aaa
sub
pop
arpl
stos
mov
inc
xor
loope
jns
sbb
sahf
les
leave
or
or
pop
xor
fisubs
insb
addr16
insb
add
or
enter
xchg
lret
rcll
jl
cld
jg
sbb
stc
fistpll
jns
add
mov
ss
lahf
movsl
or
mov
sub
pop
into
dec
mov
jne
jl
sub
movsl
cmpb
cmc
pop
jns
jne
dec
xor
scas
jbe
sub
insl
xchg
insl
dec
xchg
popf
mov
rorl
iret
roll
fidivrl
stos
add
bound
enter
inc
movb
pandn
push
or
mov
ror
mov
jge
out
pop
movsl
nop
inc
jnp
xchg
faddp
jns
and
in
push
jns
jp
cmp
pop
jg
xchg
mov
sub
cmpsl
add
cmp
mov
dec
sub
sbb
and
adc
scas
add
mov
fidivs
jne
rcrl
push
in
push
dec
adc
fs
jecxz
fimull
jle
dec
mov
fs
outsb
ret
pop
je
lock
lods
out
out
and
add
adc
rcrb
jbe
cmp
cmpl
in
ficoml
mov
xchg
scas
ljmp
es
jnp
lea
pop
adcl
xchg
mov
and
fidivl
add
jg
add
insl
gs
push
lods
repnz
pop
xor
in
adc
repnz
leave
sti
cmp
enter
repz
adc
notb
jmp
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
lods
sbb
and
cmp
insb
es
rcrb
pop
sbb
gs
xchg
js
dec
popa
cli
dec
dec
xchg
jle
push
shlb
mov
decb
push
mov
pop
in
mov
mov
nop
or
ja
mov
xor
jg
xor
int
mov
jmp
sub
add
outsl
jnp
adc
mov
jle
jle
movsl
inc
ss
xlat
add
pop
add
lods
mov
or
imul
cmpsl
mov
mov
fiaddl
cmpsl
xchg
and
push
dec
retw
xchg
and
sbb
movsb
jb
jno
and
outsb
mov
sbb
fisttps
lret
popf
movsl
fmulp
and
das
dec
sarb
in
dec
inc
setns
pop
gs
push
inc
or
cmp
pop
mov
hlt
jmp
loope
jb
sbb
sbb
fldt
jecxz
jle
inc
loopne
shrl
lods
and
es
inc
adc
ficompl
fwait
cli
add
loop
pop
mov
mov
lret
insb
sub
adc
mov
cmc
mov
lods
arpl
les
fwait
xchg
das
sbb
and
cmp
daa
rorl
and
add
inc
jns
je
ja
lods
jnp
dec
out
repz
popf
and
leave
leave
rep
clc
inc
ror
push
xchg
and
pop
push
push
sub
jl
lea
mov
incb
mov
out
subl
push
jge
pop
adc
xchg
jbe
xchg
jecxz
fdivrp
pushf
stos
shrl
xchg
imul
and
xor
repz
jo
push
sbb
ficoml
inc
pusha
jp
dec
hlt
adc
sti
mov
and
andb
mov
xchg
or
lret
out
add
aam
clc
jp
imul
jo
ds
cmc
pop
lret
pop
outsl
cmpsb
out
and
xchg
lds
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
in
mov
stos
movlps
enter
test
daa
mov
jecxz
movsb
leave
xor
sbbl
cmp
xchg
test
adc
pop
jmp
arpl
jo
cmp
repnz
xchg
mov
mov
pop
ds
fwait
aad
pop
mov
roll
clc
pop
pop
sbb
jecxz
lret
dec
icebp
adc
cs
and
js
mov
ljmp
xor
cmp
push
pop
cmc
adc
mov
fwait
adc
fwait
push
add
lods
sbb
hlt
push
or
je
imul
out
test
push
fildl
push
add
iret
outsl
popfw
stos
cmp
loopne
mov
lcall
inc
stos
mov
or
mov
ret
gs
lea
and
je
lahf
sub
mov
mov
inc
roll
sbb
jl
mov
aas
addl
and
xchg
nop
lea
fldcw
pop
jg
out
mov
pop
and
cmp
xor
aad
cmp
divl
jae
jg
lcall
push
mov
add
fcomps
sub
sub
push
push
xchg
sbb
mov
or
or
call
stos
adc
and
adc
outsl
das
lahf
pop
xchg
xchg
in
adc
shlb
out
ljmp
push
xchg
stos
inc
stos
pop
pop
out
mov
popf
lahf
sbb
scas
leave
push
shr
xchg
or
jno
cmp
gs
mov
jo
sarl
lret
add
pop
fcoml
mov
push
pop
mov
je
movsl
and
pop
stos
ss
mov
mov
push
pop
insb
dec
roll
insb
ljmp
cmp
lahf
sub
pusha
cmp
nop
mov
iret
jno
ror
dec
aad
cmpsl
xchg
xor
lds
je
idivl
dec
loop
scas
mov
xchg
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
mov
lods
mov
adc
lahf
push
cmp
jnp
add
ret
popf
lock
sbb
cmp
push
outsl
cmp
js
xchg
outsb
fcomp
xchg
xchg
test
nop
cmp
enter
fs
cmpsl
rcl
pop
fdiv
fdivrl
push
data16
inc
rclb
push
mov
fwait
sub
pop
push
in
mov
into
out
dec
rorl
fiadds
clc
mov
stos
cwtl
sbb
stos
fdiv
out
aaa
vmulps
jecxz
insl
mov
and
aaa
add
inc
xchg
xchg
sbb
or
pop
movsb
xchg
icebp
jne
hlt
ss
ja
ljmp
lock
movsb
imul
cmp
insl
pop
dec
jecxz
les
push
test
daa
insb
push
inc
leave
ret
aaa
inc
pop
add
movsl
shl
dec
pop
leave
popa
sbb
cmp
repnz
les
mov
ss
mov
lret
jno
repnz
iret
jbe
pusha
je
xlat
push
bound
sbb
mov
in
xor
nop
xchg
xchg
pop
adc
fistps
or
mov
sbb
mov
lods
inc
movsl
push
out
rcrl
mov
mov
dec
fdivrs
fwait
jne
dec
ja
les
subb
cmp
jge
mov
xchg
aad
mov
sub
add
sti
push
mov
popa
mov
lahf
daa
xchg
sarl
push
sub
adc
ja
adc
pop
cmp
sub
inc
cmp
shlb
sub
mov
add
movsl
cltd
pop
jmp
dec
or
lahf
inc
outsl
mov
and
repz
mov
cmc
push
psadbw
add
aas
sbb
push
in
cmp
sub
adc
fidivrs
mov
pop
cmp
out
mov
and
adc
or
stos
xor
jbe
inc
js
mov
out
sub
leave
adc
jle
pushf
fistps
xchg
imull
subb
pop
inc
cs
add
push
arpl
add
sub
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
jp
pushf
lods
sbb
adc
stos
movlps
iret
loope
xor
into
lret
repnz
xor
and
inc
mov
mov
mov
dec
add
dec
adcb
filds
shll
inc
jo
sbb
and
sbb
sub
adc
push
xor
xor
cmpsb
inc
jo
pop
je
lret
stc
mov
jg
jbe
iret
fsubrs
pop
add
insl
pop
ficoms
cmpsb
icebp
adc
int
cwtl
dec
sub
adc
js
cmc
int3
pop
movsl
inc
xchg
dec
outsl
xchg
rep
dec
xchg
popf
push
pushf
adcb
dec
scas
in
add
adc
or
in
cmpl
fistps
arpl
cmc
test
xor
bound
cmp
ss
stc
enter
cmp
nop
rol
inc
mov
loopne
pushf
mov
out
adc
hlt
sbb
scas
pop
cltd
insl
lock
lea
sub
stos
aas
jns
mov
sbbl
mov
mov
mov
add
testl
xchg
mov
mov
mov
aam
add
lock
in
xchg
out
mov
ret
lock
aaa
das
add
mov
jecxz
movsl
fdivrl
cmp
es
lret
add
push
dec
sub
inc
jle
mov
repz
jp
add
test
mov
in
clts
lods
xchg
test
stc
fnstsw
test
mov
dec
in
xchg
jmp
bound
sbb
stc
ds
fs
subb
scas
xor
loopne
and
ret
xchg
mov
add
xchg
pop
dec
ss
loope
sbb
mov
shlb
pop
add
movsl
test
sbb
mov
xchg
dec
jl
adc
xor
int
sbb
or
hlt
xchg
ja
xchg
fcomi
xchg
jb
aad
inc
jmp
repnz
xchg
inc
loope
sub
cmc
sub
mov
rcrl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
roll
and
lahf
adc
stos
movlps
fidivl
movsl
fdiv
cmp
ficomps
fiaddl
mov
mov
stos
and
lock
xchg
cli
xchg
xchg
jnp
jle
jmp
xchg
lods
cs
xchg
inc
lcall
test
movsl
fiaddl
je
imul
xor
cwtl
sbb
jle
push
and
pop
leave
cmp
addr16
cmc
push
jae
mov
cmp
inc
sub
mov
dec
sbb
movsb
xchg
cmp
mov
xchg
push
fsubrs
push
in
out
shl
neg
mov
outsb
in
cltd
jae
lods
xor
jnp
into
repz
add
rol
mov
outsb
and
adc
or
mov
dec
loop
sarb
lea
lea
stos
xchg
inc
addr16
cmp
test
das
push
xor
jecxz
push
shlb
sarl
test
dec
cmpsl
pushw
mov
pop
xor
aaa
jb
xchg
mov
or
repnz
movsl
pop
es
out
jg
sub
insb
jge
sti
pop
cltd
mov
sti
inc
inc
mov
data16
pop
or
fnstsw
jecxz
mov
push
pop
adc
call
lds
xchg
and
cli
jne
adc
lock
cmc
inc
repz
fsub
loopne
jge
mov
mov
add
cld
shlb
ljmp
jg
or
inc
aaa
loop
stos
mov
mov
sub
fbstp
mov
and
mov
incb
pop
fs
pop
sub
lcall
lods
das
fisttps
jg
je
fdivrl
das
mov
jbe
addb
fwait
icebp
push
ror
nop
cmp
icebp
and
lods
adc
out
movntq
push
mov
mov
imul
rclb
leave
fldenv
inc
test
mov
xchg
mov
jns
rorb
cmp
or
sbb
xchg
lahf
das
push
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
xor
sbb
and
lea
and
scas
pop
dec
aaa
cli
jae
jge
out
mov
or
repnz
cmp
sbb
ficoml
sub
ret
scas
mov
sarb
bound
aad
lret
mov
in
outsb
gs
add
repz
jno
mov
or
or
and
das
andb
dec
push
pop
pop
int
adc
fst
inc
push
xchg
pop
clc
sbb
adc
shrl
push
sub
and
ja
push
lret
outsl
sub
jns
and
js
xchg
pop
adc
jle
mov
out
mov
scas
jne
sub
ja
mov
mov
fdivr
xchg
mov
outsl
data16
mov
out
sti
mov
lods
fstl
jg
fldenv
dec
nopl
sub
add
fildll
inc
mov
lea
decb
sbb
jo
cltd
pop
jecxz
mov
pop
jns
ljmp
cmpsb
mov
enter
sahf
fmull
imulb
loop
lock
push
sbb
mov
aaa
mov
ret
cwtl
cs
push
gs
add
out
int3
push
xchg
sub
iret
cltd
pop
xlat
outsb
cmp
subl
mov
sub
insl
mov
lods
and
jb
xchg
icebp
xor
fsubrl
push
and
jle
push
xchg
sub
mov
xchg
fs
push
loop
inc
sbb
and
scas
add
pushf
mov
fldcw
arpl
mov
dec
data16
es
jbe
loope
adc
add
outsb
and
les
cmp
cld
aaa
shl
and
or
ret
fcmovne
adc
ret
mov
sarl
repnz
push
sbb
ja
das
push
add
xchg
in
mov
imul
push
push
hlt
sti
xlat
xorb
sbb
testb
sub
adc
insl
cmp
push
std
xchg
push
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
loopne
call
sub
gs
stos
pushf
jnp
sarb
xor
mov
add
loopne
adc
sub
jbe
and
cmp
xorl
stos
add
adc
movsb
ret
arpl
cmp
repnz
jns
hlt
aaa
ficoml
mov
insl
aad
out
jmp
pop
ljmp
mov
jmp
int
call
leave
aam
outsl
push
into
adc
into
jne
xchg
xor
jns
push
cmpsb
shl
mov
ficompl
jno
mov
addl
mov
sub
popf
or
out
mov
mov
adc
sbb
fcmovne
xchg
faddl
adc
fcomps
pop
inc
popa
sub
mov
sarl
scas
movsl
xchg
push
jbe
movsl
mov
xor
adc
mov
or
fldcw
jb
mov
je
ss
outsl
cli
mov
mov
mov
xor
or
lods
dec
jae
mov
xchg
int
insb
mov
out
jb
fsts
xchg
inc
sub
xchg
std
pushf
repz
sbb
cmp
push
lock
sbb
pop
mov
cmp
jl
out
lcall
xchg
ret
leave
sbb
sbbl
repz
pop
mov
mov
mov
mov
shrb
ret
or
mov
fisttps
jmp
push
loop
xchg
xchg
out
ljmp
mov
pop
push
jl
js
fwait
mov
mov
hlt
add
pop
xchg
fnstsw
xchg
sub
bswap
and
and
cmpsl
pop
testl
mov
insl
rcr
or
inc
iret
adc
leave
addb
dec
adc
dec
xor
sbb
and
dec
xor
xor
adc
jg
push
or
mov
addl
lea
insl
mov
repnz
sti
xor
sbb
cli
orb
mov
je
adc
clc
bound
xchg
sbb
inc
leave
sbb
aaa
jecxz
add
cmp
xorl
xchg
insb
and
cmp
outsl
mov
jne
dec
mov
inc
push
mov
test
jmp
test
push
mov
mov
clc
jecxz
cld
mov
xchg
jg
ljmp
mov
push
test
push
pop
xchg
jmp
mov
push
xorb
js
fld
sub
popf
fsubrl
push
mov
sub
out
dec
divps
into
mov
loopne
sbb
cmp
movl
popf
xor
test
add
adc
leave
or
pop
fisttpll
andl
cbtw
hlt
inc
mov
mov
or
mov
enter
jno
mov
insb
mov
gs
mov
test
dec
xchg
push
pop
out
cmc
push
push
jge
xchg
inc
popf
jb
mov
fwait
jmp
mov
cld
push
push
jbe
lret
mov
aam
xor
scas
mov
sub
lods
push
or
lcall
popf
jl
xor
adc
fwait
sti
aaa
xor
and
daa
xchg
push
ror
mov
inc
mov
nop
mov
xor
mov
dec
mov
jge
dec
pop
shll
cld
add
xlat
repz
and
mov
aaa
rorl
cmp
arpl
pop
cmovs
je
xor
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
ss
loop
adc
pop
adc
adc
jmpw
pop
in
in
cmpb
xchg
push
mov
stos
popa
cmp
adc
cwtl
jmp
filds
adcl
repnz
out
xchg
lds
adc
adc
xchg
stc
clc
push
stos
popl
cmp
pushf
inc
cmp
adc
cmpsl
stc
imul
mov
xchg
fcmovb
loopne
bound
lods
push
in
cwtl
pop
xchg
test
bound
sub
es
push
test
pop
mov
mov
sbb
int3
out
lret
adc
movsb
fstpt
push
mov
xchg
rclb
inc
push
push
mov
lods
mov
mov
inc
adcl
fstps
or
imul
je
int
xchg
fcoml
push
xor
pop
sbb
mov
ds
sbb
lock
mov
cmpsl
repz
out
mov
out
dec
push
rol
test
scas
pop
adc
adc
push
add
lcall
sbb
xor
in
xor
xor
jno
add
cs
int
test
pop
sbb
scas
add
xor
dec
mov
fldt
push
xchg
xlat
outsb
adc
leave
sub
frstor
mov
shrl
fistps
jg
les
push
dec
sbbl
cwtl
pop
inc
jge
sub
or
sbb
ja
mov
mov
ret
enter
sub
les
mov
fwait
jne
clc
adc
sahf
bound
cmp
js
cli
movsb
inc
inc
push
lds
push
or
jnp
movups
cld
cmpsl
jmp
nop
shl
clc
popa
cmp
hlt
mov
fwait
lock
insb
shll
mov
ror
ds
jp
xchg
outsl
xchg
ja
inc
inc
ficoms
cvtdq2ps
movsl
fildll
inc
push
inc
sub
movsl
in
aas
repnz
pushl
ds
stos
sub
dec
add
xlat
ret
fisttps
insl
pop
ret
je
gs
insl
js
mov
sbb
mov
out
add
push
frstor
shlb
mov
sahf
les
adc
insb
push
push
outsb
push
incl
cmp
cmc
loopne
shlb
lahf
sub
dec
jge
pop
stc
and
mov
cmp
sub
bound
in
mov
bound
adc
test
dec
insl
popa
push
sbb
lods
mov
int3
js
inc
hlt
mov
aam
or
into
popf
sarb
mov
int3
cmpsb
push
inc
sub
add
jb
jg
cmp
dec
les
or
test
orl
insb
lods
mov
test
add
push
sbb
mov
ljmp
scas
push
pop
cli
or
movsl
sub
xchg
mov
mov
adc
cld
sbb
push
outsl
fnstenv
aad
adc
sbb
daa
pop
jno,pt
stos
sbb
stos
jo
shl
in
mov
lea
aam
dec
jp
insl
mov
and
mov
inc
pop
jbe
rcll
adc
or
imul
les
sbb
xchg
add
jnp
loope
dec
aas
test
in
pop
inc
out
mov
xor
in
sbb
jg
jmp
ret
daa
bnd
outsl
into
add
cmp
or
cli
mov
adc
and
out
call
ss
mov
sbb
dec
push
lock
insl
addr16
aad
jge
or
outsb
inc
adc
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
fcmovne
stc
jle
mov
adc
movlps
cmp
sub
out
gs
insb
sahf
rcrl
rcr
dec
aas
loop
faddl
sub
sti
dec
jle
out
into
or
addr16
scas
cli
outsb
bound
mov
and
lea
inc
add
stc
arpl
jle
in
push
sbb
cmp
es
xchg
dec
nop
sub
cli
shr
add
outsb
and
cltd
xor
je
dec
ss
mov
push
fistpll
mov
xlat
pop
sbb
push
jns
and
xchg
lret
sbb
lds
sbb
addl
das
lods
lods
sbb
icebp
xchg
into
lea
sbbb
mov
adc
imul
pop
les
ljmp
es
mov
inc
xchg
in
cmp
out
call
rol
inc
aaa
ss
outsl
mov
pop
pop
sub
xchg
data16
dec
mov
shl
test
xor
xor
sub
test
andb
jbe
aas
mov
mov
or
sti
ret
je
sti
sbb
xor
fimuls
cmp
fwait
roll
mov
jl
mov
sub
mov
dec
in
imul
push
in
iret
in
outsb
lods
push
xchg
cmc
jge
xchg
test
and
gs
pop
push
dec
sti
jne
arpl
jnp
xor
push
sub
push
test
jecxz
aad
sub
rolb
rcrb
ljmp
mov
mov
repz
rcll
cmpsl
jl
into
xor
sbb
cld
cmp
mov
ror
add
ds
es
pop
xor
xor
movsl
mov
out
jp
iret
xor
add
add
sbb
adc
pop
inc
addl
icebp
fs
out
mov
cwtl
add
cmc
ret
xor
insl
lock
sbb
in
add
xchg
sub
je
repz
gs
cmp
into
fwait
mov
push
out
punpckhwd
mov
mov
inc
mov
dec
push
sub
lret
xchg
scas
lcall
repz
out
das
ficomps
and
xlat
dec
pop
cmp
push
outsl
mulb
pop
cmp
fstps
das
jcxz
push
aam
push
imulb
push
jg
ljmp
mov
popa
jg
ret
fsubr
mov
testb
test
and
out
hlt
std
cmp
mov
lods
and
or
pop
mov
inc
mov
adc
mov
loopne
or
mov
adc
mov
insl
jmp
xchg
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
adc
out
lahf
popf
ficoms
jne
cmp
mov
mov
pop
sub
inc
call
pop
out
outsb
dec
popa
push
jl
in
in
inc
out
dec
mov
sub
andb
sub
push
push
pop
ss
test
iret
xor
mov
mov
xchg
adc
inc
adc
popa
pop
sti
nop
in
fucomp
lret
sub
loopne
jnp
in
imul
fdivrp
mov
inc
jns
scas
adc
test
cmp
push
mov
push
sub
jle
xchg
adc
sub
adcb
lret
fmuls
push
loopne
sub
stos
mov
push
loop
lods
xchg
cmp
push
cld
nop
jbe
aaa
xchg
sbb
or
es
cmp
xchg
je
add
push
je
fwait
add
movsb
cmp
add
inc
sbb
or
jae
jle
pop
xchg
dec
gs
outsl
outsl
xor
sub
dec
dec
or
xchg
xchg
stos
and
xchg
pop
jmp
jle
xor
insb
sub
popf
out
mul
dec
push
cld
jmp
cmp
out
mov
je
mov
cmp
inc
xor
xor
mov
sub
scas
loope
sahf
outsb
out
mov
and
mov
andl
cmp
data16
mov
cmp
ljmp
inc
and
push
aad
mov
shlb
jmp
int3
xchg
lcall
nop
jo
cmp
dec
mov
mov
cmp
push
jle
inc
arpl
jno
repz
xchg
icebp
xchg
out
push
dec
mov
or
cmp
mov
test
cmc
out
push
ret
and
push
cmc
stos
xor
push
sub
jge
cli
fisttpll
stos
xchg
mov
int
lret
std
xor
mov
cmp
and
jb
aam
pop
hlt
adcb
inc
xor
or
and
sbb
push
imul
inc
in
adc
popa
or
stos
pushf
mov
mov
sahf
shll
mov
jecxz
mov
adc
xlat
fcomp
pushf
hlt
mov
js
push
and
cmp
mov
imul
xchg
or
ds
mov
add
sub
imul
out
in
jle
mov
jecxz
sub
gs
add
sub
sub
ja
adc
pusha
ja
out
jp
nop
push
test
nop
adc
push
nop
jbe
aas
add
jnp
inc
mov
xlat
fsubl
or
cmp
daa
pop
sub
sbb
mov
dec
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
adc
jge
adc
movlps
fstps
sbb
rol
mov
scas
dec
fsubs
arpl
fidivrs
data16
pop
cmp
je
outsb
je
test
ds
sbbb
push
popf
mov
add
rcr
mov
stos
add
sbb
sbb
inc
in
and
js
sbb
push
ret
mov
adc
jo
ss
pop
sbb
loopne
adc
push
lods
push
movsb
mov
lahf
inc
je
int
adc
lahf
mov
push
push
mov
aas
jns
mov
xor
data16
jle
sbb
mov
xchg
jb
lds
jmp
loop
fidivrs
out
lock
jbe
xlat
dec
mov
xor
popf
test
xchg
push
subl
jae
test
add
mov
ss
stos
push
xchg
cmpsl
mov
sbb
pop
arpl
pop
outsb
pmulhw
movsl
sahf
loope
push
iret
and
xor
ds
and
jg
pop
mov
mov
mov
test
mov
cmp
cmpsl
jle
dec
mov
adc
xchg
jbe,pn
ret
sbb
pop
xor
lods
jmp
insb
fs
pushf
jo
rcr
mov
dec
mov
cltd
lock
stos
inc
lcall
mov
stos
out
add
or
add
cmovnp
push
adc
mov
xor
and
stos
popf
loopne
adc
out
or
mov
test
cwtl
and
ret
pop
jne
lea
insl
inc
mov
cwtl
fistpll
lods
mov
xor
push
in
push
mov
mov
cmp
xchg
pop
in
pushf
xor
fstpl
movsb
insl
pop
das
cs
inc
roll
mov
fsubs
and
loope
dec
jmp
sti
ret
mov
and
and
jl
aaa
dec
bound
sub
push
mov
in
in
jle
mov
pop
out
mov
insl
into
push
aas
jo
iret
out
lds
pop
dec
shlb
add
lods
mov
lret
hlt
in
ljmp
or
loope
frstor
jb
mov
cmpsb
cmpsl
sarb
add
or
mov
push
mov
mov
lret
xchg
mov
imul
sbbl
pop
nop
push
in
loopne
cmp
xor
inc
mov
inc
mov
dec
int3
jle
mov
jle
inc
out
adc
ret
sti
out
sub
fimull
pop
jmp
mov
loopne
inc
add
pushf
outsl
mov
mov
jl
fidivs
dec
sbb
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
shr
push
jae
adc
jg
sbb
int3
imul
sub
inc
cltd
or
jns
jbe
pop
adc
in
or
xor
mov
out
xchg
jp
stos
xchg
insb
fmull
sti
jno
repnz
das
ficoms
xchg
mov
in
and
fildll
lds
pop
loop
jecxz
in
push
out
std
mov
jnp
jne
pop
mov
and
jle
loop
cmp
mov
dec
filds
sbb
mov
mov
ja
dec
inc
aas
pusha
int3
fwait
pop
in
xchg
mov
jno
mov
inc
sub
ret
xchg
ror
notb
loop
fnsave
mov
pop
out
pop
lahf
push
xlat
pop
popl
mov
lods
xor
test
jecxz
push
adc
sbb
add
jle
cmpsl
cmp
pop
fidivl
aad
aam
ret
cmpsl
jle
repz
dec
adc
push
jbe
sar
negb
jle
xchg
xor
lret
mov
mov
fildl
and
jge
repnz
aas
aad
lcall
enter
jne
lret
cwtl
adc
imul
mov
je
add
cltd
clc
xor
rclb
xlat
xlat
push
js
mov
in
fwait
mov
jmp
mov
int3
test
cmp
mov
jno
mov
shll
inc
push
cld
loop
push
xlat
push
jbe
inc
sbb
notl
inc
inc
sbb
das
pop
adc
dec
mov
popw
sbb
sub
ljmp
scas
jae
xor
mov
sub
adc
sbb
push
mov
sub
repz
dec
sbb
mov
push
push
dec
and
jge
xor
pop
adcb
lret
cs
push
sbb
push
add
loope
subl
nop
jmp
push
mov
adc
adc
jge
aaa
jl
repnz
nop
push
xchg
sub
adc
arpl
jno
inc
pop
pop
cmp
lods
xchg
or
ret
xchg
notb
xor
cmp
movsl
dec
push
mov
gs
jmp
pop
xchg
inc
adc
test
cwtl
mov
in
lcall
mov
sub
mov
push
mov
cmpsl
push
mov
xor
xchg
dec
xchg
mov
movsl
neg
jo
jp
fistpll
mov
das
bnd
icebp
popf
dec
sbb
sub
int3
les
scas
fldl
outsb
fwait
mov
push
adc
mov
out
cmp
cwtl
arpl
xor
hlt
adc
jmp
pop
dec
repnz
je
outsb
sbb
dec
aaa
sahf
mov
xchg
mov
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
push
push
xor
adc
test
xchg
out
inc
ret
aad
mov
xor
hlt
pop
mov
rcl
adc
out
cltd
push
lock
scas
nop
test
rclb
inc
dec
pop
mov
adc
lret
xchg
les
stos
and
cwtl
jnp
xor
adc
bound
insl
mov
mov
out
ret
jns
inc
out
push
xchg
cli
daa
cmpsl
mov
rolb
or
sbb
fsubs
mov
adc
jecxz
xchg
jg
or
mov
inc
loop
pop
adc
and
vphsubbw
sub
xor
enter
mov
xchg
dec
sbb
cld
or
and
movsl
outsl
loop
sbbl
add
sub
int3
sbb
pop
ret
ret
mov
fbstp
pop
and
fs
jae
cmpsb
fwait
arpl
and
sbb
orl
testb
sbb
push
insl
or
arpl
sub
fisttpll
test
pop
rcr
ss
rcrl
sbb
or
lds
and
mov
loope
pop
adc
mov
jne
sbb
out
fadd
enter
inc
lds
test
xlat
icebp
hlt
mov
and
clc
int
add
mov
and
push
ltr
add
mov
testl
xorl
test
enter
push
mov
add
leave
mov
hlt
inc
movl
imul
push
pop
stos
dec
pop
js
push
xchg
rolb
test
push
inc
adc
cmp
push
andb
call
shrb
cltd
call
enter
cmp
out
movhps
or
and
fcoms
les
xchg
sub
subb
orl
xchg
sub
into
stos
sub
cmpsb
lret
pop
and
lcall
sbb
pushf
cmpsb
cmp
xor
lret
daa
scas
push
push
mov
lahf
push
and
xchg
es
mov
inc
pop
sbb
insb
push
pusha
adc
dec
jmp
mov
xchg
or
mov
push
xchg
bound
mulb
mov
sti
cmpsb
or
movsb
fmuls
push
adc
and
mov
int
xchg
or
sbb
arpl
jno
into
cmc
xchg
in
mov
arpl
stc
lods
dec
inc
mov
mov
sub
neg
jl
cmc
aad
std
jo
loopne
adc
mov
fistps
test
fcmove
adc
dec
gs
or
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
jns
fidivrl
or
mov
ljmp
retw
jge
std
mov
add
cs
sbb
cmp
cwtl
jnp
and
push
shrl
sbb
mov
sahf
cs
xchg
cs
lds
add
push
je
testb
imul
push
adc
lods
or
mov
leave
push
pop
lods
jmp
in
lock
dec
outsb
xchg
aam
pop
out
cmpl
call
stc
mov
sahf
jbe
mov
stos
pop
adc
fisttpll
or
dec
mov
scas
scas
xlat
movsl
xor
mov
push
mov
cmpsb
jg
cmpsl
jnp
xchg
test
stos
ret
test
scas
out
mov
icebp
test
pushf
dec
mov
cmp
sub
and
cmp
lds
inc
aaa
stos
xchg
stc
sbb
pop
cmpsb
ss
aad
xor
leave
inc
xchg
popf
pop
dec
imul
inc
jae
addr16
aaa
push
sti
pop
xchg
push
pop
sbb
out
jns
xor
orl
out
lods
pop
dec
sub
test
out
pop
popa
adc
xchg
sysret
out
sbb
ret
jp
inc
mov
in
bound
xchg
test
aaa
xlat
push
das
pop
push
jnp
ss
into
or
and
fldl
popa
mov
pop
xchg
push
fildll
ret
inc
adc
lds
dec
mov
das
out
mov
flds
rcrb
mov
jno
xor
cmp
hlt
xor
gs
sub
call
int
fldcw
dec
mov
mov
incb
lods
imul
into
cmp
lcall
call
cmpsl
push
inc
add
fs
data16
repz
adc
xchg
inc
sbbb
jbe
pop
inc
xchg
cmpsb
jo
cmp
insb
out
mov
xor
sbb
aaa
cwtl
loope,pt
dec
cmpsb
icebp
add
ret
add
pop
xchg
jg
xchg
movsl
sbb
xor
xchg
ja
push
mov
movsb
add
fsubs
idiv
fsubrs
ss
popa
pop
cmp
mov
out
pusha
dec
je
or
les
push
push
hlt
inc
sub
sub
lcall
jnp
dec
or
shrb
inc
enter
out
dec
rcll
loopne
sub
dec
test
pop
jns
push
mov
dec
popa
adc
fdivp
inc
xchg
in
seta
xchg
push
lock
or
jg
enter
cmp
mov
cli
sbb
add
lret
lods
sub
xchg
test
fsubs
ss
pop
inc
adc
cli
inc
inc
std
stc
adc
stc
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
xchg
fcmovu
pop
stos
clc
and
movsb
leave
in
cmpsb
inc
add
iret
sti
std
cmp
cmpsl
seta
ror
pop
xchg
xor
call
out
cmp
movswl
sarl
mov
and
and
jmp
dec
push
pusha
or
rcll
mov
stc
scas
and
loopne
cmp
je
or
sbb
aaa
jno
in
stc
or
negb
mov
mov
sbb
std
leave
and
push
dec
jae
pop
les
cmc
jge
adc
lahf
ds
movsl
lahf
xchg
loop
sarb
jnp
out
jmp
xor
lret
pushf
dec
inc
add
mov
fsubp
sub
subl
movsb
rclb
dec
jbe
adc
xchg
add
push
fsts
out
aaa
push
fldcw
push
or
in
mov
cwtl
mov
jno
stc
icebp
sbb
pop
shrl
mov
iret
imul
pop
fcomps
xor
adc
ljmp
xor
add
xor
mov
mov
mov
ror
mov
mov
adc
movsb
imul
scas
fnstsw
pop
or
insb
dec
leave
add
sub
add
rcrb
cmpsl
push
sbb
cli
jmp
pop
sahf
and
push
scas
dec
jbe
dec
scas
cmp
loop
cld
loop
shr
mov
je
out
stos
das
inc
jg
sbb
std
xchg
mov
mov
or
bnd
dec
shrb
pushf
add
cmp
pop
jmp
inc
mov
out
jno
icebp
mov
out
arpl
shlb
push
push
mov
cmp
xchg
ss
xchg
push
mov
jne
fs
and
jl
in
movsl
mov
out
mov
sub
push
mov
lds
nop
xchg
out
cmp
int3
insb
inc
dec
push
and
dec
pushfw
test
sub
or
cwtl
mov
repnz
cmpsb
mov
aam
je
pushf
dec
test
mov
mov
int
popa
out
xor
mov
xchg
or
fadds
push
popaw
inc
sub
daa
sahf
aad
jecxz
jp
adc
lahf
adc
movsb
iret
and
pop
scas
js
out
decl
js
push
pop
jp
mov
test
push
inc
andb
outsl
pop
pop
imul
or
hlt
mov
xchg
fistl
sub
mov
xchg
or
and
pop
jno
xor
iret
xlat
cmp
or
stc
bound
clc
das
mov
and
dec
daa
movsb
hlt
mov
fildl
dec
jl
and
in
in
dec
mov
ret
pop
scas
stos
and
aaa
mov
push
sti
add
in
icebp
ficompl
pushf
pop
add
add
dec
pminub
add
push
dec
sti
shll
xor
cmp
cmpsl
or
and
cli
xchg
popf
ja
mov
lret
xor
sbb
xchg
in
cltd
fcompl
jmp
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
ljmp
adc
adc
xchg
enter
bound
cmp
pop
push
int3
mov
jecxz
pop
stos
pusha
pop
scas
inc
cltd
or
int3
push
out
in
push
mov
arpl
jp
sbb
lcall
fsubl
mov
incb
push
xor
push
xchg
out
push
jbe
dec
and
push
dec
icebp
mov
xchg
aad
push
sti
aam
mov
lcall
dec
in
es
sahf
xor
cmp
cwtl
shll
push
add
xchg
dec
je
push
jnp
xor
xlat
fwait
pop
cwtl
lods
stos
cmpsb
or
rcrl
add
dec
fcmove
test
mov
mov
xchg
rcrl
push
mov
or
ss
mov
mov
xchg
push
add
fs
adc
outsb
fwait
jbe
xchg
je
inc
fisubl
aad
jmp
insl
mov
mov
ds
incl
add
cli
pop
mov
loopne
mov
and
mov
fcomi
rorb
out
adc
test
movsb
enter
dec
inc
dec
sbb
push
stc
mov
adc
push
out
sbb
outsl
push
shrl
push
stos
xor
lds
outsb
push
fwait
shrb
rcl
add
test
push
nop
add
adc
cs
mov
rcl
cmp
ret
add
cs
sti
or
pop
sub
lahf
fcoms
fiaddl
push
inc
inc
sub
mov
jl
xlat
push
lcall
jmp
imul
mov
bound
sbb
shlb
std
fwait
sub
stc
jmp
dec
fs
imul
xor
mov
or
dec
cmpsb
pushf
rcrb
pop
jmp
imul
lcall
inc
test
pop
xor
fisubs
lea
insl
popa
jecxz
cmp
test
stc
subl
in
rcr
sbb
jge
jnp
lahf
mov
jle
mov
mov
sbb
and
pop
xchg
pop
repnz
loopne
int
jnp
loope
insb
xchg
sahf
out
mov
ss
jne
daa
popl
inc
das
mov
aaa
mov
lret
pop
sbb
out
mov
and
repnz
or
and
dec
sbb
and
jmp
out
add
mov
arpl
push
aad
mov
scas
xor
push
inc
test
pusha
sbb
and
and
shlb
leave
je
scas
dec
dec
jg
in
adc
adc
lock
stc
fisubrl
push
js
jecxz
sbb
push
pop
lods
and
dec
xchg
xor
lret
stc
push
into
inc
mov
and
aaa
out
sub
stc
xchg
in
lods
mov
mov
fistl
out
and
sub
repnz
sub
fcomip
cmp
adc
mov
pop
notl
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
loope
fdivrl
jp
adc
das
rorl
ljmp
dec
pop
mov
push
or
pusha
insb
xchg
fstps
inc
ja
notl
xor
or
pushf
xor
ficoms
lret
arpl
das
adc
jg
jns
lret
ret
dec
aaa
scas
stc
cmp
es
jg
inc
pop
push
test
ret
into
pop
add
je
inc
cltd
sbb
cmp
or
jnp
mov
sub
inc
or
hlt
imul
out
mov
or
add
cld
movsl
fisttps
out
push
push
mov
mov
subl
push
lea
in
jle
out
jl
aad
fistpl
into
dec
push
add
test
clc
push
dec
repz
mov
inc
int
dec
xchg
lods
hlt
add
push
sbb
sbb
cmpsl
stc
sti
fwait
lcall
gs
cmc
or
xor
mov
mov
pop
xor
xor
lcall
ret
xchg
sbbb
sbb
repnz
push
jae
pop
loop
sti
mov
mov
cmp
stc
nop
movsl
dec
int
inc
ds
test
sbb
dec
leave
mov
fwait
imul
popf
mov
in
jmp
call
mov
loope
xor
xor
mov
arpl
mov
popa
push
repnz
mov
ret
xor
in
mov
testb
xchg
dec
fcomps
arpl
jno
jecxz
xchg
dec
jnp
xchg
add
dec
mov
jp
xchg
jbe
outsb
xchg
push
inc
test
shll
loop
cs
daa
or
popf
pop
cmc
jae
xor
cmp
inc
inc
je
xchg
nop
inc
push
testb
aam
xlat
cmpsb
cmp
rcll
mov
iret
xlat
mov
int3
sub
idivb
ja
mov
loopne
jmp
mov
push
and
jp
sbb
movsl
movl
cmp
shlb
sbb
pop
xor
jns
popf
mov
add
ljmp
cmp
imul
push
xor
movsb
iret
jecxz
push
pop
shll
xor
sbb
cmpsb
call
stc
xchg
dec
push
pop
arpl
sub
idiv
sub
mov
mov
lds
movsl
jae
jecxz
push
out
aad
sbb
mov
adc
sub
rol
rcl
mov
fstpl
adc
pop
xor
cld
xchg
ljmp
or
mov
jg
mov
cli
scas
pop
roll
mov
sub
adc
adc
add
idivl
mov
in
push
scas
stos
ret
addl
int
xchg
xor
dec
inc
fldt
sub
std
jae
leave
sbb
ss
imul
enter
xor
aad
imull
cwtl
fcmovbe
pusha
cmp
jne
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
xor
pop
push
adc
jp
adc
mov
xor
sbb
pop
stc
and
icebp
int3
jle
loope
test
bound
or
enter
and
bound
push
jp
cmp
adc
cltd
sti
imul
leave
les
pusha
jecxz
lcall
xor
or
jne
dec
inc
cli
pop
and
mov
lcall
xchg
scas
cmp
xchg
inc
sti
mov
push
pushf
dec
in
mov
push
jns
jp
dec
adc
xor
cltd
and
lret
test
test
int3
scas
or
sbb
adc
xor
rcrb
test
ss
int3
adc
js
rcrl
mov
pop
mov
sar
test
mov
mov
fiaddl
and
fisubrs
xchg
sub
jbe
pop
adc
es
mov
popf
popf
ds
or
cmp
push
pop
incl
lea
jmp
jb
in
cmp
mov
popa
or
xchg
mov
cmp
inc
ret
pop
or
je
inc
sbb
inc
inc
pop
mov
xor
call
aaa
orb
xchg
aaa
in
lods
icebp
outsb
aad
stos
mov
push
clc
mov
dec
data16
pusha
mov
xchg
sarl
and
add
negb
repz
andb
add
pop
arpl
insl
sarb
roll
insb
repnz
test
je
mov
ret
scas
pop
xchg
add
xchg
xchg
movsl
jl
mov
or
cwtl
cltd
gs
pop
cld
stc
xor
add
and
xchg
mov
cmp
mov
mov
sub
push
outsl
fldl
xchg
lcall
xor
pop
sub
pop
int
leave
les
pop
xor
ljmp
inc
mov
sub
clc
shll
scas
hlt
adc
adc
add
js
shlb
pushf
leave
push
mov
gs
call
ljmp
out
mov
sahf
dec
sub
pop
or
push
ret
adc
push
and
xor
xchg
xchg
cmp
jecxz
mov
sahf
push
dec
jne
push
push
push
dec
std
pop
ret
add
in
sbb
jl
loop
xor
cmp
clc
sahf
mov
or
pop
mov
sbb
dec
pop
lods
dec
ljmp
lahf
inc
mov
ja
adc
xchg
clc
fwait
ja
mov
lock
push
jg
mov
mov
outsb
or
adc
mov
jb
pop
mov
add
adcb
inc
inc
es
push
jle
jmp
jbe
xchg
mov
dec
jp
stos
mov
out
fwait
int3
adc
outsb
dec
push
pop
mov
test
fbstp
sub
dec
push
aad
mov
sbb
jb
idivl
iret
mov
mov
jno
sbb
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
sarl
inc
adc
lea
adc
or
mov
je
mov
pop
cmpsl
mov
pop
rorl
xor
pusha
enter
adc
dec
cmp
and
imul
mov
xchg
mov
jg
pop
fwait
and
pop
sbb
mov
adcl
adc
out
dec
mov
mov
and
cld
push
rol
jno
stos
das
dec
xchg
ss
push
stc
add
or
xchg
cltd
addr16
inc
scas
adc
xor
addr16
dec
jmp
add
sbb
or
lock
lea
jb,pt
ss
nop
sysret
stos
mov
mov
push
idivb
lock
mov
mov
lds
push
jge
std
js
inc
xor
fcmovnb
sbb
sti
mul
xchg
sarb
xchg
repz
pop
jg
inc
addr16
int3
icebp
xor
sub
pop
test
jp
push
adc
push
xchg
sub
paddusw
ljmp
push
outsb
cmpl
pop
adc
jne
jns
push
shlb
leave
out
add
inc
rclb
jmp
and
or
xor
push
mov
hlt
lret
sub
in
push
mov
mov
or
push
dec
adc
jle
mov
mov
sub
int
ja
pusha
mov
xchg
cmp
or
pop
inc
sahf
or
les
arpl
mov
aad
shr
inc
leave
sub
dec
sub
outsl
push
or
and
ficoml
lahf
mov
xor
mov
jl
pop
outsb
sub
push
mov
mov
sbbl
test
out
negl
sub
fidivrs
aas
cmpsb
inc
rolb
orb
call
loope
mov
cmp
lock
mov
mov
leave
xor
sbb
mov
push
mov
out
out
dec
imulb
fisubrl
cmc
push
pop
fdivrp
fisttps
outsl
adc
es
cmc
orl
jle
or
ja
testb
xor
adc
inc
and
pop
mov
es
fidivrs
loop
mov
push
sbb
mov
ret
aam
xor
inc
loop
mov
lahf
cmp
fsubrl
fnstenv
sbb
jae
xor
loop
in
cmp
in
xor
adc
sbb
pop
lret
and
dec
test
add
mov
mov
pop
or
pop
ret
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
cmp
pop
inc
sbb
fsubrs
ja
outsl
lcall
push
push
inc
or
adc
mov
addr16
fwait
outsl
xchg
or
jb
jl
fldt
in
xor
mov
xchg
aad
sub
sbb
and
mov
push
xchg
lods
xchg
fdivrl
xchg
repnz
daa
jg
out
daa
add
pop
sahf
nop
int
decb
jo
or
and
iret
int
stc
pop
clc
enter
mov
push
mov
sub
push
mov
into
cmp
dec
clc
jge
or
mov
add
inc
adc
stos
push
stos
ret
out
mov
push
ja
jb
sub
fwait
ja
sbb
jo
rorb
xchg
mov
loop
pushf
add
mov
jb
push
jmp
jle
sbb
pop
popf
ret
inc
pop
imul
jg
push
mov
push
push
addr16
fdiv
lahf
jae
idiv
test
je
shrb
inc
inc
mov
and
cltd
mov
or
popa
lahf
out
sub
mov
cmpsb
rolb
xor
ficoml
and
push
mov
add
clc
sub
and
aam
mov
pop
mov
push
add
dec
xchg
cmpl
xchg
inc
ja
mov
lret
and
mov
sbb
popa
rcll
and
push
sub
or
jmp
in
sub
fldl
push
insl
enter
xor
sarb
mov
dec
jge
out
jno
les
jbe
jbe
ss
outsl
out
push
xchg
ret
mov
pop
cmpsl
mov
imul
ficoms
sub
inc
icebp
sub
pop
lcall
mov
jne
push
cli
mov
test
add
dec
sahf
int
lods
sub
std
jle
ljmp
adc
jge
fmul
mov
cs
mov
adc
cmp
and
jmp
inc
out
je
push
stos
mov
add
push
mov
fs
jmp
lcall
push
push
xlat
shrb
mov
stos
lds
mov
enter
adc
mov
xchg
sbb
ret
mov
scas
ret
test
cmpsl
scas
dec
dec
icebp
adc
jl
aad
xor
out
fwait
jge
inc
push
xor
bt
andl
repz
mov
shlb
ror
rolb
push
and
enter
movb
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
add
cmpsl
xchg
dec
outsl
xor
add
xchg
xor
push
dec
ja
repz
jg
cmp
and
mov
xchg
iret
cmpsb
sbb
sub
in
mov
mov
nop
mov
icebp
andl
cld
js
jle
mov
int
lea
in
ret
sub
jne
mov
stos
push
enter
test
sub
xchg
adc
out
add
or
dec
test
jg
sbb
add
lahf
cmc
ds
inc
add
popf
stos
ja
repz
jle
and
or
push
lret
xor
into
jnp
rcrl
mov
cmc
pop
push
sub
cwtl
dec
xchg
pushf
fs
dec
lock
in
adc
dec
test
push
int
lret
dec
mov
sub
mov
inc
rclb
fisubl
cli
dec
sub
inc
arpl
outsb
cli
adcl
add
pop
ss
jp
loope
or
dec
dec
shrb
add
pop
cmc
sbb
lahf
in
lea
mov
sti
bnd
arpl
cmp
je
iret
xchg
mov
sub
add
movsl
sbb
push
pop
push
shl
sub
cmp
das
mov
hlt
in
xor
jae
push
frstor
out
clc
mov
testb
mov
inc
pop
fldl2e
mov
out
add
adc
mov
movzwl
xor
pop
push
and
outsb
or
push
cmp
mov
iret
iret
cltd
xchg
js
cmc
and
rcrl
ds
mov
jge
test
fwait
mov
shlb
scas
dec
rolb
pusha
jne
jbe
pop
cmpsl
push
jp
mov
jbe
pop
repnz
das
in
shl
pop
fistps
adc
iret
outsb
cmp
inc
mov
inc
test
mov
inc
jecxz
mov
andb
cs
loopne
fidivrl
arpl
pop
xchg
sbb
mov
jl
dec
inc
sbb
push
and
jp
inc
data16
sub
outsl
push
inc
stc
andb
mov
xor
xor
add
stc
dec
fcmovnbe
inc
and
into
stos
mov
sbb
lret
sbb
int3
sub
loop
pop
inc
and
ret
sub
fisubl
xor
sub
mov
push
sub
out
fiadds
call
movsl
stos
and
mov
push
repz
pop
cmp
push
xchg
ss
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
lahf
lret
aaa
adc
lea
adc
sub
cld
gs
mov
jp
fisubl
fisttpl
mov
mov
in
mov
lahf
jns
jecxz
sbb
ret
arpl
pop
out
fdivrl
rdpmc
fucom
jae
repnz
pop
or
movsb
jmp
shll
adc
mov
mov
mov
testb
or
and
sub
xorl
mov
or
shrb
mov
pop
inc
into
aam
in
cmpsb
or
mov
outsl
pushf
shll
xchg
out
sub
fidivs
testl
ds
mov
cmp
add
mov
sbb
dec
dec
jg
cmp
fsubrs
jb
adc
inc
aas
pop
jno
repz
mov
mov
jl
dec
mov
aam
lods
repnz
mov
nop
and
xchg
fld1
lock
jecxz
es
xchg
inc
and
out
add
std
mov
jmp
es
mov
jecxz
outsl
leave
jo
xor
jae
push
mov
jb
dec
insl
adc
xor
xor
insl
xlat
dec
jl
les
pushf
mov
push
xlat
push
pop
jo
mov
jl
in
shl
xchg
inc
repnz
loope
daa
loope
ret
js
pop
pop
es
xchg
and
arpl
add
jg
or
je
inc
xor
pushf
mov
inc
shrl
dec
mov
dec
jo
dec
jb
out
pop
daa
lea
adc
incl
inc
mov
cmpl
jb
shll
dec
fists
sbb
addr16
test
repz
pusha
mov
test
push
inc
arpl
jmp
fidivrl
cmp
daa
sub
dec
cli
jo
nop
cs
cmp
ret
popa
movsb
stos
cltd
mov
fisubrs
or
fldcw
sbb
inc
mov
xor
es
and
inc
or
hlt
pop
in
out
mov
cli
dec
inc
out
ret
pop
lret
and
push
insb
xor
sub
icebp
rcl
fdivrl
mull
mov
arpl
or
adc
sbb
test
mov
rorl
and
leave
inc
shlb
and
test
dec
push
cmp
push
outsl
jne
xchg
jmp
sub
inc
mov
addr16
fisubrl
adc
in
mov
cmp
sahf
or
cwtl
int3
cmpsl
dec
insl
ds
xor
sarb
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
xchg
js
xor
adc
mov
sub
mov
fldcw
rorl
mov
sub
sub
add
pop
or
dec
pop
pop
push
jno
push
fmull
add
adc
sub
imul
std
inc
adc
jo
rcll
xchg
inc
mov
sub
or
in
sbbb
gs
mov
mov
dec
mov
stos
adcb
es
fsub
ret
mov
push
in
cmc
jge
repz
leave
pop
rcrb
scas
and
rorb
jbe
inc
aas
mov
lods
jp
sti
test
adc
cmp
sub
cmp
cmp
lret
std
outsb
pusha
lds
cmpsb
pop
jecxz
popf
xchg
gs
enter
sub
jns
xor
daa
daa
ljmp
je
xchg
outsb
test
das
jecxz
jp
xchg
div
pop
int
or
xor
fisubs
outsb
hlt
sti
rcrl
fnsave
outsl
or
clc
add
inc
gs
cltd
jg
scas
xor
enter
or
stos
sbb
mov
cwtl
ret
inc
jbe
inc
xchg
and
mov
not
pop
inc
push
loop
mov
pop
dec
sub
ror
testl
std
push
mov
aaa
mov
mov
xor
in
arpl
fdivl
jnp
clc
inc
fcom
xchg
pop
dec
stos
negb
xor
mov
pop
and
int
xlat
mov
push
repnz
int
cwtl
movsl
repz
fwait
jo
pop
adc
pop
cli
pop
cmp
stos
movsb
add
mov
out
dec
sbb
mov
cmc
dec
fiaddl
inc
lds
or
push
add
sub
push
sbb
dec
xor
loopne
cmc
dec
mov
or
in
loopne
or
sub
inc
adc
aas
lcall
repz
mov
iret
aam
cmp
xchg
cld
sbb
xchg
mov
xchg
call
call
fldl
and
test
out
xor
mov
imul
out
fstl
jns
and
fdivrl
sti
les
pop
lods
xor
jns
pop
aad
insb
lea
xor
xor
cmp
adc
lahf
xor
lret
xchg
out
pop
jl
xchg
aad
adc
aam
out
jmp
pop
xchg
sbb
fildll
cmp
xlat
jns
xor
mov
insb
fbld
jp
dec
fsubr
sbb
xchg
or
jns
add
or
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
rclb
adc
in
das
sbb
dec
jl
or
adc
adc
lods
je
cli
scas
lret
push
dec
mov
jns
jmp
pop
add
add
push
nop
or
sub
adc
clc
cwtl
mov
jne
or
push
je
aad
mov
jg
pop
clc
jbe
or
mov
lds
out
nop
add
xchg
incb
cmp
les
push
ss
out
in
jg
inc
inc
mov
out
sub
fidivl
mov
inc
arpl
add
cmc
push
in
xchg
and
jae
mov
sahf
and
mov
add
inc
int3
andb
jo
outsb
in
pop
pop
inc
dec
jnp
dec
sbb
ds
xchg
int3
test
mov
xor
inc
dec
pop
std
dec
mov
out
dec
stos
aam
jnp
jmp
or
push
test
lea
mov
jbe
and
or
jmp
sbb
add
push
pop
xlat
icebp
mov
push
int
cmp
cmp
mov
test
and
out
mov
hlt
lahf
xlat
mov
sub
adc
cwtl
int
pop
stc
clc
pop
add
aaa
jp
js
call
mov
scas
mov
iret
arpl
pop
inc
fsubrs
mov
cs
xchg
fnstenv
jne
dec
push
xchg
mov
push
ret
fstl
data16
mov
es
adc
xor
clc
push
inc
rorb
in
jnp
sbb
xor
nop
in
enter
cmp
xchg
daa
cltd
loopne
sbb
bound
sti
pop
call
das
lret
in
aam
add
arpl
enter
divb
lea
fwait
hlt
mov
push
jne
push
pop
dec
mov
mov
lds
jge
push
dec
jle
jo
fisttpl
xor
fcmovu
imul
mov
or
ret
mov
ret
pop
cmp
scas
movsb
leave
test
jns
lea
inc
mov
xor
mov
push
or
pop
ss
and
cmpl
jb
jmp
pop
mov
pop
or
fidivrs
lret
movsb
lock
daa
push
arpl
xchg
or
inc
scas
in
jnp
sbb
pop
xchg
loope
lcall
xor
mov
mov
fimuls
add
push
jmp
fimuls
push
insb
jp
nop
sub
test
ss
xor
add
push
jg
stos
and
add
push
push
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
inc
pushf
lods
xor
adc
lea
adc
add
push
pop
das
mov
or
sub
xor
subl
xor
mov
push
lods
pop
pop
jne
and
and
in
aad
sub
cs
pop
rorb
mov
jae
or
push
xchg
std
fsubrs
xchg
pop
cs
cmp
mov
pop
xchg
in
mov
andl
mov
out
in
cmp
jne
mov
push
jae
cmp
add
push
cmp
into
filds
cwtl
aad
xchg
cmpsb
add
add
fsts
icebp
xor
xor
jns
fmulp
jge
mov
or
pop
ds
stc
leave
xchg
adc
loop
test
lret
xorb
dec
pop
mov
in
icebp
or
stos
push
dec
mov
xchg
push
mov
inc
or
jl
cmp
ret
into
inc
pusha
subl
jl
int3
adc
pop
lret
xchg
ret
jmp
adc
insl
push
add
outsb
jl
out
cmp
loope
iret
mov
es
cmp
mov
lock
mov
push
sbb
int
aaa
mov
pop
out
xor
cmpsl
in
sbb
fldenv
iret
inc
adc
pop
les
jmp
outsb
xchg
xor
xor
nop
ja
push
dec
popa
outsb
jae
inc
dec
add
dec
push
nop
ret
mov
mov
outsl
sub
mov
mov
bound
jnp
scas
push
sub
add
ret
movsl
sub
or
jae
adc
movsl
push
jne
pop
pop
cld
add
push
cmc
push
fcoml
adcl
adc
ja
stos
dec
adc
sahf
inc
mov
je
into
cmp
lds
xchg
aam
sarb
mov
cld
aad
dec
in
push
jb
and
stc
cmc
cmp
sahf
popa
into
sub
dec
ss
dec
xor
pop
inc
xchg
pop
jge
jb
xor
xchg
jge
lret
mov
std
adc
cmpsb
push
stc
int3
es
jle
lret
mov
stos
mov
pop
fisubrl
mov
adc
flds
push
adc
jb
mov
cmovp
and
call
movsb
add
in
cmc
jnp
hlt
jmp
inc
mov
lock
inc
ljmp
or
leave
rcll
int3
sbb
loope
xorl
cmp
or
rcll
fimull
enter
pop
mov
push
loope
mov
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
push
leave
insb
loop
out
push
and
ja
aad
push
lds
xchg
imul
mov
adc
inc
add
jp
incl
xor
out
rolb
dec
sti
cltd
and
inc
mov
loope
arpl
push
xchg
mov
rorl
jo
cld
test
sub
fbstp
movsl
mov
shrl
mov
fst
outsl
adc
dec
clc
orl
inc
xchg
sub
pop
xchg
jg
xchg
sbb
or
clc
dec
inc
inc
sbb
mov
or
iret
clc
pop
cmovl
jmp
adc
adc
lcall
fnstenv
repnz
push
cwtl
lock
out
cmp
enter
cmp
dec
lods
cmc
xchg
mov
addr16
add
into
movsb
popf
es
mov
jmp
jg
lahf
or
pop
out
insb
push
and
xchg
fstps
shlb
mov
fwait
das
pop
scas
mov
movsl
cmp
shll
ljmp
test
mov
push
shll
int
call
jne
xchg
jp
xchg
push
jo
sbb
adc
test
orl
in
sub
dec
loopne
xchg
jo
xchg
mov
testb
cwtl
addr16
xor
pop
and
xchg
pop
insl
fs
lahf
jne
outsl
loopne
inc
pusha
lods
ret
mov
sub
insl
lcall
orl
jae
sbb
mov
mov
push
xchg
pushl
pop
dec
test
sbb
jne
arpl
ja
sarl
jne
mov
and
movsb
and
push
fs
clc
stos
sbbl
addr16
lea
adc
mov
sbb
push
out
js
fprem
add
add
cmc
cli
cmp
ret
in
test
or
and
or
shlb
adc
cli
lods
sub
xchg
inc
xchg
std
call
repnz
xchg
adc
xor
xchg
jns
or
fs
mov
xor
jl
add
lahf
repnz
inc
movsl
iret
stc
xchg
mov
fcmovu
sbb
into
int3
cmpsb
repnz
and
push
pushf
jle
dec
and
jp
cmp
je
rolb
loope
or
movsb
aas
fwait
mov
adc
push
or
jne
shll
ret
jns
jo
xlat
scas
jmp
shrl
mov
or
push
add
incb
mov
cmpsl
dec
mov
pop
mov
jge
sti
lods
shrb
aas
jg
pop
movsb
xchg
push
mov
ret
mov
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
jb
push
sbb
adc
mov
addr16
or
ds
mov
roll
cs
in
pop
xchg
add
test
outsb
mov
add
or
dec
pop
loop
adc
jbe
roll
popa
hlt
aaa
rorl
in
pop
pop
movsl
int3
push
sbb
jmp
adc
leave
mov
std
or
loope
push
adc
popf
dec
shrl
xor
adc
filds
inc
mov
adc
lret
jmp
bound
stos
addr16
dec
cmp
sub
lods
xor
cld
jecxz
jns
call
icebp
jge
testl
mov
or
jns
or
loope
xor
sbb
or
cs
mov
loopne
sbb
pop
mov
push
xchg
cmpsb
inc
mov
inc
neg
pusha
pushf
fldl
adc
mov
pop
xchg
add
and
adc
cmp
jns
jge
jl
pop
inc
hlt
arpl
mov
sub
lret
xchg
data16
xor
dec
lods
mov
sbb
xor
pusha
dec
testb
pop
sbb
push
andl
push
imul
subl
enter
inc
rcrl
inc
out
or
xor
icebp
outsl
mov
or
cld
adc
stc
movsl
add
dec
adc
jp
imul
jnp
mov
test
ljmp
jae
leave
xchg
mov
pushf
mov
xchg
inc
fimull
xor
loopne
cwtl
mov
push
sbb
adcb
les
and
mov
inc
repz
aad
sbb
jp
jne
fadd
test
mov
adc
or
ljmp
sub
les
mov
dec
cmp
insl
aas
mov
jno
aas
jb
call
mov
cmc
xorb
inc
pop
subl
int
sbb
dec
sub
fsts
rclb
test
repz
push
mov
pusha
adc
pusha
mov
mov
test
repz
imulb
jb
fcompl
dec
je
jl
push
das
imul
clc
mov
and
xor
leave
cwtl
jmp
fildl
imul
or
pusha
xchg
pop
adc
loopne
xor
adc
out
scas
push
test
add
orl
add
enter
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
xchg
nop
sbb
adc
sbb
pop
dec
xor
rcr
shll
jg
popa
or
jl
imull
in
ret
adc
sarl
push
mov
mov
cmp
in
pusha
inc
popf
nop
inc
in
ljmp
and
inc
cmp
dec
push
cmp
xchg
push
call
loope
lret
nop
mov
loope
jge
jmp
sub
sub
frstor
mov
inc
xchg
ljmp
or
cmp
xchg
inc
rcl
ja
stos
push
mov
mov
and
int3
fcomps
inc
mov
lds
lock
jge
adc
aaa
cmp
fdivs
js
mov
int
call
pop
push
or
lock
inc
es
cs
cmp
in
push
insb
cmp
nop
and
mov
imull
push
loop
stos
xlat
fwait
enter
fst
sub
jl
sti
jb
dec
or
xor
pop
sbb
subb
push
out
ret
stos
add
and
clc
mov
lods
adc
sbb
stc
loope
lret
repz
push
pop
xchg
push
iret
hlt
mov
hlt
jns
aad
shrl
or
lret
lahf
nop
das
add
lea
test
add
push
cmp
fmuls
inc
jle
push
inc
or
outsb
xchg
fiadds
dec
test
and
add
imul
xor
mov
hlt
push
int3
sbb
lds
or
daa
mov
jb
cmc
in
adc
cmp
adc
xchg
xorb
jbe
add
in
jge
pop
adc
xchg
dec
fdivrs
std
inc
adc
adc
push
mov
sbb
sub
sbb
fs
sub
les
pop
jbe
push
adc
adc
push
stos
inc
sub
mov
jg
sahf
mov
and
inc
sarl
aas
mov
in
shl
add
aad
arpl
mov
or
jl
or
sbb
stos
iret
imul
jae
adc
mov
or
or
jns
mov
dec
jp
mov
xor
negl
lret
imul
lock
insl
mov
out
xor
mov
fsubrs
cs
cmpl
mov
mov
mov
aas
loopne
in
sub
andb
jge
cmp
push
pop
adc
call
add
lcall
je
outsl
fiadds
divl
adc
inc
add
lods
imul
jmp
jns
addr16
mov
out
rcll
jo
jl
mov
in
mov
xor
inc
pmuludq
push
adc
or
mov
js
repz
mov
inc
cmp
mov
pop
or
add
js
cmp
or
lock
test
jecxz
leave
sub
into
inc
pop
mov
es
cmp
or
hlt
js
rcrb
fcomps
mov
popf
fstpt
rcrb
sahf
mov
arpl
mov
cmp
dec
imul
lods
ss
adc
in
jecxz
cmp
push
leave
and
mov
add
pop
mov
sbb
mov
jmp
cmp
and
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
jo
stos
aaa
unpckhps
mov
imul
dec
sbb
mov
nop
out
in
push
adc
add
aam
lcall
lea
pop
sbb
cmp
mov
or
icebp
out
int3
lock
ret
ret
or
jne
lods
add
outsb
out
mov
mov
inc
jne
add
sbb
int
lea
or
stos
push
jg
iret
pop
lock
pop
jne
inc
nop
gs
mov
clc
mov
mov
xor
fldt
inc
cmp
or
ret
sub
or
fnstcw
aas
insb
sbb
mov
add
fisttps
addr16
xor
xchg
lods
sti
mov
stos
int
fistpl
in
mov
mov
popf
dec
push
es
movsl
je,pt
pop
scas
shrb
cs
bound
es
and
jecxz
daa
js
loopne
lret
shl
jne
rorl
pop
stc
adc
ret
mov
xchg
mov
in
rorb
push
mov
fs
int
mov
push
sbb
push
push
scas
or
ss
mov
imul
dec
lea
pop
mov
mov
cwtl
mov
sbb
call
sub
mov
sub
shr
stc
fidivrs
sub
scas
dec
and
aad
sub
ss
shrb
jl
add
push
push
or
jne
jnp
mov
test
test
adc
pop
add
or
pop
push
aaa
into
mov
pop
stc
mov
into
ret
icebp
mov
out
sarl
js
cmpb
in
pop
or
push
aas
repnz
aad
shlb
lret
jbe
jecxz
ret
jnp
stc
dec
push
inc
into
and
push
mov
and
mov
orb
imul
push
inc
adc
jae
jbe
in
sub
loop
sbb
sub
xchg
pop
inc
fimull
dec
fstpt
imul
mov
sub
mov
nop
in
js
or
mov
cmp
add
sbb
das
test
jne
sbb
pop
das
dec
mov
inc
popa
pushf
ja
pop
aad
sbb
inc
cmp
cmc
test
in
sbb
mov
pop
xchg
sbb
or
jno
cmp
nop
and
jle
jl
lock
push
pop
dec
sbb
test
outsb
or
push
or
clc
pop
push
dec
cli
cmp
xor
mov
jg
sbb
sbb
mov
lret
rcrb
je
hlt
or
iret
inc
insb
push
insb
push
mov
cmp
push
ret
je
add
mov
mov
dec
rclb
mov
out
mov
sub
sub
fbstp
mov
sub
mov
fsubr
lret
jbe
push
pop
jo
in
mov
xchg
out
test
xchg
in
rclb
inc
mov
mov
popa
lds
fstpl
jmp
pop
lret
sub
not
subb
rorl
das
xchg
adc
out
enter
xor
dec
jge
xlat
dec
cmp
aad
lret
fildl
in
pop
sub
cs
arpl
and
xlat
add
call
add
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
cmp
fistpll
and
cli
xor
add
loopne
push
xorl
outsl
mov
cs
inc
repnz
mov
fwait
dec
stc
and
fnstcw
push
push
test
ds
mov
sbb
and
popf
loope
insl
ds
std
lret
scas
jecxz
shlb
popa
xchg
dec
dec
or
pusha
adc
add
cld
sub
jmp
and
ret
mov
lock
xchg
lods
push
scas
mov
dec
xor
adc
xlat
cmp
aad
and
jg
mov
lret
subb
loop
js
mov
adc
sti
out
sbb
call
and
cld
test
lea
pop
jmp
lock
fistpll
jno
xbegin
orb
adc
cmpsl
fwait
add
bnd
rcrb
test
mov
adc
jb
jl
xchg
add
lds
dec
xchg
pop
or
es
sbb
add
sub
xor
xchg
mov
mov
outsl
shlb
xchg
in
imul
inc
adc
sarb
and
in
rcll
xchg
repz
adc
push
pop
fisttpl
xor
cmp
sarb
and
pop
mov
and
dec
ljmp
jae
loop
dec
xchg
mov
and
fcomps
dec
jp
leave
dec
fsubp
mov
xor
lds
shll
and
movb
pusha
xchg
loope
popf
das
cmp
sbb
dec
in
loopne
pop
sub
and
mov
mov
or
pop
sub
sar
xchg
mov
cmp
js
cld
jecxz
dec
ret
jg
jns
loop
icebp
add
lods
cmp
push
ffreep
mulb
jae
roll
fiadds
sub
cmp
add
push
insb
mov
adc
xchg
xor
test
xorb
mov
mov
push
push
mov
es
sub
addb
gs
pop
cs
enter
xchg
xor
nop
fisubrs
or
pop
popf
aad
mov
mov
enter
and
push
mov
push
and
sbb
cmp
jbe
add
xchg
mov
test
aam
xor
or
cltd
out
aaa
cmpsl
leave
pushf
xchg
sub
mov
outsl
and
cmp
cmp
insb
add
popa
mov
jbe
push
mov
jnp
jo
pop
or
insl
pop
push
aas
std
mov
dec
jne
mov
inc
mov
cmp
clc
outsl
xchg
sub
jecxz
ret
popa
dec
hlt
popa
pop
sti
lahf
inc
loop
mov
pop
repz
insb
cmpsl
jnp
jae
mov
enter
insb
mov
aam
ret
mov
testl
mov
xor
adc
pushf
mov
pushf
out
pop
jge
sub
int
incl
lock
loope
lret
pop
faddl
cmp
cmp
xor
push
xchg
jg
mov
xchg
mov
shrb
mov
insb
rorb
js
aam
mov
fidivs
loope
push
jns
sub
aaa
sub
je
es
jle
in
in
lods
pop
paddusw
call
pop
mov
jnp
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
call
adc
and
cmc
sub
jge
mov
int
stc
dec
fnstenv
dec
mov
xlat
mov
xchg
hlt
cld
movsb
or
mov
cmp
jecxz
test
lods
aad
ret
inc
loopne
cmp
jmp
aad
fstps
lea
sbb
push
clc
mov
add
pop
icebp
sbb
fbstp
pop
and
pop
or
repz
das
mov
xor
or
mov
aas
dec
cmpsl
push
cmp
out
pop
add
dec
arpl
push
pop
in
jo
and
or
inc
lods
inc
pop
xchg
movsl
fisubs
movsb
les
cmpb
inc
sti
pushf
xchg
mov
fsubr
adc
movsb
sti
sub
cmc
inc
adc
mov
cmc
pop
les
sub
mov
int3
cmpl
mov
faddl
movsl
pop
lahf
add
add
xor
sub
arpl
stc
cmp
add
mov
imul
jno
push
push
icebp
sub
push
fidivl
adc
repnz
jae
sbb
fiadds
mov
sbb
push
cs
push
jns
test
fcmovnb
push
mov
stos
andb
push
dec
sub
cmpsl
js
push
aaa
pop
ljmp
arpl
ss
clc
xchg
xor
sbb
aaa
lcall
inc
push
ds
ss
inc
dec
lock
mov
mov
push
addr16
cmc
push
ret
mov
cmp
pop
fs
jg
cld
xor
call
and
push
sahf
fisttpl
rcll
push
outsl
jl
jbe
sarb
dec
jmp
test
jno
push
stc
cmp
mov
outsb
dec
xor
scas
jbe
leave
les
jo
mov
in
clc
data16
pop
and
add
sub
pop
inc
out
xchg
int
xchg
xchg
mov
outsl
push
out
dec
mov
pop
repz
mov
or
adc
mov
mov
push
scas
shll
cmp
or
movsl
jp
jge
push
fisttps
shll
push
das
pushf
fcomps
jns
shl
fadds
frstor
mov
jecxz
adc
sub
jge
fistl
movsl
popa
inc
fistl
or
xor
in
rolb
mov
cwtl
sarb
mov
fisubrl
into
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
jle
std
adc
adc
jp
in
out
xor
lea
ds
sub
add
jg
ljmp
xchg
lods
pop
push
inc
fisubs
mov
rorb
pop
push
lock
nop
pop
sahf
xchg
les
loope
out
clc
fcmove
and
pop
jle
push
mov
loop
dec
in
out
mov
ret
jl
cmp
in
pusha
popa
jge
adc
mov
int3
cmp
lret
scas
bound
mov
mov
jae
jecxz
jno
stc
rorb
pop
fstl
in
push
pop
cmp
mov
jle
hlt
iret
cwtl
adc
mov
shl
out
in
rcrl
rorl
imul
or
xlat
bound
mov
in
popa
mov
daa
add
out
and
pop
insb
ss
movl
dec
in
inc
jbe
std
dec
or
jae
mov
inc
xchg
fsubrl
in
adc
mov
xchg
cmp
aaa
aaa
call
cmp
fdivrp
nop
vpmacssdql
and
jmp
lret
into
sbb
insb
fwait
mov
sub
loope
jmp
mov
xor
xchg
out
and
mov
out
frstor
ret
std
push
lret
jl
or
pushf
cmp
lret
mov
pop
or
inc
fstpt
rorl
add
test
inc
call
cmp
popa
aam
into
dec
xchg
jl
mov
std
xor
shr
outsb
in
ficomps
add
jecxz
or
clc
dec
ficompl
push
mov
mov
cli
add
js
jne
fldt
out
lods
xchg
or
sbb
or
fdivrs
cmpl
cmp
call
bound
mov
inc
cmp
cmpsl
push
js
xchg
test
fistl
sti
or
push
roll
lods
mov
insl
aad
xchg
mov
push
push
add
out
mov
inc
popa
inc
sahf
mov
fs
insb
test
push
popa
out
mov
mov
ret
lret
pop
cld
dec
das
xor
cmp
rorl
rolb
push
int
xlat
jmp
icebp
sarb
int3
sbb
cs
sub
mov
push
pop
addb
out
test
repnz
pop
les
pop
mov
adc
test
push
mov
pop
push
hlt
fwait
push
rcrl
pop
mov
dec
jbe
ret
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
sahf
sahf
lods
cmp
adc
inc
rdmsr
push
dec
fdivs
jle
fxch
lret
push
rorb
pop
mov
jbe
jge
add
mov
inc
jp
fstpl
xchg
pushf
ret
mov
push
and
mov
sti
ja
testb
stos
ja
mov
out
inc
sti
scas
aas
clc
clc
xchg
inc
jecxz
cs
xor
addl
jmp
xchg
sub
shrb
imul
out
imul
rorb
leave
cmpb
js
aas
sahf
push
inc
aad
data16
fidivrl
outsl
pop
inc
xor
jno
movsb
cwtl
lret
mov
sbb
sbb
and
fnop
push
call
lea
daa
and
sahf
loopne
pop
add
stos
ret
jae
repz
jmp
xchg
out
push
pop
stos
lahf
aad
mov
jns
aas
imul
pusha
xchg
lahf
jnp
jge
adc
jne
cmpsb
mov
inc
lods
xchg
shll
inc
sbb
not
rcl
add
adc
roll
jno
jo
push
imul
add
shll
mov
ffree
popf
jne
push
add
nop
ds
lret
pop
add
enter
aas
mov
and
mov
jp
dec
andb
imul
xchg
inc
inc
test
fidivrs
rcl
jnp
ss
pop
mov
shr
call
mov
xchg
add
lock
or
ja
inc
mov
stos
test
movsb
add
cmpl
push
sub
mov
jbe
sahf
sahf
xorb
cmpsl
adc
xor
mov
push
mov
add
or
push
and
insb
aad
add
icebp
inc
outsl
add
lock
fisubrl
mov
movsb
jl
lods
ljmp
icebp
inc
push
add
jb
and
inc
sbbb
pop
push
dec
insb
mov
xor
jl
jp
push
sbb
mov
xor
inc
mov
stc
push
mov
nop
jne
sub
roll
fs
mov
push
insl
cmp
fs
jns
sbb
iret
fdivrl
les
dec
mov
gs
pop
insl
dec
jne
adc
fwait
xor
xchg
pop
xchg
cwtl
clc
js
idivl
dec
ret
adcb
std
sbb
fisttpll
push
adc
mov
sbb
lret
inc
jmp
pop
sti
sub
stos
loope
sub
repz
pop
fwait
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
cli
jbe
push
out
adc
adc
shll
jle
imul
lret
mov
mov
inc
inc
sub
add
xchg
repz
stos
add
inc
mov
xorb
inc
xchg
and
imul
lods
jp
lods
sub
mov
dec
test
and
mov
cmp
adc
lea
pop
xchg
and
into
scas
mov
mov
in
nop
negb
inc
xchg
add
or
cmc
or
iret
stos
pop
mov
filds
or
bound
lret
dec
cmpb
mov
dec
pop
mov
cld
cmpsb
enter
das
repnz
inc
cmp
mov
add
pushf
push
pop
or
hlt
sub
push
xor
jecxz
jmp
xchg
cmp
gs
push
cmp
roll
fisttps
test
scas
add
mov
fadd
movsb
cmpsb
sub
out
test
adc
les
test
add
jmp
sub
and
gs
xchg
mov
fs
shll
mov
out
and
mov
insb
sti
mov
stos
push
xor
adc
jmp
fcomip
jg
jb
in
cmp
out
sahf
dec
mov
jg
sub
or
push
pop
jg
jecxz
sub
iret
cmpsl
jb
fisubs
pop
rorb
mov
bound
and
ss
imul
test
xlat
mov
inc
cmp
lods
push
adc
and
iret
lods
arpl
xor
subb
xor
sub
xor
jno
test
inc
sub
icebp
nop
shll
stc
push
scas
sbb
in
xchg
popa
icebp
iret
mov
inc
cltd
add
cmp
incb
mov
data16
cmpl
and
insb
pop
arpl
cmc
xor
fiadds
shll
push
imul
and
add
jno
push
push
ss
adc
or
loop
sub
push
imul
popf
sub
mov
xor
fsubs
jge
jnp
inc
adc
sbb
mov
stc
imul
rorl
out
sub
dec
dec
cld
aam
sub
cmp
jp
out
cmc
xor
lock
fiaddl
lods
repnz
hlt
adc
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
mov
sbb
xchg
movlps
pusha
and
mov
popa
push
adc
dec
roll
xchg
push
stos
push
lock
rolb
das
xor
cmp
fxch
xor
lods
fidivs
mov
insl
push
add
insb
mov
daa
out
mov
stos
and
inc
daa
iret
ljmp
sub
sub
enter
std
xchg
imul
mov
decl
test
arpl
and
lret
ljmp
xchg
sbb
and
inc
and
shl
mov
scas
ljmp
and
xchg
notb
push
in
jnp
test
mov
xor
fidivrs
sbb
dec
fsubrs
fs
jmp
sub
icebp
inc
ficompl
out
and
jbe
sbb
jecxz
scas
fdivl
std
stos
cmc
push
mov
shl
mov
mov
lret
es
arpl
fwait
cmc
sub
push
sbb
outsb
jno
ljmp
xchg
into
adc
xor
das
push
inc
dec
test
pop
das
sbb
mov
js
and
xor
or
jl
ret
and
inc
mov
jp
dec
xor
aaa
mov
or
jle
add
in
cmpsb
cmpsb
push
xchg
push
inc
leave
xchg
sub
adc
or
or
inc
xor
gs
and
aam
adc
adc
fildl
fistpl
mov
dec
rclb
enter
jo
sub
xor
inc
out
cs
in
mov
and
mov
sbb
push
in
sbb
push
mov
pop
push
sub
pop
mov
int3
adc
cmp
xchg
push
mov
fldcw
stos
pop
cmp
jecxz
pusha
outsb
and
push
jbe
xchg
push
lds
movsl
stos
lock
out
sti
das
test
add
dec
push
rcl
pop
push
xchg
stos
xchg
ret
iret
ret
fs
ja
mov
pop
jmp
imul
or
inc
xor
push
add
and
and
mov
cwtl
or
xlat
and
cmp
mov
dec
and
dec
test
lock
das
sbb
call
pop
negl
movsb
enter
xchg
nop
dec
dec
sahf
ret
fisubrs
dec
inc
push
outsl
jno
mov
out
lock
mov
jae
sbb
sbbb
push
dec
push
xchg
inc
imul
aad
mull
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
bound
adc
adc
subb
or
movsb
add
or
or
daa
xchg
fsubrl
xchg
or
push
jle
int
mov
cli
mov
cmp
repz
pop
or
or
or
negb
cs
cli
push
shlb
fwait
lret
or
imul
and
and
adc
fcoml
lods
or
movb
cmp
mov
xor
push
ss
inc
xchg
mov
pop
mov
cmpsl
idivb
sub
dec
in
lods
hlt
push
mov
in
mov
dec
xchg
mov
loop
jbe
mov
mov
or
jge
lret
repnz
in
mov
jmp
aam
loope
and
and
or
mov
add
aas
andl
call
dec
test
mov
xchg
pusha
xchg
stos
cwtl
mov
xor
je
hlt
clc
add
fistpl
fs
call
mov
jo
dec
movsl
xchg
mov
call
jl
adc
xor
ret
test
fcoms
sbb
dec
lods
mov
mov
xor
sbb
nop
test
notl
bound
and
inc
ucomiss
cmp
push
pop
xlat
mov
cli
cmp
sub
test
cmp
imul
shl
push
pushf
mov
out
mov
rcl
push
jbe
test
lahf
fs
lret
cli
pushf
shll
xchg
jecxz
and
aam
inc
mov
testb
inc
pop
das
jge
inc
xchg
mov
pushl
xchg
aas
xor
mov
test
sub
sub
lods
movsl
jbe
mov
aad
test
dec
movsl
adc
out
das
shrl
stc
out
in
testl
cmp
xor
mov
or
bound
cmp
lgs
push
out
or
arpl
movsl
push
pop
and
xchg
in
movntps
push
mov
divl
out
mov
ss
sub
clc
adc
cmp
jle
cmovg
cli
cmp
jno
push
adc
inc
fists
test
sbb
ret
and
adc
stos
data16
mov
jecxz
and
test
xchg
dec
add
sub
xchg
cmp
rorl
aaa
jno
mov
fnsave
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
xor
adc
adc
add
jae,pt
pop
fistpll
adc
dec
daa
jle
xchg
iret
sub
sub
loopne
mov
xor
adc
addr16
rclb
cmp
cmp
or
ljmp
pop
jg
push
jge
mov
mov
jl
mov
sbb
fs
mov
sub
jnp
jnp
sar
int
pop
ss
sub
outsb
xor
bound
adc
dec
dec
inc
lea
jg
push
orl
xor
lods
lea
test
out
cmpsb
pop
clc
jmp
lahf
mov
adc
negb
jge
nop
es
inc
lods
adc
push
push
addb
xor
loop
push
stos
loop
or
dec
add
dec
jbe
repnz
push
jb
mov
push
jb
mov
or
xlat
lods
mov
loopne
mov
mov
mov
cmc
push
repnz
outsb
mov
push
or
cmp
sbb
xor
mov
dec
popf
xchg
sub
pop
or
xlat
add
fimull
sbb
loopne
lcall
add
shrb
and
pusha
fidivl
data16
mov
movb
mov
aas
xchg
jne
sbb
pop
jl
lock
push
push
fisubrs
mov
xchg
mov
hlt
lcall
sub
push
sub
dec
outsl
aas
and
shl
mov
test
sub
aas
sarb
sbb
adc
mov
xchg
jnp
xchg
aaa
pusha
mov
xor
mov
xor
ret
imul
not
insb
mov
loope
pop
lock
adc
fistpll
into
adc
jbe
jno
aaa
mov
test
pop
jnp
xchg
xchg
rol
std
sub
sbb
frstor
fsubrs
arpl
dec
mov
mov
mov
push
cmpsl
dec
mov
dec
xchg
enter
jae
call
insl
add
fs
mov
outsl
insb
and
hlt
in
in
mov
subb
scas
sub
cmp
gs
pop
dec
cmp
ljmp
mov
out
aad
lret
pop
xlat
inc
jge
pop
scas
jge
std
add
cmpsb
mov
pop
lahf
fists
push
dec
aas
xor
lds
inc
rolb
fstps
sar
fldt
dec
pop
stos
push
mov
fwait
or
jp
int
add
int3
test
aam
lahf
gs
into
cmpsb
xor
add
adc
sub
cmp
mov
out
popf
push
lods
adc
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
lods
ficoms
adc
jns
js
push
lods
push
xchg
minps
push
push
mov
jecxz
arpl
movsb
movsl
ret
dec
lock
push
sahf
mulb
push
iret
mov
mov
push
dec
stos
aas
push
pop
lcall
shll
pop
pop
mov
cli
xor
cmp
mov
loope
out
dec
in
or
arpl
sbb
scas
in
mov
mov
mov
int3
mov
push
call
push
fbld
mov
das
push
or
cltd
cmp
lcall
push
fstpl
cltd
and
jle
cmp
gs
xchg
xchg
pusha
xlat
jo
push
push
imul
cmovg
cmp
jl
sub
pop
lret
pop
jle
mov
in
imull
mov
cmp
cmc
out
into
pop
sub
idiv
fstps
rcr
vmwrite
lock
adc
ljmp
outsb
mov
js
lahf
test
cmpsb
push
fmuls
aad
sbb
push
add
xchg
fsubp
or
cld
jl
loop
jge
rcll
rep
sub
jne
inc
aas
mov
xor
adc
mov
push
push
jp
jmp
mov
jbe
fmulp
je
cld
inc
push
inc
ja
movsb
inc
dec
or
mov
inc
mov
xchg
ss
mov
sub
hlt
sub
mov
push
mov
loopne
pop
push
movsb
fisubl
aam
push
divb
xchg
fdivr
mov
cmp
scas
xchg
dec
notl
jbe
clc
popa
and
lock
sbb
aad
ret
or
nop
rcl
out
cmp
neg
xor
aaa
je
add
xor
dec
or
mov
add
adc
popa
mov
push
ret
push
xchg
xor
dec
out
popa
out
push
sbb
ja
cwtl
lret
insb
inc
repz
mov
mov
into
and
xchg
and
data16
call
xchg
xor
dec
lret
dec
cltd
xchg
push
cmpb
insl
cs
mov
ja
mov
and
ret
jp
push
into
call
mov
dec
cmp
adcl
in
and
cmp
mov
and
xlat
ds
push
mov
aas
out
sbb
fucompp
push
mov
adc
nop
sbb
xchg
in
mov
mov
jle
lret
call
pop
rorb
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
movsl
mov
js
adc
adc
and
cmp
std
out
ja
int
mov
xchg
hlt
or
mov
repnz
pop
or
cmp
addb
rorl
insl
cmpb
jns
jns
add
push
pop
sarl
fs
mov
frstor
xor
cmp
mov
mov
cmp
mov
int
aaa
xchg
test
test
repnz
fs
xchg
aaa
lret
shrl
hlt
sub
dec
sub
aad
jnp
add
sarb
cld
inc
shll
cmp
pushl
jno
adc
jecxz
add
ja
movsb
cld
sbb
push
inc
js
or
out
adc
sbbb
cmpsb
adc
dec
or
ss
gs
pop
add
or
mulb
pop
stc
mov
pop
mov
dec
push
cli
dec
push
add
out
movsb
cmpb
mov
imul
movsl
fsubl
mov
push
inc
jmp
jae
mov
xorl
inc
sti
mov
in
idiv
stc
cld
testl
icebp
pop
mov
das
mov
sbb
xor
cmp
mov
xor
dec
test
dec
sub
jo
movb
stos
inc
lahf
pop
clc
gs
lret
or
and
and
ss
scas
and
add
and
add
lret
push
out
adc
js
inc
outsb
mov
xor
mov
fs
lock
jmp
pop
mov
pushf
xchg
pop
xor
sbb
pop
sbb
mov
xchg
aad
sbbb
mov
cmp
or
pop
call
addr16
insb
cs
cmp
fsubl
aad
mov
push
lea
jge
or
out
imul
sub
xchg
fsubrs
mov
pop
sub
push
xlat
jp
lods
mov
xor
out
inc
popf
dec
sub
push
leave
mov
lcall
aad
ja
mov
xor
stc
and
pop
out
dec
movsb
cmc
or
mov
sbb
jl
nop
es
ljmp
scas
out
sub
jp
and
xchg
divb
inc
mov
or
xchg
dec
arpl
sahf
push
mov
xchg
je
jae
insb
fldcw
addr16
aad
aad
sahf
mov
jle
loope
and
pop
stos
iret
mov
cs
xor
jae
jl
divl
mov
out
in
dec
xchg
loop
dec
pop
imul
cmpsl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
mov
mov
lds
add
cmpsb
push
and
cld
cli
add
pop
sub
xlat
jge
mov
shl
mov
inc
mov
adc
ss
mov
jae
push
mov
test
aaa
push
lahf
fidivrl
in
movsb
fisubl
add
int3
cmpl
mov
fidivs
jle
faddp
inc
add
lea
dec
cs
les
pop
xchg
iret
pop
icebp
mov
mov
nop
xchg
pushl
or
sbb
pop
les
cmp
xchg
xor
cs
call
push
or
xor
gs
test
add
push
cmpsl
cmp
and
nop
mov
rclb
clc
push
filds
dec
lret
mov
repnz
mov
mov
adc
jae
addr16
mov
addr16
outsb
inc
jmp
or
pop
dec
lods
cmp
cmpb
cwtl
xlat
inc
fisubs
bound
cmp
loop
sbb
pusha
or
out
imul
xchg
mov
pop
lahf
adc
adc
jge
xchg
incb
and
xchg
dec
popf
ret
xor
test
xor
add
repz
push
lods
pop
push
mov
mov
rcll
bound
inc
jns
mov
arpl
arpl
cmc
subb
out
imul
aaa
or
pusha
or
adc
jo
fcmovnb
lret
inc
lahf
lret
cltd
sub
aas
aas
popa
cmpsl
mov
and
pop
jo
push
mov
fisubrs
sbb
xchg
inc
into
xor
xchg
mov
sbb
aas
lret
xor
adc
lods
stc
nop
out
xor
or
into
pop
mov
movsl
aaa
sub
iret
mov
jno,pt
push
push
into
xchg
dec
sbb
cmc
or
mov
test
xchg
fildll
xchg
call
push
cli
cs
jne
scas
int
movb
inc
je
add
incl
add
in
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
add
adc
adc
movsl
inc
xor
mov
loopne
mov
insb
jns
test
scas
xchg
push
lret
fwait
and
cld
in
lea
mov
mov
cmp
mov
push
xchg
xor
pop
push
push
push
sub
add
jg
sub
sub
rorb
popl
adc
cmp
xchg
mov
mov
pop
add
and
cwtl
push
ficoms
jae
mov
in
pushf
bound
cli
cmp
inc
mov
pop
aaa
and
push
test
mov
inc
xchg
ret
jns
mov
push
pop
sub
std
mov
pop
pop
nop
shll
pop
test
ret
pop
mov
lock
jno
dec
sbb
and
push
or
sahf
cmp
movsl
dec
mov
bound
and
adc
push
mov
ret
mov
dec
movsb
push
add
pushf
pop
lods
jg
xor
xchg
arpl
cmp
xchg
movsl
xlat
jb
outsl
jo
das
jnp
sbb
imul
mov
ss
sahf
ja
pop
in
mov
mov
aad
aaa
daa
rolb
icebp
push
sbb
or
mov
les
roll
out
sub
pop
aad
iret
imul
in
call
or
lds
sub
loopne,pt
sbb
jg
sbb
xor
ret
mov
mov
dec
mov
cmp
jmp
dec
js
repnz
add
addl
jb
mov
add
xor
out
cmpb
in
repz
fimull
in
and
inc
mov
pop
jns
outsb
addr16
and
enter
push
sbb
jmp
sbbl
cpuid
pop
add
fwait
or
sub
hlt
mov
hlt
mov
dec
shll
imul
jnp
jae
inc
ss
mov
in
sbb
scas
inc
cmp
cmp
in
push
add
int
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
sbb
adc
adc
xlat
fucomip
jns
aad
test
test
cmpsb
call
test
mov
jo
add
pop
cmp
negb
popa
lea
stos
xor
push
jle
cmp
and
in
lock
cltd
and
or
aam
cmp
inc
xor
cltd
sbb
push
mov
push
and
push
jle
inc
shll
lods
pop
insb
pop
mov
scas
mov
popf
jle
push
cmpsl
sub
sahf
jg
or
scas
mov
aam
shrl
sbb
pand
sub
repz
adc
sti
sahf
inc
jle
jno
inc
and
repnz
mov
cmpsb
mul
sub
aam
inc
xchg
add
mov
clc
aaa
push
mov
dec
loop
and
es
jmp
je
imul
mov
xchg
lea
in
cmp
mov
dec
mov
fdivr
pop
fnsave
sbb
outsl
stos
daa
mov
aas
add
scas
add
std
std
xchg
pop
dec
push
rorl
pop
xor
les
and
jmp
test
sbb
mov
sbb
pop
sti
and
rorb
leave
jbe
lret
adc
andl
xchg
fildll
or
in
iret
and
sti
sbb
pop
inc
pop
in
dec
fidivrs
adcb
clc
mov
inc
mov
cli
mov
icebp
inc
mov
sbb
in
adc
dec
mov
into
cmpps
repnz
jecxz
ds
fstpt
sub
jne
test
push
cs
mov
adc
call
adc
call
sbb
lods
mov
ss
dec
ror
fistl
pop
jle
or
pop
pop
xor
pop
xchg
push
test
xchg
mov
or
push
ds
mov
and
dec
add
cmp
adc
dec
adc
sahf
mov
and
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
dec
loopne
push
adc
adc
ljmp
and
out
out
cmp
mov
jle
sbb
mov
and
arpl
sbb
adc
stos
adc
hlt
mov
gs
lds
dec
dec
inc
push
xchg
adcb
pop
inc
jecxz
orl
dec
add
pop
sbb
jae
idivl
negl
sti
or
mov
mov
jne
push
ret
les
jb
notb
lds
movsl
pop
sub
rcrl
mov
push
mov
xchg
stos
xchg
sti
cmpsb
adc
lcall
sbb
adc
and
in
xor
adc
es
sbb
mov
mov
push
inc
pushf
outsb
push
in
pop
rclb
and
arpl
mov
subl
stos
xchg
sub
jbe
xor
push
mov
xchg
repz
aaa
fcmovnb
mov
jbe
fsubp
clc
jecxz
loopne
pop
cs
stc
gs
test
mov
aaa
fbstp
xchg
adc
mov
xor
and
cmp
xchg
lahf
pusha
lds
iret
jle
xor
in
repnz
loopne
jmp
hlt
dec
push
lret
adc
cmp
cmp
mov
test
jbe
hlt
icebp
ss
xchg
jo
cli
pop
aad
popf
cld
xor
jecxz
scas
push
push
mov
out
sub
lds
jae
fcomi
ss
out
mov
fs
mov
shlb
dec
jb
mov
mov
cmp
and
in
inc
push
lcall
jno
xchg
xchg
in
mov
shrb
rcr
out
dec
push
sbb
add
fdivr
test
dec
xor
jb
clc
scas
icebp
lret
in
sub
push
jl
shlb
push
mov
clc
xlat
dec
jecxz
mov
lea
add
popa
mov
aaa
xor
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
push
ljmp
movlps
roll
jmp
mov
pop
cmova
je
xchg
add
clc
jecxz
sub
jge
daa
xchg
jg
sbb
mov
data16
dec
sbb
pop
in
push
add
push
rorb
mov
sub
jae
and
out
fldt
add
fstps
test
test
dec
pop
sbb
sbb
sti
dec
jnp
test
xchg
pop
xchg
sub
or
repnz
cmp
inc
xor
pop
sbb
adc
sub
push
out
leave
daa
xchg
sbb
ficomps
and
testl
cmp
pop
mov
pop
mov
cltd
or
mov
movsl
inc
dec
lcall
xchg
push
mov
dec
cmp
and
mov
mov
jmp
xchg
push
dec
jnp
mov
iret
sub
inc
adc
add
inc
or
mov
push
sti
mov
cmp
xor
xchg
mov
dec
in
ja
lods
shll
popa
cmp
sbb
sbb
daa
push
inc
adc
dec
mov
repnz
out
ret
push
inc
out
push
push
sbb
add
lcall
xlat
insl
cld
je
or
pushf
mov
outsb
xchg
cmpsl
fwait
mov
int
pop
lret
push
arpl
gs
xlat
jecxz
jmp
xchg
aam
and
inc
stos
stos
outsl
mov
cmp
sbb
cmp
int3
xor
call
dec
shrl
and
hlt
test
sahf
loop
cmp
jg
loope
adc
push
cld
dec
add
iret
lahf
divl
pop
lds
inc
iret
out
in
fdivrl
faddl
outsl
in
fwait
outsl
dec
jmp
xchg
xchg
in
add
movsb
jae
mov
mov
inc
test
fcomip
xor
mov
je
pushf
dec
sub
cmp
loop
andb
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
push
mov
adc
movlps
sbb
xor
lock
push
dec
cwtl
cltd
out
push
mov
sbb
lea
enter
shrb
pop
movsl
jmp
fcoml
jp
sti
les
test
int3
mov
add
idivl
jnp
lods
push
out
xchg
sbb
push
sbb
test
xchg
lcall
test
add
inc
mov
jle
cmpsl
in
adc
pop
push
or
xchg
pop
das
int3
stos
cmc
add
and
push
insl
sbb
xchg
and
inc
push
mov
mov
sub
or
stos
cltd
dec
sub
push
push
arpl
push
aam
cmp
push
cmp
pop
mov
pop
mov
jae
popa
sbb
xor
mov
cmp
xchg
jle
out
and
mov
jg
mov
mov
leave
lock
jp
jecxz
sbb
hlt
push
push
jmp
pop
mov
in
aaa
lret
and
movsl
or
test
push
popa
adc
add
mov
fmull
mov
mov
mov
loope
push
push
clc
cmpsl
sahf
xchg
add
dec
leave
lods
jnp
sub
jp
xor
insl
aaa
xchg
cmp
sbb
ret
push
xchg
pusha
scas
dec
adc
add
subb
cmp
inc
push
inc
push
leave
cwtl
jnp
notb
cmpsl
dec
adc
mov
inc
iret
loop
mov
cmp
xchg
or
dec
js
fs
cmp
outsl
jle
cmp
or
xlat
add
dec
mov
mov
lods
mov
xor
into
and
jp
add
outsb
in
and
push
xlat
sub
push
sbb
sbb
test
in
lods
pop
push
add
xor
jo
pop
cmpb
sub
mov
push
pop
sbb
xchg
jecxz
and
loopne
fists
call
mov
dec
imul
out
iret
insb
out
mov
sub
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
jle,pn
mov
adc
rorl
out
xor
js
insl
mov
sub
mov
fyl2xp1
sbb
pushf
fwait
int
enter
movl
adc
jae
lahf
push
mov
pop
inc
int
push
xchg
pop
xor
sbb
jno
lcall
xchg
mov
out
hlt
dec
aas
mov
add
cmp
rcrl
pop
icebp
pop
int
insl
ret
jb
inc
cmc
imul
mov
cmp
push
stc
cmc
mov
fwait
cwtl
xchg
mov
mov
mov
sub
dec
pop
les
das
enter
xchg
aam
xchg
adc
dec
mov
les
xchg
xor
daa
adc
adc
imul
movsl
dec
popa
mov
jge
add
pushf
or
sbb
jge
xchg
imul
insb
imul
cmpsl
fldcw
push
sub
inc
iret
loope
jae
mov
insl
out
mov
test
mov
test
pop
movsl
jo
add
lret
or
in
pop
aas
adc
adc
out
out
fcoms
inc
arpl
pushf
jbe
loop
adc
and
or
rorb
add
dec
dec
sbb
pop
inc
mov
popf
scas
inc
push
lea
int
mov
mov
dec
jns
xor
jp
mov
scas
jbe
push
sub
inc
xor
xchg
cwtl
add
add
xchg
mov
xor
add
inc
shlb
popa
and
ret
insb
or
sar
push
pop
enter
pop
in
and
mov
cmp
cmpl
xchg
adc
pop
ret
xchg
jnp
or
cmp
movsl
adc
and
pop
push
frndint
out
in
cmp
cmp
sbb
movsb
in
arpl
adc
stos
aas
dec
adc
scas
clc
dec
cli
push
shll
nop
push
dec
insl
pop
xor
je
repz
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
pusha
in
out
adc
adc
jmp
mov
clc
pusha
push
lods
leave
fists
cmp
fisubrs
cmp
fwait
movsb
psubd
jo
in
pop
and
fwait
ret
jno
mov
pop
lods
push
add
mov
lea
push
fidivrl
leave
fistpl
add
cmp
xor
dec
daa
loope
mov
cmp
xlat
cmp
mov
cmp
push
rcll
arpl
sahf
outsl
inc
cli
jmp
pop
dec
xchg
out
mov
push
test
lret
pop
lret
inc
push
lahf
shl
scas
jge
push
or
mov
fidivrl
pop
mov
shlb
outsw
adc
data16
fildll
movb
daa
xlat
addr16
inc
js
add
ret
mov
aad
jne
xchg
push
xchg
data16
cwtl
movb
sub
sbb
daa
je
data16
imul
ja
pop
outsl
repnz
repz
add
or
mov
jmp
lahf
push
stc
adc
sub
cmpsl
dec
cmp
ror
inc
xor
jne
pop
mov
xchg
in
or
inc
cmp
mov
addr16
push
fdivrl
and
or
adc
hlt
sbb
sbb
xchg
push
movsl
daa
mov
mov
dec
test
scas
cmp
aam
fwait
mov
or
jne
aam
cli
inc
je
dec
dec
xor
mov
jo
out
or
cmp
orl
pop
fnstcw
pop
push
rcll
add
repz
push
addb
aas
mov
or
imul
lods
jne
ds
imul
nop
es
jb
mov
mov
mov
adc
jbe
add
cmpl
mov
repz
testl
pushf
rcrl
cmp
int
enter
sbbl
jne
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
test
loop
lcall
adc
in
pushf
cmp
lods
jle
inc
arpl
out
mov
pop
mov
xchg
or
and
inc
insl
test
gs
popf
inc
adc
gs
into
adc
cld
fadds
dec
das
adc
mov
push
sub
add
inc
and
pop
pusha
dec
gs
xor
push
ja
movsb
cmpsl
insl
pop
loope
das
loope
xchg
push
ficomps
pop
popf
inc
scas
outsl
jo
lock
scas
mov
mov
popa
xor
ret
jecxz
data16
dec
push
lds
fildll
pop
test
mov
add
xlat
push
dec
std
xor
hlt
fcoms
jp
jg
arpl
test
pop
mov
pop
ljmp
mov
sbb
out
sbb
movsl
cld
mov
sub
mov
push
cmp
mov
jns
stos
jmp
xor
add
in
mov
lods
shlb
lret
and
in
and
push
add
xor
out
xchg
lods
sub
inc
out
pop
xchg
sub
repnz
sbb
mov
xchg
scas
mov
loop
arpl
and
lahf
in
jmp
fisttpll
and
dec
insb
pop
js
mov
stos
inc
aas
out
setno
stc
cltd
xlat
inc
mov
fstpl
inc
lret
sarl
pop
mov
insl
push
out
cmpsl
loopne
xchg
mul
loope
mov
cmp
pop
dec
xchg
out
push
test
xchg
imul
out
or
test
push
fcomp
insl
jle
pop
test
cld
xor
inc
fadd
mov
mov
call
push
mov
ret
dec
rcrl
pop
mov
or
mov
lods
stos
mov
lret
stos
xchg
jns
imul
mov
lock
mov
mov
mov
mov
push
cmp
fldenv
xchg
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
adc
test
adc
movlps
loope
jmp
test
add
sahf
add
add
mov
sub
or
mov
lret
fdivr
sbb
push
push
xchg
aaa
xor
adc
sub
loope
xchg
loop
pop
xor
es
or
push
repz
or
mov
lahf
adc
xor
add
or
shrl
dec
push
pop
sub
jnp
lea
mov
inc
ja
mov
or
sub
ss
orb
pushl
sub
test
xchg
lea
enter
nop
fildll
add
and
lret
cwtl
pushf
cld
mov
rol
jge
imul
test
jo
bound
cmp
jl
xor
rcll
xor
orl
arpl
and
fldl
sbb
sbb
pop
inc
mov
lcall
stos
push
vmptrst
pop
leave
mov
dec
gs
repz
insl
or
cmpl
mov
outsb
or
stos
mov
jne
pop
sbb
test
push
jg
and
and
pop
cmp
std
into
mov
xchg
js
mov
xchg
inc
std
cmp
pop
xlat
out
sbb
inc
xchg
and
rcll
inc
adc
mov
rcl
ja
xchg
ffree
add
push
or
out
fwait
cmpsb
xchg
xchg
adcl
insl
and
icebp
jmp
jnp
imul
inc
rcll
andl
sub
into
in
stos
bound
xlat
pop
imul
adc
push
pushf
mov
fwait
pop
test
insl
outsb
mov
imul
pop
lods
or
hlt
shlb
cmpsl
jmp
pop
lahf
pop
mov
mov
ds
dec
sbb
pop
cmp
mov
mov
lea
into
popa
cmp
adc
mov
mov
lret
lock
xor
adc
fstps
adc
movsb
imulb
mov
jns
jae
cmovo
and
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
push
push
add
adc
ret
das
xchg
cld
popa
jae
xor
fwait
and
fs
sub
sbb
mov
incl
push
arpl
jle
and
mov
scas
or
movsl
mov
xor
pop
aam
add
test
mov
dec
js
fldenv
lcall
in
shrl
scas
dec
mov
cli
cmpsl
mov
inc
lods
shrl
fisubl
add
sbb
imul
xchg
nop
push
addr16
mov
jns
int3
clc
xchg
sahf
sbb
mov
lret
pop
std
and
ss
cli
jg
movsl
mov
rcl
inc
pop
std
or
es
addl
cmp
test
lods
lret
movsl
rclb
insl
inc
addb
push
cmp
outsl
lret
dec
pushl
jge
xlat
es
or
bnd
pop
lret
mov
sahf
test
inc
mov
pushf
movsb
mov
dec
xor
out
arpl
scas
push
out
pop
add
fstpt
ds
lods
divb
arpl
test
punpckhbw
into
inc
push
xor
cmp
imul
clc
mov
fstl
sbb
mov
push
cmp
jne
or
jge
ret
jmp
cmc
sub
dec
mov
pop
loop
hlt
aam
insl
cmp
inc
mov
or
cltd
inc
icebp
jae
daa
lret
push
gs
mov
adc
pop
jnp
mov
test
mov
cmp
gs
add
cmp
jmp
into
imul
dec
adc
jmp
lahf
js
sbb
test
test
push
out
nop
push
xlat
or
iret
lods
int
and
fiaddl
jno
cmpsb
push
mov
lret
mov
add
std
sub
aas
cld
add
das
mov
enter
mov
fucomip
mov
bound
jg
gs
fstps
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
pop
sti
jle
mov
adc
imul
cs
ret
or
or
mov
pusha
aad
addr16
mov
xchg
mov
add
mov
repz
sub
mov
mov
push
mov
cmp
test
mov
push
sti
aas
fcompl
js
sbb
mov
fistl
cld
fs
repnz
sarb
sarb
pop
dec
mov
push
xor
imul
subl
in
push
es
inc
stos
popw
int
cltd
fnstcw
insl
shlb
in
scas
mov
icebp
adc
dec
sbb
cmp
mov
sbb
pop
in
jp
pop
js
pop
cmpsl
xchg
ficompl
roll
popa
nop
fisubl
xchg
cmp
inc
popf
jge
push
mov
int
rep
fcompl
clc
pop
pop
xlat
shl
clc
jo
cmpsl
test
pop
negl
popf
addr16
fs
loope
jmp
sbb
adc
jl
stos
cwtl
and
mov
sub
jp
push
outsl
mov
into
mov
lds
jmp
fildl
fst
jecxz
pop
aas
sbb
adc
sub
xor
popa
pop
sbb
inc
and
ds
aam
pop
ret
or
inc
in
inc
sub
jmp
lods
push
push
lock
xor
mov
pushf
mov
pop
in
cld
testl
ss
dec
adc
insl
cmpsb
dec
xor
loope
test
pop
add
pop
and
icebp
mov
loop
and
cltd
xor
jp
imul
in
xchg
stos
dec
dec
fadd
enter
xlat
fcoms
es
mov
sbb
cmp
and
mov
mov
mov
cmc
adc
stos
add
stc
imul
xor
xchg
in
out
hlt
or
aad
mov
sbb
ja
or
xlat
stos
push
lods
in
pop
aad
js
sbb
push
ljmp
lock
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
push
cli
mov
aam
or
cmp
jns
push
in
loop
imul
addr16
ss
gs
inc
jg
mov
shrb
sub
sub
lds
inc
cmp
notb
xchg
mov
sub
or
hlt
or
in
mov
arpl
ja
or
out
cmp
ror
inc
rorl
mov
inc
rorl
push
in
adc
xchg
popa
xchg
loope
int
push
cmp
cs
fcomi
ds
shrl
mov
cld
mov
repnz
dec
mov
stc
sub
clc
push
and
lea
push
mov
fbld
rcrb
xchg
cmpb
das
mov
iret
jae
fldcw
inc
inc
movb
xchg
lret
dec
int3
pop
sbb
fcomps
xchg
dec
ret
outsl
jecxz
mov
cmpsl
pop
sub
fs
xlat
lahf
mov
cmp
and
arpl
adc
inc
das
aaa
sub
or
fnsave
sbb
arpl
lds
cltd
push
pop
dec
inc
loope
popa
jb
jmp
aas
dec
mov
gs
jbe
outsb
add
in
cmc
ficoms
mov
or
call
xchg
mov
mov
and
sbb
leave
jle
shl
pop
lds
cmpsl
in
fs
cmp
xchg
mov
xlat
arpl
adc
xlat
adc
out
push
test
int
ret
nop
aam
nop
pop
fcomi
scas
idivl
jb
dec
xchg
and
aaa
pop
testb
dec
inc
inc
mov
je
pop
xor
and
mov
test
jne
add
pop
subl
sub
cli
lret
outsl
lods
pop
mov
lahf
int3
out
repz
and
jne
mov
mov
dec
lret
fwait
mov
cmp
outsl
popf
test
jnp
push
shrl
dec
pop
jno
imul
pushf
mov
mov
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
pop
fs
cwtl
adc
adc
nop
push
mov
mov
or
stc
pop
xlat
into
sub
lret
out
adc
add
or
scas
leave
adc
xlat
leave
push
hlt
int3
test
or
mov
movsl
nop
mov
jb
out
les
repnz
jmp
test
mov
cld
std
xchg
mov
cwtl
leave
jge
out
dec
out
push
out
out
inc
mov
stc
cmp
mov
movsb
inc
and
cltd
adc
xchg
push
test
mov
fdivr
sub
arpl
ret
call
push
cmp
mov
or
popa
or
inc
cmp
pop
mov
outsb
iret
mov
mov
xchg
rcll
shrl
enter
mov
pop
push
dec
test
push
shlb
js
in
lret
test
add
mov
in
pop
sub
sub
xor
std
scas
repz
out
loop
loopne
adc
or
xchg
pop
int3
xor
in
mov
mov
ds
shrl
jle
stos
hlt
mov
and
and
sarb
mov
fucomip
adc
jecxz
popa
std
dec
ret
lcall
mov
jl
bound
pop
pop
push
negl
xchg
sbb
pop
pop
push
jmp
inc
lea
xor
or
xchg
jge
pusha
nop
push
pusha
mov
sub
mov
lods
aaa
pop
push
dec
int
xchg
mov
hlt
push
ja
jge
pop
sbb
imul
aad
lcall
out
inc
stc
daa
sub
or
out
add
xchg
incb
xlat
rolb
inc
dec
push
dec
into
pop
or
cwtl
lret
clc
mov
cmp
mov
adc
scas
stc
cmc
xor
mov
xchg
add
or
int3
xchg
daa
testl
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
jle
jle
xchg
adc
adc
imulb
js
cs
xchg
in
pushf
movsl
xchg
aaa
add
mov
xchg
cmp
stc
outsl
dec
or
shll
cmc
xchg
cmp
sahf
mov
pop
add
push
enter
test
cld
jbe
jbe
xchg
pop
xchg
aad
in
xor
jecxz
int3
and
cmpsl
andb
incb
jp
pushf
or
sub
mov
outsb
popa
xor
mov
sarl
fdivl
in
dec
mov
notl
jnp
adc
sub
add
bound
sbb
mov
repz
or
ljmp
sahf
xchg
inc
pushf
ja
scas
mov
and
std
pop
ffreep
test
sbb
aaa
mov
dec
imul
pop
inc
pushl
xlat
fcomps
xchg
mov
sbb
dec
xlat
push
pop
addr16
shr
sbb
rdtsc
das
loope
dec
push
loop
notl
and
cmp
roll
std
and
and
xchg
push
jge
in
outsl
aaa
aas
mov
scas
dec
mov
pop
in
pop
add
xor
push
aas
inc
in
adc
frstor
xor
jp
gs
sub
sti
mov
xchg
sbb
mov
addr16
jns
mov
cmp
lcall
pop
xlat
daa
sbb
mov
jl
cmpsl
push
mov
push
dec
shlb
fucomi
lcall
test
xchg
stos
stc
push
out
sbb
adc
cmp
pop
jmp
lock
push
jle
lods
movsl
insb
std
sbbb
call
outsb
cmpsl
daa
sti
lods
test
fmul
fadds
daa
sbb
mov
js
fiadds
pop
jnp
mov
dec
in
xor
and
movsl
repnz
mov
jne
adc
fs
out
or
loop
add
dec
nop
mov
movsl
rcl
xchg
clc
or
hlt
lcall
mov
xor
sub
jb
and
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
sti
jle
xchg
adc
adc
jmp
sbb
dec
rol
andb
inc
ja
mov
iret
fsubrl
repz
dec
and
add
hlt
add
loop
lret
jge
hlt
ja
sbb
jmp
aas
mov
inc
xchg
push
jp
and
enter
aad
je
cmp
jnp
hlt
xchg
xchg
int3
dec
subb
cmc
mov
jbe
clc
popf
cmp
adc
sub
scas
adc
addl
in
hlt
pop
dec
sbb
xchg
leave
cmp
xor
add
mov
arpl
jne
popf
bound
adc
jno
mov
add
lock
jbe
shrl
mov
mov
ss
mov
movsl
shrl
mov
rcrl
mov
pop
ficomps
sbb
inc
aas
xchg
push
call
repz
pop
xlat
sbb
xchg
add
mov
sub
xor
jmp
fs
ret
pop
out
call
arpl
aad
sbb
cmpsl
push
imul
dec
divb
jg
adc
or
dec
aam
xor
gs
dec
jns
fwait
xchg
fiaddl
fwait
imul
or
icebp
ljmp
xor
cwtl
std
cmp
cli
std
lea
add
xchg
xchg
pop
mov
pop
cmp
mov
lock
and
pop
enter
sbb
imul
mov
movzwl
push
adc
movsl
inc
xchg
mov
mov
pusha
lahf
push
cld
inc
dec
in
mov
andb
mov
inc
mov
aam
jnp
dec
repnz
fists
out
push
daa
cmpsb
lods
xor
inc
push
or
push
rorb
mov
fwait
addr16
xchg
aas
mov
test
mov
lret
lods
xchg
leave
outsl
mov
pop
roll
mov
adc
sbb
add
adc
pop
pushl
lahf
scas
les
mov
mov
and
sub
lret
pop
xchg
shll
sbb
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
jnp
pushf
lods
cmp
adc
mov
pop
xor
ret
imul
fcompl
dec
sub
pop
mov
and
lods
mov
dec
fnsave
push
subl
cmp
pop
loop
sub
outsl
jl
mov
jmp
jae
sahf
mov
mov
insl
dec
pop
int
and
push
js
or
shrl
scas
push
push
cmpsb
adc
sub
or
addb
sahf
mov
xchg
int
push
push
je
dec
cmp
lcall
mov
in
cmp
xor
repnz
fdiv
push
pop
dec
sub
xchg
lahf
dec
out
jge
in
flds
ret
xchg
push
mov
sub
jecxz
imul
das
cmp
fsubl
scas
iret
stc
xchg
int
mov
mov
pop
ret
in
xchg
gs
adc
inc
mov
cmp
mov
aaa
cmp
inc
mov
stos
pop
inc
rorl
fucom
inc
lds
or
aam
jnp
push
mov
repnz
loopne
ljmp
xchg
fld
jmp
push
pusha
or
jp
dec
dec
mov
shrl
out
pop
nop
vpshld
cmp
inc
xchg
jmp
mov
aam
dec
out
pop
xchg
addl
aaa
or
fs
or
and
pop
or
pop
sbb
or
inc
inc
fldcw
sub
and
xor
js
add
int3
test
fbstp
popl
scas
pushf
fwait
and
aam
cmp
out
inc
mov
xlat
test
or
jne
enter
mov
jge
jbe
push
lea
iret
mov
xchg
je
or
imull
cmc
or
popa
loop
jb
out
ljmp
repnz
shrb
movsl
mov
lahf
and
push
xchg
mov
iret
imul
or
cli
xchg
mov
loopne
lock
xchg
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
ja
gs
stc
jge
test
cmpb
int3
fmull
add
jns
pop
adc
mov
fisubs
fwait
orl
and
mov
jmp
stos
popa
iret
xor
mov
clc
leave
push
das
push
jle
mov
insl
add
mov
flds
inc
aaa
scas
sbb
lods
arpl
dec
add
je
addr16
adc
insl
dec
add
pop
iret
and
xchg
ss
out
mov
mov
adc
pop
ret
fnstenv
jl
stc
addr16
cmc
es
xor
lret
ret
push
cli
lods
call
nop
jo
jb
cmp
jno
jb
xchg
sbb
sub
das
sub
xlat
in
mov
icebp
xchg
cwtl
repnz
aam
sub
inc
or
or
in
outsl
test
out
inc
mov
xor
in
stos
mov
mov
mov
cmp
leave
lahf
inc
push
cmpb
push
dec
xor
sub
lret
sahf
das
jecxz
ret
or
push
cmpsl
fiadds
mov
jg
pop
jl
test
xchg
cmpl
xchg
call
ja
shll
push
cld
data16
push
adc
mov
loop
test
sub
bound
repnz
in
leave
shlb
pop
pusha
fiaddl
mov
iret
out
movsb
xor
adc
pop
cmpsb
mov
dec
test
sub
fildl
std
or
pop
scas
jnp
and
jle
fcoms
dec
aad
je
test
xchg
inc
push
jo
xlat
or
cli
aad
lahf
pop
imul
jl
push
out
cld
jecxz
push
mov
add
fisubl
insl
enter
ret
push
cltd
sbb
repz
clc
lcall
push
addr16
std
loope
lock
sbb
xorl
inc
icebp
xrelease
add
inc
or
fdivs
sbb
repz
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
stos
sbb
enter
js
sti
call
ret
lcall
nop
cli
add
cmp
out
fsubs
mov
and
or
stos
cmp
iret
cmp
fs
icebp
cs
faddl
add
xchg
bswap
outsb
mov
pop
cmp
cmp
lea
mov
add
test
push
insl
and
repnz
lods
lret
popf
push
stos
jmp
pop
cld
jnp
jnp
lods
ret
pop
mov
fstps
les
and
jle
les
sbb
push
movsb
out
cmp
inc
or
lret
roll
xor
movsl
fdivrl
xor
or
cmp
push
jge
sbb
loop
cwtl
shrb
push
js
pop
xchg
arpl
add
aaa
pop
push
outsl
fldenv
sbb
dec
mov
imul
xor
add
jns
call
jns
dec
xchg
ds
hlt
fsubl
ficoml
in
shlb
xchg
sub
movsb
repnz
movsb
xchg
mov
add
dec
into
fldt
cmp
xor
push
loopne
mov
adc
mov
lret
cli
in
les
repz
xor
js
cmc
fistpl
push
ljmp
enter
roll
xor
ljmp
ret
andb
push
outsb
js
sbb
sub
int
xchg
and
pop
gs
adc
adc
lret
pop
pop
jb
pop
inc
aam
mov
inc
addb
and
xchg
and
or
pop
sub
loop
push
pusha
and
pop
and
mov
xchg
mov
fsubs
loopne
idivb
test
xchg
cwtl
jmp
adc
mov
rorb
or
dec
or
jne
fisubrs
ficompl
fdivs
push
cmp
test
push
xchg
out
jle
int3
outsl
push
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
xchg
mov
enter
decl
inc
ljmp
pushf
jb
push
dec
mov
jge
movsl
push
push
push
push
cmpsb
sub
mov
jl
push
jb,pt
aad
addl
push
test
mov
push
pusha
outsl
jl
push
mov
mov
mov
sbb
mov
sub
add
sbb
jns
mov
cmp
mov
jp
sub
mov
cmp
mov
ficomps
pop
or
iret
or
xor
mov
add
aas
push
orl
sbb
mov
cmpsb
enter
std
fidivl
adc
out
loopne
or
jae
ss
fwait
outsl
xchg
mov
outsl
push
cli
xchg
faddl
lcall
mov
cmp
or
les
repz
je
lock
out
cmp
xchg
orb
or
cmp
divl
mov
add
and
cltd
cli
push
push
call
lret
mov
pop
mov
cmp
xor
in
or
sub
or
outsb
mov
xchg
xchg
mov
dec
adc
sahf
mov
push
negb
mov
loope
shlb
aas
stos
cmp
pop
mov
dec
mov
in
pop
and
lds
jle
roll
pop
aaa
repz
pop
push
cli
dec
movsbl
imul
xor
lcall
adc
add
cmp
push
lret
fnstenv
loopne
fsts
jmp
push
push
stos
dec
push
popf
sub
test
mov
mov
xchg
rorb
subb
out
mov
xchg
divl
sbb
xchg
in
mov
cmc
idivl
cmp
rcrl
cmp
leave
negb
adc
xor
cs
add
sub
cmp
push
push
pop
sub
or
decl
decl
cmp
jmp
stos
js
pop
and
mov
dec
aaa
int3
lods
or
adc
movlps
test
and
lret
pusha
cmpsb
sahf
in
adcl
cld
add
xor
stos
xchg
or
in
mov
psubq
fidivs
sbb
jo
xchg
jl
fadds
sbb
orb
or
xor
and
adc
push
push
rcl
les
repnz
cmpsl
sbb
fwait
out
sti
pop
dec
sti
sub
imul
sbb
mul
jb
sbb
outsb
inc
mov
jne
pushf
xor
mov
sub
call
jae
mov
call
int3
pop
in
dec
mov
popa
arpl
pop
or
test
pop
push
mov
pop
xor
and
or
out
push
push
mov
fwait
or
in
xchg
jg
dec
or
std
ret
and
jo
jg
push
ss
cltd
xchg
mov
xorb
lock
mov
gs
js
adc
flds
cld
lcall
or
movsl
dec
dec
mov
xor
jecxz
push
les
fucomip
enter
out
and
out
jns
mov
cmp
push
inc
sbb
ja
push
arpl
shll
sub
int
pop
arpl
pushf
insl
movsb
adc
inc
in
add
in
out
mov
loope
and
dec
cmp
and
jne
ret
jb
add
xchg
pop
sub
pop
jo
and
stos
sub
xor
mov
ja
pop
mov
push
push
jecxz
xor
mov
cmp
xchg
dec
adc
xchg
out
movsb
scas
div
adc
ret
push
mov
mov
mov
push
loop
cmp
lretw
cmp
mov
xor
mov
loop
lahf
cmp
push
add
je
insb
shll
adc
mov
loopne
cs
ljmp
leave
add
pushf
or
test
cli
push
adc
lock
cmp
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
pop
fdivrs
enter
add
ljmp
push
stos
sbb
aaa
mov
push
imul
jbe
or
mov
pushf
clc
insl
lret
dec
dec
sarl
fwait
lret
mov
jo
jo
lea
notb
or
inc
rcrl
push
rcr
mov
sub
pop
mov
xchg
add
aas
pop
out
add
nop
lret
or
or
add
mov
adc
scas
jns
dec
push
rclb
test
lods
mov
sub
leave
pushf
sbb
xchg
xchg
mov
jp
mov
sti
xchg
jg
insb
cmp
lods
push
not
stc
insb
and
dec
pop
adc
mov
adc
scas
or
test
inc
xchg
push
or
sbbb
aam
add
jl
stos
sub
push
fs
les
insb
cld
and
add
cltd
sub
dec
aad
insb
fsubrl
or
mov
lds
out
xchg
and
push
test
push
inc
or
cli
mov
pop
or
loope
popf
test
ds
and
hlt
mov
jmp
sbb
shl
hlt
insb
movsl
push
dec
scas
jp
or
mov
xorl
shll
inc
fisttps
push
cmc
inc
add
aas
pop
and
or
xchg
inc
xchg
bound
filds
add
les
repz
xchg
and
xor
in
rcrl
in
push
lods
loope
lock
adc
bound
inc
aad
mov
mov
out
and
iret
mov
insl
int3
mov
aaa
cmpsb
cmc
or
xchg
cli
mov
insb
popa
xchg
sbb
xchg
sbb
push
cli
js
pop
and
stc
in
jbe
mov
push
shr
rcrl
ljmp
in
in
cltd
and
scas
pop
and
clc
and
out
loop
xlat
mov
out
and
inc
mov
sbb
imul
xchg
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
lcall
enter
or
in
sti
push
test
insl
sbb
xor
repnz
in
sub
pop
stc
gs
data16
mov
popf
movsb
mov
fnstcw
notl
je
out
cltd
xchg
pop
les
sub
sbb
xlat
loop
stc
cs
cmpsl
sbb
or
adc
and
jbe
xor
pop
jg
ja
pop
sarb
xchg
iret
mov
mov
jb
enter
sbb
lret
aam
mov
pop
jl
cmc
jne
sbb
outsb
pushf
mov
push
inc
push
dec
sub
mov
out
and
fwait
incb
cli
pop
out
outsl
inc
push
paddw
or
mov
sub
cmp
mov
and
mov
lods
adc
inc
rcr
mov
sbb
mov
and
in
cmp
push
sarb
shrb
dec
and
or
push
cmp
and
clc
enter
fsubrs
xchg
sub
cmp
pop
jge,pt
clc
inc
fwait
lds
or
inc
cmp
fwait
xchg
pop
data16
sbb
push
cmp
push
jnp
fs
lock
push
sub
test
sbb
mov
and
out
and
sbbl
xor
outsl
push
push
imulb
sub
xchg
stc
enter
sbb
enter
iret
outsl
out
cwtl
cmp
lcall
stos
outsb
lods
sti
push
inc
xchg
jne
packsswb
out
test
scas
sti
ljmp
dec
jle
fadds
mov
pop
mov
lock
jmp
rcl
out
loop
outsb
mov
daa
mov
shl
ret
xchg
in
hlt
in
or
loope
or
lods
push
lret
inc
dec
mov
sbb
fwait
mov
fldl
add
fnstenv
rcl
aas
fcoms
mov
push
xchg
in
push
inc
mov
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
in
xchg
js
insb
adc
adc
subl
inc
mov
popf
add
sbb
and
cmp
cmp
mov
cmp
mov
lret
jb
int
call
inc
bound
insb
fs
dec
push
push
xor
cmpsb
and
adc
cmpsb
loope
mov
jnp
rorb
xchg
ret
adc
and
rcl
and
or
xchg
mov
jge
lds
add
rcr
ficoms
fadds
nop
xchg
mov
pop
ret
sub
push
lea
xchg
jns
xchg
lds
mov
popf
inc
call
ljmp
and
sti
push
or
rclb
scas
sub
mov
or
jno
add
xchg
xchg
pop
dec
inc
sbb
or
lahf
jnp
lcall
sub
arpl
push
int
xor
ljmp
adc
test
sbb
iret
adc
mov
bound
cmpsl
or
cli
jo
dec
mov
aam
xor
addr16
pop
cli
lcall
dec
test
nop
sti
es
sbb
pop
leave
ljmp
push
inc
jae
mov
scas
pusha
inc
ljmp
adc
push
sub
fdivs
sbb
hlt
rolb
jno
or
shrl
out
pushf
les
push
jns
xor
sbb
xchg
push
outsl
ds
imul
adc
aam
and
push
fmull
loop
aas
pop
cli
mov
das
xchg
pop
dec
jbe
add
push
jbe
jbe
jbe
pop
and
push
mov
aad
cmp
add
gs
dec
mov
adc
fldcw
add
jmp
jo
xchg
xchg
repz
dec
sbb
clc
sbb
mov
mov
dec
fimull
leave
xor
dec
or
or
pop
adc
xchg
xchg
push
push
jnp
roll
jge
push
mov
cmp
xchg
mulb
mov
mov
shlb
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
rcrb
fs
push
adc
ljmp
fdivs
cmp
push
imul
cmp
xchg
cmp
inc
stc
mov
cmp
dec
and
add
addr16
dec
dec
cmpsb
dec
xchg
push
cltd
mov
inc
mov
jnp
daa
lds
add
xlat
add
lahf
in
adc
xor
mov
dec
cmp
sbb
xchg
test
push
into
lds
fsubrs
pop
popf
scas
jae
outsl
xchg
lcall
pusha
ljmp
xchg
adc
xchg
std
scas
inc
sub
inc
mov
shrl
sub
cmc
loopne
pop
mov
pop
out
cmpsl
xchg
push
pop
popl
adc
pop
cmpsl
cmpsb
or
inc
fwait
imulb
dec
cwtl
cmc
cli
jo
loopne
sti
loope
mov
add
daa
js
out
jb
hlt
jbe
fsubs
mov
outsb
xchg
mov
andl
aas
adc
xlat
mov
add
xor
mov
cmp
shll
out
call
test
jge
push
mov
insl
stos
fsts
adc
mov
jnp
andl
insl
sbb
jbe
shlb
adc
in
clc
adc
inc
fldt
stos
mov
jg
loope
pusha
jge
and
rcrb
add
ja
scas
or
mov
sub
iret
or
shrl
mov
incb
pushf
lock
das
icebp
shlb
jo
sbb
lods
into
push
iret
cmc
lods
xor
inc
dec
scas
mov
mov
mov
cmp
lods
xchg
jbe
movntq
not
stos
mov
pop
jecxz
jg
cmp
mov
das
add
cmp
sub
add
data16
testb
sahf
enter
andl
pop
aaa
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
pusha
js
fs
adc
or
fbstp
xchg
movsl
test
lea
leave
jmp
mov
sbb
popw
mov
mov
loop
inc
inc
pop
pop
xchg
cmp
popa
add
cld
push
sbb
cmp
insl
push
cwtl
pop
hlt
outsl
pop
sbb
pop
mov
les
in
or
lahf
dec
cmp
mov
pop
jb
xchg
push
dec
cmc
mov
aaa
inc
out
aam
loope
rol
inc
dec
push
jge
pop
mov
sbb
in
es
inc
mov
mov
fucomip
daa
lret
adc
ficoms
lret
adc
inc
popa
adc
stos
lret
lds
mov
lcall
rcr
add
xor
out
shlb
sbb
sbbl
push
jb
insl
jae
mov
aaa
les
int
xor
cmp
idivl
mov
rolb
xor
push
cmc
cltd
xchg
xor
cmp
adc
test
add
inc
xchg
jo
push
push
xor
jno
adc
cmc
daa
sbb
stos
xchg
das
shrl
or
in
shll
test
lods
in
push
ja
roll
stos
dec
cvttps2pi
lea
inc
outsl
mov
cmpl
and
lcall
inc
test
hlt
and
pop
push
sbb
mov
aaa
lret
sbb
jge
and
push
addr16
and
cs
loop
loopne
mov
js
out
push
cs
xchg
je
push
add
fstpt
js
cmp
fisttpl
sbb
sub
sbbb
inc
jb
jo
out
mov
or
dec
or
adc
xchg
sbb
push
sbb
cmpb
pop
sub
push
sti
js
stc
aad
push
cmp
lods
mov
popf
xlat
int3
jle
or
fidivl
shl
lock
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
push
xor
nop
popa
jne
cmpsl
add
outsw
out
rorl
jmp
jne
bound
lods
mov
or
mov
or
das
pop
in
mov
lcall
push
push
lea
cmpl
dec
inc
js
push
movsb
mov
je
xor
add
mov
pop
xor
jne
repz
pop
je
mov
call
call
sbb
xchg
cmp
stc
cmp
lods
mov
stc
sub
xchg
xchg
pop
adc
xchg
dec
je
fcomps
popa
mov
xchg
sbb
mov
dec
jno
push
iret
mov
push
fistps
and
mov
fst
imul
movsb
popf
cli
daa
add
dec
and
jge
pop
sbb
pop
push
mov
jmp
cld
movsl
pop
xor
stos
cli
inc
lds
ror
mov
pop
sub
scas
cmp
clc
sub
add
push
arpl
cmpsb
mov
cs
mov
daa
cli
and
aam
repz
shrl
cmpsl
or
ja
lcall
fs
test
arpl
test
xchg
mov
push
sbb
sbb
inc
jnp
nop
lcall
in
es
js
mov
sub
das
cmp
es
push
push
je
push
nop
inc
bound
lock
nop
add
xchg
dec
test
ret
mov
lds
xchg
xor
dec
arpl
or
je
gs
rorb
adc
sbb
int
out
clc
jle
jecxz
stc
xchg
xor
pop
sti
movb
cmp
ds
jmp
movsb
push
inc
inc
sub
mov
insl
adc
mov
mov
jmp
loop
out
jae
lret
sub
scas
dec
mov
mov
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
xchg
mov
adc
adc
fcoms
nop
cmp
ds
in
add
adc
outsl
push
aaa
mov
pop
pusha
aam
outsl
push
cmc
test
js
je
mov
push
xorb
pop
jno
sbb
lods
int3
aas
cmp
pop
lods
enter
je
inc
js
sbb
sbb
mov
dec
or
loop
testb
dec
fs
or
add
mov
ljmp
enter
pop
xor
sarl
outsb
mov
insl
lock
imul
lcall
push
mov
cmovno
jnp
imul
sbb
dec
mov
out
lds
inc
add
jp
dec
sub
stos
nop
scas
fadd
dec
stc
addb
mov
pop
add
xchg
setbe
inc
dec
inc
cmp
add
rcll
sbb
pop
mulb
sar
mov
cmp
jle,pn
out
or
jns
and
sub
roll
sub
iret
cmpsb
in
push
jmp
push
daa
call
jno
pusha
add
sbb
push
cmp
movsl
lcall
je
cmp
mov
nop
jae
repnz
and
pop
and
std
enter
xchg
xor
lahf
insb
stos
shl
sbb
dec
mov
push
iret
cltd
push
or
lret
and
enter
stos
xchg
jnp
clc
or
fldt
jp
xor
mov
xchg
mov
mov
fstps
popf
fs
or
and
mov
fsts
test
lods
cmpsl
jbe
imul
push
aam
adc
xchg
and
jnp
push
lods
mov
mov
test
mov
adc
lahf
mov
cmp
das
lds
stc
dec
or
push
push
cmp
push
mov
sub
and
push
jae
mov
mov
test
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
sahf
adc
mov
ficoml
adc
inc
xlat
aaa
ljmp
inc
fstps
jge
dec
stos
lret
push
arpl
shl
sarb
lret
or
lods
ljmp
inc
pop
stc
xchg
ljmp
aam
or
jmp
test
inc
and
cmp
add
adc
ss
loope
subb
pop
fmul
fsubl
lret
lds
ror
push
aas
and
fs
test
pop
stos
jge
cs
cmp
sbb
cmp
arpl
ljmp
fs
js
xchg
and
xchg
push
shl
add
ds
out
sub
mov
add
ret
lret
mov
jge
or
sbb
int3
inc
fwait
shrb
and
leave
test
lock
push
and
inc
divl
inc
test
lds
xchg
in
movsl
jle
mov
pushf
call
pop
pushf
xor
fucomip
ret
fcoms
xlat
and
add
add
repz
push
adc
xor
xor
xchg
hlt
and
mov
mov
jnp
out
jb
outsl
cmp
ja
mov
in
mov
or
inc
mov
fwait
pop
fimuls
rclb
push
lds
adc
inc
lods
or
jno
scas
add
cwtl
mov
mov
popf
xchg
into
sub
or
ror
subl
gs
lret
out
inc
jno
and
sbb
push
mov
out
pop
aaa
and
iret
pop
je
push
pop
mov
lret
and
divb
jge
sub
fbld
pusha
adc
lret
and
popa
aad
sbb
push
fnstcw
cmc
mov
lods
mov
cmc
dec
xchg
lret
push
fistpl
bound
inc
ss
add
movsl
pop
sub
push
js
fwait
rorb
mov
test
icebp
add
daa
imul
hlt
lock
cmpsl
jo
imul
inc
shll
loopne
call
lods
jg
add
scas
and
xchg
stos
rclb
xor
js
mov
test
daa
sbb
loopne
stc
jne
jle
jnp
cmp
int3
les
mov
sbb
aam
and
inc
lods
dec
pushw
xchg
stos
mov
lret
xor
mov
dec
scas
mov
lock
mov
fcompl
out
lahf
nop
sub
xor
dec
or
cmpsl
xchg
nop
addr16
mov
pusha
insb
mov
or
clc
sbb
cld
fsubl
das
cmpsl
dec
subl
jge
nop
out
mov
jge
frstor
inc
in
jg
jbe
and
or
imul
into
push
mov
and
cmpsb
or
and
fidivrl
shl
push
cmp
mov
lret
mov
movsb
movsl
pop
lahf
cmp
lock
stc
lods
stc
jb
and
inc
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
int
aam
jecxz
add
sub
popf
sbb
stos
arpl
hlt
jg
stos
or
xor
outsb
push
out
jge
push
aaa
and
and
mov
popa
mov
leave
mov
add
sarl
jae
jle
test
hlt
into
push
xchg
stc
ljmp
rclb
ds
and
in
inc
sub
lods
cmp
sub
sbb
or
shl
fsubrl
movsl
adc
jp
cmc
les
adc
insl
xchg
addr16
out
mov
push
push
pop
add
add
dec
push
sub
ret
cmp
xor
pop
sub
aaa
or
cmp
loop
or
cmp
leave
jmp
outsl
or
mov
in
jb
in
sti
push
in
imul
leave
addr16
lcall
icebp
mov
popf
ja
jb
cmp
ss
mov
imul
cli
xor
mov
repnz
mov
dec
sbbb
outsb
insl
or
pop
adc
clc
mov
jnp
ret
adcb
sti
cmp
xchg
mov
xchg
imul
xor
test
neg
sub
mov
test
or
lcall
stos
stc
mov
call
ds
fcompl
flds
sbb
divps
bound
in
pop
jae
lods
pop
stos
mov
pop
punpckhwd
jle
pextrw
es
fwait
das
inc
fmull
mov
rcll
inc
test
xchg
xchg
dec
loope
adc
mov
hlt
and
dec
and
push
jmp
cmp
xor
pop
pop
sbb
cmpsl
fdivs
mov
jns
cmp
mov
push
add
or
nop
aaa
nop
xchg
jp
inc
aaa
popa
mov
aaa
or
ffree
push
sbb
in
xor
sbb
and
xchg
dec
mov
mov
inc
in
repnz
push
je
push
stos
and
pop
adc
pop
ficoms
sbb
push
dec
cs
rcrl
cli
xor
pop
sub
and
adc
lock
loop
test
call
sar
mov
mov
pushf
ficoms
xchg
sub
push
xchg
jns
or
dec
dec
sub
ret
sahf
push
stc
les
sbb
ret
loopne
ljmp
shlb
iret
stc
std
and
out
cltd
mov
mov
cmp
bnd
fadds
lds
test
inc
xchg
mov
lods
lret
cmc
bnd
sarl
andb
in
fwait
xor
and
ret
jl
push
subl
imul
push
push
stos
push
icebp
loop
das
jnp
insl
sbb
in
pop
outsb
and
cmp
dec
adc
lods
mov
mov
jae
cld
and
inc
outsb
out
hlt
lds
in
ret
inc
mov
mov
mov
xchg
xor
out
rorb
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
