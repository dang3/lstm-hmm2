push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
scas
into
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
jae
push
mov
sti
faddl
outsb
push
xor
xchg
push
orb
push
pop
xchg
movsl
stos
jbe
call
cs
lret
popf
arpl
xchg
cmp
hlt
sub
mov
add
int3
iret
sub
mov
mov
arpl
dec
mov
icebp
mov
xchg
pop
leave
mov
iret
push
clc
andl
icebp
es
clc
movsb
jno
xchg
rcll
rorl
mov
xor
pop
sbb
addr16
aam
test
decl
stos
and
mov
imul
imul
cmp
popa
xor
decb
daa
cs
pop
int
loop
mulb
add
dec
add
cmp
dec
fadd
out
jmp
inc
mov
pop
mov
sbb
fcomp
das
push
fistl
in
push
std
xchg
cmpsl
leave
aas
arpl
add
sbbl
fisttpll
rcll
cmp
xor
sbb
push
lock
pop
ljmp
inc
loopne
test
and
das
add
test
sub
or
xchg
sbb
inc
jno
pop
aad
jno
or
dec
push
xchg
adc
pop
lret
mov
jg
dec
addr16
scas
bound
push
dec
add
mov
mov
outsb
sbb
mov
push
lret
jne
mov
inc
adc
adc
xchg
push
ficoms
mov
mov
jb
sbb
lret
xlat
push
mov
sarb
fucomip
push
dec
pop
adc
insb
gs
push
mov
xchg
cmpsl
test
jbe
adc
or
daa
sbb
xchg
lahf
xor
inc
cmp
jbe
jg
loop
dec
jl
inc
cmp
les
daa
std
sbbl
mov
call
push
push
and
jns
xor
mov
push
clc
cmp
out
clc
mov
and
mov
mov
ss
cmp
pop
adc
xor
mov
sahf
lahf
inc
jg
enter
push
test
lret
ja
sub
cwtl
cmp
cmc
cmp
jge
sbb
adc
inc
jmp
mov
jmp
mov
xchg
push
xchg
aaa
dec
jbe
ror
aaa
std
xor
dec
adc
cld
insb
rcr
dec
jg
jno
and
adc
leave
xor
adc
hlt
addb
cltd
mov
inc
lcall
cmp
test
or
mov
movsl
lret
pop
cmp
fwait
dec
xchg
jmp
lods
add
add
pop
or
mov
sub
scas
sub
testl
dec
loopne
mov
call
test
sbb
mov
in
iret
cltd
pop
add
sub
shr
xor
cmp
dec
inc
iret
mov
pop
nop
pop
icebp
mov
rep
shlb
shlb
and
xchg
sbb
or
arpl
cmc
lcall
pop
fistps
pop
lcall
lret
js
in
ret
adc
sarb
loop
fdivl
imul
fs
jno
into
and
dec
notb
push
inc
fmul
sbb
repnz
aaa
outsl
imull
xor
lods
lds
sbb
add
cmpsb
add
outsb
xchg
imul
std
insb
fistl
shrb
mov
mov
push
sbb
or
gs
mov
stc
lahf
or
cmp
aas
loopne
andb
insb
sub
push
jae
pop
adc
mov
dec
xchg
dec
fs
dec
pop
push
enter
andl
adc
push
sub
cmp
fidivs
mov
adc
mov
cmp
icebp
rcll
sbb
mov
xor
imul
inc
pop
movsl
scas
xor
mov
stos
push
std
push
lods
pop
leave
jle
pop
mov
dec
dec
imul
pop
pop
in
loop
or
out
push
aad
js
jne
xchg
aas
test
inc
mov
or
pushf
cmp
adc
jbe
cs
cmc
push
sub
in
sbb
sahf
and
aas
jns
and
push
and
cld
clc
jno
outsb
xlat
and
cltd
sbb
or
pop
xchg
fcomp
cld
cmp
rorb
push
andb
js
pop
inc
adc
aaa
and
in
iret
or
mov
or
jnp
push
mov
and
inc
mov
out
mov
sub
and
and
jl
jg
sub
dec
stc
int
lret
mov
addb
bound
add
mov
or
test
shll
outsb
xor
jb
es
dec
dec
jmp
enter
mov
cmpsb
mov
adc
add
icebp
fcmovu
jnp
pop
loope
sbb
pop
aad
fwait
xchg
push
data16
mov
sbb
dec
jmp
add
jecxz
jns
out
xchg
mov
mov
repz
mov
imul
add
stos
jmp
cmpl
sub
jmp
pop
push
cli
push
shr
jmp
add
stos
rcrl
push
and
cmp
les
movsl
jle
movsl
and
mov
jg
es
cmp
cmp
mov
idivb
adc
add
leave
or
mov
stos
pop
jmp
push
in
scas
in
inc
jle
iret
es
por
cwtl
inc
jl
xor
xorb
pop
xlat
mov
inc
inc
sarb
insb
cltd
jg
jb
ret
pop
jbe
or
xor
lods
or
mov
imul
scas
arpl
adc
loop
mov
mov
call
add
pushf
push
add
nop
sbb
cmpsl
sahf
jbe
and
mov
add
inc
push
sahf
std
jecxz
jmp
push
repz
shlb
jo
stos
mov
test
addb
and
call
out
mov
icebp
test
add
push
dec
lods
pop
lcall
aas
sbb
icebp
hlt
dec
stos
rol
mov
mov
dec
xchg
es
push
xchg
lahf
jne
mov
data16
sub
pop
push
push
data16
cmpsl
ja
jmp
xchg
pop
add
ret
pop
xchg
lds
jno
mov
cs
mov
lea
ficompl
push
mov
jge
loopne
in
dec
leave
push
cwtl
in
dec
loop
cmp
xchg
push
jmp
out
pop
lds
inc
pusha
shll
in
call
shr
stos
pop
add
jle
stos
cmc
sbb
and
inc
mov
fwait
jg
out
std
lea
mov
daa
ds
lds
mov
jns
xchg
mov
loop
mov
jecxz
adc
cld
out
mov
sbb
push
jmp
loop
sbb
enter
jecxz
or
ljmp
xor
mov
sbb
jno
dec
clc
jecxz
mov
xchg
inc
test
mov
jae
jp
std
inc
lods
popf
cmpsb
mov
add
xor
dec
inc
arpl
cld
mov
iret
je
push
dec
xor
arpl
add
and
leave
mov
adc
mov
les
popf
jmp
inc
push
leave
outsl
mov
shlb
jno
test
pop
gs
sti
scas
stos
cs
pushf
test
sarb
inc
mov
inc
in
mov
pop
push
pop
imul
mov
jno
nop
inc
sbbl
add
cltd
cmpsl
mov
or
sbb
xchg
imul
sbb
stos
mov
imul
shlb
ja
sub
outsb
mov
insl
xchg
scas
ret
stc
sbb
bound
push
int3
mov
cwtl
mov
out
push
xor
sbb
lret
sbb
adc
mov
add
mov
ljmp
xchg
in
das
push
repnz
shrb
clc
adc
loopne
pusha
fldcw
mov
xchg
lea
mov
add
dec
sbb
jecxz
loope
jg
ds
cli
leave
mov
stc
mov
test
lds
dec
insb
pop
in
mov
stos
cmp
enter
sbb
mov
jg
call
in
xor
fdivs
and
sbb
pop
in
or
call
adc
mov
and
in
sahf
clc
mov
pop
clc
movsl
test
in
and
xor
negb
dec
fisttps
and
and
mov
mov
adc
mov
int
xlat
scas
cmpsb
add
test
ljmp
or
adc
dec
xor
out
xor
fsubp
jnp
or
cmc
leave
pop
pop
les
into
inc
jbe
and
inc
mov
loope
imul
repz
push
mov
bnd
cli
out
adc
mov
ret
mov
es
or
sbb
hlt
or
mov
call
or
in
sub
sub
pop
fisubs
loopne
jmp
imul
out
xor
movsl
cmp
sub
cli
fdivl
push
leave
sbb
push
loope
int
mulb
sub
xchg
mov
test
jb
pop
fsubs
scas
adc
pop
adc
pop
lock
push
jge
pusha
inc
sub
xor
mov
jbe
lods
leave
and
aad
mov
and
lods
pop
sbb
add
daa
jne
mov
hlt
pop
jp
pop
ja
pop
fwait
mov
loope
repz
pop
sub
mov
xchg
bt
mov
std
and
xchg
fistps
test
xchg
jae
and
jp
push
in
jb
int3
loope
or
lds
and
iret
mov
add
push
lock
jo
lahf
mov
movsl
push
mov
sbb
pop
pop
adc
add
mov
js
shll
out
call
mov
or
and
dec
fxch
sub
cld
xchg
in
in
imul
in
mov
das
lea
gs
negl
outsl
jge
pop
cmp
pop
pushf
enter
aaa
mov
pop
mov
popf
xchg
in
rolb
sub
pop
inc
stos
pop
cmp
push
fisttpl
mov
mov
es
xlat
test
push
mov
aam
mov
dec
add
pop
pop
push
xchg
cmp
push
lods
leave
mov
jne
scas
vucomisd
adc
das
nop
imul
mov
jle
xchg
popf
call
ss
mov
pop
jl
mov
xchg
fstps
je
lock
mov
and
inc
push
ds
cmpsl
lahf
jb
xchg
or
cs
xor
mov
dec
or
mov
mov
out
inc
inc
lret
jle
mov
imul
inc
pop
jg
and
ja
out
and
xchg
sub
in
stos
mov
shl
ja
ret
or
fldcw
cmp
adc
in
movsl
mov
xchg
cld
adc
movsb
push
in
inc
mov
js
mov
dec
out
xchg
cld
xorl
xchg
or
push
lret
dec
add
repz
sbb
hlt
inc
ror
sbb
in
test
imul
cmp
push
jnp
jl
add
ficomps
pushf
sub
aaa
jns
sbb
addr16
in
clc
inc
rorb
rclb
or
xchg
add
xor
shlb
int3
ljmp
cli
inc
xchg
push
fisttps
pusha
jns
in
jp
in
mov
stc
mov
jb
imull
mov
stos
jl
pop
imul
cmpsb
in
inc
push
and
jae
icebp
rorb
loope
mov
mov
inc
cmp
mov
mov
cwtl
dec
loope
push
nop
aas
fldenv
fdivrs
xchg
pop
hlt
jae
ss
mov
les
and
add
push
pop
fsubrl
mov
shrl
xchg
pushf
std
call
outsl
jmp
sub
out
arpl
jmp
movsb
aaa
hlt
push
mov
xor
subb
jb
jb
stos
adc
lods
and
cli
dec
fcoml
popa
inc
fstps
lret
jns
jb
xor
dec
inc
sub
daa
jnp
sub
stos
or
call
lock
loop
push
adc
not
fimuls
fldl
and
repnz
inc
sbb
lret
addr16
jmp
outsl
cltd
lds
or
pop
and
mov
mov
sbbl
jae
les
sub
outsl
test
xor
and
pop
jnp
xchg
int3
negl
out
add
stos
sub
sub
inc
fldcw
and
dec
cmp
or
sbb
loop
mov
ret
clc
imul
and
jno
out
icebp
xor
cmc
call
cmpsb
cli
imul
fisttpll
mov
inc
insb
mov
xchg
sub
clc
and
aaa
outsl
pop
ret
mov
rorb
subb
lahf
mov
ficoml
push
adc
repz
xchg
pop
push
xlat
push
fistpll
jp
fistpl
mov
shll
mov
push
inc
adc
jns
and
jmp
sub
imul
gs
xchg
sub
mov
in
push
imul
outsb
pop
sarl
push
fsubl
lea
out
incb
ljmp
inc
out
aas
mov
lds
push
mov
cmp
sbb
add
jb
and
or
stos
mov
push
mov
hlt
outsl
out
inc
xor
into
mov
lea
pop
push
push
sbb
pop
jb
mov
jl,pn
mov
mov
test
ds
imul
aam
rolb
and
mov
xchg
xchg
push
not
jne
add
ret
mov
pop
aam
outsl
xchg
xlat
sbb
testb
sbb
xor
mov
jmp
adc
xor
mov
popf
mov
ds
in
xchg
clc
cmp
enter
xor
adc
pop
scas
mov
or
xchg
dec
repnz
add
push
cmp
sahf
lods
sti
inc
mov
fmuls
sub
sub
push
in
pop
stos
pop
popa
sbb
hlt
shlb
scas
push
push
mov
sub
jno
int3
mov
lods
in
loopne
mov
insl
gs
mov
or
ja
aam
mov
xchg
clc
mov
jae,pt
movb
or
out
bound
jno
xchg
xor
mov
jne
push
mov
jmp
pop
out
dec
and
sbb
push
das
add
lret
sub
aad
jg
or
add
push
add
mov
jge
xchg
icebp
ret
and
jns
pop
xchg
stos
shl
sub
xchg
inc
adc
pop
in
inc
xor
adc
outsb
cmp
lods
jecxz
mov
dec
sahf
pop
and
fcmove
add
iret
mov
sub
dec
stc
adc
sub
xchg
test
xchg
pop
mov
mov
push
ret
test
repnz
repnz
cltd
and
in
lcall
cmc
jg
xchg
in
or
mov
cmp
bound
mov
gs
fdiv
inc
pop
sub
es
incb
push
leave
jmp
into
xor
xor
adc
sub
sub
jne
jb
lcall
addl
int
xor
pop
test
push
push
xor
add
addl
inc
mov
popa
or
pop
jae
and
mov
dec
push
mov
sub
incb
test
ds
fldt
ficompl
add
pop
cmp
js
fidivl
pop
xchg
jbe
cmpsl
adc
xchg
lret
add
cltd
into
js
in
mov
xchg
sbb
xchg
jb
test
adc
nop
mov
int3
out
test
repz
pusha
fdivrl
aad
out
push
aaa
and
fwait
negb
fnstsw
and
stos
ret
cmp
add
mov
pushf
shr
adc
arpl
jns
out
pop
repnz
cld
xchg
push
aas
inc
clc
push
add
pop
into
pop
inc
lret
lret
aad
hlt
out
sub
fxch
arpl
mov
inc
lods
popa
pushl
popf
rcll
lcall
loopne
xchg
insl
ljmp
or
lcall
insb
dec
int3
popa
dec
lret
lock
cmp
inc
xor
aaa
pop
jns
inc
sti
and
movsl
xchg
call
adc
lcall
mov
outsb
loope
vmovaps
arpl
add
hlt
xor
scas
pop
fistl
loope
stc
shlb
or
scas
nop
loopne
sub
push
icebp
mov
jnp
shll
shll
push
xchg
or
dec
test
push
fwait
clc
ljmp
mov
or
andb
in
mov
test
inc
cltd
mov
add
fdivr
mov
adc
repnz
adc
enter
mov
shlb
mov
fadd
sbb
orl
test
or
push
dec
jmp
jo
in
inc
inc
jl
mov
mov
push
aam
fimull
xor
or
pop
xorb
xchg
lods
add
lods
mov
insl
nop
adc
push
pop
daa
out
mov
mov
and
call
repnz
sub
xchg
push
loope
sub
mov
cs
jae
cmp
cmpsl
sub
data16
mov
imul
cmp
push
jmp
dec
xor
sbb
pusha
jle
pop
xor
js
dec
lock
jo
or
lret
cmp
jmp
adc
mov
jnp
lret
mov
sbb
xchg
outsl
pop
ss
aad
in
cmp
mov
cmp
insb
pop
mov
call
subb
testb
mov
or
outsl
mov
cld
xor
andb
pop
add
imul
stc
out
jg
xor
lea
push
pop
or
inc
ljmp
pop
stc
pop
fcomps
xchg
dec
stos
pop
push
idivb
dec
mov
cld
out
cmp
cmp
in
js
push
cmp
adc
or
jle
ljmp
out
adc
idiv
lret
mov
cltd
js
pop
ret
or
xor
adc
mov
int
les
add
mov
push
in
push
jne
cltd
pusha
jl
aad
bound
shll
xor
adc
mov
aam
ret
dec
cld
popa
jns
adc
xor
and
pop
dec
dec
jp
mov
sbb
daa
push
mov
inc
adc
leave
mov
sub
mov
fsqrt
add
sub
das
mov
fisubrs
in
jmp
and
push
xchg
pop
mov
lahf
fadds
sbb
dec
pop
push
pusha
fidivl
aaa
ret
repz
mov
stos
dec
cmc
jae
mov
imul
lret
imul
ss
test
cmp
and
add
and
inc
and
fnstsw
jno
lret
lret
and
sbb
js
sub
and
dec
mov
adc
sbb
mov
sar
fadds
push
push
xor
insb
daa
dec
outsb
xchg
push
std
or
xchg
sub
rolb
fcmovnu
cwtl
xor
ret
repnz
divb
cmp
push
loop
add
ja
mov
loope
mov
call
inc
push
lods
jp
pop
cmp
xor
xchg
sbb
out
ret
mov
mov
mov
imul
mov
xor
addr16
push
adc
mov
add
leave
push
pop
and
add
push
ljmp
xor
and
adc
pop
mov
sub
sub
es
mov
jns
std
pop
sbb
fs
filds
dec
xor
negb
pop
shlb
mov
xchg
add
in
inc
faddp
mov
cmp
int
lahf
sub
jg
ss
stos
cmp
decl
popf
sbb
cld
cs
loope
shll
lock
ret
cmp
or
xchg
pop
cmc
sarb
and
mov
test
adc
jmp
popa
pop
pop
xor
imul
pop
arpl
cmpsl
xor
push
push
push
push
push
scas
daa
mov
push
fldcw
sahf
jnp
addr16
inc
and
inc
push
xor
mov
cld
mov
jbe
pushf
movsb
adc
into
xchg
xchg
mov
xor
sbb
cltd
ds
mov
aaa
lret
mov
pusha
fs
xchg
daa
fdivrp
clc
inc
mov
rorl
js
push
dec
outsb
cmp
inc
incb
mov
ret
mov
xor
jne
mov
sti
outsb
fldenv
add
jb
popf
push
das
or
enter
cld
xchg
mov
jne
daa
and
jae
xchg
aam
push
imul
pop
inc
jns
mov
cmp
mov
inc
adc
add
mov
hlt
jg
dec
lock
loopne
lds
cmp
daa
stos
aam
and
dec
and
mov
sbb
incl
scas
or
stos
ret
or
test
xchg
jecxz
in
int
cmp
lret
xchg
xchg
mov
jnp
inc
out
inc
insb
scas
out
push
jmp
xchg
add
pushf
hlt
dec
xor
fiadds
or
and
imul
push
dec
testl
add
pop
xor
insl
sub
mov
leave
leave
ret
cwtl
lcall
and
jg
or
lcall
lret
or
imul
clc
js
in
out
in
aam
pop
es
jp
test
fistps
pushf
adc
adc
aad
xor
scas
in
nop
into
ret
push
sahf
lret
insb
dec
imul
movsl
mov
sbb
mov
add
insb
push
ret
sub
stc
and
jnp
pop
loopne
scas
jnp
xchg
push
rcr
jle
cmp
lea
scas
push
jp
sub
push
mov
mov
xchg
jge
test
mov
lret
sbb
shll
out
pop
loop
adc
int3
lods
cmc
push
xlat
adc
or
dec
ret
adc
xchg
ret
cmp
out
es
or
mov
or
test
arpl
aaa
xchg
and
sub
sbb
in
int3
cmp
push
popa
cmp
cmp
pushf
adc
or
push
pop
xchg
push
ret
test
and
movb
repz
cs
dec
popa
and
dec
in
add
dec
xor
push
dec
push
xchg
pop
sub
sbb
icebp
cmp
jbe
fadd
sti
xor
add
jb
testl
jb
pop
mov
adc
dec
adc
inc
jp
adc
jno
or
mov
push
into
je
pushf
xchg
or
push
pop
enter
notl
xchg
cs
cmp
aas
pop
jae
pop
xor
lock
aas
mov
add
pop
lods
ja
aad
mov
insb
arpl
lret
dec
dec
and
and
push
push
stos
out
stc
jne
int3
lock
adc
cmpl
addl
and
sub
outsl
insl
shlb
mov
dec
jecxz
cmpsb
out
mov
data16
or
shll
inc
fs
leave
mov
stc
push
fbld
jp
call
cwtl
outsb
adc
bound
int3
pop
mov
jb
sbb
and
mov
ficompl
sahf
scas
pop
imul
push
pop
pushf
mov
mov
mov
repnz
fld
add
fidivrl
aaa
adc
aas
lock
mov
clc
lock
fldenv
pop
sbb
repnz
es
repnz
icebp
push
mov
mov
gs
add
loop
adc
mov
sub
or
faddl
or
daa
lwpins
push
leave
or
adc
mov
es
push
outsl
push
sahf
orl
xchg
xchg
cmpsl
cmpsb
jne
add
in
cmpsl
insl
push
mov
in
subl
cmp
cwtl
xchg
push
mov
ss
clc
jecxz
add
push
xor
adc
nop
rcrl
and
orb
cwtl
or
mov
sbb
adc
xor
ljmp
call
push
ret
sub
cmp
push
pop
mov
popf
mov
sbb
or
call
fcoms
push
out
addr16
mov
mov
inc
sarb
jnp
ljmp
and
xchg
cs
std
inc
sti
mov
sub
sti
into
inc
adc
popa
xchg
rcrb
lds
add
clc
adc
mov
xor
sysret
dec
test
pusha
insb
xor
jle
cmp
insl
cli
push
incb
das
add
xor
sbb
js
sar
cltd
inc
rolb
sti
divl
lret
cld
mov
mov
ret
ja
adc
add
imul
push
sti
sub
pop
adc
es
cmp
bsr
ss
fsts
sub
in
add
test
fs
mov
fnstcw
xchg
aaa
cmp
icebp
nop
xlat
sub
adc
imul
and
loopne
jns
jmp
loopne
sub
mov
in
pop
dec
in
jmp
and
mov
in
push
jbe
jnp
cwtl
fsubr
pop
ja
pop
sub
push
push
push
clc
jmp
scas
outsb
ret
pop
xor
pop
mov
iret
inc
dec
scas
pop
test
pushf
pop
mov
dec
stos
xor
testl
pop
fistpl
rcll
mov
lcall
out
shr
mov
movzwl
mov
call
xchg
aad
les
jo
shll
mov
mov
jle
mov
fs
mov
fiadds
jb
pop
sub
add
fnsave
arpl
inc
add
jge
cltd
push
mov
mov
inc
inc
add
sub
fstps
inc
add
cwtl
cs
mov
sbb
test
ja
cli
xchg
pop
mov
inc
mov
or
or
pop
pop
add
repnz
aaa
xchg
jp
in
stos
insb
dec
scas
movsb
in
add
dec
push
cli
pop
aas
je
subl
test
mov
jnp
sbb
scas
lods
jecxz
outsb
push
mov
jnp
mov
iret
or
adc
jb
gs
adc
scas
inc
push
pop
or
xor
fbstp
sbb
clc
lret
mov
ss
sahf
aas
subl
xlat
mov
inc
push
mov
push
jge
fstp
mov
pop
mov
fst
inc
jbe
jp
cmp
xchg
sbbb
mov
icebp
inc
pop
out
sti
pop
adc
and
mov
mov
inc
mov
ds
and
or
jmp
mov
imul
inc
testl
insl
adc
inc
mov
adc
fldenv
fcmovnbe
mov
push
shrd
dec
cmp
xchg
lret
dec
mov
repnz
bound
and
push
push
push
mov
sbb
jne
imul
push
in
enter
mov
sub
ret
test
push
ljmp
cmp
pop
and
mov
in
fimuls
mov
xor
pop
push
subl
sbb
insb
xlat
mov
imul
loope
mov
jno
hlt
pop
aaa
add
sahf
pop
inc
jne
xor
cmpb
aaa
dec
loopne
jns
or
mov
pop
rcll
add
repnz
outsb
popa
cld
mov
and
jno
iret
pop
fcomi
cmp
adc
outsl
popa
clc
test
push
sbb
dec
lcall
into
jne
cmp
frstor
cmp
adc
cld
sub
hlt
pop
in
pop
mov
in
fdivrl
mov
add
pop
add
adc
iret
sub
int
mov
pusha
add
push
sub
loopne
fwait
popf
imul
xchg
mov
div
cwtl
icebp
pop
movsb
jg
cmpb
jo
add
add
in
cmp
add
pop
filds
insb
scas
push
adc
in
insb
cltd
jecxz
aam
leave
pop
inc
ds
xchg
sub
xor
adc
adc
test
rcll
and
jo
dec
aam
pop
xor
xchg
outsl
fsubrp
jecxz
jge
cmp
cmpsl
sub
mov
pop
divb
in
cmp
mov
in
pop
arpl
add
xchg
jae
sarl
mov
pushf
dec
pop
jno
in
sub
loop
xchg
aam
in
bound
rcll
loop
ja
add
repz
push
fbstp
jg
lret
mov
ljmp
cli
add
or
daa
divb
int3
adc
mov
sahf
mov
jno
or
pop
ret
lret
push
sub
rorl
push
daa
xchg
jae
cmp
jbe
fsubr
pusha
mov
lods
lds
dec
push
sbb
js
mov
je
mov
gs
dec
mov
adc
cmc
mov
jnp
add
fidivl
sub
mov
sbb
xlat
xor
daa
cli
dec
shlb
or
aas
and
pop
and
lea
test
imul
and
arpl
aaa
mov
adc
scas
adc
ss
imul
cwtl
push
jge
adc
mov
std
push
push
repz
loopne
sbb
mulb
push
ljmp
daa
aam
daa
andl
mov
dec
or
pop
aaa
sti
in
seto
iret
pop
imulb
cwtl
lret
fstl
inc
cmc
rcll
mov
rolb
inc
mov
cli
repnz
orb
xor
mov
lret
outsl
fidivrl
in
int
mov
arpl
mov
movsl
jae
and
lcall
xchg
adc
int3
orl
aam
push
mov
es
mov
loop
cmp
adc
xlat
pop
sbb
mov
rorb
mov
fwait
cld
enter
in
bound
lahf
into
inc
rclb
cmpb
dec
shl
adc
sub
jns
enter
sbb
incl
mov
xor
lock
pop
push
add
cmp
cmpsb
fnsave
in
lods
mov
sbb
sbb
or
je
add
lahf
jg
add
mov
mov
push
xchg
lret
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fucomp
andl
pop
addl
scas
aam
xor
mov
jo
aam
std
mov
into
xor
and
pusha
pop
sarb
out
sbb
outsl
sbb
adc
arpl
pop
inc
jmp
mov
out
add
adc
fwait
mov
ret
pusha
mov
pushf
mov
inc
push
push
int
lcall
mov
and
inc
ja
xchg
daa
lods
lea
xor
dec
ret
mov
lea
jecxz
mov
js
gs
sbb
cmpsl
jl
sbb
ret
adc
aad
push
cmc
lea
mov
sub
sbb
bound
out
and
dec
pop
dec
pop
mov
cmp
fdivrl
or
cmp
dec
cmp
pop
jnp
jnp
rcll
arpl
xor
jl
cmp
pop
test
in
adc
add
adc
mov
jmp
imul
or
popa
filds
and
dec
pop
xchg
insb
std
jae
rcl
int3
jo
mov
cltd
sbb
xchg
ds
adc
xor
push
nop
fs
push
cmpsb
jnp
cmp
push
jmp
out
mov
add
xor
add
out
or
aad
aas
mov
inc
out
lret
xchg
inc
jmp
lds
rcr
push
add
ret
add
dec
inc
dec
cmpsl
cmp
lcall
xor
test
cmp
mov
pusha
scas
inc
or
xorb
insl
mov
test
push
mov
pop
cmp
mov
adc
stos
int3
push
aam
ja
aaa
movsb
sbb
stos
movsl
xor
decb
enter
mov
mov
xchg
adc
adc
xlat
mov
enter
fstps
std
adc
push
int3
clc
add
test
xor
mov
pop
mov
adc
aad
lcall
cmc
ficomps
into
sbb
adc
inc
push
or
add
pop
sbb
test
pop
out
loopne
rcr
das
rclb
mov
addr16
into
jmp
cltd
xlat
icebp
test
cmc
and
inc
dec
test
ret
lcall
mov
adc
mov
jl
pop
cmc
enter
jb
pop
pop
jne
fstl
sbb
roll
cmp
data16
pop
rcr
leave
lds
insb
cmc
jno
arpl
add
pop
popa
ja
fcoml
adc
or
sub
inc
es
or
xchg
dec
xor
mov
cli
adc
pop
add
lahf
adcb
aad
leave
xor
pop
jo
pop
push
iret
push
daa
scas
std
xor
ror
pop
lock
outsl
pop
adc
jns
pop
arpl
es
daa
movsb
js
mov
enter
xor
jmp
xchg
lea
test
mov
repnz
inc
cli
into
fisubrs
xor
and
popa
rcrl
sbb
inc
lret
push
test
jno
push
add
in
mov
adc
ficompl
jns
lret
mov
out
dec
and
cmp
data16
sbb
xor
pop
push
sbb
sarl
push
das
cmpsb
sbb
lret
lock
mov
mov
sub
btc
shlb
xchg
add
aam
cld
in
enter
fistps
in
adc
xchg
js
ret
sub
xchg
sbb
sub
xor
mov
add
cmp
xchg
in
dec
dec
int
inc
jl
inc
loop
inc
jl
pusha
je
gs
lahf
dec
jns
arpl
jecxz
iret
inc
lods
rorb
sbb
push
cmp
ds
pushf
movsb
sub
idivl
and
stos
and
in
xchg
dec
cmp
mov
xor
mov
out
cmpsb
insb
rorb
xchg
stos
dec
pop
push
mov
fs
push
adc
xchg
mov
add
mov
sbb
mov
jl
out
lret
add
stos
push
xchg
push
lcall
aad
mov
jb
xor
xor
rorl
mov
xchg
push
add
loop
mov
insb
sbb
mov
inc
pusha
out
subb
xchg
jl
lcall
shrl
or
insb
sbb
jb
pop
aaa
repnz
hlt
les
jbe
xchg
sub
xchg
sbb
out
sub
fld
adc
push
adc
jae
cmpsb
call
js
pushf
into
fsubrs
mov
xchg
daa
mov
push
pop
insb
cmp
mov
aaa
cmpsl
das
jne
mov
cwtl
subl
incl
and
push
push
pop
mov
loopne
ficoms
mov
push
dec
jnp
jmp
jmp
mov
pop
lcall
or
fildll
jl
fidivrs
mov
addr16
add
outsl
xor
cmp
jb
mov
mov
sbb
nop
mov
repnz
xlat
mov
iret
inc
mov
mov
xchg
js
cmp
xor
leave
in
testb
adc
and
or
mov
inc
mov
push
test
out
jnp
and
jnp
insl
mov
push
dec
lret
int
inc
hlt
inc
push
cmp
lcall
scas
dec
mov
cmp
fmuls
xor
pop
mov
andl
jb
hlt
mov
and
xchg
scas
jecxz
adc
push
cwtl
ret
mov
jl
mov
rolb
mov
dec
je
int3
xchg
or
test
pop
stc
outsb
jg
cmp
inc
hlt
or
mov
push
xchg
dec
adc
aaa
jmp
and
loop
leave
fcmovnu
xchg
jp
pop
pusha
jo
jbe
sub
lods
add
xor
mov
and
jp
dec
aad
inc
jecxz
jp
mov
imul
insb
add
cmp
movsb
fadd
iret
rclb
test
cmp
into
add
and
ds
loope
movsb
sub
mov
fmuls
aaa
jns
xchg
test
add
xor
je
mov
mov
xor
mov
movsb
push
mov
sub
outsb
or
je
inc
cli
pop
int3
gs
loop
sarb
loop
cs
inc
ret
push
mov
lds
aam
pushf
ljmp
iret
mov
adc
mov
js
add
je
test
lret
jmp
add
cs
mov
add
cli
jl,pn
test
lds
lcall
add
xlat
shl
or
or
movsl
test
mov
xchg
jae
icebp
dec
call
in
mov
xor
sbb
lea
jg
cmpsb
sbb
cs
repnz
clc
and
cmc
pop
add
add
push
lock
push
xchg
insb
fsubs
lret
mov
lea
cld
xor
xorb
loop
outsl
push
adc
lods
xchg
cmp
jb
push
add
pop
add
lods
in
or
xor
pop
scas
or
lea
dec
stc
mov
movsl
insl
hlt
jo
mov
fcomps
das
arpl
add
mov
pushf
lret
ret
push
xchg
into
stos
repz
fcoml
enter
aam
mov
dec
pop
sbb
and
adc
daa
lret
push
fbstp
cmc
mov
adc
mov
mov
xorl
sub
mov
dec
sti
push
xlat
mov
dec
scas
das
jecxz
lret
and
adc
movsl
scas
mov
cli
mov
sub
int
pop
push
test
mov
inc
fldenv
mov
sahf
leave
pop
leave
sbb
pop
ffree
mov
out
incl
sub
add
add
or
outsl
roll
cmp
inc
psrlq
ror
les
cmp
scas
dec
int
dec
cmp
dec
sbb
pop
sub
mov
or
inc
jno
cmp
push
or
rcr
lahf
mov
add
mov
cmp
inc
fldt
hlt
mov
call
mov
les
sbb
out
mov
iret
pop
dec
bound
cmpsl
pop
or
mov
inc
fs
push
outsb
stc
std
icebp
mov
jo
mov
xor
and
leave
mov
hlt
mov
and
jae
sbb
out
inc
pop
adc
out
push
fcomps
mov
into
inc
je
rorl
jl
xchg
out
loop
int3
rcpps
push
dec
out
jmp
sub
and
sub
jge
jle
cmovge
sub
fnsave
in
lgs
xor
repnz
hlt
cld
xchg
in
sbb
je
adc
sbb
jmp
inc
idivl
fnstenv
repz
fwait
dec
cmp
mov
fbld
andl
add
inc
arpl
xchg
mov
aam
jo
bound
mov
test
adc
in
jp
mov
mov
inc
fwait
cwtl
fisubrs
sub
and
ljmp
push
and
aas
imul
ss
fdivrs
dec
mov
adcb
sarb
outsl
jae
inc
jp
test
push
xchg
adc
out
push
in
mov
jmp
dec
mov
add
mov
xchg
imul
mov
jecxz
mov
jno
sub
push
leave
jmp
test
and
lret
cmpsl
inc
lret
cmp
mov
sub
push
mov
lods
inc
xchg
fmull
jmp
push
mov
or
inc
jl
jno
out
xchg
les
out
pop
cwtl
ret
ffree
cmpsb
cmc
mov
mov
cmpsl
inc
inc
jno
insl
pop
jnp
nop
dec
ficoml
loope
mov
xchg
outsb
cli
pop
addr16
pop
cmp
sbb
dec
or
mov
add
andl
sub
repz
cmpsb
mov
mov
cmp
xor
and
cmp
add
insl
test
and
nop
sbb
jmp
ret
cwtl
call
mov
push
pop
jmp
ljmp
pusha
and
fiaddl
cltd
push
jns
push
jnp
mov
xchg
stos
sub
sbb
push
testl
mov
outsb
pop
xchg
cs
mov
inc
cld
cmp
into
cltd
ret
rcrb
jle
pop
repz
loop
mov
rclb
aad
negl
jge
jmp
int
cs
push
cld
mov
ljmp
jp
in
out
ret
dec
in
inc
xor
gs
rcrl
inc
out
hlt
jl
xor
mov
adc
pushf
popa
push
jmp
cmc
mov
outsb
dec
cmp
pushf
cmp
test
mov
sub
lods
lahf
fists
push
js
fcomi
fnstsw
adc
mov
push
shl
inc
dec
repz
inc
sbb
mov
xchg
push
imul
xor
cmc
out
jbe
ret
fnsave
daa
xorl
push
jg
sbb
cmp
cmp
out
or
cmp
aaa
jecxz
add
mov
jmp
mov
addr16
xor
orb
xchg
dec
sub
pop
sbbb
imul
pop
dec
in
and
adc
xor
jmp
sbb
rcl
jle
and
ret
imul
faddp
test
mov
jg
and
xor
sti
loope
push
pusha
pop
cmc
in
popa
inc
mov
test
xchg
bound
cld
xlat
je
push
fmul
icebp
in
fstpt
xchg
cli
int3
add
shll
in
fistl
sti
std
test
mov
enter
inc
das
jl
pop
mov
test
sub
sbb
cld
addb
push
test
xchg
jno
je
into
clc
divb
adc
mov
cmp
xor
push
jns
test
jo
test
fsubs
lcall
cld
repnz
pop
jnp
mov
arpl
mov
sub
mov
outsb
mov
add
mov
aam
xor
pop
repnz
cmp
inc
cmp
inc
add
dec
sbb
fistps
xchg
sar
imul
loope
xor
and
xchg
movsb
add
orb
sub
aas
nop
push
push
dec
dec
push
lock
insl
sub
addl
xor
xchg
loope
sbb
jp
movsb
imul
popf
fistl
cs
loope
fnsave
loop
sahf
daa
mov
and
jle
in
push
xor
xchg
pop
inc
sub
mov
push
mov
or
sbb
cld
sub
les
mov
je
inc
add
pop
dec
icebp
pop
push
sub
push
adc
xchg
pop
mov
in
push
xorl
scas
mov
push
clc
sbb
lahf
test
stos
lret
mov
cmp
fwait
cltd
pop
loopne
in
sbb
mov
or
mov
jecxz
inc
lahf
push
inc
lcall
add
push
cmp
mov
mov
arpl
cmpsl
cmp
dec
pop
fs
std
pushf
ret
sbb
iret
xchg
and
add
clc
jg
mov
xlat
in
mov
lds
jb
xchg
mov
sub
repnz
xchg
jmp
shlb
cmp
out
stos
subb
addr16
mov
push
or
jne
into
push
add
sub
jno
loop
in
add
mov
or
lock
mov
pop
xor
in
test
outsl
dec
sub
addr16
cmp
xchg
sub
add
xchg
imul
inc
mov
scas
jo,pn
and
ret
jecxz
rorb
xchg
add
pop
cmp
jae
mov
sbb
sbb
arpl
xchg
pop
dec
xchg
jmp
xor
cmp
shrd
ret
je
xor
push
inc
and
xor
sbb
scas
lret
outsl
int
shll
out
sahf
test
loop
mulb
jle
jl
fistpll
lcall
xorl
jmp
jae
push
je
pushf
sbb
xor
sub
sbb
out
movsb
mov
scas
fnstcw
fldt
lcall
xor
dec
fistl
hlt
jmp
sarb
gs
jle
mov
daa
xor
add
mov
cmp
outsl
dec
jge
popf
pop
test
xor
lock
mov
insb
clc
xor
stos
fldl
das
jmp
add
mov
xor
leave
jle
pop
notb
cmp
imul
pop
sahf
xchg
js
and
icebp
lods
in
fstpl
nop
jns
sub
and
mov
pop
sahf
cmpsl
adc
add
stos
xchg
jno
lods
mov
add
or
add
pop
nop
lret
fdivrp
fsubrs
icebp
pop
dec
pop
repz
jno
sbb
inc
push
mov
jae
cmp
pop
sub
sub
scas
mov
in
adc
lds
sti
jecxz
lods
mov
fwait
in
and
stos
ret
sub
roll
sub
xchg
pop
loop
ljmp
aaa
and
imul
mov
push
inc
out
pop
cwtl
sarb
cmc
push
jl
dec
push
and
fsubp
jo
inc
adc
mov
mov
test
mov
cmp
dec
push
icebp
mov
mov
shl
xor
sub
fdivs
mov
jno
mov
mov
or
jns
sub
cs
and
sar
test
cld
lds
popf
leave
and
xor
ja
mov
jp
lods
call
mov
fisubrs
mov
inc
mov
and
call
push
or
and
popf
add
inc
cmp
push
cmpsl
mov
orl
xor
imul
inc
and
sbb
pop
sub
sbb
std
lods
data16
int
jmp
gs
mov
xor
mov
in
push
ror
pop
movsl
out
loop
inc
call
xorb
adc
add
les
adc
and
lret
in
dec
in
das
bnd
xchg
pusha
mov
lret
push
and
subb
js
movsl
dec
idiv
and
pop
lea
cmpsb
in
add
sti
or
out
scas
sarb
fwait
test
aaa
sub
or
repz
mov
gs
push
cmpl
ds
addr16
shll
jb
ffree
mov
enter
xlat
dec
and
xchg
xor
ja
adc
pop
popf
and
imul
dec
xor
and
jecxz
pop
popf
push
std
push
js
inc
jo
mov
aas
in
mov
cmp
clc
push
lcall
inc
jnp
repz
stos
add
sbb
jmp
imul
call
or
fsts
jl
loope
aad
mov
out
and
push
pop
or
pop
imul
scas
adc
ss
cwtl
xchg
xchg
or
imul
push
orb
bound
in
cltd
sbb
push
rorl
mov
add
mov
and
push
sub
mov
sub
bound
ss
jne
shrb
jbe
xor
inc
mov
arpl
lea
dec
call
aad
test
add
stos
push
jecxz
jns
jns
pop
fisttps
and
movsl
mov
cmpsl
and
mov
in
fsubs
ljmp
fisttpl
out
add
xchg
jmp
mov
mov
sahf
cmpsb
imul
fidivrs
adc
xor
popa
mov
loopne
sahf
leave
fnstsw
sbb
add
xchg
clc
loop
inc
faddp
mov
mov
adc
sbb
jp
pusha
inc
outsb
test
dec
cwtl
addb
stc
xor
add
inc
lret
xchg
leave
shr
in
loopne
push
xor
adc
push
mov
xchg
or
lcall
in
call
dec
fldt
ja
in
dec
xor
jle
push
clc
sbbl
xchg
ret
xor
test
leave
jbe
adc
push
lods
out
out
ja
pop
xor
push
insl
xor
xor
mov
push
cmpsl
add
xor
idivb
int3
cmp
out
push
pop
je
jbe
pop
sbb
ret
xchg
out
outsl
mov
dec
loope
int
in
inc
aam
mov
push
bound
jmp
mov
les
icebp
test
aad
pop
mov
sub
adc
sbb
inc
imul
pop
xor
roll
push
inc
loope
ret
push
mov
xchg
cmp
out
out
adc
bnd
mov
fs
loope
cltd
in
push
scas
inc
adc
or
sub
push
xchg
push
dec
and
cmpsl
lahf
bound
mov
int3
cmp
insb
cld
sti
mov
sub
pop
mov
imul
cmpsb
mov
mov
imul
mov
xchg
dec
int3
mov
mov
mov
cmp
sub
pop
enter
push
sbb
and
jne
lret
fwait
add
sbbb
adc
pop
mov
dec
jmp
pushf
mov
mov
data16
adc
dec
sbbl
fldt
push
sub
jle
cmp
js
outsl
sbb
add
ds
es
sbb
data16
xor
adc
dec
jl
adc
or
iret
ds
cmpsb
and
sub
stos
or
call
cld
mov
xchg
cmp
aam
scas
fists
mov
sbb
and
test
fldl
sbb
mov
int
or
loopne
imul
xor
ret
data16
and
adc
mov
lahf
push
add
faddl
inc
sarb
sarb
jb
dec
dec
dec
mov
and
or
scas
sub
mov
insb
xchg
popa
or
mov
xor
mov
enter
loopne
pop
sub
sbb
mov
mov
mov
inc
popf
or
test
not
lret
les
dec
in
xor
fstpl
out
in
cmp
iret
cs
outsl
sub
fwait
test
pop
pop
or
pop
jno
fldcw
push
sub
inc
xchg
addr16
aad
fs
inc
add
sub
mov
loopne
jo
cmp
stos
push
rol
mov
sbb
lods
or
xchg
add
sbb
icebp
add
aaa
push
iret
sbb
or
sahf
stos
fstpt
sbb
aam
and
sarl
stc
adc
cmp
stos
push
pop
mov
movsb
jo
dec
add
inc
jle
xor
iret
xchg
adc
mov
xor
sub
xlat
js
pop
adc
sub
dec
and
push
fcmovnbe
in
add
push
dec
jbe
loope
aad
dec
outsl
adc
or
andb
and
pop
push
cmpsb
xor
jb
shrl
xor
and
dec
mov
mov
ficoml
movsb
jae
rclb
adc
sub
mov
mov
add
inc
imul
push
push
fdivl
cmp
add
add
iret
shr
xchg
mov
push
jnp
testb
xchg
ja
sbb
inc
push
pusha
fnsetpm(287
testl
loop
jg
filds
stc
imul
aam
lret
mov
repz
fisubl
or
fadds
inc
es
cmp
xlat
in
or
fld
mov
pop
xchg
dec
push
insb
fdiv
fwait
sub
pop
mov
pop
lcall
xchg
movsl
jae
xor
mov
rcr
add
push
jge
or
and
xchg
mov
add
arpl
lock
mov
in
mov
mov
in
pop
fimuls
sahf
test
xor
rcll
mov
mov
out
imul
jb
xorl
mov
or
cmp
fildll
pop
mov
adcl
nop
xchg
push
ljmp
into
cmp
leave
or
mov
fisubs
neg
fidivrs
popf
adc
xor
rcl
jnp
scas
or
sete
jle
movsb
jno
movaps
jmp
fs
in
scas
addl
mov
add
test
sub
jnp
daa
adc
mov
out
and
iret
gs
imul
aad
mov
and
stos
pusha
lcall
cmp
cmpsb
sbb
adc
jno
add
sbb
jl
imulb
xchg
lea
data16
mov
pop
xlat
and
inc
jle
mov
daa
into
es
mov
inc
jae
loope
pop
sbb
xor
icebp
movsb
and
mov
insb
js
jo
mov
es
out
pop
in
xchg
dec
pop
adc
xor
sub
jno
mov
or
or
adc
lret
mov
hlt
add
cmp
movsb
and
sbbl
jno
jne
enter
push
hlt
fcompl
cmp
push
lea
xchg
xchg
insl
adc
mov
adc
stc
movsl
test
fists
andl
nop
add
in
scas
jae
out
xchg
cmp
add
xchg
push
lret
inc
jge
jle
jg
jo
push
pop
dec
testl
cmp
mov
mov
cmpsb
cmpsb
sbb
cmp
and
add
mov
scas
daa
fimull
mov
adcl
lock
jnp
add
aam
incb
dec
add
aam
push
xchg
sub
pop
out
mov
cmpsb
dec
arpl
jle
lds
lods
aam
and
int
arpl
aas
push
mov
cmpsl
push
cltd
scas
cmp
fwait
rclb
push
rcrb
fcomps
outsb
adc
call
mov
adc
rol
lret
imul
gs
movsl
xor
mulb
sub
push
dec
inc
lods
jbe
xchg
test
arpl
addl
inc
jo
adc
pop
fstl
sbb
pop
xor
scas
mov
and
jmp
xor
mov
dec
scas
cli
dec
int3
xchg
scas
fisubl
divb
push
push
lods
dec
cmp
in
jnp
or
addr16
sub
pop
or
add
push
dec
lods
icebp
mov
mov
ret
fildl
pop
mov
xorb
sub
pop
decl
fistpll
pop
pop
hlt
ffreep
add
cmpsb
popf
jns
jns
cmp
and
xor
or
les
dec
jae
iret
ljmp
cmp
das
es
movsl
xchg
cwtl
sub
psrlq
mov
and
fistl
sbbb
out
aas
or
in
and
addr16
or
add
cmp
out
cmpsl
push
cmp
cmovs
fwait
scas
push
pop
sbb
mov
jg
ficoms
and
sbb
cwtl
sub
dec
mov
mov
jg
push
fmull
or
or
hlt
data16
mov
jmp
add
lahf
cmp
mov
jns
add
cld
mov
push
fisubrl
pop
adc
dec
inc
fistpll
push
imul
stos
imul
pushfw
mov
repnz
dec
pop
fidivrs
xor
movsl
cs
push
pop
add
adc
adc
xor
outsb
inc
mov
xor
aam
dec
mov
lods
push
lods
pop
int
daa
test
cmp
nop
and
mov
adc
shll
dec
int3
jg
mov
push
lods
xchg
jb
inc
add
les
mov
xchg
pop
and
ret
rol
and
imul
xchg
stos
cmp
pop
and
mov
mov
movsl
mov
adc
das
dec
cmp
test
call
aas
jmp
mov
cmp
leave
int3
lea
inc
sub
add
fsin
mov
lods
sub
inc
test
jl
cwtl
rcll
pop
xchg
xor
test
sub
inc
lret
adc
orb
lods
lcall
pop
xor
jge
inc
xor
notl
push
iret
cltd
jmp
cmp
jae
or
inc
mov
cmp
arpl
push
add
pop
not
jmp
out
icebp
pop
push
lds
pop
imul
out
out
lret
cmc
gs
pop
bsr
mov
sub
bound
shr
jbe
daa
mov
test
sbb
insb
sbb
sbb
or
rcrl
in
pop
mov
mov
in
pop
jo
mov
pop
clc
mov
inc
xchg
jnp
mov
lcall
mov
icebp
or
sbb
inc
xor
sbb
imul
cs
insl
xchg
loopne
cmp
mov
cwtl
sub
and
mov
testl
lods
ja
cmpl
pop
fdivrl
dec
or
data16
stos
subb
lods
cli
fistpl
sub
and
pusha
nop
adc
mov
mov
dec
push
inc
xor
or
pop
cld
pop
mov
dec
add
inc
jne
pop
jnp
fmuls
adc
dec
mov
cmp
inc
jge
and
idivb
rolb
je
clc
dec
jg
or
test
pushf
push
xchg
jnp
pop
jecxz
or
sub
cli
fdivrl
cltd
xor
jmp
ficomps
sub
inc
push
dec
out
mov
add
test
rcrb
stos
jns
jns
aaa
sti
bound
int
lods
jbe
pop
sbb
cltd
cmc
fimull
pop
in
pop
orl
cmp
adc
sub
inc
mov
in
cmp
fbstp
fs
push
inc
xor
sub
stc
jns
dec
cld
sub
mov
rcll
xchg
inc
jo
scas
cmp
and
dec
and
ljmp
shl
mov
scas
aas
mov
daa
push
cmp
ficompl
fcoml
nop
mov
inc
or
fwait
or
scas
and
pcmpgtw
mov
ljmp
push
jg
sti
sarl
sbb
cmp
imul
xor
xchg
out
dec
xchg
test
jo
mov
cmpsl
xchg
fisubrl
lds
mov
popa
dec
jae
sub
frstor
push
das
adc
inc
sbb
loop
jmp
pop
stc
jle
xchg
sahf
or
dec
inc
and
pop
inc
insl
fidivs
cmp
sub
mov
add
sbb
dec
in
pop
xor
out
enter
punpckldq
mov
imul
icebp
mov
lea
jg
out
cmp
lods
icebp
mov
mov
insl
sub
cmpl
mov
xor
aad
movsl
aaa
xchg
adc
aad
xchg
sub
aas
cmpsb
jo
into
dec
rorb
mov
jbe
lea
mov
cmp
int3
push
pushw
in
xorb
inc
lret
mov
out
xchg
adc
mov
and
mov
fdiv
mov
inc
inc
push
pop
inc
rclb
fs
dec
pushf
ret
jg
pop
adc
pop
lea
and
and
dec
inc
imul
ret
jb
mov
fisubl
lahf
cltd
push
push
ds
adc
inc
adc
push
sub
dec
push
sbb
jne
push
fstl
and
aam
add
movsb
mov
lret
xchg
mov
adc
mov
pop
xchg
sar
jmp
hlt
jecxz
xchg
xchg
insl
jecxz
xor
mov
pop
loop
cs
inc
jnp
outsl
comiss
inc
xor
loopne
xchg
mov
add
test
jp
cmp
sahf
notb
cmp
jne
inc
lcall
or
or
pop
mov
sub
cmp
push
addr16
pushf
xlat
push
or
imul
jecxz
sahf
xchg
dec
jne
pop
xchg
subb
dec
mov
mov
out
aad
cmp
daa
push
xor
popl
xor
pop
leave
js
hlt
dec
push
jb
test
out
les
jecxz
dec
or
ss
mov
int
sub
and
testb
cmp
xor
pop
pop
dec
enter
sarb
jle
aas
push
cmc
inc
pop
repnz
adc
dec
dec
inc
loope
or
pop
pop
leave
in
xlat
scas
push
mov
mov
leave
loopne
jo
lods
sbb
cmc
cs
pop
pop
inc
repnz
and
sbb
push
inc
xchg
cs
xor
inc
jnp
gs
test
dec
in
lods
ds
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
xchg
mov
addl
and
popf
inc
xchg
repz
subl
cli
mov
mov
arpl
xor
enter
into
or
cmpsb
inc
mov
add
test
out
mov
mov
stos
mov
xor
fsts
add
and
push
mov
pop
add
stc
fsub
scas
push
xor
cltd
sbb
std
in
fadd
mov
jg
sub
loopne
dec
roll
aaa
clc
dec
pusha
sbb
inc
xor
out
loopne
je
mov
cmp
mov
adc
aaa
mov
mov
adc
xchg
enter
mov
lods
ja
inc
arpl
imul
inc
sub
sbb
inc
pushf
adc
aam
sub
pop
adc
or
cld
aas
les
movsb
push
test
in
test
loopne
enter
mov
mov
rdmsr
scas
xchg
push
addb
into
cltd
rclb
push
xchg
mov
push
lcall
nop
push
jns
or
adc
xor
cmp
jl
ljmp
push
fucomi
sbb
rcll
jo
mov
mov
jge
les
dec
add
sbb
int
out
rcrl
cmp
dec
lcall
gs
and
iret
pop
adc
lods
fnsave
cmp
addr16
mov
ret
sti
inc
or
add
repz
mov
jle
dec
enter
lret
pop
xchg
lods
push
xlat
dec
cmp
xor
out
in
inc
adc
mov
inc
and
pop
mov
cmp
xchg
adc
push
pop
loopne
add
push
jg
daa
push
xchg
mov
movsb
mov
sbb
sbb
mov
test
dec
popf
out
dec
fisttpl
mov
mov
pop
je
fidivrl
mov
xor
mov
leave
mov
xor
jge
push
pop
ds
push
aas
push
inc
movsl
rorl
jae
fadd
adc
cmp
jns
test
and
rclb
insb
pusha
stos
test
add
in
loopne
popf
push
ret
mov
jl
movsb
dec
idivl
rorb
lea
jmp
dec
cli
and
enter
xchg
inc
jp
cltd
mov
dec
jmp
adc
xor
lcall
inc
sar
iret
mov
cmp
test
inc
push
sbb
adcl
adc
cmp
dec
mov
ret
cmpsl
out
jbe
push
xchg
mov
scas
cmpsb
insl
in
lods
cli
rcrl
movl
adc
cmp
stos
lcall
jmp
jmp
xchg
shll
mov
insb
movsl
pop
pop
clc
xor
and
std
inc
je
mov
xor
cmc
fsubrs
mov
fdivl
adc
add
cmp
jle
stc
hlt
pop
leave
shll
cmp
into
add
ja
push
fcmovu
jl
push
mov
push
loop
andb
enter
add
dec
test
insb
gs
add
in
sbb
adc
dec
lahf
add
cmpsb
adc
sub
or
movsl
stos
call
adc
enter
jae
push
stos
xchg
call
stos
xchg
lods
inc
add
pop
jmp
in
or
lret
in
out
sub
and
jb
adc
cmpb
call
icebp
es
icebp
rcrb
aas
cmp
rcl
jmp
mov
in
test
stos
mov
lahf
fistpl
das
sbb
and
pop
fwait
das
test
insb
ror
dec
jecxz
lcall
jne
xor
jp
cmp
jmp
mov
aas
xor
pop
xor
outsb
rdmsr
sub
push
push
insb
sub
inc
mov
lcall
mov
cmpb
pop
mov
out
popa
jb
inc
lds
push
lods
adc
addr16
jp
fucomip
or
cmp
jle
clc
and
popa
inc
dec
push
add
js
ret
inc
pop
loope
pop
mov
jmp
push
loope
sub
mov
pop
fstp
out
fists
je
data16
mov
adc
mov
jl
push
loop
mov
fldenv
imul
dec
pop
das
outsl
lock
cmpsl
and
push
jle
inc
pop
das
and
stos
int
mov
jmp
int3
and
cld
cmpsb
orb
dec
adc
jecxz
dec
mov
xchg
sbb
pusha
xchg
mov
fldenv
push
bound
int
jae
sub
mov
ja
cwtl
jb
mov
cmp
xchg
xor
lcall
dec
lret
vmovntps
pop
mov
dec
lods
mov
mov
divb
roll
inc
xchg
sti
mov
jb
mov
xchg
je
iret
push
mov
mov
adc
and
das
movsl
adc
inc
pop
iret
xlat
rol
out
sbb
fsubl
repz
aaa
adc
call
mov
icebp
sbb
addr16
loope
data16
cmpsb
enter
xchg
xchg
mov
pop
sahf
enter
pop
fimull
mov
xchg
mov
je
outsl
push
bound
mov
or
dec
add
push
adc
stc
bound
sbb
or
jae
sahf
dec
dec
push
pop
or
or
mov
movsl
lret
sbb
icebp
push
jle
lahf
add
lret
rcl
pop
outsb
inc
imul
lret
or
sarl
rol
mov
imulb
push
sbb
adcl
fcoms
mov
sbb
push
loop
scas
movsw
jmp
rcll
jle
jnp
mov
xchg
loopne
pop
add
daa
jnp
aas
arpl
jb
xor
xorl
out
mov
add
in
pop
mov
test
jne
fcompl
cmp
outsl
xchg
sub
and
sbb
xchg
cmpsb
dec
cld
push
push
fadd
xchg
insl
out
xchg
sbb
lret
add
fstpl
jo
adc
outsl
nop
push
ss
lret
mov
aad
cwtl
insl
push
movsl
pop
movsl
and
xor
push
ja
pop
aam
les
out
jp
lea
call
aad
pop
push
adc
jp
push
mov
cld
addr16
xchg
lret
je
dec
and
push
adcb
test
jbe
addr16
jmp
push
jg
push
sbb
add
fsubrp
outsb
mulb
pop
ret
out
or
icebp
add
add
adc
and
sti
cli
inc
jge
lock
jecxz
shrl
cmp
or
dec
xor
push
add
je
push
les
loop
scas
push
movsl
xlat
mov
imul
pop
int3
in
push
mov
adc
dec
icebp
stc
test
or
push
mov
adc
adc
pop
pop
add
addl
out
scas
pop
add
adc
xor
cmpsb
popl
jp
adc
push
adc
push
xor
sbb
cs
sub
and
push
aas
enter
es
adc
and
mov
sub
xor
xor
adc
xor
xchg
fmuls
jecxz
out
repnz
mov
pop
sbb
cld
fwait
xor
popa
cld
jbe
add
aaa
cmp
lods
inc
out
outsb
sub
js
sub
ficomps
inc
cmp
pop
dec
fldl
test
lret
sahf
mov
out
jno
add
or
dec
pop
push
das
lahf
xchg
jb
cltd
nop
arpl
imul
or
js
xchg
mov
aaa
sahf
or
cmp
xchg
mov
xor
ret
sub
mov
mov
mov
out
inc
loop
mov
rcr
cmp
imul
push
or
dec
jns
lods
jno
dec
xchg
ja
stc
or
in
fcompl
jb
dec
imul
sbbb
aas
loopne
jge
addl
mov
mov
pushf
dec
jns
es
outsl
rorl
out
dec
scas
insb
cwtl
sub
mov
fidivrs
mov
test
xchg
in
leave
mov
mov
std
xchg
push
lea
mov
popf
mov
mov
fidivrs
insl
cmc
jg
int3
sub
sbbb
insb
jp
xchg
mov
aam
mov
int3
fs
sbb
fistpll
addr16
outsb
ret
mov
movsl
mov
push
mov
lods
sub
push
xadd
sub
aam
mov
mov
mov
jno,pn
xchg
fdivrl
xor
push
lret
xor
jae
in
fcompl
add
sti
into
sbb
ret
jecxz
xchg
aaa
and
inc
mov
jl
add
xlat
jg
mov
sti
dec
scas
xchg
dec
xchg
jecxz
pop
xchg
aad
dec
fisubl
ret
int3
pop
mov
lock
cwtl
fsub
pop
fadd
pop
out
popa
gs
pop
dec
mov
int
pop
adc
and
sbb
stos
movsl
mov
aaa
or
out
xlat
jnp
mov
jmp
mov
adc
nop
pop
repnz
sbb
mov
lock
push
jnp
push
fmul
dec
popa
dec
mov
out
xchg
gs
filds
insl
sti
sbb
or
and
stc
pop
dec
out
and
mov
mov
cmp
je
cmp
sbb
mov
mov
fcom
cmp
sub
or
xor
add
pop
sbb
int3
jg
lods
add
fiaddl
lret
and
and
mov
cmp
jp,pt
shl
cmpsb
test
mov
ss
aad
jno
xchg
jl
punpckhbw
icebp
sbb
cld
inc
pop
xor
in
jp
pop
push
loopne
pop
and
mov
xchg
xchg
loopne
adcl
pop
fisttps
adc
cld
mov
nop
sub
jmp
cs
ficomps
and
test
and
pop
xor
jns
pop
adc
sub
jle
es
flds
aad
stos
stos
loop
push
cs
xor
adc
xchg
gs
xorl
fbstp
cltd
fidivl
jle
les
push
idivl
xlat
dec
repnz
xor
pushf
mov
xlat
jmp
mov
sbb
repz
inc
shrl
push
push
cmpsl
mov
daa
ret
movsb
sbb
adc
add
xchg
fisttpl
add
rorb
jp
lahf
adc
mov
test
pop
out
xorb
int3
fs
jg
enter
xchg
stc
iret
les
jne
test
push
pop
and
hlt
dec
and
pop
push
mov
int
mov
subl
jb
ds
cmp
cmc
in
pop
das
jb
fisttpll
adc
dec
xchg
push
sub
xchg
adc
push
dec
pop
mov
push
add
mov
mov
mov
push
movsb
in
push
sub
mov
mov
inc
inc
ffree
or
sub
and
dec
mov
sbb
je
xlat
add
mov
es
ret
sub
and
sbb
data16
fildll
mov
into
and
add
push
cmp
daa
mov
fnstenv
xchg
in
fcoms
or
add
jo
out
cmp
dec
mov
add
arpl
mov
sub
fsubl
into
enter
sbb
mov
fsubl
mov
icebp
xchg
fldenv
sbb
ds
ret
or
dec
andl
mov
pop
pop
jge
mov
mov
push
fwait
cmp
push
mov
rcll
inc
das
lahf
cltd
jp
leave
push
dec
pop
pushf
es
push
fwait
mov
pushf
sbbl
or
ret
fstpt
aaa
mov
lds
std
stos
stos
ja
jnp
cltd
mov
insb
pop
loop
jbe
mov
mov
cmp
fs
addr16
test
sub
gs
jecxz
out
cmpsl
push
aaa
jo
lret
out
push
outsb
das
roll
cmp
xchg
mov
xor
inc
mov
push
test
std
xchg
sbb
mov
int
hlt
inc
shrl
or
xlat
jge
add
and
fnstcw
pop
std
cltd
fnstenv
jl
test
and
xchg
decb
adcl
bound
js
cs
shlb
and
outsl
pop
out
mov
or
push
adc
bound
pop
rorb
rcrl
lock
mov
inc
push
xchg
call
mov
xchg
pusha
jbe
scas
mov
or
cwtl
fcomi
lock
adc
mov
sub
lods
push
xchg
xchg
mov
jle
inc
pop
add
fisttpll
aam
or
cmpsb
stc
test
xor
xchg
or
mov
push
fidivrl
daa
clc
add
mov
xor
and
jb
jno
movsl
push
cltd
adc
cmpsb
push
mov
adc
lcall
fwait
hlt
push
push
enter
in
ljmp
jp
cmp
rcl
mov
loop
lret
xlat
adc
xlat
sbb
xor
cmpsl
mov
outsl
cmp
adc
repz
ja
ss
add
mov
pushf
shl
filds
dec
jno
jp
inc
ljmp
pop
sti
adc
lock
adc
dec
cwtl
and
sub
adc
dec
pop
pop
pop
lods
mov
daa
or
dec
push
pop
repz
jne
popf
cwtl
jecxz
stc
ja
cmp
outsl
xorl
mov
imul
mov
mov
push
mov
adc
sbb
loop
mov
and
sub
hlt
jns
popl
sbbl
bound
dec
in
outsb
sbb
mov
cli
sbb
das
xchg
cmp
fimuls
adc
stos
add
add
inc
xchg
aaa
fdivs
stos
sub
data16
pop
mov
or
sbb
pop
jmp
push
imul
sub
push
jecxz
adc
jns
xchg
sub
setae
stos
stos
xchg
mov
out
jo
sbb
popa
adc
insb
lods
mov
das
or
sti
cmp
mov
sub
fwait
mov
pushf
into
in
push
inc
sbbb
push
mov
sbb
lahf
out
dec
inc
xchg
cmp
jmp
cmp
push
xchg
addr16
icebp
push
insl
mov
lea
sbb
and
sbb
mov
pop
insb
mov
aam
sub
mov
popf
push
enter
cmp
fimuls
cmp
or
jno
push
or
daa
das
mov
stos
and
test
insl
or
sbb
test
or
stc
jmp
sbb
dec
cmp
lock
leave
lret
mov
adc
data16
mov
mov
xchg
or
cmp
jns
outsl
xchg
sub
xchg
test
cli
outsl
sub
or
mov
push
je
adc
shll
jnp
add
xchg
movsb
push
mov
leave
imul
repnz
mov
and
jnp
or
xlat
jl
adc
push
les
and
dec
cmpsl
push
in
or
jmp
in
cmp
ror
push
rcrb
cli
int3
xor
popf
push
movb
fwait
inc
lds
vunpckhpd
movsl
call
popf
push
je
sub
aas
je
cmp
clc
icebp
or
pop
loopne
icebp
js
and
ret
add
xchg
daa
sbb
pop
xchg
ljmp
pop
arpl
adc
pop
xor
xchg
rcl
outsb
xchg
movsl
cmp
fdivp
imul
adc
mov
push
mov
add
ret
test
mov
sti
xor
inc
int3
fdivrs
xor
loopne
mov
cld
adc
mov
and
add
sbb
jmp
outsb
or
add
ret
sbb
pushl
push
push
int
je
orb
dec
cmc
sub
and
jmp
or
xchg
fdiv
jmp
add
in
rcll
add
inc
pusha
hlt
dec
lahf
in
inc
add
and
add
iret
stos
nop
push
xor
mov
fisubrs
gs
scas
xor
dec
adc
cld
jmp
xchg
jge
in
mov
sti
gs
out
lar
in
push
addr16
into
mov
and
push
mov
xchg
test
jp
inc
push
adc
mov
mov
jo
inc
addl
int3
rcll
add
cmp
jns
and
pop
in
push
inc
push
test
mov
jae
std
add
mulb
jne
gs
andb
movsl
fwait
hlt
push
mov
xor
sbb
pop
mov
sti
and
out
push
and
jp
push
push
sbb
andl
mov
cmc
out
iret
or
push
add
sbb
xchg
in
dec
insl
fcomps
fcmovb
push
out
les
sbb
je
out
dec
daa
mov
add
flds
jle
pop
dec
into
and
aaa
add
dec
add
pop
je
ret
js
in
repnz
je
leave
mov
xor
sahf
push
push
inc
je
mov
inc
xor
sbb
push
cmp
cli
mov
sahf
stos
shrl
pusha
mov
testl
sbb
ret
fbld
das
faddl
nop
je
push
add
in
shl
sarb
pop
addr16
aaa
sub
mov
rcrl
aas
bound
xchg
lret
sbb
pushf
push
test
es
inc
jle
lods
mov
inc
mov
in
fmul
aaa
mov
dec
inc
jno
sub
jecxz
push
adc
popf
pop
push
cld
stc
sbb
fistpl
mov
int3
iret
add
cltd
decb
imul
outsl
lods
xor
scas
and
fidivrs
lahf
sub
pushf
jne
add
xor
pushl
or
imul
xchg
xor
inc
test
in
cmp
adc
add
lcall
pop
subb
push
test
inc
fwait
pop
in
xorb
sbb
ja
lods
ret
add
ds
stos
and
pop
or
adc
aam
add
call
cmp
sbb
mov
xchg
inc
lret
mov
mov
mov
dec
mov
gs
mov
lods
or
gs
jne
clc
mov
loop
sub
sahf
dec
push
lret
add
cmp
out
mov
and
pusha
xchg
pusha
rolb
adc
repnz
jecxz
js
or
sub
sti
mull
cli
mull
or
adc
stos
ja
fiaddl
fnstcw
ret
pop
or
adc
pusha
jp
ret
shll
scas
out
push
mov
call
mov
mov
sbb
adc
or
push
out
xlat
fidivl
sar
gs
or
sbb
push
sahf
xor
or
xchg
mov
add
popf
pop
and
fisubs
sub
xchg
and
popf
inc
xchg
xchg
data16
loopne
iret
dec
mov
cmc
dec
dec
xchg
out
mov
stos
adc
cmpsb
cmp
pop
xlat
cs
test
lcall
orl
dec
adc
or
push
rcll
dec
add
add
out
cmp
das
dec
lods
pop
fildl
dec
jl
in
loopne
sub
xchg
cwtl
xchg
movsb
mov
xor
mov
jne
sub
add
lret
push
outsb
ret
call
adc
push
mov
in
dec
adc
cmp
cld
push
das
outsb
subl
pop
cmpsb
pop
jecxz
inc
ret
xor
gs
xor
leave
push
mov
jo
lret
or
arpl
dec
or
mov
daa
inc
sub
int
push
icebp
test
cmp
int
jne
shr
inc
mov
add
dec
xor
pop
lahf
cwtl
push
into
mov
int3
jb
lret
adcl
insb
adc
lock
in
mov
mov
ficoms
in
cmp
fcoml
dec
out
popa
or
loopne
push
and
mov
cmp
cmpsl
push
cmp
clc
cmp
mov
mov
lds
pusha
cmp
cmp
in
push
push
sbb
in
daa
jno
mov
xchg
aad
nop
shl
aad
jge
popf
push
fldcw
push
dec
stos
add
aaa
adc
mov
jl
je
pop
xchg
stos
mov
mov
cwtl
popa
xlat
or
adc
cmp
push
idivl
or
xchg
inc
aaa
push
xlat
dec
mov
test
jg,pt
dec
cwtl
add
or
fidivs
push
in
cmp
sahf
ljmp
rorl
test
xchg
sub
test
jbe
test
and
sub
xchg
outsl
pop
mov
stos
adc
jmp
rcrb
outsl
test
fldt
and
mov
stos
jno
ljmp
mov
cmc
jl
test
jle
imul
xchg
fcomp
aam
mov
xchg
sbb
mov
and
adc
push
mov
xchg
js
fiadds
mov
pop
scas
cmpsl
subb
cs
sbb
adc
inc
sub
push
push
mov
inc
enter
clc
ret
test
xor
or
leave
mov
dec
cs
sbb
mov
mov
adc
xor
clc
add
call
out
mov
orb
mulb
mov
ja
xor
scas
sub
mov
test
add
ds
sub
fstpt
xor
jno
stos
push
repz
sbb
sahf
fidivs
movsl
xor
in
sub
jl
paddq
adc
mov
push
fwait
push
pop
out
mov
push
enter
push
sbb
xor
rorl
call
and
lcall
cli
bound
cmp
jo
mov
xor
add
cmp
push
ds
movsb
pushf
cmp
clc
fwait
inc
push
shrb
mov
mov
xchg
scas
ret
vcvtdq2pd
adc
inc
clc
test
add
mov
lods
mov
push
inc
pop
push
xchg
insb
icebp
push
xchg
clc
sbb
mov
add
sub
push
inc
and
or
in
mov
jno
dec
xor
xor
jns
aaa
insl
adc
scas
cmp
pop
cltd
adc
push
push
adc
xchg
dec
and
pop
ljmp
jno
or
mov
xchg
pop
out
pop
jg
ror
mov
rcr
ret
or
or
bound
inc
jmp
jp
jno
out
push
push
dec
dec
mov
popf
mov
std
and
into
mov
xchg
lock
sbb
popa
test
rcl
ret
roll
mov
xchg
imul
or
pop
xchg
xchg
jmp
jne
int3
aam
cmp
movsl
lock
add
mov
out
and
addr16
cmp
out
jne
adc
pop
jae
mov
push
hlt
ret
out
outsb
inc
dec
jge
jae
popa
pop
mov
xchg
out
sub
push
push
jmp
xchg
pop
shll
push
xchg
jmp
pop
aad
pop
push
cmp
lock
cltd
imul
mov
pop
call
mov
outsb
imulb
mov
int3
int
jge
mov
inc
out
sbb
lret
xlat
add
mov
dec
insb
testl
jne
adc
addl
pop
js
sbb
fldl
and
nop
push
xchg
leave
hlt
mov
gs
push
cmp
pop
ljmp
or
ret
arpl
xor
test
mov
pusha
adc
in
popl
daa
lea
out
add
lahf
xchg
out
xlat
aas
mov
mov
sahf
mov
adc
cld
sbb
insb
dec
outsl
xchg
mov
mov
sbbl
das
push
push
dec
in
dec
orb
gs
sbb
popf
mov
fbstp
or
add
mov
nop
adc
bound
pusha
pop
xor
dec
pop
xchg
loop
or
inc
movsb
sbb
lds
pop
xchg
and
lock
xchg
movsb
sbb
pop
lret
push
adc
or
jo
jnp
sbb
inc
mov
cmp
insl
stc
cld
shl
mov
sbbl
mov
inc
mov
pop
in
cmc
lds
adc
out
adc
enter
cltd
test
pop
and
std
loop
add
jo
out
sbb
out
mov
xchg
fsubrp
std
nop
das
int
call
jmp
lea
dec
repz
sti
add
movsl
or
add
stos
adc
dec
xchg
push
xchg
mov
sub
jnp
clc
xchg
lahf
andb
movsl
mov
or
sub
aad
and
sbb
pop
mov
add
or
add
and
loope
in
lret
mov
mov
or
inc
inc
mov
je
xchg
jl
add
dec
dec
sbb
xchg
cmpsl
fsts
loope
xor
pop
lods
loopne
repz
dec
dec
arpl
and
lods
aas
pop
xor
pop
pop
mov
gs
popf
xchg
call
or
pop
and
pop
je
jmp
sub
fwait
mov
outsl
pop
xor
push
mov
bound
loopne
sbb
es
andb
movsl
inc
dec
and
adc
sarb
xor
or
mov
mov
xor
xchg
test
jno
sub
mov
sbb
bound
sarl
lret
call
mov
test
push
scas
es
fnstcw
popa
sbb
cs
jbe
jl
aaa
ds
xorb
sti
shll
xor
xchg
adc
jbe
lret
sbb
les
lea
shlb
inc
in
dec
es
outsb
jnp
mov
mov
testb
out
ljmp
mov
push
scas
repz
test
icebp
jbe
mov
push
fmull
sbb
push
popf
pop
in
mov
adc
or
std
cmp
and
aas
sbb
jl
inc
in
jnp
repnz
adc
cmp
gs
lret
pop
add
add
push
sahf
lahf
add
arpl
jae
adc
fdivs
in
push
pop
pop
out
jno
mov
add
jl
loop
pop
mov
add
cmp
int
dec
add
cmp
aaa
xchg
lcall
mov
int
inc
shrl
imul
cmp
cwtl
mov
std
mov
test
inc
iret
aaa
xor
add
aad
sbb
sbb
inc
adc
shl
movsl
ret
arpl
jno
daa
mov
test
dec
add
shlb
std
loop
ljmp
call
xchg
jp
xor
hlt
sbb
adc
jmp
cltd
mov
cmp
jnp
enter
add
fbstp
bound
stos
bound
test
in
rcr
mov
mov
shl
cmc
and
jl
cmp
nop
call
stos
or
fisubl
out
push
ja
xchg
or
and
adc
dec
test
leave
inc
inc
repnz
mov
cmpl
fisubl
cmp
jnp
adc
int
lret
jnp
push
xlat
mov
in
and
insb
pop
adc
inc
xchg
mov
call
jne
gs
xor
push
cli
mov
sahf
or
jno
push
jmp
sahf
aad
in
sub
push
pop
jnp
push
mov
data16
sbb
out
rorl
adc
pop
popf
xchg
pusha
and
push
sarl
call
repnz
cmp
push
mov
xor
mov
int
sbb
out
mov
inc
push
sbb
inc
js
cmp
arpl
insl
xchg
adc
mov
jbe
call
push
aaa
les
inc
fcmovne
fs
stos
enter
stos
cltd
fs
aas
mov
mov
mov
sbb
clc
insb
aad
cmp
out
pop
and
or
int3
xchg
clc
dec
test
repz
call
pop
sahf
out
or
xchg
fistl
mov
stc
pop
mov
or
sbb
out
int
mov
negb
divb
xchg
nop
sub
scas
mov
in
mov
push
sbb
xlat
iret
mull
hlt
cmp
out
adc
jg
aad
sub
aad
dec
add
adc
push
adc
repnz
pop
cld
fs
inc
ret
loope
ror
jge
fwait
iret
xorb
pusha
pop
xchg
fisubs
mov
and
sub
roll
or
aas
shrl
ja
mov
scas
sbb
icebp
jge
pop
inc
andl
add
fsubrs
sbb
clc
sbbl
dec
clc
shll
cld
and
jp
jge
or
adcl
in
fmull
sti
outsb
cmp
xchg
xchg
dec
dec
xor
mov
sub
rclb
sub
aam
sbb
jo,pn
test
cmpsb
es
sahf
lds
mov
xor
pop
jb
dec
scas
inc
push
dec
cli
mov
insb
test
inc
jo
gs
sub
loope
or
mov
sbb
xor
mov
inc
xor
sbbb
lods
dec
xor
movsb
sub
push
jne
add
xchg
inc
mov
mov
lods
sub
out
mov
xor
mov
rcr
call
xor
xchg
xchg
adc
testb
mov
andl
or
addb
lods
jbe
dec
jbe
orl
inc
in
adc
push
inc
js
or
arpl
inc
fucom
cmc
lret
lea
arpl
insb
das
mov
pop
mov
loop
loope
cmpsb
es
lcall
in
xchg
leave
mov
gs
jno
push
adc
imul
fildll
popa
xchg
addb
jae
cltd
mov
dec
loop
in
lea
in
cli
fnstenv
mov
ss
cmc
push
pop
jmp
les
hlt
inc
inc
fcompl
sub
or
add
and
fwait
push
mov
or
jp
mov
cmp
rcll
imul
frstor
addr16
loop
imul
jae
dec
cmp
dec
or
push
inc
int
aam
daa
push
andl
dec
mov
adc
fsubl
jbe
cmp
lret
xchg
andl
push
jg
test
fiaddl
pop
push
pop
sbb
into
je
lds
or
mov
mov
das
dec
lock
or
leave
and
movl
sbb
cmc
or
jmp
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
shrl
adc
addl
push
adc
hlt
mov
or
sti
sbb
jmp
cmp
mov
pop
rcl
mov
xchg
out
mov
pusha
sub
dec
pop
pop
and
scas
cs
and
stos
dec
pop
mov
inc
pop
sbb
mov
dec
mov
push
mov
dec
push
mov
mov
lea
inc
addr16
mov
inc
les
push
out
stc
test
mov
jae
out
sub
add
popf
test
add
fwait
out
sbb
dec
dec
add
push
int3
xchg
shrb
cmp
xor
ljmp
push
adc
mov
lret
out
xchg
ljmp
xchg
sub
adcb
loope
and
rorl
mov
cs
jnp
mov
into
outsl
data16
fwait
xchg
mov
test
and
pop
fcoml
cmp
or
test
inc
xchg
call
lods
or
mov
jbe
sub
arpl
push
leave
inc
inc
dec
addr16
mov
jo
out
in
push
jp
lods
cmp
or
sahf
mov
xchg
pushf
jns
test
cwtl
out
fwait
outsb
cmp
bound
pop
dec
enter
pusha
xchg
aas
imul
insb
bound
shlb
mov
sahf
mov
decl
inc
jecxz
lahf
xor
sbb
cmpsb
lds
jno
repz
gs
push
fisttpl
sbb
adc
mov
jns
js
jg
jne
inc
mov
std
cmpsb
sub
mov
dec
mov
notl
stos
jmp
push
mov
pusha
jne
rorb
bound
out
sbb
and
aam
xlat
dec
xlat
clc
movsl
divb
scas
out
fwait
addl
dec
roll
jmp
xor
lock
inc
in
jg
mov
enter
pop
aad
cmc
cmp
flds
xlat
das
mov
out
and
add
mov
or
push
test
jb
in
faddl
inc
and
inc
pop
jno
push
lret
rclb
or
sub
lods
subb
and
lret
rolb
jecxz
xchg
pop
lret
xor
les
popf
leave
fdivrs
sbb
lcall
mov
cmc
push
push
stos
add
pcmpeqb
xor
mov
test
mov
and
adcb
jecxz
mov
bound
ja
repz
ficoml
iret
jp
gs
mov
pop
dec
or
fwait
andl
xor
jne,pn
testl
xchg
push
cli
cmp
dec
xchg
mov
jo
xchg
icebp
adc
int
cs
push
rolb
jl
jns
adc
sub
dec
mov
repz
inc
push
inc
xor
nop
dec
sbb
test
out
fwait
in
mov
xchg
jecxz
mov
or
outsb
jmp
loop
sbb
push
iret
ss
jnp
es
aad
jge
ret
movsl
sbb
cli
mov
iret
pusha
adc
iret
mov
ficoml
and
xlat
in
imulb
push
xchg
cmp
scas
and
sbb
add
mov
mov
inc
pop
adc
popf
mov
sub
pop
mov
inc
nop
pop
mov
sbb
repnz
jnp
mov
jbe
pop
cltd
enter
aaa
sbb
ret
xor
xchg
jp
arpl
out
xchg
int
stos
push
xchg
repz
in
adc
add
jmp
mov
xchg
test
cmp
imul
movsb
or
aad
xchg
cmpl
insl
repnz
xlat
shl
dec
ljmp
sub
movsl
sub
xchg
icebp
sahf
pop
insb
inc
mov
mov
lods
fwait
pop
push
inc
push
pop
fists
lahf
adc
xchg
xlat
xchg
jle
cwtl
popa
push
test
xchg
fdivrp
fildll
sbbl
xchg
push
xchg
mov
aad
test
cli
cmp
and
imul
push
push
mov
fwait
push
loopne
stos
inc
adc
mov
sub
cmp
loopne
xlat
xor
pushf
xchg
orl
aaa
push
or
pusha
test
xor
jo
inc
mov
push
pop
dec
xor
daa
and
sbb
mov
in
cwtl
test
xchg
in
outsb
jnp
fsub
shrb
sub
push
ret
sti
sub
fbstp
xchg
dec
xor
pop
push
and
out
add
pop
and
sub
dec
ret
jb
jmp
push
in
jl
imul
outsb
push
aaa
push
ja
sub
add
test
xor
cmp
xor
fdivs
je
iret
adc
jmp
and
clc
lcall
lret
pop
inc
lret
test
lret
sahf
inc
push
add
mov
pop
ja
pop
add
mov
int3
jecxz
sub
aad
fidivrs
sub
int
movsb
add
jle
out
push
push
loope
jns
jecxz
add
dec
xor
fsubl
scas
sbbl
and
xor
fildll
pop
adc
into
out
xor
or
jmp
pop
pop
mov
jo
andl
inc
roll
mov
cmp
xchg
jcxz
push
es
jmp
pop
inc
int
pop
add
xor
xchg
sub
sbb
lcall
cs
and
les
jmp
sub
mov
cmc
movsl
pop
mov
xor
mov
sub
jmp
mov
sbb
into
cwtl
insb
insl
sub
and
sahf
add
xchg
jo
sbb
aad
jmp
fildll
push
lret
xor
jns
in
orb
roll
mov
rol
cmp
push
or
sbb
sbb
and
in
sbb
test
mov
aad
jnp
mov
js,pn
jg
pop
xchg
mov
cmp
int
add
popa
dec
aaa
add
jae
ss
fld
push
mov
and
inc
jl
or
push
push
sahf
test
dec
pop
adc
dec
push
ja
in
sbb
cld
dec
adc
int
and
mov
cmp
add
shll
loopne
pop
test
push
or
stos
scas
fnsave
pop
cmp
jo
ljmp
xchg
leave
dec
shrl
mov
mov
push
test
sti
mov
cwtl
loop
xor
or
push
or
bound
push
movsw
fidivrl
lock
xchg
bound
stos
push
push
push
in
jmp
es
imul
bound
xchg
sarl
mov
ffreep
fsubl
in
cltd
mov
jmp
xchg
dec
sbb
mov
icebp
cmpsb
push
test
cmp
movsb
out
rcrb
mov
inc
cmp
xchg
in
mov
jbe
mov
repnz
outsb
repz
ja
gs
shlb
inc
mov
xor
in
movsb
insl
ret
pop
aam
fcmove
pop
sti
pop
dec
sahf
fstpt
mov
pop
or
fwait
inc
out
sbb
sbb
cmp
dec
pop
push
pop
leave
cmp
mov
inc
mov
push
pop
add
adc
sbb
lds
in
js
outsl
loop
js
dec
shr
out
out
dec
ret
fstp
inc
stc
int
jl
jg
imul
popf
sarb
push
lods
xor
aas
lea
sbb
fnstcw
mov
mov
mov
subl
divb
clc
sbb
lret
jae
test
loop
imul
stos
cmpsb
mov
int3
xor
cmp
xlat
fistps
jae
push
jbe
jl
sub
inc
loop
dec
push
pop
loopne
cmp
pushf
add
test
es
clc
call
das
or
inc
dec
push
andb
mov
cmp
dec
adc
push
jge
dec
stc
inc
pop
dec
mov
sbb
imull
inc
sar
cmp
out
out
cmp
div
adc
popa
xor
sar
cmp
gs
cmp
sbb
icebp
aaa
ret
ret
mov
mov
pop
fstl
sub
rcrb
adc
shlb
mov
adc
call
cmp
lcall
jg
pop
ficoms
xchg
pushw
dec
ficompl
mov
adc
rclb
addr16
add
jne
jb
fs
scas
mov
mov
inc
and
cld
push
int3
fcoml
out
xchg
mov
cmpsb
jp
dec
mov
popa
insb
es
xchg
int
jmp
lods
dec
jbe
ja
push
mov
sub
push
shrl
cmp
push
add
mov
lods
inc
insb
loope
jne
lcall
loopne
xor
sub
adc
rorl
das
or
pop
imul
hlt
mov
or
cmova
aas
sbb
adc
xchg
push
push
int
mov
out
mov
and
jno
sahf
push
push
or
dec
iret
push
sub
movsb
add
imul
aam
push
and
jne
push
mov
xor
pop
cwtl
jmp
xor
inc
add
adc
mov
mov
adc
fisubrl
loop
into
cs
mov
insl
popa
pop
jne
inc
inc
aaa
aad
cmpsb
adcl
into
adc
dec
sbb
fsubl
add
mov
and
push
pop
dec
fimuls
lcall
negb
in
dec
arpl
mov
ja
sub
inc
push
pop
mov
xchg
mov
and
daa
fcoms
and
mov
pop
jbe
lods
out
in
imul
in
mov
lret
xor
pop
xlat
sub
inc
bswap
xchg
adc
xchg
idivb
xchg
cmpsb
out
test
popf
popf
sbb
add
stos
or
sbb
mov
xor
scas
mov
and
add
mov
jbe
popf
aam
push
mov
mov
mov
aad
adc
dec
out
xchg
adc
stos
pop
add
or
stos
adc
inc
sarl
xor
addr16
adcb
and
cmp
lock
and
lea
loope
dec
pop
mov
cmp
pop
sub
int
and
xchg
or
loope
or
or
jo
sarb
test
fidivs
xor
inc
mov
cld
pop
ljmp
sbb
andl
push
xor
xchg
pop
je
fadd
add
mov
jbe
mov
mov
lock
xlat
pop
sbb
das
hlt
mov
test
xchg
in
adc
push
dec
scas
fsubs
sub
mov
loop
mov
shrl
je
push
and
xor
dec
ljmp
aas
dec
ja
ret
mov
notb
cld
sahf
mov
inc
rolb
aad
sub
clc
aam
scas
dec
das
mov
mov
clc
or
mov
out
out
fbstp
pushf
pushw
divl
mov
pushf
sub
push
lcall
add
loope
imul
clc
sbb
jns
ds
adc
shll
mov
xor
aam
enter
push
sarl
mov
mov
cmpsl
or
dec
ja
pushf
repnz
dec
mov
mov
bound
loope
xor
xchg
sti
movl
out
fstpl
push
cli
pop
and
insl
test
inc
ljmp
mov
mov
push
test
jp
xchg
aam
stos
ds
and
cld
bound
call
clc
cmpsl
xchg
sub
pop
mov
js
fucomi
inc
xlat
rclb
popf
cmpsb
jnp
cwtl
insb
xchg
inc
in
bound
inc
add
push
stc
jge
jmp
sub
and
movl
cmp
lock
js
or
dec
jae
ftst
test
mov
cmp
sahf
xorl
or
push
icebp
mov
aas
jmp
in
pop
rcr
fidivrs
ljmp
add
sbb
mov
add
iret
cmpsl
xchg
mov
xchg
test
rorb
cmc
lods
test
popa
pop
fbld
clc
lock
enter
mov
in
movb
mov
xor
icebp
jb
and
fisubrl
stc
lock
jg
sbb
sub
sbb
xchg
add
sub
mov
iret
gs
inc
fstpl
shll
mov
out
push
stc
cwtl
jg
mov
scas
add
shll
or
or
cltd
sub
into
out
fisubrs
negb
pop
or
cvtpi2ps
xor
push
xchg
inc
jmp
test
jmp
or
js
popf
push
sub
lea
inc
fwait
mov
add
sti
mov
movb
xor
ficoml
lock
testb
inc
add
ds
sarl
ja
adc
dec
dec
or
dec
outsl
jo
xor
int3
jo
cmp
jmp
enter
adc
out
sti
cmc
xchg
sbb
mov
gs
inc
mov
push
jge
jne
lea
jo
adc
sbb
push
cmp
in
ficomps
sbb
mov
add
sub
push
lret
xchg
jp
jb
push
pop
push
cmp
ljmp
jl
pop
es
push
ja
adc
out
stos
add
mov
sbb
cltd
mov
sbb
push
jno
inc
cmp
xor
imul
inc
jmp
xor
xchg
cmpsl
fs
scas
mov
in
push
jmp
mov
jne
iret
sub
inc
mov
pop
fnstenv
xchg
pop
jbe
test
jno
mov
add
repnz
sub
sub
cmp
and
cmp
jae
ljmp
dec
stos
mov
pop
inc
xchg
mov
negb
xor
mov
jbe
or
outsb
gs
in
das
inc
test
xor
jmp
mov
lock
jle
fwait
popf
pop
call
mov
ljmp
pop
mov
push
insb
or
mov
daa
nop
xchg
xor
and
pop
out
xor
mov
fmull
popl
jecxz
push
push
addl
mov
mov
xchg
mov
jl
lea
adc
loop
ja
jbe,pn
stos
rolb
lahf
mov
lahf
lret
xlat
fmuls
dec
lods
push
or
xor
imul
push
imul
inc
pop
and
testb
fdivl
pushf
data16
js
es
and
jae
insb
dec
sub
jns
out
pop
push
sub
out
push
js
in
mov
xchg
daa
push
xorb
mov
ret
mov
xchg
push
add
jle
sub
or
mov
jmp
xchg
sub
hlt
mov
cmp
jp
add
lods
add
cmp
lock
mov
pushf
xlat
xor
adc
call
dec
cmpsb
addl
loopne
mov
mov
pop
je
push
mov
addr16
daa
mov
sub
pop
imul
mov
stos
fsub
dec
cwtl
js
jns
and
xchg
inc
jmp
gs
nop
cwtl
lahf
and
ret
add
cmp
mov
inc
dec
arpl
push
jecxz
and
test
les
mov
nop
aad
cmc
fcomps
add
movsl
aas
xchg
cmp
outsl
mov
nop
fdiv
je
daa
jecxz
lods
leave
enter
add
pop
arpl
jns
imul
lcall
cmp
aaa
rclb
or
in
cmp
pop
shll
cmp
test
dec
cmp
push
mov
popf
dec
push
outsb
pop
mov
sbb
sub
mov
mov
jnp
inc
subl
mov
push
xor
lock
mov
popa
jno
jns
je
jnp
ja
jo
aad
inc
scas
mov
sub
nop
rol
adc
xchg
arpl
fxtract
mov
fs
fsubrl
aad
out
and
cmpb
or
push
xchg
shl
fwait
mov
gs
repnz
popa
test
sub
xchg
mov
js
out
sti
fwait
mov
popf
mov
mov
rcr
sub
add
cmp
fisubl
add
fsubs
testl
pushf
enter
dec
xchg
mov
test
dec
cmp
pop
cmpsb
scas
inc
decb
xlat
dec
add
out
and
mull
jp
and
pusha
pop
and
sub
pop
sub
mov
call
sub
das
lcall
push
dec
push
or
sub
ret
adc
add
shrl
shrb
jns
and
jns
pop
mov
pop
flds
imul
mov
mov
cmp
fdivl
loope
fwait
cld
in
std
test
add
test
add
insl
jnp,pn
inc
xor
push
jecxz
fwait
add
jo
dec
jae
imul
cmpsl
rorl
nop
mov
aaa
addr16
mov
xor
shll
fs
ljmp
loopne
push
push
lods
ds
adc
cs
cmc
xchg
mov
push
out
call
fs
bound
repnz
div
dec
adc
fistps
int
cmpsl
xlat
sarb
roll
stos
bound
fistpl
pop
cld
adc
mov
jge
div
lods
pop
sub
scas
ljmp
add
andl
push
mov
fwait
shr
outsb
test
stos
xchg
out
rorl
mull
adc
inc
pop
xchg
cmpsl
xor
mov
mov
repz
nop
fstl
cld
rorb
outsb
mov
leave
fs
outsl
fisubrl
adcl
and
jae
sti
adc
inc
mov
cwtl
mov
push
mov
xchg
cmpsl
ret
hlt
scas
bound
lahf
sbbl
jmp
repz
in
hlt
push
mov
fdivrl
int
pop
cmp
pushf
adc
push
xchg
insl
jne
pop
xchg
sbb
mov
mov
lods
mov
inc
sbbb
dec
or
sbb
notl
dec
inc
mov
mov
insb
imulb
ds
push
out
inc
aam
daa
jns
test
xchg
leave
int
fcoms
movsb
jne
mov
jle
loopne
xchg
pop
imul
jb
inc
xchg
outsl
test
pop
push
mov
and
aaa
xor
and
ljmp
or
jnp
jge
xor
sbb
xchg
dec
out
cmp
aaa
movsb
cmp
movsl
jns
jbe
push
sti
add
xchg
or
mov
sbb
fwait
insb
jbe
xchg
lods
fsubrp
movsb
adc
fisttpl
lods
aam
call
repz
adcb
inc
iret
fstpl
xor
out
subl
jmp
fsts
loopne
hlt
cmp
sub
mov
loopne
and
or
sbb
pusha
ljmp
mov
mov
xorl
movsb
repz
sbb
push
pop
movsl
mov
and
fisubrs
dec
dec
frstpm(287
int
lahf
pop
js
or
in
cli
sbb
notl
sub
fidivl
xchg
dec
lods
mov
sub
loopne
mov
pop
mov
lcall
popf
push
popa
in
jno
push
popa
std
push
mov
lret
insl
in
out
pop
or
mov
and
sbb
cs
push
movsb
repz
mov
or
xor
push
sub
mov
ds
out
scas
outsl
out
add
repnz
frstor
pushf
xor
in
mov
enter
mov
or
sub
dec
push
add
add
test
push
xor
add
fs
lock
push
lcall
pop
dec
es
cmp
outsl
sub
mov
jnp
lret
sbb
and
xor
arpl
les
dec
sbb
stc
nop
stos
pop
leave
pop
mov
sub
sub
stc
cltd
icebp
inc
xchg
insl
lods
test
stos
es
ss
popf
push
addr16
rolb
shl
mov
std
fdivl
sub
cmp
mov
pushf
je
or
xor
testl
mov
mov
arpl
mov
pop
pop
lcall
add
mov
adc
cmpsb
sahf
adc
into
jp
pop
jnp
push
fwait
push
fimull
or
js
fistpll
nop
jae
cmp
cmpl
movsl
outsl
mov
pushf
add
dec
fwait
mov
jo
cli
or
push
fnstcw
sti
xchg
dec
jmp
test
lret
je
inc
mov
cmpsl
cmpsb
aaa
clc
cmp
dec
jbe
and
xor
push
sub
je
inc
dec
mov
mov
sub
call
pop
push
dec
push
ret
sbb
in
stos
stos
iret
lahf
cs
mov
in
into
ja
es
stos
orl
xchg
aaa
insb
xlat
mov
push
stc
xor
and
add
inc
or
arpl
ljmp
xlat
stc
cmpsb
and
das
jo
inc
add
imul
xor
daa
mov
or
pop
push
jmp
pop
ja
in
mov
or
cmp
dec
mov
mov
sbb
push
push
dec
out
inc
out
jmp
adc
push
fwait
loop
push
lock
cmp
inc
xor
shrb
dec
sbb
mov
in
inc
out
sub
cli
adc
mov
dec
inc
clc
lods
or
cmp
fsubs
mov
stc
fs
cmc
lcall
sti
js
adc
or
jle
dec
dec
fwait
add
jae
inc
cmp
add
sbb
mov
arpl
data16
outsl
bnd
js
inc
daa
adc
loop
and
jne
sbbl
sub
mov
adc
lock
ja
adc
push
inc
sahf
mov
mov
sbb
je
movsl
dec
add
and
xchg
push
jnp
or
xor
adc
xor
data16
movsb
mov
das
adc
in
scas
fsubrs
sbb
push
mov
xchg
in
jne
sbb
or
mov
dec
fsubrl
mov
mov
xchg
jp
jno
mov
rclb
idivb
sub
and
sahf
mov
enter
aam
imul
pop
lock
push
mov
data16
in
pop
aad
call
mov
cmp
jmp
and
and
ret
push
adc
dec
ss
dec
cmp
loop
pop
in
dec
pop
cltd
jne
adc
les
sti
mov
add
add
scas
pushf
int
xchg
jo
xchg
fdivrs
push
lret
or
adc
mov
sbb
test
mov
xchg
add
push
or
sbb
xchg
mov
lahf
fisubrs
scas
das
jnp
sahf
xor
idivl
add
out
pop
xor
jns
sub
xchg
lahf
jg
out
cmp
mov
outsb
xor
ret
pushf
int3
mov
cmpsl
scas
aaa
out
shlb
pusha
adc
std
sbb
jp
fisubl
loope
idiv
clc
xor
or
mov
sbb
pop
movsl
mov
mov
scas
pushf
das
pop
aas
lods
adc
inc
mull
dec
mov
dec
and
sub
insl
sahf
jb
and
sub
imul
cltd
push
jnp
mov
movsb
dec
mov
jne
test
fimull
jae
push
mov
ds
and
int
inc
push
mov
push
pop
mov
push
jg
stos
mov
test
add
xor
push
int
mov
jb
cmpsb
pop
cmp
cli
ds
lahf
aaa
imul
aaa
in
sub
ss
pop
test
adc
xchg
mov
jae
sub
pop
rol
insl
pop
cld
xchg
repz
insl
add
push
lock
xlat
shld
rcll
mov
push
pop
and
or
clc
mov
adc
jb
shll
fstpt
lcall
sub
loopne
ljmp
loope
pop
in
mov
fs
rcrl
inc
cmc
aam
jo
mov
fists
call
mov
in
add
cmpsl
add
ret
movsl
push
shrl
leave
add
popf
add
push
mov
push
dec
scas
stos
dec
es
mov
cld
pop
popfw
shl
push
fucomi
clc
arpl
call
cltd
xchg
and
or
pop
test
xor
adc
jne
mov
arpl
xlat
xor
shll
push
pop
addr16
sbb
ret
ret
js
repnz
push
inc
out
add
mov
mov
out
js
imul
je
inc
adc
cmp
aad
sbb
mov
mov
les
add
sbb
cli
test
xchg
cltd
gs
mov
push
dec
sub
sub
add
dec
jbe
sbb
xor
dec
clc
push
pop
jno
xchg
xor
cpuid
clc
inc
jae
adc
mulb
aam
cmp
rcl
jle
mov
repnz
sub
pop
xor
arpl
fcom
pop
popa
xor
test
push
in
mov
filds
mov
andl
push
mov
add
in
sbb
inc
adc
mov
cmp
in
xor
sbb
mov
nop
adc
in
jno
add
out
lods
movsb
icebp
pop
outsl
jle
xchg
std
addr16
les
popa
jmp
mov
fnstsw
adc
fldcw
dec
cmpsb
adc
push
pop
pop
and
or
fsubl
ffree
adc
imul
mov
mov
and
icebp
push
mov
addr16
ret
int3
pop
mov
fmull
cmp
cmp
nop
test
push
incl
mov
rcrl
cs
fsubrs
jecxz
cld
es
inc
xor
pusha
lahf
jge
xchg
ds
inc
insb
push
xchg
mov
lods
out
stos
mov
cli
push
repz
test
cmpsl
and
xlat
aam
je
jo
or
push
leave
pop
shll
popf
mov
inc
fnstsw
testb
mov
nop
ds
xchg
out
lds
icebp
sbb
push
jnp
inc
dec
shlb
imull
xchg
jb
lcall
sbb
pop
pop
mov
sub
hlt
xchg
lea
fsubrs
lds
insl
mov
imul
lds
lock
aaa
push
pushf
shrb
xor
sbb
repnz
out
dec
dec
xchg
inc
jle
sub
jl
jl
push
cmc
add
int
adc
or
fimull
push
jne
insb
out
hlt
daa
push
lods
push
cmpsb
fildll
or
push
mov
insl
or
sbb
add
movsl
jno
sbb
outsb
or
daa
add
fimuls
jecxz
lea
mov
ficompl
insl
pop
rol
ja
rcl
push
inc
bound
sub
mov
jo
out
adc
mov
xchg
cld
fldl
jp
rcr
sub
repz
lds
mov
sub
shl
push
repz
or
sti
inc
shrb
xchg
inc
mov
push
mov
hlt
adc
stc
test
inc
adc
add
cmc
daa
les
cmc
mov
scas
rolb
sub
or
mov
sbb
and
into
cmpsl
out
mov
nop
xchg
ja
xchg
je
xor
jb
lds
push
pop
repnz
arpl
and
mov
add
push
popa
cld
das
jnp
mov
shl
lods
add
out
lods
js
inc
ja
inc
shr
loope
stos
and
dec
pop
mov
and
pushf
into
sub
pop
push
xchg
jno
dec
cmpb
aam
add
fwait
ret
lret
inc
aad
xor
sub
leave
mov
mov
scas
andl
hlt
in
jl
shll
adc
or
and
push
shrb
push
sbb
loop
jb
lods
jg
mov
addr16
push
shll
xor
pop
ficomps
sbb
std
or
cmp
mov
mov
cmpsb
inc
clc
xor
adc
das
popa
nop
cmp
cs
cmpsl
mov
push
add
push
outsl
pop
ss
inc
ds
aaa
pushf
ret
or
cmc
sub
mov
lret
mov
cmp
inc
repnz
ret
cltd
or
jo,pn
cmc
mov
movsl
aad
push
mov
inc
sub
movsb
addb
imul
stos
jns
jnp
js
neg
loope
mov
push
and
insl
cmpsl
push
push
mov
xor
adc
push
push
gs
push
cmpsb
pop
out
adc
mov
ret
out
ja
mov
or
adc
pop
lods
pop
add
xchg
fbld
pop
sahf
cli
aas
test
test
out
adc
call
data16
push
sbb
or
mov
nop
and
pop
dec
addr16
inc
mov
shl
xchg
push
xchg
mov
enter
fwait
cmpl
or
cmp
sbb
push
mov
mov
mov
jb
pop
in
enter
pop
xor
das
sbb
mov
repz
mov
dec
out
mov
jle
xchg
aad
arpl
rolb
ficompl
sub
mov
cltd
push
fldt
in
lret
addl
mov
in
cltd
cmp
test
dec
sbb
sbb
or
and
aaa
or
out
ss
out
push
jae
roll
xor
xchg
push
inc
icebp
ja
outsb
jae
push
sub
pop
pop
mov
jbe
mov
fldt
adc
push
leave
ljmp
jmp
lds
lcall
cmc
lcall
dec
mov
leave
push
outsl
xchg
scas
push
push
mov
lcall
fs
push
fdivl
and
and
or
xor
mov
lds
adc
mov
stc
insl
cmp
stos
jae
jp
jp
adc
push
cmp
pop
in
out
icebp
cmp
mov
jb
xchg
testl
fisttpll
out
adc
testb
hlt
in
xor
mov
pop
repz
aaa
sub
push
push
arpl
aam
imul
adc
fists
arpl
pop
aam
sbb
sub
and
or
adc
mov
push
std
mov
xchg
cld
repz
std
into
popf
inc
decb
sbb
jnp
or
enter
hlt
pop
push
mov
add
call
adc
sbb
dec
xchg
adc
es
mov
stc
jge
es
into
cmp
xlat
ret
pop
xchg
data16
xchg
jle
test
mov
outsb
call
jg
jmp
inc
and
sub
sub
or
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
lret
mov
lods
mov
das
lods
xchg
test
inc
and
sbb
lock
in
enter
pop
push
xchg
sub
int3
jae
shl
sti
ja
cmp
adc
fs
pop
xchg
lods
push
mov
jne
or
aaa
popa
mov
movsb
mov
mov
inc
ljmp
or
mov
pop
jmp
loope
push
and
rcr
inc
ret
cli
enter
pop
test
xor
fldcw
xchg
dec
mov
adc
add
imul
mov
imul
dec
push
inc
mov
push
insl
stc
stc
mov
jns
std
mov
jo
sbb
mov
sub
stos
mov
cmpl
gs
outsb
jbe
iret
loope
jne
cltd
aam
adc
pop
aad
pusha
into
xor
ljmp
inc
gs
xchg
push
lock
cmc
jns
sbb
ret
out
cmp
mov
mov
out
test
push
xor
sub
add
jp
inc
out
shrl
add
cmp
stos
pusha
cltd
mov
stc
ret
inc
and
rcll
int
rol
ret
int3
sub
inc
jbe
aam
sti
ja
jnp
xor
xchg
mov
lock
xchg
mov
pop
shll
adc
inc
push
or
push
and
jecxz
pop
fs
stc
jmp
sbb
test
insb
mov
inc
dec
or
das
and
decl
and
jge
inc
mov
daa
xchg
mov
lods
sbb
cmc
js
mov
sub
push
adc
xchg
add
add
lods
fwait
ja
mov
pushf
pop
test
fmulp
mov
cmpsl
and
add
mov
xchg
cmpsl
ret
notl
ficomps
mov
repz
adc
inc
xchg
sbb
dec
or
xor
test
add
loopne
xchg
out
mov
ret
pop
jle
adc
fdivl
lcall
jnp
stc
arpl
pusha
mov
pop
push
sahf
ss
inc
sahf
dec
sbb
pop
clc
mov
in
into
test
dec
cmpb
mov
into
or
jae
outsb
aad
dec
ss
jmp
or
filds
into
dec
add
dec
test
int
out
lret
pushf
mov
lcall
das
sub
test
ss
inc
adc
in
scas
jmp
imul
or
push
inc
xchg
lcall
push
je
nop
pop
int
jp
ret
mov
test
cli
mov
lahf
in
dec
mov
icebp
pop
call
jle
sahf
mov
std
leave
xlat
ffreep
daa
mov
xchg
movsb
call
cmp
lds
add
lret
push
mov
int
insl
into
mov
loope
popw
jecxz
ss
movsb
aas
jne
dec
outsb
push
scas
xor
and
lcall
mov
push
and
outsb
shll
dec
inc
rcr
mov
pushf
xchg
scas
adc
jmp
mov
sbb
xor
ret
push
addr16
inc
loope
int3
pop
add
xchg
inc
loope
xor
cmpsb
imul
shll
stc
xor
imul
inc
inc
js
outsl
dec
jg
fisubl
test
xor
cmpsl
fs
push
mov
sti
xchg
xor
leave
add
roll
ja
nop
mov
fstpl
popf
xchg
insb
push
mov
pop
xchg
fidivl
stos
ds
adc
push
inc
cwtl
adc
ffree
push
fisttpl
jge
jg
out
and
fcoml
mov
xchg
scas
ret
notb
adc
lea
push
xor
cwtl
repz
xchg
mov
shlb
pop
iret
rol
inc
inc
pop
decl
sbbl
pop
adc
lret
and
aad
mov
push
fucomi
sub
pop
insb
roll
out
bound
mov
ret
daa
jle
push
loope
mov
xor
mov
pop
sub
adc
and
cmp
xor
nop
sahf
ss
xor
movsb
repnz
cs
jno
lds
int
cmp
jg
repz
stc
je
cmpsl
adc
repnz
push
fsts
lock
repz
cmp
rcrb
fcmovne
wbinvd
sub
fsubrl
outsb
jecxz
adc
leave
lock
mov
push
pop
jg
in
and
lods
int3
jg
xchg
cmp
imulb
or
popf
movsb
inc
mov
sub
jo
dec
mov
inc
push
dec
inc
cmp
mov
cmp
loopne
cmp
into
stos
adc
sahf
cwtl
inc
ljmp
cmpsl
cltd
jle
push
sbb
sbb
mov
mov
test
pusha
dec
in
jg
fadds
add
lea
sbb
pusha
jno
shlb
loope,pt
ss
bound
mov
ds
and
mov
lds
xor
in
or
xchg
add
inc
adc
xchg
pop
inc
xor
and
xchg
xchg
inc
lret
scas
and
in
int
rclb
jne
sbb
push
jp
data16
mov
popw
lds
add
adc
mov
sub
jns
popa
inc
mov
sbb
cmpsb
stos
ja
jmp
js
xchg
fisttpll
cmpb
orb
notl
cmp
jp
or
sub
xor
inc
jge
out
lock
jecxz
add
pushf
test
add
clc
mov
add
call
fdivrl
mov
out
in
inc
pop
int
mov
in
sbb
push
mov
das
sbb
lret
pop
mov
mov
icebp
cmpsb
enter
fsts
sbb
addr16
pop
adc
ja
sub
jno
mov
pop
mov
outsl
lcall
xor
lds
out
xchg
cmp
adc
clc
lahf
xor
lcall
ds
adc
test
dec
outsb
fwait
jne,pt
jnp
push
pop
add
inc
pop
push
imul
dec
sbb
jns
inc
pop
mov
orl
adc
cmp
aam
insl
pop
insb
mov
into
ljmp
fcmovnu
push
sbb
jns
cmp
hlt
mov
pop
imul
adc
inc
sbb
jecxz
inc
push
aam
sbbl
mov
mov
lret
rcr
out
sbb
xchg
sub
vucomiss
push
sbb
cwtl
cmp
pushf
jo
jmp
sbb
inc
and
daa
imul
adc
jae
xor
movsb
aas
xor
cltd
and
inc
xor
pop
arpl
mov
add
sbbb
test
mov
clc
push
push
out
cwtl
xor
dec
mov
sbb
cmp
cmpsl
ret
inc
or
push
sbb
stos
xchg
rcll
push
mov
cmc
frstpm(287
mov
and
inc
xor
inc
aam
push
aaa
std
inc
je
lock
dec
rolb
sti
push
cld
fistps
sbb
mov
jns
sub
jb
and
sbb
mov
pop
outsl
repnz
fnstenv
xor
add
xchg
fcmovnb
cmp
loopne
dec
test
jae
ret
inc
pop
shll
xchg
jae
xchg
rcr
mov
mov
add
outsb
dec
inc
jmp
addb
mov
xor
sti
ret
shlb
or
das
int3
sbb
jmp
ficoml
lcall
dec
decb
cs
sahf
lahf
fdivrs
push
es
inc
or
inc
or
mov
inc
jns
lock
push
pop
pop
int3
std
in
xchg
pop
outsb
cwtl
nop
inc
enter
cmpsb
push
in
das
in
mov
cmpsb
ja
fidivrl
scas
pop
adc
sub
jge
addl
pmaxsw
sbb
lods
mov
adc
push
test
mov
jmp
shll
pushf
mov
xchg
sub
pop
out
aaa
push
fisttps
call
mov
pop
mov
int3
push
push
jno
pop
sbb
test
inc
cs
repz
aad
int3
das
add
inc
sub
dec
and
data16
cwtl
jae
imul
int
cmp
dec
mov
or
fimuls
cmp
divb
lock
outsl
lock
repnz
dec
lods
jmp
dec
fwait
xor
shrl
imul
cmp
mov
cmpsl
pushf
bound
sbb
push
pop
ret
or
inc
scas
mov
xchg
and
outsl
into
push
push
jmp
or
std
or
dec
mov
sub
sub
and
xorl
stos
incl
xchg
and
cmpb
rcrl
hlt
sbb
cmp
aam
cltd
and
iret
sarb
test
add
xchg
jb
shl
daa
jno
mov
mov
cmpb
add
push
int
add
pop
outsb
push
insl
xchg
fmuls
push
xor
pop
pop
jmp
and
int
adc
sub
cmp
or
xchg
push
push
xchg
pop
imul
imul
mov
outsb
scas
dec
arpl
repz
and
sar
jbe
daa
ljmp
jo
cmp
mov
in
daa
lods
jmp
push
out
pop
pop
xor
sbb
clc
dec
sub
inc
inc
sahf
test
int3
mov
mov
pop
mov
inc
mov
ds
insl
xchg
mov
mov
push
sbb
hlt
push
jne
jb
cld
cwtl
jle
jnp
adc
nop
out
fld
or
jp
aam
cltd
and
xchg
sbb
xchg
pop
jl
xchg
pusha
or
lahf
dec
mov
sbb
movsl
mov
outsl
testb
incl
inc
xchg
data16
and
rclb
scas
xor
popa
push
sbb
sti
out
in
aaa
pushf
popa
jle
out
test
pop
popa
adc
pop
daa
int3
xchg
test
cs
lds
je
test
aaa
mov
sbb
jp
loop
popf
sub
add
pusha
cltd
insb
inc
inc
arpl
shrb
loop
mov
cmpsb
jmp
cmp
adc
int
shll
push
jmp
mov
sub
or
mov
frstor
sub
lcall
loope
lods
test
sbb
cwtl
or
arpl
cmp
add
pushl
and
cld
stos
or
icebp
push
push
mov
sbb
pop
pop
push
dec
xchg
ret
in
lock
mov
fldenv
jae
daa
shrb
fnstcw
mov
cmc
stc
add
outsb
in
mov
dec
add
adc
push
pushf
outsl
dec
clc
fs
ja
insb
jns
pop
mov
or
cmpsl
xor
in
movsb
scas
cmp
lods
cwtl
mov
pop
aad
pop
push
add
fldl
xor
sbb
fdivl
mov
and
fisttps
pop
jns
cmpsl
out
ret
push
out
dec
pushf
sbb
fimuls
jmp
ja
icebp
ljmp
jg
mov
xor
subb
sbb
out
mov
out
inc
xlat
mov
mov
shr
xor
jo
ss
in
push
xchg
pop
dec
fldl2t
iret
or
repnz
push
jge
or
mov
push
pop
or
in
jmp
xor
sub
or
js
sbb
cmp
shlb
push
es
into
dec
mov
cli
sub
or
cmpsl
mulb
gs
cmp
popa
jno
incl
les
lods
outsb
fs
sub
dec
insb
adc
jo
jp
xor
add
dec
sbb
inc
sub
sbb
dec
push
mov
mov
outsb
xchg
stos
sbb
mov
and
loope
sub
or
faddl
lcall
inc
and
and
int
mov
pop
lcall
add
insb
mov
mov
in
js
push
js
jmp
add
js
push
push
cmpsb
jne
mov
imul
push
xchg
pop
dec
jno
faddl
or
out
mov
repnz
shl
cwtl
sub
xor
gs
daa
je
ret
int3
ds
inc
into
mov
repnz
shl
or
cmp
adc
cmp
adc
movl
lods
xchg
aam
sub
pop
loop
jge
mul
jmp
movsl
rclb
call
cmp
fwait
pop
jns
xchg
adc
mov
xor
lods
push
orb
icebp
shlb
ljmp
pop
mov
pop
mov
adc
stos
movb
insb
repz
adc
js
xor
insl
dec
push
inc
js
leave
addr16
stos
leave
pop
mov
mov
or
sbb
add
lods
movsl
jecxz
mov
out
mov
shll
ja
xor
dec
pop
add
jg
aam
les
xchg
in
xchg
sbbb
int
das
fdivrp
cs
or
xchg
mov
sbb
jmp
mov
out
cmp
xchg
pop
push
mov
faddp
push
mov
mov
lods
aaa
sbb
loope
xchg
mov
scas
je
jb
xchg
mov
ja
test
jb
xor
adcl
cmp
mov
lods
movsl
scas
dec
unpckhps
cmp
mov
or
and
jo
mov
movsl
cmp
sbb
add
test
adc
out
pushl
xor
adc
pop
inc
dec
and
ret
aas
fwait
lret
mov
enter
xchg
orb
and
fwait
dec
insl
lret
mov
push
int
aad
adc
jns
lret
xchg
ret
daa
lds
mov
orl
sbb
adc
xchg
xor
adc
mov
lods
sahf
faddp
mov
add
enter
aam
pcmpgtb
cmp
repz
fisttpl
mov
cwtl
test
inc
daa
je
adc
cs
push
pop
and
inc
sarl
out
mov
lret
into
jo
pop
in
jecxz
imul
mov
sbb
loop
mov
mov
enter
vsqrtps
sbb
jo
sbb
out
lock
dec
sub
jnp
mov
negl
subl
mov
stos
push
xor
leave
sbb
xlat
sbb
pop
shr
inc
xor
xchg
movsl
fisttpll
pop
jecxz
xlat
fwait
mov
scas
push
inc
idivl
sub
hlt
mov
mov
lods
mov
ss
jge
lock
dec
mov
cmp
cli
inc
dec
testl
aam
jp
rcrb
movsl
outsb
out
or
ja
add
or
popa
or
mov
insl
push
sahf
in
das
clc
mov
dec
pop
push
pop
mov
push
iret
jmp
scas
cs
imul
fldenv
xchg
das
dec
mov
mov
stc
arpl
in
dec
jl
in
lahf
add
push
cmp
int3
xchg
aam
ret
rcll
mov
fisttpl
xlat
mov
mov
jmp
mov
sbb
mov
pop
xchg
outsl
stc
or
mov
cmp
and
js
mov
xchg
cmp
mov
lock
sbb
xor
icebp
push
leave
cmpsl
loop
and
mov
sub
sbb
ljmp
add
pop
leave
dec
pushf
mov
cmp
xchg
out
into
mov
fwait
scas
inc
dec
orb
lret
push
out
jp
das
pop
adc
pop
push
mov
clc
fsubl
lfs
pop
in
test
and
mov
sub
inc
mov
jmp
push
adc
cld
lcall
popa
dec
add
lock
sbb
mov
pmuludq
mov
ja
push
pop
test
mov
push
mov
jno
std
inc
lds
ljmp
sub
das
xchg
test
cmpsl
popf
push
add
mov
add
jns
pop
cmp
outsl
mov
out
pop
mov
sbb
adc
jns
neg
int3
jmp
loop
roll
popa
sahf
mov
xor
xchg
mov
in
sub
cmc
sub
and
lea
and
scas
popl
mov
bound
jno
cli
mov
in
mov
adc
pop
sbb
aad
mov
test
cmpsb
jl
out
addb
adc
test
pop
adc
adc
out
nop
adc
fidivl
lret
jbe
pop
ret
sbb
fwait
movsb
add
lret
popa
hlt
cs
out
mov
add
inc
mov
sbb
inc
repnz
xchg
sbb
shrb
add
mov
push
or
je
sbbl
iret
jg
cmp
push
inc
push
add
mov
push
jle
jns
movsl
inc
mov
out
in
sbb
aas
sbb
jge
dec
jge
inc
aad
push
mov
jbe
push
sbb
out
jbe
je
das
and
xchg
scas
and
pusha
popa
sub
add
cmpsl
fadds
nop
xchg
mov
and
sub
es
ja
add
test
xchg
daa
jno
pop
mov
cld
daa
jne
outsl
pop
or
add
pop
rcrl
dec
cmc
pop
jecxz
std
sbb
scas
fstpl
adc
dec
ja
jbe
mov
mov
pop
xor
in
or
xchg
mov
pop
jg
stos
xchg
jmp
push
dec
sbb
outsl
outsb
push
popa
jle
imul
jl
lods
loope
or
es
lcall
std
sub
lret
mov
pop
daa
mov
sbb
scas
ds
stc
lret
rcrb
mov
jnp
ja
inc
sbbb
pop
aas
adc
cli
cbtw
cmp
fstl
fdivl
jo
adc
xchg
push
dec
int
push
pop
ss
data16
aad
dec
rolb
add
push
hlt
gs
aam
fmuls
sbb
mov
xchg
imul
mov
divl
and
fwait
jb
xchg
push
cmc
pop
bt
sub
in
pop
pushf
push
cs
nop
testl
nop
repz
jae
fstl
in
loop
lods
add
jl
in
xchg
icebp
mov
adc
cs
pop
xor
mov
stc
sbb
xchg
aam
movsb
clc
icebp
pop
xor
adc
dec
lahf
addr16
movsl
mov
cld
stos
cmc
inc
sub
rol
jnp
out
mov
enter
hlt
test
int
sbbl
sub
cltd
lcall
jecxz
sbb
cmpsw
mov
jno
sarb
adcl
xchg
inc
sub
mov
iret
adc
add
xor
inc
xlat
cli
in
dec
hlt
imul
rol
mov
push
xchg
or
mov
in
jb
pop
popf
jno
shrb
movsl
mov
sarb
aas
push
mov
in
in
push
cmpsb
adc
and
jp
fs
data16
jb
test
pusha
scas
loope
inc
test
loop
sbb
hlt
add
mov
pop
or
inc
sarb
inc
add
leave
push
fnstcw
icebp
pop
lcall
jne
jns
fisubrl
or
shll
jp
dec
loopne
pop
or
scas
bound
or
dec
scas
repnz
int
insb
inc
adc
ret
jecxz
dec
in
loopne
ret
xchg
fwait
outsb
jno
aaa
popa
dec
mov
inc
pop
lret
or
xchg
rol
sbb
cmp
into
or
mov
mov
sar
stc
sbb
mov
lea
mov
subb
ds
jg
decb
cs
test
in
mov
leave
jnp,pn
ss
imull
fisubl
mov
lret
insb
and
je
les
cld
ret
movsl
aaa
lods
or
fmuls
lods
pop
decb
gs
scas
mov
cmp
push
sbb
outsb
out
cmpsl
mov
cmp
pop
insb
xchg
jb
sub
adc
pushf
lcall
rcrl
fwait
or
aam
mov
andl
add
repz
aas
loopne
pop
adc
imul
out
mov
inc
scas
sbb
cltd
push
into
fisubs
xlat
mov
imul
les
cmp
push
mov
loope
adc
pop
les
pop
sbb
test
popa
sbb
out
hlt
sbbl
pop
inc
cli
pop
mov
sub
xchg
icebp
mov
mov
mov
fdivl
les
fs
xor
xchg
adc
xor
arpl
jle
mov
pop
and
ret
mov
xor
cs
pop
adc
or
or
jecxz
cmpsl
xor
idivb
jae
out
add
out
leave
fsubs
sbb
mov
xor
sub
movsl
mov
sub
out
call
daa
cmpsl
roll
dec
mov
mov
fdivs
xorb
and
jne
pop
mov
lahf
pminsw
xchg
xchg
sbb
cmpl
test
jmp
rcll
loop
inc
outsl
mov
sub
test
push
rolb
dec
xlat
shll
or
inc
jnp
ss
fdivs
fsubrp
xor
push
sbb
cmp
bound
stos
gs
in
pop
mov
movsl
shll
dec
iret
push
jno
outsb
add
lahf
push
jns
ljmpw
insl
loop
push
pop
les
fwait
mov
add
pop
xor
xlat
and
nop
ret
adcl
add
push
gs
fwait
sbb
mov
es
cmp
bswap
mov
and
test
out
inc
out
shrl
push
mov
nop
inc
and
orb
mov
mov
dec
loop
sahf
mov
sbb
jno
mov
imul
jecxz
mov
jns
xchg
stos
rol
clc
scas
cli
insl
mov
pop
jmp
ret
adc
adc
inc
enter
pusha
aas
mov
jl
in
adc
mov
lret
cmp
adc
por
mov
mov
addl
outsl
mov
jns
add
push
bound
movsl
push
jno
jge
mov
push
push
cmpsl
negb
fidivs
cmp
mov
imul
pop
mov
xchg
movsb
mov
or
inc
cmpb
pop
jno
xchg
in
std
es
fcmovu
imul
stos
negb
test
out
xchg
mov
or
adc
or
jecxz
fs
stc
imul
push
icebp
call
dec
std
fmuls
inc
jne
testb
or
imul
and
test
jp
aam
dec
je
cmp
lds
outsb
lods
vmovdqa
cmp
out
adc
stos
xchg
mov
movsb
cmc
pop
mov
push
in
and
out
cmc
fwait
pop
add
movsl
cmc
imul
lds
clc
pop
push
loope
pop
inc
rcrl
dec
mov
gs
lea
sub
inc
push
fs
sbb
test
mov
dec
jbe
xchg
mov
xor
jo
mov
xor
dec
jg
ds
jg
frstor
mov
fldcw
sub
or
ret
cmpsl
mov
icebp
mov
sub
popf
fs
cmc
lock
mov
daa
jmp
jns
or
scas
pop
pop
jo
cwtl
pop
imul
cs
sub
out
cmc
clc
and
jmp
cmp
cmpsb
ret
push
jno
inc
mov
lret
jl
clc
push
sbb
stos
cmp
ds
lahf
jb
jge
xor
pop
pop
inc
mov
mov
cmovg
jge
or
push
stos
popa
lods
xchg
dec
das
sub
into
pusha
push
cmp
sbb
fs
call
jbe
mov
mov
leave
adc
cmp
pop
push
xchg
sbb
fisttps
xor
adc
fwait
in
in
jnp
push
neg
imul
mov
call
emms
pop
ss
jno
cwtl
int
mov
cs
xchg
fsubl
insb
xchg
jmp
mov
xor
test
add
adc
cmp
jb
lods
jmp
lret
and
scas
incl
jg
mov
jnp
adc
test
out
sbb
in
lock
imul
das
daa
or
out
icebp
sub
insl
fsubrs
and
pop
sbb
xorb
test
sub
fwait
es
js
xor
scas
mov
lock
and
in
ret
cwtl
ds
push
fnop
xchg
adc
aaa
andl
shrb
gs
adc
lds
adc
sub
sbb
aas
mov
sub
add
lea
sub
jecxz
mov
incb
or
lcall
cwtl
push
arpl
add
dec
push
test
lock
cmpl
mov
pop
mov
and
aad
lock
int3
xchg
lret
mov
ja
sbb
test
lods
sub
movsl
cld
shlb
cs
fsubrs
nop
leave
lea
push
push
dec
cmp
add
sarb
xor
sarl
mov
xchg
in
dec
fmull
mov
mov
fs
push
adc
rcll
cld
mov
or
push
xchg
leave
xor
mov
dec
hlt
mov
cltd
fiadds
mov
test
sahf
adc
jecxz
loopne
push
pop
lret
dec
sub
popa
cmpsl
cmp
cmpsb
mov
or
and
aad
and
push
clc
sbb
jmp
xor
mov
pop
pop
mov
rcl
jno
int3
js
push
xchg
test
xchg
dec
imul
lods
inc
xor
adc
xchg
pushf
aad
add
cwtl
loope
jno
jb
sbb
mov
pop
negb
and
add
cmp
sbb
xlat
xchg
and
mov
call
add
adc
jne
addr16
push
push
jmp
aas
lahf
mov
imul
rcll
cmp
xchg
add
jno
sahf
cld
movsl
push
sahf
or
test
das
push
cmp
imul
popl
push
in
and
mov
dec
cmp
jns
ret
in
cmc
xchg
cmp
repnz
and
fst
outsl
add
add
andl
push
fsubl
xchg
lods
rol
out
sbb
pop
fildl
jae
jae
xchg
in
jb
repz
mov
add
aam
push
sbb
leave
enter
push
outsb
sbbl
pop
pop
dec
outsl
stos
sub
add
push
xchg
xchg
mov
cld
mov
addb
and
and
dec
out
push
adc
cs
adc
pop
inc
and
adc
pop
dec
jae
mov
in
cld
sub
nop
aaa
inc
or
sub
je
mov
sub
lock
cmp
insb
dec
into
pop
adc
push
rcr
fsubrs
int
icebp
sbb
xchg
sbb
pop
dec
push
repnz
stos
les
sti
adc
jl
pop
out
sbb
adc
mov
arpl
xchg
inc
add
sti
xor
sbb
scas
or
rol
pop
imul
or
push
mov
mov
jo
mov
dec
filds
lea
shll
xor
push
pusha
mov
inc
mov
xor
mov
jl
loopne
pusha
xor
gs
enter
fsubl
stos
or
pushf
or
mov
sbb
cmpsl
sbb
push
push
in
adc
adc
fimull
mov
pop
popa
aad
cmp
pop
sbb
outsb
add
xor
xchg
je
lea
pop
dec
insl
cli
repnz
popa
xor
jne
adc
dec
pusha
xchg
mov
jg
xor
imul
push
in
insl
dec
rcll
out
cmp
jne
rcrl
js
ds
dec
adc
cmp
js
addr16
jge
mov
sub
lods
adc
xchg
cmp
test
add
movsb
mov
int
cwtl
insb
jl
call
dec
in
pop
inc
repnz
sbbb
inc
enter
or
out
mov
fs
xor
adc
jo
movsl
roll
lock
xchg
inc
leave
cwtl
pop
lcall
or
cmp
push
fucomi
icebp
fcoml
sub
dec
mov
pop
cmpsl
subb
push
ja
jge
dec
ret
into
fwait
sarl
fistpl
cli
pusha
pop
xchg
subb
xchg
in
xor
xchg
lret
or
dec
mov
nop
loop
setns
ffreep
lcall
jo
push
sbb
aam
mov
shr
sub
out
pop
insb
loopne
dec
adc
lea
sbb
mov
cmp
and
mov
mov
addr16
lea
pop
cmp
dec
mov
nop
aas
pop
loopne
sbb
mov
mov
fidivrs
pop
mov
test
and
add
sub
pop
and
daa
xor
mov
inc
iret
dec
incb
addb
xchg
ret
jecxz
shlb
push
mov
xor
das
sub
rorb
out
pop
xchg
and
data16
gs
leave
inc
jecxz
cs
shr
add
sub
icebp
in
push
jl
in
pop
lahf
insl
out
repnz
mov
cmc
cmp
adc
xor
fldln2
lcall
mov
add
out
jne
or
add
js
mov
push
fldenv
aaa
xchg
jmp
dec
stc
pop
push
fcomps
test
gs
jl
movsb
aad
cmpsb
sbb
mov
xlat
cmp
mov
cwtl
enter
mov
pop
stos
mov
icebp
mov
adc
and
shlb
out
les
pop
sub
in
mov
lock
dec
adc
rcll
ret
push
push
repz
fdivrl
adc
lock
lcall
push
lahf
ret
sub
adc
pop
sbb
mov
cli
mov
adcb
je
js
adc
pusha
cmc
push
sbb
mov
imul
sub
int3
mov
fnstcw
in
nop
stos
or
stos
mov
xchg
in
notb
daa
pop
sti
cmp
jle
push
punpckhbw
add
fidivs
out
outsl
inc
xchg
adc
push
cmc
loop
jecxz
mov
sbb
mov
cmp
cmc
ret
xchg
mov
add
daa
dec
or
repnz
xchg
jnp
pop
mov
xor
ja
test
mov
push
hlt
movsb
and
movsl
jmp
push
shrw
xor
lcall
mov
lds
loop
dec
insl
bound
and
add
cmp
jb
cmpsl
std
inc
or
add
mov
adc
lock
xchg
mov
shll
push
repz
je
out
test
lock
mov
stc
jle
cmp
push
repz
or
das
movsl
push
push
arpl
mov
xchg
pop
faddl
rorl
rcrb
xlat
data16
sbbl
cmpsl
mov
lcall
or
dec
mov
hlt
push
out
repnz
sti
movsl
adc
in
clc
into
int
xchg
in
pop
mov
jne
jl
lds
xchg
sbb
fwait
xor
cmpsl
mov
test
rclb
xor
cmp
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
mov
rolb
addl
gs
ret
outsb
je
lret
cmp
lea
jnp
push
jne
push
loope
fidivrl
ss
xor
lahf
pop
inc
scas
pusha
fwait
adcb
aad
call
pop
add
sarl
rcll
mov
enter
je
dec
pop
xchg
imul
in
call
sub
and
out
es
mov
cmc
add
gs
sti
jo
fs
add
je
push
imul
or
pop
std
push
sti
imull
es
jg
stc
inc
mov
mov
pop
imul
lock
fistl
xor
cli
faddp
leave
shl
cmp
fwait
out
dec
jo
sub
in
rcll
lcall
jge
imul
adc
dec
icebp
or
int
or
daa
mov
sub
inc
xorl
sbb
out
int
pop
in
hlt
sbb
jmp
push
xchg
call
cmpsb
subb
pop
mov
sbb
dec
rorb
cmp
mov
outsb
repz
cmp
mov
mov
mov
dec
push
imul
add
leave
test
push
add
jmp
sbb
rol
pop
out
push
add
xchg
push
lret
mov
adcb
xchg
sub
nop
xchg
mov
clc
adc
push
lock
push
mov
ficomps
and
lret
lods
push
mov
aam
pop
jbe
xchg
ret
pop
mov
repz
inc
push
outsb
leave
sbb
or
test
je
add
popa
add
or
sbb
cmpsl
lds
movsl
xchg
call
inc
adc
sbb
loope
hlt
imul
ljmp
pop
in
jge
cmp
cwtl
jb
sahf
es
xchg
xchg
pop
and
xlat
and
lods
adc
jo
sub
test
out
decl
or
aaa
rcrl
cmp
sti
test
ret
aas
push
je
push
outsl
icebp
xor
jmp
inc
mov
mov
or
pop
loopne
pop
sbb
sarb
fstl
push
jne
dec
fdivrs
sbb
in
cli
or
test
lea
aad
xlat
divl
cmc
push
int
lcall
sbb
push
pop
cmp
rcrb
xor
es
call
mov
push
dec
xchg
and
inc
test
pop
mov
out
cmp
pop
and
inc
push
adc
pop
xor
js
loop
test
es
adc
shrb
iret
push
aas
sbb
mov
mov
jns
sar
jno
rclb
cmpsb
aam
lds
inc
test
pop
push
jns
adc
popa
mov
cmc
mov
ss
std
jle
adc
sub
mov
inc
sbbb
jmp
push
jge
xor
push
and
les
test
add
cmp
adc
test
rcrl
mov
lea
clc
sbb
nop
daa
and
pop
loop
outsb
pusha
pminsw
and
xchg
xchg
sbb
pushf
dec
mov
add
out
or
int3
mov
sahf
cmpsl
push
adcl
fwait
cmp
sbb
mov
dec
cmpsb
andl
cmpsl
jno
aaa
add
dec
nop
mov
pop
clc
mov
jmp
jg
push
mov
mov
mov
pop
faddl
call
xor
loope
mov
aaa
bound
mov
out
ja
xchg
sti
sub
hlt
das
and
cmc
add
rcll
fdivrl
jne
xor
xchg
xor
dec
out
addr16
pop
xor
pop
in
xor
cltd
pop
add
fbld
gs
adc
push
jmp
mov
push
sar
je
add
inc
adc
sbb
inc
jo
lods
jg
pop
adc
stos
aaa
fistpll
addr16
je
mov
inc
stos
push
nop
adc
pushf
xchg
dec
popa
inc
mov
jno
jmp
push
sahf
xchg
ret
cmp
loopne
push
pop
data16
mov
bound
push
jp
addr16
imul
lods
scas
orb
push
dec
mov
out
xchg
push
cmp
fs
ja
mov
int
fwait
pop
xor
sub
sti
bound
mov
jno
xor
fnsave
cmp
lods
movl
out
sub
test
xchg
stc
inc
gs
fldenv
sti
lret
dec
addps
imul
xor
lahf
inc
test
insb
out
push
sub
cmp
mov
adc
pop
mov
xor
dec
dec
test
cmp
jmp
sub
in
sbb
sub
lahf
bound
andb
ljmp
jecxz
lret
bound
bound
cltd
pop
push
mov
call
fldcw
add
fiadds
cmp
dec
push
push
add
mov
xor
cld
or
imul
cmp
dec
cli
pop
cld
sbb
mov
or
mov
pushf
jmp
out
jnp
fwait
or
sbb
mov
mov
xlat
fisttps
pop
mov
cmpsl
cmpsl
sbbb
inc
jae
stc
xchg
mov
add
mov
push
ljmp
add
aas
adc
inc
cwtl
lods
mov
fsubrl
pop
mov
out
pop
push
inc
dec
cltd
mov
ja
add
mov
mov
int3
mov
inc
scas
shrb
jl
movsb
addl
or
out
sbb
insb
pop
mov
and
pop
cld
ljmp
std
mov
dec
add
scas
test
add
cmp
addr16
mov
imul
add
das
es
push
adc
sbb
ret
lea
dec
daa
mov
jle
dec
fwait
mov
inc
or
adc
mov
adc
mull
movsl
or
lea
insl
js
push
fdivl
outsl
xor
dec
sub
dec
mov
xchg
pushf
in
mov
xor
into
sub
daa
fs
insl
mov
cmp
jno
mov
loope
orb
adc
sti
shrb
jmp
mov
jns
mov
scas
hlt
inc
jl
jb
or
push
addr16
sbb
push
lods
mov
pop
dec
cmp
jmp
push
cwtl
sub
or
cld
adc
insb
leave
shlb
rorl
push
in
inc
movsb
or
sti
cli
jne
or
adc
xchg
fidivrl
xlat
adc
or
loopne
add
lret
mov
lock
sahf
test
aaa
rol
negb
ss
dec
cmp
dec
push
pop
fsubs
adc
push
mov
lahf
ret
movsb
lds
or
or
sti
mov
pop
cwtl
cltd
xchg
xor
arpl
je
in
sahf
jmp
ret
test
mov
cmp
aam
andl
pop
push
bound
ret
jns
iret
cmp
ljmp
xorb
mov
mov
mov
jp
and
xor
push
out
mov
shrb
je
jmp
jns
das
and
mov
push
mov
pop
daa
clc
lcall
inc
adc
popf
jp
xchg
pushf
jg
jmp
outsb
cmpsb
aaa
push
sbbb
cmpsb
sbb
mov
jb
xchg
push
jnp
mov
mov
call
push
arpl
cmc
mov
in
ret
add
push
out
stc
cmp
sarb
adc
and
xchg
insl
pop
mov
movsl
or
adc
dec
sbb
pop
mov
mov
mov
and
mov
fbld
fst
mov
add
cmpsb
jae
imul
xchg
jns
sbb
aas
ret
mov
pop
pop
jae
or
hlt
gs
in
xlat
dec
les
lret
push
orb
lods
push
pop
dec
in
test
xor
loop
mov
movsl
lret
push
in
push
sub
and
cltd
mov
xchg
mov
imul
js
cmc
adc
sbb
subl
dec
jbe
add
movsl
push
xor
into
rcrl
xchg
das
lcall
sub
cltd
dec
inc
repnz
data16
movsb
dec
je
xchg
popa
adc
mov
in
test
mov
mov
push
insb
xchg
xor
xor
mov
dec
cmpsb
loopne
cmp
je
ret
sbb
imulb
add
jo
cmp
xchg
push
push
xor
dec
mov
mov
jle
xlat
lea
fcompl
sbb
pop
fldl
xor
mov
dec
xchg
testb
popf
mov
insb
enter
iret
idivl
adc
inc
dec
imul
inc
insl
xchg
out
or
mov
insb
das
into
sbb
lods
int
sbb
and
xor
mov
lret
sbb
icebp
push
xor
jecxz
sub
add
sbb
add
mov
xor
xor
ljmp
adc
stc
test
jl
xchg
in
lret
jae
jae
addl
inc
inc
adc
mov
mov
jecxz
xchg
sub
push
xchg
imul
xor
dec
stos
cld
add
rcrl
test
or
mov
out
lds
mov
cmp
test
fiaddl
mov
lods
push
int3
in
push
sub
or
ljmp
sub
icebp
cld
add
ret
cmp
xchg
mov
pop
pop
fsubs
adc
sbb
out
sub
jns
and
std
in
xlat
adc
inc
lret
push
ljmp
pop
jle
jne
mov
mov
cmp
cmc
push
mov
pop
dec
pop
icebp
push
loopne
adc
loope
orb
dec
adc
jg
fdivrl
mov
call
sbb
pop
adc
or
mov
mov
sar
insl
std
sub
test
push
cmp
lods
mov
mov
addr16
pop
mov
mov
fiaddl
cmp
ljmp
fisttpl
int3
mov
mov
loop
addr16
cmp
cmp
pop
sarb
or
es
push
xchg
jo
sub
fcom
insb
lods
add
mov
inc
cmp
les
fisttpl
data16
pusha
bound
inc
ljmp
insb
jmp
fwait
pop
rcr
fsubrl
jb
mov
les
lcall
sub
mov
inc
iret
ss
leave
in
nop
cmp
mov
mov
inc
mov
mov
cwtl
push
sub
xchg
mov
sbb
xchg
repnz
push
into
pop
int3
adc
cmpsb
enter
je
xchg
mov
sbb
jnp
sarl
push
sbb
jle
sub
and
or
je
push
jg
xchg
adc
mov
shrb
jp
clc
sti
jmp
iret
das
jl
scas
cmp
push
jno
pusha
sub
cmp
mov
push
into
push
push
outsb
mov
outsb
push
pop
fists
cmpsl
enter
add
push
sub
mov
aas
ss
aad
pop
mov
mov
jle
pop
sbb
sbb
test
push
mov
bound
lret
out
iret
rcll
jne
ss
sbb
jno
push
jmp
hlt
lds
add
dec
inc
test
fst
divb
sbb
sub
adc
mov
sbb
daa
mov
rcrb
arpl
or
xlat
pusha
inc
lods
jae
xor
out
ficoms
movsl
jns
cli
in
inc
pop
pop
adc
and
xchg
dec
add
std
sahf
stos
pushf
insl
ds
pop
pop
cld
orl
sbb
or
mull
loopne
scas
mov
cmp
mov
mov
push
movsb
dec
in
pop
mov
stc
dec
and
or
lods
push
lcall
orb
rorl
in
jno
push
lret
cwtl
addl
leave
pop
mov
ss
in
sbb
mov
sar
loope
sbb
aad
jecxz
add
mov
jne
movb
fcoml
lahf
pop
mov
jbe
push
push
lret
or
popf
xorl
addb
repnz
movsb
xchg
xor
mov
sti
xchg
cmp
dec
inc
jnp
cmp
imul
dec
xor
push
dec
add
mov
and
sub
ja
stos
pop
nop
cmpsb
mov
sub
outsb
push
jge
imul
jge
xor
scas
inc
decb
imul
pop
insl
clc
mov
ss
xchg
sub
fcmovu
fnstcw
mov
mov
call
push
dec
cmp
int
cli
mov
mov
or
ljmp
or
mov
jp
sti
mov
inc
xorl
inc
sub
fmulp
jo
mov
outsb
push
cmp
sti
add
adc
ja
mov
jmp
fdivrl
stc
sbb
cld
cld
mov
dec
or
lcall
fstl
and
loope
test
adc
sbb
cmp
cwtl
pop
or
shlb
icebp
orl
ss
mov
mov
dec
movsl
es
xor
std
es
nop
stos
fdivs
jg
ljmp
cwtl
and
pop
out
push
adc
mov
inc
adc
out
sbb
cli
inc
mov
stos
nop
and
ret
std
jle
mov
iret
lret
adc
fisttpl
mov
out
xchg
or
test
fdivl
arpl
imul
cmp
gs
jne
clc
or
dec
test
outsl
cwtl
movsb
xchg
inc
pop
lret
dec
jg
orb
adc
push
es
call
xor
fsubl
in
mov
xor
lock
fwait
pop
push
pushf
fisubrs
fs
test
push
mov
sub
dec
mov
mov
leave
mov
repz
addr16
dec
mov
push
scas
mov
jae
rolb
sti
mov
insb
scas
jbe
je
adc
fstl
xor
cwtl
jnp
pusha
or
arpl
insb
mov
jb
xchg
pushf
movsl
ja
jg
jns
ds
push
stos
dec
jmp
add
sti
mov
nop
jnp
mov
push
pop
dec
ljmp
mov
popa
cwtl
cmc
xchg
out
adc
pop
mov
ffree
xor
cmc
out
or
mov
mov
js
movsb
sub
loop
xor
inc
popf
in
out
lea
addr16
xor
movsl
leave
pop
pop
mov
shlb
jle
lea
sbb
movsl
popf
in
cmp
subb
jno
cltd
jbe
sub
insl
aaa
dec
jg
jle
jg
jnp
fwait
pushf
popf
xchg
xlat
inc
enter
jl
iret
push
cld
daa
out
jbe
jb
push
xchg
or
test
jae
lods
out
test
jp
imul
mov
inc
or
add
mov
mov
sub
add
dec
subb
sub
jp
and
mov
add
pop
dec
dec
cmc
test
daa
jb
icebp
std
xor
out
mov
xor
das
xchg
sarb
stos
mov
adc
mov
mov
and
or
mov
inc
dec
dec
nop
jns
dec
mov
stos
cmp
mov
jno
inc
stc
push
xchg
add
test
popf
mov
or
xor
xchg
inc
adc
add
outsl
cmp
mov
sub
cmp
add
push
call
int3
or
cmpsl
inc
repnz
inc
mov
sub
xor
lds
popa
je
dec
sub
call
dec
cmp
es
mov
sbb
add
arpl
mov
outsl
clc
fistpl
sbb
shlb
push
sub
fnstcw
jp
dec
jecxz
mov
xor
fcompl
dec
jns
nop
pcmpeqd
jp
lds
xor
clc
dec
out
outsl
mov
popa
mov
insl
mov
pop
mov
mov
mov
out
or
arpl
lret
xor
out
mov
test
stos
add
jg
adc
les
cld
sub
fsubs
insb
popf
xlat
inc
bound
in
out
jp
mov
enter
dec
ficoms
out
test
cmp
sub
pop
jecxz
out
xor
xorl
xor
aas
mov
cltd
add
fs
mov
jg
dec
icebp
test
pop
daa
mov
xchg
popf
or
mov
push
xor
pop
mov
in
and
push
test
push
mov
insb
cmpsl
push
pop
lock
or
dec
lret
fdivr
das
fisttps
cmpsb
fsub
cmp
push
push
stos
mov
pop
mov
lcall
adc
xchg
movsb
jmp
push
jmp
pop
adc
repz
mov
in
jmp
fldcw
xchg
pop
cmp
adc
push
hlt
jecxz
aas
mov
xchg
xchg
ret
inc
and
jle
jecxz
mov
stos
push
and
mov
pop
xchg
xchg
adc
dec
ficomps
nop
aaa
jp
movsb
or
fs
sbb
lret
aad
push
inc
and
imul
and
into
jl
xchg
out
jnp
mov
idivl
dec
cmp
xor
sar
fdivs
test
leave
add
dec
push
push
push
inc
nop
and
in
xchg
mov
outsl
sub
lret
popf
out
jmp
rcrl
pop
xchg
aas
pop
push
mov
fs
js
jmp
int
mov
add
pop
xchg
test
or
xchg
mov
imul
je
dec
rcl
repz
push
mov
ficompl
scas
hlt
cmp
cltd
sbb
jb
leave
and
aaa
outsl
jl
or
adc
loope
test
dec
xchg
or
mov
sti
or
rorb
out
gs
cli
cmp
adc
in
arpl
mov
loopne
mov
in
ja
pushf
lods
std
and
jg
out
sbb
movsb
jae
push
xor
out
into
push
push
or
cmpb
mov
ljmp
gs
ds
int3
mov
rcrl
leave
mov
jmp
dec
push
mov
shll
adc
aad
arpl
arpl
push
xor
inc
cld
insb
orb
sti
fdivs
cmp
mov
sub
pushl
mov
inc
jae
ss
push
fwait
push
fcomps
jne
mov
dec
dec
sub
pop
test
std
xchg
dec
lods
add
inc
mov
mov
and
mov
pushf
push
jmp
sti
mov
leave
xor
xchg
add
les
jp
add
das
mov
loope
mov
lahf
push
xchg
lods
lcall
cs
jl
cltd
push
jno
shl
out
and
nop
shrb
cmpsl
dec
inc
and
mov
dec
insl
cmpb
je
ljmp
xor
sbb
addl
das
sbb
mulb
jl
test
pusha
ret
shll
in
dec
or
inc
sbb
push
cmpl
adcb
insl
xchg
xchg
cmp
jae
imul
pop
fnstsw
sbb
xchg
inc
add
sub
or
sbbb
xchg
negb
sub
int
fadds
and
xor
dec
xor
pop
movsb
roll
mov
ret
push
pop
mov
mov
dec
jl
or
call
adc
inc
rcrb
mov
push
xchg
dec
in
pop
and
xchg
inc
and
loope
lcall
repz
push
add
xor
push
sub
jg
jle
dec
dec
ja
sar
int
lods
in
push
loopne
xor
aas
sbb
jo
inc
mov
mov
pop
movsl
popf
arpl
in
rep
inc
push
inc
xor
int
adc
lret
addr16
sub
stos
mov
aam
sarl
mov
adc
in
jnp
push
mov
movsl
cmp
adc
inc
test
adc
repz
nop
repz
jno
stc
dec
jne
dec
pop
adc
add
andb
les
push
pop
loopne
and
mov
das
or
add
movsb
sbb
mov
sbb
shll
testb
aaa
push
dec
loope
popf
sub
jae
sti
out
popa
arpl
sub
xor
lods
insb
fldl2t
xchg
stos
out
shl
dec
in
sti
inc
aas
xor
insl
in
mov
xor
xor
dec
mov
popf
lods
pop
shll
cmp
loopne
jb
mov
cmp
push
mov
sbb
fs
dec
mov
clc
fisttps
add
xor
cltd
mov
push
mov
mov
jb
cmp
and
mov
or
pop
cli
imul
outsb
addr16
pop
insb
dec
push
sub
add
push
sub
dec
mov
xchg
adc
leavew
push
out
pop
sub
cltd
int3
cmp
mov
mov
clc
addr16
pop
int3
scas
imul
sbb
fmul
jecxz
push
into
cltd
lret
jl
jae
jp
push
js
push
cmp
in
lcall
sarb
xor
std
out
push
cmp
mov
out
inc
mov
shll
js
outsb
leave
xchg
aas
mov
jle
xchg
push
cmp
xchg
fiaddl
mov
test
cmp
pop
jp
cwtl
lods
lcall
adc
sti
loope
xor
pop
push
scas
push
mov
jae
xchg
outsb
mov
xchg
jecxz
insb
cmpsb
xchg
jbe
fs
xchg
movsl
pop
js
es
mov
jecxz
mov
sbb
fsts
jb
sarb
mov
adc
sbb
into
mov
mov
inc
xor
and
inc
jnp
cwtl
pop
test
xchg
dec
mov
push
sub
movsb
in
jns
shl
outsl
loop
movsl
add
rorb
stos
aam
add
jg
add
dec
sbb
jg
lcall
pop
cmpsl
test
test
sarb
mov
xor
bound
xor
and
sbb
and
in
out
sub
inc
jge
jp
or
and
dec
push
gs
addl
fistps
push
jbe
sbb
addb
out
gs
xchg
arpl
push
cmp
mov
push
pop
and
popa
and
call
insl
push
sub
hlt
idivb
insb
adc
aas
jo
add
mov
mov
ja
femms
aas
adc
fdivrs
mov
add
hlt
add
or
idivb
loope
adc
in
jae
test
in
add
inc
test
clc
fcmovnbe
cmc
addb
test
add
push
and
std
in
lea
and
inc
xchg
cmp
iret
mov
mov
imul
mov
inc
jo
xchg
call
inc
stos
call
push
int
or
sti
xchg
repz
outsb
enter
sbbl
rol
lahf
fisubs
cli
mov
shl
sbb
out
in
js
mov
sub
dec
cld
outsb
daa
sahf
mov
dec
mov
sbb
sub
mov
cli
hlt
pop
cs
loop
lock
pusha
aad
stc
lods
cli
das
cmp
sub
mov
ss
lock
cmp
lret
adc
add
stos
mov
in
push
inc
notb
xor
xor
arpl
pop
xor
stc
lods
inc
adc
pop
lcall
push
rorl
xchg
pop
xchg
xor
mov
idivb
cld
mov
and
inc
lret
imul
shr
test
cmp
jle
bound
lods
lret
or
add
adcb
test
addr16
mov
clc
les
aas
fstpl
pop
mov
mov
js
sub
push
jecxz
and
xor
cmp
cli
test
pop
inc
leave
or
xchg
jno
ja
sub
jbe
push
subb
sub
dec
andb
pop
xchg
dec
popf
mov
add
rol
popf
and
pop
jne
popa
inc
loopne
mov
inc
mov
fs
cltd
icebp
into
clc
shr
mov
fwait
xor
pop
adc
or
cltd
mov
nop
xchg
mov
push
or
xchg
insb
sti
repz
sub
add
lret
pop
sub
shrl
iret
dec
arpl
jo
das
cmp
daa
mov
aas
test
pop
popa
or
imul
jns
test
xchg
out
adc
and
movsl
push
xchg
cmc
dec
adc
ds
mov
ror
dec
add
jb
push
pop
mov
and
sarb
cmpsb
mov
and
sub
mov
in
scas
xchg
adc
pop
cmpsl
ret
mov
test
pushf
mov
push
sub
stos
sub
cmc
notb
mov
js
gs
sub
incb
fimull
punpckhdq
cmp
sub
and
rorl
test
mov
imull
or
jns,pt
pop
ljmp
inc
push
jbe
sub
jg
cmc
movsb
cmp
cmp
loopne
out
jle
pop
pop
test
adc
ffreep
dec
adc
and
pushf
jbe
mov
mov
lock
mov
shrb
aad
cmp
adc
addr16
clc
aas
pop
fcomp
mov
lcall
fists
inc
incb
xor
in
test
cmp
sarl
add
movsb
je
scas
jg
cmp
lret
jae
movsl
outsl
or
fistpl
daa
mov
xchg
cmp
push
out
shll
aas
imul
ret
jbe
inc
jae
lret
mov
or
les
pop
cli
inc
aad
inc
stos
std
mov
repnz
dec
pop
shll
cmpsl
sub
popf
int3
andl
pop
mov
xorl
push
and
arpl
jbe
stos
fistl
enter
inc
and
nop/reserved
inc
or
pop
call
mov
bound
ficompl
pop
fidivl
nop
ret
andb
jge
cli
pop
sub
enter
icebp
pop
dec
lahf
xchg
addb
mov
scas
fcomi
or
sbb
frstor
push
dec
adc
dec
cltd
dec
sub
cmpl
sbb
repz
lods
ss
adc
sub
push
and
xchg
lock
sub
mov
lcall
iret
jb
xchg
jne
fisubl
push
cmp
out
mov
nop
clc
jle
sbb
sbb
clc
jns
xlat
stc
mov
mov
hlt
mov
push
lret
cltd
stos
lods
jae
out
xchg
mov
mov
inc
mov
dec
pop
icebp
dec
sbb
lock
xor
imul
mov
inc
repz
fidivs
mov
and
roll
mov
mov
jp
in
aad
sub
cmpsb
jns
add
jl
or
lock
mov
add
lods
mov
xor
out
mov
mov
pushf
repnz
pop
aad
imul
data16
adc
push
icebp
ffreep
mov
jns
cli
jae
sarb
stos
jns
ds
int3
jmp
movsb
pop
movsl
out
xchg
adc
ja
mov
aas
stos
xchg
adc
xor
imul
imul
fcoms
jae
xchg
pop
adc
add
lret
ljmp
push
mov
mov
dec
int
xor
addr16
mov
cs
lahf
outsb
lret
cmpl
lea
sbb
out
push
jge
leave
cs
jbe
in
sub
pop
out
xor
ret
clc
leave
out
lret
cltd
das
mov
aad
rorl
cmc
sahf
lds
lret
sbb
push
mulb
sub
jle
das
dec
loope
call
jae
pop
repz
and
push
pop
cmp
sub
cld
loop
rorl
jecxz
inc
paddsw
filds
shl
test
andl
arpl
outsb
or
fs
fisubrl
pop
cmpsl
out
adc
das
test
xor
shrb
add
jg
idivl
negb
cmp
rcrl
dec
lret
inc
push
pop
js
push
out
sbb
pushf
xchg
lods
ss
xor
xchg
jecxz
or
push
mov
loop
scas
cmpsl
imull
inc
negb
movsl
inc
push
dec
imul
lahf
pop
aam
adc
cli
adc
sub
xchg
and
in
mov
enter
ljmp
addb
andps
aas
xchg
push
mov
cs
popf
aad
gs
out
xchg
cld
pop
fsubr
decb
outsb
stos
das
mov
cmpsb
aaa
out
or
mov
push
jmp
lods
dec
ss
icebp
mov
outsb
mov
arpl
stos
mov
or
add
call
sahf
pop
stos
test
fimuls
push
sbb
imul
lods
or
add
sub
adc
push
pop
xchg
mov
pop
push
icebp
push
cltd
nop
or
jno
xorl
inc
scas
in
cmp
pop
xchg
cmp
add
icebp
lods
cmp
jno
mov
or
push
daa
mov
leave
cmp
lds
std
sbb
push
or
push
push
das
mov
sub
push
mov
and
lcall
pop
in
xchg
mov
cltd
subb
mov
xor
lret
inc
push
mov
mull
push
mov
loope
mov
movd
cmc
or
out
sbb
insb
sahf
sub
push
fwait
sub
jno
push
mov
mov
sub
cmc
scas
mov
push
out
clc
pop
aad
push
xor
mov
lret
mov
dec
xor
dec
jecxz
test
push
push
and
push
cmpsb
fldenv
pop
call
jp
lods
dec
sub
loopne
addl
lret
sub
ret
cmp
rol
mov
pop
inc
add
push
cs
mov
jnp
lahf
outsl
mov
add
or
push
sbb
js
orl
aaa
mov
mov
loope
or
mov
xor
test
adc
lods
les
bound
cld
repz
jg
xlat
add
bound
add
sahf
arpl
jno
scas
jo
cmp
cmp
or
mov
cmp
jne
xchg
push
inc
movsl
mov
scas
scas
daa
xchg
pushf
insl
adc
popf
xor
mov
push
sub
jle
cld
test
jne
out
mov
stc
cmp
push
sbb
rcl
gs
xor
push
xchg
xor
sbb
push
pop
fs
push
movsb
outsl
jle
cmpsb
inc
xchg
aam
push
cmp
jge
mov
fwait
movsb
lret
jns
dec
sub
mov
outsb
jle
sub
sbb
cli
xchg
icebp
movaps
push
ret
mov
imul
xchg
mov
ror
fnsave
push
push
hlt
in
test
dec
and
shll
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
jbe
scas
addl
test
lahf
push
dec
test
daa
mov
aaa
popf
jo
cmp
pop
xor
inc
cmp
push
into
daa
insb
aam
outsb
sbb
cs
pop
cli
fs
ja
dec
not
rorl
pop
gs
js
dec
dec
ljmp
data16
dec
dec
cmc
sub
in
push
iret
stos
addb
cmovl
sti
push
jnp
jb
insb
mov
mull
xchg
inc
jge
je
pop
enter
test
lods
jp
ja
jle,pn
test
add
aam
subl
pushf
insb
dec
insb
ja
cltd
add
iret
xor
fscale
fwait
bound
pop
dec
outsl
test
xor
lahf
cltd
push
addr16
je
dec
imul
add
iret
mov
xor
pop
mov
push
mov
mov
sbb
inc
jae
aam
test
das
inc
mov
scas
sub
imul
fimull
mov
mov
fcomi
or
xchg
loope
sahf
insb
lds
or
add
mov
and
data16
and
pop
je
pop
pop
or
mov
mov
jge
sahf
neg
mov
aaa
je
cmpsb
loopne
xchg
push
xchg
cmp
jecxz
jbe
repz
lahf
xor
test
icebp
pop
es
sub
lods
mov
sub
mov
rcrb
xor
jne
add
fcoms
jbe
pusha
sub
flds
inc
mov
cmp
sub
test
mov
out
mov
enter
sbb
push
ss
mov
repz
push
mov
mov
or
aas
hlt
add
mov
leave
sar
js
add
sub
push
mov
add
and
int
mov
adc
mov
adc
mov
mov
pop
lahf
mov
ja
jae
xor
scas
mov
jo
pop
mov
cs
mov
cmp
iret
push
mov
mov
mov
fwait
inc
int
mov
mov
nop
xor
sub
cmp
jbe
mov
jecxz
sbb
dec
test
jge
xor
xchg
push
dec
jo
fstps
push
mov
into
and
xlat
bound
push
jo
fsubrl
fnstcw
xor
in
push
aaa
push
mov
stos
fiadds
push
mov
arpl
dec
dec
out
mov
cmpsb
leave
stc
mov
into
inc
scas
push
popa
movsl
vcvttss2si
inc
ljmp
mov
mov
push
mov
or
rcrb
out
fldenv
fisubl
scas
or
cmp
xor
fistl
call
dec
movsb
jb
fwait
inc
mov
es
add
lods
mov
xchg
call
pop
addl
push
mov
add
xor
jecxz
add
or
cld
push
es
pop
subb
loope
ret
adc
mov
ret
push
subb
jnp
add
adc
xchg
jbe
add
out
xchg
lahf
adcl
add
popf
pop
shr
push
add
fdivr
aad
inc
cmp
jbe
repz
dec
pcmpgtb
pop
mov
cmp
cmp
shll
sahf
sub
subb
jl
test
adc
out
in
mov
xchg
dec
xlat
out
movsb
jne
push
jnp
mov
pop
lods
in
mov
push
pop
out
repnz
cmp
xchg
or
decb
mov
jmp
push
cs
inc
push
pop
cmp
sbb
stc
jo
mov
ret
mov
xlat
sub
cmp
xlat
in
or
sbbb
push
fsubrl
movsb
inc
scas
jbe
pusha
repnz
push
in
lock
xchg
dec
dec
push
mov
add
mov
ret
adc
lock
jp
les
fnstenv
pushf
add
enter
fisttps
push
xchg
in
fisubl
push
lret
cmp
pop
xchg
or
sub
mov
movsl
fmul
gs
add
inc
jo
inc
daa
jecxz
loop
aam
cmp
iret
cmp
xor
jmp
or
int3
push
adc
lods
in
sbb
add
push
lds
ret
repz
test
loop
shrb
mov
imul
test
fscale
or
mov
mov
in
pop
mov
add
xlat
xchg
xor
sarb
pop
jmp
shll
or
outsb
jg
xchg
lret
push
xadd
adc
out
push
xchg
mov
jl
roll
sbb
mov
fistpl
enter
dec
mov
daa
dec
ss
mov
enter
not
stos
inc
mov
push
rcl
and
cs
rcll
out
and
push
ljmp
sbb
jle
push
jecxz
andb
mov
mov
push
pop
lret
fisubl
push
xchg
sub
js
inc
cmp
in
adc
out
push
mov
pop
dec
shr
jbe
xchg
cwtl
std
xchg
and
lods
pop
ja
dec
xchg
xor
insl
jl
js
imul
sub
and
pop
in
sahf
mov
frstor
insb
lcall
imull
ret
lods
sbb
cmp
in
or
sub
pop
sar
push
push
mov
cmp
and
push
shrl
xor
xor
scas
jle
mov
push
xorl
icebp
jl
cmc
add
or
cmp
sbb
pop
jl
lret
xchg
push
xor
scas
pushf
push
xor
cwtl
dec
pop
icebp
push
jne
mov
call
jmp
mov
xor
jmp
dec
fcmovnbe
dec
pop
pop
stos
out
push
fmull
jnp
aam
add
inc
in
add
movsb
ds
sbb
sub
jo
mov
aas
stos
enter
mov
in
sub
dec
insl
ret
mulb
xor
hlt
fstps
outsb
mov
push
lret
dec
std
movsl
dec
mov
xor
outsl
addb
mov
or
out
sti
xor
das
mov
jo
adc
mov
loop
sub
test
jmp
jo
fildl
adc
mov
sarb
ret
aaa
mov
mov
in
xor
inc
shlb
lds
sbbl
sub
xlat
sbb
lcall
pop
sbb
pop
movsl
testb
fdivs
xchg
notl
scas
cwtl
js
fstpl
mov
xchg
arpl
inc
sbb
dec
adc
xlat
xchg
xchg
and
sub
into
out
ror
sti
and
rcr
jbe
add
sbb
add
or
lahf
pop
cmp
sub
add
mov
leave
fcmovnb
pop
inc
adc
push
and
or
push
hlt
icebp
and
loop
dec
dec
xor
xchg
ret
add
add
vhaddpd
adc
aas
dec
out
jmp
icebp
addr16
cli
data16
push
xor
cwtl
leave
das
gs
or
dec
test
nop
and
cltd
andb
out
ljmp
jo
and
pop
push
and
or
add
jns
gs
ljmp
xchg
mov
mov
xchg
lds
jmp
mov
ret
sub
cld
xor
addb
jmp
push
aaa
inc
addr16
nop
mov
cltd
in
cmp
inc
add
dec
push
xchg
in
test
loop
js
cld
outsb
in
inc
jae
lea
push
pop
popf
aas
testb
iret
sbb
sub
or
negb
cli
icebp
and
jecxz
in
hlt
pop
dec
mov
test
int
pusha
inc
fwait
sbb
mov
sub
ret
repz
cmpsl
outsl
scas
xchg
gs
stc
femms
pop
shr
fisubrl
and
xor
in
or
mov
pusha
mov
lods
dec
addl
xchg
cmp
sti
jle
aas
mov
in
ficompl
and
xchg
aad
mov
addb
sub
aaa
test
das
nop
stc
mov
repnz
leave
adc
adc
data16
aam
jo
jp
mull
shrb
repnz
xor
cmpsb
lea
popl
ss
xlat
dec
cmp
jnp
lea
mov
push
pop
mov
mov
jae
shrb
cmpsb
adcb
xor
jb
insb
out
test
test
andl
and
fs
repz
add
xchg
adc
pop
push
xchg
ret
aad
pop
test
testb
std
push
inc
cmpsb
or
sbb
inc
fidivrl
jecxz
inc
dec
ficoms
out
mov
inc
inc
das
iret
and
push
int
or
arpl
addr16
and
push
cwtl
inc
cmp
inc
faddl
mov
push
and
inc
lahf
ret
cmp
pop
pop
sub
or
mov
adc
shlb
stos
inc
adc
cmpsb
inc
pop
sub
lret
sub
mov
fistl
sub
xor
sbb
jno
movsl
dec
in
insl
xor
mov
jae
jmp
mov
scas
or
out
mov
pop
push
sarb
inc
push
ror
or
outsb
add
sub
pop
iret
shlb
pop
jne
add
cwtl
jmp
inc
pusha
sub
andb
or
xchg
movsl
fcomps
mov
bound
mov
xor
enter
dec
and
jo
test
mov
pop
pop
inc
movsb
xlat
sarl
mov
arpl
mov
xchg
pusha
jnp
call
movsb
imul
in
shll
lret
sbb
arpl
push
lods
inc
and
jbe
pop
out
pop
sub
xor
dec
mov
aam
cmc
push
ret
mov
inc
fnstcw
dec
mov
mov
add
sub
push
mov
add
pop
jns
inc
adc
xchg
fstpt
fs
or
adc
sbb
pop
jp
cld
inc
sub
jnp
jge
mov
or
mov
stc
repz
decl
iret
mov
pop
push
mov
gs
pushf
lods
pop
xor
cltd
pop
lcall
xor
inc
addr16
call
mov
push
mov
cwtl
xchg
xchg
inc
out
add
leave
nop
cmp
sbb
mov
add
in
adc
in
fnstenv
push
inc
lds
data16
push
push
cmpsb
das
nop
jb
adc
jb
test
adc
fcompl
and
ret
repz
mov
jle
ja
add
xchg
cmpsl
mov
dec
sub
push
inc
repz
lock
lock
add
fcompl
aam
push
popa
sbb
xor
xor
and
mov
loop
es
xor
fisubs
insb
fstl
icebp
ficoms
jmp
mov
shlb
jne
loop
cwtl
pop
adc
adcl
mov
and
mov
add
pop
cmpsb
cld
sbb
cmp
insl
iret
das
mov
sub
in
repz
push
pop
adc
cltd
mov
push
dec
movsl
mov
insb
out
stos
scas
nop
insb
push
rolb
xchg
xchg
pop
cmc
insb
pop
cli
dec
inc
cli
adc
jno
or
push
stos
cld
jbe
rcr
or
jbe
imul
test
stos
cmp
dec
cmpsl
inc
xrelease
popa
xor
lret
and
dec
jbe
or
mov
cwtl
adc
incl
jg
lcall
sbb
fadd
sbb
rol
cmp
jge
or
loopne
insl
pop
popa
xor
or
xchg
sub
in
jb
mov
aas
pop
lret
inc
jne
dec
sub
jnp
out
push
or
sub
dec
stc
or
in
add
pop
pop
les
dec
cmpsl
adc
out
sub
adc
xchg
cli
je
and
call
leave
push
ret
gs
iret
jle
gs
dec
lcall
fists
jae
mov
std
push
movsl
lahf
scas
xchg
push
jnp
lea
push
mov
fs
jl
js
pop
imul
dec
dec
lahf
lret
stos
add
inc
cltd
popa
sbb
adc
mov
push
push
xchg
nop
add
les
ds
mov
pop
jge
xor
jns
cmpsb
clc
adc
adc
xor
icebp
xor
icebp
aaa
shll
ja
ror
cmove
and
rcll
addl
nop
scas
mov
dec
rorl
pop
mov
scas
test
pop
push
arpl
lods
mov
scas
aam
cmp
pop
rorl
inc
sub
icebp
data16
scas
stos
clc
mov
adc
and
xor
mov
adc
and
pop
and
add
test
cmp
scas
les
div
mov
or
adc
pop
repz
stc
push
das
cmpl
jae
out
out
sbb
cmp
out
lcall
or
int3
jg
adc
test
sub
inc
push
xchg
cltd
test
pop
pop
sti
ss
push
cmc
lahf
xor
dec
pop
loop
lcall
dec
lea
xchg
and
sbb
mov
out
xor
xchg
js
sub
mov
xor
clc
aad
cmp
add
cltd
mov
ret
popf
mov
mov
push
cmp
insb
or
or
lock
idivl
cmp
fidivs
mov
adc
lcall
xchg
ds
in
mov
scas
push
out
and
sbb
dec
rorl
cmp
xor
mov
cmp
scas
and
xor
inc
pop
fwait
loope
xchg
orb
inc
push
out
mov
ja
dec
sbb
das
lds
sbb
xor
ret
adc
sub
jnp
int
jbe
dec
pusha
jecxz
jle
sbb
sbb
orb
sbb
push
ret
clc
mov
jns
ja
mov
mov
in
sub
loopne
mov
fmuls
sti
add
gs
and
idiv
jo
out
mov
cmp
sti
mov
stc
xchg
repz
xor
sub
mov
mov
push
jg
pop
pop
je
pop
mov
xchg
add
sbb
faddl
xchg
jg
shl
in
negb
frstor
mov
out
imul
adc
dec
lret
push
fwait
cs
adc
jnp
push
adc
imul
xchg
sub
sub
pop
cmpsl
mov
scas
xor
add
ret
and
loop
movsb
adc
mov
dec
mov
les
fistps
fsubrl
xorl
mov
inc
adc
sub
inc
sahf
xor
mov
sub
cmp
cltd
lods
dec
fs
xchg
cmp
in
push
xorb
lds
stos
add
sub
addl
add
inc
push
push
add
cmp
in
outsl
movsl
inc
dec
insl
js
jne
divl
xchg
popa
fs
int3
jmp
cmc
cmp
pop
add
add
or
push
jp
cmp
cli
out
inc
repnz
test
cmp
sbb
out
je
pop
shlb
stos
cmpsl
cmp
test
adc
mov
pop
arpl
and
adc
je
sahf
setae
clc
cmp
pop
sub
or
or
and
mov
andl
dec
mov
fdiv
sbb
faddl
fsubrp
loopne
cmpsl
das
out
stos
sbb
sbb
jmp
gs
cmp
decb
in
test
and
ret
es
mov
or
imul
pop
xchg
mov
sbb
and
inc
negl
inc
inc
xchg
rcll
sbb
call
sbb
adc
popa
arpl
rcl
mov
fsubrl
mov
jo
cmp
mov
and
pop
pop
stos
mov
push
sub
test
jmp
inc
daa
cmp
xor
cmpsb
xor
daa
xchg
sbb
sub
ficompl
jg
jl
test
inc
out
xor
mov
xor
sti
aam
sbb
cmpb
mov
lds
sbb
add
pop
mov
pusha
test
or
or
add
mov
inc
push
popl
mov
push
or
jb
cmp
jecxz
daa
aas
dec
and
xor
pop
cmp
sbb
mov
and
dec
imul
adc
and
jno
and
mov
mov
es
mov
mov
mov
dec
and
sub
push
aas
jge
loopnew
xchg
rol
dec
sbb
stos
fldcw
cmp
jle
sub
in
roll
je
mov
sbb
sbb
pusha
or
mov
roll
lahf
cld
push
lock
sub
into
shrl
and
pushl
fistps
es
sub
push
add
cwtl
jb
daa
fs
sub
test
xchg
scas
pop
ret
adc
pop
adc
cmp
ret
pop
imul
les
mov
aaa
inc
mov
cmp
imul
mov
mov
out
sub
lcall
add
out
pop
into
pop
cwtl
push
add
arpl
cmp
mov
or
ret
jle
fdivrl
jb
fildll
or
or
push
sti
and
outsb
mov
adc
lea
dec
popf
call
stc
repnz
push
mov
adc
jne
or
or
pop
mov
cmp
mov
mov
jge
int
and
or
mov
out
das
mov
jae
mov
xchg
xchg
outsb
mov
cmpsl
js
dec
shrl
cld
sub
pop
out
subb
daa
insb
test
cwtl
adc
filds
movsl
mov
das
add
xchg
sbb
fdivp
mov
inc
cmpsb
out
sub
and
mov
rcrl
std
ret
add
adc
cs
inc
xor
and
mov
push
mov
adc
je
pop
lret
sub
leave
cmp
ss
outsl
scas
insb
cmp
xchg
leave
and
jns
jns
jmp
into
pop
sub
mov
lret
mov
std
or
in
cmp
xor
or
rcr
dec
pop
fnstcw
sbb
add
and
cmp
ret
bound
xor
outsb
movsl
mov
out
rcl
cmp
xchg
jl
jg
push
add
mov
fidivl
cmp
push
into
push
cmp
pop
stc
sbb
lods
hlt
outsl
inc
jb
adc
mov
dec
ret
movsb
push
cmp
jo
outsb
jmp
jmp
push
xchg
jp
rorb
lret
lods
testb
cwtl
cmp
movsb
std
mov
pop
xor
rcl
mov
sar
mov
cmc
shl
ss
popf
inc
sub
mov
inc
rorl
sub
fidivrl
adc
xchg
lahf
lods
ljmp
lea
cld
add
ror
xchg
xor
xchg
push
dec
outsl
fmul
push
ss
jbe
fs
insb
push
pop
push
fmull
daa
xor
jo
sub
add
mov
iret
out
pushf
or
stos
in
adc
cwtl
mov
shr
sbb
mov
call
aad
cltd
out
faddl
jns
out
and
fwait
and
into
mov
leave
dec
sbb
mov
adc
inc
push
pop
movsl
mull
call
loopne
ja
rcr
ret
lcall
mov
xchg
jge
stos
jmp
mov
ret
xchg
mov
or
dec
sub
sbb
sub
out
clc
push
add
mov
sbb
push
push
push
add
sbb
dec
arpl
sub
and
cmp
je
popf
popl
rcr
mov
movsb
mov
cmp
clc
cmp
xor
dec
mov
sbb
xlat
jae
jmp
push
int
popa
sub
adc
mov
sarl
jle
out
push
ficompl
or
lods
ljmp
add
cmp
movsb
fbstp
mov
mov
bndldx
movsl
jmp
dec
nop
and
pop
xlat
cmpsl
stos
mov
scas
scas
inc
mov
add
je
in
rcr
in
movsl
aam
inc
xor
lods
lock
fsubrs
mov
pop
sub
jne
pop
jl
or
or
lods
das
sbb
sub
iret
mov
gs
in
fldt
jb
sub
sbb
add
pop
jg
xor
jecxz
sti
push
jl
cmp
cwtl
insb
fldcw
push
icebp
xchg
mov
pusha
add
xor
dec
mov
iret
mov
inc
scas
aad
sti
pop
sub
jo
repnz
sbb
mov
sbb
adcb
dec
mov
leave
lods
add
cmp
addr16
sbb
mov
ficomps
movsb
movsl
or
into
jb
lock
cmp
mov
pop
xabort
jl
rolb
loope
testl
aad
cwtl
in
mov
push
mov
mov
inc
sub
mov
lret
ret
lock
lcall
cmp
sbb
inc
and
cs
dec
cmpsb
add
pop
cmp
sub
dec
xchg
clc
mov
loop
pop
or
andb
jbe
in
push
adc
inc
mull
mov
pop
imul
lock
int3
push
cltd
inc
and
cmp
cmp
jp
inc
jae
xor
and
jb
sbb
out
jne
repnz
sar
clc
sub
dec
inc
push
mov
sbb
sarb
add
mov
lcall
mov
xchg
adc
jb
lahf
jo
fbstp
sub
dec
dec
in
jbe
roll
mov
pop
imul
push
fldl
sbb
out
addb
ja
adc
insb
and
jmp
fs
and
cs
lods
xor
popl
push
and
and
clc
inc
pop
repnz
xchg
pop
insb
or
sub
push
jo
push
cmp
jns
test
inc
arpl
add
mov
push
dec
mov
dec
sti
xor
loopne
add
cmpxchg
fidivl
sar
lea
mov
push
and
push
push
imul
adc
or
push
add
mov
sti
mov
in
and
cmpsb
and
sahf
jb
push
decb
leave
dec
js
aas
out
call
push
xchg
mov
adc
shlb
adc
mov
std
test
or
mov
push
cs
pop
cmp
in
dec
jge
push
outsl
popf
in
jmp
mov
push
dec
das
cmp
add
ja
shrb
pop
in
sbb
divb
pop
jno
scas
cs
jl
insl
cmpsb
ss
mov
and
and
lods
sub
sbb
aas
mov
and
adc
adc
imul
lret
dec
xchg
pushf
adc
cmpsb
leave
int
js
sbb
shll
inc
aam
sahf
int
mov
dec
aas
hlt
jg
push
shll
js
push
xor
jns
mov
fs
sub
inc
sub
sub
out
insb
cmc
cld
pop
sbb
push
jno
jp
jnp
in
addr16
push
adc
lahf
rorb
loopne
mov
stos
inc
popf
jge
cltd
cmp
adc
aam
jae
push
pop
std
rcrb
mov
pop
cltd
xchg
hlt
sub
mov
icebp
mov
jo
orb
out
ret
add
and
arpl
mov
and
decl
popf
mov
ss
pop
shll
sbb
fiadds
jne
sahf
arpl
aam
ret
dec
std
mov
jne
psrlq
sub
jae
mov
pushf
adc
jbe
or
xlat
insl
sub
lcall
mov
pop
sub
push
shlb
ret
in
inc
push
fwait
es
repz
sbb
mov
cmp
insb
inc
clc
jmp
or
cwtl
popf
jp
fisttps
xchg
fdivrp
and
pop
push
mov
loopne
add
insl
xor
xchg
icebp
pop
dec
sbb
xchg
push
enter
int
cmp
adc
mov
cmp
in
pop
pop
cmp
fbstp
cmp
bound
mov
xchg
sti
dec
pop
lahf
ljmp
fs
std
out
cmpsl
jle,pn
pop
mov
xchg
icebp
mov
and
inc
ds
push
or
mov
mov
lock
sub
shrl
bound
mov
shlb
mov
mov
cmp
jmp
push
rcll
out
and
cmp
jns
je
or
loop
xchg
dec
int
out
roll
loopne
sbb
push
push
test
dec
xchg
add
and
in
hlt
cli
leave
push
cmp
mov
mov
and
gs
rolb
out
lea
jb
shrb
or
push
fcmovu
jp
push
fiaddl
sbb
xor
dec
das
push
rorb
stos
aaa
insb
icebp
fstpt
rolb
or
inc
les
adc
fwait
cmp
jmp
inc
rclb
mov
lods
adc
andl
jge
fstpl
cmp
xlat
cmp
mov
fmuls
int3
rorl
stc
rcrl
mov
inc
pop
rorb
mov
outsb
lds
or
pop
je
or
push
dec
outsl
arpl
jae
xorl
outsl
dec
stc
and
lock
leave
scas
movsb
arpl
enter
sbb
lahf
inc
add
fs
mov
inc
or
inc
sub
jecxz
or
lcall
mov
inc
mov
ret
push
mov
cmp
stc
inc
add
add
cmp
or
pop
push
adc
sbb
xchg
push
and
fstpt
xor
aad
xchg
and
add
daa
movsb
sbb
clc
add
out
push
movsl
int3
in
out
clc
push
daa
pop
jl
mov
xchg
outsb
jo
push
arpl
pop
call
jmp
mov
mov
push
push
dec
jb
and
pop
dec
jg
les
push
inc
pop
stc
je
add
jmp
push
shlb
rcrb
sbb
roll
in
stos
movsb
test
sub
in
push
ss
mov
add
aaa
xchg
pusha
sub
sbb
jbe
mov
pop
pop
adc
outsb
inc
cli
push
dec
mov
cmp
adc
fildll
xor
jge
pop
mov
mov
lcall
inc
hlt
fists
movsl
jb
pop
inc
mov
lcall
add
call
push
pop
mov
sub
or
lock
dec
cmp
add
xchg
pop
mov
int3
lds
das
testb
pop
icebp
sub
adc
or
fs
nop
mov
out
xor
jp
mov
inc
in
and
push
or
xchg
cltd
sub
ljmp
bound
shlb
daa
cwtl
sub
cmp
insb
xchg
sbb
inc
adc
jns
mov
add
fwait
push
jge,pn
test
les
pop
xor
jo
add
add
test
pushf
imul
xchg
pop
int
cmp
push
dec
test
mov
in
out
std
xchg
movsl
sti
lods
imul
ror
pop
ljmp
push
and
push
jmp
fidivl
jns
xchg
lea
inc
in
mov
or
push
mov
aad
jge
fwait
idivl
push
inc
in
mov
jle
xchg
mov
xor
ret
lcall
pop
sbb
loopne
hlt
sti
rolb
mov
dec
cmpsb
add
shlb
sbb
dec
or
jle
mov
enter
cwtl
hlt
loop
pop
ret
sti
push
cmp
jb
jnp
ljmp
dec
stc
mov
lods
add
inc
cwtl
adc
std
in
repz
push
stos
mov
divb
mov
in
call
sahf
sbb
xchg
mov
and
outsl
dec
mov
sub
adc
repz
notb
out
mov
lcall
and
or
sub
mov
loopne
sub
fsts
pop
mov
sbb
movsl
test
jge
icebp
rorb
fcomps
into
adc
cs
and
test
bound
inc
push
pop
push
icebp
sbb
imul
int3
das
jb
sub
pop
fidivs
push
test
mov
sti
hlt
pushf
xchg
adc
loopne
dec
data16
xlat
or
add
mov
repnz
in
jbe
sub
lret
adc
push
sbb
int
fwait
loopne
fst
rcll
ret
dec
das
int
sub
dec
je
popa
sti
aam
aas
nop
jno
das
or
jae
in
adc
xor
cmpsb
les
sbb
mov
or
jmp
cmpsl
test
repnz
mov
data16
daa
mov
pop
gs
dec
push
sbb
fisubrs
outsb
aad
sbb
or
push
mov
test
in
out
stc
inc
dec
int
das
cmc
cmp
push
inc
iret
jge
scas
pop
es
mov
inc
int3
cwtl
rcll
movsl
sti
push
adc
jmp
and
in
jo
pop
sub
jg
xchg
fistpll
into
jno
cmp
pop
cmp
sub
mov
sbb
cmp
call
pop
cmp
jge
icebp
sti
lahf
scas
inc
mov
orl
in
or
or
add
push
mov
aaa
orl
stc
push
mov
popf
orl
sub
scas
pop
and
inc
out
jae
addl
sub
addr16
add
fnstenv
iret
test
inc
pop
nop
cmpl
and
mov
sbb
dec
xor
xchg
dec
call
rcl
or
fisubs
jne
addr16
sub
push
ud0
mov
xor
push
in
mov
sti
loope
in
xor
out
scas
xor
cmp
andb
pop
int
sub
mov
ret
pop
cmpsb
cmp
jae
sahf
pop
pop
enter
pop
cs
std
aaa
test
jae
mov
cmc
ljmp
jns
and
jp
and
cmpsb
mov
jle
ficompl
or
and
in
ljmp
fisubrs
xchg
pop
pop
adc
cmp
pop
mov
mov
int
das
sub
stos
adc
pop
aam
clc
pop
cli
or
jnp
adc
mov
mov
cli
roll
pop
xchg
lahf
bound
sti
mov
test
mov
sbb
xchg
sub
mov
pop
push
shlb
das
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
orl
cmp
aas
test
jmp
test
add
adc
mov
lods
movsl
push
popf
sbb
lahf
or
fcom
push
outsl
das
aam
xchg
fidivrl
out
or
mov
in
arpl
mov
repnz
xchg
lret
mov
scas
mov
test
gs
sbb
jns
sarb
xor
xchg
mov
fldcw
stos
jne
jns
ret
mov
jp
mov
mov
dec
inc
sbb
and
cmp
mov
sbb
or
out
sbb
and
aam
add
repz
call
insb
or
daa
pop
cmc
xchg
dec
dec
adc
xor
dec
pop
inc
jle
push
xchg
popa
dec
dec
popf
sub
push
out
test
push
cmc
sti
xor
cmp
stos
out
pop
push
das
mov
aaa
inc
add
in
jge
mov
out
or
or
add
pop
int
adc
out
xor
jecxz,pt
cmc
clc
cli
movsb
movsb
in
and
cmp
shll
dec
add
xchg
outsl
shl
test
popf
push
sar
bound
fimull
loop
cmpsb
push
lcall
cmp
cmp
sub
imul
movsb
movsb
xor
push
push
fisubs
adc
push
cmp
and
outsl
lcall
jle
xchg
add
sub
mov
mov
xor
mov
dec
mov
rcl
sbb
mov
dec
add
ret
negb
lods
out
mov
sub
fxch
lock
adc
mov
xchg
mov
or
inc
mov
fsts
cmpsb
pop
push
lret
jg
into
xchg
mov
repnz
ret
outsl
ret
mov
and
cmp
movsl
mov
or
shll
sub
test
cmpsl
cmp
and
jmp
jg
mov
push
mov
add
sub
add
ffreep
ja
mov
ja
faddl
int3
popa
sbb
sarl
jg
fnsave
scas
mov
push
pop
nop
filds
hlt
dec
into
inc
je
mov
cwtl
test
pop
cmp
add
cmp
subb
stos
ds
adc
push
mov
lcall
inc
pop
sub
or
push
jno
dec
or
test
stc
int
ljmp
gs
pop
xchg
jl
imul
pop
leave
inc
aam
in
mov
das
inc
cltd
pop
es
dec
pop
push
add
push
xorb
adc
push
imul
adc
sbb
cmp
push
add
pop
dec
icebp
aaa
cmpb
xchg
pop
mov
aam
fs
and
daa
js
les
mov
sub
mov
mov
xchg
hlt
enter
ja
negl
in
xchg
push
lea
les
add
mov
lods
ret
sbb
adc
lds
adc
jo
mov
adc
and
dec
fidivrl
lods
sbb
sbb
fisttps
inc
and
pushf
jge
rcrl
popa
jp
ret
push
pop
cmp
stc
xlat
lds
stos
in
rorb
nop
xchg
mov
fisubrs
ficomps
into
loopne
aaa
cmpb
sub
push
test
mov
nop
pop
lret
std
ljmp
loop
and
mov
es
ja
adcl
punpckhwd
sbb
xor
fcoms
or
mov
sub
mov
ret
mov
test
dec
test
inc
into
int
pop
aam
and
push
jae
pop
pop
inc
jne
push
push
loop
js
jl
fstl
stos
inc
fisttpl
out
mov
push
mov
aam
stc
jge
or
fidivrl
sarl
nop
and
rorl
mov
push
adc
cmpsb
aaa
aam
or
jno
pop
lea
sar
mov
add
push
pop
add
push
cmp
fcmovu
jbe
lahf
pop
sub
dec
lahf
mov
add
adc
push
pop
sarb
adc
jg
mov
rcrb
in
add
rcr
rcrb
call
lret
sub
mov
ljmp
jnp
pop
mov
xor
roll
or
in
and
loopne
cld
sti
stc
in
insb
popa
mov
orb
adcb
mov
pop
and
imul
test
pop
and
sub
xchg
outsb
loopne
pop
sbb
push
mov
lret
adc
shll
movsl
icebp
xor
xor
addr16
scas
mov
imul
pusha
sub
dec
sub
das
push
jo
lds
dec
cmpb
jae
xchg
mov
repz
jbe
xchg
out
xchg
ja
ret
jo
dec
jmp
and
lea
lcall
xor
out
cmp
mov
test
scas
add
dec
xchg
ss
pop
lds
sbb
xchg
and
enter
cmp
push
sbb
popf
jno
mov
push
jns
sub
daa
xchg
dec
out
or
mov
xor
push
call
inc
fnstcw
lods
push
in
aad
sbb
dec
fistpl
jge
mov
xchg
adc
in
or
cmp
and
ret
mov
das
lock
pop
dec
xchg
jnp
cld
negl
cmp
std
dec
sbb
adcl
sar
mov
and
ror
loopne
xchg
in
rclb
loop
mov
fldenv
mov
jg
insl
arpl
pusha
xchg
out
std
test
mov
push
push
mov
pop
ja
pusha
xchg
push
xchg
add
add
mov
xchg
pushf
clc
in
adc
sbb
movlhps
stos
inc
test
or
push
and
cltd
icebp
or
test
lods
adc
sub
popl
inc
fistpll
mov
scas
add
mov
ret
xchg
cmp
mov
fwait
xchg
lds
cmp
jp
cmpsl
sub
xor
sbb
pusha
add
mov
cmp
xorl
lret
pop
xchg
leave
mov
filds
add
pop
or
inc
nop
out
mov
and
push
inc
mov
push
cmpsl
inc
nop
pop
xor
and
xlat
pushf
addr16
imul
inc
insb
pop
sbb
mov
movsb
mov
xchg
cmp
cmpb
pop
mov
adc
mov
outsb
xchg
mov
das
int3
ret
sub
leave
mov
or
push
xchg
dec
push
adc
std
push
xor
sbb
jns
push
mov
fwait
cltd
jg
pop
mov
mov
push
sub
xlat
pop
testb
jge
sub
push
adc
addb
ljmp
cmc
ss
sub
aad
jbe
in
pushf
jge
data16
or
into
outsb
or
mov
mov
ja
lret
cmp
push
popf
pop
and
lret
pop
push
push
pop
out
mov
inc
adc
mov
test
sub
sbb
mov
in
pop
pop
mov
inc
dec
cld
dec
leave
inc
dec
jmp
push
rcrl
in
add
lods
cmc
cmp
lahf
sub
leave
cmp
aam
or
and
out
push
dec
test
push
mov
fcmovnbe
adcl
sbb
ficompl
stc
jns
flds
jno
pop
push
push
push
insb
je
xchg
or
imul
push
std
or
or
int
pop
stos
jno
push
imul
mov
psrad
cmp
js
mov
push
inc
das
aaa
ss
in
in
xchg
pushl
sub
das
mov
mov
cmc
shlb
dec
dec
andb
inc
jae
mov
test
arpl
sbb
adc
mov
idiv
fiaddl
push
pop
fs
fstp
pop
cs
cmp
aas
dec
xchg
push
aaa
or
in
jmp
mov
stos
push
incl
xlat
or
in
dec
add
mov
or
stos
clc
or
and
movsb
or
mov
mov
inc
fadd
jb
cmpb
xchg
lcall
xchg
xchg
addl
xchg
xorb
pop
fidivrl
out
sbbb
mov
test
sbb
icebp
add
pop
mov
mov
sub
inc
push
sbb
pop
xchg
out
inc
call
idivl
sub
jbe
or
scas
dec
sbb
push
cmp
sahf
enter
push
fwait
push
xchg
xchg
mov
test
fwait
mov
test
mov
cld
repnz
ret
sbb
pop
mov
movsl
popf
dec
xchg
dec
lea
inc
lcall
jp
rcrl
cmp
roll
jne
push
gs
repnz
jge
xchg
mov
push
in
in
jge
jp
mov
stc
xlat
jecxz
xchg
xchg
aam
sbb
stc
xchg
sbb
inc
sbb
rolb
add
inc
lock
dec
repnz
jmp
xor
xor
cwtl
in
popf
pop
flds
test
fimull
push
mov
or
mov
out
sbb
jg
cmp
lret
shrb
adc
imul
mov
out
enter
adc
lods
or
jp
sahf
fs
insl
xchg
mov
xor
ret
in
and
fistpll
dec
out
je
jmp
int
cwtl
lcall
subl
pop
rorl
shrb
repnz
in
cmp
push
adc
xchg
jl
cmpsb
mov
inc
push
mov
dec
dec
ljmp
mov
jmp
push
call
nop
mov
jns
jg
or
sbb
ljmp
inc
xchg
lret
pop
mov
sub
push
push
sarl
adc
push
jbe
and
cwtl
pusha
xlat
hlt
push
sub
xlat
adc
scas
adc
dec
mov
sbb
cmp
dec
mov
sub
repz
fcoml
test
stc
out
jb
scas
jns
fmuls
mov
scas
sub
roll
push
ret
mov
jne
je
addl
dec
pop
lods
test
in
orl
jl
outsl
add
cmc
jecxz
test
ficomps
shrl
sbb
imul
subl
push
pop
jo
cli
imul
aas
pop
adcb
ficomps
dec
lds
in
sahf
inc
lea
fcompl
push
das
jmp
mov
mov
fdivrl
dec
pop
fidivl
push
into
loopne
test
inc
insb
into
fsubr
pushf
aas
fisttps
inc
int
shll
int
xor
sub
or
and
xchg
dec
push
mov
mov
dec
ljmp
mov
inc
jge
cmp
cli
insl
push
scas
ja
sub
add
mov
fmuls
jae
mov
aaa
rcrl
cmp
xor
and
xlat
xchg
mov
mov
and
movsl
pavgb
subb
insb
mov
inc
bswap
mov
in
sti
inc
sti
repnz
mov
pop
mov
cmp
jo
pop
arpl
ret
inc
mov
mov
push
sbb
ror
cmp
and
dec
inc
test
rorl
inc
ss
push
jp
repz
out
or
fcomip
pop
lcall
pop
scas
pop
bound
cli
xchg
mov
je
mov
aad
jnp
mov
xchg
xchg
bound
and
dec
ss
push
push
mov
das
cmpsl
cmp
mov
mov
movsl
and
fildll
jns
fsub
dec
sbb
int3
jmp
sbb
mov
cs
sbb
or
adc
popl
mov
pop
mov
ja
cmp
out
dec
subl
leave
mov
je
outsl
lea
repnz
push
aam
adc
loopne
lds
jno
or
sbb
cwtl
scas
out
mov
cmp
lahf
aas
imul
inc
loope
mov
insl
xchg
xchg
mov
xchg
adc
fldt
orb
in
leave
sub
mov
jg
push
test
jae
mov
xchg
fisubs
aad
cwtl
mov
cli
popa
jae
inc
jno
or
out
mov
jecxz
fmull
jnp
shl
fldcw
repz
jecxz
mov
push
sub
mov
and
push
daa
fadd
sarb
gs
xchg
mov
mov
lock
sub
jo
push
roll
sub
push
repz
adc
sahf
or
call
push
into
xchg
add
dec
les
xchg
dec
mov
shll
push
inc
pop
mov
push
int3
push
inc
aaa
scas
roll
or
cmp
popf
lcall
inc
or
or
mov
and
mov
enter
jnp
subl
cmpsb
sub
xor
sti
jmp
or
dec
aam
bound
mov
and
mov
ret
dec
enter
iret
xchg
in
xor
loopne
sbb
test
bound
xchg
inc
mov
fcmovb
movsl
inc
pop
adc
sub
jnp
adc
fucomip
das
rcrl
add
inc
jp
je
pusha
lret
add
lret
aam
nop
imul
mov
or
popa
subl
jne
cmpsl
mov
data16
pop
inc
mov
mov
fs
xchg
shl
mov
pop
jb
mov
xor
add
insb
inc
leave
xor
stos
adc
jle
mov
cmpsb
jmp
sbb
out
int3
xchg
mov
or
int3
cmp
push
in
loope
jo
adc
sbb
adc
adc
sbb
aam
mov
es
xchg
add
pop
aam
jne
test
lds
std
dec
or
sahf
arpl
push
imul
jl
pop
sti
xchg
flds
cwtl
inc
jecxz
inc
imul
sti
mov
leave
xchg
mov
sbb
push
dec
mov
pop
dec
arpl
push
ret
outsb
inc
mov
shrb
adc
fisubrl
sub
nop
mov
sub
fwait
adc
push
gs
pop
push
jg
pop
jp
xchg
jbe
out
xor
movb
push
mov
out
iret
rcrb
fsubr
shlb
mov
dec
pop
sub
mov
inc
mov
mov
popf
outsb
outsb
sti
test
xchg
rol
adc
xchg
call
jmp
and
loope
test
aam
mov
jp
stc
aam
mov
mov
pop
xor
lds
xlat
inc
mov
pop
in
sub
pop
pop
roll
enter
inc
out
stc
fstps
xor
add
mov
stos
fnstenv
repnz
jecxz
mov
sub
xchg
popf
shlb
xor
or
pop
ret
ja
scas
pop
jg
out
sahf
into
fiadds
stc
cmp
out
rol
nop
cltd
mov
bound
dec
mov
ret
jle
mov
xchg
mov
cltd
stos
aad
movsl
pop
ja
mov
cmp
cmp
test
insl
adcb
cmp
fmull
pop
pop
lds
cmp
sti
in
loopne
push
fldcw
je
inc
pop
iret
and
shll
pop
subl
pop
dec
fwait
shlb
and
or
or
push
stos
idivl
adc
and
push
lods
repz
stos
or
ja
jmp
stos
mov
das
inc
mov
gs
inc
repnz
mov
add
jp
mov
lds
push
jecxz
shlb
into
mov
aad
xor
adc
add
or
push
out
in
call
jno
mov
xorb
addr16
mov
test
push
clc
cwtl
jnp
or
mov
dec
xorb
dec
pusha
cmp
repnz
cmp
xor
lea
std
loopne
decl
pop
and
sbb
aad
test
sub
xchg
inc
mov
pop
cmp
cmpsl
cmp
dec
mov
popf
test
cmp
sub
xchg
loopne
add
iret
jns
push
adc
clc
insb
jg
lret
add
and
jp
sbb
std
mov
pop
add
push
lret
add
mov
in
addl
xlat
pusha
mov
push
mulb
push
jge
xchg
xchg
mov
mov
fildl
or
jge
out
les
out
fsubrs
sti
cwtl
mov
lret
lahf
sub
adc
and
aad
andb
sbb
push
iret
iret
jmp
icebp
cmpsb
adc
sbb
enter
andl
je
ljmp
jle,pn
xchg
adc
jecxz
mov
gs
test
mov
mov
sub
pop
dec
mov
scas
leave
out
int3
cmovne
fisubrl
and
xor
adc
jo
pop
cld
xor
xchg
xchg
mov
test
and
cmp
adc
pop
inc
jne
mov
cli
xorl
mov
or
je
xorb
push
or
cmp
sub
jne
ljmp
packuswb
lret
jno
stos
lea
stos
xchg
push
dec
sbb
outsl
leave
inc
stos
adc
mov
imul
pop
xor
fwait
adc
jno
lods
push
pop
ja
pop
call
sbb
xlat
sbbl
inc
jle
mov
adc
xchg
xor
fs
push
pop
cmp
xor
les
sahf
mov
jnp
rcl
or
sub
mov
aaa
aas
adc
nop
jae
jns
sbb
pusha
dec
mov
aam
in
mov
je
or
pop
int3
jp
enter
inc
scas
mov
xchg
pop
or
aas
popa
mov
jns
data16
loopne
adc
xchg
dec
arpl
out
pop
out
pushf
dec
les
jle
pop
or
pop
sbb
test
sbb
stc
lcall
lods
pop
mov
movsb
xlat
iret
das
mov
dec
add
std
stc
pop
lret
scas
mov
push
mov
icebp
xor
jbe
pop
mov
cmp
xchg
mov
mov
shl
cmp
cltd
loope
push
add
gs
jnp
shl
sbb
sti
cld
xchg
aas
inc
jne
or
jp
lcall
insl
push
outsl
jo
push
hlt
ret
call
jo
jns
cmp
cmp
mov
cmp
mov
jmp
jb
xor
xchg
adc
mov
cmp
shlb
add
sbb
out
jns
into
pop
loope
push
in
lock
scas
push
adc
pop
mov
jnp
sahf
mov
nop
ss
pop
in
sbb
mov
addr16
jbe
xor
js
add
loope
xchg
cmpb
or
das
lahf
cmp
ds
pushf
fs
jo
add
mov
je
fdivl
add
mov
ret
add
outsl
hlt
nop
sbb
dec
pop
in
adc
lahf
es
daa
arpl
repnz
out
xor
or
mov
jg
mov
adc
inc
jne
dec
imul
scas
jl
daa
in
or
xor
dec
sarb
push
in
fs
stos
call
dec
lds
inc
loopne
mov
xchg
cmc
arpl
and
into
cs
daa
mov
add
cmpsl
stos
aad
shl
adc
sbb
call
cli
pushf
add
fnsave
lea
cmp
and
xor
ficomps
mov
add
xor
and
out
sub
cmpsl
pop
cwtl
xor
sahf
dec
pushf
push
test
shrb
fisttpl
sbb
jae
add
inc
out
sbb
push
jne
add
push
int
and
out
sub
lods
outsb
jmp
jb
mov
sti
jmp
rorb
add
std
out
imull
rorl
xchg
sahf
cmpsl
ja
cmp
out
mov
sub
jmp
mov
jns
loop
mov
fimuls
fwait
fs
mov
jge
imul
int
inc
cmp
lcall
clc
cmpb
push
mov
jne
xchg
pop
rcl
imul
sub
jo
inc
in
fcoml
repnz
adc
pop
mov
mov
adc
cmp
test
mov
mov
inc
sbb
xchg
ss
jo
sub
stos
fldt
test
jne
adc
add
xchg
js
movsl
or
jmp
scas
iret
and
cli
not
mov
jg
outsb
lret
or
or
dec
andl
xchg
std
test
sbb
push
jne
mov
xor
and
insb
xor
in
pop
addb
pop
xchg
fidivrl
jle
stc
push
xchg
xchg
push
out
push
pop
mov
data16
jb
ljmp
mov
popa
dec
dec
or
pusha
inc
cltd
sub
in
mov
scas
or
daa
adc
sub
inc
scas
jne
imul
xorl
cmp
fisttpl
sub
idiv
addr16
mov
inc
js
nop
xchg
cmpsl
mov
sub
lret
popf
ds
push
cmpsb
or
xchg
icebp
fists
shll
jo
xor
repnz
jbe
loopne
ja
push
dec
testl
push
test
cmp
mov
xor
aam
pop
sbb
mov
or
add
rcll
mov
xchg
push
mov
ljmp
push
mov
fsubl
in
push
mov
pop
int
jnp
push
xchg
push
add
hlt
repz
inc
push
xor
jmp
jo
mov
jb
inc
cld
scas
push
cwtl
shll
flds
dec
aad
shlb
mov
loope
lahf
push
cltd
in
ret
movsb
out
cmp
adc
jp
lret
fwait
inc
cwtl
pusha
xor
xor
xchg
lea
pushf
xchg
mov
dec
outsb
adc
ja
lahf
paddusw
adc
in
push
cld
adcb
dec
sti
fimuls
adcb
xor
mov
cs
sbb
push
data16
test
inc
inc
xor
inc
jp
fwait
dec
and
clc
mov
and
call
in
xchg
mov
sbb
repz
lods
xchg
shll
cmp
fs
mov
movsb
pop
icebp
pop
into
sub
mov
pushf
int
ljmp
adc
inc
xchg
mov
mov
lret
jp
xchg
cmp
sub
cmpsb
inc
out
es
fs
mov
push
xor
mov
jnp
inc
mov
sub
sbb
xor
orb
ljmp
sbb
ljmp
lods
ljmp
xor
int
or
into
pop
push
or
outsb
dec
dec
xor
xchg
rcrb
pop
mov
or
test
mov
pop
stc
repnz
stos
dec
lea
vmovdqu64
es
push
sub
inc
mov
das
inc
xchg
lea
es
jns
pop
xchg
mov
pop
adc
pushf
out
mov
arpl
or
bound
mov
jns
fcmove
pop
pop
sahf
outsl
ficompl
push
or
push
in
dec
mov
add
jnp
add
jecxz
aaa
jo
stos
cwtl
cmp
mov
popf
pushf
je
pop
dec
movsl
add
cwtl
jnp
fidivl
and
mov
movsl
stos
mov
imul
add
adc
push
xlat
cmpsb
mov
and
jno
nop
frstor
cmp
fcompl
xor
mov
xor
push
push
loop
jbe,pn
popa
pop
movsl
scas
jno
mov
jbe
lcall
cmc
and
push
sub
clc
lods
or
push
fisttpl
mov
add
xchg
movsl
les
mov
pop
icebp
and
sbb
mov
outsb
adc
mov
cmp
adc
imull
inc
or
aam
cs
fildl
mov
jne
aam
jge
cltd
jecxz
subl
jne
cmp
xor
pop
outsl
or
mov
adc
jns
dec
jnp
std
loope
aaa
outsl
cmp
stos
inc
stos
pop
or
call
jl
sbb
not
imul
adc
fcompl
xchg
out
jecxz
add
inc
sbb
test
mov
in
push
repz
jne
dec
sub
jno
mov
mov
ret
mov
xlat
das
fldenv
add
push
mov
fistps
jnp
cltd
nop
mov
push
jge
jb
sbb
xor
sub
jo
ret
mov
lock
pushf
outsl
push
test
xchg
add
push
pop
and
idivb
dec
rorb
lds
jne
jp
sahf
stos
add
ja
nop
pushl
push
iret
cwtl
in
pop
inc
roll
into
test
rorb
movl
inc
loop
adc
out
cltd
scas
xor
mov
rclb
mov
nop
mov
jecxz
mov
jnp
insl
mov
jmp
add
push
push
jns
push
and
fwait
mov
sub
cmc
mov
mov
pop
lds
lds
fnstcw
mov
mov
mov
fsubrs
sub
sbb
sti
rcrb
pop
xchg
sub
xor
push
jno
mov
mov
cltd
dec
xchg
mov
icebp
mov
lds
fnstcw
inc
xchg
push
cmpsb
or
into
sahf
pop
int3
jg
xchg
out
mov
out
cmp
das
cmpsb
rolb
aaa
out
xchg
movsb
xor
rorl
rep
cmp
jl
mov
fisttpl
mov
push
mov
out
mov
push
adc
out
popf
mov
repnz
sahf
dec
jnp
sahf
mov
push
test
pop
inc
sub
fcomps
xor
mov
pop
leave
sub
je
insb
iret
and
orb
shl
inc
push
lock
loopne
xchg
mov
into
stc
xchg
std
test
cli
scas
xchg
test
arpl
leave
xlat
xchg
in
std
sar
loopne
ja
cli
lret
je
pusha
add
and
ret
sbb
stos
imul
adc
out
sub
cmpsb
insb
cli
leave
in
sti
cmpsl
pushf
jb
inc
int
insl
jnp
mov
shl
movsb
xor
nop
jmp
jns
movsl
int3
jg
jne
faddp
fcmovne
mov
out
nop
add
pushf
daa
or
mov
xchg
mov
lds
xchg
and
pushf
fst
sbb
stos
ds
and
inc
out
or
xchg
fisubrl
sub
andl
sub
clc
mov
mov
jb
pop
push
xlat
and
movl
add
movb
push
outsb
mov
mov
and
add
pop
mov
fidivs
xor
lods
ja
call
adc
mov
dec
push
dec
out
ret
xchg
call
jge
ja
sub
mov
aas
dec
mov
push
adc
mov
int3
mov
fmul
bound
arpl
or
test
add
ret
hlt
xor
mov
xlat
loop
add
sbb
in
iret
cmpsl
cmpsb
jno
pop
inc
scas
int3
dec
adc
fwait
mov
cmpsb
cmpsl
pop
push
cmp
adc
jle
ja
mov
mov
inc
and
or
pop
in
cmp
sub
std
inc
fs
negl
insb
or
adc
mov
imul
adc
daa
fisttps
mov
cmp
mov
push
xor
cs
iret
sbb
repz
add
stos
int
fcoml
data16
addl
xchg
push
shrl
notb
scas
cmp
mov
loope
mov
lahf
mov
and
sar
in
push
cmpl
cmp
mov
lea
sbb
lret
push
mov
fwait
out
cli
lock
popa
mov
aad
bound
ret
pop
les
mov
or
and
and
jb
push
dec
xor
cmp
scas
sbb
call
lods
fstpt
outsb
xor
fnstcw
sahf
mov
je
insl
imul
xor
nop
mov
pop
out
sbb
fidivrs
cmc
dec
test
int3
dec
repnz
lcall
sti
out
dec
inc
mov
push
dec
xchg
ss
push
pop
xor
pop
xchg
in
pop
dec
add
insb
and
sub
mov
xor
sbb
add
dec
in
ljmp
sub
enter
inc
mov
daa
arpl
hlt
gs
sub
add
mov
adc
int3
sub
test
andb
aad
xor
rcrb
mov
sub
pop
daa
psadbw
xor
nop
repz
icebp
push
inc
mov
test
imul
data16
test
stos
fidivs
sub
lret
adc
mov
mov
aam
ljmp
adc
cmp
mov
push
jle
jge
xchg
adc
mov
sahf
mov
aas
les
adc
aam
cmp
sub
jmp
mov
in
ret
and
sbb
leave
add
sub
fadd
add
dec
std
sbb
fcompl
jnp
leave
sbb
bound
popf
jnp
cli
jbe
mov
rcr
mov
rolb
addr16
out
xor
push
loope
popf
and
stos
stos
hlt
cmp
sbb
sbb
stos
enter
push
adc
and
stc
jns
orl
test
cmp
sti
fistl
push
stos
pusha
push
mov
pushf
mov
sbb
inc
sahf
adc
push
pop
fbstp
inc
jb
inc
in
xchg
aaa
sub
and
pop
adc
lods
pop
xlat
inc
mov
sbb
int
jg
pop
loopne
je
jae
mov
pop
sbb
lcall
ret
mov
ljmp
stos
int3
sti
mov
loope
leave
cmc
mov
xchg
fs
jp
sbb
pop
mov
and
dec
xchg
es
mov
sti
mov
lock
pop
push
das
mov
xor
shrl
xchg
into
dec
jo
push
xor
jmp
jge
sbb
icebp
dec
xabort
out
jmp
outsl
mov
mov
inc
sub
xlat
adc
in
in
test
nop
xor
mov
push
push
xlat
pop
cmp
sahf
rclb
sub
or
call
cmpl
xchg
movsb
cmpsl
dec
pusha
ret
push
std
out
mov
cli
shrd
lret
inc
out
inc
pop
loopne
sbb
add
insl
fisttps
mov
xchg
adc
in
adc
cmp
or
dec
jge
and
dec
cld
mov
jecxz
add
mov
push
inc
std
loope
adc
pushf
cmp
addb
mov
es
sbb
movsl
out
stc
mov
pop
mov
inc
pop
dec
inc
jo
orb
ret
js
into
push
cmp
pop
inc
fidivl
sarl
ljmp
jne
in
xchg
mov
lock
dec
mov
imul
insl
sub
or
or
jmp
pop
or
int
mov
lock
add
xchg
jg
inc
lcall
cmp
cli
jmp
and
les
ret
mov
pop
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
jge
cmp
pop
pop
addl
sub
cwtl
dec
outsl
dec
push
jns
and
inc
and
sahf
scas
nop
js
push
lahf
inc
ljmp
inc
push
pop
mov
xor
pushf
pop
outsl
stos
fidivrl
adc
repnz
mov
push
jns
jecxz
xchg
cmpsl
mov
or
cmp
pushf
into
cmpl
inc
in
insl
cmp
rorb
cs
jle
fsubrp
orb
pop
out
lock
movsl
pop
mov
dec
xor
popf
adc
mov
ret
rcll
fldenv
das
mov
cld
in
pop
decb
jge
lret
jb
jo
xchg
xchg
cmpl
repz
jge
ja
sub
scas
xchg
scas
dec
xchg
rolb
dec
add
stos
daa
push
loope
cmp
jle
jl
jns
cmc
shrb
cmp
mov
movb
daa
add
pop
out
sbb
std
bound
inc
popl
push
xor
out
push
aaa
outsl
iret
mov
imul
iret
mov
add
cli
ret
pop
loopne
loop
movsl
out
sbb
imul
mov
jnp
push
or
rep
sub
push
shlb
fiaddl
popa
lret
lahf
pusha
sub
movsb
mov
pop
bound
sub
repnz
stos
jns
mov
mov
test
and
mov
mov
dec
xchg
and
jg
std
add
lock
xchg
mov
sbb
mul
jmp
mov
data16
sbb
in
jp
repnz
jbe
enter
stos
inc
lods
mov
sahf
dec
jecxz
mov
inc
cmp
pop
cmp
push
movsb
ljmp
inc
xchg
cmpb
mov
pop
push
add
sbb
repnz
movsbl
mov
jno
call
stos
sub
push
mov
cmp
dec
daa
xor
mov
mov
jmp
jno
mov
xor
push
sbb
shlb
mov
push
mov
xchg
pop
jnp
lcall
test
movsl
pushf
mov
lods
icebp
ljmp
jle
fsubr
cmpb
stos
adc
add
and
add
jbe
das
xchg
dec
out
cmp
ret
in
cld
inc
pusha
sbb
sbb
inc
sahf
cmpsb
mov
clc
push
push
xor
pop
add
ror
xor
imul
and
jl
cli
mov
sub
popa
mov
xor
cmpsb
xor
jno
lock
push
jnp
sbb
aaa
cmpsb
cmp
ret
rorl
fcmovb
mov
rcll
pop
scas
dec
sbb
pop
repnz
loope
cmpsl
pop
pop
sbb
loopne
adc
imul
jp
daa
roll
fmul
sarb
mov
cmc
lock
cmp
pop
push
mov
adc
shrl
ja
lea
fsubs
hlt
dec
push
incl
xchg
sbb
ds
cmp
push
mov
and
pop
imul
popf
pop
jle
inc
push
and
and
add
loopne
mov
cmpsb
popa
gs
pop
leave
fwait
xlat
or
mov
inc
jp
sbb
adc
repnz
insl
fcmovb
mov
jl
in
in
sbb
je
es
fwait
cmp
xor
int3
ja
inc
decl
and
pop
loop
iret
test
sub
pop
enter
in
inc
push
or
push
repnz
adc
sub
out
or
aad
mov
cmp
into
mov
ja
punpcklwd
mov
or
push
xchg
iret
push
jae
mov
mov
xor
cli
aas
xchg
movl
push
test
jns
push
aas
popa
cmp
mov
cmp
pop
or
cmpsl
ret
and
ja
and
lods
test
aas
fstpl
aas
mov
inc
xchg
into
xchg
dec
sbb
aas
daa
stos
lret
or
insb
push
sbb
pop
mov
loopne
cs
bound
pop
imul
sarb
push
push
negl
cmp
test
sbb
xor
xchg
test
mov
out
pop
inc
sub
push
lret
js
lea
in
push
push
inc
or
jl
push
adc
bound
jle
add
pop
xchg
xchg
rol
ffreep
aad
mov
test
mov
fwait
sarb
fdivrp
add
lret
loop
fs
jne
push
in
aad
outsb
lahf
and
aas
add
push
mulb
andl
cmp
pop
inc
or
push
jno
add
pop
lcall
jmp
lods
pop
pop
out
xor
sbb
push
addr16
xor
mov
popa
xor
je
xchg
sub
std
mov
imul
and
lahf
in
and
dec
stc
lods
lds
push
and
xchg
fistpll
fldenv
ja
add
nop
lea
les
faddl
fmuls
cmp
adc
pop
pop
pusha
stos
inc
cmp
and
add
sbb
ja
mov
jae
in
in
push
fmull
sub
add
shr
sub
in
mov
xchg
out
test
movsl
inc
xor
mov
sub
xor
in
sub
sahf
bound
adc
dec
stos
inc
imull
loopne
mov
inc
jmp
pop
mov
fwait
movsl
mov
pop
push
sub
sbb
jnp
aad
fwait
pushf
lret
sbb
cs
in
lods
mov
movsb
push
cmp
test
pop
cmp
and
dec
mov
scas
mov
adc
ror
fisubrs
stos
shl
pop
and
mov
sahf
add
movsb
dec
jmp
into
add
testl
pop
or
inc
stos
sub
sub
lods
daa
cmp
xchg
out
pop
xchg
jle
sarl
inc
inc
fld
jo
jb
xor
fcomps
lret
and
pop
or
add
mov
sub
out
cs
push
clc
inc
xor
aas
cmpsb
xchg
push
fisttps
outsl
inc
cmc
pop
mov
sub
pop
mov
and
jmp
inc
inc
add
jb
je
ja
inc
push
cmpsb
cmp
mov
repz
arpl
mov
loope
xor
int3
not
push
sbbb
es
push
push
loope
adc
insb
rcll
lods
mov
clc
inc
xchg
imul
out
sub
clc
cmp
fwait
repz
xor
push
sub
jne
adc
dec
stos
fstpl
insl
cmpsl
mov
stos
mov
fstpt
add
out
sbb
jge
pop
jmp
lret
inc
xchg
sub
xchg
or
push
sbb
sbb
add
mov
mov
ret
scas
adc
push
pusha
int3
sbb
cs
adc
sub
fincstp
mov
testl
sbb
mov
jno
lock
mov
add
nop
test
mov
push
je
leave
sub
stc
dec
or
cmp
test
add
mov
mov
jmp
dec
dec
push
jno
add
lods
clc
adc
leave
push
dec
insb
pushf
sbb
scas
and
jecxz
lods
pop
add
xor
lret
mov
xchg
jp
sbb
jge
dec
subl
mov
push
loope
jns
incb
rcrl
jnp
fdivrs
rclb
lcall
inc
std
inc
ret
in
addr16
ljmp
in
pop
jae
insl
xor
cmp
in
je
sub
or
shrd
xchg
imul
and
sub
cmp
out
dec
sub
jle
lock
popa
dec
dec
dec
pop
stos
test
push
mov
jmp
sbb
push
sub
jge
xchg
sbb
lahf
sar
cmpsb
ret
sub
mov
lcall
jne
les
jno
aad
fisubrs
arpl
nop
mov
mov
movsb
into
push
or
fwait
pop
repnz
dec
xlat
inc
les
iret
pop
rorb
jbe
bound
pop
imul
stos
push
jns
aad
cmc
xchg
sub
ja
mov
imul
popa
mov
das
stos
xor
mov
dec
lock
xchg
insl
xor
out
in
fidivs
mov
outsl
arpl
enter
adc
jb
out
outsl
in
cmpsl
mov
testl
movsl
xchg
aas
sbb
dec
sub
scas
lods
sub
push
mov
std
inc
loopne
cmc
loopne
jne
xchg
mov
pushf
and
dec
rcrl
cmp
repz
icebp
shll
fsubs
sub
pop
push
jecxz
xchg
pop
sbb
aaa
mov
mov
mov
mov
and
and
pop
test
fimuls
fstpl
scas
mov
dec
jl
rolb
cmpsb
mov
int3
fisttps
push
leave
xchg
fcompl
fcom
xchg
or
lea
cmp
shr
jae
ds
mov
jns
ljmp
mov
dec
imul
fldl
and
insl
roll
fsubl
sar
sbb
xor
shl
add
outsl
adc
sbb
xor
mov
xor
imul
negb
push
adc
mov
pop
in
xchg
cltd
test
or
jo
jns
aam
nop
std
daa
mov
add
mov
mov
jmp
add
add
iret
mov
cltd
jge
scas
xchg
aas
mov
neg
fildl
movsl
lcall
out
add
lods
inc
sbb
sub
mov
cltd
mov
js
rolb
xor
bound
ds
mov
push
jmp
xor
loopne
mov
mov
mov
outsl
push
xchg
mov
mov
or
mov
cmc
push
ss
ficompl
js
popa
daa
fbld
lahf
fnstcw
xor
addr16
cmc
sub
ss
mov
xor
and
loopne
andb
sahf
repnz
cmp
sti
xlat
stos
sub
pushf
lods
mov
xchg
lods
mov
clc
out
shr
mov
shl
and
inc
mov
daa
xchg
iret
les
pop
push
xor
cmp
push
and
std
int3
sub
out
inc
je
test
xor
bound
cmpl
enter
test
std
jmp
or
mov
imul
dec
sub
push
pop
inc
stos
sbb
ss
loopne
addr16
xchg
iret
ret
js
sahf
jp
xchg
icebp
adc
xor
aas
rorb
std
in
and
ret
adc
add
enter
rcl
movsb
xlat
push
push
push
fwait
and
pop
hlt
sbb
mov
and
mov
jns
pusha
jo
jo
xchg
pusha
test
repz
imul
cmp
xor
stos
into
dec
push
xor
xchg
xchg
into
aam
out
or
outsl
sti
dec
rcrl
or
test
je
fnstenv
jb
subl
lahf
rcrl
pop
jl
pop
xchg
xchg
lock
push
adc
fcmovnbe
je
es
push
pop
bound
lods
popa
ja
iret
push
insl
sti
push
dec
mov
xchg
cmp
in
push
push
mulb
fidivrs
add
or
push
pop
mov
mov
or
adc
mov
cwtl
cli
lret
and
gs
ja
and
sbb
mov
mov
pusha
jp
out
mov
adc
mov
ss
cmp
jae
mov
sti
imul
or
jmp
mov
mov
push
xor
mov
fs
xchg
and
out
mov
sbb
insl
jo
shlb
inc
mov
movl
adc
add
in
mov
xchg
mov
jle
andb
pop
fildll
in
or
pop
jecxz
insl
mov
or
cmp
dec
jecxz
in
sub
pop
xchg
jp
xor
test
fcoml
movsl
adc
mov
xchg
gs
adc
movsl
outsl
out
pop
fsubrs
mov
fisttpl
adc
int3
loop
mov
lret
mov
gs
mov
mov
mov
pop
sub
xchg
das
gs
stc
inc
stos
out
test
xor
stc
inc
idivb
pop
fst
aas
addl
pushf
imul
dec
pop
test
inc
iret
and
xor
imul
aam
cmp
push
movsb
and
sbb
aad
mov
aas
add
lret
es
scas
jge
daa
pop
cmc
xchg
divl
add
cltd
fcoml
repnz
fwait
out
bound
aaa
jne
dec
push
out
dec
cmp
mov
cmc
mov
movsb
aaa
idivb
rorb
sbb
out
cmp
iret
call
add
adc
cmc
cmp
jo
fimuls
imul
adc
pop
xor
inc
les
xchg
shl
movsb
inc
dec
fdivr
test
popfw
cmp
in
xor
mov
movsl
in
xchg
push
adc
and
sbb
in
in
jg
cmp
mov
dec
xor
sbb
sub
xchg
das
dec
fnstcw
sbb
xor
xchg
and
cltd
sub
inc
adc
in
repnz
iret
jo
iret
lret
pop
rcll
lds
add
into
test
jmp
inc
or
ja
pop
or
ljmp
or
outsl
mov
neg
sub
adc
popf
hlt
add
dec
fsubp
or
add
icebp
insb
subl
arpl
fimull
pop
pop
sbb
repnz
xor
popa
cmp
jno
sub
xor
cltd
les
adc
push
int
test
nop
mov
cmp
inc
test
jne
lods
js
cmpsl
movsb
les
add
test
mov
mov
andb
lds
fcomps
adc
test
xchg
add
mov
lods
xchg
pop
scas
stos
jb
aaa
imul
sbb
stos
aaa
jp
sub
enter
mov
lcall
imul
subl
push
mov
out
add
dec
test
int3
mov
ljmp
xchg
push
or
shll
pop
jns
into
mov
jmp
push
jno
or
int
sbb
repnz
lods
jne
in
xchg
lret
mov
or
pop
inc
sub
add
xchg
dec
ljmp
mov
movsb
cmp
dec
gs
gs
mov
pusha
fbstp
outsb
iret
imul
rclb
adc
mov
adc
into
or
dec
out
lock
push
pop
sbbb
scas
sub
push
xor
pusha
ds
add
inc
xor
mov
push
and
insl
mov
sar
xchg
xchg
pop
pop
dec
push
xchg
xchg
addr16
jl
add
sbb
inc
lret
lret
xor
loop
xorl
les
sub
enter
jns
xchg
push
lret
cmc
out
rcl
in
into
lock
and
ret
fwait
inc
cmp
sbb
and
sbb
jns
imul
lret
daa
cmp
stc
xor
outsl
fistpl
outsb
sub
lods
sub
xor
cld
xor
test
mov
mov
mov
sub
and
push
sub
loope
negl
mov
xor
ds
add
sub
jecxz
aad
inc
pop
int3
movsl
imul
xchg
sub
sbb
fistpl
mov
jbe
jg
or
push
xchg
outsl
adc
clc
ret
fs
loop
add
adc
imul
push
xlat
xchg
mov
pop
jmp
scas
adc
sub
sahf
lahf
movsl
mov
push
fsubrl
pop
repz
push
pop
add
sbbb
mov
mov
inc
push
insb
dec
and
add
scas
add
inc
subb
sti
sti
arpl
mov
out
cmp
in
daa
adc
lret
ss
rcrl
jp
jp
push
test
stos
aaa
add
cli
stc
or
xchg
push
std
push
scas
stos
push
push
mov
loop
push
pop
les
add
dec
jp
pop
mov
aaa
cld
push
sub
inc
jns
or
or
sti
cmc
push
ret
adc
arpl
ret
mov
mov
icebp
mov
in
xchg
addr16
sub
fs
fcmovnbe
pop
sbb
or
jmp
lret
push
into
daa
cltd
stos
sbb
mov
or
das
in
fs
movsb
xlat
or
in
mul
inc
jnp
insl
push
repnz
stc
cli
nop
mov
inc
cmp
fistpll
ror
inc
int
add
jb
mov
sub
sub
sbbb
jnp
pop
rclb
mov
inc
jns
mov
nop
sub
push
cmpsb
add
xlat
cltd
jle
insb
xchg
sbb
adc
sbb
xchg
lds
shlb
mov
nop
jns
jb
enter
xchg
mov
or
clc
das
ds
popa
outsb
stos
and
out
dec
push
add
and
mov
in
popf
xor
insl
dec
dec
push
jmp
adc
and
cs
pusha
push
addr16
and
mov
cltd
xor
dec
push
ds
sbb
mov
out
pop
xor
insl
or
leave
js
add
adc
inc
aad
sub
je
or
mov
cld
insl
adc
test
xlat
sub
pop
sti
roll
cwtl
push
scas
daa
das
int
or
jnp
arpl
in
jg
xchg
insb
mov
pop
shrl
push
dec
add
dec
int
dec
mov
and
push
ss
cli
js
xor
hlt
or
inc
fwait
iret
xor
and
xchg
push
stos
push
out
xchg
mov
leave
or
test
stc
test
mov
gs
or
hlt
or
aas
lods
mov
xchg
xchg
movsl
or
lods
add
leave
ja
fs
test
lods
jmp
mov
daa
pop
xchg
in
xchg
jae
add
sbb
es
add
or
jmp
sub
adc
loop
fwait
mov
shl
cwtl
xchg
imul
mov
ljmp
dec
ss
mov
popa
fdivl
lods
cmp
sbb
pushf
jmp
stos
mov
in
out
rcl
mov
xchg
mov
xchg
ret
int
xorl
fmull
fs
pop
xor
fsubrs
sub
mov
test
xor
in
test
pop
negl
imul
or
cli
mov
out
push
xchg
mov
mov
int
jnp
pop
aaa
inc
xor
mov
push
dec
sbb
cltd
std
jmp
xor
mov
xchg
pop
in
into
mov
les
mov
mov
xchg
adc
mov
sbb
add
into
cs
fsubrs
sub
pop
and
adc
jp
mov
js
movsb
inc
fwait
movsb
aam
cmp
cmc
cwtl
xlat
and
in
jmp
and
jle
repz
mov
inc
test
add
mov
ja
and
mov
insl
dec
rcll
pop
and
lahf
push
xor
pop
ret
sbb
push
xlat
nop
arpl
repz
jecxz
lahf
sub
pop
inc
js
inc
and
fs
or
jo
imul
rorl
into
mov
jns
nop
jo
push
mov
stc
jns
inc
jbe
sbbb
adc
and
aaa
pop
ds
mov
jne
push
xchg
xor
repnz
mov
insb
push
inc
adc
cmp
pop
sbb
aaa
test
rcll
inc
mov
push
sbb
std
or
cmp
jbe
mov
sub
push
and
and
adc
stc
scas
mov
stos
pop
iret
test
sub
fwait
in
push
mov
iret
mov
dec
cli
in
xor
fmulp
jecxz
sbb
ss
clc
cmp
mov
xchg
push
fwait
mov
xorl
imul
pop
lea
pop
out
push
mov
fistps
and
ret
push
push
pop
fisubrl
mov
shrl
adc
xor
adc
insl
xor
sub
xor
test
jp
dec
or
and
sti
mov
addr16
cmp
dec
inc
add
jl
cs
or
popa
mov
mov
cmp
in
iret
lods
imul
scas
pop
inc
loop
ja
jmp
rclb
lret
cwtl
jp
orb
inc
xor
test
lret
fimuls
pop
movsb
insb
aas
push
je
les
stos
xchg
inc
sub
outsl
jo
push
iret
xchg
sti
add
mov
inc
sbbb
out
in
sbb
add
lock
mov
ret
out
lds
add
inc
jl
leave
into
adc
xor
inc
dec
in
lods
inc
sti
jbe
mov
inc
pusha
add
jg
cmp
mov
popf
cs
xchg
jmp
mov
jae
sub
je
jge
fistpl
out
or
mov
lahf
inc
ja
cmpb
adc
std
fimull
xor
daa
stc
loopne
cwtl
fidivl
jb,pt
repz
paddq
jmp
ds
test
lret
scas
lds
cmp
test
fs
mov
sahf
pop
int3
xchg
or
movsb
hlt
xchg
jne
sub
adc
popf
jp
pop
sbb
mov
loop
jne
fwait
xor
jae
jecxz
push
pop
sub
mov
andb
clc
or
and
sahf
sub
aam
jl
mov
and
or
add
outsb
mov
xor
jbe
stos
mov
test
lahf
lcall
jecxz
mov
fistl
stos
push
inc
in
push
aam
sahf
es
out
loopne
divl
push
inc
sub
mov
cmp
mov
adc
and
call
pop
incb
rcrl
sub
cld
ja
into
xchg
mov
and
jne
xor
sbb
cmpsb
push
in
sti
movb
jp
jb
das
and
jb
mov
into
mov
test
mov
xchg
aas
pusha
bound
repnz
push
clc
add
sub
das
in
xor
push
jne
loop
jnp
imul
pop
push
aad
mov
lods
mov
mov
and
ret
push
adc
xchg
mov
and
and
mov
sub
sbbb
adc
pushf
adc
leave
sbb
sbb
push
mov
addl
mov
imul
movsb
mov
pop
mov
test
sub
lret
imul
dec
or
jns
xor
and
daa
mov
mov
xor
and
dec
decb
mov
fimull
lea
dec
sahf
nop
mov
adc
mov
sbb
mov
cmp
jae
push
std
lock
mov
jnp
and
cld
and
mov
into
mov
jecxz
jg
adc
add
push
sub
test
dec
add
pop
adc
jns
inc
mov
ss
jle
mov
loop
xor
test
push
and
mov
push
push
mov
sub
mov
sbb
cwtl
sahf
lock
mov
out
test
andl
push
sbb
aad
mov
js
xchg
xlat
pcmpgtb
popf
cld
es
and
pop
cmp
adc
repz
fldenv
ss
je
xchg
stos
scas
dec
fs
jb
outsb
pop
xor
xlat
leave
mov
dec
pop
and
aaa
lret
enter
fisubl
sub
inc
pop
loope
mov
mov
mov
aaa
mov
push
ja
gs
jg
ja
std
mov
cmp
pop
add
movhps
roll
xrelease
and
dec
and
mov
mov
push
sahf
mov
mov
push
inc
inc
or
loopne
sti
sbb
stos
loop
dec
jge
pop
ret
xchg
sbb
sub
test
hlt
pop
add
add
mov
mov
mov
testl
shl
imul
xchg
pop
dec
cmp
ret
dec
and
mov
subb
lods
fisttpl
lock
pusha
js
ret
jp
push
adc
xchg
stos
bound
jmp
sbb
fsubrp
pop
mov
lods
dec
pop
insl
jae
jecxz
pop
cmp
fs
jne
jg
cmpsb
push
jb
fnstsw
sbb
adc
pop
mov
sub
jmp
sbb
xor
sbbb
ret
cmp
imul
in
clc
aaa
and
ljmp
in
bound
jns
xor
arpl
lret
mov
adc
loopne
stos
movsl
push
outsb
jl
mov
mov
cmp
mov
jnp
jns
stos
cmpsb
shlb
lods
sbb
icebp
rolb
and
dec
popf
in
push
flds
jge
cs
cmp
sar
and
pop
outsl
call
add
frstor
out
fstps
mov
xor
xchg
stc
shl
lock
push
test
pop
xor
cmpsb
jns
std
std
arpl
les
movsb
pop
icebp
mov
adc
add
stos
jl
mov
cltd
ret
les
fs
add
mov
fsubs
or
cmpl
cmp
push
push
loop
pop
cmp
mov
out
adc
jb
mov
ljmp
mov
jns
jecxz
ret
or
lcall
push
rclb
xor
push
or
jp
xchg
jmp
pop
mov
cmp
data16
aas
jns
int3
cmp
mov
inc
cmp
es
fimuls
dec
xchg
rcll
sbb
pop
pop
jmp
sahf
cld
stos
sbb
jns
sbb
fldl
ss
sub
shrd
sahf
mov
dec
ja
add
xchg
jg
sub
fisubs
fisubrs
sub
adc
stc
fisubrs
inc
xor
iret
outsb
insl
int3
aam
xor
lahf
sub
sbb
lcall
jecxz
int
insl
into
push
xor
mov
test
add
test
in
test
cld
dec
cs
outsb
pop
je
outsl
mov
stos
and
insb
sbb
mov
fisubl
jmp
sahf
and
dec
incb
push
mov
adc
aaa
addr16
or
dec
inc
push
cmp
mov
repnz
mov
xchg
xchg
lock
or
cmpsb
jp
out
sbb
mov
pop
jge
add
push
roll
push
jae
inc
test
lock
pushf
cld
xor
xor
add
jnp
push
shrb
popf
div
dec
sti
pop
dec
inc
mov
xchg
sbb
out
mov
addl
adc
rolb
and
shlb
stc
push
push
pop
cs
or
cmpsl
mov
call
sbb
test
js
sbb
movsb
fimull
call
jae
adcb
push
push
inc
jl
stos
mov
jecxz
mov
aam
cmp
mov
js
mov
test
mov
cmp
lods
flds
or
or
incl
out
rclb
push
lahf
pop
xorl
mov
adc
cmp
movsl
shr
xor
leave
jge
and
mov
add
aas
push
jmp
add
xchg
mov
xor
ret
xor
pop
xchg
jne
pushf
adc
in
mov
inc
jae
mov
mull
pop
push
leave
jae
push
pop
mov
cmp
lea
mov
cmp
ret
sbb
xchg
test
insb
xor
imul
les
dec
int
xor
fistl
subl
outsl
and
jo
pop
pusha
sub
aam
xchg
ljmp
xlat
dec
imul
aam
sti
ja
mov
leave
rcrb
in
clc
cwtl
aas
adc
cmpb
xor
flds
mov
xchg
mov
popa
lahf
dec
es
push
jmp
mov
pusha
testl
movsl
es
add
ret
insl
xor
add
movsb
and
mov
in
sbb
decl
stc
mov
dec
lods
jg
mov
and
jne
ljmp
jmp
mov
cmp
mov
hlt
js
addr16
jb
mov
pop
leave
stc
test
inc
xchg
icebp
push
mov
or
ss
aaa
popf
cld
cmpsl
les
loope
sub
push
in
mov
int
cmp
sub
sub
lds
push
jl
cltd
dec
adc
jg
vmovdqu
repz
fsubrs
cmp
mov
add
dec
faddl
stos
push
xor
sarb
aad
sbb
or
xor
xchg
cwtl
xchg
cmpsb
xor
subb
adc
stos
sbb
sub
sbb
cld
int3
xlat
lret
mov
mov
inc
mov
push
test
cltd
add
pop
std
inc
inc
sbb
mov
dec
xor
movsb
insb
dec
push
mov
int
adc
sub
test
in
shrl
jo
cmp
sub
leave
dec
xor
rclb
iret
fcmove
aas
out
mov
jl
es
jmp
inc
mov
vmovdqu
imul
cmpsb
subl
mov
lods
sub
push
push
in
loope
pop
ret
dec
and
jnp
es
lds
scas
cmp
or
dec
rcll
push
negb
out
xchg
mov
mov
mov
and
ds
mov
je
adc
pop
fcompl
mov
sbb
loop
in
jl
dec
into
outsb
add
fcoml
sar
fadd
jp
iret
dec
mov
sub
push
cmp
rolb
rcr
das
loope
mov
dec
xor
out
nop
rolb
jmp
punpckhwd
mov
movsl
pop
adc
jbe
add
loop
outsl
gs
pop
fists
sbb
dec
nop
inc
jae
mov
add
daa
add
shll
mov
and
add
mov
xor
lods
adc
test
mov
xor
in
push
xor
inc
insl
mov
add
jge
lds
andl
lods
jle
mov
jl
cmp
xchg
addb
fxch
mov
dec
sahf
jecxz
adc
jno
dec
outsl
and
aad
dec
ret
jl
xor
xor
pop
cmpsb
mov
ficomps
and
andb
fisttps
dec
push
mov
cmp
out
lods
je
in
inc
pop
pusha
and
imul
mov
add
pop
out
mov
sbb
dec
mov
mov
std
sub
adc
addl
stos
int
hlt
pop
cld
push
pop
es
xchg
xor
sub
sub
jmp
adc
test
pop
mov
xchg
inc
addb
cmp
loopne
in
dec
in
es
jmp
or
mov
call
loopne
gs
mov
add
push
cmp
int3
add
dec
es
shr
add
adc
push
fnsave
imul
pop
cld
addl
stc
mov
push
jbe
add
or
scas
call
push
int3
cwtl
jmp
mov
jae
cmp
jl
xor
loope
pop
cmp
repnz
sub
mov
les
xor
js
jno
ds
mov
stos
push
mov
push
test
sub
pop
movsl
mov
sbb
js
fstpl
xor
sub
rclb
bound
aas
mov
sub
push
dec
inc
and
or
imul
dec
ffree
lret
testb
xchg
adcb
cmp
cwtl
aad
pop
gs
inc
xor
xor
lret
mov
iret
jp
loop
xchg
dec
mov
adc
sub
add
std
addl
inc
fistpl
push
stc
cmp
or
xchg
aaa
lods
sbb
adc
add
cli
jno
aam
xchg
add
sti
sub
jb
or
inc
adc
mov
in
adc
ljmp
xchg
jg
jo
pop
and
loopne
cmpsb
sub
sbb
adc
push
pop
cltd
pop
xchg
inc
inc
in
aad
lods
push
lods
push
mov
pop
mov
fimuls
addr16
cmpsb
adc
adc
stos
cmp
pop
stc
and
negb
cmc
dec
pushw
aas
iret
out
pop
sub
cmp
jg
jae
cmp
lds
sar
and
lea
je
hlt
pop
cmp
dec
data16
or
pop
popa
mov
stc
arpl
xchg
dec
ds
fcompl
pop
mov
outsl
sahf
arpl
mov
stos
xorl
add
neg
mov
cmpb
inc
mov
lods
pop
lret
dec
push
and
jae
sub
repnz
inc
test
sub
lods
inc
mull
sti
xor
sti
movsl
out
sub
std
bound
aad
iret
int
jbe
scas
cmc
push
in
fsubrp
decl
in
test
icebp
and
jle
int
add
stc
push
jmp
mov
jbe
sbb
lret
dec
sti
lea
xchg
jno
pop
mov
loop
cli
mov
mov
jbe
jmp
ret
dec
mov
sub
test
orl
xchg
jno
call
mov
imul
adc
lcall
sub
std
push
dec
ret
mov
loopne
movsb
cld
repnz
insl
adcb
jecxz
sbb
aam
jle
rclb
ja
dec
aaa
mov
iret
outsb
fsubl
cmp
inc
lods
push
cli
xor
jle
mov
pushf
adc
sbb
inc
inc
jno
and
je
movsb
aaa
dec
push
mov
out
call
adc
test
dec
push
loope
into
sub
adc
imul
push
cmpsl
mov
and
cwtl
out
pop
nop
push
sbb
pop
lret
outsl
adc
mov
in
lcall
aas
inc
mov
shll
dec
ret
jo
sti
adcb
int
adc
mov
lar
xor
adc
pop
or
test
cmp
push
pop
scas
or
and
or
pop
rol
xor
incl
dec
add
int3
or
jns
sub
aaa
add
pop
mov
in
xchg
jge
lds
jbe
iret
jae
addl
mov
sub
sub
push
rcr
add
movsb
xchg
push
into
sbb
out
popf
adc
into
inc
sbb
cmpsl
adc
mov
mov
popf
push
loope
push
jl
mov
or
test
popl
pop
loopne
cld
pop
xchg
fnstsw
cld
mov
or
movsl
inc
pop
jg
mov
inc
lcall
daa
adc
adc
repz
in
sub
pusha
push
xchg
cmp
mov
cli
fs
adc
xor
add
sub
nopl
xchg
xchg
cmp
mov
test
shll
adc
mov
push
stc
in
das
lahf
cmpsl
pop
cltd
push
pop
jo
cltd
or
hlt
mov
insl
sub
es
nop
lods
cli
cli
xchg
cltd
sbb
out
cmpsl
jge
fidivrl
mov
jne
push
xchg
into
sti
jmp
mov
nop
mov
test
jg
loopne
shll
lea
jb
fs
icebp
sub
mov
mov
xor
out
cli
push
clc
add
xchg
and
inc
enter
add
xchg
fptan
jnp
jge
adc
dec
loope
adc
mull
enter
pop
sti
incl
jge
mov
dec
cmp
dec
add
ss
ljmp
data16
fcomps
or
loop
or
out
sub
push
lock
jge
mov
dec
xchg
loop
inc
ja
aaa
mov
movsl
sbb
inc
cwtl
fdivs
adc
pop
adcl
and
mov
int3
orl
jae
clc
sahf
add
add
shrl
mov
in
ret
sbb
fildl
cli
out
dec
sbb
jge
or
add
add
std
xchg
data16
repnz
int3
xchg
aaa
sub
pop
mov
sub
mov
xchg
add
scas
dec
imul
rclb
shlb
in
mov
push
inc
pop
loope
loopne
xchg
ss
loopne
sbb
mov
mov
cmp
cli
outsb
mov
cmpsb
xchg
mov
lea
cs
sbb
ror
lret
mov
or
or
push
aaa
sub
ret
movsl
xor
xchg
leave
int
lret
push
cs
and
cli
int
fnstcw
mov
adc
jl
sbbl
test
rcrb
inc
sbb
sbb
xor
jp
movsl
and
icebp
sub
out
nop
imul
ret
jl
inc
fistpll
mov
adc
ret
sbb
mov
inc
push
shll
inc
lret
mov
sub
je
inc
aam
push
out
and
jecxz
inc
lsl
add
xchg
push
sbb
sbb
push
mov
cs
adc
sarl
aaa
pop
pop
call
jne
xchg
imul
fadds
orb
fdivs
mov
dec
pop
push
mov
mov
adc
test
jg
add
inc
cli
sub
or
inc
sbb
dec
data16
bound
xchg
add
xchg
ja
pop
dec
lock
outsl
ret
js
xor
idivl
lock
or
inc
mov
mov
mov
daa
cmp
inc
fnstenv
cmpsb
mov
push
aad
insb
add
lcall
xorl
push
data16
idivb
roll
pop
repz
aam
std
lcall
mov
jns
int
mov
sub
jns
fists
cmp
mov
call
pusha
fs
scas
lret
cmp
testl
cld
jge
sub
mov
and
mov
stc
mov
push
mov
pop
in
pop
mov
xor
adc
scas
jge
scas
sub
imul
cmp
bnd
cmp
xor
and
xchg
add
mov
mov
dec
lcall
js
popf
js
inc
ror
xor
sub
xor
stos
rol
dec
shrb
xor
or
jbe
or
push
cli
xchg
inc
outsb
cli
ljmp
sbb
pop
push
jbe
mov
out
pop
jp
mov
sub
repz
sub
push
sub
jno
xchg
mov
push
cwtl
dec
jmp
out
mov
cmpsl
cmp
lods
lods
sbb
std
and
inc
mov
incl
ret
fisubs
push
mov
mov
insb
pop
and
stos
out
push
rorl
jbe
cmp
pop
xor
mov
test
xorb
ds
js
fidivl
add
adc
pop
fidivs
cmpsl
subb
push
push
mov
lahf
ror
lahf
je
lods
das
add
mov
adc
jb
mov
cmpsb
and
push
cmpsb
leave
fildl
bound
and
mov
lods
mov
xchg
incl
cmpsb
jl
mov
pop
and
mov
lret
test
xor
xor
jns
pop
loope
cmp
mov
and
rcrb
rorl
sub
hlt
pop
mov
sub
mov
pop
pop
sbb
cli
jmp
jle
cltd
outsl
dec
fwait
nop
jge
sahf
xchg
sbb
shl
cmpsl
jae
dec
sahf
and
les
xchg
fbstp
xchg
push
stos
sub
sbb
adc
lods
and
es
jge
pop
cwtl
fcoml
push
or
mov
xchg
jmp
mov
cwtl
mov
or
jp
dec
mov
fsubrs
je
test
pop
ss
sub
mov
ret
cld
jmp
out
pop
xor
sbbl
sub
push
mov
mov
sub
aas
jecxz
arpl
into
mov
jmp
gs
outsb
mov
mov
sub
jb
pop
std
mov
scas
push
addr16
sub
mov
lret
pop
loopne
inc
testl
clc
pop
jnp
mov
fdivr
push
xchg
lahf
fsubrl
loopne
roll
xchg
add
pop
push
rorl
sub
mov
push
push
add
sbb
nop
inc
dec
or
adc
cmp
cmp
add
loopne
dec
push
mov
push
cmp
rcll
cmp
mov
sbb
mov
enter
mov
xchg
xor
test
xor
outsl
sti
lret
mov
xchg
jmp
test
pop
gs
cmpsb
jle
push
mov
cmp
push
cwtl
mov
xor
pushf
mov
xchg
aaa
inc
mov
mov
mov
mov
lret
out
pop
xor
mov
add
fisubrs
push
push
xlat
movsl
jno
icebp
lcall
cli
mov
test
xchg
loop
xor
sub
repz
push
jno
add
popf
mov
icebp
outsl
loope
mov
dec
and
les
inc
out
mov
dec
repnz
jno
test
iret
in
and
roll
xor
jg
loop
mov
mov
push
pop
push
xchg
jns
lret
jb
stos
sub
inc
test
in
mov
jno
std
icebp
and
imul
mov
inc
add
lahf
mov
push
cmp
repz
fildll
or
jge
dec
and
jns
xchg
mov
lret
fbstp
mov
dec
push
lahf
lahf
std
dec
xchg
cmpsb
mov
xchg
les
or
or
rolb
jnp
inc
add
es
jne
fldcw
dec
or
sbb
fwait
shrl
adc
lds
push
dec
std
xorb
fldl
inc
sbb
or
mov
repz
xchg
lret
outsl
and
xchg
outsl
mov
cmp
mov
xchg
xchg
sbb
xchg
scas
out
lock
push
inc
jno
mov
lret
cld
pop
fbstp
mov
arpl
das
int3
jnp
dec
or
xchg
int3
xchg
ret
sub
sub
sbb
sub
gs
inc
dec
xlat
adc
dec
push
mov
jbe
mov
pop
add
mov
lret
sbb
cmp
sti
sahf
xchg
shlb
sub
jge
adc
and
outsl
je
scas
scas
mov
add
dec
shlb
inc
mov
xor
adc
cmpsb
pop
mov
in
dec
cltd
call
adc
fsubrl
jg
repnz
fwait
in
or
pusha
inc
repz
not
sub
xlat
fwait
sub
mov
push
in
cmp
addr16
adc
iret
xchg
xchg
xor
and
sub
inc
shr
ss
mov
iret
mov
in
sbb
sub
or
add
out
jno
outsb
jecxz
push
dec
xor
mov
sbb
sbb
cmpsl
loope
mov
pop
lea
aad
pusha
cld
jne
jo
and
inc
sub
inc
jp
stc
dec
std
insl
inc
mov
inc
mov
das
nop
xor
gs
lahf
mov
lahf
add
dec
push
push
adc
sbb
push
leave
fldcw
mov
mov
imul
mov
inc
shl
mov
mov
aaa
aad
push
xchg
adc
xchg
xchg
inc
xchg
rol
inc
mov
lds
das
gs
stos
jne
and
adc
imul
imul
or
add
jg
data16
mov
in
mov
pushf
mov
out
popf
outsl
mov
pop
dec
fwait
xchg
dec
inc
clc
inc
and
add
mov
add
push
lock
jnp
icebp
cmp
push
jmp
roll
fisubs
test
aas
inc
inc
fsubl
adc
rcrl
or
das
test
sub
dec
inc
rol
rcr
fmuls
vpandn
sub
push
xor
mov
mov
in
jmp
lds
je
mov
js
enter
int3
sbb
xchg
or
mov
js
push
ja
stos
aam
mov
mov
lcall
je
lahf
xor
leave
jmp
int3
lcall
push
pop
cmpsb
push
sbb
int
fdiv
movsb
jnp
in
add
cmpsl
jle
jns
fisubrl
add
mulb
into
cmp
out
inc
rorb
shll
arpl
sbbb
daa
adc
iret
xor
jns
fmuls
ljmp
fs
aad
dec
push
mov
ret
in
out
add
and
xor
enter
lahf
jl
adc
mov
and
cltd
jmp
inc
xor
jb
xor
sbb
push
inc
jecxz
pusha
mov
dec
mov
imul
jge
lahf
inc
test
and
repz
ljmp
roll
sbb
pop
add
aad
or
add
arpl
shlb
or
mov
arpl
and
shlb
push
inc
mov
mov
inc
mov
fcmovne
xchg
cmpsl
clc
mov
xchg
shll
adc
sbb
cmpsl
stc
jg
mov
xchg
mov
adc
jg
lcall
popf
lret
mov
lcall
mov
lock
insl
imul
fimuls
cmp
sub
adc
mov
scas
inc
add
lods
inc
push
fistpll
ret
mov
ret
ret
fst
daa
push
lcall
jno
jae
mov
popf
xchg
xchg
inc
inc
mov
jae
sbb
repnz
mov
fdivs
shl
sbb
push
adc
call
or
mov
out
inc
pop
cmpsb
addl
cmpsb
stos
or
cmp
sti
and
lds
mov
pop
cmp
popa
popl
lcall
hlt
xchg
jae
add
subb
sub
adcl
call
js
lahf
jo
push
into
jno
loope
out
scas
ret
xchg
sbb
xor
pop
std
add
inc
and
xor
xchg
stc
mov
adc
je
cmp
inc
sbbb
xchg
mov
inc
mov
fucomi
in
push
mov
jle
push
inc
sub
inc
or
nop
pop
cmpsl
xchg
scas
mov
lock
les
xchg
data16
sahf
popf
mov
fcomps
ret
cmp
int
test
pop
and
repz
ficompl
outsb
sbb
sub
subl
adc
mov
jp
inc
loopne
lret
rorb
xchg
inc
loope
jbe
lahf
push
jnp
xchg
cli
adc
aad
mov
lock
push
mov
int3
pop
and
mov
out
loope
and
div
adc
ret
and
ret
xlat
mov
inc
addr16
cmc
cmp
inc
jb
pop
pop
arpl
mov
popa
mov
push
aas
push
push
jne
xchg
jnp
cs
scas
adc
imul
xorb
jecxz
xor
fadd
mov
add
rcrl
rcrl
ljmp
adc
adc
lods
dec
mov
sub
outsb
scas
jp
dec
cmp
mov
sub
xchg
push
dec
subl
shr
add
fnstsw
int3
ss
ja
ret
divb
cmp
jo
mov
add
mov
sbb
cwtl
jbe
push
push
in
cmp
lcall
cmp
pop
into
pop
lea
cmp
fimull
int
adc
jg
lahf
mov
xchg
repnz
pop
mov
lods
dec
xchg
lock
push
pushf
jno
cmpsb
sbb
pop
pop
and
cmpsb
jle
icebp
popa
ljmp
mov
popf
orl
mov
push
pushf
out
mov
dec
mov
ds
loope
xchg
and
jle
cmp
ja
adc
cwtl
dec
dec
mov
push
jbe
adc
dec
push
push
in
daa
adc
out
adc
icebp
out
inc
fsub
cmp
push
int
in
repz
sub
cmp
or
xor
push
inc
es
add
shl
xor
xchg
scas
sub
xchg
lods
and
and
pop
pop
insb
pop
test
xor
push
repnz
aam
cmp
xchg
cmpsl
mov
mov
pop
outsl
sub
pop
call
enter
sub
adc
sbb
push
mov
sbb
fldt
sub
xchg
mov
or
xchg
rorb
mov
clc
jp
pop
decl
adcb
mov
mov
cmp
fstp
dec
xor
inc
jecxz
outsb
push
leave
mov
add
fwait
cmpsb
les
push
push
cmp
inc
fldl
pushf
xchg
jno
adc
stc
cmc
cmp
adc
jne
add
or
pop
jl
xor
xchg
inc
fsub
sub
jae
cli
mov
dec
jp
rol
add
js
fidivs
test
adc
scas
add
test
les
test
and
scas
in
sbb
out
int3
fadd
xlat
mov
into
cmc
mov
xor
adc
and
xchg
push
lret
stos
je
cmpb
mov
call
pop
in
bnd
fs
sub
inc
loopne
mov
cli
fistps
jecxz
mov
stc
pop
mov
stc
mov
push
and
lahf
stc
fildll
mov
or
cmpsb
or
fwait
ja
into
leave
xchg
and
pop
mov
xor
pop
inc
jo
imul
mov
dec
push
dec
and
sub
lcall
xor
xor
push
sti
inc
push
sub
inc
sti
sbb
clc
sahf
gs
int3
sbbb
dec
mov
gs
stos
lock
lret
sub
push
lret
fidivs
leave
pop
push
aaa
fnstsw
mov
mov
inc
mov
xlat
push
xchg
addr16
fidivrl
add
sahf
movsl
andl
pop
dec
pop
sarb
inc
jge
iret
mov
jo
int3
jecxz
xlat
and
adc
pop
xor
inc
lahf
stc
mov
hlt
mov
mov
dec
dec
adc
rcll
jnp
test
push
pop
adc
push
je
clc
sahf
das
les
lds
cmp
test
decl
xchg
sub
push
inc
testb
sahf
inc
je
hlt
cmp
insb
inc
rcl
fisttps
xchg
cmp
xor
ja
add
inc
cmpsl
push
test
in
inc
cs
xor
or
scas
mov
inc
or
loop
in
cli
ljmp
je
iret
cli
cmp
lfs
sbb
shrl
test
mov
fst
or
cmp
popa
rorl
pop
mov
fstl
movsl
out
xchg
jecxz
xor
clc
or
neg
lea
in
add
xor
out
sub
jnp
fstpl
pop
fildl
mov
daa
les
adc
lret
pop
nop
pop
scas
nop
fs
mov
stos
sub
mov
add
repz
and
movsb
lock
mov
adc
push
jp
mov
sar
mov
push
jecxz
std
out
mov
sbb
icebp
dec
lock
daa
dec
mov
cli
enter
enter
shrb
shrb
popa
scas
adc
test
daa
push
adc
cltd
sub
popa
es
popa
in
mov
scas
test
mov
lods
inc
and
and
into
ret
and
jns
in
lcall
nop
sbb
fistl
jns
mov
lcall
ffree
adc
lret
in
mov
push
jle
mulb
les
out
jae
dec
mov
push
inc
addr16
mov
pop
jo
mov
dec
pusha
hlt
add
add
insb
leave
sub
imul
dec
js
mov
pop
inc
cltd
xlat
ret
cmp
insl
fldt
test
out
out
pop
mov
in
mov
lea
rorl
push
movsl
pop
adc
iret
lret
sti
jb
daa
pop
inc
jg
sbbl
loopne
xor
scas
xchg
out
xchg
mov
outsb
jb
mov
add
scas
pop
xor
loope
mov
rclb
mov
mov
popa
sub
sub
sub
insb
and
icebp
orl
fstpt
cmp
pop
mov
inc
mov
and
dec
push
cmp
dec
and
xor
xor
cmp
fs
xor
xadd
and
pop
cmp
les
pop
sarl
and
loop
pop
sub
push
daa
out
xchg
xchg
or
adc
or
mov
shlb
mov
clc
test
ja
inc
cltd
mov
lret
or
xor
out
mov
cmp
clc
mov
call
push
mov
sub
shll
cmp
les
sub
daa
mov
mov
or
fs
pop
andl
jb
push
test
inc
aad
lods
push
sbb
call
add
push
xor
leave
adc
std
mov
cmp
inc
xchg
fmuls
jb
mov
xor
and
cmp
and
xchg
add
mov
jno
outsb
cwtl
mov
xchg
negb
pop
adc
out
outsl
mov
cmp
xchg
dec
sub
aaa
push
punpcklwd
xchg
inc
adc
aaa
dec
cmp
fdivl
or
cmpsb
rcrb
pop
repz
and
icebp
aaa
gs
popa
lret
push
add
in
mov
daa
jecxz
sbb
or
icebp
jmp
into
inc
jae
mov
clc
ret
or
sti
pusha
mov
in
ljmp
sub
mov
pop
mov
mov
sub
fcmove
mov
lcall
loopne
mov
adc
xor
mov
les
hlt
sarb
add
xor
imul
mov
fadds
jge
fst
xor
repnz
lds
sti
iret
or
inc
push
out
push
in
mov
daa
cmpl
dec
push
loop
push
inc
fimull
mov
mov
jnp
mov
adc
xor
pop
imul
jb
test
jnp
push
jle
xor
mov
jae
je
mov
xchg
cmp
loopne
add
push
jns
pusha
lock
mulb
cmp
call
aad
repnz
movsb
out
fstl
jg
in
gs
call
in
add
sbb
xchg
pop
mov
jle
iret
dec
addr16
in
daa
fcomps
popl
lcall
push
daa
pop
mov
mov
pusha
pop
adc
insb
ficompl
push
sub
push
insl
mov
shrl
push
and
mov
dec
push
pop
jp
lea
or
in
push
addb
jge
arpl
xchg
push
jge
push
mov
adc
mov
ja
lock
cwtl
pop
inc
xor
pop
xchg
mov
mov
imul
push
cmc
pushf
sbb
jnp
cmp
or
cmp
sub
les
xchg
cmovno
add
aaa
test
jno
out
sbb
sbb
or
js
mov
in
pop
fldcw
push
cmp
js
xchg
test
inc
lea
xor
push
mov
add
clc
dec
fdivrl
mov
cmp
push
adc
fmull
push
int3
arpl
adc
xor
shl
fdivrp
or
mov
or
stc
xor
fwait
or
test
lds
rcl
xchg
or
cld
call
imul
arpl
loop
push
mov
scas
and
cmp
test
push
add
jecxz
jno
dec
mov
and
push
xchg
mov
jae
out
ror
inc
lods
loope
leave
fistpl
add
pop
xrelease
mov
inc
arpl
imul
clc
dec
add
push
push
inc
leave
movsl
push
jns
into
sub
insb
repnz
into
or
or
push
jle
jbe
out
pop
out
jecxz
outsl
shrb
and
cld
adc
scas
shrb
mov
int
not
mov
inc
xchg
mov
nop
es
mov
adc
mov
ret
push
cmp
into
add
inc
mov
mov
loope
lods
addr16
mov
pop
and
mov
pusha
cmp
scas
stos
insl
push
sahf
xor
xor
adc
mov
jle
inc
push
sbb
gs
push
fnstcw
xchg
sti
push
insl
adc
mov
lret
cli
sbb
cmp
in
pushf
call
mov
cmpsl
mov
push
movsl
mov
jmp
lret
fcmove
inc
xor
push
inc
mov
and
sub
inc
jae
jb
xchg
mov
push
les
daa
push
pop
dec
cmc
mov
shl
dec
stos
stos
and
lahf
mov
out
cmp
bound
stc
xor
popf
gs
adc
xlat
mov
sub
adc
test
aas
or
add
cmp
pop
rcrb
ds
push
ds
rcl
and
shrb
movsb
adc
leave
jne
or
cmpb
sbb
mov
push
imull
imul
fs
stc
repz
push
or
popf
enter
xor
jmp
mov
or
dec
ljmp
xor
out
pop
inc
outsl
adc
cmp
imulb
inc
ds
inc
or
pop
mov
and
cmpsl
shl
mov
dec
push
mov
imul
sbb
loope,pt
adc
xor
add
sub
flds
in
ljmp
out
and
mov
cmp
leave
outsb
loop
imul
mov
rolb
pop
pop
sub
cmp
dec
sti
enter
imul
dec
in
sarb
add
sbb
into
pop
rclb
jo
ljmp
add
xor
xchg
ja
pop
add
int3
in
push
ja
rorl
inc
sarb
mov
ja
dec
pop
test
mov
int3
fcoml
or
push
sub
adc
mov
push
push
aad
call
sbb
xor
pop
fnstsw
dec
arpl
insb
push
les
subb
mov
xor
pop
shrl
jle
and
lret
and
pop
add
inc
ss
testb
hlt
sub
cmp
inc
movsl
negl
into
out
sbb
mov
aad
int3
and
jmp
js
repnz
xor
xchg
in
fisubrl
mov
sbb
nop
mov
not
pop
add
rcrb
ret
pop
mov
in
inc
sub
insl
inc
mov
lea
cltd
call
out
xor
test
cltd
mov
ret
movq
insl
lea
jb
mov
subl
jb
push
or
data16
lea
daa
add
inc
or
xchg
xchg
inc
lahf
xchg
das
jne
xchg
or
xchg
adc
js
dec
sub
lea
mov
cmp
dec
xchg
sbb
sbb
adc
push
cmp
xchg
int3
jmp
or
lcall
mov
push
ja
sahf
mov
clc
adc
bound
jg
fstpt
jl
push
mov
lods
sbbb
mov
add
push
fidivrl
in
pushf
push
jnp
pop
jmp
xchg
fucom
adc
or
or
xchg
dec
rolb
ljmp
mov
push
loop
and
sarl
lock
xchg
out
mov
scas
aas
sub
xchg
aad
in
jge
xor
dec
xor
clc
mov
fs
mov
push
xor
test
xchg
enter
jmp
ljmp
out
push
xor
in
pop
xchg
les
jg
add
stc
mov
cmpsb
push
push
mov
sub
repz
outsl
das
mov
lock
pop
adc
inc
fdiv
jl
mov
jmp
fdivrs
push
jb
pusha
mov
xor
ljmp
nop
mov
movsb
xor
sub
test
aam
push
inc
jecxz
jnp
stos
jle
scas
fs
jp
adc
test
sbb
or
pop
out
jmp
inc
ds
sahf
fs
mov
cmp
out
stc
mov
repnz
imul
jbe
sbb
icebp
fcoml
fldenv
inc
inc
in
pop
in
mov
pop
cmp
xor
and
and
xchg
mov
das
mov
inc
or
jnp
push
mov
enter
jno
mov
mov
cmp
js
sbb
aaa
nop
mov
dec
dec
das
mov
mov
cs
cmc
mov
dec
inc
fldl
inc
jg
lds
lret
sbb
push
rcll
aad
negb
lcall
fdivr
cltd
lcall
outsb
lcall
cwtl
xchg
dec
cmp
sbb
pop
sub
fsub
add
mov
jns
in
lea
mov
sarl
lcall
dec
insb
stos
dec
or
pop
xchg
testl
mov
clc
aad
outsl
mov
sub
jo
inc
or
dec
cmpsl
sbb
jno
push
push
cmpsb
cmc
mov
jbe
adc
lret
jnp
cmpsb
inc
je
or
and
lods
sbb
adc
cmp
gs
dec
jl
jo
push
pop
js
aaa
push
cmpsb
jns
daa
in
and
push
add
cmpsl
int
addr16
mov
scas
dec
cld
sub
mov
jo
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
and
daa
sbb
adcl
addl
addr16
mov
xchg
int3
aam
stos
pusha
xchg
cmp
push
es
ror
nop
aad
iret
push
inc
xchg
lods
imul
subl
addb
mov
xchg
pop
popa
dec
fcompl
addr16
sbb
xor
pop
or
cmp
cltd
push
pop
adc
cli
hlt
cmpl
dec
fbstp
lret
inc
leave
negb
pop
lcall
add
jmp
xchg
repz
cmpsl
jb
fmuls
mov
cmp
mov
jl
loopne
test
fistl
dec
in
enter
cmp
xchg
sub
aad
push
inc
test
sbbb
in
aad
icebp
dec
pop
lock
pop
pushf
fnsave
arpl
dec
add
mov
jae
mov
stos
test
data16
pop
enter
dec
dec
iret
and
jnp
test
and
add
cmp
mov
les
or
pop
clc
cld
mov
ret
mov
inc
pop
jg
push
pusha
xor
or
outsb
push
dec
pop
js
sub
xlat
rcrl
dec
dec
jg
xchg
mov
push
push
sbb
dec
out
jmp
push
mov
pushf
testl
xchg
jo
arpl
out
int3
pop
incb
or
negl
dec
sub
and
jno
mov
outsb
loop
lods
dec
jp
sbb
in
add
cli
lea
and
stc
mov
fdivp
outsb
or
lcall
cmp
ds
adc
orl
fwait
ljmp
cmpb
mov
adc
xchg
xchg
add
ret
mov
mov
mov
jp
pop
sahf
nop
adc
ja
lds
mov
or
outsb
das
in
mov
xor
jl
mov
sub
sbb
push
mov
jge
inc
push
push
mov
push
xchg
pop
ror
jp
jb
adc
icebp
outsb
push
shl
adc
mov
or
inc
jge
lret
xchg
ficoms
outsl
ret
loopne
xchg
cmc
icebp
lret
add
scas
daa
adc
dec
adc
lods
cli
inc
daa
fldt
mov
shlb
sbb
lret
sbb
stos
lcall
ficoms
mov
decb
pop
imul
mov
lret
aad
sub
jb
add
rcll
sbb
nop
cmp
sbb
push
je
push
leave
mov
pushf
int
sub
mov
inc
sub
imul
jns
fdiv
adc
push
mov
test
mov
xchg
cmpsb
push
xor
fucom
jle
cld
cmpsb
mov
jl
ljmp
pop
std
inc
xchg
inc
mov
das
and
add
sub
xchg
cmpsb
jae
and
aam
and
sti
jg,pt
jbe
loopne
jb
stc
clc
imul
outsb
jecxz
stc
cld
fucomip
cmpsb
arpl
jecxz
les
lcall
stc
mov
pop
xor
inc
js
mov
into
xor
mov
adc
je
sbb
icebp
dec
hlt
and
lods
lock
or
mov
je
push
inc
jl
adc
hlt
ljmp
lahf
lds
sub
cmpsb
aaa
mov
dec
mov
push
jnp
stos
mov
jecxz
xchg
adc
xchg
dec
and
jp
xchg
xchg
scas
push
inc
out
rolb
rcll
pop
xor
sbb
lods
push
ss
sub
adc
or
adc
mov
sbb
imul
push
test
add
xchg
lcall
addr16
mov
mov
movsb
fisttpll
inc
aam
out
jbe
test
inc
pop
jmp
lcall
cmp
loope
sahf
jno
test
ficompl
lea
movsl
sbb
mov
loope
push
mov
shlb
push
dec
testl
gs
bound
mov
mov
mov
mov
lret
popa
lods
addb
fxch
lds
pop
push
inc
fiadds
sarb
rorl
pushf
scas
or
lds
xor
or
stos
push
std
adc
pop
cmpsl
or
clc
xchg
jnp
popf
leave
add
lods
add
in
std
and
ret
inc
mov
jmp
dec
cmp
pop
jae
push
cld
sub
lods
hlt
cmc
ficomps
rol
sbb
push
mov
repz
jns
inc
xor
insl
sbb
xor
inc
rolb
icebp
push
push
xor
jle
dec
and
test
cltd
push
scas
sbb
stos
repnz
sub
inc
add
clc
pusha
cs
xchg
faddl
sahf
jne
jle
pop
stc
lea
inc
sar
sbb
mov
sti
pop
mov
mov
loope
push
cmp
push
xchg
sbb
cmp
inc
or
cmp
out
sarl
push
add
xorb
push
pop
sub
sub
fs
pop
shl
jne
add
add
mulb
das
push
mov
lds
ret
xchg
sub
push
xor
xlat
xlat
mov
push
dec
pushf
sub
shlb
adc
lea
jnp
sub
cmp
loop
jl
dec
mov
sub
or
clc
shlb
int3
cli
and
jne
and
repnz
jle
repz
pop
xchg
jns
mov
jb
movl
fimuls
pop
cmp
mov
mov
in
ret
mov
mov
add
push
out
sub
or
pop
leave
imul
int3
xchg
ss
jno
mov
xor
mov
paddb
jmp
aas
mov
jo
sub
sbbl
pop
clc
jbe
mov
clc
sbbb
jno
das
in
adc
sub
and
loopne
fmuls
insb
hlt
push
divb
je
cmp
lods
out
leave
xor
pop
xor
add
pushf
jle
aam
gs
add
cmp
aaa
push
add
mov
inc
sub
adc
daa
cli
jbe
mov
mov
mov
inc
cmp
enter
fucomp
sbb
sbb
adc
mov
popa
mov
push
mov
inc
ficomps
aad
xchg
pop
mov
imul
sub
scas
dec
or
clc
stos
mov
inc
mov
test
insb
pop
out
xchg
and
inc
xor
movsb
icebp
or
jno
enter
add
or
adc
lcall
fs
jbe
dec
fadds
out
jbe
aas
or
nop
push
cmp
push
test
cmp
jo
push
lea
dec
xor
and
cs
cwtl
pop
ficomps
xor
inc
sarb
and
pop
pop
into
loop
pusha
push
pop
nop
fistl
push
movsb
fwait
mov
cmp
mov
test
cmpsl
sub
in
outsl
divb
addl
js
or
push
das
ljmp
push
xchg
aaa
or
insl
add
cmp
pop
sub
mov
sub
cmp
fcmovb
lret
mov
xor
adc
int3
mov
dec
je
inc
cmc
sbb
inc
xchg
push
insl
inc
lds
push
aam
xchg
je
pop
pop
faddl
sbb
xchg
xchg
out
es
inc
and
cmp
sub
mov
jle
mov
fidivrs
jae
ss
mov
loopne
sub
insb
sbb
mov
and
pop
out
mov
popf
mov
in
xchg
xor
jne
mov
fdivrs
mov
cltd
pushf
sub
pushf
icebp
push
push
scas
lea
call
inc
stos
lods
xor
je
jmp
and
and
aaa
lcall
adc
cmp
cmp
in
jmp
add
out
sbb
inc
aad
dec
jbe
dec
shll
add
fstl
push
push
mov
mov
in
fldenv
dec
xor
lock
lret
cmp
lock
int
pushf
daa
cwtl
leave
lds
mov
inc
push
ret
pop
pop
cmp
mov
cltd
xor
lea
xchg
push
lret
out
xlat
jnp
inc
sub
sub
xor
pop
lret
sub
or
sub
mov
cld
dec
data16
fucom
jns
movl
or
dec
ja
push
loop
ljmp
pop
inc
outsl
mov
mov
ljmp
jle
ret
shl
inc
and
fisubs
jl
sbb
insl
outsb
jge
int3
mov
out
shll
jmp
mov
cmpsb
out
setnp
outsl
popf
sahf
xchg
rclb
scas
push
xchg
pushf
add
je
aam
cmp
xchg
jb
mov
xchg
adc
xor
shlb
adc
std
add
push
fld
cltd
cwtl
jmp
push
push
jne
push
aaa
sbb
loop
pop
inc
jbe
addr16
and
fdivr
xor
lds
stos
stos
jns
lahf
cld
das
int3
mov
cmpl
xchg
lock
push
movsl
cmc
jnp
out
loope
aas
jl
stos
pop
xchg
cld
and
bound
iret
pop
mov
adc
inc
sbb
mov
jg
movsl
ljmp
rorl
and
jo
inc
pop
aam
cwtl
add
inc
sbb
inc
jp
sub
xchg
inc
int3
imul
jae
sub
repnz
xchg
add
jb
dec
in
pusha
inc
mov
mov
cmp
arpl
mov
add
push
pop
loop
repz
lahf
outsl
mov
test
leave
cmpsl
lds
shll
cmp
adc
cmp
mov
mov
xchg
jns
inc
mov
jg
stos
jp
orb
jbe
jmp
dec
loope
adc
or
adcl
dec
cli
xor
xchg
mov
cs
sbb
cmp
mov
outsb
and
fwait
data16
jmp
enter
add
scas
ja
sahf
cmp
in
jno
test
repnz
mov
fdivrs
test
xlat
jns
jl
leave
push
push
adc
sarl
hlt
inc
scas
in
ja
jo
data16
inc
ficompl
cmp
inc
fcoms
fsincos
xor
stc
xor
push
in
fistpll
cld
cmp
stc
cmp
and
or
imul
add
rolb
push
dec
and
cmp
roll
ds
roll
sbb
adc
sub
push
mov
xchg
sub
aam
clc
dec
jae
sub
or
scas
dec
stc
ljmp
xor
mov
adc
lods
sbb
add
pop
fstps
cmpsb
orb
test
add
xchg
push
imul
xor
push
and
out
jno
stc
arpl
and
and
mov
mov
subb
loopne
in
test
pop
subl
xchg
and
das
jge
jo
mov
lock
add
test
push
not
jge
hlt
cmp
cmc
in
repnz
or
push
fmul
lods
cmp
or
mov
push
mov
adc
add
sub
fiaddl
into
dec
mov
lock
pop
jns
addb
stc
fsub
leave
mov
mov
push
je
frstor
add
adc
adc
into
andb
adc
addr16
daa
test
clc
or
fists
popf
ret
ret
xchg
ret
jnp
sbb
xchg
adcb
fcmovu
jmp
in
mov
idivl
pop
or
fsubrp
sbbb
mov
mov
movsl
sub
and
fisubrs
int3
push
push
call
rep
sbb
inc
or
jnp
or
xor
fbstp
repnz
jbe
pop
stc
mov
pusha
mov
ljmp
roll
pushf
es
xor
lcall
add
je
or
inc
jp
pop
push
sub
popf
pop
jp
lcall
pop
mov
rorb
fdivl
dec
push
adc
jmp
movsb
xor
cmp
adc
in
push
lahf
push
roll
push
and
add
mov
mov
shr
daa
dec
test
push
dec
rcll
pushl
sbb
push
movsb
pushf
push
add
sub
in
inc
inc
loope
mov
mov
jbe
dec
sbb
stos
add
sub
sbb
xchg
pushf
adc
ja
daa
shlb
pop
loopne
mov
mov
andb
push
jo
jno
loop
sarb
adc
inc
loope
xchg
mov
outsl
cmpsl
mov
mov
aam
jbe
sbb
out
add
shr
push
in
pop
outsb
lea
stos
arpl
inc
sbb
jmp
or
sub
push
inc
add
sti
rorb
pop
ljmp
xor
sub
push
dec
clc
jb
addb
pop
insl
fs
cltd
and
and
popf
sbb
push
out
lret
mov
in
xor
xor
out
xor
icebp
test
jmp
or
cmp
jne,pt
add
arpl
push
enter
jecxz
cmpsb
je
sub
jnp
dec
cld
cmpsl
test
inc
jmp
loop
push
mov
aas
shrl
call
jnp
lahf
int3
cmp
cmpsl
mov
lret
adc
mov
cmpsb
loop
lahf
push
xor
loopne
or
iret
in
and
lock
mov
push
mov
or
or
pop
mov
lods
mov
jmp
xchg
sbb
push
add
inc
mov
pusha
inc
mov
or
in
push
mov
sbb
pop
fsubl
loopne
mov
lods
int
sbb
sub
jno
push
scas
popw
mov
lret
mov
adc
scas
sub
add
or
pop
das
or
dec
cmp
sti
stc
shll
jge
cmc
xchg
sub
push
arpl
mov
pop
pop
or
out
fdivs
test
mov
sbb
shll
push
adc
mov
xor
sahf
imul
js
inc
sub
stos
sub
dec
or
mov
rcrl
inc
sar
fisttpl
aam
inc
iret
sbb
ljmp
sbb
out
fisubrl
test
pop
ds
push
mov
iret
or
sbb
in
add
xchg
enter
js
mov
sbb
shl
aas
xchg
dec
sub
outsb
int3
das
push
ror
or
and
or
sub
fsubrl
repz
andl
push
mov
sub
movsb
pusha
pop
faddl
push
or
pop
add
push
and
sti
inc
arpl
cs
arpl
push
adc
xchg
aaa
pop
test
mov
repz
mov
scas
adc
mov
sbb
add
je
xchg
pop
ja
fdivs
pusha
popa
push
jns
loop
mov
std
sub
dec
cmp
cmp
sub
rolb
int
insl
cmpsb
enter
int
lock
xchg
pusha
dec
add
sbb
xor
icebp
xor
lret
loop
mov
imul
sub
and
sub
sahf
outsb
call
add
jmp
inc
lret
xor
js
adc
cs
xor
ficomps
lods
xchg
xchg
and
mov
and
pop
fucomi
in
mov
cmpsb
dec
fisttps
jecxz
scas
jl
xor
das
ret
add
out
and
fildll
call
aad
shl
hlt
lret
pop
stc
loop
lret
dec
lods
mov
sub
je
push
adc
xchg
mov
aad
mov
sbb
daa
push
icebp
add
lods
xor
fadds
cmpsb
ret
cmp
inc
fsubp
scas
lock
mov
pop
sub
jecxz
inc
ja
and
pop
js
mov
inc
add
mov
xchg
bswap
sbb
push
cltd
aam
push
insb
out
adc
sub
hlt
or
sbb
jae
xor
xor
rcrl
cmp
sub
inc
fisubl
and
dec
pop
jno
mov
je
jl
cmp
jp
rcll
lret
cwtl
hlt
mov
push
ret
gs
and
push
pushf
gs
cmc
cmp
push
jae
movsl
jo
repz
stc
sub
daa
pop
dec
xor
cs
arpl
adc
fs
push
lea
sub
push
aam
or
shl
flds
mov
mov
cli
and
int
rcrb
rol
and
mov
and
mov
or
jg
cmp
lods
lret
pop
int
lret
popf
mov
in
popf
xchg
sbb
pop
mov
dec
mov
push
push
and
dec
cmp
stc
jmp
mov
jp
pop
daa
pop
cmp
rorl
call
push
mov
daa
vmaskmovdqu
jmp
mov
inc
push
push
fmull
test
js
cld
mov
iret
clc
jns
and
xchg
mov
pop
test
jno
lods
sbb
xchg
pop
cmp
jo
jno
aaa
xor
push
cmpsl
in
xchg
sbb
fisubrs
sbb
add
jmp
push
mov
mov
or
mov
lods
mov
sbb
sub
loop
mov
xor
call
test
inc
iret
sahf
jno
mov
add
jne
push
das
mov
xchg
pop
lods
and
sub
fnstenv
mov
cmp
movsl
inc
mulb
mov
ss
lods
jo
cmp
push
mov
stos
inc
pop
pop
pushf
jg
je
roll
aaa
sarl
daa
sub
ret
inc
pop
mov
mov
adc
jp
lret
mov
icebp
xor
mull
jo
push
insb
or
test
mov
adc
mov
es
sbb
cmpsb
jae
hlt
pop
mov
lret
inc
mov
dec
fdivl
lea
mov
jg
sub
lock
dec
jb
xor
cmp
jo
cmpb
sub
imul
mov
and
sbb
or
faddl
jno
ljmp
mov
xchg
or
inc
or
cmpsl
lcall
pop
fstl
dec
xor
xor
push
mov
hlt
bound
lcall
out
dec
jp
stos
clc
pop
xor
dec
push
stc
pop
lods
and
movsl
push
test
lcall
loopne,pn
or
sbb
push
loope
adc
stc
cmpl
fucomip
mov
leave
arpl
es
popf
test
xchg
inc
bswap
roll
mull
or
insb
xchg
in
or
es
cmp
sbb
mov
fistpl
push
test
cmp
fisubl
push
es
stos
popa
addr16
out
cmp
xor
cmc
cli
not
inc
outsb
or
aam
add
test
dec
xor
dec
jp
test
jmp
push
push
xchg
lods
add
bound
push
mov
iret
xchg
dec
pop
inc
sbb
mov
mov
push
dec
rclb
xchg
adc
bound
repnz
sub
add
push
scas
jns
add
sbb
lret
clc
cmp
mov
xchg
and
xchg
loopne
push
aas
sbb
jnp
lret
notb
and
outsb
inc
int3
test
lahf
mov
xor
and
sub
xchg
mov
inc
mov
fdivs
xchg
shll
push
adc
dec
jns
cmp
int
add
in
xchg
sti
out
xchg
lods
sbb
inc
or
add
or
cmpsl
inc
cwtl
xor
cmp
push
mov
push
and
lcall
dec
inc
cmp
mov
xorb
ret
pushf
mov
arpl
lea
sub
sub
mov
inc
push
jg
in
movl
or
bound
cmp
adc
or
out
and
push
xorb
adc
xchg
shl
mov
popf
jmp
dec
cmp
mov
inc
dec
imul
paddsb
je
mov
int
adc
cmp
push
push
push
aad
out
dec
xchg
push
stos
xor
mov
stos
pop
add
and
sub
jo
not
ja
xchg
mov
lahf
in
jge
popa
push
pop
stos
xchg
or
fmull
fs
aas
sub
mov
scas
mov
mov
pusha
clc
add
pop
pop
xorb
sti
std
or
mov
adc
gs
xor
movlhps
stos
jge
push
ja
add
movsl
jbe
xchg
jecxz
jne
ja
lea
cli
lods
jno
jne
add
ss
mov
pop
sbb
movsb
enter
arpl
notl
js
add
cwtl
or
cmc
out
dec
cmp
jecxz
fpatan
scas
push
add
popf
xchg
inc
fdivrp
imul
mov
mov
sub
mov
cs
shl
cmpsl
jb
xor
pushf
or
jmp
ret
cmp
loop
pushl
pop
dec
arpl
mov
jle
add
inc
insb
subb
sbb
add
jge
jb
in
xor
int
mov
and
mov
jbe
jb
mov
jmp
insb
pop
ljmp
xchg
xlat
sbb
adc
xchg
addr16
adc
mov
movsl
mov
dec
scas
aaa
bound
jge
lcall
inc
data16
out
mov
in
les
loope
xchg
jmp
popa
movl
mov
nop
dec
push
cli
and
jl
sahf
dec
jae
cmc
push
add
jmp
shrb
xchg
lcall
and
dec
ja
xor
shlb
insb
and
stos
xlat
stc
shl
sub
dec
sbb
cli
lahf
inc
lahf
mov
and
ds
jb
lds
hlt
add
or
sub
fiaddl
xchg
sub
pop
movsl
cmpsl
cli
mov
and
xchg
fisttpll
in
add
popf
mov
push
lret
mov
movsb
mov
sbb
cmp
mov
lea
icebp
cmpsl
pop
push
shl
adc
add
sarl
aas
push
loop
test
push
cmpsb
jne
insb
mov
mov
cld
jecxz
and
adc
pop
lods
outsl
jge
or
icebp
push
jns
lock
imul
push
imul
push
sbb
sub
subl
loopne
test
aas
push
test
mov
js
out
sub
cs
xchg
popa
popf
push
or
push
xorl
pop
inc
movsb
imul
mov
std
test
cmpsb
dec
mov
dec
pop
mov
pop
add
xchg
dec
ss
fcmovb
iret
inc
jge
rcrb
hlt
push
xor
pop
mov
and
jp
cld
jno
lcall
cld
dec
icebp
sub
pop
pop
pop
dec
sarb
lods
mov
int
mov
sub
pop
cli
out
push
ja
daa
adc
mov
mov
jne
jle
subl
xchg
mov
lods
ss
imul
sub
push
inc
jle
pop
mov
sbb
rorl
pop
test
mov
dec
xchg
push
cmpsl
iret
sub
addr16
mov
test
cli
rol
fwait
shl
shll
sbb
popf
sbb
mov
ud1
xchg
es
scas
sub
adc
aam
andl
hlt
daa
adc
inc
movsb
pop
test
cmp
add
mov
and
mov
insb
lret
add
popf
inc
or
jae
and
ljmp
roll
jbe
stos
pop
xchg
inc
xchg
dec
std
es
xor
shrl
repz
cs
pop
out
stos
shl
mov
repz
inc
rorl
leave
out
out
enter
in
outsb
sahf
idivb
lods
xchg
pop
pop
idiv
mov
mov
xchg
or
sub
xchg
or
repz
dec
dec
xor
loop
aad
lods
cmpsb
insb
iret
std
sahf
sub
push
shll
sub
push
or
mov
nop
mov
xor
icebp
aaa
cmp
rclb
outsb
cmpb
loopne
test
les
imul
test
sahf
dec
sbb
cwtl
movsl
mov
jns
mov
mov
push
mov
mov
fstl
lret
push
dec
test
and
test
and
lds
mov
lret
sub
mov
rorb
inc
mov
leave
or
mov
incl
fstpt
faddl
stos
dec
sti
dec
adc
sti
mov
std
fcompp
pop
xor
jae
or
fwait
in
std
test
fsub
pusha
xor
jne
or
aad
dec
popf
adc
imull
data16
push
inc
mov
push
xchg
cwtl
mov
jp
rorb
lods
cltd
and
sub
lret
mov
pop
test
lahf
inc
pop
jge
in
and
sub
in
ret
outsl
leave
ret
lock
xlat
dec
imul
clc
sub
int3
shlb
outsl
rolb
xor
filds
lock
adc
sub
sbb
and
in
int
sarl
ss
and
adc
dec
les
mov
or
cmp
aam
cwtl
sub
outsl
fldl
pop
das
out
or
jns
mov
cmpl
repnz
mov
nop
adc
out
repz
loope
ss
xchg
loopne
ret
jge
fistpl
dec
divb
dec
in
sar
mov
xchg
pop
push
pop
inc
jne
xchg
ja
sbb
cwtl
outsb
mov
mov
in
dec
mov
mov
dec
jecxz
adc
das
mov
pop
movsl
mov
scas
shlb
out
hlt
aad
push
mov
pop
push
fwait
mov
imul
or
mov
popf
into
cwtl
ljmp
push
dec
inc
pusha
decb
and
icebp
bound
pusha
cwtl
or
idivb
xor
adc
ret
inc
aam
xchg
test
int
add
lock
hlt
nop
and
sbb
push
pop
cmc
cli
je
push
test
mov
ret
ficompl
fwait
push
inc
movsb
outsw
pusha
xorb
gs
insb
mov
jns
and
pop
push
and
inc
outsl
addr16
xor
cmp
lods
aas
mov
push
ficomps
mov
mov
mov
pop
pop
popf
int
lret
cmp
popa
mov
push
xchg
popf
pop
pop
insl
jno
sub
xor
mov
out
push
out
xlat
pop
bound
mov
inc
jae
push
jl
mov
out
or
inc
lret
jbe
inc
push
fnstcw
aas
cmp
add
mov
inc
sub
sbb
adc
imul
push
stc
xor
mov
dec
cmpsl
xchg
xor
imul
cmp
add
call
sbb
mov
insl
dec
mov
pop
in
mov
stos
scas
lock
jbe
lret
xchg
add
aas
lds
sbbl
das
cmp
rcll
add
in
adc
xchg
bnd
mov
js
mov
addr16
adc
dec
in
jne
lea
or
push
aas
shlb
lret
push
fisubrs
int3
ljmp
ljmp
cmpsl
mov
lock
daa
mov
mov
and
ss
and
inc
arpl
shl
push
sbb
add
push
aam
xor
pop
jo
insb
or
add
jnp
mov
inc
adc
xchg
dec
pop
dec
cmp
lods
imul
in
repnz
dec
xor
ret
insl
aas
fadds
dec
fwait
xor
push
aaa
aad
in
aam
pop
push
icebp
mov
fnstenv
rorb
adc
in
neg
insb
pop
mov
mov
cltd
shl
stos
aaa
movsb
cmp
insl
stos
dec
in
adc
out
push
adc
inc
push
push
jns
outsb
popa
jecxz
leave
mov
lea
cmpsl
jae
arpl
add
shrb
in
dec
cld
filds
outsl
and
iret
sub
cmpsb
cmp
sahf
and
mov
jge
push
jg
pusha
add
jbe
test
sti
ds
out
mov
and
inc
popf
cmp
and
fnstcw
mov
inc
lods
xor
cmp
stos
enter
int3
push
es
hlt
fmuls
jp
test
das
pop
popa
push
mov
and
scas
mov
mov
dec
arpl
adc
fsubrs
or
nop
repz
push
xchg
ret
add
dec
fildl
jae
add
fwait
pop
jne
pop
dec
mov
cltd
mov
jnp
inc
imul
xor
mov
jmp
pop
xor
pop
mov
pop
fldln2
stos
adc
push
mov
mov
or
lds
push
rcl
testl
mov
stos
clc
push
fdivs
imul
cwtl
lret
cmpsb
das
loop
mov
jle
outsb
add
out
xchg
sbb
repz
mov
aad
insb
mov
leave
movsl
clc
mov
sub
clc
popa
jae
inc
pop
mov
mov
mov
pop
mov
and
xchg
sub
movsb
jbe
add
sti
mov
inc
push
cli
mov
insb
adc
movsl
iret
jp
sti
and
sub
cwtl
pop
mov
sbb
sub
dec
push
add
dec
popf
daa
push
pop
or
push
jl
ja
mov
test
mov
test
ljmp
cmp
mov
add
ret
cmovae
add
shrl
mov
call
pop
push
lds
cmc
loop
outsb
xor
das
push
cld
je
pop
sub
negl
ss
out
movsl
ret
icebp
or
ror
js
push
enter
fnstsw
pop
xchg
pop
push
repnz
xchg
mov
mov
jae
jge
inc
jmp
mov
shl
sbb
mov
popf
mov
sbb
push
mov
sub
insl
add
jne
les
mov
xor
mov
mov
add
cs
adc
add
dec
mov
ret
adc
dec
out
xor
nop
push
push
jno
mov
andl
int3
aaa
bound
jmp
dec
leave
lea
fcoml
adc
sbb
cltd
loope
nop
push
or
lahf
in
mov
lock
sub
inc
fiaddl
pop
hlt
mov
sub
push
and
mov
push
pop
insb
movsl
loope
shl
daa
arpl
dec
inc
cmp
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shr
fisubrs
pop
mov
pop
addl
mov
xorl
es
xchg
mov
inc
jb
sbb
pop
lea
jb
mov
icebp
stos
inc
add
pop
rcl
enter
pushaw
sub
sub
popf
stc
xchg
out
lds
test
data16
sti
mov
ljmp
jae
in
mov
or
add
and
pop
inc
cwtl
sbbl
mov
sbb
lret
ror
mov
inc
movsb
mov
out
popa
sbb
sub
push
push
pop
call
movsb
pextrw
and
stos
in
and
jg
mov
scas
stos
jg
inc
sub
jg
jmp
sbb
loope,pt
mov
fwait
mov
cli
jbe
push
pop
cli
fidivrs
xlat
add
and
and
jmp
call
mov
and
lods
lods
xlat
sbb
icebp
mov
xchg
orl
xchg
or
adc
bound
xlat
insl
pop
xor
push
hlt
insb
stos
imul
sub
sahf
es
gs
adc
inc
sbb
lods
mov
lret
lret
mov
dec
lods
jle
adc
outsb
xor
aam
insl
mov
or
cmpsl
jns
cwtl
push
pop
jno
fmull
ljmp
lods
or
push
add
xchg
dec
cs
mov
mov
das
xchg
mov
movsb
les
stos
adc
pop
adc
xor
pop
scas
in
jns
mov
repnz
mov
cmp
mov
popf
hlt
dec
andb
push
shr
jns
int
pushf
jbe
mov
adc
pop
pop
mov
subl
dec
inc
adc
mov
ja
fsubs
jmp
or
inc
or
ja
push
push
adc
test
sub
sub
insl
popf
in
and
push
aas
and
xchg
addr16
xor
fmull
pop
mov
ljmp
adc
fisttpl
jno
das
mov
aad
lret
rclb
daa
imul
dec
inc
mov
xor
mov
fwait
cmpsl
push
xchg
aas
xorl
fucomp
leave
and
add
fwait
xchg
lods
sbb
jmp
in
andl
mov
mov
and
les
mov
mov
test
fidivrl
fcmovnbe
dec
cld
int
cmp
out
loop
aam
movsb
fistl
rcll
sbb
xor
int3
mov
push
mov
xor
int3
jl
mov
lods
xchg
fmul
arpl
cmpsb
push
jmp
icebp
push
sti
sub
push
inc
add
negb
and
movsl
cmp
and
outsl
aaa
fimuls
xlat
jecxz
popf
sbbl
add
mov
xor
or
push
arpl
mov
cmp
in
adc
fcompl
out
push
loope
mov
push
mov
mov
push
pop
mov
or
mov
iret
push
daa
mov
xchg
jne
adc
dec
mov
add
xlat
out
cmpsl
movsl
jl
push
movsb
fcom
testl
sbb
inc
js
adc
jbe
flds
loopne
scas
push
push
mov
fcoml
das
cmp
pop
loop
adc
inc
insb
xchg
inc
or
and
fmuls
movl
and
xor
mov
cmpsl
xor
pop
fstps
or
je
sub
cmp
fsubrl
insb
fstl
or
pop
push
aad
sub
xorb
sahf
lahf
dec
mov
mov
xlat
test
imulb
dec
push
test
and
mov
dec
xchg
jbe
data16
adc
int
insb
jl
popa
push
sub
lock
cmc
sbbl
xchg
and
test
push
dec
xchg
push
rol
jp
lcall
loope
jns
dec
das
lds
cltd
addr16
dec
fsubrl
js
mov
pop
lret
sbb
testb
test
insl
addr16
popf
inc
lods
ret
mov
clc
inc
das
repnz
aad
aam
sti
cwtl
daa
mov
call
dec
imul
xor
daa
dec
lret
sbb
dec
mov
mov
mov
lgs
or
insl
stc
lret
jle
pop
adc
call
sbb
ficompl
fsub
pusha
jge
dec
fmull
ds
push
xor
or
xor
and
cmp
xor
cmp
pop
and
push
add
cmp
add
cmp
ret
lods
outsb
les
sub
fwait
and
adc
cmpsl
ljmp
lret
pop
pop
adc
inc
pop
adc
out
xchg
sarb
cmpsl
loopne
dec
inc
mov
adc
and
inc
fld
in
in
in
xor
dec
popa
or
movsl
xor
aad
push
cs
daa
in
inc
and
imul
jae
repnz
jne
dec
insb
xor
lock
sub
add
mov
lret
jo
add
dec
loope
fbld
dec
rclb
inc
data16
lock
imul
std
or
lods
inc
inc
mov
pop
push
ficompl
sbbl
jge
fists
cltd
movsb
push
scas
hlt
sub
in
inc
dec
jecxz
fsubrs
inc
inc
inc
int
push
xor
xor
cli
adc
jmp
jae
xchg
xchg
adc
shlb
loope
ficoml
in
mov
imul
bound
iret
push
in
in
xor
xor
pop
cmp
je
add
pop
lret
imul
pop
in
push
addl
call
xchg
push
out
add
xchg
out
inc
mov
cmp
nop
je
push
cmp
int
notb
iret
inc
enter
cltd
mov
add
fadd
in
arpl
lods
cmpsl
cs
pop
aaa
xchg
cmp
lret
bnd
mov
push
test
es
daa
inc
xor
int
punpcklbw
mov
repnz
adc
in
enter
push
in
sti
xchg
jo
icebp
out
jbe
mov
add
mov
ja
and
outsl
hlt
gs
jmp
xor
and
popa
rsqrtps
fnsave
cmpsl
jns
or
loop
outsl
and
lds
inc
mov
sub
cmp
push
xorb
test
sbb
jg
lock
jno
enter
lahf
jmp
outsl
jbe
in
push
xchg
in
adc
push
movd
dec
pop
jmp
insb
fidivl
sbbb
leave
and
add
lods
sub
inc
cmpsb
lcall
ds
add
fwait
es
dec
stos
push
mov
xor
pop
ret
xor
stos
and
movsb
repnz
pop
or
or
adc
push
std
test
xchg
in
aas
cmpsb
in
imul
js
out
xor
pop
mov
cmp
or
rorl
mov
shll
lret
sti
inc
into
dec
lret
and
jmp
lds
pcmpgtb
scas
iret
and
je
push
iret
pop
jle
xchg
mov
aad
sub
push
icebp
mov
inc
mov
adc
jl
jmp
fstl
test
cmp
pop
call
je
in
test
loop
lods
shr
xchg
sti
and
out
mov
jns
rorl
sarl
std
ja
inc
popf
enter
or
aad
xor
and
jbe
ret
mov
mov
outsl
xchg
fsubrs
int3
clc
jno
mov
test
xor
push
mov
xor
rcl
shrb
stc
mov
mov
inc
push
in
inc
out
imul
xlat
repnz
add
add
cmc
adcb
xchg
fnstenv
inc
sbbb
ds
mov
mov
insl
negl
sub
cmpsl
iret
cmp
sbb
fisttps
loopne
out
xchg
repz
pop
enter
call
inc
ss
xchg
push
pop
rcl
in
jae
mov
arpl
dec
inc
mov
add
out
inc
inc
or
inc
ja
pop
in
mov
rcr
mov
adc
mov
aaa
lret
xor
xchg
ljmp
inc
shrb
or
add
cmovl
jno
icebp
jbe
push
sbb
push
inc
sub
add
dec
je
xchg
loopne
outsl
dec
cmp
sub
mov
negb
das
cs
jl
and
scas
pushf
shlb
mov
int
sbb
jl
xor
cmpsl
sbb
push
push
jns
arpl
cmpsb
mov
sbbb
sub
out
fs
arpl
lds
and
push
jno
nop
inc
fnsave
dec
xchg
bound
loop
and
lock
and
add
add
hlt
cmc
mov
dec
sbb
push
or
arpl
lahf
mov
xchg
push
cmp
jecxz
es
insb
pushf
mov
mov
mov
std
int3
scas
adc
mov
fildl
xchg
test
add
or
call
repz
xor
sti
and
icebp
adc
fsubr
cmp
outsb
fmuls
mov
dec
mov
fs
jg
int
pop
push
mov
fs
xor
aad
xor
and
push
flds
mov
in
push
movsl
xor
adc
icebp
or
or
push
bound
lods
gs
sbb
popa
movsl
gs
mov
or
cmpsb
xchg
or
push
sbb
pop
mov
mov
jmp
loop
insb
nop
fbstp
repz
dec
inc
jecxz
insb
push
sub
cli
mov
mov
xlat
pop
jmp
das
mov
add
lods
cmpsb
insl
outsb
out
xchg
mov
sbb
sub
and
cmp
lahf
push
jns
pop
xor
daa
jno
xchg
int
std
enter
jae
lods
dec
and
addb
nop
pushf
icebp
out
fidivl
into
sub
cmpsb
fdiv
cmp
dec
call
xchg
mov
sub
fisttpll
popa
xlat
add
xchg
push
lds
inc
fs
sbb
icebp
cmp
add
lahf
ret
in
pop
mov
mov
push
xchg
jl
loop
add
sbb
pop
sarb
adc
dec
mov
in
add
cmp
ds
lds
dec
or
push
test
fs
jmp
and
sub
xchg
add
sarl
lods
dec
xchg
cld
cwtl
dec
ret
ljmp
xchg
stos
adc
call
popf
mov
mov
jns
lcall
inc
cmp
imulb
in
repz
lock
add
je
jl
or
mov
leave
adc
sub
mov
push
scas
or
aam
bound
pop
or
pop
ret
and
jne
test
std
cmpsb
pop
in
jbe
cwtl
push
cmpsl
sbbl
repnz
jae
sbb
std
ret
fmulp
mov
dec
push
inc
adc
dec
and
jne
mov
adc
shrl
mov
lret
popf
movsl
xchg
mov
jns
jle
dec
das
and
sar
scas
add
adc
and
mov
push
mov
lock
push
jae
insl
icebp
sti
or
mov
jp
mov
into
mov
mov
lret
cmpsb
lahf
scas
daa
pop
lods
mov
addr16
add
xchg
pusha
xor
pop
icebp
andl
test
sbb
xor
dec
lea
pop
push
inc
cmp
jmp
cmc
mov
lcall
mov
sbb
cmp
and
movsl
or
jo
out
dec
pop
gs
push
idivl
fisttpl
and
push
jae
repz
mov
rolb
add
repz
push
out
xor
out
stos
mov
jl
fwait
add
pop
test
adc
pop
cld
or
add
pop
push
cltd
and
scas
in
iret
out
xor
fisubs
sub
ljmp
jl
jnp
je
adc
cwtl
fistpll
ds
mov
test
aam
and
scas
sub
gs
cmp
or
test
push
loope
mov
aad
fldt
sub
add
and
fsubrs
gs
mov
and
ljmp
imulb
lret
shrb
inc
stc
faddl
movsl
mov
ds
frstor
xchg
ror
fs
mov
popf
sbb
cmp
adc
insb
sti
sahf
lds
popf
jl
sub
sbb
pop
enter
fisttpl
adc
ja
lea
lock
mov
inc
mov
mov
and
popa
dec
hlt
gs
bound
xchg
aas
fwait
cmp
mov
push
ja
scas
and
cltd
xor
jb
push
outsl
mov
add
xchg
or
jne
jle
xorl
jg
sub
pusha
or
daa
push
daa
out
mov
fcomps
ljmp
and
ret
jae
decl
addr16
dec
dec
sub
push
in
push
iret
lods
cltd
insl
push
sbb
and
add
lret
xchg
jb
mov
jge
gs
cltd
arpl
push
mul
dec
lods
adc
xor
pop
push
clc
mov
cmp
repnz
shlb
add
repz
test
cwtl
lahf
mov
cltd
mov
ss
outsb
fnstenv
and
add
int
mov
lock
mov
mov
pop
mov
xor
loop
cmp
inc
pop
je
leave
push
xchg
or
arpl
mov
ficompl
out
loopne
int
xor
and
lcall
notb
sbb
hlt
xchg
pop
mov
mov
pusha
adc
iret
fcomp
psubusb
and
int3
adc
fst
das
fisubrl
lods
inc
inc
dec
icebp
jne
mov
cli
jnp
insl
fstps
xchg
out
ss
dec
cmp
lahf
xchg
in
addr16
jae
xor
xchg
push
push
ret
jmp
sub
cltd
fadds
scas
imul
scas
mov
not
pop
sbb
cwtl
push
fadd
sti
xor
movsl
sbb
cmp
pop
xor
shlb
cmp
movsb
pop
xchg
repz
int
hlt
xchg
mov
mov
outsb
enter
negl
pop
fstps
outsl
push
sarl
insb
push
jp
in
cmp
fimuls
ja
push
jge
fnstenv
pop
es
jge
daa
xlat
mov
adc
mov
xor
push
bound
and
pop
idivb
mov
adc
mov
sarl
stos
arpl
pop
lea
incl
mov
pop
enter
lds
pop
cmp
enter
lcall
int
loope
push
jecxz
addl
jle
ficomps
movsl
sub
adc
and
test
ss
push
test
outsb
push
das
xchg
sbb
mov
inc
push
fwait
stos
lods
add
sbb
mov
mov
dec
leave
enter
xor
scas
es
adc
lds
xchg
data16
dec
pop
or
aam
sbb
mov
ret
mov
addr16
in
aam
mov
outsl
test
inc
cvtps2pd
mov
adc
imul
out
movsb
mov
inc
test
add
rolb
add
mov
inc
rcrl
jb
arpl
out
jl
jecxz
cltd
xlat
mov
cmp
dec
enter
add
out
arpl
dec
mov
and
xchg
xchg
cmp
rorb
or
cld
inc
sub
or
sub
ds
cmc
notl
adc
bound
fstps
pop
adc
and
pop
push
mov
dec
sub
fstpl
cmpsb
jbe
addl
mov
lret
xor
das
jnp
mov
loop
out
xor
ja
or
pop
loopne
test
in
mov
xchg
lret
mov
ds
and
adc
or
clc
pop
xchg
dec
nop
dec
add
mov
mov
pop
sbb
jecxz
inc
shrl
das
inc
xchg
sbb
movl
pusha
sbb
fstpt
or
int
aam
addl
lcall
cmpsl
pusha
outsb
pop
arpl
pop
out
jns
dec
and
cmpsl
in
loope
mov
xlat
fmul
sbb
jle
fsts
icebp
inc
adc
int3
xorl
sti
mov
js
push
xor
jo
xchg
cmp
sbb
and
inc
int3
xor
add
cmp
int
add
pop
xchg
pop
jno
mov
loopne
mov
adc
cmp
xorb
jp
call
xchg
xchg
jl
popa
xchg
jns
xor
scas
pop
mov
mov
sbb
fwait
or
lds
mov
call
outsb
mov
aaa
lods
jle
ja
lret
cltd
sbb
jo
lahf
xchg
loop
jl
shlb
pop
dec
mov
jge
sub
lret
lea
dec
dec
aaa
jmp
xor
xchg
push
insl
sub
push
dec
scas
sub
sbb
stc
mov
adc
sti
ljmp
sbb
divl
popa
sbb
std
mov
cltd
cli
pusha
in
ss
sub
rorl
xchg
xchg
data16
add
fldt
pusha
sarl
adcb
and
adc
adc
out
aas
or
scas
push
pop
nop
or
cmpsb
pop
mov
cmp
inc
in
imul
cmp
sbb
mov
out
inc
adc
insb
mov
xchg
popf
xchg
xchg
sbb
push
push
add
in
or
in
cmp
shrb
jmp
rcl
aad
es
js
aas
pop
push
push
loopne
cld
test
sbb
jmp
jb
lcall
xchg
stc
rorl
fnstenv
scas
gs
aam
lock
mov
fucomip
cmp
sbb
pmuludq
sbb
leave
cmp
and
fstp
push
cli
mov
mov
dec
call
add
divb
mov
mov
dec
pop
in
int
dec
les
hlt
xchg
fdivs
scas
xchg
xchg
xor
xchg
mov
sbb
xchg
mov
inc
add
fimull
mov
mov
fcmovnb
push
xchg
icebp
or
mov
push
mov
pop
outsb
adcl
xchg
mov
and
mov
or
cli
inc
jo
in
lahf
cmpsl
jp
insl
ljmp
test
xchg
cmp
and
sub
add
cmp
dec
sbb
mov
mov
in
jnp
ret
xor
xchg
adc
push
mov
dec
rcrb
jg
inc
insb
and
mov
mov
xchg
fwait
add
dec
lock
add
das
orl
cmpsl
or
stos
and
sub
shlb
hlt
xor
leave
ja
decl
les
mov
cmp
xor
add
shr
fs
mov
xor
leave
sub
rcrb
jecxz
loope
pop
jle
xchg
or
push
add
shrb
jne
into
outsb
lods
adc
cmp
dec
dec
stos
and
insb
mov
in
add
das
and
jnp
clc
test
sbbb
pop
xchg
fsubs
sbb
dec
mov
mov
add
adc
jne
jecxz
jb
or
xor
js
xchg
pop
cmp
mov
cwtl
mov
inc
shlb
pusha
movsb
aad
jno
ret
sahf
lods
imul
out
or
in
or
push
add
mov
iret
adc
fistpll
lock
adc
xor
in
sbbb
ljmp
outsb
loop
mov
mov
lods
xor
test
clc
sbb
push
xchg
cmpsl
lcall
mov
fbld
sti
arpl
adc
loope
cli
adc
stc
add
xor
fdivs
mov
dec
mov
dec
inc
ret
pushf
jae
pop
inc
test
sti
dec
loope
sub
push
push
int
imul
ret
sti
mov
xor
inc
lds
fwait
push
mov
sbb
insl
lock
mov
and
xchg
push
xchg
inc
loope
repnz
jnp
imul
popa
pop
mov
jns
mov
mov
pop
inc
jle
leave
and
out
and
or
cmp
and
int
std
incb
add
inc
mov
cli
test
adc
enter
into
mov
les
fwait
lcall
xchg
dec
mov
sbb
leave
jg
add
mov
popa
or
push
mov
lods
lock
add
repz
and
push
ljmp
lock
cmp
sbbl
data16
adc
mov
ja
insb
enter
movsl
gs
mov
xchg
sub
out
pushf
aaa
cmp
inc
test
lods
cmc
dec
lahf
adc
mov
rorb
fdivl
sbbb
sub
pop
push
mov
jecxz
in
mov
mov
in
or
sbbb
enter
push
xchg
fld
sbb
add
iret
xchg
pop
mov
in
call
out
xor
int
dec
and
arpl
mov
xchg
imul
mov
fs
mov
mov
xchg
push
inc
test
xchg
iret
mov
push
and
dec
mov
mov
leave
leave
sub
int
sub
outsl
sbb
mov
lods
pop
sub
aaa
dec
mov
push
xchg
push
jo
add
or
jle
adc
push
sub
outsl
jmp
sbb
adc
sbbl
ret
ja
leave
adc
inc
jl
and
cmpl
dec
fwait
or
xorl
int3
jl
loopne
fiaddl
lahf
into
sub
pop
add
movsb
lret
push
push
sbb
and
stos
das
mov
enter
cwtl
movsl
test
mov
stos
ficompl
xchg
test
xchg
cwtl
sub
cmp
push
lods
push
xchg
test
das
adc
add
imul
cmpsl
lea
cld
repz
jl
dec
add
ficoms
push
packssdw
enter
or
push
lahf
aad
in
mov
xchg
pop
push
pusha
dec
subl
xchg
jae
lea
cli
lahf
cs
push
dec
mov
fimull
sub
jg
mov
sub
sbb
std
shll
setp
mov
jecxz
sub
js
sahf
cmpsb
cmpsb
int3
adc
mov
pop
xchg
xchg
mov
jae
jmp
push
fsub
sub
gs
pusha
into
lcall
scas
jbe
add
xchg
dec
inc
push
stc
shl
lcall
push
pop
xor
adc
and
shll
sub
push
xchg
scas
add
imul
xchg
cmp
xchg
xor
push
in
jno
push
icebp
cmpsl
adc
ja
popa
mov
sahf
leave
push
loop
clc
cld
icebp
aam
das
out
cltd
jmp
aas
push
out
push
cli
cmpsb
cwtl
cli
aaa
repz
mov
xor
popl
adc
push
inc
sub
scas
mov
test
ss
pop
push
add
sahf
lock
mov
out
xchg
fwait
xorb
xor
dec
loopne
mov
jmp
loope
loop
jo
mov
cld
popf
incl
mov
xchg
mov
out
or
test
add
leave
sti
popa
mov
mov
aas
jl
add
mov
bound
in
insb
in
out
push
add
je
adc
or
cmp
cld
jge
das
mov
psllw
subb
xchg
aaa
mov
inc
cmpsb
fsub
outsb
stc
inc
movsl
pushf
jnp
sub
and
jge
dec
mov
out
dec
inc
rcr
aad
out
adc
das
add
add
in
int3
cmpl
insl
dec
test
jo
int
jb
adc
je
mov
pop
mov
aas
rorl
cs
idiv
push
adc
sub
in
imul
xchg
sub
bound
jge
cmc
dec
sbb
ss
popf
loop
inc
lea
pop
rcrl
cmpl
cmp
mov
inc
or
xor
mov
sub
mov
mov
push
adcb
mov
mov
mov
lods
push
sub
jb
jne
pusha
dec
pushl
sub
test
pop
mov
or
cli
addl
sbb
mov
and
mov
or
lea
dec
les
rep
and
jle,pt
sbb
fld
push
xchg
cmp
jle
imul
repnz
lds
xchg
xchg
inc
pushl
test
stc
mov
mov
aam
shlb
xor
addl
mov
inc
sbb
xor
into
adc
xor
fisttps
sbbb
insl
das
test
dec
mov
test
jl
mov
mov
les
out
lock
movsl
in
xchg
imul
fnsave
cmp
test
negl
inc
cmp
push
push
ds
and
mov
cmp
mov
push
mov
subl
cli
push
add
push
pop
push
je
out
jecxz
mov
and
je
popa
mov
inc
pop
cmp
test
jbe
stc
cmc
jb
pop
pop
inc
test
pop
dec
mov
inc
push
addr16
test
push
jnp
arpl
mov
and
emms
sbb
jno
push
adc
adc
movsl
adc
out
out
fst
jo
sbb
inc
mov
repz
xchg
sbb
push
stos
dec
jg
stos
xchg
jl
jp
xor
add
xchg
cmpl
repz
cmp
int3
push
stos
dec
in
sub
jle
add
sbb
mov
push
fsubrs
sub
adc
cmp
push
xchg
insb
lret
shrb
es
push
inc
and
sbb
bound
mov
cmp
flds
hlt
mov
xchg
cmp
or
cmp
inc
add
and
outsb
jp
push
out
pushf
or
mov
js
inc
xchg
fstpt
cwtl
and
inc
push
mov
mov
inc
sub
xor
xor
ficompl
cmp
cmp
movsb
lret
nop
xor
dec
inc
push
pop
inc
cwtl
add
outsb
xchg
gs
ret
ds
push
mov
jmp
jge
dec
jno
pop
test
xchg
dec
xchg
add
loope
ja
cli
andb
out
mov
dec
sahf
rolb
ret
and
decb
daa
sub
or
aas
jle
repnz
jns
push
sub
jecxz
sub
pushf
xor
jo
and
xor
sbb
and
test
mov
pop
xor
repz
mov
and
mov
and
sbb
mov
xchg
outsl
jp
jb
xorb
mov
xchg
jnp
outsl
cmp
lock
loop
cwtl
stc
xor
push
xor
cmp
repnz
jae
pushl
cmpsl
lock
ja
add
aas
outsl
xchg
cmpsl
into
push
add
leave
add
mov
mov
sbb
inc
sti
jmp
inc
pop
test
call
loop
pop
dec
inc
jp
lods
inc
test
test
dec
mov
rcrb
xor
lods
mov
lock
into
or
jne
cmp
mov
xchg
cmp
dec
ret
aaa
and
loope
call
xchg
imul
or
clc
xchg
popf
fwait
sub
xor
jle
sarl
ljmp
insb
out
push
decl
mov
pop
jne
push
fistps
gs
and
mov
lds
add
test
xor
and
dec
pop
jmp
inc
add
fcmovbe
cmpl
mov
ss
ret
lahf
adc
add
adc
repz
mov
adc
and
fs
mov
inc
rcrl
shll
stos
xchg
movsb
push
mov
in
loope
jl
arpl
lret
aaa
pop
jp
sub
fs
lea
sub
sbb
shll
insl
stc
and
mov
xor
xchg
or
out
lret
mov
decb
rolb
jno
xchg
mov
rcll
or
pusha
xchg
pop
inc
mov
lcall
popf
js
lea
bound
stos
inc
stos
in
mov
aad
add
in
mov
inc
insb
mov
insl
mov
pmaxub
jbe
pop
push
add
sti
cltd
lahf
or
mull
daa
xchg
jns
ss
add
push
in
int
xchg
jp
dec
or
cwtl
pop
adc
test
pop
add
adc
jb
adc
loopne
call
ss
bound
add
outsb
dec
sub
xchg
aad
xor
mov
mov
xchg
sbb
pop
cmpsb
push
push
jb
fs
stos
adc
or
cs
aas
loope
mov
mov
cmp
and
sbb
xor
sub
inc
sbb
adc
fisttpl
cmpsl
jno
push
fs
gs
or
mov
ds
out
into
mov
roll
ss
and
pop
repnz
lret
lods
int3
cmp
xchg
icebp
add
mov
and
cld
jge
inc
in
rorb
aam
push
push
cmp
sub
fisubl
mov
stos
jnp
cmp
orl
into
ljmp
leave
cmpsb
dec
mov
push
sbb
movsl
mov
ss
fidivrs
arpl
sub
loope
test
sahf
cmpsl
insb
fcmovu
mov
push
enter
adc
in
pextrw
cmp
mov
inc
xchg
popf
adc
adc
cltd
xchg
fstpt
sbb
mov
and
mov
insl
es
scas
pop
nop
iret
loopne
roll
dec
mov
xor
xchg
dec
cld
mov
dec
xchg
aaa
sbb
fs
mov
das
lds
sub
imul
cmpl
out
lods
and
je
js
pop
loope
jbe
push
push
xor
mov
sbb
jnp
pop
jo
lret
mov
xchg
mov
cmc
xchg
sub
aaa
mov
push
mov
repnz
faddl
subb
and
sub
add
xchg
in
or
movsl
lods
popf
imul
rorb
scas
sbb
test
rcrb
nop
imul
stos
add
pop
mov
sub
sbb
lcall
decb
or
jmp
mov
mov
js
pextrw
dec
mov
dec
xchg
fisttpll
mov
push
pop
iret
leave
jns
lret
jge
fdivrl
jmp
jge
test
arpl
pop
bnd
or
add
dec
and
adc
sub
sub
mov
lds
out
insb
xlat
mov
and
mov
push
ja
push
outsb
sbb
notb
fcomps
xchg
jo
cmpsl
mov
in
inc
enter
insb
cwtl
fmull
push
out
jbe
sbb
mov
jnp
xchg
push
jns
dec
push
cmpsl
stos
out
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
xor
adc
addb
mov
xchg
repz
pop
outsb
lods
jb
mov
xchg
insl
aaa
dec
cmp
test
pop
mov
movsb
or
nop
fstl
lods
in
ljmp
dec
add
test
pop
jmp
adc
scas
aam
jle
inc
mov
fdivs
mov
stos
in
js
mov
scas
sub
dec
in
mov
imul
scas
divl
nop
mov
xor
cmp
pop
push
fldt
xchg
or
add
test
mov
icebp
xor
int
jo
and
cmpsb
andl
and
push
mov
jnp
push
pop
in
int
decb
out
rolb
shl
addr16
sbb
cmpsl
fptan
lds
xchg
fadd
push
add
or
mov
out
xchg
adc
scas
adc
inc
pop
shrb
mov
repnz
hlt
pusha
ds
push
sbb
pop
add
cs
mov
sahf
xchg
dec
test
and
out
imul
and
mov
out
or
sbb
pop
mov
cmp
mov
mov
testb
cmp
roll
ds
movsb
lret
sbb
lods
sbb
ja
sbb
cmp
sbb
xchg
mov
cmp
xchg
xchg
cmc
or
data16
rcrl
loope
pop
xchg
pushf
jge
test
push
mov
lahf
pop
int
or
jae
sbb
fs
push
out
dec
in
xor
push
clc
popf
xor
add
lea
test
mov
stos
adc
orb
cwtl
jnp
push
or
mov
adc
pop
jle
cmp
test
push
inc
xchg
pop
adc
flds
mov
outsl
test
mov
lods
movsl
push
push
pushf
jne
dec
xor
loopne
cmp
and
imul
jp
mov
mov
mov
push
movsl
or
test
pop
cmp
aam
mov
pusha
aas
fildl
dec
sub
shrl
and
int3
adc
xchg
sub
out
sub
xchg
dec
mov
movsl
fidivrl
add
jecxz
mov
dec
pop
mov
mov
push
leave
notl
xor
hlt
sbb
test
sahf
xor
sub
sbb
mov
les
cmp
mov
ficompl
dec
mov
dec
sbb
fcomps
xchg
repnz
imul
or
push
adc
popa
pushl
adcb
mov
pop
fstp
jnp
loopne
push
cmp
mov
mov
lea
jp
add
fcomps
cmp
push
icebp
fsubrp
jp
int
das
mov
pop
mov
cld
test
cmp
xor
int
push
cmp
adc
push
push
mov
cmpsb
jecxz
loop
push
cld
inc
sbb
repz
sbb
mov
lea
cmp
cmpsl
jge
jecxz
mov
xchg
xchg
leave
insl
out
mov
add
ss
loope
in
loope
pop
leave
push
incl
cmpsb
lock
es
inc
add
sbb
out
jecxz
iret
shrb
movsb
sbb
sub
nop
dec
mov
fs
adc
xchg
mov
jg
daa
stos
cmc
outsl
push
pop
push
cmp
enter
sarl
jnp
dec
pop
jge
dec
xor
jecxz
rol
and
lock
and
cmp
nop
call
push
adc
push
mov
vandpd
and
mov
adc
insb
lea
push
test
xor
or
lods
cmp
push
out
mov
fcomps
xor
les
mov
in
mov
mulb
xor
jle
lds
push
ffree
mov
cmp
in
inc
cmp
lret
dec
xor
mov
dec
imul
and
jmp
xchg
sbb
sub
shlb
mov
pop
add
jle
mov
popf
adc
push
inc
xchg
mov
xor
mov
les
icebp
ffreep
test
jno
dec
decb
push
xchg
and
andb
xor
cmp
cmp
mov
cmpl
jl
mov
stos
jae
cmp
xchg
jo
mov
mov
popf
shr
sub
insb
std
fsubr
repnz
inc
scas
inc
inc
fcoml
clc
int3
fstl
or
cmc
movsb
in
addr16
dec
dec
loopne
xchg
ljmp
inc
sarl
pop
inc
test
jecxz
stos
xchg
in
inc
fsubl
sbb
jl
aas
and
xor
fnstcw
xchg
std
inc
outsb
push
pushf
jnp
inc
sbb
mov
adc
stos
hlt
je
pop
cmpsl
cmp
adc
lcall
imul
add
dec
cmpsb
ja
arpl
push
test
movsb
mov
xchg
mov
lock
adc
mov
bound
jno
or
rol
stc
lret
jns
test
out
lahf
clc
push
test
jmp
int3
mov
ja
fsts
adc
dec
inc
pop
scas
loope
add
mov
add
push
lods
xor
mov
ror
popa
aaa
jg
pop
lcall
je
dec
xor
arpl
lcall
xchg
lods
sti
shl
sub
and
ret
das
adc
outsl
mov
in
dec
push
sbb
ja
leave
mov
shrb
and
stos
ret
es
cmc
add
call
hlt
mov
add
lods
sahf
dec
jecxz
and
or
inc
cmpsl
sar
out
rorb
add
pop
lock
mov
mov
out
loop
jge
inc
and
call
scas
loop
movl
das
lahf
repz
cmp
andl
adc
fidivrl
int3
insl
cmpb
sti
mov
das
leave
jg
mov
push
hlt
inc
sub
popl
push
adc
mov
adc
push
pop
xchg
xchg
out
int3
imul
or
xlat
dec
sbb
xchg
test
xchg
pop
stos
mov
fbstp
fcoms
sahf
mov
scas
leave
and
xchg
insl
data16
pop
fistps
stos
jne
addr16
sbb
iret
jae
jno
lods
dec
pop
adc
rolb
cmp
sbb
adc
mov
pop
lcall
push
xor
fsts
je
push
std
xchg
or
jne
xchg
sub
lds
fwait
inc
pop
imul
xchg
imul
mov
jecxz
pop
mov
xchg
scas
inc
or
lret
call
imul
in
mov
div
mov
jns
xor
in
and
outsb
dec
push
sbb
call
mov
in
jbe
in
push
loope
mov
je
sbb
jmp
cmp
mov
out
insl
cwtl
jp
sbb
mov
scas
xchg
cmp
js
in
call
push
mov
push
test
outsb
jae
xor
mov
pusha
cli
add
add
xchg
mov
lods
lods
push
jp
ss
dec
jg
js
and
fildl
mov
lods
shl
outsb
sub
jo
sub
in
enter
push
jle
lcall
push
in
int
ja
out
jecxz
add
lods
cmp
in
loop
mov
jle
sbb
mov
jg
adc
sbb
sbbl
add
aad
sbb
add
pop
imul
cwtl
xor
xchg
push
js
mov
xor
into
cli
sti
ja
enter
jns
sub
jp
sar
popf
mov
out
xchg
pushf
mov
out
inc
fnsave
sub
adc
jbe
xchg
les
sbb
in
xchg
push
in
rcl
in
adcb
jbe
enter
das
and
inc
inc
adc
mov
movsb
sub
or
mov
mov
mov
cmpsl
adc
push
in
xchg
fdivrl
add
mov
sti
ds
pop
fimuls
cmc
and
mov
repnz
inc
stos
or
inc
mov
cmc
sub
sub
test
sub
adc
mov
cmp
or
pop
ss
adc
inc
lret
jae
imul
xchg
xchg
inc
adc
mov
jl
mov
es
xchg
imul
and
insb
pop
das
dec
repnz
add
jne
shlb
jns
scas
cli
icebp
enter
cwtl
out
lock
push
aaa
lods
mulb
aam
movsb
xor
add
in
ret
jmp
mov
add
dec
push
je
mov
mov
mov
jae
orb
add
dec
fcomi
mov
mov
test
jle
push
and
mov
inc
clc
in
mov
lock
popf
and
adc
test
mov
scas
int3
insb
mov
add
lock
call
xlat
popf
ret
insb
outsb
xchg
or
and
push
stos
pushf
jecxz
test
or
mov
push
js
lock
jbe
and
adc
fidivl
movl
mov
xor
mov
cmp
or
or
mov
push
mov
hlt
data16
pop
or
ds
cmp
jecxz
es
sbb
aaa
mov
adc
sub
mov
test
adc
mov
xchg
enter
ret
fcoml
fs
jne
pushf
mov
lahf
into
jl
loop
je
lods
cmpsl
movsl
inc
ret
and
repnz
mov
int
adc
inc
or
movsb
xchg
inc
mov
shll
adc
shll
mov
shlb
sbbb
sbb
dec
push
mov
fiaddl
rcrl
xchg
mov
push
mov
cmc
add
and
inc
icebp
mov
fidivs
cmp
inc
fldenv
shlb
jbe
aam
pop
add
dec
jnp
lock
and
cmp
jmp
mov
fisttps
les
pop
sub
adc
call
fwait
jmp
rorb
data16
lds
stos
xchg
sub
mov
out
inc
xchg
sub
xchg
incl
mov
push
jno
mov
jne
push
jle
xlat
movsl
adc
cmc
int
xchg
bound
pop
or
mov
outsl
push
push
sbb
div
dec
fbstp
jp
mov
or
sarb
xlat
sbb
cmc
mov
shlb
xor
mov
fcomps
testl
repz
cmp
test
clc
mov
daa
dec
pop
dec
xor
push
xchg
xor
push
adc
pop
mull
lods
and
ds
mov
loopne
loopne
dec
notb
mov
sub
je
nop
int3
lods
mov
fdivrl
mov
notl
sub
cmp
test
pushf
cmp
pop
cmc
jae
mov
push
sbbl
fcomps
add
cmp
imul
bound
test
test
les
xchg
cmp
lock
jb
inc
jp
mov
pushf
xchg
jno
push
adc
movsb
negb
sub
pop
mov
push
jge
push
mov
mov
sub
lea
in
rcrl
lea
mov
mov
push
xchg
or
je
adc
lret
aaa
jg
mov
pusha
addl
fs
xchg
sbb
rorb
cmc
sbb
adc
cmp
pop
cmpsb
cltd
push
mov
jae
adcl
jae
scas
aas
pushf
push
cmp
inc
frstor
repz
mov
and
and
xlat
shrl
or
or
cltd
xlat
mov
or
jle
clc
sub
rorl
lret
sub
outsl
test
cmp
and
xchg
in
sub
adc
dec
lcall
popf
in
aaa
mov
xor
pop
ds
push
int3
pop
xchg
pop
lsl
in
scas
mov
rcrb
cmp
mov
flds
int3
sbb
adc
sub
cmp
mov
enter
pop
fcmovbe
aad
or
inc
sbb
sbb
sub
movsb
dec
aas
loope
sbb
sbb
mov
aas
dec
push
cmp
fwait
in
das
and
sub
mov
jns
fs
dec
xor
jge
sti
xchg
sbb
jecxz
scas
aas
lods
fisubl
loope
pusha
lods
sbb
fcompl
mov
push
aam
jne
mov
test
add
mov
or
and
scas
ja
inc
or
inc
fsubs
push
arpl
jo
mov
jae
inc
jge
clc
js
jae
adc
or
fxam
mov
jb
jecxz
js
imul
shufps
fsubrs
insb
mov
or
clc
sbb
mov
into
es
push
lret
sbb
lds
pop
inc
fwait
dec
pop
repz
sti
inc
mov
test
clc
loope
sub
aaa
ret
nop
cmpsl
fldt
xchg
in
out
cmp
call
sbb
stos
mov
mov
xchg
dec
call
aam
mov
or
je
imul
insb
int3
cmp
cmc
push
or
jno
mov
jno
jo
dec
daa
inc
push
je
push
pop
leave
and
or
fwait
in
data16
int3
pop
icebp
cmp
and
lcall
jb
fstps
dec
es
int
jle
loopne
sub
push
add
adc
jg
xchg
lods
xor
or
sbb
arpl
leave
faddl
jmp
inc
push
sbb
int3
push
mov
stos
pop
mov
inc
adc
xchg
insl
movsl
cwtl
xlat
jb
inc
out
into
into
or
mov
into
mov
loopne
add
imul
inc
pop
jp
stos
loopne
jle
mov
add
push
mov
fldcw
pop
jecxz
dec
jae
addr16
mov
push
out
in
jmp
cmp
xor
xor
jo
pop
imulb
sbb
add
jge
pop
push
jae
adc
dec
mov
fcoml
stos
pop
add
adc
dec
outsb
dec
mov
mov
aam
sbb
or
push
xchg
idiv
mov
sub
shll
out
push
lea
mov
lcall
icebp
sbb
lds
xchg
push
jl
fwait
in
cltd
dec
stos
cmp
mov
cmp
mov
mov
dec
aam
mov
jmp
pop
push
les
dec
fbstp
mov
imulb
call
jne
in
mov
push
fimuls
insb
jbe
adc
mov
faddl
addr16
mov
fildl
psubusb
mov
loope
mov
rorb
inc
popf
pop
aas
icebp
pop
cmpb
push
fisubrl
xor
sub
mov
sbb
inc
shrl
sbb
push
pop
inc
and
outsl
jmp
mov
dec
aaa
xchg
inc
shl
mov
mov
into
idiv
test
addb
inc
cld
popf
ret
int3
mov
cmpsl
fs
arpl
stc
lea
xchg
mov
mov
sub
xor
hlt
cmpsb
mov
pop
lahf
jo
cwtl
leave
aad
jecxz,pn
notl
fwait
cmp
aam
jb
jae
or
lret
xor
adc
push
adc
inc
add
cwtl
test
jno
jl
sbb
imul
mov
aad
cmp
jp
shr
repnz
pop
aaa
adc
out
add
shlb
rcrb
or
mov
ret
movsb
rcrl
lret
pop
mov
cmpsb
push
popf
xorl
cmc
test
or
mov
sbb
cmp
inc
cs
xchg
dec
cmp
or
outsb
or
das
scas
xchg
add
inc
pop
jle
or
mov
jns
xor
adc
mov
and
dec
mov
mov
jg
dec
loop
cmp
cmp
leave
fcmovnu
pop
xor
mov
loope
aad
xchg
icebp
into
and
mov
data16
testb
mov
stos
cmp
inc
jne
sub
cmp
inc
imul
cltd
mov
push
test
mov
fneni(8087
neg
xlat
xlat
lods
stos
or
fs
lcall
pop
adc
adc
or
lods
cmp
dec
xor
lea
icebp
in
pushf
and
js
xlat
outsl
pop
jns
fwait
in
pusha
or
pushf
jbe
sub
je
mov
fldt
push
push
xchg
lds
sarl
dec
mov
dec
in
cmp
mov
lret
pushf
mov
push
sub
cmpl
sti
or
mov
sub
add
adc
bound
loop
fsub
dec
movsb
addb
mov
outsl
xchg
loop
fs
push
in
and
lcall
xchg
pop
inc
stos
out
xchg
test
sbb
add
mov
mov
push
dec
jne
cltd
rcrb
xorb
dec
pop
push
xor
test
xchg
cltd
jns
sub
ficoms
or
test
clc
jecxz
mov
mov
cmp
leave
mov
inc
pop
cmpxchg
mov
mov
idiv
xchg
dec
push
cmp
pushf
pusha
xchg
sub
movnti
mov
dec
jo
dec
sti
cmp
dec
jmp
xchg
outsl
push
xlat
rcr
rcrl
inc
clc
test
push
adc
jl
insb
sub
sub
add
fwait
jp
sbb
pop
loopne
pop
dec
ret
out
stos
scas
repnz
not
lock
push
or
movsb
in
push
jbe
push
nop
jecxz
jmp
xchg
push
xor
pop
add
add
jne
sbb
inc
mov
imul
adc
push
stos
mov
pop
dec
popa
cltd
push
das
add
and
inc
lret
adc
es
push
mov
lods
fstl
sub
jge
call
dec
ja
iret
lret
or
push
and
jo
lcall
jnp
xchg
lods
outsl
outsb
cmpsb
out
pinsrw
adc
ret
and
push
xor
out
mov
inc
loopne
push
adc
and
or
cmpsl
pop
loopne
dec
or
mov
lods
push
cld
les
sub
push
mov
jbe
jg
movsl
mov
shl
lds
loope
jae
push
mov
lea
out
cs
pop
or
jae
subb
push
mov
arpl
push
out
add
enter
ss
stos
les
or
pop
jp
xchg
jb
mov
inc
mov
pop
js
xchg
sarl
pop
loopne
inc
aam
fisubs
inc
add
sub
loopne
mov
rcll
sub
fistpll
in
pop
ds
loope
jbe
inc
popa
outsl
sub
xchg
pushf
push
loope
lods
sub
in
sub
decl
sub
xchg
call
aad
sti
aas
out
cmp
insb
lods
imul
mov
lods
inc
xor
inc
insb
sub
gs
in
hlt
and
test
inc
push
mov
sub
adc
and
divb
mov
and
and
rorb
and
int3
pushf
xchg
mov
add
push
push
mov
loope
sbb
in
jecxz
push
movsl
scas
movsb
inc
add
mov
xlat
mov
push
jp
arpl
xchg
rcrb
adc
sub
and
pop
xchg
gs
arpl
pop
jb
push
divb
push
mov
xor
loope
pushf
add
dec
pop
inc
nop
pop
fisubl
ds
or
les
shll
out
push
xchg
jge
xchg
cmc
dec
mov
int3
test
cmpsb
xchg
gs
and
ficomps
and
mov
test
fisttpl
sbb
rcll
rorl
adcl
jnp
add
sbb
jg
hlt
mov
adc
movsb
xchg
inc
mov
dec
aad
dec
cmp
add
mov
mov
jns
aas
repnz
stc
int3
cmpsb
fnsave
repnz
sub
cltd
xor
lret
mov
push
stos
leave
ja
pop
and
inc
add
pop
push
sbbl
out
pop
cmp
jle
add
add
mov
push
pop
mov
jae
mov
add
test
js
jge
pop
mov
mov
dec
mov
filds
mov
pop
dec
sbb
push
xor
push
insb
or
in
rcl
sub
xchg
push
aas
ret
stos
icebp
jp
adc
and
mov
mov
ret
loope
xor
arpl
sub
ss
dec
fwait
pop
lcall
push
mov
cmp
mov
xchg
ficoml
xchg
cmp
pop
mov
out
fdecstp
lock
xlat
push
test
add
imul
push
mov
jp
adc
xchg
leave
mov
loope
adc
into
mov
stos
data16
cmp
jo
daa
shl
incl
push
ja
fsubrs
pop
mov
das
fisubrs
nop
lcall
or
jp
int3
mov
sbb
fcmovb
sbb
push
dec
sbb
les
xor
lret
jae
inc
mov
lock
xor
adc
mov
jae
dec
cmp
jne
in
mov
push
aas
jbe
inc
sbb
aaa
out
fnsave
out
push
fmull
jb
arpl
mov
jae
daa
notb
les
jg
cwtl
jl
iret
push
sub
enter
repnz
add
test
and
pop
sbb
call
fisttpl
mov
rol
mov
mov
dec
jnp
lea
or
sub
shr
and
sub
imul
add
mov
clc
dec
pop
jno
mov
push
call
mov
pushf
push
mov
adc
movsb
cwtl
cmpsb
xchg
js
mov
pop
xor
outsl
les
rcrl
fstl
push
add
dec
mov
incl
push
fsincos
pop
fisubrl
sbb
push
insl
mov
testl
mov
dec
stc
xchg
mov
add
rcr
testb
adc
adc
pop
mov
lret
xchg
inc
mov
mov
sub
addl
icebp
test
mov
or
dec
in
shr
mov
dec
xor
xchg
imul
dec
lods
sub
in
sub
sti
and
and
repnz
aas
add
pop
mov
adc
mov
shll
aad
mov
push
push
pusha
mov
adc
push
cmp
test
shl
lds
mov
std
mov
mov
daa
out
sbb
jne
xchg
outsl
in
sub
jge
xchg
int3
imul
stc
sbb
outsb
pop
lret
pop
icebp
sti
sbbb
and
in
sbb
push
pop
pop
decb
push
testl
dec
scas
jnp
add
gs
imul
loop
fcomp
fcmovne
or
add
inc
push
push
fildll
into
fs
stc
out
mov
push
mov
sub
mov
jnp
jne
fadds
push
fbstp
cmp
movsl
xchg
cmp
push
cltd
std
jns
xor
ds
cli
inc
cmp
and
insb
test
sub
pop
xlat
mov
jecxz
fcmovnb
insb
sbb
jne
aam
and
push
pop
popf
inc
imul
pop
pushf
fidivl
jp
shll
ret
shll
aaa
hlt
enter
scas
rcrb
pop
aam
sbb
mov
repz
in
push
xor
cltd
sbbl
movsb
loop
int3
mov
aas
mov
mov
movb
je
test
sbb
pusha
xlat
insb
pop
and
cmp
bound
ss
sti
inc
das
or
add
outsb
cmp
fs
xor
mov
pop
pop
insb
inc
mov
mov
push
bound
jl
push
jo
stc
lret
out
std
andl
testb
cmp
ljmp
cmp
add
push
pop
push
lock
xchg
or
int3
xor
xor
dec
repz
adc
repz
aaa
sbbl
push
xchg
jo
mov
xor
inc
in
or
cmpsl
fistpll
cltd
int
fidivrl
sbb
insb
pop
mov
jno
fcmovb
lods
and
outsb
push
cltd
popf
inc
vpminsw
mov
and
cld
aam
sti
xor
mov
mov
fstpt
cld
pop
mov
mov
enter
or
or
lahf
inc
adc
adc
sarb
pop
out
aam
adc
in
lods
sbbb
inc
in
fcoms
popa
enter
push
or
dec
mov
ja
insb
inc
popa
shlb
out
mov
sbb
and
loope
clc
js
loop
jl
adc
mov
adc
daa
inc
push
mov
cmp
or
test
mov
fwait
mov
rorl
jmp
pop
ss
loop
shll
mov
sarl
and
jne
cmp
jge
sbb
cmp
pop
call
xchg
out
inc
sub
lahf
mov
sbb
lcall
dec
ret
leave
mov
cmpsl
xchg
cmp
testb
or
push
xor
inc
mov
gs
push
xor
fadds
mov
xchg
out
sbb
lret
or
mov
adc
sub
inc
idivb
lcall
cltd
xor
aaa
mov
loopne
inc
mov
out
cmpsb
dec
js
pop
sbb
enter
push
es
std
testl
push
loopne
xor
out
insl
ljmp
sti
sbb
push
jg
cld
mov
je
or
test
pop
ljmp
ret
je
cmpsl
popf
mov
mov
rcr
and
dec
ficomps
mov
mov
and
dec
popl
mov
inc
push
imul
dec
sbb
mov
inc
xor
mov
leave
cmp
in
push
dec
lahf
lods
icebp
add
xchg
pop
out
xor
add
add
and
push
mov
mov
pop
sub
std
enter
orb
rorb
adc
mov
jecxz
dec
in
jmp
sub
into
mov
add
push
sub
xor
cmpsl
push
push
loopnew
in
in
cli
divb
out
cmp
push
adc
cmpsb
jg
xchg
mov
xchg
pop
idivb
pushf
popa
stc
scas
outsb
pop
fwait
pop
ds
int
ret
pop
mov
cmp
movb
and
scas
lds
je
lods
adc
xchg
cltd
jne
add
add
hlt
outsl
fldt
push
pop
sub
cli
push
movsl
ja
pushf
scas
fwait
mov
push
xchg
dec
mov
sub
mov
jb
lds
adc
filds
cltd
ficomps
or
shlb
in
dec
cmp
or
fnstenv
dec
xor
cmp
jnp
stos
add
sub
scas
inc
and
mov
stc
dec
mov
enter
lods
lods
mov
arpl
pop
dec
decl
push
mov
sbb
out
jge
add
negb
sub
je
sub
mov
jns
hlt
xchg
push
stos
cltd
pushf
sahf
pop
or
adc
lods
push
adc
xchg
jb
pop
sub
xor
je
rep
xor
cltd
repnz
sbbb
add
and
jbe
inc
idivl
jne
rolb
cltd
mov
repnz
clc
pop
iret
lea
jb
dec
ret
es
hlt
jge
mov
in
imul
repnz
dec
movsl
dec
mov
aam
and
dec
test
js
movsb
test
fld1
mov
sub
ljmp
rcl
mov
lcall
inc
in
outsb
pop
js
dec
add
jecxz
or
cmp
loop
jb
and
push
sbb
int3
insl
pop
das
int
stos
xchg
stos
xchg
jg
imul
push
sbb
inc
fidivrs
mov
js
mov
daa
xchg
loop
sub
in
sub
dec
loopne
mov
int3
jnp
jae
jle
mov
sbb
or
fs
mov
aam
daa
and
test
mov
ds
jb
jmp
push
adc
adc
xchg
adcl
jno
pop
mov
repz
or
hlt
inc
or
cmpsb
ja
adc
shr
or
pop
sub
test
sti
stos
pop
mov
repz
cmp
sub
divl
xchg
jb
add
or
adcb
mov
ror
call
in
or
fdivl
aam
or
or
xchg
mov
jle
scas
sbb
fwait
jnp
sub
pop
dec
xchg
lea
cmpsb
lret
mov
test
cmp
and
jbe
jae
xor
loop
cmpsl
dec
call
cmp
push
lods
or
cs
cmp
lret
xchg
mov
outsb
orb
fwait
ss
adc
int
mov
cs
dec
lcall
insl
sub
imul
pop
loop
dec
or
xchg
jp
xorl
aad
pop
mov
lea
out
dec
mov
dec
cltd
outsl
mov
mov
lock
popa
inc
das
mov
jo
mov
outsb
sbb
icebp
sbb
adc
cmp
xchg
mov
insb
xchg
fisttpl
lahf
fnstenv
scas
sbb
mov
adc
fidivl
ja
ficoml
add
jnp
mov
lret
cltd
movsb
loopne
gs
vmwrite
cld
mov
or
jbe
in
or
arpl
xor
pop
bound
and
cli
sbb
jnp
lods
rolb
mov
rcrl
rcrl
jnp
xchg
in
insb
int
test
dec
dec
loopne
xor
pop
mov
clc
mov
ss
xchg
aad
dec
mov
fucom
cmp
dec
jle
mov
mov
sub
iret
mov
cmpsl
das
mov
iret
fwait
cmpsb
xchg
fsubl
add
movl
rcr
mulb
or
xchg
enter
sarl
insb
ficomps
je
addl
dec
inc
js
ljmp
and
andb
scas
cmpsl
push
popf
testl
pop
cld
stc
cmp
icebp
stos
sub
lods
test
jp
mov
mov
push
push
cmpsl
mov
mov
fbstp
mov
mov
jne
push
push
arpl
into
pop
test
test
mov
inc
cmp
mov
iret
pushf
jl
inc
and
daa
add
movl
iret
addr16
or
cmp
push
lret
sub
sahf
lods
adc
rorl
pop
movsl
mov
insl
xchg
outsb
sub
cvtpi2ps
enter
std
scas
mulb
and
push
cmp
movsb
rclw
sub
add
movsl
sbb
shrb
push
pop
adc
xchg
push
mov
mov
loope
je
scas
push
xor
sarl
dec
cmp
pop
mov
push
mov
in
pop
fidivs
pop
sub
cld
mov
mov
jne
mov
xchg
mov
inc
xchg
divb
loope
imul
imulb
shrl
hlt
xlat
push
push
add
ljmp
scas
ds
sub
fwait
adc
test
jne
xor
adc
ljmp
add
outsb
mov
pop
ss
aam
cmp
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
cld
xor
outsl
mov
addl
addl
arpl
out
xlat
or
inc
and
scas
pushf
inc
pop
mov
add
aas
or
inc
addb
jno
add
mov
into
jmp
jl
inc
mov
fstl
fstps
rolb
and
sbb
rorl
pushf
mov
and
andl
ror
ljmp
int3
and
jge
and
dec
xchg
imul
mov
in
jmp
jg
xchg
dec
lea
ljmp
sbb
adc
sub
xchg
sub
dec
je
test
xor
rclb
xchg
adc
xor
jle
aas
leave
mov
adc
xor
in
jbe
std
add
pusha
and
popf
jbe
mov
ljmp
pop
fidivl
ljmp
push
jne
mov
in
std
ljmp
lahf
into
xchg
mov
or
mov
cmp
es
repnz
jne
inc
test
xor
mov
mov
popf
and
and
fnstcw
sbb
lret
sbb
mov
stos
js
xchg
icebp
je
ljmp
insb
jae
outsl
leave
data16
jmp
pop
es
push
push
aas
or
in
jo
and
pop
imul
das
jmp
cmpsl
aaa
xchg
sbb
lahf
xorl
xchg
mulb
aam
not
mov
out
test
pushf
loope
in
bswap
pop
or
or
ds
jmp
push
sub
jl
mov
mov
repnz
cs
pop
jne
lahf
mov
into
rcrl
fsubr
cmp
xlat
push
push
rcr
insl
lcall
pop
dec
or
ds
sub
xchg
sub
sbb
out
into
xchg
sbb
fdivrp
mov
pop
mov
pop
lea
fstps
xchg
fiaddl
fmul
mov
mov
imul
cmp
insl
out
in
pop
aad
in
fs
rcr
fcompl
jmp
mov
sub
sahf
clc
add
iret
in
lods
fimuls
pop
dec
pop
push
jne
push
or
movsl
out
out
pop
adc
jecxz
aad
lcall
pop
or
lret
and
iret
push
rcrl
jb
test
movsl
xorb
xlat
add
outsl
mov
cmp
leave
stc
mov
sbb
xor
lret
into
lcall
push
inc
lea
cmp
inc
aad
notb
mov
pop
lcall
dec
fnsave
and
xchg
rolb
and
in
popa
outsl
pop
leave
cs
pop
dec
lods
fwait
push
jbe
or
mov
mov
dec
adc
lods
aam
sahf
scas
subb
or
lods
cmp
adcl
cmc
pop
das
es
mov
lcall
jle
jp
rcrb
push
sub
call
orps
dec
or
stc
inc
pop
mov
lea
aad
cmpsb
pop
pop
sbb
aam
jle
rolb
leave
mov
hlt
jbe
cli
and
leave
into
hlt
orl
hlt
nop
jb
es
fiaddl
dec
mov
mov
pop
or
jmp
sbbb
mov
js
push
adc
nop
insl
mov
lock
mov
push
fbld
outsb
neg
dec
ror
xlat
data16
aam
leave
out
movsl
ss
mov
popaw
xor
mov
mov
adc
mov
scas
dec
mov
in
inc
mov
rolb
aas
subb
cmc
outsb
test
or
sarb
lahf
cmp
std
xchg
in
mov
loope
mov
repz
sub
lret
mov
jecxz
hlt
scas
mov
xor
fimuls
jnp
ds
cmp
push
xchg
mov
pop
sbb
push
imul
fsubrs
stc
fldcw
cmp
shll
jge
jp
repnz
and
mov
je
pop
fldcw
sbb
rcrb
push
into
std
roll
pusha
daa
in
stos
jae
or
ss
adc
jmp
call
dec
cltd
xor
add
les
adc
bound
mov
cmp
jns
pop
dec
pop
mov
mov
jle
pop
sub
icebp
sbb
test
sub
cmpsl
push
xorl
lret
movsl
je
aas
xchg
shl
add
mov
adc
and
test
lods
inc
cli
mov
adc
test
add
in
sbb
adc
sub
fsubrp
pop
xchg
mov
out
stos
jb
adc
sbb
aas
in
inc
push
fmull
or
out
cmpsl
dec
mov
bound
inc
and
ret
stos
lock
dec
mov
out
cwtl
adc
or
pop
lods
hlt
fcmovu
loopne
out
jg
sti
mov
mov
das
dec
loopne
les
rclb
mov
or
and
jge
add
mov
sub
xor
mov
push
pop
sbb
std
or
loope
sbb
mov
pusha
ljmp
imul
dec
repz
inc
xchg
fisttpl
mov
in
or
repnz
inc
ljmp
fcomps
jp
imul
sub
sbb
loope
imul
jae
push
xor
fcomps
xchg
jae
lahf
jae
sub
mov
dec
mov
mov
in
cmc
pop
iret
and
mov
inc
jne
fimull
push
xlat
ffree
loopne
dec
rol
sub
push
dec
sub
mov
push
sbb
js
ss
imul
std
fisttpll
cmp
imul
mov
pushf
pop
and
inc
js
popf
arpl
sbb
enter
ljmp
or
movsl
push
test
mov
stos
sbb
loopne
outsb
dec
pop
jge
jne
mull
fdivs
dec
scas
push
loop
arpl
addb
push
out
popf
jo
or
xor
out
addl
mov
addr16
mov
jo
adc
in
aas
rcrb
out
dec
mov
ret
adc
test
sbb
sub
xor
stos
lcall
lret
mov
scas
xchg
xchg
add
and
push
dec
pop
pop
push
jnp
sbb
clc
fisubrl
incl
adc
dec
mov
and
int
and
push
out
aam
inc
or
push
adc
dec
and
mov
add
inc
popl
xor
cmc
push
xchg
repnz
jmp
fxam
dec
jb
and
arpl
xchg
out
fwait
pop
call
aaa
ds
jle
fwait
cmp
mov
das
idiv
cwtl
cmp
push
dec
out
xchg
cmp
int
int3
mov
push
pop
int3
jmp
dec
repnz
jmp
leave
cmpsl
rolb
sahf
jmp
add
mov
or
mov
add
jae
lods
rcrb
add
outsl
sub
mov
hlt
push
jo
lret
xchg
inc
out
jecxz
bound
inc
mov
xlat
push
push
mov
aad
stc
fiaddl
xchg
xor
shl
das
hlt
mov
adc
nop
xchg
or
loop
xlat
scas
aaa
inc
stc
mov
int3
inc
gs
popf
out
fisttps
data16
hlt
mov
nop
movsb
clc
lods
pop
lahf
dec
loop
mov
or
sahf
add
jge
rclb
imul
ror
into
mov
adc
out
add
nop
inc
jnp
mov
jg
sub
xchg
out
and
cmp
push
lods
scas
mov
and
sub
jmp
rolb
les
test
sbb
jae
pop
test
pop
add
psrld
lds
jp
inc
stos
pusha
jecxz
xchg
and
lea
iret
sub
aaa
rcr
mov
scas
dec
cwtl
shrb
push
rol
into
cli
jnp
insb
lret
lods
mov
iret
add
mov
mov
adcl
mov
stos
movb
adc
or
or
clc
mov
sbb
sub
lahf
sarb
fdivl
mov
sbb
loope
xor
js
adc
ljmp
hlt
fsts
add
lahf
and
lods
test
hlt
lods
scas
mov
push
lsl
cmp
shl
sub
das
push
adc
push
push
or
push
jmp
das
pop
icebp
cmp
sbb
and
push
jl
sbb
xor
jne
mov
insl
jmp
or
push
in
mov
inc
arpl
jae
inc
mov
xor
push
or
lock
cmp
dec
rcrl
aad
scas
xorb
adc
or
add
pop
testl
imul
xchg
and
aad
test
call
enter
cmp
in
je
into
fidivrl
test
stc
jne
mov
jb
xchg
iret
and
cli
sub
adc
icebp
mov
push
cwtl
pop
fidivrl
daa
sub
mov
jge
xchg
jae
fisubrl
dec
pop
aad
movsl
cmc
loope
into
mov
pop
cmp
ds
test
adc
daa
repnz
in
xchg
mov
xchg
call
in
mov
mov
call
pop
inc
enter
aas
jge
inc
pop
out
mov
pop
adc
inc
push
push
pop
int
negb
fiaddl
loopne
push
push
xor
inc
js
rcrb
add
mov
and
dec
inc
std
pop
adc
cmpsl
fnstcw
push
stos
adc
pop
je
and
and
mov
mov
pop
adc
jnp
xchg
inc
and
mov
cwtl
nop
mov
lcall
add
fsubr
fldt
jnp
cld
aas
int3
cmc
add
xor
mov
dec
data16
sbb
and
mov
push
xchg
push
fstl
inc
jb
mov
sahf
aas
pop
jecxz
je
or
mov
jb
or
cmpsb
mov
mov
mov
stos
push
mov
clc
jae
inc
xor
jns
test
clc
sbb
and
jb
lods
icebp
mov
mov
out
cli
mov
mov
in
xlat
xor
mov
fstpt
jne
and
add
inc
out
add
sbb
arpl
cmp
mov
subl
inc
mov
lret
mov
jecxz
sub
mov
cmp
clc
push
dec
outsb
out
sbb
cli
sub
insl
mov
jle
pop
xchg
in
lret
out
xchg
popa
sub
movsb
scas
out
mov
int
addr16
jg
fisttps
pop
adc
imul
std
das
jmp
je
into
sub
or
mov
push
and
stos
lock
xchg
jle
mov
jb
fstpl
or
mov
addr16
inc
hlt
outsb
and
repz
push
cmp
dec
jns
add
repz
pop
jp
repz
ds
push
out
jecxz
push
xlat
fisttpl
je
fimull
adc
xchg
sar
adc
outsb
adc
inc
ss
iret
xchg
push
adc
inc
out
int3
and
in
in
mov
adc
jo
push
addr16
mov
push
stc
xchg
lea
mov
push
mov
cmpb
out
mov
cmpsl
jne
mov
pop
loope
cltd
dec
ret
add
jbe
testb
sbb
jo
jbe
adc
adc
scas
sub
push
cwtl
ds
shr
imul
mov
cmpl
add
lea
orb
cmpsl
and
gs
rcll
jge
mov
dec
cltd
ja
sbb
or
faddl
sahf
fsub
and
jmp
xor
in
stos
dec
cmp
jge
es
or
idiv
shr
push
mov
in
loope
test
int
dec
out
mov
ja
pop
cmpsl
lock
loope
in
inc
lret
lret
xor
mov
xchg
orl
inc
gs
fisubs
sahf
sub
xor
jne
xchg
mov
test
lret
dec
cli
and
imul
adc
pusha
test
xchg
jne
repz
js
xchg
fmull
mov
cmpsl
add
mov
push
jno
shll
xorl
push
test
test
sbb
repz
insl
cli
test
loop
xchg
call
xor
inc
push
mov
das
outsb
setno
jb
js
mov
loopne
add
or
lret
jp
cmpb
jmp
dec
push
adc
shl
sub
fucom
dec
rorb
ljmp
in
mov
ss
scas
xchg
les
xchg
inc
popa
int3
mov
mov
repz
mov
cmp
in
or
and
test
cmpsb
outsb
bound
ds
sbb
mov
push
repnz
and
sbb
enter
fs
inc
or
mov
or
test
cmpsb
setge
and
rolb
lock
call
pushf
and
loopne
xchg
mov
outsl
jmp
je
inc
cmp
js
dec
or
test
cs
mov
or
iret
out
clc
jecxz
sbb
mov
adc
or
sub
pushf
mov
jno
or
pop
addr16
ljmp
js
sbb
testl
out
pop
jae
cld
or
ficompl
cmp
and
push
sbb
mov
adc
add
sbb
jbe
xor
adc
clc
dec
enter
into
mov
stos
mov
clc
das
rcll
fwait
insl
adc
jge
jb
orb
mov
cmp
mov
hlt
imul
loope
imul
fldenv
fdivp
xlat
inc
adc
fiaddl
js
jmp
int
or
pop
pop
lahf
rclb
sbb
stos
cmc
mov
lcall
stc
mov
arpl
push
test
jmp
jo
push
je
lods
insb
mov
xchg
lods
jnp
sub
mov
out
jne
xor
mov
and
jp
lret
out
jle
ror
hlt
push
pushf
mov
call
pop
xchg
repnz
outsb
daa
testl
aad
cs
push
lock
dec
das
clc
lds
add
xchg
lret
mov
test
inc
pop
repz
aas
orb
adc
gs
jbe
and
mov
dec
xchg
mov
cs
push
dec
fisubrs
push
sti
push
mov
clc
lahf
hlt
cld
loopne
cmovle
js
cmp
dec
imul
xor
pop
call
out
and
scas
jge
iret
lods
imul
dec
inc
pop
mov
and
lret
mov
das
in
out
cmp
mov
cld
sub
lahf
or
jbe
icebp
mov
lret
dec
mov
les
adc
push
push
mov
or
mov
pop
xchg
jbe
push
jmp
or
mov
mov
xchg
movl
pop
mov
xchg
mov
inc
jno
push
dec
in
aas
mov
lret
dec
mov
push
ja
insl
xchg
test
cltd
stos
stos
out
imul
pop
add
test
das
stos
mov
popa
fnstenv
push
into
mov
cmp
mov
rol
es
pushf
insb
push
leave
sbb
jne
push
jnp
aas
in
pusha
jmp
lods
and
add
xchg
push
pop
pop
xor
fisubs
jno
repnz
add
xchg
xor
scas
outsb
jne
inc
mov
hlt
push
jno
movsb
popl
push
dec
std
sahf
mov
cld
out
std
cmp
movaps
loop
loop
sub
test
mov
test
mov
jle
adc
jbe
call
xor
lret
pop
mov
stos
fs
out
es
dec
sbb
repz
xor
pop
rcl
int
sarl
clc
push
sbb
or
test
or
rcrl
enter
filds
test
cmp
ljmp
shlb
in
mov
or
adc
sub
les
jp
movb
add
cmp
in
mov
mov
pop
sbb
jl
xlat
cmp
mov
xchg
jmp
or
mov
dec
ret
push
fisttpll
mov
add
mov
ljmp
arpl
jo
fdivrs
pop
in
sti
ljmp
sbb
adc
cltd
in
jbe
xor
hlt
rorl
sub
scas
lret
dec
mov
adc
out
jnp
das
mov
push
fcoms
mov
mov
mov
arpl
push
sahf
adc
dec
adc
or
xlat
lret
int3
jmp
lock
shrl
sbb
adc
movb
jo
sub
fildl
inc
lret
inc
pop
mov
out
xor
loopne
xchg
stc
cmpsb
adc
cmpsl
ljmp
sub
mov
jmp
addr16
loope
enter
dec
in
lret
pop
push
and
fildl
ss
mov
mov
push
into
push
sub
subl
cmp
sbb
pop
cwtl
enter
les
pop
pop
les
lea
or
mov
and
arpl
loope
fs
es
jl
loope
dec
or
les
xchg
jecxz
fnstsw
cmp
cmp
inc
arpl
pop
push
cwtl
dec
sbbb
add
adc
mov
pop
sub
scas
pop
or
mov
ds
or
cmpsb
xor
pop
push
es
xchg
push
std
fsubr
popa
mov
ljmp
dec
mov
js
add
enter
mov
test
insl
lods
sbb
cmp
jnp
rcrb
push
fstpt
mov
inc
cmpsl
push
xchg
call
sub
sbb
das
in
dec
hlt
mov
mov
mov
xlat
enter
adc
mov
inc
negb
sub
out
push
icebp
aas
dec
push
dec
dec
pop
dec
adc
cld
cmp
arpl
test
xchg
xchg
cmpsb
js,pt
out
pop
push
or
or
sahf
or
das
adc
push
int3
dec
push
repz
cmp
pop
das
cmp
shll
cli
mov
push
and
adc
lahf
adcl
lds
mov
jmp
loop
pop
xchg
stos
xchg
mov
mov
mov
xchg
fisubrs
dec
push
jecxz
sub
addl
cmp
pop
jecxz,pt
fwait
pop
arpl
pop
sbb
stos
adc
scas
push
popa
mov
in
outsl
out
mov
cmp
push
movl
out
in
and
or
and
pop
jge
sbb
mov
push
andl
jecxz
push
cmc
aas
add
add
sbb
add
imul
icebp
outsl
insb
call
push
pop
hlt
outsb
cmp
sub
pop
out
lock
shlb
cmp
xor
loopne
daa
sbb
pop
in
push
call
imull
mov
and
xor
sbb
repz
fsubrp
inc
adc
scas
dec
movsb
inc
int
clc
xor
inc
pop
cld
mov
imull
dec
aas
push
aad
xchg
push
xor
lea
cmpb
stos
xchg
jnp
mov
sub
daa
adc
mov
addl
outsl
popa
lahf
ljmp
xor
lods
push
loope
jg
pop
in
arpl
mov
inc
fwait
in
sahf
mov
sbb
jge
add
adc
sub
sub
push
xor
xchg
jecxz
lcall
popa
mov
adc
pop
adc
cmp
sbb
fsts
or
sub
and
jae
jne
mov
fsubr
pop
sarb
inc
mov
push
adc
pop
out
dec
out
loopne
orb
pop
jecxz
loope
add
test
cmpsl
lods
xchg
in
int
xor
test
jge
inc
mov
or
scas
push
jmp
xchg
lret
push
sti
xchg
and
in
daa
sbbb
mov
ds
repnz
aam
call
xchg
dec
inc
aam
adcl
pop
sbb
icebp
push
jle
push
sbb
shll
jno
sarb
xor
jge
clc
add
jg
or
sub
inc
dec
sub
mov
cmp
int3
xor
jae
out
mov
mov
mov
pop
pop
lret
adc
inc
inc
sub
push
mov
push
mov
loope
xorl
pop
pop
bound
rcll
cmp
aad
lcall
sub
xchg
into
and
mov
sbb
jle
or
mov
mov
aam
pop
mov
xchg
jne
stc
sub
mov
xor
iret
fcoml
add
jns
sbb
cs
orl
in
mov
pop
pop
or
js
xor
adc
dec
enter
imull
xchg
movsb
aas
lea
sarb
mov
fsubl
out
int3
insl
leave
mov
mov
cmp
xchg
in
pop
shlb
adc
popa
cli
sub
arpl
lods
das
outsl
enter
lods
pushf
pop
mov
mov
lcall
sub
sbb
fbld
mov
jne
leave
mov
je
and
adc
leave
pop
jno
sub
mov
cld
push
iret
dec
inc
cmpl
dec
mov
jp
daa
add
out
mov
imul
jae
xlat
lret
sub
enter
enter
mov
lock
aas
adc
push
ja
bound
cmc
arpl
popa
popf
mov
lea
xlat
orl
out
das
mov
rcrb
pop
nop
and
addr16
sbb
stos
leave
in
cmc
inc
jmp
bswap
pop
mov
push
sbb
insb
mov
cmpb
cwtl
popa
loop
add
and
idivl
push
jae
cmp
pop
jb
push
sbb
data16
sbbb
mov
loope
inc
leave
dec
adc
shr
push
dec
dec
jne
pop
repnz
outsb
lea
ficompl
cmp
imul
mov
sub
cmp
add
in
fisubs
into
sub
loop
jns
mov
pop
mov
out
scas
sbb
lea
out
sbb
inc
arpl
xchg
movsb
orb
stc
mov
push
out
push
sub
cmpsb
xor
push
cmp
cs
push
dec
push
sbb
xchg
cli
dec
mov
popf
fisubrl
inc
fsub
mov
cmc
outsb
pop
mov
mov
in
mov
insb
cmp
jb
jecxz
aaa
in
adc
xchg
mov
sbb
sbb
jp
or
add
fidivrs
lods
pop
mov
pop
out
cmp
mov
aad
arpl
add
jmp
dec
mov
mov
cli
dec
mov
dec
pop
sbbl
movsb
nop
lret
dec
cmp
sbb
add
loopne
ss
push
mov
cmp
dec
xchg
clc
arpl
adc
adc
cmc
enter
insl
idivb
loope
scas
and
mov
jo
dec
inc
loop
or
out
push
push
cmpsb
ss
xor
test
ret
pop
jmp
cmp
mov
dec
mov
sbb
out
pop
mov
jno
mov
scas
call
push
jne
xchg
mov
nop
in
aas
mov
jecxz
sub
fdivrs
mov
xlat
xor
cmp
push
ljmp
fcmovb
xchg
mov
jb
scas
daa
into
mov
nop
call
lret
dec
out
jnp
cli
bnd
cs
imul
std
push
cld
adc
repnz
lcall
pop
mov
and
lds
dec
dec
adc
rclb
cmp
push
hlt
xchg
mov
fs
jg
xchg
lds
sbb
popf
stos
sti
popa
push
mov
cmpsl
and
jg
int3
xlat
cmc
lods
mov
push
cmpsl
fistpll
adc
dec
fildll
enter
cmp
or
cmpb
cmp
fcmovnbe
jnp
hlt
pop
jno
mov
clc
or
mov
inc
loopne
sub
cmc
add
loope
push
lret
cmc
test
xor
mov
ret
pusha
sbb
dec
jbe
lret
cmp
xor
xor
aam
mov
icebp
mov
inc
js
in
les
ja
push
cmp
cwtl
add
add
jb
sbb
fdivl
push
pop
mov
iret
movsb
pop
push
cli
or
adc
add
pop
ljmp
mov
and
sti
mov
lods
xor
pop
jb
data16
out
and
xlat
xor
xchg
repnz
in
dec
aam
cmpsb
das
fildll
in
jno
jo
sub
cmovno
push
in
leave
mov
movsl
cmp
les
xchg
or
jns
hlt
pop
test
add
popf
daa
push
fistps
test
xor
or
dec
inc
aas
scas
push
lods
pop
arpl
mov
mov
sbb
mov
push
mov
lahf
cmpsb
xchg
mov
fdivp
sbbb
js
std
mov
adc
mul
cmpb
mov
mov
repnz
mov
mov
ds
sub
mov
jns
shrl
cmp
jp
es
mov
je
xlat
enter
mov
mov
movsb
xor
fucom
arpl
xchg
xchg
or
sarb
das
add
sahf
mov
inc
mov
xor
cmp
cltd
jge
and
adc
adc
call
test
dec
inc
mov
jae
jne
ss
nop
mov
and
push
fs
out
outsb
push
push
test
rcl
sub
sahf
dec
dec
movsl
cmp
dec
pop
pop
fs
lods
ljmp
jno
xor
jae
dec
div
push
cmc
add
mov
js
test
sub
xchg
jae
lock
or
mov
mov
lret
into
or
shlb
lock
das
xor
test
fidivrs
mov
mov
xor
cmc
testl
das
mov
ror
push
mov
push
rol
inc
ds
addr16
ss
out
pusha
cli
cltd
push
or
divl
xlat
ret
mov
inc
adcb
aad
mov
fstpt
mov
ss
ljmp
flds
ss
into
xor
push
in
popf
gs
and
sbb
inc
push
daa
and
push
sarl
sub
push
jne
adc
outsb
cmp
sub
imul
and
or
xlat
sub
std
mov
bound
sub
add
xor
scas
and
and
cltd
and
icebp
insl
push
in
push
icebp
les
sti
cwtl
sbb
shr
mov
dec
ret
lock
jnp
cmc
mov
jno
mov
ja
incl
fwait
pop
mov
out
into
and
pushf
mov
dec
sub
ds
jmp
aaa
jg
inc
js
es
fadds
test
and
inc
adcb
stos
cmp
sbb
aas
movsl
std
addb
cmp
pop
lock
and
rol
pushf
mov
xchg
test
pop
cmp
lods
fwait
repz
aaa
fcmovb
jno
outsl
mov
add
lret
mov
call
jae
jnp
sti
xadd
lods
pop
sti
jmp
pop
pop
cli
xor
cmp
sbb
or
inc
pop
push
or
fs
inc
lock
fwait
jl
xlat
push
nop
pop
mov
arpl
test
mov
clc
into
rcll
xchg
mov
or
adc
mov
leave
psrlw
fcmovnbe
mov
and
adc
gs
fistl
out
rorl
repnz
test
lahf
push
aad
mov
and
sub
mov
out
test
xchg
push
nop
loope
andb
jnp
js
sub
push
lret
xchg
popa
iret
in
cmp
mov
hlt
mov
loop
fnstenv
sahf
jno
jno
sub
inc
inc
xchg
jle
aas
adc
cli
jb
ljmp
cs
push
xor
xchg
cmc
cs
pop
nop
scas
lods
in
mov
pop
jns
sbb
lret
das
scas
loopne
clc
xchg
push
mov
out
dec
pop
mov
andl
pusha
xor
sub
pop
out
clc
push
jg
repz
cmp
jae
je
sbbl
mov
or
icebp
xchg
scas
movsl
and
imul
push
lds
dec
jge
cmp
adc
in
movsl
daa
push
rolb
jge
inc
scas
clc
rcrl
xchg
cli
ja
ds
pop
mov
jmp
out
add
fcomi
mulb
mov
shll
std
sbb
out
mov
mov
lret
pop
fisubrl
repz
dec
hlt
adc
adc
mov
xor
ss
mov
pop
add
sub
fadd
xor
dec
inc
xor
sti
cltd
mov
das
outsb
jo
push
lea
jle
rclb
cmpsb
mov
add
rclb
cltd
mov
out
sub
sub
jbe
int
mov
inc
jg
adc
jle
fnstsw
pop
mov
lahf
es
inc
or
ret
movsb
push
out
movsl
js
fidivrl
cmpsl
sub
scas
and
push
lock
dec
sti
lea
jmp
push
fcompl
add
divb
pop
notb
pop
btl
pop
mov
and
jecxz
or
mov
bound
ds
jp
xchg
popf
pop
jle
pusha
adc
enter
aaa
rcrb
push
xchg
outsb
ja
pop
bound
lcall
fs
jb
xchg
test
es
xor
iret
xchg
sbb
lahf
aad
mov
xorl
and
fsubl
sbb
push
sub
cmp
mov
dec
in
insl
into
cltd
add
pop
jne
sbb
push
out
repnz
dec
ljmp
add
ret
addr16
rclb
push
fsincos
inc
add
jle
dec
in
out
mov
and
mov
dec
roll
adc
popf
lcall
mov
popa
loope
mov
in
daa
mov
fwait
and
mov
sub
popa
jo
mov
xchg
je
pop
mov
dec
mov
lea
sbb
ret
dec
cmp
outsb
sbb
leave
fcmovnb
sahf
xor
rcrl
sbb
fimuls
xchg
pop
and
jp
in
imul
int
adc
mov
popa
push
or
or
cmp
lods
or
outsb
xor
orl
sbb
loop
add
pop
adc
adcl
ret
sbb
xchg
xor
fcmovnbe
push
push
clc
int3
shlb
jns
pop
cli
dec
push
xchg
shrb
lds
dec
jl
jle
xchg
clc
testl
orb
sbbl
jge
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
jg
je
lock
inc
sahf
pop
push
push
arpl
jns
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
