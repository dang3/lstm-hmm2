push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
popf
push
or
pusha
addl
cmp
jp
jbe
add
jb
jb
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
and
adc
idivl
lock
mov
mov
cwtl
mov
addr16
popf
mov
dec
jne
jae
in
in
dec
add
outsb
sub
xor
insb
popf
dec
sbb
adc
mov
add
add
fldcw
mov
iret
mov
jle
je
dec
pop
mov
jno
xchg
push
popa
addr16
into
push
adc
std
and
mov
inc
ret
cmpsb
rcrb
cmp
inc
mov
xchg
pop
pop
add
stos
loopne
jne
dec
pop
xchg
sbb
mov
rorl
mov
push
mov
imul
les
test
xchg
mov
pop
xor
mov
ja
outsb
cmp
sbb
shlb
stc
jb
cmp
lock
scas
lret
pusha
or
mov
jecxz
add
rcl
in
mov
leave
jns
shlb
hlt
xchg
ja
xchg
inc
or
aam
int3
pusha
sbb
pop
pop
pop
sbb
inc
mov
cmp
icebp
fiaddl
mov
push
aam
mov
popf
bound
pop
jno
aaa
sbb
cmc
jmp
ret
jb
cmpsb
push
add
gs
test
push
jl
cmc
es
and
mov
push
stos
shlb
push
mov
ljmp
inc
int3
int3
outsl
jbe
xor
cmp
out
mov
add
push
into
mov
repnz
jle
js
arpl
inc
loopne
mov
dec
test
cmp
cmpsl
sub
mov
pop
call
rorl
sbb
js
sub
mov
sti
pop
adc
je
movsb
xchg
jo
stos
xlat
ljmp
xchg
mov
dec
repz
cmp
and
les
ret
or
jle
ljmp
and
js
aas
loopne
imul
loop
repz
and
sbb
out
bound
add
cmp
push
mov
push
je
adc
out
clc
xchg
push
sarl
mov
inc
mov
pop
paddq
xor
jle
insl
inc
das
push
jnp
mov
sbb
adcb
mov
cwtl
cmp
and
mov
imul
inc
insl
mov
add
xchg
sbb
jb
cmpsl
aaa
add
sbb
xchg
sti
adc
xor
daa
pushf
cmpsb
das
inc
mov
jno
das
mov
rorl
mov
cmp
jne
jl
jb
pop
sub
loope
scas
scas
sbb
push
jbe
push
outsb
sub
push
rol
jns
pop
jecxz
aam
enter
outsb
aam
sbb
sbb
xchg
stos
dec
jl
mov
int
jecxz
and
pusha
int3
movsl
popa
push
and
jns
pop
test
call
enter
dec
jge
test
jne
lahf
dec
ljmp
imul
cmp
cmp
cmp
ljmp
xchg
push
lret
arpl
jo
pop
pop
dec
inc
inc
out
out
lods
and
sti
arpl
sahf
in
outsb
add
mov
adc
mov
sub
iret
iret
jg
dec
xchg
aam
arpl
stos
cwtl
cmp
dec
lahf
dec
or
mov
es
data16
jle
pop
xchg
add
xchg
mov
push
out
and
lods
arpl
addr16
pusha
sbb
mov
out
jo
add
sar
pop
iret
push
or
nop
imul
les
mov
push
cmp
shl
mov
inc
movsb
mov
clc
jl
fbstp
fcoms
or
aad
in
call
cltd
mov
repnz
push
int3
ja
mov
insb
in
jle
cmpsl
arpl
arpl
add
jmp
daa
lret
test
mov
aam
leave
bound
dec
xor
xchg
mov
mov
sbb
lods
gs
push
pop
inc
xlat
or
cli
add
adcb
mov
loope
push
pop
ds
inc
stos
dec
pop
dec
mov
push
std
mov
and
cltd
mov
popa
mov
jmp
jp
pop
xchg
add
lahf
pop
in
adc
jnp
out
movsl
mov
or
int
sub
pop
or
lock
xchg
outsl
mov
ljmp
gs
int
daa
fisttps
aaa
insl
mov
out
and
mov
loope
cli
ja
cltd
mov
out
pop
ja
dec
aas
add
mov
gs
js
shrb
aaa
jo
and
stos
or
orb
cmp
lea
mov
dec
push
into
push
cs
cltd
jl
jae
rcl
repz
ret
pushf
popa
scas
push
test
adc
loop
fimull
push
mov
bound
jb
dec
jle
adc
shl
ret
test
loopne
cmp
popf
cwtl
adc
loop
sbb
mov
fwait
test
in
xchg
bound
mov
rep
and
in
movsb
xor
pop
and
jge
imul
push
xchg
sub
movsb
mov
add
dec
insl
out
add
jnp
mov
add
xor
inc
push
dec
sub
add
cmp
std
testl
filds
pop
icebp
jnp
sub
imul
mov
cmpsl
sbb
add
insb
subb
popa
in
cmp
fidivl
inc
mov
repz
lods
mov
jb
pop
movsb
test
pop
jbe
cmp
mov
movsb
lret
mov
pop
mov
js
xchg
pop
addr16
jnp
mov
les
cmp
mov
or
aas
fiadds
cwtl
test
jecxz
aaa
adc
push
loope
push
pop
pop
fimull
jb
pop
ljmp
xor
and
lcall
hlt
sarl
std
sbb
aaa
out
inc
or
mov
iret
mov
mov
dec
push
mulb
test
movb
addb
ljmp
in
sar
jne
repnz
sub
fistps
push
sub
add
adc
ljmp
push
or
push
sbb
fwait
dec
loope
dec
mov
fildl
mov
xor
fistps
cltd
xor
inc
sahf
adc
pop
push
subl
or
dec
jge
fimull
jmp
in
fiadds
shrl
mov
sahf
sbb
out
notl
cltd
loope
stos
jne
or
scas
add
mov
ffree
sbb
cmp
mov
add
dec
sbb
mov
test
nop
imul
adcb
fildll
incb
and
or
loope
inc
dec
jns
sub
inc
push
es
scas
and
and
into
fucomp
xchg
and
mov
xor
aam
adc
jne
xor
mov
stc
mov
pop
notb
lcall
out
jge
sti
jecxz
leave
jo
aam
sahf
mov
jg
enter
xchg
cwtl
cli
mov
std
mov
fmuls
pop
xlat
out
cs
dec
mov
adc
clc
hlt
fldl
enter
hlt
sub
and
shrl
inc
sub
sub
loope
adc
sub
and
int
enter
js,pt
sti
mov
push
dec
pop
roll
sahf
out
mov
loopne
je
mov
push
scas
mov
pop
or
je,pt
pop
insb
call
lods
pushf
in
pop
cmp
aaa
ret
mov
call
xchg
cwtl
push
fwait
aam
or
out
push
out
xchg
mov
fimull
adcb
jne
dec
mov
inc
inc
mov
into
mov
ror
push
or
out
mov
aam
xchg
add
push
insl
xchg
cmp
add
sub
imul
mov
fisttpll
leave
in
in
nop
mov
clc
lods
into
clc
mov
adc
je
pop
clc
jg
cmpsl
jne
and
pop
sub
icebp
xor
icebp
stos
pusha
leave
imul
and
icebp
enter
and
bound
push
or
in
enter
lods
hlt
xlat
out
cmp
mov
or
mov
jp
std
adc
mov
lret
xor
sbb
aad
jecxz
pusha
test
sar
adc
cmp
cmpsb
inc
cld
in
add
inc
stc
ljmp
aaa
lock
imul
cmp
push
clc
out
sahf
les
hlt
fistl
cmp
cs
jb
lret
lret
jmp
inc
inc
cmp
xor
call
lock
insb
and
repnz
push
push
sbb
into
or
leave
loop
push
bound
push
ret
out
sahf
sbb
aaa
pop
cmpl
pop
test
jmp
xor
dec
das
negl
jo
inc
cmp
push
int3
xchg
aaa
test
or
cld
enter
add
mov
sbbl
test
enter
imul
mov
xlat
cmpsl
pop
mov
xor
test
jns
mov
mov
mov
adc
sub
inc
push
repz
outsl
leave
xchg
or
clc
adc
sbb
inc
into
dec
cmp
push
mov
fsubs
das
fcmovnu
cmc
mov
dec
jge
fcoms
sbb
push
hlt
stos
fidivrl
mov
jg
inc
mov
ret
cmpsl
aaa
add
xlat
fistl
cmp
movsl
js
sbb
mov
cltd
xor
jl
and
fs
inc
lock
mov
aad
ret
or
sub
adc
fbstp
xchg
xor
jne
jp
dec
and
pop
xlat
xor
xor
or
or
pop
je
cltd
popf
jnp
push
dec
cs
enter
dec
insl
add
lahf
cmp
mov
push
inc
add
fdivrs
push
ss
gs
adc
inc
or
enter
sbb
stos
mov
outsl
je
mov
lcall
adc
xor
inc
cwtl
sub
stc
aaa
adc
mov
push
mov
add
mov
push
in
mov
adc
add
add
test
fistpl
push
das
sarl
inc
call
pop
ds
fidivs
fnsave
ret
mov
xor
inc
outsl
sbb
mov
inc
orb
pop
sbb
fwait
popa
sub
cmp
or
std
pop
pop
xor
sub
ds
pushf
cmp
in
xor
push
cmp
push
in
scas
je
divb
mov
add
or
daa
push
aad
cmp
pushf
loop
sahf
scas
inc
mov
and
jmp
push
mov
sti
dec
pop
cmp
stos
xchg
es
incl
add
pop
popf
pop
ljmp
hlt
faddp
dec
arpl
sub
fcmovnb
add
loopne
pop
imul
lods
arpl
xor
clc
lods
cmpsl
or
lds
and
sarl
push
ret
hlt
jbe
jbe
lods
mov
int3
jmp
lahf
sarl
movsb
sub
pop
xor
out
sub
jg
inc
repnz
cld
cmc
pop
das
xchg
pop
mov
aas
cwtl
xor
sub
push
push
mov
xchg
jae
sbb
cmc
pop
std
in
add
sbb
lods
mov
lcall
inc
shr
pop
mov
mov
shlb
popf
inc
adc
add
roll
jae
pop
mov
mov
inc
xor
loop
pop
push
aam
inc
loopne
sti
das
rcr
mov
pushf
xchg
out
in
outsb
sub
xor
pop
daa
xchg
mov
pusha
testb
iret
cmp
jmp
and
sub
pop
or
arpl
leave
lret
sti
in
inc
ds
ret
iret
push
xor
pshufw
fsts
aas
lea
mov
push
repz
inc
mov
jl
push
fs
loop
stos
mov
mov
out
cmp
jo
shl
ficoml
jle
movsl
push
cmc
mull
stos
jne
pop
xor
push
fnstsw
inc
sub
push
fwait
add
lods
das
inc
icebp
fcompl
lahf
mov
popf
es
adc
mov
jnp
xchg
push
mov
mov
cmpsl
inc
negb
fistpll
adc
pop
sub
dec
mov
xchg
test
je
fcmovb
frstor
mov
loop
mov
loopne
sub
movsl
sub
arpl
inc
mov
shrb
mov
sub
add
and
add
jbe
and
xchg
clc
sbb
sahf
cmp
popa
adc
cli
adc
mov
jns
std
pop
pop
pusha
cli
fdiv
sar
daa
inc
daa
sbb
adc
sbb
fwait
xchg
lods
outsb
cmc
dec
lea
mov
xchg
lahf
mov
repz
cmp
in
addr16
sub
mov
cmpsb
and
sbb
iret
flds
cld
mov
xor
inc
daa
mov
or
sbb
imul
lock
push
stc
mov
arpl
fldcw
ret
sar
in
adc
addr16
out
jae
ja
sub
pop
add
dec
mul
daa
hlt
sahf
mov
shrb
dec
or
callw
aad
mov
pushl
das
shlb
adc
stc
out
out
stos
inc
sbb
mull
add
popf
xlat
cmp
sub
cmp
inc
jl
dec
dec
pop
out
fiaddl
sbb
mov
push
js
repz
sub
fsubrs
cmp
icebp
xchg
inc
sets
out
xor
xchg
push
shll
enter
movsl
loopne
fimuls
aas
daa
subb
inc
out
xor
sub
dec
lods
pop
fnsave
add
out
sub
or
mov
push
in
mov
cmpsl
sti
shl
hlt
test
call
adcl
dec
dec
daa
lret
push
cmovp
mov
inc
push
not
mov
jb
outsl
loopne
pop
push
adc
mov
andl
push
or
fs
inc
jp
movb
mov
sbb
adcl
leave
jo
ja
int3
inc
inc
mov
inc
ljmp
sbb
fbld
fmuls
call
and
mov
fstpl
sbb
stos
movsb
add
js
rorb
or
int3
call
mov
dec
mov
jge
outsb
or
pop
je
outsl
and
div
out
pop
push
aam
hlt
popa
and
stos
xchg
or
ds
test
testb
call
cmpl
adc
in
cmp
fstp
adcb
ret
mov
iret
xlat
adc
nop
stos
mov
negl
pop
test
push
xchg
in
add
cmp
inc
add
or
pop
xchg
pop
out
fcmovbe
mov
out
jo
push
push
and
mov
jl
mov
mov
addl
jl
xchg
insl
push
mov
sarl
lods
inc
adc
data16
test
ret
nop
or
in
mov
push
inc
mov
fxch
sbb
int3
outsl
inc
xor
jp
test
adc
dec
sbb
jne
popa
xchg
dec
imull
clc
enter
call
mov
addr16
mov
adc
popf
pop
popf
cltd
movsb
ret
lret
sti
and
or
xchg
ror
and
test
fdivr
and
sahf
testb
mov
arpl
xor
add
int
jp
mov
loop
jp
xchg
pop
adc
and
xorb
cmpsb
adc
ljmp
mov
out
lods
repz
xorb
pusha
add
mov
jno
xchg
das
push
or
dec
in
daa
jl
xchg
jle
pop
repnz
and
xchg
mov
pop
std
clc
lods
inc
shlb
fidivl
hlt
jb
push
pop
scas
in
lods
or
jg
and
cmpsl
aas
sbbb
fcos
iret
test
repnz
hlt
imul
ficoms
shlb
jne
add
mov
or
pop
inc
push
cmp
es
xchg
sub
jae
push
into
mov
stc
lret
adc
add
mov
fidivs
add
js
ret
xchg
xor
inc
ds
add
pop
stos
xchg
push
idiv
or
mov
mov
leave
into
out
in
dec
lock
cltd
fldenv
sbb
inc
cmp
scas
inc
add
dec
add
pushl
cmpb
aam
mov
inc
js
dec
xchg
gs
mov
loopne
lret
sub
mov
dec
inc
lods
dec
pop
rolb
mov
in
aas
dec
push
mov
loopne
fisttpl
arpl
cmp
hlt
ret
mov
add
xchg
push
xchg
jg
jl
lret
jmp
nop
pop
mulb
insl
dec
mov
and
fcmovnu
insb
cmp
stos
adc
mov
sti
fstl
stc
push
hlt
add
fs
jl
aaa
ljmp
mov
outsl
mov
push
add
xchg
jae
fistl
cmp
mov
jbe
lods
es
sub
and
cmp
std
xchg
les
mov
aas
push
lds
outsb
cwtl
push
lahf
out
lahf
mov
push
fwait
repz
iret
outsl
mov
or
addr16
pop
enter
cmp
adc
dec
inc
out
incl
insl
mov
adc
fwait
repnz
sahf
pop
aam
xchg
adc
or
scas
test
xchg
jno
push
or
mov
hlt
insl
popf
jecxz
xor
and
ficompl
dec
or
xor
adc
outsl
lods
stos
jg
fildl
fstpt
mov
int
xchg
decb
cs
add
cmp
test
or
jp
push
push
rcrl
xor
and
adc
lret
pop
mov
sbb
sahf
mov
jecxz
push
or
xchg
stos
out
push
in
sub
or
pop
xor
cmp
mov
scas
fsubrl
jecxz
je
mov
jne
hlt
xor
mov
in
orb
in
and
leave
jp
mov
lahf
sahf
inc
mov
loopne
jne
fistps
test
rcl
fadds
cmp
mov
ja
pop
imul
ds
or
shlb
imul
ret
fiaddl
stos
mov
mov
insb
outsb
jp
ja
lret
push
xor
push
mov
jnp
loopne
cmp
fistpll
xchg
pusha
cmp
mov
fidivs
add
mov
gs
cmpsl
popa
daa
test
jo
xor
dec
push
cli
mov
fwait
shrl
lret
xor
jns
or
ds
xchg
cmpsb
pop
cs
sbb
stos
sarb
mov
cmpsl
stos
sub
inc
jo
mov
mov
daa
loopne
xchg
out
add
popa
add
jb
cwtl
rcrb
mov
dec
push
mov
mov
nop
jge
jb
mov
inc
cmc
adc
sub
inc
mov
incl
out
xor
push
sbb
pusha
adc
out
sbb
xchg
xchg
cmp
or
dec
mov
fwait
lcall
sub
lds
xor
lea
mov
int3
push
push
test
adc
call
rcl
mov
sub
xchg
inc
out
shr
sub
dec
pop
and
pop
cs
fimull
cmp
sub
jno
xchg
xor
pop
cmp
push
inc
dec
pushf
mov
cmp
cltd
popw
outsl
dec
push
andb
push
int3
adc
push
inc
call
fimull
adc
outsl
insb
or
adc
sti
sbb
mov
jbe
inc
adc
pop
in
inc
orb
nop
push
add
xchg
std
fmul
subb
mov
leave
ljmp
aam
xor
or
outsl
mul
stos
jg
lret
repz
sub
subl
gs
pop
mov
js
sbb
aas
sub
stc
push
mov
xor
push
outsb
pop
iret
jp
test
nop
dec
lcall
repnz
or
sbb
out
ds
mov
addr16
ja
imul
mov
sub
int3
pop
fcmovbe
push
lea
fisttpll
mov
out
lods
xchg
les
jge
cmp
push
inc
jne
add
jmp
jecxz
mov
mov
cmp
les
and
insb
fbstp
mov
cmp
xchg
ja
inc
and
test
cwtl
push
push
aad
aas
scas
push
sub
out
xor
clc
mov
incl
das
jne
lea
add
aam
aaa
and
pop
sub
or
xor
mov
pop
pop
or
les
faddl
ror
std
dec
loop
ret
mov
addr16
jo
test
add
push
push
cmp
adc
mov
das
int
cmp
and
mov
lret
cli
movsl
pop
jp
int3
stc
jns
jle
mov
mov
push
mov
dec
adc
pushf
faddl
fs
push
dec
xchg
push
sbb
in
scas
rcl
add
ljmp
ss
add
sahf
lret
outsl
insl
scas
ja
xchg
ret
xchg
mov
dec
dec
cmp
cmpb
stos
xor
cmp
daa
inc
sbb
test
idivb
fistps
daa
sub
inc
pusha
mov
inc
or
sbb
inc
mov
mov
jnp
mov
cs
cmpsb
pop
xor
negb
sarb
in
mull
mov
cmp
push
sub
lods
ret
in
lods
or
xor
fidivrs
pop
es
mov
hlt
xor
in
jne
insl
cmpsl
mov
cmp
sub
cmp
lods
pop
es
mov
xor
or
xchg
mov
mov
loopne
xchg
and
mov
movsb
push
icebp
mov
insb
fldt
aad
push
stos
jbe
pop
mov
rorb
jno
call
hlt
not
data16
out
ss
movsl
xchg
xchg
mov
outsl
pop
or
stc
cmpsl
mov
loope
and
fld1
orl
outsl
xchg
aaa
or
fistpl
xchg
bound
pop
mov
in
stc
scas
inc
loope
adc
pop
cltd
sub
xchg
push
push
repz
inc
rorl
movsl
cmpsl
dec
cmp
subb
insl
add
loop
popf
enter
fwait
cmp
dec
int3
rcll
insb
sahf
jbe
jmp
xor
rep
orl
and
jns
sub
nop
add
jbe
std
shl
sub
add
xor
fmul
shlb
insl
or
test
rcl
ljmp
and
in
pop
xchg
and
mov
ljmp
inc
imul
mov
lea
insb
dec
jnp
cmp
lret
test
mov
pop
jb
call
daa
xchg
adc
dec
sahf
arpl
call
and
pop
cmpsb
sub
fistl
shlb
jle
cmpsl
repz
mov
icebp
fimuls
cmpsl
adc
fildll
cli
add
jg
dec
mov
icebp
test
dec
mov
sub
lods
fildl
adc
lret
xchg
movsl
stc
rcl
mov
addl
sub
dec
mov
subl
shr
stc
outsl
shrl
cwtl
and
add
fsubr
stc
in
fsubrl
inc
fadds
ja
arpl
arpl
in
cmp
and
mov
daa
lcall
out
cmp
mov
cmp
addr16
inc
xor
aaa
xchg
xchg
popa
lahf
push
fdivrs
mov
pop
mov
fs
cmp
xor
mov
dec
lret
add
pop
fisubl
add
mov
pop
shrl
sahf
das
dec
hlt
and
imul
and
pop
push
or
lods
push
mov
cmc
scas
adc
nop
xor
mov
push
ret
shlb
hlt
test
lea
jnp
dec
cltd
bound
xorb
shlb
or
negb
call
fisubrl
pop
dec
mov
sub
mov
loopne
subl
xchg
pop
repz
fwait
andl
repz
mov
mov
ret
jl
push
sbb
out
stos
cltd
mull
or
mov
dec
and
mov
inc
pop
add
xchg
aam
mov
sbb
adc
pop
and
std
icebp
or
divl
loop
xor
mov
mov
jns
jge
popa
dec
jl
sbb
jp
add
outsl
xchg
in
pop
inc
ret
dec
sub
out
sub
add
cwtl
mov
push
or
jp
lahf
movsl
fsub
aad
out
fldenv
dec
push
lret
iret
ss
sbb
push
aaa
cmpsb
idivb
subb
lock
jle
cmp
jp
inc
xorb
popf
int
fcoml
scas
int
jl
mov
shrl
dec
test
movsb
adc
sarl
push
faddl
mov
jecxz
lret
jmp
aad
movsl
in
lahf
sbb
dec
mov
lock
sub
imul
xor
insb
or
lret
popa
rorb
sbb
mov
xchg
ljmp
jp
mov
or
mov
pusha
and
or
mov
jg
and
mov
pop
sub
leave
xchg
adc
faddl
dec
sub
scas
shrl
out
inc
inc
in
xchg
xchg
int
mov
cmp
testl
cmp
imul
dec
fldcw
mov
cltd
call
test
dec
xor
mov
pop
pop
out
jmp
aad
jne
test
icebp
and
popf
arpl
push
or
push
jg
mov
fistl
push
xor
ret
push
movb
push
sar
aaa
stos
dec
cli
dec
scas
inc
xor
or
pop
clc
xor
add
mov
ss
pushf
cmpsl
pop
sbb
adc
insl
imul
test
lahf
xor
lret
pop
test
out
pushl
and
or
rcll
scas
andl
and
sbb
into
pop
sahf
pop
loopne
dec
daa
shrl
movsl
dec
test
jno
dec
push
cs
int
pop
clc
jae
enter
jg
xchg
mull
stos
rcrb
jno
bound
push
add
push
aas
addr16
nop
jle
in
jae
or
mov
stos
in
fmull
imul
adcb
push
xlat
into
imul
mov
jg
out
nop
lds
sar
cmpsl
pushf
imull
adc
push
xor
dec
add
int
idivb
pop
sahf
xor
pop
sti
aad
lods
dec
sub
adc
andl
aas
jae
push
ds
mov
and
insb
pop
lds
repz
aaa
fwait
cmc
mov
imulb
addr16
lahf
jmp
dec
fsubrs
push
mov
dec
ja
cli
das
scas
xchg
push
in
sub
mov
dec
loope
cld
and
decb
lret
testb
jnp
jno
and
xchg
add
and
xchg
add
pop
or
push
sbb
inc
mov
adc
pop
ljmp
adc
icebp
sbb
ret
setg
faddp
xchg
sub
and
add
ret
xchg
fsubrl
sahf
enter
or
inc
xor
lcall
push
pushf
inc
xchg
or
out
sub
data16
enter
mov
adc
xor
mov
pop
jl
inc
aam
cmp
and
pop
sbb
pop
sbb
cmpsl
bound
mov
or
inc
bound
cmp
ljmp
sti
pop
rorb
and
mov
adc
mov
dec
push
dec
mov
push
inc
xor
inc
daa
cmp
adcb
arpl
sahf
dec
jge
mov
cmp
sub
and
sbb
gs
xor
push
push
or
xchg
adc
and
mov
icebp
rolb
xchg
pusha
shll
je
inc
dec
in
xchg
int3
sub
sbb
xchg
lret
cmp
rorb
lret
inc
ret
movsl
loopne
in
mov
enter
outsl
mov
and
pop
sub
jge
fincstp
pusha
mov
jb
mov
cmp
repz
fiadds
cltd
into
mov
repz
jnp
mov
add
testl
fwait
dec
add
lods
and
push
cmpsl
inc
pop
mov
int3
push
flds
jns
xor
sbb
inc
dec
push
xchg
mov
inc
pop
xchg
push
inc
movsl
in
and
push
pushf
or
xorb
add
dec
mov
inc
scas
mov
xchg
jle
push
pusha
pop
test
add
xchg
mov
adc
sbb
mov
cmp
rdtsc
inc
out
dec
lock
jno
mov
js
clc
sti
fisttpll
mov
jl
jno
push
jnp
out
or
jo
les
and
jle
push
adc
daa
adc
out
pop
std
jb
dec
cmp
inc
mov
or
scas
push
dec
xor
cmc
insl
xchg
sbb
mov
push
inc
mov
inc
imul
mov
stos
shll
cmp
rorb
out
scas
aaa
mov
scas
mov
or
js
or
call
addr16
add
lcall
push
jb
leave
aas
movsb
popa
aam
scas
subb
call
adc
aaa
outsb
mov
sbb
xchg
lret
ljmp
and
lea
jbe
in
push
mov
lea
pop
cmpb
es
push
daa
xor
gs
mov
subl
sub
pop
mov
xchg
movsb
sub
xor
insb
cwtl
push
push
aas
add
and
pop
bound
xchg
pop
adc
mov
loop
xlat
fcompl
xor
in
cmp
xchg
xchg
fwait
mov
mov
sti
ret
mov
and
cmp
and
adc
sahf
sub
mov
xchg
out
and
push
sbb
dec
in
jne
mov
mov
push
das
cmp
mov
test
mov
enter
xor
fistps
popl
jge
mov
mov
hlt
mov
jns
mov
cmp
mov
ret
emms
popf
stos
retw
decl
repnz
xor
popa
scas
cmpsb
and
adcl
pushf
lds
in
xor
mov
push
es
test
dec
add
inc
cmp
cli
ss
mov
daa
cmp
repnz
mov
ds
cs
mov
jne
enter
jle
jno
fwait
inc
dec
fmull
lock
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
scas
jnp
out
inc
pusha
addl
push
or
movsl
sbb
pop
xor
jo
jmp
je
stos
repz
xor
aaa
or
xor
xchg
lahf
cmpsl
add
enter
sbb
nop
xor
xchg
add
inc
inc
add
push
sub
fisttps
cmp
inc
aaa
or
pop
lret
gs
cmp
sub
cld
cmp
dec
xchg
jl
cmc
jg
adc
cmp
dec
ror
inc
cmp
imul
xor
mov
lcall
testl
add
add
push
add
jnp
or
adc
dec
aam
insl
push
or
test
mov
dec
notb
je
aaa
dec
adc
sbbl
dec
push
cltd
sbbb
es
sti
sub
jg
dec
xlat
rolb
xchg
lods
xchg
cli
push
add
jg
fwait
mov
sbb
push
or
movsb
movd
fwait
inc
jl
popf
ja
lret
xor
sub
pusha
hlt
xchg
test
mov
jns
adc
dec
jbe
cltd
iret
repz
mov
or
rcr
adc
jo
rorl
std
push
add
lcall
scas
inc
pop
stos
insl
sar
push
or
int
pop
sbb
mov
shl
inc
es
push
adc
cmp
ds
mov
sub
stos
insl
mov
fdivrl
pop
fcomps
jns
das
inc
test
icebp
inc
pop
dec
movsb
ss
xor
xor
cs
insb
cmpb
data16
aaa
dec
loopne
insl
push
sub
push
rcll
int
mov
inc
cltd
pop
mov
push
adc
jmp
pop
push
push
add
mov
push
pop
or
cmp
cmp
mov
cmp
inc
mov
push
std
rcr
cmpsb
pushf
lods
sbb
mov
mov
dec
push
push
ret
push
fcmovnu
push
es
push
push
dec
inc
out
js
inc
mov
imul
xor
pushf
pop
lods
inc
or
addl
jmp
loop
mov
mov
or
pop
mov
scas
aas
out
mov
sbb
std
out
xchg
and
mov
mov
cmp
adc
icebp
loopne
sub
int
rcrl
pusha
jmp
hlt
jle
pop
loope
js
adc
and
pop
and
push
push
lods
jp
xor
leave
imul
pop
push
add
mov
movsb
push
out
inc
mov
roll
jmp
aam
xor
xchg
sub
fstl
xor
mov
cwtl
jle
outsl
inc
mov
fcmovu
popa
push
into
fdivrl
in
or
sbb
and
clc
outsl
movsl
pop
mov
push
cltd
clc
sti
popa
xchg
sub
inc
inc
push
sahf
mov
mov
notb
lea
dec
nop
sahf
sub
scas
cmpsb
mov
sbb
aas
out
shrb
mov
aad
inc
lahf
sub
cld
test
test
and
mov
inc
pusha
clc
stc
inc
xchg
push
sbb
out
cmc
out
outsl
loope
ja
bound
dec
adc
fwait
add
add
or
movsl
push
inc
movsl
add
in
sbbl
jmp
sti
xor
rcll
aad
aam
insl
pop
inc
jb
push
or
rcl
in
loopne
and
pop
out
add
jge
lahf
ja
xor
adc
js
xchg
pop
adc
sbb
icebp
in
xor
or
xchg
jle
sbb
cmp
ficompl
xchg
in
loop
xor
mov
push
jbe
inc
xchg
test
sub
dec
arpl
cmp
add
inc
std
adc
mov
add
enter
unpckhps
cmp
addr16
pop
sub
mov
out
scas
jle
sub
fcmovbe
adc
mov
cmp
pop
out
lds
gs
dec
sub
fidivl
leave
mov
jecxz
movsb
std
jg
dec
out
xchg
loop
dec
dec
data16
rorb
xchg
and
lods
aas
lds
pop
imul
fdivrs
sbb
in
add
rcrb
fsubs
ljmp
shl
jb
mov
jo
and
sti
sub
inc
inc
insb
xlat
dec
or
pop
sahf
xchg
xor
popf
mov
push
adc
orl
shlb
test
and
xor
sbb
jo
push
pop
lds
push
or
daa
mov
push
xorl
add
dec
xchg
xchg
test
sarb
mov
jnp
pop
stos
ds
js
mov
cmpsl
aas
push
lret
popa
sbb
mov
repz
bnd
pusha
cmp
iret
call
sub
fisubrl
in
inc
adc
jns
icebp
mov
pop
adc
cld
iret
inc
mov
nop
lcall
fbstp
lods
roll
adc
jmp
jo
fwait
fwait
xchg
cmpsl
sbb
fld
ds
jae
hlt
je
mov
lahf
xchg
and
sbb
cmp
inc
dec
adc
sbb
mov
mov
pusha
pop
cli
cmp
push
sbb
pop
xchg
sub
dec
lcall
mov
cmp
out
daa
push
cmp
inc
xlat
adc
dec
push
out
push
adc
inc
xchg
inc
mov
stos
in
arpl
bound
fwait
inc
gs
js
jne
movsb
int3
mov
sahf
clc
mov
pop
arpl
mov
es
and
pop
dec
and
ds
outsl
iret
xchg
jnp
sub
push
or
mov
stc
mov
inc
inc
ljmp
and
push
int
das
mov
xor
andb
mov
cmp
arpl
popa
das
fnsave
rcll
hlt
call
sahf
popa
mov
sbb
xchg
mov
pop
jecxz
pop
sbb
jp
or
inc
push
dec
popf
aaa
lds
ret
xchg
sti
adc
adc
in
or
test
stos
adc
pusha
out
add
mov
dec
add
cmp
mov
inc
movb
dec
cs
ds
dec
xor
push
jbe
or
fcompl
nop
repnz
pusha
loopne
insb
stos
mov
inc
outsl
push
in
aam
inc
ja
mov
fwait
in
sti
pushf
fpatan
popf
mov
cmpsb
cmp
popf
dec
push
xor
lods
jl
xchg
mov
mov
insl
jo
bound
mov
xor
arpl
mov
pop
mov
pop
inc
jecxz
cmp
sahf
sbbl
scas
pop
stc
dec
push
not
add
sub
sahf
dec
inc
xor
fsubs
fxch
or
ljmp
testb
loop
mov
pop
aam
pop
mov
xchg
ds
adc
das
jmp
xorl
push
push
int
into
test
and
jge
lahf
loop
jne
jo
test
js
mov
dec
mov
idivl
lock
ret
dec
dec
add
adc
sbb
jbe
in
push
dec
and
sbb
lcall
xchg
dec
sbb
cltd
and
pop
jl
lods
mov
pop
jbe
mov
jns
test
sbbb
subl
and
inc
sar
mov
std
and
push
mov
loope
mov
xchg
mov
and
inc
or
xchg
ss
ljmp
test
inc
dec
movsl
rcll
aad
inc
xor
stc
aad
adc
xchg
mov
xor
pushf
xchg
ret
push
adc
test
jne
and
aas
lods
cld
mov
dec
ljmp
xchg
or
mov
sub
cli
xchg
ret
pop
pop
ss
stos
icebp
dec
scas
jg
shrb
lock
mov
xchg
inc
mov
cs
sub
fidivs
jo
jecxz
outsb
adc
or
test
clc
adc
adc
xchg
mov
movsb
mov
and
push
movsl
push
dec
push
mov
or
jle
test
jno
xchg
rolb
sub
mov
sub
cltd
mov
lcall
aaa
mulb
mov
in
mov
jns
add
aaa
into
repz
fsubrl
movsb
or
int
lea
pop
iret
and
rorb
mov
mov
repz
push
mov
mov
es
cmp
scas
mov
adc
insb
sub
jnp
pusha
cmpsl
push
mov
rolb
xor
rorb
cmp
sbb
and
fs
dec
cmp
arpl
out
cmp
pop
jo
fwait
mov
in
and
addr16
andb
cmp
pop
xchg
sub
cmp
inc
stos
mov
rcrl
mov
shrl
mov
fisubrl
mov
xchg
and
cmp
or
sbb
jne
jmp
inc
cmp
orl
ret
iret
out
push
jl
movsl
aaa
imul
pushf
fisttps
scas
repz
fstps
rcrb
jl
mov
jmp
cmp
pushf
jnp
and
mov
fxch
push
xor
rorb
cmp
test
add
xchg
or
and
mov
into
das
mov
data16
je
or
cmp
test
push
or
push
aad
popf
subb
xchg
push
cmp
in
sarb
test
notl
xchg
mov
notl
imul
jnp
sub
call
xor
call
dec
adc
xor
mov
dec
sbb
ja
mov
push
imul
jecxz
jns
jo
add
jmp
imul
lsl
adc
aad
jge
pop
sub
xchg
mov
lds
push
or
mov
out
xor
mov
aaa
stos
pop
test
inc
cmp
jb
pop
insb
push
shll
mov
xor
jp
xchg
add
movsl
cmpsl
int
jnp
lea
cmp
popa
jmp
jno
mov
inc
into
dec
xor
mov
sbb
cmc
loop
loopne
loop
in
shll
cwtl
sbb
test
sbb
xchg
adc
call
push
loopne
aad
fmuls
mov
out
leave
adc
lahf
mov
jmp
mov
adc
push
out
sbb
je
imul
jo
mov
shll
push
mov
sbb
xlat
and
jb
ret
arpl
rcrb
jmp
in
mov
cmp
jno
cmpsb
repnz
xchg
sbb
mov
test
or
cmpsl
pop
mov
nop
jle
xor
cmp
or
add
cmp
pop
push
outsb
xorb
cmc
mov
pop
into
or
jno
add
cltd
pop
lods
sti
add
lcall
mov
loopne
dec
sbb
xor
or
pop
ror
mov
jno
incl
push
cmp
insb
outsl
mov
xor
jmp
ds
in
out
mov
jae
lods
or
test
jle
mov
push
mov
xchg
push
popf
shlb
dec
insb
loop
scas
arpl
mov
and
pop
lea
sti
cltd
add
scas
sub
or
pop
xlat
cli
cmc
fmuls
dec
mov
mov
cs
pop
adc
sub
pop
mov
fildl
jae
out
xchg
outsl
inc
dec
sub
rolb
push
cmpl
push
out
inc
sbb
in
fxam
rorl
popf
rcr
mov
lcall
sub
add
and
clc
ja
xchg
rolb
mov
pop
inc
jmp
fnstsw
inc
icebp
mov
rcrb
lret
jg
cli
cmp
pusha
mov
sub
and
popa
mov
ljmp
pandn
bound
xor
into
sbb
mov
jecxz
adc
mov
enter
inc
movsb
fcompl
in
xchg
jno
scas
into
mov
or
push
or
popf
sbb
mov
xor
xor
dec
dec
jae
pop
dec
cs
data16
aaa
outsb
std
and
out
cs
mov
mov
mov
arpl
ljmp
add
xchg
rcll
add
cmp
mov
pop
dec
push
scas
fucomip
jmp
pop
lods
pop
or
xor
mov
outsl
mov
mov
cmpsb
and
mov
mov
add
fucom
mov
lret
sub
dec
insb
andb
push
dec
divl
mov
sbb
movsb
sbbb
xchg
movsl
jle
in
xor
popa
xchg
out
push
js
sub
insl
mov
aam
repnz
test
pop
arpl
inc
mov
mov
cmp
inc
xor
std
aaa
and
mov
adc
mov
sbb
mov
push
lahf
cwtl
iret
or
lcall
pop
and
xor
xchg
sbb
lret
aad
sbb
das
das
jg
test
ja
subb
arpl
shlb
inc
ljmp
mov
test
dec
shll
out
jo
popa
sti
adc
cld
sti
mov
xchg
repz
push
call
xor
xchg
pop
pop
jns
lcall
push
stc
fwait
dec
adc
daa
unpcklps
lahf
and
stos
es
in
daa
jmp
fmulp
data16
xchg
pusha
js
lret
int3
pop
or
mov
push
push
into
adc
or
repnz
dec
jno
mov
loope
push
xchg
push
jb
mov
or
ds
shrl
icebp
xchg
ret
jl
aam
mov
cmp
fimuls
packsswb
pop
mov
inc
jb
push
push
ret
dec
insl
ds
cmp
jge
xchg
mov
fwait
mov
fwait
jns
adc
mov
in
push
push
fwait
pop
subb
inc
sbb
sahf
mov
xchg
xchg
xchg
inc
mov
xlat
cwtl
mov
add
iret
add
iret
mov
jl
cs
pop
imulb
test
pusha
push
sti
shrl
add
push
mov
adc
movsl
and
cltd
js
outsl
dec
push
rcrl
andl
mov
push
jns
sub
fbstp
movl
shl
xchg
dec
xchg
cmp
movsl
fnsave
repnz
lds
push
loop
ss
and
jmp
fsubs
sbb
jg
push
outsl
jle
inc
addr16
iret
mov
subl
jge
fistpll
sbb
lods
stc
xor
lcall
psllw
sub
iret
pop
and
sub
cli
pop
in
popf
push
cltd
dec
aam
adc
jns
push
cmc
ja
cmp
xor
ficomps
jmp
into
and
insb
and
mov
inc
das
cli
into
popf
shll
pop
test
sub
cmp
xor
bswap
mov
cld
stos
jp
dec
xchg
push
mov
sbb
cmp
cmpsl
xorb
xor
jne
push
jl
icebp
lds
dec
loopne
push
pusha
ror
xchg
inc
nop
ret
fcmovu
push
test
xchg
addl
pop
xchg
cmp
pushf
rcrb
dec
bound
mov
add
sbb
pop
call
insb
dec
xchg
cld
pusha
arpl
pop
pop
inc
dec
iret
aad
out
gs
insb
xchg
sub
stc
test
pop
add
in
sarl
es
iret
or
inc
mov
push
outsl
popf
inc
dec
add
inc
and
lret
mov
mov
test
roll
sub
cmp
ja
jnp
jo
mov
xlat
lahf
mov
arpl
int3
gs
lock
fucomi
testb
stc
xchg
push
adcl
rorl
fsubs
dec
cmpsl
sub
iret
dec
sbb
sbb
scas
icebp
push
add
adc
fnsave
inc
xchg
sbb
hlt
stos
cmp
mov
jo
adc
xchg
dec
sbb
xlat
int3
adc
sbb
icebp
cltd
or
or
mov
sbb
lret
test
and
xchg
sub
adc
adc
cmp
push
mov
lret
sub
pop
lahf
icebp
adc
fs
adc
cmp
inc
movsb
lods
rorl
test
test
or
dec
mov
xor
out
add
lea
add
fsubrl
mov
ja
lret
and
loopne
or
cmc
sub
sub
pushf
pusha
call
pop
sub
mov
out
dec
mov
int
xchg
pop
arpl
adc
out
arpl
sbb
xor
sbb
adc
xchg
out
push
push
into
jl
repnz
addb
sbb
jnp
xor
scas
inc
fdivrs
filds
jl
inc
cmp
outsb
scas
fdiv
push
adc
sbb
mov
add
xor
mov
iret
add
into
xorb
sbb
cltd
jnp
insl
fwait
jmp
inc
mov
jbe
stos
and
push
mov
cwtl
pushf
rorl
ljmp
pop
pop
push
inc
ret
add
stos
cmp
dec
stc
ficoml
idiv
mov
les
and
fists
lods
imulb
push
inc
sub
pop
or
lcall
mov
ret
mov
xchg
std
mov
test
in
xchg
imul
addr16
out
fcomi
lcall
lret
insb
cmp
xor
iret
lcall
mov
mov
out
sahf
shll
pushf
cmp
in
jns
aam
cwtl
mov
lcall
das
push
icebp
das
mov
push
xor
cmp
daa
mov
popa
mov
dec
pop
pop
test
push
add
cmpl
popf
pop
inc
pop
ja
mov
outsl
icebp
fsts
jno
in
jae
cli
xchg
sbb
xabort
mov
xchg
jp
adcb
int
push
cli
adc
cmp
xlat
mov
mov
mov
lcall
mov
lods
cmp
into
sub
push
icebp
inc
lret
cwtl
pusha
inc
leave
in
jmp
test
cli
dec
imul
xor
aad
aaa
lods
sbb
repnz
cmp
or
stos
cmp
push
inc
mov
inc
popa
fidivl
xchg
sub
push
jbe
mov
mov
mov
jb
leave
add
mov
xchg
ret
cli
or
pop
lcall
sbb
insb
rorl
test
sub
or
aam
or
ficomps
sub
cmp
pop
cmp
test
out
and
aam
pusha
js
mov
adc
xlat
xorb
cmp
lods
cmp
inc
push
lds
call
or
gs
and
mov
inc
mov
inc
push
cmpsl
cli
mov
inc
inc
xor
dec
shrl
call
fsubrs
int
pop
cld
shr
sbb
pop
into
cmp
daa
imul
leave
les
xchg
dec
js
xchg
outsl
xor
imul
test
xchg
jns
int3
xor
mov
std
push
sarb
test
fisttps
lahf
or
sbb
loop
div
push
cmp
xor
les
ljmp
inc
imulb
pop
ja
gs
inc
movsl
jo
adc
adc
mov
push
cwtl
push
xchg
mov
adc
push
sub
pop
test
addl
mov
jp
data16
and
aaa
arpl
mov
iret
or
adc
mov
arpl
and
dec
inc
and
insl
push
sti
inc
xchg
xchg
jp
mov
adc
or
xchg
fisubrl
scas
and
xchg
jbe
rol
lock
sbb
jge
mov
inc
or
movups
jg
xchg
ljmp
rorb
mov
cmp
lock
xchg
push
scas
out
jp
outsl
aad
dec
add
cwtl
jmp
outsb
xchg
ret
ret
cmc
pop
adc
adc
lahf
or
push
lret
jmp
and
jmp
jg
je
lods
mov
add
adcb
jecxz
clc
mov
add
push
rep
xchg
lock
in
or
fstp
jne
xchg
sub
lret
mov
insl
adc
sbb
fucomi
dec
pop
jb
pusha
adc
mov
xchg
sarb
aaa
mov
loopne
shll
jl
xor
ja
adc
mov
xor
cld
push
pop
push
movsl
inc
mov
mov
js
shrl
xchg
mov
adc
mov
loope
push
adc
ret
ret
outsl
movsl
pop
sbb
std
xchg
aaa
xchg
mov
add
sub
mov
push
test
out
or
mov
add
inc
inc
shlb
in
xchg
push
nop
sub
sbb
rorl
pop
rol
xchg
jno
imul
fildll
ja
or
stc
sub
xchg
and
lret
mov
push
jne
loop
cmpsb
mov
adc
mov
inc
dec
shll
test
enter
dec
rol
adc
mov
arpl
pop
rolb
and
xor
fidivrs
sub
sub
dec
mov
in
jne
test
pusha
fs
bound
loopne
mov
addr16
ret
mov
and
jmp
mull
xchg
pop
inc
fsts
ror
clc
clc
scas
negb
add
cmp
mov
add
and
or
fldcw
cwtl
mov
pop
outsl
jae
aaa
scas
notb
cld
mov
arpl
push
outsl
iret
mov
aad
inc
jp
cmp
test
jnp
xchg
adc
push
pop
mov
scas
push
addr16
jmp
les
sti
xor
sub
mov
xchg
adc
sbb
jp
aad
fs
popa
test
jb
adc
dec
les
or
cmp
orl
sub
add
insl
mov
int3
into
add
lods
pop
sub
xor
outsb
fs
adc
lock
insb
divb
adc
xchg
lods
mov
cmp
movsl
adc
psubusw
out
add
mov
push
imul
dec
xor
xchg
outsb
and
mov
inc
daa
lret
icebp
and
pop
xlat
pop
cmp
aad
in
adc
lret
aas
aaa
pop
sbb
test
cmpsl
mov
fs
imul
adc
mov
es
cld
enter
dec
adc
lret
pop
mov
scas
test
clc
outsb
fistl
mov
or
mov
ja
jle
aam
mov
jno
dec
sbb
outsb
cmc
negl
sbb
push
add
lock
jno
push
xchg
imul
and
adc
push
jge
loopne
cli
mov
ret
cmpsb
shll
lods
daa
lock
movsl
push
test
mov
xor
scas
fs
inc
out
or
repnz
cmp
push
dec
mov
lcall
ds
and
xchg
xchg
jne
sbb
shr
xchg
inc
mov
xor
es
pusha
ret
divl
inc
fucomi
fildl
xchg
daa
push
push
push
in
push
inc
shlb
or
mov
xchg
mov
cmp
or
mov
sub
cmp
inc
xchg
add
pop
jp
or
cwtl
stos
nop
xor
jmp
sub
enter
and
movsb
lahf
arpl
mov
scas
jne
sub
xor
mov
adc
pop
cmp
and
lret
cltd
adc
inc
jnp
testb
setg
bound
lock
lret
fidivs
jb
xorb
cmp
hlt
xchg
sbb
jno
xchg
insl
dec
mov
add
add
pop
std
mov
fdivrs
aas
enter
popf
cs
pop
xlat
shlb
sbb
lods
ljmp
xchg
mov
test
loop
cmpsb
add
in
jne
mov
xor
andl
ja
push
addl
inc
jmp
int3
movsb
mov
or
rcrl
inc
mov
inc
xchg
mov
filds
add
inc
adc
cmp
or
aam
bnd
dec
daa
or
loopne
mov
pop
idivb
faddl
jp
andl
pop
xchg
movsb
repnz
dec
adc
stos
pop
push
inc
addr16
sub
jo
loop
hlt
aad
dec
in
jo
jne
inc
or
and
sarl
ror
das
push
mov
xor
dec
mov
inc
pop
dec
dec
jmp
adc
leave
mov
shr
leave
testb
pop
aam
or
lods
out
fdivl
or
push
or
cmp
dec
imul
addr16
adc
outsl
and
cmp
lods
or
adc
sbb
fwait
leave
into
insb
and
aad
mov
push
mov
mov
inc
scas
mov
cmp
adc
sbb
lods
jae
sub
movsb
insl
in
ja
dec
lds
cmp
and
lcall
mov
pop
dec
outsl
int3
xchg
scas
out
mov
in
pushf
outsl
mov
stos
inc
xlat
pop
push
mov
aaa
mov
or
and
pop
cwtl
adc
mov
or
inc
inc
sub
sbb
lds
ja
xchg
fisubs
cmp
or
not
xchg
outsb
fistl
mov
jb
jae
sbb
orl
cmp
sbb
sahf
dec
pop
mov
dec
pop
mov
nop
ret
icebp
push
cmp
out
popf
jnp
xchg
sub
aam
incl
add
cmpsl
rcl
and
or
inc
mov
or
cltd
jb
or
test
and
andl
mov
ljmp
jge
cmpsl
outsl
and
cmp
test
fiadds
sub
and
mov
popf
xor
mov
pop
loop
adc
sbb
push
jo
shl
out
mov
into
sub
mov
shrl
xchg
pop
fnstcw
sahf
out
sub
jle
lret
lcall
je
in
add
lea
cmpsl
xchg
cmc
sbb
andl
sub
fcomp
jmp
xchg
add
test
ficomps
or
ljmp
jmp
sub
out
jge
mov
mov
js
les
arpl
cmpsl
lock
andb
push
std
xor
outsb
pop
inc
mov
jmp
xchg
fistpll
dec
xchg
jl
mov
outsb
sahf
jae
pusha
sbb
pop
pop
scas
lock
in
in
stos
mov
loopne
dec
add
dec
test
sub
insb
mov
stc
and
loope
sub
ret
inc
xlat
rol
inc
add
ds
sbb
lcall
sahf
inc
cmpsb
inc
xor
out
fidivrl
mov
mov
andb
hlt
int
add
insl
pop
pop
push
movsb
loope
sbb
mov
or
enter
cmpsb
pop
test
and
ljmp
lock
add
movsl
xchg
orb
cmpsl
loopne
push
sti
in
insb
test
pop
mov
mov
adc
xor
frstor
inc
ljmp
lods
or
xor
movsb
inc
sbbb
xchg
js
outsl
or
xor
xorl
stc
pop
jmp
pop
fbstp
dec
mov
mov
sbb
js
popa
cmpsl
mov
adcl
cmp
lods
adc
mov
sahf
test
outsb
mov
icebp
int
push
imul
and
add
jmp
addr16
outsb
xchg
arpl
testl
sub
leave
sti
sub
push
scas
stos
int
js
je
lds
add
lds
cwtl
gs
rolb
mov
das
and
cmp
dec
test
cmpsb
sbb
xchg
iret
add
push
push
mov
fbstp
ja
test
jns
add
inc
enter
mov
test
in
and
push
jge
in
out
mov
mov
mov
gs
mov
out
mov
insb
aad
repnz
pop
xchg
cmp
or
adcb
ja
xor
dec
or
cmp
or
xchg
pop
cli
xlat
mov
iret
fsubs
xchg
flds
dec
shlb
sbb
jne
cmpsl
sub
outsl
outsb
mov
mov
and
inc
jae
rcr
insb
out
pushl
mov
fbstp
and
xchg
mov
and
xchg
cli
lods
mov
push
lahf
mov
mov
jmp
dec
and
in
fs
mov
rolb
jmp
jecxz
xchg
mov
cmp
lret
jge
dec
xchg
push
call
std
test
pop
jb
dec
jmp
xor
icebp
or
jns
int3
sahf
and
and
addl
xchg
enter
divl
mov
into
mov
mov
push
jne
gs
jno
stc
movsb
addl
js
ja
or
and
in
arpl
aas
es
inc
dec
fs
pop
cmp
pop
cltd
mov
mov
mov
and
arpl
loop
scas
xchg
testl
and
xor
sbb
or
cmp
movsl
add
push
decl
pop
sub
add
leave
cmp
push
outsl
jns
pusha
aaa
jmp
aad
enter
mov
mov
lahf
inc
sti
fstps
cwtd
mov
lods
int3
lea
xor
decb
repz
in
sub
in
adcl
lods
fildl
rorl
pop
inc
movsl
data16
aaa
lret
mov
repz
mov
daa
out
add
cmp
inc
shrb
fucom
jo
pop
fisubrs
pop
mov
fcomps
cvtdq2ps
jbe
ret
jge
aaa
popf
js
jg
pop
fnstenv
or
cld
push
stos
gs
mov
stos
xchg
call
xor
aad
add
int
pop
mov
and
ljmp
into
fisttpl
add
subb
ss
mov
cs
shrd
inc
mov
in
fldcw
sub
cmp
sbbb
lret
push
dec
lret
mov
hlt
jne
jbe
mov
add
add
shll
test
xchg
test
jo
mov
adc
dec
dec
data16
out
in
test
call
test
ds
in
pop
imulb
sbb
and
jg
in
push
and
fidivrl
dec
dec
push
rclb
cmpsl
adc
in
ja
mov
movsl
test
lret
arpl
shll
sbb
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
lahf
sub
xor
addl
test
sub
daa
std
sbb
popa
and
mov
sub
int
xchg
rolb
mov
daa
lods
and
lock
call
mov
xor
stos
pop
mov
repz
sbb
shll
cli
lock
jg
mov
sti
lds
xorb
sbb
cmp
in
push
pop
fdivl
pop
cs
std
xor
mov
sbb
xchg
test
cmp
inc
add
and
fyl2x
std
mov
rcrb
jle
and
and
dec
push
mov
pusha
out
mov
enter
inc
mov
shl
lret
lret
out
scas
outsb
mov
sbbb
pop
ljmp
insb
sbb
push
cs
sbb
sbb
insb
jo
cs
gs
ret
nopl
testl
enter
aaa
shll
mov
xor
iret
fildl
pop
lods
movsb
pop
sub
xor
pop
mov
scas
das
syscall
fwait
cmp
adc
out
test
xor
cmp
fsub
sti
mov
xchg
stos
push
test
pop
leave
dec
scas
cmc
enterw
inc
xor
push
out
clc
fdiv
in
mov
int
add
mov
and
mov
mov
mov
sti
jnp
insl
sti
popa
sbb
xor
sbb
push
stos
jmp
dec
test
and
cld
ds
push
cmp
lcall
aaa
in
xor
or
sarb
stos
pop
pop
imull
dec
jecxz
and
jns
mov
es
push
ljmp
sahf
imul
and
or
xchg
std
in
in
test
in
pop
data16
mov
push
fwait
sarb
loop
cli
ljmp
sub
xorl
jl
xchg
xor
xchg
lea
lock
mov
in
lahf
xor
sub
or
je
pop
mov
sahf
sbb
imul
out
cmp
add
adc
add
or
pop
out
hlt
ljmp
and
jp
sub
mov
call
xchg
and
push
repnz
addb
stc
push
outsb
pop
adc
je
mov
jnp
insl
jp
inc
rcll
xor
push
mov
pop
mov
mov
sarl
jne
dec
fidivrs
cmp
mov
inc
lock
rorl
add
jnp
in
mov
loope
jmp
rolb
sbb
xchg
pop
js
sub
pop
mov
addb
dec
test
cmp
mov
jge
adc
jge
mov
fbstp
dec
js
jns
jg
add
mov
repz
mov
out
sti
imulb
xlat
pusha
std
mov
and
jae
fisttps
adcl
mov
int
lods
pop
addb
lret
lret
sub
xor
mov
aas
lahf
bound
clc
jb
lods
xchg
test
or
xchg
sbbb
pop
fcoml
cmp
mov
xor
cltd
and
jmp
mov
mov
sbb
fdivs
cli
pop
lods
test
jns
dec
lea
xor
pop
scas
insb
daa
adcb
iret
cmpsb
call
dec
sub
pop
cld
inc
xchg
test
outsb
dec
sarl
push
hlt
mov
cmp
lcall
dec
pusha
je
inc
scas
cld
inc
cmpb
inc
add
repnz
xor
iret
stos
loop
or
push
push
jo
loopne
xor
jne
mov
and
imul
sbb
imul
mov
push
or
cmp
jae
jo
mov
rcl
push
insl
jmp
lcall
out
jecxz
xchg
lahf
cmpsb
aam
cmp
pushf
fnsave
jo
out
shl
mov
scas
jge
bound
push
mov
cmc
rorl
jo
aam
inc
push
sub
imul
jno
adc
adc
adc
cmp
jae
cwtl
lret
and
cmp
hlt
flds
pop
mov
popa
scas
in
mov
cmp
faddl
int
mov
inc
mov
lret
sti
and
mov
nop
addl
mov
add
sahf
aad
fwait
pop
jae
sub
sarl
push
fs
inc
or
sahf
dec
sub
mov
push
loope
fsubrs
jecxz
insb
lods
fnstcw
out
pop
inc
shl
pop
pop
dec
or
mov
dec
andb
dec
dec
sbb
sbb
je
rcr
jecxz
adc
cmp
xchg
adc
sub
cmc
out
fs
addr16
pusha
outsl
nop
leave
cmp
pop
fnsave
add
cmp
pop
xchg
mov
and
dec
jg
cmpsl
pop
mov
add
push
and
pop
sti
mov
pop
jo
pop
or
add
cmp
dec
daa
push
repz
sub
int
adc
mov
dec
mov
enter
imul
cmp
enter
sub
testl
fsubrs
mov
fcmovb
sar
push
pop
add
lock
outsb
inc
popf
and
mov
jg
shlb
xlat
mov
fadds
pop
inc
push
jg
daa
xorl
int3
aas
lods
push
pop
cmc
adc
int
pop
into
movsb
call
lock
decb
jno
lahf
mov
pop
out
add
rcr
int3
outsb
cs
push
cmp
out
fmull
xor
aas
lods
or
daa
push
xor
cld
xor
pop
mov
adc
xchg
adc
add
or
fcmovu
and
lcall
daa
f2xm1
pop
push
lods
xchg
or
test
lock
adc
adc
push
jmp
inc
pushf
sbb
and
shlb
pushf
push
mov
int
sub
dec
and
jp
rclb
lret
test
daa
jmp
pop
jmp
lcall
inc
add
dec
bound
testl
pop
hlt
fcoms
popf
out
cmpsb
mov
pop
inc
or
int3
sbb
push
cltd
test
or
out
stos
aas
pop
or
loop
push
jno
add
xor
ret
mov
scas
mov
out
stos
fwait
and
pop
nop
inc
ret
nop
test
pop
mov
adc
cmp
sbb
rclb
xchg
mov
fistps
xchg
xlat
mov
daa
test
and
addb
gs
and
dec
test
dec
dec
inc
pop
call
mov
cli
aad
sub
insl
pop
jb
inc
adc
mov
mov
or
lods
fcompl
cmp
loopne
xchg
pop
mov
xchg
rcl
adc
sbb
sub
lock
cmp
addr16
push
ds
xor
outsl
pushf
inc
cs
inc
jmp
sub
sbb
and
sbb
mov
ja
and
xor
sbb
btr
or
dec
push
pop
push
push
jl
push
jbe
loop
inc
adc
or
and
sub
push
adc
xchg
insl
ret
jns
roll
inc
xor
sub
cmpsl
fwait
popa
inc
push
pop
push
inc
lods
adc
addr16
addr16
sbb
cld
mov
push
xchg
or
jns
jb
das
fwait
std
add
test
out
xchg
loopne
iret
push
inc
sahf
jle
aas
mov
push
iret
push
add
ficoml
sub
inc
xchg
xchg
mov
push
inc
and
icebp
cmpsl
movsb
mov
adc
xlat
pop
cmpsb
sbb
adc
pusha
iret
cli
es
stos
or
in
jbe
or
sbb
not
and
scas
ret
int3
xchg
mov
inc
xchg
out
insl
enter
jae
test
int
xor
cltd
clc
and
or
jle
xchg
out
mov
mov
sbb
jp
pop
stos
jmp
pop
mov
ss
jnp
in
push
fadd
leave
stos
loope
mov
add
jge
jp
lods
rcr
fsubp
push
sub
por
pop
insb
stos
mov
movsl
cmp
mov
or
xchg
rolb
xor
push
cmp
cs
pop
push
push
pop
push
jo
outsb
insb
in
adc
dec
and
out
jle
int
out
imul
inc
bound
cli
imul
mov
fmuls
pushf
and
or
mov
xlat
add
pop
sub
into
fldt
push
hlt
les
adc
pop
mov
test
mov
or
mov
cli
cltd
push
mov
jmp
xchg
jl
mov
mov
pop
fsubrs
repz
or
popf
cmpb
add
push
mov
insb
movsb
mov
rcrb
xchg
jle
mov
xchg
mov
push
idivl
cmp
aam
imul
push
loop
inc
loope,pt
scas
stc
jmp
cmp
xor
ret
fisubrs
repz
loopne
je
xchg
in
nop
and
imul
inc
shlb
in
aam
das
xchg
ljmp
or
xchg
movl
push
push
inc
cli
loopne
lock
sub
push
std
dec
mov
inc
adc
jb
mov
mov
adc
or
cmp
clc
pusha
hlt
pop
inc
mov
mov
push
fcos
jge
sahf
fldcw
in
dec
mov
aam
dec
push
or
fwait
mov
jnp,pn
sub
pop
ret
push
jbe
lods
enter
jb
inc
repnz
or
add
les
ja
in
fists
repnz
cmp
test
lahf
lcall
xchg
and
inc
rcrb
jmp
dec
xor
pusha
mov
xchg
mov
jb
push
test
mov
out
and
pop
stos
mov
mov
stc
stos
pop
hlt
push
adc
into
and
lret
scas
mov
ja
jmp
dec
mov
push
das
mov
push
in
movsb
sub
in
je
mov
sub
adc
jecxz
mov
adc
jb
jae
xor
mov
scas
mov
je
lods
jl
add
inc
std
es
pop
adc
sahf
rcrl
into
mov
repz
outsb
ds
sub
sub
push
test
cmc
or
or
ss
add
mov
mov
pop
aas
mov
lahf
loope
cmp
imul
adc
push
repz
dec
adc
xor
ljmp
sarb
cmpsl
and
jl
dec
mov
inc
call
adc
test
in
mov
in
pop
or
arpl
movsw
movsb
inc
mov
adc
into
dec
adc
mov
adc
rcrb
xlat
sbb
adc
stos
push
out
into
imul
rorb
fisubs
int3
mov
add
pop
ss
jp
repz
sub
inc
sub
test
idivb
les
mov
cli
pop
xor
divb
clc
stc
dec
jnp
stos
jno
mov
cli
in
insb
daa
xchg
pop
mov
addl
fcmovnu
sbb
ret
iret
push
push
mov
pop
inc
loopne
sar
inc
and
mov
xor
stos
push
test
and
xor
lods
add
scas
cs
push
lds
ss
sarb
mov
scas
mov
es
push
jg
cmc
mov
stc
xor
es
add
scas
jnp
aad
test
mov
lcall
fadd
icebp
in
daa
cmp
inc
adc
mov
data16
push
push
mov
sub
mov
ficoms
push
jmp
cld
jae
inc
ret
push
dec
push
pop
int
mov
cltd
lret
mov
jl
jns
in
or
imul
imul
movsb
jecxz
rorb
fstpt
out
repnz
popf
cmp
xor
pop
das
dec
xor
jno
nop
in
test
mov
push
int3
aaa
jg
jae
stc
lret
shr
sbb
rcll
aas
mov
sbb
cmpsb
testl
mov
loopne
test
inc
les
jg
push
inc
incl
pushf
sub
lret
inc
rol
mov
out
inc
add
das
jb
sbb
scas
xor
xchg
enter
shrb
add
cli
shlb
and
call
or
cmc
in
insl
xchg
in
mov
stc
jmp
ret
xchg
mov
adc
or
sbb
xchg
out
out
addl
sub
xor
push
lock
adc
push
aas
push
mov
jl
stos
push
add
ret
scas
xchg
call
lahf
mov
mov
frstor
mov
inc
push
lcall
outsb
mov
mov
test
xchg
mov
jle
or
cld
rclb
push
out
jmp
sarb
sbb
xlat
cmpsb
pop
pop
pop
dec
movsb
jmp
jmp
adc
lahf
add
fcmovnu
ss
jmpw
nop
sbb
sub
xlat
xchg
je
mov
nop
mov
cmpsb
adc
aas
xchg
sar
jno
sbb
ds
cmp
jne
push
cmp
pextrw
pusha
push
and
rcll
and
sahf
bound
dec
jge
test
dec
mov
inc
xlat
push
aad
adc
mov
jecxz
cmp
les
icebp
in
es
loopne
test
shrl
inc
jp
xchg
xchg
mov
push
mov
ret
sub
fsubl
sbb
push
pop
imul
sar
mov
push
sub
mov
xor
jne
dec
arpl
in
jb
mov
push
adc
shlb
ficompl
movsb
jae
testl
mov
ret
sub
je
fisttps
aas
mov
std
cmc
cld
xor
ret
das
xchg
cmp
sub
pusha
sahf
int
push
scas
es
ja
mov
stos
mov
addr16
in
or
jle
mov
pop
inc
loope
dec
sahf
add
dec
xor
ljmp
sbb
mov
sub
cmp
inc
and
push
jae
add
lret
in
cmp
int3
add
daa
ljmp
xchg
xchg
dec
mov
mov
pop
mov
cwtl
xor
adc
xchg
icebp
mov
sbb
xlat
jmp
and
push
cld
repnz
sub
jle
clc
rcr
idiv
mov
fcomps
xor
pop
dec
and
and
repz
mov
mov
dec
and
add
dec
mov
push
add
sub
mov
jb
mov
jbe
popf
ljmp
loope
scas
jae
js
pop
push
and
out
or
sbb
sbb
sub
pop
push
and
dec
cltd
mov
mov
arpl
push
addw
jle
scas
jne
jbe
xchg
shll
cmp
lahf
mov
loope
xchg
movd
outsb
mov
jge
movl
mov
jl
test
test
loope
jno
sahf
adc
aaa
adc
out
adc
inc
jne
pop
mov
mov
inc
xchg
clc
and
stos
test
dec
dec
in
cmp
inc
pusha
pop
mov
mov
mov
adc
test
lret
mov
mov
imulb
rol
mov
mov
js
xor
stos
outsb
mov
pop
movsb
xor
lret
lahf
insb
inc
push
mov
adc
rcrl
jmp
loopne
sbb
mov
sub
int
lods
mov
enter
and
clc
scas
fdivr
sbb
cld
test
out
loope
push
je
cmp
fiaddl
movsb
dec
mov
sub
pop
dec
jbe
pop
movsb
sbb
inc
cmp
je
in
sub
movsb
ja
inc
outsl
jmp
cld
xchg
sub
inc
fimuls
filds
mov
idivl
je
ljmp
pop
or
sub
inc
popf
jle
mov
shr
push
daa
xchg
je
outsb
push
lock
and
int
sbb
push
ds
add
mov
subl
out
mov
repnz
movsb
mov
or
push
xchg
dec
outsl
or
and
addb
int
clc
fwait
cli
into
sarb
mov
pop
sbb
mov
jle
push
movsl
out
in
lods
pop
cwtl
lds
and
ficompl
out
jae
jle
in
jb
dec
mov
cld
jp
dec
inc
fisttps
dec
hlt
xchg
int3
and
in
les
stos
xchg
xor
jae
xchg
mov
mov
out
je
test
int
and
aaa
rcll
or
add
les
popf
adc
scas
inc
xor
clc
and
nop
daa
enter
aam
mov
mov
push
jmp
cmpsl
jmp
fdivl
mov
repnz
repz
cmpb
xor
pop
pop
and
cmp
jecxz
mov
cmp
mov
cmp
ja
and
push
nop
dec
fs
loope
cmp
rcll
dec
sahf
mov
mov
test
add
push
pop
dec
sub
cld
fwait
xorl
jmp
mov
mov
add
ds
push
and
xorb
cmp
pop
rorb
or
std
cmp
jle
popf
loopne
sarl
daa
mov
push
int
inc
mov
js
test
arpl
adcl
into
femms
or
mov
pop
xor
pop
cs
mov
mov
addr16
loop
jmp
div
inc
pushf
int
test
sbb
mov
test
jmp
rcr
loope
repnz
shll
es
addr16
pop
notl
cld
adc
push
push
or
sbb
clc
mov
sti
stos
cmp
out
add
add
les
add
and
stos
or
jl
int
es
loop
mov
mov
push
cmp
imul
inc
jno
mov
lret
mov
stc
dec
xchg
lret
roll
jne
xchg
cmp
and
aas
xlat
jecxz
jmp
add
sbb
mov
push
fsts
not
fsubrs
sub
xchg
adc
adc
dec
jo
jne
push
pop
inc
mov
mov
mov
clc
jns
jnp
xor
and
push
jge
sbb
xchg
stc
mov
pop
lahf
push
inc
dec
push
mov
out
sub
lahf
leave
fisubrl
add
cmp
cmp
scas
andb
cltd
inc
dec
subl
pop
shrb
pop
or
lock
scas
push
out
fwait
int3
loope
cltd
ja
pop
out
add
pop
hlt
adc
sbb
cmc
mov
lcall
div
xlat
mov
js
arpl
jb
jno
jge
jae
into
mov
and
or
in
cwtl
sub
ds
jne
sub
mov
add
add
rol
arpl
ja
fnstsw
mov
jne
dec
and
pusha
popf
mov
mov
imul
test
xor
out
mov
xchg
pop
sbb
mov
inc
cmc
mov
push
jnp
push
dec
ss
pop
lcall
inc
add
bound
xchg
sub
jp
mov
push
jnp
fadd
daa
mov
mov
push
cli
inc
js
bound
lahf
jnp
nop
mov
push
daa
pop
faddl
clc
in
lods
pop
fwait
xor
xchg
push
sbb
arpl
inc
xor
sbb
stc
or
add
sahf
daa
int
or
cs
and
ret
cli
addl
or
fwait
lods
and
or
adc
sbb
fisubl
cmp
je
shrl
sbbl
dec
aaa
cmpsl
add
xor
mov
cmpl
adc
outsb
mov
xlat
scas
pop
sbb
pushf
mov
jnp
mov
imul
sub
inc
arpl
das
add
ja
sbb
mov
inc
roll
ret
mov
arpl
mov
mov
push
loope
add
jmp
ds
mov
dec
ds
icebp
test
push
push
dec
jl
jno
cltd
jae
addl
mov
sub
rcrl
int
xor
test
mov
cltd
sub
ficompl
mov
das
cmpsb
gs
mov
arpl
dec
cmp
mov
popa
dec
and
and
xchg
mov
pop
imul
hlt
fs
mov
or
or
xchg
xor
dec
gs
stc
jbe
pop
cmp
jo
repz
adc
adc
dec
xchg
repz
ror
xchg
adc
jno
jae
mov
mov
and
mov
shlb
xchg
test
arpl
or
and
popf
pusha
cmp
jge
lret
xchg
subb
fcoms
add
mov
fwait
incb
dec
push
mov
mov
add
fs
and
out
mov
inc
sbb
popf
jne
repz
push
daa
shlb
cmp
out
mov
mov
cwtl
icebp
in
dec
pushf
incl
std
je
push
loop
sub
popf
hlt
mov
or
data16
idiv
inc
std
inc
cwtl
aaa
mov
dec
rcl
bound
out
insb
rcrl
daa
adc
hlt
cli
or
sub
xor
popa
test
cmp
sub
lret
pushf
or
sbb
pop
aam
call
icebp
movsl
pop
push
mov
and
xchg
call
sub
stos
sub
xchg
jnp
or
inc
fisubs
xor
aaa
mov
and
add
jnp
imul
xchg
mov
adc
cmp
push
push
fadd
and
es
mov
sbb
push
addr16
lahf
arpl
xor
pusha
addb
cmp
adcl
sbb
pop
jns
sti
mov
das
aam
ja
int
loope
cmp
mov
push
cld
test
xchg
aaa
adc
mov
adcb
gs
add
test
cmp
push
dec
sti
mov
mov
decb
pop
pushf
push
pop
faddp
ret
adc
push
push
cmp
mov
or
xchg
sub
mov
cmp
insl
pop
nop
lahf
pop
xchg
fidivrs
ljmp
call
jecxz
cmp
call
add
sbb
mov
ficompl
aas
sub
dec
in
sbb
lock
and
jno,pn
icebp
nop
arpl
lds
cmpsl
icebp
add
in
adc
cmp
adc
ljmp
cltd
jb
inc
dec
cmpsb
mov
pop
mov
push
fcmovb
push
and
mov
sub
into
dec
and
cs
lea
sahf
stos
sub
inc
mov
out
push
enter
in
stos
popa
popf
in
sub
les
pop
into
and
iret
adc
sbb
and
ret
xchg
jmp
cmp
sub
fbstp
mov
fimuls
sti
sub
iret
jae
add
pop
xchg
repnz
bound
data16
sbb
outsb
add
lea
cs
sub
lahf
lea
clc
clc
dec
jecxz
mov
icebp
inc
test
xchg
dec
fwait
mov
adc
insb
movsl
mov
jae
cmp
mov
xchg
xchg
out
xlat
and
cmc
cmc
mov
sarl
outsl
push
add
aad
xlat
in
fcomi
push
xor
cmp
sbb
stos
mov
std
or
sub
pop
adc
outsl
pusha
movsl
mov
es
push
xchg
pop
insl
inc
lods
mov
scas
les
add
mov
push
jg
mov
add
mov
cmp
lret
cmp
sahf
ss
xchg
xor
inc
push
mov
loope
je
bound
push
or
lret
cli
in
movsb
loop
lods
aaa
repnz
test
popf
shrb
mov
xchg
cltd
or
or
in
fists
jp
mov
psubsw
pushf
adc
pop
rcrl
in
and
pop
in
fmull
inc
int3
mov
movb
scas
idivb
and
fwait
dec
iret
pop
mov
jb
ret
aad
out
ret
and
inc
test
add
popa
ret
cmp
lea
shl
in
int3
pop
imul
or
nop
xor
inc
mov
sbb
add
test
stos
in
arpl
mov
or
cli
xchg
push
or
ret
adc
into
pop
adc
inc
cmc
cmpsl
cmp
cmp
aas
fisttps
fldl
push
into
and
add
ljmp
call
jae
mov
adc
fstpt
push
imul
lret
and
push
rcl
dec
icebp
ret
cmp
cmp
jecxz
in
iret
xor
fstpt
frstor
jle
push
or
cltd
in
stos
rclb
insb
scas
int3
mov
shlb
cmc
or
sti
sbb
jbe
int3
push
mov
dec
cltd
pop
inc
or
cmc
lcall
pop
or
xlat
loope
cltd
add
xchg
ror
arpl
inc
pop
shrb
adc
xor
jmp
add
sbbl
lcall
cmp
stos
mov
sti
xor
mov
mov
dec
dec
aas
sahf
push
loopne
std
stc
and
lds
mov
jp
lcall
insl
push
mov
pop
mov
aas
xchg
stos
mov
dec
scas
rorb
leave
fwait
mov
fimuls
das
movsl
push
adc
js
fwait
ss
fisubrl
jno
mov
lahf
and
xchg
flds
out
orb
jecxz
xchg
inc
bound
dec
xor
lods
mov
push
mov
sub
sbb
xchg
mov
ds
push
roll
sub
repnz
add
dec
mov
scas
add
and
pop
push
or
jo
jae
jle
jo
xchg
jecxz
cli
xor
jcxz
dec
xchg
pushf
add
sub
jle
lret
xor
sub
mov
xor
sub
fsubrs
push
push
test
xchg
in
ret
loope
jb
xor
cmp
movsb
adc
push
aad
fnsave
pand
xchg
xchg
data16
jl
jmp
nop
ljmp
lock
inc
js
mov
xor
ficomps
jmp
or
add
pushf
lret
xchg
inc
xchg
or
xor
mov
flds
pop
push
or
stos
mov
xchg
lods
xchg
fisubrs
out
xor
push
cld
outsb
out
stos
out
outsb
fs
pop
sti
dec
sbb
jne
outsl
dec
pusha
or
inc
xor
insb
inc
data16
jge
mov
popa
in
mov
xlat
loope
ljmp
xor
inc
xor
sbb
sbb
repz
inc
dec
aas
movsl
roll
insl
test
movsl
cmp
repnz
mov
jns
into
bnd
pop
imul
cs
dec
pop
jecxz
mov
loope
test
addr16
sub
fsubp
mov
dec
jl
xor
dec
ret
mov
dec
sbb
cld
mov
pushf
mov
insl
xor
xor
out
cmc
jle,pt
test
fistl
xor
daa
push
sbb
mov
lds
js
dec
int
dec
loope
add
jno
add
xor
jae
xchg
movsl
cmp
mov
cmpsb
aam
jmp
lcall
cltd
mov
jmp
adc
in
push
sbb
ret
outsb
outsb
fs
loop
enter
adc
dec
push
xor
fiadds
repz
push
xor
mov
insl
in
stos
cmp
movsb
mov
pop
push
sub
stos
lcall
xchg
inc
jo
fucomp
pusha
or
or
loope
lods
mov
test
mov
lods
pop
adc
test
push
jp,pn
insb
mov
fmuls
push
mov
cmc
mov
ds
stc
push
mov
das
insb
loope
cmc
jbe
dec
or
xor
popf
pop
jle
jo
inc
popf
xor
sbb
cltd
stos
loop
data16
aas
loope
out
icebp
cmp
sbb
daa
push
sbb
xor
jg
imul
or
mov
or
mov
mov
bound
imul
adc
bnd
xor
inc
add
push
pop
push
or
ret
mov
jne
mov
out
dec
ret
insb
js
xor
mov
pushf
fimull
inc
jg
dec
adc
cmpsb
mov
aam
in
lret
je
and
xor
inc
push
sbbb
sub
shrl
lret
pop
imull
stos
cmp
call
push
sub
mov
call
sbb
in
pop
pop
or
fdiv
mov
dec
out
mov
jbe
push
aaa
jae
sbbl
and
xlat
pop
shlb
and
popa
into
test
jno
mov
xchg
mov
mov
cmpsb
enter
addb
mov
lods
in
mov
bound
jo
and
lret
mov
addr16
mov
sub
or
push
xchg
ss
mov
aas
mov
idiv
pop
jg
lods
sti
lock
adc
xchg
divb
out
fdivrl
mov
lock
inc
mov
rcr
repz
xor
popf
jno
mov
pusha
fadds
push
aaa
mov
mov
pop
cmpl
orb
sub
pop
movsb
popf
sbb
ja
stc
xchg
jge
into
mov
inc
xchg
cmpxchg
cld
sti
leave
mov
notb
jns
fsubs
push
stos
sub
data16
pop
jne
mov
das
mov
inc
sbb
int
mov
push
stos
pop
lods
sti
push
cltd
push
sbb
mov
or
jne
push
enter
lds
adc
addr16
push
dec
xor
jle
jae
cwtl
flds
xchg
mov
out
or
lea
sbb
mov
xor
je
pop
fwait
cmp
fdivrs
dec
mov
inc
inc
jae
mov
outsb
fdivrl
rorl
das
and
push
dec
dec
pop
xchg
fistpl
xchg
mov
mov
rolb
lock
cwtl
and
adc
mov
jns
adc
cmp
rorl
movsl
mov
xchg
adc
xor
js
int3
push
dec
mov
jnp
ljmp
xor
push
mov
sub
pop
fmull
mov
jg
cwtl
test
aam
ds
ss
mov
jp
in
in
orb
rcl
mov
inc
stc
incb
mov
rol
aas
push
aas
jo
mov
pop
sbb
cmc
cltd
dec
push
sahf
mov
jp
inc
lret
dec
imul
imulb
ret
xchg
push
cmpsb
call
cld
pushf
adc
adc
fs
mov
pop
aam
mov
pop
call
orb
movsl
xchg
jecxz
push
aad
add
sub
inc
cmp
mov
adc
sahf
cmc
repnz
add
sbb
movsb
test
stos
and
add
les
push
push
je
jns
addl
jno
insb
adc
popa
xchg
mov
les
lahf
push
pop
xor
out
sbbl
dec
jmp
fwait
xor
test
dec
ret
xchg
mov
mov
push
in
xchg
or
adc
sub
jnp
pop
orl
movsb
rorb
into
inc
lock
jnp
hlt
xor
inc
push
xlat
jo
std
xor
sbbl
stos
xchg
push
dec
xchg
stc
mov
out
iret
sarb
mov
inc
lock
sbb
aam
mov
push
pop
adc
xor
jns
cmp
sub
test
push
loop
aam
xchg
jo
xor
mov
aaa
pop
mov
jne
mov
nop
lcall
dec
fwait
roll
aas
pop
pop
inc
and
hlt
test
imul
cmp
sahf
std
mov
fstl
dec
push
inc
icebp
push
mov
xor
lods
leave
dec
lret
inc
push
cmp
inc
outsb
jnp
leave
dec
std
loope
sub
ror
pop
fs
enter
inc
push
mov
add
dec
cwtl
enter
jae
push
ja
es
mov
outsb
scas
sbbl
in
jmp
cs
jns
cmp
cs
cmc
xchg
lods
pop
das
pop
mov
cmc
adc
out
lock
dec
lcall
pop
testb
and
fbld
les
lods
out
lcall
aas
icebp
push
paddb
andb
in
stos
inc
cmpsl
mov
les
cmp
addr16
ds
outsl
push
jbe
popf
or
mov
pop
sbb
add
cs
mov
int
mov
fadds
xchg
jecxz
cwtl
pop
insb
or
clc
xor
xchg
addl
out
dec
push
add
movsb
fnsave
loope
cmp
xor
lods
xlat
js
cmp
or
or
jo
in
imul
ljmp
fnstenv
sub
addl
pop
mov
or
mov
test
je
adcb
jo
pop
dec
loop
push
jno
or
cmc
daa
push
jae
repnz
xor
xchg
sbb
je
or
add
aad
sbb
or
xor
in
sub
je
pop
nop
loope
adc
jb
sbb
or
ss
jecxz
insb
and
idivl
fcomps
mov
xor
shr
ret
sub
into
pop
push
aad
xchg
subb
inc
and
and
inc
ja
dec
push
or
paddb
iret
lret
push
mov
xchg
std
jo
fcomps
fdivrs
fs
scas
cltd
das
outsb
inc
notb
mov
lret
int3
daa
popa
pop
div
and
ss
push
cmp
pop
lcall
add
jl
inc
test
xchg
and
popa
and
mov
cmp
js
cmp
add
xchg
dec
lds
stos
adc
sti
pop
mov
adc
mov
push
inc
ja
mov
outsb
mov
push
pusha
mov
mov
sbb
loop
push
rcrl
mov
xchg
sbb
mov
jmp
shll
imul
push
push
cmp
and
jae
std
and
push
lret
jb
add
dec
lret
dec
add
mov
stos
mov
mov
xorb
sub
mov
insl
fbld
outsl
popl
or
loopne
cltd
ljmp
sub
lods
ror
mov
ret
out
int
mov
or
push
add
cld
pop
shll
test
ret
dec
addr16
push
out
int
add
cmp
mov
in
push
mov
out
in
neg
andb
cltd
les
pop
cmc
out
mov
cwtl
fisubl
test
mov
sub
pop
aas
loopne
inc
mov
nop
cmp
sbb
das
adc
in
loopne
cltd
push
fwait
pop
pop
mov
int
add
stc
movsl
pop
inc
adc
leave
cmp
mov
xchg
jmp
push
rcr
mov
scas
lahf
mov
out
adc
add
ret
call
xlat
mov
clc
hlt
in
dec
ja
push
enter
shlb
scas
out
test
xor
sti
xlat
rorl
test
insl
subl
lea
jnp
dec
mov
imul
insl
push
out
iret
jg
jo
lods
mov
jl
or
fcoms
fwait
incb
mov
mov
push
decl
fcomp
mov
jmp
or
mov
dec
ja
bound
in
clc
push
outsl
and
mov
or
push
sti
test
sub
jmp
scas
js
aas
jb
jne
fsubs
push
fidivrl
repnz
aaa
or
std
inc
andb
fcmovnb
mov
xchg
sbb
push
ret
lods
mov
cmp
ror
pop
fsubl
and
dec
inc
fcmovnu
or
dec
inc
iret
xchg
push
adc
jns
mov
sahf
sub
int
fisttpl
shlb
adc
cmp
or
xor
outsb
ja
jg
sub
add
mov
fidivrl
push
pushf
jo
icebp
out
add
and
add
lods
lret
jb
sbb
xor
pop
lahf
popf
mov
xor
jecxz
jnp
inc
sar
jnp
nop
stos
mov
mov
push
lret
or
pop
clc
pop
lods
mov
and
enter
in
sbb
and
mov
jo
into
ds
cmp
sbb
out
xor
call
adc
xchg
into
or
out
sti
call
cmp
or
mov
fimull
push
mov
sbb
cmp
push
loopne
adc
mov
call
dec
cmp
bnd
push
mov
loopne
inc
xchg
pop
xor
and
in
xchg
pop
jle
cmp
pop
or
stos
add
mov
stos
jmp
jno
ja
and
outsl
jecxz
push
dec
jg
pop
cmp
test
adc
insb
les
sub
sti
cmp
mov
push
pop
mov
cli
ret
dec
sbb
stos
or
lret
pop
and
push
filds
xchg
daa
adc
push
pop
in
shll
in
dec
ja
sbbb
mov
mov
test
pushf
sub
call
cmp
xchg
gs
pop
push
ret
call
push
test
je
cltd
repz
pop
aaa
jl
add
add
mov
pop
int
lret
add
dec
xor
daa
push
fiaddl
lods
pusha
jns
dec
inc
jns
cmp
repnz
out
mov
jo
stos
sub
daa
push
test
pusha
jg
xor
xor
jnp,pt
pusha
cltd
std
or
add
sarl
jp
adc
mov
or
mov
int3
mov
push
and
or
adc
push
pop
xor
bound
fwait
ret
push
into
adcl
inc
mov
jp
in
fucomi
sbbb
mov
mov
mov
mov
clc
or
repz
dec
mov
jne
or
loopne
xor
xchg
inc
dec
and
je
sti
test
push
fsubs
xor
dec
push
std
ficompl
inc
and
push
push
push
enter
daa
test
mov
xor
inc
or
xor
das
or
dec
jge
aas
pop
cltd
js
cmp
mov
outsb
inc
adc
lret
int
out
adc
pop
pusha
fisubrs
lcall
pushf
scas
leave
subl
xchg
loopne
add
stos
into
stos
js
pop
push
fcomps
test
aas
mov
xchg
data16
jns
mov
push
push
ds
subb
lcall
inc
movsb
test
hlt
fs
scas
jmp
xchg
lods
loope
daa
stc
fisubrs
pop
or
in
int
sub
push
and
out
shl
test
popa
mov
sbbl
insb
mov
jnp
aad
jo
js
push
and
dec
dec
inc
jecxz
cmp
mov
test
adc
les
test
adc
repz
inc
testb
adc
mov
fsubrl
add
mov
or
push
in
dec
fwait
test
push
fildll
pusha
addr16
stc
leave
repnz
call
xchg
pop
popa
mov
sbb
scas
je
inc
dec
mov
test
pushf
xor
lret
stos
inc
add
sbb
add
push
mov
lahf
lock
cmp
ficoms
xchg
jmp
popf
add
pop
sub
sub
add
xchg
add
hlt
aam
xor
xchg
xlat
cltd
test
cmp
mov
cmpb
inc
or
jb
sbb
mov
repnz
stos
jl
shrl
clc
std
call
or
movups
and
mov
outsl
xchg
inc
push
push
stos
xlat
sub
mov
js
stc
jno
fstpl
adc
daa
scas
dec
imul
pop
stos
hlt
shll
fcmovnu
sub
repnz
scas
scas
movsl
and
cmp
das
sub
insb
sub
mov
outsl
or
and
fiaddl
or
jne
nop
pushf
fstpl
std
mov
sbb
xor
sbb
xor
cmp
stos
sub
das
inc
sub
mov
imul
repz
imul
inc
xchg
clc
ljmp
popf
cmp
jmp
push
inc
add
add
inc
jecxz
lret
adcl
xor
pmulhw
dec
psrad
mov
cmpsl
push
xchg
pop
and
mov
loop
leave
js
clc
scas
cmpb
js
mov
dec
add
mov
rcrb
pop
pop
std
jl
int
pop
imul
iret
mov
dec
lahf
pextrw
dec
push
cmp
dec
xchg
push
sahf
lret
pop
out
fwait
push
dec
leave
jg
cmp
mov
addr16
fldt
cmp
les
test
sahf
adc
out
gs
add
popf
dec
insb
cmpsb
xchg
les
in
hlt
inc
push
sub
pop
sbb
pop
pop
mov
cld
bnd
inc
cmp
sub
add
pusha
shrl
dec
mov
xor
cld
insb
add
mov
and
repnz
xchg
repnz
sbbb
cmpb
adc
test
scas
cltd
dec
sbb
rcr
fcomps
das
arpl
int3
push
lods
inc
jg
push
gs
mov
fs
data16
cmp
jae
jo
arpl
dec
inc
popa
or
pop
and
cmpsb
dec
dec
imul
lret
lods
pop
jno
or
insl
cmp
cmp
shrb
pusha
jmp
pop
imul
sub
and
addr16
xlat
xor
jb
arpl
sub
mov
ss
adc
shrb
push
int3
mov
scas
jne
xlat
movsbl
push
icebp
push
mov
push
fs
mov
les
icebp
pusha
in
adc
xchg
ss
xchg
enter
mov
inc
push
fstl
xor
push
aad
shl
or
push
inc
scas
mov
push
aas
fnstsw
mov
pop
mov
loope
lret
pop
stc
dec
es
in
inc
cmp
cli
insl
insl
cmpb
lret
daa
into
vmovaps
inc
sub
push
fadds
aad
cs
test
test
jnp
mov
jle
psraw
xor
add
add
testb
hlt
movsb
dec
hlt
xchg
lcall
lods
arpl
sub
mov
arpl
jge
lds
xor
stc
inc
xchg
ss
xor
pop
mov
aaa
xchg
adc
andb
mov
incb
xor
jnp
xor
call
fsubrl
push
lea
clc
dec
inc
out
mov
inc
inc
ret
sahf
cmp
loope
out
cmc
bnd
out
xchg
mov
mov
movsl
call
or
out
loopne
mov
pop
andl
dec
repnz
mov
pop
bound
xchg
fisttpl
iret
xor
add
sub
mov
scas
hlt
cmp
inc
push
pop
cmp
aas
imul
sub
add
pop
xor
sar
lock
and
sub
adc
das
jecxz
and
popa
xchg
add
out
lcall
mov
arpl
mov
icebp
push
in
pusha
mov
pop
push
iret
mov
push
in
sahf
nop
inc
icebp
icebp
push
gs
movswl
pop
xchg
sub
mov
lcall
cs
dec
sbb
fs
push
jl
mov
mov
testb
int3
and
andb
push
xchg
pop
and
sbb
js
xor
cli
add
push
gs
lcall
pusha
xchg
push
data16
mov
mov
inc
iret
dec
xchg
add
cld
dec
mov
repnz
lahf
push
icebp
mov
dec
sub
xor
adc
test
sub
aad
arpl
push
dec
loope
int3
test
into
lret
sbb
dec
repz
xchg
aas
das
test
push
arpl
sub
fsubr
aam
into
iret
push
adc
mov
push
cmpsb
xchg
and
xchg
fmul
inc
out
sbb
cmpsb
inc
imul
lret
and
xor
pusha
adc
push
cltd
cltd
mov
mov
mov
xchg
imul
or
aad
dec
adc
or
sub
sub
clc
ja
sub
int3
mov
shrl
mov
ss
push
roll
cs
mov
xor
out
daa
jp
jmp
movsb
shrb
imul
mov
inc
lds
lock
inc
push
mov
pop
in
mov
ds
std
pop
stos
inc
xor
mov
adc
cld
cwtl
in
dec
xor
push
dec
adc
xchg
repnz
icebp
lods
pop
sahf
jecxz
pop
es
cmpsw
out
inc
cli
fistpl
xchg
lock
add
adc
xor
or
icebp
and
out
sub
popa
mull
movsl
rolb
push
xchg
add
sbb
pop
test
fisubl
nop
push
mov
dec
pop
mov
adc
sbb
aas
andl
cli
push
iret
pushf
popa
jle
and
inc
ja
jb
mov
adc
push
dec
sub
add
push
lret
loopne
sub
jl
mov
pop
cmpsl
sub
cmpsl
push
dec
in
mov
mov
ljmp
xchg
mov
sbb
adc
test
outsl
stc
movsl
mov
jecxz
adc
mov
nop
aaa
jg
xor
adc
pop
sbb
mov
aad
inc
pop
mov
ret
sub
mov
sti
psubq
and
mulb
shll
xor
add
cld
insw
xor
adc
stc
mov
xor
arpl
xchg
adc
xchg
movsl
push
cld
or
int
ljmp
jbe
add
test
jmp
jp
dec
les
inc
cmp
cs
push
or
add
cmpsl
ja
push
pop
or
cmc
mov
xchg
fildll
push
in
shlb
xlat
adc
loop
inc
rcrb
loope
jecxz
out
iret
xchg
inc
rolb
mov
sub
adc
pop
mov
push
and
xchg
push
leave
lods
jp
icebp
cltd
clts
or
addb
push
sbb
xor
pop
inc
and
dec
aas
and
dec
inc
xchg
addr16
xchg
je
cld
mov
jmp
fs
sbb
add
je
popf
pusha
imul
inc
test
mov
pop
sub
rcl
fcompl
and
fistl
ret
cmp
add
pop
or
stc
addr16
outsb
xor
fiaddl
mov
and
stos
cli
cld
dec
jle
daa
icebp
or
ja
and
sbb
xchg
inc
pushl
inc
imul
addl
addr16
test
or
push
inc
add
lret
shlb
int3
mov
sahf
sub
jmp
jne
mov
mov
xlat
inc
inc
and
faddl
fiadds
or
out
sti
test
mov
jle
push
loopne
fadds
xor
cmp
fcoms
push
pop
cwtl
jbe
jecxz
lret
jnp
jmp
insb
aas
das
push
push
push
mov
push
jns
dec
mov
and
inc
adc
xchg
lods
mov
aam
enter
stos
out
insl
fidivrl
int3
dec
mov
cltd
and
push
jns
outsl
or
jb
popl
orb
xchg
mov
add
sbb
daa
jo
popf
xor
imulb
rcl
fpatan
mov
inc
jl
mov
sbb
out
outsb
cmp
mov
pop
or
stos
cs
ret
or
cmp
jecxz
outsl
jl
test
dec
adc
push
fnstcw
or
mov
mov
stos
sbb
shl
or
pop
mov
imul
mov
cmc
ret
cmp
data16
xor
sub
cmp
int3
stos
inc
call
mov
push
pop
xor
sbb
inc
jmp
lods
xchg
fisubrs
cmp
in
jg
jae
dec
sub
mov
mov
push
lds
dec
push
or
shlb
mov
cli
add
add
xor
push
or
inc
cwtl
mov
jg
lret
pushf
test
xor
je
jle
sub
jp
js
cs
aaa
out
and
and
or
cmp
das
cmpsb
pop
dec
cmp
pop
sbb
sbb
test
les
rcrl
pop
lahf
xor
inc
jne
fisubs
xor
hlt
cwtl
adc
mov
bound
shlb
push
mov
add
add
out
pop
mov
pop
pop
jle
dec
or
inc
test
je
test
sbb
mov
pop
into
jp
push
rcl
jl
in
and
popf
loopne
mov
into
xchg
divl
dec
movsl
or
mov
clc
push
fdivs
adc
mov
dec
pop
sub
xchg
fstps
mov
xor
ss
cltd
ret
mov
pushf
loopne
mov
dec
push
and
clc
jge
pop
enter
jae
andl
fucomp
mov
pushf
lcall
xchg
push
mov
mov
jno
push
adc
or
push
mov
dec
mov
scas
out
pop
nop
iret
cmp
lods
and
mov
lods
add
mov
mov
andl
add
sub
xchg
mov
mov
adc
jo
adc
mov
scas
nop
xor
add
pop
movsb
pop
daa
sub
in
mov
std
enter
xchg
sbb
cmc
fsubrl
push
lds
arpl
push
cmp
and
push
jnp
mov
add
xor
xchg
int
cmp
lods
push
rcl
fnstcw
xor
fistpll
arpl
dec
sbb
dec
jg
xchg
iret
fisubrs
cmpsb
sbbl
fdivrp
stos
imul
cmp
cmpsb
sahf
fstl
rcrb
mov
into
xchg
pop
nop
dec
xor
add
int
mov
sbb
mov
imul
test
lcall
add
mov
push
inc
cmp
mov
xchg
in
sub
mov
cmp
lahf
cmp
mov
sbb
fcmovbe
imul
sbb
xchg
inc
test
push
add
scas
jo
dec
in
mov
adc
pop
xor
outsl
test
fiadds
pop
loop
cmpsb
cmp
enter
and
push
push
jnp
out
cmp
outsb
xchg
sub
sbb
jge
push
aad
test
outsl
inc
inc
or
mov
mov
xor
sub
gs
enter
lock
ret
mov
push
mov
cmp
lods
cmpsl
aad
mov
push
shl
mov
mov
xor
shr
jae
mov
aas
iret
ja
pop
add
jae
pusha
push
adc
and
jbe
or
dec
out
sbb
dec
or
mov
loop
and
push
lock
mov
push
hlt
imul
aaa
inc
outsb
aam
add
stos
fsts
or
repz
jae
loope
jl
cmpsb
mov
scas
sub
fs
inc
cli
mov
xchg
fldt
repnz
sbb
adc
dec
and
pusha
clc
cltd
gs
adc
lds
aaa
ja
popf
pop
xchg
and
adc
adc
stc
sbb
push
int3
mov
xchg
push
les
sub
cmpsw
out
jo
inc
mov
push
or
jae
out
cltd
dec
stos
push
sti
mov
mov
cmp
xchg
push
inc
and
or
cmp
enter
lock
pop
inc
mov
jp
push
in
stc
stos
add
loope
adc
inc
xor
scas
jnp
js
gs
mov
int3
or
into
inc
mov
push
xlat
xchg
mov
sub
pusha
and
inc
shlb
xchg
fstpl
test
jae
or
or
adc
cmp
popf
int
pushf
mov
int
out
add
nop
or
xchg
clc
inc
pushf
aam
movsl
cmp
mov
loope
mov
out
add
sarl
adc
jp
push
fnstenv
mov
jnp
cmpsl
adc
sbb
loopne
cmpsb
cwtl
jp
and
fisubrs
fwait
leave
push
cmc
dec
push
sar
lods
pop
xchg
out
mov
arpl
lods
stos
add
ljmp
aaa
dec
movsl
fdivs
ljmp
out
adc
pop
mov
std
xchg
insl
xchg
outsl
adc
jmp
pop
dec
mov
lret
mov
imul
lcall
mov
idivl
xchg
scas
scas
mov
and
cmpsb
pop
mov
lahf
fsubl
or
roll
adc
sti
inc
das
aad
aaa
inc
aad
pushf
loop
pop
fcomi
lods
jo
push
ficoms
bound
jne
adc
jo
push
fsubl
or
jl
adc
fnstcw
aaa
popa
mov
sbb
aas
sarb
mov
mov
push
icebp
stos
idivl
or
dec
bound
iret
xchg
dec
mov
sbb
mov
cmpsl
fistps
add
push
add
or
icebp
inc
in
mov
idiv
aam
bound
movsl
icebp
sarb
stos
and
mov
jns
and
aam
xchg
lods
sub
int
stc
pushf
pop
loop
ret
fmuls
ds
pop
fs
dec
xchg
cmp
loope
xor
push
gs
pop
shrl
and
pusha
and
add
inc
ja
push
mov
jge
mov
scas
xor
sub
inc
imul
jg
mov
loop
sbb
xor
inc
jnp
jl
jg
add
jmp
pop
pop
loopne
loop
mov
xor
iret
cli
mov
adc
int3
adc
push
xor
inc
mov
enter
jmp
sbb
data16
fimuls
ret
or
test
call
std
rorb
mov
ficompl
mov
xchg
in
out
dec
pop
dec
push
int3
test
cmpb
fisubrs
mov
bound
and
cld
sub
jge
mov
mov
jge
push
xchg
inc
out
pop
popa
or
jno
cmpsl
sbb
orb
push
lahf
fmuls
or
pop
outsl
cmpsb
push
pop
out
mov
subb
adc
inc
mov
sbb
cmp
in
xchg
ret
sbb
popa
jle
insl
outsb
fnstenv
stc
mov
ret
out
or
imul
into
loopne
pusha
cmc
adc
in
adc
add
xchg
mov
cmpsl
xchg
sbb
insl
sub
push
mov
lock
mov
cwtl
mov
scas
dec
loopne
popa
cs
pop
xchg
mov
mov
dec
inc
testl
sub
in
and
nop
xchg
test
adc
pushf
repnz
sahf
xchg
in
xchg
out
lahf
aaa
sti
ds
add
jno
lds
fisttpl
les
into
lds
mov
imull
or
out
insb
mov
jecxz
pop
je
mov
dec
pop
pop
movsl
pop
enter
cmp
jo
sbb
aad
cs
fwait
rcrb
nop
xchg
dec
fisubrs
sub
movntq
inc
or
pushf
xchg
and
aaa
test
subb
pop
mov
in
dec
add
dec
es
sub
pusha
sub
addr16
sbb
lcall
add
lcall
les
dec
scas
mov
push
scas
and
sub
inc
insb
into
xor
les
loop
loope
dec
mov
jmp
sbb
andb
data16
sub
sub
mov
bound
in
fistps
daa
sbb
inc
pop
jns
fcoms
lods
mov
pop
push
xlat
rclb
and
rorb
adc
jecxz
push
sub
cltd
shr
adc
jo
rcrl
dec
or
ss
jb
and
ss
daa
mov
int
rcrl
loope
pusha
shlb
icebp
or
shll
mov
inc
popa
xchg
inc
mov
and
fnstenv
cs
jno
cltd
and
lret
stos
test
ret
xchg
or
mov
xor
lods
inc
ja
imul
icebp
push
or
int3
dec
xchg
mov
add
cmc
fnstsw
sbb
push
cld
ficomps
out
pushf
paddsw
stos
lock
or
adc
xlat
add
mov
cmp
xchg
test
lret
fmuls
jg
cmp
out
in
pop
lahf
add
stos
jbe
push
mov
loope
push
arpl
mov
enter
lret
mov
inc
rcl
cmpsl
inc
fs
cmp
jnp
sbb
mov
es
lea
lahf
sbb
jmp
scas
push
xchg
xor
jge
mov
inc
in
out
in
mov
enter
or
cmc
cltd
jb
cwtl
aam
outsl
cld
xor
mov
div
xchg
mov
and
xchg
pop
les
jmp
mov
and
push
scas
push
pushl
or
pand
test
jmp
cmp
test
out
in
push
pop
xor
movsb
push
push
cmp
movsl
pop
adc
xor
and
adc
or
sub
push
lea
xor
inc
ficoms
bound
mov
sarl
mov
cmpsb
movsl
aad
out
loopne
xor
jecxz
cld
add
mov
addr16
ret
out
cmp
mov
dec
clc
adc
push
add
inc
fbstp
pop
lret
and
sahf
mov
or
jmp
sbb
daa
sbb
fisubs
xlat
jb
arpl
jns
xchg
add
or
scas
cmpsl
popa
fsts
inc
gs
mov
sti
pusha
fcmovnu
ja
out
cltd
dec
aam
sbb
out
mov
mov
fisubs
pusha
and
mov
shl
fisttpll
dec
lea
in
mov
scas
xor
fisubl
enter
fistps
hlt
mov
imulb
adc
jb
sahf
adc
ja
mov
jo
mov
or
in
scas
push
inc
leave
jmp
stc
lock
stc
mov
mov
lods
mov
add
dec
pmulhuw
mov
mov
adc
inc
out
dec
cld
jns
mov
aad
addr16
scas
push
fsubs
stos
sbb
out
popa
xchg
dec
pop
or
mov
popf
pop
dec
push
hlt
jl
sbb
adc
roll
dec
dec
inc
pop
stc
int
int
mov
sub
flds
icebp
stos
xor
les
scas
lods
icebp
out
das
mov
cmp
loopne
mov
pop
outsb
scas
lds
and
dec
lds
xchg
sub
cli
out
pop
jge
adc
test
bnd
orb
stc
mov
mull
or
sub
xchg
sbb
addl
sti
out
stos
pop
push
ret
mov
inc
data16
mov
icebp
xchg
jecxz
daa
inc
std
int
out
xor
sahf
sahf
and
mov
add
or
push
push
mov
mov
roll
jae
mov
add
pusha
inc
sbb
xchg
push
push
ds
and
loop
jns
sbb
scas
add
push
out
inc
shlb
lret
cmpl
fdivs
mov
push
iret
cmp
push
inc
dec
punpcklwd
push
imul
outsl
push
sbbl
jnp
xor
pop
into
xchg
clc
or
test
pop
pop
sub
leave
cld
mov
decl
out
pop
movsb
dec
fdivl
or
jbe
scas
pop
or
lds
xchg
shll
int
shll
cmp
sbb
or
jl
mov
mov
cmpsl
pop
pop
pop
cmc
adc
push
mov
xchg
daa
xor
out
jl
push
mov
mov
fs
int3
sub
mov
test
clc
das
dec
dec
fidivrl
or
mov
xchg
xchg
push
popf
push
fsubl
pop
sbb
movsb
sbb
outsl
mov
pop
mov
loope
je
ror
sub
cmp
pop
mov
cmpsb
pop
inc
ret
loope
or
into
lock
in
stos
xchg
mov
xorb
cmp
sub
fcmovbe
loop
push
push
scas
inc
lret
sti
orb
pop
and
aas
and
lock
test
pusha
test
stos
and
push
push
movsb
adc
sahf
jmp
cmp
ja
fsubr
dec
sbb
xor
and
sub
lret
out
adc
data16
lods
mov
cwtl
sbb
push
push
xchg
clc
mov
cmp
popa
loopne
cwtl
adc
loopne
sub
adc
loope
pop
push
push
decl
xor
mov
sub
sub
mov
lahf
test
xchg
and
xor
iret
xchg
stos
add
add
andl
dec
adc
stos
pop
push
dec
or
xorb
incb
enter
mov
or
and
fists
xor
jb
add
out
cmp
iret
xor
push
shll
rolb
fcompl
cmp
or
and
jo
cwtl
addl
inc
lock
lret
pop
aas
testb
mov
aad
dec
add
sub
push
sbb
mov
jp
and
pusha
fwait
mov
cmp
cmp
jne
adc
das
pop
push
push
insb
out
sub
mov
cli
push
pop
movsl
sbb
cmp
iret
cmp
lahf
arpl
lods
pop
mov
mov
fmulp
sti
push
adc
xor
repz
adc
push
loopne
sub
mov
repnz
mov
dec
pusha
das
mov
push
jae
fimull
mov
jmp
sub
test
es
inc
idivb
addl
pushl
sbb
jne
cmpl
addr16
cwtl
mov
in
inc
push
jb
pop
hlt
push
inc
mov
jb
imul
cli
lcall
push
mov
push
aad
mov
notl
or
loope
add
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
lret
cmp
addl
fbld
bt
sub
inc
sbb
add
lret
jecxz
enter
icebp
push
mov
cmp
xchg
fs
in
pop
stc
pop
jns
dec
test
push
push
test
and
in
outsb
or
pushf
xor
into
rcll
xchg
pop
pop
cmpsb
mov
lods
movsl
ret
loop
fcompl
xor
mov
test
push
dec
rorl
cmp
jnp
aas
mov
addr16
addl
pop
jecxz
in
sar
sub
jmp
clc
lret
xchg
push
cwtl
xor
divb
outsb
xor
rcll
or
jo
inc
xor
aam
jmp
lods
mov
idivb
adc
dec
rorl
adc
aad
lods
and
fprem1
pop
lret
cltd
aas
add
push
cmpsb
xchg
fwait
imul
icebp
iret
pop
or
and
insb
cmpsb
test
jecxz
call
cmp
mov
orb
sub
cmp
push
fincstp
aad
repnz
cmpb
call
ja
lods
imul
mov
mov
addl
jg
adc
fs
jl
cmp
pop
sub
lods
decb
dec
sbb
add
bound
xchg
xchg
adc
mov
mov
stos
das
and
mov
pop
adc
fists
lahf
loope
mov
test
movsl
mov
test
pusha
add
rcrl
andb
sbb
mov
gs
in
shrl
pop
insl
mov
mov
and
mov
push
mov
mov
lahf
sub
enter
mov
inc
inc
push
xchg
rorl
sbb
aas
adc
pop
loope
test
testb
jp
jp
lcall
shll
loopne
pop
cltd
dec
movsb
out
and
and
xchg
sub
fcom
push
test
notrack
sub
lods
dec
sbb
test
xor
mov
push
lcall
loop
scas
xchg
push
and
xor
stos
inc
xchg
arpl
orl
sbb
mov
cmpsb
mov
dec
das
inc
imul
mov
mov
jae
mov
test
sbb
ss
out
imul
sarl
sbb
mov
pop
jp
jl
jb
adc
aaa
enter
popa
xor
lods
jp
push
sbb
inc
ds
sbb
jg
cmp
and
aam
dec
mov
ret
pushf
pop
and
fnstenv
out
or
dec
movl
rcrb
xchg
or
repnz
jp
loopne
int3
or
js
jae
lods
and
insl
mov
and
ds
pop
insl
and
pop
call
mov
dec
lea
rorl
mov
inc
pop
mov
xor
sub
cmp
in
cmp
fnstsw
repz
stos
pop
pop
sbbb
rcll
outsb
fwait
cmp
and
movsb
in
jbe
hlt
dec
mov
fs
cmp
inc
mov
sub
jmp
adc
rcrl
stc
adc
int
loop
pop
inc
loopne
ljmp
jg
fstl
std
dec
and
add
xchg
jg
xor
icebp
lods
mov
loope
sub
rcl
das
xchg
into
mov
ret
subl
xchg
push
jecxz
pop
fs
mov
adc
sbb
lods
enter
lock
cli
xor
int
cmp
fnsave
sbb
clc
mov
insb
daa
inc
lcall
int
jmp
mov
push
mov
dec
xchg
int
jno
sbb
inc
add
push
cmpsl
fstp
mov
inc
add
cmp
add
out
fsubrs
and
push
lock
jne
dec
add
out
repnz
cmp
mov
jl
sub
lds
pop
fcmovb
cmc
cmpsl
pop
aad
and
lret
inc
lret
lret
mov
push
and
cmpb
in
pop
mov
jne
and
and
dec
push
xchg
mov
in
rorl
xor
jg
or
pushf
jbe
mov
outsb
sub
stos
dec
mov
adc
cmp
cltd
dec
add
gs
dec
les
inc
and
mov
shll
jne
sub
push
xor
inc
xchg
or
in
pop
adc
pop
popa
pop
push
stos
std
clc
in
dec
das
adc
mov
sbb
aad
icebp
shlb
lds
test
push
lock
sbb
sti
inc
mov
inc
bound
or
sti
je
adc
xchg
lret
nop
repz
pop
pop
sub
test
mov
nop
scas
mov
adc
test
dec
iret
popf
pop
dec
cmc
icebp
push
push
add
fsubrp
rcrb
sti
jg
mov
outsl
xor
pop
in
push
aaa
xor
repz
jl
mov
or
iret
hlt
out
ljmp
fcompl
mov
scas
mov
xchg
je
pop
mov
cmp
or
cmp
into
jmp
outsl
sbb
ljmp
xlat
pcmpeqd
out
jl
and
cld
dec
push
jnp
lds
loopew
les
pop
pop
std
pop
inc
xor
aam
outsb
jg
jmp
outsb
insl
pop
test
cmpsl
add
gs
mov
jmp
pop
lock
xchg
inc
adc
jns
ja
std
mov
out
mov
lea
push
imul
es
sub
jmp
push
push
sub
mov
sub
xlat
or
aad
jmp
popa
or
xor
cmpsl
lcall
aad
cmpsl
dec
stos
mov
or
dec
pop
and
jl
outsl
mov
sub
shr
mov
sub
mov
cmp
adc
loope
popf
aad
jmp
mov
shrb
jne
js
pop
dec
xor
pop
and
adc
inc
int
pop
push
faddl
test
dec
xor
adc
mov
lret
subb
popf
aad
dec
pop
icebp
shrb
jb
add
ss
inc
pop
leave
iret
stc
mov
sbb
inc
sbb
es
adc
mov
cmp
adc
adc
out
rolb
lods
xlat
xor
jge
xchg
fisubrl
shlb
daa
mov
add
jne
mov
dec
jae
movsl
inc
mov
jmp
push
pushf
pusha
sub
icebp
movsb
mov
outsb
std
into
movnti
dec
adc
dec
and
and
subb
jne
aas
and
add
add
call
mov
aas
in
pop
inc
mov
repz
or
xor
enter
mov
aam
ljmp
stos
push
pop
ss
mov
in
ds
loopne
pusha
cmpsb
lods
sahf
cmpsl
sti
mov
test
cltd
jmp
inc
or
xchg
icebp
cmc
in
mov
jb
push
xlat
xor
bsr
dec
sub
outsb
dec
int
loope
pop
cmp
adc
fbld
xlat
sbb
mov
cld
test
dec
fimull
loope
sub
add
xor
scas
loopne
cltd
into
leave
push
mov
xchg
cwtl
ljmp
in
es
jge
pop
cmp
mov
das
in
add
cwtl
mov
inc
mov
sbb
lahf
sbb
cmp
mov
push
mov
mov
pop
mov
mov
push
sbb
movsb
rcrb
jo
and
dec
or
push
push
in
cmp
mov
cs
add
mov
xor
lea
shlb
lret
pop
scas
pop
js
xor
ljmp
add
dec
or
dec
ds
xlat
xchg
jmp
addl
xchg
hlt
fwait
scas
jg
sbb
xchg
out
jle
xchg
iret
or
nop
mov
mov
xor
ja
loopne
les
mov
sahf
push
cli
jge
ret
jae
clc
mov
bnd
je
sbb
and
sbb
dec
jne
andl
mov
call
pop
and
divl
ret
mov
dec
xchg
sbb
sbbb
push
cmpb
push
mov
push
pop
arpl
or
mov
or
sahf
sub
popa
bound
and
imull
xor
lret
imul
bound
cltd
jle
lahf
es
adc
insl
xlat
pop
sbb
mov
das
pushf
clc
cmpsl
sarl
push
jns
in
sub
imul
dec
mov
rcll
mov
int
or
push
cmc
decl
not
pop
inc
repz
jge
insb
xor
stos
rcrb
xchg
push
dec
or
mov
in
dec
popf
sub
je
jae
adc
sub
add
neg
icebp
push
pop
sub
push
sbb
ja
push
mov
xor
push
loopne
xchg
pop
std
iret
push
xchg
and
lret
bound
int
ss
pop
cli
popa
ret
addl
out
std
mov
sub
ror
sub
stos
scas
xlat
shlb
inc
stos
sbb
cmpl
rcrb
mov
and
pop
test
sarb
psadbw
sti
cltd
jb
negl
sub
sub
mov
flds
cmpsb
pop
jb
push
sti
ret
std
mov
pop
or
dec
lcall
aaa
mov
cmp
daa
out
pop
ljmp
mov
das
sahf
sbb
ds
jge
dec
pop
into
xor
jp
jp
xchg
pop
pop
js
imul
lods
cmpsl
lahf
jb
mov
xlat
inc
shrl
dec
xchg
addr16
jecxz
div
out
addr16
inc
fwait
dec
rcll
rorb
inc
push
xor
push
rcr
dec
ffree
call
call
add
loope
push
push
xchg
or
and
mov
xchg
in
imul
insb
ds
push
fsubrs
mov
icebp
fisubrl
movsl
cmp
ljmp
ret
lahf
subb
dec
and
mov
lret
mov
test
jg
jecxz
cmp
mov
push
addr16
data16
dec
dec
jmp
mov
jne
stos
pushf
sti
jns
in
divl
adc
pop
push
lds
or
xchg
xchg
adc
das
pop
outsl
dec
in
mov
loope
cmp
xor
push
in
cmp
xchg
mov
push
arpl
cmp
inc
inc
cmp
out
ret
sbb
mov
stos
mov
mov
inc
mov
test
push
or
out
sbb
in
mov
shlw
xchg
push
lods
shl
push
pop
push
popf
xchg
add
inc
std
sbb
dec
jge
mov
pop
ljmpw
inc
push
inc
mov
push
les
ffreep
sti
popf
fcmovnu
imul
movswl
bound
inc
add
mov
pop
stos
xchg
jge
jg
push
or
inc
dec
mov
aas
add
xchg
imul
push
sub
xor
xchg
hlt
pop
adc
addr16
jmp
aas
xor
sbb
in
dec
sub
cmp
add
gs
pusha
out
std
dec
push
inc
ret
sub
ret
mov
adc
lods
jbe
xor
jl
and
cld
cmp
fcmovnb
mov
ds
mov
push
xchg
pop
sub
mov
ret
std
mov
int3
inc
pusha
mov
pop
repz
push
mov
adc
mov
lsl
mov
mov
fldcw
fmuls
std
repnz
jns
icebp
call
fistps
mov
push
stos
test
test
mov
xor
in
sbb
hlt
testl
sub
dec
sbb
addb
clc
shrb
jle
movsb
insb
subl
xor
jnp
cmpsb
mov
ret
fcoms
xor
dec
xor
inc
adc
fsub
adc
arpl
mov
xlat
lret
jae
push
cmc
loop
push
fistl
loop
lea
push
fsts
sbb
es
scas
rcll
dec
lods
arpl
xorl
loope
pushf
push
mov
adc
pop
clc
inc
ja
sbb
mov
pop
dec
mov
movsb
lret
dec
sti
hlt
jp
cwtl
lcall
roll
pop
or
lcall
jne
push
sbb
mov
lcall
mov
push
and
adc
sub
sahf
aas
push
test
cmpsl
xchg
lds
aas
mov
jl
mov
adc
mov
bound
push
add
out
pop
adcl
icebp
or
jge
movsl
fs
pop
out
cmp
lea
sti
xlat
mov
mov
sbb
cmp
cmp
sub
loope
xchg
cmp
mov
ret
aad
sahf
jge
or
and
or
sbb
push
jle
into
fsubl
jle
dec
icebp
xor
cmpsl
push
mov
xor
cmp
mov
cmpsb
repz
or
sub
into
adc
rcll
mov
ja
adc
push
scas
or
in
aam
mov
ljmp
nop
push
loopne
inc
dec
xabort
sub
adc
xor
sub
je
and
sbb
xlat
mov
pop
fcompl
dec
iret
and
sbb
jbe
out
and
mov
mov
cli
test
jmp
pushf
sarl
pusha
sbb
and
lock
insb
mov
and
psubq
inc
cmpsl
sbb
mov
scas
rcrl
xor
std
ret
insl
cmc
inc
nop
adc
pop
mov
or
mov
cs
outsl
and
sbb
adc
adc
jle
cmp
dec
mov
dec
aas
orl
mov
clc
pushf
and
dec
or
pop
adc
frstor
pop
jae
cmc
lret
fdivrs
scas
dec
cmp
pushf
push
cmp
mov
mov
xlat
in
inc
or
lret
dec
and
push
mov
movb
or
jge
adc
adc
loopne
pop
jno
loope
cs
inc
call
ficoml
mov
push
mov
push
out
mov
pop
lcall
mov
in
sbb
test
popf
call
mov
pop
sbb
xor
push
adc
int
sub
add
idivb
fldt
daa
pop
gs
popf
sbb
les
lock
out
outsb
dec
xor
mov
lods
icebp
cld
iret
int
std
or
sti
or
adc
in
pop
dec
jnp
aaa
das
add
jns
mov
xor
sbb
and
adc
rcll
mov
iret
je
and
push
xor
xor
bnd
sbb
jecxz
or
jbe
xor
xchg
scas
loop
mov
or
movsb
adc
incb
mov
pushf
into
imul
push
imul
pop
jecxz
rolb
pop
jb
dec
and
aam
dec
push
lods
das
or
and
mov
pop
pushf
test
test
je
aaa
sbb
add
mov
cmp
frstor
dec
cmp
rol
dec
mulb
dec
cmp
xchg
shr
pop
add
mov
loopne
cmc
xchg
xor
jecxz
rcll
loop
or
push
enter
jbe
sbbl
mov
sub
mov
mov
and
inc
fdivs
or
mov
movsb
pop
stos
push
out
jmp
cmp
lods
lahf
out
mov
fldl
push
lock
les
sti
test
mov
rcl
std
adc
inc
outsb
clc
sub
cmc
ret
jns
cld
jp
mov
aad
outsb
lahf
nop
inc
sub
shrl
rcll
push
jnp
fisttpll
pop
mov
dec
iret
mov
das
out
jp
stos
ret
add
jb
push
cmp
mov
jle
xchg
sbb
call
cmp
iret
pushf
mov
sahf
sbb
jmp
fistpl
ja
cmpsl
fwait
arpl
pushf
lods
std
lea
mov
cmpsb
mov
call
or
and
xchg
aaa
mov
mov
mov
int
mov
or
les
jne
outsb
jg
push
daa
enter
fisttpl
icebp
jmp
lods
dec
pop
popa
lods
lahf
popa
or
xchg
jmp
dec
xchg
mov
xor
arpl
jg
mov
push
mov
popf
push
cwtl
pop
mov
test
shrb
stos
bswap
inc
fisttpl
cmp
push
inc
mov
dec
jmp
cmp
idivb
lock
lahf
xchg
cmpsl
orb
cmc
arpl
jb
mov
mov
dec
aad
jg
stos
lea
scas
inc
push
or
push
jg
imul
lret
gs
hlt
sub
adc
pusha
jne
dec
xchg
roll
cwtl
pop
pinsrw
fwait
in
fstps
mov
shlb
loop
aas
pushf
dec
mov
push
mov
lahf
inc
out
xchg
sub
outsb
sub
sbb
xrelease
ljmp
xchg
dec
add
xor
imul
xchg
push
lcall
fmul
pushf
fcmove
fildl
cmc
je
pop
mov
or
push
pop
rcl
xor
adc
sbb
mov
out
ds
iret
ljmp
popf
aas
lcall
std
xor
jno
xchg
test
iret
push
hlt
leave
add
mov
sbb
cmp
mov
mov
daa
pop
inc
ja
sti
movsb
mov
data16
add
xchg
mov
adc
hlt
inc
xchg
cmp
addr16
xor
sbb
ljmp
add
cmc
xchg
rclb
add
inc
js
clc
add
bnd
xchg
mov
scas
nop
out
call
cmp
jmp
jnp
pusha
outsb
dec
in
aas
and
cltd
mov
mov
in
mov
js
ror
andb
or
and
rcr
mov
push
or
sub
add
aam
sub
mov
xchg
pop
out
out
dec
dec
in
push
divl
push
jmp
daa
jle
dec
lret
out
sti
movsl
ljmp
push
mov
adc
fwait
rorb
daa
pop
stos
fcoms
out
cmp
and
pop
push
mov
xor
xor
or
data16
testb
dec
hlt
fstl
dec
pop
inc
test
cld
inc
mov
stc
stc
shrl
cwtl
fucom
jae
adc
addb
and
add
mov
cmp
int
aam
dec
add
add
xchg
sub
ficompl
lea
xchg
pop
clc
movsl
adc
sub
push
mov
repnz
insb
add
adc
mov
stos
pop
sub
lahf
xchg
add
xchg
xor
call
jle
lret
fnstcw
gs
shl
mov
cwtl
pop
dec
ds
jae
mov
bnd
roll
xor
orl
pop
lods
loop
jmp
cmp
sbb
test
scas
add
out
jno
push
adc
xchg
sub
xor
test
mov
loope
ss
shll
lds
inc
rcrb
test
int
outsb
mov
mov
pop
jge
and
xorl
scas
add
pusha
out
push
mov
cmp
cwtl
or
pop
sti
jno
call
movsl
lea
mov
xchg
out
add
cwtl
dec
mov
je
fnstsw
scas
jl
add
lods
xchg
push
addl
stos
ss
fcomip
cmp
hlt
sahf
adc
leave
jae
stc
bound
inc
imul
mov
inc
scas
mov
mov
push
mov
sub
imul
fdiv
sahf
and
enter
dec
out
rol
cmc
daa
cmpb
sbb
jno
lcall
outsb
adc
adc
inc
add
sbb
mov
inc
xor
dec
mov
test
mov
notb
push
and
jae
movsl
mov
outsb
adc
sarl
divl
sbb
addps
dec
enter
and
scas
test
mov
xchg
cmpsl
test
repz
fsubl
lods
enter
jmp
mov
ret
jmp
or
pusha
sbb
cmp
loope
xchg
mov
mov
xor
cmpsl
nop
movsl
outsl
fmull
or
ss
add
or
xchg
jbe
xchg
test
xor
scas
and
push
xchg
and
jp
sti
pusha
mov
int
inc
cmp
arpl
inc
ljmp
xchg
jle
push
lahf
leave
sahf
push
xchg
loopne
xchg
in
in
mov
hlt
mov
data16
rcrl
cmp
inc
dec
cld
dec
or
add
adc
fwait
aaa
shll
inc
daa
mov
sub
add
mov
ret
mov
je
pop
negb
pop
outsl
xchg
mov
cmp
addr16
dec
pop
xor
mov
stos
mov
add
into
dec
call
xor
jge
xor
sahf
jo
jb
vandps
in
dec
xchg
and
push
scas
mov
mov
cmp
jmp
cmp
int
lret
xor
and
or
mov
xor
xchg
into
cmp
pop
push
out
sarb
cmp
cli
push
xor
roll
jecxz
test
inc
dec
je
mov
sbb
push
inc
and
test
outsl
decl
inc
stc
xchg
adc
adc
ss
inc
stos
je
jne
in
cmpsl
cs
push
sbb
mov
iret
lret
cmc
dec
sub
shlb
mov
mov
imul
les
mov
scas
out
scas
adc
stos
shl
test
dec
shrl
ljmp
sbb
sbb
mov
scas
push
jns
pop
pushf
inc
in
sub
popf
pop
pop
stos
cmp
push
test
imul
sbb
movsb
xchg
je
mov
xchg
mov
dec
mov
fwait
dec
inc
xchg
add
pop
out
cwtl
add
shlb
ljmp
xchg
cmpb
xlat
clc
rorb
mov
inc
dec
in
jle
push
push
ret
loopne
fsubp
pop
in
xchg
mov
test
scas
and
pop
jb
push
mov
mov
push
add
cld
cld
and
movb
lret
dec
xor
cwtl
jp
and
xor
pop
adc
insb
push
in
cmp
ds
insb
and
dec
inc
int
sub
pop
icebp
int3
xlat
lret
sti
sbb
dec
filds
push
testl
fsubp
xchg
stos
push
lahf
loop
clc
adc
bound
std
imul
add
clc
enter
icebp
and
xor
nop
jo
neg
pop
add
xchg
mov
jle
adc
xchg
push
scas
out
cmp
mov
rolb
das
sar
dec
and
inc
mov
pop
jbe
lea
push
jb
sarl
dec
mov
ret
lods
dec
popa
mov
pop
mov
inc
xchg
add
adc
loop
outsb
xor
roll
xor
ret
outsl
addr16
in
int
scas
es
mov
out
int3
dec
mov
inc
dec
mov
jle
es
fdivp
out
jae
xlat
and
imul
cmp
inc
sbb
adc
xorb
mov
mov
cmp
push
xlat
test
insb
aas
ja
xchg
out
testb
sahf
clc
repz
jmp
pop
mov
dec
sub
das
les
dec
cmp
mov
aam
nop
mov
jae
pop
lcall
pop
mov
testl
adc
push
ljmp
jmp
scas
daa
adc
jg
push
cld
inc
scas
xchg
out
sub
pop
mov
jle
lea
xor
pop
scas
xchg
call
in
lea
enter
pop
mov
mov
cmp
add
nop
push
fmul
fidivrl
inc
jge
cltd
iret
push
fiaddl
aas
mov
cwtl
mov
outsb
lods
dec
xor
and
fidivl
repnz
out
xor
add
out
xor
lods
lods
inc
xchg
lahf
xor
in
lods
mov
mov
fdivs
pop
and
int3
daa
fistl
rcr
pop
stos
in
cltd
insb
and
enter
cmp
or
mov
scas
push
xor
ficompl
push
or
ficoml
fadd
sub
cld
mov
adc
adc
pop
iret
ret
push
int
ja
outsb
xchg
nop
jle
stos
ds
int
xchg
cmp
rorl
dec
mov
subb
fsubrl
mov
cmc
mov
loope
xor
mov
mov
cmp
or
xchg
mov
gs
sub
test
imul
push
test
cltd
mov
add
iret
dec
jmp
push
push
lods
test
push
fnsave
pop
icebp
xchg
jl
sbb
xor
xor
push
inc
dec
adc
mov
jmp
clc
cli
test
mov
lock
mov
dec
sub
mov
lret
in
test
xchg
mov
push
add
xlat
pop
fcoml
sar
subl
scas
xchg
push
pop
add
ret
mov
mov
mov
cmp
add
mov
adc
das
lds
gs
lds
mov
and
stc
jmp
jl
pop
mov
pushf
dec
lahf
xor
nop
fwait
ja
sahf
imul
mov
cwtl
push
dec
nop
dec
mov
xchg
mov
iret
inc
je
js
inc
std
aaa
outsl
jns
shll
pushf
cs
dec
shl
arpl
scas
out
leave
lret
cmpsb
add
jbe
cmp
pop
subl
add
and
inc
cmc
cmp
lret
xchg
iret
mov
mov
repnz
mov
ja
fwait
lds
and
pop
pop
loop
cmp
xlat
xchg
inc
shll
push
or
add
add
sbb
push
fwait
mov
scas
xor
andl
leave
and
js
mov
add
add
int
mov
mov
push
xlat
ss
mov
aaa
jne
stc
dec
fistl
xchg
test
ds
or
sub
mov
out
lcall
sbb
xchg
pop
inc
mov
cmp
or
testl
test
pop
sbb
ret
pusha
xor
jmp
loope
and
addl
fadds
and
in
xchg
imul
sbb
push
fistpll
xchg
dec
jns
mov
repnz
addr16
jg
lock
movsl
in
pop
sbb
mov
stos
je
jle
mov
scas
adc
and
add
test
shrl
mov
mov
add
lret
fwait
jnp
and
jae
stos
movsl
adc
mov
repz
xchg
cli
dec
bound
out
test
in
cmpsl
lods
fadd
jge
mov
lds
push
xchg
mov
ljmp
sub
mov
jne
adc
push
test
or
orl
sti
fld
or
int3
mov
push
sub
xchg
mov
mov
xor
push
push
jo
sbb
lret
inc
lods
addr16
cmp
ror
mov
movsb
dec
and
sub
mov
pop
fwait
sbb
jb
iret
hlt
test
daa
insb
lahf
push
add
xchg
out
cmp
mov
icebp
divl
movsl
xchg
jnp
jns
shlb
aam
inc
bound
aam
push
push
add
sti
inc
lret
icebp
fisubrl
test
in
in
lahf
cs
xor
mov
ret
mov
imul
sub
pop
leave
xlat
jp
out
pusha
sub
ror
outsb
mov
jnp
lods
ljmp
jb
fs
jl
cmpsb
sbb
andb
lds
xchg
cli
and
lea
or
xchg
sub
inc
aad
and
mov
add
cmpsl
inc
push
mov
jb
push
or
fcomps
cmp
test
pop
loope
mov
pop
xchg
sbb
push
pop
xchg
xor
stos
jge
pop
imul
sbb
dec
dec
xchg
aad
icebp
dec
fidivl
int3
dec
test
mov
push
cmpsb
mov
mov
sarl
and
int3
and
neg
push
dec
fldl
mov
pop
lahf
inc
mov
jne
inc
push
inc
push
xchg
jne
mov
ljmp
subl
sti
icebp
jno
dec
jnp
mov
lret
dec
daa
ljmp
ljmp
add
test
pushf
popf
insb
sub
cmc
mov
jmp
or
and
lea
jl
mov
and
xor
pop
stos
iret
jecxz
inc
add
pop
sub
xor
sbb
lret
mov
inc
in
lret
mov
in
std
fldenv
xchg
cltd
fdivrl
enter
mov
adc
and
cmp
xor
jle
jns
stc
test
fsubrs
pop
test
mov
sbb
data16
push
xchg
or
cmp
add
inc
ficoms
in
xor
lahf
mov
cld
inc
idiv
movsb
lock
sar
cmp
pusha
sbb
push
lret
rcll
movsb
and
xor
mov
jl
test
repz
mov
daa
sti
shrb
jp
or
out
mov
xchg
pop
std
xor
cmpsb
dec
dec
pushf
sub
paddb
push
mov
test
daa
mov
adc
iret
out
jb
xor
arpl
cmp
in
ja
or
adc
mov
push
xchg
out
adc
xchg
mov
testl
sbb
sub
fisubs
adc
ror
leave
sbb
pop
aad
push
xchg
aam
andl
icebp
shrl
es
push
cmp
les
mov
xlat
or
aam
shll
mov
in
dec
clc
negb
daa
lahf
sub
and
cmpsl
xor
jnp
js
scas
mov
stc
mov
arpl
and
cmp
pop
outsb
xorl
loopne
enter
test
pop
inc
outsb
in
in
sub
repz
pop
aad
arpl
gs
ret
sub
or
in
popf
xor
mov
mov
lahf
xchg
push
fucomip
sti
pop
xor
xchg
jl
mov
out
xchg
push
push
das
mov
xchg
cmpl
mov
sbb
push
fdiv
mov
inc
jo
xor
sbb
test
imul
mov
addr16
mov
inc
ljmp
adc
les
cwtl
jge
sbb
lret
cmc
cli
daa
cmp
lcall
mov
inc
iret
jb
and
nop
push
out
pop
clc
mov
inc
inc
cmp
jecxz
popa
out
aaa
movsl
inc
pushf
ja
mov
mov
mov
add
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
clc
dec
push
rolb
xor
test
xchg
sub
adc
fcomps
or
addr16
push
loopne
std
test
mov
jp
dec
aaa
cmp
sub
in
out
movsb
lahf
jmp
jnp
lods
xchg
inc
cltd
adcl
notl
outsl
movsl
lds
insb
negl
inc
sub
pop
xchg
cltd
repz
outsl
add
dec
add
movsb
outsl
imul
icebp
xchg
push
rolb
jg
mov
mov
test
out
or
push
daa
movsl
jnp
in
and
in
fwait
lock
and
xchg
add
popl
mov
inc
loope
xlat
push
insb
adc
pop
sbb
mov
aad
cli
mov
cmpsb
lods
into
xlat
sbbb
push
jns
xchg
inc
dec
mov
sub
sub
adc
sub
mov
aaa
ds
jns
loopne
jnp
pop
pop
cli
int
add
pop
push
cli
push
xlat
xor
cmp
in
or
out
imul
xorl
mov
test
aas
aaa
icebp
pop
mov
dec
jl
je
lods
mov
gs
in
push
decb
lock
fldenv
dec
sub
outsl
clc
outsl
int
mov
sti
xor
cmp
inc
cmp
and
jle
out
adc
sti
ds
mov
xchg
xor
sbb
cld
xchg
cld
pusha
fisttpl
repnz
or
cmp
popf
leave
push
je
sub
xor
xchg
int
daa
inc
pop
pop
adc
mov
jl
sub
add
clc
dec
in
ret
pushf
in
inc
mov
gs
pushl
dec
pop
push
fcoml
adc
push
stos
adc
shrl
in
cmp
test
stos
xchg
in
cli
lret
push
lret
jecxz
shll
into
pop
cmp
sbb
lock
or
sub
test
outsl
inc
inc
or
movsl
cmc
inc
xchg
xorl
sub
sbb
orb
sbb
pop
and
lock
int
aas
jmp
mov
mov
xor
pop
dec
push
dec
out
cmpsl
arpl
pushf
mov
sbb
dec
cmc
leave
sbb
lea
mov
in
and
jbe
lcall
mov
push
xor
loope
out
sub
mov
push
sub
sub
clc
push
cltd
inc
sub
mov
cmc
or
xchg
pop
out
shlb
in
push
dec
sbb
jo
add
pop
lods
pop
or
xor
insl
mov
in
es
aad
push
shrl
mov
into
adc
dec
stos
lods
jns
test
add
ret
pop
pushf
scas
mov
ret
daa
sbb
ljmp
cltd
bound
popa
dec
fstl
out
fs
int3
idivb
xor
pop
inc
dec
outsb
stos
frstor
xchg
mov
adc
ret
pushf
repz
icebp
push
ja
xchg
pop
push
test
mov
in
mov
and
sub
lcall
pop
mov
mov
xchg
movsl
std
test
mov
loop
mov
fdiv
test
pop
jle
jne
jno
pop
inc
int3
mov
or
cwtl
hlt
in
mov
fs
adc
sub
add
or
fcmovnu
mov
add
fistps
mov
test
sti
rclb
mov
xchg
inc
stos
rcr
arpl
leave
jns
push
cmpsb
fs
push
dec
loop
out
xor
mov
scas
jb
sarb
adc
in
in
mov
mov
daa
jg
sbb
icebp
ret
mov
push
or
push
sbb
pop
addr16
stc
pop
sub
inc
pop
rol
aaa
mov
xchg
gs
inc
push
cwtl
jmp
sub
ret
hlt
loop
jo
in
loop
shrb
jecxz
dec
into
sbb
popa
pop
mov
xchg
loope
pop
jl
pop
je
sbb
fsubrs
repz
push
adc
aaa
inc
dec
sti
xor
js
gs
pop
lea
sbbl
rolb
divb
mov
push
sbb
push
fdivs
rorl
pusha
mov
je
jno
or
aad
cmc
mov
cld
cmpsb
test
imul
add
mov
outsl
lods
test
mov
fldt
testl
pop
roll
mov
xor
in
sub
sbbb
inc
xor
mov
sbb
subb
mov
mov
or
adc
cmpsb
cltd
pop
mov
jae
lods
dec
test
push
dec
add
xchg
loop
cmp
dec
mov
int3
imul
cmp
insb
jnp
lcall
cmp
inc
mov
and
xor
rcrl
mov
mov
pop
out
push
cmp
pop
pop
or
inc
dec
aad
cs
movsl
aam
popa
jo
xchg
dec
sub
and
out
adc
mov
push
frstor
dec
gs
ljmp
push
push
stos
mov
ljmp
cld
fisttpll
test
or
push
pop
outsl
inc
mov
addr16
fcmovu
pop
push
xchg
in
xchg
adc
cli
lods
lahf
imul
icebp
fnstenv
into
out
xor
int3
jo
dec
rcll
inc
test
mov
test
cmp
loope
inc
nop
decl
xor
sbb
xchg
lock
lahf
mov
stos
dec
cwtl
pop
push
dec
add
mov
sbb
shll
lock
movsb
dec
add
xchg
movsl
push
adc
out
inc
mov
pop
stc
jae
add
pop
jne
add
or
ret
add
rcl
or
lods
ja
hlt
pop
fistps
aas
fwait
imul
pop
or
mov
adc
sbb
int3
push
dec
aaa
mov
inc
imul
aaa
fcomps
xlat
nop
mov
ss
leave
add
cltd
inc
scas
fisttps
mov
movl
push
xor
pusha
mov
pop
cmp
xchg
xchg
mov
jmp
cmp
testb
std
cli
push
xchg
add
sbb
mov
jecxz
sub
mov
mov
popf
mov
enter
or
mov
jne
push
lods
xchg
and
mov
ret
push
and
lcall
xchg
lret
loop
push
sbb
cld
mov
daa
out
das
dec
clc
push
imul
pop
sbb
jl
dec
addr16
fldl
orb
jmp
repz
jo
stc
mov
xchg
mov
xchg
shrl
lods
divb
dec
cwtl
in
fildll
mul
and
mov
hlt
cmpsb
sub
sub
cmc
sar
inc
outsb
std
icebp
aad
jnp
pusha
jge
or
xchg
jae
fdivs
icebp
or
popa
pop
pop
cmp
mov
nop
mov
les
bound
mov
les
add
outsl
add
int
ret
cmp
insb
shlb
out
and
sub
icebp
lcall
mov
mov
notl
out
xchg
test
mov
mov
stos
sub
inc
jne
ret
mov
lock
lahf
ret
dec
jl
sbb
sbb
add
out
jecxz
or
add
ret
xchg
outsl
mov
lods
in
neg
jne
fists
pop
das
repnz
js
shll
sub
mov
in
sub
xor
xor
fs
popf
js
outsl
aas
dec
xchg
pop
and
jb
add
mov
cwtl
push
add
jbe
mov
push
mov
mov
jge
cmp
mov
loope
loop
inc
insb
and
jne
jbe
add
cmp
int
push
iret
scas
imul
mov
pop
mov
cmovae
or
iret
sbb
test
and
jno
sbb
pop
pop
daa
or
cmp
js
cmc
mov
push
xor
push
dec
aad
aam
inc
lea
sahf
pop
sub
std
inc
inc
add
rclb
ja
and
daa
ljmp
cmp
jnp
mov
sbb
fimull
data16
shlb
adc
pop
incl
int
pop
sub
insb
jo
inc
add
cltd
je
out
mov
inc
pop
ljmp
add
xor
dec
loopne
sub
pop
sub
enter
ret
popf
cmp
mov
adc
out
out
xchg
sub
test
jno
push
int
mov
xor
sbb
jg
bound
testb
clc
test
fiaddl
lcall
push
add
push
cmp
push
ret
xorl
jge
or
pushf
lods
pop
outsb
out
and
cmp
push
sbbb
pop
mov
sub
sub
xchg
add
jae
clc
les
stos
cmp
sbb
adcl
cmp
sbb
add
fdiv
mov
icebp
mov
fadds
outsb
mov
push
lea
out
fadds
pusha
xor
xchg
movsb
sbb
push
pop
pop
jb
rorb
cmpl
mov
lcall
outsl
add
pop
into
jl
call
push
push
negl
add
insb
fs
dec
mov
sti
adc
push
mov
sbbl
jnp
push
inc
xchg
test
mov
sbb
pop
inc
cmpsl
mov
pop
inc
or
fcompl
bound
lea
or
cwtl
cwtl
push
xchg
jo
xchg
inc
push
nop
mov
icebp
push
push
mov
out
jnp
shrb
add
mov
sbb
and
cmp
xchg
jne
xchg
push
push
add
aaa
imul
mov
push
pop
ljmp
push
xor
pop
dec
or
pushf
xchg
cmc
stos
jne
dec
mov
aad
jmp
ss
xchg
ret
jle
pop
loopne
arpl
pushf
sub
cmp
xor
push
cmp
sbb
shll
pop
push
ror
cltd
mov
je
push
dec
and
mov
add
test
mov
xchg
nop
dec
in
sub
sbb
dec
insl
test
mov
push
add
or
mov
push
js
pop
jg
data16
and
mov
sub
addr16
or
or
pop
popa
iret
mov
lods
pop
mov
inc
pop
xchg
mov
scas
mov
shlb
loopne
cmp
mov
cld
lahf
gs
add
pushf
test
inc
dec
adc
data16
rclb
pop
into
push
cmp
mov
xchg
jo
mov
movb
xchg
or
insl
cs
mov
les
mov
lods
cs
test
mov
aaa
ja
and
mov
cmpl
xchg
aaa
mov
push
mov
xchg
inc
dec
loope
mov
push
push
sbb
iret
dec
ja
je
lcall
stos
decl
add
adc
ja
xchg
nop
ret
mov
mov
or
and
stos
jg
loop
push
mov
sub
pusha
pop
xchg
fsts
jbe
fbstp
sub
loopne
inc
xor
cmpsb
sbb
leave
sahf
adc
jmp
adcl
mov
adc
sbb
lcall
jae
push
pusha
inc
loopne
lret
mov
ss
pop
dec
add
sub
pushf
cmp
nop
sbb
xchg
dec
sbb
mov
mov
xchg
ds
shr
push
out
mov
hlt
and
andl
scas
sub
mov
pop
add
sti
cwtl
fildl
test
imul
cmc
jnp
jbe
pop
sbb
incb
xchg
push
fildl
in
shll
repz
out
outsl
sbb
cmp
dec
leave
and
scas
dec
push
xchg
sbb
mov
in
mov
enter
mov
loope
test
das
inc
sbb
out
maxps
rep
clc
fs
pop
cmp
ret
sbb
int3
lahf
out
jg
jecxz
xchg
les
rol
xchg
or
add
lods
sbb
push
hlt
or
lret
mulb
dec
cltd
jno
es
push
push
lret
sahf
mov
lods
push
loop
int3
xchg
pop
push
push
mov
in
fcmove
jecxz
xchg
lret
in
dec
pusha
ret
add
das
sahf
mov
leave
inc
mov
out
push
aaa
xchg
ret
inc
lds
and
das
sbb
mov
out
dec
mov
insb
push
and
pop
xor
xor
sbb
ret
shr
arpl
and
icebp
mov
bound
fxch
sub
loop
out
and
cmc
push
xchg
push
movsl
and
cmc
cmp
fucomi
mov
nop
or
add
fsincos
out
mov
cmc
clflush
test
or
and
pavgb
push
shrb
or
jae
xor
jo
data16
mov
mov
jmp
shlb
adc
mov
dec
jg
or
repnz
push
sub
daa
mov
lds
dec
push
adc
jne
enter
dec
outsl
aad
pop
xorb
inc
je
mov
inc
out
imul
aam
lahf
mov
inc
xchg
jl
mov
das
sarb
cmp
insb
jb
mov
in
pop
cmpsl
sub
test
and
clc
or
pop
dec
shrl
sbb
ja
jb
mov
pushf
and
loop
cmp
and
frstor
addr16
or
sub
push
je
shlb
leave
cmc
jns
fistps
je
and
xchg
inc
mov
sub
jnp
push
jo
sub
bound
dec
dec
aad
jg
cmp
cmp
xchg
pop
in
ret
sub
adc
push
inc
push
mov
sub
mov
cld
pop
call
mov
test
jo
lcall
rcl
addr16
pop
icebp
adc
and
push
and
repz
sbb
mov
xlat
dec
jl
cmp
imul
mov
aas
andb
or
dec
addr16
insl
in
fwait
push
pop
adc
lea
mov
jo
mov
inc
pushf
pop
add
jg
test
push
loope
pop
push
or
insl
fcompl
mov
cmp
test
push
inc
iret
xchg
pusha
jle
outsb
ficomps
cmp
sti
jg
cmc
jecxz
sub
push
call
in
repnz
not
lock
aad
in
test
cld
les
xchg
xchg
push
add
pop
les
stos
popa
jge
mov
cs
shll
push
ret
adc
adc
mov
stos
jecxz
mov
adc
mov
pop
into
mov
imul
inc
dec
adc
les
pop
mov
adc
int3
jne
cltd
push
sbb
inc
push
and
dec
fsin
push
adc
add
pop
mov
insb
fcom
lods
add
sub
or
sub
push
cmp
js
sbb
insb
mov
sub
cli
xchg
xor
bound
push
or
repnz
loopne
lds
mov
ss
jmp
sti
adc
in
sbb
int3
test
or
into
or
aad
into
ljmp
sub
cmpsl
fstpt
dec
cmp
out
sub
inc
xchg
adc
dec
push
test
imul
movsl
sub
xorl
loope
in
lds
mov
imul
fcmovnbe
mov
stos
push
jae
and
fldl
movsl
imul
push
cmpsl
and
rol
push
insb
scas
add
push
das
scas
lret
dec
jge
shl
xor
inc
add
jo
mov
push
mov
ficoml
int3
cli
inc
or
loopne
jo
ret
daa
fidivs
popa
aad
stos
cmp
mov
sahf
push
mov
xor
jbe
add
jl
push
imul
add
cmp
mov
push
test
test
pop
mov
aaa
and
cmp
pop
cmpsb
sbb
flds
dec
fistpll
test
push
aam
cmp
push
repnz
mov
iret
and
jmp
imul
std
push
mov
aas
xchg
pop
xlat
xchg
pop
lahf
sub
inc
mov
das
loop
mov
pop
inc
push
int3
imul
mov
movsb
fdiv
jecxz
call
fs
pop
inc
adc
cld
push
in
mov
xor
add
sub
lret
or
stos
cwtl
sti
cli
test
fimuls
daa
loope
pop
push
push
adc
adc
out
sbb
out
mov
out
fsub
js
cwtl
dec
inc
inc
lods
push
aas
out
pop
jbe
cld
push
in
movsb
xchg
rcll
dec
ror
mov
ret
or
fs
inc
ds
mov
pop
mov
xchg
and
leave
jl
clc
pusha
push
movsb
adc
lret
test
add
cmp
jno
repnz
adc
xchg
push
mov
push
ljmp
xchg
sbb
jmp
ret
push
lea
xor
lahf
pusha
dec
and
sbb
push
lods
mov
lock
pop
or
pop
jg
out
mov
xchg
push
bound
nop
jp
pop
out
test
cmp
xor
shlb
mov
out
adc
enter
test
ja
or
add
cwtl
lds
jmp
lret
mov
sbb
fcmovnbe
shl
jecxz
lock
cmp
pop
add
or
xor
pop
bound
stos
iret
fs
add
mov
or
in
dec
scas
push
push
mov
call
sbb
iret
push
gs
mov
jns
pop
int
jle
add
test
loope
insb
xchg
mov
jns
loop
out
pusha
mov
dec
loopne,pn
mov
mov
cmpsl
xor
sbb
sti
js
es
fldt
push
lret
sbbl
pop
adc
sub
xchg
hlt
pop
nop
add
mov
shlb
mov
mov
add
adc
xchg
mov
lods
es
mov
xchg
andb
sarb
sbb
sub
xor
pop
jbe
mov
aam
pop
mov
nop
das
sub
jmp
sbb
xor
cmpsb
data16
das
xchg
xor
mov
xlat
in
add
ret
mov
pop
push
imul
mov
cmc
test
mov
lods
mov
mov
pusha
xor
and
lock
aam
outsb
or
xchg
stos
inc
jo
mov
inc
stos
mov
cwtl
jl
xlat
add
clc
mov
sub
rolb
push
test
test
add
jl
pusha
mov
push
jl
ret
imul
adc
jae
sbb
pusha
sbb
cmp
xchg
divb
insb
sub
jbe
dec
mov
imul
int3
push
in
cmp
negl
orb
nop
test
mov
mov
loop
pop
add
je
ljmp
dec
add
xchg
or
dec
cmp
adc
push
mov
pop
push
adc
adc
sbb
push
movsb
aaa
divl
outsl
dec
adc
in
imul
jp
push
lock
lock
imul
mov
dec
pop
xchg
arpl
xor
rol
xchg
mov
xor
push
push
dec
in
je
inc
or
adc
xor
enter
add
cwtl
dec
imul
push
mov
pop
pop
icebp
movsb
in
cltd
ficomps
dec
aas
or
xor
adc
sbb
mov
lods
and
dec
rcll
leave
imul
iret
fwait
push
inc
xchg
popf
insl
lea
push
js
lds
out
mov
mov
repnz
aas
xchg
xor
daa
add
push
testb
in
sub
push
stos
ret
xor
cmc
sarl
cmp
movsb
in
push
or
mov
pop
jno
or
push
repz
pop
out
mov
loop
jp
mov
out
ljmp
sub
fsubl
mov
dec
movsb
cmpsl
mov
lcall
lcall
mov
pop
pop
mov
movsl
sti
mov
out
mov
int
jo
cmp
frstor
ljmp
mov
push
out
fildl
mov
cmp
jno
adc
xchg
subb
ja
fbstp
jmp
scas
pop
mov
pop
mov
jl
icebp
fwait
clc
or
jl
xchg
cli
jge
sbb
lods
int3
test
test
pop
mov
stc
xor
in
test
outsl
jnp
jnp
sub
andl
xchg
pusha
scas
addr16
xor
jns
adc
sar
sub
xchg
in
inc
testb
dec
ret
std
mov
add
js
dec
into
cs
nop
repnz
cmpsb
jmp
pushf
mov
js
dec
into
xchg
sahf
lods
ror
sbb
in
test
jg
sub
mov
mov
push
fsub
imul
adc
push
xchg
inc
lods
xor
mov
cmp
xor
cwtl
mov
ja
and
cli
movsl
test
repz
jg
xor
push
add
stos
gs
outsb
mov
insl
insl
sub
push
lcall
cmp
fnstenv
and
pop
call
mov
sarb
mov
fdivrs
mov
xchg
shll
addl
in
adc
out
add
adc
xchg
negb
mov
sub
xor
xchg
add
cmp
sahf
xor
sbb
leave
das
adc
push
push
sbb
ljmp
mov
jno
adc
lret
push
sub
sub
mov
mov
push
insb
cmp
insl
jae
hlt
jbe
rcrl
imul
add
mov
add
ret
sbb
scas
mov
mov
int3
lcall
leave
pop
push
jne
adc
mov
in
inc
pop
hlt
stos
push
dec
xor
insb
lock
inc
dec
stos
mov
data16
push
fiadds
xlat
or
mov
aam
addr16
xchg
push
jmp
int3
lahf
inc
and
ss
cli
repnz
xlat
test
mov
pop
or
aam
sbb
push
in
sbbb
sub
cmp
ja
xchg
cltd
sbb
stc
jmp
frstor
jne
inc
arpl
xchg
pop
iret
xchg
inc
nop
leave
add
je
add
lret
dec
test
addb
aam
adc
fstpt
sub
inc
sbb
cld
push
adc
ret
in
pop
test
data16
into
pop
clc
call
das
jge
pop
mov
cwtl
sbb
sub
std
mov
dec
mov
hlt
jg
push
xor
cmc
jl
sub
dec
cmp
repnz
and
seto
or
movsl
lods
ja
or
scas
and
or
jmp
jae,pt
movsb
jl
adc
inc
inc
mov
mov
ret
jnp
xchg
sub
dec
shufps
mov
xor
jge
inc
or
mov
jbe
ss
push
jl
clc
push
fisubrl
lods
test
push
in
shr
mov
scas
lcall
scas
or
or
pop
bound
pop
mov
dec
fnstcw
and
idivb
sbb
push
in
jns
ljmp
sbb
popf
cwtl
outsb
test
mov
stos
mov
icebp
or
and
mov
jmp
cmp
jle
dec
hlt
aam
cmp
mov
fdivrl
call
dec
lcall
scas
lret
out
adc
pop
mov
mov
mov
xchg
je
mov
xor
mov
stc
in
adc
ja
mov
sahf
or
insb
popa
cmp
aam
loop
sub
mov
push
inc
lock
mov
lcall
enter
out
int3
adc
cmp
arpl
fnstcw
sbb
sub
ja
pop
popf
hlt
lahf
loope
add
xor
das
sub
cmpsl
pop
pop
mov
jnp
pop
btc
push
add
push
in
into
inc
xchg
and
fdiv
cmp
push
faddl
inc
pop
loop
pop
fs
orl
dec
jmp
shlb
adc
insl
scas
lods
mov
and
or
ljmp
inc
int3
or
fwait
pop
aaa
mov
jl
fcompp
jge
sub
daa
int
or
cmp
das
idivl
shrl
mov
add
out
dec
stc
mov
sub
cs
jl
insl
jne
lds
or
ljmp
in
pushf
xchg
int
dec
jnp
cmp
popf
push
cmp
inc
jbe
xor
mov
xchg
loope
fldl
xchg
addr16
scas
jno
fcoml
jo
push
cmp
jp
jg
pop
lret
js
das
and
sbb
data16
hlt
pusha
out
mov
scas
ret
jae
sti
dec
lret
popf
and
shrb
jns
sub
add
bound
push
test
dec
ljmp
mov
ss
xlat
test
dec
fdivl
xorl
jb
fs
push
jg
int
or
xor
cmpsl
les
mov
int
jp
inc
and
push
adc
mov
std
ljmp
xchg
aas
dec
xchg
in
or
push
jl
inc
iret
mov
ja
inc
adc
dec
push
adc
loope
sbb
aad
adc
sub
pop
adc
and
inc
add
test
test
xchg
andb
or
stos
fwait
pushf
xchg
inc
lret
cmp
rolb
add
sub
push
pop
xor
push
jo
adc
insl
in
rorl
xor
pop
sbb
aam
mov
push
mov
in
test
inc
and
pop
lods
jae
jns
push
sub
jle
rolb
inc
mov
std
mov
cmp
add
stc
fldcw
aam
mov
mov
in
aaa
jne
jnp
data16
fidivrl
push
iret
push
in
or
lea
add
je
out
sub
push
jno
mov
push
mov
jns
cmpsl
pop
xchg
or
test
push
dec
out
bound
pusha
jae
cmp
mov
arpl
popa
into
lahf
xor
imul
cmp
dec
xchg
jg
lock
sub
int3
bound
mov
pop
adc
in
sbb
nop
jo
mov
push
sti
jle
test
dec
in
cwtl
mov
mov
and
sub
enter
call
shll
add
sarb
cmp
pop
loop
into
cmp
aad
repnz
sahf
mov
out
jg
mov
lret
pop
dec
movb
mov
jmp
cmpb
insb
dec
sbb
adc
mov
lock
ds
mov
mov
nop
lahf
out
lods
lea
mov
shr
in
mov
rcr
xchg
mov
xor
rcll
jmp
adc
xor
jg
mov
mov
out
inc
push
sbb
fists
mov
or
cmp
xchg
push
dec
jmp
ds
out
jbe
sub
bound
pop
xchg
outsl
lods
in
mov
mov
dec
sbb
xlat
xchg
cmpl
inc
insl
mov
cmp
dec
in
jae
jge
push
xor
and
fs
or
rep
push
sub
and
in
xchg
test
int
inc
test
pminsw
out
mov
mov
xchg
insb
test
add
lock
andl
lea
sbb
out
or
in
mov
inc
aas
je
fisttps
mov
adc
cmp
arpl
jnp
imul
ja
sbb
or
test
sarl
int3
xchg
iret
pop
les
aaa
dec
enter
sub
fmuls
inc
es
stos
imul
stos
add
xor
stc
and
push
xor
ljmp
test
jmp
cmc
icebp
add
cld
rolb
mov
clc
add
ret
and
jecxz
divb
jns
add
mov
pop
dec
sub
scas
mov
dec
fisttpll
jge
add
in
xchg
xor
jl
in
dec
lcall
adc
mov
fcomip
and
ljmp
cmp
jb
jae
push
outsl
push
jae
mov
fdivs
or
sbb
lods
mov
add
arpl
cwtl
mov
adc
lcall
fisubs
lret
cmpsl
stos
sbb
pop
nop
add
data16
mov
push
xchg
in
add
ret
lock
lret
push
push
enter
inc
push
sbb
out
imul
clc
rorb
cmp
add
jmp
push
out
sub
mov
outsl
fwait
inc
subb
scas
or
jl
out
xchg
jle
pop
aaa
jge
jae
std
data16
in
mov
movsb
sub
sub
jne
sub
ja
sbb
mov
mov
sbbl
pop
dec
jecxz
and
test
out
ret
inc
xor
sbb
stos
mov
dec
lds
pop
jne
xchg
sbb
out
les
pop
adc
add
cmp
mov
pop
sbb
xchg
sbb
xor
les
or
sub
repz
jae
rorl
push
mov
subb
outsb
mov
fwait
xor
int3
adc
int
xchg
pop
mov
in
std
ds
clc
mov
movsb
stos
fldpi
bound
pop
insl
inc
les
lods
inc
test
sub
push
ret
ret
aad
les
out
nop
and
clc
mov
pop
jno
in
test
sbb
aam
dec
call
je
sahf
ljmp
and
and
xor
dec
push
jge
xlat
push
loope
cltd
sbb
mov
push
sbb
adc
mov
sti
sbb
loop
movsbl
fisubl
les
jmp
xor
jb
mov
int
xchg
push
in
jae
std
cmp
cli
andb
mov
pop
cmp
popf
sarb
incl
dec
outsb
jne
mov
in
add
dec
lods
ret
cmp
jp
adc
cmp
inc
mov
mov
xchg
sub
add
cwtl
test
out
push
cmp
push
sbb
pop
jbe
or
test
xchg
jp
mov
xchg
enter
inc
pop
ret
cmc
pushf
into
stos
sub
daa
cli
or
cld
xchg
pop
mov
xchg
sbb
xor
lods
loopne
push
mov
pop
in
aam
mov
mov
stos
push
mov
cmp
push
out
test
cltd
jae
in
cmpsb
outsl
in
jmp
pop
sub
ss
loope
mov
cmp
jne
dec
xchg
and
pop
mov
mov
mov
nop
dec
jl
pop
test
das
xorl
ljmp
repnz
or
mov
dec
icebp
aam
adc
or
fiadds
cmp
sbb
pop
or
mov
sub
imul
dec
adc
je
hlt
add
xchg
adc
scas
or
mov
dec
dec
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
stc
inc
icebp
ret
scas
addl
les
mov
out
aad
arpl
lret
mull
jns
jnp
cwtl
pop
or
xorb
pop
pop
mov
jne
sub
dec
xor
xor
sarl
aas
movsl
cmp
inc
shrl
xor
lods
mov
jecxz
pop
inc
push
pop
jnp
adc
sub
enter
hlt
or
aad
mov
sbb
fs
into
mov
repnz
cmp
imull
cmp
push
push
cmp
pop
adc
scas
out
mov
and
andb
dec
movsl
jne
fnsave
fisubrl
sub
push
mov
push
dec
cmp
fwait
xchg
jo
stos
mov
ljmp
mov
andl
sub
inc
subb
aas
inc
popf
xchg
cmp
iret
adc
insl
add
add
or
pop
ja
ss
jg
sub
and
cs
adc
cmp
mov
xor
sbb
cli
inc
adc
pop
mov
fistpl
ret
dec
sub
add
inc
incl
movsl
xchg
pop
cwtl
inc
loop
ja
adc
lock
aad
pushf
nop
test
xor
add
push
adc
aaa
sbb
jecxz
fldcw
pop
inc
ret
not
push
call
adc
rcrb
call
sbb
iret
sbb
cwtl
fsubrl
data16
je
pop
repz
push
or
mov
push
or
fistps
cs
xchg
pushf
repz
xchg
pop
mov
mov
test
jne
inc
mov
inc
cmc
mov
outsb
xor
out
mov
sbb
xchg
mulb
mov
movsl
add
lods
mov
dec
pop
sbb
pop
push
jnp
sub
sbb
imul
cmp
rcrl
jle
jnp
ret
ret
mov
outsl
bound
insl
rcll
push
fcmove
sbb
xchg
iret
or
push
aad
jno
mov
jns
je
dec
sub
mov
cmpsb
sbb
and
mov
xchg
adc
jecxz
and
lret
mov
mov
or
stos
stos
mov
push
outsl
pop
es
ljmp
inc
mov
divl
les
ja
mov
sbb
push
xor
cs
cmp
inc
xchg
daa
shr
arpl
fstl
cwtl
aad
sub
sbb
cwtl
inc
test
or
mov
jbe
mov
gs
in
aad
mov
xor
jg
cmpsl
adc
or
dec
push
cmp
push
pop
call
in
adc
stos
cmp
inc
jg
lds
cmp
int3
ret
jne
sub
sbb
mov
xor
xchg
mov
cltd
les
pop
jecxz
stos
jp
fstl
push
sub
movsl
mov
leave
xchg
mov
data16
pop
test
lds
sbb
call
in
rcrb
cmp
addr16
adc
sarl
and
and
sarb
mov
jne
popa
jne
aam
insl
pop
xchg
push
aas
in
lods
dec
pop
cs
rorb
xor
shr
cmpsb
leave
pop
dec
dec
or
push
scas
out
cmpsl
js
jb
js
inc
inc
sbb
and
xor
in
int3
xor
aad
aaa
in
mov
or
outsl
int
loop
xor
icebp
pop
loope
scas
imul
xchg
jne
xchg
mov
movsl
xorb
mov
arpl
and
add
int
sbb
jno
pop
dec
adc
leave
and
mov
adc
testb
inc
decb
cmp
lcall
xchg
incb
mov
jp
les
sbb
mov
mov
sub
mov
jo
push
mov
lret
jb
jmp
cwtl
insb
pop
or
outsb
adc
vmread
cmp
cmp
lcall
adc
shrl
adcb
clc
pop
pop
bts
jnp
bound
xchg
pop
xor
fiadds
fwait
mov
sub
popa
xlat
pop
je
push
lcall
xor
les
push
pushf
xor
rcrb
lds
dec
adc
xchg
cmc
clc
dec
jne
rolb
push
dec
aad
out
ja
bound
mov
rcrb
xchg
outsb
jo
jp
lret
shlb
xlat
add
aad
push
and
cmp
sbbb
xchg
and
sub
hlt
xor
xor
push
mov
sub
xor
inc
sbb
inc
pop
adc
ror
loop
ret
lahf
cwtl
and
leave
andb
in
and
push
cmp
inc
in
or
insb
mov
dec
shrl
or
out
fimuls
dec
inc
je
mov
xor
push
inc
or
das
into
shlb
add
adc
jne
jg
add
out
xor
cld
cwtl
scas
jg
mov
inc
xchg
lea
lret
rolb
or
pop
mov
popf
cmp
jg
cmp
daa
out
out
mov
mov
in
jne
or
inc
lret
xchg
xchg
ljmp
mov
scas
ret
mov
mov
pop
scas
push
cmp
mov
push
aaa
es
mov
lods
jle
loope
push
xlat
push
jge
xchg
xchg
ret
loopne
xchg
jge
test
xor
test
outsb
hlt
ret
insw
dec
test
pop
mov
andb
push
test
insb
in
loop
out
or
or
subl
inc
mov
rcl
sub
je
decl
sets
std
imul
push
mov
cmp
push
fsubrl
cmpsl
leave
jmp
inc
jbe
dec
push
das
or
jo
mov
add
into
ja
push
imul
sbb
pop
add
insb
mov
sub
roll
pop
sbb
les
xlat
xchg
mov
and
pop
std
mov
sbb
mov
pop
mov
jp
or
pop
xchg
xchg
adc
scas
enter
pop
sbb
je
or
scas
hlt
cmp
adc
inc
dec
or
inc
lcall
cli
xlat
sbb
pushf
cld
je
out
stc
add
inc
jg
xor
dec
shrl
nop
xor
pop
test
imul
ret
push
fidivrs
pop
or
das
repnz
sub
sbb
imul
ds
xor
data16
push
nop
jecxz
or
jmp
and
movsb
pop
and
out
addr16
cmpl
jle
jmp
lea
loop
mov
in
xor
lock
cltd
nop
in
pop
mov
mov
mov
insb
aas
loope
js
mov
pop
dec
in
in
aam
jns
jmp
pop
outsl
insb
loopne
sti
ljmp
insb
xchg
ret
sbb
dec
sub
sbb
movb
fmul
shr
out
sbb
popf
cld
lock
out
lock
mov
inc
push
mov
mov
add
imul
cmp
mov
out
loopne
mov
imul
movsb
sub
sbb
ja
push
fisttpl
cld
es
pop
psubd
mov
mov
inc
xor
sbb
jnp
les
dec
cli
mov
adc
cmp
ret
mov
add
mov
mov
in
inc
pop
flds
test
stc
push
pop
loopne
xor
cmp
push
je
roll
fildll
mov
mov
push
fwait
adc
xor
stos
sbb
adcl
sahf
inc
mov
mov
cld
mov
rorl
mov
dec
xlat
pushf
imul
popa
ljmp
xchg
out
sti
cld
jecxz
sbb
in
mov
inc
lock
inc
rorl
lods
pop
arpl
xchg
ja
cld
push
and
inc
fmul
mov
sub
ficomps
data16
xchg
adc
jmp
leave
mov
rcll
fwait
std
sub
shrl
js
adc
mov
adc
lahf
xor
and
push
scas
fchs
repz
dec
mov
sub
aam
xchg
ret
lea
xchg
adc
push
sbb
pop
adc
cmp
js
sub
imul
inc
in
imul
clc
push
add
mov
inc
cmc
adc
sbb
push
dec
ficoml
or
push
push
xor
xor
inc
sbb
jge
mov
fsubrs
sub
ret
daa
loope
aas
sbb
out
sbb
adc
movsb
add
mov
jp
xchg
push
popa
cld
in
or
aam
pop
xor
push
cmp
or
std
dec
movsb
outsl
mov
push
jp
rcll
in
ja
loop
push
mov
dec
loopne
bound
dec
sub
push
mov
mov
movsl
mov
xor
jl
dec
enter
sbb
push
ds
scas
inc
fisubrl
xchg
stos
into
xor
pop
push
xor
das
int3
rolb
pop
dec
pop
ret
cli
mov
mov
aam
icebp
jp
mov
mov
xor
or
jg
push
iret
fcmovne
dec
imul
push
subps
mov
mov
hlt
out
leave
nop
cmp
dec
mov
and
push
or
push
mov
ret
or
mov
jb
pop
inc
fstl
jbe
adc
jge
pop
imul
dec
in
adc
ss
divl
into
mov
cld
push
clc
lds
or
popa
cld
test
imull
xchg
jne
inc
cmpsl
jno
addl
jno
push
inc
ret
mov
mov
push
pop
mov
les
js
andb
jecxz
leave
mov
jb
cmc
xor
xor
test
gs
xor
pop
stos
dec
lods
vpcmpeqb
repz
fucomp
hlt
test
popa
out
sub
xchg
push
rorb
decb
and
popa
loop
xchg
mov
add
dec
xlat
add
rcrb
loop
frstor
scas
ss
jne
bound
xchg
cmc
out
jl
cli
add
jecxz
lcall
test
jl
in
aam
dec
cmp
cwtl
stc
mov
call
bound
inc
insb
jns
dec
push
mov
sbb
stos
add
jg
xorl
ds
mov
sbb
sub
jmp
inc
shlb
pop
pop
cmpsb
into
je
jge
adc
mov
enter
loope
fldenv
and
sub
aad
ja
cmp
adc
jns
pop
sub
inc
jg
sbb
faddl
push
popa
bound
mov
clc
std
xchg
out
stc
fldt
mov
test
inc
sbb
adc
aam
cmp
jbe
jbe
xchg
stc
popl
stos
sbb
in
xorl
es
xchg
pushf
pushf
notb
fstl
popa
add
pop
pop
repz
jecxz
outsb
lods
fisubrl
lahf
sub
jmp
popa
or
aam
mov
mov
and
cmp
incl
cli
shl
cld
inc
fisubrl
call
aaa
mov
inc
movsl
pushf
ljmp
stos
and
lret
cli
into
in
mov
lret
popa
nop
dec
fdivrs
cltd
pop
jb
xchg
mov
movsb
cwtl
xchg
pusha
inc
dec
mov
inc
testb
cmpsb
mov
aam
rclb
jns
cli
xchg
jbe
jle
cmp
push
std
mov
and
mov
in
jecxz
adc
stc
jo
test
add
sbb
out
pop
fdivr
add
insb
xor
lock
inc
jmp
dec
dec
inc
aam
scas
jg
icebp
cmp
jb
mov
add
pop
xlat
or
shrl
push
add
push
mov
cs
jne
ret
in
push
repnz
pushf
fstpl
or
scas
push
mov
xlat
leave
iret
aam
sbb
push
ss
and
scas
dec
aaa
push
add
jmp
enter
jb
orl
aam
mov
or
cmp
fwait
cmp
dec
push
testb
sbb
lcall
icebp
mov
in
lea
int
in
add
test
or
nop
push
fstpl
jecxz
mov
cmp
test
rorb
push
sub
cmpsl
push
mov
pop
aaa
insb
jge
xor
test
data16
xchg
out
daa
jecxz
jae
cmp
jle
add
mov
call
and
pop
lods
mov
cld
dec
shlb
mov
imul
cltd
dec
pop
ffree
xor
sub
and
mov
jmp
ds
iret
popa
test
lahf
adc
add
cltd
mov
adc
sub
je
mov
push
mov
inc
fisubl
xlat
jl
dec
mov
clc
movsl
std
fisubs
mov
das
das
sar
mov
shll
or
fcmovb
lea
das
das
mov
and
sub
iret
cmpsb
pop
rolb
je
fwait
gs
lahf
ret
xor
dec
sbb
or
in
and
ret
mov
mov
inc
js
pop
out
dec
insb
jbe
sahf
sbb
or
inc
add
cmp
stc
cmpsb
gs
dec
adc
dec
das
cltd
ret
sbb
jg
or
xor
out
out
sbb
jg
ljmp
movsl
xlat
in
mov
push
sbb
cmp
push
xlat
ss
nop
lods
mov
data16
test
or
mov
aaa
ss
push
ds
clc
mov
mov
jo
inc
sub
rorl
adc
mov
cmp
inc
inc
mov
jg
push
mov
jno
or
rcrl
push
leave
rcll
xchg
push
push
jns
std
fsts
jl
nop
mov
aas
pop
sub
xor
out
jg
in
gs
ds
daa
mov
aam
testb
bsr
sub
ror
add
nop
repz
xchg
add
push
lods
out
pushf
push
jns
or
mov
lcall
mov
out
loope
mov
ss
das
sarl
or
mov
in
xlat
je
inc
roll
lret
xchg
insl
jne
jp
dec
push
test
cltd
inc
in
inc
push
or
mov
push
jns
scas
ss
push
add
xchg
not
clc
pop
cmpsl
out
movsbl
xchg
lea
jg
aam
cmc
fsts
int3
jle
les
je
repz
jmp
fcoml
xchg
inc
push
dec
je
pop
popa
dec
push
jle
sub
add
repnz
or
aaa
add
mov
xchg
and
outsb
and
push
jno
pushf
inc
add
daa
mov
mov
cltd
stc
mov
mov
jae
aas
inc
lret
shlb
sbb
ds
pop
xchg
ret
aad
xor
cmp
cmp
daa
lahf
movsl
or
mov
arpl
adc
push
push
insb
xchg
sbb
nop
les
dec
mov
push
insb
idivb
mov
mov
cltd
lret
sub
add
or
cs
and
cmp
and
adc
sbb
test
mov
xchg
repnz
jno
xchg
dec
xchg
xchg
pop
pop
and
sbb
js
out
loopne
shlb
xor
mov
pop
inc
inc
loope
fcomps
outsb
mov
mov
in
push
shll
dec
xor
shrl
fsubs
xchg
cmp
rorl
scas
iret
pusha
push
icebp
dec
fwait
dec
jns
stos
lods
mov
fistl
addr16
pop
leave
dec
dec
leave
mov
insl
jg
adcl
mov
jmp
lods
jns
adc
in
test
mov
sahf
loopne
sahf
mov
inc
mov
mov
adc
out
jns
aam
xchg
mov
mov
dec
pop
mov
mov
xor
and
insb
cwtl
cmp
add
mov
mov
cmp
jg
fnstsw
addr16
sbb
add
loope
leave
xor
add
js
cli
dec
dec
ds
outsl
xchg
push
add
sbb
dec
sbb
mov
xchg
xor
lods
xorb
jge
in
inc
xor
gs
jnp
inc
cmp
lcall
mov
sub
cmp
and
push
popf
mov
mov
and
jb
insb
mov
rorb
mov
pop
ja
sbb
push
and
add
xorb
jg
and
or
or
inc
lret
das
sti
inc
mov
push
and
pop
push
cli
pop
push
icebp
inc
mov
or
cld
fs
aad
shl
push
ret
shll
push
jmp
fsubrl
xchg
rclb
or
add
insb
mov
cli
out
mov
or
int
adc
mov
ret
mov
push
scas
jne
sti
add
mov
sar
add
adc
push
xor
std
jns
sbb
test
sarb
movsl
xlat
xlat
xchg
push
xchg
daa
pop
les
lret
jbe
insb
jp
or
cmpsb
lret
nop
pop
gs
cs
cmp
hlt
jl
in
add
fdivl
cmp
aam
push
pop
nop
sbb
data16
in
sbbl
jg
jg
ret
xchg
cmp
mov
push
iret
mov
inc
sub
mov
inc
mov
fidivrs
scas
subb
lds
clc
leave
stos
sub
aam
mov
call
lock
in
imul
mov
rclb
xchg
push
out
adc
add
popa
push
sbb
ja
jo
std
mov
popf
cmpsb
sti
push
mov
mov
xchg
aam
stos
jne
mov
icebp
adc
subl
das
mov
pusha
inc
xchg
popf
jmp
mov
mov
cmp
call
mov
leave
test
push
lock
addr16
loope
add
enter
xor
xor
incl
pusha
hlt
inc
xor
insl
mov
cmp
outsb
sbb
popf
mov
adcb
sbb
das
popl
pop
loop
jge
aad
mov
repnz
mov
rorb
pop
cmc
jle
lods
pop
jp
stc
div
in
adc
repz
inc
dec
inc
testb
dec
bound
loop
setne
push
shll
adc
add
cmp
xchg
ret
cmp
and
sbb
mov
jmp
pop
je
test
or
adc
sbbl
insb
sub
mov
cmc
insb
inc
negl
mov
pop
repnz
sbb
movsb
lods
popa
push
sub
enter
dec
inc
scas
cwtl
adc
mov
dec
je
popf
add
mov
stos
push
aad
mov
sub
test
rcrb
inc
push
pop
jb
push
inc
lret
test
lret
xchg
push
cmp
and
jmp
adc
lcall
pop
jbe
xchg
imul
jecxz
mov
sub
mov
push
push
addb
adc
xchg
xchg
mov
sahf
push
sub
dec
sbb
push
je
fnstsw
cmp
adc
nop
bound
pop
mov
imul
add
add
cmp
cmpsl
scas
push
test
lret
imul
sbb
sub
sub
insb
mov
xchg
and
lret
dec
sub
cmp
sarb
into
lahf
push
enter
xchg
pushf
cmpsb
push
xchg
or
mov
jno
repnz
std
dec
jmp
movsb
das
mov
mov
sti
push
cmp
clc
xor
lea
aad
add
ss
mov
push
test
insl
nop
lods
cwtl
xchg
push
in
popa
imul
mov
or
pop
cwtl
push
add
dec
mov
sarl
pop
icebp
mov
jae
xor
hlt
dec
inc
sub
pop
aas
call
cs
jno
pop
and
test
icebp
in
cmp
nop
cltd
sub
cmp
sahf
cmp
xchg
xor
mov
jp
xlat
sbb
adc
adc
sbb
push
stos
pusha
ljmp
xchg
mov
push
pop
mov
fldt
je
repnz
ds
addr16
popf
scas
xchg
add
pop
mov
call
loope
test
movsb
adcl
cmp
xchg
push
mov
inc
fnsetpm(287
gs
pusha
sub
push
pop
mov
mov
out
push
adcl
dec
cmc
scas
dec
hlt
push
xchg
dec
mov
arpl
jecxz
neg
sub
jl
aad
nop
pop
adc
push
arpl
repz
lods
in
pop
push
jno
xor
into
mov
push
inc
daa
sbb
les
dec
cwtl
ss
fsubr
addr16
icebp
test
mov
mov
lds
mov
lods
fnsave
fisttpll
out
and
jae
and
push
sbb
lods
fcompl
pop
adc
in
push
inc
std
addr16
bound
push
push
shrb
adc
and
mov
loope
gs
mov
inc
mov
lods
sbb
mov
push
adc
fmull
adc
xor
aas
bnd
pop
gs
mov
mov
push
inc
push
add
add
pop
jns
data16
inc
iret
pop
jne
int
into
pop
lds
cmp
sbb
shl
stos
jmp
add
xor
in
pop
and
xchg
and
ficoml
xchg
aaa
mov
cs
xor
jbe
jne
or
andl
and
or
lock
repz
xchg
adc
fimuls
adc
sti
out
inc
mov
lret
dec
mov
add
je
rcll
pop
lcall
jle
js
ljmp
and
inc
sbb
cmpsl
adc
movmskps
loopne
test
cltd
or
jnp
pop
push
incl
mov
lahf
mov
or
xor
rolb
ja
cmp
cmpsb
mov
dec
mov
stos
pop
jo
xor
xchg
mov
ljmp
sbb
sbb
mov
lds
movsl
or
push
sbb
out
push
xchg
cmp
bound
ss
insl
mov
inc
mov
or
addr16
sub
ss
inc
clc
inc
adc
mov
shlb
xchg
or
movb
mov
cmpsl
xchg
pusha
fisubrl
adc
mov
sub
lahf
sti
push
lret
and
sub
aaa
cmpsl
mov
dec
xor
jo
lcall
mov
lds
cmp
test
mov
jno
in
lds
push
std
pop
push
sbb
call
xor
pop
xor
jnp
xlat
add
jge
ljmp
lret
jnp
push
fisubl
inc
adc
aaa
testl
bound
sbb
stos
add
mov
cs
test
pop
popf
and
mov
popa
call
hlt
inc
push
icebp
cltd
xor
xchg
test
rol
aam
mov
xchg
jl
fcmovnb
xchg
xorb
cli
push
mov
iret
inc
rcrl
and
imul
pusha
into
mov
out
rcrl
push
or
cli
movsb
xor
sti
out
bound
pop
gs
imul
ret
jle
sub
popf
dec
ret
dec
loope
mov
dec
mov
hlt
pop
into
cmpsb
jno
push
repnz
pop
cli
fmuls
cltd
mov
push
jbe
lret
jb
pop
and
setb
movsb
negl
mov
fldenv
negb
test
daa
xor
aad
add
sbbl
mov
pop
or
popf
insl
xor
in
push
jbe
out
adc
cmp
push
jl
movsl
in
mov
jnp
add
loopne
leave
jmp
fbld
insb
cli
in
sub
ljmp
cmpsl
nop
sub
jmp
stc
xchg
das
pop
jge
jecxz
sub
jl
xchg
adc
adc
dec
xor
dec
pop
adc
xchg
push
xchg
lds
leave
outsb
jg
es
fisubrl
mov
xchg
dec
imul
insl
icebp
inc
outsb
cmp
les
pop
ljmp
pop
mov
ret
push
mov
adc
mov
push
jmp
mov
mov
sbb
and
fisubs
mov
addl
int
pop
sub
jmp
sahf
addr16
ret
jbe
fisttpl
lods
nop
dec
mov
mov
sbb
adc
jns
out
lods
xor
sbb
adc
dec
lds
pop
repz
sti
dec
repz
pop
pop
sti
jl
or
popa
movsb
push
cwtl
repz
iret
jne
pop
xlat
mov
fildll
std
push
xchg
sub
sub
adc
push
stc
and
adc
or
notb
pop
xorb
fwait
xor
cmp
add
icebp
test
pop
shrb
adc
out
iret
jae
adc
fidivrl
or
push
sti
mov
inc
loop
xor
cmc
ret
cmpsl
xor
cmpsb
sbb
pop
scas
sti
sub
cwtl
or
or
pop
test
loop
xor
iret
mov
cmp
and
clc
and
cmc
mov
adc
xchg
addl
jne
push
leave
addl
dec
test
cmp
je
iret
cmc
sahf
or
dec
stos
lret
sub
cmp
jge
mov
lds
sub
test
subb
cmc
sub
test
out
xor
in
lret
ret
stos
std
fildl
mov
xchg
or
popf
mov
pop
mov
push
sbb
sbb
fs
dec
jns
in
data16
cmpsb
test
mov
mov
stos
outsl
das
stos
jae
pop
jecxz
jbe
xlat
out
push
in
mov
jge
bound
push
xchg
cmp
js
in
mov
scas
lret
test
xchg
dec
dec
pushf
mov
in
gs
or
movsb
add
ja
pop
rclb
inc
xchg
mov
test
popa
xchg
fwait
lock
mov
notb
mov
cld
mov
adc
filds
imul
and
das
mov
mov
and
or
stc
lcall
push
and
jae
sub
sbb
in
cli
pop
and
sbb
mov
dec
fcmovbe
pushf
add
jge
aam
test
ds
jbe
cmp
int
or
scas
ret
imul
dec
mov
xchg
mov
test
dec
imul
pop
out
push
gs
and
daa
dec
adc
push
cmpsl
stos
xor
clc
xchg
cs
sbb
popf
add
add
fs
fstpt
je
popa
nop
inc
testb
push
pop
scas
loop
mov
sub
inc
data16
jns
lahf
sbb
cmp
lahf
or
bound
outsb
inc
imul
mov
lods
into
xor
xchg
pop
sub
xor
xchg
add
xchg
fildll
loopne
loop
mov
push
push
sbb
stos
test
and
repz
les
mov
inc
sti
ss
daa
orb
jle
and
popf
mov
jb
jbe
and
out
int
pop
shlb
fucomp
mov
push
push
popa
dec
dec
lcall
push
addr16
and
mov
push
sbb
jae
test
cmp
xor
enter
xor
inc
into
das
push
jmp
cmpsb
mov
and
nop
sub
add
mov
xchg
xchg
fcompl
sbb
lods
or
hlt
and
imul
inc
fisubrs
pop
jg
loopne
mov
lods
sub
inc
pop
jns
enter
ja
and
jle
fmull
fcoms
jb
jb
xchg
pop
mov
lret
inc
sti
ljmp
mov
sub
scas
lds
add
insl
lea
scas
ss
cwtl
pop
imul
push
out
mov
ss
mov
scas
pop
and
call
jno
jmp
inc
pushl
xor
call
clc
mov
idivb
xchg
mov
stos
cmp
add
jmp
sub
cmp
add
adc
xchg
add
xor
dec
cmovne
cmpsb
lcall
aad
and
pushl
sub
aaa
jmp
add
dec
pop
fidivrs
insl
inc
fsubl
xchg
mov
enter
pusha
cltd
and
decb
push
inc
sbb
pushf
outsl
pop
or
push
sbb
dec
pushf
xchg
enter
and
imul
mov
xor
jnp
inc
pop
jl
cltd
inc
inc
cmp
aam
mov
dec
jbe
pop
in
ror
push
scas
or
ss
stos
dec
xchg
lahf
mov
sub
mov
popf
imul
sub
pop
sub
lea
adc
dec
sbb
enter
sbb
fsubr
fdivrs
or
cwtl
mov
sub
cmp
jno
lahf
mov
pop
lock
sbb
inc
ror
dec
out
cld
fimuls
lret
out
imul
lahf
cwtl
jmp
adc
gs
out
or
rcr
jg
push
cmc
or
pop
fdivrl
cmp
jmp
pusha
ljmp
jbe
push
xor
sahf
test
testl
shl
lret
cmpsl
pushf
and
xor
test
in
movsl
das
or
repnz
lock
adc
and
pop
pop
rcrl
cmp
cs
test
ret
and
xchg
fsubr
das
cmp
cli
add
mov
pop
mov
push
outsl
dec
fwait
xchg
and
mov
jg
push
xorl
cwtl
mov
stos
xor
push
loopne
push
adc
and
cmpsb
out
pop
in
dec
push
fcomp
pop
jp
inc
add
imul
mov
cmp
iret
cld
lret
sub
sahf
jbe
push
stos
inc
sahf
mov
pop
inc
cmp
out
mov
xchg
adc
call
fwait
or
shrl
movzbl
hlt
rolb
dec
rcl
sub
rolb
mov
insl
mov
stos
test
rcrb
insb
call
pop
sbb
jb
in
lods
xchg
outsb
add
icebp
pop
testl
mov
pop
repnz
pop
daa
iret
bnd
inc
sbb
movhps
push
aad
es
fldl
imul
xchg
and
outsl
jmp
xor
stc
mov
les
popf
pop
std
dec
sbb
out
and
lahf
jl
sub
add
out
mov
call
inc
mov
cmp
js
jbe
pop
pop
add
outsb
mov
popf
mov
rcrb
rcrb
pop
xor
shlb
and
xchg
add
mov
jmp
mov
pop
add
pop
dec
aad
sbb
sub
jnp
inc
std
sub
int
cmp
std
loope
adcb
iret
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
sbb
mov
jle
xor
and
xor
in
popf
xlat
in
dec
cmp
xor
dec
inc
pop
jnp
sub
pop
lret
xor
add
loopne
pop
and
cmp
lock
and
and
pop
mov
push
fcmovnu
or
sub
fnstenv
mov
xor
pop
out
and
sub
jecxz
push
mov
movsb
pusha
xchg
lds
test
int3
xor
cld
es
fucomp
and
in
jnp
out
jmp
cmp
insl
and
push
ljmp
jecxz
test
sarl
pop
mov
aad
mov
or
jnp
pop
aas
jnp
pop
cmp
imul
mov
sbb
loope
dec
and
mov
sti
cmp
das
xchg
mov
gs
dec
enter
jmp
mov
sahf
dec
cmpsl
mov
cmp
dec
push
faddl
outsb
jmp
pop
push
aam
aas
loop
add
xchg
test
imul
push
ljmp
adc
push
sbb
lret
mov
ljmp
scas
orl
stc
fcoms
mov
inc
gs
dec
in
mov
outsl
pop
insl
out
fdivr
daa
or
xchg
lock
sub
outsb
dec
push
and
idivl
movsl
iret
inc
bound
cs
xchg
dec
stos
jl
push
in
or
cmp
outsl
jns
dec
mov
cmp
pop
jecxz
push
out
test
mov
add
xchg
pop
dec
xchg
or
fwait
jg
loopne
pop
out
in
dec
dec
cmpsb
icebp
or
int
leave
out
fucomip
jge
lcall
rcrb
loop
hlt
sbb
inc
xchg
lret
push
xor
xchg
and
inc
cmp
testl
mov
pushf
jle
test
and
stos
lret
push
fildll
icebp
push
lock
outsl
pop
or
aad
mov
pop
push
sbb
lods
in
popa
imul
or
js
popa
filds
add
int3
sbb
out
jnp
cwtl
jns
orl
push
xchg
sub
pop
fwait
pop
imul
sub
ficoms
cli
sbb
add
shl
imul
rorb
lods
popa
ja
jecxz
and
xchg
push
push
loopne
pop
movsb
bound
clc
fs
outsb
mov
adcl
dec
arpl
je
xlat
adc
xchg
fwait
ds
mov
and
lock
sti
jo,pn
dec
inc
pop
adcb
mov
mov
xchg
cmc
fstpl
mov
arpl
mov
pop
imul
push
outsb
mov
adc
icebp
inc
lods
imul
gs
or
in
incb
or
imul
pop
inc
fs
popa
aam
call
clc
cltd
in
ds
call
xor
mov
mov
mov
into
xchg
pop
xchg
ret
lret
insl
enter
pop
test
lock
ss
jg
inc
lret
fcom
into
test
das
xor
xor
sahf
stos
cmp
cli
add
adc
aam
mov
pop
imul
in
push
fsubr
dec
and
sub
jl
dec
outsl
int3
sub
aad
sub
mov
add
push
imul
push
cmp
push
insb
fwait
adcb
rcll
xor
jle
push
shl
mov
sub
out
popl
jo
addr16
pop
loopne
push
in
inc
test
pause
arpl
jno
xorl
out
pop
inc
testl
mov
adc
jmp
fdivrl
in
pop
hlt
imul
arpl
dec
neg
loop
pop
xor
cmpsb
popa
cld
dec
jle
test
jns
and
jge
cmpsb
std
fisubrl
dec
aaa
sarb
int3
and
ret
add
sub
sahf
in
cmovp
ljmp
mov
pop
pop
out
mov
sub
fistps
dec
and
cmp
in
fnstsw
lea
in
jno
rcll
inc
and
mov
iret
xor
scas
enter
mov
mov
cmp
pop
dec
stc
hlt
out
inc
xchg
lret
int
and
add
repnz
cwtl
leave
add
pop
jp
and
xor
sub
dec
test
andl
sub
sahf
mov
addr16
ja
icebp
inc
std
std
sub
test
fistpll
into
mov
pop
aad
out
or
iret
push
cld
pop
divl
addr16
in
movsl
cmpsb
add
and
push
leave
es
sti
pop
push
pop
int3
std
pop
and
mov
push
negb
movsb
cmp
outsb
push
stc
sbbb
mov
jle
cmp
push
sub
mov
sub
ret
push
fwait
loop
pop
mov
mov
push
rcrl
inc
popa
sbb
scas
pop
movsl
ja
imul
add
test
mov
in
inc
cmpsb
scas
lds
push
rcrl
push
mov
mov
pop
lret
jae
mov
push
xchg
sbb
mov
jle
orb
and
outsb
and
pop
mov
push
jecxz
sbbb
cmpsl
push
jle
movaps
fmul
aas
in
inc
dec
bound
shr
cmpb
lret
jge
dec
sbb
cmp
sbb
xor
pop
sbb
sbb
repz
adc
mov
jns
pop
fdivrp
sub
cmp
in
inc
hlt
cld
sub
loope,pn
jg
adc
out
pop
pop
pop
loopne
daa
jbe
mov
push
or
cmp
inc
xchg
add
or
cltd
inc
push
loopne
add
lret
xchg
or
iret
mov
mov
scas
sub
jo
jg
push
ss
stc
or
aas
test
das
lahf
aam
ret
mov
stos
jbe
mov
pop
mov
cmp
mov
pushf
push
cmp
in
jno
movsl
mov
jo
sbb
jg
mov
fwait
pop
xor
jbe
fsts
int3
mov
js
mov
loopne
push
pop
xor
pop
lahf
jg
mov
xchg
aam
xchg
negb
andb
cld
sub
xor
popf
xchg
or
or
mov
cmc
lock
sub
xor
adc
or
jb
es
cmp
mov
mov
pop
subb
je
push
cli
in
jno
sarb
adc
inc
bound
fincstp
rol
orl
push
push
push
push
and
movsb
icebp
push
and
push
test
adc
punpckhbw
pusha
cmp
or
adc
lods
fwait
pop
icebp
xor
sbb
insl
shl
mov
movsl
dec
stc
std
sbb
xor
out
mov
push
rorb
adc
mov
adcl
rorb
test
push
cmp
mov
les
mov
jg
push
movsb
notl
popf
cld
into
inc
jmp
mov
loopne
dec
sysret
inc
xor
sbb
pop
pop
shrl
mov
lods
es
rorl
jbe
push
sbb
pop
js
rorl
andb
imul
cld
leave
push
xchg
notl
xchg
push
ror
gs
push
sahf
adc
jge
push
test
lock
pop
cld
clc
in
xchg
scas
jns
jle
popf
xorb
mov
je
pop
fstl
jbe
or
clc
mov
and
gs
xor
inc
mov
fmull
push
and
xchg
push
nop
test
clc
mov
jb
mov
loop
push
jg
sub
fwait
imul
dec
dec
xchg
adc
adc
push
mov
movsb
add
lds
arpl
add
movsb
mov
pushf
jb
test
and
outsb
xor
imul
or
or
dec
sub
mov
clc
jns
mov
cld
outsb
fdivs
mov
mov
mov
dec
loop
in
inc
and
xchg
jmp
insl
cmp
outsb
aad
xchg
imul
out
sbbb
test
rcr
jae
jge
jne
scas
adc
inc
or
jns
xchg
enter
aam
into
repnz
or
int3
fimull
dec
pusha
fsubrs
push
push
inc
mov
faddl
aad
lahf
xor
sbb
jmp
pop
inc
fists
inc
js
nop
in
test
inc
sbb
scas
shl
stos
movsb
pop
out
popf
cmp
pop
mov
movsl
xchg
jbe
dec
imul
arpl
push
int3
mov
filds
lock
cmp
mov
sub
pop
jge
or
xchg
xor
stc
adc
adc
out
lret
sbb
lds
out
mov
jno
jbe
aad
mov
mov
popa
in
dec
call
or
push
jl
jge
or
xor
dec
jmp
add
xchg
lahf
aas
test
outsl
test
shlb
clc
cmp
popl
cmpsb
mov
je
scas
aas
cmp
sti
loope
fisttpll
cmp
inc
sub
push
je
dec
sub
mov
push
inc
rcrl
xlat
sub
mov
loope
sub
cmc
out
and
test
je
cwtl
int3
test
push
jle
jp
jb
mov
xor
js
and
pop
or
jo
iret
dec
inc
pop
out
sbbl
insl
or
daa
mov
lret
adc
int
sub
add
popa
sahf
xorb
mov
bound
rep
es
shll
fcompl
push
push
pop
fisttps
divl
mov
daa
pushf
stc
cmpb
jb
iret
xor
mov
je
inc
and
stc
or
ds
rcl
cmp
mov
mov
jg
lods
rcll
sub
pop
push
push
xchg
rcl
sub
pop
enter
pop
lahf
leave
test
lret
add
into
ljmp
xchg
mov
lods
mov
mov
nop
sbb
jo
mov
dec
cmpsl
add
lcall
cmpsb
jg
pop
movsb
cmpsb
dec
mov
dec
add
pusha
inc
jge
dec
adc
imul
out
cmp
inc
jbe
xor
sbb
je
mov
mov
sbb
jl
lods
or
int3
pop
loopne
sub
pop
adcb
xor
lock
jecxz
out
cld
mov
adcl
int3
sti
dec
insb
mov
ljmp
xor
ljmp
or
xor
push
lret
dec
sbbb
call
int
jecxz
inc
dec
call
jne
pushf
pop
movsb
push
scas
dec
aaa
orl
dec
pop
leave
pop
xor
rcr
adc
xchg
dec
push
dec
mov
xlat
mov
cmp
daa
imul
loope
or
mov
enter
popa
inc
stc
shrl
sub
sbb
mov
mov
enter
or
aad
lock
cmpsl
and
dec
mov
rorl
lods
pushf
shlb
pop
push
add
bound
xchg
jnp
adc
xchg
imul
mov
pop
stos
xchg
xor
jb
repz
dec
mov
mov
repz
xor
rol
fistpll
inc
cli
xor
mov
das
inc
mov
sub
cs
mov
loopne
dec
push
add
sub
arpl
imul
popf
ds
sbb
cmp
xchg
ds
or
in
negl
frstor
loop
movsl
cld
loopne
int
addr16
pop
push
jl
or
xor
cmpsb
inc
popf
bound
xor
dec
popa
cmc
movsb
ret
ret
cmp
push
fmulp
lods
inc
push
cmc
dec
insb
pop
mov
xchg
pop
fnstsw
stos
or
data16
repnz
adc
iret
push
andb
pop
jae
nop
test
fstpl
mov
lahf
push
and
fdivrs
jnp
dec
push
movsb
or
std
mov
loope
out
je
icebp
mov
notl
cwtl
movl
out
lea
gs
repz
call
das
sub
and
xorl
hlt
jp
pop
push
jp
pop
mov
test
jb
repnz
push
testb
ds
push
fwait
jae
in
xchg
mov
adc
js
xchg
cmpsl
push
stc
jge
in
pop
mov
stos
movsb
mov
or
insb
cmc
lds
sahf
je
inc
push
popa
rol
xchg
mov
inc
mov
mov
xchg
and
js
dec
lock
cmc
popa
push
and
leave
sub
mov
lret
cmp
sub
and
das
mov
cmp
sti
lods
aas
outsl
mov
or
out
pusha
rcr
jg
test
imul
sub
dec
ret
pop
inc
adc
stos
int
jp
adc
fucomp
pop
mov
aas
dec
lods
sbb
test
out
bound
leave
pop
inc
or
test
mov
jl
pop
pop
jmp
mov
add
loope
cmp
sub
inc
fmulp
mov
push
mov
sub
mov
and
arpl
and
cwtl
popa
and
imul
sbb
mov
cmpl
ficoms
test
xchg
xor
and
loopne
xlat
cmp
jl
addl
aas
or
lcall
fwait
in
push
divb
mov
inc
iret
pop
ljmp
shll
in
popa
out
cmpsl
aad
adc
into
stos
push
mov
insb
dec
sub
fisubrs
roll
data16
orb
lods
repz
dec
push
inc
ret
xor
pop
outsb
daa
cmp
sub
test
dec
pop
lds
scas
into
mov
xchg
cmp
lds
pop
lret
adc
sub
and
cmp
sbb
jle
xor
jmp
sub
xor
rcr
sbb
pop
ds
push
mov
mov
mov
push
lcall
mov
in
rclb
and
push
test
lret
or
cs
mov
or
cmp
or
aad
jecxz
popf
loop
cltd
arpl
pop
movsb
out
mov
mov
in
jb
push
fs
xchg
mov
cmp
xchg
cltd
in
hlt
sahf
add
sbb
jg
aaa
test
push
lods
inc
test
and
fsub
dec
pop
jns
adc
pop
cmp
xor
xchg
addl
loopne
call
repnz
jp
call
call
or
sbb
and
jne
fistpl
mov
jle
fisubl
mov
sub
and
jmp
sub
lahf
insl
test
or
mov
cmp
fwait
into
lret
dec
in
inc
not
fstpt
mov
or
fiaddl
pop
test
mov
lret
jne
insb
mov
jg
cmp
out
mov
sbb
add
rolb
mov
xchg
mov
inc
bound
mov
lret
mov
stc
ss
dec
mov
sub
jns
cltd
xor
mov
out
adc
in
lods
dec
mov
int
xor
cli
scas
or
xlat
test
orl
fs
cmpsl
cmp
and
push
out
inc
test
or
xor
dec
cld
test
xor
pop
stc
fs
sub
imul
hlt
fists
pop
push
mov
sbb
sub
mov
and
fwait
cmpsl
pop
jge
ret
negb
je
fcompl
test
cmc
mov
lcall
jmp
mov
xchg
cmp
and
lret
jl
pop
ja
sub
pusha
sub
add
jmp
pushf
stos
xor
call
pushf
pop
mov
push
in
sub
xchg
inc
mov
push
scas
rcrb
mov
popf
mov
stos
sbb
sbb
pop
gs
xor
push
mov
fisttpl
and
insb
fiaddl
push
int
mov
pop
lahf
dec
scas
xor
cmp
mov
jae
jo
push
or
ret
jbe
negl
add
rcrl
aaa
popa
lock
pop
test
mov
sti
loop
popa
and
push
js
std
adc
and
sub
sbb
mov
xchg
inc
testb
aam
arpl
pop
and
mov
scas
cmp
pop
adc
xchg
lock
mov
icebp
pusha
sbb
into
mov
cwtl
mov
mov
aam
cmp
sti
jmp
rorb
into
cs
dec
add
or
imull
mov
mov
lea
addl
pop
movsl
xchg
outsb
mov
mov
movsl
adcl
int3
cmp
mov
or
and
int
xor
mov
mov
push
repz
pop
pop
mov
sbb
cmp
cmpsb
xor
sbb
add
in
hlt
and
ret
mov
arpl
call
in
int
out
cwtl
jle
cli
shrb
xchg
in
mov
xlat
sarl
push
divl
popa
xor
bound
push
xor
es
mov
lods
call
mov
movsl
shr
lods
jns
out
push
add
jns
insb
and
in
mov
ljmp
rol
fildll
outsl
cltd
mov
xchg
sbb
pop
outsb
sbb
cltd
jne,pt
pop
push
or
scas
iret
cli
push
push
js
pop
dec
or
pop
cmp
sbb
inc
push
lcall
aaa
sbb
sub
out
xchg
add
lcall
push
jbe
pop
sbb
mov
lahf
fimull
ret
mov
fstpt
bound
jge
mov
push
xchg
push
cmpsb
fs
iret
pop
and
adc
and
mov
loop
fcoml
and
jne
test
ret
add
enter
shll
movsl
test
popa
pop
push
out
dec
orl
cs
mov
sub
jns
jns
aas
sbb
das
mov
or
stc
and
das
out
and
int3
scas
dec
imull
inc
call
ja
outsb
mov
dec
aad
jbe
mov
andl
xor
pop
dec
xor
fidivrs
std
cmp
or
aas
push
cmp
xchg
adc
jb
fstpt
xchg
pop
outsb
ret
lret
mov
fistps
jnp
or
test
push
mov
insl
jbe
xchg
or
sub
clc
mov
call
loope
imul
cltd
and
nop
mov
enter
les
sub
or
ljmp
pop
sahf
imul
xchg
cmp
push
sti
into
xor
in
aaa
out
loope
push
adc
aaa
xor
cmpsl
lcall
mov
int3
xchg
push
notl
and
jae
sub
bound
push
lods
xchg
mov
xor
and
pop
loopne
add
sub
mov
pop
mov
cltd
push
sbbb
sub
icebp
lods
pusha
out
sub
ret
or
xchg
stos
push
mov
in
jno
inc
imul
adc
mov
sbb
sub
xor
xchg
dec
lds
cmp
pop
mov
bound
xchg
lods
cwtl
das
or
and
cs
stos
lcall
lods
test
xchg
and
dec
lods
test
push
push
sub
lcall
scas
xchg
add
ss
lret
ror
inc
add
leave
cs
clc
mov
fldt
divb
enter
gs
sbb
jne
test
aad
es
lret
jle
mov
rolb
push
idiv
mov
and
mov
mov
mov
xor
pop
in
imul
adc
push
imull
and
ficomps
loop
test
stos
loopne
popf
fldl
sbb
jne
inc
add
jae
xchg
dec
lock
mov
sahf
jb
and
jno
fmuls
push
sub
or
push
cmp
icebp
enter
cltd
dec
lahf
imul
incb
pop
push
in
insb
sbb
pop
insb
cmc
inc
in
mov
mov
test
stos
mov
cwtl
into
mov
and
push
fstpl
mov
decb
dec
ljmp
adc
jbe
jl
rolb
xor
popf
imul
add
add
cmc
cmp
mov
jecxz
enter
mov
pop
xor
and
mov
lods
pop
in
dec
xlat
fs
jecxz
imul
dec
fwait
notl
and
lods
shll
loope
out
jne
push
xor
jb
gs
arpl
jne
dec
shll
inc
out
sub
sarb
leave
dec
stc
testb
icebp
repz
jns
addr16
icebp
bound
mov
cld
fidivs
lods
shlb
cmp
pop
fistps
mov
lods
imul
jl
enter
test
pusha
dec
cltd
jo
jmp
lods
loop
std
add
stos
outsb
orb
aaa
inc
fdivl
inc
rolb
xchg
xor
rclb
mov
and
sbb
out
pop
mov
cmp
sub
pop
pop
pop
add
call
sti
inc
inc
clc
sub
rol
mov
or
negb
sbb
out
push
btc
dec
enter
mov
jmp
cltd
lods
in
adc
mov
cmc
ljmp
xchg
loope
or
iret
mov
inc
xchg
pushf
jno
mov
stos
std
stos
and
lret
shrl
nop
xorb
into
shlb
cld
pop
bound
adc
mov
out
icebp
fs
iret
iret
lods
adc
in
mov
jnp
ds
mov
sub
sub
outsl
jb
cltd
or
aas
icebp
jp
out
mov
shr
fcmovu
or
lcall
pop
xchg
adc
divl
shrl
pop
and
push
sbb
xacquire
shlb
cmc
sbb
sbbl
dec
ljmp
scas
sbb
mov
int3
xchg
in
pusha
jne
and
neg
mov
cmp
pusha
xchg
repz
stc
cmp
push
pop
ss
pushf
dec
mov
iret
ja
mov
adc
mulb
loopne
insl
xchg
and
adc
inc
inc
shlb
jg
iret
cwtl
jnp
sahf
mov
std
jle
or
sub
mov
jle
sbb
jmp
stos
test
pop
push
shrb
cmc
arpl
and
mov
push
and
je
add
js
orl
sti
sub
cmc
aas
and
and
popf
xchg
xchg
sbb
inc
inc
scas
cmp
std
xor
mov
ljmp
popf
lahf
jns
mov
in
mov
nop
addl
jae
mov
lret
inc
mov
sti
fisttpl
out
xchg
imul
test
adc
pop
sbb
jno
pop
inc
adc
orb
es
fadds
das
add
lret
scas
rcrb
xchg
mov
inc
mov
cmp
cwtl
or
jbe
inc
repnz
jecxz
jae
mov
out
mov
push
repz
cld
ljmp
fildll
and
xchg
xor
and
dec
in
sbb
dec
fisubl
cwtl
or
mov
mov
cmpsb
fcomps
sarl
sbb
ror
loope
jne
cli
dec
push
push
stos
popa
lds
enter
hlt
dec
int3
jp
icebp
lods
jge
test
inc
test
mov
arpl
xchg
sbb
push
test
mov
cmpl
outsb
loop
in
lcall
jmp
faddl
lock
rorb
fnstcw
testl
jl
xchg
js
ljmp
sbb
xchg
cmp
xor
add
shufps
mov
xchg
xor
cmc
lods
into
mov
xchg
imulw
adc
mov
sub
aas
stos
clc
test
mov
mov
sub
in
push
mov
mov
adc
mov
adc
movsb
push
icebp
rcl
cmp
xor
add
cmp
daa
lea
push
icebp
loop
cmp
adc
jbe
repnz
xchg
xor
push
pop
mov
out
pop
fisubrl
bound
jo
pop
das
or
mov
fadd
adc
std
cmpsb
outsb
movsl
add
mov
clc
jmp
ljmp
mov
outsl
cmpsb
push
jnp
push
mov
popf
mov
cmc
addr16
insl
push
je
mov
das
pop
xchg
jl
enter
clc
aam
push
sub
push
and
imul
xchg
popf
add
add
popa
les
and
int
fwait
into
push
sahf
push
stc
rcrl
dec
mov
xlat
ja
fsub
addl
add
mov
push
push
lahf
movsl
xchg
lret
fistps
sbb
fisubl
fwait
js
ret
add
int
fsub
add
mov
lahf
arpl
cmpsl
add
and
sbb
xchg
sti
stos
repnz
or
push
fidivl
out
stc
dec
mov
dec
ljmp
inc
in
mov
push
push
jbe
es
adc
out
jns
mov
jne
lret
jno
mov
xor
sbb
adc
xchg
push
cmp
xor
mov
jnp
xor
or
call
sti
inc
aam
pop
out
inc
jmp
xchg
add
cmpsl
sti
divb
outsb
inc
inc
ljmp
out
pop
fs
xchg
and
mov
cld
adc
xor
dec
inc
inc
testb
das
mov
mov
dec
repz
lods
lret
insb
push
and
cltd
jno
mov
mov
outsb
aam
add
pop
sbb
and
lcall
cmp
cld
sbb
movsb
dec
dec
and
stc
rcrl
lods
int3
push
leave
xor
fildll
test
inc
xor
pop
out
cmpsl
iret
push
enter
inc
hlt
leave
and
adc
mov
or
test
and
jno
outsb
cltd
or
aaa
xor
aaa
pusha
mov
sub
mov
mov
mov
add
dec
out
pop
lret
mov
ss
sub
and
loopne
and
clc
add
lea
push
adc
stc
jge
mov
or
lcall
push
cmc
jnp
fnstcw
rcrl
scas
xchg
xor
xor
pop
jo
bound
pop
sbb
rcl
fwait
xchg
and
ja
pop
add
or
fdivrp
sub
fmull
aam
cmpsb
mov
shll
jmp
and
jge
cmp
add
stc
jmp
lods
gs
sub
jp
ljmp
les
xchg
and
mov
or
dec
inc
out
lods
inc
and
dec
mov
jl
pop
pop
add
xchg
jo
lret
test
lds
adc
push
stos
in
shl
mov
ja
in
fneni(8087
pop
call
cmp
repnz
ja
mov
jns
cmp
fsub
movb
xchg
movsb
cmp
dec
inc
add
push
test
mov
jb
mov
loopne
in
xor
mov
inc
repz
sub
out
pop
mov
cmp
push
xor
in
enter
or
stc
div
out
add
mov
add
mov
pop
mov
jnp
push
lods
lods
stc
inc
movsb
lret
and
dec
popf
jo
jns
shrl
outsl
das
pop
push
rorl
xor
pop
icebp
sub
push
fnsave
dec
test
xor
jbe
jmp
pushf
js
inc
loopne
in
mov
fnsave
push
dec
ds
cmp
inc
or
arpl
enter
pop
jae,pn
pushf
mov
iret
sub
in
cmp
leave
in
inc
cmc
xchg
and
mov
sub
xor
hlt
mov
xlat
inc
mov
loop
jne
mov
outsl
inc
jecxz
mov
xchg
out
int
and
sbb
and
mov
mov
mov
outsl
or
fdivs
test
add
sti
icebp
sbb
sbb
lahf
orl
mov
ret
xor
fsub
push
mov
nop
sbb
movsl
lcall
enter
sbb
sub
cmp
rorb
inc
enter
xor
dec
jp
jne
arpl
in
adc
out
jnp
mov
pushf
sarl
ds
jle
mov
iret
push
dec
popa
lock
dec
xchg
pop
sub
lock
push
push
xchg
add
mov
adc
rcl
xor
jo
push
rorb
cwtl
out
dec
mov
mov
and
loope
cli
sub
fsubrl
cmp
and
cwtl
lret
scas
fidivrs
mov
mov
inc
push
add
lods
daa
cmp
lods
xchg
imul
test
jbe
jbe
mov
add
push
mov
idivl
sbb
push
jne
adc
mov
jb
jmp
ret
jl
xchg
ss
mov
lret
mov
or
mov
lods
scas
popa
and
jmp
dec
xor
and
pop
psubw
ret
loope
xorb
adc
mov
pop
xor
cmp
xchg
cmp
and
jno
jl
push
test
mov
movsl
pop
pop
jp
mov
call
cmp
pop
push
ljmp
dec
jle
movsb
lret
dec
mov
jno
mov
pop
push
pushf
loopne
rorb
cmpsb
jno
pop
hlt
and
sbb
stos
jne
lods
mov
push
sahf
ret
or
add
cltd
jo
or
lock
stos
into
int3
in
ljmp
fstpl
popf
shl
and
stos
xlat
pop
lods
and
push
push
outsb
mov
insb
cld
ret
sbb
jno
leave
push
fisubrl
in
out
shl
push
mov
push
cmp
adcl
loopne
push
movsb
dec
dec
mov
addr16
dec
stos
sti
rolb
je
inc
testb
aaa
dec
aam
push
int3
scas
lret
rcrb
in
test
lret
cs
rorl
out
jbe
call
lret
jg
or
stc
ja
sub
repz
fcoml
std
fldl
ss
jno
mov
andl
movsl
dec
dec
dec
push
fstps
imul
lea
mov
lds
jnp
test
scas
push
aad
ret
mov
cmp
and
pop
jl
leave
mov
pop
clc
jno
push
subl
test
sub
mov
pop
outsl
loope
pop
push
icebp
or
mov
std
test
xor
fs
jae
and
sub
dec
cwtl
jnp
dec
bound
mov
jmp
das
pop
mov
and
loope
pusha
popf
mov
aaa
gs
dec
inc
sbb
inc
sbb
movl
test
push
mov
cmpsl
xchg
mov
arpl
pop
test
out
int
pop
popf
cwtl
cmp
xor
movsb
fisubl
xchg
rclb
insl
ja
xorb
bound
xchg
push
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
test
push
push
addl
icebp
lods
mov
pop
loopne
mov
icebp
repz
or
inc
rorb
mov
fimull
xchg
fdivrs
add
pop
xor
xchg
or
rorb
imulb
pop
sub
add
movsb
mov
inc
and
lret
jo
in
orb
mov
pop
icebp
notb
add
xorb
sub
mov
scas
aam
rcrb
bound
mov
jl
fdiv
or
lret
fists
inc
leave
push
and
sbb
lock
push
das
outsl
fs
popa
into
pop
es
lock
fnstcw
jmp
cmc
mov
sbb
cmp
xor
sahf
imul
loope
jns
pop
mov
jmp
pop
outsl
lcall
loope
lret
ret
scas
jbe
xor
fs
jno
aas
or
in
sub
in
lds
movsb
mov
cli
mov
aaa
out
jno
loopne
mov
inc
es
fwait
jmp
out
jne
insl
in
data16
sbb
out
dec
adc
lds
or
push
dec
sbb
xor
xchg
xlat
pop
mov
sub
enter
cs
mov
cmp
cmp
mov
lods
jmp
push
xchg
dec
es
mov
adc
xor
xor
nop
loope
lahf
adcl
mov
pop
or
nop
jecxz
push
pop
pop
sub
xchg
incb
divl
xchg
dec
xchg
and
gs
push
mov
leave
in
dec
leave
pop
xchg
bound
orl
push
jl
mov
inc
orb
push
sbb
push
in
mov
insl
and
jp
jbe
imul
dec
ja
mov
in
out
aas
mov
cld
push
stos
les
insl
js
addb
jno
mov
add
popa
adc
dec
push
xor
nop
pop
icebp
jo
ds
les
loop
outsb
mov
mov
rcrb
mov
iret
cbtw
adc
push
rcl
xor
sbb
das
pop
fnstenv
rorl
enter
movntq
fstl
call
out
and
stos
or
jl
mov
xchg
out
jge
or
sbb
lahf
adcb
scas
scas
jae
mov
inc
or
xchg
jle
push
cmpsl
inc
xchg
mov
xorb
cwtl
fwait
jnp
lret
mov
cs
cmp
push
or
aaa
inc
out
jae
or
sar
sti
movsl
js
aad
imul
f2xm1
or
pop
jge
push
int3
aad
and
jg
jl
lock
aam
sbb
xor
test
fcompl
add
adc
aam
test
imull
pop
movsb
loopne
rcrl
fdiv
test
filds
lahf
movb
adc
popf
adc
fcoml
sbb
adc
push
aam
xchg
mov
loope
pushf
dec
xchg
addl
aas
lret
sub
jb
lret
xchg
jl
pop
shrl
jl
sub
inc
incl
adc
adc
mov
cmc
popf
add
adc
das
sahf
pop
fwait
push
ficompl
xor
int
xchg
mov
xor
arpl
or
popf
out
jle
or
rcl
out
dec
mov
lret
adc
ror
daa
dec
lret
iret
cmc
sbb
fidivl
ficoms
mov
loopne
mov
push
pop
sub
xchg
test
adc
into
loope
jle
outsb
sub
scas
ljmp
cwtl
mov
mov
inc
std
adc
pop
insl
mov
lret
or
sbbl
ljmp
mov
ja
data16
popa
psubd
xor
cmpsl
les
mov
out
adcb
out
sub
cmp
jae
pop
lds
and
push
fisttpll
icebp
faddl
sbb
mov
cwtl
mov
pop
jmp
fildll
lcall
fcmove
sub
sbb
aad
add
push
pop
loop
mov
imul
sahf
push
push
xchg
cmp
sub
ss
rcrb
mov
mov
cmp
mov
nop
push
jno
mov
fsubrs
loop
js
popf
mov
adc
fmull
mov
sbb
call
or
xchg
int3
push
pop
stos
push
into
fs
pushf
xor
inc
xchg
lock
mov
pop
ror
fadds
loopne
push
inc
out
dec
fistpll
jne
leave
sub
xor
mov
fistpl
pop
aam
add
dec
icebp
pop
cmc
call
jmp
fildl
jae
and
icebp
adc
lock
rorl
shrb
push
cmp
xorb
jnp
scas
shll
mov
push
xor
and
pop
dec
movl
add
sahf
fcompl
imul
pop
pop
cmpsl
inc
fistpl
mov
mov
bound
negl
push
repnz
lcall
test
mov
jb
pop
sub
test
jo
imul
add
scas
jnp
popl
cmp
pop
clc
sub
xor
jb
fidivs
stos
add
push
mov
mov
leave
aaa
insl
sbb
filds
addl
bound
push
nop
iret
bound
imul
sbb
xor
mov
int3
or
xchg
add
jge
clc
xor
insl
push
in
mov
outsl
imul
xchg
mov
daa
mov
fmulp
xor
push
cld
pop
addr16
cmp
push
xor
jns
xorb
fstpt
mov
add
jnp
adcb
scas
clc
lea
insb
fisttps
mov
sti
in
and
xor
sahf
std
in
sub
fs
popa
xor
insl
or
fbld
or
cs
mov
pop
add
fldenv
fcmovb
xor
adc
repz
adc
andl
mov
popf
xlat
dec
jo
jecxz
mov
dec
movsb
addb
stc
sarb
je
adc
sarb
cs
aam
xor
imul
mov
sub
mov
mov
jl
push
add
cs
dec
add
dec
rorl
insl
test
pop
sub
pop
add
rcll
add
into
jno
lock
cmp
pop
xchg
inc
jge
or
addb
jge
pop
inc
movsl
ror
loope
test
push
jo
test
xor
ds
in
pop
in
push
lret
cmp
push
cmpsl
shl
pop
sahf
xchg
push
mov
or
inc
ljmp
fldenv
aam
lods
cmpsl
jne
and
cmp
and
inc
cltd
lods
lret
and
movb
inc
inc
ljmp
mov
pop
popa
cmpsl
sub
mov
pop
lods
dec
imul
mov
shrl
inc
mov
gs
cmpsl
fmuls
pop
xchg
fnstenv
mov
xor
lds
jg
ds
pop
jno
test
orl
fs
icebp
fisubl
call
push
cmpb
push
movsb
add
ret
js
dec
jle
adc
test
imul
aad
add
neg
jo
test
fwait
clc
lcall
data16
shrl
inc
xchg
mov
repz
push
adc
addr16
sub
pop
out
jnp
cmpsb
pop
aas
scas
mov
cmp
sub
mov
test
sub
notb
outsb
stc
adc
inc
xchg
shll
mov
mov
call
pop
aam
sti
jle
lcall
dec
sub
imul
lret
xchg
icebp
in
jo
xor
fisubrs
out
lea
imul
nop
in
and
movb
dec
in
xor
ret
adc
int
jns
nop
mov
fs
insb
sub
or
out
test
pushf
test
test
push
xor
mov
out
add
inc
and
or
mov
mov
cmpsb
ficomps
outsl
adcb
std
mov
sbb
push
fcomps
xchg
out
dec
jb
and
pushf
popa
add
shlb
sahf
jns
insb
mov
push
or
or
sub
sbb
dec
pop
repz
daa
shll
je
push
pop
sub
insb
dec
fidivs
mov
scas
roll
mov
je
xor
nop
xchg
jmp
rclb
scas
ds
push
pop
jns
lcall
inc
jnp
mov
dec
movsb
leave
sahf
cmp
pop
inc
sub
push
xor
out
sbb
addb
jge
push
cmp
xor
jp
or
push
pop
push
fwait
cmp
in
xor
push
pop
fstl
in
pop
mov
cmpsb
mov
and
out
stc
and
mov
fs
push
mov
gs
or
out
stc
adc
add
jge
and
fcoms
repz
lds
or
mov
push
ja
movsl
es
push
movl
call
mov
sub
scas
dec
mov
movsb
sbb
or
cmovae
mov
jecxz
orl
add
or
mov
cs
rep
cmpsb
aad
fmul
jge
ds
adc
lcall
xor
xor
cld
push
dec
mov
mov
mov
add
fcmovbe
fdiv
lea
inc
jns
sbb
rcr
lret
inc
push
and
pop
fsubs
sarb
push
gs
or
fstpt
arpl
rclb
lret
mov
in
add
fbstp
xchg
lcall
mov
mov
mov
stos
scas
addr16
mov
xchg
sbb
sub
sbb
scas
dec
adc
or
push
sbb
decl
adc
and
test
ljmp
sbb
mov
mov
stos
sub
call
je
pop
test
xlat
push
pop
mov
xchg
jae
mov
loope
push
xchg
dec
rdtsc
std
mov
movsb
sbb
imul
xchg
std
sub
not
xchg
jno,pt
mov
or
sbb
jge
outsl
cmovne
push
xchg
push
mov
cmp
mov
mov
fisubs
shlb
mov
mov
ror
mov
call
cli
test
xor
sub
xor
repnz
test
sbbb
int
sbb
cmp
inc
ret
sbb
xchg
pop
pushf
jne
stos
jmp
or
jne
incb
inc
sarb
dec
sub
stos
jno
mov
ret
mov
fdivr
notl
sbb
push
insb
mov
push
lcall
mov
hlt
sub
sbb
or
sub
cmp
xchg
pop
sbb
insb
pop
subl
cmpsb
or
and
push
movsb
insb
adc
or
push
sub
inc
mov
icebp
jge
insb
mov
and
xchg
dec
cmp
loop
dec
cmp
stc
add
fistl
repnz
nop
push
fwait
shlb
push
cmp
adc
out
mov
jmp
pop
mov
fnsave
dec
frstor
jle,pn
xchg
addb
mov
xor
and
push
clc
or
push
mov
xlat
add
mov
mov
jns
add
dec
pop
enter
push
aaa
adc
pop
stos
mov
cmpsl
add
ja
mov
mov
cwtl
mov
xor
stos
cltd
aam
cmp
adc
jmp
dec
cwtl
ds
mov
sahf
scas
xchg
push
jl
in
xlat
js
cmpb
sti
mov
dec
sub
fwait
adc
test
jo
lret
divl
outsl
xchg
and
sub
scas
fdiv
addr16
sub
inc
icebp
jbe
xor
fdivrs
or
es
loop
test
lret
ret
pop
lods
pop
nop
push
insl
xchg
mov
push
xor
sbb
cmc
pushf
fildl
cmp
cmp
and
sub
aad
js
mov
adc
scas
push
xlat
or
iret
jo
sbb
je
adc
daa
jns
scas
inc
gs
dec
test
into
xchg
call
loopne
lret
mov
shll
outsb
outsb
xchg
insl
xchg
aaa
push
test
xor
and
dec
xchg
cmp
pop
and
xchg
out
js
inc
mov
sbb
or
xchg
out
add
mov
iret
fsubrp
mov
repz
push
jno
fs
mov
mov
cmp
jo
dec
fldl
cmpsl
into
sbb
add
std
adc
sub
cltd
dec
dec
in
pop
lock
pop
xor
addb
push
sbb
pop
out
idiv
dec
push
xchg
rcrb
mov
scas
cmc
int3
sub
test
imul
enter
inc
pop
outsb
xor
pop
push
dec
mov
xchg
xchg
xor
inc
ja
push
sbb
idivl
fxch
test
rcll
icebp
xchg
jge
int
das
jno
fs
jns
xor
cmpsl
pop
leave
inc
xchg
fldt
xor
mov
inc
shlb
aad
push
inc
scas
lahf
repnz
cld
les
aas
xor
xor
sbb
sti
push
pop
hlt
das
inc
out
mov
test
out
xchg
lret
xlat
shr
dec
push
out
and
cmp
pop
gs
adc
imul
sbb
and
xchg
fiadds
iret
repz
lods
push
repz
notl
inc
in
jne
pop
cmc
or
push
out
jmp
push
xchg
call
xchg
mov
jle
adc
int3
jp
adc
jnp
cwtl
repnz
mov
sub
sbb
push
mov
dec
das
test
lods
fucomp
outsb
dec
inc
shrb
loop
call
mov
pop
inc
fildl
shlb
daa
pop
and
cmpb
insl
es
movsl
jae
aam
cmp
fists
data16
enter
jecxz
aas
sub
push
mov
push
leave
mov
adc
fucomi
or
lea
les
sar
and
mov
push
push
outsl
imul
xor
and
sub
push
popf
adc
test
push
or
vandps
mov
jbe
jg
pop
jno
pop
push
jmp
push
lods
icebp
pop
leave
jae
in
add
fimull
sub
cmp
mov
adc
js
push
mov
scas
les
dec
xchg
add
sub
inc
push
out
cs
cli
sar
stos
aas
lcall
outsb
lcall
dec
out
jno
test
nop
sbb
xchg
add
dec
mov
xchg
sub
adc
or
popa
mov
movsl
cltd
pushl
push
lods
lea
out
jns
addr16
outsb
outsb
scas
loop
push
adc
inc
js
lds
jecxz
add
cmp
test
aam
xlat
ret
pop
sub
adc
cmp
fs
jne
sbb
das
pop
std
dec
push
push
movsl
loop
adc
jns
inc
jne
aad
ss
scas
dec
das
and
popa
in
xchg
repz
cmp
or
lret
pop
leave
push
arpl
leave
sub
inc
std
divb
and
or
mov
cld
ss
mov
movsb
jnp
push
jne
sub
xchg
scas
test
sbb
rolb
test
sub
xchg
outsl
iret
cmp
and
shrb
imul
push
mov
dec
lods
jnp
pop
inc
scas
ret
mov
fs
icebp
repnz
pop
adc
and
aam
ficoms
enter
bswap
xor
pop
jl
int3
adc
or
stos
inc
mov
mov
pop
push
mov
inc
dec
dec
inc
shlb
add
lea
dec
call
roll
aaa
insb
test
dec
push
shll
adc
push
xor
push
lret
sbb
data16
xchg
cmpsl
out
decb
aaa
push
add
push
sub
mov
push
add
mov
sub
test
shll
pop
push
dec
xor
inc
xchg
es
lods
dec
push
mov
lret
or
enter
mov
enter
xchg
or
xchg
xchg
int3
leave
ds
mov
jae
cld
jo
lret
mov
sbb
pop
mov
pushf
aam
mov
mov
aas
inc
lret
cmp
shlb
or
fldenv
adc
sub
xchg
scas
mov
xor
int3
in
repnz
and
dec
push
mov
frndint
jmp
inc
dec
pop
jp
notb
in
clc
mov
or
dec
jb
and
loop
in
push
jno
clc
xor
and
ret
xchg
or
sbb
xchg
cs
push
mov
jns
and
cmp
sub
mov
cld
js
fnstsw
pop
into
call
mov
fs
adc
stos
jge
jno
movsl
dec
pop
dec
push
call
mov
pushf
mov
jle
aas
push
insb
das
aas
adc
das
aaa
lock
add
ret
add
mov
and
addr16
mov
mov
outsl
cld
dec
dec
push
xor
shl
aam
push
mov
push
shlb
add
shl
adc
sub
jnp
loop
cmp
jecxz
insb
sbb
popf
dec
fucompp
xor
pop
jmp
out
bound
dec
pop
jle
sbb
jmp
aas
sub
sti
add
dec
inc
es
dec
out
mov
scas
shll
inc
sbb
iret
jae
push
insb
push
jp
mov
sahf
mov
cmc
mov
mov
mov
loopne
ds
je
out
scas
lock
and
clc
das
cltd
test
xor
sahf
fs
jle
hlt
push
add
cmp
cwtl
insb
cmp
sbbb
mov
int
lcall
fcompl
sub
xchg
test
dec
fnstsw
jb
push
fnsave
cmp
xor
das
stos
icebp
mov
in
cwtl
and
xor
xchg
or
mov
outsb
xchg
xchg
inc
cmc
les
mov
enter
aas
iret
mov
insb
cmp
sub
xchg
in
daa
dec
xchg
sbb
xchg
mov
stc
xchg
push
cs
daa
mov
dec
sahf
sbb
repnz
icebp
jl
xchg
insb
je
mull
sti
pop
je
inc
adc
jns
nop
inc
leave
fnstsw
lcall
es
lea
mov
test
add
divl
cmpb
and
ret
js
xorl
jecxz
adc
xchg
xor
lods
mov
and
aad
stos
pop
jmp
add
xor
xor
push
pop
inc
mov
fnstcw
data16
cmp
mov
pop
mov
gs
mov
push
cs
lret
sbb
push
jns
aas
cmpsb
sbb
les
testb
mov
jno
or
in
js
insl
int
xor
and
mov
lods
xchg
je
imul
bound
adc
add
adc
dec
adc
imul
in
mov
fbstp
fimull
aas
xor
inc
pop
jno
push
mov
mov
call
inc
jne
inc
push
dec
clc
jno
jp
or
push
in
cmp
pop
nop
inc
bound
or
mov
icebp
test
shll
adcl
inc
jnp
gs
mov
mov
stc
lcall
cmp
and
mov
psrad
adc
and
adc
inc
addr16
lds
cmp
stc
sbb
inc
fsubrs
cld
in
out
sbb
mov
sub
lret
jmp
mov
testb
push
ret
xchg
out
fwait
sub
dec
in
insl
ja
mov
sub
cmc
les
push
sti
add
or
mov
xchg
dec
jg
adc
adc
jb
in
push
lea
popf
movsb
xchg
jae
inc
in
sub
shr
push
clc
jg
out
inc
add
mov
mov
jb
sub
ja
lods
cmp
adc
xchg
mov
ljmp
mov
lods
jno
aas
loop
cmp
push
xor
pop
xor
fistpl
cltd
dec
sub
xchg
push
sub
shrl
push
dec
sub
into
ret
cmc
icebp
push
prefetch
jns
shl
jle
push
icebp
push
sbb
in
sub
lock
sti
arpl
cld
clc
repz
xchg
cmp
mov
popa
out
ja
jecxz
push
pusha
gs
sbb
ret
adc
xchg
sar
pop
aad
leave
popa
scas
add
push
mov
lcall
sub
xor
and
push
shlb
xchg
test
cmp
mov
mov
repnz
pushf
jnp
sub
jnp
shl
ret
movsb
incb
cs
int
icebp
pop
cs
outsb
mov
repnz
sbb
in
int
xchg
lock
gs
adc
jl
pop
iret
es
loopne
out
dec
nop
outsl
leave
adc
movsl
jb
or
rorb
int
push
out
call
stos
inc
lret
mov
repnz
pop
push
xchg
or
sahf
pop
cli
jecxz
int3
in
add
es
inc
pop
jl
pop
pushf
gs
mov
mov
dec
into
lret
bound
dec
pop
movsb
ss
jb
shrl
js
mov
sarb
jne
or
adc
ljmp
add
es
push
insl
xchg
add
out
sbb
mov
add
into
or
fldcw
loop
adc
out
dec
shlb
mov
inc
and
inc
xor
jg
in
or
stos
shl
out
inc
and
dec
fistpll
adc
out
popa
lock
lds
jns
or
add
mov
add
xchg
adc
stos
jle
daa
cld
cwtl
dec
cmp
add
mov
sub
cmpsb
orl
stos
fldenv
inc
sub
pusha
pop
xorl
cltd
pop
fs
xchg
gs
push
shll
xor
jnp
imul
scas
ret
xor
pop
add
pop
push
int
inc
fildll
jno
xchg
mov
xor
inc
roll
jo
lahf
sbb
xchg
lods
stos
ret
push
aam
cmp
and
mov
cmp
mov
out
out
inc
or
xlat
sub
cmovb
sbb
jecxz
adc
cwtl
repz
xor
ret
adc
or
cmp
xor
lds
test
mov
lods
test
xchg
sbb
aad
mov
lods
add
stos
testl
adcl
lea
cmc
xor
push
mov
mov
cmp
adc
pop
addl
jmp
fwait
xchg
out
cmovg
and
out
cmpl
pop
adc
imul
lods
ljmp
lds
icebp
mov
mov
or
pop
mov
gs
jne
je
jl
push
push
icebp
sti
lea
mov
clc
xchg
mov
insl
xchg
sub
out
mov
les
ds
nop
adc
into
add
gs
fcoms
sub
pop
fadds
std
mov
cmpb
push
jg
ss
faddl
and
popf
int3
sbb
rcl
cmc
int3
dec
cmp
stc
das
and
fdivs
sub
push
pop
scas
movsl
fidivl
lds
or
mov
lret
cmp
test
sbb
cli
mov
repnz
cwtl
inc
negl
int
inc
sub
cwtl
rcrb
cld
mov
scas
adc
xchg
jb
cs
push
mov
push
pusha
in
es
cmc
xchg
out
push
mov
push
jne
xlat
hlt
fcomps
sub
ljmp
pop
iret
adc
pop
cmpsb
in
ja
dec
lret
shrl
xor
popa
ret
mov
shlb
cli
ds
out
sub
lds
push
xchg
sbb
int3
jnp
push
sub
mov
inc
inc
into
lahf
or
pusha
xchg
cwtl
outsl
push
mov
pop
test
in
push
add
dec
xor
repnz
jo
jbe
mov
leave
shll
test
call
enter
das
xchg
imul
hlt
hlt
ret
jns
out
call
into
or
in
ss
push
mov
jnp
out
jmp
cld
mov
inc
mov
in
mov
lahf
pop
dec
int3
cld
mov
mov
xchg
xor
pop
lcall
es
insl
or
push
mov
adc
hlt
stos
push
insl
decb
lods
bound
dec
mov
add
rcl
xchg
mov
mov
hlt
and
call
inc
adc
jecxz
sti
cmp
xchg
pop
sub
pushf
cmc
inc
in
in
pop
push
jp
in
ljmp
pop
dec
fmuls
mov
sti
pusha
int3
out
sub
scas
ret
xchg
mov
sub
outsl
test
mov
dec
jae
test
mov
xor
call
sub
in
icebp
repnz
je
or
dec
fs
in
aad
adc
cli
jo
gs
xor
lods
cli
inc
xchg
and
cltd
mov
jb
cmp
sarb
pop
les
ds
fists
shlb
cmp
test
xchg
mov
xchg
out
ffreep
int
lods
pop
popa
aas
stos
popf
call
sub
mov
fsubs
push
outsl
xor
daa
cmpsl
mov
and
ljmp
cwtl
xchg
and
dec
rep
fadds
and
orb
push
outsb
sub
imul
adc
and
pop
stc
fistpll
stos
or
push
push
data16
outsb
mov
aad
push
inc
lcall
scas
pop
xchg
cli
ret
stc
cmp
das
jno
jnp
cmp
sbb
insl
sbb
ret
int3
add
test
push
jb
inc
pusha
mov
subl
jno
stos
and
in
cmp
stos
cmp
push
and
push
xor
test
insb
pushf
stc
mov
mov
pop
fcmovne
imul
push
loop
cs
mov
insb
in
push
push
add
mov
push
jmp
lcall
xchg
jnp
xor
push
insl
lcall
ret
sbb
dec
xchg
icebp
lret
test
sub
inc
addr16
push
es
push
jg
mov
jbe
std
mov
cs
xor
and
shlb
in
jbe
popa
jnp
xchg
cmpsl
dec
xchg
sbb
inc
stos
loopne
lea
rcl
das
inc
push
push
jbe
leave
addr16
mov
mov
imul
pusha
sbb
lea
xor
movsl
or
mov
fucom
add
loop
sub
rorb
and
stos
aad
mov
cmpsb
ja
test
push
add
xor
addl
add
jno
adcl
dec
and
mov
inc
inc
mov
loop
popf
dec
sub
inc
inc
lcall
test
sahf
dec
mov
xrelease
mov
jg
and
xor
inc
jge
daa
sbb
dec
or
sub
fsubrs
sbb
inc
into
in
int
xor
pop
cli
sbb
rcrb
and
stos
push
or
xor
fdivs
push
cmp
jno
pop
nop
mov
mov
jne
shl
sbb
xor
int3
xchg
inc
mov
cmp
inc
inc
aam
jo
jnp
xchg
xor
push
cwtl
add
dec
cli
sub
imul
jle
lea
loop
mov
imul
imul
push
shr
bound
daa
mov
dec
loopne
std
jl
mov
pusha
jl
jbe
jge
sbb
xorb
jmp
jg
mov
mov
pop
sbb
xor
add
pop
test
adc
push
sahf
ret
and
push
or
cld
scas
enter
push
test
pop
cmpsb
loope
pop
fiadds
stos
adc
lock
inc
inc
call
dec
sti
xor
jb
sub
and
cmc
mov
rclb
clc
adc
addr16
lret
or
fidivrl
xchg
mov
add
jl
inc
sub
shll
out
and
es
je
je
push
into
mov
push
testb
xor
daa
xchg
mov
or
cmpsb
lcall
fidivrl
aas
lea
cmp
int3
sti
std
into
lods
scas
stos
add
bound
mov
jle
xlat
or
jmp
sub
jns
push
dec
in
mov
and
inc
mov
hlt
jns
xor
or
or
mov
push
jo
sbb
push
jbe
pop
sbb
outsb
sbb
add
stos
aam
cld
jle
lret
pop
cltd
shlb
rolb
or
out
push
stos
cmc
push
mov
push
negb
mov
mov
mov
ja
jbe
and
sbbb
mov
lahf
sub
shrl
jb
mov
add
or
in
out
xchg
mov
cld
mov
push
out
shlb
into
mov
cwtl
and
lahf
xor
shrl
pushf
jl
xor
lret
jge
imul
xlat
inc
jmp
int3
arpl
cmpsb
stos
mov
sub
xchg
js
jmp
jnp
push
push
cli
dec
icebp
call
mull
cmpsl
jl
push
cli
adc
in
jecxz
sahf
daa
and
aaa
push
push
jmp
inc
fwait
pop
outsb
mov
push
sbb
scas
mov
add
notl
jne
cld
mov
ret
adc
xchg
lcall
and
jo
pushf
testb
gs
cmc
push
push
daa
add
add
loope
iret
sub
das
lock
inc
push
js
es
ficompl
lret
out
xchg
sti
clc
loop
inc
repz
fwait
insl
insb
cmp
mov
dec
cmpsl
out
cmpb
fcmovb
mov
jge
or
pop
das
mov
sub
aad
push
mov
dec
jge
fildll
xchg
push
sub
mov
pop
pop
xchg
xchg
je
mov
sub
cltd
jne
cmpsl
cmp
sub
cmp
adc
add
icebp
str
int3
mov
cmp
mov
shlb
mov
aaa
test
or
ret
and
pop
stos
dec
fmull
sbb
inc
or
arpl
jmp
xchg
xor
icebp
mov
cmc
gs
add
mov
cmp
je
mov
data16
imul
test
pushf
lahf
mov
mull
pop
inc
fbld
scas
cs
mov
xchg
out
jg
fs
pop
xorl
mov
in
insb
nop
dec
hlt
xor
cmpsl
sbb
lock
push
mov
pop
xor
cmp
adc
add
stc
sbb
loope
jl
xchg
push
dec
vmwrite
mov
jg
ljmp
cmpsl
daa
sub
and
cli
dec
not
mov
mov
fs
xchg
and
test
sub
dec
pop
imul
push
in
xor
adc
and
xor
sbb
xor
outsl
jbe
out
les
testl
shll
xchg
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
movsl
mov
and
addl
and
or
push
sbb
ret
cmp
sbb
add
lods
popf
out
lret
mov
xor
fsubl
rcrl
fists
sbb
pushf
push
sbb
test
bound
loopne
dec
xor
jl
mov
out
aaa
in
call
xchg
popa
cmp
fstpt
jp
push
sub
out
mov
inc
push
jge
add
push
mov
add
hlt
in
ret
jns
fimull
pop
clc
cmpsl
adc
inc
repnz
cmpb
cmp
jmp
dec
push
outsl
psllw
cmc
sub
pop
in
push
rcrb
and
sub
ror
mov
pop
pop
je
lods
xchg
cmp
mov
push
pop
inc
repz
xlat
jae
inc
fsubrl
jne
push
or
in
mov
lcall
push
cs
or
je
das
scas
mov
inc
xchg
mov
pop
shll
dec
fists
out
insb
lods
cmp
jb
ja
xor
rcl
mov
push
xchg
inc
in
push
test
scas
jns
mov
faddl
not
inc
inc
rorb
js
jmp
dec
loop
fistps
jmp
mov
das
into
xchg
pop
mov
leave
xchg
jge
inc
push
mov
pop
aad
fildl
outsl
lret
push
outsb
test
mov
out
fcomip
or
aas
sbb
dec
ret
sbb
leave
mov
stos
daa
mov
push
sbb
popa
inc
in
enter
adc
mov
and
std
in
fwait
cwtl
mov
add
jae
jb
xor
xchg
inc
dec
push
ret
cli
push
loopne
mov
add
into
inc
stos
in
cwtl
push
inc
and
scas
js
ret
pop
sub
cld
add
rorl
outsl
popa
xor
mov
daa
adc
dec
enter
test
sbb
insl
and
jg
leave
cmp
ret
add
xchg
sahf
jo
inc
sub
cmp
xor
add
loope
sub
mov
insb
and
je
pop
mov
adc
xchg
pop
or
mov
and
int
cltd
roll
outsb
bound
icebp
xlat
push
sub
loop
insl
mov
mov
sub
xchg
pop
push
mov
jo
adc
bound
adc
ja
dec
cld
in
movsl
imul
push
fsubrs
adc
jbe
popa
sbb
xchg
jl
adc
push
into
lds
repz
xchg
jae
jo
icebp
dec
call
lock
mov
mov
dec
inc
jl
pop
inc
push
inc
pushf
mov
push
sbb
jmp
mov
test
fbstp
xchg
and
mov
cmp
push
pop
sbb
push
jge
ljmp
js
shll
rcrb
pop
add
dec
mov
mov
inc
ja
mov
out
fwait
xor
ds
sarb
push
lret
lods
push
mov
jb
dec
jp
pusha
jge
out
pop
mov
iret
adc
out
dec
mov
out
mov
xchg
stos
mov
mov
push
sub
mov
pusha
cld
mov
or
jnp
dec
sub
sub
push
rclb
jmp
test
add
or
jno
xchg
js
push
pop
push
xor
loop
mov
sbb
fists
mov
pop
jae
and
mov
pop
jno
imul
pop
stos
out
je
or
mov
mov
pop
fwait
out
add
sbb
outsl
std
lahf
sbb
push
scas
ljmp
ds
adc
enter
jg
cmp
jmp
push
stos
add
mov
pop
outsl
movsb
push
mov
cmpsb
mov
inc
jb
pop
in
ljmp
aam
fcmovu
test
jbe
jne
lock
outsb
and
fcmovnu
and
pop
or
dec
mov
enter
inc
jle
cmp
jg
movsb
push
inc
xor
pusha
sbb
push
data16
or
and
add
fisubl
dec
adc
sub
mov
fidivrl
push
roll
test
decl
jmp
popf
sahf
mov
adcl
xchg
add
pop
in
repz
out
fmuls
mov
rcrl
addr16
scas
dec
mull
inc
fwait
and
sar
push
loope
or
adc
ret
mov
jle
sbb
daa
jnp
cmpsl
lret
and
subl
in
jecxz
pop
dec
outsl
mov
xchg
dec
sub
mov
mov
pop
daa
cwtl
popf
xchg
out
sbb
lods
mov
test
mov
sbb
mov
mov
out
loope
int3
mov
popa
jno
into
loope
stc
aas
mov
mov
scas
mov
jp
adc
xchg
jge
push
loope
dec
subb
es
and
outsb
dec
xchg
mov
sub
hlt
sbb
fdivrl
fs
cld
or
fdivl
sahf
sbb
or
call
mov
xchg
xorl
pop
icebp
mov
fsubl
pop
dec
xor
pusha
xchg
in
push
add
xchg
add
lret
lods
adc
ficoms
pop
pop
push
stos
cld
pop
pushl
push
mov
int
clc
inc
push
in
out
jae
fdivl
jne
aad
sahf
mov
jno
jge
mov
or
jne
jmp
pushf
aaa
nop
mov
lcall
jp
push
add
jbe
ja
pushf
adc
shr
divl
iret
sbb
sbb
add
mov
incb
fneni(8087
sbb
inc
loop
insb
mov
jns
int3
dec
ret
lret
sub
push
or
mov
daa
std
icebp
sahf
out
mov
push
lds
fwait
push
jno
sahf
rorb
and
xchg
xor
push
push
mov
xor
decl
pop
stc
and
xchg
mov
xchg
stc
cld
push
es
mov
mov
hlt
mov
test
and
test
je
xor
add
jge
lea
pushf
pop
push
arpl
iret
ja
repnz
sbb
jno
push
dec
ljmp
cwtl
lods
in
mov
cs
loopne
push
lds
stos
dec
in
dec
sbb
pop
lahf
push
test
and
add
mov
mov
fcos
xor
push
outsl
ds
xacquire
sbb
or
clc
iret
loopne
pop
insl
in
add
mov
jne
imul
adc
test
dec
es
dec
adc
mov
mov
xchg
inc
sub
inc
add
ror
mov
sahf
push
jp
pop
mov
mov
mov
mov
enter
lea
or
out
pop
mov
pop
push
pop
adc
pop
jno
ljmp
imul
stos
dec
xor
inc
fisubs
in
sbb
std
mov
jge
adc
adc
cli
shlb
sbb
movq
mulb
mov
pop
sub
lds
lods
push
jp
mov
xor
push
mov
cwtl
loope
mov
pushl
movsl
jecxz
int3
pop
adc
xchg
repz
pop
fisubrs
lahf
mov
out
mov
and
jp
xorb
fadds
ja
push
pop
fistl
aas
outsl
cli
pop
ficoml
adc
inc
into
aas
js
xor
cmpsb
sbbl
cmp
or
adcl
mov
in
rolb
out
push
pusha
cltd
push
lea
adc
push
repnz
and
and
les
xchg
fcmovbe
add
xchg
mov
test
outsb
inc
pop
jnp
sbb
jp
xchg
cltd
lods
in
push
mov
hlt
je
add
xchg
scas
ja
xor
xchg
inc
out
cmp
pusha
shll
es
cmc
jb
es
sbb
sbb
mov
ret
sti
leave
test
movsb
cmp
jo
pop
xchg
lock
sub
cltd
pop
insb
in
adc
inc
mov
test
mov
dec
icebp
sub
das
fs
or
jno
dec
leave
pop
cmp
mov
inc
cmpsl
adc
mov
pusha
pop
mov
push
fcoms
inc
dec
in
fistpl
cli
outsl
shll
jns
popf
aam
movsb
push
mov
test
xor
std
adc
sub
call
mov
pop
inc
jmp
cmpsb
sbb
lret
ret
cltd
fimull
das
ja
adc
or
jle
xchg
into
data16
cmp
rcrb
testb
mov
inc
fwait
outsl
or
cmp
enter
mulps
rcrl
pop
inc
hlt
add
or
inc
fnsave
mov
ljmp
sbbl
pop
push
or
repnz
mov
dec
and
ret
lret
repz
pushf
push
shr
repnz
pop
pop
dec
sbb
dec
sahf
lcall
mov
mov
add
inc
insl
lods
testb
repnz
mov
hlt
and
bound
ficoml
mov
jbe
pushf
or
lea
jle
lock
mov
out
loope
or
inc
imul
jp
push
aaa
cmp
xlat
scas
cmpsl
adc
push
sahf
cmovno
sub
or
dec
xchg
jle
lret
or
mov
mov
mov
les
mov
inc
bound
mov
add
rcrb
lret
add
mov
bnd
mov
nop
adc
push
test
inc
icebp
jns
mov
int
cmp
data16
adc
sbb
xchg
and
pop
dec
in
gs
mov
fnsave
mov
xor
int3
js
jno
xor
aam
jl
pushf
add
adc
pop
adc
ret
sbb
mov
or
popf
pop
sub
and
xor
xchg
xor
mov
enter
xchg
sbb
xchg
pop
push
gs
ds
test
iret
lea
inc
push
sti
shrb
xchg
loop
lahf
adc
dec
fwait
and
xor
cs
lret
mov
and
test
out
jne
hlt
data16
inc
mov
mov
test
ljmp
in
jns
mov
loopne
in
sbb
push
aaa
dec
pop
adc
sbb
jmp
js
enter
loope
mov
mov
push
xlat
xchg
mov
pop
and
sti
lcall
sbb
enter
loopne
cmp
nop
rcrb
add
mov
mov
cltd
call
cmpsb
pushf
mov
mov
xchg
adc
rolb
loopne
mov
cli
adc
loope
pop
lods
cmp
pusha
xchg
ljmp
mov
add
mov
shrb
push
xlat
fbld
in
xchg
push
dec
jp
sub
pop
push
mov
sti
lret
xchg
cmp
xchg
pop
pop
inc
testb
jecxz
movsl
inc
outsb
cmc
call
repnz
adc
lsl
mov
push
scas
mov
outsl
sub
inc
mov
inc
ss
add
xor
adc
lcall
xchg
fnsetpm(287
loope
pusha
mov
in
test
jne
pop
adc
cmp
lret
jg
rcl
xor
or
clc
or
outsl
ret
sbb
sub
rorl
adc
popa
cmpsb
cmpsl
pop
dec
leave
sar
cmp
xchg
mov
mov
sbb
adc
jge
aam
xchg
sub
mov
or
aas
iret
pop
sbb
lods
addl
xor
xchg
jo
and
scas
or
and
mov
push
je
jg
push
jae
and
stos
and
sub
addr16
ljmp
or
mov
scas
or
pop
rcll
arpl
jns
outsb
mov
mov
test
pop
xchg
mov
add
inc
adc
xor
das
pop
jbe
or
jecxz
push
scas
mov
mov
cmp
dec
pop
cmpsb
xlat
in
dec
mov
and
lods
stos
mov
jne
out
outsl
mov
mov
aas
fcmovnb
scas
nop
int
fisubrl
lret
stc
fmul
jae
fcomi
cmp
xchg
mov
loope
and
imul
ret
jo
or
aaa
cwtl
sub
and
fildll
inc
jle
inc
fwait
push
add
rolb
xor
pushf
and
das
sbb
mov
mov
cmp
jp
adc
cmp
xchg
and
pop
cs
test
popf
jle
dec
pop
xchg
mov
sbb
mov
out
push
push
jb
push
add
and
sbb
adc
cwtl
jecxz
mov
xchg
loopne
in
leave
adc
movsl
sub
test
inc
sahf
jp
insb
mov
lds
mov
inc
sub
dec
out
rcrb
cmp
leave
icebp
sbb
adc
mov
sarl
shrl
sbb
shll
adc
push
xchg
sbb
addl
lcall
fs
andb
inc
scas
sbb
mov
xchg
cmp
nop
push
adc
mov
mov
incb
jo
jp
mov
lods
scas
mov
push
sbb
out
cmp
rcrb
orb
and
inc
cmp
xchg
pusha
add
ret
test
sbb
inc
jge
fldl
mov
cmpps
adc
iret
arpl
or
loope
lods
mov
in
xchg
jecxz
sub
popa
sub
xor
iret
push
jg
test
inc
mov
fmuls
cltd
or
icebp
addr16
arpl
xchg
push
popf
jp
ja
cmpsb
push
sbb
mov
adc
mov
or
imull
mov
ljmp
mov
cld
sub
iret
out
aas
fs
mov
lods
or
data16
jo
cmp
and
cmp
andl
mov
rcl
cmc
movsb
leave
xchg
add
pop
not
inc
stos
js
pop
mov
sub
ljmp
mov
sub
daa
mov
cmp
pop
push
adc
movsl
inc
repnz
sahf
fistps
sahf
sub
mov
movsl
inc
push
imul
jmp
popf
mov
lods
push
test
push
out
dec
mov
mov
add
cmp
outsw
add
out
leave
push
insb
xor
mov
enter
stos
jp
rolb
xchg
shll
sub
push
mov
lret
xchg
sub
sub
sti
inc
stos
or
push
bound
mov
and
mov
adc
pop
or
mov
pop
es
std
repz
jo
lahf
sahf
dec
add
mov
notb
leave
scas
sbb
popa
adc
enter
mov
xlat
leave
ds
fwait
jae
inc
sar
repz
fadd
out
mov
out
shl
movsb
daa
push
std
inc
shrb
fildl
xor
ficoml
lods
and
xchg
add
xor
cmpsb
and
mov
lea
xchg
adc
cmpsb
test
adc
adc
jl
insl
hlt
adc
bound
mov
in
sbb
mov
aad
in
mov
bound
jne
sub
mov
or
notl
cmp
pop
dec
sub
stos
or
push
pop
mov
cld
pop
aad
popl
add
xor
pusha
jg
mov
pop
movsl
aaa
loopne
loopne
test
or
stos
das
adc
mov
out
mov
in
and
mov
jo
mov
les
mov
xchg
test
cmpb
dec
and
adcl
loopne
mov
inc
push
lret
push
dec
inc
dec
pop
enter
or
or
in
pop
pop
aas
sarb
ja
mov
cmc
push
or
dec
cmp
adc
outsb
push
iret
xchg
xor
mov
lahf
or
insl
inc
jnp
sub
lret
ljmp
pop
jle
adc
dec
out
add
icebp
xchg
rorb
inc
pop
pop
or
sbb
loopne
and
popw
js
push
loop
das
gs
scas
add
pop
xchg
or
jns
push
leave
push
das
mov
cld
in
clc
push
mov
push
and
cmp
imul
jecxz
jae
inc
fimull
xchg
add
fisttpl
push
jb
jmp
mov
push
xchg
call
shl
xchg
std
dec
xor
mov
fildll
bound
outsb
daa
sub
mov
sub
shl
stos
jns
jae
or
sbb
add
dec
cltd
jecxz
pop
jg
lcall
ret
xor
xchg
jecxz
mov
popf
aaa
xor
sbb
les
jmp
pushl
icebp
mov
add
cmp
subl
fnsave
adc
xor
loope
rorl
ss
push
test
add
inc
fwait
stos
daa
push
xchg
or
cld
add
mov
cli
fildl
jnp
cltd
iret
add
push
mov
fcoml
xchg
jmp
imul
fmuls
cld
sub
pusha
iret
pop
mov
lods
push
xchg
xchg
fdecstp
scas
ja
push
insb
push
pop
adc
sbb
pop
imul
and
cmpsb
push
stc
mov
and
jno
mov
and
sbb
xchg
mov
aas
inc
loopne
xchg
or
lea
out
cmpsl
dec
jl
fld
loopne
jne
out
and
out
hlt
aam
mov
insl
ficompl
int3
cld
xor
pop
mov
pushf
dec
lahf
rcpps
fidivs
cltd
push
mov
jecxz
pop
leave
test
scas
mov
xchg
popa
loopne
js
lret
mov
cmp
fs
in
pop
rcll
xchg
js
push
cltd
in
add
lret
sbbb
xor
insb
jl
scas
add
sbb
jae,pn
insb
fstpl
jns
jne
jne
adc
sub
ret
xlat
jnp
jbe
test
cmpsl
das
mov
jns
fwait
mov
fldl
sub
scas
aam
mov
jno
or
pop
out
inc
cmp
push
mov
inc
push
mov
adc
mov
sbb
imul
jecxz
inc
mov
notl
pop
jo
cld
test
in
frstor
sub
xor
repnz
sub
xchg
scas
imul
test
adc
ljmp
or
xor
push
add
lods
adc
in
loope
push
cmp
cmp
mov
inc
jnp
adc
ret
cmp
mov
xor
xchg
out
aaa
mov
repz
ds
push
jo
es
imul
cli
mov
dec
add
jbe
or
cmpsl
add
in
stc
cs
in
sbb
int
xchg
jecxz
and
mov
jae
fistpl
sub
cmp
xchg
cwtl
lock
mov
ss
test
or
shlb
inc
aad
xor
pop
jns
xlat
mov
gs
mov
or
sub
test
and
loop
pop
loop
add
jo
jmp
sti
sub
jp
cld
mov
arpl
in
mov
mov
sahf
mov
lcall
clc
out
int3
sbb
xchg
rcll
inc
lods
xchg
mov
cmpsb
xor
aas
push
xorb
cmp
cwtl
loope
lods
push
fcmovbe
daa
repnz
inc
xor
push
add
sbb
adc
inc
sub
icebp
aad
cmpsl
inc
sbb
inc
mov
pop
test
jns
inc
ret
jmp
cmp
and
and
pop
fmull
adcl
xchg
pusha
fwait
in
xchg
mov
or
mov
inc
popf
sbb
dec
aaa
fildll
std
xchg
dec
imul
sbb
xchg
out
push
mov
and
xor
movsb
hlt
sub
ljmp
aad
mov
adc
sub
push
adc
lock
movsb
fstp
jge
fs
movsb
adc
iret
popa
jp
movsb
pop
adc
xchg
add
lds
cwtl
xchg
adc
jo
aaa
out
pushf
fwait
out
and
push
mov
lock
je
hlt
ret
and
daa
or
test
std
add
stc
jg
add
cmpsb
mov
repz
shlb
xor
fdivrs
inc
pusha
aaa
rorl
dec
mov
enter
dec
push
dec
dec
insl
addr16
fcomi
jle
fidivrs
lods
not
dec
mov
ret
test
lock
and
add
mov
lea
pop
pop
loopne
dec
sti
fldenv
mov
and
lahf
lds
mov
cltd
mov
mov
je
out
pop
mov
cmc
movsl
cli
or
push
inc
xor
jne
and
mov
bound
nop
xor
push
jl
popa
sbb
lahf
sbb
enter
test
jmp
jno
ret
cli
or
add
mov
cli
add
mov
outsb
nop
clc
adc
pusha
clc
inc
sbb
test
rcll
test
in
xor
lret
or
lds
jbe
ret
mov
and
xor
filds
jbe
sahf
int3
arpl
cmp
add
gs
lds
xchg
ftst
jae
fs
dec
jb
and
andl
xchg
sub
inc
push
js
inc
cmpl
fiaddl
shll
adc
and
mov
sti
jge
inc
popf
inc
adc
mov
rcrl
pop
mov
lods
stos
gs
dec
and
mov
adc
pop
repz
jne
mov
shrb
test
je
adc
cs
xor
in
and
or
cmp
ds
jae
mov
dec
mov
addr16
pop
push
or
pop
jl
or
mov
add
es
lods
mov
xchg
arpl
aad
imul
pushf
inc
mov
sub
inc
xchg
mov
lcall
int3
and
pushf
insb
pop
sbb
adc
mov
pop
sbb
pop
and
jge
dec
repnz
dec
ja
add
divl
fwait
mov
or
mov
in
cmp
adc
lods
cli
lds
push
lods
outsb
push
jmp
in
pop
shrb
orl
vpsllq
mov
cmp
lock
pop
ss
aas
nop
push
cld
inc
in
dec
or
in
and
pop
pop
inc
ficomps
mov
sti
xchg
dec
out
imul
xchg
movsl
push
fistl
lods
movsb
xlat
jl
sub
icebp
push
dec
fcmovne
loope
stos
jmp
adc
fidivrs
mov
dec
dec
cmp
push
psubq
sbb
leave
cli
aaa
jb
push
divb
jnp
test
in
fcmove
js
rol
pop
dec
push
cmp
pushf
dec
push
je
stos
in
xor
iret
pop
aaa
mov
int
popf
loop
xchg
lds
aas
mov
cmc
ficoml
or
sub
loopne
ret
mov
insl
stos
or
jge
dec
subb
loope
xchg
shll
sbb
sub
dec
jg
insl
and
mov
stc
cmpsb
xchg
push
cmpsl
insl
xlat
mov
xor
inc
gs
xchg
and
pop
mov
stos
jg
or
pop
aam
fs
dec
mov
std
push
push
pop
or
icebp
sub
enter
and
inc
push
je
dec
test
in
das
pop
xchg
dec
repz
pop
adc
leave
clc
outsl
jmp
or
xor
sbb
cmp
cmp
inc
pop
add
scas
lds
sub
xchg
pushf
and
mov
push
mov
loope
pop
xor
pop
mov
pop
jnp
pop
cmp
cmp
mov
push
cmpsb
cmp
ret
std
sbbl
ret
pop
sbb
arpl
inc
pop
int
jno
into
out
fdiv
jo
lcall
jle
cld
insb
adc
fnsave
cwtl
xor
sbb
pop
push
mov
pop
jno
mov
cltd
mov
mov
mov
int
sbb
stos
and
leave
sbb
adc
stos
frstor
push
push
sub
out
sbb
sub
push
test
mov
cmp
int
sub
jmp
out
sub
xor
dec
pop
jge
adc
adc
ja
push
mov
sbb
icebp
sbb
mov
pop
xchg
xorb
leave
jae
inc
pop
test
adc
lahf
jns
dec
negl
insl
jb
and
xlat
sub
mov
adc
push
mov
inc
inc
push
into
and
inc
push
xchg
push
mov
xor
fsubrl
dec
jmp
arpl
popa
je
mov
pushf
cmpsl
cwtl
pop
cmp
lods
push
sub
fisttpl
lcall
push
in
mov
or
sub
mov
dec
or
scas
dec
adc
shl
xor
lea
js
push
push
push
scas
cmc
mov
mov
stos
lea
xchg
inc
pop
pusha
dec
xchg
push
push
or
in
aam
adc
pusha
pop
mov
loopne
out
out
mov
and
pop
push
xchg
push
ljmp
or
inc
cmp
bound
and
into
clc
scas
push
inc
sub
test
mov
lcall
pop
pop
test
pusha
fcmovu
insl
pop
jae
cmp
imul
push
aam
jbe
fs
jmp
ffreep
mov
push
cmc
jge
inc
inc
ret
enterw
aas
mov
stc
dec
shlb
add
inc
sti
push
arpl
or
dec
add
or
nop
fistps
jnp
or
shl
xor
popf
lahf
inc
ret
push
addr16
pop
mov
fisttps
sarl
push
mov
cmpsb
xchg
sbb
push
cmpsl
mov
loope
stos
pop
cmp
ljmp
sahf
fs
nop
ret
lret
sbb
cli
sbb
push
mov
mov
pop
mov
cmc
and
sbb
in
fstpt
das
push
lock
dec
pop
sbb
xchg
lds
jae
sbb
pop
jb
and
sahf
movswl
and
jne
sub
cmp
push
mov
xchg
adc
inc
pop
std
pop
stc
add
xor
and
push
push
mov
lock
fcoml
xor
ret
mov
xor
fbstp
decb
in
hlt
xor
dec
sbb
inc
fadd
call
flds
hlt
mov
dec
xchg
pop
mov
cmpsb
int3
aam
pop
cmp
xlat
push
xchg
mov
popf
aam
jmp
int
inc
je
in
and
enter
mov
int3
in
or
in
add
arpl
or
loop
xchg
jns
ljmp
xchg
call
mov
inc
jmp
jo
mov
push
inc
popf
mov
addr16
xlat
les
mov
sub
mov
mov
test
mov
lds
and
bswap
mov
inc
es
test
cmpsb
jno
cli
lea
shrb
aad
jns
test
scas
idivl
rcr
add
jmp
and
das
jno
mov
jae
cs
pushf
stc
mov
xchg
cmpsb
pusha
mov
insl
mov
and
cmp
cmovl
sbb
xchg
xchg
leave
adc
out
pusha
add
add
arpl
test
jae
subl
jae
sub
pushf
pop
add
mov
insl
repz
inc
mov
add
xor
movsl
sar
inc
cmp
adcl
inc
push
fistpll
sub
add
das
into
mov
inc
add
pop
imul
popa
cmp
push
mov
cmc
pop
subb
repnz
stos
lock
sub
dec
push
out
out
lock
cmp
pop
adc
mov
adc
sub
push
or
push
aaa
pop
xchg
arpl
faddl
mov
xchg
fldenv
cmp
dec
js
cmp
aam
mov
in
xor
mov
incb
add
push
push
scas
cmp
xor
repnz
xlat
inc
hlt
or
inc
loop
jb
fcomps
movsb
rorb
aas
out
mov
jecxz
push
ds
mov
aad
in
push
scas
stos
inc
fldl
push
sbbl
sbb
popf
cmp
fstpt
in
in
xchg
ds
insb
push
in
insl
jecxz
and
mov
ret
mov
push
mov
add
aad
imul
jl
pop
sbbl
nop
pop
jno
inc
dec
push
xor
in
dec
inc
push
mov
scas
mov
popa
bound
cmpsb
int3
arpl
pop
jg
arpl
push
mov
das
adc
les
or
neg
sub
jnp
filds
insl
je
sub
aad
rclb
dec
pop
xor
mov
mov
pop
mov
or
xor
ss
pop
push
js
lock
mov
aam
or
cmc
dec
lock
add
aas
repnz
pshufw
pushf
xchg
cli
ss
popa
data16
pusha
xor
adc
xor
icebp
adc
jecxz
sahf
sbb
in
push
mov
sub
bound
mov
adc
and
push
leave
aas
cwtl
icebp
sub
adc
ret
jecxz
arpl
js
and
add
stos
jl
pop
push
neg
dec
aaa
lock
inc
add
push
or
rcll
scas
dec
xor
sysenter
and
fwait
push
sub
ret
gs
rcrl
cmc
jae
leave
mov
lret
mov
xchg
pop
test
cwtl
cld
dec
loopew
lcall
add
nop
enter
jo
cwtl
cmp
les
mov
push
in
in
mov
cwtl
push
pop
sub
mov
jmp
fildl
or
lea
mov
lahf
and
mov
mov
push
inc
push
adc
fcomps
or
rcrl
repz
sbb
mov
jg
cmpsb
xchg
insb
xchg
negl
cld
inc
jne
mov
outsl
into
movsl
cld
test
jle
pop
adc
xor
push
in
out
lahf
bound
lods
mov
das
push
adc
lret
test
xchg
jne
and
mov
sub
mov
mov
pop
movsb
lock
sbb
lods
ja
mov
jno
test
out
scas
int3
nop
jno
mov
cld
sbb
or
xor
movsb
lahf
out
lahf
sbb
mov
xchg
mov
push
push
mov
out
pop
mov
cmpsb
loope
mov
mov
push
add
xchg
mov
cmp
scas
dec
xchg
gs
subb
in
pop
adc
and
test
push
rclb
dec
call
sbb
add
jae
test
push
into
rcrl
insb
aaa
push
subb
cmp
fs
in
mov
push
cltd
enter
daa
sub
punpckhwd
mov
cmpb
jns
arpl
push
sub
pop
iret
sarl
fsubp
jmp
inc
fisubs
mov
in
enter
subl
dec
xchg
icebp
mov
pop
push
out
stos
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
aam
sub
and
adcl
cld
ret
adc
jmp
sbb
or
and
adc
pop
mov
movb
pop
ret
sub
loopne
pop
insl
push
sub
daa
mov
push
mov
pushf
push
mov
adc
outsl
sbb
pop
mov
lret
jge
outsl
add
mov
add
push
enter
sub
dec
int3
pop
sbb
push
cld
sahf
jmp
loopne
xchg
in
loope
jnp
ret
sub
push
ljmp
test
push
notb
lods
xor
pop
pop
jns
stos
clc
arpl
mov
ret
xchg
sub
das
fisubl
cmpb
sub
sub
mov
add
out
cmp
add
push
adc
mov
mov
lahf
aaa
call
cs
and
xchg
data16
push
pop
cmc
mov
inc
inc
mull
and
hlt
les
jl
mov
stos
insb
mov
mov
and
cmp
lods
jecxz
mov
mov
add
jb
add
int
cld
pop
xor
or
sub
pop
arpl
xchg
psllq
movsl
mov
and
leave
dec
rorb
sub
or
arpl
and
jecxz
push
mov
pop
xor
mov
adc
cmpsl
repz
into
mov
pop
gs
sbb
dec
sbb
lds
dec
xchg
lret
int3
fsts
xor
call
xlat
inc
je
into
sti
mov
test
or
sub
sub
in
aas
adc
popa
jge
out
shrb
pop
dec
das
inc
fidivl
outsb
sbb
movsl
add
inc
push
lods
test
dec
movsl
into
js
in
rcrl
idivl
cmp
jb
mov
int
and
dec
das
and
cmpsb
enter
fisubrs
dec
rcr
pop
lret
call
loope
dec
arpl
push
js
push
pusha
lods
ljmp
add
clc
xor
push
cltd
test
adc
in
mov
mov
sub
in
test
out
test
mov
xorl
cltd
mov
push
inc
jp
adc
dec
ljmp
ss
sub
mov
sbb
insl
data16
sbb
pusha
imul
xchg
xor
sub
dec
mulb
and
nop
aaa
aam
adc
dec
out
lret
shlb
xor
pop
cld
mov
xor
cmp
mov
xor
test
movb
push
inc
lcall
lahf
xor
outsl
mov
cmp
mov
push
fsubrl
xor
mov
jnp
ret
dec
dec
sahf
mov
jg
pmuludq
mov
xchg
xor
mov
push
mov
add
mov
js
and
js
sub
fistl
push
mov
imul
pop
sbb
mov
and
dec
pop
fucomip
and
in
sub
jg
push
jbe
sbb
inc
mov
push
rol
mov
pop
mov
jecxz
sub
lea
cmp
dec
scas
mov
pop
pop
pop
je
mov
mov
push
mov
sub
push
sti
pop
pushf
or
mov
mov
mov
lret
shrl
lret
pop
cmp
shl
push
nop
pop
push
pop
jl
je
inc
sub
cmp
jp
rorb
cmp
sahf
sbb
and
cmpsl
xchg
inc
jle
inc
add
push
cld
nop
rorb
xor
aam
sbb
fcomip
jae
push
sub
and
adc
ja
inc
gs
ds
mov
jnp
add
addr16
scas
inc
and
out
cltd
lcall
out
mov
pop
mov
push
pop
popa
test
mov
cmp
lret
loope
push
cmpsl
pop
mov
push
push
jbe
in
movsb
inc
sahf
out
pop
cmp
mov
cli
scas
xchg
ror
pushf
mov
add
ror
cmpsl
push
loope
in
lock
mov
mov
adc
divl
add
mov
inc
in
xor
call
and
xchg
mov
add
xchg
ret
call
test
xor
pusha
jns
pcmpeqb
lcall
ljmp
iretw
lock
push
in
inc
jo
mov
jb
scas
and
dec
sbb
mov
test
pop
test
mov
das
es
jae
test
jb
mov
xor
adc
rcr
push
mov
stos
jmp
xchg
mov
loop
cwtl
jae
aaa
cmp
cmpsb
out
or
mov
shlb
aam
mov
xor
mov
lahf
fnsetpm(287
add
out
xchg
xchg
jge
xor
jmp
dec
rorb
cld
or
std
or
pusha
ja
sbbl
scas
imul
xchg
xlat
mov
push
and
xor
or
out
pusha
push
out
adc
mov
cs
jge
in
sarb
cmp
pop
mov
mov
dec
push
fiadds
aam
lahf
mov
sbb
loope
and
jmp
and
pop
push
std
out
jp
mov
test
jecxz
inc
pop
dec
sbb
rol
fwait
pop
lea
xor
es
loopne
push
icebp
and
mov
in
cwtl
lea
pusha
push
rorb
sub
in
je
out
jmp
xchg
add
sub
out
push
sub
pop
cmp
xlat
int
shrw
sub
stc
pop
lahf
sbb
pop
or
xchg
lods
jle
jg
lcall
pop
adc
inc
in
aam
lds
pop
stc
dec
xor
or
pusha
ror
cwtl
sahf
sbb
test
dec
cmpsb
cmp
push
aaa
mov
sub
enter
fidivrl
les
push
lcall
repz
or
fnstenv
and
jbe
cli
sbb
fld
ljmp
push
test
inc
and
inc
push
push
movl
mov
jl
ficoml
fs
push
mov
pop
js
test
jo
mov
mov
clc
fidivrs
fs
xchg
xchg
enter
in
jae
mov
fimull
into
test
mov
jno
and
popa
stc
out
fwait
push
or
xchg
jbe
hlt
and
ljmp
lods
sub
pop
and
push
mov
xchg
push
add
push
mul
fwait
negb
inc
leave
rcr
shll
mov
leave
arpl
inc
hlt
lock
xor
dec
cmp
mov
dec
sub
sub
push
pop
dec
rcrl
xor
xchg
fidivs
xchg
jmp
add
leave
in
mov
mov
add
dec
jmp
movsb
or
les
movsb
xchg
cmp
push
out
xchg
repz
jmp
mov
and
imul
jnp
lock
xor
push
aad
std
repnz
add
bound
shr
popa
in
push
xchg
sub
adc
jmp
dec
adc
mov
sbb
in
enter
push
int3
cmp
sub
hlt
inc
ja
jne
cmp
mov
push
std
xor
sti
lret
push
call
jae
lcall
aaa
push
in
jmp
mov
or
bound
xchg
ret
jp
ret
xor
je
popa
push
js
or
not
scas
jns
mov
cltd
dec
decl
addr16
jb
les
insl
push
int
sbb
mov
stos
pop
mov
iret
mov
test
inc
sti
lret
add
loope
lahf
cmc
push
mov
jns
pushf
jno
stc
arpl
lahf
ljmp
ror
mov
movsb
xchg
push
inc
fsincos
push
push
pop
and
or
inc
jmp
incl
lahf
xchg
pushf
pop
push
ja
popa
das
shrl
inc
xchg
adc
fisttpll
and
repz
in
pcmpgtd
int
and
lret
jnp
and
cmp
mov
movsb
sbb
pop
xchg
pop
fistps
pop
sarb
jge
mov
loopne
sbb
mov
movsb
mov
ficoml
lea
pop
cltd
pop
push
subb
ss
push
bound
or
xor
and
push
push
cmp
out
cmp
dec
data16
mov
cli
ret
dec
xchg
movsl
jmp
out
int
cmc
pusha
into
mov
bound
pop
xchg
cmp
push
xchg
jbe
xchg
jne
stc
mov
cltd
aad
jp
flds
shrl
xor
inc
cwtl
std
add
out
mov
xor
xor
pushf
mov
push
xchg
mov
lret
inc
enter
scas
inc
mov
inc
mov
cli
pop
stos
outsl
fldenv
lret
pop
dec
dec
pop
xchg
xor
jae
jae
std
addr16
adc
ret
pop
push
lods
fbstp
fwait
dec
jecxz
or
das
jl
hlt
mov
adc
push
dec
pushf
push
pusha
push
add
mov
subl
mov
hlt
ds
jmp
push
ret
outsl
shlb
imul
in
push
adc
sub
inc
loop
and
lahf
push
into
icebp
jae
out
loope
push
push
push
adc
leave
xchg
shr
sbb
sbb
xchg
pop
ror
adc
push
arpl
push
das
jmp
cmp
scas
jle
jae
xor
inc
jmp
jae
popf
int
fistpl
or
divb
jge
ror
mov
das
sbb
jne
cltd
sarl
cwtl
and
jmp
or
jbe
mov
sub
dec
aam
int3
cmp
int3
mov
add
aaa
inc
rcr
sub
ljmp
adc
adc
xchg
adc
out
sbb
jbe
lret
enter
sub
jae
push
stos
out
mov
loopne
cli
adc
data16
jns
sti
jecxz
add
mov
inc
mov
je
nop
sub
leave
jg
xchg
fldl
arpl
das
or
int
mov
cmpsb
xchg
adc
jmp
xchg
pop
cmp
dec
mov
jns
mov
inc
xchg
sub
xchg
add
jmp
data16
scas
lea
and
div
shlb
xchg
pop
xor
inc
jae
rorl
sbb
mov
mov
sbbb
push
jo
ja
xchg
daa
fiaddl
insl
fmulp
and
es
outsl
test
shll
cmpb
pop
push
push
and
fstps
cmp
mov
adc
sub
dec
fstpt
dec
hlt
jo
arpl
add
loope
fcompl
push
movsb
in
fildll
ficoms
data16
sbb
shll
xchg
dec
sarl
repnz
fwait
or
and
push
jne
leave
jbe
imul
add
and
aas
inc
adc
sti
mov
mov
adc
sub
pop
jg
add
inc
insb
jnp
arpl
jp
push
stc
movsl
xor
add
ja
sub
mov
test
pop
or
cmp
pop
push
ljmp
xlat
ficompl
lea
adcb
sarb
push
push
fsubs
jae
or
out
xchg
shrl
push
dec
mov
xorl
inc
inc
push
fbstp
loope
inc
stos
mov
dec
sarl
push
or
push
movsb
dec
cli
cmc
jge
loopne
or
imul
adc
jno
iret
inc
fimull
sub
cli
pop
ret
jns
mov
xchg
lock
push
fmul
insl
aaa
mov
pop
jp
fstpt
sub
cmc
jbe
dec
stc
sbb
popa
adc
jle
cltd
popa
xchg
add
mov
xchg
mov
je
and
dec
ss
jl
mov
sbb
pop
out
fcomps
imul
xchg
xchg
in
mov
add
ret
imul
addr16
adc
ja
les
sub
shll
mov
push
adc
adc
inc
leave
cld
shrb
sub
adc
ja
cli
movsb
sbb
mov
or
push
call
mov
dec
js
scas
jp
lret
adc
cmp
in
gs
scas
int3
movsb
jo
jno
insl
ret
mov
and
inc
enter
shll
adc
xor
xor
pop
outsb
and
lahf
js
jg
xor
pop
shrb
sub
fstl
rcll
xchg
dec
and
movsl
mov
out
xchg
sbb
mov
addb
adc
jns
mov
inc
jo
xchg
and
mov
jns
hlt
xor
dec
test
or
sub
jno
mov
or
add
icebp
je
cmp
mov
push
lahf
or
dec
cld
in
nop
add
mov
clc
dec
fcoml
push
lret
jno
push
add
jae
pop
xchg
and
inc
xor
ficoms
js
mov
push
xor
in
xchg
sub
fisttps
fists
cmp
pusha
lcall
sbb
in
sarl
dec
cmp
shll
stc
add
push
dec
lock
mov
sti
sarb
adc
mov
sbb
mov
fcoml
push
mov
lcall
aaa
lods
dec
in
into
popf
fldenv
pop
pusha
and
test
inc
and
lret
pop
cmpsl
mov
call
jmp
push
fbstp
jne
lods
in
push
jno
push
push
into
xlat
lret
adc
inc
fnsave
xor
pop
ja
fdivrp
adc
jno
mov
or
lods
out
or
imul
dec
pushf
insl
mov
outsb
adcl
into
rclb
idivb
or
imull
xchg
std
pop
ja
inc
cld
mov
mov
iret
adc
inc
add
push
out
call
mov
mov
add
push
hlt
or
xchg
scas
cld
aaa
js
sbb
inc
shrl
stos
out
jmp
scas
xchg
jl
out
mov
inc
cmp
pop
pop
int3
xor
popf
mov
fistps
and
shl
scas
std
or
jmp
dec
fwait
xchg
lea
sub
bound
push
ffree
push
push
push
or
sub
add
int
and
dec
mov
mov
popl
pop
sbb
hlt
fdivrp
sbb
lock
enter
je
cli
mov
cmp
lods
mov
or
ja
push
pop
jb
pop
jo
push
cmc
out
je
xchg
divl
insl
xchg
or
bound
sbb
loopne
mov
sbbb
addb
mov
jo
adc
pusha
rol
outsb
test
out
xchg
stc
jmp
in
mov
xchg
stos
gs
imul
and
dec
dec
outsl
mov
mov
aaa
pop
repnz
lea
or
ss
sbb
jmp
xchg
ret
xchg
push
adc
and
add
fbstp
xor
or
and
sub
insb
out
push
mov
cmpsl
and
popf
repz
pop
jae
aam
cmp
pop
scas
mov
test
scas
aam
je
shlb
or
aad
aaa
ljmp
jecxz
mov
push
inc
lret
xchg
ret
fsubl
add
adc
add
lock
dec
lock
dec
jo
in
mov
popa
mov
push
adc
cmp
fstps
push
mov
fistpll
arpl
push
addr16
sbb
ret
cmp
pop
jne
jmp
add
add
mov
pop
mov
loope
dec
adc
loopne
out
pop
lds
and
mov
push
dec
aam
call
imul
jno
daa
mov
mov
dec
imul
mov
popa
cmc
test
mov
pop
popf
jns
dec
js
aas
test
clc
aaa
fcompl
test
cmc
in
xlat
lahf
nop
mov
pop
and
clc
gs
cmp
pop
int
rcl
cltd
imul
enter
mov
aad
call
cmpsl
mov
xchg
pop
sub
out
cltd
es
adc
movsb
mov
cmpsl
inc
orb
sub
and
in
lods
rorl
push
jl
orb
push
jle
lds
negb
das
xchg
adc
add
dec
arpl
js
js
adc
notl
inc
mov
ret
callw
mov
xor
pop
pop
movsb
or
in
into
das
cmp
lret
or
repnz
inc
jo
adc
xor
decb
insl
pop
movsb
adc
add
or
into
das
mov
test
sbb
out
jno
mov
test
cmc
and
add
fistps
repz
in
ja
sub
adc
pop
fbld
mov
lret
mov
jnp
aas
and
sarb
mov
mov
pop
and
xchg
mov
mov
mov
fildl
cmp
mov
int3
sub
das
push
das
jnp
xchg
rep
inc
xchg
test
xchg
outsb
mov
lahf
jb
sbb
insl
jnp
cwtl
or
or
stos
push
and
jno
xchg
or
pop
pop
cmp
cmp
inc
clc
imul
lds
hlt
idivl
lret
mov
test
dec
and
add
mov
sub
add
das
les
pavgb
xchg
loope
stc
fiaddl
sbb
shlb
jb
jb
add
imul
cld
mov
stc
or
int3
mov
loope
repz
xchg
arpl
lret
xor
pop
pop
dec
push
fsubr
test
je
mov
dec
js
and
ds
mov
xor
push
insl
dec
jno
sbb
test
jno
mov
cmp
out
js
aas
data16
iret
ret
fidivs
fidivrs
sbbl
stos
pop
ljmp
pusha
cs
lods
pop
loop
ds
jne
jne
jle
push
mov
mov
enter
xorl
aam
and
lods
mov
jg
pusha
sub
popa
jl
xor
std
push
mov
int3
mov
mov
dec
push
push
sti
fptan
int3
sbb
push
aaa
ficomps
mov
call
pop
lea
stc
es
and
add
cmc
outsl
mov
mov
mov
lret
cmp
outsb
ljmp
insb
cltd
dec
xchg
and
je
mov
sub
faddp
shlb
iret
stos
outsl
into
inc
xchg
test
mov
mov
sbb
or
sbb
cli
dec
jae
dec
movsb
sub
mov
test
push
mov
leave
mov
xchg
pusha
and
xchg
das
daa
adc
jp
jnp
cmpsl
pop
lods
sbbb
icebp
pop
imul
cmp
and
mov
test
add
mov
sbb
aam
pop
cmp
sub
add
aam
je
mov
xchg
bnd
xchg
lods
std
xor
or
insb
test
sbbb
sub
cmp
inc
or
cmc
bound
sti
mov
inc
dec
xlat
je
mov
dec
and
cmp
les
in
mov
fistps
or
or
cltd
icebp
mov
sub
outsl
arpl
daa
cmp
dec
push
rorb
movsl
inc
js
mov
fistpll
bswap
insl
ret
mov
and
ret
movq
cmpsb
cmp
push
cmp
add
ljmp
push
aas
into
jne
push
rcrl
jl
fimuls
push
xchg
mov
popa
xor
es
outsb
les
mov
jp
orb
cmc
stos
sub
lret
jmp
imul
gs
mov
pop
aad
mov
fstpt
lret
mov
jl
pusha
jns
jo
popa
mov
push
fstpt
sahf
ja
popa
popf
repnz
or
cmc
fwait
ds
rcl
std
dec
lahf
or
inc
pop
aad
rcl
inc
cmp
out
lods
shll
sahf
dec
stos
dec
add
sbb
dec
pop
xchg
xchg
gs
mov
push
out
push
dec
cmpsl
in
mov
shll
mov
sub
fiaddl
fisubs
pop
cmp
imul
ss
lods
out
cmpsl
mov
testb
jle
cli
out
xchg
pop
fnsave
cmpsl
insl
shl
fildl
arpl
and
test
inc
and
pushf
mov
dec
pop
push
lock
push
addl
xor
fsubrs
add
nop
push
addb
or
inc
insb
xchg
mov
aaa
pusha
sbb
and
mov
jbe
movsb
sub
sub
pop
lds
pop
loop
arpl
mov
mov
mov
sub
sub
xor
icebp
push
pop
inc
sti
pop
lret
loopne
add
loope
or
ds
inc
aad
sbb
nop
xor
xchg
out
sub
jnp
xchg
xor
jecxz
xchg
xchg
shrb
iret
test
mull
mov
fldcw
mov
xrelease
bound
or
dec
rcrb
test
xchg
push
and
or
adc
and
sub
cmp
addr16
cmp
sub
leave
mov
mov
ret
push
bound
shlb
sarb
movb
mov
dec
xor
in
add
xchg
mov
jnp
add
push
shr
int3
dec
fnstcw
mov
add
lds
or
icebp
stos
iret
xchg
add
dec
cmp
ret
cmpsl
inc
push
xlat
jl
test
push
pop
pop
test
mov
ja
jno
pop
into
mov
je
int3
push
or
cwtl
arpl
sub
mov
xor
lea
jp
jl
push
shl
mov
jne
iret
push
popa
mov
sub
jnp
dec
xor
mov
mov
inc
cmpsl
pop
fcomi
mov
cs
call
sahf
xor
pop
mov
push
xchg
js
mov
jl
xchg
mov
or
and
jg
popa
xor
fistpl
xchg
pop
arpl
movsb
add
mov
or
add
popf
xor
fistpll
fsubp
loop
pop
rcrl
adc
lods
xor
dec
xor
cmp
movsb
fucom
cwtl
ljmp
lea
aad
pop
push
aas
add
pushf
test
or
jmp
je
imul
lds
pop
mov
sbb
scas
std
shlb
cld
stos
je
outsl
mov
add
pop
push
ja
jp
inc
repz
repz
loope
add
cmp
mov
pop
aam
add
out
pushf
cmp
notl
aaa
dec
test
pop
les
clc
sub
pop
mov
jecxz
add
out
jecxz
nop
mov
arpl
xor
jp
sti
xchg
gs
push
aaa
ret
out
jmp
mov
psrld
cmpsl
shlb
or
pop
adc
mov
pop
lock
or
outsl
mov
inc
fistl
shlb
inc
inc
and
nop
xor
int3
pushf
pop
mov
mov
out
xor
pop
mov
xor
pop
repz
adc
int3
shlb
mov
int
jae
jmp
cltd
and
push
fdivrl
and
push
or
shlb
inc
jne
pop
lock
nop
adc
push
push
pop
arpl
dec
jbe
loope
and
aaa
es
repnz
sub
fwait
pop
ret
jne
push
dec
jae
add
pop
sahf
xor
gs
cmp
lea
inc
cmp
pop
repz
aam
sarl
push
add
loop
push
jno
mov
cli
mov
aad
loope
scas
xchg
or
mov
pop
add
xorl
jecxz
sub
mov
stc
push
push
jb
xchg
insb
jge
jle
add
outsb
fwait
cli
jb
and
jmp
dec
push
das
movb
outsl
pop
cld
fsubs
rep
cmpsb
sbb
inc
insl
xchg
cmp
push
cmp
ja
pop
jge
jne
je
clc
nop
cmp
mov
rorl
mov
inc
mov
sub
das
leave
lds
fwait
sub
mov
mov
mov
enter
call
adc
inc
test
or
lcall
out
popf
sub
rcll
lcall
inc
cmp
and
adc
lret
data16
xchg
stos
add
mov
pushl
xchg
out
mov
fildll
jp
dec
std
sbb
sub
push
or
sub
lcall
ret
jne
mov
pusha
ret
inc
xchg
cld
addr16
std
add
xchg
add
mov
dec
rclb
push
cs
leave
jb
sbb
int
out
cmp
mov
push
int3
push
sti
push
adc
repz
push
ja
add
pop
mov
cwtl
cmp
mov
adc
dec
orl
enter
lcall
sbb
sub
xchg
push
push
dec
jb
fcmove
lds
jae
jae
imul
rclb
cmp
push
pusha
popf
mov
loop
sbb
rcll
in
mov
mov
out
mov
mov
stos
subb
icebp
push
repz
lods
daa
adc
das
xchg
pop
in
scas
loope
imul
pop
fxch
into
mov
cmp
sbb
push
xor
xchg
int3
mov
push
mov
fs
dec
xorl
scas
sahf
add
push
test
dec
icebp
cmp
pushf
repz
jmp
adc
inc
jno
into
cmp
mov
dec
mov
dec
cmp
xor
test
jg
mov
push
sahf
mov
cmc
mov
insb
cwtl
fiadds
shrb
imul
call
jp
or
test
mov
jbe
xchg
mov
es
mov
push
inc
cwtl
in
fistps
loop
jno
roll
mov
mov
mov
outsl
js
repz
pop
jae
or
cmp
sub
les
or
mov
jp
test
rcr
fnstcw
cmp
aam
push
xchg
out
pop
or
dec
inc
inc
xor
jge
inc
xor
mov
jnp
aaa
cmovns
call
repnz
sbb
imul
cmp
xchg
cld
sbb
aaa
stc
ss
adc
inc
mov
push
imul
xor
jne
mov
lret
push
pop
xchg
out
das
pop
cmc
mov
cmp
shl
das
xchg
pop
lock
data16
imul
adcb
mov
mov
dec
out
mov
pusha
rcr
push
dec
cmpsl
xor
clc
fisubrs
lock
outsl
stc
scas
adc
fwait
dec
lret
stos
aas
call
push
adc
ficompl
push
xor
mov
cwtl
mov
addr16
ds
inc
clc
sbb
xchg
jne
sub
cmpxchg
mov
mov
out
jb
aas
adc
dec
clc
lcall
fsubp
push
jb
lret
jns,pt
cmp
rcr
and
testb
pop
fsubr
mov
ror
arpl
pusha
repnz
fisubrl
jmp
loope
dec
pop
mov
test
dec
push
cmpsb
push
sub
rcll
add
or
cli
mov
jae
sti
pusha
int
mov
mov
test
stc
jns
scas
popf
fmull
mov
cmc
int3
dec
pop
pop
rcll
dec
fcoms
adc
push
cmp
pop
repnz
nop
add
xor
orl
jae
iret
les
int
testb
cmp
loop
addr16
dec
mov
sti
daa
jmp
cmp
icebp
mov
push
cvtps2pd
ljmp
fcoml
sub
in
test
push
dec
pop
sub
jns
rorb
pop
xlat
xchg
out
jge
push
test
xchg
call
adc
cmpsb
pop
sub
cmp
fcmovb
mov
lcall
enter
dec
mov
or
mov
jnp
imul
add
pop
out
push
add
dec
ss
das
mov
mov
xchg
out
std
rcr
lcall
outsl
mov
mov
sahf
sbb
cmp
les
sarl
dec
sub
jnp
scas
mov
cmp
mov
push
movb
test
and
cltd
mov
jno
rcll
sub
int
xchg
repnz
add
ljmp
out
adc
clc
fnstsw
sbb
sti
in
je
aas
lahf
xchg
xor
insb
lock
jg
pusha
insl
jns
iret
mov
add
and
call
fiadds
jmp
cld
sahf
test
das
popa
lods
in
pop
sub
xlat
mov
popf
sahf
and
push
pop
dec
or
pusha
es
dec
bound
sahf
push
sbb
test
loope
xorl
enter
or
stos
ds
stos
jle
loop
sahf
push
xchg
out
ja
js
push
xchg
xor
les
mov
jne
aam
lds
icebp
aad
sub
sti
mov
pop
lea
jbe
push
sub
inc
mov
aaa
inc
ja
xchg
fdivs
push
hlt
stc
add
mov
pop
add
or
mov
and
das
mov
dec
inc
xchg
ss
jmp
outsl
dec
xor
test
push
push
gs
popa
rcrb
js
inc
mov
sub
or
sub
imul
pop
inc
push
mov
das
mov
fdivp
adc
inc
sub
inc
loop
pop
fdivrl
dec
push
and
dec
add
daa
xor
xchg
mov
inc
stos
jecxz
sbb
js
add
pop
sub
mov
rcll
stos
jl
stc
xchg
sahf
shrl
push
mov
and
std
push
sbb
push
or
xchg
xchg
loop
ja
lds
and
push
dec
orb
in
jns
and
lea
test
sub
mull
cld
inc
out
cwtl
mov
test
cwtl
test
xchg
pusha
fists
sti
jg
mov
cmp
dec
iret
imul
repz
mov
test
or
inc
aas
xchg
scas
or
popa
mov
xchg
in
fsubl
cmp
pop
sub
lret
push
mov
pop
in
pop
in
or
stc
mov
hlt
inc
jb
call
iret
inc
shlb
inc
mov
xchg
mov
cmp
movsb
mov
push
adc
mov
pop
int3
xchg
sub
jp
xchg
jb
faddl
movsl
pusha
dec
mov
cmp
fiaddl
fs
sub
lock
shll
add
aad
jp
pop
daa
gs
fsubs
push
dec
fsubl
xchg
mov
mov
mov
call
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
xchg
push
dec
daa
daa
std
addb
or
sub
lret
xchg
xchg
mov
cwtl
into
shl
add
xchg
out
mov
pop
sbb
inc
xchg
clc
jmp
pop
adc
xchg
xlat
adc
insb
fnsave
sti
dec
mov
xchg
movsb
lcall
out
das
mov
mov
jecxz
dec
loope
sub
push
dec
add
xchg
pop
add
icebp
and
and
out
icebp
mov
iret
aad
js
adc
cmp
jl
xchg
adc
aaa
pop
sbb
cs
jbe
sbb
out
add
scas
pop
cmp
push
jle
out
or
push
sub
outsl
sbbb
ret
mov
sub
mull
outsb
hlt
ds
jns
xchg
fistps
sahf
or
lcall
and
pop
xchg
jo
lret
pusha
aam
sub
xlat
call
sti
repz
jp
pop
ss
les
cmc
test
cmp
mov
add
or
mov
jne
cmp
push
add
mov
enter
push
lods
mov
push
insb
push
cli
inc
dec
xchg
sub
xchg
ret
test
pop
clc
test
popa
and
outsl
adc
cli
inc
int
loope
mov
imull
jle
xor
and
pusha
aam
scas
xchg
push
mov
data16
jne
cmp
fnsave
or
inc
aam
stos
push
out
mov
pusha
fstps
int
out
aas
inc
lds
fucomp
movsb
push
pop
mov
sbb
push
stos
xor
sarl
add
mov
lret
sbb
pop
dec
cli
add
or
outsb
out
aas
and
push
cmp
xor
mov
mov
or
aam
jl
cmpsb
cmp
aad
or
mov
xchg
cmp
insl
je
dec
inc
shlb
lret
clc
push
xor
jg
inc
out
insb
cmp
movb
jae
cs
sub
xor
icebp
sub
addr16
mov
aaa
sbb
imull
sbbl
or
xor
cmc
into
stos
push
fisubrl
outsb
pop
cmc
or
inc
test
sbb
daa
fisubs
ss
mov
icebp
movsb
or
aam
mov
lea
cmp
cs
cmp
jno
inc
movsb
inc
movsb
stos
cld
cmp
into
mov
popa
outsl
adc
xchg
jg
add
jns
or
xchg
jns
or
cmpsl
jp
push
imul
add
dec
das
xor
aaa
fbstp
testb
loope
stos
in
call
pushf
mov
push
shlb
or
and
push
sbb
scas
sbb
cltd
dec
cmpsl
jl
mov
adc
dec
sbb
pop
sbb
setp
jbe
sbb
ret
mov
stos
pop
cmp
add
cld
cmc
pop
daa
pop
jno
dec
dec
mov
mov
add
mov
icebp
lret
sub
mov
or
adc
sbb
xchg
cmp
std
inc
daa
adc
sti
mov
lahf
std
int
jnp
movsl
outsb
push
dec
pusha
lcall
arpl
push
xchg
mov
and
adc
lea
mov
pop
test
xlat
sbb
data16
testl
fsubrl
faddp
test
cwtl
mov
pop
mov
mov
lock
aad
inc
fstpl
mov
fnsave
ficoml
jecxz
xor
add
xchg
adc
lock
mov
fwait
jp
push
xor
sbb
pop
xchg
xchg
mov
mov
mov
sbb
cmpsl
movsl
repnz
ret
insl
dec
xor
sbb
mov
jp
push
pushf
es
push
fnstenv
test
xor
mov
fbstp
sbb
mov
push
jp
inc
mov
mov
je
aam
notb
cltd
gs
iret
stos
add
adc
pushf
pop
mov
jg
aas
repz
mov
mov
lret
xchg
cmp
xorl
xchg
pop
ss
dec
mov
mov
fisubrs
sarl
out
loopne
sbb
push
push
insl
xor
out
xor
and
loopne
es
jo
xchg
subb
scas
sub
in
xchg
fnstenv
mov
sub
mov
mov
xchg
lcall
pop
popf
data16
jge
stos
sarb
lds
and
lret
lret
fsubp
lcall
rcl
nop
mov
scas
adc
pushf
loopne
divl
xchg
negb
mov
test
cmp
inc
dec
in
cmp
movsl
add
mov
or
or
es
fsubr
ljmp
incb
sbb
rcrb
cmp
xchg
pop
or
adc
sub
daa
ret
adc
jmp
std
js
outsb
inc
cmc
xchg
inc
sbb
cmp
fiadds
mov
loop
and
into
fs
push
pop
jno
jmp
sub
sub
adc
pop
lock
hlt
mov
mov
popf
psubusb
popa
push
pushf
into
fistpll
sbb
cmpsl
shll
jl
xchg
insl
ja
enter
ss
ficoms
data16
enter
dec
adcb
imul
jo
ret
mov
cmpsb
mov
fldenv
cmp
adc
jecxz
mov
mov
call
jp
sahf
les
les
cmp
xchg
jl
jb
xor
cmpsl
scas
stos
jo
mov
test
inc
outsb
xor
jge
cmp
lea
std
jg
cmpsl
je
lret
movsb
je
repz
je
lretw
jecxz
lea
insl
sub
push
adc
pop
cmpsb
lods
idivb
inc
popf
out
mov
cmp
pop
rorb
in
in
pop
scas
jo
andl
ret
cmc
mov
push
push
inc
pop
stos
aas
lods
add
xchg
incb
xchg
loope
push
pop
or
repnz
test
mov
jbe
scas
roll
testl
xor
adcl
lcall
in
lock
dec
pop
push
inc
clc
or
roll
mov
scas
xchg
pop
lret
sbb
orb
lods
mov
push
cmc
aad
nop
stc
jnp
lcall
xor
mov
mov
sbb
gs
push
faddl
rcrl
and
and
xchg
jbe
add
mov
out
testl
das
mov
push
fcmovne
hlt
lods
movsl
fidivrs
pushl
pop
insl
loopne
add
in
sbb
mov
arpl
lret
movsl
sub
cltd
push
fistpll
dec
sbb
lcall
xor
subb
test
mov
outsb
sub
push
insl
sub
pop
scas
mov
mov
ss
mov
adc
mov
out
cltd
scas
lods
js
arpl
xchg
sub
mov
jp
inc
mov
stos
decb
shrb
push
loope
mov
inc
xchg
stc
std
sahf
test
dec
dec
cmc
loopne
push
xor
ja
out
fwait
dec
mov
pand
sub
dec
and
or
cmc
jae
ds
or
dec
inc
mov
cltd
xchg
mov
jns
hlt
loope
stos
mov
push
pop
fcoml
or
popf
sub
std
adc
es
push
lock
sbb
and
aad
xchg
in
xchg
ret
std
cld
sub
add
movsl
loop
push
jns
mov
mov
lds
cmp
call
lahf
lods
jl
xor
lret
idivl
jge
imul
divb
es
addr16
mov
scas
mov
idivl
rcrl
cmpsb
and
inc
mov
adc
sbb
je
aaa
adcb
loopne
test
jp
mov
sbb
and
ja
and
jp
addr16
jg
jo
pop
insl
add
sbb
ja
jecxz
gs
sub
push
les
mov
xor
into
sbb
pushf
xchg
ja
inc
jno
mov
mov
mov
xchg
or
iret
out
mov
and
sub
jmp
stc
jge
cwtl
xchg
nop
aad
ficompl
add
mov
ja
stos
shr
fs
push
lcall
pushf
pop
cld
cli
sbb
lods
cmc
sbb
call
out
pop
xor
popa
mov
sbb
lcall
mov
add
or
inc
xchg
aam
mov
cmpsl
jmp
xor
adc
jbe
in
mov
nop
or
xor
std
das
xchg
push
adc
and
fstl
dec
lcall
xor
cwtl
jbe
outsb
xor
jo
and
cwtl
jmp
aam
jno
hlt
rcrl
xlat
call
rcrl
xor
xchg
out
lods
add
fwait
in
test
add
lret
jp
inc
add
push
xchg
sarl
mov
pop
inc
cwtl
inc
shr
xor
cmp
mov
and
push
and
insb
mov
pop
mov
adcb
inc
insl
movsl
lds
nop
test
iret
mov
mov
imul
fwait
mov
ja
or
nop
adc
loope
push
xlat
pop
clc
push
loopne
daa
fidivs
xor
ja
icebp
mov
popa
inc
ss
inc
shrb
xchg
xchg
mov
fdivrl
mov
xchg
imull
sub
iret
push
pop
and
dec
or
in
inc
lret
mov
xchg
out
pop
sbb
dec
in
push
dec
push
lock
rclb
scas
aas
xor
dec
push
jmp
out
mov
jb
jmp
sbb
jmp
or
test
cmp
jne
enter
aad
cltd
sti
jl
imul
jg
sub
addr16
adc
lret
push
ret
inc
jno
in
call
cld
test
dec
inc
inc
adc
fdivs
or
rol
mov
stos
fadds
mov
sti
ror
adc
dec
fisttpll
push
xor
fldl2e
in
jecxz
and
std
fisubrl
mov
xchg
jecxz
jle
gs
cmp
rol
pop
outsl
mov
xchg
rolb
cmp
dec
jbe
in
cmp
loope
xchg
or
add
scas
out
or
mov
mov
jecxz,pt
sbb
push
enter
dec
pop
notl
and
mov
daa
mov
pushf
jnp,pn
nop
dec
imul
xor
push
std
faddl
popa
outsb
inc
fdiv
pop
out
stc
jg
not
and
cmp
test
fwait
sbb
outsl
cmp
jg
push
pop
push
pop
in
cmpsb
sub
dec
ficomps
movsb
stos
rcr
pop
int
push
pop
xchg
out
cmp
rclb
mov
cmp
lods
loop
dec
and
int
mov
stos
mov
push
loop
fucomi
out
or
sahf
les
test
add
repnz
mov
pushl
leave
xor
mov
inc
adc
xor
test
repnz
inc
repz
adc
pop
cmp
and
jns
cvttps2pi
push
hlt
dec
mov
test
jle
icebp
lods
in
pushf
outsl
mov
pop
mov
jmp
int3
testl
jnp
ljmp
xor
rol
inc
or
dec
bound
add
mov
subb
dec
and
sub
ds
pusha
int3
int3
outsl
lret
jmp
add
icebp
pop
fstpt
push
mov
xor
push
dec
je
cld
mov
inc
jecxz
jecxz
cmp
sub
fucomip
data16
into
xor
stos
xchg
pop
andb
aam
ja
sub
movsl
sbb
sbb
int3
stc
mov
lcall
shl
cmpsl
mov
ds
outsl
stos
pop
js
nop
loope
add
add
mov
in
lds
icebp
mov
cmp
nop
data16
add
mov
js
daa
stos
cli
leave
test
fistpl
sbb
mov
sub
mov
data16
xabort
int
pop
in
fdivr
fwait
jns
cmpsb
inc
lcall
pop
ds
adc
push
mov
sbb
lds
cmc
xor
loopne
dec
cmc
pop
pushf
jg
pop
mov
std
xchg
pushf
movsb
iret
jns
and
add
scas
sbb
pop
xchg
iret
lock
push
dec
mov
xor
dec
dec
push
jg
jg
and
xchg
ja
fsubrs
inc
ret
mov
into
cltd
push
xor
xor
movsb
out
mov
mov
cmp
pop
inc
cmp
mov
lods
das
aaa
or
aam
mov
pop
pop
adc
faddl
lds
jne
loop
in
icebp
mov
fisubrs
cli
push
dec
push
or
sub
add
es
cmp
fwait
not
xor
jl
cmp
jnp
push
jle
mov
mov
out
mov
daa
xor
cmp
mov
fistl
push
sbb
fidivl
push
jecxz
mov
ja
xor
idivb
lret
mov
in
adc
xor
jne
repz
into
sub
and
sub
add
xchg
dec
and
mov
mov
aaa
jl
arpl
and
sbb
mov
fmull
mov
push
sub
adc
das
add
xlat
ds
xchg
movsb
jmp
or
hlt
mov
andl
data16
cmc
clc
mov
inc
sub
sahf
mov
fwait
sbb
add
jle
out
jl
fmull
push
pop
ja
call
iret
mov
push
test
or
add
fiaddl
push
mov
fcoms
sbb
sub
jnp
mov
int3
popf
aad
jp
subl
mov
pusha
loope
lcall
sahf
xchg
xor
fstl
mov
jmp
or
fsubrs
sbb
fs
push
arpl
add
jecxz
adc
push
dec
add
bound
stc
shr
inc
mov
frstor
push
add
in
push
mov
test
out
es
out
adc
shlb
adc
stc
test
cmp
cmpsl
mov
insb
push
enter
lcall
mov
push
jp
rorb
mov
inc
adcl
sbb
in
mov
pop
je
xchg
or
mov
scas
dec
sbb
lret
pop
cmpsb
xor
and
sti
idiv
mov
jge
lock
movsb
fstps
out
aad
add
mov
mov
pop
xor
out
cmp
mov
out
fst
out
push
nop
or
inc
xlat
lods
pop
dec
inc
xchg
pop
in
jle
das
xchg
lret
xor
inc
test
mov
mov
in
lods
divb
xchg
push
sbb
movl
cmc
add
bound
adc
loopne
mov
push
bound
fidivl
into
cld
insb
scas
cli
xchg
je
add
or
xchg
test
cld
ffree
adc
sub
rcl
mov
pop
imul
push
or
xor
aas
adc
hlt
jns
push
lret
dec
enter
adc
mov
jg
add
cmp
mov
push
sti
mov
push
int
sti
pop
sbb
subb
data16
adcl
sahf
xchg
push
fcomp
mov
fisttpll
dec
cld
sub
icebp
pop
adc
pop
iret
js
outsb
mov
adcl
nop
jbe
adcl
fcomps
inc
addr16
mov
call
push
icebp
lock
mov
insl
mov
or
cmpsb
and
ss
mov
push
out
pop
orb
xchg
xchg
cld
stc
in
push
cltd
push
fwait
pop
xor
dec
setae
sbb
jno
test
mov
lods
enter
push
and
dec
dec
pop
and
pushf
push
add
fnsave
shl
xchg
push
repz
pop
pop
rorb
cltd
lret
xlat
lahf
add
sbb
add
arpl
push
jno
add
sti
mov
icebp
cmp
mov
mov
add
movsb
xorl
mov
pop
bound
lock
jge
jl
sub
mov
int3
mov
xchg
nop
xor
outsl
inc
scas
in
or
and
lods
xchg
sbb
xor
sub
xchg
insb
out
sti
jl
inc
xchg
xor
pop
jge
pushf
icebp
sbbl
scas
fidivl
sbb
push
test
arpl
and
call
push
je
and
pop
lret
inc
std
addb
stos
add
pop
and
mov
fs
rclb
in
pop
mov
sub
jb
jecxz
jne
insb
mov
sbb
nop
push
jo
fnsave
mov
cld
stos
cmp
pop
xor
adc
add
cli
cmp
loope
jbe
cld
into
xorl
mov
sbb
jns
mov
sbb
mov
jecxz
add
sti
fidivrs
das
jmp
decb
fcmovne
popf
lock
or
jecxz
stc
xor
mov
mov
sbb
jmp
in
sub
aas
and
repz
jnp
mov
aad
mov
sahf
bound
int
ret
repnz
sahf
cmpsl
add
jle
mov
xor
jbe
sub
jecxz
pop
sbb
mov
scas
inc
sbb
inc
aad
pop
pop
sub
jmp
sbb
sub
mov
sub
and
sahf
sbb
popf
add
stc
jmp
insl
insb
mov
mov
xor
ds
jnp
or
xlat
jne
arpl
jo
xrelease
scas
test
cltd
sbb
push
mov
xchg
pop
insb
push
es
dec
push
sahf
cmp
push
push
add
inc
divl
dec
adc
loop
mov
lret
std
mov
repz
push
mov
add
and
or
push
mov
sbb
xor
xor
in
iret
cmpl
outsl
push
lahf
testb
lret
ja
fmuls
xchg
jb
pop
push
ljmp
movsl
inc
inc
js
subb
cmp
sub
push
enter
sbb
lock
call
cmpsb
iret
adc
adc
lahf
push
mov
pop
xchg
ljmp
mov
sar
xchg
outsl
in
shrb
jecxz
dec
push
push
mov
test
or
rcrl
dec
es
and
and
dec
cli
fcoms
push
jecxz
mov
rol
nop
ss
cs
roll
mov
push
add
or
cmc
xor
mov
arpl
daa
cmp
cs
mov
lock
dec
push
repz
stos
sub
mov
fwait
cmp
in
adc
es
sub
cld
push
and
pop
or
enter
add
jl
repnz
cwtl
adc
push
test
aas
repnz
mov
sbb
imul
cs
jmp
js
cmp
repnz
mov
add
roll
into
int
shll
mov
jns
sbb
xor
divb
sbb
aam
cmpb
std
xchg
sub
push
movsl
lahf
popf
imul
leave
fldenv
aad
imul
call
push
fstps
dec
out
inc
cltd
sub
pusha
jl
mov
xor
jmp
xchg
and
orb
mov
xchg
jns
ret
scas
sti
xchg
push
or
jg
inc
mov
mov
pop
add
in
xorl
inc
lds
pop
mov
cli
mov
xchg
pop
push
inc
and
pop
xor
jb
scas
mov
ficomps
cmpsb
aaa
mov
cld
stos
xchg
push
xchg
and
leave
cli
aad
dec
in
xor
lahf
shll
sub
mov
adc
loopne
loopne
test
xchg
dec
mov
xchg
ror
or
fidivrs
add
je
lret
jmp
and
rep
mov
movsb
xchg
arpl
mov
dec
pop
ror
faddl
shrb
sub
and
inc
add
in
fcmovu
data16
mov
push
inc
cld
inc
cmp
jmp
js
nop
xor
sbb
push
cmpsb
int
or
in
test
in
addr16
push
mov
xchg
add
shl
add
ja
int3
pop
and
cmpsl
insb
sete
dec
in
adc
imul
jmp
add
and
xlat
test
xor
ja
addl
jecxz
int3
mov
and
fidivrl
adc
cmp
mov
lods
std
stc
lock
push
lahf
rolb
cmp
fs
testb
das
xor
imulb
or
inc
mov
fsubrs
jmp
mov
cmc
pop
pop
inc
dec
popf
mov
jae
push
push
popf
pushl
inc
push
jo
mov
iret
push
xor
sbb
mov
loope
lcall
gs
inc
inc
xor
adc
dec
fst
push
cwtl
dec
inc
clc
pop
jp
jmp
cmp
enter
dec
rol
push
loopne
sub
jp
push
mov
cwtl
icebp
and
rcrl
test
in
lcall
clc
or
aad
mov
aas
gs
sbb
rep
es
movsl
fwait
xchg
mov
das
fildl
imul
pop
sub
lods
ds
fisubrs
sub
dec
mov
xchg
and
out
cmpsb
rcl
xor
out
jb,pt
cmp
xchg
scas
mov
test
add
adc
outsb
aaa
jecxz
inc
or
stos
mov
shr
jp
xchg
xchg
sbb
jg
mov
idivl
xchg
cmp
outsb
pop
jg
inc
std
in
jmp
shll
mov
shlb
lcall
ljmp
decb
mov
idiv
stos
stos
jbe
or
dec
jg
xor
xchg
je
jo
insb
std
lods
sub
pushf
addr16
or
cmp
loop
addl
nop
std
rol
inc
jo
frstor
cld
arpl
push
pop
pop
mov
cmpsl
push
stos
repnz
push
fsubl
pushl
out
push
cmp
xchg
cmp
hlt
das
push
out
imul
xchg
jge
rcl
cmp
push
push
or
inc
sbb
fs
test
inc
mov
xchg
pop
jnp
or
mov
xchg
add
idiv
loop
mov
aad
mov
jno
jnp
mov
or
fldl
aad
imul
lods
pop
lods
sub
stos
and
mov
cmc
rol
mov
mov
inc
pop
rcll
int
cmp
repz
cmpsl
mov
xchg
or
inc
jb
sti
inc
rorl
scas
cli
sub
ds
and
test
lds
fstpl
push
or
mov
loope
xchg
or
stos
ds
sti
out
mov
sbb
pop
arpl
sub
stos
mov
in
jecxz
loope
ficoms
jmp
mov
das
adc
call
xor
jl
jg
mov
loopne
sub
cmp
jge
call
mov
push
dec
insb
in
mov
add
jmp
repnz
mov
faddl
or
jb
inc
push
sub
dec
xchg
cwtl
mov
pop
cmp
dec
cld
loop
inc
outsb
fwait
fsts
cmp
aad
xchg
pushf
ss
jae
leave
fldcw
sbbl
cli
fsubrs
add
es
pop
call
push
push
add
popf
fs
rolb
jl
stos
pop
inc
xchg
rolb
mov
and
mov
jl
mov
stos
mov
adc
jne
push
rol
stos
mov
push
or
mov
cmp
mov
fninit
inc
push
aam
or
push
clc
leave
mov
mov
lea
into
or
jmp
sub
fimuls
mov
or
mov
push
lahf
cmpsb
adc
test
push
lods
xor
mov
incb
fstl
dec
sti
cld
roll
fucomi
mov
call
sub
sbb
adc
movsb
in
dec
popa
mov
and
inc
bound
out
pushf
inc
lahf
sub
in
mov
pop
inc
testl
jo
divl
sub
cwtl
jge
push
dec
mov
cmpsb
cltd
popf
and
xorb
mov
push
inc
cmc
or
sub
lea
jle
and
adcb
bound
hlt
sarb
inc
cmp
sub
or
add
out
das
nop
jae
shll
lea
jne
cmp
mov
popa
push
es
add
stc
das
daa
mov
loope
dec
ljmp
pop
rolb
out
iret
lock
mov
loop
cli
in
pusha
es
lods
cmp
jle
xchg
mov
out
bound
mov
bnd
mov
xor
int3
pop
loopne
jmp
stos
xchg
das
mov
inc
mov
and
sub
xor
outsl
ds
mov
leave
adc
xor
jg
test
in
ds
notl
dec
repz
imul
sti
push
jne
xchg
scas
sub
scas
mov
xlat
mov
iretw
add
movl
jnp
int3
pop
out
pop
pop
std
dec
add
fs
adc
xchg
cmpsl
inc
subb
jns
jae
adc
pop
ljmp
test
add
add
jo
bound
frstor
pop
insl
mov
xor
pop
lods
sbb
pop
xchg
stos
dec
dec
mov
sub
jo
sbb
push
aam
inc
int
jno
popa
xor
cmp
aaa
fldl
imul
call
cmc
sub
scas
mov
inc
mov
int3
jb
stos
and
cs
mov
and
mov
shl
sub
testb
inc
pop
stos
xor
adc
inc
lds
push
test
int3
cmp
dec
mov
fsubrp
popf
cmp
lds
xchg
outsl
stos
sub
lret
pop
mov
push
es
movsl
adc
push
loope
mov
cmp
enter
jne
jo
adc
cmp
pop
loope
cmc
roll
out
hlt
jl
test
inc
loope
cmp
or
bound
jae
pushf
mov
jmp
stos
es
and
decb
test
sbb
mov
cmp
sub
loopne
or
jns
cmpsl
or
lret
leave
xlat
or
sbb
jnp
outsl
cmp
test
mov
std
aad
loope
cmp
mov
inc
xor
mov
jns
xor
es
lcall
fmul
lea
rdmsr
stos
sbb
jb
andl
test
mov
jno
mov
or
shl
lret
dec
out
add
or
add
push
sbb
mov
mov
fcomi
and
movsb
mov
adc
imull
pop
and
cld
xor
add
xor
xlat
test
mov
fs
xor
sbb
xor
dec
mov
pop
xor
jno
in
pop
mov
mov
xor
scas
ja
lds
dec
je
push
repz
roll
mov
stos
mov
cmp
fst
xchg
adcl
xor
mov
ss
mov
fisttpll
cmp
cmp
fidivl
lahf
push
mov
add
adc
sbb
xchg
dec
into
jmp
adc
cwtl
cs
lahf
jle
sbb
xor
or
xor
adc
mov
or
inc
mov
gs
or
pop
and
outsb
sub
jp
dec
xchg
push
sbb
cs
mov
and
dec
ret
out
ss
mov
jns
mov
sarl
push
adc
push
cld
push
mov
pusha
xor
xorl
push
iret
ja
jb
add
shld
imulb
push
xor
flds
mov
or
in
out
mov
jno
sahf
stc
sahf
loopne
and
shrb
pusha
or
ds
ret
flds
inc
loope
xchg
and
ror
lock
mov
inc
dec
lods
mov
xchg
inc
xorb
or
xor
stos
sbb
dec
mov
fstps
dec
mov
test
pop
mov
sbb
fs
ret
std
lahf
bound
dec
or
and
test
repnz
popf
cmpsl
aad
and
rcll
xor
sub
lods
cli
or
xchg
push
jl
ljmp
adc
data16
inc
test
mov
bound
jo
jnp
cmpl
out
xchg
or
adc
jno
push
push
mov
pop
mov
jl
mov
adc
pop
shrb
jle
sbb
pop
add
ret
inc
fadds
addr16
mov
and
pushf
sahf
iret
cmp
lods
mov
add
lret
loopne
stos
xlat
push
loope
cmp
mov
scas
aad
je
adc
dec
pop
push
bnd
inc
fcomi
divl
cmpsb
cmp
dec
lods
inc
pop
sbb
call
aas
leave
pusha
pop
sti
stc
lcall
add
push
fwait
push
mov
cmpb
jl
push
in
outsl
lcall
pop
mov
lds
adc
hlt
dec
add
jg
clc
sub
mov
cs
es
aad
mov
test
mov
outsb
mov
fbstp
inc
in
sbb
sbb
dec
push
test
or
cmp
inc
daa
aaa
lds
lods
lcall
out
push
and
mov
fldl
sub
sahf
loopne
popf
pop
inc
sub
push
std
sub
iret
adc
jo
or
dec
arpl
sti
xor
ja
jl
xchg
repz
pop
jnp
test
ja
popf
xchg
sub
nop
cmp
das
into
mov
mov
cltd
repz
mov
dec
pop
mov
movsb
in
ror
ds
test
pop
push
sub
push
pop
clc
push
mov
ds
mov
lcall
xor
sbb
add
cmc
cli
fadds
fsubrl
int3
lret
loop
adc
shrb
jo
mov
or
lret
aaa
pop
jnp
cmc
cmpsl
gs
inc
sub
dec
inc
mov
inc
addl
adcb
inc
leave
sub
insb
icebp
mov
sbb
call
test
adc
and
add
dec
add
mov
gs
push
rcl
test
add
mov
out
je
mov
adc
push
cmpsb
lods
faddl
lcall
push
cmp
or
lahf
ret
dec
mov
imul
pop
or
mov
sub
icebp
dec
out
adc
and
cs
sub
push
pop
inc
sbb
mov
js
pop
push
mov
cltd
cltd
xchg
hlt
mov
lea
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
or
xchg
fiaddl
orl
imul
sti
in
sbb
sub
lock
pop
cwtl
mov
negb
jge
es
cmp
lahf
cwtl
mov
mov
inc
cmp
xchg
xchg
add
nop
mov
jge
cmp
cmp
sub
and
popf
stos
dec
daa
or
adc
push
mov
shrb
stos
rcrl
fucomip
rclb
inc
xor
and
or
adc
pop
inc
jno
pop
sub
xchg
inc
lods
cli
imul
xchg
ret
ds
and
jge
xor
je
je
scas
orb
dec
xchg
xor
lahf
push
push
insl
or
cmp
je
lahf
rcll
test
cltd
cmc
push
cmp
mov
add
fcoms
test
hlt
mov
pop
xchg
mov
add
dec
sbb
ljmp
loopne
sbb
and
pop
cli
push
test
in
cwtl
roll
push
loopne
jb
pop
and
aad
mov
sbb
jns
cmp
add
pop
mov
inc
aaa
mov
ljmp
in
mov
mov
insl
les
inc
ss
cmpsl
dec
iret
fstpt
xchg
mov
mov
icebp
clc
jge
popf
fsubs
fnsave
imul
fisttpl
or
cmp
sahf
outsl
mov
pop
cli
mov
xor
xor
add
mov
xchg
in
mov
inc
mov
push
gs
xor
adc
lahf
stc
gs
cmp
fcomip
cmpsl
movsb
push
add
fdivs
adcb
repnz
mov
cmp
les
jae
xor
xchg
inc
mov
xchg
les
sbb
fidivrs
mov
sub
and
xchg
aas
pusha
mov
out
inc
ficomps
ljmp
fwait
es
stos
or
inc
jo
mov
dec
sti
mov
scas
xchg
mov
inc
inc
or
xchg
mov
popf
cld
cmp
lea
adc
sub
inc
movsl
and
test
pop
jp
sbb
xor
and
pop
cwtl
or
or
rorl
pop
inc
fwait
sub
nop
xchg
pop
add
add
imul
int
mov
test
xchg
adc
int
rol
or
mov
clc
ret
jno
inc
adc
cld
pushf
sbb
outsl
add
sub
push
stos
cmp
sbb
pop
sbb
dec
cmpsb
dec
ret
mov
stos
push
mov
add
and
xchg
or
pop
mov
scas
fildl
fdivrl
xchg
mov
jae
pusha
lods
int3
rorl
and
stos
cmp
adc
and
xor
adc
mov
xchg
sti
bound
rclb
jno
mov
and
out
dec
aaa
adc
xor
xchg
cmc
fwait
sub
aas
fidivrl
xor
xchg
jo
ss
std
dec
sub
mov
xor
and
pushf
clc
lds
mov
and
scas
sub
xlat
aad
rcl
pop
or
aam
jmp
push
movsl
lret
xor
xchg
dec
inc
scas
enter
es
xor
jmp
xlat
xchg
test
mov
dec
int3
test
mov
test
cmp
xor
in
mov
pop
ljmp
ret
add
sti
push
add
xlat
test
push
sub
imul
stc
sbb
rcr
pop
adc
aaa
scas
imull
subl
pop
cli
sub
mov
ja
or
dec
fcoml
adc
test
test
pop
inc
lret
les
out
dec
xor
mov
inc
cmp
jecxz
push
aad
fldt
inc
movsb
es
clc
data16
sbb
pop
inc
inc
push
test
inc
xchg
adc
out
xor
sbb
insl
inc
sbb
sbb
push
mull
mov
ds
push
sub
mov
jp
sub
js
add
fisubrs
xchg
mov
mov
jmp
fldenv
fsubl
pop
push
mov
xor
sub
sahf
add
sub
insl
and
stos
scas
xchg
in
and
mov
idivl
popf
xchg
cmp
mov
mov
loopne
negb
sbb
out
push
aad
lds
sbb
lods
sub
in
das
sub
dec
dec
shlb
and
add
xchg
cmp
xor
cmp
sbb
push
test
test
loopne
add
xchg
insb
loopne
add
xor
fistl
call
push
or
sub
ret
cmp
jmp
fs
sbb
jecxz
xchg
movl
adc
js
aas
dec
hlt
add
stc
insb
mov
mov
jae
in
enter
mov
lret
jo
or
sbb
cli
add
jecxz
leave
neg
pop
xchg
fcomps
cli
aaa
out
push
lods
ja
pop
addr16
mov
movsb
mov
cli
stos
dec
in
lahf
and
outsb
mov
lahf
lahf
add
js
sbbl
xorb
sti
inc
call
stc
cmp
adc
js
call
xorl
enter
jecxz
xchg
arpl
mov
xchg
jns
push
sub
leave
mov
inc
xchg
pusha
xor
pop
or
pop
dec
jmp
imul
clc
movsl
add
in
sbb
cmp
cmp
lret
test
inc
popf
xor
xchg
std
inc
inc
pop
cmp
insl
xchg
jae
out
es
xor
add
sub
mov
shrb
dec
cmp
xor
push
daa
cmp
mov
les
orb
cmp
pop
shl
pushl
fwait
mov
popf
scas
fidivrl
sbb
inc
stc
repnz
nop
cld
fs
loope
mov
jl
push
pop
or
fcmovne
mov
fwait
test
xor
in
xchg
adc
enter
jl
jge
pusha
and
int3
sti
lret
inc
mov
jae
sbb
jbe
shl
inc
insl
adc
lock
shl
leave
push
inc
cmovs
mov
and
ljmp
shrb
pushl
aas
test
dec
fildl
repnz
enter
popa
xor
cli
dec
cli
sbb
push
adc
mov
mov
aam
pop
subb
mov
push
jmp
jo
test
iret
fucomi
mov
inc
scas
jne
movl
jb
shl
in
mov
das
test
addb
sub
sub
nop
sub
mov
loopne
fsin
dec
pop
addr16
sbb
ja
jnp
cs
sbb
mov
push
xchg
cmc
jge
subb
movsl
icebp
xor
ffreep
push
pop
fisttpl
sub
popf
or
push
dec
fisttpl
nop
insl
out
daa
imul
add
xchg
pop
es
fsubp
push
ficoms
jl
mov
or
xor
movsb
fdivl
push
movl
shrb
into
xlat
lcall
jle
adc
xor
mov
pop
cmp
add
lret
push
stos
scas
inc
and
stos
sbb
sub
sbb
test
sbb
test
out
adc
mov
sbb
mov
and
push
out
int3
gs
and
mov
dec
rcll
cld
shll
in
cwtl
iret
decl
jb
fbld
out
xchg
mov
push
mov
inc
movhps
xchg
adc
inc
inc
lahf
movsl
cmp
in
lock
jns
mov
pop
mov
lret
sbb
push
and
or
movsb
clc
xchg
stos
shll
cmp
mov
jge
movsl
loopne
xchg
loop
cmpsb
push
inc
dec
adc
mov
sbb
jl
leave
in
mov
addr16
sarl
mov
mov
lock
aaa
mov
jp
enter
or
sbb
hlt
dec
fwait
xchg
lock
dec
ja
dec
leave
xchg
cli
call
push
xor
cmpsl
cli
xchg
and
add
xchg
fimuls
cmp
das
icebp
fbld
aad
les
pop
sbb
ret
mov
test
out
je
imul
rolb
outsl
adc
sbb
cmp
xor
es
mov
dec
inc
adc
push
cmp
idivb
imul
addr16
dec
sub
test
inc
or
mov
jb
aad
mov
out
inc
push
inc
pop
push
enter
sub
jp
in
jle
fdivs
and
inc
mov
adc
movsb
mov
inc
sbb
stc
pop
xor
mov
clc
xor
jno
xchg
add
testl
push
xchg
movsl
push
push
fsubp
jae
cmp
addr16
iret
aam
repz
out
sti
jo
push
loopne
out
xchg
xor
jns
fld
push
mov
imul
fsubl
andl
fneni(8087
jle
out
mov
pusha
adc
in
jb
pushf
outsb
shl
xchg
ret
jp
mov
mov
loop
xchg
clc
popf
inc
arpl
dec
ds
fsubrl
int3
mov
jge
mov
shr
cld
lock
movsb
adc
sbb
in
xor
lret
iret
fs
mov
mov
lcall
jg
adc
in
xor
dec
and
sbb
mulb
adc
outsb
jp
cmp
movb
xor
push
sub
notb
add
dec
js
push
fistpl
sub
in
aam
add
sar
arpl
icebp
mov
pop
aas
not
out
lret
push
das
cmc
mov
mov
fnsave
inc
aaa
mov
xchg
sahf
cmpsl
std
test
sbb
clc
insb
std
ror
outsb
stc
pcmpgtb
test
xor
lods
repnz
xchg
sbb
and
cmp
aaa
xchg
int
cmpsl
add
mov
rcrb
mov
enter
push
mov
cmc
mov
mov
pop
and
loop
sahf
and
pop
stos
leave
ds
xchg
sbb
jnp
xchg
rcrl
notb
mov
adc
sarl
jg
sbb
mov
xor
jge
cmp
in
test
std
sarl
add
cmp
sti
jmp
adc
mov
nop
and
add
cmp
dec
mov
and
pop
or
in
outsb
sub
loopne
cld
ret
mov
in
dec
scas
and
ret
pop
das
inc
repz
loopne
aas
cs
xor
out
dec
jl
clc
ss
adc
mov
dec
mov
sarl
cld
out
add
ss
pop
xor
sbb
push
dec
or
xchg
pop
jno
aas
addb
sbb
lea
mov
loope
fsub
inc
je
and
push
fistl
repnz
stos
pop
and
xor
push
fld
and
push
xor
pop
fcoml
cmp
fcoml
int
sub
mov
cli
mov
sub
pop
outsb
mov
adc
and
repz
lahf
movsb
jge
xor
mov
dec
pop
int3
mov
jae
inc
mov
add
repnz
xchg
ret
jb
push
pop
rcr
push
pop
aam
cmp
orl
into
xchg
stc
jo
daa
adc
mov
adc
mov
out
sbb
and
roll
outsb
push
lods
addr16
scas
mov
mov
cmp
in
outsl
shl
sbb
pop
leave
std
test
fisubs
loop
jae
pop
push
aaa
sub
cmp
rcll
popf
or
sub
enter
add
sub
daa
cltd
mov
or
xchg
xchg
pop
das
stc
xchg
test
test
enter
sbb
sarl
xchg
inc
mov
xchg
out
dec
adc
fprem
push
repnz
mov
pop
sti
add
xor
and
call
mov
or
enter
imul
mov
notb
push
test
addl
pop
cmp
int
pop
enter
or
xchg
les
jge
jb
or
xchg
shlb
mov
es
xchg
sub
lods
lock
leave
hlt
dec
das
add
lock
test
dec
nop
sbb
fdivrl
jle
in
negb
jmp
rcrl
negl
movsl
or
mov
mov
cs
mov
dec
mov
mov
ret
or
add
push
fistpll
sbb
ficomps
xorb
ja
fdiv
xor
push
pop
in
nop
ds
stc
sub
lahf
adc
repz
xchg
or
inc
out
and
xchg
jle
lea
jno
nop
shll
mov
bound
cmp
hlt
fsubl
sub
and
int3
xchg
mov
sti
cmp
aam
cmp
mov
and
dec
pop
pop
rcrb
jae
shl
pop
imul
icebp
pop
dec
add
aas
fwait
fwait
int3
mov
outsb
sub
dec
je
or
jnp
sub
mov
rcr
mov
and
in
sti
xchg
call
pop
fldt
mov
xor
aad
push
shll
in
sbb
and
xor
push
roll
mov
pop
jmp
cli
das
xchg
and
out
and
insb
jae
fcompl
xor
jae
in
adc
adc
sahf
adc
in
or
jl
pop
pop
sub
jge
xchg
mov
and
outsl
lea
cmp
ds
addr16
loop
cmpb
and
mov
popf
or
aam
fwait
outsb
dec
pop
cmp
flds
adc
cld
cltd
sbb
test
iret
mov
inc
mov
popa
gs
cmpsl
shrb
xchg
fidivrl
ret
or
jmp
mov
mov
jb
rcrb
test
xor
sbb
data16
cmp
insl
cmc
or
fcomp
jge
std
mov
cmc
fistl
call
dec
xchg
stc
ret
lcall
lea
sub
out
cmp
test
inc
jmp
loop
push
fwait
xor
and
std
adc
fcmovne
scas
sbb
into
and
in
rcrb
scas
mov
sbb
cmpsl
aaa
cmp
test
rorb
test
push
call
in
pop
add
mov
dec
inc
nop
mov
int3
sub
mov
push
push
test
lahf
dec
rcll
bound
adcl
xchg
jbe
xchg
inc
add
jecxz
int3
dec
sub
int
nop
push
rorb
mov
mov
dec
cmp
xor
xchg
xor
arpl
test
loopne
es
dec
bound
sbb
cltd
mul
mov
pop
dec
push
push
je
sub
xor
test
add
hlt
stos
movsl
sub
push
mov
leave
push
outsb
cli
sbb
push
shrb
sbb
andl
or
inc
sbb
mov
mov
jecxz
pop
aaa
sbb
xchg
jo
aad
jecxz
cmp
xor
call
scas
addr16
jecxz
lret
or
scas
lock
ret
or
iret
in
push
push
or
xor
aaa
dec
mov
jo
or
aas
roll
pop
dec
xor
gs
dec
in
cmpsb
xchg
test
push
adc
loope
sub
ja
mov
xchg
and
mov
cmp
dec
mov
pop
aaa
adc
popf
lcall
xorb
stc
je
mov
sub
les
pop
ret
enter
pop
cmp
nop
push
int
jmp
cs
pop
inc
int
lds
push
cmp
std
stos
out
xor
jmp
lock
mov
cs
dec
pop
notb
mov
ret
inc
loopne
in
jo
add
pop
int
or
xchg
xchg
cmp
lret
push
lock
cmp
nop
shrl
ja
repnz
or
sbb
or
in
test
inc
rcr
pushf
int3
out
insl
adc
sub
mov
or
xchg
jp
rcl
outsl
rorl
inc
sub
adc
or
dec
pushf
xor
lret
pop
rclb
push
sti
jmp
jo
scas
in
addr16
cmp
mov
out
mov
mov
and
in
scas
fwait
jmp
jae
cltd
or
div
push
sbb
mov
je
movsb
insl
jnp
popf
rorb
enter
movsl
mov
pop
mov
adc
mov
xor
cmp
or
cwtl
mov
iret
flds
sub
jno
jecxz
fs
xchg
and
lcall
adc
imul
pusha
add
js
repnz
nop
test
push
jle
sbb
aam
clc
dec
inc
mov
iret
insl
mov
sarb
mov
movsb
mov
adc
push
pop
shlb
or
and
out
cmp
lret
push
stos
add
mov
mov
jbe
addr16
push
cmp
xor
pop
dec
sub
and
sub
fisubrs
fsubs
jg
call
shr
cwtl
data16
xchg
xor
sub
sub
lods
add
cmp
sub
iret
pop
and
es
cli
in
and
mov
fstpl
movsb
mov
and
sbb
arpl
int
repz
mov
sub
fisubrl
add
lods
push
das
push
add
xchg
mov
sti
mov
jge
aaa
cmp
xchg
adc
jns
adc
loope
sbb
fwait
lret
and
jnp
dec
cmp
test
shr
add
cs
and
mov
jg
imul
sub
jns
cmp
jge
adc
fdivr
pop
cmp
aaa
jne
jne
and
xchg
and
or
subb
cltd
popf
xchg
fcmovnbe
and
xchg
ja
int3
dec
adc
cmp
lcall
lcall
inc
filds
inc
push
adc
pusha
out
out
test
test
sti
sbb
and
notl
daa
addr16
fistps
cmp
ja
lods
xchg
sub
rorl
xchg
cmc
fimuls
xchg
incb
push
sbb
and
pop
push
lds
sbb
xchg
popa
dec
mov
or
icebp
jg
adc
test
inc
fwait
aad
testl
rcl
mov
xor
xchg
clc
adc
push
xchg
cmp
or
push
imul
push
imul
jne
mov
xchg
fwait
jge
vpsubq
pop
call
jbe
fwait
push
js
mov
mov
xor
sbb
dec
push
or
xchg
jae
jbe
loop
pusha
mov
ret
leave
fisubs
lea
mov
enter
les
idiv
cli
adc
call
mov
cmp
mov
adc
stc
movsl
sub
jns
std
jno
push
test
mov
fdivs
ss
pop
mov
add
pop
sbbb
fstps
inc
dec
lods
pop
add
in
or
xor
jnp
push
push
lret
jp
pop
jae
mov
add
arpl
push
and
ja
pop
xor
aad
subb
mov
outsl
cmp
or
idivb
sub
xchg
fs
scas
cmp
add
push
adc
aam
lock
jae
mov
icebp
jmp
sbb
aaa
mov
ret
mov
or
xchg
push
sbb
icebp
out
push
ljmp
loop
sbb
stc
cmc
jg
stc
clc
cmp
fsubrs
test
xor
aas
lea
out
test
add
mov
jge
or
lret
cmp
in
add
sub
xchg
inc
jmp
movsb
lods
mov
mov
leave
cli
xchg
jmp
push
inc
movsb
xor
mov
mov
mov
out
daa
cmp
fimuls
or
mov
fldl
cmp
out
or
inc
into
sub
pushf
add
lret
mov
mov
adc
stc
pop
mov
xchg
out
sbb
pop
decb
mov
lds
fadds
push
lods
into
pusha
inc
mov
mov
das
bound
out
add
test
adc
mov
jae
pusha
xchg
movsl
inc
in
aas
out
jbe
mov
mov
lcall
pushf
mov
ret
test
ret
jne
push
and
faddp
jae
lret
sahf
in
in
xchg
ss
sub
daa
daa
js
jmp
test
or
push
mov
ret
cld
test
int
jmp
cmc
lahf
adc
fwait
dec
or
cltd
andl
mov
outsl
dec
push
aad
push
outsb
in
test
ja
dec
or
mov
icebp
push
aaa
inc
lret
mov
inc
adc
fdivrl
iret
mov
inc
adc
push
dec
mov
dec
or
cmc
outsl
xchg
cwtl
adc
jp
scas
adc
mov
out
es
dec
push
mov
aad
pop
lods
sbb
notl
ret
mov
movsb
aas
loop
outsb
pusha
arpl
cmc
jg
test
popa
loopne
lods
xchg
sbb
testl
mov
inc
fisttpl
xchg
xor
jo
movsb
lea
xorb
flds
jg
push
fisubrs
cmpb
add
ret
mov
xchg
cmp
stos
push
loop
lret
mov
aam
xchg
xchg
popf
lahf
inc
stos
loope
sbb
mov
les
sbb
insb
sub
cmp
iret
stos
push
or
jnp
orb
pop
sub
fisubrs
leave
pop
fmul
fbstp
pop
shlb
mov
xor
out
je
int
mov
rcll
push
pushf
pop
sahf
mov
dec
cli
ds
stos
std
pusha
test
pop
rdpmc
add
mov
sub
repz
dec
or
outsb
inc
or
loopne
lcall
jecxz
jmp
sbb
pop
push
imul
lods
jae
lods
mov
mov
inc
xor
xor
push
xchg
jp
sub
push
lea
stos
xlat
pop
sbb
sbb
mov
pop
lea
push
fidivs
push
iret
inc
mov
mov
mov
sbb
fdiv
and
sub
pop
mov
add
shl
test
aam
jp
jnp
repnz
pop
stc
fistl
mov
mov
dec
es
jge
fistpl
jl
mov
adc
mov
xor
fwait
fs
pop
fsubr
fwait
movsl
add
popf
outsb
lods
adc
push
xchg
bound
cmp
xchg
loop
js
jg
cmp
add
outsl
les
test
loopne
shl
add
sahf
xlat
inc
dec
pop
mov
ret
in
daa
dec
shll
xchg
xchg
xchg
push
add
test
cwtl
lods
mov
je
out
notl
mov
mov
test
pop
mov
adc
pusha
out
mov
nop
xchg
push
out
fsts
imul
addr16
insb
aad
sub
push
pop
lcall
jecxz
test
pop
push
xchg
and
int3
popl
push
mov
stc
jle
mov
inc
shlb
sti
or
push
cmc
mov
arpl
pop
fwait
push
cmpsl
cmp
add
or
lods
inc
outsl
scas
mov
mov
int3
inc
pusha
xchg
insb
xor
add
stos
je
nop
adc
clc
lcall
aam
fsts
jae
xchg
popa
pop
push
mov
jo
xor
stos
adc
bound
jae
aam
pop
lds
lret
pop
adc
loope
jmp
sub
bound
ret
dec
dec
adc
jns
cmp
clc
lock
pop
rcll
loopne
pop
sbb
adc
mov
jb
lahf
lods
pop
incb
push
enter
in
mov
pop
test
sahf
jmp
stos
shl
sub
jl
xor
pop
and
enter
jp
imul
pmulhw
jbe
sub
mov
add
push
bound
sbb
in
popf
dec
fisttpl
push
xlat
gs
stos
push
pop
mov
cmp
mov
xchg
push
sbb
out
push
shrb
push
pop
pop
hlt
lock
aad
std
mov
cmp
addr16
jnp
loope
inc
xor
sahf
cwtl
sub
dec
out
xor
add
adc
lock
dec
or
xor
mov
sbb
test
and
dec
add
decl
lret
mov
ds
scas
push
ret
sti
xchg
lods
jle
repnz
xchg
clc
push
mov
shl
idivb
mov
push
push
sbb
outsl
cmpsb
movsb
cmpl
add
hlt
xor
pushf
in
stc
push
hlt
or
cltd
jae
xor
dec
cmpsl
imul
popa
jo
push
xor
inc
jo
ljmp
pop
mov
mov
shll
nop
mov
xor
mov
inc
pop
mov
fcmovbe
xchg
push
mov
dec
aad
sub
into
incb
sub
dec
mov
xchg
iret
fbld
cli
xchg
inc
inc
inc
rcrb
push
jge
add
lret
fsubrl
add
pop
push
out
ret
pop
mov
stc
and
test
mov
jle
movsb
into
ss
fwait
mov
cmpsl
xor
sti
jmp
adc
hlt
jmp
ss
lret
nop
iret
inc
enter
sbb
cmp
jbe
pusha
mov
xlat
xchg
mov
push
shlb
test
push
xchg
adc
sub
mov
ficoms
fsubl
shll
mov
mov
daa
cwtl
orl
cs
pop
loopne
fs
xor
into
mov
push
adc
lret
push
arpl
sub
sbb
sub
outsl
out
dec
jmp
inc
test
and
pop
cmp
push
adc
pop
repz
mov
mov
sbb
dec
add
or
mov
jg
pop
push
mov
push
xchg
push
and
daa
cwtl
mov
inc
push
frstor
mov
addr16
in
jnp
dec
push
fsubs
dec
cmp
push
pop
jle
sbb
push
cmpsb
adc
sub
or
dec
jbe
add
leave
rcl
ds
movntps
or
mov
inc
lcall
sub
shll
mov
pop
fcoml
sti
xchg
pop
xchg
imul
movsb
pop
in
inc
push
insl
call
push
fdivl
adc
out
push
sub
jecxz
push
insb
into
inc
inc
cmp
push
movsl
mov
outsb
aad
popf
js
bound
xchg
xor
rorb
cmp
push
and
aas
test
jle
inc
and
mov
imul
sub
cld
aaa
cmp
adc
fildll
lock
sbb
xor
inc
stc
adc
mov
xchg
movsl
aad
mov
jo
jl
or
sub
cltd
shrb
rcl
cld
dec
lahf
jg
stos
push
xchg
clc
push
std
pushf
pop
iret
xor
pop
xchg
aam
in
shlb
ret
push
lcall
shrb
sub
imul
push
dec
inc
data16
mov
cmpsl
adc
std
cmp
inc
shrb
cltd
pusha
xchg
add
push
inc
hlt
fsubs
jo
push
ljmp
loop
xor
add
mov
insl
push
data16
cmp
arpl
sarb
add
xlat
cmc
ja
aam
push
cltd
stos
popf
pop
outsb
jmp
jae
mov
aas
fimull
daa
test
add
pushf
cmp
das
push
fsubl
pop
add
fwait
add
arpl
sub
loop
or
fiaddl
inc
lods
xor
ss
mov
les
mov
inc
mov
jl
cmpsl
pop
jmp
stc
dec
xchg
enter
sarb
mov
fs
pushf
jg
jg
xchg
popa
outsl
xor
xor
sti
push
jno
icebp
std
sub
insb
inc
mov
fisubl
pop
sub
loop
adc
shrl
sub
or
add
rclb
sub
mov
scas
cs
jbe
gs
ficomps
pop
test
stos
push
adc
addr16
jg
pop
jae
scas
inc
cmp
inc
and
push
test
mov
cmp
jnp
test
cmp
mov
pop
sbb
push
mov
cmp
mov
cmp
xchg
mov
lds
loope
call
push
lahf
and
leave
dec
clc
sub
adc
adc
aaa
movsb
popf
cmc
mov
jno
gs
std
loop
ret
insb
in
lcall
and
pop
xchg
ja
or
push
call
pop
inc
in
pop
ja
rcrb
pop
bound
cmpsl
lods
outsl
sbb
cwtl
push
mov
pop
sbb
imul
mov
aaa
add
out
pusha
add
and
aas
addr16
cmp
xorl
popa
sbb
out
nop
insb
jnp
or
push
dec
xchg
insl
sahf
cltd
lea
mov
pop
adc
dec
mov
adc
pop
lret
test
cmpsl
loope,pn
les
xchg
xchg
das
adc
sbb
cmp
sbb
sbb
in
mov
push
xlat
pop
movb
mov
pop
imul
fbstp
rclb
and
scas
jo
pushf
add
dec
jge
fildll
pop
mov
and
inc
mov
sub
inc
inc
add
xchg
in
xchg
xor
fldcw
mov
stc
test
aad
in
iret
adc
mov
jmp
inc
jl
mov
fidivrs
or
repz
pop
aam
and
ret
inc
es
ja
sarb
std
push
cmp
sahf
jae
sbb
out
cmp
xor
jmp
imull
or
mov
lret
dec
hlt
movsl
mov
and
mov
and
and
ljmp
cmpsl
jmp
mov
xor
or
add
jmp
roll
xor
mov
js
or
bound
or
test
insb
test
xor
sub
pop
cmp
push
sahf
inc
jge
sbb
xchg
cvttps2pi
or
pop
popa
fdivs
gs
adc
adc
es
sbb
mull
ss
or
pusha
popa
lock
jp
fimull
call
jl
jns
jns
push
pop
pop
daa
mov
and
mov
dec
push
xchg
xchg
sbb
and
roll
push
cli
jo
sbb
cmp
ss
push
or
sbb
and
xor
mov
push
or
and
dec
push
pop
inc
popf
pusha
lcall
sub
push
enter
inc
sub
popf
and
popa
in
inc
inc
push
int3
mov
pop
mov
loope
adc
push
scas
and
and
inc
sbb
imul
gs
sub
repz
sbb
or
sbb
fisubrl
mov
cmp
aaa
jp
iret
imull
xchg
lods
pop
jl
movsb
call
fs
popf
jl
outsl
dec
cld
shrl
pop
and
rclb
jae
inc
push
or
lds
fcomip
repnz
mov
pop
int3
push
xor
cmpsb
dec
mov
or
sub
ljmp
pop
out
xor
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
call
mov
mov
sbbl
addl
pop
pop
xor
popf
mov
mov
inc
cmpsl
enter
int3
mov
repz
cmp
push
ljmp
adc
std
insb
sub
test
mov
sbb
adc
je
push
pusha
adcl
ja
mov
xlat
fistpll
push
mov
mov
pusha
aaa
pop
xor
sti
in
sub
or
adc
nop
fiaddl
stos
icebp
jl
fcmovu
xchg
dec
icebp
adc
add
inc
arpl
stc
aaa
imul
lods
xchg
test
aas
insb
adc
and
adc
ja
adc
mov
or
pxor
sahf
test
xchg
pop
adc
xchg
fwait
pop
jno
lea
lds
fisubs
jbe
decl
iret
ret
adc
lods
lahf
sub
in
icebp
movsb
push
sti
repnz
or
adc
loop
xor
int
xor
dec
dec
push
jbe
dec
or
test
rcll
xor
dec
mov
sub
jne
push
jbe
xchg
pop
shlb
rcr
mov
test
clc
fisubl
cmp
dec
icebp
pop
repz
push
sbb
or
jmp
testb
adc
or
outsl
ret
mov
fdivrl
addr16
mov
js
xchg
hlt
sub
pop
add
xchg
aas
xchg
imul
adc
xchg
jnp
rorl
pusha
mov
test
pop
add
xchg
push
fldenv
or
cs
and
int3
adc
sub
pop
mov
imul
vmovddup
adc
je
adcb
sti
ret
pop
iret
jb
sbb
lea
sbb
loopne
arpl
daa
cwtl
xchg
or
adc
xchg
sbb
outsl
subb
out
push
cmovns
ficompl
dec
xabort
inc
loopne
pop
add
cmpl
fbstp
xchg
je
or
pop
rcll
aaa
adc
jge
xor
sbb
sub
cwtl
adc
and
mov
jge
mov
fucomi
xlat
in
xchg
and
loope
xor
lahf
mov
into
push
cmova
out
mov
stc
jo
shrb
rorb
mov
addr16
fmuls
inc
mov
loopne
lret
movsl
daa
test
fs
pop
fimuls
test
pushf
in
insl
loop
ja
or
jne
jge
dec
jo
int3
cmpsl
cwtl
cli
scas
ds
filds
mov
push
or
mov
inc
ret
sbb
loop
xor
out
in
imul
push
sbb
cmp
mov
cmpsl
negb
cmpsl
shl
lds
adc
jae
loop
sbb
push
mov
pop
in
sub
and
add
je
imul
mov
rcl
inc
mov
clc
scas
pop
lea
push
jo
xchg
out
sbb
lret
fcmovu
add
pop
repz
adc
lods
mov
shrb
mov
in
add
call
xor
push
mov
mov
imul
stc
test
pusha
or
cmp
add
xor
movsl
out
mov
cmp
mov
mov
adcl
pop
bound
sbb
sbb
jge
cwtl
mov
rol
xchg
xchg
push
pop
xchg
repz
pop
repz
sbb
adc
xor
jb
pop
and
bound
jg
mov
dec
jno
inc
outsl
xchg
mov
sub
adc
mov
arpl
enter
test
sub
xchg
int
decl
push
sbb
cmp
fidivrl
jo
inc
xchg
clc
inc
inc
jb
mov
repz
push
jl
negb
in
insl
push
loop
mov
xor
pop
mov
js
jo
sti
test
sub
pop
or
leave
mov
pop
das
repnz
testb
inc
inc
pop
pop
xchg
insl
gs
jno
stc
mov
cmpsl
out
sub
dec
stc
lret
int
mov
in
jb
in
dec
aaa
jo
pushf
add
inc
and
jnp
bound
add
ret
je
add
int3
mov
push
cwtl
loopne
test
mov
mov
xor
incl
data16
adc
fucom
sub
mov
xchg
jg
xchg
and
jns
cmc
fcmovb
cmpsb
test
xchg
mov
inc
std
movsl
lds
loope
test
arpl
jnp
adc
or
int
insl
lds
imul
or
mov
decb
xor
or
inc
mov
clc
sbb
push
jne
add
popa
sbbb
sbb
ljmp
cmp
push
adcb
lret
out
cmc
and
int
adc
add
ret
mov
mov
lds
cmp
cmc
mov
xor
jp
push
add
lahf
mov
aas
adc
in
movsb
hlt
and
fisttps
inc
nop
jne
pop
addr16
push
add
mov
mov
ss
mov
lods
fidivs
fists
shr
push
aam
jno
jmp
cltd
divb
add
mov
jmp
jno
xchg
mov
xor
jne
pop
push
mov
push
pop
adcl
mov
cltd
pop
pop
stos
mov
icebp
repz
cmp
add
jbe
cmp
lahf
nop
cmpsb
mov
nop
and
repnz
sarb
orl
lock
xor
arpl
mov
roll
pushf
jg
es
pop
data16
xchg
int3
push
fcmovnb
outsb
xor
add
pop
sub
and
xchg
ja
ss
fucomi
mov
adc
sbb
jg
mov
sub
out
inc
out
sub
mov
xor
outsb
jle
sbb
mov
sbb
jne
xor
inc
jmp
or
cwtl
in
cmc
and
pop
mov
cwtl
clc
push
test
add
push
jle
add
shlb
call
jecxz
or
mov
and
pusha
sub
push
out
test
mov
jae
icebp
pushf
sub
test
enter
lods
xchg
pop
addr16
fs
dec
mov
mov
pop
lea
lock
xchg
fmull
sbb
lahf
add
inc
hlt
jb
xor
stos
cmp
mov
adc
sub
sahf
idivl
cwtl
inc
xchg
mov
cmpl
xchg
mov
fiadds
dec
test
jno
or
or
hlt
xor
push
mov
ljmp
cwtl
sub
lahf
xchg
lcall
imul
sub
sub
add
lods
add
dec
roll
pop
fsubrl
cmp
js
xor
sbb
lcall
add
sti
add
repnz
lahf
cmpsl
ds
jp
dec
push
add
into
adc
push
call
adc
xchg
xchg
mov
sbb
mov
mov
ret
adc
xor
and
jns
inc
xor
mov
cmp
lea
cltd
ljmp
outsl
out
mov
mov
mov
leave
pushl
ret
mov
mov
cmpb
mov
sarb
testl
add
sub
nop
scas
pop
add
add
aas
jl
mov
aad
or
sub
das
add
xchg
sub
mov
cmp
push
dec
xor
mov
mov
orl
jo
xchg
push
repnz
pusha
xor
cld
or
mov
js
cmp
mov
sbb
in
fsts
xor
push
arpl
imul
cmp
push
mov
jg
daa
popf
cmp
jmp
sub
enter
aas
cmp
sbb
cld
lret
int3
sub
or
mov
in
shll
stos
inc
or
jmp
and
loope
mov
or
ret
adc
lods
xchg
mov
and
push
adc
scas
push
movsl
jle
jmp
mov
cltd
pop
fidivrs
hlt
sbb
sbb
and
push
cmpb
xchg
faddl
mov
cmp
out
push
push
xor
das
lock
adc
sbb
repz
mov
sbb
pop
mov
dec
aas
cmp
mov
mov
mov
int3
jecxz
enter
and
cmp
mov
stos
push
adc
inc
pop
push
in
mov
jecxz
add
fwait
dec
fisubl
push
imul
cmpl
fwait
adc
into
mov
xlat
loop
xor
inc
add
ret
dec
jecxz
fcoms
stos
xor
sbb
movsb
out
and
aas
inc
sbb
test
ret
fdiv
jle
adc
bound
adc
shr
repnz
pop
jle,pn
icebp
shl
jnp
xchg
cmp
adc
inc
popa
mov
scas
loop
mov
ja
xchg
sbb
icebp
sub
daa
scas
mov
dec
lds
push
lahf
frstor
cmc
cmpsb
xchg
imul
or
mul
scas
pop
mov
lock
aad
decl
pushf
aas
jb
jb
out
dec
int3
cmp
sahf
and
inc
cmp
adcb
inc
cwtl
mov
push
sbb
xchg
dec
mov
outsb
insl
in
mov
dec
icebp
jge
jno
or
cltd
sbb
sub
fisubs
into
inc
sbb
push
int
js
into
jb
aam
cmp
movsl
mov
imul
mull
stos
mov
ja
push
push
pop
xchg
xor
push
inc
xchg
cmp
stos
out
fwait
jne
dec
mov
icebp
dec
add
das
adc
jae
jecxz
jmp
stos
es
push
inc
lret
push
push
pushf
sbb
movsl
loopne
mov
or
lret
xor
jl
dec
mov
repnz
imull
clc
jecxz
sbb
shl
xchg
xor
sahf
push
lods
pop
mov
mov
cmp
pop
add
xor
mov
xor
dec
mov
inc
ret
adc
fmuls
pop
lret
cwtl
or
ffreep
es
mov
pop
in
mov
lahf
ja
jno
and
sahf
inc
lods
push
out
xchg
mov
fdivrs
or
xchg
cmp
mov
jo
repz
pop
adc
sub
nop
jns
jnp
loop
sbb
lea
inc
fcmovnb
push
and
sub
cli
subl
mov
mov
pop
pop
jnp
cs
push
enter
dec
in
aad
mov
stos
jg
jo
and
imul
push
scas
lret
pop
aas
cmp
and
aad
test
addl
dec
repnz
push
mov
and
lcall
jmp
or
fst
push
xchg
stos
sarl
cli
jb
lcall
xchg
dec
outsb
and
mov
push
imul
lret
pushf
mov
jp
and
cmp
jl
nop
fiaddl
jmp
mov
insl
push
into
fdivl
insl
std
dec
xchg
add
cs
js
test
mov
stos
xchg
xchg
cld
and
and
pop
pop
sub
pop
jecxz
jecxz
std
fmulp
jle
ret
inc
test
test
jbe
daa
fstl
arpl
adc
rorb
arpl
adc
cld
roll
or
xor
push
popf
cmp
hlt
cmpsb
jb
sahf
xchg
or
in
imul
xchg
jmp
dec
les
test
dec
iret
inc
scas
add
gs
push
inc
pop
ficoml
daa
push
inc
out
pop
addl
fistps
or
cmpsb
fistpl
jp
mov
xor
punpckhwd
inc
push
stc
jo
inc
cmpxchg
test
imul
or
mov
negb
orb
or
gs
popf
daa
test
call
or
fdivs
jae
test
clc
pushf
and
cmp
or
jno
dec
xor
mov
xchg
js
popf
xchg
mov
out
pop
das
jmp
mov
push
ret
and
pop
shrb
clc
lock
sub
jmp
mov
movsw
fsubr
cs
mov
sub
outsb
dec
test
cmp
popa
in
jle
lods
clc
cmp
dec
pushf
mov
sub
sub
enter
imul
lea
or
fmul
dec
inc
push
and
mov
mov
sar
lock
sbb
dec
aas
jle
pushf
sbb
lods
daa
addl
sub
and
pop
stc
push
loop
filds
jecxz
repz
push
or
mov
and
xor
push
popf
jmp
dec
mov
aam
stc
mov
push
or
inc
mov
add
push
sbb
mov
push
scas
mov
or
and
mov
xor
ds
rcll
cltd
inc
xchg
fldenv
push
in
fistps
es
inc
lahf
sub
inc
sbb
sbb
sbb
add
dec
and
push
fld
adc
es
das
xchg
test
sub
adc
jge
pushf
movlps
jne
cmp
cmc
cmp
push
mov
and
cwtl
out
les
xchg
xchg
outsl
xor
inc
cmc
daa
xor
mov
dec
jbe
mov
mov
add
pop
xor
mov
mov
xchg
fdivl
xchg
and
aaa
sbb
cmpl
adc
xchg
fldenv
mov
rcr
or
push
mov
inc
loope
shll
dec
into
and
sahf
push
push
dec
nop
mov
pop
in
inc
mov
lods
mov
movsl
pop
sti
and
imulb
lahf
push
adc
repnz
rcrb
mov
dec
cwtl
sbb
push
fistl
fisttpll
xchg
ds
aad
cmp
lret
lret
insl
mov
mov
jne
cmp
lcall
lcall
lcall
pop
or
sub
push
or
adc
push
ds
dec
stos
xor
out
pop
pop
fildl
jp
pop
push
lea
cli
loop,pn
jbe
jp
push
adc
adc
scas
cltd
fmull
xchg
mov
ret
ret
lock
data16
clc
popf
fptan
pop
inc
mov
xor
and
out
mov
jg
scas
outsb
push
pop
jbe
fnstenv
in
lahf
outsl
movl
cmpsb
imul
test
fxtract
or
aam
ffreep
fstl
scas
rcrb
outsl
les
xor
add
in
push
or
mov
mov
add
movsb
andl
mov
insl
sbb
ss
mov
cmp
addr16
ds
int
push
push
xchg
pusha
pop
mov
in
jo
insb
push
clc
outsb
lods
and
int3
cs
sub
into
dec
jmp
fcmovnu
sbb
mov
lock
lar
push
adc
addr16
mov
mov
stos
jae
insb
cwtl
loope
aad
int
xlat
mov
je
ljmp
push
data16
push
cmp
neg
or
and
jg
xor
fnstenv
dec
repnz
or
sets
test
cmp
daa
add
inc
mov
icebp
lods
mov
jge
jnp
mov
fdivrl
bound
imul
sub
out
test
inc
sub
mov
in
inc
inc
insl
or
cmp
lock
leave
jno
or
inc
aas
or
xchg
mov
fiadds
adc
outsl
push
jmp
sub
sbb
or
fdivl
add
inc
out
jg
sub
jle
cmpsl
pop
loopne
jae
mov
pop
pop
testl
pop
icebp
inc
ret
add
dec
jmp
push
mul
js
pop
and
ljmp
das
rcll
les
scas
jecxz
ss
outsb
mov
rclb
xlat
jl
insl
adc
push
or
inc
mov
pop
mov
inc
push
rorl
xchg
mov
dec
ret
add
mov
push
sub
in
sarl
bswap
xlat
pop
push
pop
inc
rcl
xorl
iret
mov
int3
cmc
fs
daa
add
and
or
into
adc
cmpsb
mov
jecxz
jo
mov
cmpsl
icebp
fnstcw
or
xchg
inc
lods
mov
lods
sbb
orl
xchg
jp
dec
out
addr16
ret
test
sbb
xchg
xchg
fstpl
cmp
fisubs
pop
cwtl
stos
fistps
test
or
jg
xor
jo
iret
dec
or
orb
mov
mull
jg
mov
sub
cmp
add
imul
imul
mov
negb
add
mov
xor
xchg
sbb
xchg
jo
jg
cwtl
fistpll
cmp
fs
cli
test
in
adc
enter
adc
sbb
add
hlt
add
out
jl
cmp
sti
lcall
sub
test
xor
stos
pop
xchg
mov
scas
in
add
inc
mov
shrb
ret
mov
dec
mov
int
jl
cmp
dec
scas
mov
pop
push
dec
push
adc
ss
orl
mov
in
hlt
pop
pmulhuw
xchg
sub
outsl
dec
cmp
inc
sbb
andl
cli
pop
adc
in
adc
xchg
loopne
inc
cmc
push
mov
dec
cmp
jmp
sbb
test
push
into
sar
cmpsl
lods
sbb
movsb
mov
fmuls
mov
ficoms
sti
loope
ss
ja
sarb
pop
paddd
push
popf
cs
shll
fs
fs
adcb
mov
push
leave
out
imul
pop
out
jo
bts
int3
push
push
mov
cmc
cli
call
movsb
fildll
push
rcll
lret
sub
test
mov
xor
pushf
ud0
jnp
aaa
test
xor
jmp
mov
sti
sarl
fistpll
sub
dec
push
cmp
sbb
addl
sahf
stos
mov
es
xor
mov
xlat
jae
in
inc
cmpsb
cmp
inc
xor
test
sub
std
push
jmp
mov
aad
dec
sub
fnstsw
lods
mov
cmc
in
mov
clc
push
push
mov
repz
jge
cld
xchg
addr16
jl
ror
movsl
movb
and
fnstenv
dec
pop
shll
lahf
mov
push
out
movsl
fcoms
pop
fwait
jb
mov
cmpsb
test
sti
rcrb
pop
jl
cwtl
cld
out
xchg
fildl
incb
xchg
ljmp
push
mov
xor
fidivl
fbld
insb
push
ja
mov
dec
jecxz
and
in
fbstp
addr16
fcmove
dec
mov
fisubl
xor
dec
outsl
ss
xor
pop
dec
rcl
mov
out
pushf
addl
push
loop
fwait
dec
adc
pop
movsl
mov
test
mov
dec
xor
dec
xor
mov
sbb
jnp
add
rcll
test
pop
jbe
bound
push
mov
adc
arpl
fldcw
jp
movl
dec
scas
or
stos
aam
repz
add
pop
shrl
or
xchg
out
movsb
xchg
dec
sub
insb
jmp
and
xchg
xchg
pop
add
dec
in
cmpl
enter
rorl
cmp
push
int
test
push
jo
mov
xchg
data16
xor
jns
rcrl
es
mov
pop
aas
popa
fwait
fs
ficoms
dec
mov
into
int
sti
leave
jbe
int
lds
rcll
inc
or
in
push
dec
fidivrl
sub
idivl
dec
std
mov
clc
and
mov
shrl
js
pop
and
in
insb
cmpsl
push
sub
sti
jp
stos
dec
or
stos
push
rcll
sub
xor
mov
pop
cmp
sub
je
gs
int3
and
in
aaa
test
mov
out
inc
xor
test
xor
add
xor
adc
inc
and
adc
cs
xchg
xchg
out
or
jp
inc
mov
pop
lret
mov
dec
clc
cmp
inc
scas
cwtl
aas
mov
lret
popf
jno
push
nop
call
sub
sti
cmpl
pop
push
addr16
jg
jmp
sar
mov
aas
cmp
pop
and
push
outsl
cmp
push
icebp
negl
adc
clc
xchg
pop
test
and
scas
mov
or
or
stc
add
mov
add
testb
pop
das
roll
sub
sti
shl
and
dec
jecxz
cmpl
aaa
push
addb
jb
arpl
mov
loop
push
repnz
int
sub
notl
mov
icebp
in
inc
adc
pop
push
dec
xchg
leave
push
and
pop
cld
enter
fsubs
mov
lds
and
adc
jne
int3
add
jp
cmc
loope
popf
repz
sbb
mov
inc
in
jg
pop
add
cmp
repz
jecxz
push
es
sub
push
mov
jbe
mov
sti
add
cld
pop
inc
jb
scas
inc
jno
cmp
das
push
mov
push
popa
je
dec
mov
stos
and
push
bound
dec
adc
inc
and
pushf
stos
pushw
sbb
or
dec
xchg
mov
lods
push
cli
hlt
aaa
outsl
sub
mov
jle
pop
insl
leave
adc
mov
stc
mov
filds
addr16
jno
rorl
lret
pop
inc
mov
pop
jle
xchg
pop
loopne
or
js
jmp
ss
add
std
dec
arpl
or
mov
xor
pusha
fimull
sbb
inc
jbe
fbld
cmpsl
and
mov
push
mov
sbb
popa
push
roll
mov
lret
scas
sbb
fidivl
mov
inc
sbb
pop
addr16
mov
push
xlat
pop
lods
mov
jns
mov
mov
in
daa
or
inc
jnp
adc
and
test
push
push
jne
cmp
push
xchg
xchg
jle
scas
sub
lcall
push
jge
iret
jbe
inc
test
cld
jge
ret
push
shrb
pop
xchg
in
adc
orl
shll
rol
mov
jmp
jg
pushf
cltd
mov
es
inc
dec
push
test
pop
inc
lcall
push
xor
outsl
imul
pop
iret
out
mov
fs
mov
cmp
std
adc
dec
adc
movsl
mov
mov
jns
ret
lds
fisubs
mov
sbb
dec
leave
lds
cltd
fsub
jae
in
in
notl
dec
and
xor
stc
add
jne
sahf
aad
rolb
mov
jae
pop
push
jmp
addr16
xorb
and
jne
and
sti
test
js
pusha
mov
mov
dec
push
popf
add
fidivrl
mov
out
pop
clc
int
jns
movsb
imul
xorb
loop
fmull
cmp
dec
sub
adc
push
mov
push
jo
mov
call
jmp
mov
mov
sub
sar
inc
mov
gs
mul
imull
fbstp
sub
pop
pusha
sub
lea
jno
sti
imulb
inc
adc
scas
cmpl
inc
and
fmuls
push
orb
rcr
add
pusha
add
insb
dec
push
cwtl
or
scas
adc
cli
mov
std
clc
add
or
shll
inc
bound
mov
divb
std
rclb
mov
jge
jecxz
mov
sub
aam
jl
mov
js
ds
cmp
sub
cmp
xchg
sbb
mov
add
sub
push
mov
incl
and
jmp
lea
iret
mov
xchg
jbe
and
push
insl
roll
mov
in
lods
mov
insl
push
decl
rol
jle
mov
stc
adc
pop
mov
add
xlat
loop
rolb
mov
iret
inc
mov
jmp
in
or
loopne
es
or
es
decl
inc
adc
std
je
not
je
daa
jb
add
and
icebp
and
cld
push
xchg
insb
and
sbb
cmp
mov
sub
push
loope
es
in
jne
add
cmp
push
mov
mov
stos
cmc
add
bnd
iret
inc
dec
jmp
lods
dec
lret
xor
or
push
test
mov
ltr
push
test
imul
mov
cmp
jecxz
dec
out
cli
loopne
fs
movsb
inc
adc
ret
push
movsb
xlat
fstpl
adc
mov
out
add
ret
dec
scas
in
jl
xchg
xchg
test
lahf
stos
ljmp
loop
cmc
rcl
push
popa
imul
and
shl
mov
lcall
and
out
mov
cmp
fsubrp
sbb
xchg
push
push
pusha
jbe
lods
outsl
mov
xor
mov
rcr
icebp
push
shl
sbb
mov
out
jecxz
divb
mov
or
cld
andl
roll
out
sahf
rclb
adc
xchg
mov
mov
std
out
mov
pop
orl
mov
pop
bound
negb
cmpsb
push
xchg
in
leave
leave
clc
and
or
sbb
lds
push
pop
xor
mov
dec
xchg
je
and
mov
test
rcrl
stos
pushf
shll
mov
jo
cmp
sbb
stc
xchg
fnstenv
xchg
dec
inc
jge
inc
mov
nop
jmp
sub
test
or
pop
notb
mov
fsubp
xor
cltd
repz
leave
xor
sbb
adc
mov
sub
movsb
cmp
ja
pop
add
and
insb
push
into
adc
shlb
lock
sbb
stos
cld
in
aad
popf
insb
xchg
sub
mov
push
gs
add
lret
rol
cs
stos
lods
mov
stos
pop
out
mov
mov
outsl
imul
lea
push
sbb
sti
inc
adc
dec
pop
adc
mov
flds
push
mov
xor
xor
jp
or
adc
mov
mov
iret
stos
cmp
ret
cmp
adc
pop
jecxz
push
fimuls
out
fwait
ljmp
or
cli
cltd
xor
outsl
sub
lret
push
add
bound
mov
mov
gs
sbb
xor
gs
dec
and
cs
andl
sub
sahf
cltd
test
lahf
bound
sub
sbb
movsl
fidivs
xchg
inc
fldl
mov
cmpsb
in
push
mov
enter
lock
sbb
hlt
mov
stos
xchg
fdivrs
daa
push
add
adc
pushf
xchg
xchg
push
outsl
js
cmpsl
inc
popf
mov
out
xor
push
mov
ficoml
jne
mov
mov
rcrl
xor
cmp
and
jnp
nop
in
or
inc
shl
sbbb
pop
add
push
gs
dec
xchg
mov
mov
mov
add
mov
mov
cs
test
in
add
notl
or
xchg
ret
adc
add
in
xchg
mov
push
pop
sbb
mov
loope
mov
mov
repnz
xor
pushf
mov
cmpsl
loopne
pushf
inc
inc
mov
in
mov
mov
loope
mov
inc
or
aam
push
pushf
lock
das
nop
iret
push
mov
ficomps
es
insb
out
jb
xchg
daa
sub
ja
push
lahf
cmp
dec
jge
jg
mov
addr16
out
xlat
lock
sbb
xor
aaa
inc
jns
icebp
dec
call
call
aas
xchg
aam
inc
xor
nop
adc
adc
scas
cli
or
scas
jle
sub
pop
rclb
repz
pop
cmpsl
or
stos
lods
sbb
xchg
xchg
roll
and
mov
jge
sub
cmpb
rolb
add
mov
push
dec
or
ret
push
ficoms
lret
movsb
dec
xor
idivb
add
mov
fcmovb
push
sbb
xor
push
xchg
sbb
adc
sub
xorl
iret
xchg
faddp
inc
lock
pop
adc
and
je
sahf
stos
pop
lret
mov
call
dec
adc
dec
push
fsubl
mov
fidivrl
jne
xor
push
mov
xchg
pop
and
sub
inc
mov
pop
nopl
fwait
gs
sbb
bound
pop
pop
sbb
inc
cmp
xor
sbb
stos
and
jnp
shl
in
jno
xlat
lods
icebp
cwtl
or
incl
aad
je
xor
cmp
test
nop
ja
lods
mov
clc
mov
lret
inc
add
gs
insl
push
lret
cmp
mov
aam
xchg
mov
std
lods
sub
ja
roll
aaa
add
cmpsl
mov
push
xchg
fcoms
sbb
add
clc
dec
rcl
xchg
cmp
inc
pop
movsl
jns
scas
clc
and
in
push
out
aad
jne
add
mov
push
outsl
mov
aam
pop
jp
dec
loop
mov
fstpl
leave
pusha
movl
daa
clc
jb
sarb
dec
xchg
push
and
adc
sbb
mov
mov
ja
test
jge
mov
roll
aad
dec
mov
xor
jne
pop
pop
cmp
addr16
mov
jbe
pop
adc
shll
test
xchg
jg
out
dec
pop
dec
cmp
sub
adc
mov
xchg
add
inc
jl
mov
mov
sub
jne
cmpsl
xchg
outsl
in
in
and
inc
mov
mov
rolb
scas
clc
or
xor
xor
cmp
mov
in
cmp
dec
faddl
add
adc
mov
add
rcll
aas
and
jnp
jmp
cld
mov
lods
xchg
out
jmp
out
inc
push
out
scas
sub
mov
sbb
inc
or
mov
xor
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
mov
add
xchg
fsubp
mov
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
