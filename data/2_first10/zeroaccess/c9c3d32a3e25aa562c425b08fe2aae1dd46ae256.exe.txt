push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
loope
mov
push
push
push
sub
push
push
call
test
cmp
sbb
dec
popf
pusha
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
decl
ds
push
cmp
movsl
stos
fstpt
or
lcall
inc
ss
xchg
xchg
jnp
imul
je
pop
cli
sbb
lea
xchg
pop
sub
hlt
insb
sub
cmp
and
sahf
inc
mov
or
jecxz
movsb
sbb
sub
or
lretw
mov
jmp
adc
fisubrl
mov
ds
xchg
jns
cmc
shll
subps
stos
icebp
shl
jg
aad
or
jp
dec
bound
in
es
inc
aad
dec
sub
int3
shlb
push
mov
in
iret
mov
jg
dec
xlat
jno
aaa
jbe
fldl
xor
cmpsb
into
or
cs
out
jle
daa
pop
pop
jbe
and
insb
mov
fldenv
ljmp
sub
pop
rorl
into
fiaddl
and
into
adc
lods
mov
js
jg
movsl
xchg
and
cmp
mov
mov
jmp
js
and
pop
mov
sub
scas
sbb
rclb
mov
mov
pop
jmp
jle
fistpl
mov
adc
xor
rcrb
push
adc
push
sbb
pop
rclb
test
lcall
fbstp
sub
inc
clc
pop
push
popl
sub
push
aaa
fbstp
inc
pop
outsb
jl
mov
dec
jmp
add
mov
add
xchg
cwtl
lret
mov
and
jns
test
mov
adc
sti
lahf
addr16
or
push
mov
mov
int
xchg
out
or
pop
test
and
mov
sub
cmpsb
xchg
and
push
lods
sbb
push
lahf
clc
push
dec
inc
push
sub
adc
or
sub
sub
and
scas
push
out
divl
out
shrb
cmp
jno
es
iret
hlt
add
iret
xchg
mov
stos
push
fwait
xchg
jno
inc
fisubl
insb
test
jno
pop
lahf
push
mov
push
mov
push
loope
and
fists
ja
xchg
pop
je
loope
orl
adc
dec
aaa
push
pop
outsb
in
outsb
mov
fwait
xchg
push
jecxz
leave
dec
mov
dec
movsl
or
xchg
les
lods
xchg
pop
push
pop
cmp
sub
pushf
cmpb
add
int3
iret
mov
stos
xchg
push
add
cmp
xlat
popf
jge
stc
cli
push
jmp
jno
jno
fstp
push
xchg
out
movsl
lcall
sahf
iret
dec
lcall
or
xchg
mov
andl
into
cmp
push
mov
xchg
test
xchg
cmp
test
jmp
adc
xor
je
test
mov
sbb
pushf
mov
popf
cmp
test
jle
loopne
add
lret
loope
imul
jp
xor
insl
fisubl
clc
clc
popa
mov
cli
repnz
jge
pushf
mov
mov
mov
icebp
xchg
lcall
jge
mov
adc
and
pop
dec
and
mov
adc
xchg
shl
stc
cmp
push
nop
ret
dec
outsl
dec
mov
push
lahf
hlt
ffree
lea
aas
inc
dec
movsl
dec
mov
lods
icebp
insb
data16
adc
inc
mov
xor
mov
cmpsb
pop
scas
xchg
popa
pop
lcall
loope
push
push
dec
enter
xor
pop
addl
out
fidivl
push
xlat
sbb
lahf
or
insb
jp
push
mov
outsl
adc
jno
sub
ror
aam
dec
adc
pop
in
icebp
and
push
sub
push
fldt
loopne
dec
hlt
pop
cmp
test
pop
sarb
lret
inc
sbb
mov
dec
test
pop
int
xchg
mov
xchg
stc
mov
dec
push
and
xor
fildl
in
arpl
adcl
push
cmp
pop
sub
test
out
lock
cmp
sub
xor
sub
cli
mov
sbb
mov
mov
dec
mov
mov
inc
and
push
insl
add
adc
fisubs
shll
sbb
dec
push
lcall
repnz
cmc
add
mov
xchg
pop
mov
or
hlt
and
xchg
xchg
mov
in
mov
add
xor
fisubl
leave
mov
push
add
mov
cmp
push
sbb
mov
ljmp
pop
jle
mov
mov
jbe
out
xchg
mov
mov
fwait
pop
jmp
or
mov
jae
sub
xchg
sub
mov
xchg
mov
xchg
test
test
xor
movsl
out
xchg
cmp
outsl
and
cld
mov
out
jmp
jo
push
adc
adc
rcr
dec
out
mov
mov
mov
jmp
jg
popf
out
cmc
stc
orl
inc
fidivrs
and
ljmp
lods
test
push
in
out
push
adc
shlb
in
push
mov
lock
loopne
cmp
jns
cmp
cmp
cmp
lds
stos
jmp
aad
in
dec
mov
aam
mov
sbb
add
inc
add
xor
mov
adc
shlb
add
sbb
push
dec
je
cwtl
xchg
fstps
cltd
xchg
cmc
shll
add
xchg
mov
fucomip
inc
les
fstps
lahf
sahf
subl
mov
cmpsb
cli
aam
int3
or
test
dec
add
push
movsl
pop
sub
lret
jno
add
sub
inc
xchg
dec
sbb
mov
pop
ljmp
cs
jp
and
stc
push
lahf
cmp
aad
clc
adc
cwtl
xchg
pusha
push
imulb
and
in
fmuls
mov
adc
and
push
gs
push
fstl
ret
sti
push
lock
inc
jbe
and
imul
filds
subb
mov
adc
cmp
and
fisubrs
out
ss
sbb
cmp
inc
jl
cmp
outsb
bound
and
and
mov
loop
lahf
lret
scas
pop
cmpsb
push
test
push
dec
jo
pop
xlat
push
pop
mov
test
icebp
es
jecxz
mov
out
push
cmc
inc
ret
stc
or
std
mov
fbstp
rorl
jo
mov
mov
insl
sub
int
dec
iret
xchg
dec
fwait
in
mov
and
pushl
mov
mov
fisubl
mov
mov
jo
xchg
sub
mov
into
add
outsb
dec
aas
insb
sub
fs
mov
inc
cmp
stos
jecxz
inc
or
aad
sbb
int3
and
sub
jne
xor
fisttpl
sbb
adc
jp
stos
mov
dec
pusha
xor
insl
dec
and
sub
sbb
jo
pop
mov
cmpsb
mov
xor
jp
adc
dec
lret
sarl
adc
and
jae
jle
int3
xorl
gs
inc
xchg
or
jns
imul
pop
aaa
push
jl
or
les
mov
iret
sbb
push
int
ret
or
mov
xorb
iret
hlt
add
rorb
inc
add
cmp
cld
jge
cs
imul
dec
inc
dec
or
arpl
push
mov
xor
pop
sub
in
sbbb
sbb
sti
sbb
sub
out
inc
jne
xchg
lea
leave
sub
pop
mov
ficoms
repz
and
repz
call
mov
neg
cmp
pop
sbb
sarl
insl
mov
and
jg
mov
xor
int3
in
mov
fwait
mov
push
leave
aam
dec
pop
push
out
sbb
pop
or
pusha
xor
loop
call
hlt
rep
add
push
adc
in
jle
movsl
loop
mov
push
lods
insl
ljmp
int3
aam
pop
popa
and
adc
jbe
into
stos
sar
das
add
adc
jg
cld
jne
xor
fistpl
xchg
sbb
mov
pop
jmp
xchg
repnz
cmp
cmp
mov
xchg
xchg
orl
mov
xchg
xchg
test
dec
sub
mov
xchg
mov
pop
and
jmp
inc
sbb
adc
sahf
insl
cli
pop
andl
mov
xchg
pusha
sub
lret
hlt
push
imul
out
inc
arpl
je
ret
mov
cmpsb
adc
cmpsl
cmp
mov
xchg
jno
sbb
sub
ret
jle
xor
mov
xor
aas
lahf
ljmp
xorb
insl
cmpsl
sbb
push
imul
aam
lods
push
call
xchg
es
or
mulb
arpl
inc
fbld
cmp
push
out
jnp
mov
sub
add
insb
cld
push
iret
rorb
cmp
jno
ja
xor
test
mov
pushf
in
add
dec
dec
sub
fbstp
add
inc
rcrb
cmp
cs
inc
mov
repz
inc
aad
jnp
in
pop
cmp
cmp
inc
pop
rolb
clc
xchg
je
out
cmc
subl
std
fdivl
jge
pop
add
add
mov
icebp
or
repz
icebp
xchg
mov
pusha
mov
test
mov
and
cmp
stc
rclb
jp
jl
cmp
sbb
jbe
leave
jmp
repz
loop
pop
in
mov
clc
push
push
packuswb
rclb
xor
jge
add
cli
mov
inc
cwtl
int3
ds
mov
out
pop
push
adc
add
cmpsl
push
test
and
sub
add
sbb
add
xor
pmulhw
call
push
add
hlt
out
repz
scas
sbb
divl
pop
cmp
fiaddl
mov
jge
add
cmc
push
subl
adc
fisttpl
pop
cmp
xor
mov
pop
les
mov
enter
hlt
dec
js
sub
in
jo
ret
int
ds
mov
mov
inc
pushf
sbbb
mov
jnp
addr16
fiadds
ja
or
int
pop
repnz
pop
push
fs
push
int3
adc
cmpsl
popa
mov
pop
adc
les
iret
pop
xor
inc
push
in
jg
jg
pop
ret
jge
pop
fiadds
dec
adc
pop
sbb
mov
rcll
adc
lods
mov
cltd
insl
repnz
or
lahf
and
lock
dec
pop
fsubl
test
stos
nop
dec
dec
outsl
stos
ret
divb
push
cmp
and
mov
lds
fimuls
push
mov
int3
mov
pop
dec
jbe
pop
push
jnp
pusha
xchg
add
mov
mov
mov
xchg
testl
loopne
hlt
filds
push
pop
leave
arpl
mov
ret
in
lock
aas
outsl
sarl
arpl
adc
add
cltd
test
fsubrs
mov
lcall
jecxz
cmp
or
cmp
repnz
test
xchg
inc
mov
cwtl
jp
cli
xor
adc
sahf
xor
lcall
es
or
loopne
sbb
imul
push
push
inc
xchg
adc
and
xorl
xchg
push
fldcw
inc
call
xchg
mov
dec
add
fwait
xchg
sub
iret
fcomps
jb
sub
xchg
cwtl
dec
pusha
mov
sub
loop
cmc
jg
lret
loope
pop
iret
jge
pop
or
jl
inc
cmp
jns
pusha
and
pop
lds
sbb
dec
mov
cmpsb
lret
int3
jg
add
stos
outsb
or
xor
dec
xchg
add
add
push
fcmovnb
mov
dec
jno
cld
mov
adc
dec
fwait
aad
repnz
stos
mov
outsl
adc
mov
xor
scas
mov
in
dec
sbb
outsb
dec
bound
test
sbb
adc
sbb
jmp
xor
stos
jns
icebp
rcrl
xor
and
xlat
popf
lret
mov
aaa
jnp
or
xchg
inc
dec
imul
jecxz
xchg
sub
js
jae
scas
add
push
repnz
icebp
daa
mov
sbb
push
cmp
stos
mov
imul
jb
rcrb
in
in
outsl
dec
filds
adc
lcall
test
repnz
mov
stc
enter
int3
jns
push
shl
push
xor
cltd
insb
dec
subl
pop
push
xlat
ficomps
adc
xchg
je
or
adc
dec
ja
push
jecxz
xchg
mov
xor
pop
add
lret
sahf
test
lods
cli
dec
jle
and
mov
stos
imul
sti
push
pop
out
vunpckhpd
push
add
icebp
adc
dec
fadds
icebp
cmp
jge
sbb
imul
jmp
nop
mov
add
int3
mov
mov
sbb
xor
mov
pop
dec
mov
jbe
addr16
pop
scas
mov
outsb
sbb
lock
lock
js
pop
dec
lods
cmpsb
pop
sti
xor
add
bound
and
mov
and
lock
in
sbb
lods
pop
aaa
mov
adc
rcrl
push
dec
jmp
and
cmp
mov
pop
nop
mov
in
stos
enter
cmpsl
movsl
mov
inc
lcall
stc
dec
jno
sbb
incl
dec
inc
jg
fnsave
push
inc
loope
out
rcrl
lods
lret
pop
mov
test
pop
loop
or
or
adc
repnz
dec
xor
adc
mov
dec
fisttpl
arpl
ja
xchg
out
mov
push
arpl
jns
dec
bound
dec
or
lock
mov
sbb
dec
mov
loop
mov
test
std
inc
adc
pop
mov
cmpb
jnp
mov
cmpsl
dec
addr16
shr
icebp
repz
push
cld
lods
iret
jb
aaa
dec
pop
dec
and
je
lods
jnp
or
movsb
mov
cltd
adc
pop
lea
shlb
lea
lock
enter
pop
pop
mull
aas
jl
inc
xchg
roll
or
cmp
out
int3
aaa
ret
mov
in
cmpsl
js
mov
mov
out
mov
jmp
jne
sbb
cmpsb
rcrb
xorps
jns
mov
iret
faddl
dec
adc
aaa
imul
inc
cmp
je
movsb
jnp
xchg
mov
adc
stc
sbb
push
sbb
dec
inc
mov
data16
stos
pop
loop
cmp
cmpsb
cs
and
les
lret
xorb
subl
or
mov
enter
int3
shlb
js
aas
push
cmpsl
push
mov
dec
fstps
xchg
lahf
in
inc
pop
fwait
inc
xor
loopne
mov
inc
outsl
xor
lods
mov
pop
inc
xchg
in
push
jne
xor
push
negl
sti
repz
push
dec
jge
ljmp
push
popa
shrb
scas
mov
loop
push
adc
xchg
jbe
out
out
hlt
cmpsl
aam
movsl
or
mov
jo
mov
dec
pop
pop
call
inc
daa
mov
loopne
sahf
neg
jnp
pushf
cs
push
mov
sbb
hlt
out
sub
loope
test
dec
cmc
jnp
xorl
and
add
xchg
fwait
lods
imul
and
xchg
push
in
dec
pusha
jmp
push
mov
mov
sbb
sbb
and
xchg
pop
popa
mov
cltd
inc
adc
push
hlt
or
fisttps
mov
mov
jae
and
and
psubusw
fcompl
sbb
fs
pop
sbb
out
push
dec
out
lahf
sbb
sub
dec
je
ds
jmp
pop
roll
xchg
mov
divb
pushf
mov
add
cmp
loop
cmc
popa
lahf
test
sbb
cmovs
sbb
pop
pop
das
rcl
imul
xor
inc
mov
lock
fwait
adc
or
fldenv
out
or
insb
arpl
out
je
jnp
imul
jle
dec
aas
lahf
lea
adc
aam
shll
sbb
mov
repz
add
pop
notb
fucomp
imul
jecxz
pop
test
mov
pushf
mov
js
xor
adc
and
gs
sbb
ss
jge
fstl
mov
lcall
pop
adc
mov
cmp
dec
ficomps
or
call
pop
push
enter
mov
repnz
pop
or
clc
pushf
stos
pop
lea
ror
es
adc
inc
fcmovnbe
pop
ja
sub
ja
or
mov
ja
fstpl
and
fldl
aas
jne
adc
dec
cmpsl
fisttpl
pop
addb
mov
outsb
bound
mov
mov
jns
xchg
xchg
in
nop
add
or
gs
sbb
shlb
aas
mov
inc
cmp
sub
lea
mov
popl
dec
push
jmp
sub
dec
push
or
stc
popf
inc
rcrl
xchg
test
fwait
int3
das
cli
pop
cmpsl
lock
push
xor
cli
sub
mov
jbe
test
jle
in
sbbb
icebp
push
in
mov
loop
xchg
popf
addr16
data16
arpl
pop
mov
dec
xchg
xor
dec
or
xchg
ljmp
mov
cmp
sahf
stos
inc
outsb
cmp
dec
cmpsl
jb
gs
or
lret
mov
pop
cmp
fstl
jbe
fcmovnb
das
cmp
mov
jnp
jg
cmpsl
in
gs
xor
and
mov
xchg
add
xchg
pushl
push
sbb
push
cmp
clc
mov
dec
mov
push
push
out
stos
adc
aaa
adc
mov
rcrl
push
addr16
sub
push
outsb
push
push
iret
bound
mov
out
push
inc
bound
jo
and
aas
and
add
into
jmp
daa
fistl
jnp
or
in
jno
inc
cld
sub
jnp
or
mov
lods
mov
dec
mov
aaa
mov
jge
inc
mov
int3
sbb
test
dec
lea
jnp
dec
sub
ret
test
sahf
add
cmc
das
or
inc
mov
jo
cmp
outsl
insl
mov
xchg
lods
cmpb
jg
in
dec
cs
mov
add
mov
dec
jae
jb
push
xor
jg
out
dec
jo
test
sbb
cmp
call
adc
lcall
in
jmp
loopne
cmc
rorl
jae
aaa
repnz
stos
cmp
mov
mov
and
jle
xlat
mov
sbb
call
mov
ljmp
jge
or
xchg
test
pcmpgtw
ret
pop
negl
cwtl
xchg
pop
aad
push
call
sub
cmpsb
lahf
jmp
pop
inc
subb
mov
jb
adc
mov
cli
dec
or
lds
mov
push
inc
shll
cltd
mov
or
je
mov
and
movsb
adc
jp
mov
ret
cld
xor
mov
jecxz
int3
ljmp
hlt
enter
pop
lds
xchg
inc
stc
faddl
push
jle
jae
dec
cltd
inc
ljmp
cmp
add
into
push
pop
sub
or
test
pop
in
xor
pop
fs
mov
loopne
jl
pop
jg
int3
lock
mov
inc
mov
fs
jnp
inc
shlb
outsl
cld
xchg
fsubr
mov
shrl
insl
xor
std
lods
aas
repnz
data16
pop
sub
mov
outsl
rclb
rcrb
pop
mov
xchg
loope
add
push
in
fistps
inc
add
and
test
cmp
imul
jb
popf
xor
insl
nop
pop
int
mov
push
es
add
int3
mov
push
das
xchg
imul
mov
mov
add
xor
cmp
js
xor
lds
shrb
enter
int3
comiss
mov
ss
loop
push
hlt
xchg
gs
testb
loope
int3
addr16
push
mov
int3
int3
cmp
cwtl
push
js
add
or
insl
mov
cwtl
or
sub
mov
inc
fcmovnu
lds
add
inc
and
in
je
mov
shrl
pusha
cltd
lea
fldt
mov
and
or
and
fisttpll
aam
movsb
pop
and
and
outsb
mov
sti
xchg
sarl
lock
push
or
jae
mov
je
dec
mov
addr16
push
push
push
xchg
push
cwtl
fnstenv
fldenv
int3
cs
xchg
push
pushf
xor
dec
inc
pop
jae
stos
movsl
mov
test
cmp
stos
mov
or
loope
cli
dec
loop
jnp
pop
pushf
dec
inc
add
es
push
and
popf
in
lahf
push
out
cmpsl
mov
enter
dec
inc
int
les
cli
add
pop
sbb
push
mov
adc
pop
and
cmp
sub
dec
pop
cli
fptan
cwtl
mov
ret
xchg
add
leave
jnp
fdivrl
int
xor
mov
adc
test
aam
push
push
push
clc
sub
xchg
push
mov
sub
jmp
js
das
ret
xchg
sbb
ljmp
mov
pop
frstor
jge
sbb
cmp
sbb
sub
inc
dec
fstl
sbb
rcl
cmpsb
cmp
daa
cltd
test
loope
mov
pop
jmp
sbb
movsl
xchg
mov
addl
mov
adc
push
pop
pop
adc
rcr
add
jo
in
sbb
lcall
in
sbb
cli
ds
hlt
stos
cmp
imul
mov
iret
mov
xchg
movsl
rorb
sbb
insl
test
jle
lds
and
insb
xchg
sub
fs
lret
in
test
and
inc
lret
dec
inc
pop
cld
ljmp
fsts
mov
dec
push
dec
sbb
inc
fldcw
ja
pop
negb
jl
xlat
lds
fs
fstpt
nop
cld
out
shrb
and
testl
mov
dec
std
sbb
repnz
cmc
fsubrl
lock
js
popf
xchg
add
jno
jmp
outsl
mov
add
jns
jns
sub
in
add
dec
cmp
pop
mov
mov
lock
loope
pop
and
popf
inc
mov
mov
mov
mov
lret
dec
dec
push
imul
mov
repnz
fs
icebp
out
out
dec
orl
pop
pop
cmp
mul
shll
pop
jle
mov
insb
sub
sub
adc
fidivrl
jge
adc
add
or
mov
cmp
adc
lods
jne
in
and
jbe
cmpsl
cmovo
pop
in
movsl
add
push
clc
ret
xor
or
dec
push
cmp
das
xor
push
mov
scas
scas
jnp
mov
out
jno
or
cmpb
fwait
adcl
test
std
loopne
negb
push
rol
jno
call
pop
or
sub
pop
cmp
shlb
repz
clc
shrl
xchg
jnp
rcrl
inc
out
mov
dec
push
sbb
sub
add
or
fists
pop
fs
ret
pop
stc
scas
lea
push
mov
outsb
cmp
cmc
out
xchg
roll
add
imul
sbb
repz
mov
cmp
enter
push
cmp
adc
adc
cmc
mov
adc
loop
jno
data16
ja
iret
cmp
or
xchg
pop
jle
shlb
or
xor
es
or
cmp
dec
mov
pmullw
cmpsl
and
jbe
out
sbb
into
mov
mov
xchg
test
and
adc
sub
pop
mov
jne
dec
aam
jo
xchg
jno
push
push
ljmp
fiadds
jns
or
sbb
inc
cmp
loop
adc
repz
mov
out
pop
jmp
insl
scas
jbe
lods
js
pop
dec
lcall
xor
and
into
lock
mov
test
xchg
dec
arpl
data16
mov
lahf
sub
add
push
repz
fistl
pop
cmp
or
sub
popaw
jmp
mov
cs
dec
pop
add
ret
outsb
xchg
push
lods
dec
and
mov
jb
subl
jecxz
xchg
lock
xchg
das
lds
lods
or
fstpl
ds
pop
inc
insl
ljmp
add
call
dec
into
mov
imul
inc
add
push
cmp
mov
aad
jnp
outsl
fistps
add
stos
stos
addb
mov
inc
mov
inc
sub
cmpsb
ljmp
mov
dec
shlb
inc
jo
mov
mov
lods
aas
stc
mov
hlt
adc
fstl
add
mov
push
xchg
inc
cltd
or
lock
cmpsl
je
shrl
out
lods
cmpsl
loope
out
adc
sbb
cs
pop
adc
dec
pusha
mov
sub
sub
mov
jle
stos
lahf
sbb
imul
sahf
xchg
scas
cltd
or
mov
jl
adcb
lret
test
and
rclb
in
lret
sbb
into
push
push
inc
arpl
cmp
cli
push
pop
nop
sub
scas
cmp
xor
mov
cld
xor
pop
xchg
loope
cmp
rorl
arpl
xor
mov
fsubrs
bnd
jae
lock
add
push
and
lods
push
pop
sbb
imul
dec
sahf
sub
in
mov
mov
aas
pop
outsb
insl
in
mov
icebp
shr
pushf
lret
pop
or
inc
adc
pop
or
adc
mov
or
xchg
mov
inc
int
test
sahf
enter
push
mov
das
cmp
inc
fsub
mov
sarl
sub
lods
add
dec
jg
sub
mov
and
fmuls
and
push
repz
add
lock
mov
sub
fisubs
add
clc
lcall
fisttpll
push
test
daa
aas
cmp
in
and
pop
inc
push
jmp
add
dec
fstps
dec
xchg
pop
rcrl
mov
insw
mov
inc
adc
fwait
mov
add
adcb
mov
lcall
sub
fcmovb
es
mov
in
jg
int3
int3
insb
adc
mov
fwait
add
mov
and
mov
fcoms
movsl
iret
imul
mov
xor
xor
pop
mov
inc
jo
les
xchg
sub
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
cmpsb
outsb
sub
push
push
sub
push
push
fcmovnu
push
sub
xorl
js
fsubs
int3
shl
and
xchg
iret
push
sbb
popf
push
cwtl
xor
ret
mov
cld
sub
push
xchg
jp
cmp
gs
cmp
sbb
mov
repnz
faddp
xchg
cmpsb
mov
jno
mov
mov
mov
inc
pop
jecxz
inc
mov
outsl
dec
push
mov
dec
jb
test
test
pop
jb
mov
ds
mov
xchg
ret
pop
xchg
push
mov
scas
ds
repz
call
andl
sti
add
push
cmp
mov
mov
mov
sub
fildl
add
inc
into
pop
xor
les
sbb
std
push
stos
xor
in
test
xor
xchg
daa
push
push
sub
mov
pop
ss
aam
in
neg
xor
dec
adc
xor
xor
mov
test
imul
inc
jo
xchg
xor
and
xchg
andb
push
jle
stc
or
sub
sbb
hlt
push
and
lods
pop
xchg
addl
inc
jle
hlt
mov
call
xchg
insl
loopne
cld
sbb
xlat
sbb
jo
jge
pop
rcrb
and
cli
mov
cltd
cmp
xor
cwtl
xor
xchg
std
arpl
nop
pop
out
aad
test
mov
xor
ret
dec
subl
add
push
out
in
xchg
jb
ss
cmpsl
dec
add
cmp
test
je
mov
or
stos
int
dec
sti
sahf
loop
jo
xchg
xor
stc
fs
test
cmpsl
push
pop
adc
sbb
mov
lahf
pop
loopne
push
pop
push
sahf
call
mov
daa
sti
cmpsl
call
sub
xor
aas
or
mov
jb
xchg
jb
call
ljmp
sarb
jnp
xor
mov
cwtl
xor
ss
idivb
and
lret
jle
pop
xchg
idivb
cmc
fbstp
cld
das
aad
xor
xor
inc
pusha
inc
int
lea
mov
repz
sub
aaa
mov
xchg
out
sub
lea
icebp
aad
out
nop
xchg
pop
rcll
jg
cmp
push
sub
mov
inc
push
cld
fadds
jle
or
jb
pop
push
xor
adc
stc
adc
lahf
imul
inc
dec
sub
mov
jmp
mov
btr
mov
jnp
pop
sub
sbb
mov
pop
jns
pop
mov
cmp
sbb
rcrb
imull
fisubs
cmp
fcoms
or
pop
sbbb
xor
fidivl
lock
pop
sbb
dec
cltd
fbstp
push
pop
jmp
jge
inc
fs
dec
mov
cld
pop
and
pop
out
repz
rolb
xor
mov
cmpsb
dec
ds
into
sub
test
push
sub
outsl
test
stos
cmp
pop
sbb
in
jns
and
mov
subl
test
and
mov
xchg
aam
lret
adc
iret
xor
dec
fimuls
les
repz
test
jg
in
sub
daa
jmp
mov
shr
loop
mov
xor
popf
inc
pushf
in
dec
jbe
push
lcall
fsubl
cmpsl
add
adc
and
popf
leavew
cwtl
sti
in
jg
sub
jne
cmp
sbb
cmp
dec
repz
jae
iret
test
out
out
fnsave
mov
fldenv
pusha
push
push
mov
jno
std
sahf
popa
subb
pop
inc
mov
mov
xchg
push
pop
mov
mov
mov
adc
roll
push
stos
xor
movsb
push
push
jbe
mov
ss
popa
mov
jecxz
movsb
jmp
jne
or
mov
les
add
sub
arpl
push
xor
pop
push
shlb
testb
mov
and
les
not
sahf
sbb
fnstenv
jno
xchg
xchg
jecxz
cli
divb
sbb
imul
inc
js
xlat
das
push
scas
test
mov
and
dec
sub
xchg
idivl
gs
fdivr
sbb
push
push
xchg
mov
dec
sahf
adc
out
lds
ljmp
xchg
cltd
mov
sub
push
adc
out
scas
adc
jae
pop
inc
xor
mov
loopne
mov
std
test
mov
test
ficoms
mov
bound
jmp
jbe
loopne
add
push
repz
gs
andb
sbb
jno
jne
outsl
addb
ja
fidivrl
xlat
mov
popa
rcrb
or
stos
je
or
xor
mov
sub
lods
jne
shll
xchg
push
scas
in
fwait
xchg
movsb
adc
ja
data16
test
sub
sbb
pusha
xchg
xlat
xchg
jbe
jb
aaa
push
xor
push
dec
lock
and
xchg
adc
gs
rcr
jbe
adcl
jo
fdivs
mov
jge
mov
adc
into
push
scas
pop
lods
imul
arpl
mov
test
pop
sarl
xor
jmp
mov
addl
add
jo
jle
mov
xchg
push
pop
jno
clc
dec
into
xchg
inc
add
sbb
push
or
stos
je
sub
inc
xchg
mov
sti
out
lock
aad
loop
or
mov
rorl
mov
dec
subl
insb
fcoms
cmpsb
add
test
sbb
or
mov
xchg
xchg
sbb
roll
lds
pop
fdivr
inc
or
mov
mov
mull
cmp
pop
imul
lds
pop
rclb
shlb
fcomps
pop
inc
cwtl
std
sub
pop
cmc
js
test
push
sub
call
push
clc
xchg
mov
xchg
repz
push
sbb
out
mov
negl
aam
fidivl
ret
and
add
popa
push
pop
testb
mov
add
loop
mov
dec
lahf
sbb
dec
cmp
pop
fdivr
jno
je
je
adc
jl
pop
cli
rcl
scas
test
das
stc
es
mov
lods
jle
sbb
mov
push
rcrl
adcb
mov
pop
push
push
leave
mov
lret
loope
icebp
jg
lahf
repz
and
adc
call
push
mov
dec
sbb
xchg
mov
dec
gs
arpl
and
arpl
and
push
int3
jmp
xor
cwtl
in
pop
out
mov
cmc
jb
inc
pusha
test
xchg
mov
mov
push
sub
cmp
repz
add
xchg
fs
lcall
stos
dec
movsl
repz
cwtl
lahf
fnstsw
cmp
xor
loope
dec
and
int
dec
jnp
int
jecxz
les
or
sbb
sub
sbb
fstl
inc
int
pushf
jbe
pushf
adc
es
and
lret
xor
push
fcoml
aas
adc
mov
mov
iret
out
shrb
fstps
int
jns
mov
dec
push
std
gs
sub
fistl
in
mov
iret
or
add
pop
js
jp
aad
jmp
out
decl
in
addr16
lock
mov
pusha
insb
loop
xor
shlb
xlat
cmp
scas
cmpsl
add
xchg
push
cmp
aad
sub
shlb
adc
sub
sarb
out
aad
jns
addr16
or
pop
fnstsw
sub
xor
jmp
das
negl
iret
sahf
xor
xor
lods
xor
cmpsl
daa
xchg
icebp
dec
xchg
mov
std
push
mov
sub
pop
push
je
jne
xor
push
add
sub
mov
xor
xchg
xor
xchg
ljmp
dec
in
push
nop
inc
xchg
xor
mov
int
xchg
or
jle
insl
xchg
cmp
push
fcom
imul
test
dec
cmc
and
mov
cltd
mov
movsb
jns
dec
sub
aaa
dec
dec
rclb
cmp
sahf
test
mov
cmpl
dec
inc
imul
or
cli
lods
jge
cmp
pop
xlat
enter
mov
in
xchg
out
out
and
hlt
or
add
inc
xor
mov
push
dec
add
int3
sub
cmp
mov
inc
adc
jno
test
xor
jne
jno
stos
dec
negb
jmp
lea
scas
xor
mov
jmp
mov
repz
rclb
xchg
ret
cmc
jge
dec
rorl
and
push
stos
inc
jo
es
jecxz
fidivl
jns
mov
das
fs
push
imul
outsb
gs
fistps
lock
lahf
lcall
mov
inc
out
xor
enter
roll
push
or
push
cli
sub
lods
loopne
mov
jge
lret
jle
jge
loop
pop
shll
inc
adc
fisttps
mov
jo
pop
mov
incl
xor
pusha
dec
mov
cwtl
pop
and
movsl
or
test
sub
mov
push
pop
pop
or
insl
loop
lock
test
push
call
cmp
push
dec
sbb
imul
push
xchg
cmp
into
shlb
and
pusha
xchg
jno
add
stos
movsl
out
inc
mov
scas
ficoms
fsubp
mov
dec
pop
jo
mov
adc
sbbl
icebp
addr16
movsb
sarb
int
enter
jns
pop
cltd
sbb
std
sbb
push
cwtl
shll
jg
out
or
fincstp
clc
or
loope
xchg
es
jmp
cs
dec
loop
sub
sub
pop
faddl
shl
std
and
fidivrl
cmp
jg
daa
mov
mov
movsl
xor
hlt
pop
mov
and
xor
pop
fwait
adc
iret
lcall
dec
inc
sub
lahf
pop
mov
xor
mov
sbb
movsl
int
xor
out
repz
lea
and
cmp
add
jmp
fwait
mov
cmp
in
mov
mov
fildl
adc
cmp
test
icebp
call
pop
adcl
icebp
movsb
sti
lcall
pop
fstl
imul
mov
stos
loope
sub
adc
jo
test
into
pop
ficoms
insl
push
mov
jecxz
mov
fwait
add
jmp
dec
jno
imul
xchg
lret
adc
shr
loopne
lret
int3
pusha
mov
pop
add
push
pop
push
xchg
fsubrs
aas
pop
rolb
cmovne
inc
push
mov
sarb
jle
mov
xchg
cltd
pop
fstpl
cmp
adc
movsl
and
iret
dec
inc
pusha
test
cmpsb
cmp
mov
lds
dec
loop
repz
stos
mov
xor
arpl
aam
xchg
xor
adc
pop
dec
imul
push
jge
push
cmpsb
cmp
mov
cltd
ret
adc
cltd
push
rcr
movd
aas
std
jns
sahf
adc
push
pushf
dec
sti
mov
pop
pop
gs
mov
pop
mov
jae
outsl
nop
mov
push
lret
mov
fldenv
ds
mov
rcll
lcall
int3
data16
or
xlat
push
das
adc
or
js
pop
outsb
inc
jecxz
stos
scas
sub
jmp
lret
ficoml
shll
in
loopne
rol
es
sub
mov
sbb
jne
bound
mov
scas
pop
pop
mov
adc
pop
adc
cmp
mov
fwait
repnz
push
imul
arpl
adcb
ljmp
inc
outsb
iret
pop
ds
sbb
arpl
jns
pop
xchg
loop
cmp
inc
mov
and
lea
jecxz
hlt
inc
outsl
cld
inc
dec
sbb
stos
cmpsb
mov
pusha
leave
lar
je
xlat
rcll
and
loope
or
jo
sbb
mov
test
xchg
ret
cmc
sub
push
stos
es
or
push
mov
add
mov
repz
push
sarb
add
mov
iret
dec
repz
leave
pop
aas
out
xor
out
int3
mov
cmp
inc
out
xor
dec
jl
cwtl
jbe
xor
fnstenv
sub
das
xchg
inc
daa
sbbl
fstps
inc
cmpl
dec
cwtl
ret
lret
xchg
cmpl
dec
ljmp
fcomps
cmc
dec
sub
push
push
pop
jns
call
push
or
mov
inc
cmp
movsl
and
ret
adc
lods
fs
xor
andps
pop
jb
mov
mov
mov
aad
das
push
ret
pop
adc
ljmp
sub
stos
ja
pop
aad
cltd
adc
mulb
jns
mov
fsts
pusha
xorl
push
push
in
pop
push
rcr
sub
in
les
scas
xor
pop
filds
repnz
stos
imulb
mov
jmp
shll
fs
xor
xchg
movsb
shlb
test
inc
cmp
mov
rcr
sahf
inc
mov
outsl
ljmp
inc
jne
aad
sub
dec
sbb
push
push
push
sbb
outsb
dec
xor
push
sbbl
lret
test
lcall
je
addr16
iret
mov
lret
fsubs
insb
out
data16
pop
xchg
es
loopne
xchg
add
add
jnp
mov
dec
xor
push
roll
int3
ss
add
dec
cmp
sbb
sahf
rorb
ret
mov
or
add
fisttps
sti
lods
fadd
negb
pop
idiv
sbb
dec
ljmp
push
lds
sbb
int
es
mov
xor
and
sbb
sbb
loope
xor
jbe
add
shr
sbbb
adc
jp
in
sub
cwtl
xlat
push
movsl
pop
cwtl
addr16
fisttpl
outsl
push
popf
mov
inc
push
sub
pop
xchg
insl
add
inc
test
out
adc
pop
mov
mulb
gs
pop
jp
enter
daa
sub
cld
arpl
ds
or
xor
mov
cmpsl
ljmp
mov
cmp
pusha
inc
ds
aaa
nop
imul
dec
iret
mov
mov
and
mov
pop
cmp
pop
daa
inc
sbbl
push
gs
ljmp
jo
cmpsl
lret
sub
mov
popa
cwtl
sub
and
shlb
inc
dec
les
in
les
xor
cmp
ljmp
cwtl
mov
pop
jno
mov
jl
or
jg
or
or
add
xor
hlt
mov
inc
jmp
lods
push
dec
pmullw
insb
pop
push
inc
outsl
xor
inc
movsb
or
sub
into
fsubs
mov
mov
decl
and
xor
dec
fbld
jae
jne
sbb
dec
sub
popa
adc
jl
xchg
hlt
es
out
sub
add
mov
rorl
sub
sub
adc
xlat
xor
not
mov
arpl
mov
lea
decl
sub
lcall
sub
aad
cmp
stc
xor
cwtl
jae
ja
loopne
adc
sbb
xor
mov
insl
cmp
jecxz
sbb
data16
enter
rorl
sbb
ret
cmpsl
rcr
int3
pop
lock
scas
xor
cli
jne
int3
push
xchg
push
ljmp
fisubrl
push
push
out
sbb
movsb
cmp
div
add
lods
daa
dec
sbb
push
dec
dec
lret
cmpsb
adc
sbb
xchg
jo,pn
sub
mov
lods
cld
sub
inc
rcll
push
mov
lcall
popf
inc
add
ffree
xor
push
sbb
mov
jbe
mov
inc
into
ja
dec
sub
stos
shl
add
push
daa
jmp
movsb
ja
sub
adc
dec
or
cmpsb
xor
mov
add
adc
jns
sbbb
rcrl
mov
jecxz
mov
fists
mov
cmp
pusha
jae
jp
mov
pop
loope
cmp
into
mov
sub
mov
cmp
fidivrs
inc
jl
lods
rolb
jp
in
cmpsl
pop
push
icebp
mov
push
orl
cmp
dec
sahf
mov
repnz
adc
jnp
xlat
out
lods
rorb
andl
jg
loope
xchg
repz
rcll
fs
inc
dec
pop
stc
jne
scas
sbb
or
jns
ss
jge
bnd
mov
pop
push
std
sti
movsl
jb
xchg
ds
pmuludq
jg
sub
sub
aam
pop
dec
jo
cs
jmp
mov
aaa
xlat
mov
pop
push
xchg
pushf
xchg
xor
xor
mov
and
push
cmp
fisttps
push
pushf
xchg
add
cmp
mov
jns
bound
cmp
scas
inc
insb
mov
cwtl
dec
ljmp
test
insb
and
pushf
push
push
xchg
inc
dec
mov
call
xor
jmp
xor
lcall
cmc
cmp
mov
cmp
jae,pt
dec
fs
pop
movsl
movsl
aad
cmp
pop
xchg
xor
clc
lahf
in
es
fdivs
lret
and
lds
pusha
fsts
push
jb
out
inc
jbe
into
jecxz
jge
fcmovb
xor
cmp
cltd
inc
push
call
mov
jb
xchg
inc
movsb
insl
push
push
insl
gs
mov
rcr
cli
xchg
ljmp
mov
push
pushl
adc
push
push
das
and
dec
sub
adc
mov
nop
xlat
in
pushf
mov
xor
cld
cmp
in
movsl
sbb
outsl
adc
pop
xchg
mov
jmp
iretw
mov
leave
adc
in
test
jp
outsl
add
scas
popl
pop
jle
push
dec
xor
sub
jg
push
test
test
inc
jmp
mov
rorl
xor
jo
jmp
jge
sub
or
fcmovnbe
insb
pcmpgtb
pop
xlat
adc
inc
ja
cld
mov
inc
cmc
aas
fwait
clc
je
lret
push
sub
int
jbe
mov
mov
test
adcl
sbb
les
push
sub
test
aas
pxor
insb
leave
adc
cwtl
das
xchg
mov
imul
shlb
testb
enter
stos
fs
pushf
jbe
cli
xchg
push
pop
adcb
sub
mov
sbb
cs
nop
lds
stos
dec
es
orb
pop
sbb
arpl
pop
or
push
cmc
mov
push
cltd
idivl
int3
xchg
fwait
sbb
fwait
jno
int3
test
pusha
and
mov
mov
pop
mov
ss
xor
mov
mov
jb
int
fs
sub
ss
mov
movsl
mov
stos
pop
rcll
lret
lock
dec
mov
cltd
sub
je
add
divb
data16
gs
rorl
push
mov
mov
xor
dec
xor
sbb
pop
pop
mov
jb
cmc
xor
push
jge
sub
fisubs
add
inc
dec
rolb
mov
cmpsl
dec
pushf
sbb
xchg
push
iret
push
scas
data16
xchg
ret
and
pop
not
movsl
adc
push
and
push
mov
and
gs
out
ss
mov
call
cltd
jecxz
scas
mov
pop
push
and
adc
and
test
aas
dec
sub
icebp
sarb
xor
pop
sbb
scas
outsl
scas
ds
sbb
insb
pinsrw
daa
push
or
daa
ror
cmp
dec
mov
incl
sti
shll
cli
imul
cmp
shrb
fldenv
out
pop
lret
inc
incb
mov
mov
xchg
jno
mov
ljmp
xor
out
addb
mov
cs
leave
sbb
cmp
inc
lret
cs
ds
call
push
lcall
xchg
sub
hlt
fisubs
mov
push
mov
ficoms
iret
xlat
pop
loop
mov
push
movsb
aas
mov
andl
mov
pushf
es
xor
icebp
aaa
data16
test
popa
sub
out
jbe
pop
push
mov
jo
inc
ret
sub
mov
pop
mov
fucomp
or
or
clc
movsb
fdivr
cmp
sub
dec
xchg
pushf
rsqrtps
dec
sbb
sub
repz
dec
jb,pn
inc
lret
mov
imul
sub
rorl
lret
jnp
test
jl
loop
push
jnp
cmp
test
inc
or
movsb
inc
stos
mov
mov
mov
std
in
xchg
into
dec
mov
xchg
pop
sub
push
pusha
cmp
add
cmpsb
dec
mov
xchg
mov
sbb
sbb
outsl
lock
jl
pop
xchg
mov
loop
dec
cmp
pop
and
das
bound
lods
sbb
loopne
shlb
inc
jg
lods
lahf
xor
shll
nop
sub
les
out
push
inc
cli
inc
mov
pop
mov
cmp
add
xchg
push
xor
cmp
js
push
mov
inc
push
xorl
je
cmpb
dec
inc
xlat
mov
mov
mov
xor
fwait
adcb
dec
gs
and
test
mov
sbb
daa
inc
insl
jne
cmp
adc
push
popf
sub
push
call
dec
pop
mov
xlat
push
pusha
icebp
lahf
inc
rclb
les
cld
icebp
cmp
jle
cmp
xchg
daa
add
jle
push
jmp
movsl
mov
mov
aad
add
dec
cltd
jnp
fs
imul
xor
test
xchg
mov
xchg
mov
xor
pop
lahf
nop
adc
mov
scas
sub
and
pop
pop
lea
cmpsl
cs
in
call
jno
sarl
outsb
lret
sbb
dec
mov
sub
and
cmp
roll
mov
test
rclb
sub
mov
xchg
xchg
shlb
into
xchg
and
jae
xchg
shlb
rol
push
pop
cmp
jle
sarb
mov
cli
lea
mov
out
movl
jo
sub
sub
lods
movsl
std
movsb
sbb
add
and
lahf
inc
das
pop
adc
pushf
pushf
xchg
ljmp
out
ljmp
iret
sahf
ljmp
mov
mov
das
mov
fwait
pop
movsb
mov
ficomps
inc
out
test
or
mov
movsb
repz
jno
adc
mov
mov
dec
cmp
aaa
sub
xor
pop
movsl
jle
aaa
das
xor
insl
mov
mov
inc
fimuls
aad
lds
imul
cld
xor
int
aas
cld
mov
jb
pop
mov
pop
pop
xchg
mov
jp
negl
iret
repnz
push
shl
roll
icebp
and
jmp
inc
xchg
in
fistps
and
aad
xor
test
std
push
aam
not
pop
adc
imul
adc
insb
into
pop
push
xor
repz
lods
ret
and
lock
pop
roll
push
jp
push
add
lret
inc
ss
stos
xor
dec
cld
lods
jno
dec
sbb
inc
hlt
icebp
or
mov
and
push
sub
sub
adc
cmpsb
mov
inc
cli
jnp
test
xor
sbb
repnz
sbbl
fisubrs
mov
pop
jp
mov
arpl
or
cwtl
mov
mov
emms
lret
ds
in
daa
rcr
inc
sub
enter
out
sahf
dec
enter
mov
rclb
xor
mov
mov
push
jo
ffreep
sti
add
push
sbb
lea
cwtl
xor
jae
or
jl
fs
cmpb
es
xor
xor
mov
jbe
mov
pop
lock
ja
cmpsl
add
or
adc
push
xchg
add
imul
cmp
in
jo
add
xchg
iret
and
mov
push
pop
jmp
xchg
and
dec
shlb
fnstcw
add
xlat
pop
sarb
sbb
push
lea
fimull
cmp
scas
cmp
xor
stc
jmp
add
es
jo
cltd
imul
dec
arpl
pop
xchg
inc
pop
fimuls
dec
pop
adc
sub
in
mov
sub
or
pop
mov
and
ret
out
outsl
mov
adc
push
xor
cmpsl
pop
jne
aaa
fstl
pop
rcrl
shrl
sbb
stc
inc
cmp
sub
mov
dec
pop
test
imul
lods
movsl
sarl
fmul
jp
jo
push
adc
pushf
cld
push
stc
or
jo
xchg
std
ja
add
imulb
xchg
adc
lahf
sbb
inc
rcrb
leave
and
pop
fisubrl
int
call
xlat
out
add
xchg
cli
or
mov
rorl
xor
push
cli
in
mov
lcall
inc
xchg
rolb
pop
div
sbb
insl
pop
aas
sub
addr16
push
stos
add
lret
jle
push
mov
lret
shrb
cmpsl
add
jbe
shll
mov
sub
mov
jecxz
mov
dec
scas
xchg
jae
mov
push
xchg
or
xor
loope
adc
cli
psraw
popf
xor
jbe
repnz
cltd
mov
mov
pop
jmp
pop
cld
mov
sbb
iret
add
or
sarl
jne
test
mov
adc
aaa
shl
mov
jecxz
jmp
sub
sbb
xchg
and
lds
xchg
movsb
adc
mov
mov
rcl
sub
pop
add
push
pop
sbb
inc
shr
xor
rol
sub
dec
fsubs
jo
or
aaa
or
mov
cmpl
test
push
scas
jle
in
enter
mov
inc
stc
sbb
movsl
fidivs
es
hlt
push
rcrb
das
cli
xchg
inc
adc
cltd
or
arpl
mov
cs
push
call
ss
adc
sti
dec
push
xor
adcl
outsb
clc
popa
loopne
mov
aas
int3
lock
cmp
cmpsb
sub
add
mov
lcall
jbe
inc
test
inc
insl
dec
pusha
add
stc
dec
push
scas
out
bound
and
test
and
xor
stos
mov
fs
jno
inc
fs
pop
push
cwtl
or
shld
lods
and
fst
jle
jne
inc
jno
ret
mov
or
fidivl
rcrb
popf
stos
xor
dec
in
lods
jnp
cltd
xchg
fsub
cmp
jno
pop
ja
mov
dec
xchg
cmpl
je
add
mov
sub
cmp
arpl
sbb
or
arpl
loop
lea
xorl
movsb
pop
test
test
nop
lods
xchg
outsl
lcall
lret
lcall
dec
and
xchg
ss
pop
adc
outsb
pop
sbb
aad
or
sub
les
inc
jmp
test
xchg
test
mov
dec
test
movsb
xor
push
insl
rcr
fists
adc
jecxz
testl
sbb
lods
lods
dec
mov
aaa
xchg
loope
test
push
rcrl
loope
adc
ljmp
inc
add
xchg
es
lcall
out
inc
stos
dec
mov
xor
out
mov
lret
loopne
mov
notl
xor
pop
flds
xor
or
clc
cmp
fisubrl
fmul
add
adc
std
xchg
mov
push
aam
push
sub
jl
stos
fwait
cwtl
addl
pop
mov
pop
cmp
ja
idivl
sbb
mov
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
mov
xchg
mov
mov
in
lcall
pop
jg
ja
adc
test
mov
and
mov
movsl
js
test
shrb
xorb
int
movsl
notl
mov
push
fs
push
sub
pop
shll
iret
cmp
scas
mov
call
enter
repz
xchg
fcoml
add
inc
imul
pusha
daa
and
dec
sub
test
pop
cmp
jne
jns
test
jae
test
ja
xchg
mov
or
sar
push
jne
stc
sub
add
add
fldt
jecxz
fsts
sahf
cmp
negb
out
pushf
pop
sbb
jl
cmp
sbb
sbb
inc
cs
xchg
loopne
xchg
or
into
push
lock
das
cwtl
pusha
les
xor
sbb
jo
enter
add
insb
scas
jno
push
and
or
enter
imul
or
xchg
stos
fistps
jge
das
pop
push
push
cltd
inc
inc
jg
dec
pop
pop
sub
clc
xor
out
sbb
mov
sbb
lcall
pop
imul
mov
and
aam
out
dec
mov
rcrb
push
nop
add
jno
inc
push
mov
mov
sbb
aam
or
jne
in
mov
xor
aam
pop
sbb
adc
popa
cmp
popl
xor
pop
add
nop
jbe
inc
imul
int3
pop
lods
lea
inc
loopne
xor
adc
pop
fsubrs
out
mov
cld
mov
ljmp
loope
dec
lea
sarb
mov
dec
jns
dec
adc
scas
outsl
jne
imul
clc
aam
dec
jle
addps
leave
and
mov
mov
std
ss
push
mov
mov
add
fsubs
pop
dec
xchg
pop
mov
data16
cmp
sub
pop
icebp
dec
das
push
lods
test
inc
rcrl
call
xchg
cmpsl
pop
cs
cld
fmull
or
xor
gs
outsb
cltd
test
mov
cwtl
mov
or
inc
shrb
jno
sahf
mov
outsl
ljmp
sub
dec
jnp
lret
pop
xchg
enter
cwtl
pusha
push
or
pop
xchg
add
cmp
sub
mov
lods
out
xor
cmp
out
or
hlt
outsl
mov
cmp
cmp
mov
dec
aad
das
sbb
mov
mov
xchg
sbb
mov
pop
xchg
xchg
sbb
adc
fcmovne
lret
outsl
out
mov
lcall
mov
movsl
push
addl
jle
xchg
rcrl
add
js
pop
pusha
ret
in
jo
daa
cmp
jecxz
int3
mov
adc
int3
mov
inc
cs
push
push
idivl
xchg
push
adc
aam
ret
pop
in
hlt
test
jne
js
cmp
movsb
popa
jmp
loop
fs
mov
push
cmpsb
inc
mov
outsl
outsb
jg
fstl
mov
jo
mov
cmpsl
fdivrs
dec
aas
daa
addb
mov
loop
mov
cwtl
sbbl
inc
imul
dec
cltd
loope
ss
movups
add
clc
sbb
outsb
int
mov
jb
xchg
bnd
jbe
sbb
cli
add
cmp
insb
ss
mov
cmp
pop
and
sbb
xor
dec
mov
pop
scas
mov
sbb
rorl
cmp
push
test
bound
xchg
add
pop
add
in
movsb
fwait
xor
das
lods
dec
jle
pop
aad
outsl
stos
lods
gs
sbb
out
and
int
pusha
addr16
lods
xchg
out
or
jbe
sub
lea
inc
xchg
jb
in
bnd
jae
scas
and
insl
jno
add
add
jbe
push
das
out
js
fwait
loop
cmpsl
popa
lret
les
movsb
out
sbb
stos
push
push
mov
fcompl
inc
pop
jecxz
fdivl
mov
or
jb
or
xor
in
aaa
push
aad
popa
movsb
or
pop
add
mov
or
stos
test
jbe
sbb
mov
cmc
arpl
aas
pop
dec
mov
shll
insb
mov
cmp
push
fwait
mov
mov
fisubl
adc
pushf
xchg
repz
je
movsb
in
test
push
js
ret
je
out
push
xchg
repnz
pop
jne
mov
mov
dec
lods
packuswb
into
lea
inc
aaa
scas
rcrl
cwtl
faddp
ss
mov
fs
xchg
mov
shll
out
push
scas
ds
test
xor
jne
shrb
data16
inc
pop
push
xchg
jle
pushf
cltd
xchg
mov
push
icebp
xlat
out
cmpl
sbb
mov
inc
jg
and
mov
xor
aad
or
scas
mov
movsb
mov
das
push
popf
push
jge
push
xchg
pop
bound
sbbb
push
inc
pop
dec
out
sbb
dec
jo
lahf
out
fstl
mov
or
je
jnp
cs
inc
mov
push
xchg
push
ror
stos
adc
xorb
bound
mov
aad
ret
pop
mov
mov
fisubrl
jl
push
mov
mov
pop
mov
xor
inc
mov
insb
push
add
pop
cmp
push
int
mov
xchg
pop
les
ja
shlb
mov
or
mov
repz
mov
push
add
rcl
out
int3
leave
into
imul
mov
cwtl
in
xchg
jl
xchg
daa
sub
sbb
ret
into
repz
jae
xor
jl
cmp
out
fisubl
enter
aad
push
sahf
cmp
mov
shll
xchg
push
pop
xchg
cmp
ret
nop
sbb
and
les
xchg
fimull
arpl
xchg
inc
jmp
dec
nop
test
and
cltd
or
xchg
in
loopne
pop
or
push
cmpsl
inc
jp
cmp
aam
xchg
mov
mov
mov
xchg
mov
xchg
inc
or
mov
pop
daa
les
mov
addr16
xor
stos
dec
sub
pusha
mov
xor
add
test
fndisi(8087
mov
jmp
movsb
mov
dec
test
push
push
add
jge
stc
insb
sbb
jg
mov
mov
aam
pop
les
iret
sahf
inc
xchg
js
xchg
decb
jns
lods
aad
shll
bnd
call
add
cli
mov
add
mov
mov
aas
xor
outsl
push
push
fldt
mov
pop
sub
cmpsb
sub
or
pxor
cwtl
ficoms
out
in
dec
push
inc
sub
pop
and
adc
call
mov
mov
add
nop
push
fidivrl
shrb
ds
cmpsl
cmp
imul
movsb
out
es
xor
repz
movsl
mov
aaa
enter
sub
bswap
icebp
dec
mov
sbb
xchg
test
jo
pop
jbe
cmp
adc
jo
xchg
cltd
xchg
jae
pop
adc
test
cli
pop
scas
fimuls
inc
lods
sbb
push
sbb
jle
mov
mov
insb
mov
inc
cltd
movsl
es
dec
mov
aad
mov
pop
aas
mov
outsl
adcl
dec
lcall
xchg
mov
mov
adc
insb
mov
dec
pop
mov
sbb
mov
in
lea
insb
sahf
push
lret
xchg
gs
xchg
jl
or
lods
lcall
loope
mov
orb
les
xor
sbb
xor
xchg
inc
inc
dec
addr16
jno
jo
pop
fdivrs
dec
add
cmp
sub
nop
call
repz
push
les
xchg
cmp
and
pusha
je
test
icebp
lret
mov
daa
jne
pop
in
mov
sbb
push
cmpsb
fcoms
inc
mov
sti
mov
cld
cmpsl
push
shl
sbb
inc
sub
movsl
inc
xor
fwait
out
dec
push
push
notb
daa
test
scas
lret
add
insb
out
jae
jae
test
lods
add
sahf
test
and
sub
nop
pusha
mov
ret
ja
jp
in
jae
dec
xor
or
fsubl
jmp
push
int3
jecxz
mov
fmuls
mov
xchg
rorb
ds
dec
sti
xchg
aaa
shl
ficoml
das
mov
sbbb
int3
stos
jl
into
xor
cltd
stc
cmp
aas
add
sub
dec
mov
clc
arpl
aad
loopne
popf
mov
jl
sbb
mov
adc
test
xor
int3
int3
push
cmpsb
or
jg
cmpl
mov
xchg
cmp
xchg
out
add
sub
lea
sub
lods
outsl
leave
insb
jbe
mov
je
jae
jle
es
add
lret
and
ljmp
push
adc
std
and
daa
arpl
xchg
ja
repnz
mov
movsl
les
lcall
xchg
sub
xor
addl
mov
scas
std
pop
sub
idivb
and
pop
pop
shll
dec
rcrb
xchg
sub
test
or
test
push
mov
xchg
adc
jns
int3
imul
aam
push
sbb
dec
push
andb
icebp
push
xchg
cmp
jmp
out
mov
ret
rcll
in
mov
pop
pop
inc
lahf
xor
stos
aaa
inc
adc
jae
and
dec
inc
js
mov
fiadds
sbb
ret
jne
int
rorl
inc
rclb
mov
pop
fwait
mov
add
sub
dec
lret
cli
icebp
sub
xor
mov
mov
int3
mov
mov
lret
push
xchg
pop
dec
test
outsb
fdivrl
xorl
pop
int
dec
adc
mov
insb
mov
adc
jns
xchg
imul
daa
push
mull
pushf
cmp
inc
loopne
dec
add
add
xor
mov
jle
xchg
insb
ret
jp
push
lods
daa
pop
sahf
mov
sbb
cs
repz
xchg
ficomps
xchg
and
add
adc
inc
hlt
sub
or
mov
shrb
js
fwait
lds
push
xor
adc
jbe
pop
popf
pop
les
outsb
or
xchg
mov
cmp
incb
jle
leave
cmc
push
rdtsc
mov
negl
xchg
pop
jne
movsb
add
xor
sub
imul
sbb
cwtl
cmp
push
pusha
pop
mov
iret
repz
dec
or
sti
rcll
mov
fdiv
or
mov
lret
divl
ret
or
pushf
cmpsb
stc
insl
or
es
xchg
aam
int3
ret
add
and
nop
fs
loope
rorl
loopne
xchg
inc
mov
sub
imul
movb
jmp
xchg
mov
mov
nop
insl
or
out
je
cwtl
push
push
push
add
into
lock
sbb
push
or
push
jnp
nop
std
push
leave
fmuls
xor
push
mov
xchg
jmp
dec
add
dec
xchg
mov
jmp
push
lret
ja
push
in
or
cmp
iret
shl
movsl
sub
ss
divb
inc
ss
lahf
sbb
cmpsb
xchg
ss
sti
mov
aaa
fistpll
pop
cwtl
mov
xchg
and
xor
lds
repz
push
sub
mov
fisubrs
cltd
test
or
add
movsl
inc
imul
push
lods
insl
cmp
imul
mov
test
and
leave
popa
cmpsl
pop
push
sub
pop
mov
mov
lods
cmc
popa
jp
mov
cmp
jmp
xchg
sbb
add
stos
or
or
out
pop
aaa
out
cmp
je
mov
sbb
xchg
sti
pop
negb
imul
xor
xor
cltd
mov
jg
insb
jo
sbb
xchg
scas
jne
and
inc
xchg
into
dec
mov
adc
push
push
filds
lods
mov
enter
lahf
cmp
adc
sbb
pop
lcall
fisttpl
fdiv
xchg
bnd
leave
jno
loopne
test
mov
movsl
sub
xor
bound
int
xchg
mov
dec
daa
or
jno
ss
mov
mov
cmpsb
xor
cmpsl
inc
pop
fsubl
dec
dec
out
leave
inc
add
mov
cmpl
cs
divl
adc
cli
push
mov
dec
fstl
js
scas
mov
jb
dec
push
sahf
dec
jmp
rclb
les
sbb
inc
push
pop
jae
xchg
neg
sarb
fcoms
or
push
inc
add
out
cmp
sub
loop
int
pop
icebp
int
out
cmp
push
mov
push
ficoms
sub
lods
xor
push
popf
cmp
stos
or
push
mov
mov
adc
sbb
adc
add
mov
mov
cwtl
cmp
cmp
repz
sarl
les
inc
cmp
test
cs
aam
loope
dec
aaa
xchg
mov
lahf
xchg
lahf
push
push
push
mov
push
ficomps
shlb
movsb
call
arpl
sub
adc
jg
jl
jmp
adc
push
int3
popf
shl
sbb
jle
stc
sbb
mov
push
aas
incl
mov
cltd
lret
add
jecxz
dec
clc
or
pop
xsaves
aas
and
add
dec
sub
testb
cmpl
xor
jae
pop
sbb
and
or
fwait
dec
mov
xor
jle
fucom
pop
xchg
fs
lods
fsubl
adc
mov
std
mov
mov
in
popa
bound
jnp
jne
push
mov
xchg
mov
aas
inc
inc
xlat
fisttps
sub
xchg
sub
ds
xchg
out
je
faddl
loop
xchg
fimull
icebp
adc
std
roll
jne
dec
outsl
not
fnstsw
aas
divb
add
ficomps
repnz
sti
fcomip
pop
pop
das
and
out
or
pop
pop
dec
mov
daa
ret
lret
cltd
loop
inc
je
inc
cmp
pop
mov
inc
mov
aad
or
cmp
repnz
mov
imul
xchg
mov
pushf
mov
cltd
jge
xchg
lea
aam
andl
mov
mov
push
jg
popf
xchg
xchg
cmpsl
mov
cmpsl
addb
jg
push
sub
pop
push
insb
mov
add
sbb
push
cs
jnp
cmc
sbbb
das
fs
js
sti
mov
mov
dec
out
je
jecxz
inc
cmp
cmc
cmc
xchg
mov
jae
inc
sub
inc
jle
sbb
or
pop
inc
test
stos
sbb
cltd
movsl
loop
cs
test
stos
mov
mov
push
js
push
jb
in
or
dec
aas
and
push
or
pop
iret
pop
mov
mov
inc
xchg
push
mov
fs
mov
jp
jnp
ret
mov
pop
insb
data16
rcrb
clc
mov
push
xchg
neg
outsb
push
inc
inc
ret
mov
xchg
push
push
out
in
dec
adc
sub
aam
sbb
jg
mov
stc
add
xor
lods
push
pop
cmp
ljmp
lea
lods
imul
outsb
rclb
rcrl
imul
or
fdivrl
mov
push
lock
not
rcrb
shrb
adc
fistps
addb
pop
push
mov
pop
or
xor
ret
and
xor
bound
imul
xchg
mov
sub
popf
pushf
addr16
mov
xor
xor
push
fistl
lds
addr16
fwait
xchg
ds
xchg
andl
inc
sub
fidivl
add
push
leave
rorb
jle
or
mov
push
jnp
inc
les
addr16
stos
jbe
lock
jge
inc
mov
ja
cmp
repnz
imul
cmp
push
push
mov
xchg
das
jg
jo
notl
and
lods
in
jnp
sub
cmp
loop
pushf
aaa
rclb
jbe
lock
sbb
adcb
ds
cld
loope
jl
jl
xchg
jae
jns
sbb
sarl
lods
sahf
std
cmp
stc
mov
test
popa
jmp
sub
aam
jae
shrl
jnp
repz
xchg
jo
movsl
clc
cmc
mov
in
push
js
lcall
dec
cmp
add
fimuls
mov
iret
nop
sbb
je
je
jnp
mov
dec
out
sbb
out
stc
fistl
cwtl
mov
dec
in
ret
fsub
add
dec
cmpsb
add
xor
mov
xchg
pusha
call
stc
xor
sti
mov
push
sti
sub
sbb
jecxz
and
out
jle
cmc
cmp
and
in
pushf
xchg
dec
or
movzwl
jns
cs
xchg
and
scas
adc
sub
pop
repz
fsts
inc
cli
aaa
pop
mov
adc
or
mov
fmulp
ret
push
repz
cmp
xor
into
adc
jle
bound
test
out
mov
jne
and
dec
inc
repnz
mov
xchg
push
mov
or
popf
mov
fwait
popf
xor
xor
pop
sub
int3
mov
push
arpl
mov
imul
jmp
jle
setp
add
or
push
lods
mov
sub
jle
dec
in
daa
or
pusha
movsl
adc
xor
pop
add
icebp
mov
adc
push
ffree
inc
lods
pop
ss
insl
jae
sub
fmul
ljmp
dec
ret
xor
or
jbe
jne
jmp
cmp
xchg
mov
pop
or
aam
cltd
cmc
int
lret
jl
addl
pushf
fwait
lock
or
out
mov
cmp
inc
push
in
mov
call
call
pop
shrl
lds
push
enter
pop
add
fcomps
dec
pop
and
ja
scas
rcl
lcall
push
cmp
std
cmp
adc
jae
fucom
sub
push
push
cwtl
js
sahf
int3
mov
sub
add
jnp
push
sub
xchg
pop
jnp
and
mov
insl
outsb
fbld
mov
stos
xchg
sbb
inc
lds
popf
leave
cld
and
lock
xchg
add
lods
adc
lahf
pop
adc
rcrb
aaa
mov
or
or
dec
push
es
mov
xchg
jne
lcall
pop
and
inc
adc
mov
cmp
lret
outsl
jecxz
rclb
in
xor
in
or
xor
insl
add
mov
inc
xchg
lret
loop
aas
mov
xor
fstpl
xlat
xor
stos
xor
sbb
call
repz
imul
fstl
fistps
cmp
fstpt
hlt
sbb
les
je
cmp
dec
xchg
popf
hlt
push
xchg
repz
xorl
adc
pop
call
gs
popa
adc
test
ds
testl
loopne
stos
js
push
or
dec
lret
mov
into
into
ds
dec
out
fdivrl
daa
data16
mov
jge
cmp
pop
jbe
sub
push
sti
stos
subl
test
xchg
ficoml
jg
sbb
cli
and
jge
inc
adc
adc
pop
iret
ret
jg
jno
xchg
sub
orl
fadd
mov
notb
shrl
inc
fadd
inc
xchg
xchg
mov
mov
test
lcall
rorl
popa
inc
push
test
icebp
adc
pop
cmp
mov
lods
jbe
addr16
pop
into
jo
mov
or
push
sbb
xchg
push
fistps
jle
pop
insb
adc
cmp
testb
push
xor
xchg
add
clc
insb
adc
xor
fcomi
arpl
aaa
ret
ud0
roll
dec
inc
ds
mov
fsubs
push
pop
dec
cmp
and
rcrb
dec
hlt
inc
test
enter
cmp
jle
imul
jbe
push
fs
and
insl
mov
mov
enter
ljmp
ljmp
test
mov
jmp
div
lods
push
shr
sub
cmp
push
imul
or
xchg
les
fdiv
xchg
dec
mov
leave
imul
adc
jl
frstor
test
xor
dec
xchg
insb
cwtl
cltd
sbb
inc
in
xchg
pushf
cmp
push
mov
sub
ja
fistpll
lock
xorl
push
jb
cld
lea
fisttpll
jne
loop
cmc
nop
aam
inc
dec
test
notl
xor
adcb
popa
dec
xchg
jg
arpl
jns
pop
in
gs
xchg
cmp
mov
dec
jmp
ds
xchg
pop
add
jge
pop
fwait
ret
mov
rclb
push
or
es
mov
insb
jno
sti
cmp
jns
or
aam
mov
pop
fs
mull
les
icebp
xor
inc
imul
ret
xor
pop
xchg
imul
aam
adcl
addr16
cmpsb
cmpsb
fwait
cmp
out
dec
cltd
scas
lret
pop
lods
inc
xor
mov
mov
mov
push
mov
fld1
daa
mov
scas
testl
gs
rol
pop
xor
rolb
subb
ja
mov
push
test
sub
mov
push
daa
jo
movsb
mov
adc
pop
daa
into
test
inc
adc
out
ret
gs
push
movsb
repnz
xor
jge
inc
mov
sub
aas
repz
inc
add
adc
mov
std
dec
mov
adc
sub
ja
xor
stos
push
ret
mov
test
dec
ljmp
add
cwtl
ficomps
cmp
ret
rolb
icebp
push
pop
rclw
js
psllw
inc
mov
pop
add
jo
sub
push
sbb
insl
hlt
or
testb
pop
cmc
sub
sub
pop
enter
daa
mov
lret
frstor
jecxz
adc
fmul
and
lds
stc
outsl
jp
pop
in
pop
cmpsb
stc
out
cmp
cli
mov
inc
hlt
aad
xorl
add
in
or
add
push
adcb
add
imul
mov
mov
xor
pushf
adc
popf
xchg
add
fs
fdivs
mov
stc
pop
jnp
lods
jle
jmp
sbb
xor
cmp
or
push
es
dec
inc
mov
xchg
ret
adc
imul
or
inc
mov
mov
dec
adcl
jge
or
inc
enter
jp
push
cmpsl
or
cs
shlb
push
push
add
sbb
sub
sarl
xchg
xchg
xchg
mov
jp
jns
call
testl
sub
inc
push
lahf
jnp
pop
sbb
mov
or
sbb
pop
std
insl
nop
mov
or
cmc
rcrl
xchg
push
into
int
mov
test
lret
pop
out
cmp
pop
push
ret
pcmpgtd
cmp
decb
imul
push
pop
mov
adc
inc
je
and
ret
xchg
mov
cmc
inc
mov
orb
pop
push
lods
jecxz
xchg
outsb
ror
clc
and
test
lret
popf
lret
call
mov
jge
lea
jle
mov
into
fnsave
xchg
jo
cltd
mov
cltd
test
xchg
mov
xchg
dec
or
jne
jp
sub
hlt
pop
adc
jb
jp
lods
in
stos
inc
mov
scas
andb
icebp
mov
lds
ds
sub
dec
lcall
cmc
mov
int3
fsubrs
mov
inc
test
ret
ret
mov
out
xchg
aam
loopne
out
fsubp
mov
test
js
outsb
xchg
sub
push
rcl
inc
sub
stc
add
xchg
ds
or
mov
addr16
add
sbb
add
in
cld
push
mov
mov
into
push
in
loope
lods
arpl
gs
sub
icebp
dec
mov
dec
xchg
cmp
mov
pop
int
pop
shll
in
cmpsb
pop
loop
mov
das
jecxz
jge
mul
bound
jo
dec
mov
lcall
test
orb
dec
insb
xor
or
adc
push
pop
mov
xor
mov
mov
xchg
rcrl
inc
orb
xchg
movsb
mov
mov
es
inc
lods
cmp
lods
cmpsl
mov
testb
imul
adc
lret
dec
fcoms
loopne
inc
sub
mov
iret
pop
ss
push
jne
jne
pop
push
jo
scas
cltd
adc
imul
stc
cmp
push
push
aad
popl
mov
or
arpl
in
jge
lock
icebp
mov
call
fidivl
dec
xor
cld
xchg
notb
icebp
cmpsl
cs
imul
pop
fadd
and
jp
xchg
push
mov
leave
cs
mov
rcrb
push
in
lods
sub
pop
xor
shl
and
add
popa
test
out
cltd
xchg
xlat
cmp
insb
lret
nop
fiadds
fwait
pop
loop
xlat
jecxz
lds
pcmpeqw
push
cmp
sarb
pop
adcl
adc
cld
jbe
das
add
cmp
mov
sti
fnstsw
pop
cmpb
add
jno
loop
sbb
fcomi
and
xor
leave
mov
sbb
repnz
inc
xor
hlt
outsb
pop
sub
mov
roll
inc
xlat
xchg
dec
and
pop
cld
data16
in
lock
and
rcl
sbb
inc
loope
popa
xor
loopne
mov
cmp
and
subb
sub
movsl
int3
or
insb
aad
aas
or
pop
or
sub
insl
xor
cld
stc
cltd
aas
adc
adc
lcall
shll
popf
cmp
flds
stos
movsl
mov
fadds
jge
das
into
dec
popl
jb
inc
adcb
lea
mov
pop
cwtl
je
mov
jg
cld
mov
adc
or
pop
cwtl
sbb
lahf
mov
xlat
xchg
addr16
sahf
int3
xlat
jle
mov
push
pop
dec
mov
push
stc
std
pop
push
mov
jge
test
xchg
xchg
leave
scas
inc
int
mov
idivb
lods
mov
das
fld
lods
xlat
pop
lahf
push
in
icebp
loop
movsb
loope
mov
mov
icebp
nop
inc
shlb
mov
ds
mov
jns
ret
and
xchg
sbb
daa
cmovs
jl
aam
sbb
add
add
pop
nop
js
std
movsb
jecxz
iret
xchg
divb
adc
xor
xchg
out
mov
and
data16
andb
out
pop
ror
or
mov
popf
push
cs
scas
cmpsb
addr16
cmp
jle
add
stos
pop
in
add
push
dec
sub
sti
lods
xchg
mov
or
xchg
push
stos
inc
sub
dec
xor
into
pop
dec
arpl
sbbb
push
bound
cmc
rcll
xchg
inc
xor
mov
repnz
inc
addb
lcall
mov
pop
xor
shll
jl
loop
xchg
mov
add
rcrw
icebp
and
and
jb
pop
popa
cmp
test
add
out
in
sarb
mov
dec
insb
icebp
scas
rcrl
dec
jmp
mov
lea
pushf
xchg
loop
push
sub
jo
and
ja
dec
push
mov
ficoms
orb
xchg
add
test
pop
adc
mov
pop
test
or
jbe
jmp
xor
imulb
ret
sbb
cli
xchg
ds
and
adc
icebp
stos
fistpl
mov
sbb
adc
mov
or
and
and
adc
mov
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
lret
inc
dec
push
push
sub
push
push
jo
pop
fnstsw
cmp
loopne
cltd
xor
iret
sub
jge
cld
xor
mov
xchg
push
shl
inc
ljmp
sub
cmpsl
inc
adc
xchg
xor
mov
xor
data16
cmp
js
sub
xchg
mov
dec
mov
lods
ljmp
pop
scas
dec
cld
xchg
ret
int
jp
mov
jns
sbb
js
dec
iret
jge
das
in
inc
jg
sub
daa
movsl
cmp
jns
movsb
xchg
les
sahf
mov
in
pop
sarl
sbb
cmp
sbb
rorb
enter
pop
mov
mov
mov
ss
jbe
std
mov
subl
xor
int
in
loopne
sbb
jl
sub
push
in
inc
mov
adc
inc
xchg
and
xor
lret
mov
out
push
mov
fmulp
dec
je
dec
push
jo,pn
popf
push
jmp
repnz
push
ljmp
lea
mov
adc
test
orl
push
test
xchg
mov
addr16
dec
dec
push
lds
out
push
nop
rclb
push
fmuls
pop
sbb
pop
mov
movsl
mov
xlat
push
xor
popa
imul
and
es
sbb
repz
add
jecxz
imul
xor
in
adc
mov
adc
int
mov
push
sub
mov
sub
sbb
pop
pop
inc
loope
dec
pusha
dec
mov
pop
xor
sahf
jnp
shll
sbb
pop
imul
mov
addb
ja
cmp
ljmp
sahf
jnp
sar
sbbb
dec
mov
xor
pop
nop
inc
ret
shr
nop
mov
lods
mov
pop
inc
xchg
mov
int
xabort
aas
adc
out
loop
aas
loop
stos
ljmp
lods
cmpl
fwait
add
mov
sti
lds
sub
sub
and
in
andb
lcall
jns
pop
push
in
ljmp
decb
sub
push
add
mov
push
cmp
xor
aam
mov
pop
add
sbb
out
adc
lahf
test
inc
xchg
inc
test
mov
lods
sbb
faddp
dec
int3
in
mov
or
data16
icebp
stc
add
mov
ficomps
dec
adc
aas
movl
fbld
push
outsb
xchg
xlat
aad
jnp
push
das
inc
mov
es
call
test
ret
lods
fnsave
and
ss
int3
mov
cmp
and
sti
cmpsb
sbb
sbbl
mov
jge
addr16
or
cmp
sbb
push
mov
mov
fcomps
sub
aam
daa
fs
ret
inc
xor
adc
push
sbb
cltd
inc
mov
in
push
test
xor
sbb
sub
movsl
push
sar
and
loopne
loope
mov
popa
push
clc
inc
sub
repnz
mov
cs
xor
push
loope
repz
pop
pop
sub
dec
sub
push
clc
sbb
jno
inc
movb
cmpsl
adcb
rolb
in
lods
in
fsts
sub
idivb
add
adc
sub
ret
adc
xchg
mov
leave
push
mov
inc
adc
movsb
add
mov
imul
inc
xchg
pushf
push
lcall
idivl
lea
jbe
sbb
stos
enter
and
or
sub
or
rorl
fnstsw
cmp
adc
add
pop
mov
jb
fimuls
or
pop
es
movsl
xor
mov
iret
shrl
adc
inc
add
xchg
push
jnp
add
push
sub
push
mov
pop
xlat
xor
push
xchg
out
and
jp
push
xorl
out
push
pop
repz
incl
out
test
xor
add
je
mov
in
fisttpl
loope
and
or
ret
jp
mov
es
or
sub
cmp
fldt
push
pop
inc
sub
mov
into
insl
lds
add
pop
inc
jno
dec
and
sar
sub
aam
dec
add
adc
push
push
loop
sbb
lret
cld
jg
push
mov
mov
dec
xor
fiaddl
repz
dec
in
rolb
sub
add
fsts
cmp
adc
push
dec
or
shll
lods
sbb
dec
leave
sti
scas
in
or
ret
mov
icebp
and
sub
bnd
bound
xlat
mov
lods
scas
mov
and
loopne
xor
or
in
push
add
cmc
add
jne
adc
ds
enter
scas
fldenv
and
insl
loop
inc
xrelease
fbld
jmp
jae
lahf
ds
push
or
stos
jne
das
and
fcoms
mov
sbb
movsb
pop
sbbb
int3
into
mov
popf
stos
gs
mov
scas
iret
and
out
orl
mov
inc
push
fbstp
fnsave
loop
ret
adc
pop
loop
xcrypt-ofb
cmpsl
sub
cmp
and
loopne
or
mov
nop
push
std
add
push
fs
fadd
jmp
cmp
push
outsb
scas
xchg
test
ljmp
xorb
mov
jb
or
dec
xchg
mov
je
xchg
pop
mov
add
xchg
fistl
arpl
sbb
adc
sub
daa
pop
jns
insl
pushf
cmpsl
push
cmp
pop
xlat
mov
adc
cmp
imul
xor
repz
and
iret
jno
xor
cmp
mov
add
test
pop
and
mov
jle
lahf
cmp
mov
movsl
or
pop
pop
loop
dec
and
test
setl
mov
mov
arpl
int3
ljmp
xor
add
mov
pslld
dec
dec
inc
mov
sub
movsl
xchg
pop
mov
inc
scas
mov
dec
add
setge
call
xchg
mov
lahf
cmp
xchg
bound
push
xchg
sbb
loope
jmp
cmpsl
and
push
cmp
repnz
sbb
js
cli
add
push
jae
int3
aas
push
imul
imul
pushf
insb
cmpsb
pop
sub
and
or
pop
and
in
ja
test
ds
cmp
jno
scas
xchg
mov
cmpsl
out
push
into
leave
aad
or
mov
fmull
adc
fbld
std
rcrl
mov
push
pusha
jnp
nop
xor
inc
xchg
cmp
and
sarl
sbb
xorl
mov
mulb
lcall
cmpsl
or
jae
xchg
jge
mov
cmp
inc
mov
dec
pop
inc
adc
push
inc
cmp
lds
add
pop
cmp
cmp
xor
inc
stos
pop
jl
adc
add
or
and
mov
mov
stos
test
call
push
jl
and
mov
xlat
jns
ja
rclb
push
cmpl
dec
mov
in
shrb
or
sbb
js
enter
add
mov
or
mov
popa
insb
inc
sub
call
dec
xor
es
or
mov
lea
jl
stc
jnp
mov
mov
nop
mov
jp
into
mov
cmp
mov
jle
dec
ds
cmp
and
aaa
xchg
scas
test
xor
lahf
sub
dec
fidivs
jp
daa
cmc
ds
mov
inc
rcl
or
mov
sbb
push
jge
lock
fcomps
jns
jecxz
fnsave
sub
xchg
adc
pop
fdivr
mov
pop
inc
sbb
push
pop
sbb
xchg
sub
mov
or
inc
pop
fimuls
fdiv
testb
sub
sbb
adc
and
lret
lcall
push
stos
icebp
scas
jae
and
lods
out
sbb
inc
xchg
push
mov
add
cwtl
clc
pushf
movsb
sti
lods
fs
in
sub
aas
pop
nop
inc
jmp
inc
dec
adc
sbb
imul
out
outsb
cwtl
jge
jl
sub
fstpl
ss
je
in
clc
mov
out
aam
add
aad
xchg
mov
adc
inc
cmp
es
sti
jg
inc
mov
cmp
movsb
sbb
pusha
paddw
out
adc
xchg
hlt
push
ljmp
and
cs
push
insl
xchg
mov
in
dec
bound
lea
in
fistl
scas
push
inc
loope
add
adc
aam
ret
adc
je
sar
subl
mov
cwtl
loope
sub
mov
mov
mov
xchg
sub
mov
les
push
out
pop
xchg
inc
cmp
push
adc
sbb
adc
mov
push
call
inc
mov
fcoml
mov
mov
cld
sbb
call
pusha
push
or
das
scas
xor
outsb
cli
xchg
pop
add
sub
lret
mov
cs
xchg
test
data16
dec
in
sbb
mov
fdivr
scas
adc
mov
notl
mov
add
adc
pop
test
nop
std
pop
push
cmp
dec
les
add
lock
mov
add
push
mov
dec
dec
imul
cmp
cmp
xor
dec
sbb
or
cmpsl
leave
mov
jg
es
mov
movsb
adc
sub
adc
popa
stos
loope
xchg
pop
out
sbb
dec
mov
pop
mov
sub
push
loopne
xchg
aad
jmp
or
xor
sub
cmovbe
dec
jae
movsb
rcll
pop
fistps
orb
jbe
imul
mov
out
subb
and
gs
insb
addr16
mov
push
add
rorb
pop
sbb
sbb
ljmp
pop
inc
pop
mov
fdiv
flds
sub
movsl
jb
rcrb
outsl
cs
add
pop
push
adcl
pusha
mov
ret
and
imul
gs
pop
xchg
shlb
lods
pop
cmp
out
adc
outsb
roll
pop
pop
push
sub
enter
test
mov
jo
enter
mov
mov
mov
sbb
mov
scas
addr16
sahf
fidivrl
add
or
dec
inc
daa
xchg
call
out
pop
test
jp
adc
loop
jg
nop
cmp
dec
repnz
rorb
xorl
pop
outsl
mov
out
xchg
pop
pop
push
in
sarl
jp
mov
sbb
cmc
pushf
mov
jne
cmp
ret
ja
pop
ret
jmp
lods
xor
sub
popa
test
mov
sbb
dec
jnp
inc
pop
pop
pushf
add
jne
fidivrl
popa
outsl
aaa
inc
stos
shl
leave
cmpsl
sahf
push
aad
pop
lret
lods
test
shll
roll
pushf
or
out
in
inc
mov
cmp
movsl
adc
add
xchg
mov
pop
xchg
mov
test
cwtl
out
shlb
inc
shlb
or
add
divb
xchg
cltd
ret
inc
xchg
adcb
aad
orl
mov
jp
cmpl
mov
jecxz
pop
in
addr16
popf
adc
mov
imull
push
cs
outsl
mov
xor
mov
into
add
cmp
jg
test
in
inc
push
aad
mov
sub
outsl
imul
rorb
repz
prefetch
or
fcmovnu
pop
lret
mov
rclb
or
jae
orb
mov
mov
pop
imul
mov
gs
sbb
or
dec
jmp
das
add
mov
cmp
cmp
cli
jb
les
popf
int3
pop
mov
les
cmp
fsubp
xor
inc
push
xchg
adc
loopne
test
test
add
xchg
jl
lcall
or
sar
xchg
lcall
xchg
bound
and
sub
cmp
jne
xorl
jno
les
jmp
addr16
sbb
cltd
xor
pusha
adc
jecxz
xorl
cmp
hlt
lock
lock
aaa
mov
mov
lock
mov
stos
push
mov
int
dec
pand
pop
dec
clc
xchg
cmp
fwait
gs
stos
jbe
mov
insb
dec
or
jecxz
outsb
inc
lods
xlat
insb
pop
cmp
xchg
aas
mov
out
movsb
out
and
sbb
inc
out
dec
loop
out
jge
addr16
stos
int
das
mov
setns
fldt
repz
fwait
or
in
sub
xor
xor
jp
xor
cmp
xchg
ljmp
movsb
mov
jecxz
add
test
fs
cwtl
or
sbb
inc
in
stos
inc
mov
jle
jle
add
mov
repnz
xor
ss
stos
pop
test
push
mov
pusha
rclb
and
gs
inc
add
in
cmp
and
aaa
sub
adc
mov
xchg
iret
or
and
sub
data16
test
add
enter
cmpsl
mov
mov
inc
or
cmc
fmull
popa
cmpsb
cmpsb
xor
cmp
adc
les
out
sarl
cmp
dec
loopw
sti
sbb
pusha
mov
jl
push
sbb
divb
lods
sub
mov
stos
push
jae
outsl
loopne,pn
addr16
pop
ss
push
mov
pop
aas
adc
icebp
test
lahf
and
into
call
and
ds
int
cmpsb
out
mov
add
xchg
ja
shlb
jnp
mov
fwait
sti
cmp
inc
das
jg,pt
mov
nop
outsb
ja
dec
mov
sbb
aad
incb
ret
popf
imul
cmp
inc
xchg
fdivl
aam
mov
xor
ret
mov
insl
adc
fidivrs
push
lahf
add
lods
popa
sub
sub
scas
leave
popa
fidivs
or
and
leave
pop
cmpsb
shrl
mov
xchg
nop
xor
xchg
pop
mov
or
lea
in
in
out
dec
addr16
fbld
sahf
or
xchg
mov
sub
push
adc
ret
pop
rcrl
fucomip
cwtl
test
loop
adc
fstpt
mov
push
or
sbb
and
push
lret
es
xchg
scas
in
rcr
fdivl
pop
mov
pop
sbb
gs
in
jae
fdiv
les
lcall
js
mov
gs
out
stos
fisubrs
out
or
add
ret
sbb
push
sub
and
cmp
stc
je
test
fistpll
xchg
adc
xchg
jae
mov
adcb
sbb
xorb
pop
mov
lods
ss
enter
jnp
cmp
in
xorl
idiv
push
mov
sbb
sub
and
clc
leave
adc
xor
mov
jae
in
sub
je
mov
cmpsb
xchg
lock
push
mov
insl
pop
or
mov
jl
pop
imul
xchg
cmpsl
mov
push
sbb
pop
je
lea
mov
shll
ss
cmc
mov
push
fsincos
xchg
fistps
out
lods
dec
adc
mov
pusha
arpl
sti
fdivrp
loop
jae
rcrb
xchg
shrl
outsl
xor
mov
sub
out
mov
add
outsl
and
cmp
or
js
push
popa
mov
mov
adc
jno
fucomi
cld
pop
fdiv
test
jle
outsl
pop
cmpsl
scas
gs
xchg
mov
cmp
dec
idivl
mov
sbb
out
mov
lret
aaa
mov
xor
mov
cmp
cmpsl
jle
pop
lods
outsb
mov
fwait
scas
ret
cld
mov
stos
int
inc
dec
dec
mov
and
push
mov
jmp
icebp
repz
outsl
xchg
in
mov
test
ret
sbbb
pop
pushfw
lcall
mov
cmp
mov
push
rorl
xchg
mov
orb
push
out
clc
int
lea
int3
xor
movsb
mov
xchg
pop
push
cwtl
popa
jmp
or
mov
mov
fists
in
mov
in
shll
cmpsb
in
push
enter
push
in
aam
mov
repnz
inc
mov
inc
xchg
adc
jbe
xchg
fdivrs
add
fcoms
stos
fidivl
sub
ret
test
add
orb
xchg
xor
sub
cld
jg
leave
ret
push
cmp
in
mov
add
add
enter
outsb
push
fidivl
dec
loopne
imul
push
stos
adc
loope
in
mov
add
mov
adc
insl
or
push
insb
and
pop
cwtl
pop
leave
je
mov
xor
cmp
add
adc
daa
sbb
mov
fildll
hlt
jnp
lock
sub
in
movsb
cli
shl
lcall
dec
inc
jbe
cmp
sarb
ficompl
push
push
ret
xor
loope
push
dec
inc
rcrl
sub
cmp
hlt
jmp
sbb
ret
fcoml
sub
out
add
es
fmull
cmp
xchg
loope
lret
lret
dec
cltd
cmp
cli
or
popf
inc
mov
sbb
test
data16
mov
push
jne
jae
and
inc
out
sub
cmp
icebp
pop
dec
inc
xchg
pop
jl
pop
xchg
pop
inc
jb
das
ja
cltd
add
mov
stos
mov
shr
pushf
sub
into
cmc
cmp
lcall
jecxz
cmp
shlb
pop
add
sub
inc
jbe
sbb
sbb
inc
add
sbb
rolb
adc
nop
imul
mov
jbe
into
pop
fsts
aas
stc
jle
repnz
push
sti
lds
mov
sub
cs
stos
cmp
sbb
insb
dec
push
cltd
adc
ds
ret
pushf
mov
sbbl
jns
or
stos
data16
inc
stos
jns
in
push
scas
pop
xor
cld
cmp
mov
mov
in
mov
and
outsb
add
lods
jge
ds
iret
push
dec
les
push
aad
es
dec
pop
dec
pop
pop
inc
adc
pop
inc
pop
cli
mov
push
mov
xor
jb
xor
adc
mov
add
mov
sbb
repz
pushf
cmp
push
jne
cmp
in
adc
ret
and
pop
mov
pop
xor
stos
enter
mov
jmp
and
bound
mov
lret
mov
inc
test
adc
add
call
ret
push
pop
push
push
mov
sub
pop
loop
hlt
add
mov
mov
clc
minps
stc
pop
mov
xor
lea
inc
mov
sarb
imul
jl
jl
fcmovnbe
fbld
dec
data16
pusha
push
outsl
lcall
rcrl
data16
icebp
xchg
or
push
dec
cmp
addb
dec
xor
std
inc
rorb
popa
pop
data16
xchg
call
inc
mov
mov
aas
cltd
cmp
push
outsl
dec
cs
aaa
ljmp
sub
inc
je
call
fwait
mov
test
sbb
mov
xor
cwtl
inc
mov
cmp
rclb
xchg
cltd
mov
xchg
aas
dec
mov
dec
sbb
mov
int
sub
loopne
mov
loopne
sub
lret
ret
cmc
pop
xchg
inc
cmpsb
xchg
pop
shlb
int
in
mov
fsubs
mov
mov
ret
sub
outsl
add
jl
daa
popf
fstpt
xchg
mov
xor
sbb
xlat
inc
cli
test
loope
lea
loope
add
aad
push
pop
insl
pusha
dec
mov
mov
jbe
xchg
xchg
push
sbb
lcall
into
jns
or
mov
or
into
pop
repz
cmpsb
jnp
lret
fucom
xchg
cmp
mov
pop
xor
add
dec
loope
popf
cmp
mov
fidivrs
repnz
mov
jb
push
dec
fdivrs
pop
dec
lahf
jg
lds
xchg
cmp
and
push
leave
shlb
pop
xchg
adc
sbb
mov
sbb
testb
adc
mov
lret
jno
mov
xchg
arpl
xchg
push
cmp
inc
push
outsb
xor
pop
lods
adc
jbe
jne
mov
ret
pop
xor
fcmove
xchg
mov
mov
jb
and
les
xchg
mov
push
mov
scas
push
adc
lcall
mov
outsl
xorb
push
fcomp
sub
std
push
jae
cmp
cmp
bound
jp
pop
divl
loopne
mov
sub
jnp
fwait
cli
cmp
inc
in
add
jge
xchg
inc
xchg
and
xor
clc
sub
test
aam
ds
jne
xchg
sub
add
fwait
mov
aad
out
mov
test
or
jo
inc
and
sub
sti
outsb
push
xchg
push
imul
adc
dec
cmpsl
jmp
ja
mov
lcall
js
clc
fpatan
stos
jge
mov
sbb
jae
into
adc
mov
push
loopne
in
in
pop
mov
cmpsl
sbb
pop
sub
sub
push
js
ja
scas
iret
std
mov
push
cltd
push
es
js
cmpsb
inc
movsb
pusha
divl
xor
cmp
mov
cmp
sbb
sbb
and
mov
ds
mov
sbb
test
jb
call
daa
pop
jne
cli
and
enter
arpl
repnz
mov
cmp
cs
cmp
imul
pushw
mov
sbb
cmpl
jns
bnd
scas
aad
and
mov
mov
mov
fs
jbe
shl
xlat
jmp
sub
fwait
inc
jne
mov
sub
adc
cmp
aas
hlt
cld
ja
inc
cmpsl
cwtl
xchg
pop
aas
sub
xor
xchg
notl
cmp
lret
xchg
cmp
or
fimull
inc
jmp
cmp
cmpl
sbb
ljmp
imul
sub
push
dec
rcr
maxps
jl
and
mov
or
dec
ss
add
jle
xchg
mov
std
adc
subl
sbb
sub
sbb
js
push
jns
dec
jae
adc
sbb
xchg
and
stos
pop
inc
adc
xchg
and
scas
inc
call
mov
lret
mov
ss
add
rorb
enter
movsb
xor
push
in
push
aas
add
nop
dec
incb
ret
out
mov
imul
outsb
divb
loope
mov
sub
xchg
push
mov
lahf
and
lods
mov
jmp
dec
dec
enter
sahf
push
and
pop
test
jnp
fadds
and
dec
mov
in
cs
mov
xchg
xor
jb,pn
cwtl
xchg
mov
lcall
into
ret
ds
shrd
xor
inc
push
xchg
mov
jp
and
push
inc
pop
jmp
and
loop
push
dec
shrl
loope
mov
outsl
aaa
jae
int
int3
pop
or
xlat
jb
dec
and
shrl
mov
mov
adc
roll
call
cs
add
insb
cltd
jl
test
js
and
or
jl
int3
popf
in
jae
repnz
sbb
jbe
lret
test
push
gs
aaa
pop
or
mov
cltd
cli
sub
sub
mov
repz
mov
ljmp
xchg
pop
jno
cmp
call
icebp
das
rcrb
int
xor
pusha
mov
cmpl
test
or
fs
es
vpunpckhwd
jnp
shll
add
insl
push
or
sarl
and
fdivr
adc
rclb
adc
mov
div
jne
jg
or
gs
xor
dec
or
les
leave
adc
xchg
push
les
push
and
sbb
into
movsl
push
outsb
jg
xchg
pop
repz
jbe
ret
je
ret
std
clc
ja
push
dec
push
cs
stc
call
lea
and
inc
insl
div
xchg
in
in
movb
pop
not
imul
dec
mov
jge
stc
ret
jns
pushf
sti
andb
call
les
sti
mov
cwtl
cmp
pop
mov
je
rorl
fidivs
xor
pop
sbb
int
fmuls
loope
addr16
clc
cld
sub
loop
mov
fimull
lea
nop
xchg
pand
dec
inc
stos
sub
loope
hlt
sub
arpl
pop
testb
adc
add
out
xor
imul
fiadds
fnstenv
or
ret
and
push
lea
cmpl
xchg
sbb
ja
sub
leave
adc
mov
ret
in
test
int3
pop
sahf
push
pop
or
cmpl
inc
push
mov
cmpsl
add
pop
stos
cmp
rcll
xchg
push
addr16
cmp
shl
or
sbb
jno
out
mov
jno
or
sbb
adc
xlat
rorl
ljmp
ja
mov
test
jg
jge
movsl
xor
popf
shll
push
dec
push
jbe
mov
inc
mov
sarl
adc
push
inc
cmpsl
push
loop
out
repz
imul
shlb
inc
rclb
cld
outsl
mov
fstp
dec
scas
mov
std
jae
repz
inc
scas
jbe
pushf
das
dec
mov
sub
popa
jb
les
push
cld
cli
movb
cmp
inc
call
aad
sbb
or
pop
cmp
lcall
jge
or
rcll
ret
mov
mov
js
jae
repnz
adc
rcrb
sub
xchg
and
sbb
decb
gs
xor
and
ret
scas
es
pop
cmp
frstor
inc
sub
das
dec
mull
pushf
dec
xor
dec
cmp
pop
hlt
jno
fnstsw
inc
lds
pop
sub
jecxz
lcall
cmpsl
fucomp
adc
lds
dec
inc
push
dec
jle
adc
pushf
push
stos
inc
push
jns
mov
out
adc
push
push
mov
jg
mov
jne
mov
push
arpl
bound
xor
jbe
in
repnz
dec
and
pop
inc
and
sbb
loope
adc
leave
ret
cmpsb
push
arpl
cmpsb
leave
mov
out
int
sbbb
dec
enter
jns
sub
mov
sbb
test
cmpsl
ret
add
cld
push
or
xchg
jp
and
test
lock
xchg
cli
xchg
fisubs
adc
out
or
fucompp
xchg
xchg
incb
push
ficompl
shll
adc
loope
push
sahf
add
stc
mov
sub
xchg
inc
lock
les
mov
inc
fistps
and
imul
je
popa
pop
mov
iret
mov
mov
mov
rorl
mov
xor
decl
add
insl
sbb
aam
es
pop
mov
mov
xchg
out
rcr
sub
push
inc
imul
inc
sub
or
cmc
jo
mov
in
lcall
sti
cltd
jb
xor
seto
inc
or
inc
stos
xchg
xchg
cmp
fsubl
adc
out
cs
in
mov
out
pop
int
or
mov
cld
or
sbb
inc
add
or
inc
add
cmovae
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
dec
stos
scas
pop
or
push
push
xor
bound
sub
jl
in
out
mov
imul
dec
in
lret
push
mov
xchg
mov
mov
shrl
pop
dec
popf
es
mov
cmp
popa
sbb
ja
cmp
mov
xorl
gs
push
lds
iret
xchg
mov
je
ljmp
push
xchg
inc
lret
inc
aad
pop
stos
sahf
jl
das
loopne
mov
jns
adc
nop
jne
movsl
dec
pop
jbe
cmp
gs
cmp
stos
jno
mov
lods
dec
xchg
push
bound
sub
out
daa
js
stos
iret
lea
jnp
je
mov
gs
mov
cmp
jp
test
and
jae
and
sub
mov
lock
xchg
outsl
out
push
test
pop
pusha
test
dec
das
add
mov
push
lock
fs
insb
shl
popf
or
repz
sub
cmp
mov
fsts
in
and
add
xor
lods
out
cli
dec
cmp
std
mov
cwtl
jne
xchg
test
xor
mov
outsl
leave
fisubs
jge
lcall
mov
lods
ljmp
sbb
xlat
out
loope
lcall
adc
fstp
aam
inc
or
mov
outsb
jne
outsb
enter
push
lods
inc
out
jno
fisttpl
repz
aad
shlb
idiv
mov
scas
push
mov
out
mov
push
aad
scas
mov
sbb
sbb
test
cmpl
inc
cmp
mov
xchg
mov
ljmp
or
xchg
aas
loop
cmp
int3
lret
jge
cmc
cmp
push
enter
and
push
add
sub
pop
iret
stos
adc
fsubp
orb
sbb
add
mov
gs
and
mov
std
add
jb
mov
js
popa
dec
jmp
push
sbb
adc
or
in
das
outsl
scas
xor
mov
adc
test
addr16
jl
cmp
dec
push
lds
inc
jl
inc
ss
das
orb
mov
mov
adc
cli
xorb
lahf
fisubl
test
inc
mov
nop
rcrl
jg
mov
imul
ja
decb
sbb
pop
lret
loop
cmp
and
jp
and
or
aas
leave
pop
adc
jns
cmp
pop
xor
call
and
ret
dec
stos
jb
frstor
sub
and
sub
sub
pop
and
iret
mov
mov
fcmovnu
stos
jae
jle
cmpb
add
scas
inc
movl
sbb
test
or
xor
jb
mov
shlb
orl
xlat
popa
jmp
sahf
xchg
push
fisttpl
nop
mov
ja
mov
mov
repnz
mulb
push
test
mov
negl
xchg
or
bound
mov
mov
adc
or
mov
scas
jbe
aas
pop
sbb
and
xor
daa
cltd
cmp
repz
inc
popf
mov
mov
clc
inc
outsl
loopne
addr16
sbb
xchg
mov
xor
pop
or
mov
cmc
jo
push
sbb
pop
arpl
push
test
xchg
enter
negb
out
lods
scas
ret
inc
mov
jge
push
xor
mov
movsb
mov
ret
and
aaa
enter
addr16
outsb
fiaddl
adc
pop
cmp
or
xchg
add
fdivr
jb
sti
add
ds
les
push
shrb
pop
call
push
outsl
ds
fdivs
test
jo
cvtps2pd
sub
mov
ja
push
into
xor
test
jg
add
ret
cltd
cld
jle
push
jne
inc
or
in
js
mov
sbb
loopne
movsl
push
ds
stos
xor
ficoms
lret
dec
jb
jl
test
inc
iret
mov
fisttpll
insb
movsb
in
mov
xchg
xor
mov
pushl
jg
aaa
inc
lahf
pusha
shlb
fisubs
inc
das
insb
and
pop
mov
mov
add
jb
std
mov
ss
xchg
test
add
mov
js
jecxz
push
jg
pop
mov
jo
pop
fidivrl
imul
shlb
add
dec
fsubs
rolb
fnstcw
mov
lock
pushf
mov
fbstp
sbb
pop
cmp
lret
pop
xchg
xor
mov
mov
xchg
jae
pop
xor
adc
pop
jle
dec
adc
lods
lods
pusha
dec
fiadds
aam
pop
push
loopne
pop
pop
push
add
jl
mov
cmpsl
dec
pusha
push
outsb
xchg
loopne
test
loop
dec
ret
ljmp
rorb
int
sti
push
frstor
pop
dec
push
sbb
push
loopne
out
sub
hlt
sub
lcall
outsl
or
lret
daa
xor
cmp
test
jmp
aad
notb
stc
pop
adc
cmp
mov
loop
jg
adc
inc
aas
inc
inc
pop
push
stos
jge
aas
out
adc
fstpt
popa
pop
push
mov
push
mov
xchg
or
xor
stos
jbe
movsl
rolb
ss
fisttps
mov
dec
out
ret
or
imul
gs
or
js
or
push
xchg
popa
ja
mov
popa
mov
stos
jle
popf
or
pop
imul
int
jb
sbb
lret
in
push
xor
pop
shll
dec
cmp
iret
loop
fsts
movsl
addr16
inc
jge
jns
jl
ret
jae
lock
jno
dec
addr16
push
cmpsl
leave
sbb
ja
jbe
sbb
and
jecxz
jp
jbe
out
std
and
imul
mov
xchg
hlt
arpl
xchg
bound
shlb
push
sub
xor
add
lahf
pop
dec
gs
mov
xor
ss
out
cmpsb
or
pop
sub
push
divb
mov
and
mov
in
scas
jo
addr16
jnp
push
adc
dec
sub
add
jnp
xor
outsb
lahf
mov
push
fnstenv
stos
int
cmpsb
mov
pop
int3
into
int
and
push
lcall
jl
stos
mov
lea
xchg
das
mov
jmp
pusha
mov
xchg
ficompl
out
mov
popa
fstps
cmp
lcall
dec
aad
jg
loope
into
dec
sbb
cmc
loopne
scas
sbb
negl
inc
imul
out
out
cmp
cmp
pop
sub
daa
fucom
mov
int
add
pop
mov
inc
lahf
notl
scas
ds
mov
xchg
and
mov
push
dec
rcl
pusha
movupd
sbb
xor
call
mov
sbb
inc
lcall
adc
movsb
out
pop
adc
imull
adc
sbb
fabs
sbb
and
xchg
mov
mov
cmp
flds
fistps
dec
mov
or
aas
popf
jnp
dec
sar
fmull
pop
jo
jno
div
out
inc
push
popf
test
pop
adcl
mov
ds
mov
sbb
inc
mov
shl
mov
ljmp
push
addr16
leave
mov
movsl
dec
jns
cmp
scas
xchg
loope
sarl
fadds
les
repz
lea
or
sbb
rcll
adc
setne
es
stos
xchg
adcl
fcoms
sbb
cs
inc
mov
bound
jae
ss
jecxz
ss
daa
mov
mov
ret
mov
sbb
hlt
scas
insl
js
das
pop
subl
push
enter
jp
xor
or
ja
mov
sbb
push
and
cmp
sbbb
dec
xchg
aam
mov
lea
cmp
mov
sub
incb
sbb
sub
test
push
sub
lock
jmp
adc
xchg
xor
mov
mov
lcall
lahf
jne
mov
xchg
lgs
or
cs
pop
add
ss
fildl
xor
leave
and
or
xchg
test
ret
adc
out
sub
fwait
jne
leave
add
add
sub
addl
in
out
cmc
cmp
lret
cmpsb
sbb
repz
aad
aam
mov
addr16
into
mov
fsubrl
out
xchg
es
add
jb
mov
fists
imul
mov
aaa
out
or
jno
dec
pop
ret
lods
mov
jge
adc
shrl
or
cmp
inc
test
inc
jmp
orb
fists
inc
outsl
ret
or
pushf
jle
cld
call
test
xor
mul
cmp
out
and
sbb
lcall
mov
xlat
nop
mov
mul
loope
mov
xchg
arpl
movsb
aaa
xchg
popa
mov
cmp
add
notl
jno
stos
test
add
das
xchg
jbe
sbb
jl
pop
pop
jb
push
xchg
movl
enter
xor
inc
xchg
adc
cmpsl
pushf
xchg
mov
das
pop
outsl
mov
sbb
int
bound
and
add
mov
sbb
movsl
ja
add
mov
addr16
sub
and
push
mov
jb
cmp
das
push
cs
test
adc
out
insl
cmp
adc
mov
push
leave
imul
or
cmpsl
inc
pop
lock
aas
popf
xchg
out
push
cltd
pop
scas
sub
notl
loope
cmp
inc
dec
test
xlat
ss
pushf
das
jle
jns
cmp
cmpsb
pop
jnp
add
mov
les
add
jo
sarb
add
ljmp
cltd
sahf
test
push
add
test
pop
xor
jae
cltd
push
or
and
pop
xchg
sub
xor
outsb
ss
jns
mov
mov
xchg
adc
mov
out
pop
lds
xchg
lret
in
sar
in
xchg
adc
fwait
gs
loope
hlt
aam
dec
popa
sbb
sahf
outsb
les
xor
andb
clc
inc
jbe
cmp
xlat
cld
lea
jecxz
mov
outsl
in
lahf
jne
xchg
jmp
xor
pusha
push
ret
je
add
xor
imul
mov
rolb
aam
push
add
or
insb
aam
mov
leave
cmp
sbb
add
aad
adc
push
movsl
push
jae
mov
xor
push
insb
mov
repz
and
xchg
sub
push
jo
push
jmp
mov
cmc
jmp
mov
xor
xchg
add
inc
push
fstpt
xor
fsubs
cmp
call
push
and
sub
je
in
das
mov
or
jl
dec
ds
fcmove
mov
insb
dec
push
cwtl
jg
fwait
js
mov
mov
int
and
adc
sarb
push
test
lock
push
mov
xor
nop
iret
add
or
or
dec
pop
mov
pop
mov
fwait
test
lea
pop
xlat
push
sarl
es
arpl
out
mov
mov
imull
mov
sub
jo
dec
fcoms
sar
mov
jb
pushf
jbe
leave
repz
mov
rolb
popf
jmp
data16
stc
push
mov
ret
adc
imul
js
xchg
lret
lcall
imul
out
pop
cld
int
add
sub
cmp
stc
push
mov
pop
sub
inc
jae
pop
jmp
push
imul
inc
sbb
push
or
and
mul
fmuls
jns
jle
sar
rcl
xchg
sbb
stos
pop
stc
clc
pop
dec
lcall
dec
jb
pop
xchg
mov
mov
mov
inc
call
sub
pop
mov
jg
xchg
sahf
sbb
mov
push
jo
mov
repnz
mov
inc
in
outsb
outsl
movb
push
roll
pop
mov
out
sub
sub
ja
push
adc
cltd
popf
mov
inc
adc
shr
stos
lock
add
sti
sbb
and
mov
mov
ret
xchg
loope
mov
sub
cwtl
lahf
xor
jmp
push
add
push
add
and
je
aad
cmp
and
xchg
push
inc
ljmp
int3
jmp
fwait
iret
scas
inc
dec
adc
iret
dec
subl
cltd
jp
mov
or
loopne
mov
push
ja
sub
sub
or
sub
mov
insb
andb
jg
pop
shrb
fprem1
push
outsl
fstpl
sbb
jle
out
imul
aas
adc
xor
pop
or
lret
arpl
fmuls
pop
or
cmp
into
push
push
andl
add
push
call
xor
or
xor
sbb
fs
aas
daa
add
xchg
in
adc
daa
add
xchg
mov
or
das
sub
ds
jbe
sti
ja
dec
mov
test
cmp
xchg
in
in
scas
sub
mov
in
movsb
xchg
adc
push
add
pop
pop
push
jl
cmp
xchg
iret
iret
ret
xchg
sahf
inc
xchg
fs
push
fs
adc
lods
and
es
pushf
mov
loop
or
lods
insl
mov
aas
xchg
jl
add
dec
cmp
ret
and
icebp
das
cmp
mov
rclb
out
clc
mov
sub
repz
mov
inc
pop
xor
inc
lock
adc
aam
hlt
andl
dec
or
cmp
or
and
cmp
rorl
xor
sbb
or
loope
mov
fcompp
out
xor
filds
adc
pop
jge
cmp
cltd
xchg
into
fs
int
inc
enter
sti
andb
dec
mov
int
lods
xchg
xchg
in
xor
popf
test
push
mov
jmp
xor
inc
insl
sti
out
cltd
jb
and
sti
sbb
movsl
push
cltd
cs
dec
fnstsw
gs
mov
mov
inc
xlat
jp
xorb
shlb
sub
push
mov
fiadds
sbb
push
cld
cld
dec
out
std
insb
ljmp
fistpll
fmuls
jb
sar
sub
adc
movsb
int
sub
ret
jle
call
pop
cli
bound
and
mov
pop
mov
into
outsl
or
dec
adc
mov
rol
ljmp
dec
popf
ds
pop
pop
dec
sub
xchg
popl
lahf
mov
xor
or
inc
inc
mov
idivl
cli
sbbl
jo
rcrb
cwtl
das
jns
js
mov
cli
movsb
outsb
out
push
mov
cmp
and
gs
xchg
push
cmp
jp
jno
sub
imul
leave
rcrb
arpl
jl
les
daa
fnstsw
out
jg
fcomip
pop
mov
push
pushf
push
dec
add
ficoms
cwtl
js
jmp
push
adc
out
fs
jmp
or
enter
andb
pop
arpl
cmp
and
dec
pop
adc
inc
adc
xor
pop
pop
push
push
not
pop
movsb
sbb
push
inc
jl
rcr
ds
sub
cmpl
jge
in
xchg
xchg
xor
movsb
addb
test
test
push
sar
xchg
push
xlat
mov
push
xchg
testl
ljmp
mov
insl
mov
or
or
adcb
outsb
cmpsl
int
loopne
jp
push
sbb
xchg
mov
xor
mov
xchg
mov
lock
push
jmp
dec
mov
sbb
ret
jge
ds
push
clc
lcall
pop
sbb
sbb
mov
rolb
call
fprem
sbb
mov
sub
pop
sub
push
js
jmp
cs
mov
push
ficoms
fstpl
pushf
jbe
xchg
ret
movsl
idivl
cs
mov
sub
sub
xchg
mov
inc
das
or
je
inc
rcrb
pushf
pop
les
xchg
mov
mov
cmpsb
xchg
and
nop
ja
fstpt
cmp
call
pusha
ffree
aam
mov
pop
cmp
pop
add
addr16
jno
test
aam
push
lock
adc
les
inc
push
cmpsl
push
cli
inc
repnz
push
clc
mov
adc
in
sbb
fs
leave
adc
mov
es
ret
and
loopne
ljmp
add
jp
cmp
dec
or
sub
adc
xor
notb
inc
push
lea
sub
cmpsb
cltd
les
lea
aas
aad
sti
cmp
and
daa
or
xchg
adc
out
popa
push
lcall
js
out
aad
test
sti
mov
add
jp
mov
shlb
push
sbb
or
push
ret
jnp
inc
loop
sub
mov
test
mov
call
add
push
out
lcall
push
cmp
jne
cwtl
in
dec
cltd
lret
push
push
push
mov
lret
mov
addr16
iret
fdivl
jbe
mov
xchg
jnp
je
andl
es
jno
pop
in
loope
shrl
mov
mov
ret
mov
rcll
fucomi
stos
push
sahf
ss
fistl
daa
in
jnp
or
ljmp
fwait
loop
fsubr
hlt
sbb
shrl
push
in
cs
add
out
add
cmpsl
push
fs
cmp
pop
push
je
std
mov
negl
inc
and
or
pop
fisttpl
lods
sarb
das
into
adc
mov
das
push
enter
nop
fists
repz
jo
cld
lds
sbb
lret
jg
imul
out
jecxz
ret
call
jae
outsl
out
mov
arpl
sbb
fwait
cwtl
jge
sbb
and
mov
ret
loop
gs
push
pop
and
and
sub
lods
xor
push
icebp
xchg
jl
ss
pop
jnp
out
jle
mov
cmp
mov
jno
lahf
xlat
sbb
cmpsl
push
push
sti
popf
pushw
mov
out
rcrb
pop
sbb
xchg
push
in
pop
mov
xor
cmp
std
lock
ret
pop
lea
aam
es
pop
cli
mov
xor
and
lcall
dec
outsb
in
test
jmp
cmpl
push
add
in
cltd
inc
fmuls
adc
icebp
mov
add
inc
xor
mov
divb
and
dec
loop
sbb
xchg
sub
pop
jnp
push
lcall
pusha
ret
outsl
xchg
push
sub
orb
inc
jno
lock
in
push
pusha
je
flds
ficompl
notb
sbb
mov
pop
daa
aaa
and
mov
xor
jmp
inc
mov
mov
pop
mov
xchg
pop
pushf
daa
aaa
pop
adc
std
ds
int3
mov
push
lret
fsubp
aas
aam
lret
mov
mov
adc
into
in
out
mov
retw
xchg
lea
std
jl
imul
lcall
mov
mov
adc
outsl
scas
cmp
nop
mov
loope
and
lods
ljmp
enter
jb
ficoml
and
ja
in
and
mov
xchg
xchg
push
scas
cmp
cwtl
mov
dec
data16
loope
lock
iret
fidivs
aas
out
lret
or
mov
xor
adc
imulb
xor
sahf
pusha
add
lods
sub
cmp
imul
mov
push
pusha
cmp
jbe
lret
hlt
ficomps
jmp
cmp
insb
es
sub
adc
mov
pushf
pop
push
and
sbb
gs
inc
aas
pop
cmp
and
lods
dec
pop
lahf
out
add
lahf
push
int3
stos
fs
xchg
dec
dec
negl
cmp
push
dec
mov
femms
inc
loopne
popf
push
mul
push
and
cmp
subl
inc
fcoms
and
sbb
cmp
or
mov
ds
and
ss
cld
mov
std
sbb
mov
inc
scas
int3
xchg
and
jmp
das
adc
adc
xor
popf
mov
lret
jge
pop
adc
cld
mov
or
inc
xchg
notl
adc
xchg
data16
or
dec
repz
outsb
ds
push
daa
adc
or
into
js
test
sbb
sbb
mov
and
loopne
mov
test
rolb
cld
pop
pop
xor
loopne
fmuls
cmpsb
fwait
mov
iret
mov
loopne
add
and
outsb
and
test
mov
jb
sub
push
fistps
add
and
xlat
push
or
das
mov
dec
adc
test
jo
pop
sbb
or
loop
xchg
fldl
dec
inc
repnz
pop
rolb
add
idivb
pop
sub
xchg
mov
insl
dec
xchg
ja
mov
mov
mov
sub
fimuls
shl
cmpb
mov
and
jne
test
mov
inc
pop
in
mov
daa
lea
lock
or
add
iret
and
or
mov
xchg
scas
ja
jle
les
sub
push
mov
loopne
jl
mov
in
cmp
xchg
inc
push
call
lods
popa
bound
popf
scas
mov
leave
lods
aas
fimull
fisubl
or
pushf
mov
shll
ljmp
repz
xor
in
or
push
imul
jmp
cmc
and
or
pop
int3
pop
push
aaa
xor
adc
mov
jl
mov
mov
xchg
cmp
xchg
popa
add
mov
jle
ss
outsb
mov
sub
pop
pop
xor
jle
cmp
imul
lds
sub
mov
sahf
xor
pop
sbb
mov
ror
inc
push
mov
lcall
pop
mov
aaa
cmp
dec
rcll
arpl
dec
stos
in
enter
bound
sbb
or
je
repz
lods
adc
cs
stc
ds
rcrl
bound
dec
and
rcl
mov
mov
adc
mov
in
mov
cli
clc
cmp
mov
and
lock
incb
inc
lock
sahf
cld
and
lcall
add
push
inc
or
fsubrl
lret
pop
add
push
mov
lods
fucomi
adc
mov
dec
pushf
jnp
call
push
fldt
adc
cmpsb
lea
sbb
xchg
pop
add
xor
ret
push
int3
or
or
imul
nop
adc
pop
arpl
add
dec
stos
js
lods
mov
jno
jmp
repnz
mov
cmc
outsb
fists
sahf
stos
aad
outsb
cld
sbb
in
icebp
mov
testl
mov
inc
dec
mov
in
sub
mov
shrb
lock
lahf
adc
in
nop
fcomps
mov
cld
ficoml
mov
icebp
bnd
push
imul
pushf
jno
mov
adc
pop
cwtl
aaa
aam
mov
inc
sbb
push
or
popa
sub
aad
or
outsl
push
aad
js
xor
insb
arpl
sub
jns
idivb
inc
cmpsb
mov
push
inc
add
imul
mov
or
adc
bnd
jbe
add
mov
or
cmp
mov
js
call
iret
xchg
jne
ret
xchg
jle
sbb
sub
aad
adc
jbe
or
sbb
ljmp
lcall
adc
xor
sbb
into
rorl
inc
mov
scas
jle
in
xor
cld
pop
aaa
int
pop
cwtl
enter
and
jbe
pop
shrl
push
sub
mov
es
rol
jge
ss
scas
xor
jne
int3
cmpsb
out
sbb
and
mov
jne
mov
pop
ret
loope
xchg
push
negl
stc
fstpt
aam
in
jne
dec
pop
lret
push
pop
mov
insl
mov
or
mov
sbb
cltd
xor
and
fmull
pushf
lcall
and
dec
mov
into
xchg
adc
mov
jmp
fbstp
daa
push
mov
fists
int
jp
loop
xchg
mov
adc
test
dec
mov
jb
push
enter
pop
popf
jbe
sahf
addr16
pushf
aam
js
push
shl
arpl
xchg
cwtl
imul
stc
icebp
fisubrs
stc
mov
fmuls
es
lret
out
jo
sub
lods
mov
loop
mov
mov
xor
sub
mov
push
mov
clc
in
ss
push
fcmovu
or
mov
leave
fdivrs
iret
jno
pop
pop
sub
add
dec
mov
clc
sub
rcr
loopne
xor
rclb
pop
gs
dec
jecxz
mov
sbb
rorl
sarb
and
mov
inc
adcl
jne
mov
push
cmp
mov
push
outsb
fcmove
jae
hlt
leave
sarl
cmp
adcb
rclb
or
pop
dec
addr16
sub
je
and
push
imul
test
jecxz
scas
stc
outsb
mov
sub
ret
mov
clc
cmpsb
xor
out
xor
xor
lcall
mov
and
dec
jae
out
inc
stos
adc
pop
or
aad
fidivrs
jno
adc
arpl
xlat
push
stc
lods
cmp
dec
sub
push
cltd
stc
lods
jl
movsb
inc
pop
subl
outsb
xchg
jp
mov
mov
adc
shll
sbbl
andl
xlat
sbb
and
inc
adc
add
pop
ret
cmc
or
push
push
sbb
cmpsl
mov
mov
mov
lea
or
mov
cmp
sahf
jns
ljmp
aad
arpl
ss
cmp
jecxz
mov
mov
imul
lahf
hlt
clc
lret
mov
jmp
mov
repnz
mov
jbe
icebp
stos
and
loop
rclb
adc
or
aaa
add
jo
add
pop
add
mov
ret
jmp
push
imul
outsl
jge
push
dec
stos
stos
ret
es
pop
xchg
xorl
cs
or
and
mov
xor
pop
sbb
xor
scas
pop
or
mov
filds
push
dec
cmpsb
push
sbb
test
xchg
xchg
cwtl
sub
cmp
and
out
cmpsl
jp
stos
jb
jl
cli
pcmpgtb
popf
call
sbbl
mov
add
jno
push
xchg
aas
ss
inc
pop
pop
in
lret
mov
mov
and
cwtl
jb
in
in
cmp
and
fistpl
push
push
xchg
sub
jle
stos
arpl
push
xchg
int
jp
dec
in
pop
jno
add
mov
mov
fdivrl
iret
pop
push
adc
sub
jp
leave
fcoml
bnd
subb
lds
mov
je
test
push
cmp
pushl
lea
xor
xchg
nop
xchg
movsl
push
inc
xor
sbb
pushf
popw
cmp
xchg
and
jecxz
test
mov
sbb
xchg
stc
dec
loop
cmpsb
jbe
std
sbb
cmp
lods
arpl
dec
in
fs
out
leave
out
mov
sbb
aaa
test
xchg
push
stos
jg
icebp
enter
in
aaa
cwtl
jmp
mov
mov
dec
push
sarb
or
pusha
aad
jo
scas
mov
pop
lahf
mov
cwtl
cld
cwtl
fdivrs
xor
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
jmp
repz
sub
push
push
notl
repnz
cmp
test
fdiv
mov
mov
psrlw
push
gs
test
and
pop
scas
add
lret
mov
cmp
mov
mov
stos
add
ret
inc
dec
aaa
push
fidivs
test
mov
pushf
incb
xchg
loop
shll
adc
repnz
push
dec
stos
or
pop
push
mov
push
push
and
fldl
or
mov
lds
cmp
cmp
es
outsb
test
daa
ja
out
mov
inc
mov
stos
pop
outsb
jno
das
jge
imul
fnstenv
cmp
rcr
cmp
mov
and
push
jne
gs
jns
fs
imul
out
push
gs
int3
mov
sar
std
push
sub
sbb
push
loope
leave
gs
loopne
stos
jnp
cmp
push
jmp
add
aas
mov
or
addr16
jge
mov
mov
mov
jl
dec
dec
gs
adc
in
cwtl
xchg
jmp
mov
push
pop
lcall
xor
mov
pop
insl
xchg
lret
loop
mov
shll
repnz
test
leave
lock
pop
jmp
and
pop
data16
je
xor
inc
clc
mov
lahf
cmp
scas
shr
xor
xchg
xchg
int3
cmpl
pop
push
mov
sbb
ret
lcall
xchg
mov
dec
lahf
ds
icebp
xor
mov
outsb
aad
jecxz
pop
lods
jnp
divb
push
add
clc
pop
xchg
adc
and
dec
ret
fdivs
jnp
rorb
test
push
or
adc
scas
sahf
and
imul
pop
adc
mov
push
mov
aaa
lcall
rorb
ja
icebp
pop
jp
mov
pop
inc
jae
sbb
xchg
ss
mov
xchg
iret
out
fs
mov
decl
js
cmp
adcb
push
dec
into
pop
mov
loop
jle
int
cmp
das
pop
lret
mov
mov
jnp
outsb
ret
xchg
adc
out
sub
sub
in
aas
pusha
cmp
push
xor
and
cmp
and
and
mov
cmp
xchg
ss
addl
fs
stos
pop
cltd
cmp
andb
ret
outsb
outsl
add
sarl
mov
mov
xor
fildl
inc
fwait
in
je
insl
xchg
rorl
popa
and
jl
xor
out
pop
dec
pop
out
dec
hlt
pusha
icebp
rcrb
enter
fldenv
es
mov
xor
push
call
das
subl
sahf
pushf
pop
bound
jp
enter
int
out
or
out
popf
sub
cmp
stos
loop
stos
cmc
ss
rcll
xchg
lret
sbb
and
push
sub
jbe
or
cwtl
pop
loope
pop
int3
ds
cmpsb
dec
inc
push
ljmp
imul
mov
dec
pop
fildll
or
jns
cltd
xchg
sbb
add
mov
in
push
ret
pop
in
fcmovbe
mov
mov
and
mov
addl
repz
inc
xor
ja
leave
pop
addb
add
and
mov
cmp
cmp
std
test
mov
push
ja
lret
pop
outsl
in
lret
sti
or
mov
xchg
ret
or
push
mov
jne
and
pop
xchg
nop
mov
mov
fwait
mov
sub
xor
and
mov
jo
xor
fmuls
mov
repnz
mov
lods
jb
cltd
mov
aad
fsts
es
mov
jno
pop
int3
es
mov
sub
adc
sbb
pop
movsl
mov
ljmp
loopne
clc
and
mov
cmp
je
xchg
inc
jge
push
in
xor
push
mov
jnp
lea
mov
dec
lea
dec
jl
or
enter
into
popa
push
es
inc
enter
insl
scas
mov
add
in
dec
and
mov
fwait
push
jg
or
inc
mov
jae
shlb
mov
int3
int
cmpsb
cs
gs
adc
sarb
call
rcll
out
or
push
cmp
xor
sub
cmp
out
add
pop
fcmovnb
inc
xor
pop
push
fstl
roll
in
shlb
jbe
add
int3
fiaddl
and
sub
or
and
test
adc
scas
push
mov
inc
rolb
push
cmp
inc
daa
cmpsb
pop
cli
fadds
sbb
in
aas
mov
pop
xlat
adc
sub
xor
lret
cld
movsb
add
movb
enter
icebp
push
adc
sub
in
bnd
bound
or
inc
or
add
and
hlt
inc
flds
xor
mov
push
test
or
or
adc
or
in
mov
and
mov
xlat
xchg
mov
add
cmp
or
cmpsb
mov
xor
test
pop
sahf
popf
jge
stos
sbb
pop
jg
jae
aas
aam
fistpl
or
daa
sbb
ret
add
mov
nop
push
je
xchg
sbb
lcall
repnz
pop
rolb
inc
cmpsl
into
push
lret
out
sbb
ret
lahf
stos
decl
negb
xor
flds
inc
hlt
in
cld
xchg
or
lods
imul
jb
out
jne
setg
insl
repz
jbe
fwait
mov
mov
xor
xchg
jns
ret
pop
mov
in
fldl
or
jg
dec
sbb
inc
push
jmp
loope
jp
push
or
mov
stos
fwait
or
lahf
jge
mov
add
pusha
fadd
sbb
loop
jae
test
dec
push
inc
cwtl
fnstsw
add
cld
es
dec
push
imul
addr16
push
or
fiadds
arpl
push
xchg
es
mov
fcom
notl
sbb
ljmp
inc
aaa
adc
ds
dec
sbb
int3
pop
out
outsb
cmp
stos
repnz
fistpll
dec
fstps
in
lcall
daa
jg
jns
jb
das
clc
inc
sub
cmp
add
cmp
stc
sahf
xchg
mov
mov
or
inc
push
les
push
jo
pop
rorb
dec
negb
pop
cli
inc
lds
add
dec
mov
or
orb
sub
iret
or
cmp
shl
int3
cmp
hlt
cmp
xlat
les
fimull
fmul
adc
adc
int3
fildll
daa
xor
insb
and
fcmove
xor
outsl
fiaddl
enter
dec
jmp
jnp
cwtl
insl
add
mov
sbb
mov
xlat
sub
fimull
faddp
repnz
dec
popa
xor
scas
aaa
mov
sbb
fisubrl
sbb
fndisi(8087
shll
jae
xchg
out
jns
lret
fs
jge
out
and
dec
out
aaa
fsubrl
pop
clc
sub
inc
or
dec
nop
leave
dec
fwait
jo
lea
xchg
cmpsl
stos
scas
jne
out
sbb
popf
xchg
jno
or
pop
mov
aad
jge
xor
dec
push
jecxz
filds
incb
jo
popf
movsl
xchg
cmp
stos
lods
cmp
mov
mov
jmp
sub
call
push
mov
or
xor
rclb
mov
pop
adc
pop
ss
pusha
add
pop
and
xorl
sub
scas
sti
clc
add
lods
adc
cli
pop
jecxz
lret
das
dec
incl
test
int3
dec
sarl
add
pop
vstmxcsr
pop
loopne
sbb
mov
fsts
std
repnz
mov
es
nop
dec
push
mov
jl
jecxz
cmc
movsb
mov
jp
ret
je
mov
test
int
lods
jl
imul
pop
imul
call
cwtl
shlb
ret
sub
inc
cltd
or
mov
and
int3
push
outsb
movsb
scas
xor
int3
jmp
sarb
fidivrs
inc
lods
data16
dec
pop
mov
cmp
mov
das
adc
jecxz
adc
mov
and
es
popf
mov
add
sbbb
int
dec
sti
sub
cmpb
mov
daa
fisubrs
test
or
add
pop
sub
pop
mov
jmp
sbb
cmpsb
inc
xor
call
add
int
mov
push
pusha
out
inc
divl
sub
cmp
xchg
aas
mov
dec
call
sbb
scas
loop
stos
movsl
movsl
cmpsl
aas
cltd
sub
loop
mov
gs
push
push
inc
out
nop
fmul
in
inc
sbb
mov
inc
inc
adc
xchg
ret
and
dec
cmp
out
fdivr
movsl
ret
add
insb
loopne
jbe
adc
ja
cmp
sar
jae
popa
and
into
addr16
xchg
mov
iret
shlb
push
call
pop
xchg
les
mov
pop
das
adc
cmp
adc
fs
fisttpll
or
push
mov
push
pushf
inc
jl
frstor
in
aam
xor
jg
add
mov
sbb
nop
cmp
and
loopne
dec
or
pop
sub
adc
xor
xchg
nop
dec
lahf
sbb
mov
sbb
leave
push
fadd
shl
sub
ja
loope
dec
imull
cld
enter
repz
mov
popf
lds
fists
out
xor
xor
xchg
out
jns
rolb
das
repnz
fwait
push
sub
lock
aas
pushf
popa
fisubl
cld
shlb
cwtl
loop
cmp
and
add
rorl
push
jno
jo
fwait
mov
ja
dec
stos
inc
sub
and
xor
adc
ja
mov
push
and
lret
test
xchg
fidivl
std
pop
cmp
sarl
mov
adc
je
xor
gs
mov
dec
mov
imul
pop
mov
sarl
je
xchg
pop
xchg
mov
cmp
incb
dec
adc
xchg
lds
fsubl
xchg
mov
dec
pop
xorl
imul
xchg
push
sbb
inc
or
loope
cltd
jl
mov
sbb
aaa
mov
inc
fstp
jp
jl
mov
or
stos
push
sbb
test
xchg
xchg
scas
lods
mov
rolb
adc
and
nop
adc
jo
push
adc
mov
adc
clc
cli
loopne
les
add
add
pop
sbb
rorb
and
mov
out
call
fimull
jbe
imul
shrb
xor
push
into
jl
aam
add
hlt
and
and
sbb
or
xor
nop
push
pop
inc
ljmp
rcr
aam
lcall
adc
sub
out
test
sbbb
sub
mov
mov
and
and
cmp
mov
out
or
mov
xor
mov
add
loope
fiadds
add
sbb
push
lret
xor
aas
rcl
xor
add
sub
pop
push
xchg
cmc
shlb
ljmp
mov
sti
push
test
loop
dec
adc
incb
cmpsl
inc
push
lods
shlb
pop
addr16
pop
pusha
insb
int
inc
ljmp
sbbb
iret
std
jbe
push
adc
leave
jo
int3
pop
pop
xchg
hlt
in
sbb
ret
cli
jnp
insl
ret
stc
dec
fwait
cmp
fisubrl
loopne
sbb
je
dec
pop
jno
sub
int3
jnp
inc
jne
adc
dec
add
ljmp
xchg
push
add
lods
repz
cmc
pop
cwtl
mov
sub
mov
mov
pusha
jle
xor
cltd
jg
push
push
sub
sub
inc
jmp
sarl
jns
adc
jno,pt
mov
adc
xchg
jo
cmp
push
in
push
jbe
push
mov
call
in
fbstp
lods
pop
sahf
icebp
ja
add
dec
pop
stc
dec
sahf
cli
push
push
push
fstp
mov
dec
cltd
cmp
lea
inc
xchg
cmp
cmp
rolb
pushf
lret
sub
mov
int3
orl
int3
nop
fdiv
ljmp
imulb
in
adc
lock
add
fs
into
ljmp
xchg
js
jnp
adc
je
pop
xor
add
push
loope
dec
cmc
xchg
adc
aad
inc
sbb
add
pop
push
xlat
cltd
cmp
das
sahf
lock
push
push
pusha
pop
add
inc
rclb
fld
mov
lahf
cli
sub
mov
aas
pushf
subl
lds
cmpsb
dec
mov
push
mov
xor
aam
sub
ljmp
sbb
pop
cmp
leave
out
xchg
lret
sahf
leave
inc
repz
popa
pop
or
cmp
lcall
xchg
jecxz
sbb
mov
mov
enter
pop
daa
jbe
dec
popa
mov
dec
dec
inc
clc
xlat
inc
or
leave
mov
sbb
mov
dec
insb
lret
push
xchg
mov
xor
adc
in
subb
iret
cmp
iret
outsl
add
inc
inc
dec
adc
pushf
repnz
dec
aam
sahf
pop
movsb
xor
jecxz
inc
adc
imul
pop
aam
jnp
js
gs
pop
sbb
scas
fs
cmp
mov
mov
xor
mov
cli
fsubs
pop
mov
lcall
xor
shrb
xchg
js
adc
adc
sar
mov
xchg
mov
std
lods
push
pop
mov
int
scas
mov
jnp
sti
popa
dec
mov
shlb
lods
gs
ficompl
mov
addb
rclb
sub
jo
xchg
cmp
pop
cwtl
cld
adc
imul
in
lret
pop
arpl
or
add
and
in
xchg
pop
sti
punpcklbw
inc
adc
je
es
mov
bnd
pop
jge
popa
data16
cltd
pop
out
sub
and
xchg
lock
jb
pop
jmp
push
or
mov
jnp
jo
add
add
cmp
cmp
xchg
aaa
out
sub
incl
lock
in
cmp
mov
pop
sub
pop
mov
stos
mov
sti
sbb
test
mov
add
rcrl
mov
pushf
icebp
mov
ja
sub
mov
and
or
xchg
int3
mov
pushf
movsb
cmp
lret
cmp
test
mov
push
mov
lds
arpl
xor
sbb
push
mov
push
mov
lcall
cmp
dec
mov
leave
sahf
jle
sbb
sbb
and
sbb
imul
sar
jo
jg
dec
adc
dec
push
jmp
fcomps
mov
cwtl
inc
and
repnz
nop
xchg
call
adc
out
mov
xor
fnstenv
xchg
xor
iret
add
jge
cmpl
sbb
std
pop
fldt
jns
rcrl
mov
mov
aad
pop
cmp
xchg
popa
stos
js
mov
das
mov
or
xor
shl
xchg
sbb
push
jo
loope
ret
mov
inc
gs
jp
adc
sub
and
sub
mov
xor
pop
sub
pop
pop
jae
jbe
dec
out
lods
loopne
xor
pop
imul
std
jmp
xor
pop
lahf
adc
and
inc
dec
and
mov
sbb
movsl
ds
inc
lea
stos
xchg
insb
xchg
jmp
bound
dec
shrb
pop
xorb
sub
adc
mov
pop
sub
test
out
cmp
and
mov
stc
mov
add
test
loop
pop
flds
outsb
test
mov
dec
or
pop
inc
push
cmc
sub
out
fs
sbb
leave
mov
ret
fdivrp
cmpl
call
fs
stos
les
movsl
mov
jp
push
pusha
mov
add
mov
mov
push
xor
xor
test
ss
ljmp
dec
mov
push
or
pop
icebp
lods
decb
sub
and
aaa
loop
lahf
jge
mov
xor
mov
in
sar
rcrb
mov
jge
adc
add
sti
jno
imul
jg
aaa
cmp
mov
scas
aam
nop
xchg
pop
int3
inc
or
imul
mov
xrelease
cs
fimull
push
fadd
inc
cmp
cmp
test
lods
push
icebp
imul
repnz
dec
aas
add
inc
lahf
dec
xlat
sbb
pop
stos
inc
xor
xor
loop
clc
push
out
cmp
fnstenv
std
push
shlb
push
test
and
loope
cmpsl
std
lcall
into
js
xlat
push
and
test
int3
imul
jnp
pushf
xor
mov
or
add
push
adc
adc
sbb
aaa
push
dec
cs
pusha
loopne
add
sbb
mov
lea
or
inc
mov
sbb
icebp
cmp
lds
test
mov
jae
mov
jmp
xor
push
rorb
inc
lret
adc
cmp
mov
push
ja
xchg
mov
loopnew
fidivrl
pop
and
push
pop
pop
fstps
adc
pop
mov
sahf
in
das
push
push
js
ljmp
in
and
jno
es
js
cli
fistl
mulb
lahf
pop
pop
in
pusha
imul
cli
icebp
rcll
repz
mov
xchg
pop
jge
andl
imul
jbe
orl
sti
mov
jae
sub
sbb
push
inc
roll
outsl
repnz
push
adc
pop
and
cltd
xor
aam
arpl
sbb
jo
outsl
cmp
in
mov
sbb
add
fwait
sub
ljmp
jnp
add
inc
jl
cmpsl
aaa
fcmovnb
cmc
and
in
push
inc
dec
cs
cmp
adcl
mov
dec
popa
fists
xchg
pop
movsl
add
adc
mov
in
lahf
and
mov
adc
or
adc
ffree
out
orb
out
inc
and
inc
rol
mov
iret
pop
xchg
ds
sub
dec
outsl
out
sbb
pop
mov
adc
adc
or
add
std
push
mov
pop
aas
sub
mov
fisubl
dec
int3
dec
lods
jnp
inc
cs
xor
push
dec
push
mov
pop
leave
cwtl
push
adc
push
bound
sub
mov
popf
sarl
push
ljmp
xor
lock
mov
xor
leave
adc
pop
xor
out
pop
rcrb
or
imul
and
mov
sub
or
sbb
inc
inc
scas
mov
push
cmpsb
mov
jnp
in
pop
bound
stc
fdivr
das
pop
testl
pop
xchg
xor
xchg
mov
cmpl
or
jne
adc
mov
jle
inc
pop
int
dec
int
sbb
mov
or
daa
addr16
cmp
pop
loope
inc
imul
and
mov
lods
sbb
jp
xchg
call
pop
or
inc
es
sti
xchg
sbb
push
xor
shrl
mov
dec
in
mov
jle
jb
xor
into
pop
mov
push
jno
push
ds
and
daa
leave
movsl
adc
cmpsb
xor
sbb
loop
les
lcall
test
mov
add
popa
subl
cli
iret
sub
or
gs
popa
dec
dec
lcall
dec
mov
mov
call
push
scas
ja
call
push
hlt
or
pop
vcvttps2dq
imul
xor
jnp
hlt
lods
loope
cmp
add
iret
daa
and
pop
jne
add
ret
adc
pop
cld
invd
inc
and
inc
sbbb
push
lock
call
icebp
aam
rcrl
mov
or
push
fdivr
dec
call
rolb
jnp
pop
outsb
cmc
adc
inc
popa
add
fimuls
mov
sub
xchg
mov
mov
xor
inc
scas
xchg
jle
ja
push
in
lods
jg
insl
cs
cmove
lods
inc
xchg
rclb
push
bound
mov
mov
pop
sbb
and
ret
add
stos
mov
adc
fs
xchg
out
inc
xchg
pushl
out
push
xchg
cmp
scas
xchg
popf
and
xchg
add
rclb
adc
insl
aam
adc
inc
xchg
fldenv
in
pop
mov
cmpsb
inc
add
pushf
sbb
or
mov
movsb
addr16
lret
adc
inc
add
movsl
mov
push
rolb
fnstsw
fiaddl
cmpsl
sbb
aaa
ror
call
inc
and
adc
pushl
push
xchg
imul
and
cmp
mov
push
es
sbb
fisttpl
or
xchg
call
lahf
jmp
fidivs
mov
xchg
xchg
ss
test
sub
rcrb
xchg
in
rcr
rcll
lret
jp
lock
mov
push
jmp
jp
xor
lcall
repz
jo
add
fnstsw
cmpsb
mov
out
push
mov
pop
sahf
incl
xor
inc
push
xchg
xor
mov
out
dec
scas
mov
fwait
mov
fwait
cs
inc
sti
pop
pop
jbe
pop
test
inc
mov
lods
pop
mov
adcl
sbb
into
add
lds
cmc
test
into
leave
push
mov
mov
or
mov
bound
inc
ffreep
pushl
adc
mov
cld
in
jp
sub
cmp
test
sub
lcall
or
pop
rcrl
in
scas
push
dec
jl
shl
mov
xchg
pop
mov
push
inc
adc
xor
js
call
loop
popa
and
jle
push
test
enter
loop
leave
cmp
fwait
cmc
loopne
sahf
adc
mov
add
out
fwait
pushl
lock
mov
pop
cmp
xchg
stos
sub
pmuludq
sbb
and
testl
add
inc
in
pusha
out
int3
arpl
add
pop
push
ret
out
xorl
int3
lret
aaa
sub
and
mov
adcb
out
cmp
jg
jmp
pop
push
mov
mov
ficompl
ljmp
leave
nop
js
sbb
test
shlb
jle
cmpsl
bound
js
pop
sub
enter
mov
xchg
jns
mov
pop
es
jge
fldl
fcomps
fcomps
cmp
add
push
jl
mov
rolb
cmp
add
insb
cmp
xchg
inc
fs
sbb
cmp
dec
repz
and
lds
push
pop
jmp
push
fildl
rcrl
aam
or
aaa
mov
inc
scas
cmpb
mov
and
movsb
sbb
sub
int
cmpb
sub
jge
popa
mov
mov
int3
nop
test
jo
je
lods
jb
int
iret
fwait
enter
add
or
jge
jae
cmp
out
mov
mov
cmpsl
shrl
jle
and
mov
addr16
and
outsl
out
repz
sbb
mov
dec
inc
cltd
in
mov
bound
cmp
lret
jae
aam
addr16
mov
sbb
mov
sarl
dec
cmp
adc
xchg
or
lock
xchg
mov
andl
cld
repnz
arpl
adc
xchg
push
mov
add
jmp
punpckhbw
xchg
jle
mov
popa
scas
jmp
sbbb
jge
fwait
es
push
ljmp
push
cmp
sub
loopne
out
push
bound
jmp
std
sbb
dec
addr16
jle
sbb
push
sub
sub
sub
mov
stos
dec
push
jno
rcl
and
pushf
mov
jmp
loopne
int
push
jne
mov
sub
pop
int3
data16
ds
ficoms
jb
fsubrl
fdiv
leave
je
xchg
pop
fdivs
add
xor
and
imul
out
sbb
sbb
push
cmp
inc
iret
push
shrb
fwait
imul
clc
lds
mov
push
movsl
stos
jp
cld
jbe
add
es
loop
adc
sbb
in
test
inc
out
mov
adcb
mov
insl
push
inc
jbe
xor
mov
inc
jle
mov
sub
push
leave
test
jb
test
jnp
pop
inc
out
pop
fadd
push
cmp
pop
add
ljmp
sbb
nop
jo
adc
or
adc
cmp
mov
pusha
ss
pop
iret
and
cmp
add
inc
pushf
test
push
mov
mov
cs
dec
mov
ficompl
inc
dec
xchg
jle
sbb
xor
mov
xchg
rol
call
jno
or
lcall
add
movsl
lret
jecxz
mov
movaps
xor
pandn
in
sarb
mov
filds
cmp
sbb
sub
movsl
dec
or
roll
mov
test
ret
cltd
mov
int
fstpl
lds
ret
push
jmp
fstps
sub
xor
lahf
xor
insb
ja
nop
in
subl
inc
femms
fwait
ret
adc
xor
pop
leave
ja
add
sahf
ljmp
out
and
xor
repz
mov
icebp
pop
mov
out
out
in
pop
adcb
dec
in
loop
xor
leave
lcall
mov
pop
cmpsb
xchg
ds
nop
mov
xchg
jmp
pop
in
or
mov
popa
loope
push
dec
scas
mov
sub
cmp
pop
jbe
mov
bound
push
jno
in
xchg
mov
adc
idivb
mov
add
adc
mov
loope
ja
push
insl
sub
lea
leave
dec
cmp
popa
andl
fidivrs
mov
movsl
in
insl
leave
mov
stos
mov
xchg
mov
inc
icebp
mov
stos
movsb
cld
jae
inc
cmc
pop
sub
mov
jo
xchg
mov
dec
dec
fdivs
push
xlat
inc
into
adc
pop
pop
lock
add
jecxz
xor
imul
sahf
and
iret
int
enter
or
inc
filds
iret
dec
mov
pop
mov
cld
push
clc
jg
sub
pop
and
scas
jg
add
mov
adc
xchg
mov
lods
outsl
stos
inc
jbe
add
ss
mov
shll
cmpsb
xchg
lcall
cmp
push
cmp
sub
lds
andl
jb
xlat
mov
shll
cmp
jne
xorb
mov
jge
adc
adc
sbb
int
push
pop
xchg
xor
mov
pop
push
mov
scas
incb
xor
aam
xchg
sti
xor
sbb
cld
popa
js
xchg
pop
push
mov
inc
jp
xlat
adc
sbb
enter
das
and
or
clc
xchg
xlat
movsl
mov
bound
push
xchg
mov
cmp
pop
xorl
cwtl
cmp
das
cmp
or
push
sub
mov
pop
and
popf
je
pop
rcrl
cmp
xchg
add
mov
mov
lods
or
leave
ret
fs
out
adc
and
push
mov
mov
dec
insb
aas
mov
inc
inc
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
fidivrs
push
push
sub
push
push
cmp
xchg
aaa
orb
out
sub
out
add
fucomip
fwait
or
ror
cli
test
in
add
pop
stos
and
xchg
sub
test
cmp
jmp
inc
fucom
mov
add
push
push
insl
mov
xor
xor
cmp
dec
std
in
dec
scas
out
sbb
in
cmp
ja
mov
jg
call
cmpsl
or
sub
xchg
mov
lret
fldt
mov
add
pop
shlb
push
ret
jge
inc
pop
mov
movsl
push
out
in
sub
xchg
and
jmp
pop
mov
jecxz
pop
rcrl
fnsave
mov
fldz
dec
inc
lret
xchg
stos
aaa
outsb
lds
mov
sti
clc
das
out
mov
push
push
addr16
pop
adc
in
pop
js
repz
adc
pop
mov
jmp
out
and
push
pop
xchg
sahf
sbb
rcrl
inc
popf
nop
xchg
push
fdivl
or
xchg
cli
lcall
test
pop
and
bnd
jnp
repz
pop
pop
adc
lret
jmp
jle
out
xchg
inc
add
xchg
sti
sub
cwtl
sbb
popf
jg
xchg
into
jnp
sbb
rcl
and
rorl
push
jg
adc
and
out
test
sti
inc
iret
cmp
jb
mulb
stos
sub
outsb
push
ss
popf
pop
jno
into
sub
adcb
inc
and
nop
fnstsw
and
xchg
nop
add
scas
fwait
shrb
andb
xchg
aad
push
jge
jno
popf
jmp
mov
inc
push
test
jp
fcmovb
sub
test
mov
xor
ja
dec
add
push
xor
or
cmpsl
movb
out
dec
and
mov
stos
test
insb
jge
enter
sahf
das
cmc
lret
es
lods
mulb
push
hlt
arpl
push
outsl
mov
lods
and
nop
jle
inc
xor
jg
gs
dec
adc
pop
in
insb
mov
add
adc
inc
dec
xor
ds
ja
gs
cld
xchg
mov
shll
xor
and
cmp
mov
sar
loope
add
mov
push
lock
clc
scas
xchg
adc
aas
aas
xor
mov
cltd
xchg
lret
iret
pop
movb
xor
adc
pop
and
pop
rorb
sbb
jecxz
lret
or
ljmp
jg
divl
mov
fists
cltd
ds
push
ret
dec
imul
test
xor
add
aas
mov
pop
pop
jl
or
push
jne
jmp
pop
in
mov
and
fidivs
sbb
fstp
jg
sbb
loope
cmp
xor
and
sub
imul
inc
cmp
add
je
pop
inc
popa
lods
sahf
subl
sbbb
jns
leave
cmpsb
out
or
loop
mov
push
pop
cltd
movsl
jge
sti
mov
xchg
test
ds
loopne,pn
int3
mov
xchg
mov
fstpt
aam
adc
std
fcomi
gs
push
pop
dec
sub
mov
imul
mov
inc
mov
add
xchg
fidivrl
fildl
out
sarb
int3
xchg
in
push
jae
inc
ficomps
ljmp
cli
lret
mov
mov
insb
xchg
stos
xchg
popa
dec
inc
js
xor
outsb
add
or
je
adc
mov
scas
and
mov
das
mov
outsl
inc
xchg
sub
jmp
mov
mov
sti
ss
ja
push
call
mov
lret
pop
or
pop
xchg
inc
xchg
mov
or
push
test
sbb
sarl
icebp
sahf
scas
shlb
push
push
push
arpl
test
xchg
jp
mov
cmp
inc
lret
dec
icebp
pop
dec
xchg
addl
scas
fcmovnb
call
xlat
add
and
xchg
jb
sbb
adc
jp
dec
scas
scas
and
movl
in
jo
cwtl
gs
sbb
cmp
aas
push
test
lods
inc
iret
ja,pn
call
fwait
sub
jg
data16
push
movsl
pop
mov
and
adc
lret
out
out
dec
aaa
pop
daa
cmc
ss
aas
je
les
jne
fadd
push
inc
cld
mov
cmpsb
loopne
xchg
loope
inc
and
loop
inc
dec
adc
push
test
sbb
out
lcall
mov
pop
add
scas
rolb
and
aas
jb
and
sub
pmaddwd
cmp
in
inc
and
sub
mov
jnp
or
out
rorb
sti
repz
data16
ficompl
pop
xchg
add
or
fdiv
mov
test
cmp
and
cmp
out
or
inc
pop
inc
mov
mov
inc
test
aad
test
jl
xor
loop
in
out
and
cmp
sub
mov
insb
popl
or
mov
pop
lahf
jno
sbb
adc
std
in
mov
push
mov
mov
shr
jmp
ret
mov
mov
sbb
pushf
add
pop
mov
subl
and
cmpsl
or
enter
in
add
iret
in
lret
push
enter
adc
lcall
repz
aaa
inc
sahf
clc
or
int3
xor
pushf
out
cltd
inc
adc
inc
mov
xlat
add
adc
dec
ret
mov
cmpb
fcompl
jge
dec
hlt
xchg
or
pusha
push
mov
mov
imul
test
push
lahf
and
dec
push
push
cli
clc
cli
mov
inc
outsb
push
lock
lea
cmp
xor
push
adc
fistps
out
imul
ja
cld
aaa
movsl
jmp
mov
adc
roll
lcall
int
stc
in
add
jae
addl
test
mov
into
xor
sti
inc
push
arpl
and
xchg
int
iret
imul
imul
jae
in
jno
aam
mov
lcall
pop
jmp
or
iret
xchg
into
in
xchg
mov
or
fs
or
loopne
cmp
or
fs
jp
cmp
or
cmp
dec
mov
fnstenv
ds
imull
jo
cmp
insb
sub
fstpl
out
xchg
add
push
xchg
sub
pop
mov
sub
fdivs
sub
popf
push
mov
mov
outsl
inc
push
jle
adc
adc
and
xlat
lds
inc
xchg
and
xchg
mov
push
cltd
inc
pop
or
ljmp
sbb
and
mov
ljmp
gs
fadds
clc
xchg
and
stos
adc
lods
push
rorb
fwait
sbb
mov
pop
call
push
xchg
inc
out
sbb
pop
sti
shrl
adc
add
push
jecxz
push
mov
pop
popf
or
sub
in
sub
jmp
insb
jns
xor
rclb
fiaddl
cmp
jnp
es
movsl
test
scas
mov
mov
lahf
lds
mov
jge
add
shr
test
insl
dec
insb
in
mov
clc
push
mov
test
mov
push
adc
inc
dec
lret
jns
out
cmpsb
jno
push
sub
xchg
ja
adcb
dec
push
stos
loopne
je
scas
xor
or
dec
and
ss
dec
test
andb
aam
push
mov
dec
jp
fistps
orb
cld
push
cs
xchg
add
dec
inc
mov
in
icebp
stos
cmpsb
xchg
cmp
lahf
dec
imul
or
cwtl
outsb
int
in
push
sub
das
imul
mov
jb
in
adc
sbb
clc
das
mov
dec
mov
insb
inc
sub
mov
or
cmp
jp
sub
push
jns
mov
jp
add
gs
test
inc
popa
scas
cwtl
jecxz
or
repz
pop
sbb
mov
lds
bound
mov
mov
xor
add
stos
xchg
in
movsb
sub
pusha
jmp
sarl
pop
dec
pop
cltd
jo
lcall
loope
mov
sub
in
push
adc
dec
sbb
push
stos
lret
ja
cmp
sbb
lods
xchg
mov
aam
push
xor
and
negb
lret
test
popa
aas
bound
hlt
rclb
lahf
sahf
pushf
into
sub
scas
sbb
add
shrb
and
fisttpll
aam
jmp
call
aad
pusha
add
out
cmp
xor
and
cmpsb
fwait
popf
test
out
mov
and
sub
out
out
mov
or
mov
loopne
lods
loop
fdivp
dec
pusha
push
int3
ss
jge
cmp
movsl
add
xchg
loop
add
in
xchg
div
movsb
adc
sbb
mov
gs
bound
and
lock
adc
jbe
xor
scas
jmp
pop
mov
les
sub
dec
in
or
inc
loope
fsubrs
in
shll
inc
cwtl
fwait
rcrl
bound
mov
mov
mov
pushf
push
jg
or
or
popa
out
or
mov
jnp
mov
and
xor
dec
sbb
pop
leave
mov
ljmp
rol
test
repz
stos
xchg
in
call
xchg
imul
add
jbe
sbb
add
js
mov
jnp
inc
in
ret
or
and
aad
stos
lods
dec
lock
jno
cli
imul
dec
jge
bound
cmp
mov
ds
inc
mov
jno
xchg
push
and
pop
inc
movsb
adcb
and
push
jnp
xchg
jns
lods
out
insl
flds
or
pop
dec
lret
add
mov
shrl
jns
cmpsb
jmp
and
and
jle
jnp
mov
aaa
mov
imul
mov
add
jae
mov
and
fwait
or
add
repz
ss
and
mov
pop
xchg
push
out
sarb
test
mov
xchg
fs
mov
loope
outsb
sbb
and
or
cld
fs
lock
and
pop
mov
pop
push
xor
in
mov
mov
push
imul
daa
jnp
idivb
push
les
fcoms
std
push
mov
ljmp
lret
jmp
pop
or
mov
sub
push
into
xor
test
adc
sbb
out
repnz
cmc
ret
shrl
cmp
xor
sub
push
sar
pushf
ret
fwait
and
das
inc
lret
fbstp
out
out
in
out
std
xor
enter
insb
sarb
fldt
push
mov
lret
xchg
ficoml
push
ljmp
mov
out
adc
mov
mov
and
shl
stos
dec
sbb
mov
popa
bound
jb
mov
ds
jbe
pop
mov
hlt
push
andl
popf
or
mov
adc
aas
je
cmp
stos
sbb
mov
xlat
cmp
xchg
pop
repnz
add
adcl
jb
push
sub
scas
addl
cmp
inc
inc
fistl
repnz
int
mov
int3
in
cwtl
mov
xor
mov
out
lret
and
or
pop
test
stos
in
mov
jp
aaa
pop
mov
push
pop
fs
xchg
push
ret
movsl
lods
push
mov
or
lds
add
mov
sub
push
insb
icebp
aam
lock
fsubr
sbb
cmp
cwtl
sub
call
dec
push
cmpsl
and
sbb
pop
pop
scas
sbb
mov
inc
daa
or
stos
int3
xchg
mov
cmpsl
push
xchg
insb
adc
fidivl
add
cmp
push
or
mov
ss
mov
mov
xor
mov
sbb
arpl
fmul
mov
les
add
adc
pushl
mov
inc
lea
idiv
cmpsl
pop
sbb
sub
sbb
pop
fcomi
jnp
iret
dec
fmuls
dec
jp
lods
sti
cmp
sub
gs
popf
sub
adc
mov
loopne
add
mov
rorl
loope
je
out
dec
cmp
mul
cmp
and
cmpsb
mov
pop
ljmp
push
lock
jmp
push
in
jecxz
bound
rclb
loop
mov
sub
mull
cwtl
mov
lods
movsl
sbb
nop
mov
inc
dec
inc
call
pusha
ret
sbb
mov
ljmp
lea
push
test
push
mul
adc
dec
xchg
add
fs
inc
in
push
das
push
xor
xchg
or
xor
pop
es
jne
cmp
or
xchg
test
sub
inc
imul
mov
add
sub
negl
pusha
or
mov
bound
sub
cmpsb
cmc
mov
cltd
in
mov
sub
lds
dec
mov
sub
xchg
loope
sbb
adc
loopne
add
pop
stc
loop
jmp
mov
lods
xlat
xor
dec
mov
pop
xchg
jle
iret
daa
rcrb
mov
add
fsubl
movsl
loope
sbb
es
xchg
out
lds
in
mov
js
mov
mov
dec
aam
outsb
ret
test
xor
cli
fs
sbb
pop
das
pop
mov
outsb
testb
xchg
imul
out
in
sub
sub
icebp
adc
out
dec
test
imul
outsb
adc
jp
cli
jmp
enter
jmp
movsb
fwait
scas
into
ss
js
cmp
sbb
das
jb
ret
and
jno
rol
les
std
sbb
imul
sub
jle
loopne
in
in
sahf
lcall
mov
outsl
out
shlb
ljmp
aad
dec
push
lret
jb
or
repnz
jns
jne
xor
and
fucomi
fidivl
nop
jb
mov
xchg
ja
sub
div
js
cmp
cmpsl
push
fcmovnb
xor
sbb
stos
pop
push
sbb
rorl
mov
fidivs
add
sub
cmp
jns
fdivrs
es
mov
dec
xor
loop
inc
decl
and
das
inc
cli
loop
add
inc
imul
stos
rclb
ljmp
and
jb
sub
ljmp
into
jecxz
and
push
lcall
push
sbb
rorl
mov
scas
or
push
test
fiaddl
sbb
sti
add
inc
insl
sti
shll
je
cmp
imull
cmpl
push
sbb
test
outsl
in
xor
jnp
sbb
cmp
lods
mov
lods
jl
popf
fcomps
fistps
rol
mov
stc
add
inc
icebp
into
inc
adc
mov
xchg
daa
insb
mov
aas
ds
mov
enter
iret
repnz
hlt
adc
and
pusha
adcl
cmp
fwait
xchg
jnp
stc
jne
xchg
and
add
add
or
dec
xchg
sbb
int
adc
cmc
jae
rcrb
gs
notb
mov
mov
cwtl
mov
or
repz
push
xchg
fistpll
inc
ss
xchg
cwtl
cmpsl
fmuls
mov
imul
out
jle
push
pop
push
repz
jge
dec
stos
sbb
je
loope
dec
jb
popf
inc
and
mov
sahf
adc
in
icebp
push
mov
jg
shrb
add
aam
dec
andl
mov
mov
bound
ret
sbb
xorb
push
cltd
push
adc
sbb
inc
inc
outsl
aas
sbb
out
adc
aad
push
daa
and
pushf
jb
sarl
add
std
seto
xchg
movb
dec
jmp
gs
bound
outsb
lds
imul
pusha
or
aam
mov
push
pop
mov
sbb
or
mov
inc
daa
add
out
lret
xchg
fs
jge
jecxz
int
inc
cmpsl
out
sti
js
sub
fstpl
sbb
outsl
gs
push
adc
pop
or
xchg
in
cltd
sub
pop
popf
fmulp
mov
jl
fisubl
jmp
cs
xchg
ss
clc
movsb
add
in
push
jmp
and
jbe
fs
lcall
or
push
scas
leave
in
xchg
sub
negb
loop
push
shrb
sbb
xor
lods
adc
fsubs
sbb
lret
adc
xor
jb
shlb
push
insl
sbb
and
addr16
sub
or
add
add
clc
xor
add
mov
xchg
or
insl
xchg
movsl
jno
pop
insl
into
sub
sahf
into
test
out
mov
orl
sbb
add
xor
sub
and
rclb
not
jbe
dec
out
inc
mov
push
mov
pop
jnp
fimull
mov
addr16
lahf
or
rcll
bound
jge
and
add
bound
pop
adcb
push
mov
cmp
iret
notl
pop
jmp
sub
push
mov
or
and
mov
mov
add
data16
inc
jp
jnp
or
ret
jg
inc
rclb
clc
push
xchg
ffreep
insl
cmp
xor
pop
std
xchg
inc
adc
in
test
loopne
pop
cmp
cwtl
cs
lret
inc
sub
jmp
cmp
and
insb
iret
xor
xchg
in
xor
push
and
xchg
sbb
push
xchg
sbb
shrb
cli
outsb
das
lret
mov
mov
push
inc
and
ret
push
cmc
call
push
arpl
push
loopne
xor
inc
fldl
mov
data16
inc
xchg
in
les
xor
mov
and
out
pop
jae
push
movsb
repnz
pop
leave
arpl
cmpsl
mov
frstor
xor
dec
jmp
outsb
dec
aad
fsubs
pop
bound
mov
incl
sbb
les
cld
jae
repnz
movq
sub
jg
mov
jnp
hlt
addr16
jae
sbb
inc
shlb
sbb
push
cmc
pop
ds
inc
cmc
xor
lcall
bound
inc
dec
imul
xor
out
jg
shr
icebp
int
inc
mov
fsubl
incl
xor
xor
ret
xor
pop
adcl
adc
dec
cmp
out
xor
mov
es
loop
mov
xchg
inc
mov
cmp
add
mov
les
sub
pop
fsub
cs
out
xchg
sub
lcall
outsl
push
push
jmp
dec
test
xchg
mov
push
mov
add
out
dec
cli
jno
aas
ret
popf
jl
adc
fiadds
popa
js
jbe
xor
lods
les
add
fidivrl
insl
enter
out
xor
out
mov
in
jnp
jno
cs
push
lcall
ljmp
add
push
aad
mov
into
test
das
xor
mov
daa
decl
add
sub
ljmp
shlb
aad
int
or
vpsubsw
sub
sub
sbb
jno
mov
mov
cs
and
cmp
sbb
adc
xchg
or
mov
call
aad
xor
pushf
jle
test
lret
shl
inc
cmp
mov
cmp
xor
mov
cmpsb
push
cmp
and
sbb
adc
inc
inc
subl
xchg
inc
stos
xor
mov
jbe
jle
ljmp
xor
out
iret
push
ret
out
testl
adc
js
sbb
mov
adc
lock
add
icebp
inc
sbb
xchg
inc
mov
stc
dec
inc
sub
pop
jl
inc
ss
add
cmp
rcrl
adc
inc
jp
sub
cld
aaa
loopne
and
imul
mov
and
mov
or
mov
jecxz
pop
adc
lcall
hlt
add
xor
dec
ljmp
repz
mov
cld
stos
dec
out
repz
cmp
pop
dec
xlat
jge
sbb
cmpsb
xchg
cmp
pop
movsb
es
or
xor
mov
cmp
inc
mov
push
push
cmp
inc
cmpsl
fcoml
test
test
addb
xlat
icebp
adc
stc
lahf
ljmp
or
cmp
pop
push
mov
dec
sahf
dec
cmpsb
addl
fwait
sbb
leave
and
jge
add
ret
sahf
testl
cmc
sbb
sbb
cli
sub
inc
ljmp
dec
in
stos
test
mov
loope
mov
xchg
jns
out
fisttps
cld
cmp
fdivl
fdivp
xchg
jne
mov
sub
or
cmp
test
cmp
test
vpaddb
jge
jmp
pop
or
cmpsb
cmp
and
sbb
mov
dec
inc
ja
mov
into
or
jbe
mov
test
cmpsb
sbb
jg
jecxz
or
and
fcomi
pusha
or
dec
insb
jbe
cwtl
popf
pop
imul
loope
sbb
out
dec
dec
cltd
mov
scas
mov
mov
fildl
cmpsl
push
dec
mov
into
ss
cmpsl
mov
xor
scas
cmpsb
insl
arpl
pop
and
pop
imul
xchg
or
repnz
das
inc
and
pop
xor
in
sahf
subb
inc
sub
lret
mov
xchg
in
push
in
imul
int3
sahf
fbld
into
imulb
loopne
cmp
and
lret
clc
test
iret
and
iret
jne
and
jno
mov
psubsb
pop
decl
adc
or
dec
nop
sar
jno
push
dec
fsubs
shrb
rcll
push
pop
inc
jne
adc
lock
pusha
fbstp
shl
adc
mov
xor
adc
add
add
rol
mov
mov
mov
pushf
jp
iret
popl
sub
jecxz
nop
inc
dec
sbb
xchg
decl
shll
xor
incb
bound
testb
dec
int3
jp
out
in
jo
jns
xchg
jecxz
jne
sub
gs
jl
jle
fdivs
mov
fwait
pusha
xchg
pusha
jns
add
outsl
inc
pop
mov
pusha
add
es
movsb
push
push
and
jne
xor
and
add
mov
fisubs
fnstcw
repnz
sbb
ret
add
and
xchg
jno
decl
pop
imul
lahf
pop
sahf
hlt
std
push
jmp
jo
adc
lods
or
xchg
test
popa
lcall
push
shl
pop
xor
sub
sub
and
fnstcw
aad
insb
push
sbb
xchg
mov
xchg
or
jge
cmpsb
lds
std
add
enter
xor
xor
sbb
sbb
push
dec
cmp
sub
iret
out
push
pop
jmp
adc
nop
stos
setno
movsl
sahf
mov
mov
outsb
pop
pop
xor
jae
std
aad
popa
mov
sub
pushf
outsl
push
sbb
and
insb
adc
cld
cmpsl
xor
mov
dec
cltd
add
mov
shr
dec
sbb
cmp
test
xor
xor
add
sahf
mov
push
ficomps
aas
xchg
sub
scas
or
inc
sbb
adc
dec
jnp
das
je
mov
sub
popf
jl
repz
ss
loopne
jne
mov
ljmp
repz
mov
data16
aaa
outsb
cmp
lods
or
jb
lds
push
inc
mov
cli
daa
fdivl
in
jbe
testb
or
aam
mov
push
push
aaa
dec
dec
or
xor
xchg
mov
sbb
lock
xchg
push
adc
addr16
dec
dec
cmp
cli
repnz
mov
repz
lahf
adcl
int3
imul
mov
and
fwait
rcr
nop
scas
dec
mov
fcompl
testb
mov
xor
sahf
mov
jbe
ret
lods
sbb
jmp
xchg
adc
in
jo
sub
pop
decl
mov
movsl
daa
out
arpl
add
jg
mov
inc
push
scas
jbe
insb
ja
sbb
dec
ficoml
xchg
stos
outsl
lea
pop
jns
ja
cmpsl
mov
repnz
movsl
xor
inc
pop
dec
lcall
mov
mov
adc
fucomi
mov
fs
nop
add
push
sbb
ljmp
sub
push
mov
pop
xchg
je
fistpl
out
and
dec
dec
add
push
je
mov
sub
pop
push
push
dec
jecxz
xchg
push
dec
cmc
shl
mov
inc
bound
lahf
scas
push
fcoms
lods
scas
arpl
iret
xlat
je
test
insb
cmp
xchg
sbb
into
and
adc
in
repnz
add
add
stc
pop
icebp
pop
out
adc
je
loope
cmp
cmp
cltd
mov
sbb
roll
sahf
into
jnp
ljmp
fsubrl
fnstsw
rclb
mov
clc
mov
push
mov
scas
in
or
xchg
outsl
frndint
dec
xchg
add
push
dec
aaa
repz
and
xor
jmp
xchg
and
not
stc
xchg
xor
lea
leave
or
jne
loope
ljmp
ja
fcomps
std
sub
arpl
stos
or
test
push
popa
mov
jle
xorl
ss
xor
insb
mov
sbb
es
mov
loop
shr
mov
pop
mov
sub
jp
jg
cmp
sub
mov
push
ljmp
lret
pusha
lds
cmp
xchg
in
add
sbb
jb
popa
repz
mov
js
mov
mov
int
push
ret
or
ljmp
or
push
mov
adc
xor
js
jecxz
mov
jne
mov
adcl
and
xchg
fmul
test
sbb
movsl
xchg
xor
pusha
push
nop
aas
sbb
addr16
xorl
cli
fsts
add
mov
push
adc
cwtl
add
mov
icebp
pop
cli
mov
and
movsl
pop
hlt
sub
cmc
das
cmp
sub
cmp
and
and
fnstenv
inc
push
pop
jg
fsubl
push
aad
or
into
xchg
xor
sub
mov
fdivl
filds
xor
cwtl
ficoms
daa
in
xchg
jmp
push
imull
inc
push
mov
pop
ds
lods
std
push
inc
pop
and
jno
loopne
pop
es
fisubl
or
in
daa
dec
sbb
faddp
pop
jp
cmp
aaa
fwait
dec
push
ret
lods
mov
idivl
mov
inc
add
jne
adc
adc
out
inc
cmp
fidivrs
daa
sub
test
mov
les
ds
mov
add
fdivl
mov
jae
sbb
fldl
fildll
shr
add
mov
jl
ret
adc
or
das
in
std
push
pop
mov
aad
mov
arpl
js
add
mov
movl
scas
mov
jne
adc
mov
shll
loope
subl
cld
dec
or
mov
test
ds
inc
scas
clc
xor
dec
xor
out
scas
je
xchg
jo
mov
shl
mov
insb
int
pop
scas
lret
aaa
mov
psubw
push
fistps
add
or
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
scas
lea
push
sub
push
push
lock
aaa
cld
cs
int3
sahf
hlt
imul
jmp
mov
and
leave
mov
fwait
vsubsd
pop
divl
shl
add
sbb
mov
cmp
and
dec
or
bound
lret
lea
mov
out
repnz
mov
xchg
dec
add
push
out
mov
pop
incl
jne
aad
xor
mov
scas
push
popf
pusha
mov
movsb
jge
arpl
mov
dec
adc
dec
in
jo
cmp
ret
and
jl
dec
inc
mov
out
insl
inc
or
mov
push
push
ret
pop
out
sbbl
and
lock
pop
cmp
cld
xchg
mov
inc
inc
mov
sub
pushf
pop
subb
push
mov
rorl
lret
cltd
mov
xlat
sbb
ret
dec
dec
adc
fbld
popa
xchg
push
sbb
orb
pop
or
jge
jmp
xorb
in
lcall
mov
sbb
cmc
orb
lret
push
fxch
mov
adc
mov
adc
ja
or
mov
add
xchg
or
pop
into
jmp
inc
lock
cmpsb
xor
push
mov
jecxz
cmc
cli
inc
and
js
and
xchg
dec
lock
lds
movsl
lahf
mov
adc
pop
aaa
xchg
ror
inc
xchg
adc
xchg
andb
mov
sub
jecxz
push
push
sarb
adc
cmpsl
pop
stos
pop
ds
fsubl
iret
movsl
cwtl
add
push
xor
jge
lods
fldenv
icebp
add
xchg
mov
or
sub
xchg
xor
fisubrl
push
inc
roll
dec
ficompl
test
cmp
mov
aam
or
popf
pop
idivb
inc
pop
outsl
push
jb
add
aam
insl
cmp
and
int
mov
adc
add
dec
sbb
sub
popf
mov
fsubr
fmuls
into
insb
jl
aad
sbb
adc
pop
xchg
push
cmp
pop
add
add
shll
dec
mov
xchg
dec
add
ret
mov
mov
js
nop
xchg
push
mov
fildl
popa
stos
jle
xor
bound
pop
mov
loopne
iret
jmp
out
insl
jnp
pop
shll
jae
adc
inc
test
mov
sub
mov
inc
mov
pop
cli
push
repnz
adc
sbb
pop
jne
ljmp
lahf
jbe
popf
into
mov
fstpt
jge
xor
popf
scas
movsb
and
push
xchg
in
loope
lock
jecxz
jmp
scas
mov
or
mov
jmp
call
les
cmp
scas
cmp
push
clc
sbb
jp
xchg
add
jg
fsubrs
jmp
mov
hlt
xchg
jp
sarb
push
pop
std
xor
mov
pop
pop
sbb
sti
aam
or
jg
xchg
bound
les
mov
arpl
subb
inc
cmp
add
adc
fmull
mov
push
test
jp
cmp
clc
pop
aaa
ret
out
dec
call
jl
jmp
xor
mov
push
shlb
add
pop
inc
aam
into
fcmovb
or
data16
arpl
jns
fdivs
ja
mov
xchg
sahf
lret
push
dec
sbb
in
adc
or
fs
mov
iret
inc
insl
ds
jbe
fwait
add
enter
mov
lret
jbe
jns
xchg
add
gs
loop
jg
sub
movsb
cltd
inc
test
stc
sub
call
test
enter
dec
sbb
iret
hlt
loop
sub
jge
adc
pop
in
mov
fstps
jae
fisubrl
loope
sbb
jl
xchg
pop
fldl
add
cmpsb
adc
into
lret
fwait
ljmp
cmp
pushl
cs
aad
jge
les
nop
pop
lods
lods
mov
jae
xlat
jge
je
cld
test
jmp
into
mov
mov
cltd
dec
adc
pop
fs
sbb
pop
fistps
out
cltd
pop
or
push
jno
js
or
pop
jmp
stos
push
mov
push
sbb
adc
lahf
xchg
inc
rclb
aam
enter
lsl
leave
cmp
rorb
aaa
mov
addr16
insb
cmp
add
popf
pop
push
les
push
lret
ss
ret
sbb
cmp
adc
lods
imul
rol
jecxz
daa
sbb
and
mov
mov
sbb
xlat
in
cmp
xor
jmp
nop
es
push
aas
mov
bound
push
mov
mov
test
jecxz
inc
lea
les
cmp
jbe
cld
aad
ds
mov
mov
pop
xchg
pusha
and
dec
cmp
in
mov
push
lcall
sti
movsl
cltd
jo
xchg
cmp
sbb
jl
add
add
mov
fstl
int
sub
cs
xchg
or
push
pop
xchg
pop
xor
xchg
pop
jb
into
add
into
fsubr
dec
jo
movsl
loop
lret
filds
cmp
xor
cmp
xchg
pop
jmp
cmp
pop
mov
lods
push
lock
jle
daa
jb
and
shlb
cli
pop
cltd
jmp
aad
out
mov
xchg
cmpsl
orl
mov
push
xchg
push
pop
inc
xchg
or
sbb
cmpsl
fidivrs
or
push
mov
inc
stos
outsb
out
bound
mov
or
push
outsb
mov
xchg
cmp
lcall
dec
jne
negl
or
push
sbb
test
dec
stos
adc
pop
loop
imulb
push
fildl
lods
sti
mov
jecxz
jecxz
sub
mov
xchg
jmp
fcos
iret
sub
adc
jno
shlb
add
jg
ror
sub
push
adc
fcoml
test
pop
or
rclb
dec
fs
insl
pop
fs
jmp
sti
xchg
cwtl
ja
out
lea
sub
rcll
sbb
adc
cli
mov
sub
in
int3
dec
mov
insb
jecxz
dec
inc
xchg
test
ret
inc
mov
shlb
lret
push
sub
shrb
mov
inc
push
icebp
outsb
or
mov
std
sub
scas
cmp
pop
jge
mov
sbb
in
push
hlt
and
pop
sub
gs
leave
pusha
out
jmp
ret
push
adc
lds
pop
sbb
test
imul
es
rcll
rorb
pop
jecxz
and
cmpsb
imul
xchg
int
push
mov
lods
push
pop
imul
daa
out
push
test
jo
ljmp
cmp
leave
testl
mov
les
imul
daa
in
add
aad
lock
inc
add
insb
and
pop
lret
push
inc
inc
inc
jl
inc
inc
push
shl
xchg
test
xchg
cli
repnz
mov
inc
push
push
imul
xchg
xchg
pop
popa
test
adc
shll
mov
xor
sbb
pop
test
scas
xchg
and
or
sub
cld
mov
mov
inc
cmp
loopne
pushl
into
stos
adc
faddl
lods
ret
fisttpl
sbb
inc
jg
lods
movsb
nop
or
mov
sub
mov
orl
fdivr
fimull
inc
lret
and
pop
sbb
adc
icebp
push
push
jl
fldt
cmp
ficoms
les
movsl
or
sbbb
jp
lds
adc
jl
xchg
adc
xor
les
add
adc
dec
xchg
add
cmpsl
inc
test
jp
insb
jecxz
xorl
bound
lock
aaa
add
movsb
sbbl
dec
je
jns
inc
sahf
pop
lret
arpl
push
filds
xchg
out
and
inc
mov
incb
in
fidivl
inc
mov
cmp
pushf
push
pop
pusha
lods
pop
gs
mov
sbb
lret
rol
js
repz
sbb
sbb
sbb
pop
out
arpl
test
and
pop
mov
adc
inc
mov
xor
sub
mov
std
push
xchg
mov
rorb
out
mov
pop
dec
arpl
hlt
sbb
dec
in
pop
aaa
jo
aaa
pop
pop
sub
test
stos
dec
icebp
mov
les
inc
push
jne
mov
add
pop
inc
mov
dec
push
stos
lock
mov
adcb
and
sbb
add
or
sbb
dec
dec
test
aam
js
loopne
sti
iret
or
mov
ljmp
push
xor
mov
jp
sahf
pop
or
adc
lret
mov
xchg
shrb
push
mov
jmp
push
push
out
jmp
inc
sahf
shlb
sub
cmc
lods
fwait
pushf
subb
mov
mov
mov
pop
adc
adc
jbe
sub
fsubs
cmp
push
mov
jno
jo
in
fwait
cmp
inc
cmp
shll
push
mov
out
xchg
xor
out
xor
xor
jno
insl
jb
cmp
stos
xchg
cld
popa
es
inc
mov
cmp
stos
movsl
cmp
and
xor
rclb
dec
hlt
mov
mov
and
fisttpl
stos
push
fsubl
cld
sahf
divb
xchg
fimull
pushf
cmc
cs
push
inc
rol
pop
lods
jnp
adc
dec
pop
lret
cltd
lea
testb
adc
stos
lds
sub
ffree
shlb
into
hlt
stc
sub
cmovl
sub
ficompl
fwait
mov
dec
addb
pop
adc
ljmp
xchg
cmp
mov
xchg
imul
repnz
inc
out
mov
sbb
lods
mov
test
mov
cli
roll
mov
mov
int
add
xchg
ljmp
adc
repnz
loope
movsl
mov
mov
mov
lods
pop
inc
scas
mov
sbb
dec
subb
adc
mov
rcrl
movsl
jae
push
mov
stc
jno
shlb
dec
shlb
mov
nop
dec
fisubl
out
je
add
adc
dec
push
mov
mov
ret
lods
ret
inc
test
clc
icebp
adc
cltd
push
jl
add
sbb
jb
cmpsl
fnstsw
push
adc
pop
ljmp
lret
cmp
leave
hlt
cmp
icebp
loope
xchg
cmpsb
xor
sub
ret
out
rorb
add
add
pop
cmp
cmpsb
xchg
addr16
rcll
xchg
xchg
jmp
into
jno
mov
popa
pusha
adcb
add
imul
addb
xchg
push
scas
add
cmp
push
xor
xchg
mov
imul
xor
xor
repnz
int3
les
mov
and
jl
outsb
lret
jg
pop
pop
push
sbb
adc
pop
lea
out
aam
mov
and
fisubl
xchg
enter
test
mov
mov
mov
shrb
sbb
push
dec
and
xchg
xchg
lds
add
or
ret
outsb
cmp
dec
lahf
fwait
cmpsb
stc
jg
xchg
pop
push
data16
sbb
jns
cmpsl
insl
xlat
pusha
in
jae
repz
dec
popa
lahf
out
data16
mov
push
cwtl
dec
imul
mov
pushf
bound
mov
mov
data16
cs
push
fdivrs
xchg
popa
pop
mov
or
jp
clc
cs
xor
sub
mov
push
je
std
sbb
lahf
inc
or
les
inc
out
sbb
or
imul
mov
inc
stc
pop
and
lret
repnz
sbb
faddp
pop
not
adc
mov
mov
xchg
push
add
push
lcall
aas
je
and
and
test
lds
in
push
shl
add
fdivrs
xor
fdivrs
add
ljmp
jns
aaa
xchg
fucomip
cmp
inc
jecxz
es
mov
outsl
push
fwait
jae
sbbl
push
into
in
push
sbb
sahf
pop
fadds
pop
cltd
adc
lar
loope
pusha
insb
adc
movsb
mov
mov
mov
mulb
cmp
or
cld
mov
in
clc
xchg
lods
or
mov
mov
dec
cli
outsl
daa
pop
cmc
imul
pop
or
insl
pusha
aam
insb
mov
inc
mov
mov
mov
xor
popa
pop
pop
mov
cld
mov
incl
add
jmp
and
icebp
sarl
inc
xor
lret
mov
in
popf
int3
lock
jp
iret
inc
adc
push
adcb
cmpsl
mov
cmp
pop
cmp
clc
dec
pop
jge
cmc
xor
adc
pop
ljmp
stos
pusha
push
xchg
and
lret
xor
lods
je
xchg
sub
fidivl
lcall
inc
and
ljmp
sub
add
leave
inc
call
jns
mov
shlb
icebp
push
mov
jnp
xchg
sbbb
fucomi
xchg
mov
dec
outsl
inc
jle
rclb
mov
push
sub
imul
hlt
push
inc
pop
adc
loope
jg
sub
shl
shlb
repnz
pop
sub
xchg
dec
sbb
jecxz
push
or
push
xor
nop
sub
or
pop
adc
addr16
fstl
js
push
faddl
daa
mov
movsl
rorl
inc
idivb
popf
stos
mov
cmp
ret
xor
test
int
pop
sbb
xor
mov
mov
mov
xor
popf
sbb
scas
shlb
insb
inc
mov
xchg
add
dec
mov
lds
fisubl
sub
cmp
nop
outsl
aas
sub
lods
bound
shll
lahf
shrb
enter
pop
sbb
mov
clc
mov
cltd
insl
gs
xchg
inc
inc
jmp
and
add
jecxz
mov
insl
xchg
xchg
fdivl
aam
scas
and
arpl
or
or
or
into
mov
testl
loop
jne
into
dec
stos
out
leave
cmp
sub
sti
or
mov
mov
outsb
pop
mov
ss
xchg
cmp
and
or
add
mov
fstps
mov
js
inc
or
jne
imul
pop
mov
iret
ret
pop
mov
mov
mov
and
pop
shl
pop
or
pop
data16
jg
jae
pop
mov
aas
cmpsb
into
pop
in
out
sub
fildl
jmp
flds
aaa
cwtl
iret
mov
lahf
xchg
test
popa
push
shr
in
mov
jg
icebp
js
dec
imul
and
ja
xchg
adc
outsl
lret
pop
xor
mov
out
test
sbb
lahf
push
xor
or
jnp
aad
pop
lcall
cmp
dec
xor
mov
es
cmpsb
sbb
pop
xchg
cmp
cmp
inc
xchg
push
cli
pop
imul
mov
push
scas
jo
lahf
jnp
jge
movsl
xor
aas
push
rcr
stc
xor
cld
mov
cmpl
leave
xor
sub
mov
add
sbb
cld
jbe
mov
sbb
movsl
loopne
out
inc
and
fs
xor
pop
loop
cli
jp
pop
repz
arpl
aad
adc
push
push
xor
repz
sbb
outsb
into
and
in
fldcw
ficomps
push
mov
outsb
pop
push
sbb
mov
and
mov
cmpsb
or
mov
mov
add
xor
icebp
jns
popa
insb
jp
push
cmc
dec
xchg
adc
jge
adc
push
mov
xorb
pop
cld
notl
pop
sub
sti
mov
sub
xchg
adc
cmp
pop
lds
and
bound
push
jl
incl
stos
in
jo
cmp
pop
in
cwtl
lret
nop
jo
pop
dec
and
pop
adcl
lret
pop
mov
fdivs
mov
and
add
cs
aaa
pop
aam
push
movsb
fisttpll
addb
call
js
test
aaa
lahf
jae
outsl
fidivrl
lahf
cltd
jg
js
xchg
leave
jno
inc
push
jne
in
lods
xchg
sbb
jns
les
in
adc
inc
shlb
push
ja
sar
iret
mov
adc
in
push
sbb
sub
push
add
mov
in
mov
push
pop
adc
ret
pop
adc
inc
arpl
pop
mov
jne
jb
and
cmpsl
dec
dec
jle
andb
test
xchg
les
call
lret
fsubl
or
out
pushf
stc
out
cmpsl
and
jno
aam
xchg
and
dec
inc
stc
hlt
add
inc
inc
mov
lods
sbb
int
pop
xor
mov
sbb
aad
inc
fdivs
les
inc
aam
out
push
mov
mov
insl
mov
sub
dec
stc
out
shll
mov
mov
add
xchg
pop
fadd
pop
aas
mov
out
inc
addr16
fwait
or
jno
add
movsl
lea
cs
notb
jne
pop
add
scas
xchg
mov
outsb
repnz
push
pop
lds
test
lods
dec
push
xchg
ja
lahf
cmp
loop
dec
adc
mov
xlat
je
arpl
outsl
movsl
or
push
pop
aad
les
dec
dec
dec
inc
pop
ss
scas
add
mov
lahf
pop
adc
mov
or
fst
mov
mov
loopne
sbb
aam
dec
push
aam
in
rcrl
iret
hlt
lds
fdivrs
mov
inc
adc
pop
in
cmp
scas
mov
mov
inc
adc
pop
cmp
mov
les
mov
jp
lret
pop
mov
push
stos
or
cltd
sahf
xor
and
cmp
add
repnz
icebp
mov
cmp
lret
iret
pop
lds
mov
outsb
inc
popa
mov
push
scas
sub
sbb
jns
rol
pop
jbe
xchg
xor
repz
push
ds
mov
popa
and
mov
xor
add
cmp
jo
sub
and
iret
ret
scas
cmp
addr16
add
jge
or
cmp
cld
adc
stos
dec
adc
mov
rclb
hlt
dec
rcr
mov
pop
jp
fs
leave
popf
push
push
fisubl
mov
xchg
out
test
lret
imul
pusha
mov
enter
es
out
push
stc
lahf
cwtl
in
mov
pop
and
add
add
add
dec
icebp
popa
pop
sar
cli
or
outsb
cmpsl
out
xchg
popf
adc
mov
shl
jecxz
testb
imul
aas
dec
sbb
lods
add
in
xchg
pop
mov
add
mov
ret
ja
xchg
pop
inc
cli
mov
jle
jp
leave
pop
sahf
push
sub
push
mov
call
fcoms
cmp
rolb
sarb
dec
inc
stos
push
ror
jnp
clc
imul
xchg
and
push
mov
pushf
mov
dec
dec
test
pop
movsb
xor
pop
dec
ds
push
xor
mov
push
shl
xchg
mov
pop
or
stc
push
lods
fsub
adc
jle
fisubs
mov
sbb
push
in
scas
mov
add
xchg
daa
add
or
addr16
push
or
into
aad
in
std
sub
inc
xor
stos
mov
push
sub
sti
and
gs
leave
jo
jmp
cmp
adc
jns
or
xor
mov
jl
fucom
push
stos
or
inc
cmp
push
adc
jle
and
or
push
xlat
nop
mov
push
stos
push
add
and
fidivl
jo
mov
jne
dec
sub
nop
mov
scas
aaa
or
jno
mov
movsb
dec
nop
cmc
push
or
adc
into
outsl
sub
mov
mov
sbb
iret
xchg
mov
arpl
cli
dec
or
scas
inc
lea
cmpsl
popa
add
dec
cld
xchg
fmull
mov
hlt
negl
data16
repnz
bound
xchg
popa
xor
comiss
inc
jle
or
add
sub
mov
inc
cmp
mov
jns
mov
xor
jg
in
mov
jle
lcall
insb
movsb
lock
mov
orl
dec
jl
aad
push
repnz
cwtl
dec
cmp
sbb
repnz
cmpsb
mov
imul
add
in
ja
xor
pop
xchg
repz
jmp
xchg
pop
sub
pop
enter
xchg
fiaddl
push
in
dec
andl
lock
orb
mov
add
es
mov
pop
sbb
andl
sbb
mov
push
push
mov
das
pop
in
pushf
sbb
push
fistps
jno
andb
jo
loopne
mov
jnp
jg
mov
cmpsb
outsb
push
xchg
push
test
call
xchg
inc
iret
pusha
stos
mov
sub
add
out
mov
push
stos
inc
lods
adc
or
pop
pusha
imul
cs
dec
xor
push
push
jecxz
idivl
pop
inc
cld
pushf
adc
jle
xchg
stos
out
push
xchg
pop
push
push
nop
dec
sar
movsb
inc
xor
sahf
loop
inc
bnd
movsb
jle
pop
push
or
adc
jne
jbe
mov
add
les
js
rclb
cmc
mov
orb
popa
and
in
pop
ret
ror
int
scas
idivl
or
push
add
popa
lods
add
add
lods
movsb
mov
push
dec
arpl
inc
push
mov
lods
and
gs
out
jmp
loopne
mov
mov
xor
lods
mov
sbb
mov
adc
jle
push
mov
jg
movsb
cs
aad
sub
popf
sub
fs
adc
jbe
pop
sub
mov
fninit
popf
loop
int3
mov
inc
sbb
jae
rorb
in
lods
fbstp
mov
jp
xchg
adc
mov
sbb
mov
pop
push
sub
xor
mov
outsl
xor
xor
jmp
sub
jge
icebp
fsubp
cwtl
and
xchg
test
and
das
push
in
pop
test
lcall
mov
ljmp
and
jecxz
mov
sbb
xor
sahf
fs
shrb
pop
sbb
mov
outsb
call
call
lods
pop
or
fdivs
adc
dec
dec
mov
cmp
adc
mov
iret
in
es
and
cld
xchg
pop
cmp
nop
out
sub
mov
and
mov
in
loop
sub
loopne
fs
xchg
mov
jbe
xchg
push
dec
into
mov
ret
xchg
sub
clc
mov
cltd
xchg
and
xchg
xchg
cs
mov
xor
xor
sub
mov
fdivl
dec
int3
fldcw
popf
cmp
in
bound
lods
clc
outsb
add
sub
andl
movsl
leave
sbb
sti
jge
ds
xchg
fnstsw
pop
push
jp
jmp
xor
decb
pushf
jge
cli
push
or
adc
mov
and
mov
sarb
cli
outsb
popf
xor
and
jo
in
push
imul
insl
xchg
lock
ja
jbe
sub
xchg
add
das
dec
sbb
mov
or
sub
push
jl
push
or
or
and
imul
or
imul
xchg
faddl
andb
icebp
xchg
repnz
sahf
xor
or
mov
shr
mov
loopne
jbe
mov
outsb
pop
add
jno
add
sub
mov
dec
jle
fdivr
mov
std
shl
jle
push
call
mov
mov
nop
ficoms
jb
dec
mov
jb
in
rorb
int3
daa
push
insl
sub
sarl
pop
sbbb
xchg
dec
test
cmp
or
movsb
movsb
add
adc
daa
xchg
test
push
hlt
rolb
movups
pop
jmp
jno
cmp
mov
and
mov
das
out
pop
bound
mov
lods
adc
mov
loop
dec
jno
mov
in
mov
sub
movsl
adc
fisubrs
cmp
add
jle
lock
jmp
mov
xor
add
sub
leave
idiv
stos
cltd
in
imul
sbb
jae
cmp
and
call
ds
lods
clc
mov
pop
push
int
push
pop
mov
cmp
cmp
aam
in
jns
xchg
push
mov
fdivl
rcrl
sub
and
out
mov
dec
pop
add
pmaxsw
in
mov
xor
ljmp
out
cmp
scas
cmp
sbb
int
jbe
xchg
adc
aaa
sbb
fisubrl
in
es
mov
fs
cvttps2pi
insb
in
fcmovbe
xor
roll
scas
mov
add
push
rep
je
test
iret
call
jecxz
aad
jmp
mov
sbb
dec
mov
lret
faddl
and
sub
sti
es
push
into
pushf
sbb
mov
mov
or
sbb
lcall
jnp
sti
bound
add
add
mov
imul
or
enter
jb
mov
cltd
xor
sbb
cmc
add
xor
mov
enter
mov
or
shll
shlb
gs
add
jle
dec
push
push
mov
cmp
aad
add
hlt
sub
mov
cmp
dec
xchg
lds
xlat
fisttps
lods
adcl
mov
jmp
insl
std
adc
inc
inc
movsl
clc
out
into
pop
mov
leave
cmp
mov
insb
shlb
push
lods
xor
nop
pop
adc
dec
fmul
and
lods
cltd
sarl
dec
ror
mov
popa
daa
lea
repz
lea
push
add
inc
push
stos
aad
outsb
mov
lods
lret
mov
in
mov
pop
insb
sbb
int3
dec
inc
loopne
fcompl
leave
jae
push
ss
push
sub
test
lods
in
orb
scas
sub
cli
inc
pop
clc
cmp
pop
lds
cmp
jecxz
lea
dec
adc
incb
dec
push
jle
jae
pop
pop
or
std
pop
pushf
scas
mov
sbb
nop
dec
loop
adc
cmp
rolb
xor
shr
js
adc
insb
cmpl
sti
out
pop
in
mov
cmpsb
lods
fstp
jecxz
push
push
and
and
and
mov
mov
sbb
xchg
inc
mov
fistpl
dec
dec
stos
cmp
jecxz
xor
repz
inc
sbb
data16
pop
and
or
aaa
leave
popf
sti
xor
rcrl
jmp
xor
jp
repz
rcrl
jg
mov
test
iret
fcmovnb
jp
loopne
orl
cli
fisttpll
jl
aam
xor
in
cmp
ret
jp
ljmp
xor
pop
adc
popa
pop
es
pop
cmpb
dec
dec
xchg
fiadds
data16
fidivrl
out
jmp
xor
bound
and
ds
loopne
add
push
mov
pop
clc
aas
jae
sahf
lcall
movsb
popa
mov
sti
adc
std
dec
fisttps
ret
iret
fwait
lds
inc
mov
sbb
and
jb
mov
inc
rcrl
es
adc
add
and
stc
shlb
addr16
mov
mov
push
dec
aam
push
mov
test
mov
int3
aam
fcomi
push
mov
pop
leave
data16
jp
mov
cmpsl
out
popa
sub
test
adc
insb
mov
daa
jbe
mov
aam
mov
inc
movb
test
adc
push
sbb
or
jno
push
dec
pop
out
inc
or
inc
xchg
repnz
dec
push
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
repnz
scas
cmpsb
adc
sub
push
push
xchg
ret
fdivrl
stc
je
mov
in
jno
pop
mov
idivl
in
dec
and
cs
cmpsb
subl
pop
and
gs
push
pop
pusha
rclb
or
fmull
add
xor
sub
xchg
push
enter
pop
mov
in
rclb
mov
add
nop
xor
pop
fucom
daa
insl
xlat
inc
repz
ljmp
or
adc
gs
add
rcll
into
mov
cmc
sub
inc
jl
loope
scas
and
test
jo
mov
sbbl
aas
ss
sarb
fmull
lods
mov
cmp
arpl
lahf
mov
add
ret
cmp
cmp
sbb
loope
or
jb
xor
mov
subb
cwtl
push
xchg
xor
nop
adc
and
jne
mov
testl
popa
dec
shll
cmp
push
call
adc
jecxz
mov
fcoms
and
icebp
pop
popa
push
mov
mov
push
out
stc
call
movsb
add
loope
ret
ficomps
test
pop
push
mov
push
sbb
adc
or
popa
and
jmp
ret
sbb
cmp
ret
cmp
mov
shr
mov
daa
push
clc
push
cli
sbb
jmp
imul
mov
lods
rcr
mov
xlat
cmpsl
in
jb
bound
movnti
roll
xchg
inc
fdivl
ret
mov
xlat
leave
out
outsb
inc
mov
insl
push
dec
push
in
test
or
scas
dec
ret
sub
inc
out
out
out
lock
adc
mov
add
or
push
mov
add
cmpsl
fstpt
cmp
mov
popa
lret
arpl
insb
stos
sbb
mov
sbb
inc
incl
es
push
jno
and
and
aas
push
xlat
adc
sbb
push
cltd
mov
test
jge
sarl
xchg
push
and
xor
xor
cmp
fbstp
jbe
and
out
push
xor
aaa
mov
gs
pushw
icebp
aaa
repz
cmp
jbe
jge
pop
dec
xchg
insl
jmp
lds
mov
and
outsb
out
stc
cltd
std
xchg
test
scas
dec
inc
insb
sbb
or
mov
test
hlt
ret
lret
inc
out
lods
arpl
mov
gs
push
jno
cmp
insl
mov
pop
sub
jns
pop
test
lahf
rcrl
xchg
pop
aaa
jo
mov
mov
pop
push
pop
pushf
incl
jae
out
mov
test
mov
aaa
push
and
jmp
push
test
jne
and
dec
pop
lahf
mov
adc
pop
fiaddl
hlt
pop
imul
jne
idivb
inc
lods
or
push
pop
data16
adc
mov
fidivl
adcb
mov
in
fadd
ficompl
push
lret
jl
das
xchg
or
adc
jmp
cs
mov
sbb
popa
insb
cmc
jle
adc
sbb
stos
outsl
loope
sbb
imul
mov
into
mov
stos
cmc
js
adc
icebp
es
aad
das
imul
int
cmp
and
jg
orb
bound
orb
jle
cld
mov
sbb
mov
push
pop
ss
clc
mov
mov
cmc
mov
ljmp
int3
stos
lds
dec
xchg
and
push
sbb
addb
jo
pop
repnz
inc
addr16
cwtl
mov
and
mov
repz
xchg
shld
shl
cmp
xchg
jnp
or
enter
cli
decb
test
out
dec
and
stc
shll
sbb
jg
and
lods
inc
scas
ljmp
repnz
add
bound
aas
xor
arpl
dec
js
or
push
stos
rcrb
out
or
aaa
cmp
insb
cmp
cmpsl
and
lock
mov
std
fldenv
adc
ja
popf
inc
stos
jb
cmp
xlat
sub
lods
mov
mov
xor
pop
fs
test
push
mov
leave
mov
clc
jae
sub
mov
js
dec
cmp
test
fs
dec
pop
mov
mov
push
test
dec
jo
push
orb
pop
add
imul
gs
negl
dec
hlt
dec
fisubl
jmp
dec
adc
clc
pop
adc
dec
divl
sub
adc
aam
dec
stos
fcmovnbe
fimuls
lret
cmp
repnz
xchg
cmp
dec
cltd
stos
mov
out
pop
movsl
push
mov
daa
xor
cmpsb
cltd
pop
inc
dec
sbb
outsl
xchg
in
loop
std
sub
add
loope
bnd
js
int3
fwait
xchg
loop
adc
ss
sbb
std
cmp
fadd
cmp
mov
push
jp
movsb
popf
jl
cmp
test
inc
cltd
mov
inc
mov
scas
add
push
outsb
dec
test
daa
aam
in
pop
div
push
int3
xor
pop
inc
icebp
ds
jmp
sbb
mov
sbb
push
cmp
xor
push
subl
xchg
orb
push
ss
sbbb
add
lret
xor
jg
fst
mov
jl
shll
jl
daa
fcoms
stos
add
xchg
sbb
test
dec
push
pop
out
into
add
add
out
lea
or
xlat
enter
loope
les
aam
lods
or
lods
mov
lret
mov
or
addb
movsl
adc
pop
mov
out
ffree
dec
addr16
or
adc
out
cmc
jo
es
dec
mov
negb
inc
and
push
push
mov
out
popf
cmp
jle
lock
dec
mov
push
shrl
int
fcomps
rcll
movsb
faddl
sti
dec
lds
inc
push
addr16
cmp
mov
or
jae
fnstenv
inc
aam
jle
mov
jecxz
push
xchg
stos
cs
xchg
outsb
jo
jae
cmp
daa
insb
xor
mov
in
fnsave
test
cld
push
hlt
push
imul
jne
mov
loopne
mov
push
mov
cmp
add
sub
sbb
push
pop
push
daa
push
es
or
xchg
leave
test
in
std
dec
and
aam
push
jne
fnstsw
xchg
mov
fdivrs
loop
and
mov
icebp
xor
in
inc
jecxz
pusha
fadds
mov
pushf
rorl
clc
lret
loop
imul
cmpsb
ljmp
inc
cli
inc
popf
int3
jecxz
cmc
sub
scas
cmp
repz
in
stos
push
test
das
fstpl
sub
push
lahf
sbbb
mov
xor
ret
fisttpl
mov
inc
pop
loop
je
stos
xchg
cmp
lcall
push
divw
js
loope
mov
dec
out
xchg
imul
push
leave
xchg
xchg
inc
sbbl
addr16
jae
cmp
clc
das
stc
cmp
jns
mov
xchg
or
xchg
jmp
mov
lahf
fwait
inc
adc
xor
scas
xor
aas
push
and
pop
call
mov
push
lcall
mov
cmp
aaa
subl
cwtl
sbb
and
shrb
stos
adc
mov
rol
inc
mov
sbb
in
push
test
js
mov
cmpsb
mov
jne
xor
insl
in
push
lcall
sbb
scas
inc
cmp
pop
ret
pop
sbb
and
iret
or
inc
outsl
or
aas
jnp
iret
cmp
or
cmp
sub
cmp
movsl
cltd
cmp
loop
daa
sub
lea
pop
pusha
sub
fs
stc
or
sahf
in
ret
call
and
mov
pop
adc
adc
test
daa
scas
inc
jb
mov
push
dec
jae
ret
in
push
popf
or
jl
mov
or
sbb
rclb
xor
cli
loopne
and
add
adcl
fwait
mov
mov
and
sbb
inc
mulb
xor
mov
sbb
xor
outsl
test
dec
lds
mov
cmp
js
in
std
pushf
add
push
loopne
out
out
mov
pop
arpl
call
push
popf
scas
pushf
jne
mov
sahf
dec
ficomps
mov
dec
rcl
or
adc
jmp
cmpsl
push
or
adc
adc
ss
pop
cmc
in
fstps
enter
in
aas
inc
das
shlb
dec
aaa
hlt
inc
cwtl
int
xor
aad
icebp
pop
xchg
leave
adc
add
jmp
xchg
out
gs
dec
insl
inc
cmpsb
outsl
cltd
repz
lock
das
aam
mov
popf
ss
imul
pop
pusha
and
mov
das
xchg
fisttps
loopne
adc
ret
ficomps
xor
pop
fwait
cmp
sub
in
fcoml
loop
jmp
push
adc
dec
adc
xchg
arpl
sub
mov
adcl
lock
jmp
dec
lods
jne
hlt
or
or
mov
ror
adc
loop
mov
fsubrl
push
repnz
addb
push
sub
mov
jp
sahf
lock
pop
lods
arpl
jbe
inc
fiaddl
xchg
test
mov
lods
pop
cltd
sbb
fidivl
jns
sbb
stos
in
jmp
ja
out
dec
ja
aam
cmp
ss
dec
fs
xchg
push
lret
ds
mov
lret
mov
sti
xor
dec
js
mov
dec
and
mov
xor
push
push
cmp
aam
addr16
lods
stos
or
aaa
jno
push
stos
sbb
add
dec
popf
sti
lea
jae
sbb
incb
cmpsb
sahf
data16
pop
mov
jb
mov
push
outsl
nop
in
movsl
and
rolb
rorb
and
mov
arpl
dec
jl
dec
aas
pop
dec
lahf
out
dec
addl
popf
pop
add
add
adc
and
mov
in
mov
pop
rol
cltd
or
aas
add
push
in
adc
and
mov
aam
shrb
popf
cli
movsl
addr16
sub
mov
xor
les
lods
cltd
aaa
mov
popa
sub
roll
push
shlb
dec
pop
push
inc
jns
adc
fidivrs
push
into
inc
icebp
add
jo
sbb
incb
lcall
cli
xchg
xchg
imul
jo
call
xchg
scas
test
mov
jle
nop
ss
add
mov
xlat
or
pop
loop
sbb
cmpsb
aaa
nopl
mov
cmpsb
xor
jp
pop
imul
int
mov
je
movsl
in
mov
fcomi
mov
mov
mov
sti
aas
shr
sbb
inc
pop
test
inc
mov
into
in
push
loop
jbe
xchg
ljmp
hlt
pusha
jmp
icebp
mov
jp
cs
cltd
and
inc
cwtl
repz
cmp
pop
lods
jge
adc
mov
mov
clc
movsb
iret
repnz
sti
push
cmpsb
sbb
loop
pop
insl
stos
bound
cs
add
test
cmp
sub
stc
out
inc
xor
movsl
dec
jg
fs
cmp
sub
mov
mov
pushf
cwtl
movl
jmp
mov
in
mov
out
es
mov
push
or
dec
xchg
jb
cmp
div
lret
inc
pop
sbb
fldl
mov
mov
imull
scas
xchg
xchg
jge
mov
inc
sub
mov
push
sti
lret
xchg
adc
bound
add
imul
cmp
sbb
add
data16
dec
ja
push
lret
divb
pushaw
in
rcrl
into
mov
mov
sub
lods
mov
pop
pop
mov
inc
lock
cmc
mov
jnp
cs
outsl
mov
arpl
pusha
fsubrl
xorl
sarl
xchg
dec
adcb
repnz
xchg
adc
lcall
pop
stos
iret
push
icebp
sub
fimuls
inc
mov
jp
mov
enter
xor
out
mov
call
fisubrl
push
imul
sbb
movsb
lea
inc
dec
xchg
stc
cmc
push
in
dec
dec
int
nop
ficompl
mov
daa
jne
loopne
test
mov
les
xor
icebp
add
jmp
xor
adc
add
mov
or
mov
cmp
push
lcall
movl
jmp
out
cwtl
iret
ror
aaa
mov
dec
sar
mov
lret
cmp
xor
cmp
negb
jp
push
and
mov
jmp
sbb
pushf
aam
jecxz
adc
lock
scas
sbb
and
jno
jno
fcompl
dec
lcall
mov
jae
or
hlt
mov
les
ja
scas
test
inc
push
jge
insb
pushf
and
jnp
loope
mov
jecxz
ja
sub
imul
stc
xchg
push
cmpb
out
and
push
sbb
ds
or
jbe
insb
ss
jb
push
cltd
arpl
push
dec
jbe
push
lock
xor
subb
pop
mov
mov
bound
int
push
sbb
scas
insl
das
or
adc
icebp
pushf
out
pushf
dec
mov
or
mov
cmp
xor
push
daa
mov
xor
adc
mov
imul
js
testl
sbb
ret
incl
stos
sub
jmp
ja,pn
or
mov
addr16
int
daa
xchg
add
mov
pusha
xchg
push
in
mulb
fsub
cltd
ss
lods
setb
xor
xor
lods
jo
out
mov
imul
cmp
cmc
sub
fisubl
imul
or
xchg
xor
pop
pop
int
or
mov
clc
jl
mov
push
shll
mov
insl
pop
sahf
and
js
xor
lods
xor
dec
jns
ja
lahf
mov
jl
arpl
push
jle
loope
push
cmp
test
ret
or
or
aaa
or
insl
mov
pop
lahf
in
push
repz
and
roll
repz
mov
xor
inc
cmp
test
clc
ljmp
enter
dec
mov
jbe
sub
into
lods
pmuludq
fmull
xchg
lea
imul
hlt
das
mov
adc
sub
inc
in
test
xor
shrl
push
mov
mov
leave
addb
and
jne
adcl
arpl
movsb
iret
jbe
xor
and
jg
adc
incl
out
inc
mov
xchg
jg
mov
scas
pop
rorb
xchg
jl
xchg
cmp
push
mov
push
and
into
lock
sbb
notl
test
cwtl
lcall
lret
or
mov
jne
push
insb
sbb
fisubrs
popf
xor
mov
rcr
and
inc
mov
daa
sub
hlt
inc
mov
dec
shrb
adc
sbb
in
xchg
ret
test
push
imul
dec
adc
cmpsl
popa
mov
mov
imull
push
push
pop
xor
insl
sub
lods
enter
imul
popa
int
stos
push
fistpl
in
sub
mov
push
imul
push
mov
sahf
add
jbe
stos
fbstp
orl
into
or
outsb
add
mov
pop
xor
pop
push
lahf
sarb
repz
sub
daa
cmp
ret
rcl
shrb
loopne
mov
xchg
insl
iret
fldcw
imul
insb
shrl
mov
mov
push
das
push
mov
ds
xor
jp
sub
dec
lcall
leave
push
fs
adc
pushf
push
fstpl
cs
mov
xlat
mov
mov
jns
mov
in
imul
js
mov
jmp
arpl
or
cmpsb
xchg
adc
fs
mov
pop
sub
pop
mov
push
fnstsw
pop
insb
mov
aam
pop
xor
mov
xchg
adc
inc
inc
dec
lret
or
push
inc
xchg
outsl
push
sti
rcrl
imul
cs
leave
cmp
daa
pop
push
or
ss
cmpb
add
decl
insb
xchg
repz
adc
scas
adc
cmc
jne
mov
add
inc
jp
andl
addr16
jne
rcrb
rcll
in
mov
jp
or
aad
sahf
daa
ret
jne
repnz
mov
sbbl
mov
sbb
push
xchg
loope
dec
jo
push
sub
call
mull
adc
adc
out
lret
adc
pop
jnp
dec
add
xor
daa
loop
lods
ljmp
icebp
subb
push
mulb
and
stc
int3
mov
mov
mov
mov
sahf
daa
jge
loopne
jnp
pusha
fisubl
mov
dec
fmulp
cltd
cmp
jnp
in
dec
or
sahf
adc
cmp
mov
negl
in
cmp
pop
push
cli
sbb
es
in
sbb
or
mov
push
push
xor
cmp
sbb
push
xor
cld
out
data16
dec
cmp
rolb
add
or
imul
xor
fwait
rcr
addb
insl
or
add
mov
std
xchg
cmp
xchg
lods
lret
fs
xor
push
xchg
in
stc
fs
mov
and
xchg
xchg
les
xchg
js
push
cmp
shll
adc
or
mov
sbb
dec
fstl
adc
dec
movsb
movsl
pop
cmpsb
jo
mov
dec
test
lods
add
xor
jmp
pop
sarl
mov
nop
cli
adc
inc
xchg
gs
dec
xor
cs
ja
jl
test
mov
ret
dec
fbstp
mov
ret
in
and
push
inc
or
pop
mov
test
out
jle
addr16
scas
cmpsl
dec
dec
sub
sbb
hlt
xor
ficoml
ljmp
outsb
lahf
dec
xlat
xchg
std
sub
xchg
jo
ret
jno
lret
pop
pushf
dec
xlat
push
or
inc
scas
or
dec
lds
mov
inc
push
hlt
xor
adc
xor
xchg
jo
pushf
pop
push
and
push
lods
lahf
popa
push
xor
jne
lea
data16
cmpl
stos
ret
fnstsw
dec
clc
jae
mov
bound
and
mov
pop
jge
sbb
scas
in
cmc
mov
into
pop
fwait
insl
fcomps
dec
scas
fstl
xor
bound
push
mov
stos
mov
jle
inc
aaa
lea
js
dec
sub
mov
add
jo
mov
cmp
insl
shll
mov
shlb
push
jno
out
cld
notb
adc
or
in
fs
adc
push
icebp
stos
mov
mov
xchg
push
into
mov
push
nop
arpl
or
and
fdivr
pusha
shl
or
test
mov
repnz
push
sbb
insb
sub
jecxz
add
cltd
das
mov
push
cwtl
cwtl
push
xor
or
es
pop
popf
adc
std
addr16
insb
dec
push
testb
xchg
arpl
adc
lock
mov
mov
sub
loopne
nop
mov
popf
dec
stos
out
cmpsb
sub
jl
jbe
cltd
add
addb
push
jb
cwtl
mov
sar
pop
inc
mov
decl
movsb
aas
idivb
add
fistps
xchg
cmp
pop
mov
jno
or
aad
jne
adc
push
shlb
jae
loopne
dec
mov
jne
sub
cmp
push
adc
add
cmc
jecxz
loope
je
xchg
subb
mov
clc
or
xchg
jle
pop
nop
loop
xchg
pop
jmp
bound
sub
enter
jno
xchg
mov
popf
sbbl
inc
dec
out
mov
mov
fs
ret
shll
outsb
cmp
rcrl
das
test
sbb
mov
iret
jo
sub
je
lahf
pop
xchg
mov
repz
in
mov
out
add
jmp
lods
clc
andl
into
dec
jle
dec
dec
mov
push
fwait
pop
xor
pop
push
into
push
int3
pop
fisttpl
test
add
rcrl
insl
dec
in
jmp
sbb
mulb
scas
int3
and
scas
add
or
pop
pop
mov
movb
dec
xchg
mov
xchg
sub
pop
sub
push
cmp
xchg
dec
loop
insl
popa
popa
xor
ja
ret
rolb
push
mov
stc
ljmp
add
mov
mov
cltd
scas
lcall
cmp
lods
out
xchg
enter
pop
js
cli
out
dec
mov
int3
hlt
dec
sub
das
subl
ja
pop
rcrb
jg
xor
data16
mov
dec
es
xor
inc
call
mov
les
add
and
test
jmp
js
das
subb
repnz
ljmp
cmp
push
scas
fwait
ss
xchg
fbstp
dec
test
stc
jecxz
outsb
lea
lret
cwtd
loope
jo
pop
dec
mov
jns
or
das
sbb
jne
pop
jmp
cmpsl
call
jo
pushf
roll
inc
test
cmp
lcall
dec
stos
push
in
idivl
inc
insl
orl
xor
ret
xchg
inc
mov
lods
cltd
adc
sbb
pop
insb
ja
int3
xchg
outsb
loop
cs
xor
xchg
fsubl
mov
lock
mov
out
mov
jg
pop
andw
or
shll
pop
stc
cs
in
ror
popf
sahf
xchg
sbb
inc
insb
adc
js
out
push
mov
jno
hlt
insb
jne
lret
push
adc
jg
gs
mov
xor
lea
push
xchg
ret
jmp
adc
jg
outsb
nop
icebp
cmp
gs
fdivrp
push
idiv
inc
mov
add
push
lret
cmp
dec
adc
fisubs
lahf
sub
inc
sbbl
addr16
in
setnp
mov
enter
mov
jbe
pop
dec
stos
insl
cmpsb
mov
mov
mov
xor
in
loop
mov
stos
xchg
loopne
or
out
sub
sub
push
lret
sbb
inc
lahf
mov
xor
mov
in
or
adc
movsl
push
xchg
mov
lods
popa
xor
mov
cmc
mov
clc
fstpl
test
rclb
inc
repnz
js
sub
in
dec
stos
mov
pop
dec
insl
or
jno
lock
mov
push
cwtl
loop
mov
cwtl
ja
into
enter
fcompl
push
lock
aas
stos
inc
sahf
hlt
mov
in
inc
popf
sub
or
push
test
cs
ror
xchg
pusha
ds
lock
pusha
dec
data16
mov
fstpt
in
shl
or
nop
dec
repz
call
pusha
enter
push
scas
pop
dec
mov
mov
pushf
rolb
gs
pop
push
sub
lea
loopne
xchg
sbb
js
or
out
cmpsb
pop
mov
xor
push
mov
mov
insl
movsb
ret
cmp
or
jle
xor
lods
rorb
call
cmp
ds
inc
pop
jle
sarb
xchg
push
pop
jp
fsubs
out
mov
mov
shr
xor
or
adc
fdivs
je
lahf
aam
cli
add
sub
fldcw
cmp
pop
cmp
lods
adc
mov
rcrl
aad
mov
jno
mov
dec
fisttps
ret
push
mov
jmp
dec
jbe
jne
scas
push
pop
mov
push
mov
adc
push
mov
sub
shl
out
icebp
out
cmp
add
mov
sub
dec
js
std
and
in
outsl
fcomi
out
cltd
loopne
sub
xor
mov
sarl
in
inc
or
mov
or
pop
test
fcomps
sub
push
mov
adc
and
dec
in
les
out
jle
jae
push
and
jmp
popf
xor
mov
addb
and
sub
pop
out
or
pop
mov
popl
shl
aam
xor
daa
cmpsb
stos
dec
scas
xor
in
dec
mov
js
pushf
scas
sub
and
sarb
jmp
push
test
stos
movsl
ss
cmp
outsl
push
insb
stc
add
lret
fsts
arpl
or
inc
adc
pop
jle
into
call
cmpsb
ja
dec
cmpsl
dec
jb
xchg
fsubrs
mov
push
nop
jb
sbb
inc
add
mov
paddq
or
std
ret
test
call
inc
leave
hlt
mov
test
dec
jl
insb
iret
and
lahf
inc
mov
jne
sub
into
in
sub
and
rcrb
leave
stos
inc
fsts
lds
mov
xor
pop
in
movsl
fwait
sbb
sti
gs
jns
or
pop
xor
jle
outsl
out
loopne
xor
and
mov
mov
stos
cmc
nop
sub
cmp
push
lret
lahf
mov
cld
sub
in
fimull
push
add
mov
mov
sub
mov
mov
rcrl
out
mov
pop
add
add
mov
test
cmc
xchg
xchg
pop
lea
jge
jmp
sub
pop
xchg
push
test
data16
dec
dec
insb
and
cmc
pop
xor
jle
mov
dec
fsubrp
hlt
insl
mov
jmp
push
sbb
les
leave
pop
popa
xchg
fnclex
jae
dec
fldcw
adc
cmp
stc
and
inc
in
mov
pushf
sub
push
or
xor
insb
push
sub
push
stos
mov
push
lods
arpl
test
in
mov
popf
fwait
sahf
outsl
push
popa
dec
out
or
adc
addl
pushf
aaa
insl
sbb
aad
push
icebp
scas
mov
cmc
pusha
inc
jb
pop
enter
sub
lret
ljmp
or
loopne
test
xor
add
pop
cmp
inc
jmp
sub
jbe
jge
sub
xchg
leave
xor
shlb
or
es
and
das
xchg
mov
out
bound
cmp
cmp
lods
xlat
aaa
mov
add
dec
and
mov
cwtl
push
adc
dec
das
lds
repz
adc
stos
adc
jp
out
jb
push
pop
daa
sbb
sahf
dec
aas
jo
fimuls
test
push
ficomps
imul
lods
sarb
mov
fsubrp
movsb
inc
cmp
adc
sub
xor
lahf
sub
insl
enter
cwtl
mov
movsb
xchg
sub
aam
pop
cmovae
in
mov
outsl
adc
repz
test
mov
push
in
mov
dec
cs
scas
push
pop
int3
sbbb
or
ljmp
scas
mov
mov
mov
imul
jge
jmp
xlat
test
shlb
xchg
mov
dec
inc
mov
cmp
and
mov
and
out
popa
jg
sub
pushf
in
fcmove
push
js
popf
xor
out
xchg
cmp
xchg
cld
sti
int3
pop
xor
xor
fadds
shrb
js
mov
cmpsb
in
into
test
sbbl
jne
inc
xchg
fstpl
stc
dec
mov
xchg
add
xchg
push
pop
in
loopne
flds
fwait
int
mov
cs
adc
sbb
xchg
imul
lea
enter
inc
fs
fcmovnbe
sbb
icebp
call
push
jnp
testb
sti
repz
xchg
lret
ret
lock
mov
dec
or
jl
out
orb
pop
dec
pop
movsb
pop
lcall
subl
pop
out
std
das
or
pop
dec
cmp
lcall
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
sarl
mov
sbb
sbb
repnz
pop
testb
das
cld
cs
imul
xor
mov
xchg
adc
orb
adc
aas
push
pusha
xor
aad
sub
adc
icebp
inc
add
call
stc
push
cmp
lods
bound
adc
ficoms
mov
or
dec
into
mov
and
pop
push
xor
add
outsl
movsl
jge
outsb
jp
or
or
mov
or
push
add
in
xchg
jno
inc
or
jmp
loope
daa
jg
inc
in
push
adc
or
movsb
xor
stos
inc
scas
add
dec
pushl
imul
xchg
leave
in
repz
cmp
movsl
or
lret
lea
aam
imul
jle
repz
inc
sbbl
push
dec
out
scas
cmp
mov
and
push
cmp
ja
cmpsb
lds
testl
int3
test
cmpsb
push
daa
dec
jg
pop
loop
test
inc
loop
stc
sahf
fisubrs
and
dec
cmc
out
enter
and
add
nop
add
test
adc
push
jne
adc
inc
mov
add
sbb
outsb
cmc
lahf
or
cmp
je
mull
jne
test
ror
lds
shrb
xchg
jo
cmpsb
xor
or
xlat
dec
mov
sbb
and
xchg
popa
jmp
nop
inc
repnz
xchg
hlt
sub
lahf
xor
jmp
out
lret
adc
push
in
aaa
inc
mov
loope
and
xchg
add
pushf
jl
je
jle
xchg
pop
popf
pop
push
in
sbb
cmpsl
pop
jmp
mov
jbe
cwtl
aas
adc
out
xchg
mov
lret
ja
push
lods
int3
mov
cmc
rcrl
dec
xor
adc
iret
lea
fimull
mov
daa
mov
push
in
sbb
in
int3
mov
clc
push
pop
lahf
sub
lds
and
xchg
mov
ret
movsb
or
filds
loopne
cmpl
mov
sbb
fistpll
fcoms
jne
sbbl
add
jno
daa
push
leave
add
leave
cmp
push
mov
insb
sbb
jne
mov
xchg
rorb
jl
inc
aas
and
mov
addb
cmp
jno
jecxz
movsb
xchg
loopne
or
and
jae
out
or
cmp
mov
add
fwait
lret
in
testb
or
lea
fisttps
jle
adc
not
mov
cwtl
nop
in
xor
dec
in
rol
stc
flds
add
xchg
stos
cwtl
and
les
repnz
sbb
mov
in
xor
icebp
mov
push
repnz
shrb
and
iret
and
add
pop
cmpsl
das
add
push
sbb
out
and
cmp
xor
js
ja
ljmp
xor
add
jbe
jb
clc
xor
add
jl
test
push
imul
jecxz
jp
cld
jle
mov
mov
add
rcr
das
inc
inc
cmp
outsl
fimuls
fstl
aas
fyl2xp1
inc
or
add
push
pop
cltd
cmp
jge
push
insl
push
dec
push
pop
adc
cmp
jno
pop
sahf
mov
push
jbe
sarb
pushf
ja
pop
xchg
and
and
lea
cmpsl
push
xchg
mov
mov
jmp
test
daa
sbb
scas
xor
movsb
add
xchg
fidivrl
pop
mov
les
and
and
or
jb
aad
test
mov
sub
dec
imul
mov
sbb
ss
inc
mov
adc
cmp
add
push
or
sbb
pop
std
mov
xchg
push
jno
jmp
lds
fcompl
and
xor
repnz
imul
inc
sbb
jbe
push
mov
fidivl
mov
das
cmpsl
test
incl
jp
xlat
lahf
sbbb
sar
loop
xchg
jns
cmp
sbb
mov
jne
jbe
inc
mov
dec
and
push
and
jae
lcall
mov
into
shll
pop
xchg
sbb
leave
pop
sahf
outsl
sqrtps
xchg
jae
mov
orps
iret
fmulp
jne
les
addb
or
mov
cmp
jp
mov
dec
subb
loope
inc
sbb
sub
jecxz
cli
xchg
sub
push
jge
xor
cmpsl
mov
ja
pop
sbb
and
jnp
push
cli
stc
hlt
cmp
test
stos
inc
add
je
aas
jbe
arpl
subl
enter
and
pop
int3
dec
aaa
repnz
push
mov
clc
push
outsl
sahf
faddl
lret
cli
arpl
mov
std
mov
out
out
xchg
ljmp
outsb
sub
adc
loopne
sub
mov
pusha
jb
or
mov
ss
add
pop
sub
lea
hlt
fmull
pushf
mov
cli
add
sti
jo
xchg
xor
mov
cmp
mov
sti
pop
xlat
mov
stos
dec
mov
test
jl
lea
push
and
gs
sub
sbb
sub
dec
dec
xchg
dec
jbe
jle
lods
mov
addr16
dec
push
out
push
aaa
jl
add
sbb
mov
xchg
cmp
dec
aad
cmpsb
insb
xchg
or
or
in
dec
int
imul
mov
jb
hlt
xchg
xlat
fsubl
lret
push
mov
mov
inc
and
das
dec
and
insl
divl
hlt
push
test
loopne
adc
adc
outsb
push
stc
fimuls
sub
inc
aad
data16
pop
mov
inc
jae
jne
jne
xchg
dec
fsubr
or
dec
mull
imul
hlt
and
xor
popa
sbb
stc
sub
das
aaa
jg
mov
and
sarl
cmp
push
pushf
inc
leave
or
arpl
and
lcall
aas
xchg
popa
xchg
mov
inc
push
testl
mov
sarb
stc
roll
inc
fcmovnu
orl
sub
mov
nop
inc
xchg
mov
lds
xlat
lea
stos
jbe,pt
xor
or
mov
jnp
or
and
and
mov
out
xchg
dec
shrl
adc
jg
bound
mov
test
xchg
popa
or
sbb
mov
jne
test
ret
insb
inc
stos
cld
rolb
inc
jnp
mov
rcll
aas
or
out
push
push
xor
jl
iret
lods
or
repnz
adc
jge
leave
jp
or
push
sub
jg
xor
mov
dec
inc
insb
roll
dec
xor
loope
loop
cmp
dec
out
out
roll
sbb
out
mov
ror
or
and
sbb
push
add
sub
push
xchg
xor
xor
xchg
or
out
arpl
jmp
add
lret
sub
iret
sarb
dec
jns
jp
or
orl
popa
outsl
and
pusha
push
stos
movsb
aam
int3
je
cmpsb
ror
rclb
mov
and
data16
cli
imul
dec
data16
sbb
mov
mov
cmp
int3
dec
cmp
cmp
lahf
loopne
daa
enter
loope
sub
adc
mov
in
outsl
rcl
dec
push
mov
fstpl
cwtl
mov
sub
xchg
aam
cmpsl
sti
fiaddl
mov
nop
inc
in
mov
fmul
adc
pop
fsubl
xorl
cmpsl
es
xor
or
imul
test
or
cmp
dec
lret
pop
adcb
pop
jno
jnp
mov
dec
dec
dec
mov
lcall
imul
or
test
sub
incb
dec
loop
outsl
lds
add
stos
mov
rclb
jbe
aam
cmp
pop
hlt
loopne
mov
mov
das
test
pushf
add
ds
insl
inc
pop
pop
mov
push
cmp
fistpll
bound
daa
mov
ljmp
bound
iret
push
adc
add
lahf
test
xlat
stos
int
mov
mov
test
adc
bound
roll
int3
cmp
cmp
cmp
lcall
pop
add
inc
jnp
icebp
ljmp
push
lret
mov
out
cmp
and
push
jl,pt
ud2
sub
adc
enter
adc
cld
cmp
cs
push
pop
inc
lea
jne
mov
rclb
sbb
inc
inc
mov
mov
and
cmp
arpl
fsubrs
sbb
mov
pusha
daa
outsl
std
mov
pushf
mov
pop
ss
sahf
xchg
push
pop
mov
int3
rclb
lds
sub
scas
or
inc
arpl
push
xlat
jns
sbb
outsl
jmp
sahf
fs
lods
lods
and
xchg
in
shlb
cltd
stos
adcl
inc
mov
imul
add
cmc
xchg
xchg
adcl
push
and
fildll
out
cmp
neg
pusha
jle
pushf
xchg
pop
xchg
inc
dec
scas
jl
push
push
push
test
test
dec
pop
xor
jno
jl
ja
rcrl
cli
push
pop
dec
shll
push
pop
mov
shll
insl
stc
xchg
cmpsb
push
xchg
insb
fdivr
pop
outsl
pop
xchg
push
jb
fnstcw
dec
ret
movsl
mov
arpl
cmpsl
xor
movsb
sub
rcr
or
push
rcrb
and
addr16
sbb
mov
push
ficompl
cmpsb
adcb
in
lret
sarb
lea
rclb
andl
inc
leave
addr16
ffreep
gs
mov
mov
mov
repz
shlb
xchg
cmpb
add
fdivs
cmp
mov
lret
push
fxtract
cmp
xor
sub
sub
and
pusha
xor
sub
or
imul
mov
outsb
fwait
test
add
dec
jae
imul
add
dec
dec
xchg
rolb
lds
shr
leave
add
fildll
out
in
loopne
ret
mov
lahf
cmovle
pop
pop
push
push
mov
pop
inc
imul
adc
sub
test
cmp
add
inc
popf
and
stos
sti
cld
jecxz
mov
gs
mov
xor
or
adc
xchg
jl
push
and
adc
je
ljmp
fwait
std
adc
int3
stos
out
ljmp
aas
pop
jge
sub
loope
jnp
pushf
cs
mov
cmp
add
addl
pop
inc
dec
pop
orl
jo
push
mov
xchg
aad
cmp
and
movsl
fdiv
or
fsub
pushf
mov
xchg
pop
fld
sbb
adc
outsb
rolb
sbb
fadds
adc
or
mov
ret
insl
enter
mov
and
jb
jg
jge
leave
mov
fistps
stos
mov
addr16
imul
fnstsw
pop
sub
aad
pop
xchg
lock
arpl
data16
fcompl
mov
lock
daa
gs
cmp
mov
sub
int
cmp
bound
push
xchg
add
dec
in
jo
jno
cmp
sub
mov
pop
push
fsts
test
adc
out
fsubr
xor
and
outsl
jp
outsb
loop
dec
inc
loop
xlat
fimuls
fs
jae
add
jae
mov
lret
push
in
in
inc
lods
scas
sub
mov
sub
sbb
int3
push
push
into
cli
pop
movsl
das
shrb
insb
addr16
lea
adc
dec
mov
push
jg
mov
jo
leave
frstor
je
into
adc
shlb
mov
xor
add
aad
fistpll
mov
jno
push
ljmp
ds
rcl
adc
xlat
ja
or
sbbl
mov
inc
leave
sub
sbb
pop
jae
pop
nop
mov
popa
mov
mov
push
pushf
mov
cltd
jne
into
dec
jp
inc
movsl
fdiv
dec
jge
pop
add
mov
pop
push
sahf
cwtl
pop
ljmp
sarb
pop
jl
movsl
add
in
arpl
lea
aam
inc
je
and
xchg
dec
push
ret
repz
push
lcall
stc
in
adc
pop
pop
aad
es
lock
dec
stos
fidivrl
xchg
mov
push
xchg
mov
ja
out
inc
mov
popa
cld
into
aad
push
scas
in
adc
cmpsb
xor
ret
outsb
push
sbb
jno
mov
shll
pop
jne
fcoms
jne
xchg
xchg
xchg
dec
imul
hlt
enter
and
inc
mov
adc
dec
xor
test
rorl
inc
dec
ret
ljmp
push
inc
lods
inc
push
push
mov
jno
adc
push
mov
add
xchg
test
movsb
dec
repnz
cwtl
shlb
push
jg
add
sbb
push
sbb
mov
ficomps
and
fmull
adc
jbe
inc
mov
loope
inc
adc
std
xor
pop
add
adc
aas
jmp
aaa
loop
stos
outsb
int3
mov
jp
test
out
lods
inc
fdivrp
movl
sbb
xrelease
je
pop
sbb
mov
mov
push
cmp
cs
iret
js
jns
loopne
mov
sti
aam
lock
cmp
cmp
inc
rcll
andl
cmp
dec
push
xchg
mov
lret
sti
test
fiadds
pop
mov
inc
nop
rorl
repnz
cmp
enter
or
shl
sarb
or
cmc
push
mov
bound
xchg
sbb
inc
inc
jmp
add
enter
mov
add
xchg
js
mov
pop
sahf
in
addr16
je
iret
pop
ret
sub
sub
jno
fisttpl
test
fmulp
lea
lds
iret
xchg
sbb
data16
jecxz
ds
ret
fdivs
push
cmp
push
lahf
sbbb
loop
stos
and
add
loop
jno
xorb
mov
mov
adc
mov
test
nop
pop
popa
dec
pop
inc
mov
mov
push
jmp
cmpsl
sti
pop
stc
loop
push
xorb
pop
mov
fimuls
aam
rol
mov
and
std
cs
nop
dec
pusha
test
out
or
xor
je
cwtl
pop
clc
push
xor
scas
mov
aas
lret
mov
inc
rorb
cmp
fwait
pop
inc
data16
mov
mov
loopne
sbb
jbe
cwtl
scas
xchg
in
insb
aas
stos
jl
mov
pop
fsubrs
inc
pop
movsl
js
jns
gs
mov
push
jle
dec
jecxz
adc
ret
add
addr16
jmp
ja
xchg
mov
pop
les
push
shlb
mov
sti
adc
push
and
iret
jl
xchg
sub
cmp
inc
pusha
inc
mov
sub
fchs
jecxz
aad
lea
int3
mov
pop
in
pop
mov
push
sbb
int
pop
add
sbb
fistpl
mov
out
inc
jl,pn
and
decl
mov
ljmp
push
int3
loope
sub
mov
mov
pop
fldl
aam
cmp
enter
dec
and
out
imul
imul
xor
push
xchg
and
mov
and
push
shl
xlat
jno
adc
push
in
aas
dec
loop
pop
mov
sub
daa
push
adc
fdivrs
push
insl
mov
jle
adc
or
mov
fisubrs
cmp
popf
bound
js
insb
pop
cmp
jmp
dec
addl
mov
adc
sbb
fidivrs
xor
mov
jnp
mov
cltd
hlt
outsl
pop
ret
mov
xor
mov
and
or
notb
jne
cmpsb
inc
ret
cmp
mov
pop
movsb
sbb
scas
lcall
or
jb
call
cmc
add
jne
call
push
cmc
cmpsb
aas
sti
xchg
pop
push
fstpl
mov
daa
mov
xor
sahf
fcmove
inc
scas
jle
and
xchg
pusha
xor
outsl
mov
lods
xchg
or
adc
pushf
dec
pop
int
in
mov
in
xor
aaa
sbb
push
or
mov
pop
pop
movsl
push
lret
int
in
arpl
dec
lods
pop
enter
cs
in
mov
cltd
test
xchg
inc
mov
mov
mov
sbb
cwtl
jp
imul
inc
in
cmp
out
cli
lret
mov
scas
cli
or
push
faddl
imul
dec
sti
in
push
loop
stos
sbb
push
mov
inc
mov
cltd
adc
mov
adc
xor
xchg
jae
enter
add
into
fistps
leave
or
test
pop
dec
mov
xchg
adc
cmp
xor
fistl
cld
das
lcall
jecxz
sub
ficoms
xlat
cmp
movaps
repz
outsl
sti
scas
fsubs
fisttps
dec
jecxz
pop
mov
push
adc
insb
adc
jbe
call
shll
jbe
pop
repnz
les
sub
jb
sub
popf
scas
loope
cmp
dec
fwait
mov
fisttpl
mov
mov
and
test
or
in
push
mov
scas
icebp
push
nop
and
mov
xor
jmp
sahf
jg
sarb
frstor
std
jnp
aad
add
popa
sbb
dec
pushf
out
xchg
les
xchg
lret
mull
rcll
xchg
mov
call
leave
jbe
jmp
dec
jo
add
or
mov
dec
jns
mov
repz
push
mov
int
jnp
xchg
sub
ljmp
stos
repz
and
push
cmpsb
sbb
xchg
ljmp
call
dec
fnsave
mov
inc
push
cwtl
ja
mov
push
and
inc
sub
shll
lea
or
xor
mov
shll
fstl
loope
sbb
les
add
pop
xor
push
test
lret
outsl
lds
jnp,pt
jae
jbe
mov
nop
shlb
jnp
mov
or
xor
stc
cltd
add
adc
sub
add
xlat
push
mov
pushf
call
jne
inc
mov
adcl
xchg
pop
or
pop
fdivs
xor
test
dec
dec
dec
mov
and
push
sbb
js
push
jmp
pop
pop
and
mov
inc
xlat
aad
popf
push
mov
mov
adc
pop
mov
push
or
cli
jmp
xor
pop
push
js
xchg
sub
aaa
rorb
jns
jp
cmc
sub
bound
jae
sub
sbb
mov
push
and
sub
mov
je
and
push
mov
jns
je
out
or
scas
push
cmp
mov
pushf
pop
sub
jg
pop
mov
adc
enter
adc
dec
adc
and
inc
pop
in
out
rclb
insb
clc
lret
xor
pop
cmp
sub
jmp
testb
pop
inc
add
sub
jnp
sti
cmp
push
out
jp
cmp
repz
pushf
aam
call
imul
or
mov
mov
mov
or
mov
aad
xchg
pop
into
lea
cmc
out
add
scas
jg
dec
ret
setae
add
sti
pop
rcll
push
mov
adc
stos
rcll
push
push
xor
cli
sub
clc
pop
orb
lea
sbb
scas
imul
inc
mov
or
jge
mov
lods
cmp
sbb
sub
pop
mov
into
dec
cmp
stc
xchg
adc
testl
mov
call
push
rcrb
negb
insl
dec
xchg
jo
mov
sub
inc
es
enter
clc
lock
rolb
push
rcll
or
ja
popf
push
out
shll
xor
add
fadds
push
push
std
push
and
les
jp
jo
data16
mov
xlat
mov
add
jnp
pop
shlb
or
lahf
lret
cwtl
mov
add
pop
mov
pop
pusha
adc
iret
shl
dec
xchg
jg
adc
xor
daa
adc
arpl
cmpsl
xor
in
jmp
jecxz
insb
mov
lds
test
xchg
aad
roll
mov
aad
push
xchg
in
movsb
outsl
sbbl
inc
lahf
inc
push
scas
hlt
ficompl
pop
bound
nop
mov
cwtl
cmp
cmp
jnp
pop
push
xorl
lahf
jnp
les
test
cld
mov
sub
pop
adc
sub
das
nop
jl
stos
clc
push
or
loop
jno
jg
int3
sbb
adc
sti
hlt
dec
mov
add
push
mov
movsbl
inc
sbb
push
sub
repz
or
cmpsb
pop
adc
ffreep
xchg
add
inc
and
sub
aam
dec
push
adcl
push
sbb
scas
test
aad
xor
mov
inc
aam
in
adcb
pop
lock
je
gs
pop
xor
popa
fbstp
cs
aaa
sbb
testb
or
cmc
cmp
dec
jns
pop
pop
mov
pop
stos
push
cmpsl
pop
sbb
mov
and
stc
test
mov
fld
dec
ret
dec
dec
repnz
ret
add
mov
pusha
mov
inc
fwait
pop
incl
mov
out
fsub
test
cmp
and
aad
jno
dec
mov
mov
dec
dec
test
mov
cmc
cmp
scas
push
pop
mov
mov
cmpsl
sbb
push
push
shlb
in
ret
fildll
mov
stos
ja
outsl
aad
addb
inc
mov
std
rcll
mov
enter
xchg
sbb
push
push
mov
or
loope
fdivrs
dec
push
gs
push
and
xchg
xchg
xlat
mov
fiadds
push
sbb
dec
lock
data16
inc
sbbb
dec
cmp
sarb
sbb
in
jne
mov
aas
in
enter
adc
imul
dec
loopne
pop
or
cmp
pop
sub
shrl
push
loope
iret
in
out
shrb
push
repz
mov
fidivrl
jns
mov
repnz
pop
mov
pop
sbb
push
test
xorl
mov
or
outsb
fisubs
sbb
out
xchg
test
jo
addl
aas
push
xchg
ret
cmp
fstpt
or
sub
and
imul
outsb
pop
outsb
fwait
test
out
pop
inc
xchg
push
cwtl
das
les
xlat
lret
lods
mov
aas
xor
test
ret
pushf
jle
mov
jnp
scas
shlb
movsb
jno
imul
add
sti
loope
jbe
imulb
shll
lret
jge
jecxz
dec
mov
push
ss
xlat
inc
add
add
out
cmp
or
jno
sub
mov
adc
mov
inc
scas
sbb
add
mov
mov
mov
xorb
xchg
or
test
pop
pop
and
pop
mov
pop
enter
xlat
loop
jne
addr16
jmp
sbb
std
in
out
xchg
xchg
fists
fistl
cwtl
push
pop
push
out
push
mov
add
mov
pop
icebp
fdivl
ja
add
test
pop
jo
mov
in
adc
repz
jb
out
cmc
add
pop
jl
mov
stos
inc
jbe
push
nop
cwtl
dec
mov
in
add
imul
xor
je
lods
jp
mov
cmp
mov
and
popa
arpl
xorb
inc
imul
imul
sbb
push
leave
les
enter
das
lock
pop
inc
or
push
add
mov
jno
fldt
jne
cmp
pusha
push
mov
shl
cmp
mov
aad
mov
sbb
repz
dec
int
mov
mov
add
add
popf
pop
aad
icebp
ss
xchg
stc
mov
nop
sub
push
mul
mov
out
daa
jg
call
adc
iret
out
or
adc
cmpsl
adc
mov
repz
cmp
leave
mov
and
mov
sub
bound
jne
push
mov
sbb
sub
dec
iret
sub
in
pop
lods
jno
andl
add
test
xor
jmp
vmulps
jb
xor
lcall
roll
cmp
in
pop
sub
sub
or
fsubrs
pop
push
imul
xchg
mov
xchg
xchg
or
mov
repnz
mov
notb
adc
fistpll
das
fsubrl
faddp
push
xchg
mov
jne
jne
cmp
fisubs
ret
sub
or
pop
mov
push
test
inc
adc
and
mov
push
addr16
push
imul
and
out
cmpsb
ljmp
test
in
fmulp
mov
jno
dec
mov
pop
aad
outsb
pop
jne
scas
add
cltd
xlat
iret
dec
into
icebp
inc
in
mov
adc
outsl
push
stos
shrl
fidivl
push
lods
sbb
imul
fmuls
adc
rorb
scas
pop
cmc
bound
outsb
fs
lret
ds
aas
outsl
decl
mov
sbb
mov
mov
rclb
aas
lahf
cmpsb
cmp
lret
mov
scas
dec
mov
insb
mov
hlt
pop
mov
cld
repnz
cmp
cld
fs
xchg
cmp
shlb
lea
nop
jp
out
push
je
sub
je
jg
xchg
add
xor
adc
cmp
jl
lahf
mov
testb
mov
cmp
std
mov
jp
icebp
sub
arpl
cmpsl
sbb
dec
mov
adcb
mov
or
loop
mov
and
sub
xchg
fwait
dec
jmp
mov
lahf
sbb
loop
outsb
sti
xchg
in
push
daa
pop
push
nopl
mov
ljmp
add
sbb
cmp
in
pushf
loope
repz
jns
nop
popf
jnp
aas
fstp
punpckhbw
leave
sub
xchg
call
sub
rep
lock
ret
lcall
push
mov
repnz
mov
cmpsl
or
and
fs
cltd
push
test
cmpsl
adc
xor
add
aad
adc
repnz
inc
aas
orb
jbe
xor
or
js
lock
inc
fisubs
cmc
xor
inc
jno
cmc
jns
mov
push
in
mov
sahf
aad
adc
mov
jp
pop
lea
inc
aas
dec
outsl
push
jns
hlt
ja
and
xor
lock
pop
fisubs
sub
jne
ffree
sub
rcll
arpl
add
pop
sub
dec
dec
xchg
data16
or
out
mov
push
cmp
jge
mov
in
bound
lea
mov
mulb
mov
mov
or
outsl
fnstcw
flds
xchg
push
push
lods
xchg
pop
push
adc
mov
sbb
jo
pushf
pop
push
fcoml
lods
in
jl
cmpb
rclb
popf
testl
test
pushf
mov
add
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
mov
push
sub
push
push
arpl
xchg
fadd
fstpl
lods
dec
ret
loope
cmp
mov
cmp
mov
jo
push
std
push
jno
jecxz
in
xchg
ret
xchg
icebp
cmp
mov
mov
jbe
testb
inc
push
ljmp
fucomip
mov
xchg
mov
mov
gs
icebp
xchg
inc
fistl
sbb
sti
aaa
xchg
scas
ja
hlt
jmp
popa
aam
sub
icebp
out
aam
add
movsb
pop
ljmp
sahf
shll
inc
dec
or
and
mov
mov
mov
mov
test
xchg
mov
int3
sub
mul
mov
ror
xchg
inc
or
adc
mov
mov
icebp
fadd
iret
pusha
add
dec
mov
xchg
repnz
loop
in
loopne
mov
pop
xchg
push
dec
cmc
push
mov
push
es
mov
mov
mov
pop
xor
dec
lods
push
xchg
sbb
pop
mov
mov
push
xchg
mov
or
sbb
xor
aam
cmp
in
aas
nop
and
das
pop
jp
sub
scas
mov
jg
mov
jmp
sbb
lcall
or
or
lods
clc
dec
stos
mov
pusha
pop
pop
lods
inc
cmp
and
pop
sbb
fldz
or
sbb
testb
sti
mov
cmpsb
mov
mov
pop
rorl
mov
adc
mov
sbb
sbbl
data16
loope
sbb
in
pavgb
pop
aaa
sbb
jae
ss
mov
dec
xlat
push
sub
sub
leave
fisttpl
movsb
or
loop
out
fmull
or
and
fcomps
pop
out
sub
ret
cmp
inc
jecxz
loopne
das
xor
sub
data16
subl
or
lret
scas
pusha
push
addl
push
test
out
fmul
rcrb
ss
fisubs
leave
sbb
cmp
gs
fwait
pop
sub
dec
in
push
data16
sar
enter
sub
mov
sahf
jecxz
and
popf
cmpb
bound
dec
cli
pushf
pop
imul
push
jmp
aam
push
outsl
scas
adc
loopne
jp
stc
jmp
out
jne
sbb
imul
data16
out
cld
gs
mov
out
mov
mov
xchg
jbe
loope
in
push
xchg
mov
fmul
push
and
xchg
mov
cmp
or
mov
xchg
mov
cli
sub
inc
adc
lcall
push
jecxz
stos
push
cs
movzbl
sub
xchg
pushf
out
sbb
xor
add
loopne
popa
dec
adc
sub
call
shll
pop
leave
test
dec
mov
out
and
xchg
les
push
cmp
and
hlt
mov
pop
push
fstpl
cli
movsl
cli
es
jo
xchg
sbb
adc
dec
aad
and
rcrb
cmp
mov
push
cld
sti
scas
sub
xor
test
or
lret
inc
outsb
add
pusha
nop
or
and
xor
jp
fsubs
inc
mov
gs
jmp
insw
push
or
adc
mov
cmpsl
iret
pushf
rolb
insl
test
mov
pop
arpl
mov
xchg
cmp
mov
popa
repnz
andb
pop
imul
icebp
daa
push
push
push
lods
xchg
ret
push
fsubrl
mov
lds
test
call
outsb
sub
and
pop
pop
jns
xor
cs
xor
jne
mov
pop
dec
or
pop
fidivrl
jne
mov
test
pop
adc
out
and
sub
sub
loopne
mov
test
dec
ljmp
xchg
outsl
or
inc
loopne
mov
testb
roll
mov
lock
gs
inc
adc
mov
and
lahf
dec
jnp
sub
dec
hlt
add
rcrl
or
dec
gs
mov
jno
mov
fwait
pop
inc
aam
pop
or
andl
fwait
aam
fiaddl
scas
lahf
mov
jo
push
pop
aaa
jmp
movsb
xchg
je
insl
nop
pusha
shrl
sahf
or
jne
or
mul
dec
fneni(8087
loop
and
inc
mov
shl
bound
outsb
sub
sub
arpl
cld
jmp
popf
ret
mov
cmp
mov
fstl
push
scas
cs
add
xchg
call
push
jo
sub
jb
fdivrl
push
jl
sbb
roll
setns
or
popf
addr16
adc
lock
aas
jg
cmp
and
rol
sbb
cs
imull
add
loop
int
dec
and
outsl
mov
cmp
pop
pmaddwd
dec
cmp
adc
insl
ret
sbb
sbb
lods
jmp
out
xchg
lock
mov
enter
push
and
add
mov
into
cmc
add
loope
xor
jb
xchg
imul
scas
mov
mov
adc
mov
lahf
mov
jns
cmc
int3
addl
std
sbb
push
popf
loopne
add
fxam
popl
dec
sbb
nop
js
lcall
cld
pop
mov
in
cmpsl
sub
add
stos
loop
push
movsl
jnp
dec
test
xrelease
pop
lock
mov
or
cli
mov
add
sub
push
fwait
ret
repnz
sub
loopne
mov
mov
dec
shll
lods
xor
lods
lods
aas
mov
call
pusha
xor
mov
clc
jns
insl
xchg
sub
lcall
push
fadd
in
jb
daa
out
inc
movsb
push
xchg
adc
push
dec
inc
mov
rclb
imul
push
pop
add
call
popf
jbe
ret
fsts
pusha
in
movsb
mov
and
insb
cmp
pop
lods
sub
clc
add
call
outsl
sub
push
adc
jnp
mov
mov
pop
cmc
add
dec
enter
fs
mov
aaa
inc
add
mov
in
daa
cltd
arpl
repnz
sub
dec
sub
inc
mov
lea
daa
hlt
sub
jno
insb
pushw
push
push
ffree
fisttpl
dec
cmpl
test
lods
orb
xchg
xchg
into
loop
xchg
sub
pop
in
push
fst
testl
push
rcr
sub
inc
mov
int3
and
mov
lods
pop
mov
daa
jecxz
pusha
flds
add
inc
xor
pop
sbb
lods
fwait
enter
mov
and
sbbl
push
repnz
or
hlt
sbb
sub
cltd
xor
les
mov
cltd
lods
pop
lea
test
shl
adc
cmp
xor
ret
jmp
addr16
cmp
jge
lock
jo
cltd
stc
ret
aaa
js
fwait
aam
int3
cmpsb
movsb
js
mov
cmp
out
movsb
popf
in
pop
jns
xchg
stos
push
fcoms
pop
push
fcmovnb
xchg
lea
pusha
dec
lock
enter
int3
adc
adc
pusha
movsb
jbe
push
scas
pop
aaa
bound
mov
xchg
or
sub
cmp
sbb
xchg
leave
in
jbe
fistps
push
mov
add
and
cmpsb
in
inc
jae
adc
loope
dec
mov
push
jbe
out
das
mov
cmp
leave
pop
dec
pop
stc
cld
add
mov
subps
cmp
adc
fadd
iret
mov
pop
inc
icebp
mov
xchg
mov
jbe,pt
inc
je
and
lods
leave
pop
jle
push
loope
and
stos
or
xor
mov
mov
data16
pop
and
xor
insl
je
ja
mov
test
ret
push
adc
fwait
fwait
adc
lahf
fdivrp
lret
adc
daa
sbb
mov
sub
cwtl
push
jg
outsl
into
js
clc
jecxz
mov
adc
pop
xlat
xchg
mov
mov
pusha
out
xchg
movsl
aam
dec
imul
push
fiadds
lds
rcrl
push
cltd
pop
insb
cmp
cmc
scas
add
pop
stc
add
mov
shll
ljmp
popf
or
scas
shr
rol
mov
popa
int
mov
cld
push
lcall
adc
cltd
lahf
pop
or
push
xchg
xlat
ret
mov
je
inc
mov
pop
sar
cmpsl
subl
cmpsl
sub
pause
pop
comiss
adc
idivl
lret
add
in
cmp
sub
xor
sahf
sbb
lods
aam
pushf
add
sbb
dec
cmp
leave
inc
and
push
loope
mov
movsb
int3
ja
sbb
mov
int
or
sub
lods
xor
adcl
lock
adc
jae
fimull
cld
andl
push
sub
aam
mov
ds
adc
lods
mov
dec
mov
hlt
in
adc
jb
jb
xchg
test
jbe
test
outsl
cmpsb
xchg
scas
cmp
mov
push
adc
push
loope
xchg
ror
lock
jp
push
ficoms
ret
ret
sub
pop
push
push
xor
adc
mov
hlt
dec
aad
arpl
and
add
out
push
cmpsl
and
push
jns
aas
pop
ficoml
ja
jne
mov
or
repnz
mov
jge
je
inc
xor
mov
ja
icebp
cs
or
popf
mov
shlb
pop
pop
adc
fisubrl
js
mov
mov
adc
lods
negl
adc
lret
cmp
pop
jno
rclb
das
test
mov
adc
ljmp
pop
mov
xchg
lods
jg
mov
add
mov
mov
pop
repnz
mov
add
daa
sbb
rcr
shl
mov
push
jno
mov
daa
popf
fbld
test
mov
add
dec
push
enter
out
lahf
fcompl
sti
and
insl
out
xchg
inc
jb
rcll
lods
test
xchg
and
sub
push
ss
xor
cmovo
clc
aaa
imul
loopne
mov
jecxz
ss
jnp
arpl
cmpsb
cld
addr16
adc
mov
xor
xor
inc
add
in
xchg
add
add
add
inc
push
cmpb
fistps
test
fsts
sbb
aaa
jle
add
dec
cwtl
inc
out
push
jns
adc
out
lods
in
je
jmp
cmp
loopne
xchg
mov
pop
sub
push
lret
adc
push
and
ja
les
mov
fldt
ror
mov
fists
mov
aad
add
test
jae
mov
je
js
nop
cmpsb
jns
mov
inc
mov
fwait
inc
sub
ret
jle
loopne
es
rorl
xchg
xorl
xor
rclb
imul
movsl
cwtl
js
push
adc
jnp
fadd
cwtl
push
icebp
add
inc
mov
js
fucomp
cli
fmuls
shll
push
pop
aaa
aaa
inc
cld
dec
lret
loop
mov
inc
add
xor
pop
mov
pop
dec
loopne
pop
inc
movsl
int
lea
and
movsb
mov
je
cmp
push
fiadds
mov
adc
and
jge
mov
mov
test
sub
movsl
xorl
xor
cli
in
loop
jo
stc
and
jge
push
jb
mov
cmp
idivl
pop
inc
orb
daa
ds
insl
jo
ds
repnz
mov
nop
shrb
adc
xlat
ss
sbb
fiaddl
mov
test
repnz
xchg
fwait
jb
rclb
pop
outsb
inc
insl
jbe
and
dec
jno
push
in
fs
push
int
outsb
mov
fcomp
push
sub
pop
fwait
mov
push
ljmp
sub
cmpb
setno
dec
fdivr
outsb
mov
lcall
imul
cmp
jp
add
mov
in
push
ljmp
mov
sti
scas
out
sahf
cmp
or
add
or
fs
popa
dec
mov
xchg
lahf
xchg
call
xchg
adc
lcall
test
adc
or
mov
cmp
mov
xlat
add
lret
bound
pop
stos
movsl
mov
sbb
and
push
add
dec
bsr
imul
cli
cli
pusha
cmp
sahf
repz
jnp
push
push
ds
lods
adc
mov
jmp
xor
mov
mov
push
das
inc
mov
scas
xor
and
and
bound
sub
xorl
mov
xchg
xchg
rorb
cmovl
out
pop
js
pause
arpl
bound
add
sahf
lahf
fld
jo
inc
mov
mov
pop
movsl
sbb
pop
xchg
add
pushf
cs
rorl
aad
sub
movsl
sub
mov
arpl
fisttpll
nop
xor
lahf
das
jo
or
int
push
fldenv
xchg
mov
mov
add
pop
adc
mov
xorl
adc
loop
insb
push
sub
mov
repz
das
jge
mov
mov
cmp
stc
pop
mov
xchg
jp
incb
jl
repnz
testl
ja
pop
add
dec
cmp
fstpl
pop
xor
loopne
mov
pop
in
aaa
cs
cmp
dec
mov
cmpsl
dec
xchg
ja
stc
mov
mov
push
sbb
arpl
pop
and
fs
jp
push
dec
pushf
repz
loop
push
ret
hlt
jno
jg
xlat
in
dec
fnstsw
movsl
pop
andl
fwait
mov
sbb
mov
jle
mov
orb
inc
mov
and
cmp
cmp
cmp
mov
lods
out
cmp
mov
xchg
mov
xor
jmp
dec
xchg
into
or
out
cld
nop
popf
inc
mov
push
push
std
cs
not
mov
push
add
int
inc
pop
adc
xchg
sbb
jle
gs
or
cmp
push
mov
lods
mov
ss
lock
mov
pop
in
iret
adc
adc
out
arpl
bound
je
xlat
lea
mov
xchg
sbb
fldenv
popa
mov
repnz
push
pop
pop
das
cmp
mov
push
clc
sbbl
in
call
or
mov
mov
rol
subl
and
jno
loop
das
inc
mov
adc
sbb
scas
mov
xlat
sub
sbb
int
cmp
cli
frstor
mov
jnp
int
pop
or
popa
jne
mov
pop
test
and
mov
dec
fstpl
das
out
aad
sahf
popa
data16
cltd
std
add
or
divb
repnz
sub
sub
aaa
ficoml
push
fs
xlat
fs
or
mov
nop
insb
mov
sub
loopne
pop
aad
cmp
iret
bsf
iret
incl
sahf
jno
mov
dec
mov
lods
aas
ret
lds
std
sbb
xor
popf
pop
inc
aam
negb
inc
or
add
add
aas
dec
mov
jl
push
fiaddl
prefetch
or
lahf
mov
repz
mov
xchg
ss
popa
cmp
inc
cltd
mov
hlt
pop
loope
jbe
push
lahf
lret
sub
inc
les
mov
and
pop
pop
sub
adc
scas
adc
in
cli
adc
clc
jmp
mov
mov
loope
add
ds
sub
adc
jmp
ss
addr16
push
pop
enter
mov
jo
add
daa
xorl
les
jp
faddl
adc
mov
out
int
out
push
xchg
ja
cmp
push
lret
add
xlat
add
in
sub
rcll
pop
shlb
mov
mov
in
jmp
cmp
sbb
pop
test
lret
lock
js
add
shll
mov
sbb
fmull
mulb
or
outsb
push
bound
clc
ja
call
mov
xor
mov
sbb
pop
dec
add
mov
scas
adc
outsl
aaa
inc
je
or
test
jecxz
mov
xor
mov
shl
xor
adc
or
dec
mov
add
jb
cmp
je
mov
jae
pop
enter
cmpb
push
pusha
ficomps
add
adc
test
cwtl
movb
imul
bound
dec
and
pop
and
sub
mov
lcall
mov
fwait
shrl
cmovne
sub
aaa
cmp
pop
mov
jnp
inc
sbb
dec
push
and
test
cmp
and
push
aaa
hlt
adc
sbb
enter
adc
out
dec
add
mov
and
cmp
std
je
jb
dec
pusha
lock
je
jno
je
ficomps
in
add
stos
cmp
jno
sbb
jl
push
jbe
add
push
push
mov
pushf
pushl
or
jmp
mov
xchg
xchg
push
js
imul
jmp
lea
sbb
loop
sub
js,pn
dec
and
cmp
push
xchg
aam
mov
mov
hlt
loopne
push
lods
lahf
sub
in
jno
addr16
incl
les
fadd
lcall
in
popa
ja
pop
sbb
cmp
insl
loope
out
push
add
std
ficompl
inc
or
mov
push
jg
lcall
push
xchg
mov
inc
sti
rolb
sub
adc
and
xlat
mov
inc
call
inc
imul
repnz
loop
nop
and
fisubrl
or
mov
add
cli
addr16
or
xor
xlat
ds
into
rclb
addb
fldenv
sub
dec
cmpsb
xchg
imul
jmp
add
in
mov
xchg
ja
jp
popa
das
jecxz
push
push
mov
scas
loopne
aaa
roll
lcall
xlat
or
mov
lock
mov
jg
fldcw
dec
je
nop
inc
loope
pop
sbb
push
test
popf
inc
jnp
sar
aad
xchg
repnz
pop
std
mov
jb
in
stc
cmp
jl
mov
ds
inc
jne
scas
push
fwait
lret
ds
xlat
inc
add
add
mov
mov
test
push
mov
xchg
rcll
lret
movsl
fnstenv
jmp
xor
adc
addr16
xchg
hlt
jmp
or
lds
inc
xchg
sub
dec
popf
jo
sub
aad
or
out
and
test
in
xchg
xchg
fldcw
jmp
sub
insb
sahf
inc
push
ret
int
sahf
push
mov
test
add
jge
mov
and
fidivrs
jge
pop
fsubrs
mov
cmp
dec
cltd
or
add
xchg
or
and
sbb
fiadds
les
sbb
jmp
cmc
mov
cmpsl
int3
data16
insl
sahf
insl
loope
adc
xchg
xorb
addr16
pop
data16
and
leave
adc
mov
sbbb
dec
cmpsb
jmp
xor
testl
mov
inc
ja
or
adc
mov
push
and
and
jne
frstor
pusha
repz
push
dec
and
fldcw
in
and
dec
call
mov
xchg
xor
enter
mov
pop
cmpsl
cld
and
int3
and
mov
cld
out
add
mov
in
and
daa
mov
in
jp
es
pusha
and
mov
sbb
mov
ret
ja
jne
scas
xor
push
pusha
js
rclb
loope
ja
xor
outsb
sbb
leave
xlat
mull
imul
je
and
jge
sbb
aad
xor
jge
aam
jo
adc
adc
sahf
add
inc
push
or
sbb
xorb
cwtl
insb
sub
push
fimull
dec
in
pop
xchg
mov
leave
fwait
arpl
stc
add
imul
mov
jmp
mov
pop
test
fmull
sub
jns
into
mov
sub
xchg
xor
mov
out
cmp
sti
in
inc
dec
pushf
fnstcw
mov
and
fisubrl
fs
js
pop
jbe
dec
bound
lock
jns
add
mov
mov
mov
pop
in
sbb
stos
jne
rcl
aas
incb
pop
cwtl
dec
out
push
les
sub
pop
inc
and
xor
inc
dec
fidivl
imul
es
bound
push
test
pop
xor
lret
pop
inc
jle
je
in
or
mov
xlat
out
movsb
iret
pop
clc
outsl
pushf
push
fxch
mov
pop
cmp
das
jg
xchg
push
loopne
inc
adc
test
dec
mov
in
dec
mov
inc
mov
push
lahf
add
xchg
pushl
push
dec
adc
fdivr
addr16
out
rolb
xchg
xor
adc
dec
scas
ret
stos
roll
rorb
call
nop
rol
pop
loope
into
sti
mov
or
daa
mov
enter
imul
pop
xor
lods
pop
cmp
fs
adc
scas
es
addr16
dec
mov
sbb
sbb
xor
mov
mov
and
mov
mov
stos
mov
jle
add
mov
dec
inc
add
int3
adc
lret
add
mov
sti
sub
mov
bnd
movsb
iret
add
arpl
cs
mov
add
out
test
and
jecxz
add
mov
mov
mov
mov
arpl
jle
cltd
and
imul
mov
in
jb
and
and
sbb
mov
popf
fwait
repz
dec
mov
sub
test
cmp
fimull
jns
stos
leave
pop
mov
icebp
mov
adc
jnp
stos
lahf
aaa
push
sbb
jle
cmpsb
inc
ja
movsb
fucomip
jl
imul
mov
inc
sbb
rclb
and
test
fimuls
mov
sbb
sub
shl
and
jnp
sbb
or
fistl
cs
add
movsl
xlat
jns
pushf
leave
mov
mov
outsb
jp
push
sbb
adc
push
jmp
xor
sub
adc
push
aaa
mov
dec
imul
daa
and
imul
mov
les
aas
mov
arpl
jl
and
and
and
pop
push
mov
xchg
cmp
aas
lds
hlt
dec
mov
or
es
imul
aas
fs
cmc
and
adc
fildll
mov
jge
sarb
sbb
divb
shr
aam
ds
push
mov
add
testl
bound
cmp
add
fwait
dec
jb
mov
movsl
add
jae
adc
movsb
sti
insl
stos
nop
xchg
cmpsb
orl
shlb
sub
mov
stc
xchg
add
add
mov
ss
mov
cmp
in
stos
int3
out
jb
jno
fisubl
andl
jp
xor
dec
jl
push
push
fistpl
je
jae
mov
fstps
shrl
pop
push
mov
pop
rorl
insl
sub
sub
fldz
popa
dec
imul
idivb
jmp
mov
iret
xchg
mov
scas
adc
mov
pusha
xor
jl
dec
mov
outsb
ljmp
xorb
pop
or
cld
mov
and
out
popa
dec
add
int
fxch
mov
fdivs
scas
add
mov
cld
leave
push
mov
cmp
mov
mov
test
inc
out
std
out
bnd
mov
scas
addl
test
int3
aad
jle
test
sbb
test
pusha
push
xchg
xor
xchg
mov
iret
imul
loop
jo
mov
lock
adc
subb
mov
jno
push
cmp
idivl
ds
std
pop
imul
sub
cmp
fs
push
leave
mov
mov
xor
mov
xchg
pop
mov
push
inc
jge
xor
cmpsb
xchg
sub
pextrw
inc
clc
imul
pop
inc
pop
or
scas
enter
adc
fistpll
mov
popa
pop
pop
push
sahf
lods
ja
xlat
cmp
and
pop
je
ja
pop
mov
arpl
ds
sbb
divl
mov
jl
stos
mulb
iret
xor
push
in
test
movsb
stc
jb
pop
jecxz
mov
sbb
mov
andl
popa
enter
stc
jnp
or
leave
repnz
sbb
test
xchg
xor
mov
lret
test
arpl
jp
push
push
sarl
lods
pop
cmp
mov
push
push
or
xchg
push
cmpsb
ds
sbb
and
mov
popf
int3
imul
push
pop
xor
lret
ret
mov
pop
int3
aad
dec
std
add
mov
pop
xchg
push
xor
or
cli
testl
call
imul
and
jo
adc
cmp
mov
mov
xchg
mov
xchg
sub
iret
fldenv
jle
dec
xorl
lds
xchg
ret
adc
cmpsb
rclb
mov
das
sub
jge
sbb
mov
xchg
cli
xor
out
pop
xor
cmpsl
sbb
fwait
xlat
mov
mov
frstor
mov
shlb
mov
add
xchg
push
scas
add
mov
fcom
ret
aad
inc
aas
sahf
mov
and
push
mov
add
sub
test
jmp
rcrl
loope
mov
repnz
add
mov
sbb
adc
cmpsl
ljmp
mov
sti
jl
dec
jecxz
jge
add
pop
ret
faddl
mov
xor
push
cltd
dec
sbb
push
sub
insb
icebp
sub
lahf
vmovntdq
add
dec
and
movsb
xchg
imul
sub
lea
push
and
out
xchg
sbb
xor
data16
jo
ja
push
repnz
out
shlb
push
into
pusha
pusha
cmpl
fstpl
mov
mov
or
lret
xchg
push
out
js
pusha
mov
sbb
scas
mov
inc
out
adc
shrl
jp
or
shrb
inc
in
rcll
xchg
push
fisttpl
cmp
pop
push
inc
mov
pop
lret
inc
sarb
push
cmp
mov
mov
xlat
jne
push
sub
lahf
outsl
xchg
xchg
test
lea
xchg
sbb
sbb
adc
or
xchg
lahf
or
gs
enter
imul
in
sbb
into
mov
test
pop
mov
sbb
stos
sbb
pop
push
faddl
lds
leave
sbbb
add
mov
cmp
xor
aam
mov
xchg
das
push
loopne
rcr
add
in
rcr
fidivrl
jle
mov
pop
xchg
dec
rclb
fisubl
fadds
daa
scas
imul
lret
or
mov
or
ja
out
movsb
stos
lret
out
sbb
push
orl
test
out
mov
repz
mov
push
ret
aad
pop
dec
mov
sub
pusha
sbb
pop
push
xor
jb
xchg
std
dec
insl
mov
xchg
fimull
sub
notl
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
jb
inc
or
xchg
int
push
ret
out
push
sub
test
cwtl
and
sub
arpl
lods
push
mov
call
arpl
adc
xchg
adcl
cmp
jecxz
rcll
add
mov
mov
bound
daa
mov
stos
fiaddl
push
xor
xlat
movsl
movsl
jns
inc
daa
es
pop
lods
fmull
jnp
addr16
mov
inc
shl
adcb
adc
fcoml
cmpsb
out
je
xchg
scas
jns
jno
dec
pop
shrl
ret
inc
xchg
sbb
movsb
jle
and
fsubrl
mov
dec
notl
dec
push
mov
fadd
inc
movsb
data16
loop
cmc
xchg
sbb
test
rolb
jmp
popa
movsb
mov
pop
inc
jne
mov
and
fmuls
lods
inc
ss
xor
or
call
cltd
into
mov
mov
bound
fadds
dec
cltd
push
jbe
mov
mov
loope
fldenv
cmp
repz
and
pop
xor
stos
push
sbb
hlt
sbbb
mov
leave
fistps
mov
xchg
mov
fidivs
fisttpll
inc
ljmp
imul
fdivrl
or
outsb
stos
popf
adc
outsb
in
mov
sahf
in
imul
xchg
cld
jl
dec
popf
sbb
xchg
or
adc
out
cmpsl
call
lret
mov
cmpb
mov
cmp
scas
jmp
mov
push
pop
test
or
or
scas
pop
and
xor
cmp
orb
loopne
rorb
adc
cmpsl
jl
test
scas
mov
ds
xorb
inc
pop
ficompl
lcall
jo
out
cmp
xor
fildll
mov
push
ret
xchg
xchg
sbb
rolb
stc
fs
rorl
adc
test
jmp
mov
push
jg
lret
cmp
dec
rorb
pop
jp
mov
xor
jae
nop
lcall
stos
aam
fldpi
ret
nop
pushf
pop
pop
dec
das
xchg
dec
pop
mov
popf
xchg
cmpb
push
incl
sub
aaa
inc
jmp
stos
fsts
lods
inc
xchg
dec
or
imul
hlt
jne
enter
scas
mov
xor
movsl
xchg
arpl
mov
xchg
fbld
xchg
imul
fisubrs
push
pop
ss
inc
ss
mov
js
inc
jmp
push
cli
ficoms
fwait
pop
sub
loope
out
push
aas
mov
mov
mov
in
nop
xlat
mov
mov
in
nop
mov
cmp
sbb
jns
mov
push
repnz
aaa
loope
push
mov
push
jp
xor
imul
mov
std
or
mov
mull
fwait
in
mov
jne
stos
stc
pushl
aad
insl
dec
popa
mov
ret
dec
in
call
cmpsb
outsl
les
cs
imul
popf
jns
xchg
fisttpl
addb
mov
bound
mov
inc
inc
insl
fbld
sahf
lods
jno
movsb
xchg
pop
daa
adc
push
push
xchg
stos
dec
incb
iret
outsl
cld
push
push
xchg
sub
je
jge
loop
dec
add
jae
fwait
add
rol
nop
mov
incl
mov
scas
enter
add
add
xchg
inc
add
mov
inc
shll
mov
jecxz
push
hlt
negb
mov
ss
inc
mov
pop
xchg
jle
add
cmpsl
push
lret
fisubs
adcb
imull
jae
mov
out
adc
aam
lods
aas
push
mov
push
lret
daa
test
jg
popa
dec
push
mov
xor
imul
out
out
inc
js
out
jo
pusha
sub
ret
mov
fbld
inc
push
adc
and
mov
subb
lods
les
andb
adc
push
xchg
pop
movsl
sbb
mov
sbb
stos
mov
in
lret
push
int3
stos
enter
jo
pop
cmp
imul
or
mov
insw
imull
sbb
mov
ret
in
mov
xor
mov
mov
push
lahf
push
ficoms
dec
pop
dec
into
xchg
xchg
in
clc
lret
and
and
jb
inc
es
orl
addr16
pop
aad
mov
sarb
mov
pop
out
inc
lds
xchg
push
sbb
ret
mov
mov
add
mov
push
mov
jl,pn
mov
mov
mov
dec
jbe
cltd
ret
pop
inc
xor
ljmp
outsl
mov
jnp
std
pusha
xchg
jo
out
fdivl
mov
jmp
cmpl
dec
or
or
dec
lret
xor
xchg
icebp
stos
mov
into
xchg
pop
les
sbb
xchg
rcrb
je
insb
mov
int3
mov
or
mov
je
mov
or
daa
sub
jns
fs
rcrb
mov
jo
ss
and
fldl
sub
and
jnp
ljmp
ja
test
out
fnstsw
sub
sub
push
sahf
movsl
lret
outsb
fiaddl
scas
adc
into
dec
js
stc
mov
and
dec
sub
das
movsl
or
lret
jle
jp
lock
jne
scas
popf
lret
insl
add
sbb
mov
iret
ja
xor
scas
clc
mov
inc
xchg
lcall
daa
inc
dec
mov
pop
jp
dec
outsb
pop
mov
leave
push
das
outsl
lods
xor
and
cmp
and
pop
sbbb
test
jg
and
arpl
xor
adc
dec
adc
xor
pop
pop
sub
std
xchg
mov
push
dec
jae
xlat
xchg
lret
push
sub
xor
push
jno
imul
xchg
xchg
adc
cmpsl
xor
lods
repnz
mov
mov
stos
and
mov
xor
push
lret
popa
sti
mov
test
cmpsb
or
dec
jmp
push
mov
aas
mov
sub
inc
xchg
cmp
push
mov
add
out
gs
add
inc
push
fists
fwait
mov
jae
or
jecxz,pt
mov
xor
aad
daa
lret
mov
les
jl
sbb
push
sub
dec
out
xchg
mov
ret
dec
add
mov
pop
movsl
out
dec
je
gs
sbb
div
add
add
pop
push
nop
pop
mov
imull
lret
mov
sbb
sub
add
sub
jne
push
in
daa
sub
jns
es
ret
cmp
sub
jl
xor
or
fisubrs
jo
mov
jmp
in
adc
lcall
push
div
sbb
fdivrs
jle
leave
std
pop
mov
stos
xchg
shrl
pushf
in
leave
loope
bound
ss
rorl
in
dec
out
xor
xor
aaa
pusha
outsb
jl
mov
lret
mov
hlt
cmp
jno
daa
jle
arpl
es
pusha
jecxz
lock
hlt
aam
inc
stc
scas
cltd
loopne
inc
fwait
mov
push
dec
mov
stc
sbbb
nop
push
shlb
imul
repz
cwtl
xchg
inc
scas
jnp
dec
xchg
stos
push
inc
imul
jecxz
icebp
in
or
in
lea
jge
push
add
mov
adc
jo
sbb
and
mov
push
sbb
inc
pop
adc
jnp
and
pop
gs
andl
push
mov
jmp
mov
xor
rclb
mov
jmp
je
add
shrb
or
in
add
pop
xchg
shll
add
scas
movsb
lret
cwtl
ljmp
xchg
and
mov
dec
push
push
or
or
and
pop
mov
scas
inc
push
fldenv
movsl
jg
mov
dec
jp
in
arpl
popf
ja
dec
and
xor
push
stc
mov
jo
jno
sub
and
mov
mov
outsl
mov
lock
stc
shl
mov
lods
test
into
outsl
enter
in
and
push
or
mov
inc
cmp
std
xor
pop
push
and
and
push
in
mov
push
adc
js
xchg
dec
mov
stos
outsl
shlb
and
lock
jecxz
sub
shrl
enter
mov
jg
shl
push
lods
adc
add
js
insb
aaa
xlat
mov
pop
lcall
loop
mov
add
adc
inc
mov
in
lods
adc
mov
adc
push
inc
jns
sbb
stos
adc
loop,pn
das
cli
iret
sub
rcr
int3
jecxz
inc
push
ds
fstp
int
or
fcompl
hlt
pop
in
push
sbb
fwait
jg
lcall
xchg
jg
dec
stos
out
rcll
das
mov
rcrl
mov
fwait
repz
jno
fdivs
repnz
jge
and
ja
and
push
shrl
imul
ficompl
loopne
push
push
cmpsl
outsl
scas
stc
dec
or
mov
mov
imul
shlb
mov
out
xchg
fcmovnbe
ljmp
push
and
in
rclb
sub
test
iret
arpl
aaa
lods
js
dec
or
xchg
nop
aaa
xor
scas
or
mov
cmc
cmpsb
lods
je
fsubr
sub
hlt
sub
es
and
adc
imul
jo
test
je
ds
cmp
imul
mov
push
sbb
fdivs
sub
and
inc
xor
jecxz
dec
es
add
leave
and
jae
loopne
mov
xor
push
ss
bound
mov
aas
int3
mov
icebp
movsb
mov
lcall
cmp
xchg
shlb
sysret
in
cmpsl
shlb
dec
push
xor
add
xchg
inc
ljmp
cmp
inc
add
test
pop
jecxz
push
shl
inc
xchg
adc
mov
xor
or
sbb
push
add
jno
dec
mov
cmp
test
or
mov
test
cmpl
push
mov
mov
div
sub
test
mov
pop
sub
mov
outsb
push
ret
or
lahf
jge
outsl
dec
push
jmp
les
push
jnp
xor
es
into
ret
adc
rorl
aad
mulb
in
xchg
mov
js
int3
jge
xchg
jns
add
mov
cs
shrb
inc
sbb
adc
xchg
das
cltd
in
cmp
pushf
ljmp
jl
pop
movb
xchg
pop
jmp
push
outsl
and
mov
into
mov
ljmp
inc
and
imul
cmp
nop/reserved
repz
pop
xchg
jle
xchg
xchg
sub
pop
and
gs
arpl
xor
lahf
cmp
ret
gs
daa
inc
pop
xchg
or
sahf
push
push
push
jne
fs
mov
mov
test
cltd
push
sahf
push
lea
sarl
mov
inc
add
adcl
repz
std
or
cltd
call
add
pop
rcll
add
dec
sahf
rorl
test
fidivs
add
aad
addr16
sti
sti
pop
inc
lods
inc
inc
adc
sbb
sub
test
adc
imul
sbb
push
adc
int3
or
ss
mov
inc
sub
xor
add
jmp
enter
and
lcall
and
inc
lcall
rclb
add
movsl
shlb
in
push
lods
je
lret
lds
das
inc
mov
mov
das
cmp
icebp
push
sub
inc
gs
inc
mov
push
add
stos
test
stc
mov
pop
xchg
les
gs
mov
cmp
push
mov
dec
popa
push
mov
mov
outsl
ljmp
imul
bound
add
cmp
jmp
inc
lods
xchg
inc
push
and
sbb
mov
inc
repz
and
add
sbb
in
hlt
hlt
shrb
or
shrl
imulb
add
out
sub
lds
dec
andb
jae
ret
jmp
pop
cli
fidivl
inc
test
lock
aas
pop
je
cmp
xchg
adc
mov
clc
inc
xchg
popf
jmp
add
inc
sub
hlt
stc
or
dec
insb
jecxz
xor
sti
jmp
leave
sub
fiadds
sub
push
dec
sub
xchg
subb
and
inc
jp
div
popa
sbb
jae
push
mov
les
pop
xlat
dec
dec
loop
in
sarb
sub
stc
pop
dec
icebp
dec
js
dec
xor
mov
mov
inc
js
mov
pop
inc
dec
dec
xchg
movsb
pop
insb
sbb
xor
mov
andb
sub
xchg
aad
jae
lods
mov
imul
dec
dec
arpl
xor
rcl
sbb
imul
xchg
test
movsb
into
and
sub
xchg
into
stc
cld
push
ja
pop
inc
jge
negb
pop
jmp
aas
outsb
pop
rclb
out
pop
inc
test
xchg
mov
jl
push
jbe
shlb
inc
and
insl
lcall
sub
adc
adc
and
mov
pop
testb
outsl
dec
ljmp
shll
in
daa
daa
lods
les
cmp
outsl
scas
xchg
jb
fildl
mov
dec
sbb
out
pushf
addb
pusha
jecxz
or
outsl
cs
add
add
shr
js
pop
andw
add
cmp
je
push
daa
testl
in
into
inc
add
dec
outsl
imul
ss
jno
fidivl
and
fsts
sub
push
jp
subl
dec
cmp
or
movsb
adc
push
add
fwait
test
sahf
in
xor
test
mov
mov
mov
outsb
add
repz
lret
cltd
push
popa
dec
pop
xor
mov
and
xor
cmpsb
stos
sbb
stos
movsb
in
stos
jno
insl
cmpsb
cmc
push
std
test
loop
out
jns
push
iret
jo
sahf
mov
fdivrl
in
in
js
int
inc
pop
into
adc
mov
add
in
pushf
dec
cmp
clc
sub
or
inc
in
sbb
into
jecxz
lock
ret
es
mov
into
jbe
aaa
pop
mov
lret
add
shl
rcrb
sbb
or
repz
push
aam
jp
mov
cmpsl
jnp
ds
pop
sub
insb
scas
jnp
in
rcrl
jl
imul
loopne
popf
jo
imul
push
std
aam
and
dec
mov
insl
je
mov
mov
jno
adc
adc
sbb
sub
testb
es
loope
jbe
pop
cltd
cmp
jp
jbe
or
jecxz
cmp
arpl
fs
ffree
or
icebp
inc
es
andb
mov
call
pop
and
or
add
clc
test
jb
pop
xor
mov
xor
pop
push
dec
testb
cmc
xor
aad
in
lret
fs
leave
arpl
inc
and
fnstcw
dec
in
adc
jmp
scas
mov
dec
mov
push
dec
aas
inc
inc
jmp
pop
movq
ds
notl
jne
jnp
aad
cmp
push
cwtl
mov
cmpsb
or
sbbb
pop
add
mov
push
xchg
pop
cmp
or
sub
jns
push
sbb
daa
sbb
cmp
les
out
pop
mov
push
fcmovu
fcoms
int
mov
sbb
sti
push
aam
fisubl
xchg
fcoml
into
pusha
lret
mov
xchg
arpl
std
incb
and
into
fisubrl
cmpsb
xchg
mov
mov
mov
push
add
mov
mov
adc
cmp
inc
imul
mov
stos
stc
and
loop
sub
xor
adc
pusha
sub
mov
mov
add
and
bound
jns
push
add
sar
and
sahf
and
jae
add
lret
ja
sahf
push
mov
sub
adc
mov
or
lahf
inc
push
cmp
xchg
adc
rcrb
imul
data16
addr16
fisttpl
pop
sbb
test
pop
imul
or
xchg
es
in
pop
xchg
addr16
jecxz
push
mov
add
aas
das
jmp
lahf
out
int3
mov
or
js
xchg
sbb
fsubs
jmp
sub
out
inc
jne
jno
mov
inc
or
out
imul
repz
lds
es
cmp
push
cmp
push
cltd
lret
subl
dec
pop
negb
inc
cmp
imull
jg
and
jp
je
dec
or
xchg
hlt
push
inc
push
dec
testb
xlat
arpl
jae
xor
hlt
arpl
cld
pushf
xlat
dec
adc
notb
xor
in
or
clc
scas
mov
fs
mov
xor
and
push
test
sub
sbb
jge
imul
sbb
mov
mov
shlb
data16
test
mov
flds
xor
add
lds
add
sbb
and
push
jg
add
lds
aaa
mov
jno
sbb
sti
ja
scas
pusha
add
and
call
imul
lods
push
rcl
mov
lret
loope
enter
fisttpl
dec
and
sbb
mov
call
addl
mov
roll
and
movsl
enter
add
xor
daa
and
mov
jl
movsb
cmp
fistps
xchg
clc
sbb
xor
scas
pop
dec
lret
add
pop
arpl
lock
or
out
in
mov
out
icebp
insl
inc
in
js
push
jp
ja
shll
inc
fmulp
pushf
push
jno
lods
sub
fmuls
jmp
dec
inc
and
inc
push
dec
lcall
shl
in
xchg
fistpl
xchg
nop
sbb
daa
stos
test
shrl
sbb
outsl
push
add
push
cmpsb
add
pop
flds
mov
mov
add
sub
mov
push
out
push
sub
mov
out
mov
imul
jae
daa
std
push
mov
ljmp
lret
ret
hlt
add
mov
or
jmp
into
loope
out
out
and
movsb
push
test
fdiv
ss
sub
mov
out
cwtl
mov
repz
je
popf
add
pop
cmp
inc
subl
add
mov
test
jmp
mov
scas
adc
ss
inc
adc
mov
test
ret
push
shl
sar
inc
into
mov
sub
mov
test
inc
push
add
jns
pusha
jle
popl
sti
jnp
pop
es
sbb
push
pop
popa
test
lods
sub
and
inc
dec
and
nop
push
lods
in
add
push
mov
mov
scas
lods
je
push
faddl
aam
cs
xor
adc
and
xor
aad
dec
mov
xor
mov
pop
jno
push
imul
fiadds
push
cmp
sbb
pushf
repnz
mov
sub
icebp
mov
rorb
xchg
cwtl
repz
lret
ret
add
nop
mov
ret
shll
inc
in
dec
mov
hlt
leave
mov
jle
inc
fucomi
aas
fildl
cmpsl
jp
mov
lds
inc
sub
aas
imul
jl
es
and
xor
xchg
repnz
pop
dec
lret
cmc
xchg
pop
adc
testb
push
or
mov
in
aas
and
adc
icebp
in
enter
out
bound
sub
in
fistpl
cmp
adc
pop
inc
jmp
mov
lods
xchg
incl
andl
addr16
jg
inc
or
cli
xor
and
rolb
jecxz
insb
js
out
xchg
jo
fwait
mov
lds
mov
fnstcw
arpl
mov
mov
mov
dec
test
inc
fcoms
fwait
mov
push
out
sbb
stos
sub
jbe
adc
sbb
pop
and
ja
or
jecxz
add
xchg
subb
push
loopne
out
add
negb
sarb
repnz
dec
inc
push
mov
pop
into
sbb
cmpsb
cmp
jbe
jns
outsl
sub
inc
dec
sar
add
sub
and
xchg
int3
push
mov
push
or
bound
cmp
gs
and
addl
popf
fmull
jle
les
bound
jnp
fiaddl
fisubrs
push
das
mov
les
sti
lcall
ljmp
add
mov
stc
xor
jbe
mov
psubd
or
and
cmpsl
cmp
gs
xchg
dec
test
dec
push
int
mov
and
ss
cs
popa
addb
push
mov
sti
hlt
inc
rclb
shrl
lods
pop
insb
movsb
xor
sbb
inc
adc
ja
outsb
in
iret
sbb
inc
jbe
mov
test
pop
andl
iret
jbe
lods
cmp
xchg
sbb
mov
xlat
and
sbb
adc
mov
mov
aam
cld
sbb
inc
inc
xor
lahf
fstpl
push
push
or
ja
dec
cld
jbe
pushf
jle
jo
push
jecxz
mov
fdivrp
inc
out
dec
sub
test
cli
jecxz
into
frstor
xchg
jp
les
cmp
cmpsl
fnstsw
psllq
jge
push
jae
mov
pop
or
mov
int3
dec
or
jmp
ret
fldcw
mov
adc
les
add
inc
sub
sbb
cwtl
ja
push
and
pop
fistpl
int3
mov
pop
mov
out
nop
jle
cmpsl
sub
repnz
push
mov
movsb
jns
jne
lahf
imul
mov
add
in
stos
xor
push
mov
push
sbb
adc
cmp
iret
sub
xor
testl
xchg
shll
xchg
sbb
jb
sbb
mov
shll
jmp
jmp
clc
push
mov
out
or
lret
testb
mov
loope
fcmove
push
push
call
fbld
jl
pop
cmc
or
bound
ljmp
in
ljmp
pushf
or
jno
xor
in
ret
mov
adc
inc
cwtl
dec
fs
cmp
icebp
add
jbe
loop
jmp
and
out
jl
jnp
fsubrs
adc
add
nop
popa
sbb
jo
cmp
fwait
cmp
dec
out
mov
fdivrl
ret
fildll
xchg
sbb
lock
cltd
adc
mov
scas
mov
and
jnp
jnp
jnp
dec
xor
add
adc
pop
flds
jmp
mov
imul
adc
mov
inc
jne
xchg
inc
push
lea
in
popf
dec
call
bound
dec
scas
xor
dec
inc
xchg
xor
outsl
pop
popa
xchg
sti
scas
jb
push
ljmp
fldenv
test
inc
add
xor
xchg
or
xor
fnstenv
scas
orl
mov
cmp
mov
sub
movsl
out
iret
xchg
jecxz
add
pushl
idivb
or
repz
xchg
pop
out
lea
sahf
sub
in
test
push
stc
mov
add
xchg
inc
cltd
pop
or
mov
lock
in
test
fs
insb
sub
push
inc
add
loope
ror
inc
mov
in
dec
fisttps
jnp
pop
ret
shll
push
mov
mov
push
mov
in
xchg
xchg
sub
stc
orl
rol
push
inc
icebp
mov
push
mov
cmp
cmpsl
cmp
cltd
loop
in
out
lods
lock
ss
xchg
sbb
pushf
test
xor
dec
xor
int
lret
dec
ja
mov
lret
push
sub
arpl
cmpsb
dec
insl
push
xor
push
push
xorb
mov
rcrb
pop
ljmp
leave
gs
cmc
pop
cmp
daa
push
pop
scas
fwait
xchg
notl
lock
mov
sub
xchg
mov
in
dec
popf
pop
jne
popa
lea
mov
jb
inc
loopne
sbb
mov
push
add
jmp
and
mov
mov
mov
jae
xchg
gs
out
inc
pop
jnp
jp
sub
int
pop
or
or
std
test
mov
test
nop
sbb
jnp
into
stos
mov
lea
out
lds
jne
es
and
pop
ror
js
or
sbb
cmp
aaa
out
adc
stc
adc
mov
mov
mov
sahf
push
sbb
and
or
jl
movsb
les
repnz
sub
andps
lds
jg
xor
jbe
push
ljmp
push
rorl
and
into
fsubr
ffree
dec
jo
aad
inc
fildll
out
push
addr16
dec
repnz
div
stos
pop
pop
dec
ds
fnstsw
sbbb
add
xlat
cmp
mov
cmp
ja
pop
movsb
or
ljmp
bound
pop
add
push
outsb
arpl
loop
sbb
ds
sahf
fldenv
movsb
xorl
push
in
inc
bound
outsl
insl
mov
xor
xchg
mov
push
xchg
dec
dec
add
push
jne
dec
xor
repnz
sbb
out
inc
data16
bound
sbb
ret
push
out
xor
dec
or
pop
push
testl
cmp
aam
ret
test
rclb
ss
xor
popa
inc
test
inc
je
aaa
push
call
xchg
shll
xor
pushf
cmpsb
cmp
das
mov
out
push
add
mov
shlb
sbb
fisubs
rolb
mov
add
roll
ror
xchg
dec
xor
cmp
push
fcoml
jae
add
cmpsl
xorl
pusha
cltd
xor
fnstcw
sbb
mov
mov
lea
outsl
ljmp
ss
ljmp
outsl
push
mov
push
inc
pop
add
popa
add
lcall
sub
ljmp
sti
mov
add
adc
ds
fldl
int3
mov
or
imul
adc
adc
sub
enter
hlt
mov
cld
rcll
gs
or
pusha
add
aaa
pop
sarl
in
rcrb
sbb
test
jmp
addb
clc
lds
pushf
cltd
jmp
jl
and
cmc
cmp
mov
and
jp
pop
jae
cmp
and
daa
add
daa
pop
aas
add
sbb
lret
and
std
lds
std
and
push
push
push
insb
push
or
cmp
mov
pop
pop
xchg
lds
inc
test
gs
and
xor
dec
lcall
jbe
dec
and
int
fisttps
das
test
lea
xor
or
push
or
and
shlb
and
pop
push
repnz
lcall
mov
movsb
loope
outsl
pop
mov
cmpsb
push
sub
push
xor
sbb
aam
mov
xor
orb
cmp
pusha
mov
sub
adc
scas
sub
xchg
stos
mov
loopne
push
loop
test
insb
dec
inc
pop
ret
sub
sub
sub
sbb
push
cmc
cmp
popf
xchg
mov
mov
push
imul
mov
sub
add
mov
lret
xchg
imulb
clc
inc
dec
nop
setge
aas
pop
and
mov
and
mov
outsb
movsl
aas
mov
iret
push
sti
icebp
nop
scas
mov
insl
mov
dec
out
mov
jno
mov
dec
push
pop
lock
das
sbb
and
out
mov
jp
adc
sbb
lds
sub
mov
and
loope
fcompl
nop
xchg
jecxz
mov
mov
pop
cltd
mov
clc
dec
into
or
xor
pushw
lock
int3
mov
cmpsl
sbb
push
lock
sbb
pop
stos
insb
push
scas
xchg
mov
int3
mov
push
cmpsb
xchg
jecxz
dec
xor
popf
or
push
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
fdivs
pop
add
pop
push
push
push
mov
push
sub
mov
sub
sub
jae
test
mov
pushf
xchg
fwait
push
pusha
ja
inc
inc
jmp
mov
sub
inc
ret
mov
pop
or
xlat
sub
fcomps
inc
pop
call
stc
and
inc
push
mov
and
or
xchg
cmp
sbb
sahf
ds
jns
cwtl
fisubs
repz
add
pop
mov
mov
adc
xlat
ret
sbb
inc
ss
ds
incl
mov
arpl
pop
jmp
ljmp
adc
out
mov
inc
pop
sti
and
mov
imul
mov
pop
mov
add
cmp
mov
inc
sub
hlt
xchg
adc
adc
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
