push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
out
arpl
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
popa
frstor
std
lds
mov
or
push
or
fnstsw
push
lea
cli
xor
ss
push
ret
ret
gs
pusha
lret
mov
aas
mov
push
mov
push
ret
sub
dec
push
les
xorb
jb
fists
not
dec
jno
inc
cmp
scas
das
and
imul
mov
pushf
mov
shll
fldt
rcrb
test
xchg
push
xlat
pop
enter
bound
sub
popf
xor
scas
jbe
jp
rcrl
call
out
in
lods
outsl
out
xchg
jb
dec
test
pushf
pop
hlt
jne
push
loopne
xor
and
or
xchg
push
stos
jbe
or
mov
inc
sbb
out
lods
ret
mov
and
mov
push
push
leave
test
aaa
adc
popf
add
repnz
aaa
loope
nop
jecxz
cmp
aam
stos
pop
jmp
pushf
mov
pop
std
mov
inc
mov
sbb
dec
mov
jae
and
mov
negl
leave
popa
push
adc
push
popa
jo
sbb
mov
in
adc
stos
or
sarl
hlt
das
cmp
in
out
xor
faddl
insl
test
push
in
lods
and
pop
shr
bound
inc
idivb
stos
in
xor
scas
xlat
imul
lea
and
mov
mov
jnp
sub
ret
int3
out
and
mov
mov
icebp
fisubrl
hlt
fmull
ljmp
je
jle
mov
xchg
inc
or
mov
mov
xchg
or
movsb
sbb
xor
xlat
imul
and
fnstsw
and
orl
add
cmp
loope
stos
push
stc
into
rcrb
int
cmp
nop
sahf
xchg
movl
pop
sub
mov
pop
fs
jne
add
mov
test
jnp
sub
repz
nop
movsb
push
shll
mov
daa
and
repnz
mov
mov
loop
daa
mov
add
lret
lods
cwtl
adc
and
add
and
add
cmp
mov
lock
xchg
mov
popf
lcall
xchg
mov
outsl
leave
lret
int
cmpsl
pop
inc
xchg
mov
add
or
cmp
dec
jae
mov
gs
and
pushf
in
dec
cmp
into
mov
lock
pop
rolb
jmp
cmp
stos
mov
scas
push
dec
iret
adc
cld
test
jns
or
movsb
and
imul
popf
jo
cmp
insb
lea
and
es
push
pop
sub
in
mov
fiadds
add
lfs
cmp
mov
xchg
xlat
cli
dec
pop
sub
repz
cmp
xchg
bound
jge
sub
xor
pushf
sub
jne
mov
fs
loope
cmc
push
and
decb
add
fsubs
call
or
mov
jno
pop
pushf
jno
add
repnz
cmpsl
xor
cmc
xchg
das
out
fnsave
push
dec
or
dec
add
mov
int
xorl
lret
pop
insb
xor
ret
add
add
into
pop
divl
xchg
mov
xchg
or
pop
jecxz
add
dec
mov
cmc
sbb
mov
dec
pop
ds
jne
xlat
jge
test
push
inc
test
mov
test
ret
pop
out
sti
popf
mov
lahf
sub
add
lea
ljmp
fs
xchg
and
or
in
testl
cmp
cmp
lcall
in
and
jb
or
cmp
sti
lods
dec
adc
adc
inc
or
add
jnp
mov
inc
push
jnp
cli
ds
loopne
push
ror
mov
pop
pop
sarb
push
or
cld
pop
insb
pop
cmpsb
xlat
dec
xchg
in
cltd
pop
pop
insb
es
ret
dec
sub
bound
lods
push
and
xlat
test
mov
mov
hlt
aad
rdtsc
xchg
lods
xor
cltd
addr16
jle
xchg
sbb
lahf
dec
add
mov
lea
sbb
lret
clc
sub
mov
ficomps
sbb
add
out
adc
addr16
adc
lock
test
pop
pop
int
ror
adc
xchg
jmp
mov
mov
inc
cmp
push
adcb
dec
mov
sbb
mov
jb
testb
insb
imul
shrl
insl
daa
mov
cmp
lock
aad
cmpsl
adc
pop
and
push
push
mov
jl
jmp
push
cld
cmc
test
jg
mov
loop
add
enter
lea
lretw
jb
adc
inc
jmp
or
jo
enter
orb
push
cmpb
xor
mov
dec
jb
pop
jb
inc
jnp
gs
in
pop
bound
cmp
mov
dec
scas
add
je
fcmovb
push
xor
cli
mov
push
pop
imul
stos
inc
loopne
jge
dec
jb
sarl
mov
jo
test
lret
fildl
adc
xchg
mov
out
sub
arpl
mov
lret
pop
mov
lods
loopne
pop
sub
or
jge
mov
push
and
dec
xor
es
dec
imul
adc
cmp
test
test
fwait
int
pushl
xchg
jp
jl
arpl
out
imul
add
add
dec
jno
fimull
fwait
je
add
pushf
and
int
jmp
jg
and
or
xchg
pushf
and
aam
cmpsb
pop
push
aad
es
jns
xchg
cmp
inc
enter
adc
pop
jge
outsb
mov
je
shrb
mov
mov
shll
cmpsb
pop
jo
sarl
lret
mov
lcall
mov
imul
je
call
xor
add
incl
or
push
mov
add
pop
in
sbb
das
bound
ljmp
pop
sti
sti
es
push
pop
mov
out
inc
ficomps
xor
cmc
xchg
and
inc
sub
fisubrs
sub
nop
pop
in
popl
or
test
int3
jl
xor
dec
daa
jae
bound
and
lret
inc
rcl
cmp
dec
iret
hlt
mov
int3
mov
or
adc
clc
dec
repz
cmp
fdivrp
push
ror
dec
xchg
js
jo
sar
xchg
xchg
das
ret
xor
nop
sub
shlb
pop
sub
push
jb
ss
fdivs
fwait
xor
adc
roll
add
mov
push
orl
enter
xchg
pop
sub
jo
cmpsb
lods
cltd
inc
and
or
sarb
lods
add
jne
pop
pop
adc
xor
pop
adc
test
inc
adc
imul
jb
out
shrl
jo
fstpl
jae
stos
lcall
das
push
pushf
xchg
xor
les
pop
ficompl
xor
xor
stos
daa
lock
in
sbb
int
mov
mov
lods
imul
jecxz
add
outsl
icebp
aam
adc
jle
dec
mov
cmpb
shll
std
mov
lret
pop
adcb
sub
or
movsb
addr16
dec
outsb
ds
bound
imul
iret
pop
dec
mov
inc
repnz
fwait
add
sti
jp
push
mov
cld
xchg
fstpl
inc
mov
cmp
cld
scas
cmp
or
dec
leave
dec
add
movsl
push
loop
sbb
int3
mov
aad
xor
das
sbbl
cld
jo
rol
cli
pop
push
lds
loop
xor
sbb
push
push
jg
mull
xchg
jae
mov
mov
add
out
aad
pop
insw
pop
test
pushf
loopne
jae
mov
add
adc
lahf
jns
push
xor
popf
push
loopne
fsts
sub
mov
add
cmpsl
inc
in
push
mov
pop
stc
in
rclb
sub
xor
sarb
cmp
sahf
lret
lahf
lcall
mov
sbb
sbb
outsl
xchg
pop
mov
insl
pop
push
xor
pop
lock
push
mov
mov
lods
sbb
dec
imul
loop
daa
int
adc
mov
lcall
add
js
mov
iret
call
sub
arpl
adc
mov
pushf
fdivrs
in
stc
mov
ljmp
std
push
xchg
mov
filds
xor
test
push
daa
stc
xor
pop
outsl
inc
insb
scas
movsb
or
adc
jbe
dec
push
bound
push
cld
ja
push
dec
sub
fsts
clc
and
movsl
aaa
mov
inc
pop
sbb
jp
add
and
dec
arpl
cmp
jae
jne
jns
cmpsl
dec
adc
stc
ss
mov
sbbl
sbb
das
ss
xchg
lret
fs
push
pop
jecxz
mov
imul
push
cwtl
add
je
mov
jnp
ret
stos
xlat
mov
jns
cld
xchg
int3
sbb
jecxz
je
add
les
mov
sub
add
xor
push
mov
mov
fsubrp
adcl
test
push
inc
jnp
jno
cs
adc
outsl
int
cmpsb
aaa
or
xor
or
sub
mov
mov
lock
add
mov
mov
and
mov
scas
push
push
in
or
test
xchg
add
loopne
jae
cmp
fists
mov
movsb
jbe
xchg
pop
rolb
addr16
mov
or
jno
push
mov
notl
and
add
lods
dec
das
cmpsb
iret
int
add
cli
pushf
std
jmp
insb
mov
cltd
lea
inc
scas
jmp
lcall
mov
and
add
daa
and
inc
movl
push
mov
jge
pop
mov
out
mov
jg
pop
mov
xorb
lahf
sub
sbb
add
fadd
scas
xorl
push
call
add
pop
sub
mov
fmull
xchg
xor
push
into
mov
sub
jmp
cmp
test
gs
or
inc
test
sbb
and
fsts
clc
mov
fildl
adc
mov
daa
jno
pop
fimull
dec
push
inc
aam
inc
iret
or
and
or
xchg
cmc
cli
pop
jo
bnd
add
addr16
dec
mov
popf
mov
adc
fcmovbe
popf
or
cmpsl
int
sub
in
adc
push
aam
jge
sbb
repnz
or
adc
sub
ds
xchg
repnz
xor
mov
pop
scas
cli
xor
and
adc
mov
jo
xchg
push
sbb
lcall
ret
jne
push
out
sub
adc
lret
pop
loopne
cld
inc
out
mov
and
clc
or
push
mov
adc
movsl
and
scas
ret
loop
rcrl
pop
iret
int3
shll
sahf
inc
push
mov
xchg
pop
sbb
lods
push
ja
cmp
out
mov
mov
mov
mov
inc
lret
sbb
jle
dec
das
in
mov
sub
add
incb
cmp
xchg
push
rcr
loopne
cld
inc
daa
mov
xchg
test
pop
sbbl
cmp
repz
test
jp
cmpsb
popa
movsl
test
fsub
lea
cmpsl
out
cmp
jle
ja
cmc
out
dec
imul
dec
and
sub
aas
lret
rcr
fistl
pop
mov
hlt
xor
ljmp
icebp
sbb
and
dec
xchg
das
in
ja
dec
out
into
xchg
addr16
xchg
test
mov
jns
or
mov
ret
adc
mov
out
lds
mov
cmp
leave
mov
rcl
shlb
inc
mov
fsincos
cmp
adc
aas
mov
dec
mov
sti
daa
daa
xchg
call
test
mov
lahf
pop
aas
push
inc
test
movsl
and
add
mov
xor
pop
push
jecxz
cli
rcll
xor
test
hlt
shl
outsl
xchg
mov
test
pusha
loopne
call
pop
dec
jle
mov
sub
mov
adc
sbb
pusha
jle
subl
jg
push
out
ja
xchg
cmp
push
sarb
pop
loope
mov
sub
push
jne
pop
sub
and
adc
cmpsb
xchg
pop
test
mov
cmpsl
rcr
test
jecxz
test
dec
xchg
push
mov
mov
loopne
in
arpl
sbb
xchg
ficoml
leave
xchg
js
mov
mov
jns
test
mov
outsl
mov
movsb
jmp
dec
jno
push
int
rcrb
inc
aam
repnz
scas
cli
pop
mov
aas
sbb
ljmp
inc
outsb
pop
shll
ljmp
sbbl
mov
js
int3
mov
adc
fstpl
inc
mov
adc
fdiv
mov
mov
jo
int
jns
cmp
aaa
fidivrs
repnz
mov
shll
scas
mov
mov
mov
push
pop
in
jne
mull
xchg
xlat
jnp
add
orb
xor
cmp
and
int3
fists
dec
pop
cs
stos
or
jne
sub
add
into
es
push
pop
mov
jnp
repnz
or
inc
cld
mov
add
bound
dec
pop
jg
popf
sub
sub
sub
nop
leave
add
mov
or
pusha
mov
shlb
bound
adc
fwait
in
ljmp
xchg
inc
fistps
push
pop
outsl
dec
inc
and
pop
mov
pop
lock
xchg
add
lods
xchg
xor
nop
out
mov
repz
and
mov
arpl
and
xor
ds
mov
xor
rolb
inc
xor
mov
adc
or
dec
js
hlt
xchg
sbb
push
inc
add
dec
sub
movsb
aas
lcall
fldcw
shr
mov
sbb
and
data16
cmc
dec
shlb
int
pop
inc
mov
ss
pop
cwtl
mov
sub
cld
or
iret
sub
in
into
pop
push
xlat
mov
add
mov
or
data16
mov
dec
data16
inc
rorb
inc
fwait
jb
fistpl
pushf
cmp
or
jge
scas
imul
fimuls
pop
mov
into
xchg
out
hlt
inc
ljmp
sbb
pop
or
js
fnstsw
jp
cli
out
lret
pop
pushf
das
mov
jbe
jb
jmp
push
lcall
xchg
int3
or
lds
push
sub
push
push
cld
incb
inc
adc
sbb
fs
arpl
pop
push
jbe
add
jnp
pop
scas
adc
xchg
loop
jmp
sbb
scas
lds
cmp
loope
mov
shrl
or
popf
pop
xchg
into
rorl
fmull
xor
jae
mov
divl
inc
les
xchg
ret
add
push
out
shrl
daa
dec
pop
clc
mov
and
sbb
aas
sbb
fldcw
or
xor
shl
sbb
pop
pop
lea
push
xchg
xor
lret
mov
jg
ljmp
or
out
lea
or
rol
push
outsl
inc
cld
call
cwtl
jne
add
xor
add
inc
or
ss
jg
ja
push
das
sub
xor
dec
andl
push
inc
cwtl
out
jl
mov
mov
imul
and
sbb
enter
pushf
mov
push
cmpsb
jg
adc
inc
mov
sti
jo
mov
leave
xchg
push
iret
std
cmpsl
lahf
add
sub
cmp
stos
jno
roll
call
dec
push
cs
int3
sub
jb
inc
inc
inc
mov
or
mov
xor
adc
ficoml
outsb
js
bound
cld
inc
sbb
popa
fdivp
movsl
jo
imul
popa
ja
fucom
dec
das
orl
pop
jle
dec
ss
popa
in
cmp
xacquire
inc
nop
pop
ret
faddp
mov
popa
dec
jnp
cmc
jo
enter
sbb
out
loopne
lcall
jle
mov
fwait
leave
xor
test
mov
and
fcoml
outsb
int3
jmp
std
arpl
mov
aad
xor
fmulp
je
test
cld
stc
jne
fcomps
jno
and
int3
adc
dec
or
in
mov
call
add
test
fistpll
call
mov
cmpb
cmp
lods
cltd
mov
shl
cli
int3
ud2
ret
outsb
mov
popf
add
leave
loop
xchg
scas
orl
call
sti
ljmp
repz
or
cwtl
bound
mov
or
int3
popa
xor
inc
in
lods
repz
mov
sar
sti
push
inc
pop
or
daa
data16
adcl
stos
into
cltd
inc
dec
push
fldcw
ret
sahf
and
decl
divps
mov
int3
xchg
inc
shl
sub
sub
jmp
mov
or
lods
pop
lahf
cmp
fsubrl
adc
add
std
mov
mov
sbb
iret
xchg
insb
js
xor
pusha
jnp
and
aad
lods
cld
and
mov
cwtl
push
mov
push
dec
das
push
out
mov
mov
dec
and
rclb
das
lcall
cld
loope
pop
jbe
pusha
add
pop
bsf
inc
jae
cli
sbb
insl
sub
pop
sbb
scas
or
int
xchg
sub
in
or
push
and
sub
daa
gs
fistpll
sbb
mov
xor
and
lcall
lods
mov
stos
ret
mov
dec
push
cmp
mov
inc
fists
jmp
out
das
ret
xchg
shll
jae
stos
lahf
js
sahf
cmp
fistpl
sub
into
outsb
pop
lods
and
lock
inc
gs
mov
and
ficompl
adc
andl
push
mov
sbb
jns
pop
pop
xor
aaa
fstp
sti
aas
mov
pop
push
jnp
test
xchg
xlat
sub
sarl
xor
rcrb
dec
pop
inc
mov
adc
adc
sbb
popa
ss
jnp
mov
sbb
jmp
in
andb
into
xchg
mov
lods
test
mov
push
sahf
out
dec
cltd
mov
mov
mov
adc
adc
nop
adc
xchg
mov
les
dec
decb
push
fisttpll
imul
mov
fcompl
in
xchg
mov
dec
inc
dec
inc
sar
ret
pop
ror
jb
pop
sbb
push
sti
adc
decl
jne
sbbb
insl
mov
push
jnp
ljmp
and
test
push
xor
popf
cmp
mov
pop
add
mov
sbb
fsubrl
shr
pop
mov
inc
mov
dec
adc
popf
xchg
test
int
mov
neg
stos
loop
arpl
jno
cwtl
stos
jecxz
dec
pop
push
inc
jbe
add
sbb
pop
or
lea
xor
jge
inc
xorb
stos
mov
popf
xchg
mov
mov
ja
inc
mov
imul
sub
cmp
jb
bound
outsb
lea
icebp
sbb
jnp
dec
lahf
mov
mov
fs
dec
and
nop
iret
mov
cmpl
cmp
xchg
in
fidivs
xor
aam
push
bound
icebp
ja
mov
imul
lret
adc
sbb
rorb
push
or
mov
mov
imul
seto
inc
scas
adcl
mov
jge
ljmp
jns
in
xchg
sbb
push
sbb
shl
xchg
and
ret
addr16
mov
lds
or
mov
hlt
sub
jne
jae
cmp
ret
add
inc
mov
call
push
and
sub
jns
cmp
test
ret
sub
repz
out
or
cmp
mov
xchg
push
repnz
lods
das
jp
cmovs
add
and
mov
unpckhps
sub
xchg
or
xlat
mov
fmuls
push
aam
daa
jl
icebp
sahf
lahf
mov
in
out
inc
in
fwait
push
movl
pop
xor
lds
fsubrl
adc
mov
popa
sub
out
scas
inc
loopne
jge
push
jecxz
in
and
das
stc
add
rol
or
lea
out
popf
and
incl
and
or
mov
mov
inc
stc
popa
adc
inc
je
pop
push
sub
loope
je
sub
pop
jp
leave
push
dec
mov
movsl
jae
jl
popf
mov
adc
in
repz
cmpsl
gs
data16
outsl
lret
dec
int
dec
pop
mov
shrl
dec
inc
sub
ja
fcompl
daa
addr16
mov
push
loop
out
lahf
cmp
sbb
sbbl
add
popf
add
lret
loop
divb
in
sarb
cs
fadd
inc
inc
insb
dec
dec
dec
adc
inc
xchg
ds
mov
mov
popf
out
test
adc
jmp
mov
mov
aam
mov
jb
or
jne
int3
and
push
inc
cmp
xchg
iret
pop
test
mov
push
in
push
add
sbbb
cmp
lret
std
cmpb
mov
iret
sahf
cmp
stc
es
cwtl
dec
sbb
test
fnstsw
jecxz
cmp
ret
inc
xlat
pop
cmc
ret
scas
jb
pop
bound
jo
lahf
bound
cli
cld
cli
xchg
incl
cwtl
fstl
jge
add
pushf
insb
divb
xchg
es
sub
sbb
imul
xor
mov
jbe
test
push
std
adc
mov
push
xor
das
add
jo,pn
and
sbb
fwait
aaa
in
dec
movlps
movl
std
jg
out
out
and
icebp
ja
push
sub
je
jno
and
xchg
notb
arpl
or
pop
dec
cmp
and
scas
push
cli
xlat
lods
in
repz
in
addr16
test
arpl
popa
pop
jb
dec
and
add
imul
stc
lret
sbb
pop
dec
adc
pop
dec
pop
pop
sub
pop
test
push
sarl
jge
cltd
pop
ja
mov
mov
mov
insb
fiadds
scas
or
lock
cli
adc
mov
aas
ljmp
jecxz
insl
test
inc
mov
popw
mov
or
fsubs
inc
mov
lds
out
out
fs
ret
adc
fwait
aam
xchg
and
lods
push
cs
cmp
lea
mov
mov
mov
loope
lock
mov
out
mov
xchg
jae
mov
fsts
jle
cld
test
jl
shll
sub
inc
and
fisubl
jns
stos
shl
int3
push
imul
jge
jmp
or
test
add
cmp
out
or
not
lock
dec
or
and
pop
test
inc
cld
imul
cs
dec
push
mov
incl
cmc
out
aas
xlat
ljmp
jge
ljmp
dec
cmpsb
lock
popf
mov
dec
outsb
and
sbb
cld
jecxz
shlb
xlat
jbe
or
std
movsb
adc
in
xchg
lods
filds
pop
push
movsl
sar
cmp
and
call
sub
dec
mov
sub
and
sahf
movsb
push
ret
gs
sub
popa
sub
pop
ret
in
push
pop
shll
outsl
sbbb
ljmp
ja
mov
mov
dec
xchg
sarl
push
fildll
enter
pusha
jnp
mov
sarb
add
test
xchg
jl
subl
add
ret
pusha
enter
or
aaa
sub
push
fs
dec
jns
pop
pop
ja
test
nop
add
xchg
lahf
mov
jbe
cwtl
adc
jo
jle
cld
lods
mov
pop
xchg
aam
cmp
and
inc
sti
fists
cmc
cli
mov
add
lcall
inc
mov
mov
test
fisubs
mov
add
mov
mov
ja
mov
cmp
mov
in
lcall
pop
dec
fcomps
lea
inc
adc
lret
pop
ljmp
pop
test
scas
stc
mov
sub
mov
test
cmp
cld
out
adc
and
sub
or
pop
jbe
cmp
jmp
cs
xchg
jle
shlb
jg
ffreep
add
sub
je
add
inc
enter
and
out
shll
fsubp
out
add
sbb
xor
das
inc
fcomip
add
scas
cltd
ret
incl
ret
clc
push
push
inc
jns
mov
lods
xchg
mov
arpl
into
jecxz
add
mov
out
cmp
sbb
hlt
push
adc
test
sub
fbstp
jmp
add
or
popa
mov
fisubrs
jno
xchg
outsl
pop
cld
rcl
cmp
push
daa
dec
andb
fucomip
mov
mov
popf
sub
sub
jl
ficoml
jo
ffree
jle
aad
enter
add
jnp
inc
pop
xor
mov
mov
xlat
cmp
decl
shl
mov
add
das
stos
lret
adcl
inc
adc
imul
in
inc
jae
in
sbb
inc
outsl
add
sub
xlat
call
ss
inc
lahf
stc
out
insl
sbb
movsb
sbb
shll
sbb
sub
ret
inc
xor
or
xor
cmc
stos
adc
mov
mov
rcl
decb
jle
lods
ss
adcl
push
stos
fsubrs
mov
sub
pop
mov
adc
sub
pop
je
int3
push
pushf
clc
and
sub
xchg
mov
imul
enter
xchg
sub
cwtl
dec
xchg
js
addl
mov
imul
xorb
jecxz
adc
test
push
pop
fs
sub
in
leave
or
inc
dec
in
flds
add
int
dec
pushf
ja
dec
lcall
jo
add
mov
dec
ja
mov
mov
jp
or
xchg
xor
outsb
and
insb
jb
mov
adc
aas
ss
mov
outsl
shr
rep
jns
sub
mov
cmp
movsb
adc
push
add
cmc
pop
test
push
outsl
dec
or
shr
outsl
scas
loop
lret
sub
std
outsl
sbb
or
sbb
add
add
fwait
inc
insl
and
cwtl
mov
xchg
mov
into
fs
sub
mov
jbe
in
xchg
add
dec
or
fdivl
xor
add
icebp
icebp
add
fidivl
out
fadd
adc
xor
es
xchg
ret
pop
into
add
mov
jl
clc
sub
adc
pushf
lods
adc
jne
jbe
cmp
xchg
test
jp
repnz
insb
xchg
rolb
ja
jp
popa
fucomi
push
pop
push
pusha
pop
dec
cmpl
jge
push
push
lods
mov
shrb
fldenv
sahf
subl
fisubrs
adc
leave
lea
fcomp
cmpsl
cld
lret
or
xchg
aad
mov
lods
pop
data16
push
push
test
pop
ljmp
repnz
dec
push
and
jae
fistl
arpl
call
jp
mov
sbb
ret
add
dec
pusha
pop
imul
sbbb
repz
aam
pop
inc
add
sbb
jp
fcoml
sub
dec
push
shl
pop
into
cmpl
ja
lret
adc
add
add
lods
lock
sbb
mov
xor
adc
popf
jl
lods
call
sub
fcoml
in
sbb
add
fistpll
pop
xchg
or
out
lods
lcall
and
imul
cmp
sub
cwtl
push
lahf
fiaddl
jmp
nop
dec
popf
std
rol
push
outsl
mov
or
mov
mov
jnp
lods
jp
scas
les
fsub
sahf
jge
mov
xchg
mov
lahf
divl
popa
mov
pusha
mov
xor
inc
mov
adc
fs
fisttpll
fimull
inc
mov
push
sub
enter
stc
pop
mov
cmp
pop
mov
sbb
sbbb
xor
mov
sub
stos
sub
cmp
in
mov
adc
and
enter
add
xor
cmp
add
jo
or
or
dec
stos
rcr
mov
cmp
push
xor
adc
jns
scas
mov
jae
sbb
xchg
sarl
sbb
mov
cmp
or
inc
sub
adc
test
add
pop
xor
mov
xchg
push
out
out
fildl
dec
leave
pop
mov
pop
mov
mov
mov
jbe
push
cmpsl
js
push
push
out
sbb
jae
cli
and
inc
call
cmp
pop
sub
out
pushf
les
push
sub
sbb
in
pop
push
in
and
mov
ss
mov
addr16
aam
xlat
aam
sbb
cmc
inc
xor
push
dec
xchg
cmpsb
pop
in
jns
mov
adc
sub
dec
adc
cli
outsb
lds
fdivr
push
xor
pop
push
push
enter
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
sti
xor
clc
xor
jp
pop
jp
mov
inc
sbb
nop
xchg
fsubr
pop
dec
rorl
mov
icebp
fstp
scas
testl
xor
cmp
mov
push
inc
les
dec
cmp
pop
les
cwtl
in
mov
jb
xchg
mov
leave
stos
addb
sbb
jg
xchg
pop
xor
xchg
mov
sbbl
in
fcompl
push
ja
mov
rcll
gs
sbb
push
mov
mov
sti
or
sbb
ret
xor
test
nop
rclb
popf
in
jno
mov
mov
sub
lret
rclb
or
pusha
add
ficomps
out
mov
iret
pushf
xchg
leave
dec
dec
inc
cmp
cli
xchg
push
mov
adc
and
sti
pop
jmp
out
ljmp
jae
rolb
pop
dec
aam
sub
jo
xchg
push
aas
test
pop
das
scas
jns
mov
lds
mov
jno
test
mov
gs
pop
and
and
mov
in
push
rcrl
add
js
aaa
in
add
hlt
je
adc
imul
xor
push
xor
movsl
push
mov
cli
sbb
dec
hlt
scas
push
inc
or
fsubr
inc
orl
lret
lds
dec
mov
xchg
mov
pop
enter
mov
loope
nop
icebp
dec
xorl
arpl
andl
loop
mov
xor
or
std
std
mov
popa
xchg
out
sub
lods
sbb
cmp
pop
int
mov
jno
mov
add
cmp
stos
jne
fmuls
push
and
xor
aad
sub
mov
ret
lds
sbb
stc
push
push
lret
aad
adc
pusha
xchg
popf
sbb
iret
and
std
das
loopne,pn
test
sub
pushf
loope
into
test
jmp
int
bound
cs
es
jns
movsl
mov
cmp
jecxz
and
lahf
jae
cmp
push
shll
in
jb
lea
es
push
mov
pop
and
dec
add
lea
jge
lret
pop
test
jbe
and
aad
xchg
ljmp
dec
ljmp
sub
xchg
jg
into
ljmp
test
mov
or
leave
inc
leave
cmp
push
ficomps
enter
repnz
movsl
or
cmp
dec
mov
js
and
clc
scas
adc
xchg
mov
dec
pop
lret
mov
fwait
jmp
jge
into
in
repz
lahf
mov
int3
xchg
mov
cmp
loope
test
cmc
push
sbb
mov
cmp
mov
imul
cmpb
or
mov
in
in
fs
sbb
icebp
dec
cli
jmp
js
out
fwait
out
jbe
or
negb
push
sub
frstor
lods
push
loope
stc
test
add
fcom
cmp
mov
loopne
pop
adc
jb
pop
nop
ss
xchg
into
dec
sub
cmp
insl
imul
or
faddp
imul
leave
push
dec
cmpsb
je
jp
bound
pushf
into
cmpsl
insb
jno
pop
and
xchg
xchg
test
pop
pop
mov
popf
push
or
fadds
dec
xchg
cltd
mov
jnp
inc
mov
imul
sbb
and
js
mov
fldl
sbb
orb
push
mov
push
pop
loope
add
test
movsb
push
push
dec
cltd
sub
jmp
enter
sub
shrb
mov
testb
sub
in
movsb
and
call
insb
shrb
jmp
and
pop
movsl
shll
std
push
aam
jmp
or
sbb
and
add
or
mov
xchg
mov
push
dec
cs
movsl
jle
and
stc
or
adc
push
ds
jmp
jl
nop
mov
leave
fdivr
out
push
jbe
and
je
lea
adc
jg
lods
ja
gs
push
aaa
or
scas
repz
das
push
test
xchg
sub
pop
fidivl
xlat
fistl
add
cs
pusha
dec
inc
inc
or
mov
sbb
dec
mov
inc
out
in
pop
inc
ror
pop
pop
jecxz
xor
arpl
mov
dec
jbe
sarl
mov
cmpsl
jne
mov
flds
and
mov
or
jge
stos
movsl
pop
sbb
cmp
int
jp
lods
mov
cmp
loop
xor
push
xchg
pop
mov
and
mov
aaa
scas
je
mov
jl
cwtl
inc
sbb
dec
or
scas
inc
sbb
in
int3
rorb
sahf
mov
or
stos
ret
sbbb
add
xor
mov
cmpsl
mov
sub
cmp
test
stos
mov
mov
jb
outsb
push
mov
popf
clc
std
pop
inc
mov
leave
xor
add
jecxz
xchg
popf
aas
mov
cmp
jae
daa
rorl
inc
popf
sub
mov
mov
inc
add
xchg
lods
mov
jmp
xor
pop
fs
repnz
ljmp
mov
push
sub
dec
call
mov
and
push
loope
mov
cld
mov
ficoml
dec
int
xchg
loopne
or
xchg
mov
aas
cmp
mov
xchg
lods
xchg
jae
push
mov
ja
ret
rcll
cmp
sub
movsl
ret
jle
push
icebp
es
sbb
movsb
fiaddl
pusha
dec
scas
and
push
std
mov
dec
push
enter
imul
in
mov
cs
fcomi
dec
sbb
inc
faddl
pop
fnstsw
sbbb
loopne
rolb
xor
inc
cmp
jns
leave
mov
pop
in
test
and
jns
or
add
mov
sub
jbe
xorb
mov
mov
xchg
pusha
outsl
xchg
xor
jno
shlb
pop
push
adc
cmp
int3
sbb
jle
inc
pop
mov
clc
xchg
sahf
fs
push
in
stos
inc
inc
jp
xchg
pop
mov
xor
pushf
in
in
test
push
sbb
int3
insb
insb
xor
fdivs
imul
scas
mov
xor
jp
loopne
ss
jae
repnz
gs
stos
insb
movsl
push
out
into
cmpsb
cmp
mov
in
push
jle,pn
test
jmp
sti
pop
mov
push
cli
stc
enter
jns
and
nop
dec
fmuls
or
push
jmp
mov
mov
mov
call
fcmove
bound
adc
sbb
jne
andl
jne
outsb
lods
scas
loop
sbb
loope
mov
fcmovnbe
fnstenv
and
ficompl
lret
jp
cltd
sub
outsl
push
sub
movsl
sbb
jnp
mov
movsl
mov
out
fcmovnb
sbb
xchg
sbb
push
movsl
leave
dec
fdivrl
dec
scas
rorl
jne
mov
sbb
sbb
sub
out
mov
shll
popa
xor
add
mov
jle
dec
aaa
in
sub
cmpsb
call
in
jg
repz
dec
mov
dec
das
mov
cmpsl
fists
out
ss
fcomip
scas
mov
mov
movsb
in
xchg
leave
lds
sub
pushf
xchg
pop
shll
sbb
popa
inc
leave
sahf
out
cmp
dec
jl
pop
sub
pop
int
lods
fwait
push
ss
loopne
xchg
pop
pop
repz
pop
xlat
mov
cmp
sti
outsl
push
xchg
jg
dec
sbb
mov
cmc
mov
push
push
mov
mov
jbe
jp
out
jg
cmp
cmc
sahf
inc
loopw
inc
dec
pusha
push
pop
xchg
lahf
mov
cmp
sbb
mov
and
push
push
sarb
adc
sbb
and
pop
and
inc
pop
shl
push
add
push
clc
dec
hlt
lret
ret
cmp
sub
nop
or
ljmp
out
out
jmp
xchg
lea
in
stos
lock
loope
jae
mov
push
sbb
movsl
push
imul
mov
outsb
push
std
mov
pop
inc
pusha
test
mov
push
jl
adc
adc
xchg
fcoms
loop
dec
xchg
decb
das
adc
cmovg
ficoml
loopne
pop
add
cmp
jbe
mov
add
mov
out
outsl
mov
cmpsl
addb
stc
stos
out
mov
in
push
mov
stos
pop
imul
mov
push
adc
loopne
or
mov
mov
insl
sub
jo
mov
repz
adc
insl
xchg
movsl
and
jns
test
cli
sbb
push
mov
inc
xor
or
jae
lds
cs
fcmovnbe
sub
into
out
xchg
push
out
push
mov
fstpt
and
mov
add
ret
dec
jp
inc
sarb
jae
aaa
ret
sbb
lods
push
shrb
clc
rcrl
neg
iret
shl
sub
lret
add
hlt
les
push
dec
aad
xchg
push
and
pushf
xchg
add
call
adc
es
push
add
ja
rcrl
outsb
movsl
pop
out
pop
cltd
inc
mov
insl
dec
or
or
lea
pop
shl
pop
loope
popf
aad
dec
sub
sub
mov
jmp
mov
es
jl
dec
jo
push
jge
and
lcall
push
mov
pop
into
cmp
sub
mov
dec
loopne
mov
sub
mov
filds
inc
push
repz
add
fbld
adc
xor
insl
xchg
movsb
jg
lock
add
pop
mov
sbb
es
test
pop
aaa
add
fsubr
add
inc
mov
insb
lahf
aas
sbb
jp
pcmpgtw
dec
push
mov
rcll
scas
stos
xor
cltd
or
gs
pop
push
and
or
stos
adc
int3
sbb
movsl
pop
adc
dec
clc
adc
std
lahf
lods
jmp
out
inc
popa
loope
test
dec
movsb
sbb
sub
adc
xor
dec
xchg
jge
out
push
movsb
aaa
pushl
fucomi
push
xchg
cltd
inc
add
xor
mov
jo
and
pop
jmp
iret
in
clc
push
and
adc
mov
push
hlt
jne
xor
pop
popa
xchg
mov
sbb
pop
mov
shlb
test
pop
cmc
js
test
gs
test
dec
pop
cwtl
push
mov
mulb
push
or
rcr
jns
test
mov
cmp
xchg
test
cmovbe
sbb
ja
and
fstl
mov
push
dec
aad
sub
out
and
cmpsb
add
push
fisubl
xchg
stos
push
das
insb
mov
inc
add
sbb
and
sbb
sub
js
icebp
stos
jb
jae
pop
sbb
mov
cmp
cmp
mov
jle
imul
fiaddl
jne
dec
or
rol
fmull
lret
xchg
cli
inc
lods
jg
in
scas
push
push
inc
jno
pop
nop
stos
in
lahf
push
cmpsb
incl
jnp
xor
mov
mov
push
dec
jg
xchg
xchg
xchg
mov
dec
ds
and
negb
orb
pop
lret
outsb
jg
fildl
and
test
push
xor
scas
xchg
shrl
dec
cmpsb
jbe
cmp
push
lds
push
jns
inc
or
inc
aaa
mov
add
fistpl
int3
mov
popf
mov
cmpsb
fwait
cmp
or
or
sub
das
mov
loopne
dec
lock
fldcw
mov
fdivrl
push
sbb
jb
repnz
aas
pop
push
mov
lret
mov
cmc
outsl
insb
insl
les
xor
cld
repz
adc
leave
sub
pop
inc
adc
imul
loop
jg
jo
andl
shlb
rcl
jb
xchg
out
cltd
push
pop
call
xchg
cmc
mov
pop
je
dec
sahf
daa
push
push
mov
add
sub
cltd
sbb
cmc
mov
push
push
pop
je,pt
pop
add
jns
inc
scas
mov
idivl
insb
fxch
hlt
mov
push
jbe
pop
xchg
stos
daa
test
lock
inc
lods
ss
std
sbb
pop
push
adc
push
imul
adc
ds
jbe
hlt
adcl
int3
add
jp
push
shrl
mov
popf
cs
into
popa
inc
mov
loop
mov
je
pop
data16
in
xchg
mov
test
ljmp
jno
cmp
xor
inc
fnsave
in
mov
dec
jbe
jle
xlat
sarb
cmp
adc
sarb
enter
push
es
mov
cmpsl
add
xchg
xor
push
jno
cmpsb
mov
pop
iret
and
jp
movsl
fiadds
adc
mov
pop
mov
xor
dec
das
out
aas
js
sub
xchg
sub
ret
js
jnp
loopne
or
sub
cmp
pop
fidivl
xchg
inc
cmp
orl
cltd
sbb
jns
sub
mov
mov
jmp
push
dec
push
adc
pop
add
mov
mov
pop
dec
dec
aaa
aas
adc
leave
mov
lods
cmp
js
loope
jno
pop
push
dec
andl
cmpsl
test
sbb
std
ficoml
aam
xchg
and
ffree
push
push
cmpb
push
or
xor
orb
or
mov
div
int3
mov
inc
faddp
fnsave
rcll
sub
mov
jbe
push
jl
pop
ss
sub
jmp
pop
fsub
jp
push
imul
mov
mov
cmpsl
mov
enter
test
lret
hlt
sahf
mov
pandn
arpl
stos
xor
out
mov
push
leave
cmp
dec
arpl
xor
jnp
popf
fwait
push
add
aaa
stos
pop
mov
mov
pop
xor
sbb
sbb
inc
cli
pop
lret
in
rorl
out
clc
int
jmp
rclb
jb
add
lds
xchg
push
popf
lods
and
popf
add
mov
cld
cltd
out
or
jns
cli
adc
or
jbe
pop
jno
in
popa
call
sub
in
push
mov
repnz
push
aad
dec
jne
hlt
xchg
xor
fldenv
aad
mov
in
imul
ljmp
xor
fcoml
lcall
rcll
lcall
sti
notb
add
ja
or
out
push
mov
adc
ja
add
xchg
sub
lret
jae
inc
ss
out
cmc
or
data16
inc
lock
inc
jno
push
fists
jo
push
add
mov
or
enter
loop
jmp
push
xchg
test
jg
push
mov
jb
movsb
stos
test
ss
arpl
xchg
mov
jno
xchg
mov
lods
fsin
mov
cmpb
xor
sub
xchg
ficompl
dec
fiadds
jns
cmp
sbb
out
mov
push
dec
mov
cmp
push
adc
or
cmpsb
push
and
jne
jle
fucom
cmp
outsl
ss
or
insl
int
sub
arpl
xor
mov
dec
fistpl
adc
push
scas
dec
dec
add
xor
or
mov
or
sbb
idivl
into
jmp
cs
rorb
cmp
loop
dec
adc
fs
push
sets
rcll
lcall
sub
cs
mov
test
addl
dec
rol
or
es
fisubs
adc
inc
dec
jl
xchg
out
out
data16
mov
push
les
test
cld
je
movsb
int3
mov
popf
adc
mov
inc
shr
mov
out
test
adc
daa
nop
inc
mov
push
xchg
cmp
shlb
pop
ss
mov
ljmp
lods
xlat
mov
xor
pop
and
push
pop
and
lods
out
sahf
xchg
mov
sbb
and
popf
std
jge
fdivrp
fbld
popf
mov
push
leave
mov
in
inc
fisttpl
push
xchg
jl
push
test
pop
add
nop
cmp
shl
xchg
pushf
rorb
pop
adc
push
inc
adc
add
or
popa
jno
fnsave
out
jb
and
shlb
int3
sbb
push
push
push
shll
mov
xor
fsubrs
repz
sbb
test
insl
mov
das
sahf
outsl
setp
xchg
inc
or
cmp
and
gs
shll
sbb
xchg
sahf
mov
adc
cmp
dec
stos
xchg
inc
pusha
cmp
lcall
xor
mov
mov
mov
mov
cld
int3
shr
js
aad
sbb
push
cltd
jo
mull
bound
adc
mov
add
lret
dec
add
sbb
adc
cltd
mov
rcr
mov
stos
or
mov
add
jns
mov
adc
pop
out
xor
adc
push
add
ror
mov
bound
xchg
test
adc
pop
int3
sub
or
call
dec
loope
push
xor
mov
into
idivl
add
das
ficoms
add
aam
movsb
insl
add
add
ficompl
lock
int
aaa
pop
xor
push
or
push
fs
and
out
loop
fistpl
inc
dec
fistpll
or
imul
xchg
inc
lods
maskmovq
testl
mov
mov
push
std
mov
hlt
repnz
mov
mov
scas
out
sti
inc
out
jp
dec
pop
stc
cmp
push
dec
lret
mov
out
sub
push
rcll
fs
dec
popa
enter
in
int3
movsl
pop
inc
or
fxch
cmp
inc
test
jbe
data16
stos
xchg
and
mov
xchg
fsubrs
or
jle
mov
lods
stos
inc
lcall
sbb
cltd
mov
jge
mov
ljmp
imul
fisubl
testb
or
mov
data16
lea
xchg
int3
test
repnz
add
jo
and
adc
jecxz
push
mov
pop
or
xchg
or
mul
daa
and
sbb
je
mov
cmp
xor
insb
add
mov
push
aad
mov
jmp
jne
xor
mov
jbe
sbbb
fcmovne
dec
inc
jae
xchg
repnz
jns
sub
aaa
into
bound
repz
out
hlt
adc
sbbl
pop
pop
mov
xor
mov
loope
test
scas
mov
sub
dec
sbb
pop
sub
pop
popa
or
daa
lock
adc
push
movnti
cltd
mov
xchg
adc
sbbb
pop
mov
sti
stos
jae
stos
jmp
movsb
movsb
sar
fisubl
mov
lods
cwtl
es
rcrl
xor
jge
outsl
sbb
pop
lcall
movb
je
and
idiv
mov
pop
je
insb
aas
cmpsl
movsl
sbb
or
xor
pop
mov
and
bound
push
mov
mov
stos
lods
outsb
and
cmp
sahf
incl
les
sar
adc
lret
idivl
or
adc
sbb
imul
jl
jg
popf
inc
jecxz
test
movsb
popf
lods
mov
das
test
aaa
test
push
push
pop
adcl
jge
scas
rolb
insl
and
orb
lret
sti
test
mov
sbb
adc
mov
and
mov
aad
jns
out
stos
sbb
fidivl
cld
outsb
push
mov
cs
adc
arpl
lock
ud2
je
xchg
lock
cwtl
adc
push
inc
cwtl
cmp
add
ljmp
popf
push
cmp
arpl
aad
and
mov
div
pop
jg
push
push
mov
hlt
pushf
mov
mov
insb
ret
pop
push
shlb
out
and
pushf
sub
cmp
lods
je
mov
xchg
imulb
mov
inc
jne
mov
push
in
lock
int3
das
std
nop
lret
out
lods
cs
rorb
lods
push
jle
ja
mov
lea
popf
cmp
sbb
insl
fdivs
dec
js
dec
mov
les
gs
enter
xor
lods
ss
xchg
lds
ret
inc
add
outsl
mov
inc
adc
xchg
inc
inc
mov
loope
cwtl
outsl
sbb
pop
imul
add
ret
push
movsb
jp
daa
adc
repz
std
sub
mov
outsl
shlb
push
out
subl
push
dec
mulb
movd
sub
adc
jecxz
push
lret
jno
test
xor
pop
stc
jle
daa
aaa
outsl
mov
jmp
out
sub
pop
inc
and
pop
mov
or
mov
stos
sub
movsb
pop
fcmovnb
adc
fdivrl
mov
or
out
lds
mov
jg
int3
fisubl
or
arpl
jge
add
sub
cltd
push
pop
lcall
mov
jge
pop
push
mov
xchg
add
data16
aad
xor
call
repnz
test
cmp
cltd
push
lcall
outsb
xchg
cmpsl
not
cwtl
or
add
in
mov
cltd
dec
push
cmpsl
lods
scas
rcrb
dec
cmpsb
push
cwtl
and
pop
sub
push
jge
xlat
mov
adc
scas
call
dec
add
adc
jnp
fldt
fsts
push
dec
xor
sbb
aam
cwtl
mov
sub
add
pusha
sub
jo
imul
inc
sti
adc
mov
fisttpll
leave
inc
cmc
push
out
mov
add
xchg
or
cmc
xor
cmp
push
ds
mov
jecxz
mov
rorl
in
enter
imul
gs
arpl
inc
out
jo
xchg
mov
pop
mov
dec
mov
and
ja
jle
sub
mov
out
subl
cli
clc
leave
add
cmc
out
xchg
sub
xor
lahf
pop
sti
pop
adcb
ret
fs
xchg
inc
pop
xchg
inc
js
mov
sti
inc
add
aas
inc
and
repnz
adcl
mov
jp
fistl
or
cmpsl
jbe
dec
mov
lods
and
mov
adc
orb
pop
das
fcomps
jmp
xchg
fadds
inc
jmp
xor
mov
cli
sub
or
es
dec
testl
js
sbb
or
leave
xor
test
in
xchg
sub
testl
test
movsb
mov
cld
pushf
loopne
dec
dec
into
cmpsl
or
mov
xchg
xchg
cli
icebp
popa
push
loop
imul
and
cmp
push
jmp
or
repnz
arpl
ss
dec
fiaddl
and
jge
sub
outsb
ret
pop
mov
stos
lret
mov
out
scas
int3
ds
lock
lahf
in
icebp
lcall
pop
inc
sarb
jne
and
mov
outsl
jp
popf
sub
and
imul
or
cmpsl
call
daa
sub
jns
repnz
and
xor
mov
insb
cmp
push
ret
jne
ljmp
out
fdivrp
inc
jmp
jo
adc
fadds
add
outsl
lock
dec
cli
cmp
pop
mov
movsl
mov
pusha
mov
incl
cwtl
ret
pushf
mov
pop
cltd
mov
add
inc
push
test
sub
sbb
movsb
xchg
jne
cwtl
fidivl
jns
pusha
sbb
jl
sub
push
sahf
lret
and
inc
jns
xor
pop
cmp
aas
es
jnp
je
mov
sub
fcoml
push
out
les
popf
adcb
mov
mov
cmp
mov
sbb
and
cmpb
dec
mov
add
mov
pusha
fdivs
inc
repz
cmc
push
cmp
cwtl
scas
push
mov
mov
cli
adc
icebp
pop
lods
filds
lods
into
xchg
arpl
addl
aaa
xor
test
maskmovq
negl
mov
sub
ret
pop
jbe
inc
jns
sbb
jne
jne
cmp
loope
mov
test
sub
mov
mov
mov
adc
sbb
mov
dec
imul
mov
test
cmp
push
push
jno
and
fadds
aas
imul
jge
scas
xlat
lock
mov
roll
cmp
data16
jo
mov
sbbb
clc
popf
in
scas
add
add
jle
mov
pop
xchg
adc
lods
jnp
pusha
mov
and
pop
jle
pusha
mov
sbb
pop
cmpsl
loope
int3
fwait
gs
adc
push
cmpl
enter
mov
movb
sbb
out
jecxz
daa
out
push
xor
mov
sbbb
mov
cmc
mov
data16
aad
cmp
or
pop
inc
mov
sti
lds
sbb
gs
inc
rorl
out
sub
imul
std
add
inc
jg
in
xchg
loopne
mov
xchg
mov
es
mov
sub
lea
fs
dec
adc
cmpsl
or
mov
mov
mov
xor
into
xlat
and
push
cmpb
push
sti
xchg
ds
mov
cmp
adc
jecxz
add
imul
pop
stos
lds
push
icebp
lds
lcall
repz
shll
xchg
inc
fistpl
test
jp
add
add
hlt
movsl
pop
movsb
loopne
ja
inc
jge
mov
sub
ret
test
or
les
jecxz
scas
lods
cwtl
sbb
repnz
movsb
data16
lcallw
sbb
nop
dec
fsubrl
fsubr
and
stc
jecxz
jge
test
pop
lahf
xor
scas
push
loope
push
dec
fmull
outsb
popa
jge
call
mov
and
mov
out
out
fnstenv
jae
mov
sbb
lea
int3
pusha
lcall
cs
loopne
sarl
push
jle
jns
mov
and
xchg
mov
mov
imul
icebp
xchg
stc
mov
in
movsb
mov
in
sub
sbb
jnp
es
rcrl
push
cmp
cmp
xchg
sbb
push
push
call
es
mov
and
push
out
out
loop
enter
repz
and
sbb
data16
nop
negb
push
xchg
push
pop
cmovb
xchg
ja
mov
leave
leave
cmp
in
inc
pop
sub
dec
xor
outsl
sbb
pop
mov
outsb
fidivl
pop
or
dec
add
inc
add
xchg
or
push
jle
insb
push
iret
sbb
popf
shll
aad
incl
sub
sbb
pop
mov
jmp
push
push
loope
sub
sbb
jp
gs
mov
mov
out
adc
xchg
movsb
fs
cs
mov
adc
ja
sub
mov
adc
mov
aam
mov
pop
mov
mov
imul
sahf
push
aas
jp
push
ss
in
stos
sub
lds
pop
scas
les
lret
cmp
push
sub
cmpsb
aas
pop
jmp
jp
pushf
stos
mov
push
xorl
sbb
jle
xchg
loopne
lahf
aad
jge
out
push
cmpsl
xchg
jle
xchg
add
xchg
leave
ret
or
into
mov
dec
lret
lods
dec
cmovge
push
dec
or
test
insl
pop
cltd
add
addr16
adc
test
push
mov
mov
xorl
push
hlt
or
and
jge
sbb
sbb
loopne
stc
mov
xchg
or
and
inc
enter
jge
jns
lret
ror
xchg
stos
add
mov
xlat
or
jbe
push
sahf
adcl
and
dec
pop
xor
lcall
movsb
sub
cmp
mov
leave
orb
test
mov
iret
imul
mov
sub
mov
pop
orb
adc
mov
ja
out
mov
and
nop
dec
rorl
mov
std
xchg
xchg
and
mov
ret
sub
clc
cld
rcll
mov
jnp
aam
out
jle
or
inc
cmp
jae
and
pop
test
or
mov
mov
fcompl
lock
add
test
pop
jo
enter
jle
push
add
movsb
popa
les
mov
fwait
out
cmpsb
push
hlt
popf
xchg
pop
push
lods
xor
enter
js
divb
push
sub
and
rclb
loop
pop
leave
dec
sub
adc
repz
rcll
lahf
sub
pop
sub
repz
inc
push
es
hlt
mov
inc
xchg
repnz
frstor
mov
xor
adc
rdmsr
fsubl
fldcw
inc
data16
mov
lods
xchg
jno
js
rcr
imul
ret
hlt
mov
cwtl
jmp
xor
pop
push
lahf
movsb
cmpsb
mov
lret
loopne
in
mov
jne
rolb
xchg
rcr
ss
flds
ret
add
pop
ret
aad
jns
xchg
jg
mov
xchg
loop
sub
stc
jl
int
jecxz
iret
pop
cmp
push
xor
xor
int3
mov
xor
test
mov
fs
movsb
jmp
inc
jp
out
jmp
cs
test
dec
mov
mov
push
ret
mov
out
leave
jno
sub
aad
dec
push
es
in
sbb
push
cld
push
int3
or
jge
ret
mov
sub
imul
jg
mov
inc
imul
jne
jp
fisubs
jecxz
inc
or
repnz
dec
dec
adc
xchg
add
add
imul
int3
ja
sbbb
xchg
stos
dec
add
pusha
mov
ja
cmpsb
fimuls
fildll
cmpsl
sbb
popf
ljmp
dec
int3
jmp
das
into
or
cmp
sub
aaa
xchg
push
inc
dec
out
rcr
scas
adc
out
testb
es
sub
lds
dec
hlt
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
xchg
cmp
jp
pop
jp
adc
cmpl
cmp
aad
scas
xchg
mov
push
in
sti
idiv
jge
mov
out
imul
inc
mov
aaa
push
mov
es
cmc
in
mov
xchg
fistps
jg
sbb
xchg
pop
pop
dec
dec
push
shll
loop
imull
pop
ljmp
mov
clc
pop
stos
pop
aad
lea
jnp
imul
or
push
dec
xchg
inc
lods
testb
jb
pop
cmc
scas
popf
int3
fstpl
filds
leave
std
push
fwait
xchg
pop
ds
fisttpll
cmc
mov
mov
fisubrs
pop
or
and
mov
popf
dec
push
mov
xchg
sub
xchg
push
or
loopne
stos
mov
jp
test
push
les
icebp
sahf
int3
cld
lock
and
shl
hlt
adc
push
adc
std
out
or
data16
cmpsl
mov
shrb
lds
or
or
jo
and
rcrb
aas
add
pop
int
aam
or
pop
mov
add
loope
inc
xor
icebp
in
sbb
xchg
add
repz
push
xchg
cwtl
imul
in
repz
adc
fs
jmp
popa
in
xchg
add
leave
lds
dec
or
enter
test
add
adc
mov
fldt
mov
imul
movsb
das
pop
pop
inc
cmpl
push
sub
nop
pop
inc
outsl
and
fcmovu
push
xchg
xor
cs
pop
icebp
ss
jb
xchg
addr16
ss
icebp
in
nop
push
pop
pop
loop
add
imul
push
pop
jge
jge
cmpsb
mov
repz
sub
mov
add
fidivrl
mov
jecxz
mov
mov
iret
cmp
stos
roll
and
xchg
xchg
mov
xlat
imul
stos
push
jl
jle
jae
sub
xchg
cld
loope
cmp
ljmp
popf
jmp
sti
push
jbe
fnstcw
dec
rcll
int3
loopne
mov
cmp
pop
push
pop
das
fcomps
sti
mov
cmp
js
into
mov
fcmovb
lcall
jp
inc
push
iret
push
movsl
jne
inc
fbstp
aad
inc
sbb
insl
scas
xlat
jmp
push
adc
xchg
mov
fwait
push
mull
mov
adc
mov
sub
test
mov
cs
mov
inc
gs
xor
jge
push
fidivl
jmp
out
xchg
pop
dec
ljmp
ss
out
and
dec
mov
outsb
aad
push
inc
sub
xchg
pushl
fcomps
sub
stos
push
fcmovu
push
jl
std
daa
cwtl
fcoml
lret
repz
daa
into
cmp
ficoml
mov
out
shrb
xor
mov
sub
add
xchg
push
fs
pop
jns
xor
push
inc
dec
sahf
rolb
push
dec
scas
sti
scas
test
idivb
mov
adc
jecxz
popw
icebp
pop
leave
inc
cmpsl
ret
fnstenv
cs
loopne
mov
dec
inc
add
rcl
cli
dec
jecxz
fisubrs
jp
mov
pop
mov
fisttps
pop
mov
or
mulb
jecxz
pop
lcall
jecxz
popf
ss
mov
fdivr
push
sub
pop
and
inc
fmuls
pop
mov
sub
lcall
out
inc
stos
lea
out
cmpsb
js
sub
xchg
sbb
ja
jg
lods
push
mov
shrl
inc
or
outsb
or
test
sahf
lret
rcll
cltd
jns
in
outsb
jbe
jns
jl
and
in
lock
sub
xchg
dec
jle
xor
pop
loope
aad
jmp
jg
mov
adc
movsb
mov
pop
popa
repz
hlt
fs
lahf
jl
pop
scas
and
cmp
xor
outsl
aas
inc
pop
xor
mov
mov
add
dec
push
mov
aad
daa
add
and
sub
dec
mov
jne
in
das
orl
xchg
dec
lock
adc
out
mov
je
call
and
inc
or
mov
repnz
movsl
mov
and
and
inc
mov
lret
rolb
iret
sti
es
out
mov
pop
push
out
mull
testl
in
cmc
dec
mov
cs
mov
pop
jl
pop
sbb
or
push
int
data16
xchg
cmp
pusha
push
out
jae
pop
test
sbb
test
movsl
pop
testb
mov
cmp
mov
pop
inc
or
into
xor
lods
mov
movsb
out
sub
movsl
inc
loopne
sbb
mov
dec
nop
jno
subb
add
ljmp
cs
fs
ds
or
mov
cmpsl
data16
mov
pop
xor
lock
add
popf
enter
pop
jno
jmp
into
hlt
insb
jmp
das
push
inc
imul
pop
or
push
lcall
int3
mov
cmp
in
dec
jns
cld
out
pop
add
bound
xchg
jmp
lahf
ljmp
shll
xchg
stc
cmpsb
jle
push
add
fsubrs
adc
mov
jl
mov
sarl
shrb
ds
jl
idivl
imull
das
cmpsl
inc
dec
xchg
jae
jmp
cwtl
pop
bound
enter
lock
test
fwait
or
and
test
loop
fnstsw
lds
ljmp
cmp
and
mov
sub
lds
pop
inc
gs
and
inc
push
push
arpl
outsb
jbe
dec
adc
outsb
sbb
lods
out
xchg
dec
xchg
xchg
rcr
pop
pop
mov
sarl
cs
sub
lea
mov
mov
xchg
mov
ss
pop
repz
stos
dec
cmp
popf
add
adc
pop
test
rcrb
adc
movsb
xor
dec
pop
jp
scas
roll
jp
lret
movsb
fxam
dec
inc
cli
gs
inc
jp
orl
adc
mov
lret
std
dec
das
push
push
je
test
xchg
xchg
xlat
or
stos
lret
and
pop
jnp
ror
lds
or
add
push
xchg
jge
cmc
pusha
outsb
adc
dec
mov
cs
les
in
jge
cs
inc
test
fistl
inc
xor
xchg
jne
mov
or
stos
lahf
or
dec
cmp
pop
jne
pop
push
mov
stos
rorb
adc
andl
insl
lret
push
scas
push
inc
jl
ljmp
push
mov
jnp
dec
mov
pop
clc
cmp
andb
or
lods
enter
mov
xor
sub
sbb
lahf
push
mov
pop
mull
adc
shrl
cmpsl
ljmp
jp
sti
xor
pushf
jecxz
cmp
loopne
sti
repz
mov
fucom
xlat
outsb
sbb
pop
add
jl
sbb
and
xor
std
pop
sub
cli
or
mov
or
mov
jmp
xlat
mov
xor
sub
and
mov
add
sub
ffree
jne
aam
pop
test
insl
sbb
lock
daa
daa
dec
sarb
push
cmp
cmp
icebp
mov
cltd
or
addr16
lea
pushl
int3
adc
mov
xchg
push
add
int3
xchg
cmp
push
xor
xchg
add
into
clc
xor
jbe
jo
cwtl
lret
inc
repnz
dec
outsb
clc
mov
sti
cmp
cmc
sbb
js
pop
cmp
add
mov
mov
jne
sub
outsb
jmp
inc
pop
repnz
jmp
lock
fcmovb
sbb
ds
mov
arpl
fidivl
and
push
inc
jl
or
shll
sub
mov
pop
imul
adc
stos
imul
outsl
and
sbb
or
dec
mov
mov
sti
out
mov
add
jnp
data16
or
push
sbb
rcl
adc
pop
push
add
sahf
jnp
das
add
cld
int
pop
addb
xor
add
mov
cmp
cli
and
sub
jge
xchg
or
push
mov
sbb
adc
mov
mov
adc
pop
cmp
test
mov
push
cs
mov
add
jne
mov
andb
fidivrs
std
mov
ret
cmp
rcll
int
and
scas
jno
daa
or
adc
out
inc
jno
pop
mov
push
movsb
shll
and
jae
jg
fwait
xlat
stos
popf
out
push
fdivp
push
lea
jl
clc
sub
cld
adc
rcll
leave
fisubs
jl
adc
inc
mov
xchg
mov
movb
mov
shl
pop
jne
mov
pop
das
mov
push
xchg
mov
in
jo
xchg
sub
jbe
aam
jl
out
dec
mov
jo
jge
xchg
sbb
and
test
push
popl
gs
push
aam
cwtl
add
in
xor
data16
pusha
mov
sahf
test
and
fistpll
sbb
fs
inc
outsl
adc
xor
xor
dec
mov
call
adc
sub
clc
aam
jge
int3
call
push
sub
and
mov
mov
int3
and
repz
and
push
test
fsubrl
push
jae
jmp
lret
pusha
cmpsl
cwtl
add
and
mov
int3
and
cmpsl
pop
lock
cltd
sarl
call
sub
in
scas
xor
roll
movsb
and
loope
popf
mov
xchg
imul
cmp
pop
cmpb
imul
cwtl
add
mov
push
std
sahf
subl
rorl
push
sbb
js
stc
push
ficompl
add
pop
out
mov
xlat
dec
mov
add
or
mov
and
push
push
cld
mov
sbb
sbb
lods
test
cmp
or
adc
add
shrl
add
loopne
rorb
and
mov
sar
xchg
es
out
test
loope
movsb
aad
fwait
mov
mov
enter
je
cmp
in
add
mov
pusha
insl
jg
xlat
lret
xchg
cmpsl
arpl
adc
leave
daa
mov
add
mov
dec
sub
imull
rorl
fcmovnb
pusha
xor
outsb
pop
test
fisubrl
std
dec
xlat
ret
sbb
adc
ja
call
frstor
sbb
xchg
push
pop
push
stc
int3
add
dec
mov
jo
xchg
cltd
push
xchg
cwtl
cmc
jmp
imul
call
aad
das
xor
sbb
adc
sbb
cmc
scas
and
dec
inc
arpl
out
js
dec
xor
dec
pop
aad
pop
add
scas
pop
xlat
jno
cmc
mov
jns
cld
cmp
add
outsb
pop
popa
push
sbb
mov
jg
ja
xchg
xor
xor
cli
rcrl
and
mov
fdivrs
sub
jp
popl
mov
mov
push
jae
int
lcall
iret
dec
leave
rcll
adc
xor
daa
in
or
xchg
insb
adc
ljmp
sarb
out
insl
ret
fstpl
jge
call
inc
or
add
jge
lcall
icebp
call
lret
imul
dec
shll
lret
mov
out
stc
loop
jo
rcrl
in
addr16
mov
pop
and
dec
and
scas
jae
subb
popf
mov
or
stos
mov
mov
pop
movsb
dec
mov
ret
movl
xor
jge
je
hlt
dec
filds
sahf
push
filds
lods
rcll
inc
push
icebp
xchg
in
add
pop
sub
push
jmp
xchg
jb
and
fdivrl
incl
add
repnz
jge
aas
xchg
and
insl
jne
loopne
int3
daa
xchg
jmp
out
xchg
cmpsl
or
push
cwtl
cmpsb
stos
or
adc
xor
sub
stos
enter
fdivp
scas
enter
pop
mov
fdivl
aad
into
mov
mov
pop
add
jne
shr
ret
mov
mov
outsb
xchg
pop
rcll
out
and
mov
jmp
jno
and
or
in
jle
mov
sbbl
outsl
sub
pop
std
add
pusha
pop
je
sti
jecxz
cltd
fld
ret
adcb
es
aaa
xchg
scas
jecxz
adc
lock
sbb
hlt
in
fsubrl
push
cs
and
or
out
fsubp
imul
arpl
loope
jae
xor
insl
or
inc
leave
or
add
inc
sub
stos
iret
testl
imul
xchg
sub
adc
or
decb
js
sub
push
insb
and
xchg
cmpsb
out
add
es
mov
clc
xchg
clc
sub
movsl
adc
repnz
or
xchg
rorb
stc
imul
xor
push
push
xchg
fldl
cmp
cmp
xor
inc
shlb
jl
mov
cmp
or
shrb
scas
adc
iret
mov
sub
or
cmp
jnp
and
sbb
mov
jno
roll
sti
sub
orb
mov
loop
ficompl
inc
xchg
mov
dec
cwtl
or
in
cwtl
dec
int
jb
xchg
pop
aas
sbb
jge
pop
shrb
sahf
xor
subl
cwtl
loop
sbb
xlat
cmp
cld
call
jg
mov
adc
xchg
dec
and
adc
lahf
outsb
dec
stos
dec
shll
popf
fdivrl
adc
and
mov
cld
fwait
or
push
dec
gs
push
mov
jp
xchg
sarl
cmp
arpl
pop
ja
movsb
fnstcw
mov
mov
jae
cmp
sub
push
rcll
xchg
jp
sbb
ss
gs
sbb
cmp
mov
ret
adc
mov
stos
insb
sbb
enter
adc
stos
cmpsl
mov
andl
mov
fcos
subb
mov
adc
jmp
mov
loop
mov
jmp
xor
idivl
mov
xor
aad
leave
imul
sbb
adc
mov
cmp
pop
jg
jle
jmp
cltd
jo
or
xchg
push
test
xor
cld
pop
ja
outsl
iret
mov
mov
dec
dec
lds
jae
fdivrs
xchg
add
mov
dec
lock
popa
jge
mov
lods
loop
push
int3
mov
fstpt
jne
ret
mov
in
fwait
shll
push
loop
mov
push
icebp
div
mov
inc
push
flds
inc
mov
mov
daa
push
fsubs
xor
or
stos
jbe
dec
push
movsb
push
testl
jns
int
ljmp
sub
aad
and
mov
dec
lods
les
test
xlat
shll
shrb
push
sti
add
arpl
push
dec
cmp
fldenv
inc
aam
lcall
hlt
sti
mov
or
cli
mov
xchg
adc
jl
xchg
or
xor
pop
or
mov
rep
mov
cmp
sbb
ljmp
mov
insl
push
js
or
addr16
jl
jne
sbb
xchg
jg
imul
mov
popa
insb
aad
xor
mov
mov
sti
in
movsl
fcmovnu
cltd
jo
aam
dec
dec
cmp
leave
push
xchg
cmp
shrl
out
fldln2
dec
sbb
fwait
xchg
lods
or
sub
jne
bnd
and
lods
cmp
add
xchg
shll
cmp
xor
mov
pop
fdivl
xlat
mov
dec
std
ja
ds
and
xchg
or
sub
pusha
or
loopne
lea
stc
xor
sub
push
out
add
or
cwtl
rclb
test
or
sbb
jmp
lret
push
movsb
jno
xor
push
pushf
insb
loop
bound
xor
inc
xor
repz
fistpl
lcall
jp
mov
iret
out
and
push
jp
mov
sub
mov
pusha
add
or
add
mov
dec
xchg
pop
repz
out
ret
in
push
mov
ficompl
xor
cwtl
jnp
pusha
add
xchg
stos
mov
mull
and
sbb
pushf
dec
cs
shl
flds
call
jge
push
jg
jmp
and
pusha
adc
and
cmpsb
clc
stos
fs
add
mov
mov
cmpsb
in
inc
adc
aam
xchg
imul
mov
divb
mov
add
aam
push
bound
les
ret
int
add
and
cs
hlt
cmp
mov
fs
sbb
and
xor
mov
push
pop
pop
adc
adc
dec
lret
popf
sbb
loopne
mov
lahf
jo
jecxz
jl
daa
sarb
mov
push
ja
andb
lds
repnz
or
sub
enter
mov
je
fldenv
fsts
aad
mov
dec
push
xor
xor
and
orb
xchg
imul
data16
shlb
jae
mov
sub
ret
mov
xlat
lea
out
push
sbb
dec
push
flds
rcll
lock
jnp
lods
sub
std
jle
fsubrs
mov
std
mov
jnp
in
inc
sub
sbb
cmp
dec
and
pop
lea
dec
jge
pushf
jle
jnp
mov
movsl
loop
sbb
rclb
cmp
cmp
ds
pushf
and
cmp
fs
mov
dec
aaa
enter
push
out
push
mov
sbb
data16
pusha
jp
insb
test
pop
sub
clc
cld
and
out
call
les
repnz
mov
inc
test
cs
outsl
jle
stos
scas
jge
stos
mov
stos
pusha
test
xchg
sbb
sahf
test
lret
add
xchg
notl
je
sti
xchg
shl
std
rolb
aam
shlb
lea
mov
or
repnz
sub
out
popa
aaa
push
icebp
pop
loopne
jb
loop
jno
test
ret
sti
movsl
add
lea
fisubs
xor
cmc
dec
cmc
cmp
popa
sub
xchg
mov
inc
sub
stos
mov
fstsw
ds
mov
repz
jno
mulb
push
mov
push
repz
rcr
cmpl
xchg
frstor
sub
jae
adc
fsubs
stc
cmc
ss
pushf
jne
rcrl
outsb
loopne
out
stc
mov
adc
and
mov
int
cmp
jecxz
jg
clc
insb
pop
push
aas
xchg
sub
cwtl
xor
pop
inc
sub
xor
jg
insl
sahf
cmc
and
sub
mov
stc
loop
mov
int3
adc
add
xchg
lret
fdivrl
xor
or
push
in
or
push
loopne
enter
mov
loope
cmp
out
imul
xorb
sbb
ret
push
or
repz
stc
inc
dec
jmp
dec
leave
mov
adc
mov
and
adc
cmp
jp
sbb
mov
into
and
mov
inc
inc
inc
mov
dec
movsb
pop
dec
insl
hlt
inc
out
ss
into
cs
add
sub
mov
cmp
pop
mov
mov
push
cmpsb
in
cmp
test
inc
std
add
jle
gs
xchg
sbb
iret
xchg
mov
xchg
mov
negl
in
sub
or
es
lods
sub
clc
loop
xchg
push
dec
data16
aam
stos
push
mov
ljmp
jle
stc
xlat
xlat
sub
gs
mov
in
addr16
rolb
sahf
arpl
cmp
jecxz
xchg
pop
mov
into
inc
divb
out
push
mov
xchg
movl
insb
icebp
test
pop
cmp
test
adc
mov
cmp
and
or
mov
filds
mov
movsb
ja
or
pop
push
shll
xchg
sub
push
jmp
ss
cmpsl
mov
jle
add
lods
xchg
lock
jo
pop
cmpsl
fmull
rolb
test
andps
jb
adc
mulb
ret
sbb
cwtl
aam
cmp
fwait
xchg
cli
pop
xor
mov
jnp
loopne
xor
mov
cmp
ret
daa
xor
setle
sbb
jg
pusha
push
adc
mov
cmpsb
pusha
in
call
cmp
sarl
mov
into
adc
and
jmp
fistpl
mov
movb
out
adcb
subb
repz
or
mov
mov
pop
fdivrl
jmp
pop
dec
loop
pushf
xorb
js
lcall
dec
lds
sbb
sbb
in
xchg
jno
scas
negb
push
aaa
xor
adc
leave
pop
cmc
jge
lcall
sub
pushf
add
pop
mov
push
cmp
push
call
sbb
seto
sub
ss
push
pop
mov
popa
or
dec
scas
fistpl
push
add
pop
jb
and
test
jg
sub
and
iret
lcall
aam
iret
pop
dec
icebp
hlt
sub
enter
xor
cwtl
clc
pop
pusha
sbb
inc
xchg
int3
sbb
pop
xor
add
sbb
in
jnp
mov
pop
mov
fimuls
inc
std
das
sub
cltd
aam
lods
popa
mov
pop
push
adc
gs
div
inc
inc
mov
popf
shll
dec
jecxz
dec
jo
fwait
pop
mov
ds
add
inc
iret
mov
or
dec
sub
mov
dec
test
lock
mov
mov
mov
xchg
ja
ds
mulb
stc
mov
cmp
imul
jecxz
ss
cltd
mov
push
scas
fnsave
testb
sahf
insb
ds
jno
push
std
lret
out
pop
mov
push
lret
inc
cld
mov
xchg
pop
fs
inc
repz
lret
inc
test
cmp
mov
xchg
neg
in
shl
cs
imul
jg
push
dec
pop
mov
in
mov
cmp
push
push
nop
push
jecxz
pmovmskb
mov
sar
sub
fidivl
lea
lcall
scas
popf
xchg
shrb
aad
repz
out
jmp
rorw
sub
out
lods
mov
ret
dec
cmp
jecxz
rcll
push
dec
std
push
lock
sub
pop
xchg
cmpsl
and
and
xor
xchg
push
cli
fldt
fisttps
mov
iret
push
cs
sbb
pushf
lret
cmpl
xchg
pop
mov
cltd
push
and
repnz
xor
or
std
je
mov
sub
push
aad
xor
inc
xlat
jno
mov
xchg
ja
test
push
arpl
xor
sub
loopne
arpl
jns
mov
outsb
out
inc
lahf
cltd
mov
add
imulb
imul
cmp
mov
popf
dec
mov
nop
dec
rcrl
or
outsb
in
adc
and
gs
jne
xchg
cmp
sub
test
shl
lds
pop
mov
push
xchg
pop
aad
xchg
jmp
push
mov
lahf
lods
push
das
or
push
xchg
lret
aas
in
imul
in
jbe
sub
js
cltd
inc
jno
xchg
lods
leave
dec
xlat
hlt
jno
mov
dec
xchg
data16
iret
xchg
das
call
cli
push
arpl
ja
test
rcll
inc
xor
mov
outsl
inc
push
fwait
xor
aam
rorl
mov
std
and
sub
mov
cwtl
ss
pop
jg
cltd
xchg
inc
mov
dec
inc
out
jne
frstor
mov
add
ret
cld
and
js
jne
loope
pop
xorb
push
fimull
out
ljmp
adc
ret
and
and
add
push
dec
sbb
and
outsl
lock
fwait
fwait
sbb
xor
and
rcl
aas
pop
out
or
mov
fimuls
nop
push
mov
push
sti
xchg
lahf
or
movsl
out
mov
addr16
jp
and
pop
js
mov
testl
aad
aas
cwtl
sub
push
cs
arpl
sub
lahf
mov
subl
roll
mov
sti
pop
push
ret
leave
stos
push
inc
pop
and
test
call
add
inc
lahf
add
cltd
mov
shl
adc
mov
lret
out
iret
sub
inc
sub
mov
shrl
pop
inc
lahf
repnz
jl
push
cmpsb
les
jecxz
dec
xchg
call
sbb
adc
call
mov
dec
fwait
mov
out
mov
xchg
hlt
mov
and
not
add
mov
ds
push
popa
fstpl
outsb
mov
lcall
push
mov
dec
cli
into
mov
adc
adc
scas
nop
inc
sbb
sarl
pop
fists
pop
movsb
imul
sub
addb
nop
cmp
movsl
mov
std
cs
cwtl
xchg
das
in
or
or
aam
call
xor
lret
fadd
dec
repnz
lahf
test
adc
dec
mov
jno
xchg
xchg
push
sub
xor
inc
fucom
test
mov
sbb
negb
insl
sub
pushf
push
add
bound
mov
ret
lods
jg
adc
adc
cli
cmpsb
ficoms
or
stos
add
hlt
sti
adc
mov
pop
test
movsl
in
je
mov
pusha
stc
fstl
lea
push
pop
dec
into
xchg
add
in
les
jns
and
sub
in
jns
mov
add
mov
int3
gs
int
push
int3
inc
pop
sub
sbb
lahf
sub
push
add
xchg
inc
dec
dec
out
cli
jmp
adc
aaa
lret
popf
push
loopne
mov
mov
scas
inc
sahf
fcoml
inc
fldcw
sti
cs
insl
bound
adcl
xchg
sub
jo
jb
lret
mov
std
pop
dec
mov
sbb
rcrl
mov
mov
in
jl
and
cmp
jl
pop
dec
shrl
push
xor
stc
xchg
bound
xor
jnp
cltd
mov
mov
adc
es
push
mov
pop
pop
pusha
cld
adc
xor
enter
mov
lret
sub
movsl
inc
or
ds
mov
mov
mov
pop
imul
xchg
mov
test
in
outsb
mov
clc
mov
pusha
and
push
out
ja
mov
jg
push
dec
cmp
jno
jmp
imul
mov
repz
movsb
jp
jo
add
rcrl
mov
xchg
push
mov
push
pop
ljmp
shll
dec
fld
dec
sldt
jne
outsb
xor
jno
psubw
test
jmp
xchg
das
fistps
jns
cmpsb
mov
fs
pop
aas
pop
out
popa
cmp
sbb
lahf
dec
insb
dec
xchg
xchg
popf
aam
sub
std
xchg
mov
int3
pop
outsb
ficoms
jge
inc
sbb
sub
sar
mov
add
cld
rclb
sbb
pop
rcrb
dec
and
fstpt
sub
xor
int3
test
xchg
xor
popf
rcrl
jb
fnstenv
cmpsl
imul
push
iret
cmc
adc
test
pop
push
cmp
daa
sub
aad
and
and
fstps
add
and
jl
mov
pop
ja
movsl
mov
jmp
sub
call
cmp
xlat
cwtl
out
rclb
int3
cmp
cmpsl
and
xchg
lods
inc
fsts
or
aad
ret
and
test
and
jmp
adc
xor
xor
lahf
dec
jne,pt
imul
scas
mov
jg
xor
je
bound
xchg
in
ret
sub
add
in
pop
mov
in
add
xor
popf
xlat
movsb
mov
ret
loop
add
jno
jae
mov
mov
lcall
mov
xor
imul
loopne
push
lods
pop
mov
lcall
add
enter
hlt
jo,pn
mov
data16
mov
pop
adc
andb
std
xchg
jmp
mov
cmp
fistps
pop
pop
int3
bound
and
fwait
xchg
in
inc
mov
roll
arpl
mov
adc
adc
inc
je
and
xlat
hlt
cmp
jno
or
fidivs
les
imul
jge
add
nop
push
nop
and
scas
dec
adc
aad
in
xchg
pop
sar
insl
inc
insl
lcall
in
xlat
xor
sub
aad
jbe
mov
or
mov
movsb
xchg
pop
inc
add
fcmovnu
bound
jne
pop
sub
imul
test
jp
repz
mov
in
repnz
aaa
fsubs
adc
xor
hlt
mov
dec
lea
xor
enter
outsl
decb
cmp
xchg
ds
inc
dec
int3
out
es
lcall
cmp
sub
scas
data16
std
xor
enter
les
mov
jne
xor
dec
inc
mov
cmp
bound
sarl
mov
and
mov
inc
les
das
out
idiv
cs
daa
add
and
adc
xor
test
clc
or
icebp
push
xlat
sbb
fs
cmp
lods
cli
xchg
jg
sbb
mov
jmp
mov
add
imull
fwait
adc
xor
lock
roll
jne
lods
into
data16
and
or
push
push
mov
jb
gs
adc
dec
push
push
mov
jecxz
flds
mov
xor
ror
dec
das
stos
inc
pop
das
pop
scas
enter
mov
jp
add
pop
inc
ret
insl
aaa
push
mov
cltd
shrb
fisubrl
arpl
xlat
xchg
mov
rorl
mov
inc
hlt
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
mov
sub
add
inc
pop
jp
pop
jo
dec
ds
pop
mov
sub
mov
xchg
lahf
adc
bound
hlt
bound
jne
mov
add
xchg
cmp
mov
jmp
shl
jno
std
jg
push
and
rcr
pop
outsb
cwtl
cmpsl
bound
lock
addr16
popa
xchg
push
movsb
jp
sub
test
add
test
xchg
mov
ds
imul
js
int3
imul
mov
jno
xchg
pushf
aas
filds
mov
arpl
inc
je
mov
mov
mov
arpl
mov
xchg
lahf
stos
xchg
pop
or
jbe
push
jg
jmp
call
cmp
pop
ljmp
fcomps
and
or
leave
sar
shrl
jno
je
leave
sbbb
xor
mov
aam
ja
lcall
jbe
mov
or
mov
hlt
and
sub
push
push
cld
sbb
add
adc
fstl
adc
lds
lds
xchg
dec
mov
scas
leave
sbbb
outsb
xor
nop
jno
jns
dec
popa
cmc
in
and
inc
pop
push
int3
out
dec
popf
fldl
cmp
subl
pop
sti
adc
and
mov
mov
pop
or
cmp
mov
mov
jae
inc
mov
les
loopne
and
outsb
add
sub
es
loope
mov
pushf
lods
hlt
sub
dec
dec
xchg
jnp
sbb
cmpb
and
sbb
dec
in
loopne
mov
xchg
mov
mov
cmp
push
xlat
add
sbb
adc
mov
add
lret
nop
les
push
roll
rolb
dec
mov
addr16
push
mov
sti
dec
das
es
repz
pop
stos
fstpl
sub
dec
faddp
int
sbb
jb
or
data16
ja
sbb
pushf
in
ret
mov
xchg
repz
sbb
clc
jmp
jnp
adc
fcompl
jbe
mov
dec
xchg
mov
jne
nop
scas
out
aas
inc
inc
push
into
cmpsl
sbb
jb
or
dec
adc
push
jle
das
and
icebp
js
push
movl
int3
xchg
enter
cmp
dec
aam
loop
xchg
clc
adc
aad
lret
pop
push
sub
bound
idivl
ja
outsl
repnz
dec
popf
mov
push
fidivrl
or
aas
mov
mov
mov
xchg
xchg
pop
in
fnstenv
cwtl
in
adc
and
clc
mov
popf
jno
shll
js
mov
imul
shlb
mov
decl
mov
fwait
icebp
addr16
sysexit
mull
pushf
sarb
xor
add
cmp
loop
mov
pop
in
hlt
andb
gs
pop
repnz
cltd
xchg
dec
aad
push
stos
mov
leave
sub
sbb
add
testb
je
outsl
lcall
in
pushf
test
jl
sub
lods
aas
pop
bound
rcll
stc
or
in
sbb
mov
lods
xor
mov
daa
mov
push
push
dec
mov
incb
xor
adc
mov
loop
xchg
adc
ret
pop
xor
cmp
adc
push
or
pop
stos
sub
pop
xchg
sbb
pop
adc
lret
cmc
mov
movsb
repnz
cmp
dec
rolb
outsb
stos
addl
int3
mov
inc
jbe
fpatan
sti
cmp
fcmove
sub
mov
test
aad
out
outsl
out
js
fdivp
call
call
imul
jns
jno
add
cmpsb
sbb
add
adc
aam
jb
sbb
jo
or
jae
ds
mov
test
xchg
push
cltd
sbb
notb
loopne
sbb
pop
ljmp
push
xchg
lret
mov
inc
mov
jp
outsl
aad
sti
outsb
icebp
mov
cmpsb
dec
repnz
enter
sub
jo,pn
sbb
rolb
stos
test
jge
sbb
pop
push
mulb
jmp
iret
ficompl
xchg
ret
aaa
mov
test
call
sub
inc
xor
push
out
lret
faddl
mov
test
repz
rcrb
adc
dec
xor
je
out
mov
xor
leave
push
adc
xchg
push
in
rcll
and
jl
fidivl
jg
pop
add
in
cld
rclb
sarb
out
dec
shrl
sahf
adc
inc
jbe
push
icebp
pop
movsl
rcr
pop
negl
mov
sbb
pop
dec
rorl
shl
fnstenv
mov
aas
mul
arpl
out
or
test
cs
rorb
xlat
lret
xchg
sahf
or
mov
push
mov
mov
or
inc
xchg
in
lahf
hlt
jns
jl
cmp
push
loop
call
fwait
inc
in
rcr
mov
repnz
xor
rol
repz
inc
fucomp
cs
xor
mov
int3
sub
leave
inc
pushf
rcll
pop
jge
aas
ds
push
outsl
push
aaa
fstl
cmpsl
ret
push
fdivrs
lret
mov
sbb
push
in
fistl
and
inc
int3
popa
inc
shl
pop
addr16
or
pop
movsb
xor
push
test
pop
ret
push
icebp
imul
mov
xchg
pop
ljmp
sbb
dec
jp
xchg
sbb
sbb
and
mov
jge
outsb
ret
cmp
icebp
xor
stos
push
adc
out
mov
pop
mov
repnz
hlt
repz
fwait
sub
adc
adc
enter
push
nop
inc
popa
mov
xchg
jno
daa
adc
mov
fucomp
pusha
shlb
cwtl
lcall
es
or
mov
cmp
sti
cltd
inc
inc
and
clc
test
xchg
pop
add
push
repnz
xor
popa
sub
shrb
dec
cmp
add
jmp
jb
or
cwtl
mov
jmp
scas
mov
jp
sbb
fsubs
dec
aam
out
sbb
jge
sbb
add
cmpsb
sub
movb
sub
mov
pop
data16
adc
shlb
mov
push
aad
pop
adc
inc
addr16
ss
inc
mov
in
sbb
dec
dec
mov
test
push
mov
and
jle
mov
fmull
bound
add
sahf
xorb
cs
inc
outsb
std
sub
idiv
and
pop
or
or
movsb
lcall
mov
xchg
movsb
jg
or
sbb
mov
xlat
cs
xchg
ficompl
movb
xor
xchg
ret
xor
pop
xor
push
mov
mov
mov
int
mov
jle
jno
adc
pop
or
inc
fisttps
adc
or
mov
xchg
dec
pop
xchg
test
insl
push
inc
mov
inc
scas
xlat
nop
push
lret
in
lods
repnz
lds
pop
je
js
cltd
mov
add
jo
mov
inc
dec
push
jbe
std
dec
hlt
addl
fisubrs
addb
decb
inc
test
lock
lret
and
aam
loop
push
add
sti
fmul
iret
pop
outsl
mov
aad
mov
mov
jae
pop
stc
jne
dec
cmpsb
es
jb
sbb
sbb
and
dec
sbb
xor
sbb
pop
out
and
jle
push
push
inc
mov
shr
hlt
sti
int3
jecxz
jecxz
filds
lcall
push
mov
jnp
es
ret
int3
add
and
ror
hlt
mov
mov
leave
stos
jbe
and
into
xlat
mov
and
gs
loopne
nop
jp
pop
sbb
jno
mov
mov
inc
je
inc
push
inc
rol
fildl
lret
inc
insb
fstpl
sarl
jo
andb
mov
cmp
call
xchg
jnp
mov
aad
rcl
insb
push
jecxz
xchg
xor
stc
sbb
mov
loop
add
push
sub
push
cmp
inc
cmp
mov
movsb
popa
and
pop
inc
sub
out
mov
adc
xor
idivl
push
push
jne
jp
sub
loopne
jg
or
movsb
sbb
cld
dec
cs
fcmove
inc
enter
mov
arpl
sub
nop
xorb
ds
jb
push
or
test
jle
lods
mov
addr16
add
bound
dec
jnp
insl
dec
mov
popf
cmpsb
pop
pop
xor
invd
xlat
jbe
leave
test
andb
fcmovnbe
add
xchg
mov
jae
lret
adc
js
push
adc
vandps
sbb
xor
mov
and
out
inc
ja
xlat
cli
in
mov
aaa
pop
cmp
lea
push
dec
pop
add
fsubs
movsl
xchg
sbb
adc
pop
push
sub
dec
push
jmp
or
data16
pop
movsb
mov
popa
jbe
jecxz
inc
idiv
sbb
pop
aad
stc
icebp
sbb
mov
push
data16
mov
xchg
and
mov
push
pop
sbb
rclb
andl
mov
loopne
outsb
cmp
mov
cmpsl
test
arpl
jl
dec
pop
push
sti
aas
out
repz
popa
fildl
jmp
or
movsl
add
or
pop
sbbl
in
jae
popa
adc
jns
subl
xor
cltd
and
sbb
outsb
std
cmp
rol
inc
or
fisubrl
xrelease
insb
je
stos
or
or
or
fcomps
mov
jecxz
sub
inc
testb
repnz
pushf
xchg
adc
repnz
cmp
jmp
mov
movsb
or
or
xor
adc
or
mov
push
arpl
sub
lahf
add
inc
jbe
aad
push
fdivrs
in
and
out
in
fwait
sbb
je
or
sub
mov
roll
sarl
xchg
icebp
loopne
sbb
les
test
inc
insb
clc
mov
mov
insb
dec
out
xor
mov
sbb
shll
mull
adc
cmp
sbb
loopne
sbb
enter
push
push
jle
mov
fiadds
movsl
push
mov
push
mov
pop
int
lret
aas
aam
and
ss
into
cmpsl
popa
push
rcr
mov
and
lahf
add
add
aas
mov
aaa
mov
std
mov
fisubs
xchg
test
xlat
mov
stc
push
dec
lds
xchg
inc
sub
and
pop
je
pop
sbb
imull
push
sbb
pop
fwait
in
test
push
xchg
mov
repnz
sbb
add
clc
lods
mov
mov
insb
call
push
fwait
adc
es
leave
xor
dec
je
gs
jns
xor
xchg
xchg
mov
push
call
xor
mov
xor
add
mov
mov
or
and
shrl
xor
mov
dec
scas
mov
dec
negl
xor
call
mov
ds
inc
je
in
fwait
mull
inc
sub
hlt
lods
fcoml
or
and
std
pop
insb
stos
dec
pop
push
mov
lds
cs
mov
rorb
movsl
lret
dec
push
xlat
jb
mov
inc
ret
and
repz
push
mov
ja
addr16
insl
or
std
sbb
test
adc
adc
xor
jecxz
inc
stc
sbb
xor
jl
aad
xchg
cmp
sbb
popa
fcompl
push
sahf
mov
movsb
sbbb
mov
stos
cmc
sarb
outsb
jge
popf
sub
mov
cmp
cwtl
adc
cmp
cli
imul
and
push
sahf
mov
insl
xor
inc
in
iret
sbb
mov
or
mov
sub
stos
mov
cmc
fcmovu
enter
shlb
push
iret
mov
jg
push
movsb
loop
push
or
jbe
add
jle
pop
leave
lock
cmp
push
sbb
mov
push
pop
mov
mov
insl
pop
ss
dec
jns
xchg
je
data16
in
pop
js
or
call
and
sbb
jge
mov
pop
enter
lret
and
jge
insl
pop
pop
dec
mov
outsl
jl
or
add
mov
and
inc
test
imul
mov
fwait
sbb
jae
lahf
mov
outsl
call
cmp
loopne
mov
dec
scas
test
fmull
dec
and
pop
fcmovbe
jge
pop
out
stc
or
add
mov
fwait
push
inc
jnp
push
dec
sbb
or
popa
xor
jg
mov
lret
add
dec
sbb
mov
jp
js
mov
dec
pop
cmpl
jg
cmp
or
lahf
mov
ds
pop
imul
xor
xor
test
in
ss
cltd
jb
mov
into
stos
popf
inc
and
imul
adc
mov
inc
mov
lds
add
fidivrl
inc
add
repz
rclb
int3
loopne
cwtl
push
orb
int
cmp
mov
sahf
pop
and
add
mov
in
mov
pusha
gs
pop
cmpsl
lahf
outsb
push
sub
orl
inc
jne
insb
xor
lahf
or
xor
fiadds
fnstcw
cmp
fdivs
push
das
sub
push
lock
out
pushf
inc
jge
dec
pop
jmp
cld
and
cmp
dec
ds
in
add
aaa
cmp
inc
sbb
jnp
ss
or
jl
adc
icebp
sbb
sbb
or
int
test
add
popf
or
sbb
mov
loop
repnz
jo
jmp
pop
jmp
push
xchg
adc
iret
scas
add
xorb
cmpl
inc
or
andl
mov
orb
sti
ret
fcomps
xchg
les
jns
push
mov
jns
lea
jmp
cmpsl
dec
ja
out
addb
jbe
fdivp
add
in
adc
addl
xchg
outsb
mov
mov
mov
in
mov
add
mov
jbe
xor
addb
jg
mov
add
ds
roll
lret
inc
mov
pop
fcmovnu
mov
push
bnd
pand
xorl
es
or
add
push
clc
and
and
jae
fstpt
pop
test
xor
roll
popa
mov
into
into
mov
out
faddl
leave
mov
dec
jb
mov
mov
mov
jbe
xor
push
inc
aad
sti
fidivs
popf
in
jb
sub
inc
pusha
add
xor
xchg
push
dec
aaa
mov
pushf
data16
pop
cld
push
push
andb
jmp
sub
sub
cmp
push
jg
fwait
mov
pop
mov
sbb
cmpsl
lds
adc
aad
xor
arpl
sub
or
mov
or
lock
adc
mov
pop
sbb
sub
adc
lock
scas
cs
pusha
cmc
aam
test
lret
mov
fimull
int3
push
negb
fsubrs
and
aam
rep
jb
stc
or
xor
inc
sub
push
sbb
and
lret
fistps
sarl
cmpsb
lret
imulb
pop
call
aad
xchg
sbb
xchg
bound
movswl
add
out
repnz
lock
std
ret
add
mov
aaa
adcl
je
xchg
cltd
mov
int
enter
sub
inc
mov
add
jbe
mov
in
bound
ss
sub
dec
pop
rorl
fistps
mov
jb
das
and
int
punpcklbw
xchg
insb
out
pop
pop
jno
mov
sbb
cmp
push
ds
xlat
xchg
inc
push
ret
mov
push
rcr
js
leave
mov
fistpll
lds
pop
mov
std
mov
daa
test
mov
xor
pop
fcomi
add
popl
cwtl
push
push
add
imul
icebp
outsb
dec
scas
push
cmp
loop
adc
pop
mov
adc
pushf
mov
jecxz
jl
cltd
inc
mov
std
inc
mov
push
cwtl
fadd
push
cmpsl
and
rcrl
test
imul
mov
test
and
aam
jl
push
mov
ficoml
fadd
lods
jo
ret
clc
out
icebp
mov
and
imul
flds
in
cltd
jne
push
shlb
xor
mov
ljmp
in
test
adc
faddl
imul
call
push
test
nop
push
mov
aaa
mov
jle
or
mov
mov
add
cltd
sub
movsb
cwtl
cltd
mov
or
sbb
push
mov
ret
push
sub
das
stos
mov
leave
out
mov
adc
mov
hlt
inc
dec
pop
sahf
cli
xor
fimuls
mov
xchg
or
inc
pop
jmp
sub
lahf
ret
cmp
dec
test
mov
dec
lahf
mov
or
push
dec
push
mov
and
ja
mov
push
dec
int
or
xchg
dec
int
mov
xlat
dec
jae
pop
mov
mov
dec
mov
out
mov
lahf
lcall
subb
sbb
popf
sub
add
sahf
out
arpl
dec
stc
jo
mov
add
sub
push
mov
mov
lcall
out
xor
sub
addr16
ret
pop
aaa
je
cld
lds
test
pop
outsb
mov
adc
mov
cmp
out
mov
mov
pop
cli
divl
cmc
cmp
inc
push
push
push
lret
dec
or
mov
push
pop
imul
mov
data16
imul
mov
cmp
aas
cmp
jbe
jne
pop
sbb
lds
nop
sub
punpckldq
add
pusha
inc
gs
sub
adc
jl
inc
in
cwtl
mov
or
xchg
lds
int3
push
push
mov
inc
inc
das
xchg
mov
dec
not
add
inc
das
cltd
insb
int
fildl
movsb
movsb
cmp
mov
ret
nop
and
dec
rcll
adc
pop
out
stos
adc
jo
lcall
push
jp
fcoml
test
lcall
mov
stos
lods
sbb
xlat
cmpsb
cs
mov
push
ss
js
jl
stc
push
aad
push
clc
clc
inc
sarb
sub
or
mov
mov
jmp
pop
int
xor
and
push
push
xorb
xchg
out
scas
and
add
mov
cs
inc
pop
jo
lret
out
into
dec
scas
subb
ja
push
sbb
and
and
ret
dec
out
and
xchg
loop
ss
xor
push
inc
and
out
popa
and
inc
sbb
mov
enter
stos
lcall
arpl
repz
imul
fidivrl
jp
jle
inc
jnp
pop
dec
bound
or
movsb
mov
test
sub
js
adc
inc
mov
mov
out
sub
sub
add
push
pop
inc
xor
or
into
inc
inc
out
jno
fs
fsts
cld
add
mov
shlb
fcomip
aaa
out
inc
xchg
imul
iret
fmulp
dec
jge
stos
add
adc
lret
fwait
mov
pop
cs
push
popa
and
mov
push
testb
lret
cmc
daa
xor
cmp
cmc
adc
sub
stos
pusha
dec
dec
enter
lret
mov
movsb
push
loopne
xor
bound
loopne
shl
ja
adc
aaa
pop
lds
pop
leave
test
ss
mov
enter
push
pop
fwait
mov
cmpsl
sbb
add
add
inc
pop
pop
mov
mov
fld
mov
pop
or
out
push
mov
arpl
jmp
lahf
adc
xlat
jne
or
adc
cmc
in
int
loop
ss
push
cmpsl
out
xchg
mov
das
and
ficomps
loopne
pop
push
push
movsb
jb
pop
or
leave
imul
jns
gs
and
aaa
int3
addr16
mov
mov
ja
faddp
jle
mov
aas
or
push
stc
arpl
dec
fldt
add
int3
fistpll
mov
sub
cmp
imul
imul
mov
sbb
sarb
mov
popa
test
sbb
divl
ja
push
jbe
jo
lret
xor
mov
sub
add
test
and
in
mov
jg
and
arpl
dec
fisubrl
jmp
jl
scas
adc
and
into
sbb
push
pop
push
aas
lahf
adc
push
jnp
mov
xchg
fucomip
push
enter
scas
pop
stc
lock
enter
and
jmp
push
cmp
adc
imul
fnstcw
mov
mov
push
lods
int3
fwait
in
dec
ficoml
lea
fs
mov
lods
mov
push
popf
xchg
and
or
les
hlt
test
xor
push
push
inc
int3
daa
sbbb
test
repnz
mov
push
int3
jecxz
xor
out
xchg
call
mov
inc
dec
pusha
ss
popf
fwait
mov
scas
nopl
repnz
mov
push
leave
inc
cmp
bound
xchg
mov
push
push
fcoml
mov
push
inc
xchg
push
pop
in
lea
call
push
and
stc
out
pop
in
int3
inc
ja
fmull
jns
jecxz
aaa
pusha
jmp
cmpsl
test
pop
mov
movsb
mov
add
adc
bnd
and
in
in
push
icebp
xchg
cld
imul
xchg
or
out
int3
mov
movsb
xchg
mov
hlt
sbb
aaa
push
arpl
jbe
pop
mov
test
dec
mov
jo
out
test
sbb
mov
cmp
int3
movsb
mov
mov
sub
jmp
in
pop
mov
cwtl
out
add
pop
lock
sahf
mov
push
mov
testl
push
jg
mov
imul
or
push
sti
push
xchg
aaa
into
xchg
push
ja
push
push
fdiv
pop
imul
sub
and
or
shll
rcrl
pusha
jb
mov
repz
and
cld
shll
lea
stos
cmp
movsb
frstor
dec
cmovno
shlb
out
mov
daa
in
xor
cld
arpl
pop
adc
mov
call
daa
fsubs
jne
aam
jb
and
jae
mov
es
movsl
mov
mov
in
pop
mov
int3
mov
pop
dec
sbb
call
mov
cmpsl
fwait
jae
sbbb
or
ljmp
into
mov
and
and
lret
mov
jno
cmp
addl
xchg
pushf
mov
xlat
daa
mov
or
adc
push
rolb
mov
or
testb
add
mul
cmp
mov
fst
mov
pop
jge
repz
pop
clc
cmp
dec
jmp
jno
push
mov
sub
add
js
ds
jmp
push
fisubl
fdivl
outsl
jg
mov
aas
inc
and
out
push
cmp
arpl
xchg
dec
imul
popa
jbe
push
aad
inc
leave
pop
push
insb
jg
leave
ret
adcb
add
enter
cmp
dec
xor
negl
sub
mov
lds
dec
gs
xchg
out
lods
xor
sbb
leave
sti
mov
aas
mov
stos
out
jge
cmp
inc
arpl
cli
js
fcoml
pop
stos
es
inc
cmp
aad
xlat
fwait
add
loope
imul
adc
ljmp
jo
sbb
loopne
aam
out
mov
dec
push
cmp
mov
fsts
xor
adc
pop
aam
loopne
test
or
in
sahf
es
jno
jmp
jbe
movsl
mov
or
out
sbb
sbb
lds
leave
xchg
dec
mov
cmpsb
jmp
into
adc
mov
mov
fldl
outsb
into
fs
add
stc
in
adc
cmp
sub
cmpsb
mov
jge
mov
fdivs
inc
loope
jae
insb
insb
int3
and
push
faddl
sbb
push
pop
lahf
push
push
dec
dec
inc
mov
push
cltd
mov
adcb
addr16
jns
or
push
shrb
mov
xchg
scas
test
hlt
insl
jmp
mov
sub
lds
mov
dec
out
inc
andb
js
mov
cmp
mov
pop
jb
dec
mov
pop
inc
sti
notl
adc
mov
xchg
cmp
dec
movsb
stc
add
pop
lods
andb
insb
mov
jae
pop
jno
pop
dec
jge
pop
mov
icebp
push
aaa
icebp
and
outsb
mov
or
add
mov
xor
and
lock
xor
adc
or
mov
lods
dec
pusha
cwtl
stos
mov
fisubrs
fdivrs
push
dec
push
push
rcrb
and
addr16
cmp
jle
cmpb
in
push
insl
or
repnz
adc
in
push
fldpi
sub
and
or
adc
into
lret
xchg
into
sbb
sbb
sub
aad
out
cmp
dec
scas
imul
sub
int
in
push
jp
inc
js
jl
or
mov
ss
test
out
shrb
xlat
push
pop
in
add
adc
mov
jg
lods
pop
jns
ror
jne
or
shlb
push
pushf
cmpb
fiadds
sbb
mov
jbe
push
add
mov
jnp
dec
jbe
iret
shll
leave
fcmove
imul
push
lock
sti
push
fs
repz
xor
imul
mov
stos
jl
xchg
clc
popa
rcl
pop
std
xchg
stos
hlt
push
fiaddl
xor
fnstcw
incl
pop
xor
sub
push
sbb
aas
or
out
push
sahf
push
fcomip
sti
insb
pop
push
fsubrl
les
dec
std
xchg
sti
jb
and
outsb
shrl
xchg
rol
push
pop
xor
fdivrs
out
or
mov
sbb
and
add
out
std
cmp
push
cmpsb
adc
inc
xor
cld
inc
subb
cli
mov
orb
fiadds
sbb
mov
dec
mov
repz
push
inc
cmp
pop
cld
add
mov
gs
or
or
adc
dec
gs
out
or
push
shlb
add
fdivrl
movsl
add
int
cmp
xchg
mov
mov
push
outsl
pop
jge
xlat
adc
ds
push
cmpl
stos
add
mov
xor
mov
aaa
test
int3
iret
test
xor
bound
das
mov
aas
mov
mov
mov
mov
inc
sti
or
pop
test
fsubs
outsb
loop
cmp
cmp
iret
inc
cmp
hlt
outsb
mov
cmc
mov
mov
jbe
dec
lds
stos
outsb
into
push
les
mov
pop
loopne
into
cmpsl
mov
pushf
vsqrtsd
sti
mov
lcall
sti
repz
mov
icebp
jecxz
in
js
mov
stos
inc
or
sub
sub
ja
je
jns
dec
mov
mov
mov
jle
int
shrl
in
mov
ret
divl
jnp
add
or
test
pop
and
int
repz
xchg
push
cmp
or
daa
jmp
xor
and
lahf
jecxz
pushf
or
mov
les
repnz
push
cltd
push
jecxz
mov
rol
outsb
mov
sub
rol
dec
js
dec
movsb
int
cmp
and
mov
out
fs
js
cld
fnstsw
in
bound
insb
push
ja
divl
ja
mov
jbe
stos
iret
inc
xchg
mov
fsubp
mov
aam
mov
nop
lea
and
sbbb
out
fnsave
add
pop
test
mov
or
pop
push
es
mov
or
aaa
adc
pop
cmpsb
stos
hlt
mov
jl
push
sbb
pop
arpl
mov
sbb
jg
jecxz
popf
mov
and
xor
shll
dec
into
push
dec
sbb
test
test
jo
int3
jl
stc
or
xchg
aas
push
out
roll
out
stos
xor
push
push
iret
mov
jns
test
pop
xchg
mov
jl
insl
dec
xchg
movsl
out
pop
int3
sbb
lret
sbb
cmc
ja
sub
insb
pop
out
and
and
jns
sub
fiadds
cmc
lods
jnp
or
dec
push
push
je
les
push
mov
dec
cltd
adc
mov
jle
in
rcrl
mov
xlat
jo
cltd
xchg
jb
cwtl
loope
ds
filds
jbe
xor
xchg
cli
jp
hlt
xor
mov
sub
fs
mov
sbb
dec
xor
out
pop
xor
pop
pop
inc
pushf
or
jge
scas
add
insb
xor
cs
adc
aaa
sub
mov
test
jno
cbtw
scas
gs
sbb
rolb
unpcklps
sarb
pop
imul
mov
lock
iret
mov
movsl
in
les
cld
jecxz
mov
jns
subb
outsl
test
dec
push
pop
negb
jge
adc
push
shl
mov
pop
add
lods
scas
mov
add
cmp
test
imul
adc
jnp
cmc
jnp
data16
daa
pop
or
xchg
shr
jnp
repz
cltd
arpl
jb
cs
adcl
add
xchg
adc
clc
in
pop
add
loopne
stos
out
push
inc
mov
mov
mov
ja,pt
xchg
cmovno
adc
aaa
mov
add
pop
ret
daa
cmp
jecxz
pop
orl
xchg
shr
pop
mov
lock
cmp
xlat
or
jae
testl
xchg
cld
inc
inc
sbb
les
pushf
or
out
cmp
pop
sub
stos
pusha
push
and
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
mov
in
jp
pop
jp
dec
dec
sbb
lods
xlat
rcr
out
fwait
insb
jmp
xchg
cmpsb
dec
xchg
aad
add
xchg
cs
jae
pop
mov
outsb
pop
jmp
arpl
jae
push
adc
push
loopne
add
bound
push
pop
adc
mov
push
out
sbb
adc
xchg
push
sbb
arpl
pop
mov
fsubrp
pxor
in
push
mov
ds
fcmove
mov
andl
push
push
mov
movsl
ret
pop
cmp
bound
inc
mov
push
xchg
fstl
lret
jbe,pn
scas
icebp
int
mov
mov
addr16
cmpsl
xchg
adc
push
pop
lea
inc
addr16
adc
sub
rol
rorb
js
movsb
loopne
push
xlat
sbbl
gs
lods
lods
add
pop
test
aad
jbe
push
and
add
sarb
shll
repnz
mov
es
outsl
iret
cmpsl
mov
xchg
inc
jo
jnp
lea
jmp
movb
inc
and
jns
jo
push
rcll
lea
xor
adc
iret
jp
int3
push
jle
out
and
cmp
std
je
jnp
jg
subb
imul
cmc
jbe
mov
sbb
dec
dec
push
push
and
push
jp
mov
push
bound
jbe
sti
cmp
mov
xlat
add
out
xchg
jl
jb
cmp
mov
jmp
repnz
xchg
daa
pop
pop
add
jae
stc
nop
call
enter
icebp
pop
or
pop
out
mov
mov
call
clc
ret
mov
sti
lcall
cmpsl
mov
sbb
mov
out
test
sbb
js
lret
ret
inc
jb
out
bound
inc
lods
jo
dec
aaa
cmp
stos
aad
or
cwtl
stos
popf
mov
mov
and
icebp
pop
into
pop
or
aam
push
rol
arpl
mov
push
cmp
push
inc
arpl
scas
push
and
mov
sbb
cmp
lret
or
mov
adc
cmc
sbb
mov
cmc
xchg
pop
inc
or
imul
daa
jns
enter
xorb
dec
jnp
mov
sbb
rcll
leave
and
and
rclb
inc
push
mov
xlat
rolb
imul
xchg
mov
cmpsb
popf
das
push
dec
push
repnz
fadd
inc
push
xchg
sub
or
jae
cmpsl
inc
test
push
mov
aad
push
xchg
mov
jl
push
repnz
mov
inc
jne
jl
and
jg
sbb
dec
jmp
es
gs
std
lods
sub
sub
mov
mov
add
xor
inc
cmp
xor
dec
movsb
int
jecxz
inc
adc
dec
jecxz
mov
mov
out
xchg
and
mov
mov
inc
push
loop
idivb
stos
pushf
pop
cli
lcall
cmp
int
push
and
cs
rcr
scas
lods
mov
xor
jecxz
in
imul
fsubrs
xor
lods
jecxz
jp
sti
mov
pop
mov
and
inc
pop
popf
std
aam
cmp
or
lods
push
mov
roll
mov
fldt
in
mov
and
or
pop
sbb
fmul
xchg
loope
jp
loop
aaa
sub
and
loopne
pop
loop
mov
ss
mov
jno
lods
movsb
jmp
in
fists
and
mov
jg
xchg
arpl
sub
adc
jne
or
adc
xchg
je
inc
insb
cmp
mov
in
xchg
sub
or
mov
or
adc
flds
or
js
cmp
lret
pop
les
jne
iret
iret
mov
int3
into
push
stos
cli
addr16
cmpsb
adc
repz
or
mov
xor
imull
fidivrs
test
mov
aaa
inc
paddq
xor
fstpt
adc
std
rol
out
sbb
scas
jne
imulb
cmp
sbb
or
pop
in
nop
iret
xor
cltd
sub
pop
clc
fdivl
stos
ret
mov
mov
sbb
xchg
bound
roll
call
lcall
adc
ja
ficompl
mov
or
dec
lret
movsbl
rcl
dec
pop
out
int
jmp
bound
add
inc
in
cmp
in
sti
xor
movsb
inc
movsl
mov
jbe
xchg
adc
or
pop
and
mov
mov
cs
shl
insb
notb
push
cmpsb
cltd
pushl
bound
cld
sub
fcmovnbe
mov
pop
or
push
inc
inc
test
arpl
mov
mov
in
or
dec
jo
xchg
inc
ds
sbb
mov
push
and
inc
cmp
mov
mov
daa
cmp
mov
dec
sti
sbb
shll
loopne
subb
xchg
inc
pop
sub
inc
test
fbstp
mov
mov
mov
inc
inc
sbb
sub
or
sub
scas
add
adcb
inc
cmp
sub
cmpsl
jo
adc
pop
call
mov
ret
ja
jg
and
mov
jne
aaa
cltd
cmp
pop
nop
lcall
pop
push
xor
cmp
jno
mov
jp
inc
cs
jmp
push
dec
lret
subl
mov
adc
imul
addr16
into
lock
sbb
repnz
jg
imul
mov
jno
incl
dec
ds
repz
add
mulb
incl
fisubl
lds
add
daa
mov
out
fdivl
mov
inc
dec
push
hlt
cmp
and
add
mov
int
mov
in
scas
sbb
push
xor
pusha
push
mov
or
imul
leave
or
xor
pop
push
mov
pop
cmc
jbe
stc
sahf
pop
xchg
je
push
lods
jns
scas
adc
inc
mov
aad
call
inc
test
bnd
mov
sti
ja
outsl
repz
pushf
fs
data16
and
jmp
pusha
add
push
addr16
xchg
mov
xlat
lea
xlat
add
mull
sahf
arpl
out
ds
and
push
pushf
hlt
lret
les
les
pop
push
loop
cs
adc
rcrl
mov
mov
jbe
fcmovb
lods
push
pop
or
sub
push
aad
rcrl
mov
stos
sti
adc
stc
hlt
fists
and
dec
int
std
push
push
lcall
jb
repz
jmp
adc
dec
in
dec
in
leave
pop
fsubp
insl
es
dec
xchg
push
lods
mov
out
imul
scas
add
cmp
and
nop
jmp
mov
movsl
and
jecxz
mov
sub
out
adc
push
xor
scas
out
push
xorb
test
push
push
shlb
movl
mov
mov
je
mov
push
dec
icebp
jns
mov
aas
sbbb
jae
arpl
pop
jne
dec
in
lret
call
cltd
leave
xlat
mov
scas
add
es
add
in
addb
sub
cmp
cmp
cmpsl
jge
cmpb
repnz
andb
sbb
pusha
mov
pop
out
rcrb
push
adc
push
adc
dec
xor
mov
aas
adc
popf
xchg
sbb
popa
ror
outsl
pop
inc
push
lods
js
outsb
fidivrs
jmp
jb
mov
push
push
leave
adc
and
fbstp
arpl
fwait
jmp
dec
inc
jbe
in
testb
pop
in
add
push
mov
pop
loopne
pop
insb
cmp
aaa
aam
dec
stos
ds
pop
sarl
add
dec
ss
sub
fstpl
cmpsb
or
lods
lret
inc
xor
sub
lcall
and
test
jg
jg
imul
daa
xor
mov
cmpsl
mov
xor
outsl
dec
cwtl
pusha
sbb
ja
into
dec
shll
sbb
jbe
xadd
xor
movsl
clc
cmc
or
jbe
call
pop
pop
sahf
xchg
jle
inc
shll
push
ds
mov
lret
sbb
mov
or
je
mov
enter
pop
test
xor
lock
mov
lahf
sbb
pop
and
sub
cmp
ss
xor
hlt
push
imul
sbbl
xchg
ds
dec
loop
xor
pop
popa
inc
lcall
mov
dec
rorb
fnstenv
in
xor
cld
mov
test
jge
jns
lods
sub
insl
dec
ljmp
xchg
mov
adc
cltd
jecxz
fbstp
mov
out
movsl
cmpsl
hlt
shl
mov
out
dec
out
cmp
test
lods
jecxz
jbe
nop
scas
mov
movsb
mov
add
rcrl
and
sub
je
ror
adc
andl
mov
stos
push
movsl
sti
test
dec
sbb
loopne
out
and
jns
cmp
cltd
je
nop
or
jbe
pop
sub
sahf
imul
lahf
clc
xchg
shll
cmpsl
jns
sbb
insb
sub
sub
mov
xor
and
xchg
mov
fcoml
out
cmp
fsubp
mov
jnp
xor
push
es
daa
jae
or
lea
jg
fs
sahf
inc
xor
aad
jmp
outsb
or
jg
or
stc
sub
lea
push
mov
call
sahf
mov
and
mov
cld
iret
mov
in
nop
xchg
inc
repz
sbb
jbe
cmp
je
std
fidivl
in
insb
xor
mov
test
idivb
repz
mov
dec
loopne
mov
cmpsb
test
sub
mov
mov
popa
jae
popf
call
imul
xchg
in
orb
repz
sub
out
adc
sar
add
push
push
push
popa
lds
jp
sbb
scas
shl
cwtl
cmp
les
and
or
lret
enter
mov
fwait
adc
mov
iret
jnp
xchg
cmp
icebp
imul
pop
and
add
xor
pusha
jecxz
pop
mov
pushl
pop
loopne
cmc
rclb
xchg
inc
pop
add
or
jg
dec
jb
xchg
sti
leave
mov
std
or
sub
jmp
arpl
jp
mov
lods
cld
ret
lahf
test
je
dec
fstpl
mov
je
jnp
adc
pop
fistpl
into
imul
repnz
mov
jge
aad
bound
movsl
and
cli
inc
sub
jb
xchg
imul
and
xlat
xchg
gs
pushf
ds
adc
subb
loopne
sub
inc
push
sub
outsb
rcr
or
add
xchg
cmpsb
adc
aas
lds
nop
stos
out
sbb
out
sarl
aam
add
arpl
add
pop
cmp
cmp
movsl
dec
iret
cmp
and
cmp
mov
adc
bsf
jne
jo
testl
inc
inc
or
popa
ja
outsl
cmp
sbb
pop
dec
les
sbb
je
jne
adc
repnz
pop
jnp
xor
adc
scas
movsl
in
jge
mov
jle
mov
call
call
sub
sbb
sub
enter
pop
mov
and
fcomp
pop
inc
subl
pop
stos
mov
test
add
or
mov
add
and
stc
xchg
mov
sbb
sub
insb
pop
aas
xor
mov
pop
mov
rol
aad
shrb
ret
and
cltd
inc
jae
mov
xor
pop
jne
add
sarl
sbb
repz
cld
pop
outsb
xchg
xlat
addr16
jle
xchg
lods
push
jno
sub
imul
dec
mov
push
cwtl
movsl
mov
popf
addr16
orl
xchg
mov
scas
cmp
inc
into
adc
popa
mov
das
cmp
aaa
addr16
xor
sbb
dec
sub
out
stc
popf
mov
mov
jle
fldenv
push
daa
push
cld
adc
cmc
mov
sub
cli
mov
in
mov
and
lahf
arpl
aaa
add
cmpb
pop
std
sbb
sbb
mov
fsubrl
pop
pop
inc
mov
cltd
cld
mov
push
mov
pop
xlat
add
cwtl
subl
xor
dec
repz
mov
push
xchg
add
pop
jns
ja
je
cmc
dec
or
nop
leave
in
and
and
xchg
jns
ljmp
jmp
stos
or
push
sbb
jmp
out
movl
ljmp
inc
fcoms
cmp
ljmp
push
sub
mov
jmp
pop
xchg
pop
pop
cmpb
mov
push
pop
stos
iret
mov
cmp
xor
sbb
and
roll
mov
data16
daa
in
jb
fsubp
insb
into
xchg
xchg
inc
sti
loope
adc
jp
daa
cli
mov
adc
jmp
fs
xor
les
jl
lcall
mov
loop
out
mov
xchg
cltd
or
xor
loope
or
xchg
repnz
sub
rol
sbb
daa
or
xorps
rorl
adc
jl
jge
add
testl
jp
mov
mov
inc
movsl
or
and
loopne
scas
inc
jge
jmp
and
loop
xchg
pop
bound
inc
imul
and
sub
into
pop
xor
sbb
es
mov
mov
fdivrl
popa
add
cmpl
xchg
and
pusha
mov
or
add
jge
es
and
push
insl
lea
scas
or
fnstsw
sbb
xor
les
fyl2xp1
cld
loope
imul
int3
inc
out
fdivs
mov
mov
and
out
mov
inc
xor
or
inc
adcl
xchg
cmp
push
or
inc
sub
cmp
adc
sub
cmp
in
pop
clc
push
test
in
xor
lods
cs
push
ss
mov
jb
inc
pop
jb
xor
inc
mov
xchg
addr16
jge
xor
mov
or
mov
repnz
pusha
sub
fsubrs
xchg
lods
insb
sub
out
test
push
popf
cltd
out
cld
jecxz
lods
int3
add
mov
lret
lds
mov
xor
inc
xor
xchg
xchg
pop
dec
push
popf
dec
icebp
fwait
icebp
pop
cmc
imul
sti
mov
mov
aam
inc
push
cld
push
jle
sub
mov
xor
fildl
inc
jae
call
mov
adc
fists
shrl
cli
jle
mov
pop
jecxz
ficoms
ret
mov
mov
rorb
push
push
sub
mov
inc
jae
movsb
add
out
outsb
xchg
ret
in
push
dec
dec
push
mov
test
int
repnz
scas
or
sbb
mov
xchg
sub
mov
dec
pop
int
push
mov
xchg
dec
sub
in
arpl
jnp
or
cmc
dec
pop
scas
addl
popa
ficoms
data16
adc
add
jl
ljmp
gs
pop
inc
fisubrs
xchg
or
sbb
inc
sahf
jl
xor
pop
sti
insb
outsl
rclb
fs
iret
push
lret
cltd
push
jge
sbb
push
in
push
ret
inc
jmp
rorl
push
xor
jge
int
das
js
fmull
mov
sbb
int
int
sub
call
lock
push
pushf
gs
mov
jle
push
xchg
pop
lea
lock
and
stos
outsb
ljmp
mov
inc
dec
cli
hlt
jl
cmp
xchg
sub
sbb
push
cmp
ss
stos
inc
imul
inc
push
sbb
sarl
and
fadds
jae
sub
adc
bnd
mov
xchg
test
push
scas
xchg
jae
out
leave
fwait
xor
std
dec
frstor
aad
pop
je
adc
lods
lahf
sub
pop
lcall
incl
mov
xchg
push
in
daa
adc
mov
shll
add
filds
and
mov
mov
movsl
mov
sti
xor
adc
pop
in
mov
pop
outsb
sbbl
xchg
popa
push
popl
jnp
push
jle
ljmp
xlat
xchg
stos
loopne
lock
add
shll
dec
xchg
cmpsl
push
xor
cld
sti
test
popa
mov
iret
std
push
mov
aas
sbb
jb
inc
xor
shrl
ret
out
xor
adc
daa
dec
push
out
scas
lock
cmc
leave
insl
and
and
rorb
pop
mov
mov
hlt
cmp
adc
push
xor
jae
cmpl
pop
je
nop
sarb
test
repz
jo
in
add
pop
cmp
test
fbld
icebp
xchg
js
add
pop
xor
cli
and
inc
fidivl
adc
mov
xchg
pop
xor
lcall
ret
das
inc
rorl
dec
pop
sub
cmp
inc
mov
das
cmp
nop
int3
xchg
test
mov
lock
fs
inc
ficoms
xor
addb
into
fidivrs
cli
mov
sub
sbb
mov
sub
out
jge
xor
aaa
lar
fnstenv
test
jmp
or
push
sub
sbb
and
sahf
popa
jecxz
cltd
mov
gs
jne
adc
mov
cmpl
adc
pslld
mov
pop
cmp
repnz
xchg
lea
pop
nop
sub
xor
clc
lods
xchg
or
inc
add
add
fldcw
sbb
mov
and
fisubrs
cmpsl
inc
lods
fcmovnu
pop
in
ljmp
xchg
push
jno
movsl
xchg
add
inc
mov
push
jbe
push
dec
lret
xchg
mov
popf
xorl
dec
pop
inc
mov
xchg
loope
into
ret
jmp
xchg
inc
dec
cmpsl
mov
notb
cmpsl
or
cmpsb
outsb
les
cmp
xchg
mov
sub
iret
and
pop
lds
mov
add
fisttpll
fsubrs
dec
loop
cmp
mov
outsl
adc
ljmp
and
mov
inc
and
jg
ret
movsb
dec
xor
adc
mov
push
mov
cmpsl
fwait
or
mov
dec
mov
push
push
jmp
pop
outsb
popf
std
jle
cli
repnz
out
fildl
bound
fnstsw
sub
mov
and
ja
mov
xchg
fisttpll
jbe
and
mov
test
bound
fnstenv
adc
mov
mov
pop
loop
out
ds
shrl
add
aad
movsb
cmpsb
lret
sub
out
fcomip
pop
pop
pop
ds
jg
mov
jecxz
jo
lahf
mov
in
int3
hlt
aas
scas
and
aam
fcmovne
mov
lea
repz
lods
adc
rclb
jb
push
or
int
mov
rolb
dec
mov
and
in
pop
fildll
hlt
and
adcl
loop
push
js
fstp
cmp
mov
mov
mov
fbld
loope
aad
sarl
loope
hlt
push
jge
xorb
rep
bound
pop
lret
or
inc
add
sbbb
and
cmpsb
inc
or
pop
je
jp
cmp
mov
pcmpeqd
sbb
jbe
lcall
fwait
lahf
add
jnp
add
test
aad
dec
daa
jo
add
dec
aas
mov
fsubr
push
loopne
pushf
shrb
push
testb
xchg
adc
pop
inc
bound
lods
clc
es
fistps
xor
mov
imull
cmp
pop
xchg
out
ds
inc
push
in
cld
xchg
adc
cmpsb
lea
inc
insb
mov
sbbb
inc
mov
mov
inc
rorl
imul
sub
jl
imul
jo
rcrl
jge
jg
mov
cld
fildl
movsb
lahf
mov
xchg
sbb
in
fwait
stc
pop
xor
jle
sub
notb
test
sub
dec
lahf
das
push
dec
pop
push
mov
sub
out
stos
call
sbbb
or
dec
cmp
insb
jne
sbb
mov
or
mov
out
mov
fcoms
mov
cmpb
sbb
mov
gs
mov
dec
stos
mov
sbb
repnz
setp
jae
pushf
jnp
push
clc
mov
jp
data16
lea
push
xchg
jl
test
pop
nop
mov
inc
inc
inc
adc
xor
lods
mov
or
pop
push
jno
jp
cmp
sub
push
shrb
xlat
jo
and
ja
stc
ss
testl
jmp
je
hlt
ret
sbb
insl
jg
add
xchg
adc
and
int3
test
fwait
push
or
push
sar
xor
movsb
jbe
and
mov
cmp
xlat
sbb
pop
fstp
sbb
add
push
add
pop
adc
push
pop
dec
mov
mov
push
repz
adc
sarb
subb
mov
sti
idivl
movsl
cmp
mov
dec
fwait
bnd
pop
icebp
aas
xlat
push
jp
pop
sub
repnz
cmpsb
pop
fdivs
inc
xchg
int3
push
pop
int3
fs
xchg
cmpsl
inc
cmp
dec
ret
mov
scas
lret
insb
stc
sbb
sbb
cmp
data16
inc
pop
shll
mov
je
inc
clc
mov
push
pop
jnp
mov
cmpsb
shrb
incb
pushf
iret
pop
outsb
adc
dec
les
adc
stos
in
into
das
or
int3
fsubrs
fisttpl
mov
sbb
test
cmp
push
or
std
adc
int
repz
vpunpcklbw
fsts
shll
imul
pusha
pop
cli
out
int
xor
arpl
pop
stos
xlat
addb
inc
clc
addb
gs
into
xchg
sub
and
dec
mov
mov
cld
xor
movsl
xor
js
repnz
adc
outsl
pop
jl
dec
jmp
into
adc
xor
sbb
inc
jbe
xchg
ds
movsl
or
jb
pop
add
cmp
inc
loopne
push
adc
inc
jnp
push
inc
lea
push
faddl
repz
push
jp
enter
or
add
clc
xchg
cmp
into
or
nop
jno
test
loopne
push
ret
fisubl
sahf
scas
loopne
add
sub
repnz
outsb
adc
das
mov
lods
push
repnz
xorl
xchg
repnz
in
jge
movsb
loopne
ficoml
rclb
loope
and
pusha
xor
ret
mov
push
cmp
sbb
pop
lods
adc
xchg
stos
mul
bound
int3
and
pushf
mov
lret
pop
fdivl
and
sbb
les
daa
movsb
out
and
jecxz
movsb
xchg
push
xchg
mov
out
mov
add
mov
cs
lds
outsb
arpl
hlt
das
ds
push
xchg
dec
mov
insl
cmp
mov
push
xchg
pushf
std
lahf
gs
xor
data16
jne
jnp
xchg
add
ja
mov
and
lock
cvtps2pi
mov
cmp
test
gs
or
pop
xorl
outsl
fs
cwtl
clc
push
fstl
mov
pop
sub
fwait
lods
push
clc
clc
push
dec
in
insb
into
in
pop
nop
ss
add
sahf
mov
stos
scas
out
pop
test
into
sub
push
xchg
xor
cmpsl
adc
sub
and
dec
pusha
push
cmpsb
arpl
popa
mov
cmpl
push
dec
ret
stos
fisubrs
or
in
jno
insb
clc
imul
fs
sbb
stos
and
xorl
lcall
mov
sbb
popf
data16
and
pop
lret
cltd
xchg
mov
bound
incl
inc
outsl
ja
out
outsb
pop
repnz
jg
sub
cmp
test
pop
out
mov
xlat
sub
cmp
cwtl
push
xlat
dec
addr16
or
mov
imul
lcall
mov
nop
mov
and
into
js
repz
sub
xor
mov
js
xchg
push
in
jns
cld
xor
sbb
stos
scas
scas
fisttps
jl
ret
in
jne
cli
arpl
cmc
nop
cld
enter
jl
jae
mov
test
call
xchg
inc
jb
std
outsl
sub
test
sti
push
lahf
scas
cmp
mov
push
push
or
jle
iret
or
push
push
push
not
scas
adcl
test
dec
out
dec
pop
cmp
shrl
in
leave
pop
push
xor
dec
test
sbb
xchg
xor
fsubrs
pop
outsb
repnz
mov
dec
dec
ret
jo
stos
sbb
push
inc
fidivs
dec
xchg
adc
pushf
add
lods
movsl
subb
push
and
outsl
andl
lret
int
es
jmp
test
lret
out
jp
sub
xchg
pop
out
jno
repnz
mov
sbb
mov
icebp
loop
lret
imul
ret
push
or
mov
clc
andb
jbe
in
and
enter
fwait
and
jnp
mov
or
or
stos
das
cmp
adc
cmpsb
add
xor
div
mov
inc
push
mov
dec
and
insb
sub
add
cli
pop
cmp
lahf
or
gs
sub
inc
and
dec
sarl
rcrb
jmp
cmp
fwait
aas
outsl
jbe
add
mov
pop
pop
repz
xorl
ret
aas
inc
push
jl
movsb
loop
inc
push
jo
nop
fmuls
imul
and
xor
xor
add
xor
xlat
pop
test
hlt
mov
in
cmp
loope
repz
pop
and
loopne
push
enter
shlb
cmp
xor
and
icebp
test
pop
dec
cmc
sub
dec
add
and
test
std
mov
sub
dec
fldl
inc
in
push
in
xchg
inc
inc
aas
push
sub
adc
lahf
sub
push
cmp
sbb
shl
push
cmp
jl
pop
mul
inc
mov
xor
or
adc
aaa
pop
add
xor
add
pop
mov
adc
lahf
ret
test
sbb
and
subl
scas
lcall
mov
fcoml
mov
mov
jge
out
ret
mov
sbb
mov
mov
mov
movsb
repnz
push
sbbl
pop
imull
cld
cmp
dec
xchg
xchg
stos
push
loopne
push
xchg
jp
fucom
and
push
test
xlat
insb
stos
sbbl
sbb
xor
cld
mov
jnp
mov
inc
pop
pushf
test
mov
pop
sub
push
add
xlat
xchg
cmp
mov
pop
fistl
arpl
stos
in
add
and
xor
loope
pop
int3
xchg
outsb
fsubrs
out
jge
dec
xor
lds
stos
clc
xchg
outsl
xchg
icebp
mov
or
cltd
pop
push
jp,pn
leave
rorl
jnp
jl
iret
pop
pop
mov
fwait
repnz
cwtl
lret
xor
cmp
fcomps
sbb
mov
inc
lea
jne
xchg
cmp
test
mov
add
inc
mov
pop
jbe
int
mov
xchg
lahf
ja
loope
pop
loop
cmp
push
movsb
xor
mov
aas
xor
jle
fldcw
loop
jb
inc
inc
dec
mov
dec
xchg
push
xchg
mov
adc
fcomps
rolb
mov
fisttps
xchg
push
imul
add
mov
push
dec
or
dec
adc
add
fs
sbb
adc
add
sbb
cld
sbb
mov
xchg
xchg
adc
add
adcl
push
sub
jo
xchg
jne
cmp
xor
cmp
push
or
cmpsl
stos
push
sub
mov
cwtl
jnp
outsb
lods
pop
shlb
xor
cltd
push
movsl
aad
pop
sbb
pushf
jmp
and
aam
js
test
push
jbe
inc
std
pop
jns
sbb
mov
pop
rolb
sahf
xor
jmp
mov
sbb
pushf
addr16
bnd
adc
aaa
insl
xchg
sub
push
fidivrl
out
pop
mov
loop
push
lret
pushf
xchg
roll
jge
lahf
lret
inc
aam
mov
scas
jg
pop
mov
call
mov
fs
cld
cld
faddl
sub
out
mov
mov
cmp
stc
mov
add
mov
popl
nop
sub
jne
push
scas
xchg
jg
xchg
insb
mov
and
int
movsb
les
shrl
xlat
adc
popa
std
mov
mov
sub
jbe
sbb
mov
hlt
out
ret
nop
inc
aaa
cmpsl
shlb
mov
adc
dec
dec
outsb
jb
add
and
bound
adc
dec
mov
add
lret
mov
aad
push
out
lret
pop
adc
mov
add
scas
out
mov
sarl
pop
or
movsl
stos
out
add
dec
jns
movsl
mov
loope
push
leave
ds
ljmp
push
push
or
das
pop
nop
mov
inc
or
mul
pop
ret
jbe
mov
addr16
xchg
inc
xchg
cmp
or
fldcw
mov
es
fdivl
arpl
hlt
ret
cmp
or
mov
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
add
jp
pop
jp
xor
xor
xor
icebp
rorl
dec
cmp
inc
jns
push
out
test
and
jg
mov
push
test
mov
repz
fwait
jae
lret
add
xor
push
adc
jg
clc
les
cmp
lods
pop
xchg
jmp
mov
popf
jge
cmp
xor
and
out
dec
loop
adc
into
push
movsb
jle
testl
outsl
pop
mov
js
or
jge
lock
inc
es
out
xor
add
movsl
add
cmpsb
xchg
or
pop
insl
xchg
jmp
leave
mov
in
adc
test
inc
xor
pop
fucom
in
pop
add
arpl
scas
and
adc
in
loope
jns
jg
push
adc
push
cmp
mov
pop
add
xchg
out
xchg
stos
and
rcl
mov
cmpb
clc
push
jne
push
cmp
xchg
pop
fs
or
push
or
test
cs
ja
repnz
sub
add
xchg
enter
sbb
daa
xor
les
cli
fcmovnbe
mov
mov
xchg
imul
in
mov
les
jmp
in
jne
adc
scas
aas
daa
mov
out
subb
xchg
or
inc
sub
test
repnz
movsb
movsb
dec
xor
add
or
lret
mov
sti
push
add
in
lret
dec
repnz
orb
ss
in
xchg
and
pop
mov
xchg
popf
jge
add
movsl
pushf
sub
mov
rorl
stc
sbb
sti
mov
daa
daa
fldt
mov
jns
shlb
outsl
insl
cld
ja
orl
popf
lds
repz
xor
nop
sbb
loopne
add
sbb
sub
fbstp
dec
pushf
mov
popl
adc
out
jp
fstl
adc
lret
sub
sub
mov
stc
lret
in
xchg
movsb
outsl
in
sbb
inc
push
lods
push
mov
push
inc
dec
enter
ljmp
loope
inc
leave
ja
fisttpl
enter
pop
sbb
popf
pop
insl
mov
dec
pop
aas
or
xchg
push
sub
imull
call
cltd
cmp
mov
aaa
popa
leave
cmpb
scas
es
loop
mov
scas
push
jmp
dec
xor
sti
lcall
and
push
lea
cmpb
popa
xchg
cld
mov
inc
outsb
push
clc
iret
sbb
in
pop
das
loopne
mov
stos
cs
and
jbe
imul
std
cmp
stos
rcll
iret
insl
insb
jg
hlt
int
jo
pop
cld
fnsave
dec
or
scas
fbstp
in
mov
andl
cmp
mov
xor
xchg
cmp
fimull
mov
hlt
outsb
pop
xchg
sarb
mov
movsl
fisubrs
flds
and
jecxz
pop
dec
leave
movsb
sbb
aas
in
cmpsl
lahf
bt
jecxz
mov
dec
mov
jmp
out
dec
out
outsb
mov
cli
imul
iret
push
mov
lret
test
or
and
jl
sbb
cmp
jg
dec
bound
cmpsb
jb
sarb
xchg
cli
idivl
inc
pushf
test
mov
xchg
xchg
dec
fnstenv
addb
pop
popfw
adc
mov
push
pop
push
push
sub
dec
mov
adc
or
mov
ljmp
repnz
jmp
pop
lods
add
cmp
int
outsl
adc
pop
les
adc
mov
cltd
push
nop
mov
push
mov
or
push
adc
jmp
or
push
sahf
push
xchg
mov
xor
pop
or
adc
fs
movsl
mov
sub
lret
stos
jge
mov
cltd
sub
dec
xor
test
dec
pop
int3
in
test
inc
mov
mov
mov
outsb
imul
pop
push
daa
scas
inc
jp
xor
push
lahf
sub
dec
jmp
xchg
sbb
fidivrl
loopne
movsb
jge
mov
sti
fadds
mov
out
mov
xchg
ret
testl
ret
fldcw
in
insb
fwait
or
fwait
or
enter
adc
xlat
shl
loope
push
nop
pop
sub
out
mov
mov
fmuls
mov
pop
mov
xchg
lock
inc
push
add
into
mov
lret
gs
jge
lock
lods
movsb
sbb
mov
sub
jns
add
mov
push
test
out
sbb
push
loope
incb
adc
mov
hlt
mov
inc
inc
arpl
ss
pop
push
ret
ljmp
or
shll
data16
sbb
cmp
push
mov
inc
mov
jb
test
lods
enter
or
dec
jg
fimull
jp
arpl
mov
sub
push
jge
xchg
dec
pop
stc
add
ds
cwtl
adc
loope
cld
jmp
and
xor
cmp
test
push
dec
pop
push
and
xor
add
mov
sbb
out
hlt
sbb
insl
add
adc
imul
insl
mov
std
inc
xchg
imul
mov
push
das
add
cmc
js
insb
lret
shrb
out
mov
xor
inc
pop
int3
jl
fwait
stc
mov
in
hlt
ret
dec
pop
and
pop
outsl
sbb
mov
jnp
or
dec
pop
addr16
mov
dec
and
push
jp
sbb
mov
add
in
mov
fwait
mov
adc
mov
push
rcr
mov
add
jecxz
lahf
cli
cmp
ret
int
add
stos
enter
les
in
nop
das
sahf
aam
lods
rcrb
loop
cmp
cmpsl
mov
push
andl
xor
je
insb
mov
lds
out
aad
sub
int
dec
pop
sub
cwtl
fsubp
mov
and
push
popa
jns
cmp
shlb
cmpsb
adc
xor
movsl
insl
push
or
fimuls
sub
mov
xor
aaa
jge
adc
pop
dec
notb
mov
subb
sub
xchg
scas
lds
cs
sub
hlt
dec
lret
je
mov
pop
cmpsl
cmp
or
dec
mov
in
pop
stos
cli
lret
std
inc
pusha
cmp
mov
pop
dec
fsts
mov
mov
je
adc
and
dec
rorl
inc
xchg
or
sahf
popf
rolb
cmp
fs
fwait
xor
jg
jg
pop
push
mov
jae
pop
add
xchg
sbb
sahf
and
popa
movsb
cmpsl
push
inc
mov
das
dec
mov
scas
mov
repz
outsl
inc
lods
mov
arpl
mov
xchg
insl
jae
and
repnz
into
adc
mov
inc
mov
lcall
mov
test
shll
out
mov
fildll
inc
fiaddl
ret
fldcw
sti
inc
jge
shl
cmpsl
jns
jae
shrl
scas
cltd
ss
push
and
xchg
sbb
fs
jmp
fwait
mov
inc
shll
fdivl
imull
xchg
pop
pushf
push
cld
jmp
pop
ds
jae
or
jnp
lods
stos
dec
inc
test
inc
sbb
mov
aad
enterw
insl
mov
or
das
enter
pop
xchg
int
das
outsl
test
mov
shlb
insb
mov
mov
jne
mov
sbb
jge
mov
out
out
push
push
test
sahf
pop
inc
in
js
push
std
stc
adc
xchg
xchg
ret
daa
sbb
cs
or
push
xor
out
cmc
cwtl
in
sub
xchg
nop
hlt
repnz
bound
lds
js
je
std
sbb
das
in
hlt
shrl
out
push
repnz
mov
xor
mov
jecxz
pop
shrl
mov
push
mov
push
test
inc
jl
pusha
add
sbb
iret
xor
loopne
ror
sbb
mov
lods
xchg
das
dec
or
and
sbb
mov
sti
adc
or
shrl
imul
and
arpl
dec
dec
cmpsb
push
rolb
xchg
test
rcll
mov
mov
dec
je
sub
andl
jecxz
add
pop
jp
test
mov
iret
imul
in
sub
rorl
lds
cmp
lret
sub
popf
push
daa
lahf
lret
inc
and
and
ret
addr16
test
adc
lcall
mov
int3
pop
add
test
pusha
pop
mov
scas
cs
fadds
outsb
in
mov
sub
repz
push
cmc
xchg
shll
xor
add
rcl
mov
insb
push
gs
push
sbb
jl
lea
sub
and
sub
notb
lahf
cmp
jne
jns
mov
mov
mov
int
lds
or
fwait
mov
fwait
popl
lea
push
fcomps
nop
sub
push
jg
jmp
subb
inc
sub
mov
add
insl
mov
adc
mov
jae
cmp
sub
xchg
cmp
adc
adc
out
ret
jo
into
mov
xor
in
or
jnp
push
cs
lret
fisubs
mov
push
add
ja
mov
push
xor
out
in
jns
mov
add
sub
xor
dec
cmpsb
and
lcall
enter
iret
or
sbb
or
and
jmp
pusha
xor
sbb
adc
lahf
jns
xlat
es
hlt
inc
mov
dec
cmp
xlat
pop
mov
inc
add
jle
pop
add
stc
mov
adc
and
jl
cmp
jb
insb
divl
mov
insl
mov
sbb
dec
hlt
adcb
fldt
lcall
inc
add
int
dec
jae
pop
and
cmp
and
sub
inc
dec
rcrl
jg
repz
ss
shlb
pop
mov
sub
decl
into
push
inc
pop
ja
adc
push
push
mov
xor
xchg
inc
jns
pop
sub
dec
jns
add
mov
in
lods
and
push
mov
std
dec
push
pop
xchg
mov
movsl
sahf
xchg
and
shl
test
push
stc
inc
cmp
jl
stos
aad
cmp
data16
sahf
shlb
lods
xchg
lock
xor
cmpsb
clc
test
cld
jb
mov
movsl
jno
in
dec
enter
push
or
lahf
add
andb
sbbb
scas
pusha
movsl
push
gs
inc
cmpsb
cmc
icebp
cwtl
mov
ja
mov
mov
outsl
cmp
push
mov
and
inc
test
sti
js
in
xor
out
jb
jns
mov
in
movsb
xor
push
mov
imul
and
cwtl
mov
sub
mov
sbb
inc
mov
or
mov
and
andl
lock
cmp
test
lcall
push
jp
or
loopne
jge
lods
movl
add
add
and
jmp
scas
pop
ret
sahf
mov
call
and
push
jo
ja
inc
stc
mov
or
inc
lds
add
jp
adc
jg
xchg
sahf
adc
aad
dec
add
cmc
mov
bound
aam
orl
ss
sub
or
js
lea
int
fiadds
dec
jmp
pop
jl
mov
mov
outsb
pusha
pop
mov
popa
push
bound
out
dec
stos
loopne
add
cs
cmp
outsb
sub
das
or
orl
repnz
notl
clc
pop
xor
test
and
bound
push
cmc
xchg
mov
sbb
xchg
repnz
inc
adc
stos
daa
sub
sub
pop
or
dec
dec
pop
push
fistps
sbb
sti
xor
stc
arpl
es
push
hlt
out
jo
mov
lahf
stos
xor
inc
dec
mov
mov
popa
imul
movsb
push
xlat
movsl
movl
ror
push
mov
push
sbb
and
mov
mov
and
mov
stos
shrl
outsl
cltd
mov
mov
mov
lea
std
cltd
shlb
inc
jmp
dec
push
mov
xchg
dec
or
cwtl
sbb
jae
cmp
inc
cmp
jecxz
adcb
mov
add
push
gs
je
pushf
or
push
mov
jbe
or
outsb
add
ror
call
mov
cmp
fsubs
packsswb
xchg
repnz
aaa
pop
adc
test
int3
sub
mov
pop
push
jns
sub
scas
push
lods
pop
mov
adc
bound
mov
mov
push
pop
jmp
loope
push
loop
shr
adc
shr
xchg
mov
fdivp
jae
sub
adc
sbbb
dec
dec
mov
pop
cld
orb
xlat
jae
xchg
add
test
jmp
xchg
cmpsl
jae
daa
adc
dec
shll
out
mov
inc
push
fisubs
dec
mov
sub
out
fs
xchg
dec
jmp
rcl
cld
and
adc
popa
xchg
or
in
xorl
push
test
sti
mov
lcall
adc
cmp
or
mov
jp
ss
arpl
das
vpcmpeqd
popa
add
push
dec
lods
and
fstpt
movsl
add
imul
jg
sbb
mov
int3
sarl
xrelease
adc
pop
cld
movlps
mov
inc
pop
mov
les
and
test
xlat
push
ficompl
aad
mov
pop
outsl
add
test
mov
mov
shrl
push
pop
push
xlat
jg
loope
scas
push
pop
das
das
in
int3
mov
dec
mov
mov
cs
xlat
imul
xchg
call
mov
sub
cmp
dec
dec
xor
pop
mov
sbb
daa
fimuls
push
xchg
add
int
imul
aaa
cmpsl
sbb
push
outsl
mov
mov
lods
movsb
push
es
jbe
test
cmpsl
jns
scas
mov
jecxz
test
popa
mov
aam
xor
cmp
mov
xchg
adc
mov
or
mov
bound
aas
fwait
es
inc
mov
mov
mov
and
xor
mov
in
ja
lock
mov
pushf
mov
pusha
cmp
push
sbb
in
mov
adc
neg
hlt
mov
fs
les
lcall
outsl
fs
push
es
or
xchg
out
dec
iret
or
lods
lea
pop
pop
adc
xor
stos
mov
pop
pop
inc
jg
or
shrl
ret
int3
test
loop
push
pop
call
and
push
fsin
or
add
ljmp
cmpsl
or
mov
mov
cwtl
jae
sub
test
or
or
sbb
inc
out
add
dec
mov
mov
stos
push
rcr
into
mov
mov
pop
xlat
mull
test
add
inc
jecxz
xchg
push
jbe
test
lds
lcall
ljmp
mov
xchg
subb
icebp
ds
sub
mov
stos
subb
sti
pop
aam
icebp
cs
sti
push
pushf
into
or
jg
aad
push
sti
hlt
mov
inc
push
or
in
je
sub
cmc
and
pop
loopne
arpl
push
leave
sbb
std
cs
pop
mov
xchg
xor
enter
cmp
pop
mov
popa
xchg
mov
popa
outsb
mov
xchg
rorb
inc
dec
dec
pop
movl
xor
nop
test
fidivrl
or
shrl
rcll
and
mov
push
mov
xlat
push
aaa
or
mov
pop
aas
not
sub
shll
int
enter
out
sbb
inc
js
insl
lret
pop
lds
xchg
pop
ret
hlt
cmpsb
int3
and
dec
push
push
push
movsl
dec
ds
jle
test
adc
adc
lea
pop
inc
ss
sbbb
icebp
mov
mov
pop
or
enter
xor
pop
shrb
divl
icebp
hlt
jne
push
push
aad
mov
push
movsb
repnz
sti
xor
orb
dec
or
inc
insb
movsb
and
je
sahf
xor
test
es
int
popf
imull
lods
inc
sbb
xchg
push
push
cwtl
out
stc
call
jl
pop
sti
xchg
pop
dec
xchg
sub
test
insl
or
sbb
and
aad
in
mov
sub
ficoml
adc
dec
jmp
cmp
mov
aad
cmpsb
mov
sbb
sbb
scas
jg
inc
out
mov
pop
int3
ja
lds
movsl
sar
lods
js
mov
lahf
cmpsb
push
stos
inc
adc
scas
sub
movsb
jp
cmc
and
shlb
pop
jb
push
enter
add
notl
adc
rorb
pop
ret
xor
dec
sbb
jge
popa
pushf
inc
ja
cld
or
adc
insl
sub
out
ja
js
dec
mov
mov
out
inc
jnp
mov
fmull
sub
aaa
fstp
orl
ds
mov
jl
xor
mov
ja
xchg
gs
push
push
or
pop
adcl
sahf
cli
jecxz
xor
push
adc
ret
mov
xlat
inc
test
push
inc
dec
add
adc
inc
lock
push
jl
adc
negl
sahf
jnp
xchg
ret
fs
aas
lods
out
and
in
scas
aas
mov
sbb
adc
adc
stos
lds
gs
jae
push
aaa
insl
add
jge
out
int
ret
or
ja
xor
sbb
shlb
or
xchg
cmp
push
in
xor
shrl
mov
stos
push
enter
push
and
rorl
dec
test
nop
jecxz
cmc
int
neg
lret
and
or
lock
lret
movsb
xor
dec
mov
cmp
into
mov
cs
push
push
sbb
sub
and
lods
out
shlb
adc
mov
add
cmp
shrb
in
insb
jb
rcrb
das
and
out
mov
out
jns
bnd
inc
cmpsl
jo
subb
cmp
in
add
out
push
out
xchg
sub
sbb
or
inc
lea
ljmp
jl
pop
push
pusha
iret
push
xchg
jl
ljmp
sub
daa
insb
add
imul
and
insl
andnps
ret
jo
cli
scas
inc
xor
xor
inc
push
in
pop
scas
outsb
add
lret
jbe
stos
ret
sahf
mov
and
push
cmp
cld
dec
stos
int3
shlb
int
mov
arpl
mov
cmp
xlat
or
add
push
loop
fwait
repnz
dec
xchg
add
int
in
adc
sub
nop
stos
xor
sarl
pop
jne
sub
mov
inc
push
js
or
fisubrl
adc
inc
push
push
mov
into
daa
leave
jge
test
mov
ss
jp
or
cmc
rclb
jp
mov
loop
or
pop
stos
adc
cld
repnz
mov
pop
xchg
ret
push
fdivs
adc
jmp
fistps
xor
orl
mov
mov
fstl
mov
xchg
xor
leave
leave
imul
cmp
mov
jmp
pop
mov
jle
mov
jmp
push
lock
les
push
sbb
inc
push
jo
pushf
pushf
xor
mov
scas
xor
mov
and
cmpsb
fnsave
cld
xchg
pop
cli
arpl
loop
enter
imul
loopne
in
sar
outsb
addr16
sub
lret
popf
mov
xchg
push
mov
hlt
jns
ds
test
lds
sub
mov
sub
mov
mov
xchg
cmp
mov
mov
xchg
dec
and
lock
pop
mov
sbb
lods
pop
pushf
jl
enter
inc
mov
or
or
and
mov
sahf
movsb
ja
addr16
jmp
pop
test
xor
jo
push
shrb
pop
std
hlt
test
dec
outsl
push
inc
fdivp
in
movsb
lahf
adc
test
aaa
xchg
mov
push
pop
lret
pop
jne
sbb
or
lret
sti
pusha
cli
js
adc
mulb
fs
cld
outsb
in
stos
pop
loop
js
jg
in
dec
iret
popf
hlt
ret
in
icebp
jnp
pop
mov
idiv
out
push
dec
mov
dec
movsl
pop
mov
insl
cli
pop
jno
call
xor
jle
pop
sarl
inc
add
xchg
shll
push
inc
scas
test
xchg
push
adc
or
xor
adc
and
mov
nop
outsl
fmuls
outsl
hlt
imull
sub
je
aaa
addb
dec
icebp
xorps
aad
cmp
cmp
push
jno
orl
mov
mov
fisubs
cmp
wbinvd
cmp
cmp
adc
adc
enter
or
loop
pop
jne
aas
in
aad
xor
repz
repnz
mov
mov
sbb
ret
jp
cld
push
loope
or
in
push
mov
mov
xrelease
js
js
xchg
cmp
in
mov
sarb
fisttps
xor
jmp
out
xchg
pop
adc
jne
jb
lock
jmp
jge
dec
jp
jb
aaa
xor
inc
jne
lock
in
repnz
aam
cmp
adc
xor
mov
pop
cmp
in
orl
mov
and
stos
cmp
lods
lret
jb
mov
notl
or
out
and
les
push
dec
test
fistl
fcoml
push
pop
pop
ret
shlb
pop
or
sub
add
jle
andl
and
inc
mov
in
sbb
jae
add
mov
sbb
cwtl
test
inc
mov
jmp
imul
icebp
cld
mov
push
outsb
pop
jae
add
xchg
pop
and
out
outsl
mov
fisubl
or
mov
aam
cltd
xchg
dec
sbb
xchg
clc
into
dec
xchg
jecxz
mov
fwait
dec
and
fdivl
rclb
cmp
cltd
jecxz
cmp
lds
jnp
movsb
mov
ljmp
in
add
xor
add
outsl
rorl
mov
mov
fidivrs
sbb
jecxz
dec
je
add
rclb
cld
xchg
scas
mov
dec
lock
sub
jp
adcl
cmpsl
imul
jo
jge
insb
cmpsl
pusha
push
push
fnstenv
push
xchg
enter
push
and
jmp
in
dec
add
sbb
inc
dec
dec
mov
inc
and
mov
int
cmc
adc
das
cli
mov
rolb
jnp
cmp
or
pop
pop
adc
sub
xchg
inc
mov
in
inc
aad
in
xor
ret
out
mov
lods
xor
faddp
and
add
test
fdivrl
mov
xchg
pop
or
sbb
sub
sbbl
cmp
jg
popa
daa
test
addb
loopne
or
mov
imul
mov
adc
das
mov
xor
pop
stos
test
insl
lahf
jae
add
dec
mov
lock
adc
repz
cs
sub
pop
stc
jbe
jge
sbb
in
dec
jbe
aad
insl
enter
cli
xchg
pop
mov
call
lods
inc
mov
jl
fwait
jecxz
ffreep
out
movsb
push
sub
xlat
mov
cwtl
inc
or
pop
xor
mov
xchg
mov
mov
jb
or
out
out
push
dec
xchg
sub
mov
xor
push
insb
push
mov
xlat
add
int
sub
push
xor
jb
mov
pop
pushf
mov
adc
adc
frstpm(287
in
mov
fsubp
sub
cld
push
push
mov
jnp
adc
loope
pop
jns
xor
and
inc
fs
movsb
iret
push
aad
mov
rcrb
stos
lret
cmp
lds
cmp
jo
push
xchg
push
enter
nop
jp
jns
std
es
fnstcw
jl
ret
push
mov
pusha
jo
mov
sbb
imul
bound
mov
cwtl
lahf
mov
rol
add
pop
lock
push
sbb
jb
mov
adc
shr
cmp
mov
or
stc
jg
pop
mov
jmpw
in
call
push
call
xchg
dec
scas
adcl
pop
cltd
decb
push
mov
mov
iret
cmpsl
adc
in
jo
cld
adc
or
mov
cwtl
pop
movsl
pop
xor
inc
jbe
loopne
or
pop
sub
mov
into
divb
mov
fs
adc
out
fwait
jne
sbb
and
pop
fnstenv
xchg
sbb
mov
push
pop
sti
inc
sbb
xchg
shlb
mov
mov
insl
mulb
das
mov
mov
xchg
push
sbb
xor
fdivrl
in
jmp
pushf
mov
xchg
rol
cmpsb
cvtdq2ps
fwait
gs
daa
pop
mov
sahf
dec
dec
lods
add
or
dec
sbb
cld
aad
sub
mov
cli
ljmp
sbb
rcrl
je
fdivs
rcrb
or
add
adc
scas
push
lds
add
repz
push
or
jnp
out
mov
les
ljmp
mov
out
push
or
dec
sbb
mov
pop
jns
aad
mov
stos
stc
lods
jmp
out
adc
or
cmp
xor
test
lahf
pop
into
imul
cmp
int3
add
outsl
das
fbstp
push
jne
sahf
in
pop
lret
out
mov
jns
mov
jb
pop
imul
fsubrs
xor
cmp
stc
jnp
lret
xchg
sbb
aad
sub
sbb
stc
ljmp
xor
xchg
push
mov
xchg
and
sbb
xor
or
pop
push
lahf
mov
pop
add
ds
mov
mov
cld
jl
pop
mov
pop
pop
cmc
cld
pop
mov
mov
or
jle
xor
stc
pop
pusha
bound
insb
mov
out
movsl
adc
test
imul
andl
sbb
mov
cmpsl
or
cmp
jp
shlb
subb
add
imul
lods
push
xchg
push
mov
out
mov
xchg
push
fsubrl
gs
xchg
add
push
daa
push
pop
fstl
stc
mov
xor
xor
test
mov
shrb
push
daa
movsb
rcl
inc
ljmp
cs
mov
stc
in
adc
xor
push
enter
into
pop
cmp
decl
mov
xchg
xchg
faddl
hlt
shl
push
js
adc
cltd
test
mov
addb
and
fildll
adc
adc
loopne
fdivl
lret
xlat
loopne
push
outsb
icebp
xor
dec
out
cltd
ljmp
pop
sarb
pop
popa
push
imul
push
add
mov
jecxz
mov
jle
js
sub
mov
dec
loopne
dec
dec
xchg
xor
jo
iret
jl
cltd
xor
jnp
lcall
pop
mov
dec
xchg
adc
add
fsubp
jo
repz
js
sub
mov
jns
test
xchg
push
mov
ret
ret
fdivp
cmp
test
ja
xchg
cmp
push
mov
test
add
push
mov
rolb
aam
js
mov
dec
shrl
fadds
int3
jp
les
xor
mov
add
sahf
fsubrs
fistpl
cwtl
enter
mov
push
dec
adc
jnp
jp
daa
mov
in
stos
inc
repnz
sub
sbb
cmpsb
mov
adc
lcall
pushl
xchg
sahf
insl
ret
sub
and
mov
mov
pushf
sub
cmp
sbb
lcall
jae
aad
call
addr16
mov
or
in
jl
mov
mov
mov
lahf
sbb
aam
jecxz
pop
insl
push
add
lds
ret
movsl
push
jge
mov
mov
andb
outsb
adc
inc
out
sbb
nop
or
cmc
mov
xor
mov
xor
cld
scas
stos
pop
popf
das
test
std
jp
xchg
out
dec
mov
outsb
into
pop
push
and
and
arpl
test
xor
or
cwtl
cmp
lahf
pop
push
outsb
out
jmp
or
iret
inc
mov
shll
std
ss
popa
cwtl
jl
fsubr
push
pusha
call
mov
cwtl
mov
lock
xor
adc
fcmovnb
aad
cwtl
push
push
popf
outsb
push
pop
inc
roll
outsl
les
call
sub
mov
mov
ds
in
jp
cmp
mov
mov
iret
xchg
stos
loope
mov
or
xchg
into
stos
cmc
adc
mov
adc
insl
movsl
sbb
mov
shrl
fwait
mov
stos
mov
call
mov
cmp
sbb
loope
push
push
scas
mov
fsts
ss
testb
push
in
cmp
inc
sti
jns
push
sbb
mov
jnp
pop
divb
mov
mov
mov
and
std
rorb
mov
dec
cmpsl
orl
in
fwait
dec
je
or
ficompl
push
aas
dec
push
outsb
loopne
jb
sti
ss
jno
aad
lods
aas
xlat
xor
arpl
mov
cli
enter
insb
add
out
mov
vrsqrtss
inc
mov
sbb
je
and
add
addr16
cld
jl
test
cmpsb
enter
xor
mov
xchg
xchg
mov
fists
div
fwait
dec
pop
push
add
notl
es
lea
into
mov
mov
jnp
inc
dec
dec
sarl
stc
push
xor
jnp
cmp
pop
jge
lock
xlat
in
je
bound
xchg
sbb
xchg
jp
sub
imul
mov
jge
sbbl
movsl
sahf
push
das
lret
hlt
out
xchg
mov
inc
sti
in
sub
adc
and
mov
mov
mov
rorl
stc
into
jp
out
mov
mov
jb
cmp
outsb
fdivrs
mov
orl
roll
mov
fcomip
std
les
xor
cs
loope
and
ss
sub
scas
ret
mov
cvtps2pi
aaa
mov
aam
push
sti
punpcklbw
aam
or
and
xchg
jnp
xor
add
cmp
push
xlat
sbb
xchg
jnp
repz
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
ds
jp
add
jp
mov
fadd
and
cli
push
push
scas
lret
cmc
or
add
push
mov
fs
inc
fcoms
movsl
dec
fstps
das
push
jb,pt
pop
repz
pop
and
push
jbe
addb
xchg
jle
clc
fwait
jmp
adc
xchg
test
add
pop
xchg
and
push
pop
sahf
or
subl
sahf
rol
insl
pusha
repnz
fwait
out
pop
sub
in
ret
push
sbb
aam
jb
ret
inc
outsl
cmp
test
mov
mov
insb
xor
insb
insl
jnp
xor
xchg
in
jg
xchg
cmpsb
push
in
and
pusha
push
movsl
xchg
inc
inc
mov
push
mov
je
xchg
mov
adc
cli
push
push
inc
into
xor
xchg
push
out
inc
pop
push
idivb
add
jmp
fisttpll
std
aam
xorl
add
mov
int3
xor
sbb
xchg
mov
clc
mov
push
mov
notb
dec
call
dec
mov
outsl
popa
loop
out
test
jbe
or
movsb
icebp
subl
mov
mov
xchg
loopne
inc
lea
dec
test
icebp
jb
int
adc
shrl
xchg
in
push
out
xor
pop
push
xchg
inc
cld
cmp
loope
cmp
jge
movl
pop
pop
xor
xor
pop
add
push
push
push
inc
insb
or
inc
dec
mov
lcall
imul
adcb
push
xchg
dec
add
and
ret
pop
mov
lahf
stos
sub
sub
add
pop
xor
sbb
pop
pop
out
nop
sahf
jecxz
loope
out
pop
cmpsb
push
das
or
inc
sub
enter
pop
inc
push
jbe
add
lock
sahf
xchg
inc
rcr
cmp
sbb
lds
fucom
aam
adc
clc
pop
into
sbb
stos
xchg
aam
outsb
sub
ficomps
jb
push
or
inc
mov
jecxz
xchg
ljmp
xchg
jmp
cmp
and
andb
push
mov
nop
insb
xchg
jecxz
add
pop
orl
jg
test
stc
loop
mov
inc
push
inc
cmp
filds
jbe
pop
push
adc
mov
shr
mov
arpl
and
or
icebp
sub
insb
outsb
dec
insb
dec
mov
add
and
enter
testb
sub
imul
jecxz
mov
idivb
sarl
lahf
pop
mov
mov
sub
fidivl
fidivrs
ljmp
jg,pn
lock
mov
adc
test
pop
testl
or
push
and
fwait
push
xchg
cmp
rclb
arpl
sbb
sub
pop
test
push
in
mov
jae
pop
add
loop
lret
inc
mov
add
loopne
cltd
pop
lret
test
dec
loope
cli
xor
xor
inc
xor
cmpsb
lea
mov
pop
repz
or
jp
inc
data16
ss
xchg
fildl
push
sub
jecxz
sti
sbb
fmull
lock
out
mov
mov
jo
dec
std
das
shlw
mov
loopne
xchg
test
cmp
es
dec
in
cwtl
push
cld
addb
cmp
addr16
or
sub
sbb
outsb
icebp
dec
or
cmp
mov
divl
adc
enter
adc
xor
cli
movsb
daa
sti
in
or
aas
sbb
inc
dec
cmp
adc
xor
sbb
mov
pop
jmp
jae
arpl
mov
outsl
jnp
das
movsl
cmp
cltd
xchg
jb
mov
add
sbb
pushf
pop
sbb
scas
mov
fcmovne
dec
mov
mov
cmp
icebp
mov
sbb
shrl
inc
push
daa
and
sub
cwtl
aam
aas
movsl
loop
jne
stos
mov
mov
adc
arpl
clc
mov
dec
jmp
in
js
add
or
jle
rcrb
cmc
arpl
mov
adcl
enter
movsl
adc
push
xchg
fldenv
mov
jl
data16
outsb
adc
jmp
jecxz
adc
stc
xchg
jne
test
ficoml
inc
mov
ret
adc
mov
lock
bound
outsl
stc
fs
or
lret
outsb
push
or
mov
icebp
aaa
shlb
mov
leave
adc
aas
cmp
cmp
faddl
push
imul
and
pop
ds
adc
jae
out
xchg
cmpb
ret
dec
ja
cmp
pop
xchg
xchg
cmp
mov
cmpl
mov
aaa
stc
aad
xor
pop
jl
aam
test
adcl
out
into
stc
jle
dec
fwait
cmp
dec
addl
xor
dec
ret
adc
dec
cwtl
icebp
mov
jbe
xor
sub
mov
testb
cwtl
jl
stos
std
mov
push
cmpsl
dec
fcomps
xor
std
dec
incl
js
leave
into
jl
mov
fstpl
jmp
cmp
mov
cli
sbb
mov
sbb
leave
xchg
mov
pop
sub
nop
fwait
mov
loopne
push
or
movsl
or
mov
jg
pop
bound
pop
add
enter
loope
rolb
repz
aad
mov
jae
push
xchg
and
or
rcll
cmpsb
loopne
cmpsl
test
imul
mull
into
ss
add
or
xchg
cmc
jo
test
lret
dec
xor
into
add
mov
sti
sbb
mov
or
call
mov
or
sahf
sahf
pop
jle
mov
mov
sbb
xor
sub
nop
jg
arpl
push
in
fisttpl
test
sub
es
in
mov
bound
mov
sub
ficompl
scas
data16
test
and
push
inc
cmpsb
xor
ja
xchg
sub
dec
inc
pop
sbb
adc
sbb
aas
mov
rcl
cmp
jno
stos
inc
mov
push
test
je
push
fcoml
dec
xchg
loope
mov
xchg
aad
adc
stos
cs
mov
aas
ljmp
add
fadds
pop
xchg
xchg
movsb
add
cmp
xchg
neg
test
js
cltd
and
fisubs
add
aam
sub
adc
pop
mov
jbe
fsubrp
imul
or
xlat
sbb
push
mov
and
push
ret
scas
stos
cmpsb
daa
sbb
fwait
and
adc
aad
je
adc
xchg
stc
xchg
cs
mov
xchg
jnp,pt
lea
repnz
outsb
pop
fs
xor
inc
sarb
test
movsb
inc
imul
into
add
dec
adc
enter
mov
leave
jno
adc
and
mov
mov
xchg
xor
insl
rcrb
xor
lds
and
or
xor
scas
mov
stc
mov
in
ret
out
fisttps
push
lods
mov
ljmp
cmp
push
pop
or
sub
lock
pusha
ss
push
xchg
int
sbb
fsubs
mov
xchg
cmp
push
jl
adc
loope
lret
insb
mov
mov
jb
adc
mov
in
adc
rclb
dec
mov
adc
xchg
fwait
and
jp
cmp
inc
data16
xlat
inc
dec
jbe
rcll
push
add
mov
stos
pop
mov
imul
jne
cmp
pop
rcll
mov
call
jb
mov
adc
xchg
inc
xchg
push
std
pop
movsl
jp
scas
add
into
sub
push
cld
jle
aam
out
push
mov
orb
ljmp
mov
clc
insl
or
ret
fcmovu
ret
fs
or
aas
cmp
aad
and
push
test
out
aas
xor
arpl
mov
mov
add
mov
jnp
imul
and
fdiv
mov
push
push
jmp
xchg
push
xchg
xchg
mov
mov
inc
mov
ret
repz
inc
lods
xchg
jo
mov
and
add
fldenv
mov
and
fs
lock
cmp
pop
jle
jg
xor
fists
xchg
cltd
fisubs
movsb
int
push
js
out
repz
test
fstps
popa
sub
int
ljmp
je
sbb
jns
lahf
cmpsl
mov
lret
in
pushf
lret
ret
cmp
cmp
int
jae
sbbb
repnz
insl
fdivrl
sbb
out
sub
push
lahf
jmp
lahf
push
popa
mov
jb
in
sahf
hlt
pop
mov
jne
and
jge
fildl
lret
in
sbb
ljmp
negb
mov
push
adc
xlat
fwait
andl
mov
mov
and
test
lcall
xchg
dec
lock
xchg
movsb
add
xorl
out
mov
ds
cwtl
popa
sub
push
push
dec
pop
pop
mov
daa
fdivrl
push
inc
mov
push
stos
dec
icebp
idivl
cld
test
mov
or
xchg
dec
sbb
insl
testb
or
inc
xor
cwtl
jb
lcall
mov
das
lret
es
ja
loop
pop
cs
shll
pop
and
xchg
std
addl
es
stos
dec
xor
xor
or
and
adc
daa
or
pop
cwtl
clc
mov
sbbl
pop
das
lock
sub
iret
mov
pop
enter
add
rcr
popa
aaa
push
mov
mov
addb
mov
fists
out
xchg
dec
rcll
jp
sub
dec
sub
dec
lods
fbstp
jp
hlt
movsl
sbb
xchg
inc
or
push
cmc
cli
addr16
fisttpll
outsl
mov
fwait
dec
jne
mov
stc
imull
xlat
or
pusha
push
subl
arpl
push
inc
inc
rcrb
mov
jg
cmp
enterw
in
mov
cmc
arpl
aad
mov
or
cmpsb
js
jae
jp
scas
ss
cmp
pop
cmpsb
jge
push
cmp
shrb
std
stos
test
adc
adc
sti
or
mov
ret
mov
mov
dec
xchg
mov
push
xor
and
mov
aas
sub
jno
mov
push
test
cmp
lods
push
in
pop
loop
addr16
loopne,pn
test
add
adc
stos
bound
aad
or
adc
ja
test
push
jns
sbb
lret
mov
mov
stc
divb
push
das
mov
pusha
sti
cs
fisubrs
inc
mov
rcrb
loop
add
xor
out
jnp
sub
jns
fmuls
addr16
sbb
in
cmp
jmp
or
fistl
sub
jge
arpl
fcomp
aaa
lods
addb
pusha
sbb
icebp
sbb
cltd
jbe
inc
cmp
ret
je
negb
sub
mov
jbe,pn
mov
xor
push
pop
cld
jae
jle
add
cli
arpl
das
adc
or
inc
out
sub
jns
jbe
xor
mov
jl
icebp
sbb
push
ja
rorl
xor
xchg
push
cwtl
jmp
hlt
xor
lock
lock
push
dec
pop
mov
pop
pop
repnz
mov
mov
sub
dec
cmp
sub
inc
xlat
loop
xchg
lahf
dec
sub
jnp
mov
push
int3
mov
xor
cwtd
cltd
mov
xchg
adc
lds
inc
xor
and
cmp
pop
lcall
addl
xchg
sub
stos
xchg
xchg
jnp
int
rcll
mov
add
pop
int3
aad
stos
sbb
push
clc
les
jbe
xchg
cmp
cmp
aaa
jmp
popf
fnstcw
sbb
lahf
jmp
jbe
mov
std
pop
push
inc
pop
mov
push
lret
pop
push
and
ljmp
xchg
in
mov
sub
xchg
jge
sti
sbb
subb
sub
in
fistl
xlat
mov
loopne
jecxz
xchg
ret
scas
ja
xor
sbb
xlat
or
and
push
dec
and
mov
pop
fadds
pop
xlat
fadds
lret
hlt
pop
jno
or
ret
je
stos
jg
sub
popa
das
aad
xlat
xchg
jl
jbe
pop
push
sbb
enter
movsl
adc
sbb
push
cmpsl
dec
rclb
pop
pop
jl
jmp
adc
test
js
test
mov
mov
mov
dec
cli
lfs
call
sbb
jo
pop
cmp
lods
divb
dec
lock
push
ljmp
jle
and
lods
addr16
mov
pop
lods
jge
cmp
or
jbe
inc
or
in
jne
cmc
inc
add
cmp
and
fisubs
add
loop
inc
adc
dec
push
jno
cwtl
movsb
mov
imul
push
mov
mov
push
shlb
pop
push
jae
in
enter
sbb
xor
dec
mov
aam
push
mov
pushf
ror
cmp
mov
sbb
lods
and
outsb
inc
and
lret
and
fcmovbe
lods
insb
xchg
fdivs
sub
scas
and
pop
repnz
xlat
sub
cs
jno
int
push
out
sub
icebp
jno
push
xor
and
sar
pop
repz
ja
cld
fs
mov
ljmp
or
and
inc
xchg
rclb
loope
mov
sarb
in
mov
pushf
pop
popf
imul
out
or
mov
sbb
push
push
sub
push
pushf
cli
stc
jne
mov
dec
mov
dec
data16
or
loop
shrb
pop
inc
add
and
mov
loopne
fsubrs
adc
int3
mov
xchg
dec
dec
rorl
clc
js
enter
mov
sti
adcb
jmp
andl
mov
shll
xchg
out
inc
mov
fmull
arpl
inc
dec
scas
fadds
xor
iret
xchg
nop
fs
pushf
cli
popa
inc
in
jns
mov
and
call
notb
sub
out
and
out
xor
lock
insl
shrl
cmpb
iret
pop
mov
fstpl
or
cld
cli
lcall
in
sub
mov
push
lahf
xor
xchg
xor
fisubl
cmp
sbbb
pop
add
jo
push
fcomi
sbbl
and
pushf
xor
stos
lds
outsb
jnp
mov
pop
and
mov
or
or
add
xchg
add
mov
cmp
jg
xchg
sub
or
sti
pop
and
sub
scas
push
push
pop
sahf
aad
jbe
sbb
nop
add
sbb
push
fcompl
mov
and
mov
pop
jecxz
add
rcl
insl
cmp
or
sbb
jne
into
out
dec
or
jns
jno
aad
add
pop
movl
lods
mov
sbb
subb
outsb
cmpsb
into
les
lret
jae
orl
mov
repnz
lock
sbb
sarl
stc
cmpsb
loopne
xor
test
xor
sbb
rcll
outsb
cld
push
aad
mov
arpl
and
push
mov
xor
aaa
jmp
imul
cltd
and
sub
mov
jmp
pop
out
sbb
jecxz
mov
adc
mov
ds
inc
xchg
push
jae
loope
dec
cltd
scas
or
push
adc
adc
pusha
sbbb
and
enter
or
in
mov
cmp
aam
inc
cmp
adc
mov
and
push
sub
hlt
shlb
add
mov
add
enter
adc
out
in
sub
jmp
mov
pop
movsl
cmp
sbb
and
or
pop
bnd
lods
mov
test
jmp
and
dec
aam
jp
mov
inc
bts
mov
stc
dec
lret
in
loop
push
jb
sub
mov
cmp
loopne
inc
fistpl
incb
cmp
aam
or
enter
sbb
sbb
mov
xchg
mov
mov
push
imul
sub
xor
ret
fisubrl
mov
fnstsw
js
lds
in
cmc
pop
aam
xchg
insl
jle
mov
or
jge
bound
sarb
bound
mov
sbb
arpl
fiaddl
adcl
out
js
or
cmp
rclb
adc
cwtl
push
cmc
sbb
push
test
mov
push
ljmp
mov
sbb
xor
bound
dec
leave
bound
insl
pop
das
dec
xchg
inc
sbb
dec
call
jmp
xlat
out
jbe
xor
ja
xchg
das
add
pop
shr
cltd
lea
scas
xor
icebp
out
scas
add
test
leave
insl
rcrl
lcall
or
fcoml
adc
jmp
loope
dec
cs
test
xchg
stc
xchg
pop
lds
insl
xchg
pop
pop
es
or
mov
xchg
jno
cmp
sbb
mov
push
loope
fwait
inc
xchg
in
jb
push
ds
jb
cmp
jb
and
fstpl
add
pop
cli
push
push
add
scas
das
sbb
push
cmp
inc
hlt
lods
inc
mov
pushl
ds
adc
lods
xchg
stos
inc
in
cmpsb
adc
ljmp
pop
cli
pop
into
mov
xor
cs
imul
scas
adc
hlt
push
jl
out
inc
rolb
incb
fldcw
mov
arpl
addr16
std
xor
push
inc
add
add
mov
lret
mov
jge
movsb
xlat
call
enter
lret
lods
sarb
outsb
mov
lret
cmp
or
and
mov
jp
xchg
mov
movsl
mov
lcall
mov
xor
ret
bound
out
push
xchg
shrl
cmpsl
xchg
add
insl
add
add
enter
nop
add
fdivl
enter
scas
or
mov
aad
sub
push
pop
or
inc
test
xor
pop
sahf
cli
add
add
jno
xor
rclb
cs
sub
mov
dec
sub
hlt
mov
ret
push
out
and
outsl
test
add
sub
push
cmp
scas
fildll
es
dec
stos
push
fdivrl
push
dec
pop
mov
sub
xor
mov
pop
in
jae
pop
fstps
add
lret
jg
adc
fdivs
xchg
movsl
es
pushf
jnp
test
in
loop
call
orb
in
decb
inc
xlat
adc
cmp
xchg
in
mov
lock
insl
xchg
xor
fdivrs
jnp
fsqrt
cmp
push
or
jb
xor
or
dec
addr16
es
shrb
fs
xor
fdivrs
iret
outsb
fcmovu
cs
inc
push
and
xor
es
rcl
mov
xor
stos
jnp
or
add
push
repz
mov
jmp
push
jle
dec
mov
jg
imul
adc
inc
mov
inc
pop
in
add
xor
jo
mov
xor
in
jnp
add
adc
stos
jp
cmp
add
ret
mov
xchg
or
push
inc
into
jbe
scas
push
cld
stc
xchg
cmpsl
movsb
ljmp
push
jp
pusha
dec
cmp
lret
imul
or
imul
xor
repnz
bound
test
mov
test
loope
clc
xchg
xchg
std
ja
cmc
pop
clc
sti
loope
int3
imul
fs
cmpsl
test
call
call
or
out
inc
popa
mov
faddl
ss
xor
sub
pop
arpl
add
push
push
push
adc
and
push
pop
pop
xor
fadd
adc
rorb
mov
lods
test
xor
lcall
je
mov
cmp
jge
cmc
push
out
fsubl
pop
imull
jg
arpl
into
stos
xlat
mov
repz
push
jp
in
xlat
test
gs
push
jmp
dec
mov
divl
shlb
jnp
jns
xchg
pop
sahf
daa
and
pusha
inc
shrb
mov
jle
scas
dec
fcomip
cmp
je
orl
rcll
add
dec
jge
jmp
mov
mov
pop
mov
or
mov
mov
inc
insl
ficomps
dec
or
sbb
sbb
scas
imul
or
adc
jle
mov
xlat
cli
pusha
ljmp
xor
sbb
adc
jmp
test
aaa
mov
cltd
popf
les
daa
push
mov
xor
jge
das
cmp
int
adc
push
and
mov
int
adc
imul
rcrl
jle
xchg
shlb
pop
cwtl
test
rol
aam
push
test
sub
lods
sub
movsl
cmp
rdmsr
xor
fisubl
adc
dec
jecxz
mov
pop
adc
ja
cltd
adc
testl
cmc
adc
sub
cli
mov
mov
icebp
jge
dec
mov
inc
xor
out
out
ret
and
cmp
push
jne
mov
push
xor
add
je
xchg
push
add
cmp
pop
jb
mov
mov
sbb
cmpsl
sub
ret
movl
fdivrs
outsb
push
mov
shlw
adc
xchg
mov
inc
mov
push
rcrl
add
fcomps
xchg
push
sub
int3
jge
xchg
mov
adc
mov
out
add
xchg
adc
mov
push
imul
xchg
je
pop
shrd
pusha
xor
xor
fidivrs
jae
pop
lock
jecxz
test
sbb
mov
jbe
or
idivb
add
test
sarl
xor
jecxz
lock
and
pop
jbe
lock
stc
test
xchg
or
insb
pop
pop
xlat
inc
gs
mov
mov
cmpsl
dec
lret
sahf
or
adc
int3
imul
pushf
ret
xor
adc
mov
ret
stos
bound
imul
movsb
jne
pop
inc
xchg
push
cwtl
dec
jmp
outsb
int3
xor
sbb
adc
fstpl
sbb
cmp
cmp
cmp
outsl
push
jb
xchg
js
lret
or
out
mov
mov
mov
pop
xchg
push
cmc
rcrb
cmp
jb
dec
pop
inc
loopne
shlb
arpl
lods
les
push
ds
loope
dec
or
test
pop
arpl
jnp
jo
pop
push
bound
and
lods
into
pop
ret
or
push
mov
ljmp
jg
inc
movsl
jnp
lds
add
mov
pop
and
das
push
addb
and
dec
mov
je
sahf
imul
mov
ret
mov
repz
inc
push
std
add
cmc
enter
ret
aad
mov
sbb
mov
xchg
test
insb
inc
sbb
clc
add
pop
fistps
cmpsb
ds
aad
mov
inc
int3
pop
sub
dec
int3
and
out
scas
shlb
mov
cmp
gs
ss
sub
mov
jge
and
aam
mov
adc
cwtl
iret
arpl
dec
mov
movsl
add
in
fistl
lods
inc
mov
lock
mov
add
lahf
inc
popa
int3
stc
mov
inc
pushf
mov
sbb
aaa
push
push
xor
mov
es
mov
mov
loop
xor
ljmp
jne
stos
pop
nop
push
adc
lea
shl
lock
inc
push
call
xchg
aad
jge
arpl
sbb
or
call
loope
inc
push
inc
imulb
sbb
push
cmp
bound
inc
inc
dec
pop
sub
mov
pop
shrb
popf
pop
mov
mov
pop
cli
imul
bound
sbb
out
and
xlat
aaa
xor
imul
mov
mov
or
scas
jl
pop
filds
les
scas
popf
pop
data16
mov
xor
mov
mov
and
or
mov
rclb
fidivrs
sub
mov
psrad
mov
incl
sbb
pop
push
pop
mov
fwait
jmp
inc
cwtl
xor
inc
dec
push
xlat
imul
jl
ret
mov
rcrb
scas
sbb
andb
cmp
jecxz
sub
rcl
sbb
rcrl
lret
popf
stos
push
push
sti
mov
pop
adc
xor
hlt
pop
inc
or
and
gs
mov
arpl
lock
testb
mov
test
addr16
cmpsb
push
pushf
xchg
cmp
jg
cmp
scas
or
mov
test
push
inc
outsb
js
mov
dec
sarl
popf
imul
in
or
mov
test
add
mov
or
pop
in
and
xorb
pushf
roll
les
pop
mov
push
and
cmp
mov
jb
call
lret
jns
pop
mov
xor
lret
inc
mov
movsb
adc
dec
in
loopne
mov
pop
subl
insl
cmpsl
enter
add
sub
int
jns
lcall
jmp
sbb
sub
pop
xchg
fisubl
xor
adc
mov
ja
aaa
call
aas
lret
loopne
jge
mov
mov
and
es
stos
cmp
inc
int
repz
mov
lods
xor
stc
popf
mov
es
es
mov
mov
inc
ljmp
mov
xchg
add
mov
iret
push
dec
push
movl
mov
fmuls
js
sub
mov
xchg
jns
adc
aaa
push
outsb
xlat
fimull
and
aad
stos
lcall
std
adc
xchg
out
mov
out
xor
pop
les
xor
jb
cmp
jmp
mov
pushf
lret
pop
ret
mov
inc
lods
fsubrp
lods
and
cld
dec
or
push
add
sbb
imulb
adc
scas
in
dec
sbb
xor
mov
aas
ja
and
sub
jno
inc
pop
lods
into
sub
mov
add
and
andb
mov
nop
loope
jno
int
xchg
aas
jecxz
sti
es
xlat
repz
pop
jp
scas
adc
pop
ret
daa
fidivrs
mov
push
enter
enter
loop
decl
fnstsw
mov
jno
test
in
lahf
push
jbe
or
sbb
push
fidivrs
mov
push
dec
pop
mov
pop
out
sub
adc
pushfw
mov
cmpsl
fsubs
pop
mov
ss
push
lea
das
pop
xchg
inc
add
jnp
aaa
mov
incb
rcrb
out
iret
jg
push
dec
or
add
xchg
or
leave
add
pop
mov
test
push
pusha
lock
push
fists
or
repnz
mov
push
out
test
leave
enter
dec
pop
icebp
das
sbb
lods
jge
jnp
loope
xchg
mov
addb
push
cmc
popa
imul
pop
shrb
fimull
test
lock
mov
lahf
mov
jnp
in
idivb
or
mov
push
dec
cld
pop
ds
pop
out
jmp
mov
mov
inc
je
jno
inc
aad
sbb
xchg
mov
outsl
repnz
mov
cmp
clc
xchg
fnsave
loope
dec
mov
xchg
outsl
mov
loop
out
inc
dec
test
lahf
aad
push
cmp
mov
cmp
aad
cmp
inc
inc
scas
add
mov
dec
adc
std
movsb
adc
nop
xchg
xchg
loope
cs
stc
fdivrs
movsb
lods
and
push
and
fimuls
mov
es
jl
xchg
xor
or
sbb
into
or
rcr
and
nop
add
repnz
clc
les
cmp
adc
lret
ffreep
push
push
adc
iretw
cvtdq2ps
mov
test
and
dec
jmp
icebp
cmc
and
jo
cltd
cmpb
es
cli
mov
lret
subb
ja
push
push
scas
mov
dec
jp
mov
arpl
mov
cmpsl
sub
mov
adc
aaa
jnp
dec
mov
aad
notl
js
inc
into
or
lds
bound
rorb
enter
cld
in
clc
insl
jbe
inc
sbb
adc
pop
lret
add
cmp
or
push
sahf
into
stos
xchg
notb
mov
or
jae
cmp
lock
fisttps
inc
dec
ficompl
out
loope
jmp
xor
gs
movsl
and
cmp
outsl
loope
pop
add
cmp
pop
xchg
subl
fsubl
aam
mov
add
lea
les
imul
xor
data16
ds
mov
push
ds
test
push
loope
ljmp
aaa
leave
jbe
popa
mov
data16
mov
sub
pop
cmp
xchg
adc
and
sub
loop
or
lret
push
cmpl
cmp
pop
jae
mov
cld
mov
push
out
dec
xor
outsl
inc
cmp
je
lods
scas
cli
sbb
repz
ror
sub
push
dec
inc
pop
dec
shl
sahf
loop
std
add
xor
mov
and
and
fadd
sarl
mov
xchg
sub
enter
les
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
cmp
mov
jae
jp
pop
jp
mov
push
push
adc
test
out
inc
fistpll
jle
lcall
je
jp
loopne
aam
vpunpckhqdq
dec
jecxz
pop
cmpsb
mov
and
mov
lcall
jno
ds
and
out
mov
enter
pop
daa
sub
dec
mov
xchg
or
xor
adc
fldcw
inc
leave
arpl
scas
enter
fadd
mov
jo
leave
cld
in
repnz
sbb
jbe,pt
push
add
xchg
loop
pop
push
push
pop
imul
cmp
shl
cs
dec
lahf
iret
xchg
adc
sub
jg
int
and
sbb
ja
fcmovne
add
js
enter
sub
dec
sub
jp
aad
fsubp
pop
cmp
out
fnstcw
dec
sbb
mull
cltd
push
or
xchg
xor
rsqrtps
lcall
jae
push
and
outsb
in
dec
in
faddl
or
xchg
jb
inc
add
adcl
push
rol
ljmp
insb
rorl
xor
jns
pop
cmp
gs
sub
push
mov
ret
fadds
push
adcl
jle
fisttpl
xchg
pop
bound
in
es
pop
dec
fldcw
cli
addr16
mov
inc
push
push
scas
and
xchg
push
pop
mov
ds
icebp
pusha
das
xchg
cli
sar
adc
add
dec
insl
add
cmc
aam
cmpsl
xor
sub
les
add
out
inc
pop
fwait
pop
aam
or
xor
or
inc
scas
xor
out
mov
std
int
pushw
rcrb
fwait
jl
jns
xlat
ret
jb
pop
mov
out
in
iret
mov
adc
rcrl
cmp
rclb
out
mov
pop
ja
stos
shl
cmp
mov
test
and
pop
lea
pop
hlt
jl
xor
add
fimull
lods
scas
jo
les
push
cmp
jp
lcall
pop
and
or
mov
test
jo
iret
out
adcb
and
lret
out
jecxz
aam
fwait
mov
stos
aad
je
xlat
adc
lret
mov
jae
dec
or
sbb
dec
dec
mov
and
loope
test
lods
sbb
cwtl
dec
push
mov
cltd
lods
ljmp
dec
mov
fwait
lret
loopne
or
popf
sub
out
loope
inc
outsb
loopne
xchg
int3
cmp
or
mov
and
je
push
xor
mov
jmp
mov
outsl
loop,pn
pop
outsb
or
sbb
add
add
ss
shlb
ror
sub
cld
mov
jmp
xchg
insb
pop
adc
xchg
iret
xor
scas
xlat
mov
inc
mov
xor
mov
mov
sbb
pop
sub
pop
inc
andl
popa
push
dec
sar
push
and
sbb
loop
clc
lods
aam
xor
sbb
test
stos
ja
xor
xor
inc
in
das
testb
push
rorl
and
fbld
jp
insl
test
push
in
push
repnz
mov
dec
or
daa
ror
outsl
mov
es
inc
push
push
add
sbb
or
insl
je
cmpsl
sahf
insl
aam
subb
sub
lods
sub
std
or
repz
cmp
jl
mov
jne
movsl
in
xor
test
xchg
adc
xchg
pop
test
mov
clc
jae
pop
add
imulb
std
mov
push
mov
test
inc
in
and
imul
inc
add
push
into
mov
insl
dec
add
sbb
bound
aas
cmp
dec
jle
dec
ret
iret
fwait
xor
es
inc
or
cmp
dec
lret
and
fidivrl
xchg
adc
push
lea
out
popf
sbb
mov
out
add
repnz
enter
xchg
sub
sbb
cli
fs
movsl
mov
fs
or
out
mov
sbbb
mov
data16
mov
push
fsubr
rolb
out
mov
imul
pop
rcr
xor
pop
imul
popa
sub
in
jae
push
cld
test
push
test
adc
aam
rcrb
jl
add
fnstsw
xor
adc
mov
int3
adc
pop
push
sbb
lods
rol
push
sub
dec
jo
stc
pop
loope
pusha
testl
flds
xor
ret
mov
mov
out
xchg
ret
nop
jno
or
or
jo
ret
cs
test
stc
lret
loopne
iret
test
add
add
fcoml
iret
push
add
sub
scas
addb
jle
fnsave
imulb
push
lds
inc
inc
jmp
mov
sbb
shll
mov
push
cmpsb
jmp
cld
mov
adc
dec
subl
rcr
sti
or
jle
movsb
xchg
ss
mov
jne
pop
or
pop
out
jl
lret
aad
push
aam
push
adc
cmpsb
fbstp
lea
dec
cmpsl
sbbb
cwtl
jne
in
insl
inc
jb
ds
insl
xor
mov
shl
adc
ss
xchg
das
inc
sub
and
jb
ss
sub
lret
es
std
push
cmp
dec
dec
xchg
mov
stc
jg
cs
push
mov
cmp
push
pop
leave
push
pop
mov
in
cmp
cmc
xchg
enter
mov
scas
int3
pop
cmp
sbb
aam
in
out
fildl
push
in
imul
pushf
aam
clc
xchg
and
xor
fnsave
sar
xorb
jle
inc
sbb
imul
nop
adc
xor
cli
mov
mov
push
mull
cmp
xchg
cmp
mov
inc
gs
test
enter
fcmove
fs
rcrl
jecxz
or
push
ficomps
jecxz
push
sub
jne
push
xchg
fildll
rcll
int3
imul
dec
out
test
ret
bswap
or
subl
lods
fiadds
add
dec
mov
mov
dec
xchg
pop
arpl
inc
add
mov
icebp
and
clc
ja
movsbl
movsl
xchg
jge,pt
cmp
push
cmc
xor
inc
les
hlt
hlt
cmp
xchg
mov
add
fsubrp
outsb
out
xor
test
mov
sti
sub
or
enter
jno
hlt
out
jecxz
mov
adc
aas
fwait
push
out
cmpsb
outsl
ret
or
sbb
inc
in
adc
daa
mov
js
rolb
xor
sub
or
pusha
pop
pushf
push
cwtl
in
addr16
clc
mov
fucom
adc
in
shll
add
in
into
shlb
imul
fidivl
lds
repz
cmp
add
add
cltd
fs
test
push
and
stos
out
out
nop
xor
shlb
loop
push
mov
xchg
sti
adc
xchg
addr16
mov
cmp
cltd
in
lods
out
jbe
cmp
shl
cld
jg
ljmp
testl
test
int3
xor
fwait
dec
mov
cld
es
inc
popa
pop
xchg
sbb
test
sbb
inc
mov
imul
insl
int
bound
fwait
fwait
hlt
mov
loope
pop
push
mov
push
mov
dec
movsl
in
cwtl
shrb
lods
sbbl
push
lret
and
add
xor
mov
jnp
mov
mov
or
test
les
and
xlat
sbb
sub
pop
lds
inc
ficompl
sub
jl
iret
std
inc
cs
repz
add
stc
dec
sarl
daa
jb
fmull
cmpsb
or
pusha
mov
xchg
in
cli
sbb
adc
popa
add
xchg
das
pop
push
xlat
insb
fistpl
js
mov
bound
push
mov
sub
push
xor
mov
sub
decl
pop
sbb
push
pop
arpl
lods
pusha
insb
add
push
xchg
lods
sub
loope
mov
push
inc
inc
in
movsl
cmp
mov
or
out
xchg
mov
push
cmpsb
fnsave
gs
mov
push
xor
lock
xchg
push
rclb
loop
hlt
scas
ljmp
aam
lret
pop
fs
push
jp
popa
or
mov
std
mov
push
inc
das
lea
xchg
inc
cmpsl
xor
or
jno
insb
mov
xchg
sub
xchg
lahf
fbld
test
cld
cli
ret
call
mov
daa
leave
jo
sbb
push
aas
sub
mov
imul
pushf
cmp
loopne
sbb
aaa
lock
sub
mov
adc
lcall
adc
fxch
jb
test
int
sbb
sbb
loope
add
nop
fsubrs
mov
cmp
xchg
fldlg2
or
nop
inc
pop
xchg
shr
push
push
fwait
xchg
pop
and
into
pop
arpl
mov
es
pop
jnp
or
out
pop
inc
andl
sub
mov
hlt
pop
mov
ror
mov
popa
call
adc
setb
rcr
sub
cs
mov
lcall
push
mov
lret
in
test
sbb
push
adc
sub
fnstcw
cli
xchg
mov
cmpsb
sbb
cmpsl
pusha
outsl
rol
dec
and
push
out
jl
cli
inc
xchg
js
aam
clc
jl
sub
int3
and
ja
fcomip
movsb
mov
jbe
push
mov
xchg
inc
push
cs
xchg
mov
pop
dec
imul
adc
fistpl
dec
push
or
vxorpd
mov
sub
dec
mov
aas
jle
cmc
jmp
bound
mov
pushf
xor
cmp
pop
dec
add
movsb
test
fnstsw
jge
inc
dec
sbb
mov
fcoms
cmpsl
inc
cmpsb
movsl
sbb
loop
jnp
cmp
repz
lret
push
mov
sbb
jg
fwait
movsb
out
fs
pop
push
xchg
aas
icebp
mov
cmp
inc
les
popa
sbb
sub
clc
jl
or
add
fiaddl
cmc
outsb
ficomps
rorb
mov
int
test
cs
pusha
mov
mov
dec
rorb
pop
xchg
adc
add
shl
mov
insb
xchg
pop
push
dec
push
or
xor
icebp
push
lahf
pusha
sbb
sbb
inc
pop
gs
leave
aam
mov
ss
inc
hlt
cmp
lods
lods
sbbl
out
add
fdivs
lods
pop
mov
xchg
dec
cs
mov
mov
fisttpl
sub
pop
sbb
insb
out
jb
sub
sub
pop
shll
mov
pop
mov
inc
xchg
push
xlat
popf
sbb
inc
daa
xchg
inc
iret
mov
jmp
sub
mov
scas
jge
daa
fisttpll
in
mov
pop
fwait
in
and
fimull
lahf
stos
fstp
data16
pop
and
dec
data16
lock
mov
daa
cmp
xchg
out
mov
imul
stos
push
adc
out
xor
xor
mov
scas
pop
stos
ret
sub
xchg
iret
in
xor
in
popa
pop
mov
cmpl
mov
and
push
cmp
sub
insb
mov
adc
mov
cli
inc
pop
lods
sahf
dec
add
or
bound
hlt
cmpsl
jno
into
push
dec
add
pop
repz
aad
sbb
out
test
push
inc
inc
mov
outsb
pop
mov
sti
jns
jmp
ret
mov
and
mov
je
fwait
sub
jmp
int
cmp
insl
push
or
sub
cwtl
jo
cmp
pop
movlps
push
loop
call
sbb
leave
cmpb
cmp
stc
pop
jp
nop
mov
fdiv
sbb
imul
cmpsb
adc
icebp
mov
addr16
jmp
sub
adc
js
aas
das
mov
xchg
mov
xchg
int3
ja
into
test
sbb
into
sbb
rclb
xor
cwtl
loop
mov
mov
adc
pop
imul
mov
dec
jno
xchg
cmp
cltd
jb
pop
cmp
int3
out
dec
lahf
sbb
addr16
mov
mov
mov
movsl
inc
lods
enter
pop
cli
xor
js
and
inc
add
cmpsl
and
push
call
cmp
popa
in
pop
cltd
rcrb
sbbl
mov
mov
mov
and
pop
sub
addb
xorb
cwtl
lahf
dec
add
xchg
inc
vmaxss
das
jmp
xchg
jno
xor
xchg
pop
adc
cmpsb
xchg
test
out
mov
xchg
enter
stos
adc
outsl
imul
dec
fsubrp
add
lcall
mov
int
adc
stos
scas
sub
popa
sub
push
and
enter
call
dec
inc
xchg
das
add
mov
inc
add
jle
enter
imul
push
jmp
test
mov
scas
dec
popa
and
orb
shll
xlat
mov
ss
sub
repnz
mov
test
push
scas
mov
and
mov
xor
lock
dec
or
inc
mov
sub
enter
sbb
cltd
cltd
rclb
stc
daa
and
lahf
les
pop
add
pop
iret
int
ljmp
inc
clc
jp
mov
or
loopne
aas
inc
shl
roll
xchg
mov
test
loopew
fwait
xor
sbb
sti
das
movsl
mov
aad
mov
pop
mov
adc
xchg
dec
or
lcall
jg
sti
dec
mov
sub
cmp
mov
pop
dec
pushf
imul
cmp
sbb
movsb
icebp
rorb
xchg
and
add
push
cmpsl
dec
adcl
insb
xor
pop
mov
mov
xor
push
mov
call
adc
js
push
mov
scas
je
xchg
pop
jl
call
inc
mov
pusha
sbb
adc
dec
jmp
mov
cmp
enter
out
pop
js
mov
inc
lods
in
pop
push
mov
lret
adc
sahf
rcrl
leave
adc
cmc
cmp
mov
cmc
sub
leave
mov
movsl
or
movsb
gs
mov
scas
inc
in
adc
and
test
insl
mov
add
fcmovnu
jmp
or
mov
shll
popa
lret
inc
imul
add
leave
sbb
lret
scas
daa
mov
imul
cmp
inc
in
jno
aad
pop
mov
popf
bound
inc
or
push
js
mov
cli
daa
lods
xchg
sub
mov
adc
les
jb
sub
adc
dec
popf
pop
mov
out
adc
xchg
mov
movsl
ret
sub
out
xchg
nop
jmp
push
sub
jge
enter
pop
hlt
sbb
pop
data16
and
dec
or
mov
cmp
mov
sub
or
daa
clc
xor
movsb
and
lret
adc
xchg
fisubrs
cwtl
pop
add
in
mov
adc
push
dec
mov
in
xchg
push
xor
scas
cmpsb
callw
add
clc
jge
ret
push
push
arpl
hlt
sbb
movsb
xchg
inc
xchg
in
sbb
add
cld
nop
in
addr16
pop
mov
xchg
aad
sub
inc
dec
lret
or
push
xor
xor
xchg
lcall
repnz
cmp
sbb
je
cld
icebp
push
and
lods
lcall
pop
mov
inc
out
stos
dec
lods
shrl
dec
movl
xor
shlb
ror
scas
adc
dec
sahf
or
push
sub
test
inc
shr
clc
in
repnz
jne
add
sbb
push
fisubrs
push
lds
cltd
je
mov
mov
adc
popf
lods
jge
mov
fs
ret
sub
inc
pop
adc
loop
xchg
mov
inc
push
in
lods
pop
into
sub
addr16
jbe
test
sahf
sbb
jg
xor
cmp
jb
stc
xor
sbb
mov
pop
shl
in
sub
pop
insl
push
sti
das
or
and
push
fistpll
cmp
outsb
inc
cmp
andb
mov
add
insb
js
movsb
pop
es
push
ret
pop
or
outsl
popa
add
test
xchg
xor
push
ds
repnz
popa
mov
mov
scas
insb
inc
jl
lods
jge
pop
xchg
pusha
fmull
movsl
cmpsb
es
push
mov
popa
in
and
lahf
mov
out
pop
lds
and
dec
ja
fsubs
pop
loope
sub
lods
lods
stos
lds
sbb
mov
stos
xor
repz
and
sar
mov
adc
rolb
jp
xchg
dec
mov
xchg
mov
imulb
mov
jae
mov
test
inc
add
jl
add
fld
or
shlb
cmpsb
dec
loope
mov
clc
cwtl
icebp
ljmp
or
and
jnp
out
lods
xchg
sub
jle
add
movsl
outsl
lahf
jbe
cmp
or
inc
pop
cmp
sarb
scas
in
sbb
or
jmp
add
sub
lea
push
js
and
sti
adc
loope
movsb
adc
adcl
lods
sub
shlb
xor
adc
adc
sub
out
out
stc
ja
inc
adc
ret
xchg
xor
loope
mov
cmp
out
jp
adc
nop
pushf
fstpl
pop
test
lret
shr
push
sbb
test
pop
pop
mov
enter
pop
and
push
and
xor
pop
rcrl
insl
lret
xchg
gs
dec
lcall
rol
sub
jl
or
add
mov
fsubrs
ds
sbb
and
out
mov
test
pop
dec
jnp
in
pushf
push
add
fwait
loopne
lahf
frstor
push
xchg
ss
dec
sarb
and
or
xor
inc
jg
test
mov
pushl
mov
mov
jae
shrl
orl
sbb
test
aas
daa
adc
out
adc
mov
cltd
inc
insl
notl
loopne
cs
insb
inc
sub
call
mov
jno
xchg
lret
insb
ss
cmp
pop
pop
imul
pop
xchg
lea
adc
xchg
xchg
rclb
adc
scas
xor
and
pop
scas
movsb
mov
ss
jl
rep
sbb
push
mov
sbbl
out
je
in
xor
mov
adc
cwtl
stos
mov
mov
repz
inc
cmpsb
addl
xor
insl
movsl
les
cmp
out
stc
ss
aas
shlb
out
arpl
shlb
cmc
pop
mov
nop
arpl
dec
addr16
mov
lahf
xor
add
add
dec
xchg
xor
cmp
xchg
dec
jge
sbb
or
and
push
test
push
sub
sbb
out
int3
xor
mov
es
ficomps
adc
test
push
push
or
popa
gs
cmp
imul
stc
xchg
inc
loop
jnp
jecxz
aam
lret
jp
int
ffreep
ss
dec
inc
mov
sub
dec
adc
test
fsubl
repz
dec
sub
adc
xchg
xchg
dec
aaa
adcb
dec
je
pusha
fcoms
loopne
fsubp
inc
faddl
pop
mov
push
es
gs
mov
hlt
stos
gs
fildll
mov
mov
das
or
bswap
cmpsb
es
sbbb
xchg
das
pop
lods
jbe
fisubrl
mov
flds
insl
jge
jb
dec
ljmp
xchg
call
or
or
shrb
adc
sbb
lcall
rcl
push
cmp
mov
sarb
into
mov
mov
add
and
inc
mov
enter
add
fimull
in
xchg
pop
sbb
movsl
setno
pusha
push
negl
repz
mov
xor
fisttpl
fildl
sbb
lds
xchg
xchg
jo
fmul
rcrl
jns
cs
dec
add
cmc
andb
xor
hlt
mov
pop
adc
fldenv
mov
push
xlat
adc
xchg
push
ljmp
pop
add
testb
mov
jnp
stc
sub
lahf
push
pop
addr16
pop
xchg
hlt
xchg
test
xchg
jne
jb
fs
xchg
out
xor
orb
std
cs
fwait
sub
clc
cmpsb
sub
pop
sarl
fs
ss
outsl
pop
mov
int
loopne
pop
repnz
jo
jns
jae
mov
push
mov
ss
gs
sbb
or
xor
mov
pop
insb
adc
or
sbb
popa
jb
jne
out
test
out
std
aas
aam
aas
shrb
enter
mov
jle
mov
adc
repz
in
loopne
cmpsl
icebp
loope
repz
pop
aam
and
bound
int3
push
xchg
or
jmp
jbe
jbe
push
xor
rolb
mov
xor
test
sti
leave
sbb
or
in
push
inc
pop
inc
pop
xor
test
or
pop
xchg
cld
fcoms
fs
mov
inc
push
cmp
sub
inc
and
aas
mov
xchg
test
dec
in
pop
lods
clc
dec
dec
jmp
xchg
pop
inc
push
sub
push
lahf
mov
pop
es
repz
clc
xor
xchg
or
mov
or
outsl
and
sub
shlb
in
xchg
dec
push
mov
rorl
adc
imul
cmp
ljmp
xchg
mov
ljmp
cmp
xchg
lods
xchg
or
jmp
iret
adc
sub
push
push
xor
adc
cmp
push
add
dec
xor
adc
pop
adc
xor
xchg
int
xor
orl
mov
push
or
add
leave
cmpsb
add
lock
cld
jge
test
cmpsb
xor
addr16
pop
test
jb
in
rcrb
cmpsl
movsb
ja
hlt
add
add
dec
aas
and
and
xchg
xor
and
aaa
mov
mov
sti
add
xchg
or
jns
sbbb
sti
pop
xchg
cmp
cli
jno
cli
decl
call
js
mov
jbe
mov
stc
subb
repz
cmp
push
adc
mov
or
xor
clc
mov
sbb
ljmp
insb
or
dec
xor
repnz
int
push
stos
cmp
ja
dec
in
imul
and
mov
movsl
repnz
loope
mov
aad
cli
xor
add
push
push
fistps
cwtl
lds
mov
jp
push
add
pop
and
adc
xor
mov
dec
lock
push
jl
mov
aam
sbb
cld
insl
sbb
cmc
shll
inc
mov
rcll
outsb
xor
adc
jle
movsb
xchg
adc
pop
dec
in
divl
pop
in
xchg
mov
aad
mov
in
in
xchg
pop
and
test
add
ljmp
jns
daa
cmp
jecxz
jmp
jne
outsl
out
lea
insb
or
in
push
mov
fdivr
xor
fnsave
fcomps
cmp
nop
aad
mov
pusha
dec
test
pop
adcl
push
test
sub
add
mov
mov
das
sub
out
push
loope
mov
imulb
pop
popf
or
fisubrl
call
enter
cmpsl
fildl
repz
lods
imul
inc
fstl
daa
mov
inc
lcall
leave
push
cmc
movsl
sahf
shlb
decb
push
loopne
jmp
insb
dec
mov
xchg
push
sub
in
pop
dec
movsb
imul
pop
call
xor
mov
push
sbb
popf
sub
hlt
inc
clc
daa
ficompl
cmp
and
or
inc
out
mov
dec
cli
jbe
call
mov
jno
mov
je
mov
jmp
test
jle
shlb
push
and
jle
ret
insl
aas
or
or
jecxz
cmp
cltd
jnp
pop
mov
in
or
xchg
fldenv
cmpsl
pop
cli
and
sub
pushf
mov
rclb
into
cmpl
pop
pop
loop
mov
pop
sbb
adc
push
cld
fildl
lock
dec
cli
sub
and
outsb
dec
inc
nop
data16
cmp
xchg
and
mov
sbb
mov
and
ja
nop
jno
jne
arpl
loop
push
cmp
jge
jge
jbe
out
jl
into
daa
cmp
syscall
lock
gs
fdivs
or
ja
and
jnp
or
pusha
pop
nop
dec
push
inc
sub
adc
sbb
icebp
cwtl
sbb
ret
inc
test
sbb
inc
in
mov
xchg
lds
rolb
jle
lahf
out
mov
mov
fisubrl
mov
in
repnz
sbb
ret
popa
cmp
push
and
sbb
cmp
or
insb
ret
aaa
sub
adc
mov
add
cwtl
roll
and
inc
pop
sub
push
mov
fnstcw
mov
xor
leave
or
pushf
and
adc
out
nop
mov
insl
xchg
test
mov
std
xchg
mov
out
pop
sbb
mov
add
dec
dec
lds
pop
outsb
mov
movsl
call
les
adc
repz
jne
stos
xchg
mov
mov
pop
fsubrs
cli
dec
loopne
sarl
mov
add
push
stc
xchg
pop
loope
shl
cmpb
daa
and
mov
mov
or
fisttpll
shlb
shl
inc
out
dec
repnz
jo
jge
push
xor
jb
in
sti
push
dec
fs
mov
cmpsl
sbb
orl
out
int
cli
pop
pop
push
in
sub
ja
jg
xchg
mov
fisttpll
mov
sub
filds
mov
cmp
mov
ljmp
cmp
ss
fsubrp
or
inc
mov
sbb
scas
mov
inc
jp
mov
mov
cld
scas
push
cmpsl
ja
test
loop
loopne
pop
aas
lcall
mov
mov
mov
aam
lcall
mov
and
icebp
fists
dec
dec
outsl
lds
xchg
sub
xchg
sbb
dec
push
pop
push
cmp
in
inc
pop
sub
test
xchg
icebp
add
sub
xchg
pop
sbb
js
dec
je
sub
or
in
clc
aad
and
decb
scas
test
lock
scas
inc
iret
mov
push
cmpsl
out
mov
sbb
xchg
push
push
ja
jne
popa
push
or
add
stos
pop
ret
mov
in
insl
mov
inc
and
movsl
add
dec
repnz
cltd
pop
mov
jno
jge
sbb
imul
jbe
and
test
push
dec
loop
dec
fwait
leave
inc
daa
mov
jl
sarl
sarl
add
or
xchg
cmp
sbb
xchg
cmp
push
ret
mov
enter
int3
mul
addl
xor
dec
add
mov
in
jno
rcll
into
sub
aad
pop
pop
aaa
je
cmp
inc
push
jbe
mov
mov
adc
call
mul
jg
push
mov
imul
or
adc
add
jp
xchg
jnp
mov
mov
int
jo
insb
shll
cwtl
or
pop
loopne
cli
cmp
pushf
sub
scas
es
test
test
outsb
pop
and
enter
mov
mov
mov
test
cltd
inc
repz
and
and
rorl
and
xchg
inc
sahf
add
mov
adc
das
in
outsb
fs
das
cmp
pop
xchg
add
push
cld
or
mov
cmp
sub
bound
xchg
imul
lcall
or
mov
lahf
sub
repz
dec
sbb
sub
mov
mov
inc
adc
push
mov
xchg
fwait
ljmp
fsubrl
mov
mov
jmp
std
push
xlat
push
mov
mov
addr16
mov
pop
adcb
aaa
xchg
fcmove
adc
push
das
call
cmpsl
lcall
sub
xchg
sbb
mov
es
cmpsb
out
inc
and
mov
jg
popf
lods
call
mov
add
insl
jb
cmp
jle
cltd
ret
mov
stos
push
lea
add
cmp
push
xor
push
fs
jp
hlt
es
sbb
adc
push
fwait
addr16
pop
fnsave
fildl
cmc
rclb
sti
fs
sbb
imul
push
je
fwait
mov
in
add
push
pop
sbb
pop
mov
inc
scas
insl
bound
mov
sbb
pop
pop
js
mov
nop
jecxz
push
jle
addb
dec
xor
pop
mov
sub
rcrb
sbb
push
shll
fdivrl
push
loopne
mov
mov
xchg
adc
push
mov
mov
mov
and
aam
dec
cmc
cmpsl
cli
into
sub
jecxz
adc
rcrl
dec
sub
cmp
insl
loope
pop
shr
dec
and
mov
cmp
pop
jp
cmp
mov
outsb
test
or
leave
mov
mov
pushf
sub
push
dec
jnp
xchg
sub
sbb
or
push
jb
repnz
sbb
decl
fcompl
fistpl
icebp
jge
pop
cmp
movsb
int3
adc
test
icebp
test
fsubrp
push
xchg
inc
and
pop
subl
jecxz
xchg
ss
mov
in
and
mov
dec
mov
ret
mov
jl
scas
jmp
adc
mov
add
push
sub
or
std
js
mov
xor
es
mov
adc
aaa
sti
pop
jle
xchg
sub
xor
xchg
push
mov
mul
mov
cli
and
in
cmp
jge
xchg
cmp
jle
push
push
sahf
push
insl
push
inc
mov
sub
and
pop
jno
pushf
add
mov
loopne
iret
add
cmp
push
test
repz
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
insb
lods
nop
pop
push
jns
add
jp
jb
xchg
inc
mov
fsts
movnti
stos
les
out
xor
or
jmp
cmpsl
lock
sarl
ljmp
sub
ljmp
lahf
aad
popa
adc
mov
add
push
mov
aaa
inc
iret
mov
xor
cmovb
popa
orb
add
dec
mov
mov
push
inc
mov
adc
mov
jmp
clc
pop
mov
aas
test
and
push
cmp
movsb
dec
dec
in
outsb
inc
aam
ret
stos
dec
mov
xorl
push
mov
lods
flds
cwtl
cld
sbbb
ret
in
xor
mov
sub
sbb
scas
mov
das
and
popa
cltd
cmpsl
cli
repnz
fistpl
cmc
mov
stos
or
jno
repnz
lea
jg
leave
lds
or
mov
or
lret
xlat
cmpsl
jecxz
sbb
aad
jl
movsb
push
inc
mov
adc
inc
mov
add
outsl
sbb
pcmpgtw
pop
xor
xchg
ja
scas
inc
clc
lock
rcrb
jl
insb
dec
or
ror
loopne
int3
xchg
gs
outsb
mov
std
flds
push
or
jl
mov
clc
dec
repnz
xchg
push
pop
enter
sub
xor
adc
adc
mov
call
pop
or
lock
or
pop
push
cmp
or
cmp
lds
stos
jmp
mov
xchg
cltd
mov
ss
xchg
mov
cwtl
mov
cli
cmp
mov
repnz
xor
cmpl
pop
xchg
add
repnz
inc
fadd
xlat
clc
dec
mov
hlt
jge
xlat
pop
or
mov
outsl
fcoms
sub
sbb
and
xor
jne
scas
lcall
adc
cmp
loope
jle
jg
adc
and
pop
xchg
cmc
mov
mov
jmp
push
movsb
shl
iret
in
jo
mov
adc
out
repnz
cmp
leave
cmp
inc
and
push
jge
aas
dec
fsts
jbe
cmp
inc
std
repz
xor
pop
pop
rclb
aam
add
dec
dec
inc
popa
jo
cmp
jnp
dec
popf
lret
mov
xor
pop
repz
loop
mov
lods
mov
mov
cmp
jno
stos
mov
inc
cld
mov
test
push
fdivl
cmp
js
cltd
call
js
jmp
aam
pusha
pop
stos
out
loope
jl
push
dec
leave
push
pop
movsl
sbb
push
cmc
jo
rcl
std
or
xchg
addl
into
das
jb
cmp
in
sbb
in
push
sbb
lods
mov
loope
xchg
lcall
jmp
mov
std
xchg
das
xchg
xchg
cmp
je
mov
std
gs
jle
add
add
pop
or
push
xor
mov
mov
mov
dec
aaa
and
fnsave
mov
and
fnstsw
or
dec
aaa
gs
into
mov
fldt
lds
hlt
out
test
testb
xchg
cmp
cmp
std
dec
xor
push
push
mov
xchg
lea
sarb
lea
jno
push
addr16
in
jmp
clc
and
or
out
cld
insl
aaa
iret
cwtl
jnp
outsl
test
dec
adc
pushf
loope
roll
xchg
sbb
sti
nop
in
arpl
lods
inc
test
ret
sub
cmpsb
aam
ret
xchg
js
cmp
jp
fcomip
sarl
pop
adc
je
inc
cltd
inc
out
stc
insl
iret
mov
hlt
jnp
negl
adc
cmp
stos
int
popa
inc
enter
xor
ret
loope
cltd
push
out
lcall
cmp
shlb
mov
xchg
loop
cwtl
inc
ds
and
adc
adc
movsb
and
push
xor
adc
adc
mov
lds
cmp
cli
in
cmp
jmp
subb
xor
mov
and
lods
jo
inc
ss
sti
test
sub
xchg
popf
sbb
dec
inc
push
aaa
popf
repz
lock
xor
outsb
jae
sbb
and
loopne
arpl
pop
int3
mov
in
out
repnz
in
add
pop
in
mov
insl
jbe
jge
cmpsl
or
cmp
push
addr16
mov
jne
xchg
sbb
and
and
fsub
cmp
shlb
and
xor
cmp
or
mov
stc
fiaddl
sub
mov
es
sbb
mov
push
lcall
dec
mov
lret
fidivl
mov
pop
adc
ss
jb
mov
in
loope
bound
sbb
and
and
xchg
stos
sub
cld
dec
stos
arpl
stc
push
mov
stmxcsr
adc
ret
das
rcl
cmp
test
jne
xor
dec
xor
call
imul
jbe
sub
mov
test
push
xor
mov
fildl
in
mov
cmp
dec
test
sub
or
xchg
dec
inc
adc
xchg
adc
test
jbe
sub
adc
pushl
xchg
mov
fstps
fcomp
fisubl
fwait
jge
data16
shrl
das
movsbl
insl
insl
inc
xor
ds
shrl
lods
sahf
jb
enter
xor
iret
movsb
cwtl
testl
addr16
ja
xlat
jae
jns
jle
mov
push
neg
mov
mov
out
pop
lock
loopne
or
jns
jns
push
mov
pop
ja
xchg
mov
stos
jg
mov
sbb
stc
xor
dec
mov
dec
ds
sub
push
xchg
mov
out
mov
into
repnz
sbb
js
adc
xchg
into
pop
ret
test
inc
pop
fisubrs
and
pop
loopne
pop
int3
popf
orl
das
mov
pop
push
xchg
xchg
inc
and
add
test
test
adc
test
mov
leave
lds
and
fcompl
inc
test
imul
fadd
xchg
xchg
stc
cmc
pop
outsb
mov
aad
lcall
and
rol
mov
jne
mov
sbb
sbb
pop
push
add
mov
sub
mov
adc
jg
sbb
lret
ss
jecxz
sarb
and
or
std
cmpl
jmp
imul
mov
or
mov
js
aas
cmp
jbe
mov
in
dec
inc
mov
rcrb
loope
rcl
mov
test
into
nop
or
out
movq
ret
sar
test
or
mov
add
cmpsl
xchg
push
mov
mov
add
ja
movsb
mulb
hlt
pop
aas
sub
mov
aam
jo
movsb
mov
sub
sti
inc
push
out
inc
xchg
cwtl
xchg
pusha
adc
add
aad
hlt
icebp
arpl
dec
push
scas
inc
or
or
addb
xchg
stos
sbb
mov
pushf
enter
jle
mov
and
int3
je
mov
and
lcall
imul
insl
out
fnsave
xchg
inc
imul
push
popf
andl
out
xor
inc
out
shrl
cli
out
ljmp
sub
mov
test
sbb
push
jge
jg
cmp
cmp
rcl
mov
or
hlt
jno
add
pop
cld
rcrl
cmpsb
adc
sbb
fdivs
xchg
shrb
ja
mov
jb
jns
fwait
push
rcrb
stc
dec
cmp
int
jl
scas
sub
adc
mov
aas
pop
sbb
jecxz
jmp
jl
lcall
outsl
inc
pop
mov
xor
outsb
hlt
enter
outsb
sahf
rol
test
faddp
cmp
jecxz
shll
jmp
pop
mov
sub
test
lock
xchg
inc
out
push
dec
or
adcl
pop
add
das
or
scas
fwait
bound
jl
jecxz
cmp
test
icebp
lret
mov
mov
imul
cmp
fstps
mov
lcall
scas
stos
adc
cli
mov
sbb
dec
imull
hlt
push
inc
sarb
mov
push
xchg
mov
sti
jmp
insl
cmpb
imul
add
scas
movntq
mov
cmp
mov
nop
cmp
push
imul
cltd
mov
push
mov
add
pop
stos
iret
push
addr16
and
in
pop
in
xor
jecxz
add
mov
pop
xchg
lret
xchg
mov
mov
push
xchg
inc
ret
pop
dec
mov
and
push
out
les
fsts
adc
adc
mov
add
add
inc
mov
add
inc
push
or
out
in
push
and
mov
or
loope,pt
icebp
sbb
movsl
rclb
xchg
xor
daa
rol
adc
ja
lret
orps
jmp
add
add
test
lock
ret
data16
mov
inc
dec
mov
push
es
test
sub
xor
int
jb
jp
icebp
push
inc
pop
mov
xchg
divl
ds
xchg
scas
or
mov
lcall
inc
pop
sub
pop
gs
imull
sbb
push
jbe
jnp
pop
ljmp
xor
pusha
inc
in
xchg
dec
stc
add
mov
jns
or
pop
mulb
je
sahf
push
ja
pop
out
inc
icebp
inc
test
add
test
into
push
mov
data16
call
popa
fldt
cli
or
push
lret
jge
jae
dec
fnstcw
xchg
aam
add
add
pop
int3
xchg
lcall
int3
cmpsb
je
or
daa
jg
jmp
jmp
pop
xchg
pop
sbb
and
ds
aam
add
mov
ffreep
ret
dec
mov
fimull
fstp
mov
pop
mov
pusha
xchg
mov
or
xor
jmp
loop
add
adc
lcall
ja
mov
cmp
ljmp
sub
cmp
and
hlt
jmp
lahf
js
sbb
mov
sub
xorb
pop
inc
sbb
mov
mov
mov
movsl
xchg
ret
xchg
or
lret
add
or
bound
or
mov
iret
mov
repz
and
adc
jp
lea
pop
sahf
mov
fsubrs
and
sbb
ficoms
inc
push
mov
dec
jno
ja
jns
xor
push
lret
test
mov
jp
gs
push
pop
jmp
mov
mov
mov
aas
shrb
pop
dec
dec
cmc
pushf
cli
aam
adc
mov
jecxz
shrb
cmc
andb
sbb
addr16
out
jae
popa
shrl
xor
lret
hlt
mov
inc
bound
xor
xor
xchg
mov
jle
jmp
mov
adc
pop
lret
and
add
daa
mov
int3
pushf
femms
lds
fidivs
mov
mov
push
nop
push
adcb
pop
movsb
adc
fidivs
dec
push
in
xchg
lods
fstl
sbb
mov
aam
and
sbb
aam
dec
es
rorb
xchg
cmc
arpl
pop
aaa
mov
pusha
and
push
cmp
es
aam
sbb
hlt
arpl
cmc
xor
pop
xchg
ja
cs
mov
sbb
pop
outsb
sub
pop
push
jo
loopne
in
lret
mov
ret
mov
pop
jge
scas
adcb
jecxz
daa
cld
rcl
inc
xorb
fisttpl
inc
shlb
fsubrp
sub
ret
cmp
aas
orl
xchg
incb
sti
popa
add
cmp
repnz
xchg
rorb
shl
dec
les
push
adc
or
icebp
xchg
jns
shlb
scas
jmp
mov
mov
bound
jg
insl
adc
jbe
xchg
shl
add
pop
mov
movsl
leave
ficompl
int3
dec
xchg
popa
mov
jb
fcoml
dec
mov
cltd
movsb
adc
sbb
and
pusha
orb
js
das
fldenv
jne
shrl
dec
cs
movsb
jge
push
jno
push
xchg
decl
add
push
inc
sahf
out
pop
test
test
int3
push
jge
scas
jne
scas
xchg
fiaddl
pop
jg
aad
jecxz
push
or
repz
imul
into
push
xor
xor
sbb
lods
sub
jo
sbb
dec
inc
xchg
bnd
adc
lret
je
pop
sti
push
test
rcrb
das
push
cwtl
shlb
mov
ja
add
adc
cmp
js
fwait
loopne
cmp
fidivs
pushf
cltd
stos
jo
sub
pop
push
fimuls
or
jg
out
xchg
push
xor
mov
aam
cld
movsl
out
adc
testb
out
fcoml
pushl
pop
dec
out
out
push
in
push
movsl
pusha
lds
outsl
fs
mov
ror
and
test
in
in
add
stos
cmp
mov
jb
int3
jg
ret
pop
mov
xor
es
loope
mov
xchg
dec
cwtl
les
xchg
movsl
rcrl
cmpsl
add
sbb
inc
mov
insl
popf
sarl
repz
xchg
in
push
loope
popf
dec
loop
js
adc
mov
push
in
lret
data16
mov
out
arpl
pop
jl
mov
cmp
popf
mov
sub
dec
xor
add
lea
cmp
fldt
xor
shr
xchg
cmpsb
out
out
nop
lea
rcrb
cmp
cmpsb
sbb
xchg
jno
nop
cmp
jle
fs
push
rcrl
dec
mov
fwait
call
mov
ss
and
insb
mov
adc
stos
dec
mov
inc
and
xor
sti
mov
add
xor
adc
cmpsb
mov
cmovg
and
loopne
inc
aaa
mov
shll
mov
pop
pop
cmp
mov
fwait
xor
leave
dec
mov
push
xor
cwtl
cmp
jp
daa
dec
mov
fmull
cmp
sbb
and
test
les
push
imul
pushf
pop
jle
inc
fwait
popa
adc
adc
and
aaa
push
aam
in
sbb
dec
and
jle
xchg
lods
mov
push
cmp
call
cmc
sahf
inc
mov
xchg
jb
xor
sbb
adc
mov
subl
or
fs
or
in
call
jmp
adc
cmp
prefetch
cli
mov
mov
jecxz
inc
mov
sub
xchg
daa
dec
in
jbe
and
jmp
data16
push
mov
add
aam
loop
call
into
xor
or
in
aam
jp
das
adc
ret
sbb
xor
popl
lods
adc
mov
dec
int3
pop
jo
fidivrl
add
xor
bound
or
xchg
push
cld
add
pop
scas
fistpl
sbb
and
pop
addr16
push
and
addb
xchg
mulb
dec
es
cmc
fs
pop
cmp
adc
idiv
cs
mov
jmp
shll
push
xchg
sub
jnp
into
loope
xchg
decl
and
cmp
xchg
cmp
setne
cmp
lcall
mov
into
push
shlb
dec
mov
jo
aas
int
push
mov
cmpsb
mov
lods
out
mov
pop
dec
cld
sbb
adc
movsl
sti
cmpsl
fisttps
mov
jp
dec
lret
jns
adc
cltd
push
movsb
sub
or
fsubl
cld
ja
inc
sarb
push
out
sbb
scas
pop
icebp
pop
add
fidivl
aaa
ss
cmp
loop
lock
or
mov
je
pop
cmp
lahf
dec
sbb
loop
pop
movntq
and
mov
adc
xor
pop
cmp
iret
mov
hlt
jp
lcall
mov
and
jne
cli
add
push
lcall
loopne
push
je
xor
insl
mov
pop
outsb
jle
mov
ficomps
jg
xor
aas
je
std
sub
daa
pop
imul
ds
movsb
jne
pushf
mov
bound
sub
outsb
sub
push
fimuls
repz
cmp
sar
imul
adcl
lods
repz
push
xchg
sbb
xor
fistpll
mov
sbb
cmp
or
dec
sarl
insb
jp
mov
xchg
call
xor
jge
push
or
dec
pop
dec
push
pop
divb
xchg
cmp
mov
sub
xchg
cmp
adc
loop
outsl
lar
jmp
aad
out
lds
mov
fsubs
leave
fistpll
enter
flds
and
mov
jge
mov
push
and
adc
cli
scas
push
pop
dec
jne
or
movzwl
jl
loopne
scas
add
or
cmc
loopne
xbegin
ffree
ret
dec
aad
mov
movsb
jo
mov
and
loop
push
sub
rcl
mov
cmp
inc
jbe
call
ds
aas
ret
dec
popa
cmp
pop
mov
jp
hlt
in
fnstenv
lods
out
cli
push
loop
cmp
insl
repnz
jl
cmpsl
sbb
jno
sbb
or
sti
cmc
sub
decl
ret
test
ja
mov
mov
or
mov
jecxz
fldt
stos
and
sub
ds
xor
insb
insl
jbe
sbb
stos
clc
fistpll
pop
jecxz
fiaddl
xor
js
xchg
leave
xor
in
pushf
sbb
inc
and
shll
jge
lds
jg
push
lock
enter
lea
cwtl
sbb
xchg
jmp
insb
and
xchg
movsb
add
pop
out
ret
cmp
mov
std
jno
into
and
movsl
jbe
or
sbb
mov
lret
stos
jns
cld
aam
or
jg
adc
hlt
sub
push
jl
push
test
jb
andb
xor
aam
ret
pop
popf
lea
push
sarl
adc
mov
daa
imul
test
sbb
inc
cmp
call
xchg
xchg
mov
pop
adc
xor
xorl
insb
adc
stc
pop
in
clc
push
scas
adc
jmp
sbb
stos
les
ficompl
in
or
in
xchg
push
jp
aas
and
xor
loop
sbb
jle
incl
mov
push
ds
add
sub
or
adc
inc
cltd
and
mov
rorl
add
mov
xlat
adc
repnz
js
in
int3
pop
sbb
out
pushf
vpunpckhwd
fld
sub
pop
xchg
push
dec
ja
sbb
dec
insb
adc
sub
pop
movsb
push
les
loopne
ljmp
pop
mov
pushf
fsubs
xchg
dec
inc
cwtl
out
and
mov
mov
ss
rcr
stos
sbb
dec
fisubrl
mov
mov
adc
inc
xor
sahf
pop
je
cmpsb
sarl
mov
insb
mov
xchg
adc
pop
aaa
in
int3
jno
jmp
popf
out
jb
test
pusha
das
dec
mov
cmpsl
cmpsl
push
and
lahf
push
cld
inc
imul
cwtl
inc
clc
in
shll
pop
fisubrl
cmp
pop
out
bnd
mov
pop
or
sahf
jl
inc
je
jae
clc
push
int
mov
push
ds
stos
and
cmp
sar
sti
mov
in
fcomp
pop
ja
ror
add
mov
ljmp
inc
sub
cmp
ficoml
inc
hlt
cs
xchg
lret
mov
rorl
add
push
imul
sbbl
jno
sub
sarb
push
repnz
es
mov
cmpsb
xchg
mov
xor
bound
lods
sub
xor
dec
dec
inc
adc
xor
cmpsb
add
inc
add
lea
lcall
mov
ljmp
dec
bound
dec
fidivrs
outsl
xor
mov
fldenv
sub
dec
add
sbb
lds
mov
mull
cmp
cmp
or
sub
pop
ja
pusha
into
xchg
mov
xor
mov
je
iret
sbb
arpl
add
je
fisubl
pop
shl
and
inc
sbb
ljmp
cmc
out
mov
jb
add
lods
xchg
add
outsb
int3
mov
and
negb
out
mov
cmp
leave
call
out
and
loope
adc
daa
dec
lods
pop
data16
stc
movsl
push
pop
xchg
jnp
mov
inc
xor
insb
lds
aad
xchg
lea
pop
cmp
jecxz
mov
js
pop
dec
stos
js
lods
daa
jns
jle
ret
jns
pusha
fbstp
insb
jnp
push
sbb
mov
aad
out
pop
test
cmp
and
fildl
pop
sub
adc
jmp
xor
ret
push
sbb
popf
pop
mov
leave
fldcw
cli
adc
lahf
lcall
cmp
popa
inc
subb
shll
or
and
scas
iret
mov
mov
and
mov
and
js
les
pop
jnp
imull
pop
fistpll
fdivr
fstpt
jnp
push
outsb
test
dec
nop
sub
lock
mov
clc
push
gs
jle
test
cmovb
hlt
xchg
xor
jl
repz
into
xor
push
xchg
inc
fisubrs
fsubl
adc
jns
and
xor
dec
negl
jmp
pop
inc
movsl
fadd
bound
mov
sbb
adc
push
shll
std
sbb
mov
push
mov
xchg
mov
outsb
dec
sarl
or
jl
sbb
fcompl
lock
mov
lds
nop
jb
xchg
testl
xor
pop
sub
in
cmp
xor
pop
inc
stos
je
xor
push
xchg
or
outsl
xchg
movsb
push
sub
popa
cmp
pop
loop
sub
shll
mov
xorb
cmp
inc
xchg
pop
mov
mov
xchg
mov
idiv
dec
mov
and
add
rcll
test
xchg
xor
mov
out
inc
mov
mov
sbb
lds
pushf
int
push
roll
cltd
pop
cmp
lods
leave
ja
stc
sti
gs
mov
mov
sub
into
ss
sub
inc
lret
out
xchg
inc
outsl
std
mov
pop
jbe
cmpsb
xchg
testb
in
pop
pop
rolb
std
je
xchg
mov
push
inc
and
sbbb
enter
cli
es
stc
lret
mov
fs
xchg
repz
fs
vmload
sub
pop
fidivrl
insb
popa
push
out
and
jne
mov
dec
shl
xchg
or
inc
hlt
fs
out
mov
movsb
sbb
imul
fst
adc
mov
pop
sbb
es
dec
and
inc
fwait
cmp
mov
sbb
ffreep
lret
dec
loop
stos
inc
movntps
test
pop
insb
loopne
imul
outsl
xlat
repz
inc
enter
xchg
push
xlat
mov
pop
jns
sbbl
rcr
inc
adc
mov
stos
sbb
pusha
mov
fs
and
test
arpl
push
push
dec
jnp
xor
push
out
inc
data16
lods
in
xchg
dec
andb
sbb
ret
scas
add
cmp
inc
mov
fisttpl
cmp
push
pop
mov
ret
das
div
lds
in
imul
scas
js
lock
cmp
test
out
dec
cmp
cs
into
jno
js
pop
push
in
mov
scas
push
push
pushl
pop
addr16
clc
adc
sbb
int3
pop
js
or
inc
dec
cltd
cmc
fs
les
aaa
xchg
jle
pop
lds
ds
or
mov
shrl
add
fs
sub
mov
dec
cmp
rcll
cs
leave
popf
add
cld
push
xchg
out
outsb
xor
push
mov
dec
xchg
pushf
adc
iret
inc
jle
sbb
data16
jae
push
sbb
jge
mov
push
addr16
mov
cmp
jecxz
outsl
loopne
mov
jg
pop
sahf
dec
out
dec
rclb
cmc
aas
pop
loopne
fabs
jbe
and
fisttpll
fcmovu
push
cli
xchg
cmp
xchg
lea
loop
jl
fsubrs
mov
mov
aam
pop
dec
scas
test
ret
dec
loop
push
rcrl
adc
inc
fists
sub
adc
mov
pop
loope
lahf
mov
fwait
repnz
pop
xchg
sub
ret
lcall
adc
and
pop
ss
push
sub
jno
jnp
push
orb
sub
jo
enter
notl
lret
adc
jbe
pop
clc
inc
and
mov
and
push
fldl
and
push
call
fnstcw
insl
data16
enter
enter
sbb
xchg
adc
mov
lods
fsubrs
gs
or
test
adc
repz
shll
fs
aad
push
sti
stc
pop
divb
dec
jmp
dec
scas
stc
jle
cmp
std
pop
arpl
out
jmp
add
lds
lret
xlat
cmp
cmp
cli
mov
pushf
jb
jl
test
sbb
divl
test
mov
das
sub
jno
negl
dec
add
movl
push
mov
xchg
mov
popa
or
push
cli
lahf
fwait
and
ret
xlat
mov
mov
out
dec
sub
jnp
out
adc
aaa
clc
aad
stc
push
pop
sbb
icebp
test
dec
mov
sub
jnp
pop
mov
movsl
repz
lret
nop
stc
dec
pop
sbb
cmp
jmp
cli
xor
frstor
insb
sbb
lods
jmp
repnz
or
cmc
shll
repz
sub
outsl
das
inc
out
push
fldt
lcall
out
adc
pop
add
push
out
enter
aaa
xor
and
das
jb
arpl
pop
adc
push
aad
pop
out
mov
clc
jo
test
push
jmp
jp
rorb
push
push
popf
and
aas
rol
mov
test
test
aaa
das
daa
pop
enter
push
dec
mov
sbb
adc
inc
pop
or
inc
les
lret
outsb
sbb
mov
decl
ja
in
inc
ds
mov
loopne
push
add
sub
pop
scas
in
mov
inc
adc
cmp
lea
gs
mov
fnstcw
push
ret
inc
pop
push
stos
push
imul
adc
inc
inc
jnp
dec
inc
dec
imul
mov
icebp
jp
ljmp
test
out
xchg
inc
pop
orl
sub
mov
mov
out
test
clc
xor
xchg
ds
sub
andb
mov
outsl
pop
aam
jmp
xor
repz
cmpsb
std
adc
stos
pop
pop
cli
cmp
lea
pusha
xor
shll
pop
xor
cmp
ja
and
xlat
sbb
and
stos
lret
push
sbb
jne
adc
and
push
nop
lahf
ret
cld
arpl
cmpb
es
decb
xor
push
pop
test
sbb
pop
cmp
insl
or
ficompl
mov
cmp
mov
cwtl
push
pop
pop
cmp
add
pop
push
ss
ja
or
pop
or
push
cmp
cmpsl
xor
sub
mov
inc
pop
test
ret
sub
or
in
cli
gs
aas
adc
adc
sbb
sti
in
push
inc
out
mov
hlt
xchg
pop
pop
push
fsubl
rcr
ljmp
test
xor
mov
mov
aam
sub
aas
xor
movsl
jl
xor
aas
popa
jecxz
into
fistpll
out
rclb
and
dec
pop
xor
shll
mov
in
xor
jo
jmp
aas
call
shr
push
mov
jmp
mov
cmpsb
dec
loop
idivl
fwait
dec
je
scas
add
sub
inc
int3
sub
pusha
mov
push
nop
jno
mov
ficomps
insb
repz
out
sbb
das
mov
push
pop
cmp
jge
xchg
aas
push
fsub
into
pop
jmp
or
jecxz
push
lds
pusha
jmp
or
lods
push
lcall
out
inc
adc
cmp
push
popf
lea
adc
jb
outsb
sbb
cwtl
aam
pop
popa
cmp
xor
stos
mov
jl
pop
xchg
jno
cld
ljmp
sub
mov
push
sbb
popa
or
mov
sahf
cs
mov
sub
cs
js
jg
idivl
mov
les
gs
cmp
fs
mov
or
stc
cmp
jnp
andb
adc
xchg
jnp
xchg
sar
xchg
in
icebp
rorb
xor
rcll
enter
loope
xchg
mov
cli
es
in
jb
cmpb
aad
test
fcoml
roll
dec
mov
cmpl
sub
mov
mov
sbb
lods
inc
rorl
insl
out
mov
sbb
sahf
mov
movsb
pop
inc
in
fwait
jb
movsl
push
stos
cmpsb
mov
dec
jne
stos
mov
fidivl
repz
add
mov
sub
cmp
movsl
inc
ja
or
pop
leave
bound
repnz
insb
aas
icebp
mov
repz
push
rcrl
push
cmc
rclb
or
mov
popf
into
and
cltd
pop
jge
or
pop
jo
jns
add
pop
shrl
data16
dec
ror
dec
push
add
pusha
movsl
inc
mov
mov
adc
jge
adc
sub
sub
scas
roll
dec
inc
add
in
jecxz
fldt
cmp
xor
or
pop
lret
jg
adc
jmp
test
sbb
lds
arpl
cmp
pop
add
clc
outsl
xlat
add
repz
adc
scas
or
scas
lret
clc
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
imul
int
xor
jp
pop
jp
inc
repnz
nop
sarl
push
cmp
jp
jno
shl
ljmp
push
jge
aam
xor
lcall
jb
repz
dec
lods
bound
cli
push
push
add
cmpb
outsl
es
xchg
push
mov
mov
aas
iret
xchg
xchg
mov
cmp
cmp
dec
dec
cli
js
and
push
scas
movsl
xor
out
mov
stos
ret
lods
frstor
and
cmp
push
cmp
dec
sub
ja
xlat
stc
js
pushf
mov
or
add
aaa
ret
mov
loopne
inc
rolb
int3
or
out
jge
mov
sbb
mov
jno
dec
fwait
clc
mov
cmc
js
dec
push
fisttpll
or
mov
mov
adc
pop
inc
sti
popa
adc
cmp
push
stos
jecxz
pop
outsl
enter
shlb
mov
scas
sbb
outsl
mov
stc
popf
sahf
repnz
add
add
dec
mov
loop
fsub
rcl
sub
sbb
mov
jbe
lret
out
fisubl
bound
loopne
and
push
pop
sub
iret
inc
xchg
push
pop
jb
sahf
dec
je
mov
repz
stos
pop
pop
cli
or
lret
mov
mov
dec
in
mov
jne
inc
mov
xchg
in
enter
repz
sahf
cmp
jp
jns
hlt
fsubrs
outsb
mov
push
mov
out
mov
test
insb
xor
ds
les
incl
or
sahf
add
jne
pop
mov
sbb
gs
jns
stos
mov
xchg
xlat
and
lcall
cltd
aaa
xchg
pop
insb
mov
jns
sub
push
jns
mov
in
sbb
sbb
data16
ljmp
out
fiaddl
sub
mov
sub
repz
xchg
test
bound
inc
or
push
lods
mov
adc
scas
push
clc
fwait
cmpsb
jge
xor
xchg
ja
repnz
into
cmpsb
mov
rorb
mov
imul
adc
mov
pop
mov
xchg
pop
xor
ret
adc
and
pop
aas
rol
mov
add
stc
clc
lahf
or
lods
movsbl
jb
pop
sbb
mov
ljmp
mov
mov
dec
mov
push
sbb
mov
mov
dec
mov
lods
repz
js
fsubl
sub
sub
inc
jmp
mov
mov
mov
mov
fcomip
jle
dec
or
adc
or
push
fidivrs
flds
push
enter
in
cmp
js
es
adc
dec
test
daa
mov
fsubrl
jne
xchg
or
pop
dec
pop
repz
lret
ret
jmp
and
adc
push
jae
shrl
or
cmp
and
test
xor
dec
and
push
arpl
inc
push
xchg
mov
out
ja
bound
mov
loop
xchg
cld
aam
andb
push
aaa
inc
push
xchg
xor
cmpb
int3
aas
xchg
mov
aaa
popa
xchg
sub
div
push
add
js
fxch
adc
pop
mov
mov
and
lds
sbb
cld
pop
xor
or
sarl
dec
ja
int3
jge
lods
cmpb
sar
shlb
cld
dec
push
xchg
cmp
push
mov
jle
jecxz
aad
mov
shrl
clc
insl
ja
dec
adc
pop
ja
bound
add
insw
in
xchg
adc
cli
push
mov
push
adc
or
dec
call
in
lods
pusha
fstl
jns
push
lods
jmp
or
ljmp
xchg
pop
push
fdivrp
inc
shlb
rcl
icebp
shll
js
std
jecxz
enter
add
dec
inc
jnp
mov
into
in
cmpl
ljmp
les
stc
xchg
roll
loop
ljmp
movsb
xor
vpmadcsswd
std
add
scas
sbb
dec
adc
and
jns
ss
enter
push
dec
sbb
jg
xor
inc
push
sbb
jae
fbld
pop
insl
push
cmc
outsl
sbb
and
cmp
lret
ret
cld
ljmp
inc
push
adc
xchg
das
pop
inc
xchg
mov
push
and
cmpsb
rcrl
xchg
insb
leave
mov
mov
sbb
out
into
repnz
fisttpll
dec
xor
pop
stos
adc
jbe
cmp
inc
imul
and
dec
xor
iret
and
add
pop
repnz
dec
jnp
daa
stos
cmp
addr16
mov
pop
xor
daa
cmp
jns
test
dec
jmp
pop
cmp
sub
outsb
xchg
push
cmp
lret
clc
fisubs
std
xchg
mov
mov
add
xchg
sbb
or
fld1
call
mov
jns
ljmp
jae
shll
sti
sub
repz
sub
sbb
test
lea
cmp
fwait
lds
popa
test
cmovo
dec
mov
movsl
xlat
xor
loop
pop
lock
sbb
cmp
add
push
add
adc
iret
ret
jb
lea
jle
pushf
rcr
cwtl
xor
daa
test
pop
cmp
loop
pop
sbb
xor
jno
mov
jmp
mov
or
dec
lahf
jle
pop
fistps
lret
lods
shl
xchg
movsb
movsl
jbe
pop
and
and
inc
es
iret
and
xchg
adc
and
xchg
lds
jecxz
aam
push
sub
stos
int3
cmpl
add
or
mov
sbb
jb
xor
xlat
xchg
movl
xchg
push
test
ror
mov
mov
add
xor
pushfw
mov
nop
jno
mov
dec
dec
outsl
pop
push
call
add
adc
fs
fiadds
adc
add
mov
iret
jnp
jne
pop
hlt
lret
or
cmpsb
sbb
cmpb
rcrb
xchg
inc
fdivr
fldl
rorl
leave
aam
mov
xchg
pop
test
cld
push
lods
stos
push
lcall
das
inc
cmp
add
jns
movsl
pushl
mov
adc
jae
lret
lahf
push
mov
popa
nop
sbb
lds
rcr
cli
jb
cmp
inc
add
movsb
test
or
add
stc
xor
stos
xor
mov
jg
nop
rcrb
fcomp
fmuls
adc
aas
scas
ljmp
or
xor
adc
and
test
mov
sub
int
mov
dec
outsl
int
add
adc
jbe
out
pop
hlt
addr16
mov
ffreep
push
mov
mov
loope
mov
jns
inc
xchg
fwait
jmp
mov
mov
fldl
repnz
aaa
cld
mov
mov
aas
cs
out
or
lock
dec
sbb
mov
das
sub
inc
adc
call
xchg
mov
xchg
enter
insb
or
in
mov
or
out
das
cltd
dec
ja
rolb
subb
and
mov
lock
cmpsl
xor
repnz
add
hlt
pop
or
jg
in
lea
xchg
in
jo
mov
jmp
dec
pop
inc
daa
test
rcrl
mov
ds
xor
push
push
cmc
add
outsb
xor
test
ds
xor
jb
adc
push
mov
cmpsb
cs
mov
fildl
test
push
add
pop
cltd
jecxz
cwtl
mov
hlt
pusha
insb
xchg
fmuls
xor
arpl
clc
icebp
lea
sub
or
mov
aaa
rcl
mov
add
test
mov
mov
icebp
into
pop
sub
imul
mov
mov
jns
mov
jo
ficomps
and
icebp
xchg
lret
mov
cmpsb
add
aaa
mov
js
and
pop
or
cmp
data16
test
outsb
mov
in
or
outsb
pop
fldt
pop
push
addr16
xchg
gs
adc
jnp
inc
loopne
scas
push
imul
ret
and
add
mov
and
push
lret
test
xor
pop
xor
or
rorb
inc
jge
inc
scas
and
cmp
les
inc
repz
popf
mov
pop
xchg
add
xlat
sbb
xor
addr16
mov
ljmp
mov
mov
das
rorl
add
mov
mov
cwtl
mov
xor
scas
dec
inc
ds
mov
in
or
sub
dec
fst
jl
outsl
mov
push
stc
push
imul
in
fmulp
xchg
in
xchg
inc
hlt
insl
sbbl
jmp
mov
jbe
mov
lods
inc
push
or
adc
jbe
stc
mov
inc
pop
and
in
pop
out
sbb
ds
mov
or
lcall
ss
insb
mov
stos
push
xchg
movsl
jp
hlt
and
sbb
sub
cmp
jl
pusha
fdivrs
jbe
pop
mov
xor
push
js
sbb
jg
adc
push
repz
imul
aam
dec
sub
cli
jecxz
sub
sbb
arpl
push
adc
push
enter
xor
dec
add
jg
lods
shl
jae
and
and
icebp
outsb
arpl
and
or
les
pop
sub
test
mov
repnz
subl
testb
push
inc
or
ljmp
ds
fildl
mov
xchg
pop
mov
and
jmp
mov
adc
push
mov
push
fs
fmull
cmp
pop
pop
fcoml
notl
clc
xchg
mov
cmp
frstor
stos
cli
in
or
cli
mov
cmc
in
push
pusha
cmp
aam
jns
jno
xor
and
imul
push
pop
std
pushl
lret
pop
xor
and
pop
cmpsb
das
add
add
jnp
incb
ds
shlb
movsb
xor
mov
clc
lock
and
add
and
popa
lock
imul
lret
shll
in
sub
add
out
jbe
mov
mov
pop
lcall
lahf
sub
push
xchg
cmp
xor
mov
adc
add
aam
rclb
sub
lahf
aaa
test
fwait
hlt
push
sahf
inc
mov
or
and
jnp
sbb
add
lahf
jb
jecxz
arpl
cmc
movl
out
add
adc
mov
xor
cmp
jp
adc
andb
cmp
or
jns
cmp
lock
cld
mov
out
add
add
mov
xchg
addr16
mov
repnz
xchg
jbe
lret
xchg
adc
cmpsb
popf
leave
andb
xor
das
push
mov
sbb
and
rorl
mov
aam
jno
pop
rcll
and
jmp
mov
insl
jnp
scas
inc
xor
loop
pop
pop
inc
fimuls
sbb
sbb
cmc
lods
insl
mov
fadds
stos
inc
cs
stc
test
push
arpl
xor
outsb
or
add
pushw
sub
in
stos
in
js
pop
orl
fnstsw
sahf
loopne
daa
sti
adc
icebp
jns
sahf
lock
icebp
or
in
xlat
adc
std
leave
sbb
stc
push
and
sub
inc
mov
mov
aad
jle
inc
fsub
adc
std
cli
dec
movsb
jle
push
cmp
arpl
jbe
mov
in
mov
add
lods
test
data16
dec
fsub
and
out
outsb
repnz
mov
mov
or
mov
aaa
cli
ss
mov
dec
mov
or
cmp
and
push
xor
cmp
idiv
dec
push
or
testb
in
insl
push
mov
arpl
mov
ss
shrb
xor
sbb
push
or
push
xchg
leave
pop
push
sbb
js
cmp
adc
xchg
sbb
aaa
pusha
jmp
rorb
inc
stos
xchg
push
pop
jg
shrl
aaa
rorl
stos
enter
mov
outsb
push
push
fwait
icebp
xor
jno
lret
ja
add
repnz
pop
cwtl
push
rcrl
ljmp
aaa
pop
xor
shl
daa
sub
std
pop
push
fwait
int3
dec
mov
jno
jns
jno
pushf
fs
call
cltd
add
lret
dec
push
push
addr16
mov
lock
es
cmc
daa
aas
mov
cmc
arpl
lret
shl
push
dec
jmp
fcmovu
push
fstps
mov
cvtpi2ps
lret
into
fldt
push
xchg
sub
ds
mov
sahf
pushl
adc
or
mov
xchg
jno
shl
xchg
or
add
movsl
inc
inc
sub
sub
xor
or
fldl
rclb
stos
subl
jp
cmp
cltd
jmp
pop
movsl
popf
pop
mov
xchg
push
dec
or
push
or
mov
dec
jb
and
scas
jnp
shrb
cmpsl
jmp
pop
insb
jecxz
sub
push
mov
fdivrs
test
sbb
in
in
mov
push
pusha
push
loopne
sbb
push
stos
pop
push
sub
fnsave
subl
adc
inc
lcall
dec
xchg
mov
in
sub
aas
lods
push
mov
jg
add
push
pop
jb
hlt
mov
in
jne
push
aad
adcb
popa
daa
mov
adc
enter
imul
xor
stos
divb
dec
xchg
hlt
xchg
rcr
repz
sahf
sub
add
ljmp
sti
lods
rclb
pusha
xchg
ss
ret
rolb
gs
pop
stc
cli
syscall
push
mov
pop
cmp
icebp
inc
add
movsb
aas
pop
fldt
jl
mov
out
push
push
bound
and
sub
shrl
mov
inc
mov
fmull
shr
orl
inc
sbb
lds
scas
mov
sti
fimuls
xchg
mov
adc
pop
mov
sbb
call
mull
pop
gs
shlb
in
daa
sarb
mov
aam
and
lock
sti
icebp
dec
ljmp
test
jb
adc
fs
mov
pop
add
mov
sub
jl
cmp
lcall
dec
push
mov
leave
pop
ret
adc
cli
rol
stc
push
mov
je
xchg
jle,pt
and
js
imul
bound
movsl
mov
pop
mov
orl
movsl
pop
mov
shrl
pushf
test
sub
daa
jecxz
adcb
cmpsb
aaa
sub
inc
scas
loopne
pusha
out
xchg
adc
aas
pop
jne
inc
out
les
xor
aas
es
adc
daa
and
int3
popf
or
add
xor
pushf
cmc
int
dec
cli
or
lret
sub
cs
in
pop
sbb
push
adc
push
xorl
rorl
std
out
jge
pop
shlb
mov
jb
adc
pop
sbb
fists
dec
jmp
arpl
int3
adc
ljmp
xor
scas
mov
test
fsubrs
test
jnp
outsb
xchg
mov
xor
fs
jecxz
stos
notb
pop
mov
xchg
sbb
in
push
pop
insl
mov
xor
sbb
mov
insl
adcb
sbb
push
ja
aad
das
ss
adc
std
push
dec
jo
mov
sti
push
fs
jae
sar
loope
mov
ret
mov
into
daa
jae
cmc
adc
xchg
in
lock
xchg
mov
cmp
fimull
adc
cld
sbb
lret
or
push
bound
sub
sub
inc
dec
jl
cmpsb
mov
adc
inc
mov
fadds
sub
inc
jge
jl
std
rcrl
mov
add
fdivr
pop
adc
or
pop
fildl
repnz
cmpsb
inc
ficoms
orl
inc
mov
pop
push
test
mov
mov
test
push
fucom
push
sbb
dec
or
ss
insb
adc
shll
stos
insl
xor
dec
mov
add
sahf
cmpsb
fadds
jb
dec
out
int
fsub
fsubrl
popf
mov
in
scas
int
xor
inc
push
or
shll
leave
stc
add
cld
cmpl
in
fidivl
cmp
cltd
ficompl
nop
in
jg
add
xchg
push
mov
dec
sbb
fisubl
mov
add
lahf
jl
jno
clc
inc
jno
sbb
mov
shll
jecxz
lods
and
outsl
add
aam
aam
jno
sbb
mov
xor
push
jp
push
jno
rcll
add
mov
cmp
pop
sbb
sarl
and
jbe
xchg
dec
test
loope
mov
add
test
rolb
xor
adc
test
into
push
cs
insl
inc
push
aam
or
sarb
ja
jnp
aaa
xor
hlt
cld
in
pop
pop
aam
psrld
out
fwait
push
icebp
icebp
mov
daa
daa
aam
push
xorb
int3
imul
jae
out
mov
mov
xchg
or
call
mov
and
pop
xchg
imul
leave
xchg
test
mov
sub
f2xm1
xchg
cmp
or
cmp
xor
dec
mov
insb
mov
add
pop
lahf
cli
sbb
mov
mov
ja
dec
nop
cmpsl
cmp
jle
shll
sbb
lahf
jne
fwait
pop
insl
hlt
xchg
xchg
xor
cmp
adc
fs
rclb
ds
fadds
push
stc
in
mov
xchg
loopne
cltd
ss
rcll
in
in
xor
sbb
popf
aaa
adc
sub
or
xchg
push
adc
inc
aaa
jecxz
inc
fldcw
int3
mov
sub
cs
out
pop
inc
ret
ds
or
inc
mov
addr16
insl
dec
idivl
jmp
sahf
jecxz
add
shrl
mov
or
call
shll
adc
enter
pop
notl
sub
mov
mov
inc
stc
xlat
xchg
lods
jp
outsl
xor
mov
mov
pusha
dec
pop
sub
fadd
xchg
push
in
shr
loopne
icebp
movsl
fld
aaa
cltd
testb
adcb
add
push
lcall
out
push
clc
jae
xchg
sub
jge
mov
pop
or
dec
cmp
pop
lds
into
gs
or
iret
vpmacsdqh
js
mov
std
push
pop
xchg
fldenv
adc
fistpl
jnp
jle
push
mov
sbb
push
lahf
shll
xchg
pop
inc
xor
out
mov
adc
mov
sbb
sarb
hlt
xchg
push
popa
or
fldcw
idivb
cmc
pop
out
mov
stos
test
or
clc
sub
pop
lock
je
pop
xchg
xor
sub
push
mov
cmp
push
cmpsl
pop
fs
std
movsl
popl
fldcw
xor
jnp
pop
outsl
push
push
cltd
push
lock
dec
adc
inc
loop
push
dec
cmpl
js
inc
xchg
xchg
jl
push
mov
in
ljmp
cmp
push
ljmp
loopne
xchg
out
mov
loop
fistl
cs
xlat
lods
jmp
in
testb
cmp
ds
xchg
jg
sub
out
addl
add
mov
mov
cltd
pop
xor
std
mov
push
adc
sbb
addr16
mov
popf
mov
push
mov
addr16
xchg
or
test
lret
push
jns
inc
stc
pop
xor
and
std
add
andb
dec
mov
inc
out
pushf
sub
outsl
mov
mov
xor
shl
sub
jmp
mov
movsl
sub
and
jmp
jno
pop
dec
xchg
stos
push
or
mov
sbb
push
push
loop
outsb
fdivl
mov
mov
loopne
push
cwtl
std
aad
mov
xor
out
popf
ljmp
mov
in
sbb
movsb
mov
flds
insb
mov
sbb
fdivrs
inc
stos
ficoml
div
push
inc
fwait
xchg
ja
and
pop
xchg
lret
cmp
insl
rcrb
sbb
loope
inc
push
lret
cwtl
repnz
add
push
adc
test
mov
inc
push
ja
pop
jnp
push
dec
cmp
add
mov
int
mov
stos
addr16
cmpb
test
jbe
dec
pop
mov
fld
and
rol
addr16
loope
sti
push
ja
insl
jno
lock
jle
cltd
push
adc
pop
inc
ljmp
pop
arpl
cli
nop
adc
mov
cmc
cmp
mov
fistl
pop
xor
subb
loop
jmp
int3
icebp
mov
push
pop
push
cwtl
lret
stos
xchg
xchg
in
fmuls
andb
arpl
nop
jge
clc
mov
bound
xchg
in
jb
dec
dec
push
cmpsb
loope
lahf
xor
sub
dec
les
jns
lret
mov
ficompl
xor
xchg
lods
aam
cmp
mov
pop
cmp
cmpl
adc
mov
jl
out
lcall
mov
adc
sub
outsl
mov
cmpsl
jno
cltd
bnd
push
mov
lods
push
mov
into
fs
shl
inc
out
lret
daa
daa
xor
ja
gs
push
dec
adc
mov
sbb
xor
stos
jmp
shr
ljmp
mov
adc
lea
in
adc
jb
jae
mov
sbb
adc
xchg
icebp
push
and
and
fnsave
push
mov
clc
mul
mov
xor
xchg
dec
in
jae
out
mov
add
add
xchg
sub
sub
in
inc
cwtl
pop
outsl
test
mov
fmull
push
xchg
cmp
mov
stc
sub
lods
adc
mov
adc
pusha
mov
lret
loopne,pt
push
inc
mov
int3
sbb
adcb
dec
cmp
rcll
mov
jg
lods
pop
lahf
fwait
ret
mov
mov
ljmp
xchg
fcomps
or
je
xor
mov
add
and
out
sub
pushf
dec
inc
leave
ljmp
and
jnp
test
jmp
cmp
xchg
xchg
xor
pusha
adc
paddb
imul
popf
jb
add
dec
fldcw
push
sbb
lods
adc
jg
sub
xchg
or
add
fisttpl
adc
inc
sub
sub
fcoml
xor
gs
push
fwait
mov
loope
les
cmp
sarb
aam
pop
into
test
and
mov
in
push
cmpsl
andb
addr16
das
push
sub
adc
xorl
test
cmp
inc
int
cli
popf
mov
mov
je
adc
popf
mov
ficoml
lock
int3
imul
out
sub
orb
xor
fisttps
push
movsl
lock
dec
push
cmp
loopne
out
sbb
lock
into
lock
mov
cmp
pop
jg
and
and
ret
aaa
or
dec
xchg
and
sub
je
out
mov
clc
adc
push
cmpsl
xchg
es
xor
cmp
sub
movsl
fld
sbb
pop
xor
inc
nop
cmpsl
dec
or
repnz
add
aam
add
in
inc
cmpsl
and
jns
sbb
push
cmp
iret
fcomp
icebp
addr16
les
dec
mov
ss
test
mov
lret
xor
mov
fsubl
movsl
pop
bound
mov
push
loop
sahf
jge
push
and
inc
lahf
imul
mov
cmp
imul
es
pop
jmp
es
mov
mov
sbb
test
pushf
fwait
mov
in
push
fcoms
push
into
rclb
ljmp
or
cwtl
push
sahf
sar
test
inc
pop
sub
ss
sbb
push
fisubl
fldl
jnp
inc
add
aas
sub
push
dec
and
orl
ds
stc
ret
cmc
movsl
or
imul
lock
inc
les
outsl
adc
aas
mov
sbb
adc
add
dec
pop
sub
stc
xor
and
stos
jb
jo
test
pop
inc
enter
add
jg
movsb
pushf
cmp
jne
jb
and
stc
adc
sbb
mov
cmp
stc
ret
cmpsb
test
or
jp
lods
sbb
stos
fsts
punpckldq
pusha
mov
rolb
mov
and
adc
lahf
in
stc
stc
test
rcl
out
push
jne
sub
in
popa
stc
push
cli
mov
rolb
cmp
adc
adcb
pop
addl
mov
test
mov
out
push
push
pop
in
inc
mov
fdivp
jb
jge
push
arpl
inc
dec
pop
out
add
pop
scas
jl
or
dec
push
js
aas
adcb
lods
mov
les
lods
outsl
sub
cmp
xor
popf
dec
inc
adc
mov
mul
stos
imul
xor
adc
fnstsw
dec
test
mulb
lcall
rolb
stc
adc
mov
repnz
loop
lret
call
sbb
pusha
outsl
push
mov
fists
sub
jle
mov
andl
pop
js
jmp
mov
cmpsb
sbb
pop
cmp
pop
and
out
ss
adc
or
push
adc
in
xor
test
xor
ss
aas
lret
adc
ja
cmpsb
imull
ja
sar
adc
scas
push
lods
and
jnp
push
or
cltd
jae
fiadds
fisttpll
les
pop
sbb
daa
cwtl
dec
sub
stc
sub
imul
adc
mov
push
mov
pop
lret
mov
sbb
xchg
push
mov
fiadds
inc
sbb
pop
fistpl
cwtl
sub
loopne
lret
xchg
ret
sti
cmc
pushf
fisubrl
and
sub
outsb
popf
sub
dec
in
in
and
ret
or
add
cmpsl
mov
xchg
outsl
jne
fldl
jnp
incb
xchg
sbb
sbb
cmp
and
fwait
or
add
cltd
cmp
push
or
cs
leave
jecxz
aad
pushf
pop
mov
sbb
das
mov
test
repz
xchg
inc
jbe
mov
push
push
nop
and
iret
insb
push
mov
jl
insl
jae
xor
mov
push
mov
push
outsl
movsb
sbbl
xor
jl
cli
and
cmpsb
cmp
stos
xor
scas
rolb
sar
js
jb
pop
leave
jle
jg
push
push
cld
sahf
mov
cmp
insb
inc
imul
shll
inc
mov
sub
movsl
aam
push
push
dec
outsl
in
jns
jmp
mov
shlb
mov
sarl
mov
sub
imul
mov
jmp
jle
xor
test
push
call
inc
mov
iret
xchg
inc
iret
mov
aam
notb
ret
mov
rolb
or
pop
leave
add
mov
dec
adc
leave
jo
xor
mov
xor
or
xchg
jg
and
xor
fstpl
sbb
push
xchg
sub
lret
in
mov
fcompl
jge
jno
sbb
notl
xchg
sbb
dec
popf
fs
xchg
pop
dec
mov
xor
insl
in
popa
scas
inc
jmp
ret
push
inc
push
jb
ds
subb
or
cmp
mov
mov
push
mov
xchg
push
mov
ljmp
xor
xor
dec
or
ror
sbb
jo
sarl
mov
xchg
orl
xor
in
fisttpl
daa
pop
inc
scas
int3
sti
pop
sub
sbb
mov
out
push
pop
out
stos
jo
movsb
sbb
idivl
adc
sbb
pop
cmp
mov
jge
adc
sub
sub
push
fimull
mov
xchg
dec
inc
pop
out
rorl
xor
mov
jno
mov
gs
sub
lods
mov
shr
faddl
xchg
lret
cmp
inc
cmp
sahf
jge
mov
mov
jne
xchg
cmp
push
or
mov
and
rclb
mov
andl
mov
lret
adc
mov
lea
mov
mov
in
in
add
addr16
aam
or
jle
mov
out
jno
stos
jae
stc
pop
shrb
fwait
push
lds
in
jne
add
sub
push
xchg
enter
stc
loop
movsb
inc
loopne
mov
addr16
push
ret
jecxz
xchg
ja
lahf
jne
adc
pushf
push
or
xchg
mov
cmc
mov
ljmp
sti
inc
insb
hlt
xor
call
mov
cs
and
push
xchg
xchg
es
inc
xor
pushf
les
jl
inc
cmp
mov
scas
mov
repz
push
ret
icebp
test
insl
cmpsl
and
testl
mov
subps
jnp
and
rorl
ss
inc
jge
aam
outsl
cli
stos
hlt
pop
mov
dec
sub
push
inc
sbb
jb
or
mov
add
lret
loop
fisubrs
stc
es
sub
shlb
out
insl
insl
xor
mov
sub
push
ds
jb
hlt
orb
jo
das
lahf
dec
cmpsb
add
clc
inc
jno
outsl
js
scas
cmp
ror
jmp
gs
dec
cmpsb
or
ss
push
fidivl
cmpsb
jg
in
push
sbb
push
test
pop
sti
addr16
jl
jl
push
and
scas
and
cltd
dec
lea
out
inc
fmuls
sub
ret
dec
mov
loope
adc
test
iret
inc
fdivrl
mov
jnp
and
xchg
popa
push
test
xlat
jge
movsl
dec
sahf
mov
push
popa
ds
mov
fwait
cld
xor
jnp
add
cld
and
mov
xor
push
push
movb
jb
jge
jle
fstps
scas
andl
push
in
repnz
mov
stos
pushf
lds
iret
pop
or
adc
stos
xor
jns
frstor
lods
inc
test
or
mov
out
in
sbb
js
je
cmp
mov
cli
adc
push
push
push
push
add
or
enter
sbb
mov
add
mov
jnp
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
pop
inc
enter
push
test
movsl
test
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
sti
clc
popa
add
xchg
add
mov
add
rclb
rorl
rcrl
lds
dec
sub
mov
push
loope
imul
cmp
mov
fwait
mov
dec
hlt
xchg
stos
adc
push
scas
xchg
pop
out
lds
movsl
jmp
pop
push
pushf
add
cmc
inc
es
jp
mov
shll
xchg
or
push
das
sub
jo
arpl
mov
imul
push
xor
jnp
aad
jnp
stos
stc
xor
out
mov
cli
ret
cmp
push
sbb
jle
insb
dec
addb
pop
sub
xor
fwait
insb
push
jecxz
mov
shr
into
call
std
inc
mov
into
xlat
cmp
push
aas
lcall
xchg
jns
int3
addr16
pop
push
lcall
mov
bound
pop
pusha
mov
fwait
gs
into
xchg
stos
fstps
lock
jno
stc
mov
dec
les
mov
shr
push
sub
dec
sbb
or
test
ljmp
xchg
push
inc
repnz
add
scas
inc
lea
push
pop
adc
test
jne
imul
xchg
bound
cmc
movsl
xchg
lods
add
aad
mov
stos
sbb
push
rolb
cltd
cmp
sbb
sub
lods
imul
lcall
cmc
jbe
aas
cmp
adc
adc
movsb
test
fsubp
pop
shrb
dec
mov
mov
inc
outsb
push
sar
daa
in
fcmovne
or
mov
mov
jmp
mov
or
cmc
push
cwtl
lds
add
jns
cld
lods
sub
mov
int3
notb
je
shll
je
jecxz
ja
int
push
push
dec
cwtl
rcrb
enter
dec
mov
mov
or
test
xor
fwait
jge
sub
movsl
pop
inc
lret
ret
insb
fdivrp
imul
inc
movsb
decl
out
lods
inc
inc
xor
lret
xchg
bnd
jns
mov
lods
test
jb
jmp
xchg
jge
push
mov
test
mov
push
xor
xchg
int
int3
or
push
pusha
fmul
mov
fwait
shrb
push
out
out
test
imul
jg
mov
mov
push
pop
aad
jg
add
xchg
add
mov
adc
cmp
out
imul
sub
cmp
test
jge
fiaddl
insl
scas
mov
les
inc
enter
pop
clc
adc
pop
imul
mov
in
sahf
aam
sub
fistpl
xor
push
fs
lahf
adc
imul
shl
popa
sbb
xor
adc
inc
dec
in
int3
test
movsl
shlb
shr
add
inc
stos
mov
jbe
or
adc
scas
jne
clc
jo
push
xor
mov
ja
hlt
test
daa
xchg
fmulp
inc
ret
test
loopne
push
lcall
or
lods
movsl
sar
divl
lret
mov
enter
je
out
popa
and
xchg
adc
arpl
aam
outsl
loop
ljmp
ja
and
nop
icebp
test
insl
loopne
shrb
jno
stos
ffreep
divl
push
ja
mov
xchg
hlt
mov
inc
mov
pop
dec
cmp
dec
inc
cmp
lcall
mov
jmp
pop
push
repnz
out
scas
pop
xor
js
lea
clc
lds
add
push
cltd
xor
inc
xlat
cmp
xor
or
std
out
cmpsb
lahf
inc
popa
mov
sbb
dec
lods
js
cli
jmp
fld
adc
xchg
and
sbb
rorl
pushf
or
imul
xchg
mov
lock
outsb
aam
xchg
mov
cmpsl
sub
les
and
cs
push
add
pop
jb
push
pop
sub
mov
mov
adc
lret
stos
pop
test
cmp
aam
or
jb
push
add
mov
pop
imul
inc
cmpsl
sbb
jno
add
rorl
and
and
fldt
shrl
sar
inc
das
push
gs
aaa
mov
adc
sub
mov
enter
dec
rorl
mov
in
sti
or
or
mov
and
bound
mov
add
jo
jae
loopne
fimull
insb
cld
shrl
stos
jge
push
add
sahf
cmpsb
lahf
adc
test
cmp
or
int3
add
les
jne
cmp
mov
lcall
in
imul
iret
and
mov
popf
fwait
xchg
pop
xchg
mov
lcall
add
dec
jne
pop
sub
push
push
inc
repnz
xor
inc
cmp
pop
jo
fnstsw
sbb
daa
lods
popa
mov
push
stos
pop
or
jge
mov
push
into
push
xchg
mov
stc
adc
mov
ror
scas
add
dec
fmuls
out
mov
or
mov
gs
xchg
outsl
cmp
into
mov
and
shr
sub
sbb
cmp
sbb
testb
stc
pop
jne
ret
mov
cld
mov
ja
xlat
sti
sbb
xor
mov
fistl
mov
push
in
mov
push
mov
aam
mov
jge
loop
mov
add
aad
pop
orl
arpl
jae
rolb
push
mov
and
mov
andl
ljmp
dec
icebp
or
xchg
sub
out
movsl
fwait
add
in
push
dec
xchg
adc
test
jmp
adc
lcall
testb
fists
or
inc
or
paddusb
adc
incl
addl
lea
pop
cltd
fwait
sbb
jle
push
adc
das
pushf
aad
xchg
call
int3
insl
scas
out
xchg
loopne
addr16
add
outsb
insl
ds
lret
jns
hlt
xor
jg
jo
shl
and
pop
clc
xchg
notb
inc
sub
mov
fcoms
stos
mov
mov
stc
jl
imul
sbb
mov
adc
ret
addr16
inc
outsl
cmpsl
xchg
je
sbb
add
je
dec
js
cld
out
push
push
xchg
mov
test
cmp
adc
dec
mov
stc
lret
adc
add
pusha
cmpsl
or
push
cltd
and
mov
push
clc
xchg
fs
sub
rorl
mov
jl
cmpl
xchg
cmp
popa
bound
movsl
mov
ret
adc
imul
pop
sub
add
loopne
sub
aas
out
and
sub
mov
cmp
inc
lahf
repz
or
pop
xchg
pop
inc
cmp
fistps
rcrb
clc
les
sub
mov
jp
push
hlt
cltd
xchg
imul
add
shrl
iret
test
or
dec
jnp
insl
scas
dec
sbb
add
pop
fmull
test
std
out
jl
sbb
adc
jb
and
sbb
test
es
test
mov
pushf
jb
orl
push
adc
fisubrl
fstl
repz
shll
out
cmpb
sbb
out
jns
loope
cld
xchg
inc
sub
neg
xor
pushf
mov
int
jecxz
sbb
int
in
enter
aad
pop
xor
mov
xor
mov
sub
hlt
ret
popa
lods
scas
and
cmpsb
dec
icebp
inc
jg
jge
add
cli
shr
popa
int
xchg
inc
imul
loope
cmp
jns
dec
mov
fiadds
out
push
add
cmp
pusha
in
mov
cmpsl
adc
movsl
jbe
mov
sarb
ja
or
imul
add
mov
ss
scas
ds
pop
push
push
inc
lods
xlat
addr16
mov
ljmp
xchg
mov
popf
js
js
push
xor
das
aaa
jle
cmp
div
and
push
notl
pop
cmp
mov
out
xor
jmp
lds
inc
stc
add
or
pop
dec
dec
inc
test
clc
adc
outsl
mov
add
xor
in
aad
jne
add
lds
xor
push
xor
je
or
fiadds
pop
lds
sar
shr
loop
arpl
xchg
enter
pop
cwtl
dec
or
dec
mov
jp
inc
adc
xchg
cmp
pop
icebp
int3
mov
or
out
fisubl
shr
sahf
daa
push
sub
dec
and
mov
pop
cmp
pushf
xchg
cmp
aam
fsubr
test
cli
daa
sbb
cld
loop
add
dec
push
xor
add
sub
fs
test
lcall
das
mov
pop
repnz
push
js
mov
popa
jae
ds
sub
sub
jo
adc
arpl
mov
jmp
rorb
hlt
push
mov
ds
mov
xor
fwait
scas
jmp
pop
lea
sbb
jo
push
mov
add
hlt
mov
std
jl
dec
pop
cmp
pop
pop
sbb
add
xchg
add
sbbl
mov
mov
mov
pop
pushf
push
sarb
into
push
dec
shl
rcll
popa
push
mov
fs
sub
jno
xchg
jno
stos
popf
cmpsl
iret
lds
jp
fimull
mov
es
or
fdivs
cmp
add
mov
mov
or
pop
test
aam
push
in
xchg
int3
xrelease
and
inc
xor
dec
mov
and
lea
daa
jl
or
inc
xchg
aaa
insb
stc
sub
jp
ljmp
and
mov
cltd
iret
jbe
jbe
fdivrl
jmp
lock
adc
mov
faddl
inc
xchg
in
je
inc
daa
cli
fidivl
cmp
sbb
mov
xchg
inc
idivl
mov
push
daa
ss
inc
test
popa
dec
sti
mov
jae
imul
pop
cmp
or
into
int
mov
jecxz
and
cmpsb
or
aas
stos
das
lret
mov
add
dec
push
jno
imul
test
xchg
pop
movsl
lret
in
or
icebp
repz
mov
popf
adc
rclb
xor
jne
xor
fistps
lcall
adc
or
and
popf
mov
rclb
pop
xor
jne
negb
xor
xor
jge
mov
adcb
aaa
int3
out
mov
imul
test
pusha
decb
inc
cltd
enter
arpl
sbb
pop
lret
test
and
mov
stc
jnp
inc
mov
arpl
pusha
in
xchg
jle
mov
jb
cwtl
sahf
jne,pt
xor
jl
mov
and
jo
jo
cmpsl
test
cmp
cmp
nop
hlt
js
cmp
ficomps
mov
outsl
push
outsb
jns
sbb
adc
std
out
lods
test
loop
jmp
or
dec
cmpsb
xchg
cld
jne
or
xchg
leave
add
dec
inc
enter
mov
popa
adc
adc
sub
es
or
movsl
pop
data16
pop
out
out
dec
imul
jmp
push
inc
les
scas
mov
dec
addb
data16
mov
sub
cmp
enter
cmp
add
imul
fdivrl
pop
ret
mov
add
bound
push
clc
mov
dec
pop
add
add
negl
in
mov
sub
lret
inc
sar
sbb
movsb
jb
icebp
mov
js
sarl
xchg
in
jge
mov
orb
xlat
iret
scas
push
mov
mov
jo
sbb
mov
xchg
int3
aad
scas
out
out
inc
aam
in
cld
inc
leave
sub
in
adcl
mov
faddl
add
imul
out
not
pop
xchg
into
je
cmp
adc
pop
lcall
std
mov
cltd
in
movsb
cltd
les
sbb
idiv
fcmovnu
mov
cli
lods
jl
cmpsl
out
inc
cltd
and
das
xchg
repnz
fnstenv
push
faddl
stos
and
xor
or
aas
icebp
push
stc
adc
and
stc
push
movsb
ss
int3
jmp
push
push
dec
in
mov
int3
aad
or
das
sti
mov
loope
push
jo
dec
xor
testb
loop
xchg
insb
test
loop
sbb
int3
lds
mov
jno
jle
fwait
addl
jo
pop
mov
jne
cmc
stos
jmp
aas
popf
shrl
inc
ss
xchg
jl
loopne
mov
adcl
sahf
je
orl
push
sub
lods
rol
adc
cmp
sub
fiaddl
and
jne
gs
test
ret
sbb
in
inc
repnz
fisttpll
cs
rcl
inc
mov
adc
dec
shrl
es
repnz
das
sbb
sub
mov
aad
shrl
stos
xlat
out
loop
jg
and
je
movsb
push
push
inc
mov
mov
sub
mov
mov
or
push
mov
xchg
pop
pop
fwait
xor
mov
mov
fstl
jg
add
jmp
addl
dec
movsb
push
jmp
and
loopne
or
or
and
ret
pop
or
lods
sub
cmp
pminsw
dec
leave
mov
xor
jnp
test
in
pusha
lock
repnz
insb
aam
cmp
outsb
and
scas
ret
jbe
cwtl
in
ja
xlat
scas
add
jg
pop
aad
push
fnstenv
and
add
cmp
pop
sub
pushf
data16
int
xor
shrl
xchg
dec
fs
stc
icebp
sti
xor
dec
fistpll
repz
gs
and
jo
push
int3
out
or
add
mov
leave
jle
gs
inc
stc
cmpl
xchg
push
push
mov
jle
std
cmp
test
inc
add
ss
outsb
inc
insb
out
jo
and
les
ficoms
and
mov
jno
lcall
dec
cmp
loope
lea
in
stos
dec
mov
adc
sub
mov
rorb
xor
repz
pusha
data16
jb
push
jns
or
addb
sbb
xor
addr16
outsl
push
inc
fcomp
xor
lahf
bound
pop
cmpsl
cwtl
push
ljmp
das
adc
ret
clc
addr16
push
xchg
ljmp
in
in
dec
cmp
inc
addr16
out
popa
or
dec
out
stos
xchg
xchg
int3
push
inc
mov
aad
dec
cmp
pop
pushf
add
in
mov
jb
addb
cmpsb
ljmp
aas
or
aaa
out
pop
push
lret
imul
call
lods
lock
jbe
cmp
jp
or
in
aad
pop
iret
js
pop
fisttpll
mov
mov
xor
dec
dec
pop
loopne
out
jmp
out
sbb
xor
pop
xchg
xchg
sub
jl
stos
jmp
xchg
dec
cmpsb
ss
test
jmp
cmp
in
dec
mov
sub
pushf
shr
sub
lahf
pusha
insl
enter
xchg
pop
lret
or
pop
cmpsb
or
jb
ds
or
gs
jnp
fsubp
and
lret
sub
dec
pop
dec
mov
fwait
dec
pop
aad
cld
xor
mov
cltd
out
cli
sbb
or
cmp
pop
sub
pop
sub
cmpsb
test
xlat
adc
jecxz
dec
ds
cmp
mov
inc
lret
sti
into
das
jp
mov
or
push
lods
push
dec
and
add
in
xor
jnp
push
cmp
sub
mov
sahf
push
jb
sbb
mov
xchg
insl
movsl
pop
mov
add
dec
inc
add
mov
out
add
cmc
fistpll
stc
cmpsl
mov
sbb
push
test
add
add
ss
dec
int
clc
pop
xor
addb
lods
in
ret
sbb
jno
mov
xor
ret
adcb
xchg
cmp
inc
adc
push
lea
add
nop
hlt
out
cltd
cltd
inc
mov
repnz
xchg
mov
inc
movsl
cmp
push
jg
pop
push
and
or
out
movsl
jle
add
mov
adc
stos
mov
xor
inc
and
sbb
sti
lods
push
pushf
push
lret
push
fsubrs
inc
jne
loop
imul
out
sahf
jl
pop
out
and
aad
cmpb
mov
mov
dec
mov
cmpsl
insl
mov
fwait
js
and
add
fstpt
clc
xorb
cmpsb
loopne
mov
test
pop
lock
push
mov
push
jg
jmp
pop
fwait
push
cmpsb
in
and
mov
pop
dec
mov
xor
xor
push
out
pop
dec
sub
jmp
sbb
int3
inc
adc
pusha
fstp
push
in
push
lods
mov
imul
sbb
popa
push
sbb
out
leave
and
fisttpll
or
fwait
mov
loope
es
inc
push
mov
fxch
pop
ja
mov
subb
sub
inc
lea
fcmovb
jle
mov
iret
es
negl
push
mov
jne
insl
adc
xchg
pop
mov
mov
xchg
test
je
lcall
inc
push
cmpsb
repz
cmpl
xor
jecxz
push
lahf
test
scas
pop
aas
mov
or
push
packssdw
mov
ret
inc
inc
xor
outsb
addr16
insl
aaa
iret
jo
adc
mov
out
push
mov
lock
int
cmp
jae
and
sub
cmp
push
xor
mov
and
push
aad
push
or
cli
jno
xor
push
mov
cs
xor
xor
movsb
jp
mov
jae,pn
sbb
mov
inc
inc
and
stos
ds
xlat
sub
dec
jae
push
or
into
inc
movsl
sbb
pop
pop
fs
push
sub
sub
cmp
push
enter
movsb
lea
lods
and
das
test
add
xchg
add
sub
movsb
fs
and
or
shll
repz
int3
std
add
in
mov
clc
into
cltd
jne
jmp
mov
mov
aas
mov
fnstcw
mov
add
cmp
test
fildll
push
push
mov
std
add
clc
sbb
xchg
mov
xchg
cmp
enter
add
daa
jae
sbb
cld
aas
cmp
or
icebp
lret
mov
or
cmp
jle
adc
lcall
add
les
pop
xchg
mov
sub
loop
cmpsl
out
std
cmpb
xchg
or
loope
inc
js
pop
jne
xor
cmc
stos
inc
lahf
mov
mov
out
jb
movsb
and
dec
push
fistl
push
push
jmp
push
in
mov
jb
ret
adc
dec
push
push
in
mov
add
sbb
stos
pop
clc
pop
rolb
out
xchg
mov
push
jmp
sub
stc
scas
dec
or
cs
test
leave
jmp
outsl
sahf
cli
cmp
ror
sub
insl
xchg
lcall
xor
cwtl
xchg
call
stos
orl
sti
ficompl
push
jb
int3
sbb
xchg
push
lods
pop
fs
fmull
out
in
jl
ja
push
dec
mov
and
scas
sub
pop
lods
ja
jp
movsl
push
xchg
jp
add
sub
mov
scas
cmp
pusha
inc
test
jp
add
ret
daa
lahf
xchg
adc
rcrb
sub
inc
dec
outsl
inc
pop
in
pop
lock
cmp
js
mov
xor
dec
adc
adc
jne
inc
cmp
xchg
sahf
jmp
xor
out
int
push
loope
orl
sub
xorl
scas
int
fsubr
pop
pop
adc
ss
mov
cmp
pop
test
loop
insl
pop
ss
loope
iret
adc
test
fcompl
pop
add
and
mov
xor
das
sub
adc
xchg
inc
scas
pusha
rcl
lock
xlat
pop
jnp
pop
xchg
mov
xorl
cmp
test
adcl
add
xchg
add
gs
dec
push
notl
jns
jnp
mov
fdivl
mov
push
daa
loope
cltd
insb
mov
xchg
pop
bt
lds
xor
xchg
fs
or
push
xchg
push
sub
push
int
adc
insb
adc
mov
mov
mov
pushl
push
nop
mov
cli
sbb
push
xchg
cltd
and
inc
std
rorb
pop
je
mov
std
gs
inc
push
insl
push
mov
push
sbb
sbb
dec
or
jge
adc
mov
sub
mov
pop
mov
and
cmp
xchg
pop
inc
fisubl
in
gs
fldenv
push
clc
jne
outsl
mov
cltd
xchg
sbb
pop
loop
mov
sbb
push
add
add
insb
cli
rcll
jne
aaa
test
jl
add
mov
push
fyl2x
sti
inc
sbb
cmp
icebp
jp
sub
push
nop
lds
pop
mov
lock
aas
lods
cmp
sbb
sub
je
out
sub
push
and
push
mov
incl
lcall
sbbl
negb
adc
loope
mov
call
imul
das
cld
xchg
test
xor
mov
inc
insl
js
test
inc
mov
mov
lcall
or
loope
add
add
dec
and
mov
add
jle
rcrl
daa
loop
enter
pusha
or
xor
pop
je
lods
push
cmc
cmp
or
inc
int
sbb
fstps
mov
xor
imul
lcall
dec
out
push
das
mov
jbe
push
inc
cmp
mov
cwtl
sbb
xor
or
adc
push
cltd
repnz
ficoml
pusha
push
add
xchg
lods
frstor
aaa
push
push
adc
ds
sbb
fstl
add
pop
lea
cmp
push
jb
in
jne
add
or
jb
daa
mov
idivl
and
add
jecxz
insb
sub
aas
pop
add
or
xor
dec
add
xchg
std
jg
in
pop
jnp
pop
xor
jnp
add
xor
xchg
pushf
imul
daa
mov
pop
mov
orb
sub
aam
jg
cmp
add
mov
stos
or
adc
add
mov
loop
dec
jge
mov
pop
xchg
mov
popf
fisubs
movsl
inc
pop
test
hlt
pop
and
push
mov
fsts
mov
outsl
cmpsb
cmpsl
hlt
lcall
mov
inc
cmp
test
push
mov
or
out
push
push
roll
jge
push
loopne
cmpsb
jnp
out
loopne
fcmovu
xchg
subb
ljmp
movsb
rclb
cmpsl
jne
push
sbb
rcr
push
lret
stos
or
je
xor
cltd
xchg
stos
repnz
out
into
fnstcw
test
das
pop
scas
sbb
cmp
lret
ss
mov
xorl
xchg
push
xor
fisttpll
repz
pop
mov
rep
and
aad
stos
sti
imul
and
xor
adc
xor
add
jne
add
push
test
jmp
outsl
mov
cwtl
inc
or
adc
inc
rorb
mov
fdivrs
cmpsb
cmovne
dec
imul
add
jecxz
add
loop
push
push
ds
jae
dec
popf
aam
mov
xchg
adc
push
mov
push
or
clc
xchg
dec
pop
and
jae
jmp
pop
jbe
xor
mov
hlt
jo
pop
lret
xor
fnstsw
xchg
imul
lahf
cmp
mov
xor
adc
addl
stos
pop
xchg
xor
and
pushf
lods
xlat
jb
insl
sub
mov
shlb
cmp
push
xor
dec
das
inc
mov
aaa
lret
inc
cld
lods
xor
ret
sub
mov
mov
fdivrs
pop
mov
pop
mov
insl
incb
ss
cs
insl
in
pop
sbb
xchg
inc
lods
pop
into
mov
pop
shrl
and
inc
mov
insl
push
stos
jae
xor
call
cmpsb
mov
fprem
mov
or
xor
pop
out
and
les
push
push
fstpl
inc
jmp
arpl
lahf
mov
push
add
idiv
iret
std
mov
jg
jge
add
and
es
sbb
add
movsl
sub
lret
and
ss
xchg
jb
sub
jle
fidivl
xchg
ja
mov
scas
jno
mov
mov
mov
sahf
call
in
adc
imul
add
into
mov
rclb
hlt
fmuls
and
rclb
jns
clc
int
pop
or
fwait
mov
inc
pop
cs
push
sarb
sub
rcrb
sbb
adc
push
int3
mov
xor
dec
jns
pushf
in
sbb
repz
jno
mov
xor
mov
scas
int3
mov
inc
fs
clc
xor
dec
popa
sub
push
mov
test
sub
iret
jmpw
out
push
ret
out
mov
xor
inc
lods
inc
sub
xlat
push
test
jecxz
mov
mov
push
into
cwtl
dec
stc
push
pop
sbb
repz
cmp
xchg
push
jle
les
xlat
sbb
roll
or
out
mov
or
push
xor
mov
ret
pop
adc
clc
and
fisttpl
das
pop
mov
loop
shrb
or
repnz
fs
sahf
insl
outsl
adc
cld
lret
push
notl
xchg
jmp
cmpsb
add
xchg
push
aaa
adc
and
jle
xchg
and
dec
enter
loop
cmpl
dec
mov
xor
loope
das
inc
movsb
jle
or
mov
mov
mov
jo
mov
out
rorb
xorl
add
push
aaa
inc
lcall
sub
insl
fists
pop
fcoms
lret
inc
into
aas
imul
gs
scas
jb
mov
pop
xor
dec
xchg
mov
out
xadd
dec
sub
inc
aaa
fwait
repnz
out
repz
inc
jnp
gs
dec
cmp
or
push
aam
clc
push
lcall
shll
inc
xchg
fmul
push
xchg
push
sbb
dec
mov
cmpb
stos
cmc
pop
int
jg
aad
movl
mov
out
mov
dec
dec
addb
xchg
add
or
jnp
pusha
test
ror
xor
mov
loope
pop
xor
xchg
es
jns
push
xchg
nop
mov
dec
jne
shlb
in
movsl
xchg
and
push
aam
lahf
ja
sub
scas
xchg
or
xor
addr16
js
sbb
jb
mov
cmc
adc
pop
pop
cltd
jg
stos
dec
jns
add
mov
popf
jmp
xchg
jecxz
fists
data16
sub
lock
mov
cmc
out
ja
das
inc
in
sbb
push
pop
cltd
insl
mov
or
push
inc
test
out
fldln2
hlt
int3
shlb
popa
push
fimuls
push
hlt
jno
insb
data16
ror
sbb
cmp
popa
cld
sbb
xchg
out
daa
mov
mov
sbb
test
xor
cmp
fstpl
js
je
jge
and
lods
fidivs
add
pop
pop
xor
stos
pusha
pop
push
or
pop
fists
lret
mov
push
sub
or
lahf
lea
pop
xchg
mov
or
mov
and
dec
fwait
push
push
jno
mov
shll
cmp
sub
push
jl
lods
in
inc
add
movsb
fwait
mov
jle
loop
xor
xchg
mov
inc
outsl
mov
mov
or
arpl
pushf
imul
cwtl
mov
push
fs
cmp
out
dec
jo
and
xchg
stc
and
fisubrl
popa
push
mov
mov
ds
ret
or
jno
nop
or
lea
jbe
lcall
inc
xchg
add
stc
jp
xor
xor
loopne
in
mov
mov
or
sahf
out
insl
cltd
xor
test
push
sub
inc
mov
into
loope
pushf
into
pslld
ja
mov
lret
mov
push
xor
or
fisubrl
stc
pop
roll
xor
fdivrs
lds
sti
in
jp
push
mov
std
jg
adc
sub
rcrb
xchg
push
jnp
push
push
push
xchg
sub
sub
gs
and
movsl
adc
sub
xchg
pop
push
mov
pop
sub
les
push
push
jle
xlat
outsl
mov
lcall
add
xchg
add
test
and
outsb
pop
into
movsb
repz
ficomps
lock
pop
add
les
out
lahf
cmp
push
cli
xchg
rcll
loopne
mov
push
add
adc
popf
xor
gs
sub
fwait
ret
lds
cmp
pop
and
dec
xlat
fldl
sarb
lret
es
jnp
clc
lahf
cmc
add
push
or
out
add
jnp
repz
xchg
std
jmp
jo
fstl
and
adc
push
iret
jecxz
dec
aad
in
inc
xchg
fisubrs
dec
pop
fwait
inc
xchg
inc
add
pop
push
mov
sbb
loop
outsb
or
lcall
lret
mov
jb
ja
push
imul
mov
lods
push
jmp
xlat
push
cli
add
loope
ljmp
cld
shrb
mov
cmp
or
enter
lcall
ret
xchg
push
inc
imull
shlb
adc
arpl
shll
push
dec
or
inc
pop
sbb
ficompl
xor
xchg
inc
clc
test
sbb
aaa
nop
hlt
xchg
inc
scas
jmp
or
ret
jg
shrl
push
insb
dec
push
add
xchg
sub
sarb
imul
and
mov
adc
mov
dec
mov
test
or
lods
adc
sahf
mov
dec
and
and
pop
jge
movsl
inc
dec
inc
push
jbe
cld
xchg
stos
xchg
pushf
rcr
std
iret
and
xlat
dec
add
aas
push
pop
mov
or
shlb
leave
cli
loopne
cmp
dec
add
push
cwtl
pop
cs
ds
dec
mov
mov
mov
mov
les
and
mov
clc
enter
cvttps2pi
in
adc
rcpps
mov
inc
test
sbb
mov
cmp
stc
mov
sbb
mov
jns
mov
push
cmp
mov
jnp
fdivr
inc
adc
shll
sbb
mov
xchg
push
xor
int
mov
and
xor
pop
sub
pop
jne
out
ja
xor
ljmp
add
data16
sub
pop
test
add
dec
test
inc
sahf
pop
xor
shll
push
aas
xchg
loopne
mov
out
dec
lahf
pushl
movsl
insb
in
fsubrl
sub
pop
incl
pop
imul
addb
xchg
dec
aaa
push
cmpsb
jnp
fcmovu
pop
scas
cmp
inc
or
xchg
outsl
push
arpl
adc
xlat
fldt
push
gs
divl
jne
adc
out
jl
clc
mov
in
loope
and
stc
mov
jbe
out
jbe
imul
jmp
popa
add
out
cmp
mov
lret
inc
or
out
popf
sahf
cmp
ljmp
aad
push
dec
cmc
scas
aaa
sub
sarb
push
notl
cwtl
fld
fwait
dec
mov
xor
mov
push
stc
ja
dec
add
push
push
inc
addb
mov
je
aad
push
mov
jne
shrl
xchg
mov
push
inc
data16
sub
sub
dec
mov
scas
fidivs
lahf
and
mov
or
cltd
dec
xlat
shrl
jae
dec
and
pop
xlat
loope
dec
lcall
cmpsb
push
dec
sbb
pushw
and
cmp
push
daa
adc
or
imul
cmp
dec
xchg
inc
rcr
inc
aaa
divb
dec
push
jg
stc
xorl
out
cmpsl
es
mov
sbb
sub
outsb
addb
pop
or
and
mov
sti
pop
sbb
cs
dec
scas
xorl
in
divl
xchg
mov
push
stc
inc
lock
cmp
mov
pop
pop
movsl
ret
fldl
incb
sbb
lea
xor
fsubl
adc
popa
sbb
dec
xchg
xchg
subb
out
mov
ret
or
mov
xlat
xchg
fucomi
aam
add
mov
mov
mov
mov
sub
pop
mov
or
jae
ret
pop
xor
push
pop
nop
mov
pop
cmp
pop
adc
mov
mov
je
lret
cmp
cmp
jle
adc
jnp
push
or
mov
add
mov
les
fisubrl
sbb
push
orb
ja
in
mov
or
add
xchg
insl
mov
aam
inc
fadds
add
loope
add
xchg
add
lret
mov
int3
push
sti
or
jnp
int
lea
push
sbb
cmp
fwait
mov
mov
sub
imul
push
js
es
jmp
inc
add
sbb
sbb
or
xor
fucomi
mov
dec
or
jecxz
in
cmp
inc
xor
out
pop
mov
fistpll
repz
cmp
xchg
data16
bound
clc
pusha
push
xchg
add
adc
decl
push
xchg
es
jge
push
idiv
inc
cmpsb
jecxz
xor
mov
fs
sub
scas
push
cmc
and
pop
cmp
int
xor
push
inc
jle
and
dec
jns
dec
cltd
pop
ficoms
pop
pop
adc
push
pop
jmp
lret
repnz
lcall
pop
push
mov
xchg
lods
xor
aaa
ljmp
mov
mov
js
mov
in
mov
aas
movsl
out
push
adc
test
ljmp
mov
push
or
and
inc
pop
dec
daa
push
cmp
popf
adc
cmp
and
push
je
lock
andl
jnp
test
or
cmpsb
mov
mov
mov
shll
inc
out
int
aas
adc
adc
fs
mov
dec
jb
push
sahf
push
sbb
cmpsb
or
scas
sbb
hlt
aad
adc
aaa
sbb
int
jmp
mov
push
add
out
sub
jl
mov
popa
push
pop
mov
sbb
pop
and
jp
xchg
sub
add
loopne
lcall
or
jmp
push
fists
push
and
pusha
pop
push
loop
push
nop
mov
jbe
mov
fwait
cmp
xchg
out
icebp
mov
scas
push
add
pop
cli
ja
es
pop
mov
jb
das
repnz
adcb
insl
sub
sbb
xchg
ret
andb
scas
movsl
push
xchg
lock
pop
test
jno
mov
mov
inc
push
push
mov
xor
xor
or
pop
adc
add
jnp
outsb
js
ljmp
dec
mov
test
jbe
sbbl
push
scas
popf
push
mov
test
sub
mov
out
dec
out
ja
idiv
pop
out
dec
mulb
push
mov
add
adc
mov
xor
xor
xor
jne
sbb
shll
fisttpl
cmpsb
mov
imul
test
dec
cmp
lret
mov
test
in
inc
push
inc
dec
xorb
mov
push
mov
cmpb
ljmp
cli
jne
mov
imul
inc
test
nop
lcall
and
loop
dec
dec
pop
ljmp
repnz
pop
fmull
lahf
bound
mov
jne
sub
or
rol
fsubrs
cmp
sarl
mov
mulb
cmp
mov
mov
icebp
pop
and
aad
jmp
dec
push
je
mov
in
xor
cs
pop
out
xor
push
pop
nop
aas
icebp
adc
testl
and
jg
mov
es
nop
xor
xlat
dec
outsl
sub
pop
adc
out
mov
push
lods
mov
push
jbe
into
mov
hlt
push
xchg
fcos
and
movl
xchg
and
imul
xchg
sarl
mov
dec
in
je
lcall
adc
subb
repz
lods
push
fsubl
pop
cmp
test
mov
in
adc
xor
pop
fsubl
ja
push
or
es
push
jns
fwait
in
sbb
fs
push
sub
jl
sub
sub
and
pop
jno
xchg
mov
cmp
sub
call
into
fcomps
and
pop
mov
xchg
fidivrs
sub
in
mov
xchg
insl
shll
in
ret
push
inc
pop
mov
push
test
mov
mov
xor
push
call
mov
mov
cmpsb
icebp
mov
loop
movsl
pop
mov
jbe
push
pop
cmp
outsb
div
pop
mov
pop
nop
push
repz
add
inc
js
ficoml
xchg
push
clc
js
stos
jnp
mov
cmp
pushf
mov
jae
outsl
xorl
clc
pop
push
xchg
in
sub
mov
ds
std
mov
xchg
or
push
pop
stos
inc
lcall
arpl
je
add
sti
mov
test
lcall
add
add
leave
cmc
int3
jmp
cltd
cmp
scas
push
es
fdivr
pop
sbb
jl
mov
outsb
mov
mov
mov
or
inc
adc
pop
icebp
jl
cltd
dec
xor
arpl
bound
xchg
shrl
cmp
pop
cmp
dec
mov
sbb
xchg
mov
jge
jbe
jle
pop
jmp
pop
mov
inc
xchg
es
jp
fstps
sbb
or
cmpsb
popf
fsubrl
stc
imul
or
adc
add
fcom
pop
push
scas
push
lcall
inc
xor
or
lds
in
mov
xor
inc
push
xchg
stos
icebp
out
dec
sbb
add
and
iret
roll
movsb
xchg
imul
sub
mov
xchg
mov
push
adc
icebp
fbld
or
xor
mov
xor
sub
aas
sub
pop
pop
sbb
inc
loop
mov
fsubrs
fsts
jbe
jecxz
jbe
push
test
jmp
fnstenv
enter
mov
js
xchg
mov
mov
std
sbb
mov
mov
fbld
or
mov
jns
je
add
push
xchg
and
movsl
and
sbb
fsubrs
cs
push
mov
ja
jns
mov
cmp
mov
dec
ljmp
push
jnp
pop
pop
ficoml
imul
aam
dec
mov
mov
ficomps
cmp
push
xchg
cmp
push
pop
mov
arpl
lret
push
sbb
into
and
dec
pop
int3
mov
or
or
sub
mov
loope
jle
ljmp
sub
out
pushf
out
push
push
ss
popf
sub
in
test
cmp
sub
jmp
mov
test
mov
das
pop
adc
pushl
push
imul
aas
add
add
dec
imul
mov
int3
mov
push
sbb
testb
repnz
lds
or
push
adc
xchg
xor
jno
sbb
mov
xchg
jge
leave
adc
pushl
adc
mov
mov
jae
aad
pushf
jb
outsl
add
sahf
xor
mov
jbe
add
xchg
add
ret
xchg
rcrl
add
cltd
test
pop
push
into
lret
xor
mov
and
push
loope
shr
repnz
fsub
xchg
mov
lds
dec
sub
xchg
sar
inc
leave
fstps
pushf
xchg
jnp
inc
mov
sub
jg
cld
mov
ljmp
push
in
insb
mov
pop
shll
movsl
das
sti
mov
lret
xor
int3
add
loop
sub
pusha
adc
sub
jnp
dec
insb
in
pusha
adc
lahf
mov
inc
xor
mov
jne
les
setge
pop
cli
sub
cmp
pop
dec
mov
stos
cld
pop
dec
and
roll
mov
add
icebp
or
aaa
mov
pushf
mov
clc
lds
xchg
pusha
nop
stos
inc
fs
out
dec
popfw
xchg
adc
jl
imul
out
popf
ja
adc
mov
sti
jno
cmp
add
jne
ja
aam
and
in
xchg
push
xor
pop
or
jg
cmpsb
cli
jp
or
mov
push
daa
mov
fcmovbe
mov
jmp
mov
xchg
pop
cmp
pop
or
sub
jo
or
xor
mull
or
adc
bound
add
push
outsb
aam
fmuls
jo
das
mov
adcb
dec
loope
and
push
lods
mov
mov
xchg
sbb
mov
sub
sbb
xor
arpl
xchg
insb
xor
nop
cmc
enter
jnp
aam
daa
fwait
cmp
mov
movsb
fwait
xor
lahf
je
jne
or
test
sub
aam
sbb
mov
xchg
sub
notb
jo
in
aas
out
and
xchg
mov
insl
shl
mov
mov
dec
out
mov
dec
lods
ret
cli
lea
testb
mov
int3
jo
jmp
test
outsb
cwtl
push
push
cli
jo
xor
pushf
mov
xchg
mov
lea
loope
inc
inc
or
sbb
cmc
scas
test
dec
int3
in
lahf
imul
scas
push
mov
fcoms
test
dec
icebp
push
shrb
sbb
jno
aad
scas
adc
pop
in
or
jg
mov
fcomip
inc
push
jl
mov
mov
mov
std
pop
xor
fiaddl
add
ret
gs
lcall
das
div
or
xchg
add
jne
dec
sbb
insl
popf
jge
xchg
sbb
arpl
jge
jns
xchg
inc
adc
ljmp
and
xchg
and
idiv
inc
dec
mov
mov
cmpsb
xor
fnstsw
xchg
ret
outsb
sub
mov
or
mov
ss
xor
adc
out
inc
pop
call
jle
out
jle
movsb
icebp
jp
call
adc
mov
outsb
cs
nop
inc
sbb
imul
push
jmp
xchg
les
inc
leave
dec
and
popf
in
mov
push
jb
jnp
and
adc
ss
popf
mov
inc
sbb
xor
sbb
sbb
ficomps
push
cmp
xchg
lods
loope
fwait
and
scas
enter
js
pop
adc
and
push
cs
or
push
bound
stc
sbb
repnz
cld
adc
xor
rcr
push
cld
fcoml
insl
subb
loop
out
ss
repnz
das
push
out
cmp
mov
adc
pop
ljmp
dec
adc
pop
mov
push
jnp
or
pop
inc
xchg
sti
jge
inc
xchg
cltd
adc
cmp
leave
xor
repnz
ja
lahf
leave
xchg
push
push
pop
sbb
pop
sbb
mov
out
sar
les
dec
fwait
xor
ret
xor
jle
fldt
jmp
jp
sahf
iret
test
xchg
jl
fldenv
and
andl
mov
fdivrl
call
adc
mov
andl
ss
aad
add
arpl
push
inc
loopne
call
xchg
mov
dec
daa
push
decb
arpl
cmpsl
lea
inc
xchg
xchg
fs
in
push
xchg
adc
cmp
repnz
mov
sbb
leave
in
and
lods
xchg
pop
and
sbb
dec
cltd
xor
and
jge
mov
outsl
add
cmp
cli
xchg
mov
mov
sbb
mov
int
clc
movsb
sti
insb
sahf
insl
push
xor
sbb
mov
xchg
inc
cli
pop
test
add
rolb
out
sub
cvtps2pd
inc
mov
xchg
add
xchg
add
imul
roll
xor
orl
dec
jmp
xchg
in
inc
shlb
xor
ret
pop
adc
push
jle
popa
push
out
call
ja
dec
dec
iret
mov
lods
ss
pop
sub
dec
pop
xchg
push
adcl
mov
sti
in
ss
fadds
lret
and
je
in
push
pop
mov
lds
push
sub
rcr
xorb
fstpt
mov
int3
rorl
mov
cmp
sub
mov
lock
iret
loope
dec
cwtl
aas
and
movsb
sub
dec
sbb
insl
fcomp
or
and
leave
movl
cmp
adc
mov
adc
fimull
or
rcl
pop
cmpsb
jg
pop
gs
or
sahf
mov
sub
pop
push
pusha
jp
ljmp
push
push
popa
inc
sbb
out
xchg
lods
js
xor
std
mov
xor
f2xm1
mov
shll
mov
in
cli
fldt
xorl
dec
jge
outsb
sub
lods
cltd
in
xchg
stc
hlt
push
or
js
iret
in
mov
sti
adc
mov
test
or
xor
sub
inc
fildl
cld
xor
cld
pop
lcall
aas
xlat
cmp
push
negb
push
adc
add
test
push
lods
negb
mov
fmulp
cmp
sub
je
imul
dec
sbb
roll
xor
push
out
mov
in
je,pn
jge
sti
sti
jg
cs
mov
negl
inc
pop
dec
mov
ja
adc
pop
mov
cmpsb
out
mov
dec
loopne
jno
inc
add
dec
fstl
adc
adc
cmp
add
popa
mov
std
mov
aaa
xchg
jp
mov
mov
and
xchg
sbb
or
mov
mov
inc
jbe
aas
stos
xchg
insb
add
dec
loop
sti
repz
sub
jle
nop
and
gs
das
lea
mov
scas
inc
push
aam
add
cwtl
cwtl
inc
aam
xchg
adc
jnp
fdivrp
pushf
xor
ret
sub
pop
lea
jecxz
icebp
outsb
xorl
mov
lret
addps
inc
inc
popa
data16
rcrl
xor
out
ljmp
add
orl
gs
dec
mov
inc
sub
std
in
movsb
test
jl
xchg
pop
aad
out
adc
stc
cmc
iret
call
jne
add
push
push
push
out
push
mov
inc
mov
sbb
xor
in
out
mov
adc
cltd
or
mov
and
and
in
movsl
rorb
or
cmovne
mov
cmpb
jmp
sbb
sub
mov
inc
and
sbb
jae
idivb
and
mov
repnz
call
test
rolb
mov
cmp
sub
xlat
pop
pop
sbb
aas
aas
imul
push
out
int
or
ret
jg
mov
andb
mov
jo
cmp
inc
mov
add
fidivs
ds
xor
je
pop
fstl
lea
mov
or
int3
cmp
add
jb
sub
js
adc
cmpsl
scas
xor
lret
mov
adc
mov
mov
stos
xor
ret
xlat
mov
in
data16
cmp
dec
leave
push
pop
into
shrb
ret
adcl
jb
subb
std
cmp
mov
adc
pop
mov
clc
dec
ja
into
test
mov
dec
jecxz
int
push
push
gs
inc
mov
mov
pop
outsl
jg
jb
into
fidivl
aaa
in
into
fs
sahf
xor
cwtl
dec
jns
sbb
jg
jne
int3
add
dec
popa
notb
pop
in
rcl
xchg
test
sbb
pusha
js
jns
push
and
stos
mov
adc
mov
cmc
inc
push
stc
jp
cmpsl
adc
push
inc
cmpsl
mov
sub
adc
daa
fnstenv
xchg
mov
add
mov
fildl
pushf
add
sti
xchg
sub
push
sub
xchg
or
loop
ror
fstps
pop
test
add
xlat
jmp
punpcklbw
inc
add
mov
into
mov
popa
add
pop
push
sub
divl
cmpsl
dec
xor
and
inc
loope
arpl
cmp
mov
rcrl
repz
cli
in
jg
loopne
out
xchg
or
add
add
cwtl
jbe
mov
cmova
pop
adc
cltd
or
jb
sti
stos
fwait
fs
jmp
xchg
add
hlt
pop
mov
sub
xor
cmc
popf
insl
mov
xchg
jge
int3
mov
jl
out
and
adc
push
out
jecxz
cld
movsb
ret
inc
std
xchg
mov
push
movhps
outsl
jnp
loop
and
xchg
jnp
scas
cwtl
add
iret
dec
pop
es
mov
and
push
dec
xor
faddl
ret
add
cmpl
jg
cmpsl
add
mov
inc
in
cmp
rclb
mov
mov
mov
cli
pop
mov
iret
or
stos
aaa
sub
aad
xchg
repnz
push
dec
jge
xchg
jo
xchg
cmc
aas
pop
jno
std
push
jno,pt
testl
stos
les
pop
mov
sub
or
cmp
aaa
and
leave
aad
adc
mov
dec
mov
jno
sub
es
mov
push
lods
rcrb
dec
lock
cmpsl
push
inc
movsl
xor
xchg
pop
imul
fistpl
sahf
out
xchg
stos
lea
mov
dec
mov
adc
sbb
mov
push
push
add
out
mov
inc
in
out
push
ja
mov
mov
adc
jae
dec
cmpl
add
jbe
lods
faddp
jp
mov
leave
sbb
and
xor
pop
insl
inc
insb
mov
cld
xor
popa
add
inc
aad
mov
cli
sbb
cmp
push
add
jno
lods
xchg
push
pop
ret
jbe
flds
sbb
xor
in
incl
push
std
nop
lret
mov
adc
cmp
sbb
negl
push
das
std
pop
mov
ja
int3
pop
pop
xchg
push
xor
outsl
add
mov
mov
cmc
orb
jle
mov
stos
inc
lods
sbb
dec
repnz
sbb
popa
insl
sahf
outsb
adc
cmp
xchg
push
lds
fs
lahf
in
lcall
ret
add
dec
out
ljmp
movsl
jl
enter
cmp
sbb
test
fsts
das
pop
sub
cmpsb
je
mov
mov
add
pusha
aam
inc
xor
push
mov
dec
mov
add
and
push
push
cmpsb
and
stos
ret
add
xchg
add
cli
mov
cmp
jbe
test
pusha
into
dec
xchg
inc
xor
outsl
or
addr16
inc
cmp
insl
or
outsb
out
outsb
mov
xchg
repnz
divb
repz
mov
xlat
mov
jle
adc
jecxz
or
push
scas
adc
jns
cmp
mov
lea
sbb
pop
adcb
rolw
in
dec
inc
xchg
test
imulb
xchg
in
cld
xchg
sub
jecxz
push
jbe
icebp
fstl
add
mov
push
jne
leave
ficoms
loope
filds
dec
jmp
stos
mov
inc
int3
lret
out
std
cmp
pop
xchg
inc
mov
test
lods
and
jo
cmpsb
inc
mov
cmp
xchg
fwait
jecxz
cmp
sub
or
out
jmp
mov
mov
iret
fildl
outsb
out
push
lock
cwtl
pop
imull
ja
cli
fwait
push
int
mov
addr16
cmp
push
jmp
stc
adc
push
test
sub
mov
iret
jecxz
popl
or
pop
repnz
cmc
popa
dec
clc
jno
lret
stc
ja
js
sub
data16
pop
movsl
repnz
fisttps
and
test
fwait
xchg
jl
out
xchg
out
and
aas
mov
mov
hlt
add
std
cmpsl
or
fists
mov
cltd
mov
aam
xor
test
ljmp
jb
repnz
cwtl
push
or
notb
dec
inc
xorb
outsl
sbb
leave
mov
push
into
addr16
icebp
adc
mov
popa
das
xchg
out
loop
push
and
stos
dec
pop
std
mov
or
stc
jmp
or
ljmp
mov
pusha
cmp
into
imul
jmp
add
or
dec
mov
repz
add
jp
mov
shlb
mov
push
sub
aad
jle
fdivs
in
in
iret
clc
inc
xchg
enter
cmpsb
lds
cwtl
repnz
push
mov
test
pop
nop
and
roll
jnp
push
xor
sbb
cmpsb
pop
pop
adc
pop
push
mov
fidivrs
cmc
sbb
cmp
jb
clc
xchg
fadds
fnstsw
mov
add
ret
sahf
add
xchg
add
in
mov
sbb
out
pop
jg
imul
stos
xor
daa
outsl
fcmovb
adc
out
mov
mov
addr16
pop
mov
sbb
loope
mov
push
pop
sahf
cmp
loopne
jne
cmp
test
incb
jae
cmp
or
jecxz
sub
out
test
cmp
sub
iret
ss
sub
inc
jmp
jmp
or
mov
mov
adc
pop
sub
sbb
mov
and
lods
push
out
int3
pop
out
ja
sahf
add
leave
cmp
movsb
imul
popf
negb
mov
std
jne
mov
gs
xchg
xchg
xor
xor
jg
xor
fs
xchg
cwtl
loop
sub
push
sub
sub
call
mov
dec
nop
or
sbb
lcall
leave
add
fcoml
mov
stos
sbb
pop
add
jbe
stc
sbb
cmpsb
sub
cltd
jmp
or
pop
add
xchg
xor
xchg
int3
jo
in
shl
hlt
dec
xor
addr16
fimuls
mov
xor
imul
lock
hlt
adc
out
add
repnz
pop
stos
or
push
mov
xor
fsubs
std
divl
pushf
xor
add
xor
jne
jb
out
cld
and
adc
aaa
jae
pop
ds
mov
das
imul
jecxz
loopne
mov
std
jge
jne
leave
jcxz
lcall
cld
sbb
lds
pop
adc
mov
outsb
mov
mov
jmp
cli
aas
test
in
inc
and
push
mov
lcall
mov
insb
repz
cwtl
xchg
xor
add
lods
dec
les
cmc
sub
cmpsl
jp
iret
xor
mov
pushf
setge
sub
in
jecxz
mov
and
mov
sbb
in
push
mov
mov
hlt
adc
mov
test
inc
mov
mov
gs
in
gs
jae
cmp
fildll
dec
iret
ja
xchg
jmp
push
or
orl
dec
xor
and
add
fistps
push
and
jg
daa
mov
add
mov
test
push
icebp
adc
rcl
testb
pop
imul
jg
inc
mov
mov
sti
test
into
inc
dec
daa
jno
push
scas
adc
pop
push
lds
add
mov
shl
in
shl
sbb
and
pusha
push
push
push
mov
stc
bound
sbb
pusha
lds
mov
lds
imul
insl
cmp
pop
test
jno
cld
or
andb
lds
inc
mov
jl
outsb
dec
jecxz
cmp
or
roll
in
fcomi
sub
mov
inc
jle
pop
out
insb
imul
or
lea
cmp
fmuls
or
pop
or
push
stos
icebp
data16
andb
shrb
cmp
call
inc
pop
xchg
xchg
pop
imul
out
lahf
lds
or
cmc
ja
jb
cmp
jp
sub
mov
mov
dec
outsl
inc
jne
sub
mov
push
popf
cmpsb
xor
arpl
sbb
ss
inc
in
aaa
pushf
push
sub
mov
popf
push
ss
cmpb
lods
xchg
out
out
pop
prefetch
or
fistpl
sbb
unpcklps
fnstenv
or
loope
pop
in
xor
fwait
outsb
adc
mov
pop
aad
test
lods
js
or
mov
arpl
cmpsl
xor
mov
sti
outsl
lcall
add
iret
ja
mov
lahf
mov
sbb
in
int
cmp
scas
xchg
daa
sbb
ljmp
add
sbb
push
xor
aad
clc
or
add
cmp
adc
ss
loopne
pop
cld
and
call
inc
repnz
mov
fmuls
add
jbe
add
inc
xchg
es
jle
sub
js
dec
test
mov
aaa
push
xlat
xor
in
loope
aaa
inc
and
insb
and
lret
mov
ds
cltd
xchg
shlb
mov
fs
sub
mov
xor
cwtl
outsb
add
mov
cmp
jle
xor
and
add
aam
arpl
adc
mov
sbb
dec
std
sti
jle
mov
jne
xchg
mov
pop
cs
lret
cmpsl
mov
jmp
xchg
mov
popf
and
inc
add
dec
xor
inc
inc
je
cmp
or
jg
test
dec
dec
xlat
call
divl
aad
inc
in
sub
out
push
insb
adc
jns
pop
imull
jge
in
inc
or
mov
test
insl
or
add
jne
mov
in
lock
mov
dec
out
push
int3
movsl
filds
sti
xchg
test
sbb
add
jnp
sbb
sub
stc
push
push
or
jecxz
cmp
jns
jmp
sub
add
xchg
jae
pop
push
lret
mov
adcl
adc
arpl
cltd
sbb
mov
jmp
rcrb
sub
aas
int3
cltd
scas
push
call
stos
xchg
mov
jge
and
jmp
fdivrs
jmp
jne
gs
fstpt
mov
pop
mov
jns
test
sub
movsb
dec
mov
out
add
inc
in
ret
dec
mov
jp
push
mov
inc
jmp
shlb
xorl
cmpsb
jns
jbe
and
pop
das
jle
add
pusha
mov
push
sbb
push
lea
ja
je
adc
xchg
mov
mov
insb
mov
cmp
arpl
test
mov
fldl
pop
dec
inc
inc
and
push
push
ret
dec
adc
sbb
pop
cld
jb
into
mov
or
xchg
ret
xor
adc
fdivs
popa
push
inc
xor
sbb
push
cwtl
xchg
cli
mov
jno
jnp
mov
push
adc
out
fisubrs
jg
xor
imul
mov
and
mov
inc
and
repz
mov
fs
sbb
lret
dec
pop
daa
xor
xor
jne
add
mov
and
push
mov
xchg
test
shrb
mov
shlb
mov
call
mov
cld
mov
add
icebp
xchg
add
sbb
out
idivl
mov
subl
add
xchg
add
movsb
ficomps
lock
dec
sub
xchg
sub
in
int
jmp
xchg
add
xchg
cwtl
xor
andl
or
jno
mov
idivb
leave
xchg
jae
add
testb
int
lret
lds
xor
test
add
mov
cmp
out
inc
or
stc
inc
repnz
pushl
stos
outsb
inc
ja
sub
outsb
push
test
pop
gs
jg
or
pop
les
lret
std
push
fsubp
push
ljmp
mov
sarb
in
stos
inc
out
fldcw
cmp
sbb
pop
mov
fs
ficomps
out
aam
pushw
dec
mov
loop
inc
jno
xor
xor
add
imul
adc
pushf
mov
aaa
mov
gs
xchg
pop
and
mov
lcall
jne
int
std
xchg
push
rcrb
jmp
into
dec
mov
jns
mov
adcb
pop
gs
and
jge
sub
psubusw
inc
jae
pop
inc
jge
das
fwait
and
mov
pop
and
xor
pop
jbe
cmp
movsl
add
movsb
repz
in
sub
shrd
sub
mov
pop
lcall
dec
rolb
jl
call
dec
stos
jbe
pop
aaa
add
popf
test
loope
hlt
mov
aas
je
sti
pop
insb
int
jbe
mov
mov
test
lods
and
mov
ss
repnz
in
cltd
add
mov
mov
inc
nop
mov
adc
cmp
cmpsl
loope
jge
sub
adc
data16
ja
xor
add
es
mov
lods
stos
or
push
inc
and
and
jmp
pop
fcmovbe
and
jmp
fs
stos
jle
out
repz
sbb
pushf
insl
cltd
in
jae
adc
inc
push
cmp
daa
lea
mov
push
jns
mov
pop
pushf
inc
ficompl
ror
push
cmp
xchg
iret
loopne
sbb
popf
sub
pop
pop
mov
scas
adc
scas
hlt
mov
pop
mov
shr
xor
imul
rorl
sbb
jp
xchg
mov
sti
cli
shrl
mov
sub
gs
fcompp
out
gs
negb
mov
add
adc
cmp
fstps
imul
sub
cs
call
cltd
xorl
movsl
mov
adc
outsl
gs
rorb
add
mov
mov
cmp
sub
adc
mov
pusha
inc
jnp
push
add
cmpb
rcrl
ds
pusha
or
test
sbb
cld
dec
pusha
dec
and
mov
push
cld
int
imul
cltd
fldl
sub
int
dec
mov
jbe
dec
mov
rcll
dec
or
int3
insl
xor
inc
int3
add
jne
loope
push
and
inc
out
hlt
mov
cs
repz
enter
rorb
mov
pop
push
and
into
inc
in
inc
jmp
push
scas
fcomi
add
in
ret
lock
lds
idivb
push
inc
push
adc
jb
movsb
ret
inc
add
test
pop
or
sbb
push
jbe
popa
cmpsl
je
or
sub
vmread
aam
and
lods
or
call
mov
jnp
xchg
jbe
push
push
mov
xor
mov
jmp
jne
nop
pop
jae
push
decb
inc
push
inc
sub
xchg
add
mov
insl
mov
fidivrl
sahf
es
lds
outsl
pop
push
add
enter
jle
add
jmp
cwtl
test
sahf
aaa
rcll
push
xor
inc
out
aam
dec
mov
push
or
std
pop
stc
sbb
and
test
sbb
fwait
cs
add
mov
mov
dec
push
jns
jle
loopne
dec
push
addr16
mov
das
xlat
pop
lcall
sub
pop
push
mov
dec
cmc
popa
out
push
xchg
fucomp
cmp
test
xor
jmp
psraw
and
jge
shlb
dec
aaa
fidivl
into
push
insl
mov
xor
lea
add
push
adc
sbb
sub
aam
xchg
jle
fs
xorl
pop
mov
int
pop
cs
roll
int
xorb
stc
aam
push
sub
mov
fcmovbe
addl
in
mov
jns
xchg
rcl
jbe
push
jge
jmp
jno
jo
add
imul
insl
dec
in
stc
stc
push
jno
add
fsubs
jmp
adc
sub
sahf
lcall
add
push
xor
mov
and
sub
or
and
pop
mov
test
in
push
pop
and
loop
cwtl
sar
pop
repz
mov
pop
push
dec
dec
xor
sahf
adcb
movsl
arpl
sbb
jns
xor
jne
nop
sarl
cs
jbe
push
push
repnz
cld
imul
inc
xchg
and
mov
ficoms
xorb
mov
or
xchg
jmp
out
inc
movaps
lods
pop
sub
dec
cmp
cmpsl
xor
pop
and
dec
mov
add
mov
popf
repz
aaa
mov
ds
and
les
jo
mov
addl
cmp
es
and
popa
push
sarb
repnz
lods
sub
mov
cmp
sub
add
mov
inc
mov
fsubs
dec
xchg
sub
mov
xchg
bsf
loop
xor
and
push
mov
out
xor
lds
mov
sahf
imul
inc
clc
outsl
add
bound
pop
je
out
push
mov
in
adc
popf
push
pushf
leave
adc
mov
mov
js
push
xchg
jmp
inc
mulb
mov
int
pop
mov
pop
mov
push
push
adc
dec
xor
xor
test
mov
xor
sub
sub
movsb
add
fstp
mov
out
jle
or
mov
pop
lods
xor
sbb
pop
testb
js
arpl
add
std
mov
mov
mov
ja
popa
addb
jae
out
out
and
add
das
ret
orl
dec
dec
cmpsl
mov
mov
sub
ret
lret
inc
and
rcll
mov
inc
cwtl
push
xchg
sub
inc
jp
mov
sub
mov
pop
cmp
sbb
notb
lcall
push
data16
sbb
scas
add
mov
testl
dec
sub
push
stos
mov
mov
shl
lea
mov
jecxz
pop
jl
mov
pop
out
shlb
pop
das
dec
loop
loopne
add
stc
insl
stos
pop
pushf
jnp
jae
ja
pop
mov
sbb
mov
ljmp
push
fs
jle
repz
push
and
xor
pop
iret
loop
lods
add
xchg
add
jb
lods
jae
push
or
sbb
fimull
push
add
gs
mov
std
cltd
insl
inc
arpl
inc
dec
jecxz
mov
mov
xchg
inc
addr16
push
xor
adc
sbb
add
insb
mov
ljmp
pop
xor
subl
cmp
cli
aam
jb
popf
or
mov
cmp
dec
clc
imul
je
outsb
sub
or
mov
push
sub
rcll
sarl
les
ljmp
mov
imul
test
data16
js
xchg
sub
pop
sbb
xlat
pop
outsl
jns
inc
mov
mov
in
mov
dec
lcall
shl
cmp
test
test
sub
mov
test
scas
imul
in
sahf
or
sbb
stc
mov
cmpsl
dec
pop
inc
jg
test
cmp
jns
lods
stos
aas
jmp
pop
aam
in
in
xchg
inc
mov
pop
aaa
insl
push
fdivrs
inc
ret
popa
adc
mov
pop
sti
gs
mov
std
dec
stc
lock
decl
fsubr
mov
add
sub
ffreep
iret
push
push
or
cltd
jle
mov
inc
or
inc
icebp
fldcw
add
inc
jmp
mov
and
sarl
imul
out
pop
loopne
rorb
fwait
mov
push
jl
cmc
sbb
fisubs
push
jns
mov
loop
jne
jnp
xor
xchg
cwtl
out
push
pop
fs
cmpl
mov
add
movsl
stc
rolb
xchg
in
jmp
push
repnz
mov
pop
pop
push
daa
xchg
pushf
jns
add
cltd
ds
sbb
ds
cmpsl
aam
insl
mov
cmpsb
das
gs
das
and
call
sub
inc
std
test
arpl
adc
das
push
xor
dec
add
mov
push
popa
sub
mov
cmp
jle
add
push
scas
aaa
sub
aaa
sub
ds
leave
lret
ds
insl
outsb
iret
inc
shll
push
push
and
push
jecxz
jg
popa
hlt
mov
push
mov
add
lock
mov
ror
scas
or
aam
out
movq
adc
fstpt
or
in
cmc
jl
adc
cmp
aam
pop
mov
movsb
ficomps
testl
fsubrs
mov
xchg
cwtl
push
sbb
bswap
cmp
nop
push
fwait
movsb
fnsave
aaa
fs
dec
mov
inc
dec
hlt
cmc
in
push
mov
adc
jmp
mov
sbb
jns
ds
dec
fcmovnb
and
fldcw
fidivrl
xor
xorb
inc
mov
sahf
lds
cld
outsl
jge
mov
iret
rcrl
sbb
cmc
sub
pop
mov
xchg
xor
stc
popa
push
jmp
pop
neg
bound
fsubs
add
fldenv
push
ss
outsl
xor
shr
mov
push
inc
xor
fs
mov
push
add
into
xchg
push
lods
test
and
sub
and
sbb
adc
dec
mov
ss
sub
jmp
jne
lret
sub
lret
cmc
call
je
xor
ret
outsb
mov
jae
inc
mov
push
mov
ret
mov
nop
sbb
mov
out
cmp
mov
push
enter
lods
rolb
dec
mov
push
cmp
inc
je
mov
mov
sarl
out
jge
movsb
clc
push
aam
push
cld
in
cmp
test
pop
call
or
mov
jle
out
jae
rcrb
fstps
jnp
xchg
mov
mov
mov
sbb
mov
push
fidivs
push
mov
fwait
mov
std
push
sbb
shrb
xor
test
repz
add
add
jno
adc
mov
popa
andl
inc
xchg
ret
sti
out
cld
mov
stos
adc
and
mov
mov
test
inc
inc
and
mov
leave
fmull
add
dec
mov
pushw
and
jno
and
cmpsb
dec
popf
negb
push
cltd
inc
hlt
inc
adc
fists
dec
test
mov
sub
cmp
inc
push
pusha
jbe
out
fnstsw
adc
jmp
xchg
add
jbe
mov
sbb
jnp
mov
fistpll
push
jbe
jle
rcrb
jne
inc
pop
es
insl
ss
sbb
lds
pop
jg
lcall
mov
and
outsl
mov
fcmove
and
decb
sbb
lcall
lcall
mov
in
push
mov
adc
xor
mov
inc
cmpsl
fistps
sub
mov
add
icebp
lock
add
cmp
add
insl
and
or
pop
xchg
pop
cmc
sbb
adc
add
add
and
push
adc
pop
test
test
dec
fsub
dec
mov
or
je
movsl
adc
bound
divl
or
push
and
mov
int
ja
mov
cs
ret
in
test
dec
cmp
mov
fsubrl
mov
adc
loop
cmp
fs
shrb
std
mov
push
inc
stos
sub
or
cmc
iret
addr16
insb
loopne
ja
int3
cld
dec
mov
movsl
sub
cmp
or
xchg
sbb
movsb
xchg
repz
push
test
mov
mov
fistps
push
push
hlt
pop
xor
inc
push
mov
adc
fdiv
mov
hlt
inc
jmp
lds
loop,pt
dec
jp
fs
fwait
dec
adcb
adc
fwait
dec
shrb
push
popf
clc
je
pop
es
clc
shlb
xchg
in
movsb
cld
lret
ret
cmp
addr16
enter
mov
mov
inc
dec
sbb
xchg
xchg
xchg
enter
inc
or
mov
cld
xchg
xor
cld
hlt
dec
jne
jb
ret
push
mov
ret
push
mov
jecxz
pop
xchg
out
daa
mov
arpl
lret
loop
pop
cltd
adc
cmp
in
out
pop
popa
xor
and
dec
out
ljmp
ret
shl
add
add
xchg
pop
cmp
sarb
addl
add
mov
or
movsb
addl
in
cmc
in
loope
rcl
mov
pop
dec
in
add
mov
xchg
inc
inc
add
adcb
pop
add
or
pop
dec
outsb
add
pop
lcall
inc
adc
repz
fstpl
add
xchg
add
repnz
cltd
outsb
xor
xchg
sub
int
add
std
test
and
sbb
arpl
nop
inc
popa
lret
adc
or
filds
out
rcrl
test
enter
jb
cmp
cmp
lods
ror
repnz
cmp
push
xchg
dec
cmc
hlt
addb
outsb
rcll
je
pop
sub
push
fadds
adc
bound
mov
sbb
xor
in
inc
mov
pop
add
popa
jp
mov
loopnew
cmc
jmp
sub
sbb
mov
rorl
adc
lret
xlat
dec
mov
lcall
scas
loopne
mov
call
sub
movsl
add
push
xchg
loop
arpl
in
mov
pop
add
xchg
mov
xchg
test
adc
dec
and
data16
pop
inc
test
push
call
sbb
popa
sbb
push
sarl
mov
pop
jecxz
xchg
movsb
rolb
shr
pushf
rcll
xchg
std
jmp
cmp
mov
xchg
gs
stos
add
mov
adc
jle
pop
fucomi
mov
inc
xchg
jle
cs
ret
mov
hlt
stc
xchg
lods
and
out
xchg
scas
cld
jbe
fimuls
repnz
ds
imul
jmp
clc
jae
jo
jnp
mov
push
inc
test
pusha
add
cmc
lcall
test
sti
fmull
stos
aaa
enter
imul
cmp
pop
push
dec
loope
inc
rorl
repnz
out
loop
xor
mov
fiadds
cmp
add
enter
xor
stos
shlb
pop
aad
scas
push
push
or
dec
and
ret
hlt
test
lret
neg
das
cmpsb
mov
sub
mov
add
in
je
mov
aas
jnp
or
outsb
jmp
push
mov
inc
jno
loope
push
mov
add
movsb
xor
jns,pt
inc
in
cli
and
xchg
inc
cwtl
mov
xor
and
scas
sub
or
int3
adc
adc
js
repz
fcoml
xchg
fiaddl
adc
aam
idivl
mov
pop
push
cmovne
addl
in
add
outsl
daa
insl
push
push
stos
adc
push
jb
mov
add
cmpsb
fists
and
mov
adc
push
sbbl
jae
aas
cmp
lret
mov
sbb
mov
test
sarb
dec
jl
test
in
shrl
xor
in
fxch
sbb
clc
sub
pop
pop
test
lods
sbb
ds
mov
xchg
shll
or
dec
insl
jmp
mov
movsb
rorb
add
jno
nop
in
ret
pop
js
mov
test
clc
cmp
or
adc
push
aas
mov
dec
ficoms
test
adc
sub
mov
mov
dec
dec
or
insl
pop
cmp
dec
sar
add
sarb
xchg
mov
jl
je
mov
lret
push
jno
sahf
popf
pop
sbb
add
roll
cmpsb
xchg
mov
or
js
loop
inc
mov
mov
lock
addb
ret
int3
scas
lret
mov
mov
cwtl
push
in
cmp
orb
nop
enter
xor
fs
aas
mov
hlt
cld
sahf
mov
in
or
and
sbb
sbb
enter
lcall
dec
cmp
and
cmp
add
or
mov
mov
dec
lahf
inc
mov
insb
mov
icebp
pop
mov
pop
inc
mov
mov
loop
pop
cli
cmp
sbb
jo
jp
add
mov
mov
cld
adc
pop
fmull
add
sub
jns
mov
ret
imul
lret
inc
sub
sbb
mov
xor
sub
sbbb
int
gs
mov
rolb
mov
jne,pt
mov
mov
cmpsb
out
ljmp
pop
lds
popf
adc
aam
testl
mov
arpl
hlt
call
int3
lret
cmp
dec
icebp
cmp
je
idivl
sub
sarl
or
jbe
lods
out
mov
daa
js
gs
mov
and
bnd
test
mov
or
pushw
pop
lret
or
enter
jle
mov
sub
incb
inc
lea
and
mov
out
add
xor
insl
mov
add
outsl
rcll
fimull
dec
add
lret
lret
or
call
mov
enter
fnstcw
add
sahf
cmpsb
inc
mov
adc
mov
les
pop
loope
inc
mov
aas
sub
dec
cmp
or
int3
shlb
outsl
sbb
aam
or
ret
fmull
inc
pop
or
mov
imul
sub
inc
das
sbb
out
cmpb
xor
inc
dec
sub
inc
jbe
push
and
mov
loopne
aad
cmc
adc
jle
sub
in
xchg
xor
mov
inc
iret
mov
cmc
mov
notl
cmpsb
mov
jl
lret
mov
pop
mov
adc
leave
fwait
lcall
dec
rorl
sub
out
sub
pop
js
popf
mov
imul
pop
fwait
inc
jp
insl
push
cmp
loope
xlat
in
cmp
sbb
mov
out
mov
dec
ljmp
sahf
bound
mov
sbb
test
pushl
or
mov
in
mov
mov
mov
out
les
pop
jle
mov
std
iret
jg
out
testl
push
jl
mov
or
cltd
repz
jbe
xchg
cltd
jne
sbb
pop
xor
pop
push
pop
cltd
stos
push
daa
jge
imul
dec
sub
stc
mov
cmp
adc
cld
inc
cmp
outsb
mov
and
test
neg
hlt
imul
and
sbb
lret
adcb
lods
loopne
sbb
mov
jl
ret
imul
and
dec
push
imul
cmp
xor
push
or
pop
push
insb
mov
sub
dec
xor
loop
leave
mov
jns
sti
sbb
mov
ljmp
mov
adc
mov
mov
movsl
xchg
or
ret
repnz
outsl
or
push
dec
jp
ds
pop
pusha
sub
pop
ja
lods
adc
and
xchg
xor
repz
in
lahf
int
push
enter
jnp
sahf
and
push
lods
mov
mov
ja
mov
cmp
mov
pop
clc
mov
hlt
mov
add
cmp
lock
adc
loopne
push
mov
pushf
adc
and
sbb
loopne
outsl
cmp
cmpsl
push
cs
mov
mov
outsl
clc
shll
jb
popf
or
jle
scas
inc
xchg
add
inc
addr16
adc
and
out
dec
imul
outsl
repz
sti
imul
mov
mov
mov
loope
xor
pop
push
pop
jno
jb
pusha
pop
xchg
pop
jecxz
popa
xor
adc
xor
iret
and
inc
push
add
loop
out
loope
test
sbb
out
mov
cmpsl
lret
das
out
iret
popa
inc
mov
iret
and
out
pop
push
push
dec
push
mov
data16
and
xchg
fisubrl
push
and
sub
push
popf
sbb
fstp
dec
loopne
dec
pop
inc
add
fucomip
fisttpll
pop
jnp
dec
pop
leave
mov
xlat
push
dec
xchg
call
inc
imul
jo
xor
ljmp
pusha
xor
popa
out
sahf
fsubrs
sub
inc
cmp
call
addr16
mov
pop
cmpsl
adc
pop
adc
sahf
mov
push
data16
or
lds
cwtl
pop
test
mov
inc
push
sti
stc
lahf
test
cs
je
popa
xchg
or
ficoms
sti
inc
adc
addr16
push
push
aam
xor
sahf
es
lods
sbb
inc
lret
dec
ret
aad
fsts
arpl
pop
fistpl
loopne
cmp
adc
aaa
sbb
mov
pop
push
cltd
rcll
mov
int
pushf
std
xor
jo
movsb
cmp
lret
pop
pop
movb
xor
and
xor
pusha
jb
push
js
fiaddl
outsb
fisubrs
mov
mov
cmpsb
or
inc
xor
loopne
pop
les
adc
movsl
leave
xchg
mov
es
popf
bound
clc
into
dec
in
loop
lods
leave
pusha
fcoms
outsb
cmpsb
iret
xor
pop
mov
lret
ret
inc
xor
loop
into
jecxz
les
cmpsl
testb
add
into
push
xor
sbb
ds
outsb
sbb
mov
fucomi
jnp
add
xchg
add
and
aas
xor
movsb
dec
lock
mov
jne
xor
or
jo
pop
lds
inc
stc
loopne
xchg
loopne
inc
jg
or
or
rorl
lea
adc
or
std
iret
rcrl
adc
xchg
adc
jecxz
cli
mov
or
inc
cmp
insl
push
fdivrp
pop
push
mov
loope
adc
add
cmpsl
push
pushf
push
cmpb
sbb
add
lock
int
lahf
dec
and
cmp
xlat
mov
rcrb
and
add
dec
loope
rolb
int3
or
cmp
xchg
sub
cmp
in
jmp
cld
cli
and
shll
std
mov
push
cs
loopne
adc
jl,pt
xchg
sbb
jb
test
lahf
dec
xchg
mov
aas
into
stos
into
test
sub
ljmp
js
inc
lds
jbe
scas
push
jae
push
jb
sub
sub
add
and
cmp
mov
push
insl
dec
hlt
inc
je
jle
lahf
jo
cwtl
enter
push
or
inc
jns
push
pop
mov
push
jae
cli
loope
dec
dec
je
popa
add
xor
xor
in
rorb
sbb
cmp
or
inc
std
xor
xor
pop
push
push
push
mov
movl
adc
mov
xor
popf
repnz
cld
sub
es
or
ja
subl
and
xchg
mov
mov
and
jns
lret
mov
mov
orb
mov
movsb
inc
lcall
out
add
int
xor
add
lahf
pop
mov
mov
cmp
or
pop
mov
adc
clc
scas
test
js
pop
inc
pop
cli
pushf
mov
xchg
fstpt
fcomi
loopne
ficoml
inc
icebp
in
mov
call
into
xchg
popa
rorl
mov
out
mov
mov
mov
pop
jnp
lea
sbb
cs
and
aas
jmp
dec
lahf
jne
sub
mov
sbb
andb
xor
and
dec
mov
pop
ret
ljmp
fidivs
out
lods
pop
lods
push
xlat
and
imul
dec
daa
jns
add
mov
mov
xor
mov
xchg
add
add
xchg
add
or
mov
std
es
mov
jns
jb
divb
idiv
jne
loopne
xchg
stos
mov
xor
sti
mov
mov
or
xchg
mov
cmp
jg
addr16
mov
or
or
jb
jmp
sub
ss
nop
test
inc
sahf
sub
das
mov
mov
jno
popf
rcr
pop
stos
and
sbb
mov
test
shrb
mov
outsb
inc
mov
lahf
xchg
cltd
mov
lods
cli
pcmpgtd
loope
mov
dec
ret
push
sbb
xchg
pop
cli
cltd
and
leave
xchg
pop
dec
into
mov
fsts
cmpsb
jb
adc
fsubs
sub
mov
jae
push
aam
dec
pop
arpl
jp
cmp
sub
in
dec
and
or
dec
test
pop
shrb
imull
xchg
or
lret
lods
push
xchg
dec
jns
int
xchg
mov
and
sti
mov
push
mov
xchg
jl
sub
sahf
sarl
xchg
daa
mov
pop
hlt
xor
iret
out
mov
push
dec
jo
in
add
sub
pop
imul
sub
lds
cld
xabort
inc
int
xchg
les
and
xor
push
pop
add
jnp
pop
aad
push
mov
aaa
popa
in
cli
sub
adc
aad
and
pop
loopne
js
push
nop
jns
adc
in
jbe
xor
loope
sbb
adc
mov
sar
cltd
in
push
sti
faddl
mov
icebp
rcrl
xor
and
int3
push
inc
add
pop
jmp
cmp
das
insb
cmp
outsb
push
xor
dec
mov
mov
inc
mov
pushf
push
sbb
or
out
std
lods
das
or
sahf
push
xchg
push
mov
jbe
pop
jae
fidivs
inc
iret
mov
pop
into
pop
lods
mov
je
incl
mov
pop
xor
inc
pop
and
lcall
cs
mov
popf
xor
xchg
mov
lea
imul
jae
pop
mov
jle
daa
into
inc
aas
mov
dec
inc
mov
in
stos
clc
adc
les
add
iret
xchg
pop
iret
push
fdivs
mov
mov
adc
xchg
pop
push
jl
int
aad
sahf
in
inc
aam
mov
jb
xlat
mov
pop
popf
mov
jg
add
mov
notb
push
cmp
and
jmp
xchg
inc
xor
mov
rorb
in
fisubrl
in
call
movsl
movsl
test
andl
fnstcw
push
adc
imul
lcall
cli
les
xchg
arpl
xchg
adc
mov
push
cltd
loopne
push
jae
incl
int
xchg
shlb
enter
inc
dec
leave
sbb
mov
gs
push
inc
iret
in
cwtl
cmpsl
adc
movsl
xor
sub
insl
xchg
jmp
repz
es
daa
test
pop
sbb
out
mov
xor
mov
in
add
push
dec
add
mov
xchg
dec
scas
in
lock
subl
mov
out
fdivrl
ljmp
inc
mov
repnz
ret
test
test
dec
adc
fld
rol
or
bound
test
sub
stos
out
hlt
cmpsl
xor
andl
ret
dec
and
push
gs
mov
mov
es
leave
xchg
sbb
popf
pop
or
mov
jmp
fwait
dec
sub
sar
pop
xorb
hlt
push
inc
add
mov
js
add
lcall
pushf
mov
sub
and
cltd
push
inc
and
sbb
mov
test
mov
sub
lods
inc
popf
mov
pop
leave
in
lahf
popa
sbb
aas
jg
jae
sbb
in
jmp
repnz
insb
mov
jl
pusha
test
cld
xlat
and
out
jmp
mov
shll
jbe
sbb
jmp
add
bswap
and
xor
aas
pop
and
mov
movsb
jg,pn
test
daa
out
scas
lahf
leave
dec
ja
movsl
ljmp
aas
fnstcw
addb
and
fdivrl
dec
or
jne
les
int3
rclb
aaa
cltd
jle
adc
pop
xchg
ljmp
pusha
sub
stos
jo
dec
cli
fldcw
loopne
sub
add
xchg
add
out
je
inc
icebp
inc
scas
int
push
mov
and
sbb
or
pusha
inc
shlb
jae
cltd
loope
ret
xlat
mov
push
cmp
popa
lret
es
jbe
addr16
adc
cmp
movsl
mov
cwtl
scas
and
fnstenv
or
add
lods
ljmp
shlb
stc
xor
inc
mov
mov
adc
dec
ljmp
fdivr
xchg
cmp
in
shr
mov
push
int
outsb
sahf
insb
out
jne
fdivp
lea
rclb
scas
inc
jge
int
inc
out
xchg
insl
push
sbb
test
pusha
in
cmp
push
jecxz
adc
mov
aaa
jmp
and
and
sbb
stos
pop
lds
dec
and
aam
flds
push
xlat
fwait
subl
divb
inc
pop
rcl
jle
mov
push
jbe
testl
xchg
xorl
sarb
ss
fmuls
cmpsl
or
outsl
das
cmp
jg
xchg
imul
inc
insl
push
ljmp
rorb
sarb
add
mov
mov
adc
test
mov
leave
add
ret
orw
pop
cmp
xor
pop
xor
cmp
aam
mov
add
mov
mov
pusha
pop
add
jae
stos
mov
movsb
outsl
mov
cli
and
xor
test
sarl
xor
push
sbb
sbb
inc
xchg
lods
sbb
dec
imul
pop
popa
call
aaa
xor
adc
addb
out
int
mov
ljmp
mov
pop
cmp
sahf
stc
jnp
push
pop
pop
loopne
fwait
mov
fwait
add
mov
lea
jg
out
xor
push
sub
cwtl
scas
xchg
inc
inc
sub
stc
fnsetpm(287
lock
add
testw
iret
pushl
cmp
popf
shlb
test
sbb
sub
jle
cmp
jl
nop
dec
ja
mov
xchg
stc
inc
cmpl
sub
movsl
mov
dec
cltd
mov
lea
mov
outsb
mov
lds
add
ja
dec
xchg
pop
xchg
js
mov
xchg
leave
add
xchg
add
dec
add
cld
sbb
mov
xor
sub
addr16
scas
push
dec
iret
movsl
xchg
cmp
ds
cli
test
iret
in
in
inc
orb
and
mov
sti
or
adcl
jno
add
pop
shrb
cs
loopne
push
and
daa
in
out
xor
cs
mov
or
lock
jb
inc
jl
dec
shl
adc
inc
sarl
das
xchg
push
jae
or
jnp
or
dec
decb
fxch
sub
xor
daa
push
sbb
call
add
scas
xlat
push
pusha
scas
pop
or
or
pop
aas
pop
push
fistpl
add
sarl
xchg
scas
push
jae
stos
dec
sub
dec
push
sub
popf
xchg
fisttpl
data16
sub
inc
pop
push
ffreep
nop
stos
or
jne
inc
and
fstl
arpl
sub
scas
push
test
mov
mov
push
mov
loopne
mov
or
icebp
testb
ffree
add
add
mov
mov
pop
push
and
adc
dec
scas
cmpl
xchg
fildl
clc
mov
jbe
ds
hlt
iret
mov
sahf
pop
lret
xchg
mov
sti
js
clc
sti
outsb
jb
mov
jp
in
cmpsl
or
shlb
dec
mov
inc
cmc
push
xchg
push
repnz
pop
push
test
mov
rorb
dec
sbb
or
mov
push
fs
fcmove
jecxz
jbe
in
shrl
stos
mov
pop
mov
insb
inc
mov
aas
and
pop
xchg
repz
pop
gs
pop
insl
or
clc
mov
cmpsb
adc
js
nop
adc
and
lods
in
int3
add
pop
cmp
xor
out
pop
daa
cld
je
xchg
push
xchg
mov
int3
lret
mov
into
jmp
test
jae
out
shrl
push
pop
out
mov
push
mov
lds
add
cltd
mov
push
dec
clc
lret
adc
mov
arpl
mov
push
xchg
pop
xlat
mov
repz
aas
rol
lcall
mov
cld
decl
in
jo
leave
push
mov
push
int3
add
xchg
add
daa
addr16
lds
lea
arpl
inc
jmp
mov
clc
push
xchg
inc
lods
jmp
cwtl
pusha
lods
loopne
mov
shll
mov
adc
fcmovnb
add
mov
lret
jbe
sahf
mov
fistpll
push
push
out
adc
push
dec
dec
arpl
ret
and
ficoms
stos
notb
or
cmp
and
repz
xor
jmp
stc
push
repnz
mov
jo
lock
push
setge
xchg
shll
adc
shlb
sarl
mov
leave
cltd
jae
inc
mov
mov
push
xor
rclb
int
mov
scas
dec
lock
bound
sbb
repnz
popf
sub
inc
lods
inc
gs
outsb
pusha
mov
fwait
aaa
ds
sbb
mov
pop
or
decb
in
mov
orb
sahf
sub
aam
and
xchg
rcrl
roll
and
fstl
adc
adc
sub
sahf
jo
or
cmc
adc
mov
fisttpl
stos
jne
lret
adc
cmp
ss
mov
jmp
fbstp
adc
aam
jo
sarb
mov
or
jbe
jmp
xlat
and
lea
push
mov
mov
les
push
push
test
rcr
lea
mov
push
mov
fcoml
movsl
push
dec
outsl
gs
in
pop
add
and
mov
or
xchg
xor
enter
mov
or
out
sub
fwait
das
or
xor
jmp
mov
cmp
aas
dec
shrl
xchg
dec
lret
mov
fdivl
scas
test
imul
sahf
rolb
adc
push
movsl
cwtl
sub
sbb
out
mov
pop
lods
sahf
lcall
xor
push
jp
pushl
cmp
fwait
lahf
mov
leave
mov
xchg
aam
test
out
mov
inc
lcall
push
movsb
cmp
lret
mov
push
sarl
cltd
shlb
cld
cmpsl
xor
popa
xchg
adc
mov
sbbb
stc
dec
test
outsl
jo
xchg
dec
insb
and
push
test
and
rorl
clc
fldt
out
test
pop
movsl
into
add
xchg
add
fs
loop
cmp
inc
xchg
out
pop
xor
mov
jg
jae
aad
dec
fimuls
movsb
jmp
dec
movb
dec
cmp
push
cs
lret
jmp
mov
inc
in
cmp
es
test
push
mov
imul
mov
adc
add
pop
shl
jmp
xchg
and
lea
scas
arpl
xor
divps
pop
sub
popf
push
rclb
add
adc
jbe
jle
bswap
push
sub
lea
rorl
lock
bound
test
sub
dec
mov
test
dec
test
lahf
ds
sub
xchg
mov
mov
dec
push
mov
mov
stc
jle
push
push
hlt
rolb
xor
setno
mov
dec
dec
mov
jb
mov
enter
cwtl
mov
add
adc
cmc
cld
rcr
call
jae
xchg
inc
jae
sbb
sbb
dec
iret
xor
icebp
inc
fcmovnbe
ficoms
mov
pop
mov
decb
repnz
pop
xorl
xor
in
rcr
xchg
ja
xor
test
ja
mov
xor
cltd
rolb
fidivs
cmp
rcrb
sarl
xlat
cmp
in
dec
push
or
jo
sbbb
xor
dec
jno
dec
out
rolb
in
pushf
movsl
jecxz
inc
ljmp
sahf
mov
and
int3
stos
fwait
mov
pop
stc
jmp
add
cmpsl
jnp
xor
dec
sbb
lock
xchg
scas
mov
mov
push
cmp
jnp
pop
jp
mov
push
sub
pushf
sqrtps
nop
or
cltd
and
mov
push
mov
jmp
inc
xchg
scas
outsl
sarl
mov
fdivl
sub
jge
adc
mov
sub
cmp
or
cmp
dec
ss
cmp
xor
mov
sbb
xchg
lcall
push
fs
jmp
lcall
jnp
pop
pop
mov
mov
add
xchg
add
or
test
jbe
stos
gs
out
sbb
inc
xchg
lock
dec
not
cltd
cs
cmp
loop
dec
adc
test
mull
mov
push
push
xchg
cli
hlt
cmp
rcll
out
ljmp
aaa
or
data16
fwait
cmpl
lock
stos
jecxz
sub
add
sbbl
push
or
push
pop
jb
mov
pop
mov
in
fcmovnbe
inc
fsubrl
pushf
jmp
xchg
cmp
sbb
push
hlt
inc
sub
lock
in
in
sub
mov
inc
mov
lods
sbb
fcomp
and
das
sahf
jge
fcmovb
and
lock
dec
mov
jb
imulb
mov
pop
int3
scas
data16
mov
mov
pop
shll
les
dec
jge
test
fmulp
mov
mov
xlat
stos
sbb
push
sahf
int
fstps
shlb
bound
test
ss
mov
dec
imul
rcr
mov
xlat
cmp
adc
or
jns
adc
ljmp
push
add
push
popa
sbb
test
notl
test
outsb
xchg
mov
dec
sbb
fsubl
xchg
push
into
jmp
dec
jno
inc
sbb
jg
sub
popa
cmp
shrd
jb
cmpsb
lret
adc
cmp
ss
mov
fidivrs
int
xor
stos
mov
les
pop
jne
xchg
shlb
mov
jns
insl
mov
sti
jl
mov
cmc
dec
add
call
aad
push
in
aas
and
movsl
fstpt
arpl
addb
sub
cmp
inc
dec
addr16
pushf
cmpsb
mov
mov
adc
lods
add
dec
add
das
sbb
add
xor
test
test
movsl
and
sub
cmp
jbe
daa
sbb
mov
sub
pop
sbb
dec
pop
push
add
jge
insl
popa
xchg
rclb
insl
cmpsb
xor
xor
dec
lahf
push
andb
nop
cmpl
push
xlat
rclb
and
rolb
dec
idivl
fldl
ror
mov
add
xchg
add
pop
inc
mov
rorb
cwtl
dec
arpl
pusha
je
mov
divl
div
int
out
push
jbe
cmp
lea
popa
add
daa
jmp
sarb
js
movsl
enter
pop
mov
push
repnz
iret
ret
jno
push
aas
rcr
pop
imul
or
out
cmpsb
pop
outsb
inc
inc
pushf
out
icebp
int3
pop
int3
daa
insl
adcb
inc
mulb
xchg
hlt
std
sbb
dec
pop
dec
cmpsl
jp
mov
jmp
push
xchg
inc
sub
jae
push
jg
jno
test
mov
lret
sbb
dec
outsl
and
test
cld
xchg
push
inc
xchg
or
test
mov
loopne
mov
fisubrl
cmp
adc
dec
lds
add
or
or
sbb
mov
pop
cltd
cmp
jge
cs
rclb
sub
clc
std
sbb
in
int3
inc
jae
gs
ds
cmc
out
loope
stos
dec
jle
mov
ja
in
sub
mov
xchg
hlt
insl
fmull
or
sub
sbb
pop
cmp
sub
sub
adc
outsb
std
adc
out
xor
mov
mov
sarb
pop
cmp
mulb
inc
fisubl
inc
sub
push
jb
movsl
pop
lret
insb
pop
les
jecxz
out
mov
enter
pop
mov
cmpsl
or
dec
dec
push
pop
mov
pop
cltd
insb
loope
icebp
jnp
outsl
or
test
rcrl
stos
in
cltd
mov
inc
gs
sbb
divb
adc
icebp
sbb
dec
out
sbb
dec
bound
fisttpll
mov
pop
cld
push
lds
dec
dec
gs
rcrl
stos
push
xchg
iret
rep
iret
cli
lret
jne
std
mov
sub
and
mov
lds
jbe
jmp
dec
xor
inc
pop
ljmp
xchg
inc
and
mull
cmp
cltd
js
adc
es
repz
repnz
push
jns
pop
jno
shrl
sub
jno
add
jmp
pop
ss
iret
pop
pop
fs
insl
movsb
dec
xchg
ret
mov
and
sub
movsb
hlt
popf
popa
stos
mov
mov
cmp
and
das
pushf
arpl
add
xchg
add
imul
daa
mov
push
test
and
in
xchg
int3
mov
lahf
roll
mov
pop
ja
cmp
pusha
add
mov
movsl
sahf
sti
sbb
xor
lcall
mov
in
push
loope
icebp
cmp
add
gs
mov
clc
std
loope
out
xor
aaa
lcall
inc
and
shll
das
in
cmp
imul
mov
out
cmpsl
pop
xchg
cmp
jl
pop
add
dec
lahf
mov
pop
lret
lss
dec
ret
mov
sbb
bound
jno
lods
mov
lcall
jae
fs
pop
fstpt
mov
cmpsb
and
fwait
xchg
and
sti
push
int
mov
and
adc
das
test
sub
mov
cltd
mov
shrl
mov
cmpsb
sbb
ds
push
lret
mov
push
cmp
cmpsl
scas
lcall
xchg
cwtl
lods
add
sbb
shrb
push
xchg
mov
pop
jg
xchg
jae
imul
sarb
jecxz
ret
mov
fcmove
das
test
into
subb
fwait
adc
mov
cmc
cwtl
jae
pop
sub
fs
and
negl
mov
mov
pop
inc
adc
sub
lret
sbb
test
roll
mov
adc
sub
mov
jnp
imul
jecxz
jecxz
fwait
and
mov
idivl
cwtl
add
add
jp
push
dec
out
xlat
out
add
pusha
add
pop
loopne,pn
mov
nop
dec
push
or
popa
sbb
cmp
loopne
or
addr16
push
sti
loop
clc
rcrl
push
adc
in
adc
outsb
push
sbb
and
push
and
daa
pop
pop
in
xor
sbb
stos
dec
mov
hlt
xchg
popa
or
adc
jl
cmp
or
or
shl
adc
xchg
leave
into
mov
es
xchg
or
pop
in
and
aam
cltd
in
and
xchg
dec
rcr
cmc
js
fildll
leave
mov
jo
lret
xlat
in
mov
pop
std
dec
inc
mov
mov
fsub
subl
mov
fadds
add
mov
fdiv
roll
rcll
aad
sbb
jle
cmpsb
pop
and
push
sub
cld
lret
mov
push
push
push
stc
sbbl
mov
adc
mov
push
jae
add
ret
mov
mov
inc
jbe
fistl
dec
add
in
rolb
outsb
inc
adc
fldt
push
adc
xlat
adcl
repnz
mov
call
and
dec
in
out
test
das
mov
into
aas
inc
xchg
jns
aad
and
pop
dec
add
inc
fcomps
nop
push
test
rcl
cmp
mov
mov
rcll
outsb
es
mov
stos
jbe
and
adc
inc
test
fsubrs
sbb
inc
and
fcomps
mov
insb
das
out
pop
lret
pop
push
pop
out
mov
mov
mov
outsl
aas
sbb
push
cmp
add
popf
int3
hlt
add
inc
push
notb
psubb
mov
mov
icebp
mov
pop
cmp
jns
mov
pusha
inc
imul
mov
cs
xor
jno
popf
or
pusha
idivb
add
xlat
pop
push
sbb
cmc
movzwl
mov
sbb
loope
inc
iret
je
iret
jmp
cmc
cmp
push
lods
xor
xrelease
cli
mov
test
add
xchg
and
mov
push
push
pusha
jge
aaa
les
push
dec
je
js
and
iret
mov
dec
shrl
add
inc
ficoml
mov
dec
pop
or
mov
or
mov
xor
xor
aas
jb
pop
cltd
gs
inc
dec
or
outsb
cmc
ja
nop
xchg
jge
xchg
push
notl
or
adc
data16
jnp
sti
or
cwtl
push
mov
cmp
lods
dec
mov
or
out
insl
inc
pusha
sub
insb
mov
mov
fisubrs
adc
divl
test
lds
adc
jns
jecxz
nop
mov
mov
inc
das
mov
movsl
xchg
out
mov
cld
cmc
sahf
mov
pop
add
push
stos
pop
sbb
cli
inc
cli
outsb
ljmp
dec
fildl
add
jle
add
outsb
out
std
idivl
add
lds
in
aas
ja
fldcw
or
pop
sbb
stc
and
loopne
push
repnz
ret
mov
sub
lret
dec
in
iret
neg
es
repnz
and
shlb
sbb
movl
hlt
jae
add
inc
xchg
push
sbb
jecxz
inc
mov
mov
int3
int
sbb
sub
or
cltd
add
sbb
mov
stos
dec
push
call
sbb
jge
je
jg
dec
pop
cmp
add
test
adc
inc
or
lock
inc
or
dec
xor
rcl
int
sbb
mov
adc
dec
mov
lret
nop
inc
mov
dec
aam
xchg
mov
sbbb
mov
nop
rolb
push
mov
lods
and
xchg
dec
xchg
fs
sbb
add
xchg
imul
push
xchg
mov
and
scas
xchg
cmp
pushf
idiv
daa
inc
cwtl
and
add
lods
push
fwait
sarb
fbstp
test
into
fcmovnu
fstpt
pop
repz
mov
mov
bound
cmp
inc
mov
xchg
xchg
xor
and
jp
cmpxchg
pop
ds
xchg
aad
xchg
jne
inc
add
loope
or
sub
lds
stos
lahf
dec
adc
andl
inc
movsb
fucomi
dec
mov
lods
insb
mov
xor
cld
shll
jmp
or
icebp
push
cmp
cmp
fmull
leave
in
cmpsl
fisttpll
ljmp
push
add
inc
movsb
popa
cwtl
and
sub
inc
jp
dec
movsb
std
movsl
sbb
ret
leave
mov
in
cs
dec
lret
stos
sbb
and
jmp
xorb
push
rorl
pop
ret
sbb
push
add
lret
in
or
mov
add
pmaxub
mov
inc
dec
imul
jg
pushf
out
push
sub
hlt
popf
pop
add
addl
out
or
fcoml
lcall
ret
fwait
loope
push
pushf
xchg
js
dec
repnz
jno
mov
add
ja
out
ss
mov
iret
fldl
add
fistpll
test
mov
cmp
lahf
inc
lahf
sbb
loope
int3
fistpl
lods
push
ss
add
mov
pop
push
adc
mov
in
push
pop
add
repz
gs
lods
mov
mov
sbb
adc
jg
pop
dec
push
jb
jnp
push
insl
lods
cs
jns
cmp
add
mov
xchg
addr16
jecxz
inc
movl
or
pop
fdivrl
ljmp
data16
jo
arpl
shrb
add
inc
cmp
in
es
sub
aam
popa
jae
lret
nop
dec
lods
sub
stos
fdiv
lods
add
push
popa
daa
mov
mov
sub
arpl
or
pop
lds
out
sub
imul
mov
inc
js
jle
adc
sub
loope
cmp
gs
xlat
mov
add
stos
mov
mov
pop
call
add
repz
loop
push
mov
dec
leave
imul
and
sbb
enter
pop
xchg
mov
and
and
xor
dec
push
mov
push
pop
adc
loopne
mov
sbb
or
je
cli
hlt
cmp
jns
int3
jl
ficompl
mov
repnz
xchg
xor
sbb
inc
cmpsb
scas
sbb
mov
cmp
outsl
or
sahf
lcall
xchg
inc
mov
xchg
shl
adc
arpl
fwait
aaa
js
mov
cmp
bound
fwait
jecxz
std
dec
sub
call
inc
fs
and
dec
psadbw
jmp
notl
mov
loope
mov
jo
icebp
mov
lds
or
int
loopne
cmpsl
jne
out
aad
clc
mov
jle
or
jnp
outsl
lret
mov
imul
mov
inc
lods
cmc
and
movsl
mov
test
fwait
movsb
jae
adc
fwait
jb
ficoms
sbb
dec
rclb
cmp
push
or
ficoms
cmp
lcall
adc
add
xchg
jno
xchg
cmp
stc
xlat
loop
aad
movsb
jl
pop
daa
sbb
sarl
mov
add
rcll
pushl
adc
push
loopne
add
xchg
mov
imul
inc
mov
add
jne
fists
dec
fistpl
nop
cwtl
sti
pop
aas
jmp
fiadds
lahf
cmp
imul
rorl
mov
xor
cmovbe
mov
jo
in
sub
mov
icebp
push
ds
adc
or
add
mov
pop
and
test
dec
fmull
fldenv
lahf
ds
lea
pop
mov
adc
xchg
arpl
shll
outsl
loopne
pop
inc
outsl
lods
mov
add
xor
sub
stc
cmpsb
sahf
cmc
popa
in
std
sub
mov
lahf
scas
mov
inc
add
mov
lahf
adc
sbb
push
xchg
int
mov
jno
inc
cs
lcall
mov
scas
imul
mov
adc
dec
mov
xor
sarb
scas
xor
outsl
sahf
ret
cmp
inc
cmpsl
sbb
add
dec
sub
cmp
fmuls
ja
pop
in
jge
ss
stos
stos
cwtl
mov
xlat
mov
adc
jle
inc
stos
mov
add
push
jl
insl
das
ljmp
push
wbinvd
test
int3
adc
cli
ret
sar
inc
push
inc
mov
cli
mov
pop
and
xor
pop
jl
push
mov
pusha
cwtl
adc
cmc
pop
adc
int
test
out
ljmp
adc
fwait
cltd
js
sarl
inc
daa
xorl
jne
jns
push
cmp
sbbl
dec
lcall
stos
dec
sbb
cmp
cld
das
adc
call
shr
sbb
cmp
xor
adc
mov
sub
lea
clc
outsb
es
int3
adc
movsb
adc
sub
into
ret
pop
xchg
ret
aam
aas
xor
cld
mov
imul
pusha
or
and
daa
inc
sbb
xor
and
xchg
sbb
push
cmp
mov
pop
or
jne
or
pop
test
pusha
scas
jp
sbb
mov
lds
rolb
sbbb
mov
fwait
push
adc
mov
out
ljmp
aas
add
push
lahf
movsb
lahf
and
aad
add
jno
sbb
sbb
or
inc
stc
decb
jb
call
lods
movsl
lds
sub
sti
rcrl
add
negb
out
lods
push
jbe
je
fucom
add
xchg
add
jecxz
aaa
hlt
faddp
orb
adcl
rorb
dec
pop
cld
sub
aam
aam
sbb
or
push
sbb
mov
push
push
ljmp
loopne
sub
daa
jb
cmp
cltd
sbb
in
sbb
std
mov
mov
enter
xor
push
ja
dec
sub
pop
cli
fs
fists
xorb
lret
mov
inc
cmpsl
sub
loop
cmp
cmpl
test
inc
adc
icebp
dec
mov
xor
mov
xor
mov
dec
xor
movsl
in
dec
ror
les
xlat
mov
shrl
mov
inc
add
xchg
jp
dec
out
stos
pop
fwait
mov
inc
mov
negb
sub
inc
mov
flds
popa
decb
xor
inc
scas
adc
dec
jp
xor
test
xor
inc
fmuls
xor
mov
cmpl
xchg
inc
pop
popa
push
add
sarl
shrb
fucom
xor
clc
test
dec
sub
and
xor
test
mov
jbe
cmp
adc
in
jmp
and
shl
inc
adc
inc
int
push
mov
fdivl
mov
jge
pop
scas
or
cli
call
xchg
dec
xlat
mov
adc
and
lods
bound
divl
pop
popa
sarb
daa
ds
or
pop
mov
adc
jl
mov
iret
loopne
rolb
ret
push
cmpsb
xor
push
pop
movsb
sbb
jns
push
cmp
scas
jle
or
cmc
aas
xor
xchg
xchg
pop
and
adc
stos
xchg
mov
adc
xor
mov
das
xor
test
daa
and
add
and
adc
inc
std
fidivrl
and
in
mov
mov
idivl
pop
mov
mov
or
cmp
ds
or
xchg
gs
push
test
out
push
shll
js
xchg
sub
outsb
dec
lock
inc
iret
push
popf
add
sub
ja
movsl
ss
gs
xchg
fs
add
in
ds
xor
icebp
popl
outsb
pop
enter
add
arpl
sbb
loop
pop
cmpl
gs
aaa
popa
jnp
xchg
pop
addr16
dec
lods
cmp
add
dec
mov
test
inc
sbb
test
push
push
xlat
or
push
loope
aas
xchg
pop
mov
out
mull
pop
dec
cltd
std
xor
push
adc
cmpsl
jb
sbb
inc
dec
das
mov
pop
gs
jbe
or
cmpl
rclb
data16
sbb
jno
faddl
dec
aas
mov
fidivrs
les
cltd
mov
fisubs
sub
outsb
and
push
fwait
ret
pop
push
call
std
xor
test
std
aad
mov
add
add
pop
jmp
clc
and
addr16
dec
lds
movsl
sbb
pop
adc
cmp
mov
add
popf
dec
ds
call
xor
mov
into
mov
xchg
or
je
sub
loop
sub
mov
lock
jae
aad
add
pop
sarb
jp
fdivs
div
jle
or
push
jg
lahf
xlat
dec
mov
in
add
fldt
movsb
es
rclb
rorb
mov
jp
or
hlt
nop
gs
mov
mov
dec
test
sub
imul
icebp
ds
xchg
test
lahf
outsl
in
xor
test
push
fisubl
rorl
fmull
test
iret
lahf
or
popa
mov
popf
add
fs
gs
pushf
sbb
jnp
dec
cld
dec
xor
repnz
test
cli
push
repnz
addr16
mov
xchg
jmp
in
inc
loope
ret
xor
repz
jg
ror
jno
fs
cli
stos
jnp
repnz
adcl
fsubrs
aam
rcl
lcall
jne
ljmp
out
int
imul
in
test
out
mov
inc
lods
and
pop
insb
xchg
mov
jge
push
out
push
loope
pop
jns
shrl
xchg
xor
or
sub
sub
pop
inc
push
pop
fdiv
jp
xor
dec
fs
aas
cmp
pop
jne
pop
das
int3
lret
imull
push
sbb
cltd
enter
mov
push
outsb
addr16
pop
jmp
add
xchg
add
cmp
jle
mov
xchg
sbb
in
adc
lods
pop
push
movups
inc
push
mov
pop
mov
mov
call
lds
fadd
inc
and
or
xor
aad
imul
aas
mov
pusha
push
test
idivb
rcrl
and
add
pop
cmp
adc
enter
add
lahf
popf
add
adc
mov
or
dec
sub
mov
push
mov
lret
hlt
adc
mov
mov
jnp
cltd
pop
cmpsl
cmc
int
mov
fiadds
aaa
cmpsb
jnp
xchg
sub
fs
dec
push
dec
cld
and
clc
push
pop
sub
or
jp
xchg
lods
adc
shll
push
mov
and
cmc
xor
xchg
addr16
out
stos
xor
out
mull
lock
js
jecxz
mov
mov
lock
insl
push
fmulp
inc
sbb
inc
jp
push
sahf
mov
and
fwait
add
jns
das
out
pop
fmull
testb
mov
arpl
stc
shrb
sub
cltd
dec
movsb
mov
loopne
into
sahf
xchg
or
and
fidivl
sbb
cli
mov
push
jg
enter
aad
repnz
ret
mov
cmpb
adc
xchg
sbb
arpl
les
mov
cmc
data16
arpl
jb
shr
aad
pushf
jns
fnstsw
popf
sahf
sahf
in
icebp
xchg
popf
dec
imul
unpckhps
jb
roll
mov
or
pop
and
sbb
or
loopne
sti
mov
jb
sahf
or
xor
mov
sbb
cltd
dec
mov
arpl
fdivrs
sub
pushl
fiaddl
fwait
addb
dec
rcrb
pop
clc
pop
push
popa
jne
sbb
fstpl
mov
pop
cmc
jno
icebp
and
mov
sbb
mov
cmpsl
add
aad
rcrb
or
flds
add
idivb
inc
jmp
cli
cli
cmp
add
sbb
push
rcl
cmp
push
mov
addr16
mov
jb
mov
and
insl
cmc
call
push
jbe
lods
lcall
or
ja
jge
int3
outsb
xchg
add
xchg
add
das
insb
ficomps
xor
fldt
xchg
test
mov
mov
gs
shlb
and
mov
cli
cmc
add
cltd
lret
ljmp
andl
jmp
dec
dec
xlat
stos
mov
lock
ret
inc
ljmp
leave
sbb
std
in
jge
fs
std
fnstcw
aam
pop
inc
inc
ss
push
repnz
push
xor
xchg
addr16
fldt
iret
lret
pop
mov
rorb
push
mov
cltd
or
je
sbb
jl
xor
into
mov
dec
push
add
hlt
jae
gs
cli
arpl
in
lock
imul
pop
fiaddl
in
xor
jb
mov
icebp
inc
cmp
xor
hlt
ja
pop
mov
loopne
xor
scas
lcall
stos
fdivs
mov
pop
rol
xchg
sub
xchg
and
call
es
popf
and
push
pop
push
mov
push
je
dec
xchg
aam
lock
js
sbbb
mov
or
test
dec
cs
sbb
ret
outsl
lret
notb
pusha
cltd
inc
test
inc
loope
xchg
pop
lcall
aas
mov
mov
pop
inc
aaa
xchg
adc
mov
cmp
inc
cmc
mov
inc
jecxz
mov
fs
ja
jb
or
test
mov
lahf
dec
pop
add
inc
xchg
lret
sbb
daa
pop
dec
push
mov
ficomps
pusha
gs
mov
adc
shlb
xor
cltd
sbb
adc
sub
stos
sbb
lahf
jg
insb
inc
sbb
xor
pop
xor
jmp
int3
and
mov
xor
sbb
sti
add
jg
out
xchg
or
jae
mov
and
aad
insl
add
sub
and
lea
jnp
add
cmp
test
mov
lea
stos
ja
push
data16
outsl
pop
adc
cmp
test
orb
cmpsl
add
adc
inc
aad
add
dec
hlt
int
test
push
xor
shl
les
pop
arpl
push
nop
imul
xor
pop
shlb
add
roll
pop
sub
add
add
sub
mov
leave
adc
xor
fcomi
pop
pop
add
rorb
aad
add
insb
pop
pop
lods
push
inc
jecxz
and
je
mov
cmp
mov
movsl
iret
sti
mov
aad
mov
sarb
mov
jae
mov
imul
mov
clc
xlat
pushf
es
inc
xchg
jnp
mov
pop
sahf
andb
add
fmuls
xchg
subb
mov
das
mov
bound
cmp
imul
pop
iret
repz
jp
addb
inc
and
fwait
out
mov
lea
jne
dec
add
push
pop
cltd
addb
pop
call
mov
loope
and
mov
pop
inc
outsb
dec
inc
add
dec
aaa
mov
loop
sarl
in
sbbb
je
inc
and
pop
or
mov
sbb
mov
ljmp
or
repz
xor
xor
mov
fcoms
adc
jns
xchg
fisubrl
inc
jge
add
inc
aaa
rorl
cwtl
mov
mov
dec
lea
aam
jl
out
xor
xor
mov
js
in
jl
outsl
mov
sub
xchg
test
dec
push
xchg
mov
cmpsl
neg
xchg
dec
in
cmp
into
push
pusha
sbb
xorl
sbb
mov
jl
mov
cltd
icebp
hlt
inc
lds
out
or
rol
jmp
notl
and
jno
bound
xchg
stos
xchg
push
cwtl
inc
scas
mov
cld
emms
cmp
pop
stos
pop
mov
mov
ret
inc
dec
sahf
xchg
aad
cmp
mov
mov
shr
push
lock
jnp,pt
add
mov
mov
out
je
into
fadds
cmp
jns
lcall
jns
ficompl
mov
in
xchg
out
je
rclb
adc
pop
lods
sub
fwait
mov
inc
out
mov
cmc
lahf
adcb
pop
shlb
xchg
xor
lea
xchg
jb
cmp
pop
orl
xchg
arpl
mov
stc
inc
push
and
ja
cmpsl
add
sbb
mov
add
daa
pushf
cli
mov
scas
aad
lods
sub
add
jns
cmpsl
ret
addb
lcall
mov
mov
pop
pop
popf
nop
mov
sbb
mov
ficoms
dec
mov
loope
pop
inc
xor
in
jns
push
jns
mov
and
push
nop
pop
mov
xchg
loope
inc
call
repz
add
push
cmc
push
inc
inc
jmp
jmp
stc
push
out
sti
pop
add
aaa
pop
fdivrl
push
and
push
pop
inc
xchg
jb
int
xor
push
sbb
inc
or
push
xchg
cmpsb
mov
lods
adc
jns
jae
push
scas
push
out
xchg
jecxz
je
inc
mov
adc
outsl
decb
jnp
or
jg
nop
in
js
gs
mov
repnz
sub
jne
ljmp
cmp
lcall
pop
js
aad
mov
fdivr
pop
in
inc
inc
and
and
in
cwtl
jno
ret
pop
add
sbb
test
pop
add
or
pop
push
or
sarl
bound
insl
outsl
pop
jne
cs
mov
mov
xor
cmp
cmp
cs
add
popa
xchg
mov
push
mov
mov
leave
sub
add
jo
clc
push
and
repnz
xchg
imul
out
fstp
adc
in
xor
cmpb
mov
push
inc
add
adc
push
sub
or
aam
or
sub
sbb
test
btr
lret
pop
je
mov
mov
lock
cld
mov
je
ret
mov
js
or
dec
push
pop
inc
sub
mov
subl
adc
mov
or
test
leave
insb
or
xor
call
dec
xchg
loopne
push
aas
sub
bound
das
ficomps
mov
jg
xchg
test
jbe
pop
jg
inc
cmp
mov
push
fisttpll
pop
sub
push
fisttpll
push
out
jecxz
jmp
sub
pop
cmc
mov
aaa
mov
cltd
add
int3
notb
lahf
scas
mov
push
sub
out
push
ret
mov
fcompp
pop
imul
pop
int
movl
fisubl
mov
das
pop
pop
repnz
xchg
add
mov
push
stc
push
jo
stos
aas
or
jae,pn
cmp
push
les
sub
dec
lahf
mov
mov
xor
ds
jbe
fsubs
jle
cli
or
cmp
inc
scas
iret
sub
test
xchg
add
mov
imul
mov
es
sbb
outsl
pop
int
pop
add
jge
hlt
push
adc
or
add
jle
sub
sarl
test
mov
fnsave
add
xor
dec
mov
test
and
cmp
push
sbb
pop
jo
mov
rorb
mov
stc
cmp
push
outsl
jmp
mov
push
ret
stos
insb
add
or
sbb
int3
add
sub
mov
fildll
cmp
jmp
and
cmp
mov
mov
jns
dec
js
cmpsl
iret
cmp
popa
pop
inc
mov
push
aas
nop
adc
adc
push
fucomip
adc
mov
and
jg
mov
gs
push
xchg
jae
and
test
sti
add
jae
cmp
cmp
fs
pop
arpl
or
and
mov
lods
stc
jg
jmp
aad
pushf
fistl
mov
aam
lret
arpl
divl
dec
xor
sub
and
pop
inc
insl
loope
xchg
lret
sub
dec
clc
push
pop
inc
pop
dec
test
incl
mov
mov
sbb
xor
test
leave
adcb
out
xchg
mov
jge
cmpsl
fidivrs
sbb
adc
dec
pusha
and
lds
add
pop
icebp
jg
ret
cltd
push
sbb
sbb
sub
loopne
leave
in
push
jp
loop
mov
mov
cmp
push
movb
dec
imul
push
xor
inc
insl
cmc
cs
lcall
sub
sbb
neg
and
cmc
jae
arpl
std
push
adc
shll
mov
push
add
and
sbb
jns
mov
int3
or
mov
push
mov
or
aas
jns
push
popa
clc
mov
pushf
icebp
sti
movsb
xchg
imul
and
add
pop
pop
sbb
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
push
lods
aas
movsl
mov
add
xchg
add
adc
lcall
cmp
add
mov
lret
repnz
movsl
pusha
into
and
dec
adc
sbb
xor
mov
ds
mov
fcmovnbe
push
inc
jne
mov
jge
add
mov
scas
mov
in
cmp
in
mov
scas
jecxz
adc
jge
push
dec
out
lods
mov
adcb
jge
ds
mov
add
mov
in
pop
test
dec
ret
sahf
cmp
cs
mov
jno
dec
sbb
push
popf
fs
sub
mov
out
aaa
nop
mov
lret
or
imul
cmp
sahf
adc
cmpl
addr16
pop
iret
test
dec
data16
push
sahf
jl
or
sbb
push
pop
gs
shl
je
pop
lcall
push
cwtl
insb
mov
push
dec
xchg
adc
cmp
xor
mov
les
and
dec
mov
xchg
fisttpll
mov
inc
xchg
jle
push
xchg
inc
xor
rcrl
mov
ss
sbb
xchg
mov
mov
lea
repnz
fwait
scas
jle
xor
cli
mov
stos
lock
ss
inc
sub
sbb
push
lock
call
and
jge
mov
xor
lret
mov
dec
test
into
push
xor
out
mov
pushf
or
sti
adc
pop
scas
cmpsb
les
cmc
jle
ss
es
negb
adc
clc
inc
add
pop
jb
cs
mov
mov
or
lcall
xchg
adc
sbb
cli
inc
cld
xchg
xlat
jae
stos
ja
fdivrl
mov
ret
pop
add
shl
or
jno
cltd
aad
mov
cwtl
call
mov
out
jne
outsb
jno
sub
je
mov
adcb
ror
push
push
out
mov
and
adc
push
shlb
inc
push
scas
sbb
jp
negb
adc
jo
sub
push
lcall
enter
cmp
and
xchg
xchg
adc
sub
dec
adc
add
cmp
stc
int
xor
mov
int
testl
add
rorb
std
out
adc
cmpb
push
pushw
adc
ja
into
cmp
pop
push
orb
cmpl
imul
pop
or
sbb
cmpl
mov
and
sbb
faddl
loope
insl
into
mov
test
iret
nop
mov
int
push
in
stc
jg
push
add
hlt
mov
mov
lods
clc
repnz
je
shlb
inc
xlat
fucom
loop
scas
push
mov
jge
or
xlat
push
int
and
adc
mov
in
cmp
aas
cmpsl
cwtl
ud0
sub
pushl
inc
and
mov
lods
ljmp
rcr
sti
pop
pushf
adc
fs
cmp
lea
imul
mov
popf
stc
xchg
adc
xor
and
sub
xchg
jle
xlat
mov
stc
sbb
dec
push
push
daa
ja
arpl
mov
movsb
int
lahf
dec
mov
rcrl
insl
stos
mov
or
popf
cmp
clc
aam
pop
test
cmp
les
inc
mov
mov
ljmp
xchg
jae
mov
test
xchg
lahf
ljmp
dec
jmp
ficoml
inc
or
mov
cmc
popl
mov
out
out
mov
mov
jns
mov
js
mov
scas
and
imul
xor
jle
jle
insb
ret
ljmp
add
call
mov
iret
icebp
sub
dec
sbbb
in
xor
dec
fistpll
std
pushf
aaa
mov
mov
enter
sbb
lock
fnstcw
repz
insb
pop
mov
jecxz
sbb
dec
and
fwait
lcall
xor
push
rorl
movb
or
movsl
mov
jne
int
add
xor
mov
scas
adc
jg
pop
mov
pushf
ljmp
imul
fdivl
lret
divb
or
or
subb
loope
pop
xor
fisttpll
jnp
add
test
mov
sub
jo
add
add
