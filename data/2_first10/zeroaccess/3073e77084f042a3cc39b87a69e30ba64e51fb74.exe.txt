push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
aas
rolb
addl
sub
sub
cmp
jp
jbe
inc
jae
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sub
inc
bswap
aam
or
std
xor
cltd
xchg
lea
cmpsb
test
mov
xchg
sbb
jno
cli
fdivr
xchg
jo
iret
fcoml
sbb
stc
jg
mov
mov
xchg
sub
jb,pn
shrl
pop
das
fiaddl
xchg
push
adc
mov
loop
ja
xor
fdiv
mov
imul
loop
pop
pop
subb
lods
mov
arpl
pop
ds
cli
ret
cwtl
insb
jno
arpl
mov
repz
push
pop
sbb
mov
dec
jg
adc
and
in
rcr
movsl
xor
inc
aas
pop
int
aaa
enter
sbb
cmp
in
gs
mov
inc
gs
dec
sub
xchg
mov
mov
jp
bound
out
popf
das
shl
out
bswap
loope
adc
in
inc
insl
cwtl
aas
out
ret
dec
outsb
adc
cmpsl
cwtl
and
div
xchg
mov
xchg
and
sub
or
push
aad
outsb
das
xchg
insl
lret
insl
cmp
xchg
cmp
out
pop
stos
sub
fxch
in
sti
xor
dec
fcoms
xchg
push
cmpb
push
sbb
jne
ret
outsb
xchg
adc
dec
aaa
inc
add
ja
dec
sub
cmp
sub
repnz
pop
push
jnp
test
arpl
outsb
lods
pop
cwtl
xchg
push
xchg
loop
adc
push
call
cmp
cli
cs
repz
add
daa
hlt
mov
rcrl
mov
int
jle
cmp
inc
test
js
daa
cmp
test
cmp
popf
rorb
repnz
es
aam
test
mov
es
jno
xor
xchg
inc
mov
loope
popa
jp
xor
lds
push
lds
inc
jnp
mov
ret
mov
lcall
xor
hlt
push
loop
inc
pop
xchg
lret
mov
aad
imul
bound
inc
xor
pop
mov
dec
xchg
mov
aam
dec
not
sbb
xor
int
push
pop
dec
mov
int3
push
pop
inc
movsl
or
xchg
mov
fdivrs
jmp
mov
mov
imul
inc
jmp
xchg
mov
fisttps
fstps
shr
mull
rclb
arpl
js
pushf
add
loop
into
lahf
rcr
int3
scas
aad
or
scas
iret
cltd
add
dec
mov
cmp
mov
or
add
push
stc
aas
shlb
cmpsb
out
rep
int
sub
roll
xlat
xor
insl
fs
outsl
stc
rcrb
push
icebp
in
mov
fisubs
lods
cltd
push
cwtl
jnp
aas
dec
loop
adc
mov
cmp
push
das
rcrb
mov
loop
push
int3
es
notb
cs
mov
arpl
adc
xchg
push
add
add
popf
adc
test
pop
imul
sar
xor
mov
and
test
jns
call
add
mov
pop
mov
repnz
or
pop
inc
cmp
bound
mov
icebp
mov
push
icebp
lock
daa
inc
outsl
ffreep
divl
sub
sub
sahf
jnp
daa
sarb
cmpsl
and
xchg
scas
and
add
fadd
out
pop
push
sbb
frstor
pop
jg
mov
jg
inc
rcrl
sbb
lahf
sbb
push
incb
jbe
inc
rcrb
and
jecxz
fildll
dec
stc
cmc
out
into
lret
fiaddl
stos
or
mov
or
loope
dec
mov
shlb
xor
jge
out
cmp
jae
mov
or
xchg
push
cmp
sbb
xor
out
in
in
mov
iret
mov
and
xor
enter
add
jno
popa
js
jge
push
cltd
jb
outsb
lods
cmp
add
push
push
cwtl
push
cmp
jmp
cmpsl
data16
test
test
xchg
aaa
sarb
xor
out
sbb
inc
imul
inc
sbb
push
mov
cmc
nop
shr
xchg
ret
lock
sahf
cmp
jne
lea
jae
out
rcrl
popf
sbb
or
mov
mov
mov
ret
into
outsb
push
fidivrl
push
fwait
in
cltd
in
les
adc
repnz
fs
or
iret
fs
stos
clc
insl
adc
jnp
cld
mov
div
int
loopne
fwait
scas
sahf
jo
sub
adc
negl
prefetch
dec
call
inc
pop
xor
test
and
ds
aas
ret
es
call
cltd
or
cmpsl
cli
fdiv
ja
mov
gs
das
call
mov
cwtl
dec
or
jb
out
loopne
mov
push
and
dec
inc
pop
jnp
sub
dec
dec
jne
xchg
aaa
add
lret
jg
cmpsl
dec
mov
shr
push
mov
out
jnp
cmc
pop
inc
or
lcall
movsl
push
lahf
mov
mov
sbb
xchg
cmp
xchg
test
sti
std
icebp
jl
fnstcw
pop
adc
leave
sub
jnp
xlat
rcl
pop
sub
pop
pop
fildll
mov
jecxz
push
cmp
pop
sahf
icebp
ret
leave
fsubp
jo
lret
adc
lock
int3
jns
add
sbb
decb
neg
andb
je
push
push
adc
mov
aaa
int3
cmpsl
pop
push
push
lret
mov
fwait
imul
xlat
pop
mov
stos
jbe
scas
lds
sahf
dec
loopne
fiaddl
mov
cld
negb
fwait
add
pop
in
push
adcl
rorb
and
icebp
das
mov
ficoms
subl
call
outsb
cmpsl
mov
dec
mov
add
sub
xor
mov
in
xchg
and
push
mov
dec
xchg
add
int3
push
and
test
dec
test
cs
shll
dec
pop
jae
ja
jno
pop
xor
or
and
fisubs
nop
sbb
mov
frstor
scas
ficoml
daa
push
pop
sahf
xchg
mov
dec
or
or
pop
jl
movsl
inc
jp
repz
ss
jb
gs
ret
adc
lcall
lods
pop
aas
push
in
add
sbb
push
sub
sub
xchg
imul
inc
rorl
and
cmp
xcrypt-cbc
cmpsl
push
test
mov
mov
std
ret
rorb
mov
mov
flds
fnsave
jg
push
push
out
jp
jne
out
pop
and
lcall
sub
adc
inc
ret
sarl
out
sti
leave
adc
mov
push
rorb
insb
in
int
dec
jg
add
enter
idivl
mov
pop
outsb
mov
test
jg
jns
xor
inc
cmp
sahf
scas
test
inc
jbe
ds
jbe
mov
lods
ja
xchg
ds
std
shlb
dec
aam
in
or
mov
lods
sub
lods
pushf
in
fst
pop
push
repnz
add
mov
call
add
mov
lret
mov
sbb
mov
fs
addb
mov
push
or
js
decl
cli
pop
pop
stos
inc
push
jae
mov
mov
lds
inc
dec
setbe
push
shll
cmpsb
lret
cmp
pop
insl
jecxz
js
shll
add
pop
daa
movsl
pop
and
repz
repz
in
adc
stc
rcrl
in
lahf
push
mov
shrl
xor
push
outsb
repz
shll
xor
push
sbb
ret
xorl
sbb
aam
rcrl
icebp
pop
sbb
aam
add
iret
xchg
stos
je
push
cli
ret
pop
xor
cltd
inc
imull
inc
sub
push
adc
mov
gs
dec
dec
or
iret
js
iret
out
nop
cld
ljmp
ret
pop
jp
push
jnp
addr16
lahf
cwtl
push
add
outsl
repz
insb
inc
push
roll
jo
mov
sub
imul
sub
and
xor
mov
pop
or
inc
repz
test
aas
ret
pop
fidivl
rcr
xchg
xor
sar
push
add
or
addr16
push
adc
mov
push
movsl
daa
je
call
sbb
inc
pop
outsb
sbb
call
loope
jmp
lret
mov
xchg
test
and
lods
or
xor
mov
cmpsl
test
sbb
cmp
movnti
mov
outsl
sbb
repz
add
push
ret
mov
andl
into
pop
dec
outsb
xchg
test
cmp
mov
or
call
fdecstp
mov
icebp
shrb
js
dec
sbb
daa
add
dec
jecxz
mov
loop
movsl
divb
add
aam
push
mov
scas
lods
jne
pop
pop
loope
adc
test
dec
mov
cld
inc
add
push
or
jp
lods
iret
in
sbb
mov
out
push
aad
repnz
and
outsl
xchg
sbb
xor
xor
int
mov
or
jmp
cmp
sbb
repnz
mov
hlt
stc
cwtl
add
cmpsl
std
jno
addr16
and
bound
jp
in
shlb
add
mov
loop
rcrl
xchg
daa
push
xchg
fcompl
xor
jb
inc
lods
in
test
bswap
pop
mov
or
add
cli
js
inc
pop
rcll
test
loope
shll
movsl
push
xchg
dec
dec
push
adc
xor
pushf
sub
adc
pop
fs
ds
jg
add
ficoml
int3
cmp
cltd
adc
popa
dec
sahf
sub
inc
mov
cmovl
test
pop
jo
inc
xchg
jne
stos
xchg
dec
inc
jmp
pop
sbb
not
xchg
xchg
shrl
test
xor
mov
scas
pop
fs
add
mov
gs
out
out
push
add
mov
xlat
hlt
or
xlat
jecxz
dec
mov
dec
dec
sbb
add
xchg
pop
sub
in
int3
add
push
fcompl
pop
mov
outsb
scas
mov
sarb
add
cmp
mov
push
icebp
mov
sarl
divl
cmp
std
mov
push
mov
out
insl
bound
inc
inc
sbb
imul
daa
arpl
adc
mov
pushf
lret
stos
cmp
jno
sbb
pop
mov
push
jmp
aad
nop
pop
pusha
adc
adc
mov
pusha
outsb
push
sub
pop
ss
jl
sbb
sbb
outsb
sub
jbe
sub
xor
xor
ja
dec
std
out
outsl
imul
or
sbb
and
push
xchg
dec
dec
imull
fstl
and
jge
enter
out
clc
sub
mov
cmp
mov
ret
jmp
into
scas
pop
aas
sub
lcall
mov
xchg
pop
mov
jae
or
fwait
mov
fwait
xlat
insb
cs
xorb
dec
pop
add
fnsave
push
int
push
movsb
popf
insb
aam
lcall
mov
pop
imul
orb
dec
fidivrl
mov
sti
dec
imul
sub
jmp
jg
adc
mov
clc
aam
aad
rcll
movl
je
lods
stos
arpl
xchg
pop
sub
loop
push
rcll
push
sub
push
mov
mov
sub
jg
fcomps
test
out
add
inc
shlb
cltd
loop
lods
jge
mov
push
cmp
mov
ret
add
mov
ss
cmpsb
or
cmpsl
clc
mov
pop
rcrb
xchg
add
cltd
xchg
mov
sti
and
mov
mov
pushf
xchg
mov
dec
xor
jno
test
cmp
ficoms
inc
movsb
xchg
negb
popf
mov
sbb
leave
jp
mov
inc
out
mov
outsl
cmpsl
add
leave
jne
dec
in
cli
cmp
pop
dec
aam
mov
enter
sbb
js
ret
xchg
cmp
pushf
idivb
mov
add
jecxz
or
push
sti
imul
pushf
fdivrs
xchg
xor
test
das
gs
icebp
push
inc
jae
sub
push
jbe
sbbb
bound
test
jmp
fwait
jne,pt
dec
sub
scas
jo
mov
fnstsw
popa
lret
in
sarb
mov
sahf
dec
dec
pop
jnp
xor
xor
jbe
rorl
push
lods
out
insb
add
cmp
pop
pop
cmp
icebp
xchg
push
enter
mov
in
or
enter
jg
xchg
insl
jae
stc
popf
mov
clc
enter
and
inc
imul
pusha
flds
push
orl
adcb
mov
cmp
lret
stos
rorl
fldt
jge
mov
sub
inc
jmp
leave
loop
dec
mov
push
sbb
aam
mov
push
mov
ficomps
aas
jnp
jae
in
inc
and
scas
adc
pop
lods
lcall
sbb
out
jge
out
test
pop
aad
add
cmpsb
pusha
pusha
mov
fistpl
outsl
lea
jne
sarb
cwtl
call
jp
pop
das
and
mov
push
nop
popa
insb
insl
inc
ss
jp
inc
jnp
les
scas
insl
imul
fnsave
sub
push
adc
mov
or
pop
and
flds
xchg
clc
leave
call
clc
pop
mov
mov
leave
mov
add
push
push
xchg
push
or
cwtl
int3
mov
repnz
and
leave
fldt
pusha
xor
js
data16
cmp
xchg
mov
aaa
pop
clc
pop
add
cs
ljmp
lds
repz
sub
push
pop
pop
insl
push
ret
or
xchg
xor
outsb
inc
in
pop
sarl
dec
pop
fdivrl
gs
sub
jns
sub
jae
jge
adc
bound
push
sub
out
xor
das
push
and
sbb
xor
sbb
pop
int
call
shll
push
outsl
adc
daa
dec
mov
adc
inc
cltd
call
outsl
pop
popa
jmp
stos
pop
add
cmp
fists
loop
pop
xor
adc
icebp
jmp
pop
imul
shll
inc
xor
fistl
sbb
jne
stos
movsl
lret
roll
push
push
dec
into
dec
inc
mov
push
jmp
insl
fldenv
test
fucompp
cltd
mov
sub
insb
dec
ja
sbb
pop
clc
sub
leave
mov
xor
cmc
fiaddl
enter
nop
and
sbb
lods
pop
sub
cmp
test
std
push
pushf
mov
adc
xor
ficoms
ljmp
xchg
lods
icebp
repnz
sub
dec
adc
xor
andb
jmp
iret
push
ror
jp
mov
xchg
sub
mov
inc
cmp
jg
insb
rcl
lret
adc
mov
sub
adc
stos
adc
xor
mov
lea
ds
sbb
cli
pop
cmpsb
andl
sbbl
in
push
pusha
and
aam
ss
sub
dec
jge
pop
inc
test
push
in
pop
ljmp
wbinvd
and
push
loopne
dec
sub
aad
jg
mov
lods
xorl
addr16
addr16
imul
jp
adc
sub
adcb
dec
stos
ss
xchg
test
or
loopne
ja
add
jmp
xchg
enter
xorl
cmp
xor
sub
or
movsl
clc
lahf
sbb
out
imul
sbb
xchg
loop
inc
aam
pushf
cmpsb
push
repnz
or
mov
imulb
xchg
imul
or
test
cmpsb
xchg
sub
xor
mov
pop
stc
pop
sbb
scas
xchg
mov
dec
cli
fsubrl
adc
adc
fimull
imul
clc
mov
out
andl
xorl
fsubrl
sarb
pop
add
in
inc
addb
js
test
xchg
jns
lret
adcb
lock
sarb
push
or
sub
xor
or
mov
imul
jp
dec
dec
ret
arpl
xchg
push
sbb
in
test
mov
mov
into
outsb
push
xchg
mov
jmp
dec
dec
test
lods
sbb
and
es
loopnew
adc
push
cmp
pop
xor
or
jg
ret
fisubrs
cld
aaa
test
xchg
bound
sti
stos
fiadds
sti
jge
xor
test
insb
lahf
cwtl
out
push
and
adc
mov
jno
mov
pop
xor
cwtl
mov
rcr
mov
pop
and
mov
aas
in
mov
or
test
add
das
test
shlb
push
arpl
mov
xchg
sbb
xlat
mov
mov
mov
ljmp
out
lds
sub
jge
dec
pusha
sbb
cli
jno
js
test
mov
mov
jo
daa
push
xlat
xchg
mov
xor
cmp
jp
and
popa
dec
jo
into
adc
lods
jmp
dec
dec
inc
mov
cmc
dec
cmp
fcomps
dec
pop
in
imul
sub
pop
sub
scas
and
insl
imul
ret
movsb
mov
fnstcw
call
sbb
inc
push
push
and
mov
sub
add
lods
add
push
dec
mov
jo
push
ss
ffree
leave
into
pmaxsw
dec
xchg
xlat
xchg
pop
bound
jno
outsb
or
xchg
adc
shll
pop
out
mov
imull
call
inc
add
xchg
cmp
pop
fstpl
popf
in
lea
jnp
unpcklps
jl
dec
jnp
rcrb
mov
sub
jp
testb
cmp
mov
cmc
xchg
in
stos
jg
scas
shll
sti
inc
outsb
fwait
dec
shrb
mov
mov
and
push
inc
stos
or
or
hlt
notl
mov
cmp
dec
ret
gs
jge
test
add
jp
pop
mov
jle
ja
and
jb
aaa
mov
push
jne
push
in
sub
adc
mov
or
fadd
cli
repz
cmp
dec
mov
out
test
data16
fcmovnu
fildl
stc
adc
and
cltd
fmull
je
call
and
pop
add
adc
lods
cmc
and
outsb
ret
popa
xchg
in
les
jae
hlt
stos
cmp
rcl
push
add
push
dec
mov
inc
into
mov
inc
test
or
cmp
push
add
dec
mov
shl
adc
loope
scas
mov
outsl
cwtl
inc
loopne
fstp
jae
xchg
jb
stos
inc
adc
sbb
cmp
inc
js
ljmp
jbe
jle
pop
xchg
mov
pop
jns
jmp
inc
inc
cs
cmp
ds
pushf
insl
inc
mov
mov
loopne
clc
cld
jg
mov
xchg
adc
ds
dec
aas
daa
and
std
adc
jl,pn
push
sub
pop
aad
pop
push
insl
dec
cltd
mov
dec
mov
push
into
xor
cmp
bound
outsb
out
stos
shl
popl
jnp
or
adc
jle
and
pusha
jmp
adc
or
xchg
sub
mov
mov
lods
push
pop
hlt
add
in
adc
js
pop
rolb
pusha
xchg
loop
or
mov
jb
jns
mull
or
adc
dec
jle
ret
rolb
addr16
jl
mov
and
push
xor
fstp
xor
rol
or
daa
mov
leave
xor
dec
inc
fsub
outsb
dec
clc
cmp
cmpsb
out
loope
dec
stos
rclb
cmpsl
xchg
jnp
cmp
mov
ljmp
mov
xchg
mov
dec
insl
mov
fisubs
loopne
out
bound
fcomps
les
jle
push
rcrb
adc
mov
sub
mov
adc
aas
mov
orb
pop
mov
cwtl
xor
dec
sar
aam
cld
aas
pop
lcall
dec
lret
or
xchg
jmp
test
incb
sbb
push
pop
repnz
jmp
pop
ja
cltd
xchg
fs
xor
adc
test
test
mov
loopne
dec
popf
xor
or
inc
push
dec
lret
test
std
mov
repnz
xor
dec
jle
and
clc
into
jg
test
mov
jl
dec
dec
movsl
ja
jno
or
icebp
adc
xchg
cs
xchg
and
out
mov
stc
divl
vmread
imul
je
mov
cmpsb
cmp
mov
daa
mov
pop
aam
pop
popa
mov
dec
btc
out
xor
sub
and
sub
divl
push
lock
rcrb
int3
adc
jne
sar
push
xchg
xor
jnp
lea
cmpb
jne
fisttpll
mov
or
pop
lea
aaa
push
xchg
cmpsb
ds
add
in
pop
cmpsl
cmp
push
fimuls
push
cmp
push
jbe
lret
pusha
and
dec
imul
test
addl
pop
cmp
mov
stos
popfw
std
testl
rorb
xor
in
sbb
sbb
jne
stc
sub
cmp
insb
mov
or
jb
xor
and
jo
jno
cmpsl
arpl
cmc
jge
sqrtps
jecxz
sbb
in
mov
loope
rcrb
ja
cmpsl
push
lock
imul
ret
fadd
sbb
leave
mov
loop
jge
fprem
fiaddl
jecxz
testb
and
dec
sub
or
addr16
cmp
cli
sbb
ja
sub
inc
in
push
add
pop
fdivs
xchg
jb
mov
repz
sub
push
test
pop
xchg
pop
mov
jb
cmpsl
sbbb
pop
xchg
sbb
stos
addr16
sbb
mov
jmp
divl
dec
pop
enter
lods
xorb
pop
stos
adc
test
mov
cmpsb
mov
cmpsb
mov
call
stos
addr16
mov
add
mov
sbb
out
mov
push
xchg
shrb
mov
inc
mov
icebp
in
jne
push
aam
add
push
mov
je
push
push
jb
sbb
sahf
stos
ret
push
insb
mov
pop
int
xor
dec
mov
sub
test
mov
dec
in
ret
push
mov
popl
loope
testl
inc
mov
push
inc
aad
scas
fs
movsl
pop
icebp
orl
popa
mov
inc
decb
pop
std
dec
ret
and
mov
ljmp
push
sbb
stos
cmc
cltd
jl
sar
mov
int3
and
pop
popf
je
fisubrl
cmp
sti
jecxz
and
jo
sbb
lods
fdivr
mov
mov
add
lahf
adc
mov
in
enter
pop
xchg
xor
mov
js
negb
out
sub
mov
repnz
xchg
popa
das
out
fwait
in
push
push
xchg
stc
cld
hlt
orl
and
cli
into
aas
push
enter
xchg
mov
rcrl
ss
mov
jae
push
mov
shrb
negl
pop
cmc
cs
sub
pop
mov
shl
mov
sub
mov
push
gs
mov
mov
xchg
pop
scas
faddp
mov
add
imul
jb
mov
push
push
fnstcw
adcb
sti
mov
sub
dec
sbb
mov
insl
push
addr16
mov
repnz
jl
adc
data16
or
loop
jb
jnp
popa
ret
fwait
jmp
fdivs
mov
xchg
shlb
pop
push
out
rcrb
fldenv
adc
xchg
fmul
jp
add
push
lods
mov
push
and
jg
and
sbb
in
dec
push
mov
or
std
and
mov
jb
push
xor
mov
fs
cli
xor
mov
insl
lods
add
aad
push
sub
sarl
cmp
push
or
sbb
adc
movzbl
mov
aaa
jo
outsb
pushf
dec
in
sbb
and
outsb
adc
mov
test
jmp
pop
stc
pop
leave
nop
add
mov
into
dec
dec
jmp
cmp
lret
adc
cmc
and
and
and
or
jg
ss
mov
cmp
pop
mov
loopne
adc
pushf
inc
das
jne
clc
jns
out
sub
xlat
adc
bound
imul
mov
mov
cmc
aad
pop
call
pop
jmp
insb
pop
or
xor
mov
jl
cltd
loop
scas
lret
mov
bnd
push
loop
push
outsl
ss
mov
movsb
cmp
in
cs
and
dec
lret
aas
popa
mov
leave
out
xor
lahf
flds
out
mov
call
ret
xor
shrl
xchg
repnz
adc
inc
pop
push
sti
ds
sub
mov
loopne
repz
daa
movsl
xchg
xor
and
cmp
push
test
imul
je
in
insb
jbe
dec
mov
inc
or
mov
cmp
add
stos
inc
jl
pushf
fwait
in
mov
dec
out
cmp
cltd
sub
sub
dec
jp
inc
in
mov
mov
into
pop
insl
sub
movsb
stc
jg
xor
inc
jg
jl
insl
pop
pop
pop
mov
sub
mov
cmpsl
sbb
sub
adc
mov
cmp
inc
fdivs
imul
xor
scas
jo
rcll
mov
ret
cmp
cmp
insl
mov
cs
cmc
insb
dec
cwtl
cld
cld
sub
cmp
ret
or
lock
pop
pop
popa
mov
mov
hlt
outsb
xor
push
xor
loopne,pt
bound
xchg
pusha
dec
hlt
cld
xchg
mov
pop
enter
addr16
or
int3
or
pop
leave
fistps
in
and
mov
out
scas
in
dec
add
push
jo
addr16
test
sti
test
or
mov
enter
sub
test
test
fabs
push
fmuls
pushf
inc
fbstp
pusha
jo
sbb
dec
lcall
mov
push
shlb
sub
sub
call
gs
xlat
push
pop
fxtract
push
xchg
jl
add
in
xchg
sahf
pop
fcmovb
fisubrs
mov
inc
add
popf
orl
cmp
dec
mov
fnstsw
inc
jae
insl
ret
mov
repnz
in
adc
pop
mulb
push
jecxz
mov
inc
jp
pushf
lods
push
push
pop
gs
push
dec
movl
popf
cld
es
into
in
je
jle
clc
cmc
cmp
rorl
flds
out
cmpsb
movsl
jecxz
mov
and
lret
shl
add
lea
leave
aaa
les
lret
push
in
in
cwtl
ret
jo
and
lret
lret
mov
dec
dec
xor
mov
icebp
mov
push
les
loop
sbb
bound
jno
add
mov
lods
pop
cmpsl
popf
dec
mov
dec
imul
pop
je
mov
loop,pt
pop
xorb
mov
sbb
sub
outsb
or
sahf
cmpb
roll
inc
shrl
pop
stos
aad
inc
pop
xchg
cmp
mov
jmp
jecxz
and
sbbb
xchg
jns
mov
add
mov
mov
outsb
xchg
add
inc
ret
mov
mov
imul
andb
aaa
jnp
das
shlb
in
in
arpl
mov
gs
mov
sub
mov
mov
out
ljmp
popf
out
dec
loopne
xchg
mov
in
mov
lods
fmull
negb
pop
jae
loopne
lock
sub
ja
cmpl
fwait
lods
nop
or
call
jp
and
jae
stos
out
mov
inc
push
aas
mov
or
xchg
hlt
fwait
dec
mov
cmp
shl
popf
mov
or
loope
loopne
iret
push
fnsave
pop
sub
arpl
pop
mov
lock
pop
cmp
dec
jbe
bound
cmc
dec
mov
sub
jle
iret
cmp
and
adc
das
inc
jno
jne
lcall
out
mov
mov
stc
xchg
cmpsb
sbb
inc
xchg
in
fistpll
mov
jl
xor
pop
ds
and
adc
enter
test
adc
cmp
pop
jbe
cli
mov
add
aas
fstp
mov
mov
call
xchg
or
call
icebp
mov
sbb
cli
scas
mov
fldcw
sti
test
sbb
data16
jns
mov
rorl
mov
mov
jp
ljmp
jo
cmpsb
fcmovnu
out
xor
mov
fimuls
clc
call
cwtl
clc
loop
test
popa
xchg
cmp
add
rcrl
in
dec
jmp
sar
popl
in
insb
sbb
pop
mov
pop
or
inc
cwtl
and
xchg
shll
inc
jecxz
jge
ficoml
mov
push
sub
or
ds
xor
aas
push
dec
cmpsb
or
dec
mov
and
mov
or
cmp
dec
repnz
jecxz
jb
stc
or
xor
bound
jne
inc
scas
add
dec
mov
cmp
fstpt
and
shl
sbb
popl
stos
mov
sbb
xchg
shll
into
mov
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
add
loope
pusha
addl
rclb
lock
mov
or
out
sub
movsl
bound
cmpsb
data16
movsb
sbb
cmp
imul
in
fidivl
dec
cmp
aad
sahf
daa
bound
xor
cmp
mov
inc
cmp
sti
inc
loopne
xor
cmc
pop
and
repz
repnz
inc
push
roll
jge
pop
dec
dec
add
mov
mov
lock
inc
in
faddl
jecxz
pop
or
ret
or
add
aas
lret
xor
out
sbb
adc
aas
mov
stos
sbb
sub
mull
inc
scas
cmc
sti
lret
lods
stos
inc
dec
inc
mov
cmp
cmc
jo
cmp
retw
pop
outsl
jle
xchg
ds
imul
cwtl
push
pop
or
lcall
or
icebp
pop
jo
das
mov
mov
aaa
jnp
xchg
and
enter
jecxz
mov
test
push
inc
jmp
sbb
xorl
pop
rcrb
das
xlat
enter
push
inc
cmpsb
daa
daa
cmp
aad
mov
push
mov
int
call
ljmp
push
sarb
mov
jmp
jne
lds
popf
lods
fld
mov
mov
mov
push
sbb
cmp
push
gs
jl
stc
and
stos
movsl
inc
lock
inc
add
mov
jno
popa
sbbb
pop
cmp
and
pop
jno
subb
sarb
and
in
add
push
mov
jbe
outsl
jo
mov
cmpsb
lods
xlat
and
fcmovb
scas
dec
ljmp
push
pop
add
push
lcall
adc
js
lcall
rclb
sbb
jbe
push
sbb
inc
sti
fdiv
or
push
add
and
xchg
sahf
mov
test
jno
push
mov
and
sbb
es
lock
ja
adc
cwtl
inc
and
mov
fcomip
iret
pop
cmpb
fnstsw
and
addl
into
out
adc
fidivrs
pop
inc
xchg
fidivs
fists
mov
push
push
lock
xchg
jbe
jg
sbb
adc
fistps
inc
ss
fstps
push
xor
inc
imul
adc
repz
jg
fdivrl
enterw
aam
ficoml
sar
int
jl
or
cmp
cmp
fisubs
lcall
sbb
lret
stos
sbb
mov
sub
rolb
pusha
mov
repnz
aaa
jg
mov
sti
daa
fwait
pop
xchg
mov
pusha
js
cmpsl
cmpsl
inc
dec
insb
std
push
mov
sbb
stos
mov
xor
and
loopne
pop
adc
mov
pusha
movsb
inc
imul
int
mov
inc
add
loop
adc
push
fdivr
pop
sarl
inc
dec
mov
mov
push
cld
mov
cmp
pop
jbe
dec
inc
jecxz
mov
jbe
rcr
lret
sbb
mov
xorb
insb
sbb
push
dec
dec
lock
mov
ja
test
cmc
or
mov
in
loop
arpl
add
loope
xor
jle
push
fistpll
ret
iret
xchg
into
ljmp
imul
push
add
sub
dec
ss
xor
xor
jp
push
mov
pop
inc
sub
adc
mov
add
jb
pop
xor
cmp
sbb
sbb
fiaddl
jo
sub
pop
loop
push
es
push
loopne
inc
cli
mov
fstl
cmp
cmp
test
dec
test
mov
mov
xor
cmp
sbb
add
xchg
jp
fwait
test
mov
test
fimull
inc
sub
ret
sub
pop
ret
sub
or
add
ret
dec
lock
add
int3
jnp
sbb
mov
cmp
cmc
test
mov
outsb
ficompl
int3
jbe
andl
aad
add
cmp
push
xchg
pushf
out
mov
fisubs
lcall
gs
cs
and
add
mov
shrb
enter
push
pop
gs
inc
repz
mov
push
jmp
push
out
jle
ja
xor
xor
repz
and
xchg
lods
int3
fisubrl
dec
mov
addr16
sub
addr16
popa
dec
and
addr16
push
add
stos
adc
push
xchg
lcall
lods
iret
popa
pusha
xchg
pop
outsb
rcrb
incb
dec
mov
pushf
cmc
mov
int3
call
jecxz
pop
jp
pop
loop
cli
gs
ss
sbb
iret
fwait
mov
push
cmp
test
and
cs
outsb
adc
inc
xlat
inc
es
push
sbb
cltd
cmp
outsb
mov
wbinvd
xchg
aam
push
mov
call
adc
pop
adc
mov
and
add
mov
scas
dec
cmpsb
movb
pand
in
loopne
jae
xlat
pop
repnz
insl
dec
in
scas
icebp
pusha
mov
adc
mov
xchg
inc
imul
inc
repnz
insl
rorl
mov
cmp
cmp
les
lcall
cmp
mov
mov
mov
pop
stos
sbb
and
out
imul
pop
iret
dec
iret
ljmp
mov
pop
jbe
sti
and
ficoms
xor
or
out
mov
imul
in
lock
mov
jb
int
cmp
ret
bound
enter
gs
cwtl
rcrb
fnstcw
inc
scas
addl
repnz
daa
add
arpl
cli
inc
add
fadd
nop
pop
insb
gs
ror
testb
and
dec
sbb
inc
mov
ds
jb
ret
andl
fdiv
xor
bound
out
jle
dec
mov
mov
dec
xor
repz
data16
sbbl
les
adc
testb
mov
push
pop
pusha
pusha
dec
iret
insl
push
cmp
adc
xor
arpl
stc
inc
test
xchg
mov
or
inc
cmpsl
lret
roll
xchg
dec
dec
xor
int3
sub
cld
mov
and
adc
mov
inc
mov
xlat
push
lock
shll
and
bound
xlat
mov
adc
push
dec
inc
jl
lods
jns
cltd
test
push
fsubrl
into
sbb
sbb
dec
movsl
and
sbb
xor
cmp
cmpsb
sbb
fsubrs
loop
push
dec
lock
cmpsl
mov
ret
cmpl
sbbb
cmpsb
mov
shlb
and
cwtl
ja
test
test
xchg
push
scas
shlb
mov
xchg
dec
mov
addr16
mull
mov
enter
mov
jp
mov
enter
inc
aaa
cltd
test
jo
out
push
repnz
jne
fildll
xchg
imul
test
xlat
cmpsl
and
mov
idivb
in
xchg
je
sub
je
out
mov
xchg
sbb
inc
pop
pop
in
jl
push
pop
pop
out
lods
stos
add
aaa
aad
mov
test
mov
pop
das
outsl
call
daa
cmp
ret
jmp
divl
shlb
jmp
push
pop
xor
dec
shll
jmp
pop
push
jg
inc
outsb
sti
js
cmp
andb
stc
pop
jge
shrb
mov
dec
fisubs
mov
in
mov
jnp
fldcw
pushf
inc
shl
outsl
std
push
nop
ja
mov
jg
mov
or
cltd
stos
mov
pop
sbb
cwtl
dec
jne
mov
xor
filds
cmpsb
ljmp
pop
fdivl
push
pop
and
iret
cmp
inc
cmp
data16
jecxz
mov
popf
loopne
xchg
aaa
xor
imul
nop
sub
rcl
push
push
add
pusha
dec
mov
inc
stos
clc
pop
push
push
xchg
fwait
mov
mov
out
jecxz
into
loope
or
sbb
mov
push
rorl
sub
insl
jecxz
imul
push
or
mov
lods
orb
pop
mulb
sbb
xchg
push
mov
call
sahf
push
sub
cltd
inc
fdivrl
cmp
mov
inc
popf
gs
or
test
cmp
xlat
jbe
xlat
and
jnp
sahf
insl
dec
paddq
push
and
inc
popf
test
sbb
jnp
aad
push
lret
mov
lret
test
sbb
testl
in
rolb
ret
push
icebp
cmp
into
mov
cmp
xor
cmp
cmp
test
xor
push
js
xchg
sub
imul
arpl
adc
sbb
into
pop
ljmp
leave
xchg
adc
adc
mov
lahf
pop
cmpsl
js
ficompl
fisttps
lret
inc
mov
fldcw
mov
jge
adc
pop
fistpl
mov
dec
pop
iret
pop
pop
ljmp
andl
mov
ret
loope
dec
add
adc
mov
sbb
lcall
jp
pmulhuw
out
test
inc
pop
xor
call
mov
xchg
psubusw
int3
out
jmp
cmc
xchg
pop
jecxz
cmp
in
in
push
test
add
jecxz
push
outsl
dec
pop
stos
lea
mov
stos
scas
sbbl
or
repz
xchg
cmp
add
and
sarl
out
xchg
pop
adc
push
push
inc
adc
mov
mov
xchg
push
xchg
push
es
mov
ja
sub
movsl
push
sbb
and
xchg
cmp
orb
mov
dec
cmp
jmp
sbb
pushf
icebp
push
mov
in
mov
push
lods
shlb
dec
cmp
out
adc
xor
xor
cmp
into
in
lret
js
fs
inc
push
js
push
lods
cmc
inc
sti
pop
les
rcl
rcll
jnp
dec
ret
lret
imul
or
fidivrs
cs
xchg
loop
rorl
mov
lret
push
fwait
sbb
jno
fcmovb
in
test
ljmp
mov
push
clc
mov
rclb
cmc
dec
or
jge
and
jno
fisttpll
mov
stos
cmp
arpl
mov
mov
shlb
or
jnp
int3
aaa
out
sbb
add
sbb
icebp
sub
xlat
add
xchg
mov
mov
test
fstp
cmpsl
int3
in
push
arpl
push
adc
jo
cs
sbb
mov
mov
cmpsl
aaa
pop
fmul
xchg
ds
pop
dec
pop
lock
xchg
lock
mov
or
lcall
stos
scas
adc
stc
xor
cmc
rolb
cli
add
test
mov
in
inc
out
mov
adc
mull
pop
push
in
adc
imul
mov
int
in
jno
push
call
aad
call
test
lea
mov
pop
gs
xor
adc
inc
imul
fisubrs
outsb
inc
mov
sbb
push
or
xchg
and
aas
jge
cmp
cltd
lods
popa
dec
sbb
mul
push
inc
sub
mov
and
adc
sub
cmpsl
movsl
inc
add
fs
data16
jns
in
clc
ret
xchg
rolb
rolb
add
icebp
mov
xchg
ds
cwtl
jnp
push
mov
rdpmc
rcrl
int
inc
mov
jp
cmpsl
dec
mov
xor
into
sbbb
mov
and
mov
call
jns
in
cmp
stos
add
xor
mov
repnz
out
aad
cmpsl
shlb
cmpsl
pop
test
lcall
test
add
sub
or
and
mov
out
xchg
pop
inc
enter
jno
xchg
mov
pop
aad
jle
insb
lret
mov
imul
js
add
push
int
loope
or
mov
cmpsl
jl
cltd
lods
fdecstp
sub
push
mov
icebp
push
xor
xchg
aam
push
sti
ja
pop
jo
in
pop
lret
loop
xor
push
sbb
add
and
lods
insb
mov
shll
ret
outsl
cld
push
addl
inc
push
jnp
outsb
sbb
loop
jbe
fs
outsl
jo
or
mov
inc
mov
fimull
xchg
ljmp
inc
fisubrs
sbb
xor
xchg
xchg
inc
aad
jecxz
xor
cmp
inc
fadd
mov
sbb
jmp
sbb
pop
sbb
pop
cmp
in
int
pop
aam
push
stc
das
or
fistpll
cmp
add
shlb
sbb
or
fwait
lahf
and
pop
sub
push
cld
and
call
push
sub
xchg
sub
out
dec
fistpll
leave
mov
cmp
mov
mov
cmp
or
add
and
int3
mov
sbb
xchg
cwtl
mov
subl
pop
ljmp
subb
jle
xchg
dec
mov
iret
aam
out
push
stos
das
add
inc
in
mov
ja
ljmp
cmp
jae
pop
cmc
jg
sbb
inc
adc
jge
jmp
xchg
mov
jp
addr16
jbe
cli
jae
in
ljmp
xor
repz
cltd
and
xorl
or
fsubrs
and
push
dec
pop
and
popa
and
jl
adc
cltd
es
dec
sub
xor
fst
push
pop
sub
jmp
daa
cltd
in
lret
pop
bound
fiaddl
sbb
mov
or
imull
cmp
push
adcb
and
push
jne
or
imul
jmp
mov
daa
adc
je
dec
pusha
outsl
loopne
fnstcw
outsb
test
mov
popa
mov
adc
add
xor
jns
pop
jbe
push
sbb
and
movsl
into
or
clc
cld
push
mov
insl
sarb
test
dec
inc
loopne
or
mov
xchg
clc
sarb
mov
xchg
scas
cmp
sub
sbb
xlat
out
cwtl
iret
jo
stos
out
or
dec
lods
inc
xchg
inc
lods
int
xor
test
push
fcmovnb
fisubrl
filds
std
or
lds
push
pop
xlat
sub
nopl
call
clc
jb
push
shrb
pushw
dec
inc
inc
cmpsl
xchg
cmp
lahf
xlat
adc
jae
iret
pop
jbe
or
mov
ss
rclb
ficomps
dec
fadd
nop
or
add
mov
mov
out
add
xchg
mov
or
mov
test
sahf
fisttps
cld
lea
fsubrs
mov
adc
les
js
test
fucom
inc
cmp
das
xchg
xchg
scas
movsl
and
mov
mov
add
and
rol
xor
cmc
lds
mov
xlat
fisttps
shll
std
pop
pop
or
lds
jge
jne
mov
inc
leave
and
stos
xchg
inc
lock
test
enter
orb
and
sbb
xlat
cltd
dec
fwait
dec
xchg
push
ss
push
movsb
repz
lcall
inc
icebp
sub
jge
fmulp
fldenv
lret
sub
sub
sbb
testb
ss
fbld
js
in
or
jecxz
hlt
stc
mov
pop
push
lds
sub
dec
pop
out
or
repz
popa
lods
imul
push
fwait
outsb
decl
vmovsd
jns
jns
or
stos
xchg
sub
nop
aas
or
test
mov
ror
push
lahf
push
push
shrl
adc
iret
fstl
loope
nop
outsl
and
or
inc
sub
mov
pop
push
dec
mov
cmp
movsl
lahf
gs
mov
ret
jp
and
sarl
icebp
mov
outsl
mov
sbb
rcrl
fimuls
outsb
jns
jns
sub
out
jmp
jmp
mov
or
shll
out
adc
movsl
sbb
sbb
in
xchg
mov
sbb
push
dec
sub
pop
inc
adc
popf
inc
je
fnstenv
push
int3
push
ljmp
fwait
add
loop
push
adc
scas
icebp
push
orb
lods
cmp
adc
nop
cld
jg
xor
loopne
arpl
adc
push
out
mov
enter
ficompl
dec
jbe
mov
loope
shl
mov
cmp
jno
push
xchg
cltd
rep
add
sub
pop
loop
pop
inc
mov
out
loop
call
test
pusha
mov
test
jbe
inc
pop
lods
aaa
adc
jo
mov
xchg
xchg
lahf
xlat
mov
xlat
outsl
xchg
repz
ja
fisubrl
jl
pop
mov
inc
cmpsb
pop
nop
jge
je
xor
lcall
lret
sahf
mov
and
loope
lret
sbb
cld
insl
xor
popf
inc
mov
and
sub
inc
jb
lret
xor
fstps
pop
aad
popf
mov
nop
jns
sbb
sbb
aad
push
into
jb
push
clc
pop
mov
xchg
sub
lods
les
call
jecxz
mov
or
enter
test
rcll
repz
cmp
dec
sub
push
adc
adc
or
sbb
rcrl
push
mov
shll
scas
pop
xor
jle
dec
cmp
icebp
jge
mov
cmp
pop
dec
mov
js
or
inc
dec
es
mov
lea
inc
ja
je
xor
call
fisubrl
outsb
mov
adc
vpunpcklwd
pop
or
pop
es
repz
lea
call
pop
aaa
ficompl
sbb
enter
lret
dec
sub
push
sbb
push
out
pop
mov
rolb
jo
addr16
sbb
jnp
push
xchg
nop
lock
jecxz
test
fucomi
clc
mov
add
and
pop
rcll
mov
je
shr
and
sahf
add
push
mov
adc
pop
icebp
sbb
les
jnp
push
push
scas
pop
xchg
push
leave
adc
mov
out
popa
jbe
ljmp
jg
scas
xor
movb
aam
int3
jbe
lcall
mov
mov
sub
js
test
add
into
push
mov
das
or
ljmp
cld
flds
inc
scas
test
es
lds
cmp
xchg
and
loopne
xor
add
test
sbb
inc
push
fwait
or
out
jmp
xor
sub
mov
mov
dec
push
jbe
push
stc
push
insb
aaa
mov
xchg
adc
sbb
int
xor
out
jp
sbb
insb
addr16
pop
or
mov
pop
lahf
cli
out
adc
inc
pop
call
push
inc
xor
mov
imul
lahf
push
mov
pop
mov
add
dec
push
or
xor
in
les
dec
xchg
into
and
test
test
adc
decb
push
fstl
cmp
stc
adc
ss
sub
xlat
and
movsl
push
push
fistpll
jmp
fistl
mov
icebp
fnclex
sbb
pop
mov
data16
es
in
or
push
and
dec
loopne
cmp
inc
stc
iret
mov
je
xchg
push
dec
push
cld
clc
push
sub
es
or
add
pop
jecxz
cmp
jae
xchg
orb
mov
mov
lods
sbb
stc
pop
push
fldl2e
mov
add
cmp
push
sub
adcb
test
movsb
dec
add
jmp
sbb
push
stos
loop
adc
xlat
jo
stc
lret
mov
enter
lahf
jns
mov
mov
pop
lret
push
insb
and
pushf
mov
sbb
pop
shufps
jle
xor
add
stc
les
or
adc
cs
mov
sahf
sbb
mov
jnp
push
out
ja
push
mov
mov
les
mov
jge
ds
and
test
ss
xchg
daa
repnz
mov
repz
sbb
clc
hlt
stc
je
daa
xchg
in
jb
aam
sbb
ss
xor
dec
jbe
in
in
in
stc
and
into
sub
scas
lahf
or
add
cmpsl
sub
add
out
push
scas
dec
ret
cmp
stos
pop
outsb
push
cmp
outsb
pop
testb
mov
mov
dec
jg
push
dec
dec
test
ret
es
jno
add
mov
aam
fistpl
std
sub
rcrl
sub
inc
xor
hlt
mov
ret
pop
add
call
cmpl
xchg
pop
push
in
or
fdiv
fwait
push
mov
imul
clc
imul
out
data16
xor
jae
cmpsl
lcall
stc
fidivrs
mov
mov
or
dec
inc
xor
inc
pop
fs
jns
out
lods
mov
test
cltd
adc
lods
jp
mov
ja
jge
movaps
mov
mov
mov
inc
add
stc
jmp
mov
test
imul
call
movsb
std
dec
push
jg
add
sbbl
rcrl
scas
leave
fwait
sbb
test
or
or
push
pop
sbb
sub
xor
insb
add
add
mov
fisubl
fmull
shrb
push
fcoml
test
and
add
mov
fidivs
mov
xchg
lret
xor
push
pop
bound
lods
cmp
push
lock
ret
mov
cltd
in
jnp
mov
ret
inc
das
out
xchg
test
mov
daa
dec
mov
faddl
je
jno
mov
and
mov
jo
xchg
push
fucom
les
fsubrp
mov
xor
addb
js
push
jg
imul
ret
push
repnz
jb
sbb
stos
movsb
sti
push
push
test
nop
xchg
inc
mov
add
dec
inc
and
stos
dec
dec
sub
xchg
repz
movsl
popf
in
or
decl
add
push
ss
jne
sub
jge
push
dec
cmpl
dec
das
testb
movsl
pop
mov
mov
sub
cmp
mov
ss
div
mov
add
or
jle
cmp
jg,pn
inc
xchg
mov
sahf
lea
sub
xchg
sub
dec
xor
and
ljmp
mov
dec
cmp
add
js
mov
das
inc
mov
gs
cmp
pushf
out
fdivr
fldcw
out
push
lds
add
and
out
jle
sbbb
sarb
and
cmpsb
lods
cltd
mov
icebp
xor
lods
repz
icebp
cwtl
jmp
xchg
cmpsl
daa
inc
and
cs
and
jnp
and
lahf
push
mov
bound
rclb
in
xor
mov
cli
fdivl
mov
or
inc
jg
arpl
mov
add
lahf
xchg
sub
jmp
arpl
and
lcall
jp
inc
push
xchg
repz
lcall
ljmp
imul
addr16
inc
pop
push
sahf
and
push
clc
aaa
cmp
lods
xchg
jl
or
or
mov
notb
jecxz
icebp
rorb
lret
daa
pop
pop
fldcw
jnp
add
xor
dec
int
sbb
push
rcr
ja
and
or
dec
and
es
std
sahf
pop
lret
push
dec
aas
adcb
mov
mov
in
and
outsb
lods
mov
call
cld
test
jno
sub
cmpb
test
adc
mov
push
jne
mov
jne
orl
and
shr
imul
jnp
outsl
or
push
out
les
lret
adc
stc
mov
push
sahf
add
movsl
inc
btc
cmp
das
push
adc
lcall
mov
dec
jmp
fildll
test
mov
cld
sbb
iret
rclb
ret
xlat
lock
call
aas
inc
mov
loopne
and
mov
je
jge
bound
fistl
daa
popf
pop
mov
test
out
xor
loope
aam
sar
pop
fcomip
xor
mov
sbb
enter
sbb
mov
or
or
xor
scas
aad
test
into
pop
lods
xor
inc
pop
xchg
dec
or
inc
in
mov
jnp
ds
mov
fnstsw
addr16
into
pop
sub
lods
aad
or
xor
pop
je
loope
adc
addr16
cli
push
out
cli
shll
jmp
loopne
and
add
push
shlb
ss
fbstp
cs
decl
aam
sub
iret
mov
das
loopne
xor
inc
mov
cmp
subl
cltd
add
repnz
adc
loop
js
xor
dec
jo
pop
bound
int3
aaa
add
cmp
iret
inc
popa
aas
mov
push
cmc
jae
xor
mov
clc
dec
inc
adc
fisubs
dec
pop
scas
call
fwait
dec
sub
mov
or
ds
shrl
mov
xor
mov
loopne
or
adc
xor
pop
cltd
mov
jb
enter
push
sti
pop
or
adc
cmpsb
imul
outsl
mov
lahf
and
mov
mov
orl
repnz
mov
fidivrl
mov
std
push
sub
sbb
insl
xor
pop
push
jmp
test
jns
mov
in
adc
sahf
enter
push
and
mov
les
cmp
call
cld
adc
add
add
mov
test
std
arpl
punpckhbw
fwait
dec
mov
inc
punpcklwd
add
cld
fwait
negb
xchg
inc
out
inc
rcrl
mov
daa
cmp
mov
imul
loope
orb
es
lahf
jne
pop
sub
add
std
pop
or
test
dec
das
lods
add
pop
lret
add
push
mov
lcall
mov
leave
push
fcoms
iret
cmp
mov
mov
sub
repz
cmp
setbe
and
loop
inc
leave
mov
xor
push
xor
xor
and
jg
or
xor
lods
mov
mov
dec
xlat
in
imul
xchg
jg
out
jp
shrl
dec
mov
xchg
xchg
lcall
loopne
sbb
sub
stc
mov
fsubrl
pop
out
adc
jmp
movsl
push
stos
int3
fsts
inc
cmc
inc
mov
xor
arpl
arpl
and
ljmp
xor
mov
jl
or
mov
inc
call
shrl
inc
outsl
iret
xchg
pop
xchg
fdivp
imul
pop
cmp
sbb
mov
pop
imul
xchg
adc
test
sub
or
push
pop
push
in
xchg
sub
inc
sbb
push
xchg
daa
ror
sub
test
xchg
jmp
mov
cmc
imul
adc
inc
rcr
pop
inc
mov
xchg
clc
aas
sarl
aaa
pushf
dec
push
sbb
icebp
lods
lock
mov
pop
push
scas
pop
js
lock
stc
add
sbb
arpl
or
clc
int
xor
pop
cltd
in
fiadds
outsl
icebp
sub
and
or
or
cld
sahf
adc
shrl
call
xchg
mov
pop
adc
imul
in
stos
sbb
fs
ret
mov
add
mov
and
xor
cmpsb
fisttpll
ss
add
shll
fmuls
push
jl
in
pop
or
push
xchg
add
scas
in
pusha
pop
out
sub
push
cs
sarl
aam
mov
dec
jp
sub
xchg
pusha
push
jle,pn
mov
sub
aad
or
mov
mov
arpl
or
sbb
loop
mov
sbb
push
jo
sub
adc
hlt
and
dec
daa
inc
popf
jnp
popa
xchg
add
ds
push
xor
push
ds
sbb
popa
testl
jg
cli
test
daa
add
or
daa
or
jmp
arpl
incb
xchg
add
pop
push
daa
add
clc
cmp
pop
adc
daa
jl
xor
push
cs
mov
stc
andb
test
and
pop
xlat
sbb
mov
arpl
pop
xchg
jbe
scas
jbe
js
cmpsb
push
imulb
cmpsl
lods
movsb
xchg
adc
dec
adc
or
push
int
lret
in
lock
jae
ss
jg
jbe
xlat
sbb
aam
and
add
faddl
dec
sti
test
call
push
fldt
popa
inc
faddl
push
popf
or
outsl
and
mov
sbb
pop
inc
gs
aas
xchg
shll
xchg
sbb
pop
cmpl
lahf
into
in
in
adc
push
xchg
add
dec
dec
stc
pop
dec
hlt
das
pushf
daa
xor
lods
loop
aas
lock
and
fs
ljmp
movsb
mov
dec
sahf
fstpl
push
jno
jne
xchg
or
sub
scas
dec
inc
movb
out
xchg
cmp
push
push
mov
test
and
imul
dec
xor
ja
inc
daa
or
jp
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
push
jnp
push
or
addl
sbb
sub
pop
add
std
mov
xchg
clc
or
push
inc
dec
fmul
adc
shlb
lods
adc
insl
sbb
mov
repz
push
mov
jge
mov
dec
and
xlat
pop
push
jle
mov
cmp
nop
orl
sbb
popf
shll
xor
les
mov
ss
outsl
repnz
sbb
lahf
jge
rorl
aas
add
jo
lods
and
add
dec
arpl
inc
mov
cmp
xchg
pop
mov
gs
pop
cmpsl
aam
lret
adc
and
insl
and
cwtl
xchg
mov
mov
fs
out
lahf
push
cmp
mov
fxch
jp
outsl
ret
inc
in
in
mov
in
adc
adc
mov
test
mov
push
aam
push
ret
movsl
sub
cs
ljmp
stos
or
test
cmp
and
mov
gs
testb
adc
daa
xchg
rolb
in
xchg
inc
fldenv
xor
jno
xor
adc
or
jp
push
mov
cld
call
pop
lods
ds
fisttpl
jge
jae
jbe
orb
fdivrs
sbb
or
fistps
push
and
lods
inc
iret
sahf
fimull
sub
into
std
aad
mov
aas
or
outsl
dec
iret
shl
ljmp
bound
jp
test
in
mov
inc
or
jo
jg
mov
fcoml
orb
cmp
enter
sahf
test
imul
mov
sub
cmp
jne
dec
shrb
rol
lahf
mov
jnp
jmp
xlat
jae
aam
push
sbbl
lods
push
xor
dec
cmp
and
cs
adc
imul
push
addr16
negl
mov
and
popf
cmp
aas
sbb
mov
stos
mov
sbb
mov
xchg
mov
dec
aad
pushf
lret
nop
pop
xchg
jle
movsb
mov
jmp
arpl
clc
mov
xchg
push
or
mov
and
cmpsb
or
aaa
sbb
xor
and
insl
call
xchg
xchg
and
jb
lds
mov
call
pop
lds
shlb
jae
daa
scas
push
xor
daa
cmpsb
xor
dec
inc
mov
pop
loopne
pop
dec
and
xor
lods
mov
aam
int3
test
lret
je
xchg
dec
std
dec
pop
addr16
jae
and
mov
mov
xor
out
iret
negl
movl
sub
cs
mov
rorl
pop
outsb
mov
add
pop
pop
lret
stc
pop
movsl
insb
test
pusha
cld
mov
popf
pop
lock
pusha
aas
mov
xor
leave
popa
fmull
adc
ljmp
xchg
mov
loop
pop
gs
stos
pop
pop
cmp
lods
cmp
lods
pop
jb
sub
fistps
adc
jno
cmpsl
add
mov
push
inc
dec
ja
shlb
push
sub
jge
mov
movsb
test
sbb
xchg
mov
jno
mov
push
inc
xor
and
imulb
int3
adcb
mov
push
jno
in
jecxz
shrb
inc
push
xchg
sub
jp
mov
gs
and
mov
fisubrl
loope
hlt
das
cltd
cmp
pushf
inc
mov
cmp
fwait
add
bound
aaa
push
and
xor
ds
loopne
dec
loop
xchg
pop
pop
jg
ljmp
aas
stos
or
test
xchg
fldcw
push
xchg
mov
loop
cmp
insl
adc
and
sarb
jo
push
xchg
sbb
addr16
xchg
mov
push
repnz
inc
mov
loop
lret
mov
add
sub
sahf
xchg
aaa
xchg
loope
mov
jnp
jb
inc
and
pop
clc
movd
sbb
adc
fldl
push
mov
add
sub
push
mov
in
adc
jne
ror
das
jle
scas
pushf
in
lock
rorl
mov
ja
jb
cmpsb
sub
repz
aaa
xadd
xchg
cmpsb
pop
jne
and
jge
adc
or
jmp
sub
leave
insb
mov
leave
xchg
and
pop
sub
adc
mov
dec
out
cmp
jae
daa
lods
cmp
ret
or
inc
mov
daa
add
mull
inc
lds
rclb
push
adc
jp
in
jle
or
mov
sub
add
pop
mov
mull
push
inc
test
fsubrl
sahf
add
cld
xchg
mov
adc
and
pop
stos
mov
push
add
jge
push
shrl
movsb
pop
cmp
cmp
repnz
fwait
push
sub
dec
ljmp
out
mov
popf
mov
stos
mov
xchg
push
jns
add
pusha
dec
adc
imul
fsts
test
xchg
push
cltd
dec
jae
insb
adc
sbb
push
mov
inc
imulb
mov
roll
inc
mov
add
fwait
pop
enter
fnstenv
lds
cmp
xor
push
cmpsb
addr16
repz
cmpsl
lods
dec
out
add
xlat
add
loope
hlt
pusha
add
xor
xchg
inc
or
outsb
pop
inc
pop
pop
aad
sub
or
aad
aas
push
ljmp
sahf
dec
movsb
int
mov
xor
mov
pop
mov
or
pop
call
stos
addr16
enter
lods
and
stc
inc
js
iret
dec
out
push
jnp
adc
ret
inc
pop
and
pop
rcr
mov
stc
mov
jmp
jmp
js
lock
xchg
pop
jo
jb
leave
mov
xor
mov
jnp
jle
les
jno
aam
icebp
mov
sbb
andb
mov
cld
pop
cmp
inc
outsb
jp
inc
int
andb
pop
lds
dec
xor
cmpsl
jmp
pop
xor
lea
shrl
xchg
jmp
fldenv
or
dec
clc
pop
pop
sbb
push
jge
fistl
xor
fbstp
movsl
fnstenv
in
inc
and
sbb
and
push
aas
and
xor
push
leave
xchg
push
outsb
xchg
mov
xchg
dec
aaa
pop
leave
mov
roll
and
sbbb
mov
push
add
mov
pusha
mov
push
mov
jmp
xchg
jmp
iret
pop
pop
mov
lea
jecxz
mov
dec
pop
jl
outsl
ds
inc
imul
mov
jae
sbb
lcall
cmpb
adc
cmpsl
lock
mov
sub
imul
inc
mov
jns
jge
sbb
jnp
add
add
in
jo
inc
or
jb
mov
test
nop
jbe
mov
loop
fistpll
out
lds
aaa
xor
adc
lds
pop
ret
and
mov
dec
push
push
iret
outsl
pop
stos
jbe
sahf
inc
mov
aad
push
jno
stos
stos
push
or
inc
lods
add
daa
jle
and
repnz
aaa
or
inc
in
and
adc
movsb
pop
lods
xor
mov
inc
push
xchg
jle
mov
cmp
pop
bound
loopne
xchg
mov
add
xor
movl
jge
decb
lret
jmp
jne
xchg
imul
popa
jmp
pop
dec
mov
jmp
push
jp
or
cmp
rcl
mov
pop
jb
inc
test
clc
sbb
add
mov
mov
inc
mov
inc
dec
bound
imul
and
mov
jb
xchg
or
push
xor
xchg
jp
dec
repz
adc
xlat
fnstenv
test
mov
push
lock
inc
pushf
jl
or
test
adc
pop
shll
mov
adc
or
orl
inc
mov
cmp
cli
xchg
jne
mov
rcll
mov
xchg
in
andl
jecxz
ljmp
adc
scas
movsb
mov
xchg
mov
xchg
test
mov
aas
imull
sub
out
jp
sahf
ret
mov
dec
or
sarb
fadd
cs
out
dec
cmp
nop
lods
in
push
notl
xchg
xor
insb
mov
sub
mov
pop
push
fmul
jmp
mov
aaa
pop
cmp
push
dec
cmc
pop
jle
xor
sti
sbb
movsb
leave
inc
inc
cmp
dec
js
test
pushf
cwtl
jae
stos
in
call
imul
shl
mov
ljmp
mov
mov
jmp
jecxz
cmpsb
rcrb
xchg
stos
pushf
daa
push
inc
into
inc
mov
xor
inc
jne
mov
xchg
cld
mov
sub
ds
andl
cmp
sub
jno
dec
inc
cmp
and
xor
addb
cli
ja
mov
mov
or
outsb
dec
add
jae
aad
and
push
xchg
ficoms
outsl
jg
cwtl
mov
xchg
movsl
test
sub
cmpl
aad
stos
sub
xchg
mov
and
imul
dec
dec
outsb
mov
or
mov
pop
je
out
mov
sub
iret
add
stos
sbb
data16
lea
and
xchg
ds
push
pop
mov
enter
cli
or
bound
rorl
mov
jbe
out
jl
and
fsts
fidivrl
jbe
and
xchg
mov
lea
pop
push
jge
or
mov
add
mov
fwait
mov
decb
cltd
int
scas
andl
dec
nop
int3
dec
cmp
fsts
and
std
cmpsl
jno
iret
inc
cmpsl
std
pop
or
xor
xchg
imul
jmp
mov
divb
outsl
clc
jb
roll
dec
and
inc
test
cmp
jns
inc
adc
inc
fisubrl
test
xor
out
sbb
pop
test
dec
test
pushf
mov
adc
stos
push
dec
lods
inc
inc
stos
inc
arpl
lods
loope
push
repnz
sbb
cmp
jne
fildl
pop
cmp
fisttps
mov
or
out
sub
mov
pop
mov
repnz
popf
pop
test
sbb
inc
rcll
mov
pushf
ljmp
lea
jl
pusha
mov
push
push
jno
adc
pushf
xlat
pushf
inc
aad
scas
scas
outsl
mov
pop
mov
xor
mov
xor
into
notl
enter
mov
rcrb
dec
jno
add
pop
cltd
and
in
dec
sahf
push
push
loop
mov
out
mov
mov
je
and
icebp
dec
rcr
adc
in
jne
imul
dec
or
loopne
mov
call
pop
adc
cli
jl
mov
arpl
ljmp
fimull
test
js
sbbl
testb
inc
xchg
mov
stos
inc
adc
pop
sub
movsb
pop
jnp
mov
jecxz
sbb
enter
jmp
mov
jmp
xchg
cmp
sbb
pop
ret
push
lds
fcoms
xacquire
lret
mov
mov
xor
lea
test
pushf
dec
push
test
mov
lret
sbb
imul
add
push
addr16
cmp
in
mov
mov
lret
fists
pop
int3
mov
or
je
fwait
add
adc
push
cli
cmpl
jno
add
mov
cli
cmp
jmp
xchg
in
out
mov
mov
test
lahf
cmp
adc
fwait
cwtl
popa
push
mov
xchg
mov
xor
lods
lret
fldt
push
ljmp
dec
loope
rcrb
imul
cmp
xor
pop
jns
xchg
xor
insb
jb
stc
mov
xchg
adc
aas
rcl
cmc
sub
fbld
jl
cmp
sub
mov
lahf
in
mov
dec
mov
xchg
cli
dec
cmp
and
sbb
iret
and
mov
dec
xchg
jle
jnp
jle
jnp
or
inc
rorb
sub
dec
jno
rcrl
and
cmpsl
mov
fsubs
leave
mov
iret
dec
aas
add
inc
fisttps
pop
cmc
into
aam
cmp
mov
and
and
lock
and
and
cmc
jle
cmp
inc
aad
scas
imul
pushf
rorb
inc
xchg
mov
push
testb
jmp
mov
adc
rcll
cmp
xchg
loope
inc
out
sub
mov
dec
mov
inc
mov
dec
xchg
lea
dec
xchg
cmp
scas
jl
enter
xor
lret
push
xchg
out
mov
sarb
xchg
mov
inc
inc
ss
cmp
sub
subb
mov
and
dec
adc
push
sbb
pop
mov
add
test
or
and
shlb
cmp
ficompl
ja
and
mov
and
popl
adc
inc
enter
cmc
popa
mov
pop
adc
gs
mov
inc
pop
or
xchg
sarl
hlt
mov
adc
cmpsl
in
test
jno
inc
lret
jmp
sbb
int3
mov
mov
xor
aam
popf
xorb
rolb
xor
sti
jae
pop
xchg
pop
dec
or
push
dec
mov
cmp
std
mov
mov
adc
jno
das
xchg
sahf
cmp
xchg
cmp
jge
loope
bound
aad
mov
les
cmp
lcall
pop
jecxz
movsb
mov
shll
push
mov
or
adc
fistl
xor
xchg
lds
xor
mov
pop
or
mov
fistl
daa
cmc
adc
fnstcw
sbb
icebp
ret
ret
rorl
mov
popf
in
push
rcrb
mov
lods
push
pusha
ljmp
adc
test
insb
push
inc
test
pop
pop
fimull
lahf
xchg
movsl
ds
pmaxub
sbb
jmp
push
scas
mov
add
aaa
cmp
aam
fsubrs
or
sti
sbb
jle
divb
out
jne
jnp
aad
iret
mov
sbb
lret
sub
mov
and
mov
imul
push
fisubs
xor
fucomi
pop
or
add
icebp
outsb
adc
dec
push
stos
cwtl
repnz
data16
push
fsubl
and
call
ret
dec
test
dec
sub
cltd
add
push
or
xchg
orb
and
lret
mov
movsl
pop
jno
and
cli
popa
lods
inc
mov
popa
lods
in
movsl
push
scas
dec
xor
sbb
adc
add
repnz
pop
jl
push
fiadds
inc
notb
lcall
std
adc
xchg
fdivl
outsl
insb
pop
sbb
nop
sbb
out
cli
mov
ss
fldt
loopne
push
push
in
xchg
push
ds
inc
push
xchg
add
sub
sub
dec
insb
dec
add
aam
js
inc
in
xchg
dec
sbb
sub
push
sbb
fcomi
sti
fisttpll
out
fidivrs
xlat
add
imul
fwait
dec
cmpsl
sub
jo
test
lcall
inc
mov
push
push
inc
aam
dec
cmpsb
adc
sbb
mov
xor
fs
xor
sub
dec
sbb
add
add
aam
jmp
cltd
js
cmc
jmp
jle
fdivrs
sbb
and
sbb
xor
lcall
iret
fldcw
and
leave
mov
jle
mov
cmp
push
rcr
mov
popa
sbb
outsb
sti
mov
pusha
mov
sub
test
test
outsl
fstps
sub
pop
cwtl
cltd
sbb
test
add
jo
jae
dec
iret
rol
or
mov
dec
xor
mov
stc
rorl
xchg
pop
add
scas
adc
out
mov
out
stos
fmull
mov
sub
jno
cs
lods
outsl
adc
insb
sbb
push
sbb
push
xchg
fxch
adc
sahf
and
mov
pop
lahf
or
add
cmp
ja
ret
and
xchg
out
mov
mov
stos
add
xchg
sub
sbb
add
pop
addl
mov
mulb
and
imul
andl
shlb
pop
sbb
mov
adc
cwtl
pop
pop
xor
mov
or
inc
push
rclb
pop
push
mov
popl
pop
dec
mov
fnstenv
mov
repnz
pop
imul
nopl
dec
dec
inc
addr16
scas
mov
dec
xchg
xor
pop
hlt
and
rcrb
js
mov
repz
mov
fisubs
jmp
sbb
adc
cli
fnsave
xor
add
cli
bound
and
movb
andb
pushw
outsl
or
hlt
test
cmpsb
and
fimull
fdivrs
jnp
mov
gs
out
call
cmpsl
fcoml
adc
rcr
or
and
sbb
xchg
fsubl
lock
fsubrp
imulb
sbb
inc
stc
clc
jb
popf
mov
call
repz
cmp
xchg
ret
sbb
push
es
repz
aad
mov
popf
xor
adc
sub
xor
cmpsl
sbb
mov
xchg
shrb
dec
jne
loope
cmp
ret
test
mov
push
xchg
mov
dec
push
cmp
mov
adcb
rclb
in
pushf
push
cmpb
xchg
xchg
mov
lret
jl
insl
sbb
scas
and
shl
pop
in
fcoml
jl
cmp
sub
push
insb
mulb
lods
cmp
bound
sbb
inc
dec
or
ljmp
scas
nop
mov
shrb
mov
mov
pop
xor
testl
stc
inc
add
fcmovnbe
adc
cmp
push
js
imul
cli
jge
adc
mov
fstp
jmp
fs
movsl
je
and
and
mov
mov
movsb
and
sbb
sbb
push
sbb
dec
jl
or
push
mov
mov
stc
push
fdivrs
mov
jl
or
test
dec
outsl
loopne
in
gs
sbbb
mov
add
mov
or
dec
lret
add
and
xchg
mov
outsb
into
es
in
dec
inc
xlat
test
and
mov
mov
fnsetpm(287
cli
jbe
xor
ss
dec
fwait
push
faddl
xchg
out
sbb
fucom
inc
std
stos
sub
stos
cmp
ljmp
xchg
iret
imul
int3
add
inc
sbb
jge
push
mov
inc
int
push
push
pop
andnps
mov
fcomps
inc
roll
cmp
mov
and
xor
clc
scas
aam
push
mov
sbb
inc
xchg
out
mov
enter
divl
call
fdivr
sbb
sub
xchg
inc
jmp
add
es
lahf
sub
push
ss
push
fimull
mov
lods
dec
lock
push
mov
in
mov
jae
dec
mov
clc
sub
push
decb
dec
pusha
aad
fisubrs
inc
clc
mov
aas
pop
push
js
jno
faddl
loop
push
cmpb
push
enter
sbb
ret
mov
cmpb
js
rorb
sub
mov
icebp
ljmpw
adc
std
pop
inc
xor
jne
loopew
or
js
cs
push
outsl
test
xchg
dec
adc
repnz
push
mov
int3
and
loope
xor
into
imul
addr16
je
push
movsl
ds
adc
lods
push
adc
pusha
shll
outsl
mov
pop
mov
loopne
pop
repnz
mov
jge
iret
loope
negl
xchg
and
adc
les
insb
push
in
in
scas
mov
sti
lods
push
loopne
sbbl
out
xchg
adc
mov
test
jge
jne
cmpsb
sbb
inc
stos
sub
inc
shl
adc
pop
xchg
out
das
mov
fisubrs
pop
add
adc
fwait
lods
cld
xchg
aaa
ljmp
idiv
pushf
adc
and
std
cmp
bound
mov
push
sbb
xchg
in
jecxz
insl
pop
data16
push
xchg
aad
push
into
mov
jmp
push
xchg
xchg
inc
inc
out
jg
into
push
enter
aam
movl
scas
hlt
mov
dec
hlt
cmpsl
pusha
mov
xor
pushf
push
sbb
mov
sbb
fdivrs
aaa
insl
imul
outsb
lret
adc
aas
insb
jns
jmp
xor
inc
dec
sbb
out
dec
pop
mov
push
test
das
fnsave
fsubrp
xchg
into
jae
jo
and
loop
mov
out
lea
dec
scas
dec
xor
lea
in
andb
cmp
mov
sbb
pop
out
jno
lock
inc
push
or
mov
mov
lret
ficompl
push
in
lret
addb
insb
std
sbb
inc
dec
pushf
int
test
orl
add
cmp
lret
inc
shrl
std
cmp
cs
sbb
rcrb
loop
movsb
push
test
lock
cmc
out
jle
and
imul
cmp
mov
push
outsl
popf
mov
ret
pop
sbb
sbb
loop
mov
sub
imul
add
popf
fdiv
sub
and
cltd
or
inc
jg
movsb
mov
push
mov
das
jmp
into
pop
push
mov
popa
rorb
jbe
shlb
mov
je
xlat
inc
mov
nop
fs
mulb
insl
pop
aad
jge
mov
cmp
pop
xchg
add
and
lret
sub
jge
cli
xchg
inc
out
notl
mov
cmp
sti
arpl
pushf
mov
fsubl
or
sub
push
dec
pop
pop
dec
aaa
jmp
aas
lcall
push
js
fistpll
stos
mov
lcall
xor
mov
js
call
adc
xchg
add
xor
push
cmpsb
int
adc
xchg
mov
mov
int
das
dec
lods
addl
mov
sub
add
mov
scas
add
les
mov
adcl
jle
aam
pop
jb
and
insl
out
jl
ja
pushl
jbe
scas
sbb
jp
and
mov
pop
lods
insl
push
or
dec
es
jge
or
rolb
sub
scas
mov
jle
or
insl
mov
loopne
es
mov
mov
fiaddl
idivl
movl
push
movl
sbb
bnd
ja
jb
enter
hlt
push
pop
ljmp
add
xchg
xor
cmpsl
jecxz
nop
jns
xor
or
fstpl
scas
divl
cmpsl
and
sarl
fisubs
push
movsl
pop
stos
push
cwtl
daa
dec
jmp
mov
add
push
push
cmp
dec
sub
repz
and
cmpsb
fsubs
out
mov
push
test
adc
cli
mov
jo
inc
dec
filds
ss
sub
mov
and
mov
push
pop
mov
lock
mov
ret
imull
decl
push
pop
jle
pushf
inc
or
and
scas
mov
test
shlb
jns
add
dec
testl
sbb
xchg
xor
arpl
aas
stos
aaa
push
mov
pop
pop
inc
daa
in
jle
movb
xchg
imul
in
lock
inc
jo
dec
lds
mov
lds
fdivrs
popf
rorl
or
addr16
xor
xor
iret
or
jle
and
or
hlt
or
stos
xor
xor
shrb
loope
sub
xlat
dec
testw
out
jns
mov
repz
call
cmp
ror
or
in
jecxz
gs
es
es
aaa
sub
mov
dec
xchg
movl
mov
mov
out
xorb
shrb
sub
or
call
rcrl
out
test
mov
mov
in
out
pop
cli
pop
enter
ds
aaa
sub
pop
inc
icebp
cmp
test
push
cmpsl
cmpsb
mov
xor
mov
and
and
shrl
and
adc
or
aas
pop
lret
mov
jnp
loop
arpl
pop
jno
mov
cvttps2pi
aad
jb
mov
sbb
loopne
mov
pop
fisubrs
mov
std
imul
sub
ljmp
sti
mov
setne
xchg
adc
cmp
inc
dec
xor
mov
out
push
imul
adc
cmpsl
xlat
pop
pop
push
cmpsb
jnp
adc
cmpsb
insl
mov
mov
jae
sub
pop
xorb
xlat
add
gs
mov
aam
sbb
dec
pushf
jl
push
jp
jg
in
es
inc
int3
pushf
cmp
stc
jnp
pushf
std
aam
cltd
insb
xor
sti
shl
pushf
jno
jae
movl
popa
and
jecxz
in
xor
lret
cmpl
gs
mov
mov
jbe
insb
xor
rcll
cmp
sarb
and
lcall
jb
add
sahf
pop
stos
in
and
mov
mov
adcl
pusha
out
lcall
sub
mov
push
cmp
pushf
pop
test
js
dec
push
mov
es
inc
fisubrl
insb
or
outsb
jp
push
xlat
jae
jmp
in
jns
xchg
ror
and
inc
iret
jg
add
addr16
jo
fucomp
fs
sahf
fadd
mov
iret
movsb
loope
xlat
int
pusha
mov
dec
add
inc
add
mov
cmc
out
loope
mov
sbb
aas
or
ror
insl
ss
xchg
mov
int3
mov
xchg
dec
sbb
cmp
and
or
push
out
lds
add
and
repz
jbe
test
jl
xchg
add
ficomps
xor
push
jmp
cltd
hlt
imul
cmp
or
mov
scas
ja
imul
cmpsb
and
loope
mov
push
lahf
add
xorb
and
mov
push
push
popa
mov
inc
push
lahf
jmp
pop
mov
imul
inc
add
cmc
mov
test
out
xchg
fstps
rclb
cltd
movsl
mov
inc
fwait
mov
arpl
rorl
cmp
movsl
sbbl
push
add
add
pop
sbb
cmpsl
push
les
mov
shr
cmpsl
pushf
inc
mov
jge
repnz
fdivl
movsl
xchg
push
and
xchg
mov
ret
push
push
push
or
sub
add
xor
lock
and
or
jb
jno
lcall
inc
lock
mov
jnp
call
mov
push
js
jecxz
mov
lods
pop
fwait
jns
jl
jge
add
and
inc
stc
xor
sub
dec
jae
lret
rolb
mov
mov
and
xor
push
rcr
pop
rorl
and
ret
mov
jo
pop
jns
loop
mov
inc
add
pop
std
fsubrl
cltd
inc
mov
add
lcall
add
or
inc
xor
dec
addr16
icebp
fstl
cmpsl
fcoms
imulb
sub
jl
add
frstor
fisubrs
in
lods
fwait
dec
mov
dec
gs
cmp
push
bound
out
scas
stos
sub
testb
repnz
push
movl
scas
jl
movsl
hlt
out
sarb
xor
test
ficoms
std
in
push
lret
pop
repnz
ret
jo
inc
xchg
xor
lea
orl
push
inc
addr16
ja
or
movsl
cmpb
out
movsl
cmp
and
mov
dec
push
jne
and
jg
inc
sbb
dec
outsl
or
push
fbld
jp
and
xchg
arpl
insl
rorl
mov
pusha
mulb
lea
mov
repz
cmp
rcll
cmp
pop
iret
out
dec
xchg
fs
mov
mov
dec
add
adc
scas
pop
shl
or
rcl
fiaddl
jb
dec
xchg
or
stos
pop
push
ss
push
notl
out
add
jns
mov
dec
loope
push
sbb
jmp
out
or
ficoml
adc
inc
loope
push
pop
adc
decl
mov
call
es
pop
ss
fimull
lds
ljmp
mov
lcall
jl
push
aas
rorl
sbb
repnz
push
sbb
ds
sub
pusha
test
pop
sarl
sti
xor
js
pop
jbe
les
dec
cli
xor
cli
repnz
cmc
stc
xchg
pop
lock
imul
pop
mov
out
gs
in
das
pop
jo
lds
out
xchg
lahf
fcompl
jmp
inc
or
lods
push
mov
and
mov
in
std
mov
or
fdivrp
mov
cmp
fsts
mov
out
aam
out
xchg
movsl
cli
adc
pusha
xchg
in
in
hlt
and
fsubr
mov
enter
and
cmp
jo
das
cmp
dec
add
xbegin
int
pop
lock
push
lret
int3
std
movsl
outsb
sub
jns
call
ret
dec
mov
nop
mov
mov
in
test
sbb
xlat
jl
adc
leave
imul
jmp
jo
mov
loop
mov
and
fmulp
add
frstor
shlb
mov
sub
outsb
loopne
aaa
aad
cmc
or
jns
sarl
fwait
dec
in
mov
imul
cmp
mov
push
push
bound
insb
xchg
insl
push
out
sbb
popf
outsl
fbld
jnp
cmp
mov
dec
insb
push
mov
sub
sbb
ficomps
cmpsl
jne
add
add
dec
jl
mov
cmp
sub
in
gs
jbe
fs
push
ja
test
sub
into
andb
push
mov
hlt
movl
mov
jmp
sbb
les
push
push
mov
jns
addl
nop
bnd
movsb
imul
mov
je
stc
mov
loopne
scas
and
pop
stos
insb
test
push
decb
std
sbb
mov
lods
sbb
jge
xchg
sub
out
inc
xchg
push
sub
std
in
mov
dec
pop
mov
cld
testl
movsb
inc
push
lods
and
or
lods
push
or
fildl
aam
mov
xlat
lahf
sbb
add
pop
insb
out
fcompl
gs
repnz
push
mov
das
arpl
ljmp
adc
imul
div
nop
jno
fs
and
je
jle
movb
inc
sbb
hlt
ljmp
pop
dec
popf
xor
xor
popf
mov
dec
mov
lea
cmc
mov
addr16
clc
pop
mov
add
add
pop
push
adc
mov
cmpsl
loope
out
ljmp
mov
iret
add
sbb
btr
mov
adc
test
ss
stc
push
adc
notl
movsb
shl
mov
jne
or
fists
movsb
jmp
push
dec
adc
jl
inc
mov
jb
jge
push
xchg
aam
in
ficoml
dec
insl
loop
rcl
mov
jmp
es
push
sub
loop
in
ret
xor
adc
sbb
and
add
xor
pop
xchg
pop
popa
xchg
jmp
fisttpll
adc
stc
fwait
push
dec
mov
jb
lods
std
scas
xchg
and
shr
ljmp
push
mov
jb
sbb
xorb
insb
mov
mov
into
mov
pop
dec
loop
push
insb
mov
mov
inc
xchg
push
cmp
dec
std
lret
xor
mov
push
jge
ss
pop
push
fs
mov
mov
fildll
imul
jge
sub
sbb
lret
adc
mov
and
push
cmpsb
mov
jecxz
add
mov
cmpb
fiaddl
push
jle
or
scas
jle
jl
sbbl
jb
test
mov
adc
jmp
sbb
jecxz
jecxz
lods
push
outsl
int
sti
repz
mov
xchg
sbb
adc
add
std
jo
in
ret
adc
sbb
out
xorl
cmp
pop
inc
fldenv
dec
add
or
inc
sbb
clc
sub
sahf
cmp
mov
sti
test
push
and
incb
mov
adc
mov
mov
push
fnstsw
scas
in
iret
cld
mov
inc
cmp
xchg
mov
js
mov
dec
add
pop
xchg
fwait
aam
pop
leave
add
and
fwait
xor
dec
loop
dec
aam
hlt
lret
add
xchg
mov
insl
adc
dec
jnp
add
call
test
mov
nop
cmp
pushf
ja
xchg
nop
xor
pop
fcmove
call
lea
or
lcall
push
scas
sub
dec
sub
mov
addr16
int
test
stos
enter
inc
fistpll
shll
jl
js
loop
push
inc
orl
mov
aam
xchg
push
inc
push
cmp
scas
inc
mov
aam
lret
pop
xchg
sub
nop
sbb
dec
pop
ljmp
shll
flds
mov
dec
mov
mov
out
mov
and
cmp
ds
pop
lods
icebp
outsb
jge
pop
movsb
cmp
mov
lret
bound
int3
int
pop
pop
aad
int
pop
sti
cmpsb
call
mov
xchg
loopne
jmp
mov
jb
xchg
adc
xchg
push
pop
stos
outsl
dec
mov
clc
cltd
sbbb
xor
xor
inc
sbb
xrelease
mov
out
pop
cwtl
jb
xchg
lret
add
mov
mov
fidivl
or
mov
outsl
xchg
push
jmp
push
scas
filds
inc
or
add
stc
and
pop
dec
jge
mov
rcrb
je
mov
mov
sub
stos
mov
int
jecxz
add
stos
mov
sbb
mov
cmpsb
insb
inc
loopne
notb
lcall
dec
mov
add
jnp
add
jnp
xchg
inc
mov
push
dec
push
mov
cltd
aaa
out
lea
repz
mov
mov
jge
movsb
mov
mov
inc
mov
test
sbb
sub
dec
xchg
imul
adc
mov
mov
mov
cmp
pop
cmp
push
mov
xor
nop
mov
js
mov
dec
push
fcoml
leave
stos
call
lret
sub
inc
movsb
sar
or
mov
imul
mov
mov
push
xchg
inc
popf
inc
dec
insl
popl
or
push
mov
and
pop
arpl
and
dec
test
mov
or
mov
add
pusha
pop
and
or
mov
xor
repnz
fisubrs
or
fildl
mov
mov
jge
gs
jb
pop
add
jns
dec
push
nop
jns
enter
cmpsl
cwtl
enter
xchg
mov
fwait
inc
ja
dec
xchg
push
jae
xor
insb
or
ror
push
imul
int
inc
subb
insb
dec
xchg
jne
add
pusha
cltd
sbb
dec
adc
push
or
pushf
incl
pop
insb
dec
aaa
jl
stc
cmp
leave
sub
enter
pusha
rcl
mov
add
ret
xlat
pop
fimuls
pop
mov
daa
lock
das
icebp
pushf
sub
pop
insl
mov
mov
sub
xchg
imul
or
jl
xor
and
ds
jo
add
frstor
xchg
shrb
add
push
push
subl
pop
pop
adc
in
push
aad
add
in
cmp
adc
fwait
add
flds
jl
dec
test
icebp
iret
inc
les
adc
cmp
icebp
jp
cmp
fcmovnu
mov
sti
popf
lahf
or
and
data16
cmp
pop
daa
ret
mov
loop
push
add
or
pop
fmull
fscale
imul
outsb
shrb
sub
jl
outsb
cmp
rorl
ja
push
push
sahf
dec
jns
mov
xchg
inc
sbb
add
sub
push
lahf
jb
stc
mov
rclb
pop
xchg
repz
outsl
or
aam
in
mov
push
xchg
add
adc
jp
sbb
or
mov
popf
arpl
decb
cmp
xor
adc
sub
lcall
inc
mov
stos
add
jne
std
xchg
cmpsl
adc
testl
outsl
jne
loop
inc
push
cmp
popa
push
mov
stc
pop
push
jecxz
out
sbb
pop
pop
add
into
je
mov
rclb
lods
cmp
inc
xchg
mov
test
adc
and
ror
dec
fbstp
clc
sub
ljmp
add
jns
arpl
inc
loope
adc
mov
cmp
iret
jne
xchg
rolb
and
roll
xor
fsubp
movsb
outsl
push
icebp
and
stc
test
fimuls
cmc
and
mov
popf
stos
iret
add
or
daa
jge
cmp
pop
filds
ds
push
fadd
jp
push
jbe
or
xor
icebp
mov
dec
mov
push
or
cmp
aaa
cmc
fcompl
subb
xchg
add
arpl
je
lret
gs
fmuls
mov
inc
les
loopne
xchg
testb
cmc
ds
pop
orb
gs
sti
mov
lea
lds
imul
jne
sbb
into
mov
orb
ret
cmpsb
add
hlt
dec
sbb
cmpsl
and
inc
cmp
mov
outsl
shlb
sub
div
sub
test
inc
or
xor
or
fsts
bound
lea
sti
dec
push
sarb
std
fs
js
mov
insb
loopne
push
push
jo
jecxz
cmpb
imul
sahf
add
aaa
mov
inc
loop
mov
xchg
mov
sbb
dec
adcl
lret
sub
push
bound
dec
mov
arpl
call
in
mov
push
sarl
cmp
and
push
mov
js
mov
pop
adc
popa
and
outsl
fwait
int
and
addr16
mov
imul
mov
lea
and
sbb
sub
inc
inc
and
xchg
mov
lcall
inc
adc
and
mov
mov
sub
pushf
push
push
pop
sub
shrb
add
repnz
mov
inc
cmp
int3
sub
dec
xlat
leave
les
push
addr16
mov
push
jb
jnp
dec
jmp
outsl
mov
aad
scas
adc
and
into
xchg
cmpsl
xor
je
xor
lds
loop
and
out
repz
jno
pop
mov
sqrtps
addl
mov
arpl
sbb
mov
xchg
imul
xor
mov
mov
loopne
inc
shlb
rcpps
and
repnz
xchg
push
and
pop
jecxz
push
and
testb
pop
cmp
jns
iret
cmp
jb
sub
push
dec
cmpsb
push
out
cmp
bound
ret
push
jb
sub
iret
ljmp
leave
xchg
add
jae
jmp
xlat
cmpsb
mov
jmp
aad
pop
mov
push
mov
insl
jno
outsb
and
inc
jo
fidivl
in
mov
sarb
inc
adc
xor
mov
aaa
pop
int3
pop
int
push
and
hlt
mov
mov
xor
sarb
jnp
popl
loop
sbb
xor
fdivr
into
pop
and
mov
jno
std
sbb
aam
pop
or
call
xchg
cmpsb
lret
stc
insl
andb
mov
dec
mov
outsb
int3
stos
mov
xchg
mov
sbb
aas
mov
push
mov
repnz
pop
push
insb
int
sub
test
pop
insb
in
je
arpl
push
aaa
rcll
les
out
jno
cmp
test
push
fistpll
cmp
shl
ret
pop
jmp
adc
ret
shlb
insb
call
push
sahf
mov
mov
std
add
adc
outsl
scas
xchg
lds
xchg
jns
cld
and
test
mov
and
fsubrs
mov
pop
sbb
test
cmp
jp
dec
loopne
and
cmpsb
push
cmpsb
add
aaa
leave
push
lret
gs
jp
mov
jl
inc
out
xor
fisttps
shl
mov
icebp
out
stos
inc
out
sbb
out
cmc
jge
push
sbb
dec
jnp
cmp
pop
and
inc
mov
outsl
xor
mov
jecxz
mov
test
sbb
pop
jbe
popf
mov
leave
dec
pushf
lods
jl
cwtl
inc
fildl
dec
je
adc
testb
insl
adc
movsb
inc
jnp
mov
imul
or
mov
mov
pop
cmp
mov
xor
inc
xchg
xor
popa
imul
pop
or
jmp
leave
fs
mov
sbb
mov
mulb
pop
dec
les
mov
and
leave
pop
stos
leave
jl
mov
pusha
jp
sbb
popf
add
aad
jbe
dec
inc
push
cmp
out
pop
push
out
imul
js
cmp
dec
mov
dec
call
xchg
push
sbbl
pushf
mov
rclb
push
movsl
movsb
lods
jle
je
pop
cwtl
scas
mov
lcall
repz
push
mov
push
and
jo
scas
in
ss
fldcw
pop
inc
dec
je
adc
aam
jae
dec
loopne
jg,pn
callw
stos
ret
fsts
int3
add
movsl
ret
insl
daa
inc
pop
inc
dec
xchg
inc
repz
sub
ja
jne
fmuls
mov
or
or
cmc
ss
pop
push
sub
nop
test
ja
mov
push
push
shl
mov
sbb
stc
add
jb
jns
ds
je
jnp
stc
cmp
xchg
xor
int
mov
inc
xchg
int3
in
lahf
cltd
pop
cmp
push
sub
mov
sbb
popf
mov
inc
pop
imul
shrl
xor
insw
outsl
push
mov
mov
pop
ljmp
adc
aaa
cmpsb
sbb
sub
mov
dec
test
mov
pop
movsb
jne
pop
pop
xor
fs
add
jg
sbb
pop
push
or
cs
mov
nop
mov
ret
jb
lret
ljmp
std
dec
fs
xlat
dec
insb
xchg
in
pop
or
dec
push
movsl
inc
dec
movsb
mov
mov
jl
cltd
jns
xor
add
cmpsl
stos
mov
loope
xchg
sti
dec
fcmovbe
lock
mov
adc
js
cmc
jmp
ja
enter
sub
fwait
cmpsb
pop
push
pop
push
jne
mov
stos
ds
into
mov
inc
add
aam
aaa
mov
fdivl
insl
or
push
lock
out
or
mov
fstl
popa
scas
lds
or
mov
mull
shlb
add
add
dec
pop
gs
dec
test
jecxz
pcmpeqw
push
xor
mov
add
cmpsl
out
sti
mov
loop
sub
pop
jle
add
call
hlt
mov
or
pushf
jmp
mov
adc
in
jo
dec
mov
aad
sub
out
aam
and
inc
mov
pushf
inc
sbb
mov
push
stos
pop
add
ffree
repnz
xchg
sub
mov
mov
stc
pop
inc
adc
xor
fldenv
adc
push
enter
nop
es
dec
adc
mov
adc
sbb
sbb
push
push
push
les
test
pop
pop
out
inc
push
add
cmpsl
sahf
sbb
clc
imul
test
jmp
sub
orb
mov
push
sbb
fmuls
jl
dec
movsb
xor
movsb
dec
jno
push
hlt
in
cmp
test
xchg
sbb
inc
push
cmpsb
out
daa
out
scas
fisubrs
mov
sbbb
fwait
jle
mov
jge
lahf
pop
loopne
jns
stc
loop
out
in
insl
mov
lea
insl
sub
mov
xor
int
lahf
das
dec
xchg
and
jl
push
mov
xor
mov
xor
ljmp
stc
ss
sti
gs
lahf
jecxz
into
jg
jmp
sbb
ret
sbb
ss
mov
dec
mov
jo
cmp
jmp
xchg
popf
loope
mov
adc
mov
pop
aad
xor
leave
testl
cmp
mov
mov
fnstsw
jne
ret
pop
pop
push
lds
mov
fwait
mov
nop
into
sub
shlb
adc
std
adc
jl
int
and
popa
sbb
mov
sub
enter
mov
stos
in
mov
pop
xor
outsl
dec
mov
push
mov
push
pop
pop
imul
loopne
sarb
ljmp
jecxz
fistps
in
xchg
in
pop
out
push
scas
js
jo
outsb
jb
push
jecxz
cld
sub
adc
aaa
jo
xlat
roll
insl
xor
lahf
test
js
add
mov
stos
sbb
or
inc
popf
push
mov
lds
loope
inc
aaa
aad
push
mov
mov
lahf
sub
push
pop
pop
daa
into
xchg
shl
xor
push
cmc
xor
and
or
out
out
inc
sub
inc
aas
imul
cmp
jno
aam
sti
dec
jp
or
int3
fdivrl
aad
jge
pop
mov
mov
cwtl
pop
push
cs
cmc
and
rcll
les
in
pop
sub
out
xchg
pop
ljmp
pop
lods
or
or
lret
and
cld
jmp
xor
lcall
pop
ret
jg
add
sahf
jne
shr
repnz
lret
push
in
sbb
xor
pop
scas
jecxz
loopne
push
jbe
adc
jne
cmc
mov
lods
pushl
inc
call
fildl
stc
inc
jl
push
shlb
mov
or
out
hlt
dec
push
aad
fwait
inc
xor
mov
cmp
ficompl
leave
inc
clc
jno
inc
mov
pop
pop
push
fisubl
dec
pushw
pop
mov
flds
add
addl
dec
cmc
jp
lods
es
push
cmp
in
or
sbb
insb
jmp
in
push
cs
push
in
popa
or
and
lea
inc
ret
xor
dec
jl
cltd
stos
outsl
sti
jo
fistps
cli
cwtl
push
cmpsl
or
pop
and
add
adc
jmp
lahf
scas
out
movsb
mov
xchg
loop
xchg
out
sbb
push
jb
js
inc
stos
add
and
pop
and
aaa
in
inc
mov
xchg
test
add
fisubrs
push
mov
in
out
xorb
aaa
xchg
cwtl
leave
jne
sbb
xor
xchg
shlb
mov
ds
mov
jge
add
rol
lods
lahf
push
pop
sub
sahf
enter
shr
cmp
fs
sbb
je
xorl
fisttps
out
cmp
es
add
jecxz
pop
add
or
fstpt
jle
inc
daa
mov
cltd
fsubrp
ss
inc
scas
in
les
pushf
xor
das
mov
push
lret
mov
inc
setae
cmc
adc
adc
sar
or
cli
bound
adc
push
leave
lods
out
int
sub
inc
jnp
idivb
xchg
hlt
dec
jno
lret
sbb
cwtl
outsb
fnstenv
jle
pop
add
mov
or
mov
rclb
mov
mov
pop
loopne
and
andl
pop
xchg
adcl
mov
pop
xchg
xor
xor
fldenv
ret
fldenv
sub
clc
mov
xor
sar
cli
rcll
xchg
lcall
adc
int3
fs
xchg
xchg
cli
push
dec
sti
push
aam
popa
xlat
sbb
shl
push
mov
and
fsub
xchg
xor
sbb
and
sbbb
add
adc
jno
ljmp
pop
inc
cmpsb
add
test
addr16
jmp
ficompl
stos
dec
cmp
xchg
shll
outsl
fs
enter
movsb
inc
or
xor
inc
in
inc
sbb
shll
shlb
in
scas
mov
mov
mov
lea
inc
cmc
xor
jbe
add
push
pop
mov
push
sub
mov
ret
jg
add
jmp
insl
pop
push
lahf
pop
movsl
ret
pop
mov
jle
mov
and
lahf
pusha
cmc
dec
pop
push
mov
mov
pusha
clc
mov
insl
enter
ljmp
lret
mov
push
pop
adc
push
jle
jnp
and
ja
sbb
lcall
sti
sbb
std
inc
add
sbb
mov
cmp
mov
in
pop
mov
in
fmulp
movsb
adc
cmp
fndisi(8087
and
sub
cli
addr16
push
mov
mov
and
ret
add
sub
sahf
adc
lret
fsubrl
rorl
fucomi
mov
movsl
sahf
add
jnp,pn
sarb
iret
cmpsb
jbe
aaa
xchg
repz
out
inc
aas
ja
cmp
push
sbb
push
out
inc
sahf
lahf
in
cmpb
pop
int
push
test
iret
fisubs
stos
and
mov
mov
inc
mov
icebp
orb
adc
mov
leave
mov
stos
dec
pusha
fsubrl
into
xchg
cltd
lret
ja
mul
mov
dec
adc
pop
inc
scas
imul
or
adc
fisubs
scas
dec
outsb
mov
adc
into
jmp
mov
sub
xor
xchg
lods
mov
jns
test
mov
lret
add
mov
pop
addl
sub
loop
push
dec
pop
inc
ror
add
dec
or
pushf
or
pop
pop
push
sahf
sbb
cwtl
or
jle
fstl
xchg
pop
mov
sbb
or
ljmp
insb
inc
mov
bound
pop
cmpb
adc
int3
decl
add
push
inc
popf
lret
adc
ret
lahf
cwtl
or
aad
popf
sbb
out
sti
mov
push
dec
movsl
movsb
xchg
lds
or
fcmovnbe
or
pushf
pop
mov
adc
pop
push
xorb
inc
shlb
sbb
es
mov
xchg
sti
shll
jmp
xor
sbb
push
sbb
iret
jl
js
pop
mov
fwait
mov
nop
push
cmc
mov
pop
mov
leave
sub
lock
mov
dec
dec
push
repnz
enter
ror
or
mov
sbb
mov
or
mov
pop
xor
enter
in
push
cltd
in
and
dec
mov
ja
and
xor
inc
andb
cs
shll
cs
or
mov
jbe
pusha
and
pop
repnz
xchg
inc
mov
pop
inc
xlat
in
push
jne
inc
in
leave
cmp
testb
test
jp
test
test
inc
loope
xor
dec
xor
ficoml
es
mov
jbe
lock
enter
adc
mov
jle
pop
cmp
pop
or
adc
loop
sub
dec
outsl
pop
popf
xor
addb
push
dec
adc
loope
cmpsb
xor
jecxz
cmpsb
mov
in
ss
pop
loopne
push
pop
pop
fbld
out
xchg
pop
pop
push
add
sahf
sub
sbb
and
xor
fnstenv
add
imul
xchg
push
add
jae
nop
adc
jmp
xor
fwait
dec
scas
inc
outsb
xchg
in
scas
subl
das
popa
add
xchg
out
jne
mov
or
jge
rolb
in
cmp
andb
jle
xor
ror
jnp
movsb
inc
lds
das
movsb
mov
aad
cmpsl
movsb
xor
mov
push
call
idivb
rcrl
sub
std
ljmp
in
jmp
and
daa
out
cmc
lret
movsb
sub
outsb
and
imul
jp
xchg
into
aaa
xor
into
cmpsl
std
or
and
loopne
out
inc
mov
ret
ret
pop
mov
imul
jbe
sti
xchg
jg
lods
push
cmpsl
loop
xchg
inc
test
xor
ljmp
push
nop
mov
sub
or
mov
clc
test
sub
scas
imulb
scas
mov
and
sub
in
hlt
fwait
xor
mov
cltd
jl
js
cmpsb
fdivrl
jmp
lock
jbe
js
mov
insl
fstpt
add
imul
iret
ror
in
dec
sbb
test
cmpsl
cmp
sbb
xchg
sub
mov
cmp
xor
mov
shlb
ljmp
fnsave
xor
cmp
add
mov
inc
insl
js
adc
sub
mov
std
lods
dec
icebp
imulb
add
cmc
pop
xor
je
and
add
inc
add
stc
adc
subb
jae
ret
push
dec
fstl
hlt
daa
loopne
icebp
xchg
or
bound
mov
ds
popf
or
and
mov
test
mov
push
jmp
dec
and
jle
sbb
push
ja
das
mov
shrb
sbbb
lret
in
xchg
into
inc
stc
movsb
outsl
lret
mull
push
adc
pop
loop
test
andl
mov
sbb
jp
mov
fnsave
and
mov
lea
or
call
enter
dec
ret
cmc
push
iret
xor
push
idivb
mov
clc
lcall
inc
sbb
xchg
add
lahf
lret
dec
xchg
lds
pop
or
mov
xor
inc
fiadds
adc
mov
adc
bnd
test
xchg
shll
jae
xor
dec
js
adc
aad
add
out
push
loope
xchg
cltd
pop
mov
ret
add
push
xchg
leave
xchg
mov
popf
sbb
iret
insb
cwtl
pushf
bound
xchg
aad
add
repz
or
xor
lahf
aas
bound
fiadds
mov
jne
iret
jns
sub
dec
push
pop
adc
mov
ret
aam
or
in
bound
fmull
int
sub
mov
inc
mov
insl
jns
ljmp
into
hlt
out
push
push
sar
cltd
aam
movsb
fbld
cmc
add
sbb
ja
dec
and
cmp
popf
into
cmp
xchg
dec
add
pusha
bound
mov
lods
push
jns
dec
data16
inc
cmp
adc
mov
jae
punpckhbw
pop
mov
scas
test
stos
out
cmpsb
lods
and
outsl
arpl
rcll
cwtl
xor
adc
lea
sbb
cld
xor
or
loope
xchg
push
or
mov
mov
in
and
add
push
mov
out
jp
popa
and
adc
adc
outsb
sbb
daa
std
divb
shl
pop
scas
sbb
mov
and
fistps
dec
insl
mov
xchg
dec
jbe
rcrl
cltd
cmp
cli
iret
fdivp
xor
sub
adc
sub
inc
popa
notb
iret
hlt
std
and
cmpsb
adc
in
pop
sub
mov
call
out
out
add
jp
and
jecxz
mov
cwtl
mov
sub
push
mov
cwtl
sub
add
inc
adc
push
bound
das
cmp
divb
push
xchg
jg
out
sbb
push
or
inc
hlt
lock
sub
mov
nop
in
fcoms
fimull
mov
fistl
add
int3
mov
sub
push
lcall
xor
inc
mov
jno
roll
outsb
cmp
pop
or
out
and
pop
in
jo
pop
pop
push
mov
mov
ret
sub
sbb
add
cmp
aas
scas
sbb
movsl
sahf
popa
push
ds
std
jns
xchg
ljmp
dec
mov
out
sub
stos
push
dec
std
sbb
test
or
mov
repnz
push
xor
inc
gs
push
cmp
sbbb
xor
push
fnstenv
enter
inc
xchg
shrb
je
sahf
aaa
dec
cmp
pop
bound
repnz
in
arpl
data16
sub
jbe
mov
sub
add
in
dec
pop
sub
mov
push
jl
jmp
or
and
add
dec
test
mov
sub
icebp
sbb
push
pop
insb
in
cmp
push
faddl
out
sub
aas
sbbl
add
jl
xchg
icebp
std
cmp
pop
loope
imul
jle
sbbl
xor
aam
mov
dec
pop
clc
lret
daa
cmc
dec
lock
dec
cli
mov
je
and
inc
dec
ja
xor
lods
mov
loop
adc
dec
fstl
jmp
or
push
jge
std
movsb
loope
outsb
enter
jne
xchg
sbb
and
mov
in
and
aas
mov
dec
je
mov
push
sti
test
pop
inc
hlt
sbb
push
arpl
stos
mov
testl
xchg
rcrb
fs
pop
ds
shl
stos
lock
jmp
dec
sub
fdivs
add
fidivrs
pop
loopne
xchg
nop
add
and
push
mov
loope
imul
inc
or
jb
test
test
xchg
sub
xor
pop
in
ja
faddl
sbb
mov
call
add
divb
int3
sarl
imul
cmp
and
xchg
fcoms
xor
push
or
ret
mov
xlat
mov
iret
sbb
and
push
mov
jle
adc
lret
inc
das
cli
fcomi
mov
dec
fldenv
rol
cmpl
lret
push
std
loop
add
movsl
xor
insb
stos
outsl
adc
cmp
jge
js
mov
pop
outsl
aam
mov
aas
push
rcll
push
repz
and
ret
dec
and
cmp
inc
insb
ljmp
popf
inc
cmc
test
sub
inc
jecxz
pop
cmpsb
jmp
sbb
xor
mov
test
in
adc
mov
xchg
jnp
cld
dec
or
cmc
daa
test
pop
xor
pop
xchg
xchg
jmp
scas
adc
mov
xchg
movsb
rcll
pop
outsl
pop
xchg
dec
or
lahf
ret
fsubrs
jmp
in
mov
push
and
add
dec
xor
fistpl
and
mull
mov
fdivrl
mov
daa
insl
in
xor
mov
sub
lea
mov
fs
shrb
mov
xchg
xchg
pop
push
call
cmp
js
pop
in
xchg
xchg
xchg
xor
fldcw
cmp
add
pop
mov
cli
cmpsl
lret
lahf
jno
lret
cmp
xchg
or
mov
cmp
nop
mov
ret
push
les
pusha
sti
add
xor
sub
leave
aad
xchg
add
pop
out
out
enter
xor
cli
insb
into
repz
and
xchg
into
jp
cmpsb
bswap
mov
in
cmp
fwait
add
hlt
pop
pop
aam
shll
xchg
aam
pushf
xchg
mov
lock
xchg
es
cmc
dec
and
fidivs
sub
arpl
jl
nop
sahf
fsts
cs
insl
push
scas
es
imul
pusha
lret
inc
je
sbb
adcb
and
rcll
rcll
cmp
push
repnz
adc
stos
lds
add
repnz
jb
leave
mov
adc
mov
ljmp
xor
xor
das
outsb
cmpb
dec
mov
inc
dec
mulb
cli
cmp
je
mov
mov
sbb
imul
adc
out
cmpsl
inc
stc
clc
inc
iret
repnz
and
cmp
mov
subb
jne
inc
repnz
aas
dec
and
int3
std
mov
ja
insb
jb
jmp
add
xchg
jbe
call
mov
out
xchg
mov
and
and
rclb
mov
pushf
test
mov
mov
bound
fildll
aad
add
pop
and
sbb
push
lds
loop
cmp
stc
nop
push
add
jle
test
icebp
jnp
inc
leave
ret
cli
pop
iret
and
lods
enter
fmulp
xchg
dec
mov
jg
inc
add
jp
add
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
jge
nop
aad
testb
lret
and
into
stc
jg
push
pop
push
sub
jle
lret
jmp
xchg
pop
jne
orl
xchg
xor
inc
xchg
hlt
mov
push
mov
out
pop
jle
aad
dec
push
test
lds
mov
lret
imul
dec
jecxz
aaa
lret
cmp
jno
scas
loopne
pop
jns
leave
imul
mov
iret
cmp
mov
fs
negb
rolb
fs
test
mov
sub
jns
cmp
add
lret
adc
arpl
lahf
push
mov
mov
into
pop
inc
cmpsl
add
mov
aad
insl
cmp
dec
xchg
jne
cmp
movaps
movsb
mov
mov
add
dec
cli
cmc
xchg
pusha
cmpsl
mov
ret
dec
hlt
mov
jg
inc
hlt
roll
xchg
mov
dec
push
nop
cmp
push
outsl
or
loopne
mov
cmpsl
mov
mov
fdivl
mov
sbb
push
stos
lahf
jno
shl
js
xor
mov
js
loop
enter
mov
arpl
ficoml
test
adc
pop
sbb
cmp
xchg
into
mov
add
lret
xchg
outsl
leave
imul
sbb
jmp
ljmp
movb
cmpsl
pop
inc
mov
adc
repnz
jg
imul
ret
adc
adc
jnp
repz
xor
stos
pop
aam
pop
or
mov
mov
sahf
adc
lock
mov
in
mov
mov
jmp
lcall
dec
push
mov
popf
ja
in
or
insl
loopne
cmovg
xchg
cltd
jmp
dec
scas
lock
xchg
int3
adc
or
pop
mov
mov
in
ljmp
dec
jae
bound
stos
xchg
icebp
insl
jae
faddl
aaa
and
in
ret
pusha
stos
test
add
mov
imul
aaa
or
xchg
mov
cmp
sub
fwait
push
xchg
jg
adc
and
and
push
xchg
loop
dec
adc
popa
jl
js
mov
sarb
xchg
mov
xchg
jbe
pop
mov
cld
push
sub
xchg
loope
adc
repz
dec
mov
ja
andb
mov
int3
push
dec
stos
pop
movsl
mov
repz
jne
loop
out
lock
xorb
inc
add
push
sbb
iret
jg
sbb
lods
and
pop
aam
dec
daa
push
inc
testb
inc
dec
imul
fdivrl
pop
mov
adc
rorl
mov
cmp
mulb
sbb
insb
cmp
xor
add
lcall
xchg
cmp
les
rcrl
sarb
std
xlat
jg
pop
dec
dec
push
stc
add
mov
push
repz
xchg
aas
xorl
call
ljmp
jmp
cmpsb
inc
std
sub
xor
mov
arpl
pop
cmpsl
inc
jne
and
adc
or
pushf
cld
nop
xor
xor
pop
enter
jo
add
loopne
cmp
sub
mov
mov
xorl
lds
jb
mov
mov
jmp
out
or
push
dec
and
sti
adc
rcr
jns
mov
iret
lahf
push
jecxz
xor
sbb
sbb
mov
movsb
sbb
out
sbb
lcall
cmp
cwtl
mov
mov
into
addl
cmp
cs
or
movsl
push
out
mov
push
out
aaa
addl
out
cmc
sub
clc
orb
add
push
aad
push
xchg
out
daa
std
loopne
pop
jnp
popa
push
das
dec
inc
lret
push
and
aas
xor
mov
push
push
pop
xor
test
jl
lock
ds
pop
stos
push
hlt
xor
aam
ss
test
sub
adc
sub
xchg
pop
add
lock
cmp
ret
inc
cmpsb
jecxz
and
test
clc
xchg
shlb
adc
add
lret
pop
add
and
adc
push
xchg
test
incb
sbb
and
in
pop
data16
sbb
pop
or
or
dec
rolb
or
pop
push
mov
arpl
das
ret
fnclex
add
mov
add
stos
shr
push
and
jge
repz
sbb
inc
push
lock
or
mov
outsl
fidivrl
jg
popf
daa
shll
add
cmpsb
clc
out
subb
or
push
jl
inc
icebp
push
stos
les
outsl
jl
test
push
jbe
iret
jnp
dec
popl
fs
lods
loop
call
cmp
sub
mov
add
negb
lods
jnp
mov
packssdw
outsl
cmp
movsb
mov
sbb
imul
inc
int3
nop
sub
cmp
loope
and
mov
roll
add
push
fldcw
movsb
ret
sbb
push
ljmp
imul
jne
pop
cmp
repnz
mov
mov
sahf
test
inc
mov
das
shlb
sub
dec
cld
jge
xor
mov
fchs
mov
cmpsl
pop
int3
sti
jbe
ljmp
arpl
repnz
xor
inc
ja
xchg
jmp
sub
xchg
roll
jb
imul
jge
cmpsb
pop
pop
push
andb
lret
adcl
nop
clc
imul
enter
cmpsl
sub
insl
xorb
cmp
test
push
gs
adc
xor
jmp
fcoml
cltd
mov
int
cmpsl
mov
cmpsb
je
int
lcall
xchg
push
jl
dec
aad
movsb
das
xor
mov
jle
or
pushf
jo
mov
xor
dec
js
sub
jle
lcall
inc
stos
rcr
pop
add
push
mov
outsl
stos
flds
dec
jnp
int
jb
mov
insl
cltd
mov
jg
mov
sti
adc
mov
dec
and
shlb
outsb
sbb
jge
xor
int
mov
pop
lret
int3
clc
and
in
shll
repnz
sbb
pushf
jg
inc
arpl
sbb
push
ja
lock
mov
dec
adc
adc
push
test
sub
jp
in
lods
notb
arpl
xchg
cmp
mov
and
fsubrp
mov
imul
jbe
xor
movsb
mov
lods
push
mov
aad
lods
mov
into
inc
xchg
cmp
ret
mov
ss
aaa
mov
or
inc
pop
dec
daa
cmpb
ljmp
jno
mov
stos
lcall
mov
sub
mov
mov
push
pop
test
jl
mov
push
movsl
push
adc
imul
shrl
pop
shll
test
insb
mov
ds
add
cmpsl
jo
dec
inc
jp
and
mov
xor
fadds
sbb
mov
sub
and
dec
or
pop
sub
addr16
add
cmpsb
sub
jmp
jnp
push
ds
notb
rorl
stc
mov
xchg
dec
xorl
and
ret
push
std
ficoms
xor
adc
or
and
jb
shrl
sbbl
fistpl
adc
fucomp
cmpsl
mov
add
out
leave
leave
test
push
inc
mov
and
in
lock
dec
stos
mov
mov
fists
test
repz
jns
ljmp
mov
and
jo
test
dec
mov
push
inc
or
movsb
loope
mov
sub
insb
xor
hlt
xor
pop
outsb
sub
inc
movsb
ja
arpl
mov
dec
mov
fninit
jbe
lcall
mov
out
sbb
scas
sub
aas
xchg
pop
popf
and
pop
add
mov
shr
fcoml
jg
sbb
outsb
xchg
mov
adc
test
pop
xchg
addr16
xchg
out
push
adc
mov
sbb
fnsave
cmp
mov
sbb
in
jg
iret
dec
add
jne
test
inc
jmp
fcompl
jbe
adc
mov
adc
repz
and
inc
and
sbb
adc
adc
stos
mov
test
adc
cmpsb
into
mov
add
xchg
ret
sti
dec
cmp
insl
out
lcall
pop
insl
mov
jb
push
jno
or
jg
test
loop
outsb
push
mov
mov
subl
push
dec
mov
imul
push
mov
insb
xchg
mov
pop
jo
mov
lcall
xchg
or
and
jle
fisubs
repz
pop
repnz
and
or
add
push
jnp
neg
or
mov
sarb
jmp
xchg
add
fwait
stc
loopne
mov
ljmp
xlat
cmp
ds
sub
mov
and
sbb
cmp
adc
xor
mov
cs
xor
loopne
lret
lock
xchg
into
pavgb
aad
in
sarl
mov
fbld
aad
into
repz
fdivr
leave
lahf
clc
mov
jl
loope
data16
push
stos
sbb
jle
push
popl
imul
loopne
adc
adc
mov
mov
scas
lcall
inc
xlat
out
fnstcw
vpsllq
clc
lock
cmpsl
jmp
xchg
aas
inc
test
int
out
fs
rorb
jl
je
cli
enter
jno
pop
cltd
mov
xchg
stos
xor
pushf
mov
rcll
xchg
sub
mov
fsubrl
cmc
fsubl
js
movsl
jns
shr
or
call
scas
and
int3
in
setg
les
mov
loopne
mov
mov
out
add
aad
mov
dec
mov
ds
lods
repnz
dec
or
popf
mov
jne
outsl
out
pop
aas
xchg
movsl
ror
or
addl
and
and
mov
clc
push
insl
jne
outsb
sub
push
cmp
mov
fs
mov
push
add
sahf
xlat
mov
imul
xor
fisttpl
daa
sbbl
adc
inc
cli
and
jl
scas
int
inc
das
dec
imul
sbb
xchg
stc
std
js
or
dec
cmp
pop
in
add
mov
jb
push
out
sub
push
cltd
add
call
jmp
dec
test
call
mov
adc
les
cmp
and
push
ret
add
inc
sbb
add
sub
or
movsb
add
out
pop
loope
stos
ljmp
sub
arpl
push
dec
fcomps
or
es
push
test
ljmp
clc
mov
mov
lcall
ret
in
push
je
sub
dec
lcall
sbb
arpl
icebp
dec
std
mov
xchg
sub
push
jmp
int3
mov
test
mov
lcall
cmp
mov
cmpl
cmp
into
adcb
or
jle
add
jmp
push
jnp
js
mov
test
pop
mov
fistps
push
mov
outsl
inc
icebp
into
push
add
lea
jg
push
loopne
std
or
add
xchg
and
ja
jge
push
jae
in
dec
xor
jmp
cs
loopne
shlb
push
and
and
iret
test
insb
xchg
jno
inc
gs
xor
xor
mov
mov
repz
push
adc
dec
sub
loop
add
aad
mov
adc
push
add
leave
imul
jmp
shufps
scas
loope
jmp
dec
movsl
cld
xorb
jmp
and
pop
mov
rorl
bswap
dec
push
mov
stos
inc
int
imul
mov
cmp
leave
xchg
jne
je
in
sbb
outsl
arpl
mov
dec
rcll
repz
pop
sbbl
scas
aaa
mov
sbb
rcll
sub
xor
push
jp
decb
aam
cmc
pop
sub
xchg
aas
jp
nop
add
gs
and
or
stos
inc
aas
jns
aaa
jb
aam
aaa
and
cmp
into
xchg
lods
loope
popf
mov
cli
scas
inc
xchg
aam
add
imul
xor
add
enter
rcl
decb
ja
les
jbe
enter
sub
sahf
xor
fwait
test
cmc
stc
mov
push
or
insb
mov
fldt
adc
sahf
mov
push
fcmovnu
jo
mov
pushf
mov
adc
nop
xor
pop
push
cmpsb
xor
in
push
loopne
into
sub
cmp
shrl
pop
repz
rclb
iret
sahf
jg,pt
xchg
ss
adc
int
mov
mov
fcmovb
aad
movsl
loope
test
hlt
sbb
shrb
adc
push
mov
js
inc
xchg
mov
pop
int
imul
mov
enter
fistpll
push
mov
inc
enter
ss
test
pop
stos
lret
mov
mov
jl
mov
subl
sub
push
je
ds
add
adc
scas
adc
inc
push
call
and
inc
jmp
out
inc
rcl
movsb
rcl
jnp
leave
mov
dec
pushf
xchg
cmp
in
scas
push
mov
and
pop
scas
cs
inc
out
out
adc
xchg
sbb
fwait
adc
repz
pusha
dec
popf
sarb
xor
inc
cmpsb
daa
ljmp
cmpsb
cwtl
mov
ds
ret
popa
cmpsl
or
fwait
adc
and
les
stc
stos
mov
xchg
lds
inc
xor
xor
shl
or
dec
fnstcw
sti
lcall
mov
gs
nop
insl
add
mov
jnp
or
mov
call
xor
xor
loope
iret
or
sub
enter
les
push
fstpt
jmp
pop
imul
and
stos
mov
push
sub
subb
in
push
pop
hlt
mov
popa
push
dec
ret
add
xchg
lods
fprem
rol
out
cmpsb
jne
jle
add
jge
and
push
jg
mov
cwtl
pop
push
mov
push
ret
imul
ljmp
cmp
das
in
and
cmp
sbb
orl
loopne
sbb
jo
push
lds
jl
xchg
mov
mov
hlt
dec
jns
pop
ret
les
out
fwait
loopne
in
mov
into
sbb
imul
gs
sub
or
push
sbb
test
mov
out
cmp
pop
jmp
push
movsl
es
lods
add
adc
test
out
fmuls
sarl
push
add
movsb
add
cld
out
inc
scas
leave
rep
sbbl
or
inc
jno
xor
int3
fnstsw
test
xchg
cmc
inc
mov
aam
rcll
mov
cmp
mov
shll
fxch
add
pop
sbb
repz
mov
cmp
ss
pop
sahf
sbb
repz
gs
les
or
mov
jbe
movsl
sbb
xor
jg
push
inc
cmpsl
out
jle
popf
cmp
fisttps
stc
cli
xor
stos
dec
fiadds
pop
incl
pusha
hlt
pop
jne
and
cli
stc
cs
jmp
lea
mov
fcomi
je
insb
jbe
insb
inc
mov
int3
push
sub
pop
mov
xchg
xor
addr16
jmp
fsubl
mov
popf
mov
scas
push
add
push
sti
sbbb
sub
out
stc
adc
fisubs
negl
lods
mov
ss
jp
ljmp
rcrl
cmpsl
adc
sub
fld
das
push
mov
mov
xor
sub
je
cli
mov
pop
sub
mov
jne
push
lods
aaa
inc
inc
xor
mov
sub
fistpll
stc
mov
and
call
movsl
mov
mov
subb
xchg
cltd
les
mov
js
cmc
insb
fldt
sub
pop
lcall
leave
cmp
pop
or
rcll
call
in
mov
sub
sbb
dec
addr16
ja
jle
mov
nop
ret
or
out
xorl
xchg
push
mov
jg
inc
test
jns
aaa
mov
mov
aaa
out
cmp
out
dec
insl
xor
jne
out
test
jecxz
push
pop
call
cmp
add
dec
pop
lock
pop
lea
xchg
jl
or
inc
lahf
jp
add
test
sub
mov
push
ljmp
add
in
mov
sar
pop
in
inc
adc
pop
cmp
mov
mov
fnstcw
or
cltd
pop
mov
cmp
jl
xor
adc
mov
lods
rclb
jmp
mov
sbb
shl
and
sub
mov
ficoml
insl
fstl
popa
mov
loop
xor
call
push
xor
lret
lods
fiadds
mov
in
xor
loopne
cmp
sbb
leave
in
pop
mov
xchg
cmp
cmp
sbb
add
mov
xor
sub
jno
into
xchg
negb
inc
popa
adc
lods
out
outsb
cmpl
sti
pop
rep
loopne
scas
test
mov
push
xchg
mov
mov
push
sbb
bound
les
lcall
add
dec
es
or
repz
ret
outsl
xchg
xor
add
fstps
pop
inc
mov
sub
data16
test
inc
sbb
and
test
xchg
or
popa
push
sub
push
or
rcr
xchg
push
jno
jnp
push
jle
adc
data16
and
in
in
pop
nop
sbb
mov
je
icebp
scas
sahf
das
push
xchg
call
std
mov
mov
nop
cwtl
arpl
sbb
cwtl
mov
cmpl
inc
jle
in
adc
or
fnstsw
mov
mov
mov
push
add
mov
jbe
cmp
int3
insl
aam
mov
mov
sbb
xor
dec
dec
sti
cli
nop
pop
lock
insb
lahf
imul
adc
mov
push
cmp
outsb
pop
iret
mov
mov
dec
sub
sub
pop
sbb
xlat
cmc
push
daa
pop
pop
xor
fcompl
repz
lcall
xor
or
hlt
jns
jmp
je
push
jp
ds
shlb
aaa
iret
jg
or
into
cld
pop
test
and
aaa
add
mulb
xor
add
sbbb
xchg
es
dec
es
push
in
xchg
and
xor
cmpsb
jmp
pop
sahf
loope
insb
mov
push
mov
pop
stos
jg
je
mov
dec
lods
mov
xchg
inc
jo
rcll
mov
aad
lods
aad
es
add
push
stos
stos
not
ret
icebp
push
add
jno
aam
repz
pusha
jne
sub
mov
out
icebp
cmc
out
pop
sti
jnp
push
jo
and
es
sub
jnp
addr16
fs
das
addr16
lahf
cmp
add
push
xor
push
mov
stos
es
dec
and
jmp
and
or
mov
xchg
or
inc
fstl
jmp
sub
sub
mov
lock
inc
and
cld
nop
cmp
mov
push
sbb
stc
push
adc
mov
jge
and
mov
int
jmp
cwtl
into
mov
lods
inc
push
sub
out
lods
rorb
mull
shrb
in
push
rcrl
sti
pop
cmp
jle
mov
dec
xor
mov
xchg
mov
clc
xchg
and
cld
data16
xor
stos
sub
ret
clc
jo
enter
inc
add
adc
rcl
xor
repnz
aam
jo
or
add
aaa
cltd
push
mov
inc
and
xor
imul
fdiv
int3
push
or
ja
int3
gs
lods
xchg
and
je
rclb
push
cmp
cli
es
jo
fidivs
addr16
lods
dec
add
in
daa
cmp
pusha
push
jbe
sbb
repz
fmul
cmpsl
arpl
popf
pop
sub
xchg
lea
pop
jecxz
test
mov
movsl
ret
arpl
jl
jg
push
sbb
inc
xacquire
cltd
insl
js
sub
mov
jnp
xorl
xor
dec
je
int3
fbstp
jp
push
pop
or
aam
daa
sbb
dec
cwtl
inc
xor
sub
scas
or
push
stc
out
icebp
addr16
push
sub
mov
adc
fildll
imul
test
pop
ja
sbbb
fwait
pop
out
fdivl
mov
lea
lods
out
jle
sub
inc
das
mov
cmpsb
rcl
mov
adc
push
add
pop
mov
push
loopne
mov
inc
test
sti
pop
mov
jmp
fiaddl
mov
fdivs
adc
sti
nop
test
shrb
cmp
adc
inc
push
adc
push
aad
push
mov
mov
jne
and
test
and
jbe
mov
xchg
xlat
and
mov
outsl
scas
iret
sub
iret
imul
and
add
jo
sbb
aad
rorb
xchg
push
xchg
loop
outsl
dec
push
sub
sarb
xor
ljmp
mov
out
adc
add
cmp
xor
loope
popa
sti
pusha
popf
add
mov
je,pn
clc
add
loop
jbe
outsl
xchg
dec
call
lret
adc
dec
es
test
test
outsb
mov
movsb
loopne
xlat
lahf
outsl
dec
xchg
or
ja
and
hlt
insb
cmpsb
jo
stos
jnp
popf
sbbl
xchg
in
and
xchg
shrb
sbb
pop
jne
xchg
inc
loop
adc
dec
stos
pop
adc
mov
jbe
lods
sti
adc
dec
mov
lock
xchg
mov
xor
pop
push
cmc
loop
cmp
iret
shll
lret
out
call
js
fdivrs
sbb
jo
jbe
fidivl
push
lcall
add
mov
out
dec
xorl
cmpsb
xchg
sahf
daa
sub
jg
mov
mov
icebp
into
lahf
mov
xchg
out
lods
or
cmc
fwait
lahf
push
outsb
in
lea
inc
jg
inc
nop
sub
out
and
out
std
adc
push
dec
jbe
in
cli
jmp
mov
sbb
xlat
adc
mov
aad
dec
lret
xchg
jp
xchg
scas
fsubrl
je
insb
inc
xchg
add
lds
imul
adc
iret
inc
adc
movsb
inc
mov
pushl
pop
push
shlb
test
dec
push
xchg
jmp
pop
fnstcw
mov
lock
cltd
test
ss
shlb
mov
push
gs
sub
ss
or
iret
je
xchg
add
sar
das
nop
sub
ret
sbb
mov
push
push
pop
pop
sub
or
ljmp
or
hlt
sbb
push
inc
push
vpsubusb
repnz
in
outsl
insb
out
pop
les
mov
mov
and
push
xor
xchg
cmpsl
cmp
adc
xchg
jb
mov
mov
sbb
shrl
clc
fcomps
mov
sbb
dec
sarl
mov
sbb
or
out
jge
xchg
pushf
xor
shlb
cmp
or
add
enter
push
and
mov
mov
pop
mov
out
out
scas
stos
fiadds
test
lock
ljmp
repnz
nop
int3
leave
push
mov
jecxz
jae
mov
mov
into
sbb
sbb
outsb
scas
aas
mov
addr16
xchg
mov
loopne
add
fdivrp
lds
jp
sub
add
push
test
or
out
add
xchg
xchg
xchg
repz
daa
pop
jo
sahf
add
sub
int
inc
mov
loop
sti
inc
ja
or
mov
out
and
inc
js
xor
mov
test
pop
cld
popa
sbb
jno
sub
add
dec
test
decl
sbb
sti
fwait
jb
mov
xor
shr
dec
dec
popl
insb
or
scas
cmpsl
stos
sbb
dec
nop
iret
xor
jg
jle
int3
in
movsb
mov
pop
clc
pop
in
repz
into
fstpt
jb
rcl
sbb
jl
fs
or
pop
pop
mov
orb
ss
fnstenv
pushf
jno
xchg
iret
cmp
aam
inc
sub
aad
popa
add
aad
out
rcl
mov
pop
jnp
or
cwtl
cmp
add
lock
je
xchg
fadds
jo
mov
ficoms
add
data16
jle
jmp
sub
nop
cmp
adc
push
cmc
add
lsl
lahf
push
xor
push
cwtl
psrad
cmp
push
sbb
call
ficomps
mov
call
push
lock
pop
lcall
les
ficoml
sub
inc
mov
and
lods
mov
mov
and
push
notb
mov
out
movsl
ss
inc
or
add
mov
mov
ds
sbbb
push
push
outsl
mov
loop
insl
dec
sbb
clc
xlat
shl
jge
push
mov
addr16
ja
repz
lcall
fs
jg
adc
mov
pop
insb
mov
ss
shr
xor
ljmp
in
in
ja
hlt
adc
push
cmp
mov
nop
or
inc
push
mov
pushf
and
adc
push
xchg
xchg
cld
fwait
mov
sub
adc
pop
sbb
jmp
xchg
popa
lret
jp
ret
add
xchg
push
scas
scas
mov
movsl
cld
cmp
adcb
add
filds
iret
aas
add
add
in
pushf
bound
mov
jge
adc
sub
dec
mov
data16
mov
insb
daa
push
or
mov
pop
movsb
pop
mov
imul
je
iret
add
ss
aad
inc
repz
jnp
push
push
push
nop
jmp
rol
dec
push
mov
stc
mov
mov
mov
add
or
inc
pop
cli
mov
adc
lret
gs
call
xor
inc
arpl
fisttpll
aaa
ficomps
mov
dec
cmp
dec
inc
insl
insl
cmp
lcall
dec
inc
xor
xchg
lret
mov
push
mov
shll
cmpsb
cmp
xor
cld
sub
pop
xchg
xor
inc
xchg
ja
test
add
cld
jecxz
mov
call
xor
out
and
test
scas
mov
push
rorl
xchg
movsl
mov
cld
shlb
pusha
xchg
jle
lcall
icebp
je
mov
lcall
cmp
cld
loop
sahf
jno
imul
popa
insb
adc
lret
insb
xchg
push
mov
je
sbb
xor
pop
scas
cmp
mov
ret
stos
push
lahf
dec
xchg
pop
cmpsb
add
inc
rolb
ja
sub
roll
mov
sarl
inc
sbb
fidivs
clc
out
sub
jae
sahf
data16
mov
rcr
dec
xor
imul
int
aaa
insl
cmp
mov
jg
cs
jl
jb
jo
test
mov
loop
cmp
mov
or
out
cmp
arpl
loopne
movsl
imul
imul
in
adc
mov
sbb
jno
ret
inc
and
mov
hlt
jb
xlat
enter
pop
add
push
popa
fildl
ret
pop
cwtl
movsb
push
hlt
sub
cmpsl
adc
stos
dec
cmp
fidivrs
mov
pushf
mov
jbe
aad
xchg
repnz
pop
inc
jge
mul
push
mov
mov
and
std
mov
movb
inc
mov
mov
add
adc
outsb
aaa
testb
cs
cmp
inc
stc
pop
dec
jge
outsb
mov
fcomi
mov
hlt
inc
mov
rcrb
stc
call
mov
je
outsb
dec
dec
clc
jg
push
in
push
mov
stc
loopne
divl
fistpl
rcrb
dec
stos
and
std
mov
in
mov
mov
inc
scas
fsubl
add
push
push
jle
addb
scas
lods
ficoms
dec
dec
pop
sbb
fiadds
outsb
push
shlb
popl
inc
stc
mov
dec
nop
or
mov
push
ljmp
mov
mov
pushl
jns
and
and
pop
jnp
xor
xchg
stos
mov
push
lcall
lods
mov
xchg
mov
pop
pop
xchg
lahf
push
lods
and
adc
test
insl
int3
lods
fildl
add
add
inc
dec
inc
ja
cld
cmp
cmp
mov
shufps
lahf
sub
test
test
xchg
sahf
lahf
xchg
or
sbb
and
mov
cmp
ret
arpl
xchg
std
xor
icebp
push
mov
and
sbb
test
push
mov
lret
mov
push
sub
sbb
pop
sbb
sub
shll
dec
fisttpl
xchg
sub
jns
jns
mov
pop
pop
lods
mov
outsl
mov
mov
pop
sarl
dec
jmp
jecxz
mov
mov
stc
ljmp
loopne
push
inc
jle
xor
std
or
inc
pop
jp
or
fisttps
in
xor
push
cmc
xor
pusha
ds
out
sub
push
mov
jecxz
mov
je
cmc
negl
pop
rolb
imul
leave
mov
out
repz
dec
add
testb
jne
ficompl
jp
loop
test
cmp
fildl
jns
shl
les
add
pop
int
dec
int
pop
mov
out
sub
dec
sub
negb
call
push
pop
mov
cmp
ret
xchg
pop
call
sbb
push
jbe
xor
add
gs
ja
jecxz
xorb
out
stos
imul
jbe
ffreep
xchg
or
das
fildll
inc
cld
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
hlt
mov
addl
mov
dec
pop
pushf
xchg
mov
icebp
inc
mov
cwtl
rclb
aas
adc
lods
cli
pushf
add
add
shrb
mov
in
scas
push
mov
divps
aas
repz
cmc
mov
imul
cmpl
test
outsl
jecxz
in
sub
scas
sub
cmp
pusha
mov
in
stos
lahf
in
jmp
loop
or
or
adc
call
subb
lods
and
pop
push
mov
ret
fcomps
xchg
ret
push
lahf
and
in
push
out
jo
mov
lcall
stos
sbbl
dec
or
fdivr
pop
fnsave
pop
xchg
mov
mov
mov
rcl
cmp
sbb
mov
xor
sub
sub
insl
pop
out
mov
jbe
lods
adc
xchg
stc
mov
repz
or
lds
dec
push
movsl
push
mov
movsb
push
add
lods
inc
push
das
sahf
adc
scas
js
xor
aaa
fstpl
sub
pop
orl
ficomps
in
xor
sbb
push
push
mov
shlb
imul
pop
xlat
daa
push
dec
inc
cwtl
add
mov
sub
push
out
mov
outsb
aas
icebp
dec
mov
mov
pop
mov
imul
and
ds
mov
std
hlt
push
sbb
movsl
outsb
inc
sbb
pop
daa
lods
cmp
mov
pop
adc
mov
rcrl
jle
scas
stos
add
sub
xor
push
jne
jbe
inc
pop
fwait
mov
pop
pop
ss
jp
dec
mov
jl
mov
scas
das
stc
inc
out
fcmovnbe
rcll
adc
add
inc
pop
je
adc
cmp
adc
in
lds
jno
sub
cld
cmp
lcall
repz
cli
arpl
cmpsb
icebp
rcl
dec
xor
fwait
aad
mov
fisttpll
sbb
scas
cmp
fwait
mov
ret
sahf
sbb
adc
dec
mov
dec
movsl
sub
dec
sar
sbb
jmp
xor
in
lods
sub
popf
lds
nop
movsb
div
add
imul
xchg
fists
inc
pop
ljmp
cmp
in
notb
cmp
imul
cltd
mov
movsb
scas
fs
cmp
imul
xchg
fwait
daa
jecxz
lret
sahf
sub
dec
and
inc
pop
imul
xor
arpl
push
rcll
xor
popa
lods
cmp
inc
mov
pop
push
lods
pushf
pop
add
adc
sbb
dec
push
pop
cmpsb
leave
and
jl
mov
cld
lods
aad
aad
stc
push
adc
add
jb
cli
cmp
jecxz
mov
les
aaa
pop
mov
daa
add
loopne
adc
cmp
mov
cmp
mov
mov
pop
cli
subl
movsb
or
mov
pop
shrb
pop
es
cmp
shlb
test
inc
sub
in
mov
mov
jl
sbb
xchg
shrb
movsl
loope
ja
push
repnz
movsb
pop
cld
jnp
imul
mov
pop
imul
loope
lods
adc
xchg
mov
dec
jb
sub
mov
add
test
xlat
jge
lock
pop
adc
jle
loop
movsl
sub
cmp
inc
mov
sub
roll
dec
sub
jne
mov
xlat
jae
enter
arpl
add
xchg
xor
pop
in
fstpt
adc
fcmovnbe
cmp
add
cs
xor
stos
jae
pop
leave
push
inc
lret
mov
or
ljmp
stos
mov
lds
mov
les
cmpb
sub
repz
push
push
xchg
gs
and
jge
pop
inc
loop
sub
or
testl
inc
cwtl
sbbb
js
and
dec
jo
xor
mov
sub
out
jo
inc
movsb
ljmp
scas
inc
mov
cmp
inc
jg
mov
sub
andb
cwtl
dec
or
inc
clc
xor
jle
sbbl
xchg
sub
scas
push
movsl
and
pop
mov
jp
mov
out
fstl
sbb
fildll
and
push
cld
out
and
addb
lock
push
push
js
push
insl
call
pop
mov
mov
rorb
nop
aaa
or
scas
fidivrs
fwait
or
cmp
mov
mov
subb
cwtl
pop
icebp
mov
repz
xchg
pop
clc
and
push
fidivl
sub
cmp
insl
and
les
or
sbb
ret
mov
mov
push
push
ret
hlt
enter
imul
mov
fcmovnbe
push
loope
jecxz
mov
aad
add
push
int3
bound
lods
dec
sti
push
scas
loope
lret
sbb
inc
orb
xchg
xlat
ss
stos
mov
inc
mov
mov
sbb
xchg
out
mov
mov
mov
int3
dec
mov
addr16
or
leave
imulb
mov
mov
imul
test
sbb
dec
cmp
pop
or
push
aas
test
sub
je
jg
adc
adc
and
push
xor
mov
dec
mov
decb
leave
dec
in
les
xor
fs
je
jns
xchg
push
ljmp
mov
cmpl
loop
cmc
test
ud0
fs
cld
sub
jnp
xchg
neg
xchg
mov
mov
jbe
dec
mov
cmc
mov
imul
xor
mov
mov
popf
add
xor
push
pop
sarl
ret
gs
add
xchg
fstpt
gs
xor
insb
cmp
push
leave
int
jno
mov
in
dec
fsubl
adc
jmp
sbb
icebp
adc
clc
lds
ja
ret
sbb
adc
jae
sub
xchg
int
out
xor
das
testl
in
cmpsl
imul
jno
jp
jecxz
fldcw
mov
repnz
fwait
cltd
mov
adc
or
lods
mov
jnp
mov
xchg
xchg
jb
in
cltd
cmp
test
dec
lea
inc
xchg
scas
dec
jp
and
aam
push
mov
push
popf
imul
pop
icebp
dec
add
inc
js
inc
add
ss
lods
jns
inc
fsubs
jecxz
lcall
jns
xchg
sub
in
mov
mov
pop
pop
testl
movsb
lret
dec
insb
out
sahf
push
fbstp
push
fnstsw
cmpb
sti
bound
popf
int3
mov
xchg
inc
test
por
fisubs
pop
daa
mov
adc
nop
stos
cmpsb
aam
repnz
data16
es
push
sbb
and
push
pop
mov
jbe
ficompl
in
sbbl
loope
or
inc
cltd
repnz
cmp
dec
fsubr
pop
pushf
leave
push
push
push
hlt
cli
dec
nop
jb
inc
mov
or
inc
fmuls
jns,pn
mov
sbb
cmp
lea
iret
mov
sub
faddl
fimull
xchg
cmp
add
jl
ljmp
pop
xor
mov
or
fiadds
stc
dec
or
mov
adc
xorl
pusha
cld
dec
push
cltd
int3
scas
pushf
imul
je
ja
popf
add
xchg
ficoml
in
add
test
icebp
loopne
or
mov
std
fdivl
sbb
adc
scas
lock
mov
outsb
lahf
add
add
dec
mov
ja
insl
sub
add
or
mov
push
mov
jo
loop
mov
mov
sub
lds
call
arpl
dec
ficompl
cmp
adc
adc
mov
inc
ljmp
mov
mov
enter
roll
or
insb
shl
imul
inc
mov
jp
pop
jge
int
fbld
cmp
mov
shrb
or
lret
push
js
or
push
icebp
mov
adcl
inc
into
ja
xor
sbb
outsb
jg
pop
loop
in
push
stos
aam
lock
pop
js
enter
push
pop
xor
inc
mov
test
movsl
fadds
dec
cld
andb
mov
and
mov
jp
jns
subl
mov
cmpsb
jle
cs
popf
pop
es
mov
ret
jbe
mov
je
inc
insl
cmp
aam
adc
jmp
push
cmpsb
mov
es
push
or
fistps
pop
mov
mov
sti
pushf
adc
les
pop
add
mov
jbe
lods
jno
incl
ss
popl
roll
inc
push
call
mov
push
mov
pop
pop
movsl
add
inc
jmp
stos
xchg
mov
jbe
imul
aad
test
aad
pop
hlt
lods
pop
ja
test
mov
xchg
int3
lds
pop
push
popf
jecxz
adcb
es
leave
popf
sub
out
sbb
out
add
call
or
sbb
sbb
mov
jmp
push
dec
cmp
jp
sar
or
cld
testb
lcall
or
popf
adc
mov
imul
lret
adcb
pushl
push
stos
jb
pop
dec
pusha
in
cmp
and
cmp
mov
pushf
imulb
push
dec
inc
jmp
dec
lahf
mov
mov
mov
push
mov
aad
mov
subl
call
xor
fistl
cmp
mov
pop
mov
adcb
sub
cmpsl
xchg
icebp
jp
xorl
mov
in
or
sub
sti
les
mov
addr16
cmp
push
dec
lea
in
mov
pop
sbb
push
pop
lcall
lea
xor
sub
cmp
jns
inc
inc
jmp
fsubrl
les
movsb
rolb
or
ret
xchg
pop
cli
mov
push
outsl
xchg
add
out
cld
pop
std
pop
pop
scas
shl
adc
mov
fs
insb
fs
subb
fidivs
dec
xchg
or
out
cwtl
arpl
push
ljmp
and
pop
cmp
add
ret
divl
mov
mov
cmpsl
divb
and
mov
test
add
sub
pop
sahf
mov
repz
mov
pop
mov
cmp
jge
cmpsl
cmp
mov
xchg
sub
bound
xchg
xchg
pop
imul
jle
pop
inc
mov
ret
mov
pusha
mov
jnp
xchg
jbe
shlb
aad
dec
iret
divb
pop
cwtl
sub
and
stc
add
xor
inc
pop
xor
push
scas
es
inc
test
mov
cmpb
imulb
and
push
sbb
popa
and
fcoml
push
bound
rolb
mov
stos
clc
loope
subl
test
jge
xchg
ret
and
mov
lcall
dec
loopne
sbb
jno
xchg
xchg
xor
sbb
std
jg
ljmp
add
loop
push
add
in
jecxz
and
ret
xchg
cmp
cmp
adc
mov
hlt
hlt
sub
outsl
jne
push
mov
in
jne
fisubrl
sub
mull
and
or
inc
rolb
push
ret
aam
xchg
add
movsl
xchg
and
mov
in
out
sub
mov
shll
xchg
sub
mov
and
pop
aas
fadd
mov
xor
cmpsl
add
fistl
push
lret
arpl
clc
mov
hlt
jl
mov
sbb
ja
cs
je
ljmp
popa
loopne
js
fmulp
mov
sbb
push
add
fsubs
aaa
ja
adc
movl
movsl
callw
aam
es
hlt
cmp
mov
xor
xor
sbb
xchg
or
addr16
xor
dec
cltd
pop
in
stos
movsb
sub
fcomp
adc
adc
fwait
das
jns
imul
push
sub
sbb
and
push
imul
cmp
pop
inc
mov
sub
xchg
mov
clc
fsubs
fimull
rolb
dec
imul
lods
mov
popa
aaa
inc
jae
popf
push
push
nop
cmpsl
or
xchg
lea
sub
mov
outsl
jge
clc
enter
and
mov
outsw
mov
pop
xlat
movb
inc
cmp
pop
jl
aaa
stos
mov
lods
std
imul
insb
cs
lahf
out
push
inc
jge
sub
lods
std
aad
fistpl
xchg
xlat
add
dec
add
mov
cmp
jp
add
add
cmc
and
std
sub
scas
test
cmc
dec
in
add
sbb
ds
push
sarb
push
aaa
xchg
fistps
mov
push
cmp
cmp
push
xor
xchg
aam
lea
xor
lcall
sbb
aaa
ljmp
cmp
jp
adc
fdecstp
push
sarb
out
push
ljmp
out
sbb
push
jp
jns
jns
test
lods
xor
imul
not
lcall
push
mov
imul
mov
dec
mov
or
or
insl
xchg
nop
rorb
push
cld
xchg
adc
push
imul
inc
test
sbb
out
enter
sub
push
lds
mov
or
mov
mov
cmc
add
outsb
pop
xchg
jp
cmp
jp
mov
andl
out
aam
into
pop
leave
adc
mov
sbb
cmp
movsb
inc
sbb
mov
outsb
ror
sbb
sbb
cmpsb
dec
into
inc
lret
and
test
aad
cmp
popa
ljmp
jg
push
gs
xchg
or
dec
jnp
fldl
mov
or
in
test
in
or
mov
mov
gs
push
adc
inc
in
es
lods
sbb
je
and
ss
jge
incb
cs
scas
testl
ljmp
and
pop
arpl
fsub
pop
xor
stos
push
push
xchg
pop
add
loopne
push
nop
je
and
jnp
add
push
jae
lahf
popf
mov
mov
xor
cmpsl
or
xor
jae
inc
in
xchg
mov
xchg
mov
add
xor
fiaddl
lahf
adc
push
xchg
sub
test
cmpsb
inc
mov
mov
js
das
outsl
add
add
xor
in
sbb
lds
mov
mov
adc
arpl
leave
mov
ds
outsl
xchg
mov
nop
mov
ret
lods
or
in
lret
xor
fbld
aam
popa
push
js
mov
add
adc
sub
add
add
loopne
call
pop
xor
aas
pop
stc
xchg
xchg
rclb
bound
inc
mov
jo
dec
jae
xchg
stos
nop
cwtl
mov
push
jb
push
int
pop
test
inc
stc
cs
and
lods
mov
imul
inc
dec
add
hlt
sbb
stos
mov
outsb
xchg
daa
clc
mov
sub
mov
clc
and
xor
scas
popf
pop
lods
ficoml
aaa
pop
lock
mov
push
mov
push
mov
movsb
xor
mov
iret
cli
lret
jl
ss
dec
or
mov
pushf
cmp
lcall
je
rclb
aaa
icebp
jp
rcll
stos
filds
mov
xor
into
iret
pop
sahf
pop
repz
bound
aas
rorl
and
les
push
pop
adc
test
sbb
fisttps
xchg
pop
ljmp
int3
cmp
in
orb
int3
dec
jo
sarl
leave
pop
mov
leave
xor
int3
cmc
cmpsb
lods
inc
arpl
sti
add
dec
std
iret
push
das
insl
loope
inc
adc
mov
xor
cmp
inc
dec
out
js
push
or
sahf
fcoms
mov
pusha
sahf
jecxz
xor
and
sti
and
stos
lret
jmp
mov
aam
repnz
mov
sbb
sbb
iret
fst
pop
add
jne
pop
stos
add
cmpsl
loope
frstor
inc
xchg
les
xor
ds
sbb
sbb
inc
xchg
fdivl
sub
xlat
int
lock
sbb
mov
xor
xor
hlt
add
je
out
pop
mov
ljmp
lretw
das
sub
jae
repnz
test
pushf
lods
add
jmp
fisttps
jg
fsubl
pop
gs
lea
adc
mov
lret
loope
mov
int
pop
inc
inc
mov
loopne
test
leave
push
movsb
roll
mov
shlb
outsb
add
scas
adc
push
repz
sbb
les
dec
shll
repz
mov
and
jp
jb
and
mov
out
idivl
and
adc
in
push
call
lahf
xchg
data16
or
clc
xchg
and
mov
add
test
mov
scas
int3
fidivrl
jnp
test
and
sub
jmp
mov
jno
dec
mov
inc
adc
push
jae
aaa
inc
pop
inc
fs
mov
mov
and
js
mov
dec
ret
sub
addr16
sbb
sbb
xor
js
dec
test
sahf
push
inc
jns
dec
xchg
or
jg
lock
xor
sub
in
xor
ss
movsl
gs
lahf
mov
and
in
decl
pop
sti
ds
cmpsb
mov
push
insl
sub
mov
push
test
je
push
inc
push
xor
imul
mov
js
repz
xor
jns
sub
xor
aaa
sbb
mov
xchg
jb
addr16
mov
movl
cmpsb
pushl
clc
iret
out
lock
add
jle
mov
mov
push
xor
dec
xchg
push
mov
cmpsb
mov
test
repnz
sbb
sbb
ficoml
cmc
cs
add
loope
fwait
jo
addr16
sub
inc
inc
aad
leave
lock
push
movsl
lds
rorl
sbb
cs
and
aam
lahf
lea
xchg
push
rcrb
cmp
movsb
cmc
add
les
xchg
enter
xor
and
dec
cltd
adc
fisubs
clc
orl
push
jo
cltd
into
xor
sbb
andl
adcl
sub
repnz
mov
out
leave
xchg
loope
ljmp
mov
mov
jb
jbe
or
xchg
ret
inc
and
aad
ljmp
aam
sbb
jmp
fistpl
push
push
cwtl
imul
lahf
inc
xchg
jp
mov
and
adc
sbb
int
push
faddp
adc
clc
add
dec
pop
xchg
lock
js
loope
mov
lea
push
js
mov
and
outsl
sub
sub
aad
push
pop
mov
and
mov
jle
add
inc
enter
jae
mov
test
or
push
mov
outsb
stc
outsb
adc
lret
push
cmp
push
rclb
add
inc
add
jmp
mov
pop
push
cmp
je
les
inc
das
clc
nop
or
jo
enter
sbb
xchg
loop
xor
jle
mov
out
pop
add
in
ljmp
fiadds
mov
cmc
sahf
sub
enter
jl
jg
push
stc
push
lds
add
sub
fwait
sbb
imul
sbb
arpl
mov
mov
sbb
int3
and
fs
adc
xor
mov
lcall
or
das
mov
or
jae
cmpsb
sub
mov
jae
xor
pusha
xor
fidivrs
sub
xlat
sub
mov
call
cmovo
and
mov
popf
mov
and
out
pop
push
dec
adc
cmpsb
cmpsl
mov
mov
data16
pushf
mov
mov
jl,pn
stos
jle
popa
xchg
mov
jae
cmp
push
xchg
inc
push
inc
daa
xor
les
mov
and
shlb
andl
int
fwait
lahf
fstl
js
movsb
cmp
add
xor
or
push
faddp
jle
add
cmp
pop
push
mov
mov
out
dec
push
js
sbb
jecxz
jp
mov
cli
cmp
jmp
ret
dec
aaa
es
jns
push
jns
cmpb
cli
divl
jmp
dec
mov
sarl
hlt
test
fucom
clc
mov
push
mov
pop
pop
sbb
enter
out
or
loop
push
pop
insl
sbb
pop
xor
aas
mov
nop
pop
jb
jb
fwait
mov
add
or
ljmp
jmp
push
cmp
push
jl
sub
and
cmpsl
leave
mov
cmp
leave
lret
test
loopne
addr16
ret
insb
dec
push
bound
adc
std
cmp
pop
into
adc
cmp
aam
mov
jae
stc
inc
out
cmpsl
dec
xchg
jl
mov
iret
sbb
dec
in
aaa
ficompl
dec
jne
lock
mov
insl
shlb
cwtl
cmpb
out
mov
decl
loope
shlb
icebp
pop
push
cwtl
shrl
or
and
notl
push
std
aas
adc
in
jb
ss
icebp
cld
mov
inc
orb
jns
sti
mov
sub
push
cwtl
mov
icebp
stos
adc
dec
in
jns
fistps
adc
mov
dec
out
pop
fisubrs
sub
loop
call
adcl
aaa
mov
aam
lea
pop
in
pop
lods
pushf
outsb
push
dec
or
pop
pop
test
int
jbe
lods
das
sbb
lods
test
imul
aaa
arpl
mov
hlt
inc
cmpsb
mov
loope
jmp
jge
cmp
setns
lods
repz
cli
push
add
xor
pop
insl
inc
sahf
jecxz
mov
or
jnp
xor
and
mov
mov
xorl
sahf
jmp
jo
movsl
dec
push
icebp
lea
in
xor
xchg
subb
cmp
mov
cltd
fnstsw
lds
scas
outsb
mov
pop
hlt
stos
push
xchg
cwtl
mov
mov
popa
clc
xchg
push
das
pop
aaa
jl
pop
cmc
insl
cltd
lock
std
jp
xor
push
ret
mov
pusha
pop
scas
xchg
loopne
sbb
out
test
cmpsb
jmp
sbb
and
pop
mov
mov
adc
jo
in
xor
rolb
sbb
psubq
sub
mov
mov
ss
xchg
daa
adc
inc
roll
cli
push
sub
mov
dec
jle
sub
lea
sbb
movsb
pop
in
clc
ret
fnstsw
scas
bound
cmpl
dec
ds
and
shrl
inc
jns
mov
ret
lock
or
inc
call
aaa
out
and
test
call
xchg
pop
push
movsl
pop
outsb
push
ljmp
mov
push
mov
or
fmuls
adc
fsubs
xchg
adc
push
jge
xchg
out
fsts
cmp
fyl2x
inc
sbb
stc
das
mov
jo
or
pushf
fistl
hlt
aad
pop
int
inc
push
fistps
fldt
cmp
stc
aaa
aas
cmpsl
xor
add
mov
pushf
jecxz
je
push
lds
dec
orb
movsb
loopne
cmpsb
rcrl
into
and
cltd
xor
inc
movsl
pop
jae
mov
incb
repnz
pop
jno
adc
popf
xor
mov
addb
out
mov
push
in
loopne
mov
sbb
cmp
cltd
sub
sbb
ret
aaa
and
cmp
sub
mov
mov
xor
incl
std
les
pushl
lcall
cld
sarl
mov
jle
mov
mov
push
pop
data16
dec
pop
mov
cmp
inc
out
jge
sub
mov
push
pop
push
ss
aam
push
das
dec
cwtl
dec
mov
shlb
add
idivl
loop
cmp
push
pop
cmpsl
mov
fdivs
ret
lret
xor
cmp
sbb
sub
outsb
mov
in
xorl
mov
jno
rcrl
inc
xchg
cmpsl
pop
icebp
xchg
mov
lods
ficoml
jnp
pop
adc
fmuls
cmc
fists
pop
add
sub
lret
aas
jle
loop
hlt
push
push
inc
mov
inc
inc
cltd
stos
pop
or
hlt
loopne
mov
aam
adc
pop
add
es
xchg
cld
mov
mov
pop
into
push
jle
fs
adc
int
jmp
jge
rcll
imul
mov
insb
cmpsl
xor
xor
sub
test
jle
jge
sbb
test
add
aam
mov
cmp
mov
out
add
xchg
lcall
add
lods
out
mov
jnp
xchg
pop
pop
rcrb
cmp
test
xchg
sbbb
push
push
jns
out
test
in
mov
xor
int
test
in
sbb
pusha
push
aad
jne
jp
xchg
shll
movsl
jge
inc
lock
out
mov
inc
jle
js
test
push
cwtl
out
arpl
push
push
ret
popf
pusha
into
sbb
jl
outsb
lods
movsl
cwtl
push
lcall
add
dec
das
and
lea
push
mov
ss
pushf
sbb
scas
daa
jp
mov
push
cld
jb
mov
mov
pushf
les
push
mov
cmpsw
loop
inc
cmp
pop
mov
cwtl
fwait
pop
rolb
ud0
mov
inc
iret
test
shlb
sbb
cmp
xchg
test
push
push
sahf
mov
jmp
add
mov
cwtl
and
push
inc
cwtl
pop
inc
pop
iret
pusha
push
xchg
orl
jle
sbb
push
and
pop
sbb
push
das
mov
iret
sub
ja
adc
push
and
xor
daa
pop
imul
sub
xlat
test
adc
or
or
jnp
dec
jg
jle
idiv
push
cmp
sbb
lock
mov
lock
cmp
sbbb
or
pop
ds
jmp
xor
stc
shlb
push
add
cmpb
call
pop
aam
inc
mov
hlt
push
cmc
dec
shrl
adc
mov
xor
push
sub
adc
add
popa
add
js
test
lock
cli
lahf
and
pop
pop
dec
movsb
dec
stos
in
xchg
or
rclb
pop
stos
fwait
sub
and
xchg
insb
pop
pop
mov
cltd
ror
cmp
add
cmp
cmp
ljmp
daa
lds
out
mov
aam
ljmp
orl
push
test
and
cmp
xchg
jmp
jae
mov
cmp
adc
mov
mov
jmp
popa
cmpsb
sub
xchg
fst
inc
pusha
push
icebp
std
or
and
push
in
ficoml
fsubrl
aas
xchg
xchg
notb
test
sub
cwtl
adc
mov
sub
pop
jg
jmp
jne
cwtl
stos
orb
xchg
mov
push
or
shrl
daa
jmp
or
jmp
in
pop
cld
adc
mov
in
fsub
lds
incb
movsl
les
test
icebp
das
push
cmpl
jbe
addr16
sahf
push
orb
in
out
and
orl
dec
jb
pop
jb
jmp
stos
lahf
imul
push
xchg
test
outsl
xchg
pop
sub
pop
insl
inc
adcl
push
in
mov
xor
xor
cmpsb
adcl
push
loope
cwtl
pusha
jo
insl
fcomip
lcall
mov
jecxz
fcoms
lret
jnp
les
pop
push
icebp
mov
pop
push
test
cmpsl
pop
inc
pushf
sti
and
sub
lods
dec
and
fwait
js
add
xchg
adc
into
jbe
jg
xor
addb
and
inc
insl
mov
mov
clc
adc
lods
adc
jno
mov
adc
sti
out
pop
loopne
aas
jne
cmp
mov
cmp
arpl
cmp
lret
loop
bound
xor
std
sub
fstpl
pusha
dec
or
in
aaa
dec
or
in
enter
jbe
repz
fcompl
push
pop
xchg
xchg
popf
xchg
and
push
jae
ss
mov
mov
sahf
aam
pusha
pop
jl
adcl
mov
xchg
or
test
xorb
cmpsb
les
daa
in
push
popa
pop
or
leave
sbb
stos
pop
pop
pop
push
add
popf
mov
adc
push
pop
sbb
fildl
push
sahf
push
mov
ficompl
mov
push
lcall
push
sbb
mov
mov
imul
mov
xchg
sbb
popa
inc
cmp
stc
mov
jg
pop
cmp
xchg
pop
mov
xchg
cmp
fs
shl
inc
xchg
icebp
shrl
mov
addb
xor
sub
ror
dec
cmp
mov
mov
xchg
or
bound
addr16
jp
xchg
sahf
sbb
lock
adc
ret
pop
inc
sub
mov
movsl
push
rolb
loope
mov
and
or
add
pop
fs
sti
adc
dec
and
inc
fprem1
in
cld
int3
mov
add
and
and
sahf
sbb
clc
mov
sub
lea
loopne
scas
ret
mov
xchg
test
and
daa
mov
mov
xor
dec
mov
adc
sub
std
ret
mov
int
std
jae
jg
lahf
mov
dec
aaa
test
lcall
xchg
push
sbb
pop
stc
mov
sub
mov
in
outsb
int
lret
sti
jecxz
cld
enter
cld
fidivrs
in
inc
mov
mov
mov
push
nop
push
mov
adc
jae
xor
push
loop
rcrb
pop
or
xor
mov
lock
jno
jns
xchg
xchg
or
xor
pop
jg
push
or
jg
orl
scas
in
fists
iret
or
or
pusha
test
hlt
std
roll
ficoms
andb
push
clc
and
negb
sahf
mov
mov
test
adcl
xor
fisubrs
and
rcrb
call
enter
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
js
ret
addl
imul
roll
imulb
in
xchg
stos
ja
or
jno
push
sbb
fwait
mov
arpl
fwait
out
dec
add
mov
pushl
mov
fdivrs
push
mov
sbb
popa
cmp
dec
jnp
mov
cmp
imul
adcl
jno
addl
pop
les
sub
and
lret
and
int
lock
shl
in
jo
push
xchg
daa
pop
lock
inc
mov
and
pop
pop
push
testb
sbb
push
xchg
iret
call
std
lock
push
mov
fcoms
jo
ret
out
inc
dec
mov
cmp
sti
push
hlt
test
adc
push
aaa
or
jns
scas
pop
sub
sbb
inc
test
in
pop
mov
nop
xor
pusha
dec
xchg
fisttps
repz
loope
aas
or
imul
out
in
dec
jl
inc
mov
test
xor
and
mov
aam
pushf
jmp
jbe
xor
sbb
lret
js
sub
outsb
scas
mov
in
stos
mov
cmp
inc
add
push
push
or
iret
lods
stos
das
cmc
cmpsb
sub
out
inc
xchg
jae
loope
or
jecxz
aam
mov
push
shlb
popa
mov
vmulpd
stos
xchg
lretw
mov
adc
jle
pop
push
inc
scas
adcb
xor
lahf
insl
hlt
push
jge
dec
test
scas
lahf
out
sbb
or
daa
fs
mov
dec
xor
mov
lret
popa
dec
and
dec
je
lds
push
daa
rcll
loop
out
adc
mov
push
sbb
and
push
movsl
push
out
mull
push
pop
in
mov
push
in
dec
push
sub
cmp
or
rolb
loope
sub
out
cmp
mov
mov
jbe
mov
and
inc
es
popa
lods
popa
fidivrs
leave
add
mov
inc
lret
clc
jns
rcrl
inc
dec
pop
in
pop
push
ljmp
pop
popf
dec
adc
or
jp
xchg
and
mov
int3
and
sti
leave
adc
dec
cmp
imul
push
sbb
inc
int3
mov
cltd
rorb
mov
mov
out
xchg
ss
popf
adc
push
xor
addr16
adc
pop
flds
adc
mov
jmp
mov
lret
or
fistpl
dec
xchg
push
add
push
cli
dec
aad
inc
pop
mov
std
out
push
dec
stos
leave
lret
mov
xchg
mov
outsb
sbb
test
pop
iret
xchg
pop
clc
jns
push
xor
into
sub
inc
push
pop
add
sub
mov
push
bound
xor
repnz
push
pop
nop
in
ss
fcmovbe
out
test
sub
add
scas
mov
cmp
add
pop
in
call
fcomps
enter
xchg
scas
push
push
ds
jmp
ret
jecxz
cmp
stos
mov
push
popf
and
daa
lret
cmpsb
cmp
aaa
shlb
in
cmp
aam
dec
xchg
push
stos
pop
push
es
repnz
in
cmp
jo
xor
rol
adc
push
pop
sub
pop
add
rorb
ret
xchg
sub
push
enter
aaa
aam
fldl
imul
cmp
inc
aas
incb
mov
sbb
sbb
pop
js
mov
lcall
sti
and
cwtl
dec
dec
xchg
jbe
mov
insl
pop
repnz
jb
sbbl
std
lret
xlat
and
push
push
popa
and
repz
and
mov
rcll
fcomi
push
xchg
out
adc
imul
push
xor
sarb
adc
shrl
pop
or
mov
cli
cwtl
lea
push
cli
cli
jae
and
in
cld
movsl
jbe
cs
add
xor
cmp
mov
jp
stos
pop
stc
es
xor
jb
xor
clc
push
push
and
sub
lds
jle
sti
or
mov
out
lods
mov
pop
insb
ret
idivb
nop
mov
pop
insb
cmc
pop
jb
sbb
mov
sub
stos
pop
jbe
loopne
cmp
test
mov
and
bound
jle
out
jle
sti
loope
mov
mov
mov
lds
data16
adc
adc
test
loop
pusha
loope
jno
loope
fsub
adc
xchg
into
lods
cld
mov
mov
cmpsl
or
gs
sub
cmp
pop
hlt
sbb
leave
and
test
sub
jg
mov
jne
dec
mov
js,pt
iret
in
ret
cmp
shlb
pop
sub
gs
mov
push
and
lods
inc
sub
daa
pusha
sub
xchg
je
aam
adc
pushfw
loopne
dec
ror
xchg
mov
pop
xor
jnp
mov
iret
xchg
add
jp
xchg
and
pusha
push
xchg
nop
outsb
sbb
iret
dec
aam
push
sbb
xor
les
mov
int
es
out
lcall
inc
jl
test
data16
je
push
sub
rolb
mov
fsts
push
sarl
mov
xchg
jmp
mov
add
adc
adc
addr16
xchg
iret
and
mov
out
bound
add
and
xor
cmc
test
orb
shrd
jmp
xor
and
loope
scas
loope
rorl
loope
jb
ss
mov
scas
and
cmp
test
or
mov
scas
sub
fadds
push
orb
xor
mov
sbb
movsb
cwtd
dec
test
jge
add
mov
stos
jp
or
dec
sub
in
int
adc
js
mov
mov
mov
dec
add
jns
dec
add
mov
mov
pop
enter
mov
pop
adc
dec
push
push
pop
fsubrp
sub
cmp
mov
or
loope
inc
fbstp
popa
arpl
pop
cvtps2pi
ds
jge
and
push
ja
stos
mov
aad
repz
lcall
add
mov
mov
sub
xchg
mov
repz
out
sbb
push
sub
mov
and
or
mov
push
leave
jbe
popa
and
pop
and
xor
cwtl
mov
cwtl
sbb
pop
jecxz
sbb
dec
add
inc
dec
xlat
inc
jecxz
inc
outsb
adcb
jecxz
or
cmpsl
or
nop
xchg
test
sbb
mov
dec
and
jl
pop
xchg
mov
fxch
cmp
pop
mov
lret
xchg
cmpsb
mov
int
jge
jae
shlb
mov
add
out
and
inc
repnz
dec
fcoms
add
push
xor
or
pusha
pop
loope
push
fninit
pushf
mov
adc
roll
orb
xor
jbe
adc
mov
loop
pop
sti
subb
shlb
jae
js
inc
std
cld
pop
mov
jbe
mov
andb
sub
cli
cpuid
and
lcall
jno
push
and
testl
push
pusha
xor
mov
lea
or
cs
jo
push
test
adc
adcl
mov
jmp
pop
xor
dec
rolb
std
pop
imulb
mov
movsb
stc
jo
xchg
cmpsl
enter
pop
jp
jle
in
in
bt
ljmp
fisttps
ror
mov
rol
repz
or
mov
mov
pop
and
test
xchg
stos
add
test
movsb
rcll
and
scas
sar
pop
jg
mov
mov
repnz
xchg
cld
fbld
dec
cld
pushf
cmp
insl
test
inc
das
push
loopne
stc
sbb
std
jns
push
mov
addr16
inc
shl
mov
insb
sbb
sti
cmp
cmpsb
xlat
push
inc
adcb
call
cmp
scas
psubusw
leave
jae
cmc
testl
popf
cmp
and
push
daa
mov
popf
out
cmc
sub
ss
cmp
sbb
scas
pop
inc
pushf
mov
scas
fistps
arpl
sbb
icebp
inc
xchg
rclb
jb
test
fistl
pop
shrb
mov
xchg
push
or
out
xchg
pop
test
cmp
test
mov
mov
jmp
or
shlb
adc
std
clc
cli
divb
pop
cmp
push
xchg
ret
shlb
mov
or
push
xchg
sub
insb
test
add
gs
mov
mov
arpl
jno
mov
cltd
mov
jmp
cld
in
idivl
cwtl
mov
mov
in
sbb
dec
dec
jp
xchg
rcll
sub
outsl
inc
mov
lcall
lret
mov
inc
pop
aad
push
add
xor
push
das
inc
mov
xchg
nop
fsubrs
pop
int3
fldenv
out
jmp
inc
mov
jl
push
add
xchg
fists
xchg
mov
jg
test
mov
adc
pop
mov
push
loopne
pop
out
andl
ja
mov
lahf
dec
adc
push
ror
cmp
movsb
or
out
addl
test
lock
xchg
clc
and
adc
inc
roll
stos
into
icebp
and
movsl
lcall
mov
addl
insb
imul
aad
lea
negl
jecxz
ret
mov
and
cmp
ja
out
push
xor
adc
inc
aad
orb
sbb
mull
not
jle
ds
add
mov
mov
mov
loopne
shl
sbb
cmp
imul
cmpsl
fnstenv
adc
dec
movl
es
mov
gs
xor
dec
adc
in
pop
and
cmp
popf
push
xchg
add
push
sti
jns
push
out
in
test
lcall
sub
pop
popf
scas
sub
inc
inc
inc
add
pop
gs
lahf
aam
and
cmpsl
add
lock
mov
push
cs
bound
imul
sbb
cmp
mov
movsb
xchg
sub
xor
mov
jo
aaa
outsb
cmp
insb
out
insl
mov
mov
add
fnstenv
and
cmc
lcall
mov
dec
insl
test
add
lods
inc
push
outsb
test
xor
xor
fists
push
fsts
int
mov
cld
dec
loop
sbb
fisubrs
dec
mov
pop
imulb
push
rcrl
mov
mov
pop
out
xlat
push
push
cmpsl
or
sub
jae
mov
dec
out
sbb
pop
ja
std
xlat
aas
pop
cs
icebp
dec
inc
stc
xor
fcmovnu
push
stos
cmp
jae
shll
jge
out
and
push
add
jae
pop
jge
push
pushf
test
and
lock
mov
mulb
icebp
mov
xchg
jmp
add
outsb
loop,pn
add
aaa
roll
and
jge
push
add
fimuls
out
daa
mov
push
lods
xor
ret
inc
or
mov
lret
lods
cmpsb
push
xchg
sub
mov
push
int3
pop
loope
cmp
cs
je
fnstsw
or
testl
sbb
aam
pop
xchg
out
push
mov
xchg
rcll
and
pop
aad
rorb
out
jnp
test
mov
cli
add
dec
adc
decl
push
cmc
fs
test
xor
push
sbb
add
mov
loop
int
mov
xchg
sub
fwait
or
dec
jle
xor
bound
mov
test
roll
push
xor
iret
add
data16
sub
mov
in
sub
or
insb
add
mov
nop
in
repz
push
and
cmp
push
out
cmpsl
cmpb
sbb
mov
jge
popf
roll
jno
shl
jle
xor
add
sub
dec
pop
adc
insb
adc
add
repnz
cli
loope
test
inc
mov
adc
insl
lds
popl
and
repz
lcall
imul
ss
mov
bound
inc
mov
mov
cs
sub
mov
mov
dec
mov
or
sub
cmp
xchg
sbb
mov
divb
push
push
sti
xchg
fs
mov
xchg
stc
add
fldl
or
pop
insl
movsl
loopne
pop
jg
mov
sti
jge
add
repnz
jmp
adc
fsubl
xor
into
iret
jecxz
add
movsl
push
xor
mov
sub
inc
mov
pop
repz
clc
cli
lds
stos
mov
sub
inc
jb
jae
sbb
fisubs
mov
xchg
xor
sbbl
sub
in
jge
cmp
pop
jmp
add
mov
mov
mov
xor
push
lods
std
pop
leave
rorb
add
insb
ja
int
test
or
ss
aas
ret
shl
pop
jbe
mul
xor
mov
test
repnz
popf
mov
xchg
dec
mov
cmpsl
or
fdivl
mov
shrl
repz
jns
pusha
jmp
outsb
and
add
ja
lds
fdivl
dec
adc
adc
into
mov
mov
cmpsl
mov
aas
out
xchg
arpl
cmpsl
mov
or
mov
test
ljmp
cli
fwait
lock
mov
inc
aad
jo
inc
jg
sbb
lods
outsl
repz
hlt
je
or
mov
ljmp
or
in
jmp
imul
js
mov
mov
pop
sub
leave
shl
scas
and
mov
popf
int3
les
scas
dec
xor
pusha
jp
xchg
and
lret
mov
jae
cmp
sub
mov
ret
mov
or
jne
enter
mov
cmp
popf
cmp
loop
repnz
aas
dec
mov
sbb
xchg
mov
rorb
dec
test
cltd
sarb
int
mov
mov
sbb
test
int
nop
mov
xchg
mov
ss
nop
push
mov
jmp
xchg
fimuls
ss
xor
mov
jecxz
push
lock
sub
cmp
cli
push
test
je
stos
mov
inc
jo
imul
sub
dec
sub
sbb
mov
xor
cld
push
test
xchg
push
or
sub
shrb
mov
insb
jp
call
xchg
inc
dec
sub
pop
lret
shr
or
call
push
cmpsb
lods
fcmove
pop
xor
add
out
add
daa
sbb
mov
daa
fadds
xchg
dec
push
mov
mov
loop
cmp
sahf
lea
nop
pop
inc
hlt
les
in
jmp
pop
add
jbe
mov
xor
out
fs
mov
nop
push
outsl
scas
push
into
add
xor
push
out
mov
push
ljmp
cs
inc
adc
mov
pusha
push
pop
dec
xchg
dec
in
push
fucom
sub
mov
push
xchg
imul
loopne
aaa
shll
pop
icebp
sub
loop
jo
jmp
and
push
repnz
mov
loope
in
out
xchg
std
and
cmp
test
jmp
mov
imul
mov
bound
add
aam
adc
inc
mov
sub
cmp
jp
rcl
sub
fisubrs
adc
mov
sbb
adc
adc
jnp
mov
adc
mov
dec
push
mov
out
subl
fldl2e
add
cld
notl
mov
xchg
orl
mov
mov
or
adc
add
and
mov
ss
jns
add
lahf
fdivrs
pushf
ds
sbb
adc
fsubs
xor
ja
mov
int
inc
faddl
js
mov
jo
sub
je
xchg
lahf
sbb
inc
out
inc
pop
inc
out
loopne
mov
int3
andl
xor
ds
insl
popa
sub
push
xor
dec
push
addb
out
mov
das
sbb
js
mov
push
mov
push
enter
adc
sbb
loope
pusha
cwtl
dec
adc
rorb
jnp
add
dec
mov
clc
jg
mov
sahf
sub
sub
dec
mov
sub
popa
hlt
pop
mov
in
shlb
in
jbe
mull
mov
sub
add
fstps
cli
pop
arpl
clc
jl
lret
or
je
or
mov
inc
xor
hlt
dec
hlt
xor
dec
fcmovnbe
push
sub
outsl
popa
int3
inc
divb
ljmp
adc
sbb
mov
sub
shll
jo
repnz
pop
xor
les
xor
jp
mov
xor
addr16
rclb
mov
or
ret
pusha
or
inc
out
push
jmp
mov
sbb
and
or
lret
add
stc
lcall
dec
push
sbb
pop
push
xor
or
stos
xor
mov
push
in
adc
pushf
add
repnz
out
pusha
test
inc
sar
aaa
pop
xchg
lods
subb
cmpsb
jg
xchg
insl
repnz
and
jp
add
push
adc
jmp
ds
flds
inc
xor
adc
outsl
js
push
dec
fsubs
xchg
cmpsl
test
cmp
push
test
into
xor
icebp
adc
mov
outsl
mov
mov
fstpl
and
lahf
mov
jno
test
js
andb
cmpsb
inc
popa
leave
mov
push
pop
xchg
or
jb
pushf
mov
out
dec
into
rolb
ljmp
call
mov
andl
repz
add
repnz
jmp
sub
push
mov
fsubrl
jmp
dec
fld1
shll
adc
xor
jno
stos
test
mov
stos
lcall
pop
cmpsb
lahf
pop
imul
arpl
shlb
or
push
rcll
test
ljmp
mov
js
push
mov
loop
xor
lock
nop
pop
xchg
pop
cmpsl
imul
leave
scas
comiss
and
jb
lret
adc
movsb
aam
mov
sub
inc
movsb
adc
jl
pop
push
adc
cli
stos
test
cmp
adc
mulb
and
dec
xchg
dec
mov
jne
ljmp
movb
stos
push
sti
ljmp
mov
and
shl
jae
and
or
mov
cmpsb
inc
adc
dec
cmc
mov
scas
mov
add
xor
mov
jae
jo
adcl
xchg
cwtl
shr
xor
std
fistpll
stos
cld
xchg
movsb
push
inc
imul
popf
xchg
push
jmp
mov
mov
add
or
or
inc
push
outsb
sbb
jnp
dec
dec
inc
dec
xor
js
pusha
sub
les
dec
arpl
xorl
jg
bound
inc
push
cmp
add
mov
cmc
dec
mov
jmp
test
mov
push
in
std
push
mov
shl
xor
outsl
loop
add
sbb
repnz
cmp
push
dec
js
adc
inc
sbb
loope
inc
jp
cmpsb
lods
and
pop
leave
frstor
push
push
sbb
inc
popf
inc
fdivl
ljmp
dec
xchg
push
pop
je
in
enter
pop
outsl
mov
ja
and
ret
mov
cmp
cmpsb
rcll
xchg
mov
pop
adc
cltd
cmp
cmp
cmp
lret
xor
pop
insl
in
sub
lds
jne
sbb
clc
pop
imul
rcll
push
add
adc
in
sbb
pop
push
hlt
imul
mov
and
add
add
xchg
mov
rcll
mulb
push
lahf
add
testl
dec
adc
addr16
mov
adc
fidivrl
mov
stos
rolb
inc
lcall
dec
and
test
mov
lret
mov
ljmpw
call
rolb
inc
icebp
push
pop
xchg
cmp
lret
in
xor
shrl
idivl
jg
inc
mov
repnz
push
imull
pop
xchg
hlt
mov
dec
stc
jecxz
test
mov
sbb
fistl
adc
cli
push
dec
or
and
rol
push
xor
mov
inc
dec
xchg
inc
or
std
lcall
cmp
subb
out
jge
inc
dec
andl
fsubrl
dec
xchg
aas
mov
fimuls
jecxz
testl
es
adc
fidivl
hlt
jg
add
mov
xor
stc
inc
sbb
sarb
mov
mov
sbb
jns
into
cmp
push
push
stos
and
and
xchg
pavgb
dec
popf
pusha
mov
sub
lcall
jne
icebp
xchg
and
stc
ds
mov
fildl
cmp
add
push
or
iret
dec
xchg
adc
cmp
mov
push
push
jae
imul
out
or
loopne
sub
cmc
push
dec
mov
out
push
dec
cmpsb
jecxz
xchg
jmp
or
cmp
nop
mov
mov
pop
popf
jne
stc
mov
bnd
hlt
cwtl
sahf
inc
mov
pushf
and
pop
scas
data16
mov
movsl
dec
or
sbbb
movsl
cmp
inc
jg
mov
sub
mov
dec
cld
dec
pop
insb
cli
push
inc
clc
xchg
les
sarb
filds
add
sbb
cmp
xchg
out
pop
repnz
sub
inc
fsubrs
jp
enter
mov
leave
xchg
xchg
mov
stc
add
sahf
mov
adc
xchg
movsb
adc
xor
lahf
add
cmp
mov
inc
pop
mov
add
ss
sti
mov
mov
xor
mov
int
mov
mov
cmp
sub
leave
inc
sub
xor
adc
out
lock
cmp
mov
popa
mov
ds
mov
jb
sahf
adc
ss
sub
and
test
push
sub
pop
int
loope
es
inc
js
jg
mov
pop
mov
mov
and
fwait
or
pusha
je
arpl
enter
mov
iret
or
ret
mov
push
cmc
dec
lahf
lea
cmpsb
adc
xor
and
sub
push
mov
push
stc
and
pop
mov
sahf
sbb
data16
pusha
je
mov
lods
jecxz
dec
in
repnz
jecxz
add
mov
xchg
push
xlat
fdivs
repz
repnz
mov
repnz
dec
les
sbb
testb
mov
push
jle
mov
mov
mov
stos
gs
mov
xchg
pushf
mov
cli
stos
inc
gs
jle
cmpb
push
mov
jl
add
cmpsl
mov
dec
mov
xor
cltd
jle
daa
xchg
mov
fwait
std
or
push
cmpsl
jns
pop
mov
pop
xor
test
add
sbb
lcall
pop
and
mov
scas
hlt
mov
idivb
mov
xlat
in
flds
pop
mov
pop
sarb
mov
arpl
sub
lahf
pop
mov
jle
in
dec
js
rclb
adc
pusha
clc
loopne
sub
dec
inc
push
or
dec
in
xchg
xchg
xchg
sub
stc
xchg
mov
jne
lods
push
aas
push
lods
push
cmp
pop
push
mov
test
out
jns
mov
sub
dec
orl
pop
stos
sbb
mov
push
cmp
arpl
push
lds
pop
sub
fwait
adc
cli
mov
ror
adc
icebp
mov
mov
dec
in
mov
sbb
insb
sbb
sub
sbb
bound
call
cmp
jno
xlat
loope
js
xor
lock
jb
and
cmp
xor
jl
fistl
pop
cmp
loopne
outsb
push
inc
cmp
fwait
ds
dec
xlat
fwait
test
or
xor
fwait
jb
xchg
repnz
shll
jnp
dec
pop
add
cmp
imul
pop
jo
dec
mov
cs
das
cwtl
inc
sahf
pop
ja
mov
add
jne
or
mov
xchg
es
mov
mov
dec
mov
mov
dec
lods
cmp
sub
rcr
insl
jl
ljmp
shrl
std
scas
push
sub
aaa
cmp
or
xchg
iret
mov
xchg
inc
das
sahf
add
pop
sbb
xchg
cmp
and
lcall
push
ljmp
mov
sub
ficoms
leave
jne
pop
push
imul
fistpll
mov
lea
mov
adc
adc
push
int3
jge
popf
lods
and
xchg
mov
pushf
and
addr16
mov
mov
cmp
and
out
or
test
lock
inc
daa
sub
scas
sbb
adc
sub
lds
stos
lahf
xor
loop
lahf
jno
out
ret
lea
std
xchg
cwtl
jmp
push
inc
andb
mov
xchg
or
clc
cltd
push
xlat
int
shll
jg
and
repz
cs
call
add
pop
sub
mov
push
jbe
push
mov
in
push
adc
pop
push
mov
dec
push
cmpsl
icebp
int3
std
and
int3
enter
lds
cvtps2pd
mov
into
leave
mov
pop
aam
push
mov
call
sub
dec
shlb
and
ja
roll
add
lcall
inc
xor
popf
dec
notb
lea
jno
mov
call
jecxz
fsts
push
pop
data16
fwait
adc
xor
pop
add
insb
xchg
or
shrl
push
mov
xchg
add
dec
out
in
inc
in
sti
out
outsb
incl
test
push
cmp
fldcw
imul
arpl
or
imul
push
clc
inc
sub
sub
mov
sbb
sub
fstpt
hlt
int
inc
fdivs
dec
cwtl
sbb
and
jne
and
pop
push
scas
lods
cltd
mov
imul
mov
cltd
pop
and
sub
mov
inc
jp
push
push
xor
xor
and
imul
inc
into
js
xchg
sub
pop
aam
ret
inc
cltd
int
pusha
mov
and
loopne
outsl
loope
popf
xor
outsb
call
and
mov
test
and
sbb
lcall
pop
pop
aaa
inc
sbb
mov
insb
test
into
movsl
repz
std
cmp
in
or
push
or
dec
ss
xchg
jmp
mull
popa
mov
mov
jmp
addr16
dec
mov
xchg
enter
push
dec
add
filds
in
popf
or
jp
mov
in
push
daa
dec
push
and
pop
cmp
arpl
rcrl
sti
inc
xor
repnz
push
xor
push
jl
ds
fwait
int
dec
roll
sub
loop
xchg
mov
pushl
pop
fisubrl
xchg
add
push
xor
sub
js
pushf
insl
aaa
mov
sub
shll
aaa
mov
pop
and
test
lods
xchg
inc
mov
testb
loopne
pop
and
adcl
test
adc
lock
xchg
cmp
mov
inc
jg
inc
test
add
scas
jmp
xchg
adc
sbb
sub
push
sti
call
out
js
mov
popf
in
inc
inc
mov
cmp
std
push
mov
mov
hlt
cli
int
xor
rcll
faddl
cmp
push
in
ss
in
jne
mov
stos
dec
mov
divl
ret
add
cmpsl
pop
cmpsl
cld
insl
mov
lahf
xchg
xor
xchg
jle
inc
jecxz
mov
mov
call
int3
mov
dec
test
xchg
popf
popf
mov
jbe
xchg
push
nop
pop
aaa
adcl
imul
cmc
ret
xchg
das
xor
add
in
mov
xchg
and
rcll
mov
int3
push
gs
stos
xlat
mov
jl
mov
inc
jno
adc
inc
sub
outsl
inc
push
repnz
js
inc
cmp
pop
xlat
adcl
leave
cmpsl
sub
push
mov
mov
mov
push
or
out
mov
sub
cmp
incb
jo
jbe
push
imul
mov
iret
xchg
in
popf
loope
out
cli
call
inc
mov
dec
jb
push
mov
jbe
push
rolb
add
lods
push
add
push
inc
jae
in
xchg
xchg
rcr
jns
enter
push
fwait
ret
lock
and
fiaddl
cwtl
ret
xchg
sti
out
shlb
mov
icebp
cmp
jmp
mov
adc
stos
in
cmp
inc
movsl
mov
xchg
xlat
xchg
iret
adc
insl
adcb
sbb
adc
loop
mov
xchg
int3
pop
test
mov
or
and
bound
out
push
sub
jl
push
shll
ds
jne
cmc
je
mov
test
jo
adc
lcall
mov
adc
scas
mov
ja
xchg
in
jbe
aam
jecxz
pop
sub
mov
and
xlat
movsb
dec
add
sarb
dec
daa
cli
mov
insb
pop
pop
mov
jo
pop
cmp
mov
pushl
clc
xchg
popf
inc
add
mov
pop
cmp
mov
sub
jge
mov
or
add
and
pop
mov
scas
pushf
leave
cmpsb
fstps
aad
cmp
das
ja
cmc
and
push
in
cmp
clc
imul
fadds
jae
dec
insl
enter
arpl
add
jl
rorl
loopne
and
popa
pop
adc
sbb
mov
aad
leave
jno
aad
mov
or
cltd
add
test
fistl
inc
mov
inc
les
pop
ss
sahf
mov
jbe
jbe
jl
inc
stos
sub
sbb
insl
enter
into
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
iret
xchg
xor
cmc
pop
mov
sub
mov
lock
add
loopne
pop
in
mov
sub
jnp
sub
jb
dec
xchg
test
jbe
je
mov
das
ficoml
sub
xchg
call
sti
sarb
cmp
outsb
into
ss
sub
cltd
xchg
mov
mov
sbb
test
cmp
mov
xor
xchg
mov
inc
cmp
and
inc
jnp
sbb
cmp
lock
jb
push
shl
cld
imul
jle
push
push
js
push
addb
nop
dec
mov
cmp
jp
out
pushaw
and
pop
pop
sahf
jle
lahf
test
push
lcall
dec
orl
xchg
loope
mov
hlt
loop
clc
andl
pop
push
sahf
ret
xchg
or
arpl
mov
pop
shll
rol
les
ret
movsl
ja
pop
cmp
test
out
mov
mov
mov
loop
pusha
int
hlt
dec
repz
push
inc
pop
push
sub
add
lea
jo
lds
or
jns
jno
lahf
je
pop
pop
dec
icebp
ljmp
mov
out
loope
push
je
inc
xchg
inc
rol
cmp
pusha
ljmp
mov
mov
or
mov
or
jno
sahf
iret
inc
or
and
repnz
mov
xor
pop
inc
lock
inc
and
sbb
adc
sbb
sub
icebp
jp
divb
inc
aam
push
bound
es
sub
mov
adc
test
and
push
mov
pusha
insb
mov
add
sbb
cmpsb
adc
inc
add
lahf
pop
mov
and
fwait
sbb
negl
or
xchg
push
loope
inc
fucomi
xchg
dec
sbb
xchg
sub
loop
data16
add
jl
sti
and
sbb
push
cmp
shlb
mov
inc
jns
pop
or
inc
test
mov
dec
lock
adc
mov
shrl
pop
xchg
xchg
loop
xchg
push
mov
rorb
pushf
xchg
pop
inc
jne
cmc
out
rcl
jns
mov
sub
sbb
imul
add
fists
dec
mov
dec
ret
xchg
nop
dec
mov
fdiv
add
pop
lcall
testl
mov
out
push
cmp
pop
test
mov
push
mov
fs
and
adc
flds
xor
mov
ffree
stos
je
adc
out
xchg
sub
movsb
dec
sub
imul
mov
mov
sbb
push
push
add
fnstcw
andb
lret
ret
push
lea
out
cmp
sahf
and
popa
stos
imul
enter
dec
mov
aam
jg
sbb
dec
mov
fsubs
bound
push
js
xor
mov
nop
cli
xchg
mov
not
push
lods
mov
out
cltd
pop
or
lea
inc
jl
push
lret
movb
jl
je
aam
lock
adc
jecxz
inc
adc
push
dec
scas
inc
dec
mov
inc
movsl
mov
xor
add
faddl
xchg
ds
test
in
inc
push
cmpsb
popf
addr16
in
xchg
xchg
js
lret
cmp
mov
cmp
shrb
fstpl
fs
cmp
gs
insl
les
popl
xchg
cmp
scas
pop
stos
or
imul
sub
mov
jno
xchg
sti
lods
mov
xor
das
ss
shlb
je
pushf
pop
pop
dec
add
test
leave
jp
loop
jle
inc
mov
xor
cwtl
lods
roll
lds
jb
pop
insl
lfs
inc
mov
fdivl
movsl
repz
push
mov
mov
into
jbe
out
repnz
popf
mov
push
fsubl
adc
lcall
fnstsw
enter
addl
push
jns
jae
and
mov
stc
dec
nop
icebp
addr16
pop
repnz
mov
outsb
sub
movsb
ja
sub
pop
loop
fcmovbe
add
or
insl
divb
adc
jge
leave
das
mov
add
and
push
bsr
jbe
mov
push
int3
mov
iret
cmpsb
fsubs
fisubs
call
push
sti
fildl
jmp
add
mov
sti
push
js
cmp
jmp
popa
fsub
rcl
jg
shlb
jp
adc
mov
push
dec
loopne
lret
rcrl
movsl
stos
sbb
xchg
xchg
repz
repnz
mov
mov
pushf
mov
out
pop
mov
into
ret
push
ret
push
xchg
in
push
xchg
pop
xchg
xor
imul
incl
xchg
add
jmp
jo
pop
mov
das
lods
xchg
mov
jl
imul
mov
out
sti
pop
mov
data16
ljmp
or
out
xlat
add
xor
out
mov
mov
sahf
jne
xor
and
std
out
fdivr
iret
in
imul
scas
into
das
scas
cld
scas
mov
sbb
or
dec
ret
fsubrl
push
xor
fidivrs
cmp
mov
mov
mov
pop
lds
and
xor
add
out
repnz
pop
cltd
or
add
mov
outsl
mov
fld
sbb
mov
xorl
lahf
jge
xlat
sti
sub
dec
ret
mov
jg
jge
leave
movsb
inc
out
into
jns
shll
divl
in
movsb
mov
mov
push
cmp
mov
pop
nop
xchg
xchg
jne
je
bound
add
movsl
inc
xor
push
or
mov
fdiv
adc
cs
out
mov
mov
lret
jb
or
insl
cvtps2pi
xor
loope
aas
pop
mov
inc
repz
sarb
adc
mov
pop
mov
hlt
dec
or
mov
mov
cmp
and
mov
mov
daa
mov
push
dec
xor
roll
mov
dec
push
mov
mov
and
lock
fstpl
mov
in
pop
pop
mov
sti
leave
push
repz
sbb
mov
or
repz
and
bound
mov
push
and
cli
push
pop
testl
nop
xchg
xor
lret
cmc
add
rcrl
inc
ret
cwtl
push
nop
es
es
jnp
fidivrs
enter
mov
mov
sbb
sbbl
loop
xor
sti
filds
jns
push
pop
xchg
std
jnp
test
inc
ds
iret
jnp
and
cmp
fcmovb
loop
jmp
std
sbb
fisttps
cs
lods
cmp
sbb
jecxz
in
ret
mov
jo
aam
inc
clc
cmpsl
xchg
cmp
andb
es
or
bound
xchg
cmc
aam
sahf
stc
ret
xchg
jl
inc
jno
xor
inc
rcl
sub
or
js
inc
sbb
or
and
insl
ds
bound
les
xor
loopne
mov
sub
rcll
inc
push
jne
xchg
adc
dec
test
ja
jbe
pop
xor
inc
js
push
out
int
in
in
dec
xor
testl
jne
push
push
pop
xchg
aad
sub
testl
stc
xlat
push
outsb
rorl
test
leave
mov
xchg
pop
dec
pop
in
loope
jp
aaa
push
xchg
scas
dec
sbb
xor
push
pop
xchg
mov
inc
dec
jnp
mov
push
not
rcr
lods
xor
clc
xor
xchg
cmp
sbb
ror
cmc
test
push
xor
rorb
rep
cmpsb
mov
mov
in
dec
lods
push
imul
sbb
dec
jmp
dec
mov
arpl
xlat
movsb
mov
or
and
sub
adc
cltd
add
and
jae
ss
and
mov
xchg
movsl
inc
sub
inc
dec
xchg
addr16
or
add
rcl
xchg
mov
xor
data16
add
les
aaa
rcrl
test
test
sub
push
push
inc
dec
jmp
imul
mov
lret
xchg
jnp
sahf
addl
scas
imul
lret
inc
cmc
sbb
cltd
popf
and
fcompl
push
mov
imul
lcall
jno
or
popf
mov
mov
push
lds
imul
outsl
int
inc
pop
cmpsl
push
push
xchg
cmpsb
cmp
cs
call
pop
aas
roll
xlat
rolb
jno
prefetchwt1
pop
sbb
mov
push
jns
pop
js
imul
pop
aad
clc
cmpsb
mov
rcr
je
cli
mov
in
pop
popf
in
insl
iret
mov
sub
imul
mov
popa
push
xor
in
lret
inc
out
xor
int
jle
add
lcall
or
sbb
inc
xor
add
dec
jns
mov
cli
jle
xor
fdivl
jmp
in
sub
dec
aad
xor
cmp
push
cmp
data16
daa
in
adc
pushf
hlt
sbb
mov
xor
adc
lret
jmp
insl
js
mov
test
cwtl
dec
add
int
mov
pop
mov
add
add
mov
fisubl
add
lcall
mov
repz
add
adc
out
fnstenv
jne
pop
jl
cvttps2pi
push
jge
cmp
movl
mov
push
bound
lcall
xchg
stos
into
mov
and
xor
scas
push
sbb
or
xor
xchg
std
out
push
icebp
pop
bound
test
into
mov
in
inc
sbb
jmp
scas
jecxz
add
dec
push
shll
ss
xchg
bound
rorb
inc
ret
dec
adc
pop
pop
ret
adc
data16
xor
aad
addr16
xor
pop
fsubl
repz
mov
ja
sbb
pop
and
pop
push
js
cld
ret
fmuls
stos
jno
cmp
and
sbb
out
push
insb
test
xor
cmp
dec
repz
ja
stos
mov
or
scas
sbb
stc
push
iret
sub
push
das
sahf
insl
pop
push
ja,pt
and
xchg
adc
imul
aas
stc
shl
jmp
lods
jae
mov
cltd
divb
lret
stos
mov
xchg
jp
sahf
jns
aas
mov
push
in
shll
fistps
xchg
loopne
push
xor
das
dec
mov
pusha
jb
jnp
pop
movl
dec
std
adc
aaa
xchg
fcomip
movsb
loope
aas
pop
xlat
cmp
adc
pop
inc
push
mov
jae
int3
inc
mov
add
arpl
jae
imul
insl
mov
cmp
mov
imul
sahf
pop
addl
push
data16
adc
sbb
and
movsl
xor
enter
adc
mov
stos
addr16
aas
add
push
arpl
cmp
mov
pop
xchg
in
aam
adc
popf
lcall
or
outsb
jo
int
sub
or
pop
std
sbb
icebp
mov
leave
loopne
lret
incl
das
add
shl
in
fs
cmc
pop
roll
adc
addr16
lret
dec
xor
mov
inc
jne
movsl
sub
pop
and
dec
ljmp
pop
cmp
sub
imul
inc
or
pop
xchg
push
imul
ljmp
arpl
mov
pop
pop
js
jbe
incb
mov
stc
adc
lods
and
outsl
cld
pop
fidivrl
push
out
js
adc
jmp
enter
fwait
cmp
aad
cltd
test
cmpsb
jb
call
sahf
fnstsw
adc
test
sbb
jae
xchg
jg
loop
iret
in
pop
fcmovne
sbb
push
sub
and
mov
mov
mov
inc
pop
mov
imul
lea
mov
lock
jbe
push
lds
or
xorb
push
or
mov
pop
mov
dec
daa
test
push
sti
pop
scas
push
sub
adc
jns
loope
sub
loopne
jmp
jg
xlat
pop
outsl
std
xor
aas
outsl
adc
outsl
mov
in
inc
mov
adc
daa
ds
js
cmp
push
cmpsb
lds
jecxz
sbb
jns
cli
xor
mov
cltd
cmc
neg
cmp
cmp
pop
add
lock
pop
jo
lock
mov
dec
out
sbb
inc
cltd
or
nop
mov
std
lds
loopne
mov
mov
jmp
out
xchg
je
test
into
xor
cli
pop
out
dec
sub
jge
mov
fistpl
rorb
push
xchg
adc
jns
icebp
xchg
rorl
inc
out
xor
stc
inc
mov
sbbb
jns
mov
ror
and
rcr
xor
loope
lret
rcl
nop
popf
mull
jle
sub
mov
mov
orl
inc
and
movsb
sbb
pop
imul
loope
sti
and
rcll
div
or
xor
into
out
fwait
xchg
in
add
insl
add
fdivr
cmp
mov
push
push
xchg
push
mov
test
xorb
fistpll
mov
stos
xchg
negb
test
sbb
sbb
sbbl
scas
leave
mov
sub
jl
xchg
sbbb
in
pushf
pop
cmc
in
add
and
out
jl
jns
sub
lcall
leavew
push
aam
cmpsb
and
xchg
xchg
stos
lret
jge
jmp
xchg
cmp
jmp
repnz
idivb
sub
pop
pop
pusha
idivb
jl
les
pop
pop
sub
pop
fsubrl
rclb
sub
and
nop
or
add
or
cmpl
pop
dec
fcmovnu
mov
es
bswap
cmpsl
adcl
push
sbb
xor
addr16
lods
sbb
sub
in
lret
xlat
ret
enter
das
mov
rorl
push
shr
cli
dec
rorl
int3
pushl
in
pop
jbe
cmc
push
add
es
movsb
add
xchg
mov
inc
movsb
adc
fsts
cmp
or
arpl
scas
out
popa
in
sti
xor
js
aam
push
scas
and
rcrl
ss
cltd
fdivr
cld
ss
and
sbb
or
stos
sbb
jnp
stc
fucomip
bound
mov
xor
adc
sbb
in
imul
pop
xchg
popf
add
mov
mov
ljmp
scas
hlt
cli
mov
out
jae
push
add
jle
mov
loope
mov
mov
sbb
or
sub
dec
out
stos
add
scas
fdivr
jnp
out
push
and
dec
iret
shlb
inc
dec
int3
cltd
repz
inc
dec
jne
jmp
and
or
shll
inc
xor
mov
das
fistpll
push
inc
pop
push
mov
xchg
push
xor
sbb
repz
xchg
pop
jp
enter
loop
cmp
push
jmp
mov
fs
adc
mov
mov
jg
xor
cmp
imul
imulb
es
xor
push
call
mov
inc
push
and
jo
push
dec
push
repz
jne
repz
add
dec
cmp
icebp
jae
push
lret
gs
cmp
xchg
aad
mov
cmc
push
adc
sbb
xchg
loopne
or
xchg
xchg
push
or
outsl
mov
pop
ret
xor
add
arpl
dec
std
or
jle
xor
xor
outsl
hlt
add
jo
cmpb
push
sub
xchg
gs
mov
push
xlat
addr16
mov
jo
inc
ret
popa
dec
sub
push
adc
xchg
cmp
shlb
test
mov
inc
pop
rorl
sbb
pop
jmp
push
das
inc
add
push
adcb
mov
xor
sbb
ror
cmp
scas
xchg
mov
jecxz
jl
cltd
cmp
fildll
xor
mov
in
xchg
push
cmpsb
jg
push
sbb
gs
lds
xchg
sbb
adc
in
bound
lods
xor
pop
adcb
jno
cmp
shll
rcl
es
jp
inc
add
or
mov
xor
cmp
inc
push
data16
int
fsubrl
push
xchg
outsl
pop
xor
or
xchg
xchg
scas
add
int3
and
sbb
push
jno
or
testl
or
adc
jl
pop
mov
loop
pop
or
addb
sub
sbb
jmp
and
xchg
cmp
mov
cmp
mov
ja
daa
sbb
jl
into
outsb
jne
insl
lcall
xchg
dec
es
mov
jnp
dec
call
addr16
inc
jae
cltd
xchg
test
ret
dec
pushf
mov
xchg
iret
mov
adc
mov
gs
data16
out
mov
adc
push
push
xor
jbe
ret
xor
adc
or
cld
adc
push
es
xchg
inc
mov
lret
jns
mov
pop
mov
mov
xchg
pushf
lret
stos
lea
lods
cmp
inc
push
dec
and
leave
cmp
cld
pop
fwait
xlat
js
push
hlt
aam
pop
jmp
mov
push
sub
stc
xchg
int
pop
or
mov
and
or
leave
outsb
sub
xchg
xchg
shlb
cmp
add
jb
repnz
jg
mov
mov
add
adc
lock
mov
cmp
pop
pop
jmp
aas
imull
push
sbb
xlat
pop
je
xchg
jle
in
das
cmp
xor
je
mov
or
gs
mov
sbb
jg
sub
dec
inc
cmpsb
and
je
sbb
adc
mov
test
insb
insl
es
add
out
rclb
mov
push
and
lcall
leave
popa
adc
lret
out
leave
lods
jmp
xchg
adc
das
inc
fisttpl
pop
cmpsb
push
ror
push
js
pop
push
test
rcl
scas
movsb
stc
inc
add
push
pushf
adc
and
mov
movsl
divl
mov
sub
shll
fsubrl
shrb
mov
fsubrl
cltd
jno
or
pop
push
cli
adc
mov
cmp
push
cs
push
out
xor
rcll
and
cmp
inc
arpl
orb
cld
das
inc
mov
dec
leave
lret
inc
jg
ret
dec
es
mov
mov
push
ss
xor
les
inc
mov
xorl
stos
imul
aaa
cld
call
xchg
and
sbb
aad
imul
sbb
fst
out
out
dec
adc
out
cmp
ret
lea
stos
subb
mov
xor
mov
jl
fstpl
dec
push
daa
adc
repz
jno
fiaddl
movsb
ljmp
and
mov
mov
ljmp
in
lret
outsl
cmp
bound
cmp
adc
aam
and
and
sbb
rclb
rcrl
nop
outsb
inc
cmp
lret
sahf
insl
imul
mov
xchg
sub
out
xlat
dec
sti
push
mov
ret
and
mov
jmp
mov
mov
sarl
adc
mov
outsl
aad
adc
push
ljmp
cld
sbb
add
jo
sbb
es
or
mov
mov
js
repnz
das
xchg
aaa
das
in
dec
jl
pop
xor
movsb
xlat
pop
push
cmp
pop
mov
adc
and
mov
pop
xorb
xor
flds
pop
jle
and
jo
imul
and
cltd
jo
jnp,pn
cld
inc
lock
sub
iret
mov
mov
or
test
sbb
std
cmp
and
jns
add
adc
mov
out
out
mov
push
in
nop
cmp
subb
cmp
aaa
or
aad
pop
xor
pop
ret
mov
fsubl
xor
outsl
add
jae
xchg
xlat
dec
scas
jo
test
mov
pop
dec
cmpl
cltd
cmp
je
cld
xchg
mov
outsb
mov
inc
jo
das
rol
pop
and
fadd
pop
jne
sub
mov
mov
loopne
jnp
sbb
in
or
push
cmc
mov
adc
lret
or
test
test
mov
or
ret
rcrl
sbb
scas
mov
mov
int3
jb
adc
pop
push
in
mov
scas
and
push
lods
pop
xor
jnp
xchg
rol
out
pop
sbb
shl
outsb
xor
sub
mov
mov
pop
jmp
aas
lds
push
mov
xor
das
cmp
js
jno
mov
rcll
retw
mov
jl
ficoml
inc
aaa
mov
scas
imul
and
cmpsl
xchg
inc
loop
rclb
aaa
cmpsb
das
xor
mov
mov
lods
xchg
jmp
and
jbe
jecxz
ja
inc
je
mov
cmp
mov
outsb
xchg
pop
pop
xchg
pusha
adc
add
insb
sti
sub
push
adc
outsl
cli
ret
xchg
adc
sub
xor
sub
push
shl
clc
or
dec
stc
jle
pop
mov
shl
movsl
dec
ljmp
enter
mov
inc
cli
sbb
jmp
gs
xor
dec
pusha
mov
fwait
pusha
cmp
andb
push
push
ficoms
pop
popa
cmpsb
sub
test
mov
repnz
pop
aad
int3
fsubrl
xorl
jmp
rcrl
pusha
aas
and
or
dec
sub
sub
mov
add
cmc
dec
add
jmp
imul
ja
xchg
aaa
nop
rclb
sub
popa
adc
xor
xor
push
cmpl
pushf
xchg
mov
mov
mov
es
fwait
push
mov
pop
movd
dec
rorl
loopne
push
roll
in
jae
inc
lds
pop
jp
inc
lcall
cmpsl
and
in
in
add
inc
test
pop
sub
push
insb
mov
gs
clc
aas
push
or
in
mov
push
dec
daa
xchg
or
movsb
mov
and
shr
xor
xchg
inc
cmp
inc
addr16
xchg
call
mov
aam
jns
and
push
and
sbb
popf
scas
lock
xchg
mov
fwait
sub
cmp
sbb
and
pop
adc
cmpsl
or
out
nop
ret
addb
roll
pop
dec
aad
mov
add
into
adc
dec
mov
xor
xchg
adcb
sarl
fwait
or
out
mulb
sbb
sub
jg
xor
ljmp
fnstsw
adc
pop
fldl
dec
add
stos
jmp
rorl
xor
xchg
inc
adc
sub
les
call
lret
fidivrs
out
dec
jl
xor
pop
xchg
or
mov
aas
or
sbb
stc
mov
mov
in
jns
sahf
outsl
sub
xor
jmp
loope
lret
mov
xchg
mov
mov
out
inc
adc
imul
inc
pop
test
sbbl
or
mov
xlat
stos
out
aas
adc
push
sbb
dec
lods
push
sub
pop
out
add
xor
shlb
mov
mov
or
out
dec
mov
jge
dec
mov
xor
test
cltd
fstps
in
jmp
insl
push
xchg
or
mov
shll
mov
sbb
stos
inc
mov
inc
jno
fimuls
into
xor
adc
dec
pop
cmc
inc
xchg
hlt
fstl
add
iret
in
pusha
and
clc
adc
outsl
flds
adc
mov
fwait
rclb
pop
cmp
or
mov
jnp
pop
stc
sub
push
jl
test
and
hlt
jbe
adc
nop
popa
insb
std
lahf
into
gs
add
xchg
sub
cmp
pop
aad
test
lds
loopne
xor
repnz
pop
mov
and
jnp
and
cmp
sqrtps
inc
adc
cmp
stos
lock
test
dec
std
cs
xor
mov
inc
jnp
mov
popf
xor
fdivl
jns
sbb
adc
clc
mov
jle
sbb
iret
ucomiss
fisttpl
cld
lret
aad
push
sbb
push
fadds
shrb
xchg
mov
cmp
or
fwait
xchg
mov
lret
daa
mov
inc
bound
rcrb
cmp
xchg
push
out
test
faddl
fisubs
sar
cwtl
inc
imul
mov
movsb
gs
nop
lods
dec
gs
mov
mov
lea
and
mov
jg
call
mov
sub
push
fisubrl
std
ret
sub
ret
loope
pop
adc
das
cmc
pop
cwtl
test
in
add
ret
loop
testl
sub
adcb
movl
aaa
enter
adc
movsb
sahf
shrb
loop
ficoml
arpl
leave
xor
int
mov
lock
inc
scas
xor
cmp
popf
insb
dec
pusha
xchg
stos
push
test
pop
adc
mov
cmp
jmp
loop
dec
addr16
arpl
aad
pop
mov
xchg
imul
xor
fucomp
mov
jl
mov
jle
cli
adc
mov
dec
dec
scas
pusha
aaa
stos
inc
sbb
lcall
aad
ficompl
rclb
pop
mov
rcrb
push
mov
clc
adc
mov
sti
sarl
jge
mov
fdivs
imul
scas
inc
cmp
jp
pop
adc
dec
lock
mov
push
insl
lahf
jl
push
fcmovbe
or
push
je
xchg
inc
cmp
dec
and
sbb
out
loop
and
mov
jp
out
pop
mov
mov
lret
and
stos
int3
aas
lahf
mov
adc
rolb
loop
addr16
ret
out
mov
popf
push
lcall
es
fstpt
cmpsl
jno
push
mov
xor
jo
jae
stc
mov
das
jne
std
outsl
popf
das
imull
in
adc
cmp
or
fstpl
lock
fnstenv
dec
loop
pop
ljmp
adc
push
lret
daa
fisttpl
cltd
pop
and
clc
and
cmp
inc
inc
in
sbbl
sahf
fucomp
xor
adc
jle
xorb
xor
es
pop
mov
mov
movsl
pop
xchg
mov
scas
pop
popf
in
pop
inc
add
mov
jmp
jge
adc
mov
in
jl
xlat
and
ss
inc
int
pop
in
loope
scas
mov
daa
popa
inc
mov
fnsave
test
lcall
inc
pop
mov
std
sahf
scas
mov
inc
fcmovu
xor
aam
pusha
shr
adc
pop
fnstsw
fsubs
mov
test
mul
cmpsl
imul
inc
push
mov
pop
and
std
cltd
rcll
int3
cwtl
sbb
rorl
inc
cmc
sbb
mov
bound
and
pushf
mov
cs
ss
cmp
inc
mov
mov
jge
into
and
fnstsw
rorb
stos
in
pushf
in
dec
mov
test
lahf
inc
mov
mov
dec
mov
hlt
cmc
test
je
daa
xchg
fs
jne
out
jmp
ret
inc
hlt
mov
insl
pop
xchg
cmpb
loope
les
push
push
outsb
jae
stos
push
jns
push
or
loop
lods
fcmove
pop
push
mov
js
dec
or
mov
pop
mov
push
imul
sbb
sbb
fs
xchg
jg
cmc
mov
add
loop
sar
gs
stc
jge
fucom
add
push
insb
nop
loope
iret
sub
rcrl
into
adc
or
or
hlt
bound
fistpl
test
cmp
es
lea
jle
mov
xchg
imul
and
mov
imul
push
xchg
js
arpl
adc
cmp
xor
add
ljmp
jmp
sbb
pop
inc
xorl
in
adcl
push
pusha
adc
popf
push
push
shl
mov
ds
inc
sub
mov
sub
stos
out
jmp
dec
dec
jbe
cmp
inc
rorl
push
mov
pop
push
mov
inc
cmp
gs
xchg
jne
stc
cmp
shlb
push
pop
jb
cld
pop
and
xor
test
shlb
mov
xchg
jbe
sub
or
xlat
jge
adc
lcall
and
mov
fstpt
aas
adc
or
or
je
fs
push
or
add
shl
inc
mov
jo
repnz
push
jecxz
loop
mov
fcom
jge
mov
fsubrs
addr16
clc
adc
scas
clc
inc
lret
idivb
push
jg
jb
sub
pop
clc
shlb
sub
gs
ja
push
lcall
rcr
mov
lds
aas
cmp
push
addr16
testl
ss
int
inc
outsl
inc
andb
cmc
fcom
adc
insb
xchg
or
mov
mov
xchg
movsb
pop
dec
adc
shlb
mov
int
push
ss
jge
enter
popa
nop
pop
or
out
lret
mov
into
leave
xchg
arpl
jnp
loope
pop
ja
clc
scas
scas
movsl
subb
push
imul
jecxz
popa
out
jne
fisubrl
clc
push
dec
push
shll
sar
and
aas
fldenv
jge
out
inc
sub
sub
fucomp
mov
mov
bound
jge
inc
in
iret
mov
sub
or
mov
lds
cmp
fdivrs
xchg
cmpb
popa
sbb
sub
xor
jg
dec
mov
sub
push
or
nop
lcall
mov
push
lret
mov
push
addr16
push
add
sbb
inc
lods
adc
and
lahf
cmpsl
push
repz
popl
push
mov
inc
mov
or
lods
rolb
mov
pop
pusha
repz
test
shll
bound
insb
cwtl
daa
jno
aaa
stos
imul
pushf
push
push
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
mov
push
out
addl
cltd
test
mov
xchg
xchg
sbb
xor
jno
div
dec
subl
andl
fs
cmp
or
pop
test
push
fsubl
pop
xor
push
cmp
pop
insl
add
and
enter
xor
xor
sahf
loope
stos
movsl
inc
nop
in
mov
mov
gs
nop
aaa
lret
push
leave
add
mov
vpsubb
jmp
cmp
les
or
sti
je
or
and
dec
cmc
std
aam
inc
add
pop
addr16
cltd
orb
inc
adc
fcmovnbe
mov
lahf
lods
cmpsl
inc
iret
cmp
ret
mov
lret
xor
pop
iret
les
jno
dec
xchg
inc
dec
jno
mov
push
jmp
mov
jne
out
cltd
lret
lret
rcrl
jmp
jbe
test
or
aad
push
jo
sti
mov
lcall
and
mov
jno
in
ss
adc
mov
jge
add
fcomps
mov
mov
add
fdivrl
sarl
push
inc
pop
sub
sbb
mov
test
sub
sahf
xor
out
arpl
int
mov
jge
movsl
push
pop
mov
xchg
cmp
sub
cmp
cmp
in
inc
mov
mov
out
ret
jp
cwtl
push
fwait
mov
pusha
push
aaa
mov
pop
fcoml
lock
jg
lret
mov
push
push
jecxz
or
fldenv
mov
aam
push
mov
sub
adc
mov
or
dec
cmp
adcl
jae
xchg
xchg
ljmp
clc
sub
out
sub
push
add
xchg
mov
push
and
mov
clc
jge
mov
decl
mov
or
adc
filds
jmp
rep
mov
test
es
shrl
je
xchg
icebp
outsl
scas
lret
adc
jmp
clc
mov
pop
movlps
stos
jnp
lret
cmp
int
push
push
stos
negb
adc
sbb
das
addr16
ss
mov
sub
xor
push
mov
mov
dec
lret
test
jno
adc
loope
stos
dec
pop
pop
sub
push
jmp
sarb
xor
je
xchg
loop
movsl
outsl
test
xchg
sbb
add
jp
jecxz
push
push
andl
adc
pop
insl
mov
mov
and
or
jns
mov
xchg
mov
call
call
mov
and
jle
mov
sahf
lods
cmpsb
xlat
mov
dec
pop
inc
pop
addb
daa
adc
lcall
push
aaa
dec
xlat
sarb
adc
lcall
popa
and
xchg
ja
mov
xchg
insb
lds
mov
out
mov
inc
jg
movsb
jmp
repnz
icebp
pop
push
aam
sub
mov
sbb
loop
enter
cmp
shrl
and
cmc
push
loopne
xchg
pop
jo
xor
cmpsl
and
xchg
lcall
pusha
lahf
or
mov
sub
bound
lods
pop
out
aam
pop
adc
sub
outsl
dec
dec
stos
test
push
mov
xchg
stc
fnstenv
scas
sbb
jo
and
lea
pop
sbb
es
xlat
imul
ja
fnstenv
jno
andl
dec
outsb
xor
sbb
data16
imul
nop
dec
mov
push
or
pop
mov
mov
arpl
add
push
aaa
push
cmp
iret
flds
jne
icebp
loope
into
mov
xchg
cli
in
dec
xlat
and
sbb
ret
mov
push
sbb
pop
mov
insl
aas
loopne
fistpl
dec
dec
push
fisubrs
fdivr
jo
mov
jmp
inc
cltd
sarb
mov
mov
add
test
push
lock
or
adc
in
lret
dec
loop
jb
rcll
aaa
das
cmp
push
sub
movsb
push
jg
cmp
xchg
insl
add
mov
adc
int
rcll
aam
jns
sbb
inc
or
xor
or
loop
jg
fstp
xchg
add
in
sbb
jge
rcrl
mov
lods
jne
adc
sub
repz
mov
sbb
ss
push
pop
jl
fsubrl
mov
pop
push
or
roll
mov
xchg
xor
and
adc
inc
arpl
cld
cmp
sbb
sub
jnp
mov
jnp
les
repnz
jae
aad
mov
in
pop
movsb
push
jo
mov
mov
xlat
cmp
xchg
inc
sub
nop
sub
testl
pop
xchg
aad
mov
mov
sahf
ret
sbb
sahf
adc
repnz
inc
mov
cmc
roll
add
call
stos
mov
jmp
mov
add
test
mov
cmpsl
mov
mov
outsl
or
inc
sbb
lds
nop
cmp
in
jge
fldcw
mov
mov
sbb
xor
sub
mov
dec
cmp
dec
hlt
jns
cltd
pop
rcl
cld
out
xor
imul
and
cli
outsl
xchg
dec
es
mov
push
sti
stc
fwait
dec
data16
lea
dec
shlb
or
pop
fistl
jns
jae
push
add
sbb
mov
popl
cmp
and
mov
aad
repnz
cmp
jnp
std
lea
and
or
sub
js
inc
push
mov
mov
adc
mov
leave
mov
test
movsl
cmpsb
cmp
push
repnz
subl
and
test
jmp
fnstsw
pop
js
mov
lcall
ljmp
add
inc
movsb
mov
mov
or
in
sbb
cmc
cmp
sbb
stos
cs
movswl
cli
ja
mov
cld
sbb
scas
xor
sub
push
dec
in
jmp
lcall
or
sub
in
clc
push
bound
push
inc
push
cmc
dec
dec
cmp
mov
sub
jecxz
adc
cli
mov
test
ret
movsl
out
and
sub
dec
and
sbb
fidivl
cltd
lods
xchg
in
les
cmp
push
dec
aas
inc
jmp
fwait
arpl
lcall
popa
inc
add
jg
and
and
push
mov
aas
jbe
fadd
movups
loopne
aad
adc
xor
jo
cmp
jle
mov
sub
popa
jno
shll
cmpsb
outsl
mov
orl
lret
add
jbe
xor
cmp
mov
jge
pop
adcb
jp
in
mov
mov
sub
fdiv
push
lret
push
cmpsb
sub
jo
pop
xchg
jle
or
xchg
test
mov
xor
fistps
sbb
fs
xchg
dec
adc
add
imul
std
or
or
test
jbe
fsubl
dec
mov
push
push
mov
jnp
jns
out
rolb
adc
mov
fs
add
jae
jmp
movsl
icebp
fstl
sbb
mov
mov
jbe
fcos
adc
pop
pop
pop
xchg
mov
pusha
mov
icebp
adc
push
and
fwait
mov
add
ret
pushf
push
jle
sti
aad
mov
repnz
push
add
mov
add
aad
mov
mov
sbbl
xlat
popf
add
dec
xor
decl
gs
arpl
push
xchg
pop
sbb
fs
lock
dec
adc
int
pop
inc
fsubl
int3
int3
test
push
mov
aas
sbb
jae
sub
fiadds
and
pop
loope
je
or
mov
test
lock
or
mov
imul
adc
stc
mov
int
inc
ds
enter
sub
pop
in
lret
ja
add
jge
xchg
lahf
dec
and
mov
add
or
arpl
dec
movsb
xchg
or
mov
mov
jb
shll
pop
ljmp
jnp
mov
scas
push
push
hlt
shl
fcoml
nop
xor
std
ds
std
mov
push
inc
addr16
popf
push
lds
mov
mul
sbb
test
das
gs
movsb
push
mov
in
sbb
sbb
aad
xchg
push
xchg
es
mov
out
mov
pop
mov
adc
popa
push
fcomp
daa
add
and
in
mov
sbb
repz
sti
loop
cmp
loop
je
in
inc
jae
jg
fs
push
in
out
dec
kmovd
shrl
xchg
fs
jae
mov
xchg
cwtl
mov
daa
inc
inc
cmp
cmp
lea
add
mov
mov
out
xchg
mov
cmp
jecxz
xor
fsub
mov
and
mov
cmp
mov
dec
rorb
fs
enter
cltd
push
mov
daa
lock
jp
aam
fistpll
loope
andb
xor
sbb
mov
loopne
mov
aas
insb
ret
es
jecxz
scas
dec
xor
mov
mov
stc
and
mov
pop
mov
hlt
jge
mov
jnp
fidivrs
adc
out
inc
in
nop
xor
xchg
fists
cs
push
cmpsl
adc
fnstcw
xor
lock
adc
gs
xlat
sahf
movl
shlb
lock
test
fidivrs
jge
lret
add
jl
test
xchg
out
and
out
outsb
adc
mov
xor
sub
cmp
lret
loopne
int3
pop
loope
popa
arpl
mov
jne
adc
arpl
jecxz
pop
popa
out
mov
xchg
std
inc
cmp
cmp
movsl
in
out
leave
mov
inc
pop
test
jne
ja
and
sbb
addr16
mov
cli
mov
enter
and
add
gs
mov
push
movl
sbb
in
insb
jle
mov
push
cmpsl
cmpsb
mov
mov
pushf
sti
ljmp
cs
mov
jl
or
push
mov
push
in
inc
add
xor
jg,pt
aad
leave
into
ret
sbb
fdivrs
int
adc
lods
popf
xor
pop
mov
xchg
mov
addr16
test
pop
fstpl
lock
xor
xchg
repz
mov
mov
xor
and
and
sbb
fimuls
icebp
dec
roll
out
inc
pop
mov
aaa
scas
sbb
addr16
out
cmpsb
add
fistpll
mov
adc
jns
push
stos
pusha
divl
or
gs
add
repz
add
bound
jle
cmp
sub
xchg
mov
ss
iret
ja
cmp
test
xchg
repnz
mov
cmp
xlat
pop
adc
sahf
insl
into
pop
jmp
dec
adc
mov
push
test
jg
test
mov
shlb
dec
addb
insl
mov
jl
dec
xchg
aaa
push
xchg
xchg
cmp
lods
pop
adc
cmp
jge
test
dec
lea
das
sti
loopne
cwtl
and
dec
clc
pop
lds
dec
cmp
loopne
mov
shll
andb
pop
repnz
lahf
cmpsb
les
imul
mov
and
cmp
adc
and
faddl
aas
js
js
lea
repnz
jg
jno
xlat
xchg
pushf
push
aam
xchg
inc
dec
ja
stos
fsubrl
jmp
lods
push
adc
loopne
dec
pop
fwait
aad
ja
aam
leave
sub
xchg
testb
lods
ljmp
dec
pop
repnz
dec
mov
sub
movsl
enter
pop
mov
mov
xlat
mov
call
call
ret
push
jecxz
xchg
xorb
pop
sub
add
inc
mov
repnz
mov
lcall
cmc
push
imul
loop
vpaddb
push
cmpsb
je
gs
jo
sub
inc
ret
stos
xor
mov
mov
cld
adc
lahf
dec
clc
ret
xchg
dec
ljmp
scas
out
scas
add
mov
in
mov
sahf
cwtl
int
sbb
and
or
mov
std
jns
jae
and
sub
clc
in
pop
sub
cwtl
mov
mov
or
sti
jnp
adc
outsb
inc
notl
scas
and
mov
add
mov
jne
xchg
jnp
cltd
cmp
scas
pushf
cli
leave
jnp
inc
and
call
mov
sub
cmpb
cmpb
jge
lcall
pop
jecxz
imul
inc
loop
cmp
pop
adc
test
jmp
addr16
pushf
mov
mov
int
mov
inc
aad
or
dec
add
aas
sub
ds
test
shlb
mov
lcall
adc
outsb
outsl
jl
xlat
inc
push
out
adc
shlb
xchg
mov
pop
and
cmp
push
les
and
aas
jae
push
mov
or
loope
push
push
out
jmp
negb
mov
dec
inc
stos
lds
dec
aam
int
cwtl
out
pop
lods
or
xchg
repnz
jbe
lret
bound
das
popa
and
lods
ss
aas
xlat
orl
fimuls
pop
sub
pop
inc
sub
push
dec
ret
fidivrl
adc
aam
scas
into
xor
push
pop
ja
ss
mov
jb
cmova
std
xor
xlat
aad
push
pop
lret
inc
xor
call
ret
fstps
add
data16
or
or
mov
xchg
lcall
add
cwtl
jmp
movsl
ret
fcmovbe
mov
pop
xchg
pop
repz
jo
and
dec
ljmp
cmp
adc
movsb
imul
push
push
loopne
jl
mov
aad
mov
adc
sahf
in
xor
mov
sbb
pop
push
adc
rolb
mov
dec
inc
xchg
dec
mov
leave
mov
or
dec
fwait
adc
adc
mov
xchg
fstpt
ljmp
imul
pop
xchg
scas
cmc
mov
mov
push
cmp
fisttps
sub
ret
aaa
pop
sbb
mov
mov
lret
xlat
bnd
mov
pop
pop
xchg
cld
lds
ljmp
push
mov
pop
fldcw
mov
insb
inc
lcall
and
fiaddl
xchg
inc
cmp
jp
in
and
jnp
add
cmp
rclb
sub
fs
pop
xchg
push
cli
mov
push
mov
loop
js
xor
cmp
ss
mov
shrl
add
push
faddl
inc
stos
sub
xor
dec
pop
insl
pop
mov
or
repnz
das
sub
mov
pop
out
xchg
fiadds
movsl
add
es
sub
and
mov
xor
std
lods
int
cli
mov
pushf
xchg
into
push
fisttpl
or
ss
xor
jecxz
mov
jge
fcomi
insl
shl
or
adc
fdivrp
mov
cmp
xchg
daa
cld
mov
push
xchg
fadds
adc
shlb
jns
imul
dec
call
inc
adc
sbb
scas
ja
shrl
sub
push
jno
insb
addl
int3
xor
and
and
dec
cmpsl
mov
idivb
fadd
xchg
inc
dec
push
lret
push
sub
cmc
cmpsl
cwtl
subl
push
scas
fiaddl
ss
aam
xchg
and
mov
or
mov
cmp
outsb
repnz
mov
mov
inc
fisttpll
out
movsl
scas
mov
loop
mov
fsubrl
push
popa
push
lahf
push
out
pop
cmp
aas
inc
iret
sarb
pop
sbb
pop
mov
or
jl
sub
das
call
in
push
push
aam
push
xlat
std
lret
cld
push
outsb
push
push
xor
into
mov
loopne
push
movsb
lret
push
fs
repnz
int
inc
xchg
push
lods
mov
mov
negb
mov
loop
in
fwait
xchg
int3
sbb
movsb
pop
fadds
cmpsl
enter
fsubl
movsl
sub
mov
xchg
jl
mov
or
or
aam
mov
pushf
orb
pushf
mov
ret
inc
call
lret
inc
jns
pop
mov
fwait
dec
lock
mov
and
sti
cmc
mov
dec
icebp
adc
or
jle
into
sub
pop
popa
inc
je
stc
sbb
add
push
aaa
ljmp
xor
fwait
jle
es
xchg
repz
pusha
arpl
sbb
or
cmp
pop
cwtl
mov
and
adc
sbb
dec
test
inc
mov
imul
dec
js
sub
dec
add
enter
mov
cmp
ja
mov
inc
cmp
add
pop
imulb
insl
jb
add
xchg
lret
js,pn
stos
inc
popa
jns
js
push
fisubrs
dec
rorb
rclb
ss
sbb
fdivp
or
adc
sti
mov
pusha
mov
xor
push
rolb
or
fwait
cmpsl
negl
ljmp
xchg
std
jge
je
pop
repnz
dec
mov
sti
mov
sbb
jle
lods
addr16
scas
bound
test
mov
and
and
jae
out
ficoms
jno
sbb
ret
and
stos
push
add
clc
push
pop
adc
sub
mov
mov
loopne
lret
mov
incl
adc
bound
mov
cmpsb
cmpsb
cmpsb
xor
ret
cmp
or
jg
loop
or
fiadds
pop
push
adc
xchg
add
jmp
in
jns
jl
sub
push
repnz
loop
push
pop
insb
imul
mov
lret
pop
aas
dec
mov
cmpl
ret
enter
push
outsl
mov
fdivrl
adc
cmp
adc
xchg
push
xor
in
lcall
aas
popa
push
lods
push
arpl
scas
cmp
or
inc
das
loop
cltd
int
jg
inc
mov
inc
imul
flds
inc
push
cmp
aam
rolb
push
ljmp
aaa
stos
cs
xchg
cmc
sub
sub
mov
fsubs
sbb
test
loop
out
and
cmc
sbb
movsl
js
out
pop
pop
dec
hlt
and
sub
jge
mov
pop
pop
mov
pop
push
jge
outsl
loop
inc
adc
outsl
pusha
pop
hlt
dec
cmpsl
repz
shlb
sbb
aaa
stc
out
cmp
or
pushf
ja
or
iret
test
mov
aaa
insb
insb
cmp
stos
js
cmp
in
cs
aaa
mov
sub
roll
mov
lea
pop
pop
cmp
mov
lods
test
inc
cmpsb
sbb
lea
inc
in
pop
sbbl
pusha
out
jle
in
sbb
pop
test
jecxz
adc
sbb
mov
cmp
mov
push
add
mov
xor
and
pop
ret
jns
mov
iret
outsl
add
fwait
push
shlb
mov
and
mov
outsl
pop
cld
mov
jle
cmp
sbb
or
call
mov
dec
and
xor
sub
cmp
or
mov
shll
pop
dec
push
xlat
xchg
mov
inc
pop
cmpsl
adc
es
xchg
sub
mov
xor
mov
call
lret
push
dec
out
adc
dec
mov
push
enter
push
in
push
shr
mov
addr16
fwait
lods
add
cmp
xchg
sub
jp
adc
pop
loope
and
les
or
xor
imul
es
inc
in
lret
mov
fdivrs
cmp
add
sbb
push
sub
aad
movsl
gs
jne
inc
cmp
scas
repnz
mov
pop
decb
xor
test
rolb
in
fbstp
bound
inc
jmp
push
cmc
dec
cltd
mov
bound
jne
inc
leave
pop
xchg
and
imul
inc
push
icebp
stc
das
setle
cmp
stos
shlb
mov
or
xchg
sub
mov
push
xor
fnsave
ret
imul
cmp
incl
add
jge
lods
xchg
idivl
imul
shrl
xor
mov
dec
cmp
mov
stos
adc
insb
andb
dec
or
shll
and
std
dec
adc
mov
fs
adc
in
mov
pusha
outsb
lcall
push
adc
mov
mov
inc
push
or
out
pop
sahf
data16
adc
mov
sbb
insl
pop
scas
popa
clc
aad
popa
loop
jge
jne
sbb
jp
mov
jne
and
cltd
xchg
loop
add
gs
ja
adc
pop
rolb
mov
adc
std
scas
xchg
enter
stos
or
shll
repnz
jmp
dec
mov
xor
dec
mov
jbe
and
arpl
fnsave
push
int
mov
push
call
sub
lods
cltd
fcompl
movb
nop
lcall
jbe
notl
jne
jmp
test
addr16
mov
stc
mov
jns
xchg
push
adc
lahf
fnstsw
sub
pushf
xor
sub
lcall
scas
insl
dec
popa
pop
lret
jl
dec
push
jg
rcll
jle
push
lret
inc
mov
rcrl
int3
fcmove
pop
sti
int
adc
aaa
or
mov
adc
lds
pop
cmp
rorb
or
jne
fnstenv
inc
mov
mov
decl
pop
xchg
sbb
add
divl
bound
mov
iret
lret
lcall
and
add
in
xchg
mov
xor
jmp
ds
popf
or
jp
dec
shlb
inc
mov
cs
je
jle
cltd
cmpsb
add
or
rorl
mov
or
cltd
cmp
rorl
ret
inc
lds
psubb
lret
lods
cmp
cmp
insb
repz
aam
out
mov
xor
arpl
and
push
and
add
dec
push
int
xchg
clc
xchg
sbb
insb
push
movsb
rclb
ror
mov
xor
test
mov
test
mov
mov
inc
jecxz
hlt
cmp
aaa
sub
adc
jmp
sahf
adc
xor
outsl
xchg
popa
daa
jecxz
cmp
movsb
adc
or
fwait
arpl
cmp
not
jge
in
loope
xchg
sub
sbb
cmp
pop
push
cltd
data16
js
in
addr16
fisttps
pop
ret
sub
fdivp
pop
pop
inc
mov
mov
and
jmp
loopne
adc
stos
mov
add
fisttpll
sub
dec
xlat
shll
and
std
inc
imul
scas
xchg
flds
push
imul
xchg
push
subl
or
or
pop
pop
jb
fstps
xchg
jne
les
lds
je
jge
nop
sarb
aaa
bound
or
fisubrs
adc
out
dec
divb
jns
popa
push
nop
xchg
xor
cld
in
in
imul
in
jae
jne
shll
pop
fxch
jp
fstpt
cwtl
sub
sbb
jnp
pop
mov
mov
mov
fstpl
mov
in
xor
inc
xor
hlt
sub
sub
call
and
out
dec
mov
pop
mov
test
das
xchg
dec
mov
aaa
xchg
outsb
xchg
mov
xchg
and
mov
adc
inc
sbb
aam
aam
pushf
cld
xchg
lds
jnp
repnz
lcall
aas
das
xchg
cmp
jge
pushf
mov
cli
test
xchg
test
out
sbb
ss
dec
idivb
xchg
pop
cmp
pop
js
in
lret
jge
cmp
iret
call
sub
addr16
push
xchg
pop
xchg
pop
adc
adc
jl
roll
aas
std
inc
scas
testb
or
push
in
mov
dec
in
sub
jge
dec
sbb
push
mov
mov
cld
ja
push
add
fstpt
lea
int3
inc
addr16
pusha
fs
xchg
cmp
je
mov
add
sti
repnz
test
das
insl
push
push
shr
xor
dec
stos
in
iret
jns
jnp
push
push
sub
mov
mov
fst
cmp
hlt
pop
ret
jl
hlt
mov
cmp
push
in
dec
xor
jae
jb
dec
push
out
aam
xchg
lods
push
lret
cmpsl
dec
mov
bound
xor
js
cmc
pcmpeqb
enter
or
fs
repnz
mov
fwait
imul
sbb
scas
push
fmuls
std
cmp
inc
fidivrs
push
and
push
das
and
in
pop
bswap
test
imul
cmc
push
lea
addr16
daa
pop
push
jl
stc
add
outsb
sub
daa
push
sub
rolb
inc
cmp
jmp
xorl
in
push
sbb
xchg
inc
test
shlb
rorb
popf
cmpsl
loopne
cld
and
and
icebp
arpl
or
jecxz
lods
sbb
mov
in
add
mov
xchg
xchg
les
call
lret
lret
xchg
jge
mov
lret
popf
les
aad
out
arpl
and
inc
sbb
enter
je
dec
outsl
push
jb
push
movsl
insl
adc
push
pop
jg
and
xor
in
push
cmp
cmp
push
mov
sub
jns
push
cmpsb
idivb
inc
mov
mov
es
and
cmp
sub
lods
pop
mov
aam
mov
cmp
les
fisubrl
xchg
and
push
ljmp
mov
popf
cmp
inc
pop
xchg
lcall
cmc
push
pushf
and
ss
xchg
jmp
cwtl
std
cmpsb
adc
push
notrack
je
inc
or
pop
mov
xlat
adc
sbb
aam
mov
pop
stos
push
outsb
mov
add
push
mov
pop
lock
in
lds
xchg
mov
pop
adc
pop
jnp
in
mov
push
mov
fdivl
lret
shrl
mov
mov
mov
es
dec
call
pop
out
inc
cltd
shrl
sub
out
in
sbb
mov
gs
test
andb
sti
dec
cmp
mov
shl
rcr
cs
lods
push
dec
pushf
pop
mov
pop
in
leave
loope
mov
sub
out
jbe
imul
lret
mull
out
jecxz
cmp
pop
xor
jne
mov
or
cli
inc
or
cmpb
je
enter
ljmp
cmp
pop
dec
imul
mov
movsb
int3
test
push
fldenv
jb
test
jae
cwtl
mov
adc
into
push
popa
nop
push
hlt
push
xchg
aad
mov
xor
mov
movsb
or
mov
enter
roll
fisttps
cld
push
jl
jb
push
stos
or
mov
mov
arpl
out
loope
jmp
sahf
and
push
push
out
out
cmp
or
out
jne
inc
sub
data16
jle
pop
pop
mov
cmp
dec
fldcw
push
push
adcb
push
push
cmpsl
cmp
and
pop
test
ss
jns
inc
out
fmulp
inc
sbb
stos
in
inc
adc
xchg
sarl
inc
outsb
pushf
pop
pushf
clc
int
ja
and
outsb
dec
push
xchg
sti
push
leave
xchg
push
sbb
aam
ljmp
fmulp
idivl
repz
cmp
ss
in
inc
adc
aaa
and
jb
and
popa
jl
cmp
add
lods
sbb
cmpsl
enter
inc
jb
cmc
loopne
add
mov
std
ret
cmp
adc
fs
cmp
jns
nop
push
lret
out
js
adc
jne
xor
jp
stos
fwait
add
fstps
dec
ja
sbb
adcb
xor
outsl
mov
mov
scas
rclb
popa
push
imul
scas
leave
sbb
add
sbb
in
enter
xchg
xchg
inc
mov
mov
xor
push
push
icebp
fstl
and
mov
repz
loop
mov
push
xor
mov
xchg
mov
scas
lods
iret
sub
jecxz
cmp
mov
and
xchg
lcall
popf
sbb
rcrb
add
aaa
out
repnz
movsb
les
repz
mov
and
or
push
xchg
xchg
arpl
sbb
fadds
and
add
mov
cmp
es
cmp
jno
or
and
std
cmc
mov
inc
aaa
lcall
cld
or
push
in
adc
int
aas
lahf
pop
pop
iret
stos
push
cmp
sti
pop
dec
das
lcall
fs
mov
and
clc
loope
jo
jg
mov
jmp
sub
sub
cs
sti
dec
data16
xchg
mov
mov
lods
jae
add
xchg
mov
fs
jecxz
in
or
daa
adc
test
push
and
aaa
fadd
pop
rorl
fisubrl
mov
cmp
movsb
adc
imul
adc
cli
insl
lcall
sbb
aad
dec
shlb
aam
and
add
ss
add
add
stc
gs
and
or
and
movb
jmp
add
addl
lret
or
dec
inc
lods
jno
xchg
bound
clc
stc
jb
loopne
mov
push
mov
dec
mov
fistps
aam
sub
jge
or
imul
sahf
out
xor
add
push
sub
add
adc
mov
sahf
or
sub
scas
loop
cmovl
inc
scas
push
in
jnp
and
dec
fs
mulb
rcrb
mov
out
and
test
mov
mov
pop
cmpl
push
jne
mov
mov
xchg
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
lahf
repz
out
addl
and
fildll
mov
ja
sahf
add
xor
xor
or
jns
mov
push
stc
push
rcll
or
push
jl
dec
and
cmpsb
movsl
sti
add
pop
in
cltd
jb
or
iret
in
cmc
dec
fstpt
jbe
xor
lcall
mov
ficompl
mov
out
aas
jno
int
cmp
aam
ficomps
add
xor
xor
rol
and
int
lret
rorb
inc
data16
mov
loop
das
dec
in
in
fcomi
out
cld
and
lods
js
push
popl
inc
outsl
xchg
lods
mov
jo
mov
lahf
dec
std
hlt
scas
pop
orb
sti
js
pop
pop
xchg
mov
jo
adc
inc
mov
dec
push
repnz
adc
addr16
xor
jg
shrl
divl
xchg
pop
jge
popf
mov
xchg
cmpsl
mov
add
push
movsb
adc
mov
pop
mov
push
fbld
js
sbbb
test
data16
mov
adc
les
cmp
xor
incl
or
push
shlb
pop
mov
ds
dec
push
pop
mov
push
jno
mov
outsl
inc
or
push
jg
clc
jns
or
and
jbe
sbb
lods
mov
outsl
pop
stc
xchg
and
push
ja
fmul
int
aas
mov
and
push
mov
iret
dec
mov
mov
sbb
int3
popf
ror
or
clc
stos
push
stos
sbb
mov
lret
data16
fsubrs
jge
inc
filds
dec
shrb
shll
out
push
jne
xor
out
cmp
shrl
outsl
jle
sbb
xor
insl
scas
pop
fdivrp
sti
cmc
rolb
or
add
sub
push
test
cmc
or
icebp
roll
add
lcall
and
lret
ljmp
cltd
pop
push
movb
adc
lret
fisttps
push
mov
dec
js
lahf
stc
mov
out
dec
jo
in
and
xchg
shrb
pop
mov
jbe
pop
mov
cld
jg
pusha
enter
jle
pop
or
inc
sub
adc
dec
xchg
sahf
add
movsl
push
out
jns
inc
test
iret
jle
push
mov
jb
mov
push
pop
shlb
mov
xor
movups
ljmp
sarb
scas
cmp
aas
mov
add
dec
fwait
scas
or
mov
adc
popf
dec
adc
fs
xorb
sbb
pop
bound
mov
aad
dec
aad
js,pn
adc
mov
xlat
sub
xor
test
inc
add
inc
bound
mov
pusha
clc
xchg
popf
dec
clc
iret
rol
call
pop
pop
add
arpl
jbe
scas
aaa
push
ficomps
push
repnz
push
inc
mov
push
insb
scas
clc
sbb
cmp
iret
sub
sarl
call
js
lret
enter
and
scas
xor
aad
fst
lahf
push
in
inc
repnz
or
icebp
and
sarb
cmpsl
mov
push
add
lds
fisubs
add
or
xlat
and
dec
aaa
rol
xor
imul
aas
outsl
add
lcall
arpl
and
mov
xor
movsb
rorb
nop
sub
jnp
ss
jbe
jns
out
ljmp
iret
mov
sub
clc
test
cmp
movsl
loope
iret
dec
lds
pop
and
cmc
lret
mov
in
pop
cmp
pop
leave
leave
sarl
xor
cmp
pop
mov
gs
jecxz
daa
sti
pop
sub
int
push
ret
sbb
roll
mov
cmp
cmp
xor
or
cmp
xchg
int3
inc
fnstcw
xchg
add
lods
xchg
popf
outsb
scas
inc
lea
adc
sbb
pushw
sub
and
cmp
or
mov
fldcw
sbb
nop
cmp
push
mov
orb
clc
mov
adc
adc
in
loope
dec
sub
sub
fnstenv
test
inc
ret
sub
filds
mov
cmpb
or
pop
shll
repnz
repnz
fisubl
sub
mov
rorb
xchg
dec
popa
push
lar
inc
std
cmpsb
sub
lea
nop
push
mov
or
jbe
dec
shlb
xchg
xchg
aaa
add
and
lret
xchg
xor
adc
clc
mov
int3
cmpsb
mov
imul
mov
xchg
add
pop
inc
cs
repz
lds
cmpsb
jmp
sbb
stos
xlat
sahf
adc
jnp
sbb
jecxz
inc
dec
jno
stos
mov
push
test
cmpsb
insl
dec
add
lret
pop
aaa
push
pushf
adc
lcall
inc
push
pop
pop
push
xchg
mov
and
pop
out
sbb
sub
pop
mov
xchg
and
adc
adc
dec
outsl
push
incb
sarb
aaa
xchg
inc
or
mov
ret
mov
add
mov
and
inc
and
sub
outsb
leave
and
inc
mov
mov
aaa
pusha
sbb
xorb
repnz
aad
loopnew
mov
or
mov
test
or
cmpsb
cmpsl
add
test
repnz
mov
inc
sti
daa
push
outsb
inc
adc
fidivrl
sub
fdivrs
or
lret
mov
ret
lret
cmpsb
xchg
aam
mov
in
mov
dec
sbb
push
test
inc
arpl
mov
test
stos
and
mov
icebp
push
jbe
mov
sub
cmc
adc
outsl
pop
mov
or
les
add
iret
movb
mov
xchg
and
jno
mov
and
insl
rcll
aam
or
jl
jns
adcl
shlb
mov
pop
or
push
inc
out
pop
dec
cmp
incl
adc
mov
lahf
lcall
push
inc
repz
dec
sti
jle
sbb
cmc
xchg
cmp
push
push
push
dec
jo
gs
pop
outsb
sub
jl
add
add
daa
dec
inc
jl
add
mov
xor
push
cmp
jb
out
ffree
cmp
mov
cs
mov
enter
stos
add
ss
movsl
add
dec
xchg
mov
mov
jg
leave
add
mov
cmp
sbb
hlt
inc
xor
mov
cwtl
jp
mov
sub
add
movsl
shlb
stos
int3
call
add
adcb
xor
fstpl
ret
ret
dec
movb
addl
imul
std
dec
mov
in
int
push
sbb
das
orl
mov
in
jmp
sub
icebp
leave
xchg
outsl
xor
scas
jg
lret
cmpsb
icebp
js
and
xor
mov
push
shll
fsts
rcr
inc
push
lret
subl
jl
lret
cli
sbb
xor
pushf
hlt
ja
and
adc
cmpsb
insb
or
hlt
pop
outsl
add
stos
lock
loope
or
out
in
std
adc
or
ffreep
xor
cmpl
icebp
and
or
aad
mov
jl
pushf
mov
loope
mov
mov
cmp
repz
push
cmp
add
in
pop
jecxz
loopne
data16
push
lret
insb
pop
xchg
xor
pop
dec
xor
or
fisubl
js
and
stos
jno
mov
xor
andl
or
xchg
shll
push
inc
jne
iret
lahf
push
hlt
jne
sti
cmpsb
push
adc
cmpsb
movb
idivb
pusha
bound
adc
out
jg
push
ror
adc
or
sbb
pop
aaa
in
rcl
test
andl
call
lock
sti
add
mov
sbb
inc
call
mov
jno
cmp
add
add
sbb
repz
test
pop
push
mov
adc
das
cmp
adc
mov
out
cmp
lds
sub
icebp
or
shlb
xchg
mov
lds
insl
sub
call
push
mov
lds
sbb
xor
push
cmp
dec
or
mov
adcb
jmp
xchg
sbb
mov
out
mov
add
int
and
adc
lods
mov
pushw
test
imul
out
adc
fyl2x
cmp
int
xor
test
mov
inc
dec
pop
mov
xchg
cmp
cmp
orl
repnz
stos
pop
sahf
xchg
loopne
xor
mov
and
adc
in
repz
and
jl
cmpsb
pop
add
push
dec
lea
std
test
js
repnz
push
inc
mov
mov
mov
pop
flds
fsubrs
mov
clc
jmp
jge
mov
xchg
add
int3
or
loopne
popw
in
int3
fbld
and
push
push
popa
mov
in
sub
jne
jmp
jle
cmpsl
dec
lcall
add
lahf
add
sub
cmp
xchg
test
inc
xor
int3
pop
das
add
jb
lods
add
nop
and
mov
lahf
mov
cwtl
popa
jle
adc
repnz
jns
inc
adc
fldl
les
push
add
add
adc
fmul
mov
and
ficomps
jne
inc
xchg
pop
aas
repnz
jmp
add
mov
add
aaa
jecxz
addr16
and
into
cld
jge
sub
add
sub
xor
mov
add
aad
jbe
add
int3
jl
jp
out
pop
imul
dec
jnp
dec
jl
ret
dec
in
fisubl
sbb
scas
jb
sti
jmp
push
sbbl
sbb
xchg
jecxz
ficoml
jl
mov
decl
addl
xchg
ss
mov
ret
xchg
xchg
jp
loop
repnz
or
repnz
fxam
xor
and
imul
shll
cmp
xchg
sub
fistpl
scas
daa
aaa
sbb
repz
mov
inc
divps
inc
mov
jno
or
lret
push
testb
dec
sub
outsl
nop
xchg
sbb
shlb
out
jo
stc
sub
sbb
sub
xor
int
in
les
lret
push
loop
jns
cltd
lods
adc
jno
je
xchg
cmp
incb
sub
mov
mov
cmpsl
or
lea
push
sbb
xchg
jns
xor
div
inc
mov
ja
adc
insl
test
inc
pop
and
push
loope
push
stos
xchg
or
jg
xchg
sub
loope
dec
pushf
mov
fiaddl
adc
enter
adc
dec
inc
call
mov
pop
xchg
add
in
imul
movsb
add
pop
sub
dec
or
test
jg
sbb
psubb
lods
popf
jns
jno
mov
mov
sub
js
jne
mov
and
ret
mov
loop
push
or
fistpll
mov
scas
xor
adc
lods
sub
sbb
nop
scas
xchg
fbstp
pop
xor
scas
mov
pop
or
cmpb
js
mov
jno
cld
xchg
push
daa
out
xor
daa
mov
inc
psrld
pop
sbb
out
int
sti
lret
jne
stc
gs
mov
ss
cltd
fwait
pop
into
jnp
call
aad
mov
sti
test
cmp
inc
xor
and
or
imul
imul
push
xchg
inc
mov
xlat
sbb
out
fs
mov
adc
or
add
cmc
dec
into
xchg
add
ret
jb
adcl
out
sbb
add
cltd
xchg
dec
cs
and
ds
inc
or
mov
pop
add
imul
mov
dec
dec
in
xor
repz
aad
in
das
or
adc
mov
mov
push
jmp
inc
xchg
sbb
cmpsl
ja
popl
into
jecxz
sti
sub
pop
sbb
jecxz
sub
xchg
mov
loop
xor
or
add
cli
xor
sahf
dec
aas
aas
sarl
and
ljmp
aaa
mov
mov
mov
add
sbb
mov
sub
repz
push
inc
ret
aam
push
fs
cmp
push
dec
cmc
push
sub
shl
adc
xor
cltd
lret
scas
mov
aad
sbb
mov
pop
add
mov
adc
adc
aad
fwait
mov
xchg
inc
mov
pop
adc
dec
add
jnp
sub
push
pushf
sub
mov
sbb
and
dec
cltd
scas
adc
mov
pop
cltd
into
fidivrl
sub
sbb
ja
jge
ljmp
in
scas
repnz
rcll
ud1
pushf
clc
cmp
jns
mov
fwait
int3
scas
int
fwait
aad
mov
mov
jg
imul
sub
pop
pop
cmpsl
lock
push
and
das
push
cmp
je
outsb
iret
outsb
lcall
cmpb
hlt
jb
mov
pop
dec
std
xor
invd
push
negl
iret
sub
cltd
push
jbe
sub
mov
cmpsb
jcxz
bound
mov
rorl
mov
loope
or
inc
movl
fstpt
gs
mov
xor
and
pushf
enter
scas
push
ror
mov
sub
jg
inc
jl
xchg
dec
movsl
lret
in
mov
jo
imul
mov
into
pushf
sub
xorb
cld
div
or
hlt
dec
incl
fs
popf
mov
hlt
pop
paddusw
mov
sub
leave
pop
jb
or
sub
push
dec
pusha
jle
int3
cpuid
push
dec
ljmp
js
adcl
pop
jb
cld
int
mov
xchg
mov
std
cmc
mov
sti
ret
insb
mov
xchg
sbb
or
scas
xor
sarb
lea
pushl
sbb
jecxz
push
mov
out
fldt
push
or
mov
lcall
cmp
repnz
in
adc
pop
fnstsw
das
fwait
add
fwait
adc
js
mov
jge
mov
dec
inc
mov
sub
test
imul
imul
test
push
sbb
push
jge
pop
in
xchg
and
pop
and
out
movsl
jae
inc
or
inc
mov
push
lods
iret
test
push
inc
inc
negl
mov
jnp
add
and
pusha
xor
jbe
leave
scas
jno
xor
sbb
push
add
stos
inc
scas
cmc
dec
mov
cmp
decb
xchg
sbb
mov
in
lds
fiaddl
js
or
shlb
pop
dec
inc
mov
loopne
xchg
sti
push
in
pop
cmpsl
add
or
stos
cmp
mov
mov
test
ficoml
ljmp
mov
rep
jne
mov
dec
adc
mov
in
stos
cwtl
mov
mov
nop
loope
cmp
or
add
xchg
push
das
mov
cmp
in
mov
mov
and
movb
add
out
xchg
cli
mov
jns
sub
and
test
sub
sub
pop
add
jg
das
xlat
addl
stos
int3
movb
sbb
in
mov
and
mov
jnp
mov
adc
pop
mov
fwait
lret
inc
icebp
xor
adc
popf
pop
mov
in
pop
aaa
test
pop
das
pop
paddq
add
jb
jge
xchg
and
jne
mov
inc
popa
push
mov
mov
fwait
cmp
jg
jl
inc
popf
mov
jp
test
xchg
cs
leave
xor
pop
std
dec
lods
pop
pusha
push
aad
sbb
leave
mov
pushf
test
nop
sti
jb
fnstsw
push
repnz
push
mov
dec
xlat
mov
sbb
ds
cli
pop
xor
jle
test
das
pushf
push
dec
xor
or
shll
and
fwait
mov
mov
mov
enter
add
or
lds
jmp
movsb
cwtl
mul
insl
push
sbbb
mov
pop
push
cwtl
sub
stc
rep
xchg
jmp
sbb
test
sub
outsl
xchg
mov
xchg
call
in
fsubl
or
add
stos
lea
or
push
inc
stc
fsubrs
xor
xor
jl
jae
imul
outsl
fistl
lcall
push
pushf
in
add
mov
jmp
andl
jne
cs
add
mov
pop
mov
mov
repz
mov
rcl
inc
xchg
push
push
adc
cmpsb
dec
jno
sbb
sub
sbb
icebp
repz
jle
int
xchg
mov
lods
pop
hlt
ljmp
mov
inc
or
pop
lock
stos
sub
aas
mov
or
sub
into
loope
jge
adc
dec
xchg
push
popa
jns
cmp
gs
hlt
loope
xor
hlt
test
hlt
mov
xor
ja
adc
incl
inc
or
addb
and
jo
clc
jge
jb
inc
js
cmpsl
jmp
ret
push
mov
popf
or
in
popf
inc
mov
test
cmpsl
mov
mov
sahf
cmp
inc
xor
loope
adc
hlt
sub
xor
pop
int
or
js
mov
adc
add
xchg
mov
imul
pop
pop
sbb
scas
sub
pop
mov
mov
in
adc
mov
pop
test
xor
in
xor
sbb
push
pop
jp
jg
mov
repz
sarl
aam
into
jae
sti
cmp
ja
inc
xor
repnz
push
mov
fidivl
scas
jle
sub
arpl
adc
in
add
cmc
dec
pop
fucomip
jl
mov
pop
adc
jl
jp
pop
pop
fimull
outsl
cltd
cmp
pop
or
adc
push
or
push
inc
cmc
mov
or
in
jnp
scas
fs
inc
scas
daa
arpl
std
inc
nop
cmp
xlat
jbe
mov
cmpsb
adc
pop
push
xchg
test
aas
insb
pop
repz
mov
xor
inc
mov
mov
in
fdivl
xchg
repz
pop
ret
test
fwait
jnp
jge
mov
repz
flds
nop
outsb
dec
sahf
pusha
jbe
pcmpeqb
and
add
cmp
cltd
mov
inc
jl
push
ja
loop
addr16
jl
int
inc
and
pop
loope
addr16
gs
leave
sbb
pusha
mov
orl
cli
jno
cli
pop
mov
cmc
loopne
mov
cs
stos
cmp
pop
cwtl
mov
mov
gs
adc
push
mov
das
xchg
jmp
rolb
mov
nop
mov
aaa
insb
sbb
push
dec
stc
fisubl
xor
mov
mov
test
cmp
sub
mov
jmp
xor
mov
repz
test
pop
jns
cmp
adc
clc
jne
pop
xchg
test
in
cmp
movnti
mov
popa
fwait
daa
daa
sbb
cwtl
adc
adc
mov
divl
inc
adc
stos
mov
clc
out
cmp
aas
xchg
fiadds
fsubl
sbb
aaa
or
jl
pop
arpl
into
mov
fwait
cltd
mov
jo
xlat
jne
add
adc
cmp
jecxz
movsb
dec
loop
cmp
daa
push
jb
and
ret
inc
jne
mov
xchg
iret
icebp
lret
adc
or
movsl
nop
adc
int
imul
xor
sti
jecxz
lods
adc
cwtl
shll
pop
jg
cmp
divl
or
mov
ret
mov
sub
sub
add
cmp
add
repnz
and
fisttpll
pushl
or
lods
or
push
xchg
test
xor
scas
sub
dec
xchg
ja
rolb
cs
clc
and
adc
std
dec
inc
jmp
bound
shrl
adc
pop
and
mov
js
mov
call
nop
cmpsb
add
push
jge
xchg
insl
pop
roll
inc
inc
sub
js
mov
jnp
jmp
dec
and
inc
ss
xor
test
push
test
iret
int3
les
stc
lods
inc
rcr
cmc
pop
leave
mov
xor
das
fisubrs
sbb
dec
push
jae
jns
call
sub
sub
mov
dec
lock
rep
add
ret
clc
dec
mov
cli
mov
pop
test
push
mov
xchg
aas
mov
push
cmpsl
lods
jno
test
adc
cmp
lahf
arpl
loop
push
outsl
xor
out
jnp
xor
mov
cwtl
aaa
dec
jecxz
cltd
btr
dec
jge
pop
jecxz
fcomps
ds
rcl
fistps
rcrl
cs
xor
imul
mov
xchg
dec
shlb
icebp
movsl
loope
mov
sub
popf
sbb
pusha
and
divl
mov
pcmpgtd
adc
and
in
and
add
mov
scas
loope
lods
sub
mov
dec
adc
xchg
cmp
inc
rcrb
cld
arpl
out
ret
inc
mov
daa
cmp
cmc
dec
sti
mov
and
push
sti
xor
jecxz
pop
inc
hlt
adc
int3
cmp
mov
stos
cmp
jbe
jecxz
les
pop
sub
testl
imul
iret
xor
cltd
inc
arpl
mov
xchg
push
pop
and
daa
sbb
loopne
das
imul
mov
add
in
sbb
and
sub
push
jecxz
cwtl
mov
aaa
push
inc
iret
xlat
dec
push
cmp
mov
mov
dec
mov
add
pop
lret
les
add
sbbl
in
and
cmp
and
aad
cmp
pop
dec
insl
shrl
pop
enter
inc
pop
cltd
mov
leave
js
lods
xchg
lahf
rorl
js
ja
filds
fldcw
loope
dec
lcall
out
cli
popa
add
jp
dec
pushf
popa
xlat
jns
clc
mov
inc
mov
fnstenv
fmull
or
mov
mov
push
push
jp
imul
lea
repz
cmp
cwtl
ljmp
in
xchg
jecxz
sub
out
mov
shlb
movb
dec
lret
cwtl
jmp
pop
das
jb
sub
mov
test
mov
pop
dec
decl
es
dec
sti
mov
sub
mov
pop
xchg
sub
xor
mov
repnz
out
pop
sub
cmpsb
and
sbb
mov
and
jecxz
mov
and
or
sub
mov
popf
push
scas
jnp
call
adc
lcall
aaa
int
adc
push
fsts
push
jae
sarl
movsb
mov
jl
arpl
xor
gs
repnz
popf
test
dec
xchg
dec
xchg
push
pop
and
sbb
fucomi
stos
in
rcrl
sub
jmp
adc
push
jo
push
out
pop
or
test
popf
cmp
jae
nop
pop
call
rol
imul
mov
pop
or
mov
out
pop
jno
ror
xor
jae
sti
and
inc
or
push
dec
fidivrl
adc
xor
mov
cmp
mov
repnz
pop
repz
lods
xchg
xchg
xchg
lea
sbb
jnp
sub
sbb
jmp
loope
es
xor
mov
call
lock
jbe
test
int
mov
mov
push
lret
rcl
or
nop
xor
cmp
scas
sahf
cmpsb
xor
jae
nop
xor
imul
xor
pop
js
push
xor
sub
add
dec
out
popf
cmpsl
inc
or
stc
cmpsb
ja
sub
pop
call
or
mov
pop
or
cmp
xchg
inc
mov
mov
hlt
pop
out
push
mov
add
inc
xchg
xorl
lret
loop
mov
sti
and
idivb
jae
enter
in
enter
mov
loopne
enter
sahf
mov
mov
cmp
enter
and
scas
ja
sbb
jge
pop
hlt
sbb
out
rclb
cmc
into
loopne
sbb
lcall
jecxz
add
inc
inc
fwait
add
in
std
pop
dec
imul
pop
add
mov
xchg
jmp
clc
jg
xchg
inc
int
cmc
pop
icebp
sahf
push
ss
push
xor
sbb
add
xor
xor
addr16
inc
inc
gs
fmul
pushl
repnz
out
test
mov
sbb
cmp
hlt
adc
movsb
inc
jle
testb
and
outsb
mov
xor
push
and
test
mov
ds
sti
js
test
sarl
or
add
test
aaa
imull
loop
mov
dec
jmp
popf
lea
in
adc
mov
mov
jnp
mov
gs
mov
mov
inc
adc
in
mov
xchg
push
jg
jno
lahf
push
aad
cmp
fistpll
sbb
pop
aaa
outsb
test
int3
stos
jne
rorb
sbbb
dec
test
inc
mov
dec
mov
and
shrl
loope
push
jecxz
jp
dec
ret
frstor
ret
sbbl
pushf
sbb
jne
inc
push
xchg
jle
mov
aad
loopne
mov
sub
dec
or
sbb
and
mov
aad
adc
push
jecxz
shrl
iretw
mov
inc
push
add
cs
cli
call
loope
ljmp
inc
imul
inc
push
fcomp
fwait
push
ret
fstps
mov
xor
jo
or
std
and
into
scas
int
xchg
test
into
mov
xor
push
jb
inc
loope
outsb
mov
xor
pop
not
mov
les
add
pop
in
dec
in
dec
dec
sub
lahf
mov
push
insl
aas
rcrl
repz
xchg
mov
jge
fs
in
ret
mov
cmpsl
sbb
in
aad
sub
int3
jmp
add
ss
jne
dec
mov
dec
cs
fiadds
mov
cmp
adc
sbb
push
mov
ret
es
jecxz
or
ret
push
xchg
inc
fwait
lock
clc
sub
sbb
add
mov
cltd
imul
sbb
xchg
fnstenv
jnp
iret
xchg
adc
mov
aas
cld
xchg
xorb
inc
sarl
jb
inc
xchg
push
cs
and
mov
das
loopne
sub
pop
mov
repnz
inc
roll
xchg
out
popa
sahf
in
adc
add
sbb
rcl
or
inc
decw
add
xor
push
lahf
xchg
arpl
sub
inc
cmpb
cwtl
sub
cli
push
lret
sub
test
outsb
cmp
into
xor
xchg
fldcw
sbbl
loope
adc
std
dec
push
mov
popa
je
sub
jmp
es
xchg
xchg
jecxz
scas
lret
popa
xor
cwtl
addr16
adc
jbe
mov
xor
lea
fs
mov
jne
in
addr16
repz
pop
in
adc
sbb
fcompl
jnp
lcall
adc
andl
leave
icebp
push
insl
pop
adc
fwait
or
test
aaa
xchg
arpl
fs
shrl
dec
shrb
ljmpw
mov
adc
les
xchg
mov
dec
loopne
fldcw
fucom
mov
push
jecxz
je
mov
adc
jl
adc
xor
sbb
adc
pop
divb
mov
sarb
add
pusha
adc
das
cmp
xchg
aad
in
xorb
imul
mov
mov
mov
dec
outsb
fisubs
ljmp
adc
cmpsb
aas
addr16
sub
mov
pushf
sub
sub
movl
adc
cld
dec
cmp
pusha
in
std
rcll
stos
cmp
xchg
add
push
push
mov
push
sbbl
bound
xlat
xchg
test
or
and
gs
lret
std
pop
sbb
pop
xchg
inc
jmp
xor
mov
test
push
loop
insb
stos
mov
movsl
sub
test
ljmp
xchg
out
ljmp
adc
dec
addb
out
sbbb
addr16
jge
pop
divl
xchg
push
xchg
push
adcl
xchg
and
fstps
mov
dec
mov
imul
push
stos
lea
enter
cmp
fwait
inc
dec
cmpsl
and
xchg
outsb
mov
popf
mov
mov
xchg
aad
jo
pop
shrl
pop
cmp
cs
mov
dec
jecxz
ja
clc
shr
outsl
nop
imul
andl
adc
test
xor
or
in
inc
sti
cmovge
adc
mov
and
push
xor
repnz
in
lods
lods
call
ja
ss
push
pop
mov
popf
inc
cmp
les
push
or
jb
push
data16
stc
unpckhps
and
and
loop
shl
mov
andb
sbb
cmp
mov
mov
adc
adc
popf
ljmp
push
sub
xor
fsubrl
sub
ret
jae
imul
pop
cltd
int3
fisubs
or
jno
push
jns
daa
in
xor
add
in
adc
in
shl
jns
sbbb
pop
out
ucomiss
enter
adc
add
xlat
xor
and
push
nop
cmp
or
sbb
aad
std
inc
jle
jge
or
xor
lock
in
sub
arpl
cmc
xor
mov
sti
xchg
std
movsb
push
jae
pop
mov
and
or
or
icebp
in
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
adc
cltd
push
pop
and
cmpl
inc
daa
mov
xchg
dec
jb
aad
xor
jmp
sahf
mov
add
int
xor
clc
insl
loopne,pn
test
and
loopne
or
out
iret
sub
jp
sbb
mov
sbb
jae
jmp
cmp
xchg
adc
lds
movsl
cmp
mov
pop
xor
dec
inc
rcrb
add
decb
insb
test
or
fcmovnb
add
cmp
push
push
push
test
inc
ret
lret
je
ljmp
in
mov
xor
dec
sub
psubq
lods
mov
sub
cmpsl
in
scas
test
cmovb
cmpsl
scas
rcr
mov
rcrb
push
je
push
mov
pop
mov
stc
sti
out
mov
daa
out
mov
hlt
test
fistps
jns
add
fs
addb
mov
dec
dec
lahf
lahf
dec
fisubs
rcrb
popf
in
push
in
addps
push
pusha
nop
int
jno
loopne
cld
nop
mov
stc
jp
cmpsl
jmp
mov
mov
or
push
cmpsl
ljmp
fwait
jle
xchg
ja
jl
mov
jg
fisttps
cmp
out
adc
ljmp
cmpsb
in
xchg
lds
mov
lahf
xlat
mov
sub
lret
jne
fidivl
mov
mov
call
pop
sbb
or
notl
frstor
lods
popa
mov
lock
lret
imul
call
add
jne
mov
mov
jge
mov
fisubl
out
dec
icebp
add
lcall
add
dec
mov
lahf
pop
mov
test
les
mov
sub
lret
inc
add
sub
mov
iret
add
mov
fiadds
cli
xchg
mov
fwait
scas
gs
stos
and
pop
sbb
call
movsl
push
push
pop
and
mov
lods
gs
out
fld
shrl
ja
clc
enter
and
stos
adc
stc
mov
fsubl
add
cmp
xchg
les
fdiv
cmp
adcl
sub
dec
in
xor
push
adc
jecxz
cmc
xchg
sub
adc
dec
inc
jp
in
mov
cmc
pop
sub
push
aaa
xchg
cmp
add
cmp
sub
clc
movsl
push
int
dec
ret
dec
push
push
outsb
pop
cli
jge
shrb
push
xchg
adc
adc
jno
mov
sub
adc
mov
nop
or
and
fwait
mov
cli
or
loopne
mov
in
jle
jne
cli
sbb
mov
adc
mov
xor
and
add
test
daa
cmp
scas
xchg
jns
push
lea
mov
or
push
imul
pop
aam
shrl
xorl
cmc
loopne
xor
lock
push
dec
lret
cld
cltd
bound
dec
mov
aas
fisubl
jne
arpl
iret
fwait
insb
xadd
bt
cmpsb
inc
jl
sbb
lods
jecxz
mov
mov
push
insb
jle
pop
ret
lock
mov
addr16
dec
pushf
add
sbb
xor
inc
lret
pop
sub
int
lock
repz
fcmovnbe
sub
xor
gs
cli
repz
popa
dec
loope
jmp
mov
dec
idiv
pop
mov
add
insl
in
jno
outsl
pop
or
jae
inc
ss
sub
loope
shlb
push
inc
jmp
cwtl
xchg
mov
xchg
sbb
nop
sbb
call
mov
aas
cld
int3
icebp
push
mov
cmp
sub
pushf
jle
mov
or
pop
out
enter
loope
fisubrl
icebp
int3
gs
icebp
sar
loope
xor
lahf
enter
mov
xor
and
fistpl
movsb
xlat
push
mov
cld
mov
lcall
dec
ret
mov
leave
ss
push
add
mov
fwait
cmpb
mov
jl
mov
pop
fidivrl
adc
mov
hlt
xchg
popa
jp
adc
call
loope
sbb
test
aas
mov
mov
xchg
jmp
add
mov
jmp
lods
adc
scas
sbb
scas
inc
inc
nop
xor
or
cs
enter
scas
xchg
xchg
and
pushf
lret
daa
std
and
loope
inc
loop
mov
das
stos
adcl
sbb
lahf
mov
adc
push
jmp
mov
lock
popa
out
xchg
sub
mov
inc
in
push
fwait
xchg
outsl
mov
jns
xor
inc
jecxz
mov
sub
xor
pop
lahf
mov
add
stos
into
js
inc
shll
adc
jo
or
mov
cmpsl
aaa
je,pt
push
xor
aas
xchg
pop
or
lock
ds
insb
mov
inc
in
add
push
bound
mov
lods
pop
aam
sbbb
xor
andb
xor
sarb
mov
fcoms
xchg
mov
and
mov
mov
sbb
ds
aam
stos
sti
sbb
rorl
nop
mov
mulb
loope
inc
leave
ds
mov
jl
mov
pop
sbb
mov
cmpsb
or
dec
pop
adc
mov
mov
loope
mov
fldt
inc
xchg
cmp
cmp
lret
add
or
lcall
testb
push
lea
lock
int
sti
test
imul
popf
roll
fnstcw
in
ljmp
add
xchg
or
jp
add
fldl
imul
and
and
movsl
dec
pop
mov
mov
fstpl
push
scas
xor
sbb
enter
pop
ljmp
pushf
fiaddl
sbb
daa
out
mov
loopne
sbb
js
sbb
add
cld
dec
popa
clc
fnstsw
pop
or
leave
in
fstpl
loopne
jl
add
lods
mov
push
xchg
dec
aad
cmp
cmp
sbb
adc
dec
call
pop
dec
cmpsb
dec
ljmp
movl
pop
loopne
dec
xchg
pushf
dec
cmpsb
adc
inc
pop
cmpsb
orl
cmp
jl
subl
sub
xorl
xchg
lock
in
mov
dec
sub
sbb
inc
inc
cmp
ja
cmp
xorl
sahf
shlb
fnstcw
daa
push
imul
fcompl
or
adc
sub
dec
mov
std
pop
or
sbb
inc
xor
push
pop
xchg
lahf
cmp
clc
mov
and
ds
xor
push
in
or
add
sbb
cmpb
inc
jb
dec
jge
je
rcll
fldenv
mov
push
mov
inc
loope
incb
std
xor
test
mov
xor
mov
iret
mov
lahf
pusha
mov
stos
pop
mov
repnz
mov
mov
bound
test
or
lret
pop
out
dec
cltd
jl
filds
mov
cmpsb
push
xchg
ret
jl
bound
in
xor
mov
ficomps
iret
popf
mov
or
dec
push
leave
or
loopne
pop
xchg
mov
aad
and
sbb
dec
push
div
inc
mov
in
rclb
call
sub
mov
outsl
int
jb
add
jle
pushf
cmp
data16
mov
and
lcall
dec
inc
repnz
pop
and
dec
lret
gs
xchg
cmpb
mov
aad
mov
cli
cmpsb
xchg
fnsave
pop
adc
popfw
xchg
iret
fldenv
repz
lock
in
push
aas
fcmovne
pop
jp
fwait
add
ret
adc
push
sbb
dec
addb
test
mov
push
or
jmp
enter
call
add
and
push
dec
mov
sbb
xor
rclb
ljmp
adc
cmp
add
add
cli
sti
rorb
mov
std
push
jg
sbb
push
scas
inc
mov
pop
aam
sub
xchg
lds
dec
ja
mov
std
popf
sti
pop
xchg
adc
hlt
mov
cmp
mov
popf
xlat
xsavec
mov
xor
dec
mov
push
aad
in
cmp
into
mov
push
pop
test
scas
mov
ficomps
cld
repnz
fmuls
icebp
les
mov
jl
dec
push
dec
sub
dec
xor
dec
adc
inc
repz
test
incb
in
and
fwait
pop
inc
jge
notl
pop
outsl
push
inc
and
mov
lock
jp
imul
xchg
in
out
and
inc
xchg
sarl
movsb
adc
mov
lods
sahf
loop
mull
ret
lds
test
sbb
adc
and
out
lods
mov
sub
pushf
and
mov
add
lea
cmp
inc
fistpl
imul
adc
dec
push
mov
mov
xor
add
xor
test
pop
out
jne
lea
lcall
aas
inc
mov
mov
pop
or
xlat
push
sbb
mov
jns
or
data16
sti
aam
rcrl
sahf
scas
scas
adc
mov
cmp
mov
call
pop
mov
in
movsl
rol
pop
mulb
in
rolb
popa
jns
movsl
mov
pop
mov
repz
out
xor
sub
imul
or
dec
cmp
shll
inc
push
lret
or
jns
fldcw
xlat
scas
data16
sbb
iret
xchg
sub
add
bound
xchg
xchg
pop
daa
fadd
push
push
out
ret
rcrl
cmc
lahf
lock
mov
in
sarb
aam
push
movsl
scas
add
pusha
ror
inc
sahf
adc
dec
push
pusha
mov
das
es
cld
sub
jbe
jb
test
addr16
adc
out
insl
insl
inc
imul
aad
pop
push
pop
pop
mov
shlb
nop
lahf
std
fsubrs
jmp
mov
cmp
sub
jp
push
in
cmp
xor
xchg
cmpsb
insl
mull
pop
aaa
mov
mov
fcoml
xchg
sbb
inc
mov
xor
lods
cwtl
xchg
dec
cltd
rcl
jecxz
popf
adc
and
mov
cmp
popf
jae
mov
sub
sub
in
adc
repz
add
andl
dec
ja
and
data16
pop
mov
fs
mov
mov
push
jg
xlat
mov
jle
imul
out
and
out
xorb
sub
repz
and
and
cmpsl
les
cmp
inc
cmp
cmpsb
movsl
push
mov
ret
cmp
and
stos
mov
mov
pusha
or
or
inc
movsb
jo
aaa
out
loop
fst
cmp
outsb
das
sahf
cwtl
fs
mov
pusha
ja
sub
sub
stos
mov
push
out
lds
push
and
aam
mov
dec
mov
gs
arpl
adc
cwtl
sbb
daa
adc
inc
pop
cmc
cli
jmp
mull
je
mov
xchg
fstp
add
sub
fbld
gs
ret
cltd
test
jecxz
mov
adc
in
add
imul
lcall
scas
mov
lods
jmp
fcmovnu
pop
in
test
xchg
jae
sti
mov
subl
int
loop
and
ja
js
cmc
mov
and
cmpb
loope
aas
sub
stos
lcall
add
orl
push
mov
rorl
xor
lds
and
lods
in
insl
fsubr
ss
aam
jp
into
lret
xchg
dec
adc
xor
or
daa
mov
xor
int
int3
jo
and
mov
xchg
fstpl
and
imulb
call
mov
daa
add
iret
xchg
dec
call
mov
jns
mov
lret
cld
insb
mov
cmp
push
pop
inc
sub
jmp
divl
lret
testl
adc
and
ret
mov
outsl
jb
xchg
int3
mov
mov
xor
scas
mov
xchg
add
dec
enter
add
mov
popf
test
mov
or
sub
pop
mov
icebp
or
dec
mov
and
jne
or
les
jbe
dec
push
cld
int
repz
ljmp
or
jne
lret
mov
inc
cmp
mov
pop
or
adc
aam
cmp
clc
in
mov
out
mov
pop
fnstsw
adc
pop
fsubl
stc
js
and
call
dec
bound
call
fidivrs
test
mov
jb
shl
jl
rcl
jecxz
fdivrs
enter
or
mov
addl
mov
repnz
lods
nop
push
inc
ja
mov
mov
jmp
and
jl
cwtl
push
ret
flds
fstpt
xor
jbe
rcrb
jg
mov
pop
or
paddusb
data16
repz
jae
adc
xchg
cmpsl
test
pop
shrb
in
pop
jle
mov
bound
fwait
movsb
in
xor
faddp
mov
test
nop
dec
enter
xchg
sbb
xchg
pushf
ret
dec
aam
cmp
daa
ret
in
repnz
addr16
rcrb
jl
sub
dec
fisubl
cmp
pop
repz
jns
mov
stos
jae
cmc
outsl
je
adc
popf
cmc
repnz
inc
out
jo
lock
dec
gs
ljmp
sahf
out
or
mov
push
push
push
decl
popf
or
or
out
mov
push
popa
xchg
sbb
je
sub
or
sbb
cltd
lds
stos
imull
cs
cmc
mov
add
shr
lods
lea
inc
dec
hlt
fimuls
jecxz
xor
mov
mov
sbb
pop
inc
fwait
xchg
adc
push
data16
jb
jae
in
sbb
jle
les
aas
out
movsb
jecxz
dec
movsb
push
fwait
es
rcrl
inc
stos
loop
je
imulb
inc
jg
daa
popa
add
sbb
shrb
push
bound
lcall
mov
ljmp
aas
dec
sub
fldenv
fisttps
test
xor
xlat
sbb
aaa
add
jo
jecxz
scas
hlt
add
mov
sub
fstps
stc
mov
xchg
in
pop
jg
hlt
iret
xchg
jnp
cmp
mov
sbb
loopne
xchg
cmc
inc
or
push
and
mov
repz
jns
aad
imul
sub
je
imul
push
pop
mov
lock
lret
js
add
shr
cwtl
and
push
out
call
aaa
bound
cmp
inc
xchg
jl
rcr
inc
jnp
mov
rcl
lcall
ljmp
cmpsb
scas
in
jbe
mov
xor
push
stos
outsb
lcall
inc
lea
adc
cmpsl
test
lock
mov
jecxz
ret
sahf
lods
sub
pop
repnz
or
rol
into
mov
mov
in
es
addr16
ljmp
xlat
sbb
mov
out
mov
int
in
test
or
js
lahf
insl
fldl
mull
pop
inc
mov
sti
xchg
inc
pop
adc
push
jecxz
mov
mov
push
in
adc
mov
dec
sub
or
inc
inc
xor
mov
notl
mov
push
xchg
sub
sti
in
fisubrs
pop
test
push
bound
loopne
test
push
orb
int
mov
mov
push
aad
arpl
test
jmp
cmc
xlat
jp
jmp
fsubrl
or
push
add
and
mov
xchg
xor
rorl
mov
mov
or
mov
nop
inc
ds
pop
xchg
in
scas
mov
pop
cmpb
and
dec
push
pop
xchg
sub
adc
lahf
mov
cmp
mov
dec
into
leave
push
xor
loop
ss
or
push
popf
ljmp
xchg
jecxz
jecxz
mov
and
mov
lods
mov
lea
inc
mov
push
cmc
out
pushf
aas
mov
dec
sbb
in
inc
fs
xchg
lret
mov
movsl
mov
mov
repnz
adc
add
popa
and
cmpsl
jbe
test
lods
dec
pop
sahf
int
and
xchg
aas
mov
in
aam
or
decl
mov
cmpsb
xlat
enter
test
xchg
xchg
jne
popa
inc
mov
repz
push
bound
or
outsl
ljmp
popa
icebp
hlt
add
retw
into
mov
rolb
outsb
sbb
loop,pt
jg
in
pop
in
int3
or
test
pop
adcb
mov
repz
fcompl
ds
mov
insb
dec
das
push
jne
ds
adc
leave
or
lods
mov
fwait
scas
sbb
jge
out
adc
xchg
pop
push
insb
popa
sub
push
or
hlt
rolb
pop
fisttpll
jmp
sbb
loopne
jno
jmp
test
mov
cmp
rcrb
push
adc
push
and
or
dec
fldt
lcall
movsl
sarb
jge
cmp
xor
cmpsl
dec
inc
es
lock
jno
outsl
pop
and
iret
mov
push
jae
sub
jge
inc
and
sbb
popf
outsb
loopne
icebp
xchg
jmp
push
sar
mov
dec
mov
sub
mov
push
leave
lods
fldt
or
cs
inc
jle
js
or
xchg
or
fcmovu
inc
call
or
bswap
idivl
and
pop
sbb
mov
inc
inc
sti
iret
ds
jae
stc
dec
sbb
cs
push
cwtl
add
stc
xor
or
add
test
subl
push
arpl
dec
sbb
mov
mov
dec
les
in
flds
in
into
fwait
or
mov
xchg
out
push
add
jb
xchg
mov
rolb
out
out
lds
cmpsl
jle
ror
and
fwait
mov
xchg
cmc
pop
sbb
orb
inc
rclb
out
lahf
jb,pt
jns
cmpsl
pop
fidivl
cld
in
jb
test
dec
popa
daa
dec
js
xor
stos
lahf
outsb
or
bound
jo
negb
dec
arpl
les
sub
scas
mov
je
jmp
xor
addr16
sbb
xchg
cmpsl
iret
push
popa
xchg
scas
pop
ja
xor
sub
push
lds
sub
xchg
lods
sbb
inc
dec
xor
test
cmpl
rolb
int
out
test
cmp
jno
inc
add
imul
mov
test
cmc
sub
movsb
cwtl
mov
jae
rcr
fxch
fsts
mov
sub
xchg
xor
mov
in
insb
add
mov
mov
mov
jns
fsts
pop
sub
adc
scas
mov
inc
mov
rorb
enter
outsl
pop
mov
mov
adc
push
jae
xorb
stos
and
roll
cmpsl
xchg
movsb
loopne
movsl
adc
sarb
jecxz
inc
and
jle
add
add
fadds
pop
cmp
adc
inc
xor
push
mov
mov
mov
dec
dec
aas
std
mov
push
stos
dec
pop
push
xor
add
cwtl
mov
sub
and
pushl
cmc
jnp
cwtl
dec
insl
push
jnp
jp
mov
leave
mov
imul
stos
jge
jg
dec
adc
outsb
std
gs
sub
jno
arpl
jno
int3
test
cltd
add
jno
ret
inc
jp
pop
and
jb
ret
mov
clc
sbb
jnp
jne
ss
jnp
push
bound
cmp
dec
add
jne
xchg
pop
sbb
xor
mov
mov
mov
dec
jno
inc
fildl
cltd
insb
add
xchg
movsl
mov
hlt
sub
shl
loope
jbe
mov
mulb
cmp
inc
inc
iret
in
cmovno
xchg
cmp
xlat
int3
test
mov
sbb
cmp
shll
ds
test
cltd
or
or
jl
mov
aad
out
insl
gs
stc
clc
repnz
sbb
outsl
mov
jns
cmp
movsb
inc
pop
in
jge
sub
mov
push
xchg
addr16
fstpt
mov
int
dec
outsb
jae
mov
jb
or
mov
and
dec
and
imul
fs
mov
mov
jnp
jb
pop
jns
add
mov
and
cmp
sub
adc
cmp
and
push
in
js
mov
lds
les
xor
lock
pop
jle
mov
inc
jns
push
and
jbe
adc
stc
sahf
xlat
dec
stos
ror
push
xchg
sti
es
xchg
xchg
popl
ss
sbb
and
or
arpl
fs
mov
adcb
out
int3
jb
loop
je
jbe
lcall
call
push
jge
inc
xor
sti
add
cmp
out
rcrb
dec
jno
hlt
jo
shl
js
xor
jl
outsb
adc
pop
fnstcw
mov
inc
scas
mov
sahf
insl
inc
mov
nop
inc
inc
add
std
dec
mov
or
rcr
xchg
mov
repz
dec
pop
popa
aad
dec
out
stos
repnz
stos
mov
push
movsl
fs
xchg
fnstsw
fnstsw
cmp
fs
jns
cmp
fsubrp
jne
cmp
adc
scas
dec
pop
jecxz
sbb
pop
sbb
jmp
outsb
mov
call
nop
jbe
push
enter
shl
jge
inc
inc
mov
add
mov
sbb
rcr
insb
push
dec
fdivrs
pop
jae
ret
mov
pop
or
and
fldl
add
add
movlps
xor
and
notl
push
test
push
mov
movsl
and
mov
lds
test
inc
sbb
cld
jge
cmc
dec
jg
enter
insl
aam
ret
iret
cltd
jecxz
icebp
int3
pushl
fcmovnu
dec
std
sub
data16
add
push
inc
xor
cmpsb
rcl
cmp
mov
pop
int3
sbb
shll
and
hlt
xchg
pop
repz
push
subb
dec
and
ficoml
sub
mov
cmp
mov
flds
xor
movsb
imul
ja
sbb
mov
inc
and
arpl
push
sahf
xchg
icebp
lods
ja
sbb
sub
shll
jg
mov
pop
idivl
pop
jg
xor
jae
pushf
or
les
pop
sub
mov
aam
jmp
nop
add
mov
jecxz
sti
pop
out
pop
lret
iret
fisttps
aad
rcr
sub
lret
xchg
sbbl
shrl
jne
jp
mov
pusha
adcl
pop
pop
add
dec
insb
enter
out
or
dec
xchg
mov
mov
insb
mov
in
mov
sbb
jg
cmp
sar
mov
in
mov
or
pop
cmpsl
push
out
mov
aam
cmp
dec
outsl
adcl
js
scas
jae
cmpb
into
xchg
push
sub
test
and
cld
cld
cmpl
push
andl
and
push
cmp
lods
push
sub
mov
xor
and
xor
xor
test
mov
shrb
inc
mov
fstps
mov
fstps
mov
mov
into
jmp
cmp
jmp
jmp
adc
mov
xchg
sub
or
arpl
ja
push
lcall
push
movsl
jle
push
movsl
insb
xchg
loop
fistps
mov
mov
push
scas
ljmp
xchg
mov
mov
subl
incl
push
cmp
fildll
imul
fsubl
mov
cmp
lods
sbb
inc
jecxz
fnstcw
arpl
jmp
lods
pop
or
pop
cs
cs
test
test
cli
in
js
or
cmp
paddw
pop
aas
decl
subb
pop
call
pop
jno
or
in
aad
and
cmp
sbb
and
pushl
and
shlb
xchg
popf
add
int3
xlat
adc
push
insb
in
notb
outsb
jno
sbbb
loopne
sarb
mov
push
rcll
pop
aam
adc
gs
xchg
lea
lret
out
xorb
sub
sbb
add
sbb
data16
std
jecxz
lret
cmp
cli
cmp
pop
out
xchg
or
mov
mov
stos
lea
dec
lahf
pop
sub
mulb
push
cmp
mov
mov
filds
frstor
and
inc
repz
insb
sub
add
test
add
gs
lea
fimuls
std
adc
roll
daa
jge
inc
and
pusha
xor
mov
shl
xchg
stc
lds
jp
inc
xor
cs
dec
dec
mov
xchg
cwtl
test
ja
scas
lcall
sbb
pusha
stc
ret
and
mov
dec
out
mov
xlat
fstpl
int
push
mov
push
rcrl
jl
sbb
xchg
inc
pop
out
push
packsswb
daa
jbe
lret
movsl
inc
js
dec
out
sbb
call
mov
sub
ret
pop
hlt
rclb
dec
cli
adc
xchg
call
pop
jle
ljmp
push
and
incb
arpl
adc
mov
in
into
and
cmp
test
enter
enter
lret
fists
mov
fs
fidivrs
test
push
in
mov
add
bound
enter
das
sahf
cwtl
add
xchg
and
mov
or
fldl
mov
sbb
pop
adc
xor
cmp
sahf
jbe
clc
out
xchg
movsb
jle
sbb
mov
jge
popa
push
dec
pop
pusha
sub
add
es
inc
add
mov
cmp
push
mov
pop
data16
push
icebp
pusha
jmp
cmp
stos
add
cmp
jbe
jb
fldenv
xor
int3
dec
mov
std
jle
rcl
and
inc
out
sub
das
movsl
jl
fcoms
je
jbe
test
jmp
jmp
xchg
popa
jae
inc
movsl
bound
jnp
movsb
stos
sbb
xchg
xchg
rcrb
mov
cmpsb
enter
jmp
bound
js
jno
or
into
cmp
dec
push
pusha
push
sbb
stos
pop
mov
rcrb
mov
add
push
and
add
mov
into
sbbb
dec
enter
rcrl
imul
aaa
or
pop
adc
mov
pop
data16
aas
sbbl
jbe
cmc
dec
imul
addl
int
movsl
into
mov
add
pop
popf
xor
gs
push
inc
ds
jmp
lret
sbb
hlt
int3
mov
push
or
lods
xor
rcrb
sub
es
lahf
mov
ss
clc
mov
clc
or
pusha
jo
out
add
cmpl
pop
scas
outsb
roll
in
stos
idivl
adc
jle
mov
js
vorps
filds
loop
fwait
bound
inc
or
mov
dec
leave
xor
jge
mov
cltd
lods
in
pop
xchg
xchg
mov
lret
inc
pusha
loopne
cmpl
lret
inc
test
sbb
enter
and
and
or
mov
imul
cmp
push
bound
add
push
stos
xor
mov
stos
xchg
fcompl
scas
xor
roll
or
add
push
mov
sub
stos
lea
push
outsl
dec
mov
out
mov
cmp
jns
sbb
repnz
cs
add
ss
enter
imul
adc
fs
jnp
mov
in
push
lret
pop
addr16
js
in
orb
mov
xchg
aad
ds
pop
push
clc
in
sub
mov
sub
sahf
fs
loope
push
movsb
cwtl
loope
pop
inc
lds
stos
cmc
add
sti
inc
loop
xor
pop
and
adc
dec
testb
add
mov
push
and
bound
sarb
push
cmpsb
fwait
add
jp
dec
adc
mov
dec
hlt
pop
inc
lea
xchg
ja
in
cli
push
fsubp
jns
out
dec
push
cld
sbb
xchg
push
into
add
jge
dec
bound
cli
jo
enter
stos
xchg
add
xorl
daa
jne
mov
hlt
icebp
imull
repnz
icebp
mov
int
out
ljmp
clc
stc
and
lret
adc
inc
cmpsb
and
out
and
cmp
leave
or
mov
mov
jns
cmc
mov
mov
jp
in
mov
cmp
sahf
pop
xor
fldcw
mov
and
xchg
xchg
cmp
push
cwtl
les
sbb
les
pop
fnsave
jo
mov
xchg
or
xor
cmp
sub
shll
orl
mov
pop
pop
sbb
clc
mov
add
sbb
jne
cmp
and
mov
mov
sbb
in
pusha
out
ffreep
add
repz
lods
cs
ja
cld
mov
inc
mov
cmpsl
inc
or
cltd
pop
mov
cli
vpbroadcastd
cmpsb
test
das
jae
lret
enter
mov
cs
mov
add
rclb
add
lods
daa
dec
fs
cmp
or
xlat
dec
cmpsb
jb
dec
mov
aaa
inc
clc
jle
and
push
cmp
cmc
test
jg
cmp
mov
sbb
repz
inc
out
and
nop
jae
lret
inc
adc
mov
rcrb
mov
clc
jle
xor
sub
nop
fisttpll
push
stos
hlt
orps
dec
inc
mov
pop
shll
int
xchg
pop
inc
ret
ret
jb
pusha
cld
aad
mov
and
adc
and
in
xor
add
rorl
mov
aad
add
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
cmp
out
daa
std
addb
lahf
cmp
cmp
sti
shlb
ret
mov
ffreep
xchg
push
xchg
sbb
add
lds
clc
or
dec
pop
jns
seto
add
repz
fstpt
push
add
xor
jl
cli
mov
fists
cltd
sahf
outsl
lret
lcall
mov
scas
repnz
jp,pn
add
or
mov
sbb
lahf
sbbb
push
push
push
fimull
pop
cmp
repz
jg
rcrl
push
aas
xor
push
int
fisttpl
cmp
sub
hlt
hlt
add
mov
sub
push
adc
adc
xchg
mov
add
xlat
ret
sti
mov
sbbb
jle
cmc
add
std
ficomps
push
aas
into
xchg
ja
movsl
inc
add
inc
lea
xchg
adc
data16
xchg
call
in
push
xor
mov
ja
cmpps
xchg
push
push
add
test
adc
lods
in
xor
subl
test
dec
xchg
es
sbb
into
clc
lock
and
and
pop
nop
outsb
shlb
ja
jns
pop
loop
test
pop
fstps
mov
add
pop
jne
ds
jbe
jmp
xchg
imul
jl
adc
pop
inc
push
push
jns
mov
lcall
hlt
out
in
pop
push
adc
xchg
xchg
jnp
jno
mov
and
pop
jno
pop
aaa
mov
jle
sub
mov
inc
dec
or
push
jge
inc
push
das
dec
adc
pop
rorl
adc
xor
sub
cmp
ja
popf
adc
fsubrl
sub
popf
neg
es
lcall
sbb
push
mov
fwait
test
or
pushf
mov
mov
push
cmp
push
push
cs
dec
push
fdivrl
xor
out
xor
xchg
inc
fdiv
add
jno
dec
clc
iret
popl
es
jbe
adcb
lahf
test
ljmp
push
adc
xor
lds
adc
inc
sbb
inc
cmp
mov
or
cwtl
pop
scas
push
lods
xor
sbb
inc
aas
in
fisubrs
cltd
push
jge
or
insl
lahf
xlat
imul
out
addr16
mov
fsts
rcrb
jno
test
sar
xchg
push
inc
test
fidivrs
loop
cmp
or
lods
mov
add
inc
fsubs
into
and
xor
mov
jnp
and
push
push
rcrl
mov
jle
ss
and
icebp
stos
andl
dec
test
orb
cmc
cmpsb
ss
mov
fnstsw
ss
mov
push
push
push
stos
mov
stos
xlat
out
stos
or
adc
std
pushf
sub
dec
jns
div
jg
dec
test
jmp
ja
call
sub
rcll
sar
int3
dec
sbb
fwait
add
inc
hlt
sbb
push
jg
and
add
repnz
cltd
add
pop
mov
sbb
inc
xchg
insb
idivb
dec
ret
mov
cmp
lcall
int3
push
cmc
xor
and
dec
and
rcrl
inc
mov
movsb
mov
and
adc
xor
in
cltd
in
xchg
jp
mov
mov
mov
push
push
adc
ja
sar
outsb
ret
ja
push
stos
out
lcall
fstpt
adc
push
add
fs
insb
cld
lea
push
pop
mov
lret
xorl
mov
movsl
push
xor
push
xor
data16
in
add
dec
cmp
mov
push
pop
mov
mov
xchg
push
xlat
arpl
inc
mov
out
xchg
sub
adc
sbb
cli
adc
push
cli
imul
push
xor
mov
ds
mov
test
cmp
cs
aas
hlt
mov
ficoml
lods
ror
jecxz
scas
cmc
pusha
inc
in
outsl
cmp
pushf
je
mov
lret
lea
mov
subb
cmp
inc
adc
out
xchg
xor
cmpsb
pop
fwait
pop
mov
sbb
xchg
aam
xchg
push
xchg
enter
fldcw
loope
repnz
adc
insb
iret
cmpsb
jg
lock
cmp
lods
fsubl
mov
jnp
ror
sub
and
or
xor
dec
fsubl
or
fldenv
pop
aam
cli
adc
mov
in
and
push
decb
ror
ret
jbe
xchg
cmp
addr16
sub
insb
cmp
cld
inc
mov
xor
or
jp
movsl
lods
lahf
pusha
mov
cmpsl
push
cmpsb
xor
repz
jnp
add
jae
shll
addr16
mov
loopne
test
scas
push
adc
adc
int3
daa
adc
mov
sahf
push
and
fistps
adc
pop
xchg
in
push
push
jns
and
sbb
mov
leave
mov
ficompl
jno
mov
icebp
push
repnz
outsb
clc
loopne
xor
rcrb
inc
loop
mov
pop
stc
movsl
enter
mov
cmp
es
lods
ss
loop
pop
add
in
ret
push
dec
or
fwait
mov
push
pop
mov
push
pop
ljmp
daa
adc
push
andb
sbb
shlb
pop
jmp
cmp
int3
push
push
xor
xchg
ret
adc
into
stos
push
pop
mov
dec
jne
hlt
and
les
lret
data16
jmp
jne
inc
dec
cmp
add
sbb
into
sub
sar
aas
popa
shll
adc
push
pop
push
in
out
mov
pop
fdivl
sbb
mov
mov
xor
dec
push
xchg
add
aam
cmp
mov
push
adc
xchg
mov
mov
lods
jae
xor
dec
dec
lds
cli
xchg
cmp
jno
call
mov
push
dec
aaa
fs
nop
inc
inc
das
leave
nop
inc
jl
mov
jae
mov
pop
data16
jo
add
rorb
sbb
mov
adcl
or
mov
push
ljmp
movsb
ret
inc
pushf
push
mov
xchg
fbld
pop
enter
sahf
mov
imul
or
fnstcw
in
test
mov
pop
and
or
pop
mov
imulb
inc
push
int
fstp
ret
jp
mov
outsl
outsb
rorb
push
aaa
cmpb
loopne
mov
lcall
popl
test
sti
jmp
push
lods
and
idivb
test
sbb
cmp
pop
ret
add
or
int3
sbbl
fwait
mov
cs
mov
push
push
xchg
aad
test
lret
adc
jle
xor
mov
idiv
out
push
sbb
adc
outsb
stc
daa
jl
adc
sbb
add
hlt
aad
sub
mov
mov
push
mov
lcall
mov
fdivl
jp
inc
test
and
sub
jb
jns
and
dec
jg
fists
loope
pop
fwait
mov
aam
dec
sahf
subl
add
movsl
bound
sbb
and
insb
xchg
nop
les
test
in
sub
adc
fbld
and
fisubrs
addr16
add
mov
mov
ret
sbb
jge
scas
fstl
xor
xchg
xorb
add
mulb
inc
repz
data16
or
dec
xchg
jne
fdivrl
sub
repnz
mov
movsl
add
bound
push
ja
in
fwait
js
or
or
rcll
in
or
cwtl
out
sub
lock
ja
fidivl
scas
mov
sub
cmc
or
mov
xchg
sbb
cmp
mov
ret
pop
pop
mov
and
push
cmpsl
or
sti
xor
aas
lods
mov
jl
cmp
sub
cmpsb
je
rorb
imul
jl
scas
xor
or
xchg
jae
inc
adc
std
in
sbb
cld
shrb
test
int
stc
xorps
xor
sub
je
fimull
clc
imul
por
mov
js
pop
cwtl
test
mov
outsl
adc
xchg
test
subl
inc
mov
pop
loop,pt
sub
fidivrs
sub
xchg
mov
stos
bound
adc
jo
jno
push
ljmp
pop
jne
jg
fsubrl
mov
mov
rcrb
mov
out
in
mov
popf
push
sub
ficoml
imul
imul
jp
add
outsb
lea
mov
aas
jg
xor
jbe
fdivl
dec
sub
lcall
mov
or
jle
enter
cmp
test
mov
dec
push
mov
ficomps
dec
mov
adc
repz
dec
pop
jo
sub
mov
cmp
fstp
aam
rorl
adc
test
outsb
fmull
dec
pop
test
fisttpll
dec
cmp
jnp
sbb
stos
cwtl
or
pop
mov
mov
pop
je
xchg
push
mov
lods
mov
lcall
dec
cmpsl
loop
and
add
shr
mov
pop
cli
lcall
jecxz
jmp
adc
dec
pop
fwait
scas
mov
test
test
sub
push
nop
cmp
lahf
cmp
jno
roll
dec
ret
popf
add
push
cmp
aas
cmp
loop
xor
jo
in
push
pop
mov
push
and
or
pop
stos
and
mov
sbb
mov
je
int
and
sbb
pop
jb
out
stc
sbb
dec
js
jecxz
or
mov
sbb
or
xchg
cmp
push
fisttpl
push
mov
dec
xchg
jge
mov
pop
aad
push
in
mov
mov
mov
mov
mov
es
mov
mov
dec
sbb
pop
arpl
fldl
cmp
sub
dec
movl
das
inc
pop
fcomi
popa
pushf
dec
add
lret
add
push
add
push
pop
sbb
lcall
gs
sbb
outsb
sub
mov
mov
pop
pop
mov
in
jno
sti
push
outsl
cmp
add
hlt
cmp
lret
enter
js
or
xor
es
imul
add
mov
xlat
push
dec
adc
es
in
mov
pop
xchg
insl
adc
stos
xchg
aad
mov
into
mov
pop
mov
sbbl
addr16
mov
jecxz
scas
popf
pusha
cmp
int3
gs
pop
sbb
fs
data16
les
mov
add
outsb
add
sbb
mov
in
dec
in
fisubrs
leave
rcl
mov
mov
sbb
mov
mov
jle
fsubs
repnz
xor
dec
sub
fsts
sub
pop
outsb
std
pop
mov
jbe
movsb
pop
push
jo
add
pop
sbb
cld
sbb
ljmp
clc
mov
fbstp
into
daa
lahf
rcr
sub
pop
sbb
stos
shll
inc
pop
das
xor
xor
fsts
arpl
lds
aas
xor
aas
fnstcw
jnp
sahf
icebp
ja
movsl
cmpsb
rcrl
push
sub
mov
mov
pmulhw
push
imul
fimuls
xlat
lcall
repz
mov
sbb
dec
cmp
ss
repz
into
sar
test
cmpsb
pop
in
and
fildll
push
movsb
sub
and
jae
pusha
add
mov
inc
dec
insb
lods
lret
mov
mov
jg
rcll
inc
shrl
outsl
xchg
sub
fiaddl
inc
call
push
cli
and
push
adc
mov
push
sti
push
std
stos
add
push
dec
pop
int
add
dec
data16
pusha
mov
add
movsl
sbb
add
push
in
mov
idiv
test
insl
cmc
mov
sub
xor
clc
repz
bound
ja
cmp
mov
push
pop
pop
push
lock
push
loope
xor
imul
test
scas
std
cltd
aad
pusha
xor
popa
push
xor
lcall
out
lret
sbb
jp
cmp
adc
lock
cltd
sbb
rolb
fdivr
loopne
mov
pushf
and
inc
sbb
adc
inc
add
popa
hlt
jl
pop
or
test
dec
je
pushw
xor
out
aam
xor
mov
aaa
lds
loop
xor
push
ja
xor
jle
iret
mov
inc
sub
insb
cmp
ja
xor
xchg
mov
sbb
cmp
xchg
mov
adcb
mov
test
fcompl
push
mov
sbb
je
push
fildll
mov
jecxz
or
xchg
movsb
or
mov
xchg
sbb
adc
or
fwait
arpl
add
adc
add
mov
insl
push
sti
pop
and
mov
cmp
sahf
mov
nop
jbe
repnz
xchg
pop
add
mov
push
fists
pop
or
mov
cmp
lretw
xor
je
mov
cmp
sub
or
xchg
xchg
push
xor
jnp
push
push
mov
aam
inc
and
xchg
out
les
mov
out
pop
test
hlt
xchg
int3
inc
stc
into
and
cmp
jg
test
lret
mov
fbstp
push
pop
stc
es
sbb
mov
ds
sbb
sahf
sarb
sbb
fdivrl
adc
add
incb
in
test
daa
cwtl
jecxz
stos
sub
cli
call
adc
cmc
sbb
mov
xchg
repz
dec
fistps
enter
pop
ja
pop
cmp
repnz
notb
daa
jmp
jbe
mov
mov
inc
inc
or
ret
add
fs
add
mov
jne
sbb
cmp
cmpb
sub
in
jl
mov
pop
fmuls
xchg
and
pusha
pushl
int3
push
xchg
adc
addr16
mov
repz
or
sbb
icebp
daa
cltd
stos
adc
cmp
mov
cwtl
lret
pop
mov
ror
and
dec
add
out
mov
xorb
in
into
icebp
pop
loope
pop
inc
xchg
add
adc
jg
fldl
jne
inc
movl
das
fwait
pop
iret
xchg
movsl
lret
and
popf
inc
lods
icebp
fisubl
pop
aam
sbb
add
cwtl
icebp
and
insl
lods
popf
or
insb
stos
lock
sub
or
cmpsb
xchg
fsubrs
cmp
pop
or
xor
pusha
cmp
movsb
dec
out
push
inc
call
pop
push
lods
sub
lds
mov
lds
ljmp
nop
inc
lcall
lret
adc
cmp
sub
mov
mov
mov
bsf
push
sbb
xchg
mov
pop
fadd
mov
cli
fwait
jecxz
jmp
cmpl
filds
and
jno
adc
sub
xor
ficompl
aad
mov
cmp
daa
jmp
movb
pop
jmp
mov
stc
pushf
out
push
cmpsb
aam
xor
aam
inc
shrl
mov
sbb
and
push
cmpsl
lds
xor
in
ds
push
aad
mov
int3
sti
sbb
aam
sbb
mov
cmpsl
xor
leave
out
fimuls
dec
jg
mov
cmc
icebp
outsl
in
or
aas
enter
ficompl
popa
ret
test
fmull
dec
jnp
gs
dec
xchg
sub
cmpsl
das
mov
out
push
mov
test
ljmp
lahf
in
idivb
inc
fstpl
sbb
dec
mov
mov
mov
ret
out
or
in
ja
adc
cli
data16
pop
in
push
and
inc
xorl
jae
sbb
gs
push
sahf
dec
out
jnp
push
jno
outsb
popa
adc
cmp
cli
mov
adc
fnstsw
popf
dec
cmp
test
mov
inc
std
xchg
or
outsl
push
aad
pop
ficompl
das
stos
mov
sub
cmp
dec
dec
jg
mov
and
sub
dec
lds
mov
xchg
adc
or
push
cmpsb
mov
mov
popf
das
shl
mov
cmp
push
push
aam
push
mov
mov
jmp
inc
cmp
xorl
fs
add
mov
sbb
lcall
mov
adc
mov
scas
das
pop
jl
lret
mov
jbe
in
scas
imul
les
rcrb
mov
cmpb
xchg
pop
cmp
pop
outsb
int3
test
mov
jl
inc
jo
xor
int3
aam
sub
pop
and
dec
daa
mov
lcall
dec
orb
xor
mov
push
sub
leave
fmuls
dec
cmpsb
mov
repnz
pop
mov
xchg
jnp
rcrl
loope
movsb
push
into
mov
ds
ljmp
cmp
inc
aas
bound
push
push
rcrb
cmp
pop
cmp
sub
push
imul
scas
fwait
mov
sbb
or
es
iret
jno
aam
sub
cli
xor
loope
sbb
push
add
outsl
and
jbe
int
roll
shrb
push
cltd
jle
int3
icebp
pop
scas
in
js
lods
sub
adcb
lds
jne
push
mov
xor
cmp
mov
pop
nop
out
movsb
stc
or
stos
add
sub
pop
adc
inc
aam
inc
leave
inc
mov
addr16
cmpsb
pusha
call
mov
xor
out
scas
pop
lahf
cmc
push
dec
sub
jno
roll
and
adc
out
inc
je
push
sub
push
ljmp
outsb
xchg
pushf
call
fmull
mov
pusha
mov
pop
shll
in
int
fldcw
dec
dec
xor
jne
mov
fisttpl
shrl
cmpsl
xor
cmpsl
mov
mov
push
test
stos
cld
dec
cmpsl
sbb
es
hlt
xchg
dec
aam
adc
cwtl
movsl
subl
pop
fwait
cmpsb
mov
ss
adc
push
out
rcrb
aad
jo
int3
dec
repnz
test
sbb
movl
std
dec
shll
mov
lret
sub
rorb
std
push
mov
mov
adc
ss
adc
sub
push
test
cmp
xrelease
or
stos
lods
xor
adc
testb
xchg
and
cmp
or
rcr
jmp
lcall
repz
pop
lcall
add
call
iret
xlat
jne
lods
xor
add
jbe
dec
xor
xor
push
icebp
sbb
cmp
jg
jl
dec
mov
test
mov
stc
sbb
push
xor
pop
ljmp
add
mov
push
adc
dec
mov
inc
dec
adc
jb
loope
or
fadds
leave
aas
fldt
stos
or
stc
cmpsb
test
cmc
insb
sub
mov
pop
add
fs
pop
cs
out
cld
add
mov
pop
fcoms
cmp
mov
jl
loop
or
insl
bswap
js
and
negl
mov
imul
adc
and
push
cli
aam
xchg
or
cmp
mov
inc
dec
cmp
inc
xchg
enter
or
mov
scas
in
mov
push
lret
je
add
je
push
jg
adc
iret
jge
ret
and
fs
stos
ficoms
pop
jle
cmp
mov
pop
aas
int
lahf
cltd
push
lock
pop
gs
cltd
fucomp
jecxz
inc
jmp
insb
dec
inc
xchg
out
dec
pop
mov
or
jnp
sub
ljmp
jb
xor
push
std
clc
push
pop
ret
sbb
out
push
sub
add
arpl
loopne
inc
mov
out
in
aas
insl
adc
aas
lock
adc
cmp
std
sahf
gs
or
std
aaa
loop
lret
push
pop
sub
jno
jo
daa
inc
dec
adc
fadd
in
xchg
add
std
mov
xchg
test
stc
ljmp
mov
adc
mov
fwait
xorps
xchg
inc
sbb
insl
and
xor
popa
in
cmp
cmp
ja
push
dec
fmull
in
fdiv
scas
xor
fildl
or
and
jge
popa
aaa
xor
popf
outsb
add
add
lock
push
sub
mov
dec
adcb
fdivl
test
icebp
mov
adc
sbb
cs
mov
add
cltd
roll
fwait
pop
xor
xchg
push
lock
out
or
cmc
pop
pop
cmp
pop
data16
add
fbstp
xchg
bound
cmp
or
dec
or
sbbl
aam
cs
out
add
or
or
lret
das
dec
out
vcmpsd
movsb
dec
aaa
fldl
test
dec
test
cmc
mov
inc
inc
cmp
addr16
into
loop
mov
pop
pop
mov
xor
popf
popf
into
xor
xchg
loope
icebp
inc
sti
mov
xor
xorb
in
subl
in
mov
pop
out
mov
test
movsb
je
scas
in
sbb
aaa
cli
mov
xchg
mov
push
dec
pop
out
jp
jl
lea
and
mov
sub
cmp
leave
testl
outsl
loope
ss
movsl
mov
in
xchg
repz
sbb
adc
dec
into
and
lods
adcl
jle
dec
int3
inc
loope
xor
xor
fidivrl
aas
pushf
inc
cli
add
pusha
mov
or
xlat
mov
inc
xor
cmpsb
jne
adc
push
loopne
call
sbb
std
outsb
and
or
sbb
mov
inc
xchg
or
sbb
sub
xchg
mov
aad
inc
add
mov
fwait
in
inc
outsl
shlb
dec
mov
out
adc
sub
sahf
xchg
cmpl
mov
popf
orb
bound
test
and
push
xor
rorb
lea
and
ret
outsb
mov
pop
les
pop
mov
ja
adc
gs
add
movsl
aaa
cmp
sbb
mov
jl
or
mov
xchg
pop
rcl
sbb
adc
cmc
sub
loope
pop
jnp
mov
mov
mov
mov
mov
popa
test
cwtl
shl
xchg
aas
push
les
mov
test
lods
pop
pop
aad
add
pop
fs
sbb
incb
inc
dec
pop
enter
lret
push
sub
in
lods
int
scas
mov
clc
out
fdivl
mov
mov
cmp
jp
cmpsl
cli
ss
pop
add
pop
cwtl
scas
cmp
dec
xchg
push
sub
cli
mov
inc
scas
mov
testb
idivb
cltd
nop
dec
sbb
push
or
pop
notl
mov
adc
fmull
dec
in
xor
enter
ds
rcrb
mov
cmp
sub
roll
push
nop
shll
in
jle
pop
mov
aad
inc
les
lea
push
into
jo
int3
add
adc
out
div
push
mov
push
movsl
jo
mov
lahf
sub
lea
loop
or
jmp
pop
mov
cwtl
sub
icebp
sub
mov
int
inc
pop
loopne
adc
out
cltd
push
dec
cli
insl
dec
icebp
xchg
je
std
xchg
stc
push
lret
pop
cs
fwait
cld
pop
push
int3
or
lret
enter
lcall
cltd
pop
cmp
stc
mov
jecxz
outsb
mov
subb
fwait
mov
repnz
xor
stos
cmp
jno
dec
adc
jg
ret
cmp
fldpi
inc
or
add
lock
and
mov
jp
adc
das
or
fimuls
jp
dec
pop
addr16
cmp
shrl
jge
pop
repz
ror
mov
pushf
popf
jecxz
sti
xor
inc
test
mov
aas
mov
scas
jns
sbb
shll
out
xchg
xor
cmp
xor
repnz
xchg
lds
xor
push
lret
mov
sub
inc
sbb
andl
int3
add
loope
stos
cmpsl
and
shrl
adc
adc
add
test
out
xor
cmp
sahf
xchg
mov
jl
fldt
push
shrl
shlb
movsb
fdivrs
in
pop
mov
pop
repnz
lret
jne
jns
scas
jmp
ret
xchg
shrb
push
sbb
push
xchg
das
rcr
pop
sbb
mov
mov
adc
xor
stc
inc
push
cli
addl
in
xor
loope
bound
out
popa
dec
fisubs
repnz
das
addr16
iret
xor
stos
sub
add
dec
adc
sub
cmp
fsubl
pop
cmp
xchg
sbb
xor
push
dec
mov
inc
arpl
sti
jp
bswap
negb
pop
into
mov
pop
inc
push
mov
incb
daa
aaa
in
add
insl
and
ds
mov
inc
push
lcall
sub
push
pop
into
daa
test
iret
xchg
leave
scas
xor
mov
cmp
pop
or
adc
mov
xor
gs
adc
imul
std
sbb
cli
or
jns
es
aas
xor
pop
xchg
cld
add
sbb
sub
pop
push
pop
ja
imul
cmp
jg
das
xor
jne
adc
clc
pop
and
sbb
insl
and
mov
mov
out
xlat
dec
pop
push
leave
shll
test
inc
sbb
mov
jnp
mov
andb
push
xor
and
lods
adc
lods
jnp
outsb
push
and
mov
cld
xor
into
xlat
jne
and
sarl
mov
aad
or
pop
cmp
pop
jb
mov
je
mov
movsb
call
push
mov
mov
mov
in
das
or
mov
mov
cmp
pop
scas
cli
mov
scas
push
push
jl
jle
mov
outsl
xchg
mov
dec
pusha
test
push
xchg
or
insl
js
inc
ficoms
jb
stos
lahf
or
lahf
adc
add
push
sti
fcompl
hlt
xchg
pop
push
gs
dec
xor
flds
loope
xor
dec
xchg
lock
and
ljmp
add
fiadds
outsb
and
cmp
shl
insb
xlat
pop
push
mov
inc
repz
add
jg
xchg
cwtl
aas
jns
bound
sub
repnz
add
aam
add
add
inc
repnz
fnstcw
and
idiv
lahf
xlat
xor
fstpl
int
cwtl
mov
sub
lea
push
xchg
mov
mov
imul
cmp
add
rcrl
fistps
xor
push
cmc
nop
adc
add
sub
or
jle
inc
xor
loopne
jg
xchg
ror
sbb
imul
lret
dec
out
xchg
fstpl
cwtl
xlat
or
imul
mov
sti
inc
popa
out
mov
xchg
pop
sti
push
mov
test
cs
fildll
add
pusha
xor
js
mov
fisubrl
and
mov
dec
xchg
xlat
in
pop
sbb
push
pop
and
jae
xor
xchg
jnp
dec
dec
js
popa
popa
cmp
xchg
outsb
cmp
pop
push
mov
push
mov
jecxz
insb
out
and
ret
lahf
or
adc
jns
push
sub
cltd
mov
dec
adc
mov
mov
ret
push
out
and
cmc
loope
add
sbb
mov
data16
sub
andb
cwtl
inc
sbb
and
or
xchg
sub
lcall
jbe
or
jp
pushf
push
cli
inc
cmc
gs
test
add
jge
and
cwtl
pop
dec
or
jp
mov
mov
push
jmp
repz
out
lret
inc
mov
insb
xchg
loopne
jg
fs
mov
add
xchg
punpcklwd
pop
mov
push
mov
sar
push
test
std
aas
inc
das
xor
insb
frstpm(287
push
add
ret
dec
fisubrl
xchg
mov
mov
push
stc
call
iret
pusha
xchg
inc
fsubrl
cld
mov
in
leave
mov
xlat
out
mov
nop
dec
jo
dec
sbb
xor
rorl
jae
or
aaa
adcl
push
jecxz
mov
and
mulb
jg
ja
frstor
inc
pop
mov
xor
sti
dec
pop
mov
divl
outsl
xchg
dec
lods
or
aaa
rolb
sbb
jb
mov
stos
cmp
insl
mov
pushf
and
out
lock
sbb
pop
or
lods
dec
mov
or
xor
test
outsl
inc
mov
adc
jbe,pt
mov
out
mov
pop
pop
xlat
outsb
ds
jo
mov
sub
aad
lret
test
xchg
mov
pushw
or
shl
fnsave
xlat
pop
jle
scas
push
mov
mov
sahf
inc
fcompl
jno
push
sti
xor
mov
imul
jo
repz
in
jbe
fstps
add
mov
sub
loop
sbb
std
and
addl
int3
fs
vpshld
dec
inc
and
cmp
cmp
mov
or
hlt
lds
mov
push
mov
and
jns
icebp
inc
xchg
in
push
push
add
pop
movsb
popf
jg
addb
sbb
xor
aad
push
data16
roll
push
outsb
cwtl
mov
mov
movsb
mov
xchg
sub
mov
pushf
mov
dec
and
ret
dec
jae
loopne
cwtl
dec
xor
jle
mov
sbb
pusha
jmp
inc
les
aad
pop
cmp
mov
sbb
insb
adc
cli
push
push
test
push
lods
xor
mov
sbbb
cmp
movl
jne
cmp
movl
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
lods
or
andl
addl
mov
mov
aam
mov
sbb
pop
push
faddl
scas
sbb
cli
pop
cs
lret
aam
imul
cli
push
mov
mov
out
movsl
pusha
mov
cld
mov
xchg
push
mov
xor
test
mov
mov
cmp
mov
jbe
cwtl
ficoms
jne
loope
mov
clc
shrb
inc
outsl
mov
xchg
test
pop
sbb
std
inc
pop
xor
mov
push
lret
mov
lret
scas
call
and
and
cmc
ljmp
dec
push
sbb
mov
insl
dec
mov
jge
mov
sbb
mov
daa
jg
ds
mov
sarl
add
nop
or
cli
fsubrl
aas
in
bound
mov
movsb
cmovge
mul
repz
outsb
hlt
push
sub
fdivrs
in
call
cmpsb
cwtl
int3
ret
outsb
inc
mov
enter
cmp
imul
stos
inc
call
sbb
sbb
pop
daa
dec
jecxz
rcrb
imul
mov
sbb
xchg
das
out
or
fcmovb
movsb
xchg
scas
adc
outsl
dec
rcl
ja
loop
push
jmp
push
je
xchg
test
and
in
pop
push
xchg
add
jns
test
rclb
cmp
pop
iret
cltd
mov
jp
sub
je
cmp
fnstcw
stos
loopne
int
push
insl
sub
cmp
insb
or
insl
jmp
or
push
ret
subl
cmp
lcall
xlat
jge
lods
or
stos
and
cli
cltd
pop
dec
dec
fs
xchg
xor
fdivr
inc
cwtl
mov
popa
stos
and
mov
cmp
cmp
test
shlb
clc
adc
in
lret
mov
add
test
test
aam
jl
lea
iret
mov
addr16
cltd
jp
out
pop
jae
inc
add
ffree
sub
push
negl
jmp
dec
flds
aad
pop
mov
test
push
je
cmp
push
adc
mov
xchg
mov
and
or
shlb
cmp
xchg
int
pop
mov
adc
rcrl
cs
stos
lods
mov
adc
leave
mov
adc
push
call
adc
sub
notl
lcall
dec
jl
popf
jmp
inc
mov
jb
loopne
mov
sub
popa
fisubrs
mov
ret
pop
cmp
pusha
out
sub
adc
inc
add
push
xorb
cmp
mov
adc
push
lds
std
xchg
dec
sub
cld
dec
sbb
xor
std
shll
jp
rcll
ja
or
sub
sub
fwait
insb
xor
lahf
jb
dec
es
mov
sub
jb
jp
sbb
ret
subl
jg
mov
xchg
jae
shrl
cmc
mov
in
adc
fwait
movsb
inc
cmpsl
mov
sub
and
cmp
sub
and
pop
pushf
stc
addr16
jle
jge
jae
push
shrl
or
jno
jns
add
gs
in
lea
fwait
sub
adc
jmp
xchg
fldt
mov
jl
aam
outsb
daa
scas
add
cmp
or
outsb
lahf
push
mov
xor
xchg
jl
icebp
xor
mov
daa
divb
mov
ljmp
mov
mov
mov
jno
push
mov
ds
cmp
sbb
xor
jb
mov
add
xor
adc
loopne
enter
lods
and
insb
popf
pop
scas
aam
mov
sub
push
lahf
mov
dec
xchg
pop
push
lock
push
mov
xor
stos
xchg
add
in
test
lcall
mov
fldcw
adc
cmp
xor
mov
pop
sub
pop
xlat
dec
add
testb
sub
call
jle
lods
xor
mov
add
mov
ret
fcoml
or
push
xor
inc
scas
inc
push
adc
in
arpl
clc
and
pop
decb
mov
xlat
mov
sarb
inc
sahf
push
or
push
cs
sub
scas
xchg
cmp
movsl
into
insb
jmp
int
mov
hlt
mov
jp
add
jo
cli
sbb
inc
fsub
jp
out
loope
mov
sub
adc
call
inc
pop
or
call
movsl
push
push
adc
in
stc
lds
cmp
dec
dec
sahf
cmpsb
sub
jno
pop
fcmove
cmp
sbb
sti
or
sbb
cmp
jp
nop
cmp
rcl
mov
scas
and
aaa
mov
or
ljmp
cmp
mov
jmp
pop
cli
lret
push
daa
dec
cs
or
push
fisubrl
or
mov
dec
xor
add
repnz
push
lods
ljmp
jne
fwait
xchg
pop
mov
mov
fs
mull
mov
test
pop
inc
xlat
adc
movsl
aas
xchg
mov
lcall
and
cmp
xor
push
push
out
pminub
push
dec
dec
leave
ret
mov
mov
jl
lds
add
cmp
ja
lods
icebp
sti
insb
mov
adc
sbb
jg
inc
cwtl
jmp
sub
int3
lret
bound
xchg
cli
add
ljmp
mov
pop
xchg
inc
shll
int
dec
sbb
mov
push
lds
add
push
mov
insl
mov
inc
fistpll
stos
lds
push
xor
cmp
icebp
xor
adc
dec
cltd
inc
jecxz
mov
hlt
movsb
sub
out
mov
rcll
out
lock
scas
daa
pop
sub
loope
aam
push
ret
add
fistpll
jge
insb
cmp
rcrl
std
test
mov
adc
pop
frstor
sti
cmp
aam
and
stos
pop
dec
hlt
imul
lahf
mov
int
inc
ss
and
mov
imulb
jnp
test
pop
cmp
lahf
fbstp
js,pt
mov
jno
outsb
into
cmc
rcl
aaa
jmp
mov
movsb
and
mov
insb
lods
mov
sub
inc
mov
push
lret
lock
std
mov
hlt
xchg
rolb
or
int3
lret
fimull
mov
movsl
or
xchg
insb
cli
sarl
mov
je
mov
pop
mov
xor
cmpsl
xchg
mov
jle
mov
mov
outsb
or
add
push
lods
out
mull
push
fmulp
and
mov
shl
mov
insb
test
cld
sbb
pop
fimull
data16
loopne
add
xchg
push
dec
out
push
sub
cwtl
loopne
subl
add
mov
jo
adc
pop
rcrb
pop
out
lcall
add
test
pop
sub
outsb
add
jge
rorl
push
or
ja
pop
cli
sub
xchg
jg
jecxz
je
jg
jmp
jg
mov
xchg
jo
adc
fildl
outsl
mov
mov
fcmovnbe
ja
das
cmp
inc
add
scas
cmp
mov
inc
andb
mov
inc
jne
ffreep
idivb
mov
jmp
mov
fldcw
stos
mov
ljmp
sub
push
and
movsb
add
lea
pop
adc
in
jg
xchg
testb
dec
inc
imul
daa
jecxz
repz
pop
mov
dec
cmp
push
pop
fsubrs
test
push
es
test
imul
and
inc
stos
imul
call
xor
enter
repz
out
push
repnz
push
repz
in
or
lcall
fdivs
and
or
jecxz
add
bound
ds
mov
xchg
adc
push
cmp
shrl
cmp
lea
js
mov
adc
pop
sub
xor
ds
jmp
cmp
xchg
push
adc
sbb
xor
cmp
mov
mov
cmpsb
cwtl
push
and
add
or
sarb
scas
cld
mov
sbb
or
aam
and
sub
pop
call
add
and
jmp
icebp
daa
or
icebp
pop
mov
lret
inc
and
mov
pushf
xorl
rolb
mov
int
ss
int3
and
loop
add
or
ret
jg
mov
add
adc
mov
sbb
insb
les
cmc
xchg
push
mov
sub
xchg
rcrl
flds
je
leave
or
outsb
outsb
lea
mov
inc
cltd
jbe
inc
cmpb
or
in
or
lds
xchg
add
out
loope
les
push
push
sbb
cmp
and
filds
push
aad
sub
sbb
sti
jne
mov
lahf
mov
xor
call
out
sbb
pop
and
mov
inc
sbb
adc
insb
cmp
out
or
mov
mov
xor
dec
out
sub
push
gs
rcll
cmpl
and
dec
arpl
sbb
cltd
lock
in
data16
add
lret
cmp
mov
and
aad
add
and
fisttpll
jmp
xchg
xchg
out
out
stos
shrb
in
scas
jle
sub
jb
mov
enter
pop
cmp
inc
ss
insb
sbbb
loop
mov
inc
out
stos
sub
mov
pop
mov
cmpl
clc
sub
jge
cmp
outsl
shl
mov
imul
xchg
arpl
inc
insl
xlat
fnstcw
fsubl
jnp
and
pop
push
dec
dec
inc
test
movaps
add
push
mov
pop
out
and
je
add
cmp
mov
cmp
pop
adc
pushf
out
xor
jbe
imul
push
mov
xchg
sub
les
xor
sarb
jo
cmp
rcr
pop
mull
js
and
nop
push
or
imul
mov
push
lock
sub
xchg
cmp
adc
aas
push
lret
and
loop
sbb
sub
and
ljmp
inc
adc
jmp
push
js
cmp
shll
jmp
jno
jle
sbb
xchg
clc
icebp
pop
mov
js
sbbl
push
mov
jp
mov
jecxz
push
jae
aaa
pop
mov
mov
inc
gs
pusha
inc
daa
stos
and
add
das
mov
mov
mov
mov
jns
ss
add
jnp
out
and
sbb
mov
jnp
lcall
jo
or
adcl
mov
mov
mov
lret
push
nop
inc
mov
jge
inc
cmpsb
lock
pop
and
cmc
dec
fldl
ds
jp
or
mov
sub
adc
loopne
cmp
int
fwait
lcall
test
push
xor
pop
push
add
inc
push
jbe
aam
add
cmp
in
xor
mov
daa
sub
ret
inc
mov
mov
sub
loopne
imul
and
cltd
sahf
or
rcll
flds
int
dec
mov
lock
ss
xor
or
movsb
push
mov
sbb
ja
inc
jmp
in
cmp
hlt
pusha
inc
dec
add
ja
fistl
ss
push
loopne
sbb
xchg
xor
mov
icebp
push
ficoml
xchg
outsb
sub
sub
mov
push
ret
mov
add
and
xor
cs
outsl
call
test
fists
push
jmp
loop
xchg
or
mov
lahf
dec
in
aam
ja
imul
push
mov
dec
mov
mov
imul
sbb
adc
mov
stos
mov
lret
nop
add
mov
mov
push
mov
cmpsl
cmp
xchg
push
mov
push
dec
xchg
jmp
xchg
add
mov
xor
add
mov
ret
out
inc
gs
or
lods
imul
xchg
and
push
stc
cmp
xor
subb
jbe
daa
repnz
std
fidivrs
dec
out
nop
xchg
inc
dec
pop
push
stos
cmc
inc
movsb
dec
pop
es
cmp
cltd
lahf
adc
icebp
loopne
push
stos
mov
int3
stos
pop
inc
push
lret
daa
mov
in
stos
insl
jg
test
mov
ljmp
outsl
das
xlat
mov
in
cmp
cs
shrl
stos
push
xor
cmpsl
mov
xchg
add
pop
push
mov
cmpsl
outsl
sbb
jno
cwtl
cltd
stos
mov
popf
jg
mov
movd
fstps
add
fs
lahf
popa
sbb
add
mov
cltd
jnp
js
sub
lods
pop
and
loope
or
scas
sbb
xor
int3
cmp
xchg
or
mov
fs
addr16
sbb
dec
js
mov
andl
sbb
in
adc
xchg
xchg
and
ds
into
or
shrl
push
mov
cmp
or
aas
jecxz
xchg
fwait
fwait
mov
hlt
cmp
nop
aad
pop
test
sub
lret
sbbl
sbbb
std
mov
jb
xor
push
sbb
push
ret
fbld
mov
push
jmp
pop
lea
xor
hlt
jno
mov
repnz
jge
int
add
fnstsw
mov
inc
pop
stos
cwtl
dec
mov
dec
and
es
sbb
pop
mov
out
or
fcomps
mov
jmp
xorb
mov
js
idivb
jg
loop
loopne
js
cmp
xor
push
inc
pushf
aaa
cmp
xor
lahf
shll
out
xchg
push
in
imul
ret
sahf
pop
jge
inc
movsl
pushf
test
inc
mov
lahf
sub
sub
test
loope
out
lods
mov
int3
mov
sub
ficomps
xchg
in
andb
loopne
xchg
negl
xor
sub
lret
out
pop
sub
in
xchg
jg
repnz
andb
and
xchg
dec
sarl
pusha
dec
sarb
pushf
popa
cmp
mov
jo
lret
outsb
adc
out
jne
ds
ss
cltd
xchg
hlt
cld
cmp
rorb
push
xchg
mov
test
roll
lret
push
hlt
fucomip
jl
cltd
pop
cmp
jle
loop
lcall
bound
lock
jp
mov
scas
jb
jns
in
nop
xchg
iret
dec
push
add
aas
imul
mov
imul
shlb
icebp
in
outsb
imul
add
loope
fst
int
out
dec
inc
movsl
daa
loopne
adc
lods
pop
loop
mov
pop
lods
mov
cmc
and
push
push
sti
xor
adcl
mov
cltd
push
dec
stos
xor
mov
enter
stos
mov
mov
es
in
push
fcmove
daa
adc
pop
fdivl
xorl
mov
arpl
dec
filds
into
sub
loop
cli
lods
mov
mov
incb
xchg
push
jecxz
add
ljmp
sub
movsl
divl
rcr
add
dec
notl
fisubrl
xor
mov
jmp
cmp
mov
andl
fst
mov
scas
adc
jle
stc
fcoml
iret
in
mov
cmpsb
out
jbe
mov
or
sub
mov
std
fdivrl
fmull
pop
mov
js
call
bound
xchg
mov
out
pop
ja
or
in
sub
pop
insl
test
sub
jnp
icebp
js
jmp
out
ja
inc
lret
cmp
rolb
into
cs
push
popf
add
sbbb
mov
xchg
lods
frstor
lcall
sub
dec
inc
movsb
mov
es
ss
mov
jbe
mov
pop
dec
push
orl
cmc
jae
push
ljmp
or
cmc
lods
jmp
dec
jb
fcomip
sub
mov
dec
jl
add
push
lahf
add
dec
xchg
xchg
xor
movsl
loope
test
or
sub
jle
lret
dec
mov
mov
loop
xchg
loope
jae
add
imul
push
sar
rcrl
inc
imul
nop
rcl
shrl
in
fisttpl
dec
into
dec
imul
inc
jb
lahf
or
aaa
jge
fidivl
imul
jbe
fwait
les
add
pusha
decl
das
sub
inc
mov
xchg
xchg
stos
xchg
sub
jb
jb
inc
in
popa
mov
aam
in
mov
pop
call
call
ds
push
xlat
flds
push
lret
sahf
loope
mov
call
insb
nop
ljmp
mov
push
add
inc
adc
fs
lahf
sbb
dec
test
inc
push
jle
test
scas
mov
adc
dec
ljmp
and
int
lds
out
rcll
jno
rorb
or
loope
push
add
sbb
mov
repz
mov
and
jbe
leave
aam
int3
xchg
in
adc
lods
xchg
into
jne
push
in
daa
arpl
ds
cmp
fs
cmp
movsl
and
jmp
frstor
mov
fisubs
popf
and
mov
mulb
lea
adc
roll
cs
int3
out
ret
cmp
mov
imul
mov
rol
enter
mov
xchg
pop
clc
sub
imul
sub
inc
add
dec
pop
addr16
fs
out
pushf
dec
mov
test
test
rcrb
add
push
dec
add
dec
dec
inc
sub
or
mov
push
pop
cmp
mov
pop
mov
cmp
and
xor
mov
xchg
hlt
xchg
cmpb
inc
sti
in
lock
ret
fstp
iret
mov
in
xor
add
inc
aad
jecxz
and
cmpl
ds
in
lret
sbb
adcb
cld
push
add
jne
jge
repz
out
jmp
xlat
cmp
rcrl
mov
cmc
lcall
sub
fidivrs
bound
inc
mov
pop
imul
mull
mov
mov
mov
sbb
dec
push
sub
inc
adc
lret
mov
jge
push
lods
cmpsb
lods
js
ss
test
aad
mov
int
adc
imul
cmp
xor
roll
fldcw
inc
xchg
push
xchg
push
sub
je
aam
or
inc
jne
cs
dec
scas
sub
mov
js
jge
into
dec
pop
or
mov
movsb
mov
add
shlb
mov
pop
es
out
rol
mov
cmc
adc
push
aas
in
iret
loop
jmp
cwtl
mov
push
fs
xor
je
cmp
inc
jo
sub
frstor
bound
call
test
enter
fildl
fwait
xor
or
push
dec
xor
sti
inc
mov
push
out
push
or
aam
jno
push
push
add
jmp
aad
dec
mov
in
mov
sbb
jo
shll
mov
jbe
popa
les
cmp
cmp
pop
call
daa
xor
push
adc
lret
sbb
out
mov
xor
jl
jnp
pop
inc
xchg
cmp
das
dec
mov
outsb
ret
fstpl
jne
sub
xchg
jnp
cmp
push
mov
mov
ja
sar
xchg
aaa
jo
add
xor
pop
imul
xchg
fisubrl
jge
sbb
sbb
pop
mov
sbb
cmp
ss
call
mov
add
xchg
hlt
mov
ret
pop
sub
lods
clc
mov
and
ret
clc
mov
mov
lret
int
rolb
outsb
in
mov
mov
inc
inc
inc
daa
jl
fnstsw
aas
mov
pop
mov
push
or
inc
test
stos
adcl
mov
sub
pusha
jmp
cli
pop
xchg
not
mov
ds
movsb
insb
fpatan
inc
dec
dec
cwtl
popa
cmpsb
sub
jecxz
movsb
jl
jl
pop
push
out
mov
daa
jge
mov
cwtl
sti
push
pusha
pop
sahf
dec
ret
xor
gs
es
aas
fisttpll
enter
xchg
and
jg
inc
push
dec
je
cld
js
sub
pop
imul
push
loope
std
xchg
scas
fidivrl
iret
in
enter
cs
sub
fabs
dec
sub
or
mov
cmovb
add
sbb
insb
jg
jb
inc
addr16
mov
xchg
lods
and
femms
adc
scas
stos
es
pop
mov
filds
and
leave
jl
jmp
test
jb
aad
or
push
insl
add
arpl
out
enter
pop
repz
xchg
mov
repz
push
dec
add
sbb
data16
jp
stc
adc
and
nop
jae
fdivs
xchg
and
js
repnz
subl
or
dec
repz
in
pop
imul
mov
mov
inc
test
out
xchg
mov
mov
popf
lahf
lea
in
nop
or
inc
ja
sub
mov
push
fnsave
loope
jb
and
cmp
cmp
in
xchg
mov
loopne
in
subb
adcl
or
js
pushf
add
xchg
mov
lahf
xchg
shll
inc
pop
das
jmp
js
clc
into
mov
pop
int
fbld
enter
mov
ret
cmp
mov
cmp
ret
add
lahf
loopne
xchg
movaps
clc
ljmp
stc
inc
dec
sbbb
cwtl
fcomi
ret
jmp
int3
sbb
push
and
add
sti
sbbb
lock
popf
in
aas
mov
lahf
mov
sbb
mov
mov
cmp
xorl
push
mov
daa
paddusb
ret
push
adc
and
pop
jne
and
jb
dec
sbb
jle
jle
cld
add
inc
dec
fdivp
adc
or
dec
xorb
aas
bound
or
pop
loopne
fcmovnb
mov
out
sub
dec
leave
pop
jp
and
sub
pop
push
xchg
jno
rolb
in
lods
shlb
mov
xchg
cmp
sub
cs
out
cmp
xchg
lahf
decb
addr16
leave
xchg
cmp
int
cwtd
add
stc
iret
mov
cmp
cmpsb
jbe
lock
or
dec
mov
xor
data16
sub
je
lret
xchg
sbb
xor
arpl
and
std
dec
aad
popf
dec
lahf
and
dec
jbe
pop
imul
pop
jmp
icebp
jl
or
xchg
cltd
movsb
ljmp
mov
es
sbb
stc
lods
jl
fidivs
cmp
rorl
xchg
pop
mov
ljmp
or
pop
into
int
mov
push
les
call
leave
bound
lock
and
lahf
scas
jge
outsl
xlat
rorb
popf
pop
push
dec
push
push
push
sub
outsl
movsb
and
cli
jle
cmp
mov
je
push
push
inc
scas
inc
dec
out
cmp
cld
stc
push
repz
sub
ja
inc
into
gs
sub
jmp
mov
test
mov
sub
or
mov
sub
out
test
push
gs
sbb
cmc
outsb
jno
xor
mov
cmp
aas
in
inc
repnz
inc
mov
stos
mov
insl
cld
fdivs
sub
cmpl
out
rcr
xor
test
lret
repz
adc
aaa
js
adc
inc
adc
add
jb
cwtl
js
insl
push
sbb
and
je
pop
xchg
jbe
or
xchg
dec
mov
mov
cwtl
push
mov
pop
pop
add
mov
mov
nop
jb
test
adc
lret
aad
test
jo
mov
subl
mov
sbb
sub
fwait
jns
je
adc
mov
aam
dec
jg
es
pop
test
rol
mov
shlb
xor
dec
jp
out
xor
cmpsb
mov
cmp
xchg
or
int3
shrl
test
dec
jg
mov
sub
and
fists
pop
or
pop
cmp
loope
push
shll
mov
adc
es
sbb
pop
add
ffreep
out
enter
sbb
mov
and
push
mov
pop
pop
ret
mov
adc
lods
mov
repnz
cmpsl
xchg
push
or
es
dec
popa
aas
stc
in
adc
adc
ja
hlt
or
insb
mov
pop
mov
mov
sub
xchg
into
shlb
ret
pop
xlat
in
pop
mov
sub
iret
test
sub
lahf
inc
lods
sbb
cli
ret
cmp
clc
sahf
add
xchg
cltd
xchg
adc
repz
dec
lock
or
roll
loope
movb
or
leave
imul
mov
dec
mov
push
mov
xor
push
or
and
inc
mov
test
adc
cwtl
ret
test
popf
inc
dec
pop
sub
push
mov
mov
add
fistpl
jnp
in
hlt
inc
dec
and
insl
cmp
stos
in
jge
jp
pop
sbb
mov
int
idiv
test
push
fimuls
jno
scas
pop
or
bound
mov
roll
les
add
inc
lds
inc
and
cltd
cmpsb
aam
add
imul
jmp
out
fwait
cltd
pop
jecxz
push
fwait
dec
lret
mov
fsubrs
in
rclb
out
push
sbb
sub
outsl
ret
pop
pop
push
pusha
mov
push
scas
loopne
sbb
popf
jae
cltd
inc
notb
jl
sahf
cs
inc
and
int
push
xchg
js
test
aaa
mov
std
sub
imul
in
dec
or
orb
push
jb
add
mov
ret
imul
insb
pushf
insb
ds
out
xor
mov
lds
rcrl
sbb
testl
enter
xor
cmp
int
arpl
aas
adc
mov
into
and
lods
lds
or
sub
mov
es
aas
cli
movsl
sbb
fnsave
inc
pop
lods
add
imul
pop
mov
int3
jae
jmp
push
js
push
and
repz
push
dec
repz
adc
sub
xchg
sub
pushf
sbb
jl
data16
lahf
sbb
fstps
pop
xchg
push
adc
mov
push
and
lods
aaa
jmp
inc
push
jmp
jl
lea
cmp
mov
ljmp
nop
clc
xchg
and
js
jno
jge
aas
stos
enter
mov
add
outsl
movl
mov
pop
clc
cld
imul
orl
adc
jns
and
hlt
sbb
adc
cmp
pop
pop
pop
jo
jb
ret
mov
adc
cltd
pop
ljmp
sub
jne
and
or
cmp
ljmp
lods
mov
adc
xchg
iret
pop
ja
cltd
jb
sahf
inc
xchg
jbe
ds
dec
xchg
lret
and
inc
sub
add
cli
add
mov
js
popf
pop
and
jg
ret
fadd
addr16
adc
sub
mov
ja
xor
mov
repz
aaa
sar
inc
dec
movsb
cmpsb
push
cs
xchg
or
repz
ss
pop
jbe
and
dec
push
xlat
inc
jge
nop
dec
sbb
sti
je
xchg
insl
xor
mov
mov
test
ret
sub
lea
pushf
fistl
leave
ret
lock
je
cmp
andnps
pop
xchg
aam
mov
push
in
jp
insl
jg
inc
clc
test
iret
sub
insb
sub
jge
mov
addb
in
and
mov
add
cmpsl
mov
dec
mov
mov
xchg
loop,pt
pop
fs
imul
xchg
jg
int3
add
xchg
mov
push
push
mov
mov
mov
arpl
add
repz
inc
rcll
xchg
and
cmp
subb
fiadds
sarb
fistps
jmp
adc
loop
jno
insl
inc
fsubs
adc
es
add
insb
das
add
jae
mov
pusha
je
sub
imul
popl
ret
and
pop
fists
jno
decb
jge
mov
push
outsb
imul
mov
or
pop
jno
and
dec
nop
sbb
movb
push
jmp
cmp
xchg
aad
push
add
cmp
cmp
cld
aas
or
or
adc
les
pop
lods
aam
jo
scas
sbb
es
adc
push
xchg
mov
lahf
stos
adc
mov
outsl
cld
in
dec
push
push
movsl
iret
sub
dec
jge
mov
pop
sbb
rcll
ror
loope
xlat
arpl
test
fwait
and
xchg
fwait
cld
cmp
xlat
cli
popf
ljmp
pushf
fcomps
int
pop
adc
repnz
in
lods
sbb
jb
imul
xchg
ret
notb
ret
cwtl
into
adc
adc
fadds
test
gs
fnstenv
ret
pushf
pusha
ljmp
fsubrs
adc
fisttps
xchg
ss
cmp
arpl
mov
fbstp
and
rcl
jo
stc
movsb
and
shrb
push
jle
fnstsw
enter
cltd
jp
dec
push
cld
repz
sbb
mov
gs
and
ljmp
loopne
arpl
hlt
dec
pusha
mov
movsl
int3
fldt
ljmp
adc
hlt
imul
pushf
xor
outsl
jno
lods
pop
cltd
out
mov
rcrb
sbb
adc
inc
adc
add
js
and
or
rorl
jl
daa
mov
into
add
xchg
inc
cmpl
or
adc
shlb
jge
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
push
mov
outsl
mov
sbbl
adcl
fsubs
lock
mov
jecxz
sbb
jo
add
jne
scas
push
loope
addr16
cld
insb
pusha
push
loope
shlb
test
rcrl
movsl
in
dec
inc
or
cmc
sub
aaa
js
aam
sbb
mov
jb
mov
jl
jo
dec
inc
sub
dec
pop
arpl
push
shll
mov
xchg
cs
cli
cmp
std
sbb
sbb
repnz
cltd
clc
mov
mov
ds
aam
mov
push
je
push
adc
xchg
xchg
push
rclb
icebp
push
add
out
aad
scas
aam
negb
sub
cmpl
pop
sbb
add
push
adc
popf
ror
iret
fadds
int3
add
inc
sub
cmpsl
outsb
daa
shll
repz
subl
or
add
push
jle
pop
arpl
pop
mov
ret
or
mov
dec
mov
mov
adcb
mov
dec
sbb
mov
jp
pop
inc
xchg
movsb
xor
mov
mov
jo
call
pusha
pop
int3
stos
xchg
ret
iret
xor
xor
or
xchg
cmp
fcmovu
push
ret
mov
fmuls
stos
mov
push
fidivs
pop
xor
fmuls
sub
fisttpl
xor
fcoml
sub
xor
call
xchg
push
pusha
sbb
addr16
push
mov
sub
inc
add
push
dec
adc
cld
and
add
das
out
cmpsl
popa
jle
nop
imul
imul
fmull
cmp
mov
sarl
xchg
popa
sub
test
lods
mov
pop
es
andl
shll
insl
popf
xor
inc
or
adcb
mov
sub
mov
xor
jae
xor
in
loop
lret
dec
push
bound
cmp
std
jge
into
sti
shlb
and
decb
jecxz
push
lret
fstl
inc
in
rclb
mov
jl
xchg
inc
pop
inc
pop
inc
push
xlat
imul
push
sarl
mov
inc
push
out
jae
push
push
js,pn
xchg
lea
test
jno
stos
mov
push
in
rcrl
push
faddl
mov
gs
scas
in
sahf
jno
or
std
adc
outsl
and
fldl
xchg
sbb
call
inc
lods
inc
xchg
lods
stos
repz
scas
push
pop
clc
and
jmp
das
push
inc
cmp
xor
adc
test
xchg
adc
out
ds
mov
sbbb
insl
ror
aaa
sub
icebp
mov
add
incb
jg
mov
fcomps
test
out
clc
mov
push
jbe
hlt
pop
jl
xor
into
sbb
mov
dec
lock
and
push
adc
jne
in
dec
and
ja
or
push
jno
xor
jge
inc
or
and
pop
lods
push
shr
aas
mov
mov
push
mov
mov
lds
stos
sub
adc
adc
inc
jecxz
subb
in
lret
sub
push
adc
xor
dec
cmp
xchg
dec
imul
mov
stos
ja
add
ja
sbb
cmpsb
push
or
icebp
icebp
les
insl
adc
push
sbb
mov
sub
xor
into
addl
psrlw
js
inc
rclb
loop
int
push
mov
or
dec
and
xor
fstpl
dec
pop
sti
scas
ss
mov
sbbl
jp
sti
adc
push
pop
aas
in
pop
adc
icebp
push
mov
lods
mov
mov
push
repnz
mov
mov
outsb
add
jge
jnp
add
mov
fnsave
xchg
xchg
fimull
inc
shlb
inc
sub
jno
int3
dec
mov
xchg
or
dec
sarl
iret
mov
test
jmp
jecxz
and
pop
stos
add
add
bound
mov
jae
ret
lea
mov
push
lods
test
punpcklwd
sub
mov
jp
add
shl
or
pushl
jns
jp
test
push
cmpsb
jne
fisttps
into
dec
pop
dec
mov
stos
or
cwtl
lret
scas
idivb
and
dec
push
imul
jp
popf
lahf
lahf
ds
fstl
test
sarl
or
out
rcl
jbe
pushl
rcrb
jp
xchg
lahf
inc
stos
dec
pop
std
into
dec
insb
mov
push
lret
outsl
das
bound
insb
rorb
adc
xchg
xor
sbbb
movsb
ret
idiv
adc
and
jb
push
sbb
cmp
ret
add
sbb
cmp
mov
or
mov
popf
inc
imul
cmp
addl
test
test
xor
in
cmp
test
inc
adc
mov
lcall
inc
adc
shlb
push
jge
sub
xchg
mov
test
sub
mov
hlt
adc
lock
lret
test
addb
jae
stc
pop
les
sub
mov
sub
sahf
subb
jb
pop
or
mov
xchg
mov
xchg
popa
mov
in
and
mov
push
mov
and
push
push
mov
insb
sbb
ret
mov
scas
sub
fcmove
movsl
sbb
fisttpll
repz
int
sbb
repnz
mov
sbb
inc
fsubl
xbegin
xchg
sahf
fs
and
dec
mov
push
subl
mov
movl
icebp
cmp
rorl
mov
out
pop
xchg
aas
and
out
nop
mov
shlb
repz
ret
fwait
xchg
pop
es
ss
jmp
cmc
les
xchg
mov
jno
inc
jl
enter
into
daa
xor
jge
add
fwait
pop
push
and
bound
mov
cltd
xor
adcb
sbb
les
sub
cmp
insl
cmpsb
mov
testb
scas
sbb
insb
vmovlps
xlat
adc
cld
and
inc
push
mov
jb
cltd
imul
sarb
das
xchg
mov
lds
shll
ja
cmpsb
lret
push
pop
mov
mov
outsb
mov
sub
mov
in
testb
lahf
in
mov
cmp
ficompl
sahf
mov
adc
in
mov
adc
popa
push
pop
call
jbe
loopne
lretw
xor
pop
dec
push
adc
stc
mov
or
xchg
fimuls
mov
leave
test
jg
pop
out
test
and
xorl
cli
lea
shll
cltd
mov
xor
mov
enter
negb
pop
adc
cmp
push
pop
loop
add
lods
or
inc
callw
pusha
jl
es
inc
ret
mov
ds
popa
and
or
rcrb
jo
rolb
test
mov
or
push
mov
subl
lock
mov
pop
or
cmp
cmc
sbb
shrb
pop
jo
inc
jp
xchg
mov
jb
cmp
jb
stos
dec
cmpsl
dec
andl
add
repz
lcall
xorl
and
xchg
xchg
jmp
jge
mov
test
mov
cmp
mov
jns
adc
roll
cmpsl
xlat
loop
dec
shlb
sbbl
push
jecxz
and
and
cmp
jne
in
cmpsb
insb
dec
test
jns
jg
lea
mov
push
jb
icebp
push
dec
lret
shll
xchg
jp
push
test
insl
rclb
sbb
jns
in
sub
lret
mov
xor
cmp
cmp
in
jecxz
outsl
xor
adc
out
add
pop
pop
in
sbb
cmp
push
gs
shrb
hlt
jl
das
sub
out
data16
xlat
rorl
lret
es
test
sbb
andl
inc
sub
sahf
mov
fmulp
sarb
adc
xor
sub
pop
or
jbe
push
lock
or
fcmovnb
jle
cmp
or
jne
xchg
pusha
pop
mov
int3
mov
push
out
ret
push
cpuid
sub
pop
dec
xor
mov
rcll
mov
xchg
mov
imul
push
mov
bound
fcomps
push
stc
mov
or
lock
inc
push
stc
fwait
mov
daa
xchg
imul
stc
add
out
cmp
jg
fimull
sti
mov
mov
sub
jb
xchg
jno
cmc
rorb
lret
jg
pop
dec
lret
out
leave
fsubl
xor
push
sarb
fdivs
cmp
cmpsl
dec
out
adc
lods
std
fwait
pushf
test
inc
rcll
mov
mov
and
ss
or
sbb
pop
cmc
cs
out
xor
pushf
mov
xchg
aas
adc
lea
pop
ret
push
cli
ljmp
lock
jbe
xor
mov
inc
std
adc
push
shr
mov
and
xor
hlt
xor
cmp
pop
sub
out
mov
adc
lods
inc
xchg
cwtl
ret
xor
dec
outsb
xchg
mov
sub
sbb
cmpl
jno
lahf
jle
mov
imul
pushf
std
pop
jno
mov
mov
repnz
jno
xchg
popa
mov
stos
out
adc
inc
mov
pop
mov
daa
inc
lds
and
push
add
cmp
fsubp
loop
pop
mov
repz
pop
ja
popa
cs
stos
mov
imul
push
lret
mov
outsb
adc
xchg
or
pop
ja
sahf
adc
mov
bnd
add
insb
xor
lret
nop
hlt
push
sti
cmp
in
call
pop
xchg
pushf
out
mov
mov
cmp
xor
cmpsb
popf
mov
inc
in
push
cmpsl
pop
sti
pop
mov
aam
cmpb
fwait
sub
cmpsl
leave
add
cwtl
insl
cmp
addl
mov
or
jns
nop
jge
scas
loop
push
dec
jns
add
repz
sub
mov
es
xchg
mov
insb
imul
cwtl
pop
jns
sbb
add
jbe
imul
cli
js
jo
or
push
add
cltd
movsb
test
xchg
and
out
jge
std
inc
test
ja
adc
mov
addr16
mov
sub
scas
push
call
sbb
stos
pop
pop
lahf
push
xor
cli
jg
xchg
das
fsub
cld
scas
push
imul
and
push
sub
pushf
mov
je
es
jmp
ds
cli
xchg
cwtl
gs
lea
jmp
cmovo
xchg
push
jno
push
jge
and
mov
sbb
cld
mov
movsb
in
mov
and
ret
xchg
xor
aaa
adc
or
or
fidivl
fdivrs
gs
mov
inc
mov
mov
mov
mov
int3
ss
xchg
fists
loop
fwait
aas
sahf
sarl
lret
in
and
divb
in
and
mov
pop
push
fucomip
push
fdiv
inc
add
mov
jl
testl
and
shlb
mov
jbe
pop
push
fsubrs
movsbl
or
cld
pop
call
aad
loope
xchg
xchg
push
jne
test
and
dec
iret
das
ret
inc
enter
add
sbbb
sarb
sahf
mov
jmp
not
mov
aam
shrl
push
cmc
mov
scas
ds
lahf
mov
jb
dec
fs
iret
mov
xor
mov
in
cwtl
cmpsb
push
movl
push
lds
mov
push
sarb
or
jge
in
mov
jp
dec
setno
push
pop
mov
setp
lods
fcomps
mov
mov
or
sub
add
in
mov
cmp
pop
jle
hlt
sub
mov
xchg
lahf
ds
sbb
mov
fsub
cltd
push
nop
call
dec
aam
mov
das
testl
mov
repz
jecxz
ficoms
mov
cmp
popf
mov
push
test
push
fadds
mov
pop
daa
mov
idiv
mov
mull
cmpsl
adc
fdiv
mov
cmp
xchg
lock
imul
fnclex
loope
rolb
hlt
sbb
test
pusha
cwtl
cli
in
adc
leave
mov
xchg
adc
addr16
icebp
mov
mov
int
mov
bound
jbe
lock
outsl
leave
sbbw
rorb
adc
xchg
scas
adc
jnp
stos
test
out
aam
push
dec
dec
mov
mov
mov
mov
or
jne
xchg
popa
or
mov
rcr
xorb
or
addb
cmpsl
mov
lea
imul
mov
xor
stos
icebp
xchg
pop
mov
xor
inc
insl
xor
xor
dec
shl
les
sub
orb
lods
lret
lds
dec
jae
inc
imul
sbb
in
push
sbb
mov
push
push
lahf
adcl
xor
xchg
scas
sub
movsb
loopne
mov
xor
shrb
lods
push
cs
mov
xchg
jnp
push
dec
sbb
ficoms
dec
adc
xchg
scas
jns
push
xor
mov
pop
cltd
test
inc
sbb
cmpsb
mov
inc
mov
mov
das
jmp
adc
sbb
aaa
push
cmp
aas
lods
aam
mov
leave
jne
mov
adc
add
mov
pop
sbb
sarl
iret
jp
and
push
sub
add
lock
push
mov
sahf
pop
loop
lret
or
push
mov
pop
pop
jmp
xorb
scas
pop
pop
mov
cmp
stos
sbb
sbb
inc
push
insl
or
cmp
push
pop
outsl
and
fdivrl
xchg
mov
es
in
xor
and
jae
es
js
mov
pop
and
jle
xchg
popa
aad
addl
jo
fcom
imul
or
mov
jno
cli
pop
pop
bound
rol
xor
dec
add
jns
dec
xchg
out
fsubp
xchg
roll
shll
lods
xchg
popf
mov
popf
cs
lcall
cmp
repnz
push
bound
cmp
xchg
ss
into
jge
dec
dec
xor
push
shrb
jns
nop
sbb
aaa
pushl
xor
push
scas
push
xor
scas
lea
add
jns
fwait
test
inc
push
mov
arpl
cmp
or
or
and
push
nop
test
pushf
or
push
pop
enter
subl
push
out
clc
addr16
scas
inc
adc
sub
pushf
mov
cmp
dec
call
imul
pop
clc
sbb
mov
cmp
aam
lea
lds
dec
cs
and
ret
and
dec
dec
addr16
ljmp
add
sti
sub
fildll
xor
sbb
mov
and
xor
xor
lock
cmp
pop
sti
cmc
outsl
fsubr
mov
movsb
push
dec
or
xlat
inc
ljmp
fidivs
xchg
dec
jno
sti
sbb
and
xor
lret
sub
cltd
mov
inc
je
js
jecxz
in
mov
mov
aam
fsubl
stos
sbb
push
lock
scas
lock
clc
mov
sbb
aam
mov
movsb
lret
int3
pop
inc
mov
pop
and
cwtl
xchg
or
dec
sub
mov
cmpsb
push
lock
mov
inc
stc
int3
and
pop
fs
jno
xor
mov
decl
jmp
dec
adc
pushf
jmp
jne
out
mov
add
mov
ret
inc
mov
jg
mov
int
divl
rcrl
xchg
mov
popf
sub
out
dec
add
and
jmp
jo
jmp
inc
mov
aad
inc
mov
sub
es
sbb
add
and
mov
sbb
cmp
insb
in
fnstenv
pop
xchg
dec
stos
pushf
imul
dec
sub
mov
es
dec
cmpsb
sarl
in
and
xlat
imul
xor
loop
std
int
pop
mov
shlb
fmuls
int
jb
mov
movsl
leave
cs
mov
shl
fistl
sbb
outsb
push
aaa
data16
fucomip
mov
sahf
pop
gs
dec
loopne
and
push
sahf
mov
xchg
adc
pop
sub
xor
and
or
inc
push
mov
sbb
cltd
int
repnz
jle
lahf
or
icebp
or
loope
not
inc
les
sti
and
push
sub
in
pushf
dec
hlt
test
ret
hlt
dec
fmuls
enter
hlt
iret
dec
mov
ss
adcl
xchg
mov
in
lahf
insl
repnz
ljmp
push
add
xor
iret
push
xor
push
xchg
aad
out
or
and
int
ljmp
cmc
fstpt
mov
or
push
xchg
clc
lock
pop
ds
mov
xor
stos
jg
dec
lock
fcoms
pop
mov
mov
mov
pop
pusha
sbb
sbb
inc
push
cs
jp
iret
mov
loop
dec
imul
mov
xchg
inc
loop
gs
adc
mov
jmp
fwait
shl
push
mov
nop
push
or
add
xchg
dec
xchg
xchg
js
lcall
test
ret
incb
int
pop
cltd
mov
inc
test
mov
sahf
mov
loop
pusha
mov
enter
mov
dec
out
jae
fwait
or
sub
sbb
in
jbe
repnz
xchg
sub
inc
jne
push
push
lock
pushf
test
lock
dec
in
mov
inc
mov
aad
xchg
les
jmp
stc
outsb
jns
outsl
cmpb
rcrl
inc
test
pop
and
scas
or
pop
pop
or
mov
pop
das
cltd
xor
jbe
out
subl
shlb
mov
lods
sbb
out
sarb
pop
hlt
icebp
ret
jl
mov
jne
xor
popf
add
push
stos
adcl
pop
inc
out
pop
pop
int3
repnz
sub
push
scas
jl
push
je
lock
push
cmpsl
push
add
lret
ss
rdtsc
sub
add
cmpsb
dec
lea
push
add
adcl
sar
jl
cmp
xchg
scas
xchg
push
hlt
cmpsl
je
ret
loopne
in
push
rol
pusha
lahf
inc
lods
clc
pop
je
xchg
lcall
test
xchg
cmc
mov
sbb
push
rcrb
push
pop
pop
jns
bnd
outsl
jno
aas
sbb
pop
xor
loop
test
rcrb
adc
aaa
imul
add
jne
xchg
push
adc
out
inc
loope
lea
ljmp
cmp
sbb
push
dec
xchg
mov
filds
jmp
rcll
cmp
aaa
push
and
clc
gs
xor
xor
sbb
dec
dec
decb
adc
and
sbb
and
hlt
sbb
jns
outsb
dec
hlt
jbe
loopne
jb
cmp
repz
xlat
mulb
sbb
and
pusha
xor
cwtl
dec
fcoml
or
pop
ret
adc
add
pop
push
and
stos
addr16
out
les
mov
shrl
inc
pusha
mov
fidivrs
pushf
mov
leave
xchg
sub
adcb
and
cmpsb
dec
jbe
call
xchg
call
mov
inc
or
pop
dec
and
push
fs
cmp
push
xchg
mov
adc
movsl
and
dec
f2xm1
enter
sub
in
mov
ljmp
add
jns
sub
fstpl
dec
std
and
xchg
mov
loopne
mov
aam
inc
fwait
test
ja
or
add
sbb
ss
mov
dec
jp
call
fs
adc
hlt
adc
fisttps
inc
ja
insl
push
call
sub
push
inc
fcomip
test
jl
sarb
roll
jl
test
scas
mov
sub
inc
xchg
cwtl
repnz
ret
pop
test
nop
repz
fimull
xchg
sbb
lds
insb
and
pop
movsl
lods
bound
jl
jo
les
or
sub
sub
fdivl
pusha
xor
pop
lock
mov
and
jl
and
fdiv
xor
jg
push
faddl
repz
loope
aaa
mov
stos
cmpsb
imul
in
push
mov
adc
xor
jmp
in
sarl
iret
or
dec
shrb
les
jno
pop
js
int3
daa
xor
mov
xor
and
sub
and
pop
out
xchg
shrl
fisubl
and
adc
adc
fbld
repz
scas
cwtl
pop
sbb
sbb
daa
inc
sbbl
xor
push
das
cld
xchg
sub
xor
das
sahf
sbb
std
imul
pop
out
mov
adc
pop
lcall
cmp
fistpl
rcll
int
aas
das
xchg
pop
sahf
fwait
in
and
sub
jne
ljmp
imul
and
xchg
sbb
loop
out
mov
xor
xor
push
inc
das
and
xchg
pop
enter
arpl
dec
jle
xchg
out
sbb
repnz
inc
cli
sub
dec
cmp
inc
addr16
roll
xchg
stos
imul
and
jb
bound
pop
scas
xor
arpl
adc
inc
sub
popa
les
sbb
insb
or
sbb
js
sbb
loope
mov
sti
lcall
sub
and
push
aaa
pop
bnd
leave
iret
push
shrl
sub
mov
sub
or
mov
test
orb
dec
jae
lods
test
repnz
jg
jle
pop
sqrtps
pushf
addr16
repz
jbe
mov
xchg
sti
sub
xchg
jbe
outsb
ss
mov
mov
loopne
lods
lcall
cmpsl
mov
mov
mov
cli
sub
int
cmp
clc
loopne
fwait
adc
sbb
aam
lock
mov
xlat
adcl
adc
icebp
xor
pop
loopne
lar
stc
xchg
rcll
pop
adc
sub
dec
and
daa
idivb
dec
pop
fcmovnu
movsl
pushf
add
mov
add
or
inc
jno
pop
rorb
or
lret
sub
sub
fs
in
es
std
in
fadds
push
imul
ds
pop
pop
pop
cmp
iret
pop
sbb
es
mov
ret
sbb
jo
or
test
fimuls
xchg
xor
or
xor
mov
pop
jmp
notl
repnz
stos
jo
xchg
xlat
pushf
xorb
outsl
mov
and
inc
pop
inc
addr16
xchg
shll
jno
dec
mov
add
outsl
sti
fld
mov
rep
mov
orb
jno
andb
pusha
push
loope
das
out
mov
test
or
xchg
movsl
clc
sbb
out
ret
in
out
jle
adc
pop
cmpsl
cmp
mov
or
in
outsb
popf
xchg
fimuls
add
pop
in
jae
cld
pop
cmp
cmp
jb
cmp
insb
sbb
fsubrl
rol
xor
inc
popl
pop
lock
mov
insl
push
rep
dec
mov
pop
push
lock
dec
into
xlat
push
js
push
xchg
pop
aam
jmp
xor
pop
adc
scas
and
jg
sbb
dec
mov
sbb
fs
xor
mov
dec
cltd
ret
cmp
clc
push
inc
movl
shll
xchg
gs
adc
aad
ret
loop
cmc
xchg
mov
fmull
push
sbb
xchg
in
test
dec
aad
pop
push
test
sub
jmp
sub
es
faddp
pop
lahf
jae
aam
cwtl
dec
pushf
scas
out
inc
sub
ss
sbb
push
into
push
in
sbb
pop
lods
xlat
jo
pop
shrb
and
ficoms
out
adc
shrl
and
repz
push
insb
int
jle
lahf
lods
call
in
dec
xor
stos
jmp
pusha
and
add
gs
fcmove
imulb
push
mov
nop
adc
movsl
mov
int3
std
imul
dec
xchg
jle
jp
xchg
jae
pop
push
insb
fisttps
mov
sti
jno
negb
out
jmp
aaa
dec
pop
subb
dec
mov
mov
loopne
sbb
mov
inc
and
lock
mov
rorl
enter
aas
cmpsl
fisttpl
or
xor
pop
push
mov
icebp
mov
and
and
loope
fs
push
dec
xor
adc
and
mov
push
dec
in
repnz
orb
dec
cmpsb
jmp
in
add
dec
xor
insb
repnz
lret
ljmp
insl
or
js
and
pop
or
mov
and
dec
mov
add
adc
cs
ljmp
dec
lret
rorb
insb
or
popf
in
sub
cmp
push
add
daa
and
pop
xchg
adc
enter
mov
lock
inc
insb
popl
cld
xor
adc
and
ss
fcoml
repnz
mov
jle
ficoml
subb
loopne
cmp
stos
rolb
test
jns
fistps
ret
or
mov
dec
and
and
scas
call
pop
add
xchg
mov
mov
cmc
pop
cmpsb
sbb
int3
cli
mov
movsbl
in
mov
sub
fldt
add
push
and
mov
jl
push
mov
pop
sti
adc
and
fldt
jae
and
add
stos
subb
inc
push
cmp
adc
aas
scas
test
fwait
aaa
fldl
stos
jp,pt
bound
push
pop
sbb
add
int
test
fwait
cmc
xor
lcall
cmc
pushf
je
xlat
or
dec
rcll
sbb
sub
adc
fistpl
dec
out
or
sbb
cmpsb
outsl
imul
in
fsubs
loopne
lods
lock
inc
mov
packuswb
sbb
pop
xchg
js
and
mov
and
inc
insb
jl
pop
into
fisttpll
dec
call
lds
into
outsb
pop
addl
das
jns
pop
mov
test
dec
mov
outsl
mov
jno
fnstenv
and
inc
test
lret
iret
xor
mov
mov
outsb
imul
push
mov
test
inc
lret
cmp
test
push
add
test
cmc
jl
jbe
arpl
pop
sub
push
ret
or
std
das
mov
dec
push
clc
inc
or
popf
imul
inc
cmpsb
add
jbe
dec
clc
shrl
pop
and
cmpsl
aas
mov
fistpl
mov
push
cmp
jp
scas
push
in
sbb
std
cmpl
mov
push
pop
je
sbb
out
mov
cmp
imul
enter
lods
jb
mov
push
lods
xchg
fcomip
or
outsb
dec
mov
in
ret
or
decl
xor
inc
mov
xor
mov
pop
pop
pop
clc
ret
dec
notl
adc
mov
mov
mov
outsl
mov
jmp
or
cmp
inc
mov
adc
insl
inc
mov
cmp
and
stos
cmp
out
mulb
std
pusha
jecxz
sub
ret
out
ret
sahf
and
and
mov
pop
lret
xchg
in
dec
cmp
ret
test
mov
sub
out
and
pop
popf
mov
xchg
and
mov
jae
popa
cltd
push
call
jns
stos
nop
add
cmpb
jmp
test
mov
outsl
mov
mov
cmp
jg
and
dec
mov
or
mov
mov
fistps
push
in
add
and
ds
jae
movsl
loope
test
inc
xor
repnz
in
cli
in
cmp
sarb
test
dec
cmpl
jle
or
mov
mov
cmp
scas
data16
and
out
das
xor
pushf
test
fisttps
mov
dec
mov
int3
xor
pop
enter
lds
in
das
lods
outsb
popf
pop
cs
bound
dec
negl
frstor
jge
push
out
mov
cwtl
jg
fsubrs
sbb
xor
aaa
cmp
mov
and
fcomps
add
mov
ret
movsb
loope
mov
xchg
cli
in
imul
xchg
sti
sub
jno
cmpsb
scas
jae
movsl
fs
jg
or
cmpsl
and
jp
into
imul
dec
mov
xlat
mov
dec
stos
daa
mov
cs
inc
jmp
imul
pop
int3
sbb
push
mov
dec
pop
and
push
int3
xor
sbb
jns
outsb
and
mov
js
fwait
mov
cmp
shll
loop
pop
incb
mov
enter
outsb
cmp
cli
cld
stos
cmp
outsl
rcll
cmp
pop
xchg
mov
or
sbb
xchg
and
pop
inc
mov
js
fdivr
addb
adc
inc
loope
jo
fidivrl
pop
mov
addr16
inc
pusha
xchg
je
push
dec
xor
sti
inc
outsb
ds
sub
mov
js
mov
fisttps
mov
fs
movsl
cmp
ljmp
ss
pop
pop
outsb
enter
inc
mov
add
xchg
mov
pop
pop
int
in
adc
outsb
divb
popf
xchg
imul
into
xor
xchg
mov
push
icebp
push
test
add
loop
lahf
aam
xchg
stc
mov
jecxz
fbld
xchg
sub
push
fmuls
jl
dec
inc
fnsave
aaa
int
rclb
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
mov
jo
nop
cwtl
dec
inc
mov
pop
mov
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
