push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
add
xor
fstpl
bound
sub
pop
add
pop
jne
test
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
dec
imull
fimuls
xor
fcmovnu
pop
xchg
mov
xor
jo
loope
pushl
popf
call
hlt
das
xor
loopne
jge
sub
sub
cmp
and
lret
subb
mov
lret
mov
sahf
gs
pop
incb
ss
stos
cltd
cmp
lock
dec
xor
lods
cld
popa
jecxz
jnp
push
insb
mov
popf
dec
fcmovbe
add
or
dec
scas
pop
inc
jg
sub
cld
cmp
ret
xchg
and
jo
nop
pushl
push
dec
stc
jge
xchg
push
xor
and
lcall
addb
sub
testb
pop
push
sbb
aaa
mov
cmp
rcl
sub
push
and
cmp
mov
inc
js
mov
inc
jo
test
adc
mov
mov
pop
rolb
push
fistpl
inc
cltd
xchg
popw
int
outsl
pushf
fptan
jb
scas
push
dec
sub
xor
inc
mov
sbb
hlt
loopne
sub
popa
imul
call
notb
and
cmp
adc
mov
push
mov
scas
ret
xchg
popf
cmp
mov
roll
add
cwtl
repnz
mov
insl
std
shll
xchg
inc
rorl
sub
pop
lods
int3
outsb
cltd
push
fisttps
sub
iret
leave
scas
adc
sub
inc
pop
mov
mov
enter
pushf
xlat
xchg
add
mov
mov
pop
sbb
ljmp
adc
jg
ret
mov
cld
jge
xor
xor
jmp
scas
sti
sarb
lahf
je
repz
pop
stos
arpl
repz
sahf
pop
rcll
ljmp
mov
ss
nop
xor
test
imul
jns
cs
sbb
outsl
mov
pop
cmc
call
es
sbb
xor
push
xchg
leave
enter
loopne
push
sub
sbb
jo,pt
jbe
lods
fisttpl
adc
mov
sbb
and
into
out
int
mov
daa
mov
cmc
frndint
adc
sti
in
add
jnp
xor
stos
push
enter
dec
fnsave
jl
add
mov
jmp
orl
sbb
cmpsb
pusha
insl
mov
push
inc
jno
sbb
loopne
je
addr16
jo
inc
fbld
sub
jecxz
mov
and
js
and
mov
sbb
add
ret
scas
push
jns
or
xchg
jle
pop
dec
inc
jo
fstpt
adc
loope
data16
lods
dec
mov
loop
and
xchg
test
or
push
pop
cmc
enter
cld
or
dec
int3
push
dec
dec
adc
rcr
sbbb
sub
xchg
jnp
add
add
out
jbe
insl
out
arpl
inc
pop
push
sub
fmuls
mov
lret
ja
jbe
stos
xor
push
dec
mov
cmpsb
or
adc
mov
stos
jmp
int3
les
pop
mov
test
sub
popf
inc
add
test
mov
paddw
mov
xchg
mov
xorb
repnz
hlt
insl
cs
jg
xor
leave
cmp
sub
fwait
mov
movsl
test
test
cmp
inc
fiaddl
loope
pop
inc
js
or
jecxz
jnp
xchg
cmp
inc
dec
cmp
adc
push
std
sbb
cltd
and
in
insl
xchg
aam
inc
call
ja
into
xchg
int3
push
idivl
push
xchg
test
lods
mov
popl
je
movsl
int3
adc
mov
push
test
cli
out
shr
cmp
mov
lahf
xchg
fisubrs
inc
or
sahf
sub
mov
clc
jg
adc
lock
sarb
bsr
jmp
outsb
mov
push
pusha
outsb
js
movsl
stos
push
pop
xchg
dec
xchg
mov
jmp
fsubr
dec
pop
sbb
inc
sub
pop
icebp
jns
pop
cmp
push
arpl
aad
dec
lea
jbe
rcl
in
stos
dec
mov
ds
push
ja
out
dec
add
stos
pop
inc
int
dec
sbb
adc
sbb
lahf
jecxz
sub
cmp
mov
out
lods
add
sarl
test
jg
xor
lea
imul
cmpsb
lods
dec
stos
and
sub
popl
insb
push
dec
pop
into
jp
inc
rcrl
inc
lds
add
xor
roll
scas
daa
data16
popf
inc
mov
and
adcb
push
xchg
in
pop
jb
test
movsl
fistpll
push
nop
xor
xor
dec
pop
test
inc
dec
in
mov
mov
fcompl
rcll
cmp
dec
mov
or
in
xor
fcmovu
gs
xor
lds
xor
push
mov
lea
mov
jmp
mov
cwtl
ja
mov
xchg
outsl
jb
hlt
call
lret
enter
fsubrl
sbb
notl
dec
popa
mov
mov
adcb
mov
mov
jmp
fldl
cs
sar
std
add
gs
push
aaa
and
out
push
or
fidivl
sbb
mov
sub
dec
jo
cmp
jb
and
repz
adc
fldt
jae
cmp
add
and
test
sub
outsb
loop
adc
sti
sbb
xor
push
js
ljmp
adc
xchg
outsb
adc
mov
mov
adcl
pop
cwtl
mov
lds
xchg
adc
sahf
repnz
add
cli
mov
gs
jmp
mov
ljmp
mov
jb
mov
push
push
jb
jmp
sub
dec
push
adc
adc
inc
mov
scas
mov
imul
pop
add
inc
fucom
mov
or
ss
lcall
out
or
ja
out
jno
divl
cli
ds
stos
jnp
and
jge
xchg
cmpl
sbb
add
data16
gs
jb
inc
inc
dec
lret
test
jno
xor
xchg
push
lods
adc
jg
cmpsb
push
mov
in
sbb
and
pop
inc
sbb
out
cmp
or
pop
cmp
jp
imul
in
bound
mov
sbb
daa
pop
leave
sbb
cmc
mov
push
das
add
stc
or
jo
mov
xchg
xor
sub
mov
xor
sub
mov
jno
jo
inc
fldenv
mov
out
sub
xchg
test
push
mov
lea
mov
sub
in
outsl
mov
xchg
push
sub
out
fdivl
adc
push
dec
in
leave
pop
out
mov
sti
sbb
lret
daa
pop
arpl
out
dec
mov
arpl
mov
mov
mov
xchg
or
pop
or
lcall
movsl
fldt
mov
cld
orb
es
lods
xorb
das
imul
or
jae
push
lds
adc
fldcw
or
mov
fwait
jno
sbb
lods
add
add
dec
cltd
push
mov
xor
xor
jbe
std
push
xor
cmp
scas
adc
cmp
ljmp
push
pop
test
add
pop
divb
mov
stos
in
in
xor
sub
in
hlt
aaa
data16
sub
mov
jle
leave
mov
stos
xchg
into
xorl
jle
mov
lcall
mov
xor
pop
jns
add
cmc
cmp
fstpt
lea
fldt
ss
or
push
xchg
jb
and
xor
icebp
notb
mov
rorl
xor
jo
xchg
in
out
or
cli
cltd
mov
stos
pop
into
sub
andb
push
sbb
loop
sub
sub
fs
pusha
aas
cmpsb
shr
in
pop
add
push
orl
add
adc
push
dec
dec
lods
xchg
fildll
filds
rcrb
in
push
lods
pop
jae
jecxz
sub
imul
cmp
pop
xlat
lcall
mov
add
jbe
adc
loopne
adc
and
loopne
int
adc
loop
sub
cmp
mov
imul
subl
pop
xchg
add
daa
dec
cs
lock
xor
mov
and
sti
test
mov
or
add
daa
pop
inc
fisubs
cmp
adc
mov
jno
negb
cld
push
stos
stos
jb
sti
repz
mov
mov
out
and
ss
mov
divl
or
push
aaa
xchg
and
mov
push
dec
mov
in
es
stc
xor
xchg
mov
jecxz
aad
pop
sbb
inc
mov
sub
or
cmp
popa
aam
add
jecxz
bound
pop
sarl
xchg
mov
and
sbb
idivb
mov
jb
arpl
push
xchg
sub
pop
test
xchg
inc
jg
leave
scas
movsb
int
xchg
inc
sti
mov
loope
add
dec
mov
mov
andl
loop
or
xchg
test
mov
xor
outsl
aam
mov
cmp
pop
insb
or
push
sti
dec
cmp
fisttpl
andl
xchg
push
cmp
dec
std
mov
mov
shl
dec
add
sarb
mov
in
jge
mov
js
pop
pop
data16
cmc
movb
mov
pop
test
pop
cmp
add
mov
mov
fistpl
push
sbbl
push
push
loope
jb
out
dec
or
dec
sbb
push
sub
ljmp
cs
xlat
mov
lods
pop
cli
push
stos
pop
fs
jo
repnz
add
push
mov
stos
int3
movsb
arpl
add
mov
cld
and
rcl
cmpb
leave
cmp
sbb
jmp
popf
mov
adcb
fs
mov
dec
adc
pop
jae
jg
js
sbb
or
mov
fs
imul
push
sbb
jg
pusha
push
pop
push
push
and
xor
enter
cmp
add
xor
push
push
mov
lods
repz
inc
stc
jmp
dec
adc
loope
ljmp
in
push
adc
fisttpl
scas
rorl
in
adcl
push
add
ret
pushf
clc
mov
sub
cli
jae
add
test
xlat
scas
test
or
sub
loope
push
jbe
rorb
sbb
and
ret
scas
jb
pop
jnp
rcll
bound
push
push
cmp
out
inc
mov
dec
ja
aaa
dec
xor
les
cmpsl
insb
mov
jnp
jae
mov
mov
movsl
and
mov
jbe
or
adc
mov
imulb
inc
or
or
sub
movsl
lea
push
pop
loop
leave
test
cmc
lea
xchg
sbb
lock
dec
xor
cmpsb
xchg
loop
push
loop
loopne
pop
push
iret
stos
es
iret
sahf
xor
stos
cmc
out
stos
dec
clc
pop
leave
cmp
xor
hlt
add
std
cmpsb
push
pushf
inc
pop
inc
jmp
ret
xchg
adc
dec
sti
and
test
fdivrl
shlb
mov
ret
xchg
push
pop
into
add
sub
sub
and
sbb
std
decl
mov
loopne
cmp
push
sub
push
loop
lods
jmp
sahf
ds
punpckhdq
insb
and
outsb
xor
stc
mov
sub
and
lret
lcall
mov
test
fists
fisttpll
int
xor
lcall
cli
mov
mov
or
cltd
push
cld
jp
test
mov
xlat
cmp
dec
adc
push
and
fcoms
std
jl
cltd
roll
repz
rcll
push
cmp
insb
mov
enter
pop
inc
aas
pop
arpl
into
iret
ljmp
lret
pop
xor
mov
xchg
sti
xor
ret
xchg
push
fwait
add
mov
dec
and
xor
out
mov
cmpsl
data16
xchg
adc
enter
inc
inc
bound
cmp
inc
inc
test
mov
daa
xchg
xchg
sbb
adc
xor
add
ds
or
test
mov
add
xchg
push
jg
pop
fadds
packsswb
adc
mov
popf
mov
stos
inc
xlat
in
je
cmp
subb
sub
scas
push
fisubrs
mov
xchg
mov
sar
cmp
pop
push
inc
fiaddl
pop
stos
popl
and
push
jge
pop
pop
cmc
lds
jecxz
lahf
lret
adc
and
jnp
cmpsl
dec
cli
push
add
add
pop
inc
js
xacquire
out
lahf
mov
jmp
jp
adc
sbb
punpcklwd
cmp
add
xchg
adc
adc
lahf
out
xchg
mov
dec
sbb
aam
clc
lcall
xchg
pop
pusha
gs
lret
xchg
into
mov
or
mov
and
pop
mov
mov
call
dec
adc
cmp
or
fcomip
xchg
sbb
dec
dec
mov
addb
cli
jp
test
stos
test
decb
or
in
je
in
mov
into
push
mov
lret
mov
xchg
push
and
mov
cltd
push
sbb
subb
or
repz
mov
cmp
loop
cmp
cmpsb
sti
dec
push
or
loopne
hlt
and
iret
push
cmc
cwtl
xor
inc
shrb
in
lock
push
xor
sti
icebp
dec
xlat
mov
out
aam
stc
je
fidivrs
mov
rcll
clc
lret
sbb
lea
bound
test
mov
push
inc
sub
or
pop
pop
scas
movsb
aaa
push
cmp
jns
push
pop
in
test
jmp
gs
shr
daa
mov
cld
clc
lea
movsl
aad
sarb
je
fistl
test
mov
and
mov
popf
sbb
pusha
push
lret
pop
inc
jbe
sti
adc
ds
mov
mov
and
xchg
mov
outsl
jns
dec
push
bound
cmpsl
and
loope
lock
sbb
test
lods
clc
fldt
jle
add
mov
outsl
leave
mov
mov
add
xchg
jb
inc
fcmove
and
dec
mov
mov
push
clc
and
xchg
mov
addr16
push
daa
pop
xor
sub
sbb
stc
movsl
push
fadds
or
xor
xchg
jnp
cmp
movsb
mov
inc
ror
lea
add
ret
out
xor
cmpsb
repz
jae
push
jbe
std
fcmovnbe
jo
and
lds
sti
in
jmp
and
pop
stos
movsl
xchg
loope
nop
xlat
mov
push
adc
xchg
ds
addr16
adc
mov
cltd
mov
and
shll
ds
int3
icebp
inc
and
jnp
or
sbb
jmp
pop
fxch
cmp
fcoml
ds
mov
inc
lods
loope
jecxz
fcmovnbe
push
jb
outsl
leave
clc
clc
add
inc
cmp
pop
or
inc
cli
out
mov
mov
mov
pop
xor
out
xchg
call
xor
test
sarb
negl
add
push
lcall
cmpsl
int3
mov
mov
adc
cmpsl
subl
add
or
xchg
mov
sti
mov
sbb
adc
adc
and
stc
sbbb
test
push
popa
ffree
loopne
add
aas
iret
bound
or
into
push
cmp
js
xlat
pushf
int
adc
adc
xor
fs
std
adc
adc
inc
push
aam
sub
dec
inc
cmp
repz
arpl
mov
or
insl
jne
pop
mov
lock
cmpsl
fisttpll
mov
or
sbb
movsl
in
incl
adc
ss
inc
dec
pop
fnstenv
insb
jo
add
fiaddl
xor
xchg
movsb
bnd
adc
bound
xor
icebp
ljmp
lods
mov
into
inc
jnp
mov
and
sbb
movsl
add
mov
dec
loop
mov
sub
lods
mov
dec
sbb
cmp
cwtl
sarb
loop
mov
xchg
pop
sbb
sub
pusha
jmp
out
adc
cmp
inc
int
daa
push
lea
and
loope
xchg
xchg
xchg
sub
inc
cmp
xor
imul
fdivrl
cmp
xchg
push
idiv
fndisi(8087
sub
rclb
inc
mov
and
jg
repnz
xor
dec
mov
test
addr16
rcrb
sub
nop
push
push
jg
sti
pop
mov
scas
outsb
int
leave
mov
push
jp
es
popa
xor
xchg
push
icebp
ret
js
push
add
pop
stc
cli
data16
gs
sti
xlat
xorl
mov
mov
leave
nop
rcll
and
jmp
sub
pop
mov
lret
lret
adc
dec
mov
insl
jge
cmpsb
jno
std
fs
cld
insl
xchg
and
adc
push
push
lock
jl
jecxz
inc
sub
shlb
into
movsl
and
sub
mov
scas
dec
or
aad
xor
pop
sbb
imul
daa
or
iret
movsl
jbe
xchg
sub
stos
mov
enter
mov
out
mov
or
cli
mov
pop
cltd
mov
int3
arpl
push
nop
ja
and
out
iret
mov
sbb
sbb
push
mov
es
mov
das
mov
inc
clc
mov
inc
push
xchg
aam
negb
dec
into
and
insb
dec
jns
add
fbstp
scas
fcmovbe
dec
jmp
mov
aad
lcall
xchg
aaa
pop
cmp
imull
fdivrl
fisttpll
push
xchg
push
cmp
out
inc
push
fldcw
and
add
push
std
mov
xlat
pop
outsl
dec
ret
nop
xor
mov
adc
cmpsb
adc
dec
rorl
sub
ja
adc
mov
and
lock
imul
not
jecxz
or
sahf
push
and
fisttps
mov
inc
dec
inc
in
dec
cld
and
mov
js
out
inc
incl
stos
ss
mov
lods
adc
jo
and
cmp
shlb
add
data16
sub
and
jnp
xor
sahf
cmc
cmc
sub
push
mov
clc
jmp
add
sti
pop
and
imul
pop
ljmp
and
stos
push
mov
movsl
mov
repnz
ret
ljmp
pop
adc
js
cli
dec
scas
sarl
fs
mov
repnz
sbb
jae
das
or
stc
pop
and
popa
jb
hlt
jmp
pop
cltd
ss
dec
gs
mov
adc
shl
popa
scas
lock
cmp
sbb
and
lret
pop
or
addb
jp
mov
add
int
push
outsb
in
pop
ds
testb
inc
std
inc
lods
stc
and
cmp
xchg
fs
bound
js
inc
ror
sub
mov
cmp
es
daa
stos
movups
repz
adcb
stos
jbe
fs
mov
xor
push
fwait
dec
jo
mov
in
jbe
movsl
div
cmp
pop
loope
push
data16
cmc
add
mov
outsl
aam
std
es
or
dec
mov
lret
jb
sub
pop
testl
inc
cltd
aaa
sub
inc
push
cmpsl
loope
hlt
push
lds
push
fidivrs
xchg
ret
cmp
pushf
inc
xchg
loopne
sub
sarl
ficompl
pop
jne
sbb
clc
cmpsb
insl
fldcw
sbb
mov
xchg
js
andb
sbb
bound
or
cmp
fsub
mov
clc
fidivs
scas
enter
jmp
mov
out
movsb
mov
mov
dec
xchg
add
cs
mov
adc
pop
xchg
pop
hlt
out
cmp
adc
ret
or
add
lahf
pop
push
inc
xchg
add
je
stos
pushf
pop
int3
adc
mov
inc
inc
adc
scas
cmc
iret
jmp
mov
push
xchg
jae
sub
inc
lret
add
out
xchg
lods
adc
push
sbb
loop
inc
mov
pop
add
jae
mov
mov
or
inc
outsb
add
out
mov
cltd
cmp
int
stos
mov
mov
and
mov
sbb
sub
das
lahf
addr16
or
hlt
mov
in
lds
daa
or
flds
in
sub
push
popa
and
fnstcw
scas
adc
jb
dec
repz
les
mov
push
dec
ja
xchg
mov
xchg
mov
cmp
call
in
dec
dec
mov
out
sub
sbb
mov
inc
pop
mov
mov
jge
popa
or
jg
stos
jge
outsb
mov
xor
or
mov
das
pop
ja
test
sbb
jg
and
arpl
push
xchg
xor
sbb
insb
nop
ljmp
lods
inc
test
cwtl
out
pop
sbb
xlat
push
mov
pop
xor
jb
jmp
sti
in
cmp
push
dec
dec
mov
push
dec
aad
push
sub
jge
sub
out
repnz
cmc
dec
jg
int3
sarb
loop
or
cld
cmp
adc
jle
or
pop
jge
inc
adc
fisubrl
adc
jnp
cwtl
int
push
mov
arpl
jp
sub
sub
dec
sub
fwait
and
es
jg
cwtl
int3
jo
int
mov
repnz
xor
jns
repnz
mov
out
inc
je
or
inc
shrb
pop
cmp
scas
insl
out
outsl
lds
pop
loope
fists
xchg
fs
dec
or
fsubs
xchg
sbb
push
sar
cwtl
adc
popa
xor
xor
sub
sbb
push
fsts
mov
sahf
pop
or
jne
xchg
divl
fists
jle
scas
mov
push
insb
xor
inc
sbb
pop
lods
sahf
push
repz
in
movsl
mov
rorb
lock
fcmovnbe
push
jae
aad
in
int
inc
mov
outsb
pop
or
cli
lods
jo
cmp
xor
je
pop
or
pop
add
sub
pop
movsb
fidivrl
mov
pusha
dec
es
jne
mov
mov
xlat
xlat
jecxz
mov
sti
xchg
nop
ss
mov
jmp
out
mov
cmp
push
adcl
mov
in
test
jg
cltd
xor
dec
xchg
cmp
les
push
stc
lds
out
jne
sbbl
int
ds
lahf
and
pop
pop
fcoms
cmp
shll
sub
pop
imul
in
dec
xorl
dec
test
mov
fsubrs
cmp
mov
pusha
cmp
cmp
aam
sub
iret
add
adcb
pushf
pusha
mov
cmc
xlat
and
xchg
dec
bsf
xchg
jg
insb
or
jb
sub
xor
imul
pop
iret
shrl
sub
ljmp
jmp
xchg
stos
push
inc
pop
xor
sub
or
cmp
in
lea
pop
ss
dec
push
xor
pop
jmp
imul
adc
lock
sub
jp
pushf
gs
dec
or
xchg
mov
shlb
mov
rcrb
pusha
jge
movsb
lahf
pop
test
xchg
rorb
icebp
xor
inc
test
mov
xor
int3
mov
cltd
xchg
shll
mov
push
push
lcall
fucomip
enter
sub
sub
adc
pop
or
scas
frstor
mov
imul
ljmp
push
xlat
dec
test
aam
js
add
sbb
sub
fidivl
jne
gs
mov
and
shrb
test
jp
lods
mov
or
mov
fistps
cmp
mov
mov
xor
lret
lcall
cld
jb
push
pushf
ret
test
testb
jb
and
and
adc
lds
xor
js
mov
cld
shl
decb
dec
mov
out
inc
mov
ljmp
mov
dec
xchg
test
or
arpl
ja
test
xor
pop
stos
mov
in
mov
sbb
add
shl
dec
mov
mov
mov
and
sub
jne
shrl
sbb
and
sahf
es
sbb
or
repnz
in
sarb
lret
daa
or
cltd
mov
js
test
inc
cld
call
lcall
fcomps
ljmp
iret
mov
mov
xchg
arpl
adc
ret
movsb
inc
pop
add
mov
xchg
movsl
and
ficoms
pop
add
jb
cmp
cwtl
ss
xchg
sub
test
lds
lods
lock
sbb
cli
pop
je
hlt
loop
outsl
push
pop
test
aaa
popf
aas
xchg
inc
repnz
jle
pusha
pop
mov
add
scas
call
leave
lds
int
mov
insl
mov
repnz
push
in
lret
xor
pop
fwait
ljmp
mov
fcompl
and
test
mov
fwait
push
jnp
mov
mov
iret
xlat
ss
dec
push
mov
xchg
mov
leave
mov
push
rcrb
lret
aas
cli
push
testl
and
or
push
cwtl
sbb
xor
push
fwait
pop
ret
lds
mov
inc
ss
in
loop
outsb
sub
adc
ds
lods
subl
les
jns
or
add
add
dec
insl
loop
jno
inc
dec
in
pop
cli
std
or
out
les
sub
into
cmpsl
add
adc
cmp
insl
mov
mov
xor
popa
int
stc
add
sub
fcmovnb
mov
add
pop
in
aas
mov
sbb
dec
js
aaa
and
cmp
addr16
sti
push
sbb
inc
cs
sbb
lret
push
sub
sbb
jmp
xchg
adc
loopne
aam
int
mov
mov
mov
mov
fimuls
jg
in
arpl
lahf
push
pop
cmp
dec
jge
arpl
in
js
lea
sbb
cmpsb
adc
cwtl
push
fs
lret
mov
dec
push
repz
movsl
mov
mov
push
inc
pop
mov
inc
icebp
subl
mov
add
cmpsb
lock
or
add
in
mov
push
rol
mov
pop
and
mov
jb
movsb
out
fistps
and
stc
test
jge
xchg
inc
hlt
stos
cwtl
dec
push
call
pop
scas
push
pop
push
cmp
add
dec
jmp
imul
cmc
mov
cmc
icebp
cmpsl
jns
lods
ljmp
jne
loope
and
jo
in
test
jge
sub
fiaddl
push
sti
sarw
ss
cs
mov
and
mov
pop
iret
test
sbb
sub
in
and
xchg
mov
imul
sub
xchg
cmp
sbbl
dec
lcall
sub
gs
cwtl
mov
shlb
adc
push
cli
mov
cwtl
jp
scas
dec
stos
movsl
dec
mov
shll
gs
mov
mov
enter
test
mov
pushf
add
sub
cmp
lcall
std
jno
arpl
bound
jo
shll
pop
cmp
cmpsb
fdecstp
jmp
sahf
xor
jbe
repz
cmpl
pop
cmc
dec
sahf
clc
mov
addl
or
or
mov
clc
jge
test
adc
mov
cmc
fdivrs
pop
cmp
dec
mov
bound
xchg
in
inc
mov
aam
sub
outsb
jge
or
dec
xchg
movsb
jle
shrb
push
xchg
xchg
jae
nop
adc
add
data16
lds
outsl
lcall
ficoml
test
stos
jl
sbb
je
jmp
pusha
mov
add
xchg
jae
andb
gs
mov
xchg
mov
in
out
sub
add
sti
cwtl
mov
sbb
mov
mov
adc
outsb
je
xor
test
faddl
xor
mov
sbb
jp
pop
sahf
xor
adc
add
int3
cli
out
push
rclb
push
jge
stos
fdivr
sbb
insl
or
pop
cmp
dec
popf
dec
xchg
loope
fldt
fucom
add
sub
aam
push
roll
mov
xchg
loop
sarl
mov
es
test
les
in
fwait
or
cwtd
push
cli
movsl
mov
mov
pop
into
pusha
pop
arpl
and
pop
cmc
jge
cwtl
adc
adc
outsb
mov
inc
and
jp
daa
push
adc
loope
dec
aam
pop
push
adc
adc
movsl
iret
jnp
leave
sbb
xchg
mov
cmp
adc
sub
fcmovne
arpl
lock
mov
sub
rcrl
mov
sub
test
lods
test
jmp
test
jae
repnz
or
jp
mov
mov
mov
in
xchg
js
out
sbb
mov
jmp
out
sub
pop
lock
je
jo
nop
dec
or
enter
xchg
pop
pop
cld
call
xlat
cld
xchg
xchg
icebp
stos
jl
mov
xor
cwtl
cmpsb
cmpsb
or
inc
inc
aas
das
dec
push
mov
add
pop
js
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
lods
inc
adc
pop
bound
pop
bound
add
repnz
clc
mov
cwtl
xorb
cltd
loope
hlt
add
out
insl
xlat
and
insl
add
pop
sub
xor
cmp
sbb
mov
xchg
movsb
dec
cmp
adc
pop
out
mov
movsb
test
xor
sbb
enter
mov
push
into
push
or
nop
and
flds
fistpll
out
push
ret
push
fidivl
imul
ret
jnp
push
xchg
adc
jno
and
icebp
ret
aad
repz
adc
dec
jae
repz
jb
outsb
xchg
enter
out
push
mov
push
outsb
jp
xchg
in
test
inc
sbb
lods
adc
add
ss
jecxz
dec
xor
jb
sub
insb
popf
mov
sbb
jnp
inc
or
iret
or
mov
test
jb
inc
or
inc
xor
xchg
fidivrs
ds
push
fidivs
fiadds
add
ret
sbb
test
fimuls
dec
push
or
push
incb
leave
cld
repnz
cmp
add
inc
jns
fldl
mov
jne
sti
iret
push
pushf
insl
fildl
loop
ljmp
push
inc
nop
cmpb
into
inc
rcll
push
andl
sbb
stos
xchg
adc
mov
dec
lds
fwait
jae
push
fcomps
ret
scas
dec
inc
adc
sub
shl
push
xchg
pop
dec
scas
sbb
mov
mov
push
and
and
cld
sub
sahf
pop
xor
sub
add
mov
fcoml
mov
popf
test
mov
adcl
inc
push
test
movsb
stos
clc
ficoms
les
mov
nop
fsts
daa
sub
pusha
sbb
pop
jle
xor
mov
mov
out
mov
negl
xor
inc
push
mov
pop
cli
lahf
mov
lods
add
xchg
sbb
xchg
push
stc
push
sahf
fstpt
mov
push
cld
cmc
xorl
mov
cmp
arpl
mov
nop
sahf
lock
gs
inc
inc
mov
into
lods
insb
sahf
stos
ljmp
sub
push
inc
sbb
and
xchg
test
ret
and
xchg
mov
into
jl
jo
cmp
pushf
cmp
xchg
lret
inc
jno
jp
cwtl
in
lds
cmp
push
sub
inc
xchg
or
push
inc
adc
mov
hlt
mov
pop
jge
data16
xchg
pop
xlat
cmp
inc
cld
shlb
lock
adc
testl
lret
xchg
jb
jnp
scas
push
xchg
jecxz
adc
sbb
sbb
mov
add
mov
lods
in
stos
cmpsb
pop
das
mov
fstpt
adc
push
mov
xchg
jb
rorb
ret
pop
pusha
addl
xlat
rcrb
hlt
nop
or
out
leave
popf
icebp
mov
and
insl
daa
lods
fmull
sbb
jge
inc
ss
insb
sbb
jmp
adc
ret
hlt
lret
movsb
test
jae
inc
ret
mov
inc
jbe
loopne
cmp
hlt
xchg
push
dec
and
in
loop
aas
insb
cmpsl
and
xchg
pushf
out
pop
popf
popf
das
data16
inc
loopne
and
mov
movsb
push
clc
outsl
xchg
cmp
mov
sub
je
xor
xlat
mov
scas
insb
sahf
fists
xchg
push
into
addr16
lahf
inc
jno
xor
frstor
xor
arpl
xlat
pushf
cmp
or
xor
adcb
cmp
pop
rcl
push
push
lock
cmp
sub
add
int
jns
dec
sub
fsub
jmp
lea
sub
sub
cmc
sbb
into
icebp
mov
inc
addr16
pop
stos
mov
xchg
mov
push
orl
loope
mov
push
stos
jae
leave
pop
insb
mov
imul
sub
sbb
xchg
sbb
test
mov
adc
pushf
test
testb
push
imul
icebp
or
inc
test
jo
loope
dec
push
or
cmp
pop
inc
stos
addr16
test
incb
jno
and
mov
gs
popa
adcl
adc
push
testl
jns
adc
pusha
mov
subb
adc
sbb
push
pop
loope
pop
pushl
jmp
jecxz
sbb
aam
and
out
sub
mov
push
push
roll
cmp
out
or
nop
dec
rcll
imul
ficoml
mov
mov
pop
loope
jl
xchg
das
push
out
sar
mov
xchg
xchg
push
mov
inc
sbb
out
mov
xchg
mov
sbb
cmpsb
mov
movsb
sarl
xor
xchg
ja
and
mov
outsb
cli
sub
xchg
mov
and
popf
idivl
and
mov
shll
pusha
push
aaa
push
in
adc
cltd
addr16
je
bound
int
clts
rep
mov
fisubl
test
jne
in
and
pop
inc
mov
push
cmp
loope
and
int
cmp
mov
lret
aaa
out
mov
movsl
fsubrs
sub
int3
rcrb
pop
xchg
or
jae
cmpsb
mov
insb
xchg
jne
xchg
fsts
xor
push
pop
hlt
and
mov
outsl
pop
push
out
loope
movsb
fnstcw
ljmp
in
leave
les
int3
lds
ljmp
inc
fidivrs
dec
pop
mov
push
mov
cwtl
mov
fsqrt
and
pop
dec
ja
mov
pop
xchg
xlat
popf
sub
push
jg
mov
movsb
shll
or
mov
rclb
out
inc
into
shll
inc
cmp
adc
les
fisttpll
or
push
fcomp
inc
gs
push
mov
mov
jnp
into
sbb
or
jecxz
jp
stc
pop
rorb
pop
repz
sbb
arpl
je
mov
stc
loope
stos
xor
icebp
xchg
jo
or
adc
data16
insb
mov
nop
addl
jg
sbb
dec
pop
cmp
lahf
ljmp
and
jmp
mov
dec
adc
pop
ss
mov
loop
xor
jmp
test
rcl
mov
gs
mov
sub
les
cmp
lret
iret
push
test
inc
out
ljmp
sbb
int
mov
scas
or
fldt
sti
jns
jo
pusha
inc
iret
push
rcll
idivb
sbb
int3
fmuls
outsb
and
mov
mov
fbld
xor
xchg
or
adc
inc
jle
sahf
xchg
rcr
subl
sbb
mov
cmp
mov
mov
jmp
fistps
mov
in
nop
xchg
pop
loope
pop
enter
int3
fimuls
or
aaa
outsl
and
jg
stc
adc
lods
jnp
mov
jb
pusha
or
sub
jmp
and
icebp
push
test
push
cmpsb
sub
mov
add
xchg
jle
icebp
mov
adc
adc
and
arpl
dec
mov
jnp
fcoms
pop
pop
orl
xchg
es
xor
sub
mov
lods
lods
xor
push
sti
data16
pop
out
fsts
mov
outsb
fstps
insb
jnp
push
jp
mov
jne
repnz
adc
addr16
xor
push
pop
cli
mov
stos
xchg
cmc
arpl
mov
pop
out
ljmp
fcomps
jae
mov
mov
and
push
add
std
sahf
push
jne
cmp
xchg
jne
adc
cmp
movsl
xor
pop
not
pop
or
sbb
or
leave
sub
inc
inc
sbb
jno
addr16
dec
and
das
fidivrs
inc
pop
fisubl
sub
cmp
test
or
test
add
in
mov
in
mov
stos
sub
aam
lret
push
cs
cmpsb
loopne
sarl
mov
mov
aas
es
call
repnz
lahf
mov
cmp
and
das
and
pop
out
fsubrl
repz
insl
and
into
test
lahf
mov
inc
inc
jmp
mov
mov
out
xorl
je
dec
mov
jno
jbe
sti
xor
mov
lcall
cld
inc
push
bound
inc
sub
leavew
and
dec
lcall
arpl
xchg
std
pop
or
xchg
in
mov
not
das
in
aam
mov
mov
xchg
outsl
and
jns
mov
je
mov
adc
enter
rorb
push
adc
fs
aas
adc
cmpsl
dec
jl
fstp
lret
loopne
data16
cmpb
sub
mov
inc
aas
dec
or
push
ret
jmp
jle
jno
aam
test
loopne
mov
and
mov
fcmovb
popa
cmpsb
sbb
and
push
push
clc
sub
dec
cld
adc
sub
mov
lock
push
pop
jle
xlat
rcr
iret
jbe
fdivrs
dec
nop
push
jb,pn
into
xor
cwtl
mov
xlat
mov
and
outsb
fidivrl
pop
outsb
loopne
cmp
adc
lock
test
sub
sub
mov
pusha
fisubrs
mov
xchg
dec
add
stos
out
out
mov
fsubrs
aaa
dec
dec
int3
outsb
int3
and
push
loopne
add
psubsw
sti
cwtl
and
dec
out
lea
sti
pop
ja
data16
pop
aam
mov
and
ret
xlat
lods
pop
push
push
jg
push
insl
aad
inc
sbb
or
or
in
fcmovne
iret
insb
jnp
inc
movsl
sbb
sub
lahf
ss
dec
ficoml
rolb
pop
pop
leave
lods
jns
fsubs
sbb
rdmsr
xchg
outsb
sub
int
int
xchg
dec
inc
pushf
scas
cmp
data16
mov
dec
push
out
int
inc
int3
fstps
xchg
sbb
icebp
mov
cmp
dec
scas
not
ret
xchg
es
or
sub
lds
sub
daa
std
movsl
dec
mov
mov
lods
sub
loopne
pushf
jne
stos
movsl
lahf
dec
stc
jle
adc
orl
loopne
xor
mov
mov
or
and
leave
sub
adc
fxam
sub
lea
loope
inc
sbb
cmp
xor
cli
sbb
dec
pop
ficomps
or
roll
inc
aad
outsb
fwait
jle
mov
sti
dec
xor
xor
dec
sbb
aad
mov
cld
fyl2x
and
pop
jnp
imul
push
repz
adc
jno
mov
jno
jne
imul
and
out
lea
adc
push
mov
fnstcw
stc
xchg
inc
fsincos
test
and
ficoms
sbb
jg
xchg
mov
das
push
push
fisubrs
adc
adc
int
sbb
dec
and
loopne
rorb
std
movsb
adc
lcall
cld
sub
outsl
gs
in
mov
push
mov
in
sub
sbb
cmp
test
stos
cmc
dec
fidivs
cmp
out
jecxz
pop
jns
mov
mov
addb
pop
xor
xor
leave
rolb
cli
fiaddl
sbb
scas
inc
fsubr
fidivl
fwait
cmp
int
mov
divl
aad
out
js
cmp
orl
lds
mov
lret
or
or
jo
lea
add
inc
xchg
movsb
test
and
imul
in
inc
iret
fbstp
movsb
adc
cmpsb
clc
push
or
push
xlat
push
lahf
int3
movsb
out
insb
sub
popf
daa
jle
int3
aam
inc
xor
jge
inc
pop
sbbb
jbe
stos
cmp
jmp
and
call
mov
jnp
inc
aas
pusha
jns
btr
shl
into
mov
xor
pop
fsubrp
cmpsb
sti
outsl
and
or
add
push
stos
mov
mov
daa
pop
out
mov
mov
sahf
cmp
mov
xchg
ss
popa
ret
les
pop
out
aaa
scas
jns
movsb
pop
sarl
cs
mov
dec
add
dec
push
jns
lahf
bound
push
daa
outsb
sub
pop
adc
inc
jecxz
cwtl
enter
test
mov
ret
cmp
push
lock
add
inc
and
in
or
test
jne
jo
adc
jbe
or
testl
xor
enter
xor
repz
cmp
mov
lret
push
xor
jecxz
jmp
fidivs
imul
sbb
sbb
stos
test
mov
mov
les
je
xor
xor
cltd
lahf
cli
dec
ja
movsb
movsl
lea
fdivs
push
mov
addr16
jnp
pop
add
fsubrs
dec
xor
mov
pop
pop
lahf
fists
repz
insl
iret
mov
adc
lcall
mov
fstpt
movsl
aas
cmp
faddl
cmp
inc
sbb
stc
mov
xchg
gs
sti
cmp
shlb
or
jbe
xchg
leave
xchg
add
xor
loope
push
xor
adc
mov
dec
lret
mov
inc
pop
in
dec
xor
push
aad
xlat
sti
or
pmulhuw
sbb
mov
jle
out
out
ds
ja
push
dec
nop
orb
pop
stc
pop
lods
sti
mov
xchg
fwait
xchg
mov
xchg
lcall
push
sbb
inc
nop
jle
or
dec
push
je
pushf
cltd
outsl
mov
jmp
sub
jb
cld
push
imul
pop
inc
xorl
sbb
lds
pushl
mov
mov
lock
je
ljmp
lret
js
and
mov
mov
scas
sarl
fcomp
cs
or
hlt
cmc
inc
and
jmp
and
sub
aam
adc
sub
arpl
or
jbe
pusha
pushf
push
ret
and
jb
pop
add
incb
pop
xor
mov
jae
ds
jecxz
dec
xchg
lea
fs
lods
cmc
sti
adc
inc
cwtl
jp
test
mov
xchg
not
notb
sub
add
inc
jno
and
xchg
sbb
int3
push
ss
sbb
rol
pusha
inc
out
fs
add
mov
and
sbb
fwait
sbb
into
mov
push
sbb
cmp
mov
push
adc
call
pop
cmp
inc
xchg
dec
jge
testl
stc
mov
arpl
pusha
cwtl
xor
xor
outsl
test
frstor
sbb
sub
pop
pop
or
jns
xchg
repz
sub
push
sbb
fistpll
cmp
jl
ljmp
cld
out
lret
mov
push
push
push
jns
xchg
lahf
sub
fs
push
in
pop
daa
lods
lretw
inc
dec
fstpt
xor
out
rcrl
inc
outsl
repnz
sahf
sahf
shll
mov
or
dec
fldt
loopne
stos
sub
daa
dec
inc
pop
add
inc
imul
jge
pop
fwait
push
aas
mov
cmp
ljmp
xlat
xor
xchg
lea
scas
enter
scas
lahf
pop
repz
xchg
cwtl
push
and
cli
mov
adc
lret
stc
je
fs
jne
mov
sti
fistps
add
adc
popa
fimuls
lcall
add
sbb
pop
outsb
add
mov
xlat
add
push
dec
sti
sbb
mov
push
leave
pop
sbb
add
ja
push
xchg
and
in
pop
fnstsw
popa
loope
inc
mov
push
mov
sub
push
xor
cmp
insb
lcall
rcrb
andb
xchg
lahf
outsb
out
pop
mov
xchg
gs
out
sbb
int
daa
dec
inc
push
cmp
sub
ss
sub
add
cs
in
cmp
jmp
movsb
and
shll
outsb
adc
inc
jp
sahf
std
adc
pop
sahf
mov
cmpsb
in
call
mov
xor
push
inc
mov
in
das
mov
cmp
lahf
dec
mov
pop
mov
sbb
sahf
in
xchg
push
notl
into
add
int
dec
add
xchg
out
stos
fsts
rcrb
into
and
loopne
jnp
and
or
and
mov
leave
dec
ljmp
in
shr
dec
dec
lahf
and
mov
add
xchg
xchg
inc
xchg
test
outsl
push
ja
and
je
jbe
fldt
flds
repnz
out
pop
cli
pop
mov
and
imul
loope
lahf
ret
pop
test
or
pop
pop
incb
pop
stc
push
outsl
out
sub
js
jns
cmp
gs
test
pop
cli
cli
inc
mov
sti
outsb
inc
cld
rcll
sub
sub
sub
aaa
mov
outsb
arpl
ds
fisttpll
sbb
mov
testb
push
push
adc
leave
leave
or
lahf
push
in
outsl
push
sub
dec
js
mov
push
mov
inc
sub
loopne
push
mov
pop
sub
frstor
out
bound
add
notl
xor
test
gs
mov
imul
test
mull
sar
repz
pushl
cmpsb
jmp
sarw
cmp
sub
lret
push
test
sub
enter
imul
mov
adc
jbe
test
and
aam
jbe
clc
cmp
insb
je
stc
rcl
cwtl
test
mov
jno
lods
lods
cmp
add
shrl
cltd
inc
arpl
jb
fdivp
movsl
test
pushl
mov
out
adc
rcl
xchg
cld
ds
xchg
aam
test
or
jne
sbb
mov
iret
rcrl
into
xor
enter
data16
gs
xor
scas
scas
out
inc
incl
jmp
or
imul
test
or
test
dec
sub
sub
xor
xor
or
fwait
aad
int
jg
subb
sub
mov
push
mov
jge
sti
das
push
int3
in
cmpsl
test
ret
ret
xchg
pop
cmp
movsl
and
mov
mov
shll
jecxz
mov
inc
or
outsl
xchg
into
push
je
int
ficoml
test
stc
test
xor
cmp
xchg
bound
fwait
mov
mov
cmp
jmp
sub
pop
pushf
nop
enter
adc
and
dec
xchg
outsb
test
fcmove
pop
mov
pop
sub
aas
rcrb
mov
into
roll
loop
xor
in
or
mov
les
push
outsl
dec
push
imul
lock
pop
repnz
stc
mov
sahf
lods
js
xor
pop
add
jne
ret
hlt
mov
cltd
out
lods
ljmp
fcmovnbe
push
gs
dec
mov
jnp
inc
out
xchg
rol
fs
fidivs
add
lock
mov
sub
ret
addl
sub
adc
stos
std
call
pop
xor
out
lfs
bound
sub
xchg
pop
fucom
pop
jb
push
or
xchg
pop
das
cmp
lock
jo
pop
data16
add
test
pop
int
mov
xchg
push
out
int3
mov
int
mov
mov
fiadds
mov
in
and
pop
xor
in
mov
mov
dec
add
pop
mov
or
mov
mov
scas
inc
sub
mov
cmp
icebp
inc
pop
add
sub
jmp
cmp
pop
cmp
or
mov
fdivs
pushf
mov
scas
idivl
lock
in
and
cmp
add
lcall
cltd
mov
inc
pop
jge
inc
xchg
test
orb
jne
pop
jmp
push
mov
dec
jne
xor
pop
sbb
stos
sub
clc
lds
push
fnstcw
int3
rolb
mov
inc
scas
sub
imul
lods
adc
adc
adc
lret
and
sbb
loop
in
jle
add
das
and
scas
aas
aaa
sub
leave
lahf
es
shr
ret
leave
arpl
lret
add
imul
cmp
and
out
lock
repnz
fadds
repnz
mov
pop
popf
pop
push
cmc
cmp
js
jg
mov
push
aaa
cli
dec
mov
xlat
out
sti
jecxz
aam
fs
mov
faddl
dec
pop
and
push
push
repz
cmp
mov
aaa
pop
xor
sub
cmp
les
sub
sahf
sub
sbb
jo
push
adc
dec
cmp
mov
or
dec
jge
jno
ljmp
and
loopne
xchg
jno
aaa
outsb
xchg
popf
test
sbb
sbb
mov
stc
imul
mov
pop
addr16
adc
addr16
repnz
fstpt
add
jl
mov
cmp
dec
mov
ficoms
xorl
or
adc
pop
adc
jnp
in
call
loopne
cmpsb
push
pop
data16
loope
push
shlb
push
xor
pop
mov
lret
loope
int
mov
lods
in
ds
test
leave
notl
add
sub
clc
out
push
push
daa
cmp
bound
data16
rcrb
es
push
add
rcll
scas
ss
mov
cmp
xlat
aaa
jle
mov
in
mov
subl
inc
andb
ficoms
mov
xchg
sub
dec
dec
repz
lcall
xchg
cmp
pop
sub
pop
mov
fstpt
sub
push
push
popf
imul
mov
popa
das
xor
test
rclb
loope
xchg
movsl
aad
push
xor
test
pop
sti
loop
cwtl
push
cmp
and
nop
adc
sbb
fstps
ja
push
mov
call
lock
dec
dec
imul
dec
lock
cmp
aam
insl
aas
dec
xchg
jmp
xchg
sti
and
ffree
push
icebp
push
or
dec
iret
pop
repz
jno
or
sbb
inc
cmp
fstpt
out
jns
mov
fisubl
scas
xchg
fildl
stos
jmp
jmp
loopne
fcomip
inc
add
push
imul
pop
loop
lcall
dec
dec
add
and
sub
mov
in
cmpsb
jle
stos
pop
and
mov
movsl
xlat
xor
ret
xor
rolb
aam
inc
pop
cmp
adc
xchg
fcoml
lods
and
nop
mov
cmp
dec
or
jmp
loopne
jbe
sahf
insl
mov
push
mov
rolb
push
dec
mov
shl
pop
add
add
addr16
iret
stc
fs
in
fnstenv
xor
bnd
sbb
sub
lods
xchg
add
inc
insb
outsb
adc
xchg
loop
and
dec
mov
aad
push
xchg
in
jg
or
jnp
pop
cmc
in
mov
push
or
iret
sbb
ljmp
ss
mov
les
std
sbb
ret
popa
je
jb
lock
ret
call
cmp
mov
mov
imul
fldt
lret
sub
int
imul
xor
hlt
sbb
add
adc
adc
cs
ret
cli
clc
sub
xor
fnstsw
test
add
inc
imul
decb
xchg
mov
adc
pusha
cmpsl
xchg
push
inc
out
or
mov
rcrl
fwait
scas
pop
fsubr
mov
loop
insb
cs
imul
and
push
and
fwait
mov
add
pop
leave
sahf
insb
mov
cmp
imul
mov
push
test
mov
andb
cwtl
pop
dec
mov
and
jecxz
mov
dec
sbb
sub
dec
adcl
lock
dec
xor
rorl
mov
cltd
popa
jne
lods
lahf
push
movb
in
fsubrs
divb
movsb
loopne
and
inc
jl
pushf
and
rol
loope
cld
cmp
xor
in
cmp
loop
gs
imul
mov
movsl
sbb
cmp
cmc
insl
jno
repz
sbb
sahf
icebp
shll
in
xchg
insb
js
in
movsb
movsb
inc
in
scas
cmp
test
fstl
in
xchg
adc
enter
mov
pop
push
stos
ja
jb
aaa
bnd
inc
xor
test
mov
dec
gs
xor
out
lahf
sub
lea
fcoml
adc
cmpsb
int
add
pop
push
addl
inc
popf
frstor
mov
push
loope
test
xchg
ret
outsb
adc
lret
ror
mull
test
rclb
mov
jae
stos
addr16
add
sbb
sahf
adc
leave
hlt
sarb
cmp
or
xchg
addr16
mov
sub
ljmp
pop
bnd
mov
fdivrl
cmp
or
push
imul
into
or
push
jg
cmc
push
push
mov
pop
cmpsb
inc
pand
aad
mov
lods
aam
xchg
test
aaa
jne
sub
enter
and
mov
in
aad
es
test
ret
test
icebp
jnp
dec
sbb
movl
or
incl
fisubs
sub
jecxz
adc
dec
leave
sar
adc
add
jge
add
add
jl
mov
push
je
je
enter
fwait
mov
popw
mov
push
hlt
push
leave
mov
xchg
mov
jecxz
mov
insb
mov
and
insl
mov
pop
adc
adc
sbb
sbb
imulb
push
cmp
add
sub
sub
popf
stos
cmp
sbb
daa
sbb
jns
gs
or
jbe
cs
dec
inc
lods
mov
repnz
and
push
fcomps
testl
shlb
mov
in
push
dec
lea
mov
inc
mov
dec
imul
cli
jb
ficoml
sbb
pusha
bound
cmpsb
mov
mov
fwait
rolb
cmpsb
dec
xchg
testl
pop
movsb
cmp
mov
xchg
popa
pop
cmovns
dec
jl,pt
data16
imul
mov
imul
jns
out
and
cpuid
xor
push
cmpl
jg
mov
gs
add
shlb
inc
mov
fs
cmp
das
test
xchg
jg
std
in
loope
in
faddp
in
jns
sub
test
decl
push
push
jno
xor
cld
or
insb
int3
cmc
scas
mov
push
gs
sarb
pushl
movsb
dec
repnz
fwait
sub
sbb
int
ss
mov
test
popf
adc
fistpl
sbb
inc
std
lcall
xor
mov
push
pusha
sub
ret
jg
movsb
sbb
repnz
leave
push
inc
sub
mov
adc
daa
xchg
mov
int3
stos
mov
je
xchg
or
icebp
jge
dec
test
push
mov
jbe
push
push
or
pop
cmp
into
cltd
mov
push
sub
mov
sbb
dec
repz
or
aam
outsb
sub
mov
repnz
std
clc
negl
and
sti
jge
int
lret
and
sti
xor
or
lds
lahf
pop
jno
pop
push
jge
mov
roll
cmp
mov
popf
orl
ja
stos
dec
aaa
pop
les
pop
in
dec
ljmp
movsb
outsl
xor
mov
pop
mov
arpl
add
lock
adc
or
lret
cmpsl
out
xchg
jle
fwait
movsb
fdiv
or
push
lods
sub
add
adc
sub
insl
pop
pop
push
imul
shr
sbb
gs
add
jne
adc
mov
outsb
xchg
call
xchg
into
ja
mov
sbb
mov
mov
sbb
xchg
sbb
scas
cltd
negb
xor
das
out
pop
pop
xchg
jmp
pop
hlt
orl
jnp
jl
and
sub
cmp
pop
dec
mov
jl
je
and
into
in
shlb
fcmovb
insl
mov
mov
xchg
mov
pop
fisttpl
push
sarb
ror
daa
mov
mov
cmc
xor
sub
movsb
icebp
push
sub
lods
cmp
test
out
cwtl
pusha
mov
or
push
inc
jbe
jno
nop
lds
lahf
dec
jbe
cmp
xor
aad
mov
dec
mov
push
sbb
sti
add
ret
sarl
call
lea
out
out
int
ljmp
xrelease
xor
adc
mov
and
mov
or
xorb
push
nop
jmp
ret
or
ja
pop
xor
scas
add
ds
in
dec
add
jae
mov
xor
fcoms
aas
push
cmp
pop
popf
int3
cltd
loopne
inc
xchg
ss
mov
rclb
lret
sahf
push
xchg
mov
jmp
push
popf
or
or
into
not
push
sub
mov
imul
xchg
loope
push
pop
cmp
jmp
movsb
gs
or
push
lods
jnp
out
mov
sbb
and
push
push
push
inc
add
inc
shll
enter
cli
pop
or
jmp
mov
scas
push
loopne
out
and
loop
jnp
mov
movsb
lret
cmp
cld
inc
cmp
pop
xchg
jmp
or
dec
mov
inc
mov
ret
mov
cmp
dec
xchg
or
mov
mov
in
sub
stc
push
loope
mov
push
lods
fidivs
or
mov
dec
in
icebp
stc
add
loope
mov
push
cmp
fcom
enter
xchg
mov
adcl
repz
mov
xor
sar
ficoml
pop
xor
fcompl
cmp
xor
mov
xchg
int3
out
and
xor
adc
xchg
or
push
sub
or
inc
ds
add
sbb
xor
lahf
and
or
jno
sub
movsb
enter
or
cmp
lds
ret
cmc
jbe
xchg
push
inc
add
jge
push
sub
insl
adc
or
inc
cli
push
cmp
repnz
je
dec
out
jnp
clc
in
cltd
jg
mov
mov
sub
in
sub
out
jmp
leave
sub
or
add
dec
xchg
inc
lock
jmp
fnstsw
insb
ljmpw
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
in
jg
sarb
cmp
adc
bound
testb
add
cmp
rclb
add
pop
faddl
subb
inc
push
mov
inc
inc
mov
out
shll
roll
add
xor
cmp
jmp
mov
icebp
leave
xchg
leave
inc
mov
pop
aas
stc
scas
in
push
les
loopne
and
xor
loope
cmp
inc
shll
or
insb
push
dec
jo
lcall
push
push
stc
rcrb
das
ds
pusha
testb
dec
outsb
sub
jno
sbb
fsubrl
or
rcr
in
mov
or
notl
lds
lock
mov
lret
jl
xchg
movb
or
mov
out
test
xchg
test
inc
leave
addr16
jge
xor
out
adc
or
fadd
shlb
iret
and
hlt
mov
mov
jmp
cwtl
sub
add
push
add
stos
or
xchg
inc
jne
jb
insb
xor
lock
sub
lock
push
xor
pop
aaa
repnz
inc
outsb
rolb
xchg
pop
cmpsb
out
jmp
dec
cwtl
inc
cmp
ss
xchg
sqrtps
push
push
jb
xlat
add
push
in
mov
push
enter
stos
imul
andl
jnp
dec
mov
adc
push
shlb
pop
pop
loope
test
adc
xchg
bound
inc
iret
repnz
cmp
loope
sub
aam
cli
sbb
cltd
data16
fwait
scas
xchg
push
push
testl
sbb
jle
pop
mov
push
mov
push
xchg
ret
mov
cwtl
ficomps
xor
addb
mov
outsl
inc
icebp
js
or
push
outsb
mov
xor
push
jb
jg
pusha
loop
pop
loop
adc
xchg
adcb
mov
clc
dec
sbb
in
lods
sar
andl
jg
insl
cltd
divb
idivl
push
push
ds
dec
xor
mov
push
xor
dec
popa
subl
mov
dec
lahf
jbe
mov
sub
inc
pop
mov
sbb
mov
xchg
aam
pop
mov
xchg
xchg
adc
push
loop
loope
clc
mov
sbb
ret
mov
mov
sar
jbe
and
dec
repz
loop
pop
ds
and
xlat
sbb
mov
icebp
out
test
outsl
out
mov
xor
test
xlat
out
push
imul
xor
lea
push
sub
aaa
inc
mov
sbb
sub
inc
or
mov
js
sub
xchg
pop
sub
add
std
iret
leave
xchg
cli
jl
xlat
outsb
mov
or
fnstenv
inc
lock
int
sbb
cltd
or
xchg
pop
cmp
lret
and
std
sub
dec
xchg
std
jle
es
loopne
sbb
icebp
xlat
test
lods
call
add
pop
sbb
fsub
ljmp
out
and
xlat
adc
dec
mov
mov
add
push
or
je
pop
xchg
lds
mov
mov
fnstenv
cwtl
dec
sahf
cltd
ret
xor
aad
fs
pushf
ret
inc
push
arpl
ret
shll
mov
and
or
movsl
lds
insb
hlt
cmp
into
mov
dec
clc
jbe
mov
add
imul
add
cmp
and
fisttps
scas
or
xchg
pop
add
scas
pop
testl
push
xchg
and
sarl
out
fisttpll
mov
xchg
fucom
fldenv
call
divb
fmuls
sbb
jge
xor
jne
cmp
aas
or
xchg
out
cmpsl
imul
hlt
in
and
je
pop
mov
jl
dec
jno
lcall
std
mov
add
leave
mov
add
push
jle
js
pop
sub
push
loope
lock
cmp
pop
ret
rorl
shlb
ja
adc
inc
int3
mov
lds
sarb
pop
pop
xchg
adc
mov
iret
dec
popf
mov
lods
push
xchg
das
mov
add
push
xor
aaa
dec
add
adc
pop
sub
inc
lods
push
arpl
mov
rolb
scas
mov
aad
jg
data16
sahf
adc
shlb
and
out
xchg
dec
pop
jmp
xchg
cmp
js
pop
aad
lcall
mov
sub
push
xor
rorb
jbe
movsl
dec
leave
and
imul
adc
decl
sub
jns
sub
outsb
repnz
xor
mov
hlt
pop
jbe
dec
loopne
fcmove
mov
pop
lret
fiaddl
mov
pop
js
js
xor
mov
mov
insl
xlat
dec
and
mov
xchg
push
push
sbb
fwait
mov
xchg
out
pop
adcb
mov
aad
push
outsl
fcom
or
jnp
adc
leave
pop
lret
popf
out
jp
fs
push
mov
sbb
inc
mov
ror
ljmp
push
mov
pop
pop
fsub
jns
inc
mov
mov
push
call
lret
notb
out
cli
pop
or
pop
nop
sbb
dec
inc
jle
andb
mov
jecxz
and
or
lods
jmp
lods
lahf
or
sbb
and
repz
dec
faddl
nopl
mov
js
lods
dec
and
or
repz
es
and
push
imul
xchg
fldl
push
push
dec
aad
adc
icebp
lret
gs
je,pt
test
sbb
aas
lcall
shrb
fsts
jmp
inc
loope
or
xchg
ret
inc
or
fs
push
scas
addl
mov
xchg
sti
adc
mov
ss
xor
iret
ja
iret
xor
pop
cmp
cmp
test
movsl
jecxz
xor
mov
inc
add
pushl
call
insl
aas
xlat
or
xchg
cwtl
cli
es
pop
adc
xor
or
cltd
mov
cmpsl
mov
jns
leave
lods
inc
or
xchg
mov
or
xor
or
mov
adc
scas
int3
add
jnp
ss
inc
mov
inc
iret
cmc
push
cld
test
mov
mov
xchg
jmp
sub
adc
mov
pop
xor
test
push
addr16
mov
jno
adc
xor
test
pop
xchg
dec
rcrb
mov
push
pop
jmp
popa
xchg
stos
dec
shrb
pop
in
cli
inc
xor
filds
sbb
in
adc
push
push
leave
push
add
rcl
stos
inc
mov
dec
scas
aam
xchg
xchg
ds
mov
lahf
arpl
xchg
xchg
xchg
mov
cs
xchg
pop
test
dec
loop
out
pop
push
sbb
mov
inc
ss
xlat
and
xor
test
dec
ja
sbb
add
add
ja
jns
lahf
push
sub
sarb
inc
inc
xchg
xor
add
pop
mov
jno
jmp
ret
xorl
xor
sti
cmpsb
shrb
mov
pop
xor
xor
push
jg
jo
sysenter
xlat
in
sbb
mov
cmp
inc
pop
and
push
add
jbe
pop
jns
fdivrl
mov
das
arpl
fsubr
aam
scas
rolb
mov
pushf
bnd
and
jne
dec
pop
addr16
jmp
sbb
pop
mov
insb
xor
repz
lret
insl
movsb
xchg
xchg
push
lea
lret
das
stc
or
js
fldcw
xchg
or
push
cmp
in
xor
inc
sub
pop
cmp
add
les
jecxz
mov
mov
jbe
loope
xchg
imul
sub
jo
repz
rcrb
cmp
adc
fstps
int
cltd
mov
fnstenv
push
xchg
xchg
or
xchg
aaa
das
outsb
fdivr
mov
mov
les
popa
push
mov
jae
mov
dec
pop
push
leave
notl
push
pushf
mov
push
jbe
cld
mov
fadd
lods
aaa
or
lea
push
inc
pop
lods
push
sub
push
cmpsl
faddl
mov
fs
fldt
mov
dec
cmp
rolb
xor
inc
xchg
mov
ss
es
addr16
pop
xchg
jbe
mov
xchg
mov
mov
movl
repnz
mov
subb
jge
cld
lret
xchg
jne
ss
scas
fildl
cmp
mov
inc
pushf
and
jne
popa
mov
int3
loope
adc
xchg
jl
cld
fisttpl
pop
insb
out
xor
add
sub
imul
mov
push
aad
repnz
std
mov
stc
add
dec
jmp
ds
popa
add
mov
repz
and
gs
mov
cmp
push
je
int
enter
fdivs
popl
pop
lods
add
out
insb
in
test
push
jnp
ja
mov
and
fisttpl
pop
and
xchg
loope
das
popf
insb
scas
inc
pop
jecxz
pop
dec
orl
cwtl
mov
fsts
dec
mov
mov
stos
jg
jecxz
rolb
mov
mov
jge
dec
push
leave
shl
ja
adc
xchg
cmpsl
adc
ret
and
jno,pn
push
dec
push
out
pushf
pop
sbb
data16
xor
cltd
sub
xor
lods
lds
div
sbb
scas
sahf
xor
mov
and
and
add
add
cltd
bound
sahf
sti
fwait
pop
leave
push
adc
adc
notl
roll
and
aad
mov
and
test
popf
mov
hlt
insl
int
out
jl
scas
and
push
jl
sar
pushf
mov
mov
testl
pop
dec
mov
cs
dec
and
and
jnp
pop
cmp
push
mov
mov
insb
fsubl
push
ljmp
push
lock
in
push
aaa
inc
aad
sub
ret
movsb
cwtl
insb
mov
or
jnp
insb
adc
fistps
cmpsl
cmc
stos
insb
cmp
lret
jmp
xor
stos
mov
dec
push
push
lret
sti
sbb
imul
jmp
loop
ljmp
jbe
adc
xlat
mov
mov
push
jg
lahf
rcl
repz
or
pop
movsl
inc
and
jno
mov
inc
daa
push
daa
fadds
sub
inc
in
add
mov
push
popl
insl
add
negb
movsb
mov
adc
pop
jmp
lods
xchg
jmp
addr16
cmp
xor
lods
sub
and
cmp
cwtl
push
dec
test
inc
pop
mov
push
es
add
push
stos
popa
xor
jl
mov
mov
popf
push
aad
push
lods
dec
cmc
pushf
xor
mov
pop
mov
xchg
clc
jae
fcmovbe
xorb
lahf
cmp
sub
mov
mov
inc
cmp
sbb
xor
mov
pop
ficoms
fs
pop
ds
flds
std
push
sub
jae
jo
rorl
xor
dec
mov
test
ljmp
rclb
jno
cmpsb
idivb
sub
cmc
sbb
ss
lahf
add
mov
sub
lahf
test
add
in
loop
sub
pop
mov
adc
hlt
outsl
sbb
cmpl
mov
jns
sbb
icebp
pop
sub
inc
sbb
std
and
stos
pop
inc
or
add
notb
es
push
jp
in
rcr
add
xor
loope
jne
out
pop
stc
sbb
mov
lock
xor
push
dec
xor
xadd
jnp
xchg
push
jp
sti
add
sub
pop
xchg
cwtl
outsb
imull
mov
xchg
arpl
or
cmp
mov
mov
std
ljmp
aam
add
jbe
add
inc
cmp
jb
ss
push
mov
dec
push
out
out
pop
ret
xor
jmp
pusha
mov
out
mov
sbb
int
push
mov
jge
mov
dec
leave
pop
dec
call
push
daa
jg
jo
jmp
adc
jno
mov
mov
test
enter
out
adc
mov
cmp
adc
xor
movsb
lahf
mov
cltd
sub
jg
xchg
popf
xchg
dec
int3
mov
les
and
pop
dec
inc
daa
fnstenv
xor
xchg
or
movsb
stc
mov
scas
arpl
adc
mov
aas
or
in
jo
xor
cld
xchg
xchg
jecxz
mov
sbb
cld
orl
push
adc
arpl
mov
ljmp
mov
insl
dec
cmp
es
clc
or
dec
daa
push
jbe
pop
pop
sahf
cmp
cmp
sbb
rcll
out
sbb
sbb
mov
mov
adc
cmp
neg
add
mov
mov
int3
nop
push
jb
pop
lds
xchg
ret
popa
and
adc
mov
dec
push
adc
push
loop
and
aad
cmp
adc
test
dec
iret
cmp
lret
test
dec
je
sbb
loopew
mov
mov
adc
repz
xchg
test
data16
bound
aaa
in
leave
jecxz
les
pop
jne
lods
movsb
adc
or
loop
rolb
aas
dec
leave
rorl
fisttps
dec
xchg
mov
push
add
inc
shll
adc
dec
icebp
or
xchg
lods
scas
iret
push
ds
ror
mov
hlt
jb
insb
sbb
popfw
sti
sbb
cmp
and
lahf
push
jle
or
pop
cltd
push
cmpsl
out
jl
push
sub
in
sub
xor
mov
push
andb
add
mov
or
jno
es
pushw
ret
sbb
lcall
xor
sbb
es
out
popa
in
add
outsb
adcb
cmp
push
mov
into
sub
out
fsubrs
ret
call
faddl
hlt
xchg
in
loope
jns
jecxz
push
pop
sbb
mov
push
ljmp
pop
insl
cltd
mov
lods
aas
cwtl
lea
repnz
pop
cmpsl
push
mov
fcomps
adc
and
xchg
inc
xchg
test
sub
data16
cmp
addr16
popf
sub
stos
ja
cmovge
ret
cmp
js
cmp
iret
cmpsb
fs
test
inc
adc
push
add
sbb
xchg
repz
pop
push
mov
subl
or
cmpsl
hlt
arpl
mov
sbb
leave
dec
push
enter
cmp
cli
mov
sahf
jbe
lds
and
xor
in
push
lret
enter
in
adc
push
lods
mov
jno
test
mov
pop
outsb
lret
xchg
idivl
stc
cmpsl
push
or
fs
in
rol
call
out
lds
sub
repnz
xor
iret
pop
pop
cmp
mov
xor
rclb
es
jmp
sahf
dec
dec
mov
mov
scas
xor
ljmp
imul
pop
jecxz,pt
sub
test
daa
adc
aaa
xchg
dec
dec
mov
aad
jo
mov
sbbl
sbb
mov
bnd
in
jle
or
or
iret
and
in
jmp
jbe
sub
add
gs
push
loopne
mov
lret
mov
out
sbb
mov
sbb
rol
pusha
mov
and
and
fstpt
inc
jle
mov
and
jp
push
lods
and
adc
pusha
mov
push
aam
dec
jp
lock
lods
test
or
xchg
dec
imull
das
nop
cmp
add
test
jmp
xor
sarb
inc
scas
in
xchg
fcompl
dec
and
xor
ja
xor
pop
xor
mov
cmp
add
and
call
jbe
pop
iret
aaa
pop
ss
sub
adc
pop
test
sub
dec
jbe
push
and
shl
add
pop
into
cmc
and
mov
test
dec
or
lds
mov
shll
retw
pusha
pop
mov
pop
dec
repz
andl
jge
lret
repz
mov
inc
push
ret
out
sub
inc
mov
out
or
repnz
jb
ret
dec
xchg
inc
fsubrs
xor
sub
adc
je
lcall
and
cli
insb
out
lahf
mov
pop
aam
jne
push
jns
repz
xchg
lret
hlt
mov
lds
push
mov
xor
out
push
dec
dec
xchg
lods
sahf
aad
or
dec
jb
jmp
es
hlt
push
push
push
data16
inc
mov
push
dec
pop
add
push
les
test
cmp
dec
lret
les
out
pop
lcall
jg
enter
imul
pop
dec
fildll
movsl
addr16
or
dec
xchg
sub
imul
or
rcrl
test
adc
sub
or
xor
lcall
ss
inc
ffree
add
insb
mov
je
push
mov
movsb
insb
xchg
out
jecxz
sti
inc
mov
xchg
jg
sub
mov
mov
or
xor
cmp
cmpsl
mov
push
push
add
xor
sbb
or
sub
jmp
xchg
sbb
xor
inc
rcll
pop
add
test
cltd
or
mov
lahf
sub
mov
sbb
pop
outsb
sub
inc
add
test
mov
mov
mov
cli
mov
push
push
aad
sub
dec
cmp
addr16
sbb
outsb
cmp
movsb
push
pusha
inc
add
test
push
jle
pop
shll
je
pop
add
arpl
sarb
fs
lock
cmp
and
push
xchg
xor
fmull
or
dec
mov
jo
cmp
sub
and
xchg
pop
xor
xor
les
push
stos
sahf
aam
cs
xchg
or
fstpt
push
add
mov
fnstenv
adc
add
sub
lcall
mov
call
mov
mov
add
xlat
sub
lret
jbe
movsb
repnz
ljmp
or
mov
cli
sarl
xor
or
imul
std
mov
aam
push
xor
out
xor
ret
fcmovb
add
dec
mov
lods
iret
frstor
test
mov
cmpsb
aaa
std
or
int
arpl
push
mov
pop
mov
iret
inc
movsb
push
or
jb
mov
dec
call
jp
sbb
ret
js
xchg
pop
xacquire
jb
mov
ss
xchg
scas
sbb
cmp
cmp
fxch
fsubrl
dec
xor
cs
xchg
insl
add
add
mov
mov
fstl
or
dec
push
jb
aam
mov
push
dec
mov
in
imul
or
add
cli
xor
jmp
dec
xchg
dec
dec
or
fisubrl
dec
popf
gs
jp
shll
mov
xchg
jl
jmp
ret
fcoms
inc
mov
out
cs
jmp
jg
lods
cmp
xchg
gs
cmp
sub
or
add
pop
daa
mov
cs
aas
mov
ret
nop
xor
push
out
add
push
jae
xchg
or
cmp
stos
push
inc
shlb
sub
xchg
je
movsb
mov
test
mov
jecxz
clc
int
loop
inc
nop
cmpl
xchg
mov
stc
aam
push
cmpsl
mov
adc
adc
fisubl
in
add
hlt
pop
mov
cmp
mov
xor
xchg
adc
dec
in
jbe
jp
lods
or
xor
dec
xchg
push
mov
mov
movsl
mov
mov
clc
lock
dec
mov
out
push
aas
push
dec
out
rol
fsubs
testl
xor
fimull
mov
and
ret
dec
pop
out
imul
movsb
mov
frstor
jmp
pop
dec
inc
mov
xor
aad
cs
test
int3
mov
mov
pop
pusha
test
addr16
mov
dec
xchg
mov
cmp
push
popf
mov
repnz
js
cmp
add
data16
dec
pushf
add
cmp
sub
stc
pop
pushf
sub
add
cmp
mov
repz
xor
fs
sub
inc
leave
or
and
pop
cmp
lock
shll
outsl
mov
xor
mov
add
dec
xor
and
xchg
pop
nop
ljmp
jp
sbb
test
insl
out
inc
pop
jl
push
push
mov
mov
sub
loopne
data16
mov
enter
nop
add
jg
cmp
fldenv
jnp
push
repz
jb
inc
push
inc
mov
add
repz
or
std
into
xor
xchg
jnp
mov
mov
adc
es
xor
js
xorps
insl
push
sbb
push
rcll
mov
dec
xor
add
pushf
insl
adc
aaa
xor
mov
int
sbb
push
aaa
push
push
lock
je
add
jns
push
sub
push
push
add
into
cmp
add
lea
out
fadds
fdivl
sbb
test
lret
adc
push
aaa
mov
popf
mov
scas
cmpl
sub
inc
nop
and
xorl
out
push
push
push
sub
xlat
in
xlat
and
dec
jbe
sbb
pop
mov
in
test
test
les
jns
adc
lret
xchg
jecxz
js
roll
lcall
cmpsb
out
data16
jnp
mov
test
fcmovnu
jp
pop
or
insb
aam
lea
xchg
aas
mov
push
aaa
fsubr
fsubrs
js
sti
insb
inc
xchg
mov
xchg
fists
dec
xchg
cmp
out
cmpsb
push
mov
jmp
orl
sub
cmpsl
or
jl
push
hlt
shll
push
pop
fsubrs
fwait
mov
int3
ljmp
inc
aad
jp
and
cld
movsb
fnstsw
mov
or
outsl
push
dec
daa
jno
mov
ss
gs
mov
sub
mov
mov
jbe
inc
sarb
repnz
push
je
or
cltd
inc
jae
cltd
push
xor
jno
loop
push
ja
imul
push
adc
je
in
lret
sbb
das
loopne
bound
jmp
push
jnp
cltd
mov
jp
jne
sub
nop
pusha
inc
xchg
push
pop
call
inc
dec
fimull
jg
enter
fdivrs
out
cld
jne
shl
std
xor
push
std
cli
mov
jne
jmp
xor
xor
cs
add
sub
pushf
jnp
ficoml
pushf
and
ljmp
jb
sbb
aas
scas
loop
xor
sbb
xchg
out
fs
mov
mov
xor
aad
stos
int3
shlb
lea
mull
data16
add
aaa
loop
fcmovbe
xchg
repnz
adc
in
cmp
les
loope
bound
scas
mov
pop
add
pop
int3
add
sbbb
call
inc
mov
lea
adc
cmpsb
imul
mov
gs
inc
cmpsl
fcoms
xchg
iret
dec
dec
adc
sbb
dec
je
adc
cmpsl
cmp
fcmovnbe
movsl
mov
negb
jl
mov
mov
out
in
cmp
notl
ret
or
sbb
fwait
adc
and
notl
or
jno
push
jmp
add
shrb
daa
movsl
ds
push
aas
jb
push
push
jae
xchg
js
push
cltd
ja
enter
pop
push
icebp
inc
hlt
xchg
jl
lds
jl
fdivs
sbb
xor
mov
adc
xchg
lahf
ljmp
dec
scas
push
mov
das
jno
nop
enter
sbb
inc
adc
inc
mov
test
sbb
in
lods
mov
js
cmp
lods
pop
rcl
pmulhw
adc
clc
inc
pop
adc
add
scas
or
pushl
cli
push
push
into
lods
je
rcr
fadds
xchg
or
dec
repz
or
sub
xchg
pop
stos
lret
sbb
and
pop
test
int
mov
jmp
je
pop
cmp
fidivrl
pop
and
in
sbbb
jnp
out
loopne
push
xchg
or
cmpsb
inc
mov
sbb
or
xchg
push
aaa
jge
cmp
xchg
out
xchg
and
add
rclb
pop
mov
ljmp
jecxz
pop
test
add
sbb
and
mov
lods
nop
pop
jg
mov
mov
add
movsb
pushf
mov
mov
scas
rorb
sahf
sahf
lods
leave
push
rcrl
mov
ds
hlt
and
shlb
aas
sbbl
loop
aam
mov
cmpsl
in
cmp
enter
jl
test
cmpl
lret
hlt
into
adc
push
ficomps
dec
sbb
add
sarb
ljmp
outsb
and
std
stc
pop
and
mov
bound
jge
pop
jge
cs
hlt
mov
add
dec
inc
xor
sub
dec
outsl
ss
rorb
mov
mov
lret
in
adc
inc
jle
lods
idivl
mov
js
popf
or
xorl
dec
adc
cmpsl
sbb
test
cmpsl
jns
in
xor
pop
loope
aaa
lahf
push
subl
cmpl
jmp
xor
dec
pushf
jge
into
test
in
imul
xchg
dec
cmp
data16
mov
push
sbb
in
sahf
mov
sub
cmc
jmp
out
pop
jnp
icebp
mov
jbe
adc
es
cmp
idivb
inc
xchg
nop
sbb
outsl
dec
add
cmp
cli
fninit
movsl
pop
stos
out
ja
dec
pop
stc
mov
mov
cmp
mov
sar
or
out
mov
dec
push
or
dec
cmpsb
popf
std
sub
addl
push
sub
imul
jmp
loope
inc
test
sub
andb
push
cs
inc
jne
int
push
enter
mov
in
cmp
ljmp
push
mov
sbb
stc
mov
rorl
or
mov
pop
xlat
or
in
int
fs
jne
outsb
divl
sarb
mov
or
cltd
lahf
repnz
loop
hlt
xchg
faddp
ja
add
and
mov
icebp
cmc
inc
ss
push
cli
sub
rclb
xchg
jo
test
dec
mov
xor
inc
std
jo
push
nop
pop
or
xchg
pusha
movsl
adc
in
push
pop
sti
cmpsl
cmp
stos
out
inc
aad
mov
mov
pop
stos
aad
pop
cmpsb
mov
loope
xchg
jp
jb
xchg
daa
dec
cmp
or
aas
mov
jne
loop
dec
push
scas
shlb
or
into
pop
xchg
push
xchg
addr16
jnp
push
mov
sub
mov
jnp
mov
xor
cmp
jae
push
mov
les
cwtl
cwtl
mov
scas
push
lods
fwait
and
gs
mov
sub
mov
cli
and
aaa
movsl
jb
xor
out
mov
mov
cld
push
shrb
cwtl
pop
and
sbb
loope
xor
outsl
test
data16
loop
jnp
dec
mov
faddl
jae
adc
and
mov
testb
mov
or
dec
jae
sub
dec
mull
shr
xchg
loope
lahf
push
aad
call
mov
fs
pop
jp
or
into
test
push
mov
and
add
jmp
adc
pop
daa
movsb
test
outsb
notl
cmp
loope
sub
ds
sub
adc
mov
jb
pop
adc
out
and
mov
mov
lods
jle
cmp
pop
push
pop
das
rorb
aaa
clc
push
sti
gs
mov
push
in
stos
xor
dec
xchg
pop
pop
sub
pusha
sarb
adc
in
mov
not
adc
mulps
leave
and
push
imul
xchg
mov
pusha
fisttpll
ds
mov
mov
xchg
test
in
dec
fiadds
xor
xor
mov
mov
pushl
ja
out
popa
mov
adc
inc
test
sar
and
aam
mov
lret
shll
xor
dec
mov
loope
shrl
shll
mov
in
repz
das
sbb
add
xor
iret
hlt
adc
pop
xchg
pop
dec
pop
movsb
adc
fcoms
sub
sbb
xlat
ret
jle
jecxz
push
pop
add
mov
jnp
add
and
dec
mov
fs
fistl
inc
ja
push
xor
adc
cmp
xor
sbb
dec
pop
jecxz
imul
loopne
xchg
cmpsl
sub
and
and
sbb
jae
inc
ficomps
rcr
mov
scas
fistpl
adc
call
mov
lret
clc
or
dec
std
push
push
nop
rolb
push
test
mov
jl
pop
mull
fsubr
andl
int
cltd
test
es
xchg
popa
out
mov
test
or
xor
hlt
inc
inc
inc
lods
xchg
pop
repz
aaa
add
std
push
out
in
mov
test
into
push
sbb
xchg
ja
jge
in
jle
lds
lds
sti
jne
in
out
popa
or
jecxz
rcll
jns
xorl
iret
test
add
ret
add
ret
xchg
in
add
and
popf
sub
pop
adc
ret
push
dec
mull
xor
mov
pop
mov
mov
fs
test
mov
gs
xor
sar
jl
shrb
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
pusha
fldenv
xor
int3
adc
ret
mov
ror
stc
fnstsw
lods
dec
xchg
jecxz
lcall
repz
std
lcall
rcrb
sub
xor
jbe
xchg
icebp
daa
xor
fs
add
and
pop
mov
pop
js
dec
enter
cmpsb
fdivrl
mov
mov
das
mov
mov
fmul
loop
lods
icebp
xor
aaa
pop
dec
xor
xor
adc
jg
mov
cld
stos
out
in
push
adc
adc
mov
mov
xchg
mov
xchg
xorl
call
cmc
mov
push
mov
sbb
inc
ljmp
sbb
or
mov
rep
insb
icebp
gs
popf
add
jae
xchg
sahf
inc
xchg
lcall
aaa
mov
push
add
sbb
outsl
xchg
mov
xchg
adc
insl
and
xchg
pushf
dec
inc
jg
fcmovu
lret
das
lahf
jns
mov
pop
mov
jg
or
loop
mov
lcall
stc
in
mov
inc
in
testb
adc
mov
and
mov
popa
sbb
jns
pop
ret
lds
pushl
ja
sbb
push
sbb
add
xor
loopne
loop
sbb
mov
push
sbb
mov
mov
sub
fisubl
sbb
or
iret
mov
push
adc
cmovb
dec
mov
mov
sar
hlt
push
ret
shl
test
daa
jae
jge
mov
into
dec
test
mov
sub
lds
inc
daa
pop
jne
inc
xor
pushf
test
lds
xlat
cmp
pop
xchg
push
xchg
pushf
rcrl
xchg
mov
mov
pop
xorl
jbe
bound
outsl
inc
arpl
cltd
and
into
push
add
or
fmul
xchg
pusha
and
fidivrl
mov
fs
nop
cmovb
push
sbb
mov
lret
fiaddl
repz
or
pop
loopne
sub
xchg
pop
daa
popf
sbb
iret
xchg
inc
pop
push
mov
inc
std
fdiv
sbb
pop
push
xchg
imul
jmp
in
jb
aaa
pop
jl
in
lret
outsl
stc
ret
cld
mov
pop
loope
in
add
call
sbb
into
shl
icebp
xlat
repz
out
and
or
jmp
ljmp
add
pop
fstp
pop
inc
or
add
fstpl
xor
pop
jae
adc
scas
push
scas
cli
xor
into
test
push
mov
loopne
add
mov
mov
jo
sub
pop
cmp
outsl
dec
pcmpeqw
or
xchg
adc
xorl
inc
xor
loope
adc
mul
pop
arpl
sbb
sti
xor
lds
sub
insl
lahf
mov
sbb
mov
add
sub
nop
std
in
jne
into
cmc
fidivrs
addl
adc
lds
test
dec
scas
or
and
rcl
mov
xor
cltd
jne
fsubs
in
push
mov
ja
aad
inc
dec
repnz
ja
lds
cltd
jmp
gs
sarl
idivl
fwait
pop
mov
popf
inc
cmp
pop
xchg
rclb
repz
pop
cmp
jl
jne
insb
hlt
inc
xorl
addl
cmp
xor
fldl
outsl
scas
mov
out
sub
add
shr
sbb
mov
orl
xchg
dec
push
dec
stc
and
push
inc
pop
push
cltd
stos
xchg
jb
sbb
mov
aam
sbb
jmp
out
shlb
icebp
sbb
cmp
mov
adc
arpl
mov
pop
add
pop
sbb
mov
push
int
fbld
orl
cld
leave
fbld
pop
adc
jns
xchg
fisubrs
insb
cli
inc
add
add
dec
sbb
xchg
mov
sbb
ja
popa
xchg
jo
pusha
xchg
lea
aaa
jns
and
fwait
mov
aas
add
add
mov
pop
decl
cmp
push
stc
push
sbb
jle
aas
jnp
aad
ret
pop
cmc
and
cmc
mov
jbe
call
push
jo
sub
mov
add
jo
mov
aas
mov
call
daa
jo
inc
add
xchg
dec
neg
cltd
out
mov
xlat
push
xor
pop
mov
and
sbbb
clc
sub
and
xor
hlt
movb
xchg
sub
nop
jno
clc
sbb
pusha
icebp
nop
jb
sub
pusha
sti
mov
sbb
js
mov
mov
sub
jmp
ds
out
xor
push
int3
pop
mov
iret
lret
push
mov
cli
mov
insb
adc
fs
mov
push
imul
or
dec
push
mov
ds
mov
inc
inc
loop
je
cmpsl
jne
add
jmp
cltd
test
push
sub
fisubrl
outsb
mov
jb
sbb
mov
subl
jbe
scas
jbe
xor
dec
xor
in
sbb
mov
sub
dec
aas
out
xchg
xchg
mov
out
sub
rcl
and
jge
test
inc
adc
aaa
jns
div
les
mov
mov
pop
adc
test
subl
xchg
sub
pusha
aad
jg
aaa
ja
mov
out
cmp
or
cmp
jne
test
push
or
sub
fxch
inc
xchg
mov
or
inc
imul
fs
add
bswap
and
das
cmpsl
stos
push
xchg
mov
nop
push
lods
jnp
mov
sbb
xchg
jne
push
jns
sub
mov
hlt
and
scas
sub
xor
sbb
es
outsl
stc
popf
ljmp
stos
loope
rcrb
add
jl
xchg
sbb
xchg
mov
mov
cmpsb
mov
and
insb
jns
and
ror
jg
xor
and
xchg
cltd
push
stos
and
imul
inc
xchg
repz
add
adc
inc
pop
lret
mov
lret
outsl
mov
push
pop
test
std
arpl
adc
xchg
test
mov
mov
lret
push
movsl
lret
dec
clc
cmp
jbe
pop
mov
std
popa
mov
mov
sbb
and
rcll
jmp
es
pop
rorb
mov
negb
ss
jne
lcall
mov
loopne
pop
or
bswap
fst
mov
fstpl
stos
stos
dec
jne
jge
pop
aaa
scas
xchg
into
scas
sub
cmp
outsl
jnp
cwtl
filds
mov
imul
mov
push
push
call
stos
adcb
pop
idivl
cmp
adc
pop
dec
jge
loop
mov
out
jo
dec
fcomps
mov
nop
andb
mov
ret
xchg
stos
pop
lret
mov
jge
mov
in
lahf
mov
add
inc
add
es
repz
xor
xchg
adc
mov
mov
cmp
inc
cmpsl
bound
cmpsl
hlt
stc
push
and
out
ret
jmp
lods
and
pushf
mov
pusha
push
add
call
xchg
xchg
dec
aad
xor
pop
js
mov
and
mov
sub
lcall
sahf
cmp
mov
adc
xchg
fsubrl
sahf
repnz
cmc
enter
inc
xchg
and
packsswb
roll
std
pop
ja
add
int
xor
add
loopne
mov
xchg
and
cld
ljmp
dec
xchg
push
push
cmp
mov
mov
iret
imul
jmp
in
push
test
rorl
sbb
aas
and
mov
mov
xlat
jmp
pop
lock
add
sub
cld
dec
fdivs
pop
aaa
push
cmp
inc
jno
push
movsb
out
mov
sbb
rorb
cwtl
ror
ljmp
daa
sub
mov
and
or
lahf
fwait
jmp
sub
inc
mov
outsl
loop
hlt
popl
loope
sub
fs
sbb
ret
or
sub
ljmp
cmp
rcr
jecxz
ret
pop
jg
xor
outsl
adc
or
lret
inc
mov
cmp
pop
mov
pusha
sbbb
push
mov
jge
and
mov
push
sbb
incb
xor
cli
and
push
sbb
jnp
loope
dec
movsb
in
jno
fiadds
xchg
dec
adc
push
nop
subb
xlat
sub
push
cmpsb
pop
mov
mov
mov
xchg
mov
adc
lods
out
sub
cs
or
movsb
sbb
xchg
pop
adc
fildll
aas
outsb
jl
mov
pushl
sub
pop
insl
xchg
leave
fsubs
addr16
in
cwtl
fcmove
mov
rolb
adcb
pop
decb
lock
subl
mov
in
lods
push
pusha
or
ds
cmp
cmp
hlt
cmp
mov
orb
dec
push
shlb
add
cld
mov
mov
into
pushf
add
push
outsb
and
fnstsw
sbb
out
stc
cli
cmp
adc
add
in
sbb
mov
dec
sub
inc
clc
pop
adcb
rcr
hlt
xchg
sub
lret
mov
psraw
popa
popf
jne
xorb
push
rorl
dec
mov
mov
repz
sbbl
add
fwait
fs
mov
xchg
lret
push
push
sbb
adc
mov
hlt
and
pop
sbb
sbb
adc
jae
cli
mov
in
out
xrelease
fdivl
out
out
pop
stc
pop
cmp
rcr
pushl
dec
pop
and
scas
cs
mov
pop
popa
mov
call
jo
mov
je
mov
in
jnp
in
cmp
les
lcall
pop
cmpsb
in
rcll
nop
es
push
inc
push
mov
inc
call
cmp
jmp
xchg
enter
movsb
fildll
mov
icebp
aad
test
inc
cmp
lea
pushf
push
sub
cmpsb
sbb
cli
out
dec
xchg
int
mov
lret
and
test
mov
hlt
arpl
addr16
shll
mov
ficomps
cwtl
fcompl
daa
mov
mov
pop
cltd
sbb
cmp
es
iret
or
adcl
or
insl
mov
or
pop
mov
adc
scas
pop
jge
lahf
adc
jp
aad
mov
mov
xchg
lds
mov
je
fstpl
cmc
sbb
fxch
xor
scas
bnd
mov
lret
imul
add
dec
ss
or
in
dec
mov
pushf
adc
dec
pop
push
cmp
fidivl
in
addr16
sub
test
sub
shlb
adc
add
jne
pop
cmpsb
ds
test
les
push
xchg
test
jae
nop
dec
lret
mov
popf
andb
pop
add
dec
nop
arpl
mov
and
pop
pop
mov
cmp
cmp
xor
imul
dec
in
call
add
inc
into
outsl
lods
mov
aad
ljmp
cmp
out
mov
inc
mov
pop
cs
xor
mov
inc
hlt
add
jnp
mov
adc
mov
mov
test
dec
push
push
cmpsl
adc
mov
sbb
xchg
in
nop
push
cmp
push
add
and
ja
xor
adc
mov
mov
adc
sahf
push
jle
scas
pop
divb
mov
lods
iret
popf
or
mov
loope
or
inc
or
cmp
mov
and
lods
inc
mov
rcrl
cmp
or
xchg
pop
inc
mov
fiadds
mov
mov
mov
or
mov
ja
mov
mov
mov
js
sbb
out
or
pop
data16
sbb
or
pop
pusha
jnp
or
outsb
stos
or
push
lds
and
inc
sub
mov
das
in
mov
test
sbb
les
divb
aaa
mov
jne
and
scas
push
sub
test
cli
adc
test
xor
and
mov
mov
das
out
push
es
enter
bound
in
aad
xchg
test
mov
out
call
xchg
test
stc
pop
stos
xchg
js
mov
test
sbb
jmp
push
dec
xor
sbb
fmull
les
fcmovu
popf
loopne
cmp
jno
scas
mulb
out
or
enter
sbb
xor
aam
cltd
or
mov
pop
insl
mov
sub
stc
int3
cwtl
adc
xchg
xchg
out
das
ret
jecxz
mov
xor
loopne
inc
les
mov
mov
cmpl
xlat
xlat
ljmp
cli
imul
adc
push
test
push
cmp
sbb
into
inc
iret
and
push
sahf
stos
fs
rcl
push
push
mov
pop
xor
movsl
sub
fisttpll
inc
lock
imulb
popf
pop
fnstcw
push
loopne
test
adc
jns
or
mov
test
out
xchg
add
js
xchg
jo
pop
push
xor
lea
emms
cmp
fisttpll
jecxz
das
dec
jbe
add
fstl
and
pop
scas
jb
push
imul
mov
push
fldenv
rclb
js
cmc
in
mov
pop
sahf
sub
mov
andl
daa
pop
cmp
add
lahf
jl
or
pop
add
push
dec
orl
sbb
notb
pop
cmp
adc
cmp
sti
sahf
mov
push
dec
pop
and
push
add
or
adc
push
orl
andb
fadds
js
pop
movsb
not
jae
mov
outsb
xchg
sub
lahf
outsl
inc
mov
inc
push
inc
insl
pushf
push
dec
in
xor
inc
add
mov
add
arpl
fs
and
xlat
les
push
insb
clc
push
inc
and
mov
inc
or
ret
mov
pop
and
lret
mov
jb
mov
push
cwtl
push
inc
movsl
nop
cmpsl
div
loop
or
test
cli
test
ficomps
inc
sub
lds
jl
cltd
sbb
mov
or
loope
insl
mov
inc
xor
or
xor
cmpsb
sub
xchg
pop
pop
xor
mov
dec
xchg
ret
sub
adc
aam
lods
xor
lods
std
das
mov
mov
and
mov
dec
adc
xor
mov
in
lret
jne
pushf
or
pop
mov
inc
push
aam
pushf
leave
outsb
adc
loopne
lea
int
mov
mov
stos
mov
mov
adc
mov
stos
outsl
lea
rcl
add
cmp
dec
data16
mull
cmc
inc
inc
ja
sti
mov
xchg
sbb
fbstp
and
mov
bound
cmc
push
out
lock
xchg
ficoml
jo
mov
and
push
cmpsl
push
push
aas
sub
push
lods
sub
loope
popa
or
stc
outsb
mov
dec
mov
xchg
rcl
sub
aad
sub
jne
dec
pop
inc
jb
inc
rcrl
xchg
mov
in
or
xor
adc
cli
push
pop
jns
mov
sbb
in
push
cmc
out
lea
mov
enter
jp
test
inc
or
xlat
push
pop
xor
cmpsb
das
pop
dec
push
sbb
pop
lods
cmc
pop
push
fsubl
adc
and
mov
fsubrl
xor
and
call
inc
xchg
jl
lahf
mov
jecxz
orb
mov
inc
and
fimull
rol
ret
lods
push
les
jp
pop
test
scas
mov
ret
xorb
movsl
test
imul
inc
cld
fnstenv
add
incb
dec
mov
int
jnp
push
cmc
xor
loop
xor
js
fistps
push
jmp
stos
cmpsl
sub
push
pushf
sti
ljmp
or
and
jb
adc
mov
out
popa
mov
add
sub
push
scas
orb
inc
inc
cmp
testl
mov
jecxz
testl
ss
fdivrs
loopne
xor
scas
dec
std
jge
daa
jbe
pop
jns
cli
rcrl
stc
add
repz
or
ds
jle
mov
mov
inc
sub
adc
sbb
jecxz
sbb
incb
or
sbb
cltd
xchg
push
sti
or
dec
pop
push
add
scas
ss
into
jne
popf
dec
mov
inc
or
cltd
add
push
push
push
outsl
push
data16
push
xchg
rcl
loop
mov
ret
pop
out
sbb
jge
sbbl
scas
rol
lea
sbb
or
fldl
fldt
xorl
adc
mov
jmp
push
out
sbb
mov
or
shll
or
jg
mov
mul
mov
arpl
aam
rclb
mov
xchg
cmp
jmp
cmpsb
sbb
je
mov
out
or
dec
ror
push
std
cwtl
sub
movsl
fisubl
push
dec
or
add
xchg
testl
rclb
out
push
cmp
sub
mov
insl
xchg
hlt
push
sbb
mov
pop
test
fiadds
out
ficoml
pop
dec
jo
and
dec
iret
or
or
ljmp
subb
add
les
out
js
jbe
push
mov
adcl
dec
pop
xorl
xor
in
fcmovnbe
jmp
aaa
pop
add
add
pop
cmp
int3
cmp
mov
std
sub
mov
shl
iret
ja
lds
fcmovb
dec
mov
repz
into
test
lods
out
push
sub
xlat
cmc
fildll
movsl
test
xchg
lret
pop
adc
mov
dec
mov
or
fcmovu
outsb
gs
or
mov
repnz
cmp
inc
aaa
xor
inc
adc
test
cmp
jg
dec
jl
orb
adc
sti
xchg
es
loopne
sub
xchg
mov
jle
push
push
cmp
cltd
scas
outsl
xchg
stos
cmp
xchg
cmpsl
int3
lds
out
add
or
test
js
add
pop
xchg
lods
data16
push
or
inc
out
sarl
aam
test
adc
xor
in
roll
hlt
fistpll
aad
stos
imul
mov
mov
popa
push
dec
mov
xchg
inc
jbe
sti
insl
test
test
cwtl
int3
mov
inc
nop
mov
mov
ljmp
arpl
mov
add
andb
aam
inc
fisubrl
adc
lods
pushl
arpl
stc
jnp
push
xchg
cwtl
mov
cltd
bound
out
adc
cmc
cmpsb
mov
daa
loop
aam
jecxz
adc
punpckhwd
mov
pop
ret
cmp
lret
test
xchg
mov
push
stos
out
or
cmp
repz
push
insl
movsl
dec
mov
add
add
pop
aam
cmovae
aam
jnp
das
sbb
imul
stos
cmp
mov
push
loope
nop
aas
pop
in
je
sbb
gs
hlt
lods
js
inc
lahf
andb
or
enter
imul
outsb
mov
add
sub
repz
loop
jbe
shr
lds
in
insl
xorl
scas
or
pop
inc
shrl
sub
dec
dec
dec
stos
insb
mov
inc
mov
sub
into
repz
call
pop
pushf
xchg
sub
gs
ret
xchg
dec
inc
loope
fmulp
imul
mov
jns
dec
fstps
pop
es
loope
popa
pop
jne
mov
cltd
mov
sbb
sub
js
xchg
data16
add
cmp
mov
sbb
mov
jbe
or
mov
enter
mov
nop
cmp
lcall
addr16
fsubrs
aas
cs
mov
xlat
or
jmp
out
in
into
xchg
ljmp
inc
jno
mov
lock
popf
xchg
push
test
or
ljmp
jg
push
mov
jb
lea
lahf
inc
ss
enter
imul
jl
or
rorb
jmp
or
cwtl
cmp
imul
cmp
pop
add
ret
xor
mov
aam
addr16
jnp
xchg
push
cmpsb
jns
cmp
lret
sti
sbb
inc
xchg
es
add
jle
or
push
fs
jo
into
fs
push
sarl
call
aam
jge
test
shl
pop
negb
mov
mov
lods
es
retw
leave
popf
pop
movsl
outsb
testb
adc
decb
and
add
jae
movsl
mov
jb
push
fwait
mov
jp
hlt
or
lcall
xchg
pop
lds
mov
mov
fcoml
lcall
xchg
decl
pop
dec
push
fldcw
jo
adc
aad
or
inc
xchg
js
hlt
cltd
shll
into
cwtl
xchg
scas
lahf
xor
xor
lock
and
hlt
shll
addb
mov
inc
add
dec
mov
divps
sbbb
outsb
stc
or
insb
and
fldl
or
mov
or
enter
imulb
shll
loopne
shrl
je
cmp
lea
clc
cltd
in
sbb
fcoms
sahf
fldt
cmp
xchg
and
and
scas
add
mov
fmull
push
fadds
lret
xor
mov
xor
xor
pop
dec
adc
lods
cltd
or
xlat
arpl
dec
sarb
and
int3
test
mov
loope
xor
stc
repnz
mov
mov
shrb
mov
inc
mov
mov
pop
testl
fstps
jge
pop
push
shr
mov
int3
mov
push
pusha
add
sbb
cmp
movsl
fsts
fisubrs
fsts
inc
cmp
pop
mov
mov
mov
pushf
faddl
cli
scas
sbb
push
cltd
or
sub
add
andl
ljmp
adc
cmp
xchg
insb
mov
insb
mov
and
lea
mov
orb
push
cld
ret
sti
popa
psllw
js
and
xchg
sub
mov
cmc
les
ja
pop
stc
imul
inc
dec
dec
cmp
mov
cmp
sub
dec
cmpsb
fildll
rolb
inc
xchg
in
cmp
jl
arpl
sbb
sub
jp
leave
movsl
inc
rcrb
lea
push
enter
pop
xor
pop
cmp
dec
push
int3
out
cmp
mov
js
loop
decb
pop
mov
int
sbb
out
and
movsl
mov
clc
pop
int
lock
lret
push
push
lahf
pop
jge
mov
sbb
repnz
cltd
std
sahf
gs
jle
das
adc
add
int3
pop
sbb
imul
lods
out
lss
cwtl
das
xchg
adc
stos
mov
mov
aad
xlat
andb
mov
loopne
repnz
movsb
or
pop
inc
and
jecxz
and
adc
xor
push
inc
lret
fcom
jg
mov
out
jb
sub
js
sub
mov
pop
ret
aam
jmp
jb
aad
dec
outsb
out
int3
adc
ret
push
in
sub
dec
dec
and
ds
xor
into
inc
add
xor
and
jecxz
iret
jae
cmp
shrb
sub
inc
in
arpl
cmpsb
addr16
and
lock
xchg
test
mov
sub
fwait
add
in
lds
movsl
pop
jne
loopne
and
jns
shll
sbb
cltd
testl
cmc
cmpsb
sub
jo
add
popf
push
pusha
push
inc
mov
ds
scas
testb
mov
dec
cld
pop
pop
cmpb
dec
fcomps
cs
and
in
pop
insl
ss
xchg
mov
mov
fiaddl
ret
in
nop
jecxz
outsb
jno
dec
out
jp
inc
testb
dec
dec
mov
pop
out
mov
mov
xchg
xor
mov
jne
and
mov
popf
jge
add
adc
decb
push
in
push
xlat
movsl
dec
add
aam
lret
je
jmp
mov
cmc
cld
and
loope
stc
pusha
lods
sub
xchg
add
cmp
inc
insl
lods
clc
and
icebp
or
or
push
mov
mov
lcall
dec
mov
jl
std
add
fnstsw
mov
xchg
inc
xor
pop
movsb
mov
lea
sub
inc
mov
cmpsl
sbbb
dec
sti
gs
call
xor
xchg
push
aad
sub
sub
int3
cltd
mov
in
bnd
add
subb
int
stos
nop
mov
add
mul
mov
mov
in
push
stos
xor
dec
aaa
mov
aam
fnstenv
pop
push
dec
cmp
xchg
sbb
rep
pop
jge
fxch
inc
push
imul
mov
sbb
lock
xlat
sub
sarl
ret
cmp
shrb
test
js
movsb
scas
push
inc
mov
xchg
mov
outsb
jbe
sbb
lret
scas
and
or
ss
orl
stc
add
push
mov
or
sbb
jle
sbb
add
mov
lea
add
dec
aam
lahf
out
mov
pop
add
loope
leave
mov
mov
roll
pop
inc
push
mov
in
dec
sub
adc
cwtl
jge
sar
dec
jno
mov
sub
cmp
loopne
mov
and
push
je
stos
inc
lret
mov
jge
push
push
into
lret
ss
cmpsl
lret
orb
inc
inc
cmp
lret
dec
inc
sub
push
roll
mov
popa
fwait
aaa
dec
add
dec
xor
addr16
inc
data16
mov
mov
mov
add
cmp
stos
cwtl
jmp
aas
ja
or
sbb
addl
ficoms
inc
or
jg
fidivrl
aad
xor
clc
inc
out
mov
iret
movsb
pop
adc
loopne
mov
fmuls
movsl
sub
cmp
sbb
push
xchg
rolb
shll
push
out
outsl
leave
inc
inc
mov
jmp
fiadds
lahf
pop
movsl
jmp
mov
mov
out
out
and
mov
mov
pop
clc
add
xchg
out
std
bound
rolb
jp
push
mov
mov
shrb
mov
cs
fs
cmpl
pop
hlt
or
mov
sbb
jmp
lea
cmp
lods
ds
iret
or
mov
fdivr
add
daa
testl
js
jp
repz
push
inc
push
xchg
lcall
sbb
das
add
pop
cltd
add
fs
pop
push
lds
subb
xor
ss
sbb
enter
pop
lea
cmpb
xlat
imul
sub
pop
xchg
mov
adc
mov
popf
rorl
mov
movsb
dec
sbb
mov
ss
push
packsswb
pop
push
pushf
cld
fnstsw
lock
cmp
fsubrs
fdivl
and
jbe
mov
fwait
repnz
or
cmp
subb
mov
psubusw
mov
lcall
inc
je
pop
bound
outsl
je
mov
cmp
andl
in
push
and
imul
lods
sub
fisubl
inc
sbb
mov
sbb
enter
inc
or
xchg
shl
and
mov
sahf
stc
cltd
or
out
lahf
push
inc
mov
pop
cmp
and
iret
jle
int3
scas
lock
mov
negl
sbb
xchg
pop
mov
test
cltd
mov
icebp
jle
ret
call
cli
repnz
sbb
add
sub
aas
inc
icebp
test
xlat
jb
cmpsl
sbb
insb
std
mov
cmp
xchg
or
int
testb
adc
push
push
adc
mov
movsl
and
mov
jmp
xorl
lock
lea
adc
ljmp
add
arpl
mov
cwtl
mov
jmp
jl
jmp
jns
pop
inc
mov
pop
es
mov
mov
jmp
add
sbb
leave
and
add
sbb
fidivrl
add
aad
xlat
push
repnz
push
sbb
fistps
lea
fcomi
nop
sub
add
adcl
or
mov
insb
xlat
insl
dec
sub
sbbb
mulb
arpl
inc
dec
jae
or
mov
lods
mov
cld
mov
sub
pop
mov
flds
sbb
jmp
jmp
adcl
int3
mov
aad
stos
scas
gs
jecxz
int
sbb
fwait
addr16
add
int
arpl
out
jmp
cmpsb
ja
into
xor
aaa
inc
insl
fistpll
cld
cli
mov
inc
push
mov
iret
push
fisubs
jle
sub
jne
in
mov
fldcw
fidivrs
cmp
sub
push
lcall
aaa
jne
clc
push
mov
pop
ss
in
pop
inc
movsl
outsb
out
lcall
inc
mov
add
push
inc
fiaddl
or
mov
sub
call
lds
jle
inc
mov
pusha
inc
cmp
or
and
shlb
adc
loop
and
and
int
xorb
pop
mov
or
movsl
daa
mov
insb
mov
cmp
jecxz
fs
js
sarb
lea
ja
adc
inc
fcompl
jmp
push
push
fwait
push
mov
cs
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
rcll
bound
pop
bound
cmp
pop
cmpsb
xlat
aad
sar
hlt
cmp
pop
inc
and
jg
mov
sbb
push
mov
mov
fcmovu
std
xor
shlb
mov
sahf
mov
fcmovbe
aaa
inc
dec
xor
out
mov
adc
cmp
mov
repz
push
add
cmp
push
xchg
fistl
sahf
mov
mov
xlat
sbb
data16
pop
cmp
ja
pop
fisttpl
cmpsb
mov
push
or
cmp
addr16
jno
ljmp
dec
jmp
int
xchg
cld
lods
xlat
ljmp
scas
repnz
add
ds
je
adc
or
scas
rcr
or
repz
pop
jno
addl
jb
mov
fnsave
movq
push
mov
jno
call
addr16
jp
int3
or
lods
sub
fistpll
rol
dec
movsl
jae
push
jecxz
fisubrl
and
das
jnp
mov
shlb
xchg
and
gs
fistpl
add
or
lods
es
mov
adc
out
mov
arpl
mov
xlat
int3
xchg
inc
mov
push
stc
test
outsb
sti
adc
shrb
lds
pop
lock
test
lods
xchg
imul
lcall
enter
inc
mov
bound
jnp
fdivrp
push
lret
mov
stc
cmc
push
cmpsb
ljmp
inc
xchg
stos
mov
pop
outsb
xor
out
mov
das
aaa
dec
inc
push
mov
jns
in
sub
mov
loop
sub
dec
mov
out
lock
mov
repz
mov
push
mov
push
sub
pop
das
mov
push
sub
mov
fwait
addr16
les
fdivl
clc
inc
xor
and
mov
mov
jecxz
stos
adc
repnz
push
push
shlb
js
mov
sarl
cli
cli
shll
jno
lea
pop
fcom
and
push
jp
push
mov
cs
cmp
loope
les
out
enter
mov
sub
sub
inc
jle
push
das
and
mov
adc
bound
lods
fdivr
jmp
jb
mov
and
aas
push
lods
cmpsb
and
int
fucomi
xor
test
xchg
push
jecxz
fistps
push
mov
xor
mov
mov
loop
push
add
mov
adc
xor
daa
stos
cmp
and
out
cmp
repz
mov
ja
inc
and
loop
jl
mov
into
sbb
scas
sbb
lahf
push
push
xor
aaa
rcl
mov
dec
pop
or
push
sub
sbb
movsb
leave
adc
lds
movb
xchg
adcb
jmp
test
fldt
or
fs
cmpsb
add
outsl
repz
jl
ss
and
pop
test
cmc
jg
sub
adc
daa
push
push
mov
jge
mov
data16
daa
in
mov
and
daa
or
sarl
mov
jno
xor
mov
mov
push
mov
mov
icebp
in
aaa
cmp
mov
cmp
push
dec
lods
jbe
aam
xor
dec
int3
out
jecxz
jae
and
xor
fstl
imul
mov
hlt
outsb
xchg
paddusw
or
les
xor
xchg
int3
ds
pop
lock
sub
xchg
mov
in
sbb
ljmp
cmc
and
sbb
pop
int3
mov
mov
sbb
frstpm(287
mov
push
insb
inc
mov
add
xor
popa
cltd
xlat
fistl
aam
xchg
cmp
icebp
iret
outsb
lods
mov
mov
pop
repz
pop
fldt
in
outsb
test
std
hlt
lock
rcll
adc
aam
into
or
and
fs
lods
mov
jb
aas
lret
mov
call
psubusw
fnstsw
inc
add
cmp
sub
sbb
outsl
stc
xor
adc
push
in
dec
imul
sub
cmovle
nop
pop
pop
imul
pop
ret
cltd
lds
pop
inc
sbb
out
mov
cmp
popf
iret
inc
fldt
inc
sbb
pop
dec
roll
test
jg
into
mov
outsb
insb
jl
jle
outsl
mov
aaa
cmpsl
jp
xchg
lcall
aaa
xchg
pop
aas
das
movsb
in
cmpsl
xchg
add
push
adc
sahf
dec
idivb
nop
xor
popf
and
and
jmp
add
mov
das
out
popa
stos
outsl
popa
pop
gs
ds
adc
test
cwtl
fcomps
dec
nop
mov
out
mov
cwtl
xchg
cmp
inc
int
push
int
xchg
jecxz
xor
dec
dec
pop
sub
lahf
pop
inc
js
cltd
lcall
lock
push
lock
fcomp
and
repz
push
mov
jmp
call
fstps
cmpsl
scas
xor
mov
cld
jne
sub
es
clc
jo
sahf
in
fnstsw
mov
clc
lret
inc
xor
cmp
stos
dec
mov
push
imul
lcall
inc
cmp
mov
call
jmp
mov
and
mov
popf
les
inc
xor
inc
addr16
pop
lcall
inc
or
inc
stos
sti
andl
addr16
or
adc
inc
fsubs
movsl
iret
mov
test
dec
notl
adc
pushf
and
mov
in
xchg
nop
pop
xchg
loope
pop
dec
les
daa
mov
push
pop
xchg
xchg
ret
pushf
sbb
sub
add
push
add
inc
lock
cmp
sub
flds
iret
or
pop
push
int
and
or
xor
mov
ret
cmpsl
add
outsb
xchg
out
inc
mov
repz
cmp
aam
loope
fimuls
lods
out
and
adcl
fnstsw
xchg
lds
sbb
and
out
push
cs
pop
ljmp
leave
cs
hlt
lods
test
jle
adc
xchg
mov
add
js
rcl
dec
popa
pop
fs
mov
sub
pop
dec
and
xchg
in
xor
fdivrp
sub
jle
and
mov
jns
cmc
popa
push
xchg
push
xchg
inc
xchg
pusha
push
ror
jne
scas
cmpl
movb
and
mov
aas
adc
cmc
shll
andl
dec
cmpl
push
lcall
xor
fyl2xp1
sti
jmp
scas
rcl
adc
adc
out
push
int
leave
pop
dec
inc
jl
xor
jmp
iret
pop
pop
out
jg
cld
mov
sbb
ja
push
std
nop
lret
push
dec
xchg
mov
gs
adc
push
jnp
jo
xchg
mov
pop
xchg
les
dec
lock
rcl
xorb
mov
ds
nop
aaa
mov
lcall
or
mov
ret
gs
je
add
aam
push
xor
fisttps
or
lahf
loope
adc
push
psrlq
call
in
jp
shlb
and
xor
insl
pop
popf
sahf
enter
mov
pushf
mov
fsub
insb
nop
push
dec
jo
xor
movsl
test
cmpsl
adc
dec
sahf
inc
aad
addl
xchg
push
dec
xlat
out
push
aaa
cs
je
pop
aad
in
push
add
mov
cli
xlat
lods
mov
inc
stos
push
cmp
rclb
xchg
adc
jbe
stos
jp
into
ss
mov
push
and
xchg
dec
lea
out
aas
aaa
cld
arpl
aad
xor
push
push
mov
xchg
or
and
insl
scas
push
scas
dec
mov
jb
xchg
inc
sub
inc
cwtl
int3
xchg
aas
and
mov
mov
sahf
pusha
inc
push
lret
cmp
in
xchg
pop
and
je
xor
lahf
iret
inc
sbb
jg
loopne
in
notl
sbb
arpl
push
int3
bound
insl
cmp
xchg
das
xchg
xor
adc
cmc
or
mov
sbb
in
jecxz
mov
xor
cs
push
sahf
jnp
add
pop
and
fstpt
cmp
jl
push
mov
pop
pop
or
sub
jb
push
insl
movsb
or
add
cmp
testl
fmull
dec
repnz
pop
or
adc
xor
scas
cmp
cmpsb
and
enter
pop
or
jno
rcrl
shr
lahf
push
sahf
insl
jne
arpl
push
adc
push
mov
xchg
xchg
cltd
xchg
test
xchg
pop
outsb
and
xor
fwait
push
and
cmpb
pop
fdivrl
adc
ljmp
shrb
push
sub
scas
sub
rclb
xor
movsl
cmp
jns
or
clc
iret
or
mov
adcl
mov
repz
mov
pxor
out
iret
rcrl
out
and
call
xor
add
or
std
jbe
cld
dec
daa
sbb
loop
test
xchg
or
loop
add
mov
enter
dec
sbb
je
mov
adc
data16
and
dec
dec
arpl
sbb
inc
aam
mov
loop
jl
cld
cmpsb
cmp
jle
pop
pushl
ss
imul
adc
outsb
mov
das
pop
mov
nop
in
fildll
leave
mov
sarb
xor
cwtl
push
xor
test
sbb
dec
ds
pop
sbbl
mov
xchg
push
xor
out
loopne
negb
or
sub
lods
mov
jns
mov
add
lret
loopne
les
mov
cmp
arpl
jp
cmpb
in
push
inc
orb
lods
jl
mov
push
add
in
sti
push
pushf
add
push
cmp
inc
frstor
xor
jmp
xchg
cmp
int3
jg
push
out
adc
inc
dec
ret
aad
test
lcall
cmp
mov
jne
mov
fsubrl
mov
jmp
sbb
arpl
inc
cmp
pop
addr16
mov
test
jae
mov
jb
popa
pop
push
jns
fcompl
aaa
int
cvtps2pd
cmp
jg
mov
jecxz
test
xchg
jb
add
sbb
xor
leave
cmp
popa
cld
bswap
out
cmp
lret
loope
push
incl
push
dec
jl
jp
push
jle
les
icebp
imul
push
dec
jne
out
incl
jo
mov
call
lea
dec
sbb
test
mov
mov
push
pop
push
dec
test
pop
insb
sti
ret
popl
mov
push
cltd
jns
mov
int3
add
push
or
scas
jne
popa
or
imul
loope
cmp
add
jns
push
pushf
fsubrl
mov
shl
cs
je
negl
fs
mov
nop
popf
xchg
insb
aad
add
aaa
aad
and
mov
imul
aaa
adc
pop
je
adc
sahf
fildll
in
inc
inc
xor
mov
daa
dec
jecxz
enter
sbb
scas
arpl
ss
mov
addr16
lods
shr
dec
insl
add
fldl
cmp
mov
dec
sarb
push
lds
push
xor
jnp
lret
in
jmp
stos
ret
mov
shll
sub
pusha
pop
mov
xchg
jp
adc
mov
cmp
fs
push
sbb
and
jmp
xchg
cs
imul
jp
pop
jno
movsb
in
stc
push
cmp
out
scas
pop
cli
sarb
gs
aam
add
daa
popa
dec
ds
jbe
fisubs
and
inc
xchg
insl
sub
dec
imul
fiaddl
orb
inc
add
test
or
in
jecxz
inc
add
in
adc
sahf
cmp
ret
cmpsb
rcr
arpl
repz
imul
cmp
sub
or
bound
jp
clc
xor
adc
adc
lret
aaa
add
std
sub
lods
fwait
and
inc
cmp
stc
xchg
leave
jae
mov
dec
dec
aam
xor
bound
cmp
jne
xchg
push
sub
sub
stos
cwtl
mov
mov
int
das
repz
mov
cltd
ret
mov
jge
push
jne
xor
or
jnp
cwtl
ret
mov
aam
mov
fistps
pop
repnz
enter
sbb
repz
dec
insb
or
shlb
loope
mov
mov
repz
sahf
in
sbb
aas
xsha256
cmpsb
push
jg
rclb
mov
and
push
cmp
arpl
in
fmul
inc
test
test
cmc
shrl
scas
cmpb
inc
push
mov
xchg
daa
popf
push
pop
scas
std
or
ret
pusha
inc
fstpt
test
popa
mov
adc
adc
cwtl
or
shl
mov
lods
mov
scas
lds
rclb
jge
xchg
sarl
lock
or
sbb
stos
dec
adc
dec
popl
popa
enter
cmp
xchg
movsb
and
sbb
pop
lcall
dec
inc
xor
je
scas
fcmovnbe
dec
sbb
fwait
repz
push
jle
aad
xchg
push
add
movsl
xchg
pop
push
imul
iret
sbbb
dec
adc
add
loopnew
mov
sbb
dec
add
adc
and
push
xlat
adc
push
pop
test
sti
mov
pop
jnp
imull
mov
cld
push
nop
test
test
out
aam
dec
notl
add
adc
in
outsl
out
stos
or
jne
insl
push
sub
ss
jnp
inc
inc
inc
push
aam
mov
mov
popf
pop
mov
ret
push
fs
jns
push
inc
and
jl
pop
cs
in
pop
scas
test
les
mov
ljmp
rorl
xor
andl
and
xchg
xor
mov
cmp
mov
icebp
sub
lds
mov
ljmp
dec
fcomi
or
jmp
jb
push
rcll
mov
out
cmp
fsts
pusha
cmpsl
dec
test
test
call
lret
in
shr
sub
out
add
ljmp
push
xchg
lock
shll
cmp
in
cltd
mov
inc
ficoms
xchg
mov
mov
pop
xchg
cltd
call
jae
jecxz
sahf
jl
lds
cmp
rcr
jmp
ja
outsl
cmp
mov
ret
jb
sub
in
sub
pusha
out
and
sub
pop
pushf
test
dec
ja
mov
jbe
iret
jge
test
mov
pop
fdivs
fisubrs
dec
pop
sti
enter
mov
lcall
scas
cmc
bound
addb
ja
dec
mov
pop
adc
ljmp
mov
inc
jp
jge
out
sbb
push
add
add
fistl
insl
sbb
imul
nop
and
jge
mov
popa
and
call
ds
sub
rol
pop
bound
jae
jg
adc
add
sub
clc
cmpb
xor
mov
scas
pop
mov
push
cmpsl
mov
jb
cld
lret
jb
lahf
sub
or
not
and
stos
aas
jbe
cmp
mov
sub
pop
cmp
or
pop
out
xchg
cmpl
stc
outsl
insl
push
cld
xchg
adc
es
xor
loop
negb
and
sbb
mov
pusha
inc
int
dec
bound
and
mov
das
ja
cmpsb
xchg
xchg
xor
rclb
cmp
xor
das
jge
sub
mov
je
fnsave
adc
cmp
push
add
inc
jge
sub
push
ljmp
mov
sub
insb
or
das
cwtl
bound
add
cmp
add
jo
aas
mov
sbb
mov
cmp
cmp
scas
insl
push
das
cmp
lds
cwtl
popa
push
mov
mov
std
lret
and
into
jno
or
mov
and
repnz
jmp
sub
shl
or
out
scas
jb
xchg
pushl
sti
rcr
jle
mov
pop
aad
mov
inc
repnz
mov
sbb
rsqrtps
cmpsb
in
pop
inc
xchg
stos
xchg
xor
push
push
aam
jne
sbb
sbb
pop
cmpsb
cmp
popa
aas
je
xchg
add
xchg
jle
dec
xor
cmc
sub
jne
cmp
xor
sbb
adc
pop
fwait
push
mov
idivw
outsb
shrl
in
adc
mov
jle
inc
mul
lahf
jg
mov
xchg
js
xchg
inc
pop
cmp
pop
int3
mov
xchg
cmpsl
mov
push
cwtl
pop
mov
add
adc
mov
or
mov
mov
ds
icebp
dec
aad
adcb
xorl
xchg
mov
mov
add
pop
std
loope
mov
imul
out
cmc
stos
jb
mov
stos
xlat
push
jge
jmp
out
cmp
pop
leave
mov
imul
nop
dec
xor
in
jecxz
jns
sahf
out
enter
push
adc
les
cmpsb
add
mov
lds
pop
repnz
data16
fwait
mov
ds
and
inc
aam
cli
jns
xchg
sub
push
cwtl
inc
lods
cmpsb
xor
outsb
out
xchg
out
push
pusha
dec
inc
mov
jmp
mov
jnp
pop
fidivrs
sbb
jns
xchg
sbb
jno
hlt
test
cmpsl
lods
cli
shrl
ret
arpl
cmp
sarl
lock
sbb
push
pop
test
xor
int3
push
out
insb
into
jmp
cmpsb
xor
sbb
enterw
mov
cmp
jmp
pop
shlb
cmp
leave
enter
push
cmp
mov
pop
rorl
js
sarl
test
test
sahf
pusha
xlat
jle
mov
loopne
jbe
cltd
cmpsl
lea
pop
test
pop
xor
pushf
or
out
dec
cmp
mov
mov
lea
stos
repz
shrl
popa
js
mov
ljmp
lock
lret
pop
shlb
sahf
adc
lods
pusha
scas
sub
lret
outsb
jl
iret
nop
bound
test
jl
pop
mov
jbe
xor
sub
and
inc
inc
repz
lea
inc
rcrl
out
sbb
subb
loop
push
mov
mov
loope
icebp
ds
adc
addr16
das
je
repnz
test
add
push
jbe
test
cmp
sti
push
adc
inc
std
pushf
sbb
xor
push
or
push
adc
xlat
sub
hlt
addl
dec
filds
xchg
and
idiv
fstpl
mov
int3
sahf
out
cwtl
imul
ljmp
lret
mov
mov
dec
sub
and
xchg
add
sub
cmp
js
xchg
fwait
pushf
test
je
addr16
adc
outsb
scas
push
adc
jge
stos
jecxz
or
push
icebp
jb
call
dec
sarb
mov
aad
xchg
lods
iret
cmp
out
mov
dec
jle
sbb
test
adc
into
jg
xor
lods
xchg
es
outsb
aaa
mov
jge
push
lcall
push
xchg
repz
push
fsubl
inc
movl
jg
push
cmp
adc
cmpsb
mov
movsb
addl
push
dec
xorl
cwtl
pop
pop
mov
adc
mov
testl
or
in
repnz
xchg
adc
out
bound
ds
pop
dec
jecxz
int3
lcall
xor
mov
mov
mov
mov
inc
or
jae
pop
ret
pushf
pop
push
add
mov
ss
cltd
push
mov
jmp
sub
pop
es
push
adc
push
cmpsl
in
adc
pusha
jmp
imul
xor
test
icebp
inc
pop
stc
jle
push
lret
leave
test
sub
outsb
cltd
mov
mov
jns
lea
jp
dec
fcmovnu
ret
scas
aad
rol
pop
dec
mov
mov
cltd
cmp
xchg
cmc
popa
pop
test
out
popf
sub
test
lcall
push
ss
aam
and
iret
inc
in
sti
lock
fxch
push
jg
dec
in
sahf
push
ds
sbb
test
test
nop
inc
ret
cmp
fdivs
icebp
ret
les
mov
xor
or
movsl
pop
pop
mov
cmpsb
xchg
mov
mov
mov
cmp
sti
push
xor
addr16
in
loop
sbb
aam
lahf
xor
jge
scas
sub
adc
pop
adc
pushf
adc
mov
jno
sbbb
jo
sbb
in
mov
inc
xor
inc
dec
or
add
movsl
aas
dec
test
sbb
pop
imul
and
dec
hlt
or
ret
pop
in
lret
icebp
pop
lds
and
add
je
pop
inc
rolb
push
inc
prefetch
and
or
pop
push
and
mov
mov
inc
sbb
out
sti
pop
popf
nop
push
movsb
andl
push
or
lea
aam
push
adc
daa
adc
sub
mov
push
test
xchg
in
or
sbb
cld
lods
add
dec
xlat
rol
out
mov
rclb
loop
lock
mov
push
mov
and
fs
mov
fs
sarb
and
dec
cmpsb
adc
or
shlw
xlat
cs
in
ja
insb
data16
jge
lret
mov
jg
stc
pop
dec
cmp
adc
hlt
inc
and
pop
xchg
inc
mov
push
mov
lock
push
fildll
add
test
cmc
mov
test
sub
push
mov
subl
xor
add
dec
mov
enter
adc
mov
jl
popf
inc
adc
xor
xchg
imul
push
sub
dec
les
int3
data16
aas
ret
lods
in
ret
movb
push
push
xor
cmp
rorl
les
lahf
ficomps
inc
leave
fs
sbb
sahf
jmp
das
jecxz
and
pop
pop
subl
ss
jle
mov
stos
adc
fwait
pop
mov
stos
push
cltd
push
pop
push
ds
mov
and
pusha
aam
mov
in
imul
mov
leave
mov
mov
push
mov
insl
sub
cmp
jns
hlt
lock
adc
dec
add
mov
pusha
cltd
mov
loop
adc
dec
jg
cmc
sbb
jge
inc
jo
stos
les
jo
nop
cli
imul
out
mov
in
test
adc
dec
cltd
or
cmp
data16
stos
adc
pop
mov
jl
mov
fldt
mov
es
cli
and
xor
jge
mov
shr
jne
call
int
shlb
pop
mov
sbb
push
test
cli
in
hlt
and
jl
leave
sbb
mov
addr16
pop
jns
mov
stos
mov
push
xor
mov
jnp
or
cli
push
jle
das
stos
ret
lret
outsb
jb
jmp
je
sbb
and
out
ss
xchg
add
je
mov
cmp
dec
cmp
inc
xlat
pop
mov
push
notb
add
lods
push
mov
mov
and
jge
xor
pop
sub
ljmp
push
push
fisttpl
loopne
add
inc
lret
mov
mov
push
mov
aad
into
popa
psubusw
inc
aad
sbb
mov
lods
push
xchg
xor
roll
sbb
sub
sub
mov
pop
pop
cmp
push
les
dec
mov
mov
cmpl
loop
inc
pop
pop
mov
lods
or
xchg
or
dec
xor
xor
imul
pop
jge
arpl
and
mov
dec
pop
and
inc
dec
adc
jmp
pop
mov
push
lahf
out
push
or
fiadds
test
xlat
jmp
das
mov
sub
loopne
pop
xor
ret
ds
outsb
movsl
pop
xchg
lret
les
jb
aam
repnz
adc
mov
add
xorl
dec
ret
out
ja
sbb
adc
sub
jno
movsb
push
mov
pop
push
rclb
jne
out
movsb
push
mov
fidivrl
jp
out
loope
cmp
lods
xor
fwait
or
stos
cwtl
repnz
dec
cmp
inc
sbb
out
fisubrl
mov
adc
popf
jle
add
mull
pop
int
cmp
aaa
in
pop
jmp
out
mov
ss
sbb
cmp
pop
inc
mov
cmp
stos
fs
jge
xor
pop
push
adc
cmp
pop
sbb
jne
cmpsb
push
pop
pop
xchg
shlb
jecxz
mov
mov
mov
mov
add
popf
jb
mov
std
sbb
pop
xchg
pop
cltd
in
xchg
push
or
pushf
test
int
cmp
cld
inc
and
sub
lcall
pop
das
adc
mov
xchg
mov
int3
mov
inc
push
adc
mov
aad
or
fisttpl
add
inc
dec
mov
loope
sub
insb
cmp
push
xchg
dec
cmp
mov
jmp
mov
dec
push
and
mov
ljmp
jle
sbb
loope
lcall
in
cmp
adc
out
xlat
push
pop
or
pop
push
lods
cltd
pop
push
imul
push
enter
int
mov
mov
addr16
out
mov
aaa
add
mov
push
bound
sub
lock
leave
xchg
jns
test
out
xchg
xor
notb
mov
mov
leave
dec
xor
cmp
pop
mov
mov
add
outsl
out
sub
in
loope
sbb
mov
push
std
xchg
in
enter
loopne
inc
iret
jns
loope
jbe
mov
cmp
mov
outsl
cli
cmc
adc
lds
repnz
in
adc
push
cld
mov
push
cmp
ret
hlt
pop
sbb
psubusb
pusha
lret
les
jno
cwtl
add
js
fisubl
xor
mov
push
mov
jp
jno
jne
jae
mov
loopne
insb
test
adc
mov
xlat
mov
call
sbb
sarl
add
fwait
add
xchg
clc
cmpl
inc
inc
scas
shl
pop
scas
fcmovbe
clc
adc
push
pop
cmpsb
loopne
mov
mov
jne
stos
lcall
ds
mov
push
sti
insl
bound
jmp
mov
mov
dec
jne
mov
mov
sub
popa
loop
sub
pop
rcll
cmpl
and
loopne
movsl
xchg
data16
rcll
xor
in
or
test
outsl
xor
and
shll
mov
adc
push
xor
xor
sub
mov
insb
stos
add
stc
or
and
dec
jl
test
in
add
add
pushf
int
mov
xorb
mov
shlb
cmp
cs
loop
pushf
test
lcall
pop
in
add
bound
push
adc
push
mov
cmpsl
loope
dec
xor
push
sub
stos
jnp
data16
fwait
xor
insb
inc
insl
sub
xchg
sbb
cwtl
fdivl
rclb
xor
out
scas
loope
icebp
jmp
xor
and
mov
inc
stos
mov
test
cmc
xor
mov
xor
sub
rol
mov
sbb
mov
test
ljmp
xchg
mov
cmp
bound
test
jle
popl
xor
adcb
push
mov
out
mov
jmp
pop
ds
nop
sbb
loop
test
jnp
hlt
push
fidivrs
cmp
cwtl
mov
jne
in
push
aad
inc
xlat
stos
nop
xor
arpl
out
jp
sub
pusha
lock
add
out
xchg
pop
inc
xchg
mov
xchg
pop
jge
mov
xor
sbb
pop
sbb
push
or
or
cmp
scas
sub
fcmovu
mov
sbb
adc
ret
add
mov
or
lea
adcb
stc
stos
dec
lahf
xchg
in
xlat
jns
sub
lret
xlat
or
movb
shll
ret
dec
sub
ljmp
ficompl
jae
dec
and
std
lea
shrb
cmovp
cwtl
or
shlb
and
xchg
loop
pop
or
iret
punpckhbw
pushf
inc
movsb
xchg
out
test
mov
scas
jo
fs
lock
in
jp
cltd
or
dec
inc
push
dec
mov
xor
sahf
adc
stos
ss
pusha
inc
inc
fdivp
xor
jl
out
lds
lds
sub
and
in
inc
sbb
jno
sub
stos
and
push
jp
push
sub
icebp
xchg
sbb
stc
jo
push
xchg
mov
inc
push
fcoms
push
jbe
lock
jmp
mov
xor
sbb
or
add
std
cmp
out
sub
sub
test
int
jo
stos
mov
jae
xchg
in
movsl
fsqrt
pop
int
sbb
stos
popa
movsb
sub
dec
outsb
imul
sbb
inc
mov
mov
push
cli
jecxz
or
and
cmpsb
push
mov
xchg
sbb
rcrl
insb
push
or
insb
and
test
cli
fsubs
jmp
jno
sbbb
pop
mov
aad
test
sbb
daa
push
cmp
inc
mov
test
imul
test
jecxz
stos
sbb
xchg
fildll
adc
cld
cmp
int3
jns
fcom
cs
loope
inc
pop
test
or
inc
iret
pushf
and
bound
mov
in
pop
xor
scas
das
sahf
cmp
insb
mov
stos
int3
mov
mov
cwtl
outsl
inc
aad
in
stc
repnz
mov
push
push
pop
out
or
inc
test
pop
xchg
nop
jmp
pop
add
push
test
mov
loope
nop
andl
insb
adc
mov
loop
ss
dec
ret
sti
in
insb
pop
or
scas
je
sub
test
lret
or
dec
jle
nop
add
add
popf
cmp
aaa
mov
stos
dec
repz
shll
and
push
cmp
inc
mov
jo
inc
fidivrl
jb
cmp
push
leave
fs
sub
fldl
ss
xchg
inc
rorb
jp
sarl
adc
lret
xchg
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
bsr
push
ret
jmp
bound
pop
cmpb
mov
jns
push
xlat
loopne
ret
jo
sub
push
mov
gs
fsubs
jmp
xor
or
cltd
inc
hlt
mov
cmc
push
adc
fs
out
adc
lret
jp
jns
imul
in
loopne
fcoms
icebp
jnp
pop
xadd
jp
clc
cltd
xchg
and
cmp
movlps
mov
inc
jmp
loopne
es
sub
adc
ret
js
push
xchg
std
stos
xchg
jbe
ljmp
add
mov
xor
xchg
movsl
jno
fsubr
jg
and
jns
jne,pn
lret
out
test
jmp
pushf
lret
xor
sbb
ret
xor
dec
sub
add
lods
dec
mov
dec
nop
mov
adc
fisttpll
sub
out
adc
pop
push
push
adc
push
push
pop
shll
cmp
je
jg
xor
mov
xchg
jo
adc
decl
jno
leave
mov
xchg
sub
dec
test
jbe
xor
inc
dec
aas
dec
pusha
clc
mov
inc
push
inc
cltd
inc
stos
les
rolb
enter
iret
mov
inc
xor
mov
mov
aam
jbe
add
xor
test
lods
aam
enter
sub
lcall
xor
pop
sbb
shlb
outsl
clc
out
jnp
xor
mov
ljmp
jecxz
xor
push
mov
lahf
jo
gs
imul
ror
cmc
stos
or
mov
xchg
fstps
lcall
repz
data16
cli
cs
mov
xchg
popf
int
popa
subb
add
divl
and
sti
adc
cmp
push
hlt
cwtl
sti
jp
push
mov
icebp
arpl
negl
push
loopne
jbe
sti
jae
shl
dec
out
adc
jecxz
repnz
bound
or
mov
out
push
xchg
pushf
int
lods
stc
jmp
pushl
cmp
arpl
in
lret
sub
and
mov
rcr
in
xor
sbb
jmp
jp
sbb
adc
push
and
xchg
imul
cltd
hlt
loopne
cmp
mov
loop
enter
movsb
outsl
cmp
mov
outsb
jns
mov
xchg
inc
pop
es
xlat
xor
imul
cmpsl
push
mov
cpuid
cmp
sub
push
push
push
mov
and
lods
mov
loopne
xchg
fcmovnu
mov
xor
mov
mov
push
lret
sub
fwait
dec
subb
popf
push
mov
movsb
and
push
cwtl
or
cwtl
daa
add
mov
add
in
sub
sahf
xor
cwtl
aam
mov
xlat
mov
add
out
pop
arpl
mov
pop
or
or
and
in
jecxz
xor
jae
jns
ds
and
mov
and
push
jmp
je
sti
mov
jne
cmc
xchg
sbb
or
xorb
inc
nop
bound
aad
bswap
mov
mov
leave
pop
inc
popf
cltd
push
daa
test
jns
leave
idiv
test
call
dec
push
enter
sub
inc
pushf
push
lret
push
add
and
fdivp
adc
insl
fidivs
outsb
enter
sub
in
icebp
fnstenv
jbe
add
cwtl
sbb
inc
lret
fcomip
xchg
test
jmp
mov
test
int
add
int
je
inc
jne
dec
es
jns
adc
inc
insb
gs
jne
fistl
loopne
addr16
and
mov
inc
mov
push
sarb
stos
pushf
dec
inc
mov
sbb
adc
push
push
lods
xlat
data16
aas
stos
std
cltd
je
jne
das
decl
shl
cmp
notl
mov
fs
loop
cmovs
fisttpl
icebp
insb
cmc
pop
rcll
fistl
mov
cs
xor
in
xor
adc
xor
hlt
aam
pop
hlt
cwtl
imul
inc
xchg
and
pop
inc
add
inc
out
push
inc
scas
fisttpll
lcall
mov
jp
add
jnp
pop
dec
jmp
sti
push
mov
mov
leave
iret
mov
fildl
nop
inc
icebp
mov
xchg
dec
and
sub
lock
mov
lret
loopne
push
mov
ficompl
repz
push
cmp
pop
nop
test
sub
pop
adc
pop
iret
ret
push
ret
sub
stos
sub
fs
je
movsb
jg
mov
add
cmp
sbb
dec
push
lahf
adc
xchg
and
pop
inc
inc
shlb
dec
icebp
xchg
imul
insl
pushf
adc
push
jbe
jae
pop
and
movsl
lock
imul
mov
ret
adc
sahf
cmpsl
pop
jl
cmp
jo
push
aas
push
cmpsl
push
pop
dec
lock
inc
mov
pop
lahf
mov
xchg
xor
push
pop
orb
das
js
movsl
cltd
call
xor
or
imul
aaa
cmp
outsb
sub
lcall
sub
dec
rcrl
out
push
insl
loop
out
cmp
mov
enter
lds
ret
lret
sbb
pop
mov
repnz
add
xchg
in
pop
sbb
fistl
adc
inc
mov
and
jle
popa
das
mull
cmp
fcoms
das
mov
xchg
mov
filds
movsl
xor
dec
out
dec
add
xor
stos
xchg
push
mull
mov
pop
xchg
fldl
dec
daa
jns
es
cmp
jnp
or
jbe
mov
pop
movl
js
jo
mov
fidivl
scas
stc
jns
jne
inc
pop
inc
aam
imul
mov
outsl
ja
fdivs
fnsave
adc
mov
ret
das
dec
pop
jecxz
fstl
in
xchg
loope
js
dec
or
mov
out
push
dec
fcmovnb
sti
out
xchg
daa
mov
sbb
sti
iret
inc
mov
mov
js
mov
popf
mov
add
push
pop
es
add
inc
mov
mov
popf
xchg
call
mov
cltd
sbb
jnp
and
into
pop
popf
pop
sarl
imul
mov
and
jge
js
cmp
call
push
shlb
in
adc
insb
pushf
mov
mov
ffree
xor
shlb
adc
outsl
loopne
lahf
add
pop
test
xchg
cmp
aas
inc
movsb
jl
andl
jle
bound
push
lock
popf
arpl
out
add
rcll
std
mov
dec
cmpsl
stos
sti
scas
inc
mov
cmp
outsb
mov
fisubrs
scas
imul
dec
cmp
mov
add
ret
in
pop
neg
rorb
movl
push
mov
push
push
stos
add
inc
outsb
xor
mov
push
pop
bound
ret
jbe
jge
loope
daa
loop
mov
push
das
pop
aam
cltd
and
adc
xor
mov
sub
mov
insb
push
jae
cli
or
ret
or
sub
fwait
shrb
daa
call
out
cli
sub
mov
xor
sbb
dec
push
int
push
in
in
cmp
xor
cmp
inc
cltd
shrb
or
jo
adc
ljmp
int3
xor
pop
cmp
cmp
mov
sub
shrl
mov
jle
xlat
std
mov
xchg
mov
call
and
in
mov
sbb
xlat
scas
stc
xor
jmp
jmp
jmp
pushf
jg
inc
mov
pop
orb
xor
in
jecxz
enter
cld
xchg
inc
aas
jae
outsb
sahf
aad
push
test
inc
sub
xorl
sahf
popa
fs
rcrl
xor
in
test
leave
repnz
mov
in
pusha
in
data16
fs
or
les
ret
ds
sbb
cli
dec
cwtl
fistps
call
std
pusha
ret
cmp
cmp
fistpll
xor
lret
jle
lock
mov
inc
dec
mov
jge
test
aas
out
and
mov
hlt
add
xchg
ret
negl
bswap
shrb
jle,pn
ljmp
je
inc
push
decb
mov
jno
add
lds
test
aaa
in
mov
or
inc
cmc
jbe
inc
add
push
lret
jl
dec
sahf
popf
mov
push
scas
jnp
mov
dec
sbb
in
lea
add
push
pop
mov
dec
inc
cmp
in
sbb
mov
cmp
sbb
mov
ficoms
cmpsb
daa
dec
mov
xlat
adc
mov
mov
scas
add
lahf
sahf
out
test
fcoms
dec
xchg
push
mov
in
sub
lea
arpl
xor
jge
pop
out
dec
pop
push
repz
mov
jg
dec
mov
mov
adc
mov
mov
dec
sub
push
xor
mov
dec
cwtl
xor
xchg
mov
dec
mov
mov
mov
test
push
sbb
or
fdivl
adc
add
pusha
xchg
stos
inc
push
and
stos
fcoml
cmp
lock
mov
jno
jle
rorl
pushf
mov
mov
test
push
aad
or
and
jg
xor
inc
ret
sub
icebp
lods
sbb
adc
mov
adc
and
inc
rcll
adc
lcall
mov
stc
in
jl
or
imulb
jge
inc
ss
clc
loope
das
into
and
dec
test
fbstp
sub
xchg
xor
rcrl
pop
pop
inc
push
sbb
xchg
add
mov
les
and
aaa
pmullw
jns
stc
lds
stos
hlt
mov
loopne
xchg
out
jnp
inc
add
dec
in
icebp
adc
adc
add
je
or
mov
jb
test
pop
lock
xor
mull
add
adc
add
push
test
pop
and
dec
bound
pop
int
das
movsl
jg
lret
dec
orl
jp
aad
lods
ss
mov
testl
shll
pusha
sbb
mov
dec
mov
mov
pop
fwait
mov
stc
test
filds
cs
fsubrl
cmc
loopne
int3
push
jno
mov
mov
add
inc
pusha
and
cmp
add
dec
cmp
std
cmp
sbbl
call
in
adc
in
aas
dec
xor
push
xor
ja
sbb
divl
cs
icebp
jp
mov
mov
sahf
mov
dec
mov
inc
adc
movsb
push
or
lcall
or
mull
sbb
lcall
ss
and
inc
jl
into
jnp
or
ficomps
dec
and
pop
mov
dec
in
fwait
ret
stc
cmovnp
mov
test
fildl
cltd
nop
pop
call
xchg
in
loop
jmp
or
adc
xchg
test
sub
popa
fwait
jo
inc
sub
int
xchg
and
imul
pop
or
loop
pop
dec
fcom
sbb
inc
mov
sbb
cmpneqps
mov
and
mov
add
push
add
dec
pusha
sbb
sbb
sbb
or
arpl
lret
xor
sarb
and
lret
jb
rolb
cmp
jo
mov
pop
push
ljmp
rorb
into
insb
and
data16
add
sub
outsl
push
mov
mov
in
inc
stc
push
inc
in
mov
inc
mov
sub
repz
mov
add
push
out
mov
cmp
in
popf
cli
ss
insb
lcall
es
or
data16
inc
call
stos
clc
dec
xor
test
sub
loopne
je
rcrb
aad
push
inc
inc
imul
imul
or
push
outsb
pop
fwait
push
mov
dec
cs
pop
negb
mov
or
shlb
inc
jae
sub
mov
xchg
mov
fwait
add
and
jp
jno
mov
in
push
xor
pop
nop
pop
je
inc
jecxz
cmpsl
jns
test
lcall
rorb
mov
repnz
inc
mov
push
popf
clc
sub
sub
add
or
mov
mov
divb
arpl
inc
push
test
stos
xor
lret
int
cmpsb
sub
push
es
test
mov
sbb
adc
xchg
and
adc
or
stc
aaa
loope
sub
mov
mov
or
push
pushf
insl
stos
stos
fnstcw
movsl
inc
outsl
and
xchg
stos
xchg
fs
sbb
inc
sub
mov
cmpsb
pop
ficompl
shll
add
xchg
pop
push
sbb
sub
dec
fbstp
pop
sub
nop
jle
mov
dec
inc
and
jns
gs
lahf
xor
jo
push
inc
adc
mov
je
repz
scas
push
xchg
jp
push
sbb
cmp
arpl
cmpsl
rcll
popf
cld
sti
dec
mov
iret
int3
outsb
mov
add
cmp
outsl
cmp
cmp
popf
mov
xor
cld
fwait
dec
nop
push
add
add
rorl
rolb
dec
incb
jle
movb
xrelease
rolb
mov
mov
pusha
lods
mov
lods
mov
mov
repz
dec
xchg
and
or
daa
push
dec
icebp
fnsave
shl
jmp
sahf
aam
test
shlb
mov
mov
lods
xor
push
adc
insl
ja
mov
mov
mov
sub
adc
mov
dec
aam
and
mov
jp
xchg
jno
imul
cwtl
enter
das
and
daa
imul
add
cmp
jge
mov
sub
jns
fistl
xor
repnz
in
clc
in
fwait
shll
sbbb
pop
rol
imul
lods
loope
sub
pop
and
push
sbb
mov
pop
cltd
rorb
xchg
test
mov
pop
xchg
inc
add
aad
or
push
push
jns
stos
jp
rcrb
xchg
jbe
mov
push
cltd
arpl
mov
pushf
and
pop
fmul
outsb
jp
ficomps
iret
in
add
dec
nop
fcomps
pushf
mov
xchg
dec
js
pop
cmp
dec
int3
cmp
in
aam
xchg
fisttpl
jnp
outsb
shl
aas
cmpb
pop
fldenv
inc
jmp
js
mov
scas
sbb
cmpsl
push
stos
ret
xorl
ljmp
cmp
mov
notl
int3
out
test
mov
lcall
andb
ficomps
mov
or
repz
and
dec
js
fisubrl
es
pop
jne
xor
pop
les
ja
scas
cmpsb
test
aaa
inc
xor
mov
sahf
out
cmp
or
jecxz
cli
sbb
jno
mov
jo
ljmp
or
in
fisttps
ret
push
mov
adc
fcmove
insb
dec
xchg
out
data16
adc
mov
mov
orb
mulb
ja
test
jl
das
test
movsb
rclb
mov
jb
and
aas
sub
xchg
pushf
mov
adc
mov
ds
dec
nop
inc
and
push
or
add
sbb
mov
dec
iret
mov
inc
inc
mov
fcmovu
sahf
aas
jle
loop
push
mov
sti
or
or
pop
mov
xchg
pop
cmp
mov
add
out
es
ja
push
jmp
push
rcll
fnstcw
sti
into
push
rcr
cmp
mov
pushf
repnz
int3
cmc
in
jae
in
mov
mov
adc
hlt
or
std
shll
cmp
xchg
movsb
mov
adc
out
and
out
mov
add
xchg
mov
sub
push
sbb
inc
call
jp
int
pop
ret
xchg
or
aas
cmc
adc
rcl
jbe
movsl
adc
mov
imul
stos
push
pushf
xchg
mov
addr16
outsl
inc
xchg
cmp
adc
jbe
xlat
add
mov
cmp
rep
dec
out
in
pop
addb
imul
outsb
insl
js
jne
and
and
push
shlb
notl
loope
aam
aaa
cmp
jnp
pop
insl
add
mov
inc
lods
mov
xlat
lcall
sbb
sub
push
adc
ret
icebp
and
sub
xlat
xchg
sbb
and
xchg
push
sbb
mov
mov
cmp
mov
rclb
not
stos
lds
arpl
jl
jmp
std
les
mov
dec
dec
cmpsl
xchg
inc
insl
stos
or
or
or
rclb
mov
sbb
pop
dec
jno
add
repnz
push
mov
test
jle
pop
add
xor
mov
adc
add
je
lcall
ljmp
in
adc
les
push
mov
and
pushf
inc
pop
aad
pusha
push
iret
movsb
shlb
sahf
lcall
pop
inc
lea
sahf
push
inc
stc
jecxz
loopne
jo
loope,pn
pop
insl
aam
push
push
xor
xlat
aas
or
mov
fiaddl
adc
mov
imul
cmp
pushf
inc
push
xchg
jle
add
aaa
inc
cwtl
add
inc
inc
dec
pusha
mov
xchg
dec
pop
xchg
ja
add
stos
test
std
fsubrs
test
pop
out
cmp
stos
or
inc
pop
xor
jle
dec
add
add
stos
mov
mov
leave
or
adc
loopne
or
lods
sbb
stc
addr16
dec
inc
lods
inc
in
sbb
and
mov
out
xchg
imul
fiadds
sub
adc
sbb
sti
ds
sub
jne
dec
cmp
jl
jbe
hlt
or
test
or
pop
jle
fldt
or
xchg
and
mov
fsubs
insl
mov
je
out
sub
sub
sub
adc
fld
or
xchg
arpl
mov
mulb
adc
jmp
cmp
inc
sbb
out
pop
cld
push
aaa
sbb
aad
pop
ret
movsb
repz
dec
push
fdivs
ja
outsb
addr16
test
cmpsb
jne
pop
mov
ja
out
sub
and
stc
pushf
and
and
movsb
xchg
ljmp
sub
in
or
bound
cld
outsl
pop
cltd
in
lds
lods
and
in
pop
repz
mov
stos
bound
jle
push
xchg
cltd
repnz
add
movsb
shrb
hlt
mov
cmp
dec
rcrl
add
push
push
or
mov
ss
and
aas
push
outsl
xor
insl
pop
in
fs
insl
jns
xor
adc
sub
jle
cmpsl
imul
lcall
lcall
xor
xor
movsb
test
fs
push
je
and
fwait
imul
mov
rcll
add
mov
pop
xor
test
sub
xchg
stc
add
and
and
pop
mov
ss
lods
add
dec
cmp
pusha
pop
hlt
clc
mov
lds
inc
fcmovu
in
pop
out
xor
lcall
xchg
fldcw
movsb
or
and
popf
enter
mov
or
push
push
sarb
xchg
lods
pop
lods
xlat
add
popa
xor
dec
cmp
out
stos
cs
lea
cmp
out
lods
imul
repz
xchg
dec
loope
orl
sub
and
xor
ror
lea
je
inc
call
shrl
push
lret
add
jecxz
out
sbb
cmp
xchg
dec
push
add
xor
in
inc
jmp
inc
push
in
icebp
hlt
ret
popf
or
icebp
pop
nop
push
repz
outsb
test
sub
lcall
mov
inc
mov
call
sbb
jg
adcl
xchg
pop
jbe
es
inc
arpl
mov
data16
js
cmp
xor
aam
adc
cmpsl
call
cmp
push
aam
jg
mov
jo
and
xchg
movsb
aas
mov
fistl
and
fsubl
add
or
js
mov
push
mov
jecxz
cmp
cmp
push
test
push
outsb
add
or
xlat
nop
test
sahf
leave
jp
inc
dec
pop
in
nop
imul
pop
movsb
xchg
mov
push
scas
jmp
sub
mov
sbb
incl
scas
adc
fldenv
pop
mov
movsb
mov
xor
mov
adc
sarl
pop
sub
xchg
pop
cmp
mov
cwtl
mov
mov
and
inc
cli
mov
dec
inc
sbb
das
leave
cld
mov
cmc
add
inc
loope
xchg
popa
aam
sbb
push
popa
xchg
and
push
add
or
leave
xor
sub
aas
pop
xor
sbb
pop
pop
mov
adc
mov
sbb
stc
mov
jns
lret
sti
jmp
cmc
lahf
adc
jne
inc
mov
je
jmp
jo
xor
ss
jle
jl
add
adc
add
pop
pop
mov
sub
cmpsl
out
std
xchg
add
push
lods
daa
cmp
push
mov
mov
inc
loope
jg
adc
pop
xor
sbb
pop
mov
push
loopne
or
div
cmp
leave
repz
loopne
mov
inc
mov
add
cmc
xchg
lds
sub
xor
stos
sti
ss
in
dec
fisttpl
cld
or
sbb
cmp
cmpsl
call
cmpb
inc
xchg
xchg
or
int3
mov
sbb
nop
aaa
sub
js
jge
ja
mov
or
bound
dec
clc
sbb
add
mov
pushf
adc
shlb
cmp
and
and
fisubrs
and
sbb
insl
pop
sbbb
rcrl
call
mov
or
mov
pop
loopne
sbb
mov
jne
cmp
std
mov
cmp
mov
dec
or
in
sbb
sub
aad
jo
pushf
mov
cmp
and
xchg
xchg
repz
mov
call
jmp
or
leave
and
les
outsl
data16
shlb
pop
loopne
loope
aas
push
cwtl
das
in
divb
loop
xor
or
pop
xor
sahf
push
xchg
push
mov
or
jmp
pushf
sub
mov
ljmp
inc
shlb
and
insl
and
repnz
mov
xchg
inc
dec
rolb
mov
xchg
subl
es
and
sub
mov
dec
gs
test
add
pop
sub
out
inc
xchg
mov
adc
cmp
add
jne
and
cld
inc
xchg
ljmp
add
hlt
xlat
in
pop
lods
xchg
inc
jecxz
jae
sbb
mov
jo
addr16
xchg
subb
xchg
mov
push
and
cmp
dec
jne
xchg
je
movsl
nop
nop
sub
jo
inc
stos
call
jo
or
icebp
mov
stos
lmsw
testl
insl
or
pop
xchg
or
sub
jle
lea
mov
mov
push
out
sbb
xchg
dec
lods
pop
or
mov
mov
mov
faddl
mov
pop
data16
adcb
lea
pushf
in
push
mov
lret
out
dec
out
lret
in
clc
daa
bound
push
stc
icebp
mov
adc
dec
push
fimull
pop
mov
ror
ljmp
mov
jno
out
stos
test
jae
fstps
lcall
pop
xor
mov
int
mov
mov
das
mov
sbb
clc
mov
inc
out
xchg
movsl
je
mov
inc
lea
mov
mov
pusha
xchg
xchg
mov
adc
sub
jmp
dec
push
aaa
dec
call
mov
subb
push
pop
mov
and
xchg
push
mov
mov
mov
aaa
add
in
imul
outsb
add
sbb
es
cmp
rorb
fisttpll
cs
popa
or
call
add
pop
adc
fiadds
enter
sbbl
test
inc
sbb
out
leave
and
fildl
push
xchg
mov
sbb
std
orw
jl
add
add
inc
jne
insb
pusha
outsb
test
and
dec
cmp
lret
and
cmpsb
in
dec
dec
push
int
inc
movsb
stos
or
or
cmp
xchg
pusha
scas
fldenv
test
out
clc
pop
pusha
sub
fsubrl
sbb
dec
in
push
sub
enter
xlat
or
clc
outsl
mov
mov
shll
cmc
scas
aas
sub
mov
cmp
cmpl
les
popf
int
mov
pushf
imul
jmp
adc
sbb
fimuls
ret
lea
mov
xchg
fs
mov
jl
test
push
stos
fcompl
mov
cmp
cmp
ds
push
add
and
push
lds
rcrb
xor
xlat
or
dec
mov
xor
loopne
pop
gs
xchg
and
pop
push
call
pop
out
jno
dec
push
jb
scas
sub
adc
stos
cmp
inc
inc
or
pop
iret
ds
nop
outsb
sbb
int
enter
jbe
test
scas
inc
fsubrl
addr16
test
jp
in
xor
ret
daa
ret
repnz
out
mov
mov
and
aad
or
jp
imul
in
mov
in
das
outsl
mov
mov
lods
movsl
fmul
cmovns
add
and
pop
jmp
sbb
test
btr
mov
push
push
or
mov
int
into
and
mov
push
mov
mov
scas
jbe
or
jle
xor
hlt
loopne
fwait
pop
outsb
in
ljmp
das
mov
insl
mov
imul
rorb
or
aam
in
adc
loopne
xchg
dec
rcrb
mov
mov
cmp
push
and
lock
push
and
leave
arpl
dec
aas
cmp
inc
or
into
rcrb
ss
add
pop
push
aaa
mov
cltd
sbb
lret
enter
das
sub
mov
mov
flds
lret
test
in
lret
cwtl
xchg
ss
fimull
in
mov
mov
cmp
xchg
cmp
je
xchg
dec
sarb
iret
lods
sbb
sbb
xchg
jno
out
jl
jbe
or
imul
push
mov
sbb
les
in
and
push
cmp
cmp
mov
subb
mov
mov
jle
sub
mov
dec
js
ds
xor
push
push
popa
push
neg
adc
cmpsl
frstor
fidivl
out
xor
push
in
cmp
push
test
dec
shr
pop
pop
jb
and
mov
pop
xchg
insl
lods
cmp
arpl
cmp
into
cmp
xchg
cmp
movsl
stos
and
lcall
cli
inc
xchg
por
inc
xchg
dec
sub
jns
aaa
sti
fiaddl
add
lock
pop
in
icebp
fldt
xchg
adc
pop
cmp
aas
cmp
sbb
inc
test
cwtl
mov
adc
int3
aaa
fnstenv
dec
mov
or
jns
cmp
or
mov
xchg
in
imul
dec
sbb
imul
mov
sub
fsubrl
inc
mov
test
jle
mov
mov
loop
cmp
fldl
dec
xchg
bound
ss
jecxz
mov
xchg
xchg
add
repnz
mov
int
aas
pop
shll
lret
iret
and
add
std
dec
cmp
mov
mov
push
sarl
ret
jge
mov
aad
test
lret
mov
adc
fwait
sahf
mov
imul
negl
clc
mov
xor
dec
sbb
pop
in
bnd
adc
int3
xor
js
inc
xor
aas
jnp
pop
jmp
mov
sbb
add
movl
out
xor
pop
sbb
movsl
test
add
sbbb
fcmovnbe
mov
ficompl
sbb
mov
xchg
cli
mov
jbe
mov
mov
ret
xchg
les
cmc
pop
std
outsb
lea
inc
ljmp
xor
sub
mov
push
movsl
notl
or
inc
push
mov
imul
push
pop
fildl
adc
sarl
ret
cmp
fldt
dec
es
scas
pop
push
mov
mov
ret
roll
inc
xlat
shrb
nop
jo
sub
test
enter
and
fistpll
sbb
jno
js
mov
pop
lds
and
sahf
loopne
out
ret
dec
mov
cmp
test
lret
ljmp
testl
rcrb
push
or
idivl
adc
dec
sub
lock
mov
aaa
in
add
repz
mov
dec
fstps
imul
bswap
mov
es
fwait
arpl
mull
sbb
int
stc
mov
cwtl
stos
test
sbb
imul
lret
sub
in
xor
fistpl
lret
push
ds
sbb
jg
sub
push
ss
imul
push
outsb
dec
mov
xchg
jo
fistps
inc
fsubrs
lahf
mov
mov
xor
adc
insb
pushf
cld
jmp
out
and
mov
inc
sub
push
jg
xor
sub
jle
pop
sub
or
insl
or
testb
sbbb
sub
xchg
fnstcw
in
and
movsb
push
leave
jbe
in
movb
dec
mov
or
or
mov
popa
gs
mov
xchg
jb
in
cmp
mov
xchg
mov
data16
inc
pop
pop
fisttpl
mov
mov
mov
dec
ret
imul
fisubl
sbb
outsl
je
xchg
inc
cmp
mov
cmpsb
fsubs
pop
in
int3
mov
out
pop
and
and
stos
and
mov
xchg
imul
xlat
outsl
in
xchg
enter
add
push
and
and
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
lcall
jmp
bound
xchg
mov
push
lret
mov
sbb
test
dec
sbb
mov
mov
stos
pop
rolb
insl
adc
mov
test
sub
push
mov
aas
sub
jmp
xlat
push
test
push
jle
out
and
notb
add
cmp
aas
pop
lahf
jnp
ret
cmp
stos
shrl
lret
jb
fmul
xchg
mov
arpl
icebp
fildl
xchg
jp
pop
jge
cs
mov
lea
mov
cmp
sbb
cmp
cmp
daa
shrb
xorl
orb
daa
sarb
jecxz
rorb
and
ror
int
dec
decb
imul
dec
pusha
icebp
adc
adcb
or
std
sahf
push
cli
dec
lret
das
jl
dec
sub
je,pn
cwtl
and
xlat
push
jecxz
mov
fs
shl
loope
popf
mov
pop
fsubl
lea
test
popf
repz
xor
imull
pop
mov
adc
gs
mov
stc
lcall
aaa
addb
je
rclb
push
shrl
dec
mov
ds
rolb
push
nop
inc
mov
dec
std
sbb
nop
add
rclb
mov
gs
sbb
cmp
xor
addl
cmp
cmp
icebp
sbb
mov
adc
lods
xor
faddp
jmp
stos
or
push
cmpsb
stos
mov
imul
movb
sub
mov
sub
fs
fnstsw
sbb
jp
jp
jecxz
push
test
decl
pop
pop
insb
push
mov
stc
sbb
push
xchg
bound
imul
push
aam
xchg
fstpl
ljmp
inc
fmull
sbb
or
test
jae
test
imul
adc
jmp
scas
xor
add
mov
xchg
adc
in
repnz
cmp
test
add
xchg
add
mov
paddb
sub
std
adc
outsb
notb
inc
int3
push
adc
inc
xchg
lock
decl
out
cmp
lcall
jmp
inc
rcrb
xchg
sbb
insb
jmp
loop
pop
push
fstpl
loope
lds
xor
pushf
outsb
dec
push
popf
out
fcoml
jge
mov
sti
sub
or
fsubl
adc
or
xchg
adc
popf
xchg
aam
lea
adcl
dec
call
pop
inc
or
leave
jbe
inc
fs
in
or
jns
sbbb
pop
fnstcw
inc
jge
pop
outsl
mov
ljmp
cwtl
mov
sahf
xchg
in
ret
or
in
mov
lahf
rcll
cwtl
mov
jns
imul
out
scas
push
push
jnp
dec
inc
mov
push
push
notl
push
cltd
ret
add
xor
inc
mov
iret
sub
jne
lret
pop
dec
lret
clc
adc
repz
mov
imul
rolb
cmp
lret
xor
push
or
push
adc
insb
cmp
in
mov
cltd
lods
fst
sbb
xchg
in
push
lods
lahf
ljmp
shlb
inc
fdivp
sbb
lods
fcoms
stc
inc
jo
jo
orl
les
adc
leave
or
hlt
sub
stc
add
mov
fists
inc
fildll
xor
lods
xchg
repnz
mov
cmpsl
pop
add
sub
sbb
std
int
pop
call
and
push
jmp
pop
inc
mov
jbe
ret
leave
push
lahf
dec
mov
movl
movsl
xchg
inc
ljmp
in
scas
mov
into
pop
lock
dec
dec
sbbb
ret
push
jnp
sbb
in
xor
jmp
sub
mov
outsb
dec
mov
sbb
dec
aas
jno
es
mov
xchg
das
push
jecxz
fmul
sbb
xor
in
mov
xchg
cmc
jl
adc
sbb
mov
xor
inc
and
rol
jo
mov
test
addr16
push
mov
add
cmp
inc
xor
jb
pop
push
setns
test
cld
push
aad
loope
mov
adc
mov
sub
pushf
xor
fimull
aam
lods
fcoms
mov
xchg
mov
pop
and
js
sub
frstor
pop
aas
fdecstp
divb
or
repnz
es
pop
pop
ljmp
pop
rolb
ficoml
cmp
fcmovnu
in
mov
jo
cmp
push
sbb
leave
xchg
sti
aam
sub
pop
xchg
lock
cltd
mov
push
mov
jno
ret
mov
mov
and
into
sbb
xlat
and
jno
fisttps
mov
repz
xchg
subb
out
adc
sub
test
xchg
das
adc
cmpsl
out
cmpsl
xchg
mov
out
cmp
arpl
aaa
or
cld
xor
ret
dec
jmp
in
pusha
add
aam
or
and
shr
bound
hlt
es
repnz
mov
jg
sbb
lcall
and
stos
sarl
cwtl
js
aam
scas
lea
inc
fs
and
jo
jle
clc
movsl
in
outsb
jns
into
sbb
aas
adc
fildl
mov
popf
loope
adc
add
jl
mov
inc
jle
mov
fimuls
cmp
stc
xlat
mov
clc
add
xchg
adc
jnp
cmp
sbb
rcll
xor
aas
stc
call
cld
pop
jne
fwait
push
nop
repnz
dec
test
out
push
mov
je
and
dec
mov
push
lock
pop
cs
clc
lock
ret
or
nop
xchg
pop
imul
std
sbb
cwtl
js
mov
mov
or
sti
shrl
fmull
pop
jl
adc
nop
or
outsb
loope
mov
stos
out
jp
stc
cmp
xlat
mov
mov
out
rcl
dec
movsl
adc
in
test
sti
sbb
mov
xor
inc
repz
and
mov
push
lods
dec
inc
mov
rorl
insl
testl
xor
sub
push
test
gs
pusha
xor
xchg
sbb
aad
push
and
in
lea
jmp
adc
sub
add
push
fldcw
pop
cmp
mov
pop
or
mov
outsl
xor
insb
jbe
test
xchg
gs
pop
inc
xchg
jno
popl
ds
scas
sbb
push
cwtl
cmp
daa
push
fstpt
icebp
sbb
mov
cmp
or
xchg
je
dec
in
mov
lock
cltd
loopne
pusha
mov
ljmp
ret
xchg
jns
fwait
outsl
out
xchg
xor
mov
mov
mov
les
fiaddl
push
popf
add
sahf
out
cltd
dec
sub
lock
mov
fwait
add
xorb
xchg
xchg
inc
xor
mov
mov
adc
mov
ret
orb
and
sbb
test
fldenv
inc
push
xor
adc
inc
cltd
or
mov
repz
push
pop
pop
mov
jge
xor
andl
fnstsw
inc
lock
xchg
movsl
jle
in
cmp
mov
in
mov
pop
dec
pop
out
jl
inc
ret
sbb
das
sbb
dec
mov
ljmp
add
mov
mov
int3
mov
incb
fsts
xor
jl
ss
cli
inc
push
mov
xchg
push
mull
addr16
adc
mov
xor
push
jnp
in
fdivr
xor
das
mov
orl
dec
mov
pop
add
xchg
sbb
push
je
xchg
into
ficompl
mov
jne
push
mov
stos
adc
int
xchg
daa
inc
gs
adc
push
js
jmp
mov
out
xchg
js
xchg
lret
sbb
mov
movsb
ds
xchg
jge
adc
aas
addr16
lret
xchg
inc
or
cmp
in
int
repnz
leave
mov
pop
adcb
pop
lods
arpl
ljmp
ljmp
push
mov
adc
sbb
push
out
jb
icebp
adc
jae
jp
fcompl
fwait
outsb
cmp
sub
jecxz
fstps
je
mov
dec
ret
repz
negl
dec
fnstcw
xor
mov
adc
into
jbe
imul
aam
mov
xchg
mov
and
js
fs
jo
mov
fstl
enter
push
or
arpl
adc
mov
out
das
sub
lods
mov
in
add
or
cmp
and
imul
sbbb
jge
das
leave
adc
setl
push
dec
pop
imulb
outsl
and
or
dec
notl
imul
inc
hlt
arpl
out
cld
mov
cmpb
sub
test
subb
out
mov
cmp
lds
mov
cmc
pop
inc
and
aad
das
call
mov
iret
lods
aaa
fnstsw
lock
pop
shrl
or
push
sarb
enter
mov
or
mov
xchg
adc
adc
scas
in
das
lea
pop
mov
cli
cmpsl
test
add
push
mov
stos
or
xor
dec
and
mov
add
sbbb
mov
xlat
add
inc
jp
adc
out
es
icebp
sub
jle,pn
movsl
cs
sub
ds
cmpl
mov
stos
cmp
enter
orb
sbb
inc
mov
imul
push
hlt
mov
mov
mov
or
in
and
push
sarb
in
dec
stc
mull
lret
nop
test
and
pop
icebp
cmpsb
ljmp
in
in
push
cmp
repnz
int3
stos
or
sub
mov
sbb
cmpb
outsl
cmp
int3
adc
and
push
add
push
mov
inc
out
adc
mov
daa
loop
es
fcompl
fcmovu
or
jmp
push
insl
hlt
adc
sub
test
lds
or
movsb
mov
out
push
sbb
xchg
add
dec
cmp
sub
outsl
mov
mov
adc
mov
les
sub
push
gs
aas
popf
xor
sbb
sti
push
in
sbb
ja
popf
xchg
bound
inc
iret
insl
cmp
hlt
push
inc
jle
inc
xchg
repz
lods
ret
pop
or
xor
cltd
or
push
lock
sbbl
mov
push
push
adc
les
cmc
xchg
ss
subb
stos
mov
ret
jg
push
loope
fcmovnbe
std
push
inc
js
mov
mov
sahf
adc
sahf
pusha
fiadds
data16
dec
fiadds
sbb
mov
cwtl
lods
jne
insb
inc
ds
mov
add
cmc
and
dec
mov
nop
jnp
cmp
out
fists
nop
movsl
mov
jnp
sub
jo
jmp
pop
and
sub
pop
iret
xchg
ja
dec
mov
push
into
call
out
adc
sbb
nop
jbe
enter
push
inc
mov
push
mov
dec
inc
ja
std
cmp
mov
out
and
dec
outsl
jns
cmp
aam
jnp
or
gs
pop
dec
daa
cmp
add
scas
mov
out
nop
mov
or
sbb
mov
mov
into
es
fs
pop
fldl
sbb
fwait
push
jno
out
xchg
in
inc
mov
and
adcb
ret
sub
sub
mov
inc
test
sbb
xor
lahf
stos
mov
dec
xor
ss
ss
mov
jp
sub
mov
push
inc
int3
add
mov
loopne
pusha
repnz
psubsw
cmpsb
andb
nop
lods
cli
sahf
add
push
cmpsb
xor
sti
cld
push
pop
out
adc
shll
lds
jmp
dec
jecxz
adcl
test
int3
leave
jmp
pop
cmp
sarl
fmuls
sbb
jne
push
pop
push
push
shrd
sbb
orl
pop
ret
dec
jp
or
pop
inc
aaa
mov
inc
outsl
sub
push
mov
jge
inc
mov
cltd
mov
xchg
mov
pop
insl
int3
mov
or
mov
movsl
or
leave
adc
pushl
or
and
push
jmp
sbb
inc
mov
pop
xchg
pusha
insl
push
mov
add
lret
popf
sub
nop
sbb
out
mov
fwait
xchg
loopne
in
pushf
insl
lret
add
jecxz
pop
test
add
out
inc
push
in
xor
inc
in
xchg
xor
xchg
inc
outsb
fcoml
test
cmp
jns
clc
andb
or
jb
or
xor
shr
call
mov
dec
xlat
mov
popf
pop
pop
xor
jno
mov
mov
dec
lahf
mov
lcall
das
and
mov
cmp
divl
push
sub
xor
pop
es
jg
push
insl
jno
mov
adc
jb
cmp
imul
mov
xor
adc
aas
pop
lds
outsb
pop
xor
scas
cmp
push
push
lods
jmp
aam
arpl
xorb
shr
mov
repz
add
int3
sbb
notl
xor
push
cwtl
cmp
xchg
pop
fiaddl
in
add
mov
jae
add
inc
in
adc
iret
mov
push
xor
outsl
cmp
pusha
aam
jl
andl
mov
dec
or
sub
ret
aad
xchg
div
int3
mov
adc
movb
or
scas
pop
sbb
mov
cmpsl
mov
in
rclb
xor
shlb
iret
xor
icebp
lds
and
fldenv
add
fidivrs
inc
sub
add
xor
mov
mov
inc
test
sarl
push
sbb
mov
std
shrl
xor
add
cmp
xchg
pop
movsb
insl
adc
inc
testl
push
add
or
test
ja
jb
and
lea
add
push
jg
fdivrs
insl
dec
aaa
xchg
mov
bound
jecxz
push
aaa
or
movsb
mov
jns
adcb
pop
sbb
je
cmp
test
mov
dec
adc
jecxz
fmul
push
cmp
gs
stos
repnz
add
imul
add
pop
test
jp
xchg
pop
pop
jbe
mov
out
sub
dec
xchg
pop
pop
sub
cmpb
sub
jo
pop
ffreep
loop
leave
inc
push
imul
dec
push
mov
inc
clc
and
sub
or
je
jl
sbb
adc
xor
dec
dec
or
sub
lods
add
xor
pop
jns
mov
jae
imul
lds
in
mov
mov
test
adc
mov
inc
daa
sbb
rorb
lods
imul
jle
mov
or
dec
add
repnz
or
cltd
mov
pop
mov
bnd
ficomps
aaa
sahf
xor
mov
lret
shrb
es
sbb
or
inc
insb
xorl
into
insl
cmpsb
fs
fucomi
adc
mov
int
jge
ret
dec
push
mov
dec
ret
or
stc
lret
pop
pop
push
jmp
scas
data16
popf
jbe,pn
pop
jmp
cmp
faddl
jle
sub
cmp
inc
movsb
in
mov
cmp
sub
iret
popa
orl
fsubrs
fmuls
sbb
test
cmp
push
xchg
fdiv
aaa
ljmpw
jecxz
adc
clc
std
int3
les
and
leave
push
ds
sbb
sub
push
insl
and
push
lret
stc
insl
mov
add
mov
cmp
push
adc
fdivs
sub
fucomp
adc
jp
test
mov
shlb
jge
mov
lahf
std
test
pushf
addr16
push
mov
rolb
fildll
out
dec
xlat
shll
mov
and
push
mov
mov
add
jle
dec
mov
mov
inc
movsb
or
lea
out
push
add
scas
xchg
cld
dec
inc
xor
adc
sbb
jno
adc
pushf
inc
test
or
push
int3
push
xor
inc
mov
fidivl
stos
sub
lcall
sahf
xor
jecxz
das
popa
insl
jb
pop
cli
iret
sbb
bound
test
shl
sbbl
aad
dec
cmp
mov
inc
pop
mov
hlt
paddsb
imul
jmp
repz
sti
sub
dec
mov
mov
subl
orl
mov
sbbb
shlb
add
lods
in
mov
fstps
fsubs
or
cmp
sti
fwait
jo
popf
xor
rorb
repnz
push
xchg
push
lahf
les
ficoml
pusha
add
dec
adc
out
aam
das
jmp
mov
and
ret
cwtl
mov
push
fnstsw
pop
addb
stos
and
xchg
jp
and
out
jp
andl
and
sbb
testl
out
mov
push
cld
and
cltd
sbb
xchg
sbb
mov
add
int
dec
prefetcht2
push
jno
inc
push
decl
mov
lds
loop
movsb
mov
aam
stos
nop
std
clc
insl
mov
js
lock
into
inc
mov
orb
scas
test
pop
xor
inc
icebp
push
jo
cli
sub
dec
sub
fstl
xorl
mov
xchg
push
xchg
push
cmpsl
inc
jb
imull
subps
bound
push
notl
jno
cmc
cs
in
stos
fimuls
nop
xor
and
ljmp
xchg
pop
sarb
add
mov
ja
pop
daa
mov
repz
leave
je
js
ja
pop
movsl
outsl
xchg
pop
outsb
pop
xor
pop
repz
push
push
mov
incl
sbb
pop
mov
inc
cmpsl
movsl
ror
jmp
fldl
dec
jmp
push
dec
adc
adcl
in
sbb
sarb
dec
xchg
loopne
in
hlt
orl
jecxz
xor
out
cmp
mov
shrl
dec
add
jae
call
or
rolb
fisubrs
jge
inc
dec
mov
jns
xchg
pop
jl
push
sub
xor
mov
cmc
dec
and
pop
fbstp
mov
rclb
ud0
dec
aam
pop
std
pop
fs
arpl
or
mov
adc
dec
bound
cmpsl
jno
fimull
shrb
bound
shr
pop
ljmp
stc
dec
dec
dec
fdivl
add
inc
jl
mov
stos
sbb
sbb
xchg
in
mov
push
mov
mov
jo
enter
jl
mov
gs
sub
clc
icebp
sahf
lcall
cmpsl
jg
in
mov
stos
mov
pop
pop
call
pop
hlt
leave
lahf
sub
mov
and
push
pop
std
repnz
sub
repz
sbb
push
adc
hlt
stc
mov
neg
jo
jle
nop
repz
push
cmp
sbb
or
ficomps
je
sti
or
faddl
push
mov
push
popf
and
add
cmc
or
fs
push
test
adc
rcrl
dec
xchg
das
or
movsb
push
jae
and
xchg
lcall
jmp
or
add
rorb
aam
add
push
mov
xor
in
addr16
mov
out
or
jb
add
leave
nop
data16
shlb
leave
cwtl
hlt
cltd
int
add
pop
pop
rclb
pop
dec
jge
pop
hlt
mov
test
pop
psubsb
cmpsb
jmp
bound
movntq
ss
dec
inc
xor
insl
ljmp
sbb
int
cs
push
inc
mov
movsl
pusha
jle
scas
push
sbb
cli
gs
adc
test
or
xlat
jne,pt
push
cmpsb
xor
out
xchg
add
lods
or
xor
pop
pop
dec
sbb
lret
lea
cltd
dec
pop
pop
imulb
icebp
repz
loope
sub
test
pop
jecxz
pop
push
adc
lea
sbb
loop
or
test
imul
dec
push
sbbb
mov
repz
cltd
ret
imul
lods
sub
call
mov
test
aam
sarl
cmpsl
push
sahf
mov
mov
and
push
out
jge
popf
rolb
inc
xchg
fistpll
movsl
xor
inc
fldl
addl
insl
scas
inc
dec
cmp
sbb
out
pop
int3
clc
adc
inc
mov
or
push
ja
bound
int3
inc
ljmp
mov
and
and
xchg
js
add
xor
dec
jecxz
aas
aas
aas
pop
movsb
outsl
sahf
imull
dec
aam
je
inc
iret
test
lahf
mov
xor
dec
dec
out
loop
mov
sbbl
fs
sarb
test
icebp
dec
movsb
and
jecxz
lock
sbb
jp
mov
jecxz
gs
jecxz
sub
movsb
int
xor
cltd
rcrl
testb
popf
cmc
cmp
jg
rcrb
sub
jp
jmp
pop
les
dec
and
divb
fstps
add
jecxz
fnstsw
push
outsl
gs
or
cmpb
push
aas
cmpsb
mov
inc
cs
das
and
add
mov
int
lahf
stos
sbb
int
jae
mov
inc
mov
repz
out
outsl
lret
xor
xchg
popf
cli
jno
xchg
test
lock
push
sub
out
mov
dec
inc
clc
clc
popa
in
and
cli
gs
jmp
cwtl
pop
fisubs
cwtl
rcrb
lret
std
push
xchg
and
js
push
cmpsb
enter
adc
pop
std
out
lahf
call
pop
loope
push
push
loop
pop
xchg
loope
fisubrl
loopne
mov
popf
popf
push
stos
pop
lods
sbb
mov
test
pop
sbb
test
popf
push
and
stos
clc
pusha
sub
mov
push
adc
les
cmc
jp
icebp
sti
adc
outsb
sar
mov
in
adc
and
mov
jge
icebp
cld
cmc
pushf
mov
mov
push
dec
or
sbb
or
pop
stos
lret
add
push
sbb
movsb
pushf
inc
and
and
cmp
and
and
jnp
ljmp
fwait
cmp
cmp
pushf
jle
xchg
mov
sub
addb
mov
xchg
loope
sbb
pop
loop
lock
enter
push
xchg
ret
mov
add
daa
loopne
aad
mov
pop
inc
or
pop
call
push
cltd
lret
sub
ret
testb
fnstsw
jno
into
aad
inc
lds
out
sub
inc
loope
add
push
xor
mov
shrl
xor
cmpl
xchg
inc
addr16
popa
pop
mov
cmpsl
adc
sarb
stos
test
mov
jns
das
and
ret
mov
cmp
jl
mov
dec
ret
xchg
mov
nop
lea
add
pop
and
jns
sbb
cmp
sub
or
or
lods
fadd
insb
movl
jl
xchg
add
inc
outsl
push
mul
inc
and
push
data16
push
push
inc
andb
or
sbb
push
jne
fisttpl
ret
ror
dec
mov
mov
ja
in
cmpsl
fisubrs
mov
int3
mov
rorl
insl
lret
jb
add
pop
aaa
inc
mov
xchg
mov
clc
int3
mov
lcall
leave
pop
and
fildll
lods
mov
push
dec
enter
jns
jnp
cmc
call
sar
jno
scas
push
jge
ds
sub
rolb
imul
stos
out
add
add
xchg
bound
lods
adc
cmp
sub
popf
pop
fildll
mov
sbb
movsl
js
iret
cmc
in
jp
lret
xor
xor
cmp
insb
cmpsb
cld
adc
jp
xchg
cmpsl
sub
mov
push
roll
or
add
xor
mov
cltd
scas
int3
in
js
pop
sub
das
sub
mov
pop
inc
lret
ret
mov
cltd
stos
dec
cwtl
jge
push
push
mov
xor
sbb
xor
bts
push
in
cwtl
scas
in
nop
rol
orb
mov
adc
and
sbb
popf
mov
jb
loopne
xchg
test
mov
repnz
in
jp
or
into
cld
xchg
dec
test
jnp
mov
xor
mov
dec
and
push
sub
nop
sub
ja
addr16
pop
shrl
sub
lcall
jo
cmp
lcall
outsb
dec
fnstenv
shlb
scas
jl
pop
push
mov
repnz
mov
insl
xlat
adc
orb
into
fst
add
movsl
sbb
or
test
ss
in
pop
mov
xchg
sarb
mov
clc
jb
fbld
pop
bound
fdivl
sub
rorl
das
pop
int
push
leave
push
mov
xchg
das
hlt
daa
and
scas
sbb
adc
adc
jbe
lea
test
xor
icebp
icebp
cmp
add
fxch
mov
lret
push
sub
das
add
add
sbb
inc
movsb
cmp
sahf
fcmovnbe
mov
lods
adcb
mov
mov
pop
jge
leave
fstps
adc
in
dec
mov
shrl
dec
mov
mov
xchg
int
rorl
stos
push
aas
aaa
mov
cmpsb
inc
cli
mov
inc
cmp
mov
outsb
call
out
or
add
pop
shrl
jae
cmpsb
mov
xchg
add
iret
ds
adc
ret
and
push
mov
adc
push
notb
fsubr
flds
push
mov
imul
lahf
mov
adc
fs
ficoml
dec
cli
or
cltd
or
jbe
push
dec
sub
loopne
add
pop
sti
aas
dec
xor
or
and
push
inc
sub
in
fnstenv
shrb
xchg
pop
dec
sbb
mov
cmpps
or
ret
push
mov
jbe
sbb
cmp
push
add
test
inc
push
mov
cmp
shlb
jbe
pop
push
daa
outsb
pop
leave
jl
xchg
and
popa
or
stc
enterw
aas
pop
mov
push
fwait
shlb
sub
push
psrad
or
xlat
pushf
jmp
scas
jbe
shr
adc
and
pop
mov
dec
jp
outsl
ljmp
pop
adc
sbb
icebp
in
and
mov
jmp
add
and
adc
jmp
push
mov
and
int3
mov
lret
sub
add
xor
mov
xor
testb
fmul
fcoml
rcl
stc
ret
push
or
inc
iret
cmpsb
mov
inc
ja
je
cltd
outsb
jge
sbb
add
pop
jo
fisttps
jno
movl
dec
sbb
cmpsb
mov
sbb
adc
adc
sbb
daa
xor
sub
sbb
lcall
dec
push
jmp
sbb
sub
sahf
inc
push
jle
adc
add
jecxz
cld
xchg
sbb
out
pop
and
addb
inc
xlat
cmp
sahf
maxps
out
out
frstor
xlat
push
cli
stmxcsr
mov
and
mov
dec
adc
push
jecxz
mov
dec
outsl
adc
add
jmp
jg
mov
ret
xchg
mov
data16
inc
test
dec
sahf
int
sub
je
add
lret
jge
nop
movsl
sbb
aas
adc
cmpsl
mov
imul
cwtl
dec
add
dec
movsl
stc
lahf
or
pop
test
nop
psllw
add
imul
out
stos
stos
cltd
dec
sub
shrl
insb
adcl
pop
mov
push
subl
sbb
and
fsts
jl
sbb
daa
clc
mov
in
mov
fs
push
in
adc
xor
fs
jne
lods
cli
hlt
cmp
push
cltd
movsb
mov
or
mov
shr
mov
out
or
daa
fidivrs
cmc
or
imulb
push
mov
mov
xchg
pop
lods
out
stos
mov
mov
add
xchg
push
jle
mov
stos
sub
inc
fldcw
jg
and
rolb
out
les
popf
imul
adc
orl
pusha
inc
push
addr16
xlat
push
jno
les
data16
es
lcall
mov
aas
inc
push
inc
push
add
lret
push
icebp
sbb
cmp
mov
xor
adcb
sub
or
inc
shrb
xchg
sahf
fcomps
scas
xchg
mov
xchg
pop
adc
adc
in
jb
xor
mov
xchg
rorb
jmp
jae
pop
lcall
sub
lds
mov
jno
mov
popf
or
or
ret
call
es
jge
in
or
loopne
sub
mov
jno
jnp
pop
scas
mov
jg
push
fcomip
xchg
nop
clc
test
std
sub
add
push
push
insb
out
xor
inc
loope
loopne
adc
mov
push
movsl
inc
jae
inc
icebp
push
mov
mov
je
pop
adc
in
arpl
iret
cmp
cmpl
pop
lret
lods
jge
mov
mov
fisubs
comiss
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
jo
hlt
push
jmp
bound
add
and
fs
aaa
aad
and
jecxz
cmp
dec
mov
add
and
pop
pop
push
xor
movsl
fildll
in
or
push
sbb
or
xchg
sub
xor
jl
clc
mov
fdivr
into
or
push
ss
pop
jle
aaa
divl
sbb
mov
pop
insl
pop
mov
jo
mov
cld
addr16
andb
jnp
adc
mov
rcl
out
data16
ret
adc
bound
stos
dec
test
loope
bound
dec
in
mov
add
mov
ja
ret
inc
stos
lcall
cmp
or
popf
mov
add
je
aaa
iret
das
push
fildl
imul
xlat
mov
mov
adc
insb
jno
xor
xor
scas
mov
ret
repnz
mov
jecxz
sub
in
nop
push
call
xor
jmp
pmulhw
fs
es
fisubrs
dec
mov
xor
add
pop
test
push
in
jbe
sub
sub
pusha
test
push
es
cwtl
loopne
add
lock
in
xor
lret
or
push
lock
idivb
and
popa
sub
hlt
cmovbe
fnstcw
add
out
int3
shll
pop
adc
data16
inc
adc
js
call
outsl
adc
aad
ljmp
fdivrl
xchg
sub
xor
xor
dec
stos
pop
rcr
in
pop
lds
jge
hlt
enter
bnd
outsl
xchg
and
xchg
cmp
pop
sti
gs
push
dec
cltd
scas
sti
iret
in
or
stos
pop
inc
or
mov
hlt
clc
adc
lret
or
mov
test
insb
aad
bound
imul
sub
xor
idivl
jno
sahf
add
jbe
cmc
mov
lds
cmp
inc
fisubl
inc
loope
mov
cmp
dec
mov
mov
stos
cmp
sti
sbb
mov
add
pop
xchg
sbb
cmp
test
or
add
loop
out
in
dec
es
cmp
push
hlt
imul
sub
jne
je
mov
jae
adc
add
lea
sbb
sbb
push
and
ret
mov
stos
or
adc
add
shlb
add
cmp
sub
xor
mov
dec
stos
pop
xchg
nop
cmp
or
add
pop
pop
mov
cmc
enter
push
int
movsb
mov
stos
inc
int
fwait
mov
jmp
xchg
sbb
cmpsb
cmpsb
mov
sub
inc
insb
je
jg
adc
lcall
lahf
in
cli
bound
add
out
loop
fdivl
mov
pop
mov
int3
pop
push
arpl
xorb
xor
xchg
mov
pop
pop
push
mov
cmpl
fbstp
and
push
adc
or
mov
jnp
fsubrs
push
inc
dec
test
jo
out
mov
icebp
cli
data16
dec
aad
arpl
es
xor
push
cltd
xchg
jae
mov
shl
sub
inc
enter
xchg
fmulp
and
dec
iret
push
js
icebp
cmp
ret
xchg
cs
dec
lock
mov
les
sbb
xchg
jno
add
imul
xor
fadd
xor
sahf
sbb
imul
out
ja
fidivrl
or
out
out
and
xchg
sbb
test
in
pop
cli
or
push
cmp
inc
sub
repnz
aas
xor
cmpb
adc
xor
dec
xchg
arpl
dec
mov
shrl
repz
inc
pusha
or
rorl
pop
xor
movsb
pop
jle
push
or
sub
sub
adc
gs
addl
xchg
ds
mov
and
inc
lretw
pop
in
ret
inc
mov
je
or
inc
frstor
dec
adc
jns
push
inc
jns
iret
in
enter
xor
push
mov
and
sbb
cltd
fwait
xchg
cmc
jecxz
jle
jb
xchg
lds
je
std
and
lahf
add
arpl
out
cwtl
dec
push
sbb
mov
insb
test
frstor
lea
inc
and
mov
imul
mov
push
and
push
add
jae
inc
sbb
jp
mov
ljmp
mov
xchg
sub
cmp
lea
in
inc
push
push
sbb
jns
insb
data16
jb
icebp
pop
mov
mov
adc
cltd
imul
imul
jnp
test
inc
mov
jmp
cld
cmp
dec
insb
pop
xor
out
movsl
mov
ljmp
sub
fidivrs
mov
sbb
mov
ljmp
fsubl
pop
subb
psubusb
or
pusha
scas
jmp
xchg
stos
loope
out
jns
push
mov
out
jmp
lret
sahf
lret
iret
jnp
mov
xor
pushf
pop
adc
or
into
js
mov
lcall
jmp
test
add
push
adc
dec
inc
cld
ret
dec
adc
and
rclb
xchg
dec
jmp
in
dec
pop
pusha
and
dec
nop
xor
jno
jae
aam
cmp
push
mov
add
into
jnp
inc
mov
dec
int3
dec
es
pop
xor
sbb
leave
mov
fisubl
fwait
push
fisttpll
pop
fsubrs
and
rcrl
mov
pop
xchg
incl
cmp
jno
jl
cs
sarl
sbb
sbb
lea
ficompl
sbb
lods
out
jle
jle
jle
orl
pop
popf
lret
push
sbb
mov
jae
cmp
xor
adc
das
shr
sub
fs
push
mov
filds
xor
mov
repz
lahf
xchg
xchg
pushf
std
insb
pop
xchg
ss
icebp
xchg
mov
jp
fs
or
das
pop
push
repnz
mov
sahf
cs
adc
cmp
in
and
cli
jle
jp
push
fstl
es
push
xor
sti
dec
cmc
shrl
loope
movsl
inc
or
aaa
lods
test
push
fs
dec
ret
mov
cmp
pop
and
out
call
in
mov
sti
jo
or
xor
in
outsb
cld
lods
inc
popf
push
out
jge
push
push
enter
push
adc
mov
clc
or
xor
mov
sbb
mov
xlat
mov
divb
inc
inc
pushf
pop
mov
and
xor
adc
jle
dec
popa
je
xchg
xchg
fisubl
inc
lcall
jae
inc
push
inc
dec
outsb
aad
imul
mov
adc
push
or
pop
mov
insb
dec
lret
mov
xchg
push
jl
int3
xchg
mov
hlt
pop
pop
fwait
test
rcrl
call
mov
dec
cmp
testl
pop
inc
dec
xor
and
jmp
dec
mov
ret
into
sub
cwtl
icebp
pop
add
xor
add
test
pop
adc
leave
mov
ja
push
jb
lcall
dec
mov
and
hlt
mov
add
movsl
dec
dec
in
cs
orb
jno
movsl
push
lock
mov
fwait
in
test
fwait
loope
sbb
lret
hlt
dec
sbb
int
jno
inc
mov
or
sbb
std
xchg
pop
push
iret
and
jns
test
xchg
gs
push
aaa
adc
inc
ret
or
xchg
inc
mov
ja
push
dec
daa
jecxz
cmp
add
daa
mov
mov
mov
pop
call
sub
push
cmp
fmul
mov
sbb
mov
and
dec
jnp
std
fisttpl
aaa
lahf
rol
icebp
or
mov
lods
xlat
fldenv
sub
out
push
sub
ljmp
cmp
in
popf
addl
pushf
jecxz
aas
cmp
pop
pop
dec
xor
sub
mov
mov
imul
icebp
cwtl
insb
jp
sbbl
out
movsb
fldenv
cmp
rcrb
stos
das
mov
and
mov
mov
xor
stos
push
cmp
xchg
xchg
jns
sbb
mov
stos
sub
add
jae
add
pop
js
rcr
fxtract
adc
popf
cmp
movl
add
aas
cmc
mov
cwtl
sbb
lret
cmp
in
in
add
or
out
pushf
jmp
test
jbe
ret
adc
sub
adc
or
mov
push
jo
ljmp
addr16
shrb
sub
mov
call
clc
and
ds
push
or
push
jo
leave
cli
int
cmp
jo
int
arpl
mov
jns
std
shlw
scas
insl
sbb
or
fildl
ss
std
jle
xchg
and
test
jg
into
jmp
outsb
loop
push
xor
test
dec
mov
jae
loope
out
jp
sti
loopne
mov
js
sbb
push
xchg
dec
xor
pop
xor
mov
jb
xor
sbb
and
cs
stos
into
add
aam
jno
jb
mov
cmc
cmp
mov
sub
movsb
xchg
insb
inc
pushl
mov
mov
jmp
repnz
aaa
xchg
fisubl
push
push
push
add
inc
and
pop
xor
loopne
pop
pop
xor
xchg
dec
popa
out
or
sub
mov
jno
mov
lds
ss
mov
in
pop
lcall
xchg
repz
xor
rcr
stc
jecxz
faddp
jmp
test
pop
shll
mov
adc
and
jle
dec
push
mov
into
pop
sub
lret
inc
adc
imul
test
adc
mov
iret
xor
inc
sbb
xchg
push
or
sub
xor
or
and
push
pop
imulb
inc
mov
sbb
cs
jae
pop
repnz
inc
test
ja
int
nop
add
stos
mov
lods
sub
in
adc
test
mov
sub
jp
data16
scas
dec
je
adc
cmp
sbb
lea
call
mov
jmp
cmp
or
and
aam
add
and
adc
and
ljmp
lcall
xchg
dec
psraw
xchg
dec
into
xor
jae
mov
enter
lret
sbb
adc
iret
add
inc
push
leave
ret
inc
pop
call
js
lcall
pop
mov
stos
pop
movsb
cwtl
sub
jge
mov
push
jecxz
in
jbe
insb
imul
rcr
dec
xchg
jp
das
mov
or
xchg
sub
notb
push
gs
pop
jo
andl
jns
xchg
xchg
sub
test
xor
arpl
push
dec
loope
sub
sbb
push
ljmp
pop
loope
lcall
nop
xor
xor
movsl
cmc
mov
dec
ss
adc
fdivr
fs
js
leave
mov
jb
sbb
cmp
and
xorb
mov
mov
popf
jl
mov
sti
cs
cmp
fxch
or
xchg
dec
es
xor
cmp
loopne
iret
imul
cmpb
mov
lahf
je
repz
shlb
adc
loop
push
mov
push
cmpsb
xchg
mov
or
out
mov
sub
popf
out
add
pop
xchg
jno
mov
mov
or
cmp
mov
mov
insl
inc
outsl
mov
jae
inc
xchg
loop
pushf
fildl
jmp
dec
sub
cmp
inc
mov
imul
sub
inc
xlat
adc
xchg
add
jmp
dec
jbe
push
test
mov
pop
es
mov
sub
stos
cmp
es
pop
fwait
cmp
fsubl
enter
pusha
pop
sub
xchg
flds
out
aad
mov
sbb
and
pop
pop
ret
idivl
iret
or
loop
aam
and
arpl
xchg
mov
loope
pop
loope
cmc
jg
divb
and
xor
sub
cmpsl
addr16
push
inc
inc
or
ja
fs
add
xor
xchg
inc
loope
add
jmp
cmp
sbb
stos
jl
ss
dec
inc
lea
mov
scas
cmp
sbb
stos
mov
cmc
ljmp
aaa
mov
pop
add
add
push
pop
insb
push
lods
out
pop
ja
test
inc
add
imul
movsl
imul
xorl
mov
or
cwtl
and
jg
push
data16
dec
mov
mov
cwtl
inc
or
cwtl
xchg
or
orb
std
sbb
mov
scas
push
push
int3
fdivrl
adc
push
jg
int3
rcrb
mov
mov
jmp
mov
test
stos
jae
or
aam
dec
lods
data16
cmpsl
dec
fidivs
fmull
or
add
xchg
nop
xor
fistl
in
repnz
jmp
xchg
mov
cmpsb
psadbw
mov
je
out
rsqrtps
lahf
scas
pop
sbb
lret
jmp
add
pop
jno
add
inc
sbb
jecxz
cmp
cmp
fwait
cmp
adc
enter
cmp
cmp
cmc
mov
enter
jne
dec
leave
jb
imul
and
fadds
xchg
std
sub
or
leave
mov
loop
stos
movsl
pop
dec
je
jmp
jp
ja
push
dec
inc
push
pop
cs
outsl
bswap
sub
cmp
sbb
jle
ljmp
dec
stos
jle
mov
sahf
insb
or
inc
loopne
into
aam
mov
lods
xchg
in
arpl
cmc
push
jnp
cmp
movsl
aam
fildl
lods
mov
mov
ja
cld
gs
imul
or
xor
mov
out
ss
mov
js
mov
mov
xor
hlt
fsubs
xchg
rolb
mov
cs
xor
xchg
add
push
or
push
inc
dec
lods
mov
lods
sahf
test
ljmp
rorl
xor
popa
mov
inc
sub
lods
bound
pop
in
rcll
pop
adc
adc
ret
rol
sbb
dec
xlat
xor
scas
insl
pop
xchg
or
mov
test
iret
test
mov
sub
push
pop
stc
jnp
lods
cmp
rcpps
sub
je
lret
mov
dec
ficoms
sbb
stc
rcr
mov
dec
iret
imul
xchg
push
movsb
mov
into
push
sarl
xor
fmulp
int3
inc
ret
pop
cmc
cmpsl
fbstp
dec
pop
loopne
xor
lahf
xchg
sub
inc
icebp
mov
jo
cmp
cmpsb
mov
cltd
mov
fists
xor
mov
js
pop
fsubp
in
lea
call
fildl
psubsb
outsb
sar
mov
nop
iret
in
sbb
pop
jmp
pop
shll
pushf
outsl
out
mov
daa
fimull
gs
xor
clc
mov
xchg
and
xchg
inc
push
xchg
dec
and
mov
fwait
push
push
pushl
pop
sti
movsb
push
dec
int3
ret
ljmp
pop
ja
mov
ret
inc
rorl
xchg
or
pop
cmpsb
push
sbbb
nop
leave
lahf
out
xor
sub
imul
lods
jle
xchg
jle
imul
mov
ja
sbb
pop
xchg
das
inc
call
xlat
xchg
je
push
or
or
shlb
sub
xor
pop
out
dec
out
push
shrb
mov
sahf
xor
sub
outsl
sarb
pop
dec
xchg
sarb
or
pop
lahf
das
mulb
imul
xor
fisttpll
inc
orl
push
xlat
pop
pop
adc
imul
xor
in
inc
adc
clc
jns
mov
push
cli
push
mov
push
imul
push
adc
inc
jp
aam
jle
cmc
push
jnp
cltd
imul
int3
sbb
aas
cltd
cmc
jbe
lret
jnp
addr16
repnz
xor
lret
mov
fmull
cwtl
insl
enter
push
sub
jb
jecxz
add
in
and
jbe
jno
je
loope
or
and
mulb
xchg
push
push
push
sub
scas
aad
cmp
xor
stos
and
fbld
call
negl
insb
jne
push
push
jmp
mov
mov
ror
or
mov
stos
sahf
xchg
sti
sbb
adc
dec
cltd
aas
daa
shlb
xchg
pop
mov
lret
cmp
adc
fwait
bound
insl
mov
insl
dec
xchg
das
sbb
push
in
shl
cld
fxtract
xchg
or
inc
in
xchg
jns
mov
fndisi(8087
xchg
pop
ret
dec
stc
test
ljmp
mov
lret
dec
push
addb
popf
test
nop
push
mov
mov
fsave
sbb
inc
jne
imul
mov
inc
dec
or
lods
and
pushf
bound
iret
jge
xchg
inc
lret
xchg
dec
fisubrl
pop
xchg
mov
push
pop
jge
fisttps
pop
js
loop
inc
out
jnp
mov
inc
push
fstps
jl
sti
call
gs
fists
mov
xchg
jmp
mov
and
push
push
mov
push
insl
pcmpeqd
add
into
or
fcomps
roll
push
xorl
or
ret
mov
enter
movsb
push
ljmp
mov
jo
out
pop
idiv
jmp
dec
idivb
xor
pop
cltd
out
nop
mov
cltd
xor
fsubl
jp
into
push
sbb
iret
push
cmp
dec
inc
cmc
or
sub
fdivl
test
sti
inc
test
xchg
adc
cmc
lret
lods
xor
pop
and
mov
push
dec
outsb
out
jp
lods
sbb
mov
mov
mov
aad
push
data16
shr
jl
aad
mov
mov
dec
jnp
adc
cld
pop
xor
shr
add
sub
mov
pop
sub
dec
xor
xchg
push
dec
xchg
xchg
dec
daa
mov
sbb
mov
jo
cld
pushl
xor
xor
dec
push
cmc
neg
pop
push
push
cltd
ja
sbb
pop
fwait
push
fimull
cmc
daa
xchg
enter
rorb
mov
mov
mov
mov
pop
mov
stos
mov
imull
jmp
fs
jo
sub
push
outsb
arpl
aad
push
cmp
les
outsl
xchg
jp
lods
ds
bound
xchg
repz
hlt
and
and
or
pop
stc
lods
mov
xor
push
mov
decb
mov
push
lcall
adc
push
sbb
aam
sbb
jo
test
jnp
ret
cmp
stos
push
mov
or
mov
std
loop
pop
dec
push
cmpsl
mov
xchg
loop
imul
jp
xchg
push
fsubr
cli
ja
jle
inc
xor
jecxz
mov
mov
mov
jb
repz
ret
pop
jo
insl
push
fisttps
mov
push
cmp
mov
pop
arpl
call
int
ret
xchg
out
mov
ljmp
aam
and
mov
mov
lcall
pop
sub
xor
jno
lret
xchg
xor
lret
mov
push
push
in
prefetch
into
stos
fs
jmp
adc
mov
cmp
xor
mov
frstor
push
pop
or
pop
js
stos
sub
push
in
filds
imull
icebp
insb
insb
iret
mov
stc
outsl
jl
fidivrl
xorb
out
and
mov
loope
sub
daa
lods
dec
inc
adc
pop
pop
dec
cmp
jmp
ret
jl
out
mov
mov
push
push
clc
pushf
cmp
ret
pop
lahf
inc
xor
cmp
sub
xchg
mov
mov
jle
pop
pop
jmp
icebp
clc
daa
in
sub
jne
sub
dec
test
lods
repnz
mov
movsl
sbb
push
dec
jae
pop
xchg
out
xchg
add
call
xlat
mov
int
jne
std
mov
lahf
outsb
or
pop
jo
loop
push
mov
pop
xchg
rcl
movsl
les
mov
fldcw
mov
cmp
or
cmc
es
push
test
push
lret
cmp
or
jmp
push
xor
dec
mov
jne
adc
out
pop
mov
outsb
pop
in
jb
outsb
dec
or
loopne
mov
lea
sti
sub
mov
mov
lret
or
shrb
neg
and
sbb
mov
or
inc
stos
cmp
rcr
inc
pop
lret
cmc
xchg
cld
cwtl
jg
and
jl
and
sbb
ja
dec
movsl
xor
mul
mov
add
mov
mov
mov
inc
mov
mov
dec
ret
outsl
or
push
xlat
adc
dec
sbb
ja
test
inc
or
mov
push
push
imull
in
xchg
in
adc
adc
adc
imul
mov
and
inc
push
fisubl
in
ljmp
xor
pop
pop
push
bound
inc
iret
cld
mov
adc
xchg
scas
push
sarb
mov
test
sbb
mov
jnp
cmpsl
rclb
mov
and
sub
cs
push
push
xchg
xchg
xor
ret
fnsave
mov
imul
adc
cmpsb
fistps
push
inc
sub
scas
mov
push
int
cwtl
mov
das
xor
pop
xchg
and
mov
push
cmp
cmp
mov
push
xlat
xchg
dec
andl
pop
pop
mov
pop
lahf
jae
insb
leave
mov
arpl
data16
and
out
cmpsl
movb
jo
pop
or
push
sub
daa
pop
adc
pusha
adc
shll
adc
mov
sti
jl
xchg
jo
inc
aas
adc
addr16
inc
sbb
mov
xchg
mov
pop
je
jge
jne
mov
insb
insb
xchg
mov
pop
mov
add
xchg
mov
cld
cltd
sarl
jns
mov
movsl
enter
or
cmp
xchg
xchg
in
adc
push
mov
stos
lcall
push
cmp
adc
pop
bound
into
and
dec
int3
xchg
sti
cmp
insb
and
inc
jl
jns
lea
sub
mov
push
es
cmpsl
or
cltd
push
and
push
jg
pop
push
stos
fcompl
aam
mov
xchg
pop
lods
xchg
mov
ljmp
xlat
shll
jecxz
jne
adc
jne
call
add
inc
and
dec
adc
jns
ficoml
add
lock
bound
xchg
das
subb
adc
cmp
pop
pop
or
mov
idiv
lret
dec
dec
cltd
inc
clc
sub
sbb
inc
xchg
mov
inc
shll
enter
scas
pop
rcll
mov
mov
inc
fstps
sbb
cltd
cmp
dec
iret
outsb
lret
xchg
sbb
jno
and
lock
shlb
les
mov
adc
mov
js
sbb
mov
sarb
outsl
push
movsb
ljmp
jns
loope
loop
enter
jecxz
xchg
or
pop
int3
mov
leave
mov
push
leave
pop
add
sub
imul
push
mov
add
mov
cwtl
add
lods
xchg
cmp
and
test
cmp
aas
jbe
aad
aam
adc
shlb
sti
jnp
lds
dec
shll
mov
aam
add
lcall
cmp
out
dec
add
aam
sub
movsb
cmpsb
popa
insb
push
mov
fs
push
mov
fs
mov
mov
enter
mov
ja
in
sbb
nop
stos
ret
mov
push
xchg
sbb
fadds
aaa
sbb
xchg
dec
in
or
mov
ja
inc
mov
cmpsl
and
push
pop
fdivs
push
push
push
or
outsb
cmp
andb
pop
jmp
fmuls
mov
loopne
cmp
and
sub
add
daa
jl
xchg
jae
push
dec
insb
sub
fstps
out
or
dec
ljmp
push
out
sbb
mov
sub
pop
xchg
icebp
out
xorb
int3
sub
and
jbe
int
or
test
adc
cmpsb
bound
ja
mov
ljmp
mov
pop
stos
fwait
ret
sbb
add
in
adc
jle
out
nop
mov
or
inc
mov
scas
push
pop
aad
mov
adc
scas
mov
aam
jo
insl
xchg
sub
out
enter
in
sub
and
out
adc
jne
fists
lret
inc
mov
icebp
mov
fucomip
fsubrl
add
andl
out
mov
xor
cld
push
dec
mov
shl
cmp
adc
jge
xor
sahf
add
cmpsb
outsl
je
fldl
dec
rclb
xchg
push
dec
pop
inc
inc
push
lods
mov
in
push
lock
add
in
das
xor
sahf
dec
cmp
add
sbb
test
clc
call
push
addb
sbb
xchg
test
jl
mov
mov
jae
out
inc
ret
dec
mov
push
ret
jp
stc
mov
push
daa
push
int
or
inc
sub
xchg
dec
inc
test
out
popf
mov
mov
and
ds
cmp
cs
roll
push
fnstcw
les
dec
repz
orl
sarb
dec
into
cli
dec
iret
jnp
lret
push
push
lods
add
lret
pop
lahf
or
jae
shll
repz
call
xchg
fldl
cwtl
cs
scas
inc
sub
or
xor
push
adc
mov
mov
ficomps
xchg
imul
or
add
mov
jle
dec
sbb
orl
lret
push
mov
js
adcb
mov
imul
mov
sub
adc
or
mov
xchg
inc
xchg
pop
and
cmp
imul
push
jl
or
jg
sbb
mov
xor
lods
and
push
fsubs
and
add
ror
sub
or
popf
pop
dec
sarl
cltd
xchg
jle
push
jp
jne
adc
cmpsb
loopne
fsubl
shrl
sbb
push
jmp
sub
sbb
mov
xor
and
and
pop
popf
ljmp
mov
xchg
out
insb
xchg
faddl
lods
adc
in
and
push
xor
sub
stos
mov
es
aad
add
and
lods
mov
xchg
sbb
cmp
dec
and
lods
subb
icebp
out
pop
sahf
ljmp
scas
outsb
aaa
pop
daa
mov
jmp
mov
mov
mov
push
iret
sub
lods
cmp
and
jnp
test
jo
adc
or
movl
pushf
test
jl
loope
ret
insb
dec
xor
mov
mov
mov
loopne
sbb
mov
insb
xor
cmpsb
xchg
mov
mov
enter
int
enter
adc
pusha
popa
mov
addb
out
sbb
bound
mov
lds
cmp
mov
movsl
aad
fimuls
aam
sub
inc
std
out
inc
cmp
ds
mov
loop
sti
pop
js
dec
imul
adc
aaa
leave
add
sbb
adcb
inc
add
cs
imul
add
clc
pop
cmp
or
pop
pushf
cmp
cmc
add
xchg
ss
loopne
negb
lahf
fs
cmp
sub
movsl
pop
and
mov
mov
dec
sbb
xchg
jne
mov
mov
ret
lahf
mov
adc
pushf
sbb
jg
lea
pushf
mov
rorb
sbb
fs
and
push
lock
lcall
cmovae
popa
jl
push
mov
xchg
mov
arpl
or
or
or
and
mov
jp
out
lcall
out
xlat
cmp
inc
sub
xchg
aad
jmp
rol
outsl
cmp
sbbb
mov
add
ret
cmp
test
and
cmp
popf
cmpsl
movsb
or
sub
jo
fmuls
stos
test
in
std
sub
dec
lods
cmp
mov
sub
enter
mov
mov
add
xchg
pop
jp
mov
xchg
xchg
xchg
xchg
icebp
add
leave
aad
bound
cmc
xor
fcoms
fst
mov
mov
cwtl
or
arpl
jecxz
bts
out
xchg
movsb
fdivl
and
stc
lea
push
leave
fistpl
test
fwait
or
cmpsl
push
bound
add
bound
mov
sbb
in
arpl
lea
or
sub
sub
adc
fprem1
das
jg
imul
call
inc
clc
lret
es
ds
out
ljmp
push
pop
adc
push
cli
int3
add
mov
icebp
sbb
jle
popa
mov
mov
or
scas
inc
sarl
ss
adc
sbb
inc
lret
pop
cmp
lods
pusha
sarl
cmpsb
popf
scas
push
js
leave
add
xchg
outsl
fisttpll
daa
enter
sub
jo
stos
jmp
stc
pop
pushf
shlb
and
push
roll
loop
popa
mov
cwtl
mov
sbb
test
mov
gs
push
lea
mov
mov
add
pop
pop
inc
xchg
cmpsl
cmpb
mov
test
dec
lds
push
and
in
sbb
dec
or
aad
and
add
mulb
fs
push
push
inc
repnz
push
mov
add
outsb
icebp
loopne
loop
call
int3
cmp
jle
mov
int3
xchg
in
movsl
aaa
popf
mov
jae
sub
aad
mov
leave
ds
cmp
adc
cli
and
insl
sti
out
add
xor
cmpsl
inc
mov
ja
mov
lahf
mov
pop
mov
xor
adcb
add
loopne
pop
movsl
clc
xchg
cmpsb
fimull
ret
xchg
jnp
call
pusha
adc
cmpsb
hlt
pop
test
sbb
fsubrs
adc
stc
dec
xchg
cmp
repz
daa
in
je
dec
dec
sbb
xchg
push
stos
test
test
fisttps
jp
or
xor
cli
add
fisubrs
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
jp
imul
rcrb
dec
into
sub
aam
pop
gs
add
jle
js
mov
cmpl
mul
fs
stc
rcrb
inc
aam
mov
shrl
jmp
lds
cmp
out
ja
add
sbb
pushf
fidivl
lcall
inc
xchg
pop
or
xchg
push
mov
andl
sbb
ss
mov
dec
sub
pop
in
imul
imul
fisubrl
ja
jp
ja
aam
test
mov
push
mov
cmpsb
sbb
mov
xor
jno
mov
lock
mov
jbe
inc
jno
xlat
push
and
hlt
icebp
mov
out
mov
dec
arpl
mov
pop
iret
test
push
lea
cmpsl
std
add
test
cltd
sub
sgdtl
in
movsl
fpatan
sub
jo
pop
pop
sbb
fmuls
lods
add
in
push
fcmovnu
mov
rolb
inc
nop
lds
inc
lcall
mov
and
cmpsl
shll
sti
mov
mov
jae
les
sbbl
dec
and
dec
sbb
add
ret
xor
xchg
push
fwait
ss
clc
lods
lret
in
jmp
push
xchg
add
aam
inc
mov
loop
add
or
push
repz
call
inc
aaa
cmp
popa
mov
daa
add
out
jmp
scas
xchg
or
popf
ss
sub
add
cli
fcoms
insb
std
pop
xchg
scas
ss
fs
ret
push
fwait
pop
cmp
mov
das
pop
push
push
jno
push
int3
rorb
shr
or
into
mov
jbe
push
mov
js
dec
push
mov
insb
sub
mov
call
sub
pop
stos
dec
sbb
mov
shll
sbb
dec
jl
test
xchg
cltd
test
cmp
xchg
mov
mov
js
xor
out
jnp
xor
mov
int3
xchg
int3
pushf
push
dec
or
pop
cmpsl
jmp
outsb
xchg
sbb
out
cmp
pop
aas
mov
inc
insb
fmuls
rcrl
add
mov
xor
les
jno
sar
fmuls
shrb
push
push
jns
int3
out
mov
popf
inc
xor
push
adc
es
insb
stos
sbb
mov
mov
in
movsl
stos
mov
mov
or
cmp
aas
adc
jns
add
outsl
aaa
fdivp
mov
pop
movsl
add
xchg
je
mov
adc
inc
xor
ret
add
enter
cmp
sti
pushf
mov
and
jnp
push
and
arpl
fildll
add
ret
sub
adc
mov
bound
lret
cmp
lcall
or
pop
rolb
adc
mov
into
xorl
and
outsl
cmp
add
pop
mov
cmpsb
jg
and
adc
jmp
pop
loopne
in
cmp
stos
jecxz
pusha
cmp
test
mov
inc
push
mov
int3
cmp
add
repnz
pop
adc
sbb
int
and
cmc
shrb
ds
test
push
push
xor
aad
dec
mov
sbbb
dec
xor
push
add
add
shrb
or
pop
call
sbb
or
mov
add
stos
mov
cmpl
pop
pushf
sbb
hlt
pusha
ror
jg
pop
lcall
out
dec
add
in
dec
pushf
jbe
fcomip
out
sbb
repz
fistps
adc
sahf
mov
cmpsl
insb
mov
sub
pop
cli
push
push
or
inc
sahf
lret
fiadds
ljmp
mov
rcl
and
popa
add
dec
popa
sbb
xchg
adc
jns
test
jmp
push
push
push
jmp
push
jo
pop
sbb
das
adc
stos
pop
mov
shrb
sbb
xchg
dec
loop
das
cmp
cwtl
ss
loopne
repnz
loopne
pop
les
push
push
adc
push
ror
lahf
aaa
int
jne
inc
sbb
dec
sbb
push
psrlw
iret
aam
roll
dec
pusha
jb
or
in
or
dec
inc
cmpsb
mov
pop
das
pop
push
xor
push
jmp
and
pop
add
or
decl
or
in
imul
inc
lahf
test
notl
mov
jmp
test
cs
lods
or
jno
mov
xchg
xchg
cmpsl
or
xlat
xor
pop
lods
loopne
jp
je
out
xor
out
fdivp
out
mov
push
push
fmuls
lods
mov
fcoml
jb
sub
or
movsl
call
icebp
movsb
sti
mov
mov
jge
jne
stc
add
cmpsl
and
push
in
addl
fs
cmpsb
out
lcall
insb
xchg
pop
xchg
sub
inc
cwtl
in
sub
daa
lcall
or
adc
cs
pop
mov
out
adc
adc
movsl
sahf
sbb
es
cld
and
imul
mov
stos
mov
adc
bound
addr16
mov
pushf
lcall
imul
sbb
inc
cld
call
push
mov
scas
lock
mov
popf
cwtl
mov
lods
mov
or
adc
xchg
fisttpl
mov
test
or
and
fnstcw
adc
loopne
nop
xchg
hlt
push
pop
xchg
jns
xchg
and
sub
repnz
imul
das
adc
aaa
xor
mov
mov
or
stos
adc
rcrl
pop
repnz
and
adc
iret
popf
push
dec
aaa
inc
xchg
scas
aas
sub
int
repnz
jb
inc
clc
add
xor
jo
lods
cmpl
stc
push
or
out
shlb
pop
cmp
mov
cld
je
push
pop
out
sub
bound
add
pop
cmc
or
outsb
add
mov
loop
enter
xor
push
jge
jl
cs
les
sti
xchg
dec
xchg
js
or
cli
and
test
call
sbb
clc
inc
push
and
push
add
cmovs
mov
or
out
mov
daa
add
lds
sub
xchg
repnz
cmpsb
sti
pop
dec
ljmp
sub
fistps
cmpsb
jmp
mov
and
sbb
cmp
or
mov
mov
fsts
sub
lret
jmp
jp
fmull
and
pop
xor
jnp
or
gs
loope
mov
int3
xchg
jle
test
xor
ja
jle
xor
inc
sub
je,pt
jp
mov
cmp
push
mov
das
repnz
insl
into
add
cmpsl
hlt
push
xor
sbb
jns
xchg
pop
pop
or
xor
mov
push
inc
dec
cmp
cmp
inc
jl
test
add
xchg
arpl
jae
jge
les
fwait
sub
xchg
mov
mov
mov
sbb
daa
shll
dec
pushf
in
mov
inc
mov
outsb
lret
xchg
dec
shrb
and
fsubl
ljmp
aam
dec
in
sbb
inc
push
sbb
mov
out
mov
dec
sbb
jo
lret
dec
mov
mov
jg
fwait
push
jle
pop
adc
pop
xchg
push
cmpl
clc
shrl
gs
pop
push
push
push
lods
int3
scas
inc
cli
jns
wrmsr
mov
xchg
int
inc
adc
pop
pop
add
mov
notb
insl
sub
dec
fisubrs
imull
cmpsl
sahf
daa
lods
cmp
fmull
into
pop
jg
push
add
pop
clc
inc
sbb
sub
jbe
lret
jg
fsts
ja
cltd
pop
mul
or
and
mov
imul
sbb
mov
rcrl
leave
push
lds
or
inc
jno
mov
aam
adc
bound
adc
mov
xchg
and
ss
in
pop
leave
add
mov
sub
inc
sar
mov
jne
mov
or
cmpsl
sbbl
cmpl
and
mov
jge
jge
ljmp
fmul
insb
cmp
push
xchg
jp
addb
xlat
mov
adc
vpshufd
push
mov
xor
sub
push
leave
enter
ss
stos
in
push
into
mov
paddw
lods
lea
mov
adc
push
insl
lret
mov
sbbl
shlb
out
orl
mov
fsubl
and
dec
xchg
loope
lods
mov
fmulp
popf
enter
subl
arpl
iret
pop
jne
mov
inc
cld
roll
jle
lret
aad
mov
clc
ljmp
add
iret
or
leave
dec
pop
sub
and
xor
pop
div
mov
mov
pop
adc
or
imul
jbe
cmc
js
cmp
aam
xor
fldt
sti
lea
and
mov
notl
std
pop
scas
sbb
dec
jecxz
push
xchg
mov
push
shr
mov
fnstenv
inc
sbb
jecxz
xor
and
jp
inc
test
in
push
shlb
push
and
dec
lret
stos
aad
cmp
cmp
inc
xorb
xor
cmp
xchg
mov
xchg
dec
cs
punpckhwd
mov
lahf
in
push
sub
jnp
push
and
les
imul
pop
je
xchg
into
mov
scas
lds
adc
dec
jnp
sbb
imulb
in
mov
cmp
or
dec
jne
es
cmc
push
inc
push
cmp
xor
cmp
mov
push
lock
pop
addl
into
insl
dec
jl
clc
sbb
jae
or
xor
push
mov
lahf
jge
out
sbb
sbb
test
add
ja
in
pop
sub
sbb
mov
xor
inc
mov
or
aas
inc
xor
cmpsl
and
pusha
cmp
or
cmp
cmc
insl
mov
fs
out
sarl
jo
pop
leave
aaa
test
int3
cli
mov
cwtl
cmc
mov
cli
jp
mov
imul
mov
mull
cltd
mov
xchg
sbb
stc
shll
pop
xor
stos
mov
das
out
lahf
and
aam
mov
js
or
sub
adc
icebp
fisttpl
adc
sub
rorl
shrl
fs
arpl
xor
mov
sub
jae
push
call
out
jle
push
push
sbbl
add
loope
sti
je
orl
and
and
adc
out
jo
or
sub
and
jne
aas
lock
pusha
insb
mov
mov
mov
mov
mov
ret
std
push
inc
mov
adc
mov
pop
scas
or
sub
outsb
js
mov
bound
sbb
cltd
fmull
in
xor
inc
mov
sbbb
shrb
inc
sar
cmp
or
shl
es
push
and
mov
sbb
jg
ljmp
bound
outsb
ret
xor
std
sub
mov
sbb
stos
imul
mov
mov
cmc
ja
inc
cmpsl
and
xor
movsb
lcall
rorl
btr
push
popf
mov
lds
fmull
mov
mov
adc
and
mov
iret
cmp
neg
cmpsb
and
fadd
push
cwtl
add
vpmacsdqh
dec
cmpsb
pushf
jnp
mov
xchg
divb
and
xor
and
mov
movsl
jns
daa
fldl
jne
cmp
jae
or
int
icebp
mov
hlt
inc
cmc
mov
pop
or
inc
fldcw
mov
iret
dec
adc
rcll
sub
mov
outsb
roll
outsb
cwtl
cmc
es
push
in
popa
mov
pavgb
orb
roll
out
jb
sub
mov
into
daa
cmc
jle
adc
push
loopne
test
cmp
ret
imul
movsb
aam
stos
pop
push
ljmp
stos
add
inc
inc
in
cltd
cld
out
or
xchg
dec
loopne
sub
sub
push
xor
nop
mov
cmpsl
daa
inc
les
xorb
imul
in
and
insb
sbb
xor
js
popa
dec
and
jne
cltd
insb
push
aaa
mov
fimull
aad
sub
out
out
loopne
xchg
dec
add
ret
mov
jecxz
xlat
ds
mov
xorl
inc
popf
aam
jns
ret
addr16
outsl
cmp
ret
xchg
xchg
inc
int3
fdivr
mov
xchg
movsb
xor
dec
pushl
out
xor
das
inc
inc
xor
inc
in
stc
xor
sbb
pop
lcall
pop
das
test
testb
and
add
icebp
stc
xor
setbe
or
mov
cmpsl
fsubrl
sbb
push
test
mov
hlt
pop
add
push
popf
lret
jge
jo
mov
les
jl
pop
loope
xor
dec
out
lds
mov
pusha
mov
add
gs
mov
or
adc
pop
jo
mov
mov
sbbl
push
dec
call
repnz
dec
js
sbb
loope
jbe
fsts
bound
mov
outsb
sub
inc
inc
cltd
adc
sarb
ja
lods
ljmp
pop
mov
jo
push
mov
std
inc
xchg
fdivrl
adc
es
ret
add
pop
push
xor
stos
cltd
push
div
pop
cmp
out
std
jmp
fs
int
push
dec
xchg
leave
add
xchg
fwait
sbb
into
jge
mov
movsl
shrb
pop
sahf
pop
clc
xor
jmp
outsl
pop
xorb
jnp
push
cmp
shrb
lahf
jl
pop
sub
mov
xlat
mov
sub
mov
inc
out
mov
ds
or
mov
adc
sbbl
movsb
popa
ret
ja
loope
aam
or
mov
mov
jl
in
pop
ss
enter
adc
daa
mov
sbb
and
shr
imul
or
and
and
out
inc
xor
rcrl
pop
lea
pop
aam
push
out
das
mov
loopne
xor
push
dec
mov
mov
out
lea
lods
or
out
xchg
scas
inc
adc
and
sbbb
xor
cld
sbb
dec
std
or
add
lcall
push
ds
inc
jl
push
das
mov
ret
arpl
push
imul
adc
xchg
movsb
fistl
into
mov
sahf
sub
pop
mov
clc
lret
xor
sub
lcall
pop
mov
and
shl
lea
test
arpl
jbe
mov
nop
xchg
fwait
pop
push
xor
and
pop
dec
pop
inc
loopne
pop
loope
cld
rolb
ds
cmpsl
bound
xchg
outsb
ljmp
data16
mov
mov
loopne
int3
cmc
bound
mov
fdivl
or
xchg
mov
mov
rcrl
or
add
enter
stos
cmc
cmp
push
inc
int
jle
sub
mov
sti
fimull
cmp
out
daa
xchg
es
mov
mov
mov
out
daa
cmp
stos
mov
sub
jo
xchg
dec
jmp
rcrl
jl
mov
popf
cltd
mov
jg
mov
xor
xor
xchg
pop
jnp
leave
out
mov
and
xchg
xchg
or
mov
sbb
sbb
sub
sbb
adc
mov
ljmp
cmp
test
lea
jo
mov
push
jnp
incl
inc
dec
mov
rcl
bnd
sbb
outsb
in
ss
push
aam
adcb
xchg
sti
xchg
jnp
xor
cmc
push
push
fwait
push
call
sub
lahf
inc
bound
push
add
sti
dec
sahf
lea
cltd
mov
mov
sub
aad
scas
mov
xchg
inc
adc
push
cltd
or
call
mov
add
mov
adc
aam
js
loope
je
jns
mov
cltd
cs
add
dec
mov
mov
cli
dec
shrb
imul
xchg
ss
adc
fs
xchg
xor
xchg
imul
dec
ss
mov
cmp
out
psubb
sahf
inc
mov
mov
dec
and
xchg
scas
push
std
cmp
xchg
rorb
adc
ja
jle
push
data16
xorb
in
mov
pop
insl
arpl
add
xchg
xor
inc
push
jno
mov
insl
gs
roll
out
les
in
cmpsb
mov
add
fcoms
pop
icebp
fstpl
int3
sbb
xor
mov
and
inc
iret
ljmp
popa
cli
xor
mov
cmp
xchg
cs
sbb
fnop
add
int3
ds
add
mov
xlat
add
dec
push
xor
sbb
and
cmp
mov
mov
les
ret
or
mov
int3
or
repz
lea
lret
sub
jp
ljmp
es
push
cmpsl
ret
mov
cmp
loop
sbb
jbe
cmp
pushf
aaa
inc
test
jmp
xchg
cli
and
sbb
mov
stos
inc
bound
rorb
adc
add
call
movsl
mov
jne
int
call
xor
sbb
push
outsb
xchg
les
or
add
loop
inc
xchg
fnsave
add
pop
pop
repz
mov
xor
repz
scas
xchg
rcrl
mov
arpl
xchg
mov
jl
fisubl
aas
xchg
fs
and
cmp
and
or
rcll
dec
push
shlb
stc
data16
mov
scas
cmpsb
push
loope
pop
rcrl
xor
mov
das
in
lahf
add
sti
mov
sub
int
test
lret
inc
pusha
push
popa
pusha
leave
cmp
inc
negl
xchg
out
and
xchg
mov
dec
jno
push
dec
push
dec
fildll
ret
ficompl
pushf
sti
push
outsl
jecxz
inc
add
mov
or
and
sub
push
gs
add
jge
nop
mov
outsl
jp
sbb
xor
mov
mov
lock
sub
arpl
sbb
repnz
mull
adc
daa
insb
aam
mov
and
adc
push
jle
add
add
dec
notl
mov
filds
adc
stc
xchg
mov
inc
imulb
fimull
dec
xor
stos
pop
mov
mul
aam
xchg
pop
les
cmp
loopne
push
cs
out
and
pop
sub
scas
mov
cmp
es
mov
mov
mov
loope
or
push
icebp
test
dec
cmpsb
in
int
lds
mov
xchg
out
push
lcall
cmp
mov
mov
lahf
stc
mov
frstor
cmp
add
lods
subl
sub
inc
pop
mov
call
cmpsb
je
mov
mov
out
jne
out
xor
out
or
and
jo
pushf
loop
iret
test
cmpsb
in
js
and
and
sbb
stc
lret
fiadds
out
ss
test
lahf
sbb
add
es
sub
fisubs
or
push
or
out
xor
lahf
incl
jmp
push
test
popf
sbb
push
dec
int3
inc
jb
sub
sub
dec
stos
test
cmp
inc
cwtl
pop
pop
xor
fdivp
popa
mov
daa
jecxz
into
push
cwtl
roll
cld
add
stos
iret
bound
clc
fs
jge
cmp
and
pop
lea
dec
push
jge
repz
or
mov
test
loope
cmpsl
mov
adc
or
xor
mov
clc
add
inc
pop
pusha
cmp
out
mov
xor
frstor
mov
sarl
fnstsw
popf
xor
jge
dec
pop
imul
cld
fdivrl
popa
outsb
flds
addb
ret
fistpll
add
daa
jnp
test
and
aam
add
scas
fldenv
test
lret
adc
ds
push
adc
lds
cli
sbb
testb
std
sub
jb
dec
jae
pusha
stos
mov
arpl
sub
add
nop
mov
xchg
in
scas
add
or
adc
cmpsl
mov
push
sbb
lods
shl
mov
aam
cltd
xorb
cmp
push
fcoms
iret
or
jl
mov
xor
push
mov
mov
in
std
add
mov
xor
push
icebp
leave
not
push
and
mov
mov
bound
icebp
jb
and
fiaddl
cmp
mov
mov
cwtl
es
in
fcmovnu
nop
mov
add
sub
inc
push
mov
mov
fisttpll
add
cli
repnz
xchg
fdivr
ja
cmc
sti
mov
xchg
mov
pop
int
xchg
fmul
pop
lock
arpl
fidivrl
jbe
dec
mov
movsb
xchg
ds
xchg
jmp
xchg
pop
ds
xlat
sub
arpl
adc
ffreep
addr16
fs
adc
sbbw
imul
and
inc
in
outsl
jb
or
aam
pop
inc
test
inc
sahf
adc
movsb
cltd
scas
dec
xor
daa
xchg
jmp
push
push
sbb
sub
mov
std
in
aaa
dec
sbb
daa
xor
xor
mov
xchg
adc
jge
mov
and
stos
cmp
cltd
fidivrs
mov
aad
lds
and
lret
adc
dec
insb
jl
aad
adc
adc
push
inc
cmp
cmpb
and
jno
sub
out
testl
push
out
jge
dec
mov
jno
imul
inc
dec
pop
xor
and
sub
je
daa
or
shrl
mov
mov
test
mov
data16
xorl
mov
pop
rorb
mov
add
cs
adcl
inc
mov
in
cmpsl
jno
cmp
movsb
xorb
mov
cmp
jo
jle
dec
rorl
and
mov
sub
mov
mov
and
ljmp
std
xor
ret
nop
pusha
lods
dec
adc
sbb
shlb
loope
mov
fs
push
lahf
mov
pop
loope
pop
add
cwtl
adc
test
mov
pop
fsubrs
in
push
xchg
ja
or
push
dec
mov
inc
add
imul
mov
pop
call
add
fnstenv
in
pop
in
call
fucom
sbb
push
cli
push
jge
xchg
aaa
icebp
into
lods
test
pop
sub
cltd
mov
scas
pushf
test
jne
xor
push
cmp
sbb
cmp
sub
repz
dec
jnp
mov
mov
outsl
jnp
or
aam
pop
adc
lods
dec
addr16
adc
dec
mov
or
in
rolb
add
repnz
into
popf
ds
jmp
sbb
popa
cs
addr16
cltd
pop
cmp
movsb
loop
std
jns
cs
push
push
cltd
leave
sbb
in
xchg
push
sub
or
ret
pop
mov
mov
jg
mov
std
stos
les
xchg
pop
adc
cmp
add
mov
push
or
movb
push
imul
out
sbb
cld
xor
lods
decb
insl
addr16
gs
loope
jnp
xor
fdivs
push
dec
dec
add
sub
jne
test
add
jl
sbb
popf
mov
incl
cs
mov
sub
sub
cmp
xchg
sub
push
jge
iret
adc
xchg
faddp
jle
cld
sbb
mov
adc
or
jle
adc
xchg
pop
movsl
xchg
pop
xor
adc
stos
push
jnp
fmuls
or
rclb
pusha
or
dec
pop
repz
jbe
xlat
push
and
mov
inc
mov
and
ret
adc
insl
pop
loopne
jecxz
add
cmp
dec
out
outsl
mov
aad
mov
push
mov
sub
test
out
inc
loope
addl
flds
cmp
sahf
push
mov
lret
rcrb
adc
push
adc
cs
pop
jb
stc
xchg
sub
fldl2e
and
jo
sbb
inc
add
jb
enter
adc
out
in
fstpt
lods
repz
jl
ret
scas
adc
in
ljmp
test
xchg
sti
lock
adc
push
push
pop
mov
out
push
add
jmp
pop
arpl
adc
sub
adc
pop
jmp
into
fisubl
mov
into
scas
aad
fcmovb
sub
stos
pusha
mov
adc
add
daa
outsb
mov
rcll
dec
outsb
or
popa
jmp
mov
std
sbb
jns
sub
jns
dec
into
or
push
push
sbb
scas
stos
lods
mov
sbb
add
dec
lods
mov
in
jnp
dec
push
sbb
loopne
ja
sub
test
aas
pop
mov
dec
lret
int3
aad
xchg
inc
push
outsb
in
std
fucom
fucomi
in
inc
es
leave
lods
adc
out
dec
lcall
adc
mov
pop
pop
hlt
in
cmpb
adc
lods
push
sbb
stos
mov
mov
ret
ret
and
imul
mov
push
arpl
or
adc
xchg
add
inc
xchg
jl
inc
jmp
xor
insl
fnstenv
adc
bound
push
add
pop
icebp
fcoms
addb
ret
dec
je
xchg
push
test
mov
push
mov
sub
inc
fs
out
inc
mov
cmpsb
movsb
aad
jo
pop
mov
js
mov
inc
sbb
mov
stos
sub
and
in
lcall
fisubl
xchg
dec
xchg
mov
inc
aam
add
xchg
fnstenv
mov
push
cmpl
sahf
or
aas
dec
add
jns
jle
sub
inc
in
mov
fiadds
arpl
popa
imul
lcall
fdivrl
cwtl
jno
xor
lret
adc
mov
jnp
out
test
push
xchg
mov
mulb
ror
xchg
addr16
mov
mulb
scas
cwtl
imul
mov
adc
pop
xor
nop
or
lods
xchg
movsl
mov
jnp
sbb
popa
jmp
lods
ficoml
jmp
test
mov
addr16
iret
shrl
out
jp
pop
xor
outsl
movsl
out
cli
daa
push
and
cmp
xlat
lahf
push
pop
inc
es
out
xorb
pushf
shrl
les
mov
iret
sbb
pop
lcall
sbb
xchg
arpl
lods
or
iret
push
imul
mov
add
add
fwait
dec
xlat
gs
or
inc
rclb
negb
jno
xchg
dec
add
enter
clc
jne
inc
popf
inc
mov
test
xlat
inc
scas
sub
push
sub
cmp
popf
push
stos
sub
sahf
insl
adc
in
cli
push
xchg
pop
mov
aas
mov
inc
shl
out
inc
test
cmc
jmp
inc
cltd
lea
sarb
jnp
mov
orb
or
adc
mov
call
int
cmp
xchg
pmulhw
mov
pushf
mov
bound
fucomi
movsl
mov
mov
mov
add
sub
jb
lea
mov
or
pushf
jno
fstpl
cld
cmp
ss
inc
sub
dec
incb
data16
xchg
sbb
jmp
cltd
xor
test
inc
jnp
xchg
popa
inc
xlat
xchg
fadds
arpl
pop
cltd
imul
jp
movsb
adc
gs
xor
es
sbb
mov
inc
je
in
in
call
mov
in
sbb
imul
xor
push
addr16
les
mov
add
add
dec
cmp
ret
test
mov
shll
movsl
pop
xor
cmp
push
hlt
add
enter
in
aaa
fdivrs
aam
sbb
divl
sub
pop
ss
xor
dec
sub
mov
mov
imul
push
stos
adc
and
mov
xchg
jp
inc
int
mov
shrl
std
inc
adc
and
icebp
cmp
xchg
or
mov
out
jnp
dec
or
xchg
pop
mov
inc
dec
aad
inc
xchg
inc
and
cmp
adc
xor
bswap
mov
test
arpl
out
fimull
movsb
or
scas
jmp
fdivl
dec
mov
mov
mov
ffree
lcall
sub
push
mov
loop
jecxz
mov
mov
xchg
push
rcll
mov
aad
mov
test
push
aad
push
mov
dec
or
cs
push
jp
int
lcall
push
fadd
outsb
add
adc
cmp
mov
out
add
mov
jb
add
out
out
xor
scas
popa
mov
lretw
loop
pop
fcompl
jge
xor
add
js
pop
repnz
popf
mov
cmc
ss
cmp
mov
and
mov
stos
enter
aam
push
mov
pop
int
push
hlt
xor
scas
xor
inc
stos
sbb
mov
pop
sbb
push
addb
mov
ja
fsub
loope
lods
test
aad
and
sbb
sti
out
jne
rcrl
and
repz
mov
jnp
test
adc
mov
fidivrs
test
adc
test
xor
push
out
test
pop
jb
js
popa
and
pop
and
xchg
aad
insl
test
mov
shl
dec
scas
int3
pop
outsb
into
test
xchg
push
stc
leave
cmp
jbe
push
enter
xchg
bound
scas
jae
xchg
pop
insb
mov
cmp
xor
js
pop
out
mov
js
or
jo
mov
in
xlat
leave
sahf
sti
ret
pop
jns
jbe
add
cmc
push
and
arpl
add
movsl
out
ljmp
loope
add
dec
push
mov
push
and
jb
xlat
inc
les
lret
rorl
jns
jecxz
push
sub
shrb
mov
jo
push
cmp
adc
push
jmp
testl
pop
xchg
sbb
mov
jp
mov
inc
pushf
or
or
and
add
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
sbb
popa
rcrb
dec
mov
int
or
and
jmp
arpl
cwtl
push
cmc
dec
outsl
popa
mov
xchg
mov
lahf
leave
cmp
loop
fsubrs
and
in
sti
out
popa
push
imul
cltd
lods
cmpsl
dec
push
jae
sub
pusha
fs
in
mov
sub
sub
jo
mov
repz
loope
pop
call
sub
cmp
daa
xchg
testl
mov
push
lret
dec
cmpb
fidivs
xchg
jns
lcall
jb
sbb
fcomps
out
or
jbe
and
lcall
mov
push
sub
cltd
cli
je
ljmp
fistpl
dec
push
jbe
cmp
add
leave
cmpsl
test
jl
push
pop
cwtl
jbe
test
xchg
pop
adc
mov
popf
ficomps
jl,pt
stos
sahf
dec
icebp
test
sbb
dec
pusha
xchg
test
in
scas
outsl
fmull
shrl
inc
mov
mov
sbb
or
out
repnz
cs
test
arpl
fimull
inc
xchg
fcompl
pusha
push
out
iret
dec
int
hlt
pop
repz
sub
mov
divl
mov
inc
divl
in
fiaddl
test
dec
push
xchg
xor
call
not
pop
sbb
in
sti
inc
xor
xor
jo
out
and
mov
jle
pop
enter
push
push
inc
int
mov
rorl
insl
pushf
std
inc
outsb
insl
addr16
dec
stos
clc
imul
pusha
in
adc
mov
cmpsb
inc
insb
mov
aas
sbb
adc
fwait
ss
nop
repz
xorl
jnp
mov
lret
jle
and
push
add
mov
imul
gs
xchg
push
test
jno
pop
dec
arpl
nop
out
inc
lea
das
mov
cmp
sbb
push
jecxz
loop
out
bts
data16
adc
out
or
jns
dec
mov
jecxz
fisttpll
and
dec
jmp
js
xlat
inc
xchg
insb
cwtl
cli
faddp
mov
push
sbb
inc
push
ds
rcrl
and
out
adc
lds
insb
inc
jae
sub
xchg
push
test
or
dec
movb
or
push
test
jmp
or
pop
adcl
notb
jmp
outsb
xchg
sbb
sub
push
push
cs
mov
out
and
iret
mov
enter
xor
out
cmc
scas
data16
aaa
push
loope
cmpb
je
xor
outsl
pop
mov
adc
pop
xchg
test
int
pop
mov
mov
and
sbb
jl
lock
movsl
sub
or
stos
mov
fwait
addr16
mov
and
push
xlat
or
daa
shlb
sbb
int
and
fisttpl
fwait
int
stos
cmc
push
rol
mov
subb
sub
sahf
mov
cmpsl
test
std
cwtl
fs
outsb
repnz
pop
jb
xor
xor
adc
xchg
sub
push
jge
add
push
pop
push
data16
mov
mov
fisubrs
idivl
imul
mov
loopne
mov
pop
xchg
adc
add
pop
pop
pop
jg
ret
dec
popa
in
cmp
cmp
mov
into
push
push
rorl
std
mov
mov
mov
jmp
jg
test
add
mov
pop
dec
lret
lret
pusha
fwait
push
mov
cmp
push
push
js
shrb
arpl
sahf
sbb
stos
cmp
inc
pop
loope
mov
iret
or
js
or
mov
sbb
fidivrl
out
lea
lds
popf
repnz
and
stos
test
jno
inc
and
add
repz
dec
std
aam
jg
xor
pop
in
inc
pushf
xchg
sub
in
mov
insl
andl
test
shlb
daa
dec
jnp
mov
mov
loopne
ss
je
xchg
iret
add
pop
stos
bound
loopne
addr16
jne
cmpsb
or
xchg
pop
mov
cwtl
and
shll
div
inc
sub
xchg
jg
loop
fidivl
mov
cmpl
mov
push
adc
mov
sub
fistpll
or
movlps
in
stos
jecxz
jbe
push
and
leave
jecxz
outsb
addb
jnp
pop
xlat
lret
mov
jle
lock
and
rcll
sbb
pop
mov
jo
test
les
adc
ja
xchg
mov
test
arpl
inc
xchg
jg
push
cmp
mov
and
sub
or
xchg
cmpsl
or
mov
mov
mov
push
inc
sarl
and
dec
mov
lea
hlt
xchg
push
aas
in
scas
insl
outsl
push
mov
inc
mov
fwait
lds
jle
push
movsb
hlt
daa
testl
jmp
xor
pop
fldt
push
or
sbb
mov
std
roll
push
call
cmp
dec
mov
popf
addr16
or
jg
orb
in
adc
dec
ja
push
push
mov
mov
and
mov
jp
leave
jecxz
test
in
or
iret
adc
push
jno
cmp
bnd
jns
je
addr16
and
popa
jb
mov
cltd
lds
mov
mov
xchg
daa
pop
fbld
xor
jnp
icebp
xchg
fldt
scas
test
dec
outsl
sbb
cld
outsl
sahf
add
pop
jmp
sahf
mov
lock
adc
sbb
in
mov
sub
pusha
fcmovb
and
pop
popa
fnstenv
pop
push
push
aaa
fwait
push
push
push
jmp
push
sti
mov
mov
aas
push
outsl
jp
jge
ret
lcall
and
orl
repnz
sub
icebp
mov
sub
into
pop
jno
and
stc
loop
shll
test
out
and
mov
inc
mov
lods
xor
or
add
lds
push
popa
adcb
add
testb
pop
js
loop
and
pop
leave
jno
sbb
and
stos
xor
lret
roll
repnz
mov
mov
test
cs
add
scas
data16
sub
dec
adc
clc
mov
add
ret
xor
nop
inc
and
mov
mov
jge
popf
mov
rorb
cmp
movsb
mov
lock
ret
daa
add
icebp
sbb
mov
imul
out
inc
adc
xor
push
gs
cmp
xor
sub
and
pop
outsb
jp
dec
sti
add
mov
mov
jmp
rcl
fldcw
icebp
ffreep
popa
add
sbb
mov
imul
jmp
pop
bound
sbb
dec
adc
aas
test
fwait
cmp
and
lods
nop
mov
fucom
jp
lock
shlb
hlt
and
push
dec
ret
imul
push
jne
hlt
push
sub
xor
addr16
or
xlat
inc
pop
push
outsb
outsl
adcb
sub
mov
xor
inc
sub
test
dec
movsl
cmc
ficoml
enter
add
fidivrl
call
dec
xchg
dec
and
dec
mov
pop
jno
inc
jns
in
enter
js
inc
mov
cwtl
cmpsl
or
adc
mov
cmpsl
xchg
hlt
iret
jbe
mov
mov
jmp
or
aam
movsb
push
or
inc
sub
jae
je
sbb
push
xor
xor
or
sbb
inc
push
mov
and
movsb
inc
jo
insb
jbe
loop
insl
inc
cmp
xlat
sub
sbb
xor
xchg
fwait
and
jae
sub
push
xlat
push
adc
mov
push
sub
pop
scas
lea
nop
lahf
andb
jecxz
popa
mov
xchg
push
pushl
cmp
insl
sbb
imul
out
jl
out
pop
shrl
jg
add
pop
mov
mov
std
xor
push
sbb
rorb
jne
out
cmpsb
es
pop
cmp
adc
stos
xor
dec
xchg
xchg
xchg
xor
sub
dec
inc
jle
cmp
inc
add
xor
fdivl
js
orl
mov
cmp
orb
inc
xorb
cmpl
mov
ds
stos
xor
test
xchg
es
fldz
mov
mov
cli
aam
mov
fidivs
shll
pop
cmp
mov
data16
mov
mov
lock
out
inc
ret
mov
test
idiv
push
aad
lds
pop
adc
outsb
das
movsb
pop
subl
xchg
push
mov
mov
sahf
push
inc
mov
mov
js
mov
push
cmpsb
mov
jmp
xor
xchg
cs
imul
cwtl
sar
add
adc
jns
ret
push
cmpsb
jl
mov
nop
lret
daa
sbb
xchg
and
sbb
repz
or
rorl
jg
adc
push
xchg
cmp
rcrb
imul
aad
outsb
int
mov
jns
add
outsl
dec
jns
mov
out
cmpsl
cmp
sbb
or
clc
sub
dec
inc
lret
mov
aad
xchg
inc
push
ljmp
cmp
xor
and
sbb
dec
xchg
or
pop
push
jle
frstor
sbb
movsl
pop
jne
pusha
sbb
roll
xor
stc
cmp
and
dec
repz
out
and
push
jg
xchg
push
jno
mov
lret
in
pop
jle
or
fildl
ficoml
lahf
push
inc
ror
fdiv
mov
test
xchg
test
mov
dec
dec
cmpsl
mov
les
jne
pop
jp
push
gs
in
push
in
es
sub
push
fmull
rorb
mov
jl
xchg
lods
xchg
popa
mov
pop
cmc
jmp
mov
stc
ror
ja
jbe
rolb
enter
and
subl
inc
pop
hlt
dec
ret
push
xor
lds
push
inc
sbb
cld
adc
fisttpll
sub
mov
scas
int
mov
inc
mov
mov
leave
xchg
add
adc
xor
push
dec
xchg
and
ds
mov
test
push
jle
and
xchg
sbb
dec
cmpsl
cmc
stos
xor
xchg
xchg
jb
and
cwtl
push
sahf
mov
cwtl
adc
mov
dec
cmp
xchg
sub
lcall
inc
stos
push
pop
aas
or
addr16
sbbb
jmp
sub
mov
ss
and
ss
lret
in
jo
loopne
repnz
jge
or
sti
push
popa
fwait
sub
mov
call
clc
jl
pop
jno
add
enter
lods
push
sub
adc
adc
cmpsl
shll
popa
pop
in
std
es
xchg
stos
rorl
dec
add
dec
inc
int
pop
adcb
cld
inc
clc
popf
jge
xlat
xor
in
add
jne
mov
out
aam
pop
mov
arpl
mov
mov
and
sub
xor
adc
enter
shrl
shrl
push
bound
iret
mov
jl
xchg
ret
push
or
imul
pop
xor
testl
and
test
aas
jge
pop
inc
fstpt
test
xor
negl
int3
xor
xchg
out
inc
shl
dec
lea
das
enter
mov
push
shr
add
cltd
mov
jge
das
addr16
cmpsb
js
jo
addr16
notl
pop
aad
hlt
test
into
fbld
add
adc
outsl
dec
adc
gs
test
xor
ljmp
test
lock
adc
into
cmc
and
xchg
scas
and
lahf
xchg
push
shrb
sar
call
dec
push
inc
rolb
sbb
hlt
or
pop
dec
popa
fwait
lods
fucomp
xor
mov
and
dec
or
and
adc
xchg
shll
das
outsl
jnp
fstpl
subb
push
mov
arpl
fnstcw
sub
filds
inc
or
xchg
push
pop
out
and
aam
inc
or
fldl
pop
xchg
inc
fwait
lods
add
push
les
push
cmp
and
sti
adc
in
jp
in
and
notb
sbb
mov
and
clc
jge
mov
or
fimuls
cli
inc
pushf
add
fsubrp
int3
mov
ficomps
fildll
inc
sub
data16
pop
mov
inc
outsb
sub
aas
lret
cmp
mov
iret
lret
rorb
popf
out
in
pop
sbb
push
cmp
jge
sub
pop
pop
aad
sub
pop
push
aam
pop
rclb
insb
cmp
ss
mov
fldt
int3
gs
xor
jecxz
lret
xor
jle
dec
jae
cld
int
aad
lock
into
sbb
mov
cmp
inc
stc
hlt
sbb
mov
add
lock
stos
and
outsb
add
mov
sbb
xchg
out
cmp
es
and
sarl
loop
ds
rclb
sti
or
jo
lcall
icebp
mov
mov
xchg
mov
ja
mov
fidivs
jle
stos
cmp
int3
shlb
push
mov
jno
and
test
into
mov
outsb
jp
and
in
jns
jecxz
or
popf
jle
dec
fisubs
add
mov
js
cmpsl
pop
xchg
adc
clc
rorl
ss
stos
adcb
int
sub
movsb
jo
fmul
ja
and
jb
and
movsl
jne
addr16
shlb
pop
cmp
inc
cmp
out
lea
or
dec
into
dec
cmp
arpl
out
lods
pusha
mov
adc
inc
sbb
movsl
lret
add
cmp
xorl
xchg
or
scas
lds
add
xchg
jecxz
mov
dec
jl
sbb
aam
adc
out
in
and
aaa
loop
inc
shlb
inc
frstor
jge
lret
jae
add
movsl
sbb
cmc
mov
dec
cmpsb
fdivs
stos
xchg
xor
adc
add
adc
into
clc
mov
dec
push
popf
test
jae
outsb
pusha
sbb
fsubrl
divl
push
movsl
sub
push
ja
rorb
lods
shl
mov
fildll
push
or
loope
xor
cld
int3
lods
sub
xor
lea
sahf
pop
int
dec
pushf
shlb
imul
sub
push
push
rcl
lret
int3
pop
push
fdivrs
lods
loop
dec
cli
aad
xlat
cli
mov
or
jge
gs
mov
pop
mov
or
and
popa
push
sbb
jmp
sbb
push
daa
fadds
popf
dec
jae
inc
mov
ds
mov
dec
jbe
rorb
xor
pop
or
icebp
adc
jno
dec
add
pop
cmpsl
jle
mov
pop
push
cmp
repz
pop
pusha
pusha
imul
mov
icebp
lret
movsb
out
fwait
cld
decl
daa
and
lret
arpl
mov
es
push
sahf
leave
repz
decl
incl
pop
insb
fmull
mov
mov
mov
shll
stc
jecxz
bound
in
pop
pop
cld
lock
rorb
and
in
inc
je
mov
das
shrb
jnp
aas
imull
pop
add
faddp
repnz
lds
in
dec
enter
das
nop
push
push
flds
pop
mov
xor
shlb
pop
pop
aam
cli
cmp
ds
mov
in
xor
test
mov
xchg
nop
test
js
xor
fcoms
sarb
insb
and
dec
xor
mov
dec
ror
test
add
pminub
xchg
cmpsb
lea
mov
aam
adcl
inc
cmp
and
sub
fcmovnu
aad
or
fisubs
mov
ss
sub
dec
cmp
fmulp
mov
push
or
sub
fisttpl
add
ljmp
jno
mov
inc
jnp
ds
pop
mov
inc
mov
add
pop
dec
es
mov
insl
into
inc
insb
mov
sarl
and
add
xor
and
and
inc
or
popf
arpl
inc
mov
add
lock
fmulp
mov
mov
mov
lcall
xchg
push
fdivr
mov
jo
movsb
stos
je
into
shr
xchg
cmp
clc
and
enter
cmp
jmp
sbb
xor
xor
jl
cmp
mov
loop
clc
daa
pop
xor
cwtl
jbe
bound
data16
cmp
mov
push
push
and
stos
add
sub
fsubs
dec
and
dec
out
js
dec
ffree
mov
movl
rorb
aad
sub
dec
dec
cltd
pop
fstl
cwtl
dec
mov
sub
fidivrs
jg
add
addr16
xchg
dec
int
fsubrl
mov
pop
aad
pop
mov
lret
and
sub
jb
stos
sub
adcb
push
pushf
nop
pop
sbb
mov
push
mov
outsl
or
insl
out
pushl
or
mov
clc
sub
push
xor
out
add
popa
push
hlt
popa
and
lcall
add
imul
sbb
or
gs
xchg
repnz
fsts
inc
add
jb
fstl
in
mov
dec
inc
dec
js
mov
mov
repz
or
jp
adc
divl
fsts
add
xchg
mov
sbb
ret
jnp
jae
cmp
out
jno
or
leave
jg
mov
mov
loope
mov
lret
lods
je
testb
pop
lret
push
loopne
ret
sbb
in
xchg
movsb
sahf
or
mov
fnstcw
cli
fists
orl
fdivr
scas
imulb
imul
mov
or
or
lcall
cmp
mov
mov
add
hlt
dec
jle
aaa
movsl
divb
adc
adc
xlat
gs
in
addb
dec
imul
aad
inc
nop
xchg
scas
inc
sbb
xlat
cs
sbb
xchg
bound
cmpsl
in
push
mov
pop
jbe
add
and
adc
mov
pop
add
xlat
sub
xchg
jnp
xchg
jae
ja
lahf
jge
push
dec
hlt
push
xchg
nop
test
jnp
fildl
lahf
sti
push
mov
in
ljmp
call
cwtl
inc
add
xchg
mov
inc
xchg
xchg
bound
ret
mov
out
cwtl
jb
lret
mov
cmp
sub
imul
mov
lahf
test
sub
ret
sub
mov
pop
sub
sbb
mov
jae
ljmp
lds
push
fiadds
movsl
in
or
or
scas
dec
shll
cmpsl
scas
jl
test
jl
shrb
bound
xchg
outsb
test
jns
or
or
xor
int
in
pop
std
daa
and
scas
aad
rclb
and
loop
jl
inc
lea
pop
jg
ds
dec
imul
and
mov
cmp
js
leave
sub
cltd
mov
lcall
lret
dec
addr16
les
cmpsl
mov
fidivrl
incb
jne
addl
add
rorl
add
loopne
test
insl
mov
mov
cmp
loop
imul
mov
add
dec
pop
mov
js
repz
fidivs
movsl
or
mov
sbb
lock
or
loop
pop
lcall
push
lds
sbb
adc
sub
ret
rcrl
imulb
imul
xchg
push
loopne
daa
nop
pop
mov
lock
std
jmp
jg
popf
faddp
pop
mov
mov
mov
testl
inc
cmp
dec
or
test
xchg
or
aam
mov
and
sub
mov
sahf
fmuls
popf
shll
jno
mov
dec
nop
je
lock
lods
pop
sbb
mov
push
dec
xor
add
mov
sbb
insb
push
test
repz
push
xor
add
fwait
jecxz
xor
mov
sbb
dec
push
lods
out
xor
sti
jle
jg
in
sub
lea
pop
add
lea
cmpsb
jmp
add
ds
jbe
cs
movsl
xor
pushf
rcll
std
and
jecxz
cmpb
rorl
fs
xchg
cld
fdivrl
xor
jnp
jle
js
sbb
mov
nop
cwtl
jge
lds
xlat
les
test
add
mov
data16
and
inc
mov
fdivrs
shrl
mov
fbld
adc
addr16
fdivs
pusha
mov
aam
xlat
push
xchg
jo
jns
jo
jae
das
cli
out
and
out
icebp
pop
mov
pusha
jle
insb
push
adc
mov
lahf
shl
dec
ds
mov
ljmp
mov
mov
ret
add
mov
push
mov
lret
lods
rcrl
and
outsb
xlat
stc
jo
mov
add
add
testl
push
push
data16
xchg
fimull
pop
and
outsb
and
lods
pusha
divb
mov
push
das
xor
cwtl
rolb
sarl
and
cld
test
mov
cmc
add
cmp
mov
adc
out
jbe
out
cwtl
ljmp
lea
adc
int3
sahf
mov
mov
pop
daa
scas
xchg
push
or
adc
add
pushf
xchg
or
movsb
rcl
inc
mov
pop
pop
mov
jg
mov
jb
movsl
cld
ficomps
ljmp
sahf
std
divb
imul
add
inc
xchg
adc
jbe
movb
mov
fnstsw
popf
xchg
imul
adc
mov
outsb
sti
int
fcomps
in
dec
sahf
iret
inc
test
sbb
sti
xchg
pop
cli
push
xchg
xchg
mov
sbb
insl
sub
iret
out
push
jge
daa
insb
jae
lods
xchg
dec
movsb
in
xor
mov
mov
or
les
or
out
cmc
push
fsubrl
jg
xlat
pop
sbb
inc
leave
mov
pop
ss
jecxz
xchg
jno
test
xchg
add
pushf
fdiv
movsl
mov
stos
push
imul
sub
pop
or
jnp
lcall
stc
xchg
fimuls
enter
clc
lds
leave
ret
cmp
add
out
addr16
fimuls
pop
pop
xor
dec
pop
testl
out
sbb
les
push
add
mov
add
cmpl
xchg
lret
add
mov
mov
icebp
imul
push
fists
mov
push
out
lods
dec
adc
out
cmp
daa
jno
dec
mov
aam
test
pop
xchg
xchg
iret
inc
inc
mov
add
xchg
arpl
pop
cmc
pop
lahf
jecxz
insb
cmp
xchg
cld
and
push
dec
int
hlt
mov
not
push
xchg
popf
lea
sbb
fwait
lahf
test
divl
sarl
je
daa
push
jg
pop
es
push
mov
cmp
adc
sbb
pop
mov
movsl
add
mov
push
pusha
and
ljmp
dec
xlat
dec
jg
mov
scas
loope
shrb
testb
push
in
cmp
daa
pop
leave
xchg
sar
sbb
push
shlb
loop
push
imul
enter
or
mov
data16
loope
cmp
imul
push
mov
add
adc
cmp
dec
sub
pop
repz
xor
fcmovne
out
in
sbb
sub
ret
xchg
xor
xchg
imul
loop
push
pop
mov
xchg
stc
sub
xchg
daa
mov
pop
sub
shl
jb
xor
mov
xchg
adc
daa
push
dec
cmp
roll
pop
stos
jl
mov
push
cmp
dec
push
sahf
push
arpl
cwtl
inc
mov
cmpsl
push
ret
and
inc
mov
gs
mov
mov
lods
mov
sbb
push
adc
ficompl
add
mov
int3
push
jp
test
push
cmp
mov
or
inc
scas
loope
adc
pop
jnp
cmp
or
insl
in
fimull
dec
inc
pop
jg
pop
out
std
aad
inc
int
cmp
sub
cs
out
sbb
or
cmc
clc
mov
add
sub
pop
mov
or
sub
pop
push
out
lods
fnstsw
pop
ljmp
cmp
rcl
insl
adc
fistl
mov
jg
loope
cli
int3
loope
xchg
loop
outsb
or
and
cmpsb
gs
cmc
loope
pop
out
outsb
sub
and
jmp
mov
call
mov
mov
loop
jne
lods
push
pop
adc
push
and
xor
cmp
out
mov
movsl
pop
cmp
clc
push
and
cmc
repz
sbb
lods
in
jecxz
inc
pushf
ljmp
jl
iret
pop
push
dec
lds
mov
enter
xchg
adc
sbbl
xchg
stos
cld
lods
iretw
or
enter
and
insb
inc
jecxz
cmp
into
xchg
mov
mov
sub
in
into
sub
sbb
xchg
js
pop
lods
jae
cmp
mov
add
jbe
xchg
mov
sbb
insb
jp
sub
ret
shl
xchg
jae
fimull
rcrb
xchg
xchg
insl
ss
leave
mov
stos
mov
push
nop
js
jne
sbb
jle
notl
in
and
js
pushf
das
cmp
and
push
flds
hlt
es
adc
push
rep
iret
fldenv
mov
push
mov
cmp
push
daa
ret
clc
mov
call
mov
mov
enter
mov
sbb
jp
xchg
xor
lcall
fists
or
pop
sbb
cs
imul
mov
ja
shlb
sub
sbb
jb
or
dec
sbb
sbb
adc
iret
movsb
mov
fs
xchg
pop
loopne
jbe
jnp
xchg
cmp
mov
mov
push
ss
jbe
pop
outsb
pop
in
loope
dec
nop
idivl
dec
inc
popf
add
mov
mov
push
add
add
xchg
dec
xor
mov
mov
inc
push
add
inc
insl
fisttpl
ljmp
mov
push
les
cs
iret
jae
jbe
mov
sarb
lea
push
std
mov
cmp
mov
pop
add
movl
lret
mov
jle
sub
dec
or
ret
stc
insb
xor
mov
popf
jg
mov
add
sub
pop
enter
push
mov
inc
je
push
sbb
js
mov
lret
dec
adc
shr
cli
push
jne
scas
cmpsl
add
leave
mov
mov
in
loop
pop
js
cmp
sub
push
mov
pop
cwtl
mov
sbb
mov
pop
dec
dec
ja
loop
filds
incl
mov
or
test
aam
inc
les
mov
mov
sbb
movsb
dec
mov
in
es
push
ds
rolb
ret
lods
jo
mov
cltd
mov
push
sahf
insl
insb
jne
jno
inc
insl
pop
sub
or
pop
rorl
repz
sbb
shl
stos
pop
aam
das
push
xor
test
fdivl
dec
sub
mov
into
mov
ss
mov
jecxz
aad
mov
flds
js
out
adc
xchg
loope
mov
out
adc
pop
push
hlt
pop
xor
std
enter
cmpsl
xchg
mov
aas
add
mov
ss
pop
mov
adc
fbld
repz
mov
cmp
sub
std
adc
or
pop
sub
cmpsl
jae
dec
inc
xor
mov
lds
es
loop
mov
mov
pop
jae
push
inc
push
sti
mov
aad
and
clc
clc
inc
fcomps
mov
repz
push
iret
icebp
pop
scas
pop
dec
jecxz
ret
mov
out
pusha
movsb
aas
stc
clc
and
adc
sbb
inc
enter
dec
mov
ret
jo
xchg
xor
pop
pop
in
mov
lcall
and
imul
add
and
lea
add
dec
jg
add
mov
mov
mov
test
in
aas
mov
out
loop
and
cmp
xchg
jb
daa
cmp
in
xchg
cmpl
sti
subb
test
mov
mov
nop
and
jecxz
jp
les
dec
cmpsb
negb
mov
sbb
jnp
dec
rcll
loope
into
mov
adc
outsb
dec
popa
mov
sbb
cltd
xchg
xchg
aaa
ljmp
push
xchg
cs
icebp
mov
sbb
mov
sbb
push
or
insl
jp
push
scas
pop
ljmp
icebp
mov
shlb
js
mov
dec
or
dec
test
push
es
xchg
mull
pop
mov
fcmovnb
pop
sub
sbb
insb
pop
cld
ds
test
ds
popa
mov
mov
cwtl
lea
imul
dec
movsl
sti
push
imul
or
rorb
inc
push
cmpsb
ror
cmp
dec
shrb
xor
jmp
push
xchg
add
lods
adc
pop
popf
and
subl
jbe
mov
scas
or
mov
iret
pop
inc
mov
jg
dec
jo
jae
mov
imul
inc
insl
dec
js
mov
shl
hlt
mov
clc
jb
sub
mov
and
mov
rclb
mov
jno
add
xchg
and
test
xchg
jg
lds
or
or
xchg
sub
push
adc
shrb
ds
push
into
and
mov
mov
jne
sti
inc
loope
or
push
lock
testl
xchg
pop
push
loop
or
iret
adc
sub
sarl
mov
fdivrl
cli
sbb
scas
mov
fcoms
in
aam
jge
adc
cld
jae
pop
lds
and
nop
test
pusha
sti
mov
or
or
or
adc
xor
cmp
pop
jp
sahf
xchg
or
mov
jl
ja
test
mov
inc
inc
enter
jbe
and
iret
cltd
mov
jg
adc
dec
mov
stc
push
mov
sub
fwait
movsb
inc
pop
out
sbb
sbb
ljmp
hlt
pop
js
loopne
inc
or
rorl
scas
shr
and
add
loope
mov
test
mov
xchg
mov
popa
rcrb
mov
and
jae
pop
adc
adc
mov
mov
enter
fwait
scas
xchg
aas
pop
push
cmp
loop
or
fidivrs
movsb
out
sub
rolb
in
rcll
mov
sbb
cmpsb
outsb
lea
ficompl
lcall
cmpsl
test
movl
fnstcw
test
mov
inc
mov
das
outsb
mov
cmp
mov
mov
insl
dec
and
ds
pop
push
push
pop
dec
adc
aas
inc
inc
mov
andl
clc
lahf
cs
mov
cmp
or
cmpsl
outsl
or
mov
and
mov
pop
fnstenv
cmpl
push
int3
pushf
loope
sbb
subl
push
mov
jno
sub
pop
jl
sbb
es
in
mov
mov
and
out
push
outsl
repz
sub
repnz
dec
jmp
nop
adc
jo
mov
adc
inc
mov
dec
test
pop
outsl
in
jno
fld
sbb
pcmpgtw
dec
mov
out
xchg
cmp
pop
dec
or
push
jne
and
adc
cld
hlt
stos
not
fstl
scas
ret
rclb
sub
mov
ljmp
ss
add
pusha
out
ficoms
jbe
loope
dec
mov
push
jle
jle
fwait
fwait
adc
sti
test
cld
xchg
shr
movl
out
sbb
push
ljmp
movsb
pop
insl
stos
and
or
divl
jae
jmp
loop
insl
in
in
clc
push
call
pop
inc
fdiv
les
lret
test
xor
adc
mov
mov
mov
adc
testl
movsb
je
push
push
cld
ss
cmp
dec
jo
popf
push
sub
adc
lret
ss
outsl
out
push
sbb
mov
adc
in
adcl
lahf
test
enter
popa
mov
sub
push
or
test
pop
lods
fsubrs
mov
sbb
sub
repz
pop
inc
xchg
repz
cmpsb
and
outsl
jbe
push
add
cs
or
cld
push
mov
pop
xchg
ficompl
repz
adc
std
pushf
xchg
mov
lahf
imul
lods
xor
bound
inc
gs
and
addr16
in
xchg
add
loopne
mov
add
jns
jne
xor
rclb
cld
pop
cmpl
jmp
jnp
ret
popf
ja
xchg
push
fwait
inc
sbb
sbb
and
add
aaa
mov
fstps
sub
cmp
data16
fnstcw
add
shr
jle
sbb
xor
dec
fcompl
cmp
push
cs
gs
call
jns
lea
dec
mov
lret
and
mov
nop
cmp
loope
aaa
imul
repz
rolb
sar
rorb
push
xor
push
or
jae
sbb
push
leave
dec
scas
pushf
adc
jle
and
rcrb
dec
ret
cmp
sbb
sbbb
push
icebp
jle
push
adc
loop
sbb
sahf
push
jne
stos
sbb
inc
scas
mov
daa
call
xchg
les
sbb
push
mov
ret
cwtl
mov
dec
notb
lea
mov
xchg
pop
xor
mov
mov
hlt
daa
out
int3
das
repnz
mov
iret
cmpsb
testb
inc
xor
shll
or
fdivrp
mov
pop
mov
jae
dec
or
mov
inc
or
imul
push
adc
or
out
bnd
sbb
cmp
sbb
push
outsb
mov
mov
in
mov
jae
in
movsb
adc
jae
ffree
in
cmp
dec
jecxz
insb
mov
je
imul
jb
insl
hlt
sahf
in
mov
mov
add
scas
add
mov
xlat
pop
imul
push
push
xchg
rclb
jb
inc
ret
xchg
neg
cli
adc
dec
xchg
nop
adc
sub
dec
bound
gs
xlat
and
pop
and
adc
stos
ja
push
and
sub
jo
sarl
cli
in
insb
fdivs
in
inc
mov
lahf
cmp
aas
jl
xchg
int3
or
xor
and
cmp
sbb
pop
jns
inc
sahf
sbb
mov
jno
xor
and
pop
fnstenv
daa
jnp
and
pop
sbb
add
xchg
push
jmp
cltd
rorb
pushf
mov
pop
push
jle
sarl
push
in
xchg
and
xchg
mov
adc
sub
int
in
jge
rorl
adc
adc
push
das
dec
std
xchg
push
mov
cmp
and
inc
int3
sbb
adc
add
sarb
div
fmulp
fnstcw
into
pop
jae
sub
adc
out
xchg
loop
adcl
lret
out
xor
leave
icebp
repz
scas
mov
ret
mov
push
push
mov
sub
and
dec
mov
cmpsl
pop
mov
xlat
or
mov
or
subb
imul
test
mov
int
dec
notb
movsl
aam
xchg
xchg
ss
pop
inc
jg
arpl
xor
adc
cmp
popa
and
aam
mov
push
sbb
pop
xor
inc
sub
mov
icebp
xchg
cmpsb
pop
stos
xor
inc
cmp
out
ficompl
jbe
mov
xchg
arpl
ds
sub
jnp
lcall
in
sbb
cmp
shll
mov
cld
add
jmp
aas
scas
sub
cmp
and
adc
cltd
push
dec
stos
movsb
fadds
jle
mov
or
and
mov
lcall
orb
dec
adc
and
inc
loop
jmp
jnp
aas
inc
shrl
xchg
jb
sbb
and
out
mov
ret
test
cmp
jp
test
je
xor
xor
push
xor
inc
movsb
pop
adc
pusha
mov
test
jae
or
loope
jmp
mov
or
pop
ret
jb
inc
and
sbb
push
mov
cs
sahf
pop
lods
and
pop
mov
in
xchg
dec
sub
push
mov
mov
insl
rclb
pop
lahf
mov
inc
icebp
cmp
adc
pop
or
and
pop
pushf
das
mov
lahf
in
mov
out
fcomp
inc
push
mov
ss
adc
jle
adc
fsts
test
stos
adc
dec
jmp
outsl
or
pop
stos
enter
mov
adc
inc
ds
cltd
fisubs
cmp
cld
jnp
xor
fiadds
shrb
mov
cmp
mov
xor
fidivl
rorb
repnz
lds
popf
sub
loope
pop
notb
adc
push
xchg
lret
sbb
movsl
xchg
inc
cltd
xchg
pop
mov
inc
dec
adc
sub
xchg
notb
aam
mov
mov
in
push
repz
ds
inc
inc
int
dec
repz
out
nop
and
addr16
jb
dec
xchg
leave
pop
xchg
js
out
jg
cmpsl
out
in
aaa
mov
cmp
sub
adc
aam
xor
push
jmp
out
xchg
mov
jecxz
ss
pop
adc
subl
mov
into
fwait
or
cmp
xchg
fwait
rolb
rcrl
push
pop
inc
das
jmp
shlb
ret
mov
and
inc
add
into
ficompl
shll
icebp
pop
adc
pop
sub
mov
xor
stc
jb
pop
push
dec
inc
mov
inc
or
ds
inc
lret
loopne
test
jge
xchg
fs
sbb
xor
fcmovnbe
sbb
pushf
xor
xchg
sbbl
jl
sbb
popf
add
imul
mov
inc
je
mov
lret
je
push
sub
lock
dec
lock
out
mov
loopne
mov
stos
jge
stos
or
daa
push
orl
mov
pop
in
mov
xchg
aaa
add
and
cmp
cltd
dec
sti
repz
jne
pusha
sbb
in
sahf
or
jb
dec
sbb
xor
dec
sbb
ljmp
add
das
mov
and
push
xor
insl
stos
into
pop
and
rol
movsl
pusha
loop
and
xchg
lods
push
push
xor
push
jbe
cwtl
sbb
pop
push
fsubrl
sarb
or
cmp
lret
in
testl
xchg
jns
dec
into
js
cwtl
adc
cmpsl
and
add
mov
cmpl
and
cmpl
sub
mov
rcl
imul
in
jl
out
push
sahf
pop
loope
push
repz
or
mov
push
mov
shlb
sbb
sarb
jmp
push
ret
in
xchg
pusha
in
jo
add
outsb
mull
rcll
pop
test
cmc
rcll
mov
je
notl
out
adc
xor
popa
xorl
push
and
jge
subl
test
in
fs
dec
dec
sarl
movsb
jecxz
fwait
iret
cmp
call
inc
cmp
cmp
cs
into
adc
cmpb
loopne
dec
cwtl
jno
into
out
mov
rcr
add
aaa
add
and
aam
or
gs
and
xlat
and
das
int3
adc
sub
inc
rcl
imul
mov
sub
sbbl
add
cmp
mov
mov
in
push
clc
inc
les
fidivrl
mov
std
stc
loop
mov
jecxz
stos
aad
add
gs
pop
scas
shlb
jecxz
leave
cwtl
mov
pop
mov
jp
xorb
xchg
sahf
xchg
in
xor
xchg
fimuls
jo
xor
insb
lahf
add
adc
jnp
push
add
dec
mov
ljmp
mov
jno
jg
pop
in
out
mov
incl
ss
test
out
add
sbb
rep
sbb
lock
pop
and
cmp
jns
push
hlt
mov
xchg
mov
sbb
mov
adc
mov
lret
shlb
cltd
xor
and
adc
jmp
cmc
lods
mov
aad
int
jg
cmpsb
insl
add
insl
mov
les
lds
mov
jns
sti
and
lods
in
iret
xchg
in
popa
jbe
fcomps
jne
lret
lret
or
sbb
outsb
xchg
jnp
push
test
ret
pop
mov
sti
aam
jnp
ret
inc
push
subl
and
cmc
js,pt
inc
sti
popa
mov
push
pop
sbbl
add
inc
sahf
iret
hlt
or
in
pushf
mov
std
loope
and
in
jle
jecxz
nop
rorl
jno
dec
mov
loope
loopne
jae
push
jae
mov
push
cmc
mov
movsb
cli
int3
dec
dec
jbe
repnz
jl
sub
imulb
inc
ja
push
add
adc
int3
and
int
mov
mov
and
or
jbe
mov
aam
loop
scas
mov
cli
xchg
aas
mov
movsb
pop
adc
lret
sbb
vpmacsdd
popa
jp
rorl
lret
call
cmpsl
sbb
scas
jge
dec
clc
dec
jmp
adc
mov
imul
rorl
lea
jle
mov
sbb
fistps
mov
mov
popa
cs
bound
cmc
clc
pop
or
lea
std
daa
nop
jg
xchg
xchg
pop
pushf
lods
outsb
mov
idivb
sar
and
cmp
scas
incl
stos
xchg
xchg
out
xor
shrb
push
ja
movsl
and
xchg
dec
in
dec
inc
jmp
bound
lahf
arpl
mov
sub
sti
mov
push
sahf
mov
jne
mov
jae
pop
pop
out
xor
or
out
es
jmp
scas
stos
fldcw
pop
mov
ds
jb
cs
mov
inc
int3
inc
lods
pop
lret
mov
xchg
je
sbb
inc
push
mov
rcrb
je
mov
bound
rolb
dec
gs
loopne
and
aaa
arpl
enter
pop
jbe
mov
sub
mull
or
int
mov
insb
dec
test
cs
mov
xor
out
sbb
xor
inc
cwtl
mov
sbb
and
pushf
movsl
sbb
or
cmp
jbe
mov
push
pop
pushf
xchg
sub
push
aas
jmp
and
pop
call
js
push
fdivl
sub
mov
mov
ud0
loope
hlt
push
inc
xor
lock
xlat
nop
add
push
cli
pusha
arpl
and
lods
fsubl
sub
sub
xor
in
lods
fstpt
and
rcrl
push
leave
lahf
xor
imul
out
shrl
pusha
pop
and
ljmp
mov
mov
arpl
daa
xor
pop
jae
cmc
movsb
mov
xor
xor
scas
orl
mov
aaa
shrl
or
xor
jl
xorl
cmp
mov
stc
popf
dec
xchg
cmp
cmpsl
inc
mov
cld
lea
xchg
sub
stos
ret
cmp
pop
pop
clc
in
sbb
fcomps
fisubrs
lret
sub
clc
mov
mov
jnp
sbb
pop
or
push
adc
inc
adc
xchg
push
cmp
jo
adc
cmc
xor
pop
dec
inc
adc
jne
jne
imul
movb
loopne
pop
jg
movsb
push
cmp
outsb
mov
dec
jecxz
imul
mov
mov
pushf
mov
lahf
or
frstor
stc
push
aas
in
mov
loopne
xor
mov
imul
or
jl
lods
sbb
icebp
pop
lea
fnsave
in
xor
ds
cmpsl
xchg
cmpsl
add
push
mulb
mov
jecxz
jne
adc
popa
mov
pop
and
out
cmp
int3
popf
in
push
mov
dec
and
loopne
loope
sbb
psubsb
fcompl
mov
lret
sub
scas
mov
mov
movsb
lods
lret
leave
imul
push
add
add
mov
jo
pusha
imul
mov
popf
aas
add
push
adc
xor
sbb
jmp
xor
lock
or
fisubl
jo
sub
inc
adc
lock
fbld
pop
or
test
mov
stos
in
or
cmpsb
imul
jle
adc
or
repz
or
pop
dec
clc
loopne
jbe
or
insb
mov
mov
xor
ds
cltd
ret
adc
rolb
pop
mov
mov
pop
subl
jb
bound
jp
aaa
ret
data16
sub
and
cmc
xor
xor
push
hlt
out
imul
add
jl
lds
xchg
clc
mov
cli
ds
iret
jmp
inc
fildll
jl
bound
call
add
mov
inc
addl
in
pop
add
movsl
push
out
and
into
sub
jmp
in
sarb
pop
sti
xchg
xchg
push
push
xchg
xlat
mov
mov
loope
fxch
pop
movsb
mov
cmp
scas
lods
mov
sub
orl
cwtl
sub
lods
xchg
cmp
sub
shl
or
mov
dec
xor
pop
in
pop
nop
stos
inc
movsl
fisubrl
cmp
ds
and
pop
in
lahf
outsb
and
add
dec
pop
fcom
addr16
or
inc
scas
inc
dec
retw
push
cmc
loope
inc
pop
arpl
pop
call
mov
dec
inc
mov
in
fidivl
imul
cmp
cmp
or
mov
push
or
rcl
dec
mov
and
adc
and
mov
adc
push
mov
inc
push
sub
cmp
mov
daa
ror
push
fidivrs
lcall
push
fsts
xchg
mov
xor
ds
fwait
aas
imul
sbb
add
aad
inc
ljmp
daa
mov
adc
scas
ret
xchg
pop
xchg
inc
cltd
xchg
mov
add
subl
sti
mov
shr
mov
push
push
call
jge
push
mov
hlt
dec
dec
jns
mov
lea
push
sub
fsts
dec
add
sub
imul
xor
and
xchg
mov
sub
addl
push
cmp
jo
iret
lea
add
enter
lods
outsb
xchg
cld
scas
sub
loop
sbb
inc
add
jbe
idivl
data16
push
in
pop
lock
jne
push
pop
hlt
fsubrs
cmc
jecxz
and
ss
jl,pn
inc
jle
cmp
add
fimuls
dec
mov
femms
sbb
and
iret
cmpsb
ja
inc
roll
mov
dec
adc
imul
out
jb
scas
xorb
jle
sbbb
arpl
data16
mov
insl
loopne
aad
sahf
out
cmp
cmp
aaa
sbb
rorl
cwtl
test
pop
or
push
xchg
cmpsl
push
push
fstpt
mov
enter
movl
jae
mov
inc
or
xor
lret
cs
loopne
fcmovu
mov
loopne
icebp
jnp
mov
push
add
ljmp
sub
ds
adc
and
mov
xchg
sbb
fsubrl
stos
push
push
sarb
xorl
imul
mov
inc
arpl
gs
loope
fistps
dec
in
out
sbb
in
mov
and
adcb
pusha
jp
jecxz
fdivr
mov
les
sti
push
sub
pusha
rclb
mov
adc
sar
clc
adc
clc
shrl
in
inc
je
sub
sbb
pop
sub
mov
int
outsb
addl
dec
jge
cmpsb
dec
lahf
adc
xchg
paddq
push
mov
mov
inc
in
das
mov
xchg
and
add
outsb
mov
adc
aad
xorl
movsb
loope
daa
xchg
push
pop
movsb
dec
and
cmp
or
ds
pop
jo
inc
xor
icebp
xlat
add
add
mov
out
fcmovbe
mov
in
mov
xchg
dec
xchg
lds
sub
xchg
cmp
stos
mov
loopne
imul
push
and
jns
mov
mov
mov
shrl
jbe
jno
sbb
test
imul
scas
rorl
lea
lret
lods
lahf
insl
lahf
add
in
dec
das
xchg
mov
push
sub
daa
mov
int3
bound
cmpb
push
xchg
cltd
mov
insb
fimuls
pop
fdivs
jb
mov
lods
adc
test
sahf
inc
adcb
in
cmc
sub
mov
pushf
dec
cmp
add
mov
ss
xorb
dec
arpl
push
and
pop
lret
stos
mov
or
inc
xor
xchg
inc
push
dec
dec
mov
mov
and
pop
mov
or
xor
lds
loop
dec
cmp
push
mov
imul
sti
dec
lret
xor
dec
lea
xchg
pop
jne
shl
lea
aad
enter
fxam
sbb
ret
dec
jnp
pop
jb
shlb
fsubrl
std
dec
jecxz
jns
sti
frstor
insb
mov
loopne
addr16
in
jno
jno
push
sub
lea
mov
push
or
adc
inc
in
inc
nop
cmpsb
inc
xchg
lret
loop
iret
lea
inc
loop
mov
dec
sahf
das
cmp
sub
push
mov
mov
sub
jle
andb
in
mov
cmpsb
or
aas
push
xchg
xor
mov
mov
sub
jne
lret
push
in
movsb
test
in
mov
adc
sub
icebp
adc
mov
fnstcw
jno
sbb
pop
push
xor
adc
bound
mov
outsb
jl
dec
push
shl
pop
mov
dec
shll
sbb
out
rolb
sbb
fs
inc
lahf
xor
dec
sub
addb
in
add
xor
lds
sbb
xchg
and
xor
push
movsb
lret
xlat
pop
adc
movsl
mov
jmp
ret
shr
xor
xchg
jb
dec
bound
ficomps
scas
and
adc
sub
mov
pop
xor
xor
or
mov
pushf
rclb
xor
lods
push
push
jmp
ss
movsl
xor
lds
addr16
pop
cmpsl
inc
fstl
enter
insl
push
mov
xchg
popf
std
out
rolb
rcrb
jns
jl
lods
cmpsl
push
jo
hlt
out
inc
leave
mov
or
cmp
scas
cli
dec
cmp
sarb
icebp
push
es
mov
and
sbb
hlt
bound
mov
mov
cmp
mov
inc
push
hlt
mov
test
jp
or
or
or
push
in
push
test
add
mov
mov
shlb
dec
inc
sub
in
inc
int3
testl
inc
xor
fs
aam
movsb
push
lcall
push
xchg
arpl
pop
mov
and
ss
ss
jmp
add
xchg
cmp
xchg
dec
or
movsl
out
aad
xchg
sti
les
mov
sbb
lret
repz
or
in
pop
popf
ja
test
enter
mov
test
jns
xchg
dec
shlb
test
pop
fs
shrl
or
mov
mov
adc
dec
push
xchg
bnd
inc
sbb
sbb
dec
or
int3
dec
adc
mov
fdivl
mov
mov
insb
repnz
bound
and
push
push
ljmp
fnstcw
out
cmpsl
popf
popf
pop
sub
and
mov
out
sarb
sbb
outsb
mov
mov
jae
and
mov
and
sub
push
jmp
testl
clc
aam
imul
scas
cmpsb
xchg
mov
pop
sbb
shll
dec
je
std
popa
ss
inc
jge
lcall
out
aad
dec
or
scas
cltd
mov
sub
in
pop
leave
lock
sahf
test
imul
int3
fs
nop
dec
jns
adc
mov
roll
fcoms
arpl
mov
or
push
fmul
dec
sbbl
lret
pushf
in
dec
mov
sbb
jae
pop
data16
andb
inc
inc
and
subl
nop
push
mov
sub
sub
lcall
lock
mov
mov
mov
int
mov
es
mov
push
call
push
lcall
xchg
lea
iret
imull
xorb
stos
pop
mov
push
mov
gs
inc
jle
mov
cmp
out
inc
lcall
movsl
in
fidivrs
or
mov
repz
es
pop
mov
frstor
or
push
mov
sub
aas
cmp
lods
sub
movsb
mov
call
add
out
in
in
pop
stc
int
ljmp
add
jnp
inc
adc
std
fadd
icebp
idivl
into
xchg
cmp
test
inc
xchg
das
mov
mov
clc
inc
gs
xor
outsl
pop
cmp
inc
lcall
aas
fnsave
push
cmp
enter
lods
lods
xlat
shlb
cmp
mov
jbe
dec
cmp
mov
fs
dec
inc
filds
je
mov
dec
es
aas
push
jl
iret
fs
fcoml
fimuls
sub
clc
ja
lods
ret
jp
xor
insb
sub
dec
jb
xchg
icebp
lahf
xor
insb
mov
movsl
cs
cmp
fisttps
shlb
xchg
loope
sub
push
fbld
femms
sbb
or
std
mov
fsubrl
mov
or
or
jge
xchg
nop
push
pop
mov
mov
test
mov
xor
test
and
ljmp
in
cmpsw
imul
mov
xor
repnz
adc
dec
mov
mov
cmp
nop
dec
lds
out
shll
adc
lods
or
mov
or
jbe
adc
add
cmpsl
mov
sti
inc
sub
add
daa
inc
inc
xchg
repnz
cmpsb
xchg
xchg
sub
loope
and
in
push
mov
mov
xchg
mov
sub
dec
rcrb
lahf
dec
lahf
insb
jg
cmp
dec
dec
xchg
idivl
dec
pop
add
loop
popa
cmpsb
fsubl
gs
cmp
je
fsubl
out
xchg
mov
lret
mov
xor
mov
xchg
jecxz
addr16
and
xchg
cli
mov
repz
hlt
iret
add
lcall
xchg
or
int
mov
jo
test
push
xorl
inc
test
xchg
adc
xchg
gs
dec
mov
xor
insb
in
pusha
xchg
lret
aaa
fbstp
mov
xchg
inc
xor
je
or
repz
lds
out
push
popf
push
in
lds
push
jae
push
fmuls
xlat
das
push
out
jb
pop
test
mov
frstor
adc
daa
mov
jg
mov
mov
xor
orb
mov
push
mov
pop
and
xchg
fsubrs
sbb
inc
jbe
loope
cwtl
cli
sbb
mul
mov
insl
xor
sbb
stos
rol
inc
inc
pop
loopne
dec
pushf
mov
mov
add
je
push
out
sub
dec
in
pop
test
jl
test
and
test
dec
inc
dec
lock
jnp
mov
push
xor
and
cmpsl
aas
pop
cwtl
out
add
mov
jo
xchg
xchg
fdivrl
and
cmp
stos
aas
icebp
sahf
lcall
jno
xchg
rcll
lahf
xchg
mov
xor
fadds
enter
push
std
cmp
pop
not
add
adc
fisttpl
popf
push
ja
int3
movl
rol
and
mov
cwtl
nop
std
or
sub
les
lret
loopne
int3
or
sbb
loope
das
mov
and
jp
scas
movsl
pop
lods
adc
movsl
cmpsl
rolb
movsl
jmp
sbb
mov
adc
lcall
add
jae
and
cmp
out
mov
popf
dec
imull
and
popa
cwtl
adc
push
cwtl
dec
sti
push
cltd
inc
fisttpll
inc
add
dec
mov
push
scas
pop
or
jbe
adc
sbb
call
jle
jne
sarb
data16
adc
repnz
popa
mov
or
cwtl
cli
jb
popa
insl
insl
icebp
lcall
dec
jns
scas
xchg
clc
cld
leave
xlat
push
mov
mov
fmulp
movsl
aaa
scas
fadds
and
and
in
lock
push
or
insb
leave
int3
or
sbb
out
clc
aas
pop
or
mov
das
xor
xchg
xor
loope
roll
stos
andl
xchg
js
lds
int3
lods
js
add
lods
mov
pop
mov
fnstenv
faddl
sbb
int3
hlt
add
orb
xor
push
out
lods
cld
popa
adc
fwait
cmp
mov
int
or
dec
std
stos
loope
xchg
mov
mov
xchg
lods
mov
mov
lret
loop
xor
push
or
push
mov
fwait
adc
sahf
inc
ret
push
daa
test
ljmp
aas
xor
fbld
add
mov
scas
into
mov
jno
inc
push
mov
xor
fs
cmc
and
pop
mov
cmpsl
inc
ret
repz
and
movsl
outsl
mov
adc
sti
pop
lahf
loopne
pop
std
sub
adc
xchg
push
and
push
jo
es
lods
daa
mul
nop
push
adc
lds
sahf
mov
insl
and
out
aas
jae
movsb
or
xchg
push
enter
mov
pop
lea
stc
popa
cmpb
sub
lods
pushf
rcrb
or
mov
clc
jnp
adc
and
xchg
insb
icebp
push
inc
push
popa
or
xor
sbb
sarl
adc
cmc
xchg
mov
add
leave
dec
sarl
pop
pop
aaa
es
fdivrl
adc
arpl
popa
in
inc
cmpsb
shll
ljmp
push
jp
cmp
mov
pop
jb
or
mov
or
xchg
insb
lea
into
and
inc
test
inc
sub
cmpsb
std
jno
cmpsb
int3
cmpsb
adc
lcall
test
or
dec
and
jno
mov
mov
sbb
dec
inc
mov
jp
sahf
sub
and
push
cmpsb
jecxz
and
fisttpl
mov
push
pushl
xchg
rcr
or
outsb
mov
mov
push
pop
inc
stos
push
sti
gs
loopne
fistl
mov
jo
and
ret
sub
dec
test
leave
xor
inc
imul
jg
cld
sbb
movsl
cmp
fbld
std
jb
xor
xchg
hlt
and
cmpxchg
rclb
fadds
xor
mov
into
push
xchg
mov
push
sub
pop
xchg
lods
daa
mov
xchg
dec
jl
pop
inc
and
and
mulb
mov
stos
jp
and
xchg
adc
push
mov
adc
sbb
xchg
movsb
shll
push
pop
movsb
test
cltd
pop
xchg
xchg
cld
add
stos
ss
mov
xor
test
movsb
and
jnp
mov
fwait
dec
sahf
push
cmpsl
pop
xchg
inc
into
cli
xor
pop
and
stc
out
push
imul
movsb
outsb
mov
cvttps2pi
sbbl
stc
jl
loopne
in
mov
loope
mov
sub
aaa
filds
fadds
loopne
shl
inc
fimuls
or
das
cld
adc
fisttpll
push
or
sub
sahf
dec
in
cld
sub
push
lock
push
in
mov
pushf
sub
dec
adc
jo
lds
dec
add
fldenv
cmp
lock
hlt
xchg
mov
roll
sub
frstor
sub
adcl
loope
arpl
imul
cld
adc
aas
lods
bound
aad
and
pop
lods
outsb
mov
xlat
dec
or
lret
ret
mov
cmp
rorb
sbbl
add
sbbb
leave
pop
clc
imul
xchg
sub
inc
mov
stos
push
in
pop
cld
xchg
xlat
mov
int
aas
hlt
jle
xchg
test
lods
icebp
jnp
lods
subl
int
mov
and
add
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
push
add
xchg
cld
popa
bound
bound
in
outsl
in
repnz
iret
test
mov
cmpsl
imul
pop
stos
es
cmc
xchg
repnz
xchg
ret
add
mov
adc
mov
adc
addr16
lods
xor
mov
addr16
pusha
jl
lret
cltd
mov
rorl
xor
xor
pop
cmpsb
push
jo
imul
xchg
cld
sarl
lods
cld
dec
mov
das
aas
xor
xchg
lcall
or
pop
push
adc
dec
data16
rcll
rolb
dec
orb
cmpsb
xchg
stc
mov
imul
or
ljmp
cmp
or
in
mov
mov
mov
out
outsb
incb
arpl
lea
xchg
stc
inc
mov
dec
repz
loop
adc
adc
mov
mov
int
cmp
xor
fcoml
adc
mov
cwtl
mov
add
int
cmp
xor
mov
js
inc
andl
nop
data16
add
mov
sub
scas
xchg
xchg
mov
adc
ss
xor
or
sub
pop
mov
xchg
insl
aas
adc
cld
mov
pushf
xchg
pop
mov
xchg
cmp
adcb
xchg
lods
mov
sbbb
dec
inc
inc
scas
rolb
mov
xchg
push
cmpsb
mov
sub
jp
jns
aas
fidivrs
ret
or
sbbb
push
movl
or
sub
stos
mov
dec
dec
les
enter
mov
cld
roll
sbb
js
sub
sahf
sbb
mov
push
pushf
mov
xchg
or
cwtl
sub
mov
cld
fcoml
gs
mov
mov
ret
les
push
sub
push
mov
js
mov
cmp
xchg
pop
mov
inc
xchg
arpl
push
testl
fists
pop
insb
addr16
lcall
call
stos
mov
adcl
xchg
in
sbb
cmpsb
sub
mov
cmp
sbb
jae
incb
stc
inc
mov
ss
mov
and
jecxz
mov
call
dec
pop
add
icebp
or
dec
fs
enter
cs
pop
inc
jb
xor
inc
insb
jp
lcall
mov
sbb
clc
out
adc
push
mov
jnp
addl
cmpsb
test
cmp
mov
subb
or
sbb
cmc
dec
adc
push
or
sub
xor
cmpsb
bound
xchg
sbb
outsl
mov
xor
ret
ds
jae
mov
and
or
push
mov
mov
jno
jle
imul
sbb
xlat
mov
jb
inc
stos
adc
rclb
pop
jo
push
push
or
dec
mov
xor
push
frstor
mov
sub
jbe
cmc
std
push
inc
or
push
scas
xchg
cmp
lods
mov
mov
loopne
mov
pop
ror
sbb
xor
push
add
repnz
iret
jo
negb
mov
fstps
sbb
sub
cmp
adc
mov
mov
dec
arpl
and
sbb
in
fldenv
out
pop
cmpsl
test
mov
aam
cmp
or
out
or
out
cmpsl
out
adc
push
popf
xorl
in
sbb
ret
jno
pop
dec
inc
fnstcw
fwait
xchg
pop
repnz
mov
dec
leave
pop
jmp
mov
lds
adc
cmp
sbb
nop
inc
adc
js
push
and
xor
sbb
adc
std
dec
imul
scas
cmpsb
mov
fwait
push
or
loopne
sub
mov
outsb
mov
jmp
adc
pushf
movsl
push
loopne
test
sbb
into
lods
lods
or
notl
add
push
and
subb
call
fisubrs
lods
outsl
das
mov
dec
insb
cmc
mov
and
xor
cs
pop
xchg
sub
or
fcoms
sub
dec
stos
xchg
arpl
pop
mov
mov
push
jb
mov
push
out
and
mov
fxch
iret
cmp
pop
add
aad
loope
mov
xchg
test
cmp
dec
push
insl
push
divb
mov
imul
and
imul
xchg
mov
lods
test
ja
movlhps
xor
in
push
test
lret
adc
cmp
inc
inc
mov
lods
out
fcompl
hlt
adc
or
and
dec
into
nop
add
jg
leave
pop
int3
scas
in
outsl
jbe
adc
mov
dec
or
pop
jecxz
adc
lret
rcl
cs
loopne
jp
xchg
rcll
sub
and
jp
cmp
bound
das
xor
sarl
sub
loop
xlat
out
aad
outsl
inc
jecxz
arpl
ret
push
mov
dec
or
gs
mov
adc
std
daa
adc
cmp
lret
icebp
mov
dec
stos
divl
jns
stos
cmp
xchg
dec
stos
push
mov
pop
xchg
push
fsubrs
imul
movsb
call
mov
sbb
sbb
test
push
fmulp
inc
shrb
data16
dec
adc
test
pop
in
inc
sbb
xor
cs
mov
enter
push
lock
insl
fcoml
sub
mov
sbb
jmp
sub
outsb
xchg
or
add
data16
xor
sub
ss
xchg
dec
inc
push
lods
pop
ret
lods
pop
rclb
jno
fucom
out
test
aas
pop
loopne
popa
ljmp
lahf
sub
mov
push
xor
sbb
out
fucomip
jg
jmp
pusha
scas
mov
mov
or
insb
daa
out
repnz
dec
push
lcall
adc
sub
aad
or
aas
repnz
ret
scas
ljmp
mulb
lahf
pop
les
push
data16
repz
mov
adc
mov
pop
js
pop
jp
ljmp
fs
and
add
sti
inc
dec
push
adc
test
test
ja
mov
adc
pusha
cmpb
std
mov
dec
xchg
and
aaa
jno
jmp
hlt
int
inc
fcmovnbe
outsl
icebp
dec
sub
push
mov
pop
sbb
dec
lret
xor
pop
xchg
nop
adc
divl
push
jb
and
fnsave
and
out
popa
iret
in
push
mov
les
loop
push
xor
lret
xor
test
jb
std
shll
loope
or
cmp
jg
subl
lret
sub
addb
loop
mov
hlt
push
jne
push
jo
int
cmp
jno
xchg
aaa
inc
loopne
pop
jg,pn
jne
and
jmp
mov
lds
lcall
adc
test
jno
ss
add
andl
je
jae
adc
fcompl
dec
out
out
adc
mov
call
pop
mov
pop
lcall
icebp
out
sahf
sub
dec
sub
add
and
dec
shl
pop
pushf
pop
js
lods
fucomp
js,pt
out
jge
sub
outsb
inc
test
pop
scas
mov
pop
mov
rorl
push
jne
lods
push
add
jecxz
out
fisubl
add
jecxz
mov
pop
in
leave
jbe
pop
mov
call
pop
cmp
mov
or
xchg
out
int
out
mov
xchg
pop
scas
adc
xchg
push
mov
ljmp
and
mov
ss
and
pop
cmpsl
pusha
jno
xor
negb
pop
mov
push
out
shll
ds
mov
imul
sub
movsl
jmp
fidivl
xchg
push
iret
cmp
repz
gs
jp
daa
testl
xor
pop
jne
aas
int3
dec
clc
push
imul
lea
cmp
fmull
add
cld
in
mov
mov
sub
dec
aad
jmp
lea
cmp
sbb
jo
jecxz
movd
enter
push
js
in
bound
xor
sub
sbb
mov
or
xor
pop
jne
sub
mov
lret
in
cmp
xchg
cmp
pop
roll
insl
add
scas
cmpb
fnstenv
pop
push
cwtl
stos
stc
out
xor
mov
jmp
aad
inc
ds
test
test
idiv
aam
sub
inc
sahf
imull
aaa
mov
movsl
data16
pop
mov
cmp
cmpsl
cld
adc
cmp
gs
mov
push
pop
push
fistps
pop
lea
cmp
cmp
div
jnp
les
inc
das
in
into
sbb
enter
inc
sarl
jg
ljmp
sub
loope
test
jmp
outsb
jne
loope
pop
mov
iret
xchg
sub
ja
sbb
sub
psadbw
dec
dec
mov
add
and
arpl
cmp
daa
pop
dec
cs
xor
or
or
jo
arpl
mov
cli
scas
adc
bound
dec
test
sarl
clc
ret
insl
mov
loopne
jno
adc
dec
push
add
cld
or
pop
dec
into
lods
push
cmp
cmove
sbb
loop
mov
and
mov
mov
das
je
add
aaa
ja
shrb
andb
xchg
int
rdpmc
sahf
or
or
mov
mov
push
lods
adc
sub
xchg
icebp
es
fsubrp
fisttpl
push
mov
push
aad
sahf
test
pop
push
sbb
push
xlat
int
mov
and
sahf
xchg
inc
pop
mov
xchg
sbb
mov
fdivrl
mov
cmpsb
pop
xchg
add
insl
ret
das
das
fildl
inc
mov
inc
pop
movsb
inc
stos
add
imul
mov
popf
mov
out
addb
lcall
iret
lcall
enter
cmc
scas
ss
jmp
xchg
mov
adc
fsqrt
sbb
sti
repz
outsl
push
pop
lock
jge
in
into
test
cmpsb
mov
pop
or
push
push
nop
std
mov
xchg
sub
xchg
lea
lds
dec
fistpll
and
inc
mov
stos
mov
push
dec
inc
loope
je
mov
stos
shlb
cmp
in
push
test
dec
xor
mov
aad
mov
loop
cmp
adc
or
lahf
stos
pop
aaa
lods
or
push
in
call
jg
xor
js
xor
psubsw
imul
adc
xor
dec
dec
ja
jmp
leave
jae
data16
xor
cmp
sub
push
xor
das
sub
jle
xor
insl
mov
repz
scas
sub
ss
lea
lea
clc
scas
cmpsl
jb
jns
pop
out
mov
iret
arpl
adc
clc
movsl
stos
icebp
js
mov
cmpsl
lock
mov
shlb
test
or
jecxz
sbb
in
imul
cmpsl
mov
cli
mov
imulb
js
jnp
in
xor
aad
jl
in
loopne
sbb
lods
sub
test
add
push
cmp
out
cmpb
data16
icebp
lea
adc
jmp
dec
and
cmp
test
aam
push
add
xor
icebp
xchg
cmpsl
lret
adc
or
aam
pop
xor
jnp
jns
orb
sbb
and
test
xor
cmpl
mov
sbb
outsl
push
and
pop
and
icebp
ljmp
ss
xchg
es
and
test
pop
jo
popf
dec
mov
inc
sbb
jg
lcall
lcall
inc
inc
lds
ror
inc
inc
jnp
xor
push
mov
hlt
test
das
inc
enter
add
ror
cmpsl
fbld
xchg
mov
and
mov
fdivl
icebp
jne
negb
or
mov
incb
push
loope
sahf
xchg
xchg
jge
sti
dec
loop
pop
imul
or
stc
scas
out
jne
lahf
int
pop
rol
int3
std
lods
int3
sub
pusha
js
add
jnp
int
repnz
loop
push
sbb
cmp
stc
insl
fld
add
add
mov
sbb
stos
jge
andb
nop
gs
push
push
std
xchg
xor
dec
sub
int3
test
movq
dec
cwtl
ret
xchg
xchg
dec
xor
cmp
jmp
pop
scas
std
fwait
ljmp
inc
or
jno
fsubrl
sub
mov
push
mov
ja
push
xchg
push
sbb
cs
xor
pop
jae
roll
pop
pop
jno
xor
in
xor
inc
lea
in
call
shll
add
ss
scas
xchg
jne
lahf
cmp
mov
lods
inc
aas
cmp
aaa
popf
sbb
inc
lods
add
cltd
jmp
cltd
xchg
mov
push
seta
pop
mov
jae
inc
sbb
fwait
loopne
mov
mov
popf
mov
mov
dec
shrl
jne
int3
lock
add
adc
dec
jmp
lret
mov
pop
data16
inc
ret
cmpsl
jnp
push
xor
sarb
imul
ret
imul
fwait
inc
xor
dec
jmp
in
adc
fidivrs
int3
je
cmp
cltd
repz
push
nop
xchg
inc
pop
loop
mov
out
out
in
or
sti
lods
aam
subb
cmp
adc
sbb
and
xor
aaa
fcoml
sbb
cli
jge
in
fildll
cmp
stc
pop
daa
data16
sbb
mov
inc
inc
nop
xchg
repz
outsl
decb
jo
daa
inc
sbb
pop
in
imul
das
jecxz
jnp
ja
xchg
fdivs
shr
adc
xor
inc
pop
rcrl
mov
ljmp
inc
mov
cmp
jb
dec
repz
sahf
dec
cmpsl
es
push
push
iret
push
dec
bound
cwtl
mov
jne
mov
mov
pop
inc
in
mov
pop
push
daa
cmp
loop
xor
test
and
sbb
lret
sub
pop
lret
sahf
mov
adc
adc
push
fbld
inc
inc
not
sbb
xchg
mov
jbe
popa
mov
stos
das
jecxz
jp
mov
sbb
or
cltd
add
jno
int
fcoms
mov
filds
sarb
mov
mov
sub
mov
fadds
test
push
jno
and
inc
data16
dec
aaa
rcll
jecxz
insl
mov
xchg
and
push
je
jl
xor
push
leave
addb
lds
pop
movsl
outsb
and
mov
jle
mov
out
scas
mov
sub
inc
mov
xor
jp
rcr
adc
inc
jp
cmpsl
jle
dec
fcoml
into
fldt
mov
xchg
bound
dec
mov
aaa
sbb
xchg
dec
and
pop
js
mov
dec
aam
shll
or
cmp
cmp
sahf
repnz
xor
mov
jbe
hlt
fstpt
jg
ljmp
and
int
jnp
and
ss
xor
ljmp
push
loope
shll
pop
dec
or
xchg
mov
xor
sbb
jle
aaa
ja
xor
push
addr16
lds
cmp
or
jle
nop
repnz
fidivrl
mov
cwtl
dec
in
fsubl
ret
inc
inc
and
xor
jl
sbb
test
or
lods
icebp
mov
cltd
aad
inc
or
adc
bnd
fwait
orl
std
movl
adcl
cmp
push
xchg
mov
sarb
inc
xchg
ret
xor
loopne
mov
roll
lods
sti
and
lahf
adc
and
cwtl
mov
scas
scas
aas
test
mov
in
xchg
xchg
xor
hlt
ja
mov
xchg
scas
addr16
loopne
call
jp
imul
push
gs
jmp
mov
jecxz
data16
imul
xor
mov
rcrb
push
inc
and
icebp
das
clc
sti
repz
push
jne
sub
fst
mov
mov
inc
bnd
xchg
jo
and
mov
adc
pop
cmpsb
in
jnp
pop
ds
insl
add
cmpb
bound
imul
lods
into
mov
loope
ss
scas
add
stos
shrb
add
xor
fisubrl
dec
jno
cmp
or
xchg
cmp
std
adc
sbb
dec
bound
or
pushl
mov
cmpsl
sub
adc
in
push
test
push
insb
adc
dec
es
popa
push
cmp
push
pusha
push
sbb
push
cmp
xchg
out
addr16
jg
cmp
cmp
dec
setbe
fnstcw
cld
and
adcb
mov
mov
jecxz
shrb
xchg
add
out
push
and
adc
sub
stc
push
adc
cmp
jnp
outsb
add
insl
fs
loopne
push
sub
push
mov
int3
pusha
push
pop
inc
das
aam
ret
dec
sub
loopne
xchg
stos
dec
fidivrl
add
push
mov
addr16
aaa
adc
adc
test
push
mov
dec
add
out
push
lea
adc
mov
aam
testl
mov
hlt
pop
xlat
pop
push
xchg
clc
push
out
popa
sub
and
dec
mov
inc
fwait
push
xor
push
shrl
mov
xchg
mov
ja
cmpsl
dec
dec
pop
xchg
lret
ss
add
int
aas
test
scas
inc
mov
sti
scas
cmp
imul
or
lds
cmpsb
ret
mov
push
add
jl
sbb
cmp
nop
jl
sbb
lret
mov
mov
mov
push
xchg
aas
mov
aas
pop
adc
or
test
xchg
pop
jno
iret
popa
mov
add
aam
addl
xor
mov
mov
xchg
inc
shll
jae
scas
in
mov
xor
or
xor
cmp
mov
repnz
loop
adc
imulb
mov
mov
outsl
fs
pop
lcall
setbe
pop
mov
mov
push
cld
cmpsl
mov
push
and
xor
jno
pop
jge
rcll
add
adcb
pop
aas
in
xchg
dec
xor
cmpsb
lock
ds
mov
call
pop
pushf
lods
jmp
jg
jo
loop
cld
jbe
add
hlt
pop
mov
push
add
push
or
push
ret
stos
inc
lods
sti
mov
jmp
push
lea
xchg
push
pop
xor
xchg
sarb
cmp
sub
arpl
mov
sbb
les
test
ja
hlt
sub
aaa
push
pop
pop
jae
push
xchg
test
clc
cmp
ds
stc
loope
dec
cmc
jae
mov
rcrl
mov
jg
sti
mov
in
in
mov
mov
cmpsb
xchg
dec
lods
stos
fs
insb
sub
xchg
cmp
adcl
psraw
mov
mov
dec
and
movsl
fwait
mov
xchg
std
mov
push
push
in
pusha
jns
sub
push
jmp
lods
loopne
cmc
xchg
sbb
push
xchg
mov
scas
pop
imul
loopne
mov
cmp
cmpsb
cwtl
xor
sub
mov
mov
sahf
leave
mov
hlt
adc
xchg
repnz
cld
jnp
outsb
sub
nop
lods
xlat
pop
stc
xor
jl
jle
js
cmp
mov
test
sahf
jbe
sbb
xchg
mov
aad
jg
bound
or
dec
xchg
mov
std
jnp
scas
bound
sahf
adc
cmp
dec
jne,pt
and
pop
jae
xchg
dec
sbb
jmp
xchg
lods
xchg
call
sti
inc
movb
out
cmpsl
adc
adc
pop
fwait
mov
outsl
movsl
adc
bound
notb
bound
insl
mov
mov
xchg
scas
push
scas
xor
mov
push
out
jo
inc
push
inc
and
shrb
mov
ds
xchg
mov
sbb
mov
stos
push
inc
lcall
clc
push
dec
jge
rolb
pop
jl
loop
xchg
inc
mov
pushf
nop
cs
in
es
jecxz
out
mov
cmpl
mov
inc
js
mov
pop
cmpsb
cmp
mov
scas
push
sub
fistps
loopne
sub
inc
xchg
mov
pop
push
mov
xchg
mov
xlat
int
inc
stos
xchg
add
mov
cmp
push
mov
mov
test
scas
sbb
xchg
arpl
in
jbe
dec
push
sub
mov
scas
sub
jg
inc
movsb
mov
data16
sbb
dec
fisttps
cmpsb
pusha
mov
jge
dec
je
dec
fsubs
mov
dec
lea
scas
jne
sbb
add
fistl
cmp
inc
movsl
cmpsb
jecxz,pt
lock
ret
dec
jae
fbld
cmpsl
cltd
pop
jmp
or
dec
mov
roll
mov
stos
aaa
mov
mov
out
cmc
xchg
repz
push
cmp
in
pop
cmpsb
dec
mov
popa
ljmp
in
je
lahf
inc
push
lret
or
js
stos
sbb
add
add
mov
mov
cmp
cltd
lds
xchg
cs
pop
aas
mov
and
je
gs
ljmp
push
cmp
adc
cmp
sbbb
call
enter
scas
ficompl
inc
jb
aaa
outsl
jecxz
dec
test
pop
jp
rcrb
test
outsb
jo
clc
jns
shlb
adc
pop
pusha
cs
jne
fsubr
mov
cmpsb
xchg
xor
sub
sbbb
xor
incl
popa
sbb
pop
scas
fmuls
out
mov
sbb
ds
cmp
out
imul
pusha
adc
or
stos
push
cmp
aad
les
fisttps
xor
sub
and
dec
addl
dec
sub
jge
xlat
xchg
pop
roll
fcoml
mov
inc
fiaddl
loop
outsb
or
dec
cmpl
mov
sbb
sahf
sar
adc
and
pop
mov
mov
aam
dec
lock
add
dec
dec
jae
or
xchg
xchg
sub
jmp
les
xchg
mov
xor
inc
pop
icebp
rcr
mov
mov
sub
push
add
jno
inc
xor
shr
xlat
outsb
movsb
call
mov
fsubp
test
push
sub
std
and
and
movsl
jl
cmc
xor
mov
fadd
and
cmp
stc
out
sbb
pop
sahf
xchg
adcb
jno
mov
movsl
mov
insl
or
out
stos
xchg
enter
xchg
cmp
ja
lock
or
in
xor
cmpsb
add
out
jp
cmpsb
repnz
aaa
out
mov
scas
cltd
daa
sub
ret
adc
dec
int3
sub
pusha
test
mov
ffree
dec
push
dec
xchg
test
xlat
test
lds
dec
cltd
dec
out
repnz
subb
cmpsb
push
xchg
cmp
pop
aam
inc
mov
inc
cmc
stc
es
mov
pop
cwtl
dec
ja
mov
fucomi
push
pusha
xchg
dec
cmp
mov
ds
outsb
dec
xchg
cmp
clc
jmp
sti
dec
mov
cltd
and
test
sub
xor
xor
push
daa
mov
inc
fidivl
mov
fxch
inc
pop
mov
mov
hlt
cli
xchg
jno
xor
jmp
push
ja
jp
xor
cmpsl
mov
in
lea
adc
mov
jno
and
call
mov
pusha
ljmp
lds
xchg
sbb
mov
mov
push
or
mov
cmp
mov
xor
sahf
inc
movsb
xor
fdiv
push
insb
lods
sbb
inc
inc
xchg
xchg
jne
mov
out
loopne
sbb
lea
fidivrl
mov
stc
cmpb
ret
and
loop
leave
mov
cs
lock
push
in
push
insl
cmp
arpl
fldl
insb
repz
popf
out
mov
sbb
mov
push
ds
mov
sub
in
notl
mov
es
jl
rorl
in
dec
loope
add
sub
bound
adc
loopne
nop
push
cmp
inc
push
sub
or
pop
shlb
push
test
inc
sub
dec
daa
inc
cwtl
clc
decl
sarb
push
scas
jle
xchg
add
mov
add
xor
add
cmc
sti
scas
fs
push
js
setne
ljmp
callw
pop
pop
inc
inc
pop
or
dec
adc
pop
pushf
xchg
push
xchg
mov
arpl
iret
mov
jb
mov
push
push
mov
pop
and
cld
add
push
lret
inc
mov
push
popa
inc
cs
sub
mov
scas
rcl
mov
daa
sbb
lret
in
cwtl
movsb
leave
inc
lret
adc
test
mov
pop
lret
push
addb
daa
inc
rclb
xchg
cmc
shl
icebp
mov
jne
push
add
or
mov
sub
push
bound
ffreep
stos
and
rcll
int
scas
out
mov
xor
sbbb
nop
sbb
pusha
aaa
scas
and
mov
ret
lahf
and
pop
jno
rcll
jo
jb
cmp
dec
idiv
push
pop
cmp
pop
fwait
and
add
ljmp
leave
lahf
mov
mov
lods
xchg
mov
pushl
sub
xchg
xor
cmp
or
sub
mov
imul
cmp
out
ss
test
mov
sbb
fdiv
jae
ljmp
std
imul
cs
sub
push
dec
xchg
mov
in
push
xchg
test
dec
inc
mov
sbb
xor
push
lods
xchg
sbb
lret
js
ljmp
test
or
aaa
xchg
jp
aam
mov
faddl
xor
xchg
test
imul
sub
jb
sbbb
mov
lret
jb
fwait
aas
add
fdivl
dec
jbe
lods
lea
xchg
js
imul
in
xchg
jae
push
cmp
ret
sbb
cmp
sub
leave
add
in
xor
or
rcll
addr16
mov
jne
popa
hlt
les
xor
loop
xchg
fistl
mov
or
shlb
popa
adc
lods
js
inc
pop
push
fcompl
sub
inc
fldl2e
cmp
fwait
icebp
push
lcall
rorb
out
lods
mov
or
and
test
add
sbb
repz
mov
sahf
sub
je
xor
dec
push
fisubrl
cmp
push
push
cwtl
cld
orl
push
std
jge
xor
in
inc
push
fdivl
shl
lods
pop
ret
aam
into
jecxz
mov
test
scas
stos
jne
in
pushl
nop
xchg
inc
sub
pop
in
lods
and
pusha
cli
rolb
add
dec
daa
pusha
loope
add
push
inc
cmp
icebp
xchg
in
movsb
nop
jo
movsb
add
data16
test
push
fldcw
jg
shlb
out
test
jmp
cld
mov
add
xchg
je
pop
sbb
jecxz
cmp
mov
cltd
adc
push
lret
push
cmpb
pop
addr16
jns
call
shlb
test
mov
sbb
inc
mov
arpl
into
push
pusha
jne
pop
or
jb
lods
in
mov
xor
and
jl
sti
xor
gs
daa
inc
call
mov
xchg
adc
jne
pop
pop
sub
imul
popf
mov
push
xchg
xchg
int3
aam
sti
loopne
push
std
jge
jmp
arpl
fbstp
aam
mov
mov
pushf
clc
mov
aam
mov
mov
or
out
pop
pop
iret
outsl
lock
jmp
dec
int3
stos
adc
add
cli
jl
mov
and
outsb
outsb
pop
xor
dec
and
gs
lods
mov
fiadds
out
loop
fcomp
test
out
mov
shrl
xchg
mov
std
jmp
inc
or
aam
push
fisubrl
fndisi(8087
mov
mov
shl
pop
cmp
mov
xor
or
fstl
pop
add
stc
lcall
push
xchg
cltd
test
into
lcall
or
dec
cmpsl
inc
mov
pushf
lock
jb
jae
and
mov
lret
pusha
insb
sbb
cmp
push
fmuls
xchg
int3
inc
fisttpl
es
cmpsl
pop
and
adc
scas
mov
sarl
bound
add
jb
fsubr
xchg
adc
xor
dec
fbld
sbb
jle
push
into
inc
jecxz
mov
xorb
mov
dec
sub
sbb
cs
mov
sbb
mov
push
sti
mov
cltd
xor
outsb
push
xchg
into
pop
out
jge
pop
data16
dec
jne
xor
mov
stos
imul
sbb
out
test
in
lods
push
mov
mov
dec
jo
inc
cmp
scas
ljmp
pop
int3
scas
inc
movsb
sbb
push
test
lea
add
push
push
adcl
leave
sub
cwtl
movl
jns
jb
out
xchg
loope
cmp
mov
sub
xlat
push
hlt
adcl
lcall
dec
fsub
gs
jns
pusha
xorl
mov
sub
jno
test
mov
aad
test
cmp
sbb
lahf
and
cwtl
jl
push
mov
into
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
pop
movsl
push
fsubs
cmp
bound
pop
lret
call
cli
push
aad
imul
pushf
jg
xchg
test
in
xchg
jmp
int3
lcall
je
cmp
mov
or
ss
mov
cli
or
sbb
std
int3
push
jnp
fnsave
push
jle
adc
not
daa
cmp
outsb
ret
ds
addb
inc
scas
inc
pop
orl
divl
mov
mov
cmp
and
sub
xchg
sbb
sub
add
loop
outsb
or
fdivrs
mov
icebp
mov
push
add
push
aam
ljmp
xor
sbb
cltd
dec
ret
push
cmpsb
sub
ljmp
jle
out
cmp
sti
imul
jne
clc
mov
int
sti
es
out
les
mov
adc
xchg
sbb
add
cltd
pop
adc
dec
lods
lock
ljmp
ja
incb
call
cmp
xor
aaa
push
stos
stc
push
add
push
mov
cltd
mov
or
int3
icebp
ret
cltd
inc
js
mov
imul
into
dec
xchg
aas
les
pop
dec
fwait
dec
jmp
in
jg
and
and
mov
jmp
fistl
popa
jnp
divb
testb
push
adc
adc
dec
aaa
sub
jg
push
cltd
lods
lods
xlat
mov
jmp
notb
adc
cli
mov
xchg
pop
push
mov
sarb
nop
leave
ds
push
sub
add
add
mov
sbb
sbb
pop
mov
push
or
cltd
dec
mov
les
into
push
inc
shr
insb
dec
test
fmull
adc
sarb
mov
clc
cmp
pop
pop
dec
cmp
sahf
pop
lret
loop
loop
insl
push
call
rorb
subb
stos
data16
sbb
popf
notl
int
gs
mov
not
cwtl
mov
iret
inc
mov
and
and
mov
test
add
inc
push
sub
jb
cli
mov
cmp
mov
je
cmp
das
icebp
mov
add
jns
xchg
dec
movsb
out
es
sbb
outsl
jb
push
inc
icebp
mov
push
cmp
ss
xchg
cli
bound
mov
pop
xchg
and
and
ja
mov
jecxz
cld
pop
add
je
inc
sbb
cmp
fldl
xlat
adc
add
cmpsl
ljmp
xchg
ficompl
mov
fisubs
pop
in
test
adc
sub
ja
push
sbb
lock
xchg
test
in
dec
ja
jg
cld
enter
and
cmp
or
jle
mov
xchg
sbb
imul
cwtl
or
in
xor
sbb
je
cmp
ffreep
scas
jge
ljmp
push
mov
sbb
xor
int
cmp
dec
rclb
mov
mov
mov
adc
xor
popa
mov
xchg
sbb
jecxz,pn
int
subl
cwtl
arpl
adc
xor
add
jo
pushf
in
out
dec
sbb
das
ss
jmp
pop
dec
or
cmp
sbb
flds
push
jp
sbb
push
les
jmp
sbb
test
inc
jge
or
in
sti
push
insb
js
and
fs
and
scas
push
and
lods
push
jp
jae
into
mov
jns
and
loopne
pop
ret
push
add
cmp
shl
shll
cmp
fcmovne
mov
add
dec
sub
mov
xchg
cld
in
pop
jne
aaa
xchg
dec
shll
or
leave
mov
int3
push
inc
cmc
outsb
rcrb
out
mov
inc
insb
outsb
and
sbb
add
fwait
repz
xchg
js
pop
sub
jo
stos
repz
popf
ficompl
jno
lret
imul
push
cli
pusha
daa
jns
popa
es
pusha
xchg
lret
outsl
lods
mov
mov
and
inc
fcom
aad
scas
aam
pop
xor
mov
fwait
or
lea
xor
add
xor
and
mov
bound
xchg
sbb
rcrb
inc
scas
adc
mov
cmpsb
in
ret
ficomps
ds
mov
cmp
lea
sub
addl
out
jp
sub
cmp
js
sub
sarl
imulb
dec
cmpsb
sbb
sahf
adc
dec
rcrb
int3
mov
inc
sub
dec
je
push
push
sti
mov
push
les
in
sub
fisubrs
clc
cmp
push
int3
out
adc
int3
ret
shr
inc
data16
jge
inc
inc
std
insl
lock
jp
loop
ret
jbe
cwtl
fcomp
mov
push
mov
je
dec
shll
icebp
iret
rclb
inc
add
mov
fistl
mov
outsb
push
ret
cmp
cmpb
mov
and
mov
ret
jg
aad
push
ljmp
cwtl
cmp
mov
rsqrtps
jg
insb
test
cmp
add
icebp
xor
call
mov
and
je
add
outsl
stos
es
mov
xor
fs
roll
mov
push
xor
mov
push
fwait
je
cmp
testl
dec
inc
inc
not
mov
mov
push
inc
sbbb
adc
dec
sub
rclb
xchg
insl
sub
jp
pop
mov
ffreep
xor
fldcw
popa
cmpsb
add
dec
shlb
repnz
or
xchg
dec
mov
popa
xorl
add
sub
push
cmp
mov
mov
inc
outsb
pop
jnp
cmp
fisttpl
jmp
mov
out
call
ss
dec
adc
js
xor
xorb
xor
cli
and
pop
xlat
cmpsl
out
mov
xor
and
mov
jecxz
mov
xor
int3
add
xchg
lret
shll
ret
xor
loope
jno
insl
sbb
faddl
push
aad
jbe
std
add
enter
lret
pop
hlt
xchg
mov
fdivrl
data16
mov
mov
loop
add
xchg
inc
test
and
sub
xor
cmp
add
jno
add
sbb
inc
pop
mov
cmp
cmp
iret
sarb
xchg
or
int3
add
cmp
mov
pop
pop
or
test
xor
dec
inc
jnp
xor
rol
inc
pop
sbb
cltd
cmp
lret
mov
lahf
jbe
rcrb
mov
das
movl
jle
iret
into
pop
dec
insb
push
dec
jno
xor
mov
or
cmp
lret
mov
jg
xor
jecxz,pt
es
test
aaa
mov
andl
mov
or
das
loop
mov
rcl
and
mov
mov
and
fwait
jmp
movsb
popa
cmpl
std
nop
data16
fdivrp
ds
clc
into
ret
shrb
dec
mov
je
ja
gs
ljmp
fstps
mov
test
cmpsl
jno
sub
adc
push
xor
cmp
cli
in
or
mov
stos
cmp
mov
gs
xor
sub
loopne
jp
cli
pop
add
cwtl
out
shlb
addr16
pop
lods
inc
sbb
mov
mov
mov
es
mov
mov
dec
push
arpl
lret
psrlq
pop
cltd
out
inc
mov
pop
hlt
aam
add
adc
sbb
sbb
add
jmp
mov
and
lret
sbb
mov
inc
adc
sbb
pop
dec
add
enter
lret
or
jecxz
mov
and
cltd
xchg
jae
mov
push
cli
mov
sbb
push
lcall
in
stos
mov
std
mov
mov
mov
mov
ds
les
jle
jno
scas
pop
and
outsb
xchg
mov
jl
push
push
out
loope
adc
pusha
cmp
xchg
nop
adc
adc
call
xor
mov
rcll
js
adc
xchg
jge
aas
jbe
aad
add
and
mov
ds
fwait
pop
sahf
sub
add
lods
fsts
ret
popa
fwait
iret
xchg
pop
xchg
repnz
int
clc
inc
and
cmp
popf
or
xchg
insb
mov
dec
ret
lret
movsl
fidivs
jno
mov
add
cs
mov
div
sub
addb
in
add
js
and
adc
popa
xor
xchg
push
mov
fstl
mov
imulb
adc
in
cld
rcll
xor
mov
repz
mov
movsb
popa
xlat
push
test
adc
mov
xor
jle
fiadds
repnz
sbbb
pushf
or
fidivs
push
inc
and
push
pop
xchg
test
in
hlt
xor
mov
addr16
insb
rcrb
adc
xchg
mov
push
cmp
popf
xchg
imull
add
xor
sub
imul
mov
movsb
bound
jl
push
les
in
inc
push
pop
ds
adc
mov
call
push
enter
push
aam
cmp
push
jge
mov
sbb
jne
ret
loopne
mov
and
mov
jns
inc
shl
add
nop
or
mov
adc
mov
and
jno
cmp
stc
pop
push
aas
daa
jle
sbb
sub
and
test
inc
pop
jg
fstpt
sbb
jmp
sub
mov
xorb
add
aad
adcl
push
push
les
call
xchg
sbb
insl
ds
movsl
lret
aaa
loope
add
fwait
loop
jns
jb
mul
pusha
dec
dec
cmp
enter
and
push
dec
call
outsl
stos
pop
sbbb
dec
icebp
fdivr
test
xchg
sub
push
jne
gs
mov
int
lea
push
mulb
popl
and
bound
fstps
sub
mov
cmp
aaa
lret
loope
ds
xchg
lea
jne
sahf
cmpsb
fists
xchg
push
out
mov
or
push
cmp
jmp
loope
dec
sarl
sti
fstl
loope
iret
ret
and
or
shlb
pop
mov
cld
xor
jg
push
mov
popf
sahf
push
clc
or
xchg
test
dec
leave
sbb
movsl
mov
sbb
inc
shrl
add
jmp
lret
cmp
loope
or
mov
iret
push
mov
jns
sub
aaa
out
ss
icebp
aas
inc
out
loopne
clc
stos
dec
in
popa
sbb
daa
ja
mov
sub
jae
jbe
adc
dec
rcrb
mov
mov
stos
cmp
pop
push
push
pop
jo
add
int3
jo
outsl
push
add
lret
cmpsl
inc
roll
push
stc
xchg
add
pop
pusha
cmc
ds
push
and
jo
and
xchg
imul
xor
outsb
ret
pop
dec
mov
xchg
lcall
and
push
mov
out
and
or
pop
adc
and
popf
mov
and
arpl
out
data16
inc
imul
test
out
or
addr16
xchg
pop
xor
push
and
aam
es
add
scas
mov
sbb
cld
push
cs
inc
movsb
mov
addl
add
aas
adc
inc
mov
outsb
movsl
mov
cmp
fiaddl
loopne
jecxz
shlb
cmpsl
mov
sub
add
out
leave
xor
inc
mov
test
add
inc
stc
adc
mov
mov
call
mov
fwait
mov
sbb
ret
sub
mov
je
push
cmp
mov
inc
cs
adc
add
jecxz
push
or
add
jg
mov
mov
daa
pop
pop
ds
jnp
imulb
pop
jno
insb
cmp
push
mov
mov
and
xchg
or
push
add
or
inc
sub
ret
push
sbb
call
and
dec
sbb
xchg
push
iret
push
pop
stc
rcl
add
repz
roll
or
push
dec
cmp
in
lahf
fbstp
js
xchg
jg
mov
jge
enter
out
jle
mov
push
jbe
add
or
clc
mov
sar
push
repnz
or
mov
out
or
mov
xchg
mov
adc
mov
adc
sbb
movsl
fsubrp
dec
lds
cmpl
sbb
xchg
push
outsl
shlb
pop
add
jae
in
ljmp
call
cwtl
and
lods
data16
pop
jle
sbb
sbb
push
dec
dec
out
jmp
add
lcall
adc
cmp
and
test
and
imul
int3
push
ljmp
addr16
mov
add
mov
mov
cli
add
rorl
aad
jge
add
rcrb
and
push
inc
lds
pop
sbb
and
add
pop
cmp
mov
out
js
les
mov
inc
jo
faddl
pop
mov
or
cwtl
rol
push
jecxz
test
lods
imul
pop
push
movsl
jg
ljmp
push
movsl
jp
xor
dec
cmpsl
cli
hlt
mov
pop
push
js
jecxz
adcl
cmpsb
cmp
inc
gs
push
fdivr
dec
dec
fdivp
test
xor
or
inc
into
test
jnp
push
mov
add
cmp
pop
mov
cmp
jg
fsubr
push
sbb
add
scas
imul
cld
ja
test
outsl
sbb
bound
arpl
lods
inc
inc
popf
jno
add
ret
mov
das
leave
add
sarb
jne
xor
push
mov
push
call
fucomip
nop
andl
adc
mov
rcrb
lcall
test
pop
push
jp
pop
aad
jns
icebp
jecxz
mov
jmp
repnz
mov
stos
xlat
push
aaa
int
test
dec
bound
pop
dec
mov
leave
icebp
lret
xchg
mov
sub
mov
data16
aam
cwtl
dec
xchg
sbb
lea
aam
jecxz
push
fwait
push
fisttpll
pop
push
lret
ljmp
pop
add
xlat
mov
sbb
cmpsb
mov
xchg
jo
loope
lret
into
pop
fwait
jmp
outsl
popf
sub
mov
jns
lods
scas
push
inc
and
adcl
leave
inc
add
test
outsb
push
xchg
fidivrs
inc
imul
jmp
loop
mov
enter
icebp
mov
ss
in
xchg
outsl
sbb
ret
dec
xchg
dec
cwtl
pop
clc
cmpb
imul
inc
mov
xchg
dec
data16
fldenv
adc
int3
bound
adc
mov
sbb
divb
push
ret
dec
jecxz
clc
orl
addb
sarb
sahf
int3
cwtl
pop
shr
imul
faddl
dec
inc
testl
or
js
lock
in
out
xchg
mov
mov
gs
fs
and
push
lea
clc
sbb
sbb
in
jbe
mov
push
dec
xchg
imul
cmp
push
loope
lock
mov
add
popf
fldpi
add
std
shl
popa
jmp
fdiv
outsl
fcoms
aam
pop
jge
cmpb
pop
je
addr16
xchg
push
mov
cli
mov
cs
cli
jmp
cmp
mov
imull
std
push
inc
aad
add
jp
mov
test
mov
shlb
lock
js
int
aad
or
inc
pop
test
shrl
sbb
adc
pop
dec
lds
pop
cmpsb
jns
les
sbb
test
push
sub
add
mov
adc
ljmp
out
int3
es
int3
jnp
test
or
arpl
mov
repz
adc
mov
in
outsb
push
or
scas
xchg
xchg
mov
out
pop
mov
inc
sahf
sarb
pop
in
dec
loope
push
dec
loopne
jae
push
pop
cmp
lods
xor
cmpsb
push
imul
mov
mov
xlat
adc
ret
and
mov
ss
decb
pop
cmp
mov
nop
mov
shll
jo
xchg
mov
and
xchg
stos
mov
aaa
mov
pop
stos
loopne
fimuls
cwtl
aam
aam
das
mov
cli
pop
dec
andl
inc
vmovsldup
cli
xor
insb
xlat
or
mov
mov
cmp
lret
jecxz
fs
loop
in
or
xchg
rcr
jle
pop
xor
xor
cmp
sbb
sbb
cmp
addr16
out
clc
fadd
mov
sbb
push
stos
mov
repnz
scas
xlat
xlat
pop
fwait
adc
dec
lret
shll
aas
int
mov
int
cmp
xchg
sti
sahf
mov
addr16
in
mov
ss
push
cld
xchg
fldenv
pop
push
int
call
dec
nop
and
in
pop
pop
mov
frstor
cwtl
mov
xchg
icebp
adc
cmp
xchg
jnp
mov
mov
push
adc
and
pop
add
stos
mov
scas
xchg
pop
sub
jno
xchg
and
dec
in
in
mov
xor
push
jle
sbb
add
lock
xor
xchg
sub
xor
movsb
mov
popa
gs
cmpsl
insb
pop
ljmp
movsl
rolb
lretw
clc
fildll
or
arpl
cwtl
sub
cmp
fcomip
mov
mov
dec
or
pusha
iret
clc
xor
mov
sbb
jb
jg
out
jb
xorb
adc
and
mov
mov
je
xor
sub
into
aas
outsl
sti
repnz
cmp
sbb
jg
mov
negl
mov
or
pop
popa
pop
pop
mov
or
imul
mov
and
cltd
adc
cmp
loop
mov
inc
js
loope
mov
cld
addr16
mov
mov
fisttpll
mov
out
bound
adc
or
jg
ret
insl
cltd
and
insb
mov
add
jg
push
sahf
in
orb
ret
fisubl
and
add
dec
push
jecxz
cld
dec
inc
popa
push
add
inc
bound
dec
inc
jmp
mov
add
out
jmp
icebp
jl
inc
xchg
xor
sti
mov
test
push
testl
sbb
fwait
lret
push
cmpsl
mov
call
xchg
movsb
lret
jp
cmp
andl
xor
fldenv
aaa
or
adc
sahf
or
stos
inc
loope
les
jle
mov
xchg
mov
not
test
adc
mov
push
push
sbb
bound
push
out
push
push
or
faddp
adc
lret
es
xchg
push
cmc
mov
test
outsb
pop
xor
mov
xchg
jbe
xor
or
and
data16
or
sbb
jmp
inc
and
and
fnstcw
stc
xor
cltd
add
and
pop
adc
jns
int
fwait
sub
je
in
ret
inc
aad
add
push
fisttpl
mov
lret
mov
orb
outsl
adc
outsl
or
fdivrl
push
out
inc
rclb
mov
aaa
hlt
les
mov
or
sub
push
and
dec
dec
dec
push
adc
add
inc
push
push
xchg
out
testl
mov
jb
fsubs
hlt
inc
mov
jne
add
repz
sti
push
sarb
or
loope
cmp
xchg
stc
jno
pop
push
inc
push
insl
mov
in
insl
lret
add
cmp
das
jle
fildl
mov
data16
test
push
inc
ljmp
mov
out
mov
or
call
mov
push
add
cmc
lock
xor
cltd
xor
jge
mov
aaa
inc
push
xchg
aaa
fs
mov
sub
in
stos
dec
cmp
push
das
inc
lret
dec
imul
or
cs
xchg
xlat
scas
xor
add
sub
sub
out
pop
dec
sub
std
es
dec
inc
hlt
movsb
sbb
push
es
fmull
pop
cmpsl
or
aaa
mov
mov
insb
jl
lock
pop
mov
bound
adc
mov
push
mov
cld
adc
aaa
xchg
adc
fldt
mov
push
out
jbe
xchg
fnsave
xchg
mov
stos
movsb
pop
inc
es
gs
mov
and
shl
add
lods
xchg
xor
cmpsb
cmp
addl
mov
push
or
mov
inc
out
or
aas
ret
notl
or
jbe
add
test
scas
popf
mov
popl
das
mov
cmp
adc
aas
sub
mov
sarl
cmp
add
int3
sub
int3
or
dec
mov
iret
sbb
cmpsl
enter
add
fldenv
lock
test
std
adc
aaa
xor
or
jle
add
mov
jecxz
push
cld
push
add
jmp
push
fucomip
lret
repz
fcomp
dec
jmp
lods
fs
loop
xchg
and
sbbb
mov
add
lea
jg
in
fs
push
add
in
adc
cmp
lock
pushf
out
xchg
xchg
mov
cmp
hlt
inc
lahf
dec
jae
popf
sbb
pcmpgtw
lret
mov
daa
mov
inc
mov
das
adc
jmp
scas
mov
push
icebp
test
dec
mov
sub
push
push
jns
mov
rcrl
int
daa
aad
sbb
and
in
dec
loop
cmp
cmp
ffree
cmp
sub
jns
fistpll
adc
dec
cmp
pushl
jmp
xor
repnz
out
test
push
mov
sbb
xor
cmp
aaa
sbb
stos
inc
push
sti
xlat
dec
xor
cltd
stos
shlb
dec
std
gs
ret
rcl
repz
adc
push
sub
inc
or
das
lret
ret
pop
jl
mov
or
pop
fiaddl
push
popf
in
pusha
mov
les
mov
mov
fwait
cmp
mov
mov
imul
stc
and
mov
jo
mov
push
xor
sahf
mov
xchg
cs
pop
fldl
outsl
decb
or
dec
mov
sbb
les
mov
adc
hlt
test
mov
ret
cmp
xlat
inc
push
sub
shll
fs
pop
dec
cmp
cmp
loop
mov
hlt
or
stos
pop
xchg
insb
mov
data16
scas
inc
fnstenv
mov
mov
dec
sub
sub
ret
lret
adc
cmovo
daa
lea
popl
test
cmp
inc
ja
add
mov
je
xor
push
lods
xrelease
pop
mov
andb
shrb
push
pop
scas
or
sub
jge
insl
movsl
and
jns
pop
repz
incl
jecxz
pop
adc
xor
bound
pop
pop
jae
repz
adc
into
mov
mov
mov
xor
aam
gs
mov
xor
add
leave
mov
xor
xchg
imul
outsl
cld
jle
pusha
loopne
jbe
jle
fwait
aam
lds
test
mov
lahf
loopne
bound
mov
dec
inc
inc
into
add
or
jmp
jmp
rorl
outsb
xchg
out
ret
cwtl
lcall
es
sbb
outsb
int3
or
fidivs
adc
loope
call
clc
mov
sti
push
jmp
xor
jmp
dec
repnz
dec
adc
les
sti
sbb
xchg
outsl
cmp
pop
mov
cmc
icebp
lret
cmp
jp
cltd
pusha
push
jle
mov
loopne
pop
aam
cli
stc
mov
fimull
add
mov
mov
in
in
mov
jmp
mov
xor
test
faddl
xchg
mov
dec
aas
sub
pop
pop
push
fwait
shr
xchg
notb
or
sarl
push
popa
mov
cmp
dec
sbb
mov
frstor
jns
ds
cmp
mov
outsl
jo
cmp
into
jae
dec
ficompl
push
gs
mov
mov
roll
mov
or
mov
arpl
movsl
cmp
sbb
movsb
popa
loope
sbbl
fimull
adc
loop
test
int
xchg
insl
test
fnstsw
push
mov
out
call
sbb
and
pop
dec
clc
fnstenv
seta
pop
cmp
jno
into
idiv
sub
push
fbstp
std
sbb
mov
das
jnp
xchg
push
jns
xchg
or
adc
inc
and
mov
pop
push
clc
mov
mov
push
or
js
lahf
mov
out
and
in
aas
push
iret
pop
adc
cmp
sbb
or
and
cmp
pop
aam
dec
ja
popf
sub
sub
mov
adc
loope
cmpsl
mov
hlt
and
clc
push
lea
mov
loop
sub
daa
movsb
xor
inc
and
push
xchg
xor
xchg
pop
inc
leave
pop
xchg
sub
mov
js
lods
xchg
adc
iret
dec
mov
jge
or
in
repnz
pop
cmpsb
fmull
mov
hlt
mov
mov
sti
xchg
inc
push
adc
loope
mov
in
in
notb
cld
jmp
xchg
and
push
jbe
data16
mov
fistl
ljmp
mov
cmp
lock
insb
fprem
mov
mov
or
test
mov
pop
sub
divb
xor
inc
fldenv
cmp
aas
push
cmpsl
in
std
or
add
mov
cmc
stos
xchg
fcmovbe
jp
pushf
unpcklps
and
sbb
in
push
push
rolb
in
lret
cmpsb
sub
std
mov
shrl
pop
fdivrl
ljmp
mov
jno
pop
outsb
push
jbe
mov
in
std
mov
repnz
les
in
xchg
and
xchg
mov
pop
cwtl
xor
insb
or
dec
stos
cmp
popa
testb
dec
repz
add
ljmp
clc
ds
mov
add
stos
inc
pushf
cli
push
jo
mov
mov
jb
inc
ret
jno
arpl
rcrb
data16
or
mov
mov
fsubs
mov
daa
push
mov
das
test
or
sbb
shll
mov
cmp
add
pop
adc
mov
push
in
sbb
outsb
into
retw
je
or
pop
xchg
out
lds
pop
movsl
lods
adc
jmp
push
adc
bound
test
inc
cld
push
mov
xchg
mov
in
jge
push
int3
dec
pop
int
cli
insw
lea
fidivrs
lods
enter
pushf
sub
cmp
cmp
ret
jmp
cmc
sbb
inc
xor
cld
mov
cmp
test
mov
mov
pushf
add
cwtl
mov
jbe
hlt
and
pop
jle
repnz
cmp
pop
fiadds
pop
jbe
pop
dec
pop
xchg
inc
jb
inc
fldcw
or
cmpsb
mov
push
pusha
sub
aas
lds
dec
std
adc
push
scas
push
jp
xchg
stos
inc
rclb
data16
leave
jecxz
pushf
or
outsl
fiaddl
lcall
add
and
xor
xorl
andb
adc
insl
push
lcall
sbb
pop
fcomps
movsb
js
cmp
lcall
cmp
or
loopne
jmp
inc
mov
push
mov
jb
mov
popf
popa
jge
mov
push
or
and
jmp
pop
jbe
ret
mov
in
ficomps
cmc
lods
push
out
inc
xor
xor
in
adcl
cltd
je
and
jno
mov
cmp
adc
mov
cmpsb
pop
adc
aaa
inc
cmp
sbbl
push
in
scas
push
mov
jmp
negl
sbb
push
lods
mov
cld
sub
jnp
adc
push
pusha
js
lea
call
mov
rorl
lahf
mov
sub
cmpb
adc
add
movsl
adc
bound
jo
dec
push
push
hlt
pop
pop
popa
push
dec
mov
xor
sub
inc
iret
pop
sbb
in
push
or
mov
clc
add
xchg
fs
add
mov
jl
jno
bound
daa
ficomps
push
aad
negl
outsl
ja
and
adc
hlt
das
jb
mov
in
mov
fcoml
lret
sub
ret
aad
outsl
mov
into
test
lea
jg
cli
pusha
fbstp
jge
fcomi
dec
test
andb
out
adc
int
cmp
cmpsb
loope
scas
push
dec
imul
pop
add
sub
mov
add
fwait
dec
or
push
mov
loope
pusha
inc
sub
mov
out
mov
jge
clc
mov
dec
stc
pop
mov
in
jmp
test
inc
loopne
cmpsb
or
mov
cmp
push
or
push
fcoms
push
inc
push
mov
arpl
mov
gs
das
xor
fs
mov
mov
mov
icebp
das
js
pop
add
lea
jnp
in
push
cmp
jg
jg
out
mov
add
fldcw
popf
fstps
mov
dec
arpl
js
xchg
add
ret
mov
dec
push
dec
js
sarb
xchg
inc
ret
jbe
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
or
ja
add
pop
add
add
fwait
jp
mov
pop
aad
repz
or
or
shlb
cltd
or
cmp
mov
jbe
lods
out
cmp
arpl
insl
jmp
addr16
dec
xchg
jl
mov
fmul
add
add
sub
dec
data16
roll
shrl
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
dec
sub
cmp
lret
xor
push
adc
stos
xor
add
rcr
jp
lock
fst
mov
inc
pushl
in
test
inc
jae
pop
sub
dec
das
cs
jo
fstpt
test
imul
push
and
jno
adc
or
inc
jmp
add
pop
sub
sub
addb
into
add
pop
add
add
or
aaa
dec
and
test
mov
daa
data16
adc
pop
dec
sbb
fs
dec
mov
cmp
cmp
outsb
xor
fwait
mov
loop
int
insb
dec
sub
jle
fldl
xor
in
lock
adc
xorb
rcrb
add
and
aam
aam
ljmp
je
aam
shll
add
pop
add
add
add
and
loop
icebp
rcll
fbstp
out
and
stos
loopne
add
lret
fildl
and
mov
in
dec
fld
fadds
and
mov
stos
push
sbb
jl,pn
out
cmp
mov
xchg
inc
mov
lret
dec
jle
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
sar
pop
pop
adc
xor
jnp
gs
pop
sub
sbb
imulb
pop
out
pushf
push
xor
sub
add
dec
xchg
lahf
stos
and
test
fucomip
das
mov
into
jns
push
orl
lock
push
mov
aam
inc
push
fcmovbe
add
out
lods
cmp
stc
stc
jae
popf
adc
iret
add
pop
add
add
xchg
mov
xor
mov
jnp
stc
cmp
xor
leave
test
data16
cmp
nop
xor
hlt
push
xor
lock
or
rorb
ds
sbb
pop
mov
stc
mov
add
xlat
pop
sarl
out
test
push
xor
gs
aaa
push
mov
add
pop
add
add
mov
and
adc
cmp
pop
sub
fsubrs
ret
cli
mov
fcomps
xlat
xchg
mov
cmc
inc
or
stc
stos
sub
lret
outsl
xor
scas
int
mov
mov
popa
ret
jl
js
pop
test
lcall
add
sub
das
jle
jg
imul
inc
sub
add
pop
add
add
cmp
popa
aas
mov
push
mov
leave
xchg
inc
movd
dec
scas
mov
lds
lahf
hlt
jae
push
iret
lahf
xchg
sbb
insl
pop
xrelease
lea
xor
cltd
mov
iret
inc
and
jmp
into
cmp
lds
fiadds
addr16
and
mov
mov
jns
mov
add
add
mov
stos
add
repz
xchg
jae
ljmp
xor
je
popf
mov
cmp
fldenv
mov
push
jmp
roll
movsb
loope
add
cmp
xchg
mov
mov
negl
outsl
int
cltd
sbb
jbe
ret
or
ret
lods
sub
mov
lret
add
pop
add
add
sbb
pop
ret
bnd
mov
xlat
aaa
popa
and
inc
sub
inc
dec
fildll
lods
lods
xor
mov
pop
inc
inc
lret
in
mov
rcl
pop
push
fnsetpm(287
mov
mov
aad
jnp
stos
imul
fs
and
mov
popl
add
ret
pop
iret
fst
enter
jne
pop
and
add
pop
add
add
adc
lret
add
aas
pop
mov
pop
push
fdivl
push
mov
sub
outsl
loop
jno
add
xor
push
jmp
aam
lods
insl
xor
mov
pop
pop
lret
sbb
cmp
push
movsb
ret
inc
test
pop
mov
les
dec
jecxz
jae
add
lock
out
repz
mov
ret
in
sub
add
adc
inc
sbb
xor
aam
hlt
out
pop
push
xchg
lret
and
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
scas
sbb
mov
sbb
add
inc
add
push
inc
add
sbb
add
push
inc
add
sbb
add
mov
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
inc
add
or
xorl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
sahf
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
xchg
sbb
add
sbb
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
lret
ljmp
add
inc
aad
ja
int
push
add
mov
outsl
test
cmp
aaa
scas
fildl
arpl
test
pop
inc
js
les
ror
xlat
push
add
ss
inc
xchg
inc
push
ss
pop
in
xlat
sbb
je
jno
mov
fld
aad
xchg
jbe
jne
push
cmc
xchg
xor
add
mov
push
mov
xlat
push
and
or
add
add
add
jnp
dec
popa
icebp
and
pushf
mov
insl
adc
and
rcrb
jno
xchg
add
push
shr
xchg
sbb
sbb
in
in
pop
pop
cmpsb
ret
hlt
push
dec
xchg
pop
adc
adc
es
sub
pop
fstpt
and
enter
mov
jg
ljmp
push
dec
adc
add
pop
add
add
dec
lcall
pcmpeqb
or
popf
lock
dec
les
sub
push
or
dec
mov
ja
push
push
adc
mov
andl
pop
pop
mov
xchg
repnz
mov
or
aas
add
cmp
in
fimuls
fs
imul
add
add
mov
stos
ljmp
mov
test
sub
lods
add
popa
mov
cmp
jno
inc
push
cmpsl
push
popf
std
sarl
add
imul
and
mov
xchg
jl
out
stc
cs
xchg
loope
aam
xor
das
push
jg,pt
push
mov
pop
lock
add
add
mov
sbb
std
negb
sub
repz
add
add
or
jle
mov
dec
or
sub
xchg
xchg
test
or
push
pop
sub
test
and
fsubrs
mov
jge
loopne
adcb
aas
mov
dec
insl
pop
pushf
arpl
in
cmp
lods
stc
mov
cmp
xchg
xor
dec
in
negl
fidivl
xchg
mov
scas
fbstp
inc
mov
repz
add
pop
add
add
int3
ja
inc
pusha
sbb
jmp
mov
insl
jl
jmp
cmp
jge
cmp
xchg
push
out
andb
aas
xor
push
std
dec
js
sub
mov
adc
xchg
jecxz
out
stc
push
mov
repnz
mov
imul
add
add
add
pop
sub
loope
fadds
add
add
cmpsl
adc
call
iret
scas
dec
in
lahf
mov
andb
dec
jmp
gs
in
dec
std
xchg
lods
mov
mov
push
or
dec
jnp
dec
pop
xchg
rcll
clc
sahf
pusha
das
inc
dec
add
adc
mov
inc
cs
rolb
push
add
xor
jb
insl
xor
and
xlat
fadds
add
add
dec
pop
sbb
mov
call
mov
jns
sbb
mov
lcall
or
rcrb
fidivs
popf
add
mov
rcrb
mov
in
jl
jbe
push
xor
arpl
ljmp
scas
lock
cmpsl
test
mov
cmp
add
push
add
mov
out
fmulp
and
flds
add
add
cmpl
cmpsl
xchg
loope
mov
stos
mov
mov
jecxz
inc
shrl
pop
sub
pop
aad
xchg
sbb
pop
or
test
pusha
addr16
adc
dec
aam
xlat
js
xchg
fs
out
lret
pop
add
xor
push
arpl
jmp
repz
fimull
mov
jbe
flds
add
add
lock
mov
add
fsub
loopne
fs
movsb
mov
xor
mov
add
add
mov
adc
push
shrb
cs
out
and
jg
adc
in
sbb
mov
mov
rcll
int3
mov
xchg
lods
and
lret
or
pop
inc
pop
iret
pop
aad
ss
dec
cmpsl
cli
shrl
add
add
and
add
inc
lahf
leave
push
cmp
xchg
mov
rcl
pop
sti
cwtl
imul
iretw
aaa
out
fstpt
inc
clc
xor
xchg
mov
mov
or
notl
mov
inc
pop
jns
idiv
xor
cmp
sbb
add
add
cld
push
data16
fiaddl
add
add
nop
xchg
in
mov
xor
shlb
stos
btr
mov
pusha
push
in
je
xor
jb
mov
mov
call
xchg
jge
inc
in
push
mov
fcompl
inc
jnp
add
mov
sbb
ret
pop
movlps
js
jmp
inc
cld
sub
cmp
outsb
jae
lret
jle
repz
cltd
negb
add
add
enter
ljmp
rcl
outsl
jb
jle
aas
xor
into
mov
aam
xor
mov
loopne
mov
jae
imul
jb
sub
sbb
mov
lods
stos
pop
pop
les
cmc
push
cmp
pop
dec
inc
mov
jne
hlt
sahf
xchg
add
adc
adc
mov
lds
stc
fiaddl
add
add
popf
cmp
mov
repnz
mov
shrl
pushf
sahf
cmp
test
ja
cltd
inc
dec
xchg
push
mov
in
and
push
int
and
stc
xchg
insb
sbb
nop
pop
es
jp
cmc
inc
in
mov
sbb
sub
cmp
mov
rol
add
add
add
push
repnz
mov
mov
cmp
int3
data16
sbb
daa
sti
adc
sbb
punpckldq
or
pop
jno
cwtl
sahf
pop
in
sub
cmpb
mov
lds
sbbb
dec
mov
fdivrp
call
add
sqrtps
cmc
das
sbb
xchg
iret
popa
ret
ret
subl
add
std
add
mov
addl
cmp
arpl
pop
in
cmp
pop
xor
mov
sbb
or
adcl
lahf
xchg
add
pop
popw
or
push
pop
repnz
mov
jne
inc
inc
push
add
inc
sbb
push
cmp
stos
mov
pop
pop
xchg
out
inc
jmp
push
add
sub
fildll
stos
cmp
add
pop
add
add
lcall
shlb
inc
std
testb
jae
pop
mov
pop
sbb
dec
sub
in
sbb
stc
dec
dec
lods
in
mov
or
outsb
mov
js
lods
cmp
psrld
or
xchg
push
daa
shlb
add
fnstcw
pop
stc
push
add
fs
testl
inc
popa
faddl
add
add
call
and
push
mov
push
std
fwait
das
lea
in
stc
test
sub
out
add
and
mov
pop
push
pop
and
cwtl
pop
push
lret
or
loope
cmpb
scas
xchg
xchg
ror
and
jns
ret
scas
push
aas
fcomps
or
repnz
imul
jmp
add
push
imul
pop
mov
add
pop
add
add
loop
inc
bound
out
out
sbb
loope
lea
cltd
and
jae
or
sbb
sbb
lock
arpl
pop
jl
jl
xchg
push
push
mov
jle
fwait
jp
sbb
xor
negb
dec
into
aaa
mov
in
add
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
xchg
ret
cmpl
mov
jmp
mov
repz
insb
mov
bound
dec
lahf
in
jae
mov
and
push
mov
jg
in
cs
pop
stos
in
into
enter
xor
inc
jle
xchg
push
loop
push
mov
pop
inc
xchg
push
data16
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
repnz
pop
xchg
jo
in
xchg
inc
imul
mov
ds
sbb
mov
sti
mov
mov
sarl
sub
repnz
inc
xchg
xchg
loopne
out
mov
inc
xchg
jae
jnp
in
jmp
mov
cmpsb
inc
dec
bound
loopew
fsubs
add
fists
dec
mov
xchg
adc
dec
adc
add
add
insb
dec
xchg
mull
xchg
cmp
dec
dec
pop
sub
daa
mov
mov
fimull
xchg
and
adc
mov
mov
rcl
addr16
jo
inc
out
lcall
das
pop
adc
dec
clc
cltd
sbb
das
fwait
lcall
xchg
fcmovu
fisttps
push
arpl
add
add
add
add
lds
push
cld
mov
ret
dec
lods
mov
outsl
test
push
dec
mov
mov
mov
test
push
lds
jp
fs
aaa
sbb
clc
cmp
sbb
sahf
xor
inc
add
jle
out
sbb
mov
roll
add
add
jp
lea
jp
adc
and
sti
mov
mov
xchg
imul
sub
inc
pop
lcall
incl
pop
mov
jecxz
fisttpll
add
scas
pop
or
outsb
xor
cmp
cmc
mov
push
or
pop
add
and
cmp
cld
sbbl
pop
add
add
hlt
mov
cmp
fimuls
filds
in
cmp
and
ret
jne
stos
lods
and
mov
icebp
xchg
subl
xor
xlat
pop
popa
dec
xlat
xchg
dec
and
aaa
xor
lods
sbb
into
in
pop
adc
push
xchg
jmp
adc
dec
in
bound
add
popf
aam
push
xchg
push
rolb
add
add
sub
mov
fistpl
adc
addb
jns
fisubl
icebp
scas
lahf
std
or
daa
or
cmp
pop
dec
jg
push
lock
dec
push
xchg
das
jge
es
mov
pusha
or
jg
inc
xor
scas
xchg
stos
jns
ret
mov
add
mov
jbe
hlt
mov
and
cmpsb
daa
lea
add
add
cltd
push
or
je
scas
pop
and
sarb
mov
add
add
lock
loop
mov
jp
fiadds
dec
call
jo
test
xor
xchg
sub
in
or
addr16
push
add
scas
mov
xchg
mov
mov
aas
or
or
mov
add
ror
mov
sub
out
fstpl
sub
rolb
add
add
add
test
mov
mov
dec
fwait
add
mov
aas
lcall
pop
push
test
in
mov
push
test
push
outsb
int
clc
dec
and
into
adc
and
xchg
adc
and
cmpsb
cmpsb
cmp
sahf
cmp
outsl
test
dec
cmp
fucomi
outsb
and
pop
mov
daa
roll
add
add
cmp
mov
or
int
inc
sub
lea
arpl
add
int3
add
scas
stos
xor
stc
sub
ret
mov
dec
lods
xchg
xchg
cmp
or
mov
mov
fistps
pushf
sub
les
jg
fs
xlat
push
or
add
mov
and
sub
add
add
call
es
popa
xchg
in
pop
cwtl
fs
int
ret
xor
xorb
mov
fimull
sub
mov
jl
push
xchg
dec
lret
out
inc
ljmp
mov
pop
jne
shlb
mov
lds
jmp
mulb
outsl
cmp
mov
and
jg
call
into
inc
mov
jl
ja
fst
add
pop
add
add
int
addr16
jno
fisubl
xor
add
popa
outsb
jae
mov
sub
sahf
cltd
test
pop
dec
test
inc
jle
add
or
ja
cmp
rol
xchg
dec
vcvtsi2ss
lods
sub
lahf
fwait
dec
imul
cwtl
xchg
add
add
add
sub
sub
add
aam
add
add
cs
call
xchg
cld
xchg
mov
cli
adc
test
sub
or
loopne
and
in
xor
push
cmp
dec
shlb
mov
push
inc
pushf
sub
popf
hlt
rcll
push
fldt
dec
mov
imul
or
push
ss
add
int3
sbb
out
loopne
lods
pushf
and
add
add
and
scas
loop
pop
sbb
cld
cmp
arpl
test
loopne
cmp
bound
push
xlat
pusha
push
mov
dec
jp
sarl
jl
hlt
test
lock
and
testl
xlat
fdivl
push
shlb
jecxz
add
add
add
test
fildll
jge
call
add
add
fidivs
pop
adc
sarb
jbe
dec
mov
push
mov
addr16
out
adcb
imul
inc
ja
sti
ja
mov
and
cmp
or
sbb
mov
push
sub
xor
mov
add
add
lods
fcomi
sarb
add
repnz
add
add
cmp
imul
mov
jae
pop
movsl
les
inc
cmpsb
mov
dec
movsl
sbb
fwait
xchg
sub
pop
sub
pop
xchg
fcoml
addl
andl
mov
lcall
repnz
jno
ja
add
divl
dec
cmp
dec
dec
pop
dec
aam
aad
add
add
jns
fisubrl
mov
inc
lods
cmp
xchg
scas
test
insb
push
adc
adc
scas
jns
les
sahf
dec
cmp
dec
in
jg
frstor
dec
cmp
jae
flds
or
pop
movsl
shll
call
add
arpl
jge
mov
daa
and
aad
add
add
mov
xor
xchg
sbb
fistl
shll
insl
popf
in
add
repnz
les
mov
dec
andb
enter
repz
adc
cmpb
pop
rcrl
add
cwtl
insb
sbb
cmpb
scas
in
dec
push
push
add
ss
xor
and
add
sbb
add
pop
add
add
lods
jl
fcomps
push
lods
sbb
inc
or
mov
arpl
dec
cmp
mov
mov
adc
cmpsb
mov
sbb
popa
call
enter
das
xchg
lea
adc
shll
insl
hlt
fcompl
pop
pop
xor
push
popf
test
add
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
adc
jne
in
call
cmp
add
out
mov
movsb
sbb
inc
fwait
sahf
push
sarb
mov
popf
mov
add
sbb
or
sbb
lahf
rorl
pushf
and
cmpsb
pop
xlat
and
leave
jecxz
incb
pop
in
inc
fstpt
add
push
aad
out
fucomip
ss
cmp
loope
rcr
add
pop
add
add
popf
jae
add
mov
lds
divb
shlb
hlt
mov
mov
jmp
pop
mov
loope
pop
mov
and
cmpsb
repz
dec
adc
jns
jb
pop
xor
sub
out
add
outsl
js
adc
int
jbe
or
fstpl
aaa
add
outsb
jbe
lret
outsb
negb
xchg
xchg
sub
add
pop
add
add
stos
mov
push
push
scas
stos
jb
mov
stos
jmp
jecxz
pop
push
out
imul
insl
sarb
lods
and
sub
or
nop
fnsave
inc
pushf
and
and
jmp
push
call
andl
repz
inc
mov
add
push
les
in
lahf
sti
ja
rcll
mov
add
add
sahf
or
jmp
sti
imull
dec
jmp
adc
fs
pop
scas
arpl
fadd
inc
dec
sub
mov
xor
es
aaa
inc
movsb
cmp
jl
xor
jnp
out
jae
in
mov
sbb
push
dec
loopne
ret
out
leave
push
ja
loope
xlat
clc
sub
adc
add
xchg
cmpl
push
loopne
lcall
add
pop
add
add
sti
mov
hlt
fists
mov
push
into
ss
push
cld
mov
jge
dec
outsl
sbb
adc
xchg
jle
push
adc
hlt
pop
add
lcall
inc
fcmove
popa
dec
stos
js
lods
fistpl
wbinvd
mov
xchg
repz
inc
add
fincstp
shl
frstor
pop
dec
dec
sti
popa
pop
cmp
add
add
popa
sar
sub
jno
ss
cmpsb
sub
cld
push
adc
pop
or
imul
lock
nopl
mov
and
bnd
imul
dec
jnp
and
ss
into
fldenv
push
inc
xchg
mov
xchg
dec
aaa
cmp
pop
aaa
dec
sbb
popa
add
aam
fnstsw
out
fcmovu
in
rclb
cwtl
filds
add
add
push
movsl
call
cmp
xlat
pop
sahf
stc
mov
sarb
mov
mov
adc
inc
pop
pop
popa
dec
push
fists
loopne
pushf
pop
push
dec
lret
xor
adc
dec
xchg
sti
mov
outsl
or
inc
inc
cmp
jmp
into
mov
lea
add
sbb
inc
jecxz
mov
push
push
ss
repz
add
add
sbb
or
or
or
mov
jge
aad
fwait
repz
std
mov
popf
or
xchg
popa
sub
adc
xchg
test
fistpll
sub
jmp
mov
sarb
push
aaa
aas
jl
mov
cltd
jg
mov
mov
icebp
and
ror
dec
loopne
add
add
lahf
int3
sbb
jmp
mov
dec
sbb
lahf
xor
sub
movsb
xchg
sub
fisubl
popf
les
mov
mov
and
push
add
pushl
andb
push
std
mov
negb
stos
mov
dec
xor
filds
adc
repz
das
cli
fists
dec
es
sbb
adc
add
add
jbe
sub
lret
mov
sub
add
sub
push
mov
and
jbe
fdivs
pop
xchg
jp
popf
lods
ret
and
ja
ss
cmpsl
push
mov
lahf
rorb
add
inc
jmp
mov
mov
add
adc
push
adc
cwtl
out
cmpsl
push
push
and
pop
add
add
xchg
mov
test
and
mov
setb
dec
pop
jle
push
andb
inc
imul
jmp
sbb
mov
cmp
ret
or
xchg
in
inc
ljmp
fsubl
lods
and
push
ja
and
lds
in
repnz
es
ss
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
push
cmp
add
add
add
add
add
add
add
add
dec
cmp
add
add
inc
iret
add
pop
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
