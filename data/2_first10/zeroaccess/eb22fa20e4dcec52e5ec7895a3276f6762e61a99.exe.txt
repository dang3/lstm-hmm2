push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
imull
mov
dec
cmpsb
mov
jbe
lcall
adc
jo
fdivrs
lahf
pop
push
sbb
test
mov
loopne
fidivrl
in
sti
and
fmulp
dec
adc
add
inc
mov
iret
andb
lahf
jmp
push
xchg
xor
leave
ja
push
inc
and
test
jecxz
adc
jg
xlat
out
or
ret
daa
addr16
xchg
and
sub
push
pop
sbb
lea
shrb
rcrb
mov
push
mov
loopne
jmp
adc
test
push
pop
jae
movsl
push
sahf
les
mov
mov
xchg
sbb
inc
or
nop
ret
and
push
ss
pop
fsubp
jge
or
or
cmp
roll
dec
outsb
cmpsl
or
sbb
imul
lods
push
outsl
xor
insb
out
mov
mov
pop
add
xcrypt-ctr
cmpsl
lcall
and
mov
adc
stos
or
orb
jnp
std
int
jp
iret
sbb
repnz
repz
cltd
pop
pop
pop
add
mov
mov
mov
fidivrl
gs
daa
cmp
sbb
or
mov
mov
xor
pop
lcall
xchg
pop
test
inc
test
xlat
xor
bound
mov
mov
das
add
lcall
fdivl
es
imul
imul
out
out
and
mov
sbb
jbe
sub
mov
adc
hlt
adc
or
fcomps
and
mov
fcomps
ss
movsl
loopne
sbb
stc
sahf
xor
cmpsb
insl
mov
jmp
cmp
xor
loope
sbb
sub
pop
cmp
aas
test
sub
xor
cmp
push
sub
repnz
mov
inc
sub
ror
pushf
scas
cmc
aad
jae
aad
leave
xor
lret
sub
mov
mov
lret
push
in
lock
neg
lret
cli
outsb
fisubl
fldt
mov
adc
je
addr16
sub
mov
mov
add
mov
dec
mov
add
call
xor
inc
stos
cmp
or
addr16
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
cmc
or
push
adc
adc
adc
popa
adc
sbb
xchg
jmp
popf
sbb
add
mov
pop
cmc
iret
mov
xor
jp
sub
pop
or
and
mov
sbb
cwtl
mov
mov
ds
icebp
mov
sarb
arpl
roll
fsubr
rclb
jmp
mov
lret
sbb
inc
lea
push
push
lods
nop
jns
jb
insl
insb
jbe
cltd
arpl
mov
or
arpl
adc
int
jge
push
jle
ror
and
loopne
orb
out
xor
dec
int3
push
fmull
sbb
sub
adc
or
adc
frstor
cld
xchg
loopne
xor
addr16
jb
jl
mov
adc
mov
and
mov
fildl
mov
imul
int
or
mov
xor
lret
push
cmp
in
out
push
in
add
pop
cmp
pop
leave
jb
leave
xchg
cmp
xor
ss
enter
psubsw
fdivp
and
dec
add
push
push
and
sub
dec
cmp
dec
jg
pusha
cmp
xchg
pop
scas
lods
sbb
inc
in
stos
pop
leave
dec
shlb
test
les
lret
andl
mov
pop
sahf
sti
popl
cmc
sahf
cmp
add
insl
in
cmp
xchg
cmp
cwtl
ss
mov
popf
subb
xor
or
rol
in
repnz
stc
mov
leave
adc
mov
xlat
mov
int
pop
out
adc
aam
sti
rol
loope
movsl
roll
pop
cltd
adc
fs
and
je
sbb
aad
or
jnp
xlat
jb
arpl
ficompl
rcl
call
or
push
stos
inc
jl
add
cs
mov
sub
lcall
cmp
pop
xor
bound
addb
pop
pop
lret
pop
faddl
popa
mov
add
jp
in
lds
imul
out
cltd
and
lea
insb
test
arpl
xor
iret
andl
jae
dec
xchg
lahf
test
ss
ror
fiadds
push
int3
add
and
jmp
jp
mov
xchg
pop
pop
repz
lret
mov
jmp
rorl
add
bnd
mull
mov
fidivl
out
cmp
in
and
testl
and
aam
sbb
stos
movsl
lds
pop
outsl
lret
hlt
mov
test
icebp
xchg
sub
mov
outsl
push
mov
fdivr
mov
xchg
adc
lret
daa
cli
mov
adc
dec
outsb
ljmp
jbe
jo
lock
sbb
mov
fistps
pop
sbb
into
adc
cli
ficoml
inc
cmp
fiaddl
add
ds
jecxz,pn
push
and
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
inc
xor
insb
into
sub
xchg
jb
xchg
outsl
dec
popf
add
sub
jge
or
pop
clc
push
mov
inc
xor
mov
icebp
or
cmp
in
xchg
lret
loop
les
pop
push
xchg
gs
testl
out
stos
imul
and
or
popf
shrb
out
and
das
ljmp
xor
fdivl
aam
rorl
pop
dec
aam
mov
pop
and
hlt
inc
push
inc
inc
arpl
jb
mov
lret
mov
addr16
hlt
scas
pop
aaa
fildl
pop
push
sbb
dec
pop
cmp
stos
mov
xchg
es
rcll
or
nop
lods
xlat
pushf
adc
dec
xorb
mov
repz
loop
fistl
sbb
add
bnd
gs
inc
add
fstl
in
adc
push
inc
jno
cmp
adc
mov
adc
mov
sbb
int3
xchg
fwait
inc
push
or
fwait
lahf
fsubrl
sti
push
mov
outsb
in
adc
cld
sub
clc
notb
and
es
xor
lock
in
pop
shl
xchg
adc
out
mov
aam
arpl
hlt
popa
mov
ret
dec
jg
cmp
sub
jne
jb
mov
and
aaa
push
sub
jl
adc
in
inc
je
or
ret
pop
cmp
cld
or
mov
mov
mov
arpl
mov
fisubs
scas
jne
out
testb
xor
scas
xchg
xlat
arpl
or
push
pop
into
fcoml
dec
cs
in
stc
add
test
ret
sti
cwtl
push
dec
xlat
daa
pop
jle
imul
push
push
lock
ficompl
dec
adc
xchg
test
or
mov
rorl
pop
iret
mov
sbb
sub
push
loope
sbbb
xorb
neg
cmp
sbb
sub
fmul
dec
mov
xchg
jo
sub
and
xor
pop
or
pushw
mov
pop
bound
sub
pop
mov
pop
mov
and
not
sbb
jno
jge
sub
shrl
sahf
inc
rorb
insl
mov
gs
enter
or
push
aam
adc
out
xor
popf
stc
cmpsb
jnp
inc
movb
cltd
or
push
shrb
mov
or
sub
mov
notb
scas
rcrl
aas
lahf
lahf
jge
jb
int3
nopl
mov
or
jp
pop
fucomi
sbb
mov
mov
lea
shl
int
mov
mov
jae
dec
lock
stc
or
sbb
inc
jl
pop
mov
cld
enter
popf
cmpsb
stos
mov
xchg
inc
dec
fisubs
and
inc
ffree
repz
pop
cmp
or
or
adc
cmpsl
hlt
popf
popf
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
in
jle
call
adc
adc
jp
jmp
int3
arpl
jmp
gs
adc
ljmp
add
test
cmp
push
mov
or
in
add
fsub
adc
in
shll
push
loopne
test
leave
cmp
hlt
inc
test
mov
dec
aad
adc
icebp
outsb
jno
lods
into
add
adc
mov
fistl
adc
mov
inc
icebp
data16
mov
shrb
pop
add
sub
xchg
mov
nop
push
sti
arpl
nop
cld
add
lahf
out
mov
andb
bound
sub
jge
loope
jmp
pushf
mov
jbe
es
lea
ja
mov
test
sub
add
iret
dec
fildl
dec
mov
scas
jb
mov
pop
fcomi
adc
and
aad
jecxz
jnp
repz
notb
jbe
add
sbbb
sbb
push
xchg
stc
mov
mov
jp
out
add
outsl
lret
push
xchg
push
lcall
pop
fcoms
repz
outsb
enter
insb
fwait
out
shrl
orb
mov
pop
testl
mov
pop
jg
rcr
mov
or
enter
xadd
inc
sub
lahf
insb
fs
lea
cs
lods
loopne
enter
xchg
iret
dec
mov
jmp
sub
pop
xchg
test
xchg
or
cmp
add
xor
pop
fimull
pop
jns
cld
adc
stos
inc
xchg
fwait
popf
push
sub
sti
arpl
jns
outsl
sbb
andl
sbb
ss
mov
mov
insl
test
pop
ss
sbb
mov
loop
and
pop
cmpsl
pop
pop
aad
add
aas
jecxz
lret
xchg
test
sub
clc
cs
mov
data16
idivb
testl
bound
stc
cmp
push
aaa
in
mov
adc
add
dec
test
in
push
aaa
push
mov
insl
push
aad
or
int
test
ljmp
push
sahf
mov
dec
jmp
fstl
xlat
push
dec
lock
out
imul
or
test
push
inc
xor
insl
push
xchg
into
mov
or
push
or
jne
insl
mov
cld
aam
pop
and
iret
xor
or
pop
stos
push
xchg
xor
jnp
mov
test
jge
cmpsb
mov
movsb
jg
aas
inc
mov
popf
add
mov
fidivrl
pop
jge
cwtl
repz
stos
cmc
cmp
out
mov
call
pop
sub
fst
cmp
mov
roll
stc
lret
mov
fiaddl
add
adc
lods
bound
mov
shlb
pmuludq
movsb
popf
mov
sbb
lods
adc
add
ss
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
aaa
sbb
std
adc
adc
adc
push
leave
das
and
xor
sbb
loop
adc
jnp
and
sub
in
cmpsb
mov
cs
sub
mov
push
imul
adc
outsb
mov
pop
and
mov
into
xchg
sub
dec
xor
sbb
cld
push
inc
mov
fcoml
sub
mov
xor
mov
mov
xor
jae
sbb
xor
mov
fsts
sub
adc
dec
xchg
stc
push
xchg
mov
dec
mov
push
push
dec
inc
out
into
popf
out
dec
or
push
out
outsl
add
sub
xchg
orb
jl
add
loope
mov
clc
jge
dec
push
mov
and
adc
clc
ficoml
arpl
mov
mov
or
and
xchg
pop
mov
stos
cld
out
shll
arpl
fs
adc
and
movsl
mov
mov
mov
ja
cmp
popf
adc
xchg
sbb
inc
push
test
es
scas
sub
cld
jbe
lahf
daa
les
fcoml
jb
push
insb
daa
xchg
pop
mov
adcl
add
jne
sti
pop
sbb
gs
scas
jle
jbe
xlat
sbb
cmp
cwtl
cs
push
and
test
xchg
mov
test
lock
stos
scas
mov
pop
mov
jecxz
mov
pop
test
data16
leave
aam
pop
pop
pop
adc
adc
sti
mov
aaa
in
and
outsb
fidivrs
fwait
jb
fs
mov
stos
mov
mov
invlpg
jge
fmull
and
sbb
in
xchg
cmpsb
idiv
add
add
xchg
xchg
imul
mov
sub
add
jl
out
out
push
push
dec
add
fldenv
in
or
sbb
scas
scas
add
or
mov
jle
rcrb
gs
sub
mov
mov
int
sub
or
fldl
rcl
dec
imul
fimull
popf
push
ret
fsubrp
pop
pop
leave
or
mov
icebp
add
scas
push
les
jp
arpl
adc
adc
mov
in
sub
arpl
adc
movsl
stc
fadds
aaa
mov
mov
daa
fbld
out
pop
or
faddp
push
mov
push
in
inc
lods
fstpt
pop
xor
imul
popf
cli
xchg
lock
sbb
das
cmp
lcall
mov
push
in
addr16
push
cltd
dec
mov
add
mov
or
push
loop
or
lods
add
xchg
cwtl
cmp
mov
pop
mov
pop
sbb
scas
xor
xchg
xchg
and
mov
jecxz
lahf
pop
mov
cld
mov
xor
mov
xor
iret
ljmp
push
cs
mov
aam
or
or
int
leave
xchg
lock
inc
shr
push
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
rol
mov
adc
adc
aas
dec
pop
mov
fisttpll
rolb
scas
mov
adc
ret
out
add
test
lcall
pop
xlat
ss
dec
inc
movsl
outsb
mov
cwtl
jnp
cmp
and
cs
add
nop
clc
cmpsl
xchg
mov
sbb
push
pop
pop
gs
adc
xabort
lods
add
cmp
jecxz
sti
lret
lea
adc
xor
inc
cmp
and
js
xchg
xchg
dec
fbld
icebp
fadds
sub
and
sub
push
jg
pop
sbb
cmpsl
sbb
pop
add
jge
jecxz
das
std
insb
lahf
lods
sbb
imul
lcall
cmp
mov
loope
js
adc
iret
es
movsb
lret
inc
pop
stos
iret
insb
and
je
mov
cwtl
cmp
nop
movsl
push
mov
cmp
ds
jecxz
out
inc
movsb
shl
push
cwtl
pop
cmc
jb
dec
xchg
out
addr16
popa
clc
dec
lods
iret
cwtl
sub
add
xchg
inc
push
lea
jmp
imul
adc
loope
nop
push
aas
imul
add
mov
mov
out
popa
dec
dec
lods
fisubrs
xor
pop
insb
pop
cmp
mov
jl
jmp
ret
mov
movsb
movsl
adc
sbb
lcall
xchg
inc
inc
stc
mov
push
adc
push
rorl
pop
inc
adc
test
jmp
mov
mov
ror
aaa
out
xchg
arpl
cmovnp
stos
ss
test
add
xchg
xor
xor
pop
inc
cmp
lods
mov
aad
push
cwtl
or
scas
mov
xchg
jl
iret
and
dec
xor
pushf
mov
inc
pusha
mov
mov
inc
cmp
scas
scas
jmp
scas
stos
movsb
pop
adcl
shll
or
pop
stc
inc
xchg
inc
flds
push
push
lret
and
mov
jne
cwtl
mulb
les
mov
push
inc
push
and
inc
push
mov
out
cmp
outsb
das
push
popa
or
and
clc
inc
mov
sbb
std
pop
data16
fstpl
jmp
shll
daa
test
daa
outsl
lahf
fcmovne
and
and
mov
orl
enter
adc
mov
pop
pop
jbe
xchg
adc
pop
fmull
daa
and
lahf
fiaddl
dec
bswap
pop
in
lea
test
push
repz
and
aam
pop
dec
inc
loopw
sbb
push
push
in
sub
dec
adcl
cmp
jg
sub
mov
popa
inc
inc
loope
cmp
das
fwait
mov
pop
cwtl
insb
insl
gs
mov
add
fwait
mov
pusha
jp
cwtl
sub
xor
fstl
or
push
xchg
ljmp
pushf
cmp
xchg
and
imul
out
cmpb
outsb
insb
in
in
in
frstor
xchg
pusha
mov
mov
enter
lret
lcall
push
jmp
fisttps
lods
shl
loop
xchg
mov
jmp
xchg
cltd
bound
and
push
jo
cli
das
or
adc
adc
insb
dec
ljmp
mov
adc
jle
ja
daa
ja
jle
push
enter
mov
repnz
dec
lret
ss
decl
cmp
or
std
daa
push
and
inc
cmc
sbb
jne
push
xor
dec
arpl
sub
pop
lock
fwait
or
lahf
test
xchg
and
hlt
pop
outsb
dec
test
xor
popf
jae,pn
sbbl
xchg
dec
jmp
insl
xchg
cmp
jl
stc
lods
sbb
fisubs
inc
inc
sbb
pushf
sbb
rclb
mov
pop
push
sbb
dec
rcll
stc
add
fldl
adc
xor
test
dec
insb
and
call
fcomps
inc
test
es
ret
aas
xor
idivl
mov
xchg
test
fcoml
fwait
adc
push
mov
or
dec
es
rcrl
sbb
pusha
mov
cmp
pusha
xor
js
stos
cmpsl
test
xor
dec
out
pushl
das
enter
cs
pushf
push
dec
and
lcall
or
dec
jecxz
idiv
and
mov
ss
or
inc
pop
push
cmp
lret
mov
jno
negl
push
imul
aam
push
test
int
dec
cmp
or
es
sbb
pop
loope
mov
movsl
es
jg
data16
jecxz
imul
arpl
ret
and
lock
sahf
jg
xchg
cwtl
sub
jo
outsb
push
out
lret
sub
or
and
js
sub
shll
mov
pop
dec
cmpb
je
cwtl
add
push
hlt
into
xchg
scas
jbe
pop
xchg
insl
inc
cwtl
and
sbb
repz
repnz
push
scas
pop
inc
int
jno
andb
inc
push
daa
inc
loop
push
imul
lahf
clc
and
icebp
push
or
jnp
lea
les
inc
pop
push
ja
mov
rolb
inc
fistps
jns
adc
dec
pop
or
push
xchg
push
xor
in
icebp
push
inc
insb
loop
call
ret
mov
inc
mov
stc
add
adc
sbb
js
subl
sarb
dec
jbe
adc
lods
or
xchg
clc
leave
inc
mov
sbb
add
mov
xchg
mov
lahf
inc
setle
pop
in
lret
lcall
xchg
and
jecxz
outsl
call
pop
test
mov
test
sbbb
xchg
jmp
pop
outsl
aad
test
adc
xor
xorb
add
fists
pop
lret
mov
push
and
add
adc
imul
cld
or
jl
mov
mov
dec
jo
shll
add
hlt
mov
int
in
inc
imul
outsb
test
push
not
sti
sub
vmovaps
inc
sub
lods
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
add
mov
adc
adc
popf
fwait
loopne
loop
or
daa
dec
iret
xchg
andb
loopne
cmp
adcl
dec
mov
xlat
pop
jae
into
jnp
pop
insl
jmp
mov
in
xor
cmpsb
mov
or
pop
dec
aam
jl
stos
jg
pop
jle
adc
dec
fistps
sahf
shll
nop
lods
jae
fwait
sbb
push
test
mov
div
inc
mov
jbe
out
pop
rcrb
jl
mov
lret
arpl
std
iret
lcall
xchg
xor
je
jmp
jnp
sub
lea
cltd
or
sub
mov
sbb
imul
xchg
pusha
mov
incb
xor
or
mov
mov
negb
mov
dec
jge
or
pop
mov
lret
push
mov
mov
inc
dec
sbb
mov
cmp
adc
dec
xor
icebp
xchg
push
aas
mov
mov
cmpb
jmp
inc
gs
jno
pop
int3
xchg
daa
shll
xor
ljmp
test
das
xchg
ljmp
in
int3
mov
jecxz
das
inc
test
pop
rorl
pop
xor
jecxz
pop
aaa
jae
stos
or
fwait
nop
cmp
popf
ret
clc
sbb
imul
push
loop
popf
stos
ljmp
nop
lods
aad
pushf
xlat
pusha
pop
in
xchg
mov
hlt
inc
in
fwait
xor
es
repz
or
gs
jp
pop
mov
in
jge
daa
add
mov
jl
jnp
push
adc
outsb
mov
mov
mov
inc
mov
push
cmp
jnp
dec
mov
mov
mov
mov
or
jmp
mov
mov
jge
xchg
mov
mov
lcall
push
or
movsb
xor
sub
int3
mov
leave
fisttps
lods
push
jge
push
xor
ss
adc
cmp
xor
mov
cmc
lods
roll
xor
ret
aas
out
jb
shlb
int3
push
repz
xchg
in
xchg
jp
hlt
mov
shlb
sub
pusha
mov
aam
je
xor
ljmp
inc
jmp
and
cld
fs
movsb
insb
rorl
dec
lods
sub
inc
xchg
xchg
loope
mov
cmpsb
or
ret
xchg
xchg
jmp
ficoms
int3
dec
lea
stos
sbb
pop
push
adc
fisubrl
cwtl
in
insl
jg
xchg
jbe
test
xor
pop
lahf
xchg
pop
or
cltd
xchg
or
push
scas
inc
pop
rcrl
sub
jno
pushf
aad
mov
pop
frstor
mov
es
mov
test
pop
aad
int3
loope
rcl
test
cltd
cmc
movsl
push
push
rcl
push
lcall
jbe
fs
push
inc
cwtl
cvttps2pi
rolb
enter
cltd
das
mov
fisttps
dec
in
or
xchg
sub
add
loop
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
loope
mov
adc
adc
xor
fiadds
into
cmp
dec
mov
cmp
pop
call
ja
mov
mov
inc
rcl
lods
pop
jo
jmp
jl
sub
enter
xor
pop
sbb
push
push
mov
iret
jb
ljmp
hlt
mov
inc
fdivrl
lret
pop
fwait
insl
imul
std
outsl
cmpsb
cmpsl
sti
xchg
jp
mov
pop
sub
mov
stos
stos
inc
fdivrl
inc
inc
pop
add
incb
adc
pop
sbb
dec
add
pop
shll
xchg
icebp
cld
insb
inc
pop
sbb
or
mov
fsubl
inc
mov
cmp
into
je
pop
sub
jb
fstps
arpl
lahf
cmpl
loop
inc
insb
in
sarb
scas
xor
sahf
adc
sub
test
into
mov
arpl
test
push
dec
in
shrl
ret
xlat
mov
inc
mov
into
inc
js
mov
xor
and
inc
adc
aam
repz
push
pop
fldcw
adc
scas
outsl
push
xor
pop
lea
shl
sbb
push
in
and
jmp
daa
or
cli
push
cli
sti
fstpl
pop
mov
ret
add
cmp
mov
sbb
sub
pop
inc
or
mov
jecxz
adc
adc
popa
cmp
scas
mov
jne
mov
or
inc
rolb
add
adc
or
test
dec
iret
sahf
out
sub
dec
xlat
js
lahf
outsb
or
push
movsb
cmp
std
rcrb
xchg
cltd
or
jns
orl
mov
sbb
inc
adcb
xchg
sbb
pop
jmp
adcl
ja
jne
jns
pop
push
test
sbb
and
xchg
sbb
leave
add
add
cmp
outsb
incl
test
lcall
pushf
sub
jnp
in
sbb
mov
pop
fisubs
fdivrs
inc
pop
and
mov
roll
sbb
mov
jno
add
rcrl
pop
lahf
push
pusha
jp
gs
pop
cmpsb
dec
and
dec
iret
adc
stos
xchg
out
stos
dec
or
push
xor
lcall
addr16
dec
arpl
add
ror
fiaddl
cmp
fimuls
sbb
int
jno
cmpsb
es
and
jae
loop
pop
out
xor
lea
jbe
xchg
lods
gs
popa
nop
push
add
aaa
add
mov
inc
push
ret
mov
ss
adc
in
adc
cltd
push
pushf
jae
sti
cld
loope
cmpsl
dec
sbb
data16
arpl
xor
fidivs
scas
popf
fs
iret
rorl
lahf
push
sti
aaa
jns
or
cmp
cmp
idivl
sahf
mov
pop
pusha
gs
mov
add
shl
push
in
xchg
push
pop
cli
lods
and
xlat
xor
add
push
das
mov
jae
sahf
repnz
dec
dec
inc
xchg
aas
inc
aad
and
std
add
out
push
adc
mov
out
rolb
sbb
add
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
scas
testl
adc
adc
xor
cmpsl
out
sbb
jmp
jb
cmc
push
rol
outsl
fcoms
cs
je
xchg
test
add
xchg
cmpsl
push
out
push
hlt
rorb
in
inc
mov
in
lock
cld
loop
aas
mov
fistpll
push
les
adc
cmpsb
inc
aad
movsb
xchg
xchg
pop
ret
popf
push
scas
loopne
jge
jno
add
fstpl
rolb
in
inc
mov
fsubrl
push
jl
arpl
jmp
fnstcw
daa
rcll
inc
in
ds
sub
mov
pop
cs
out
cmp
push
add
das
negb
mov
inc
aam
add
fs
subl
jbe
cmc
push
int
adc
shlb
orb
xchg
test
pop
mov
jbe
xor
pushf
aad
xlat
sahf
lods
pop
test
mov
mov
das
jge
loop,pt
sbb
add
jg
mov
sbbb
jae
je
push
fbstp
pop
xchg
orl
push
aaa
and
jge
aas
sarl
cltd
in
pop
jne
shl
out
cmp
dec
loopne
stos
pop
js
mov
add
mov
pop
jbe
in
aam
sti
xlat
ret
outsl
filds
bswap
jbe
lods
fnstsw
xor
dec
clc
mov
mov
cmpsl
sub
repz
fmulp
dec
add
lds
jmp
ja
loope
dec
sub
ficompl
addl
mov
mov
and
out
push
push
xchg
aas
adc
mov
jmp
in
jae
cmp
imul
xchg
fs
fdivr
repnz
arpl
into
loopne
jnp
shll
mov
push
mov
pop
xor
mov
jle
sarb
imul
out
xchg
aam
call
inc
cwtl
sbb
jg
data16
jno
mov
pop
rolb
mov
or
push
clc
cwtl
or
xlat
xchg
and
mov
mov
fwait
jbe
aaa
lods
or
push
jmp
pop
adc
push
test
repnz
incl
and
fs
mov
push
mov
jae
lock
pop
add
mov
cmp
fs
dec
sahf
jbe
arpl
in
push
xchg
lcall
add
pop
mov
sub
jge
sbb
subl
cs
xor
inc
mov
jg
add
insb
in
in
movsb
sbb
xchg
add
adc
cmc
push
and
or
lock
jbe
movsb
andb
cmp
out
bound
pop
psrld
dec
inc
xor
jecxz
xchg
or
rcll
cmpsb
lret
stos
cmp
dec
push
mov
dec
dec
pinsrw
adc
shlb
push
push
jns
test
adcb
pop
mov
jge,pn
outsb
or
add
sub
push
aam
and
orl
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
sub
adc
adc
sub
xor
into
push
cmc
cmc
adc
jp
ljmp
inc
lods
adc
andl
out
jb
inc
in
pop
subl
push
mov
push
xchg
jbe
loopne
xchg
dec
leave
adc
popf
cli
test
jmp
fs
xchg
sbb
dec
push
sub
pop
insb
sbb
dec
jp
mov
sahf
xchg
push
sub
inc
pushf
lods
xchg
cmp
cmp
imul
sti
cmpsb
mov
pop
cmp
addr16
mov
mov
scas
mov
pop
bound
push
xchg
pop
sub
mov
adc
dec
inc
int3
pop
imul
jbe
cmp
in
in
fldl
dec
dec
cmpl
rorb
push
test
sbb
mov
pop
fnsave
sub
adc
mov
fildll
enter
mov
fldcw
inc
inc
pop
adc
push
jbe
xchg
jno
sahf
sub
fcmovnu
nop
sbb
pop
xchg
mov
inc
aas
je
loopne
sbb
sub
movsb
int3
sti
jl
in
sbb
dec
inc
adc
jp
xchg
push
jno
js
xchg
out
xor
xchg
mov
icebp
leave
fildll
out
or
jb
push
dec
sbb
mov
or
stos
sbb
dec
loope
test
add
cmpsb
or
int3
mov
and
jnp
jo
int3
popf
push
xchg
iret
outsb
or
cld
lods
push
cltd
xchg
and
fnop
leave
pop
fcomps
push
xchg
pop
loopne
pop
push
sbb
cltd
imul
call
jnp
pop
mov
fisttpl
pop
xor
filds
mov
adc
sbb
inc
test
dec
mov
jg
dec
push
xchg
add
std
xor
xchg
ja
sub
pusha
sub
xor
cmpsl
mov
mov
rcrl
adc
and
stc
mov
jae
cltd
roll
push
cs
lds
lea
inc
int
pop
addr16
aad
sbb
or
shrb
je
mov
add
mov
cmpb
sarl
mov
fsubp
out
fs
cmp
xchg
cmp
sti
push
lea
adc
test
and
adc
fwait
popf
iret
repnz
inc
movsl
in
push
outsl
jae
pop
outsb
test
mov
pop
or
pushf
mov
mov
cmpl
pop
movsb
jmp
dec
fisubl
and
cld
pop
les
cmpsb
adc
imul
lahf
xor
fdivrs
divl
into
fidivrs
push
fldcw
sbb
loope
add
stos
cmp
and
add
cmpsb
out
lret
push
sti
adc
hlt
imul
test
xchg
hlt
loope
sub
jo
mov
push
enter
icebp
jb
int3
int
mov
xor
push
xchg
add
mov
jmp
or
pop
pop
ds
jns
and
xchg
test
stos
pop
push
mov
cmp
popa
add
xor
lock
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
lea
stos
jno
adc
adc
adc
dec
jno
mov
push
shlb
ror
mov
cwtl
push
pop
jo
outsb
into
xchg
jmp
pop
jb
adc
sub
ljmp
adcl
and
hlt
xor
out
shr
xor
and
repz
add
pop
mov
icebp
hlt
mov
mov
rcrb
into
cmp
xchg
bswap
jl
cs
inc
imul
movsl
dec
xor
ret
push
gs
jb
call
xchg
pusha
sbb
mov
pushl
mov
int
lea
push
jbe
xchg
pop
stc
rcrl
dec
push
push
insl
adc
cs
cli
xchg
out
popa
fsts
inc
cli
xchg
repz
je
mov
nop
imul
jmp
fsubr
push
mov
mov
lcall
sub
adc
test
ljmp
cmp
or
push
aas
xor
add
sub
or
xor
ret
gs
rclb
cld
mov
inc
or
movsl
xchg
stos
movsl
sub
out
mov
jle
cmp
and
sti
and
popa
jg
cli
adc
xor
cmp
pop
fisttps
int3
push
popa
stc
adc
cmpsl
int
pop
push
movsb
js
sahf
xchg
imul
mov
and
cmpsl
stc
push
subl
notl
aad
adc
out
stos
loop
sub
mov
cld
add
lds
ja
mov
sti
iret
lods
call
iret
inc
lods
cmp
outsb
lods
mov
mov
int3
push
andb
out
scas
push
cmpsb
andb
dec
out
ret
mov
sub
inc
pop
push
xor
and
pushf
rcl
enter
sub
mov
sub
inc
repnz
int3
pop
or
scas
movsb
sub
cmp
xchg
dec
xchg
pop
cli
ret
sysexit
sbb
sti
mov
stos
inc
pop
jbe
jg
pop
dec
mov
adc
pop
push
add
xchg
sbb
sarb
clc
push
pop
lret
shlb
nop
jnp
test
lds
and
mov
xor
push
pushf
pop
test
jbe
mov
incl
adc
jno
orb
pmaxsw
out
mov
mov
add
xor
push
add
shlb
aaa
int3
shl
int3
lret
stc
jnp
jb
cld
inc
cmp
ficoms
push
in
js
cmpsb
sub
adc
out
adc
lock
int
ja
jg
fld
xchg
jbe
mov
sub
mov
gs
sbb
mov
lahf
imul
out
jno
jmp
fiaddl
xchg
addr16
cwtl
inc
inc
mov
iret
fwait
iret
xorl
imul
lcall
rorl
pop
jl
fildll
adc
movsl
ja
xor
lret
lock
push
je
outsl
orb
fistpll
cmp
dec
inc
dec
das
inc
int3
aam
ja
mov
arpl
inc
int3
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
in
sub
les
adc
adc
and
mov
lods
js
cmp
vhaddps
cld
push
subb
cli
sub
insb
mov
mov
nopl
enter
lret
shlb
jge
jge
mov
mov
and
pop
bound
nop
sub
mov
mov
mov
mov
sbb
idivb
test
add
stos
and
insl
or
negb
push
push
inc
sbb
inc
pop
mov
and
pusha
mov
pop
adc
sub
sub
lods
aad
or
pushf
fstl
mov
frndint
ljmp
lods
cmp
pusha
xor
insb
mov
jl
mov
jns
dec
test
push
xchg
add
and
fwait
mov
leave
adc
sub
xor
sub
sahf
inc
xchg
js
adc
push
jg
ljmp
ret
pop
xchg
mov
sub
mov
xchg
mov
pushf
xchg
loope
pop
adc
cmp
repz
sub
stc
sub
out
xchg
enter
fimuls
inc
insb
xchg
inc
test
xchg
jno
ret
xchg
push
pushf
jbe
arpl
sub
mov
xor
push
dec
xor
jmp
out
or
lahf
fnstsw
subps
jge
les
mov
dec
andl
jmp
inc
shl
dec
shl
das
stc
xor
mov
jbe
sub
push
mov
stc
dec
std
or
out
leavew
inc
pop
loopne
nop
in
fcoms
pop
and
cwtl
lock
insl
cltd
jl
jnp
mov
loop
push
leave
icebp
mov
mov
jg
cwtl
lods
stc
mov
mov
movnti
out
int
lret
push
pusha
adc
xchg
cmpsl
jle
push
fdivs
jmp
enter
cmpsb
and
repnz
sub
bound
repnz
loope
mov
mov
ljmp
int3
call
cmpxchg
jae
movsb
mov
int
ljmp
adc
leave
pop
fsts
adc
int
popa
cmp
pushl
int3
inc
and
mov
push
cmp
fwait
dec
mov
dec
inc
ror
loop
mov
pop
pop
ret
sbb
and
imul
jnp
outsb
mov
les
lea
pop
dec
jg
jb
and
xor
xchg
idivl
xor
cmc
mov
clc
iret
mov
cmp
das
sub
test
push
mov
arpl
xor
sbb
cmp
mov
mov
cmp
lcall
rcl
popl
lret
xor
je
xchg
in
lahf
cmp
xchg
jns
outsb
mov
pop
je
jns
js
gs
mov
and
std
push
test
cmc
out
out
xlat
scas
ret
jecxz
jb
push
inc
fisttpl
scas
pop
mov
push
jp
imul
cltd
pop
lods
and
mov
add
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
enter
xchg
xor
xorl
rclb
jmp
lods
add
pushf
dec
movsl
sbb
pushf
popa
mov
lcall
dec
push
pop
rorb
xchg
fldcw
pop
imul
mov
sub
cmpsl
clc
aad
cvtps2pi
hlt
sub
ss
sbb
xor
and
adcb
adc
rep
pop
shl
gs
mov
jmp
pop
push
and
dec
movsl
xor
call
jp
jmp
jge
cmc
pcmpgtb
dec
rcrl
call
push
add
out
adc
enter
pop
aaa
fs
js
adcb
ss
inc
add
adc
jae
pop
inc
scas
testl
std
cmpsb
xchg
sarb
sub
pop
cli
mov
sbb
nop
pop
inc
or
lahf
test
int
decb
es
push
and
xor
mov
iret
sub
insl
aas
es
stos
mov
jmp
jne
je
or
or
call
fidivrl
aaa
xor
pop
cli
shl
test
cmp
and
cld
xchg
mull
adc
lret
mov
mov
insb
out
lcall
scas
jns
pop
dec
stos
jo
imul
into
dec
cltd
xchg
cli
aaa
mov
je
int
jae
fmull
xlat
xor
iret
inc
jo
xor
mov
movsl
add
push
xchg
mov
cmp
jle
jl
and
jns
and
jb
push
aas
cmp
xchg
lods
enter
out
repnz
and
mov
or
jmp
pop
pop
mov
adc
mov
push
loopne
lcall
cmpsb
jp
and
dec
pop
adc
int
push
inc
fistpl
rcrl
cmp
pop
mov
cmc
dec
iret
lods
aad
or
dec
xor
xor
push
mov
xchg
jno
mov
scas
or
nop
dec
lcall
and
je
loope
gs
xchg
call
out
jb
mov
push
inc
fcoml
xchg
xor
cmc
mov
sbb
xor
push
pop
ds
das
pop
inc
xchg
jns
ffree
add
fnstcw
inc
dec
mov
cmpsl
jmp
and
cmp
nop
insl
test
in
xchg
mov
push
lcall
cmp
sbb
add
mov
sbb
mov
stos
aaa
jns
xor
sub
dec
lret
in
push
rolb
mov
dec
insl
xchg
orl
cmc
adc
dec
aam
repnz
out
hlt
out
push
sti
movsb
aam
adc
stos
movsb
dec
jb
push
jge
pop
sbb
mov
repz
adc
out
mov
cmpsb
xchg
inc
in
lcall
xor
sti
mov
push
sbb
and
bnd
mov
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
jle
mov
adc
add
push
test
les
mov
out
cmc
mov
cmp
cwtl
adc
mov
push
adc
xchg
xor
inc
and
xor
cwtl
dec
push
pop
stc
mov
insb
dec
xor
jno
sbb
mov
fdivrs
cltd
sbb
ficoml
mov
je
mov
push
cmp
xor
mov
out
out
jbe
or
outsb
fisttps
rcll
test
lret
out
cwtl
cmp
stos
add
jo
std
sbb
mov
loope
jle
xchg
mov
xchg
jg
mov
xchg
lods
cmpsl
pusha
insb
stos
fmull
mov
jl
in
dec
loop
sub
cmp
jns
and
sub
dec
cltd
push
lcall
xchg
jne
mov
mov
ja
call
or
push
shll
gs
out
push
shl
imul
push
mov
in
jne
cmp
cmc
dec
push
in
popl
cmp
cmpl
cmp
test
jle
jmp
repnz
stos
mov
shlb
notb
test
cmp
pushf
pop
push
stos
push
ljmp
xchg
stc
outsl
fildll
stos
xor
sbb
jg
fildl
cwtd
inc
lret
cmpsb
mov
or
push
fs
inc
loop
sub
or
inc
insb
pop
gs
cmpsl
jo
sbb
mov
aad
iret
add
mov
sahf
fisubs
out
cltd
ret
cmp
sbb
jae
ror
enter
scas
stc
movsl
jg
xor
les
shlb
and
sub
ret
sub
test
jp
out
lahf
jge
sub
fdivs
hlt
inc
push
add
mov
sbb
xchg
jo
outsl
insb
xchg
test
push
scas
mov
lods
mov
inc
push
and
push
add
pop
and
xor
or
pop
adc
sbb
jno
mov
push
dec
mov
ds
mov
adc
jecxz
xor
fstpl
inc
icebp
insb
push
enter
xchg
or
sbb
inc
mov
fs
and
lods
imul
mov
pushf
cmp
or
cltd
pop
cmpsl
xor
sub
cwtl
jne
or
sbb
mov
sti
fcmovne
punpckldq
bound
imul
imul
rol
stos
ffree
lods
sub
psrlw
fwait
lods
aam
inc
lret
out
pop
bound
in
sub
mov
lea
mov
lahf
lods
cmp
out
mov
mov
sub
sbb
mov
into
push
imul
lea
mov
sbb
les
in
mov
mov
pop
mov
out
and
insl
cltd
push
test
jae
xchg
push
lcall
shlb
in
xchg
rclb
imul
pop
into
push
addl
fcmovnb
outsl
fsubl
fnstenv
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
add
mov
adc
adc
cmp
xchg
xchg
xchg
and
xchg
rolb
std
adc
xor
getsec
xchg
imul
xchg
adc
mov
das
jns
mov
sar
dec
ja
jbe
out
xchg
xchg
jle
data16
in
inc
xchg
xchg
cmp
bound
or
or
inc
inc
lea
pop
cmpsb
add
pop
sti
std
fildll
xorb
xchg
sbb
fsubl
mov
cmp
out
mov
xor
pusha
cmp
mov
popa
in
adc
cmp
and
ljmp
cmp
add
fistps
lret
bound
lea
sub
and
addr16
hlt
and
and
jno
mov
mov
scas
jle
fbstp
mov
mov
jle
push
mov
adc
adc
int3
arpl
push
ss
fildl
insb
scas
data16
xacquire
scas
push
sbb
lods
mov
aas
inc
pop
les
xchg
fnstcw
test
inc
and
mov
rclb
icebp
fldcw
test
inc
loop
adc
fnstsw
or
fldl2t
aam
popf
pop
jns
push
pusha
mov
int3
adc
shll
jl
sub
cmpb
ja
aad
jle
enter
add
dec
int3
scas
mov
scas
push
jle
jo
mov
pop
insl
and
jns
loope
xchg
or
loopne
rolb
add
xchg
xchg
sbb
movsb
and
rcr
sbb
repnz
nop
in
sbb
xchg
dec
xor
insl
inc
popf
jmp
mov
mov
rcrb
cs
cs
mov
adc
adc
jns
sub
scas
mov
rcl
ficompl
push
cld
xlat
pop
mov
bound
ret
aad
push
test
ret
das
sub
mov
and
inc
cmp
or
lods
iret
loopne
dec
inc
sub
and
loop
mov
cmp
mov
pop
mov
cmp
jnp
cmpl
push
lret
lods
xchg
xchg
out
add
insl
in
cltd
cmp
sbb
or
xor
arpl
mov
or
je
jmp
jecxz
jg
and
std
sbb
out
lret
pop
mov
or
push
mov
jmp
and
int3
or
xchg
sbb
push
enter
sub
push
and
rcll
je
adc
jb
sub
test
std
pop
push
adc
stos
mov
loopne
lds
orl
fsubrl
inc
pop
js
inc
dec
lahf
test
lods
pop
cmp
ja
rolb
jns
and
mov
adc
mov
mov
pop
rol
mov
mov
aaa
mov
or
xchg
enter
mov
dec
push
jno
cmp
sub
js
adc
jne
nop
xchg
jle
out
das
pop
arpl
push
popa
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
scas
mov
stos
hlt
scas
adc
adc
adc
scas
sbb
cwtl
jns
fidivl
adc
push
adc
aad
out
mov
out
sub
and
add
mov
sbb
sbb
and
adc
scas
movsb
out
repnz
cmp
cltd
jne
add
inc
je
mov
xor
xor
mov
push
pop
adc
repz
repnz
in
inc
pop
sahf
rcl
mov
jns
stc
add
out
cmpsb
jne
fdivrl
xor
roll
dec
cmpsl
sbb
subb
pop
adc
jb
popa
push
cld
and
xchg
cmp
sti
cmp
jns
insb
push
enter
xchg
or
sarb
es
clc
mov
dec
xchg
xchg
out
pop
cmp
mov
mov
lret
push
jecxz
mov
mov
push
mov
xchg
pop
icebp
adc
sbb
imul
pop
fidivrs
inc
mov
jnp
in
std
sub
push
lock
and
pop
pop
and
mov
lods
pop
aaa
or
dec
jae
repnz
lret
ret
clc
pop
mov
and
dec
jno
jbe
push
in
cli
lcall
jle
adc
pop
sbb
cmp
les
adc
xlat
cltd
fidivs
push
mov
pop
scas
repz
divb
cltd
mov
icebp
sti
adc
dec
dec
imul
das
or
mov
push
mov
das
cltd
nop
inc
push
mov
aam
aas
inc
sub
mov
push
jno
in
lds
adc
push
test
fimull
cld
ret
pop
add
out
ret
das
aas
and
into
or
scas
daa
mov
add
jge
or
mov
mov
cli
push
mov
inc
les
inc
shl
dec
jecxz
push
adc
mov
pop
mov
adc
cmp
ret
mov
xchg
repnz
and
or
mov
insl
mov
jae
push
pop
roll
jb
pop
mov
or
push
push
mov
cmp
cmc
les
mull
pusha
movsb
mov
ja
lcall
cmp
cwtl
xor
jmp
mov
iret
pop
inc
cltd
mov
mov
mov
dec
pusha
enter
dec
fmuls
or
pusha
fldt
repz
jle
call
dec
mull
pop
mov
mov
push
fimull
jp
mov
adc
sbb
xchg
test
pop
pop
scas
or
arpl
movups
jp
xchg
sbbl
sbbl
mov
lods
jle
ss
pop
outsb
test
rclb
sti
push
add
repnz
repz
pushf
movsb
andb
lret
pop
pushf
fwait
scas
stc
mov
ret
or
les
movsb
xlat
inc
lcall
mov
jl
sub
jno
mov
or
sub
fistpll
or
add
mov
xchg
sub
clc
cmp
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
xor
adc
adc
adc
cmp
jp
leave
loopne
inc
lods
jecxz
and
sbb
fstpl
jge
cs
xor
adc
push
test
loop
popf
sbb
add
xor
inc
sub
jns
repz
xchg
out
dec
div
or
push
adc
scas
inc
xlat
leave
in
push
sbb
shrl
popa
pop
imul
dec
cmp
call
fwait
loope
and
mov
lods
fldt
dec
xor
loopne
xchg
mov
insb
lcall
int
loopne
jbe
fs
jo
enter
xor
imul
mov
jge
and
int3
cmp
scas
sbb
sbb
pusha
je
cld
and
rolb
lock
xlat
mov
clc
xor
int
rcl
cmp
and
jecxz
lea
pusha
mov
fwait
ret
xor
xorl
imull
ret
subl
repnz
repz
xchg
fidivrl
cmp
aad
lret
fsubl
lock
jns
repz
lods
dec
ja
aas
inc
and
or
pop
repz
or
add
into
ljmp
rcpps
notb
mov
imul
insl
rcll
or
mov
cmp
fwait
dec
fildll
shr
add
add
jno
or
mov
stos
push
dec
int
dec
arpl
add
xor
add
andb
sarl
bound
adc
pop
stos
loope
cmp
fs
jno
jl
outsl
or
add
out
sub
and
mov
jmp
pop
enter
sub
pop
inc
cltd
fnstsw
repz
cmp
mov
mov
fbld
dec
dec
dec
dec
xor
pop
mov
jo
scas
inc
int
dec
sub
repnz
xor
jbe
jne
or
pop
das
test
push
loope
xchg
push
dec
sbb
stos
scas
mov
rorb
mov
pop
nop
outsb
xor
lods
dec
pop
incl
lods
in
push
push
sti
adc
cmpb
xlat
dec
jns
mov
clc
add
sub
rcll
and
add
fwait
inc
lret
mov
int
pop
pop
ja
pop
mov
std
ja
aam
cli
adc
insl
icebp
dec
lds
neg
vsubps
sbb
sahf
jl
sub
leave
lds
mov
adc
adc
or
andl
jb
rolb
push
std
fs
cmc
pushf
mov
mov
jp
js
add
jl
pop
sub
std
cmpsb
pop
popa
push
add
dec
fimuls
xchg
int
imul
sbb
cmp
or
dec
sbb
int
jae
adc
cmp
and
xor
and
mov
sub
cmp
push
or
jecxz
test
adc
daa
jg
in
mov
lret
fisubrs
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
daa
jge
mov
adc
adc
jp
xorl
jno
dec
lret
push
fucomp
pop
jge
mov
xchg
inc
cmc
mov
mov
fwait
sub
dec
adc
push
or
popa
test
repnz
sub
or
jmp
scas
mov
mov
cld
addb
js
or
sbb
fimuls
mov
mov
mov
test
or
hlt
jns
inc
dec
andb
dec
js
xchg
stos
dec
loopne
sbb
hlt
les
sar
mov
xor
xor
popf
sub
cmc
movsb
sub
sbbb
int3
cmp
push
mov
frstor
mov
out
clc
jns
xor
pop
xchg
loop
movsl
mov
and
sub
ljmp
or
dec
fcoml
roll
je
scas
push
loop
lock
pop
insl
test
and
adc
and
mov
jb
push
inc
cmpl
dec
mov
cltd
clc
and
aam
push
jae
xor
shrb
je
sbb
insb
out
in
stos
sbb
and
pop
mov
sbb
adc
jnp
call
mov
fisubrs
push
inc
or
out
mov
int3
ds
int3
in
cs
mov
scas
iret
into
add
fmul
fsubr
mov
into
xchg
mov
aaa
or
ja
ja
icebp
mov
xchg
jbe
jne
push
popa
sarl
pop
int3
int
mov
mov
adc
push
sbb
sub
daa
aaa
ljmp
adc
mov
jo
pop
in
ret
adc
sbb
adc
out
jmp
cli
bound
insl
rcrl
sbb
imul
notb
subl
sbb
sbb
xlat
lods
add
movsb
mov
test
fsubs
imul
jge
adc
xchg
add
insl
test
sub
dec
push
iret
xchg
ja
xchg
lock
jl
jge
mov
push
cmp
out
lret
cwtl
test
jno
and
jle
jo
lcall
push
adc
adc
jecxz
dec
add
imul
mov
fisubrs
ficoms
fs
es
ljmp
jb
outsb
and
mov
dec
cmp
cmp
inc
bound
mov
aas
mov
call
xor
mov
add
loopne
loop
mov
cld
addr16
lds
mov
cli
xor
mulps
sarb
call
bound
push
arpl
roll
les
mov
rcrl
cmp
lods
xchg
out
and
and
inc
sub
inc
std
shll
movups
fwait
aad
jecxz
inc
pushf
inc
and
xor
lret
add
movsb
jae
nop
fsubrl
inc
fbstp
int3
shlb
aam
popf
mov
push
pop
shlb
xor
scas
invd
das
push
es
aas
or
pop
shrl
cmc
pusha
fcmovnu
sub
sub
mov
xchg
sbb
stos
pop
std
mov
bound
mov
or
add
mov
jmp
xor
and
sub
pop
mov
adc
adc
aaa
ljmp
cmp
rolb
out
pop
or
repnz
sti
test
ljmp
and
sahf
in
inc
add
or
mov
insb
mov
xor
push
or
xlat
xor
pop
cmpsb
dec
stc
push
es
int3
out
pop
xchg
mov
push
mov
push
xor
mul
xor
jge
daa
pop
xchg
push
inc
or
int3
pop
nop
adc
xchg
std
inc
cmp
mov
sbb
repnz
xchg
icebp
push
std
xchg
insb
mov
jo
mov
mov
xor
and
jg
out
sbb
in
iret
sbbl
cmc
mov
inc
stos
in
add
arpl
shl
popf
mov
inc
push
adc
and
push
cmp
daa
mov
lret
mov
into
cmp
cli
stos
daa
cmp
dec
xor
andb
and
pop
ja
and
sbb
and
mov
into
iret
fdivrp
pop
mov
cmc
call
sub
push
clc
xchg
pushf
xchg
sbb
dec
mov
xchg
inc
sub
fs
mov
fldl
les
in
add
insl
and
pushl
mov
aas
inc
sbb
fs
inc
lahf
jg
xor
fisttps
aad
je
sbb
add
and
mov
test
cmp
sbb
lock
in
and
es
stc
sub
push
loopne
das
repnz
nop
pop
fistps
push
mov
sub
sub
fstps
fistps
sub
push
push
mov
cld
sub
repnz
xor
je
mov
xor
jp
pusha
jecxz
jbe
sahf
int
rcrb
xor
mov
cltd
leave
pop
fprem1
dec
bound
test
xchg
out
out
adc
lret
imul
pop
dec
cmpsb
push
dec
dec
outsl
lds
jle
cmp
repnz
sbb
js
jbe
fcomp
pop
jp
enter
sub
pop
pop
cmp
dec
push
fadd
or
repz
inc
iret
cmp
dec
mov
pusha
push
cmc
inc
mov
je
xlat
and
or
sbb
or
push
mov
sub
cmp
add
stos
inc
cmp
or
sbb
xor
sbb
incb
sarb
sbb
jae
sbb
mov
sarb
insb
lahf
ss
sbb
push
inc
outsl
sbb
ss
popa
sti
push
out
sbb
gs
in
dec
xchg
loopne
cmpsb
test
mov
add
add
es
in
push
adc
add
push
sbb
xlat
add
xor
add
or
jne
lret
insl
and
and
jae
fistpl
cmc
subl
in
mov
int3
and
dec
out
imul
ds
ja
jle
imul
jnp
inc
jbe
mov
cltd
or
xor
les
arpl
xlat
sbb
jae
je
pop
xor
sub
push
imul
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
add
nop
adc
adc
adc
pop
incb
ja
sbb
mov
ljmp
sbb
pushf
sti
push
daa
sbb
hlt
cmp
dec
cmp
enter
gs
out
or
mov
testl
mov
sbb
pop
add
dec
test
xchg
xchg
cmpsl
xorb
repz
dec
ficomps
cmpsb
lea
mov
xchg
loop
popa
lret
inc
mov
shrl
ss
or
pop
repz
push
mov
pop
mov
popf
cmp
sub
pop
stos
jl
push
add
adc
popa
jno
xchg
jnp
jmp
inc
dec
cmp
ja
pop
shrb
dec
xchg
jno
mov
xchg
insl
dec
cmp
inc
out
lcall
pop
sbb
sub
sbb
ret
daa
jp
jmp
mov
aaa
icebp
mov
sub
cmp
mov
lret
cmp
jns
rcrb
mov
dec
add
cmp
sbb
insl
push
dec
xor
xorb
lock
testb
movsb
in
push
fs
leave
or
mov
adc
in
pop
imul
dec
jle
dec
pop
cmp
int3
pop
rcr
testl
fistpl
js
out
xor
push
pushf
aaa
or
lods
lods
push
mov
lret
test
and
sub
sbb
mov
scas
cld
ret
sbb
pop
jp
and
mov
mov
cmp
das
lds
fidivl
data16
pop
test
out
roll
shrb
xor
loop
dec
add
fdivrl
movsb
rcrb
pushf
push
xchg
sub
push
inc
sbb
pop
or
xchg
sbb
adc
std
and
dec
and
inc
add
and
jnp
call
hlt
inc
cmpsl
jne
gs
inc
roll
jmp
cmpsb
out
mov
mov
push
pop
sub
add
orb
shrl
adc
pop
xchg
cmpsb
fstpl
xchg
outsb
jl
jbe
sbb
push
imul
mov
mov
push
iret
enter
das
jg
and
add
mov
add
jg
rcrl
leave
imul
sti
jno
jg
mov
lods
aad
out
ret
int
stc
jg
jp
mov
add
push
inc
pop
inc
in
jb
js
fwait
add
adc
hlt
xor
pushf
xchg
sub
xor
mov
leave
sbb
sub
inc
xchg
stos
cmpsb
mov
sub
dec
xlat
push
movsl
cmp
jno
mov
fwait
ret
in
sbb
fmull
clc
adc
add
arpl
cli
jae
fwait
lret
in
mov
mov
cmpb
outsb
mov
jmp
iret
sahf
cmp
fldl
adc
mov
notb
outsl
mov
inc
enter
push
cs
and
or
out
mov
and
push
repz
decb
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
scas
insb
es
mov
adc
adc
xorb
dec
int3
pushf
adc
daa
or
adc
test
adc
or
lret
lods
pusha
xor
xor
cs
add
jbe
and
push
pop
iret
lret
fwait
add
mov
mov
or
incl
stos
movsl
adc
dec
icebp
in
add
jb
sqrtps
stos
scas
data16
xchg
daa
inc
cmp
inc
mov
lahf
test
test
test
mov
lcall
and
cli
mov
xchg
ficoms
push
sub
jp
mov
dec
lds
push
xchg
sbb
mov
jl
mov
jae
inc
inc
dec
adc
aas
cli
jle
jle
mov
xor
test
and
mov
add
test
adc
inc
sbb
stos
leave
adc
and
clc
sub
xchg
das
sbb
adc
sahf
xchg
pop
jmp
movsb
mov
jg
cmpsb
xchg
fwait
jbe
mov
clc
pop
xchg
jno
fsubrs
jne
sub
les
ss
push
add
push
pop
popa
mov
jb
inc
scas
push
arpl
adc
fwait
cmp
fsubs
jne
xchg
outsl
jns
pop
adc
imul
lods
jp
pop
fcompl
lods
ret
in
or
inc
xor
divb
call
popa
sbb
adc
jno
jg
nop
test
icebp
dec
incb
mov
sahf
sub
inc
out
cli
push
fcmovnb
test
call
iret
push
test
repnz
pop
aad
inc
jb
movsl
pop
pop
mov
imul
cmp
pushf
inc
lods
jne
sbb
dec
out
adc
cltd
adc
xchg
fidivrs
add
repnz
fwait
stc
movsb
jecxz
inc
cmp
add
jle
outsb
adc
sub
and
adc
nop
aas
jmp
pop
cs
sub
dec
sbb
loope
divl
and
mov
adc
and
jno
inc
lcall
pop
sbb
inc
stos
mov
xor
mov
mov
or
jo
enter
mov
test
ljmp
mov
mov
inc
mov
arpl
add
sbb
test
dec
xor
int3
mov
nop
andl
mov
or
pop
sarb
jnp
and
ret
pop
push
jns
mov
in
xchg
cmc
test
cmpsb
repnz
pop
cwtl
add
pop
cmp
in
mov
pop
dec
add
push
adc
xor
call
xchg
mov
push
xor
sqrtps
mov
cs
loopne
pop
das
inc
mov
add
xchg
movsl
pusha
mov
pop
mov
xlat
cmpsl
jnp
addr16
sub
push
mov
mov
cwtl
loopne
pop
pusha
popa
push
cmp
dec
out
jno
rclb
mov
repz
jo
jb
outsb
hlt
xor
call
pop
push
push
mov
hlt
push
cld
int3
mov
iret
or
test
xchg
or
jo
inc
jb
or
ja
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
xor
xchg
adc
dec
push
cmpsb
imul
pop
shrb
xor
sub
xor
push
test
cmpl
mov
dec
push
inc
xchg
mov
testb
lcall
stc
xchg
xchg
call
or
dec
addb
inc
jmp
and
and
shlb
fs
jle
cltd
ja
lret
out
imulb
or
push
xchg
jmp
fisubrs
adc
cmpsl
cmp
and
adc
arpl
nop
cli
sub
fs
mov
pop
test
in
cltd
add
add
xor
inc
xchg
sahf
jns
dec
xor
mov
in
or
lods
xchg
popf
sub
and
out
aad
xchg
inc
mov
and
stos
sbb
sub
roll
movsl
enter
push
pop
mov
repnz
mov
jmp
jns
jge
dec
mov
cld
pop
fs
mov
call
inc
cmp
stc
in
mov
mov
lea
add
hlt
adc
pop
mov
shll
pop
test
xor
xor
mov
mov
fld
mov
xor
and
outsl
sub
push
lcall
jmp
and
mov
sti
imul
add
icebp
imul
or
cwtl
fsts
fnstcw
add
pop
fnstsw
inc
sub
enter
popa
or
enter
pop
fisubrl
mov
sbb
or
dec
mov
out
or
loop
jmp
cmp
push
daa
push
stos
lods
lret
lret
mov
fadd
jae
mov
bound
pop
mov
mov
or
mov
ja
dec
mov
out
jl
mov
lret
scas
test
ja
inc
pop
jp
repnz
sbb
aas
cmc
add
jp
or
push
sbb
and
out
in
mov
les
mov
data16
sbb
popa
jb
mov
mov
mov
add
in
fimuls
ffreep
dec
aam
inc
dec
arpl
inc
fucomip
mov
lods
loopne
dec
std
cwtl
aaa
and
pop
xchg
pop
cmpsb
jp
mov
push
push
adc
or
sbb
or
cmpsl
mov
and
cmp
and
jae
frstor
add
sarb
pshufw
data16
ret
jl
repnz
arpl
mov
add
pop
mov
repz
mov
mov
int
pop
mov
mov
outsl
popf
inc
jp
pop
cmp
lods
sahf
xor
push
dec
mov
mov
mov
pop
sub
dec
scas
sub
fsubl
cwtl
mov
cli
out
lret
jp
outsl
dec
pop
cwtl
inc
lds
cli
bound
xor
sub
fsubrl
mov
mov
sub
mov
mov
lret
jle
lcall
mov
jp
movsl
lea
xchg
orb
push
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
lods
sbb
adc
adc
loop
xor
push
mov
sub
mov
insl
dec
pop
jmp
ret
scas
in
dec
aaa
ret
insb
rorl
dec
dec
sbb
mov
idivl
insl
icebp
sbb
or
popa
mov
or
and
push
sub
mov
std
stc
into
rcl
or
lahf
xor
pop
out
imul
repnz
mov
pop
push
movsb
sbb
popa
xchg
mov
pop
loop
xorb
loop
adc
mov
add
and
rcrl
loope
pop
test
divb
mov
enter
cmp
imul
neg
mov
int3
dec
jo
subb
fisubs
in
jns
fs
cltd
mov
xor
clc
jl
sub
cltd
mov
pop
fnsave
xchg
ffreep
jbe
or
in
sarb
sarl
shr
pop
dec
je
sbb
sub
sbb
fbstp
mov
es
sti
cmc
xlat
scas
ret
int
std
cmp
test
and
push
lea
jle
dec
scas
xchg
roll
adc
mov
or
aam
pop
pop
pop
adc
fmull
inc
rorl
cmp
rcrb
or
fldl
adcb
cli
add
shll
imul
jno
lret
subb
test
pop
lcall
fists
sahf
aam
inc
xor
jl
cld
call
push
mov
or
mov
push
adc
fimuls
sub
sub
fisttpl
insb
popf
in
repz
adc
adc
lea
test
pushf
push
pop
jbe
cld
mov
loope
sub
shrl
xor
mov
shl
in
sub
pusha
shlb
pusha
sarb
test
call
outsb
dec
add
lds
jne
inc
pushl
xorb
nop
punpckldq
scas
cmp
push
js
xchg
insb
push
outsb
jmp
and
imul
pop
aaa
dec
pusha
pop
mov
xor
add
mov
ja
das
out
mov
sub
inc
mov
pop
add
lods
xchg
loope
inc
mov
mull
jnp
or
stc
lret
clc
pop
lods
or
icebp
mov
add
sbb
loope
jge
jbe
cltd
xchg
lret
sub
sub
xchg
or
mov
jl
sub
movsl
cld
fwait
or
cmc
pop
pop
pop
dec
movsl
nop
sbb
in
in
jp
dec
pop
dec
jae
adc
test
add
and
add
pop
jne
in
jns
add
jb
mov
mov
xor
fcoms
ret
icebp
add
pop
jo
cwtl
push
sbb
scas
jg
adc
pop
cmp
out
in
sub
xchg
push
cmp
outsl
pop
pushf
add
push
sbb
into
fimuls
rorl
inc
adc
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
imul
insb
fs
adc
adc
jns
shrl
cmpl
adc
pop
sbb
test
xlat
test
push
ret
xor
mov
inc
cld
mov
sbb
sub
mov
xlat
sbb
inc
test
jo
icebp
lods
idiv
scas
adc
add
xlat
iret
out
jne
adc
scas
cmp
aad
fldcw
divl
or
xlat
shl
leave
sub
fldt
mov
and
dec
push
bound
insl
loopne
mov
mov
pushf
sbb
cwtl
out
add
int
das
xchg
fs
gs
push
cmp
fidivs
jb
jmp
mov
add
movl
das
push
ds
in
jae
cs
mov
loopne
sbb
adc
dec
in
out
rcll
cmpsb
popa
inc
stos
xorb
in
lock
xchg
rorb
gs
dec
outsb
push
shr
sub
xor
mov
fistpl
outsl
test
rol
cli
imul
fiadds
push
cmp
shrb
ret
xor
inc
jbe
popa
jae
xchg
add
es
cmp
stc
popf
das
pop
ret
out
jbe
inc
mov
pop
movsl
imul
adc
sarl
fnsave
loop
xchg
pop
pop
push
hlt
adc
xchg
fldt
sbb
in
and
add
cmp
jge
mov
mov
push
jne
push
jle
cmp
mov
aaa
mov
shrl
mov
pop
int3
das
jle
push
icebp
jge
push
ss
fs
int
add
ret
repnz
subb
or
sbb
jo
ret
pop
mov
lea
and
loopne
les
mov
call
push
jnp,pt
push
stos
cmp
adc
dec
cmpl
inc
out
lcall
sub
call
mov
inc
into
repz
and
call
pusha
aas
jmp
sbb
push
xchg
and
mov
mov
push
adc
xor
xor
imul
popa
test
ss
push
add
fdivrp
inc
mov
dec
je
icebp
push
or
push
pushf
mov
sub
mov
pop
cmp
popf
sarb
stc
sbb
xchg
loope
aas
jae
sbb
mov
inc
popf
dec
stos
int3
scas
jnp
and
mov
in
in
xor
lock
rol
clc
or
pop
adc
stos
mov
mov
inc
loopne
test
mov
jecxz
mov
or
insl
and
pop
sahf
mov
rorl
jmp
dec
mov
movsb
add
fisttpll
mov
push
add
cli
inc
xor
out
stc
insb
hlt
xchg
mov
add
into
inc
in
lock
clc
andb
rcr
or
sbb
in
lahf
mov
and
cmpsl
cmp
test
ja
inc
stc
fs
sub
imul
lcall
pop
fnstsw
xlat
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
outsl
jg
stos
mov
adc
mov
lods
mov
and
inc
jnp
inc
and
xchg
out
gs
in
testl
cld
into
xor
call
adc
popf
popl
cmpsb
mov
jae
aaa
bound
loop
pop
decl
and
xchg
cli
adc
js
jns
sahf
sarl
sbb
jg
addr16
inc
or
fs
and
dec
lods
sbb
mov
es
shrl
mov
xchg
daa
lcall
and
dec
popf
scas
mov
sub
jno
jge
subl
mov
mov
adc
in
rorb
push
jmp
cmc
cwtl
jo
loop
dec
aas
fwait
shll
xor
fldl
push
insb
xchg
mov
mov
mov
jnp
hlt
rep
lods
fbstp
cmp
popa
hlt
mov
push
jmp
pushf
scas
jnp
ficompl
test
xlat
xor
in
xchg
pop
sbb
mov
icebp
jmp
mov
shrb
sti
icebp
and
sbb
fmuls
jge
inc
aad
add
mov
je
cld
mov
cmpsb
adc
xchg
inc
mov
aad
xchg
push
sti
pavgb
mov
loop
cmp
mov
jge
fwait
cmp
scas
xor
aaa
mov
or
dec
out
sbb
and
cs
leave
aam
int
dec
add
cmp
adc
in
mov
jmp
popf
lret
paddusw
sub
cmpsb
je
in
stos
lock
jne
fisubrs
jp
inc
jp
xor
inc
stos
jo
and
xchg
or
pop
sub
std
pop
or
adc
sahf
cld
dec
xchg
pop
and
scas
sbbb
sub
repz
xchg
test
ss
mov
incl
iret
call
rolb
sbb
mov
add
inc
in
outsl
dec
insb
test
pop
pop
inc
pop
in
cmpsb
js
dec
cmp
jb
lea
orl
movsb
fiadds
cmpl
icebp
mov
push
mov
outsl
push
or
mov
add
cmp
xchg
ds
xor
dec
push
sub
cs
mov
insl
test
arpl
push
inc
cmp
and
popa
imul
add
mov
push
ss
imul
je
cli
std
sbb
inc
mov
ljmp
lret
and
and
sbb
inc
sub
pop
neg
mov
rcrl
stos
jno
cmp
jmp
rclb
adc
cmp
fwait
popa
js
sub
mov
cs
call
mov
pop
pop
sub
loopne
out
fimull
mov
pusha
shrd
outsb
cs
in
xchg
mov
lods
mov
out
cmp
mov
imull
cwtl
cmpsb
imul
lea
fcoms
orb
ds
xchg
popa
cltd
into
cmpsb
lret
dec
add
shll
call
shrb
and
xor
mov
mov
push
sahf
mov
bound
push
sti
adc
push
cmpl
xor
loopne
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
jns
fnstsw
ja
dec
push
stos
je
je
jp
out
xor
ret
or
adc
xchg
inc
inc
sbbb
pushf
dec
popf
mov
xchg
dec
je
enter
imul
push
call
in
push
mov
jnp
call
xchg
jg,pt
add
xor
loop
push
in
mov
mov
jns
mov
arpl
cmp
lret
dec
pop
in
xchg
in
pop
mov
mov
mull
iret
ljmp
push
std
fwait
mov
xor
orb
out
mov
leave
dec
add
cld
and
jb
pop
aas
sarb
pop
adc
xor
fdivs
pop
aam
and
scas
pop
fnsave
cli
daa
fadds
fnclex
push
notl
jae
or
add
mov
push
dec
gs
gs
sbb
and
fldt
and
or
sub
ret
gs
and
cmp
js
push
mov
pop
jno
out
cmpsb
shl
push
mov
sbb
or
into
dec
aam
popa
mov
jecxz
mov
fcmovnbe
cld
daa
movsb
jg
push
and
test
insl
cli
imul
dec
in
inc
pop
push
xchg
loop
fildl
hlt
push
xchg
sbb
test
pop
xor
pop
rolb
pusha
cmovo
xchg
fisubrs
loopne
pop
jle
fisttps
pop
jno
imul
inc
xlat
xchg
or
pop
sub
fwait
inc
add
imull
push
push
cmp
jecxz
inc
push
fidivrs
aad
stc
cwtl
imull
and
mov
stc
mov
xor
xor
cmp
mov
mov
pusha
cmp
mov
inc
popa
or
dec
cwtl
insb
adc
popa
out
test
fcoms
incl
pop
std
or
sbb
lret
sub
push
or
mov
mov
lret
sbb
inc
loopne
lcall
rorb
fcmovu
push
out
inc
sbb
fisttps
add
cmp
cmp
inc
fisubrs
jbe
and
faddl
notl
jne
push
scas
lds
jle
sub
and
jl
push
loope
mov
jmp
xor
dec
xor
mov
and
adc
shl
das
adc
sbb
divb
push
repnz
loope
jge
popf
add
mov
movaps
cmpsl
aam
pop
jbe
fisubrs
cmp
or
mov
inc
xchg
outsb
mov
dec
cmp
ja
insl
and
dec
int
aad
mov
js
enter
jmp
dec
sahf
mov
aaa
call
notl
add
lret
or
jo
sahf
out
pushf
mov
jnp
mov
xchg
fistpl
je
leave
sub
jb
mov
fwait
jle
out
adc
lret
pop
pop
xorb
shrb
jbe
mov
cli
out
add
pop
popf
sbb
and
jno
pop
sub
popf
out
mov
xor
mov
dec
cmpsl
in
xchg
fbstp
je
inc
or
jecxz
pop
bound
loopne
cmpsl
mov
lret
mov
inc
lds
iret
lret
lods
cmp
stos
fcoms
pop
pushf
mov
dec
push
xlat
sets
orb
add
push
insl
pop
mov
insb
push
mov
dec
sub
cmpsb
cmp
jns
push
sti
jecxz
into
dec
loopne
mov
sbb
test
push
or
jne
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
push
and
bound
adc
cmc
ficoml
cmp
mov
dec
sub
pop
adc
sti
push
or
enter
test
adc
shrb
xor
and
cli
jns
sbb
dec
add
jno
arpl
fimull
add
loop
or
push
inc
lcall
xchg
fdivs
inc
aas
inc
jb
mov
test
xor
pop
in
jo
mov
mov
pop
xor
or
inc
mov
cmpl
mov
aad
imul
std
pop
adc
mov
xor
rclb
mov
lods
sbb
pop
loop
das
inc
daa
xchg
push
or
fmull
cwtl
cmp
xor
push
push
mov
xor
mov
clc
js
inc
add
cmp
das
pop
jb
imul
inc
push
push
and
lods
js
std
in
nop
rorb
jb
cmpb
pop
stos
xor
xchg
xchg
insl
cwtl
test
sahf
scas
imul
push
mov
movsb
fldenv
xor
scas
shl
push
sub
and
testl
inc
add
sbb
push
fwait
js
movsl
cmpsl
flds
fists
movsl
sbb
sub
fisubs
enter
mov
test
cs
in
loopne
fndisi(8087
xor
mov
test
shrl
test
mov
push
iret
xor
fnstcw
std
fwait
ret
adc
test
cli
and
mov
cmp
sbb
hlt
fcomip
jmp
push
bound
lock
cltd
dec
movsl
jns
jle
lds
mov
adc
inc
add
mov
push
add
xchg
in
dec
mov
xchg
inc
or
xor
push
hlt
sub
aam
test
dec
push
movsl
pop
xor
push
pop
cmp
dec
fldenv
mov
inc
mov
mov
sahf
enter
pop
and
xor
out
jp
addl
pop
lods
inc
mov
sub
out
stos
pushf
mov
pop
arpl
loope
je
je
hlt
cmp
call
cmpsl
mov
aaa
iret
das
mov
inc
sbb
adc
aas
and
xor
in
aad
shll
jae
rorb
addr16
cmp
jns
movsb
adc
jb
dec
lea
push
ja
cs
lods
test
xchg
mov
int
dec
imul
adc
cwtl
xor
mov
push
push
jmp
sbb
mov
jg
mov
pop
or
or
sarb
pop
insl
in
lret
outsl
lahf
lods
or
adc
cld
dec
or
push
je
xor
scas
jne
ljmp
or
mov
aad
and
sbb
sub
push
repz
loope
in
mov
jbe
lahf
pop
psubsw
mov
out
mov
into
cmpsl
xchg
repz
mov
ljmp
pop
dec
push
cmp
dec
shll
je
lcall
imul
cmpsl
pop
mov
gs
stc
pushf
ja
and
or
xlat
loope
pushf
inc
cmp
fdivrl
push
mov
imul
xchg
push
xchg
orb
xchg
pop
js
clc
add
adc
inc
mov
cmp
and
cmp
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
mov
mov
mov
adc
push
xor
add
in
lods
mov
outsl
jge
and
adc
sbb
or
and
xlat
out
jp
push
in
push
xchg
andl
mov
inc
inc
pop
jle
jae
xor
jl
int
sahf
pop
push
ss
xor
pop
jecxz
add
int
adc
mov
flds
jns
or
sbb
push
fs
and
pop
scas
mov
push
add
into
xchg
mov
jnp
mov
daa
adc
xchg
repz
int
mov
sbb
dec
and
mov
or
insl
inc
out
in
cmp
fidivrl
and
out
lahf
mov
mov
incb
jae
fsin
sbbb
gs
fs
fildll
sarb
sbb
pushl
fcmovne
mov
cmp
roll
imul
mov
ds
nop
loopne
pushf
ret
mov
test
es
ds
jne
jecxz
cmp
push
dec
repz
mov
mov
pop
clc
test
arpl
bound
jg
push
xchg
pop
dec
pop
pusha
jmp
and
cli
fldcw
or
mov
mov
in
ds
in
dec
pop
xor
cli
je
sbb
and
testl
js
iret
imul
iret
enter
cmp
push
int3
or
out
push
cmp
or
mov
fmuls
mov
dec
daa
dec
cmp
mov
push
cmp
or
cmp
repz
mov
pop
pop
cmp
xchg
dec
add
in
pop
ljmp
jo
jbe
repz
mov
adc
mov
addr16
jo
cmp
ret
push
push
loopne
call
in
push
je
in
adc
inc
adc
adc
cmp
add
dec
xor
enter
jge
sbb
mov
lock
shlb
lea
mov
pop
sbb
fdivs
addb
sti
movsb
push
mov
pop
stos
jg
push
pop
idivl
mov
xor
cmp
subl
inc
repnz
roll
pop
xchg
adc
hlt
fistl
add
jecxz
fcmovnu
shll
pushf
sbb
iret
fsubrl
xchg
and
xchg
ljmp
cmc
jb
outsb
stc
in
lret
movsb
test
fwait
lret
rorb
dec
cltd
out
mov
cld
xor
test
sti
inc
pop
icebp
or
pop
aam
shlb
test
or
or
jge
push
cld
adc
cli
xor
inc
repz
mov
adc
shrl
jns
push
fcom
push
fbld
jecxz
mov
test
jmp
mov
insb
arpl
mov
mov
sub
ja
mov
xor
data16
mov
xor
cmpsl
rcr
out
inc
xor
jne
shrl
leave
lcall
lea
xchg
xchg
in
push
inc
imul
dec
and
es
mov
out
mov
sub
dec
fdivs
pop
lcall
sub
or
shrl
inc
mov
mov
shlb
fld
mov
push
movsl
xor
and
or
mov
jb
ret
fstpt
inc
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
adc
js
push
adc
mov
adc
mov
ljmp
repnz
andb
jp
fdivrs
pop
std
cltd
gs
push
andb
ss
test
sbbl
aad
cmpsl
arpl
stos
psubb
iret
cmpsl
xchg
into
mov
scas
mov
xchg
mov
mov
mov
mov
repz
jp
xchg
jl
pop
js
pop
test
out
mov
or
jae
lock
ss
jge
and
xchg
and
ja
fs
and
pushf
add
xchg
loopne
xor
dec
pop
cs
add
loop
fsub
cltd
mov
cmpsb
loope
cs
clc
jno
and
or
lods
xchg
stos
fwait
mov
or
cmp
add
lds
xor
mov
pop
int3
in
push
dec
xchg
sbb
das
aas
nop
pop
sbb
loop
stos
xchg
lock
sub
outsb
jo
cmp
outsb
and
popa
lcall
xor
insl
mov
in
mov
test
jo
push
pop
mov
icebp
cmpsl
inc
je
push
add
fsubr
arpl
sub
mov
js
jns
test
sti
stos
adc
fistpll
jae
jl
mov
push
movsl
loope
or
out
jle
je
in
dec
sbb
clc
or
lret
push
aam
xchg
xchg
divb
imul
aas
aad
add
dec
aad
in
jl
ds
inc
jmp
pop
mov
loope
enter
xor
pop
jecxz
mov
cmp
sub
and
push
out
pop
mov
lcall
sbb
fdivrp
loopne
enter
movsl
or
stos
or
mov
jo
inc
or
lsl
inc
lods
mov
in
imul
push
rcll
adc
xchg
movsl
in
adc
vmaxss
push
fwait
jb
jae
cmp
push
pop
ljmp
push
cmp
pop
in
add
cmp
mov
js
jg
les
lea
xchg
jns
mov
sbb
dec
mov
sbb
ret
popf
push
xor
dec
jno
ror
pusha
std
int3
sahf
cmpsl
jnp
mov
pop
sub
push
aas
pop
ficompl
lods
lds
adcl
adc
xchg
fsubs
call
mov
cmp
adcl
and
sbb
lock
in
ds
in
mov
rorb
push
xchg
mov
aas
ret
and
push
imul
icebp
stos
sub
push
jbe
scas
ljmp
loopne
ss
jnp
outsl
dec
jl
xor
adc
repz
test
cmpsb
scas
pushf
fwait
movsl
lods
cmp
pop
rorb
pusha
xchg
jo
in
lods
jbe
in
mov
dec
and
xlat
pushf
pop
dec
test
mov
rolb
cltd
cmp
addr16
test
insb
dec
addl
notl
pop
or
mov
pop
xchg
lock
push
push
pop
lods
push
shll
push
lcall
mov
add
sub
sub
xchg
sbb
orb
cltd
decl
add
mov
push
xchg
add
sbb
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
lods
xchg
dec
adc
mov
adc
outsl
add
cmp
mov
std
lret
mov
or
fdivrl
cmpsl
out
xchg
dec
lret
add
lcall
test
push
rcrl
mov
cmpsl
js
adc
fidivrl
scas
xchg
shrb
add
fisubrl
add
arpl
xchg
pop
or
mov
lea
xor
lcall
inc
rcl
xchg
pop
stos
fldenv
test
roll
jno
test
das
xchg
push
fs
movsl
in
mov
add
push
daa
add
daa
jmp
inc
cmp
test
jns
push
scas
les
jle
mov
cmc
ljmp
bound
push
push
in
sbb
pop
dec
mov
roll
pop
xchg
push
cmp
mov
mov
out
dec
xor
lds
out
dec
pop
and
adc
ret
jo
xor
mov
and
rolb
icebp
jb
xchg
mov
inc
adc
dec
loopne
push
jne
and
xlat
and
popf
jp
mov
sub
pop
hlt
inc
inc
pop
movsl
hlt
pop
fcomp
xchg
aaa
jle
enter
mov
incb
push
pop
mov
push
or
mov
adc
xchg
movl
xor
jge
cmp
mov
jmp
ret
scas
xor
testb
fwait
cmp
ret
mov
rcrl
lock
mov
fimull
fwait
loopne
add
scas
dec
outsb
rep
into
aam
fs
push
sub
sub
shll
sahf
loop
sbb
adc
sbb
push
movsb
fidivs
and
push
push
enter
int
sar
aas
lcall
pop
mov
rol
sbb
or
adc
sbb
mov
mov
inc
mov
jne
jbe
mov
lods
mov
mul
and
xor
add
inc
mov
xor
sub
fidivs
xchg
mov
mov
out
test
xor
xchg
fstpl
insb
loop
or
push
rcr
bound
pop
pop
enter
cmp
add
ret
dec
lea
mov
cwtl
sub
mov
xor
jmp
insl
into
ja
ds
xchg
ret
sahf
xchg
out
push
mov
dec
mov
enter
pop
jae
das
ret
and
sub
push
dec
inc
stc
aaa
add
ss
jne
inc
pop
mov
lcall
or
and
mov
enter
fidivrl
push
cmc
std
pop
add
xor
insb
incb
movsl
jecxz
test
and
adc
inc
aad
rcll
xor
cmp
add
or
xor
push
je
fwait
aam
jo
mov
movsb
push
sub
shr
lret
lods
js
sub
enter
lret
and
inc
jno
xor
add
popf
andb
adc
lret
inc
push
and
shrb
movsb
jne
sub
daa
adc
pushf
lret
divb
arpl
cmp
push
sbb
call
pop
pusha
in
xchg
daa
scas
inc
inc
mov
iret
or
cmp
int
or
sbb
add
vphaddwd
pop
cmp
push
mov
js
cmp
insl
aas
pop
mov
scas
fdivrs
enter
sti
pushl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
stos
inc
bound
inc
adc
mov
adc
xchg
mov
mov
inc
jmp
mov
ss
into
mov
xchg
call
addr16
sbb
push
xchg
rolb
mov
jo
xchg
jo
fwait
cmpsb
xor
mov
int
inc
lret
xchg
ret
inc
rorl
mov
cmp
and
push
jecxz
adc
dec
add
jnp
out
adcb
adc
xchg
fwait
shlb
adc
pop
into
test
jg
mov
or
push
push
xchg
xor
outsb
jle
notb
mov
inc
inc
fdivs
arpl
lret
idivl
jo
int
orl
outsb
cmpsb
mov
and
and
pop
mov
push
aas
into
add
mov
gs
adc
int
test
pop
lds
xchg
sahf
cmp
mov
xchg
mov
jecxz
jne
in
dec
call
pop
jns
xchg
sar
add
jo
mov
jno
xor
popf
rcr
sahf
cmpsb
push
fnstenv
in
push
inc
adc
leave
fsubl
inc
aaa
xchg
cs
push
shlb
add
pop
in
mov
fsubrs
jge
or
mov
rclb
mov
pop
adc
je
outsb
dec
das
mov
mov
jecxz
mov
mov
gs
mov
xchg
xchg
bound
cmc
and
xlat
pop
mov
sub
jge
lea
jmp
jmp
test
mov
mov
xchg
loop
push
inc
add
fidivrl
xlat
push
mov
ficompl
xchg
popa
push
fdivs
call
in
xchg
pop
jnp
lds
das
push
iret
mov
xlat
addr16
xchg
ja
sub
stos
xchg
sbb
std
xor
subl
insl
mov
mov
dec
cmp
lods
daa
icebp
xchg
daa
cwtl
out
movsl
cmpsl
add
adc
dec
and
out
push
jmp
jb
mov
inc
mov
mov
jnp
fidivs
ret
movsl
sbb
dec
fimull
add
aaa
sbb
lods
mov
mov
in
cmp
jg
shrl
pop
mov
clc
add
cs
call
adcb
or
test
and
or
inc
loope
arpl
movsb
in
jne
cli
inc
pop
lahf
lods
out
mov
and
cmp
lcall
xchg
stos
dec
rcrb
jmp
xchg
imul
cltd
adc
orl
sti
inc
cltd
jbe
enter
jecxz
pop
or
push
jmp
shrb
xor
mov
inc
divb
popa
lds
push
sbb
leave
pop
inc
xchg
push
jns
into
aaa
lea
fbstp
mov
jp
push
idivl
rol
stos
cmpsb
sbb
fdivs
popa
xor
rcrb
lret
int
pop
addb
fsub
add
daa
and
dec
ds
enter
outsb
mov
xchg
rcll
and
sub
clc
shr
std
cmc
in
lds
arpl
fimull
sbb
pop
gs
out
dec
fsubr
addr16
mov
lods
repz
sbb
push
bnd
push
adc
out
mov
mov
xchg
mov
sbb
push
arpl
pop
sbb
fsubl
js
cmp
push
pop
in
xor
dec
test
stos
sub
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
or
or
push
pop
add
sarb
mov
in
push
fscale
push
or
cmc
mov
mov
dec
inc
imul
dec
out
and
popa
jbe
mov
mov
push
xchg
jo
mov
sbb
pop
dec
inc
sbb
jmp
pop
jne
repz
add
mov
sbb
repnz
add
stc
jae
clc
sub
inc
testl
mov
inc
popa
dec
notl
adc
cltd
mov
bswap
push
ljmp
jo
daa
dec
faddl
pop
xlat
fbld
test
pop
adc
js,pn
rolb
cmpl
into
pop
or
test
push
dec
in
add
popa
dec
pop
jl
enter
inc
cld
lock
aad
outsl
sbbb
int3
testb
xchg
and
mov
jne
out
lahf
fstpl
cwtl
insl
sbb
in
xchg
push
pop
cmpsb
or
mov
mov
icebp
xchg
sbbl
jb
lret
jl
or
mov
sub
jne
jne
pop
fcoms
ffree
movsl
jb
xchg
fwait
out
pop
pop
lea
ljmp
fsubrs
dec
xchg
mov
or
cmp
out
add
in
pop
incb
and
pop
test
stc
dec
add
pcmpgtd
cmp
aas
adc
xchg
test
xchg
in
shll
test
lock
jae
mov
adc
jae
sbb
rorl
in
repz
imul
movsl
and
stos
jbe
cltd
rcll
xor
pop
fdiv
inc
pushf
adc
sbb
xor
js
arpl
mov
adc
xchg
sti
scas
add
enter
lret
pop
fbstp
cmp
imul
adcl
cltd
jecxz
inc
jo
cmp
push
jecxz
push
push
mov
sbb
insb
nop
sbb
std
repz
sub
imul
lret
in
mov
ror
inc
stos
inc
or
xchg
lea
test
pushf
fcmovb
xor
pushf
sti
sbb
xor
les
mov
bound
js
mov
rorb
in
jecxz
addr16
aaa
in
add
fisubrs
xor
shrb
jne,pt
mov
inc
push
ja
lahf
mov
lret
iret
push
xchg
jb
jne
sub
mov
fs
or
push
or
scas
mov
dec
imul
enter
fxam
ds
push
je
cmp
sti
xor
test
sarl
xor
dec
pushf
xor
sub
insb
out
movsl
sbb
xor
test
fldenv
jb
flds
lret
dec
and
pop
or
mov
aas
cmp
push
pusha
lret
mov
popf
movsb
std
lods
scas
popf
sarb
adc
lahf
lea
sbb
adc
fisubrl
adc
sub
das
js
mov
pop
cmpsl
pop
cld
jns
add
jmp
push
xchg
not
xor
fidivs
leave
mov
fstpl
lods
and
pop
xchg
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
iret
int
jle
adc
mov
adc
ljmp
nop
pop
cs
lret
or
xchg
clc
adc
adc
jns
add
push
push
xchg
mov
psubusw
inc
insb
xor
scas
jp
pop
fldenv
lea
mov
jle
and
lods
mov
xchg
push
jnp
dec
xorb
adc
lret
aas
lahf
adc
push
decb
push
lret
add
loope
xchg
xor
inc
mov
push
mov
and
imul
or
cmp
and
push
data16
xlat
add
jmp
repnz
jl
inc
fcoml
jecxz
outsl
test
mov
js
fstpl
pop
or
mov
jno
lods
les
stc
test
xor
xorb
aad
push
fisttps
cmp
jo
xor
mov
rcll
dec
aad
pop
movsb
iret
or
gs
adc
in
mov
test
mov
xor
mov
inc
and
js
lcall
sbb
int3
pop
clc
push
inc
stos
fisubs
daa
or
pop
jb
arpl
shll
sbb
cmp
stos
mov
jl
pop
push
aas
dec
outsl
mov
sub
fsub
inc
lock
fisubs
cs
into
int
mov
and
dec
cmp
dec
add
jo
cmp
jge
out
ret
cli
scas
shlb
mov
dec
jmp
cli
xchg
cmpsl
pushl
sub
icebp
sbb
push
aas
jne
dec
or
pop
cmp
in
sub
sbb
loope
sahf
bound
sbb
rorl
adc
ret
loope
js
sbb
cmc
adc
adc
xchg
aam
jg
mov
jmp
out
and
shlb
pop
iret
xor
jns
cmc
lcall
inc
push
or
xor
jbe
pop
dec
push
lret
scas
push
fisubs
jae
loop
xor
lods
xor
sub
je
cwtl
insl
cmp
jmp
lcall
hlt
hlt
mov
in
sti
cltd
lds
mov
mov
sti
add
mov
mov
andb
int3
js
mov
mov
mov
leave
shl
std
lock
in
xor
clc
jne
push
movsb
or
cmp
push
aam
repz
dec
dec
aad
push
push
add
fmull
push
and
push
outsb
movzwl
sti
in
fistps
sbb
inc
xchg
daa
test
out
fnsave
mov
fsubs
pop
imul
push
dec
add
repz
lret
pop
dec
xchg
shll
sbb
xor
adc
int
subl
or
jo
xor
cmpsb
test
push
sub
pop
outsl
inc
adc
scas
push
jns
icebp
rclb
xlat
lods
popa
xchg
int3
je
jp
ds
mov
xor
out
sbb
jmp
test
sti
push
iret
jp
jecxz
mov
out
push
mov
lock
add
add
into
test
adc
andl
insl
pop
ljmp
filds
imul
jg
mov
addr16
and
jmp
adc
mov
aaa
cmp
cmp
jecxz
or
or
rol
fiaddl
dec
call
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
pusha
js
adc
mov
adc
cmp
mulb
push
ja
sbb
sub
cli
push
and
xchg
push
adc
sbb
ja
divb
dec
das
xor
mov
cli
mov
sbb
fsubrs
mov
push
xchg
mov
xchg
dec
mov
dec
loopne
xor
enter
xor
pop
cs
inc
ja
in
test
int3
outsl
mov
mov
dec
pop
xorl
shlb
add
jle
js
jecxz
xchg
mov
andl
mov
clc
test
mov
xchg
cmc
jo
ret
mov
inc
lds
pop
lahf
dec
sbb
jne
lock
je
xchg
inc
in
fcmovu
sbbl
cmp
jp
and
or
lahf
add
pop
or
insb
cld
inc
jp
fs
add
lea
xchg
push
pusha
adc
rcll
pop
mov
pop
adcl
mov
data16
dec
iret
cmp
pop
int
inc
outsb
sub
fnstcw
mov
ds
xchg
ljmp
mov
das
dec
sbb
ljmp
lods
lret
sbb
data16
call
add
or
bound
mov
repnz
push
sbb
pop
mov
test
push
and
mov
aad
mov
js
icebp
aad
pop
lret
sti
jmp
pop
sarl
mov
loopne
cli
rcr
imul
aad
dec
rcrl
sbb
notl
mov
lahf
jnp
mov
inc
dec
pop
pop
dec
jmp
insl
rcrl
jnp
cmpsb
daa
and
jge
into
negl
xor
sar
testb
imul
clc
imul
fsubl
leave
pop
add
iret
inc
push
inc
sbb
push
pop
cltd
repz
mov
mov
xchg
fsubrl
xor
jmp
mov
mov
push
mov
adc
in
insl
and
lcall
shlb
fucomp
outsl
xor
add
cmpsl
mov
push
or
movsb
aam
mov
int
jb
jg
in
jbe
or
lea
lcall
mov
inc
into
enter
xchg
ret
pusha
mov
adc
imul
and
pop
fistpll
iret
jb
rorl
or
adc
mov
push
mov
cmp
insb
cmp
or
mov
imul
jmp
add
hlt
aad
dec
sub
fiadds
shll
inc
xor
fwait
cmp
lahf
ja
dec
sub
jecxz
or
cmc
jl
aam
cmp
mov
mov
xor
cmp
mov
fisttpl
mov
loop
mov
xchg
push
mov
insb
addr16
mov
xor
xor
fiaddl
lea
sub
mov
cmp
addr16
sbb
jnp
or
lahf
jl
inc
int3
add
je
xor
mov
cmpsl
inc
adc
mov
outsl
imul
or
xchg
pop
shl
mov
push
shl
subb
mov
popa
jecxz
loop
adc
mov
mov
and
or
and
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
sbb
cmp
and
adc
push
jl
add
sub
notb
out
dec
adc
cmpsl
pop
push
ret
scas
fs
sbb
mov
inc
xor
cld
cmpsl
dec
aam
and
aam
in
ret
mov
out
mov
push
fiadds
add
call
xlat
push
stos
popf
push
loopne
and
mov
sarb
hlt
xlat
lods
in
outsb
push
gs
les
pop
inc
scas
test
nop
testl
push
lcall
loop
sub
cltd
es
pop
sbb
push
out
sub
xor
sbb
addr16
imul
das
test
je
push
rorb
scas
in
cld
dec
ret
cmp
cmp
sub
xchg
cmp
jns
cmp
mov
mov
xor
adc
push
popa
movl
imul
movsb
pusha
push
jg
int3
arpl
cmp
out
sbb
sub
insb
or
xchg
popf
pop
jge
cli
xchg
sub
cltd
lock
in
loope
sub
into
adc
xor
push
jle
cmpsl
and
inc
and
lret
and
or
in
bound
sbb
inc
jmp
imul
fmuls
mov
xor
mov
test
push
pop
inc
adc
stos
iret
xor
jp
enter
add
lahf
out
inc
aaa
jo
mov
mov
pop
cmp
popa
push
push
jb
sarl
in
pop
and
xor
xchg
imul
stos
stc
jns
sbb
test
adc
add
jne
push
sub
sub
es
ds
add
inc
push
fdivl
push
sbb
or
xchg
shll
jb
push
out
dec
dec
pop
mov
lock
inc
sbb
cmpsl
push
das
lret
mov
pushf
xlat
mov
fcmovnu
pusha
lcall
shrb
mov
test
fldcw
sti
or
je
pop
aad
icebp
dec
adc
les
scas
adc
cld
sbb
dec
aam
dec
adc
push
adc
jmpw
inc
mov
outsl
dec
shrb
sbb
int
lock
pop
jnp
or
xor
push
repz
aas
xor
loope
mov
dec
cltd
lcall
hlt
les
lods
or
push
xchg
movsl
inc
ss
test
inc
cs
shrl
rcr
repnz
repnz
mov
ljmp
lock
or
cwtl
inc
test
xor
add
or
and
mov
push
hlt
call
lret
hlt
xchg
js
sbb
mov
popa
xchg
xchg
mov
int
sub
xorl
push
pop
dec
clc
fimull
or
inc
in
std
loopne
aas
insb
enter
pusha
int
xchg
mov
push
sbb
test
xchg
sbb
or
mov
dec
xchg
push
mov
rcrb
xchg
outsl
fs
ficomps
push
pop
pop
add
cwtl
mov
mov
jecxz
xchg
push
popf
data16
jns
clc
adc
mov
pop
repnz
pop
fstp
mov
mov
cwtl
pop
xchg
or
int
out
xchg
int3
add
lret
rcl
add
push
mov
and
scas
out
test
and
lahf
lret
test
cmpsb
mov
cmpsb
cmp
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
adc
adc
mov
adc
xlat
inc
pop
loopne
in
pop
inc
in
xchg
push
loope
mov
jae
pop
mov
sbb
push
push
push
jl
jo
push
lret
jo
pop
jbe
imul
add
cli
into
repnz
sub
inc
lods
fdivl
into
cli
leave
loop
movsb
pusha
leave
add
jge
in
cld
mov
push
push
insl
shrl
jne
test
sub
and
test
clc
add
test
xor
hlt
cmp
or
ret
mov
int3
or
cli
sbb
dec
mov
xorb
pushaw
sbb
push
pusha
cmpsb
adc
mov
push
xor
mov
cmpsl
xchg
stos
jns
jmp
jns
fdiv
pop
xchg
jecxz
fwait
mov
mov
rcrl
sbb
jae
aam
push
out
cmp
jb
add
push
into
fwait
jp
enter
cltd
jge
mov
jo
mov
mov
inc
icebp
mov
fidivl
add
mov
repz
or
andl
mov
flds
adc
fcmovbe
cmpsb
out
adc
shlb
push
popf
nop
icebp
jmp
adcl
out
repz
cmc
ds
daa
lea
ljmp
add
cld
imul
imul
scas
xor
sub
jae
popa
movb
mov
sub
or
cmp
cld
dec
pop
mov
aaa
mov
and
mov
inc
insl
testl
pushf
dec
xchg
lods
xchg
mov
sbb
lea
negl
and
bound
dec
mov
push
add
add
lods
jb
mov
or
mov
sarb
push
push
sub
jp
outsb
arpl
aaa
or
in
incb
std
mov
ljmp
cltd
fucom
jns
pop
inc
add
jecxz
sbb
repnz
addr16
cmpl
dec
scas
cmp
fs
push
pop
mov
push
hlt
jmp
mov
adc
call
cmpl
lds
push
daa
dec
bound
jne
inc
xlat
xchg
inc
inc
js
loopne
pusha
iret
lds
in
add
movzbl
sti
pop
jns
push
fcmovb
add
push
xchg
sti
push
cmp
fistl
mov
cmp
mov
inc
push
push
jnp
movsl
mov
test
adc
insl
into
xchg
movsb
inc
xchg
jge
xor
fwait
bound
adc
cmp
fistpll
cmpsl
negb
mov
mov
aas
fs
mov
repnz
jmp
inc
xor
lock
jecxz
fwait
ret
inc
cmc
dec
xor
ret
and
sub
inc
and
xor
orb
pushl
pushf
jbe
outsb
push
outsb
je
xor
out
pop
sti
hlt
sbb
fcmovu
mov
mov
sbb
dec
rclb
add
lock
sahf
cmpsl
mov
and
inc
inc
and
rcll
aam
in
sub
inc
or
pop
rcrb
mov
in
fistps
mov
pop
mov
dec
dec
fstl
xor
aam
lods
mov
xchg
pop
stos
rcll
inc
stos
push
shlb
inc
mov
repnz
test
mov
popa
push
cmp
inc
add
dec
subl
add
xchg
fs
call
dec
xchg
pushf
roll
std
cmp
cmp
cmpsb
add
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
repz
outsl
popa
adc
dec
addl
push
adc
jmp
sub
fidivs
mov
sub
xlat
and
das
pop
lea
cltd
lods
das
adc
fsubrl
mov
es
pop
ljmp
js
daa
or
lods
std
arpl
es
leave
dec
popf
lret
out
cmp
add
mov
imul
hlt
cltd
push
sub
pop
push
pop
push
mov
add
mov
addr16
cmc
shrb
out
mov
or
out
fucomp
cld
je
divb
mov
jb
adc
out
push
adc
repz
mov
jl
aas
je
push
test
and
shll
loopne
xchg
push
jecxz
pop
mov
out
fdivrp
addr16
andl
insl
and
filds
xchg
lods
mov
xchg
out
xchg
jp
jbe
xlat
out
or
mov
call
aam
lcall
sub
rorb
scas
lods
inc
xor
movsb
sbb
pop
dec
jp
jp
fstps
dec
aas
clc
push
jbe
in
add
jbe
cmc
jmp
mov
lret
sub
pop
and
sub
sub
cltd
repnz
jg
movsl
jp
lock
push
xchg
xor
cmp
insl
add
in
ror
loop
xor
ss
mov
inc
dec
push
outsb
xchg
idivb
lret
data16
js
sub
retw
mov
pop
pop
pop
inc
cmp
ljmp
sub
push
imul
push
clc
push
sub
test
pop
repz
push
flds
inc
jo
in
sub
ja
push
dec
xchg
jb
xor
xor
lods
lcall
add
mov
inc
lea
push
pop
and
jbe
mov
and
sub
mov
xor
add
add
stc
cs
lret
inc
pop
pop
jb
adc
aaa
adc
mov
push
sbb
jb
fidivrl
clc
lds
imul
push
mov
adc
mov
cli
movsbl
lret
sbb
adc
ljmp
jge
push
lds
pop
enter
adc
push
sub
mov
addl
es
iret
push
movsb
push
lahf
push
mov
xchg
push
dec
lea
xchg
jo
cmp
push
ds
fmul
xchg
addr16
adc
out
fistpll
jo
nop
adc
mov
sbb
add
out
mov
call
xchg
bound
call
mov
shlb
es
push
mov
addl
adc
outsl
sub
sbb
repnz
adc
mov
addl
not
push
les
repz
int3
adc
icebp
and
xchg
jns
adcl
sub
mov
inc
int
mov
mov
pop
fadd
in
inc
adc
cmp
cwtl
cs
outsl
cwtl
fwait
push
movsb
leave
jae
mov
mov
jp
push
jo
mov
cmp
test
mov
hlt
mov
repnz
and
or
add
call
cwtl
icebp
lods
mov
cmp
pop
mov
int3
xchg
jb
fwait
ret
jmp
adc
mov
imul
ljmp
jg
mov
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
xor
adc
mov
adc
push
inc
daa
cwtl
out
jle
mov
ret
cmp
js
xchg
mov
test
jnp
mov
mov
out
ffreep
or
ret
in
sbb
test
pop
jno
imul
fnstsw
into
mov
dec
inc
js
xchg
pop
cmp
sbb
mov
mov
push
and
xchg
or
fs
xchg
xorb
xor
pop
jl
shll
adcb
call
inc
shr
stc
fcomps
insb
repz
lret
xchg
addr16
in
aas
jo
pop
xor
xchg
cli
clc
push
inc
fdivs
out
pop
xchg
cmpsl
dec
xor
or
and
push
scas
loope
pop
xor
pop
hlt
cs
pop
jbe
jle
or
xchg
int3
int
cltd
movsb
push
aam
mov
dec
jge
push
lea
loope
adc
fnstsw
jg
xor
arpl
inc
xor
pop
mov
repnz
mov
dec
insl
sub
push
mov
jmp
dec
lock
inc
sub
inc
cmp
xchg
pop
adc
into
jo
es
lea
pop
xchg
push
lgs
rolb
jnp
aas
xchg
dec
lret
fmuls
push
xorl
adc
cmp
lods
cmpb
rcrl
outsl
jecxz
idiv
lcall
pop
outsl
int
mov
inc
outsb
cltd
dec
push
xchg
out
cmp
pop
aam
shll
ja
insl
push
cmp
imul
inc
das
adc
repz
sub
into
and
mov
jb
lods
adc
push
iret
outsb
push
subb
mov
push
data16
mov
fs
pop
jg
std
adc
out
jno
lcall
xor
mov
mov
in
imul
cmovs
sub
cmp
xchg
add
adcb
mov
cmc
addr16
pushf
xor
inc
jbe
sbb
fldt
or
xchg
enter
cmp
mulb
int
cwtl
mov
inc
loopne
mov
xchg
test
imul
scas
jmp
sahf
ljmp
in
pop
test
sti
mov
cmp
std
enter
jle
jo
rcrb
adc
in
mov
enter
jge,pt
pop
mov
cmc
or
sub
fstpt
mov
dec
dec
mov
sub
xor
cmp
push
inc
sbb
out
shlb
cmp
outsl
outsl
lcall
lds
push
rcrl
ds
rcll
nop
jno
pusha
cli
out
adc
cmpsb
int
push
dec
sahf
pusha
jae
in
push
mov
pop
cmp
and
and
js
outsb
out
daa
push
test
imul
mov
mov
cmp
inc
sbb
jle
add
sub
loope
add
mov
rclb
mov
movsl
ljmp
js
jbe
lret
loopne
sbb
adc
push
fnstcw
sub
or
xchg
sub
stc
adc
imulb
cmp
test
pop
lock
mov
cmp
inc
add
pop
or
jmp
orl
jmp
je
dec
pushw
mov
jae
movsl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
sub
adc
mov
adc
mov
aaa
pop
mov
dec
mov
movsl
jg
in
movsb
daa
adc
adc
je
in
push
jb
sahf
repnz
scas
ss
or
mov
in
jnp
test
roll
stos
inc
fbld
dec
mov
push
push
cmc
mov
cmp
pop
push
add
pop
cmp
jae
dec
cmp
adc
inc
jbe
mov
cwtl
pop
xchg
pop
dec
push
stos
inc
pop
jle
dec
std
dec
stos
cmp
jb
jge
inc
push
inc
rcr
sbb
sbb
ret
imul
inc
aad
call
insb
jnp
inc
add
jmp
into
xchg
aaa
ret
jle
rcrb
sbb
jo
int
cmp
sahf
shrl
and
test
jg
and
add
or
mov
or
adc
adc
data16
add
dec
mov
push
or
sub
cltd
mov
mov
fistl
test
push
and
ret
outsl
test
xor
push
push
xor
shrl
shrb
leave
xchg
pusha
dec
lret
leave
test
rcll
cli
inc
push
jp
rclb
nop
jge
aam
test
cmp
pop
jmp
jo
int3
add
add
mov
pop
out
mov
and
cmpsl
and
nop
stc
aaa
int
jl
stc
adc
cmpsb
xchg
xchg
sbb
pop
sti
mov
adcl
jl
enter
pinsrw
pop
xchg
or
sbb
cmpsb
fwait
adc
cwtl
lea
mov
pop
and
insb
dec
sahf
pushf
sbb
arpl
or
push
popf
and
loopne
mov
loopne
mov
sbb
int3
out
xchg
lds
push
iret
mov
movsb
movsl
loope
dec
dec
out
bound
mov
data16
cmc
aas
outsl
mov
push
or
repnz
dec
sub
sbbb
fldenv
xor
je
adcb
imul
xor
push
rcrl
sti
repnz
or
mov
pop
adc
mov
inc
push
bound
or
and
pushf
popa
lods
xchg
sahf
pushf
dec
push
adc
jl
sti
aam
in
cmpsb
cli
push
in
clc
dec
aaa
iret
inc
jle
subb
int
xchg
jbe
hlt
xor
or
xchg
ds
mov
mov
les
insb
inc
and
cmp
leave
fnsave
mov
arpl
aaa
movsb
negl
out
imul
mov
daa
sub
daa
cmc
aas
pop
sub
lret
dec
adc
aas
sbb
fstpt
insb
lret
pop
pop
imul
sahf
xchg
jle
inc
dec
movsb
jne
jns
dec
test
mov
jge
addr16
popf
jmp
inc
jge
nopl
mov
repz
add
repnz
cmp
mov
pop
pop
xlat
or
add
cmp
push
jecxz
loop
adc
clc
or
sub
pop
cmpsl
jnp
bound
xchg
in
test
das
cltd
dec
adc
add
lcall
sahf
call
lock
mov
pusha
adc
cmp
mov
repz
xchg
stos
or
xor
pop
fdivp
inc
les
fstps
pcmpeqw
aam
pop
mov
les
mov
mov
xor
jmp
cmp
ja
pop
aaa
and
or
mov
mov
adc
neg
repz
pop
xchg
cwtl
adc
xor
sarl
push
lods
push
loop
pop
in
rorl
or
dec
lods
sbb
jns
lods
mov
pop
cmp
jns
or
pop
and
ja
leave
cmp
aaa
ds
int
cli
loopne
push
fisubrs
leave
lock
loopne
int3
aam
rclb
mov
mov
ljmp
or
ljmp
pop
mov
push
loopne
out
lcall
sub
pop
pusha
outsl
and
fwait
adc
xor
pop
nop
addr16
xor
push
adc
je
cmp
das
xchg
movsb
clc
scas
jne
sub
xchg
xchg
arpl
xchg
int3
inc
mov
js
std
lods
movsb
push
fcoml
jmp
push
xchg
and
xchg
cmp
decl
ffreep
jp
loope
and
jo
push
iret
arpl
pushf
mov
mov
std
push
pop
xor
inc
and
dec
popa
pop
or
mov
out
fcmovb
push
mov
dec
scas
mov
sub
xchg
and
jmp
mov
das
and
push
imul
pop
repnz
fwait
xchg
jne
insl
dec
or
pop
pop
in
inc
fcoms
ds
in
sbb
loopne
insb
mov
gs
iret
push
cld
xchg
mov
push
es
jns
xor
sbb
addr16
add
cmp
inc
mov
and
pop
std
adc
lds
pop
push
icebp
test
mov
and
in
cltd
lcall
cmc
cmp
gs
outsb
test
mov
in
and
xlat
sbb
add
out
xchg
mov
jno
lahf
out
call
or
jle
in
pop
add
push
in
jnp
pop
icebp
lret
xor
mov
ds
into
adc
mov
addr16
push
mov
jno
mov
dec
push
xor
jp
sahf
jecxz
sbb
xchg
sti
aam
jae
hlt
std
lcall
push
fwait
xchg
or
pop
cmp
ret
add
pop
pop
or
adc
inc
cli
test
mov
data16
fcoms
mov
jo
sti
dec
out
push
xchg
cltd
xchg
cmp
cmp
sub
sbb
push
xchg
fisubs
pop
lret
push
xor
fdivrl
popa
cmp
push
dec
insl
xor
xor
push
xchg
jbe
and
cmp
mov
cli
adc
xchg
push
jbe
cmp
mov
pop
fnsave
sar
mov
in
mov
jnp
sub
push
pop
stos
dec
mov
fs
out
in
pushf
inc
fdivs
loop
fsts
call
outsl
mov
mov
stc
or
imul
stos
pop
jno
sarb
pop
in
xor
js
xor
jecxz
insl
xchg
add
test
sub
mov
rorl
rcrl
jo
fwait
adc
xor
sub
enter
inc
test
rcrb
popf
and
dec
xor
push
fisttpl
out
pusha
mov
stc
sarl
cmovb
cmp
add
mov
jecxz
imul
pop
aam
std
fdiv
lods
mov
test
cs
leave
lahf
push
jle
ss
jb
add
cmpl
inc
ror
push
cmpsb
loope
enter
pushf
and
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
stos
inc
xor
mov
nop
sbb
sahf
pop
xchg
test
movsb
dec
push
mov
filds
adc
test
pop
sarl
in
xor
inc
jl
adc
pop
addl
cli
xor
hlt
out
pop
xor
xchg
push
cmp
cld
lods
xchg
and
push
lock
xor
adc
pusha
rcrb
push
movsb
rol
ret
je
jnp
sbb
stos
xorb
ds
gs
fwait
insb
sub
cmp
sahf
lea
cs
mov
and
push
aad
aad
add
in
pop
dec
dec
out
in
cmp
mov
sbb
cmpsb
or
add
lcall
dec
mov
lock
pop
pop
or
lods
cmp
lods
pop
xchg
push
dec
sub
xchg
jmp
nop
cmp
jmp
imulb
popa
scas
fisttps
jns
pop
cmp
nop
cld
rcl
gs
or
add
js
mov
in
out
addr16
je
out
mov
sti
add
int
fmull
test
mov
add
mov
push
pop
stos
fsubl
pop
lds
cmpsb
ss
shll
ret
das
test
cmp
cwtl
insl
pop
lahf
shrl
imul
fisttpll
xlat
fs
jl
bound
cmpsl
popf
jl
fwait
jg
mov
das
push
ja
subb
or
inc
scas
or
jno
int3
push
jge
lods
xor
add
cmpl
ss
cmp
cwtl
jg
xchg
ret
jb
aas
cmc
add
mov
ror
pop
enter
jb
cli
jecxz
push
adc
fcmovne
popa
xchg
dec
cld
test
push
jnp
dec
popa
and
pop
mov
sbb
fcoml
fld
jb
std
push
xor
aas
jns
dec
and
mov
inc
clc
test
push
cmp
daa
test
out
and
outsl
adc
mov
scas
xorb
mov
mov
xchg
out
sbbb
adc
and
ret
js
loop
lods
inc
inc
xchg
adc
loope
xor
xchg
cmp
lahf
loope
fidivrs
pop
in
lock
jmp
lret
xchg
xchg
add
into
lea
movsb
iret
cmp
out
fcmovu
je
jne
xchg
in
mov
xchg
aaa
pusha
xor
and
mov
sarb
jne
adc
inc
mov
nop
bound
call
jge
insb
jp
jmp
xorl
push
xchg
pushf
mov
jbe
mov
jae
pop
in
ret
xor
sbb
lods
mov
mov
arpl
jo
jp
dec
sahf
mov
dec
pushf
sbb
mov
dec
ret
imul
jge
mov
sti
rolb
pop
fmulp
mov
movsl
jo
lret
adc
lahf
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
xchg
xchg
mov
adc
adc
bnd
pusha
jecxz
insl
jge
loop,pn
push
inc
add
in
jmp
sahf
inc
cltd
cmpsl
jo
mov
xor
outsb
mov
and
popa
cmp
xchg
xorl
jmp
xchg
out
fmull
adc
or
xchg
mov
stos
push
lock
out
mov
push
cmp
cmpsb
cmpb
push
add
jns
shlb
mov
cmp
jl
mov
fwait
int3
inc
cmc
inc
mov
test
sar
push
pushf
adc
dec
call
inc
cmp
scas
cltd
sbb
push
push
mov
sub
pop
xchg
and
jno
orb
mov
stc
enter
call
or
test
hlt
sub
pop
insl
repnz
lods
push
adc
pop
sub
mov
clc
adc
cmc
mov
mov
dec
popa
mov
mov
lds
cs
inc
adc
scas
stos
rcr
sbb
dec
scas
cmp
mov
push
das
repz
and
test
arpl
mov
mov
jg
jno
xchg
jo
lcall
cmova
pop
test
mov
push
dec
jo
push
sbb
inc
shl
out
xchg
and
or
adc
jns
sub
sub
ficoms
sar
test
jge
xchg
or
or
outsb
jmp
rcrb
jl
cmp
mov
outsl
loop
jno
xor
movsl
jmp
cmp
inc
xor
mov
pusha
ja
or
mov
push
cmp
jge
jmp
lods
mov
mov
repnz
cmp
rol
xor
rcrl
fwait
jb
clc
in
inc
or
mov
xchg
cmpsl
mov
les
cmc
dec
js
insl
mov
gs
aam
int
enter
adc
icebp
mov
sub
xor
and
jo
inc
popa
test
xchg
fidivrs
clc
xor
repnz
jecxz
pop
inc
xor
out
sub
ljmp
out
sbb
lds
loopne
aas
add
jle
subl
cmc
and
cld
out
adc
inc
psubw
lret
dec
lret
or
mov
push
mov
jle
pusha
or
inc
pop
add
ja
fdivrs
movsb
mov
mov
dec
xchg
sbb
cld
adc
stos
lret
add
and
jne
xorb
cltd
enter
in
icebp
nop
test
xchg
xchg
jnp
pushl
loop
push
sbb
stc
jae
test
push
mov
cmp
mov
out
outsl
jle
jg
mov
pop
clc
push
xor
mov
outsl
loope
mov
or
fcoms
mov
sti
call
cmpsl
adcl
mov
push
stc
mov
pop
imulb
pop
out
add
int
outsb
inc
outsl
ss
int3
scas
jno
mov
sbb
ret
cmpsb
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
mov
out
adc
adc
adc
and
outsb
push
jno
mov
dec
test
ds
sahf
cmp
lods
sub
shrb
pop
add
cld
cmp
pop
jge
pop
push
cwtl
push
nop
nop
rcll
inc
adc
xchg
push
roll
in
stos
xor
das
in
inc
xchg
jg
ljmp
ficoms
in
jge
jmp
dec
pop
push
out
cmp
pop
mov
lock
outsl
or
jb
adc
or
xlat
fdivrl
and
std
adc
lds
out
pusha
in
stos
jecxz
ds
xchg
insb
xchg
nop
test
loope
cmp
mov
scas
fcomps
ja
int3
adc
insb
sub
mov
mov
push
cmpsl
lcall
pop
jne
movsl
sarl
gs
sbb
es
stos
jp
and
mov
cmpsl
iret
js
stos
or
rol
dec
ja
movsl
in
sbb
insl
cmp
push
lods
stc
cld
ds
jns
pop
cmp
mov
je
mov
repnz
pop
or
fnstenv
out
add
movsb
fst
repz
or
dec
sub
lret
push
rol
pop
jae
in
iret
and
ret
stos
xor
mov
lock
out
pop
pop
pusha
in
mov
adc
or
mov
push
pop
lods
repz
lret
dec
lock
sub
add
cli
lock
inc
adc
pop
inc
mov
fistpl
xchg
insl
mov
enter
sub
add
sbb
shlb
inc
sub
clc
hlt
stos
testb
mull
rclb
pop
sub
lods
test
xor
push
iret
enter
sbb
fidivrl
loope
adc
dec
adcl
rcrb
and
call
dec
xchg
pop
inc
mov
pusha
hlt
push
loop
ret
mov
subl
je
pop
push
je
xchg
mov
call
dec
lahf
mov
push
lret
pop
lcall
shl
mov
lods
sub
mov
and
xchg
xor
jnp
and
push
mov
sbb
or
aaa
sbb
and
mov
mov
push
pop
inc
mov
sbb
lcall
push
fst
pop
xor
test
movsl
iret
sti
clc
rol
mov
mov
mov
adc
sub
sbb
sarl
mov
sub
loopne
jns
out
mov
loopne
and
mov
cld
push
in
in
and
test
pop
mov
pop
or
je
xchg
hlt
push
mov
xchg
movsl
dec
mov
scas
int3
push
cwtd
jbe
mov
sub
xchg
or
pop
sbb
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
fcoml
jecxz
adc
adc
adc
cmp
pop
dec
data16
cmp
movsl
push
push
imul
push
sbb
imul
ret
mov
es
xor
cld
xlat
push
cld
or
cld
jmp
jae
insb
mov
ficoml
orl
into
xchg
in
push
in
lods
hlt
xlat
loopne
rcr
cmp
aas
stc
push
inc
lret
cld
cmc
pop
fst
mov
iret
stc
scas
mov
mov
jmp
fsubrl
fidivl
mov
mov
sub
ds
mov
cmp
call
cmc
and
xor
clc
lock
or
dec
idivl
mov
mov
stc
cmpsb
clc
je
xchg
sub
jnp
pop
cltd
inc
sbb
mov
aam
fcmovb
xor
sbb
das
das
sbbb
mov
andb
jecxz
pop
jl
flds
mov
mov
mov
sbb
pop
mov
xlat
cmc
jmp
xchg
jl
aam
lcall
leave
test
adc
out
cmpsb
cmpsb
lret
mov
mov
mov
inc
out
mov
lock
das
inc
test
inc
xchg
pop
pop
dec
push
jp
xor
jmp
mov
mov
cld
andnps
jne
and
outsl
cmpsb
or
push
imul
xor
addr16
mov
or
into
sahf
dec
add
mov
push
mov
scas
imulb
insl
fildll
mov
aaa
int3
divl
mov
pop
testl
mov
es
push
imul
mov
sti
push
inc
push
xchg
test
dec
test
mov
xor
add
mov
cmpsl
sub
mov
loopne
dec
pusha
mov
pusha
popf
cmp
addr16
add
out
cmpsb
inc
fwait
and
mov
orb
sbb
pusha
clc
cmp
jge
dec
nop
jo
mov
pushf
adc
mov
add
pop
push
pop
mov
lock
dec
and
push
mov
add
xchg
inc
lcall
xlat
out
ds
mov
addb
je
das
sbb
fs
mov
inc
rcrb
and
and
rcr
fidivl
in
mov
test
nop
fnstsw
cld
movsl
pusha
cli
iret
cwtl
push
mov
dec
mov
mov
mov
pop
je
mov
xor
push
cmp
xor
enter
xlat
mov
jg
pop
cmpsb
sub
jbe
in
lahf
and
and
xchg
mov
jle
push
mov
daa
cs
fdivl
cmpsb
jnp
and
sbbl
inc
dec
pusha
pop
xchg
sub
jo
mov
push
xchg
mov
sub
mov
mov
data16
xor
push
xlat
addr16
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
lea
push
loope
adc
adc
adc
shrl
pop
jno
fwait
dec
jecxz
out
je
sub
fsin
jge
mov
mov
xchg
icebp
and
insb
lahf
jle
xchg
mov
fadds
xchg
int
icebp
rcrl
nop
inc
cmpsl
fidivs
das
fildl
jno
sbb
popa
pusha
jno
and
out
or
lds
popf
inc
sbb
adc
test
cltd
or
mov
jne
lock
inc
cmpsl
cwtl
sbb
adc
pop
or
mov
outsb
cmpsl
mov
xlat
scas
adc
and
cmp
mov
inc
mov
ss
mov
lods
ja
inc
xchg
and
cmp
lret
stc
fcom
stos
cmp
pop
test
loope
shlb
fisttps
xchg
or
push
jno
pusha
shrl
ret
inc
or
dec
jp
add
lcall
test
mov
mov
push
aas
icebp
rolb
mov
ss
sub
pusha
test
lret
dec
aam
and
or
cwtl
es
scas
into
push
subl
sbb
clc
xor
rorb
movsb
movsb
lret
push
or
mov
sbb
and
call
out
jo
outsl
fnsave
dec
xor
test
ljmp
orl
out
lock
mov
ror
rorl
das
ret
lahf
xor
out
sub
ret
add
push
dec
test
pop
testl
jns
mov
fwait
cmpsb
and
lahf
and
icebp
idiv
mov
test
jmp
mov
xchg
ljmp
rol
data16
mov
std
test
or
push
xor
aas
clc
push
jge
xlat
das
adc
ljmp
jo
repz
or
aas
sbb
push
xchg
xor
into
jp
cwtl
arpl
mov
cmp
shll
and
dec
popa
int
imul
sarb
subl
cmp
inc
dec
shl
pop
js
mov
xor
push
mov
ss
mov
sti
pop
rcrb
jl
xchg
add
mov
xor
push
hlt
add
imul
pushf
je
fsts
mov
fsubl
pop
scas
fstl
sub
cmp
pop
orl
push
ret
jnp
mov
enter
repz
fisttps
dec
gs
cmp
repnz
add
mov
dec
mov
dec
popaw
out
fildll
lret
and
ss
adc
lock
outsl
adc
fistps
movsl
daa
or
repz
or
cmp
or
mov
inc
fwait
pop
subl
sti
int3
out
mov
dec
adc
mov
mov
mov
mov
xchg
fcoms
mov
dec
mov
xor
repnz
lds
mov
sbb
inc
int3
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
in
aas
xor
add
xchg
sub
sub
pop
lock
mov
fcomps
out
dec
sbb
xchg
push
pop
cmc
lea
xchg
dec
mov
out
jp
jno
jp
int3
mov
dec
imul
adc
adc
sub
pop
xor
rep
or
mov
lock
ds
movb
jbe
sub
mov
insl
adc
push
icebp
mov
aad
mov
pusha
js
es
adc
ja
xchg
fsub
dec
mov
inc
dec
popf
xchg
lret
clc
and
scas
xchg
ljmp
ret
inc
xchg
filds
hlt
fs
aas
pop
iret
mov
loop
mov
mov
gs
jg
sahf
addr16
cmp
pushf
mov
sbbl
jno
dec
fs
lahf
jl
mov
and
subb
or
popa
adc
xor
mov
xchg
push
jl
stos
movsb
cmpsb
lahf
ds
sti
mov
and
fisubrl
aas
and
fstl
jge
adc
push
mov
xchg
jae
sub
adc
xor
ja
add
sub
das
lods
xor
sub
pop
adc
lret
add
cli
pop
push
add
shlb
push
dec
mov
repnz
sbb
popf
das
adc
or
push
inc
xor
lock
hlt
mov
inc
cmc
cmc
xor
adc
xchg
adc
xchg
shrl
fcmove
inc
aas
in
mov
pushf
test
lret
pop
sbb
and
push
ljmp
or
stos
adc
pop
inc
loop
popa
push
popa
loopne
in
push
xchg
sahf
xchg
and
sub
xchg
out
nop
out
test
inc
push
sub
cltd
pusha
dec
add
sbb
repz
sbb
add
ja,pt
jae
adc
or
mov
fistl
sub
and
cli
inc
repnz
imul
mov
jnp
pusha
pushf
cmp
outsb
in
addr16
lods
cltd
mov
orl
mov
xlat
xlat
jmp
push
cwtl
mov
gs
insb
lahf
je
sbb
dec
shlb
outsb
std
ja
mov
jno
mov
leave
sbb
out
push
iret
js
cmp
lahf
and
aad
inc
and
cwtl
sahf
shl
add
sub
gs
inc
push
lds
pop
xchg
mov
inc
popa
push
sahf
mov
jle
repnz
rorb
mov
outsl
dec
adc
push
pusha
sub
mov
in
xor
ds
aam
jnp
movsb
mov
xor
cmp
adc
stc
js
push
addb
dec
aad
pop
lods
pop
mov
mov
in
mov
out
stos
pop
enter
jno
movsb
into
xor
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
sbb
adc
adc
adc
out
fbstp
xchg
and
xchg
xchg
inc
int3
stc
out
or
lahf
fwait
xchg
je
outsb
loope
dec
lods
pushf
lods
mov
jecxz,pn
aad
call
cwtl
out
sbb
xorb
xchg
cmp
inc
out
ljmp
mov
mov
cmp
jno
mov
lock
iret
xlat
jl
hlt
pop
jnp
cmp
push
out
sarb
sub
aas
mov
sarl
fwait
adc
lret
ror
out
pop
xor
xchg
mov
push
es
cmp
fwait
jne
jge
mov
pushf
shlb
fs
mov
sub
mulb
mov
aaa
hlt
jnp
xor
movsb
lea
sub
mov
sbb
pop
mov
leave
enter
aaa
dec
das
subl
jno
incl
gs
pop
lds
add
test
movsb
dec
fisttpl
stos
and
jl
cmpsb
and
lds
add
loop
sbb
or
dec
push
add
pop
out
int
sub
xchg
fwait
cmp
jle
insl
adc
mov
jne
mov
lds
inc
cmc
iret
aam
loope
mov
or
dec
mov
fisttpl
dec
into
sbb
pop
xor
cld
add
mov
xor
vshufps
and
pop
sub
lods
int
cmpsl
push
aam
in
and
jae
lret
call
in
add
xchg
aaa
inc
insl
test
pusha
and
in
movsl
rcrl
scas
cltd
cmp
int
pop
in
mov
shlb
lret
fsubrs
cli
dec
or
push
pop
out
stos
mov
mov
adc
cmpsl
adc
mov
sub
jp
fldenv
insb
add
bnd
pusha
jp
std
xchg
mov
clc
mov
xor
lret
pop
in
cmp
fbstp
stc
test
fcoml
mov
sbb
push
out
aaa
push
subb
add
mov
mov
lock
xorl
jmp
xchg
out
cld
rolb
dec
neg
pop
sbb
jmp
les
xor
pop
xor
jae
jmp
push
mov
cmc
and
xchg
dec
push
or
test
mov
ds
fcoms
cld
inc
or
popa
cmp
xchg
cmp
pop
call
jne
mov
dec
sar
xor
push
movsl
and
ficomps
mov
ljmp
ljmp
adc
mov
sub
inc
dec
jge
jle
addb
push
sbb
sub
stc
cmp
mov
cmpsl
add
fs
cld
push
es
adc
inc
xor
push
push
sti
inc
cvttps2pi
movsl
mov
fsubp
shll
add
lcall
adc
sub
mov
out
scas
inc
lret
sbb
mov
mov
dec
xchg
mov
lea
scas
jg
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
loop
push
int
adc
call
cmp
xchg
xor
arpl
in
adc
xor
jp
sub
gs
imul
jo
incl
mov
dec
daa
xchg
sbb
push
or
adc
mov
inc
test
inc
std
loopne
clc
fwait
in
add
lods
cmp
cmc
out
adc
daa
addr16
xor
fs
sbb
inc
xorl
outsl
push
dec
mov
iret
movsb
cs
or
scas
cmp
std
mov
fisubl
or
ss
cmp
call
jg
dec
imul
mov
cmc
lods
test
pop
push
es
pusha
aas
push
and
paddsw
sub
sub
jmp
push
mov
into
xchg
dec
inc
xchg
je
out
inc
jno
mov
mov
push
and
cltd
ja
sub
add
jae
lods
push
mov
adc
xlat
cmp
outsl
xchg
pop
testb
ja
xchg
outsb
sbb
enter
gs
rorb
inc
xor
rorb
and
dec
shrb
mov
jecxz
xlat
or
clc
xchg
int3
and
cmp
pop
mov
add
sahf
mov
out
lods
inc
or
or
dec
inc
mov
fcomip
adc
orl
sub
ljmp
sti
add
xchg
pop
and
jmp
add
mov
add
lret
add
jge
mov
dec
xchg
adc
xchg
mov
inc
mov
popa
cli
cmpsl
sbb
pop
fwait
sete
sbb
adc
fbld
int3
xor
dec
decb
push
mov
push
jmp
xor
int
add
dec
sub
mov
sub
mov
ror
ret
stos
xchg
or
add
pushf
inc
and
cmp
jecxz
andb
stos
inc
pop
or
lods
sub
movsl
rorl
push
ficompl
and
dec
test
push
movsl
xchg
mov
ljmp
inc
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
mov
xchg
movlps
cwtl
jbe,pn
dec
mov
imul
hlt
sets
rcrl
xlat
inc
sbb
cmp
jno
orb
mov
xor
inc
lret
data16
xor
test
test
mov
push
data16
sub
lds
test
fmul
mov
xor
push
and
push
stc
mov
stos
jmp
cwtl
notb
rcrl
add
mov
mov
aaa
lods
aaa
fnstcw
xlat
test
mov
inc
push
lahf
mov
ljmp
add
xchg
dec
push
and
jne
rcrb
xchg
imul
mov
xchg
imul
mov
or
ret
push
dec
add
cld
mov
xor
cli
fisubrl
ds
dec
jb
imul
hlt
cmp
or
mov
test
or
bound
cli
das
mov
mov
or
mul
f2xm1
dec
jo
hlt
stos
xor
ljmp
imul
out
push
mov
repnz
mov
jne
or
ficoms
psubsb
loop
xor
or
shlb
ret
test
decl
adc
sub
or
fcomps
add
adc
sarl
pop
dec
pop
enter
or
cmp
inc
add
xchg
jns
adc
fmul
jbe
sub
adc
lds
popa
pop
jns
jmp
xor
cmp
mov
sti
sbb
xchg
loop
add
rcr
roll
or
push
mov
mov
cmp
xlat
cmp
sbb
pusha
cmp
mov
jl
popa
push
out
xor
lock
loop
cli
and
pop
outsl
mov
int3
add
rorl
xorl
enter
fildl
data16
loop
mov
je
shr
aam
leave
in
ret
cld
testl
mov
push
sbb
in
and
in
inc
cmp
pop
sbb
lock
jp
dec
mov
inc
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
pop
lock
add
adc
xchg
movlps
aas
imul
push
and
fistps
and
lcall
or
cltd
mov
adc
pop
inc
insb
fcoml
push
test
rorl
mov
dec
or
int
lret
xor
cmp
adc
out
jg
and
pop
dec
mov
pop
sahf
insb
sbb
mov
int
popf
daa
or
mov
out
ljmp
lahf
inc
jns
imul
dec
or
sahf
push
xchg
mov
out
pop
xor
inc
xor
push
imul
stos
fisubs
jnp
data16
xchg
xchg
inc
sbbl
and
in
push
jb
jb
stc
negl
sbb
push
pop
xchg
push
test
aaa
not
mov
les
sub
daa
fdivs
pop
mov
pushf
jae
orb
mov
lods
cmp
mov
loopne
insb
shlb
imul
imul
test
aad
pop
pop
xchg
in
push
and
jge
bound
in
shlb
stc
mov
sbb
sbb
inc
mov
repnz
hlt
jb
stos
fidivs
xchg
push
je
je
es
in
repnz
int
sahf
jg
push
xor
scas
add
sub
in
push
jmp
jl
sbb
lods
and
xchg
pop
aas
fistpl
fidivrs
ljmp
cmc
mov
jmp
ds
push
mov
repnz
movsl
aad
aas
push
sbb
lds
inc
dec
adc
mov
jmp
int3
jne
out
dec
push
nop
jmp
cmp
popf
or
out
pop
xchg
xor
cmpsb
push
cmp
jg
mov
shld
popa
push
pusha
mov
outsl
pop
mov
xchg
sbb
jl
xor
inc
stos
mov
mov
lret
jge
orb
inc
stos
cmpsb
pop
push
out
movsl
ds
inc
add
xor
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
xchg
repz
add
adc
cmpsl
loopne
jnp
mov
add
mov
pop
add
into
mov
and
pop
add
cmc
adc
push
mov
scas
add
jmp
in
movsl
movsb
pop
add
add
shr
int
daa
ja
pop
mov
or
repz
push
or
cmp
aas
cwtl
fdivl
bound
or
jno
cltd
cmp
sbb
out
hlt
aad
cmc
adcl
scas
cwtl
and
mov
cmp
sbb
mov
pop
lds
rcll
pusha
add
or
loop
sub
jae
pop
pop
push
scas
mov
and
clc
or
outsl
pop
adc
mov
shlb
xchg
mov
mov
into
aaa
inc
into
push
ror
negl
pop
sub
cmp
daa
cmp
pusha
xor
sub
cmp
jmp
icebp
adc
shl
pop
sbb
sub
add
cwtl
mov
ljmp
pusha
js
adc
popl
movsl
popl
and
fnsave
adc
enter
mov
adc
scas
aas
push
xor
and
pusha
in
test
push
xchg
add
sbb
nop
dec
ret
lods
sbb
pop
insl
mov
add
adc
jns
inc
cmp
push
in
fdivrl
adc
cmp
mov
xchg
sbb
cmp
mov
and
scas
sbb
sahf
shlb
xchg
outsb
lock
sbbb
or
das
mov
or
mov
cli
or
ds
mov
data16
ss
andl
dec
push
negl
mov
inc
or
adc
repz
leave
mov
pop
xchg
lret
scas
xorl
cmp
sub
sbb
shlb
adc
adc
sub
movb
jno
arpl
imul
or
movlps
leave
ficoms
push
fs
jge
loope
out
mov
mov
subl
add
xor
jmp
fnsave
cmp
add
add
adc
mov
loopne
test
and
sub
das
or
and
in
clc
mov
fnstsw
out
or
cltd
in
inc
pop
inc
push
cli
fildl
imulb
mov
repnz
adc
lret
pop
aad
icebp
jo
add
inc
test
cwtl
jp
mov
sbb
std
xchg
mov
loope
add
or
mov
sub
jge
lea
mov
add
ds
es
cmc
xor
repnz
pop
mov
xchg
jp
inc
or
insb
mov
shrb
aad
test
sub
or
es
lcall
sbb
mov
ret
and
add
sbb
push
mov
adc
lret
inc
push
rorb
add
or
scas
jl
dec
xchg
mov
pop
add
enter
pop
mov
cli
or
arpl
push
repz
mov
pusha
xorb
cmp
cmpl
inc
add
add
test
push
pop
loope
fistpll
push
push
andl
push
ljmp
aam
mov
aas
sahf
sub
sub
inc
orl
mov
pop
aas
xor
cmpb
dec
jbe
lcall
in
add
push
xchg
imul
cli
push
mov
cmpsl
jp
lods
cld
mov
mov
lock
dec
scas
cltd
cmpsb
mov
call
lahf
push
clc
or
out
fwait
cmpsb
and
int
cltd
andl
les
insl
mov
data16
inc
add
adc
ret
mov
dec
pushf
mov
and
pop
dec
negl
cmp
imul
loopne
fld1
push
dec
es
push
mov
roll
shll
stos
inc
into
loope
ds
out
dec
pop
cwtl
xor
call
pop
in
out
jp
mov
enter
jns
cmpb
fwait
mov
cmpsb
cmp
addl
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
leave
mov
adc
xchg
xor
xchg
pop
mov
add
lahf
or
xchg
push
mov
cmc
mov
jnp
fisttpl
pop
aad
fstpl
push
and
xor
push
xchg
add
jns
cwtl
mov
outsl
movl
mov
pop
les
push
mov
sbbb
pop
sbb
and
mov
clc
fstl
jecxz
ljmp
cmc
dec
retw
ljmp
rorl
into
out
sub
lods
popf
jns
cmc
cmp
sub
and
sub
fwait
or
insb
scas
add
nop
pop
and
or
data16
dec
loopne
je
ret
push
out
jmp
cmp
ret
mov
dec
jbe
sub
xchg
add
insb
insl
cmp
adc
daa
xor
and
inc
cmp
inc
dec
test
push
mov
arpl
push
lret
jns
stos
or
aam
je
fldenv
push
ret
in
pop
mov
lods
sbb
rcrb
sub
xor
jb
divb
adc
pop
sub
aam
arpl
sub
scas
adc
das
imul
ljmp
dec
cmc
xorb
and
outsl
adc
lcall
adc
aaa
mov
jns
mov
jg
in
out
jge
leave
dec
fistpll
cmpsl
sub
loopne
push
xchg
imul
sti
lret
js
fdivrl
fwait
movaps
aas
jae
cmpsb
xchg
pop
sub
mov
sbb
test
andl
jno
push
jbe
mov
pop
cmpsb
push
shlb
push
mov
jno
fs
fisubrl
pop
lods
pop
mov
jmp
xchg
mov
push
sub
insb
scas
dec
jp
in
mov
pop
mov
jb
or
adc
fwait
stos
orl
mov
dec
adc
fiadds
sbb
mov
mov
jne
inc
test
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
jle
add
adc
add
adc
jno
xchg
das
lahf
mov
in
jne
mov
pop
mov
dec
insl
test
adc
xchg
or
adc
add
scas
pushf
mov
es
popf
rolb
sbb
jae
pop
jo
shl
jle
cmp
test
sub
nop
out
jb
into
inc
rorl
mov
int3
sbb
dec
push
pop
mov
xor
mov
pop
jno
sub
ljmp
push
jne
mov
cld
xor
add
adc
filds
mov
push
push
adc
pop
mov
lret
repz
int
je
mov
ds
pop
popa
arpl
push
ret
sarb
idiv
adc
dec
push
pop
add
or
sub
stos
clc
mov
gs
sub
lret
out
and
mov
dec
mov
cmp
fmull
in
enter
enter
lds
outsl
popf
cmp
mov
jnp
inc
cmp
and
mov
pop
pusha
dec
and
faddp
clc
dec
dec
lea
push
icebp
sub
jle
lcall
lcall
test
mov
shlb
out
or
movl
lock
test
test
jbe
mov
cmp
and
insb
ss
mov
loope
jl
and
popl
mov
stc
sub
sub
pop
popa
test
jmp
fcoml
sahf
cmp
pop
sbb
mov
xchg
inc
or
pop
hlt
enter
stc
fldcw
roll
sub
pop
inc
jg
and
into
pop
in
push
inc
sbb
cmc
jecxz
inc
nop
cmpsb
inc
addr16
adc
push
jg
test
xchg
stos
xchg
fwait
mov
inc
enter
stc
mov
pop
dec
shrb
xchg
xchg
jae
push
inc
push
inc
int3
push
scas
add
jge
das
jne
mov
mov
jmp
push
stos
add
sti
jo
sbb
push
xchg
fisubs
into
mov
ficoml
mov
leave
sbb
sub
inc
xor
sbb
or
faddl
fs
inc
push
xchg
xlat
xchg
aam
mov
and
dec
nop
push
mov
mov
cmp
sub
lea
inc
cmp
movsl
cmp
or
jnp
testl
or
adc
dec
cld
dec
imul
out
loop
or
xor
push
fnstsw
mov
mov
cli
sti
filds
jg
fmuls
mov
adc
push
outsb
xchg
arpl
shll
jecxz
inc
std
and
insb
aam
into
xor
pusha
add
arpl
mov
ss
mov
fiaddl
jle
loopne
lcall
bswap
xchg
jp
arpl
stos
xchg
inc
rclb
add
sub
xor
int
in
daa
jnp
push
jecxz
inc
jne
aaa
pushf
sub
popa
rcrb
adc
ret
lret
sti
mov
stc
fbld
jo
out
xlat
jmp
popa
push
adc
js
es
push
test
mov
gs
rcl
lcall
pushf
out
cs
inc
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
lret
out
cmpsl
adc
add
adc
or
call
pop
leave
cmpsl
imul
rolb
dec
int3
jp
test
dec
push
ss
stc
xor
sbb
aaa
sbb
mov
mov
mov
test
mov
or
fldl
fincstp
loopne
lahf
loopne
cmp
xchg
fisubl
sahf
movsb
bound
mov
dec
adc
dec
rolb
out
addr16
enter
out
movsl
dec
jp
jno
jb
mov
xor
lock
lret
into
jecxz
jmp
dec
xchg
fstl
xchg
movsl
rol
rcll
cmpsl
jnp
cmpsl
mov
neg
xor
xchg
xlat
mov
test
int3
inc
inc
sti
sbb
xchg
push
push
sub
sbb
gs
repnz
rorl
aaa
pop
push
jno
mov
enter
popf
pop
xchg
icebp
jge
pop
mov
jae
and
xchg
mov
mov
cmc
int
and
mov
sbb
ds
pop
adc
push
stc
cmpb
cmpsb
pop
push
mov
movb
mov
mov
sub
and
mov
inc
ljmp
push
mov
mov
nop
fadds
and
int3
mov
mov
pop
cmp
and
dec
inc
je
out
mov
loope
sub
dec
cmpsb
dec
addl
xchg
stos
popf
mov
push
vpunpcklwd
push
arpl
dec
loopne
aam
and
xor
or
sbb
push
add
xchg
outsb
js
adc
mov
lock
test
xchg
jmp
ds
mov
movsb
inc
push
or
push
push
cmc
cmp
push
inc
stc
dec
addr16
ja
fstpl
lods
mulb
ficomps
mov
std
inc
fisttpll
fisubrl
lea
rcr
inc
inc
mov
sbb
push
jle
jecxz
in
cmp
lea
mov
xor
xlat
repnz
sub
ja
testb
mov
shl
xor
cltd
ret
cmpl
push
push
or
xchg
sub
pop
push
push
pop
test
jecxz
aam
test
xor
js
adc
mov
mov
insb
push
add
inc
sub
inc
gs
inc
pop
inc
pusha
cmp
sub
xchg
leave
idivl
loop
pushl
cs
pop
push
and
mov
jns
push
cmc
dec
cld
jge
xchg
or
mov
pop
lods
imul
cmp
imul
stc
cmc
add
lds
enter
sti
insb
xor
in
add
adc
xchg
mov
jmp
jmp
push
leave
fistpl
push
mov
loopne
jle
test
loop
inc
mov
xchg
dec
sbb
or
icebp
inc
mov
mov
jl
pminub
loop
xor
andb
push
inc
xchg
test
stos
pop
lahf
mov
mov
jecxz
xchg
in
lods
pop
pop
orb
xchg
push
call
push
dec
out
ljmp
pop
inc
jbe
xchg
daa
incl
xlat
mov
sub
sub
cmpsl
int
sbb
fwait
sahf
outsl
cli
mov
sbb
lods
fdivl
and
and
or
aas
sub
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
dec
xchg
js
movsl
adc
add
adc
lret
scas
cmp
test
lock
push
in
xchg
gs
dec
dec
push
xlat
push
out
add
ja
push
dec
ss
adc
jne
cmp
xchg
dec
adc
scas
jns
cwtl
add
push
mov
adc
pushf
testl
cmpsb
out
xchg
xchg
push
clc
mov
sbb
sbb
push
mov
jecxz
sbb
push
jnp
test
or
pushf
jmp
imul
lock
mov
inc
rolb
aad
idiv
dec
sbb
xor
fldt
lods
cli
dec
in
shrl
xor
adc
push
lcall
inc
pop
out
pushl
scas
aaa
fcomp
cmpsb
fimull
aas
or
ret
pop
jnp
sahf
xchg
mov
inc
adc
and
or
sbb
push
xchg
fld1
add
sub
lea
scas
push
add
or
xchg
movsl
jl
xchg
xchg
cwtl
lods
ror
pushf
addr16
movsb
mov
outsl
lea
xlat
xchg
mov
mov
icebp
fcoms
sti
out
push
pop
lds
xor
add
jg
mov
jp
sub
rcrb
loop
and
ljmp
js
loope
and
fnstenv
dec
sub
xchg
gs
adcl
lret
jb
lret
inc
pusha
mov
mov
adc
nop
mov
lahf
js
icebp
rolb
pop
mov
jge
outsl
sub
jp
in
sub
aaa
sbb
bndstx
sbb
adc
lahf
sbb
jae
shrb
dec
sbb
sbb
xchg
cmp
stos
lea
rol
js
cmpsb
jbe
mov
pop
cmp
aad
push
and
and
mov
les
sti
es
inc
movsl
fstl
mov
or
clc
mov
stos
jns
out
dec
dec
lods
mov
out
jns
fistps
int3
xchg
jns
sub
mov
dec
inc
xor
sbb
or
add
enter
je
iret
repnz
cmp
ror
fbstp
fists
aaa
gs
stos
sub
aam
inc
scas
shrl
adc
ds
in
inc
movb
testl
add
cwtl
add
push
mov
add
xchg
sbb
es
xor
push
lret
push
mov
push
leave
add
pop
dec
cli
dec
xchg
loope
pop
lret
cmp
rcrl
or
cmc
mov
xchg
out
fdivrl
inc
mov
clc
pop
cmp
adc
jge
jge
cltd
outsb
jle
inc
lret
aas
das
cmp
mov
clc
lds
mov
inc
insl
stos
and
cli
sub
out
xchg
ret
inc
and
jp
cmpsl
inc
or
pusha
mov
jge
xchg
push
fdivs
push
sti
pop
and
mov
jp
jnp
movsl
jmp
dec
loope
dec
inc
loop
and
test
repnz
fsubs
adc
fnstenv
ret
mov
mov
jl
repnz
imul
ljmp
hlt
push
rolb
iret
jb
cmpsb
scas
and
fdivs
mov
fnsetpm(287
dec
insl
clc
jo
outsl
mov
cwtl
call
icebp
jne
test
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
dec
sti
jle
popf
adc
jne
adc
rcll
jmp
adc
push
arpl
push
imul
dec
push
jge
fldt
adc
or
push
stos
cli
sti
popf
hlt
sub
and
pusha
icebp
and
and
xchg
sub
xchg
movb
or
sti
cwtl
test
adc
ret
xchg
mov
sahf
dec
aaa
shlb
mov
push
xlat
inc
dec
fstps
rcrb
test
shr
mov
mov
push
cmc
ficoms
addr16
movd
int3
fisttpll
shll
pushf
cli
mov
inc
stos
lret
aad
sbb
sbb
jecxz
xchg
mov
andb
cmpsb
xor
lods
mov
nop
sub
leave
adc
mov
test
mov
mov
enter
xor
inc
or
call
out
stos
jnp
xchg
xor
push
imul
dec
xlat
inc
sahf
gs
pop
or
subb
push
clc
in
testb
push
jno
or
mov
xchg
and
sub
push
sbb
rolb
adc
in
jbe
lcall
jecxz
xchg
fs
dec
mulb
xchg
jns
stc
add
jns
and
int3
adc
adc
or
mov
xchg
scas
jecxz
pop
addr16
mov
sahf
repnz
mov
pop
pusha
aad
and
fdivrp
ret
add
xchg
mov
jbe
in
or
push
xchg
test
je
mov
shll
push
sbb
sarl
nop
mov
sub
inc
sbb
movl
scas
push
jp
aas
aam
sub
loopne
mov
adc
insl
xor
sbb
pop
aam
out
insl
rcrb
jmp
jg
or
sbb
pusha
pop
xchg
in
push
aam
mov
cmpsb
fnstsw
mov
in
and
rolb
call
or
add
or
ret
add
and
pop
add
xchg
shrl
lea
outsl
push
iret
pop
iret
inc
adc
add
jp
cwtl
in
mov
movsl
inc
lods
lret
push
sub
jae
push
mov
filds
and
cmp
cmp
imul
clc
popf
jge
and
sub
pop
push
xor
ret
and
dec
dec
mov
mov
int3
jnp
push
pop
sub
or
out
lcall
pop
ds
das
jl
rolb
cmp
enter
pushf
mov
xchg
push
and
hlt
and
lcall
cmpsb
mov
sahf
popa
popf
je
cwtl
mulb
cltd
xchg
dec
push
flds
mov
clc
loope
jno
xlat
ret
into
ret
mov
fcoml
enter
fldcw
xchg
rcrl
sub
in
inc
xchg
lock
and
lods
call
call
dec
pop
rclb
lock
adc
fsub
dec
lds
pop
aaa
xchg
repz
imul
enter
push
cmpsb
repnz
mov
pop
fcoml
mov
and
inc
sbb
jnp
lret
shrb
or
xor
movsb
mov
testl
cmp
jae
mov
sbb
xchg
lods
add
int3
loopne
test
and
ds
push
pop
xor
inc
xchg
or
test
movb
fiaddl
insl
pop
mov
fidivrl
xchg
mov
sub
lcall
loope
imul
jns
loopne
fs
xor
xchg
int3
cmc
lods
inc
andb
mov
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
xor
xchg
adc
jne
adc
bound
sbbl
js
scas
inc
and
insb
cmp
popf
dec
sbb
aam
jg
clc
mov
divb
jge
xchg
jae
out
and
fsubrs
stos
dec
cli
mov
inc
bound
xchg
inc
das
pop
filds
int
in
test
mov
data16
fdivs
add
xchg
lahf
cs
aaa
push
pop
cltd
scas
loop
cs
sbb
jno
flds
or
jecxz
dec
inc
sub
call
sbb
cld
loopne
roll
inc
arpl
es
xchg
out
mov
into
xlat
inc
push
lret
ret
mov
push
loopne
je
inc
fs
sub
cmp
or
mov
insl
popf
adc
xchg
dec
and
add
xchg
mov
or
stos
jle
mov
add
ret
aam
sbb
arpl
xor
jp
xchg
inc
jecxz
jmp
dec
or
adc
pusha
ds
repnz
pop
mov
dec
cld
mov
nop
pop
add
dec
mov
out
xchg
mov
call
call
pop
cs
inc
mov
ss
push
add
mov
jae
jge
or
out
mov
sbb
push
inc
test
dec
lds
outsl
jmp
push
mov
jbe
adc
sbb
imul
pop
popf
jno
jnp
inc
pop
int3
popf
or
push
fs
sub
dec
shl
aaa
sbb
xorl
out
jl
mov
and
lock
mov
jl
dec
sarl
jge
jecxz
ret
test
in
lods
jb
orb
in
scas
pop
mov
leave
xchg
xchg
mov
fwait
leave
mov
aas
and
adc
inc
push
cmp
movsb
lret
out
push
icebp
dec
lret
jmp
cmp
notl
hlt
movsl
cmp
mov
scas
xchg
inc
negb
outsb
cmp
fisttps
push
xor
xchg
mul
shlb
ja
mov
enter
sub
pushf
jge
mov
dec
sbbl
mov
stc
loopne
ret
fldenv
lret
jae
insl
pop
in
and
imul
stos
jo
pop
mov
std
xor
lock
jbe
or
gs
lods
cmp
pop
pop
roll
push
jbe
push
leave
xor
hlt
test
aaa
idivb
ret
ret
loope
xchg
in
push
stos
mov
and
enter
mov
outsl
mov
lcall
fsubs
ja
ret
mov
jae
xor
xchg
inc
lret
dec
xlat
jl
mov
decl
ljmp
fadds
sahf
fdivl
out
scas
lds
ss
loop
sub
mov
int3
fisubs
xchg
and
cli
orb
push
or
adc
fsubs
push
xor
push
enter
inc
pop
push
mov
movsl
pop
dec
dec
mov
sub
ret
icebp
sbb
push
out
lcall
jb
in
scas
mov
mov
mov
test
mov
shr
sarl
mov
mov
mov
call
inc
dec
jge
mov
xchg
imul
shlb
outsl
mov
xchg
mov
aas
pop
test
xor
jp
mov
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
xlat
pop
lods
orl
adc
dec
add
jns
sbbb
sbb
stos
popf
int3
push
sub
xor
jecxz
cwtl
xchg
push
cli
dec
and
and
ror
pop
mov
jmp
imul
scas
inc
sub
ljmp
dec
or
clc
fdivl
aam
jge
imul
jmp
gs
out
push
cwtl
testl
inc
decb
cmp
xlat
pop
sarl
jmp
add
xor
jecxz
sub
jle
int3
cmp
pusha
adc
arpl
push
sub
enter
pusha
inc
mov
or
fimuls
ss
mov
and
cmpsl
inc
pop
cli
or
cmpsb
cs
mov
sahf
mov
pop
pop
add
jno
xchg
scas
cmp
cs
cld
mov
pop
stc
cs
mov
pop
fdivs
add
jns
test
es
dec
icebp
je
cs
je
or
mov
mov
inc
dec
cmp
xchg
cmp
mov
nop
int3
xlat
sub
lret
or
insb
int3
imull
and
lods
xlat
iret
pop
adc
jne
daa
and
lret
hlt
mov
scas
pop
arpl
popa
sete
scas
pop
divl
daa
stos
popf
rclb
xchg
pop
out
adc
scas
dec
and
push
loope
lcall
sbb
adc
jmp
mov
sbb
cmp
and
pop
inc
rcl
iret
mov
push
mov
pop
or
loop
out
fistpl
xchg
add
insl
or
mov
push
mov
push
sub
add
mov
rolb
mov
shrb
aad
push
mov
mov
btc
sbbl
or
lahf
push
add
dec
push
lret
ss
aas
fists
les
into
pop
add
scas
adc
inc
mov
insb
je
insb
je
or
xchg
mov
je
imul
sub
push
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
paddw
xchg
adc
movlps
mov
repnz
dec
mov
sbb
mov
stos
mov
xor
push
pop
cmpl
clc
notl
xchg
jge
xlat
mov
rcll
xchg
lods
sti
in
xchg
pushf
sti
popf
inc
xor
movsb
pop
ficoml
fadd
insl
xchg
pop
pop
into
xor
stc
stos
push
pop
fs
decl
jle
mov
loopne
inc
add
xor
fstp
rcrb
jg
push
pop
fucomp
fildll
mov
and
fwait
lret
fiadds
bound
addr16
lea
mov
mov
cmp
mov
adc
loope
mov
mov
lea
and
pop
cmp
sub
jle
push
jae
jbe
fdivrs
lds
xchg
stos
ficoms
xchg
sub
sub
icebp
lahf
ret
xor
loop
mov
jno
mov
mov
and
loopne
or
xor
pop
xor
sbb
fisttps
sbb
cli
pop
push
pop
mov
test
js
inc
fldt
mov
sub
mov
lcall
mov
shlb
push
xchg
arpl
loop
sub
push
mov
sub
jmp
cmp
sbb
test
out
imul
lods
inc
sahf
pushf
cmp
in
subl
in
dec
or
xadd
lock
out
adcb
mov
push
jle
dec
call
and
xchg
sbb
pusha
int
sub
int3
sub
les
repz
add
add
sbb
mov
aam
pop
fldenv
mov
mov
iret
inc
cmp
addl
and
inc
adc
ret
inc
dec
mov
cmp
shlb
xchg
mov
jae
in
hlt
jmp
leave
push
or
jmp
negl
nop
jne,pt
mov
pop
data16
pop
in
lea
dec
dec
xor
adc
mov
imul
cmp
dec
push
jg
jne
mov
mov
stc
jno
cmc
int3
fmuls
cmc
jge
lahf
dec
jle
cmc
arpl
xchg
mov
pusha
mov
cs
cmpsb
pop
xlat
xchg
insb
fldenv
out
mov
and
nop
rol
xchg
out
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
in
lods
sub
adc
decb
adc
rcrb
xor
mov
out
or
push
push
lea
add
add
push
inc
pop
inc
fnstcw
dec
sbb
fbstp
pop
jl
mov
imul
inc
mov
cmp
sbb
pop
cmpsl
testl
mov
sahf
lods
es
pop
adcb
push
pop
repnz
or
in
jns
popa
jns
push
push
mov
dec
push
enter
pop
cmp
pop
rolb
push
xchg
jo
lods
ficoms
iret
mov
addr16
movsb
adc
lea
imul
ljmp
loopne
dec
xchg
outsb
add
push
and
jle
mov
push
push
cli
adc
sub
sbb
sbb
jns
pushf
mov
mov
xchg
cmpsl
lret
mov
or
fsts
stos
test
stos
gs
imul
shll
std
je
andl
mov
jne
jg
std
inc
out
pushl
lods
shrb
add
repz
jl
imul
xchg
sub
cmp
xor
dec
dec
test
int
movsl
rorl
lds
adc
inc
outsb
mov
test
fisttpl
outsb
push
push
repnz
mov
add
ffree
mov
cmpsl
xlat
out
into
cs
scas
cltd
in
cmp
shll
xor
push
and
mov
jb
call
sbb
xchg
and
movd
mov
orb
out
push
movsl
shl
out
inc
aad
pop
pop
cld
dec
outsl
pop
push
jo
adc
push
in
scas
add
inc
and
orb
mull
ds
int
pop
into
mov
xchg
jmp
ja
pop
xchg
inc
icebp
movsl
in
andl
stc
mov
or
xchg
adc
dec
aas
sbb
repnz
pop
adc
stc
and
and
xlat
fcoms
loop
pusha
lahf
mov
jnp
aam
add
cmp
fdivrl
push
dec
fnstsw
and
pop
daa
and
and
fidivl
dec
jo
loop
das
mov
mov
mov
adcb
jp
mov
loope
mov
sti
and
in
jmp
add
loope
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
mov
adc
movlps
mov
add
fs
stos
scas
pop
xor
popa
mov
int
fstpt
clc
pop
sti
dec
mov
ret
mov
sub
xsavec
mov
adc
ds
lret
cmp
sub
sub
push
pop
fsts
mov
lea
fidivl
jl
mov
cmp
notl
lea
jb
imul
mov
push
add
sbb
push
lcall
dec
in
adc
pushf
pop
dec
mov
aaa
and
sbb
xchg
test
adc
dec
xchg
cs
adc
jae
cmp
mov
sbbb
in
pop
pusha
sub
test
adc
imul
scas
addr16
pop
pop
aad
sub
sbb
xchg
adc
fyl2xp1
out
or
pop
iret
jmp
ljmp
ss
pop
push
fstl
mov
insb
dec
inc
mov
call
mov
jo
inc
iret
push
dec
ret
cmp
scas
pop
loope
call
push
aas
push
cs
movsl
aas
xchg
jb
mov
cwtl
lret
push
stc
mov
outsl
mov
push
rclb
xchg
les
popa
xchg
cmpb
push
xchg
sub
sar
xchg
dec
fcoms
outsb
lret
sahf
lahf
inc
cmp
inc
enter
inc
and
rolb
and
orb
stc
adc
hlt
iret
add
mov
dec
repz
mov
xchg
jno
mov
pop
jmp
into
mov
push
in
xchg
xor
or
aad
dec
sub
push
push
mov
dec
xor
pop
xchg
sbb
insb
mov
out
daa
mov
das
and
fwait
or
dec
cmp
aaa
vxorps
into
imul
push
outsl
into
lahf
and
iret
jecxz
jo
add
xlat
leave
dec
jmp
jmp
cmp
jno
inc
sbb
lahf
pop
call
cwtl
scas
imul
sar
inc
sbb
mov
ljmp
xchg
adcl
sub
in
sub
pushf
and
loopne
inc
pop
fadd
fwait
std
adc
pusha
push
mov
pop
pop
jge
xchg
xor
hlt
ds
mov
and
out
int
inc
aas
xchg
shll
test
jno
or
inc
imul
std
jo
hlt
dec
pop
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
jb
stos
clc
ja
adc
movlps
cmp
sbb
inc
andb
jo
pop
sbb
push
dec
pop
inc
dec
lock
std
jp
popa
popa
push
data16
cmc
or
adc
mov
xlat
test
jecxz
fmuls
xor
add
ret
popa
adc
mov
sbb
movsb
movsb
jg
mov
and
cmp
sti
xor
sub
mov
xor
cli
push
cmp
in
repz
xchg
push
outsl
cmpsb
filds
cmp
movsl
jbe
mov
dec
aas
add
add
outsb
adc
xor
and
add
ss
icebp
inc
xchg
mov
and
or
fiadds
lret
outsl
mov
sti
icebp
adc
js
xor
ret
in
mov
mov
or
sarb
fldenv
mov
add
cltd
xchg
mov
jmp
pop
clc
and
cmp
mov
inc
test
jp
js
jns
sbbl
jo
jbe
movsl
iret
dec
stc
push
lea
stos
sahf
jae
jb
cmpsb
or
pop
es
or
ljmp
dec
jnp
arpl
sub
ret
inc
test
ja
xor
stos
repz
dec
and
pop
mov
mov
mov
mov
dec
cmp
or
xchg
imul
sub
stos
ds
imul
jno
inc
xchg
adc
xor
inc
int3
push
sbb
add
jle
stos
mov
je
jle
cmp
or
pop
subb
push
lock
in
mov
mov
push
push
fcmovnu
aad
pop
dec
sub
movsl
sarb
out
mov
repz
test
test
xor
mov
icebp
jmp
add
mov
xchg
xor
cmp
fildl
fmull
into
jmp
push
data16
stos
stos
mov
or
pop
or
mov
jp
dec
adc
data16
lret
shlb
ds
mov
mov
jae
dec
mov
dec
push
repnz
orb
pushl
mov
adc
shll
into
add
or
lahf
icebp
jo
xchg
dec
loope
sbb
push
mov
dec
popf
sbb
les
ss
lock
jbe
notl
push
push
hlt
jb
loope
call
mov
jmp
js
cmc
repz
sub
test
mov
movlps
mov
pop
sbb
or
insl
cmp
sbb
lret
fmull
mov
les
fs
adc
pop
pop
clc
xchg
decl
rorb
sub
dec
xor
dec
movsl
outsb
add
out
xlat
sub
cli
mov
in
pop
and
aad
jl
mov
mov
mov
stos
jb
inc
daa
inc
lea
jp
adc
xchg
leave
mov
nop
fdivrs
cmp
pop
imul
mov
push
or
lahf
repz
ds
sub
pop
sub
pop
pop
mov
js
or
mov
aad
cmc
xchg
dec
jl
pop
outsb
mov
cmc
mov
mov
stos
dec
sti
shl
rcl
mov
je
clc
dec
das
outsb
out
adc
pop
sbb
popa
cs
repz
lcall
in
or
movsb
push
in
in
fldt
mov
inc
das
pop
test
add
clc
imul
sub
icebp
hlt
and
popa
aam
adc
movsb
pop
scas
cs
sahf
dec
dec
mov
push
mov
andl
sbb
pop
shl
rorl
sbb
mov
sbb
les
jl
mov
mov
xchg
push
sahf
cmp
mov
ja
inc
mov
mov
push
pop
pushl
or
xlat
dec
jne
es
pop
adc
arpl
es
das
sbb
bound
ja
js
lods
and
pop
enter
pusha
mov
inc
push
adc
mov
ror
adc
xchg
pop
fbstp
fmull
popf
repz
mov
nop
cwtl
add
sbb
dec
jmp
ret
jne
lret
lret
dec
jmp
mov
jp
and
ficompl
sub
xlat
push
and
mov
icebp
push
or
test
mov
push
pop
ficompl
sahf
addb
negb
cmp
push
dec
das
popa
test
shlb
aam
ds
imulb
icebp
mov
mov
mov
mov
push
mov
fs
push
pop
xchg
negb
or
ret
jae
or
imul
jmp
jle
loopne
push
jo
mov
push
andl
decb
int3
pop
add
movsl
das
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
lods
ret
jno
adc
movlps
out
pop
xor
lods
dec
pop
sub
pop
push
mov
push
leave
std
imul
jns
sub
mov
dec
cmp
and
loop
ljmp
adc
lods
outsb
minps
rorl
insl
std
popf
push
xchg
out
call
dec
mov
andb
lahf
dec
sti
leave
insl
hlt
enter
out
mov
in
mov
dec
jl
jb
out
jnp
push
inc
mov
mov
lret
dec
or
mov
bound
add
vpmulhw
dec
rcr
dec
daa
jp
adc
jbe
jge
add
mov
rorb
sbb
jg
cmp
arpl
mov
and
rolb
sub
repnz
gs
mov
xchg
add
jle
sbb
fcmovnu
push
insl
adc
inc
jo
cli
lds
push
testl
jo
fsubrp
cwtl
jb
or
dec
test
push
cmp
jle
mov
jo
sub
mov
cmpsb
cmp
fcomi
cmp
lock
fnstsw
nop
jmp
sub
mov
loop
repz
add
sub
lock
test
in
clc
adc
aaa
test
cmpsb
leave
lcall
inc
rolb
mov
das
cmp
push
mov
pop
test
xor
ss
daa
pushl
inc
inc
mov
push
xor
aam
push
dec
inc
sub
das
rcrl
js
sti
mov
pusha
jb
xor
cmp
jg
arpl
mov
jae
addr16
xor
mov
cli
test
mov
push
push
mov
lock
aaa
jle
mov
in
pop
loop
jne
aaa
jo
loope
test
mov
in
and
ds
gs
lcall
nop
shr
js
mov
dec
mov
xchg
mov
inc
mov
or
sahf
js
lods
mov
pop
inc
mov
jno
hlt
aas
in
jmp
ret
mov
xor
or
jle
scas
cwtl
out
test
fbstp
mov
jno
and
sbb
addl
inc
dec
stc
loop
add
cmc
xchg
cmp
mov
inc
mov
sub
lea
push
shl
jmp
push
loopne
jo
jno
mov
sahf
mov
adc
decb
adc
inc
rolb
xchg
mov
adc
push
pop
jmp
test
push
or
and
aad
adc
mov
bound
dec
lret
jns
test
fsubrl
test
sub
xchg
ljmp
push
or
rol
aas
adc
adc
bnd
push
nop
mov
call
xchg
or
dec
mov
dec
lret
pop
ljmp
xchg
cld
sbb
xchg
mov
adc
mov
pop
mov
push
adc
cli
mov
jecxz
pop
pop
aad
mov
daa
push
xchg
fs
cmp
sbb
mov
jge
faddp
mov
out
xor
cmp
stos
and
mov
into
movsb
shll
push
imul
test
sbb
xchg
scas
shlb
xchg
fsubrp
or
mov
out
or
loop
inc
mov
pop
adc
les
es
sarb
aad
in
mov
jno
push
jmp
or
xchg
out
inc
adc
xchg
inc
cli
repz
xor
or
mov
out
pop
in
push
sub
data16
into
scas
rcl
xchg
sub
insb
push
hlt
mov
xchg
cli
in
mov
jle
call
mov
jae
cmp
call
mov
shrl
mov
scas
ss
xchg
mov
jae
popa
imul
xchg
int3
xlat
pop
aaa
mov
mull
ds
rclb
adc
lret
addr16
xchg
push
shrl
inc
jbe
inc
xor
test
loop
outsb
pop
and
pop
pop
shrl
out
sahf
dec
mov
jge
xor
es
jbe
xor
and
lahf
btrl
sti
add
sti
jbe
mov
sub
inc
lahf
outsl
lret
lea
fs
pop
nop
mov
sbb
out
fisttpl
dec
jnp
mov
sub
jb
mov
testb
arpl
jno
jp
addr16
cmpsl
inc
bound
cmpsb
lret
ret
cmp
pop
fstpl
fwait
enter
and
lea
aad
scas
or
add
pop
dec
pop
push
xor
push
stos
lds
sbb
repnz
xchg
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
imul
adc
decb
adc
xchg
cmpsb
fistpl
insb
lret
cmpsb
inc
mov
add
jge
sub
add
jno
adc
in
in
pop
repnz
mov
pop
push
ja
add
dec
cs
test
jecxz
pusha
cmp
xor
and
and
jp
js
adc
xchg
adc
or
xorl
mov
arpl
outsb
cltd
inc
lcall
push
sahf
cmc
pusha
push
shrl
in
xchg
sub
enter
scas
mov
jge
adc
shrb
subb
mov
dec
and
xchg
cld
xor
lret
pop
ret
inc
imul
das
mov
sbb
cli
popf
lcall
inc
lret
pushf
xlat
sub
sub
cmpsb
cmp
insl
and
and
int3
add
pop
xchg
scas
rcrb
cmp
push
xchg
test
add
andl
jo
pushf
ret
add
std
jno
stos
std
adc
xchg
xlat
movb
jcxz
jmp
xor
push
out
cmp
xchg
out
daa
in
lea
sub
rorw
cmc
mov
repz
sbb
mov
mov
mov
lretw
mov
rcl
jae
cld
cmpsl
pop
pop
inc
sub
mov
jns
ja
mov
sub
sub
test
call
xchg
jl
subps
push
mov
shrb
ret
test
mov
pop
xlat
push
xor
pop
js
or
mov
dec
mov
cmc
daa
loope
cmp
shl
int3
lcall
scas
and
into
lret
aas
xor
fst
cwtl
mov
movsl
and
fs
int
cli
or
pop
sbb
push
aaa
cmpsb
aam
int3
xor
jns
test
scas
leave
lods
push
push
sarl
mov
fisttpll
repz
and
add
adc
or
ficompl
das
adc
ret
sbb
push
test
aaa
popf
cld
cmp
unpckhps
scas
loopne
lods
and
lret
in
or
mov
dec
mov
xchg
dec
sbb
out
scas
sub
int3
inc
aaa
push
std
ja
sarb
lods
xchg
jne
loope
rolb
les
push
and
dec
out
sbb
loop
sahf
stos
test
inc
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
or
jle
popa
adc
decb
adc
bound
out
inc
fstpt
insl
push
cmp
cmpsb
pop
or
sub
test
xorb
mov
nop
icebp
fldcw
inc
movsl
push
push
inc
fcompl
jp
icebp
bound
cmp
push
dec
imul
sti
pop
rcrb
rorl
jge
lcall
pushf
xchg
mov
add
gs
and
leave
cmpsl
dec
out
in
push
mov
adc
cmp
movsl
roll
xchg
movsl
sub
lret
ret
inc
pop
cmp
jp
cmpsb
popa
loop
out
add
out
inc
push
test
shll
jo
pop
sbb
lods
in
and
adc
push
add
imulw
push
sbb
jno
fsubl
test
ret
sbb
in
cmp
pop
dec
pop
clc
pop
jmp
stc
jno
out
lea
mov
sahf
out
scas
jae
shll
push
push
xchg
ret
inc
sbb
adc
or
ja
or
loopnew
push
xchg
enter
hlt
adc
xchg
lret
mov
sbb
fwait
push
pop
adc
push
mov
ror
mov
xor
sbb
shrl
adc
push
jmp
push
fcompl
dec
dec
inc
dec
xchg
in
inc
jl
inc
mov
bnd
cli
cs
xchg
insl
push
sti
xchg
in
popfw
mov
sbb
jns
into
adc
jle
xchg
mov
dec
push
loopne
cmpsb
mov
in
daa
mov
movsl
mov
in
adc
pop
mov
xlat
fstl
pop
push
sub
cmp
sti
or
inc
xchg
inc
imul
mov
adc
sub
popa
xchg
xor
addr16
cs
inc
ds
sbb
sti
in
mov
xchg
outsl
dec
sbb
adc
fstpl
mov
cmpsb
dec
mov
cmpb
ret
out
dec
clc
aaa
mov
js
mov
lcall
or
xchg
add
mov
mov
mov
je
xorl
jmp
aaa
pop
fcompl
faddl
sbb
cmp
dec
cmpsb
fs
repz
or
jnp
mov
or
dec
sbb
incb
jle
inc
mov
outsb
daa
sbb
gs
dec
xor
test
sbb
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
push
pop
adc
decb
adc
pop
sub
dec
dec
fwait
xchg
push
leave
in
test
std
adc
ss
xlat
lds
daa
mov
xchg
pop
enter
cmc
fldenv
pop
pop
fstpl
cmp
cmp
insb
cmpl
fbstp
xor
imul
adc
decb
rclb
sarb
mov
pop
pusha
cmp
andl
cmpsl
in
jmp
roll
mov
xchg
jl
push
fbstp
movsl
in
cmpsl
xor
aas
cmp
push
mov
xchg
mov
sub
data16
fwait
sahf
movsb
ret
inc
pop
xchg
mov
fst
inc
lahf
push
sbb
orl
or
les
addr16
ficompl
xchg
dec
xor
stos
daa
stc
xchg
insl
movsl
mov
je
andl
xchg
jae
dec
pop
shr
pusha
flds
popa
fldt
fmulp
xor
jne
push
out
or
xchg
inc
xchg
ret
and
adc
jne
mov
inc
or
jecxz
lea
lock
ljmp
mov
jl
adc
xchg
clc
push
push
mov
xchg
mov
aaa
mov
pop
shl
jle
or
mov
xchg
push
mov
mov
xchg
or
std
dec
or
cs
jmp
or
pop
mov
sub
daa
inc
aaa
jo
aam
insl
dec
mov
loop
cld
je
jae
adc
iret
xor
je
repnz
inc
xchg
notb
icebp
inc
sti
out
push
inc
sbb
lret
xchg
mov
cmpxchg
adc
adc
loope
inc
add
imul
test
and
jns
cltd
leave
and
xchg
mov
lret
clc
lds
movsl
daa
push
add
push
inc
sysret
mov
mov
mov
test
sbb
mov
fnsave
xor
test
pusha
add
mov
mov
inc
jno
jbe
sbb
clc
adc
orb
icebp
mov
cwtl
sbb
lret
pop
cli
scas
lods
and
or
mov
adc
loopne
xor
cmp
test
cmp
int
mov
popw
dec
lods
or
pop
sub
cmp
sub
cmpsl
adc
ret
sbbb
movsb
dec
push
mov
dec
scas
jg
scas
test
sbb
data16
cmp
decl
cmp
shr
add
add
bt
cmp
and
add
decb
adc
xor
sbb
iret
adc
push
int
lret
shll
pop
xor
ljmp
lcall
mov
in
mov
lods
dec
imul
push
jp
mov
ja
jp
fmuls
les
jmp
data16
inc
adcb
in
lret
cmp
mov
jle
xor
cwtl
mov
int
fisubrl
lret
or
sbbl
int
push
and
enter
leave
dec
or
inc
push
mov
add
sbb
xchg
sbb
mov
sbb
mov
stos
rcrl
ljmp
jg
imul
push
rolb
mov
sub
jno
mov
mov
fisttpl
push
mov
aas
or
jno
jae
mov
pop
mov
int3
popl
scas
stos
adc
lds
pop
out
xchg
ret
xor
int
mov
shlb
out
clc
jbe
mov
pop
js
cmp
add
leave
out
ret
adc
out
add
faddl
inc
mov
shl
mov
inc
sub
push
xchg
mov
lock
out
mov
jl
xchg
fstp
mov
hlt
xlat
pop
xchg
fs
mov
pop
dec
cwtl
addr16
fstpt
push
inc
dec
mov
test
pop
fwait
mov
ds
add
insl
push
cmp
xor
mov
notb
repnz
test
mov
jle
cmp
clc
sbb
mov
mov
pop
test
stc
mov
pop
lret
inc
jge
hlt
add
inc
shll
xlat
adc
lret
jns
mov
mov
and
mov
sbb
dec
addl
adc
jb
and
sub
std
sbb
insl
xchg
push
push
xor
mov
scas
jg
inc
jne
arpl
cmp
and
inc
pop
mov
insb
pop
mov
or
mov
imul
sub
xchg
jl
xchg
mov
in
shrb
decb
mov
mov
inc
or
test
cwtl
mov
mov
cs
cmp
fsubrl
xchg
xchg
sbb
negb
mov
push
movsl
test
xchg
pop
mov
cmpb
imul
rorl
or
and
imul
int3
cld
sbb
cli
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
cmp
adc
movlps
fnstcw
xor
mov
sbbl
scas
movsb
inc
mov
sbb
mov
mov
cltd
inc
fs
clc
push
dec
inc
jne
sub
js
icebp
cs
andl
iret
pop
ss
sub
pop
mov
xor
and
push
aam
cwtl
sub
ja
mov
xchg
cld
push
shll
test
es
into
hlt
fsubl
lret
push
pop
xchg
inc
jecxz
gs
xor
orl
outsb
inc
cltd
cltd
jg
xor
loopne
out
rol
loop
lds
cmp
in
popa
inc
insl
pop
inc
mov
dec
fst
icebp
insl
clc
rorb
pop
fldl
in
jno
test
jmp
sbbl
sbb
lock
fs
cwtl
jle
lea
rcrl
add
or
inc
mov
cmp
jno
pop
mov
push
jle
cmc
adc
cmpsb
cmpsb
mov
xchg
push
lock
and
addr16
call
mov
push
out
or
mov
mov
out
add
push
cltd
dec
fsubs
dec
inc
mov
and
cmp
mov
sbb
xor
xchg
mov
adc
or
fiadds
call
loopne
jge
shlb
aam
pop
push
mov
xchg
add
movsl
gs
pop
mov
push
cmc
add
lahf
inc
xlat
xchg
fnsave
or
mov
lods
iret
lds
movsb
mov
inc
stos
daa
pushf
insb
sbb
int3
in
xor
push
cmp
fidivrl
xor
push
sub
lret
mov
test
aas
pop
sub
and
enter
pushf
popf
adc
pop
and
repz
fnsave
outsb
mov
jb
jmp
pop
decb
lea
push
inc
mov
push
sbb
xor
dec
in
xchg
pop
mov
add
mov
movsb
shl
outsl
pop
mov
std
fdivrs
cli
mov
xchg
int
pop
loope
adc
mov
jle
into
mov
dec
xlat
mov
jno
jbe
std
jecxz
cmp
xchg
sub
xchg
push
push
popa
aas
cltd
sahf
and
sbb
dec
adc
ja
adc
cmovbe
push
xorb
ret
rolb
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
mov
mov
decb
adc
xor
pop
loopne
mov
lods
adcb
loopne
int
adc
fcoml
mov
fstpl
inc
jle
cmp
shrl
jmp
stc
inc
inc
shl
mov
popf
js
sub
daa
dec
lea
movb
cmp
adc
xchg
sbb
std
mov
ja
mov
xchg
fidivrs
pop
or
popf
cwtl
lcall
stos
popf
repnz
pop
ja
fbstp
js
data16
pop
les
pop
lcall
stc
mov
cmp
sbb
cmpb
outsl
rclb
pop
jmp
jge
adcl
leave
mov
icebp
loopne
mov
subb
dec
daa
and
and
movsb
adc
gs
dec
int3
cmp
negb
add
xor
add
call
sbb
xor
adc
into
fisubl
jecxz
in
adc
cmp
jmp
rclb
pop
cmp
outsl
pop
push
mov
and
cmpl
mov
sbb
gs
add
or
sbb
rcrb
pop
fdivs
cltd
or
dec
in
mov
adc
adc
fstps
xor
jb
dec
int3
setl
xchg
out
inc
mov
scas
fnstcw
addr16
decb
jg
push
pop
lods
in
in
push
xchg
sarl
mov
add
iret
lret
out
add
adc
shrb
test
shrb
inc
xlat
fsts
xchg
mov
lahf
push
rolb
out
rcrb
pop
pop
push
sbb
fdivl
icebp
xchg
cs
jmp
pop
rcll
push
mov
mov
push
repz
sub
out
mov
mov
addr16
cmp
repz
jnp
rorl
inc
popf
and
scas
mov
popf
inc
cmp
sarl
loop
cmp
inc
test
fcom
mov
sbb
fsubs
jb
lret
std
cld
mov
sub
bound
pop
mov
pop
js
push
sbb
adcl
mov
mov
and
addr16
dec
cltd
subl
repz
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
pop
adc
gs
jl
cmpsb
je
sbb
mov
out
xor
cmp
or
push
mov
movsl
push
xor
cmp
xlat
inc
out
loop
fdiv
call
jb
cmp
fs
js
pop
out
jp
sarb
mov
ret
insl
adc
rorb
xlat
dec
aad
in
sahf
mov
mov
xor
jne
pop
add
push
and
out
mov
jp
xlat
pop
xor
push
std
sbb
adc
adcl
sbb
jns
daa
adc
or
mov
xchg
js
scas
clc
dec
lock
loope
aaa
xchg
dec
orb
cmp
sbb
lret
jb
scas
cltd
add
cmpsb
mov
adc
fcoms
stos
movsb
das
fsts
and
int
daa
push
cmp
jl
adc
outsb
push
xchg
hlt
cs
fidivrs
daa
imul
lods
popa
js
push
insl
xor
icebp
insl
std
and
sbb
in
int
mov
mov
mov
dec
clc
lret
test
inc
jnp
pop
push
movsl
pop
ret
arpl
pop
sub
ret
sahf
xchg
add
mov
cmp
ja
sti
inc
jp
push
lock
cmpsl
shll
add
jg
adc
inc
sub
movsl
data16
pop
mov
pop
xchg
xlat
out
cltd
fdiv
dec
cld
mov
sub
jbe
faddl
adc
call
fldt
shl
or
les
push
nop
cmpsl
inc
addr16
push
loop
or
lods
jp
arpl
cmpsb
inc
push
adc
mov
sub
or
scas
mov
pushf
pop
aad
popf
mov
call
jae
jo
js
and
popa
je
aaa
mov
int
add
jnp
cltd
pop
pop
and
and
jmp
cld
or
xchg
nop
sbb
clc
cld
and
xor
std
lcall
and
cmp
rolb
lock
cmp
testl
int
push
bnd
ds
xchg
mov
sbb
dec
pop
sbb
sub
lods
test
fmull
and
daa
jnp
mov
test
xor
and
xchg
je
dec
push
jae
cltd
fdivs
lahf
xchg
es
rcrb
adc
jbe
sbb
out
push
mov
ja
mov
cmp
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
subl
cmpsl
mov
data16
adc
or
mov
dec
or
lcall
notl
pop
test
rol
adc
mov
addl
dec
add
mov
cs
push
inc
sbb
pop
push
jecxz
aaa
jle
dec
push
cmpsl
sub
xchg
mov
iret
jns
int
push
cmp
loopne
cmpsb
pop
mov
je
shrl
inc
negb
in
mov
inc
movsl
lods
sbb
ss
sub
mov
jl
sbb
jb
push
icebp
js
icebp
sbb
lods
cmpsl
adc
jmp
inc
adc
dec
int3
testl
jle
mov
sub
lock
mov
lea
xchg
xlat
add
mov
adc
stos
jle
cmc
mov
mov
fcomps
dec
pop
aam
mov
lcall
cmp
sub
cmc
ja
sub
aaa
xchg
pop
loop
push
mov
xor
sti
mov
jb,pt
jp
lods
dec
or
push
push
aam
sbb
jno
in
pusha
adc
rcl
loopne
gs
xchg
push
imul
leave
test
sub
dec
push
inc
dec
ja
sub
sarl
push
mov
mov
mov
jge
cmp
lods
les
cmpl
mov
in
sub
call
mov
jmp
xchg
and
ljmp
hlt
xchg
popf
sbb
add
popa
aad
adc
inc
mov
nop
push
add
adcl
loopne
icebp
aaa
push
imul
mov
data16
inc
insb
clc
aad
adc
gs
stos
rorl
aas
add
fcoml
sub
cmpsb
and
es
mov
xor
stos
cmp
addr16
xor
mov
cmp
cltd
push
push
mov
push
imul
inc
mov
aas
std
stos
iret
dec
lods
insl
pop
inc
ljmp
pushf
outsl
push
cmpb
push
push
aaa
fs
hlt
adc
or
xchg
pop
data16
add
push
rcl
cmp
cmp
lods
jns
push
je
cmp
cwtl
xchg
push
pop
scas
jmp
sbb
out
dec
ficompl
std
loope
inc
xchg
mov
xchg
xchg
jbe
scas
jbe
sub
cmp
and
jl
fdivl
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
int3
mov
adc
popf
movlps
idivl
and
scas
xor
fnstenv
fldl
ja
mov
mov
jle
leave
sbb
lcall
inc
loopne
push
js
push
mov
or
and
in
add
sbb
cwtl
jg
fisubs
mov
in
jb
std
dec
fs
sub
pop
jae
xor
dec
lods
dec
mov
sbb
idiv
in
ret
dec
and
adc
sarl
sbb
xor
dec
jmp
bound
dec
cwtl
out
lret
cld
roll
stos
mov
adcb
imulb
fmulp
bound
and
lret
mov
fnstcw
popa
pop
setne
and
insb
dec
dec
inc
xchg
insb
mov
inc
mov
arpl
icebp
sbb
dec
add
loope
insl
loope
dec
pop
push
test
lods
repnz
pop
ljmp
push
sub
sbb
xor
leave
repz
adcb
xor
test
sbb
jle
shrb
mov
xchg
cmp
shl
jno
lods
and
add
jns
mov
inc
pop
ds
sbb
and
out
lods
loope
pop
cmp
pop
lea
aam
and
ret
sub
mov
addb
push
dec
sti
notl
xor
insb
cmp
imulb
mov
stos
push
cmp
inc
or
inc
hlt
xorb
inc
jmp
movsb
jge
aam
add
pop
scas
stos
push
push
sbb
fcmovu
xchg
cld
pop
mov
call
inc
mov
loope
pop
push
dec
cmpsl
dec
pop
test
int
add
inc
push
cmp
xor
mov
or
icebp
imul
int3
xchg
movsb
repz
es
mov
incl
cmp
mov
push
orb
loopne
call
xlat
insb
mov
add
sub
push
pop
iret
adc
cmpsl
cmpsb
mov
scas
lock
std
inc
imul
xchg
or
push
dec
das
sbb
inc
cmp
js
pushl
pop
fcom
outsl
mov
sub
inc
push
xchg
in
and
repnz
dec
jno
or
outsl
pop
jo
push
push
mov
and
cmp
in
jb
cltd
fstpl
push
movsb
push
cmc
push
xchg
sub
xchg
push
rclb
fadds
mov
out
andb
adcb
mov
xchg
mov
icebp
enter
pop
daa
cmpb
mov
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
mov
adc
popf
movlps
shlb
call
fistpll
push
outsl
repz
cmp
mov
xor
fisubrl
fstpt
lock
mov
pop
mov
andb
test
pop
insl
addl
loopne
lret
and
adc
shll
sahf
inc
popf
repnz
cmp
cmp
lods
or
ja
mov
xchg
mov
mov
lock
cmc
inc
lret
mov
lea
and
movb
je
je
mov
ficoml
in
xlat
lea
subb
and
mov
and
cs
pop
cmp
cmp
pop
add
adc
inc
push
adc
gs
or
std
mov
dec
fcmovu
xor
mov
xor
outsl
xor
and
sbb
push
pushf
dec
imulb
ret
adc
xor
and
add
push
outsl
or
clc
jnp
iret
sub
push
push
dec
mov
sub
leave
fmul
cwtl
and
sub
jg
push
loopne
clc
ds
dec
test
add
shl
in
and
sub
push
stc
ja
lret
in
sub
mov
pop
movsl
inc
inc
test
fidivrs
call
jmp
fcmovnu
stos
push
xchg
cmpsl
xor
mov
inc
fildll
jne
rolb
sbb
aaa
mov
pushl
popa
es
sbb
mov
lds
push
adc
mov
stos
inc
mov
push
push
inc
fwait
loopne
mov
push
adc
stos
sti
int
mov
fadds
adc
sti
out
and
fisttpl
jg
inc
in
adc
sbb
rcl
fistps
and
add
xchg
xor
daa
inc
mov
stos
cmpsl
mov
mulps
cmp
jo
xlat
cmpsb
xor
and
or
ret
data16
lahf
sbb
clc
call
enter
enter
and
fsubrp
outsl
add
push
xlat
stos
cmpsl
xchg
ret
lea
push
sti
aas
add
jns
aad
xor
and
into
mov
fucom
std
jmp
mov
jne
sub
fsubl
adc
pop
mov
lret
cld
add
push
ds
lahf
cmpb
or
mov
cli
in
in
or
or
mov
es
lock
dec
pop
sbbb
xchg
inc
pusha
mov
pop
xchg
repz
add
cmp
stos
je
aam
repz
sbb
imul
mov
and
icebp
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
xor
adc
popf
movlps
jo
ds
insl
add
sbb
push
mov
lea
lret
cmpsl
adc
ja
cmpsl
adcb
mov
lods
loope
push
pop
inc
sub
cmc
or
sub
mov
popa
xlat
out
mov
jge
dec
adc
nop
popf
lret
lret
mov
adc
clc
popf
xchg
repz
cli
push
iret
fimull
int
push
fsubrl
clc
in
dec
add
add
dec
push
xchg
mov
mov
jb
iret
and
test
jb
jno
shl
sbb
subb
cmpsb
add
mov
loop
and
or
icebp
and
or
mov
pop
orb
lahf
jle
jae
mov
outsb
inc
xor
ss
bound
cld
push
fmuls
test
andb
fwait
inc
xchg
cwtl
jmp
jmp
push
mov
add
das
dec
les
cmp
xor
sahf
xor
lods
xorl
inc
lock
lcall
cld
mov
push
mov
mov
fdiv
fidivl
jno
and
test
push
out
adc
out
adc
inc
mov
ljmp
rcll
inc
dec
cmp
jl
rorb
push
jae
pop
inc
sbb
loope
dec
es
xlat
pop
pop
dec
aad
das
aaa
push
inc
push
pop
jmp
push
aaa
dec
mov
lahf
mov
sbb
xchg
out
add
mov
dec
movsl
mov
dec
xor
push
ljmp
cmp
push
std
faddl
push
inc
inc
pop
in
add
sarb
xchg
and
dec
add
inc
sbb
push
inc
negl
or
sarl
jle
push
popf
mov
loop
adc
call
cmp
sbb
int3
lods
inc
fwait
dec
sbb
inc
aaa
cwtl
mov
inc
out
cmp
fs
das
cwtl
mov
arpl
xchg
lahf
sahf
addr16
bound
sub
in
incl
in
in
movsl
fnstcw
dec
add
in
insl
mov
jmp
adcb
pushf
movsl
push
loopne
lods
xchg
jl
inc
dec
mov
xchg
jbe
mov
stos
pusha
cmc
xor
out
and
push
jg
push
mov
dec
scas
mov
aas
lcall
mov
and
xor
in
ss
push
xchg
jnp
add
dec
or
test
in
clc
lods
out
aam
push
shlb
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
jns
sbb
hlt
lods
xchg
mov
inc
scas
sbbl
rorb
movsb
insl
addl
mov
mov
cwtl
lret
ret
mov
call
inc
mov
aam
popa
inc
lcall
pop
sub
sub
mov
sbb
push
push
xchg
adc
mov
hlt
test
in
mov
sbb
push
ja
push
pop
mov
adc
aad
dec
stos
lret
mov
xor
stc
imul
imul
inc
xor
movsl
add
pushl
push
popa
sbb
int3
push
fmulp
xor
aad
stos
insl
fists
mov
cltd
fwait
test
jl
mov
add
test
int3
lds
loope
icebp
les
icebp
sahf
movsb
sub
mov
mov
sarb
std
add
or
pop
cmp
jno
xor
dec
sub
dec
dec
imull
stos
xchg
xchg
cmc
push
sahf
mov
pop
pop
bound
sahf
adc
stc
push
clc
data16
sbb
dec
sub
xchg
and
and
add
out
in
and
out
mov
popf
push
mov
iret
add
aad
jle
and
ljmp
ds
cmpsb
in
jo
and
scas
lret
mov
mov
dec
jnp
clc
out
cli
imul
cmp
pop
mov
nop
scas
int3
ficoms
into
lcall
mov
clc
ror
pop
xor
sbb
iret
dec
aas
test
pop
mov
movsl
dec
jp
call
and
inc
ja
rolw
jbe
jbe
push
sbb
sti
jo
jae
ret
in
pusha
idivl
sbb
leave
popf
jg
jns
fs
jne
ja
mov
jns
lret
aaa
and
and
ljmp
dec
movsb
push
pop
mov
aam
mov
mov
sbb
in
repnz
adc
fldenv
push
sub
jae
adc
push
loop
xchg
add
adc
loope
push
rorl
and
lods
outsl
int3
sub
test
fwait
xor
inc
mov
cwtl
cmpsb
outsb
push
ljmp
icebp
je
dec
jg
pop
shl
pop
js
loope
mov
xchg
in
fdivs
aad
rcrb
repnz
push
mov
mov
mov
cmc
sbb
repnz
ret
insb
cmp
xor
clc
mov
pop
enter
jmp
shrl
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
mov
pushl
insb
rolb
push
or
inc
or
hlt
pop
scas
test
ret
cld
inc
mov
and
mov
int
mov
pop
mov
insb
cld
inc
lods
xchg
test
cmc
adc
dec
cld
pop
lcall
movsb
inc
adc
mov
stos
cmp
push
xor
dec
test
adc
mov
add
adc
push
cmp
test
outsl
fld
seto
push
adc
adc
pop
in
push
sbb
push
outsl
std
scas
mov
push
mov
mov
aas
push
and
add
sub
jge
in
and
fisubrs
lock
cmpsb
sarb
mov
inc
fildll
ds
or
dec
mov
xor
daa
lcall
cmpsl
dec
and
add
inc
sbbb
popa
cmp
inc
pushf
jl
jae
faddp
dec
pop
rorl
mov
lcall
pop
fwait
out
mov
shlb
and
imul
faddl
and
nop
push
push
loop
jb
pop
dec
pop
mov
and
xchg
jns
mov
jl
mov
mov
sub
sar
pop
out
xchg
push
sub
jo
xchg
dec
mov
mov
daa
shl
and
cmp
sbb
pushf
inc
and
mov
paddusw
leave
popa
sub
push
dec
push
mov
cmc
enter
fadd
inc
pusha
mov
fisubrl
addr16
xor
and
repnz
cs
and
xor
scas
dec
jge
or
mov
cli
mov
mov
loope
add
fcmovnbe
and
or
jle
ds
xchg
or
mov
push
fistps
adc
test
shrl
dec
in
and
or
push
push
cmpsl
inc
test
jg
inc
jae
movsl
add
shrl
mov
and
fwait
cmp
lahf
jmp
je
aad
data16
inc
jns
mov
faddl
repnz
cs
mov
std
arpl
aaa
dec
bound
push
add
mov
fadds
stos
jo
add
lods
push
pushf
lds
mov
movsl
in
mov
jb
mov
xor
push
mov
push
jl
aaa
cmp
push
pop
mov
sub
out
cld
test
adc
xor
shl
mov
inc
daa
dec
inc
movl
jmp
data16
add
adc
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
sub
pop
adc
iret
movlps
push
out
fisubl
add
jg
push
out
mov
xlat
jp
out
in
mov
add
jae
clc
lret
gs
inc
in
test
jg
xchg
inc
into
outsl
in
sbb
mov
aaa
add
add
movsl
jbe
and
leave
mov
cmp
jno
dec
jge
sub
cmpsl
fldcw
cmp
lock
imul
xchg
mov
imul
mov
inc
push
sahf
push
push
dec
xchg
in
negl
jge
cli
dec
or
cld
stos
call
in
aam
gs
hlt
pop
je
jbe
mov
sbb
fisubrl
push
scas
movsl
adc
or
push
pop
icebp
popa
pand
test
cmp
push
enter
sub
insb
fidivrs
gs
adc
adc
mov
shlb
test
loop
jb
icebp
jne
and
lret
jno
mov
ds
and
pop
idivl
xor
dec
inc
rclb
xchg
pop
aad
inc
out
mov
mov
add
or
out
jns
dec
ret
ret
sarb
in
test
fimuls
fistpll
mov
nop
xor
js
scas
sbb
loope
jg
pop
mov
sbb
or
inc
loopne
cmp
leave
pop
push
cmc
mov
clc
lea
xor
inc
imul
fsubrl
icebp
jb
push
sbb
mov
jmp
sbb
movsl
cld
mov
mov
imul
xchg
mov
cmp
test
push
stos
std
repz
push
cmp
cltd
lea
push
jmp
out
push
adc
scas
mov
mov
mov
and
lahf
sub
leave
imul
inc
jl
outsb
push
mov
loope
out
push
fsubrl
adc
jno
ret
adc
jle
ja
popa
fidivrl
je
xchg
scas
mov
imul
stos
gs
push
or
xor
pop
stc
scas
pop
dec
jmp
ret
inc
out
sub
xchg
and
pushf
inc
lret
daa
inc
push
ret
jp
mov
or
mov
aaa
pop
sub
clc
cmp
cmp
loope
xchg
rorb
lds
clc
push
cmp
mov
mov
hlt
sbb
clc
cld
aaa
mov
rolb
lods
cltd
mov
cld
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
shrb
sbb
adc
jb
mov
inc
cltd
pop
gs
stos
ficoms
push
or
xchg
sub
inc
sti
mov
je
xchg
fcoml
inc
enter
stos
pop
xor
js
out
push
das
pop
insb
les
mov
loop
dec
test
fcom
inc
mov
in
jmp
cmp
leave
xlat
fsubs
cltd
imul
add
in
clc
shll
stos
sbb
inc
jb
lret
shr
in
pop
pushf
sarl
jge
pushf
xlat
clc
sahf
push
das
dec
xlat
mov
je
ja
xor
jmp
pop
xor
leave
dec
dec
xor
adc
int
in
push
insl
jno
xchg
lret
mov
imul
or
pop
andl
push
movsl
faddl
aas
dec
jmp
insl
push
add
push
out
loopne
dec
std
test
or
jge
iret
mov
lods
dec
bound
outsl
js
fs
mov
ss
mov
fdivs
inc
fisubrl
inc
fisubl
inc
ret
jae
and
inc
repz
test
arpl
inc
clc
popa
add
mov
ja
sub
xchg
sbb
adc
cmp
test
xchg
in
outsb
add
jnp
mov
xchg
out
sbbb
or
pop
lods
pop
outsl
push
jle
mov
pop
jecxz
and
mov
jp
cmp
add
shl
pop
out
das
inc
aam
bound
pusha
es
pushf
test
lahf
add
xchg
js
mov
push
jnp
mov
nop
call
call
dec
add
imul
test
inc
sarb
jmp
and
int
aam
ljmp
sub
add
jmp
lret
mov
pop
orl
test
les
out
aaa
out
cmp
int3
aas
movsb
in
std
sub
negb
push
mov
push
cmpsb
dec
pop
mov
aaa
ret
ljmp
xchg
xchg
push
enter
xchg
icebp
pop
xor
neg
data16
adc
into
xor
stos
pop
imul
xchg
les
sub
mov
xor
test
adc
fistpl
fsubl
pop
mov
das
lock
pcmpgtb
push
sub
adc
sub
pushf
or
or
fnstcw
mov
adc
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
cli
scas
mov
movlps
iret
insb
inc
xor
or
or
add
repnz
popa
xchg
xchg
call
lods
sub
mov
add
xor
or
adc
sti
scas
outsb
xor
pop
dec
pop
fldl
jmp
sbb
add
pop
mov
mov
dec
push
shlb
jmp
inc
ret
pop
xchg
enter
aas
adc
pop
or
fnstenv
pop
movsb
dec
inc
push
aad
out
es
repz
pop
sub
mov
mov
aas
push
mov
sbb
jno
mov
divb
and
inc
xor
inc
mov
aam
test
cmpl
jmp
incl
or
xchg
into
fcomp
ffreep
shll
and
add
adcb
mov
flds
cmpsb
shl
inc
pusha
es
fwait
cmp
mov
mov
lds
pushf
in
popa
sarl
scas
outsl
adc
icebp
dec
fs
xchg
push
stos
sub
lods
fimull
inc
xor
popa
ficoml
or
dec
and
shrl
mov
repnz
inc
jle
push
xor
repnz
xchg
xor
inc
stos
mov
inc
inc
popa
inc
mov
sbb
mov
or
std
scas
dec
push
fnstcw
mov
jmp
mov
int
push
cmp
out
mov
push
mov
aaa
loop
lahf
lock
imul
leave
aad
mov
push
js
movsb
outsb
int3
arpl
jne
xor
div
lahf
jbe
jle
xlat
in
pop
mov
pop
aaa
add
into
and
and
out
in
jne
into
aam
popf
stc
cs
insl
and
xor
sbb
cld
or
mov
mov
fyl2xp1
out
dec
cld
jb
ret
fiaddl
lock
add
xor
mov
jo
pop
mov
and
cwtl
and
cmpsb
add
xchg
andb
dec
xor
hlt
or
addr16
sar
andl
lret
or
sahf
jae
lret
mov
mov
push
enter
arpl
fildl
push
mov
pop
mov
jb,pt
les
ret
mov
movsb
movsl
pop
mov
rcll
push
test
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
aad
mov
iret
movlps
mov
fs
jp
jp
xchg
xchg
dec
mov
stos
lds
lcall
mov
mov
sbb
adc
push
mov
bnd
pusha
push
jno
fnstcw
pop
lock
jns
dec
and
testb
in
dec
inc
xchg
js
push
inc
sub
and
mov
divl
lcall
stos
lods
xor
imul
add
xchg
push
push
push
mov
test
jecxz
data16
push
jno
daa
dec
mov
in
test
mov
nop
lcall
ja
mov
or
addr16
test
cltd
jge
add
cmp
inc
mov
cmpsl
fisttpll
cmpsb
cmp
into
or
lea
push
data16
or
pushw
cmc
icebp
jge
and
mov
out
clc
pop
js
add
call
xor
mov
lods
adc
fsubrs
jae
cmpsl
fcomip
dec
or
mov
lcall
xchg
cmc
loop
popf
lods
les
mov
in
test
dec
popf
test
dec
xlat
sub
pop
lds
stos
or
mov
xlat
jp
aam
testl
xor
daa
repz
jb
fs
jb
mov
push
cltd
bound
ja
fistpll
lahf
pop
popa
mov
mov
adc
xchg
addr16
and
push
adc
mov
int
sub
rorl
adc
push
arpl
icebp
insb
xor
mov
clc
sahf
pop
mov
push
cmp
add
adc
push
imul
test
imul
outsb
adc
addl
daa
pusha
mov
mov
cmp
ja
ret
fwait
call
sub
cmove
mov
add
std
out
xchg
neg
imull
and
pop
daa
pusha
lahf
dec
sub
jo
push
fisubl
xchg
push
pop
insl
dec
fldl
out
hlt
into
daa
mov
icebp
test
push
lock
push
ficomps
jg
or
int3
jg
ss
or
test
mov
push
xchg
fdivrs
sub
push
push
or
or
jmp
dec
pop
imul
enter
add
adc
movlps
inc
jne,pt
aas
sub
je
mov
jecxz
push
iret
cmp
mov
stos
pop
mov
add
lcall
fcomps
das
stos
push
adc
mov
out
or
push
inc
cmp
pop
dec
pop
and
movsb
dec
stos
mov
inc
lret
icebp
pop
add
dec
lds
int
iret
dec
scas
add
cmp
push
cmp
xchg
pop
in
lret
sub
cld
cmpsl
scas
xor
mov
xchg
pop
cmpsb
js
idivb
cmp
dec
push
mov
lds
cpuid
ret
push
fistpl
out
outsb
cmp
cmp
outsb
ss
jge
dec
cmp
push
xchg
mov
jns
ret
or
and
dec
outsb
push
xchg
xchg
push
mov
int3
adc
xor
shll
in
cmp
add
pop
xchg
test
inc
dec
mov
mov
xchg
dec
sbb
shl
into
push
add
lahf
xor
dec
inc
and
push
rcrl
mov
es
xchg
ror
int
sub
inc
bound
mov
loop
xchg
std
sti
popa
or
and
pop
nop
add
ljmp
or
sbb
fcoms
out
enter
lea
and
inc
mov
scas
stos
push
xchg
insl
jp
sahf
movsb
mov
jge
je
mov
push
push
fstl
jg
mov
loopne
mov
test
push
fnstsw
jl
jp
hlt
enter
dec
es
leave
pop
aam
push
gs
xchg
fidivrs
dec
push
inc
push
ficompl
fsubs
pop
aam
mov
inc
sbb
push
jle
xchg
add
mov
inc
data16
jo
add
notb
inc
test
insb
sub
or
xor
roll
add
mov
out
adcl
out
xor
mov
cmp
out
idiv
pop
add
jmp
xchg
xor
jae
lsl
popf
repnz
sahf
mov
aaa
adc
xchg
cmp
lret
jle
cmp
xchg
or
inc
fidivl
lret
repz
push
scas
out
cmp
sub
ss
cwtl
fstpl
outsb
xor
sbb
out
inc
pop
and
sbb
mov
mov
ljmp
xor
movsb
and
dec
push
dec
jg
ror
xlat
test
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
and
daa
inc
sbb
movsb
jne
push
movsb
jecxz
adc
dec
es
gs
cmp
movsb
fsubrp
int3
xor
jmp
out
jg
jge
cwtl
jmp
mov
lds
xor
test
xchg
adc
js
push
mov
cld
fdivrs
call
into
aas
pop
negb
pop
cmc
loopne
pop
push
jno
subb
test
sahf
ss
mov
mov
and
pop
bound
cmpsl
iret
les
push
cmpsl
leave
or
mov
lock
subb
xchg
hlt
pop
loopne
ljmp
inc
xchg
cmp
popa
jecxz
and
cmp
mov
adc
push
in
mov
xchg
or
aam
sbb
jnp
stos
jb
mov
push
cmpsl
pop
aas
xor
js
add
and
push
adc
loop
jl
cmpsb
aad
or
sub
add
sbb
bound
cs
cmpsb
pop
std
mov
int
stos
push
add
enter
dec
fidivl
lods
into
call
fisubrl
int3
and
rcrb
push
add
test
mov
and
cmp
adc
and
adc
xchg
hlt
add
enter
push
in
inc
inc
or
mov
hlt
stos
adc
inc
call
xchg
mov
lods
sbb
addr16
and
lcall
sub
in
idivb
in
push
jp
cmp
xor
mov
ds
loope
shrb
mov
mov
ror
mov
mov
pop
push
cld
mov
sbb
scas
or
jns
movsl
pop
icebp
xor
lret
cmp
inc
add
into
pusha
je
pop
xor
lret
fdivrs
cmp
or
shl
mov
mov
lods
mov
icebp
cmp
aas
cmp
mov
test
adc
sbb
xchg
adc
sti
xor
shlb
mov
movsb
cli
inc
push
lods
pop
dec
add
mov
stos
outsb
or
ret
out
dec
in
mov
pop
mov
jnp
mov
int3
stc
nop
imul
imul
daa
mov
or
mov
dec
cltd
sub
sbb
es
sub
daa
mov
add
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
xchg
outsb
insb
cld
call
adc
shrl
mov
mov
mov
es
pop
sbb
adc
sub
add
pop
es
xchg
dec
shlb
xlat
hlt
adc
mov
sbb
ja
mov
mov
or
daa
xor
xor
sbb
loop
jnp
dec
pop
push
push
enter
lds
jge
inc
jle
cmp
popf
mov
jae
mov
xlat
stc
inc
lea
xchg
repnz
cmpsb
or
and
or
clc
jae
xor
mov
xor
ja
jno
imull
out
sbb
arpl
pop
push
mov
inc
lahf
addr16
cmpsb
xchg
xor
enter
sub
or
xor
fsubr
out
shrl
inc
push
adc
push
xchg
push
push
xchg
push
std
or
jo
cld
mov
xchg
and
jnp
rol
mov
hlt
test
xor
sub
sub
fsubrl
xchg
sbb
orb
data16
inc
mov
repnz
js
adc
sbb
lret
leave
ss
or
rcrb
and
lock
mov
insb
js
mov
xchg
dec
mov
das
dec
jns
pop
pop
mov
mov
inc
xchg
cld
add
das
or
imul
jg
ret
jp
mov
xor
mov
loop
lock
loopne
lds
test
xchg
sub
push
pusha
daa
mov
mov
fisttpll
ficoml
mov
cltd
mov
jecxz
in
or
outsb
xlat
out
jo
mov
test
int3
add
imul
stos
cmpsl
xchg
mov
mov
push
into
lret
cmc
mov
mov
cld
aas
pushf
add
cli
es
pop
lahf
jne
dec
sahf
repz
inc
mov
jae
ficoms
cmp
mov
mov
sub
aaa
xchg
adc
inc
mov
sbbl
mov
cwtl
imul
cmpsl
cmpsb
push
and
les
sbb
insl
cltd
inc
clc
in
adc
inc
in
or
movsb
imul
and
mov
cmp
movsl
jno
iret
pop
dec
or
loopne
pop
xlat
loopne
cmp
ja
xchg
sub
aas
movsl
push
movsl
mov
adc
fimuls
cmc
lret
int
into
jno
add
cmpb
outsb
push
xchg
pop
inc
sbb
inc
popf
push
add
insb
xor
stc
fcomps
add
fisttpl
cmp
push
sub
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
or
jp
add
daa
mov
fldenv
jp
dec
andl
or
nop
and
adc
inc
js
mov
daa
pcmpgtb
aam
sbb
lret
call
imul
int3
loopne
xchg
fsubs
divb
inc
lcall
imulb
int
daa
mov
push
cmp
xor
andb
imulb
imul
inc
pop
cmpsl
test
iret
andl
mov
pusha
pop
popa
and
add
mov
nop
pop
mov
sub
pop
dec
xchg
in
jb
xacquire
mov
loop
ffree
sti
jbe
fidivrs
dec
push
or
adc
in
inc
cwtl
dec
pop
mov
xor
pop
mov
movsb
xchg
ljmp
mov
shlb
aam
cmp
push
icebp
fistps
sbb
movsl
pop
test
idivb
push
xor
lcall
jae
loop
push
test
inc
pop
out
out
mov
idiv
insb
sub
cmp
push
lcall
and
in
mov
pop
ljmp
addl
lock
inc
mov
sub
xor
insl
push
push
lods
in
roll
movsl
mov
add
dec
xchg
ror
and
enter
mov
loop
cld
testb
xchg
mov
xchg
aaa
adc
cmp
mov
push
aas
loop
mov
cmp
xor
ljmp
icebp
shl
jbe
scas
nop
xlat
test
pop
std
or
aas
add
mov
orl
push
adc
inc
mov
push
or
pop
lods
sub
cmpb
pop
xchg
sbb
or
es
sub
pop
lods
sbb
in
push
and
dec
inc
adc
lock
push
shll
cld
jb
shll
jb
push
xor
cltd
xor
xor
movsl
adc
cli
loope
js
scas
cmpsl
repz
enter
xor
in
test
jmp
popa
add
es
xchg
insl
test
cmp
jmp
push
jbe
push
dec
mov
mov
loop
or
in
xchg
pop
inc
testb
stos
cmp
and
icebp
pushf
loopne
xchg
sub
or
hlt
fucomi
pop
leave
inc
xor
push
fsubr
fcomp
sbb
inc
mov
out
idiv
daa
push
mov
arpl
and
scas
sub
loopne
ljmpw
jl
xor
enter
add
add
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
push
testb
iret
movlps
inc
popa
arpl
push
mulb
xor
cmpsl
push
inc
mov
js
test
ja
mov
mov
rcrl
mov
sbb
jb
jmp
mov
pop
loop
cli
add
fwait
cmpsl
push
push
sbb
inc
sbb
jmp
mov
sbb
mov
inc
test
int
or
add
daa
fcomps
mov
sbb
in
insl
xchg
leave
add
fs
lret
ljmp
sbb
adc
imul
cmp
jnp
adc
lea
inc
insl
aam
popf
loop
inc
push
fs
outsl
mov
or
movsl
addr16
xor
jne
or
xor
mov
cmp
fadd
sub
xchg
ljmp
xor
enter
movsb
push
push
add
loope
fs
jge
lds
push
scas
dec
xchg
cmpl
stc
xchg
data16
aaa
out
cmp
push
flds
addr16
cmp
cmc
jp
push
jle
jge
fs
sbb
pusha
addr16
inc
fcoms
mov
popa
xchg
push
dec
daa
pop
ret
cmp
mov
xchg
sbb
push
sbb
xorl
jns
push
nop
cwtl
negl
jl
push
popa
cmp
xor
in
pushf
inc
inc
mov
cld
and
divl
std
cmp
dec
loope
xchg
inc
lret
sub
je
xchg
add
or
push
dec
pop
add
ret
dec
filds
lds
ja
mov
mull
pop
pop
adc
inc
cmp
je
jp
mov
shrb
mov
pop
sub
lahf
fmull
aaa
jle
cmp
cld
adc
out
or
lods
lcall
test
cmp
cld
mov
les
lcall
jo
int
rep
sub
mov
enter
ret
js
mov
stc
repnz
cmpsl
inc
jecxz
inc
lret
sbb
push
pop
jp
xchg
xor
mov
xlat
mov
and
pop
and
dec
push
mov
imul
inc
inc
ja
and
mov
test
outsl
adc
or
fidivs
sbb
rcr
scas
inc
pop
stos
sahf
cltd
test
xor
add
cmpsb
cmp
mov
cmp
xchg
and
inc
aad
lret
mov
clc
push
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
aas
or
mov
iret
movlps
test
aas
ljmp
add
cmp
xchg
in
mov
cmp
mov
repnz
adc
mul
xchg
mov
cmp
sbb
dec
adc
outsl
insl
adc
dec
pop
imull
nop
or
lea
fdiv
jecxz
in
cld
xchg
cs
xor
rcr
push
jns
shrl
push
loop
loopne
mov
scas
sub
andl
mov
and
test
dec
jae
hlt
mov
sub
addr16
add
xorb
xchg
hlt
push
cwtl
in
push
arpl
jno
pop
push
out
pop
inc
adc
pop
fdivrl
xchg
push
sahf
push
jge
cmp
mov
movsl
xlat
in
std
and
add
sbb
pop
xchg
mov
daa
mov
jns
dec
andl
or
mov
dec
stc
movsl
ja
leave
clc
addr16
jo
sub
mov
inc
std
in
fsts
xchg
push
mov
invd
adc
cmpsb
and
lods
inc
sbb
jecxz
push
lahf
jmp
sbb
and
sbb
inc
pushf
mov
sbb
inc
out
pop
and
push
les
in
into
cmc
adc
aad
push
inc
insb
push
jmp
mov
in
mov
leave
adc
into
mov
jp
push
xchg
into
xchg
outsb
sbb
in
inc
adc
xlat
mov
xor
lock
leave
aad
lods
mov
and
sub
mov
pop
push
out
loope
loope
mov
dec
dec
stc
add
pop
jp
outsb
out
cli
jae
sub
adcb
mov
insb
hlt
sub
add
push
in
inc
xchg
rcrl
mov
jne
ffreep
leave
hlt
cmp
jae
and
jmp
push
imull
sahf
lea
and
popf
into
dec
arpl
sbb
add
mov
test
dec
cmpsl
dec
repz
pop
cwtl
call
push
jne
sbb
fnsave
dec
into
mov
ror
push
xor
lods
push
iret
int
stos
inc
shll
and
popa
sub
test
idivb
jmp
pushf
push
xchg
and
sbb
in
idivb
ret
shll
call
push
mov
addl
insl
xlat
cmp
push
lahf
mov
ljmp
mov
cli
rcrb
dec
lahf
mov
in
out
shrd
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
push
mov
iret
movlps
cwtl
movsb
psubsb
int3
jl
scas
inc
xchg
repz
std
repnz
push
or
pop
gs
addr16
fildl
mov
sbb
lret
int3
mov
sub
inc
pop
addb
jbe
faddp
movl
xchg
insb
inc
cs
mov
ja
fistpll
test
fnop
dec
leave
insb
scas
daa
mov
and
jl
iret
rcrl
mov
cmp
jge
add
mov
dec
test
out
push
int
or
cmp
jbe
jae
ss
daa
cmp
cwtl
repz
adc
fimull
mov
xor
cld
adc
in
xor
and
jmp
mov
jmp
lcall
fidivl
or
inc
mov
add
or
mov
sub
push
mov
test
add
mov
es
stc
out
mov
push
push
and
sti
std
fwait
xor
pop
add
sbb
pushf
fcomps
and
jg
push
and
add
popa
dec
and
rcr
lcall
lods
arpl
lock
push
loope
ss
iret
mov
pop
movsb
les
xchg
das
into
test
aaa
outsb
cmp
jbe
les
mov
insb
jns
mov
xor
sarb
dec
inc
loopne
repnz
scas
daa
add
fs
push
popl
mov
sbb
aad
jbe
xlat
pop
cmp
xchg
push
push
pop
xor
out
out
out
mov
sbb
test
test
inc
test
add
and
test
dec
add
aam
inc
or
xor
lock
mov
lods
sbb
shll
fcompl
jp
mov
fldcw
call
jmp
dec
mov
inc
sub
add
std
xor
sbb
shlb
xchg
mov
and
dec
cmp
inc
and
in
jp
dec
icebp
mov
cltd
cltd
dec
shlb
pop
mov
pop
adc
dec
adc
cmp
outsl
inc
add
test
sbb
into
push
add
popf
sahf
jo
dec
push
cmp
imul
cmp
jp
push
push
mov
imul
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
call
adc
mov
ja
arpl
push
stos
inc
fisttpl
xor
cmp
les
xor
push
push
bound
icebp
int
loop
xlat
fsts
lret
pushf
jbe
mov
fwait
adc
fbstp
stos
cmp
pop
pop
lock
jge
pop
cli
cmp
add
sbb
pop
xchg
or
jne
pop
mov
int
es
push
negb
mov
push
arpl
dec
cld
insl
lret
cmovs
call
inc
dec
or
popf
mov
and
data16
out
out
push
mov
or
jmp
mov
aad
mov
cmpb
insb
into
lcall
test
sub
xchg
push
ror
arpl
and
and
or
sbb
aaa
cmp
vmwrite
cmp
stc
movsb
int
cltd
out
test
test
jmp
pop
in
sbb
ja
dec
mov
outsl
or
je
jl
mov
xchg
fwait
jle
test
outsl
dec
jbe
loopne
and
addr16
int3
jle
mov
out
add
hlt
push
movsb
mov
jg
inc
xchg
outsb
test
add
xchg
jb
xchg
dec
dec
sub
push
push
rcrl
and
orb
mov
test
sub
insb
mov
sbb
subl
imull
sub
aaa
test
sbb
mov
xchg
mov
mov
out
ds
das
jl
inc
shl
push
shll
lods
push
or
or
rcll
popa
push
adc
lods
push
mov
or
aas
mov
inc
mov
out
cmpsl
test
cs
movb
aad
adc
add
inc
cmp
pop
push
push
mov
insb
rorb
sub
lcall
xchg
enter
inc
and
aas
xchg
lods
jae
adc
jb
les
sub
test
inc
jb
sbb
hlt
popf
mov
ljmp
inc
and
add
int3
pop
test
and
fwait
test
mov
mov
xchg
fwait
push
daa
mov
insl
push
out
lods
lods
ljmp
mov
mov
xchg
mov
push
add
mov
and
loop
or
mov
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
sub
fs
adc
movlps
test
push
sbb
ret
popf
cmp
cmp
aaa
mov
lcall
xor
pop
mov
out
lea
mov
mov
add
dec
rclb
add
call
xchg
pop
pop
sbb
stos
adc
jns
mov
mov
xchg
mov
pop
imull
ljmp
mov
arpl
notb
arpl
cmp
popl
jg
cltd
in
adc
adc
sub
add
out
mov
out
shll
jno
add
testl
or
mov
dec
out
cwtl
sub
and
push
das
scas
pop
fsubl
or
sahf
mov
insl
sub
pop
loope
pop
and
jge
fcmovb
aam
xlat
cs
outsl
shl
mov
add
outsb
jns
rclb
aas
mov
dec
es
xchg
int
add
shll
xor
imul
push
push
flds
pop
cwtl
aas
cmp
test
xchg
pop
pop
and
sbb
cmp
addr16
out
std
and
xchg
ljmp
xchg
add
xchg
push
and
outsl
scas
push
jge
xchg
mov
mov
push
mov
fs
test
push
out
pop
mov
pop
cmc
mov
std
mov
sbb
arpl
insl
mov
ljmp
xor
or
xor
shrb
xor
jne
mov
notl
sub
jecxz
mov
out
test
sub
xchg
imul
movntq
stos
push
pop
add
lock
mov
jge
sub
inc
xchg
ss
decb
loop
xlat
fnstenv
sub
push
pop
aad
shrb
push
rolb
fld
ds
push
or
push
mov
es
add
jecxz
xor
pop
dec
in
es
into
xlat
in
cmp
cmp
add
inc
roll
in
outsb
cli
jbe
clc
pop
lods
out
push
ds
in
lahf
lds
add
push
fldl
xor
adc
add
xchg
adc
icebp
out
add
out
outsl
sub
shll
std
pusha
cmp
jns
sub
jae
or
das
loopne
mov
ficoms
fdivrs
pushf
sbb
jns
push
data16
insb
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
inc
dec
mov
iret
movlps
or
push
call
lods
arpl
push
out
jae
mov
sahf
or
dec
sub
stc
shll
sahf
arpl
mov
adc
fcoml
sbb
or
inc
adc
fs
and
pop
pop
cli
call
add
int
jmp
jl
movsl
sahf
sarl
sbb
int3
add
loop
and
hlt
push
pop
xchg
push
and
xchg
jae
test
jl
adc
aad
push
loop
das
jo
imul
mov
jl
or
fwait
cmpsl
out
rol
jo
pop
xor
std
call
addr16
call
mov
rcll
add
addl
jecxz
sub
push
sub
add
xor
les
and
popf
xor
jmp
sbb
in
ret
rclb
icebp
xlat
inc
dec
cmpsb
and
push
cmpsb
or
xrelease
dec
lds
xchg
mov
mov
xchg
xor
dec
outsb
jae
xchg
sub
jecxz
dec
sbb
dec
inc
add
and
movsl
jo
mov
fs
aaa
push
or
icebp
fsubr
inc
xchg
repnz
sbb
mov
std
adc
scas
in
inc
mov
jle
addr16
outsl
outsl
push
test
in
pop
idiv
imul
pushf
mov
aaa
in
pushf
nop
fstp
cmp
jp
mov
cmp
cmp
in
xor
cmp
das
xchg
pop
pop
mov
sbb
lret
out
jnp
cmp
insb
leave
pop
sbb
and
out
xor
push
and
dec
xchg
mov
js
fs
mov
mov
sub
imul
jg
cmp
cmpsb
xchg
inc
clc
xchg
test
sub
out
ja
shll
jnp
jmp
push
stc
xor
cmp
clc
arpl
imul
pop
cmp
inc
pushf
cltd
or
call
aam
add
ljmp
xor
mov
sbb
xor
push
cmp
cmp
jg
sbb
loope
jb,pn
push
imul
pop
pop
and
mov
cmp
fwait
pop
dec
movsb
adc
cmp
push
loopne
in
sub
push
push
or
push
pop
aam
adc
xchg
jne
pusha
lret
adc
pop
fmul
sub
sbb
mov
into
pop
insb
cmp
and
inc
bound
hlt
inc
mov
clc
jle
addr16
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
pop
sbb
fcmovnu
adc
adc
dec
pop
push
cmp
mov
daa
jb
mov
imul
mov
cmp
cmp
push
addb
dec
roll
rcl
dec
jmp
sbb
and
pushf
enter
push
inc
sbb
pop
mov
jp
hlt
xor
rorb
dec
cld
decl
jnp
enter
fadds
aaa
shrb
mov
dec
je
pop
aas
push
rorl
lock
daa
jbe
repz
sahf
mov
and
jg
adc
xchg
adc
fwait
aas
data16
cmp
lret
inc
cli
jns
dec
movsb
cmpsb
mov
shld
mov
aam
gs
mov
mov
stos
cmp
pop
xor
and
loop
mov
xchg
mov
es
imul
dec
call
xchg
in
sub
and
mov
outsl
pop
pop
lcall
adcl
idivl
cmpsl
jle
cmp
out
inc
fnstcw
hlt
add
jns
xor
mov
repz
test
push
jmp
mov
sub
scas
push
inc
fcoms
add
add
shlb
xlat
dec
or
dec
mov
cmc
fidivrl
cli
jne
mov
int3
cwtl
and
sub
push
jns
inc
stos
not
cli
or
js
jo
pop
xor
ss
cmp
jne
and
hlt
addl
sbb
arpl
add
sbb
cmpsb
bound
inc
cmc
repz
int3
xlat
add
sar
jnp
mov
rolb
xchg
mov
cmp
rcll
rorb
sub
cmpsl
jmp
je
add
fwait
fwait
lahf
int3
mov
jle
cmp
call
jg
jae
lret
aaa
or
xchg
xor
jbe
and
in
sbb
mov
mov
enter
dec
push
mov
pop
mov
jg
ljmp
pop
daa
dec
fstpt
das
and
jae
scas
sbb
push
hlt
into
je
jo
push
int3
add
xchg
xchg
in
mov
arpl
add
and
pop
packuswb
sub
mov
out
imul
xchg
lods
imul
fstpt
add
das
repnz
stc
scas
gs
cltd
add
pop
mov
sub
cmpsb
call
jecxz
in
movsb
push
shlb
es
ret
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
lods
cwtl
rclb
adc
addr16
xor
cmc
mov
xor
jecxz
inc
xchg
mov
dec
jo
pslld
movsl
insl
jno
inc
scas
stos
dec
test
fwait
pusha
out
je
add
mov
fisubl
sbb
fnstcw
fstpl
loop
ret
cld
out
shlb
data16
fidivl
imul
mov
mov
popf
mov
mov
sub
xchg
bound
and
stos
shrb
and
sahf
jmp
decb
aaa
and
mov
gs
es
push
fcmovu
xor
add
out
pop
ret
sti
adc
sbb
pop
pop
out
mov
jecxz
adc
mov
cwtl
movb
jl
sbb
cmp
mov
dec
mov
mov
mov
push
dec
sub
stos
lea
inc
lret
mov
dec
cmp
inc
lea
fbstp
or
push
push
insl
dec
pop
ljmp
xchg
cli
push
test
sub
xchg
lds
cmp
sub
fs
nop
shlb
xchg
dec
mov
fisttps
je
test
jno
xorl
flds
pop
icebp
jae
je
test
stc
lds
mov
push
pop
mov
cmp
lahf
push
push
hlt
clc
adc
fcoms
push
inc
xchg
sub
xchg
orb
xor
mov
dec
mov
ja
fdivl
sbbb
pop
ljmp
imul
ror
mov
inc
add
in
ljmp
push
mov
mov
or
lods
mov
xchg
push
shlb
repz
gs
mov
lds
and
call
pop
icebp
iret
mov
mov
iret
cmpsb
stos
addb
adc
sub
stc
cltd
dec
int3
jg
insl
test
icebp
or
add
or
xchg
xchg
sub
lock
es
jo
aam
call
fwait
insl
add
cmc
mov
jg,pt
subb
aad
sbb
in
outsl
test
mov
ljmp
xchg
and
out
fldcw
lcall
sbb
mov
getsec
ljmp
mov
outsl
xchg
or
push
dec
mov
mov
add
cs
add
into
lahf
arpl
imul
push
or
cwtl
push
mov
cmc
je
mov
cwtl
or
insl
add
push
call
add
add
push
loope
cmp
jmp
pop
fwait
inc
xchg
dec
shrl
leave
pop
mov
adc
push
ja
push
adc
mov
cmpsl
adc
inc
sbb
adc
adc
mov
pop
nop
add
test
xchg
cltd
leave
imul
add
lock
sub
pop
test
fdivl
push
movl
pushf
mov
sub
gs
mov
sbb
adc
pop
dec
sbb
loopne
repnz
jmp
idivl
cli
sarb
jno
sti
pop
xchg
mov
mov
into
in
sub
in
mov
aad
push
rcr
pop
adc
lcall
jnp
adc
loop
xor
mov
cltd
aaa
lret
jle
insb
movb
dec
lock
rolb
fidivl
icebp
or
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
inc
jo
das
into
adc
adc
sub
push
xor
addr16
je
ja
dec
adc
jmp
jl
jnp
jno
orl
inc
xchg
lahf
mov
xor
cmpsl
mov
xchg
or
cs
fidivrs
test
stos
push
out
stos
cmpsl
push
lods
sarb
cmp
cmp
mov
cmp
ds
and
mov
inc
je
lret
popf
sti
loop
js
loope
jl
test
out
push
mov
pop
mov
cmp
shll
in
jg
lds
popf
imul
push
add
dec
scas
push
sub
in
xchg
add
orl
jns
enter
xorb
fs
xor
aam
pusha
mov
mov
outsb
aad
scas
xchg
pop
insb
xor
lods
jne
in
andb
icebp
dec
ret
cmp
imul
xor
fnstcw
stos
mov
inc
sub
out
repz
test
mov
and
adc
sbb
add
push
sbb
outsl
cmp
mov
lcall
cmp
push
ss
push
fistl
xchg
xchg
cmpsb
fldcw
mov
ljmp
mov
fs
ds
in
sub
or
fdivrs
fsubl
paddsb
jg
das
or
mov
xchg
aaa
or
xor
xchg
pop
add
insb
leave
mov
sahf
xor
cld
push
test
inc
gs
gs
fsubrs
adc
out
ljmp
pop
jle
mov
sbb
mov
xor
repz
mov
add
mov
lret
jbe
divb
mov
hlt
pusha
dec
sbb
imul
mov
dec
inc
mov
lods
xchg
aad
rcrb
xor
testb
jg
adc
and
ljmp
movsl
mov
push
sbb
or
ret
mov
daa
mov
jne
mov
ret
mov
and
xchg
mov
out
dec
fbstp
pop
lcall
jbe
push
or
jb
adc
xor
or
out
pop
repnz
sub
pop
dec
mov
add
shlb
lea
lcall
shl
push
mov
popa
jmp
cmpsl
mov
cld
push
push
or
or
mov
push
fwait
dec
push
repz
pop
fs
sbb
add
mov
mov
pop
popa
fmuls
inc
flds
test
cmp
adc
loop
movsb
int3
jnp
inc
notb
jg
fidivrs
fcompl
xor
fwait
lret
inc
cmc
jne
pop
inc
and
out
cmp
decl
sbb
test
pop
data16
pop
test
lds
fcomp
mov
dec
and
iret
sbb
int
adc
push
cmp
inc
pop
inc
call
push
adc
pop
inc
mov
cmp
ds
shl
jmp
out
and
loopne
sub
sbb
rclb
add
sub
roll
mov
bound
jp
data16
je
or
loop
in
std
sub
iret
jbe
xchg
popl
pushf
push
in
cmpsl
popa
ret
add
int3
stos
lds
dec
movsb
sub
fcomip
cltd
cmp
jp
adc
aam
leave
cmp
sub
iret
pushf
jmp
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
aas
sahf
inc
xor
pop
scas
aas
sub
neg
dec
sub
xor
int
or
roll
sub
sahf
pop
loope
cld
imul
mov
gs
stc
call
mov
dec
xchg
add
data16
add
ret
jge
sahf
pop
pop
into
sub
jnp
test
aad
xor
mov
test
out
mov
inc
pop
xchg
pop
push
fistpll
lea
push
pop
int3
inc
or
lret
pop
mov
imul
loop
movb
add
negb
mov
into
test
xchg
vandnps
dec
jp
out
xor
in
ljmp
mov
into
and
and
scas
and
cmpsl
stc
in
test
outsl
cmp
cwtl
inc
pop
mull
dec
popf
jo
or
fists
gs
pop
dec
or
stc
lret
repz
fistl
mov
test
dec
adc
cmp
outsl
dec
lret
je
add
mov
call
in
stos
shll
push
lock
cld
push
sbb
dec
jae
stos
mov
mov
iret
cld
sahf
push
fwait
outsl
or
push
popf
pop
in
xor
mov
inc
xchg
jecxz
popa
add
outsl
lock
dec
adc
pop
rolb
cmp
adc
push
and
jle
sub
repnz
cmc
jecxz
icebp
mov
xor
iret
pusha
int3
jg
outsb
shll
ja
mov
mov
push
imul
sub
dec
and
lret
repnz
cmpsb
mov
data16
mov
bound
and
daa
xchg
rorl
js
push
gs
or
sub
add
mov
xor
mov
fsubl
scas
push
insb
mov
pop
in
cmpsb
pop
scas
cmp
dec
test
jnp
nopl
add
inc
mov
movsl
lods
es
sub
loopne
jae
jns
push
mov
inc
sbb
arpl
jne
inc
jecxz
mov
or
sub
push
scas
xor
lret
and
pop
mov
fwait
mov
inc
cmp
adc
cmpsb
fwait
adc
xor
xchg
pop
pop
test
in
inc
mov
cmpsb
dec
jg
les
inc
hlt
mov
shll
int3
data16
rorb
add
shlb
sub
pop
push
insb
jecxz
cld
rcr
cmp
mov
mov
in
js
shlb
enter
cmp
inc
xlat
js
cmpsl
pop
pop
cmp
fsubrl
push
cli
jne
rcll
hlt
add
fistl
iret
inc
roll
jnp
sahf
daa
popf
fsts
and
push
push
cmp
popa
mov
adc
cmp
xor
mov
shlb
ja
pop
data16
aad
sub
mov
in
stos
cmpl
xchg
pop
in
add
jg
add
test
pop
jo
rcrb
adc
icebp
jno
lock
movsl
cmpl
arpl
dec
lock
jno
sub
mov
imul
fcompl
call
mov
jp
repz
dec
cmc
xchg
ret
mov
inc
cmp
popa
sbb
icebp
jge
jge
mov
ljmp
mov
out
pushf
out
enter
lods
stos
sti
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
orb
adc
adc
popf
cmp
out
mov
xchg
xor
loopne
mov
cmc
pop
aam
or
lods
cmp
inc
roll
lcall
loopne
mov
shl
daa
in
jmp
bswap
out
scas
push
scas
sti
and
push
movsb
sbb
pop
inc
xchg
mov
pop
mov
cmp
sbb
or
fcoml
std
in
fbstp
adc
idivb
in
jle
sbb
aam
das
ds
dec
xchg
xor
fs
dec
xchg
cli
cmp
push
adc
adc
lods
xorb
shl
adc
jle
sbb
lret
xchg
loop
cs
aaa
data16
pop
mov
fwait
push
in
fildll
cwtl
daa
test
and
mov
addr16
add
mov
das
fwait
sti
in
mov
or
call
mov
in
xchg
add
mov
jnp
sarl
aad
pop
nop
xchg
orl
add
fnstcw
out
movsl
shlb
dec
out
call
dec
jecxz
pop
mov
or
imul
sbb
and
cmp
xor
pushf
int3
adc
loop
rorb
sahf
ljmp
jno
dec
addr16
and
xchg
jno
mov
fcmovnbe
mov
cltd
jg
or
rorb
lods
aam
pop
stos
fadd
out
dec
cmpsb
mov
push
cmp
push
xchg
cmpsb
test
scas
dec
jmp
xchg
pop
jnp
lea
popf
pop
dec
jmp
pop
dec
aas
orb
loopne
xor
jmp
pusha
lock
sti
div
ljmp
sbb
pop
fcoml
fs
push
adc
in
notb
rcrb
pop
nop
mov
xchg
cmp
icebp
cld
imul
cmp
test
dec
imul
pop
enter
mov
push
dec
aaa
adc
insl
filds
idivl
cmp
fwait
out
gs
lret
les
aas
inc
push
xor
outsb
lods
push
dec
shl
xor
xchg
lahf
mov
adc
adc
jne
std
or
push
iret
arpl
dec
int
adc
cmc
incl
push
add
in
clc
pushf
dec
sarb
or
lret
je
jbe
sub
es
jno
cmp
jno
mov
cmp
ret
xchg
cmp
mov
imul
in
and
je
sbb
or
rcll
jge
fnstenv
mov
dec
rcrb
mov
in
loope
sbb
gs
cld
into
pop
mov
mov
mov
inc
jnp
int3
mov
adc
out
push
imul
pop
lret
sub
nop
push
lret
mov
add
and
data16
jp
mov
aam
pop
pop
jnp
lock
imull
je
imul
add
test
es
test
sbb
cmp
je
dec
xchg
xor
jge
and
sar
jle
movsb
icebp
imul
fsubl
mov
das
das
call
out
xor
or
xor
or
cld
jnp
insb
inc
sub
fidivs
daa
popf
jb
and
outsl
xor
orb
and
outsb
pop
cmp
sub
js
pusha
and
fimuls
or
dec
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
inc
scas
sbb
arpl
jne
sti
add
adc
sub
in
test
or
add
stc
pop
dec
mov
or
inc
test
mov
mov
pop
jg
push
push
push
inc
push
sub
xor
sub
jmp
cmp
dec
int3
mov
jge
movsb
mov
dec
fldenv
xchg
ret
call
fwait
sub
in
mov
pop
stos
out
mov
mov
inc
push
mov
cmpl
xor
inc
and
mov
push
aam
mov
fsubl
jmp
and
dec
loopne
xor
cmpsl
hlt
ret
cmp
push
movsl
add
lock
call
pop
sub
xchg
push
jp
iret
repz
imul
cli
test
lods
loop
test
xchg
int
dec
sahf
adc
imul
cmc
sub
fsubp
movsl
repnz
aad
push
xchg
sub
outsl
clc
dec
dec
scas
in
mov
loop
jg
movsb
loop
xchg
data16
add
xchg
lods
lret
add
inc
outsb
decb
insb
dec
jg
jmp
lods
stos
cli
in
mov
movsl
pusha
fadds
scas
xor
push
dec
mov
push
jmp
xchg
dec
mov
or
imul
ds
mov
dec
sahf
insb
pop
movsl
inc
sbb
scas
pop
sub
pop
lea
mov
mov
outsb
roll
cmp
push
sub
mov
cld
lret
cmp
es
in
lcall
popa
xor
shrb
jns
flds
pushf
xchg
or
inc
test
adc
and
push
sti
or
inc
imul
push
xchg
push
cld
lea
sahf
and
aas
aam
iret
add
mov
scas
lea
outsl
add
cmpsb
cmp
mov
in
and
jge
push
inc
insl
mov
daa
or
sbb
jmp
mov
fwait
lret
cltd
inc
jp
sub
daa
loopne
xor
jae
testb
rcr
jnp
out
dec
in
lcall
subl
insb
and
inc
loop
or
add
push
bound
loopne
xchg
xchg
ljmp
js
push
pop
xchg
jle
mov
inc
lock
outsl
jp
push
adc
inc
cmp
pop
lret
adc
adc
sub
dec
int
sbb
stos
add
roll
jmp
mov
sbb
fistpll
xchg
lea
jmp
push
stos
sbb
dec
ja
and
in
ret
mov
jnp
jl
lds
mov
sub
adc
sbb
add
or
shll
or
xor
jae
ds
add
jmp
push
ficomps
xor
sub
cmpsl
push
lahf
xchg
inc
or
mov
repnz
ficoml
xchg
inc
xor
bound
decl
repnz
scas
aad
fistpll
adc
sub
lods
or
and
lcall
int
xor
pop
dec
addr16
adc
es
stos
adc
dec
inc
int
pop
and
aam
stc
mov
cs
pop
clc
stc
rcll
add
push
adc
mov
rolb
rcl
hlt
ja
mov
mov
daa
imul
push
xchg
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
sbb
adc
adc
lods
ljmp
lods
dec
jg
stos
fs
cmp
sub
sbb
fs
lods
xlat
adc
push
jecxz
inc
jo
add
xor
add
inc
popl
imul
cld
push
addr16
push
jl
sarl
cmpsb
and
mov
rcl
cmp
movsb
mov
inc
or
andl
mov
or
xchg
mov
pop
and
cli
notb
xchg
dec
lods
mov
mov
lds
fstp
cmc
xchg
xor
lret
jnp
mov
mov
repnz
cmp
xchg
enter
xchg
adc
dec
xor
scas
imul
pop
sub
pop
shll
or
in
test
jp
or
call
dec
test
adc
loop
xor
add
leave
mov
push
push
es
pop
pushf
mov
pop
cmp
loopne
xor
xor
sarl
xor
int3
sub
mull
fdivrl
sbb
add
mov
adcl
lahf
adc
hlt
and
jl
pop
jnp
std
imul
adc
pop
loope
fiaddl
mov
inc
lret
and
fsubrp
adc
mov
or
lea
pop
stc
jb
push
inc
outsb
and
in
mov
sub
cmp
xor
call
int3
sbb
mov
sbb
or
daa
out
ljmp
cmc
jb
inc
loop
mov
pop
pop
dec
sub
lods
mov
ljmp
dec
int3
fists
dec
cmpsl
mov
popf
call
xchg
jae
inc
or
les
outsb
inc
stos
mov
aaa
pop
aam
adc
mov
inc
xchg
sub
repnz
push
cmp
inc
pop
in
aam
inc
or
lcall
lds
xorps
data16
and
in
xchg
jnp
fs
adc
push
iret
inc
lods
fadds
mov
inc
rcl
rolb
in
ljmp
mov
mov
cs
pop
push
insl
test
ret
dec
test
inc
cmpsl
sub
mov
lcall
mov
lret
cltd
outsl
daa
data16
jo
add
insb
lods
sub
arpl
neg
cmc
dec
pop
fildll
mov
call
out
sbb
and
scas
lods
mov
cmpsb
imul
inc
inc
and
not
popf
push
iret
loop
out
dec
and
pop
ret
je
cmp
mov
fiadds
add
out
xchg
mov
dec
pushf
or
push
pushf
xor
dec
ret
dec
mov
sub
cmp
ret
mov
cmp
xchg
dec
ret
jae
mov
pop
icebp
pop
fs
cli
out
punpckhbw
mov
add
xor
jnp
in
call
insb
sbb
stos
mov
push
stc
aaa
hlt
jge
pop
loop
dec
sbb
xchg
lret
out
mov
add
repnz
cmpsl
sbb
cmp
clc
insb
sbbb
push
xchg
sti
and
cmp
push
insl
xchg
test
sbb
int3
add
shlb
push
add
jno
lods
push
test
jge
mov
cmp
xor
je
mov
adc
mov
mov
xor
xor
jmp
or
mov
mov
mov
sub
mov
adc
jno
xor
jns
push
sub
loope
inc
sub
outsb
scas
mov
push
loope
movsb
lret
adc
xor
xor
jb
out
sar
jmp
pop
mov
clc
in
jbe
mov
mov
and
fnstsw
mov
push
xchg
inc
mov
or
arpl
sub
add
scas
cmp
cmpsl
or
cmp
xchg
scas
ss
jnp
ret
movsl
cli
iret
pop
sub
lret
jmp
mov
int
rolb
cmpsl
sub
rcll
inc
jle
in
push
jo
enter
dec
dec
sub
mov
cmp
xor
cmp
xchg
es
dec
xchg
xor
cmp
pushf
int3
add
fnstsw
adc
lods
ss
icebp
push
mov
sub
repz
test
sti
adc
xchg
jns
fisttpl
sahf
pushw
sub
js
es
je
test
jl
fnsave
add
xchg
or
inc
daa
jge
jle
adc
mov
pop
push
pusha
mov
call
mov
push
invd
in
imul
xchg
out
mov
mov
fcomps
sbb
dec
iret
xchg
inc
mov
sbb
add
xchg
mov
stos
cmpsl
test
testl
pop
jp
aas
xchg
enter
popa
fmull
push
dec
add
insl
push
cmpsb
rclb
mov
pop
mov
insb
mov
cmpsl
dec
pop
mov
mov
or
and
je
dec
movsb
movsl
add
pop
jno
dec
in
decl
ret
pusha
mov
das
pop
jmp
inc
leave
xchg
test
pusha
sbbb
jecxz
addr16
or
mov
inc
sub
mov
dec
xor
daa
lea
out
add
hlt
mov
mov
enter
sub
fadds
nop
into
jno
rcrl
bound
in
jb
or
mov
psrld
daa
repnz
daa
jnp
rcll
out
cmpsb
clc
stos
aam
mov
adc
cltd
mov
pop
push
adc
pop
dec
mov
push
fxch
sbb
mov
aam
jle
mov
clc
pop
lock
leave
nop
scas
mov
cwtl
push
scas
push
and
mov
test
sbb
inc
hlt
xchg
dec
in
cld
xchg
mov
jmp
repz
es
rcrb
add
jle
sbb
dec
pop
daa
in
mov
fnstcw
rcl
loop
dec
out
rcl
mov
or
cs
leave
fsubl
xchg
jns
fisttps
pop
pop
xchg
ds
aad
dec
ds
in
jne
aas
cmpsl
add
mov
xchg
ret
sub
jne
sub
test
std
jle
mov
cld
lock
mov
pop
imul
mov
add
push
sbb
push
and
cmpl
shl
dec
cmp
xor
bound
push
cwtl
pop
or
sub
jae
pop
imul
or
and
ljmp
pop
inc
jo
pop
inc
fsubs
nop
xor
test
nop
cmp
scas
jb
lret
cmp
sti
data16
loop
add
int3
xchg
sbb
and
imul
daa
outsl
es
or
cli
imul
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
mov
stos
adc
adc
or
daa
pusha
and
out
push
out
push
aaa
lcall
aam
shll
and
xor
in
cmp
arpl
cmp
aas
clc
in
mov
cs
nop
xlat
cmpsl
stos
mov
xor
and
or
test
js
and
stc
mov
arpl
shlb
fmull
add
push
pop
aam
lods
sub
enter
lock
add
aaa
mov
cmpsl
fisubrs
out
mov
xchg
jmp
les
mov
rcrb
adc
cmp
jo
mul
adc
arpl
mov
mov
decl
insl
gs
cmp
rep
jbe
outsb
pop
insb
insb
out
inc
mov
xor
mov
dec
mov
or
imul
scas
adc
push
inc
in
bound
adc
dec
xor
cmp
jmp
cmc
enter
mov
repnz
insl
aaa
mov
iret
mov
add
frstor
jge
cmp
js
in
pop
pop
mov
sarl
adc
inc
mov
jecxz
es
mov
dec
dec
mov
pop
idivb
or
ja
loop
leave
cmpsb
std
and
insb
test
jg
jmp
and
xchg
xchg
sets
fwait
mov
push
shlb
pop
scas
pop
ret
enter
xchg
dec
push
adc
lahf
jnp
mov
in
mov
movsb
or
sbb
xchg
mov
test
mov
mov
pushf
inc
and
push
clc
or
ljmp
xchg
cld
pop
adc
mov
ljmp
idivl
into
daa
push
pop
pushw
xchg
popa
xchg
dec
fcomps
sub
mov
cmp
aam
sub
mov
int
inc
test
pop
mov
loope
pop
les
sub
sub
into
jmp
lahf
lods
shrb
ds
imul
jbe
cmpb
mov
leave
int3
movb
pusha
xor
mov
mov
loop
fsubrs
fwait
push
mov
test
cld
ljmp
bound
mov
dec
test
or
bound
dec
call
pusha
push
notb
xchg
xchg
mov
in
mov
pop
pop
jmp
jo
dec
call
outsb
cmp
add
inc
or
nop
sub
dec
lret
fisubrl
out
push
jmp
fwait
inc
cmp
xchg
push
jge
cmp
iret
imul
pop
or
mov
adc
shr
sub
mul
pop
and
lods
notb
jl
adc
or
cmp
dec
mov
pushf
jecxz
mov
insl
insl
adc
dec
pop
popf
les
mov
sub
and
pop
adc
jno
and
out
mov
hlt
push
push
add
mov
cmp
cmpl
dec
xchg
incl
xlat
or
faddp
push
jmp
dec
sbb
pop
or
scas
int
int3
lods
xor
out
loop
int3
repnz
sub
or
mov
pavgw
sub
xor
andb
pop
xor
adc
ret
mov
cmpb
iret
pop
adc
adc
jns
stos
mov
fmuls
add
add
jmp
cmp
mov
js
addr16
stos
push
lcall
mov
insb
ret
ret
out
cmc
lcall
dec
mov
in
ffreep
rcrl
jmp
push
out
ret
fwait
shll
insl
sub
out
and
and
into
pop
sti
lods
add
xor
mov
sbb
pop
mov
dec
loopne
daa
mov
das
imul
and
cmp
add
mov
das
cs
push
jge
sub
test
jmp
push
mov
mov
mov
jg
ljmp
dec
inc
ret
push
mov
dec
mov
mov
aam
xor
outsb
inc
inc
fs
jmp
and
incb
xor
cs
inc
stos
into
mov
xchg
add
imul
imul
jle
movsl
xchg
fisttpll
mov
fstps
dec
xchg
cwtl
cmp
pop
popf
jno
rcrb
ja
adc
dec
cmp
lahf
xor
sahf
std
dec
inc
jp
cwtl
lret
mov
cltd
loop
pop
frstor
imul
out
lea
imul
or
pop
lock
arpl
rcll
ljmp
or
gs
int
push
scas
push
ss
ja
mov
lret
sub
sub
xor
sbb
mov
or
ds
cmp
lods
jmp
and
xor
rorb
mov
sub
insl
push
push
popa
lret
aad
sub
sub
insb
lds
ds
inc
xor
fcomip
cmp
dec
xchg
ret
loope
and
cmc
mov
mov
xor
movsl
xor
lods
inc
in
ja
fwait
insl
and
test
fistps
inc
add
int
xor
sahf
sbb
in
call
or
sbb
mov
pop
dec
lahf
sar
arpl
sub
mov
stos
and
inc
mov
loope
scas
insb
fs
subl
jle
ficoms
ljmp
cs
in
rcrl
imul
add
inc
mov
jbe
sbb
hlt
loop
dec
ljmp
iret
test
scas
std
pop
in
jp
lods
or
stos
xchg
repnz
jmp
les
mov
cmpsb
aam
inc
leave
or
rcr
andl
jnp
das
push
dec
ss
repz
jns
mov
out
dec
sbb
imul
lea
pop
mov
shlb
insb
cmp
dec
mov
push
shll
pop
and
add
jns
push
mov
dec
clc
pop
mov
sub
push
cmpsb
pop
xchg
mov
or
push
pop
add
inc
mov
sbb
orl
pop
lods
dec
and
rcrb
push
sub
repz
ja
dec
icebp
ficomps
sub
push
pop
addl
adc
dec
push
jmp
inc
or
mov
sub
aad
add
xchg
das
dec
fsubp
jl
icebp
xchg
mov
push
hlt
or
or
movsl
ds
jno
inc
loope
mov
daa
jge
mov
pop
cli
hlt
sub
stc
out
ss
inc
cmp
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
out
lock
adc
adc
sbb
nop
negl
negl
xchg
pushf
lahf
fs
xchg
fsubrp
stos
mov
mov
lret
jbe
addr16
out
aam
aam
dec
mov
dec
stc
fs
mov
add
leave
mov
dec
frstor
cmp
popa
vxorpd
iret
imul
repz
inc
mov
mov
ss
icebp
dec
cmp
jge
cmpsl
mov
ret
sub
add
leave
or
insb
fisttpll
inc
mov
je
out
adc
ret
pop
cmpl
mov
xchg
ljmp
movsb
mov
movsl
mov
add
shl
cld
repz
inc
cmp
mov
iret
mov
xchg
faddl
mov
mov
sbb
je
loop
dec
imul
shl
in
push
cmp
loopne
movsb
xchg
cmpsb
aaa
nop
inc
push
sbb
xchg
iret
dec
xchg
mov
add
xchg
stos
push
jmp
rorb
std
and
lock
cmpsl
jge
aam
mov
repnz
repnz
pop
mov
cmpsl
xor
cltd
leave
cmpsb
or
mov
lea
daa
es
aaa
cmp
xchg
in
add
nop
loop
jno
ficompl
inc
mov
sbb
inc
movsb
out
pop
xor
call
xchg
inc
mov
push
jmp
cmp
out
sahf
add
and
test
and
and
sbb
into
daa
mov
mov
push
jns
and
ljmp
push
lock
push
mov
ds
int3
adc
pop
test
xchg
mov
xchg
mov
aas
mov
mov
insl
lret
lahf
ds
add
mov
adc
push
lock
sbb
xchg
cld
leave
lret
cltd
mov
jo
andl
cwtl
mov
sbb
mov
sub
rcl
jne
mov
and
xchg
movsl
test
shll
and
mov
adc
dec
jb
jp
out
imul
cmp
and
rorl
leave
mov
mov
jo
inc
mov
pushf
inc
ljmp
mov
jl
iret
xor
mov
xor
or
xor
aaa
add
jl
pop
lret
popa
sarb
aas
inc
xchg
add
aad
inc
cli
addl
ljmp
jnp
cltd
jg
xor
cvttps2pi
ds
push
popf
dec
jae
dec
xor
jne
jbe
sbb
enter
sbb
mov
jp
cmp
mov
sbb
shll
enter
mov
leave
pop
push
jg
rol
pop
dec
sub
adc
outsl
jg
inc
or
or
loopne
xor
mov
lods
sbbb
cmc
xorl
lcall
xchg
add
rorl
jmp
in
push
xor
daa
iret
mov
inc
outsb
dec
fnstcw
fimuls
rorl
aad
cmp
mov
cmp
clc
and
cltd
sub
lock
ljmp
xor
icebp
out
hlt
sub
and
enter
sbb
xchg
or
arpl
pop
inc
pop
lds
pop
pop
pop
outsb
data16
push
xorl
loop
cld
cwtl
sbb
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
lods
mov
adc
pop
aam
xor
sub
mov
or
movb
xor
les
ret
lds
imul
lahf
lods
or
jl
mov
and
adcb
push
mov
mov
clc
push
pop
jecxz
out
dec
push
mov
js
sbb
in
jno
cmp
and
sti
and
sub
pushf
cmp
push
insb
inc
inc
test
mov
push
push
rcr
dec
loopne
dec
push
insl
push
dec
pop
ds
xor
push
mov
pusha
dec
ret
fbstp
gs
dec
inc
xchg
inc
add
dec
adc
pop
jae
push
xor
xchg
pop
mov
push
or
adc
je
lret
cmp
and
sbb
inc
pop
in
outsb
mov
mov
jno
xchg
jne
stc
mov
ss
push
fwait
pop
pusha
push
mov
addr16
mov
or
nop
push
test
dec
pop
inc
gs
inc
and
lods
and
dec
cwtl
mov
xchg
and
stos
and
ret
fs
push
rcr
jmp
dec
xchg
mov
sub
xor
xchg
sbb
mov
lock
jbe
jecxz
les
jl
loop
jae
imul
mov
sbb
mov
jb
lcall
mov
addr16
mov
xchg
mov
cltd
call
mov
dec
add
std
insb
inc
cmpl
sub
clc
pop
mov
daa
push
mov
add
xchg
add
xor
lods
jns
jle
andl
std
cwtl
push
add
bound
sub
inc
xor
pop
subb
push
das
xlat
std
daa
ss
pop
cmp
mov
jbe
pushf
adc
jle
adc
cmp
or
dec
sub
loop
dec
inc
ret
pop
sub
pop
push
jl
ret
dec
dec
aaa
xlat
or
aas
icebp
adc
adc
rol
and
inc
jmp
mov
push
mov
mov
movsb
icebp
stc
xor
push
xchg
scas
push
jp
push
decb
in
adc
inc
push
jle
mov
lret
sbb
cmp
lea
pop
mov
clc
jle
push
cmc
or
popa
testb
sub
pushf
adc
mov
outsl
out
dec
cmp
mov
inc
sahf
sub
mov
mov
add
mov
push
enterw
scas
xchg
mov
adc
mov
push
enter
push
xor
ss
adc
pushf
mov
mov
lods
enter
adc
xchg
jno
enter
xor
in
fnstsw
aam
filds
sbb
add
cld
sbb
xchg
inc
jbe
mov
cs
or
pop
mov
dec
lcall
es
adcb
stos
sbb
ss
jb
out
add
movsb
repz
cmp
ret
adc
jb
movsl
stos
xchg
nop
jno
dec
mov
scas
inc
fwait
lods
xchg
stos
mov
mov
push
lods
adc
lret
subl
mov
mov
sbb
and
push
arpl
and
call
xchg
ss
fsubrs
repz
pop
mov
mov
adc
lock
std
mov
dec
sahf
cltd
aam
push
inc
scas
shlb
movsb
cmp
int
subl
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
loopne
pop
adcb
push
xlat
sbb
std
call
in
jmp
loopne,pt
add
aaa
mov
icebp
mov
shl
jle
pop
lea
imul
je
adcb
cli
lock
pusha
sub
mov
cmpsb
cmp
mov
mov
push
mov
dec
xchg
fcomps
out
mov
jg
int
loop
adcb
jno
rcrl
pushf
jne
outsl
ds
data16
orps
loope
xchg
int3
ret
fmul
gs
cmc
ljmp
out
es
pop
int
out
es
push
sub
pushf
xchg
loope
cmp
push
jno
fistps
push
jns
shl
icebp
xchg
iret
cwtl
mov
add
push
jge
xor
ficomps
xor
mov
jp
inc
xsaves
es
push
push
xor
jle,pn
fs
ficomps
popf
in
pop
cmpb
ret
dec
pop
rclb
outsl
xchg
inc
popa
pop
data16
xor
or
sub
inc
and
and
dec
xchg
loop
out
fistl
pop
int
sub
inc
adc
stos
out
mov
sbb
dec
sub
in
je
push
inc
sbb
jecxz
imul
aaa
push
jp
ret
sbbl
adc
xchg
jae
mov
xchg
ss
enter
into
dec
mov
std
jbe
pop
pop
pop
add
jge
ret
int
xchg
push
mull
std
rcrl
cmpsb
sbb
bound
cmp
fwait
shrl
fbstp
je
cmc
fisttpl
cmp
mov
jno
cwtl
stc
pusha
mov
push
jo
fisttps
mov
imul
out
fnclex
jmp
int3
lock
mov
pushf
das
mov
sub
jmp
test
pop
repz
ret
mov
frstor
fstpl
xchg
sbb
or
cmp
lock
aam
ds
fstpl
xor
inc
dec
add
ja
test
out
cld
fisubs
shl
pop
data16
insl
and
jmp
lcall
add
or
mov
and
xchg
and
push
out
aam
loope
mov
dec
xchg
leave
fdivs
mov
sbb
jo
insb
mov
pop
dec
add
arpl
pop
fcom
out
stos
mov
cmc
add
cmc
mov
std
adc
xlat
arpl
es
mov
pop
xchg
test
xchg
sti
cwtl
shll
adc
xor
cmpsb
or
inc
ljmp
je
mov
push
in
in
sbb
jle
bound
push
adc
jbe
sub
fs
xchg
cmp
sbb
and
xchg
push
cmp
dec
pop
test
jbe
adc
popf
jge
xchg
bound
rcrl
data16
cld
nop
sub
fs
in
xchg
mov
xor
or
fimull
enter
sub
pop
pop
decl
aad
jmp
jg
adc
jno
jae
movsb
stos
aas
popa
sbbl
add
sti
loope
repz
mov
mov
cmpsl
push
mov
call
mov
out
jp
jb
lcall
sub
jle
dec
mov
insb
data16
add
inc
dec
pusha
xchg
repnz
jno
sbb
lret
das
cmp
adc
fs
mov
sahf
lcall
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
js
insb
mov
adc
adc
ret
or
cmpsl
dec
add
pop
push
rolb
push
roll
sub
or
js
mov
cltd
xchg
insl
xor
mov
stos
mov
pop
mov
js
xor
jbe
aaa
cli
inc
imul
xlat
xchg
inc
aam
xor
push
imul
adc
xchg
add
nop
dec
std
jp
popf
jnp
mov
aas
outsb
js
dec
xor
lds
outsb
inc
and
mov
iret
lods
mov
adc
pop
cltd
orl
xor
or
loope
lock
lret
xacquire
inc
scas
aad
aam
pop
cmp
mov
cmpsl
jmp
movsl
out
push
enter
mov
pop
in
stc
xor
xchg
jle
icebp
mov
dec
stos
repz
cmpsb
adc
mov
push
lret
andl
mov
mov
jns
jmp
add
sbb
stos
aam
das
jmp
cmp
dec
hlt
xor
test
into
push
adc
mov
popf
cmp
mov
or
insb
popf
cmp
push
cmp
mov
or
jmp
push
mull
pop
xor
dec
fcmovu
dec
outsb
rolb
dec
jo
imul
addl
loope
or
ficoms
cmc
test
fxch
add
pop
adc
mov
xchg
add
sbb
lcall
push
imul
insb
xor
mov
mov
inc
mov
mov
push
or
jg
sbb
jle
in
mov
xchg
stc
fwait
dec
mov
pusha
lds
mov
jns
std
mul
mov
push
inc
lcall
dec
fildl
outsb
js
and
cltd
loop
pop
mov
mov
xor
roll
stos
inc
aad
mov
push
add
jg
cmp
lods
pop
fmulp
dec
call
sub
rcl
mov
sub
rcrl
and
mov
jle
mov
and
fmuls
mov
xor
cmpl
xchg
mov
pop
pusha
rolb
xor
or
mov
popf
and
inc
sub
sbb
add
dec
push
in
lock
xchg
cmp
out
xchg
jmp
adc
jmp
mov
insb
jmp
in
mov
jb
mov
inc
sbb
push
cmp
sti
mov
lcall
mov
add
ja
xor
fnsave
cmp
add
push
dec
xlat
arpl
inc
data16
bound
leave
lods
cmp
sti
adc
cmc
pop
or
test
sbb
dec
push
popa
jno
test
jne
in
fimull
aam
les
ret
mov
pop
mov
lcall
adc
cmp
jle
jae
gs
xlat
mov
adc
mov
or
dec
sub
ret
and
in
adc
bound
jmp
xor
test
cmc
dec
fldt
push
fisubs
adcb
mov
test
fdivs
pop
cmp
scas
adc
xchg
pop
lcall
enter
jmp
ret
mov
fcmovb
mov
mov
test
add
add
sub
jle
stc
mov
push
jo
adc
shll
jno
out
stos
mov
dec
mov
jno
nop
jmp
xor
fwait
out
pop
lods
mov
inc
lods
daa
loop
adc
pop
sbbl
push
cwtl
pop
xchg
mov
mov
loope
lret
inc
cmp
cmp
mov
pushf
fadd
mov
leave
mov
dec
xchg
aas
and
outsb
sub
add
push
hlt
mov
mov
push
pop
lock
or
inc
add
lods
mov
out
sbb
cmpxchg
add
cwtl
mov
movsb
call
sar
sub
cmpsl
cwtl
clc
cmp
inc
adc
inc
aas
jns
in
pop
ljmp
cltd
jle
or
and
hlt
daa
lahf
add
or
call
add
jle
and
cmpsb
cli
push
data16
scas
inc
cmp
cmp
jns
inc
int
frstor
and
mov
xchg
test
fs
movsl
xchg
ficomps
icebp
pop
test
mov
push
push
pusha
push
psrlq
and
mov
out
jno
cwtl
add
sahf
push
cmp
jae
add
arpl
ss
fadds
push
or
or
sub
mov
incb
sub
sub
mov
jle
add
outsl
inc
test
addr16
mov
inc
cltd
or
pop
or
and
call
xor
cwtl
in
in
mov
fsub
mov
ret
sub
stos
idivl
insl
lds
mov
cmp
xor
dec
pusha
inc
xor
cmp
dec
fstp
xlat
repz
sub
popa
fucom
lcall
and
mov
xor
popf
ret
pop
mov
mov
test
fidivl
loope
push
pop
jmp
mov
sarb
adc
ret
add
test
inc
out
cli
jl
and
adc
jno
test
dec
mov
sub
test
dec
sbb
js
mov
mov
push
xchg
je
add
adc
mov
sub
movsb
test
jl
xlat
out
add
lods
dec
sbb
pop
push
scas
push
jo
and
dec
loope
shl
insb
and
out
mov
sub
je
push
test
push
push
and
xor
jns
divb
pop
dec
nop
out
cld
xchg
cli
jae
fucom
test
cli
shl
imul
pop
addr16
inc
scas
and
xchg
out
pop
bound
mov
jmp
mov
ret
out
dec
inc
fbstp
pop
dec
mov
mov
ss
adc
adc
int3
inc
xchg
arpl
in
icebp
inc
xchg
aam
mov
mov
xor
sub
jno
mov
adc
insl
pop
cmp
jl
xor
sub
ret
mov
aam
jg
sub
addb
inc
xchg
mov
xor
repz
pop
add
cwtl
out
sahf
popf
aas
pop
mov
mov
lret
dec
jnp
scas
lret
lock
push
lods
icebp
test
fsubs
lds
xor
jge
sbb
roll
jne
lret
test
orb
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
mov
push
adc
mov
pop
bound
pop
or
jmp
es
js
stc
negb
push
xlat
jns
cmp
sub
push
fnstcw
pop
xchg
sbb
jg
xchg
imul
sub
mov
or
sbb
hlt
jmp
ja
cli
mov
pop
pop
iret
daa
or
lahf
dec
cs
mov
cld
sub
sub
fsubl
xlat
jne
lret
mov
cli
mov
mov
lcall
fildll
call
fdivrl
mov
xchg
insl
add
ret
lds
out
dec
jo
push
and
lock
out
mov
cmpl
negl
inc
fldl
mov
cmp
sub
dec
cli
into
and
jg
pop
cmpsl
loope
into
xchg
push
loope
jbe
dec
sarl
xlat
gs
inc
jge
jecxz
or
aam
adcl
cwtl
aam
jg
and
outsl
sbb
mov
into
mov
and
dec
mov
xchg
mov
out
and
pop
aam
sub
xchg
lods
jmp
inc
aaa
pop
mov
mov
stos
cltd
add
adcb
push
gs
mov
sti
fidivl
jb
mov
mov
rclb
aaa
lock
rcrb
add
mov
dec
mov
dec
jecxz
adc
dec
sub
data16
in
mov
and
fstl
pop
mov
loop
leave
lcall
inc
and
iret
dec
testb
insl
rcll
movsb
js
lcall
cmp
fstpl
dec
dec
xchg
cmp
in
push
clc
in
lock
xchg
or
xor
push
cmpsl
push
push
lahf
into
mov
pop
mov
outsb
insb
pop
sbb
call
add
adc
jmp
jp,pn
shlb
mov
dec
lods
in
cli
out
inc
sub
and
adc
sbb
push
xchg
sbb
ret
sbb
shll
and
and
popa
lret
roll
xlat
push
sbb
aaa
call
aad
data16
cli
mov
addl
les
xor
push
adc
mov
xchg
and
outsb
jno
jae
stos
mov
in
dec
jle
fisubrs
mov
lcall
test
xchg
cli
out
mov
pop
pop
scas
dec
pop
fsubs
fwait
inc
and
pop
push
gs
loopne
adc
cmp
dec
push
cmp
xlat
test
call
hlt
inc
insb
aaa
inc
fisubrs
sbb
jp
fimull
cmp
fnstsw
mov
cmp
cmp
cmc
mov
hlt
or
fsts
or
mov
std
repnz
test
jns
push
stos
aaa
test
stc
in
cld
int3
mov
outsl
push
loope
bound
inc
mov
popa
dec
or
lock
int3
xchg
mov
xchg
inc
mov
sub
repnz
lock
jle
iret
jmp
shl
arpl
mov
mov
add
and
je
arpl
jmp
pop
fcomip
fcmovbe
sub
xchg
and
or
fwait
xchg
lock
sub
sbb
jne
dec
fdiv
mov
push
aaa
jb
inc
pop
jns
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
arpl
daa
inc
mov
jg
inc
enter
inc
sbb
arpl
fs
aaa
dec
aam
pop
pop
jbe
sub
xchg
add
mov
pushf
jl
repnz
dec
test
neg
scas
in
lret
fnstenv
cld
ljmp
push
lds
lret
test
sbb
jge
cmp
pop
jmp
pushf
dec
lret
add
popa
lret
inc
enter
aaa
inc
pusha
inc
fwait
in
sbbb
xchg
ljmp
test
test
imul
sbb
xchg
outsl
dec
mov
pop
imul
jp
popa
out
push
xor
sub
sbb
addr16
push
and
adc
insl
movsl
insb
pop
mov
fldcw
enter
mov
mov
in
or
jne
ret
test
jmp
pop
push
insl
add
cmp
out
cli
pop
xor
dec
inc
jmp
add
shlb
sbb
add
and
imul
iret
sub
ret
and
push
sub
inc
xor
adc
dec
jb
movsl
lcall
cmp
mov
out
aad
cmp
std
mov
out
mov
mov
pop
outsb
sbb
xlat
xor
pop
push
aad
mov
in
insl
aam
sub
mov
cmp
dec
test
push
adc
loopne
pop
icebp
jecxz
mov
mov
jl
out
add
sub
test
in
test
lret
cld
sti
and
mov
pop
and
cli
loop
shll
enter
rclb
add
dec
sbbb
ret
jmp
mov
or
jo
mov
testl
or
dec
orl
testb
dec
pop
int3
add
testb
cmp
test
mov
jns
inc
mov
mov
dec
ss
mov
out
pop
dec
xlat
push
pop
sbb
mov
inc
push
lea
loope
sbb
cmp
xchg
mov
xor
pop
hlt
stos
cmp
scas
inc
aam
xchg
aaa
lods
inc
mov
fs
push
adc
push
mov
inc
push
call
xor
ret
dec
push
sbb
mov
xor
test
iret
xchg
add
dec
out
jp
gs
jg
iret
push
aas
ljmp
shll
bswap
jmp
mov
fbld
and
out
out
mov
les
mov
inc
test
rep
sub
lcall
push
pusha
or
jbe
xor
int3
test
or
add
add
rcll
mov
aam
mov
push
in
sub
test
pop
sbb
cmc
lock
fisubrl
add
int3
pushf
jnp
int
xor
out
addr16
into
out
or
mov
mov
and
test
jecxz
jbe
std
aad
repnz
adc
xor
sub
cmpsb
std
mov
je
xor
push
sub
sbb
outsl
xor
push
pminub
dec
add
rorl
out
in
push
test
addr16
xchg
lret
jecxz,pn
daa
lret
inc
lret
push
decb
and
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
pop
jo
mov
stos
adc
adc
push
jne
mov
cs
add
jge
dec
aas
out
fldcw
insb
add
cld
jmp
mov
stos
negl
fcmovnbe
mov
pop
stos
add
lret
gs
outsl
inc
rcrl
lock
dec
mov
pop
cwtl
js
aaa
mov
mov
ja
into
into
jae,pn
bound
xor
aam
adc
lea
jl
out
pop
sub
stc
dec
mov
cmpsl
pop
pop
adc
xor
pop
out
out
inc
jge
mov
mov
jo
sub
popf
in
aaa
add
test
int3
pop
leave
mov
lods
mov
mov
sub
add
insl
movsl
adc
cmpsl
mov
imul
sub
mov
xchg
xor
cmpsl
mov
push
fdivrs
sub
mov
loop
icebp
push
xchg
jnp
inc
mov
insb
lret
push
call
push
pop
mov
scas
clc
outsb
mov
adc
jb
cmp
and
test
adc
imull
push
or
fwait
aaa
inc
insb
add
push
das
add
stos
movsl
loope
dec
mov
pop
xor
cmpsl
xchg
inc
or
mov
pop
gs
sub
lret
mov
repnz
sahf
rdmsr
jb
cld
xchg
push
adc
and
test
push
movsb
cmp
pop
sbb
cmp
jecxz
ja
mov
addr16
cmpsl
mov
jno
mov
jg
mov
lahf
add
and
lds
fdivrs
push
adc
dec
sti
and
je
stos
int3
sti
test
xchg
mov
loope
std
mov
mov
orb
xor
ds
and
ja
insb
jl
mov
add
cwtl
fstps
cmp
sub
pusha
xchg
gs
subb
test
adc
mov
lret
and
jle
dec
xor
mov
sahf
pusha
pop
adc
push
mov
dec
sbb
xchg
sbb
adc
sub
sub
jne
mov
loopne
mov
test
sbb
inc
push
aam
add
in
push
sub
outsl
xorb
jge
pop
mov
jb
lea
sbb
ds
fs
or
int
hlt
popf
and
shrl
sub
push
and
dec
add
sbb
stos
xor
or
mov
stos
cmpsb
pop
mov
xchg
cs
and
icebp
sub
lahf
popa
rclb
push
gs
mov
lret
test
and
das
iret
add
mov
fsts
push
cmc
inc
sbb
insb
inc
sub
popf
pop
nop
neg
int
addr16
adc
ja
inc
mov
dec
arpl
xchg
dec
add
insl
vunpcklpd
mov
ret
scas
lods
dec
test
mov
loope
jae
mov
xchg
scas
pop
mov
lcall
cli
outsl
adc
mov
push
dec
out
sti
sbb
aam
in
jne
or
jecxz
mov
jecxz
sub
inc
fisubrl
sar
push
sti
aas
jne
cmp
imul
stos
jno
cmp
fcomp
pusha
lock
shrl
fnstsw
mov
xor
push
xchg
sahf
xchg
jo
jp
pop
lock
dec
les
xlat
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
pop
shrl
out
jp
add
lret
mov
aam
shll
dec
sahf
in
mov
arpl
push
sbb
in
cmpsb
add
scas
jg
data16
xchg
jge
ds
lods
inc
xchg
mov
lods
repz
jo
pop
dec
cmc
xchg
sbb
pop
mov
scas
movd
jns
int3
sbb
and
in
test
imul
dec
sbb
aas
mov
fisubrl
sub
push
jle
jnp
mov
jle
or
sub
xchg
ret
sbb
pop
mov
jns
xchg
push
xchg
sub
xchg
jmp
sub
lods
jae
lods
adc
enter
add
sti
imul
fadd
xlat
jg
sbb
test
xchg
pop
test
xor
jne
cmove
push
xchg
push
sub
lds
dec
mov
popf
inc
and
imul
icebp
inc
sbb
mov
pop
add
inc
adc
es
jb
jp
fidivrl
iret
rorl
loop
insl
in
je
pop
pop
push
add
mov
or
and
or
cltd
fiaddl
inc
jne
repz
jge
xchg
out
and
jle
dec
jl
lds
and
mov
or
mov
into
add
movsl
jl
ret
sbb
mov
cmp
std
and
lock
inc
repnz
cmp
inc
adc
je
cltd
mov
mov
shrb
push
or
daa
adc
push
mov
fbld
fildll
loop
pop
pop
mov
stos
sarl
ret
sbb
pusha
cmpl
mov
pop
or
sahf
pusha
sti
mov
mov
movl
adc
sub
fs
fimull
jmp
mov
aas
or
aam
mov
addr16
pop
pushf
jmp
stos
fsubrp
mov
mov
popa
les
adc
ljmp
pop
incl
shl
jle
jecxz
push
iret
xor
push
and
sbb
push
cmpsb
call
scas
inc
adc
add
cltd
xlat
xchg
sub
idivl
imul
cmc
pop
adc
xchg
lret
stos
out
enter
inc
int
push
pop
icebp
xor
lds
leave
add
push
mov
outsb
sahf
mov
push
or
cmp
idivb
cmpsb
repnz
out
pop
fisttpll
jg
icebp
sbb
mov
adc
movsl
mov
leave
dec
sbb
dec
bound
stos
ja
lahf
dec
dec
addr16
js
ja
outsb
jbe
xlat
sub
or
xchg
push
ja
arpl
mov
mov
loope
adc
pusha
stc
out
mov
fstpl
movsb
cmovb
adc
aaa
inc
jns
pop
mov
outsl
aas
test
dec
push
cmpsl
jnp
sahf
gs
cwtl
push
int
aas
cmc
cmp
pop
ss
test
push
lcall
inc
inc
sti
ja
repnz
pop
enter
in
pushf
push
jno
and
test
inc
and
aad
or
dec
rclb
mov
or
jne
test
fadd
push
mov
repnz
mov
xlat
fisttpl
push
lcall
pop
lcall
shl
push
xor
fwait
iret
pop
jmp
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
ret
inc
dec
adc
adc
jp
fnsave
test
cmp
inc
jo
cmc
cmp
out
push
cmpsb
int
fstps
mov
int
sub
cmp
mov
pop
pop
jo
jmp
cmp
out
leave
or
hlt
mov
mov
xor
jae
imul
mov
or
push
and
es
repz
mov
test
mov
aas
test
and
aam
fsubrs
daa
xor
and
jbe
adc
fildl
xor
cmpsl
popf
xlat
xchg
imul
sub
insl
cwtl
jmp
jg
sub
push
mull
add
mov
pop
add
mov
sbb
sub
mov
mov
andl
outsl
scas
sarl
icebp
dec
sbb
or
cwtl
sbb
mov
aam
ret
gs
jl
push
jnp
popf
cmp
es
outsl
lods
jge
cmp
cmp
dec
pushf
mov
fldt
aas
filds
das
adc
sbb
jae
cmc
mov
hlt
or
mov
enter
jmp
jbe
fidivl
scas
js
mov
shll
lret
subb
loopne
inc
test
sbb
cvtdq2ps
xchg
int3
fstl
shlb
loop
es
xchg
lcall
or
ret
cli
adc
insb
sub
xlat
adc
push
cmp
cld
mov
jns
push
mov
pusha
pop
pushf
jmp
inc
xor
dec
jge
gs
xor
cmp
movsb
lds
jno
loopne
push
jmp
or
jb
nop
lods
and
nop
aaa
or
mov
pop
lods
test
popa
push
cmp
push
dec
fsub
insb
out
pusha
dec
aam
jbe
sub
mov
cmp
arpl
enter
arpl
mov
xchg
outsb
int
mov
aad
fwait
in
outsl
jl
inc
mov
cmp
shlb
ror
fwait
xchg
div
mov
inc
cmp
cmpsb
xlat
inc
aaa
orl
and
stos
iret
sarb
notl
in
cwtl
xchg
aam
lar
cmp
faddl
jo
dec
jmp
adc
iret
fwait
and
dec
rcl
push
cmp
or
dec
and
aas
jo
push
sbbl
stc
mov
into
ret
movsl
inc
sub
ss
jno
push
shll
push
imul
in
lcall
fcmovu
test
stc
add
inc
inc
jle
in
subb
xor
mov
addl
dec
test
push
add
mov
cmp
adc
mov
ret
mov
mov
xchg
jmp
nop
mov
je
repnz
push
add
lret
out
gs
xor
in
jg
sahf
movsb
stos
jg
clc
in
inc
out
push
xlat
int
and
adc
inc
stos
cmp
shl
xchg
xchg
dec
icebp
dec
lret
and
cld
jne
pop
and
jnp
movsb
inc
repnz
jne
fcompl
movd
jno
cmp
sub
dec
sbb
aad
dec
pop
test
outsl
les
icebp
in
or
xchg
aaa
fidivs
mov
lea
pop
mov
cltd
inc
shl
mov
cld
sub
mov
lcall
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
sbb
xor
mov
out
mov
test
enter
xor
dec
push
cmp
insb
fmull
in
repnz
lock
sbb
in
and
push
divl
div
pop
jl
xchg
xchg
and
xchg
insb
imul
pop
pushf
lea
or
in
cli
and
out
faddl
dec
mov
sbbl
sbb
outsb
js
sub
add
imull
mov
icebp
lods
mov
sti
adc
jbe
repz
shl
pop
movsb
test
xchg
xchg
fisubl
adc
push
in
loop
cmpb
dec
push
pop
pop
and
mov
arpl
into
mov
mov
jg
and
mov
sti
cmpsb
aaa
movsb
xor
hlt
adc
mov
sbb
jne
mov
repz
pop
in
jns
pusha
imul
test
enter
cmpsl
xor
rcr
xor
aad
movsl
js
mov
inc
pop
and
lret
lods
push
nop
jmp
stc
sbb
sub
add
hlt
aaa
fisubrs
arpl
clc
pop
push
mov
xchg
fists
or
xchg
stos
sbb
mov
gs
inc
inc
lcall
pop
and
and
inc
or
hlt
test
cmp
rclb
or
inc
outsl
nop
jbe
inc
dec
lods
rcll
push
stos
neg
push
adc
adc
aad
jg
cli
sub
mov
adc
lcall
push
sbb
addr16
jmp
test
cwtl
add
cs
jmp
cli
loopne
and
xchg
push
adc
rol
pop
mov
clc
jnp
push
mov
sbb
insb
repnz
lods
iret
add
test
jg
js
xchg
outsl
jae
sub
test
and
out
stc
orl
mov
jge
loope
cmp
xchg
cli
jg
or
rol
int3
jne
push
jae
dec
xor
jns
push
outsb
sub
popa
inc
jo
test
fs
gs
lcall
dec
jmp
ljmp
loopne
fmull
je
sbb
mov
and
mov
jns
insl
pop
jle
push
sbb
in
inc
xor
pusha
imul
fildll
push
scas
out
push
pushf
test
pop
mov
jmp
sbb
outsb
sub
sub
rcrl
push
int
mov
push
outsb
idivl
xor
push
sub
mov
cld
rcrb
bound
data16
lahf
in
jns
inc
fcomi
mov
sbb
mov
cmp
and
pop
loope
jnp
mov
jl
js
js
or
gs
push
out
inc
cs
push
sbb
xor
ja
mov
fistps
inc
movsl
sahf
movsb
push
mov
fdivl
add
pop
mov
hlt
sub
mov
sub
xlat
loop
mov
push
jl
mov
int
rcrb
je
call
mov
int3
jb
test
pop
mov
xor
movsl
or
dec
mov
test
sbb
fs
adc
sbb
mov
clc
inc
test
cltd
in
pop
nop
jg
clc
mov
push
cld
pop
data16
lods
jno
lods
jp
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
into
lods
js
adc
adc
sbb
dec
aaa
nop
sbb
mov
lock
push
roll
ret
jecxz
add
xorb
add
cmp
jo
sub
ljmp
xchg
inc
int
and
frstpm(287
scas
xchg
sbbl
push
outsb
mov
pop
aad
aad
pop
pop
data16
in
or
js
sub
outsl
daa
mov
mov
pop
jnp
stos
pop
jno
and
cmpsb
xor
mov
push
pop
divb
jb
xor
loope
pop
sbb
rclb
mov
aad
imul
notb
jns
jo
sbb
das
ljmp
loopne
notb
test
fdivrs
mov
inc
xchg
cmp
jae
sub
cs
fldt
cmp
add
or
dec
push
pop
aam
add
fnsave
aad
push
cmpl
sub
mov
push
xor
xchg
dec
mov
cmpb
jl
sub
push
adc
adc
lcall
data16
insb
popf
loopne
and
aaa
push
in
mov
repnz
adc
sbb
les
lret
pop
add
adc
ja
imul
outsb
cmp
jne
les
inc
fcomps
lret
stos
in
inc
adc
dec
mov
xor
in
jecxz
stc
inc
fsubrs
lock
test
push
ret
nop
sub
mov
push
xchg
enter
jo
fcoml
pushf
int3
icebp
dec
sub
dec
movsl
bound
pusha
cmp
cmc
jp
sub
lea
fisubrs
jge
mov
pop
idivl
divl
movsl
sbbb
dec
cs
push
fsubs
loope
inc
or
or
jl
js
pop
adc
mov
adcb
add
stos
or
fidivrs
mov
out
xor
or
lods
and
fs
lods
pop
sbb
mov
mov
shlb
shrl
xchg
imul
cmp
pop
xor
mov
cmc
mov
aad
push
mov
cmp
sub
push
sti
jnp
ljmp
fisubrs
adc
loop
fwait
push
add
inc
add
ret
xchg
ss
jmp
popa
mov
ret
inc
out
test
or
add
out
or
cltd
sbb
or
loop
mov
aam
aas
pop
pop
push
xchg
movsb
jo
leave
ja
into
fs
rcl
add
clc
flds
out
enter
roll
add
out
test
inc
jmp
xor
int
sbb
jp
and
lahf
aas
mov
in
je
movsl
or
xor
mov
fcoms
dec
lods
jb
adc
or
fdivl
mov
xlat
or
into
xor
mov
enter
std
push
or
fstpt
cmp
push
ja
adc
repz
dec
cs
xor
in
aad
xchg
stos
or
lret
rolb
push
sbb
nop
and
inc
daa
push
mov
fwait
cmpsb
dec
test
dec
dec
fistl
mov
mov
ss
mov
test
lret
dec
test
sub
pop
sub
outsl
rolb
lods
jno
xchg
mov
fistpl
or
aam
bound
inc
fldt
sti
jl
dec
loope
icebp
cld
je
aam
mov
repnz
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
pop
mov
jle
xor
adc
jbe
out
sahf
cmp
outsl
lods
subb
inc
mov
add
ja
call
cwtl
jg
adc
xchg
pop
ds
push
dec
testl
add
inc
stos
lret
test
fs
and
cli
pop
ljmp
data16
scas
jecxz
sub
and
dec
popa
or
popf
xchg
and
lahf
mov
jmp
dec
xchg
out
sbb
mull
cmp
stos
mulb
jae
push
rcrb
pop
in
sub
fmull
mov
jbe
pop
mov
das
std
call
bound
xrelease
push
aaa
aad
push
push
pop
seta
cld
insb
cmp
jno
sbb
push
hlt
jne
xlat
jl
lcall
mov
sbb
jmp
cmc
xor
lods
stc
ret
push
inc
adc
movsb
fiadds
push
jo
mov
mov
inc
mov
jecxz
dec
xchg
in
jno
push
xor
dec
dec
addr16
popf
daa
sub
fwait
push
es
xchg
cli
cwtl
sub
ss
nop
mov
or
scas
popf
jge
sub
loop
sbb
scas
mov
xchg
iret
pop
add
dec
inc
xchg
sbb
dec
add
ret
sub
in
jb
les
add
and
insl
rcrb
push
rcrb
xlat
mov
sahf
mov
cs
add
mov
pop
xchg
lea
add
icebp
mov
push
ja
xchg
sbb
cs
imul
mov
mov
aam
xchg
fsubs
sti
jecxz
bound
gs
inc
jnp
std
int
mov
jp
int
out
dec
pop
inc
xor
fidivs
xchg
jle
dec
inc
hlt
out
pop
xchg
jo
sti
sbb
jno
jge
inc
and
shll
jecxz
lods
pop
xchg
push
clc
push
or
lahf
in
xchg
sbb
mov
test
or
hlt
mov
and
clc
pusha
and
jbe
push
sbb
fnstcw
mov
xchg
dec
sbb
shrl
jns
stc
int3
xor
ja
cli
dec
jle
sub
daa
sub
outsl
sbb
test
rcrl
fstpt
loope
adc
loop
aas
pop
lds
mov
fdivs
leave
push
js
in
cmp
mov
mov
or
jmp
or
xor
je
cwtl
lahf
ret
mov
pop
mov
jbe
pop
bound
iret
mov
cmp
daa
hlt
sub
sbb
adc
jbe
inc
sub
push
and
or
mov
data16
push
xlat
mov
sbb
sbb
outsl
lock
sub
push
int
shll
out
mov
cmp
sahf
dec
sbb
repnz
mov
daa
mov
xchg
outsl
pop
lods
out
rclb
sub
sti
fwait
jbe
lods
xor
stos
cmpsl
and
ret
dec
dec
ret
mov
gs
dec
rorb
fdivrp
push
dec
fsubp
and
cwtl
imul
inc
sbb
cltd
and
jb
lret
mov
pusha
xchg
fwait
inc
pop
pop
js
xchg
pop
das
in
sbb
xlat
or
jae
stos
mov
sub
mov
push
sbb
out
jbe
xor
inc
sahf
xchg
sub
fdivrl
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
stc
jle
xor
adc
sub
jmp
out
adc
lods
pop
add
or
mov
jle
push
sbb
pop
fwait
mov
out
pop
jecxz
cmp
loope
and
repz
pop
mov
hlt
xlat
iret
xor
aad
addr16
jns
cmpsl
out
jmp
cwtl
mov
outsb
out
cmp
dec
lahf
mov
sbb
push
mov
clc
xchg
jl
cmpsb
pop
rol
imul
and
xor
and
fisttpl
popf
mov
jns
jge
sbb
dec
add
mov
adc
ror
repz
jb
lret
lea
pop
dec
jb
push
outsl
cwtl
hlt
pusha
popf
es
push
mov
test
xor
stos
mov
jl
pop
jo
mov
or
movsl
pop
jbe
lahf
inc
push
xor
xor
or
lahf
dec
leave
sub
enter
cmp
lahf
fwait
cs
push
cmpsl
sbb
mov
sub
adc
inc
mov
stc
jno
sub
ja
or
cpuid
mov
das
mov
sbb
sbb
mov
pop
cmp
pop
inc
popf
xor
out
lods
jl
and
cmpsb
inc
adc
sbb
pop
jecxz
sahf
mov
jecxz
iret
fcoms
mov
dec
jno
xor
adc
mov
push
jbe
pop
or
cmc
cmp
popa
add
int
hlt
sbb
jnp
arpl
jae
gs
xor
and
adc
sti
sarl
shll
inc
pop
mov
xchg
mov
mov
and
pop
sub
xor
xor
adc
dec
mov
and
cmp
js
sbb
cmp
fwait
pop
shll
imul
out
ss
sbb
in
mov
cs
push
dec
cmpsb
push
sbb
loop
int3
mov
dec
pop
or
pop
jns
hlt
inc
pushf
fsubs
cmpl
mov
mov
int3
fsts
sbb
sarb
es
subb
jb
fiadds
mov
sahf
mov
cltd
shll
mov
je
addr16
popf
add
imul
es
xchg
pop
in
add
test
mov
xchg
sahf
testb
insb
mov
rorb
add
into
insb
add
pop
jnp
jns
xchg
icebp
aad
js
or
aaa
jmp
cltd
jb
add
imul
jle
mov
xor
pop
sub
inc
jne
sub
out
and
xchg
cmpsb
jecxz
xor
shll
stos
mov
or
fcmovu
or
sub
dec
les
das
ss
jmp
hlt
mov
je
cmp
dec
outsb
mov
dec
movsl
adc
mov
stos
push
lods
sub
mov
lret
out
cmp
ja
mov
and
mov
aam
pushf
orb
aam
movsl
leave
cmc
aam
and
mov
push
out
or
or
push
cmp
xchg
jg
dec
call
push
sti
movsb
test
clc
mov
jno
ret
cmp
fcmovnb
sbb
add
sti
fwait
dec
fdivp
test
imul
gs
xchg
add
leave
pop
sub
jo
stc
out
lock
push
lods
push
rorl
rorb
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
mov
sub
adc
popf
xchg
loope
and
mov
es
adc
mov
mov
jnp
rol
shlb
mov
je
hlt
mov
adc
lock
cld
into
es
xor
int3
stc
adc
pop
and
insl
inc
fadds
jae
inc
pop
or
arpl
add
push
or
filds
stos
push
mov
mov
stc
mov
js
xor
xlat
jnp
mov
dec
scas
or
xlat
push
ret
inc
push
subb
ret
or
in
inc
lret
cltd
sbb
cmp
sarl
sbb
inc
mov
push
add
fiadds
or
cli
pop
add
test
inc
sub
xchg
xor
sahf
push
push
xchg
cmc
pop
inc
cmp
adc
add
lock
jo
imul
stos
aad
mov
inc
xchg
mov
aad
inc
sub
adc
enter
fdivl
add
out
cmc
xchg
out
clc
out
push
in
or
jp
loope
lcall
lret
cs
shlb
leave
sarl
pop
jl
mov
nop
or
mov
lea
dec
enter
es
sub
mov
leave
inc
xchg
fcoml
hlt
lahf
sbb
test
rol
scas
mov
scas
stos
sahf
pop
shlb
jg
repz
ret
in
mov
adc
sub
dec
add
pop
dec
xor
xor
or
push
jl
lods
incl
data16
inc
adc
sti
pop
xchg
xchg
xor
aaa
adc
fld
cmc
push
sub
movsb
mov
in
cmpsb
cld
sti
sbb
and
stos
repz
adc
fisttpl
lds
cmp
mov
xlat
faddl
xor
dec
inc
cwtl
xor
sbb
loopne
es
jo
lcall
adc
in
dec
data16
clc
lcall
adc
ljmp
add
add
pop
mov
aaa
cmpsl
sti
mov
dec
int3
clc
in
cs
fsubrs
cltd
pop
aad
lret
imul
mov
fwait
xchg
rol
mov
pop
push
test
xchg
cltd
sub
nop
popa
xchg
sbb
filds
cwtl
or
mov
cmpsb
mull
rorl
cwtl
popf
out
adc
cmp
inc
jae
loop
and
add
add
or
push
sub
pop
movsb
out
xchg
daa
pop
adc
adc
cmpsb
xchg
sub
jmp
call
mov
call
push
repnz
cmpsb
adc
dec
outsb
push
hlt
adc
adc
lret
mov
pushf
or
push
inc
insl
adc
aad
addr16
out
xchg
xchg
ds
sbb
xor
sub
mov
fldenv
cmp
repnz
cwtl
lea
cmc
jnp
ja
pop
cld
fmull
or
addr16
and
imul
lds
test
push
xchg
cmp
pusha
push
adc
ds
adc
pop
pusha
sbb
xor
fcoml
jmp
ficoms
mov
mov
add
data16
or
inc
push
test
ror
cmp
inc
aad
or
jecxz
adc
sub
xchg
adc
in
icebp
lock
loope
dec
push
stos
popf
in
addl
sarb
fwait
jo
lds
add
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
pop
mov
push
sub
dec
push
push
inc
cmp
addr16
les
loopne
inc
sahf
pusha
mov
jae
xor
cmpsb
inc
enter
fists
mov
out
push
negb
push
movsb
add
sbb
addb
aaa
arpl
aam
test
aad
adc
jge
sbb
sahf
lcall
sub
jl
mov
nop
es
clc
lea
fsubl
sbb
repz
pop
mov
aas
lea
and
cmp
xchg
adc
ficomps
push
aam
xlat
in
aam
nop
adc
rorb
lock
mov
adc
add
mov
lods
pushf
mov
dec
pop
jo
cs
or
sbb
add
scas
ss
fildl
loop
sub
jge
jmp
xchg
test
dec
dec
add
mov
inc
testl
xlat
div
enter
xchg
das
ret
cli
and
jecxz
xchg
rorb
sahf
mov
xor
xchg
loop
dec
fs
dec
or
fcmovnu
sahf
dec
daa
xor
xor
in
mov
ljmp
mov
add
mov
data16
push
mov
sbb
int
test
std
adc
and
ret
mov
and
out
xchg
test
in
fs
loopne
add
cli
sub
adc
sub
sub
lret
pop
add
cwtl
rolb
cmp
push
and
stc
ja
dec
mov
add
pusha
inc
scas
rcl
mov
adc
out
fists
dec
movswl
outsb
dec
jae
into
hlt
inc
push
add
ror
and
push
add
sbb
xchg
xchg
ret
mul
xchg
dec
sbb
and
arpl
cs
mov
pop
icebp
in
xor
mov
sub
lahf
repz
js
xchg
in
sub
pusha
andb
mov
cmp
ret
add
hlt
ret
pop
sub
mov
lods
sahf
je
outsl
popa
sti
sub
xlat
mov
push
inc
sub
or
sbb
dec
lret
out
mov
repz
mov
addb
pushf
loopne
loop
ret
push
push
fdivrl
clc
fidivl
dec
test
pop
mov
fildl
pop
and
or
dec
and
in
mov
push
push
sbb
xchg
fs
nop
xadd
mov
out
test
dec
jb
jns
pop
fwait
outsl
jnp
adcb
jg
xor
jne
add
add
xor
sbb
es
dec
int
adc
jle
loope
in
shlb
sbb
xchg
lock
paddw
lahf
pushw
sub
xchg
cltd
lea
push
outsl
sbb
das
in
mov
ret
push
mov
out
xchg
ficomps
add
es
pop
push
ret
aaa
lret
push
ja
pop
mov
sub
jg
daa
push
and
repnz
inc
mov
mov
mov
scas
movl
sub
mov
arpl
scas
arpl
or
lret
mov
mov
in
xchg
repnz
out
sahf
jne
int
imulb
pop
mov
hlt
cwtl
mov
push
mov
cmp
dec
sbb
cltd
pop
mov
call
mov
mov
mov
jmp
or
mov
adc
outsl
bound
sbb
adc
in
out
popa
test
aaa
in
add
sub
lret
out
sub
pop
add
lods
lcall
or
aaa
jno
xchg
mov
dec
push
cltd
push
into
mov
aas
jl
sub
sub
mov
fxch
pop
adc
fsubrl
lock
mov
inc
jmp
out
mov
adc
push
inc
adc
mov
and
adc
sub
pop
pop
pop
icebp
xor
dec
imul
lret
sti
jbe
xchg
mov
rcrl
jmp
or
mov
xchg
xchg
cld
cmpsb
out
jge
mov
ja
fnstenv
dec
pop
jp
out
dec
popf
mull
adc
dec
jne
repz
add
dec
inc
lcall
push
sub
jle
sbb
inc
stos
add
leave
or
cmpsl
inc
ljmp
adc
cmp
sarl
stos
pop
add
lahf
rcrl
jge
in
dec
xor
in
mov
lock
stc
cmp
loope
pop
loop
push
mov
inc
aaa
aas
dec
inc
aas
jnp
pop
pop
or
cmp
inc
fwait
push
outsb
inc
ret
sbb
jge
dec
jmp
in
push
in
movsb
icebp
add
pusha
lret
hlt
push
adc
rcrb
stos
dec
mov
into
fs
js
xchg
stos
inc
jmp
fnstcw
in
mov
or
mov
fxch
and
stos
dec
xchg
insb
lret
lea
pop
lods
shlb
faddl
fisubs
leave
in
cmp
test
xchg
bound
data16
loop
sub
inc
xchg
aad
in
push
lods
call
iret
arpl
enter
inc
sub
enter
mov
or
aas
ss
fdivl
mov
xchg
fnstenv
mov
test
sub
aad
rolb
sbb
dec
ds
inc
mov
push
or
sub
xchg
push
into
rcrl
mov
dec
sub
adc
xchg
dec
outsl
sub
std
addr16
ret
jbe
or
loop
dec
sbb
sbb
mov
les
shll
adc
fidivl
dec
dec
movsl
jae
fcom
js
xorb
xchg
cltd
pop
lret
out
mov
jecxz
js
rorb
cld
jg
mov
rcrb
lahf
les
or
mov
mov
pushf
cmp
xchg
out
pop
add
aam
dec
jne
lods
push
push
mov
inc
aam
jmp
jmp
loope
adc
mov
iret
scas
or
inc
cmp
fcoms
fld
jg
pop
pusha
mov
inc
ret
in
push
push
sub
add
outsl
fwait
or
rcll
cltd
sbb
push
loop
std
sti
mov
mov
shll
jecxz
movsb
push
mov
loop
xor
cmp
dec
aas
dec
mov
push
jge
mov
std
inc
arpl
cmp
sbb
dec
dec
ret
icebp
cmpsl
adcl
mov
fwait
les
sub
aas
in
repz
ljmp
loop
stos
dec
hlt
pushf
shll
mov
outsb
jge
inc
jne
mov
mov
test
out
xchg
inc
dec
cmpsl
or
sbb
test
mull
dec
pop
leave
add
imul
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
dec
jle
or
adc
adc
call
fisubrs
arpl
sub
lahf
mov
repz
inc
stos
push
xor
out
sbb
std
shrb
xchg
popf
dec
jmp
push
jle
lods
mov
dec
test
cmpsb
arpl
cmc
xchg
bound
or
jae
aam
mov
cmpsb
or
xlat
xor
insb
push
and
std
js
jecxz
push
push
divb
gs
sarl
gs
xchg
sub
icebp
jbe
lea
pusha
rep
stos
lret
jp
mov
inc
pop
or
imul
jl
xor
push
jp
lods
adc
push
scas
adc
adc
scas
xchg
lods
movsb
mov
cwtl
stos
cmp
repz
fs
mov
int
divl
adc
pushf
and
mov
jl
lahf
push
cmp
push
mov
pop
sbb
insb
and
mov
inc
push
aaa
dec
push
xor
xchg
mov
scas
xor
test
add
int
dec
adc
mulb
loopne
sub
sub
rcll
jb
adc
adc
jns
fcmove
data16
jae
pop
push
lret
mov
adc
sub
lods
jae
pop
dec
outsl
sub
lods
cmp
dec
inc
rcrb
cmp
cmovbe
cmp
xchg
sahf
jnp
mov
aaa
int
pop
lret
inc
mov
movl
pop
and
rclb
adc
push
jmp
testl
call
lock
mov
mov
pop
dec
arpl
cwtl
lcall
jo
test
push
jle
data16
les
push
pop
fdiv
js
add
and
insb
xor
lret
iret
mov
cwtl
cmp
lock
adc
shr
enter
subl
and
rcrb
mov
xchg
xchg
xchg
jp
mov
and
out
xchg
int3
xchg
cmp
loope
adc
jmp
mov
sbb
mov
dec
xchg
mov
in
mov
dec
mov
mov
xchg
xchg
or
push
jno
jno
js
rcrb
jle
mov
out
push
jg
cli
sbb
pusha
dec
mov
mov
add
add
jle
aaa
stos
mov
pop
mov
lds
push
andl
pusha
out
outsl
sub
push
jmp
push
leave
inc
insb
stc
cmp
xchg
adc
sbb
mov
xorl
fimuls
cmp
imul
pop
xchg
xchg
leave
fsub
jnp
adcb
mov
lods
xchg
repnz
lea
mov
stc
scas
or
pop
jo
jecxz
bswap
stos
cmc
out
mov
jp
fwait
repz
outsb
aaa
sub
sbb
xchg
ret
es
and
loope
jbe
dec
test
or
mov
iret
mov
shlb
cld
int3
out
add
and
mov
pop
in
pop
mov
pop
out
lret
xor
adc
push
cmp
mov
in
addr16
shufps
dec
mov
data16
push
mov
loopne
add
lcall
adc
or
xchg
das
loope
dec
push
fwait
subb
pushf
pop
fdivs
cmp
pop
cld
call
push
inc
scas
daa
jbe
loopne
xchg
int3
pop
add
and
decb
test
add
add
lock
add
xchg
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
das
fisttps
ss
inc
adc
sbb
lahf
push
sarl
or
or
lds
lret
test
mov
add
jp
mov
mov
add
setge
mov
imul
push
enter
sub
cmp
adc
inc
mov
jg
add
sti
xor
sbb
adc
jmp
stos
mov
ffree
mov
sub
inc
xchg
sbb
mov
aaa
mov
aad
push
push
push
dec
dec
shlb
sarb
sub
cmp
cmp
inc
pop
push
ficomps
jmp
leave
xor
add
inc
cmp
leave
add
repnz
cmpsl
cmc
mov
add
push
int3
dec
add
xchg
mov
jo
cs
inc
adc
jb
adc
push
out
ja
or
in
mov
mov
stc
les
aad
mov
bound
or
sbb
cmc
addb
jb
jo
sub
nop
shrl
sbb
lcall
mov
das
repz
mov
sub
arpl
jecxz
xor
in
xor
movsl
clc
repz
imul
dec
jge
push
test
lret
cs
xor
rcrb
xorb
dec
add
add
inc
sub
inc
lods
adc
inc
popa
push
rol
ror
xchg
pop
arpl
pop
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
