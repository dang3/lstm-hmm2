push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
div
rorb
cs
jo
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
stos
addl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
dec
in
dec
negb
sbb
adc
sbb
aas
sub
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lahf
inc
rolb
addr16
sbb
adc
fnstsw
push
hlt
sbb
dec
stos
or
push
das
mov
adc
fidivrl
cmp
jnp
push
and
cld
insb
inc
adc
push
test
ljmp
iret
mov
push
shrb
cmp
scas
mov
push
add
aas
adc
xchg
jns
ret
push
xor
fimuls
or
push
in
sbb
int
sub
inc
enter
pop
nop
das
loope
pop
scas
scas
or
out
ljmp
insb
adc
fcmovu
xchg
pop
xor
sub
call
and
fcoms
pop
or
call
daa
jnp
sti
add
inc
movb
stos
mov
pushf
mov
mov
mov
add
jp
push
dec
mov
fsub
xor
scas
in
jb
subb
mov
mov
test
cmp
mov
cmp
xchg
cld
mov
mov
xor
movsl
enter
pushf
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
sub
sbb
adc
sbb
sbbb
jl
push
jno
inc
lcall
mov
jae
mov
inc
cmpsl
out
clc
mov
push
inc
add
adc
repnz
or
test
js
jge
inc
and
stos
scas
iret
les
shrb
call
test
sbb
xchg
bound
ret
mov
lcall
add
inc
insl
jmp
cmpsl
les
sub
out
or
xor
xor
andl
shl
bound
mov
aas
je
push
sbb
imul
xor
nop
movsl
lret
test
push
pop
stos
pop
and
or
cs
fmull
cs
in
out
add
mov
mov
out
cmp
push
in
lret
shll
jae
sub
cs
sbb
pushf
adc
mov
jo
xchg
pop
push
pop
inc
and
xchg
mov
adc
inc
inc
stos
hlt
ss
movsl
fdivrl
push
icebp
mov
mov
ret
sbb
fistpll
rcr
cmp
mov
divl
xlat
adcb
std
mov
pop
nop
push
jnp
aad
les
pop
mov
mov
xor
ret
add
adc
arpl
jnp
data16
fldenv
sub
fidivrs
mov
js
add
adc
add
xor
jp
mov
mov
pusha
sbb
push
cli
loopne
push
mov
sbb
aad
inc
jge
sub
sub
bound
dec
add
jmp
push
add
add
and
pop
mov
sti
outsl
out
and
rorb
xchg
loop
cmp
aad
adc
in
mov
test
in
xor
add
xchg
jecxz
sti
jecxz
pop
push
mov
xchg
xchg
rcrb
js
test
mov
pusha
inc
lcall
cmp
mov
cmc
ja
push
arpl
rcrb
or
or
inc
lcall
lcall
sbb
lahf
outsl
movsl
fstpt
xor
jp
mov
xor
fwait
movsl
jmp
test
xor
shrb
cmpsl
or
push
mov
mov
jge
and
in
addr16
lret
mov
xor
mov
pusha
or
fs
sahf
imul
ss
cmc
mov
in
cs
mov
mov
in
xchg
cmp
sub
in
mov
xor
xor
sub
imul
jmp
das
jo
je
push
xor
in
lahf
inc
xor
lret
mov
ret
arpl
int3
inc
push
int3
pop
and
in
cmpsb
icebp
movsb
repz
cmp
mov
shrd
jmp
out
push
push
push
mov
dec
sub
sbb
adc
sbb
into
push
sub
push
dec
mov
dec
js
jmp
pop
adc
dec
shrb
xchg
push
mov
enter
push
push
jecxz
mov
insb
and
pop
mov
adc
lret
push
sub
xor
push
out
pusha
jae
mov
jae
and
mov
xor
xchg
add
movsb
mov
cmp
xor
lock
mov
push
bnd
stos
inc
pop
adc
fildll
inc
ficompl
mov
mov
out
adc
popa
shl
inc
int3
cmp
popa
sbb
mov
jge
out
es
inc
outsl
out
sbb
ja
cltd
mov
dec
cmpb
xchg
sbb
pop
je
stos
out
pushf
roll
out
xor
nop
push
cwtl
faddp
and
add
jne
sar
inc
cli
push
inc
jmp
adc
gs
or
or
sti
lahf
inc
fsubs
cltd
and
cmp
pusha
std
daa
xor
push
and
add
sbb
sub
movsl
push
andb
jb
or
adc
mov
mov
popf
xchg
ret
cmp
xchg
sarl
sbb
out
in
push
xchg
cmp
and
pushf
in
subl
lahf
add
pop
xchg
in
adc
and
arpl
xchg
mov
xchg
ja
add
dec
mov
mov
cltd
jno
xor
and
add
mov
jle
daa
pusha
mov
dec
fisttpl
lahf
aas
ret
rclb
lahf
daa
xlat
cmc
dec
jno
adc
orl
dec
xchg
or
jo
pop
pop
add
enter
jo
movsl
jns
sbb
pop
inc
xor
mov
les
sub
jnp
jbe
loope
dec
test
mov
mov
xchg
and
mov
mov
and
jl
dec
fsubs
jp
ds
push
add
push
and
addl
leave
mov
mov
sahf
mov
pop
mov
mov
gs
shl
dec
adc
mov
in
leave
lret
and
out
outsb
jle
jno
js
mov
lahf
scas
sbb
add
movsb
mull
cmp
mov
fstpt
push
ljmp
adc
inc
dec
daa
scas
std
enter
or
adc
dec
sub
rcll
lret
cmp
lock
shl
xlat
loop
int
jecxz
and
imul
imul
sub
xchg
pop
and
sub
loopne
add
fldenv
lea
push
fisttps
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
lret
xor
and
sbb
mulb
aam
adc
mov
or
cwtl
xchg
xor
test
xor
mov
push
push
add
xchg
lds
in
out
movsl
roll
adc
repnz
adc
ds
push
cltd
mov
addr16
add
fsubrl
in
add
sub
clc
mov
stc
int
cli
jl
sub
popa
mov
push
bound
sbb
fdivr
pop
mov
mov
add
jecxz
roll
lds
mov
mov
or
xchg
inc
jnp
dec
loopne
addb
addl
lds
add
loope
push
pop
aaa
xchg
rcrl
movsb
out
inc
push
push
mov
jb
xchg
add
push
or
mov
xchg
push
ret
cltd
lret
jno
fistpll
iret
in
cwtl
out
mov
sbbb
mov
xor
jl
xchg
mulb
xchg
adc
icebp
push
inc
iret
leave
mov
mov
and
adc
sub
lret
adc
movsl
jle
push
xchg
sbb
mov
inc
scas
fstpt
xacquire
int3
ss
push
dec
sub
lahf
mov
loop
inc
out
pop
gs
lahf
push
mov
das
cmp
aaa
int3
mov
mov
mov
cld
cmp
jae
leave
negb
ss
and
test
sbb
loop
stos
and
jmp
jle
in
out
mov
int
jbe
cwtl
insb
mov
or
sub
outsl
push
cmp
out
xchg
pop
dec
in
int3
outsl
mov
jle
into
push
fbstp
jae
lcall
ror
outsl
mov
popa
add
mov
pop
sbb
dec
incb
je
cld
scas
pop
js,pt
fnstsw
movsl
and
pop
lcall
add
adc
xor
inc
call
shr
movsb
shlb
mov
dec
mov
adc
cmpsb
add
push
cmpsb
sarl
cmpsb
test
shr
sbb
je
dec
lock
jp
jnp
push
leave
pushf
sbb
mov
or
xor
test
and
inc
lods
cwtl
sahf
push
push
jne
xchg
rcrb
mov
push
add
sahf
fsubrl
mov
das
lods
cltd
jbe
lds
push
fcomip
gs
xchg
mov
in
daa
mov
out
inc
in
mov
push
imul
stos
movsl
lea
push
shrl
ror
push
xchg
mov
jle
sbb
imul
orb
into
stos
mull
mov
jp
mov
lcall
test
mov
ret
or
add
add
les
or
push
arpl
push
fistps
sbb
adc
sbb
cmc
push
cld
call
cmp
mov
shll
xorl
or
stos
jno
shlb
or
test
sub
jae
adc
inc
cmp
push
push
inc
jge
in
movd
call
inc
hlt
pop
lcall
mov
and
cld
push
out
xchg
push
cld
test
mov
nop
mov
mov
pushf
test
loop
jo
jnp
cmp
mov
int3
test
and
xchg
clc
adc
and
xchg
dec
and
nop
and
cmc
push
stos
popa
cmpsl
outsl
iret
stos
xor
xchg
imul
jne
xchg
mov
mov
popa
cs
shll
test
mov
flds
jmp
xor
pop
push
push
sub
fmull
mov
xlat
xchg
jmp
mov
mov
orb
into
inc
add
int
push
and
push
adc
sbb
rorb
mov
mov
xchg
inc
cwtl
loopne
inc
clc
mov
sub
mov
in
rorl
scas
roll
jle
test
sub
mov
mov
loopne
dec
cmpsb
sbb
sbb
out
push
xor
xor
xlat
add
pop
scas
push
and
leave
mov
jnp
fstps
out
iret
repnz
mov
jmp
mov
insl
pop
dec
and
int
xlat
mov
out
outsl
aad
sar
and
sub
jp
adc
fidivs
dec
pop
jo
leave
add
addl
out
notb
adc
mov
push
xor
fisttpll
jbe
xchg
jne
stos
scas
int3
and
movb
int
xlat
scas
aaa
xchg
dec
mov
and
sub
add
lock
loope
mov
push
aad
dec
sbb
push
stos
jmp
push
xchg
sarl
jo
ficompl
inc
pusha
ret
mov
dec
cmp
test
rcrl
mov
test
sbb
cmp
push
dec
pop
cmp
es
test
add
mov
push
add
lods
ds
fstpt
fsubp
loopne
dec
fcomps
shrb
mov
loop
adc
mov
cmp
mov
mov
outsl
push
insl
adc
iret
aad
xchg
outsb
rol
push
call
lret
cld
mov
sbb
imul
ja
stos
dec
and
xchg
out
xchg
pop
mov
fstps
in
popa
sub
das
das
add
inc
out
cltd
std
add
xor
pusha
and
jl
cmpsl
out
mov
push
stc
ret
scas
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
addr16
sub
inc
arpl
xor
jge
inc
es
in
mov
inc
pusha
leave
inc
add
dec
aad
fsubs
inc
ret
cmp
xor
cmp
jb
orb
cmp
push
inc
test
in
or
pop
incb
scas
xchg
dec
adc
and
scas
ds
mov
mov
push
mov
out
sbb
jb
dec
jnp
cmc
mov
imull
lock
lret
xchg
sbb
mov
fdivl
dec
push
dec
mov
repz
data16
loope
xchg
cmpsl
sbb
iret
cmp
inc
xlat
pop
outsb
and
test
insl
pop
xchg
sbb
dec
shll
aad
or
add
mov
or
mov
cmp
mov
aad
out
push
mov
sub
rorl
or
ss
js
jno
xchg
xor
rolb
push
mov
test
aam
pop
mov
or
jp
mov
iret
sahf
jge
or
test
cmp
imul
or
push
insl
aam
cwtl
addr16
sbbb
mov
mov
xchg
out
jnp
in
mov
jae
add
mov
fildll
dec
sbb
stc
push
cmp
xchg
add
into
ljmp
mov
pop
sarb
inc
aam
insb
push
sbb
add
fs
into
or
inc
js
in
sub
in
adc
fisubs
jge
mov
and
stc
push
mov
stos
addl
inc
push
pop
lock
in
out
movnti
inc
jb
cmp
arpl
lods
push
dec
sbb
in
and
fnstenv
or
cmpsb
rcrl
mov
fiadds
daa
dec
test
push
push
dec
xor
mov
adc
jl
adc
addr16
xchg
mov
sti
aaa
outsl
xchg
daa
and
cmp
jl
xchg
aad
incb
lret
mov
pop
mov
inc
popf
dec
sub
push
movb
or
icebp
mov
adc
fwait
insl
cltd
mov
sub
jecxz
inc
std
dec
aaa
imul
fwait
pop
test
js
loop
or
inc
mov
jo
out
fnsave
jge
xchg
testb
loope
fsubp
movsl
xchg
imul
nop
adc
adc
imul
sbb
loop
jno
in
mov
clc
inc
in
cwtl
aaa
das
or
sbb
adc
fsubs
popa
jg
scas
and
nop
sub
rorb
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
rcrl
sbb
adc
sbb
dec
pop
add
movsb
xchg
push
push
sbb
jo
mov
lock
in
and
clc
or
adc
data16
adc
and
mov
mov
jo
dec
jecxz
jmp
test
ret
inc
not
inc
dec
aad
mov
fwait
sbbl
das
lret
and
mov
cmp
popf
and
add
jmp
mov
xor
cmp
add
xchg
sbb
enter
decb
jmp
rclb
out
xchg
sub
add
adc
or
sti
shr
or
addb
sbb
xchg
push
cltd
mov
xchg
push
in
push
jb
fnstenv
adc
or
popf
loopne
xor
adc
loope
mov
xorb
xchg
loopne,pn
rolb
or
mov
loop
jo
mov
aad
sti
mov
and
push
rcll
es
mov
and
stos
or
movsb
inc
call
add
pop
push
fisttps
mov
jg
mov
jmp
dec
pop
mov
xchg
inc
ret
sahf
into
push
xchg
xchg
pop
add
dec
or
call
ds
jmp
xchg
xor
ljmp
sub
jns
jo
sbb
push
mov
pop
dec
fwait
in
push
clc
add
xor
sbb
popa
pop
pusha
jp
xor
or
cmp
repnz
nop
pop
je,pt
add
push
dec
xchg
sub
lea
icebp
mov
enter
jecxz
insl
not
hlt
fwait
mov
xor
insb
aam
push
jp
add
shlb
loop
mov
add
cwtl
xchg
ja
push
aas
or
add
out
cmpsb
sbb
jbe
dec
int3
or
xor
into
lret
ficoml
mov
lcall
dec
xchg
into
popf
sti
in
inc
orl
int
test
ret
fs
daa
jo
ds
popa
dec
mov
popf
and
mov
nop
mov
mov
popa
jb
pop
cmp
push
mov
fcoms
mov
sarb
push
sub
push
push
lods
xor
cld
imul
xlat
inc
dec
jg
enter
push
pop
sbb
mov
repz
imul
sbb
mov
dec
mov
inc
loopne
clc
repz
popf
pushf
and
jmp
cbtw
mov
push
aad
xchg
aas
in
sbb
inc
mov
lahf
lods
in
pusha
mov
and
pop
fsubr
xor
lods
lods
or
jbe
aaa
push
inc
xor
and
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
loope
or
sbb
adc
sbb
pop
sub
mov
les
loopne
mov
cltd
pop
test
pop
push
ljmp
jmp
cltd
pop
xor
bound
stos
dec
ljmp
mov
insl
aas
dec
sub
mov
gs
insl
popf
rorb
out
dec
outsl
orl
xchg
xchg
sbb
jne
sti
mov
adc
push
dec
sbb
loop
adc
or
bsf
mov
hlt
cmp
hlt
outsb
scas
in
mov
xchg
mov
shrb
aaa
outsb
inc
pinsrw
sub
addr16
push
cli
sbb
bound
lahf
cld
stc
mov
jge
gs
shrb
sub
icebp
scas
test
aad
push
jle
arpl
out
sbb
and
add
lods
int3
add
inc
fwait
ud2
insl
popf
xchg
inc
daa
insb
jmp
push
imul
mov
addr16
jae
test
in
xchg
cli
movsb
mov
pushf
mov
jae
paddusb
sub
call
adc
dec
ret
mov
enter
cmp
in
pop
xor
pop
stos
test
pop
popa
xorl
mov
push
sub
das
frstor
dec
decb
mov
test
mov
xchg
mov
je
add
dec
pop
xor
cmpsl
ss
xchg
and
add
clc
mov
lret
in
shrb
cmp
add
lret
sbb
ds
add
fists
xchg
jbe
sbb
adc
fwait
cs
frstor
mov
dec
cmp
jmp
jle
cmp
sub
mov
xor
add
ficompl
sbb
flds
aad
movsl
mov
das
or
jecxz
mov
dec
subb
enter
imul
or
xlat
add
jno
insl
sbb
sub
imulb
ret
jne
insb
pop
jg
push
push
xchg
pop
and
rcll
jp
mov
mov
push
jo
push
lds
mov
pop
mov
ficompl
mov
adc
push
test
aam
test
mov
call
dec
jae
fiadds
mov
enter
idivb
lahf
mov
neg
sbb
pop
ficompl
cmc
iret
int
imul
adc
sub
push
pusha
jg
sub
mov
in
mov
xor
ja
rcl
add
push
pop
mov
pop
out
mov
adc
ret
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
xchg
mov
and
sbb
fs
sub
jns
mov
je
push
dec
gs
je
or
jne
jecxz
push
cmp
ljmp
ret
and
mov
call
dec
cmp
cmp
in
in
data16
mov
loope
mov
stos
test
divb
mov
add
repnz
test
hlt
pop
add
jp
int
or
dec
or
lods
cmp
inc
scas
in
mov
mov
pusha
pop
mov
daa
stc
xchg
fchs
sbb
movsb
mov
lret
sub
das
lret
call
orb
call
xor
popf
in
inc
lret
orl
push
enter
add
sbb
jmp
mov
bsr
aaa
lods
sub
mov
aas
mov
andb
xlat
and
mov
fwait
unpckhps
fmulp
adc
sbb
scas
mov
pop
pop
icebp
in
outsl
xor
adc
pop
fadds
dec
adc
mov
cmpsl
or
push
inc
and
sub
cmpsb
pop
mov
je
xchg
shlb
and
sbb
sarl
cmpsl
call
je
loop
push
cwtl
mov
push
push
jbe
dec
mov
xchg
push
fs
test
ret
das
jmp
adc
add
push
or
and
xlat
add
mov
lahf
or
mov
mov
aad
cmp
lret
test
jge
inc
repnz
and
rolb
fmulp
outsb
mov
cmpsb
mov
imull
or
aam
dec
scas
pop
loope
xchg
out
sbb
adc
adc
mov
mov
mov
loopne
push
insb
mov
cmp
out
mov
and
xchg
jl
test
xchg
mov
fistps
clc
aas
push
iret
js
data16
jg
filds
inc
pop
mov
pop
out
mov
int3
mov
jne
xor
lret
jge
aad
pop
in
jo
cmc
push
jb
inc
cwtl
mov
mov
sbb
pop
sub
cmc
ljmp
inc
pop
shll
sahf
leave
xor
das
xchg
mov
mov
cmc
cmp
mov
lahf
inc
push
xchg
pop
jno
sti
mov
call
xor
hlt
xchg
cmp
xorb
or
mov
push
repz
jp
add
push
cmp
mov
or
mov
scas
cmp
mov
and
dec
jle
adcl
cmp
es
jmp
icebp
mov
and
pop
into
inc
and
out
xchg
cmpsb
loop
ficoms
popf
pop
xchg
mov
aam
mov
pop
frstor
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
cld
dec
jle
rcrl
and
sbb
jecxz
jge
lcall
jne
fwait
mov
or
dec
in
subl
into
inc
push
test
jge
and
loopne
leave
notl
mov
rorb
jmp
and
inc
cmp
scas
pop
daa
adc
inc
add
cs
sbb
cmp
sub
pop
sahf
sub
imull
icebp
lds
lahf
adc
adc
ljmp
mov
cs
popa
mov
jle
cmpsb
mov
xor
and
inc
push
xor
push
pop
pop
pop
mov
divl
enter
mov
mov
pop
js
jo
push
pop
movsb
or
cmp
xlat
cmp
inc
push
push
push
cmpl
inc
iret
sub
loopne
into
mov
add
sbb
jnp
test
out
lock
loope
xor
pop
dec
leave
cltd
cmp
xchg
das
js
scas
in
imul
mov
xchg
dec
lret
inc
cltd
inc
sub
adc
rcr
mov
pop
test
pop
mov
cli
lret
sub
mov
lcall
dec
clc
and
inc
add
dec
aas
ret
xchg
cmpsl
cwtl
push
cltd
movsb
jle
int3
es
push
ret
inc
pop
stc
outsl
mov
outsb
lods
mov
jb
mov
adc
fsubrs
loope
lock
push
xchg
cmp
or
push
fcomps
lret
cmp
test
mov
adc
imul
mov
adc
jmp
clc
pop
jbe
cmp
mov
xor
shrl
pop
inc
imul
xorl
popf
and
sub
imul
pusha
sti
mov
hlt
pop
nop
lock
outsb
into
lcall
imul
sbb
cmp
inc
mov
movsb
mov
lea
hlt
fistl
sub
push
xchg
pop
imul
inc
mov
lret
dec
inc
in
and
sub
mov
cwtl
mov
and
jge
jb
mov
clc
scas
sub
cmp
mov
and
inc
sahf
mov
lds
lods
dec
stos
adc
lods
cmc
lock
add
es
add
imul
adc
popf
lcall
xchg
push
mov
cwtl
inc
lds
push
mov
and
pop
dec
pop
rorl
or
add
and
ja
shl
jl
push
nop
subb
push
mov
in
clc
pop
data16
dec
fcmovne
mov
jmp
out
shlb
cmpl
sbb
jo
rcrb
push
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
stos
cwtl
mov
sbb
call
test
xchg
cltd
dec
adc
jne
mov
xor
out
mov
lea
xchg
in
sbb
mov
lock
insb
push
push
mov
mov
ljmp
xchg
call
push
add
addr16
sub
jmp
pop
mov
inc
pusha
shr
jp
out
jo
sub
mov
add
cmp
pusha
cmpsb
loop
jo
add
shl
push
and
push
stc
mov
repnz
call
jbe
push
stc
out
js
pop
fsubrl
xchg
mov
sbb
xor
jae
jge
pop
shlb
jmp
inc
iret
pop
sbbb
pop
test
sbb
sbb
in
mov
mov
aam
jns
mov
lods
sarb
lods
stos
xchg
jnp
push
mov
shrb
inc
enter
cld
dec
cmp
aaa
dec
pop
dec
nop
imul
adc
inc
mov
xor
xchg
loopne
adc
clc
es
lret
shl
pop
ja
in
inc
les
movsb
mov
fsubs
push
cmp
inc
push
sub
inc
sti
xchg
add
add
sub
push
push
mov
mov
mov
daa
int3
pop
icebp
inc
lcallw
test
pop
or
inc
jmp
pop
mov
lea
pop
adc
adc
rcrl
xchg
push
cmp
cmc
pop
out
in
es
pop
adc
roll
xchg
dec
sbbb
bound
push
sti
out
sub
mov
fldt
sub
add
sbb
xchg
jb
ss
call
push
mov
cltd
jmp
dec
or
loop
imul
rcrl
ss
jmp
cmp
sbb
pop
xor
jb
adc
clc
mov
pop
and
xchg
adc
mov
arpl
pusha
cmp
fidivs
add
or
pop
mov
jge
xchg
jo
or
xor
add
out
pop
iret
int3
pop
nop
jnp
cld
test
xchg
out
addr16
hlt
test
fiaddl
inc
dec
push
xchg
sub
sar
insl
imul
mov
out
pop
or
xchg
or
stos
lock
push
data16
dec
in
das
or
in
pop
aam
mov
mov
in
and
jle
jl
out
push
testl
and
cmp
scas
xchg
std
dec
adc
sub
cwtl
std
mov
jle
ret
pushf
std
push
mov
stos
sbb
daa
jl
xlat
adc
jno
enter
xchg
int3
adc
out
pop
bnd
push
sbb
shrl
add
sub
push
add
mov
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
leave
or
mov
sbb
adc
sbb
sbb
push
mov
pop
mov
cli
add
js
xlat
pop
iret
jg
mov
mov
pop
arpl
scas
das
xor
sub
pop
and
pop
cmp
pushf
mov
int3
dec
scas
and
xor
icebp
sbb
sub
cmc
rcl
popf
fwait
mov
xor
jle
mov
insl
test
loop,pn
jns
dec
inc
lods
xor
push
sub
js
fistpll
lcall
lods
sbb
push
in
movsl
out
mov
insl
and
hlt
mov
pop
call
xchg
or
and
push
into
or
out
jae
pop
dec
mov
cmpsb
test
lods
packsswb
adc
mov
movsb
add
movsb
mov
dec
je
and
dec
fsubrl
pop
cmp
jg
seta
or
pop
cmp
insl
insl
xor
adc
inc
sbb
jge
dec
loope
push
data16
jnp
push
pop
cmp
into
mov
loopne
sub
dec
mov
callw
in
es
mov
shl
aaa
shl
fwait
insl
addl
dec
add
jge
pusha
aaa
sbb
ret
ds
fcmove
callw
xor
xor
inc
fsubr
adc
into
mov
enter
movsb
lea
push
dec
dec
jle
adc
into
adc
fsubs
out
fnstenv
lret
or
dec
aas
xchg
movsl
mov
lret
push
mov
jb
adc
mov
filds
push
xchg
mov
inc
test
mov
stos
push
or
test
arpl
sub
add
sub
test
imul
push
push
add
lock
iret
cs
mov
movsl
bound
sarl
sbb
adc
cs
sahf
lea
inc
cmc
outsb
add
es
add
xchg
mov
ret
and
int
inc
fwait
orl
push
xlat
mov
sub
addr16
mov
dec
xchg
popf
popa
adc
xor
negl
aaa
out
jno
xor
sbb
xchg
popf
cld
ds
cli
xor
push
cmp
pop
push
test
or
frstor
adc
push
cmp
popf
std
jge
sub
cld
jo
xor
pop
movsbl
outsl
shlb
mov
leave
lret
ja
insl
gs
dec
ret
jp
sub
lret
ret
dec
rcll
cmpsl
jl
xlat
xchg
add
add
lock
sti
shlb
divl
test
cmpsl
cmp
xor
adc
ret
inc
mov
out
sub
pop
lock
adc
and
arpl
ljmp
pushf
loop
movsl
push
jno
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
jg
sub
stos
les
pushf
mov
imul
lahf
dec
cmpsl
cmpsb
push
mov
aad
or
pop
repz
rorl
test
adc
int3
sbb
ds
ficomps
imul
inc
sbb
pop
ret
jmp
nop
aam
jne
and
pusha
into
mov
outsl
mov
data16
push
shll
sub
xchg
xor
inc
ja
or
mov
aas
aaa
test
push
jb
pop
daa
popa
popa
adc
dec
and
cmp
pmullw
popf
and
and
xchg
dec
xchg
lock
fcoml
clc
add
jl
add
enter
nop
loop
adc
xchg
outsb
dec
adc
pop
mull
xchg
xorl
int3
jb
pop
hlt
jbe
maxps
push
mov
loopne
mov
insl
test
cmp
and
pop
mov
sbb
xchg
xchg
test
sbb
sub
mov
fidivs
adc
xor
xchg
pusha
cmp
mov
fisttpl
inc
ret
lods
in
dec
pusha
cmp
rclb
getsec
into
gs
push
lock
fmull
xlat
mov
jmp
dec
pop
push
adcb
jbe
popa
dec
cmpxchg8b
in
aaa
in
shr
mov
dec
push
je
outsb
or
pop
loope
mov
addr16
cmp
dec
push
arpl
dec
and
push
sbb
stc
adc
fistpll
jecxz
sbb
jl
in
xor
mov
and
inc
mov
cmp
sbb
daa
cs
xchg
pop
adc
js
movsl
popa
and
or
enter
repnz
pop
xor
mov
add
and
addr16
push
not
pop
sbb
ljmp
les
lods
test
repz
add
inc
cmpsl
mov
cli
xchg
mov
jb
hlt
es
jmp
and
add
sbb
shlb
jne
sub
xlat
cli
in
cld
ds
push
dec
adc
fwait
push
nop
shrl
icebp
lret
aad
jg
sub
cli
inc
jle
fs
jecxz
and
dec
push
aam
cmp
stos
and
and
dec
enter
mov
dec
repnz
xor
es
cmpsb
sbb
cmp
push
sbb
loop
jns
lods
out
or
aaa
mov
ror
push
fcoms
lds
lds
ss
or
enter
jl
cmp
mov
mov
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
pushf
and
sbb
adc
sbb
inc
daa
cmp
adc
scas
sbb
jl
mov
pusha
sahf
test
cmp
pop
stos
xchg
sbb
mov
aam
sete
dec
and
mov
add
stos
popf
clc
stos
loope
inc
ret
and
not
faddl
decl
mov
scas
fld
dec
or
jge
sub
out
sti
fbld
sub
cmc
sbb
insl
and
into
fwait
repz
sti
repz
pusha
inc
imul
jl
mov
ss
imul
dec
jae
xchg
ffreep
xor
inc
jae
stc
pop
mov
add
ja
mov
cli
aaa
sbb
aaa
mov
jo
mov
pusha
pop
ds
std
pop
pop
lds
pop
and
sub
sbb
adc
stos
imul
push
std
jo
test
dec
cmp
data16
fs
jae
rorl
dec
push
and
sub
xor
pop
andl
jmp
jno
mov
outsb
movsl
lods
jl
dec
xchg
adc
adc
inc
sti
imul
cs
pop
push
lret
ficoms
into
pop
mov
add
adcl
jmp
pop
icebp
std
pop
sub
jge
pop
lcall
pop
out
adc
gs
in
dec
sbb
dec
aas
push
imul
popf
dec
inc
adc
ret
jno
lock
insl
mov
pusha
sbb
jp
lods
mov
dec
stos
sbb
ret
inc
nop
shr
inc
add
nopl
mov
jns
fists
jle
jae
test
jg
xor
call
test
mov
jnp
cs
mov
mov
lret
pop
cmp
enter
dec
jo
jmp
mov
push
add
in
inc
stos
hlt
mov
movsl
addr16
pushf
cmp
or
pop
test
aaa
add
jnp
sub
inc
sbb
test
fsubs
aad
aam
fcompl
inc
loope
push
mov
adc
mov
push
imul
and
ds
push
push
sub
fcmovnbe
flds
pop
stos
jae
inc
cmc
mov
jo
add
cmpsl
mov
and
push
clc
push
jnp
fidivrl
sarl
ljmp
push
xor
jae
adc
test
mov
add
lret
cmp
leave
sahf
stos
cmpsb
jmp
repnz
mov
push
into
sub
insl
faddl
gs
dec
and
fildl
mov
ljmp
mov
cld
pop
push
cli
mov
js
hlt
jno
mov
test
and
dec
sub
das
repz
popf
sbb
add
in
xor
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
jnp
mov
adc
sbb
cmpsl
das
and
jge
sub
or
pushf
jmp
jl
sti
xor
mov
or
lea
mov
jecxz
sbb
repz
imull
sbb
repz
addr16
xchg
or
push
mov
ret
mov
cmpsb
sub
xchg
jb
out
mov
xor
out
repz
arpl
aas
mov
mov
fsubr
je
xchg
out
mov
xor
out
jmp
sub
add
out
lret
movsb
mov
sarl
mov
mov
add
pop
jne
xor
add
fwait
xlat
aad
and
and
jb
sahf
mov
sub
mov
outsb
lcall
fstp
fldt
dec
sub
pusha
dec
inc
and
repnz
or
xchg
dec
and
outsl
mov
mov
jl
add
mov
dec
adc
jno
or
add
sbb
insl
mov
cmpsb
icebp
int3
mov
int
cmp
imul
lcall
ds
inc
push
fwait
addr16
mov
repz
dec
cs
jnp
cmp
jbe
scas
jmp
push
cmpsl
inc
loopne
ret
addl
jmp
lds
stos
pop
cltd
mov
popf
out
inc
xor
popf
xor
mov
dec
mull
jmp
push
jecxz
cmp
xchg
jnp
push
int
dec
lahf
lods
imul
outsl
addl
idivb
js
push
jg
or
fisttpl
cmpsl
and
xchg
outsl
rcl
xchg
loope
cmc
push
xchg
imul
cmp
push
mov
mov
xlat
ret
imul
lcall
push
fimull
or
mov
gs
xor
dec
xor
jg
adc
inc
test
leave
jmp
mov
repnz
fwait
cmp
push
sub
inc
lea
addr16
ljmp
lock
mov
fcmovu
adc
ds
dec
sbb
mov
cmc
mov
pusha
bound
mov
jg
std
dec
mov
idivb
lods
popf
cmp
aas
sub
mov
js
sub
push
insb
mov
out
in
in
imul
xor
dec
stos
addl
int
out
out
push
dec
sbb
sti
xchg
adc
shr
push
insb
cmp
fmul
inc
dec
aad
mov
mov
std
out
stos
adc
rcrb
jge
fisttpll
jne
pop
shlb
adc
cmp
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
or
inc
mov
and
sbb
pushf
mov
loopne
rorl
les
cld
pop
fcoml
or
xlat
in
and
push
pop
adc
pop
xchg
pop
cmc
fldenv
les
mov
and
ljmp
dec
fdivs
stos
aam
stos
xchg
push
orl
outsl
push
mov
pop
notl
xchg
mov
inc
mov
ret
mov
out
xchg
xor
add
push
push
lahf
inc
test
or
lcall
mov
shll
ror
orl
mov
xchg
imull
push
add
aad
mov
pushf
bound
jbe
xchg
lock
or
imul
movsl
mov
and
xchg
or
cmp
adc
sub
mov
and
mov
jg
pushl
inc
lock
movsb
stos
js
dec
inc
enter
cmpsb
stos
lcall
push
sbbb
scas
fadds
enter
arpl
mov
add
aaa
adc
add
mov
sti
jmp
adc
mov
in
aad
shr
pop
scas
xchg
aas
loop
out
popf
dec
mov
lcall
jbe
fldl
push
iret
test
and
push
xor
xor
je
dec
push
cmp
mov
mov
pop
nopl
lock
sbb
loopne
sub
fwait
addr16
add
out
xchg
loop
call
xlat
inc
pop
jne
iret
notb
push
mov
cwtl
add
mov
cmp
push
inc
or
push
repnz
fistps
inc
ja
sbb
std
xchg
push
sbb
rcrl
addl
imul
ss
cmp
lock
adc
or
lods
movsl
sub
pop
les
adc
mov
mov
or
jg
cmc
push
add
push
adc
out
mov
or
xor
stos
push
inc
xchg
cs
push
notl
nop
outsl
lock
mov
adc
mov
jnp
sub
xor
mov
xor
sbb
xchg
sub
cwtl
push
icebp
inc
hlt
dec
xchg
add
or
in
or
push
fwait
jns
jl
out
loop
cmpsb
fwait
inc
push
adc
and
or
cmpsb
lcall
adc
sbb
inc
mov
fs
cmp
je
pop
lods
clc
popf
inc
push
mov
or
pop
inc
pushf
xchg
std
cmp
or
clc
outsb
into
lahf
lea
add
call
notl
ficompl
mov
mov
dec
aas
repnz
mov
je
push
or
ret
lcall
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
push
xchg
sbb
and
sbb
pop
ret
sub
nop
cwtl
sbb
and
js
jl
stos
lea
dec
sbb
mov
mov
mov
out
push
jne
sub
in
bound
fisubrs
std
outsb
popf
mov
mov
movb
add
push
mov
sub
mov
mov
dec
int
and
leave
sub
sub
xchg
inc
repnz
cld
out
dec
add
rclb
cwtl
inc
mov
inc
andl
mov
sbbl
arpl
aam
jmp
sub
pop
jno
pop
jp
cmp
lock
pop
fs
sub
pop
xchg
popa
pop
in
cltd
out
push
into
mov
xorl
ret
and
popa
stos
es
lds
push
xor
or
lds
in
cwtl
int3
xor
mov
push
loopne
cmpsb
mov
pop
mov
mov
aas
push
and
enter
push
adc
icebp
sbb
or
daa
dec
jbe
js
and
in
jno
loopne
add
xchg
jmp
push
or
adc
jb
and
push
or
aam
test
pop
testb
dec
push
mov
sahf
out
xchg
divl
sub
and
inc
insl
dec
push
jmp
fistl
ss
rclb
and
xchg
inc
arpl
xor
pop
fistpll
fcmovb
jno
shlb
adc
scas
lods
jge
jne
pmulhuw
call
jle
lea
mov
lahf
jns
jnp
fidivl
jp
arpl
jb
sbb
dec
test
adc
and
mov
inc
popa
mov
sub
mov
pop
outsl
sub
jmp
das
int3
or
mov
test
jbe
lods
push
loope
fcomp
inc
aaa
faddl
xor
inc
int
ret
data16
lcall
insb
call
mov
and
scas
mov
add
xor
sbb
lds
inc
jp
mov
aaa
lods
inc
mov
jnp
push
fildl
mov
pop
js
cmp
xor
or
and
sahf
adc
push
ss
lret
movsb
inc
iret
inc
dec
lret
xor
xchg
daa
mov
add
les
movzbl
les
sub
cmovne
push
cli
pop
sub
sbb
jle
sub
fs
pop
pop
loop
or
jb
sbb
xchg
ss
mov
jp
scas
or
repz
ret
or
push
and
ss
mov
push
pop
imul
sbb
and
inc
pop
jg
into
inc
sub
clc
out
pushf
mov
dec
add
push
adc
jns
imul
mov
add
add
sbb
push
push
out
push
xor
sbb
and
sbb
imul
inc
push
fnstsw
addr16
cmc
int
mov
push
inc
or
xor
shrl
in
mov
mov
jecxz
add
js
inc
jge
jge
mov
jno
fsubrl
mov
sub
mov
in
test
mov
or
jmp
ds
pop
jl
add
inc
cs
sub
sbb
mov
bound
cmp
and
lret
addr16
fstl
cli
ret
inc
pop
loopne
scas
pusha
loop
add
xor
fisttps
imul
sahf
dec
cmc
mov
xor
repnz
loope
ja
push
loopne
daa
ret
inc
gs
dec
push
xor
inc
inc
movsl
stc
pop
xchg
mov
xchg
iret
enter
divb
inc
pop
pop
cmp
adc
xchg
jl
inc
outsl
imul
mov
nop
cmp
add
mov
sub
sbb
xlat
add
xchg
fists
xor
and
jnp
dec
sbb
mull
sbb
shrb
mov
lcall
xor
xor
cmpsl
ds
cmp
push
repz
push
nop
insl
push
mov
fdivrl
or
and
clc
mov
push
stos
stc
jne
stos
fwait
arpl
jge
or
aad
xchg
mov
shlb
stc
sub
inc
pusha
cld
imul
inc
push
in
or
jl
mov
ja
mov
inc
lret
imull
mov
pop
daa
push
sub
clc
jecxz
add
push
push
cmp
mov
cwtl
js
cmp
repz
dec
xchg
scas
fs
xor
add
mov
sbb
cli
add
jae
gs
aam
addr16
fcoms
imul
js
adcl
mov
or
fildl
inc
xchg
cs
ret
out
dec
fcomps
lods
add
sub
xchg
mov
hlt
dec
out
or
out
dec
scas
adc
popa
stos
mov
repnz
lock
or
xor
sbb
and
stc
out
rorl
dec
or
sbb
xchg
sbb
faddp
das
mov
outsl
shl
fistpll
mov
push
mov
or
lret
cltd
mov
scas
cmp
mov
mov
jo
ja
je
dec
not
push
push
into
pop
xor
jbe
sbb
push
push
test
pop
nop
mov
hlt
fwait
adc
sahf
jae
lods
sub
sbb
sub
outsb
xchg
dec
aad
sub
pop
fs
add
mov
addr16
jmp
loopne
repz
mov
je
stc
ljmp
jno
sbb
and
push
mov
push
lret
subl
mov
jmp
cmp
rorb
ret
add
inc
add
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
adc
das
insb
cltd
xor
adc
jge
test
cmp
push
ss
idivl
aas
or
outsb
or
sbb
clc
daa
pop
dec
out
cmpl
fnstsw
add
ljmp
sub
rep
xchg
jne
sbb
jle
je
mov
ficoml
in
stc
test
fadds
sub
idivb
scas
sub
sub
dec
or
pop
cwtl
mov
push
aam
repnz
cmp
dec
push
sub
enter
cmc
push
and
push
iret
out
sbb
mov
hlt
sahf
xor
xor
jle
in
inc
test
icebp
fidivrs
idivb
sbb
push
mov
leave
inc
cmc
mov
imul
adc
cmpsl
dec
jg
inc
jne
mov
pop
adc
outsb
inc
cltd
cld
xchg
gs
mov
mov
ret
sahf
mov
mov
pop
xchg
xor
jb
adc
push
mov
into
js
imul
pop
enter
js
insl
dec
inc
outsl
xchg
xor
popa
fmuls
aad
mov
ss
je
popf
mov
lock
call
popf
mov
cmp
jp
push
sbb
xchg
dec
loop
aad
outsb
xchg
push
js
jbe
adc
sub
xor
mov
filds
add
pop
mov
dec
and
hlt
add
cmpsb
mov
sar
jae
out
xchg
jmp
inc
sbb
sbb
clc
push
sub
lea
push
or
je
out
leave
call
push
ffreep
test
and
scas
inc
fdivs
add
jge
jae
adc
imull
pop
push
arpl
push
outsb
pusha
inc
sub
and
mov
cmp
cmp
or
mov
shll
lock
sti
jecxz
iret
bound
sbb
rolb
out
out
out
into
gs
in
test
shl
out
cmc
dec
bound
out
pusha
push
mov
inc
stos
pop
in
addl
std
xchg
fs
push
dec
push
loope
imul
sub
test
jnp
xor
or
outsb
mov
sti
hlt
test
js
pop
ret
cmp
add
jne
imul
lods
jne
push
mov
or
cmp
jne
and
aad
aad
adc
jg
test
data16
decl
faddp
xor
and
pop
push
mov
cs
xor
enter
dec
icebp
mov
sub
mov
sub
cmp
jmp
sub
sub
inc
pop
inc
vmaxss
int
lahf
push
push
jl
aam
and
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
sub
push
test
sbb
adc
sbb
jg
xor
lods
mov
jbe
popa
dec
mov
jge
insb
lcall
sbb
adc
sub
ja
clc
mov
add
data16
adc
sub
rcll
testb
mov
flds
adc
or
test
clc
sub
repnz
mov
adc
push
mov
pop
xor
mov
fstl
add
mov
mov
push
shlb
lret
cmpsl
jp
adc
mov
pop
add
sub
pop
fistps
mov
mov
or
std
or
jae
mov
cmpsl
push
nop
cmc
pop
test
aas
nop
xor
in
jmp
test
pop
push
mov
fistps
mov
pop
lahf
popf
icebp
dec
stos
int3
or
leave
pop
fdivl
push
clc
pop
or
scas
dec
cmp
je
mov
mov
jp
and
aad
in
fdivs
xchg
cmp
jno
push
cmp
add
adc
or
mov
lahf
in
in
aad
cli
mov
or
mov
fmul
aam
cmp
cli
xlat
test
fmull
call
adc
das
les
mov
out
mov
dec
cmp
pop
lret
jle
xchg
xchg
sbbb
out
dec
mov
sub
out
lret
jle
mov
xor
lock
mov
add
movb
jg
int
sub
sbb
insb
nop
insb
out
frstor
xchg
rcrl
dec
push
hlt
inc
jecxz
test
push
xor
sbb
test
scas
call
js
dec
sahf
testl
movsl
ja
fistl
cmp
out
and
ficompl
mov
imul
pop
stc
sbb
pop
pop
and
pop
das
xor
push
popa
jecxz
scas
rclb
or
adc
or
inc
std
aaa
jne
and
sti
push
mov
in
mov
sbb
pop
inc
xchg
pusha
push
cmp
adc
dec
sub
dec
sti
push
js
jno
loopne
sub
mov
addb
andb
push
int3
not
sub
sbb
lds
hlt
or
and
addr16
xor
cmpsb
aam
push
aad
enter
int3
mov
scas
repz
dec
popa
sbbb
mov
neg
inc
push
adc
dec
inc
ss
inc
test
divb
or
pop
and
inc
call
add
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
and
sbb
movsl
clc
sahf
fldl
fsubrp
jae
in
mov
call
cmp
clc
in
lahf
push
mov
cli
cs
and
push
mov
mov
ret
mov
mov
xor
or
movsb
lods
jo
mov
lods
mov
pusha
call
push
dec
mov
jb
mov
xor
iret
into
loopne
ret
rolb
pop
inc
stos
adc
leave
int
inc
fisubl
je
cmp
dec
shl
mov
hlt
loop
or
xchg
dec
xchg
shll
sbb
sub
clc
rcrb
fwait
test
sbb
cwtl
mov
fsts
imul
in
sbb
inc
imul
clc
add
lret
or
mov
mov
movsl
sbb
push
cli
push
es
sbb
adc
lea
mov
dec
outsl
imul
icebp
data16
aaa
xor
scas
popf
and
cmpsl
lea
into
mov
lret
pop
cltd
inc
lahf
sub
adc
mov
inc
cmp
mov
mov
or
or
int3
cmp
and
enter
mov
push
sbb
cmp
dec
stc
or
sub
pop
shll
sbb
leave
fwait
aas
dec
into
outsb
push
out
mov
xor
dec
lret
mov
cmp
in
dec
xchg
dec
adc
pop
jb
cli
dec
sbb
in
dec
and
dec
adc
lea
jg
popa
int3
movl
jmp
mov
test
xorb
mov
jne
ja
pop
cmpsb
fimull
nop
rcr
mov
into
faddl
inc
sbb
dec
mov
jecxz
xchg
sbb
sbb
jl
mov
jbe
cmp
inc
mov
push
aaa
mov
cmc
pop
movsl
jle
push
adc
cld
mov
xchg
fsubrp
not
aam
push
cmpsl
shrb
or
stos
or
push
pop
add
push
inc
xor
in
addl
loope
lret
cmp
cmpl
xor
push
pop
fs
inc
insl
mov
sub
push
inc
addb
dec
pop
inc
addr16
sbb
push
lahf
dec
pop
gs
sar
pop
mov
sbb
lock
int
mov
sbb
lcall
insb
jecxz
roll
xlat
es
push
hlt
dec
inc
or
cmp
or
and
mov
inc
sub
pop
dec
mov
sub
cmpsl
inc
push
inc
mov
loopne
lret
fisttpl
inc
lock
sahf
pushf
inc
push
mov
sbb
mov
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
push
mov
sbb
adc
sbb
jecxz
xor
dec
mov
sti
push
stos
push
enter
fwait
xor
mov
adc
imul
xchg
into
ja
je
fcoms
in
pop
mov
dec
jp
mov
daa
fsubr
dec
dec
jno
pop
jecxz
xor
cmpsb
xchg
sarb
popf
or
ja
fs
pop
test
mov
pop
pop
call
out
cli
adc
mov
enter
loope
sbb
jbe
sbb
xor
sub
subl
inc
and
mov
rcrb
int
das
arpl
mov
mov
and
scas
jl
daa
push
dec
push
ret
and
or
cmp
xchg
mov
or
lcall
mov
mov
mov
mov
pop
sub
lret
icebp
popf
insb
incl
cwtl
repz
mov
popa
sbb
enterw
dec
cmp
jb,pt
sub
stc
cld
mov
push
jne
scas
mov
push
ret
xchg
out
loope
jmp
ds
sub
sar
cmp
loopne
add
pop
add
fmulp
iret
js
ret
js
cwtl
mov
mov
nop
js
lahf
cwtl
leave
mov
adc
daa
xchg
iret
pop
stc
int
mov
popf
std
mov
ret
shr
aas
pop
adc
inc
mov
aam
cmpb
lahf
insl
add
jmp
mov
mov
int3
das
lds
jbe
sub
jmp
imul
ficoml
aaa
ja
inc
shrl
pop
clc
or
inc
insl
xchg
loopne
dec
jecxz
adc
xchg
sub
ret
dec
sbb
aad
pop
hlt
pop
mov
pop
outsb
das
outsb
jg
fdivl
nop
call
xor
dec
pop
and
pop
mov
or
xchg
xor
ljmp
lret
jno
cmp
cmp
cmpsb
dec
imul
jg
int3
mov
add
jmp
stos
mov
inc
adc
xchg
xor
adc
rolb
aas
add
add
mov
shl
sub
mov
xchg
enter
das
daa
cmc
mov
fistpl
leave
mov
mov
cmp
adc
popf
and
pop
cmp
pop
pop
aaa
in
cld
lea
xor
pusha
jecxz
sub
fldl
pop
push
jle
aad
pusha
pop
repnz
add
dec
js
jne
stos
push
pusha
ljmp
cwtl
loope
movsb
mov
pop
mov
mov
sbb
mov
jae
push
out
outsb
xchg
lods
push
cmp
test
adc
inc
pop
insl
push
cmp
call
pop
sti
dec
or
lret
sub
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
pop
mov
pop
sub
incb
jecxz
or
scas
pushf
or
mov
lods
cmc
and
adc
add
jp
mov
and
sbb
pop
xchg
call
outsb
inc
pop
movsl
xorl
lods
push
jge
fimuls
ss
rcl
pop
sbb
mov
sbb
rcll
or
daa
mov
lahf
and
shll
xor
roll
jge
outsb
xchg
adc
pop
lahf
lock
mov
movsb
sahf
push
xor
pop
andl
jl
loopne
cmp
dec
sti
xor
mov
jmp
mov
stc
push
outsl
ljmp
mov
dec
mov
out
add
jae
call
aas
lods
cmp
inc
pop
ds
movsl
pop
mov
adc
pop
sbb
in
cli
in
mov
pop
out
or
repz
stos
dec
sub
popf
cli
sbb
pop
gs
mov
add
arpl
mov
in
push
mov
pop
jo
lock
or
mov
inc
sbb
imul
add
pop
repnz
scas
les
in
dec
dec
sbb
lcall
push
inc
mov
je
push
push
lcall
pop
pop
fcmove
daa
xchg
rorl
xchg
add
mov
adc
rcrl
xchg
push
ja
sub
aaa
push
roll
xchg
sbb
cmp
aad
cmp
jb
repz
movl
xor
push
jo
mov
cwtl
shlb
pop
out
dec
mov
adc
cmp
orb
sbb
sbb
stos
jmp
sti
sub
mov
push
out
mov
outsb
xchg
stos
mov
jns
mov
shl
mov
cmpsl
pop
sbb
pop
hlt
push
jmp
jbe
stos
inc
in
das
push
push
pop
cmp
imul
pushf
int3
sti
xor
cld
icebp
out
adc
and
ficomps
xorl
pop
test
jns
pop
xchg
in
xor
mov
sub
outsb
bound
aaa
add
mov
aaa
aam
iret
test
std
out
mov
xchg
xor
shrb
add
jo
popl
pushf
dec
in
iret
loop
lods
xchg
pop
das
xchg
cmp
jp
add
dec
and
insl
mov
mov
das
jo
jb
mov
arpl
fadds
stos
mov
sub
icebp
dec
push
cmp
xchg
dec
adc
jl
or
and
enter
cli
notb
mov
sarl
xor
in
xor
roll
adc
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
xor
stos
add
sbb
adc
sbb
push
divl
ret
leave
xlat
sbb
jge
ljmp
add
xorb
aam
inc
xor
test
les
stc
inc
cmp
mov
pop
xlat
lock
jno
sbb
lock
pop
jb
cmp
js
leave
pop
into
jo
jns
pop
sbb
cmp
inc
fcmovnb
out
dec
push
fidivl
in
jp
mov
adc
or
mov
inc
and
dec
xchg
push
lea
and
rclb
lret
pop
mov
push
inc
cmp
dec
jge
xchg
gs
hlt
mov
add
jmp
push
pop
or
inc
inc
cmp
cmp
stos
ss
nop
mov
push
pop
ljmp
ss
ret
scas
les
repnz
in
mov
aam
lds
push
ja
or
jbe
loopne
iret
out
mov
test
fldl
out
popf
in
loope
in
hlt
scas
jmp
sub
mov
xor
xchg
pop
repz
jns
xchg
sti
fwait
xor
stos
loop
mov
stc
shll
jle
mov
dec
push
loope
xchg
fwait
add
inc
mov
sub
jbe
movsb
lods
fisubrl
pop
fdivrs
cmp
xchg
mov
jp
cmpl
stc
sub
imul
pop
aaa
xor
std
push
mov
iret
popf
pop
enter
jg
jmp
dec
jo
mov
sbb
pop
jns
movsb
clc
inc
mov
jne
pop
sbb
pop
mov
mov
lock
rcrb
mov
repz
test
xchg
lcall
xchg
cwtl
pop
lods
sbb
fbstp
xor
mov
stos
cmpsb
stos
cmp
mov
aad
jae
das
pushf
mov
jg
jns
cmpsb
scas
outsl
inc
add
imul
sbb
push
xchg
xor
or
cmpsb
popa
mov
test
or
pushf
jecxz
dec
mov
fadds
outsl
cmpsb
sub
push
das
test
mov
push
mov
mov
mov
dec
sbb
xchg
nop
inc
shll
insl
mov
add
or
ret
cmp
push
shll
mov
mov
int3
xchg
aam
jp
fcoms
sbb
jp
mov
rclb
in
sti
mov
inc
and
sbb
inc
in
cld
aad
and
scas
push
je
ret
push
cmp
fidivrl
pop
rolb
aaa
push
imul
push
bound
push
in
cmpb
stos
add
jmp
jns
das
xchg
xlat
xchg
imul
fistpll
pop
jecxz
loopne
mov
imul
loope
mov
jle
lock
mov
sti
cmc
sbb
shr
shr
jmp
and
push
sbb
push
enter
sbb
and
sbb
popf
cmp
and
pop
subl
fsubl
dec
aas
pusha
xchg
and
adc
push
or
rcrb
mov
pop
inc
pusha
xchg
push
leave
xchg
das
mov
das
nop
lea
seta
hlt
mov
xchg
loop
dec
loop
pop
loop
xor
mov
mov
fcmove
scas
insb
dec
pop
popf
mov
rcrl
cmp
das
out
pop
mov
les
ja
mov
jne
dec
push
aam
cltd
inc
dec
int3
adc
inc
es
test
inc
in
mulb
leave
sbb
mov
subb
sub
ret
push
ss
pop
or
idiv
mov
mov
loope
xor
js
pop
mov
mov
jecxz
es
mov
pushf
sbb
pop
rcr
adc
pop
cmp
ficomps
jle
js
cld
lret
push
push
out
mov
ja
mov
push
xor
cmc
push
jno
mov
cmpsl
adc
mov
add
mov
mov
test
outsb
xor
lahf
cmp
mov
sbb
mov
inc
mov
imul
fsts
ret
lods
fs
clc
or
pop
and
fcomp
icebp
jg
inc
cli
ljmp
pop
arpl
push
andl
lahf
aas
jo
add
and
dec
xchg
jae
pop
sbb
cmp
xchg
daa
dec
sbb
mov
cmp
adc
add
sahf
pusha
xor
insl
or
adc
xor
mov
out
test
pop
test
xor
ljmp
cmpsl
jge
rolb
pop
enter
pushf
movsb
lods
xlat
jl
pushf
popf
mov
outsb
cmpsb
mov
push
std
push
or
fadds
ret
cmpsl
adc
jle
sbb
mov
int3
lcall
xor
and
cli
jg
and
roll
lahf
mov
inc
xor
sbb
mov
rol
push
outsb
stos
push
or
mov
and
loopne
lea
push
push
jmp
add
lcall
ss
jns
mov
std
jg
push
fidivl
jb
je
or
sub
daa
lret
gs
cmpsl
test
aam
icebp
sarb
repnz
out
repnz
push
in
push
out
sbb
aam
in
or
in
pop
adc
xor
imul
cmp
cmp
or
mov
and
je
cs
bound
movsl
jl
push
xor
sub
dec
in
cmp
or
fildl
outsl
inc
movsb
and
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
adc
adc
sbb
adc
sbb
pop
jae
sahf
adc
loopne
icebp
adc
pop
aam
lods
mov
fs
vzeroall
pop
xor
add
ret
js
add
sbb
cwtl
jp
ljmp
lods
pop
xchg
adc
icebp
repz
jne
inc
xlat
dec
stos
in
jmp
pop
sarl
mov
adc
call
push
jne
popa
leave
popf
divb
mov
aas
adc
arpl
push
das
jb
lret
cmpsl
iret
pushf
add
in
out
bswap
clc
dec
lret
mov
add
in
push
jecxz
lcall
mov
pop
cmovle
mov
rcll
decb
shrl
movsl
or
aam
jnp
add
inc
into
cmp
sub
mov
ja
mov
jne
jae
inc
push
inc
mov
cmp
sbb
test
push
call
push
or
in
push
scas
daa
mov
and
jo
sahf
ljmp
xorl
cmpsb
aaa
out
push
xchg
add
sub
outsl
lods
dec
aam
push
xchg
xchg
std
jns
fistpl
sub
ljmp
push
es
jl
mov
and
ret
sahf
xchg
push
enter
adc
push
sub
and
icebp
dec
iret
mov
xor
fadds
cltd
gs
popf
push
cltd
loope
jb
jo
scas
mov
push
xchg
cmp
fldt
and
js
std
jbe
or
iret
shl
jbe
push
les
xchg
fdivs
cmpsb
push
mov
adc
fdivr
lods
inc
mov
mov
out
pop
inc
dec
addr16
xchg
cmp
mov
mov
add
jbe
jnp
iret
out
hlt
out
inc
xchg
add
psllw
test
scas
data16
movsb
rcrl
enter
mov
in
addr16
scas
dec
push
add
arpl
rorl
adc
inc
mov
rorb
insl
rcrb
fmuls
fcompl
push
es
clc
shlb
fmull
and
sub
cmp
dec
rcll
xchg
fsubr
mov
cmp
repnz
pop
notb
jb
add
icebp
js
arpl
mov
imul
inc
imul
imul
and
cmpsb
jnp
repz
push
scas
fistpll
in
cmp
and
ret
pushf
inc
fwait
in
sbb
adc
mov
cmpl
sarb
jmp
sbb
shr
loopne
addl
je
xchg
in
adc
adc
aad
in
sbb
dec
mov
mov
or
mov
sub
pop
iret
in
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
cs
mov
pop
sbb
and
sbb
xorl
shl
out
addr16
pop
cmp
jecxz
cmp
jo
pop
mov
mov
fimuls
and
iret
into
rolb
inc
inc
fldenv
dec
adc
and
test
insl
push
and
cli
xor
loopne
xchg
xor
test
mov
add
insl
cmp
icebp
out
pop
mov
pop
lret
insb
cltd
je
repz
sub
xchg
dec
sbb
mov
cmp
or
mov
xchg
js
xchg
cmp
and
mov
xchg
push
dec
hlt
adc
sub
jecxz
outsl
mov
das
clc
adc
sbb
push
mov
outsb
nop
jnp
rclb
lcall
push
or
add
dec
and
sub
sub
sub
lcall
lahf
shrb
test
nop
adc
scas
cmp
inc
ret
xlat
test
ret
movsb
cmc
or
subb
mov
cmpsb
mov
jmp
jo
xchg
pop
add
enter
xlat
jl
fs
clc
ljmp
cmpsl
jp
push
cmp
xor
lret
icebp
mov
adc
push
xlat
dec
mov
mov
adc
jns
out
in
sbb
int
push
cltd
test
inc
bound
aam
outsb
dec
push
daa
hlt
push
pop
and
fcmovne
mov
dec
out
rcr
in
pshufw
mov
rolb
jecxz
fnsave
sub
int3
repnz
fidivl
out
mov
jns
mov
add
bound
adc
popf
fdivrp
outsb
vsubpd
pop
pop
fwait
xchg
mov
cmc
adc
pop
pop
imul
mov
ret
sbb
inc
mov
sub
repz
cmp
inc
decl
mov
cmp
sbb
or
pop
call
imul
and
rolb
jle
dec
mov
sti
imul
mov
xchg
inc
arpl
xchg
pop
xchg
mov
mov
mov
add
sarb
cmp
and
add
repz
aaa
cwtl
jo
inc
aaa
jne
aad
jge
push
mov
mov
push
cmp
data16
dec
add
and
push
test
mov
and
enter
rcl
and
and
std
pop
lea
inc
out
jbe
dec
adc
xor
stos
and
pop
cmpb
xchg
inc
jno
testb
and
out
push
jb
fs
or
out
les
dec
mov
push
sub
mov
mov
sarb
aam
jae
and
jl
adc
sbb
xchg
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
dec
sub
or
insl
mov
je
mov
push
xchg
sbb
cmpb
js
ficoml
sbb
cs
xchg
pop
jecxz
add
push
int
sbb
fstpl
cmp
push
sahf
mov
test
in
pop
bound
test
or
mov
loope
mov
mov
mul
inc
inc
mov
and
add
sar
js
jns
or
sbb
stc
insb
mov
pop
test
out
cmpsl
mov
out
xor
xchg
aaa
pop
and
ljmp
jbe
enter
sub
sbb
xchg
push
shl
std
hlt
xchg
andl
jbe
adc
repz
mov
inc
inc
repz
adc
divl
or
into
leave
scas
cmovp
lahf
imul
or
enter
cltd
sahf
out
test
and
outsl
mov
dec
aas
inc
and
mov
fisttps
xchg
icebp
into
dec
cltd
xchg
sbbl
xchg
sbb
and
dec
mov
fists
sbb
push
pop
pop
cmpl
add
mov
pushf
aas
lds
ja
lods
cltd
ljmp
jle
mov
xor
out
or
inc
sub
insl
xchg
adc
cmp
popf
pop
daa
cwtl
outsl
jne
ret
push
imul
test
dec
int
iret
fs
push
in
jle
inc
mov
divl
dec
mov
daa
push
pop
sahf
mov
push
mov
loop
or
dec
lret
inc
or
jnp
dec
xlat
rclb
repnz
jg
sub
lods
pop
daa
fisubrs
mov
dec
xor
aam
mov
mov
movsl
aaa
jp
int3
lret
sbb
jg
inc
mov
ljmp
outsl
sbbl
sbb
and
aad
bound
adc
test
sbb
dec
dec
cmp
inc
add
and
push
add
mov
stos
mov
arpl
inc
xlat
sbbl
loop
sahf
ret
in
mov
mov
outsb
or
into
or
adc
inc
push
repz
test
cmp
loopne
push
jg
xabort
jb
jg
xlat
push
sbb
xlat
lahf
addr16
push
or
push
sbb
dec
lods
sbb
and
outsb
pusha
lods
mov
lret
shll
lret
cmp
sbb
fldt
lcall
xor
movsb
xchg
or
pop
sbb
in
mov
and
jecxz
inc
dec
sub
jnp
inc
inc
xchg
mov
and
mov
jb
dec
xor
js
cwtl
rolb
mov
pop
sub
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
aas
aas
icebp
or
cmp
sbb
sti
frstor
mov
or
clc
jp
jmp
movsl
stos
xor
stc
out
sarb
xor
lahf
aam
leave
jecxz
stos
fidivrs
ficoml
stc
sbb
or
lahf
or
lods
insl
ret
xchg
test
aaa
xor
sarl
outsb
cmp
das
mov
push
sbbl
mov
lret
jle
mov
es
rclb
rolb
xor
or
pusha
or
cmp
lret
lcall
movsb
push
xor
pop
adc
jle
inc
mov
xchg
xor
and
shrb
push
jl
int3
outsb
xchg
xlat
sbb
inc
clc
nop
mov
push
mov
ljmp
dec
xor
push
scas
rcl
xor
jnp
inc
fcomps
sub
shll
or
rcrl
mov
stc
ja
or
push
int
add
push
rcll
stos
inc
jae
mov
lahf
sahf
gs
sub
pop
sarl
adc
lahf
mov
scas
pushl
inc
es
mov
ljmp
jne
lock
mov
and
pusha
int
inc
je
push
imul
adc
cltd
sub
test
lcall
add
sbb
lret
lahf
pusha
jecxz
and
add
adc
outsb
les
data16
scas
repz
dec
mov
leave
aam
mov
xorb
int3
add
scas
das
pusha
in
mov
fdivl
mov
and
ds
sbb
push
adc
rorl
test
mov
and
or
inc
jg
adc
cld
push
into
aas
fnstcw
leave
out
mov
sub
add
sar
fdivrs
jg
xor
mov
nop
iret
mov
fnstenv
movsl
pop
jle
nop
adc
pop
decl
and
out
js
adc
subb
fistpl
adc
outsb
iret
dec
js
int
push
cmp
pop
jecxz
rorl
ret
leave
aam
pop
jl
aaa
and
and
sub
mov
adc
inc
add
xchg
in
xor
inc
inc
jmp
mov
dec
and
jns
data16
decb
imul
jmp
mov
inc
inc
push
inc
dec
out
dec
lods
mov
jns
cltd
pushf
pusha
mov
xor
and
xchg
mov
mov
int
divb
mov
xchg
movsb
pop
ss
aaa
addr16
popf
and
mov
lret
fsubl
pusha
push
add
and
icebp
popf
bnd
dec
fimuls
dec
push
pop
add
jmp
dec
stos
xor
maxps
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
cwtl
out
xor
sbb
adc
sbb
push
sub
test
sbb
mov
notl
mov
addr16
cld
cld
ljmp
adc
data16
nop
popa
jae
imul
xlat
pop
push
mov
loopne
mov
xchg
mov
jge
repnz
js
cmp
mov
jo
mov
and
jne
movsl
pop
movsb
inc
divl
std
shr
insl
int3
jae
popa
jl
or
sahf
jl
xlat
and
xchg
add
sub
addr16
or
jge
scas
mov
rcrb
fwait
xchg
gs
sbb
push
sub
jo
out
aam
xchg
scas
xor
stc
add
push
dec
fwait
xchg
scas
mov
addr16
test
notb
mov
mov
push
in
xchg
mov
pop
in
leave
mov
aad
sbb
setnp
inc
dec
je
jmp
mov
adc
mov
nop
push
jo
loop
out
lahf
sub
jl
mov
clc
lcall
add
jle
push
mov
jecxz
mov
std
iret
hlt
adc
sub
cwtl
fidivrs
dec
ficomps
cs
aam
or
jbe
sbb
push
in
scas
call
aas
adc
adc
mov
mov
cmp
int3
int
imul
mov
adc
dec
out
mov
shrl
push
daa
push
lret
dec
lds
lods
sbb
pop
mov
push
cmpsb
bnd
jecxz
add
pop
or
popf
sbb
xor
hlt
popa
fwait
iret
rcrb
cwtl
mov
mov
aas
mov
fstpt
stos
data16
das
lods
inc
mov
pop
add
adc
ljmp
xor
repnz
mov
jge
lcall
popa
sti
pusha
push
inc
adc
adc
aas
mov
cltd
sti
cmp
dec
iret
lds
out
lcall
jae
add
inc
insl
mov
pop
adc
xchg
incl
sahf
loopne
jecxz
les
jmp
dec
scas
add
lcall
enter
nop
cmpl
and
cwtl
fidivrs
and
mov
insl
jge
ja
stos
mov
or
stos
xchg
jle
jp
mov
mov
imul
or
out
ljmp
push
lcall
push
loop
lods
in
xchg
hlt
fnstenv
xchg
cmp
clc
jg
pop
cmp
int3
fcomps
ret
push
repz
loope
jb
push
xor
adc
lcall
outsl
mov
fcoms
inc
fdivrs
divl
outsb
xor
cmc
orb
in
xchg
stos
dec
lcall
bound
clc
mov
rcl
test
push
js
pop
dec
mov
rorb
in
inc
pop
add
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
jge,pt
jo
inc
sbb
add
sbb
out
sbb
sub
mulb
inc
or
xor
adc
loope
xlat
xchg
mov
lock
aas
cs
out
xor
pop
les
sub
jae
pusha
popf
das
into
shll
fs
aaa
imull
clc
pop
popa
xor
in
push
mov
xor
push
insl
and
mov
pushf
stos
and
decl
mov
add
cmp
rorb
jns
pop
dec
mov
fstpt
cmp
dec
mov
mov
cmp
xlat
sbb
cmp
jl
cld
out
in
mov
ljmp
jnp
pop
leave
or
adc
pusha
or
and
scas
ss
lods
xchg
aam
sbb
xchg
push
loope
mov
std
aaa
cmpsl
add
outsb
popa
scas
xchg
pop
les
icebp
inc
push
mov
push
mov
dec
gs
xchg
add
es
mov
push
pop
add
fisubl
cmp
xchg
cmp
ja
hlt
pop
xor
ss
mov
cwtl
roll
cmpsb
ret
xchg
in
jns
inc
fwait
loope
out
xchg
jb
cld
into
and
fistpl
hlt
jl
pop
aaa
subb
push
dec
adc
sub
add
adc
aam
mov
dec
enter
lea
shll
pushf
cwtl
dec
jg
stos
enter
lahf
jne
bound
mov
xor
add
outsl
jge
jno
ret
dec
add
imul
popa
lea
or
and
dec
mov
jle
fldenv
cmpsl
cmp
out
icebp
push
andb
hlt
loopne
les
movsl
mov
scas
jne
dec
add
sahf
mov
mulb
lock
insb
stos
dec
icebp
cmpl
inc
mov
add
push
push
dec
xchg
xor
push
pop
jmp
or
push
mov
cmp
pushw
add
mov
shufps
inc
mov
or
fs
push
stos
cmpb
adc
sbb
aam
xchg
push
sbb
add
mov
mov
inc
ljmp
or
mov
fisubl
mov
sbb
lds
xchg
mov
int
inc
push
inc
leave
mov
fdivrs
inc
pop
and
adc
push
jecxz
mov
adc
jnp
in
test
lock
adc
sub
xchg
add
mov
cmp
inc
lahf
pop
test
fwait
gs
inc
ja
mov
add
test
aas
mov
sbb
jne,pn
push
popa
inc
nop
js
jb
sub
testl
jns
aas
xchg
insl
outsb
pop
adc
jno
mov
mov
cmc
mov
std
adc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
sub
cmp
sbb
das
stos
shl
in
int
dec
fists
lods
test
mov
scas
lahf
jb
sub
loope
cmp
ljmp
cld
jecxz
daa
aaa
jns
jmp
or
lods
add
or
sub
fnsave
js
pop
mov
mov
mov
xor
pop
add
outsb
outsl
and
fs
and
cmp
cltd
ret
and
outsb
jl
fwait
dec
cwtl
sbb
mov
dec
jo
mov
lods
xchg
xchg
int
mov
pop
cmp
push
inc
loope
lret
inc
loope
dec
in
into
pop
bound
lods
add
iret
xor
in
shlb
jmp
pushf
sub
pop
cmpsb
push
fs
and
mov
jo
pop
leave
aad
push
aam
mov
dec
inc
sub
mov
rcrb
pop
mov
jns
fisubs
daa
sbb
jmp
jnp
decb
iret
or
mov
imul
mov
add
add
adc
sbb
dec
pop
daa
cmp
imul
scas
nop
adc
lock
adc
in
aaa
pop
mov
pop
jp
inc
pop
shll
and
pop
paddq
mov
xlat
popa
pop
hlt
adc
mov
loopne
inc
arpl
jge
imul
aad
in
add
adc
xchg
dec
mov
cwtl
pop
xor
xchg
cld
loope
xchg
sub
iret
add
std
repz
leave
hlt
popa
cmp
add
mov
cmp
in
sahf
or
lcall
mov
and
lods
mov
or
mov
jae
sub
or
pop
pop
inc
push
and
nop
dec
sbb
adc
sub
fimull
clc
mov
push
adc
mov
or
in
ds
add
loope
addb
push
cmp
fcompl
and
popf
das
jo
scas
sbb
lcall
inc
cmc
add
sarb
fwait
movsl
in
ljmp
sbb
jo
inc
jne
xor
jb
cmc
push
cwtl
mov
dec
adc
stos
test
mov
adc
outsl
xor
lds
loopne
andl
pop
pop
sbb
or
int
lahf
and
stos
fldcw
add
mov
cli
fisttpl
jbe
push
fdivrl
das
subb
mov
ret
movsb
push
xchg
ret
push
fcmovnb
mov
fadds
sahf
int3
xor
mov
icebp
cli
aas
or
cltd
push
shrl
in
cs
sub
push
push
ja
icebp
das
mov
jns
mov
mov
cli
mov
repz
scas
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
dec
adc
add
sbb
adcl
xchg
xchg
xchg
lahf
es
jge
add
pop
mov
popf
nop
rorl
mov
cwtl
and
jae
mov
adc
sbb
rolb
pusha
xchg
std
call
movsl
lods
push
xor
movb
fsts
clc
jbe
popf
jle
adc
cmpsb
jne
shll
faddp
push
das
adc
hlt
jne
xchg
mov
dec
lods
push
mov
add
xlat
dec
cmp
test
pop
mov
xchg
mov
push
adc
pop
dec
mov
fadd
cmp
cmc
jle
add
imul
fildl
rcll
cli
cltd
movsl
or
sub
leave
pop
sbb
mull
in
add
mov
dec
stos
iret
movsb
loopne
lds
mov
mov
ja
dec
sbb
xchg
xor
pop
scas
fcomps
sub
xor
test
movsb
xor
jo
out
imul
out
jae
jle
scas
pop
movsb
mov
jg
sub
inc
mov
lea
addb
ja
pop
enter
xchg
aad
jge
pop
inc
jae
arpl
jns
inc
out
leave
inc
lods
push
or
mov
pop
js
mov
mov
mov
mov
mov
mov
xor
or
cmpsb
xor
mov
or
pushf
sahf
mov
jo
loop
addl
inc
mov
nop
inc
int3
jle
repz
fadds
int
mov
shld
movsl
sbb
push
je
lret
inc
outsb
fdivs
imul
mov
dec
cmp
clc
repnz
xlat
mov
repnz
mov
mov
jae
std
rcl
lds
cmp
push
in
and
inc
push
frstor
or
addr16
xor
pop
pop
sahf
stos
add
arpl
xchg
push
sbb
ret
and
fnstenv
push
jo
jmp
inc
sub
fsubrs
aas
into
iret
pusha
test
xchg
cmp
adc
idivl
jb
fbstp
mov
ret
lds
push
sti
dec
pop
enter
add
jmp
popf
js
hlt
pop
inc
shr
int3
push
loopne
popf
test
add
addl
jle
fsts
xor
pushf
cmp
cmpsl
sub
ret
scas
xlat
arpl
xor
fdivr
pop
jmp
mov
sbb
clc
cmpsb
xor
leave
xor
mov
mov
jle
ret
lods
jbe
scas
cmp
jne
rep
xor
ret
add
jp
shlb
pop
aad
adc
push
jmp
cltd
fwait
dec
xor
mov
inc
lret
pop
jb
and
adc
dec
jecxz
xlat
adc
mov
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
lea
xor
sbb
adc
sbb
pop
shr
fadds
addb
jp
push
sub
add
push
jns
jmp
inc
stos
clc
mov
bound
pop
pushf
push
fsubrl
pop
adc
loopne
ss
into
call
mov
pop
loop
lock
push
xchg
in
bound
test
mov
mov
imul
cmp
add
in
or
lods
mov
unpcklps
xor
roll
aad
std
out
adc
mov
hlt
xchg
dec
add
sub
add
sarl
loop
cmp
jmp
xor
negb
out
cli
push
pop
and
adc
lret
in
mov
sub
push
inc
ljmp
out
pushf
jge
movsl
xor
add
push
in
jge
or
in
or
mov
icebp
push
decb
out
inc
es
fdivrl
cmpsl
pop
nop
ret
adc
jl
andb
adc
dec
add
or
mov
psadbw
and
pop
iret
mov
in
test
or
mov
xchg
mov
movb
mov
lea
push
fists
lds
pop
sbb
cmp
hlt
divl
xor
mov
cmp
mov
push
bound
int3
mov
add
mov
add
dec
pop
add
repz
lds
sub
call
test
add
scas
ret
or
or
xor
das
out
in
roll
lcall
sbb
jp
aas
push
adc
lock
or
ss
stos
xlat
and
or
ljmp
xor
add
es
sbb
adc
or
jmp
push
lock
lea
add
sub
stc
outsb
xor
mov
rclb
out
xlat
mov
testb
mov
out
loopne
icebp
inc
adc
add
sub
sbb
fwait
scas
jp
dec
cmp
cmpb
xor
push
es
mov
pusha
mov
push
or
xchg
cmp
addr16
sub
mov
pop
daa
out
gs
fistl
stc
mov
pop
push
cmp
or
adc
mov
js
xchg
xor
add
dec
je
aad
jl,pn
pop
out
cli
filds
jle
out
out
lods
push
pop
sahf
and
and
or
rolb
int3
mov
sbb
dec
dec
mov
adc
push
andl
adc
cmpsl
insl
dec
mov
push
stos
pop
sbb
add
jle
jp
call
fsubrl
jecxz
shrb
jl
add
sub
add
add
push
sbb
ja
lret
push
sub
sbb
adc
sbb
add
jno
and
gs
push
xchg
stos
mov
xchg
movsb
sub
mov
cmp
into
mov
lret
jns
and
and
fsubrs
ds
mov
inc
je
icebp
mov
pop
scas
imul
pusha
sub
shll
scas
push
push
mov
dec
mov
insb
cmp
dec
xchg
cmpsl
leave
xchg
loopne
cmp
outsb
das
add
bnd
sub
adc
xor
lret
iret
mov
mov
sbb
mov
icebp
stos
std
adc
lods
lds
and
test
out
in
pop
je
shlb
sub
imul
test
hlt
ljmp
insl
or
jmp
inc
and
les
dec
sti
shrb
add
pop
mov
mov
mov
pop
std
pop
mov
test
icebp
mov
push
mov
add
out
jae
push
pop
sbb
pop
addr16
push
cld
outsb
test
ljmp
or
and
mull
rorb
sub
gs
sahf
xor
mov
int
jo
rorb
xor
int3
ds
inc
out
testb
xor
xor
inc
push
roll
mov
or
jae
jecxz
jbe
pop
ror
cli
mov
xor
or
into
cmp
mov
mov
sbb
movsl
push
push
push
mov
dec
pop
inc
scas
inc
add
test
cwtl
jmp
xor
inc
sub
pop
mov
sub
jle
or
in
mov
push
xchg
adcb
cmpl
xchg
nop
inc
dec
xchg
xchg
cmpsl
shll
or
cmp
out
cmp
mov
push
dec
mov
xchg
and
stos
mov
dec
shl
sub
mov
lds
cmp
jecxz
push
das
and
mov
pop
imul
jmp
lcall
stos
xor
shrb
mov
and
xchg
cmp
ja
popa
lock
push
sub
out
jle
je
pop
mov
mov
subb
inc
in
push
aaa
push
xor
xor
daa
mov
push
shlb
loopne
jge
push
ja
dec
adc
enter
gs
in
cmp
mov
sub
lret
push
lods
inc
jnp
or
push
mov
jg
aad
inc
dec
in
sub
insb
pop
mov
cmp
xor
pop
jns
stos
cmp
mov
cmp
cmp
decl
fistpll
mov
fistpl
scas
push
mov
rcl
push
jle
cli
push
stos
xchg
ja
push
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
push
sbb
add
sbb
mov
ficoms
cmp
out
dec
inc
adc
int3
popf
xchg
dec
lret
out
dec
lret
pop
pop
push
jne
outsl
dec
bts
mov
xchg
or
sbb
cmpsb
divl
add
and
xchg
jnp
imul
pop
sub
test
fcmovnu
push
inc
adc
jge
jnp
add
cld
mov
or
cmp
repz
hlt
jae
pop
adc
ret
pop
nop
loopne,pt
faddl
add
call
lock
dec
int3
jno,pt
pop
scas
fistl
lcall
imul
movsb
xor
sub
vcompresspd
push
es
adc
bound
dec
pop
and
test
mov
aad
mov
ds
addr16
xor
lcall
xchg
sbb
subl
adc
addl
or
aaa
addb
and
and
pop
sub
add
loope
cld
push
jmp
pop
sbb
ljmp
dec
adc
xor
adc
fnstcw
inc
pop
push
sub
out
dec
pop
sbb
lea
xor
stos
pop
sbb
and
sub
inc
mov
scas
jne
cltd
call
out
cwtl
xchg
pusha
or
lock
xchg
xchg
mov
or
sub
addb
frstor
pop
mov
pop
mov
mov
aas
cltd
int3
xor
mov
clc
loopne
leave
or
adc
or
sub
shll
fucom
push
sbb
push
nop
mov
imul
push
lea
fcomi
jno
add
dec
insl
and
sti
and
mov
je
xchg
jns
lds
and
xchg
out
repnz
adc
add
dec
pop
cwtl
push
pop
add
test
xchg
nop
std
and
xlat
xchg
sbb
mov
inc
imul
sub
leave
sbb
inc
add
mov
push
mov
pop
xchg
inc
scas
cmp
sub
jle
std
scas
cmovl
fdivrl
cmp
jg
shlb
in
sub
imul
sub
mov
lret
pop
test
icebp
jb
jecxz
jl
popf
rol
inc
mov
pop
mov
sbb
pop
in
insl
sti
mov
xor
mov
jns
addr16
inc
in
fcompl
flds
fsubrs
or
inc
add
pop
loop
dec
xchg
sbb
fstps
or
pop
jle
add
or
cmp
and
sbb
lods
daa
fwait
cld
dec
or
jns
cmc
mov
cmp
shll
jmp
mov
cmpsb
push
cmp
xor
or
lret
fisttpll
jnp
cmp
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
cli
lock
add
sbb
and
insl
clc
ds
mov
rorb
add
aas
or
sbb
shlb
inc
inc
jmp
movsl
dec
data16
shl
repnz
int
das
lahf
push
mov
lds
jge
ljmp
ret
add
xchg
aaa
jle
insb
stc
movsb
test
scas
jg
les
ficoml
cli
addl
mov
fwait
lock
jae
lcall
jecxz
mov
pop
sub
push
push
dec
push
scas
push
in
and
sbbl
stos
pop
inc
dec
jl
cs
dec
cs
movsb
jnp
mov
ds
push
mov
dec
cltd
or
sahf
stos
andb
inc
decl
and
mov
sbb
xchg
mov
and
jp
mov
jp
fmuls
xchg
ds
ds
fwait
xor
imul
or
sbb
or
fidivrl
jmp
cli
mov
or
out
js
scas
scas
pusha
inc
sub
les
pop
ja
pop
in
sub
add
or
cmp
es
fistl
xor
into
test
leave
fisubl
mov
mov
add
lods
inc
shll
and
pop
mov
loop
dec
mov
cmp
int3
push
stc
leave
test
pop
outsl
push
mov
stos
fldl
pop
mov
lds
js
xlat
xlat
loopne
int3
cmp
movsb
int3
xchg
and
xchg
pushf
and
insl
in
jecxz
pop
xchg
ffreep
int3
xor
loopne
jmp
sbb
xchg
andl
add
xchg
xchg
sub
pop
fisubl
mov
mov
dec
scas
std
out
fsubl
ss
lock
or
mov
stos
mov
push
cmp
repnz
jno
cld
fnstenv
and
insb
push
cli
outsl
or
dec
jmp
clc
aad
mov
fsubrs
add
mov
in
mov
cwtl
cltd
jmp
dec
mov
mov
stos
ds
inc
mov
mov
sub
and
shlb
mov
test
lcall
jo
cmp
aaa
sub
sarb
sti
and
or
add
test
lds
cmpsl
fsub
inc
outsb
mov
or
test
xchg
add
pop
jo
out
js
xchg
orb
js
out
jnp
loop
mov
add
push
push
jne
jg
lods
icebp
cmp
cmp
mov
shrb
ds
jecxz
cmp
xor
rcrb
adc
dec
mov
sub
into
push
out
mov
mov
es
pop
adc
push
sbb
rolb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
push
sbb
sbb
adc
sbb
fstl
xor
scas
js
stos
gs
pop
pop
or
mov
fs
in
mov
hlt
sbb
lods
cmp
xchg
inc
and
insl
jl
adc
cltd
decl
popf
loope
xor
and
jbe
arpl
fbstp
push
add
iret
jmp
add
scas
mov
or
fmul
gs
notl
mov
sbb
mov
nop
shll
ds
xor
rorl
repz
or
in
mov
adc
push
inc
imul
xlat
lea
data16
pop
lods
fsubrs
jo
push
iret
mov
and
pop
mov
push
push
jg
dec
jecxz
cmp
dec
loope
inc
rcr
pop
add
xchg
mov
in
push
int3
lea
je
xlat
push
xor
fimull
and
xor
mov
dec
lcall
dec
in
cwtl
push
mov
pop
mov
or
ss
jnp
scas
mov
mov
stos
out
lcall
inc
dec
fisubs
dec
sbb
dec
pop
mov
adc
lret
push
jnp
repnz
icebp
sub
or
push
and
mov
pop
imul
xchg
jle
push
jae
aam
cmpsl
lock
cmc
sbbl
pop
popl
out
lahf
mov
cmpb
andl
call
sub
repz
cmp
sub
fsubl
jmp
andb
sahf
imul
loope
mov
ja
movsb
and
push
lahf
xor
pop
push
test
rorb
aam
adc
add
sub
and
loope
sub
addb
cmp
push
xchg
mov
cmp
dec
mov
mov
mov
sub
sti
mov
xchg
insb
mov
mov
pop
dec
adc
lock
xor
mov
aaa
nop
inc
pop
arpl
mov
xchg
loopne
imul
adc
jo
xchg
mov
int3
xchg
add
mov
outsl
sub
int3
pop
cmp
ret
jg
cmp
xor
fsubs
pop
push
adc
inc
dec
inc
sbb
and
lods
dec
cmpsb
push
lret
pop
je
jg
jb
cmp
ja
aas
mov
mov
loope
add
inc
push
inc
lea
mov
cmp
dec
sub
push
cmpsb
es
lds
adc
and
sub
test
loopne
push
inc
mov
rclb
jnp
jb
out
lcall
es
dec
aaa
push
je
cltd
dec
popf
fmul
adc
sub
lods
ss
cltd
push
push
lock
pop
or
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
lret
jle
adc
sbb
adc
sbb
icebp
and
sub
cld
das
out
add
hlt
fstpt
inc
xchg
dec
cmp
or
jns
mov
loopne
sbb
add
pop
out
sub
mov
pop
cmpsb
and
mov
ds
xor
or
mov
popa
or
outsl
das
bnd
notb
jne
dec
cmpsl
arpl
mov
and
fisubs
into
push
xorb
pop
sbb
mov
inc
or
adc
pop
pop
rorl
mov
fcmovnbe
movsb
int3
and
sbb
cmp
lds
jmp
push
ss
sub
xor
and
cmc
sub
push
jb
jae
jmp
cpuid
cmp
sbb
sti
fidivrs
pop
xchg
lods
rcrl
jmp
rorl
adc
ss
push
shr
ret
mov
fdiv
dec
mov
pop
ja
int3
cmp
out
out
sahf
push
les
pop
fs
inc
fwait
push
xchg
and
and
repnz
sub
jge
mov
std
ss
pop
out
rcrb
cld
add
pop
jge
inc
lock
fdivl
fstl
mov
inc
sub
cs
aam
sub
ficomps
stos
into
outsb
fsubs
mov
mov
loope
cmc
fnstcw
sub
cld
pop
popa
mov
outsl
jmp
ret
cmovl
or
push
scas
sub
fisubrl
pop
call
sub
sub
mov
cli
icebp
sbb
in
jns
lahf
sbb
sub
fidivl
jmp
xor
jb
mov
loopne
lods
fstl
or
jno
push
shrb
mov
pop
outsl
faddp
inc
dec
scas
pushf
out
aad
dec
mov
mov
es
jbe
xor
rolb
jbe
push
pop
aad
adc
lock
jb
lret
jp
mov
xor
pop
mov
mov
inc
sbb
insb
jle
mov
stos
bound
cmp
add
jne
clc
mov
push
pop
sbb
xchg
mov
jno
mov
pop
inc
xchg
sub
push
push
mov
pushf
mov
and
sti
mov
test
dec
sub
pop
push
or
cmp
mov
icebp
jl
mov
pop
loopne
xor
mov
stc
mov
imul
pop
fwait
adc
icebp
insb
jo
aas
jge
xor
mov
jb
fcomip
dec
in
mov
pop
flds
push
out
lods
jl
std
iret
movsl
nop
rcrb
dec
jmp
jno
mov
mov
push
outsb
pop
mov
sub
insl
mov
mov
je
add
dec
je
cltd
or
rcrl
cli
lahf
mov
fsubl
inc
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
or
inc
or
sbb
adc
negl
pop
jno
insl
sbb
das
pop
lret
cmpsl
inc
stos
jae
jg
push
pop
fisubs
jge
pop
cmpsl
negb
leave
dec
pop
xchg
xchg
cmpsl
sub
movsl
mov
mov
cmp
dec
and
lcall
push
sbb
dec
mov
inc
jmp
mov
in
or
js
fwait
sti
sbbb
imul
xor
jle
push
dec
jnp
in
push
add
xorl
out
fdivrl
push
out
cwtl
inc
test
push
adcb
lea
jmp
negb
and
jo
xor
adc
pop
mov
adc
pop
xchg
jge
test
cmp
push
adc
or
mov
cmpsl
mov
cmp
test
add
pusha
or
test
xchg
flds
hlt
aaa
push
xor
dec
fnstcw
jge
inc
fistpl
sub
out
in
insb
inc
in
add
and
sbb
fldl
sbb
test
push
lret
lret
js
push
pushf
daa
rcrl
popa
rcll
clc
cld
dec
sub
or
push
mov
pop
inc
mov
push
cmp
xchg
movsl
dec
mov
cmp
cmp
insb
into
pop
lret
push
sbb
popa
fdivs
mov
xchg
mov
push
pop
sbb
outsb
leave
mov
mov
daa
xor
mov
sahf
es
dec
loope
mov
adc
cmp
sub
mov
aad
lahf
scas
mov
adc
mov
sub
mov
andl
sub
daa
call
jno
pop
mov
pop
out
mov
clc
sbb
std
xchg
sbb
pop
pop
sub
adc
test
mov
ret
xor
mov
gs
mov
neg
scas
push
fidivs
xor
mulb
sub
loope
add
stc
fs
mov
repz
movsb
clc
adc
cld
in
movl
lods
mov
and
add
sub
dec
xchg
inc
insb
pop
mov
iret
jns
in
mov
gs
mov
rolb
pushf
out
aad
jno
jnp
adc
sub
mov
hlt
sbbb
lock
aad
xchg
sub
lods
push
mov
insl
aad
xchg
inc
pop
sbb
pop
sbb
test
pop
mov
dec
xor
jmp
das
inc
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
stos
lock
test
sbb
pop
cltd
jno
push
ss
pushf
fistpl
arpl
rcr
lcall
movl
jle
adc
out
jecxz
lods
out
add
iret
ja
nop
inc
rolb
xchg
enter
cmp
dec
mov
scas
cmpsl
lock
aad
rorb
and
sbb
push
jbe
rorl
jecxz
push
mov
xchg
xor
inc
ja
mov
jo
ret
aam
shll
int
fdivr
pop
mov
mov
scas
xorb
sub
push
dec
in
adc
js
clc
out
sbb
into
jg
out
scas
into
push
pop
out
mov
push
cmp
xchg
add
dec
ja
movsb
and
loop
jl
leave
cmpsl
aaa
and
loope
negb
xchg
aad
push
inc
or
pop
nop
lods
pop
aas
lock
pop
dec
out
shr
fiaddl
xorb
andl
daa
out
cs
push
clc
jbe
cmp
xchg
sub
jns
and
fnstcw
stc
jno
mov
bound
xchg
push
int3
ret
aam
shlb
xor
test
int3
in
dec
orb
mov
pusha
push
scas
sbb
and
mov
aas
iret
cwtl
inc
and
loopne
cmp
out
aaa
popa
int
push
sub
test
jae
or
push
shrb
mov
pop
cmp
cmpl
in
lret
outsl
jne
out
out
cwtl
rsqrtps
dec
mov
imul
aas
sbb
pop
mov
and
or
rcrl
sbb
lahf
pop
pusha
roll
mov
rorb
ret
sub
aaa
inc
in
loop
pop
clc
push
das
dec
jnp
lock
cmp
mov
add
sbb
bound
int
inc
xor
movsb
ret
sbb
mov
ret
ds
andl
inc
sub
or
dec
push
and
lea
ljmp
cli
scas
stos
fbstp
xchg
in
sub
sbb
stos
sti
ffreep
out
jle
jns
std
and
mov
iret
in
push
inc
fsub
cmp
lods
in
lock
push
lock
enter
out
into
jge
lret
int
lds
and
outsb
pushf
mov
mov
popa
repz
and
pushf
ret
sbb
jg
xchg
icebp
outsb
cmp
adc
inc
push
sub
rolb
dec
in
filds
push
stos
mov
pop
xchg
inc
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
adc
popa
add
sbb
divl
loope
sub
nop
and
add
aaa
stc
mov
clc
adc
and
movsl
mov
fstp
adc
popa
in
pusha
out
fs
push
cmpsl
dec
mov
and
nopl
jns
push
jp
push
in
dec
push
sub
das
mov
push
sub
cmpsl
fwait
add
mov
dec
xchg
pop
xor
loop
sti
stc
fsubl
cmp
push
repnz
push
mov
push
lock
xor
insl
mov
enter
xlat
div
rol
mov
sub
fildl
pushf
sub
and
sbb
in
xchg
add
das
push
push
bound
pusha
lahf
mov
jns
js
fidivrs
sahf
and
lock
in
scas
mov
cmp
lret
pop
shl
dec
pushl
add
mov
repnz
xor
out
out
dec
cmpsb
xchg
mov
cmp
stc
pop
stos
addl
int
inc
jns
add
jnp
push
mov
std
fmuls
mov
mov
cmp
in
xorb
add
sub
andb
lea
inc
outsl
jbe
sub
repz
inc
fisubs
and
pop
mov
pop
cld
push
adcb
loop
ret
in
or
sahf
das
mov
in
inc
push
les
movsl
addb
mov
icebp
jle
call
mov
lods
mov
std
mov
push
and
or
or
test
inc
es
ret
cmp
or
int
xchg
or
mov
xor
sub
mov
cli
push
cld
push
or
xchg
or
jo
sub
push
enter
cmp
adc
les
pcmpeqb
insl
lret
inc
jg
push
stos
pop
inc
jbe
out
insb
push
cmp
imul
inc
dec
sbb
test
pusha
cmp
outsb
out
xchg
daa
lds
ret
popa
movsb
xor
mov
jno
out
shr
mov
icebp
sbb
cmp
std
mov
stos
sub
idivl
ror
pusha
mov
in
scas
adc
xor
mov
sbb
cmpsb
outsb
add
cmp
xor
out
fidivrs
lea
popl
pop
leave
insl
or
inc
push
roll
in
mov
jo
jl
dec
or
jecxz
fdiv
pop
cmp
mov
mov
out
test
push
sbb
xchg
cmovg
test
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
rclb
lock
sbb
test
sbb
test
or
xor
cwtl
lcall
add
sub
push
gs
hlt
push
pop
jle
addb
test
ss
stos
stos
paddd
dec
lret
and
dec
adc
mov
sub
dec
mov
ret
outsl
cmpsb
push
cmp
sub
xor
jae
cwtl
fisubrs
and
xor
inc
and
jle
sti
ja,pn
pop
sub
inc
jl
es
sarl
jae
int3
ljmp
ja
stc
testl
mov
cmp
jae
mov
cmp
insb
andb
cmp
push
fwait
je
jbe
pop
adc
imul
mov
das
mov
insl
cld
and
push
mov
mov
inc
xchg
data16
sbb
jb
jge
adc
jno
imul
and
or
xorb
push
stc
dec
sti
pop
mov
mov
pop
test
xlat
scas
mov
sbb
popf
fwait
shll
orb
dec
push
dec
adc
push
pop
xchg
and
mov
stos
mov
test
out
push
call
lahf
add
mov
arpl
es
dec
add
lret
cmp
pop
test
aam
push
mov
pusha
mov
push
es
xor
mov
cli
push
pop
int
imul
push
xchg
sub
xchg
mov
outsb
adc
shrb
imul
xchg
lds
mov
std
mov
movsb
pop
or
jecxz
arpl
mov
rcrl
mul
push
push
mov
dec
in
rcrb
popa
mov
inc
pop
je
lret
jmp
mov
mov
push
sub
mov
shrb
mov
lret
fcomps
mov
xchg
dec
adc
cmp
cmp
xchg
ret
or
in
and
add
sbbl
loop
sarb
scas
pop
mov
fldlg2
pop
shlb
rcl
mov
push
push
pop
nop
xchg
xchg
fdivrl
inc
mov
and
xchg
shlb
cmpsb
xlat
aaa
jecxz
lret
or
jmp
mov
mov
scas
jo
sbb
lds
cmp
push
push
daa
test
out
add
test
mov
sbb
daa
les
cmp
lods
fdivr
sub
popf
lea
stos
sahf
lcall
add
inc
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
test
push
stos
xor
sbb
adc
daa
push
test
and
jp
or
loopne
cltd
cltd
stos
push
mov
in
push
mov
jg
stos
xor
cld
pop
ss
lock
and
mulb
push
xor
repnz
aas
jp
pop
inc
sar
mov
sbb
jmp
pop
loope
jle
sub
lods
jae
mov
lret
or
daa
popf
and
repnz
jns
mov
mov
inc
mov
repnz
int3
jns
push
dec
jbe
jne
movsl
je
add
call
dec
mov
call
push
enter
cmp
pop
mov
jl
mov
mov
outsb
sbb
cmp
rcrl
repz
gs
cwtl
cld
push
sub
xor
or
xchg
fcmovbe
sub
in
jge
add
xor
out
adc
sub
bound
mov
test
jmp
mov
call
cmp
cmp
gs
push
dec
insl
inc
add
sbb
dec
pushf
push
pop
dec
sarl
stos
xchg
cmp
xchg
pop
or
stos
enter
addl
push
mov
shrd
or
std
and
pop
mov
xchg
inc
shl
mov
lock
ret
push
dec
sub
xor
push
imul
lock
cmp
fisttpl
cmpsl
pop
and
xchg
cmp
mov
inc
inc
cmpsb
mov
inc
and
add
inc
mov
sub
push
mov
add
mov
icebp
pop
mov
cmp
pushf
lds
outsb
xchg
in
push
jae
jmp
test
xlat
jo
leave
sub
or
cmp
inc
push
pop
inc
mov
dec
in
inc
repz
xor
inc
movsb
cwtl
nop
jmp
sbbl
ljmp
mov
lds
xchg
push
xchg
movsl
push
dec
mov
pushf
scas
call
adc
xchg
fcmove
ja
lahf
pop
mov
cmc
push
dec
loop
adc
loopne
sub
jb
or
shll
sar
mov
gs
sahf
insb
stos
iret
push
push
mov
orl
mov
adc
imul
add
leave
pop
jbe
addr16
das
ficompl
fdivs
aaa
mov
gs
xchg
daa
insb
pushf
adc
movsb
or
xor
cmp
out
loopne
pop
xor
movl
movl
jmp
aas
mov
mov
dec
mov
push
stos
adc
sbb
test
sbb
sub
jle
mov
cli
fidivl
jne
inc
push
lods
push
and
sbb
out
inc
fdivrl
mov
push
jp
and
pop
movb
out
stc
sbb
mov
jp
adc
jp
add
or
test
out
adc
mov
pop
pop
xor
lret
push
push
repnz
cmp
and
jecxz
push
lahf
inc
mov
lods
test
mov
push
mov
add
push
mov
mov
rorl
xor
push
cwtl
mov
loop
das
test
daa
mov
shll
scas
adcl
insl
aad
loopne
xchg
push
fimuls
jno
in
mov
lcall
sub
hlt
adc
xchg
sub
or
aad
xchg
shlb
insl
cmpsb
push
aas
jl
add
or
repz
lcall
popf
test
sbb
fildll
lahf
xchg
xchg
gs
add
sti
cld
fsts
adc
inc
push
sub
push
movl
mov
pop
out
imul
mov
in
addl
jne
and
and
scas
aaa
int3
adc
add
mov
inc
push
adc
loopne
popa
int
push
and
adc
xor
loopne
or
je
dec
adc
or
ljmp
pmuludq
jecxz
xor
inc
sub
shrb
dec
sbb
jno
insb
pushf
or
inc
mov
in
jl
dec
adc
insb
inc
aaa
mulb
push
incb
pushf
int3
push
mov
xchg
add
mov
jno
dec
call
rorl
fiadds
clc
ss
dec
pop
cs
test
mov
xchg
sahf
xchg
cld
movsb
ds
mov
scas
or
test
pop
add
mov
out
xor
cltd
inc
and
and
push
cmp
jno
int
cltd
filds
sbb
fisubrl
cmp
xor
scas
push
inc
cmpb
stc
mov
dec
jns
mov
scas
pop
xchg
les
sub
mov
movsb
or
pop
test
mov
xchg
sub
push
mov
les
xchg
rcrl
cmp
stc
lock
xor
mov
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
adc
jo
ljmp
xchg
ljmp
cmp
int
push
push
pop
orl
mov
jmp
push
ret
insb
out
sbbb
mov
pop
decb
loop
xor
mov
scas
lcall
incb
aam
xchg
loop
dec
in
std
xchg
jmp
add
sbb
cmc
push
mov
push
cs
popf
push
xchg
xor
gs
jle
or
jl
stos
push
pop
nop
mov
arpl
xchg
mov
and
sub
mov
push
adc
push
sub
push
pop
js
inc
in
rol
cld
or
mov
lds
fs
orb
shlb
cld
movsl
mov
pop
imul
inc
jg
adc
icebp
xchg
jge
insb
jne
push
test
push
mov
xchg
ficoms
fnclex
aas
jp
mov
xacquire
cmp
cmp
rcr
lcall
xor
daa
std
cmp
sub
jl
xor
test
in
std
in
inc
aad
add
cltd
push
or
xchg
pop
dec
mov
pop
pop
adc
std
mov
jb
decb
xchg
aaa
push
sbb
rorb
inc
add
in
out
fldl
call
rolb
stc
int
xor
lods
xor
dec
jo
js
inc
es
shlb
mov
fisttpl
mov
pushf
lret
arpl
pop
pop
adc
and
jae
popa
inc
push
dec
andl
inc
addr16
mov
cmpsl
in
sbb
test
xlat
lret
mov
cs
add
test
rcr
jg
adc
and
orb
mov
and
sti
adc
popa
lcall
scas
add
stos
je
std
cmp
xchg
sub
mov
mov
or
pop
data16
ja
pop
jne
enter
movsl
adc
jecxz
clc
push
shll
xchg
shrl
imul
jmp
cwtl
test
cmp
shlb
fdiv
bound
mov
data16
pop
sbb
dec
hlt
sub
xchg
cmp
mov
and
xchg
mov
xor
lcall
in
shll
sbb
mov
sub
inc
jb
jo
call
pop
ja
test
mov
fidivl
lret
iret
inc
and
pop
mov
pop
mov
orl
xor
ja
or
mov
inc
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
push
jae
xor
sbb
test
sbb
addr16
lret
add
dec
lds
xorl
adc
jo
pop
out
adc
ret
cli
pop
or
and
xchg
loopne
and
xlat
scas
pop
in
jbe
adc
add
xor
xchg
mov
fldenv
jl
push
daa
addr16
sbb
jae
mov
lods
test
mov
mov
and
jmp
fldenv
fcmovu
push
push
shlb
add
mov
sbb
mov
push
movsb
or
shll
divb
sbb
jno
dec
mov
adc
test
je
leave
jge
hlt
gs
dec
push
rolb
sahf
popf
cmp
jmp
xchg
out
ret
fidivs
ja
or
mov
or
testl
lahf
xchg
rcrl
rclb
cltd
and
in
sub
nop
xchg
jbe
jnp
or
js
lret
imul
imulb
mov
inc
stos
inc
fnstsw
aas
mov
icebp
mov
test
sub
outsb
stc
stos
push
inc
dec
repnz
pop
xchg
imul
inc
xor
jmp
inc
and
in
jns
pushf
and
ficompl
std
xchg
daa
rorl
dec
push
xchg
pushf
in
xor
out
in
sbb
push
jb
sub
pushf
cltd
ret
jmp
sub
test
xchg
movsl
pop
rorb
adcb
mov
sbb
xchg
dec
push
dec
cwtl
fidivrl
xchg
ja
add
mov
es
movsb
or
data16
hlt
leave
and
sar
ror
ss
add
out
shl
cwtl
or
call
stos
outsb
jo
mov
hlt
adc
stos
fldt
mov
cmp
mov
inc
movsbl
cmpsb
sbb
movsb
cmpsb
push
push
or
push
lods
repz
test
clc
stos
das
xchg
lret
mov
pop
and
lock
sbb
ret
and
cli
ss
pop
subl
xchg
mov
icebp
pop
mov
pop
cld
scas
push
or
mov
mov
cld
fimull
push
icebp
leave
fimull
mov
pop
xchg
inc
adc
ljmp
adc
mov
and
mov
scas
sub
imul
xchg
daa
orb
pop
andl
add
add
pop
sahf
adc
divb
and
lock
stc
iret
push
jp
push
xchg
jge
cmp
mov
mov
in
call
xchg
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
test
sbb
ror
adc
jmp
lret
mov
js
cmc
adc
dec
dec
enter
mov
dec
add
cmp
cmp
inc
das
flds
cmp
xchg
or
out
or
pop
nop
mov
fmul
fs
lahf
jno
insl
popa
bnd
jae
negl
ret
int
sub
test
ljmp
int3
add
pop
out
stos
cmp
out
sbb
or
xor
add
enter
imul
push
shll
push
xchg
inc
imull
enter
idivl
mov
in
push
enter
imul
test
mov
gs
rorb
or
sar
aaa
xchg
and
add
mov
and
mov
mov
push
jle,pt
mov
push
sbb
fcomps
mov
fsubl
mov
lahf
jno
rorb
inc
xlat
cmp
out
add
dec
mov
sub
sub
popa
xchg
adc
loopne
lret
mov
scas
andb
out
and
lds
in
sbbb
inc
sub
pushf
mov
imul
adc
daa
jae
pop
imul
inc
cmp
sbb
imul
mov
and
dec
xor
and
and
repnz
movsl
inc
ds
jae
in
jne
movsb
out
test
mov
hlt
push
adc
stc
and
leave
clc
sub
std
xor
fistps
mov
xchg
jno
cwtl
aas
loope
daa
rcll
out
gs
mov
sub
and
sbb
jmp
sbb
or
inc
jae
cmp
lret
pop
or
mov
sti
xchg
cmp
in
adc
loopne
in
jmp
js
fwait
add
sbb
movntq
and
xlat
idivl
jnp
aam
mov
and
mov
push
hlt
imul
mov
add
add
andb
add
xchg
dec
divps
xor
pop
fnsave
sbb
and
add
jmp
addl
ret
std
daa
in
es
xor
add
xor
imul
scas
mov
fsubr
mov
push
add
push
insl
fidivrl
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
imul
sbb
and
xor
shrl
inc
and
xchg
push
adc
and
xchg
mov
mov
insb
arpl
push
xor
data16
xchg
mov
pop
mov
and
jmp
inc
daa
popw
jns
std
jb
pop
or
roll
ss
add
lock
jb
dec
push
es
clts
xchg
popf
loope
es
mov
loopne
add
jnp
pop
or
lods
or
and
lcall
jge
mov
scas
mov
adc
inc
pusha
add
les
mov
fistpl
add
xchg
scas
enter
gs
hlt
divl
xorl
xchg
xor
leave
rorl
pop
out
inc
xchg
add
loopne
mov
dec
and
mov
popf
outsl
sbb
mov
cli
cmpsb
adcb
jge
mov
jle
fstps
ret
lahf
pop
push
pop
mov
adc
dec
lret
adc
push
ss
mov
inc
dec
xchg
inc
cmp
mov
addr16
dec
aad
ror
movsl
imul
ret
into
out
cmpl
pop
pop
cmp
inc
mov
cmp
orb
test
addl
fsub
fisubl
push
inc
sbb
sahf
xchg
mov
out
fdivl
mov
fst
xor
mov
insl
or
movsl
or
mov
mov
push
push
mov
ret
pop
loopne
inc
aaa
and
mov
test
dec
clc
mov
movsl
clc
push
testb
jnp
repnz
mov
mov
jg
jg
xlat
inc
insb
in
and
aam
sahf
mov
addr16
mov
jle
pop
or
push
rol
stc
dec
push
test
fildl
mov
in
dec
ja
push
lcall
xchg
jns
insl
les
jns
push
repz
aad
mov
cmp
dec
sbb
mov
aaa
stos
cs
mov
mov
add
lock
movsl
xor
scas
into
mov
pop
jg
lods
sub
sub
popl
push
out
ficompl
ljmp
sbb
icebp
loope
int3
add
xchg
pushf
cld
ljmp
repnz
or
mov
int
fstpl
je
sahf
mov
scas
shr
mov
xchg
jno
loopne
inc
push
stos
lea
out
mov
call
ficompl
pop
sahf
stos
sbb
sub
push
adc
lods
mov
xlat
in
or
and
and
ss
push
push
ss
cmc
cmp
mov
jg
mov
jbe
dec
ret
cmp
enter
into
pop
pop
aad
xlat
inc
pop
cwtl
test
push
adc
pop
rcl
or
je
aas
sub
dec
lock
jae
sbb
out
mov
cs
pop
les
dec
lods
push
daa
xchg
je
ds
adc
ss
dec
sbb
lock
push
cmp
idivl
mov
add
dec
out
cmp
rcll
fstpt
lea
fimull
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
dec
mov
xor
sbb
xor
mov
das
aam
loope
dec
xor
sub
jae
fildll
mov
add
push
pop
mov
and
arpl
icebp
xor
js
fsubrs
orb
js
dec
mov
sub
push
sbb
popa
dec
sarb
ud1
test
push
xchg
lret
jmp
inc
xor
sbb
in
jp
fwait
insb
xchg
fs
adc
out
mov
cmc
data16
and
and
sbb
test
cmp
and
ljmp
pop
into
faddl
in
lret
inc
add
xor
adc
clc
dec
test
push
mov
int3
sarb
or
out
outsl
es
popf
outsl
repnz
insb
add
sti
inc
inc
int
ss
rcr
jl
pop
out
sub
inc
mov
sarl
add
pop
cmc
and
mov
pop
mov
data16
mov
lods
mov
xor
dec
bound
outsl
outsl
popf
add
inc
lret
dec
stos
bound
and
cwtl
addr16
pop
sbb
cmp
mov
aaa
iret
push
lods
stos
cmp
sub
imul
or
cmp
outsl
adc
pop
push
sbb
jge
ja
dec
or
data16
test
mov
decb
jg
adc
xor
in
gs
imul
push
nop
adc
sbb
and
inc
test
nop
das
test
xchg
jns
pusha
mov
add
sbb
ret
flds
inc
out
xor
sub
jb
jb
xor
jmp
shlb
xor
inc
in
add
mov
mov
nop
xor
test
stos
repz
es
xchg
icebp
in
scas
xor
pop
cli
dec
pusha
js
jle
adc
std
pushl
jo
adcl
inc
jmp
in
movsl
push
movsb
shlb
xlat
mov
loopne
cmp
and
sub
movsl
test
inc
jg
test
add
add
lcall
int
test
jb
cli
and
mov
push
xor
pop
inc
cmp
mov
dec
aam
inc
test
mov
movsb
ret
movsb
jne
add
inc
xlat
mov
push
push
pop
xchg
and
outsl
in
dec
hlt
jno
xchg
xchg
sub
cmp
xor
and
adc
fwait
jmp
sub
cmp
cmpsl
imul
and
inc
shr
arpl
int3
cmp
mov
lods
inc
add
mov
cmp
or
lds
xor
xchg
sub
mov
pop
push
push
gs
xor
push
adc
add
imul
ja
out
cmpsl
fsubrl
lret
add
rorb
cld
xor
add
push
mov
popf
xorb
jnp
fwait
push
xchg
dec
aam
mov
mov
sbb
or
xor
js
inc
in
or
xor
dec
mov
cmc
mov
data16
sbbb
mov
mov
mov
rorl
mov
popf
faddl
lret
int3
fwait
sbbl
dec
pop
mov
mov
push
sub
dec
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
iret
frstor
mov
stos
loop
inc
pop
ljmp
add
cli
mov
xchg
mov
cmp
mov
push
shlb
lds
inc
sbb
xchg
pop
jl
shrb
xchg
mov
pop
inc
enter
out
leave
aas
add
jle
loopne
push
jnp
fisttpl
movsb
dec
dec
sahf
dec
and
sahf
or
cld
iret
mov
push
js
std
jp
inc
movsl
and
cmp
in
add
inc
or
or
gs
pop
sub
fwait
outsb
cmc
mov
or
loope
sbb
inc
icebp
dec
push
jo
or
xchg
cmp
insb
iret
xchg
sbb
add
dec
mov
sbb
or
mov
mov
out
jae
out
gs
adc
into
std
push
pop
ret
pusha
les
ja
dec
mov
cltd
dec
icebp
shlb
and
aam
lock
sub
in
adc
clc
or
out
test
inc
lods
mov
jnp
or
cmp
mov
xor
filds
je
cmp
inc
insl
testl
fnstenv
loopne
xchg
mov
mov
ss
adc
in
mov
paddb
cmova
push
and
jno
mov
cwtl
sbb
adc
leave
in
and
fists
addr16
lds
dec
jnp
xchg
push
xchg
cmp
pop
xor
add
xchg
or
sub
test
push
test
inc
aad
aam
sti
movsl
shll
inc
inc
mov
sub
fcomi
pop
and
mov
int3
add
loop
out
cmp
mov
mov
xorl
mov
jecxz
rcll
dec
gs
adc
mov
adc
sbb
sbb
mov
aas
iret
scas
cmp
incb
jne
lds
mov
mov
sbb
fsubs
inc
dec
cmp
or
sub
adc
sub
pop
dec
testb
aad
shlb
out
cmp
out
and
xor
mov
and
inc
loop
sbb
cmp
jb
xchg
loop
loope
cmpsl
aam
js
lea
cmp
adc
repz
clc
mov
repnz
cmp
xchg
iret
or
cmpsl
lock
xchg
lock
inc
mov
push
test
enter
adc
testl
push
add
test
mov
in
inc
adc
pop
and
sarl
inc
lods
pop
pop
and
jl
add
mov
adc
mov
addr16
rorb
or
mov
pinsrw
frndint
jb
pcmpgtd
data16
mov
lods
pop
out
sub
test
mov
push
or
lock
mov
xchg
add
push
fldt
sarb
cmpsb
jle
xor
push
into
lret
mov
xlat
jg
pop
lcall
push
das
add
or
cmp
cmp
push
xor
imul
add
shlb
insl
jl
jns
or
or
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
push
sarb
sbb
adc
sbb
mulb
jl
sub
mov
rcrl
sbb
insb
cs
push
inc
int3
rolb
push
in
jns
dec
insl
daa
pop
push
mov
sub
mov
popa
test
xlat
shll
mov
push
lds
fiaddl
test
pop
mov
and
mov
mov
jecxz
lock
negb
xor
lret
ss
inc
mov
cmp
or
pop
int3
add
ljmp
lcall
mov
fdivp
jbe
hlt
or
mov
int
stc
fdiv
outsb
cli
ffree
lret
mov
or
mov
push
pop
mov
in
sahf
dec
adc
jle
cmpl
scas
mov
sti
test
mov
add
mov
mov
mov
cli
push
int3
jnp
add
pop
cmpsl
or
aam
or
sbb
out
sub
mov
xor
stos
lock
int
enter
lcall
and
xchg
push
mov
sub
mov
loopne
mov
dec
test
add
int3
dec
cwtl
and
pop
sbb
sbb
mov
mov
adc
push
mov
incl
jmp
out
mov
adc
ror
xchg
push
mov
lds
cmovg
into
jne
sub
pop
mov
insl
int
arpl
pushf
dec
gs
pusha
push
pop
dec
psubb
sub
outsl
xor
jg
call
rcll
pop
xchg
xor
fwait
adc
or
push
dec
xchg
test
roll
jae
bound
jle
mov
adc
and
stc
and
dec
je
popa
in
push
add
or
pop
xchg
out
sbb
push
roll
insl
or
arpl
and
pop
in
test
push
aam
mov
cmp
je
aaa
sar
les
mov
fs
inc
bound
mov
add
pop
mov
daa
aas
hlt
adc
dec
bound
in
xchg
add
imul
stos
cmpsl
fists
aad
cmp
out
int3
mov
test
movsb
adc
and
inc
mov
in
pop
inc
xchg
cs
stc
int
sahf
push
shr
test
fadds
ja
cmp
mov
sub
jnp
push
add
mov
call
push
aas
lret
xchg
arpl
sub
fadds
sub
call
lret
test
dec
cmp
loope
inc
add
lods
and
test
cmp
push
push
xor
lcall
mov
test
pop
ljmp
xor
and
aaa
adc
fnstenv
in
cmpsl
sub
jmp
mov
mov
aad
fs
xchg
ljmp
test
clc
in
shll
in
inc
scas
mov
or
int
dec
int3
mov
pop
push
cmpsb
push
filds
pushl
lds
pop
cmp
in
xchg
push
sub
ror
inc
lcall
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
nop
mov
mov
sbb
xchg
jmp
cs
jae
inc
add
lahf
adc
lcall
sar
xor
hlt
jle
in
bound
jae
dec
sbb
std
mov
inc
or
pop
sti
fadd
add
jno
xor
div
mov
shlb
repz
push
test
mov
dec
jge
nop
je
or
mov
sarl
daa
and
xchg
cltd
pop
and
dec
std
popl
jp
out
push
outsl
das
mov
dec
dec
std
pushf
sahf
int
mov
inc
cld
xchg
or
rcrb
mov
aaa
cmp
push
xlat
rol
in
jmp
xor
xlat
cmc
lds
xchg
xchg
jecxz
jnp
mov
hlt
jne
call
or
cmp
pop
fisttpl
cmp
push
mov
push
mov
push
sbb
imul
cmpsb
mov
out
dec
jb
jp
mov
ljmp
ret
push
stos
es
cltd
mov
or
push
gs
and
mov
push
jmp
cmp
xchg
addr16
mov
add
dec
mov
push
js
fcompl
stos
mov
add
stc
popa
mov
fidivs
cmp
push
xor
push
movsb
loop
pop
xchg
ljmp
int3
cmp
loope
leave
xchg
mov
or
loope
inc
lock
repz
stos
test
xchg
rol
lcall
iret
lret
mov
loop
shlb
sub
dec
pusha
dec
mov
mov
orb
adc
loope
js
out
lods
xchg
icebp
out
insl
test
push
xor
daa
mov
pop
inc
inc
cmc
sahf
mov
mov
pop
jg
mov
hlt
inc
stos
cmc
popa
or
hlt
pop
pusha
xor
call
nop
mov
sbb
les
mov
mov
cmc
fimuls
push
inc
sub
scas
aaa
aam
lret
fstpt
jle
xor
jl
mov
fcomps
cs
enter
es
dec
sbb
xor
push
mov
adc
push
data16
adc
push
stos
pop
adc
lret
adc
jb
out
sbb
cmpsb
sbb
mov
mov
fistpl
cs
test
js
xlat
pop
xlat
dec
push
clc
pop
xchg
sti
int3
cmp
xor
cmpsl
push
cmpsb
jns
xchg
shrl
scas
mov
das
imul
cmp
sbb
sub
ljmp
out
or
xchg
push
pushf
rcrb
out
sbb
mov
fs
xchg
sub
adc
add
in
lods
shlb
sar
add
or
push
xchg
fs
cs
fsts
lea
push
cld
push
je
pop
out
cli
dec
mov
scas
repz
insl
inc
mov
sti
in
out
lds
ja
add
pop
sahf
mov
aas
mov
daa
mov
ret
lret
outsb
addr16
mov
shrl
sbb
sub
cmp
mov
sub
and
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
or
sbb
adc
sbb
or
mov
sbb
es
xor
shlb
or
lods
push
jb
pop
stos
imul
scas
or
or
pop
or
out
fiadds
pop
addr16
cltd
mov
lea
repz
jbe
sahf
rcll
mov
push
test
lods
mov
ficomps
addr16
mov
sub
out
xchg
pop
fwait
mov
xor
movsb
mov
fstpt
adc
pop
rclb
iret
push
xchg
adc
dec
xor
subl
and
js
dec
sbb
scas
pushf
out
xchg
aas
ss
mov
loope
sbb
xor
aaa
cmpsl
cmc
push
insb
xor
daa
mov
push
inc
dec
sbb
mov
leave
shlb
scas
jmp
or
fwait
stc
inc
cmp
cmpsb
lods
sbb
and
repnz
mov
mov
popf
lcall
in
cwtl
js
or
cmp
or
push
bound
lret
imul
enter
outsw
arpl
jg
cs
mov
xlat
sbb
add
fsubs
jmp
ja
mov
sub
enter
push
cmp
leave
into
push
lods
xor
push
xor
push
cli
lcall
mov
and
repz
cmpsb
sub
out
mov
sbb
sarb
dec
cmp
cmc
scas
add
mov
add
add
add
mov
jno
ja
rcl
movsb
mov
pop
popf
xchg
div
mov
fs
mov
lods
push
popa
sti
sbb
jb
rclb
and
fadds
rcl
xchg
das
jmp
push
loope
mov
mov
jle
pushl
xchg
pusha
sub
and
popf
lock
roll
pop
pusha
cld
push
dec
pushf
xchg
xchg
outsb
jno
xchg
lds
sbb
cmp
and
push
xchg
or
ja
inc
mov
repz
mov
mov
jg
push
or
lret
xor
jo
sub
mov
sarl
sar
ds
dec
mov
push
adc
mov
loope
in
add
aaa
jle
divb
rcrb
xor
daa
xchg
popf
sbbl
pop
cltd
icebp
movsb
data16
adc
rcrl
fiadds
mov
sti
cwtl
fadds
mov
bound
mov
dec
dec
xchg
out
rcrb
pop
std
mov
lret
clc
xor
test
mov
xor
lahf
cmp
xacquire
stos
mov
stos
mov
arpl
and
enter
in
sbb
sub
fwait
mov
or
loopne
mov
jp
jmp
out
incb
adcb
inc
mov
das
test
mov
fbstp
decl
aad
pop
add
push
sub
scas
imul
cmpsb
cmp
sbb
stos
sbb
pop
xorb
pop
les
sarb
sub
sbb
lock
pop
shrb
cltd
xchg
outsb
and
xor
jo
mov
xor
push
xor
cmp
repz
and
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
mov
sbb
adc
sbb
push
xor
int3
movsb
sbb
in
in
inc
js
mov
mov
dec
inc
mov
cmp
and
into
fsubr
dec
icebp
cli
dec
mov
xchg
jbe
loopne
incl
cli
test
xchg
data16
lock
push
ret
mov
popa
dec
lock
in
sti
sbb
mov
xlat
scas
aad
rclb
es
rcrb
xor
cmpxchg
jbe
test
jno
inc
dec
fsubrp
hlt
push
jg
dec
pushf
in
cs
jns
cli
test
mov
pop
push
xor
aad
pop
or
jns
mov
adc
or
pushl
xor
pop
sub
js
imul
fisubrl
jg
cltd
cmp
add
mov
fs
dec
push
imulb
fcomps
enter
in
sub
xlat
jbe
or
inc
and
pop
jg
push
add
test
and
mov
out
or
xchg
clc
aaa
and
mov
dec
xlat
dec
adc
and
xor
data16
sub
and
adc
test
test
inc
sub
mov
push
test
les
cmc
test
or
insb
out
sbb
xor
sub
shrl
fstps
mov
pop
orl
leave
cmp
mov
movsb
or
lds
sub
jl
mov
arpl
mov
movaps
repz
push
lds
or
imul
icebp
lea
xchg
sbb
shll
xor
hlt
sub
dec
pop
lock
rcll
ffree
outsl
cmp
xchg
insb
pop
roll
cmpsb
and
dec
push
mov
sub
mov
jae
cmp
sub
lcall
int3
cltd
mov
movsl
inc
data16
fsubs
or
jmp
out
mov
mov
enter
jns
pop
rorb
dec
mov
or
aaa
pop
int
push
dec
add
stos
push
inc
xchg
push
or
sbb
bound
pop
cmc
mov
in
stos
sti
sbbb
inc
push
xchg
add
push
xor
push
rorb
dec
pop
push
leave
pop
outsl
stos
es
loopne
push
out
xchg
jmp
sub
jae
mov
xchg
mov
xor
xchg
sti
in
xorl
popa
pop
das
mov
adc
gs
adc
push
rcrl
stos
mov
lods
inc
push
sbb
push
xchg
jge
push
mov
mov
push
push
jg
add
clc
sub
rclb
icebp
mov
pusha
and
xor
ret
push
rorb
mov
mov
or
in
sbb
dec
clc
fmull
leave
lahf
pop
cmc
lods
xchg
add
and
lods
dec
icebp
and
test
pop
ss
loop
sub
ret
push
dec
fcomps
lahf
sub
push
das
mov
cmpsb
in
xor
mov
aad
mov
push
adc
dec
and
loopne
or
out
cmpsl
ds
rclb
in
xchg
outsb
adc
inc
pop
inc
decl
insb
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
push
inc
fnstsw
stos
sbb
test
lods
pop
stc
aaa
push
adc
xor
pop
nop
fsubl
pushf
dec
mov
cmp
and
mov
mov
das
shlb
out
sub
fcomps
dec
cli
testb
add
cwtl
stos
aaa
sbb
inc
aam
leave
test
les
mov
dec
mov
nop
cmpsb
dec
sahf
mov
or
mov
lret
add
sbbb
ljmp
inc
mov
pop
pop
fimull
in
scas
test
jmp
bound
cmp
in
pop
aas
xor
sub
pop
xchg
mov
pop
clc
stos
int
cmpsl
ret
je
insb
lock
or
outsl
gs
out
and
loop
pop
adc
int
push
mov
lds
mov
pop
pop
jmp
lods
push
aaa
or
jno
jle
xor
mov
xchg
inc
out
fimuls
cs
mov
mov
or
dec
sub
jg
jp
aas
cmp
dec
je
mov
addr16
outsb
test
push
mov
cld
add
jg
add
sbb
and
jo
inc
xlat
cltd
mov
mov
xor
iret
test
out
fists
and
push
dec
adc
cld
jmp
hlt
mov
stos
inc
pop
sub
les
cmp
push
sti
fwait
sub
cmpsb
enter
int
nop
inc
jb
addr16
dec
or
and
jo
cwtl
mov
orb
xchg
popf
fsubl
add
pop
sbb
enter
imul
sarl
add
leave
add
in
mov
dec
and
aad
dec
cmp
sarb
jnp
das
rorl
mov
jl
js
ljmp
mov
xchg
fidivrs
dec
cmp
das
xchg
mov
ljmp
sbb
pop
out
sbb
push
fwait
js
mov
jae
mov
inc
mov
sbb
mov
ret
lcall
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
loope
mov
jecxz
cmp
xchg
add
xor
cmpsl
inc
fadds
xor
push
mov
cwtl
or
gs
adc
xchg
mov
add
sbb
jl
sub
mov
pop
mov
repz
xchg
jno
icebp
lea
stos
xchg
inc
or
ljmp
lea
jb
mov
in
adc
or
pop
icebp
adc
movsb
in
inc
lods
std
incb
adc
sbbb
sub
fs
notl
dec
scas
inc
mov
icebp
outsb
loop
fidivl
call
push
int3
cmc
stc
inc
std
in
shrl
push
insl
sti
jno
cmc
lea
mov
sbb
aad
xor
adc
lret
mov
push
sub
inc
lcall
xchg
or
sbb
add
mov
xor
jle
repnz
stos
outsb
pop
icebp
adc
push
add
jbe
arpl
pop
insb
loop
jmp
mov
pop
fmull
inc
pop
js
push
xchg
cmp
sub
in
dec
outsl
inc
out
jae
mov
and
shlb
pop
outsl
lea
loop
xchg
aad
xchg
inc
push
or
pop
jnp
cmpsl
adc
xor
out
pop
in
scas
ja
out
addr16
pushf
rclb
push
xchg
pop
dec
test
cmp
pop
insl
test
aad
mov
mov
and
xchg
sub
inc
and
ja
ss
imul
int
push
loop
addl
sbb
or
push
into
jbe
ficoml
pusha
js
ret
and
mov
lret
les
push
push
das
rcll
out
mov
cmp
mov
pop
js
jbe
jl
icebp
subl
sarl
in
fisubs
outsb
popa
popf
mov
sub
lahf
and
outsl
jecxz
pop
sbb
testl
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
sbbl
test
dec
fdivp
enterw
add
aas
das
jl
stos
subl
lods
mov
mov
inc
shrl
das
cmp
pop
loopne
and
scas
loopne
inc
push
mov
mov
mov
iret
adc
dec
cmp
mov
push
shll
push
leave
dec
xor
cmp
mov
pop
dec
push
insl
jp
ds
mov
sbb
shrl
pop
fs
out
jnp
test
push
xor
pushf
call
lret
movsb
push
lds
and
add
mov
aaa
mov
nop
sbb
jle
out
or
mov
fadd
jge
push
jno
sarb
hlt
jl
mov
fnclex
into
xor
jno
jge
inc
mov
xchg
pop
lock
mov
inc
stc
and
jecxz
adc
cltd
pop
adc
mov
push
or
mov
mov
fdivrl
pop
push
daa
sub
cmp
mov
push
xchg
xorb
push
pop
pop
lock
es
xor
call
in
xchg
xchg
call
xor
addb
cmpsl
jl
scas
push
fimull
in
push
call
mov
pop
xor
es
leave
stc
lcall
push
cwtl
std
xor
inc
cmp
or
loop
in
add
stmxcsr
xchg
adc
cmpsb
mov
sub
fstpt
test
arpl
cs
mov
sbbl
mov
jl
add
push
in
adc
xor
leave
stos
push
cmpb
out
push
pop
outsb
cli
dec
in
rcrl
jecxz
push
mov
out
mov
repnz
scas
lods
mov
push
and
stos
pushf
sub
xacquire
lods
xlat
aas
pusha
push
add
xchg
out
push
cmp
les
xchg
loop
mov
into
arpl
pop
aaa
pop
mov
inc
cwtl
jp
jno
or
in
jmp
addb
out
push
pop
cltd
sub
xor
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
subb
test
mov
je
in
loop
mov
jle
lret
xchg
in
mov
mov
push
test
lcall
mov
movsl
shl
out
dec
adc
orb
adc
ljmp
cwtl
add
scas
int
dec
iret
inc
xchg
jbe
fiadds
xlat
xchg
lock
fwait
icebp
fsubl
adc
lds
jg
xor
add
dec
xor
add
ja
jl
mov
mov
ss
outsl
fldenv
rep
pop
push
mov
mov
jmp
ja
scas
xor
mov
sub
outsl
stc
sub
inc
test
mov
sbb
sub
fwait
mov
fwait
inc
inc
xlat
test
adc
dec
or
jp
fwait
mov
dec
inc
jo
int3
imul
out
xor
cmp
inc
add
mov
sub
pop
popa
adc
cmc
arpl
nop
aas
out
xor
icebp
jbe
test
xchg
sti
testl
mov
in
jecxz
mov
fsts
or
jbe
push
mov
adc
xlat
out
adc
xor
add
out
leave
into
jo
pushf
adc
fstpt
or
jmp
xlat
cmpb
mov
stc
dec
jmp
jnp
int3
xchg
icebp
inc
or
or
dec
fisubs
les
push
push
push
add
push
andl
pop
test
push
inc
dec
xor
pop
inc
test
mov
xchg
addb
jl
push
es
cmc
and
xor
dec
xor
cmpsb
es
repz
jg
xchg
imul
les
mov
lods
fs
jg
in
pusha
stc
dec
push
dec
add
enter
neg
cld
dec
in
jmp
push
addb
jle
int3
aad
jmp
fs
xor
mov
test
cmp
add
fstl
in
xor
fwait
cs
add
aad
fdivrp
and
subb
pop
mov
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
inc
mov
cwtl
sbb
test
les
pushf
xor
push
das
ss
stos
mov
sub
or
mov
leave
shrl
idivl
push
fs
sbb
cmovbe
mov
xchg
inc
or
or
cmp
cld
aad
mov
mov
lods
adc
inc
cmp
cwtl
fsubrs
arpl
add
sub
jge
loop
repnz
inc
sbb
arpl
dec
pop
popa
pushf
xchg
adc
addl
xchg
xchg
mov
jle
ja
jecxz
xchg
enter
jg
add
mov
int
fimuls
cmp
push
rorb
xor
xorb
pusha
loop
or
mov
mov
xor
jmp
aas
xor
and
repz
mov
ss
push
je
scas
mov
mov
and
out
movsl
loope
xor
xor
sbb
dec
lds
and
adc
sbb
lret
sbb
addr16
les
icebp
repz
cli
push
jnp
mov
aaa
push
enter
pop
mov
scas
pop
mov
scas
bound
push
dec
daa
add
outsl
xchg
mov
sbb
out
in
ret
popf
jno
enter
pusha
es
repnz
pop
call
test
dec
sub
sbb
sub
pop
xor
push
push
inc
pop
jo
out
pop
mov
pop
mov
sub
stc
jl
push
sbb
or
mov
jb
sarl
pop
jmp
ja
adc
jmp
popl
and
xor
lds
gs
clc
test
fisttpll
lods
clc
lds
movsb
dec
outsl
push
out
jg
pop
push
mov
mov
xchg
jnp
pop
roll
push
sub
nop
inc
out
mov
adc
xchg
jle
sbb
xchg
mov
fisttps
rcrb
add
adc
or
sahf
and
shrl
sub
les
sub
push
insl
cmc
mov
imul
stos
int
sbb
push
hlt
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
hlt
in
cli
popa
insb
ja
jg
sbb
cmpsb
arpl
mov
cmp
add
add
add
dec
pop
std
or
in
in
mov
sub
mov
mov
aam
je
roll
scas
ja
imul
sbb
shr
jb
push
xor
inc
adc
mov
sub
adc
call
cwtl
pop
inc
add
pop
cld
fiaddl
out
icebp
pusha
xchg
shlb
adc
rcrb
rcrl
idivl
dec
fucomi
sbb
cld
mov
inc
sbb
push
mov
jg
xchg
lret
mov
jg
scas
sbb
jbe
mov
inc
leave
loopne
cwtl
mov
push
cmpsl
out
jae
cmc
fistps
mov
and
andl
sbb
bound
add
int3
lcall
mov
push
test
or
cltd
pop
orb
or
mov
jo
ja
outsl
cwtl
lods
lcall
jge
mov
bound
xor
cld
subl
xor
adc
and
mov
and
xor
adc
push
mov
cmpsl
pop
outsl
les
lahf
mov
call
sahf
jmp
rcl
sbb
pop
jns
or
jo
out
or
jbe
sub
rorl
jge
jecxz
push
fwait
inc
aam
into
sub
repnz
dec
mov
cli
push
mov
repnz
cli
push
lret
fmull
dec
gs
pop
cmp
cmp
je
or
ret
jns
add
repnz
dec
cmp
lds
xchg
and
int3
jl
xchg
or
jecxz
cmp
int3
dec
push
jnp
push
jle
pop
inc
adc
cmc
or
lods
mov
clc
pop
out
cli
fldcw
add
test
cmpsl
mov
dec
xchg
clc
mull
and
inc
imulb
mov
push
aad
arpl
rcr
in
mov
xor
je
push
testb
arpl
icebp
mov
xor
or
jmp
push
and
mov
mov
test
xchg
pop
imulb
roll
loopne
lea
bound
jecxz
push
pop
movsb
pop
cmc
data16
and
outsb
addb
hlt
mov
aam
add
movl
pop
je
xchg
int
sbb
sub
scas
ficompl
mov
test
fdivrs
ss
xor
inc
inc
cltd
cmc
insl
adc
fidivl
or
scas
sub
mov
fcoms
pop
xchg
and
imul
loopne
pop
lret
nop
sub
aad
gs
es
fnsave
xchg
push
sbb
pop
inc
out
xorl
loopne
xor
loop
jmp
mov
push
push
lret
test
jp
inc
and
stc
sbbl
enter
cmpsl
inc
clc
in
mov
push
repz
inc
push
push
loope
push
push
dec
pop
xor
insl
outsb
mov
pop
jle
fdivl
cmpsb
mov
sbb
mov
je
mov
pop
inc
cmp
sbb
xor
push
addr16
frstor
ja
add
cwtl
int3
push
shrl
xchg
cmp
daa
add
lret
sub
outsl
inc
jl
jmp
adcl
adc
adc
gs
sti
ret
test
or
nop
rcl
fistl
addl
add
adc
cmpsl
dec
cltd
sti
adc
xor
es
fiadds
gs
inc
push
mov
mov
fwait
mov
add
sub
xchg
lcall
test
leave
lret
es
sbbl
les
lock
cwtl
add
mov
adc
outsl
mov
fwait
or
mov
stos
shl
in
push
stc
js
das
out
or
dec
sub
cmp
pop
pop
aas
or
cmpsb
imul
cmp
bound
sbb
pop
pushf
fucomi
jne
rcl
cmpsb
imul
jae
pop
loopne
xchg
add
loopne
inc
add
cmp
imul
add
or
mov
inc
clc
int3
mov
xor
std
test
inc
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
push
push
mov
sbb
sub
sub
and
xchg
ds
movsb
lods
mov
mull
mov
nop
fmuls
cmp
bound
hlt
inc
jno
scas
cmp
lods
mov
out
or
nop
mov
xor
mov
out
enter
cmp
jge
sub
or
mov
push
jg
cmp
xlat
arpl
into
pop
inc
xor
add
shrd
ret
bound
cli
push
fmuls
cmp
out
into
adc
or
bnd
jmp
fdivrs
popf
decb
insb
adc
flds
das
imul
mov
sub
add
mov
mov
jb
les
int
and
dec
sub
mov
out
inc
jno
test
dec
pop
mov
cltd
push
push
mov
fnstsw
sub
inc
enter
jno
movsl
test
adc
pop
fnsave
or
pop
pusha
adc
jg
lods
fistl
cld
adc
jb
out
and
lock
mov
iret
jnp
je
loope
ret
pmaxsw
out
pop
pop
lahf
in
inc
jne
lods
popf
mov
ss
insl
dec
mov
xchg
xor
push
xchg
stos
cmp
dec
dec
inc
pop
inc
test
adc
lret
cmp
cmp
sti
mov
lock
push
in
add
imul
mov
sub
leave
mov
popf
subb
imul
iret
stc
call
and
cmp
xor
mov
adc
push
inc
lock
mov
div
outsb
pop
loop
cmp
daa
mov
jae
test
xor
xlat
adc
andb
sub
pop
test
jns
jmp
mov
jg
xchg
mov
ja
sahf
mov
mov
mov
xor
sbb
dec
jb
repnz
pop
jge
out
fists
paddq
mov
push
je
fwait
lods
arpl
inc
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
stos
jns
sbb
jns
sbb
sbb
ja
dec
cltd
push
rcrb
push
les
mov
lods
movsl
mov
imul
and
sbb
add
push
sbb
jae
insb
adc
pusha
sub
addr16
imul
xchg
scas
pushf
sub
dec
cli
repz
mov
mov
pop
xchg
aas
push
loopne
mov
jge
and
mov
loope
pop
xchg
inc
aam
popa
lea
cmpsl
loop
push
mov
mov
in
add
inc
or
jns
and
push
ret
jecxz
xchg
lds
mov
adc
push
aaa
push
test
lods
cld
sub
add
xor
jge
jne
mov
sbb
and
stos
es
adc
lea
push
insb
shll
dec
or
and
enter
ret
mov
and
rcl
pop
mov
ljmp
cmpsb
lock
sub
icebp
test
repz
and
cwtl
enter
pop
mov
out
idivb
jne
or
ficoml
jb
imul
js
jb
mov
stc
fiadds
mov
movsb
test
movsl
shrb
cli
mov
loopne
mov
sub
stos
or
push
jb
dec
push
dec
fmul
aam
sub
inc
inc
ret
aam
inc
lds
cli
cmp
iret
pusha
sbb
pusha
jae
and
gs
ljmp
xchg
jo
add
nop
xlat
push
aaa
xchg
enter
xchg
fwait
dec
mov
dec
mov
xchg
sub
shrb
cmpsl
sub
mov
stos
nop
rorl
xor
int
jg
mov
loop
cli
cltd
clc
push
xchg
out
negb
hlt
cmp
fwait
lods
and
movsb
sbb
mov
adc
sub
xchg
fbstp
xchg
ret
jg
mov
test
xchg
add
adc
fistl
lock
ror
xor
pop
pop
lds
cmc
xor
xchg
ja
in
pop
jne
test
test
and
subb
popf
pop
sub
adc
cmp
add
out
js
sub
mov
aam
add
data16
mov
mov
push
addr16
xchg
andb
addb
sbb
jae
iret
insl
inc
aam
je
cmc
mov
in
and
cmpsb
lds
es
dec
mov
je
divl
pop
aam
ljmp
mov
mov
pusha
xchg
dec
movsb
cmpsb
dec
mov
sub
fistpll
cmpsl
ret
xchg
and
push
mov
loopne,pt
popa
imul
xor
subb
add
movsl
rcll
fs
test
gs
in
data16
xlat
popf
mov
mov
je
push
mov
dec
cmpsl
adc
xor
dec
nop
sbb
jno
out
inc
popf
scas
xlat
fcos
scas
dec
cld
push
adc
cmp
push
dec
jle
jbe
shll
outsl
sub
xlat
push
imul
mov
insb
add
add
jne
inc
sbb
pop
clc
push
cmpl
sbb
sbb
es
leave
fisubrs
xor
clc
mov
xchg
imul
inc
cli
popf
popf
movsb
add
sub
cli
mov
dec
cmpsb
and
and
aaa
movsl
cld
clc
hlt
push
ss
je
and
data16
scas
outsb
mov
mov
lahf
sub
and
mov
or
xor
ret
jo
push
pop
ljmp
popf
in
push
xchg
cmp
sbb
movzwl
out
out
adc
aad
sbb
adc
sarl
pop
repz
push
fwait
pop
bound
pusha
test
test
pop
and
clc
sub
insb
add
sti
lahf
aas
pop
ljmp
scas
adc
mov
sti
mov
leave
ds
aas
test
add
aas
mov
ret
xchg
lock
cmp
jae
or
or
xchg
hlt
test
or
je
xor
or
or
adc
ja
pop
mov
sub
fwait
mov
adc
popa
add
inc
pop
out
push
cs
ret
movsl
nop
xor
lock
xchg
fiaddl
aas
lea
or
aad
cmpsl
jbe
das
inc
push
inc
test
cmp
cmpsl
push
cmpsl
rorl
mov
lds
stos
pusha
xor
mov
ljmp
jno
into
fcomps
mov
test
mov
xor
and
sbb
or
leave
std
out
out
cvtps2pd
jmp
adc
iret
jno
jmp
cmc
into
push
xchg
call
pop
ret
in
nop
imul
in
fiaddl
or
push
dec
and
fdivp
pop
stc
cmp
enter
jp
jg
divl
into
imul
clc
add
js
sub
das
add
lcall
into
mov
lea
jg
and
dec
popa
daa
mov
pop
push
pop
out
pop
and
mov
in
cwtl
mov
popa
xorl
inc
cmp
add
jmp
mov
mov
data16
and
ret
popf
mov
cs
test
cwtl
inc
in
xchg
sbb
fiadds
outsb
fwait
and
pop
loope
inc
stos
pop
pusha
mov
stc
mov
mov
loop
les
xchg
inc
insb
cltd
enter
mov
out
pop
mov
jmp
or
filds
rolb
mov
cmpsl
and
cmp
mov
mov
xchg
fldt
mov
movsb
sub
adc
loope
shlb
push
push
sbb
in
cs
iret
or
mov
mov
xor
mov
ljmp
insl
pop
jbe
cmpsl
xchg
lods
imulb
sbb
int
sub
mov
out
shlb
inc
mov
push
data16
lea
xchg
popa
mov
cmp
outsl
out
pop
aam
dec
mov
ljmp
or
cmp
int3
dec
imul
add
dec
xchg
adc
push
shlb
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
xor
dec
movsb
xrelease
imul
and
ja
push
shlb
mov
cmpsb
iret
mov
fs
adc
add
sub
inc
std
lods
mov
mov
adc
movsl
pop
sub
hlt
into
lcall
in
je
out
popf
sbb
jle
push
inc
jns
fwait
std
popa
and
mov
out
adc
and
xchg
idivl
jbe
dec
popa
out
adc
push
mov
or
push
mov
xor
adc
ret
inc
adc
jno
jbe
adc
lock
mov
and
ja
cmpsl
out
and
push
and
cmpsb
je
xor
xor
cltd
push
nop
lods
addl
jae
sub
dec
int
mov
jp
lods
cmc
scas
pushf
test
outsl
das
pop
lds
aam
test
orb
pop
inc
cmp
in
rcr
out
pop
mov
cwtl
jo
adc
sbb
stos
shlb
add
mov
je
push
insl
mov
fdiv
and
jbe
push
popa
inc
outsb
ss
in
lods
dec
cmpsb
xchg
xchg
or
int
orl
inc
mov
push
or
push
lock
movsb
and
shlb
lret
push
pop
sbbl
clc
add
sub
mov
jnp
and
jo
add
daa
rcl
dec
lret
add
fstpl
pop
aas
inc
xchg
mov
mov
sub
insl
lea
mov
adc
fwait
xchg
ljmp
movsl
pop
mov
mov
xchg
fistpll
sbb
xor
ror
loopne
or
xor
loopne
adc
loope
cwtl
mov
sbb
les
jl
fimuls
xor
push
adc
pusha
push
negl
xor
add
jl
lahf
lcall
sysenter
push
jmp
mov
add
mov
or
xor
les
lods
hlt
adc
pop
mov
cltd
or
cmp
div
fs
mov
sbb
icebp
jp
les
xorl
lahf
out
jae
inc
jno
mov
adc
pop
loop
jmp
xchg
outsb
jmp
rcrl
inc
out
jne
inc
out
imul
pop
les
into
mov
mov
sbb
push
cmp
je
mov
inc
cld
inc
in
mov
mov
cmpsl
fbld
aaa
aam
std
sti
test
xchg
xchg
jnp
mov
lods
repz
ja
xor
jno
mov
adc
pusha
cmp
orb
test
push
mov
xorb
sub
pop
pop
jle
lds
fld
mov
inc
outsl
jo
mov
ret
out
inc
inc
jmp
adc
popa
pop
add
fdivrs
popa
sahf
inc
enter
and
aad
xor
lret
mov
pushl
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
mov
dec
daa
ljmp
add
dec
mov
sahf
mov
dec
jge
lods
repnz
push
cmp
into
and
xor
mov
scas
pop
test
pop
aam
add
jae
mov
and
jo
xchg
lods
sbbl
mov
test
movb
and
xor
adc
int
xor
xchg
push
stos
cmpsb
adc
push
add
ja
mov
addl
or
jmp
mov
mov
xor
out
push
push
ffreep
sbb
test
daa
inc
jae
lret
scas
mov
add
inc
lea
dec
and
dec
mov
xchg
dec
and
lret
pop
scas
hlt
dec
mov
adc
jle
adc
imul
jb
mov
jmp
push
hlt
xchg
popa
stc
fists
jge
dec
imul
xor
pop
enter
cs
cmp
ljmp
in
addb
in
sub
pop
and
enter
cmp
scas
arpl
fisubs
push
or
lret
dec
rcrl
lret
pop
or
imul
aam
dec
or
jae
adc
aam
jmp
into
jge
jb
jmp
stos
shrb
mov
inc
repnz
push
mov
fsubs
cmp
loope
in
cmpxchg
cmpsl
adc
or
shl
jl
test
sbb
sahf
xor
test
pop
dec
rcrb
loopne
roll
mov
fiadds
sbb
adc
test
push
sbb
insl
sti
sub
insl
lcall
push
in
jmp
mov
test
mov
dec
adc
xor
ss
dec
pop
loope
mov
or
mov
push
push
mov
andb
mov
cmp
ficomps
es
pop
pop
xor
lock
pusha
mov
jge
fldt
push
movsb
jns
lcall
outsb
pop
mov
pop
mov
push
cmp
lods
repnz
add
dec
hlt
outsl
aad
push
cmp
inc
mov
movq
mov
dec
cmp
dec
sbb
push
loop,pt
insb
out
jo
mov
call
popa
sbb
inc
lods
xchg
fsts
pop
adc
mov
lods
or
lods
stc
jmp
mov
lret
fsts
inc
out
daa
out
outsb
and
scas
xlat
insl
rcr
adc
bswap
push
mov
mov
xor
mov
inc
jb
ss
jg
out
inc
rcl
mov
sbb
push
cld
sub
or
outsb
pusha
push
shll
jb
lods
sahf
call
je
pop
dec
scas
into
dec
inc
xchg
cmp
lds
aam
sbb
addl
shll
data16
scas
jne
out
pushf
pop
enter
inc
xor
mov
rorb
add
add
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
pop
lahf
jo
insb
sbb
jns
sbb
out
xor
push
aam
fcoml
dec
mov
cmpsb
mov
insb
loopne
mov
fcoml
xchg
dec
ret
fucomip
jmp
lock
cmpsb
inc
sti
stos
cmp
jg
adc
push
xchg
pop
cmp
sbb
cwtl
mov
mov
outsb
dec
ror
fcomp
pop
mov
dec
xor
jnp
and
cmc
add
imul
jp
shrb
sbb
dec
jnp
divl
fbld
sub
fstl
inc
test
call
mov
and
fs
les
adc
scas
lahf
shll
add
insb
or
ja
cmc
xchg
cmpsl
popl
and
inc
pop
or
gs
and
mov
and
or
and
push
pop
out
xchg
pop
shlb
ret
cli
mov
mov
cmp
std
iret
and
lea
pop
sub
xor
repnz
scas
mov
cmc
outsl
fstps
rorl
icebp
pusha
cli
jge
repz
adc
imul
jne
cmp
add
jbe
add
push
data16
cltd
jbe
mov
movsb
inc
aaa
in
outsb
push
cmp
cli
repz
mov
sbb
sub
xchg
shrl
fistpl
xchg
addl
jbe
cmc
mov
mov
aad
rcl
and
mov
pop
cmpsl
jns
pop
xchg
sbb
cmp
daa
sbb
mov
pop
ffree
jecxz
or
or
push
pop
mov
js
in
and
dec
push
sub
aas
addr16
xchg
inc
jo
mov
add
pop
pop
sarl
jb
daa
scas
dec
test
xchg
add
mov
hlt
add
mov
loop
popf
ja
aaa
pop
js
mov
mulb
ret
pusha
cmp
test
and
jle
mov
fldl
mov
inc
sub
bound
stos
outsl
jbe
adc
lahf
lret
sub
and
loop
sti
jno
repz
lea
xor
dec
lret
sbb
out
inc
scas
jnp
out
xchg
test
pop
std
fs
lcall
mov
addr16
and
xorb
sub
or
xchg
mov
mov
stc
xlat
xchg
pop
push
call
sbb
sbb
add
nop
inc
insb
sub
mov
mov
mov
cmp
pop
pop
cmp
pop
lret
gs
pop
movsl
dec
sub
es
sbb
cltd
sti
pop
mulb
hlt
pop
repnz
mov
inc
and
pop
jl
adc
adc
adc
int3
jg
adc
jnp
lods
push
adc
insb
mov
push
mov
push
sub
mov
dec
popf
push
jg
adc
imul
inc
arpl
and
add
rclb
add
out
or
scas
pop
nop
dec
sub
mov
leave
inc
dec
jmp
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
push
cmpsb
jnp
pop
data16
jns
sbb
leave
and
adc
cmp
push
dec
imul
mov
mov
test
mov
call
out
das
mov
pop
and
mov
jle
cmpsb
mov
in
mov
cltd
ljmp
cmp
sbb
pop
push
jns
adc
add
sbb
jmp
data16
pop
pop
arpl
pop
mov
arpl
xchg
int
into
xchg
mov
loope
cmpsl
add
outsb
aaa
push
cli
cld
in
cld
mov
fwait
fs
daa
hlt
test
test
or
cmp
dec
in
xor
stos
mov
in
push
je
pop
pop
inc
lret
lahf
mov
cmp
sbb
loopne
stos
testl
cmp
or
and
pusha
outsb
sbb
das
in
xor
pop
movsb
bound
iret
add
mov
pop
orb
sbb
or
fwait
xchg
les
mov
xchg
stos
or
sbb
xlat
mov
loopne
call
xor
push
pop
rorl
jecxz
or
cmpsl
clc
sti
pop
pushf
sub
repnz
nop
int
mov
sub
cmp
loope
ds
pop
xor
dec
mov
xor
arpl
inc
sbb
xchg
inc
ret
mov
push
push
mov
scas
arpl
sti
cmp
push
rcl
dec
sti
xor
pop
mov
jbe
das
loop
fmull
cmp
push
add
push
mov
add
adc
xor
jb
int
sti
and
arpl
or
pop
cli
or
jl
lret
jp
add
fiaddl
mov
pop
cs
ret
sbb
out
call
dec
int
rolb
dec
xchg
nop
pop
and
pop
stc
scas
lock
xor
and
mov
push
idivl
arpl
insb
loope
xchg
xor
nop
test
jle
add
rcll
push
add
cmpsl
sub
ja
push
mov
test
pusha
pop
sti
lahf
cmc
stos
call
mov
jge
mov
xor
imul
inc
push
inc
imul
call
jmp
cmp
mov
push
push
xchg
dec
lds
loope
sbb
sti
lret
ja
out
in
loopne
mov
or
movsb
xor
les
adc
outsl
jg
sub
cmp
rcrb
mov
sbb
sub
mov
fisttps
cmp
xor
push
popf
push
dec
xor
xchg
outsl
or
mov
mov
and
inc
cmp
iret
sahf
test
xor
repnz
mov
por
ret
sbb
adc
dec
iret
xor
inc
inc
jp
pushf
inc
xchg
xor
shrb
pop
adc
mov
jecxz
fsin
insb
dec
or
imul
xlat
pop
xlat
aas
mov
stos
cmpb
out
mov
sbb
cmp
push
mov
cmp
inc
jle
inc
cli
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
sub
sbb
jns
sbb
cmpl
incb
std
and
incb
jo
scas
xchg
jmp
or
xlat
pop
adc
adc
push
and
orb
das
pushl
out
sti
in
xchg
je
div
xor
in
xor
cltd
dec
jecxz
lods
jo
add
icebp
push
push
not
and
iret
std
dec
push
insl
push
push
aam
fwait
jb
loope
dec
mov
inc
dec
and
jo
adc
out
mov
jb
pop
mov
inc
xor
les
outsl
in
or
and
mov
pop
clc
leave
push
stc
add
mov
fstpl
xor
jge
dec
cmp
divb
cld
adc
sbb
popa
rol
dec
mov
int3
pop
adc
pop
mov
js
mov
inc
les
and
xchg
sub
test
xlat
push
mov
lock
add
lea
stos
outsb
arpl
inc
push
iret
loope
std
mul
test
inc
mov
cmp
icebp
ds
aaa
jge
mov
fwait
lret
pop
jnp
cltd
sbb
cmpsl
sub
dec
cmpsb
sub
cmpsl
aaa
sbb
xor
xchg
sub
insb
flds
mov
int3
movsl
int3
mov
bound
fldt
bound
pop
lock
cltd
jecxz
inc
and
popa
lds
mov
sub
and
mov
sbbl
repz
dec
ds
je
xor
int3
jo
adc
jecxz
inc
rcrl
aam
xorb
adc
out
or
notl
lea
stos
scas
pop
jl
sahf
insl
pop
pop
int3
xor
xchg
sbb
jb
inc
subl
bound
sti
inc
adc
loopne
cltd
cli
lcall
cmp
jmp
pop
outsl
fisubrs
jmp
xor
jmp
dec
lock
adc
sarb
aas
sub
sbb
sub
insl
ljmp
out
cmp
lahf
pop
sub
fs
push
stos
xchg
jl
and
mov
dec
int
out
jmp
ret
in
pop
pop
or
mov
mov
xchg
fisttps
mov
fs
mov
stos
daa
xchg
ret
sub
in
push
out
dec
and
insb
mov
pop
push
pop
repnz
mov
add
cmpsl
ja
or
aaa
lahf
lock
pop
adcl
mov
jl
pushf
std
or
push
aaa
call
inc
sub
sbb
mov
mov
jno
aam
jecxz
jnp
push
xchg
mov
or
mov
cwtl
add
lcall
test
hlt
mov
cmc
gs
fdivrs
out
les
dec
cmp
adc
icebp
jp
cwtl
jecxz
pop
jle
cltd
clc
mov
sbb
sahf
jno
mov
clc
pop
in
outsl
pop
in
setg
sub
dec
addb
loop
adc
mov
xchg
nop
xchg
sub
subb
pushf
fdivr
mov
repz
push
enter
add
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
ds
stos
sbb
sbb
sbb
leave
pop
daa
fldcw
or
push
repz
adc
loopne
imul
xchg
push
xchg
mov
scas
clc
sub
push
cmp
sti
mov
stos
push
mov
mov
mov
inc
jno
insb
mov
add
outsl
fidivrs
fwait
in
inc
sub
jle
xor
xlat
lahf
adc
mov
mov
jmp
test
icebp
dec
into
ja
jae
fwait
pop
cmpsb
lcall
xor
mov
cmpsb
sbb
movsb
jge
adc
adc
or
scas
iret
mov
sbb
daa
imul
sbb
adc
adc
lea
cmpsb
jne
enter
scas
mov
xor
and
dec
pop
dec
in
lcall
lea
loope
pop
in
add
outsl
lea
xor
cmpsb
leave
adc
adc
fidivrs
aaa
sub
xchg
icebp
stos
adc
andl
imul
push
xchg
push
pop
cwtl
iret
pusha
xor
jle
mov
push
mov
pop
mov
pop
inc
imul
lcall
pop
cmc
push
pop
out
cmpsb
je
cmp
sbb
adc
dec
and
nop
cmp
push
cmp
enter
pop
scas
inc
out
xor
cmpsl
repnz
mov
je
out
mov
into
fisubl
jno
xchg
pop
and
xrelease
fucompp
jecxz
frstor
stos
xor
js
dec
fdiv
icebp
xchg
push
aad
out
inc
xlat
xchg
sub
test
test
fsubr
lcall
jle
adc
adc
pop
je
and
dec
push
data16
std
pop
inc
sahf
pop
mov
jno
sarb
sbb
cmp
in
lahf
loop
xchg
sarb
mov
enter
mov
and
iret
sub
fnsave
or
aam
clc
add
outsl
popf
jp
mov
xchg
fs
add
push
iret
roll
mov
xor
test
stos
in
mov
sub
add
xor
clc
into
cmp
fidivrl
scas
data16
testl
loop
xchg
push
add
test
aad
sbb
xchg
cmp
call
pop
jle
adc
mov
mov
rolb
mov
addr16
and
lahf
xchg
dec
fwait
push
jo
mov
push
dec
sbb
push
and
xchg
sbb
push
movsb
outsl
popa
int3
lret
mov
sub
sbb
addl
mov
popf
adcb
outsb
mov
dec
sub
sbb
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
mov
sbb
adc
sbb
sub
pop
fdiv
lahf
jp
and
scas
mov
pop
mov
sbb
mov
cmpsl
loop
loope
dec
test
pop
ja
adc
push
jp
or
mov
push
sub
pop
push
int3
fld
dec
push
lret
lahf
xchg
test
add
mov
out
aas
jb
lds
mov
ja
mov
pop
divl
mov
loop
fucom
scas
xlat
and
jo
inc
repnz
jo
pop
add
pop
fldcw
cmp
cmp
push
pop
jne
into
int
dec
imul
push
inc
mov
sbb
cltd
or
pop
fldenv
repz
mov
sub
xchg
pop
xor
test
dec
xchg
loopne
and
mov
and
ds
je
lods
std
ds
cmpsb
adcl
aas
cld
adc
add
sub
inc
ja
arpl
pop
outsl
clc
test
int
cmc
mov
push
xchg
inc
daa
mov
jecxz
jb
ljmp
mov
mov
mov
cmc
fs
sbbb
sub
xchg
loope
iret
adc
mov
dec
pop
mov
int
push
rcll
jns
out
mov
clc
ss
jae
add
mov
mov
mov
or
mov
aaa
mov
sahf
nop
fwait
or
cmp
lea
lahf
nop
mov
pop
jecxz
mov
push
hlt
ja
mov
pop
dec
iret
lcall
jmp
es
out
push
fidivrl
adc
icebp
mov
add
fucomi
add
or
iret
xchg
lcall
movsl
or
addr16
into
cmc
dec
mov
and
mov
dec
aaa
push
jns
clc
push
mov
aas
xor
add
loope
pop
dec
dec
outsb
push
dec
lods
repnz
pop
aas
mov
fwait
push
out
jns
test
roll
pop
fstl
jmp
cltd
xor
mov
out
popf
mov
cltd
nop
jge
push
add
iret
add
xor
lods
je
lret
mov
add
cli
stos
pop
scas
pop
out
xchg
jge
jns
in
push
xor
outsb
dec
dec
inc
rorb
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
data16
dec
sbb
scas
adc
sbb
es
stc
out
add
add
test
dec
push
mov
xlat
aad
pop
addr16
loope
insl
adc
addr16
ret
pmaxub
push
push
out
lock
or
lcall
sbb
les
movsl
inc
stos
std
or
or
addr16
adc
adc
cmp
add
mov
add
lret
xor
out
mull
pop
popa
loopne
xchg
and
sub
bound
lods
cmp
insb
add
add
xchg
pop
inc
stos
out
in
loope
push
lahf
push
xchg
js
sahf
dec
lea
subl
push
xchg
fmuls
add
and
mov
pop
xchg
jp
mov
and
cmp
mov
mov
push
dec
inc
lods
xchg
add
ret
jmp
js
lcall
out
aaa
into
mov
jnp
lea
movsl
test
daa
ss
jg
pop
and
mov
daa
xchg
ficoml
cmpsl
mov
out
xor
leave
or
jae
into
sub
cmp
cmp
loope
pmulhw
cltd
movsb
mov
cld
mov
rol
push
mov
or
fcompl
or
xlat
data16
mov
mov
mov
inc
add
jg
push
xor
jl
or
mov
and
push
xor
insl
es
test
mov
repnz
xchg
xchg
xor
mov
pop
adc
add
pushf
jae
and
push
js
fisubrl
mov
jp
lds
xor
inc
pusha
adc
xor
xchg
xor
adc
pop
lea
add
mov
imul
out
pop
hlt
rcrb
adc
std
cld
dec
fbld
dec
add
test
adc
pop
inc
mov
push
insb
shlb
mov
pop
mov
lods
dec
rcrl
out
mov
scas
pop
push
aam
ljmp
mov
xchg
cmp
invd
sub
daa
daa
fwait
repnz
adc
and
xor
arpl
jae
xchg
sub
and
push
and
mov
clc
mov
jle
add
push
inc
mov
cltd
in
out
sbbl
xlat
js
xchg
sub
sbb
testb
fisubs
dec
xor
ja
imul
pop
jae
xor
dec
push
lret
xor
ficoml
fiadds
shrl
into
int
mov
pop
in
aas
ljmp
push
lret
cmp
fldenv
movsb
dec
dec
popf
sbb
push
jns
and
add
add
xchg
decl
xor
xchg
or
sbb
inc
pop
aas
das
inc
or
sarb
mov
cwtl
fildl
inc
je
cs
stc
fadds
scas
mov
loope
ret
push
push
out
xor
jb
shl
loopne
insl
cmpsb
addb
mov
add
addr16
xchg
jnp
xchg
inc
mov
adc
jnp
rol
cmp
mov
xchg
sbb
mov
xlat
cmpsl
mov
fistpll
iret
filds
xchg
push
adc
nop
mov
push
push
cld
das
jge
data16
jl
sub
pushf
push
stos
xchg
ffree
fcomp
loop
fcoml
adc
push
jge
push
dec
cmp
mov
pop
push
mov
sub
mov
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
jmp
mov
inc
sbb
scas
adc
sbb
xchg
lods
das
adc
cltd
dec
sahf
xchg
mov
sbb
lods
call
push
xchg
mul
insl
js
lret
mov
out
les
call
or
jp
adc
push
out
loopne
jb
mov
and
mov
push
inc
xchg
mov
and
lods
xor
int3
mov
push
int3
addr16
and
ficoml
out
mov
aas
jecxz
rcl
enter
addb
in
sub
cmc
das
ljmp
xchg
and
sbb
cltd
loopne
sti
push
inc
cli
mov
jno
sub
cmpsb
pop
mov
adc
jp
pop
cmpsb
fs
test
mov
into
jmp
dec
lahf
clc
push
sbb
push
mov
test
fistpll
pop
push
loop
lods
shlb
adc
jge
mov
fisttps
cmpsl
dec
jae
add
sbb
ffree
test
or
lock
dec
stos
mov
fisubrl
push
popf
sbb
loop
orl
xor
jo
iret
ja
inc
mov
stos
lahf
xor
iret
sbb
int
push
dec
push
jle
in
xor
pop
mov
cmpsl
xchg
mov
movsb
mov
adc
lock
pop
mov
jge
rcr
leave
sbbl
out
push
das
faddl
imul
cmp
mov
sbb
out
push
leave
mov
jg
insl
and
mov
ja
arpl
cltd
notl
jae
pop
into
xor
add
mov
cmp
dec
pop
mov
jmp
lahf
cmc
dec
xor
adc
fdivrs
cltd
popl
add
sbb
mov
mov
andl
adcl
pop
sub
sbb
cmp
movsb
cmpsl
lds
push
stos
rclb
inc
movsb
es
cmp
fs
jmp
pop
mov
imul
dec
fisubs
popf
mov
shlb
push
enter
es
inc
ret
stos
iret
xabort
xor
jge
push
in
push
scas
mov
sarb
sbb
ret
cmp
into
pop
fistl
adc
xor
clc
dec
loope
jg
in
mov
aam
mov
test
outsb
push
xchg
test
lds
mov
or
in
daa
cmpsb
jl
or
scas
outsl
mov
and
xchg
and
in
adc
pop
add
aaa
mov
mov
call
and
inc
ja
scas
sub
pop
pop
and
or
mov
mov
icebp
mov
lds
cmp
bound
cs
arpl
fstps
adc
push
leave
repz
mov
into
iret
lods
sub
fnstcw
mov
cmp
and
lock
fs
cmp
shll
js
mov
mov
test
mov
lcall
jge
xor
cmp
pop
jmp
xorl
xchg
xor
stos
push
fcomps
ljmp
shl
mov
fadd
pop
inc
idivb
out
push
cltd
out
loop
jne,pn
adc
sub
mov
adc
clc
fistpl
cli
repnz
xor
bound
inc
shlb
cli
and
and
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
js
mov
notb
sbb
cmpl
cld
lret
cmc
cmpsl
sbb
jb
gs
mov
inc
push
pop
lock
pusha
xlat
push
arpl
dec
mov
ficomps
xchg
shufps
pop
dec
xchg
mov
insb
xor
ss
mov
popa
mov
pop
xlat
mov
imul
dec
push
pop
shrl
mov
cmpsl
sbb
xor
test
arpl
sbbb
adcb
jp
sbb
pop
in
test
daa
sbb
sbb
addl
sub
push
or
mov
cmp
add
pop
inc
test
hlt
xor
int3
notl
or
leave
adcl
mov
data16
or
cltd
adc
cmc
daa
push
lretw
mov
cmpsl
xor
pop
mov
xchg
aas
fcom
xchg
ljmp
mov
cli
jecxz
xchg
xchg
push
mov
ja
shrb
push
add
repnz
fdivl
jno
push
arpl
xchg
jl
sbb
arpl
in
movsb
or
aas
or
sub
scas
sub
mov
pop
xchg
mov
inc
inc
in
stos
xor
frstor
cmp
scas
mov
jne
rolb
xor
rolb
adc
bound
jne
and
jns
jmp
or
jmp
mov
push
sbb
in
fs
stc
or
cwtl
daa
mov
mov
and
cmp
outsb
fldenv
mov
lods
je
ja
mov
test
cmp
lret
dec
fmull
cli
aam
push
addl
dec
mov
movsl
lods
cmp
jae
lock
sub
lahf
test
push
inc
inc
or
mov
sbb
dec
jge
test
popf
stos
std
mov
pop
test
mov
xchg
sub
mov
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
imul
in
fists
add
jno
rolb
add
fildll
in
pop
dec
xor
mov
and
xchg
ljmp
cld
jp
sub
and
add
xchg
push
mov
loop
adc
cmp
outsl
xor
enter
dec
xor
aas
xor
inc
ret
mov
out
fimull
jg
jae
paddb
bound
inc
cmp
je
or
and
hlt
test
push
loopne
pop
and
cltd
dec
pop
dec
test
dec
add
jo
jmp
push
push
mov
lret
in
cmpsl
inc
push
cmp
pop
push
js
cwtl
sub
lea
cld
xor
out
rcrl
ss
lods
in
fs
or
imul
mov
sbb
add
ficoml
inc
cld
aam
push
and
sub
test
mov
int3
in
bound
xor
inc
add
cmpsb
lret
dec
jns
in
push
stos
sbb
sub
adc
jecxz
xor
mov
cmp
cltd
and
fldcw
pop
ss
stos
fcompl
mov
cli
mov
idiv
mov
icebp
pop
hlt
adc
ljmp
arpl
popf
test
ds
test
pop
xor
sbb
mov
xor
sub
mov
pushf
stc
mov
push
adc
cmp
negl
call
std
js
decb
push
push
dec
inc
jl
stc
push
inc
lock
iret
cltd
ja
shlb
jl
adc
cmp
mov
jle
outsl
xor
lcall
sub
sub
insb
or
lock
pop
popf
loopne
jge
insb
or
xor
cmc
insb
cmpsb
test
shrb
and
inc
into
sbb
in
lret
ljmp
sti
xchg
les
add
cwtl
fucomp
rorb
adc
xor
loop
aam
sub
pop
xchg
lds
cmpsb
loop
aam
divb
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
stc
adc
mov
notb
sbb
popf
clc
loopne
stc
imul
xor
fisubs
pop
das
lahf
sahf
out
mov
push
adc
popa
test
int
repnz
cwtl
lea
pop
pop
inc
sbb
inc
mov
jno
cmp
push
test
cmp
cltd
push
sbb
fdivp
jnp
and
dec
in
mov
fidivrl
sub
test
pusha
mov
cli
xchg
sbb
jo
xchg
sahf
popf
xchg
insl
sbb
mov
sub
mov
sub
cwtl
lds
aad
rcrb
mull
cwtl
sbb
dec
aad
push
fisubl
arpl
in
daa
dec
notb
or
je
lcall
daa
fs
sbb
xor
add
add
popa
mov
lret
jp
dec
leave
xchg
jle
aam
pop
and
adc
mov
mov
jecxz
fdivs
dec
mov
xor
das
add
jne
fstpt
or
clc
xor
push
xor
sti
sbb
fldl
sub
lret
sbb
sub
sahf
or
movl
pop
shlb
cmp
mov
lret
pop
xchg
fs
int3
xor
sbb
movsb
inc
mov
jp
xchg
das
popa
daa
add
cmp
into
fisubs
cmp
aad
pop
fsubs
mov
mov
dec
cmp
cmp
stos
push
popa
out
int3
mov
mov
add
jbe
add
cli
mov
adc
adc
cmp
imul
or
stos
int3
mov
aam
lahf
inc
ljmp
adc
mull
rolb
sub
test
push
cmp
and
push
pop
scas
sbb
xchg
xor
and
shll
fucom
incl
aam
cmp
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
enter
push
mov
clc
mov
xor
mov
out
pop
or
jno
push
and
ficoml
dec
inc
sbb
aad
fsubrp
arpl
dec
adc
loopne
pop
pop
jecxz
lods
or
mov
cmp
dec
mov
xchg
rcrb
mov
jp
and
dec
fsubrs
cmp
ret
sbb
pushf
push
out
out
int
xchg
mov
cmp
hlt
lds
enter
sub
xlat
out
test
adc
xchg
lock
cmp
pop
aas
orl
inc
jb
movsb
fwait
in
mov
mov
call
outsb
imul
xchg
ljmp
inc
mov
xchg
push
pop
in
dec
xchg
mov
mov
es
fs
dec
mov
popa
mov
ljmp
flds
hlt
data16
cmp
inc
notb
jb
xchg
mov
add
adc
xor
or
xlat
jb
int
inc
pop
jo
test
leave
hlt
roll
stos
mov
and
pop
xor
mov
out
push
repz
lods
fldenv
mov
shl
dec
fstl
insb
sbb
lock
push
lret
lret
sub
inc
std
scas
jle
subb
lock
jmp
xor
cs
stos
push
pop
lcall
mov
andl
jae
pop
insb
push
pop
push
imul
iret
jns
jecxz
push
jle
loop
lret
jae
in
lahf
lret
dec
dec
adc
or
mov
je
outsb
fimull
fsubl
divl
dec
lods
mov
push
ret
dec
fistpll
ret
clc
cmp
ds
push
xchg
in
aas
sbb
cwtl
lcall
int
mov
dec
dec
xchg
ficoml
sahf
or
pop
pop
lds
cmp
mul
pop
js
imul
testl
add
adc
into
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
dec
insl
clc
icebp
add
mov
sub
sub
inc
into
dec
fisubs
ss
ljmp
and
inc
cmp
shrb
daa
mov
ret
sub
lcall
mov
adc
stc
jecxz
pop
push
and
rorb
jo
cmpsl
add
mov
std
cwtl
mov
rcrl
pop
pop
cmpsb
fidivl
and
pop
push
or
mov
fwait
sbb
and
in
mov
push
sbb
push
sar
loopne
fildl
lods
mov
jbe
add
mov
xchg
add
inc
das
cmpsb
in
mov
pop
gs
lahf
dec
inc
jle
lock
mov
dec
aas
jle
jmp
xchg
xchg
xor
insb
add
push
or
mov
int3
shlb
jae
into
sub
sbb
sub
mov
stos
add
dec
jmp
out
mov
loopne
cmpsb
imul
inc
sub
idivb
ret
shlb
enter
push
adc
add
push
and
mov
cs
cmpsb
xchg
cld
cs
mov
stos
mov
and
sub
popa
loopne
push
es
fnstenv
jb
out
ds
mov
cltd
adc
in
mov
or
dec
mov
int
mov
ret
repz
mov
stc
dec
rcrb
dec
sarl
jnp
icebp
push
test
and
mov
js
mov
outsl
push
loope
movb
and
enter
xchg
jecxz
jns
shll
pop
xchg
repnz
sti
fcoms
ret
and
xor
outsb
sbb
inc
dec
add
and
inc
cmp
mov
lods
mov
mov
xor
scas
insb
arpl
pop
xor
mov
jb
jae
outsl
cmc
rorl
inc
adc
add
add
and
dec
mov
push
out
sahf
fucompp
stos
ljmp
sbb
notb
sbb
push
sub
adc
xor
les
pop
in
jecxz
push
cwtl
inc
mov
mov
leave
pop
and
sbb
mov
stos
mov
shr
cwtl
testb
test
inc
mov
push
xor
ljmp
cwtl
lret
ror
and
jbe
test
sub
mov
fistps
mov
inc
pop
xor
jne
mov
mov
shr
sub
iret
jbe
inc
jb
icebp
jle
stos
inc
loope
mov
cmpb
mov
lahf
fcmovnbe
jne
mov
cmp
push
sub
pop
imul
cmp
jne
inc
ret
orl
push
cmp
hlt
inc
mov
inc
mov
pop
loopne
fildl
jg
inc
and
sub
xor
faddp
mov
push
xchg
sbb
scas
sbb
mov
ret
leave
mov
sarl
loop
pop
push
or
lahf
das
ss
roll
arpl
lds
lods
mov
decb
pop
pop
arpl
adc
rcll
loope
jecxz
push
push
mov
inc
sbb
popa
mov
outsb
fs
orl
shlb
and
mov
xlat
dec
ret
in
jno
xorl
sub
inc
cli
call
dec
dec
pop
popa
mov
icebp
ja
popa
cmp
fcomp
test
leave
test
rcrb
ljmp
inc
xor
cli
mov
outsb
add
sti
ficompl
cs
pop
lea
fwait
dec
bound
add
mov
ret
into
sbb
cmp
std
scas
jb
icebp
pop
popa
nop
ret
ss
hlt
jns
and
loop
aam
mov
pop
add
into
sbbl
stc
or
add
dec
mov
out
fldcw
xchg
or
shl
adc
mov
inc
and
and
cli
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
popf
sbb
andl
pop
ljmp
mov
mov
pop
mov
pop
xor
insl
repnz
ret
cltd
scas
push
add
loope
sub
test
ja
ljmp
cmp
and
paddw
cmp
ljmp
mov
and
inc
cli
sysret
call
repz
sbb
out
push
lea
aas
jo
push
push
lods
pop
inc
jns
cmp
mov
ja
aas
and
outsb
add
rcl
pop
or
and
dec
xchg
mov
aaa
mov
movsl
inc
mov
pop
adc
addr16
sbb
cmp
lock
adc
mov
and
jecxz
sub
cmp
cmp
pop
mov
pop
stos
mov
mov
sub
insb
and
add
orb
cli
mov
xchg
nop
gs
cmp
sub
mov
shl
call
mov
sub
stc
lcall
push
mov
mov
stos
jns
jecxz
and
push
and
stc
pop
cmp
xchg
fwait
ljmp
mov
sbbb
or
cltd
xchg
add
out
out
jecxz
pushl
clc
cs
cli
pop
outsb
daa
inc
lds
push
xor
repnz
push
cltd
sub
push
scas
js
into
ret
sbb
jne
daa
sub
inc
lahf
xchg
pop
in
xor
imul
ftst
jg
dec
shll
push
inc
pop
arpl
call
ds
xchg
in
test
ret
xor
mov
push
and
jae
test
dec
mov
inc
sbb
testl
mov
dec
dec
jno
test
clc
mov
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
int3
ja
cmp
xor
add
mov
sub
cmp
or
mov
scas
fwait
sbb
xchg
fcoml
push
jbe
jne
enter
mov
xor
stos
ss
ja
jg,pn
mov
es
sbb
sub
mov
mov
loop
mov
call
mov
pop
lods
cmp
sbb
or
cld
pop
stos
xchg
lahf
and
cmp
mov
faddp
aaa
pop
mov
mov
out
jg
sub
lock
out
push
pop
pop
sub
adc
push
stc
push
jge
scas
and
push
call
pop
mov
adc
mov
dec
push
xor
sub
pusha
je
add
inc
leave
shr
cmpsb
or
adc
mov
add
in
rcl
pop
aad
xor
inc
cmp
or
sarb
out
pop
pushf
fisubl
roll
push
sarb
es
in
fimull
faddl
cld
adc
mov
fildl
int
mov
clc
lods
testb
cmp
es
xor
lahf
push
pop
adc
sub
into
push
fs
mov
inc
scas
push
add
add
sbb
xchg
sub
mov
sub
mov
popf
mov
xchg
cmp
es
push
aam
movsl
and
in
clc
or
faddl
das
sbb
repnz
loope
jae
xchg
push
fimull
sti
cmp
scas
mov
daa
std
out
push
fisttpll
mov
dec
push
mov
mov
adc
cmp
dec
js,pn
mov
mov
pushf
push
icebp
ja
out
dec
aaa
mov
jle
shrb
xchg
jae
cmp
sub
cmpsl
jp
in
mov
pop
add
out
divl
jle
lods
mov
out
mov
aas
mov
push
or
adc
test
decb
fcmovbe
test
jle
push
mov
cmp
or
enter
and
stc
jbe
sbb
lods
cltd
jno
fcoml
push
bound
testl
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
cmp
sbb
pop
adc
sbb
iret
jnp
fistpll
stos
cmp
pop
push
fs
mov
pop
adc
es
inc
divb
mov
out
mov
pop
sbb
xchg
fiadds
in
ror
xor
sarb
es
pop
adc
fldl2t
or
push
inc
sub
cmp
fsubrl
mov
or
js
dec
jo
lahf
jge
cs
cmp
pusha
add
clc
mov
insl
aaa
mov
loop
nop
bound
sbb
xchg
pop
xor
or
cmp
cmp
hlt
add
and
imul
imul
mov
xchg
rcll
fwait
inc
add
roll
sbb
popa
in
or
insb
jae
les
mov
sub
sahf
sahf
dec
push
lret
cli
call
mov
loope
push
add
daa
pushl
aaa
jle
adc
push
adc
out
dec
jb
inc
pop
mov
mov
add
pop
mov
dec
xchg
lcall
xor
fisubs
subl
lret
shl
ret
adc
mov
shll
mov
shl
cmp
jo
xor
insl
test
xchg
push
mov
out
jle
jns
mov
cli
ja
dec
sub
dec
sbb
out
pop
ret
std
das
xchg
xchg
mov
adc
xchg
aam
loopew
popa
cmp
adc
loopne
imul
lcall
sbb
mov
ret
dec
out
add
inc
imul
lret
push
jae
add
inc
pop
stc
mov
mov
cs
stos
ljmp
lret
imul
out
push
inc
mov
mov
cld
mov
pop
dec
jae
pop
clc
cmp
jle
inc
lret
mov
and
lods
data16
jp
jnp
cmc
orl
xchg
jno
es
cmc
xchg
std
and
cmc
dec
cmpsl
repz
and
jecxz
outsl
push
sbb
nop
xor
sub
xor
aaa
mov
xchg
mov
sahf
pop
push
xchg
fdivs
sbb
fildll
jecxz
lds
sub
xor
xchg
mov
push
lcall
cmpsl
pusha
or
push
jl
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
cwtl
clc
push
outsb
addr16
lods
cmp
popa
call
loopne
pushf
fisttpll
or
cmpsl
divb
mov
cs
rolb
lret
fldl
les
fisubl
mov
lods
out
clc
fld
and
shr
shll
lret
div
pop
pop
js
cmpb
ds
add
xchg
xlat
mov
add
jne
js
cli
out
mov
cmp
arpl
sub
test
mov
lods
push
and
test
int
nop
andb
push
cmp
adc
push
arpl
xchg
lret
xchg
xlat
cs
outsl
sub
stos
dec
push
fistpll
mov
insl
cmp
mov
adc
pop
or
push
mov
pop
sbb
mov
repnz
cli
sub
in
and
sbb
and
mov
push
sbb
stos
fxch
je
icebp
adc
dec
dec
cli
sub
push
mov
arpl
jns
mov
out
add
push
ret
ja
loopne
mov
push
pop
daa
sbb
xchg
pop
adc
xor
xor
and
sahf
sub
mov
int3
add
cmc
push
jg
mov
push
push
repz
bound
jg
add
xor
jp
mov
cmpb
dec
xorl
push
cld
nop
add
push
mov
cmc
dec
cmpb
mov
pusha
setle
mov
rorl
mov
and
repz
mov
mov
popa
pop
adc
icebp
jne
push
mov
push
and
int
stc
jae
adc
es
cmc
mov
jno
loope
dec
in
call
inc
xchg
popa
adc
add
pushf
xor
jle
mov
into
fsubr
lahf
das
aad
jb
not
push
and
loopne
sti
dec
aam
inc
or
gs
and
jle
js
dec
push
pop
lds
lcall
lea
jle
hlt
push
mov
mov
fadds
jle
aad
add
outsb
das
sar
push
flds
bound
mov
testl
dec
lods
mov
ret
mov
adcl
xor
add
pop
test
and
add
pushf
mov
cltd
pop
jns
shr
test
popa
or
aad
jp
aad
xchg
xchg
add
jno
lahf
mov
sub
testb
out
psubsw
mov
pop
iret
popa
dec
pop
jp
mov
sbb
jo
data16
push
xor
sub
add
add
adc
ljmp
and
pusha
call
mov
movsb
sbb
mov
shll
ljmp
jecxz
loope
gs
bound
andb
inc
fildll
mov
ljmp
aad
pop
sub
in
cmp
push
add
negl
xor
sbb
ja
sub
jge
mov
push
loopne
roll
enter
sarb
fisttps
rclb
iret
popf
stc
lods
or
push
lahf
or
imul
pop
jg
ljmp
and
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
or
push
sbb
adc
sbb
jmp
hlt
imul
scas
inc
lea
push
or
pop
shll
rep
loope
dec
pop
adc
movsl
popa
xchg
out
push
in
sub
in
call
int3
ds
js
mov
fistpl
mov
jle
jnp
push
andl
fdivrl
lods
int3
ds
daa
lock
pusha
cmc
jl
jae
xchg
xchg
out
xchg
lock
mov
nop
add
jae
or
push
mov
lahf
mov
mov
insb
ja
sub
jnp
loope
sub
imul
fldl
lcall
int
mov
dec
loope
inc
dec
cmc
aad
cli
sbbl
mov
push
lds
arpl
push
push
or
xchg
jo
pop
mov
cmp
push
dec
lahf
call
daa
pop
jb
and
fimuls
inc
xchg
iret
xorl
push
pop
jnp
hlt
inc
bound
daa
mov
fmull
push
push
sub
sub
fsts
stos
or
ret
clc
dec
inc
inc
out
pusha
xchg
inc
data16
std
pop
loope
fs
lods
or
sbbl
xor
jne
cwtl
test
cmp
dec
imul
jecxz
jo
inc
adc
jp
int
stos
jp
lcall
into
les
push
sub
orb
push
movl
adc
mov
pop
call
and
lea
cmp
or
xlat
movl
notb
push
sti
int3
negb
pop
push
dec
dec
jp
inc
ds
adc
inc
stc
in
out
sub
pop
cmpb
xor
ret
and
sarb
sub
sub
imul
dec
jge
idiv
xor
inc
sub
jmp
jb
aam
push
out
push
cmp
popl
push
inc
xor
fldcw
aam
jp
sub
pop
filds
outsb
loope
adc
daa
jbe
or
ds
out
jg
add
lea
je
push
sbb
icebp
cmp
pop
loopne
jae
push
lock
adc
pop
imul
mov
stc
inc
fwait
test
les
mov
pop
rorb
in
mov
mov
xlat
rorb
leave
cwtl
xor
xor
cli
jmp
mov
jnp
inc
insb
dec
mov
or
push
sbb
insl
aaa
inc
sbb
fs
mov
xchg
iret
std
xor
test
lea
cmp
lods
or
lcall
sub
imul
hlt
pop
mov
mov
jo
jg
cmp
inc
add
adc
std
jbe
pop
data16
shlb
outsl
int
sahf
es
movsl
xchg
xchg
call
inc
cmp
inc
push
mov
xchg
push
outsb
jbe
lds
or
and
sti
sub
xor
shlb
dec
mov
adc
push
bnd
jbe
mov
movsl
xchg
xchg
js
jge,pn
mov
clc
mov
dec
std
lods
loop
das
jnp
loopne
sub
stos
sti
sbb
xchg
ret
pop
cld
loop
insl
nopl
xchg
aad
mov
push
xchg
imul
fwait
aas
lods
xchg
in
addr16
pop
imul
rorb
shlb
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
subl
sbb
stos
dec
jp
bound
ss
das
and
push
xchg
test
jp
mov
test
push
pop
mov
insb
seta
adc
enter
cmpsl
ret
or
repnz
push
scas
cltd
pop
ja
jo
lret
lods
aaa
lods
into
push
sti
and
dec
mov
pop
xchg
mov
pop
shl
sbb
cld
xchg
pop
mov
pop
into
out
es
push
jnp
lea
out
cmpsb
xor
jl
ret
cmp
das
push
or
subl
sbb
pop
arpl
cmp
loopne
rol
mov
cmpsl
fisubrs
jbe
pop
pop
sbb
pop
add
lahf
sbb
sbb
mov
adc
jne
stos
pushf
fcoml
adc
out
push
les
and
mov
pop
sahf
fs
add
cmp
cli
sub
pop
dec
dec
fcmovnbe
adc
in
cmp
push
or
test
lea
imul
mov
add
mov
inc
in
dec
pop
inc
push
aaa
xchg
fadds
mov
mov
push
dec
out
cmpsl
lods
cmp
mov
cltd
mov
inc
add
push
jo
and
add
push
push
mov
mov
mov
inc
loopne
and
incl
push
xor
cld
js
push
sbbl
push
loop
adc
inc
es
inc
imulb
dec
push
xchg
and
cld
sbb
push
and
cmp
jmp
xor
push
popf
pop
pop
clc
mov
and
mov
iret
pop
jae
jae
ror
cmp
cmc
dec
adcb
mov
sub
ja
mov
mov
add
push
xor
sub
int3
cmpsb
aas
cmp
dec
js
lock
andb
add
lcall
inc
add
in
jno
lds
mov
clc
cmp
into
and
or
sarb
lea
sub
stos
cmp
add
stos
fisubrl
lods
nop
add
les
stos
scas
enter
mov
sub
xor
cltd
add
stos
push
loop
dec
mov
je
pop
cld
out
in
jl
cmpsl
and
jno
push
les
fwait
imul
mov
cmp
xor
repnz
fsubl
mov
or
mov
les
loope
in
dec
pop
xchg
call
dec
outsb
mov
movaps
lahf
xor
popf
mov
add
pop
pop
gs
neg
dec
test
lods
jae
sbb
rcrb
add
cmp
xor
in
test
and
leave
subl
xchg
loop
and
or
sub
mov
fcmove
dec
jae
in
mov
push
jge
add
sti
or
loop
mov
push
ret
rcrl
xor
movsl
loop
repz
jge
adcw
hlt
pusha
pop
test
xlat
push
pusha
xchg
insb
addr16
sub
pop
cmpsl
pushf
ficoms
outsl
mov
adc
xchg
pop
adc
ret
scas
outsb
adcb
cwtl
icebp
cmp
dec
adc
push
sbb
sbb
jo
jno
loopne
push
rcrb
mov
subl
jmp
mov
push
in
xor
nop
mov
inc
add
sbb
adc
sbb
add
mov
imul
sbb
lods
sub
jp
aam
push
sub
mov
xchg
ss
pop
adc
aad
lret
pop
cwtl
repz
push
int3
push
pop
add
into
out
pop
inc
pop
push
mov
xchg
push
stc
into
loop
pop
mov
sar
and
rcl
pop
lods
lcall
fistpll
add
pop
add
out
stc
sub
cwtl
and
mov
and
pop
lahf
into
andb
pop
jle
dec
xchg
shll
pop
cmpsb
or
arpl
push
test
jns
mov
movsb
mov
jns
movsb
mov
jmp
and
adc
mov
dec
dec
test
sbb
adc
ljmp
push
cmp
cmp
add
adc
push
cli
mov
dec
aam
in
xor
jl
xchg
or
cmp
and
or
xor
xorb
add
xchg
jno
ljmp
and
add
in
stos
out
lods
into
inc
imul
cmc
call
ljmp
fwait
sub
push
fstps
scas
mov
js
add
adc
add
notb
add
jnp
mov
insb
movsb
cmpsl
xchg
xchg
adc
xor
out
push
add
frstor
out
push
mov
mov
push
cmp
jl
rcl
in
fsts
sbb
and
movsw
xchg
lea
mov
adc
sbb
xchg
push
xchg
xor
adc
sub
sbb
ucomiss
push
popf
mov
pop
lret
xchg
loope
lods
dec
sbbl
push
mov
cwtl
mov
pop
outsb
imul
or
fwait
adc
movsl
mov
jbe
xchg
es
adc
hlt
xchg
test
inc
test
ficoms
daa
sbb
fidivrs
cltd
pop
out
imul
aas
into
mov
ret
push
das
xchg
cld
mov
xchg
add
pop
rclb
jnp
loope
mov
int3
data16
sbb
sbb
lea
lret
aam
push
fcoms
ret
pop
mov
lods
daa
mov
and
xorb
cmp
ret
push
gs
gs
daa
mov
sub
mov
cmp
mov
std
push
lock
ud2
push
cmp
mov
sbb
cmp
xorb
push
mov
dec
mov
loop
mov
pop
or
fimull
mov
push
stc
jbe
gs
jg
dec
fdivl
imul
test
push
cs
loope
inc
push
jecxz
in
cmpsb
ja
adc
popa
loope
shlb
and
out
dec
mov
mov
clc
mov
daa
add
pop
popl
shrb
mov
ja
or
shr
andl
int3
dec
mov
fsubrs
push
mov
cmpsb
cmp
popa
dec
lock
insl
push
mov
sub
repnz
add
loope
pop
mov
test
ret
sub
outsl
rol
push
test
mov
xchg
push
push
leave
out
jnp
sub
mov
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
loope
shlb
fidivl
jae
mov
inc
inc
aas
pop
pop
push
cmp
call
jno
aam
ljmp
push
gs
repz
dec
cmpb
in
xchg
jb
push
inc
lret
mov
xchg
lock
fwait
cmp
jmp
sbb
gs
inc
ss
jl
nop
and
dec
inc
loopne
cmp
lcall
ss
into
add
jmp
push
mov
add
mov
xor
rol
popf
inc
aam
cmp
movsl
mov
adc
stc
jbe
bound
gs
leave
xchg
pushf
test
mov
pop
les
dec
lret
test
inc
or
stos
fst
in
xchg
xchg
cld
jmp
inc
roll
dec
aam
adc
out
gs
mov
cmp
push
sti
xchg
xor
mov
xchg
cmp
push
imul
mov
mov
clc
pop
push
jmp
push
cmp
aaa
ret
repz
test
mov
ss
add
outsb
xchg
mov
rolb
movsl
dec
in
mov
cmpsb
pushl
mov
mov
push
int
roll
insb
test
pop
pop
ss
imulb
sub
lret
dec
lret
mov
aas
jo
enter
cmp
jg
loope
mov
pop
mov
pop
loope
jnp
hlt
mov
popa
int
rcrl
insl
rcrl
inc
mov
push
mov
fbstp
xchg
pop
daa
cmpsb
pop
cld
mov
repz
jb
sub
insl
imul
mov
sbb
mov
jmp
sbb
out
sub
roll
push
push
sub
mov
stc
inc
lods
xor
inc
xor
mov
out
and
jp
cmp
or
mov
jnp
pop
inc
enter
dec
cmp
ljmp
cmp
add
dec
jle
test
call
dec
jnp
fs
adc
cmpsl
ds
lret
cs
inc
sbb
inc
test
icebp
mov
nop
mov
test
dec
fwait
iret
mov
int3
gs
rolb
xor
jge
dec
jbe
jns
je
fnstenv
jbe
xchg
shlb
out
or
sbb
pop
mov
js
negb
jns
sub
push
xor
push
pop
imul
shrb
je
mov
fiaddl
les
mov
dec
push
mov
rolb
jmp
push
xchg
das
xchg
pop
cltd
sbb
pop
push
fidivrs
dec
loope
out
popa
and
ret
jns
gs
dec
enter
clc
dec
nop
and
outsl
mov
sub
jmp
mov
fildl
aam
cmpsl
js
sub
fwait
mov
jnp
cmp
sbb
jae
mov
fmul
ficomps
add
outsb
jnp
arpl
push
sbb
add
mov
js
not
in
dec
movsb
adc
fwait
repz
das
clc
cmp
rcll
sub
scas
jo
cwtl
inc
test
insl
test
push
mov
andb
adc
cmp
cmp
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
push
cmp
inc
notb
sbb
adc
sbb
aad
cs
mov
lea
test
fsub
imul
bound
dec
repnz
lcall
out
cwtl
in
out
cmp
jg
jge
mov
lret
mov
jp
stc
pop
popf
movsl
mov
ja
xchg
or
push
mov
mov
mov
push
push
fldenv
loopne
stc
loop
cmp
cld
sbb
inc
bound
jge
cmpsl
in
push
ss
into
inc
call
sahf
mov
ret
aam
call
popa
or
pop
push
mov
xor
outsl
and
push
lret
ret
mov
xchg
shlb
rolb
movsb
inc
outsb
cmp
les
push
add
outsb
stos
js
ljmp
xchg
push
pop
sub
jb
cmpb
mov
std
mov
dec
pop
aas
push
mov
les
mov
mov
jno
xchg
pop
stc
or
mov
mov
inc
push
cmp
xchg
xchg
pop
jge
push
sub
testb
jo
push
lret
xchg
mov
push
mov
jo
pop
dec
or
adc
ret
dec
jno
lods
je
add
lods
or
test
xor
jne
push
je
jle
ret
or
jne
mov
inc
dec
int3
sub
pop
ds
push
jle
xor
jne
mov
xchg
ja
lods
std
rol
imul
lods
test
jg
mov
test
cmp
stc
mov
in
push
cwtl
lcall
xor
decl
mov
adc
jle
sarl
popa
xchg
incb
nop
out
push
mov
adc
jbe
adc
mov
imul
stos
dec
xchg
mov
or
imul
jle
lds
jmp
out
sub
cwtl
stos
divl
mov
sub
mov
fwait
je
inc
adc
seta
in
xchg
test
ljmp
mov
mov
jns
sti
pop
test
cwtl
mov
negl
mov
xchg
in
mov
decl
dec
mov
out
fcomi
lret
rcrw
cltd
dec
sahf
popa
pop
sub
adc
cmp
arpl
xor
not
jmp
lods
fcmove
mov
jae
out
movsl
push
rcll
and
repnz
or
dec
jecxz
push
loop
pop
addr16
dec
imul
push
sub
cmp
addr16
dec
cld
subl
sub
xor
aaa
pop
cmp
push
arpl
inc
repz
sub
ret
mov
xchg
movsb
stos
dec
xchg
push
cs
sbb
xchg
inc
stos
into
adc
or
lahf
dec
fildl
jno
xchg
jno
aaa
clc
push
jo
je
aad
or
push
mov
mov
push
add
insl
lcall
cmp
adc
cmpsb
ret
push
push
xchg
rclb
mov
leave
pop
repnz
and
jo
popf
stos
cmp
adc
in
and
pop
lret
adc
mov
int
xor
xchg
pop
pop
negb
push
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
inc
xchg
adc
jg
data16
stos
cmp
fdivrl
push
lods
or
push
xchg
sti
fimuls
mov
push
push
pushf
scas
adc
sbb
lods
and
stos
jno
mov
mov
stos
pop
ret
cmpsb
push
addl
fstps
mov
xorl
bound
push
xchg
sbb
pop
pop
popl
loopne
mov
shll
xchg
and
std
rcl
cmpsb
cltd
pop
rol
inc
lahf
sahf
scas
push
jno
mov
dec
push
push
enter
dec
aaa
movsb
or
and
add
xor
in
add
push
scas
inc
insb
xor
lock
or
jnp
movsb
sbb
xlat
lock
and
lret
neg
incb
stc
fidivl
mov
jnp
xchg
pusha
dec
in
xor
jg
adc
pop
popf
idiv
mov
jno,pt
inc
or
imul
add
int
push
xchg
pop
mov
cmp
jns
jge,pn
ja
sbb
lds
mov
mov
add
jl
or
jecxz
dec
lcall
pop
pop
ja
rorb
sub
ret
sub
add
adc
orl
jg
fcomip
fs
clc
mov
mov
jp
lods
or
xor
pop
decl
mov
cmpsl
and
push
dec
aad
pop
in
pusha
add
add
fistpl
icebp
data16
sub
test
dec
leave
pop
push
dec
and
dec
not
jle
cltd
fcoms
cli
out
imul
daa
adc
hlt
push
push
sub
xchg
dec
add
jns
das
rorb
js
jmp
cld
xchg
xor
int
in
inc
out
int3
mov
push
push
inc
inc
es
mov
les
dec
and
mov
push
mov
outsb
sub
leave
es
fcoms
lods
mov
flds
jns
xor
js
ljmp
lods
imul
mov
or
jmp
in
in
and
sbb
mov
push
imulb
movl
imul
sub
pop
dec
mov
sub
test
cmp
imul
push
xchg
ficoms
push
pop
pop
push
stc
jecxz
add
cmp
aad
ret
push
xchg
outsb
mov
stos
popa
cwtl
fldcw
fadds
pop
mov
pushf
jge
mov
mov
and
xchg
xor
push
aaa
pop
enter
mov
lods
xor
or
adc
dec
or
data16
cli
stos
adc
or
daa
loop
and
xchg
xor
inc
xchg
dec
ds
rolb
dec
ljmp
xor
aaa
inc
mov
adc
aaa
or
mov
stc
out
dec
in
fs
and
dec
inc
test
xor
mov
push
lahf
xor
sub
or
out
cmp
inc
lea
inc
adc
das
int
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
pop
and
mov
sbb
sbb
enter
xor
negb
cs
sub
adc
jno
xchg
cmp
addr16
test
imull
mov
mov
repnz
inc
fwait
pop
push
sub
outsl
push
int3
sub
scas
dec
out
inc
push
mov
lock
fsubs
xchg
testb
push
adc
call
jg
add
loop
mov
enter
mov
aad
jnp
add
imul
test
dec
mov
mov
push
jb
or
push
in
mov
xchg
out
inc
pop
push
das
adc
imul
sbb
jo
int3
loopne
es
mov
pop
sahf
xor
dec
xchg
mov
icebp
clc
inc
mov
or
dec
lds
leave
mov
shrl
jne
mov
xchg
scas
out
inc
imul
js
dec
call
mov
xchg
jbe
fincstp
and
imul
sub
ret
mov
sbb
js
mov
ficoms
hlt
cmc
stos
xchg
stos
leave
sar
pushf
push
movsb
mov
cmpl
bound
stos
mov
adc
popf
jo
or
or
mov
roll
fwait
mov
enter
and
inc
dec
mov
pop
jl
call
cmp
mov
push
jbe
push
mov
out
repz
mov
jecxz
jnp
enter
xlat
pop
xor
or
les
cmp
add
xchg
mov
xchg
pop
mov
das
cmc
mov
sbb
lods
push
daa
mov
mov
repnz
mov
lahf
outsb
sub
les
cmpsb
and
mov
inc
ds
sub
and
and
xchg
mov
inc
sbb
sarl
mov
les
js
xchg
push
add
xchg
dec
jmp
aas
jae
jns
push
or
les
jb
xor
cmc
into
lret
test
clc
faddl
cmc
dec
pop
push
sub
out
fs
testl
pop
add
or
pushf
pop
scas
add
stos
sbb
cmp
cmp
stc
das
add
sub
mov
dec
fdiv
pop
xchg
and
cmc
ret
add
lock
adc
or
popf
fnstsw
add
cld
data16
sbb
push
ret
pop
loopne
sub
data16
fldcw
test
push
xchg
cmpsl
movsb
xchg
testb
aaa
push
adc
jne
jae
mov
mov
icebp
sub
pop
mov
pop
mov
xchg
cs
adcb
xchg
aaa
and
icebp
sbb
gs
add
xor
fistps
mov
mov
js
ljmp
cld
int3
dec
int
xor
in
stc
mov
ja
pop
xchg
stos
cmp
mov
or
or
stc
loope
mov
xor
mov
xor
insl
mov
mov
mov
flds
stc
and
or
icebp
aam
push
fimuls
aaa
test
dec
repz
jbe
add
pusha
pop
dec
arpl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
mov
inc
loope
sbb
adc
sbb
mov
xor
mov
aas
mov
fidivrs
adc
xchg
pop
mov
mov
pushf
cmp
and
lret
movsl
and
mov
in
pop
aam
pop
roll
ja
jp
jne
cmc
xchg
sub
xor
fnstenv
mov
mov
test
add
stos
cwtl
sub
pop
and
mov
movsb
mov
inc
das
xor
push
bound
insb
and
fisubl
push
fimull
addr16
jns
jbe
ljmp
pop
mov
mov
jp
cwtl
adc
jmp
sbb
cli
enter
inc
sbb
enter
pop
mov
sbb
mov
iret
xchg
inc
movsl
mov
jmp
cwtl
in
push
ret
lods
loop
and
sub
daa
inc
ds
jb
dec
mov
fwait
mov
xor
inc
addr16
mov
pop
dec
subl
lret
cmpsl
lret
cmp
mov
rcrb
mov
cli
push
stos
sub
rcrl
push
mov
hlt
mov
arpl
add
pop
movsw
es
mov
xchg
jb
lods
sub
push
xchg
adc
adc
js
in
adcl
jge
dec
mov
in
mov
ljmp
mov
add
repz
mov
repnz
mov
lea
loope
jg
fsubrs
movsl
mov
cmpsl
mov
mov
stc
cmp
xor
add
xchg
push
push
ss
add
mov
cmp
xorb
lods
xlat
or
pop
out
movsl
dec
xor
mov
add
gs
mull
mov
xchg
mov
je
aad
xchg
in
xchg
fsubl
xchg
dec
testl
out
add
mov
xchg
test
and
data16
dec
jne
imul
push
in
mov
jno
jg
orl
test
je
out
ss
sub
xchg
iret
push
andb
and
mov
lods
mov
pop
out
sub
mov
xchg
ljmp
iret
in
mov
fstpt
sbb
fs
imul
mov
punpcklwd
dec
inc
clc
cli
addr16
je
rcrb
cwtl
mov
lcall
dec
jg
jmp
repnz
mov
stos
pop
cmp
and
repz
push
push
loop
stos
outsl
push
sub
ljmp
mov
or
outsl
pop
pushf
clc
imul
mov
mov
stos
inc
add
fmull
xor
xor
fwait
push
adc
dec
iret
cmpb
bound
popf
xchg
dec
cmc
stos
jmp
pop
sarb
sub
jl
shlb
add
xchg
push
loop
test
jecxz
ljmp
mov
in
imul
adc
adc
jo
in
inc
fistps
pop
es
or
cwtl
or
dec
add
mov
insl
sub
jnp
mov
jno
jb
pop
pop
test
movsb
ds
cmp
inc
test
xchg
outsb
sub
cmp
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
fistl
sbb
adc
sbb
cmp
lea
xchg
ja
outsl
cmp
mov
fwait
xchg
in
movsb
out
lods
jg
leave
inc
xor
xchg
push
jl
inc
popf
mov
pop
sbb
xor
leave
lea
mov
ror
adc
stc
mov
or
fcoml
pop
jbe
mov
sbb
or
push
pusha
int3
push
dec
cmp
fs
and
divb
and
xor
ficoml
and
mov
sub
push
mov
mov
fcomps
popa
dec
scas
adc
jecxz
mov
add
cmp
mov
test
xchg
test
xchg
lods
jp
fs
out
mov
es
in
in
push
neg
inc
xlat
in
scas
fldenv
adc
cltd
je
rorb
notb
push
out
sub
das
xchg
sahf
mov
pop
lds
cmp
or
das
and
lock
xor
add
push
loope
and
sub
test
lcall
sub
add
push
aaa
dec
mov
push
add
fidivs
fisttpl
shr
pop
cs
dec
xchg
clc
sub
popa
pop
and
movsl
mov
dec
out
xor
in
inc
xor
ret
cmp
ja
fistl
xlat
cmpsb
sti
sbb
out
jnp
outsl
in
xor
int
xor
stc
mov
hlt
inc
std
leave
enter
movsl
xchg
push
into
jne
push
in
jmp
mov
cwtl
add
push
mov
bound
nop
stos
lret
dec
inc
stos
insl
mov
lods
mov
in
sbb
fstps
adcl
adc
mov
jle
stos
sbb
cmc
cltd
and
xchg
jnp
iret
sub
mov
xchg
divb
inc
xchg
cltd
adc
lcall
jo
aam
enter
xchg
pushf
push
mov
popl
loopne
pushf
or
push
addr16
arpl
lea
orb
jo
or
add
lahf
cmc
jns
jmp
lahf
push
lret
dec
sbb
negb
cmp
rcrb
inc
add
cwtl
cmp
leave
mov
js
fcmovb
push
jecxz
inc
mov
jbe
or
insb
add
clc
lahf
int3
in
xor
push
mov
cs
imul
fs
jp
cmp
mov
jmp
lret
jns
or
adc
cmp
pop
sahf
jle
insb
out
loopne
mov
mov
loope
xor
dec
mov
out
pop
sub
je
popf
popf
les
cmp
sub
or
inc
sbb
clc
mov
or
jnp
inc
not
ja
jg
xchg
push
adc
add
cmp
repz
out
pop
mov
sub
incb
cmp
inc
and
cmp
sbb
dec
je
xchg
xor
in
xchg
cmp
inc
fwait
push
shlb
xor
push
jge
or
outsb
add
push
pusha
mov
xlat
xchg
insb
mov
lahf
es
lea
ds
jecxz
and
divb
dec
leave
push
mov
sbb
pop
pusha
lds
dec
jecxz
into
xor
stos
or
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
sbb
xchg
jo
rcll
sbb
adc
sbb
xchg
jl
add
add
mov
ficomps
pop
and
sbb
or
or
int
leave
je
cmp
pop
dec
mov
add
scas
ret
cmp
adc
jno,pt
add
jl
les
mov
jne
xor
stos
sbb
mov
clc
mov
jle
mov
xor
shll
cmp
loopne
jecxz
test
arpl
inc
push
lcall
xchg
dec
push
jge
cmp
out
aas
ficoml
loopne
fwait
stc
or
sbb
sti
out
xlat
adc
sbb
and
xchg
bswap
out
sbb
in
adc
ljmp
cli
popa
inc
xchg
loope
lret
loop
int
dec
test
sbb
testb
mov
sub
dec
mov
push
push
jl
insl
stos
or
pop
jnp
into
aam
mov
icebp
ret
test
mov
push
push
xchg
sahf
lock
xchg
push
mov
push
push
mov
cli
lea
xor
mov
in
add
mov
mov
mov
push
mov
daa
cmp
push
jb
push
call
sub
into
mov
pop
push
xor
roll
xchg
mov
into
jle
dec
xchg
imul
je
mov
std
xor
add
mov
sub
stc
pop
jmp
fcmovb
mov
nop
inc
jmp
dec
lret
scas
inc
incb
lds
test
or
adcl
leave
mov
xorl
lea
add
and
cmp
inc
shrl
dec
loop
in
jl
mov
les
sti
loope
add
mov
insl
mov
cmp
shll
xor
repnz
push
jb
cli
push
inc
stc
sbb
arpl
mov
jle
sub
in
cld
stc
iret
insb
test
xlat
in
jbe
add
pop
jmp
rol
cmc
mov
mov
aas
mov
inc
lods
lret
ja
and
or
mov
cwtl
pop
cmpsl
push
mov
imul
imulb
adc
sbb
imul
shrb
loope
insl
pop
adc
mov
and
mov
cmovbe
xor
aam
pop
jnp
add
mov
mov
hlt
pop
fisubrs
xchg
clc
push
addb
loope
and
clc
shrl
movsl
pop
jmp
fdivr
fdivp
push
adc
cmp
sub
push
pop
scas
mov
sub
push
popa
sbb
pop
jnp
test
adc
pop
mov
pop
adc
hlt
adc
xchg
dec
pop
jg
les
xchg
or
dec
push
shlb
hlt
arpl
hlt
stos
dec
shll
xor
pop
outsl
aaa
add
lea
jno
jecxz
jge
testb
daa
cmpps
xchg
inc
jg
repz
dec
jnp
pushf
add
add
xor
jb
cmpsb
xchg
sbb
push
pop
shll
int
sbb
adc
sbb
test
xor
or
popf
in
rcrl
push
or
aas
movsl
mov
mov
push
and
scas
add
fcompl
or
popf
pop
cltd
xchg
sub
imul
loope
xor
xchg
xchg
lock
add
out
mov
pop
pusha
mov
mov
cmp
pop
xchg
inc
dec
sub
stos
pushf
lock
popf
push
xor
dec
es
or
lock
cli
stos
jne
fldenv
out
inc
call
jae
mov
xchg
inc
negl
jl
xor
sbb
fists
das
pop
fldln2
xchg
mov
dec
std
mov
adc
mov
and
sbb
mov
jne
cmp
dec
jl
mov
xchg
jno
adc
dec
call
paddb
xor
lret
lret
inc
jb
sbb
pop
xchg
cmc
repz
fwait
xchg
cli
pop
fistps
ret
cmpsb
cld
jnp
push
jecxz
xor
rclb
inc
arpl
mov
push
mov
mov
lock
add
aaa
sbb
xor
sub
enter
mov
xor
jge
push
icebp
xchg
iret
jmp
cmp
data16
pop
not
and
jbe
xor
bound
add
dec
jmp
pop
sbb
pop
inc
pop
mov
push
xlat
cmp
xchg
pop
jmp
xor
xor
mov
imul
inc
psubd
addr16
ja
cmp
cmpsb
orb
add
jmp
mov
adc
fs
test
js
adc
mov
jb
loop
dec
mov
sub
push
cld
das
jnp
mov
mov
nop
mull
aam
dec
lahf
test
pop
dec
fsts
jae
popa
insl
andl
or
dec
lock
clc
fidivrl
or
sbb
pop
adc
in
into
jb
push
scas
scas
mov
outsl
jo
mov
lea
movsl
push
insl
pop
mov
das
int3
push
lods
cmp
insb
les
fnstcw
gs
sbb
xor
stc
nop
js
enter
xchg
jg
das
dec
mov
orl
ljmp
out
aaa
dec
fdivs
out
addr16
lods
insl
or
or
cmp
push
sbb
cmc
xchg
mov
arpl
std
rorb
pop
push
mov
orb
dec
ljmp
push
icebp
leave
das
jo
or
jns
fldenv
loopne
fs
lcall
dec
push
pop
push
xor
pop
loope
out
inc
data16
push
cmp
aad
mov
aas
test
mov
arpl
andb
ficomps
fimull
mov
sub
out
mov
mov
aad
dec
xchg
sbb
orl
xchg
mov
mov
fdiv
add
jbe
or
addb
loope
jns
and
popf
sbb
loope
dec
jnp
adc
mov
loopne
mov
imul
xchg
and
or
or
scas
repz
fldcw
pop
inc
mov
add
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
ljmp
sbb
sbb
call
cmpsl
inc
dec
insl
dec
iret
cmp
mov
mov
arpl
jnp
sbb
adc
fsubrl
lret
test
daa
outsb
leave
test
pop
dec
inc
fsubr
stc
data16
push
cmpsl
je
mov
inc
outsl
mov
loope
add
cmpsb
ja
and
inc
inc
and
mov
adc
das
inc
sub
add
shll
lret
xchg
sahf
xchg
in
sbb
test
xor
nop
jmp
push
aad
pop
filds
mov
outsl
xchg
push
gs
or
push
cmp
pop
mov
mov
sbb
push
pop
cwtl
xchg
ds
insl
pop
aad
cld
sub
aas
scas
nop
jmp
xchg
div
mov
xchg
pop
mov
int
pop
std
decl
xchg
dec
out
lods
jns
divl
mov
jle
jmp
cmp
adc
fwait
scas
and
xchg
push
and
cwtl
sub
mov
or
fwait
jbe
mov
and
mov
lcall
jg
or
sarl
or
imul
imul
addr16
mov
jns
int
dec
inc
xchg
push
xlat
pop
not
xchg
aad
ret
js
pop
enter
push
xchg
pop
adc
push
mov
gs
sub
rorb
popl
dec
ja
insb
or
sub
push
xchg
jle
pop
add
ds
dec
mov
les
mov
jg
idivl
dec
shrb
or
fs
loopne
cs
js
imul
sub
sahf
stos
or
xor
daa
enter
lock
stos
test
mov
push
mov
mov
hlt
lods
lods
sahf
outsb
mov
icebp
and
mov
popa
inc
cmpsb
push
outsl
mov
mov
cmpsb
push
cmp
aam
xor
xchg
push
mov
pushf
cmpsl
xchg
cmpsb
xor
icebp
add
add
lods
lahf
mov
in
push
fldl
push
sbb
lcall
add
and
adc
mov
jge
fwait
sub
cli
enter
fwait
add
repz
xor
enter
push
cltd
xchg
push
lret
push
jno
add
bound
dec
cmc
sbb
cmp
sbb
test
and
in
and
scas
gs
popa
sahf
push
icebp
in
out
imul
shrb
mov
mov
and
clc
repz
pop
push
push
outsb
pop
cmc
inc
fdecstp
pushf
jmp
xor
cmp
mov
rorl
mov
or
loopne
jp
dec
mov
xchg
movl
xor
scas
pop
lahf
or
dec
xorl
fists
inc
sbb
sbb
cwtl
cmp
xor
mov
or
and
adc
pop
cmp
jp
push
jae
iret
mov
std
lret
or
rclb
push
hlt
inc
xlat
add
je
popa
mov
stos
cmp
stc
fwait
xchg
add
stos
lea
sbb
dec
cmp
mov
mov
out
xchg
arpl
cltd
or
ja
pusha
das
sub
xchg
into
mov
repz
sbb
and
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
fsubrs
ja
pop
push
mov
xor
mov
ja
mov
js
or
xchg
sub
or
jbe
lahf
fistpl
xchg
into
mov
in
scas
inc
movsb
mov
xchg
pushf
lret
cmp
mov
out
add
jne
fistpll
dec
or
cmpsl
fcomi
pop
clc
xchg
cmc
push
push
andb
daa
in
mov
test
sub
test
sbb
cmp
jg
xchg
mov
stc
xlat
loop
add
test
dec
dec
sub
loopne
and
call
mov
jno
add
xor
cmpsl
jne
ja
shll
enter
fsubrl
sub
pop
loopne
mov
insb
out
jecxz
repz
mov
daa
lret
addr16
flds
adc
dec
scas
xchg
into
mov
out
push
arpl
mov
cmp
lret
cwtl
pop
mov
stos
sti
or
adc
pop
pmaxub
push
mov
aad
fcmovu
add
inc
mov
imull
in
imul
fisttpl
mov
repnz
in
ja
outsl
test
xchg
mov
mov
push
mov
xor
push
dec
or
jb
lock
cmp
pop
or
mov
jbe
enter
mov
jmp
inc
outsl
popf
mov
scas
xchg
mov
cmc
popa
sub
dec
adc
jns
push
repz
fst
gs
arpl
vrsqrtss
xchg
sbb
and
mov
dec
fldcw
inc
sarl
mov
push
cmp
or
mov
or
mov
ret
lret
lods
loope
and
pop
dec
fwait
sub
mov
or
push
sub
jl
dec
adc
jns
push
in
xor
cltd
fmuls
stos
daa
inc
maskmovq
notl
xor
pop
outsl
mov
xchg
iret
mov
iret
dec
jge
push
mov
xor
push
pop
aaa
leave
lods
pop
pop
call
pop
mov
jg
push
adc
out
sbb
nop
lea
pop
and
xchg
bound
rcrl
pop
sahf
xchg
loop,pt
adc
inc
test
pusha
xchg
sub
fnstcw
sarb
ret
aam
aad
lock
or
mov
imul
sub
xor
and
data16
add
daa
imul
push
jo
inc
adc
stc
in
ljmpw
and
mov
cmp
test
and
sbb
jo
mov
and
stos
mov
or
in
in
scas
mov
or
push
adc
lods
lahf
bound
sub
and
inc
fiadds
pop
ja
add
ss
push
push
mov
cmp
dec
cmp
lock
lea
mov
jns
or
cmp
mov
mov
push
movsl
jb
loop
gs
xchg
mov
dec
nop
test
mov
arpl
mov
add
jle
cmp
inc
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
push
negb
fstl
leave
fisubrl
sarb
push
cltd
rolb
or
es
dec
faddl
xchg
mov
mov
rcl
push
lds
sti
or
int3
and
cmp
pop
mov
rorb
orl
xor
pop
mov
pop
addl
or
xchg
jmp
or
mov
pushf
lcall
push
lods
adc
fs
in
ss
mov
lcall
lods
ret
adc
add
out
mov
lods
or
data16
sbb
inc
cmp
sub
inc
movsl
lret
jg
xlat
fcom
fsubl
scas
ret
sar
adc
repnz
push
pop
ret
xor
lods
jp
es
mov
sbb
imul
push
daa
popa
push
cli
jmp
aam
fninit
sbb
push
pop
and
fcmovu
jge
popa
add
iret
and
mov
xchg
imul
jmp
sahf
out
adc
jp
dec
and
negb
insl
pop
cmc
stos
sbb
xor
pop
int
or
je
fisttpl
cmpsb
pop
inc
mov
les
xor
stc
shrl
lcall
ja
ljmp
in
cli
int3
cmc
push
mov
add
adc
add
data16
outsl
jmp
loopne
cld
jns
mov
fisttps
addr16
sub
or
and
nop
out
pusha
pop
lds
les
and
outsb
fdivl
mov
and
ficompl
rclb
xchg
cmp
fmulp
data16
aad
fldl
mov
push
push
mov
rolb
enter
ds
mov
dec
jmp
xor
sarb
jne
mov
out
mov
cwtl
daa
inc
dec
and
lret
outsb
in
test
sti
xchg
mov
mov
dec
dec
mov
roll
cmp
sbb
imul
sbb
inc
cli
test
mov
std
push
push
insb
mov
lret
fldcw
pop
dec
mov
popa
mov
ret
sbb
sub
xorl
fcomip
and
jle
jmp
mov
lret
lahf
mov
aas
sahf
std
cmp
jle
lods
outsl
outsb
jb
sbb
sbb
jne
ljmp
je
lds
test
gs
push
adc
mov
loop
sbb
mov
rorl
jae
xchg
leave
push
stos
mov
cmp
stc
rcl
pop
in
arpl
pop
loope
dec
ret
jo
dec
inc
push
pushf
xor
adc
sub
mov
cmp
jo
aam
inc
push
pop
in
popl
mov
mov
cmp
mov
pop
push
sbb
test
pushf
insb
mov
and
in
jmp
sbb
mov
lahf
mov
jl
mov
scas
dec
or
cmp
sbb
cmpsb
lcall
pop
icebp
fmull
lods
aad
cld
sahf
xchg
out
in
sbb
pop
int3
mov
stos
cmpsb
jne
out
pop
nop
dec
pushf
data16
cltd
out
push
aas
insl
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
push
in
stc
outsb
cmpsb
dec
lods
test
cmp
enter
mov
ds
jmp
out
inc
cwtl
cmpsb
xor
adc
mov
pop
add
xchg
jmp
dec
add
movsb
push
jae
lods
jbe
cmpsb
into
push
mov
pop
mov
and
jmp
add
hlt
mov
faddl
push
je
or
and
jne
pop
pop
or
cmp
jle
xchg
add
sbb
fsubrs
les
fldenv
cmp
sbb
or
add
push
pusha
mov
mov
clc
jno
in
add
adc
or
inc
stc
int3
push
pop
lds
dec
aam
jle
nop
rcrb
arpl
pop
xchg
test
cli
add
repz
xchg
or
notl
adc
dec
fadds
dec
ja
lcall
pop
xor
inc
roll
cmp
xchg
jp
dec
ds
dec
push
fs
rolb
ja
xor
fsubr
mov
imul
or
iret
cmc
stos
pop
push
add
leave
push
push
movsb
stos
stc
mull
popa
stos
mov
lds
pop
xlat
xchg
movsl
pop
push
mov
mov
fs
stc
xchg
mov
lret
rcll
mov
aas
fwait
mov
or
idivl
repnz
lock
inc
push
sbb
clc
jge
mov
lret
mov
xchg
push
leave
outsb
and
insl
ficomps
pushf
ret
std
clc
mov
xor
mov
sbb
ja
mov
mov
ret
out
cmpsb
mov
in
cmp
mul
ljmp
jg
in
inc
and
shrb
dec
in
jecxz
sub
pop
push
loope
cmpsl
call
adc
dec
jns
push
scas
or
je
mov
loope
push
scas
add
mov
shr
push
fldl
cli
loope
sbb
nop
dec
adc
out
popf
insb
dec
adc
stc
cld
cwtl
and
leave
cli
ds
cld
mov
cmp
xchg
or
add
shl
testl
jg
lock
adc
or
cmp
jo
dec
mov
mov
inc
std
iret
lods
xor
push
jnp
xorb
mov
push
stos
xor
mov
ss
dec
mov
data16
push
shll
and
lea
test
aaa
gs
bnd
push
scas
shrb
shlb
add
cli
xor
xchg
mov
or
sbb
ljmp
pop
inc
sub
mov
xor
out
hlt
fimull
sbb
out
xor
scas
movl
icebp
hlt
dec
pop
xchg
xor
jns
movl
xchg
pop
sub
mov
adc
imul
jo
xchg
cli
lods
sbb
pusha
inc
sbb
pusha
mov
decl
push
sbb
movsb
push
out
xor
or
call
int3
fdivs
xchg
pop
mov
lcall
repnz
mov
ret
adc
fidivrs
inc
scas
inc
dec
xor
cmp
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
popa
cmp
jle
test
sbb
pop
pop
das
stc
shrl
sbb
mov
sbb
adc
sbb
cmp
out
arpl
and
scas
outsl
pop
and
cmp
ss
test
incb
adc
movsl
dec
icebp
idivb
test
into
enter
repz
pop
push
lods
insb
scas
sub
mov
loope
mov
clc
inc
mov
es
mov
sahf
aas
lds
cld
lea
and
jns
adcb
sahf
stos
and
cltd
sbb
int
pop
xor
and
mov
add
fldcw
insb
fstps
pop
repnz
fs
jl
popl
movsl
or
ja
pop
and
lea
out
and
decl
scas
or
popf
pop
xchg
pusha
or
repnz
and
inc
into
fdivrl
cmpsb
jae
orb
stc
leave
and
popf
fdivrs
call
mov
mov
add
fwait
dec
pop
nop
iret
adcb
or
mov
inc
and
movsl
hlt
fildll
add
xlat
pushf
out
dec
das
outsb
jnp
add
xor
movsb
vpunpckhqdq
pop
in
dec
test
mov
or
shll
ljmp
cwtl
aam
lea
xlat
cmc
pop
popf
imul
shrl
cmp
xchg
dec
dec
lods
xchg
mov
out
sbb
jo
adc
xchg
mov
les
repz
mov
fistps
add
stos
aam
push
xchg
mov
ret
jle
mov
mov
cmc
xchg
negl
push
pop
xor
out
mov
ljmp
xchg
or
or
xchg
push
sub
xchg
daa
mov
inc
insb
inc
std
jmp
xchg
pop
sub
jo
and
xchg
dec
jl
push
in
pop
cwtl
sub
push
cmp
push
xchg
icebp
movsb
or
in
push
imul
std
jp
xor
int3
adc
or
jg
ret
dec
pushf
fldenv
fisubrs
or
inc
sub
push
dec
cld
int3
ja
ss
sbb
or
mov
push
jmp
sbb
lods
add
nop
and
xor
inc
jne
subb
stos
pop
adc
movsb
leave
push
rol
push
int
inc
inc
mov
leave
push
sbb
lock
and
out
sub
jne
jbe
imul
daa
cli
mov
fdivl
pop
xor
sub
and
out
test
add
xor
xor
arpl
jbe
movsl
adc
fwait
orl
push
fistpll
mov
rcrl
ja
addl
pushl
leave
sbb
mov
pop
add
jae
scas
repz
mov
jb
jecxz
fnstsw
cli
popa
out
xor
test
xchg
pop
test
pop
jns
fistps
notl
ljmp
iret
mov
movsl
and
xor
sub
and
mov
stc
xchg
outsb
rcrl
pushf
lcall
dec
mov
and
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
jle,pt
push
mov
sbb
out
mov
cmpsb
jnp
push
int
pop
adc
iret
xlat
push
pop
xchg
mov
leave
xor
daa
jge
aaa
and
into
push
lods
fnsetpm(287
mov
or
out
adc
xor
push
dec
and
or
pop
into
push
inc
dec
jle
sbb
cmp
mov
popa
push
fistpl
adc
jp
jmp
aaa
nop
pushf
and
out
popf
les
daa
mov
cmp
and
sub
cwtl
inc
in
inc
adc
leave
gs
pop
mov
sbb
sti
and
in
sti
mov
xor
pop
mov
inc
pushf
xor
xchg
mov
mov
push
les
cmp
sbb
xchg
sbb
xor
or
adc
mov
jg
and
fmul
sub
push
inc
fnstsw
out
push
mov
mov
andl
push
xchg
pop
sbb
xchg
or
ds
mov
test
and
addr16
popa
sub
or
mov
fdivrl
dec
mov
fmull
add
mov
imul
inc
outsb
and
scas
jnp
ss
repz
aam
dec
mov
xor
fidivrs
push
fisttpl
sarl
cmpsb
mov
push
pop
in
out
adc
xor
dec
sahf
idivl
mov
mov
xor
mov
test
es
movsl
je
cmp
es
shl
xor
mov
cmpsb
pop
xor
mov
lock
add
das
fisttps
scas
aas
daa
rep
ja
push
imul
loope
mov
std
push
jg
es
dec
dec
jmp
jle
cmp
insb
out
mov
cmpsb
ficoml
mov
cld
cli
test
cmp
gs
fcoml
mov
imul
test
stos
fiadds
int3
pop
push
ja
loop
xchg
cld
pop
leave
shlb
scas
sub
push
and
jae
pop
je
push
scas
gs
shrl
mov
hlt
sub
incl
xlat
ret
dec
xor
xor
add
ljmp
pop
sbb
dec
js
mov
cmp
pop
outsl
pusha
or
lods
push
insb
jg
jmp
loop
push
dec
xchg
mov
sbb
xchg
out
sarl
jle
fsubs
repz
inc
lods
or
lods
sarl
clc
xor
das
dec
pop
pop
loop
adc
inc
cli
dec
lret
push
sub
push
in
inc
cmp
push
popf
daa
ljmp
add
out
es
mov
dec
push
data16
imul
std
push
je
dec
loope
icebp
fadds
rorl
cmp
rcr
mov
test
les
idiv
inc
stos
lret
jnp
rolb
dec
and
cli
or
mov
jmp
movsb
push
push
and
mov
loop
push
inc
je
mov
adc
fstpl
aad
push
pop
insb
mov
push
nop
stc
aas
js
out
push
ljmp
inc
into
mov
pop
scas
xchg
das
xor
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
mov
push
sbb
adc
sbb
int
stc
rclb
adc
push
xchg
mov
test
cli
stos
je
xor
fbld
xor
mov
pop
pop
ret
dec
enter
and
or
jno
stos
mov
mov
out
fsubrs
imul
rorb
cwtl
push
adc
push
push
fs
call
movsb
insl
enter
icebp
mov
and
mov
mov
mov
xchg
inc
sti
data16
push
mov
push
jg
popa
ljmp
mov
sub
test
mov
xor
int
scas
insb
xor
popf
dec
sub
shrl
jb
jns
lret
adc
paddd
out
or
rolb
mov
pusha
lret
ffreep
xchg
add
xchg
pop
add
fisttpll
test
aas
push
adc
insb
xchg
fcmovbe
jno
outsb
mov
in
call
inc
dec
scas
lcall
shrb
pop
adc
jns
cmpsl
dec
and
mov
jp
pop
mov
dec
mov
jnp
or
push
push
in
jno
sub
fs
jo
lods
adc
sbbb
xchg
xchg
sbb
rorl
in
lret
jae
adc
fs
daa
clc
fwait
repz
cmpsl
mov
jle
inc
sbb
aas
cmp
push
rorl
movsl
sbb
iret
sub
cli
pop
xchg
inc
fwait
sarl
mov
subl
js
jmp
xor
das
mov
inc
mov
rcl
cmp
push
fidivrl
ja
mov
mov
adc
sahf
fdivrs
out
fwait
cmc
xor
stos
mov
mov
fldenv
outsl
add
shlb
lret
lods
insb
pusha
insl
xor
push
cmp
clc
push
cmp
xor
dec
lock
clc
popf
add
xor
mov
pop
xchg
push
mov
pusha
add
and
rolb
inc
sub
jecxz
out
cmc
sti
cmp
cmp
mov
mov
push
cld
addr16
xor
ficoml
pop
pop
inc
jo
icebp
bnd
pop
lods
jmp
and
fisubrl
pop
pop
pushf
sub
pop
mov
ds
or
in
jae
es
inc
lret
jno
and
aaa
inc
jne
outsb
fsubs
addr16
sub
dec
mov
cmp
imul
arpl
mov
jo
pop
jg
push
push
ret
jno
fldl2t
adc
adc
fidivrl
or
int3
inc
mov
ss
loope
and
out
pop
or
lahf
test
add
outsl
rol
sarb
xchg
fsqrt
test
movsb
mov
jge
mov
cmc
mov
icebp
jg
xchg
lcall
js
mov
push
jns
cmpsl
xor
jg
loope
or
outsl
push
into
jg
nop
jmp
arpl
cwtl
pop
repnz
pop
push
ja
adc
test
aad
xchg
mov
add
sbb
xor
push
cli
jmp
inc
das
or
mov
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
call
push
sbb
adc
sbb
and
daa
push
in
fisubl
es
xor
sti
mov
add
loope
adc
ljmp
push
fbstp
push
and
ss
mov
pop
mov
xchg
je
adc
cwtl
pop
xor
xor
mov
pop
loop
and
ljmp
mov
pop
xchg
stc
faddp
decb
cmp
or
in
sub
cs
call
xor
jge
pop
cmp
aam
pop
fnsave
aad
push
cmp
xor
fwait
sub
fwait
mov
cltd
push
sti
roll
mov
ss
push
rolb
lret
cmp
fisubs
dec
pusha
or
loopne
ja
xchg
jo
insb
inc
cmp
fnstcw
jnp
push
repnz
out
fisubrl
add
into
pop
ds
xchg
sub
fs
repnz
hlt
lcall
fwait
xchg
and
cmp
xor
out
jecxz
gs
xchg
pop
scas
scas
loop
adc
mov
mov
xchg
push
mov
enter
xchg
adc
pop
test
dec
test
jo
arpl
adc
pop
sub
xchg
out
add
and
xlat
mov
inc
clc
pop
xchg
lea
jge
mov
add
rclb
pop
in
push
mov
sbb
aam
and
aam
lods
pushf
lret
xchg
hlt
or
mov
mov
pop
into
sbb
in
sbb
jns
cmpsl
sbb
mov
and
mov
jbe
movsl
shrl
sar
and
ja
cmp
mov
mov
cmp
pop
xor
push
add
aam
and
jp
mov
sbb
imul
cmpsl
sub
cld
fsubp
sbb
aas
adc
idivb
dec
dec
cli
cwtl
dec
arpl
stos
iret
pop
sti
inc
enter
loop
and
inc
and
xor
outsl
sbb
pop
das
mov
sub
or
adc
mov
mov
jg
arpl
add
xor
or
jmp
jg
outsl
lret
mov
test
int3
stos
nop
mov
jmp
mov
iret
push
rcr
cltd
push
rcrb
iret
add
mov
in
fmull
sub
lcall
mov
imul
dec
icebp
cmp
orb
movsl
mov
mov
adcl
notb
cmpsl
and
and
xchg
incb
test
jecxz
mulb
cmp
into
xor
jnp
mov
xchg
bound
mov
jp
inc
stc
test
and
jne
ret
lret
fists
int3
das
in
imul
and
or
call
incl
cmc
adc
push
out
jae
adc
test
adc
pop
mov
cmp
mov
scas
pop
sub
clc
fs
and
or
cmp
outsl
jnp
aas
xchg
lcall
or
ss
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
lahf
pop
cmpsl
mov
and
sbb
imul
push
xchg
cmp
dec
mov
sub
xor
and
lret
xchg
add
mov
jno
or
and
popf
xchg
sti
xor
or
gs
daa
imull
and
pop
loope
sti
dec
jnp
fisttpl
aaa
dec
xor
pushf
jb
inc
loopne
dec
add
repnz
jecxz
mov
dec
or
sbb
lret
inc
popa
mov
jae
fisubs
out
sbb
sbb
leave
and
call
out
push
add
add
gs
mov
jae
jns
js
sbb
jg
divl
loope
hlt
insl
hlt
repz
cmp
mov
cmc
cltd
push
test
add
or
dec
mov
push
xor
popa
adc
push
mov
inc
adc
fnsave
xor
inc
fwait
push
and
cmp
stos
pop
adc
xchg
notl
je
pop
lods
pop
adc
bound
jge
popf
xor
scas
jae
dec
sbb
into
jp
mov
push
sti
mov
aam
ret
mov
xor
sub
lock
sbb
mov
enter
and
mov
adc
lods
popf
sub
or
xchg
loopne
adc
movsl
sub
push
mov
inc
lret
aam
inc
jnp
into
add
inc
xlat
mov
dec
cmp
pop
fistps
in
pop
js
out
jb
mov
dec
loopne
movsl
push
jp
cmp
imulb
icebp
add
xchg
ror
mov
adc
add
lcall
out
cli
aaa
sahf
int
mov
sub
adc
mov
dec
pop
sbb
xor
mov
mov
lret
adc
out
test
enter
call
in
lret
sti
jne
hlt
dec
faddl
push
mov
sti
lea
mov
push
orb
jecxz
inc
jp
lret
push
sbb
mov
sub
testb
popa
mov
sbb
cmpsb
cld
popa
outsl
sub
fcoml
rep
dec
xchg
mov
clc
mov
xchg
jae
add
aaa
jle
fcmovnbe
add
mov
cmpsb
arpl
dec
adc
dec
pop
and
mov
jbe
pop
and
sbb
add
movsl
loope
pop
dec
out
clc
push
insl
push
call
sarl
call
jb
insl
ss
jne
ss
push
iret
jno
adc
and
mov
outsl
nop
and
movsb
lret
and
jmp
shll
push
imul
push
std
je
lret
pop
push
or
xchg
ret
cmpsl
mov
rclb
mov
xchg
mov
adc
adc
mov
jbe
cmp
and
rcr
mov
pop
sub
inc
shlb
push
xor
cli
adc
jbe
pop
inc
es
dec
cs
sahf
inc
outsb
mov
mov
orb
and
fwait
mov
dec
mov
and
cmc
shll
inc
mov
test
push
jg
add
cwtl
cmp
jnp
pop
mov
add
sub
pusha
dec
popl
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
ja
push
stos
js
push
sbb
adc
sbb
pop
daa
aam
mov
stc
arpl
lods
mov
mov
cwtl
in
es
inc
pop
sbb
xchg
push
push
int
dec
jno
fsubrp
dec
mov
out
mov
sti
fnsave
xchg
daa
sbb
rsm
daa
and
lods
or
sbb
cld
xchg
mov
or
je
adc
lods
mov
outsl
push
cwtl
sar
adc
repz
push
in
mov
test
pop
jle
iret
hlt
lea
sbb
lret
outsl
jae
rol
enter
aas
negb
xlat
in
lds
jg
test
in
mov
mov
in
adc
dec
cmp
inc
lods
inc
xor
rep
fsts
sahf
enter
gs
roll
dec
mov
or
lods
pop
sub
inc
sbb
and
shll
sbb
push
popf
xlat
lret
add
xor
jo
rcrb
jl
into
pushf
sbbb
sub
into
sbb
fistpll
into
sbb
out
out
add
in
in
xlat
mov
loopne
out
and
inc
pop
pop
inc
xchg
mov
push
test
mov
or
fsubr
sbb
enter
nop
iret
xchg
test
push
in
jae
iret
mov
mov
sub
add
stc
clc
add
sub
dec
dec
jge
es
dec
iret
movsl
push
arpl
and
dec
add
lods
sbb
jmp
lret
pop
roll
jo
jnp
or
push
sub
jbe
cmp
sub
pop
dec
mov
sbb
add
mov
mov
fadd
push
push
jns
shll
js
leave
movsl
jae
outsb
xor
andb
jno
jmp
fimuls
inc
pop
rcrl
and
inc
sbb
push
in
or
std
popa
aas
lock
ret
rol
loope
out
fidivl
pop
imul
mov
lcall
dec
sbb
or
lods
xchg
out
fbstp
lock
mov
sub
mov
aam
cmc
sbb
int
pop
leave
rcrl
add
sarl
and
roll
out
movsl
xor
push
xchg
mov
cld
and
xor
mov
loop
lcall
test
xor
or
mov
mov
inc
dec
jmp
icebp
test
xchg
xchg
or
or
jno
cmp
daa
xorl
push
out
sarb
lret
push
leave
xchg
sub
jb
ss
fldenv
in
ja
push
lea
imul
sbb
insb
xor
cmpsb
mov
pop
inc
cli
icebp
idivb
add
movq
jge
js
sub
inc
push
or
adc
sub
and
shl
jg
aaa
cmpsl
sbb
pop
pop
outsl
sbb
loopne
ds
test
xchg
lds
pop
sub
xchg
pop
or
push
adc
xchg
clc
mov
pop
lcall
movsl
in
sbb
jb
repnz
xchg
xor
mov
pop
test
out
or
mov
sbb
pop
stos
imul
call
lock
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
test
push
sbb
adc
sbb
mov
jg
mull
mov
call
or
push
cmpsb
ja
cld
sub
mov
pop
mov
cwtl
mov
cmpsl
je
fwait
push
jg
or
mov
mov
cmc
iret
shufps
mov
mov
pop
mov
popf
sbb
pop
cli
push
adc
jp
fstp
movsb
test
repnz
mov
add
cwtl
insb
shll
int3
fidivrs
mov
shll
rcll
jecxz
daa
sub
and
mov
sbb
ljmp
add
stos
jbe
shll
lret
scas
and
std
xchg
lcall
add
in
inc
les
popa
pusha
xchg
xor
mov
jne
inc
xor
les
and
dec
inc
les
dec
imul
jnp,pn
sbb
ss
and
cmpsb
xchg
push
or
pop
mov
test
addr16
or
pop
adc
addl
shrl
pop
add
xchg
sbb
stos
xchg
push
std
int3
popa
or
jno
xchg
cmpsl
inc
cmp
sub
mov
push
movsb
mov
jnp
adc
push
lret
sahf
dec
stc
fsubl
in
sub
push
into
sub
mov
mov
jno
jbe
jg
or
lcall
sbb
cmpsb
into
loopne
xchg
dec
fmulp
cltd
outsl
cli
xchg
cmpsb
outsb
or
into
sub
imul
outsb
fcmovnbe
sbb
scas
mov
outsl
fs
dec
lds
jle
sbb
bnd
add
push
dec
jo
rclb
jnp
test
scas
scas
mov
dec
inc
jns
xchg
movl
dec
cmp
leave
lds
mov
sub
adc
xchg
dec
pop
jge
add
pop
mov
mov
jno
stos
and
popa
jecxz
lcall
mov
lock
xor
addr16
or
inc
push
pop
pushf
and
test
lods
cmp
jmp
popf
pop
mov
jbe
pop
lcall
int3
in
movsl
insb
add
roll
cld
xchg
roll
or
pop
and
dec
xor
xor
or
push
call
sbb
xchg
mov
adc
cmpsb
in
mov
jno
add
ret
mov
pop
adc
sbb
inc
cmp
idivl
lcall
jecxz
xchg
add
aas
inc
divl
xchg
push
stos
dec
sti
fidivl
inc
xchg
pop
addr16
ljmp
mov
ds
loop
push
xor
pop
imul
and
and
stos
jae
in
push
nop
or
cmp
in
cwtl
int
mov
fisttpl
push
enter
inc
sbb
popf
jbe
sbb
aam
arpl
xor
sub
insb
and
mov
enter
sub
xlat
adc
push
mov
jge
pop
and
cmp
out
cli
inc
sbb
or
mov
xor
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
loopne
push
jle
jns
sbb
adc
sbb
repnz
cltd
fdivs
hlt
mov
mov
jmp
sbb
sbb
fsubrl
std
cmp
pop
or
push
in
es
mov
pop
xchg
inc
int
test
movsl
test
jno
xchg
push
leave
xchg
imul
pop
mov
mov
jp
push
xor
icebp
mov
nop
adc
stos
push
jbe
xchg
pop
lods
arpl
cltd
xlat
jmp
dec
dec
and
nop
fldenv
ret
lahf
xchg
notb
or
pop
xchg
call
imul
xor
shr
mov
push
dec
adc
lea
xchg
stos
adc
in
xchg
leave
mov
adc
xor
ljmp
cmp
pop
rcl
jle
mov
add
lret
loop
pushf
sub
out
subb
pop
fcomps
outsl
mov
jae
adc
inc
push
jo
ret
sub
xchg
jp
xchg
jmp
insl
jge
dec
push
mov
loop
test
loop
fwait
adc
rcrb
stos
lahf
cmpsl
or
push
flds
push
lock
je
rcr
and
push
add
jl
cmc
push
stos
shrl
or
pop
xor
es
clc
test
lret
in
test
inc
inc
xor
dec
aaa
xor
pop
add
sar
dec
mull
cmpsl
int
out
out
mov
jl
arpl
or
xchg
xor
cmp
xor
das
outsl
arpl
pop
and
subl
arpl
jne
dec
das
sub
adc
dec
je
add
adc
and
fistl
or
into
cli
in
sti
mov
or
and
xchg
rorl
and
inc
das
out
es
pop
xor
add
mov
pop
add
cmp
sbb
jge
stos
mov
pop
cmp
rclb
pop
xchg
repz
sub
push
pop
out
dec
jns
jge
js
leave
std
and
orl
mov
leave
test
mov
je
cltd
pop
jns
shr
push
or
cmc
mov
jp
mov
aaa
outsb
int
dec
inc
adc
push
sbb
fcomps
ljmp
ss
push
inc
sub
call
jnp
inc
ret
cltd
xchg
sbb
adc
cmp
xchg
jl
push
scas
dec
fbstp
dec
xchg
pusha
enter
lds
iret
cmp
enter
or
fmull
jmp
push
xor
ds
loope
sub
inc
mov
sbb
je
aam
repz
pushf
icebp
je
cmp
rorb
push
vpcomq
test
sti
adc
xorl
jl
outsb
xchg
test
gs
fcompl
fs
pop
jmp
gs
push
push
es
lahf
jle
ss
sbb
shrl
dec
mov
push
push
mov
test
add
jg
cmc
xchg
or
popf
add
xchg
idivl
mov
pop
adc
lcall
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
xor
push
sbb
adc
sbb
dec
loope
and
js
fldl
fwait
jge
lea
mov
jl
jp
mov
adc
adc
imul
or
mov
dec
hlt
leave
cvtps2pd
ret
inc
dec
xlat
pop
cmpl
rcll
dec
cli
mov
xlat
and
xchg
xchg
jno
xchg
addb
mov
ret
jbe
in
sub
xor
daa
push
ds
push
sub
sbb
sbb
push
cltd
adc
mov
dec
jnp
mov
fisttps
xchg
mov
inc
xchg
dec
push
ss
push
out
pop
mov
push
inc
sbb
std
call
inc
mov
pushf
fisubs
pop
sub
cli
ja
and
mov
sti
rcl
jnp
push
cltd
cld
sub
out
sub
fucomip
shll
jno
dec
cld
push
imul
mov
or
int3
mov
push
mov
addr16
push
fucomip
xor
fimull
jno
jle
jne
push
setg
scas
movlps
pusha
push
cmp
or
ss
lahf
mov
xchg
or
clc
cmpsl
leave
mov
lods
or
xchg
sbbb
push
pop
dec
popa
gs
fsubl
xor
push
shll
lcall
es
pop
inc
rorl
and
aad
cmp
push
sub
and
xchg
ret
push
pop
add
sub
pop
inc
js
xchg
jle
test
mov
sub
sarl
inc
ss
pusha
xor
into
mov
jle
mov
cmc
inc
out
cwtl
dec
xor
sbb
pop
mov
xor
inc
test
cmp
scas
pop
pop
sbbb
xchg
inc
sub
rcrb
push
xchg
test
inc
rorl
sbb
out
xchg
cli
pop
push
mov
lods
dec
inc
nop
mov
ds
sub
or
adc
andl
pop
movsb
enter
push
lret
movsl
cs
or
push
movsl
mov
ds
pop
dec
add
cwtl
and
sub
mov
adc
dec
nop
dec
out
xlat
mov
aam
daa
or
pop
aad
xchg
loop
es
xchg
or
mov
leave
dec
add
push
or
jp
cmp
test
sahf
pop
daa
lcall
inc
repz
push
jno
cmpsl
xchg
mov
lahf
jecxz
arpl
add
inc
mov
push
sub
inc
imul
pop
aad
pushf
xchg
jns
sbb
iret
loopne
scas
mov
pop
in
sbb
xor
and
mov
or
shll
arpl
idiv
sub
sub
fistpll
xor
addr16
lcall
sbb
filds
mov
out
jge
jne
cld
push
cmp
cli
dec
out
js
inc
jmp
inc
outsl
or
sbb
scas
mov
pusha
pop
xchg
adc
popf
mov
and
movsb
push
and
imul
ja
mov
icebp
mov
lea
bound
lret
xor
mov
fnstcw
es
inc
mov
push
repnz
leave
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
in
jge
mov
adc
sbb
into
rcrl
cs
fcomps
and
movnti
into
mov
inc
std
ds
out
addr16
mov
stos
sbb
std
push
sub
rcll
scas
repnz
imul
aad
push
aaa
sub
xchg
gs
out
int3
cmp
andb
add
inc
adc
push
test
cmp
repz
xor
mov
sahf
mov
sti
inc
lods
push
pop
dec
push
mov
add
test
daa
push
or
mov
int
psubusb
rcrb
adc
notl
dec
cmp
cmp
das
xor
jl
mov
mov
clc
add
adc
arpl
mov
mov
test
sbb
and
push
add
fsub
and
movsl
push
call
dec
lds
ret
stos
or
repnz
jl
jmp
mov
mov
lahf
jne
mov
scas
outsb
and
frstor
sub
pusha
pop
xchg
stos
popf
pop
sbb
push
mov
scas
es
dec
cltd
decl
fmulp
testb
int3
xchg
xchg
sub
push
add
pop
xchg
add
jg
fs
stos
fnsave
push
push
enter
adc
les
jbe
or
xlat
inc
outsb
pop
xor
xchg
sqrtps
sbb
xor
xor
loope
mov
cmp
jb
shrl
adc
inc
mov
test
jecxz
in
rcrb
dec
inc
aaa
jmp
lock
sbb
jp
movsb
mov
mov
or
nop
mov
inc
cmpsl
xrelease
mov
xchg
sbb
jp
call
cli
sbb
cld
mov
movsb
inc
stos
and
cmp
dec
mov
mov
lret
sbb
add
cmp
call
mov
adc
test
shrl
or
cmp
push
add
outsl
xchg
or
imull
fstl
push
mov
adc
aaa
sbb
bnd
rcrb
sub
inc
into
mov
sar
jge
out
sbb
fisubs
lret
jecxz
or
insb
out
mov
and
mov
in
lcall
and
data16
sbb
gs
out
jmp
sarb
lret
cmpsl
sub
shlb
dec
mov
jmp
scas
cltd
dec
push
cmp
out
jmp
xchg
fcmovb
or
pop
fldenv
ds
mov
mov
out
push
inc
mov
pop
or
and
repz
mov
call
rcrl
push
add
into
mov
sub
pop
jecxz
sub
pusha
sbb
xlat
pshufw
idivb
push
push
push
mov
jge
mov
pop
pop
js
cli
xor
dec
fstps
sti
mov
adc
shll
mov
pop
dec
dec
jmp
mov
pop
or
movl
push
popf
addb
pusha
mov
push
ds
sti
xor
outsl
sbb
xor
dec
sub
popf
mov
iret
pop
pop
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
pusha
sub
stos
stos
arpl
sbb
adc
sbb
pop
daa
pop
xchg
enter
icebp
aad
scas
scas
jle
es
sahf
pushf
push
sub
xlat
xor
test
js
push
aam
and
pop
and
jecxz
xor
cmp
xchg
cmp
imul
out
std
push
rcrb
inc
aam
cmpsl
inc
mov
mov
fldl
mov
bound
sub
and
push
push
or
mov
sbb
repz
test
inc
adc
lret
es
dec
sub
ds
cmp
push
lret
lods
mov
or
int3
popa
nop
test
add
pop
mov
inc
jle
adc
data16
jg
test
push
mov
sbb
mov
cmpsl
jo
adc
fsubrl
jno
pop
pop
sbb
or
je
test
out
imulb
jnp
mov
push
mov
outsb
je
xchg
int
xchg
outsl
fidivrs
je
lock
mov
sbb
lcall
adc
stc
out
fwait
iret
lahf
negl
arpl
test
fs
scas
test
aad
push
or
fwait
loopne
jne
pop
es
or
mov
cmp
jle
xor
popa
lahf
xchg
xlat
cmp
scas
jl
sub
inc
sub
pop
js
dec
test
fst
in
std
daa
dec
jb
push
add
dec
jmp
gs
xchg
mov
jo
cltd
loopne
addb
imul
pandn
xor
cmp
xor
sub
cmp
adc
mov
in
add
dec
lds
cmp
int3
fnstenv
pusha
fwait
dec
mov
popf
add
mov
scas
push
pop
in
cmp
cmp
dec
das
push
loopne
shl
loopne
ja
pop
mov
jns
mov
sub
jg
sub
mov
jmp
es
jp
loopne
in
lea
sub
les
int
decb
sub
mov
fcomp
jl
sub
fwait
adc
sbb
xor
xor
cmpsl
sbb
and
clc
cmp
addr16
out
push
lret
enter
out
nop
int
cs
fwait
clc
mov
mov
jle
cmp
push
leave
call
fs
ja
test
pop
adc
adc
dec
inc
fnstsw
fldenv
imul
loopne
lock
mov
test
jp
cltd
push
bound
fistl
aad
add
push
push
lea
adc
jbe
push
stc
add
rolb
sbb
and
mov
test
loopne
sti
in
lds
or
std
jmp
adc
adc
and
loope
sbb
push
push
adc
sbb
ret
pop
push
or
lock
xchg
and
shlb
pushf
cmp
add
inc
sbb
xchg
fldenv
mov
mov
cmpb
adc
mov
lods
out
xchg
inc
cli
cs
clc
and
xlat
push
push
fcompl
push
or
shlb
adc
arpl
mov
jle
and
dec
cmpsl
shlb
mov
lret
xchg
fstpt
dec
mov
sub
repnz
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
push
xor
pop
push
sbb
adc
sbb
xchg
xchg
and
shl
js
adc
dec
sbb
sti
std
insb
movsl
dec
push
test
cli
or
xlat
jmp
movsb
mov
or
out
ret
adc
mov
xchg
add
mov
sub
idiv
dec
outsl
mov
cmp
shll
fidivs
lea
inc
fadd
mov
adc
mov
fistpll
mov
or
jecxz
mov
ja
push
lods
rep
dec
push
add
mov
and
and
mov
bt
bound
sbb
test
xchg
mov
jnp
mov
dec
dec
push
ret
out
xchg
fisubl
insb
add
sbb
cltd
dec
add
je
ljmp
out
fwait
in
mov
push
inc
fs
jbe
sub
xchg
xchg
insb
sbb
jo
cmc
shld
xchg
cmpsb
std
cs
mov
repz
out
adcl
and
lock
push
xor
mov
ret
mov
mov
ret
pop
jg
pop
cmovge
scas
push
adc
mov
jl
cmp
mov
ds
adc
icebp
std
jl
arpl
daa
cmp
stos
hlt
jmp
dec
fldl
fdivrp
daa
loop
mov
sbb
and
mov
xchg
pop
cmp
adc
repnz
mov
in
sbb
push
sub
daa
pop
mov
cmp
smsw
inc
cmp
repz
stc
mov
and
cmp
cmc
and
cmp
loope
xor
jns
sti
xchg
jbe
cmp
fcoml
lods
rcl
jp
lret
ficoms
pop
cmp
sbb
ficompl
mov
mov
and
shlb
stos
and
push
xor
imul
dec
fisubrl
sbb
leave
push
insl
jge
jmp
add
sbb
daa
sub
mov
xor
lahf
push
push
and
push
xchg
pop
adc
cmp
dec
repnz
and
jmp
mov
jmp
fstpl
in
jge
sub
ja
pop
fstsw
cld
mov
inc
ljmp
push
xor
loop
test
iret
cmc
hlt
aaa
push
ror
dec
push
pop
jnp
enter
outsb
pop
ret
lods
orb
jae
pushf
xor
lea
lahf
bnd
xorps
fadds
sar
inc
adc
xor
rolb
inc
movsl
mov
lret
jp
ds
int
jo
jnp
aas
xor
sub
inc
sbb
mov
lcall
jp
test
mov
push
xchg
pop
adc
call
iret
cs
jmp
popf
int3
jl
push
mov
sub
fdivrl
cmp
push
dec
fistpll
dec
mov
in
fwait
cmp
push
aaa
jmp
je
movsb
xor
addr16
mov
nop
jmp
movsl
test
mov
add
test
icebp
ret
xchg
pop
mov
inc
jo
pop
lock
ss
jno
imul
xchg
in
lock
shrl
jl
inc
push
mov
bswap
icebp
imul
sbb
decl
lea
test
incl
lret
call
test
std
decl
fbstp
add
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
into
cltd
mov
and
sbb
inc
or
filds
scas
mov
push
inc
aad
mov
sub
nop
push
inc
jb
gs
pcmpgtw
jno
enter
pop
jbe
sub
and
test
repz
addb
mov
ljmp
repnz
dec
jmp
jb
pop
test
mov
movsb
les
sahf
js
inc
xor
inc
mov
jp
in
push
jo
mov
enter
mov
daa
mov
cmp
adc
inc
jae
adc
cmp
test
rcrl
mov
pop
sbb
pusha
cli
inc
mov
addr16
or
sbb
jne
mulb
mov
xor
lea
pop
cmc
xor
adc
stos
add
shll
rcr
push
cmpsb
imull
lods
mov
xchg
pop
push
adc
cmc
fsub
and
pushl
xchg
or
in
mov
aad
sahf
lahf
cmpsl
insl
insb
pushf
cmp
cltd
jp,pn
hlt
imul
xchg
hlt
jmp
cmp
or
push
aam
loop
dec
jo
scas
aas
es
adc
mov
jecxz
ss
fisttpl
repnz
cli
das
fistpl
and
and
sahf
sub
cmp
mov
or
xor
int
mov
lcall
js
insb
js
lods
sar
mov
inc
adc
fs
cli
rcl
faddp
subb
xchg
in
lret
mov
pop
subb
jp
jle
dec
fadd
stos
xor
push
fldenv
mov
sbb
ss
push
jno
add
cmp
pop
push
cmc
push
cli
inc
je
mov
outsl
cmp
fisttpll
pop
lods
mov
inc
sti
rorl
or
xor
mov
imul
mov
arpl
inc
inc
dec
mov
fstl
mov
loopne
push
sti
jb
cltd
mov
in
dec
adc
aaa
inc
pop
sar
ret
mov
pusha
adc
in
xlat
cmpsl
cld
mov
imul
mov
ljmp
dec
cmc
inc
push
push
popa
mov
xchg
cltd
gs
add
cltd
mov
pop
imul
dec
sub
jmp
mov
pop
and
out
lds
fwait
jns
add
mov
sub
repz
mov
movsl
dec
mov
fsub
xlat
les
mov
xchg
sbb
fdivr
ret
mov
xor
mov
insl
xchg
or
stos
loop
jecxz
lahf
mov
push
in
call
add
push
jae
pop
xchg
cs
jmp
sbb
dec
lret
leave
jl
inc
outsb
clc
jge
incb
jnp
andb
inc
mov
orb
lods
dec
out
add
or
dec
push
cld
push
mov
ficomps
movsl
and
adcb
aaa
mov
sbb
fs
sub
adc
mov
stc
dec
dec
mov
loopne
cld
add
cmpsl
push
ja
movsl
mov
mov
test
xchg
mov
into
sub
push
and
mov
repnz
loop
std
cli
inc
or
lock
movsb
in
xor
stos
in
lods
pop
xlat
mov
fistps
jo
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
lods
xor
and
sbb
rcll
jle
pop
cmp
add
mov
cld
mov
insl
popf
sub
inc
sbb
ficoml
ja
frstor
sub
adc
lds
subb
push
add
jb
out
rcrl
lcall
pop
insw
je
icebp
inc
sub
pop
xchg
fisttpll
fstp
mov
sub
pop
movsl
in
sbb
xor
outsl
add
dec
add
repz
aam
repz
mov
sti
jbe
aas
xchg
mov
xlat
test
bound
test
mov
mov
mov
dec
outsb
mov
scas
lret
bound
popl
loope
imul
jo
das
mov
push
add
push
out
xor
ljmp
xchg
popf
xlat
outsl
cmc
dec
fisttpl
pop
xor
rcr
cli
push
xchg
lds
xor
jb
push
sbb
pusha
dec
sahf
shlb
rcrl
les
test
scas
lahf
adc
lds
mov
call
sbb
je
lock
shll
mov
xor
jp
sub
hlt
xchg
sub
ret
movl
cmp
in
pop
sub
in
int
mov
lods
mov
int3
movsl
pop
pushf
icebp
pop
mov
ficomps
das
sub
xchg
shr
filds
es
mov
aaa
das
std
decl
jae
popa
sti
lret
cmpl
xor
mov
rolb
das
jns
push
in
cmpsb
dec
add
xlat
xchg
loopne
xor
sub
mov
lods
in
jg
add
xchg
xor
sub
pop
lcall
cmpsb
push
and
mov
dec
fcmovu
lds
imul
sbb
jb
jae
xor
adc
dec
jle
mov
dec
jns
add
xchg
mov
pop
adc
or
pop
mov
cmp
xchg
adc
fstpl
sbb
mov
loopne
inc
clc
adc
jae
out
lahf
aad
mov
adc
pushf
int
clc
jl
jno
out
jbe
mov
pop
dec
mov
dec
movsb
daa
sbb
scas
adc
lods
dec
ficoms
pop
sbb
pop
rcll
mov
or
nop
jae
rcll
repz
mov
les
icebp
test
cli
xchg
out
cmp
mov
xchg
lret
xchg
sub
add
jbe
push
mov
cmp
jmp
xor
xlat
push
mov
addr16
inc
pop
push
and
clc
and
cmpsl
dec
shrb
ficoms
sub
out
jmp
negb
jae
adc
pushf
arpl
daa
movsl
popa
aas
push
fucomi
xchg
push
push
adc
lret
mov
movsl
mov
dec
sub
push
loop
std
icebp
int
or
mov
jb
inc
pop
into
sub
cs
adcl
xor
jae
loop
push
mov
inc
mov
ja
jmp
pushf
dec
ret
mov
xchg
mov
sbb
addr16
adc
iret
out
lock
addb
xorb
inc
pushf
or
loopne
jmp
cld
cmc
add
xor
adcl
clc
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
arpl
sbb
adc
sbb
xor
xor
lock
jl
es
hlt
pop
and
mov
mov
or
sbb
xor
dec
in
mov
test
in
mov
cmp
xor
push
maskmovq
and
xchg
testl
adc
adc
icebp
xchg
adc
lea
sbb
mov
or
xor
cmp
dec
adc
outsl
test
leave
mov
repz
xchg
cmp
jns,pn
push
inc
xlat
pop
wbinvd
jns
pop
roll
in
push
pop
int3
shrb
mov
mov
negb
cvttps2pi
pop
pop
sbb
test
test
out
jecxz
orl
adc
arpl
cmp
repnz
or
popf
sahf
lock
sub
dec
xchg
pop
jmp
inc
mov
jle
das
push
xchg
js
ret
lock
dec
iret
xchg
imul
imul
adc
repnz
mov
xor
sub
aam
or
xchg
repz
sbb
pop
add
lock
in
push
lcall
mov
sbb
mov
cmpl
jnp
sub
sbbb
pop
outsb
jecxz
iret
pop
ret
inc
subl
decb
dec
test
adc
or
in
inc
xchg
daa
add
cmpsl
jno
or
xchg
aaa
xlat
aam
inc
dec
jbe,pt
xlat
pop
loope
dec
call
or
push
outsl
adc
cmpsl
fnstcw
nop
int3
lods
loope
cmp
xbegin
xor
mov
sbb
or
jns
sbb
js
jbe
mov
les
lock
adc
out
xor
adc
mov
jno
popf
mov
je
adcl
xlat
cmp
fs
dec
clc
and
je
mov
or
jp
xor
lock
fwait
sti
sub
std
bound
nop
lods
mov
mov
shlb
adc
push
add
adc
xchg
push
lock
icebp
movsl
negl
sbb
push
xchg
test
or
dec
push
mov
fpatan
push
addr16
jg
jle
je
loop
fs
cmp
push
push
mov
mov
scas
jl
movsl
pushf
negl
inc
mov
fstpl
es
inc
stos
push
shll
loopne
repz
into
mov
fstps
add
xor
daa
mov
std
jae
mov
fstp
jl
pop
ss
pop
and
js
icebp
imul
mov
sbb
jno
leave
daa
xor
xor
pusha
mov
jae
cltd
pop
push
dec
adc
movsb
mov
int
cli
arpl
ret
sbb
in
ret
jmp
mov
rorb
xchg
dec
lret
daa
and
cmp
scas
test
xchg
js
push
push
dec
subb
je
mov
mulb
or
in
sbb
outsl
sbb
mov
push
pop
mov
sub
je
cwtl
mov
cwtl
xor
push
and
decb
clc
fwait
or
shll
xor
sub
lods
dec
int
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
sar
test
cmp
mov
inc
add
mov
pusha
cmp
add
jle
xorl
nop
cmpsb
outsl
aad
mov
dec
iret
adc
imul
jmp
jb
bound
inc
inc
or
ss
and
out
pop
fcompl
dec
mov
cltd
outsb
sbb
aas
sti
fidivl
pop
xchg
repz
mov
fnstenv
or
test
cmpsl
in
sbb
xor
cmp
pop
pop
out
rcr
outsb
lock
jg
inc
cltd
insb
mov
mov
push
push
add
push
xor
mov
shrb
in
ja
mov
enter
mov
fidivrs
adc
stc
push
cmp
cmp
dec
rep
adc
jge
or
imul
xor
fucomi
fldenv
xlat
or
or
dec
pop
push
mov
je
shlb
mov
shll
ret
mov
mov
fimull
lds
push
sbb
cltd
dec
enter
sub
pop
sbb
jp
mov
call
jge
mov
jle
ficoms
popf
loop
jle
je
pop
jno
jecxz
mov
mov
dec
pop
in
sbb
and
sar
cmpsb
jl
shl
xor
inc
inc
push
mov
xor
mov
or
dec
loope
bnd
add
inc
dec
mov
jp
stc
or
loopne
rorb
fbld
aaa
je
cli
or
jbe
or
xor
xchg
and
cmc
xchg
and
lret
insl
aaa
pop
xchg
repz
int
sub
xor
imul
iret
jge
mov
add
sub
and
pop
rcr
cmpl
dec
adc
data16
js
int
xchg
flds
aaa
pop
stc
push
inc
dec
mov
push
push
out
data16
test
popf
sbb
dec
sbb
xchg
sub
hlt
test
test
mov
rol
lds
dec
or
inc
cld
dec
scas
into
cmp
pop
push
sbb
and
aaa
add
pop
cmp
inc
shl
bound
mov
sbb
orb
ljmp
add
rcrl
int
and
imul
cli
xor
movsb
loope
stos
stos
jmp
sbb
adc
movsl
inc
cmpsl
jae
adc
cmp
cli
dec
sub
jnp
clc
or
cmpsb
out
sbb
sbb
sbb
lea
push
push
lods
cmp
mov
nop
arpl
rolb
scas
ja
mov
shll
movsb
test
mov
mov
cmp
push
fstp
jl
jno
lret
dec
lret
imul
mov
aad
inc
js
push
idivb
test
or
xlat
jno
push
push
sub
rorl
arpl
andb
add
ds
or
push
aaa
pop
shrl
mov
fistpl
or
clc
inc
setbe
aad
sbb
roll
and
lahf
jl
sbb
cld
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
jnp
idivl
jmp
xchg
pop
dec
fcoml
or
xor
ret
pop
sbb
lods
leave
or
hlt
mov
xor
inc
adc
jns
jecxz
jmp
inc
or
push
sbbb
or
or
out
mov
addr16
sarl
dec
cmp
add
mov
repnz
sbb
fnsave
or
sbb
arpl
aas
mov
subl
inc
lods
loopne
sbb
out
sbb
mov
sub
and
adc
add
inc
adc
cwtl
sub
sbb
and
push
call
das
cmpsb
hlt
mov
and
or
adc
fists
jle
out
in
shrl
cmpsb
testb
stos
fcoms
xlat
out
mov
sete
repnz
and
xchg
sti
jne
fadds
gs
das
or
cltd
shll
and
mov
pop
push
incl
sbb
aaa
loope
mov
jne
mov
sub
xchg
das
das
gs
fnsave
inc
push
ss
xchg
aad
lcall
pusha
jmp
sub
xor
xchg
push
xor
cmpl
jns,pt
hlt
inc
fcoms
lods
xchg
add
andl
jl
cmpsb
mov
xchg
idivl
xor
mov
push
dec
sbb
xchg
xchg
loope
insl
and
in
sbb
xchg
push
xor
cwtl
xor
cli
daa
loop
outsl
xchg
sar
pop
mov
aas
jl
xor
sbb
imul
imul
es
jle
insb
push
lret
cli
and
fs
rcl
cli
arpl
dec
in
jmp
ret
dec
mov
xor
enter
ror
inc
pop
ds
push
rclb
pop
loope
push
sub
jno
mov
outsb
bound
jge
jo
xor
push
lock
sbb
movsb
jne
adc
dec
add
inc
or
shlb
jmp
shll
jno
outsb
or
xor
pop
int
imul
xchg
sbb
push
xor
xchg
or
pop
jns
cmp
mov
mov
mov
or
shll
mov
leave
pop
in
cli
das
mov
pop
and
xchg
aam
into
xlat
aaa
adc
sub
inc
clc
ds
divl
or
mov
inc
xor
xor
pop
push
xchg
add
mov
fnstcw
lret
adc
loopne
adc
stos
icebp
push
xchg
aam
fimull
lret
setbe
or
pop
shrb
int
sub
pop
ret
in
daa
mov
cmpsl
movsb
hlt
lret
inc
xchg
insl
out
mov
push
xlat
sbb
leave
bound
lock
jp
mov
ficomps
daa
int3
jb
dec
dec
fisttpl
mov
mov
dec
loop
adc
sbb
inc
lret
pop
das
daa
lret
push
mov
fnstsw
mull
imulb
call
test
mov
in
push
incb
jne,pn
push
je
lahf
sub
add
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
dec
jae
icebp
xor
sbb
adc
sbb
fwait
xchg
mov
sub
addl
xor
sub
mov
iret
sbb
add
mov
lahf
out
sti
mov
sub
jecxz
insb
std
mov
fistpl
test
in
or
imul
inc
stos
and
idivl
mov
fwait
mov
frstor
jle
xchg
or
mov
out
cmp
lahf
inc
fstl
xchg
das
push
mov
lods
xor
outsb
movsb
lock
xchg
les
aas
cmpsl
mov
scas
push
jg
clc
or
inc
dec
mov
addr16
mov
push
jmp
inc
sbb
mull
jae
mov
xchg
loope
push
xchg
daa
fwait
xor
andb
or
xchg
fimull
cld
lods
xor
stos
movsb
xor
lahf
jno
addb
jl
inc
sbb
cmp
xchg
sub
pop
arpl
cld
inc
cmp
scas
or
ljmp
mov
xor
or
jo
add
pop
mov
xchg
jno
fwait
bnd
lods
xor
dec
mov
test
jne
jg
arpl
sub
sbb
aad
xor
pop
sbb
hlt
lahf
sbb
mov
clc
movsl
ja
fistpll
mov
cltd
mov
mov
sbb
mov
fcmovb
nop
push
std
in
adc
aam
fstpl
sub
repz
and
mov
mov
or
aam
and
push
push
fwait
jg
lock
jmp
mov
icebp
push
outsl
shrb
notb
fs
mov
xchg
in
loop
xchg
loopne
inc
pusha
adc
je
lcall
pushf
xchg
out
rcr
xor
addr16
out
mov
push
arpl
sub
sbb
jmp
mov
mov
mov
mov
add
test
ret
inc
xchg
inc
xchg
mov
icebp
mov
cmpb
xor
xlat
lock
adc
ljmp
pop
push
sbb
gs
popa
mov
pop
repnz
mov
xor
or
mov
mov
scas
es
pop
or
call
les
dec
lcall
push
dec
push
ds
and
jecxz
rorl
shrl
cmp
adc
lcall
mov
inc
sub
inc
loopne
bound
pusha
fs
push
stc
nop
sbb
enter
pop
rcll
out
shll
cwtl
cltd
pop
dec
xchg
sbb
das
movsb
mov
pop
cwtl
jle
inc
adc
fsubrl
pop
mov
jl
jno
stos
js
ret
cmp
insl
mov
pop
add
push
int3
andl
stos
test
dec
mov
sub
add
push
or
std
add
push
aas
jge
add
and
icebp
mov
dec
call
inc
add
test
adc
dec
pop
sbb
adc
or
pop
fdivs
mov
mov
nop
ljmp
push
repnz
ret
movsb
movsl
jle
enter
mov
and
addr16
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
sub
push
sbb
adc
sbb
lea
xor
push
push
negl
jg
popa
loop
in
in
ljmp
imul
dec
xchg
rcrb
sti
rolb
iret
repnz
enter
and
inc
adc
adc
or
call
fdivl
adc
cmp
add
jbe
jne
or
mov
aas
lea
mov
testb
cmp
std
fadd
adc
push
dec
and
pop
push
xchg
mov
mov
xorl
ds
mov
sti
and
and
mov
fistl
and
out
fsts
jae
sbb
subb
sub
add
xor
loopne
cmp
xor
jg
stos
cwtl
iret
cltd
test
adc
popa
mov
stc
gs
clc
push
or
add
shl
jl
ljmp
pushf
lcall
sbb
mov
push
test
sbb
scas
insb
cwtl
or
xor
jle
sbb
mov
fadds
xchg
aas
aam
adc
push
dec
or
sbb
mov
sahf
ljmp
push
inc
push
cltd
adc
mov
mov
es
dec
inc
cmovg
sarl
jns
sub
test
fwait
mov
xchg
aad
pop
and
bound
jl
add
and
cltd
cmp
cmpsb
jg
inc
xor
mulb
mov
outsb
mov
mov
inc
mov
pusha
shll
and
jecxz
xchg
jo
icebp
sbb
cs
test
or
fwait
xor
sub
mov
sub
sub
dec
aad
rep
jnp
push
rcll
and
push
icebp
jae
adcb
cltd
ss
das
rorl
push
das
arpl
cli
fdivp
mov
fdivrl
push
mov
dec
lds
insb
cmpsb
mov
popa
jne
inc
sub
das
push
mov
aaa
sahf
pop
pop
rorl
repnz
divb
jg
mov
dec
and
mov
mov
insl
mov
lcall
daa
fs
xor
aam
aas
jae
insl
pop
jge
cmp
jns
xor
loop
push
cld
bnd
pop
pop
hlt
aaa
test
test
repnz
sti
icebp
imul
xchg
push
cwtl
push
dec
sarb
in
mov
or
stos
jb
adc
loop
out
or
subl
sbb
cmpsl
imul
mov
mov
out
bound
pop
incb
fmulp
or
mov
mov
cmpsl
lods
and
hlt
mov
cmp
cmc
int3
cs
aaa
and
ss
js
enter
pop
sbb
sub
test
int
cmpsl
push
push
dec
cmp
mov
mov
daa
imul
aam
in
push
inc
insb
pop
pop
rcrb
loopne
fdivrl
les
mov
lahf
xchg
mov
add
dec
push
imul
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
jo
and
sbb
xchg
push
clc
cs
lcall
xchg
and
lret
popf
roll
iret
or
xchg
inc
inc
cmp
imul
and
repnz
into
mov
jp
in
and
push
int
in
sub
pop
pop
cli
mov
inc
arpl
sahf
mov
inc
pusha
push
dec
or
mov
arpl
ret
cmp
rcrl
mov
mov
xchg
mov
adc
movsl
jno
fldt
mov
xlat
out
pop
and
aas
test
imul
popa
or
shlb
dec
inc
dec
mov
mov
mov
icebp
add
sub
cmp
ret
mov
call
icebp
lock
xor
out
push
mov
scas
xor
jno
push
aaa
xchg
nop
push
mov
mov
dec
loop
divl
or
jns
adc
movsl
stos
adc
rclb
mov
aad
or
dec
hlt
pop
out
xchg
clc
stc
popf
or
clc
sbb
cwtl
mov
imul
mov
out
lcall
and
daa
addr16
call
mov
hlt
fld
pop
pushf
mov
cmc
mov
lahf
jle
cmp
add
std
shrl
fcompl
push
std
dec
scas
shrd
inc
outsl
add
mov
add
adc
or
adc
mov
pushf
mov
lds
and
aad
sub
push
adc
testl
in
mov
pop
sbb
shl
es
cld
xlat
ja
xchg
repnz
iret
test
cmc
cmp
adc
sahf
jmp
popa
testl
movsb
jno
sbb
push
push
jo
repnz
dec
pop
in
hlt
xlat
mov
mov
fistps
pop
pop
or
pop
je
pushf
ds
dec
rcl
inc
inc
sbb
push
mov
inc
das
xor
xlat
in
add
adc
into
sbb
sbb
shrb
mov
mov
cmp
xchg
cmpsl
mov
mov
shrl
add
nop
loop
jne
pop
shr
dec
mov
popf
mov
dec
jle
cmp
loop
std
cmp
xor
mov
cmpsl
js
cmp
pusha
or
cli
or
nop
leave
out
cmp
sub
lret
loope
sti
pop
sbb
lahf
data16
jno
or
push
pop
and
dec
in
mov
xchg
das
push
pop
shlb
hlt
bound
mov
out
mov
jnp
cmp
add
xchg
aam
inc
mov
cs
mov
mov
pop
mov
mov
adc
leave
sub
sahf
popl
fidivrl
cmc
mov
pop
xchg
mov
je
or
push
push
rolb
hlt
test
push
add
jl
adc
xrstors
cmpsl
outsl
mov
sub
sub
cmc
lods
mov
mov
inc
pushf
pop
or
cmp
add
loop
jg
aas
sbb
hlt
xchg
pop
sar
xor
mov
in
and
outsb
adc
jae
adc
mov
mov
cmp
leave
outsl
sbb
sbb
lods
stos
push
cmovbe
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
dec
stos
xorl
mov
lods
das
aaa
mov
jne
jecxz
xchg
mov
shlb
inc
js
pop
adc
das
jno
xchg
inc
sub
aam
lods
inc
stos
xor
mov
xchg
mov
ja
fsubr
ds
je
cmp
mov
rorl
inc
out
call
cmp
daa
inc
iret
xchg
mov
xchg
inc
xor
sbb
cwtl
push
cmp
push
mov
and
push
outsb
imulb
repz
rcrl
cmpsl
push
loope
mov
cmp
fdivl
jg
outsl
arpl
test
cmc
rcrb
aas
testl
pop
pushf
adc
sbb
xchg
xchg
fnsave
sub
pop
lret
mov
not
cmp
mov
mov
mov
xchg
mov
test
inc
sbb
and
pop
shr
shll
mov
test
pminub
and
sbb
pop
cwtl
mov
inc
lds
andb
xchg
call
dec
xchg
cmp
sub
mov
push
insl
or
sub
shll
dec
cltd
adc
sarl
test
sub
in
jle
stc
add
mov
mov
sbb
imul
dec
cli
sbb
decl
out
loope
cs
lea
in
js
jg
sbb
test
jns
xchg
mov
push
jecxz
dec
sub
aas
mov
adc
mov
outsb
adc
out
sub
mov
push
sbb
cmpsb
mov
jbe
dec
addr16
fists
inc
push
int3
or
insb
push
pop
sbb
xchg
cmp
enter
andl
inc
or
lds
push
jge
clc
or
bound
arpl
sub
push
jns
ljmp
pop
cld
or
aam
jb
out
xor
aas
jg
call
inc
test
push
insl
loopne
push
inc
repz
std
mov
jo
rclb
push
rol
push
lds
push
aad
push
jne
inc
test
xor
scas
mov
mov
scas
and
pushf
rcll
push
xchg
ret
jmp
mov
xchg
add
aad
push
mov
and
mov
push
cmc
out
inc
je
mov
js
and
call
mov
shll
sub
movsl
fwait
pop
ds
aaa
pop
jno
sti
hlt
adc
in
je
jecxz
and
jnp
xor
mov
ljmp
add
loopne
aad
mov
lods
nop
push
orb
ljmp
ljmp
das
jp
lret
jns
ss
mov
mov
xchg
clc
dec
sbb
shll
pop
pop
adc
xchg
push
addr16
lret
xor
out
mov
xlat
push
mov
mov
iret
cmpsb
aad
or
sti
xchg
mov
insl
fstl
add
mov
nop
inc
ret
sub
fdivrs
pusha
inc
js
aaa
pop
ljmp
jb
mov
ja
pop
fs
jp
shl
mov
sub
dec
fsubr
jle
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
mov
sub
or
pop
data16
test
xor
pop
ds
cmp
jno
pop
xchg
add
xchg
js
sbb
push
add
sbb
and
xchg
mov
pop
push
movsb
es
cmp
jp
sbb
in
les
std
nop
ret
call
push
pop
push
jp
rcr
inc
adc
les
mov
mov
lea
and
push
mov
clc
cli
mov
addr16
fldt
xlat
mov
cs
loop
xchg
jl
xor
leave
mov
sub
lret
fcoml
mov
adcb
mov
push
imul
and
pop
insb
stc
popa
pop
movsb
mov
fnstsw
in
out
in
loopne
push
inc
je
hlt
mov
cmp
lock
push
mov
jo
cltd
lock
ret
dec
out
movl
clc
gs
xor
pop
inc
mov
jmp
mov
push
clc
adc
call
add
push
clc
ljmp
add
sub
lods
clc
inc
cmp
outsl
addb
jl
adc
push
pop
mov
push
pop
mull
dec
aad
xchg
jae
and
mov
ss
push
jmp
sbb
dec
ss
pop
shl
mov
mov
and
adc
or
adc
xchg
je
jae
or
xchg
cwtl
cmp
xchg
adc
ljmp
ret
stc
and
call
mul
adc
mov
xchg
das
outsb
lcall
dec
xchg
ror
jbe
adc
mov
mov
cmp
mov
and
outsl
insl
mov
sbb
dec
mov
push
xchg
ss
sbb
js
mov
test
dec
cwtl
movsl
pushf
in
xor
push
loope
jmp
push
lahf
cmpsb
pop
inc
xor
xchg
jmp
or
pop
dec
out
ret
jge
fists
dec
rorl
aaa
shr
cmpl
push
xor
adcl
mov
outsl
dec
adc
xchg
jno
and
and
cli
sub
fisubs
adc
test
jne
jbe
and
dec
inc
cmp
iret
jnp
out
cmp
das
pop
pop
dec
xor
push
std
inc
mov
jnp
bound
ret
xor
xchg
int3
mov
adc
pop
lock
pop
icebp
movsb
jecxz,pn
and
divl
adc
cmp
push
adc
cmpl
test
inc
lea
inc
cmp
insb
adc
js
mov
test
ljmp
jae
test
std
xchg
enter
pop
cmp
xchg
pop
pop
inc
dec
lret
sbb
add
loope
imul
iret
cmp
in
inc
fisttps
cltd
aad
or
aam
mov
inc
sbb
scas
or
iret
sbb
mov
jle
jl
jecxz
cld
push
mov
and
mov
movsl
lcall
adc
xlat
mov
sbb
push
dec
mov
mov
pop
into
outsb
shlb
jge
jnp
out
pop
rcll
dec
mov
mov
jno
aam
sub
cld
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
xchg
mov
sbb
adc
sbb
in
xor
data16
pusha
adc
movsb
in
insl
xor
mov
andps
cwtl
sub
out
push
lds
and
in
push
iret
movsb
call
push
or
push
cmp
lret
in
arpl
dec
add
and
inc
inc
outsl
stos
push
jecxz
push
mov
mov
lret
dec
cmpsb
js
xchg
dec
cmp
repnz
add
xchg
sub
divb
xor
scas
fistps
sahf
push
jge
sub
adc
out
dec
insb
ret
sbb
je
inc
outsb
add
mov
icebp
call
shll
imul
repz
roll
flds
push
cmp
cmp
iret
mov
test
or
push
bound
outsl
mov
cld
movsl
cmp
inc
push
insb
mov
fsts
xor
adc
out
pop
fimull
mov
orl
mov
sub
jp
fs
mov
repnz
cmpsl
or
xchg
inc
fs
jo
popa
ficoms
jmp
std
mov
jns
ficomps
jno
pop
imul
dec
and
sbb
leave
stc
xchg
dec
mov
fcomps
out
lods
push
cmpsl
mov
pusha
mov
outsb
sahf
or
xor
cld
or
pop
out
add
fcoms
add
xchg
cld
mov
lret
icebp
ret
fldt
test
cwtl
lret
pusha
push
sahf
cmp
fstl
aaa
or
pop
lret
sub
sub
cmpsb
and
jge
and
dec
jae
push
add
mov
cld
push
inc
push
inc
pop
scas
cli
pop
call
push
daa
xlat
mov
adc
stc
jns
aam
pop
xchg
add
mov
lea
add
fucomi
add
mov
ret
ret
sbb
or
std
ja
sub
dec
and
pop
addb
sub
add
add
stc
ljmp
push
jp
cmpsl
cmp
sub
push
int3
sbb
sbb
xchg
roll
imul
xchg
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
add
nop
add
hlt
addl
movsb
xchg
add
add
addl
adc
add
int3
test
add
add
call
add
add
add
add
xchg
add
in
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
aam
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
in
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pop
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
insb
es
add
inc
add
daa
inc
add
inc
add
add
inc
add
es
add
inc
add
inc
out
aam
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
and
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
push
and
add
sub
add
add
scas
lcall
das
dec
add
dec
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
into
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
data16
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
add
jbe
add
mov
add
mov
add
mov
test
add
test
add
test
add
test
add
add
and
add
xor
add
dec
xchg
add
add
push
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
movsb
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
add
add
add
mov
add
scas
mov
add
add
fmull
add
add
add
sbb
add
mov
add
add
push
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
