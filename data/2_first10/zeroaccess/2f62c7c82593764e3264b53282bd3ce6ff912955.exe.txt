push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
mov
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
inc
xlat
mov
arpl
jne
xor
aam
add
sbb
into
pushf
imul
js
xor
in
lea
imul
and
adc
rclb
scas
scas
in
int3
leave
in
test
insb
lcall
mov
add
fistps
ret
stos
xor
jp
jecxz
fs
sub
shrl
pop
and
add
rcrl
out
mov
movsb
fidivs
mov
in
xchg
enter
xchg
popa
loope
pop
add
inc
add
mov
icebp
pop
insl
mov
xor
jbe
punpckhbw
dec
cmp
sbb
xchg
fsts
stos
pop
jb
cmc
mov
pop
mov
or
les
sbb
push
and
pushf
ss
in
mov
js
fidivrl
add
and
sub
inc
lcall
mov
cli
lahf
inc
sub
dec
cmpsb
push
jmp
arpl
stos
loopne
sbbb
adc
push
lods
ds
or
cmp
cmp
xchg
dec
mov
lods
dec
shll
imul
add
les
leave
les
lock
cmp
pusha
je
dec
pop
out
pop
lds
fbstp
xchg
mov
shll
daa
pop
xor
ret
das
adc
into
lret
inc
push
into
adc
pop
test
pusha
sbbl
popa
sbb
arpl
loope
jmp
jmp
mov
out
lahf
leave
lock
je
jno
jae
es
adc
nop
fistpl
aas
push
pop
lea
mov
push
fdivp
getsec
shrb
or
mov
jl
sti
and
cmp
inc
scas
sub
cmp
mov
pop
xor
jne
mov
scas
mov
daa
adc
loopne
mov
or
sarb
into
dec
sbb
call
xchg
in
sbb
idivl
movsl
out
mov
imul
xor
mov
out
mov
mov
sub
ja
cmp
push
sub
sub
xchg
aaa
dec
xor
push
jne
push
out
scas
in
loopne
cs
push
jecxz
lgs
push
dec
jbe
and
pop
out
aas
pop
cltd
pop
cs
les
pop
pop
pushf
pusha
cmpsb
add
test
xlat
hlt
nop
jb
xchg
testb
sbb
fdivs
into
sub
in
daa
pop
out
fistl
fs
xchg
cmp
add
stos
mov
mov
mov
mov
inc
leave
dec
mov
add
es
sahf
jge
or
movsb
add
stc
and
es
and
xchg
pop
stc
data16
shr
push
ss
test
ret
inc
add
inc
cli
inc
jmp
fiadds
aad
test
cli
mov
add
push
iret
adc
sub
mov
inc
out
cld
in
xor
arpl
pop
jp
je
test
fwait
divl
subb
pop
and
pop
push
xchg
aad
pop
or
mov
in
pop
insl
sarl
mov
cmp
cs
mov
shll
add
in
push
push
jae
adcb
inc
push
push
fucomi
ficoml
push
subb
mov
mov
sbb
outsl
push
cld
mov
pop
xchg
push
lahf
mov
dec
test
sar
addb
mov
and
sar
ja
in
popf
xchg
imul
orl
mov
xchg
inc
orl
pop
or
push
dec
sub
std
addr16
sahf
dec
ret
gs
inc
cs
fsubrs
pop
lds
dec
inc
es
jle
lret
dec
push
imul
popf
mov
xchg
jge
mov
lods
or
push
mov
jmp
ljmp
rcr
icebp
mov
mov
call
in
push
outsl
ror
test
jmp
ljmp
add
dec
xchg
xchg
inc
lahf
cmp
inc
js
inc
ds
xchg
std
in
mov
out
fbstp
jg
cmpsl
dec
rcrl
stos
sub
outsl
jg
mov
jnp
es
test
and
sbb
push
andl
inc
hlt
jbe
int
leave
push
mov
pop
int
mov
ljmp
push
or
out
scas
addr16
ds
ds
cmpsl
cli
pushf
bound
jg
jne
push
inc
jb
out
rorb
into
xor
push
xchg
bsr
xchg
adc
cli
test
lcall
xor
or
sbb
mov
ljmp
or
dec
sbbl
adc
out
out
sub
and
aaa
or
aad
pop
lock
or
ss
mov
cmp
cmp
add
xchg
faddl
iret
mov
loope
hlt
adc
lcall
test
add
mov
or
ds
ljmp
inc
adc
movsb
test
icebp
ret
cld
shlb
fisttpl
lret
data16
pop
lods
xchg
mov
testb
mov
pusha
xchg
mov
addr16
daa
fwait
push
lcall
hlt
xchg
and
repnz
sbb
jp
inc
mov
in
push
mov
and
inc
add
call
scas
jno
daa
mov
pushf
lret
ret
mov
add
add
std
or
outsl
fisttpll
out
push
lcall
jp
cmp
mov
mov
push
cltd
rol
icebp
inc
decl
ret
mov
and
out
fistps
out
cmpsb
repz
sbb
mov
ds
inc
repz
movsl
stos
push
xchg
push
dec
push
xchg
jns
jp
lods
shrb
outsb
jne
adc
push
cmp
cmpsb
jmp
xchg
lret
push
add
aas
fistl
xchg
cli
jbe
daa
ja
lcall
cmpsb
sbb
inc
fists
scas
pushf
cmp
mov
adc
lds
sti
fdivl
and
add
xchg
imul
xchg
es
bound
xchg
mov
and
sub
fsubs
clc
outsl
or
cs
fs
mov
push
or
mulb
lods
repnz
stc
pop
push
rorl
cmp
push
push
jmp
push
fs
mov
xor
pop
mov
sbb
enter
fptan
clc
cmpsb
stc
xor
cli
inc
addr16
push
mov
jmp
nop
cld
dec
mov
mov
dec
and
or
push
cmpsl
mov
bnd
out
lret
lcall
bound
mov
adc
mov
out
shlb
in
inc
push
push
or
mov
lods
sub
ja
and
mov
cltd
jge
jp
push
fldcw
imul
and
pop
and
icebp
sbb
insb
int
mov
dec
imul
adc
movsb
and
jp
adc
rcrl
roll
cmp
push
jo
hlt
shl
inc
xchg
inc
neg
fadd
mov
jl
push
lods
add
faddl
mov
imul
cmp
inc
cmp
pop
arpl
pop
test
pop
gs
std
xchg
jo
shrl
repnz
or
push
or
push
jbe
loope
rorl
add
lock
sti
sbb
leave
enter
cltd
sbb
loopne
adc
xchg
inc
aam
ja
or
and
or
dec
mov
bound
mov
sahf
push
std
push
shlb
cli
in
or
push
xor
outsl
sub
push
xor
pop
outsb
jnp
sti
jnp
and
inc
adc
das
lods
stc
scas
and
cmc
movsb
je
mov
insl
mov
popa
into
icebp
lock
lock
pop
push
and
sbb
in
jne
xchg
scas
aaa
push
mov
push
xchg
cltd
sub
mov
mov
inc
je
xor
icebp
pop
and
enter
mov
mov
out
mov
push
cmp
xor
sbb
and
jnp
or
dec
and
mov
daa
pusha
jp
inc
sbb
pop
cld
push
inc
shlb
stc
jb
dec
cmpsl
test
pop
rcrl
insl
xchg
dec
outsb
popf
jb
mov
xor
lods
subb
mov
inc
sbb
xchg
les
and
xchg
lea
scas
fmuls
inc
fwait
and
and
sbb
js
dec
out
mov
js
movsl
hlt
mov
sub
xchg
cmpsl
adc
lock
cmpl
adc
push
frstor
inc
mov
mov
mov
dec
or
xchg
add
xor
fdivl
add
jbe
pop
insl
inc
jb
mov
mov
inc
or
or
frstor
or
das
test
sbb
call
lretw
adc
call
ret
call
xchg
and
out
ret
cmpsl
cli
pop
gs
in
add
dec
pop
cmpsb
push
adc
push
sbb
fidivrs
das
add
jge
mov
dec
fidivl
cmpsl
mov
push
rol
fidivrl
add
out
movsl
xchg
in
fisttps
clc
shll
test
xchg
movsl
xor
and
push
cmpsb
shlb
lahf
ds
bound
scas
sub
cmp
adc
pop
dec
lahf
push
shr
int3
rcll
mov
sub
enter
std
stc
fcmovnu
jne
fcompl
jno
push
arpl
orl
pop
cld
outsb
xchg
inc
add
ret
jae
jo
add
and
test
cmp
adc
sahf
sbb
fisttps
mov
rcl
xor
imul
imul
mov
fidivrl
mov
filds
xor
sub
add
xchg
mov
into
std
mov
daa
add
mov
mov
mov
mov
xorb
inc
icebp
out
data16
cmc
pop
imul
andb
add
push
cmc
cwtl
cld
inc
mov
pop
mov
insl
dec
roll
je
cmp
nop
iret
xor
jns
xchg
mov
dec
pop
dec
ja
fcompl
add
movsb
lahf
pop
ror
mov
or
cmp
fbld
xchg
push
fisubs
sub
std
adc
cmp
clc
dec
stc
shrb
popa
push
sub
call
aam
pushf
cli
xor
adc
mov
imul
subb
pop
lds
and
mov
mov
pop
out
inc
mull
jge
enter
sub
repnz
mov
clc
push
fidivl
inc
fsubrl
cmpsl
bound
mov
fs
repz
dec
jne
xchg
aas
js
push
rcrb
popa
shr
add
mov
and
rcll
mov
insl
dec
jmp
loopne
or
out
shll
loope
mov
adc
and
xor
inc
arpl
xor
out
jo
imul
adc
and
lret
mov
pop
xor
xchg
in
mov
mov
add
je
sub
mov
es
xchg
dec
mov
sub
scas
sbb
push
xchg
loop
mov
sub
pop
imul
lds
jb
les
xchg
insl
repz
and
lds
test
push
sbb
das
pop
adcl
sbb
test
sub
sarb
stos
mov
outsb
mov
outsl
mov
mov
mov
ret
aas
push
push
adc
add
clc
push
pop
inc
push
xchg
ds
jo
orl
bnd
data16
loope
fnsave
arpl
inc
jo
jmp
aad
daa
mov
sbb
mov
or
inc
mov
aaa
mov
or
repz
out
push
addr16
mov
and
pop
inc
cli
mov
mov
outsb
pop
push
imull
dec
mov
loop
jb
insb
xchg
pop
sbb
insb
cmp
in
sub
ret
and
je
es
mov
push
fld
push
or
leave
cmc
repnz
lock
add
add
jl
fstpl
rorb
sbb
pusha
pop
jg
xor
fldl
idivb
int3
xor
push
sub
mov
call
adc
jmp
movsl
setbe
jl
mov
cmpsb
xorb
mov
xor
adcl
push
sbb
getsec
lock
mov
js
mov
test
adc
fs
test
and
cli
mov
xchg
mov
stc
test
scas
test
mov
test
mov
jp
fistps
out
cli
sbb
mov
jns
rclb
or
sti
adc
inc
xor
cs
filds
adc
call
or
mov
mov
and
mov
mov
insb
or
sub
movswl
mov
mov
stos
and
sub
popf
sbb
add
inc
lret
pop
pop
dec
lds
les
jmp
xchg
popf
push
fs
mov
sbb
and
push
and
aaa
inc
lods
sbb
int3
stos
shlb
pop
les
cmc
jne
adc
cwtl
aas
dec
mov
orl
sub
push
dec
push
and
fnstenv
out
std
aad
adc
mov
mov
mov
movsb
mov
ljmp
pop
addl
pop
mov
jle
inc
push
outsb
pushf
es
push
test
sub
lret
mov
test
std
xchg
xchg
mov
jl
mov
add
push
pop
repnz
mov
or
adc
addr16
data16
cwtl
pop
data16
lret
or
sub
dec
push
ret
loopne
mov
xor
rolb
cmp
out
gs
cmp
adc
push
jno
aas
add
fdiv
pop
dec
mov
cmp
jne
test
xchg
aas
dec
in
dec
test
loopne
mov
pop
insl
xchg
sub
shrb
cmpsl
mov
mov
mov
mov
out
or
xor
jbe
sti
mov
fists
cwtd
sbb
xchg
test
jb
loopne
fadds
mov
mov
scas
dec
add
adc
cld
stos
test
mov
jle
scas
and
leave
or
imul
push
scas
aam
or
lods
cld
ficomps
in
mov
int3
xchg
lds
cmp
insb
dec
cs
jns
xor
int3
sub
mov
fcmovbe
and
in
jb
add
cmp
fiaddl
popf
cmpsb
add
cltd
mov
insl
loop
xor
das
out
jmp
cld
cmc
pop
cmpsb
adc
xor
xor
popl
popa
shr
or
xchg
les
mov
pop
inc
in
inc
mov
adc
nop
pusha
jb
jg
rcl
pop
insl
int3
les
popa
xor
mov
add
mov
jle
xor
test
scas
imul
and
ret
mov
inc
scas
xor
imul
aam
mov
call
cs
gs
adc
push
pop
add
data16
out
int
inc
ja
scas
outsl
pop
mov
lret
xchg
lret
test
dec
dec
out
les
pusha
jge
and
mov
mull
pop
jb
insb
cmp
and
clc
addr16
push
pop
xchg
fisubs
or
sar
add
imulb
cmp
loopne
cld
lods
push
int
jae
ljmp
loope
pop
xlat
dec
mov
xchg
xchg
loope
inc
or
cmp
adc
ja
int
xchg
jmp
push
jg
push
and
ljmp
hlt
mov
jmp
sbb
inc
pop
in
les
loope
es
mov
mov
pop
jnp
out
stos
or
mov
pushf
mov
cltd
cmp
inc
mov
cmc
cmp
jbe
pop
or
call
rcr
pop
pop
jbe
jns
movsb
ljmp
rolb
decl
and
sub
lahf
and
dec
xlat
sahf
lock
lds
dec
cmpsb
push
mov
or
outsb
adc
xchg
and
and
clc
addr16
sub
shll
pop
xor
data16
or
sub
nop
repz
jns
fnop
and
pop
int
das
mov
sub
jae
insb
imul
hlt
dec
add
or
pop
sbb
mov
push
inc
into
xor
xchg
lret
lock
inc
jecxz
addr16
add
pop
dec
add
push
outsl
sub
lods
in
jg
jno
push
jle
inc
mov
xchg
jmp
push
into
cld
int
cmp
and
iret
mov
push
jbe
inc
or
xchg
movsb
loop
jecxz
push
bound
lahf
push
mov
fst
es
icebp
out
jns
pop
movsl
inc
aaa
test
out
jge
mov
push
rcrl
pop
jno
add
iret
jecxz
add
mov
cmp
xor
bound
clc
insb
sub
xor
stc
dec
aaa
clc
shrb
into
jl
xchg
and
ljmp
push
mov
into
jno
xchg
outsb
cmp
mov
gs
cld
into
adc
loopne
adcl
mov
inc
sbb
cli
mov
fiaddl
scas
push
into
xlat
out
mov
cltd
xchg
cld
mov
push
stos
shlb
jne
fcoms
adc
mov
and
inc
dec
pop
push
push
jbe
or
pop
adc
jbe
dec
aam
xor
xor
mov
sub
rcl
imul
fdivp
adc
mov
clc
adc
idivl
mov
mov
xchg
stc
cld
dec
push
test
jp
mov
jge
test
xchg
dec
subl
mov
push
inc
jg
inc
push
lret
sbb
out
mov
sub
pop
dec
xchg
dec
out
roll
jp
adc
test
dec
mov
jne
cmpsl
pop
jns
std
int
jne
enter
jo
into
dec
sub
fildl
mov
adc
lods
add
push
shrb
mov
or
test
sub
xchg
jnp
jle
int
cmc
sub
mov
or
iret
xchg
lea
cmc
pop
mov
lahf
addr16
icebp
fbstp
jle
loop
cs
or
adc
subb
jle
outsl
jle
ret
cmp
xlat
cmp
mov
jp
lock
jbe
mov
rep
mov
icebp
jne
xor
cli
dec
mov
sub
imulb
and
rclb
pop
mov
into
arpl
push
addr16
inc
jl
out
out
or
cmc
mov
jp
in
fidivl
jmp
adc
sub
daa
cmp
or
add
push
pop
inc
mov
das
mov
xchg
and
mov
jbe
daa
sub
xchg
lcall
ljmp
sbb
jge
adc
jbe
mov
cmc
add
jno
arpl
repz
sbb
xor
es
pop
adc
push
mov
lahf
loope
xchg
mov
sub
sub
in
add
ret
xchg
add
pop
out
imul
cmc
test
fdivs
out
add
jecxz
std
dec
sbb
pop
xor
cltd
dec
jmp
push
ja
daa
dec
fwait
je
pop
add
out
adc
call
sbb
add
adc
jp
dec
rclb
lds
cmp
and
fdivrs
pop
push
push
dec
mov
loope
and
cmp
sbb
stos
cmc
adc
ret
push
and
add
mov
scas
pop
dec
cld
xlat
in
push
lret
enter
mov
fidivl
fiaddl
jb
mov
push
pop
sub
sbb
cwtl
insb
adc
sub
mov
pop
push
push
lahf
or
jle
xor
adc
dec
arpl
dec
cwtl
push
ds
mov
sbb
mov
cmp
loop
mov
sub
inc
gs
add
clc
jmp
test
mov
cmp
pushw
jo
xor
cmp
outsb
clc
inc
dec
inc
into
scas
negb
or
cld
ss
das
and
or
push
loope
jp
cmpsb
pop
loope
xchg
iret
loop
loope
fistpll
xor
pop
sbb
loopne
mov
aam
pop
out
mov
out
pop
cmp
mov
out
adc
mov
and
mov
sub
mov
mov
pop
mov
test
ret
sbb
and
lret
xchg
jno
pop
or
push
push
xchg
sbb
mov
adc
dec
cmp
rcr
ja
je
pop
call
in
adcl
cld
cli
ret
lds
je
fwait
pop
cmp
mov
xor
inc
mov
aad
stos
ja
mov
shll
push
jl
insw
jae
inc
mov
sbb
imul
in
lea
imul
sub
dec
xchg
mov
or
push
fdivl
add
inc
imul
fisttpll
mov
inc
imul
dec
dec
sahf
sti
cmp
push
sub
imul
jle
mov
fsubrs
and
in
inc
sbb
loopne
inc
mov
jae
mov
orl
jmp
or
insl
stc
jno
jmp
push
testl
out
jo
arpl
pop
adc
cmp
dec
mov
ss
mov
inc
dec
imul
sbb
pop
inc
imul
pop
mov
loopne
cltd
hlt
pop
out
sbb
daa
sbb
fnstsw
das
xchg
mov
aas
pop
shrl
jle
xchg
es
mov
or
push
adc
test
adc
shrl
hlt
repnz
push
push
inc
insb
outsl
frstor
sbb
jge
inc
pop
movsb
sub
popf
dec
stc
jl
mov
incb
icebp
fbstp
stos
push
sbb
outsb
xchg
xchg
pop
add
loope
pop
xor
xlat
mov
iret
test
dec
out
in
test
daa
mov
movsb
insb
mov
pusha
add
popa
adc
push
mov
arpl
popf
mov
insl
inc
test
jb
ds
lods
and
lret
mov
add
or
gs
fsubrs
test
les
fsub
cmp
jge
xchg
loop
xchg
pop
aad
inc
dec
in
fisubs
cmp
outsl
test
dec
in
fs
mov
cmp
inc
pop
pop
inc
push
imul
out
imul
lcall
cmpsl
sub
push
pop
fbld
aad
out
lock
jne
imul
push
adc
xchg
stc
mov
xor
outsl
loopne,pt
cmpsl
push
dec
mov
cmpsl
sub
sti
mov
andb
sub
mov
insl
xor
test
dec
shll
pop
cmp
dec
xor
leave
pop
fistpl
les
or
inc
mov
stos
xchg
data16
hlt
pushf
shlb
inc
mov
mov
inc
rclb
or
xor
test
sbb
adc
mov
cli
mov
push
jbe
clc
in
std
stc
xor
sbb
int3
pop
pop
data16
sbb
daa
out
jle
and
push
std
arpl
jp
ret
xchg
xchg
jb
push
neg
outsb
mov
ljmp
inc
dec
cmp
ja
clc
xor
pop
mov
filds
xor
lahf
outsb
sbb
mov
dec
mov
lret
mov
hlt
sub
cwtl
cli
daa
xchg
mov
pop
mov
jo
test
jne
cmp
ret
add
and
fisubrs
xchg
xchg
test
pop
incb
outsb
sbb
jbe
mov
subl
jl
pop
aad
inc
push
cmc
cmpsl
cmp
pop
or
xchg
mov
or
in
ret
sti
call
jns
mov
mov
fdivrs
rol
inc
or
inc
lods
repnz
imul
pop
xchg
daa
ds
mov
dec
lock
mov
push
lea
int
cmp
in
inc
in
bound
xor
jl
push
inc
push
scas
iret
sub
dec
push
jno
mov
ds
inc
mov
dec
xor
pusha
in
xlat
pop
cmp
mov
adc
mov
enter
inc
lret
sbb
pop
orb
mov
inc
jmp
or
or
mov
lea
lods
iret
xchg
sbb
and
cltd
mov
scas
push
popl
mov
inc
mov
loop
adc
dec
stos
ret
xor
fucomp
mov
mov
addr16
adc
stos
xor
leave
addr16
mov
and
bound
pop
add
pop
or
and
pop
lods
decb
fistps
sub
cmc
inc
pop
cld
into
sub
pop
mov
xchg
cmp
sub
fnstsw
push
scas
shl
or
repnz
jp
pop
dec
leave
movsb
jp
and
test
mov
adc
sahf
js
adc
ja
stos
cld
pop
rorb
fisttps
mov
mov
adc
ds
or
lods
sub
cmp
cmp
mov
mov
and
in
add
pop
cmp
dec
sti
loopne
xor
scas
leave
into
loopne
scas
sbbb
inc
lods
dec
lret
jmp
add
sub
ja
mov
cmp
and
cltd
addl
push
and
mov
push
fld
in
dec
dec
imul
cmp
dec
mov
shrl
sbb
push
cmp
lods
insl
popa
sbb
cli
stc
in
inc
adcb
push
jo
outsb
imul
fcoms
mov
and
popf
add
dec
or
xchg
movsb
jo
leave
mov
sub
adc
dec
ror
inc
xchg
xchg
jge
lret
xor
sub
fs
cmp
mov
imul
sbb
xor
and
push
push
mov
enter
lods
jne
inc
call
out
adc
fbstp
dec
jnp
lods
nop
daa
or
add
gs
mov
dec
fsubs
mov
loop
out
pusha
push
mov
inc
mov
adc
sti
mov
mov
addr16
lods
fistpl
pop
pusha
lret
shrb
xor
roll
or
xchg
js
xlat
mov
jmp
insl
inc
pop
dec
pusha
aam
xor
mov
fwait
or
enter
or
mov
jo
loop
scas
pop
xlat
adc
add
movsb
loop
loop
mov
fcoms
out
adc
and
cmp
jb
inc
fsub
xchg
mov
mov
inc
sbb
leave
push
jbe
mov
mov
enter
mov
int3
daa
sbbb
je
pop
sub
into
femms
pop
sbb
pop
jmp
mov
mov
popf
ja
test
into
stos
inc
xor
xor
push
or
xor
das
fldenv
mov
shll
sbb
ficoml
mov
xchg
fistps
dec
scas
clc
sbb
jmp
lcall
cmpsl
inc
cmpsl
xchg
dec
jle
push
push
enter
scas
repnz
aam
rclb
push
pushf
iret
fadd
fidivs
mov
ret
cwtl
or
pop
mov
call
daa
das
cmc
add
push
addl
sub
pop
sub
dec
stc
mov
inc
sbb
mov
shlb
ds
pushf
pinsrw
cmp
in
pusha
push
inc
mov
test
mov
jnp
jecxz
out
lds
into
lcall
cmp
std
push
add
rcl
lea
jnp
test
fwait
mov
and
mov
push
mov
in
xchg
mov
xchg
add
mov
mov
dec
pushf
push
ljmp
add
add
ret
idiv
sahf
std
sahf
jo
inc
in
push
mov
bound
repnz
jp
adc
in
jmp
sahf
xchg
pop
mov
pop
cmp
xor
testl
jno
push
and
hlt
mov
les
mov
xor
push
or
jbe
pop
lock
fbstp
lcall
bswap
sbb
or
and
pop
iret
jge
mov
fsub
sbb
push
lret
and
cmpsl
js
xchg
iret
pop
loope
sub
xor
js
or
adc
mov
inc
add
loopne
fsts
xchg
jmp
js
dec
shrl
pop
and
std
out
or
lahf
or
jns
add
push
dec
and
fsubp
imulb
pop
push
push
add
pushf
arpl
test
enter
arpl
lock
test
icebp
das
dec
enter
loop
fincstp
mov
xchg
in
xlat
imul
mov
shl
adc
mov
out
mov
xchg
jl
enter
inc
sbb
addr16
daa
sbb
cmp
jno
cs
cmp
pusha
push
mov
in
in
add
cmp
pop
xlat
aam
xchg
jns
push
push
lock
mov
clc
pop
sub
pop
mov
mov
movsl
xor
imul
hlt
icebp
into
xchg
pop
movsl
add
loopne
lock
out
shl
add
pop
push
sub
js
int3
cmpl
pop
push
adc
cmp
cwtl
lock
out
pop
je
inc
mov
inc
pop
push
dec
fbstp
mov
sbb
movsb
insl
mov
pushf
push
cmp
call
repz
jg
mov
jle
loopne
fdivs
stos
mov
sti
jne
add
call
arpl
sub
mov
gs
jge
in
lods
dec
xchg
jg
js
cmc
mov
pop
outsl
divl
xor
jge
adc
scas
dec
sbb
adc
dec
add
imull
loopne
xchg
stc
add
or
mov
hlt
out
mov
cmp
xchg
xchg
stc
push
aam
hlt
das
cmpsb
push
adc
subb
mov
sti
clc
leave
xchg
cmp
mov
fcmovb
sub
jnp
out
jl
fimuls
popl
inc
repz
std
cmpsl
xchg
loope
in
imul
cmpsl
fidivrs
sahf
sarl
push
sub
mov
lods
cmp
push
in
mov
xchg
cs
imul
mov
pop
ja
lods
mov
mov
jp
dec
lods
mov
les
out
stos
mov
data16
jne
pusha
mov
nop
outsl
add
push
cli
call
inc
and
or
inc
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
jno
xlat
pop
jp
aaa
pop
jp
xorb
in
inc
js
or
pop
ds
daa
loope
jmp
xor
insl
fbstp
insl
mov
in
pop
rorb
pinsrw
aam
out
das
in
aad
iret
mov
pop
push
pop
and
lock
imull
icebp
movsl
and
sahf
xor
test
test
sub
mov
mov
jne
mov
jmp
inc
popa
sti
mov
leave
xchg
enter
cmp
mov
add
lock
push
mov
cwtl
cmpsl
mov
or
and
pop
cmp
loop
arpl
notl
xchg
das
lret
bound
mov
xchg
pop
test
mov
dec
mov
push
push
mov
es
mov
mov
aas
movsb
sbb
sub
jp
faddl
loope
daa
or
rep
adc
or
push
inc
mov
and
cmp
jno
imul
xchg
push
dec
sub
imul
cld
or
jg
sub
cmp
sub
mov
xchg
mov
push
aad
adc
mov
mov
pop
dec
arpl
inc
dec
repz
mov
fnstenv
sahf
xorl
leave
leave
dec
movsl
add
push
xchg
mov
lods
dec
cmp
in
pop
fiadds
cmp
adc
xchg
xchg
and
xchg
adc
leave
insb
lcall
push
pop
cmp
inc
stc
js
ja
movsb
jp
sub
sub
test
setnp
or
mov
out
repz
test
repnz
or
cmp
or
dec
mov
inc
repz
xor
popf
pusha
push
mov
in
mov
lods
stos
into
ja
inc
aam
lock
lret
mov
adc
adc
pop
scas
fadds
sub
cmp
mov
std
test
mov
adc
pop
in
loopne
lret
mov
sbb
out
sahf
mov
aam
jno
sbb
cs
jmp
xchg
pop
pop
jp
repnz
xchg
scas
lods
jne
pop
out
js
push
fabs
push
xchg
call
cmp
push
push
pop
mov
jno
daa
sbb
rcrl
push
sbb
sub
push
xor
gs
mov
loopne
adc
mov
ljmp
pop
inc
pop
minps
mov
rcrb
hlt
mov
leave
pusha
xlat
inc
mov
call
insb
or
fcoml
push
dec
pop
test
push
int
fwait
mov
ljmp
adc
push
inc
add
xchg
cs
mov
scas
cltd
enter
fisttpll
fdivr
int3
push
and
addl
stos
or
pop
sub
dec
fucomp
jmp
roll
fs
xchg
xor
icebp
sbb
adc
xor
bnd
or
notb
inc
into
jno
loop
int3
inc
out
cltd
or
dec
push
cmpsb
rcll
lds
xchg
fbstp
cmc
dec
dec
mov
push
loop
clc
shrl
test
jb
int3
movsl
aam
inc
loop
mov
mov
mov
mov
data16
movsb
sbb
cmpsl
in
repnz
scas
data16
xlat
jae
sbb
sub
push
mov
xsaveopt
cs
inc
dec
cmpsb
loope
jbe
xor
cmp
cmp
push
rclb
or
or
test
gs
mov
cld
fdivr
subb
or
or
xchg
adc
hlt
and
mov
mov
mov
or
adc
cmp
icebp
sbb
std
and
sbb
or
addr16
or
lea
jnp
inc
cmp
fwait
cld
or
sets
out
rcll
push
nop
das
jmp
stc
daa
lds
pushf
out
xor
movsl
push
rcr
or
fldl
pop
pop
mov
rcl
ds
xchg
cs
inc
add
add
repz
sub
sbb
adc
cltd
data16
sbb
mov
daa
loope
push
jbe
in
adc
shlb
adc
lods
mov
sub
push
adc
cmpsl
mov
mov
adc
mov
add
jp
mov
pop
std
stc
scas
cli
inc
jae
push
xchg
stos
daa
push
dec
addl
inc
sarb
xchg
das
push
add
mov
in
arpl
sbb
push
jp
out
mov
popf
xor
cmp
cmp
dec
cmp
jle
iret
inc
cmp
add
push
jecxz
std
into
xchg
jmp
fcom
and
mov
aas
shrb
in
lods
mov
test
inc
addl
fsubl
repz
pop
imul
push
sub
enter
shlb
dec
jmp
ds
test
mov
repnz
inc
xor
lds
mov
lret
pop
scas
mov
es
mov
or
xor
inc
cld
add
cs
mov
idivb
test
movsl
sub
mov
imull
jl
andb
inc
ror
mov
repnz
pop
sub
test
mov
and
jnp
scas
cmpsl
mov
gs
inc
adc
push
std
hlt
imul
push
aaa
leave
push
jmp
movsb
push
std
mov
mov
xchg
sub
cmp
test
inc
out
int
or
dec
mov
sub
xor
insb
or
sbb
pusha
push
addr16
pop
mov
in
push
mov
sub
dec
jp
rolb
mov
in
dec
fnstsw
cs
mov
add
push
mov
jno
lret
lods
cmp
push
shlb
xchg
lahf
mov
lret
ss
pop
pop
mov
stos
popf
test
fnsave
xchg
sbb
xor
or
jo
push
dec
mov
aam
mov
adc
gs
testl
je
push
sub
lcall
mull
jp
hlt
inc
scas
push
or
pop
lcall
jbe
filds
push
out
sbb
adc
imul
and
out
lds
in
idivl
scas
or
cmp
ficompl
adcl
lahf
mov
arpl
mov
push
and
popf
adc
mov
xor
inc
incb
hlt
repnz
xchg
jae
andps
xchg
cltd
movsl
mov
popf
sub
les
mov
icebp
cmp
inc
ret
cmpsl
clc
cmp
jge
cli
push
jl
addr16
insb
cltd
mov
jae
std
mov
pop
inc
sbb
push
cmc
sub
stc
jnp
fs
jecxz
pop
xchg
fwait
pop
loopne
fs
leave
mov
jmp
inc
ds
lock
popa
xchg
je
not
fildl
les
fistpll
lret
fsubrp
pop
pop
mov
ret
jb
cwtl
out
add
movsl
je
xor
aam
jns
int
in
stos
mov
out
stos
inc
push
rcl
arpl
jmp
jp
dec
fldenv
call
push
fsubs
lret
mov
fistpl
stos
iret
lock
or
movsl
imul
add
paddd
and
mov
jl
add
addr16
xlat
not
roll
and
or
add
ret
neg
rcrb
xor
pop
movsb
in
outsb
cmpsl
mov
or
pop
push
cmp
cwtl
cld
pop
push
sub
sbb
in
push
pop
aad
or
in
icebp
out
inc
or
push
insl
nop
repz
dec
arpl
xor
les
cmc
or
or
movsb
push
cld
sub
sub
test
xchg
stos
inc
mov
rclb
mov
or
pop
sub
mov
mov
out
fisubrl
dec
rol
inc
push
mov
pop
rolb
sbb
push
push
add
pushf
add
int3
pop
mov
jge
aam
std
neg
fsubs
sub
jae
mov
popf
inc
imul
rorb
std
push
add
movsb
scas
sub
cmc
dec
inc
mov
fs
mov
sti
xchg
out
pop
bound
fiaddl
push
adc
mov
lcall
in
or
or
mov
les
pusha
pop
add
mov
add
inc
je
jp
fisubs
xchg
sub
xchg
daa
mov
mov
addl
arpl
xchg
notb
addr16
dec
pop
aad
pop
mov
lock
and
sub
push
push
pop
loope
clc
cmpsb
sub
push
les
inc
mov
mov
adc
mov
mov
ret
fwait
jg
add
imul
out
cmp
ficoms
subl
sbb
jmp
push
mov
fdivp
leave
in
mov
push
movsl
iret
in
or
shlb
int
int
aam
scas
cltd
pop
mov
jp
leave
cld
jg
repnz
xchg
push
les
in
cmp
xchg
push
jmp
loop
stos
ja
cmp
pop
aaa
movsb
insl
aaa
mov
inc
loopne
imul
daa
and
aaa
dec
loopw
xchg
and
idivl
roll
sahf
and
dec
and
add
jae
test
pop
cmp
push
mov
mov
dec
out
lds
mov
push
fists
into
loopne
dec
lods
fstl
fidivrs
orb
bound
in
xchg
sub
add
dec
daa
xchg
mov
fisubrl
js
dec
push
shr
mov
rcrl
sub
mov
xchg
dec
sti
test
in
lock
addr16
mov
test
pop
sub
es
xchg
pop
sub
pusha
xor
cmp
cmp
mov
mov
mov
or
arpl
jne
sti
mov
add
rclb
adc
decb
lea
add
iret
lret
xchg
nop
out
add
ja
sub
sti
clc
aad
fcomps
fstl
mov
pop
xor
in
xchg
leave
or
fsubs
xchg
add
adc
popa
dec
out
xchg
movsl
ret
xor
les
dec
xchg
cmp
mov
iret
adc
cmpsb
lods
sub
push
stos
les
inc
subl
in
jmp
fs
cmc
mov
leave
or
pop
adc
pop
or
rep
sarb
mov
mov
jmp
sbb
pop
jo
data16
xlat
jo
sbb
enter
fcmovbe
xchg
jae
icebp
fstpl
push
mov
imul
cltd
push
dec
xchg
outsl
xchg
loope
out
loope
cmp
stc
xor
xlat
and
incb
cmp
adc
clc
sbb
mov
ljmp
sub
clc
lahf
push
int3
fiaddl
pop
ja
mov
xlat
and
push
in
dec
pop
in
sub
sub
dec
xchg
push
test
or
jecxz
fsubrs
push
test
pushf
mulb
out
xorb
mov
test
mov
sub
cmc
stc
bound
fnstenv
adc
clc
push
mov
sub
pop
dec
fistl
push
adc
shlb
xor
adc
outsb
jle
inc
sub
add
iret
out
xchg
cld
pop
or
or
or
jae
mov
or
test
xchg
fdivrl
rcll
arpl
and
and
add
inc
cmp
fadd
cwtl
shll
cmp
dec
cmp
mov
jb
repnz
daa
add
cwtl
xchg
lods
jb
lcall
dec
xchg
adc
adc
sub
popa
mov
dec
push
or
aam
rcrl
pop
mov
xchg
sbb
mov
mov
inc
repnz
cltd
jno
fucomip
or
push
enter
sbb
xchg
sbb
sbb
pusha
rorl
hlt
adc
push
enter
in
xchg
cmp
cmp
mov
push
cmpb
test
adc
cmp
bound
ret
xchg
outsl
adc
jl
adc
mov
mov
mov
mov
push
enterw
xor
out
fs
bound
push
shll
add
mov
jg
add
es
push
inc
jmp
out
mov
push
dec
pop
loop
cltd
and
fwait
pop
addl
mov
shl
dec
adc
daa
gs
mov
jmp
xchg
test
pushf
repnz
imul
or
subb
shll
jmp
adc
sbb
pop
insl
cmc
push
lock
dec
inc
and
mov
cmp
jp
lahf
xor
out
pop
push
jb
push
cwtl
cmp
jnp
repnz
mov
pop
push
inc
mov
stos
add
inc
add
mov
adc
imul
cs
inc
movsb
cmpsl
je
or
push
pop
sub
fbld
cmp
sbb
or
lock
dec
pop
pop
fcoml
dec
pop
pop
and
push
xchg
lea
in
jg
popa
setb
dec
mov
enter
negl
mov
insb
test
fldenv
popa
sub
out
sbbb
fildl
xchg
jbe
adc
andb
rorb
inc
pop
sub
imul
clc
repz
lahf
daa
sbb
push
cmc
icebp
popf
scas
fwait
fwait
arpl
repz
insl
or
test
andl
or
stos
cmp
dec
addl
lods
xor
ljmp
stc
out
lcall
test
lcall
adc
dec
ret
popf
xchg
dec
sarb
mov
xchg
mov
inc
cmp
sub
add
outsb
cwtl
jl
out
pop
ret
out
cwtl
rcll
int
dec
stc
xor
repnz
testb
adc
xor
adc
adc
stos
subl
mov
lods
xadd
hlt
lret
je
lret
inc
ja
xchg
test
rcr
sbb
pop
das
ficompl
test
or
imulb
leave
ret
inc
dec
jge
add
or
xchg
shrl
dec
lods
mov
into
sbb
in
fldl
push
inc
cmp
aaa
sub
sub
xor
inc
sbb
or
push
jbe
and
in
jl
imul
mov
mov
scas
jo
push
call
data16
inc
out
or
lea
push
mov
in
rolb
pop
cmp
dec
aaa
inc
jno
mov
push
jo
push
cs
mov
mov
lock
jg
lods
sti
stos
pop
lret
int3
aad
call
xchg
sub
push
cmp
mov
or
jb
test
ss
and
stos
add
lcall
xor
pop
xchg
sub
lcall
js
bound
fdivs
lock
adc
das
orl
ja
jb
in
add
bound
pop
and
out
mov
lcall
icebp
jp
test
or
and
jae
cli
push
sub
insb
popf
jge
sbb
rclb
and
scas
test
or
or
test
popf
dec
pop
push
xchg
pop
and
adc
sub
push
lods
fs
popa
in
xor
jg
jno
cmp
cmp
sub
addb
das
sub
outsl
and
clc
addl
mov
mov
xchg
xchg
sti
mov
adc
gs
pusha
push
cmp
sub
iret
repz
adc
cmp
sbb
xbegin
xor
aas
je
dec
loop
stc
popf
ja
inc
test
dec
ja
sbbl
repnz
bound
stos
or
xchg
add
and
push
in
call
imul
xchg
ss
and
mov
fdivrs
ljmp
cltd
pop
sti
daa
jno
push
or
mov
insb
xchg
push
pop
cli
cmc
xchg
nop
pop
sbb
rorb
sahf
loop
pop
push
inc
js
mov
rclb
xchg
xor
fs
adc
mov
insl
cmpl
lock
ds
xor
sub
mov
jle
inc
dec
cmp
add
mov
adc
hlt
stos
clc
adc
outsl
pop
ds
stc
cwtl
jae
stc
sbb
insl
dec
fs
jne
mov
jl
aaa
cmp
popf
loop
inc
inc
ficoml
add
and
sub
mov
pop
jb
mov
jne
cmc
or
inc
xchg
xchg
or
xchg
cmc
inc
and
jnp
lods
xchg
idivl
jbe
push
imul
sarb
cmp
add
mov
adcl
ds
repnz
xchg
adc
pop
mov
adc
jg
in
mov
pop
mov
inc
mov
and
jl
out
mov
mov
pop
insb
in
adc
jb
lock
stc
mov
pop
cmpsb
dec
inc
sbb
cltd
mov
test
sbb
push
test
cltd
pop
je
or
insl
mov
lcall
sbb
fadd
or
push
aam
xor
jb
mull
aad
andb
repz
and
or
insl
das
ds
mov
scas
rol
mov
cmp
mov
xchg
sbb
sarl
test
cmp
sub
mov
outsl
dec
mov
stc
popf
aas
scas
jmp
dec
orb
hlt
mov
or
pop
xchg
or
jne
or
jl
xchg
repz
dec
adc
jnp
mov
inc
jae
add
dec
imul
mov
into
lret
loop
dec
xchg
jg
iret
imul
jnp
inc
stos
xchg
mov
add
cmpsb
out
push
adc
cli
inc
jns
and
leave
adc
add
sbb
push
pushl
and
arpl
adc
fisubrl
loope
cmp
jae
inc
sbb
jb
lods
cmp
cmp
push
cmp
inc
pop
cmp
stc
jbe
shrb
jle
ret
mov
lret
mov
sub
and
mov
loop
mov
mov
mov
add
adc
negl
jge
push
jg
sub
pop
and
dec
pusha
sbb
dec
insl
mov
pop
pusha
adcl
jno
outsl
xlat
sub
imul
sub
jecxz
outsb
clc
xchg
mov
push
xor
lock
xor
adc
mov
mov
pop
in
xchg
xchg
and
add
sbb
sub
adc
scas
and
inc
imul
mov
jo
mov
mov
mov
popa
jmp
je
mov
std
mov
pop
cmovge
call
roll
je
sbb
popa
add
jbe
bound
aas
push
outsl
or
mov
xor
mov
stos
xchg
std
push
inc
xchg
lcall
xor
les
cli
sbb
lea
and
xor
add
inc
inc
call
aaa
and
es
cmpsb
dec
fs
pop
arpl
cmp
inc
dec
dec
aas
jnp
inc
sti
and
cmp
fcoms
call
ljmp
xchg
jbe
je
pop
add
cwtl
mov
dec
leave
test
lods
push
fcomip
addr16
addr16
push
xchg
mov
sarl
mov
lds
lock
lret
dec
clc
lods
ret
std
pop
and
roll
fildl
pop
in
pop
mov
into
push
and
sub
mov
mov
mov
xor
idivl
add
push
inc
cmc
testb
cld
pop
xchg
inc
into
lods
aam
sahf
jbe
cmc
ss
imul
pop
and
or
push
mov
xor
dec
aaa
inc
sub
xchg
out
jp
jmp
mov
mov
xchg
xchg
mov
sub
insl
lds
xlat
mov
jno
mov
mov
loop
jae
ss
pop
mov
out
aam
shr
add
test
cli
test
jno
pop
fcoml
cmpsb
mov
int3
cmp
scas
mov
mov
adc
out
inc
push
sbb
cmp
stc
pusha
int3
cmp
dec
pop
mov
in
movsb
inc
clc
in
push
test
push
inc
inc
loop
xor
lock
dec
xor
insb
insb
nop
ret
xchg
mov
stos
cltd
sbb
idivb
cmpsl
push
pop
xchg
lods
notb
imull
into
mov
and
mov
inc
or
mov
push
outsb
sahf
adc
in
jmp
les
leave
aas
push
ret
leave
in
scas
xorl
out
sar
pop
outsb
test
lock
sarb
rcrw
or
and
pusha
rolb
add
xorl
incl
or
sub
adc
sub
cwtl
pop
dec
jle
or
fadd
or
ds
xchg
push
jnp
lods
and
sub
dec
popf
inc
jle
stos
xor
add
push
daa
xor
gs
mov
insl
ja
jmp
iret
repz
lods
jnp
test
notl
mov
mov
push
dec
out
int3
pop
mov
and
xor
fsubrs
adc
add
push
jmp
pop
sub
sbb
fcoms
repz
ficompl
shlb
mov
adc
leave
inc
push
outsl
sub
fmul
in
addr16
sub
xchg
sbb
cmpsl
adc
fsts
notb
daa
push
mov
sbb
sbb
hlt
mov
xorl
cmp
out
pop
mov
stos
dec
in
dec
stc
push
pop
jae
xchg
insb
cwtl
out
cmp
dec
and
lods
pop
adc
xor
jbe
test
clc
pop
jle
adc
mov
cmp
and
sub
or
fisubl
aam
arpl
int3
or
fbld
jp
js
in
add
imul
xchg
cmpsl
mov
adc
jo
or
dec
imul
xchg
xchg
cmp
pop
clc
xchg
cmp
jbe
pusha
scas
bound
sub
aaa
fdivrp
mov
mov
dec
jnp
xchg
cmp
adc
dec
clc
dec
gs
faddl
ror
cwtl
ret
test
push
mov
enter
jp
jmp
enter
pop
mov
jae
stc
repz
jg
pop
aaa
in
sar
push
rol
daa
mov
xor
movsl
stos
lds
push
divb
lret
adc
or
lahf
jnp
sbb
gs
inc
push
xor
mov
and
pop
xor
mov
push
std
js
pop
sbb
stc
adc
adc
dec
xchg
inc
aad
data16
insb
sbb
loop
enter
pop
pusha
push
lods
xchg
jl
mov
push
sbb
xor
cmpl
scas
mov
jnp
fildll
sbb
cmp
push
js
adc
in
cmp
or
mov
pop
push
and
sub
and
fwait
inc
mov
xchg
lret
fdivp
and
push
push
or
pop
push
push
cmp
not
std
sbb
imul
sub
adc
sub
lcall
clc
sub
inc
fidivrs
ja
rcll
cmpsl
fldcw
mov
out
aaa
push
dec
aad
lods
cmpsl
xlat
ljmp
push
inc
gs
cmpsl
jns
dec
sbb
pop
cltd
lea
adc
jne
or
stos
mov
sbb
test
mov
cltd
xchg
jbe
push
push
out
jno
insl
jecxz
data16
pusha
add
pop
inc
stos
and
fldenv
pushf
xchg
push
mov
and
js
lcall
adc
cwtl
sbb
test
cmp
hlt
xchg
fadd
push
fnstsw
loope
insl
dec
push
push
inc
lods
jne
leave
mov
adc
adc
jle
mov
xchg
insb
mov
into
or
and
fldenv
xor
ret
push
andl
into
call
and
xchg
ret
fxch
out
movb
fsubl
pop
sub
test
add
insb
das
cs
jns
popf
and
pushf
sbb
sub
adc
call
add
jecxz
pop
cmpsb
adc
jp
aas
rclw
mov
lods
cmpsb
filds
andl
pop
push
rcl
mov
out
mov
into
cwtl
sbb
div
dec
test
xor
out
rcll
mov
push
push
and
xchg
hlt
and
rcrl
cltd
jl
cmp
popa
lods
pop
xor
push
xor
push
sbb
cmpb
push
repz
cmp
cmp
mov
jae
and
ljmp
test
js
push
xchg
push
xor
dec
test
push
and
dec
jns
adc
mov
fs
mov
mov
test
dec
pop
xor
mov
inc
repnz
mov
les
and
adc
xchg
mov
lahf
out
jbe
mov
or
in
jmp
loope
lret
lcall
js
ss
mov
mov
daa
mov
mov
sbb
ja
push
push
pop
sub
jecxz
ret
add
outsl
in
shlb
int
add
adc
pushf
xor
aas
sbb
mov
mov
fcmovnu
into
fdivl
jmp
sub
pop
out
mov
xor
js
xchg
insb
outsb
out
sub
ds
cmp
jnp
sbb
mov
sbb
iret
mov
pop
mov
imul
fldt
shrb
adc
push
push
sbb
shll
ds
jnp
loop
dec
hlt
mov
adc
repnz
popa
jmp
imul
pop
lcall
mov
cmp
add
outsb
iret
pop
add
add
push
in
or
lcall
pop
imulb
into
std
sub
push
cli
push
mov
add
sar
jns
lret
push
lods
mov
loopne
fs
or
adc
push
movsb
ficoml
cltd
in
daa
inc
stc
dec
mov
jne
das
jbe
xor
fdivrp
or
mov
mov
cmpb
mov
jmp
shl
outsb
repz
addr16
mov
add
loope
out
adc
or
cltd
fs
out
or
sbb
mov
and
in
add
sbb
xor
or
cmp
cld
xor
xchg
out
cmp
jae
add
lret
mov
je
xchg
adc
je
mov
in
adc
fcoml
mov
jge
idiv
pop
pusha
push
mov
mov
sarb
xorb
jb
cmp
mov
dec
dec
pop
jne
jge
fdivr
mov
mov
lcall
loopne
dec
sahf
and
jns
popa
adc
mov
pop
cmp
and
dec
cs
push
cwtl
and
push
je
orb
pushf
int
xchg
mov
push
inc
aam
sbb
push
cs
cmp
adc
mov
das
push
adc
sub
decl
add
hlt
fmull
push
cmp
push
in
insb
mov
mov
pop
mov
add
into
jle
movsl
sbb
xor
fsubrl
sbb
movsb
aas
sbb
or
mov
sub
jns
xchg
jg
imul
cmc
ret
data16
dec
popf
add
call
mov
mov
imul
loope
cmp
jmp
mov
push
xchg
inc
xorl
push
jg
mov
enter
inc
loopne
outsl
mov
imul
outsl
sub
pusha
popa
inc
xchg
out
movsb
push
or
roll
ss
add
cs
ss
imul
stos
ja
mov
cmpsb
sar
inc
pop
stos
imul
adc
jae
imul
in
insl
mov
cmp
xor
add
push
cli
ljmp
aaa
dec
lahf
das
daa
xchg
ds
loop
dec
jno
or
int3
mov
add
mov
push
add
jnp
or
adc
pop
test
imul
xor
imul
dec
icebp
in
clc
mov
jp
repnz
popf
mov
jg
nop
in
cmp
in
or
adc
sub
mov
dec
cltd
mov
dec
dec
push
maskmovq
jg
xchg
sbb
inc
jg
scas
in
jecxz
pop
jp
frstor
sbb
rcrb
stos
mov
lds
leave
or
mov
stc
jl
or
pop
or
inc
jecxz
mov
xor
and
pop
mov
sti
mov
cmp
dec
push
shlb
dec
sub
xorb
les
jns
pop
push
xor
jge
mov
mov
pop
lret
sbb
sbb
shrb
test
clc
or
push
push
jle
xchg
mov
sti
sahf
jecxz
adc
mov
mov
adc
shrb
add
test
lahf
sbb
sub
push
mov
stos
dec
mov
jmp
add
fimull
clc
sub
sbb
cmpsb
sub
jae
and
jg
sub
pop
mov
jle
std
push
les
iret
icebp
ljmp
into
call
push
inc
adc
inc
test
add
fbld
mov
xchg
sarb
fstpt
cmpsb
test
pusha
fdivs
idivb
inc
pop
pushf
sub
push
sbb
mov
insl
rcrb
loopne
push
inc
loop
and
sbb
mov
xor
jns
test
cmp
fcomp
xchg
jns
adc
les
std
sbbl
mov
repz
fsubrs
or
pop
outsb
add
shrb
xchg
pop
push
stos
js
mov
pusha
inc
incl
xchg
adc
pop
rcll
ret
pop
out
push
jns
in
sbb
ds
loope
cmp
cmpsb
mov
in
test
out
xor
mov
cs
lds
cld
clc
popa
or
ret
fistpl
push
inc
hlt
sub
mov
push
xlat
jl
pop
gs
mov
test
push
cmp
xor
sub
insb
jmp
stos
jns
dec
add
inc
adc
pop
or
fisttpl
and
sub
scas
mov
popf
jmp
mov
pop
mov
cmp
mov
sbb
scas
push
jmp
je
xchg
fisubs
pop
mov
pushw
xchg
sbb
or
xchg
adc
call
xchg
lret
and
cmpsb
lds
dec
outsb
mov
rcll
adc
call
jle
dec
loope
mov
jb
and
stos
xchg
dec
mov
inc
xchg
jb
pop
movsb
xchg
add
insl
and
jg
cmp
push
sbb
stos
mov
and
jle
xchg
xor
and
push
dec
into
rcl
fldenv
jnp
jl
in
popf
push
out
jnp
cld
mov
movsb
lahf
nop
pop
mov
pop
lods
fnstenv
popf
and
cmp
aam
dec
inc
jmp
dec
jno
daa
mov
out
add
in
pop
mov
addr16
pop
stos
imul
cmp
lds
mov
mov
mov
inc
iret
orb
cmp
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
and
sub
aam
xor
repz
ficoml
ja
fmull
stos
pop
pusha
repnz
mov
push
js
es
inc
adc
cmp
dec
addr16
dec
dec
jle
push
pop
xor
xor
push
jb
cmp
hlt
mov
sbb
or
pop
add
sub
xlat
push
lods
add
push
shrl
into
pop
inc
jnp
dec
jno
push
addr16
add
in
add
je
xchg
jno
push
lea
push
xorl
hlt
jns
or
push
adc
loopne
repz
movsl
leave
mov
ret
push
pop
mov
dec
add
dec
cmp
pop
shr
cmp
xchg
cmp
mov
rorl
push
mov
cmp
inc
pop
and
int3
cmc
sti
mov
adcb
push
into
ffreep
dec
cmp
jno
ret
mov
fmulp
lock
dec
jo
mov
adc
lods
push
mov
loope
ret
filds
stc
fbstp
sbb
mov
jns
dec
jno
aad
ret
gs
and
xchg
and
inc
lods
xor
mov
clc
or
pushf
cltd
mov
adc
and
orb
mov
pop
inc
mov
daa
add
sub
cmpsl
arpl
cld
cmp
xor
dec
jle
fs
push
jecxz
and
pop
mov
test
shll
dec
lea
pusha
cltd
jle
test
sbb
jl
push
sbb
int3
xchg
adc
fcompp
loope
sbb
popa
push
xor
hlt
xchg
xchg
les
push
pop
js
lcall
cld
outsb
pop
movl
jmp
mov
cmp
mov
adc
sbb
lock
jae
cmp
xlat
sbbb
lahf
jecxz
or
mov
jmp
rcrb
scas
fnsave
loope
xchg
add
push
aam
inc
in
in
mov
inc
aad
icebp
mov
sarb
dec
lods
mov
add
xor
xchg
data16
out
mov
cwtl
sbbb
mov
or
mov
or
loop
push
sbb
lock
stos
cld
psubq
push
daa
sbb
or
daa
inc
fdivs
bound
dec
dec
mov
fstpt
push
clc
outsl
push
lds
fwait
mov
cmp
in
movsb
jns
lds
jg
mov
push
mov
sub
jnp
inc
adcl
negb
pushf
cmovle
xchg
jno
in
icebp
pop
lea
bound
aam
lds
jp
in
jne
imul
or
mov
gs
dec
je
fldenv
pop
ljmp
lahf
jecxz
or
ss
push
push
xchg
xchg
xchg
sbb
sub
mov
cltd
cltd
es
lock
rclb
js
inc
lret
imul
icebp
jns
dec
mov
adcb
jmp
rol
inc
sbb
fs
xor
pop
lds
in
pop
dec
xchg
add
add
les
cmpsl
inc
jl
loopne
mov
fistpll
xlat
pushf
dec
push
or
outsl
cltd
aad
add
stc
imul
lock
mov
sub
idivl
jo
sti
out
dec
push
cmp
aas
dec
add
xchg
xor
jno
ret
mov
add
sub
jbe
lret
or
mov
popa
movsb
add
in
lea
jmp
push
scas
rol
mov
daa
aad
aas
mov
mov
scas
or
pop
sub
js
les
filds
mov
dec
dec
scas
jae
push
hlt
movsl
das
jo
popa
adc
mov
sub
adc
loope
inc
xor
testl
adc
sarb
jle
mov
ss
pop
add
shll
inc
adc
movl
out
js
lods
cmp
mov
ret
lds
gs
sbb
jo
call
fs
or
addl
push
adc
popf
push
pop
mov
xor
daa
cld
dec
iret
dec
lea
filds
lret
pop
stos
cmp
int3
addb
jbe
sub
adcb
in
add
sub
sub
inc
mov
mov
or
and
lock
inc
mov
mov
fs
xor
pop
xchg
mov
sbb
mov
popf
aam
std
jl
mov
imul
mov
mov
adc
cli
pop
jne,pn
xchg
push
pop
nop
idiv
lret
loop,pn
adc
jbe
rorb
dec
sti
movsl
add
call
je
repnz
inc
mov
pushf
push
js
arpl
mov
das
in
in
push
mov
cs
dec
fisubrl
mov
aam
out
mov
aam
pop
cmpsl
repz
add
mov
inc
push
pop
lods
xor
ljmp
dec
pop
and
dec
cmp
loope
pop
xor
sub
in
add
aad
nop
aaa
subb
enter
pop
sbb
push
mov
fiaddl
mov
sbb
ret
mov
push
lock
jns
cmp
in
leave
cmpsb
ret
jecxz
sub
outsl
xchg
add
mov
sub
rorl
sub
push
cmc
adc
xchg
sub
pop
mulb
aas
fidivl
lahf
cli
out
ja
jg
mov
inc
mov
mov
jge
cmp
dec
enter
mov
dec
jne
lea
jmp
inc
xor
and
push
stc
lahf
mov
add
cmp
jo
lret
mov
mov
xchg
fidivrl
or
and
mov
mov
mov
sub
lea
fs
fsubrl
jmp
fdivs
fwait
jecxz
mov
mov
ds
into
mov
xchg
lods
iret
sbb
mov
push
inc
in
jl
sub
jmp
jle
jp
sahf
inc
mov
or
xor
aaa
and
pop
hlt
mov
jl
inc
lahf
cmp
mov
sub
ljmp
push
mov
insb
fildl
lds
push
insb
cmp
cmp
lock
pop
adc
outsb
fistpl
xor
sub
lahf
jns
in
jg
mov
mov
roll
aad
hlt
repnz
ja
mov
enter
pusha
int3
xchg
leave
je
rolb
inc
loop
dec
cmpsb
xchg
jns
mov
dec
lcall
fcoms
leave
repnz
cmpsb
arpl
enter
push
xor
in
mov
mov
push
insb
cmpsl
shlb
into
xchg
mov
outsb
mov
bound
pop
rolb
insl
xchg
imul
je
das
mov
jp
sub
mov
adc
fucomip
pop
dec
sbb
lret
and
outsb
inc
sbb
fsubrl
pop
jecxz
movsl
cmc
xchg
or
movsl
add
sub
lods
sbb
dec
je
popf
fcomp
cmp
inc
sub
pushf
arpl
adc
jl
mov
adc
adc
pop
pop
or
daa
icebp
and
sbb
or
inc
dec
mov
jmp
stc
push
mov
xor
sub
push
or
jecxz
fs
out
sub
xchg
mov
int3
fistl
xchg
pusha
or
add
jmp
sarl
jns
pop
ret
loop
cli
aaa
out
inc
mov
sar
icebp
push
push
inc
sub
mov
pop
mov
in
popl
pushl
cmpsl
ret
push
adc
jl
lret
jo
adc
xchg
pop
aam
imul
add
add
pop
adc
push
ficoml
and
inc
and
arpl
in
std
inc
aad
sbbb
mov
jnp
xchg
test
mov
fisttpl
das
dec
mov
inc
subl
xor
jl
push
insb
popf
cwtl
addr16
loop
je
out
cli
pop
outsl
inc
push
sub
in
int
daa
adc
mov
mov
cli
in
mov
imul
mov
cmp
in
les
or
push
ljmp
out
mov
cmc
mov
mov
and
shr
fdivp
jbe
or
cmpsb
jnp
or
push
mov
mov
fst
stc
sbb
cmp
sti
je
lds
add
lea
fwait
pop
xchg
and
mov
mov
jae
js
std
sub
mov
call
mov
scas
xor
mov
add
jne
add
imul
xlat
mov
icebp
jl
and
cmp
jge
inc
jo
fistl
nop
decl
rclb
jle
cmpsl
subb
xlat
lock
test
mov
movsb
xchg
mov
into
xor
les
pop
ret
sbb
cmp
cmp
popa
xor
test
and
sbb
add
dec
lret
jne
outsl
dec
mov
sub
addl
and
and
imul
jg
cld
je
scas
pop
stos
push
adc
mov
mov
pop
scas
mov
sbb
lods
sbb
test
xorb
test
scas
movsl
arpl
push
dec
hlt
lea
dec
out
inc
jns
jge
clc
dec
fwait
or
decb
sub
xchg
jg
cmpsb
daa
ret
sbb
xor
push
out
dec
icebp
paddusb
sbb
push
jno
sbb
in
outsb
je
sar
jns
or
movsb
arpl
rcrl
mov
push
and
es
push
test
mov
jg
mov
xchg
in
gs
and
jbe
sbb
mov
and
lahf
sub
jmp
nop
movsl
hlt
cmp
sbb
test
pop
cmp
test
or
scas
jb
out
dec
jle
xor
aad
mov
xchg
mov
add
mov
pusha
nop
cltd
adc
out
xor
negb
or
leave
or
lahf
jge
ja
scas
mov
mov
mov
cmpsl
aaa
fiaddl
into
cmp
out
ret
xchg
stos
outsl
or
pop
lea
lods
dec
sbb
pop
idivb
ss
xchg
or
aam
shll
idivl
std
je,pt
fsubr
loope
jae
cwtl
test
mov
mov
ret
mov
jl
pop
je
xor
mov
insl
mov
cmp
fiadds
sbb
cmp
jp
popf
or
mov
stc
mov
and
mov
mov
cmpsb
inc
push
dec
add
and
xchg
mov
inc
mov
aaa
sbb
in
add
ja
and
pop
mov
insb
cld
lea
popa
cwtl
push
aas
and
pushf
nop
mov
fadds
loope
and
xchg
mov
mov
pop
pop
pushw
out
and
sub
mov
roll
loopne
mov
xchg
pop
inc
in
imul
cmp
mov
dec
cmc
sbb
js
cmovnp
inc
in
push
in
int3
scas
decl
imul
push
cmpsb
mov
jecxz
in
pop
pop
jb
popf
push
sub
cwtl
adc
push
xchg
cmp
not
pop
cmp
ss
call
pushf
xor
or
dec
test
jo
popf
in
loop
push
fcmovb
test
ja
inc
inc
push
negl
fistps
xor
and
movsl
icebp
jg
jne
or
enter
xor
xchg
jbe
ficoms
mov
adc
mov
js
adc
movsl
and
stos
push
xchg
push
jae
xchg
xchg
jl
shl
cmpl
inc
out
or
pop
imul
push
imul
pop
inc
cmp
pop
sbb
xchg
mov
movsb
sbb
cltd
lods
cmp
pop
add
jno
rorl
jo
dec
and
loopne
sub
rcrl
push
mov
xor
scas
fucomp
fisubrs
scas
in
or
mov
lock
mov
dec
sbb
cwtl
popf
cmp
inc
leave
and
rcrl
inc
fucomip
inc
adc
shl
jl
mov
mov
popf
clc
lods
push
mov
add
mov
mov
cmc
and
je
rcrl
adc
repz
adc
sahf
xchg
add
lods
mov
fisubl
push
inc
in
shll
rorl
cmc
out
mov
cmp
sbb
push
imul
or
mov
hlt
jo
push
insl
xchg
or
and
add
adc
popf
movsl
mov
jp
aaa
ret
or
add
fs
inc
fdivl
xor
lea
bound
int
xchg
pop
lret
call
imulb
lds
mov
sbb
out
dec
cmp
xchg
sub
mov
push
lret
add
mull
pop
popa
sbb
lcall
push
fs
mov
pop
mov
xchg
js
mov
das
ljmp
sbb
bound
push
dec
cli
mov
mov
test
loop
or
sbb
jne
jns
cmp
clc
aam
dec
in
mov
or
sub
ljmp
js
sbb
lcall
mov
adc
or
mov
lahf
adc
pop
test
repnz
xchg
test
mov
pop
lods
cld
mov
insb
faddp
or
imul
insl
daa
dec
jmp
jp
call
sti
xor
das
insl
data16
es
push
cli
out
sbbb
lcall
pusha
mov
mov
sub
fistpl
xor
xor
iret
sbb
inc
mov
pop
andl
mov
adc
icebp
push
mov
fistpl
shll
mov
and
inc
pushf
cmp
push
and
scas
inc
insl
mov
cmp
xchg
mov
daa
cmp
pop
push
adc
fmull
inc
jle
scas
movsl
jmp
sbbb
and
cmc
mov
popa
pop
cmp
lods
daa
push
inc
in
mov
outsl
hlt
repz
sahf
push
push
daa
jno
ds
adc
mov
and
jmp
in
dec
lcall
mov
xorb
inc
int3
out
fs
xor
insb
cwtl
arpl
adc
inc
and
loope
sub
lret
fstpl
dec
fs
int3
adc
aas
sbb
cltd
jmp
and
or
mov
fnstenv
fwait
cmpsl
sbb
add
stos
nop
or
jp
mov
mov
mov
and
stos
dec
jnp
sbb
dec
nop
les
je
pop
cmp
pop
inc
lods
loope
notl
and
push
xor
lods
lret
mov
mov
pop
or
andl
mov
inc
or
loopne
jecxz
cmp
mov
add
dec
cltd
enter
std
aam
pop
fisubrs
shl
sbb
es
sub
adc
fwait
cmp
xchg
lcall
mov
and
and
mov
mov
xchg
or
xlat
inc
sbb
xchg
andl
dec
ret
add
or
xchg
xchg
mov
rcrb
xorb
or
xchg
push
je
jg
pop
mov
cli
xchg
add
xchg
ljmp
aaa
les
add
cwtl
int
cli
std
rcrl
divb
push
hlt
xchg
stos
addr16
push
outsl
xchg
add
cmp
ret
pop
pop
ret
sbb
imul
push
jo
cwtl
jg
arpl
mov
adc
dec
outsl
jg
jmp
mov
insl
xchg
add
aad
jno
or
pop
inc
mov
icebp
push
aaa
arpl
insl
test
shll
sbb
mov
mov
add
popa
sbb
adc
fcoms
inc
dec
push
das
jl
cmp
mov
and
int3
pop
or
inc
xor
frstor
fwait
cmp
push
xor
test
lret
push
push
inc
inc
add
push
mov
or
in
cmp
pushf
ja
ss
test
icebp
jle
daa
adc
sub
sbb
pusha
cwtl
push
js
push
mov
jge
pop
xchg
hlt
cmp
mov
cs
pop
int
int3
ficomps
jmp
xor
lock
sbb
mov
inc
xor
cmp
dec
iret
popf
loopne
fstp
mov
cmpsl
push
adc
xlat
lahf
into
lahf
jle
scas
sub
rcrl
movl
jl
mov
pop
xchg
sub
cmp
loope
into
xor
mov
push
lea
dec
mov
cmpsl
aas
cmpsb
jecxz
ds
mov
adc
insl
ret
pop
mov
jmp
or
push
cmp
ljmp
icebp
outsl
xchg
push
int
sub
cmp
inc
gs
jbe
pop
adc
fnsave
sbb
mov
sbb
ret
ds
xchg
push
sub
jbe
inc
fnsave
test
loopne
outsl
mov
daa
xchg
fstps
and
jae
mov
pop
adc
push
fimuls
int
cmp
mov
xchg
mov
lret
fcomps
movsl
stos
cmp
sub
fs
daa
mov
xchg
push
ret
sub
sub
xchg
mov
fbstp
xchg
jns
mov
cld
into
xlat
xor
push
repnz
rcrb
stos
jne
pusha
aad
daa
or
sti
inc
inc
xchg
cmp
enter
cltd
mov
mov
add
inc
insl
mov
adc
push
mov
cltd
cwtl
lds
or
bound
dec
fidivs
mov
jl
mov
push
popf
rorl
adcl
and
mov
jg
mov
dec
sbb
mov
das
jno
test
movsl
push
pop
mov
mov
jle
lahf
cmp
jae
ds
sti
pop
xor
and
fisubs
mov
test
nop
mov
xor
push
jmp
cmp
inc
and
mov
mov
dec
xchg
jb
lcall
add
push
out
data16
push
repz
xor
paddd
out
incb
dec
mov
addb
rolb
popf
mov
cmp
jbe
movsl
cmc
push
dec
jno
mov
xchg
mov
push
mov
mov
and
mov
ja
movsb
inc
mov
ss
mov
push
pop
arpl
popf
popa
sbb
pop
repnz
movsb
lcall
testl
jge
fstpl
ds
mov
int
mov
pop
inc
jle
out
mov
mov
ret
icebp
les
push
test
sub
jae
jno
rol
and
and
test
in
es
lods
dec
cmp
push
pop
and
aad
pop
adc
sub
insl
sbb
cmp
xchg
hlt
cltd
pop
outsb
mov
add
sbbl
mov
shlb
aaa
pushf
fcompl
xchg
pop
cld
popa
jmp
jns
push
jge
dec
loope
xor
stos
xchg
cmp
mov
lret
cmp
stos
xchg
lcall
and
mov
fs
fisttpl
cmpsl
add
inc
xchg
mov
push
into
add
xchg
jle
sahf
xchg
xor
pop
inc
aas
in
std
stos
pusha
into
out
xchg
lcall
cmp
dec
sub
cmp
add
sbb
out
add
fisttps
mov
jnp
shrb
jmp
push
add
jecxz
mov
sub
and
push
lret
and
fs
push
sbb
jne
sbb
lods
cmp
ds
push
inc
fnstsw
push
lahf
ds
ds
jmp
addr16
imul
mov
sub
enter
aas
cmp
addr16
clc
xchg
mov
mov
mov
mov
adc
enter
fcoml
xor
movsb
test
movsb
das
bnd
lret
es
add
dec
fsubrs
cmpl
outsb
inc
mov
push
and
hlt
push
sbb
sahf
and
arpl
adc
and
xor
ja
test
jecxz
adc
sbb
mov
or
das
iret
fwait
gs
mov
xchg
in
xor
aaa
inc
xor
out
out
js
mov
mov
sub
daa
imul
mov
or
movsl
pop
sbb
lcall
inc
mov
cmpsl
and
in
cmp
in
movsl
cmp
stos
rcrl
or
mov
imul
jg
add
ror
push
inc
push
jnp
xor
ds
or
sbb
adc
in
mov
xlat
jo
inc
fildl
sti
pushf
cld
lock
add
insl
jno
mov
movzbl
rcll
lcall
jecxz
inc
daa
mov
ljmp
sub
aas
out
test
add
test
int3
dec
daa
nop
jp
sbb
xor
push
cmp
adc
jp
mov
aas
bound
lock
cmp
into
movsl
jmp
ja
popa
cmp
or
jge
cmp
scas
outsb
loopne
cltd
daa
or
dec
jo
lods
cmp
scas
fadds
leave
inc
test
push
pop
inc
adc
xchg
push
sbb
adc
in
jno
sbb
inc
popf
subb
xor
outsl
aaa
dec
sbbb
in
jbe
xchg
lock
pop
lahf
repnz
mov
mov
mov
adc
push
popa
std
hlt
pop
xchg
pop
adc
pushf
or
jecxz
shl
cmp
inc
ja
popf
pop
or
enter
jae
mov
cmp
jle
add
es
push
jnp
std
inc
nop
sub
ja
clc
sub
stos
mov
je
pop
xorb
sbb
xchg
lret
jmp
sub
call
mov
push
fnsave
pop
les
and
mov
out
pop
mov
cmpsb
mov
cmpsb
or
lret
mov
push
out
jb
sub
enter
imul
xchg
imul
std
and
adc
jmp
lods
inc
push
xor
pop
sbb
test
inc
and
shrb
dec
dec
sub
in
pop
mov
bound
lock
subb
in
mov
mov
adc
mov
push
mov
sbb
mov
push
rol
jae
mov
es
jg
xlat
xor
cli
decl
adc
push
fdiv
into
jp
clc
xchg
jae
or
inc
mov
movsb
jne
dec
sub
push
sbb
cld
mov
cltd
into
cmpsb
cmp
jg
pop
dec
clc
scas
test
enter
sbbl
adc
push
lods
movsl
xchg
hlt
sahf
mov
mov
pop
pop
stos
xchg
push
mov
ss
incl
push
scas
jae
lds
sub
push
pop
insl
dec
and
adc
mov
mov
push
cld
sbb
pushf
out
push
add
dec
xor
lret
cs
jp
inc
or
cltd
ljmp
adc
adc
iret
roll
lds
cmpsb
cli
sbb
sbb
movsl
inc
push
mov
mov
xchg
inc
dec
push
mov
push
addr16
test
dec
adc
arpl
or
orl
xorb
jo
scas
repz
xchg
ss
push
leave
ret
inc
iret
cs
test
xchg
push
push
aaa
rolb
mov
mov
mov
das
cmp
sub
je
lret
add
push
sbb
cmpsl
stc
jae
sub
cltd
dec
inc
adcl
cmpsl
push
jge
fldenv
add
dec
push
sub
add
xchg
fmuls
fldpi
lods
mov
jecxz
xchg
ljmp
dec
int3
mov
movl
fsubs
mov
mov
sahf
xchg
add
das
cmpsl
test
mov
xor
incl
sbb
add
push
push
xor
sbbl
mov
fistpll
cmp
stc
imull
adc
or
adc
adc
pop
or
leave
adc
pop
push
imull
bound
bound
sub
lods
sahf
mov
cmpsb
ja
leave
test
or
outsb
cli
ret
mov
insb
stos
push
outsb
adc
imul
fnstcw
add
inc
adcb
xchg
xchg
lret
or
ds
xor
addr16
or
sbb
scas
adc
call
mov
mov
aad
inc
cld
cmpsb
pop
popa
adc
in
jmp
addr16
arpl
lods
push
push
scas
lods
jbe
dec
fistps
push
mov
mov
jnp
insb
scas
inc
sbb
dec
and
cmpsl
fsubp
pop
xor
cmpsl
and
inc
add
in
lahf
cli
adc
loopne
adc
out
ss
aad
in
clc
and
dec
sti
sbb
sbb
jns
mov
inc
mov
pushf
test
jnp
dec
divb
in
add
or
and
push
dec
iret
out
sahf
std
addr16
jecxz
pop
mov
or
ret
pop
lahf
mov
loop
test
je
push
cmp
jmp
xchg
push
fdivrl
test
rcr
jmp
adc
xchg
dec
insl
shll
xchg
add
xchg
int3
stos
mov
lret
pop
cmpsb
cmp
mov
pushf
inc
ret
push
cwtl
mov
inc
stc
addr16
sub
cwtl
ret
cld
clc
mov
int
jns
mov
mov
pop
int3
or
sub
aas
jg
data16
push
scas
adc
test
or
jle
add
xchg
in
repz
aaa
stc
xchg
push
cltd
mov
call
xchg
je
clc
or
sbb
into
scas
push
iret
fndisi(8087
fmuls
jmp
cmp
mov
fisttps
sahf
in
icebp
stos
cmp
dec
lods
sbb
lret
in
cmc
ss
leave
mov
dec
lcall
lock
sbb
mov
subl
arpl
cld
insl
xor
xor
push
mov
xor
fcoml
sub
movsb
dec
adc
test
fimull
sub
imul
dec
cmp
icebp
shlb
xchg
jae
xchg
sbb
aad
cmpsb
stos
push
adc
jle
mov
pushf
cmp
dec
sbb
ret
pop
adc
int
or
pop
fdivr
icebp
mov
lcall
enter
cmp
push
sbb
push
cmp
or
sarl
in
and
sub
popa
push
and
cwtl
fcomps
jecxz
mov
sub
cmp
cmp
pop
mov
ljmp
adc
mov
pop
nop
pop
bnd
jge
or
inc
jmp
idivb
adc
loopne
push
bswap
cltd
dec
mov
nop
cli
andb
scas
dec
sbb
cmp
jle
mov
in
ljmp
lahf
mov
test
scas
xchg
xchg
jno
pop
sub
outsl
and
pop
test
inc
adc
cmp
fidivrl
pop
aaa
dec
mov
imul
sbb
lock
jp
lds
xchg
lea
sub
ljmp
or
wrmsr
sbb
loope
mov
jnp
pop
imul
pop
in
push
pushf
xor
sahf
mov
mov
jo
arpl
mov
xlat
leave
adc
xchg
xchg
js
es
jae
pop
arpl
or
mov
mov
in
xor
clc
xchg
mov
adc
aas
arpl
dec
pop
sub
sub
cmp
pop
push
dec
push
xchg
insb
adc
in
add
sbb
mov
aad
inc
and
jmp
jle
xor
inc
loope
jmp
nop
and
adc
pushf
ja
inc
jl
mov
cmp
or
fdivrl
enter
ficompl
rclb
out
ljmp
jo
maxps
adc
push
pusha
inc
test
jns
dec
dec
scas
mov
push
jge
outsb
pop
imul
rclb
sub
rcll
sub
inc
xchg
fsubs
jnp
adc
ds
inc
lods
jecxz
fisubl
cs
or
stc
push
mov
add
mov
lods
inc
movsl
sub
xchg
push
adc
cmp
or
enter
add
pop
cmp
pop
inc
pop
xchg
pushf
stos
rorb
aad
movsb
jl
shll
jle
pop
inc
mov
adc
ret
dec
mov
sti
push
cmp
push
outsb
insb
sbb
call
rolb
mov
rcl
sub
rsqrtps
aad
jo
push
xchg
push
dec
pop
cld
pop
dec
lds
faddp
fdivrs
aad
mov
add
repz
cmpsb
in
mov
cmp
add
in
mov
pop
xchg
pop
adc
mov
pop
out
cltd
lahf
rclb
inc
push
scas
or
jno
mov
xor
andb
inc
xor
sbb
icebp
gs
adc
or
fs
jae
test
add
je
dec
scas
out
jns
repz
lret
mov
out
and
mov
pop
aas
repnz
sbb
aaa
lea
imul
fwait
pusha
les
mov
add
xor
shll
add
sbb
adc
dec
push
es
xchg
push
push
stos
inc
orl
test
lahf
or
lret
dec
dec
jg
notb
lock
sub
jno
fistl
xor
or
retw
pop
pusha
lcall
insb
mov
test
or
std
dec
xchg
push
sub
mov
movsb
mov
and
out
and
mov
rcll
mov
int3
pop
insb
jno
in
pop
addr16
iret
push
lods
sbb
xchg
cld
stc
dec
or
xchg
jb
push
sbb
outsl
xor
add
xchg
mov
add
out
mov
or
mov
test
fcmovbe
ljmp
rclb
jns
out
and
and
mov
jmp
imulb
fistpll
pop
push
xorb
aaa
push
stc
mov
mov
pushf
push
mov
sbb
push
sti
les
push
jg
loop
mov
pop
cs
xchg
fwait
sbb
rclb
xchg
xchg
lock
icebp
push
pop
cmpsl
int
sub
mov
movsb
xchg
enter
jecxz
outsl
sbbl
jle
sahf
push
push
push
roll
mov
pop
mov
int
ljmp
test
xchg
pop
fstpl
lcall
pusha
jl
aas
cmpsl
push
and
test
in
jae
arpl
xchg
std
mov
jecxz
cmp
xchg
mov
repnz
sbb
dec
sub
sbb
and
iret
ja
out
out
cwtl
mov
into
or
pop
leave
rcll
add
ss
mov
or
jg
lods
or
mov
add
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
push
pop
aad
add
jp
pop
jp
leave
repnz
mov
sub
daa
fisttpl
and
push
pop
jbe
ret
inc
dec
dec
out
inc
iret
test
scas
rcrl
sub
jnp
add
aas
imul
loop
sbbw
bound
sub
xor
inc
add
lea
inc
daa
pushf
sub
iret
movsl
add
cwtl
pop
test
cwtl
imul
jecxz
mov
dec
fildl
dec
outsb
or
sbb
jno
cmp
sub
mov
pusha
xor
and
push
inc
xchg
dec
ret
scas
jb
cmc
test
lcall
fnstsw
inc
cld
ret
xor
fidivrs
mov
cwtl
push
aaa
xor
out
es
dec
pop
pop
pop
aam
gs
jbe
jns
loope
in
jne
decb
loopne
outsb
nop
popa
xor
rolb
or
or
dec
adc
addr16
jl
mov
shlb
imul
lcall
xorl
push
adc
fisttpll
lahf
lret
imul
cwtl
clc
cmp
testb
test
iret
jmp
ja
adc
or
fistpl
xor
jle
push
cli
aam
sbb
or
mov
jecxz
pop
sbb
cmp
aas
notb
mov
jo
mov
cmp
dec
mov
pop
jg
fistps
imul
or
jb
dec
mov
nop
sbb
sub
lahf
jecxz
test
dec
lret
idivl
insb
stc
xchg
std
mov
ficoms
inc
sub
mov
jge
lret
jg
mov
cmpsb
xor
out
or
test
bound
pop
aas
or
hlt
adc
and
dec
fldt
inc
insl
imul
xor
push
das
or
test
je
jne
and
jb
xor
ror
cs
push
fistpl
inc
popf
out
das
push
mov
test
add
and
adc
addb
jl
ret
dec
cmp
aas
mov
xchg
enter
push
sub
insb
dec
lcall
stos
dec
mov
add
fsubrs
scas
mov
and
aas
repnz
mov
andl
movntq
xchg
out
leave
jne
dec
and
mov
mov
jg
adc
cltd
fdivl
push
xor
dec
out
arpl
ret
push
mov
rol
xor
xlat
push
out
addr16
sub
lret
ficompl
push
adc
stc
fwait
xchg
scas
mov
loopne
lods
xor
cmp
inc
sarl
sub
pop
lea
pop
aaa
inc
cmc
shrb
sbb
pushf
jmp
mov
jp
jp
mov
mull
lods
rol
xor
sbb
adc
imul
aam
push
rol
inc
out
mov
icebp
ja
cld
test
jo
cmp
and
mov
push
sbb
fisubrs
rolb
fsubrl
out
int3
sbb
mov
push
sbb
dec
cltd
outsb
out
cmp
sub
gs
mov
xor
jmp
and
mov
ds
pop
pusha
jge
fs
hlt
daa
mov
add
movsb
outsb
ds
lods
xchg
leave
pop
adc
ds
adc
sbb
ret
scas
pop
push
popa
imul
ret
jg
int
inc
loope
mov
popa
mov
lds
or
cmp
cmpsb
notb
xor
inc
jo
ljmp
add
add
mov
pop
cltd
shlb
data16
pop
push
push
push
js
pop
and
rcr
in
jb
movsb
test
cmp
mov
hlt
push
rorb
in
jns
push
enter
mov
ret
push
mov
inc
and
cmp
enter
adc
xor
bnd
cmpsl
je
nop
push
lret
loopne
sti
call
dec
xor
mov
mov
jnp
in
jae
pop
aaa
push
push
cmp
fists
mov
sbb
call
loopne
call
inc
jbe
push
ja
mov
jge
push
repnz
lret
mov
std
fcoml
lahf
or
call
jle
dec
cmpsl
into
cmpsl
and
mov
clc
loope
jnp
out
push
sti
mov
movb
push
pop
std
sbb
enter
jg
loop
adc
pushf
or
mov
xor
fidivrl
lock
daa
sub
push
mov
out
inc
and
xchg
imul
ror
push
mov
mov
cwtl
popf
insl
cmp
mov
fldenv
jp
inc
mov
repz
mov
lock
mov
pop
and
stos
clc
sub
sahf
inc
inc
xorl
addr16
int
xor
dec
das
jle
adc
ss
imul
cmc
daa
cmp
and
or
pop
into
insl
clc
pop
push
dec
mov
dec
or
test
mov
cli
iret
and
fiaddl
push
mov
push
cmp
test
rcrl
mov
jp
sbb
test
mov
incl
ja
movsb
lahf
cs
and
je
lock
lods
iret
inc
sbb
xlat
push
test
std
push
xchg
inc
or
xchg
in
arpl
dec
and
je
fsubrs
add
sub
in
aaa
jecxz
test
js
or
pop
call
das
rdmsr
push
pop
and
xchg
xlat
mov
mov
xchg
sbb
scas
fbstp
push
push
out
ljmp
adc
stos
jo
cwtl
es
xchg
push
xor
mov
out
inc
jnp
sbb
les
inc
inc
push
cmp
enter
sbb
mov
or
sub
sub
jb
pushf
mov
adc
adc
dec
sub
cmp
loop
push
in
mov
adc
cmp
mov
pop
divb
push
push
andl
or
adc
std
xchg
xchg
incl
movsb
mov
cltd
ds
mov
jns
lods
rcrb
sarb
xor
ror
outsb
sahf
jecxz
shr
mov
xchg
scas
lods
pop
shrb
mov
lret
sbb
jg
fsubs
pop
add
dec
and
xchg
push
test
mov
lcall
aas
andb
iret
and
iret
mov
scas
das
xor
mov
rcl
push
sub
jne
repz
mov
xor
bound
sti
popf
pop
pop
pushf
mov
sub
jg
shlb
mov
mov
cs
sbbb
add
jle
aam
xchg
or
mov
imull
sahf
mov
xor
outsb
adc
pop
mov
pop
daa
lret
stc
cpuid
and
dec
aaa
pop
sbb
mov
vpunpckhqdq
outsb
cs
lea
and
pop
add
mov
pop
cmp
fs
out
testb
push
and
repz
adc
sahf
lods
ss
cmp
adc
jmp
por
pop
psrlw
ds
push
loop
add
adc
mov
inc
inc
out
cs
mov
xor
fwait
enter
pop
jno
mov
pop
repz
mov
adc
inc
jne
jmp
test
fstl
jne
andl
aad
xor
mov
out
popa
mov
pop
lret
jl
inc
cltd
loope
mov
add
int
mov
incl
mov
hlt
sub
inc
in
push
sub
adc
mov
fistps
mov
fimuls
aam
stc
mov
dec
inc
xor
xchg
repnz
fwait
xchg
pop
push
test
and
jecxz
mov
sub
pop
in
cli
fcmove
js
fcompl
jle
sbb
ret
jne
dec
pop
in
aaa
adc
xor
sbb
es
popa
xor
and
lret
hlt
popa
push
mov
jg
lea
mov
mov
mov
xor
das
orl
cmpsb
fs
xchg
cmp
inc
call
cmp
add
inc
andl
mov
add
lds
add
mov
fwait
mov
jbe
inc
out
pop
mov
jecxz
dec
inc
or
stos
xchg
clc
lret
adc
sub
mov
mov
fsubr
dec
cmp
movsl
lea
mov
scas
cmp
lods
cmp
jns
imul
iret
xchg
sbb
aas
sbb
add
mov
mov
add
jmp
pop
pop
sbb
xor
imulb
lds
insb
imul
xor
dec
aas
mulb
xor
js
sub
mov
ffreep
mov
push
stos
or
inc
das
arpl
sbb
popa
lock
jp
mov
sti
ljmp
sbb
inc
jbe
fsubrs
cmpsl
mov
stc
movsl
dec
cwtl
std
add
inc
adc
dec
negl
mov
add
imul
fwait
sub
adc
fldenv
mov
jo
push
mov
dec
mov
dec
jp
nop
xor
sub
jp
nop
imul
std
jns
xor
inc
js
dec
xchg
out
xchg
xchg
in
out
ss
ss
sbb
mov
jle
mov
adc
popa
not
pushl
push
pop
push
push
mov
adc
mov
in
clc
sub
pop
mov
pop
add
leave
push
fwait
aad
pusha
shrl
ret
icebp
outsb
jo
mov
pushf
sbb
inc
sub
add
daa
adc
push
xor
imul
cmp
mov
push
or
idivb
or
lahf
call
mov
pop
addr16
pop
sarb
in
inc
xor
dec
mov
sbbl
mov
mov
mov
ja
push
dec
test
sub
adc
inc
jnp
pop
out
ljmp
sahf
adc
imul
cmc
jo
dec
pusha
add
mov
mov
mov
sbb
and
jp
icebp
mov
xchg
out
rorl
inc
das
scas
dec
fisttpl
test
inc
inc
mov
xchg
mov
mov
rcrl
fimull
lods
xchg
adc
shl
out
in
shl
add
inc
mov
clc
bound
cmp
movb
sbb
int
adc
mov
mov
test
fwait
inc
push
arpl
out
or
pop
or
sbb
push
repz
scas
subl
test
xorb
fstpt
mov
jg
test
pop
loopne
cmp
jae
pusha
mov
and
cmp
inc
mov
cld
and
inc
pop
fldl
xchg
push
mov
xchg
imul
out
xor
addl
add
clc
test
pop
inc
inc
inc
in
sbb
sub
push
pop
filds
sbb
rolb
and
ret
mov
push
xor
or
inc
pop
stos
dec
dec
sbbb
xor
inc
add
dec
cmpsb
push
movsb
lahf
scas
iret
leave
lret
lea
adc
adc
jg
mov
pushf
sub
mov
jo
sub
mov
sub
xchg
xor
and
push
add
icebp
mov
jl
pop
pop
sbbb
stos
mov
daa
pop
push
dec
aas
mov
jbe
jo
xchg
insb
xchg
bound
mov
lea
pop
scas
loop
xchg
fisubl
lds
insl
xor
fiadds
adc
push
rcrl
push
repnz
mov
add
icebp
aaa
cltd
dec
mov
and
out
aaa
xor
pop
push
and
das
leavew
mov
fcompl
adc
sbb
decl
jmp
fldl
and
sbb
and
xchg
xor
dec
sahf
sub
fcmovnu
pop
and
out
sub
pop
sub
mov
jb
shlb
shr
mov
int
mov
mov
push
cmp
pop
movsl
movl
xorb
arpl
in
divl
into
pop
ljmp
pop
pop
mov
adc
xor
xor
adcl
ds
imul
mov
idivl
mov
push
mov
jb
sahf
mov
or
adc
cmp
adc
sti
inc
call
mov
test
bndstx
lock
popa
imul
mov
push
xor
aaa
adc
out
jae
lret
ret
repz
mov
icebp
adc
mov
clc
test
push
jecxz
daa
mov
fidivl
mov
scas
icebp
mov
push
jge
jle
dec
pop
mov
mov
sbb
hlt
incb
sti
fistps
mov
into
pop
faddp
icebp
out
adc
adc
les
cli
stos
std
push
push
cmpsl
and
push
cmp
icebp
repz
and
jne
or
clc
jb
rep
pop
lahf
mov
add
jp
test
xchg
add
rolb
or
jb
mov
mov
fucom
sub
dec
add
ss
iret
in
lahf
loope
clc
jno
lret
fists
je
gs
fiaddl
adc
pop
test
das
and
xor
push
ds
pop
outsl
sub
pop
jp
subl
xchg
aad
pop
push
lret
dec
xor
push
nop
fs
jo
pop
pop
int
in
push
sahf
outsb
inc
and
out
in
mov
xchg
mov
and
es
sbb
sub
leave
or
cld
mov
cmp
jecxz
sub
jae
imul
les
add
fwait
cmp
mov
jl
ja
dec
push
dec
cld
stos
jle
mov
or
adc
jo
cmc
cmp
dec
bound
aam
cmpsb
mov
imul
in
test
xchg
push
int3
pop
push
test
leave
cmp
xchg
and
arpl
ja
xor
jge
pushf
lds
mov
aas
lret
dec
jmp
call
clc
cltd
push
dec
jl
rorb
addr16
mov
shll
cmp
lds
fdivr
ds
push
xchg
push
jle
in
push
clc
lds
fcmovb
add
pusha
test
xor
movsl
add
or
add
sti
adc
mov
xor
dec
sub
cwtl
adc
int
inc
or
mov
adc
or
lods
xor
scas
push
dec
in
in
rclb
jp
mov
scas
push
sbb
gs
cli
ds
fdivs
int3
jnp
xchg
mov
hlt
subb
repnz
stos
dec
int3
inc
ds
mov
inc
jae
xor
xchg
xchg
mov
jb
lods
push
test
lock
nop
outsb
imulb
jl
sub
fcoms
adc
inc
push
sub
scas
scas
dec
scas
nop
inc
dec
fiadds
test
je
mov
mov
gs
inc
xor
and
stc
push
lea
stc
sbb
test
and
int
pop
loop
lcall
pusha
nop
test
cmp
ljmp
xchg
sub
xlat
mov
cmc
leave
pop
fsubr
pop
push
jno
sub
fadd
mov
jl
cmpsl
pop
ljmp
lds
mov
ljmp
xchg
stc
mov
das
push
dec
xchg
mov
mov
jbe
mov
cmpsb
xlat
xchg
sub
sahf
aam
sub
xlat
add
dec
pop
push
xchg
ja
stos
loope
or
loopne
xlat
into
or
add
lret
movsb
cmp
mov
xchg
mov
adcb
scas
jge
cmp
add
mov
pop
and
mov
repnz
pusha
dec
arpl
mov
ficoml
push
faddp
scas
stc
insl
loope
fstps
rcrb
pushf
shl
aam
or
in
add
xor
arpl
repnz
cld
lret
cltd
cli
jne
jp
xchg
or
mov
adc
aas
js
xor
dec
pop
push
cmp
or
sub
lds
sti
jo
lret
aaa
enter
rclb
repz
icebp
adc
js
mov
pop
pop
push
mov
pop
cmp
cmp
jae
xlat
out
xchg
or
and
cwtl
and
int3
lea
scas
mov
and
iret
imul
movsb
add
push
sub
add
ss
mov
cmp
loop
aas
ljmp
mov
inc
pop
sti
sbb
out
jae
jg
outsb
xlat
xchg
sbb
pop
flds
or
out
into
lret
inc
lods
call
xchg
xchg
dec
add
mov
enter
jp
mov
in
out
cmp
in
popl
sbb
sub
sub
push
mov
int
jbe
and
movsl
mov
sbb
sbb
cmp
jp
jecxz
imul
mov
sub
arpl
adc
inc
mov
cmc
cmpb
icebp
xor
cmpsb
insl
icebp
fwait
inc
pop
push
fsubrl
orl
loop
loope
fistpl
inc
inc
sahf
loop
mov
lock
xor
push
sbb
pushw
inc
or
fs
adc
lods
loop
push
xchg
jne
mov
fadds
push
mov
subl
aam
mov
jns
cmp
add
cltd
mov
pop
xchg
pop
push
sti
inc
jle
movsb
and
pushf
insl
xor
and
push
scas
out
dec
mov
sub
jns
movb
inc
mov
adc
jp,pt
cmpsb
jge
pop
daa
mov
rcll
mov
arpl
rcr
ljmp
in
mov
insl
and
jl
sbb
mull
aad
dec
test
jge
mov
mov
ljmp
icebp
lcall
inc
addr16
stc
gs
insl
dec
push
dec
orl
jmp
jle
mov
movl
out
mov
aas
add
mov
ss
mov
mov
pop
imul
aad
and
mov
pop
lret
cld
mov
jnp
mov
inc
cwtl
bound
sub
cmp
add
cld
sbb
jl
daa
sbb
imul
pop
and
mov
push
jns
push
xchg
and
cmp
nop
int3
pop
adc
dec
pop
mov
xor
fdivrp
or
dec
out
inc
sub
pop
cwtl
jbe
push
leave
in
lods
push
test
arpl
and
inc
imul
inc
jle
loopne
sub
dec
push
pop
push
or
mov
mov
xchg
sbb
jns
mov
flds
arpl
ret
cmpsb
insl
int
aam
mov
ja
jge
in
mov
inc
leave
fs
push
jp
rolb
and
inc
jp
and
xor
mov
pushf
call
add
lds
mov
rclb
dec
add
fists
push
jbe
repz
clc
sti
imul
mov
in
mov
out
cmpsl
push
mov
sti
pop
push
and
out
subl
mov
jae
push
rcll
push
sbb
dec
test
cmpsl
inc
push
add
cmp
sbb
or
int3
movsl
jae
lcall
and
cmpsb
mov
add
push
lods
or
or
aas
stc
loope
pop
mov
fmull
enter
imul
or
add
sbb
jecxz
pop
sar
popa
rcr
mov
jne
push
fwait
or
lahf
mov
in
mov
arpl
out
repnz
test
icebp
mov
cmc
push
fwait
xor
sarl
pusha
jns
push
sahf
out
popf
aaa
sbb
mov
xchg
aas
jns
loop
mov
fnop
cmp
lea
ret
mov
loope
aad
xchg
jmp
inc
push
xor
jl
adc
stos
fnsave
adc
xchg
sub
ds
inc
icebp
cmpsl
pop
jmp
es
pusha
dec
mov
pop
in
mov
jae
jbe
sbb
push
sub
xor
push
jnp
daa
pushf
inc
test
andb
jae
adc
insb
push
int3
adc
dec
icebp
cmp
pop
sub
outsl
dec
in
je
mov
sub
pop
push
pop
pop
jb
in
cmp
je
or
mov
out
shl
adc
outsl
xchg
fisubrl
or
and
aas
pop
sbb
push
nop
sbbb
sub
aad
sub
sub
jnp
lock
add
jne
leave
aam
out
add
sub
stos
mov
sub
scas
adc
push
xchg
adc
shl
jl
fwait
ljmp
push
aad
dec
lods
mov
bound
fidivl
pusha
push
xchg
jg
mov
mov
shll
ss
jae
fcoml
add
loop
pop
and
mov
xlat
pop
cmp
jno
or
or
sub
or
or
jae
jb
mov
jmp
lods
xchg
add
mov
push
dec
and
pop
or
push
pop
xchg
xchg
pop
adc
dec
out
pop
ret
lock
mov
cmp
insl
xchg
imul
or
arpl
jg
sahf
fisubs
mov
jmp
ljmp
sub
lret
insl
loop
mov
pop
push
sti
jo
sti
ljmp
dec
addb
lds
and
pop
sub
xor
pop
sbb
scas
fnstsw
scas
scas
cmc
das
dec
mov
stos
cli
or
mov
dec
jae
hlt
inc
addr16
xor
enter
call
ja
mov
fidivrs
cmpsb
or
clc
rcll
pop
movsl
fstl
stc
frstor
add
cmp
add
jp
ficompl
xchg
and
ja
popf
out
jmp
cmpsl
jnp
out
sbb
movsb
sbb
jl
xor
sbb
push
xchg
out
xor
xchg
aad
mov
sahf
pop
sbb
mov
scas
in
adc
mov
xor
jb
sub
addr16
and
notl
cmp
sbb
pop
xchg
adc
jo
dec
daa
mov
xchg
cmp
mov
adc
fnstsw
nop
in
out
jmp
int3
cmp
bound
out
out
insl
push
and
push
cs
nop
and
cltd
cs
and
fwait
testl
xor
and
stos
sub
fwait
add
inc
iret
imul
outsl
fcmovb
and
loope
jg
fstps
mov
xchg
mov
dec
add
and
and
test
xor
adc
pop
pop
orl
cmpsl
jbe
lock
lahf
mov
cmp
in
call
adc
popf
shlb
mov
movsb
xchg
arpl
lock
jg
sub
clc
shrl
xchg
fwait
and
mov
adc
cli
fsubl
xor
sti
adc
adc
push
inc
je
mov
cmp
mov
fs
jmp
jae
loop
add
scas
out
shr
xchg
out
mov
pop
pushf
push
inc
push
pop
fisubrl
cmp
push
inc
inc
subb
sub
lret
scas
xor
xchg
mov
mov
jl
stos
call
add
dec
ror
dec
lods
jno
mov
test
ficoms
ret
jg
push
or
fs
and
iret
pop
fdiv
inc
sub
push
je
jne
addr16
add
incb
js
mov
dec
call
add
mov
pop
xor
xor
sub
cs
aas
mov
cld
lock
pop
fldl
and
ficomps
scas
stos
outsb
pop
into
movsb
or
outsl
cmpsl
rorl
jb
lret
frstor
pusha
xor
roll
sub
cli
scas
xchg
ss
iret
or
leave
sbb
jecxz
jmp
dec
testb
and
rolb
inc
stc
dec
fstl
jns
and
movsb
cmp
std
jno
pop
mov
subl
out
cs
mov
jns
xlat
rorb
fwait
xchg
lret
and
cmovae
cmp
and
das
sahf
aad
sahf
add
push
push
loop
cmp
push
cmpsl
mov
jae
jne
jmp
inc
pushf
pusha
xchg
idiv
mov
or
leave
jbe
mov
test
sub
inc
das
data16
rorb
lcall
cmp
imul
cmpsl
cli
mov
pop
pop
and
ffree
fldt
mov
push
and
sub
and
xor
xor
lock
loopnew
movsb
xchg
xlat
inc
shlb
sub
jbe
jb
ss
leave
or
or
js
xchg
rclb
sub
xchg
xchg
pop
sbb
fcomi
adc
outsb
lcall
pop
jae
and
or
arpl
repz
push
cli
dec
mov
icebp
fdivs
xchg
adc
int3
xchg
ret
jg
or
and
inc
shr
add
push
lret
das
icebp
lock
sub
movsl
mov
add
shll
inc
fwait
or
add
faddl
or
orl
js
sbb
adc
or
test
js
cwtl
mov
pusha
test
xchg
inc
sub
or
mov
ds
sbb
lret
orb
and
mov
aaa
imul
cld
andb
sbb
popaw
mov
xor
dec
fcomp
sbb
push
mov
ja
pop
pop
and
fldt
mov
pop
xchg
arpl
adc
in
xor
push
sbb
scas
orb
xor
mov
aad
cmpsb
fbld
das
das
test
stos
imul
das
lret
mov
push
in
cmc
xor
xor
jb
xor
nop
test
sahf
popf
movsl
mov
dec
scas
subb
dec
rclb
icebp
bound
adc
mov
fimuls
fwait
and
pop
xchg
jnp
lock
xchg
mov
xchg
mov
test
mov
mov
pusha
stos
push
xchg
or
xor
or
adc
in
mov
jbe
xchg
mov
cwtl
cld
icebp
cmpsl
dec
mov
cmp
movsl
shlb
xchg
cmp
pop
fimull
xchg
loope
mov
dec
add
xchg
movsb
mov
ja
out
fcmove
jo
sbb
clc
sub
xchg
cmpsb
cmp
mov
xor
cmp
and
push
mov
xchg
mov
imul
scas
mov
mov
ljmp
popa
mov
andb
fnsave
scas
mov
xchg
xchg
adc
int3
push
movsl
inc
pop
push
or
por
adc
add
mov
mov
pop
in
xchg
mov
cwtl
scas
add
fstpt
pusha
int3
test
pop
xchg
imul
lahf
or
pop
iret
pop
xchg
icebp
cmp
les
push
and
mov
in
psrlq
mov
dec
cld
pop
dec
dec
daa
cmp
out
xlat
jmp
mov
push
mov
ficomps
adc
xchg
dec
js
outsb
mov
sahf
test
or
out
mov
imul
pop
in
or
or
pop
mov
or
adc
xlat
sbb
jb
adc
inc
sbb
ss
mov
subb
repz
mov
push
and
js
sbb
sub
and
xchg
adc
dec
inc
sub
sub
push
sub
aas
popa
jl
push
dec
daa
mov
loop
insl
sub
addr16
dec
int3
dec
jo
sub
adc
clc
fbld
mov
sti
pop
mov
cli
insl
stos
divl
sub
lock
data16
or
mov
mov
je
push
mov
nop
fidivrl
cld
xorl
sub
sbbl
in
xor
add
cmpsb
pusha
jb
sbb
pop
aaa
jnp
mov
out
clc
xchg
jecxz
sbb
insl
mov
daa
test
or
outsb
sbb
insb
cmp
push
aad
loop
push
ret
inc
das
jl
xchg
cltd
sbb
fistl
push
pop
jmp
dec
out
sub
or
sbbl
sbbb
test
outsl
leave
pop
dec
inc
rcr
out
cmpb
and
mov
or
lods
xchg
icebp
push
mov
jmp
add
add
xor
cmp
repz
mov
xchg
sub
jle
daa
sahf
fwait
mov
fists
jno
inc
push
pop
sub
pushf
std
movsb
stos
imul
pushf
shl
push
mov
mov
xchg
push
mov
or
mov
aam
push
insl
inc
test
bnd
scas
outsb
sarb
loop
loope
jnp
test
ret
int3
mov
out
clc
mov
add
inc
aad
push
mov
sbb
or
jecxz
lock
cld
xchg
mov
push
stc
bound
jae
mov
pop
aas
push
cld
mov
aam
xlat
shll
enter
push
push
call
scas
mov
push
scas
popf
adc
cmpsl
fisttps
js
or
pop
mov
xchg
in
mov
fisubs
mov
jmp
jo
testl
pop
and
adc
addl
push
sbb
rolb
lcall
jae
repz
scas
mov
inc
inc
pop
inc
jmp
sarb
out
ds
scas
or
and
cwtl
or
cmp
pop
xor
bswap
mov
xchg
sub
xor
sbbl
iret
inc
mov
lret
lret
lcall
sub
lahf
or
loope
rolb
or
mov
pusha
fsubrl
jle
test
ja
cmp
dec
mov
pop
mov
sbb
dec
and
jmp
imull
cmp
sub
fisttps
out
push
lahf
addr16
clc
pop
insb
fbstp
sbb
xchg
lret
xchg
test
push
xor
mov
jne
xlat
mov
adc
ja
jl
jmp
imul
cmpsl
mov
dec
stc
nop
nop
loope
ficomps
lock
mov
inc
mov
icebp
int3
push
pop
nop
xchg
std
subl
add
or
subl
and
mov
aad
cld
dec
push
xchg
mov
pop
mov
repz
loopne
gs
mov
mov
add
adc
push
dec
jnp
mov
hlt
dec
dec
sbb
mov
push
pop
shlb
jns
and
pop
subb
mov
clc
sub
jo
sub
mov
popa
out
dec
jnp
movsb
or
loope
mov
cmp
adc
sahf
and
insb
loop
or
lcall
xor
xchg
stc
mov
dec
insb
add
popa
inc
mov
cwtl
out
lret
push
test
cmc
or
sahf
mov
rcr
enter
addr16
ljmp
inc
lcall
repnz
mov
and
dec
cs
pushf
push
mov
inc
cld
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
cmp
inc
push
nop
inc
push
aaa
and
pop
xor
pop
inc
inc
ljmp
lahf
lea
jecxz
adc
mov
inc
inc
inc
jb
jne
in
test
sub
stos
in
pop
popa
aad
jbe
mov
mov
jl
aam
mov
cmp
mov
stc
fmuls
add
mov
lods
or
scas
jmp
pop
jg
push
mov
inc
sbb
fwait
jecxz
push
lcall
int
or
dec
ja
or
aaa
data16
mov
sbb
xor
movsb
add
mov
jns
jb
loopne
add
and
fidivs
fiadds
insl
fnstenv
mov
lret
addr16
clc
imul
lret
fldenv
jno
test
add
pop
out
jo
ljmp
or
sub
data16
rcrb
rcr
jae
enter
push
test
push
icebp
out
clc
xor
mov
js
lcall
adc
mov
xchg
scas
sahf
pop
sub
pop
mov
ss
mul
push
sbb
test
repz
xlat
cwtl
jl
mov
mov
outsl
cmp
sbb
inc
jge
scas
adc
adc
sub
leave
outsb
mov
lcall
add
aam
lret
xor
mov
sbbb
pop
dec
mov
jae
cmp
add
movsl
enter
sub
xor
mov
push
leave
mov
jmp
push
jmp
and
ds
jle
out
jg
xchg
inc
cmp
ffree
movsl
popf
idivb
jg
mov
xor
sub
push
xchg
add
sub
or
mov
frstor
inc
jle
push
mov
push
xchg
inc
ja
imul
or
addl
andb
and
aam
sbb
mov
jp
mov
jl
push
adc
adc
push
imul
lock
xchg
cmc
stos
push
lret
mov
icebp
lds
fsubrs
movsl
xchg
jg
lahf
shlb
fsubs
xor
fisttpl
out
das
mov
mov
mov
mov
gs
add
aaa
movsl
je
scas
push
negl
sbb
lret
int
lods
sub
bound
stos
lds
test
adc
loope
inc
jg
dec
mov
xchg
shl
mov
repz
lods
enter
inc
lock
aad
push
mov
pushf
repnz
out
ficoml
mov
jbe
lret
xor
ljmp
mov
push
movsb
pusha
out
sahf
jno
jle
and
dec
sbb
xor
into
inc
push
jmp
lods
sbb
icebp
or
outsb
jno
push
mov
fadds
pop
imul
push
sti
add
ss
mov
mov
mov
dec
sub
jecxz
xchg
and
jl
push
fidivrl
mov
in
inc
mov
lea
fsqrt
fnstsw
xorl
sbb
fdivrs
sub
jge
stos
clc
or
aad
mov
push
imul
push
arpl
dec
dec
adc
dec
mov
or
inc
or
mov
roll
cwtl
dec
ds
imul
rclb
popf
imul
call
inc
sahf
pop
movsl
dec
add
dec
dec
add
adc
mov
mov
sub
int3
js
dec
repnz
push
push
adc
testl
pop
stos
lock
jno
clc
ja
jbe
scas
lahf
enter
pop
cmp
mov
adc
jnp
aam
rcl
popl
xchg
dec
lcall
xchg
push
das
push
pop
rcr
add
loope
cld
adc
lods
aaa
in
mov
aas
jmp
pop
js
testb
xchg
sbb
rorl
sub
jbe
jnp
mov
mov
shl
cmpsb
push
add
aas
sbb
and
mov
jmp
gs
into
cli
mov
insb
test
shlb
outsb
psrlw
lret
fsub
aam
mov
sbb
mov
adc
pop
mov
cmpsb
rorl
loop
or
xchg
mov
outsb
inc
and
add
add
sbb
adc
push
inc
xchg
jmp
mov
test
sbb
sub
inc
push
sbb
pop
pushf
jae
adc
add
sbb
pusha
cwtl
jmp
push
add
and
lods
push
roll
dec
or
push
rorl
jbe
test
in
xchg
sub
add
or
jnp
mov
sbb
sub
sub
jecxz
jns
sbb
or
repz
pop
xlat
fstpl
adc
out
dec
xchg
lock
loopne
orl
xchg
xchg
movsb
jns
test
and
popa
xchg
in
ss
in
cmp
jp
push
dec
xchg
jmp
pop
inc
cmp
test
ja
mov
and
mov
inc
and
push
data16
fs
int
clc
mov
push
sub
push
call
imul
fadds
out
cmp
mov
xor
and
sbb
push
pop
or
adc
lods
adc
jb
lea
cmp
add
push
and
rclb
leave
sub
jno
pop
cwtl
pop
nop
or
es
xchg
add
add
mov
sub
jno
int
jnp
push
aaa
loopne
mov
setl
aas
insb
lea
inc
jnp
nop
mov
cld
aad
push
insl
mov
repnz
aaa
outsl
iret
pop
adc
cmp
repz
push
mov
es
cmpsl
ljmp
adc
pop
xchg
loopne
ror
dec
and
dec
push
sub
cmp
mov
nop
scas
lods
fsubl
loop
xor
xchg
hlt
mov
gs
add
int
lods
aad
lods
mov
adc
cmpsb
sarb
xchg
ja
movlhps
pushf
push
mov
cmpsl
fsubl
int3
cwtl
dec
stos
add
cmpsb
xlat
pop
dec
sub
int
mov
divl
mov
sub
outsl
ljmp
add
mov
leave
in
pop
sti
sbb
push
mov
subl
enter
xor
sahf
lods
les
xchg
arpl
mov
add
stos
testl
nop
jnp
add
mov
loop
xor
in
jge
inc
shl
outsb
pop
or
ss
push
test
ss
shl
arpl
sub
ret
add
cld
mov
dec
fmul
bound
adcl
cmp
xor
in
jns
and
cmp
xchg
mov
jne
movl
or
fisttpll
mov
cmp
push
cmp
xchg
rolb
cmp
xchg
xor
in
pushw
iret
inc
insb
inc
test
or
push
dec
jbe
fmuls
pop
pop
dec
pop
sbb
sbb
fldcw
fildll
scas
repz
xlat
sbb
add
jmp
xchg
sbb
repnz
lret
pop
jne
mov
mov
mov
sbb
pop
aad
lsl
push
in
or
cmp
mov
cmpl
mov
jp
test
pop
and
cli
insl
lods
and
jp
cmp
movsb
jmp
mov
xor
cmpb
lret
lock
inc
les
inc
cmpsl
pushf
fstpl
xor
and
mov
push
lret
push
jne
jno
push
xchg
popf
aaa
outsb
jae
mov
pop
adc
je
xor
cs
inc
pop
mov
imulb
loopne
mov
mov
sub
aaa
jg
imul
insl
sbb
dec
xchg
dec
scas
cmc
shr
xor
mov
int3
movsb
int
mov
addr16
add
xchg
outsb
adc
xor
in
lds
jae
push
adc
sub
pushw
adc
pusha
jmp
mov
fs
sbb
xchg
inc
out
or
and
repnz
rorb
clc
jne
adc
cli
arpl
cmpl
das
dec
sub
ss
cmpb
paddusw
push
jnp
imul
push
loopne
jne
or
jno
mov
mov
ljmp
bound
das
out
sub
jl
xor
test
jge
xor
lea
mov
iret
shll
jne
cmp
fists
sbb
jp
dec
inc
xchg
dec
xchg
mov
cmpl
xchg
sub
inc
pop
mov
adc
movsl
shlb
fnstenv
push
and
mov
dec
inc
lock
cltd
fildll
mov
and
flds
cwtl
ss
pop
fwait
js
lret
imul
or
addr16
ret
mov
imul
mov
orb
and
jp
sub
pusha
sbbb
dec
clc
xchg
push
call
pop
cmp
fnstsw
addr16
sbb
mov
into
ljmp
mov
mov
loopne
mul
daa
in
inc
jne
pop
dec
shlb
fldenv
pop
mov
mov
push
sahf
pop
dec
push
pop
lret
mov
std
mov
jp
test
sbb
ja
xor
push
jne
nop
cmp
mov
imul
lcall
fdivl
shrb
inc
push
daa
push
mov
inc
adc
inc
imulb
sub
jb
xor
aad
nop
lahf
mov
or
outsl
fisttps
or
test
daa
inc
and
dec
dec
add
aad
inc
stos
and
lock
call
ret
pminub
faddl
imul
sbb
das
jmp
or
fcmove
rcrb
bt
or
insb
fsts
test
inc
loopne
xchg
fsubrl
cmp
mov
ficoml
and
out
test
outsl
mov
ffreep
inc
add
fs
push
push
fwait
adc
jbe
adc
repnz
and
add
xor
outsb
in
xchg
cltd
out
push
iret
pop
scas
pusha
iret
andl
mov
bound
mov
xor
fimuls
push
mov
into
sahf
out
dec
jo
ret
push
fs
sub
repnz
mov
xor
xchg
push
jno
push
pop
cmpsl
pop
sti
xor
pop
or
sbb
mov
pop
mov
lcall
adc
addr16
fidivrl
jge
cmp
and
rcrl
mov
pop
fisubrl
cmc
mov
scas
pop
jae
jecxz
push
lret
jne
ljmp
and
jp
sub
loopne
popf
test
xchg
cmp
inc
pop
mov
mov
daa
dec
stos
dec
mov
repz
push
mov
clc
cmpsl
jae
mov
add
sbb
cmp
and
fisubrl
xchg
and
adc
xchg
cltd
mov
adc
sbb
cltd
int3
fisubl
sub
cmc
or
lcall
add
adc
divb
push
mov
adcb
outsb
daa
xor
loop
inc
popf
sbb
ret
xchg
pop
push
fwait
mov
or
sti
ljmp
push
vlddqu
push
pop
xchg
lcall
stos
xchg
in
mov
mov
addr16
jl
outsl
ffreep
mov
fistpl
int
arpl
int
in
sub
xor
adc
icebp
clc
mov
sub
fisttps
repz
out
mov
shl
outsb
lret
push
push
cli
xorb
aaa
sbb
stos
stc
out
sbb
filds
pop
pop
inc
mov
daa
sub
xchg
add
push
enter
cmp
dec
int3
je
xor
negb
push
xchg
loopne
out
nop
and
out
inc
jle
add
fmuls
stos
jbe
mov
aam
icebp
mov
xchg
addr16
test
insl
mov
test
stos
sub
outsb
mov
lahf
test
xchg
xchg
ret
jg
push
mov
sub
mov
xor
lock
pop
adc
inc
aam
test
fnstsw
jl
xor
shlb
xchg
jns
sub
add
mov
call
in
sub
xor
sbb
push
mov
xchg
push
cmp
add
stos
xor
dec
adc
pop
jbe
adc
in
xchg
add
or
sbb
cld
psubq
scas
jns
sub
cli
imul
pop
jns
das
push
mov
in
jae
outsb
add
bound
dec
ljmp
jns
pop
and
mov
jg
and
ror
leave
add
dec
sbb
xor
sbb
or
mov
xor
movsb
ja
mov
mov
add
ret
out
add
int
and
loope
adc
mov
roll
out
cs
fstl
sti
cmp
inc
pushf
pop
push
popf
pop
sub
sbb
aam
push
fwait
adc
mov
cmpsb
and
mov
push
mov
ljmp
mov
pop
adc
sbb
les
out
xchg
sbb
jl
and
jmp
ljmp
shll
cli
shll
inc
cmp
pop
jo
mov
sbb
sub
shrl
jb
cmpb
push
shlb
push
push
mov
and
bound
push
or
pop
mov
adc
cmc
and
cld
popa
and
cmp
cli
jb
lods
mov
mov
in
insl
fimuls
push
cli
mov
jnp
sbb
out
imul
pop
adc
popf
mov
cmp
cmp
and
inc
jae
mov
inc
jp
add
mov
sbb
or
lret
adc
pop
dec
hlt
sub
mov
subb
jle
and
fbstp
push
pmaxsw
iret
daa
jbe
shr
and
lods
cli
test
dec
lcall
ss
je
jae
cs
dec
insb
or
push
fnstenv
mov
jne
lcall
xchg
daa
decb
lcall
pop
addr16
inc
mov
shrb
add
sarb
jbe
jbe
inc
pop
cmpsl
add
aad
adc
xchg
xchg
in
mov
push
dec
les
and
nop
insb
add
push
imul
negb
jmp
mov
push
jnp
cmc
add
or
out
mov
inc
cmp
aaa
lods
mov
xchg
es
ja
in
xor
mov
mov
aaa
stos
inc
push
sbb
mov
cmp
xchg
fs
fdiv
jae
cmpsl
push
stc
mov
sub
xor
mov
addr16
mov
add
ljmp
or
push
inc
pop
fisubs
jae
pop
xchg
inc
rcr
mov
inc
mov
dec
out
aam
push
pop
sbbb
fs
adc
jne
push
dec
push
mov
push
popf
std
aaa
lret
ja
pop
cmp
js
xor
arpl
or
aam
dec
or
cmp
and
sbb
popa
mov
xchg
sti
lcall
and
stc
push
push
xchg
das
cli
jmp
adc
xchg
push
and
jl
pop
mov
xchg
stc
sub
loope
mov
ret
lahf
and
mov
inc
sub
xor
div
cli
sbb
insl
imul
cmp
lock
mov
icebp
and
mul
lret
cmp
imul
stos
cli
sti
lds
loop
sbb
pop
push
lods
cli
lahf
pop
xchg
ss
cld
jno
cmp
sub
repz
addr16
imul
cmp
xor
lock
nop
cs
dec
add
sbb
sub
adc
mov
pop
scas
mov
movl
mov
inc
adc
and
push
insl
adc
inc
sub
mov
lcall
mov
sbb
jne
sbb
into
jp
imul
adc
ja
ss
dec
aam
shll
imul
sub
fmulp
push
mov
rorb
mov
in
push
jl
pop
daa
jb
sub
pop
pcmpgtb
pop
subb
adc
and
jbe
push
mov
xchg
fsts
loope
push
mov
push
mov
add
in
cs
subl
sbb
push
je
es
addb
pushl
inc
lea
add
push
ror
mov
enter
das
xor
xor
cmp
xor
mov
xchg
and
arpl
ja
or
mov
loop
pop
mov
test
aas
in
push
fcoml
mov
scas
iret
das
jae
std
fs
adcb
cltd
imul
es
mov
sbb
and
addr16
ret
jne
push
push
xchg
popf
loope
mov
fistl
mov
enter
addb
pop
dec
pop
and
movsb
enter
add
insl
add
sub
jns
pop
mov
jbe
int
sbb
mov
mov
ja
orl
adc
cmpsl
push
mov
xor
test
mov
les
xchg
aad
idivl
dec
mov
aas
sbb
rclb
pop
fsubrl
adc
xchg
sbb
push
int3
call
mul
lcall
pop
xlat
or
test
fistpll
iret
adc
jle
gs
sub
and
cmp
lcall
push
lods
mov
cmp
inc
xchg
xor
iret
jns
int
jg
mov
fstl
fstp
pushf
loop
and
insl
inc
mov
loope
test
mov
popf
jne
inc
mov
lds
adc
ja
and
les
cmp
adc
pop
mov
out
lods
test
jnp
rdpmc
adc
mov
mov
jl
mulb
int
ret
sub
mov
pop
test
jne
pop
dec
dec
or
ja
ss
flds
add
push
jmp
repz
lret
in
sbb
lds
mov
je
aas
pop
jmp
sti
loope
in
lds
ret
pop
cld
cld
dec
inc
ss
inc
lahf
lahf
decb
not
add
or
mov
jp
push
push
pusha
sbb
lret
enter
sbb
lret
jg
loopne
stos
and
jg
in
xor
pop
scas
dec
je
dec
ret
pushf
les
inc
addb
js
imul
lahf
popa
mov
cmp
ret
dec
lret
and
jnp
lods
sbbl
call
loop
fwait
mov
inc
xlat
fcmovnbe
dec
into
mov
mov
cmpsl
add
mov
popa
callw
imul
xchg
fisttps
scas
adc
lods
sti
mov
mov
or
mov
std
add
out
or
cmpl
jns
pop
jb
sbbl
movsb
pusha
jle
xchg
sub
mov
in
popa
insl
aad
push
push
sarb
sbb
gs
mov
or
push
inc
adc
dec
movsb
xor
into
arpl
adc
sahf
pop
mov
add
hlt
mov
aas
fimull
and
dec
push
aaa
sub
pop
inc
xor
rcrl
cmpsb
jne
aam
and
mov
jbe
dec
cmp
mov
add
mov
xor
xchg
add
mov
or
arpl
push
js
sub
mov
mov
adc
leave
roll
lea
out
push
gs
jo
mov
popf
es
jmp
test
adcb
pop
dec
mov
scas
iret
cmp
dec
dec
cmp
jecxz
inc
adc
xchg
pop
stc
pop
xchg
dec
arpl
xchg
outsb
cmp
push
mov
adc
aad
cmp
and
sbb
xorl
repz
jp
cmp
jle
subb
lret
inc
fs
neg
loop
mov
daa
sub
push
mov
fimuls
inc
aaa
or
sbb
add
jmp
loope
or
ret
adc
xchg
aam
mov
push
movl
jg
push
push
inc
jl
mov
sbb
fcompl
arpl
bnd
add
dec
push
insl
cs
fists
pop
mov
pop
imul
nop
mov
cwtl
mov
pushf
dec
add
mov
adc
push
fcom
call
testb
test
mov
inc
mov
stos
sub
pop
adc
mov
outsl
push
fwait
imul
jecxz
mov
pusha
shr
mov
pop
pop
xor
and
pmaddwd
mov
out
cmc
icebp
push
and
mov
repnz
dec
cmp
pop
mov
inc
rol
mov
cmc
xor
xlat
xor
stos
dec
out
insb
mov
dec
fsub
and
cli
jnp
outsb
mov
sbb
mov
sahf
lods
leave
push
jo
int3
jmp
sub
aam
aad
std
push
ds
add
adc
mov
lcall
dec
cmpsb
dec
push
mov
fistpl
xlat
lods
mov
test
sbb
ds
adc
lods
push
cmp
inc
imull
loopne
xchg
std
mov
jns
fdivs
jnp
sub
sbb
outsl
jle
adc
fldl
adcb
push
mov
inc
lock
mov
push
push
or
test
shl
imul
jg
sbb
cmp
xor
movsb
push
ret
xchg
and
dec
jl
xchg
subl
fwait
outsl
mov
push
lahf
mov
pop
daa
adc
cmpsb
inc
fldpi
add
dec
int3
push
es
push
adc
out
out
mov
pushf
test
mov
pusha
sub
or
jb
outsl
sahf
adc
add
sub
fdivp
jae
dec
and
stos
or
addr16
dec
imul
jno
loop
xor
imul
or
push
into
and
jle
jg
mov
cmp
mov
xor
ror
in
cmc
push
sarl
stos
mov
cltd
mov
push
mov
adc
jbe
mov
adc
fldl
int
xor
leave
adc
rcrb
adc
in
ds
divb
add
cltd
fdivl
pushf
lea
test
and
adc
mov
int3
in
lret
cmp
inc
fwait
jg
add
dec
clc
push
jl
pop
push
cmc
dec
fdivs
xor
lret
adc
mov
sbb
in
dec
xchg
cmpb
daa
push
sbb
push
and
push
or
lret
jl
or
dec
jg
cmp
shr
lret
fyl2x
das
arpl
pop
mov
aam
mulb
sub
clc
sub
pop
into
xor
dec
push
adc
sub
fildl
clc
fcoml
lods
mov
in
shrl
and
dec
jmp
mov
dec
push
outsl
and
cmp
inc
and
cmp
int3
shrl
xor
clc
lea
add
dec
int
cltd
js
shr
mov
lea
jl
aas
aaa
rolb
xor
pusha
adc
ljmp
shll
xor
pop
out
push
sub
ret
dec
aad
out
push
sub
dec
cwtl
out
mov
bound
xchg
cmc
fisttps
adc
sbb
or
pop
mov
jmp
dec
imulb
aam
addb
aam
fs
js
adc
cs
add
add
and
call
pop
add
mov
jne
xchg
fs
cmpl
fwait
adc
shl
push
push
pop
rcll
dec
mov
xchg
dec
xor
mov
add
ficomps
cmp
adc
add
enter
pushf
sbb
jns
adcl
aad
ret
xchg
mov
cmp
push
test
into
mov
and
xchg
xor
pop
inc
inc
mov
dec
pusha
mov
sbb
mov
add
movsl
adc
sub
in
mov
push
std
cmp
daa
sub
push
xchg
sub
das
ficomps
and
stc
sub
or
cmp
dec
out
out
adc
int3
sbb
mov
dec
push
fstp
enter
push
mov
and
lea
ds
pop
mov
xchg
arpl
add
sub
sbb
xchg
and
ss
jns
xor
mov
xor
or
es
addr16
jge
xor
bound
cwtl
test
jge
adc
adc
cmp
pop
call
mov
push
add
scas
ss
cmc
add
push
lret
dec
xor
jnp
jmp
pop
aas
rcll
or
pop
stc
std
dec
xor
das
ja
cmp
sbb
cmp
push
sbb
cmp
mov
adc
movsl
push
mov
mov
xor
xor
mov
pop
inc
fcompl
mov
sbb
mov
lods
xchg
scas
mov
mov
mov
aas
jns
inc
or
mov
xchg
hlt
into
xor
lret
clc
sub
test
add
ret
mov
push
loopne
add
dec
out
aaa
call
or
sub
push
xchg
push
push
fwait
aas
and
jmp
push
stos
xchg
push
ret
mov
jecxz
jecxz
xchg
mov
leave
icebp
mov
add
push
js
jle
mov
pop
pop
jne
sbb
hlt
into
lret
inc
xchg
pushl
add
inc
add
mov
sbb
sbb
sarl
jns
adc
jge
fdivl
test
sub
xchg
repz
pop
jbe
out
lret
inc
xor
xlat
scas
push
jns
sbb
lock
jne
filds
jecxz
ret
pop
jo
shrl
insl
mov
pop
lret
fldenv
lcall
xchg
mov
dec
ret
rorl
clc
cmpsb
jnp
pushf
into
mov
ret
dec
dec
add
lods
bound
fsubs
jnp
insl
adc
mov
call
cmovnp
dec
or
push
shr
je
pusha
adcl
std
data16
in
loope
push
sbb
scas
jge
scas
push
push
add
jns
cmpsl
and
add
lahf
pop
jecxz
cmpl
mov
dec
call
adc
in
jg
stos
and
in
jg
out
ja
test
cs
xor
fwait
sahf
std
enter
cmp
lds
and
insb
cmp
fcomps
inc
test
rclb
dec
in
jb
push
sub
inc
test
out
pop
lods
mov
and
outsb
add
cmp
cld
fists
rcll
sub
push
mov
pop
sub
stc
adc
insl
pop
mov
xor
cld
mov
movsb
inc
ss
fildll
sub
movsb
mov
and
sarb
mov
into
sub
shlb
leave
mov
dec
push
adc
stos
ds
push
arpl
divl
mov
and
push
notl
ffreep
mov
test
cli
pop
push
and
stc
aad
xchg
dec
repz
test
scas
push
aam
inc
data16
les
rcr
and
add
and
movsb
and
add
mov
add
aam
push
bound
xor
inc
push
mov
push
mov
sub
dec
sbb
mov
cld
mov
out
jo
shrl
repz
inc
pop
cmpsl
and
cmp
fcoml
pushf
rcr
mov
mov
push
mov
jp
gs
and
in
mov
leave
sbb
or
lret
test
sbb
stc
nop
std
and
jns
cs
mov
js
adcl
test
sub
call
xor
ljmp
xchg
pop
mov
lods
lods
test
add
adc
xchg
xchg
shlb
jae
pop
xorb
cmp
out
mov
test
out
mov
lret
iret
add
clc
jno
push
enter
int3
xchg
or
xor
pop
fcomip
mov
and
jle
call
sbb
sub
jo
jbe
leave
test
xchg
mov
mov
jecxz
call
stc
sub
sbb
adcl
bound
mov
cmp
mov
loop
pop
jmp
adc
xor
sbb
jmp
das
or
push
cpuid
cmp
pop
int
out
sub
sar
cwtl
or
movsb
data16
std
jle
push
sub
and
jbe
mov
inc
insl
mov
add
and
aam
test
cltd
push
lock
call
mov
pushl
scas
and
sbb
std
je
mov
jno
icebp
add
out
loopne
add
pop
mov
rolb
sub
mov
dec
and
adc
jecxz
sub
jbe
jns
icebp
cltd
nop
mov
negl
fwait
popa
aam
popf
es
addr16
test
pushf
push
cmp
jne
jbe
js
cwtl
orb
stc
sbb
jne
cli
lods
fildl
push
notl
gs
adc
pop
lods
jl
add
enter
and
xchg
loope
mov
sarb
or
stos
adc
or
pop
enter
jo
mov
scas
sub
repnz
inc
xchg
movsl
mov
inc
push
mov
loopne
push
lret
push
or
rcl
ss
pop
loopne
add
jno
cmp
push
push
pop
cmc
adc
rcr
stc
inc
xchg
or
xchg
or
enter
lret
lret
fnstsw
mov
dec
orb
jae
mov
lock
push
or
clc
sbb
lods
sub
fucom
ror
inc
outsl
mov
pop
mov
in
mov
xchg
cli
and
repz
adc
xchg
mov
decb
push
ja
xor
lret
adc
jle
mov
loop
cmp
faddp
loop
fstpt
xchg
je
push
cmp
mov
sbb
sarl
ret
ja
push
scas
stc
cmp
movsl
mov
push
iret
jle
cmp
rcrb
in
and
xor
dec
and
mov
cmp
stos
add
loope
sti
mov
pop
pop
mov
daa
jb
cmc
pop
xchg
mov
sub
xor
cli
aaa
ror
push
mul
push
js
sub
fwait
xor
lahf
push
xchg
add
xchg
pop
cmp
mov
cmpsb
xchg
push
imul
cmp
jle
pop
push
push
cli
push
in
push
sbb
imul
into
inc
push
js
cmpsb
or
into
mov
dec
adc
mov
loop
jbe
aad
sbb
or
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
dec
push
pop
pop
je
jp
sti
pop
jp
ljmp
mov
ds
ljmp
mov
enter
mov
sbbl
lds
jo
jg
jae
rcl
cmp
data16
adc
iret
jnp
xlat
and
jle
int
andb
mov
das
adc
inc
pop
sahf
xor
sub
jg
xchg
lea
data16
mov
sub
adc
cwtl
imul
inc
daa
push
ljmp
xchg
adc
xorl
mov
sub
mov
popa
aaa
cltd
pop
jno
or
jb
scas
imul
js
js
sbb
mov
into
lret
cwtl
cwtl
movsb
popa
inc
sub
enter
call
rol
jg
push
xor
mov
jle
inc
imull
adcl
in
repz
xorl
jno
pushf
hlt
sbb
cs
and
sbb
shrb
sub
lds
adc
push
rcrb
fimull
loope
in
aad
ja
fwait
push
mov
ja
sub
leave
loop
xchg
pop
daa
add
fisubrs
jle
and
test
pop
push
inc
sbbb
adc
sub
mov
std
cmp
jnp
push
outsb
xor
jne
std
sbb
xor
sub
jle
adc
ret
fmuls
setg
arpl
movsl
cmc
mov
test
jno
addl
dec
cwtl
sub
mov
fs
das
mov
jg
and
push
adc
pop
cmp
pop
lahf
mov
mov
cmc
mov
mov
add
jo
inc
outsb
frstor
fs
pop
mov
dec
pop
sbb
push
mov
repz
or
outsl
imul
sub
aad
gs
insl
pop
lds
movsl
popf
rclb
rol
mov
cmp
sub
push
push
or
sahf
imul
lds
jns
test
lds
or
imul
out
inc
add
lods
jns
cmp
push
pusha
test
sahf
fs
js
loopne
jmp
jne
and
fcmovnbe
inc
fimuls
inc
adc
cld
cs
cmp
cmp
in
enter
pusha
test
sub
decb
movsb
pop
test
popa
js
out
add
sti
pop
xchg
sub
repnz
rsm
cmp
inc
aam
dec
dec
xor
xor
pop
pop
mov
cmc
pop
add
stos
test
cli
mov
idivl
pop
add
push
js
fimuls
out
rorl
add
aam
pop
xchg
jnp
dec
lret
call
pop
out
or
push
stc
cs
nop
push
rcll
dec
and
repnz
aam
xor
shll
mov
sub
nop
je
push
dec
add
cltd
push
loopne
mov
iret
pop
jmp
lods
cli
shll
lock
mov
inc
sub
test
mov
pusha
or
inc
mov
mov
movsl
push
adc
les
stos
out
adc
das
mov
outsl
fdivs
sbb
fxam
andb
iret
sub
and
mov
in
adc
sub
shll
and
jb
cmp
mov
mov
pop
xchg
xchg
test
push
cmp
sti
enter
pushf
divb
lods
adc
jge
cmpsb
leave
repnz
lods
jns
mov
mov
test
das
call
es
push
imul
mov
je
push
push
outsb
dec
xor
and
out
rorb
mov
fldenv
mov
or
mov
jae
outsb
mov
push
test
lods
dec
popa
mov
sbb
mov
testb
inc
arpl
and
sbb
and
pop
and
cwtl
sti
ljmp
push
add
in
repz
push
xchg
fsub
xchg
dec
incl
cmp
daa
or
push
or
cmc
cli
cmpl
jp
push
mov
xor
and
mov
test
add
cli
pusha
xchg
and
and
mov
cmpsb
pop
inc
dec
fists
data16
sbb
enter
pop
add
mov
push
js
push
pop
sbb
hlt
notb
adcl
fadds
or
lcall
cltd
xchg
sub
addl
add
mov
cld
movsb
cld
xor
ds
cmp
jb
mov
cmp
mov
mov
sbb
pop
mov
repz
xlat
mov
push
mov
cmpb
lods
mov
data16
adc
inc
shlb
mov
popf
xchg
sub
add
pusha
xchg
push
lock
and
cld
ja
cmp
lock
xchg
sar
nop
loopne
or
sarb
les
pop
pop
and
lret
sbbb
lods
inc
mov
add
jmp
lret
xor
mov
outsl
jl
mov
mov
pop
enter
shrb
shlb
cmp
cltd
pop
fs
cmp
pop
stos
push
inc
mov
add
mov
aam
ss
push
add
enter
push
in
ljmp
popf
xchg
cmp
aas
add
not
jg
clc
jbe
or
mov
push
mov
rcrb
xrelease
jecxz
push
out
movsl
in
cmp
loop
call
ljmp
cs
out
or
das
and
dec
jne
lahf
jbe
mov
dec
xor
sbb
add
stos
xchg
xchg
inc
mov
cwtl
scas
and
into
jns
inc
fwait
xor
add
nop
or
test
popl
adc
js
inc
sahf
cmp
icebp
lahf
xchg
pop
dec
data16
ret
cmp
dec
ja
and
dec
and
cmpsl
dec
les
and
stos
loopne
xlat
jp
in
push
jecxz
adc
xchg
pop
mov
nop
and
sbb
pop
xchg
add
pushf
xor
sub
add
sub
sub
imul
cli
inc
enter
aas
addr16
cwtl
dec
ja
mov
ss
jmp
jnp
add
jnp
mov
pop
nop
or
ficompl
cmp
inc
jg
sbb
shlb
jecxz,pt
movsb
rol
orb
fidivl
arpl
repz
mov
addr16
divl
ror
add
jmp
jno
cwtl
mov
push
sbb
clc
inc
dec
pop
jecxz
adc
imul
sbb
jg
mul
movsb
cmp
sbb
mov
xchg
cmpsl
rcl
call
sbb
cli
xchg
cmpsl
roll
stc
repnz
push
aad
mov
cmp
imul
cmp
add
stos
cmp
jb
push
mov
mov
fstp
stos
movsb
add
call
out
cli
pop
push
jg
bound
aaa
frstor
add
mov
sub
dec
inc
cmp
in
nop
jb
aad
lock
pop
ja
or
movsl
shrb
mov
aam
mov
sub
int
repnz
adc
mov
push
repz
sbb
ret
dec
cld
sha1msg2
lods
gs
jp
bsr
adc
insb
movsl
lds
or
sahf
scas
pop
cmp
mov
outsl
inc
scas
pusha
xchg
cs
adc
jg
scas
gs
and
lods
subb
xchg
ret
adc
xchg
popa
pop
daa
repz
pop
scas
lods
jae
inc
inc
enter
cmpsl
imul
or
or
cwtl
popf
lea
shl
pop
cli
mov
jno
hlt
inc
lods
ds
pusha
andb
fmuls
xor
sbb
add
lods
imul
dec
pop
ficoml
jmp
repz
push
sahf
inc
in
mov
cmp
insb
push
imul
mov
out
call
xchg
xchg
popf
cmp
jo
sbb
clc
and
sbb
test
add
push
mov
push
cld
mov
shrb
lock
sti
int3
pushl
in
inc
cs
pop
inc
mov
outsl
out
add
xchg
movsl
or
lcall
arpl
andl
jg
cmp
pop
cld
test
int
push
inc
jecxz
add
or
mov
and
pop
sbb
lcall
aas
aas
xlat
icebp
jmp
sbb
cmp
outsb
mov
xchg
lcall
push
cmpsl
std
mov
and
mov
sub
sbb
jecxz
int
test
cmp
inc
jg
mov
push
cmp
out
push
mov
into
daa
jge
sbb
sbbb
int
xchg
ret
inc
xlat
aaa
in
test
adc
mov
stc
outsl
les
jne
pop
pop
movsb
inc
push
fistpl
sbb
sub
mov
fsubr
les
add
rcll
mov
aad
push
je
xor
dec
mov
pop
push
jno
mov
cbtw
test
jecxz
inc
jmp
mov
sahf
xchg
ss
call
js
push
ja
xor
cmp
cmc
adc
mov
pop
mov
std
jbe
pop
test
sahf
xchg
dec
cmp
sbbb
dec
outsb
mov
inc
mov
subb
fimuls
ja
mov
test
mov
daa
cmp
lret
ljmp
sbb
lds
jo
cmp
cmp
cmp
push
aaa
push
xchg
in
mov
in
jo
pop
lds
jg
scas
das
js
lock
lods
rcll
int
jp
fistps
pop
test
int3
xor
nop
pop
jo
test
hlt
sub
push
lds
jg
in
aad
sub
icebp
lahf
adc
enter
nop
pop
stos
es
in
mov
shr
mov
push
into
xchg
data16
fildl
mov
call
not
push
pop
pop
cmp
mov
jmp
pop
test
add
or
rclb
adc
mov
lods
iret
xor
sub
imul
fxch
xchg
dec
sub
inc
cwtl
mov
loopne
jp
shlb
addr16
mov
out
jg
test
pop
sbb
aaa
jae
mov
fsubrs
fisttpll
mov
lahf
push
sbb
test
loopne
fisubl
mov
fucomi
sbb
sub
push
sarl
in
sti
and
daa
pmaxub
test
xor
jmp
jg
inc
cwtl
fsubrs
test
sar
out
jbe,pn
cltd
fwait
sub
roll
push
in
inc
popf
ds
aad
mov
aaa
and
pop
andb
test
repz
es
xor
fs
or
std
and
xchg
pop
push
push
mov
sub
std
out
and
and
repnz
call
lahf
inc
lods
dec
fdivp
sahf
xchg
lret
add
adc
jns
cmp
xor
adc
push
jecxz
negl
sti
mov
jg
or
icebp
mov
outsb
dec
pop
addr16
ljmp
mov
js
push
js
cs
test
aas
sub
push
popf
stc
push
push
cmp
inc
fsubs
and
jns
orl
jmp
mov
sbb
test
test
stos
popa
push
mov
cmpsb
jbe
and
js
out
dec
xchg
mov
cli
cs
in
dec
fistpl
aas
repnz
arpl
and
mov
insb
test
inc
rcl
pop
shl
ja
inc
pop
cld
mov
pop
mov
hlt
stos
lahf
inc
xor
in
jo
pop
les
jnp
mov
stos
pop
sbb
out
sub
mov
inc
add
ffreep
mov
popf
insl
push
gs
cld
xchg
jle
cmp
repz
xlat
xchg
inc
shl
lcall
imul
ret
cltd
dec
add
jnp
dec
dec
mov
leave
mov
jp
pusha
pop
mov
pop
scas
hlt
outsl
fstpl
push
xchg
or
push
and
loope
mov
out
fiaddl
cmp
pop
cmp
popf
xor
stos
xor
lock
mov
mov
dec
shl
push
das
push
sub
cmp
jno
pushf
mov
adc
clc
inc
sbb
test
in
push
sub
sahf
push
mov
xchg
repz
cmp
mov
dec
leave
cmp
inc
inc
int3
loopne
fildl
lahf
and
mov
aaa
sub
lods
cmp
mov
scas
lods
inc
mov
aas
hlt
push
out
or
mov
outsb
dec
fdivrl
xor
cmp
in
aaa
or
cmpsb
push
mov
das
pop
sub
dec
bound
jb
xor
and
cli
pushf
cs
mov
bound
xor
dec
push
xor
sub
add
popf
out
cmp
xchg
dec
mov
sbb
rclb
cs
push
fadd
mov
fistps
fwait
mov
cmp
lahf
mov
loope
jg
ret
xor
pushf
cmp
jb
lahf
jg
push
pushf
adc
pushf
data16
jle
pop
popf
pop
rclb
pop
stos
addr16
cwtl
lret
test
stos
lcall
fwait
push
mov
mov
dec
mov
push
lahf
inc
in
mov
sbb
popa
fs
xchg
ds
mov
pop
inc
xor
lods
jecxz
push
pop
in
jmp
fmull
xor
test
sbb
fstpt
cmpb
mov
cmp
xor
sbb
shrb
sarb
in
add
sti
loope
int
shll
cmp
and
sub
mov
stos
lea
outsb
and
mov
rcll
faddl
daa
arpl
es
rol
repz
movsl
outsb
add
sub
add
mov
ror
cli
sbb
xorl
xchg
dec
loopne
mov
add
cmp
xchg
ficoml
in
cmp
dec
mov
mov
out
jl
dec
in
add
inc
in
aad
ret
mov
test
inc
sub
jno
push
and
outsb
adc
inc
cmp
cwtl
popf
stc
mov
push
pop
popf
mov
aam
push
insl
jne
test
pushf
mov
xchg
out
inc
mov
jnp
dec
add
insl
dec
dec
xor
mov
sub
jne
sub
int3
cltd
loop
push
and
mov
jno
lods
jnp
mov
in
adc
movsl
pushf
scas
movsb
dec
std
pop
mov
push
xchg
sub
push
push
ja
inc
lahf
jecxz
lock
adc
add
outsb
jne
cmpps
cmp
cltd
jne
push
or
hlt
xchg
dec
mov
or
and
cmpsb
fcompl
push
jge
enter
imul
aaa
das
repz
cmpsl
inc
call
in
inc
les
push
pop
push
inc
mov
out
or
pop
push
jo
mov
fistpl
jae
subl
fistl
mov
mov
mov
inc
gs
mov
cmp
ds
xlat
std
inc
jo
xchg
sub
ret
lcall
mov
xchg
xchg
lods
in
sbb
dec
inc
xor
add
mov
icebp
cwtl
std
jle
pushf
push
dec
mov
sbb
test
fdivs
imul
add
repz
push
xchg
dec
pop
push
mov
in
rcr
inc
cmp
in
dec
and
jae
inc
pop
cli
jnp
mov
decl
divl
dec
sbbb
push
push
je
mov
xlat
mov
bound
stc
cmpsb
in
cli
lret
bound
xchg
cvtps2pi
ja
mov
jns
cs
out
sub
pop
jg
test
inc
sbb
mov
notl
daa
mov
and
es
test
arpl
cli
push
aas
pop
shlb
out
sbb
gs
psllw
sub
adc
orb
adc
cs
sub
xchg
jge
dec
jb
in
mov
out
or
outsl
in
dec
sbb
ftst
and
mov
in
xor
cmp
adc
out
mov
mov
shrl
mov
jmp
mov
dec
movsl
rolb
loop
dec
sub
fwait
test
cmp
aas
push
jmp
lret
into
aaa
lret
into
aam
or
leave
cmp
sub
hlt
scas
mov
pop
fildl
mov
outsl
xorl
dec
sbb
out
leave
mov
bnd
mov
mov
movb
xor
loope
ja
sbb
mov
mov
xlat
mov
in
stos
mov
adc
push
das
inc
fiaddl
aas
mov
mov
push
push
inc
movsl
shll
hlt
and
icebp
aas
jne
call
dec
aam
rcll
mov
cmp
scas
and
icebp
sar
jmp
sbb
xor
or
cwtl
dec
lea
mov
inc
or
negb
fnstsw
or
daa
mov
stc
cmp
stos
arpl
aaa
mov
mov
or
push
push
stos
in
sub
imul
dec
xchg
cmp
aam
es
mov
sub
sbb
or
popa
xchg
subb
movsb
popf
cli
lret
jne
or
cltd
fbld
ret
sub
lcall
out
frstor
lret
or
sbb
sbb
pop
xchg
in
stc
dec
fwait
and
jge
mov
cmpsl
test
xor
xchg
add
pop
aad
xchg
jbe
pop
xlat
push
jl
lea
aas
mov
ret
jo
imul
push
fs
int
pushf
mov
adc
call
or
and
int
dec
ret
lods
inc
call
inc
mov
jnp
ret
pcmpgtb
mov
cltd
repz
push
in
xor
std
stc
rcll
subl
sub
xchg
sbb
mov
push
addb
sbb
jmp
push
lret
sub
aam
ljmp
push
lods
iret
lds
and
jecxz
sahf
repnz
jle
sub
pop
repnz
dec
mov
or
dec
fisubrl
inc
adc
dec
lods
cltd
dec
outsl
loop
mov
test
cwtl
xchg
mulb
stos
leave
xor
push
fimuls
fbstp
pushw
sub
shlb
mov
mov
add
and
sub
aas
call
xor
pop
push
fldt
outsb
and
stc
pop
lods
cmc
shrb
jnp
dec
xchg
adc
pop
dec
ror
jge
xchg
stos
cmp
sub
mov
sub
mov
xchg
mov
sbb
cltd
out
pop
mov
movsb
mov
and
pop
mov
dec
push
rol
xchg
mov
mov
inc
daa
cmp
arpl
jno
int3
xlat
leave
fdivs
test
xor
inc
ret
and
aam
cwtl
and
pop
out
jnp
shlb
adc
cmpsb
adc
sbb
jb,pt
into
cmp
xchg
cli
sub
and
fiaddl
sbb
nop
sub
frstor
cmp
push
mov
lock
fwait
jnp
fs
stc
jle
adc
jne
mov
jmp
rep
in
stos
js
enter
pop
xlat
jb
das
pop
dec
ja
jl
pop
jbe
cmpb
test
mov
jbe
sbb
jno
insb
pop
mov
cltd
aaa
xor
or
sbb
jae
sbb
notb
test
ret
je
inc
mov
lock
leave
xlat
popf
cmp
pop
lds
mov
bound
das
loop
jl
mov
test
gs
gs
xchg
mov
push
jp
sbb
sbb
out
test
xor
js
and
call
sub
int
jg
jl
lods
pop
sarb
scas
mov
sahf
fstl
jbe
and
pop
out
dec
mov
push
frstor
fistpl
lods
repnz
pop
mov
mov
mov
pusha
dec
push
das
add
inc
push
push
cmp
inc
xchg
std
dec
pop
lock
andb
mov
rcrl
xor
sbb
jge
jp
xor
xchg
mov
fucomp
inc
popa
dec
cld
loop
mov
xor
and
bound
outsb
dec
ljmp
mov
loope
adc
sub
adc
push
loope
std
adc
jnp
mov
lret
mov
jb
mov
iret
xor
dec
pushf
popf
js
lcall
aaa
sbb
lahf
or
pusha
or
mov
fidivrl
pop
xchg
and
jnp
push
out
jne
imul
cmc
fsubl
enter
scas
jb
push
ja
ficoml
mov
aaa
xor
or
mov
test
push
lret
ret
clc
icebp
adc
cli
xchg
shr
jbe
fcoml
mov
push
add
xchg
add
sbb
sub
xlat
dec
cmp
jne
sub
cmc
jle
lds
clc
fcompl
push
mov
xor
aaa
mov
ficomps
push
push
idivl
push
xchg
jp
ret
sbb
sbb
sbb
decl
and
jae
bound
fisttpl
xorb
in
inc
stos
dec
stos
aaa
mov
mov
cld
test
jl
pushf
imul
xchg
inc
xor
jmp
sti
jp
and
push
ret
push
popf
or
push
data16
dec
jns
mov
adc
les
leave
mov
je
mov
add
ret
rolb
mov
cmpsl
test
mov
lahf
outsb
adc
push
bound
push
and
pop
in
and
outsb
xor
mov
sub
scas
mov
nop
fists
mov
cmpsb
test
cmp
sbb
lret
push
dec
mov
loopne
enter
daa
jbe
fldt
pop
pop
inc
es
add
pusha
pop
xchg
mov
aaa
adc
cmp
jge
fldl
imul
pop
adc
or
sbb
pop
add
loop
pop
repnz
push
xchg
aas
cmp
imul
adc
cmp
lcall
sti
cmp
fmull
lret
das
cmpsl
xchg
dec
add
frstor
lods
lds
xchg
imul
mov
xor
xor
dec
xchg
repnz
mov
push
and
ljmp
mov
ljmp
inc
pop
adc
mov
aaa
pop
subl
mov
dec
leave
pop
push
mov
jle
xor
xor
push
mov
imul
ljmp
lahf
loopne
fmuls
shlb
xor
iret
sub
pop
sub
cmp
mov
leave
pop
bound
in
or
dec
mov
outsb
mov
pop
andb
and
add
test
push
or
mov
fcoml
dec
jp
push
sbb
mov
test
fucomi
jnp
jno
push
xor
and
lods
dec
rcl
mov
addr16
jmp
adcl
hlt
and
insl
cmp
bound
xchg
lods
pop
jne
adc
mov
movb
out
aas
add
mov
bound
dec
mov
xor
int3
pop
loop
cmp
es
aam
xchg
jbe
into
fldenv
mov
cltd
or
fs
outsb
jmp
inc
ljmp
sahf
fistps
in
fisubrs
ja
xchg
sbb
punpckhbw
and
push
in
adc
shl
movsb
jne
arpl
mov
xchg
mov
mov
mov
add
leave
dec
subl
push
pop
sbb
mov
call
jle
test
adc
int3
mov
dec
push
mov
mov
pop
cmpsb
addr16
adc
inc
das
fwait
movsb
push
and
inc
xor
dec
out
jo
sub
leave
sbb
sbb
dec
orb
sub
js
dec
das
push
mov
scas
js
fdivrl
mull
and
mov
or
ficoms
xchg
xchg
mov
int3
outsb
sub
push
jmp
es
icebp
mov
pop
icebp
xchg
sbb
add
or
cmp
aam
jae
push
and
clc
jnp
fsts
pop
mov
pop
xchg
push
jo
adc
mov
cs
test
pop
lods
mov
int
sub
sbb
sbb
mov
int3
xchg
xchg
dec
pop
inc
insl
lret
add
daa
clc
add
bnd
sbbl
xchg
jb
fldcw
push
mov
outsl
ficoml
xchg
mov
pushf
aaa
lock
pop
popl
lcall
or
std
jbe
rclb
data16
push
jmp
int
rcll
pop
add
sbb
mov
cmp
test
lret
ja
cmp
xchg
in
hlt
sbb
mov
adc
cli
or
jle
aam
sbb
sub
addr16
lahf
cmc
loop
rorl
jns
cmp
shrl
pop
lahf
incl
int3
fidivl
in
ja
shr
add
mov
test
cltd
call
jle
sbb
and
push
adc
sbb
lcall
push
lcall
pop
pusha
not
stos
shlb
jns
in
or
xor
sub
insl
sbbb
bound
mov
sbb
shrb
hlt
xlat
mov
clc
jo
dec
notb
in
pop
sub
sti
cmp
pop
sbb
decl
ljmp
pop
push
rcl
ret
dec
adc
fwait
jmp
lods
inc
jo
enter
jge
dec
jne
mov
divb
outsb
aam
pop
test
mov
in
cltd
push
jle
mov
dec
fsubrs
lret
jne
cmp
push
outsb
sbb
fadds
xchg
fldenv
jle
xor
sub
jno
scas
daa
out
jbe
pop
adc
add
out
outsl
mov
add
mov
push
out
inc
test
loopne
lret
jl
fldenv
xchg
popa
call
arpl
mov
enter
mov
lret
push
mov
flds
mov
add
cmp
loop
aam
arpl
xchg
xchg
mov
lods
add
es
or
dec
xlat
adcl
int3
in
cltd
rclb
pusha
push
xor
enter
imull
rolb
mov
cwtl
add
insb
loope
lock
in
in
jge
scas
cwtl
lret
jns
lods
mov
test
loop
mov
mull
nop
divb
clc
cmp
sahf
push
fsubrl
push
aad
sub
aas
push
mov
xor
dec
add
imul
iret
lea
movsb
shlb
sar
pushf
fisubs
push
scas
dec
xor
push
cmp
dec
sub
movsl
mov
js
push
bound
test
pop
mov
loope
int3
outsl
cmp
jge
hlt
xor
or
mov
dec
iret
xchg
sbbl
cwtl
dec
les
nop
aaa
bound
xor
and
xor
push
lret
xchg
push
outsb
mov
jmp
mov
xorb
xchg
test
cmp
inc
sub
fldl2e
out
popa
adc
test
add
mov
mov
inc
push
lcall
add
imul
inc
push
mov
fiadds
mov
outsl
push
aas
les
or
cmpsl
les
dec
xchg
inc
jl
sbb
insb
repz
xchg
pop
lods
dec
jge
shr
lods
xchg
jne
dec
xchg
std
jno
mov
fcomip
xor
jb
xchg
out
in
test
es
mov
mov
outsb
adc
mov
test
std
mov
lds
cli
mov
sbb
mov
int
or
jmp
je
subb
aas
aad
js
lds
cmp
jle
and
ljmp
mov
aas
scas
sbb
add
pop
sarl
mov
add
cltd
into
aam
fldl
pop
es
in
sti
inc
cmpl
sti
test
jg
rcr
mov
mov
pop
aad
sbb
lret
scas
xor
pop
mov
fists
sbb
push
cli
cwtl
dec
mov
lcall
pusha
adc
cmp
push
cwtl
ja
cli
cli
mov
insl
outsl
add
sbb
add
fwait
movsb
outsl
hlt
xchg
lods
aaa
mov
mov
mov
mov
push
iret
sub
jl
ss
mov
add
fs
stc
cmp
je
mulb
mov
or
nop
popf
mov
and
lds
or
sub
inc
loope
inc
or
and
add
mov
adc
push
sbb
cltd
mov
xchg
mov
push
mov
cmp
stos
mov
sti
dec
push
aas
in
sub
push
pop
jp
push
pusha
adcl
pop
imul
cld
std
fistl
fcompl
mov
mov
arpl
enter
rorl
inc
sti
in
jbe
sti
std
loopne
std
inc
xchg
adc
divb
test
aam
sub
push
out
ljmp
pop
loopne
paddw
cmp
pop
jle
jmp
in
push
cmp
mov
push
pop
mov
push
decl
xor
jp
lods
orl
jle
andl
mov
mov
scas
mov
push
mov
jae
sub
stos
pop
or
ss
inc
xchg
jmp
pop
push
sbb
sbb
cli
scas
arpl
dec
pusha
enter
lret
push
lock
lods
js
dec
push
loope,pn
arpl
mov
xchg
mov
fnsave
insl
push
aad
mov
pop
xchg
mov
cmpsb
mov
xor
pop
scas
pop
sahf
mov
repz
add
xor
inc
xchg
push
xor
dec
arpl
insb
add
lret
inc
push
testl
int
add
sub
or
pop
ja
push
insb
mov
add
or
push
pop
mov
mov
mov
or
sub
movsb
pop
out
or
adc
jl
dec
insb
ret
sub
pop
leave
fs
push
dec
std
arpl
adc
mov
mov
jg
aas
push
int3
icebp
mov
lret
xchg
jle
ljmp
push
and
out
lcall
adc
mov
in
and
daa
cltd
pop
repz
lods
ljmp
xor
add
cs
das
imul
pop
rorb
pop
adc
inc
movsl
loope
movsb
fisubrs
fildll
out
pop
cltd
sbb
jb
sbb
dec
aaa
dec
pop
mov
cmp
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
int
mov
inc
mov
pusha
xchg
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
jecxz
mov
jns
add
repz
add
loop
mov
addr16
sbb
mov
icebp
lds
pop
fdivl
and
daa
push
stc
repz
push
lea
loopne
jecxz
test
ljmp
mov
xchg
fidivs
test
dec
inc
jnp
gs
cmp
mov
push
xlat
mov
test
or
sbb
push
insl
into
mov
adc
das
fldenv
lea
mov
in
out
fildl
sti
push
lods
and
mov
jno
cmp
sub
adc
stc
jns
lods
cli
cmpsl
imul
fs
or
cs
stos
mov
loopne
enter
bound
push
xchg
adc
icebp
inc
pop
icebp
or
repz
lret
sub
imul
jbe
in
scas
fst
and
cld
cmp
push
xchg
or
push
push
push
xchg
cmpsb
cmp
popl
nop
stos
int
rcrl
outsl
sarl
fucom
or
test
aaa
and
scas
jbe
test
aad
and
push
stc
push
int3
jb
xor
pop
xchg
leave
stos
jne
ljmp
push
xor
popf
cld
mov
push
aad
shrb
pop
cmc
jge
call
andl
cmpl
call
pop
test
xchg
lret
or
popa
stos
mov
insb
bound
push
xchg
or
int3
sbb
cmp
arpl
dec
and
pop
inc
out
das
xchg
and
jo
out
xor
imulb
xor
pop
outsb
mov
sub
adc
sub
jmp
fadds
mov
in
fnstsw
je
paddusb
mov
imul
pop
mov
fcmovu
or
pop
clc
add
dec
cmp
push
loope
adc
mov
mov
in
jns
lea
pop
add
jmp
jae
inc
ljmp
dec
jae
xchg
jne
xchg
int3
sub
out
jp
sub
lahf
dec
push
call
ror
aad
mov
or
dec
rcrb
inc
or
cmp
pop
popf
nop
int3
ret
pop
jno
push
cmp
imul
cmpsl
testb
jno
push
ja
cmpsl
arpl
repnz
sub
fwait
nop
sbb
mov
inc
into
push
sub
jb
mov
push
rolb
push
fcmovnbe
sbb
xor
inc
adc
jle
rorb
addr16
test
adc
lods
lcall
cmpsl
repnz
or
mov
xor
aad
insl
das
inc
jno
jbe
sarb
sub
test
or
pop
mov
repnz
mov
jo,pt
js
mov
dec
mov
lds
and
lods
mov
jns,pn
jns
xor
popa
add
jge
pop
and
scas
shlb
stc
das
rcr
ret
lds
pop
add
mov
sarl
adc
sbb
sub
imul
or
or
movsl
or
fisubrs
mov
popf
daa
fwait
data16
movsl
in
aam
mov
sub
inc
add
addr16
mov
sub
jne
fnstcw
les
push
jp
sbb
lahf
aaa
push
and
cmp
test
adc
fimuls
inc
in
popf
enter
das
cld
mov
cmc
push
cmp
addr16
pop
sub
hlt
orb
shll
insb
fwait
ja
add
and
mov
ret
test
xchg
out
mov
dec
xchg
pop
jb
push
push
gs
add
add
jg
cwtl
pop
lret
pop
cmp
es
lea
aaa
push
sarb
jo
push
loope
mov
jne
adc
sub
jbe
add
shlb
jg
cmp
push
mov
je
out
ja
xlat
or
cld
rcl
lods
sbb
dec
push
jnp
inc
adc
pop
xlat
addr16
cmpsb
mov
dec
xchg
icebp
mov
repz
into
inc
sbb
xchg
js
add
loopne
push
clc
insb
adc
icebp
lret
in
fistpl
cld
out
cmpsb
xlat
out
fwait
bound
sti
cmc
jne
jno
jns
sub
push
je
outsb
repz
mov
pop
add
add
add
push
sbbb
fistpl
icebp
cmp
adc
add
add
add
jnp
cltd
incl
in
inc
pop
imul
mov
ljmp
or
stos
lret
into
sbb
lds
out
xor
pop
xchg
fs
nop
mov
mov
jecxz
ljmp
ret
jns
sbb
xlat
lock
xor
mov
inc
and
sbb
dec
jno
jo
jmp
pushf
aad
push
mov
xchg
imul
fcomi
add
pop
in
lods
insb
pop
jno
xor
cmp
mov
sbb
test
scas
cld
rcl
bound
jp
sbb
and
jge
xchg
imul
sbb
dec
mov
and
adc
pop
mov
pop
das
jno
xchg
out
rcpps
test
fidivs
sbb
mov
xchg
mov
jb
sti
call
push
jecxz
ljmp
outsb
mov
mov
stos
inc
mov
push
out
subl
leave
aad
and
popf
out
test
mov
mov
call
pop
pop
arpl
fs
repz
test
cli
sbb
jns
adc
mov
pop
push
pusha
or
jbe
xchg
xlat
pop
aaa
dec
and
stos
jae
outsl
push
clc
int3
inc
fmull
mov
xchg
pop
jnp
mov
lds
movsb
rorl
mov
push
and
popf
or
sbb
pop
test
and
lea
xchg
jp
dec
pop
jnp
push
cmp
xlat
xchg
and
push
jb
repz
and
outsb
mov
mov
cmpsl
sahf
jg
fisttps
inc
imul
int3
jbe
jp
in
or
jo
shlb
call
pop
fiadds
call
xlat
aaa
jmp
test
shll
es
pop
call
cmpsl
loope
xor
xchg
xor
in
pop
jge
inc
pop
jnp
jl
sbb
cmp
fidivrs
lret
inc
jmp
aad
pop
pop
int
cmp
jg
mov
lret
pop
movsl
xor
or
dec
pop
xor
pusha
xor
mov
sub
das
mov
mov
xor
adc
sbb
scas
out
inc
out
xor
and
pusha
sub
xchg
and
xchg
xor
xorl
hlt
pop
xor
cltd
arpl
mov
jmp
enter
insl
dec
push
negb
and
sti
adcl
add
cmp
mov
mov
jbe
pop
mov
jbe
xchg
mov
and
and
sbb
cmpsl
ret
lods
dec
pop
mov
or
ret
adc
lahf
adc
lods
aaa
jge
dec
and
push
int3
mov
popf
out
ret
pop
iret
outsl
out
clc
mov
inc
icebp
add
popa
xchg
insl
iret
inc
popf
sub
xor
pushf
sbb
flds
rorb
and
mov
jle
mov
fcomps
arpl
out
or
push
lock
push
push
sbb
out
out
sahf
push
popf
movsl
xchg
dec
ffree
pop
push
fwait
movsl
sbb
ds
inc
lods
jbe
cltd
xor
push
lods
cmpsl
push
int3
rol
lea
imull
lret
jns
addr16
mov
and
in
cmc
std
cmp
push
inc
sbbb
outsl
xor
out
gs
add
data16
imul
sub
jg
pop
cmp
jo
inc
idiv
aad
mov
cmp
sbb
push
lcall
nop
xchg
push
sbb
rorl
inc
test
lods
push
jbe
and
fcompl
mov
js
es
jbe
rorb
fwait
adc
neg
mov
icebp
add
ljmp
add
lods
fdivrl
sub
andb
push
jnp
xchg
cwtl
mov
mov
es
daa
cmpsl
js
scas
movsb
jb
aam
mov
ret
sbb
js
bound
data16
mov
cmp
lret
fistl
jo
test
psrlw
and
jns
push
psubq
inc
and
movsb
dec
div
push
push
hlt
and
cwtl
or
mov
data16
sub
lea
in
paddsb
lret
das
decb
repz
dec
sbb
adc
sbb
mov
scas
cli
mov
jno
lret
cmc
xor
pushf
and
push
inc
lock
push
call
sub
lret
bound
popf
test
mov
gs
mov
es
xor
cltd
adc
cs
xorb
add
cmp
cmpsb
jg
mov
jae
inc
mov
pop
fiadds
add
add
add
add
mov
jb
pop
sbb
sbb
pop
jmp
stos
push
in
cmpsb
stc
lcall
xchg
and
fnstenv
out
das
push
repnz
stc
sub
faddl
sbb
pusha
in
adc
stos
out
adc
mov
mov
out
inc
scas
inc
adc
in
push
mov
repnz
fmuls
sti
pop
xchg
mov
jmp
aas
insb
lret
xor
dec
jne
mov
adc
int
cld
and
aad
test
lea
shlb
push
dec
or
fbstp
mov
fisubs
cwtl
scas
ljmp
push
dec
mov
stc
push
icebp
xor
or
sub
xor
mov
cmpsb
mov
add
push
mov
push
mov
lea
dec
sahf
add
mov
or
add
loopne
mov
xor
push
cmc
movb
jo
out
notl
xchg
call
into
imul
daa
cmpsb
fdivr
stc
and
ret
mov
repz
cmp
inc
icebp
adcl
mov
ret
lret
sarb
pushf
mov
ret
push
div
out
pop
xor
mov
stc
fmul
jns
or
ret
pop
frstor
xor
pusha
dec
adc
jg
and
pop
roll
iret
inc
cmp
loope
or
aad
sti
jmp
test
insl
xchg
jg
mov
dec
jl
dec
pop
sub
sbb
xchg
sub
out
fcoml
dec
movsl
xchg
mov
loop
shrb
out
jne
cwtl
ficoml
ljmp
add
ficoms
add
jecxz
test
rolb
clc
shlb
mov
decl
sub
push
pop
test
mov
or
mov
popf
leave
enter
jae
out
ja
jecxz
push
fcoms
rolb
mov
mov
push
pop
clc
inc
sahf
push
movsb
dec
jbe
shlb
lock
gs
xchg
mov
sbb
sbb
call
repz
mov
push
fldcw
mov
dec
push
jp
pop
js
jl
jge
data16
icebp
adc
loop
out
xor
inc
or
mov
add
js
sbb
cmpsb
outsl
insl
sbb
pop
ja
lock
pop
orb
loope
daa
mov
add
xchg
push
sub
jb
sahf
jnp
pop
out
xor
dec
adc
mov
lcall
stc
test
mov
xchg
les
es
sbbl
and
adc
shrl
push
dec
test
add
jp
icebp
or
fcmovnbe
jnp
aaa
sbb
int3
push
je
push
pop
cmpsl
jp
lods
mov
repnz
fldenv
and
xchg
and
popf
mov
fistpl
push
add
iret
adc
lret
xlat
cli
pop
outsb
jmp
test
and
jmp
ficomps
test
xor
or
mov
pop
pop
cmc
or
lahf
mov
hlt
pushf
push
sub
or
xchg
stc
pop
fsts
movsb
push
push
sub
mov
std
es
pushf
sub
jb
mov
inc
subb
jo
adc
out
xor
aad
and
push
fiaddl
jne
or
stos
leave
mov
sbb
xchg
xorb
mov
jb
jno
out
or
jb
rcll
sub
and
and
mov
std
jmp
add
sbb
inc
pop
leave
popa
popl
cmp
and
or
pop
jge
mov
repnz
mov
nopl
mov
and
pop
mov
aad
hlt
cmp
out
cmc
les
lret
lods
movsl
xchg
fcoms
and
gs
jbe
popf
aaa
push
fisttpll
push
mov
sbb
int
add
pusha
rclb
xchg
ds
ja
cmp
mov
lret
mov
in
jae
jbe
push
and
jg
lods
ja
push
divl
adc
dec
or
pop
pop
or
cwtl
sti
xchg
mov
mov
pop
repnz
dec
setb
pop
adc
dec
adc
or
add
scas
mov
push
dec
in
add
cmp
addr16
fstl
or
in
lock
lret
mov
add
aam
sub
shl
inc
lea
dec
and
lods
mov
addr16
ja
mov
out
ja
add
inc
xchg
adc
add
add
pminsw
idiv
repz
lret
adc
mov
jecxz
add
add
add
adc
sub
sbb
imul
push
cld
or
xchg
psubsb
push
fdivp
iret
mov
sbb
xor
adc
mov
add
xor
test
fisubrs
mov
pop
arpl
lods
je
sub
sub
idivb
mulps
mov
mov
daa
outsl
int
cmp
aam
rorb
fdivrs
das
pop
mov
stc
push
mov
lret
cmp
movsl
outsb
frstor
push
inc
scas
or
mov
cld
jmp
sub
jg
lahf
jl
sub
bound
iret
rcll
sti
in
mov
outsb
sub
inc
or
cmc
addr16
call
daa
mov
fwait
loop
jg
or
rcrb
and
ficompl
jmp
pushf
or
push
addr16
imul
sbb
std
subb
nop
mov
insb
mov
rorb
push
sbb
fstpt
jnp
popf
cmp
pop
inc
xchg
loop
sarb
cmp
mov
test
or
add
mov
xchg
cmpsb
xor
or
inc
scas
cli
mov
xor
in
mov
jb
push
shll
xchg
lret
in
mov
push
push
nop
shlb
or
bound
jne
xchg
jl
xor
icebp
imul
dec
out
cmpsb
fcompl
xchg
test
and
jl
rorb
pop
push
repnz
lods
and
arpl
into
outsb
inc
arpl
test
insb
into
sbb
jb
enter
adc
scas
clc
mov
fisubs
daa
pop
out
adc
sbb
push
mov
xchg
push
jne
arpl
cltd
inc
sbb
nop
int3
lahf
pop
sarb
jge
push
dec
add
mov
test
inc
imul
fdivr
mov
loopne
dec
addr16
inc
jns
push
popf
out
mov
and
iret
cmp
mov
pop
lods
data16
xchg
pop
loopne
and
or
mov
pop
jbe
and
pushf
rcrl
jmp
xor
mov
or
push
add
fwait
mov
out
push
lahf
das
fs
pop
cmc
std
stos
imulb
pop
push
xchg
mov
cwtl
sub
mov
call
ficompl
or
in
sub
pop
in
sahf
adc
mov
fisubrl
dec
daa
roll
fsubrl
adc
push
mov
data16
sbb
push
sbbl
or
add
out
lods
mov
cli
xchg
in
movsl
adc
xchg
xchg
cmp
cmc
dec
dec
cmpsb
jmp
les
sti
inc
ret
jne
mov
sbb
jle
mov
aam
frstor
cmp
cs
inc
mov
push
push
sbb
loopne
and
sar
inc
cmc
lret
adc
icebp
aad
int
sbb
iret
lcall
sub
fs
bound
mov
mov
test
movsb
test
or
mov
jg
push
fdivrs
sbb
xlat
cld
sbb
jmp
fistl
xchg
pop
or
imul
les
mov
or
icebp
push
leave
sub
jle
sub
mov
pop
mov
mov
push
pop
aad
lock
push
repnz
imul
fistps
inc
dec
aaa
in
into
mov
mov
mov
cli
jae
in
loop
dec
dec
cmpsl
and
ficoml
iret
pushl
and
jb
push
lret
jg
stos
jge
out
jns
dec
xorl
or
push
outsl
push
inc
inc
mov
loop
jo
pop
leave
movsl
xor
fs
and
mov
mov
push
popf
adc
mov
scas
push
xlat
es
mov
adc
in
push
mov
adc
mov
std
out
addb
ljmp
fiadds
cmp
xchg
sub
push
gs
cmp
call
popf
stos
imul
add
xchg
xchg
dec
push
xchg
inc
sbb
push
jbe
pusha
mov
mov
and
mov
fisubs
arpl
jge
gs
add
mov
mov
cmp
mov
sbb
pushf
dec
adc
mov
mov
add
sti
push
pop
dec
jnp
jb
pop
jae
sti
sub
mov
shrl
cwtl
popa
dec
jno
ja
add
out
out
leave
jnp
pop
push
jbe
dec
rep
jae
mov
scas
popf
or
cmc
add
sarb
inc
lret
lock
add
add
add
xchg
lret
jnp
sarl
test
call
add
add
add
sub
mov
into
cmpl
inc
push
sbb
lods
lods
push
jne
jge
mov
fmuls
push
add
ret
push
sti
je
icebp
aad
outsl
and
push
cmp
cmpl
lods
inc
arpl
in
sub
sarb
ja
dec
aaa
cld
in
push
js
aaa
add
xor
loope
or
inc
pop
shrl
inc
aad
addr16
cmp
add
and
sbb
jno
stc
imul
data16
add
ret
enter
inc
mov
jnp
jno
jnp
cmp
sbb
outsl
out
mov
shll
dec
jmp
jno
push
sbb
lahf
adc
push
jbe
pop
xchg
clc
inc
pop
mov
push
loopne
dec
jbe
xlat
xlat
stos
dec
fwait
aam
xor
lahf
int3
or
int3
popl
inc
out
jae
cmpsl
stos
outsl
push
push
hlt
addr16
jge
movsl
pop
sti
pusha
ljmp
lahf
movb
mov
adc
inc
dec
mov
push
out
mov
sbb
adc
in
call
jae
sbbl
into
or
fs
add
push
gs
sarb
add
test
std
cwtl
cwtl
aaa
bound
insl
decb
and
out
iret
push
mov
pop
stc
pop
dec
pop
mov
mov
xchg
test
or
pop
sbb
test
xor
adc
lret
popa
test
or
in
mov
cmp
and
leave
out
subl
imul
out
inc
divb
or
fmuls
cli
divb
mov
cmp
cmp
or
icebp
scas
cmp
call
and
mov
mov
xchg
sbb
cmpsl
jl
add
enter
jl
xchg
pop
mov
enter
div
push
cld
fidivs
mov
and
mov
je
cmp
jne
jo
lods
xchg
fsub
adcl
mov
jmp
push
mov
sub
imul
mov
test
loopne
repnz
sub
xchg
sbb
psubq
xchg
rcrl
dec
ss
and
lahf
outsl
fistpll
push
mov
mov
jns
add
loope
lret
cli
adc
roll
cmpsb
out
imul
movsl
mov
and
nop
adc
dec
fstp
pop
sbb
xlat
out
addr16
out
push
decl
add
sub
enter
xchg
lock
pop
mov
loope
aas
sti
int3
les
popa
jnp
gs
fstps
scas
mov
dec
mov
pop
mov
call
mov
imul
fdivl
inc
movsb
mov
inc
icebp
std
sub
btc
sub
pop
jmp
jne
fildl
pop
repz
int3
shl
or
lcall
std
xor
mov
inc
shll
addr16
push
jo
aad
mov
jne
int3
ret
mov
pop
dec
jnp
mov
dec
aad
ret
push
pop
les
push
adc
roll
pop
dec
inc
aaa
mov
and
gs
lods
test
imul
mov
cmp
push
adc
cs
clc
or
inc
popa
cmpsl
in
or
jg
cmp
aas
enter
push
ret
ret
into
push
aad
inc
iret
push
repnz
mov
ja
mov
rol
fwait
pop
jle
testb
sub
push
scas
outsb
or
lret
or
mov
jae
movsb
xchg
addb
mov
lods
mov
scas
frstor
andl
ret
adc
cmp
pop
jp
pop
cltd
dec
daa
loope
ljmp
sbb
mov
or
call
adc
jb
cltd
mov
leave
int
ficompl
lds
out
outsb
filds
aas
jb
cmpl
sub
lds
jb
idivl
adc
jne
xchg
inc
adc
repz
cmp
scas
or
dec
xchg
and
lcall
dec
cwtl
add
adc
jne
out
das
jp
iret
cmp
sbbl
sub
mov
fmuls
aad
fbld
loope
scas
outsb
jo
sarb
pop
shld
out
dec
push
in
adc
ja
mov
popa
add
xor
sbb
sub
push
push
push
xchg
pop
cmpsb
add
add
add
pop
test
adc
jge
cmp
add
repz
add
fcompl
mov
or
stos
mov
xchg
popa
add
mov
mov
push
push
add
cmp
cmp
je
ret
imul
mov
loop
stos
ss
popf
add
sub
sbb
mov
imul
es
das
dec
ss
fwait
shr
mov
push
or
cli
loopne
mov
push
out
adc
cmp
adc
cmp
and
xchg
hlt
fcmovbe
cmp
std
ret
sti
jae
les
out
aad
inc
inc
sbb
pop
jno
mov
repz
cmp
aas
test
lock
addr16
adc
arpl
cmpsl
xchg
sbb
or
ss
dec
mov
pop
dec
sub
stos
sub
je
mov
insb
mov
icebp
mov
int
ret
std
inc
mov
xor
pop
push
sub
mov
loope
in
xchg
pop
and
sbb
inc
dec
pop
loop
jo
pop
inc
orb
outsl
popa
xchg
iret
xchg
dec
pop
sbb
lds
outsb
or
notl
test
out
mov
sahf
jae
loop
leave
and
out
mov
adc
dec
add
lret
pop
ljmp
insl
rol
mov
pushf
jp
jb
gs
inc
shrl
ret
sub
mov
mov
xor
mov
stos
jo
outsl
pushf
lods
dec
xor
cmp
jmp
push
push
or
lcall
in
add
adc
sbb
mov
flds
outsb
in
call
nop
xor
bound
push
xor
xchg
jg
fisubl
sbb
add
add
loop
and
pop
adc
xchg
pusha
test
aam
stos
stos
sbb
rcpps
in
js
in
cli
pusha
imul
test
imul
loop
inc
fldl
xor
scas
mov
adc
push
push
stos
jl
faddl
es
mov
pop
sbb
fs
mov
hlt
clc
jp
jo
pop
loop
andb
mov
ret
stos
pop
aas
sarl
ret
add
cltd
mov
sbb
outsl
inc
pop
cmp
cli
xchg
daa
sub
stc
ficoms
pushf
jle
inc
cmp
push
out
sbb
xchg
loope
ret
in
test
sub
nop
mov
xorl
mov
add
fnstenv
adc
cmpsb
insb
repnz
movsl
jecxz
lcall
xchg
xlat
mov
scas
jno
cmp
fldenv
daa
jmp
iret
rclb
cmp
mov
xor
cmp
sub
push
jnp
lret
adc
aaa
scas
shl
push
push
lret
sbb
rorb
add
push
aam
push
push
shll
and
fwait
repnz
hlt
mov
mov
jecxz
adc
jmp
jns
sbb
lock
push
xor
out
jo
mov
jp
loop
jg
pop
cmp
or
jae
imul
sarb
xchg
pop
sbb
jmp
push
or
xchg
sarb
push
sub
push
mov
inc
cli
scas
aaa
in
out
push
xor
sub
cmp
add
mov
dec
jmp
mov
sti
lahf
int
lahf
movsl
out
lods
dec
lea
pop
add
pushf
xlat
xchg
jnp
xor
add
movsl
add
push
inc
loop
xor
xor
inc
inc
cmp
xchg
in
out
mov
pop
pop
imul
stos
hlt
mov
out
xchg
pop
outsb
or
icebp
mov
dec
lds
into
mov
cs
jecxz
cwtl
push
or
mov
ja
cmpsb
cmp
jmp
call
inc
xchg
dec
lock
sahf
inc
xlat
xor
scas
lods
inc
inc
adc
jl
ss
lret
xor
in
movb
cmp
jae
ja
push
push
rcr
pop
scas
push
clc
mov
adc
adc
arpl
sub
in
mov
pop
clc
insb
jge
cwtl
mov
or
mov
pop
jns
cwtl
adc
test
mov
xor
in
jp
xor
sub
nop
popf
pop
cmp
add
cli
repz
in
add
and
in
outsl
xor
adc
movsl
sub
pop
pop
cmp
inc
xchg
cld
inc
sahf
mov
mov
lret
orb
sub
mov
inc
mov
icebp
add
cmp
das
rcl
in
mov
adc
add
fisttps
mov
adc
lret
pop
dec
sub
add
repz
add
jp
cmpsl
jae
mov
cli
sub
addb
or
pop
jp
scas
lret
or
lds
sti
sbb
shrb
adc
lcall
cmp
out
sbb
mov
jno
sub
xchg
jbe
pusha
shlb
movsl
push
xchg
int
sarl
jecxz
test
cmove
add
sub
cmpsl
sbbl
add
rolb
pop
add
xchg
jmp
pop
or
push
aas
pusha
pop
mov
pop
enter
mov
jnp
push
mov
mov
xchg
clc
jmp
jecxz
dec
aaa
call
frstor
fmuls
sbbb
aas
shll
dec
notb
pop
add
jae
jno
inc
fsubr
int3
and
stos
imul
mov
cmc
sub
scas
orl
adc
adc
lahf
lods
xchg
lock
rorl
rclb
fstps
test
fucomp
in
stos
sbb
cmp
leave
add
gs
cltd
cld
xchg
and
outsb
rorl
fcomps
mov
mov
sbb
inc
pop
pop
mov
scas
jl
loope
clc
add
jle
psubb
cmpsl
fistpll
mov
xchg
divb
rcl
dec
xchg
jb
xchg
test
aas
xor
movsl
push
nop
addl
jne
add
int
or
jo
inc
pop
mov
and
pop
pop
mov
mov
dec
xchg
roll
push
inc
inc
ret
push
or
cmp
push
cmp
or
push
jle
lret
or
test
xchg
mov
aam
inc
gs
xchg
jmp
test
dec
mov
add
ds
and
fisubrl
test
lock
pop
mov
rclb
cmp
inc
pushf
sbb
sub
sub
mov
adc
das
icebp
cmp
mov
fisttpll
imul
cmp
lds
mov
inc
daa
xchg
out
daa
inc
inc
mov
sub
gs
imul
jl
and
xchg
cmp
enter
sar
lret
data16
mov
cmpsl
inc
mov
sub
adc
negl
adc
cmp
cmpsb
adc
mov
sbb
es
loope
frstor
jg
lods
icebp
dec
sahf
lds
cli
mov
dec
push
inc
in
or
adc
jo
lret
mov
mov
lea
mov
stc
or
jns
or
aam
lcall
or
jl
push
pop
push
adc
xor
mov
pop
nop
out
pop
aad
loopne
xor
cmpsb
ljmp
inc
cltd
sbbb
dec
dec
loopne
imul
dec
jb
les
scas
or
clc
push
and
mov
jle
cmp
push
push
and
or
or
rcrb
lcall
cmpb
sub
jno
in
mov
scas
lock
sbb
xchg
xchg
dec
imul
sub
andl
xor
fisubl
pop
rcrl
rcr
into
cwtl
pop
arpl
dec
inc
and
clc
sub
mov
sbb
sub
cmc
mov
xor
fstps
cmp
xchg
aaa
mov
or
or
pop
sub
hlt
les
sub
shlb
and
jmp
mov
pop
sbb
cmp
addl
mov
flds
push
fcmove
and
push
aam
inc
xchg
or
cmp
push
xchg
mov
std
roll
repz
pop
mov
lret
out
push
add
sti
mov
and
out
adc
inc
xorl
mov
pop
movsb
jge
test
cs
scas
scas
xchg
sub
pop
inc
rcll
xchg
dec
test
iret
lods
jnp
xchg
mov
mov
jo
add
push
add
aas
xrelease
cmpsl
cmpsl
adc
mov
cwtl
push
jbe
push
fsubs
aaa
xor
jns
rcr
sub
cmp
sub
or
mov
xchg
fcomp
out
lock
sbb
xchg
cmpsb
dec
test
cmp
fldl
sub
rorb
mov
xchg
les
and
loopne
int3
push
ret
fisttpl
inc
es
inc
shrb
cltd
pop
out
cli
sub
stos
fidivrl
ss
jne
lahf
sahf
mov
add
add
es
jno
cmc
divl
mov
sbbb
add
repz
add
lcall
push
jne
mov
lods
mov
and
mov
mov
xor
or
stos
in
decb
dec
aaa
jnp
and
data16
aad
and
ret
outsb
xchg
fsts
push
inc
aad
adc
mov
jmp
outsw
bound
jg
sbb
pop
mov
inc
std
cli
aam
cs
arpl
sti
or
mov
cld
test
mulb
mov
out
mov
testb
xor
cmp
scas
jne
push
jmp
fmuls
test
cli
add
pop
add
pop
xor
push
int3
stos
mov
int3
or
add
fwait
mov
movsb
jne
add
insl
stos
data16
push
sti
cltd
inc
int
inc
test
sahf
fldenv
fiaddl
mov
rolb
jns
mov
arpl
jnp
stos
xchg
mov
ja
popf
idivl
xor
jae
fstpl
xor
xchg
int3
pusha
sub
repz
das
pop
jmp
imul
xchg
aad
leave
xchg
mov
adcb
loop
or
or
mov
insl
jo
xor
ss
or
aad
addr16
popa
or
jno
adc
and
fadds
sub
jae
repz
cmc
aaa
push
les
pop
push
into
loope
pop
push
adc
or
loopne
sub
mov
jo
mov
hlt
lret
fildl
lret
imul
jae
dec
pusha
mov
dec
push
add
out
mov
popf
or
pop
push
arpl
and
push
jmp
xchg
popa
inc
adc
lret
and
ljmp
nop
incl
ds
push
nop
enter
cmp
xlat
jg
mov
mov
pushf
cmpb
sbb
mov
dec
xchg
mov
pop
xor
pop
je
xor
dec
pushf
sub
jg
mov
xorb
pushf
pop
test
lds
adc
or
cld
add
xchg
stos
adc
inc
stos
xor
repz
push
mov
inc
movl
out
loope
cltd
cmp
cld
cli
stos
jle
sbb
jns,pn
aad
xor
mov
orl
std
lds
in
mov
dec
incl
mov
and
ret
repz
cmp
data16
and
sahf
call
jno
ret
push
repz
into
mov
pop
xchg
pop
mulb
popf
roll
xchg
sub
leave
sbb
xchg
int3
pushf
xor
cltd
fsubl
push
loop
inc
loopne
add
inc
pop
push
jb
fwait
popa
shlb
ljmp
or
lock
popf
push
sahf
popf
cltd
inc
arpl
imul
jle
int3
push
lcall
or
lret
outsl
mov
mov
movsl
aas
fwait
jns
xchg
mov
dec
sub
aad
jo
cmp
sbb
das
jno
jbe
dec
jmp
xchg
std
mov
stc
and
call
adc
jmp
stc
xor
nop
cld
test
mov
adc
insl
rcll
xchg
push
xor
push
stc
nop
mov
mov
jne
filds
fisttpll
jl
xor
xor
xchg
fs
xchg
shrb
xchg
adc
shll
gs
jmp
add
imul
xchg
arpl
add
mov
gs
repz
loopne
sarl
sbb
enter
mov
xor
lret
inc
adc
stos
insb
scas
lret
add
mov
jo
popf
push
js
fisttpll
subl
adc
cmp
or
dec
imul
push
cmp
push
mov
loopne
pop
pop
sbb
scas
in
adcb
test
shlb
sub
mov
push
lods
out
dec
pop
fwait
mov
cmp
ja
notb
inc
add
pop
cmp
pusha
sub
push
cld
mov
pop
mov
sub
xor
movsb
dec
pushf
rorl
mov
adc
inc
add
fistl
add
xchg
jne
testb
jg
insb
inc
mov
testb
lcall
mov
je
arpl
andl
add
ret
inc
fisttps
lahf
int
push
movups
adc
add
repz
add
push
out
push
pushf
mov
pusha
jecxz
sbb
cmp
add
dec
or
push
in
ss
pop
cmc
lods
jmp
inc
jg
xchg
jp
ss
xorl
divl
shll
in
test
pop
insb
xchg
and
sub
outsb
data16
pop
ds
mov
pusha
inc
fwait
push
and
mov
loope
or
and
movsb
dec
ret
lock
jae
inc
out
cmp
xchg
aad
aas
or
pushf
mov
mov
ret
test
add
loopne
mov
add
test
aam
or
popf
leave
pop
pop
cld
pop
aad
inc
ss
adc
movsb
imul
gs
decb
xor
jp
push
or
dec
stos
mov
clc
sbb
pop
xchg
stos
out
mov
sub
mov
add
ljmp
call
out
mov
pop
repnz
dec
arpl
sti
xchg
add
dec
adcb
hlt
int3
jb
dec
xor
adc
out
ss
jge
fs
and
subl
addr16
jg
call
jb
cltd
sub
lret
addr16
lcall
addr16
lret
data16
mov
cmp
sbb
dec
shrb
jle
daa
leave
out
in
loope
sub
pushl
xchg
mov
repnz
xchg
cli
push
adc
xchg
sub
fs
dec
jne
dec
mov
xchg
popf
scas
in
cmc
dec
stos
inc
pop
xor
cmp
icebp
pop
or
sbb
mov
in
fildl
in
xor
add
roll
loopne
or
fistpl
fdivrl
lret
sbb
sbb
sbb
xlat
mov
cs
add
fcmovnb
negb
dec
jbe
les
mov
cmc
mov
repnz
mov
test
cmp
imul
jo
out
enter
jnp
inc
sub
push
dec
pop
mov
jge
fsub
xchg
lea
ja
sbb
cmp
inc
mov
cwtl
ljmp
je
xor
inc
pusha
jmp
mov
add
pusha
mov
adc
mov
nop
outsl
imul
sti
dec
stos
add
icebp
cmp
lock
mov
stos
ret
stc
aad
fadd
jle
js
mov
push
repnz
push
xchg
loopne
hlt
mov
xchg
inc
daa
lods
jbe
cmp
in
stos
or
push
push
cmp
sarl
and
dec
inc
xchg
add
jbe
dec
jle
adc
aas
addr16
mov
mov
jne
out
cmp
ficoms
mov
in
roll
mov
dec
pop
and
cmp
mov
xchg
leave
push
subb
sub
jb
jne
fldenv
push
and
loopne
xor
push
cmpsb
pop
imulb
or
cmp
sbb
out
xchg
dec
int
jmp
nop
inc
addr16
sbb
in
ss
mov
out
adc
mov
jnp
jmp
xchg
adc
out
lcall
lock
pop
mov
in
movsb
insl
push
lret
cli
ljmp
push
movsb
push
stc
ss
or
je
or
mov
inc
pop
test
push
mov
add
mov
inc
leave
sbb
ja
in
mov
aad
lods
and
sbb
inc
subl
xor
pop
insb
sbb
out
or
push
mov
dec
jp
repz
and
pop
push
mov
ret
fadd
inc
bound
sahf
sbb
push
push
sub
add
dec
lea
mov
pop
xor
fimull
fs
cli
lods
lret
cmp
leave
scas
iret
adc
aas
fidivl
cs
cmp
aaa
lahf
sbb
das
xchg
cmp
push
loopne
xchg
adc
xorb
rorl
mov
xchg
mov
popa
movsb
adc
pop
out
cmp
pop
loop
imul
aam
push
into
add
enter
add
bound
and
push
popa
fldt
sahf
nop
sbb
lret
lahf
dec
lcall
jmp
or
and
fs
cwtl
aaa
into
mov
jne
pop
mov
sahf
xlat
stos
and
inc
sti
cmc
xchg
pop
aaa
stos
xchg
int3
sti
aaa
aaa
inc
ljmp
sbb
ss
idiv
dec
shlb
jecxz
repnz
pop
mov
test
scas
cmp
mov
rcll
sbb
testb
stos
aaa
sbb
lcall
negl
pop
lret
mov
jb
lcall
cmp
xlat
aas
popa
adc
orl
add
repz
add
xor
ja
push
mov
sarb
pop
add
push
std
xchg
dec
fs
and
movsl
adc
jp
jns
sub
xchg
popa
xchg
and
sbb
push
push
cmp
lret
mov
lcall
sub
out
mov
mulb
ret
dec
mov
mov
cmp
pop
mov
arpl
loop
mov
imul
jbe
pop
or
add
or
cli
push
pop
dec
sbb
cltd
cli
outsb
mov
enter
loope
ljmp
es
enter
push
aad
mov
xchg
xchg
adc
jge
push
stc
lret
push
push
mov
mov
dec
inc
out
adc
push
xlat
mov
xor
push
mov
mov
adc
dec
ficompl
outsb
data16
mull
clc
lock
ret
push
inc
jmp
icebp
les
cmp
xchg
pop
xor
xor
pusha
and
xchg
sub
lea
scas
scas
add
movsl
mov
pop
or
xchg
mov
pop
xchg
or
addr16
sbb
lds
adc
cmp
xchg
inc
lahf
xchg
jbe
and
sub
xchg
fs
sahf
out
or
clts
addr16
lods
push
dec
aaa
push
sbb
cmpsl
add
add
filds
icebp
mov
cmpsl
dec
shll
cwtl
test
mov
adc
mov
cmp
adc
bound
push
addl
add
sbb
ret
rolb
lret
cmpsl
les
push
adc
cwtl
lcall
pop
shll
add
cwtl
in
add
in
or
jmp
jns
ficoms
popf
adc
and
xchg
xor
sahf
ror
decl
add
push
cmp
stos
or
and
das
push
mov
jo
lahf
mov
mov
mov
push
xchg
pop
clc
ret
test
dec
aas
stc
cmpsb
adc
mov
mov
push
test
ret
lret
movsb
adc
sti
imul
mov
inc
sbb
mov
sbb
and
jo
mov
sarl
mov
pop
mov
add
enter
cmp
inc
jnp
or
xor
pop
pop
xor
push
push
xchg
push
push
lahf
fldenv
jp
inc
mov
aad
mov
mov
fildl
dec
cmp
push
lods
out
xchg
test
mov
les
das
jl
dec
test
pop
xchg
into
xchg
xor
or
xor
rorb
lea
adc
pop
inc
push
add
arpl
vpavgw
bound
roll
push
add
sub
push
xor
dec
xchg
add
adc
adc
jno
adc
repnz
jecxz
cmp
fisubs
mov
mov
pop
stos
movsb
repz
xchg
xor
je
pop
mov
jbe
clc
fwait
mov
add
adc
mov
jg
push
lods
push
dec
scas
addr16
cmp
loope
shll
rcrl
push
popa
ja
ja
adc
mov
movsb
les
push
lock
daa
xchg
inc
adc
sbb
or
ficoml
int
pusha
cwtl
cs
push
insl
xor
push
mov
iret
rcrb
mov
jle
aas
jle
jb
repz
in
and
adc
cld
xchg
jae
sub
sbb
js
ljmp
into
jecxz
and
mov
lock
pop
in
test
repnz
mov
adcl
mov
jae
daa
es
push
lock
sbb
das
mov
xlat
jmp
and
add
clc
mov
hlt
adc
dec
cmp
andl
aas
test
shl
loopne
repnz
cmp
sub
jmp
mov
xchg
xchg
xor
adc
loopne
out
bound
fcoms
shlb
mov
cmp
ss
dec
andl
jnp
fbld
mov
pop
fsin
rcr
jmp
les
inc
pop
jmp
push
and
pop
jge
or
loop
mov
loop
in
sbb
lock
imulb
in
and
mov
scas
ss
and
sub
push
icebp
cmp
mov
mov
add
add
sahf
insl
not
neg
mov
int
dec
js
testl
pop
sbb
and
jns
mov
push
rorb
lock
jge
pop
addb
cmp
sbbl
adc
mov
movsb
lock
hlt
ds
aam
movsl
push
mov
inc
mov
push
mov
shrl
jns
xchg
movsl
push
cs
cld
mov
mov
sub
stos
shr
push
in
dec
jnp
push
sbbb
mov
pop
sbb
sbb
out
fisubl
pop
scas
gs
in
xor
movsb
dec
popf
xchg
add
repz
movb
test
sbb
or
mov
pop
push
mov
lahf
inc
jmp
enter
mov
loope
sub
mov
sub
ljmp
cwtl
inc
cmp
mov
sti
adc
cmc
jns
aaa
jp
adc
enter
mov
mov
or
cmp
xor
adc
or
push
je
jmp
pop
pop
inc
pop
sub
push
push
scas
test
iret
test
dec
mov
mov
pop
int
fwait
pop
xchg
shll
es
cli
mov
inc
and
jnp
mov
sbb
pop
xchg
into
es
mov
lds
aam
dec
mov
or
inc
lea
out
xlat
idiv
loop
xlat
scas
in
push
popf
push
dec
dec
mov
rorb
xor
call
psubb
data16
or
mov
int3
sbb
pop
jp
sbb
movsl
mov
aam
subl
mov
leave
jge
pop
dec
add
or
nop
mov
repz
mov
sbbb
lods
out
sbb
and
cli
xchg
inc
adc
xor
movsl
mov
loop
das
fdivl
stc
das
in
xchg
ss
push
enter
lods
jae
dec
daa
lods
push
push
and
ja
adc
clc
adc
loop
in
lcall
dec
mov
mov
xor
add
dec
xchg
jp
sahf
lods
stos
hlt
and
mov
adc
andb
pop
mov
in
sub
cmc
inc
movsl
cmc
cltd
insb
mov
dec
jne
lret
pushf
scas
je
xchg
sub
scas
sbb
cmp
sub
ljmp
mov
dec
ljmp
ret
and
sar
in
ret
test
aam
scas
add
sbb
daa
and
and
int
adcb
cltd
inc
xorb
add
outsb
int
stc
dec
aam
cmpsb
daa
xchg
fmuls
pop
loop
add
outsb
push
jb
mov
icebp
sub
adc
pop
test
mov
gs
xor
aas
lods
xchg
jle
mov
push
sbbb
push
testl
adc
loope
cmpl
lods
sarb
shrl
out
fisttpl
hlt
push
jg
dec
adc
or
pop
xchg
adc
ja
les
cmp
adc
in
mov
xchg
stos
data16
xchg
js
aaa
mov
test
ss
and
push
jmp
popa
iret
stos
or
scas
stos
xchg
fsubrs
sbb
xchg
cmp
lods
or
mov
xor
fldenv
test
sub
rolb
or
outsl
loope
mov
pop
pop
mov
lea
cmp
insl
int3
push
add
and
div
sbb
xchg
mov
jne
dec
stos
daa
pusha
dec
movsb
ja
push
clc
repz
xchg
jge
mov
test
add
pop
mov
push
popa
aad
fwait
sbb
pop
adc
addr16
xchg
xchg
add
adc
cld
test
ss
jbe
push
leave
insb
loopne
stos
int
xchg
call
push
jb
mov
or
loopne
adc
sbbb
dec
inc
cmp
addr16
mov
fwait
pop
mov
rorl
mov
cwtl
addl
inc
popa
ret
lret
cmp
mov
fsts
lock
popa
shlb
pop
ficoms
mov
loop
mov
dec
imul
rcll
addb
js
mov
in
adc
dec
hlt
enter
xchg
aaa
jae
in
inc
lock
out
xor
mov
add
add
mov
push
out
std
mov
push
jg
mov
ljmp
add
imull
out
jno
test
push
adc
repnz
rorl
pushf
xor
insl
or
cmp
decl
inc
xor
cmpsb
aas
call
mov
and
fldt
pop
stos
sub
int
movsb
enter
adc
adc
xor
adc
sahf
cmp
nop
daa
pop
int3
nop
into
pop
inc
adc
cld
mov
int
xor
lods
and
outsl
clc
daa
lea
ret
sbb
jge
sti
add
mov
inc
outsb
mov
push
adc
xchg
cmp
rcll
cmc
adc
pushl
cmp
js
push
ss
pop
mov
cmpl
lret
jge
inc
int3
cld
ja
adc
rcll
outsl
cwtl
lods
clc
subb
int
jmp
mov
add
pop
scas
xor
stos
stos
jae
insb
jl
jbe
mov
xor
mov
stos
jb
cmpsl
sbb
test
dec
mull
test
loope
in
cmpsl
inc
push
aam
push
or
stos
adc
or
mov
xchg
cmp
pop
pusha
xor
inc
xor
lahf
mov
rorl
stos
mov
or
arpl
out
stc
rolb
inc
dec
mov
notl
movsl
clc
cmp
sub
mov
lret
pop
int
sti
xchg
cltd
adc
xor
iret
jae
pushf
loopne
aaa
call
ja
sti
adc
pop
xchg
movsb
insb
imul
test
cld
push
iret
roll
imul
popl
or
xor
dec
hlt
scas
das
jo
mov
dec
jne
movsl
jg
test
subl
aas
cmp
addr16
push
out
fcoms
push
sbb
stos
mov
cmp
daa
fisubs
loope
pop
push
enter
xor
pmulhw
cmpb
iret
add
mov
xchg
or
jne
inc
dec
xorl
out
cmc
test
bound
gs
xor
lcall
pusha
lret
sbb
mov
sbb
test
stos
test
cmp
rorl
or
jp
sbb
stos
movsb
cli
inc
int3
cmp
mov
xchg
sub
in
fidivl
push
mov
fsubs
pextrw
arpl
xchg
adc
jge
mov
xor
xchg
icebp
rcr
xchg
mov
imul
adc
cltd
cmp
xchg
fldz
movsl
xor
pop
ja
push
gs
mov
mov
nop
push
jl
mov
shlb
inc
mov
jae
sub
pop
inc
cmp
shrb
ret
dec
mov
cld
pop
in
or
pop
xorb
mov
nop
xor
or
xor
xchg
mov
pop
xchg
adc
jp
mov
mov
mov
jne
jne
jb
repz
sub
pop
sub
mov
push
xor
div
jns
or
xor
out
mov
inc
and
daa
pop
dec
xchg
mul
xor
nop
aas
sbb
fs
addl
push
cwtl
jne
jge
mov
icebp
mov
and
push
movsb
jo
pop
and
adc
sti
in
and
inc
mov
and
shlb
add
pop
dec
sahf
jg
adc
adc
ret
mov
sub
cmp
pop
jl
mov
push
pop
push
jl
loopne
add
cmp
adc
sar
lret
mov
sbb
add
cmp
xchg
aaa
imul
imul
and
mov
mov
in
push
push
mov
repz
xor
sahf
aas
rorl
push
std
shll
sbb
ret
dec
push
es
or
movsl
adc
push
jae
mov
cmc
cmp
scas
lahf
and
xchg
cmp
add
cli
cmp
cli
xchg
jne
arpl
or
lds
outsl
mov
js
out
jbe
or
stos
sub
fadd
filds
push
scas
pop
sub
fistl
mov
mov
jns
lods
pop
test
dec
and
add
imul
sbb
imul
dec
add
or
movsb
in
push
add
add
add
lret
in
out
dec
add
mov
add
add
add
or
out
out
js
daa
dec
scas
movsb
shl
jg
ficoms
or
mov
inc
dec
in
out
fstl
xor
and
in
push
or
inc
and
ret
test
pusha
stos
inc
icebp
dec
push
xor
add
pop
mov
loopne
enter
or
jbe
sbb
loop
cmp
scas
push
ljmp
add
or
push
xchg
mov
xchg
jl
addb
xchg
inc
insb
sub
popf
mov
xor
cmp
into
in
or
adc
inc
movsl
mov
add
sbb
pushf
in
stos
xchg
test
add
jae
or
pop
mov
popa
jo
outsb
aad
into
insb
add
pop
sahf
cli
jmp
or
dec
or
mov
or
pop
jmp
dec
mov
mov
dec
mov
xchg
or
stc
hlt
imul
dec
dec
xor
pop
push
in
mov
sbb
xchg
adc
xor
imul
or
and
jp
ret
mov
out
fidivrl
cmpsl
lods
mov
js
xorb
ret
xchg
xchg
add
push
sub
mov
xor
rcr
aad
shll
cmpsl
xchg
sbb
add
outsb
in
jp
ljmp
jb
xchg
mov
fwait
out
int3
repz
fistpl
xchg
fnsave
cli
sbb
sub
jecxz
dec
pop
lock
aaa
mov
bound
es
pop
cmpsb
inc
fimull
push
push
cmpsb
push
ds
notl
dec
dec
fisubrl
sub
cs
xchg
xor
dec
xor
lods
stos
jmp
pop
rcr
clc
lock
mov
add
idivl
rol
pop
divb
testl
test
enter
mov
in
mov
mov
add
cmpb
pushf
cmp
mov
daa
fimuls
mov
jp
xchg
fldcw
sbb
nop
push
lret
xor
cltd
call
in
leave
jecxz
dec
xor
testl
subb
xchg
mov
xlat
pushf
and
js
inc
aaa
dec
push
pop
pop
xor
movsb
mov
inc
std
lahf
ljmp
or
popf
addr16
push
fildl
mov
fdivl
xchg
popf
subl
xchg
movsb
push
cs
movl
mov
loop
lock
pop
stos
mov
push
dec
sub
sar
xchg
dec
subl
sub
dec
add
icebp
jno
in
adc
sbb
sbb
push
inc
scas
in
fimuls
shrb
fistl
and
mov
pop
jmp
xchg
shrb
pop
jmp
sub
and
mov
mov
push
in
sub
ja
add
popa
push
shr
xchg
sbb
loop
add
mov
hlt
leave
sub
arpl
out
xlat
lret
pop
jge
sub
mov
mov
outsl
mov
xor
call
frstor
call
dec
ret
cmpsb
mov
dec
mov
inc
sbb
jp
xchg
pop
pop
dec
dec
pop
xor
inc
lea
jb
aad
adcl
popa
hlt
in
insl
clc
push
sub
sub
aam
xchg
or
test
push
push
jb
add
cmp
sbb
adc
imul
push
movsl
or
into
int3
clts
pop
sub
imul
mov
pop
fwait
sbb
cli
lret
addr16
mov
mov
popa
xchg
dec
outsb
test
xchg
push
adc
jg
incl
outsl
adc
and
mov
idiv
je
repnz
mov
add
insl
xor
out
push
icebp
pop
in
sub
add
stos
sub
push
lcall
cwtl
cld
loope
adc
add
and
cs
pushf
sbb
imul
jmp
push
pop
cmp
ss
mov
ss
test
cmp
pop
xor
jnp
sub
shlb
cmp
sbb
lea
xchg
pop
lock
sub
fistpll
lea
cs
icebp
adc
push
es
cld
push
dec
mov
mov
jge
mov
mov
add
hlt
or
stos
into
adc
sbb
jbe
pop
sti
imul
mov
xor
movsl
out
xchg
sub
adc
je
std
mov
rorb
adc
add
add
add
pop
loope
mov
jg
ss
imul
fucomp
lea
jle
xchg
pop
inc
and
sbb
mov
cmpsb
push
mov
stos
jge
iret
and
push
push
mov
xchg
inc
faddl
cmp
xor
and
cmp
cli
xor
xlat
cmc
js
cwtl
jbe
xchg
push
mov
cmp
xchg
push
mov
mov
inc
sti
stc
dec
cmpsl
inc
cwtl
cld
xchg
xor
shlb
outsl
ja
les
inc
call
das
jl
add
sub
lea
hlt
push
ret
repz
mov
test
pop
popf
lret
inc
ljmp
not
out
in
cmc
add
in
xchg
cmp
or
dec
cmp
insb
jmp
push
cmc
push
dec
jp
adcb
jno
mov
mov
fnstcw
test
and
out
jg
pop
int
inc
je
sub
xchg
cld
dec
inc
lds
inc
pop
lock
add
popa
mov
jno
mov
sbb
pop
clc
adc
mov
mov
xor
mov
pop
filds
imul
stos
rclb
les
jle
sahf
or
fldl
push
sbb
js
push
rcll
jo
ret
mov
sbb
pushf
leave
sub
mov
lods
dec
add
cli
les
jmpw
subl
mov
aad
inc
adc
pop
xlat
xlat
mov
add
push
hlt
sahf
mov
dec
popa
xlat
and
and
clc
mov
nop
push
or
leave
fbld
stos
pop
imul
ret
stc
aad
push
add
mov
jge
dec
popf
jl
into
icebp
jmp
loopne
mov
inc
popf
pop
daa
cmpsb
scas
inc
dec
ret
andb
xchg
sbb
sub
outsb
xor
or
mov
out
movsl
movsb
movsl
push
in
mov
and
rcll
fs
and
stc
dec
xchg
dec
xchg
rsqrtps
push
sub
pushf
stos
cli
mov
aaa
sarb
inc
fcmovnbe
mov
shlb
test
sbbl
xor
pop
jnp
divb
fisubl
push
add
mov
gs
test
jecxz
and
aam
mov
dec
repnz
pop
ret
mov
imul
push
cmp
mov
cltd
xchg
mov
mov
jge
mov
or
mov
jge
add
adc
fcompl
into
lahf
in
rol
jp
inc
mov
test
hlt
inc
lock
cmpsb
dec
xchg
sti
pusha
fdivrl
ljmp
xchg
jecxz
fldcw
jl
add
xchg
lcall
pop
scas
mov
sub
dec
faddl
lods
enter
cs
call
push
sub
sbb
xchg
push
sbb
nop
icebp
ss
sbb
scas
add
bound
inc
or
xchg
js
inc
mov
test
fwait
xchg
out
add
jg
hlt
imul
sbb
add
andb
dec
xchg
and
push
or
xchg
in
fbstp
xchg
mov
ret
jbe
sarb
stc
test
movsl
js
sub
lds
je
popl
sub
fcmovnb
push
cmp
adc
mov
outsl
jns
adc
in
scas
into
les
mull
xlat
mov
fsubl
iret
in
pop
pop
push
gs
pop
clc
push
vmovdqu
lahf
cmpl
out
sbb
aaa
cwtl
jbe
mov
jns
leave
js
push
jno
outsb
cmp
xor
cmc
mov
dec
sbb
inc
pop
dec
scas
sti
stos
sbb
rcrb
and
and
notl
xor
jle
fwait
cmpsb
pop
pop
jo
pop
jae
inc
sbb
sbbb
js
ficomps
fildll
testl
movsl
lods
das
inc
sbb
and
mov
pop
xchg
cmp
mov
mov
jecxz
fs
cmp
pop
gs
push
in
jbe
dec
in
pusha
sub
mov
jno
rorl
sub
popf
xor
push
lock
int3
dec
dec
sub
fadd
imul
mov
les
fildll
fcomi
and
test
xor
mov
das
xchg
mov
inc
int3
repnz
out
xor
mov
out
ret
js
lcall
add
in
in
or
in
loop
sbb
add
add
add
sub
shll
lods
sbb
fwait
inc
aaa
insb
bound
out
push
scas
add
cli
cli
push
push
fdivs
pop
adc
or
pop
push
orb
jmp
or
sahf
and
xor
cmp
lret
sarl
mov
ja
cltd
cmpsb
and
fs
jae
inc
cmp
jecxz
icebp
push
inc
inc
sahf
lods
mov
and
jbe
ss
mov
add
lcall
push
popa
movsw
xor
add
mov
sub
jmp
popf
xor
gs
daa
adc
jle
dec
sbb
sbb
mov
aaa
mov
outsl
jo
jmp
push
adc
xchg
bound
mov
ss
mov
jmp
loop
mov
pop
sbb
nop
mov
stc
inc
insl
das
cltd
cmp
gs
jge
decl
mov
inc
xchg
hlt
adc
push
sbb
pop
mov
out
dec
mov
lahf
add
fwait
sbb
inc
movl
jp
cmp
rclb
lods
mov
stc
cwtl
sbb
adc
je
push
mov
and
idiv
sbb
cltd
or
mov
mov
sbb
mov
sarb
aas
and
jne
nop
sub
push
xchg
jnp
ds
and
mov
mov
cld
jo
push
ljmp
insb
roll
add
cwtl
mov
push
ss
sbb
mov
jmp
sub
mov
cmp
insl
loope
push
jl
sbb
mov
sti
xor
push
rcrb
mov
cli
or
mov
pushf
out
push
out
sub
cmp
jb
add
je
cli
xor
adc
mov
pop
mov
insl
cmp
push
xchg
or
inc
dec
mov
mov
jmp
push
notl
ror
xchg
dec
fisubs
sbb
mov
xchg
mov
add
add
push
sub
mov
es
push
gs
cmp
in
pop
hlt
jmp
pop
and
cmp
fistpl
lock
cltd
outsb
mov
cwtl
rorl
in
clc
or
imul
add
sbb
cmp
jno
popf
or
lret
loop
push
cmc
or
inc
decl
fmull
mov
push
das
repnz
xor
pop
cmc
mov
loopne
lret
dec
iret
dec
pop
sub
adc
cmp
jle
cli
jo
push
das
xchg
arpl
or
sbb
and
pop
je
lret
cmp
lods
lods
scas
in
out
mov
sub
aaa
adc
stc
fidivrs
fistpll
dec
out
jle
push
jo
mov
jp
mov
and
sbb
js
cmp
push
xor
pop
dec
mov
daa
lahf
je
out
xor
push
push
into
mov
adc
jae
xchg
add
xor
jecxz
sub
sahf
mov
jmp
mov
loop
jp
sti
ljmp
ror
scas
pusha
decb
mov
jle
daa
xor
xlat
scas
bound
enter
cmp
mov
inc
or
jnp
insl
pop
jle
pop
lret
psrlq
sbb
or
icebp
out
hlt
dec
jo
xchg
xchg
movsb
push
or
fwait
lock
shll
push
stos
mov
mov
pop
mov
cmp
adc
xlat
lret
pop
add
mov
and
xchg
xchg
mov
cmpsb
sub
sbb
fistpll
push
rolb
insb
cmp
cmpb
call
mov
mov
pop
mov
mov
repnz
jle
inc
mov
xchg
pop
cmpsb
fidivl
and
pop
out
add
and
ret
inc
data16
imul
movsl
test
pop
add
pop
xor
mov
jne
pop
pushf
stos
in
aad
into
mov
sub
repnz
lahf
movsl
or
fbstp
or
repz
xchg
dec
adc
mov
push
pop
popf
mov
hlt
jae
in
clc
ds
or
fiadds
add
in
loope
or
mov
mov
mov
sbbb
mov
jns
push
rclb
inc
outsb
mov
movsl
pop
fucomip
mov
dec
pop
push
or
dec
pusha
inc
cmp
fisubrl
pop
inc
lods
popf
jne
ljmp
add
push
push
add
lods
test
gs
popa
lcall
add
les
cmp
push
inc
int3
aas
call
sub
dec
cld
into
shll
sub
jno
fstpt
call
jl
add
lea
aam
test
xor
mov
movsl
xor
leave
pop
mov
mov
mov
jbe
test
mov
mov
sub
int
jge
or
and
mov
lds
or
test
rorb
jno
sub
int3
dec
pop
hlt
jle
xchg
in
push
bound
loop
lcall
hlt
mov
adc
vpminub
fnstenv
nop
and
aaa
xlat
ds
mov
jns
cmpsl
jge
dec
daa
notl
jne
sbb
sbb
jns
jnp
ret
rep
aad
lock
jmp
bound
jne
movsl
enter
adc
xor
lretw
sar
push
mov
cmp
mov
insl
pusha
and
adc
pop
xor
mov
mov
push
cmc
or
orl
nop
mov
xchg
xchg
mul
fcmovbe
jl
fsqrt
lret
xorb
cmp
ret
sub
dec
mov
decl
loop
inc
scas
push
cltd
inc
jecxz
xchg
outsl
cmp
inc
xor
dec
les
fiaddl
subb
pop
ja
das
mov
call
sub
cmpsb
bound
mov
out
out
adc
inc
xchg
aam
sbb
lret
pusha
and
cli
mov
xchg
cmc
adc
mov
rol
cmp
aaa
xchg
push
push
mov
test
push
mov
adcl
dec
testl
insb
into
out
mov
push
scas
leave
daa
hlt
and
mov
push
mov
fsubl
xchg
gs
jecxz
les
aas
sarl
lret
pop
in
xchg
jnp
xchg
inc
push
test
es
push
cs
inc
popl
jge
push
fiadds
pop
out
and
jno
push
and
push
shrl
add
fstps
inc
js
test
lret
adc
addr16
data16
es
adc
or
sbb
xor
push
int
test
out
xchg
fsubs
fbstp
cmp
ss
sbb
xor
pop
xchg
fcomps
sub
pop
test
scas
jo
push
imul
inc
mov
or
bswap
cmpsb
or
shl
scas
mov
cmp
insb
push
jnp
mov
or
adc
daa
es
into
pop
or
inc
ficompl
push
lcall
cmp
push
int3
mov
lock
movsl
mov
nop
adc
scas
adc
cld
sbb
or
cmc
dec
stc
sub
fnsave
push
popa
lret
xchg
arpl
adc
test
or
add
push
cmp
jb
mov
lret
popa
jns
enter
xchg
or
mov
loopne
inc
sbb
pop
jl
or
mov
push
movsb
sub
addr16
push
faddl
add
cmp
les
cwtl
sti
out
scas
je
xchg
hlt
test
and
jmp
xor
negl
sbb
mov
adc
stos
pusha
jns
int3
push
push
sbb
arpl
mov
lret
icebp
xor
cmpsb
sub
mov
cmpb
or
shll
push
add
mov
loope
addr16
movsb
movsb
mov
cmpsb
xchg
dec
js
fnclex
and
out
out
xchg
gs
dec
jns
xor
push
lahf
jo
pop
pop
fdivs
cmp
shl
adc
fucomp
rep
xor
cld
xor
rcrl
sbb
test
xchg
xchg
repz
mov
scas
add
test
adc
cli
std
out
cmpsb
mov
pop
mov
adc
or
inc
mov
nop
loope
inc
mov
sbb
mov
jle
inc
mov
rorl
add
cmp
dec
jb
mov
daa
in
out
shl
andl
mov
push
add
dec
xchg
or
dec
inc
add
jae
and
andb
outsb
sbb
jo
ret
sti
lret
fidivl
push
dec
jmp
push
mov
in
fcomp
aam
lcall
adc
xchg
ret
lret
sub
sub
popf
cmp
and
xor
lcall
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
movsb
xchg
ss
test
add
add
xlat
dec
mov
sbb
inc
outsl
and
push
cmpl
add
adcb
sub
sbb
pop
enter
adc
lds
icebp
pop
xor
mov
hlt
cmp
lea
test
cmp
stos
fs
sarb
in
xchg
sarl
jl
es
outsb
pop
flds
sbb
xor
or
inc
or
jle
repz
ds
add
popf
nop
jg
inc
in
pop
popa
jns
mov
inc
xchg
mov
int3
sbb
mov
inc
inc
fsubrs
sbb
fcmovne
out
xor
xchg
push
mov
add
aam
cmp
mov
jmp
push
in
cmpsb
out
and
pop
out
xor
icebp
call
out
outsl
dec
hlt
outsb
stos
cwtl
jg
and
adc
add
dec
cltd
cmp
enter
jle
mov
fdivs
sbb
aaa
enter
and
pop
out
dec
dec
jo
clc
and
scas
scas
imul
add
sbb
loop
jmp
mov
jns
outsb
test
ss
add
testb
cmp
and
adc
cmp
fstps
int
jbe
xchg
popa
xchg
adc
adc
repnz
in
mov
outsl
rcrl
lahf
test
test
bound
xchg
test
bound
jnp
lret
mov
lods
jge
inc
inc
out
imul
addr16
sahf
xor
arpl
adc
sub
mov
stc
pop
mov
movsb
aaa
arpl
sarb
fstpl
shlb
movsb
int
xchg
in
cmpsb
xchg
pop
rcrl
pop
push
pusha
adc
aad
fnstenv
sarl
push
mov
hlt
inc
xchg
hlt
pusha
push
imul
xchg
lea
outsb
test
gs
neg
fadds
and
or
jne
out
cmpsb
lods
cld
inc
es
call
data16
clc
dec
xor
pop
dec
es
daa
xchg
cld
dec
test
sbb
mov
push
out
pop
sub
mov
cmp
icebp
lds
xlat
push
sub
movsl
dec
cmovs
or
pop
lods
pop
mov
es
and
out
mov
dec
fsubrs
lea
dec
adc
call
test
mov
sub
mov
jo
mov
dec
incb
getsec
std
shll
jae
ror
mov
mov
testl
adc
jmp
xchg
cmp
push
fnsave
dec
xor
cltd
mov
mov
xor
lods
popa
lods
bound
inc
aad
push
in
icebp
shl
ror
int3
inc
pop
sub
in
jnp
xor
push
push
xchg
lret
int
movsl
nop
push
das
jo
test
jae
and
add
outsl
int3
test
mov
adc
mov
mov
sub
lock
xlat
jnp
ficoml
aas
fcmovu
dec
shlb
mov
dec
nop
test
push
out
lahf
and
sub
addb
fwait
lock
push
outsl
jmp
mov
xchg
pushf
aaa
pop
add
bound
adc
cmc
lret
fwait
cmpsb
mov
out
xchg
mov
push
fisubs
cmc
mov
std
push
cli
add
in
mov
pop
outsb
push
scas
cmp
fimuls
loop
fcoml
push
adc
fidivl
push
std
sbb
imul
out
mov
mov
test
mov
mov
mov
inc
fdivrl
push
aaa
or
aaa
dec
bound
cmpsb
mov
loope
or
mov
shll
add
mov
std
adc
call
outsl
mov
es
and
fistps
sbb
imulb
push
testb
or
rclb
or
les
xchg
idivl
xlat
stc
xchg
icebp
dec
insl
lods
sbb
out
scas
mov
mov
or
mov
addr16
mov
sbb
jmp
mov
gs
rclb
add
adc
mov
fimull
scas
insl
outsb
add
neg
inc
push
xor
bound
cmp
jmp
int
clc
jmp
shrl
inc
jmp
iret
add
jbe
jbe
test
nop
fnstcw
mov
movsb
xor
xor
inc
pop
ja
enter
rorl
xor
popa
pop
fs
mov
icebp
ds
lahf
aad
jnp
add
lcall
mov
sahf
jae
inc
pushl
add
dec
dec
ss
std
iret
cmp
cld
and
add
repz
add
pusha
sti
ret
lea
sar
call
test
fwait
and
cmp
data16
push
les
nop
cs
jnp
push
cli
xchg
cmp
mov
decl
xchg
sbb
popf
xchg
movsl
mov
leave
iret
jno
sub
pop
mov
add
jo
add
and
insb
out
push
push
push
cmp
test
mov
add
aaa
xchg
or
lahf
lcall
sti
inc
and
adc
imul
insb
out
lods
cmp
enter
add
in
push
inc
lods
xlat
pop
sbb
movsb
push
imul
sub
test
fisubl
aas
or
sbb
xor
pop
jno
fsub
and
aas
loop
xor
lock
aad
mov
mov
dec
dec
hlt
bound
out
push
jmp
inc
stos
shrb
lahf
mov
fisubs
mov
insb
pop
jo
enter
dec
iret
rorb
ljmp
imul
icebp
mov
ljmp
outsl
cmpsb
jmp
outsb
and
repnz
pop
jae
cmp
test
gs
ret
sub
xchg
mov
mov
add
dec
inc
loope
inc
iret
pop
fnstsw
jne
movsl
sbb
lcall
ss
push
enter
push
adc
pop
push
flds
pop
rclb
xor
jbe
test
out
les
cs
lods
cmc
push
in
inc
add
mov
imul
pop
shlb
fs
iret
push
inc
sub
in
iret
mov
push
jmp
or
adc
mov
shrl
mov
jl
das
cmp
daa
push
pop
jns
pop
mov
sbb
filds
lds
loopne
jmp
mov
mov
icebp
mov
push
jg
xor
inc
jne
jl
mov
cmpsb
dec
sub
xchg
sahf
test
and
adc
adc
out
xchg
mov
add
mov
fwait
test
fst
int3
dec
cmp
fwait
pop
repz
in
aas
sbb
movsb
dec
jge
mov
fbld
mov
stc
jmp
or
xor
hlt
into
cwtl
shlb
adc
imul
imul
and
orl
mov
inc
jo
dec
pop
lea
out
aad
out
lock
loopne
mov
decl
inc
stos
dec
jmp
mov
cmpsl
into
pop
testl
in
in
jmp
cwtl
pop
pop
das
sbb
mov
aam
dec
shll
xchg
sub
ret
pop
xchg
sub
ret
aam
imul
push
jb
loop
dec
lea
repnz
inc
shrb
xchg
std
fs
mov
aas
mov
cwtl
ss
sbb
test
fidivrs
mov
fildl
int
push
xchg
mov
inc
cmc
mov
loop
xor
pop
pop
cmpsb
cmp
lret
popf
mov
cmp
xchg
cmp
sbb
repnz
bound
pusha
scas
mov
andb
stos
adc
adc
push
jp
xchg
pop
push
and
lds
xchg
lahf
mov
gs
rcr
pop
jns
shl
xchg
xchg
jmp
dec
xchg
insb
hlt
adc
decl
mulb
ds
pop
out
pop
hlt
sub
shl
lea
sbb
dec
pop
out
fs
cmp
mov
lods
pop
dec
and
sti
cs
test
push
mov
das
mov
dec
mov
mov
push
dec
sub
js
adc
movntq
jmp
je
out
sahf
cmp
push
pop
and
adc
push
or
orl
inc
subb
cmp
and
add
push
lea
popf
jl
mov
adc
jle
stos
push
call
mov
mov
push
inc
lahf
mov
pop
push
mov
cmpsl
in
jb
lcall
in
mov
lock
xchg
dec
andl
add
lds
dec
adc
or
mov
push
ret
xorl
adc
pop
scas
sbb
mov
lea
xchg
sti
scas
push
jmp
sub
xchg
bnd
pusha
add
jne
sbb
cmp
jae
cmp
jns
mov
fwait
add
add
add
es
mov
jmp
fdivrp
and
imul
add
add
icebp
stos
mov
jge
inc
clc
mov
sbb
aad
daa
pop
test
adc
test
inc
inc
adc
dec
xor
lahf
jmp
cmp
and
push
sub
idivb
test
test
movsl
aad
test
aad
scas
out
lock
mov
adc
xor
cwtl
dec
adc
in
iret
push
shrb
andl
repnz
imul
xor
and
outsb
mov
nop
inc
dec
cmpsb
gs
mov
mov
repz
mov
icebp
add
push
jnp
out
aas
jge
mov
pop
dec
movsl
cs
inc
xor
notl
test
pop
lds
out
xor
test
sbb
push
lcall
cmp
sbb
das
rorl
test
lcall
jns,pt
lcall
ja
jmp
frstor
jge
vpshld
or
aas
or
mov
sub
andb
out
xchg
and
xchg
pop
adc
push
xchg
enter
daa
jns
sbb
pop
lea
xor
sub
jbe
dec
mov
jmp
arpl
lret
decb
test
gs
pop
dec
ret
enter
add
test
dec
xchg
xchg
and
dec
imul
cmpsb
loop
sbb
in
gs
xchg
mov
and
inc
pop
out
daa
adc
mov
push
in
std
dec
mov
jno
lock
mov
lret
push
mov
and
and
add
test
call
insb
cmc
add
cmpsb
shrb
sti
fcomi
or
push
xchg
pop
lret
lret
movb
pop
xlat
rcl
ret
and
clc
push
mov
mov
and
sarl
rcl
mov
mov
xorb
inc
in
inc
xor
aas
adc
mov
cmp
dec
bound
and
rolb
inc
lock
nop
in
xrelease
and
lahf
xlat
repz
mov
jb
adc
jg
adc
out
fidivl
aas
cmpsb
cmp
shrb
xlat
rolb
jmp
sbb
push
or
sbb
cmp
and
ret
jne
mov
hlt
dec
xchg
mov
sbb
lahf
push
sbb
flds
cwtl
ljmp
adc
lahf
dec
and
movsl
xchg
cmp
icebp
lret
xor
out
js
lret
mov
mov
les
mov
ds
xor
out
inc
xlat
cmp
sbb
xchg
stos
inc
shlb
inc
fistl
push
aad
popf
fnsave
clc
flds
pop
xor
inc
mov
mov
shlb
out
pop
movsl
push
rcrl
dec
divb
dec
dec
sbb
sub
xchg
xlat
mov
lds
loop
test
lods
and
subb
and
popl
jl
fst
cmp
pop
fadds
sbb
mov
in
pop
jbe
sbb
xchg
or
pop
or
adc
call
jg
push
jl
cmp
imul
push
or
pop
xor
xlat
mov
iret
sbb
sbb
lea
xchg
mov
inc
ret
sbbl
nop
movsl
hlt
lods
pop
push
jae
mov
loop
mov
cmp
pop
repz
mov
mov
add
in
mov
jmp
out
shl
push
mov
data16
jnp
cmpsb
fs
jb
sar
stc
inc
and
sarb
repz
test
push
mov
clc
test
dec
xchg
scas
jg
fimull
fisubl
jno
add
sub
add
cmpsl
leave
push
mov
jge
push
mov
ss
jns
stos
clc
mov
loope
mov
hlt
cmp
and
mov
jno
pop
mov
test
fnstsw
and
mov
cmpsb
pop
je
dec
xchg
iret
xor
pusha
pusha
xchg
or
sbb
outsl
inc
fcmovnbe
js
daa
scas
add
push
push
jo
sbb
aas
cltd
bound
fsubrl
inc
cmp
xor
rol
jae
xor
fs
jmp
pop
xor
notb
pop
pop
xlat
mov
mov
fprem
aaa
add
xchg
add
inc
add
cs
movsb
leave
scas
adc
lret
adc
or
add
jg
pushf
push
mov
aas
cmp
push
mov
test
dec
adc
jae
pop
sti
xor
add
add
aaa
sti
addr16
out
fidivs
push
repnz
add
repz
add
xchg
std
mov
pop
icebp
inc
fdivrl
add
lret
nop
jns
mov
mov
stos
lods
jl
sub
mov
add
cmp
std
loopne,pn
lret
aam
cltd
mov
sbb
sti
cmc
xlat
into
push
mov
sti
stc
repnz
jo
adc
mov
inc
adc
lods
and
add
fs
lret
lock
cmp
xchg
lods
shlb
popa
xor
or
dec
jl
pop
cwtl
faddl
cs
stos
sarl
imul
cmp
cld
inc
int
jg
xchg
jmp
xchg
lods
dec
pop
rol
cltd
mov
mov
sub
daa
or
out
or
adc
mov
mov
push
hlt
xor
inc
je
cmp
push
push
xor
pusha
inc
repnz
lcall
fstps
fbld
daa
in
movsl
jo
inc
pop
in
scas
int3
fbstp
andl
xor
test
push
inc
aam
sub
iret
jle
into
dec
pop
and
xor
ja
pop
jbe
lods
mov
test
mov
jnp
cmp
mov
xor
adc
dec
push
cltd
pop
test
int3
je
lock
xor
and
jmp
mov
pop
lcall
mov
xchg
xor
jo
sahf
mov
stos
cmp
or
pop
jb
repnz
push
lea
out
pop
inc
inc
jp
cmc
and
jmp
xor
inc
push
lahf
mov
add
pop
les
or
je
std
xchg
xchg
mov
mov
cmpl
add
cltd
inc
in
fs
inc
js
lods
andl
cmp
aad
sub
mov
cmp
ud0
sbb
push
mov
in
mov
push
pop
and
mov
jecxz
or
insb
or
xchg
or
gs
aaa
mov
hlt
adc
je
mov
lods
ret
ja
sub
mov
mov
in
repz
sub
sbb
mov
jbe
sbb
mov
xor
stos
mov
jmp
push
xchg
xor
or
sub
push
or
imul
inc
leave
sarl
or
icebp
inc
mov
sbb
fimull
or
scas
dec
rcr
pusha
shrb
aas
push
pop
and
movsb
jl
mov
or
les
jnp
mov
sbb
add
bound
sbb
push
shlb
testl
cwtl
shlb
enter
and
adc
or
jno
xor
add
adc
pop
aas
inc
gs
adc
shl
popf
mov
and
sti
mov
push
sahf
or
shl
rol
enter
ja
es
push
repz
out
out
fcmovnbe
adc
inc
cltd
scas
fldl
test
jns
xor
pop
jp
push
pop
adc
stos
cld
mov
incb
jge
dec
xchg
mov
and
jecxz
push
negl
sub
push
stos
mov
cwtl
xor
add
jae
sbb
xchg
arpl
lods
mov
call
mov
ret
pop
mov
sbb
mov
push
xchg
pop
cmp
cmp
sub
push
mov
xchg
push
sti
mov
push
mov
pop
adc
push
divl
nop
mov
cmp
jmp
insl
sarl
scas
mov
inc
push
pop
lods
insb
xor
rorl
add
jl
dec
stos
cmp
lahf
imul
icebp
mov
push
lock
xlat
fs
add
nop
aaa
mov
cwtl
subb
loopne
loop
aad
and
dec
mov
pop
xchg
mov
fnsave
loop
in
cmp
inc
ss
out
mov
push
scas
xchg
and
scas
push
into
iret
jne
ds
adc
push
shrl
call
aaa
add
xchg
or
cmp
sbb
and
mov
scas
fnsave
cmp
aas
push
sbb
push
push
gs
push
xchg
das
cwtl
mov
xor
sub
mov
adc
leave
mov
sbb
pop
mov
jecxz
shll
dec
jbe
xor
mov
sahf
out
scas
cmpb
movsl
add
add
add
inc
sbb
repz
pop
push
cmp
add
repz
add
xchg
sbb
inc
inc
cmp
div
rclb
mov
fmul
pop
inc
das
add
mov
push
into
mov
aas
repnz
inc
mov
push
xor
mov
loopne
negb
gs
push
cmpsb
push
fldenv
stos
fistl
and
mov
out
jp
adc
sarb
ja
or
xchg
lret
xor
push
mov
in
or
mov
out
add
mov
and
adc
cmp
xor
jecxz
mov
test
mov
sbb
negb
dec
jmp
mov
inc
sbb
cltd
jg
int
adc
jmp
lods
js
jmp
sub
jmp
insb
adc
cmc
out
xor
out
outsb
mov
mull
dec
xor
mov
outsl
mov
lahf
ret
push
sub
imul
add
pop
daa
add
push
mov
cmp
daa
mov
into
outsb
ror
mov
push
test
mov
xchg
add
mov
faddp
int3
loope
lods
out
adc
mov
xchg
outsb
sub
inc
push
in
loop
in
divb
inc
cwtl
or
sub
mov
popa
jp
sbb
mov
and
mov
cmp
and
sahf
inc
fisubs
lcall
outsb
push
or
fstl
cmp
hlt
push
insb
xchg
and
xor
push
pop
add
fildl
push
adc
loopne
decb
jmp
mov
cltd
sub
inc
outsl
pop
inc
pushl
divb
jmp
cmp
pushf
add
loope
bound
push
out
je
add
repz
push
xchg
repnz
push
ja
das
testb
rorb
xchg
fcoms
shlb
xchg
add
push
mov
pop
mov
in
fildl
cmp
cld
jl
dec
call
mov
cmp
aad
int3
mov
fbstp
lea
les
insb
enter
xor
addr16
lods
cli
and
or
pop
mov
lret
test
shlb
popf
rcrb
mov
cmp
cmp
andb
sahf
add
push
push
out
inc
daa
dec
mov
dec
pop
and
lods
adc
lret
inc
mov
push
fidivrs
roll
or
fcmovu
pusha
mov
subb
xor
hlt
cmp
push
xchg
and
jle
stos
jecxz
mov
sub
scas
or
or
pop
jg
pop
mov
push
xchg
in
outsl
push
pusha
cmpsb
pop
call
repnz
mov
xchg
xor
mov
or
adc
cltd
ret
dec
out
test
push
mov
popa
ret
cli
std
int
add
ljmp
inc
push
mov
std
addl
push
jl
dec
jo
repz
inc
rcll
popf
repz
adc
mov
arpl
push
push
dec
mov
inc
mov
push
sbb
adc
mov
pop
add
jg
fimull
shrb
ds
xchg
nop
xor
cwtl
cmpsb
das
mov
mov
and
mov
dec
lea
push
mov
adc
outsb
add
sahf
idivb
pop
in
or
dec
sarb
mov
push
cmp
add
subl
jne
les
pop
test
dec
fnstsw
cmp
push
dec
pushf
xor
loopne
loope
dec
dec
adc
fnstcw
mov
add
mov
mov
js
sub
orl
fildll
movhps
loop
test
shrl
ljmp
pusha
push
ret
je
jecxz
fcompl
xchg
push
cmp
cltd
shll
scas
pop
jg
inc
pusha
xor
push
mov
call
adc
aam
cld
lods
cmp
mov
inc
arpl
add
pop
mov
outsb
jb
push
jmp
iret
sub
js
mov
clc
imull
leave
jge
push
push
loopne
popf
gs
adc
pop
mov
inc
lcall
mov
in
mov
movsb
cmc
xlat
push
ljmp
mov
pop
sar
mov
and
dec
push
xchg
jecxz
sub
push
xor
mov
or
out
dec
pop
adc
add
add
mov
popa
jecxz
lock
add
add
inc
mov
sub
and
mov
cmp
mov
pusha
test
in
orl
enter
push
test
jnp
subl
aam
cld
gs
daa
sbb
xor
fstpt
clc
or
outsl
dec
sbb
fmuls
movsl
shr
jl
ss
dec
mov
push
sub
shll
pop
pop
xor
fsubl
loope
mov
into
adc
flds
out
and
jae
jl
sbb
lds
ds
cli
fisubrl
sub
popf
popa
ljmp
dec
and
mov
in
aam
popa
jp
test
mov
xchg
xor
mov
pushf
imul
test
push
imul
imul
in
jle
inc
imul
dec
fst
fists
sub
dec
push
fmuls
mov
add
cwtl
xlat
daa
rcrl
andb
jbe
in
push
mov
aaa
int3
aas
call
loop
cltd
mov
popf
mov
inc
mov
lds
xor
inc
les
mov
loopne
or
jmp
sbb
cmp
xor
cmc
pmaxsw
ficomps
push
js
xor
into
xchg
test
pop
adcl
mov
mov
bound
cltd
push
imul
jo
repnz
mov
xor
adc
out
ret
xchg
sub
jne
je
cs
xchg
push
mov
adc
test
sub
fnstenv
push
ret
sarb
mov
cmp
xor
imul
lcall
imul
ljmp
adc
lahf
cmp
int3
dec
dec
outsb
mov
jbe
inc
pop
jnp
lahf
sbb
pop
rorb
xchg
fisubs
bound
push
inc
ret
jle
dec
xchg
movsb
push
popf
cmp
popf
xor
cmp
push
jecxz
lret
mov
adc
cmp
jg
pusha
scas
adc
add
into
jle
fnstcw
or
insb
dec
daa
sbb
ss
and
pushf
mov
imul
cmp
jecxz
cwtl
fldl
inc
mov
int
push
sub
int
addr16
bound
add
mov
call
push
test
int
fimull
mov
cmp
das
push
push
or
lods
adc
push
and
pop
mov
js
flds
sbb
pusha
cmp
sub
xchg
sbb
in
jae
aaa
subl
pcmpgtd
sub
movsl
add
xchg
push
lret
enter
or
mov
sub
movsl
rorb
sub
cmp
movsb
mov
imul
sub
or
pop
inc
jnp
adc
add
jnp
sbb
sub
js
xchg
cs
hlt
pop
xor
jle
push
mov
adc
sub
in
jmp
xchg
aad
cwtl
sbb
sbb
clc
and
iret
jae
dec
out
jmp
aaa
adc
sbb
aad
and
clc
push
xor
lock
popf
xor
mov
std
out
rorl
xchg
sbb
jne
inc
cmp
in
lcall
mov
int3
mov
push
xchg
inc
call
jg
inc
inc
imul
cmp
mov
stos
xor
fildll
js
loope
bnd
xor
xchg
push
leave
les
sahf
ficoml
in
repnz
cmp
mov
sbb
push
mov
mov
ljmp
adc
ljmp
jg
out
jb
shlb
sbb
dec
mov
ds
imul
jp
repz
ret
es
jnp
jp
or
and
addr16
imul
or
mov
jecxz
jg
stos
xchg
or
xor
test
mov
cmpsl
aam
insb
repnz
inc
and
dec
lret
scas
fadds
xor
mov
cmp
inc
and
push
adc
sbb
and
popa
xchg
mov
add
mov
jp
push
jae
adc
dec
fscale
cmpsb
and
xchg
push
bound
inc
gs
push
lods
jae
mov
xor
pop
and
xchg
push
or
cmp
mov
pop
and
stc
add
out
lods
cmp
or
add
push
mov
and
dec
jb
je
ds
and
pop
jl
sub
adc
and
test
and
add
add
add
adc
dec
negl
mov
scas
cmp
add
repz
add
inc
bound
cmpsl
pusha
push
das
dec
mov
cltd
xor
inc
ds
lcall
pop
fdivs
iret
out
in
xor
or
sbb
gs
xor
cld
sub
sub
xchg
fisubrl
adc
test
in
outsb
pop
cmp
mov
inc
sahf
lock
neg
dec
sub
mov
mov
dec
add
inc
les
cmp
stos
test
dec
test
push
xchg
push
loop
fdivrl
sub
outsb
das
mov
faddl
push
mull
mov
shr
cwtl
imul
cmc
lods
cld
fldt
xchg
dec
das
fcmovbe
aas
dec
jle
add
pop
clc
mov
mov
sbb
rcrb
aas
mov
xchg
mov
decl
xchg
cli
iret
xchg
cmp
stos
adc
xchg
movsl
test
popa
or
adc
cmp
leave
mov
gs
fwait
sbb
jns
ffreep
in
pop
dec
add
out
test
mov
mov
mov
aas
mov
gs
add
pop
pop
and
es
ds
je
aam
sbb
push
lods
cli
jns
test
test
jbe
inc
mov
lahf
orl
mov
jge
in
ja
lock
mov
shl
push
pushw
cmp
ja
das
push
int
jbe
mov
aas
cli
adcl
std
dec
xor
scas
sarl
sbb
test
ficomps
cmc
inc
mov
add
data16
xchg
jl
adc
sbb
jecxz
cwtl
orb
pusha
ficompl
sub
sahf
test
cwtl
ficoml
or
sbb
mov
lahf
out
push
and
sub
out
call
int3
lahf
movsb
xor
aam
ja
bound
pop
mov
dec
dec
jb
inc
sub
sbb
sbb
push
jno
shrl
inc
shrl
pop
mov
sahf
push
mov
mov
pop
jmp
or
sarl
fcomip
clc
push
add
mov
adc
xchg
add
loopne
xor
pop
in
mov
stos
cmp
addr16
jge
fidivl
xlat
dec
mov
mov
inc
pop
dec
cmpb
icebp
cltd
cmp
je
dec
cs
xor
fidivrl
cli
and
mov
cmpsb
aad
fstpt
adcb
xlat
push
jae
mov
fldenv
inc
orl
xor
mov
xchg
les
outsb
daa
pop
std
stos
mov
push
imull
into
push
dec
jo
mov
and
idivb
dec
outsl
xchg
out
jge
cmp
ficoms
nop
jle
or
iret
fbstp
mov
adc
leave
lret
pop
inc
rol
call
sbb
lock
xchg
sti
insb
add
push
mov
pushf
pop
aas
lods
inc
imul
in
sub
jns
rcll
outsb
in
and
inc
into
pop
int3
cmp
pop
xchg
jnp
dec
pop
pop
pop
stos
out
ret
mov
mov
popa
lods
push
sub
nop
pop
sub
les
and
lock
lcall
test
jg
dec
lcall
in
push
mov
cmp
mov
mov
shlb
arpl
imul
inc
fadd
and
sub
adc
cld
call
imul
pop
je
bound
add
mov
into
pop
popa
out
in
insl
sub
xchg
repnz
repnz
pusha
pop
push
cwtl
add
jl
add
or
jp
inc
lret
and
xchg
out
nop
mov
inc
arpl
je
and
orl
dec
xor
aad
roll
ja
jo
mov
mov
mov
fcmovu
outsl
repz
inc
ja
jge
xchg
mov
mov
jl
inc
popf
adc
push
rcr
dec
xchg
movsl
cs
push
test
mov
iret
or
mov
std
pop
pop
pop
leave
imul
fnstenv
cmpsb
cmp
cmp
mov
scas
pop
loop
es
xor
sub
daa
xlat
push
fisubrl
jle
arpl
jl
push
ret
ret
sbb
mov
xor
or
mov
push
test
lock
daa
loop
xchg
dec
icebp
or
add
add
in
mov
fdivp
cld
ds
daa
cmp
aad
dec
inc
add
repz
add
loop
fistpll
fldcw
dec
lahf
scas
fcoms
and
jne
fistps
adc
push
in
push
cs
mov
mov
les
jmp
into
cwtl
insl
ret
jg
sbb
add
pop
xchg
loope
cwtl
data16
dec
popa
xchg
pop
mov
push
scas
cmpsb
sub
push
fs
clc
add
push
mov
inc
add
jg
lods
push
clc
sub
out
mov
cmp
jae
idivl
jae
push
xor
xchg
mov
inc
and
fisttpll
cmp
cmpsl
pop
push
frstor
pop
xlat
mov
inc
push
xor
jns
xchg
pop
push
sbb
sarl
push
cmpsb
neg
lock
hlt
xchg
lret
xchg
and
fisttpl
sbb
xchg
cmpsl
and
pop
stos
pop
inc
in
outsb
add
test
iret
stos
lock
xchg
push
insb
maskmovq
testl
xor
pop
add
sbb
ffreep
sahf
push
jle
jl
xchg
leave
out
scas
add
call
xchg
or
pop
dec
loop
jp
into
test
sahf
sbb
lods
jae
outsb
loopne
and
sbb
clc
push
xchg
jmp
xchg
push
cmp
pop
dec
cmp
jmp
xchg
sub
sub
jmp
xor
data16
dec
cmp
les
inc
xchg
or
mov
cli
xor
ljmp
dec
mov
in
shlb
push
xchg
repnz
mov
and
and
out
sub
loopne
or
add
xchg
or
cmp
pop
mov
out
pop
sbb
push
dec
enter
dec
cmp
data16
test
or
dec
enter
xchg
add
enter
inc
or
sub
or
cwtl
xchg
repnz
sbb
sti
out
iret
mov
sti
cmp
push
inc
mov
out
jecxz
dec
xor
xchg
inc
xchg
sub
add
mov
add
push
loop
xor
stc
mov
pusha
push
fsubr
rcrl
sub
inc
xor
dec
jb
and
movsb
mov
xchg
cmpsb
jle
sub
mov
mov
push
jno
addr16
daa
jge
mov
mov
popa
aad
cmp
test
mov
pop
mov
ljmp
test
imul
lea
mov
xor
or
fimuls
jnp
push
ja
adc
jns
into
or
sbb
orl
mov
not
cmp
mov
mov
jae
adc
aaa
and
jmp
iret
outsl
lock
xchg
in
mov
and
insb
push
sub
inc
sub
icebp
xchg
sub
add
xor
inc
ficompl
push
imul
scas
flds
pop
cwtl
inc
out
jns
mov
mov
push
cmpl
mov
jge
add
fdivl
fnstenv
sub
ss
hlt
inc
outsb
cld
push
cmp
adc
outsb
push
rorb
lahf
pop
sti
sar
repz
mov
rorb
inc
jg
dec
mov
add
repz
pop
adc
aad
xor
cmp
out
std
xorl
adc
mov
test
mov
mov
pop
push
out
dec
and
out
rcl
add
hlt
clc
les
in
outsb
insb
jnp
xchg
xchg
push
xor
mov
les
mov
lcall
aas
xor
adc
add
lcall
xor
pop
xchg
mov
test
jo
add
cmc
push
scas
lock
std
adc
mov
xor
xchg
mov
lea
xor
push
ret
shl
pusha
jne
addr16
jg
shlb
clc
inc
cmpsl
ret
cmp
aaa
stos
and
push
stc
adc
inc
inc
das
cmp
inc
or
xchg
fiaddl
pop
aad
jno
xchg
jns
pusha
pop
jp
lret
mov
outsl
cmp
inc
lock
sbb
or
sbb
in
lret
mov
dec
jb
mov
xchg
cmp
mov
fimull
in
addb
xchg
scas
mov
jns
mov
call
inc
loopne
lock
roll
xchg
pop
mov
jo,pt
lahf
insb
ss
add
add
add
xor
jg
sbbl
inc
dec
add
repz
add
jmp
sub
int
imul
xchg
int3
ljmp
aam
pop
xor
sbb
ficoml
loop
outsb
std
or
or
imul
xchg
adc
push
and
xor
scas
rcrl
cmp
js
mov
add
mov
jmp
decb
push
lea
ds
repnz
les
mov
outsb
inc
int
push
and
iret
nop
cs
add
add
clc
subb
sbb
out
imul
xor
in
xor
pop
sahf
sbb
mov
shlb
lea
or
idivb
insb
cmp
add
jle
cmp
push
mov
sub
popaw
xor
push
or
adc
and
popl
insl
add
les
pop
mov
add
shrb
mov
pop
cmpsl
into
into
aaa
daa
add
jnp
lods
push
pop
mov
push
inc
xchg
jle
mov
ds
dec
popf
and
mov
and
ret
mov
jp
mov
xor
orb
xor
or
inc
aas
xor
jmp
gs
dec
mov
mov
test
sbb
xchg
jl
push
jmp
lock
and
push
xchg
mov
sbb
fistps
xchg
cmp
push
addb
sub
jg
ret
loopne
clc
imul
inc
adc
test
es
push
aaa
fadds
sbb
sub
mov
js
push
mov
ret
or
pop
jle
and
jle
or
fcmove
loop
icebp
cmp
int
xor
lea
xor
aaa
mov
inc
mov
loope
iret
shlb
into
enter
pushf
jns
pop
sahf
fdiv
scas
in
clc
mov
in
mov
in
and
adc
cs
adc
test
ja
mov
add
roll
push
inc
sbb
mov
sub
mov
push
sub
test
subb
inc
sub
pushf
lcall
adc
mov
jmp
inc
push
ret
out
jbe
push
leave
daa
scas
xchg
mov
pop
xchg
loop
push
loope
mov
ja
push
out
push
mov
add
loope
dec
push
loope
xchg
pop
sub
mov
test
cmpl
dec
add
test
test
mov
cmc
out
test
push
jb
loopne
bound
test
ret
out
je
xchg
ss
jne
fimull
imul
and
jp
test
outsb
shlb
sbb
out
mov
or
enter
cmp
sub
and
outsl
xchg
xor
mull
scas
int3
jbe
aad
fisubs
cmpsb
sbb
push
mov
pop
test
push
popf
divl
cs
mov
lock
ja
stos
mov
pop
test
test
mov
push
cmp
sahf
leave
mov
imul
ja
outsl
leave
inc
out
icebp
int3
adc
pop
leave
fsubp
xchg
xlat
lret
aad
or
and
jge
xchg
xchg
inc
lods
mov
add
setno
jae
lret
mov
enter
jl
pop
mov
outsb
out
into
dec
dec
add
fldenv
xor
xchg
loopne
aas
mov
test
scas
cmp
or
adc
dec
adc
mov
lcall
xchg
xchg
pop
cld
ret
sub
lds
jo
in
mov
movsl
in
outsb
inc
call
adc
mov
mov
sbb
dec
pop
cmpsl
mov
insl
out
and
pusha
out
inc
aad
and
mov
fcomp
push
stos
add
movsl
push
std
cmp
pop
sbb
addb
test
adc
push
pop
sub
or
pop
or
pushf
ficoms
or
adc
dec
or
mov
cli
pop
dec
lahf
and
stc
or
dec
pop
in
dec
addr16
fsubl
adc
aad
sub
xor
pop
lds
xchg
xor
je,pn
test
xorl
lea
jne
repnz
sar
xchg
xchg
add
inc
inc
push
cmpb
or
inc
jnp
ret
push
push
xor
sti
iret
inc
cwtl
adc
add
loop
add
mov
xchg
stos
pushf
xor
add
repz
add
cld
xor
lock
xor
jmp
mov
repz
loop
mov
dec
push
lea
mov
sub
loope
add
jp
mov
fs
mov
orb
lods
push
xor
jo
aam
rcrb
xchg
subl
mov
mov
and
jns
cmp
pop
or
pop
cmpsl
add
rolb
je
and
jge
stos
sarl
loope
mov
dec
in
test
fcoms
scas
cmpsb
insb
aad
cmpl
out
test
push
inc
leave
adc
dec
inc
stos
mov
xchg
and
or
daa
repnz
dec
mov
sbb
pop
fisubl
cli
call
mov
pop
mov
adc
mov
out
adc
jae
adc
mov
push
lret
xor
filds
cs
sbb
popf
mov
mov
out
daa
pop
and
lret
repnz
rcll
shll
jbe
sbb
test
sahf
inc
jmp
jnp
cmpsb
ret
testb
iret
mov
mov
in
pop
scas
pushf
mov
insb
imul
fsubrl
xchg
insl
xor
push
xor
sar
adc
jne
push
into
icebp
fsubs
call
inc
or
lock
int3
icebp
into
loope
nop
ljmp
lock
or
imul
or
sahf
sub
sbb
xchg
mov
or
mov
xor
es
in
repnz
xchg
sub
push
lret
mov
or
jecxz
jb
lods
notl
loopne
sbb
xchg
mov
jae
and
push
rcl
push
movsl
xor
mov
push
jae
xor
xor
add
std
mov
xor
ja
xor
mov
movsl
les
inc
cmp
sbb
test
inc
pop
std
adc
pusha
mov
cmp
fwait
xchg
ja
jecxz
lret
pop
jb
lds
xchg
loop
lock
add
adc
pop
cmp
stc
sbb
cmpsb
mov
mov
jo
inc
sub
icebp
xor
int
xor
in
mov
pop
xchg
sub
xchg
xor
into
fimull
int
mov
cmpl
push
mov
mov
nop
inc
movsb
jg
jo
je
test
pop
xchg
daa
ret
push
jnp
sbb
mov
sub
fstps
repz
fwait
cs
push
sub
ss
xlat
jns
popf
push
out
or
xor
jp
inc
dec
mov
add
call
clc
loope
xchg
cmp
inc
push
xor
adc
repnz
popf
fisttps
and
mov
incb
pop
xchg
inc
movsl
les
push
mov
adc
stos
add
fsubp
in
add
ds
push
out
sbb
ja
loope
dec
adc
inc
pop
repnz
out
mov
pop
inc
jmp
stos
cmp
jns
orl
jne
sarb
insl
jns
aas
aam
jae
jecxz
ret
adc
push
lret
orl
cmp
scas
mov
mov
cmpsl
clc
scas
jne
bound
pop
pop
ljmp
sbb
aas
push
insb
dec
sub
pop
xor
add
mov
pop
mov
and
add
push
gs
cmpsb
push
pop
dec
sbb
pusha
je
test
xchg
jmp
nop
lods
aaa
aad
mov
add
cmp
test
nop
pop
das
mov
push
and
loopne
daa
inc
add
or
sub
lea
xor
fwait
cwtl
jecxz
test
inc
in
fldl
lea
and
adc
and
add
enter
repnz
dec
xchg
pop
stc
lods
fidivl
add
arpl
rol
fs
xchg
int
daa
xchg
test
inc
dec
jg
int
xor
xor
inc
and
fidivrs
xor
fsubrs
clc
ret
rorb
add
sahf
hlt
ja
cmp
sbb
inc
mov
dec
out
dec
loope
mov
dec
es
inc
es
cmp
inc
or
fmulp
mov
mov
pop
pushw
popf
mov
movsb
cmp
sarb
pop
out
loop
jg
xor
add
pop
enter
mov
add
loope
loope
fistpll
adcl
xchg
inc
pusha
xor
repz
add
mov
pop
dec
sub
movsl
xor
movsl
jns
mov
and
mov
or
mov
pop
in
je
dec
inc
sbb
rorl
fsubrs
js
mov
push
jo
aad
shll
dec
xor
jb
das
cmpsb
pop
jnp
cmp
mov
out
pop
outsl
mov
dec
xor
mov
ret
or
xor
push
pop
lea
andb
jae
xchg
sbb
pop
roll
call
shlb
and
jmp
fildl
mov
ljmp
cmp
fidivl
movsl
scas
mov
pop
stos
mov
lds
fiaddl
call
mov
or
adc
js
and
push
sub
out
push
std
iret
lretw
adc
clc
cltd
dec
fdivrs
push
pop
adc
arpl
jge
lcall
mov
and
fs
adc
imul
fxch
loop
inc
xchg
pop
push
dec
es
cmpsb
mov
or
pop
jne
arpl
push
repz
sbb
aam
inc
test
fsubl
sub
imul
xor
lds
int3
dec
fidivs
mov
pop
pop
cmp
aad
outsb
jmp
pop
std
add
data16
push
xor
outsb
fisubs
test
pop
sbb
mov
hlt
or
popf
mov
pop
cmp
pop
call
test
pop
mov
std
ljmp
test
jno
jmp
daa
push
and
hlt
mov
cmp
push
movsl
inc
or
ja
into
jb
ds
mov
test
push
xlat
test
aas
pusha
add
dec
call
std
aaa
sub
mov
or
stos
mov
dec
mov
loope
out
outsb
test
mov
outsb
sbb
les
gs
cltd
sbb
mov
call
push
cwtl
rorl
nop
add
xchg
mov
adc
popf
or
add
cli
mov
jg
push
adc
outsl
xchg
pushf
in
mov
jb
jno
inc
xchg
dec
movsb
ret
mov
cmp
insl
stc
inc
sbb
xlat
out
cmp
and
decl
jno
mov
push
adc
xorl
sbb
mov
push
test
mov
push
jge
pop
scas
pushf
subl
mov
push
mov
je
pop
mov
push
orb
adcb
inc
and
in
aam
mov
popa
shlb
fisttpl
in
fcmovbe
and
push
push
dec
sub
bound
xrelease
or
cmp
and
bound
lret
fsub
test
call
mov
xor
sbb
in
mov
mov
sbb
daa
iret
cmpsb
dec
ror
imul
mov
dec
sbb
ds
jge
jmp
push
jge
push
sbb
repz
dec
outsb
sub
sarb
ficoms
ja
in
hlt
xchg
jne
ljmp
and
into
lahf
or
dec
pop
hlt
arpl
jae
pop
lahf
sbbb
jns
enter
adc
pop
vpavgb
lahf
mov
popf
pusha
xchg
mov
push
scas
mov
mov
mov
xlat
imul
xor
aad
mov
das
dec
push
cs
push
ret
sub
mov
mov
aam
xchg
add
and
cmp
mov
pop
in
lea
or
daa
jl
ja
gs
fnstcw
dec
gs
insb
int
ficompl
repz
in
leave
icebp
in
ret
jecxz
xor
push
popa
mov
jle
fildll
aaa
mov
lcall
incb
js
sti
lahf
sbb
or
loopne
imul
adc
icebp
ret
into
insb
pop
pop
jae
outsl
les
or
dec
xor
inc
xor
pop
rolb
popf
inc
pop
loope
jno
pop
cmpsl
xchg
leave
aas
push
sbb
mov
adc
leave
fs
ror
sbb
aas
and
out
and
cld
cmpsl
add
xor
loope
xor
aas
int3
adc
push
pop
cltd
bound
jle
hlt
cmp
pop
sbb
mov
mov
ret
xor
int
xor
sub
mov
repnz
mov
loop
add
add
add
test
xchg
and
cmp
lahf
pop
lret
pop
add
repz
add
mov
inc
fcoms
sbb
mov
pop
outsb
xchg
test
pop
mov
ja
xchg
enter
fucomp
or
xor
mov
mov
fwait
mov
addl
mov
push
mov
add
sub
sti
cwtl
fdivs
mov
sbb
bound
dec
fwait
mov
jle
roll
popa
pop
movsl
cmp
mov
cwtl
std
cmp
push
inc
imul
inc
dec
cmp
cltd
mov
ficomps
test
into
aam
idivl
push
fucomp
iret
jo
jecxz
sti
mov
aad
outsl
mov
add
push
leave
mov
mov
fidivs
inc
mov
sub
mov
inc
cmpl
fsubl
repnz
adc
sub
aam
in
das
imul
or
stc
jo
sub
mov
sarb
mov
add
inc
pop
inc
sbb
pusha
divl
mov
xor
fs
xor
xchg
std
mov
out
pop
xor
xor
jp
xor
movsb
jae
dec
or
les
dec
xchg
ss
rcr
js
sub
insl
insl
pop
stos
mov
scas
cmc
or
mov
testl
notl
sbb
mov
dec
mov
mov
dec
into
in
in
mov
jne
jo
aam
xor
sub
or
pop
and
lds
xchg
scas
neg
jge
cltd
cmp
cs
insb
das
mov
mov
push
iret
sarl
lahf
out
sahf
mov
popa
fildl
mov
or
pusha
lcall
inc
int
push
jns
jns
jne
into
inc
xchg
fldcw
xchg
ret
cmpb
enter
xchg
fisttpll
shrl
cwtl
pusha
shll
mov
into
mov
push
outsb
gs
xchg
pop
testl
lods
dec
cli
dec
jno
leave
jbe
dec
cmp
imul
add
aad
aam
pop
mov
testb
fistl
shlb
jno
cmc
iret
push
mov
mov
jnp
imul
inc
js
cmp
sarb
sub
mov
xchg
adc
and
sub
or
aaa
mov
outsb
push
dec
xlat
stos
movsl
incl
adc
repz
or
aas
push
repnz
sbb
sub
mov
adc
xlat
and
inc
jp
fmuls
mov
push
cmp
mov
shll
sub
sarl
rorb
aas
outsl
cltd
aad
out
data16
popf
int
push
adc
call
cs
fmul
cmpsl
aaa
int3
hlt
dec
dec
dec
shl
xchg
repz
or
pusha
sbb
faddl
xchg
and
ja
xchg
std
aaa
cmpsb
enter
mov
xchg
lea
sarb
into
jl
mov
stc
cmpsl
bound
add
out
pop
testl
jo
imul
pop
imul
dec
outsl
int
xlat
adc
cmp
inc
sbb
and
and
sub
mov
add
add
mov
stos
cmp
cli
dec
loop
jp
push
dec
arpl
stos
mull
aas
call
cmpsb
repz
rcrl
push
sub
in
mov
sbb
inc
fldenv
push
sub
je
leave
mov
in
sbb
xchg
cltd
or
cmpl
xor
dec
outsb
mov
push
inc
add
jl
das
xchg
xor
mov
pop
push
andb
cmpsb
xchg
cmp
jle
mov
jg
outsl
popf
pusha
push
jae
push
mov
movsb
push
mov
cltd
lds
fwait
mov
mov
push
mov
into
imulb
mov
mov
lods
movsl
push
cmp
cmpsb
bound
xchg
jbe
pop
and
add
testl
mov
xchg
fldl
or
pop
jmp
push
inc
adcl
dec
js
clc
in
stos
punpckhdq
hlt
jle
cmp
jg
cmpb
or
out
xorl
cmp
leave
add
and
in
stc
push
xchg
lret
cli
outsl
add
mov
mov
and
pop
cmp
sub
mov
das
aaa
pop
loopne
in
call
add
add
cmp
loope
mov
pop
iret
or
add
add
arpl
into
sbb
scas
fwait
mov
ret
stos
in
inc
cmp
push
pusha
or
subb
out
mov
les
addr16
stos
in
or
lods
jecxz
outsb
cs
loop
out
mov
push
add
sub
test
iret
add
in
cli
aaa
mov
push
leave
fdivrl
or
dec
sub
cmp
rolb
xor
add
adc
xor
dec
std
push
mov
push
and
in
test
xlat
icebp
inc
adc
lret
jae
movsb
push
lods
mov
sub
arpl
xchg
ret
dec
in
mov
jp
sub
scas
loope
and
adc
jg
jnp
sub
sub
leave
jns
mov
cwtl
loopne
xchg
cli
sarl
inc
outsb
outsb
aas
cmpsb
adc
push
ror
outsl
das
jle
clc
popl
pop
sub
inc
repz
jl
jmp
fs
xor
imul
roll
add
idiv
add
ds
std
int3
or
ljmp
sahf
inc
in
push
xchg
in
cmp
cmp
xor
push
data16
mov
incl
stc
enter
mov
ss
cs
pop
loope
orb
and
mulb
mov
dec
xchg
rorb
mov
inc
addr16
pop
pop
jmp
push
xor
xchg
lcall
mov
or
mov
fcoml
popf
pushf
aaa
pop
add
rcrl
in
jge
mov
aam
push
lahf
xchg
cmp
sbb
into
mov
insb
int3
aam
mov
pop
in
mov
aaa
cli
mov
pop
loope
outsl
js
push
sbb
or
xchg
scas
test
ret
jns
lea
push
add
xchg
into
popf
test
insb
imul
or
add
lods
or
cld
mov
xlat
adc
adc
xor
sbb
aaa
jmp
and
test
int
es
xor
jne
stos
gs
stc
sbb
push
push
stc
cs
emms
xchg
and
inc
cltd
int3
sbb
pop
xchg
push
jae
cld
ss
fcompl
jnp
adc
daa
pop
dec
mov
cli
xor
sarb
outsl
dec
sub
notl
push
rcll
pop
lods
sbb
pop
cld
andl
shll
add
arpl
loope
test
aad
mov
xchg
adc
lds
jecxz
sub
lcall
mov
jp
add
mov
push
insl
push
fs
lea
jmp
pop
dec
rcll
jno
dec
pop
pop
iret
movsb
pop
outsb
cld
cmp
arpl
mov
iret
and
jns
inc
or
pop
mov
fildl
xchg
scas
push
fistpll
and
pop
ret
mov
xchg
lret
test
scas
or
test
sub
fnsave
pop
sub
lds
push
lret
jle
ss
xchg
je
movsb
xlat
fwait
sbb
sarl
sub
mov
cltd
push
pusha
int
and
xchg
xchg
adc
dec
shl
xchg
xor
adc
mov
push
and
lock
out
arpl
icebp
into
out
add
ret
mov
dec
es
fidivl
stos
scas
add
fs
push
test
push
pop
lahf
dec
xor
jno
jl
outsb
and
mov
push
ja
inc
icebp
add
push
leave
adc
enter
mov
imul
and
adcb
incl
inc
das
inc
mov
add
xchg
sbb
fwait
testb
xchg
fwait
mov
xchg
int3
ss
mov
ljmp
xor
das
dec
call
add
mov
jmp
and
dec
and
xor
in
fcmovnb
mov
add
mov
sub
inc
enter
or
jl
rclb
jge
and
jmp
xor
stos
stos
xchg
mov
in
xchg
or
fsubl
cwtl
aad
std
lahf
and
lock
push
xchg
sub
mov
out
iret
fcomps
mov
or
adc
jo
adc
sub
or
dec
jmp
xchg
insb
dec
adc
jbe
xor
and
stc
dec
icebp
pop
push
sahf
lahf
inc
jge
push
in
jae
xchg
out
push
inc
or
add
add
jg
mov
jp
ret
sbb
add
repz
add
ds
xor
jg
xor
push
push
sbb
mov
mov
push
mov
push
ss
stc
sbb
push
jno
dec
and
mov
stos
ficompl
loop
mov
sbb
dec
mov
imul
pop
roll
mov
repnz
push
mov
mov
xchg
push
aaa
push
xchg
inc
dec
mov
dec
clc
or
pop
icebp
inc
cmp
sti
adc
pop
fiadds
push
jmp
adc
dec
and
mov
pop
inc
test
push
cld
pop
arpl
and
out
xlat
sub
repnz
out
and
jbe
xor
aam
cmp
pop
push
out
jne
inc
mov
fcmovu
cmc
cltd
stos
jg
pop
mov
inc
push
adc
adc
ds
jmp
pop
repnz
mov
add
pop
sti
aad
shll
pop
mov
xor
jle
loop
divl
outsb
push
fwait
inc
jg
or
fbld
outsl
shll
cmpsl
out
and
jmp
in
stc
xchg
inc
or
cmpsl
cld
imul
stos
test
movsl
int3
mov
xchg
loopne
sbb
jns
addr16
jae
sub
aad
mov
cmpsl
aad
shr
inc
jno
xchg
xchg
adc
fsts
dec
ret
jae
dec
xchg
ja
cmpsb
mov
dec
ljmp
hlt
popa
int
cmc
nop
lahf
outsl
mov
xor
xor
addl
add
pop
push
lock
lods
push
push
mov
mov
or
xor
mov
mov
std
mov
in
adc
fmuls
andb
lods
repnz
cmp
xlat
in
pusha
popa
mov
out
sbb
adc
xor
jp
xchg
je
mov
xchg
cmp
dec
popf
aam
ja
sbb
das
jnp
push
inc
aaa
xchg
and
in
std
cmp
pop
sbb
aam
or
mov
cmp
push
cld
sub
ds
sbb
test
sub
js
pop
jp
push
fnstsw
pop
cwtl
xchg
cmpsl
ficoms
or
push
add
movsb
add
mov
push
aam
sub
mov
sub
lds
les
jb
les
rcrb
and
adc
lahf
bswap
int3
mov
dec
flds
mov
rcrl
mov
lret
cmp
es
push
je
imul
xor
mov
xchg
call
sbb
mov
xchg
xor
sub
clc
pop
cld
pushf
push
jg
inc
test
pop
jo
pop
sub
sti
and
addr16
cmc
mov
lea
sbb
ret
imul
gs
pop
and
lods
mov
ret
arpl
clc
xor
lods
mov
stc
es
cs
scas
add
dec
xchg
repnz
sbb
andb
sub
mov
sbb
push
or
into
iret
push
sbb
pop
mov
adc
add
into
push
dec
mov
insb
cmp
popa
cmp
xor
fstpt
das
mov
rcr
loope
mov
inc
stc
xor
xchg
roll
stos
xor
mov
and
dec
movb
xchg
ficoml
mov
pop
into
ror
and
pop
xor
adc
fldt
and
in
jmp
inc
in
adc
adc
pusha
popf
jb
dec
mov
fisubl
and
xor
fwait
loop
lahf
pop
jecxz
cmp
mov
pop
cmp
loope
mov
pop
std
out
stc
pinsrw
loopne
rol
inc
ret
adc
fcmovnu
arpl
pusha
data16
mov
aas
arpl
das
test
xlat
push
fiaddl
sti
ret
outsl
dec
outsb
ljmp
or
aas
push
mov
cs
adc
cmc
mov
popf
scas
cli
sbb
jl
jmp
inc
iret
and
popa
cmpsl
rol
push
hlt
gs
mov
insl
in
aad
fcmovu
or
mov
ret
shlb
mov
aas
inc
and
repnz
and
push
sbb
lock
mov
mov
out
stc
pop
mov
das
ret
or
js
xchg
rclb
stc
mov
jns
mov
inc
fmul
mov
dec
leave
testb
sbb
outsl
lds
lret
ret
mov
xor
xchg
and
push
sub
push
xor
loopne
or
add
add
push
push
cmp
cmp
push
pop
mov
lahf
cmp
addr16
push
add
sub
bound
mov
inc
mov
mov
rorb
mov
mov
jg
xor
or
cmp
insb
jge
aas
fcompl
in
addr16
mul
add
aam
pop
and
insl
outsl
insb
daa
xlat
insb
add
cmp
fnsave
pop
popf
pushf
jae
pop
outsb
sub
lahf
push
jg
sub
sub
cltd
or
test
dec
adc
addr16
adc
add
out
pop
mov
adc
aaa
mull
test
shrl
xchg
adc
mov
mov
fninit
xchg
xor
and
sbb
and
jg
iret
aas
sub
stc
nop
mov
mulb
aas
imul
in
mov
xchg
add
fcomp
in
add
push
push
popf
xor
or
inc
ja
jle
std
xlat
lods
fs
cmpsb
lcall
adc
fisttps
and
adc
fs
cmc
hlt
divl
aam
mov
push
xlat
in
pop
fucom
lret
sub
imull
fwait
outsb
ret
jl
sbb
mov
jne
dec
loopne
js
aad
or
fs
xchg
adc
xchg
mov
push
add
or
jne
icebp
inc
test
or
lret
pop
outsb
ret
sub
and
lret
mov
cmp
pop
js
jl
fidivs
fisttps
mov
jl
inc
jg,pt
fsubs
mov
repnz
add
int3
and
test
test
mov
pop
incb
jle
je
shlb
iret
adc
cs
leave
int
xor
inc
jg
test
xor
inc
movsb
mov
sbb
sahf
inc
loopne
inc
sbb
out
fs
mov
jg
xor
pop
fs
rolb
jb
mov
mov
fcoms
cmp
jge
ficoml
jne
fwait
sahf
pop
loop
jl
jmp
mov
popf
cmp
cmp
int
lock
mov
jbe
dec
popa
imul
mov
fadds
sub
test
add
and
adc
cmpsb
pop
ja
cmp
fsubrs
loop
jne,pn
xchg
dec
sub
or
dec
daa
xor
inc
pop
cmpsl
imul
sbb
and
jge
cmc
aaa
aaa
addl
pop
incb
jl
dec
mov
in
cltd
jo
mov
int
push
fsubl
cmc
stos
cltd
cmpsb
jne
sbb
cmpb
mov
fstps
mov
sarb
push
and
mov
in
ror
das
iret
sbb
cmp
ljmp
lods
shr
movb
pop
shrl
cmp
mov
cmp
in
cs
jb
loopne
inc
js
xor
out
push
sbb
adc
sub
add
addr16
xchg
jb
cmpsl
into
mov
push
mov
xchg
aas
push
or
dec
xchg
lds
icebp
les
inc
cli
or
cmp
jle
rorl
xchg
jge
xchg
rcrl
pop
add
pop
subb
jnp
mov
clc
insb
adc
andb
ljmp
push
mov
jnp
test
jne
es
xchg
shlb
inc
inc
push
pop
mov
jnp
dec
or
pusha
jne
mov
add
dec
pusha
inc
test
icebp
or
mov
sub
cmp
pop
jmp
popa
mov
imul
jecxz
hlt
dec
xor
push
repnz
mov
loopne
data16
loope
cltd
push
in
push
outsl
jl
pushf
sahf
push
mov
loope
xor
lods
cltd
mov
cmp
das
not
adc
xchg
mov
sarb
cltd
dec
jnp
repz
out
sbb
xchg
lcall
xchg
cld
cld
mov
push
cmpsl
icebp
sub
sbb
mov
test
mov
inc
sub
push
jmp
pop
leave
jge
stos
data16
mov
aaa
dec
sbb
xchg
push
rorl
lahf
push
in
cs
std
iret
dec
adc
and
fildll
inc
daa
inc
mov
cltd
cmc
inc
dec
sbb
xchg
shr
xchg
jl
jns
sub
roll
mov
shl
out
sub
mov
out
dec
fs
and
inc
sbb
xor
adc
xor
or
into
enter
and
cli
das
ds
ret
cmp
repnz
mov
cmpsl
call
popa
ljmp
test
mov
push
jbe
push
or
movsl
cmp
call
pop
mov
add
sub
jg
test
out
sbbb
stos
repnz
add
repz
add
cmp
imul
cli
inc
outsb
imul
in
js
xchg
les
je
mov
mov
arpl
push
or
mov
lods
stos
xor
lds
push
faddl
mov
fbstp
inc
arpl
mov
fs
cmc
sbb
outsl
sarl
sbb
sbb
sub
xchg
xor
mov
outsb
daa
xchg
inc
into
test
cmp
dec
dec
push
stos
dec
or
gs
xor
lods
dec
jge
shll
mov
xor
pop
test
test
dec
cmp
insl
pusha
insb
movsb
xor
pop
cmp
pop
dec
jmp
sub
orb
jo
cmp
pop
dec
pusha
cmp
cwtl
push
jne
add
movsb
fmuls
jmp
jge
pop
orb
bsf
mov
jg
sub
push
adc
pop
jmp
test
dec
or
jno
mov
inc
das
jb
jecxz
lock
cmp
faddl
cmova
fs
roll
add
ss
fistpll
sbb
pop
jecxz
adc
ljmp
mov
fadd
shlb
dec
pop
mov
fcoml
lret
mov
and
jg
sarb
inc
sbb
sub
data16
inc
fstl
push
sub
xchg
aaa
pop
xchg
int3
dec
test
fprem1
push
ljmp
in
in
jno
jb
je
sbb
jmp
cmp
xor
push
sbbl
xchg
push
or
addr16
pop
jae
or
lret
xchg
lods
mov
xor
jmp
arpl
xor
adc
push
xchg
and
or
xor
adc
or
pusha
out
pusha
jp
dec
add
push
sub
jno
sub
imul
int3
push
jle
pop
add
call
jecxz
sub
mov
lahf
bound
push
jecxz
sbb
ljmp
fidivrl
divl
fcomps
lods
inc
pop
push
pop
xchg
into
pop
mov
pop
std
dec
insb
sahf
dec
iret
rcrb
xor
les
lahf
sbb
dec
scas
push
psubusw
jne
icebp
cli
sbb
cmp
dec
pop
loope
pop
mov
inc
pop
push
and
fsubrl
out
std
div
lds
scas
mov
pop
xor
xchg
cwtl
outsb
cmp
popa
sub
adc
lahf
rcrl
cltd
movsl
push
sbb
popf
cltd
mov
popa
inc
test
xchg
add
ja
cmpsb
xchg
cmc
xor
push
cmp
stc
and
adc
push
test
mov
es
xchg
rorl
cs
mov
lea
jg
pop
push
fadds
cmpsb
mov
jmp
nop
leave
cmpsb
ret
pop
and
popf
sbb
sbb
xor
mov
fdivrl
xchg
cld
fwait
sbb
dec
jb
addr16
sub
sbb
xor
insb
rcll
inc
mov
dec
faddp
push
lret
stc
int
rcrl
mov
pop
cmp
shl
scas
dec
xchg
mov
testl
lea
jg
popa
fnstcw
jbe
push
insl
ficomps
jmp
mov
mov
xor
mov
sbb
das
push
sbb
icebp
jmp
in
into
int
push
cwtl
mov
scas
push
adc
sarl
fdivrs
lods
inc
jno
sub
jge
daa
dec
dec
xor
sub
gs
or
sti
lods
rcll
push
jge
jae
mov
mov
inc
sbbl
ss
xor
mov
and
sahf
adc
leave
mov
hlt
adc
mov
fsubrl
scas
movsb
xchg
add
mov
or
cs
mov
and
stc
xchg
xor
jg
lock
scas
xor
sub
stc
add
in
out
jnp
mov
jno
dec
int
in
mov
dec
shlb
call
mov
jp
test
out
lds
dec
mov
mov
scas
movsb
sub
pop
aam
push
jb
xchg
mov
shr
jmp
jg
xchg
fsubl
into
lret
adc
test
push
xchg
sbb
pop
pop
pop
lahf
or
out
sbbb
jb
inc
nop
cmp
es
add
jns
rcrl
pushf
repz
add
add
mulb
repnz
out
and
sti
fnstenv
add
add
add
call
dec
adc
jae
mov
xor
or
pop
lods
mov
std
add
xchg
lret
jmp
test
in
adc
pop
and
jge
out
aaa
cld
ret
bound
or
cmp
std
nopl
test
pusha
mov
cld
dec
outsl
imul
mov
or
imul
rorb
dec
cmp
mov
js
mov
ret
push
or
xor
jae
lahf
loop
loop
jge
inc
in
push
arpl
lahf
out
in
and
sahf
in
sub
push
shrb
fimuls
jne
push
mov
sbb
shrb
notl
imul
out
stc
jb
aad
jno
cltd
fistps
sahf
mov
push
jo
and
test
jg
stc
mov
or
mov
sahf
cmc
mov
xor
inc
mov
icebp
add
fisttps
mov
mov
subl
gs
inc
das
mov
in
mov
cli
cwtl
and
jg
lods
xor
adc
xor
jl
imul
and
dec
push
jle
push
dec
mov
cs
cmp
push
jmp
push
dec
mov
mov
test
les
test
sub
lcall
mov
fmull
push
test
imul
xchg
pop
inc
push
in
cmp
pop
mov
rcll
hlt
das
push
xor
pop
loopne
inc
jns
jle
jns
iret
loopne
cltd
xor
insb
out
in
mov
leave
stc
into
addr16
sarb
mov
add
fcmovnbe
or
pop
sbb
popl
inc
xor
inc
push
dec
stc
jns
repnz
sub
push
int
or
scas
test
in
aad
inc
fwait
out
jecxz
add
mov
movsl
sub
inc
stc
addr16
push
js
pop
popa
add
pop
cmp
inc
mov
fs
pop
fdivrs
loope
cld
mov
lret
mov
add
mov
fidivrs
out
cmpsb
cmp
mov
psubusw
ds
mov
inc
fidivl
xor
xchg
pop
pop
sub
pop
xor
jecxz
cmp
test
popa
movsb
xchg
cmpsb
shll
jmp
stos
inc
add
dec
fmul
pop
hlt
les
mov
jbe
push
jb
call
lock
cld
or
std
loopne
push
mov
je
inc
xchg
inc
mov
adc
fcmovb
xor
mov
test
xor
mov
sub
add
xor
inc
cmc
fwait
lds
mov
xor
xchg
jg
mov
push
outsb
fs
xlat
lods
mov
es
jae
adc
mov
mov
push
mov
and
push
mov
movsb
leave
in
cmp
jp
es
cs
repnz
shlb
gs
sub
mov
pop
xchg
xchg
mov
into
inc
scas
aas
enter
pushf
mov
in
ret
aaa
inc
mov
pop
inc
xor
movsl
mov
or
mov
and
jno
jp
inc
sub
mov
xchg
shlb
movsb
mov
nop
frstor
jb
and
xor
xchg
adc
enter
movb
icebp
gs
jmp
and
adcb
adc
or
inc
mov
es
cmp
sbb
loopne
in
xchg
jae
add
jno
mov
sub
idiv
jge
pushf
mov
pop
loope
mov
push
fstl
and
mov
xchg
ja
lea
cmpsl
pop
dec
sbb
pop
das
adc
mov
lds
pop
in
fistl
xor
out
pop
das
inc
orps
push
or
or
sbb
xchg
dec
or
inc
inc
movsl
jns
or
ret
mov
out
push
sub
fstl
add
cld
inc
fstpl
scas
je
test
adc
sbb
sti
lret
xor
les
test
pop
push
xor
insb
mov
sbb
pop
cs
inc
imul
inc
and
leave
pop
dec
repnz
push
pop
scas
jbe
push
mov
push
test
xlat
repnz
cmpsb
dec
scas
inc
repz
aas
xchg
das
cs
adc
jae
orb
mov
lcall
push
jmp
cmpsl
adc
aaa
add
add
add
mov
mov
add
aas
int3
ja
add
add
add
jno
inc
sahf
jl
jecxz
mov
push
add
or
addr16
jg
cmovnp
pop
add
pop
out
mov
loop
repz
mov
iret
mov
ficoml
xor
xor
mov
jmp
movsb
mov
push
inc
and
cmp
lods
add
jb
nop
and
outsl
in
sub
or
ljmp
call
andb
jmp
or
push
jns
xchg
daa
aaa
fs
stos
js
int
shl
pop
in
out
jl
mov
stos
ror
and
pop
int3
inc
cwtl
push
xlat
pop
int
inc
nop
rcrb
jge
outsb
aad
sar
mov
mov
insl
fmulp
jl
mov
mov
inc
sub
in
lcall
xor
lds
cmp
loope
das
in
arpl
jbe
jp
addr16
subps
jmp
shll
in
into
sbb
adc
movsb
addr16
cmpsb
add
or
jnp
js
inc
inc
roll
movsl
sarb
enter
cmp
mov
stc
lahf
mov
addb
pusha
mov
mov
ss
movsl
shlb
pop
xchg
jbe
cs
in
mov
adc
test
mov
mov
hlt
jl
push
loop
xchg
loopne
push
sub
out
inc
mov
out
lods
mov
and
movsb
mov
cmpsl
ret
cld
push
arpl
pop
lods
cs
into
enter
mov
cmp
pop
adcb
stos
cld
aam
xor
movsb
xlat
add
jmp
jne
je
xchg
dec
xlat
lds
dec
jnp
mov
stos
cmpsl
pop
js
fiadds
fildll
add
cmpb
jmp
gs
mov
sbb
out
mov
sbb
repnz
jns
jg
adc
fimuls
shll
mov
mov
mov
mov
push
test
push
popf
mov
sub
rcrl
int3
jne
push
out
xchg
jb
cmp
inc
imul
fdivs
mov
jmp
inc
iret
mov
add
fdivs
add
cmp
mov
rorl
ja
aaa
jnp
les
repz
or
jp
dec
out
incb
xor
cmpsl
in
inc
push
mov
movsl
pushf
push
pop
inc
movsb
dec
clc
jmp
insb
push
ficomps
sbb
fwait
cs
pop
jnp
or
je
inc
popf
sahf
outsl
adc
scas
stos
in
aad
popa
add
inc
add
mov
data16
js
in
push
lret
das
mov
sbbb
xor
rorl
cmp
or
push
ljmp
popf
xchg
push
jl
xor
adc
xchg
into
mov
xlat
and
push
insl
insb
out
and
inc
inc
dec
cmp
sbb
lods
xchg
lahf
popa
jb
std
gs
mov
loopne
inc
xor
jbe
mov
xorl
repnz
sbb
ret
sbb
xlat
imul
add
add
stos
rcl
clc
inc
add
pop
insb
or
sahf
lods
and
inc
iret
out
sti
sarl
test
shrb
push
cltd
bswap
int3
mov
jp
cli
sbb
or
pop
jns
mov
loope
gs
cltd
pop
pcmpgtd
out
jmp
imull
stos
loope
pop
pop
xchg
xchg
mov
repnz
scas
xor
inc
xor
mov
dec
mov
leave
xchg
mov
scas
arpl
sbb
push
push
adc
or
pop
push
ret
push
xchg
push
cmp
and
jecxz
lock
ficompl
sub
das
xor
pop
aad
cmpsb
push
adcl
push
mov
mov
lds
mov
test
inc
add
mov
jb
test
neg
add
in
ljmp
lret
pop
scas
sarb
adc
jb
cmc
es
repz
or
mov
aas
cmp
jnp
mov
jmp
out
jnp
jb
push
add
mov
jmp
push
das
jp
or
iret
dec
add
insb
shrb
das
jne
aaa
test
mov
mov
and
xor
jns
push
mov
lods
push
or
sub
gs
mov
cwtl
push
sbb
test
cmc
jecxz
sbb
pushf
cltd
add
or
pop
xchg
jmp
rorl
ror
jge
lahf
mov
push
xchg
jno
unpcklps
pop
add
add
add
mov
and
pop
xchg
inc
mov
add
add
lret
dec
dec
xlat
push
adc
adc
addl
enter
jg
movsb
loopne
pop
jb
fstpl
shlb
fistps
cmp
sub
das
jo
fldt
into
add
add
xchg
sub
sbb
mov
adc
das
pusha
shl
and
je
lea
stos
test
add
mov
js
cwtl
jp
jno
pcmpgtb
out
mov
mov
cmp
mov
push
inc
jbe
jno
repz
jb
xor
mov
jp
cmp
pop
jne
inc
xchg
jns
in
das
fs
push
xchg
fldcw
push
imul
jle
pop
out
fxch
sti
jle
xor
rol
sbb
pop
sbb
repnz
imul
shrb
cmp
insl
test
aaa
stos
imul
hlt
add
pop
jl
sbb
sub
enter
stos
jmp
pop
test
movsl
push
int3
sub
lret
gs
xchg
movsl
jl
test
fistps
cmp
ret
test
xchg
sbb
push
stos
mov
or
mov
mov
mov
mov
ljmp
bound
push
subl
out
popa
adc
jle
xchg
mov
popf
add
fcompl
into
push
pop
or
xor
stos
inc
aaa
fsubp
fs
xchg
dec
popf
mov
mov
mov
and
add
test
mov
push
xchg
fwait
jae
jnp
xorb
test
add
xor
shll
int3
or
ds
add
cmpl
lds
rclb
cmp
pop
push
sbb
in
out
jmp
add
push
sbb
sub
popa
mov
push
inc
adc
lahf
out
add
sahf
mov
outsl
push
fidivl
roll
insb
sub
bound
sarl
mov
push
ret
lcall
insl
insl
mov
test
pusha
std
hlt
push
xchg
loop
or
add
imul
mov
jle
jg
jmp
xor
pop
mov
lods
cld
mov
push
pushf
pop
push
fwait
mov
push
subb
xor
cld
cmp
xchg
leave
stos
les
movsl
clc
mov
lock
out
push
mov
cltd
and
cltd
or
inc
lods
mov
sahf
lock
dec
andb
mov
stc
addr16
out
cmp
xchg
sub
sub
sub
imul
icebp
movsb
mov
das
push
inc
sti
mov
repz
sbb
cmpsl
inc
stc
and
test
cmc
mov
xchg
lds
test
pop
insb
in
dec
mov
pusha
jge
pushf
into
jns
jnp
addr16
int3
rclb
scas
lcall
xchg
sbb
popf
mov
enter
xchg
div
cltd
gs
sti
xchg
jno
frstor
mov
in
aaa
dec
mov
das
mov
enter
bound
in
loop
test
inc
adc
sbb
test
repz
sbb
out
push
mov
aaa
add
pop
mov
rclb
int
xor
aad
cmp
test
fcomps
push
ss
push
loope
imul
aad
jecxz
jecxz
in
mov
cmp
push
ret
enter
jne
iret
xchg
xchg
aaa
hlt
pop
add
jl
lea
ljmp
sbb
repnz
inc
xchg
pop
push
pushf
stos
test
jns
mov
fstpl
outsl
insl
push
mov
gs
mov
call
push
sti
repnz
cmc
std
and
divl
push
in
fcompl
inc
ss
fdivs
mov
test
xchg
testl
mov
push
je
jp
mov
ss
aam
data16
mov
fmull
in
daa
or
pusha
and
cld
dec
lea
lahf
adcb
xchg
test
ficoml
inc
mov
lea
aad
sbb
and
xor
rcr
jae
sub
xor
scas
aad
xor
adc
rolb
inc
jae
inc
loopne
test
xchg
movsb
or
ljmp
shrb
jecxz
lret
pop
outsb
aas
in
jmp
push
push
jo
filds
add
add
and
fldl
inc
sti
aas
jb
add
clc
popl
add
add
add
xorl
lods
hlt
stos
xchg
jnp
test
jnp
jnp
es
les
pop
int
dec
sub
pop
stos
mov
inc
cli
leave
repz
mov
xor
out
ret
rcll
roll
dec
mov
mov
fdivs
std
arpl
add
scas
aam
cltd
insl
or
add
flds
lods
jl
scas
push
out
popl
gs
adc
cmp
mov
xchg
adc
push
cmp
mov
pusha
add
test
aad
jmp
jmp
push
call
leave
mov
mov
es
in
mov
mov
movsb
sbb
rclb
jns
inc
sbb
add
xchg
sbb
dec
lret
addr16
js
push
fsts
jbe
mov
adc
les
cld
add
push
pop
cld
test
test
mov
push
adc
mov
push
stc
call
rol
in
lds
repz
aam
jp
mov
daa
jb
push
inc
mov
cmp
shll
and
mov
add
test
cs
adc
inc
adc
sbb
adc
mov
inc
jmp
fstl
mov
pusha
sub
loop
jns
sub
cmc
addr16
sbb
push
mov
jge
add
pop
dec
push
xor
mov
jo
shrl
stc
mov
lock
push
cmp
test
jl
sbb
xor
subb
testb
adc
ret
in
push
mov
lahf
ret
pop
jnp
push
or
outsl
hlt
and
sub
repnz
fildll
nop
mov
cmpsl
mov
fbld
lods
push
sbb
icebp
jbe
jno
and
loop
inc
das
push
push
adc
jg
test
testl
adc
push
js
test
rcrl
mov
sub
scas
cltd
int3
fwait
jbe
xchg
arpl
sbb
add
ja
sbb
cmpsl
mov
outsl
adcb
in
xor
fimuls
pop
inc
adc
test
aad
dec
cmpsl
pusha
cmpsb
xor
mov
fdivrl
add
call
enter
sbb
dec
das
adc
imulb
mov
ja
cli
ja
mov
or
sarl
push
mov
sub
jp
or
ja
icebp
loop
sbb
inc
mov
pushf
ret
mov
insb
cmp
lcall
push
das
lods
test
pop
cmp
mov
jne
movsl
jns
cwtl
jb
adc
scas
aaa
mov
stos
sqrtps
je,pn
xor
xor
push
pop
loope
dec
shll
inc
mov
test
fs
push
aad
jge
pop
int3
fs
fidivl
xor
push
cmp
fs
mov
mov
in
addr16
das
fsubp
push
iret
xchg
popa
inc
loop
jne
mov
adc
cmp
dec
lods
enter
loope
movsl
fs
push
int
iret
mov
test
push
rcrl
inc
fnstenv
push
xor
repnz
shlb
dec
or
imul
lods
incb
jns
das
fdivrp
lret
dec
mov
frstor
jl
pop
arpl
xlat
rorl
push
je
mov
insl
mov
or
pop
loopne
sar
nop
loop
sahf
push
cmpsb
repz
add
mov
nop
int
shll
pop
add
shlb
and
test
inc
mov
or
push
in
ds
test
sub
push
loopne
cmp
int3
fdivs
movb
cmp
fwait
push
jo
notl
mov
mov
cmpsb
jbe
scas
pop
pop
mov
in
and
inc
dec
mov
lahf
dec
testl
mov
pop
pop
pop
mov
mov
dec
imul
mov
jmp
jl
jno
adc
dec
gs
push
lahf
xor
outsb
js
insl
mov
pusha
lea
fistps
sbb
call
fnsave
dec
or
jp
add
jae
push
mov
loope
fsts
xor
sub
or
imull
xorl
test
jg
ds
dec
ret
rcll
add
add
add
jge
mov
or
or
add
add
add
mov
fsub
mov
stos
pop
mov
call
ja
mov
dec
push
inc
je
jb
fstps
jns
rcll
xlat
xchg
les
xor
int3
pop
adc
adc
add
lods
jecxz
insb
mov
test
divl
jmp
aad
js
icebp
fwait
aam
mov
jo
idivl
mov
jge
insb
push
jo
mov
push
lahf
loop
mov
cmp
adc
inc
sub
hlt
imul
pop
push
ret
fildl
add
jbe
push
dec
and
int3
cmp
outsl
mov
cmp
push
push
or
imul
aas
inc
push
repnz
adc
or
adcb
leave
cmp
hlt
and
mov
mov
lods
push
into
cmpsb
dec
test
xchg
mov
fisttpl
ss
outsb
adc
pushf
and
test
xchg
inc
in
mov
fidivrl
or
mov
popa
xorl
or
add
cmp
sub
push
sbb
jp
pop
pusha
xchg
push
push
arpl
xchg
jp
xor
jl
sub
testb
mov
gs
lea
pop
push
mov
mov
lods
test
sahf
nop
push
out
mov
mov
cmpsb
into
lods
movsl
mov
pusha
out
sub
fistl
data16
shlb
pop
and
sbb
sub
in
cltd
in
inc
xlat
insb
sti
adc
mov
push
pusha
jb
aad
mov
cmp
sub
movsl
pop
pop
xchg
or
inc
adc
cwtl
adc
adc
xor
adc
test
xchg
xor
add
or
fidivl
sub
rclb
sbb
pop
scas
jmp
mov
lea
mov
pop
mov
test
das
cmp
cmp
lods
movsl
fisubs
int
cld
cmpsb
cltd
fldcw
inc
xchg
sub
addr16
or
xor
adc
jg
lods
jecxz
push
stc
daa
arpl
and
pop
push
push
sub
and
sti
dec
pop
inc
ljmp
data16
or
mov
fwait
in
add
fisubrs
stc
inc
cmp
inc
iret
adc
add
loop
add
into
jp
nop
data16
out
inc
out
and
inc
xchg
movsb
jmp
sub
inc
inc
push
sub
push
jae
push
add
or
int
aad
in
adc
inc
pop
xchg
jbe
leave
pop
push
clc
jns
push
sar
loopne
push
xchg
cmp
add
xchg
add
sahf
mov
mov
mov
daa
daa
mov
mov
sbb
ja
push
out
inc
sti
xor
inc
test
cmpsb
mov
shrl
inc
xorl
adc
push
lahf
xlat
scas
rcrb
ret
push
jp
and
add
cmpsl
and
jbe
adc
mov
jge
in
adc
inc
mov
aad
adc
stc
out
scas
daa
mov
cmp
xlat
mov
xlat
subb
movb
jno
xor
out
mov
xchg
fld
sbb
sbb
shrl
mov
and
hlt
cmp
movsl
shll
repnz
dec
lods
jmp
and
fnstsw
fmuls
jae
stc
push
flds
in
pop
call
inc
and
cld
insb
je
jbe
mov
xor
push
jle
adc
outsl
mov
sbbl
loope
shlb
mov
xlat
outsl
push
lea
pop
jg
aas
sahf
repnz
in
iret
xlat
add
test
roll
sbb
es
jg
adc
aad
movsl
add
jno
lods
push
int3
xlat
mov
cmc
mov
inc
jmp
push
mov
and
mov
mov
aaa
push
push
or
cmpsl
jmp
add
sub
mov
out
jno
mov
xchg
ss
in
jg
sbb
cmp
in
xor
int
es
cmp
jmp
test
aas
add
imul
fwait
jmp
pop
mov
cld
cmp
mov
mov
push
fs
test
sti
stc
fistpll
adc
in
xchg
sub
loope
call
mov
jnp
pop
add
inc
jmp
xor
mov
xor
xchg
in
int
add
add
add
mov
cmp
add
repz
add
adc
bound
out
aad
cld
loope
mov
pop
adc
in
cmp
int
mov
pushf
push
adc
cltd
or
pop
sub
ds
mov
in
sahf
push
lahf
fcomp
xor
push
fwait
andl
cld
sub
out
or
fnstenv
sbb
stc
in
ret
fwait
shrl
push
push
mov
in
loopne
loope
dec
cmpsl
shll
js
sub
jb
scas
cmp
ss
cli
or
cmp
bound
dec
out
mov
mov
xor
dec
dec
insb
push
je
sub
gs
pop
test
mov
stos
cs
mov
jle
xor
pop
lret
jle
sub
inc
add
mov
scas
adcl
inc
negl
cmp
xor
pop
outsl
push
mov
movsl
test
mov
stc
pop
dec
in
cmp
xor
sbb
in
movsb
aas
add
ja
ret
push
mov
push
pop
xor
ds
jmp
addr16
sbb
hlt
dec
and
fs
jnp
push
xchg
cmp
push
in
push
xor
lcall
dec
push
mov
fwait
dec
jb
cmp
psraw
mov
in
jnp
add
sahf
xor
sub
stc
cwtl
stos
sub
sbb
mov
out
mov
mov
outsb
outsb
cmp
fbld
repnz
addr16
stc
mov
out
mov
in
sbb
push
sbb
iret
popa
or
and
mov
icebp
dec
lahf
addr16
and
fsubl
aad
mov
dec
out
mov
mov
push
push
xlat
loopne
jo
and
adc
enter
pushl
ret
clc
aaa
xlat
jne
mov
add
xchg
and
cwtl
sbb
decb
fidivrl
aam
pushf
pop
mov
add
sub
xchg
sub
lea
lahf
xor
iret
nop
pop
imul
cli
bound
jecxz
iret
dec
add
xor
ja
sbb
scas
icebp
ljmp
jmp
add
pop
inc
xchg
xchg
test
pop
inc
mov
loopne
jge
inc
nop
faddl
call
jne
int
fwait
daa
dec
cmp
std
dec
jmp
nop
outsb
xchg
jl
test
f2xm1
xor
cwtl
sub
xor
loopne
lret
mov
jg
clc
clc
jg
pop
sbb
add
ss
out
les
popa
pop
pushf
dec
roll
mov
cmp
or
outsl
sub
fcmovnb
sti
stc
jnp
xchg
inc
sub
mov
repz
sub
clc
in
ss
ds
in
mov
mov
push
and
loopne
cwtl
clc
inc
adc
lret
sub
hlt
inc
adcb
imul
jae
jno
jns
jb
xor
sub
sahf
xor
jmp
dec
icebp
cmpsb
adc
sbb
outsl
mov
test
mov
fcoml
adc
idivl
jo
out
ds
mov
mov
jbe
cwtl
pop
adc
addb
cltd
insl
inc
popf
mov
int
pop
outsb
adc
mov
mov
pushf
imul
push
mov
ljmp
cmp
shl
hlt
sbb
jecxz
gs
ret
stos
inc
xchg
jle
push
sti
repnz
enter
mov
or
sub
dec
mov
xor
leave
ret
pop
ds
sbb
gs
sub
jmp
cmpsb
insl
cmc
mov
sbb
dec
lds
arpl
mov
lods
pusha
cwtl
das
push
inc
push
enter
rclb
enter
cmc
loope
mov
loop
scas
imul
test
pop
sahf
inc
or
imul
sub
or
mov
je
inc
stos
movsb
sub
sub
and
repz
rorl
or
mov
xor
ret
movsb
sbb
out
cmc
mov
mov
fwait
jo
dec
adc
lods
icebp
test
test
jne
xor
mov
ja
ret
imul
pop
inc
and
cmpsb
ror
sbb
cwtl
clc
lds
cmp
ljmp
popa
es
and
int3
adc
adcl
push
je
xchg
mov
xchg
test
jp
jbe
hlt
sub
stc
jb
das
lods
sti
adc
dec
nop
mov
stos
and
orl
stos
test
jo
cmp
jae
mov
xor
cmp
in
adc
pushf
insl
push
jmp
dec
xchg
out
mov
add
and
es
sti
std
sbb
adc
outsl
mov
add
aam
pop
pop
outsl
mov
out
loopne
scas
filds
fildll
dec
lret
pop
jle
xor
add
adc
icebp
lea
sbb
jl
repz
out
loope
push
sbb
sarb
xlat
shlb
xchg
mov
imul
adc
inc
xor
mov
enter
xchg
inc
dec
mov
pop
mov
push
mov
mov
sub
push
scas
cltd
fbstp
inc
push
pop
addr16
cs
adc
mov
sahf
enter
imul
es
mov
nop
insl
dec
xchg
mov
pop
xchg
pushf
daa
ja
mov
in
aas
push
xchg
pop
mov
loop
movsl
test
lret
mov
jae
in
jne
es
pop
out
cmp
sub
stos
popa
fcom
popa
mov
xchg
sti
mov
ret
xchg
cli
jns
xchg
sub
rcr
js
push
dec
rorl
dec
push
cwtl
mov
xor
jne
inc
test
in
out
rol
loopne
jae
jo
cmc
test
adc
dec
add
pop
shrb
xlat
movsb
ljmp
inc
push
dec
sub
ljmp
mov
dec
in
clc
ljmp
scas
je
jbe,pt
scas
adc
sbb
fsub
push
mov
jb
shlb
add
out
add
gs
lods
in
adcb
xchg
mov
sbb
push
test
jb
push
and
dec
jecxz
sarl
cli
dec
sub
cmpsb
or
xchg
mov
popa
sbb
cs
imul
mov
sbb
or
outsl
jecxz
pop
mov
cmp
aas
xchg
out
fisubs
js
adc
loop
jo
mov
jle
movsb
adc
in
adc
inc
fwait
or
mov
push
loope
and
sub
or
rolb
xlat
pop
add
xor
mov
stc
gs
pop
lahf
pop
leave
icebp
imul
js
xor
xchg
pop
hlt
add
mov
and
mov
fstp
lret
jbe
test
rcrb
in
cmp
ret
add
mov
adc
sbb
cmp
out
dec
jae
mov
cmpsl
jg
jno
xor
sahf
cmp
mov
push
cmp
pop
dec
add
dec
pop
sub
xor
cli
test
fldenv
mov
stos
and
push
rolb
dec
pop
cli
aam
sub
mov
cmp
jns
jg
out
call
popf
add
mov
ss
mov
mov
dec
loop
ret
inc
out
adcb
movb
add
sbb
and
movsb
cmp
scas
dec
and
insl
repnz
bound
into
fisubl
clc
jae
mov
push
jo
cmpsl
dec
pop
inc
gs
add
movsl
adc
iret
jl
jo
dec
push
mov
scas
adc
mov
fwait
or
lods
pop
mov
stos
mov
sbb
adc
rcrl
std
jmp
ja
xchg
adc
jb
inc
sbb
dec
outsb
mov
outsb
push
xchg
je
and
ficomps
outsl
cmpsb
dec
dec
shl
fwait
add
sbb
sub
lret
dec
stos
mov
jae
mov
lret
stos
sbb
cli
jg
stc
call
sar
sbb
rcrb
or
inc
insl
dec
and
fidivs
ja
pop
add
fcoms
add
xchg
int
push
stos
int3
sbb
dec
orb
decb
clc
aad
adc
mov
rol
sub
cs
in
in
test
add
sbb
imul
xlat
insl
dec
cmp
push
dec
or
xor
jmp
enter
popa
pop
rcrb
repnz
pop
cmp
sub
sub
aam
mov
sub
xchg
jno
pop
lea
cmp
nop
js
add
inc
insl
and
shlb
enter
mov
xor
jnp
push
enter
push
xor
into
inc
pop
pop
add
pushf
and
sbb
cs
cmp
ret
out
add
cltd
jo
incl
mov
pop
mov
subb
rol
add
inc
mov
stos
sbb
xchg
enter
sbb
jae
js
lret
add
jnp
or
inc
xadd
or
add
add
add
mov
jg
lcall
fistpll
add
repz
add
push
fwait
mov
iret
rclb
jb
sbb
arpl
pop
pop
mov
cmp
mov
xor
inc
out
and
mov
add
scas
cli
mov
and
cmp
inc
shll
in
add
sub
loope
xchg
pusha
xlat
or
arpl
ds
in
cmpsl
inc
jo
imul
xchg
lods
adc
aas
into
aad
adc
mov
push
pop
sub
jle
cmpsl
bound
mov
hlt
in
notb
rcrl
push
and
arpl
jb
xchg
inc
call
cltd
lods
jno
js
fidivrs
pop
sbb
cmp
and
mov
push
sub
stos
cmp
hlt
dec
sub
lock
sbb
xchg
add
and
out
insl
xchg
popf
push
mov
cmp
mov
dec
xor
dec
push
stc
jle
push
xchg
cmc
fld
aam
inc
jle
mov
scas
or
jbe
mov
out
adc
push
cmp
mov
stos
add
lds
push
xorl
sub
or
jmp
leave
aad
sbb
pop
add
mov
mov
sub
mov
sbb
iret
adc
xlat
inc
xchg
xlat
stos
out
or
mov
loopne
push
mov
call
arpl
call
sbb
ljmp
xchg
rorb
in
push
mov
daa
mov
jmp
inc
dec
dec
cmc
pop
out
dec
ss
loop
lods
mov
mov
lret
sbbl
mov
ret
sub
push
pop
jnp
hlt
or
xor
sub
mov
cwtl
pusha
push
aaa
cmpsb
and
dec
pusha
jmp
cs
rolb
add
jge
int
in
dec
dec
and
aam
mov
lods
aam
jnp
stc
popf
bound
outsb
jno
lock
lahf
mov
je
aad
push
hlt
mov
xor
clc
lahf
imul
adc
or
outsl
xchg
jecxz
leave
fimuls
mov
or
add
mov
pop
pop
cmp
xor
sbb
jmp
jbe
adc
fwait
xor
xor
aaa
std
dec
push
xchg
dec
mov
pop
mov
stc
rol
movsl
cmp
icebp
and
cmpsb
test
sahf
pop
cmp
mov
xor
lret
or
outsb
xor
imul
sub
inc
jns
xor
idivb
fs
fs
outsb
lods
jno
scas
push
xchg
ret
xchg
xchg
test
shl
mov
hlt
daa
or
push
mov
dec
pop
lds
addb
pop
repz
std
xchg
mul
cwtl
inc
cmpb
mov
xor
jbe
fsts
mov
jnp
mov
push
sbb
or
pop
push
call
inc
jmp
mov
shr
iret
insl
mov
cmpsl
mov
cmp
mov
mov
mov
mov
add
imul
enter
xchg
shlb
dec
xorl
push
cmpl
sbb
push
lds
pop
ja
xchg
repnz
cld
pop
pop
leave
push
sbbl
scas
push
arpl
fdivrl
xchg
lds
and
jl
sbb
clc
jp
jo
sub
in
inc
and
leave
xlat
and
popf
pushf
fwait
or
mov
out
or
mov
out
sti
or
icebp
xchg
sbb
xor
push
pop
aas
mov
and
ret
fdivp
mov
ds
lret
mov
adc
jmp
repz
fldt
lret
stos
aad
lcall
mov
fimull
add
cmp
scas
dec
sub
insb
sbb
or
mov
inc
xor
cmp
xor
and
mov
sub
fisttps
es
jns
mull
ret
ret
or
test
xor
or
lahf
enter
les
adc
ljmp
mov
mov
dec
xchg
dec
dec
inc
fists
enter
imul
in
arpl
or
add
out
jns
scas
int
cmp
pop
xor
mov
cmc
sub
and
movsb
adc
dec
xor
in
jle
insl
das
jae
add
jp
outsb
lods
cmp
ret
cmp
outsl
mov
push
xchg
ss
push
clc
rcrb
inc
mov
inc
xor
mov
jg
nop
les
add
stc
pop
sub
stos
jns
dec
sub
sbb
cmp
repz
add
lahf
clc
fcomps
add
sbb
insl
inc
sahf
in
fiadds
add
and
in
leave
add
pop
sub
mov
add
sbb
fs
aaa
call
mov
or
push
adc
dec
mov
xorl
sub
sbb
cmp
scas
xor
icebp
sub
xor
mov
dec
pusha
adc
jmp
in
adc
mov
cmc
test
mov
pop
addb
xchg
out
inc
fistl
pop
ljmp
test
mov
in
lods
adcl
imul
sub
xchg
mov
push
sti
and
test
incb
inc
jbe
or
inc
and
push
pusha
loop
jecxz
addr16
fs
pop
mov
add
data16
mov
mov
addr16
cmp
stc
ret
inc
daa
in
and
lds
cmc
dec
ljmp
fistpl
mov
xor
adc
popl
xchg
sub
mov
xor
in
jle
les
inc
dec
push
mov
sarb
movsb
mov
sub
inc
cmc
cmp
insb
inc
jo
sub
cmp
jb
push
inc
xor
sahf
movsl
or
jb
ds
and
add
and
xlat
call
jmp
lcall
mov
gs
fcompl
or
mov
test
outsb
push
cmpsb
jae
jae
scas
imul
mov
je
aam
imul
push
push
jle
lret
ds
and
int
popf
cltd
popf
cmp
sbbb
jno
test
in
cmp
shll
sbb
lods
loopne
push
pusha
inc
jecxz
adc
loop
adc
sub
aaa
and
pop
mov
loopne
out
lock
movsb
das
add
shrb
ficompl
arpl
and
addb
mov
xchg
cmp
lahf
dec
in
hlt
inc
mov
fmuls
int3
sar
lods
push
popa
ja
stos
adc
cmp
add
xchg
jl
shl
cltd
stos
sbb
push
daa
jbe
js
loop
mov
lret
loop
or
jb
repz
out
aad
in
outsb
test
cwtl
dec
lcall
mov
mov
scas
add
rcll
push
jle
fcomip
sub
adc
aad
pop
or
xchg
repz
mov
lock
lcall
cmp
push
inc
movsb
fdivs
dec
xor
adc
shrl
push
mov
push
stos
jecxz
xor
dec
lahf
fcmovb
xor
push
sbb
sbb
inc
pop
or
gs
fdivrs
mov
loopne
lea
pop
std
insb
xchg
xor
xchg
int
ds
adc
popf
push
mov
dec
or
inc
push
popa
imul
movsl
popf
push
mov
dec
pop
into
push
fwait
cmc
sbb
push
jg
aaa
dec
sahf
add
push
push
pop
pop
pop
xor
out
sbb
dec
shll
fstl
fsubrs
or
pushfw
adc
daa
lock
mov
cmp
pop
mov
adc
sbb
cmp
pop
in
mov
das
sahf
fsub
or
loopne
mov
inc
out
clc
mov
or
cmpl
imul
fs
sahf
fsub
push
pop
or
and
sub
stc
popa
fcomps
cwtl
nop
ja
jbe
dec
dec
jl
in
sub
iret
or
inc
je
notb
icebp
mov
mov
jecxz
in
cmp
mov
or
in
popf
mov
sbb
push
add
jbe
icebp
push
xchg
test
xchg
rcrl
je
lock
or
adc
sbb
push
pusha
adc
aad
popa
out
dec
sbb
in
movsl
push
jg
fisubrl
cli
and
inc
mov
jno
sub
inc
xchg
icebp
les
cmp
cmpsb
lock
jg
cmpb
loope
sub
inc
adc
xchg
jle
fwait
faddl
cmp
push
repnz
fistpll
jae
fldcw
test
fnstenv
add
test
dec
inc
stos
fstpl
xor
cld
xor
iret
je
test
xchg
hlt
jle
jge
inc
outsl
pop
stos
inc
pop
sbb
jmp
hlt
sub
sbb
psubsb
insb
rcrb
jg
stos
add
in
adc
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repz
add
pop
fsub
ret
pop
cmp
xor
imul
neg
in
cwtl
pusha
mov
mov
aad
inc
jecxz
mov
fsubr
out
push
sbb
mov
and
sbbl
cmc
imul
jle
rcll
xchg
pop
dec
cli
shr
lods
mov
lods
jne
or
mov
out
sbb
or
lret
sub
fisttps
xor
notb
sub
lret
push
xor
mov
mov
mov
inc
push
push
cld
inc
mov
cs
rorl
fisubrs
adc
dec
add
cwtl
push
pushf
mov
pop
mov
cmp
gs
insl
idivb
mov
dec
sarl
je
sbb
arpl
adc
and
jnp
popa
decl
negb
addr16
xlat
and
pop
ss
inc
into
mov
nop
mov
xor
fs
adc
pusha
adc
push
sahf
jmp
sbb
loopne
pop
push
movsb
push
idivb
fistpl
sarl
and
movsb
sub
push
out
fildl
mov
flds
popf
xchg
push
add
sub
cmp
jl
cmpsb
xorl
psubb
inc
jge
jb
cmp
mov
push
shlb
inc
in
mov
xchg
popf
lods
test
push
mulb
mov
popf
cmpl
aas
loope
out
pop
out
sub
loop
sbb
rcl
adc
mov
inc
std
arpl
rcrb
rcrb
push
xorl
inc
out
push
aad
rclb
imul
jnp
mov
and
jmp
insl
outsl
imul
cwtl
stos
scas
cwtl
into
mull
in
jae
clc
pop
jecxz
pop
das
mov
push
popf
dec
mov
es
lods
xchg
das
out
outsl
push
stos
xchg
daa
mov
lahf
push
or
pop
test
fsubrs
fisttps
repnz
add
inc
in
push
cmp
or
push
push
mov
outsl
add
push
in
int3
mov
adc
inc
leave
fidivl
mov
adc
pop
sahf
and
cmp
or
add
ss
into
push
ficoml
fcmovu
adc
fwait
nop
mov
lock
loopne
mov
pop
mov
enter
scas
xchg
dec
sub
push
push
or
xchg
mov
jae
adc
push
sbb
mov
hlt
cld
cmp
inc
jg
xor
sub
movsl
stos
stos
clc
sub
jae
repnz
test
in
cmp
pop
popa
lahf
cld
shl
leave
bound
hlt
daa
movlps
push
or
mov
fisttpl
cltd
xor
mov
daa
f2xm1
ja
jns
lods
dec
mov
sbb
push
test
xor
or
cld
cmp
ljmp
nopl
mov
in
call
jp
mov
and
shrl
pop
fisubl
rcrb
pop
hlt
mov
fiadds
pop
sub
inc
xlat
or
adc
lea
sub
out
sub
cmp
shlb
pop
dec
movsl
jmp
fnstsw
sti
adc
push
push
mov
push
and
lret
bound
stos
or
in
push
mov
sbb
and
daa
pop
adc
jbe
cltd
adc
lods
xchg
or
repnz
aad
and
nop
ds
repz
cmp
pop
scas
mov
cmpsb
fnstsw
dec
xor
mov
lahf
pop
adc
or
insb
outsl
push
mov
cmp
cmpsl
jno
ljmp
push
clc
out
jp
loopne
out
out
sbb
sub
js
ja
jp
push
scas
cmc
fimuls
test
in
xchg
arpl
jno
and
and
pop
adc
inc
loopw
cmpl
data16
mov
mov
push
xor
xchg
dec
sahf
push
inc
inc
pop
clc
push
adc
cmp
lret
push
pop
push
push
mov
mov
inc
cmp
ffreep
fsubr
mov
ljmp
test
mov
out
mov
stc
movsl
add
adc
pusha
insl
or
mov
sarl
mull
std
dec
jns
mov
mov
cmpsb
ret
notb
test
or
and
test
scas
pop
in
addb
divl
add
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
inc
sub
popf
pop
outsl
nop
mov
sub
sub
mov
dec
sub
xchg
jo
push
int
sub
dec
inc
or
adc
jbe
xor
icebp
pop
outsb
dec
lods
xchg
jle
mov
push
sarl
lds
mov
mov
jle
or
mov
test
dec
mov
sarb
xor
hlt
ficoml
pop
hlt
data16
mov
pushf
xlat
xchg
aad
dec
test
jecxz
or
add
inc
lahf
out
cmpsl
sbb
pop
or
test
add
adc
mov
and
out
jle
enter
repz
mov
sahf
push
pop
mov
adc
fdivrl
and
or
and
out
mov
addr16
mov
int
fstpl
and
repnz
sbb
cmpsl
sti
subb
cmp
aaa
nop
lahf
lock
repnz
push
adc
add
jae
call
and
inc
xchg
mov
or
cli
std
add
rdmsr
inc
inc
sbb
sub
ret
loope
fmul
and
lods
in
cld
xchg
push
enter
es
in
adc
and
pop
push
or
or
rorl
in
pop
popf
sub
jg
pop
jg
gs
js
xchg
xor
mov
pop
cli
pop
mov
std
or
loope
dec
std
mov
lea
cmp
push
sbb
popf
lahf
in
inc
jb
add
mov
sarb
push
and
loopne
dec
sahf
test
cmpb
jns
xlat
push
fcomps
pop
popf
in
hlt
incb
movb
lds
pop
jne
sbb
mov
jle
jne
in
jl
pop
insb
dec
repnz
sub
sbb
xor
mov
add
pusha
xchg
inc
arpl
mov
xor
inc
jo
gs
loop
cmc
lret
mov
cmpsl
imul
enter
push
popa
lcall
out
mov
ds
ret
mov
je
leave
or
rorl
or
inc
fldcw
sub
push
cmp
enter
xlat
xchg
rolb
push
lcall
jne
ss
add
ds
mov
pop
and
adc
jl
push
cmp
or
repz
lahf
iret
mov
jne
test
popa
inc
popa
xchg
pop
gs
leave
xchg
inc
test
push
sbb
mov
xchg
jbe
in
pop
outsb
xchg
jnp
jecxz
in
popf
pop
adc
rclb
xchg
dec
xor
outsl
cmpsb
dec
insb
cmp
loope
adc
jne
repz
ljmp
aas
jnp
in
inc
dec
xor
xor
jne
hlt
imul
or
rorl
fs
jnp
push
popa
sub
sbb
fisttpll
adcl
stos
mov
mov
test
lock
pop
mov
mov
pop
cmp
pop
cmp
sub
ljmp
icebp
sarb
cmpsl
imul
in
jno
pop
idivl
push
int3
pop
mov
or
imul
xor
mov
sbb
xor
xor
mov
xor
xchg
jns
fisubrs
mov
cltd
je
outsl
pop
shrl
pop
gs
inc
nop
dec
or
jle
dec
or
add
shll
arpl
add
in
sub
add
mov
in
fwait
jae
pusha
cmp
mov
pop
or
cmp
sbb
adc
cmp
pop
stos
mov
stc
or
sub
test
xor
fwait
dec
mul
push
adc
xor
outsb
pop
pop
cmp
aam
and
divl
push
addb
imul
cmp
xor
in
out
pop
mov
and
sti
mov
out
xchg
std
shll
pop
pop
loop
push
or
jmp
xchg
ss
pop
clc
sub
push
adc
movb
data16
insl
clc
mulb
les
jp
push
push
inc
test
sub
aam
icebp
mov
bound
test
jne
hlt
js
shrb
mov
jno
jecxz
into
fimull
and
aad
fildll
dec
xchg
sbb
jo
or
mov
push
pop
xchg
cmc
lds
mov
lea
add
pop
test
aam
lahf
pop
dec
sar
adc
adcb
dec
test
add
jge
mov
jle
sar
shr
popf
in
lods
xchg
es
add
cld
and
adc
xlat
push
testb
gs
mov
dec
insl
notb
sbb
lahf
and
je
push
or
lahf
ja
lods
loopne
dec
or
jmp
ljmp
pushf
mov
int
push
adc
cmp
insl
aad
sbbb
inc
out
or
les
sbb
call
stos
addr16
stos
inc
insl
push
enter
or
jae
xchg
mov
dec
std
mov
lahf
add
mov
les
data16
push
xor
ja
xchg
push
push
adc
fildl
mov
cmp
jae
xchg
and
cmp
fimull
xchg
xor
in
adc
nop
or
loopne
loop
mov
mov
mov
int3
pushf
xchg
cmpsb
test
pop
inc
mov
pop
add
negl
mov
mov
dec
out
cs
aad
sub
xor
xor
ljmp
inc
jo
mov
leave
pop
mov
mov
jge
lcall
pop
jle
inc
cmpsl
movsl
lcall
cmpsl
lahf
lret
and
mov
je
xchg
cmp
sbb
mov
popf
sbb
mov
cmp
stos
arpl
daa
push
nop
insl
push
ja
pop
lret
dec
fstl
inc
dec
pop
pushf
or
sbb
arpl
inc
xor
add
cmp
lret
lret
jge
ljmp
jle
cmp
js
loop
and
sbb
mov
leave
cmpsb
sbb
lahf
je
repnz
xchg
dec
push
cmp
xor
imul
inc
jbe
std
xchg
stc
pop
and
push
sub
xchg
mov
popf
test
rcr
mov
popf
and
ror
jle
loope
test
xor
sbbl
push
fldenv
call
pop
and
fisttps
push
sbb
sbb
inc
adc
add
pop
inc
add
add
jo
pop
mov
and
into
into
and
lahf
inc
inc
cltd
fidivrl
jge
mov
stc
hlt
adc
and
movsb
das
je
and
cmp
mov
adc
jecxz
loopne
lods
in
repnz
mov
mov
mov
sbb
xchg
ljmp
xor
loope
pop
sub
lods
test
outsb
aaa
sub
mov
push
push
jb
xor
leave
jne
es
mov
les
rolb
in
ror
pop
cmp
out
cs
and
xchg
lods
adc
test
fbstp
das
lahf
fldcw
xor
mov
mov
push
add
add
push
test
fnstenv
adc
fwait
andl
popa
adc
mov
cmp
cltd
lea
mov
pop
imul
xor
push
dec
outsl
lcall
xchg
or
mov
adc
inc
fildll
pop
imul
test
cmp
add
mov
aaa
add
or
int3
jno
scas
pop
mov
fsts
dec
repnz
pop
rorl
dec
mov
jp
aad
inc
sbb
repnz
imul
push
cmpsl
into
sub
bound
xchg
push
mov
jp
clc
cmpsl
leave
jae
cltd
pop
stos
and
mov
sbb
inc
sub
push
mov
or
sbb
in
adc
les
and
xchg
jl
fisubrl
jno
addr16
add
lds
or
xchg
cmc
ds
lret
cmp
stos
cs
test
xchg
rcll
fcmovbe
pushf
cmc
mov
test
rorl
mov
push
push
outsl
cmp
movsl
jle
sbb
mov
cmpsb
cmp
mov
inc
lret
rol
push
stos
adc
mov
xor
and
ret
mov
ss
mov
adc
fidivl
sub
xor
cmpsl
cmp
aas
dec
or
sub
daa
jl
pusha
lcall
aam
aaa
cwtl
dec
and
jae
pop
or
rcr
jbe
cmpsb
adc
xchg
call
add
mov
jns
in
and
fisubs
aas
test
or
sub
xchg
xor
out
sbb
and
inc
add
add
add
push
push
lret
mov
sbb
add
repz
add
insl
add
push
insb
nop
jge
or
jae
mov
add
cmp
xchg
lret
int3
cmpsl
cmpsl
dec
fbld
mov
daa
adc
jle
jmp
int3
sub
iret
cmp
push
out
fadds
inc
cwtl
lea
mov
insl
repnz
adc
pop
data16
xor
push
jno
cwtl
in
sub
mov
out
cltd
test
jnp
stos
push
cmp
cmp
incb
andl
in
jb
sub
jae
xlat
jns
and
jbe
cmpsb
jmp
stos
inc
push
cmc
mov
jl
dec
popa
test
jge
xchg
lea
cmp
scas
mov
jb
pusha
mov
ret
lock
into
loop
aaa
inc
mull
cltd
jb
repz
push
xchg
in
pop
scas
or
lahf
dec
es
sub
shrl
mov
push
in
shr
mov
sbb
mov
push
add
add
sbb
and
in
jb
push
in
jnp
push
cs
push
mov
ljmp
test
fstpl
pusha
dec
inc
push
mov
pop
roll
out
pop
jg
xor
cmc
jmp
cmpsl
fwait
imul
pop
loop
lock
lds
aas
rcll
sub
sbb
sbb
test
pop
jp
adc
aad
jp
loop
jo
mov
add
das
out
mov
push
out
adc
fsubrl
add
pusha
adc
pusha
roll
jge
sarb
pop
sti
fwait
sub
xchg
push
and
push
and
dec
mov
cmp
ret
jno
lret
mov
pop
sbb
test
mov
shrb
mov
inc
aas
sbb
mov
shll
daa
add
sbb
mov
notl
enter
jne
cmp
jecxz
mov
push
add
insl
or
test
into
roll
add
add
push
pop
arpl
test
out
sbb
aam
addr16
sub
push
pop
mov
mov
fsts
adc
push
orb
stos
lock
push
insl
pushf
mov
sahf
fmull
fldl
cmpsl
mov
fisubrl
gs
sahf
pop
and
test
int
out
lds
lcall
cmc
outsb
fwait
insl
negb
aad
and
les
addr16
jl
dec
out
sti
out
or
std
jbe
jmp
stos
cmp
xorl
movsb
pop
inc
rorb
xor
xchg
dec
push
xor
mov
sbb
addr16
mov
push
xlat
lcall
dec
xor
ja
fisubrs
mov
aaa
push
or
out
stos
mov
mov
les
testl
aas
in
loope
cli
out
sub
xor
andl
dec
xchg
je
test
fnstenv
mov
xchg
imul
sub
pop
jno
dec
enter
stos
test
xchg
les
and
xchg
ret
in
sti
push
sub
push
push
jp
mov
xchg
in
cmp
sub
cmp
lock
adc
test
sbb
clc
mov
lods
jl
sub
imul
icebp
cmp
ljmp
and
mov
shlb
int3
xor
ja
or
rorb
mov
jo
sbb
fistpl
mov
imul
or
adc
sub
movsl
das
sub
xchg
xchg
pushf
push
lods
mov
in
mov
sbb
pop
mov
adc
add
mov
sub
cmpsl
gs
sub
inc
arpl
push
xchg
imul
movl
aad
js
mov
lahf
or
or
sub
bound
cs
add
addr16
mov
mov
xor
je
in
mov
mov
pop
mov
fadds
scas
repz
push
aam
rclb
push
sub
sbb
push
xor
repnz
adc
xchg
xchg
iret
push
ljmp
popa
ret
icebp
ja
lds
jnp
cmp
or
ljmp
fsubrl
outsl
sbb
sbb
popf
sti
xor
sbb
lds
xor
lcall
push
sub
stc
push
mov
dec
in
mov
mov
add
add
daa
cmp
mov
and
xor
add
bound
test
jecxz
add
aad
test
xchg
cs
sbb
or
push
xchg
nop
push
or
mov
fst
dec
ss
xor
into
mov
mov
scas
push
ret
fwait
insb
jmp
lret
jp
fwait
mov
dec
pop
cmp
jmp
mov
cld
and
pop
int3
dec
mov
cmp
jnp
sub
stc
xorl
sub
xchg
add
xchg
add
imul
cs
fbstp
jle
add
mov
out
mov
jmp
aad
data16
sub
cli
xchg
sub
cmp
loop
mov
adc
gs
icebp
cltd
lods
clc
pusha
in
sbb
pusha
add
push
push
xor
aaa
fsubs
sub
enter
jl
adc
or
or
cli
pop
leave
ss
add
inc
cmpsb
dec
xor
outsb
fdivl
push
out
and
xorb
or
lret
mov
mov
dec
mov
int
sbb
repz
fs
mov
stc
lock
mov
pop
xor
fisttpl
sti
sbb
sub
lret
add
fbld
sti
or
mov
pop
data16
sarl
fst
xor
add
mov
xor
jmp
push
mov
fadds
dec
ret
xor
mov
push
push
pop
add
xor
cs
lock
or
fsubs
popa
mov
inc
push
fadds
cmp
loopne
inc
subl
dec
ja
pop
orb
notl
mov
addl
adc
and
mov
sahf
mov
xor
shrb
lret
nop
scas
push
jb
and
into
scas
pop
xchg
dec
setl
ret
ljmp
mov
mov
xchg
mov
sti
adc
inc
hlt
mov
xlat
out
jno
lods
leave
push
test
stc
inc
das
int
xor
mov
leave
jns
jns
inc
test
and
jb
movsl
js
jae
data16
pop
lock
sub
or
mov
in
in
cltd
mov
into
pop
pop
push
arpl
into
iret
pop
mov
push
push
push
xor
repnz
pusha
or
jns
pop
shll
pop
enter
inc
push
mov
ds
cmp
out
out
sub
sbb
add
fwait
getsec
notl
ljmp
xor
fs
scas
stos
imul
mul
mov
mov
inc
mov
cwtl
arpl
mov
push
sub
jnp
or
rcll
inc
jne
imul
or
pmaxub
rcr
lds
pop
cmpsb
ret
jge
and
cli
mov
jno
pusha
in
or
lea
push
jp
aas
jns
cmp
sbb
push
adcb
xchg
or
movsl
scas
mov
loop
or
aaa
jno
adc
fwait
cs
inc
loop
daa
inc
nop
pop
pop
or
divl
push
pusha
pop
pop
push
sbb
mov
mov
cmp
negl
sub
fcom
add
repz
arpl
ja
cmp
push
mov
mov
add
testl
mov
je
mov
sbb
jb
movsl
dec
stos
nop
or
pop
xchg
jmp
inc
fs
rcll
outsb
push
or
mov
add
call
jno
jns
shll
xlat
inc
or
ss
xorl
xor
jmp
mov
outsb
test
sub
stos
into
or
gs
imul
outsl
mov
sbb
mov
icebp
dec
add
inc
into
ds
call
aam
inc
jge
cmpb
cli
or
stos
xor
stc
push
cmp
call
and
test
jb
sbb
outsb
rcrb
cli
icebp
add
xor
in
loope
pop
jae
loope
xchg
dec
push
xor
adc
pop
cmp
sbbb
dec
cli
jecxz
push
pop
pop
dec
cld
xchg
lods
psubq
fisubs
insl
outsl
jg
mov
xor
xchg
movl
and
xor
decb
icebp
shrl
sbb
dec
mov
mov
cmp
rclb
aad
inc
sbb
leave
mov
add
push
xchg
mov
aas
fidivrs
add
add
sar
data16
mov
out
fisubrl
mov
add
cmp
movsl
dec
cld
dec
std
int
ss
lds
jbe
mov
sarb
sub
dec
push
bound
xor
rorl
divb
rcll
push
pushl
rorl
fsubs
push
pushf
iret
or
stos
lods
movsb
cmc
mov
jg
inc
push
push
adc
cmc
insl
lahf
pop
shrb
iret
push
mov
pop
int
xchg
mov
inc
lcall
aaa
fs
mov
mov
into
mov
push
ljmp
paddb
and
outsb
fdiv
push
andb
xor
testl
dec
repz
in
movsb
mov
inc
fdivrs
pop
xchg
jb
inc
fwait
test
dec
cmp
inc
cwtl
push
mov
test
enter
out
mov
adc
loope
add
push
add
mov
mov
cmp
and
mov
lds
inc
jbe
inc
les
or
popf
rorl
ret
mov
int3
dec
pusha
in
lcall
shrb
add
sbb
mov
adc
pop
mov
dec
popf
fldt
pop
negb
jb
xor
mov
jle
dec
sub
mov
adc
aaa
mov
inc
lcall
xchg
ret
and
add
jbe
js
scas
xchg
mov
push
pop
arpl
jb
outsl
xor
es
inc
mov
inc
out
icebp
outsl
mov
std
into
rorl
push
andb
and
fcompl
push
ljmp
stos
or
in
movsl
xor
jne
sbb
orl
mov
or
xor
ss
mov
sub
jp
and
in
bound
jle
xor
jno
out
pop
and
sahf
add
xchg
insl
cli
ret
add
loopne
pop
cli
mov
add
jmp
xchg
and
movsb
pop
jge
mov
lea
lods
mov
pop
push
push
jg
mov
mov
mov
push
add
and
and
cwtl
dec
jl
and
notl
lods
adc
pop
pop
pusha
out
popf
int
pop
popa
decl
sbb
mov
insl
in
dec
jecxz
xchg
mov
push
aad
mov
cmp
xchg
xchg
mov
cmp
test
adc
jg
mov
mov
in
jnp
es
push
cwtl
xor
jo
aas
push
xchg
inc
dec
dec
xor
sub
mov
sti
push
test
cmp
fwait
inc
add
cmp
add
fistps
xchg
sub
inc
jb
dec
dec
dec
imul
or
pop
mov
pusha
addr16
stos
loopne
test
flds
fiadds
movsb
rcl
into
jmp
popf
mov
xchg
dec
mov
mov
push
testl
add
xor
pop
xorl
imul
movsb
jge
lcall
jecxz
jno
or
mov
fwait
push
shl
xor
je
imul
out
pop
or
cli
inc
jl
cmpsl
add
dec
sahf
mov
and
mov
push
mov
cltd
adc
inc
mov
sahf
xchg
addb
mov
mov
rcll
jnp
mov
xchg
cmp
nop
pushf
lds
push
sub
insl
mov
aaa
sub
out
les
jb
push
and
jnp
push
and
mov
and
lcall
jnp
pop
fstpt
stos
arpl
jl,pn
jmp
orl
ja
out
hlt
xor
push
add
sbb
mov
loop
pop
sub
or
jno
and
dec
iret
orl
jb
inc
pop
adc
js
mov
adc
xorb
jp
mov
out
cmp
imul
add
xor
or
fisubl
push
repnz
rorb
subl
sbb
and
cmp
mov
jle
je
ret
leave
addr16
pop
std
xor
xor
mov
dec
jmp
cltd
inc
sub
push
pop
dec
adcl
fimuls
int3
divl
or
dec
ljmp
adc
lret
lcall
mov
cmp
cmpsl
mov
aam
add
add
add
iret
cmp
outsl
jecxz
push
insl
mov
mov
add
pop
les
movsl
call
mov
jb
fsubrl
clc
mov
sbb
jge
daa
jns
testl
fwait
subb
xchg
and
lods
dec
or
in
push
or
out
and
outsl
inc
repnz
data16
iret
cmp
xchg
cmp
ret
js
jne
iret
fbstp
into
pusha
inc
cwtl
ds
dec
stos
rcrl
dec
in
jmp
ja
outsb
pop
insl
ss
hlt
xor
add
jno
mov
pop
lea
adc
mov
mov
mov
les
or
cli
out
jns
xchg
mov
shr
jecxz
push
test
mov
shr
xor
push
loop
nop
fucom
outsb
push
xchg
sub
xlat
push
jae
popa
dec
mov
cmpsl
add
pop
repnz
out
addr16
dec
xchg
xchg
imul
mov
repz
mov
sub
mov
xchg
mov
mov
xor
mov
inc
test
sahf
dec
add
scas
jle
mov
lods
sub
arpl
aad
push
xor
push
mov
lds
and
ljmp
mov
push
fmuls
jne
and
test
xor
mov
jnp
adc
popa
sbb
sub
sti
or
imul
inc
lods
cmp
or
imul
in
adc
fldcw
mov
pop
cmpsb
fistpll
jle
mov
jmp
in
mov
data16
fstps
rclb
cmp
sbb
xchg
pop
sub
mov
jecxz
lods
mov
jmp
inc
je
xor
cmp
push
dec
test
clc
adc
icebp
enter
dec
add
movsb
ja
xor
cmp
sbb
addr16
lcall
push
mov
out
scas
mov
insl
sub
sbb
adc
sub
mov
jne
rorl
dec
insb
pop
inc
dec
mov
in
jp
mov
cmpsb
cld
es
cmp
push
sbb
out
in
push
test
clc
aaa
lar
add
jae
push
incb
push
daa
sbb
data16
sub
jl
xor
add
mov
std
or
adc
inc
out
sub
sbb
enter
loopne
shll
jge
repz
push
mov
push
push
or
in
stc
nop
vunpckhps
cmp
mov
push
les
mov
out
push
pop
fnstsw
push
mov
adcl
cs
jmp
or
out
sub
adc
stc
fisubl
mov
pop
in
pop
lods
and
inc
addl
fs
icebp
aas
jae
incl
pop
cmp
add
addr16
xchg
adc
add
cmpsb
sarl
std
mov
cmpsl
xlat
adc
sbb
mov
add
repz
ja
jmp
mov
fwait
add
clc
push
sbb
mov
xor
cmp
cmp
insb
add
sub
jae
cmpsb
lcall
jl
and
pushf
arpl
and
call
jno
dec
imul
add
mov
test
out
movhps
inc
or
xchg
je
or
fldl
adc
adc
xchg
outsb
leave
mov
or
jmp
mov
adc
inc
pop
add
iret
xor
jecxz
mov
popf
xchg
decl
mov
and
pop
push
addr16
xor
lods
call
idivl
pop
cmpl
test
lods
lods
and
jbe
cli
inc
popf
pop
outsl
dec
int3
push
adc
mov
cmc
adc
sub
scas
push
mov
push
outsb
mov
adc
jns
pop
in
push
stos
mov
add
notl
imul
inc
mov
and
inc
loop
add
movsb
out
testb
call
jecxz
out
fbld
mov
jnp
bnd
adc
inc
add
dec
mov
inc
icebp
sub
test
adc
pushf
adc
js
sub
xchg
cmp
pop
xchg
cmp
inc
lods
sub
cmovbe
cwtl
sbb
mov
mov
test
iret
mov
add
out
dec
fcompl
ljmp
adc
ret
xor
adcl
int
in
imul
popa
sbb
add
add
adc
push
std
and
push
loopne
outsl
or
add
repz
add
dec
mov
bound
in
or
mov
test
es
and
xorb
push
insl
sbb
sub
cmp
jae
sbb
lcall
and
lea
mov
ret
ds
arpl
xchg
mov
mov
xorl
fs
movsl
cmp
adc
mov
ljmp
jmp
adcl
ljmp
sub
sub
push
fdivs
shll
xchg
shrl
inc
pop
pop
in
mov
jg
ss
dec
addr16
mov
in
daa
cwtl
mov
out
out
cmp
lahf
psubd
cmp
pop
mov
arpl
sbb
mov
or
push
scas
cmp
loopne
mov
sahf
clc
or
daa
adc
mov
enter
inc
push
xchg
aad
outsl
jl
jns
arpl
jge
mov
les
outsl
dec
cs
popa
or
iret
sbb
lahf
test
sub
rolb
cld
jge
push
aas
and
xchg
cmpl
imul
repnz
sbb
arpl
cwtl
andb
or
sub
or
inc
push
in
dec
fnstsw
inc
sbb
in
gs
jge
or
push
sub
pop
cmp
ret
shrl
out
jbe
scas
inc
xor
sti
loop
pop
add
movsl
or
scas
enter
dec
push
filds
fstp
call
movsb
ret
mov
cmp
sahf
loopne
movsl
les
cmp
and
push
push
loope
pop
iret
push
jl
mov
xsavec
mov
in
int
jae
mov
lahf
or
rorb
pop
loop
insl
test
push
outsl
repz
pop
cmp
je
jo
gs
daa
mov
xchg
add
push
add
sbbb
scas
push
lret
jmp
lahf
sub
lret
pop
mov
sahf
sub
ror
push
popa
lea
inc
sub
push
lods
xor
sbb
dec
cmp
push
int
sbbb
popa
inc
mov
jg,pt
sub
cmpsl
mov
cli
orl
mov
fdivr
and
xor
pop
lea
pop
test
jnp
popf
mov
insl
push
or
adc
pop
mov
scas
mov
es
stos
push
inc
lar
lea
jbe
enter
repnz
mov
es
add
dec
xchg
stos
aad
pusha
sub
into
mov
xor
cmp
out
push
xchg
rcrl
std
out
stos
xchg
jl
stos
fwait
push
or
or
icebp
imulb
scas
lock
loop
addb
or
xchg
jns
sbb
push
jecxz
sar
xor
pop
xchg
mov
dec
cmpsl
add
mov
aaa
test
mov
ret
adc
jp
aaa
push
rcrb
xchg
cwtl
sti
bswap
filds
mov
dec
test
push
inc
jl
test
pop
jg
iret
loopne
in
loop
addl
fprem1
fdivrs
cmc
adc
inc
push
sub
aad
sbb
xorl
mov
jae
adc
mov
inc
and
pop
add
pushf
push
jae
mov
arpl
aas
add
out
sub
jae
lds
aas
lcall
lods
popa
add
mov
and
cli
pop
xchg
jg
xchg
xor
arpl
cmpsb
lahf
mov
cwtl
jecxz
add
mulb
shrb
add
dec
dec
jns
inc
cmpsb
mov
xchg
lods
imul
dec
lea
pmulhuw
jbe
xchg
in
xchg
lods
push
cli
mov
je
mov
cmp
jp
ror
sti
lcall
mov
out
jge
pop
shrb
stos
lock
mov
jno
mov
aaa
out
xchg
mov
jne
fisubrl
xor
inc
mov
iret
es
add
push
shrb
ljmp
sbb
cmc
ja
mov
sbb
imul
rclb
xchg
lret
ss
lock
push
mov
lret
adc
jle
mov
aad
cld
pop
das
inc
fstps
sub
xchg
xchg
add
out
adc
out
sbb
mov
add
add
bswap
test
dec
or
movb
repz
add
sbb
add
sub
enter
sub
jnp
push
push
jns
pop
cld
mov
inc
push
jmp
push
fistpl
dec
out
dec
sbb
push
mov
mov
jge
shll
push
push
mov
jnp
jae
rcrl
push
insl
and
pop
incb
dec
jg
push
loope
nop
pop
nop
or
pop
das
push
dec
cmp
dec
orb
mov
call
sbb
push
jo
rcl
dec
cmp
xor
push
scas
adc
fcoms
flds
fs
pop
dec
ret
stos
add
int3
bswap
out
jbe
push
push
sub
and
sbb
add
mov
fchs
insb
in
mov
pop
cmpsb
loopne
xchg
lret
sub
jbe
inc
fisubrs
or
mov
sub
outsb
mov
int3
ret
inc
das
loop
pop
xchg
lcall
fstl
cmp
mov
fwait
jnp
cmp
in
dec
pop
mov
repz
or
mov
push
les
adc
push
ret
daa
cmc
push
sub
mov
scas
sbb
sub
ss
movsl
std
stc
push
lahf
aas
rcrl
gs
xchg
shrl
pusha
jmp
sti
jmp
mov
xor
pop
jmp
inc
pop
cli
sti
mov
mov
std
xlat
or
popa
xor
or
push
dec
into
dec
fdiv
hlt
dec
jmp
cmp
fbstp
out
add
enter
fbld
mov
sti
lcall
xchg
pop
or
xchg
dec
xorps
cmp
inc
mov
adc
inc
jmp
sub
test
jmp
sahf
and
mov
dec
fimull
cld
jecxz
enter
ret
sub
clc
cmp
arpl
cmp
cmpsl
cmp
add
push
and
add
fmulp
push
popa
dec
cmp
data16
pushf
pop
sbb
movsl
vunpcklps
add
mov
inc
inc
cmp
insl
xchg
pop
in
dec
jp
ror
or
in
lods
inc
pop
hlt
rcrb
pop
adc
iret
inc
pusha
xchg
movsl
mov
lods
jle
mov
cmc
jle
push
bound
sbb
stc
xchg
loop
repnz
jae
test
sub
arpl
mov
pop
fucomp
arpl
dec
dec
fs
sub
adc
icebp
mov
int3
ret
out
sub
pop
pop
xor
dec
push
adc
into
inc
repnz
add
scas
aaa
dec
enter
mov
iret
gs
imul
lods
stos
and
lret
jo
int
ret
fdivp
scas
ret
jmp
sub
xchg
xchg
mov
and
mov
mov
inc
push
mov
cwtl
aam
push
jecxz
mov
lret
pop
sbb
popf
xor
jo
jns
lcall
nop
and
sahf
or
in
aas
sub
subl
lds
push
push
gs
inc
fwait
repz
mov
movsb
push
out
dec
dec
rcl
testb
sbb
pop
leave
xchg
mov
cmc
out
sahf
jbe
cld
jp
mov
dec
jle
mov
ljmp
daa
fwait
sub
mov
inc
es
mov
pop
mov
insb
jb
sub
jno
adc
or
push
jmp
mov
mov
add
push
or
fistps
add
not
inc
fcom
jmp
movsb
dec
jle
lds
dec
inc
cmp
pop
and
pop
inc
cmp
pop
xorl
daa
shlb
mov
int3
mov
data16
dec
fmuls
push
sbb
or
dec
mov
mov
ljmp
mov
shr
xchg
jae
inc
ds
sub
jmp
loop
data16
mov
ja
adc
sub
pusha
or
sbb
xlat
cmpsb
repz
adc
sbb
push
add
dec
mov
jl
lret
std
mov
xchg
fisubs
scas
repnz
fs
bound
test
mov
xor
cli
pop
sbb
loope
adc
leave
fldl
ds
or
push
lds
pop
movups
in
sub
mov
andb
mov
andl
sub
fistps
or
inc
push
cwtl
and
es
sbb
jge
sbb
mov
dec
std
jbe
nopl
popl
out
xchg
add
jg
cmc
or
inc
sub
add
repz
add
std
ja
push
roll
push
mov
inc
mov
shrb
jne
fsub
test
aam
sbb
je
lods
inc
pop
xchg
out
addr16
lret
dec
popa
add
jge
lock
std
enter
sar
in
jmp
xchg
rclb
mov
pop
shll
sahf
mov
pop
mov
push
popa
andb
sub
sets
pop
sbb
fidivrl
stos
aad
imul
cmp
cmp
mov
cmp
mov
clc
stos
lcall
loopne
lods
push
adc
inc
sub
cmpsb
or
lret
sar
jl
inc
jecxz
mov
fs
fisubl
loope
jge
sarl
mov
dec
mov
repz
aad
test
imul
xor
cwtl
lea
cmpsl
lock
popf
out
add
sub
pushw
pop
dec
or
inc
not
pop
mov
jp
add
imul
inc
or
cmpsb
mov
movsb
or
in
xchg
dec
int3
orl
cmp
jo
mov
orb
inc
pop
sarb
mov
ljmp
or
bswap
sbb
jns
pop
call
aas
shrl
psubw
in
or
and
out
mov
dec
les
jbe
and
inc
rolb
pop
in
jle
jg
adcb
xchg
xor
fs
fmull
pop
fildl
xor
sbb
add
cwtl
dec
icebp
sub
iret
lods
xchg
mov
inc
icebp
loope
inc
mov
ret
mov
sbb
je
jecxz
pop
xor
sahf
dec
and
sbb
or
sahf
jl
jge
insl
in
and
js
dec
pop
fcompl
and
movsb
mov
cmp
sarb
sbb
jecxz
mov
xor
gs
movsl
sub
mov
dec
or
pop
ja
xorb
pop
decb
jle
dec
cmp
adc
dec
dec
imul
mov
xor
or
imul
pop
sbb
ror
int
loop
push
orl
out
sbb
add
push
push
jns
mov
xchg
ljmp
notl
xor
or
shl
adc
jns
xchg
cs
in
shll
or
test
adc
pop
and
sbb
sub
daa
pop
outsl
xor
push
insb
mov
ret
mov
js
jmp
outsb
lret
movd
mov
dec
adcb
cmp
or
roll
in
jmp
or
sub
sbb
mov
ret
or
ljmp
out
pop
neg
arpl
mov
mov
jmp
pop
scas
jne
ror
mov
inc
jae
pop
fsubl
mov
mov
jbe
iret
movsl
cmpsb
insl
mov
xchg
jbe
inc
sub
xor
adc
mov
imul
fbld
and
ljmp
repz
xchg
stos
inc
shll
add
or
mov
imul
pop
pushf
insb
out
lret
cmpl
xchg
push
popa
adc
out
cld
stos
and
xchg
shrb
dec
push
pop
lock
and
or
test
in
call
sbb
mov
push
and
cmp
mov
dec
xor
jae
cmc
cmpsl
push
std
fwait
sti
ja
ja
mov
stos
adc
push
cmp
sbb
cltd
dec
lds
jl
add
sub
enter
cmp
dec
shr
and
mov
loope
fidivs
jb
cmpsb
xchg
ds
outsb
or
xchg
dec
stos
sub
push
add
add
xchg
leave
mov
rcrl
dec
popa
lret
aas
addr16
out
xor
iret
out
jp
inc
adc
xor
and
push
je
rcrl
and
pushf
xor
and
lods
cwtl
call
insl
lret
lds
insb
push
push
adc
cmp
clc
pop
fdivl
arpl
data16
dec
mov
jge
pop
mov
sbb
jecxz
and
dec
imul
xchg
inc
jo
add
fnsave
inc
in
addl
inc
shlb
cmpsb
pushf
adc
xor
adc
adc
pop
div
imul
test
sbb
mov
mov
mov
and
ret
jecxz
add
add
add
outsb
out
lds
into
xchg
xchg
rolb
add
add
add
out
lret
jae
pop
adc
mov
aam
jbe
jmp
xor
js
push
sbb
fdivrs
into
lret
jo
mov
fimull
loopne
ds
sub
jle
mov
rorb
mov
mov
push
jns
test
cwtl
jae
cmp
in
push
leave
add
xchg
bound
cwtl
cld
jecxz
xchg
pop
cmc
adc
loope
int
pop
in
ljmp
pop
mov
bound
mov
leave
xchg
xlat
push
push
push
push
shlb
pop
roll
cmp
das
dec
loope
or
iret
pop
jle
fadds
cmp
mov
cmp
adc
jnp
mov
clc
xor
outsb
sbb
fimuls
lea
dec
mov
jecxz
lcall
enter
stc
in
js
mov
pop
and
sbb
pop
push
push
insl
pop
out
jb
inc
mov
jp
xchg
xchg
icebp
xchg
pop
sbb
jne
in
mov
mov
clc
fdivrs
ds
pop
ret
xor
mov
add
mov
in
sub
push
xchg
rcrl
jmp
mov
dec
add
xor
cwtl
jbe
sub
cmc
inc
mov
ljmp
test
rep
jno
rcrb
mov
shl
push
adc
cmpsl
xchg
fwait
lods
dec
mov
or
mov
xchg
cli
ss
mov
xorb
cld
aas
lods
xor
jle
mov
lods
inc
mov
clc
lods
stc
add
sbb
ficomps
pop
and
cli
aad
xchg
dec
imull
push
sti
jb
stos
sti
rcrb
adc
fiaddl
mov
jge
dec
pop
add
mov
pop
addr16
nop
bound
int3
push
adc
jno
push
jl
or
cmp
lods
fidivrl
daa
cmp
pavgb
sahf
and
sub
cld
test
aad
adc
adc
neg
dec
jne
ficoms
sbb
or
fistl
sbb
scas
mov
jmp
pop
iret
push
sbb
jne
in
sti
out
cmp
pop
adc
aam
push
mov
mov
xor
imul
jecxz
popa
jg
mov
gs
mov
mov
std
cmp
movsl
sahf
lret
cmp
cli
int
shlb
out
inc
fs
and
xor
jp
pop
andl
and
mov
jne
cli
lret
mov
mov
pop
fcoms
lret
mov
mov
xchg
test
inc
xchg
mov
or
fisubl
fidivs
cs
call
add
dec
mov
and
repz
subb
out
inc
push
mov
inc
int3
lea
lock
aam
out
lock
cs
adc
shll
test
dec
cmp
int
js
xchg
and
into
hlt
cmc
loope
mov
test
dec
lea
imul
leave
into
inc
xchg
aam
cmp
push
push
das
pop
nop
adcb
mov
pop
add
mov
dec
jnp
or
bound
add
addr16
lea
push
sub
jne
mov
fyl2xp1
sub
or
call
call
push
iret
cmp
jle
mov
ss
or
icebp
inc
sbb
pop
imull
jb
insb
mov
push
in
dec
stos
movsl
cmp
repz
mov
sti
in
inc
movsl
add
xor
add
outsl
fmull
cmp
in
lahf
add
sbb
fidivrl
pop
inc
loop
test
push
adc
pop
add
lret
xor
mov
add
mov
sub
xchg
sti
dec
iret
dec
cld
and
mov
xchg
bound
arpl
outsl
shlb
test
push
xor
inc
pop
mov
sbb
pop
push
jmp
lahf
outsl
mov
ss
lahf
jl
dec
cmc
addr16
xchg
push
arpl
je
jecxz
add
mov
mov
dec
push
jmp
clc
jnp
xor
lods
sbb
inc
fs
sbb
pop
push
scas
add
stos
ljmp
mov
xorb
dec
stc
dec
imul
enter
loope
stos
mov
xor
adc
jl
xchg
adc
cwtl
leave
or
ret
add
gs
fsubrp
insb
inc
xchg
enter
arpl
add
add
out
lret
lods
xlat
sti
mov
int3
xchg
aad
add
repz
add
pop
jb
add
add
movsb
popf
sbb
jno
cmp
dec
fcmovne
rcrb
pop
test
xor
xor
jbe
addr16
jne
mov
or
dec
bswap
das
or
pop
stos
cmp
pusha
pusha
enter
or
xor
int3
sub
or
jae
and
xor
je
xlat
out
mov
sub
dec
enter
test
add
lea
mov
push
push
popf
fwait
or
mov
fldl
sti
mov
xor
addb
xchg
daa
mov
push
push
mov
push
sbb
addr16
stos
and
bound
outsb
or
mov
push
pop
sub
mov
and
lds
enter
adc
int3
mov
jecxz
mov
dec
xchg
pop
lds
in
mov
sub
gs
outsl
imul
imul
jns
loopne
sbb
xlat
lahf
or
xchg
sti
fistpll
jecxz
or
sbb
and
pop
adc
ja
mov
divb
dec
xor
scas
stos
push
mov
sub
adc
insl
and
jg
or
and
inc
mov
aam
mov
or
les
dec
ret
dec
rorl
adc
mov
stos
in
sbb
cmpb
stc
push
cs
mov
mov
sbb
add
loope
or
iret
push
leave
dec
pop
fadd
inc
rorl
je
fmul
int3
adc
cmpsl
cmc
mov
or
xchg
sbb
cmp
xchg
pop
sarb
push
shrb
push
mov
push
adc
mov
aad
out
and
pop
xchg
pop
sbb
test
fsubs
scas
xchg
loope
mov
sub
cmc
push
call
outsb
dec
or
rcrb
push
adc
shlb
leave
mov
stc
addr16
fldenv
rol
cmpsl
jmp
das
bnd
fwait
cmc
ret
cmp
dec
pop
push
pop
dec
cld
jmp
idivb
out
sarb
imul
pop
ja
daa
sbb
jmp
xor
push
push
jg
inc
push
dec
cld
mov
mov
jg
mov
dec
and
jb
push
lcall
jnp
sbb
cli
mov
loopne
repz
jo
cmp
ret
cmp
loop
add
mov
mov
fcoml
pop
add
loop
shrb
jns
push
adc
idivb
xchg
in
pop
pop
sub
xor
iret
shl
or
rdtsc
push
add
jae
pop
sub
xor
dec
addb
pusha
mov
and
ret
imul
inc
andl
cld
cs
push
roll
inc
sub
in
inc
shld
and
inc
pop
xor
push
shl
mov
jae
cmp
fcomps
andps
daa
std
jle
or
jbe
cmpl
jo
jg
jno
mov
sbb
imul
inc
mov
aas
std
das
popf
adc
xor
jmp
ret
jecxz
mov
or
or
cmc
orb
jmp
lret
mov
int
pop
push
lcall
inc
lret
or
les
insl
pushf
jg
add
idiv
cmp
stos
ret
sub
addr16
stos
mov
addr16
loope
fstpl
dec
adc
push
and
adc
aam
add
icebp
jb
es
push
mov
imulb
inc
adc
dec
mov
andb
sbb
xchg
inc
sarl
out
cld
push
add
pop
std
jl
test
jno
xlat
adc
jne
icebp
adc
jns
pusha
add
in
dec
xor
mov
int3
push
push
ret
or
jle
xor
js
xor
cmp
test
xchg
fldl
dec
clc
ss
ds
inc
pop
mov
jmp
push
cmpb
adc
jle
or
dec
jecxz
mov
or
icebp
insl
fsubrl
das
dec
mov
es
xchg
rorl
out
hlt
test
push
pop
frstor
cmp
lahf
sub
stos
cmp
jae
push
mov
loopne
push
and
jecxz
pop
xor
dec
push
sbb
or
push
mov
ret
adc
sbb
or
fwait
imul
mov
aas
loop
and
add
add
jno
loop
bnd
fcomi
mov
push
jb
enter
repz
add
adc
int
aam
push
xorb
popf
lods
rolb
jl
cmp
leave
xchg
icebp
sub
out
jge
pop
xchg
popa
cli
nop
stos
mov
outsl
insb
data16
jns
push
cmp
lds
inc
mov
mov
iret
and
std
and
dec
hlt
push
cli
or
xor
adc
push
dec
popf
push
lcall
add
cmp
jne
mov
xor
xlat
sub
cmp
dec
push
mov
push
adc
add
or
fstps
sarb
out
xchg
cmp
jg
mov
dec
mov
sbb
push
cmp
sahf
sahf
mov
jmp
push
sub
mov
xor
xchg
ja
popf
dec
imul
call
mov
test
sbb
fs
add
lea
adc
ficoms
pop
sub
mov
das
or
push
inc
add
pop
stos
pop
jae
pop
out
adc
adc
out
ss
faddp
dec
popa
add
aas
sbb
outsl
arpl
mov
adc
adc
mov
movsb
fisubs
cwtl
or
sub
adc
mov
outsb
movsb
test
movsl
cmp
inc
and
or
into
mov
daa
fstpl
outsb
cmp
out
mov
test
sub
jg
xchg
jmp
xchg
xchg
outsl
sbb
sub
in
jge
push
dec
mov
mov
fadds
mov
sub
loopne
fwait
xchg
add
push
rcll
pop
dec
sbb
outsb
loop
pop
sbb
mov
xchg
leave
sbb
sbb
stos
add
ret
mov
cli
and
mov
cmpsl
lret
add
sbb
sbb
out
call
mov
in
push
int3
push
cmp
les
inc
adc
out
popa
sub
and
fidivrl
push
rolb
xchg
idivl
xor
add
ja
loopne
fsts
ud0
sub
data16
and
int
iret
sbb
mov
ret
adc
mov
or
fs
hlt
int3
add
mov
pop
sbb
shll
ret
sub
mov
mov
repz
jns
popa
mov
pop
scas
xor
add
cltd
popf
pop
and
mov
push
jns
sub
int3
in
movsb
jmp
cs
into
xor
dec
push
adc
cmp
ret
add
sub
push
sbb
pushf
cmpsl
test
aas
js
sahf
popf
mov
jg
popa
or
pop
mov
inc
ss
xchg
sahf
dec
cli
xchg
ret
add
push
mov
test
xchg
push
or
cltd
arpl
movsb
cltd
push
ret
xchg
out
sub
pop
jo
lret
sub
test
cs
ficomps
enter
sbb
dec
rorl
fwait
insl
mov
jmp
lods
jl
xor
inc
inc
lea
mov
stos
into
or
xor
pop
add
aaa
outsl
or
mov
clc
scas
call
loopne
or
jo
mov
sbb
pop
mov
jl
pop
xor
rorl
push
das
dec
jns
push
negb
mov
add
shlb
sub
mov
movsl
movsl
mov
out
addr16
fidivrl
add
out
mov
aaa
repz
pop
cwtl
gs
je
inc
jae
cmp
push
push
pop
out
andl
bound
icebp
psubq
ret
hlt
or
push
jl
loop
push
std
mov
xor
sarb
push
repz
ja
mov
add
test
cmp
aad
push
inc
or
rolb
stc
pushf
pop
dec
push
inc
and
and
sti
stos
fwait
pop
lock
inc
nop
movsb
pop
pop
pop
or
popf
test
xor
aam
stos
mov
in
aaa
jns
sbb
jle
push
add
push
sti
adc
lods
pop
adc
arpl
push
push
push
aam
cltd
gs
cmp
ljmp
cmp
or
sbb
push
fst
add
xchg
xor
xchg
push
int
lods
aam
shlb
bound
les
sti
add
stc
inc
adc
and
mov
addl
scas
jne
mov
mov
pusha
dec
jns
jns
mov
add
ss
in
inc
jmp
inc
mov
add
add
lret
mov
outsb
test
mov
jmp
lret
orl
pop
mov
test
inc
into
push
repz
fidivrs
mulb
cmpsb
js
mov
mov
popf
adc
mov
xchg
sbbb
into
push
js
daa
mov
fxch
add
add
pusha
popf
mov
les
jae
cmp
sbb
inc
cmpsl
jmp
sahf
popf
fildl
mov
test
pop
add
sub
push
repnz
or
add
jmp
mov
cmp
adc
fdivl
inc
inc
test
and
or
jae
clc
pop
inc
in
movsb
icebp
shrl
nop
mov
insl
xchg
imull
mov
ret
daa
push
lahf
in
dec
sub
out
sbb
and
mov
xor
pop
test
ja
cmpsb
mov
mov
mov
sbb
out
fwait
xchg
mov
dec
test
sub
push
adc
or
mov
jmp
inc
cmp
and
stos
pop
sbb
xor
dec
call
cmpl
mov
jne
jne
and
outsl
cs
jecxz
fldt
xchg
aas
leave
and
stos
mov
ret
mov
lods
stc
imul
bound
test
mov
xor
push
xlat
lods
out
clc
add
cmp
loope
push
leave
mov
adc
add
sahf
pop
jns
scas
mov
bound
mov
mov
mov
or
xchg
addl
mov
dec
xchg
pop
push
je
out
out
cltd
sub
mov
dec
sbb
rcr
shr
arpl
stc
fsub
sub
mov
rcll
aad
fucomi
push
inc
enter
sub
xchg
sahf
lahf
xchg
jns
stos
dec
lods
fs
ds
fidivrs
push
push
lock
sub
hlt
sar
dec
shrl
cmpsb
and
push
test
mov
mov
pop
je
mov
outsl
popf
adc
mov
add
jecxz
and
pop
xchg
or
scas
insb
test
jnp
int3
push
aaa
jmp
iret
push
ds
jb
sub
inc
push
or
adc
cmp
stos
notl
push
lods
push
add
push
adc
ds
pop
xchg
fs
jbe
sub
in
stc
repz
cs
aas
fwait
popa
sub
push
sub
push
loope
rol
cmc
adc
push
sub
mov
dec
into
pop
leave
dec
loopne
sub
aam
sarb
inc
insl
into
push
mov
in
and
cwtl
fwait
push
mov
mov
addb
mov
ret
lods
xchg
decb
iret
dec
inc
enter
xor
jmp
mov
loop
xchg
ret
cld
mov
jmp
jg
lret
adc
fldenv
pop
bound
push
or
and
and
out
push
cmp
xchg
loopne
fs
jnp
aaa
sarl
sbb
bound
stc
jbe
out
dec
int
push
and
std
jae
mov
xchg
inc
mov
gs
fwait
cmp
hlt
fmull
push
mov
mov
mov
sahf
mov
in
push
fistpll
mov
mov
leave
test
pop
cmp
xchg
sbb
dec
sbb
nop
cmp
adc
jbe
and
fdivr
sub
arpl
outsl
xchg
mov
cmp
push
jae
cltd
adc
daa
rorl
inc
pop
fwait
xchg
push
sar
movsb
sbb
push
out
test
xchg
jp
mov
rcll
add
lods
ret
lahf
and
ss
xchg
dec
mov
or
rcrl
sahf
je
leave
mov
loope
adc
mov
lods
xor
inc
popf
or
insb
lcall
repnz
cmpsl
test
popl
and
xchg
sbb
test
addb
fldt
sahf
mov
pusha
insb
loop
dec
ret
mov
mov
sub
dec
test
mov
lcall
jb
add
mov
mov
pop
jo
mov
push
sbb
sbb
popfw
fimull
sbb
fs
push
fldt
fdivl
sbb
je
sub
lock
adc
mov
mov
mov
loop
mov
mov
adc
add
add
roll
pop
mov
add
add
add
pop
lock
stos
int3
icebp
repnz
fmuls
jb
addr16
imulb
outsb
xchg
pop
adc
add
unpcklps
loope
adc
mov
or
adc
out
mov
push
jp
jae
ja
jo
outsb
insl
loop
mov
cmpsl
test
lahf
addr16
xlat
cmp
xchg
and
pop
jmp
or
shl
mov
sti
mov
jns
mov
mov
ror
cs
das
inc
pop
pop
leave
ja
inc
mov
sbb
or
dec
es
aad
mov
jae,pt
test
loope
and
sub
daa
mov
adc
insl
dec
and
fldt
mov
addl
pushf
xor
test
pop
imul
xchg
add
add
inc
popa
cltd
mov
stos
hlt
xchg
ds
sbb
negl
and
and
pusha
dec
cwtl
lahf
mov
lods
je
and
mov
and
xor
adc
push
loop
in
lds
repz
fdiv
mov
loopne
xlat
lret
push
jns
mov
pusha
lods
push
sub
rcll
pop
jnp
or
mov
stos
push
ja
out
push
fisubl
inc
adc
xor
movsl
cmp
cmp
dec
push
and
es
xchg
jmp
mov
dec
add
and
fnsave
jl
xchg
data16
test
pop
stos
sbbl
js
mov
mov
sub
or
fisubl
jmp
cmpsb
add
cmp
in
aad
pop
addr16
mov
test
enter
out
push
call
cmp
shl
sbb
loope
adc
popa
mov
stc
xchg
popf
or
imul
and
fwait
lahf
sub
lods
mov
jne
push
dec
repz
int
adc
sarl
aaa
repz
inc
xor
mov
stos
xchg
cmpsl
dec
es
cmc
icebp
pop
xchg
inc
pop
loope
out
mov
or
call
jecxz
or
mov
ds
mov
xchg
insb
sbb
shlb
out
mov
mov
sbb
jne
mov
in
mov
xchg
lret
ljmp
dec
les
dec
cmp
cmp
movsl
xchg
loopne
jecxz
sbb
lock
cwtl
outsl
ret
std
push
sbb
in
outsb
cmp
adc
pop
rorb
dec
dec
jmp
pop
jmp
dec
jae
inc
mov
jg
clc
movd
bnd
es
mov
lcall
test
push
mov
jmp
shl
jns
pop
popa
aas
outsl
push
jge
sti
ffreep
push
gs
aas
xor
in
jae
push
lret
stos
mov
ss
pop
sbb
or
ljmp
andb
cmp
and
cwtl
push
pop
jns
enter
and
sub
ret
imul
es
sub
pushf
movmskps
pop
inc
or
pop
mov
roll
test
inc
inc
faddp
jmp
scas
pop
xor
xchg
inc
popa
adc
or
frstor
or
or
in
pushf
adc
lahf
mov
sbb
xchg
cmp
aam
data16
cmp
sbb
or
call
idivl
fbld
pop
and
imul
mov
push
adc
and
push
mov
and
push
pop
push
lods
sub
fs
in
inc
and
rcll
cmovo
out
int3
rcrl
iret
rorb
pushf
bound
mov
fdiv
mov
incl
mov
jnp
jbe
addb
pop
scas
inc
push
outsb
mov
loope
popf
in
loop
xor
rcrb
add
mov
inc
mov
ja
sarb
mov
sub
sub
ret
mov
int
mov
dec
icebp
cli
enter
sarb
jnp
and
lods
mov
and
jbe
ljmp
es
cltd
int
shrl
add
mov
lret
pavgb
rorb
pop
push
iret
je
cmpsb
push
xor
mov
sub
xor
push
mov
dec
outsl
push
xor
int
inc
jmp
mov
rol
xchg
inc
mov
mov
addr16
mull
sti
adc
popf
push
lea
stos
aas
lods
push
adc
inc
jno
outsl
rcl
xchg
pop
xchg
call
cmp
imul
int3
outsl
dec
insb
mov
jno
scas
repz
add
fwait
xor
pop
icebp
adc
pop
stos
add
add
add
xchg
std
repz
inc
lock
sbb
mov
add
add
stc
jge,pn
lret
and
insb
sub
or
shlb
cltd
pop
xor
add
mov
xor
sarl
xchg
gs
pop
pusha
dec
clc
insb
and
fcmovb
xchg
mov
pushf
cmpsb
jns
aam
adc
dec
fs
gs
jecxz
or
lods
push
insl
mov
jle
jae
hlt
fdivrl
sbb
push
repnz
add
push
aas
repz
ret
mov
rorl
jmp
jecxz
lods
xchg
mov
mov
mov
pop
popl
sbb
pop
cwtl
scas
xor
jne
push
lock
mov
xchg
mov
lahf
ss
sub
jbe
push
inc
adc
xchg
jno
add
push
lahf
mov
mov
adc
clc
mov
jl
pusha
jl
mov
adc
scas
stos
sti
repnz
sub
dec
sahf
test
dec
or
into
xchg
sbb
sub
ret
xor
mov
cli
sete
push
stc
ss
cmc
or
mov
sbb
and
shl
mov
clc
jae
idivb
psraw
xlat
cmc
inc
cmpsb
into
pop
and
lcall
cs
stos
or
or
mov
adc
and
out
mov
out
sbb
dec
sbb
clc
aas
xor
jo
aam
lods
push
rcrl
mov
clc
in
daa
xor
xchg
jl
cwtl
hlt
pop
adc
add
or
jl
xchg
adc
lods
ds
test
jecxz
sbb
fildl
pop
fmuls
xor
sbb
inc
test
xor
mov
pop
jmp
sbb
add
xchg
popf
imul
fdivl
repz
fs
mov
shl
in
xchg
mov
cmp
mov
xchg
sbbb
das
and
or
std
in
cmc
fs
int3
sti
int
jae
in
aad
mov
lcall
push
add
xor
jecxz
mov
mov
sahf
xorl
fiadds
mov
icebp
mov
outsb
inc
loop
inc
std
pop
andl
and
push
add
stos
stos
icebp
aas
sub
movsl
out
test
aas
insl
sbb
enter
call
xor
test
adc
daa
sub
add
xchg
pop
pusha
in
jne
popf
adc
push
js
sbb
shl
or
and
ret
and
dec
lret
mov
mov
mov
pop
push
xor
out
jecxz
mov
mov
adc
mov
xor
fs
push
ds
sarl
jge
or
push
enter
scas
lahf
dec
sub
ja
mov
addr16
scas
xlat
push
pop
cwtl
repnz
pop
fsubr
dec
dec
xchg
insl
adc
fidivl
push
pusha
or
cmp
test
shl
mov
lea
inc
lods
cmp
mov
andb
sub
jecxz
addl
jecxz
insb
xor
sahf
xor
cwtl
add
repz
clc
rolb
and
sarb
shrb
push
repz
xchg
sbb
add
bound
add
nop
inc
scas
outsb
cmc
push
movb
jmp
rolb
sbb
add
rcl
cmp
adc
cmp
orb
xchg
int3
sbb
mov
cltd
dec
mov
enter
sbb
xchg
adc
std
in
mov
jge
sub
push
mov
in
inc
mov
adc
xchg
cmc
xchg
or
push
inc
dec
jle
or
dec
adcb
jge
add
pop
imul
jmp
lods
xorl
inc
incb
fldt
jae
cmp
sub
scas
jg
mov
shrb
ror
iret
setle
nop
ficoms
jnp
enter
lods
inc
sub
es
sub
movq
es
xor
mov
js
or
lret
call
test
adc
jecxz
aas
mov
sub
sbb
sbb
sbb
push
fstpt
sbb
xchg
fxch
mov
xor
in
xchg
dec
push
loope
js
xchg
inc
cwtl
inc
sub
cld
mov
out
iret
fcom
out
pop
push
daa
mov
mov
std
lock
es
inc
mov
push
mov
leave
and
adc
shlb
add
add
add
les
std
mov
repz
repz
add
movsl
aad
push
nop
stos
pushf
add
cwtl
fstpt
jle
sub
push
lods
aas
dec
mov
in
push
stos
sbb
mov
gs
notb
mov
test
sbb
cmp
stos
fisubs
dec
call
and
iret
out
aaa
mov
and
jb
and
mov
aad
pop
test
pusha
xor
sub
cli
pop
leave
add
in
cmp
add
cltd
mov
cwtl
adcl
or
adc
daa
adc
mov
inc
into
inc
mov
pop
repnz
jge
jbe
popf
fbld
or
repz
mov
stos
jp
loop
sbb
sbb
mov
jno
arpl
or
cmp
push
ficoml
adc
cmp
mov
shl
pusha
push
pop
xor
repz
xchg
lahf
orb
jmp
push
rcll
inc
repnz
test
push
mov
into
fldl
test
rolb
cli
jle
fwait
mov
mov
push
xor
xchg
dec
clc
xor
fdivl
dec
fldt
negb
clc
xchg
pop
jns
loop
aam
pop
jbe
fdivr
xchg
add
test
in
or
test
xchg
hlt
shr
outsb
and
in
leave
leave
jb
fstp
sbb
gs
cmpsb
in
or
push
jnp
jmp
xchg
test
les
mov
scas
add
dec
cwtl
mov
add
andl
shll
jae
movsb
btr
mov
jle
adc
push
sub
pop
add
mov
repnz
icebp
or
imul
imul
inc
and
adc
frstor
int3
and
and
es
and
add
hlt
jns
es
dec
orb
lret
rorl
imul
shl
fsubrs
int3
jno
rorl
mov
cs
jbe
pop
xchg
inc
pushf
loope
insl
addb
push
std
or
adc
sub
xchg
mov
mov
out
jl
aaa
or
stos
jae
mov
and
xchg
lret
and
jl
call
pop
jmp
dec
push
push
sbb
icebp
add
push
xor
dec
into
inc
fsubrl
jmp
inc
push
xor
scas
jbe
and
scas
mulb
data16
imul
cli
popl
sbb
cmpsb
clc
mov
das
and
cmpsb
add
adc
int3
and
movsb
lahf
add
js
mov
pushf
push
adc
and
xchg
stc
je
test
adc
add
pop
lds
cmpsl
insl
dec
subl
adc
and
adc
imul
imul
mov
fistpl
sbb
and
or
cltd
mov
repnz
cmp
popa
push
push
jle
fs
cmpsl
popf
std
xchg
pop
add
stos
ret
or
lret
sub
stos
je
mov
xchg
shrb
jmp
push
xlat
in
bound
cmp
cltd
mov
jno
push
mov
aaa
adc
or
cmp
jg
adcb
or
push
imul
sbb
inc
rcl
xchg
mov
sub
xchg
fnstenv
cwtl
push
call
lods
rcll
popf
les
stc
xor
imul
movsl
jg
adc
pop
adc
sub
mov
cmpsl
sahf
sbb
xlat
jp
sub
sub
xchg
lret
cwtl
cmp
leave
cltd
and
test
stos
xchg
loopne
rcl
push
stc
mov
movb
jns
push
and
sbb
test
outsb
xor
sub
dec
mov
push
call
inc
inc
adcl
lea
aas
cmpsl
sahf
xchg
jae
dec
lahf
push
adc
outsb
pop
daa
xchg
add
iret
fnstsw
and
cld
sbb
inc
cmpsl
jge
mov
and
aam
inc
inc
mov
cmp
pop
stc
push
aad
xorb
loope
loopne
insl
mov
ret
adc
out
xchg
out
or
cmc
pop
adc
mov
aad
shl
leave
pop
push
cmp
rol
xlat
adc
dec
arpl
or
sub
and
pop
mov
lods
jmp
or
xchg
xor
scas
push
outsl
mov
mov
add
add
ja
push
dec
shr
jg
push
mov
arpl
xchg
add
repz
add
int3
outsl
int
inc
movd
pop
daa
mov
jecxz
push
jno
inc
pushf
bound
and
les
test
and
xorb
stc
roll
inc
fs
test
xchg
sub
lret
mov
pop
fstl
ret
loopne
cmp
jle
sbb
in
in
push
inc
lea
pusha
nop
fidivs
mov
dec
jle
cmp
in
in
and
mov
dec
adc
sub
cli
es
and
mov
std
and
xchg
lds
in
imul
call
push
and
jle
mov
data16
mov
sbb
push
inc
or
stc
sub
pushf
inc
jp
arpl
pop
iret
ret
sbb
mov
mov
sub
mov
movsb
flds
add
xorb
cmp
in
lea
dec
pop
jp
push
je
cmp
xchg
sub
adc
rcrl
rcll
in
mov
mov
fnstsw
cli
or
nop
xor
insl
movsl
xor
sub
add
popa
mov
inc
lret
fdivs
test
dec
psubb
jo
sub
popf
mov
xor
int
jge
shlb
fdivs
dec
mov
rcrb
push
cmp
jge
mov
jne
or
sbb
cs
dec
xlat
push
jne
adc
lea
movsb
dec
jg
jbe
cmc
iret
xchg
in
pop
sbb
and
sub
adc
insl
mov
add
inc
or
cld
jcxz
lret
push
cmc
xlat
and
sbb
sub
or
pop
sahf
inc
sub
xor
fnsave
mov
push
push
lret
xchg
js
mov
outsl
mov
sbb
jae
and
pop
inc
pop
test
xchg
cmp
mov
sbb
scas
lret
cs
sti
pushf
sub
pusha
dec
add
in
mov
fcomps
inc
cmpsl
add
pop
in
jns
jns
push
std
add
mov
cmp
push
dec
daa
push
jbe
pop
in
adc
shlb
dec
mov
dec
inc
xchg
jg
shll
mov
mov
std
outsb
xchg
pop
jne
and
sbb
fstl
jbe
or
push
test
dec
mov
ret
inc
inc
jbe
stc
mov
dec
cmpsb
inc
add
mov
dec
fstp
int
sub
bound
sbb
xchg
push
dec
mov
xor
lcall
cmp
mov
scas
push
sub
or
insl
mov
push
push
pop
inc
dec
divl
aam
aam
add
xor
cwtl
icebp
xchg
ret
push
subb
inc
pop
jae
xor
jecxz,pn
push
movsl
cmp
std
inc
sbb
ds
jecxz
in
and
sbb
and
jb
push
mov
pusha
fwait
sarl
lret
add
sarl
xor
xor
rorl
and
mov
xlat
inc
into
pushf
push
jb
pop
xor
and
mov
jbe
enter
lret
inc
aaa
and
xor
adc
pusha
push
inc
scas
xor
adc
pushf
jmp
clc
jecxz
test
jmp
jae
inc
cmpsb
push
mov
rcll
ret
jl
sbb
sahf
lods
xchg
pop
dec
or
pop
aas
jl
sub
int3
dec
lret
inc
mov
movsb
ljmp
arpl
stc
xor
adc
rorb
cmc
imul
cmp
inc
lcall
push
js
mov
popa
dec
aam
adc
test
sub
pop
sub
mov
mov
movsb
popa
mov
lea
dec
out
adc
sub
mov
das
cmp
xchg
shll
cmp
mov
mov
imul
imul
inc
hlt
icebp
adc
inc
mov
out
sbb
in
lock
inc
rcr
push
push
bound
adc
mov
shrl
cmp
mulb
out
popa
dec
data16
mov
stos
outsl
mov
insl
xor
clc
mov
mov
mov
sbb
popa
rorl
and
add
push
out
ret
push
das
das
lds
out
push
push
lret
loopne
mov
adc
pop
dec
ror
add
add
add
movsl
push
movsl
shl
divl
dec
mov
jecxz
add
mov
ja
into
cmpl
xchg
into
mov
lea
dec
shrb
test
leave
xchg
aaa
daa
xchg
jge
jp
xor
test
sbb
ret
mov
cld
aam
sbb
loopne
js
mov
mov
add
lods
cmp
pop
stos
cmpsb
and
jno
arpl
sbb
lret
mov
nop
lcall
pop
mov
push
push
repnz
mov
mov
sub
mov
pop
mov
inc
addb
mov
aaa
dec
or
ret
fbld
out
sti
out
loop
mov
mov
mov
xor
add
push
mov
mov
and
push
xchg
stos
mov
or
mov
jno
mov
mov
pop
loop
pop
idivb
pop
lock
fidivrs
push
aam
aad
xchg
pusha
xlat
fisubrs
inc
in
ss
iret
jp
mov
int3
push
xor
aam
push
jmp
loop
notl
imul
lods
or
andl
aad
outsl
lret
insb
mov
fbld
aad
adc
outsl
xor
mov
sbb
pop
iret
mov
push
pop
popf
cmp
sar
push
outsb
adc
jbe
xor
std
sbb
and
ljmp
sub
lods
test
add
daa
mov
push
leave
cmp
lods
lods
xchg
adc
fldt
shrl
jb
adc
and
fwait
xchg
xchg
dec
sub
imul
jb
pushw
aad
xchg
movsl
adc
inc
jne
lock
aaa
jp
in
pop
mov
xchg
add
je
mov
xor
cltd
sub
sub
jne
sbbl
jl
sti
pop
push
cmp
nop
cmc
insl
in
jl
xchg
shrl
sub
jmp
out
fs
lcall
pop
cs
mov
jns
sub
test
adc
int
xchg
sub
popf
mov
imul
sub
and
dec
add
fwait
jb
rcrb
inc
and
popf
ret
scas
dec
and
pop
outsb
stos
push
decb
sbb
mov
inc
lea
out
xor
adc
bound
stos
iret
in
mov
xor
xlat
les
stc
cmp
mov
daa
test
cmpsl
subl
sbb
xor
push
sub
mov
das
stc
enter
out
jecxz
add
dec
jl
mov
xor
imul
dec
out
icebp
popa
leave
cmp
adc
jp
jg
sbb
fwait
jb
dec
mov
push
fistps
dec
and
or
pop
popa
cli
push
cmp
test
fsubrp
scas
mov
jae
lds
xchg
pop
mov
lret
cmp
scas
inc
xchg
fildll
add
adc
mov
repnz
dec
sub
pop
packuswb
or
and
mov
jne
mov
std
dec
into
das
clc
pop
lods
into
int
mov
mov
jle
fildl
push
jge
mov
fdivrs
mov
xchg
dec
mov
xchg
cmp
inc
shlb
cmpsb
add
negb
jnp
xchg
jmp
pusha
hlt
aaa
adc
std
adc
aas
outsl
std
das
push
or
fadds
adc
xor
int
mov
mov
repz
inc
fs
mov
js
lock
mov
test
dec
or
in
or
ds
pop
xlat
lcall
mov
imul
out
cmp
clc
cmc
insl
outsl
dec
inc
mov
loopne
sahf
jo
jns
adc
sbb
mov
fistps
in
push
stos
cltd
jns
dec
nop
insb
or
getsec
scas
sub
xor
add
loop
adc
xchg
add
mov
sti
mov
pop
push
xchg
aad
cmp
dec
dec
ljmp
add
loop
and
daa
jl
mov
pop
add
mov
jg
add
mov
jp
cmpsb
and
jg
dec
add
rcll
sbb
stos
pop
leave
xchg
xchg
scas
adc
hlt
data16
jge
mov
out
and
mov
imul
sub
sbb
ficompl
stos
pushf
daa
mov
test
test
clc
cmp
iret
xchg
xchg
mov
hlt
testl
push
mov
inc
mov
enter
jnp,pn
int3
stos
or
test
jmp
lret
fdivr
mov
add
add
