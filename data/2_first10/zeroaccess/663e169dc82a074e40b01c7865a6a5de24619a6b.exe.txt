push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
cmpsl
lret
jl
jl
xor
jl
adc
and
popa
pusha
jno
insb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
loop
ja
cmp
or
int
pop
xor
clc
mov
subl
repz
popf
sbb
sub
jle
xor
cmpsb
mov
pop
pop
mov
adc
cmp
test
cld
mov
adc
outsb
rcll
lcall
jge
imul
mov
add
ds
jns
not
mov
in
pushf
xchg
loope
inc
and
fiaddl
push
sbb
cmp
pushl
loopne
rol
and
scas
push
jo
cmc
mov
ljmp
or
leave
lret
popa
adcb
and
je
pop
repz
dec
icebp
sub
push
ret
aas
pop
inc
mov
xchg
pop
fdiv
aad
pop
shlb
xor
or
jge
jne
mov
sbb
cmp
pop
insb
mov
in
xchg
sub
ret
xchg
ljmp
jb
inc
pushf
sbb
jecxz
pop
imul
cmpsb
inc
call
cmpsl
in
jbe
dec
aas
ljmp
add
jno
frstor
add
fstp
xor
dec
pop
push
out
push
out
mov
xchg
or
sahf
add
repz
dec
push
add
rsqrtps
push
jmp
or
scas
pusha
imul
fcompl
xchg
pop
lock
aas
stos
mov
push
cli
push
xchg
cwtl
inc
xor
xchg
cwtl
cmp
adc
ja
add
aam
mov
cwtl
or
lock
jge
je
js
mov
cs
sahf
je
testl
mov
or
jne
push
mov
jle
enter
mov
lea
jge
mov
stc
notl
mov
jno
imul
into
mov
sub
mov
mov
cmpsl
nop
adc
imul
popl
adc
mov
mov
imul
pop
xor
pop
xor
fistpl
mov
cld
add
cmp
clc
aad
mov
int3
inc
inc
int3
ds
xor
repnz
fmul
mov
ljmp
inc
inc
icebp
je
lcall
mov
or
adc
shrl
add
arpl
add
stos
xor
shr
out
les
sbb
lods
ja
jmp
stos
sub
repz
fdivrs
or
mov
xchg
mov
lods
push
or
xor
pop
rcll
dec
xor
mov
test
inc
repnz
addr16
fisubrs
or
pcmpeqd
xchg
dec
sub
test
sub
add
inc
add
stos
add
lcall
xor
outsb
sbb
daa
jp
js
mov
rorl
and
in
xor
in
xchg
notl
pop
adc
lods
aad
xchg
iret
ret
xchg
fwait
jge
xchg
add
adc
js
push
stc
add
push
xchg
jno
sahf
test
push
jbe
and
clc
test
sbb
test
out
mov
rorl
shrb
arpl
push
ljmp
cmp
push
cld
aaa
fldl
dec
sti
xchg
dec
leave
push
ret
repnz
lock
add
out
cmp
test
push
cltd
lds
inc
scas
loop
out
mov
popa
movsl
inc
div
dec
lret
mov
jb,pn
mov
fidivs
movl
xor
mov
mov
mov
mov
fisttpll
dec
das
sbb
loope
ja
or
and
xor
pop
and
mov
xchg
jae
pop
xchg
das
sbb
into
xchg
fsubrs
sbb
test
fnstcw
repnz
fistpll
icebp
or
fisubs
nop
jno,pt
add
xchg
decl
add
pop
jae
add
and
aad
add
fistps
mov
daa
dec
mov
por
xor
mov
hlt
jmp
mov
lahf
sti
fstpl
mov
mov
pop
data16
clc
xchg
jg
jae
pop
les
add
repz
aas
cld
out
add
and
lcall
cmp
mov
sbb
jg
jb
cmp
xor
add
sar
clc
cmp
std
mov
loop
js
hlt
xchg
out
inc
sahf
mov
popf
fldenv
rol
sahf
aam
addb
subb
adc
adc
cmpb
cmp
sub
mov
or
adc
lock
into
test
add
pop
and
mov
mov
dec
bound
test
jmp
call
or
sub
mov
xor
pop
cmp
xchg
xchg
cmpsl
or
inc
xchg
mov
ljmp
icebp
in
mov
inc
dec
js
stc
mov
or
out
mov
jne
push
or
jl
scas
imul
xchg
and
je
aaa
sub
das
sub
lock
inc
lods
xchg
pop
jno
ljmp
mov
push
pop
movsl
sbb
jp
add
mov
xchg
jle
pop
pop
dec
outsb
dec
lock
add
dec
xchg
pop
pop
jmp
scas
mov
ljmp
dec
push
pop
push
test
xlat
fidivrs
out
lret
cmpsl
aas
dec
out
ja
ds
loop
sub
dec
cmp
xor
inc
pushf
pop
idivb
pinsrw
cmpsl
cmp
adc
stos
mov
or
cld
or
std
push
mov
and
data16
pusha
xor
xchg
mov
vmwrite
lods
fistpll
xor
xlat
cwtl
and
movsl
mov
mov
aad
fmuls
and
jno
add
int3
or
push
push
push
lods
arpl
mov
popa
ret
push
frstor
addb
std
loopne
adc
imul
sub
cli
and
ljmp
pop
jnp
inc
in
movsl
xor
cmp
pop
sbb
loop
push
jo
call
cmp
nop
fneni(8087
mov
mov
in
test
cmc
ja
push
sub
loopne
fcomip
cmp
stos
push
aas
insb
dec
inc
and
xlat
rcl
jbe
mov
add
mov
test
rcrb
and
and
mov
aad
mov
and
out
add
xchg
add
cmp
aam
pop
and
sub
push
push
adc
dec
ret
pop
mov
bound
push
bnd
and
jecxz
nop
call
popa
out
mov
shlb
add
and
xor
jbe
or
jno
jg
and
lds
fsubs
pop
jne
xchg
xorb
add
repnz
mov
repz
mov
jecxz
loope
pop
adcb
into
mov
push
inc
pop
icebp
pusha
adc
popf
lcall
jecxz
daa
push
in
mov
movsl
jns
xor
in
xchg
xchg
inc
sub
loopne
fs
and
sbb
stos
roll
cmpsb
lret
jle
mov
ftst
or
xchg
push
mov
add
dec
iret
jge
cmp
jge
add
mov
jbe
cmp
cmpsl
cltd
addr16
bound
cmp
in
lcall
roll
mov
insl
mov
mov
aad
call
idivl
or
incb
test
test
xor
addr16
jp
test
push
std
jmp
mov
push
rclb
out
insl
jge
cmpsl
andb
jno
fmuls
addr16
mov
dec
jg
enter
int3
ret
test
pop
lea
lock
lea
fistl
xor
mov
ret
xor
in
and
shrl
lds
icebp
push
jge
std
stos
cs
cmp
imul
pop
lods
int
mov
in
inc
lret
dec
ja
pop
mov
pop
pop
lock
xor
pop
cmp
call
leave
imul
ja
pop
stos
cmp
sub
jb
xchg
xchg
ja
jno
inc
cmp
repz
jb
or
dec
jbe
push
sbb
outsl
test
pop
cwtl
adc
call
dec
pop
jo
hlt
cld
xchg
sub
lahf
push
mov
pop
mov
cmp
xchg
cmc
inc
jne
inc
popa
xchg
mov
mov
push
xchg
add
dec
push
sub
pop
adc
jg
mov
mov
lret
test
jmp
es
imul
sbbl
cmp
iret
out
je
test
mov
xchg
mov
mov
jbe
pop
and
addl
or
mov
xlat
fildll
xlat
mov
ficoml
add
or
mov
outsl
mov
mov
imulb
fidivrs
cmp
sbb
bound
lods
pop
jl
sub
ret
aas
xor
sub
add
daa
xor
mov
out
mov
std
and
cwtl
add
adc
or
and
add
cmpsb
mov
fadd
pop
or
fwait
ret
push
dec
mov
cmpsl
es
mov
cs
pop
imul
ljmp
test
xchg
mov
sub
clc
rolb
flds
insl
inc
int3
rorb
cwtl
push
or
jbe
sar
pop
std
fildl
and
add
fiaddl
xchg
xor
xor
aam
inc
sub
es
pop
out
leave
in
mul
push
lds
jg
mov
movsl
sub
mov
jmp
jbe
mov
jge
cld
sti
outsb
outsl
dec
popa
mov
pushf
out
push
pop
xor
jecxz
cmp
nop
push
xor
in
movsb
shl
outsb
pop
xor
mov
inc
add
xchg
gs
pop
jle
sar
xchg
xor
inc
nop
lods
cmp
mov
jae
jmp
ja
shll
xchg
loopne
fdivl
fbld
in
xor
jecxz
popf
mov
cli
dec
cmpsb
xlat
inc
mov
mov
sahf
aas
pop
movsb
pop
pop
push
push
push
jg
int3
or
xlat
shll
push
mov
pop
sbb
jmpw
lock
mov
insb
fs
ja
aas
mov
lods
adc
js
inc
push
xchg
jnp
xchg
add
jnp
nop
mov
pop
push
push
imul
adc
jecxz
jo
rcll
fnstsw
inc
lods
xchg
xor
sbb
jbe
sub
sub
push
add
inc
incl
push
cmc
scas
and
jae
and
jmp
aad
pushf
popa
sbb
dec
aam
out
dec
mov
out
je
movsb
loop
out
shll
stos
ljmp
shll
mov
aas
fwait
leave
cmpb
aaa
cld
out
popf
inc
jecxz
jne
mov
mov
nop
notb
cmp
cmp
int
jne
mov
mov
popa
or
pop
jecxz
int
lods
fcoms
outsb
mov
inc
arpl
mov
dec
and
add
cmp
adc
xor
or
xchg
inc
stos
inc
inc
scas
xor
xchg
shr
int
or
imul
setb
mov
adc
sub
mov
sarl
dec
or
sub
jl
jmp
jecxz
jmp
dec
divb
sbb
or
and
add
pop
movsl
out
int3
mov
jg
ret
fistpl
jge
xchg
lods
jl
mov
out
imul
jg
sub
and
loopne
popa
lret
out
add
lahf
lods
xchg
les
xchg
rorl
jae
fnstcw
cmpb
sbbl
pushf
jp
ds
mov
sbb
mov
push
in
js
roll
mov
xchg
sub
jecxz
stc
mov
std
mov
xchg
mov
sahf
fdivrs
cli
mov
fmuls
insb
or
jmp
ljmp
into
cmpsl
sar
mov
pop
pusha
dec
test
popf
lock
dec
mov
rolb
sbb
xchg
adc
jmp
mov
dec
sub
ljmp
add
lock
xchg
cmp
xchg
xchg
push
rclb
int3
inc
gs
pusha
imulb
jp
jmp
out
test
push
pop
mov
cltd
push
insb
adc
enter
push
mov
adc
inc
mov
cltd
lret
incb
xchg
arpl
mov
mov
mov
enter
xchg
push
movsb
fisttps
das
test
mov
lds
sub
daa
cmpsl
mov
sub
cwtl
jbe
es
or
icebp
out
lret
mov
jp
in
aas
pop
or
mov
ljmp
xor
mov
inc
cwtl
leave
and
dec
ja
mov
test
mov
cli
into
aad
stos
js
mov
xor
mov
aaa
pop
push
mov
je
jecxz
cltd
fisttpl
test
dec
pop
push
lcall
push
jmp
pop
nop
mov
inc
jb
jne
lea
or
push
ret
sbb
cmp
aad
push
sbb
lods
or
out
jne
sub
adcl
mov
mov
jo
mov
lods
xchg
nop
jnp
jmp
lods
mov
test
fsubrl
sbb
pushf
js
push
and
ret
or
leave
bound
xor
jns
in
xor
dec
addr16
arpl
dec
gs
dec
pop
mov
ss
cli
pushf
mov
pop
leave
add
xor
or
push
add
int3
xor
pop
or
mov
pop
fmuls
or
sbb
test
mov
lret
inc
jl
dec
jmp
sahf
pop
push
mov
dec
mov
imul
jae
jg
cmp
dec
sbb
jnp
cmp
xor
mov
mov
xor
inc
or
movsb
ret
mov
sub
jno
js
ret
dec
cs
in
popa
mov
inc
cmpsb
cmpb
pop
mov
fdivr
mov
jg
xlat
insb
mov
scas
popa
jns
lret
xchg
bound
sub
jbe
xchg
jnp
mov
fisubrl
inc
inc
out
in
push
and
push
mov
out
vpshlb
clc
dec
fs
test
rcr
mov
jns
shrl
xor
cli
fs
mov
jle
pop
out
xlat
mov
mov
pop
and
lock
adc
xchg
aam
mov
call
stos
jbe
and
mov
jge
dec
or
iret
mov
xor
aam
test
sbb
and
aas
xor
fistpl
repz
add
inc
push
scas
loope
lods
movsl
cmp
jns
push
sub
mov
int3
mov
stc
ret
negb
dec
mov
jp
idivb
test
sub
mov
cmp
icebp
testb
fnsave
or
dec
fdivl
cltd
clc
fnstenv
adc
enter
cmovno
ds
lcall
mov
mov
inc
jg
mov
mov
dec
cmp
shlb
stos
sub
push
aad
and
xor
jmp
jo
mov
sbb
adc
fwait
jo
and
pop
add
pushf
mov
xor
outsb
into
sub
das
xlat
jmp
ljmp
jmp
xor
ja
dec
adc
or
aas
jg
mov
inc
jb
xchg
repnz
outsb
std
mov
pop
aaa
pop
pushf
jecxz
and
pop
cmpsl
add
testb
movsl
ret
rorl
es
popl
mov
cltd
out
pusha
sbb
enter
mov
int3
push
insl
mov
adc
into
loope
imulb
dec
dec
mov
or
imul
mov
lret
inc
cli
bnd
call
std
xor
pusha
cli
in
arpl
xor
jne
sub
fs
les
ljmp
xchg
dec
jne
mov
cmp
xchg
std
inc
sti
ja
addr16
push
add
or
dec
mov
orl
bnd
and
aad
ficomps
shl
or
aaa
out
mov
mov
lcall
cli
adc
cmp
sbb
and
inc
mov
pop
in
int3
rcl
pusha
xchg
jl
push
daa
mov
inc
cltd
mov
fwait
aam
push
sti
test
jp
shll
in
arpl
mov
lret
into
adc
jbe
icebp
push
add
ljmp
ds
or
xchg
cs
nop
or
ret
js
inc
and
add
lds
lea
jo
movsl
and
nop
adc
xlat
xchg
repz
dec
ljmp
lods
sbb
or
sahf
jnp
pushfw
xor
sbb
sub
lods
cli
or
adc
outsl
add
dec
mov
push
xor
fadds
lods
pop
lahf
stos
fldenv
dec
inc
lret
pop
arpl
mov
cmpb
cmpsb
pop
lods
aam
push
sar
mov
movsl
cmpsl
dec
leave
std
fmull
cli
mov
ficompl
loopne
jmp
mov
pop
dec
dec
cs
dec
dec
repz
stos
test
or
in
xchg
push
sub
gs
fisttpll
push
call
sub
push
rorb
lret
push
inc
out
pop
loop
pop
jae
test
sarl
loope
addr16
movb
fstpt
pushf
mov
movsb
or
inc
xor
das
cmp
lcall
add
push
scas
jo
xor
rclb
xchg
xchg
adc
jb
dec
cmp
ljmp
shlb
sub
inc
add
sub
mov
adc
adc
out
sbb
mov
push
fs
rolb
mov
ss
jns
ss
mov
negb
imul
xchg
sbb
mov
lock
fs
jnp
add
mov
aas
mov
clc
cmp
cmp
nop
ds
jle
add
pop
fistpl
mov
inc
mov
sbb
push
pop
xchg
or
rclb
popf
and
call
or
push
inc
loopne
push
rorl
adcl
mov
int
add
test
pop
cmpb
sub
xchg
mov
testl
stc
lcall
cmpsl
movsb
mov
adc
stos
ret
shlb
mov
inc
xor
sbb
iret
pop
or
pop
fmull
inc
outsb
int
repz
jge
mov
cmp
fdivl
mov
jle
add
xchg
and
add
adc
inc
insb
mov
mov
rclb
push
jl
ds
lret
aad
call
imul
insb
and
les
rorl
pop
add
dec
cmpsb
pop
pop
testb
fwait
mov
addb
or
mov
rcll
aad
clc
rclb
stos
xor
mov
mov
xchg
cmc
dec
aam
mov
pusha
addb
xlat
and
pushf
xchg
mov
cmp
sbb
stos
fsubrs
and
cmp
sbb
push
xor
mov
push
xor
insl
mov
andb
xchg
sbb
mov
jno
pushf
fmulp
lods
cmp
aas
inc
pop
push
and
mulb
cmp
push
mov
pop
jle
push
xor
xchg
push
mov
push
es
sbb
mov
xchg
cld
lcall
and
pop
or
ret
adc
dec
fwait
xor
jmp
repz
sahf
dec
cmp
cmp
loop
test
test
or
push
push
xor
inc
jbe
shl
mov
push
or
cld
loope
pop
xlat
inc
xor
push
lret
jp
pop
jnp
xchg
mov
jl
int
add
call
and
nop
and
jmp
imul
out
out
aaa
push
pop
mov
xlat
xchg
mov
das
xlat
mov
mov
and
ds
or
ds
mov
and
pushw
loopne
inc
and
lcall
daa
push
test
mov
xor
or
or
aas
jmp
fdivl
lahf
inc
cli
xchg
fdivrs
cmpsl
inc
pushf
pop
lcall
addr16
lret
inc
orb
push
std
sub
fistpl
fcom
xor
xlat
repnz
sahf
jb
add
add
popa
dec
rorl
lock
jb
xchg
out
sub
mov
and
cli
sub
pop
daa
push
push
fcompl
xchg
cmc
mov
shll
in
adc
roll
dec
push
mov
test
adc
mov
xchg
push
outsl
inc
adc
fwait
inc
stc
dec
adcl
xchg
dec
mov
mov
arpl
push
push
and
shrl
imul
and
sbb
sub
xlat
and
scas
lods
sub
repz
inc
push
xor
test
and
xor
mov
push
adc
test
xor
xor
xchg
bnd
in
lret
pop
mov
dec
or
adc
ficomps
sub
pop
inc
bound
cmc
in
jnp
xchg
xchg
pushl
dec
and
push
inc
xor
or
cli
testb
loopne
or
fisubrs
out
in
lods
pushf
lret
in
push
mov
jle
ficomps
ja
int
mov
dec
and
mov
gs
outsl
hlt
cmp
mov
xchg
clc
push
and
pop
xchg
outsl
cmpsl
lcall
movsb
push
pusha
pop
inc
sahf
push
clc
push
adc
add
sub
jecxz
add
data16
in
in
push
cmc
lret
ss
cltd
push
pop
shl
into
scas
mov
mov
arpl
scas
jg
lahf
pop
or
cmp
std
adc
in
and
lret
pusha
sarl
mov
jmp
scas
dec
jbe
fisttpl
fs
pop
pop
pop
or
faddl
sub
and
test
adc
mov
sub
xchg
cmpsb
adc
icebp
int
mov
adc
pop
icebp
and
cmp
sub
lret
xor
daa
aas
sub
leave
dec
xchg
mov
repz
mov
in
rolb
adc
nop
popa
push
enter
pop
decb
test
cltd
mov
into
shrl
mov
dec
fsubrl
loopne
jns
dec
cmp
ror
pop
sahf
mov
orl
aas
nop
jo
pop
add
stos
or
and
xchg
test
adc
sub
jne
flds
cmc
insl
pop
loop
jge
pushf
dec
fcoml
xor
or
hlt
lea
repnz
mov
sbb
dec
clc
jecxz
inc
movsl
icebp
adc
addb
lds
mov
sbb
loopne
cmp
fisubrs
jecxz
adc
mov
inc
jle
mov
outsl
push
xchg
pop
mov
add
fcoms
dec
mov
fwait
mov
cmpsl
jb
iret
hlt
xchg
dec
and
pop
cmpsl
inc
push
enter
out
push
cmpsl
gs
std
inc
inc
lock
mov
int3
div
ja
jl
fsub
in
clc
pop
xor
imul
enter
pop
mov
and
lea
jge
aad
iret
xor
dec
test
stos
scas
push
mov
or
inc
and
and
xorb
ja
in
cmp
idiv
out
push
lock
je
jle
jno
xchg
xchg
push
pop
adc
sub
xchg
fwait
cmp
ret
pushf
sbb
fsubl
test
jo
push
lcall
inc
lcall
addr16
cmp
sub
pop
cmp
push
xchg
or
jmp
push
sbb
xor
add
push
sbb
repnz
jne
jne
pushf
dec
ret
adc
les
inc
lret
out
cmp
cwtl
pop
inc
push
sbbb
push
shlb
pushf
inc
mov
mov
cmp
jl
out
jo
jmp
add
jo
fdivs
add
jmp
fcompl
testb
cmp
testl
int
sbb
shll
push
aam
or
stc
fwait
cmc
and
fidivs
mov
test
adc
add
dec
sub
outsb
fcoms
lea
aam
cli
cmpsb
push
cmp
or
cmp
sbb
lods
jo
and
xorl
adc
and
dec
push
sti
lods
aad
pushf
mov
shl
or
cmp
dec
loope
jp
inc
mov
call
or
cmp
stos
sbb
adc
sbb
sbb
mov
adc
fwait
adc
es
divb
mov
add
ja
mov
sbb
ds
cmp
mov
sbb
cli
test
lret
mov
dec
cmc
cwtl
push
adc
ss
xlat
lods
add
repz
rolb
cmp
push
cmp
or
sub
xchg
ds
ret
sbb
adc
movsb
sub
adc
jge
sub
sarb
pop
shr
sub
sub
add
xchg
and
lret
or
adc
adc
sub
mov
xchg
mov
inc
dec
pusha
sti
out
cmp
shll
xor
fmull
movsb
push
pop
stos
xchg
mov
orl
pop
insb
scas
test
dec
sbb
scas
clc
call
mov
jmp
std
and
test
in
mov
js
xchg
lods
call
in
stos
test
sbb
jle
jl
inc
adc
data16
sarl
movsb
mov
xchg
mov
jae
fmulp
cmc
xchg
orl
fldenv
sti
adc
in
cmpsb
je
mov
or
lcall
dec
cmp
push
loop
mov
push
mov
jg
sbb
clc
push
mov
mov
rcl
fisttpl
lds
pusha
das
aaa
mov
xor
xchg
adc
or
mov
mov
or
add
xchg
rolb
leave
push
xchg
lcall
jecxz
dec
add
test
push
cmp
fisttpl
in
jae
popf
jo
popa
push
mov
sub
arpl
shlb
in
xchg
jmp
test
clc
in
ds
mov
rcl
xor
call
xchg
imul
add
jno
push
movsl
pop
mov
in
popf
adc
popaw
push
mov
movq
add
into
inc
lods
scas
fcmovbe
inc
sub
test
mov
and
into
pop
adc
nop
call
sbb
into
or
inc
outsb
mov
dec
adc
and
or
cmpsl
mov
icebp
cmp
mov
adc
push
insb
add
jne
mov
or
and
mov
inc
pop
out
std
faddl
lret
or
dec
sbb
or
jmp
out
mov
data16
int3
sbb
loope
ret
push
ds
sbb
lods
mov
inc
add
int3
push
dec
insb
icebp
pop
lea
or
or
daa
inc
daa
cmp
jmp
jo
inc
out
pop
or
fcomp
xor
push
jae
scas
leave
push
xor
dec
pop
iret
jmp
popa
mov
imul
push
mov
int3
cmp
idivb
scas
sub
stos
sarb
mov
jnp
sbb
jb
cmp
mov
add
fsubrs
sub
mov
flds
push
lahf
and
inc
stos
or
mov
mov
ret
pushf
push
cltd
add
shrl
inc
mov
ret
pop
xchg
es
or
cmp
mov
repnz
mov
add
sub
loope
sub
cli
dec
xor
xchg
loope
jo
jmp
xchg
ss
sbb
xchg
icebp
orl
popf
cmp
fyl2x
mov
inc
mov
pop
pop
arpl
push
or
add
sbb
mov
mov
jnp
fmull
inc
jne
jno
xchg
aad
or
cltd
add
jg
mov
loop
xchg
sub
jnp
imul
shlb
jecxz
out
xchg
xchg
fstl
push
ljmp
cmp
sbb
jge
mov
jbe
jecxz
mov
xchg
add
jb
dec
int3
loopne
hlt
jnp
inc
or
xor
ret
out
mov
fildll
out
sub
andl
popf
push
out
aaa
mov
loop
inc
inc
adc
idivb
in
shl
cmp
inc
mov
pushl
mov
int3
scas
cmpsb
mov
adc
mov
sub
int3
mov
popf
repnz
xor
pop
pop
lret
out
sti
dec
pop
sarl
push
inc
or
mov
xchg
push
xor
push
test
inc
add
clc
js
and
fcomip
adc
rol
cmp
negb
mov
test
inc
pop
clc
std
push
xchg
add
lea
jns
imull
in
pop
sbb
inc
or
jno
push
cmp
mov
les
sbb
push
test
push
pushf
mov
dec
rcrb
mov
enter
rcrb
sbb
jp
fucom
imul
insl
mov
jae
lods
mov
inc
lds
push
stos
jo
xchg
neg
sub
or
lds
aam
ss
xor
imul
jmp
pop
ja
cld
es
testl
adc
les
jne
icebp
cmp
mov
das
push
arpl
dec
aas
inc
rol
push
jb
sbb
movsb
imulb
sbb
aaa
push
lods
pop
nop
xchg
cwtl
mov
xor
fwait
outsb
lret
stc
cmp
cli
pusha
jmp
gs
fnstsw
out
jns
mov
lods
dec
out
std
jmp
xor
insb
data16
xchg
loope
popa
sub
loop
sahf
pop
orl
dec
loopne
pop
inc
xlat
sub
pop
xchg
arpl
rcl
push
dec
test
fistps
lcall
je
xchg
adc
or
pop
push
mov
stc
nop
je
mov
lcall
outsb
push
pop
repz
xor
mov
lock
cmp
jl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
dec
scas
xor
jl
dec
pop
jl
test
insb
aas
and
dec
jge
sbb
push
hlt
movsw
inc
imul
pop
mov
sub
negb
test
movsb
and
sarl
in
mov
xchg
dec
scas
jecxz
fisttpll
cmp
or
jg
jmp
insl
imul
inc
cs
ret
js
adc
repz
scas
js
push
stos
xor
lds
xlat
mov
outsl
out
js
add
mov
cmp
add
rolb
lahf
xchg
cwtl
sub
push
movswl
pop
out
jl
divl
or
mov
jecxz
out
jbe
mov
push
push
lods
idivl
mov
adc
push
inc
mov
or
pop
addl
pop
repnz
fs
mov
and
pop
scas
jb
or
xor
lds
fwait
add
xor
in
sbb
mov
arpl
jnp
mov
mov
add
adc
test
adc
imul
loopne
fstl
mov
loope
push
fisttps
shlb
faddl
adc
mov
and
jg
sub
mov
inc
clc
data16
out
push
add
loopne
lock
negl
add
mov
mov
out
js
or
cmp
and
and
bnd
jecxz
push
das
rcr
push
jl
sub
mov
jae
subb
iret
push
loop
out
clc
cmpb
test
shrb
les
mov
dec
fsincos
out
sub
jmp
xchg
fstl
adc
test
fldcw
add
inc
repz
jg
mov
jecxz
push
mov
jl
push
lds
gs
filds
fistl
cld
cmpsb
xchg
jecxz
stos
and
push
fnstenv
sbb
je
call
into
popf
dec
ja
cmp
sub
pop
outsl
pop
rcll
fisttps
arpl
xor
and
lds
fsubr
dec
cmpsb
and
repnz
jge
ljmp
lods
mov
int
push
out
jmp
and
out
push
test
cmp
stos
ret
lahf
dec
dec
ss
cmc
pop
aas
jl
lret
ret
ljmp
insl
mov
sti
lret
or
or
mov
mov
imul
ret
add
cmpsl
jae
adc
popf
or
out
or
gs
mov
dec
insl
push
je
loop
mov
cmp
jmp
push
lcall
add
add
inc
xor
cmp
scas
cmp
iret
push
test
pushf
js
add
push
cmp
jnp
orl
xlat
lret
imul
loopne
cmp
mov
mov
mov
out
imul
mov
or
daa
mov
xor
inc
iret
mov
shrl
inc
outsb
stos
in
dec
push
in
mov
xchg
mov
cltd
ficoms
pop
dec
fwait
cwtl
inc
mov
loop
test
inc
or
push
ds
mov
shld
clc
pop
inc
mov
jecxz
mov
xor
xchg
into
iret
mov
ds
pop
clc
or
stos
lods
mov
sti
adc
ds
jle
xor
insb
sahf
lcall
dec
js
or
cmp
je
xchg
mov
lcall
sub
cmc
aad
sub
jge
mov
insl
les
sub
push
pop
dec
lret
adc
subb
xchg
sti
cmp
cli
lea
js
aad
ret
push
inc
xlat
cld
cmpsb
add
loopne
cli
pop
dec
inc
int
mov
xor
mov
cltd
cs
mov
inc
sub
bound
cli
stos
cld
repnz
jo
push
push
cmc
pop
inc
lods
pushf
mov
scas
stc
jmp
or
jne
ljmp
icebp
mov
and
push
or
cmpb
in
test
das
imul
pop
rcll
dec
fwait
sub
mov
jnp
rclb
popf
js
cwtl
je
cmp
adc
adc
in
inc
add
insl
mov
je
sub
iret
dec
push
int3
jmp
xchg
das
out
enter
inc
cltd
adc
test
int3
sahf
xchg
and
inc
xor
shl
lret
pop
ja
stos
scas
add
mov
mov
mov
mov
pop
fsubs
push
inc
das
sbb
les
loop
push
scas
mov
aas
mov
sbb
and
mov
and
inc
add
and
test
sub
cltd
inc
das
insl
jle
popa
aam
lcall
mov
adc
dec
repz
cwtl
xchg
pop
movsb
imul
rcl
add
ret
mov
pop
pushf
js
mov
mov
mov
xor
ljmp
sbb
enter
lcall
aas
loopne
ss
lods
cmc
ss
test
xchg
jne
cs
pusha
enter
leave
gs
fwait
je
pushf
adc
or
and
mov
fnstenv
xchg
popf
call
add
inc
xor
movsl
mov
dec
imul
cli
enter
mov
mov
fbstp
pop
mov
loope
imul
inc
hlt
cmpsb
int
adc
clc
push
adc
test
lods
add
std
adc
xor
cmpsl
call
xchg
bound
shll
sti
cltd
mov
dec
or
sbb
sbb
insb
repnz
into
push
adc
xchg
loope
cmp
clc
rcrb
popa
test
mov
fisubs
es
or
push
add
ds
mov
or
sbb
push
and
mov
testb
sti
push
mov
mov
inc
adc
pop
jmp
jno
call
push
adc
mov
xchg
xor
jg
in
addr16
adc
out
cmp
addr16
adc
div
cmpsb
mov
push
push
loop
das
jnp
jecxz
mov
out
inc
mov
pop
inc
sub
push
movsb
pushf
push
cmp
mov
das
and
lock
in
add
ret
lcall
dec
loopne
mov
and
int3
mov
add
dec
lds
dec
pop
and
adc
nopl
mov
out
dec
shrl
ret
testb
inc
push
dec
loopne
jmp
movsb
add
adc
cmp
popa
sahf
push
xchg
sub
sti
cli
mov
das
call
cwtl
addr16
pop
je
mov
cld
arpl
sti
or
fldenv
loope
adc
dec
push
push
rcll
pop
movsb
jnp
sub
push
xor
js
or
mov
push
sbb
jg
sti
adc
xor
jns
jecxz
push
bnd
push
iret
enter
mov
aam
push
fisubrs
mov
pop
jne
and
mov
jg
inc
mov
ljmp
xchg
cmpsl
fwait
loop
sub
inc
xchg
xchg
push
xor
fldcw
lret
push
lret
xchg
push
leave
orl
or
outsl
ss
imul
pop
pop
inc
add
imul
adc
inc
out
das
jmp
xlat
xor
mov
mov
je
mov
sub
outsb
loopne
hlt
adc
in
bound
mov
popf
adc
pop
push
loopne
imul
sub
mov
daa
jl
or
test
lods
shrb
imul
popa
sub
push
aas
push
mov
fnsave
cmc
bound
aaa
or
ret
aas
int
repz
mov
bound
lds
cltd
ds
adc
and
inc
scas
pop
jne
adc
push
adc
stc
sbbb
fwait
jnp
mov
lret
pop
add
and
in
jae
xchg
out
out
sbb
inc
mov
fwait
pop
es
vmovapd
mov
loopne
lahf
aas
xor
mov
sarl
push
dec
mov
scas
dec
or
mov
push
jo
addr16
xchg
pop
inc
sbb
jmp
es
insl
ja
loope
pop
push
loop
ljmp
gs
inc
int
push
lret
femms
xchg
loope
je
sbb
mov
faddl
push
jns
jle
iret
sbb
inc
add
add
cmp
add
and
sahf
cmp
pop
xor
cmp
mov
mov
andl
iret
addr16
mov
sub
mov
pushf
scas
jnp
xchg
sti
pop
dec
in
or
adc
jbe
data16
push
cli
fucomp
inc
addr16
in
mov
dec
inc
fnstsw
je
cli
cmpsl
push
sarb
aad
out
jp
sub
movsl
push
fcomps
mov
cmp
cmpsl
insb
subb
in
jne
idiv
mov
push
mov
mov
cltd
out
or
movsb
pop
sub
es
in
pop
and
mov
cwtl
mov
loop
lea
push
pushf
das
jmp
add
pushf
mov
pop
and
jne
push
jne
add
mov
jp
push
addl
mov
mov
pop
cmp
mov
lock
xchg
dec
rolb
mov
stos
cwtl
scas
or
sbb
pushf
leave
mov
cmp
inc
mov
jae
xchg
mov
mov
sub
jns
addr16
push
test
sahf
ljmp
lret
push
jae
shr
xchg
adc
fwait
jo
dec
adc
fdivrs
dec
mov
inc
jecxz
lahf
stc
fbstp
scas
jge
test
xchg
cmpsl
xor
sbb
outsl
movsb
mov
test
adc
mov
mov
add
push
and
jbe
adc
std
jmp
xchg
adc
not
mov
rcr
mov
sub
jmp
std
sbb
sbb
test
hlt
lods
jmp
in
or
jle
cmc
fs
ds
sbb
leave
or
xchg
popl
mov
dec
ret
iret
arpl
mov
xor
or
daa
fildll
mov
jo
rclb
repnz
cs
iret
push
mov
push
test
cmp
dec
push
stos
inc
push
jbe
mov
jbe
lcall
pusha
gs
push
sub
bound
test
xchg
jne
popf
ret
sarl
and
lds
jb
pop
pop
xchg
fadd
outsb
cmp
push
xor
and
sbb
or
ficompl
and
sbb
movsb
imul
rcrl
and
mov
push
mov
push
incb
mov
sbbl
sbb
popf
into
shll
lds
ror
testl
add
aad
sbb
cs
inc
fldcw
jmp
pop
jns
mov
or
sub
or
jecxz
pop
jg
lods
mov
mov
lods
ljmp
xchg
pop
push
pop
dec
or
cmpb
dec
xor
xchg
sub
push
out
mov
cltd
xchg
jecxz
add
xchg
scas
fidivs
sbb
push
add
add
loop
fcmovnb
or
pushf
sub
loope
sbb
inc
or
lock
sub
xchg
lods
push
or
mov
test
cli
sbb
imul
out
into
mov
pop
mov
xchg
jmp
stos
sub
outsl
pop
and
mov
aam
xchg
fbstp
mov
inc
les
jp
sub
jmp
cmpsb
in
or
lods
leave
dec
fnstenv
mov
jmp
fstps
nop
mov
push
cmp
inc
dec
out
jae
test
and
push
mov
and
out
mov
cmp
fdivrl
ret
inc
inc
lret
xchg
sbb
xchg
mov
repz
leave
imul
mov
inc
outsl
int
notb
add
dec
adc
jnp
cli
add
popa
pushf
repz
movsb
adc
mov
ljmp
hlt
add
and
add
movsl
rolb
sbb
dec
subb
sub
inc
andb
jle
jg
jmp
mov
rcll
repz
xor
icebp
popa
cmp
cmpsl
mov
and
push
push
dec
outsb
mov
ss
mov
xlat
mov
test
pop
movl
mov
ljmp
mov
andb
aaa
stos
insb
jno
sarb
loop
sbb
lahf
sbbb
scas
pop
fistpl
subl
insb
adcl
adc
xchg
mov
fstps
lds
gs
fisubrl
ss
fildll
push
push
mov
stos
xchg
mov
push
ss
ljmp
out
and
out
or
imul
xorps
lahf
push
addr16
movsl
or
dec
add
out
daa
fwait
lock
add
cmp
adc
rcl
pop
mov
ss
js
push
and
rol
pop
mov
xlat
pushf
cwtl
call
mov
cmp
mov
rcrl
mov
or
cmp
jmp
test
adc
mov
and
adcb
stos
adc
sub
adc
adc
xchg
mov
stos
dec
decb
and
cmp
push
pop
push
adc
dec
mov
cwtl
subl
jae
arpl
test
std
stos
push
or
imul
pushf
mov
push
repnz
mov
add
pusha
pop
shl
fwait
jne
movsb
pop
mov
sarl
inc
xchg
out
pop
std
fldt
and
jo
les
fcoms
push
loop
scas
pop
outsl
mov
test
int3
and
adc
cltd
pushf
lods
xchg
dec
lds
dec
xchg
fmull
jbe
imul
add
test
mov
xor
jp
popa
add
leave
xchg
daa
pusha
ret
dec
ds
loope
stos
add
out
or
dec
xchg
adc
push
sbb
out
test
stos
fstpl
fsubs
inc
mov
fcoml
sti
loop
jne
cmc
outsb
cwtl
int
sub
mov
push
loop
lcall
xor
movsb
mov
pop
in
sbb
dec
insb
icebp
push
mov
lret
push
enter
dec
dec
mov
pop
jg
adc
pushf
xchg
out
jnp
orb
cmp
imul
in
adc
dec
pusha
mov
movsb
repz
pop
push
jb
xchg
jg
and
mov
test
jb
xor
fprem1
push
data16
addr16
ror
dec
lret
cld
fs
push
push
cltd
mov
jecxz
enter
jecxz
xlat
popa
je
jns
test
and
daa
loopne
xchg
cmpsl
and
xchg
inc
xor
aas
not
out
cld
out
in
push
gs
or
xor
inc
push
inc
xor
fdivrs
adc
pop
sub
mov
aam
and
out
dec
mov
in
dec
fistps
cmp
xor
sbb
cmp
lcall
push
out
jecxz
dec
mov
jo
pop
pop
cs
mov
btr
icebp
lods
jae
inc
xorb
stc
nop
enter
loope
fs
pop
jnp
jge
pop
sbb
cmp
xor
rcrl
add
mov
mov
push
pop
or
icebp
push
mov
and
imul
test
push
mov
mov
mov
sub
filds
cmp
xlat
stc
testl
jle
jmp
stos
lcall
sub
pop
clc
or
mov
loope
out
pop
xchg
push
stc
pop
jle
clc
ffree
mov
mov
mov
mov
or
insb
ret
mov
and
scas
outsl
xchg
in
sub
dec
push
lds
pusha
push
mov
or
int
sbb
shlb
test
inc
xchg
or
dec
mov
dec
mov
loopne
mov
sub
popf
rorb
cmp
shr
outsl
mov
or
mov
or
xchg
xor
jge
mov
fdivrs
mov
and
and
adc
mov
pop
lods
ds
aam
mov
insl
pop
sti
negb
loopne
popf
cld
dec
inc
cmc
mov
in
mov
movsl
imul
dec
add
jno
testb
cmpl
cmp
push
rcrl
jne
dec
xor
mov
sti
addr16
mov
lret
cs
adc
jmp
int3
je
psrad
inc
and
insl
movsl
dec
push
and
pusha
std
out
jne
sub
jnp
shlb
sub
ljmp
adc
ljmp
pop
sub
or
mov
inc
negb
inc
xchg
stos
cmp
add
ja
adc
inc
mov
popf
sub
xor
and
pcmpeqb
xchg
hlt
imul
pop
or
mov
push
nop
cmpsl
insb
adc
cmpsb
insb
iret
push
mov
xchg
addps
xchg
sti
cs
fsubr
add
mov
adc
jecxz
orl
jnp
rcrb
in
mov
or
push
mov
pop
pop
pop
les
cmp
pop
shll
loop
xchg
arpl
pop
les
and
dec
jne
ljmp
xchg
push
xlat
in
rclb
push
mov
lea
outsb
lds
xchg
cvtpi2ps
aam
xchg
xor
out
icebp
imul
xchg
es
lahf
xor
mov
addb
sti
fld
jo
loope
push
inc
inc
inc
xor
push
lahf
dec
cmpsb
movsl
movsb
sub
decl
dec
and
mov
cmp
cmp
cltd
ret
xor
mov
outsl
ja
pop
jo
xor
jns
or
aas
out
sub
movsl
xor
cmp
ret
push
rol
cmp
mov
jne
sbb
repnz
inc
insl
fildl
adc
mov
xchg
xor
pop
jp
dec
dec
jns
lcall
mov
lock
mov
cmpsb
sbb
call
xor
mov
outsl
mov
xchg
adc
add
mov
mov
test
cmp
arpl
xchg
test
jmp
pop
cmp
call
daa
fisubrl
pusha
fists
mov
fistpll
lock
xchg
mov
cli
fadds
mov
inc
xlat
inc
push
sub
mov
mov
add
mov
lock
push
in
iret
popa
or
stos
cltd
inc
pop
sarl
mov
cld
lcall
mov
push
call
xchg
inc
incl
repnz
ret
mov
lcall
sbb
gs
mov
int
sahf
sub
adc
mov
mov
and
adc
sbb
inc
mov
or
popf
stos
inc
decb
xor
or
aas
jne
mov
add
mov
push
xchg
aam
int3
sahf
rclb
bound
inc
push
push
xchg
cmp
xor
jp
mov
je
ret
pop
push
xchg
sahf
int3
ja
in
dec
jle
out
aam
lahf
mov
sub
pop
pop
scas
popl
and
test
pop
xchg
repnz
out
pushf
data16
mov
sub
jmp
lahf
test
mov
cmc
mov
cltd
stos
lods
stc
aaa
jb
sub
add
xor
out
cmc
sub
mov
imul
jmp
movsl
mov
aaa
xchg
aaa
jne
pop
std
in
mov
fbstp
bswap
repz
adc
lret
lods
xlat
es
nop
xor
mov
mov
sbb
sahf
andl
xchg
ret
insl
dec
xchg
xchg
fdivrs
std
dec
addb
adc
xchg
mov
mov
inc
inc
xchg
fisubrl
pushf
or
mov
call
add
push
or
scas
fmul
push
sbb
fimuls
jnp
inc
prefetch
adc
jns
out
pop
sbb
jno
cmp
and
ret
cmp
xchg
cs
or
loope
aam
out
fdivrs
mov
mov
pushf
jle
ss
pushf
fisttpl
pop
hlt
jbe
leave
xor
sti
xchg
mov
xor
rcr
movsb
push
mov
lcall
ljmp
adc
inc
leave
lea
push
xchg
jbe
and
jns
adc
mov
call
mov
xor
aam
mov
xchg
and
call
add
ja
es
jecxz
mov
jbe
bnd
mov
dec
xchg
lahf
push
cs
test
cmp
adc
jno
aad
adc
adc
pushf
cmp
cmp
sub
in
movsb
in
pop
or
or
fadd
lea
cmpsl
cmp
cmpsl
add
lods
add
repz
pop
cmp
mov
daa
or
in
push
insl
adc
adc
stc
inc
adc
xor
fnstsw
xchg
cltd
dec
mov
sbb
aad
or
out
roll
ret
aaa
mov
fwait
das
fwait
and
or
xchg
add
inc
inc
std
fistl
mov
push
mov
and
ds
cmp
repz
sbb
pop
xorb
cmc
out
inc
mov
lcall
aaa
in
dec
lcall
loope
sub
lea
lahf
in
dec
inc
insb
xor
add
sti
mov
jbe
jecxz
arpl
shl
push
and
push
xchg
dec
xor
aaa
mov
mov
enter
fwait
shrl
lret
jmp
and
faddl
into
cmp
loope
and
cmp
dec
les
cmp
imul
std
out
jecxz
repnz
in
adc
mov
sub
pop
mov
fucomip
sahf
unpckhps
pop
jg
lcall
mov
cld
mov
jmp
jl
push
in
sub
scas
orl
sbb
jns
add
int3
dec
adc
jno
popf
stos
mov
add
jle
jle
xor
sbb
ss
xor
int
lret
adc
xchg
andl
xor
jecxz
mov
cmpsl
sbb
inc
out
cmp
into
imul
adc
fwait
aad
pop
sbb
mov
into
aaa
ds
mov
mov
push
lods
or
or
sub
dec
add
decl
sub
ficoml
lret
test
xchg
aad
jle
push
sub
lods
mov
cmpsb
outsl
call
cld
stc
pushf
pop
sub
ds
adc
mov
in
inc
lds
jns
mov
xchg
insb
xor
orb
outsb
fisubrs
cmp
loopne
and
jmp
push
mov
lock
sbb
mov
stc
arpl
daa
xchg
out
repnz
scas
sub
mov
and
call
push
sbb
jl
mov
push
insl
xchg
aas
nop
lret
ds
aas
imul
or
imul
xchg
call
imul
adc
sub
lret
out
pop
sbb
jae
ljmp
add
mov
cmp
or
test
or
iret
add
add
cld
mov
adc
sbb
outsb
sbb
out
out
mov
mov
push
fildl
pop
push
out
mov
scas
test
aas
jae
in
fwait
and
push
addr16
aad
xor
mov
cmp
out
pop
ss
std
hlt
outsb
sarb
dec
dec
jg
xor
sbb
jne
push
or
out
mov
xchg
test
imul
and
fsubs
pop
and
mov
xor
push
fstl
mov
rcl
and
scas
sub
gs
cld
dec
icebp
scas
pop
subb
setge
mov
dec
imul
mov
or
mov
roll
test
jne
aas
mov
push
inc
aas
ret
pop
mov
addl
add
sti
testb
xorb
add
mov
push
test
pop
adc
rcll
scas
xorl
lock
lret
mov
ja
and
mov
in
das
mov
inc
rcll
pop
or
mov
aad
lret
lds
dec
test
mov
xchg
shll
imul
pop
jp
repnz
lret
mov
dec
loopne
jge
lahf
push
cs
sbb
dec
test
lcall
jns
sahf
syscall
inc
xchg
out
popa
jge
sbb
into
das
mov
sub
mov
lods
movsb
and
sbb
and
or
in
xchg
jnp
add
add
xor
or
inc
xlat
xor
add
sbb
inc
in
roll
mov
adc
js
pop
jb
adc
mov
jp
out
in
push
jae
cltd
xchg
xor
jge
mov
add
in
jno
inc
jne
jae
jl
loopne
add
and
fsubl
inc
clc
jg
lahf
cs
jle
shlb
push
cmp
stos
outsl
pop
fnstcw
clc
bound
and
lret
jb
cld
add
pop
not
aas
fs
or
pop
movsb
inc
inc
or
nop
dec
stos
jnp
sub
lea
dec
loop
xor
mov
and
cmp
insb
cmp
jmp
adc
and
push
icebp
jo
adc
sbb
leave
cmc
sbb
sti
out
cs
sub
sti
jmp
int3
pop
sarl
mov
xchg
imul
jne
xorb
xchg
shll
test
orl
jecxz
gs
repz
or
shll
fs
cmpsl
inc
push
cmpsl
pop
mov
stos
ss
aam
gs
insb
mov
test
cmp
mov
xchg
xor
push
shlb
xchg
pop
push
das
mov
dec
mulb
xchg
dec
cmpsb
aaa
hlt
pop
jle
jle
jle
mov
lret
inc
push
test
decb
fidivl
loop
jbe
popf
push
stc
test
insl
sub
iret
push
and
or
mov
nop
scas
push
lods
cmp
mov
je
loopne
into
jg
mov
cmp
mov
mov
mov
lea
shrb
push
lods
iret
fsubrl
jnp
das
mov
test
aam
dec
jecxz
pop
int3
lods
inc
notl
addl
cmp
shrl
mov
lods
clc
add
pop
lods
sub
rcll
aaa
mov
ja
lock
and
sbb
testl
jecxz
push
shl
fwait
ret
cmpsb
call
movsw
arpl
xchg
outsb
cmp
sti
iret
jmp
and
mov
addr16
daa
scas
adc
out
ljmp
jno
test
roll
cli
or
sub
cmc
lds
or
movzwl
inc
lock
and
or
push
or
mov
sub
and
sub
or
mov
mov
out
leave
loopne
movsb
adc
dec
es
sarb
dec
test
dec
xchg
jbe
sbb
jne
loopne
mov
inc
and
xchg
in
cmp
push
mov
loopne
sbb
adc
out
inc
test
loop,pt
cmpsl
int
gs
and
sbb
adcl
test
scas
icebp
ret
cwtl
out
mov
jge
mov
mov
movsl
jns
addb
scas
outsb
and
insb
insb
xchg
arpl
shlb
inc
js
aad
pop
in
dec
das
and
into
jg
pop
shll
cltd
cmp
push
aas
jo
adc
xchg
dec
push
mov
loope
mov
jg
shlb
push
sbb
sti
das
jg
stos
cmc
inc
mov
xor
fiaddl
loopne
call
enter
orl
or
daa
inc
repz
shrl
xchg
out
add
fstp
in
push
inc
cmp
sti
mov
xor
pop
pop
xchg
mov
jmp
lock
mov
and
or
push
or
ret
inc
cmpsl
adc
or
rcll
dec
stos
testb
pop
in
cmp
adc
inc
mov
xchg
pop
adc
push
shrb
jae
xlat
addb
sbb
push
out
cmpsb
add
inc
aaa
and
lcall
add
mov
fcoml
and
dec
or
popa
jecxz
push
jno
out
push
stos
loope
popa
push
inc
pop
xchg
movsl
or
mov
loope
aas
arpl
xor
xchg
add
loopne
add
faddl
test
inc
lret
mov
les
and
and
leave
mov
ja
jge
out
sub
call
jecxz
sbb
fisttpll
dec
in
sub
nop
sub
push
insb
insb
dec
out
xor
nop
mov
popa
mov
fsubrl
xor
lods
pusha
incl
cmpsl
test
sbb
jg
das
push
mov
das
xchg
aas
xchg
mov
xor
adc
add
hlt
mull
dec
sbb
or
or
mov
jne
in
cmp
mov
dec
mov
and
pop
popf
shl
inc
pop
stos
cmc
test
iret
jle
and
xor
pusha
sbb
inc
icebp
ret
sahf
dec
sbb
mov
push
ret
test
ja
lcall
cld
scas
and
lods
mov
loope
jge
aas
scas
xchg
cmp
test
les
and
outsb
fstl
scas
inc
jecxz
xchg
inc
fadds
es
inc
push
pushf
andb
jne
push
push
inc
ja
mov
scas
ret
popa
push
mov
inc
adc
enter
adc
sub
jl
shlb
mov
scas
cmc
or
xchg
movsl
mov
roll
test
dec
int3
aad
cmp
cmpsl
push
mov
adcb
add
test
addr16
aaa
cmp
ja
add
mov
dec
in
aad
cmpsb
push
dec
sbb
lea
ss
jge
popa
push
repnz
pop
das
pop
test
lods
pop
dec
shr
xor
adc
sti
inc
int
jnp
out
mov
xor
jb
add
sub
sahf
mov
hlt
fistl
fs
aad
jge
insl
inc
cmp
fs
mov
call
jne
aam
mov
lret
adc
fisubl
lret
mov
cmp
mov
insb
iret
or
jnp
xchg
sbb
or
xchg
out
test
js
out
rcr
and
cwtl
inc
and
mov
push
xchg
arpl
call
das
push
mov
dec
jmp
mov
cmp
mov
sbb
cs
cmp
pop
jl
mov
insb
daa
xchg
add
fnsave
jns
or
lock
daa
sarl
or
or
adc
sub
leave
add
loop
insb
inc
jg
mov
scas
push
mov
mov
mov
adc
push
sub
inc
stos
mov
daa
in
xor
icebp
aaa
adcb
sub
sub
out
add
or
fstp
sbb
lods
xor
mov
cmp
inc
sbb
sub
xor
imul
jne
add
adc
test
dec
fisubs
cmp
in
cmpsb
xchg
adc
xchg
sbb
pop
mov
dec
jle
rcrl
shrb
clc
insb
mov
or
cmp
stos
inc
pop
pop
push
pusha
lcall
out
stc
xor
and
insb
xchg
in
push
in
lods
push
adcb
les
dec
out
sub
pop
cmp
xor
or
mov
and
ljmp
push
pop
lcall
pmaxub
dec
cmpsl
mov
pop
xchg
mov
adcl
add
pusha
aas
test
in
jae
dec
xor
pop
jo
dec
mov
jge
add
data16
push
testb
pop
loopne
pop
das
ds
test
or
icebp
pop
or
into
sti
sbb
stos
pop
cmc
lcall
jg
dec
mov
jo
out
xchg
sarb
out
or
fs
pop
or
push
bound
sarb
bound
or
mov
and
rcrl
enter
sti
mov
cmp
sub
out
cmp
xor
ret
jg
sarb
fs
push
sbb
or
xor
and
repnz
sbb
dec
and
test
sbb
jnp
dec
xchg
mov
insb
xor
push
test
imul
inc
push
cld
jnp
dec
cmp
xchg
rcr
mov
repnz
data16
imul
fsubl
or
lock
ljmp
lock
es
fdivl
add
das
cld
cmpsl
sub
aaa
cld
test
mov
push
mov
lock
sbb
sbb
adc
sub
push
push
pop
jnp
popa
add
xchg
and
xor
clc
or
push
mov
mov
or
divb
into
xchg
add
les
or
pop
inc
mov
lahf
adc
inc
dec
jb
mov
push
mov
in
cmc
gs
push
into
jne
push
imul
inc
mov
rcl
inc
aam
jmp
mov
xchg
leave
notb
into
fistl
ret
loopne
sbb
insl
out
and
cld
testb
mov
xchg
cwtl
cmp
call
bound
loope
dec
push
jno
stos
xchg
test
gs
daa
cli
adc
jp
xlat
dec
ja
insl
insb
daa
insl
rolb
sbb
jmp
push
mov
or
pop
nop
repnz
fistpl
pop
les
dec
push
out
int
mov
xor
mov
inc
cmpsl
mov
es
ret
repz
pop
and
fnstenv
mov
pop
sbb
cmp
xchg
mov
sub
rcr
and
icebp
daa
lret
xchg
sbb
inc
icebp
aas
fsubs
cmpsl
cmpsl
arpl
call
mov
shrl
aam
ret
repz
negl
sbb
scas
cmp
dec
cs
pop
mov
jmp
scas
cmp
nop
xchg
jns
aam
sub
inc
cmpsb
fists
fbld
mov
inc
sub
fwait
out
out
into
pop
mov
xor
mov
xchg
cmc
inc
xchg
jg
hlt
cmpsb
daa
pop
mov
ds
mov
iret
data16
mov
loopne
cmp
inc
popa
jmp
push
mov
lahf
mov
data16
add
sub
popa
fs
adc
fdivs
test
mov
ds
test
or
sub
mov
pop
rorl
sarl
test
pop
cld
inc
xchg
push
ret
mov
mov
push
cld
lret
xor
jne
mov
into
stos
outsb
cmc
inc
stc
mov
test
repz
pop
pop
aaa
sarb
popf
leave
xor
push
cmp
mov
and
es
and
dec
jb
lahf
mov
pop
adc
movsb
arpl
xor
and
sub
int
sbb
mov
pusha
scas
out
pop
or
test
jp
mov
and
rcrb
adc
add
cmpsb
gs
popf
into
push
sbb
mov
push
out
aaa
push
out
dec
mov
les
pop
out
dec
adc
movsl
in
test
lock
gs
xor
add
mov
push
cltd
jbe
xchg
jae
js
dec
jne
xchg
imul
test
pop
push
repnz
mov
jecxz
jnp
sub
cmp
mov
or
add
scas
sti
test
mov
inc
sbb
mov
or
pop
or
out
scas
cs
lret
adc
mov
iret
jg
fisubs
cmpsl
test
inc
movsb
je
scas
sbb
pop
jne
fsts
loopne
sub
pop
and
insl
mov
mov
std
dec
pop
adc
pop
jge
or
imul
repz
pop
adc
and
fwait
insb
jb
mov
js
adc
pusha
add
jbe
xor
add
shl
fdivs
movsb
jnp
inc
cmp
sbb
lock
jae
sbb
mov
sbb
daa
pop
pop
je
jne
std
loop
and
mov
xchg
cltd
scas
nop
add
mov
add
xchg
dec
xchg
jnp
jmp
bound
cwtl
push
stc
cmp
repnz
es
jb
ds
leave
lods
fisttpll
adc
stos
fdivl
clc
lods
mov
in
jle
bound
aaa
push
add
pop
inc
lea
inc
in
out
lahf
xor
jge
dec
adcl
lods
bound
cmpsl
mov
adc
jle
sub
ret
scas
dec
in
test
jp
aaa
add
mov
sti
in
push
jae
xor
stc
lods
cmp
loopne
outsb
xchg
sbb
xchg
xchg
sahf
cld
ja
scas
fisttpl
fnstsw
fisubs
arpl
rolb
mov
mov
insb
aas
cmp
lods
rcrb
jmp
out
jb
push
dec
sahf
pop
notl
sahf
add
in
lock
mov
mov
lods
pop
push
js
hlt
ds
pop
push
sbb
sbb
pop
cmpl
jmp
add
icebp
pcmpeqw
es
pushf
js
mov
clc
and
cmpsl
push
adc
push
cltd
sub
xor
xchg
cld
fwait
xorb
xorb
mov
push
std
movsl
iret
jnp
js
push
mov
and
fwait
xor
adc
add
push
adc
cmc
jb
sub
xchg
lods
sub
pop
xchg
push
and
add
fildl
scas
subl
das
pop
jge
inc
lahf
sub
in
outsl
inc
popa
adc
push
out
mov
and
insl
or
dec
movsl
in
in
push
ljmp
cmpsl
inc
cmp
in
mov
cmp
inc
rclb
cmp
idivb
jecxz
pushf
je
xor
and
mov
scas
inc
cli
add
push
les
mov
mov
jo
or
data16
nop
pop
sub
push
mov
adc
pop
sub
inc
repz
mov
es
ljmp
ret
clc
fcomps
insb
jp
push
cmp
mov
int3
mov
push
xor
xlat
out
lret
aad
pusha
into
push
sub
and
rorl
sbb
pop
ret
xlat
jge
movl
push
xor
mov
addb
flds
jl
push
push
mov
call
mov
rcll
jnp
jmp
cli
in
sbb
mov
in
cs
mov
jae
lods
xchg
adcl
test
aam
xchg
enter
shlb
or
xchg
dec
enter
jle
mov
xor
xchg
jo
outsb
push
or
jge
scas
xchg
fs
shll
sub
push
flds
icebp
testb
mov
dec
mov
mov
movsl
dec
fnstsw
repz
je
adcb
pop
adc
les
sbb
in
jle
das
xchg
movsb
pushf
out
sbb
push
imul
es
mov
in
xor
jmp
and
pop
dec
pop
daa
fimull
add
mov
aaa
mov
push
and
mov
jbe
scas
fiadds
push
mov
sbb
hlt
cmp
xor
ljmp
pop
cld
movsl
ret
popf
mov
arpl
call
mulb
cli
fs
mov
and
lcall
pop
jge
rcrb
xor
hlt
push
jle
or
loope
ds
sbb
lea
out
cmp
std
pop
mov
mov
out
in
inc
mov
lret
jp
test
jle
pop
pop
int
pop
dec
data16
mov
inc
fcmovnu
fnstcw
inc
cmp
pop
jnp
add
leave
daa
hlt
jnp
xor
test
xchg
mov
hlt
mov
dec
add
xlat
xor
jecxz
jnp
cmc
xchg
mov
shrb
push
pushf
in
in
js
jnp
pushf
mov
mov
fimull
std
add
or
pusha
xchg
pop
xlat
test
push
call
bound
adc
dec
xor
inc
adc
scas
je
pop
xor
inc
mul
add
insb
movsl
pushw
mov
ljmp
fisubrs
xchg
test
fsts
std
or
out
in
add
mov
in
arpl
in
out
scas
inc
subl
jns
sbb
imul
jb
push
std
jo
ret
stc
xor
popw
mov
insl
stos
push
daa
sub
mov
dec
jg
fdivrl
sti
xchg
sbb
lock
sub
std
popa
sub
cmp
push
inc
pop
loop
jecxz
fsubr
sti
fbld
jbe
xchg
or
fldl
mov
dec
mov
cmp
bound
jecxz
pop
jmp
push
ret
and
or
dec
sbb
clc
cmp
push
sub
lret
int3
rorl
adc
adc
add
pop
lods
mul
stos
aas
into
loope
jmp
int3
into
insl
sub
sub
test
sub
or
aas
push
xor
or
inc
ret
pop
mov
outsl
sahf
dec
outsl
lret
test
or
jns
mov
jns
dec
push
mov
fmull
cltd
sbb
and
xor
adc
mov
xchg
mov
adc
inc
in
and
jmp
scas
push
sbb
or
call
ret
push
jl
data16
lock
adc
xor
movsl
mov
fstpl
xor
pop
lea
lret
rcrl
mov
sbb
dec
popa
push
dec
jb
cmpsl
push
dec
out
int3
rclw
rcl
cs
cmpsl
lds
setbe
imul
jo
ljmp
leave
xchg
mov
push
fwait
jno
scas
jne
loope
pop
push
jo
ja
gs
cmp
shll
push
sarb
xchg
sub
iret
in
pop
sub
imull
sub
outsl
fcomp
mov
mov
dec
pop
adc
mov
xchg
loop
pusha
dec
add
int
pop
insb
gs
movsb
push
js
lret
scas
xor
mov
sbb
lcall
fldenv
popf
dec
hlt
and
and
and
and
enter
dec
cmp
mov
push
ret
pop
mov
into
fs
mov
movsl
loop
adc
cmp
mov
dec
cltd
push
lds
loop
jne
ja
dec
cmp
icebp
add
outsb
xor
cmp
jae
sbb
movaps
sub
mov
lret
sub
js
adc
lahf
mov
push
sbb
dec
test
lods
insb
in
jmp
mov
rorl
fs
jge
lock
push
scas
mov
dec
jns
bound
addr16
inc
pop
jae
xchg
and
repnz
sbb
pop
or
movsl
mov
sbb
dec
mov
imul
dec
jo
cmpsl
test
pop
test
inc
inc
rorb
xchg
ds
and
mov
mov
add
xlat
mov
dec
fwait
in
rolb
or
nop
and
into
fmull
shrl
fdivl
lods
mov
mov
xchg
lods
lods
in
movb
ljmp
lea
pop
sbb
in
out
dec
test
xor
push
fcmovne
cs
es
pop
std
bnd
add
daa
dec
mov
pop
or
jmp
cmpxchg
mov
pop
or
mov
aam
xor
adc
cmp
cwtl
mov
or
xorb
jae
jle
loop
dec
test
jmp
lock
cs
adc
jb
mov
movsl
push
mov
cmc
cld
inc
jo
jo
push
xor
fistl
scas
xor
test
and
enter
cld
inc
daa
xor
insb
mov
xchg
jle
add
pop
fisubrs
lret
dec
mov
popf
mov
rolb
jno
add
test
cwtl
loop
imul
pop
mov
jb
mov
inc
mov
int3
popa
adcl
adc
dec
daa
push
jmp
pop
jbe
je
or
sbb
sub
inc
dec
shll
mov
dec
stos
dec
aad
mov
pop
mov
ljmp
negb
data16
cwtl
xor
sete
test
or
or
mov
jecxz
mov
lret
in
jo
jbe
imul
dec
jb
sub
mov
jns
jo
sti
mov
das
mov
or
test
rclb
lds
aas
aaa
jne
int3
jg
mov
pop
cltd
lcall
pop
aam
or
mul
pop
jmp
and
mov
mov
arpl
or
cmpsb
pop
add
inc
cmp
push
sub
jno
sub
jns
xchg
cld
scas
mov
xchg
xchg
xor
add
jbe
pushl
or
dec
mov
sub
and
sub
pop
lea
lock
push
sbbl
xor
ret
jne
imul
sbb
stc
cmp
mov
fstpt
adc
fidivs
pop
in
xchg
lahf
cmp
arpl
ss
bnd
rorl
in
xlat
mov
pop
dec
iret
scas
cwtl
add
cmp
lods
sub
stc
xor
jne
inc
cltd
sahf
sub
imul
jmp
cmp
mov
mov
dec
push
mov
or
dec
arpl
xchg
add
dec
je
nop
addr16
jno
mov
adc
and
and
popf
sbb
js
inc
jno
lea
inc
adcb
mov
mov
cld
repnz
in
add
mov
out
push
xchg
testb
int
mov
lcall
mov
shll
push
jmp
mov
aas
je
scas
push
lods
mov
ss
adc
pusha
dec
xchg
push
insl
xlat
aas
jbe
and
dec
push
cmc
cmp
inc
mov
inc
enter
shlb
popf
cs
mov
pop
sub
xchg
scas
pop
xchg
jmp
inc
into
in
xchg
add
ljmp
jae
int
cmp
mov
outsb
xchg
fidivrl
dec
cltd
or
push
bound
sti
fwait
test
pop
add
enter
lret
lcall
xchg
stos
inc
iret
fdivrs
mov
sbb
cmp
inc
sub
pop
andb
inc
xor
fadd
mov
pop
loopne
test
out
cltd
inc
mov
mov
fidivrs
xchg
arpl
lds
cmpsl
dec
push
int
pop
add
loope
sbb
mov
mov
xchg
mov
mov
pop
push
movsb
das
or
adc
mov
cmp
add
xlat
bound
int3
sbb
sbb
push
adc
ss
jae
imul
jle
xor
mov
mov
mov
lods
out
jb
mov
inc
xchg
mov
jge
jne
cmpsl
xor
inc
push
inc
clc
inc
clc
je
pop
dec
js
xor
loop
xchg
int
sbb
lods
popa
insb
adc
jg
or
dec
aaa
push
into
sbb
mov
cmp
lea
fidivrs
outsl
sbb
aad
sub
int
call
mov
xor
mov
cmc
inc
mov
mov
int3
in
notl
mov
and
es
ret
test
int3
daa
mov
insb
es
int
ror
adc
insb
mov
movsb
data16
adc
mov
addr16
ficomps
inc
mov
ss
push
inc
add
rorb
adc
cmpsb
sahf
sbb
addr16
jmp
aam
clc
jne
in
pusha
dec
mov
ljmpw
xor
pop
lcall
jle
shrl
lcall
sbb
xchg
add
sub
mov
jmp
pusha
lret
and
or
stc
cld
xor
nop
jg
mov
cmpsl
shrl
mov
hlt
mov
cwtl
mov
sub
ljmp
icebp
into
test
sub
test
pop
adc
stc
nop
mov
push
push
outsb
xor
push
testb
imul
rol
cmpsb
push
sub
xor
repz
iret
cli
cmp
sti
dec
push
out
xchg
fwait
lret
movsl
mov
mov
mov
outsl
into
sbb
dec
adc
fiadds
cmp
jecxz
test
inc
addl
rclb
add
fldl
test
pop
push
push
inc
in
cwtl
gs
mov
adc
shll
sbb
sub
sbb
dec
rcrb
repnz
gs
cmpsl
jbe
xor
and
cwtl
clc
icebp
in
push
push
fwait
pushf
sub
mov
gs
in
popf
loop
push
or
cmp
cs
mov
movsl
fcompl
icebp
inc
mov
push
dec
loopne
ss
divb
sbb
xchg
scas
push
dec
mov
outsl
xchg
jl
icebp
roll
jo
dec
or
out
mov
cli
enter
xor
cmpl
idivl
sar
ret
jno
ret
cs
ret
mov
cmc
xchg
hlt
faddl
lret
jb
push
cmp
in
cwtl
push
jb
xchg
xor
mov
dec
add
jae
and
je
and
fdivrs
push
addr16
aas
dec
cmp
test
sti
out
lds
aas
and
fwait
inc
inc
or
lret
gs
and
divb
push
in
lret
rcrl
cli
push
mov
ret
lret
inc
dec
call
lahf
ljmp
scas
in
fs
fsubrl
pop
xchg
outsl
xlat
movb
shl
cmp
repnz
lods
test
jne
push
xchg
rcr
sbb
sub
xlat
divb
es
addr16
sbb
mov
or
shlb
int
mov
and
push
dec
lcall
mov
insb
sub
mov
ret
adc
and
negb
stos
xorb
jge
nop
js
jo
int3
or
cmc
pop
fldcw
cld
inc
jne
pusha
fistps
xor
sbb
popa
fdivl
push
mov
loope
jl
pop
mov
jo
and
or
add
mov
jmp
xchg
push
mov
jne
and
mov
lcall
fsub
dec
or
repnz
mov
stc
mov
mov
mov
js
aad
sub
cli
jmp
sbb
bound
jbe
mov
outsl
sub
aaa
sbb
or
dec
inc
mov
jmp
mov
dec
mov
inc
cmpsb
add
popf
lret
jg
imul
mov
sbb
movsb
mov
data16
dec
ret
shrl
xchg
ja
sub
or
lock
cmp
jg
or
dec
and
jno
jae
in
inc
xor
lock
daa
aad
arpl
sbb
sar
inc
repnz
pop
lahf
call
mov
xlat
mov
test
test
fidivrl
je
cltd
or
or
xchg
subb
clc
push
mov
aam
pop
rorl
dec
add
inc
lds
cli
push
jb
lds
es
and
popa
cmc
in
ret
aam
movsl
adcl
jo
aas
aad
inc
jnp
cmp
or
sarb
ficompl
jnp
lahf
push
adcb
sbb
ss
test
les
mov
lahf
stc
iret
jb
cs
mov
aaa
xor
enter
into
xchg
mov
inc
pop
decb
test
cmpl
mov
cmp
jl
xor
jl
pop
xchg
testb
pop
es
mov
cmp
jbe
and
std
and
jecxz
lret
test
movsl
pop
insl
sbb
insl
ret
dec
or
pop
mov
movsl
xor
out
pop
cmp
ja
outsb
lods
fcoml
cmp
scas
inc
mov
lds
xorb
pop
clc
repnz
push
imul
shlb
xlat
daa
out
pop
inc
ret
dec
mov
out
adc
roll
mov
push
jbe
xor
push
cmp
push
jno
sub
jmp
jl
add
jns
cli
xor
dec
adc
daa
imul
jg
add
cmp
adc
mov
sahf
mov
cwtl
adc
xor
and
stos
mov
movsb
jae
jp
xchg
jno
insb
push
pop
sub
xor
imul
mov
mov
sub
addr16
arpl
jnp
jecxz
xchg
lods
push
mov
or
out
lods
mov
ja
test
enter
nop
stos
xchg
xor
sbb
adc
inc
subb
sub
inc
mov
cmp
cmpsb
xchg
and
into
mov
pushf
push
std
stos
out
ljmp
adcb
mov
inc
clc
fdivrs
mov
addr16
cmpsl
shll
aas
mov
add
lds
test
call
aad
adc
bound
dec
push
fiaddl
sub
je,pt
inc
scas
ret
mov
and
lods
addl
or
adc
xor
lds
scas
and
mov
jmp
jae
fucomi
in
daa
mov
push
inc
and
dec
and
int
xchg
adc
addr16
cwtl
xchg
inc
mov
cmpsl
mov
or
mov
icebp
push
push
jbe
inc
sub
leave
lods
addb
stc
div
pop
push
cli
aas
jle
adc
or
stos
push
pop
add
mov
xchg
sub
adcl
sbb
pop
pop
dec
cwtl
stos
lock
pop
mov
lea
pop
sbb
dec
mov
adc
pop
adc
ror
add
mov
sti
dec
popa
push
jl
pop
pop
les
dec
es
inc
inc
jmp
sub
je
sti
mov
mov
das
test
mov
mov
adc
push
pop
jne
lods
adc
xchg
mov
cltd
es
lcall
adc
scas
sahf
sub
xor
and
sbb
cli
push
jbe
es
loop
lahf
xchg
pop
jae
xchg
pop
dec
sbb
outsb
dec
xchg
out
dec
dec
rol
fcomps
stos
lret
xor
stos
xor
sub
inc
xor
or
xchg
xor
es
jne
dec
mov
inc
xor
xchg
jp
cltd
mov
fsubr
mov
lock
jbe
inc
jg
inc
nop
or
adcl
xchg
lock
mov
stos
xor
das
inc
cli
jbe
mov
outsb
movsl
sbb
jbe
clc
push
push
push
xchg
jp
jne
mov
ret
sbb
dec
nop
mov
pop
fucomip
loopnew
arpl
lea
adc
jne
loope
dec
mov
cmpsl
mov
mov
pop
pop
rorb
ds
push
scas
fidivl
lcall
clc
mov
pop
out
sarl
rcll
pop
js
pop
mov
cmp
push
sbb
data16
lock
sub
cs
das
xor
xor
or
aam
xchg
add
adc
and
jbe
out
int
sub
push
mov
aas
test
adc
lods
call
mov
mov
pop
lea
xchg
jecxz
sarb
das
inc
mov
out
data16
mov
fnsave
mov
xchg
es
dec
addr16
pop
loopne
jb
loope
pushf
xchg
insl
cwtl
or
loopne
push
shrl
xchg
hlt
mov
insb
dec
ficompl
inc
jmp
int
cmp
add
mov
mov
loop
pop
mov
clc
push
test
xchg
and
adc
dec
aaa
pop
jb
lcall
jno
sub
adc
mov
mov
lds
mov
fmuls
fnstcw
jnp
jmp
clc
push
out
dec
scas
inc
pop
jne
jecxz
jb
outsl
outsb
and
fistps
push
mov
dec
shll
sbb
xchg
enter
dec
data16
in
jnp
sub
jne
shlb
mov
fstps
cmp
xchg
fbstp
cli
and
adc
movl
enter
xor
lcall
add
subb
outsl
movsl
repnz
and
aad
jmp
sub
mov
push
xor
mov
xor
rcrb
out
inc
in
fldt
mov
xchg
sbb
sbb
mov
lret
push
xchg
or
out
aas
aad
das
or
sbb
hlt
add
xchg
mov
aam
cmp
xchg
inc
push
inc
push
fnsave
fwait
addr16
or
jne
shr
icebp
ret
sbb
jns
push
mov
loop
mov
cltd
fs
mov
daa
dec
mov
xor
adc
test
inc
push
xor
orb
je
dec
stos
fcomp
adc
daa
addr16
sbb
pop
pop
test
and
xchg
fimull
mov
pop
mov
pop
sbb
out
cli
mov
cmp
or
pop
lcall
mov
sbb
mov
or
lock
jl
jmp
mov
push
aam
adc
ror
dec
inc
cmp
arpl
aam
ljmp
jge
outsl
mov
dec
aam
outsb
push
jo
xor
mov
dec
fwait
xchg
mov
cmp
pop
push
int
jb
xor
pusha
fists
or
bsr
popf
jo
jnp
cmc
rclb
std
bound
cmp
push
lcall
sub
xchg
mov
inc
xor
ficompl
push
aam
inc
jne
push
mov
fs
sub
dec
xchg
mov
sub
jb
ror
mov
pop
adc
or
sbb
push
test
stos
imul
mov
loope
mov
xchg
icebp
test
mov
sbb
mov
fs
add
out
inc
and
ds
push
scas
gs
mov
xchg
xor
push
mov
jae
je
sub
and
push
ret
xchg
xchg
mov
outsb
or
or
fcomp
fdivrs
jmp
pop
pop
pop
outsl
dec
mov
dec
mov
dec
or
cld
in
inc
jns
mov
add
dec
xchg
jle
es
mov
stos
cmp
addb
shl
xor
das
xchg
sub
or
pop
js
sub
adc
jg
xchg
dec
sub
mov
leave
xchg
stos
add
enter
add
fsubr
add
aaa
xchg
into
add
sbb
clc
push
into
xchg
loopne
movsl
movsb
in
push
pop
jne
cli
jmp
pushf
inc
mov
int
mov
pop
mov
cmp
js
out
sbb
xchg
or
push
push
push
pop
sahf
leave
cmpsl
push
xchg
pop
cmp
xorl
cs
sub
push
fiaddl
fs
xchg
test
add
decb
loopne
bound
and
rep
cmp
xor
scas
and
push
xlat
test
inc
dec
dec
roll
push
mov
lcall
mov
or
xor
push
mov
pushf
push
fdivrs
jecxz
mov
ss
mov
mov
dec
dec
stos
test
hlt
arpl
or
inc
mov
xchg
cmc
mov
shlb
adc
das
adc
mov
movsl
inc
popf
push
jl
lcall
push
or
mov
pop
xchg
jb
and
or
push
mov
mov
frstor
addb
aad
gs
cltd
es
sti
outsl
sub
adc
push
xchg
lahf
insb
pop
inc
in
outsb
scas
mov
test
xor
out
je
adc
fdivrp
or
mov
icebp
xchg
mov
fmull
stos
or
xchg
add
sahf
test
stc
push
and
mov
inc
sbb
xchg
mov
out
dec
and
aaa
fimull
test
mov
fldt
mov
pop
push
es
icebp
jecxz
sub
inc
mov
adc
jae
imulb
pop
sbb
rorb
leave
dec
xchg
mov
dec
adcl
cmp
inc
adc
mov
inc
hlt
cli
insb
iret
cld
std
cmpsl
mulb
inc
add
push
add
leave
out
int3
cs
inc
mov
cmovne
and
cmp
dec
xchg
sub
pusha
or
test
or
mov
addr16
add
dec
adc
cmp
xchg
dec
cmp
or
xchg
and
scas
push
ret
scas
loopne
outsl
dec
adc
lods
ja
xchg
xchg
mov
mov
inc
jle
cmpsl
xchg
out
mov
add
ret
inc
mov
test
cmp
loop
jae
je
push
push
push
jmp
push
fwait
and
insl
mov
out
push
addb
xchg
cwtl
sbb
out
test
jb
cmp
loope
clc
int3
dec
mov
movsb
or
arpl
xor
leave
int
dec
addl
test
sub
sahf
std
jg
fisubrl
push
leave
cmc
mov
pop
add
cmc
int
dec
les
rep
pop
scas
and
nopl
ret
add
jmp
push
cld
pop
mov
sbb
cmp
mov
fisttps
aam
cmc
pop
mov
mov
or
dec
fdivl
and
fidivs
fwait
cmp
repz
loop
movsb
pop
ds
jp
sub
push
fnstsw
outsb
in
mov
push
add
mov
add
cmpsl
stos
lea
lea
movsb
outsb
icebp
jns
dec
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
nop
mov
rolb
jl
cmpsb
and
mov
lods
jne
and
inc
incb
ficoml
dec
mov
mov
adc
mov
pop
mov
inc
in
sub
push
sahf
adc
std
push
stos
stos
dec
mov
aaa
mov
scas
lds
dec
sub
and
lods
enter
inc
aad
add
and
jl
mov
pop
mov
pop
sbb
inc
dec
sub
inc
mov
dec
shll
in
frstor
inc
push
and
jne
into
ret
scas
cmp
push
aaa
rolb
sub
popf
and
fimuls
daa
cmp
ret
lahf
mov
xchg
pop
call
repnz
inc
xchg
push
movl
sar
in
mov
and
xchg
fdivs
or
ljmp
jae
mov
push
cwtl
cltd
jle
xchg
pop
adcl
fidivl
sub
ret
ret
adc
jns
cmp
dec
fwait
cltd
repnz
jne
scas
cmp
xor
add
and
push
ja
lahf
test
dec
push
and
dec
aad
loope
lret
mov
jmp
and
lods
adc
lcall
fldcw
mov
dec
stos
fwait
pop
ret
mov
xlat
and
pushf
imul
enter
shrl
imul
adc
setne
mulb
and
or
repz
mov
cld
int
jle
push
inc
jns
ret
add
adc
andb
pop
ret
push
fildll
and
dec
ljmp
push
fistps
pop
mov
orl
pop
mov
pop
xchg
mov
cli
in
ret
and
inc
inc
shl
loop
stos
jae
or
stc
daa
push
adc
ljmp
stos
loop
and
mov
stos
dec
int3
mov
cltd
out
jnp
pop
xor
jp
mov
push
cmp
sub
add
adc
popf
push
push
out
arpl
dec
xchg
xchg
jecxz
ret
icebp
xor
mov
imul
stos
lret
and
test
sbb
or
pushfw
cmpsb
outsl
sbb
adc
xor
sti
or
xchg
out
jg
xchg
push
push
or
fmulp
lcall
or
mov
jnp
sbb
inc
outsb
or
enter
mov
pop
adc
dec
outsl
outsl
add
jmp
and
xlat
xchg
lahf
jb
inc
daa
push
mov
xor
cmp
xchg
gs
jae
gs
lea
sbbl
jmp
ljmp
jecxz
test
int3
fnstcw
pop
jne
movsb
sub
adc
lea
jae
jmp
ret
stos
push
xor
stc
dec
js
iret
inc
frstor
nop
push
and
and
int3
test
lahf
cmp
sub
das
add
mov
mov
js
cmpsl
sbb
aam
loopne
popa
push
add
inc
jo
call
out
cmp
sub
pop
shrb
and
pop
ljmp
sbb
outsl
fwait
xchg
add
pop
imul
shlb
aaa
mov
dec
es
mov
dec
sbb
jo
je
cs
stc
lock
test
outsl
scas
into
mov
icebp
xlat
mov
or
and
xor
call
jle
add
das
mov
inc
imul
cs
sbb
insl
xchg
jmp
mov
cld
xchg
cmp
insl
popf
push
jmp
mov
les
std
ss
pop
hlt
adc
mov
cmp
push
scas
jbe
imul
pushf
mov
fldenv
ret
cmp
inc
lcall
ret
xlat
jecxz
ret
and
jmp
fwait
jge
call
sbb
pop
add
je
test
int
lahf
mov
sub
sub
dec
pop
lock
inc
pushl
push
pop
mov
mov
jg
out
pop
push
repnz
jg
scas
adc
jp
lods
or
adc
mov
adc
adc
adc
or
hlt
rcll
data16
jge
out
add
loope
fadds
fmuls
cvtps2pi
and
and
int
sbb
jp
cmp
add
outsb
push
sub
adc
aad
pop
mov
mov
inc
and
mov
pop
insb
mov
aaa
in
lock
inc
and
sbb
fmul
mov
cli
jns
leave
add
sub
add
xchg
scas
in
adc
xor
sbb
data16
arpl
jns
mov
mov
loope
inc
popf
addr16
pop
lds
sbb
and
or
popf
andb
insl
mov
addb
in
fs
call
sbb
jnp
ret
cmp
subb
mov
xlat
inc
sbb
ret
or
in
xor
mov
sub
mov
dec
fwait
adc
test
and
es
mov
sbb
sub
add
pop
mov
hlt
cs
xchg
inc
mov
outsl
mov
push
mov
cmp
or
jle
negb
mov
jg
je
add
xchg
aam
cmp
jns
test
dec
inc
in
xchg
mov
adc
std
insb
les
leave
dec
mov
iret
xlat
into
jl
loopne
fstps
sahf
jo
sub
mov
dec
sbbb
out
add
hlt
stos
sbb
bound
add
leave
scas
xor
fcoms
cmpsl
movaps
adc
lret
cltd
pop
pop
or
dec
mov
js
xchg
insl
or
xchg
rorl
push
test
clc
jns
sahf
push
adc
daa
xchg
adc
pop
jo
sub
cs
addl
pop
cmp
xor
je
cmp
insl
pop
pop
iret
sub
or
iret
xchg
stc
mov
and
sub
outsl
pop
hlt
add
xchg
cmp
push
or
aas
repz
pop
pusha
fadds
sub
std
fwait
xor
lock
pop
adc
lds
int
sub
sub
dec
jge
movsl
or
add
addr16
fisubs
and
sbb
or
orb
xchg
sub
push
or
pop
cwtl
add
add
xchg
jns
xchg
das
insl
out
mov
inc
subb
fisttpll
xchg
adc
js
in
and
mov
jnp
inc
gs
imul
test
and
test
aam
sub
xlat
shrb
or
adc
loop
jno
jmp
enter
dec
cmp
add
popl
inc
dec
xor
into
insb
in
in
mov
xor
stos
inc
pop
cltd
xchg
cld
mov
mov
fxch
pushl
arpl
inc
xchg
int3
out
xor
adc
pushf
hlt
sarb
ret
add
insb
daa
lcall
jns
cmpsb
jle
icebp
or
pop
mov
mov
cmc
push
nop
repnz
mov
push
xlat
adc
ret
adc
xchg
pop
sub
or
sbb
jnp
cmpsl
mov
loope
mov
cltd
jle
or
mov
jle
dec
xor
sbb
mov
jp
shll
dec
mov
cmp
scas
fsubl
cmp
lcall
jle
push
xor
ss
push
popf
sarl
in
mov
lahf
adc
xchg
shl
mov
cs
push
pushf
lret
pop
jg
call
nop
or
sarl
cwtl
jnp
mov
addr16
mov
push
mov
xor
inc
push
cs
shlb
lret
ds
cltd
xor
cmp
addr16
jg
into
out
mov
xlat
aad
jnp
ss
mov
push
cmc
jb
pusha
jno
in
and
fldt
divl
mov
dec
call
ror
mov
cmc
scas
sub
mov
clc
sbb
add
loop
cltd
pop
jg
lcall
inc
in
ss
fisttpl
enter
stos
and
pop
push
insb
scas
jmp
jle
sbb
mov
push
pand
data16
cmp
jae
in
push
mov
pop
daa
inc
mov
jmp
scas
stos
cwtl
mov
stos
loope
lret
out
dec
xchg
test
scas
scas
les
mov
push
xchg
xchg
dec
imul
into
push
jl
es
dec
mov
xchg
ljmp
aad
fstp
insb
and
mov
pop
mov
and
or
sbb
sbb
loop
pop
lcall
lods
cmp
mov
mov
dec
imul
outsl
pop
inc
and
imul
xchg
mov
call
jl
and
pop
xchg
jo
push
insl
loop
sarb
jne
sub
xchg
test
popf
inc
aaa
ss
iret
mov
repnz
arpl
xor
fistpll
pop
jl
xor
bound
mov
ss
sbb
pop
mov
mov
mov
mov
push
push
stos
mov
ljmp
shrl
or
into
sbb
jecxz
stos
rcl
outsl
add
into
jmp
cmp
ja
and
aaa
inc
imul
daa
in
ret
jle
iret
fldt
cmp
or
pop
stc
loopne
mov
mov
rcll
xor
mov
dec
xchg
test
loopne
lock
xor
and
call
pop
add
jl
push
insb
mov
mov
jbe
xor
pop
jns
bswap
mov
add
xor
xor
sar
loop
sub
mov
shl
lods
movsl
mov
adc
outsb
pusha
addr16
repnz
ja
sub
dec
add
mov
sub
fidivrl
cmpsl
xor
push
lock
fstpl
pop
and
adc
adc
mov
dec
mov
and
imul
mov
sbb
in
or
cmp
cmp
inc
popa
cmp
mov
les
ljmp
mov
mov
xchg
aaa
int3
xchg
push
dec
xrelease
mov
mov
iret
push
test
dec
sbb
sarb
in
mov
adc
adc
xchg
les
cli
mov
dec
sbb
ljmp
jnp
out
or
xchg
push
int
in
push
mov
outsl
rcrl
jns
orb
or
or
cmpb
xchg
insb
in
xor
push
pop
js
xchg
stos
mull
shlb
xchg
addb
mov
mov
adc
adcl
push
mov
stos
clc
std
movl
or
mov
pop
and
pop
cmp
daa
in
and
in
xchg
fld
cmpl
xor
loope
add
push
dec
aas
gs
jno
or
pushl
xlat
jae
mov
out
int
sbb
pop
pop
stos
stos
pop
shl
popf
xchg
push
mov
mov
add
mov
mov
ss
pop
jle
jp,pn
inc
mov
jmp
loopne
cwtl
mov
popf
adc
pushf
cld
xchg
clc
jecxz
inc
fidivs
xchg
inc
dec
cmpsb
shr
mov
sbb
push
insb
xlat
dec
mov
cmpsb
xor
addl
in
cmp
cmpl
or
pushf
mov
cmp
les
scas
aad
xor
movsb
cmc
jecxz
or
icebp
xor
mov
xchg
xchg
xchg
cs
aad
fimull
out
xchg
pop
mov
push
lcall
jbe
aam
jl
xchg
in
std
pop
jmp
dec
mov
adc
mov
fidivs
push
stos
cmp
push
pushf
shrl
cwtl
xchg
add
xchg
movsb
insb
addl
cli
stos
pop
jnp
adc
notl
lock
arpl
leave
mov
mov
stc
shlb
daa
mov
mov
push
into
push
jae
push
mov
ljmp
repnz
leave
jle
jns
fisubrl
or
mov
mov
stc
aas
repz
xchg
adcl
mov
add
fbld
mov
loopne
insl
insb
sub
in
add
mov
adc
outsb
mov
and
mov
daa
rcrl
scas
xchg
das
mov
dec
inc
shll
and
adc
lock
inc
fwait
xchg
int
xor
imul
jmp
out
movsl
xchg
push
gs
add
pop
in
stos
sub
loop
stos
fists
test
push
fldl
sbb
dec
aam
or
mov
std
or
push
sub
mov
xchg
ds
xchg
inc
cmp
xchg
outsl
push
xor
mov
xchg
cs
repnz
add
adc
cwtl
jne
movsl
xor
mov
fs
cmp
movsb
int3
pop
nop
inc
and
cmp
jo
xor
clc
mov
aaa
cmp
or
inc
gs
enter
jecxz
jp
push
sbb
fwait
jl
fistl
es
mov
xlat
mov
and
mov
sbb
adc
js
or
leave
and
adc
inc
adc
xchg
inc
ja
xchg
xchg
jno
pop
icebp
jmp
loope
test
into
cwtl
and
cmp
test
outsb
repz
sti
xchg
or
fs
mov
cmpsb
xchg
lds
in
les
mov
push
xlat
negb
cltd
xor
imul
or
mov
xchg
mov
rolb
cld
orl
inc
imul
std
fdiv
aam
mov
aad
lahf
mov
mov
push
push
or
in
mov
or
pop
test
sbb
rclb
fwait
xchg
and
push
js
xchg
mov
sbb
push
mov
and
cld
lds
jp
jb
adc
pop
ret
xchg
adc
jmp
shlb
push
je
sarl
sbb
dec
dec
pop
mov
dec
sbb
dec
xor
lock
lods
xacquire
push
cmp
xchg
xor
js
fnstenv
gs
mov
mov
stos
xchg
xor
sbb
test
inc
dec
inc
loopne
and
in
lret
adcl
mov
dec
pushf
orb
jp
cmp
adc
sub
mov
test
sub
outsl
subl
int
mov
stos
bnd
mov
sub
mov
mov
cli
pop
dec
xor
mov
enter
movsl
movsb
xor
pop
je
rcll
pop
lods
addr16
inc
ljmp
movsl
fcmovb
movl
or
aam
lret
lret
mov
in
imul
stos
inc
xchg
xor
mov
fcmovnbe
stos
or
outsb
push
fildll
testl
lds
popa
int
pop
jge
outsb
in
jnp
jns
lds
rorl
test
inc
mov
xchg
test
fildll
leave
pushl
cmpb
cltd
inc
xchg
cmpsb
out
push
pop
mov
test
cmp
inc
xchg
xor
mov
jl
iret
das
ret
pop
out
out
enter
push
push
bound
loopne
sbb
stos
sbb
sbb
in
out
mov
repz
or
push
test
push
shl
sub
cmpsb
jbe
pavgw
popa
dec
ja
pop
es
add
cwtl
adc
sbb
xchg
movsb
adc
leave
adc
repz
dec
cwtl
adcl
xor
push
jne
ret
dec
jl
adc
or
stos
mov
sti
out
in
iret
sub
lods
jae
popf
xor
popa
or
dec
pop
sbb
mov
pop
xor
cs
dec
loop
ss
mov
pusha
and
and
les
out
xor
add
loop
adc
aad
aas
scas
mov
pop
scas
out
pop
push
sti
fadd
idivl
push
outsb
cmp
and
xchg
divb
inc
lcall
jge
mov
ljmp
ficompl
lods
scas
pop
pop
in
clc
jb
add
jnp
data16
cmp
sbb
inc
incb
imul
cmp
bound
fiaddl
cmpsl
call
out
popf
mov
push
out
mov
sub
jno
in
add
jmp
mov
or
add
or
sbb
cmp
or
add
mov
out
test
xchg
and
mov
mov
pusha
shrb
je
sbb
ja
test
test
jae
mov
jbe
cwtl
xlat
adc
subl
out
lret
cmp
aaa
add
sbb
inc
enter
andb
sub
mov
imul
fmul
sbb
lahf
sub
adc
enter
mov
ds
loop
push
loope
and
xchg
stc
lea
data16
stos
xor
cmc
int
sbb
jns
insb
aas
xchg
mov
sar
cmp
add
iret
ficoml
add
xchg
push
mov
lock
dec
leave
lock
inc
call
jb
cmp
mov
pop
add
pop
sub
aam
mov
mov
loopne
push
rol
mov
jecxz
jnp
dec
js
into
fwait
iret
jmp
xchg
cli
into
xchg
scas
or
xchg
test
mov
push
in
mov
andl
enter
cmp
dec
sub
push
pop
mov
xchg
call
insb
jo
arpl
jecxz
cmp
mov
cli
shlb
xor
das
shlb
fsubrl
xchg
outsb
or
jle
cmp
jb
mov
pop
lea
fs
jne
and
push
test
dec
mov
fldcw
jmp
lea
mov
hlt
pop
push
mov
or
lods
pop
cwtl
sti
movsl
daa
push
jp
xchg
sbb
or
ss
mov
sbb
pop
paddw
bound
ss
mov
or
mov
leave
clc
adc
mov
iret
test
das
scas
imul
imul
sbb
rolb
jo
ss
push
lahf
sbb
lahf
sbb
incb
call
and
pop
xchg
adc
sbb
sbb
push
adc
mov
cmp
imul
mov
loope
add
pop
pop
push
call
iret
add
sbbl
jmp
sub
inc
repz
icebp
and
call
dec
pop
sti
mov
testb
adc
imul
push
das
mov
mov
pop
mov
clc
sti
push
jmp
or
imul
xor
out
mov
cmp
out
in
int
int
adc
cmp
inc
stos
jo
mov
es
into
iret
in
cwtl
pushl
cmpsl
stc
inc
inc
dec
shrl
not
pop
xor
loop
cs
lds
jmp
jns
and
mov
out
push
or
popf
inc
ret
aam
fisubs
inc
jg,pt
lods
pop
or
xchg
jnp
lcall
cmp
pop
jae
mov
nop
daa
lods
cwtl
jo
mov
dec
shrl
and
mov
jecxz
imul
jnp
or
lods
dec
mov
sahf
xor
mov
xchg
in
jmp
jns
xor
ljmp
add
hlt
push
pop
sbbb
ljmp
sub
push
shrl
and
push
xchg
and
push
testl
es
into
sbb
jno
gs
enter
mov
pop
push
cld
mov
sbb
leave
shrl
sub
outsl
xor
adc
stos
sub
inc
cmp
repz
andl
lahf
fwait
icebp
push
add
in
rcrb
xchg
sub
pop
adc
push
mov
push
fistl
jmp
imul
sub
adc
mov
mov
pop
mov
sbb
shrb
jnp
cmp
or
imulb
scas
pusha
jmp
add
mov
xlat
xchg
jo
scas
mov
and
rorb
sub
push
fsubrl
lcall
rclb
cmp
xchg
lret
in
fldenv
mov
hlt
push
push
xor
xor
loope
cmp
sarb
stc
movsb
lods
jae
scas
mov
into
adc
adc
les
jmp
jg
cmp
and
cmc
fcmovb
cwtl
jp
leave
call
xchg
dec
ja
inc
mov
sahf
insl
mov
test
in
adc
mov
mov
inc
jne
fwait
jp
xchg
sub
pop
dec
fnsave
push
xchg
test
pushf
add
out
push
ja
cmpsb
push
sbb
mov
pop
les
cmpsb
idiv
mov
mov
mov
mov
mov
testl
ret
sbb
xchg
leave
daa
mov
sub
fiaddl
push
mov
jae
cmpsl
xor
dec
arpl
jno
inc
decl
or
sub
jg
hlt
and
iret
pop
imul
inc
cmpsl
xchg
add
dec
ror
xchg
aam
push
clc
sub
sbb
mov
or
lock
mov
mov
mov
fimull
out
mov
idiv
and
xor
fsubs
and
xchg
xchg
scas
jbe
inc
fnstcw
int
mov
jns
rcrl
inc
jmp
movsb
adc
aas
fwait
scas
nop
clc
add
scas
repnz
add
fmuls
imul
mov
int3
cmpsl
add
dec
test
fisubrs
xor
ds
cmc
sti
pop
jl
jae
outsb
repz
sbb
das
xchg
test
cs
lcall
cmpsl
insb
outsl
adc
xchg
sbb
sub
inc
or
les
jmp
inc
lods
adc
into
insb
dec
mov
mov
adc
bound
mov
jmp
sub
sbb
lea
adc
fs
cld
xorl
iret
pop
cmpsb
mov
leave
push
sub
cmc
popf
mov
jns
subb
sti
mov
push
mov
lods
adc
cmp
aad
clc
cmp
add
and
jecxz
scas
xchg
jns
cmpsl
outsb
push
cmp
add
insl
scas
dec
icebp
cltd
sti
ret
mov
mov
and
sbb
iret
jns
scas
mov
in
ret
fidivrs
out
sarb
xor
push
add
adc
cli
xor
lods
subl
sub
dec
ret
add
cmp
jge
push
cmp
pop
iret
jge
mov
mov
pop
inc
push
les
mov
cmp
jno
sub
inc
xchg
xor
cmpsb
divb
enter
popa
pop
sbbb
sub
pop
add
sub
aas
fs
jmp
mov
pop
xor
sub
popa
mov
ljmp
out
daa
loop
jnp
pop
push
jl
cwtl
icebp
sbb
lea
stos
bound
das
enter
mov
lret
mov
int
inc
ss
sbb
lock
push
and
dec
setnp
jmp
push
xchg
mov
mov
int
cmp
xor
out
cld
clc
pusha
fimull
mov
xor
dec
movsb
jle
sti
fistl
adc
dec
pop
rclb
xlat
and
insb
into
push
and
jp
jae
and
jne
roll
or
dec
sahf
pop
add
cld
push
jmp
jl
shl
pop
cmp
loop
xchg
sbb
xchg
inc
or
aam
inc
mov
mov
lret
or
imull
inc
cmp
nop
mov
imul
sbb
cmp
xchg
jmp
inc
dec
in
jge,pn
sub
pop
sub
xlat
ret
leave
mov
rolb
inc
mov
outsb
lods
add
je
daa
aas
shr
pop
divl
lahf
or
xchg
ret
xorl
push
mov
sbb
lock
popf
lahf
lods
mov
push
lea
xor
pop
dec
lcall
rorl
push
jg
in
inc
in
add
cmpsb
aaa
movsl
ja
dec
pop
ljmp
sbb
xor
fidivrl
cli
and
push
sbb
icebp
pop
dec
cmp
cmp
or
mov
aam
jne
adc
xchg
subl
ret
pusha
and
hlt
les
push
sti
insb
jge
inc
addr16
out
mov
popf
pop
pop
ljmp
dec
pop
sub
scas
push
cmp
mov
and
adcb
mov
scas
lret
sbb
aaa
jle
jp
push
cmp
lods
sub
adc
je
pop
dec
dec
adc
scas
adc
add
fwait
pop
xchg
lahf
xchg
andb
jae
in
lea
dec
ss
dec
aam
cmpsl
and
pop
icebp
dec
mov
inc
pop
sbb
ja
adc
lcall
ret
inc
loope
loop
cmpsl
push
lods
pop
or
inc
adc
je
scas
xchg
mov
mov
out
ds
pop
jge
std
lcall
aaa
xchg
out
sahf
jle
cmpl
scas
outsl
aad
andl
xor
call
lods
push
mov
jns
dec
sbb
test
dec
test
mov
mov
xchg
push
jmp
bound
pop
sbb
stos
sub
es
xor
loopne
sbb
pop
ja
inc
adc
ja
pop
je
cmp
fdivrs
xor
outsb
mov
or
dec
mov
adc
out
cmp
or
sti
mov
lock
dec
popf
shrb
sub
add
inc
jne
lods
mov
stos
mov
lcall
push
lret
filds
lea
sbb
dec
rcll
insl
mov
xchg
jg
xchg
arpl
xlat
cmp
scas
jmp
fmul
sub
jl
add
mov
bound
add
sahf
les
pusha
adc
jne
test
data16
xchg
dec
fisubrl
rcrl
jno
in
cmp
adc
out
mov
test
mov
ds
dec
es
xchg
sahf
jb
es
dec
dec
or
jle
rol
push
clc
imul
mov
cmp
addr16
push
cmp
xchg
dec
inc
push
mov
mov
sbb
add
rcll
inc
add
jge
inc
cli
jno
pop
push
mov
rcll
stos
fildl
nop
pusha
cmp
pop
rclb
push
mov
mov
jle
cmp
or
and
mov
adc
fsts
mov
lret
and
sbb
sub
push
or
sbb
fstpt
rol
aas
push
or
negb
pop
es
pushf
cwtl
test
push
lahf
fsubrl
sbb
mov
push
cltd
cmp
insb
jbe
adc
outsl
jecxz
test
push
add
push
mov
in
ret
xor
data16
and
jle
fisubs
shll
sbb
or
out
cmp
ljmp
mov
fildl
and
inc
inc
xor
pushf
enter
fwait
lcall
hlt
lret
pop
adc
push
sub
fwait
lcall
jmp
test
cld
push
adc
clts
add
mov
mov
mov
hlt
jne
aam
and
mov
adc
inc
xrelease
popa
loopne
add
xchg
mulb
inc
xchg
negb
aaa
fistpll
sub
ret
movsb
lret
inc
pop
xor
clc
fisttpl
mov
out
out
pop
insb
jmp
or
push
aam
mov
ss
jne
jns
mov
sarb
pop
lret
pop
inc
xchg
sub
scas
adc
jb
pop
mov
fisttpll
add
push
xchg
push
lcall
mov
aad
xlat
push
outsl
jb
nop
mov
dec
pushf
repnz
in
rcl
imul
rorb
and
pop
loop
repz
mov
arpl
fs
mov
pop
fnstenv
mov
popa
movsl
mov
xor
inc
mov
and
dec
iret
or
lcall
mov
js
mov
inc
out
jno
push
pop
sbbb
imul
and
test
xchg
add
or
imul
and
add
mov
int3
and
xor
imul
inc
mov
lret
mov
int
sub
jb
rcl
ret
out
push
imul
sarb
ja
jg
pop
push
pop
test
insb
jg
inc
ljmp
scas
sbb
jns
iret
pop
fsubp
mov
mov
pop
and
fisubrs
xchg
mov
cmpsb
adc
cmp
xchg
ds
jnp
ja
dec
add
and
notl
lods
jle
sbb
nop
loopne
lret
imul
adc
stos
sub
sbb
mov
notb
xor
lret
imul
pop
cmp
cmp
push
addb
dec
fdivr
xor
ss
mov
imul
shrl
stos
xor
je
push
mov
dec
mov
pop
adc
test
cltd
xchg
mov
xor
enter
fdiv
pop
jl
cwtl
les
addr16
pop
int
test
inc
jnp
xor
pop
or
adc
add
cld
mov
stc
lea
shlb
insl
dec
fidivrs
repz
cwtl
xor
sub
jmp
mov
rorb
fs
push
mov
subl
ds
cltd
jne
mov
std
ret
cmp
fdivrl
ljmp
pop
ljmp
loope
scas
outsb
xchg
je
fstpt
and
cs
outsl
test
ljmp
adc
out
mov
ljmp
fnstenv
cmp
mov
mov
mov
xchg
fists
xor
xor
or
sbb
int
dec
jns
lcall
fwait
jb
std
sub
and
aam
mov
xchg
int
mov
cmpsb
jle
dec
push
inc
push
jge
test
xchg
cmp
orb
add
push
fisttpl
push
insl
js
cmpsl
arpl
jl
inc
or
mov
ljmp
notl
push
push
dec
imul
rorl
mov
outsb
sbb
mov
in
or
std
or
mov
cld
lret
dec
in
xor
push
jmp
sub
inc
imul
mov
into
sarb
pushf
sbb
jnp
cmp
jns
mov
sbb
jge
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
inc
pop
arpl
pop
jl
js
add
cmp
shll
pop
pop
orl
movsb
in
mov
jno
pop
fcmovbe
es
and
xchg
inc
xor
lds
bound
mov
mov
das
xor
jbe
jae
sub
pop
shrl
pop
xor
gs
inc
rcrb
add
or
mov
clc
aam
lods
test
mov
xor
cmp
mov
movsb
mov
int
adc
cmp
enter
decl
cwtl
xchg
out
mov
cltd
mov
mov
mov
je
hlt
add
mov
and
out
xchg
push
adc
fbld
xchg
cmp
mov
push
jg
adc
sub
cmc
sbb
xor
outsb
icebp
lods
push
xchg
inc
sahf
inc
sub
ds
xor
ret
mov
aam
inc
enter
xlat
int
jae
cmp
mov
mov
push
sbb
or
mov
daa
insl
xchg
movsb
and
out
xchg
adc
jmp
jo,pn
mov
imul
xchg
int3
mov
sub
pop
dec
xchg
mov
mov
jp,pn
cmp
pop
mov
fadd
xor
inc
sub
xor
pop
add
lret
mov
scas
mov
adc
mov
xchg
jb
stos
cltd
xchg
sbb
mov
push
shrl
mov
cwtl
lret
rclb
cmpsb
pop
shll
lock
jge
dec
xchg
jl
mov
sbbb
loop
test
shrl
dec
imul
xchg
icebp
iret
test
out
scas
cmpsb
popa
xchg
stos
cwtl
pop
fisttpl
sahf
xor
mov
jb
xlat
addr16
divl
dec
lods
inc
out
in
cwtl
push
shlb
mov
dec
xor
sarl
adc
mov
arpl
scas
cmp
test
rclb
sub
movsl
icebp
fsubrp
sbb
stos
icebp
aad
mov
inc
loop
mov
ljmp
gs
aas
repz
cli
iret
jo
aaa
jne
mov
scas
mov
xchg
mov
jno
je
call
shlb
push
mov
shlb
cld
mov
daa
push
aad
out
rol
popf
adc
or
mov
sti
dec
sti
movsb
jg
jbe
repz
test
loope
dec
mov
sub
cli
cmp
mov
or
xorb
icebp
ret
jl
in
mov
cmp
in
hlt
mov
pop
xor
es
lock
rcrb
mov
aam
sub
and
imul
gs
add
mov
test
mov
movb
cwtl
mov
and
and
fdiv
into
in
ret
in
fildll
pop
data16
mov
test
pusha
insb
rorl
stos
cmp
inc
pop
jmp
jmp
jp
rol
adc
xchg
outsb
xchg
push
int3
outsb
push
mov
push
imul
jmp
jge
loop
push
mov
lock
leave
mov
or
sub
jmp
loope
add
orl
int
enter
out
xor
cltd
xchg
pop
jge
cmpl
lea
mov
jl
cmp
lret
xchg
rcr
adc
and
aaa
rol
std
pop
push
jae
and
dec
dec
fs
in
add
jb
push
jle
sub
notl
push
mov
push
adcb
sub
int
jb
loope
xor
mov
imul
pop
or
addb
mov
test
setl
andb
out
fwait
and
sub
jb
sub
pushf
nop
fcmovu
stos
test
aaa
adc
outsb
sahf
push
movsl
xor
stos
push
in
loope
jns
js
push
cld
psubsb
sub
xorl
mov
mov
dec
outsl
ror
dec
loopne
call
test
pop
sarl
adcl
jno
sub
jne
shrl
inc
sub
push
stos
idiv
pop
push
je
add
addr16
pop
jg
dec
mov
jb
lcall
hlt
lret
adc
sub
stos
in
mov
fists
mov
mov
inc
inc
cs
loop
movsl
sub
sub
and
sub
adc
roll
mov
es
push
pop
lcall
incb
int3
negb
out
mov
inc
ss
or
ret
sbb
cli
push
rcl
loop
dec
popa
add
jbe
stos
cmpsl
sar
dec
rol
int3
or
mov
adc
fdivl
movsl
add
inc
inc
lcall
and
xor
pop
dec
add
pop
ss
xchg
in
mov
add
ja
lret
xchg
or
fcmovb
mov
aam
popa
jo
imul
inc
mov
pop
mov
outsb
stos
inc
addr16
add
and
sub
int3
adc
mov
int
sbb
sbb
jecxz
adc
inc
xor
inc
call
mov
inc
mov
mov
lods
es
jge
jnp
dec
shl
and
les
jl
mov
cmp
inc
jnp
dec
bound
xchg
js
and
mov
loopne
inc
xchg
pop
ret
addb
popa
addr16
mov
push
into
sub
jnp
fstps
xor
xor
push
cmp
mov
shll
rolw
cmpsb
sarb
push
cmp
repz
and
cs
ret
add
push
mov
inc
lea
rcrb
cmpb
xchg
pop
inc
jl
mov
mov
inc
dec
std
icebp
pop
in
fistpl
out
outsl
push
add
push
loop
push
cmpb
shr
insl
test
orl
adc
pop
outsb
test
ret
adc
popf
mov
xchg
sbb
cwtl
mov
pop
repnz
gs
adc
xor
pop
jmp
mov
mov
inc
popa
adc
xorb
lea
inc
adc
aad
out
test
movsb
sub
mov
test
repz
xor
pop
adc
and
mov
pop
out
or
movsl
repz
bound
cmp
add
negb
mov
xor
lea
hlt
jmp
mov
add
clc
out
pop
cmp
sub
out
lret
arpl
into
jle
clc
sub
lods
sbbb
orl
das
insl
xchg
scas
loope
add
lcall
xchg
rolb
cmp
fdivrl
mov
pop
mov
or
mov
and
xor
or
add
gs
push
test
cmp
push
jge
dec
stc
sbb
out
cwtl
mov
jne
dec
inc
icebp
or
jle
dec
aaa
push
inc
mov
push
js
pusha
jb
or
fwait
mov
rorl
dec
aad
cmp
movsb
sub
sahf
addr16
cmpsl
cmp
inc
xor
jge
outsb
mov
push
xchg
and
pop
jmp
imul
je
mov
push
leave
inc
ja,pn
les
mov
sarl
mov
ds
push
cli
push
xchg
fmul
jno
enter
cwtl
fwait
jb
xchg
mov
lock
sub
or
outsl
imul
cli
fldenv
pop
fsts
jmp
push
push
inc
cltd
inc
inc
and
in
lahf
fs
cmpsb
imul
or
xchg
leave
or
jmp
int3
movsb
cmp
inc
gs
push
in
ds
inc
xor
test
daa
cs
movsl
push
sbb
sub
jae
lods
repz
test
es
push
push
test
movb
paddb
cmp
mov
insb
inc
mov
adc
add
sahf
jns
stc
jae
pop
mulb
lods
or
push
push
subb
mov
lcall
sbb
sub
add
into
cmp
mov
add
mov
scas
fbstp
sub
insb
pop
mov
bound
dec
std
xorl
push
sbb
cmpsb
add
testb
pop
jl
sub
inc
and
mov
sbb
mov
mov
sub
rcl
rorl
stos
psubsw
jle
inc
mov
push
stc
shlb
test
mov
ljmp
daa
mov
dec
ret
cli
push
or
outsl
mov
outsl
mul
and
xor
xor
int
jnp
cmc
insb
mov
xchg
mov
sub
xchg
mov
dec
mov
aas
lods
stc
popf
add
jb
dec
aam
jmp
mov
test
cmpsl
jp
sub
bound
push
outsb
push
scas
dec
ret
pop
mov
fisttpl
dec
scas
mov
pop
cli
in
cmp
in
sarb
sbb
insb
mov
ja
movsb
cmp
out
push
ficoms
imulb
push
push
sarb
out
in
in
xor
jno
sbb
daa
stc
lidtl
mov
out
pop
and
mov
cmp
enter
pop
cmp
jle
push
jmp
fidivl
push
mov
and
adc
mov
lock
popf
and
sbb
cmpsl
in
mov
ja
add
ja
iret
add
notb
inc
and
mov
xchg
dec
dec
scas
xchg
je
pop
mov
xor
push
lods
filds
mov
rcll
cmpsb
add
push
mov
pop
aaa
mov
out
and
js
cmp
or
inc
mov
js
out
pop
xchg
sarb
outsb
outsb
imul
shrb
push
xor
pop
popa
fnsave
and
into
push
cmp
icebp
bound
ret
repz
sti
in
insl
or
popa
outsb
inc
out
test
sbb
insb
ss
lods
push
mov
cmp
pop
jne
adc
push
add
or
mov
xor
loop
shll
mov
cmp
push
arpl
push
mov
inc
lock
mov
sti
mov
lcall
outsl
mov
pop
test
or
sub
pop
adc
push
mov
mov
out
add
lret
loop
push
out
mov
adc
dec
mov
ror
push
xorl
inc
adc
inc
ja
lret
movsb
jmp
jecxz
cmp
cmpsb
repz
jmp
jb
pop
and
cltd
push
sarb
mov
mov
mov
jae
pop
adc
cmp
xlat
clc
add
inc
scas
sbb
movd
stos
mov
adc
sbb
dec
outsl
aaa
or
loop
cli
mov
pushf
push
rorl
outsb
jp
mov
fcom
shrl
gs
lock
push
push
sub
mov
push
lods
daa
push
fildl
mov
add
adc
cmp
lahf
fdivp
jp
hlt
inc
and
inc
jl
aaa
jge
call
popa
and
cmp
jo
out
sbb
sub
pop
mov
sbb
or
fwait
or
cmp
xlat
cld
int3
int3
cs
fistps
inc
cli
out
je
pusha
pop
jae
mov
pop
stc
cmp
popa
push
stos
inc
daa
cmp
movsb
xor
or
pop
aam
pushf
loopne
fstl
and
or
data16
jmp
mov
jmp
int3
push
jge
dec
jbe
jno
ss
outsl
push
mov
add
sbb
pop
fidivrs
cltd
push
push
ljmp
cmp
cmp
jne
rcrl
add
cmpsb
ljmp
mov
push
jnp
sub
push
mov
or
imul
dec
mov
test
clc
icebp
repz
xchg
mov
pop
cmp
lods
mov
jns
or
icebp
xlat
insl
rolb
push
loopne
iret
adc
mov
fld
xchg
das
pop
lods
push
inc
lods
arpl
hlt
push
xchg
xor
sbbb
push
mov
mov
inc
xchg
dec
inc
je
xor
outsb
loope
inc
add
push
and
iret
insb
mov
int
pop
pop
leave
push
das
lret
mov
adc
aaa
jmp
pushf
dec
test
repz
push
pop
mov
sahf
ret
jecxz
rcl
fwait
dec
mov
lods
mov
jno
mov
dec
das
addb
pushf
adc
data16
push
movsb
jl
sbb
pop
and
sbb
xorl
sub
loopne
pop
push
push
loop
xor
outsl
js
mov
stc
test
or
jecxz
scas
sub
testl
repz
pop
scas
mov
addl
sub
call
std
add
xchg
mov
adc
mov
out
sbb
iret
mov
mov
lds
xor
jb
add
jns
mov
lock
repnz
sub
adc
dec
jl
cs
sbb
mov
or
lcall
popf
insb
repnz
and
vpmulhuw
movsl
aas
notb
mov
sub
out
cmp
dec
push
add
adc
loopne
sbb
xor
in
dec
aad
into
push
push
dec
sbb
pop
mov
or
mov
mov
and
sub
jnp
dec
add
jp
inc
add
mov
ja
sbb
add
aam
cld
or
adc
jge
sarl
sub
xor
neg
cmp
cmp
fimull
jne
repnz
clc
sbb
push
andb
pop
sti
xchg
sbb
repnz
test
or
dec
cltd
lods
sub
loope
repnz
cmpl
idivl
dec
sbb
mov
js
xchg
iret
ret
imul
lret
mov
sub
push
mov
cmp
mov
inc
mov
pop
mov
jae
and
call
movsb
mov
lock
cs
les
add
dec
cld
inc
sub
out
cmp
mov
adc
push
mov
pop
cli
nop
xor
push
sub
ds
xchg
loope
rcr
loopne
mov
sarl
negw
adc
pop
adc
das
imul
orl
rorb
inc
out
outsl
or
ret
mov
cs
sahf
fistpl
pop
dec
mov
jb
pop
lock
add
xchg
fldcw
js
adc
repz
sbb
sub
pushf
stos
shlb
cli
jle,pt
imul
inc
aam
sbbl
sub
fisttps
lods
dec
and
hlt
sbb
inc
lret
sub
stos
cmp
test
les
lea
jg
mov
mov
in
sbb
inc
add
call
dec
std
orb
imul
and
dec
sub
clc
mov
xchg
jmp
pop
sub
sbb
inc
clc
mov
mov
or
popa
dec
call
push
iret
adcb
scas
push
xor
mov
mov
mov
push
mov
pop
rcrl
push
pop
pop
sub
xchg
jp
lahf
scas
loopne
loopne
pop
pushf
icebp
adc
sub
jmp
sub
cltd
push
inc
movl
mov
imul
xlat
jge
add
stos
inc
frstor
sahf
xchg
sbb
push
sbb
xchg
lret
mov
popa
push
mov
mov
cmp
push
cwtl
sub
jmp
in
pop
mov
into
jnp
repnz
sub
dec
outsb
dec
push
mov
and
addr16
pop
stos
dec
lods
xor
push
fiaddl
pop
inc
fsubl
out
aaa
lret
cltd
pop
mov
aaa
and
icebp
pop
int
lea
adc
xor
outsl
jno
jnp
and
mov
xchg
jge
ds
mov
cmc
out
sti
lahf
mov
sub
jns
arpl
dec
pop
ds
sub
push
mov
mov
inc
inc
sub
and
hlt
dec
outsl
cwtl
out
and
pusha
es
lahf
inc
pusha
and
sahf
mov
xor
repz
lds
popa
cmp
inc
insl
mov
pop
mov
add
push
push
jl
fcmovu
pop
mov
ror
lock
pop
cmp
cmc
test
cmp
cmp
pop
dec
and
mov
int
push
lcall
leave
enter
cmp
sbb
pop
ljmp
addr16
and
stos
mov
mov
hlt
lcall
mov
pushf
xor
jno
lods
jae
negb
pop
push
inc
xbegin
inc
add
adcl
dec
sub
mov
outsl
stos
int3
mov
inc
fsubrl
fs
or
mull
movups
iret
fldl
jns
ds
jmp
stos
adc
sahf
jmp
and
or
push
or
jmp
insb
jl
pop
aas
lock
sbb
jne
testl
inc
inc
xchg
add
jnp
enter
mov
test
ljmp
jmp
stos
loope
or
outsb
ss
xchg
mov
cmp
scas
cmpsl
mov
jae
jno
repnz
loop
sbb
out
lahf
pop
xchg
xchg
ret
push
lret
jne
fpatan
add
add
pop
mov
fstl
jns
lock
fidivl
sbb
rcr
jne
cmpsb
repnz
ds
lcall
loopne
ja
cmp
dec
and
data16
mov
or
pop
push
mov
jae
xor
mov
popf
mov
add
sbb
clc
ss
xchg
mov
pusha
xchg
xor
push
sub
push
and
push
hlt
push
rorb
js
bound
sahf
sbb
fs
aas
xchg
mov
or
xor
setbe
add
push
daa
fdivrs
sub
sbb
jp
jns
add
fs
xchg
mov
pop
test
xor
lcall
mov
push
or
dec
inc
or
rorb
push
outsl
push
jmp
inc
jp
sbb
inc
push
jmp
lods
pop
cld
inc
sti
push
fdivl
pop
adc
insb
add
in
mov
mov
das
daa
sbb
mov
push
rep
jne
inc
jge
jecxz
jp
fisttpl
cmp
pslld
divl
adc
mov
fcmove
push
xchg
call
adc
lods
sub
jle
xchg
pop
outsb
call
sti
es
sbb
rol
inc
inc
stos
fsubr
jnp
ss
adcb
dec
dec
insb
pop
adc
or
xchg
add
sti
cld
sbb
adc
push
andl
inc
push
cmpsl
jo
add
fidivl
xlat
adc
sahf
push
sub
push
sub
mov
dec
push
mov
cld
sub
movsb
or
and
in
insb
mulb
sbb
sahf
mov
mov
inc
pop
shr
push
negb
mov
cmpsb
lret
arpl
add
push
push
jmp
cmpsb
and
sbb
iret
mov
push
xor
repnz
divb
nop
mov
xchg
push
dec
es
mov
scas
repz
adc
clc
out
mov
ret
leave
stc
mov
lahf
push
sub
or
xor
push
pushf
outsl
mov
stc
shl
mov
pop
std
inc
mov
fnstcw
adc
cli
dec
add
cmp
xchg
inc
xchg
gs
je
jne
jno
dec
stos
shr
fnstenv
xor
test
movsb
and
push
push
add
fdiv
movl
pop
inc
pop
add
adc
stc
push
pop
mov
pop
mov
cli
pop
mov
loopne
xchg
xchg
xchg
leave
out
sbb
add
cmpsl
push
in
test
fildl
sbb
jns
repz
fistpll
lret
leave
lds
mov
and
into
jp
sub
sub
pop
lea
stos
xchg
mov
test
add
mov
shrl
ds
shll
jp
jl
in
push
xor
xchg
xor
jmp
sbbl
lock
pop
movsl
mov
adc
inc
push
inc
sub
sbb
stc
mov
dec
xchg
cmpb
jno
das
sbb
or
or
ficomps
out
xor
push
cmp
or
clc
jge
pop
push
or
sahf
iret
lock
dec
inc
enter
leave
sti
lods
fistpll
ret
add
xor
or
out
mulb
fdivrl
cmp
shrb
inc
addb
fidivs
dec
adc
and
jnp
inc
jp
popa
pop
into
imul
data16
dec
and
push
or
es
jbe
push
jns
daa
pop
jecxz
adc
jne
sbb
shr
cld
cli
xlat
add
adc
sbb
dec
es
mov
cmp
push
lock
test
cmp
je
clc
inc
jl
pusha
mov
sbb
mov
and
call
inc
enter
xchg
into
outsl
addr16
mov
xchg
out
xor
xchg
enter
stos
daa
jns
dec
sbb
pop
cmp
pop
or
lret
jmp
pop
cwtl
cmpsb
les
xchg
sarl
gs
xor
pop
repz
ljmp
pop
cs
fstps
cmpsb
push
dec
push
add
pop
aas
fsub
clc
inc
int3
test
ljmp
pop
andl
out
mov
cs
ljmp
shr
gs
int3
dec
rcll
xorl
out
push
stos
ret
mov
leave
popa
dec
cmpsl
mov
in
adc
dec
std
outsl
sbb
test
enter
cmp
testl
xor
imul
xchg
test
or
in
lods
dec
add
or
mov
rorb
call
adc
fnstsw
dec
inc
into
sub
jbe
fdivrp
mov
jg
xchg
pushf
aas
in
roll
and
sbb
cmc
jge
pop
pop
stos
dec
mov
mov
cwtl
lods
mov
or
pushf
popa
idivl
sub
or
jne
imul
icebp
test
sub
xchg
aam
test
mov
outsb
test
xchg
push
sub
icebp
aas
xor
xlat
stc
gs
push
add
and
pusha
push
xchg
dec
out
or
rcll
cs
mov
mov
insl
dec
roll
int
mov
popa
push
sbb
cmpsb
imul
jns
rcll
xorb
ret
testl
ja
in
shlb
xchg
jecxz
jae
fsts
test
rolw
mov
sub
push
mov
dec
push
push
bound
push
in
dec
mov
int3
bswap
in
out
adc
sbb
mov
xlat
jl
fnstenv
lret
mov
fsts
pop
xchg
jmp
cmpsb
or
fistpll
scas
sti
data16
outsb
mov
xchg
test
cld
inc
push
add
ret
ret
jmp
ds
cmpl
lret
aam
lds
mov
jl
repz
jge
aad
mov
and
sub
out
pop
mov
mov
dec
cmp
pop
jnp
jecxz
or
and
push
fidivrs
fst
lret
push
jecxz
lods
fwait
push
stc
cmp
ljmp
rcll
mov
lods
cs
js
xchg
jb
insl
mov
bound
insb
adc
jbe
adc
push
in
xor
outsl
mov
je
ficoml
orl
mov
int3
dec
push
clc
incb
repz
sbb
mov
jae
nop
call
jns
push
stos
and
dec
popf
jmp
cmp
cli
das
and
test
push
popa
and
mov
sub
xor
jmp
roll
rorl
mov
pushf
arpl
xchg
lods
outsb
mov
inc
into
mov
jle
arpl
push
xchg
push
test
sbb
in
jne
pop
dec
mov
dec
leave
call
repnz
push
sarl
mov
jbe
jp
test
mov
push
jmp
and
rolb
mov
mov
push
fadd
mov
xlat
xor
fidivrl
jmp
mov
jnp
dec
jmp
pushf
xchg
fists
mulb
loope
jne
popf
in
add
pop
cmp
icebp
pop
xchg
enter
xchg
cs
je
repnz
inc
xchg
add
fwait
out
jo
in
and
fnstcw
mov
xchg
inc
push
fs
add
dec
cmpsl
lds
aaa
punpcklbw
add
or
leave
daa
mov
shrl
inc
aad
enter
pusha
mov
cmc
xchg
mov
xchg
xor
push
test
jno
out
data16
cwtl
comiss
jle
loope
mov
mov
mov
or
imul
ljmp
lret
xor
pop
std
je
push
filds
inc
imul
ljmp
dec
repz
fadds
xor
int
inc
in
and
dec
call
fstl
inc
scas
pop
imull
mov
out
xchg
xchg
lds
jne
aaa
jns
addr16
cmp
roll
imul
pop
movsl
dec
mov
mov
sbb
adc
rcrl
scas
inc
xor
hlt
and
sub
pop
subb
push
or
sub
mov
dec
adc
clc
rorb
jbe
fadds
xor
pop
scas
inc
cwtl
xchg
jbe
shl
lds
jg
pop
mov
adc
inc
jnp
lods
dec
mov
in
cmp
and
xchg
aas
mov
pop
repz
rcrl
sti
movsb
ja
push
iret
repnz
popf
test
mov
adc
push
hlt
in
mov
xor
cmp
loope
push
mov
sbb
je
cmp
testl
ret
inc
pop
clc
mov
or
xor
dec
sbb
outsl
inc
dec
xchg
mov
fdivrl
jno
sti
mov
push
lds
cs
loope
mov
sbb
add
mov
aad
dec
lods
mov
rcr
inc
cltd
mov
addr16
mov
xor
xchg
xchg
sub
sarl
cmp
jecxz
lret
test
mov
in
add
and
in
movups
int
out
mov
lods
and
ss
stos
mov
loope
rolb
lods
pmullw
test
leave
les
or
jbe
jbe
mov
or
je
ret
cmp
add
xchg
addr16
mov
addr16
xchg
jmp
stos
repnz
adc
inc
sub
add
ljmp
repnz
test
lahf
popf
mov
xor
mov
xchg
stc
xor
adc
xchg
in
jb
jge
out
setg
ljmp
pop
lds
push
icebp
aad
test
pushf
push
pop
shrb
shlb
jb
fs
ret
in
inc
mov
add
add
mov
inc
int
fcmovne
add
push
popf
jnp
mov
sbb
es
fcmovb
ja
fldenv
and
jl
jns
mov
dec
and
int3
push
xchg
mov
iret
lcall
adc
insb
mov
push
mov
dec
xchg
adcl
inc
jnp
xchg
mov
adc
add
rcll
jns
cld
out
inc
add
adc
jge
fisubs
pushf
sub
sub
fwait
out
insl
mov
out
movsb
cmp
fiadds
mov
lds
das
les
dec
je
jp
pop
fiaddl
aad
mov
inc
sub
testl
in
push
or
xchg
mov
cmc
ja
stos
cmc
or
fs
or
or
inc
cmp
jecxz
in
mov
mov
in
cmpsb
xor
popa
add
inc
jo
sub
fwait
push
xor
cmp
jae
push
lock
xor
outsb
jp
mov
or
xchg
mull
ja
dec
stc
ds
mov
les
jae
je
pop
or
pop
jmp
inc
mov
lahf
push
xor
std
dec
dec
push
sti
dec
cli
mov
push
inc
adc
pop
mov
mov
cmp
movsl
js
sub
and
jne
xor
adc
sub
xor
xlat
xchg
clc
enter
test
mov
ja
inc
mov
inc
fnstcw
adc
enter
sub
xor
outsb
jmp
mov
pop
iret
xor
data16
mov
cmp
xchg
pop
addr16
cli
ret
neg
adc
cmp
xchg
lahf
shlb
bound
sub
push
jo
pop
int
mov
adc
jae
scas
cld
push
fidivs
bound
enter
xchg
or
mov
sarb
jmp
nop
dec
fiadds
vpminub
jmp
fdivrl
sarb
jge
mov
mov
cmc
les
dec
xchg
dec
sbb
lock
cmp
push
pop
fcomp
sbb
hlt
inc
and
fidivs
jne
adc
int
mov
cli
mov
sub
iret
gs
sbb
daa
dec
test
test
xchg
adc
rcll
ret
jle
loop
dec
shlb
jecxz
mov
mov
dec
int3
mov
enter
gs
arpl
jecxz
dec
mov
adc
push
pop
sbb
out
in
xor
out
scas
enter
sbb
fisubl
lahf
test
jb
out
popa
in
sub
sbb
cmp
jl
mov
cmp
fsubrp
mov
pop
and
dec
sbb
leave
push
insl
mov
nop
xor
fcom
jne
cmpsl
push
push
scas
jb
adc
mov
xor
lret
fistpl
mov
push
fwait
in
adc
popaw
dec
mov
fisttpll
xchg
sbb
iret
sbb
cld
fcomps
out
jecxz
adcl
add
add
or
sub
in
cmp
lahf
rep
stos
lds
mov
xor
jmp
lahf
inc
int
or
enter
fwait
dec
repnz
sub
shrb
stos
lods
xchg
mov
push
sbb
rcl
pop
lock
fldt
mov
cmp
enter
shll
mov
jne
out
jnp
das
cmpsb
jns
mov
test
aas
jne
mov
insb
lahf
popa
add
cltd
jecxz
test
jnp
orl
iret
xor
sbb
popa
in
mov
push
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
jp
pop
fidivrs
jl
pop
jl
imull
cmp
inc
add
pop
cmpsl
jnp
ss
cmc
and
xlat
int3
dec
jg
call
ja
add
push
mov
out
or
cmpsb
cmp
adc
dec
xor
xchg
dec
ret
xlat
mov
and
ret
and
sqrtps
ljmp
out
cmp
push
std
jbe
fcmovnbe
imulb
pop
lock
push
dec
mull
cltd
fidivrl
and
std
pop
cmpsl
pop
xlat
dec
aas
cmp
pop
add
stc
in
and
mov
mov
mov
cmpsb
call
shl
enter
mov
testl
adc
ret
pop
lahf
out
jnp
inc
jbe
cmp
cmpsb
imul
or
aas
or
sub
lds
popf
adc
in
mov
dec
mov
mov
push
sub
cmpsl
fs
mov
lret
push
jecxz
into
stos
and
xchg
sbb
lock
and
ret
stc
xor
sbb
icebp
and
push
jmp
imul
adc
xchg
je,pn
push
stos
pop
addr16
dec
aas
les
adc
ss
and
and
add
enter
fistl
jg
popl
cmp
or
push
fcomi
jmp
sbb
mov
add
mov
test
incb
out
sbb
mov
sbb
stos
or
push
subb
push
add
cli
mov
mov
sbb
and
cmp
jns
xor
mov
cmpsl
xor
lods
push
push
mov
add
lock
mov
cmp
mov
dec
push
fstl
fildl
cmp
mov
rcll
inc
imul
and
push
test
cli
sbb
out
push
dec
mov
pushf
shl
adc
xor
and
add
lea
push
mov
inc
dec
popf
cmp
pop
cmp
xchg
fdiv
mov
movsb
jno
mov
push
mov
pop
pop
mov
dec
jbe
sub
sub
js
loopne
lret
push
mov
push
inc
pop
lods
call
and
jge
and
rolb
jmp
scas
clc
and
stc
in
loope
sbb
int3
jnp
pop
arpl
inc
push
movb
pop
cmpb
repnz
xchg
dec
pop
sbb
xor
das
pop
inc
pop
dec
inc
test
dec
and
pop
push
aaa
jl
imull
jne
imul
aaa
add
shrb
out
xor
imul
int3
loop
daa
or
cmc
jnp
outsb
push
push
cmp
push
clc
sbb
push
ljmp
daa
sub
mov
jb
insb
insb
jnp
in
and
push
pusha
push
push
cmp
and
das
mov
aad
mov
cmp
jb
das
pop
inc
data16
daa
insl
adc
mov
fisubrs
rol
ljmp
aas
mov
pushf
sbb
mov
sbb
out
sub
fwait
nop
pop
push
sbb
int3
push
cmp
pop
scas
push
sarl
jp
or
mov
jl
lcall
adc
repnz
jb
adc
xchg
iret
pop
adc
mov
jle
sub
sbb
mov
pop
insb
jno
lahf
sbb
push
int3
enter
mov
loop
sub
in
aaa
enter
pushf
outsl
popa
push
add
adc
cmp
call
xchg
into
mov
push
mov
fadd
lcall
imul
das
pop
out
clc
inc
les
loopne
scas
cli
sub
xchg
push
sti
es
and
mov
dec
fisttpl
in
and
mov
cmp
cli
mov
pop
stos
lahf
aaa
mov
mov
dec
mov
xchg
ret
lret
pop
cwtl
ds
movsl
and
lds
outsl
or
sbb
xchg
add
inc
lahf
out
iret
mov
ja
xchg
mov
inc
push
andb
fstpt
sbb
jno
pushf
xor
popf
mov
mov
and
pushf
jae
jecxz
cwtl
mov
ret
mov
aad
mov
jae
sub
les
or
je
adc
rclb
mov
xlat
test
test
xchg
ret
dec
shll
jge
loopne
ds
ficoms
std
fadds
sbb
icebp
push
mov
repnz
std
adc
sti
fcmovb
mov
ret
das
mov
in
mov
and
sub
mov
push
xorb
loop
pop
lret
imulw
test
or
and
adcb
repz
ds
xchg
popa
push
pop
dec
cltd
sbb
mov
ret
and
cmc
mov
mov
pop
scas
scas
jg
or
movsb
out
fldl
mov
test
adc
jbe
sarb
sub
addl
inc
pop
jae
cmp
imul
mov
xor
stos
loopne
sub
xchg
push
out
jmp
dec
jge
and
add
mov
scas
dec
cmp
xor
test
or
jecxz
push
arpl
inc
pop
ret
shll
sbb
push
arpl
inc
dec
mov
fs
loop
scas
stos
popa
daa
and
lcall
ret
sub
or
and
imul
je
push
adc
stc
shlb
test
mov
mov
add
lock
push
ret
fistps
adc
out
imul
xor
mov
push
dec
sbb
out
sub
gs
xchg
ss
enter
xlat
push
out
cmp
jmp
mov
fimull
push
jl
and
mov
push
mov
pop
pop
and
cltd
xchg
ja
jbe
xchg
and
enter
push
cmp
dec
aaa
ds
call
test
cli
divb
lods
mov
pop
bound
lcall
sahf
pop
mov
jg
dec
xor
dec
or
sub
sbb
xor
mov
clc
adc
jmp
inc
movsb
push
cmp
mov
test
fs
or
dec
mov
lods
mov
sbb
test
adc
repz
lret
pop
fisttpll
loopne
popl
mov
cmp
sarb
sbb
push
arpl
popf
fcmovbe
fmuls
xor
push
inc
dec
push
lcall
jb
stos
jg
lock
ret
dec
leave
pop
pop
nop
sti
add
psubusw
sub
std
repz
jno
cmovnp
aas
push
mov
inc
cltd
jo
roll
xor
mov
xlat
scas
pop
mov
jl
jmp
add
scas
icebp
push
mov
gs
lret
sar
sub
push
aad
enter
add
or
and
pop
pop
ret
push
out
mov
and
push
int
das
or
int3
dec
dec
add
pop
sub
aad
mov
pop
push
movsl
or
fbstp
push
ret
in
cli
jae
inc
mov
loop
in
and
lcall
popa
xchg
divb
out
mov
leave
ret
push
iret
or
mov
push
jle
fcomps
shl
dec
fistps
lret
scas
inc
push
mov
xor
xor
xor
cli
sub
aam
stos
add
daa
jg
cmp
inc
adc
stc
xchg
adc
int
ffree
incl
push
mov
push
mov
cmp
push
xchg
in
and
mov
mov
xor
pop
addr16
xchg
fcom
mov
dec
daa
push
push
cli
cli
call
into
or
inc
mov
mov
inc
lret
dec
mov
xchg
repnz
push
sbb
sub
cmc
jno
cli
enter
fdivl
cmp
fucom
add
jne
rorb
das
ljmp
enter
mov
push
mov
scas
mov
xor
mov
inc
imul
test
and
pop
mov
sub
in
testl
and
xchg
dec
mov
lret
loop
pop
and
lcall
int3
jmp
sub
fstpt
andl
push
into
stos
cld
jb
movsb
jg
sbb
and
das
mov
dec
hlt
mov
adc
cld
pop
in
jb
adc
fcmovu
jns
addr16
and
loopne
icebp
sti
sbb
aaa
and
xchg
mov
gs
jle
mov
clc
pop
ds
sbbb
dec
imul
stos
aaa
fmuls
inc
jmp
push
xchg
add
lods
pop
fiaddl
fwait
inc
fcoml
cmp
and
mov
sub
sub
test
je
mov
mov
or
jl
loopne
jne
or
test
jo
ljmp
imul
imul
lods
pop
dec
std
jno
pop
cmp
pusha
imul
cltd
imul
ds
int
loop
std
daa
cmpsb
es
hlt
popa
lock
jne
imul
scas
sbb
outsb
ja
push
mov
sarl
sbb
into
xor
sbb
cwtl
arpl
cltd
adc
jle
mov
test
jo
sti
sub
test
imul
and
lock
mov
pop
pop
sub
dec
rcll
aaa
mov
and
pop
int
cli
pushf
test
bound
int
cld
xchg
and
push
mov
test
stc
add
push
mov
jbe
loop
mov
orb
scas
xchg
push
cmc
push
cwtl
mov
fimull
add
and
leave
push
and
push
addr16
ljmp
es
cmp
xorb
lods
xor
mov
xchg
adc
mov
adc
mov
js
stc
cmpsl
icebp
subb
dec
or
shrl
test
xchg
mov
cmp
jecxz
fstl
or
add
jle
bound
into
fst
add
arpl
popa
mov
push
pop
sub
clc
inc
imul
ljmp
xor
sbb
cld
and
out
cmp
mov
pop
arpl
xor
shrb
mov
stc
repnz
push
cld
cmp
mov
lods
cmp
in
test
outsb
mov
pop
or
or
lret
push
enter
lods
mov
mov
test
hlt
stos
testb
inc
loop
push
push
xchg
loopne
mov
ss
add
ja
xor
push
cmp
xchg
jecxz
test
call
loop
incl
cwtl
jp
cmpl
lods
sub
push
adc
cwtl
or
inc
mov
test
test
or
fldz
data16
ljmp
pushf
in
rorb
push
xor
in
fwait
inc
pop
popf
repz
mov
sahf
mov
lret
pop
rcrl
and
mov
or
insl
aaa
ret
cli
xchg
mov
fwait
mov
jecxz
test
inc
lock
rcll
ret
cmp
mov
aaa
fimull
mov
outsl
ljmp
imul
mov
and
ficompl
dec
adc
jns
jmp
rclb
daa
shll
arpl
sbb
sbb
in
imul
out
cmp
and
jle
stc
mov
movsb
xchg
loop
lret
andb
sub
or
in
fstl
fistpll
jo
ljmp
jbe
add
fbld
or
sar
pop
xor
lds
jae
mov
mov
ret
rcll
mov
in
shrb
andl
push
cmp
sbb
mov
cmpsb
in
jo
imul
jge
xor
inc
fsts
push
stos
dec
ss
gs
pop
inc
pop
mov
aaa
loop
mov
mov
je
mov
iret
push
mov
lods
lcall
out
rcrl
add
out
jl
sub
xor
add
cmpsl
sub
adc
aad
and
push
inc
into
fdivl
pop
into
shlb
push
mov
scas
mov
or
jle
sub
lret
cmp
cmc
aam
push
loop
insl
xor
loopne
test
fidivl
lahf
popa
push
adc
jecxz
ljmp
mov
push
mov
jns
sbb
loope
sti
das
inc
out
inc
loopne
push
adc
scas
dec
inc
adc
mov
scas
test
movsl
rol
lret
in
push
imul
adc
push
xchg
nop
les
insl
cmpsl
sarb
mov
mov
xchg
fnstcw
mov
scas
mov
mov
xchg
test
decl
in
mov
sub
insl
bound
leave
fbld
imul
sti
aad
mov
cwtl
outsb
int
pop
jmp
call
inc
out
outsl
subb
out
or
adc
xor
in
push
cld
movsb
push
xor
adc
fs
pop
cmp
mov
fwait
inc
xchg
in
or
dec
dec
sbb
jge
mov
ret
aaa
cmp
ret
push
or
pop
ret
stc
stc
xchg
dec
cmpsl
std
cmp
cs
mov
ret
push
arpl
dec
bound
pop
add
xchg
jmp
push
mov
or
cs
lock
push
fs
imul
or
fs
sbb
or
int3
xor
inc
das
sbb
std
xchg
scas
cmp
push
sahf
sbb
xor
insb
pop
mov
jl
dec
mov
lahf
adcl
fwait
idivb
xchg
out
roll
imul
jle
push
ja
test
mov
fbld
cmp
push
mov
sti
mov
xchg
bound
ljmp
adc
xchg
sbb
ret
adc
mov
stos
jnp
data16
xchg
cwtl
rorb
and
pop
nop
push
shl
das
mov
inc
cmc
and
push
test
arpl
data16
push
mov
and
enter
adc
jge
xchg
fistps
ret
fwait
je
sub
cli
or
es
daa
loop
outsb
mov
in
adc
test
rcrb
push
jecxz
out
loop
in
movsl
pop
int3
hlt
adc
jns
aas
push
adc
sti
loop
stos
int3
aaa
pushf
fwait
lds
cmp
pop
adc
mov
out
adc
icebp
dec
dec
jb
sbbl
sub
imul
lahf
fcmovne
cmc
xchg
and
outsb
or
mov
pusha
daa
xor
ds
stc
sub
idivb
loope
in
std
lret
add
into
ss
scas
jns
sbb
or
imul
lods
js
adc
int3
mov
mov
inc
mov
fsubs
ja
inc
iret
adc
push
fistpl
xchg
shr
fsubrl
repnz
push
dec
push
jl
xor
or
adc
and
add
fmul
incl
ret
in
cmpsl
int3
cli
jne
pop
cltd
cli
jne
out
xchg
jl
sarl
cmp
sbb
or
sub
call
add
mov
lods
pop
test
lods
mov
add
add
aad
inc
pop
subb
inc
xor
push
cmp
mov
mov
sbb
data16
dec
stos
xchg
mov
mov
adc
xchg
and
into
mov
test
bound
or
push
sub
or
ret
xchg
adc
out
jmp
mov
rolb
insl
fcompl
ljmp
cmpsb
sbb
shrb
pop
add
cld
test
mov
pop
pop
adc
jle
mov
sqrtps
sbb
jno
movsb
ja
insl
pop
repz
ja
popf
adc
or
arpl
jp
xchg
add
dec
mov
ret
jl
shr
faddl
jl
push
xchg
xchg
mov
push
and
jo
stc
sti
pop
mull
aas
cmp
cmpsl
inc
stos
arpl
enter
and
sub
rcll
int3
jne
pop
outsl
ljmp
and
mov
pop
push
nop
orb
fbld
aam
jle
inc
jae,pt
outsb
and
dec
test
fsubrp
add
cwtl
loope
cltd
enter
out
aam
cmp
xchg
clc
mov
movsb
adc
js
rcl
inc
lods
ljmp
mov
lods
arpl
push
call
or
mov
test
sbbb
aas
in
dec
xor
test
xchg
adc
adc
dec
das
mov
insl
mov
mov
inc
mov
push
loopne
aad
flds
mov
stc
loop
xchg
enter
dec
mov
mov
xchg
mov
int
add
stos
mov
divl
mov
cltd
popf
sbb
lret
scas
add
lods
dec
add
repnz
dec
ds
fbstp
jae
inc
push
pop
cwtl
in
sbb
fimuls
xor
sbb
mov
push
jecxz
xor
mov
icebp
fucomi
push
in
cmp
in
stos
test
cmp
les
test
nop
adc
adc
mov
and
clc
jge
out
out
sbb
inc
push
cmpsb
pusha
insl
repz
movsl
shr
adc
stos
add
ja
movl
lds
scas
inc
test
xor
in
out
jno
jns
push
test
and
dec
push
adc
lods
push
rorl
movsl
rcrb
popa
imul
rclb
adc
sbb
enter
push
mov
test
pop
leave
aaa
pop
sub
xlat
adc
lahf
mov
or
cli
loope
mov
push
cmp
jae
lods
sub
js
in
add
icebp
test
rorb
int
xchg
mov
sarb
add
mov
sub
sub
fisubl
dec
mov
xor
rcl
sub
lcall
pop
adc
pushf
cmp
test
push
adc
filds
fmul
retw
pop
daa
fwait
xor
or
xorl
repz
pusha
leave
mov
add
fisubrs
push
stc
cmp
fldcw
lock
js,pt
xor
push
dec
imul
int
in
sub
cld
addl
push
movsb
mov
ja
inc
push
pop
enter
and
mov
repz
push
fbld
shrb
jo
pop
push
mov
push
aas
mov
push
mov
cmpsb
mov
fwait
xorb
mov
jmp
lahf
adc
push
push
js
pop
addr16
sbb
add
fistpl
scas
ret
sbb
mov
daa
xchg
cmc
sbbb
jo
lods
xchg
ljmp
pusha
mov
stc
daa
dec
xchg
pop
adc
sbb
gs
mov
dec
les
mov
ss
fsubs
mov
or
inc
jno
enter
shrl
shlb
test
stos
sbb
pop
xchg
xchg
jmp
popa
xchg
pusha
inc
mov
movsl
leave
and
shl
push
ficoms
lods
jmp
add
lret
push
pop
sbbb
xchg
sbb
stc
sbb
shrl
jge
push
pusha
adc
ljmp
lret
ljmp
pop
ja
push
jb
dec
in
adc
adc
sub
adc
imul
or
out
mov
push
in
test
insl
cwtl
aas
leave
pusha
in
sahf
lahf
ret
addr16
push
out
or
in
daa
mov
xorb
xchg
jge
inc
nop
sbb
mov
mov
mov
pop
sbb
lea
xorb
fidivrl
adc
add
mov
das
icebp
es
mov
ss
pop
pop
mov
repnz
push
lock
mov
pop
cmp
cmc
lock
or
imul
or
repz
loope
cli
bnd
dec
fs
push
js
ja
in
cwtl
jecxz
mov
out
jo
mov
mov
es
insb
ret
addl
bound
mov
sub
pop
jns
ret
in
mov
sub
iret
int
jle
je
push
xor
and
mov
pop
cs
adc
mov
enter
lcall
ss
xchg
dec
jle
outsl
nop
sub
mov
loopne
and
push
out
ja
call
sub
sbb
sub
cmc
xchg
int
pop
shl
ljmp
jae
jmp
sbb
xor
push
loop
lahf
push
insb
add
aam
lods
popf
xor
into
and
divl
xor
push
sub
jbe
out
lret
cmp
dec
xchg
push
mov
mov
stc
xor
sti
dec
cmpsb
inc
lea
es
dec
out
outsb
mov
sub
cmp
jle
loop
lea
fsubrl
push
and
in
cs
in
data16
mov
inc
pop
push
push
xor
cmpsl
and
icebp
xchg
adc
or
sbb
and
fwait
mov
push
adc
enter
inc
pop
icebp
roll
or
xlat
cld
lods
pusha
add
xchg
jns
mov
adc
test
jnp
fistpl
jo
xchg
mov
xor
test
xchg
cwtl
mov
insl
dec
cmp
adc
les
es
cli
dec
in
jmp
imul
push
in
adc
dec
in
cmp
int3
pusha
test
cmc
or
lret
arpl
cli
dec
imul
fadd
dec
mov
test
pop
xchg
das
adc
shr
fwait
mov
mov
int
insb
scas
es
pop
inc
push
ret
icebp
push
xor
mov
dec
jp
push
addr16
jg
out
lret
dec
mov
sbbb
xor
sbb
xor
movsb
mov
or
adc
out
xchg
rorl
or
adc
popa
rorl
mov
inc
mov
orb
adc
jp
or
or
or
cmp
cmp
or
inc
mov
imul
ret
jmp
xchg
mov
ret
xor
lods
or
outsb
dec
aad
dec
lret
dec
daa
sbb
nop
jns
adcb
xchg
filds
mov
sbb
imul
insl
es
cltd
cmpl
and
in
lods
or
ss
mov
jle
mov
je
outsb
cmpsb
ljmp
xchg
mov
enter
dec
push
dec
int
pop
push
dec
adc
jg
cmp
lret
jp
loope
push
or
insb
adc
ret
loop
or
fisubrs
pop
push
dec
mov
sbb
jnp
std
scas
daa
ja
std
jo
icebp
in
xchg
sub
mov
mov
xor
adc
pop
out
fs
test
mov
pop
orl
ret
sub
sub
xchg
xchg
mov
mov
aam
std
xor
repnz
and
aam
fwait
bound
outsl
gs
xchg
jmp
lret
imul
or
inc
sbb
loope
xchg
xor
push
or
adc
xor
repz
pop
jmp
fadds
and
push
or
push
movsb
imul
stos
jge
add
cs
divl
scas
out
repnz
mov
mov
xchg
push
mov
cmp
dec
lret
mov
aas
mov
xchg
or
and
push
xor
ret
rol
lds
xor
cmove
and
push
decl
mov
xchg
loope
pop
inc
or
sti
cld
dec
gs
sub
lcall
outsb
pushw
sub
xchg
hlt
adc
jg
inc
movsl
mov
pusha
cmp
mov
and
jl
rclb
push
in
arpl
push
sahf
outsl
inc
pop
lods
sbb
dec
ja
cwtl
pop
fidivrl
pop
dec
sub
cmp
jno
ds
mov
daa
movsl
ljmp
jb
xor
shr
jae
or
insb
pushf
cld
or
pop
les
dec
sbb
and
jns
popa
aad
mov
xor
int3
add
mov
xor
mov
ret
ljmp
xlat
jae
add
mov
dec
sbb
cs
pop
add
outsl
rorl
pop
imul
lahf
mov
jmp
cmp
cli
test
aaa
lods
cwtl
xchg
cltd
cwtl
pop
fwait
pop
xchg
cmpsb
cmp
xor
cmpsb
repz
add
jnp
sub
sub
xor
ja
sub
pop
xor
push
fbstp
and
inc
into
les
ficoml
js
mov
mov
mov
incb
in
mov
pop
and
inc
loope
mov
cmp
cmc
test
or
ret
nop
ss
cmp
cmpsb
add
dec
sbb
cltd
pop
mov
and
lret
rorb
in
data16
cli
js
add
jbe
addb
sub
out
inc
shrl
lds
adc
mov
add
movsl
inc
stos
jp
inc
xchg
xchg
mov
in
mov
push
das
or
inc
cmpsb
xchg
jae
sub
cmp
popf
mov
push
int3
andl
shlb
adc
push
add
loopne
dec
sarl
jmp
icebp
sub
pop
int3
sbb
xor
xchg
xchg
and
test
pop
stos
sbbb
sub
mov
in
fisubrl
pop
shr
xor
jmp
push
stc
mov
andl
jae
int
dec
jo
xchg
add
es
add
nop
or
push
cmp
popf
test
mov
insb
mov
es
sahf
pop
data16
popa
in
push
outsl
push
sbb
dec
das
add
ljmp
rcrl
daa
sub
and
mov
and
and
ljmp
int3
lahf
aaa
mov
sbb
call
pop
xchg
inc
pop
adc
inc
jbe
or
std
lret
imulb
push
outsl
mov
lahf
mov
inc
xor
jle
sti
into
mov
xchg
mov
fwait
cmp
dec
pusha
cltd
fstl
jg
popf
add
cli
test
xor
pop
add
sub
mov
sarb
push
rorb
push
ficomps
xchg
jge
xchg
test
addb
push
enter
jg
adc
jp
mov
ljmp
inc
cmp
mov
stos
gs
outsb
cmp
add
or
sub
jl
or
out
pop
adc
add
sbb
push
das
mov
aad
push
in
shr
bound
sbb
lret
movl
shl
dec
mov
xor
cmp
mov
dec
xchg
scas
mov
gs
mov
mov
and
or
and
psubq
cld
sbb
push
movb
jp
or
stos
dec
cld
fistps
setnp
mov
push
divl
push
sarl
dec
cmc
push
stos
mov
cmc
aas
inc
mov
lcall
jle
call
xor
cmp
push
sti
inc
int3
in
gs
mov
fcoml
arpl
out
sbb
jae
mov
ds
repz
or
ds
sub
ja
ja
fmull
repz
cli
and
inc
hlt
in
loop
pop
lea
rorb
sbb
cmp
xor
shlb
pop
and
imulb
or
bound
les
xchg
sbb
jne
cmpsb
cmp
sahf
jb
add
cmp
or
les
insl
mov
cltd
addr16
and
ja
rolb
shlb
fs
mov
cmp
pop
aam
push
adc
and
mov
or
loop
pushf
fcomps
testl
idivb
xchg
arpl
xorl
aaa
popa
insl
fisubl
pop
cld
sahf
inc
je
in
ret
mov
cmpsb
add
dec
out
outsb
dec
mov
out
pop
mov
ficompl
mov
push
aas
jbe
movsl
outsb
shlb
sub
or
fcoms
in
cmp
or
mov
out
loope
sub
leave
cs
cli
mov
or
xchg
xchg
aam
pop
push
jmp
sbb
cmp
mov
sbb
jno
cvtps2pd
aam
bound
hlt
mov
jmp
ss
out
pop
cld
mov
inc
inc
fisttpll
add
cmc
dec
repz
pushf
mov
or
sub
ret
push
pop
inc
cmpsb
push
outsl
jle
bound
and
imul
fidivs
in
or
add
dec
and
aad
add
aas
call
lods
cmp
sub
jmp
push
xor
clc
xchg
icebp
mov
mov
ljmp
orl
movsb
into
negl
lds
and
rcrl
jge
mov
hlt
gs
mov
iret
data16
pop
cli
add
pop
test
sub
movsl
and
add
push
addr16
in
jl
cmpsb
and
mov
negl
xlat
cmc
mov
das
mov
js
xlat
xor
mov
add
mov
scas
pop
insb
in
and
outsl
loope
insl
outsb
lcall
xor
fimuls
or
xchg
icebp
xchg
fstl
mov
lret
push
jg
arpl
inc
mov
push
mov
mov
push
dec
xchg
das
adc
gs
pop
pop
xchg
push
lods
popf
mov
outsl
sbb
cmpsb
and
mov
mov
cmpb
test
push
outsb
dec
xchg
add
mov
sub
ss
mov
outsl
imul
sbb
inc
xchg
sbb
imulb
dec
push
sbb
cmp
and
jmp
out
fnstcw
mov
mov
dec
xor
mov
sbb
and
push
shr
jecxz
sahf
sub
add
in
adc
dec
pop
popf
movups
or
loopne
jg
fs
dec
xchg
xchg
sbb
mov
bound
mov
insb
push
repz
ljmp
fcom
and
xor
daa
movsb
and
dec
and
aad
sbb
xor
loopne
push
push
maxps
pusha
xchg
dec
jg
or
dec
ret
jmp
scas
daa
lret
pop
adc
mov
and
cmc
addr16
bound
push
aad
sbb
mov
fcomps
mov
lret
sbbl
mov
imul
andl
pop
xor
dec
mov
adc
dec
loope
cwtl
leave
push
inc
cmp
aaa
cli
aam
out
es
cmp
jae
ret
or
adc
mov
jb
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
xchg
mov
jl
pop
jl
dec
cli
or
ss
sbb
ljmp
imul
les
adc
mov
aaa
pop
shl
cmc
and
icebp
pushf
xor
mov
mov
mov
neg
cmp
push
push
faddl
outsb
xchg
fcoml
popl
test
mov
and
aaa
jno
shlb
mov
mov
nop
inc
mov
cs
push
sbb
push
cmp
ficompl
dec
dec
add
roll
jmp
cmp
or
pop
jmp
xchg
lret
aam
sub
out
out
rorl
and
data16
dec
xor
push
ds
mov
mov
and
adc
xchg
xchg
sahf
rcrl
call
pusha
sbb
and
inc
add
ss
popl
sub
movsl
or
or
ljmp
lret
bound
fimull
outsb
lea
adc
and
leave
jbe
in
nop
and
jl
mov
push
es
sub
pop
pop
lods
repnz
lea
xrelease
test
inc
pushf
xchg
fidivrl
and
push
sbb
jb
cli
out
in
or
xlat
jo
sub
sbb
cltd
insb
cmp
data16
arpl
push
push
lods
dec
push
insb
jge
and
jp
mov
enter
sub
inc
or
and
cmp
ret
loope
shl
push
inc
daa
rorb
mov
push
and
pop
mov
mov
je
mov
orl
das
push
xor
jecxz
mov
dec
roll
outsb
cwtl
inc
inc
and
pop
and
aaa
push
ljmp
adcb
mov
push
add
and
outsl
cmpsl
mov
xor
sub
out
or
lret
inc
enter
andb
mov
mov
dec
jne
push
jle
sar
cld
push
adc
cmp
or
fcmovu
popf
loopne
lret
pop
nop
jg
popa
push
adc
fistpll
xor
rcrl
jb
lea
mov
sbb
cmp
dec
mov
outsb
adc
lock
push
sub
xchg
cmpsl
sti
ss
adc
movsb
xor
mov
mov
and
in
subl
into
imul
xor
lahf
sti
ret
xchg
int
out
mov
ss
pop
ret
fcoms
shlb
lcall
cmpsl
movsb
adc
cmpsb
cltd
faddl
push
insl
movsl
fstl
test
or
gs
out
fbstp
dec
loop
shrl
mov
in
push
sbb
hlt
mov
adc
das
hlt
into
sarb
repz
pop
lods
xor
jge
and
aam
lock
cmpsl
inc
fbstp
int
ja
lcall
fstps
mov
adc
addr16
rclb
mov
ja
movsl
ds
iret
and
mov
and
inc
push
aaa
cwtl
or
cltd
mov
push
pop
and
adc
inc
std
lret
int
and
test
add
ljmp
lret
or
mov
fwait
aas
enter
lds
xchg
inc
repz
fidivrs
out
xchg
loope
scas
das
jmp
xchg
add
enter
pop
mov
iret
adc
dec
sbb
mov
fistpl
inc
cmpsb
into
cmp
add
shrb
inc
mov
fldt
iret
mov
notb
pop
pop
in
sti
ljmp
mov
sbb
xchg
jb
sbb
sti
xlat
pop
shr
sub
data16
mov
pop
dec
xor
fcmovbe
push
xchg
inc
sub
pop
push
sbb
out
jecxz
xor
iret
into
push
adc
push
arpl
pop
dec
jae
mov
jge
mov
jge
xchg
mov
xchg
pop
push
jle
inc
ljmp
xorb
pusha
aad
imulb
ss
add
or
imul
popf
addl
fcompl
lock
sub
mov
test
loope
cmp
sti
ss
bound
ss
test
xchg
adc
mov
and
stos
jne
fdivl
arpl
xchg
mov
lcall
cmp
aaa
cmpsl
fwait
xlat
std
mov
mov
out
loop
dec
test
lods
in
add
ret
cmpsl
mov
in
into
shrb
rorl
mov
xor
xor
adc
add
jp
xchg
mov
pop
add
gs
push
and
movsb
jmp
jmp
mov
push
cltd
pushf
insb
in
cs
or
aas
cld
stos
ror
notl
ds
xor
or
fadds
mov
push
fs
arpl
inc
adc
lods
stos
fistps
stc
fiaddl
mov
mov
mov
loopne
mov
inc
jmp
mov
popf
in
mov
jae
lds
aaa
pop
push
jge
push
mov
pop
sbb
cwtl
lods
je
inc
aas
push
js
mov
loopne
mov
stos
mov
adc
sub
lods
pop
int
inc
xlat
cltd
aam
out
xchg
or
mov
inc
xor
push
xor
jge
and
mov
sub
inc
popf
popa
in
mov
xchg
lahf
test
adc
testb
mov
inc
and
sbb
pop
into
and
cwtl
lods
idivl
or
dec
or
xchg
fcmovne
mov
sub
shrl
xor
in
mov
fdivs
jbe
lea
add
lea
ret
stos
sbb
scas
mov
aam
cld
rolb
leave
leave
mov
and
std
pop
or
fisttpl
sub
push
clc
outsb
in
pop
gs
jge
bound
cmp
inc
fsubrs
cmc
test
xor
sub
daa
daa
sahf
add
mov
xchg
xchg
imul
cmpsl
pop
es
mov
mov
xor
sbb
outsb
pusha
cwtl
cmpsb
fisttpll
sbbl
jo
pop
pop
xchg
xor
mov
fs
push
out
add
mov
pusha
sarl
cmp
scas
imul
dec
mov
push
push
add
mov
mov
push
mov
xchg
sbb
mov
pop
mov
jge
add
mov
pop
jnp
addl
push
mov
in
sub
adc
mov
cmp
lret
outsl
mov
pop
out
aas
pop
shrl
pop
rolb
mov
dec
cmpsb
inc
jne
insl
fistpl
sahf
shlb
cmpsl
mov
mov
into
mov
mov
out
inc
sub
cmp
jp
sbb
iret
clc
stc
jno
xlat
mov
mov
mov
inc
andl
jae
pop
xor
ja
push
mov
mov
and
jne
arpl
fisttpl
inc
push
fdivrl
ret
mov
sub
cltd
fisubl
test
inc
popa
xchg
dec
das
aaa
enter
xor
push
xchg
and
mov
or
jno
and
jb
ss
cmp
popf
and
lahf
push
adc
pop
xor
xchg
mov
inc
push
push
repnz
rcll
in
out
out
dec
jmp
or
iret
mov
call
ljmp
rcrl
outsb
add
scas
in
xor
pop
mov
push
addr16
xchg
rorb
push
aaa
mov
adc
icebp
mov
std
sbb
iret
mov
dec
and
out
subb
xorb
mov
les
popf
dec
pop
sub
in
sbb
mov
mov
xchg
test
cmp
pop
aam
jns
mov
dec
push
ds
pop
xchg
out
insb
stc
jne
mov
enter
inc
cli
push
mov
stos
add
fwait
loopne
pop
mov
cmpsl
dec
lods
fstpl
mov
cs
jle
mov
cli
add
arpl
adc
rcrl
jae
xor
cmp
pop
adc
das
shr
inc
mov
sub
inc
push
push
outsb
dec
sbb
mov
xchg
call
xchg
cmc
mov
scas
cmpb
lret
aaa
das
sub
pop
das
mov
dec
push
or
add
xchg
sub
movsb
pop
and
xchg
bound
xlat
scas
aad
orb
roll
popl
rorl
mov
nop
jmp
int
xchg
movsl
adc
jno
sbb
jbe
jp
push
xchg
outsb
sbb
xor
mov
popf
cmp
mov
rcl
aam
mov
mov
ret
je
mov
mov
in
sub
or
adc
lods
xchg
nop
pop
leave
sarl
mov
push
lahf
out
jle
mov
xchg
and
popa
mov
icebp
pop
sub
fisttpll
int3
out
js
hlt
lret
sahf
push
stos
popf
fwait
mov
xlat
inc
jg
lret
cs
cld
inc
idivb
cmp
popa
scas
aaa
lods
and
stos
icebp
push
fistl
dec
ret
addr16
push
push
and
and
test
jae
cmp
add
push
and
loope
mov
add
cld
xchg
mov
jnp
jnp
js
jno
cmp
push
lds
cmp
lcall
lret
mov
dec
xor
cmpsl
fdivrl
js
inc
xor
mov
ljmp
sbb
call
push
jo
xlat
outsl
jmp
cmpsl
aam
arpl
dec
mov
loope
sub
aam
jo
dec
sbb
adc
cmpl
out
dec
dec
int3
pop
cltd
inc
jae
dec
arpl
pop
xchg
enter
or
sub
cmc
xor
mov
mov
jns
cmp
push
pop
sub
mov
clc
push
test
pop
cmc
dec
xor
notb
add
les
out
dec
lret
xchg
jmp
stos
push
sahf
pop
test
push
sbb
test
sbb
bound
cs
fistpll
out
sbb
fstpl
sub
or
fistl
popa
mov
xchg
jg
jecxz
mov
loopne
cmp
out
adc
mov
mov
mov
xor
cmpsb
cmp
nop
lcall
pop
mov
lcall
add
popf
sarb
mov
in
push
mov
xchg
xchg
mov
mov
sahf
popf
xor
mov
jmp
mov
inc
sub
push
fs
push
repz
inc
int
or
sbb
mov
mov
fwait
xor
xchg
ds
mov
rcl
mov
icebp
jae
aam
sub
mull
adc
push
xchg
xchg
add
dec
cmp
push
push
add
insl
jns
cmpsl
dec
popa
std
dec
adc
mov
int3
xchg
push
xchg
sub
out
lea
mov
xor
aaa
xchg
sahf
loope
mov
cmp
push
rcl
aam
pusha
fimuls
xchg
repnz
sbb
push
mov
push
stc
cmp
jns
mov
stos
cmp
dec
iret
test
cmp
popa
sub
mov
test
cltd
in
js
sub
mov
xor
popf
test
stos
insb
lret
jb
arpl
aaa
outsl
pmuludq
fsubl
or
xchg
or
or
inc
jl
stc
pushf
cli
push
sub
cld
int
dec
das
xor
loope
repnz
dec
popa
push
and
inc
fdivrl
push
mov
add
jns
in
aad
cwtl
push
sub
movsb
js
cmpsl
out
icebp
mov
lea
cmpsb
out
loopne
fistpl
inc
fs
insl
inc
push
ficompl
mov
push
stos
push
mov
insb
fildll
or
in
inc
lods
pop
and
int
adc
and
mov
adc
mov
ficompl
pop
dec
jecxz
jnp
or
jne
aas
and
dec
test
xor
inc
iret
push
or
mov
cmp
push
int3
pop
andl
or
daa
mov
cmp
in
mov
addr16
cmp
pop
cltd
mov
cmpl
jl
std
fistpl
movsb
imul
mov
cmpsl
out
xchg
adc
pushl
in
xchg
xor
dec
fdivl
cltd
lret
inc
pushf
stc
cmc
aad
inc
pop
mov
lret
mov
push
fwait
adc
ja
jne
xchg
pop
outsb
xor
push
popa
sub
movsb
cmp
rol
push
call
jge
push
xor
fwait
das
ds
out
jne
aad
jp
mov
mov
push
mov
or
add
je
shl
sub
jo
push
jo
pusha
cli
nop
and
mov
dec
cld
pop
adc
jnp
pusha
stos
mov
lea
out
cmpl
fidivrs
repz
jno
mulb
cld
movb
mov
clc
stc
ja
or
ja
push
cmp
jp
inc
mov
pop
and
or
int3
adc
clc
dec
xchg
fistl
inc
jns
cwtl
jno
and
or
call
out
mov
rorl
mov
fdivrp
adc
sbb
dec
test
cs
bound
adc
jp
loope
into
mov
pop
mov
adcb
mov
loopne
mov
mov
mov
fidivrl
or
test
into
adc
mov
adc
adc
int
lock
xor
push
jne
shll
fcompl
xor
mov
jb
insb
jo
push
or
sub
mov
adc
ja
push
dec
imul
inc
inc
in
adc
mov
insl
loopne
mov
mov
fcom
cmpsl
orb
jl
push
or
daa
fwait
jl
outsb
das
popa
inc
aad
test
ljmp
das
jge
and
aam
or
bound
sbb
fnstcw
push
jb
or
outsl
push
iret
pop
and
sub
mov
adc
bound
xchg
mov
lods
vmread
sub
lcall
call
push
cld
jmp
xchg
ja
dec
push
rcl
stos
daa
out
push
dec
cld
in
cmpsb
and
adc
leave
pop
jl
lret
in
or
outsl
push
pushf
fmull
jmp
mov
rorb
push
xor
cmpsb
pop
push
cmp
pop
mov
scas
aas
inc
nop
fcoms
xchg
inc
test
push
das
jg
jg
mov
xchg
sub
cmp
divl
cmp
repnz
pushl
ret
fs
xchg
mov
sbb
mov
pop
sarb
lods
or
adc
adc
cld
add
mov
xchg
mov
std
mov
sahf
push
sub
mov
pminsw
imul
and
aas
into
test
inc
jne
sub
mov
jge
cmp
pop
int3
add
out
or
imul
fimuls
and
mov
roll
les
add
dec
ficoml
out
ljmp
push
insb
aad
lret
jne
cmp
push
inc
dec
or
push
pop
push
lods
fdivr
jmp
jb
aam
mov
sbb
jp
pop
stos
iret
mov
jnp
push
pop
sbbb
mov
inc
push
sub
scas
ret
popa
ficompl
sti
inc
jns
das
cmpb
leave
or
fstpt
fistl
scas
in
aam
std
xchg
pop
cmpsb
pop
mov
mov
iret
cmp
dec
sti
mov
xchg
mov
mov
cmc
push
push
mov
lret
mov
or
out
push
ret
shrb
push
pop
outsl
jp
push
das
push
iret
sub
in
jmp
cmpl
repnz
dec
xchg
dec
push
cwtl
bound
mov
add
push
jl
sub
jns
pop
into
mov
lds
ficoml
scas
jns
cmp
dec
mov
xor
add
adc
les
inc
leave
pop
push
ficoml
js
adc
sarb
adc
ljmp
fscale
jmp
mov
or
mov
imul
xor
sub
cmpsb
pushf
push
cmp
subb
ljmp
out
movsl
ret
sbb
nop
xchg
xor
testl
notb
enter
adc
imul
pop
out
pop
inc
pusha
xor
pushw
mov
lahf
xor
adc
adc
mov
ficoml
fimuls
xchg
xchg
pop
iret
inc
cmpsl
mov
pop
jnp
mov
dec
jns
sub
lock
fsub
inc
lock
ja
repz
jo
bnd
pop
inc
fldcw
mov
mov
test
or
in
or
mov
xor
cwtl
shlb
daa
stos
pushf
mov
sub
popa
jle
ficompl
inc
push
add
jge
ds
clc
dec
out
aam
pop
jge
dec
jb
subps
push
bound
out
pop
xchg
jmp
xor
push
daa
inc
dec
push
sti
sub
mov
inc
mov
inc
js
loope
mov
pop
pop
fadds
repz
or
ljmp
in
adc
outsl
add
lcall
es
lods
lods
popf
arpl
lock
push
sub
dec
mov
sub
mov
and
repnz
mov
loope
icebp
cmp
pop
ror
and
clc
nop
sbb
add
mov
div
xor
icebp
sbb
cmp
mov
xchg
jne
or
sub
sbb
into
sbb
inc
je
mulb
push
into
cmc
pop
js
cmp
and
jb
xchg
cwtl
adc
and
clc
mov
int3
or
test
add
test
mov
sti
sahf
leave
cli
bound
loop
fs
push
jbe
and
lods
outsb
mov
and
dec
ret
dec
gs
push
or
jne
xor
imul
sub
scas
xor
jo
test
inc
xchg
fcomip
sub
mov
js
clc
fisttpll
xchg
imul
pop
xor
xchg
loopne
lcall
es
pop
call
jns
lods
lea
fstp
icebp
mov
cmpsl
int
mov
adc
cwtl
xchg
es
jne
fstl
add
leave
adc
shrb
int3
fyl2xp1
sub
imul
mov
jno
jne
fwait
sbb
mov
cmc
and
in
cld
add
add
adc
scas
aas
mov
push
movsl
inc
std
mov
inc
mov
push
add
je
or
in
data16
adc
loope
cmpsb
in
or
jno
and
or
add
xchg
mov
push
xor
out
lahf
jge
data16
inc
and
fs
xor
xor
xchg
ja
jnp
xlat
push
repz
sub
out
mov
xchg
outsl
cli
push
xchg
leave
adc
xchg
je
insb
push
and
sbb
sahf
mov
mov
pop
in
sbb
shlb
sbb
sub
sahf
js
gs
sarl
lods
cmc
lea
shll
dec
xchg
test
jle
xchg
cmp
cmp
and
arpl
xchg
stos
int3
mov
sub
cwtl
cmpsb
shr
mov
test
inc
test
mov
icebp
sub
ret
ret
pop
jb
cmp
outsb
lods
adc
icebp
rorb
cmp
aad
imul
test
mov
xchg
scas
loope
add
aad
pop
cmp
push
jecxz
mov
cmp
lods
xor
inc
aam
fists
lock
out
adc
xor
das
sub
insb
std
push
popa
or
ret
addps
hlt
loope
mov
in
xchg
into
jl
and
push
push
pop
loope
xchg
inc
mov
cwtl
pusha
cmp
cld
mov
mov
pusha
adc
repnz
int
xchg
push
xor
or
rolb
sub
push
leave
xlat
fistl
cmp
test
orl
cmp
pop
loopne
inc
andb
pop
lods
push
pop
pop
mov
xchg
in
ja
jg
sbb
jne
mov
mov
adc
mov
shrb
mov
mov
outsl
push
inc
dec
pop
test
pop
mov
push
cli
fidivl
lcall
xchg
jp
cmp
lcall
sub
mov
mov
and
pusha
mov
dec
pop
mov
mov
subl
adc
push
lock
fidivrs
out
outsb
jnp
in
popf
imul
enter
dec
mov
fisubrs
fisttps
sti
shrl
jo
pop
push
stc
sbb
jns
push
mov
iret
mov
xor
mov
stc
das
and
repnz
add
mov
dec
nop
xchg
push
cmpsb
adcb
pop
insb
sub
popf
mov
inc
paddsw
push
data16
jne
or
jge
mov
ficoml
dec
xlat
dec
pop
mov
shl
mov
cmp
test
adc
stos
movsl
arpl
mov
out
lahf
inc
das
adc
clc
sbb
pop
or
dec
sbb
leave
in
test
std
dec
inc
dec
outsb
test
ss
lret
xchg
adc
pop
ud2
mov
sub
adc
cmp
lods
test
mov
add
sbb
xchg
xorl
fildll
loop
outsl
cmp
cmp
repz
or
jg
mov
or
insl
xor
in
out
xor
pop
call
out
popf
clc
aaa
sub
add
or
cmpsb
nop
bound
icebp
adc
xor
cs
addr16
jbe
adc
adc
adc
jns
pop
add
pusha
stos
mov
ret
inc
cmpb
lahf
pushf
inc
roll
pop
xor
sbb
fistpll
pop
sub
pop
sti
pop
cltd
decl
scas
repz
sub
or
sbb
cmc
adc
mov
scas
je
popa
xor
pusha
lods
sbb
std
xchg
mov
xchg
sarl
adc
js
fwait
sbb
test
test
cmpsb
in
cli
outsl
xor
test
dec
cmp
pop
js
nop
mov
sbb
inc
lahf
mov
lea
mov
dec
jmp
dec
mov
jecxz
aaa
enter
adc
int3
dec
cmp
rcll
jge
ds
mov
aad
sub
xchg
fsubs
imul
jp
ficoms
jmp
fistl
test
xchg
mov
repz
addb
inc
mov
cmp
stos
aam
push
push
mov
dec
daa
push
push
stc
mov
scas
lods
inc
divl
push
push
out
mov
push
iret
adcb
push
pop
inc
sti
push
jno
fcom
pop
inc
pushf
mov
add
xor
addr16
idiv
pushf
pop
lret
jnp
out
daa
das
out
sub
daa
push
int
xchg
sub
adc
or
add
or
inc
jbe
dec
sarb
divl
lcall
dec
inc
pop
sti
mov
mov
cmpsl
in
push
xlat
adc
mov
mov
cmp
push
sub
pusha
movsb
loop
push
out
mov
outsl
sub
gs
test
std
jl
call
hlt
jg
gs
ret
fs
mov
pop
adc
xchg
jle
pop
sub
shlb
mov
out
add
arpl
lret
leave
xor
xor
leave
cli
sub
push
out
fnstsw
pop
cs
sbb
cmpsb
rolb
repz
mov
mov
and
sbb
test
xor
xchg
or
std
test
je,pn
into
or
mov
fmull
hlt
mov
data16
push
dec
jo
pop
rcll
mov
xchg
jp
inc
xchg
and
mov
aad
outsb
push
enter
in
inc
lcall
fidivrs
sbb
pop
rcrb
mov
adc
lock
mov
pusha
sub
add
in
mov
sub
orl
fsubr
lock
repnz
push
xor
mov
or
sbb
movsl
std
add
subl
test
mov
sti
fcmovnb
mov
adc
fucomp
popa
pop
and
pop
into
mov
sub
pop
sbb
loop
mov
xorb
pop
mov
push
mov
sub
mov
fwait
cltd
inc
les
add
out
dec
fstpt
pop
pop
push
popf
insl
fs
and
or
pop
dec
adc
or
js
repz
popa
sbb
push
repnz
addr16
push
repz
mov
push
pop
sbb
leave
push
mov
push
xorb
ficompl
insb
push
mov
not
mov
ror
rorb
cmpsl
rcrl
sbb
jb
cmc
push
aad
mov
cli
loopne
out
mov
and
insl
cld
adc
test
enter
ret
jmp
mov
jnp
push
into
arpl
aam
pop
lea
aam
and
or
xor
fprem
dec
in
int3
insl
popa
pusha
pop
je
int
pop
mov
or
adc
sub
js
mov
movsbl
and
call
fmull
mov
test
mov
sub
lahf
ds
mov
push
lds
bound
pop
mov
pop
cmp
es
ret
adc
jns
mov
sub
ja
mov
leave
cld
cmp
in
xchg
stos
mov
or
adc
jne
int
dec
mov
icebp
jb
push
imul
cmc
ljmp
xchg
jge
outsb
mov
push
sub
cmpsl
daa
out
xchg
scas
xchg
or
icebp
jns
or
mov
ret
out
lret
test
jl
sbb
das
pop
xchg
mov
xlat
adc
lcall
cmp
cltd
mov
les
sbb
xchg
subb
inc
das
xor
add
out
add
iret
lock
rorb
and
loop
inc
adc
sbb
dec
inc
test
sub
sar
cmp
mov
sarl
xchg
xorl
xchg
push
jns
xchg
sub
xchg
xorb
xchg
pop
push
inc
data16
inc
hlt
pushf
cmc
and
ss
mov
ret
cmp
dec
test
cmpsb
pop
rol
stc
stos
add
or
adc
add
xchg
out
sub
and
fwait
or
in
pop
mov
subb
lret
mov
jp
dec
pushf
cmp
cld
adc
push
mov
mov
add
icebp
adc
pop
stc
sahf
mov
clc
sub
and
fwait
mov
out
adc
nop
inc
mov
ret
cmp
pop
andb
dec
pop
push
jmp
hlt
jbe
xchg
mov
test
rdpmc
or
add
sub
cmp
mov
les
xchg
mov
test
sub
icebp
adc
into
test
out
shrl
aaa
aam
outsb
in
dec
inc
fiaddl
or
cmp
ja
pop
mov
add
push
adc
sub
js
push
push
push
fldt
jno
test
jno
in
dec
int
insw
cltd
and
jno
hlt
jnp
fldt
leave
push
jbe
mov
sbbb
js
push
inc
jno
add
push
ss
lret
push
jp
ror
repz
inc
shll
mov
inc
jg
inc
hlt
adc
loopne
data16
ret
fildll
mov
dec
inc
bound
dec
xlat
dec
insb
add
mov
hlt
or
stos
loopne
subb
cltd
ds
or
aaa
int3
leave
fadds
fiadds
xchg
or
sti
push
and
stos
add
jmp
pop
xor
dec
jp
mov
outsl
xor
popf
fbld
mov
enter
xchg
cmc
and
shlb
push
mov
clc
mov
cmp
mov
lret
sahf
and
xchg
mov
inc
test
aam
lahf
jle
inc
inc
ret
sub
and
bound
mov
in
cmp
add
adc
mov
pop
sub
xchg
test
repz
push
cmp
enter
sarl
mov
and
lahf
add
mov
pop
insb
sti
xchg
adc
dec
push
rol
daa
out
frstor
mov
aam
insl
not
test
lock
retw
jge
sbb
test
xor
mov
cmp
addb
mov
and
inc
repz
jp
cmp
and
gs
les
lret
mov
pop
test
lea
sbb
stc
mov
lds
out
sbb
xor
clc
mov
scas
imul
push
push
inc
pop
fimull
jl
in
in
loope
fs
push
notb
mov
in
mov
pusha
xchg
pop
jl
inc
fsubr
xor
xlat
jbe
out
ficomps
jge
add
mov
xchg
movsl
adc
mov
push
pop
adc
xchg
ss
jp
pop
mov
jno
leave
sahf
dec
adc
lds
imul
adc
cmp
mov
scas
add
ret
adc
loopne
adc
ficoms
rolb
cltd
nop
inc
and
test
inc
cmp
xchg
push
push
test
bndldx
push
or
std
push
filds
mov
adc
addr16
das
inc
repnz
mov
pop
test
pop
xor
xchg
jno
nop
mov
xor
aaa
sbb
push
mov
jle
push
in
or
imul
dec
sti
subb
shll
sbb
dec
pop
das
mov
adc
mov
stos
iret
mov
pop
orl
test
inc
repnz
mov
and
pop
fisttps
aaa
mov
jecxz
mov
sub
xchg
fs
xor
sub
push
cwtl
test
push
inc
or
rcrl
xchg
xchg
mov
xchg
pushf
je
lods
out
mov
into
out
jb
mov
fmul
mov
pop
mov
inc
adc
jae
push
xchg
mov
arpl
xor
mov
and
or
push
mov
cmp
sub
cwtl
xor
cmpsb
adc
call
mov
push
mov
pop
mov
mov
mov
mov
pop
adc
mov
cmpb
lret
sbb
adc
adc
sti
aaa
sbb
aad
pop
movd
clc
xor
jmp
or
mov
jp
fcom
and
stos
outsb
js
fadds
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
dec
ds
inc
pop
jl
fisttpl
lods
pop
sarb
xchg
arpl
ficomps
mov
adc
cmp
xchg
pop
and
sub
xlat
xchg
adc
mov
shlb
cmp
pop
scas
mov
xor
jmp
or
dec
jae
imul
les
or
rcll
adc
lret
pop
rorl
push
adc
jne
push
ss
imul
sub
out
aad
add
jl
add
mov
fcoms
ret
in
jbe
frstor
cwtl
mov
arpl
ss
sbb
and
lds
push
cmpsb
xorb
push
testl
and
push
sub
into
adc
xchg
mov
push
in
sbb
push
ja
stc
mov
mov
mov
iret
dec
nop
push
movsb
xchg
movsb
or
lahf
mov
shrl
pop
int
push
test
lds
xchg
fsts
jb
sub
lock
mov
fcoml
inc
jno
push
jmp
mov
stos
psubq
push
aaa
scas
mov
int3
test
incb
iret
out
xor
adc
adc
jge
mov
adc
mov
pop
and
dec
xchg
or
or
adc
call
mov
jmp
sub
lret
popl
and
pop
and
lods
shrl
sti
pop
pop
mov
mov
fwait
jne
mov
pop
scas
pusha
loopne
cmp
push
xchg
pop
mov
dec
or
je
xor
xor
mov
pop
int
push
aad
scas
and
test
fisttps
int
pop
add
cmpsb
repnz
pop
and
ja
inc
jo
in
pusha
jl
push
mov
adc
ret
ljmp
push
aad
mov
push
push
xor
shrl
push
scas
mov
and
add
or
mov
scas
add
and
sbb
pop
push
jo
ficomps
jnp
das
xor
addr16
test
rcrb
dec
gs
jo
mov
enter
out
std
pushf
jnp
and
add
ds
negl
dec
sub
xchg
pusha
push
cmpsb
das
mul
jo
aas
sbb
inc
push
pop
lods
lahf
lods
xor
and
imul
jecxz
outsb
out
test
outsb
hlt
test
cmpl
insl
cmc
fs
repz
sahf
sub
pop
mov
pop
mov
subl
dec
mov
pop
mov
aad
push
popf
jle
into
add
cmp
xor
push
repnz
ljmp
inc
je
xlat
shl
jle
mov
lods
xor
psubq
dec
sti
out
loope
xchg
mov
mov
cmpsl
cmp
lret
cld
mov
mov
fisubs
inc
testb
sbb
sub
cmpsb
and
adc
out
dec
pop
bound
jno
dec
gs
adc
pop
sahf
outsb
mov
push
mov
sub
mov
scas
fimull
xchg
lea
mov
dec
pusha
rcrb
popf
jnp
xchg
loop
jecxz
cmp
sbb
xor
call
pop
sbb
popf
dec
push
imul
out
mov
mov
inc
enter
hlt
mov
js
adc
ret
stos
cmp
sub
fucomp
xchg
fwait
std
or
int
pop
push
popf
in
stc
add
inc
mov
lret
mov
movsl
pop
and
das
sbb
in
or
iret
out
outsb
cmp
dec
adc
xor
into
pop
gs
call
pop
adc
jae
jle
or
jl
dec
or
cld
das
movsl
push
or
xor
sbb
icebp
adc
iret
stos
mov
push
and
and
cmpsl
inc
inc
pop
shll
xchg
das
cmc
adc
fbstp
xchg
add
jp
out
xor
fisubs
sar
jle
cmpsb
adc
nop
sub
mov
mov
push
push
fsts
add
enter
pop
xchg
and
fsubrp
mov
imul
enter
cs
jnp
mov
or
fnstsw
daa
outsb
clc
fidivl
je
das
or
sub
mov
test
aam
jge
inc
int3
fdivr
cmpsb
inc
aad
leave
adc
loope
dec
stos
inc
movsl
mov
das
or
cmc
aad
pop
in
lret
cmpsl
inc
xor
lret
les
sti
bound
mov
fistpll
and
mov
scas
push
fs
xchg
negb
stos
inc
pushf
inc
or
pop
jmp
mov
mov
push
sbb
mov
jp
and
lock
pop
in
jno
xchg
fidivrs
js
hlt
in
xor
sub
fcmovnu
ffreep
xor
cs
mov
xor
push
pop
pop
adc
inc
cli
pop
lret
sbb
inc
dec
jne
stos
fwait
ret
ds
pop
push
imul
dec
mov
movsl
xchg
les
repnz
lods
adc
pop
xor
clc
stos
addr16
inc
xchg
dec
out
jmp
jne
mov
roll
and
jae
lahf
fistpl
movsl
outsb
lea
mov
fsub
xchg
jb
shl
or
push
mov
inc
stc
ret
add
xchg
or
dec
add
gs
andb
mov
pusha
add
sub
andl
insb
add
addb
aas
add
nop
pusha
and
aad
sub
cli
mov
xchg
rorl
xor
cmp
dec
sbb
adc
rcll
mov
insl
int3
pushf
fs
jle
adc
shlb
and
iret
inc
stos
sbb
push
cli
push
and
call
cmp
in
shld
pop
sub
cmp
add
adc
shll
cmp
out
mov
cmc
mov
cmp
lret
and
cltd
into
cmc
mul
or
stos
jle
jle
int
xlat
scas
cmc
mov
inc
jo
pop
and
insl
and
out
dec
adc
jne
push
sub
mov
dec
out
outsb
sub
push
stos
mov
jmp
xchg
mov
add
imul
mov
sub
mov
sbb
mov
rclb
out
mov
adc
int
pushf
gs
ret
push
and
lret
leave
mull
rcll
cmp
sub
mov
push
jmp
mov
pop
loopne
dec
sbb
xchg
mov
pop
jno
pop
test
stc
mov
mov
and
es
movsl
push
xor
mov
lods
pop
in
jns
fadd
outsb
jecxz
mov
adc
xor
int
and
es
push
cmpsb
push
daa
fdivp
lods
mov
out
mov
add
xchg
mov
jp
stos
jns
aas
repz
or
leave
sti
imul
jb
fists
cmp
int
jecxz
test
outsb
test
xchg
xchg
popf
inc
inc
sbb
jb
xchg
les
jae
mov
push
add
cmp
xor
mov
in
jno
loopne
jb
jg
out
ret
mov
loopne
pop
mov
daa
or
ljmp
add
dec
sbb
dec
dec
sub
push
imul
or
setb
mov
xchg
cmp
mov
out
inc
or
pop
sub
mov
incl
aas
mov
sub
sbb
sbb
int
xor
xchg
mov
cmp
mov
sti
jno
push
ret
out
daa
cld
sbb
test
stc
icebp
push
shr
jb
cli
fimuls
dec
inc
int
out
sarb
mov
sbb
ret
mov
dec
sahf
daa
dec
dec
and
sub
and
mov
test
fidivrs
mov
push
push
leave
inc
mov
outsb
test
fcomp
sti
js
push
jb
add
pop
mov
aaa
mov
scas
cmp
pop
mov
add
arpl
loope
fidivrs
xchg
pop
outsl
jmp
notb
mov
pop
adc
insb
xchg
cmp
or
pushf
fstl
mov
pop
stos
les
cli
or
xchg
jbe
mov
rorb
fsubl
sti
arpl
addr16
add
mov
imul
and
pop
lds
loope
int3
xchg
mov
ret
jmp
mov
and
ds
cltd
lock
push
out
xor
push
and
jb
dec
mov
imul
das
mov
test
aas
mov
jbe
jg
mov
pop
jae
negb
imulb
xchg
ljmp
pushf
xchg
idivl
add
enter
gs
dec
int3
push
xchg
loopne
andl
andl
jbe
push
xchg
pusha
add
dec
sbb
repnz
fldl
mov
mov
xor
push
lahf
push
sub
xchg
cmp
xchg
aad
sub
pop
and
ds
test
out
mov
insl
xchg
mov
fnsave
aam
cld
movsl
stos
out
fistpl
lret
mov
popa
pop
jle
mov
out
imul
in
push
mov
lret
push
iret
movsl
int
mov
filds
xchg
test
fldl2t
pop
xchg
mov
push
or
cmpsl
pusha
xor
shlb
ja
jo
adcb
shll
mov
scas
sti
ds
pop
cmp
cld
inc
test
mov
sbb
push
jns
hlt
in
push
repz
mov
dec
scas
xchg
pop
and
jl
arpl
jg
sbb
test
mov
test
sbb
inc
sub
data16
pop
mov
adc
push
xchg
cmp
ficoms
cltd
bound
and
jb
repnz
ss
mov
inc
push
jmp
mov
jae
pop
lahf
cmp
iret
mov
inc
mov
jns
loope
jge
ss
mov
test
sbb
add
xchg
idivl
add
cli
xor
sbb
mov
insb
inc
mov
nop
sub
push
push
and
or
sbb
mov
cmpsl
in
xor
pop
cmp
adc
roll
cmp
jne
mov
sbb
lds
add
push
sub
call
mov
adc
adc
sub
lret
xor
fdivrl
and
mov
dec
mov
cmc
add
or
or
dec
jns
sbb
pop
std
addr16
and
shl
jno
and
pop
xchg
aaa
xchg
or
lret
cmp
into
mov
xorl
pop
int3
mov
xchg
dec
jp
cli
adc
in
adc
jl
aaa
jg
xor
es
cmp
pushf
mov
xchg
incl
adc
shl
pop
xor
sbb
out
out
es
push
movsl
pusha
lods
rorl
rclb
cmp
or
jge
mov
jmp
nop
sub
mov
pop
adc
sub
jl
int
push
loopne
shlb
ds
mov
or
je
cmp
cmpsl
out
mov
lcall
nop
pop
lcall
and
xor
test
or
leave
jno
add
outsl
lcall
inc
cmp
sub
lcall
push
into
lds
insb
ret
pop
imul
lahf
push
insb
es
add
ret
sub
bound
mov
lds
jecxz
add
iret
subb
sbb
imul
leave
lcall
fisubl
xor
mov
js
mov
sti
cmpsl
jecxz
scas
and
lret
and
or
aad
dec
and
enter
mov
cmp
push
xchg
add
call
push
or
mov
cli
adc
and
dec
adc
cld
add
dec
out
adc
clc
push
fs
mov
or
or
into
cld
daa
ds
push
insb
stos
xchg
dec
es
stc
leave
je
fwait
inc
or
fnstsw
jne
daa
pop
lret
adc
lock
repz
jne
xchg
pop
xor
push
scas
push
xor
mov
sbb
out
test
pop
mov
mov
out
repnz
sub
pop
jne
aas
push
scas
rclb
repnz
push
in
fisubl
cmpsb
cmpsl
int
int3
push
call
pop
mov
shrl
lret
cmp
pop
jp
mov
xchg
push
jp
subl
insl
mov
mov
sbb
icebp
jmp
scas
xchg
mov
xchg
pop
bound
movsb
push
push
adc
jb
dec
cwtl
add
mov
stos
mov
call
jp
cmc
xchg
and
shrb
std
hlt
jmp
pop
mov
add
leave
and
push
sub
mov
ficoml
inc
and
jbe
test
testl
shlb
lods
fldl
pop
mov
push
aaa
imul
adc
cmp
movl
mov
mov
pusha
xchg
push
dec
imul
jne
xchg
xor
movsl
sub
or
lahf
xchg
ja
jg
testb
testb
jmp
inc
cmc
fistps
pop
push
insl
push
in
sub
in
in
je
rcrb
xchg
shll
insb
mov
repz
scas
fidivrs
icebp
jne
mov
and
mov
imull
sub
cwtl
dec
inc
lret
lcall
and
jg
frstor
mov
adc
mov
xor
cmpsl
roll
dec
and
inc
daa
push
test
push
jmp
int
cmp
sub
notl
inc
shlb
cmp
mov
pop
inc
or
pushf
ret
stos
insb
data16
push
xlat
cwtd
xchg
xchg
loopne
cmp
inc
hlt
inc
mov
cs
popa
inc
jo
pop
push
xorb
sbb
or
add
adc
push
adc
dec
jb
stos
es
pop
pop
lahf
add
aad
call
loop
aam
lock
movsl
pop
aaa
mov
hlt
pop
mov
andb
jl
and
test
xchg
fisttpll
stos
int3
aad
cmpl
mov
shrb
cmpsl
mov
stc
imul
adc
jb
mov
imul
std
int
stos
test
adc
xchg
nop
repz
ds
dec
mov
roll
stos
push
mov
jo
mov
adc
mov
sbb
sbb
pop
lea
lods
push
pop
mov
mov
ds
cmp
mov
push
ljmp
dec
test
inc
inc
lods
fbstp
scas
stos
and
mov
jno
add
mov
mov
cmp
dec
out
movb
stos
push
mov
pop
arpl
lcall
adc
popf
adc
clc
mov
xor
bound
xchg
cmp
call
jge
dec
imul
out
xchg
sub
jecxz
dec
jo
dec
mov
fsubrl
rorl
inc
sub
add
int
icebp
cmp
push
push
jbe
cmp
lea
rorb
test
xchg
dec
or
call
inc
pop
xor
cmp
hlt
aam
cmp
push
pushf
in
loope
out
push
push
mov
dec
inc
pop
and
xchg
rorl
dec
xor
push
xor
iret
inc
out
adc
stc
lret
push
sbb
mov
ret
mov
push
sub
jg
pop
sub
cld
push
decb
cmpl
jno
fcomp
xor
int3
lret
sub
ljmp
pop
pusha
aas
repz
inc
outsb
ret
pop
adc
jae
daa
std
fwait
jae
cmp
jg
and
jp
xchg
in
inc
mov
es
xchg
lahf
lock
scas
push
ss
xchg
test
aad
lea
jbe
fcoml
stc
dec
cmp
mov
push
push
sbb
and
push
inc
pop
out
inc
sbb
in
outsb
xchg
xor
loop
cmp
fildl
ret
push
jecxz
pop
mov
sub
push
mov
adc
mov
cli
mov
cmc
dec
adc
push
pusha
mov
imul
push
imul
movsl
repnz
dec
movsl
or
nop
xchg
inc
fmul
jbe
add
dec
pop
pop
pop
sarb
sub
es
loope
loopne
sbb
mov
daa
cwtl
std
lods
mov
mov
fnstenv
sahf
adc
inc
ror
xor
std
lods
inc
ret
xor
mov
dec
rcll
arpl
lods
sbb
in
lahf
into
std
jecxz
lods
inc
add
jo
hlt
mov
mov
mov
sub
or
mov
pop
xchg
pop
js
xchg
fidivrl
jo
or
bound
cwtl
adc
xchg
cltd
insl
add
and
mov
out
into
daa
test
sarl
xor
adc
mov
xor
mov
arpl
mov
outsb
pop
decl
sub
in
out
insl
mov
ret
movsb
sub
sub
aas
call
or
dec
sbb
lods
push
fstpt
xchg
jno
dec
inc
pand
pop
push
cmp
xor
dec
or
pop
add
cmpsb
lcall
adc
sub
dec
add
cmp
cmp
test
push
cmp
sub
mov
mov
mov
loopne
sti
aas
lret
sbbb
stos
fs
push
mov
sbb
enter
addr16
lods
cld
lret
sbbl
push
inc
enter
dec
movsl
add
out
fs
sbb
es
pand
out
or
dec
pop
jl
push
push
mov
cmpsb
fisubrl
jl
imul
sub
xchg
adc
push
mov
xchg
and
jmp
scas
jno
sti
shlb
dec
and
mov
add
ljmp
pop
out
pop
mov
shrl
xor
ja
je
mov
sbb
cli
push
dec
sbb
xchg
sub
cmp
divl
movsl
lcall
xor
sarl
push
xor
ljmp
xor
or
dec
in
push
aaa
ficoml
mov
cwtl
adc
and
cmp
ja
loop
dec
mov
inc
jbe
rolb
roll
loop
cmovns
sti
or
ja
divb
mov
pushf
push
mov
popf
aaa
mov
pop
xorps
or
fwait
sub
push
lods
inc
test
cmpsb
sbb
inc
add
dec
mov
mov
jmp
or
adcb
test
mov
jp
sub
cli
fildll
jmp
test
inc
adc
sbb
xchg
lea
push
push
pop
sub
sbbl
popa
lahf
mov
xor
pop
xchg
andl
lods
out
cli
and
cltd
arpl
mov
enter
mov
xor
pop
sub
jle
outsb
sub
adc
add
add
xor
push
mov
jge
imul
or
mov
call
push
mov
aam
insb
int
and
imull
mov
fisubs
xchg
adc
mov
xor
dec
hlt
imul
cli
push
mov
leave
shll
cmp
mov
add
outsb
loope
mov
call
adc
iret
dec
pop
jb
xchg
push
stos
cmc
mov
push
out
xchg
pop
inc
in
jmp
shrb
repz
and
or
pop
subl
xor
movsl
add
mov
mov
std
push
lds
dec
push
or
pop
jge
jle
fcoms
outsl
lods
loop
imul
stos
imul
adc
fisubrl
arpl
adc
cmpsl
push
inc
add
sub
adc
ja
fisubrs
xor
push
inc
jp
lods
pop
imul
dec
mov
clc
sub
sbb
sti
cmp
ljmp
sahf
push
mov
mov
insb
push
loope
fcomp
sub
ja
mov
in
inc
or
xlat
push
inc
les
xchg
and
mov
in
sbb
cmpsl
subl
repz
notl
mov
das
inc
popf
xlat
jecxz
ds
int3
xlat
test
cwtl
pop
dec
in
mov
xchg
in
and
arpl
xchg
aam
sarb
mov
push
fstpl
or
out
ret
andl
pop
push
push
fcoms
mov
insl
xchg
adc
xor
cmpsb
stos
addb
in
push
lods
cmc
fcompl
cmpsl
in
sub
push
adcb
sbb
cmpb
arpl
roll
inc
ffree
jp
outsl
aam
nop
das
ret
mov
test
xchg
adc
cs
fwait
repz
jbe
pop
xchg
adc
add
inc
mulb
pop
lds
mov
clc
xor
sub
mov
lret
add
sbb
mov
popa
jb
ljmp
lds
pop
mov
pop
das
scas
mov
icebp
xlat
push
cltd
xor
rclb
mov
jge
or
cmp
push
out
dec
nop
pop
std
mov
mov
mov
sbb
insb
test
stos
in
arpl
mov
ds
ret
lods
pushf
mov
iret
pop
bound
dec
mov
inc
fsubs
xchg
push
push
adc
xor
cltd
ja
jns
push
lods
test
fcomps
mov
in
mov
dec
and
cwtl
sub
mov
adc
xchg
inc
das
stos
adc
insl
dec
fs
testl
mov
mov
adc
movsl
rorb
dec
cmpsb
mov
xchg
arpl
and
aaa
cmp
xlat
stos
fiaddl
loope
andl
daa
hlt
or
ss
inc
std
adc
and
or
cmp
mov
jmpw
out
out
mov
data16
xchg
mov
scas
lods
inc
inc
icebp
sub
lahf
loop
jg
mov
gs
cmpsb
mov
adc
ret
sub
inc
adc
lahf
mov
flds
pop
fidivl
mov
inc
adc
sub
lods
sbb
push
jg
addr16
icebp
sbb
rcll
xchg
jno
int
mov
daa
dec
ret
loop
xchg
sub
scas
or
sbb
enter
and
shr
cmpsl
inc
push
arpl
adc
jnp
cmpsl
jno
test
out
jp
cmpsl
xchg
add
lods
and
xlat
pop
leave
jecxz
stos
jno
mov
push
pop
adc
or
xlat
sti
pop
mov
loopne
jmp
pop
add
sub
jge
fwait
dec
jg
pop
mov
inc
aad
rcrl
jo
insb
test
mov
lcall
out
pop
push
pop
jmp
inc
mov
imul
mov
push
adc
andl
idivb
in
or
cmc
pop
pop
aad
ret
cli
xchg
add
pop
sub
imulb
or
je
mov
and
fxch
inc
stos
inc
inc
les
sbb
mov
xor
cmp
dec
int
sub
insb
scas
dec
xchg
iret
int
in
mov
popa
or
hlt
ret
rcll
lret
and
pusha
mov
and
dec
pop
ss
pusha
add
nop
fwait
mov
and
movsb
rorl
adcb
xchg
fisttps
cmp
adc
fdivs
jmp
movsb
push
mov
push
jmp
dec
ret
cmp
dec
loopne
mov
fstps
mov
push
mov
cmc
test
mov
mov
push
sarl
mov
fwait
push
xor
pop
movsb
mov
out
mov
daa
lods
js
add
xchg
adc
pop
js
add
jae
sbb
test
cmpsb
mov
xchg
jae
bound
mov
xchg
mov
loopne
cmp
push
rclb
xchg
sbb
mov
outsb
push
leave
mov
ss
aas
lahf
mov
xorb
sub
jp
shll
or
int3
jle
sub
loopne
in
ja
and
or
push
pop
imul
adc
cli
xor
xor
cmpsl
cs
ljmp
loope
out
inc
pusha
loope
xchg
aad
mov
cmp
popa
pop
lock
ja
loop
cmpsb
ja
inc
and
push
insl
jp
fisttpl
pop
inc
adc
mov
aaa
repnz
cmp
mov
push
mov
jb
push
repnz
xchg
mov
insb
mov
sub
mov
xchg
repnz
add
leave
clc
add
aas
lret
pop
lcall
sahf
jno
mov
push
cmp
jmp
jmp
dec
jmp
pop
cmp
xchg
xor
into
mov
mov
or
inc
xor
cmpsb
or
pushf
dec
cmpsl
daa
inc
mov
lahf
xor
cmp
insb
movsl
arpl
enter
mov
jl
jae
push
cltd
inc
inc
iret
jg
push
sbb
loop
or
push
push
inc
sbb
test
test
imul
rorb
sahf
cwtl
test
xor
pop
cs
mov
lock
xor
imul
jo
or
pop
icebp
test
nop
or
data16
adc
aas
or
decb
xchg
aaa
sub
punpckhwd
or
jp
dec
or
xchg
mov
enter
ret
lods
pop
adc
test
pop
jae
push
pusha
xchg
sbb
or
stos
int3
mov
jge
sbb
pop
cmp
mov
sub
and
fidivrl
lods
ss
jne
xor
lahf
test
cmp
adc
arpl
push
mov
sahf
push
bswap
fisttps
xchg
mov
dec
pop
mov
fdivs
mov
aas
sbbl
or
sub
nop
cmp
mov
ror
jmp
pop
in
mov
test
mov
cmpsb
sub
xor
mov
popl
negb
movl
add
jle
jbe
cmp
jae
mov
dec
mov
sub
inc
cmpsb
stos
shll
sbb
xor
je
and
int3
cmp
stc
insb
in
sub
and
mov
push
and
mov
gs
pop
jb
paddq
mov
or
xlat
leave
shlb
scas
push
dec
jae
cs
lcall
dec
add
jmp
rol
jge,pt
jae
xor
iret
data16
ficoml
call
lea
sub
call
or
icebp
mov
mov
out
aam
jb
outsl
clc
test
xlat
ret
adc
sub
add
xchg
push
push
inc
in
pop
inc
push
mov
addr16
cmc
inc
enter
into
mov
lahf
add
jb
addl
mov
pop
bound
xor
xor
cmp
icebp
leave
sahf
cltd
pop
scas
push
cli
inc
dec
subl
in
loop
and
mov
aaa
iret
test
sbb
mov
push
mov
adcb
sub
dec
imul
and
cmc
cmp
cmp
xor
or
scas
cmp
cmpl
sub
pop
push
jg
ss
mov
jg
adc
jne
fisttps
mov
cmp
leave
js
lret
or
and
jp
lea
xchg
add
adc
push
xor
jno
and
cmc
aas
shlb
sbb
pop
je
sub
int3
and
nop
push
xchg
int
test
aam
mov
inc
dec
aaa
jns
cmpsl
pop
add
decl
xchg
shrl
lods
jb
or
insl
mov
add
xchg
aas
lods
adc
xchg
ret
xchg
data16
das
xchg
mov
in
pop
aaa
mov
mov
test
mov
jbe
testl
aaa
stos
cltd
in
dec
imul
xchg
pop
add
inc
gs
sub
decl
stc
sub
jmp
fsubs
sbb
mov
test
or
mov
pop
xlat
lahf
sbb
sub
test
popf
shrb
pop
rorl
jmp
xlat
xorl
adc
in
nop
roll
sbb
mov
jmp
mov
add
adc
shrl
outsl
aas
test
ss
or
mov
andb
sbb
dec
popf
jne
scas
dec
sbbl
xor
add
out
gs
call
and
andl
mov
lea
outsl
xor
and
test
sub
aaa
xchg
pushf
mov
sahf
lcall
and
adc
divl
xchg
iret
lret
movsl
adc
adc
and
xchg
or
or
mov
push
jl
mov
mov
mov
dec
jbe
ret
flds
mov
mov
xlat
or
inc
jbe
mov
fnstenv
sbbb
mov
mov
adcl
push
ljmp
xchg
into
popf
das
mov
pushl
push
les
loopne
push
mov
mov
addr16
lds
mov
aaa
into
repnz
js
test
es
fucomp
repz
mov
jae
lahf
xor
mov
mov
hlt
ret
sub
push
fcmovb
out
sarb
push
pop
jno
mov
std
jno
into
sbb
jmp
sahf
add
fwait
jne
inc
push
jns
js
jge
out
xor
jmp
outsl
pushf
sub
lods
lret
xchg
adc
loopne
fbstp
das
cmp
xchg
fcoms
xchg
mov
movsl
daa
xlat
cld
jmp
inc
mov
fimuls
dec
jmp
repnz
sbb
xchg
fs
bound
push
adc
shlb
jnp
repnz
xor
es
adc
cltd
lret
cwtl
sub
jbe
xor
jb
aad
jne
aaa
icebp
cmp
outsb
std
or
andb
addr16
pop
or
dec
sbb
jnp
int
jae
mov
das
ret
pop
add
test
test
mov
fidivs
addl
sub
psadbw
dec
imul
fsubrl
sbb
clc
clc
jbe
push
out
outsb
cmp
cli
scas
push
test
fwait
data16
rcl
mov
jb
das
nop
adc
push
andl
test
sbb
dec
push
add
mov
test
ljmp
ljmp
push
inc
loop
mov
sub
ljmp
imul
push
mov
std
add
stos
test
pop
pushf
mov
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
ret
jg
dec
xor
mov
in
mov
dec
cld
lret
xor
cmc
fdivs
jno
adc
sti
in
enter
aad
loop
inc
testl
aas
int
xor
mov
mov
ret
jnp
adc
mov
add
movsb
add
jns
jo
xor
lods
daa
and
movsl
cmpsl
pop
jg
nopl
stos
mov
fiaddl
sbb
or
iret
adc
aam
outsb
pop
ljmp
mov
cltd
mov
push
add
and
cmp
movsb
jg
inc
sub
sarl
mov
xlat
push
fs
or
sti
and
cmc
outsb
pusha
mov
pop
mov
adc
ljmp
mov
jo
fcom
xchg
lret
lret
fbld
pop
pop
lret
mov
cmp
movsl
fcompl
lds
rcll
or
or
popa
je
adcl
lods
popf
daa
cmp
movsb
inc
rol
adc
loop
roll
loope
jae
adc
mov
flds
cli
stos
mov
add
jge
lods
xlat
je
sub
mov
leave
nop
and
stos
pop
insl
cmp
test
pop
mov
xchg
jle
rolb
in
or
test
dec
sub
pop
mov
out
and
cmp
fwait
gs
movsb
dec
jmp
stc
cltd
scas
sub
es
push
ljmp
add
pop
sti
mov
xor
test
repz
mov
div
inc
mov
xor
in
pop
cld
test
ljmp
pop
mov
pop
clc
ja
fwait
movsb
stc
std
sbb
cmp
and
sbb
pop
fcoml
stc
ret
xchg
fwait
adc
pop
xor
mov
sub
inc
movsb
push
mov
imul
add
push
push
fs
mov
adc
out
in
mov
lea
mov
push
lcall
fwait
insl
out
sbb
sub
mov
pop
cmpb
test
notl
popa
jge
and
jbe
mov
shlb
nop
ret
inc
mov
out
cmp
adc
push
add
dec
out
jl
fidivs
fsub
mov
or
cmp
push
add
sbb
jle
leave
fcmovne
push
in
pop
ljmp
fildl
mov
repz
in
mov
push
lret
dec
dec
mov
shrb
mov
or
xlat
push
push
push
mov
mov
scas
syscall
and
movsb
dec
xchg
mov
fcomi
or
shr
pop
call
test
out
outsl
pop
mov
int3
adc
movsb
les
es
ret
jmp
adc
or
adc
shlb
or
dec
xlat
into
mov
adc
stc
push
rol
push
arpl
xchg
xor
jb
sub
pushf
sbb
jg
es
fs
mul
pop
mov
push
adc
mov
inc
imul
push
jne
xor
cltd
sub
aad
or
jmp
push
sbb
add
cmp
add
adc
cmc
sar
add
inc
mov
insb
cmpsl
lret
cltd
sub
out
pushf
mov
sbb
jg
mov
push
cmp
xor
cmp
push
or
es
add
jnp
push
dec
fucomp
lret
icebp
or
fs
cmp
addr16
mull
adc
lret
add
test
call
stc
xorl
cs
xchg
imul
xor
ret
sbb
dec
mov
repnz
outsl
je
sbb
int3
fstl
cmc
sbb
sbb
cmc
std
mov
xor
adc
push
sbb
call
cltd
sbb
scas
in
mov
xor
jne
icebp
enter
dec
test
inc
leave
adc
shlb
sahf
push
sbb
mov
xor
dec
shlb
xlat
sub
cmp
push
cmp
cmpsb
popf
out
pop
lods
es
jae
outsl
jle
lods
sti
in
adc
insl
out
popa
adc
jae
jo
xchg
sbb
cltd
aaa
jmp
jle
pop
repz
dec
out
test
lods
dec
inc
ss
loope
fnsetpm(287
sub
inc
loopne
inc
fdivrl
nop
addr16
popf
sbb
jmp
jecxz
xor
pop
and
sub
lcall
sbbb
stos
sbb
and
repz
orb
ret
sub
or
fcomi
add
dec
dec
xor
ret
dec
sub
jns
xchg
addr16
mov
mov
or
loop
cmp
sub
xchg
add
mov
aas
mov
mov
push
xor
mov
push
adc
lcall
push
test
inc
repz
push
stc
nop
insb
fnstcw
dec
clc
or
and
out
push
test
ljmp
into
dec
xlat
test
xlat
ss
pushf
rclb
jno
jmp
sbbb
xor
lahf
fiaddl
inc
cmp
lods
in
aaa
stos
or
add
gs
xor
mov
divb
gs
mov
cmp
add
xchg
push
mov
leave
test
xchg
push
ss
popf
mov
testl
mov
inc
adc
sbb
cld
pop
pushf
out
pop
add
cmp
add
sbb
sub
jne
sub
js,pn
mov
clc
mov
pusha
xor
aad
mov
cmp
jae
sbb
lea
sbb
cltd
adc
les
mov
repnz
cltd
lock
aam
and
cmp
ljmp
push
aam
ljmp
sub
faddl
mov
rclb
lea
repz
dec
push
stc
ret
jb
repnz
or
sbb
mov
sbb
insb
dec
in
mov
jmp
mov
jle
sbb
cld
cmpsb
cs
call
and
nop
or
test
jle
icebp
add
shl
daa
inc
aam
and
jae
xchg
or
mov
and
mov
call
aas
sub
push
inc
adc
cmp
arpl
push
inc
insb
movsl
fisttps
ljmp
mov
aad
in
hlt
adc
xchg
out
push
add
jno
push
xor
insb
add
mov
rolb
pop
das
or
enter
or
lea
cmp
dec
test
pop
movsb
jb
cmp
lret
popa
in
jmp
cmpsl
std
add
and
jmp
movsl
add
fmull
int
push
or
jo
pop
stc
sar
ret
mov
lods
inc
in
add
aaa
or
or
mov
add
arpl
or
mov
mov
nop
fbstp
icebp
roll
bound
jmp
add
jmp
adc
or
lret
or
aad
push
addr16
push
mov
mov
cltd
mov
cmpsb
push
push
call
and
je
mov
mov
aas
in
jg
aam
popa
pushf
test
clc
hlt
popf
pop
mov
mov
aam
lods
hlt
dec
inc
lret
or
fimuls
inc
into
test
mov
mov
inc
xchg
js
cltd
jg
fmull
js
or
outsb
cltd
in
mov
cmc
adc
out
mov
pop
sub
mov
push
jnp
loop
xor
jbe
pop
mov
int3
aas
push
dec
lods
push
jge
std
jmp
bound
pop
adc
sbb
inc
in
adc
xor
aaa
xor
adc
popf
je
pop
add
add
xchg
push
into
and
in
ret
jno
jb
icebp
or
xor
aaa
int3
stos
add
fisttpl
pop
xchg
adc
into
and
sarb
dec
test
addr16
int
outsl
orl
xor
stc
jb
inc
jmp
pusha
inc
mov
repz
nop
dec
add
js
out
inc
pop
call
movsl
adc
or
pusha
adc
jno
cmp
jp
rcr
and
push
add
push
mov
mov
xchg
sbb
das
jmp
pop
mov
lods
lcall
je
inc
cltd
into
repz
xor
enter
cmp
mov
push
outsb
sbb
int
test
fs
shll
sbb
fsub
in
lcall
cmpsb
fiaddl
or
and
jae
cli
mov
cmp
jae
dec
fadd
pop
jbe
int
dec
outsl
loope
adc
aas
loope
pop
and
popf
jmp
xor
mov
pop
repz
xchg
ffreep
xor
jmp
pop
xchg
ret
inc
ficomps
adc
jbe
test
repnz
and
hlt
out
movsl
jl
pop
popf
test
add
push
mov
clc
push
push
mov
into
bswap
cld
cmpsb
sbb
and
and
fwait
ja
imul
lea
lea
bound
fsubl
fs
mov
push
sar
movsl
sar
mov
pop
into
mov
dec
jbe
dec
mov
inc
inc
cld
imul
push
movb
loope
inc
fiaddl
popa
sbb
cmpsb
ficoms
out
add
adc
ss
data16
repz
xchg
mov
neg
bound
subb
push
rclb
shrl
cwtl
jle
ret
or
adc
loope
dec
or
scas
in
mov
leave
mov
adc
dec
push
xchg
mov
xor
xchg
cli
sub
cmp
inc
sbb
mov
orl
mov
push
fcmove
xchg
xor
imul
jle
ja
xor
xor
int3
and
adc
add
mov
aaa
add
shrb
in
movsl
sub
gs
push
mov
xor
mov
ja
scas
repz
adc
xlat
je
mov
test
pop
add
mov
push
pop
mov
adc
dec
mov
cbtw
ficoms
pop
dec
pop
jnp
xorl
aad
add
cmp
in
ds
ljmp
mov
movsl
mov
and
in
jb
xchg
mov
push
inc
mov
or
add
jl
push
sub
inc
pusha
das
ss
pop
xchg
xchg
mov
outsl
aaa
pop
stos
ss
je
adc
or
movsb
xchg
jle
xor
mov
jmp
push
adc
and
movups
addl
test
into
inc
push
mov
out
test
and
mov
popa
jb
push
jp
fs
hlt
or
sub
add
xor
mov
jnp
dec
stos
sub
mov
mov
xchg
add
hlt
push
jge
jne
ficoml
lods
int3
sbbb
adc
sbb
mov
fs
mov
scas
enter
jl
stos
mov
xor
xchg
orb
sbb
data16
or
pop
mov
fdivs
dec
aad
outsl
int
dec
xor
scas
jb
idiv
sahf
mov
inc
nop
push
lods
cmp
push
pusha
imul
clc
icebp
scas
mov
sahf
push
scas
adc
and
add
jbe
mov
out
add
ds
outsl
pop
movl
gs
mov
dec
aas
pop
fwait
aas
fcomip
xchg
sub
xchg
popf
aas
add
xchg
int3
ret
imul
add
jmp
out
inc
pop
mov
ficompl
pop
jp
xor
push
pop
ja
push
lods
imul
and
dec
fsubs
mov
scas
sub
pop
and
sbb
mov
mov
dec
lea
xlat
cmp
scas
jmp
adc
mov
mov
mov
mov
iret
jg
int3
popa
add
add
mov
push
dec
es
iret
push
fwait
pop
rcll
cld
cmp
out
pop
push
cmp
pop
jmp
cmp
xchg
test
inc
push
enter
aaa
mov
cmp
leave
cmp
cmpxchg
inc
inc
loop
add
fidivrl
ja
incb
or
push
je
mov
sub
mov
pop
mov
in
or
fildll
push
pop
jge
push
and
subl
add
xchg
cwtl
push
pop
xor
dec
adcb
into
dec
mov
ret
lods
mov
roll
repnz
mov
add
into
xchg
jo
xlat
add
add
movzbl
and
aad
loop
dec
addr16
cmp
add
std
pop
mov
push
pushf
lret
and
lret
jae
mov
xor
sbbb
int
loope
jecxz
push
clc
ljmp
dec
adc
lcall
iret
xor
push
add
imul
adc
add
pop
outsl
sbb
xchg
mov
stos
push
pop
ja
mov
xchg
or
nop
push
lcall
out
mov
cld
js
call
and
dec
in
mov
mov
jb
pop
aas
inc
xlat
pop
cmp
or
add
dec
adc
push
cmpsb
push
roll
or
das
ljmp
adc
xorl
jnp
cmp
aaa
add
jg
aad
sbbl
stos
fiaddl
sub
mov
jnp
xchg
cmp
or
ret
test
push
and
leave
bound
popf
mov
mov
push
out
xor
or
push
bound
fwait
mov
ret
lock
pop
lds
xor
mov
mov
gs
inc
mov
xchg
loop
and
sub
push
dec
sarl
in
pop
xor
imul
or
out
arpl
imul
inc
out
mov
out
das
cwtl
ret
popf
bound
ret
ljmp
call
pusha
nop
sbb
xchg
dec
nop
jg
movsl
pop
jecxz
jecxz
xchg
and
xchg
dec
mov
adc
fmuls
adc
add
loopne
popa
roll
and
pop
xchg
xchg
es
adc
or
adc
mov
sub
outsb
ret
daa
push
loopne
sbb
call
ds
xchg
int
shl
add
fistl
insb
les
out
mov
or
or
mov
push
call
xchg
js
dec
mov
xchg
cmpsb
ret
aam
data16
sbb
fldl
and
shll
sarl
inc
ds
cmpsl
sahf
adc
adc
mov
insw
push
mov
cmpsl
xor
fs
cmp
and
shll
sub
pusha
imul
ja
mov
xchg
in
sub
xor
mov
add
push
mov
es
call
mov
in
push
lahf
fnsave
xchg
and
hlt
ljmp
lcall
insl
ret
jne
inc
or
subl
sub
xchg
paddsb
cmp
or
xor
adc
aam
les
aaa
divl
pop
je
fsubrl
sub
int
pop
aad
pushf
xchg
mov
arpl
dec
or
cmp
cld
call
xchg
leave
push
push
jb
or
and
aad
scas
pop
data16
cmp
mov
sti
lods
or
jb
int
jle
clc
inc
mov
push
xor
cmp
adc
iret
pop
scas
das
mov
sbb
shll
cmp
sahf
jns
outsl
mov
leave
cwtl
cmp
scas
mov
lret
hlt
enter
lea
and
sbb
or
bound
lods
nop
icebp
scas
dec
or
shll
das
xor
xchg
dec
pop
ljmp
and
xchg
aas
and
pop
mov
stos
cmpsl
das
sarl
xchg
cli
out
sti
mov
sub
cmp
je
test
stos
lahf
stos
and
jns
mov
add
xrelease
mov
fimuls
cmp
insb
and
out
fdivrs
mov
in
jne
lods
jmp
hlt
lret
lret
shl
add
mov
clc
cwtl
loopne
mov
jns
inc
loop
lods
int
in
lcall
mov
lret
sbb
cld
sbbl
imul
sub
mov
std
sub
cs
enter
imul
and
sub
sarb
les
imul
daa
das
in
shl
mov
or
out
cmp
iret
mov
cmp
in
dec
mov
pop
fisubs
sub
sti
mov
mov
sahf
mov
mov
mov
movsb
aad
add
ja
jge
pop
arpl
dec
mov
xor
int3
nop
sbb
stc
xlat
xor
daa
outsl
inc
scas
into
xchg
ja
sub
aad
cmpsb
push
sti
scas
xor
daa
or
jne
iret
push
icebp
mov
mov
and
das
push
js
sub
ja
push
mov
cltd
addr16
xchg
jno
test
call
push
sub
loop
xor
cwtl
inc
mov
daa
and
pop
cmc
sbb
xchg
push
and
inc
outsb
cltd
ss
out
and
mov
idivb
sub
stos
loopne
xor
cwtl
test
or
adc
in
sbb
in
mov
jle
and
jmp
xlat
pusha
in
dec
cmc
andb
add
outsl
jbe
or
xor
jo
inc
mov
xor
ds
xchg
pop
jno
das
into
lds
mov
adc
shl
jo
xchg
inc
nop
ds
xor
hlt
xlat
stos
inc
mov
adc
add
loope
stc
sbb
push
mov
cmp
mov
orl
push
mov
push
xchg
mov
aas
add
mov
xor
mov
sub
and
out
imul
push
xchg
aas
cs
sub
and
mov
pop
jae
int
ljmp
dec
lret
cmp
orl
fsubl
add
clc
sub
sar
jg
xchg
mov
scas
in
insl
adc
int
andl
jne
jbe
aam
insl
sub
xchg
mov
jne
pop
cltd
mov
cmpsb
jle
mov
loop
test
add
shrl
cmp
push
mov
cwtl
push
and
in
mov
loop
aam
adc
jmp
je
pop
mov
push
jle
cmc
sub
sbb
lods
jmp
nop
inc
dec
addl
sub
jl
data16
and
stos
push
add
lock
enter
cltd
push
sub
cwtl
push
cli
test
and
bound
xchg
or
inc
stc
add
enter
ror
inc
push
mull
sbb
jle
push
mov
in
jecxz
xor
fldt
sahf
int3
mov
hlt
xchg
inc
test
push
pop
cwtl
cmp
popf
lret
pop
int
sbb
lahf
stos
stc
fnstenv
or
dec
xchg
jb
sbb
mov
sub
call
pop
mov
ret
cld
pop
mov
adc
movsl
sbb
mov
pop
call
lock
sub
add
pushf
jle
jne
cli
shll
jns
psraw
mov
decb
int
jl
icebp
sbb
ss
cld
in
mov
loope
cmpsl
aad
jno
mov
sbb
inc
pop
mov
push
ljmp
xchg
mov
push
dec
pusha
mov
fsubs
or
xchg
inc
enter
adc
inc
dec
push
jnp
stos
inc
mov
mov
mov
pop
in
into
test
mov
pop
pop
scas
cmp
fadd
mov
sub
cmp
inc
outsb
inc
daa
xchg
sub
push
xchg
adc
sbb
inc
jnp
jbe
add
mov
jl
pop
outsb
add
aaa
xchg
sub
add
dec
repz
mov
or
or
out
popa
push
mov
jl
lds
and
outsl
out
xchg
inc
and
outsl
mov
push
decl
and
lahf
gs
outsb
rolb
add
fistpll
ja
sti
or
ljmp
test
xchg
repz
add
sub
out
out
es
int3
sub
xor
jle
clc
mov
and
popa
adc
jmp
mov
lods
lds
in
mov
push
or
jecxz
mov
and
adc
lret
stc
sti
xchg
push
and
mov
mov
jno
mov
xor
movsb
daa
rclb
dec
ljmp
mov
xlat
jno
lods
lea
cmp
mov
ja
movsl
imul
mov
push
xor
or
lcall
xchg
into
adc
sahf
je
xchg
push
lock
mov
jge
loop
dec
mov
mov
push
xor
xlat
jmp
dec
out
test
cmpsb
sbb
jecxz
cmpsl
mov
gs
cmp
and
and
lods
cltd
jo
fs
jno
loope
aad
adc
push
jecxz
out
sub
sbb
mov
lcall
adc
dec
scas
je
mov
orb
jge
sti
aaa
ss
sub
mov
cmp
inc
push
test
inc
mov
lods
ljmp
dec
pop
loopne
enter
cmp
jns
sub
out
mov
scas
orl
mov
pop
push
add
cmp
insb
je
cmc
cmpb
lods
sbb
fcompl
xchg
xor
and
sbb
nop
add
and
mov
stos
push
or
jno
push
mov
cltd
lods
xor
sbbb
cmpb
out
inc
mov
add
jmp
xor
jl
sbb
sbb
mov
push
mov
or
lods
sub
xor
fisubrl
dec
add
adc
jmp
dec
rcrb
mov
rorb
push
in
push
mov
insb
jno
jge
in
or
adc
jns
cmpsb
sub
mov
aam
cmp
clc
adc
test
and
in
inc
mov
xchg
and
xor
and
mov
cmpsl
repz
cmp
mov
xor
sti
xchg
dec
sbb
fucompp
mov
scas
cld
add
cmp
xlat
mov
cs
out
faddl
ljmp
mov
outsb
mov
and
sbb
adc
jl
jecxz
xchg
xchg
lds
mov
fildl
or
cmp
jnp
cs
mov
fs
test
sahf
inc
mov
imul
jp
hlt
jge
ret
fidivs
xor
mov
xchg
pushf
std
paddd
adc
xor
sub
push
mov
inc
add
out
sbb
jnp
test
testb
test
push
popf
enter
jb
inc
mov
ret
ret
out
fisttps
mov
repnz
lods
aas
mov
and
inc
clc
daa
jnp
leave
cwtl
inc
lcall
in
and
mov
mov
sbb
cmp
out
cld
jnp
jo
add
fiaddl
outsl
mov
mov
shlb
out
aaa
or
add
fstpl
stc
and
xor
inc
cwtl
imul
stos
sub
cmp
repz
push
push
data16
and
cld
out
xchg
nop
inc
and
push
test
xchg
or
popf
jl
subb
call
mov
mov
dec
inc
fscale
mov
adc
je
out
and
mov
dec
jp
cmp
add
cld
sub
adc
loopne
iret
mov
fmuls
cmpsb
aad
push
in
into
lds
push
js
push
jne
push
imul
add
and
mov
pusha
jmp
and
adc
xchg
xor
xchg
add
push
pop
shlb
pop
aad
mov
scas
jp
mov
clc
sbb
xor
leave
andl
leave
push
mov
and
fnstsw
xchg
insb
mov
mov
js
gs
sub
jecxz
lahf
mov
or
scas
pop
inc
add
mov
cmp
mov
xchg
or
mov
xchg
scas
mov
and
decl
in
add
pop
inc
out
adc
jecxz
jle
aaa
test
adc
sub
and
xchg
pop
aas
stos
shr
dec
cs
fldenv
inc
and
push
cmp
xchg
loope
push
std
cs
jp
add
lods
decl
fwait
stos
sbb
or
and
and
arpl
lds
lods
mov
stos
dec
or
mov
sub
mov
dec
mov
movsl
mov
xor
test
sbb
jo
add
fmulp
mov
xor
fwait
dec
mov
rolb
sbb
xor
sbb
dec
sbb
jne
cmp
mov
jmp
into
jmp
add
fwait
lods
das
and
pop
mov
loope
mov
sub
pop
gs
test
adc
es
insl
and
dec
cltd
sub
jae
lahf
dec
frstor
clc
jne
sbb
in
fsubs
push
shr
jg
push
pop
fidivrs
and
loope
repnz
or
xorl
rorl
sbb
stos
std
bound
cli
cmp
mov
fdivs
stos
jmp
xor
push
jb
xor
repz
cmp
push
mov
cmc
add
sbb
cltd
test
and
inc
add
jl
pop
sbb
lret
sbb
insl
fwait
bound
test
cmp
hlt
mov
fisttps
scas
sbb
ljmp
adc
pop
mov
xor
sub
hlt
adc
mov
sbb
cmp
cmp
push
ret
iret
jbe
dec
cld
dec
cld
movsb
xor
dec
sbb
and
adc
aad
sub
es
sbb
inc
lods
mov
jno
js
scas
jp
jnp
adc
movsl
or
enter
int3
and
inc
xchg
cmp
xchg
sti
push
outsl
nop
scas
lahf
loopne
sahf
sub
icebp
dec
in
jo
scas
mov
aaa
cmc
mov
fdivp
push
je
and
outsl
js
dec
mov
cmp
sbb
mov
repnz
shl
or
repnz
sub
adc
xchg
in
inc
inc
push
or
jg
mov
ljmp
sti
leave
in
ret
je
repnz
and
mov
out
out
enter
xchg
outsb
lods
mov
pushf
sahf
lret
mov
ds
jb
ja
xchg
sti
lahf
sbb
jge
aaa
daa
movsl
sbb
nop
out
cmp
inc
mov
fildl
test
inc
push
inc
insb
and
fistl
mov
push
cmp
and
inc
shll
popf
lret
mov
nop
out
xchg
icebp
divl
adc
fidivs
push
das
mov
cltd
out
rcr
push
adc
in
xchg
mov
inc
push
test
aaa
shlb
inc
sub
shl
sub
in
clc
insl
sub
sub
leave
xor
cmp
les
mov
dec
xchg
adc
inc
test
pop
mov
imul
jns
lret
imul
adc
stc
outsl
cs
lea
movsl
es
dec
pop
inc
sub
lods
add
adc
mov
imul
les
xchg
xchg
negl
clc
fcmovnb
and
xor
mov
jecxz
mov
and
jl
pop
sub
jecxz
push
or
lods
xor
into
fnstsw
inc
les
in
andb
adc
daa
popf
dec
mov
dec
inc
je
andb
xor
or
in
scas
negb
pop
sbb
mov
sbb
mov
xchg
dec
pop
inc
rcr
pop
repz
mov
mov
xor
mov
xchg
divb
dec
jnp
mov
mov
mov
and
es
stc
movb
je
sbb
cmp
mov
aas
xchg
int3
sahf
lret
faddp
pusha
dec
cmp
sub
xchg
test
mov
or
xchg
stos
out
cli
popf
leave
or
orl
int
push
cmpl
mov
sbbl
jns
xlat
movsb
fisttpl
insl
scas
int
jmp
es
je
aad
dec
sub
stos
popa
stos
adc
mov
pop
mov
stos
cmp
in
sahf
adc
cltd
je
sub
xchg
aad
lahf
mov
mov
jg
je
mov
jle
mov
inc
shrd
add
test
or
xchg
xchg
int
loop
test
gs
gs
icebp
pop
xchg
mov
ret
cwtl
aad
incl
daa
rorb
and
add
ret
mov
inc
sub
cmp
xchg
mov
popf
mov
aad
cmc
push
add
push
or
rolb
add
mov
repz
subl
add
jbe
aad
push
mov
imul
and
sub
stos
cld
add
push
les
mov
imul
adc
mov
shrb
pop
lods
pop
idivl
movsl
sahf
cmp
imul
dec
adc
int
add
mov
sbb
jl
sub
ljmp
mov
inc
sub
je
jo
fimuls
push
out
sbb
cli
loop
mov
shlb
sbb
loop
mov
sahf
lea
inc
and
and
jp
dec
andb
fimull
cmp
sti
inc
push
sbb
pop
and
loope
scas
add
mov
hlt
pop
std
ret
clc
out
dec
out
pop
xchg
mov
or
dec
pusha
cmpsl
xor
out
clc
xor
xchg
xchg
push
orb
shlb
notb
and
sub
stos
test
xor
gs
dec
xor
and
sub
jp
mov
sub
sahf
sbb
mov
adc
adc
loop
adc
enter
insl
inc
xor
rolb
mov
out
mov
mov
test
lods
push
into
ljmp
lods
sbbb
in
xor
xchg
xor
scas
lahf
imul
int3
scas
arpl
mov
xchg
lcall
lds
lock
mov
or
sbb
ljmp
sub
xor
vaddsubps
imul
xor
and
mov
dec
jp
push
xchg
mov
mov
mov
dec
mov
jp
mov
sbb
pop
push
mov
add
icebp
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
in
mov
int3
xor
inc
pop
jl
sbb
mov
scas
cltd
mov
fwait
imul
xlat
into
jmp
in
cmpsb
sub
lock
sahf
aaa
les
leave
sub
sub
popa
sbb
popf
stc
lds
or
pop
or
pop
jno
push
cmpsl
sahf
mov
xor
sbb
jb
inc
xchg
shl
insb
cmp
inc
movsw
mov
cli
mov
jb
dec
inc
in
inc
mov
loop
lahf
aam
pop
mov
arpl
dec
cmp
es
mov
adc
cmp
jb
stos
test
mov
push
jp
cmc
out
dec
out
out
rcrl
scas
leave
fwait
xchg
add
push
xchg
std
inc
dec
mov
ficompl
stos
aad
test
loop
and
cltd
jne
mov
xor
add
push
pop
ficoms
cmp
into
dec
sbb
lahf
in
jb
push
cmc
mov
sahf
mov
rclb
xor
pop
lock
inc
out
jmp
call
adc
popf
pop
sub
adc
stos
sub
push
pop
mov
mov
movsl
rcrl
xor
pop
lret
mov
lock
xchg
ret
lret
adc
mov
cwtd
cmp
pop
cmp
jbe
dec
pop
int
mov
mov
test
add
fsts
lcall
push
lods
dec
cs
decb
fcoms
arpl
xor
ror
mov
mov
adc
inc
cmp
or
stos
movsl
loopne
sub
push
lock
fsts
pusha
cs
call
lods
mov
pusha
cmp
std
jg
jmp
and
inc
jnp
in
cmp
or
stos
call
clc
mov
push
mov
pushf
adc
loop
xlat
pop
popa
movsb
pop
rorb
inc
bound
mov
aam
mov
decl
add
das
pop
push
call
pop
push
int3
popf
jmp
lods
and
add
movsl
push
lea
add
loope
push
fiaddl
sti
add
or
push
jns
add
sub
ficompl
xorb
add
or
in
imul
inc
and
fidivrl
test
cs
inc
sarl
fmulp
inc
lret
in
sbb
and
adc
ds
je
cmp
mov
cmp
sahf
jg
cmp
push
imul
imul
jno
std
pushf
sub
sub
aam
fcomi
mov
sbb
shl
xchg
sub
pop
call
mov
sub
push
data16
jl
call
adc
or
insb
inc
push
push
push
stc
popa
mov
jno
push
in
dec
ljmp
xchg
movsl
push
jmp
rcr
mov
xor
mov
cmp
mov
aad
xchg
jge
xchg
jbe
clc
push
dec
mov
sub
push
lret
jle
jns
mov
jl
push
mov
popa
shll
fstpl
mov
ret
or
pop
out
aas
movb
jp
ja
cmp
dec
je
mov
mov
mov
jo
push
fldenv
sbb
dec
loope
jb
xor
push
ljmp
repnz
mov
or
add
sbb
int
inc
out
testb
insl
sti
stos
hlt
dec
mov
mov
pop
movsl
divl
jmp
fnsave
rcrl
mov
push
adc
mov
repnz
inc
push
imul
xchg
and
pop
dec
mov
mov
cmp
aaa
ljmp
pushf
rcrb
mov
inc
outsl
sarb
dec
or
pop
adc
popa
dec
sub
ljmp
shrl
mov
shll
mov
imul
xchg
xchg
xor
fmuls
push
dec
data16
inc
scas
cli
sarl
jecxz
jae
pop
scas
sbb
hlt
push
iret
call
sbb
sub
es
pop
dec
xchg
xchg
ljmp
mov
and
xchg
pop
fstpl
mov
gs
sub
and
je
pop
mov
mov
je
xchg
sbb
cmpsl
js
cltd
into
cltd
inc
fwait
or
sbb
sbb
inc
imul
bound
fdivrl
pop
lods
sub
sub
and
iret
lret
mov
xor
fcos
pop
mov
sub
fstpt
sub
jg
mull
xlat
out
inc
inc
test
mov
enter
leave
popa
mov
jle
fnsave
cmc
daa
stos
arpl
jg
xchg
mov
repz
xchg
xor
in
push
rolb
cmpb
lret
data16
aam
jle
jecxz
addr16
mov
and
mov
enter
out
arpl
imul
or
jg
mov
mov
fstl
or
jnp
lock
aaa
decl
ret
icebp
mov
sub
cmc
adc
inc
mov
mov
push
jle
out
in
sub
js
movsl
push
leave
adc
pop
insb
call
test
jmp
sbb
loopne
sub
add
pop
sar
mov
sbb
xchg
ljmp
xlat
pop
in
imul
cmp
pop
or
jmp
and
es
mov
roll
pushf
shlb
cmp
decb
inc
fsubl
sub
jbe
push
mov
repnz
sti
mov
jecxz
ficoms
movsb
adc
push
dec
fwait
jbe
dec
xchg
testb
cmp
xor
and
sub
xchg
dec
xor
dec
jno
sahf
stos
adcb
fstpt
aaa
inc
into
out
jo
sub
xchg
jmp
sbb
test
xchg
movsb
and
int3
dec
jbe
add
or
and
mov
pop
popa
sub
adc
aad
xchg
mov
add
arpl
jecxz
movsl
sub
sbb
dec
mov
in
data16
pop
adc
cwtl
dec
sbb
scas
lds
adc
xlat
adc
xchg
jbe
sbb
xchg
es
mov
inc
add
in
sbb
cltd
repnz
add
aad
clc
mov
in
xor
sbb
aad
dec
add
sub
dec
outsl
int
pop
and
xor
ljmp
and
mov
cmp
es
cmpb
cmpsb
xchg
out
aad
mov
outsl
or
mov
lock
sub
and
fmul
sbb
lea
ja
pop
xor
and
or
adc
push
xor
xchg
mov
fisubl
dec
cwtl
bound
cmp
mov
mov
sbb
xlat
xor
xchg
adc
test
adc
inc
mov
mov
inc
cmp
add
test
shrl
iret
lret
outsb
ficoms
ficoms
sbb
mov
xchg
pushf
xchg
test
mov
and
jp
push
xchg
cmp
hlt
or
xor
xchg
mov
adc
pop
lods
shrb
jmp
add
mov
pop
pop
fldl
clc
pop
add
xor
dec
sbb
repz
test
add
lret
fnstsw
clc
or
jmp
cmc
movsl
pop
lds
pop
lock
mov
aam
sub
sub
adc
movsl
stos
xchg
inc
pop
mov
jg
or
ss
add
mov
sbb
xchg
lds
out
sub
mov
psllq
sti
clc
xchg
popa
jne
inc
push
fiadds
inc
inc
push
xlat
dec
popf
cmp
rep
dec
inc
dec
sar
push
repz
sbb
in
add
stos
cmpsb
push
enter
flds
inc
insl
fmul
cmp
stos
imul
mov
lcall
xor
jl
mov
repnz
dec
cmp
mov
inc
mov
sub
and
push
loope
xchg
ss
sub
ret
lods
mov
fwait
icebp
mov
sahf
in
or
jne
mov
sbb
loopne
pop
fisttpl
repz
jbe
mov
mov
mov
mov
pop
bound
mov
dec
decb
mov
mov
loope
shlb
pop
cwtl
shll
popa
lahf
jo
pop
cld
aas
mov
xchg
pop
adcb
cld
inc
sub
push
mov
outsl
aam
fldl
cmpl
in
leave
jb
arpl
sub
fmuls
loope
ficoml
xor
and
in
mov
inc
and
push
inc
dec
loop
jo
outsl
add
fucom
test
adc
cmp
xchg
lret
inc
dec
mov
outsl
in
bnd
loope
dec
ja
pop
mov
int
dec
pop
jae
je
mov
mov
push
sbb
addr16
insb
leave
jle
sbb
jo
jecxz
mov
pop
iretw
testl
ds
jecxz
dec
int
ret
ficoms
pushf
mov
mov
or
dec
jno
xchg
pusha
xchg
sub
test
xor
in
enter
cmp
aas
add
or
jae
sbb
hlt
sahf
pop
shl
test
fwait
push
jnp
cmp
pop
xchg
xchg
testl
gs
cmpsb
mov
orb
in
sbb
movsl
unpcklps
jmp
fisubl
or
shrl
aad
jmp
pop
mov
and
popa
jae
jae
push
cli
cmp
nop
xor
mov
out
mov
jl
pop
jo
xor
sub
sti
sbb
mov
mov
add
sub
mov
push
lret
jns
push
test
inc
sti
ss
push
mov
loope
xchg
addb
repnz
cmpb
jmp
cmp
test
in
in
sbbb
inc
mov
mov
cwtl
dec
sbb
popf
outsl
and
cmp
mov
push
stos
jl
popa
pop
out
popa
add
addr16
divl
mov
aad
loopne
repz
adc
xor
std
stos
mov
add
inc
data16
dec
jae
ds
fwait
push
sub
daa
addl
push
adc
scas
or
dec
daa
sbb
add
sub
xchg
sbb
push
adc
lock
xorl
into
out
jge
rcrb
mov
mov
fwait
adc
xchg
ja
inc
mov
and
fcoms
xor
fwait
test
icebp
sub
adc
into
lea
sub
outsb
loope
leave
dec
adc
mov
loopne
jl
pop
dec
push
loope
lods
pusha
lods
outsl
cli
cld
dec
enter
and
jmp
xor
ficoml
fucomip
add
ficomps
pop
xchg
dec
or
mov
pop
cmc
xor
or
fs
mov
cltd
rcll
popf
mov
sbb
sbb
pop
dec
mov
and
mov
cli
xchg
xchg
fwait
sbb
xor
sub
push
push
mov
push
inc
or
mov
es
sub
inc
lret
fnstsw
cmpsl
out
or
stos
bound
inc
cli
mov
cmc
mov
cmp
aam
shlb
inc
aad
clc
lahf
xchg
adc
sub
pusha
jge
clc
pop
mov
sti
mov
outsl
mov
fdivrl
pop
imul
in
enter
stos
scas
pop
dec
and
fcoms
xchg
mov
mov
fistps
or
sbb
out
cmp
adc
loope
add
or
lahf
mov
outsb
cmp
cli
pop
mov
or
mov
iret
mov
pop
xchg
imul
jecxz
lahf
sbb
jae
fisttpl
pushf
insl
push
dec
cs
jo
cmpsb
xchg
into
lahf
into
cs
aad
sbb
in
adc
in
xor
adc
rcll
insb
popf
jl
xchg
popf
pop
add
idivl
idiv
add
pop
push
cmc
pop
out
adc
fbstp
mov
lahf
add
pushf
push
sbb
jge
jns
push
popf
outsl
sbb
cli
out
mov
adc
rorb
add
int3
and
mov
adc
fldt
cs
sbb
pop
ret
fsubl
or
ret
mov
shl
jns
fisubrs
or
adc
adc
hlt
cmp
mov
push
jno
into
xchg
xor
sahf
adc
dec
sub
inc
pop
jno
sub
mov
mov
lahf
mov
pop
enter
sbb
jb
cmpsb
sub
pusha
or
pop
inc
push
or
out
xchg
mov
inc
mov
test
aaa
outsb
adc
adc
data16
pop
nop
in
lea
ret
push
cld
mull
cmpsl
pop
and
pop
add
test
out
xor
xor
inc
add
cs
fnstenv
add
xor
dec
xor
aaa
xchg
jmp
push
mov
ret
mov
sub
mov
lahf
test
repnz
call
adc
test
jo
mov
popa
gs
adc
cmp
imul
pop
pushf
cmp
inc
pop
leave
xchg
clc
aam
jmp
stc
ja
add
jne
addr16
cmc
or
mov
movsb
shll
cmp
inc
mov
sub
xchg
popa
test
jae
mov
xor
xor
sbb
mov
pop
sbb
mov
inc
icebp
inc
divb
cmp
and
mov
std
test
and
pop
pop
mov
test
and
add
adc
out
adc
mov
jbe
idivl
data16
mov
sub
mov
shlb
cmpsb
fwait
adc
in
jnp
ret
test
cmpsb
jne
mov
ljmp
mov
lret
pcmpgtw
inc
xchg
sub
dec
pop
jo
scas
cmp
aaa
lret
jl
daa
mov
imul
cmp
lahf
lods
mov
pop
jbe
idiv
inc
test
sbb
mov
mov
jnp
dec
fadds
notb
push
pusha
stos
dec
sti
imul
popf
mov
es
sub
jmp
sti
sbb
mov
iret
or
mov
and
nop
arpl
out
test
or
xchg
fldenv
ljmp
out
sub
les
mov
mov
lret
imul
sub
xchg
out
sbb
push
xor
mov
out
pop
iret
adc
subb
jo
les
and
or
in
mov
push
xchg
lcall
mov
iret
dec
add
je
in
leave
sbb
add
mov
mov
lcall
mov
mov
fidivl
ja
add
dec
pop
jp
xor
sarl
cmp
adc
mov
xchg
pop
enter
cld
add
push
add
mov
cs
xor
insb
or
jo
movsb
clc
inc
dec
push
cmp
xlat
lods
repnz
mov
adc
sub
xor
jl
cli
xor
cwtl
sub
lahf
sbb
xchg
adc
xlat
into
mov
xchg
stc
mov
cmp
fimull
pushf
cmc
dec
inc
cwtl
mov
sbb
pop
cltd
cs
pop
call
popa
lcall
and
jne
mov
pushf
ss
daa
lahf
mov
or
dec
inc
inc
add
mov
hlt
test
int
ret
add
addr16
fdivrs
or
outsl
adcb
mov
enter
mov
push
add
dec
inc
push
push
rclb
jo
xchg
adc
cli
jg
push
cmp
in
pop
dec
aam
std
int
sub
subl
pop
push
jge
cld
push
imul
pop
ja
bound
sub
ret
ficoml
mov
std
test
arpl
inc
mov
jbe
cmp
cmp
fldenv
outsb
jmp
das
je
mov
push
es
ds
adc
mov
inc
jg
andl
imul
clc
inc
cltd
aaa
ret
add
insl
divb
mov
jmp
push
mov
push
inc
xchg
hlt
or
mov
xor
xor
push
or
sub
mov
xor
mov
pop
lea
and
lock
sti
xchg
inc
dec
xchg
movsl
xor
xor
daa
dec
adc
test
fcoms
dec
dec
pop
aam
insl
jmp
in
mov
lea
aas
cltd
xor
pop
pop
repz
add
pop
int
loopne
ret
daa
addl
jmp
mov
sbbl
popf
ds
add
out
bound
push
divb
mov
pop
bound
pop
jbe
xor
push
das
push
add
sahf
push
repz
lods
filds
dec
mov
inc
cmp
mov
sbb
pop
shlb
push
out
jp
fisttpll
fstl
pop
insb
sub
inc
add
sub
imul
jno
adc
mov
jle
sbb
mov
push
lods
ret
inc
mov
in
mov
xor
xor
or
lods
push
xor
push
xor
mov
or
xchg
movsb
je
sub
xchg
testl
mov
cmp
out
mov
nop
aaa
mov
mov
add
sbb
jp
insb
into
dec
pop
mov
int
popf
icebp
pop
aam
iret
lock
jbe
fildll
and
push
sbb
sar
xorl
je
xchg
lea
mov
cwtl
dec
cmp
or
jb
std
cltd
xor
adc
adc
scas
mov
stos
inc
cld
fisubrl
imul
outsb
fwait
xorb
cmp
fucom
cmp
cmp
shl
and
pop
cwtl
movsb
push
gs
stos
aam
and
test
fiadds
push
loop
inc
movsl
ficoms
mov
xor
sbb
lcall
mov
xchg
pop
loope
loope
pop
neg
imul
push
jae
or
mov
out
loope
rclb
clc
or
cmp
xor
sarl
ret
adc
mov
out
lods
inc
fistps
movsl
mov
orb
add
mov
add
and
imul
adc
jp
cmp
sbb
test
sbb
sub
dec
jns
aas
js
mov
in
jb
cltd
dec
mov
xchg
test
rol
outsb
cmp
jae
js
mov
lea
jbe
push
movsb
aad
add
mov
mov
mov
insl
sub
aas
fisubl
test
movsb
mov
adc
cmp
das
push
dec
mov
inc
sbb
mov
aam
dec
fcom
arpl
ja
sub
sub
mov
mov
in
adc
mov
in
cmp
arpl
push
lods
insb
data16
jg
push
adc
lds
jo
add
rcrb
lret
sub
sahf
rcl
loope
cmpsb
adcl
pop
call
mov
int3
fs
pop
test
fidivs
dec
fstl
stos
adc
addr16
sbb
gs
int
xor
sub
data16
and
fprem
mov
sub
cmp
xor
lcall
aaa
xlat
mov
push
sbb
sub
cmp
sub
scas
outsl
imul
pusha
dec
sbb
xchg
pop
cmp
addl
xorb
mov
push
mov
cmpsl
negl
mov
adc
and
ss
scas
xlat
test
movsl
insl
cltd
inc
or
sbb
bound
gs
mov
mov
jle
push
cltd
add
jecxz
fmull
add
mov
xorb
mov
icebp
lods
je
inc
cmp
lret
lahf
call
in
sahf
hlt
andb
pop
fwait
arpl
xchg
mov
jae
fcmovb
pop
add
addr16
mov
les
stos
int
repnz
dec
dec
in
scas
mov
sbb
mov
jge
fsubr
aaa
pop
xor
ljmp
iret
pop
jns
inc
mov
mov
mov
movb
cmc
popa
addr16
lahf
aas
or
jne
sub
dec
fwait
mov
and
mov
lods
repz
xor
lods
inc
imul
inc
scas
out
mov
add
in
jno
popf
lods
shll
xchg
inc
sbb
sbb
rcl
mov
adc
xor
sbb
inc
pusha
and
ljmp
push
xor
aad
std
cmp
jmp
mov
sub
pop
iret
add
sbb
xlat
add
xchg
xchg
push
and
in
or
or
mov
push
jno
dec
mov
jnp
mov
cmp
daa
lret
sub
push
popf
out
dec
cmp
iret
and
mov
lahf
cwtl
or
mov
xchg
sub
xchg
jne
cmp
inc
jg
repz
std
rcr
arpl
pop
sub
stc
mov
daa
dec
sub
call
lds
cmpsl
and
call
addr16
cs
pop
sbb
push
aas
cmpsb
adc
jl
adc
popa
push
mov
rcrl
xor
cmp
adcb
cld
loope
sbb
cli
stos
sub
les
jne
mov
add
push
or
push
push
les
push
ss
sbb
push
cwtl
jae
mov
sbb
push
arpl
sbb
inc
adc
cmp
adc
leave
dec
fdiv
xchg
sbb
mov
mov
adc
xor
or
in
dec
push
test
test
pushf
sbb
inc
cmp
pop
push
outsl
cmp
ss
pop
loopne
sub
fsubl
cmp
mov
mov
jae
outsb
scas
xor
je
lods
into
cmc
cmp
aam
jecxz
add
into
je
outsb
shrb
xor
fs
ljmp
das
xor
xchg
ret
jae
mov
mov
inc
cwtl
inc
in
dec
mov
push
sub
ds
add
pop
dec
sbb
mov
xchg
inc
test
lds
dec
xchg
mov
call
repnz
inc
data16
fs
mov
xor
ds
cli
dec
icebp
imul
mov
xor
mov
sahf
in
jbe
add
outsl
int
sub
sbb
lret
test
mov
cmp
mov
call
test
icebp
add
adc
cmp
fs
out
movsl
mov
inc
dec
mov
ficoms
ljmp
pop
iret
fs
mov
adc
cs
int
mov
or
xor
pop
lods
iret
fnsave
push
sub
insb
das
pop
xchg
cmpsl
push
xchg
and
mov
push
jb
popa
je
call
jg
add
out
xchg
or
rcr
divb
popa
fwait
movsl
ss
dec
fbstp
mov
lahf
jb
cmpsb
jb
out
mov
pop
daa
lahf
ret
into
sub
fcomps
inc
leave
dec
sahf
lock
dec
jno
mov
roll
xchg
mov
inc
xor
pop
mov
xor
jg
or
mov
sub
jb
aam
pop
sub
mov
sarl
sbb
out
pop
cmpsb
pusha
jbe,pn
sub
jmp
shll
push
movsl
mov
mov
out
xor
dec
repz
adc
inc
fisttpl
movl
push
xchg
cmp
adc
jnp
pop
arpl
js
xor
movaps
cmpsl
sub
addl
pop
insb
pop
pop
aad
jae
mov
and
pop
cli
pop
stc
popf
xor
dec
int
xchg
les
into
mov
mov
aaa
fadds
clc
cmp
in
mov
jp
loope
in
and
sti
test
insb
sub
fisubrs
sbb
xor
jecxz
jecxz
fidivl
xchg
mov
loopne
xorb
pop
pop
push
mov
outsb
push
in
adc
ljmp
push
sub
das
push
jno
mov
and
xlat
mov
fiaddl
sub
jl
rcrl
adc
out
mov
mov
sti
inc
loope
jne
push
hlt
rcrl
roll
std
xchg
mov
xchg
and
cmp
cmp
inc
or
mov
cmp
test
or
mov
sub
out
sbb
popa
inc
subb
lods
cmpsb
data16
inc
mov
bound
jo
jge
cmp
adcl
cwtl
iret
out
int3
push
mov
fwait
mov
dec
aam
in
mov
dec
inc
cmc
jb
out
fildll
lods
lcall
and
imul
sub
test
sub
mov
repz
aas
aam
sbb
sbb
das
shll
fsubrs
adc
jno
mov
sbb
pop
mov
mov
push
dec
pop
push
and
les
mov
xor
xchg
clc
inc
in
cmp
sbb
ljmp
sbb
dec
lahf
mov
jnp
push
cmpsb
out
lret
out
repz
shrl
movsb
cmp
in
sub
dec
mov
mov
jno
sub
xchg
subl
cmp
mov
and
out
inc
loop
popf
bound
jno
or
push
aas
scas
daa
test
je,pn
lret
and
adc
icebp
mov
push
mov
pop
sbb
mov
mov
bound
mov
add
out
hlt
dec
sbb
xchg
lret
add
lret
or
sbb
ret
cmpsl
rcr
push
cmc
add
je
inc
sbb
add
mov
xchg
aaa
loopne
dec
movsl
outsl
xor
movsb
fwait
pop
push
cwtl
dec
jg
xchg
stos
das
jnp
insl
adc
into
in
jg
inc
xchg
push
jb
js
negl
sbb
loop
sub
xor
inc
dec
aad
adc
add
cwtl
jge
mov
test
cmp
mov
negl
xchg
xor
andl
out
add
mov
jp
cld
xor
mov
xchg
mov
les
shlb
std
jecxz
mov
xor
fsts
and
imul
cmp
cmp
add
pop
fld
jp
xor
mov
or
das
sub
push
mov
cmp
sbb
add
jl
pop
push
stos
mov
sbb
lock
aas
ficompl
inc
lahf
sbb
decb
sbb
pop
xor
std
mov
dec
iret
imul
out
jmp
ds
sub
shl
mov
inc
cmp
loope
cwtl
xor
enter
or
ds
out
dec
add
pop
pop
cmp
xchg
stc
sbb
stos
mov
add
fldenv
jge
adc
push
inc
mov
mov
xlat
sti
leave
jmp
mov
imulb
sar
jne
mov
sub
mov
lret
add
outsb
cwtl
adc
lahf
aad
dec
xchg
xchg
frstor
dec
adc
add
sub
push
mov
and
in
stc
inc
inc
aaa
mov
lcall
mov
enter
mov
test
pop
mov
xor
movsb
hlt
aas
lahf
pop
or
xchg
push
fldcw
or
mov
sbb
jmp
popf
jns
mov
cwtl
clc
in
insl
and
scas
push
jb
cwtl
ds
xchg
jbe
cs
cmp
add
fsubl
sub
pop
add
mov
test
sti
ja
shr
js
adc
or
not
adc
arpl
jb
lahf
test
test
aaa
ds
push
inc
in
popf
jb
mov
addr16
and
into
push
and
and
cmp
in
mov
xor
xchg
add
adc
adc
sub
ret
das
jae
or
adc
pop
jno
cmp
mov
dec
leave
ds
loope
jp
addr16
or
jmp
push
or
fcmovnu
cmc
fists
lds
push
add
add
xor
add
test
inc
push
xor
addr16
test
fs
lcall
and
test
xor
test
pop
rolb
sub
rolb
dec
mov
arpl
test
pop
push
jnp
stos
test
xor
and
jp
pop
sbb
cmpsb
cwtl
lea
call
nop
mov
mov
jge
mov
mov
out
fsubrp
addr16
sbb
mov
jne
inc
call
mov
mov
popa
mov
push
push
dec
in
icebp
jge
nop
push
lret
popf
adc
sbb
mov
stos
cs
iret
mov
fdivr
pop
and
dec
mov
nop
fnstcw
mov
cmp
mov
sahf
inc
rol
subb
and
lock
in
orb
or
sbb
dec
push
cltd
fldl2e
jle
mov
mov
mov
mov
push
shll
inc
adc
jo
push
jno
mov
jge
mov
push
aad
jbe
mov
flds
xchg
cmpsl
push
fwait
push
fs
or
xlat
pop
icebp
rcrb
in
sub
fcomp
push
xor
loop
lods
out
jo
push
lods
out
ss
insb
test
jo
addr16
lcall
jnp
sbb
sbb
inc
fimull
dec
xlat
sbb
mov
cmp
pusha
aad
out
sub
fstl
pop
icebp
out
push
int
mov
xor
decl
mov
mov
and
push
mov
test
pop
xchg
dec
push
adcb
inc
insb
mov
adc
icebp
add
imul
sub
and
sbb
pop
jl
jno
cmp
cmpsl
movsl
ja
adc
or
pop
jae,pn
mov
adc
sbb
sub
loopne
dec
and
sarb
mov
xchg
add
fwait
lcall
cwtl
out
rorb
or
dec
in
daa
and
dec
add
enter
je
mov
jnp
ret
imul
das
xor
fadd
mov
jae
sbb
test
idivb
jp
loope
xchg
cld
mov
jecxz
sub
stos
push
add
enter
dec
jo
scas
fstpl
stc
jno
aad
fwait
lcall
dec
pop
xchg
and
push
popa
fstps
out
push
pusha
mov
jge
stc
fiadds
push
xor
adc
jae
add
loope
inc
inc
cs
repz
push
popf
rclb
repz
xchg
mov
lahf
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
jecxz
adc
inc
pop
jl
testb
mulb
pushf
push
leave
mov
or
jne
xchg
jg
gs
adc
sub
mov
dec
js
dec
out
jge
inc
add
in
in
insb
aad
inc
add
dec
xor
repz
cmp
and
loopne
cmp
fs
sbb
add
enter
mov
lds
into
aad
mov
and
push
push
cwtl
sub
mov
adc
repz
jmp
jns
cmpsb
es
mov
or
push
int
pop
push
sub
repnz
push
add
mov
adc
negl
mov
xchg
or
add
sbb
test
insl
cmpsb
icebp
imul
scas
sbb
and
lahf
push
add
mov
xchg
scas
imul
mov
dec
and
mov
mov
or
mov
sbb
outsl
add
dec
push
lea
ds
push
out
std
xchg
lcall
push
and
mov
pop
mov
stc
jne
cmp
cmp
mov
or
or
fildll
jno
mov
push
sbb
cmp
int3
sbb
mov
in
mov
scas
rcll
and
lods
ljmp
or
mov
lahf
mov
jl
cli
rolb
inc
in
js
int3
dec
jl
adc
mov
lea
data16
inc
dec
nop
aas
ss
sbb
fsubl
fdivl
jo
mov
xchg
dec
and
jl
test
aam
fidivrl
xor
and
cmpsl
push
sbb
int
sbb
sub
mov
sub
push
mov
and
iret
movsb
sbb
cmp
insl
xor
and
xchg
xor
outsb
icebp
push
aad
dec
popa
sub
jmp
pop
pop
push
dec
sbb
aaa
cld
jle
repnz
sbb
mov
shlb
and
xor
mov
mov
repz
fbstp
mov
loop
adc
loopne
out
mov
mov
pop
inc
les
jns
jno
outsl
xchg
lret
or
cld
ficoms
sbb
ja
je
adc
rorb
mov
test
xor
std
xchg
test
xchg
movl
stos
lcall
cmp
or
sub
shl
or
test
mov
call
in
fisubs
popa
sbb
push
push
shll
mov
xchg
outsl
pop
cltd
ret
mov
push
adc
push
inc
push
sbb
or
stc
adc
mov
scas
mov
call
or
and
lcall
jmp
out
xorl
add
push
dec
pop
xor
insb
adc
cmpb
xchg
ficomps
aaa
lods
fiaddl
jmp
cmp
orb
push
es
mov
not
std
adc
dec
cmpl
movsl
add
dec
adc
fmul
dec
rorb
lahf
jae
sub
sbb
cmpsl
test
dec
add
jae
fistpl
add
xchg
and
rorb
lcall
xchg
xorl
xor
ja
rcl
aad
lret
inc
push
icebp
xlat
sbb
and
mov
rcl
push
in
add
xchg
enter
mov
into
hlt
and
out
or
xchg
and
outsl
insl
jg
adc
sub
ret
xor
xor
jns
mull
or
pop
xchg
out
sub
out
jns
ds
leave
pop
insb
adc
mov
mov
mov
cmp
push
shlb
inc
mov
xor
ja
bound
aas
es
pop
adc
andb
pop
ja
fs
pop
or
adc
mov
mov
mov
mov
pushf
jbe
mov
cmp
and
pop
adc
inc
xchg
cmp
cwtl
shlb
into
ret
push
ss
xchg
mov
sbb
js
fisttpll
jb
jecxz
push
mov
sub
data16
data16
mov
mov
adc
ret
inc
test
or
xor
pusha
inc
pop
xchg
xor
cmp
inc
and
pop
jl
imul
and
adc
fdivr
inc
aad
cmp
inc
repnz
je
sbb
stc
fadd
popa
stc
cmpsb
mov
ret
or
sar
add
call
filds
jmp
mov
mov
jns
mov
cmpb
and
and
jge
and
mov
enter
rorl
fists
adc
or
ficomps
sbb
jmp
mov
pop
dec
adc
push
add
mov
pop
xchg
mov
stos
xor
pop
xchg
and
pop
adc
mov
mov
lcall
cmpsl
loopne
fidivs
adc
bnd
cmpsb
and
enter
xor
pop
pop
cli
pop
xchg
sub
hlt
inc
in
fwait
cmpl
adc
push
pop
mov
jmp
aaa
addl
imul
pop
adc
mov
cmp
sub
jae
xor
and
arpl
xor
mov
dec
dec
pop
inc
insb
push
addr16
jbe
sarb
cwtl
and
ret
adc
adc
mov
leave
push
or
adc
lock
sbb
xlat
adcb
addr16
adc
andb
dec
jno
fbld
ljmp
les
lret
je
sti
mov
frstor
sarb
push
jge
cmpsl
data16
fwait
xor
xchg
fldl
and
nop
shll
cmp
push
pop
inc
push
sub
mov
andb
stc
dec
inc
and
push
xlat
and
cmp
mov
jbe
xchg
inc
xchg
call
imul
sub
imul
add
loopne
xchg
adcl
xchg
sbb
in
les
insb
test
lods
lret
push
in
das
sbb
add
shrl
mov
add
jo
xchg
lret
fldcw
inc
dec
dec
fstpl
push
mov
cwtl
push
loope
lar
bound
in
pop
into
or
mov
js
add
xchg
dec
inc
push
iret
dec
aas
imul
add
mov
or
into
or
xor
adcl
ret
sub
scas
jae
dec
xchg
pop
cmpsb
cltd
xor
sahf
ljmp
cmpsb
or
mov
test
push
into
or
adc
sbb
shrl
test
outsb
mov
leave
ret
inc
insb
pop
lret
orl
movsb
fdivrs
jecxz
sti
cmp
loop
in
push
jge
bnd
cmp
and
clc
pop
mov
sti
dec
push
pop
aas
jne
dec
in
and
int
aad
xor
or
mov
lahf
xchg
fstps
sti
fimull
fs
add
mov
hlt
fbld
in
jecxz
inc
cmpsb
mov
mov
mov
shlb
ret
xor
xchg
and
adc
ret
jbe
pop
add
pop
or
pushf
aam
dec
leave
loop
popa
pop
ret
ret
sbb
pop
add
inc
push
mov
shll
and
sahf
movsl
leave
mov
addr16
mov
clc
xor
mov
jge
cmpsl
xor
nop
test
gs
or
lcall
pop
mov
or
lock
dec
loope
popa
push
in
mov
jne
mov
mov
add
ret
hlt
adc
sub
pop
pop
rorl
mov
in
notb
mov
insl
stos
icebp
cmp
xor
or
add
jnp
cli
pushf
and
xchg
ljmp
ja
pop
push
sti
xor
sub
outsb
or
push
in
mov
mov
sar
push
loop
cmp
imul
ss
ret
add
lods
and
xchg
lock
adc
fcoms
nop
jo
jae
push
mov
std
and
test
add
push
or
sbb
xchg
rorl
in
das
sarb
popf
insl
icebp
imul
orl
rcl
in
lret
rcl
or
sbb
push
ret
bound
pop
mov
adc
test
cmp
cmp
or
popf
mov
cmp
fbstp
bound
dec
xchg
repnz
daa
xor
jo
adc
subb
sbb
aaa
push
or
xchg
inc
sti
outsb
movsl
jg
aam
push
push
adc
mov
xchg
adc
mov
add
or
mov
mov
xor
pop
mov
sbb
pop
dec
js
ret
push
test
pop
pop
mov
inc
lods
pop
js
push
aad
fsin
icebp
adc
mov
aad
mov
rcr
es
or
sti
add
out
xor
xchg
ja
sub
sub
mov
adc
fs
fiadds
sbb
pop
dec
ret
out
mov
or
jns
add
add
repnz
out
sub
sub
push
cltd
xor
and
sub
dec
repnz
xor
cmp
adc
mov
arpl
pop
ret
sub
dec
lds
iret
in
sub
dec
and
jge
adc
mov
pop
ret
pop
cmp
cld
jnp
scas
mov
and
xlat
hlt
fimull
sub
dec
add
mov
push
mov
cmp
push
lahf
cmp
sbb
insb
mov
mov
mov
jmp
inc
stos
outsb
inc
scas
cli
sarb
jno
aad
or
lods
scas
jmp
arpl
mov
popf
inc
sahf
jl
pop
jmp
gs
jle
cmp
rep
stc
adc
dec
gs
cmp
xchg
fwait
cltd
dec
pop
and
pop
pushf
stc
jmp
adc
and
add
add
mov
cs
xchg
push
scas
popa
push
pop
loopne
repz
aam
dec
rcrb
test
jmp
xlat
cmp
inc
jnp
mov
inc
bound
aad
popf
dec
push
movsl
sbbb
xor
in
and
insb
xor
daa
mov
pop
pop
pop
test
icebp
adc
cmp
cmp
testl
pop
cltd
jmp
lock
sub
lock
scas
mov
movsb
mov
lds
fcmovne
gs
lods
cmp
lods
test
adc
test
cmp
fildll
mov
mov
adc
fsubs
xchg
adcl
xchg
imul
cmp
xchg
jle
xor
out
pop
jmp
inc
mov
fwait
mov
hlt
xchg
stos
es
dec
xchg
cmp
push
xchg
nop
and
jno
loop
aam
inc
push
filds
dec
mov
xchg
jg
mov
xor
ja
fsubrs
popf
dec
jmp
or
fdivrl
adc
cmpsl
or
mov
test
add
mov
sub
sub
imul
adc
mov
mov
inc
aaa
movups
icebp
stos
sbbb
mov
dec
xchg
mov
xorl
sti
pop
inc
push
pop
fdivrl
push
sub
imul
fmull
into
fs
push
inc
add
adc
imulb
pop
jl
jnp
and
or
cwtl
fwait
mull
imul
sbb
inc
dec
into
shrb
add
sbb
xlat
inc
out
cmpsl
jo
cltd
xchg
mov
push
stc
jmp
xlat
adc
fsubrl
xlat
cmpsl
cmp
pop
test
jg
test
pop
sub
and
mov
adc
and
add
sub
fldl
xchg
jns
and
nopl
mov
xchg
mov
je
scas
xor
dec
jae
or
frstor
push
mov
jecxz
jb
and
inc
scas
mov
mov
sbb
inc
imul
ficompl
sbb
shl
lods
fimuls
dec
and
lock
bndldx
popa
das
mov
pop
mov
add
mov
fsubs
cmp
movsl
test
daa
jp
lock
es
fbld
movsb
inc
pop
inc
adc
dec
imul
inc
pop
adc
adc
or
outsl
mov
nop
iret
sub
cmp
repz
mov
or
fst
sbbl
outsb
sbb
adc
fcomps
jl
call
ret
daa
and
push
push
cmp
pushf
int3
sub
jae
loop
adc
lret
clc
test
cmpsb
push
mov
jbe
cmpsb
out
sub
jnp
icebp
push
mov
popa
aas
and
mov
add
cmp
mov
enter
outsl
add
loope
push
push
fistl
outsl
push
cmp
push
mov
loope
movsb
mov
jecxz
fistl
in
sub
pop
mov
pop
sbb
addr16
enter
ret
push
aaa
pusha
pop
add
adc
test
popa
add
jp
pusha
adc
lahf
mov
popa
mov
cs
or
enter
fadd
add
loop
dec
popf
int3
or
iret
pop
sti
test
and
or
je
idivl
adc
mov
rcrl
or
mov
fcoml
scas
popf
negl
arpl
xor
ljmp
xchg
pop
inc
das
dec
fsubl
imul
addr16
out
xor
jle
push
cs
jecxz
sub
xor
repnz
and
in
bts
sbb
testb
movsb
adc
xchg
push
loop
pop
mov
add
repnz
shlb
and
pop
cmpsl
test
ljmp
sub
pop
in
push
repz
push
insl
cmpsb
decb
scas
adc
jb
mov
mov
cmpl
push
insl
adc
jbe
sarb
addr16
add
subb
int
lret
mov
out
cmp
hlt
fisubl
lcall
int3
outsl
pop
xchg
pop
dec
out
fimuls
hlt
fistpl
movsbl
xor
stos
xor
mov
adc
push
fmul
mov
inc
xor
jo
mov
sbb
cwtl
jae
xor
mov
xor
mov
mov
mov
lret
js
mov
xchg
data16
call
xor
shrb
stc
ret
sbb
outsb
mov
jle
mov
outsb
sbb
mov
fistl
mov
push
push
iret
fisubrl
mov
test
clc
jge
pop
add
ja
mov
or
adc
jl
insb
popa
inc
js
popf
cmp
rcrb
fmuls
push
rolb
mov
insb
dec
sahf
shrb
xor
mov
es
out
mov
je
jp
mov
sbb
cmpsl
inc
mov
lods
loop
xchg
and
xlat
cmpsl
jmp
bound
imul
fstpt
fcmovnbe
jmp
mov
jmp
testb
scas
mov
or
aam
inc
call
rcrb
inc
cmpsl
push
sbb
inc
xchg
cld
dec
inc
and
push
enter
inc
je
xlat
lods
lea
fbld
xor
sbbl
loopne
mov
sbb
add
push
mov
ss
daa
jnp
push
dec
movsl
push
popf
inc
adc
ss
out
cmpsl
ss
cmp
sub
fisubrl
cld
mov
rorl
pop
lahf
es
mov
sbb
pop
loope
sbbl
jp
outsb
shrl
mov
lret
cmc
dec
and
fs
pop
loopne
popa
lock
orb
ljmp
cmp
enter
sub
les
incb
push
daa
movsl
and
mov
sub
sti
fisttpl
outsb
fdiv
inc
mov
fs
mov
and
xor
dec
mov
icebp
cmp
lcall
cmp
sbb
and
xor
aaa
xor
pushf
das
xor
xchg
mov
lock
ret
callw
push
mov
cmp
pop
and
rclb
in
cmc
cmp
test
dec
xor
cmovno
daa
fcmovne
fidivrl
dec
mov
outsl
push
push
dec
int
push
jecxz
data16
out
loopne
add
xorl
repz
nop
loop
stos
imul
dec
add
cmc
fisubl
push
dec
xchg
icebp
mov
or
pop
xchg
movsl
and
mov
sub
fisubs
dec
pushf
mov
cld
jne
fisubrl
mov
xlat
cmpsb
jb
in
or
test
add
stos
inc
mov
cmp
inc
jle
fsub
lcall
test
mov
cmpsb
mov
cwtl
xchg
arpl
pop
shll
fiadds
repz
mov
xchg
adc
push
imul
aam
mov
xor
push
jmp
mov
inc
jecxz
dec
adc
mov
jae
ret
dec
sub
popa
mov
xlat
mov
fildll
fwait
repnz
or
test
fldcw
dec
dec
arpl
push
xchg
nop
loop
xlat
mov
cmp
rolb
hlt
mov
stos
sub
sbb
into
fdivrs
aad
mov
mov
sbb
mov
inc
sub
sbb
jno
out
icebp
lret
lea
jno
push
repz
popf
divl
cmp
push
lods
sub
xorb
jns
mov
inc
stos
mov
inc
dec
ss
pop
add
jl
and
push
icebp
sub
in
jp
push
xchg
sub
mov
pop
repnz
dec
dec
ljmp
dec
adc
mov
xchg
xor
pop
mov
imul
pop
test
orl
adc
loope
lahf
push
dec
pop
mov
adc
mov
pop
cmp
scas
test
test
push
lods
mov
repnz
jo
in
mov
stos
stos
loope
push
xchg
stos
push
push
inc
push
lcall
and
pop
xchg
or
mov
stc
mov
pushf
into
pushf
sub
jae
flds
adc
mov
mov
push
push
mov
cmpsb
mov
cmp
or
in
cmpsl
adc
push
push
test
mov
sub
xchg
or
mov
int
daa
or
inc
pop
mov
arpl
js
lret
xor
enter
inc
lds
cmp
mov
leave
outsb
lea
ficompl
lahf
fcoml
jg
loop
xor
inc
push
push
mov
rcll
stc
scas
and
sbb
out
into
mov
inc
not
jo
push
aas
es
sbb
lcall
mov
jns
and
xor
push
sahf
aad
mov
sbb
pushf
mov
or
mov
push
jmp
or
ret
jge
mov
sub
mov
js
mov
xlat
fcomps
sbbb
subl
lods
xchg
xchg
cltd
scas
mov
xchg
pushf
dec
rcl
mov
test
inc
sbb
lods
cmpb
jo,pt
lret
inc
gs
sbb
test
xchg
sarb
xchg
mov
mov
iret
rol
or
inc
or
insl
fs
imul
jnp
jmp
cmp
orb
xor
sub
bound
inc
ja
daa
sahf
or
loop
pop
push
xchg
push
adcb
arpl
je
push
mov
dec
loope
push
xchg
add
xchg
movsl
es
sahf
cmc
lret
loopne
outsb
in
inc
and
addr16
add
arpl
dec
inc
cld
mov
in
es
es
movsl
loop
subl
ror
int3
pop
cld
jmp
xor
das
rcrb
sbb
rcrw
mov
stos
test
push
fdivl
out
xor
shl
push
iret
jp
or
testb
xor
aas
or
leave
divl
dec
insl
fcoms
ljmp
addr16
jne
sbb
pop
pop
loopne
or
add
gs
cmp
cmp
inc
test
xlat
cld
in
dec
mov
adc
push
mov
notb
mov
mov
retw
add
stos
and
je
lcall
out
sbb
mov
outsl
jbe
js
outsl
xchg
in
push
mov
shr
fs
adc
in
lea
push
test
and
pusha
inc
mov
data16
loopne
aas
push
jp
cmc
call
adc
push
es
xchg
lods
inc
cmpl
adc
scas
orl
sub
cmp
shl
push
rclb
decl
insl
adc
push
lcall
pop
cmc
dec
jae
mov
mov
adc
dec
cmp
flds
add
and
xchg
mov
rcl
inc
push
add
and
xchg
mov
sub
lock
repz
pushf
dec
mov
dec
cmpsb
mov
aam
insl
fimull
es
xchg
test
jmp
das
das
test
and
pop
jno
mov
cmpl
enter
push
sub
test
rclb
imul
pop
cltd
jo
popa
sbbb
int3
mov
sub
test
aaa
add
push
cmp
loop
add
jne,pt
pop
sub
inc
mov
adc
das
adc
mov
pop
repnz
mov
or
sub
add
lea
sti
lea
and
inc
sbb
ret
sub
pop
popf
test
adc
sbb
out
shll
add
hlt
sub
add
imul
xorb
lods
enter
dec
pop
test
mov
mov
leave
adcb
pop
mov
popf
xlat
jl
sarl
mov
sub
movsb
dec
aaa
push
mov
jecxz
or
sub
sbb
xchg
cld
mov
add
dec
divb
jne
bound
jnp
jmp
popa
cmp
shlb
sbb
and
sahf
insb
cmova
or
xchg
loop
inc
ljmp
dec
xor
lret
insl
adc
push
les
fimuls
pushf
out
mov
pusha
pop
nop
xor
je
das
pop
imul
xor
ret
in
dec
push
andb
outsl
outsb
push
test
aaa
and
nop
pop
jb
push
out
mov
mov
xorl
shll
loopne
mov
push
cmc
add
clc
and
pop
mov
push
or
inc
or
aaa
lret
pop
jecxz
pop
jns
testb
mov
repz
mov
jb
out
repz
pop
add
mov
lea
int
add
push
xchg
or
sahf
call
insb
rclb
or
push
jge
push
mov
faddl
sub
dec
and
cmp
addb
shll
or
pop
stc
imul
mov
fwait
xor
pop
out
iret
fimull
sbb
cmp
pop
xor
push
lock
stos
sti
cmpsl
inc
jge
test
cmp
je,pn
sbb
lret
or
push
insb
mov
addr16
xchg
mov
bound
test
shrb
bound
adc
dec
add
xor
push
addb
out
xchg
nop
mov
jge
aad
mov
ss
push
xor
cmp
fimull
push
sub
scas
scas
fstpt
pop
mov
je
movsl
inc
xchg
xchg
iret
cmp
xlat
push
push
std
rol
jb
pop
cltd
rcrl
xchg
fmuls
sbb
xor
into
push
mov
pop
sbb
mov
pop
and
push
into
fwait
jp
mov
insb
shll
jge
mov
cmpsb
jo
push
fsts
push
inc
mov
cmp
popa
mov
jmp
addb
movsb
ret
loop
or
inc
inc
dec
lret
int3
insb
arpl
mov
adc
sub
subl
mov
mov
pop
pop
add
mov
mov
pushf
pop
xor
adc
sbb
js
bound
dec
mov
xor
push
pop
mov
rcll
or
jbe
hlt
cmp
repnz
push
insb
push
push
sub
js
mov
test
loop
push
pop
ss
or
or
frstor
pop
ss
ret
jg
outsl
hlt
loop
pop
xchg
cmpsb
push
jp
sahf
ljmp
cmp
cmpsb
clc
sbb
test
and
xchg
add
add
scas
push
int3
sbb
xlat
mov
jle
inc
fisubrl
mov
pop
jl
leave
scas
test
shlb
and
inc
ljmp
and
jecxz
mov
mov
int
stc
out
dec
fiadds
fdiv
or
inc
xor
sarl
pop
hlt
adc
lods
mov
js
cmc
daa
cltd
out
repnz
lahf
aad
jp
out
dec
iret
stos
movsb
loop
mov
add
inc
jg
xlat
icebp
test
bound
add
adc
and
ja
scas
push
mov
push
clc
push
sub
inc
dec
sub
mov
mov
cld
test
xor
scas
ret
imul
pop
ret
pop
rclb
sub
cmp
fisubrs
push
imul
movsb
jp
push
and
sbb
push
push
add
mov
int3
mov
cmp
nop
jns
mov
jle
jge
je
jnp
das
jne
aaa
sbbl
test
sub
add
outsl
cs
movsb
lods
sub
xchg
cmp
cwtl
test
imul
int3
cmc
mov
js
popf
pop
mov
ja
push
aaa
pop
cmp
test
iret
ss
inc
mov
cld
mov
and
subl
imul
mov
inc
lcall
sbb
mov
lret
in
cmp
and
mov
fdivl
je
or
stos
adc
push
push
push
mov
mov
cmp
hlt
movl
inc
ljmp
push
popf
xor
shrl
pop
or
xchg
inc
idiv
test
dec
lcall
inc
xor
inc
and
mov
sbb
pcmpeqd
lcall
stos
cmp
mov
sbb
hlt
sub
call
and
test
test
daa
test
or
scas
aaa
or
mov
call
adc
insb
sbb
sbb
scas
inc
in
xchg
in
jo
inc
lahf
mov
or
add
shll
mov
add
sub
stos
sub
sbb
in
and
xchg
pop
movsl
jmp
or
pop
xchg
lcall
mov
stc
insb
test
adc
movsl
pop
or
negb
or
sub
inc
or
xchg
mov
sub
popa
in
and
andb
cmp
mov
and
js
pop
icebp
inc
sbb
sub
add
loope
pop
mov
nop
stos
lret
xchg
sub
jns
mov
bound
mov
push
add
pop
jecxz
add
adc
aam
loop
cmp
add
xor
ja
ret
fnsave
dec
or
cmp
fwait
stos
pop
dec
push
lret
jb
xchg
jb
dec
push
or
les
add
hlt
pop
and
in
and
sub
sub
in
rcr
andb
mov
xchg
sahf
out
adc
ljmp
cmp
push
lds
adc
loop
mov
push
dec
sub
and
outsb
jbe
inc
adc
stos
jae
bound
ss
push
bound
or
adc
jb
xor
mov
ljmp
mov
xor
mov
jge
push
dec
rcrl
xor
push
adc
jae
sub
or
mov
pop
jle
fstpt
sti
sbb
ljmp
inc
movsl
leave
adc
aad
sub
push
sbb
outsb
add
lods
pop
pop
push
cmp
lea
daa
ss
or
mov
mov
push
fdiv
test
fdivl
gs
sbb
cmp
push
sti
and
ja
in
ja
imul
inc
sbb
testb
fdivrl
cmp
mov
jmp
test
dec
xlat
data16
inc
outsb
mov
xchg
add
decb
fwait
add
and
xchg
adc
sub
and
mov
dec
shll
and
loope
sti
rol
inc
fwait
jne
je
rcrb
movsb
jge
sub
mov
repz
pop
rcl
jno
xchg
jge
xor
xchg
mov
push
int3
cmp
pop
push
popa
mov
cmpsl
or
cltd
popa
cmpsb
popf
sahf
mov
mov
lret
adc
jl
lock
sub
inc
xlat
cs
or
into
sahf
or
mov
cmp
fcoml
dec
lahf
ss
xor
shl
jnp
andl
push
in
inc
mov
dec
add
lahf
xor
addr16
xlat
movsl
das
xchg
int
mov
pop
in
inc
cltd
pop
dec
jno
jbe
add
jb
dec
je
sub
lahf
or
push
push
sbb
jle
cmp
mov
jle
into
xchg
into
das
and
loop
mov
nop
and
adc
adc
xchg
nop
mov
negl
fwait
popa
ret
xor
fidivs
and
lds
stos
pop
insl
mov
push
jg
push
xor
xor
lret
adc
lahf
mov
repnz
push
jno
rolb
push
ss
lods
sbb
adc
int
addr16
stos
push
inc
data16
and
xchg
push
rcr
lods
icebp
pop
aam
test
sahf
sbb
xor
arpl
icebp
sarl
imul
push
icebp
xor
sub
ds
inc
in
fs
xchg
in
rorl
mov
mov
ja
mov
ret
loop
sti
rcr
sahf
inc
out
fwait
cmpsl
daa
jge
data16
xor
call
mov
and
enter
or
out
sbb
xchg
sbb
stos
xor
dec
cwtl
clc
sub
push
xchg
mov
jns
jp
cmp
dec
jp
movsb
push
jp
testb
rclb
and
notb
aad
out
xchg
xor
dec
repnz
add
mov
mov
or
aaa
in
aam
fstps
lock
cld
cmp
stc
mov
fwait
test
add
mov
cmp
adc
enter
dec
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
test
and
inc
lods
fdivrs
sbb
push
scas
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
mov
test
cld
add
add
clc
stos
dec
int3
mov
sahf
jge
dec
int3
xchg
pop
mov
scas
push
mov
imul
jp
ss
aad
add
cli
mov
scas
cmp
inc
dec
mov
sbb
adc
pop
and
sub
movsb
roll
xchg
mov
out
push
fwait
in
shl
push
std
and
clc
inc
imul
out
ja
les
test
fdivl
outsl
test
jge
arpl
jmp
ljmp
gs
add
bound
cmc
in
or
jne
gs
out
push
das
mov
in
mov
push
test
fdiv
mov
jo
mov
xchg
aad
mov
movsb
jge
or
lods
mov
xorl
pop
int3
fsubs
lcall
push
das
test
rcll
rclb
jmp
dec
dec
lahf
fisubl
push
addr16
aam
inc
daa
and
jecxz
mov
dec
push
das
or
sub
fisttpll
jo
imul
sub
push
mov
or
adc
out
and
jnp
and
movsl
gs
cwtl
cwtl
out
add
push
sbb
loop
sub
imul
sbb
aaa
mov
cli
js
cmp
clc
out
mov
sub
dec
mov
ja
or
cmp
sbb
cltd
mov
sahf
add
pop
invd
xor
push
pop
mov
or
mov
pop
pop
fiadds
test
daa
jb
mov
push
push
mov
inc
clc
sbb
outsb
inc
imul
in
jns
xlat
outsb
cli
scas
sbb
adc
jno
inc
mov
push
pop
cmp
cld
lods
fwait
lock
lock
push
pop
mov
jo
sub
jne
dec
mov
xchg
ja
idiv
jg
mulb
sbb
add
add
cld
add
add
les
cld
mov
rol
or
and
adc
out
stc
push
push
mov
xor
mov
sub
cmp
lcall
sbb
orl
xor
adc
xchg
xchg
sahf
jmp
jns
ret
sbb
cli
add
pusha
add
icebp
inc
push
xor
stos
pop
mov
repnz
jle
cli
adc
ret
push
push
rorb
adc
nop
loop
loopne
cmc
lock
cmc
and
push
fdivrp
sarl
xor
arpl
outsb
mov
out
add
sbb
inc
pop
and
xor
test
jecxz
inc
repz
mov
or
adc
icebp
or
dec
aaa
add
lcall
push
cli
aaa
imul
pop
push
xorb
xor
mov
mov
mov
sbb
in
xchg
insl
and
xor
scas
lret
push
das
in
test
mov
mov
lods
pop
add
push
test
adc
mov
scas
mov
cld
cltd
movsl
es
in
rcl
cmpsl
mov
mov
dec
sbb
ret
mov
cs
hlt
nop
mov
xor
fcmovnu
jbe
mov
inc
pop
lcall
cmpsb
flds
mov
inc
xor
lods
jmp
fdivp
out
xorl
ja
adc
cmpl
xchg
insl
adc
push
es
push
movsl
test
sarl
mov
xor
dec
push
and
and
ja
cltd
cwtl
and
cmpsl
addr16
fdivrs
sbb
mov
adc
icebp
xchg
and
scas
stos
hlt
xchg
popa
adc
sarl
jmp
jecxz
out
inc
lock
and
hlt
and
idivl
mov
or
hlt
inc
pop
sbb
pop
std
jg
mov
add
cld
add
add
cmc
inc
add
aam
mov
test
dec
inc
jp
mov
out
adc
in
nop
in
jmp
mov
inc
scas
xchg
sbb
jo
add
pop
mov
inc
inc
pop
cli
divb
xor
cmpsl
pop
sbb
xchg
sub
es
stc
stos
dec
repnz
add
sbbl
sbbb
das
out
jmp
bound
adc
orl
js
inc
xchg
sub
dec
cltd
pop
in
mov
mov
or
arpl
jge
das
rolb
insb
pop
xchg
inc
pop
lods
rcrb
popf
jne
xor
mov
fsts
mov
fldt
cmpsl
pop
sahf
cltd
dec
lahf
je
xor
jnp
jmp
into
arpl
jecxz
out
lcall
js
xor
fisttpll
jo
xor
outsl
cmp
inc
lahf
sahf
test
iret
xchg
xchg
cs
cwtl
bound
dec
pop
and
loop
push
cmpsl
mov
loop
sub
mov
jne
lahf
or
dec
incl
daa
push
cmp
and
xor
jge
sar
mov
rcll
das
jmp
dec
mov
dec
add
inc
jge
dec
stos
lods
out
movsb
mov
lcall
mov
shld
int3
push
aam
faddl
in
jmp
push
out
sub
push
int
popa
test
xor
inc
sti
jmp
add
daa
mov
mov
add
xchg
adc
fstps
mov
sbb
nop
xchg
incl
out
lret
push
aas
cli
lods
int3
push
call
jno
insl
and
out
int
test
sub
mov
out
mov
mov
dec
in
pop
or
inc
jnp
sahf
jne
loope
push
add
pop
rcll
sahf
pop
adc
pop
push
add
mov
int
mov
fcompl
cld
mov
add
add
add
xchg
mov
jo
mov
hlt
dec
mov
mov
dec
and
dec
jo
mov
lea
push
and
jg
call
mov
sbb
mov
ret
mov
repz
mov
stos
sbb
sahf
mov
jecxz
dec
push
notb
ret
mov
outsl
jecxz
jo
pop
inc
mov
push
pop
xchg
cld
mov
shl
out
xchg
xchg
lret
cmp
orb
cmpsl
and
fwait
mov
jnp
lods
adc
lods
mov
xchg
das
fwait
mov
push
out
xor
andl
movsb
mov
in
inc
imul
sbb
xor
jge
shrl
xor
stc
jae
cmp
ror
lea
mov
and
lock
xchg
iret
pop
xchg
sub
add
xchg
mov
aad
cmpsb
jmp
pop
ret
xorb
sbb
adc
pushf
popf
test
adc
cli
call
xor
adc
ficoms
jb
cmpsl
cmc
test
xchg
jbe
aad
jb
arpl
imul
ljmp
mov
loope
cmc
xchg
adcl
cwtl
add
flds
mov
sbb
xchg
xchg
pop
shlb
pop
shll
mov
dec
xor
test
daa
add
or
pop
push
fcmovu
ficoms
sub
mov
mov
ficoml
fidivs
lods
push
jo
rclb
fcomps
xor
gs
lret
pop
aam
inc
call
mov
mov
loope
mov
sub
js
js
hlt
mov
std
jl
xor
jg
std
data16
clc
mov
add
add
add
cli
pop
sahf
aad
mov
xchg
add
das
jmp
push
jo
xchg
mov
fisttpl
cli
mov
rcrl
or
jnp
stc
dec
xchg
movsl
cwtl
call
aam
insl
loop
jle
call
or
push
inc
dec
js
mov
mov
pop
cli
enter
pop
cld
scas
cwtl
stc
push
push
push
pop
and
mov
lret
outsb
jb
push
decb
and
xor
insl
fs
mov
adc
jo
pop
and
rorl
jo
shrb
jecxz
jp
out
dec
inc
xor
xor
inc
addr16
movsl
insl
jp
shll
lret
or
and
cmp
int3
ja,pt
inc
stos
add
pop
loop
outsl
push
inc
ja
repz
inc
repz
jnp
jo
mov
cmp
fs
and
fstl
mov
lds
int3
pusha
imul
inc
movb
sbbb
aam
xrelease
pusha
adc
cmp
push
adc
jle
jmp
or
jg
dec
cmp
mov
test
mov
int3
pop
xchg
mov
mov
sti
mov
mov
adc
cld
dec
movsl
or
xor
push
insl
jge
clc
movsl
xchg
or
pop
pop
or
xor
jns
push
fsubr
xchg
test
call
xor
iret
mov
pop
cltd
xchg
shlb
dec
jae
lds
int3
xchg
das
repz
adc
pause
add
ret
aas
in
cmp
les
push
and
xchg
and
jbe
jmp
jmp
cmp
mov
mov
and
inc
lods
mov
fdivrp
and
fs
pop
mov
mov
int3
dec
addr16
hlt
mov
add
add
add
xchg
adc
mov
cmp
jo
jmp
addl
xor
mov
sarb
mov
dec
jecxz
std
xchg
popa
pusha
aaa
or
jae
pop
jb
out
inc
mov
faddl
ds
faddp
jnp
push
pop
and
cmp
lock
sahf
popf
or
lds
cs
jnp
mov
mov
jge
scas
pop
cmp
rcll
out
mov
xchg
add
inc
ror
jae
movsb
dec
inc
xchg
dec
sub
inc
pop
dec
int
outsl
scas
imul
sub
adc
ja
push
push
divb
jp
jle
and
mov
xchg
pushf
out
dec
cli
fstpl
cmp
lahf
jne
sbb
inc
cmp
mov
cs
add
pop
push
into
lahf
mov
popf
cmpsl
loopne
fisttpl
sbb
push
and
into
mov
lock
and
push
loop
inc
mov
xchg
sahf
das
jmp
popf
sti
push
pop
int3
inc
pop
and
lock
pop
outsb
outsl
push
imul
push
mov
adc
mov
daa
iret
jae
or
pushf
in
mull
xor
push
or
dec
jmp
enter
movsb
repnz
ss
outsb
js
lods
mov
and
mov
pop
ror
imul
fildll
scas
xchg
add
jg
pop
xlat
jns
cli
data16
xor
rcrb
xor
xchg
inc
rolb
cltd
stos
jle
jecxz
andl
adc
pop
push
in
std
sbbl
xorl
add
mov
ss
sbb
push
add
adc
rcr
pusha
fstpl
dec
outsl
std
shr
xchg
xor
aaa
jbe
out
cmpsl
sbb
jg
pop
fstps
lock
add
add
add
sub
cmp
outsl
outsl
cwtl
into
mov
adc
mov
jnp
dec
imul
les
or
outsl
loop
add
jge
or
shlb
cmp
lods
sbb
xchg
scas
ret
popa
jmp
hlt
xor
push
add
push
pushf
inc
xchg
in
fstpl
fdivl
sbb
lahf
adc
pushf
lret
leave
add
aas
dec
lock
sub
push
jnp
mov
mov
dec
int
ret
xor
and
xchg
lods
dec
cltd
sub
out
push
popf
inc
insb
leave
pop
or
or
sbb
push
stos
mov
test
and
lds
xlat
adc
std
scas
shrb
scas
pop
pop
add
dec
lcall
out
test
mov
scas
into
mov
int
dec
icebp
dec
push
into
cmpl
sbb
jmp
xor
sub
mov
dec
pop
sub
xor
shl
inc
repz
mov
adc
or
loope
cltd
js
jp
insl
sbb
leave
movsl
adcl
nop
sbb
mov
xor
pop
mov
and
das
mov
ds
sub
call
notb
add
test
and
cmp
pop
jp
inc
add
mov
xchg
push
inc
and
les
cmp
cmp
push
jp
scas
addr16
mov
fldenv
stos
xchg
icebp
mov
mov
rcr
out
fidivrs
mov
lcall
jmp
ja
sar
cs
and
push
popf
paddd
fidivl
ror
sub
add
add
outsl
ds
enter
or
push
mov
ja
mov
icebp
lret
cld
cmpsl
sub
pop
mov
push
inc
insl
rcrb
andl
adc
fnstcw
rcr
add
scas
push
mov
ret
in
add
adc
fwait
jecxz
outsb
sahf
adc
sbb
adc
sub
popl
push
lahf
xchg
sbb
std
add
es
jno
cltd
fcoms
or
sbb
dec
incb
scas
jmp
js
pop
aaa
not
mov
adc
mov
cmp
pop
iret
mov
loopne
xor
add
shll
sub
push
mov
mov
inc
inc
cltd
in
hlt
pop
sub
fsubrp
lods
jbe
js
cmp
pushf
and
mov
sarl
and
stos
das
repz
and
mul
dec
push
fbld
inc
sub
mov
adc
push
bound
adc
xchg
sbb
lret
mov
or
push
xorb
jmp
sti
sub
icebp
pop
stc
insb
out
sahf
adc
loope
cmpsl
fwait
data16
mov
jns
dec
cltd
push
xor
icebp
xor
arpl
loopne
push
addr16
push
xor
pop
int3
inc
sbb
popf
mov
pop
sub
xor
or
fdivrl
rcrb
popa
xchg
scas
jecxz
jne
into
ret
sub
lods
pop
add
andl
js
pop
je
mov
mov
mov
xor
mov
pop
inc
lea
xor
push
dec
mov
sahf
cld
std
rorl
sarb
dec
or
stos
das
jecxz
xchg
insb
shll
mov
mov
jge
and
movsb
lea
sub
imulb
add
call
add
add
pop
mov
ds
push
cmpsb
jne
pushf
jg
out
push
pop
lods
ret
inc
and
xchg
dec
xor
add
bnd
pop
dec
cmp
mov
jp
mov
in
jno
das
les
ret
sbb
or
int3
mov
jle
rcrl
clc
cmp
adc
pop
lods
cld
mov
jge
dec
inc
int
imul
add
ret
iret
pushf
jns
sbb
add
clc
rcll
insl
sahf
push
mov
repnz
and
fwait
pop
sub
aad
test
mov
fsubrs
xchg
fdivrs
insb
and
pop
sub
jge
pop
int
jp
insl
push
or
xor
repnz
decb
mov
sbb
insb
mov
in
ljmp
xchg
gs
jne
dec
jle
jo
shrb
push
dec
or
pushf
test
out
xchg
adc
sub
test
aam
jb
shrl
jae
int3
addb
aad
icebp
js
cmpsb
popa
rcrl
fldt
add
xchg
cmp
mov
jg
les
fiaddl
mov
xchg
daa
mov
dec
sti
cmp
imul
xor
push
loopne
cmp
andb
popa
sarl
jnp
inc
icebp
dec
pop
pusha
sahf
mov
pushf
shll
in
jno
gs
adc
mov
call
jl
enter
push
rclb
movsb
add
cmp
xchg
loop
rcrl
add
xor
fwait
push
mov
adc
cmpb
xor
bswap
pop
out
or
mov
cmpsl
sbb
jge
jno
lret
sbb
adc
push
jmp
repz
mov
into
mov
cmp
popl
mov
xchg
jns
xchg
add
cld
add
add
mov
ja
xchg
dec
mov
sub
push
xchg
mov
repz
sub
adc
push
pop
xcrypt-ofb
cmpsl
in
pusha
and
repnz
ret
mov
push
ljmp
jecxz
out
jne
jb
ret
mov
sub
sub
sbb
mov
rcll
stos
adc
add
hlt
in
cli
popa
fs
cmp
mov
pop
loop
scas
mov
jb
aas
mov
pusha
mov
fwait
inc
jl
ds
faddl
stc
xchg
inc
or
out
ja
test
ret
scas
xlat
addl
out
jnp
out
sub
repz
imul
sbb
in
jo
xor
cmp
sarl
shl
xchg
scas
lahf
int
loop
mov
push
outsb
stc
xchg
jae,pt
scas
mov
das
into
jp
shrl
loopne
jnp
out
sarl
push
or
mov
jp
scas
xchg
add
mov
push
iret
loope
or
add
push
into
inc
bound
xchg
outsl
vmovups
stos
xchg
lea
mov
dec
insl
mov
mov
loop
sub
xchg
pusha
cmc
adc
push
lret
test
adc
pop
and
or
clc
fistpl
loope
sub
mov
pushf
cmp
sarb
sbb
out
cwtl
pop
or
dec
xchg
add
or
std
shl
int
out
jno
inc
aam
icebp
mov
frstor
mov
and
les
and
push
inc
push
pushf
popa
lods
xor
fisubrs
add
lds
aas
in
sbb
sub
add
mov
jns
adc
push
xchg
faddl
add
add
xchg
std
jg
mov
je
loopne
add
cld
add
add
js
and
or
adc
jmp
xor
mov
sub
mov
cmpl
jl
push
pop
or
xchg
cmp
je
nop
imul
in
push
jl
repnz
imull
popl
clc
sub
dec
xor
arpl
mov
pop
dec
test
push
sub
inc
pop
movsb
push
jnp
shr
mov
nop
cmp
movsl
lretw
ja
mov
rorl
daa
dec
gs
sub
flds
mov
test
movsl
lahf
jnp
movsb
sbb
setne
mov
in
xor
cmp
xor
jp
mov
pop
cmp
xchg
pop
outsl
movsl
mov
adc
pop
inc
or
mov
popf
mov
push
add
lcall
pop
dec
jp
test
jl
in
test
aam
dec
add
adc
xchg
push
or
scas
xor
add
jge
std
sbb
push
dec
repnz
sbb
sbb
in
movsl
out
dec
rorl
out
in
pusha
fwait
divl
fsubl
inc
xchg
cmpsl
divb
dec
xor
pop
test
sbb
and
dec
sbb
pop
std
andb
push
js
cmp
mov
jnp
mov
f2xm1
fstp
mov
js
inc
push
or
je
and
aas
stc
or
mov
mov
std
rolb
arpl
clc
mov
dec
arpl
icebp
pop
pop
icebp
shlb
enter
inc
add
in
pop
cmpsb
cmp
lods
iret
xchg
cs
and
popa
push
jns
adc
and
ja
pop
dec
and
stc
lcall
fcomps
inc
das
bound
notb
aaa
inc
pop
sbb
mov
idiv
iret
rorl
jp
sbb
add
add
add
ds
mov
cmp
scas
hlt
and
mov
cmpsl
cmp
mov
inc
insl
mov
fwait
mov
shlb
push
sub
enter
cltd
aas
insb
mov
xorl
pop
and
mov
adc
pop
sarl
mov
cwtl
xchg
test
and
fwait
pop
or
lea
aaa
testl
insl
shl
repz
dec
sbb
mov
mov
xchg
adc
mov
xchg
jns
insl
and
rcll
xor
out
cmp
sbb
sub
sbb
lcall
cmp
shlb
cwtl
repz
stc
sti
pop
fmull
add
je
aaa
popa
jb
scas
mov
mov
or
mov
hlt
les
into
mov
lret
cltd
lahf
dec
xor
add
paddsw
call
pop
push
inc
pushf
push
hlt
add
cmp
pop
cmovp
xor
cld
insb
adc
cmp
out
les
jo
push
sbb
in
mov
gs
mov
sub
sbb
leave
sbb
aaa
cwtl
adc
adc
cmpsb
lock
stc
xchg
inc
mov
xchg
dec
add
mov
imul
mov
sub
ror
or
les
adc
pop
addr16
fldenv
insl
fnsave
add
outsb
cmp
xchg
adcl
loope
xchg
ljmp
push
mov
sti
xchg
cmp
es
mov
mov
test
clc
xor
in
pop
push
insl
int
shr
sub
jge
cmp
test
mov
out
ret
mov
ja
or
add
cld
add
add
mov
pop
and
cmp
mov
or
jbe
popf
ret
fiaddl
outsb
add
std
pop
mov
push
push
cmova
mov
jp
icebp
cmc
and
jb
cmp
sar
scas
or
hlt
mov
imul
les
pop
idivl
lods
fucom
je
xor
adcl
jnp
mov
pop
adc
stc
es
push
icebp
loop
or
loope
into
sub
sub
mov
sbb
sub
dec
jae
push
enter
sub
fisubs
stos
xchg
iret
cmpb
dec
shr
loope
or
cmp
enter
sub
mov
ss
out
inc
mov
popa
xchg
lds
xor
enter
stc
imul
push
pop
pusha
ds
push
sub
leave
sar
adc
loopne
inc
stc
scas
icebp
adc
test
test
arpl
es
es
lret
test
cmp
cmp
rcl
fisttps
add
pop
sbb
cmp
in
jb
testl
dec
lcall
movsl
jns
cmp
test
dec
test
mov
push
es
in
xchg
cmp
mov
scas
dec
mov
mov
or
adc
in
dec
sahf
lock
dec
ljmp
fisubs
add
cwtl
mov
call
xchg
xchg
lock
jo
or
adc
jg
cmp
aam
mov
and
out
and
loopne
mov
mov
movsb
dec
in
pop
or
adc
mov
cmp
sbb
add
inc
out
add
push
addr16
into
jae
jg
call
bound
sbbb
aas
fisubrl
add
add
push
jle
xlat
lret
push
testl
pushf
add
cld
add
add
mov
pop
mov
mov
fidivl
cmp
jge
adcl
test
enter
test
push
sub
in
inc
xor
sub
fidivs
pop
shrl
mov
jb
push
or
push
push
pusha
loop
in
sahf
in
jbe
daa
add
inc
lcall
test
cwtl
push
fst
shrl
outsl
adc
out
xchg
lods
pop
jmp
ret
jg
lcall
dec
fildll
jecxz
or
fnstsw
test
pop
shrl
addr16
lods
inc
mov
cmpsb
xlat
dec
ds
test
stos
cmp
mov
loope
sub
aas
jne
inc
and
mov
jle
adc
jp
push
in
imul
mov
std
xor
jp
rcll
jecxz
adc
cli
xchg
fimull
pop
ja
stos
scas
dec
push
lret
icebp
stos
xchg
sbb
push
adc
out
mov
std
mov
je
push
inc
dec
mov
mov
push
adc
mov
out
lret
jp
xor
cmp
pop
cltd
push
mov
arpl
dec
xchg
cwtl
loope
or
pop
stc
add
and
mov
push
pop
pop
push
sub
pop
cmp
mov
ds
add
push
dec
in
inc
push
in
pop
loope
push
frstpm(287
test
iret
mull
pop
jp
add
push
ljmp
scas
rdpmc
js
xchg
mov
cltd
stos
jg
cmp
out
cmp
add
mov
hlt
add
addb
in
cmp
iret
inc
xlat
adc
pusha
pop
sub
mov
lock
dec
mov
punpckhdq
xor
ja
pop
test
add
add
push
or
pop
out
repz
fucomp
add
add
cld
add
add
scas
cmp
ss
imul
sahf
mov
imul
pop
push
insb
inc
push
aam
cmp
push
filds
mov
aad
mov
call
jnp
shll
scas
jo
adc
sahf
mov
push
mov
or
ds
mov
out
imul
dec
cmp
push
ja
xor
lea
dec
inc
sub
lcall
in
sub
movsb
pop
dec
cmc
iret
test
int3
movsb
lods
lock
imulb
stc
mov
je
lods
adc
lock
push
test
sbb
xchg
xor
mull
inc
push
incl
nop
lret
jl
imul
pop
xchg
out
adc
enter
sub
or
loope
or
pusha
movsb
mov
mov
aam
addr16
add
cmp
mov
inc
or
loope
icebp
lcall
add
jbe
popa
js
add
pop
loope
test
inc
cmpsb
cmc
loope
bound
lea
inc
cmpsl
xchg
sbb
std
or
add
into
adc
jb
lcall
mov
lods
sahf
outsb
dec
aas
stc
sarl
movsb
jle
lahf
fisttpl
iret
pop
fadds
movq
jmp
xor
lock
cmp
or
out
mov
push
or
push
inc
xchg
xchg
cmpsb
push
or
sti
sub
loope
push
jmp
cmp
cmp
addr16
aam
adc
testb
sbb
aas
push
daa
je
mov
cmp
jp
mov
or
loope
inc
in
popl
data16
add
leave
xchg
insl
mov
out
nop
sbb
and
data16
mov
add
mov
insb
addr16
jo
rol
pop
mov
pop
jecxz
push
in
es
xchg
out
and
nop
bound
nop
and
imul
and
call
stc
nop
lock
push
pop
out
aas
in
sub
and
cmpl
pushf
xor
fs
imul
cli
sbb
dec
pop
pop
popa
int
rcr
sub
popa
xor
aaa
mov
aad
xor
mov
fimuls
bound
filds
popf
jge
xor
cmc
mov
push
inc
jmp
das
lods
ret
or
dec
iret
aad
lcall
mov
gs
xchg
fldcw
fiadds
daa
inc
xor
lret
pop
add
enter
mov
inc
xchg
enter
adc
inc
mov
sahf
pop
and
in
data16
fcompl
dec
daa
and
jne
insl
push
push
push
mov
jl
lcall
xchg
lds
cld
pop
shrl
add
shrb
addr16
cmp
lds
sub
stos
xor
push
rcrl
iret
ds
and
out
pop
ret
pop
push
mov
pushf
cmp
fs
rcr
sub
test
bound
cmp
scas
lock
loop
mov
pop
inc
dec
dec
int
adc
pusha
sti
dec
push
lret
or
mov
in
movsb
mov
xchg
adc
daa
rorb
cmp
jle
jmp
sub
ret
cmp
enter
push
push
dec
rcrb
iret
addr16
xor
adc
mov
testl
inc
cmc
push
sub
sub
lret
mov
outsl
pop
xor
aam
inc
pushf
ds
icebp
dec
mov
inc
dec
cld
xor
in
push
data16
scas
and
lahf
je
scas
dec
cltd
inc
mov
cwtl
outsl
dec
out
ja
idiv
pop
out
cmp
mov
add
add
add
lds
add
adc
loope
pop
push
cwtl
or
pop
cmpsl
cltd
xchg
xchg
ret
sub
or
add
ret
popa
xlat
or
xor
xchg
fwait
jl
pushf
sub
mov
xchg
mov
cmp
xchg
test
sub
mov
jmp
fwait
pop
jnp
mov
jno
jns
call
sub
lret
pop
popa
fidivrl
repz
repnz
mov
js
inc
pop
inc
call
dec
gs
and
out
fwait
ror
lcall
sub
xor
ds
mov
jp
fildl
and
stc
inc
loopne
sbb
shl
gs
aas
cmp
or
out
inc
jmp
xor
xchg
pop
cltd
dec
push
cmp
lret
cli
adc
ljmp
lods
repz
jns
cli
xor
cmp
mov
cmpl
pop
cmp
loopne
imul
jo
push
mov
iret
jle
repz
mov
lahf
clc
and
lods
fs
adc
mov
gs
inc
dec
adc
repz
test
cmp
xlat
data16
xor
aaa
xor
pop
add
movsl
into
lock
xchg
xor
jne
loop
loopne
mov
cmp
leave
shl
push
add
pop
mov
fldenv
sbb
lea
cmc
aaa
adc
aaa
addr16
ss
and
ljmp
shl
loop
mov
or
cli
loop
fmulp
cwtl
sub
cmp
in
mov
pushf
cmp
jmp
inc
jl
mov
lret
outsl
call
mov
inc
pushf
dec
out
repz
pushf
mov
mov
push
dec
arpl
push
cmp
ds
cli
adc
add
dec
je
test
and
push
mov
dec
fcmovne
out
mov
xchg
add
add
sti
mov
inc
push
stos
jae
les
add
mov
or
add
adc
mov
jmp
adc
push
adc
int
imul
jb
xchg
add
add
cmpsb
or
jb
cld
pop
cmpb
subb
xor
mov
fcoml
lds
orb
lds
in
cmp
test
insl
leave
mov
in
leave
and
cmpsb
mov
cwtl
lret
sub
in
mov
ljmp
adc
enter
ret
push
pop
popf
add
mov
cmp
or
mov
mov
jmp
pop
aam
inc
adc
in
push
mov
shrl
sub
int3
sbb
push
xor
fcmovnu
cli
xchg
mov
ss
js
push
and
and
xchg
push
sbb
mov
adc
les
xchg
fisttps
cltd
pop
imul
xchg
clc
pop
hlt
push
daa
test
loopne
mov
fildll
insl
out
mov
xor
adc
push
jle
mov
and
sub
push
pop
imul
sbb
insb
or
aad
xor
js
jb
daa
lds
push
inc
icebp
aas
sub
test
aaa
cmp
mov
repnz
push
inc
stos
aad
popa
mov
divb
push
addl
add
cmpsl
mov
jb
mov
mov
in
mov
jae
inc
imul
cs
cmp
lcall
dec
incl
add
cmpb
imull
fwait
movsb
xchg
dec
jnp
jnp
out
pop
mov
cmpsl
sub
push
sahf
fisubrl
clc
fimull
or
pop
leave
jne
les
aaa
mov
add
sahf
xor
sub
les
add
add
add
mov
xchg
inc
or
test
mov
test
and
subb
mov
inc
ror
outsb
mov
loopne
mov
or
gs
test
decl
xchg
jp
mov
fmuls
pushf
divb
mov
pusha
and
mov
xchg
jbe
and
jp
inc
cmp
mov
std
int3
dec
hlt
inc
iret
xor
sub
push
notb
cmp
andl
andl
sbb
mov
and
shr
jg
dec
and
insl
stos
popa
push
sub
clc
adc
or
xlat
in
filds
add
cmpsl
jb
lds
xchg
out
pop
push
xchg
cmp
push
sbb
adc
or
jae
dec
ja
insl
imul
xor
xor
dec
push
sbb
leave
imul
push
aad
out
push
xlat
mov
mov
mov
lods
sub
xchg
clc
fwait
mov
imul
rep
pop
decl
fcomi
and
test
in
xor
movsb
bound
mov
dec
xchg
mov
jne
aas
pusha
cwtl
mov
xor
pop
pop
mov
inc
test
lds
inc
jo
push
iret
push
dec
xchg
roll
ja
mov
jge
loop
or
outsl
bsf
cmp
or
repnz
jae
loope
dec
lret
fstpt
scas
vcvtss2sd
clc
and
jp
xor
pop
push
jle
in
int3
cmpsl
adc
outsl
ret
and
in
shr
xchg
fisubrl
scas
push
push
cmp
pop
rorl
fistl
fidivrl
pop
sahf
popa
cmp
hlt
and
inc
cwtl
rorb
in
xchg
hlt
dec
fdiv
add
in
bound
add
add
std
in
mov
mov
std
cmp
or
add
cld
add
add
and
cmpb
test
arpl
inc
xchg
xlat
xchg
dec
and
push
lods
pop
es
fisubrs
gs
push
call
int
push
stos
lret
inc
in
outsb
sbb
ljmp
jnp
cmp
fwait
pop
jmp
push
popa
push
xor
repz
jmp
push
icebp
pushf
jg
pop
push
test
mov
mov
dec
push
and
adc
sarb
push
int
or
mov
jg
push
inc
mov
dec
pop
fdivl
stc
xchg
das
jle
arpl
mov
out
gs
cmc
lahf
ljmp
fnstcw
mov
repz
pop
inc
cli
bound
or
dec
cld
popa
mov
sbb
push
dec
jne
pop
js
inc
pop
push
add
cmp
cltd
outsb
push
inc
xor
cli
push
mov
icebp
mov
scas
fwait
jmp
in
sbb
insb
popa
pop
ds
cmp
test
pop
sbb
add
popa
pop
out
mov
fildl
xchg
adc
adc
fbld
push
pop
jo
mov
insb
inc
fcomps
rolb
fcompl
dec
lea
add
les
push
xchg
fwait
and
test
aad
cmp
in
cmp
cli
adc
dec
das
mov
jns
and
outsl
pop
inc
mov
pusha
in
xchg
pslld
jl
sbb
lcall
in
mov
mov
sti
lret
popa
mov
or
mov
mov
jl
add
repnz
imul
cmp
cmp
push
cli
loopne
mov
jge
addr16
leave
sbb
jl
dec
xor
mov
mov
cmp
movntps
add
push
cwtl
cmp
js
add
add
rolb
testb
inc
les
add
add
add
daa
aam
add
imul
xor
stc
push
imul
add
lret
jl
call
sub
inc
bound
mov
jns
add
fildl
scas
int
adc
xchg
xor
sbb
mov
mov
addl
cmp
mov
and
push
movsb
sbb
adc
imul
push
xor
test
ret
inc
pop
or
fwait
and
push
jle
mov
jl
fstpt
add
cmpl
aas
aam
jnp
jo
sub
out
and
aam
push
mov
cmp
mov
cld
stos
sbb
push
ds
inc
cmp
or
pop
std
mov
mov
mov
and
je
mov
mov
dec
insb
cmp
sub
cmp
into
jmp
jne
dec
outsb
mov
pushf
mov
add
mov
xchg
dec
push
mov
cmp
scas
shr
xchg
xchg
mov
loopne
push
call
js
in
mull
jge
mov
push
mov
jp
in
dec
dec
xchg
scas
ret
mov
cmp
mov
mov
call
xchg
xchg
pusha
sub
pop
ret
push
sbb
loope
ret
inc
bound
mov
xor
or
mov
pop
das
test
add
dec
cmp
mov
ss
push
push
dec
or
mov
and
sub
sbb
xchg
mov
test
jnp
sub
or
pushl
xchg
in
ret
insb
rcl
pop
xchg
fidivl
int3
lret
cmp
shll
andl
ret
je
mov
lret
and
notb
push
xchg
and
inc
inc
popa
data16
gs
mov
outsl
gs
mov
add
cld
add
add
inc
mov
loop
or
or
dec
es
sub
in
ret
jge
adc
imul
pusha
lock
pop
add
jg
out
stos
lret
arpl
mov
ja
orb
and
dec
cmpb
icebp
push
jmp
sbb
fstpt
hlt
hlt
mov
mov
outsl
and
repnz
daa
mov
cmp
jb
xchg
push
pop
ret
inc
movd
mov
mov
adc
mov
push
ret
xchg
pmaddwd
insb
popf
orl
cmp
inc
in
out
ret
or
push
imul
inc
mov
jmp
sbb
mov
pusha
loop
xor
fiaddl
cmp
andb
outsb
leave
lret
mov
adc
fucom
sub
int
cmp
jge
push
outsl
sarb
mov
in
push
mov
lods
mov
or
fisubs
movsb
xchg
pushf
dec
stc
ja
adc
in
add
fiadds
jp
out
lcall
dec
or
jmp
pushf
add
int3
mov
cmp
fidivl
ljmp
stc
sbb
cmp
aas
add
xor
cs
cmp
rolb
lret
pop
jecxz
jg
push
xor
nop
in
add
arpl
pop
mov
repnz
fdivl
adc
in
jno
sub
ret
jecxz
or
sbb
mov
frstor
out
adc
ss
pop
outsl
movsl
mov
adc
leave
aad
xchg
pop
adcl
sbb
and
mov
adc
stc
daa
ss
std
mov
rcrl
repz
cli
cmp
adc
mov
scas
add
cld
add
add
sti
xchg
adc
cmp
addr16
pop
lds
scas
add
sub
lods
adcl
mov
adc
jp
xorb
imul
iret
popf
cltd
jo
or
pop
call
sub
sbb
xchg
in
xchg
pop
fsubl
in
popa
cmpsl
cvttps2pi
xlat
inc
inc
fadd
sub
or
je
adc
xor
addr16
out
aaa
jb
lds
xchg
sar
iret
add
call
inc
push
ficoms
jmp
sbb
sti
jp
cs
in
jmp
push
push
sub
push
add
or
pusha
enter
fadd
in
mov
mov
pop
sub
xchg
fwait
sbb
cmpb
scas
dec
or
bound
pop
cwtl
cmp
or
scas
jo
scas
shlb
add
pop
pop
or
fimull
dec
out
sbbl
mov
push
xchg
arpl
fstpl
test
mov
es
es
mov
jne
xor
cmp
idivb
insl
xor
mov
inc
jns
push
dec
iret
scas
repnz
and
repnz
fisubrl
and
subl
call
or
rcl
aaa
cli
mov
adc
addb
cmp
ja
pop
sbb
outsl
mov
lea
jne
sbb
adc
es
sbb
sub
xchg
imul
push
xor
test
fists
out
cltd
fwait
sbb
lds
pop
adc
inc
insl
xchg
xchg
psadbw
mov
mov
xor
jg
int
in
jmp
and
fcom
xor
mov
fwait
lods
leave
pusha
jns
add
add
and
push
push
cmp
outsl
cmp
add
add
inc
sarb
push
mov
xor
popa
push
aad
fstpl
pop
push
lea
outsb
or
js,pt
clc
pop
xchg
stc
mov
add
scas
cmpsb
adc
bound
dec
cmp
mov
sbb
ljmp
cmp
pop
pop
mov
jmp
push
fadds
mov
jp
mov
mov
adc
mov
or
cmp
sbb
mov
push
push
in
xchg
pop
xor
fcmovnb
xchg
jmp
mov
xor
js
enter
daa
mov
and
xchg
or
ret
addr16
jmp
das
jae
sbb
rcl
ret
jle
sub
outsb
mov
mov
icebp
push
or
mov
out
outsl
movsl
push
xorb
mov
cld
xchg
pop
sbb
subl
adcb
rorl
je
jl
pop
cmp
jns
test
jg
daa
xchg
andl
push
lret
sub
dec
popa
lahf
mov
pop
pop
aaa
sub
sbb
inc
xor
fmulp
dec
cmp
fnstsw
lcall
pop
mov
dec
cld
xchg
jne
loopne
inc
and
sbb
mov
sti
rcrb
pop
xor
daa
pop
inc
mov
call
dec
add
outsl
mov
fistps
adc
mov
loopne
aad
xor
adc
sub
xchg
or
xchg
mov
jp
insb
outsl
cmp
mov
pushf
mov
movsl
fistps
add
xor
movl
cmc
pop
jp
int3
jae
add
andl
mov
dec
sub
in
fnstsw
fnstsw
mov
in
outsb
fs
sbbb
jne
mov
add
add
add
popa
fbld
iret
sbb
repnz
test
dec
ret
jge
jnp
sbbl
push
cmp
push
inc
push
jle
sub
inc
bound
rcll
or
pop
jnp
in
pop
pop
mov
shll
lods
xor
fs
and
dec
add
lret
push
jae
jge
mov
nop
ljmp
scas
inc
in
test
js
enter
mov
dec
imul
mov
mov
aas
pop
push
jae
imul
movsb
in
mov
push
cmp
push
push
aad
clc
ljmp
xchg
mov
mov
push
mov
mov
sahf
or
lcall
imul
fadds
cltd
sbb
ficoms
les
lds
dec
push
and
and
xchg
cmpsb
lods
fs
enter
sbbb
xchg
jo
andb
xor
mov
add
sub
mov
std
ret
lret
mov
add
fldcw
movsl
adc
fisubs
fistps
or
jb
lret
in
push
xchg
push
mov
adc
out
test
mov
mov
iret
sbb
jae
mov
aaa
mov
jb
jle
ret
push
rcrl
pusha
popa
or
fcmovnu
cmc
int
jae
sbb
outsb
inc
out
int3
test
rcr
cmp
ljmp
inc
adc
in
int3
mov
std
inc
int3
stos
jns
jle
fldenv
sti
ljmp
lret
and
mov
jb
in
dec
popa
cmp
mov
decb
and
xchg
shlb
movb
and
cwtl
mov
add
add
inc
mov
jb
adc
movsb
mov
add
add
add
test
mov
pop
mov
xchg
mov
fdivs
xchg
ret
mov
jbe
pusha
popa
in
jae
addr16
push
scas
enter
je
mov
sub
pushf
mov
int
arpl
pop
es
enter
sub
insl
push
cmp
adc
stc
out
mov
mov
pop
jo
sti
test
test
sbb
popa
jne
push
shlb
sti
sub
ss
mov
sbb
insl
arpl
inc
leave
push
push
rcrl
sahf
sbb
call
hlt
mov
cmp
leave
out
popf
test
xchg
sub
mov
mov
ja
push
fs
mov
xlat
xor
stos
ror
fwait
sub
adc
in
pop
dec
inc
xchg
lcall
enter
dec
xchg
adc
inc
mov
jle
es
jp
sahf
cld
sub
cltd
mov
mov
mov
mov
cmpsb
insb
cltd
scas
add
mov
outsl
xchg
or
repnz
push
scas
mov
aad
xchg
aam
mov
popa
pop
push
icebp
repz
rolb
hlt
pop
adc
test
jbe
push
lcall
jge
xor
movsl
out
pop
push
jecxz
add
push
push
cmp
cmp
fistpll
jg
jno
jl
int3
cmpsb
mov
insb
inc
xorl
and
insb
or
popf
cs
mov
pushf
mov
cmpsl
pop
mov
sbb
data16
lret
push
jp
cmp
cmpsb
sbb
inc
and
pop
fcmovb
xlat
sbb
movsl
insl
xor
mov
mov
xchg
repz
pop
scas
add
out
xchg
add
sub
mov
mov
sbb
cltd
or
mov
dec
je
sub
jl
add
add
mov
cmp
mov
ret
icebp
mov
add
add
fadds
test
rorb
lods
outsl
cmp
popf
jns
xchg
loope
xchg
int3
xchg
mov
lret
fstpt
jl
xchg
jg
sub
sbb
int
mov
stos
ss
mov
and
stc
and
lods
js
sbb
or
xor
daa
or
loop
push
cwtl
test
stc
insl
xchg
hlt
sub
mov
mov
aaa
cmp
stos
in
dec
aaa
arpl
add
cmp
lret
ljmp
aad
pusha
pushf
sbbb
ret
push
inc
and
mov
jns
mov
popa
jg
pop
icebp
cmpb
andl
mov
sub
jg
es
sub
add
xchg
push
iret
popa
incl
xchg
je
mov
jge
push
dec
push
xchg
sbb
fwait
vmovdqu
aam
dec
shrl
insl
mov
mov
mov
inc
sbb
xlat
push
push
xchg
and
ljmp
jle
insb
ret
dec
jns
jae
lods
mov
aas
mov
xchg
enter
jns
pusha
xor
xor
or
popf
bound
lcall
es
call
rclb
shl
cmp
sbb
cwtl
shrb
andb
jmp
push
dec
movsl
cmp
and
push
pop
pop
pop
mov
sbb
popf
sub
sti
xor
push
sub
sub
sbb
xchg
aam
jecxz
push
mov
pop
push
add
pop
dec
add
hlt
mov
icebp
and
xchg
cmp
jns
roll
add
xchg
sahf
mov
adc
and
dec
scas
movsb
jg
mov
aas
in
sbb
pop
movsl
dec
mov
dec
mov
dec
mov
lods
test
pop
rcll
lea
aaa
add
add
sbb
out
idivl
test
adc
dec
pushf
mov
add
das
cmpsl
sbb
inc
loope
and
cwtl
pop
pop
lods
inc
and
bound
ja
xchg
lahf
mov
xchg
cmp
gs
ret
mov
inc
aam
std
subb
fisubs
push
fnsave
push
xchg
jb
adc
int
ret
jo
jbe
sbb
cmp
adc
aad
lods
rcr
pop
lds
inc
cmpsl
and
fs
call
and
in
imul
test
dec
cmp
pushf
int3
pop
pop
dec
cmp
loop
and
mov
inc
xchg
adcl
in
mov
mov
repz
pop
out
inc
jo
lret
cmp
add
dec
xchg
cld
jbe
push
adc
movsb
lret
addr16
push
ret
inc
mov
lcall
clc
inc
daa
inc
xchg
call
stos
ficompl
popf
std
or
pushf
nop
loop
scas
and
add
mov
cmp
scas
cld
jmp
inc
scas
pop
dec
es
cli
aaa
fsubl
lock
and
inc
fsubrl
cwtl
add
jns
int
push
pop
ret
xor
fwait
test
cmp
inc
test
mov
fidivs
dec
lret
push
inc
sub
sti
push
cmp
iret
xchg
inc
and
mov
test
mov
imul
cltd
stos
cli
mov
ret
loopne
mov
cmp
into
lcall
subl
dec
sbb
adc
push
fnstenv
in
pop
xchg
and
les
inc
mov
test
imul
popa
mov
hlt
rcll
sbb
insb
cs
scas
movsl
out
cmp
shll
dec
adc
stc
fisubl
int3
andb
jl
les
pop
addb
mov
dec
rcrl
jno
and
add
add
sbb
fsin
out
fs
popf
outsb
pop
cwtl
andl
ds
out
sub
cmp
test
mov
rolb
push
sahf
add
mov
mov
cli
prefetchw
mov
or
stos
out
adc
popa
in
fsubp
mov
push
jns
dec
std
jmp
mov
sub
out
icebp
push
push
cmc
in
adcb
push
je
imul
push
push
in
fucomp
xor
adc
mov
cmp
sbb
mov
mull
bound
push
inc
xchg
inc
je
dec
or
mov
mov
xor
dec
inc
inc
ljmp
or
lea
repz
jae
nop
xor
xor
aam
aam
scas
fst
or
outsl
sbb
cmc
into
and
mov
call
mov
xor
add
adc
inc
shrl
cmp
xchg
adc
inc
jmp
mov
mov
aam
xchg
js
jg
nop
inc
adcl
mov
jbe
shlb
inc
jmp
and
jb
sub
lods
outsb
adc
andl
out
inc
cmpsb
sbb
lods
jge
ffree
dec
iret
push
xchg
aaa
hlt
jge
pop
xchg
rcl
cs
mov
lcall
xorb
or
jb
loop
push
and
imul
loopne
mov
push
fidivrl
sbb
enter
sbb
adc
push
xor
xchg
xchg
mov
hlt
inc
or
clc
push
mov
aaa
stos
and
fsts
aaa
nop
int
inc
cmp
iret
jae
data16
xchg
xor
cmp
mov
popf
cmpsl
ljmp
jb
cmp
xor
ret
rcrl
pusha
xor
cmpsb
xchg
cs
lahf
pop
pop
fistpll
cmp
notl
test
mov
add
adc
arpl
sti
adc
jl
dec
dec
push
mov
xchg
add
lahf
mov
loopne
les
lcall
sub
popa
ljmp
pop
xorl
mov
out
sbbb
xorb
jbe
mov
xor
jne
mov
or
bound
pop
push
lds
adc
test
jmp
mov
mov
insl
xchg
push
xchg
or
scas
mov
test
aam
shrl
mov
cmpl
dec
cltd
add
cmp
outsb
pop
leave
mov
fldenv
mov
subl
adc
ret
sti
mov
pusha
addl
cmp
mov
jns
xchg
or
mov
pop
and
xor
or
out
dec
inc
sbb
out
cmc
into
js
lods
nop
pop
add
rcr
stc
inc
addr16
xchg
out
ss
fisubrs
leave
mull
lahf
lds
idivl
sbb
push
adc
xor
sub
pushf
mov
xchg
insb
fstps
sub
push
ljmp
pop
dec
jnp
jbe
jb
inc
in
fcomps
fidivrl
lret
insb
push
cmp
jbe
shl
jl
clc
mov
ja
or
cli
mov
and
cld
cmp
xchg
push
mov
pop
flds
inc
mov
ja
xchg
inc
and
aas
lea
add
sbb
lcall
stos
mov
pusha
je
push
dec
addr16
push
sbb
pop
push
cmp
mov
cmc
out
stc
add
jge
push
mov
and
dec
xor
cltd
cltd
adc
cmp
daa
rclb
pusha
adc
gs
and
shr
scas
inc
and
lcall
add
add
inc
lret
jl
cmp
loope
xor
push
and
xor
sub
in
mov
add
pop
xlat
movsl
cld
stos
ret
add
xor
mov
addr16
or
xchg
xor
call
cltd
inc
mov
stos
xlat
and
push
aad
adc
sub
rcll
cs
subb
jnp
xlat
out
std
stos
mov
lock
mov
xchg
outsl
xor
dec
push
mov
jbe
loopne
pusha
sbb
je
or
jne
andl
lods
and
test
add
std
call
std
addr16
mov
addr16
iret
stos
pop
or
divb
fsubrs
inc
test
cmp
cltd
ret
cltd
sbb
push
sub
nop
data16
lcall
and
out
add
cmpsl
jmp
mov
xor
xor
mov
pop
cmpl
add
xchg
cwtl
fs
pop
mov
stos
popf
mov
inc
rclb
cmp
lret
xlat
sbb
push
adc
in
and
lods
or
pop
flds
mov
sub
orl
call
data16
into
cwtl
imul
and
in
ss
cmpsb
loopne
scas
fsts
fimuls
add
pop
push
in
push
mov
lcall
jns
jns
pop
push
dec
dec
imul
test
mov
testb
sti
push
mov
ret
lret
stc
and
faddl
sbb
shlb
or
nop
sub
mov
sbb
lds
jecxz
or
int
repnz
dec
pop
in
ret
push
aaa
sbb
push
push
sarl
cmp
pop
adc
mov
andb
call
cmp
imul
pop
mov
jg
data16
sbb
js
enter
add
add
add
fxch
divb
mov
int3
mov
pop
mov
adc
xor
mov
inc
je
push
stc
negl
mov
gs
std
iret
pop
jmp
push
xchg
adc
xchg
pop
and
sahf
jne
adc
mov
into
pop
popf
arpl
sub
ret
inc
sub
xor
push
jl
xor
push
icebp
push
adc
lret
fld
ljmp
hlt
aaa
mov
push
push
popa
fwait
push
fdivrl
mov
out
xorl
mov
ficomps
add
xchg
cs
fnstenv
mov
mov
out
mov
jp
push
test
in
call
fimull
jno
dec
pop
sbb
mov
pop
jg
dec
sbb
loop
jg
les
cmc
fidivl
sbb
mov
xchg
test
cs
push
inc
dec
and
fldl2e
sbb
test
int3
pop
or
out
les
out
insb
sbb
xorb
inc
insl
outsb
daa
jbe
in
dec
daa
dec
dec
push
pop
sub
push
jle
ret
mov
fsts
lods
dec
icebp
sbb
or
or
xchg
ficoms
les
hlt
into
mov
xchg
mov
sahf
adcl
movsl
and
push
lods
ret
mov
or
mov
dec
enter
bnd
lods
dec
or
or
mov
xor
dec
inc
push
mov
cld
call
stc
mov
cmpsb
movsw
mov
push
cmp
xchg
pop
ficoml
sub
xlat
test
cmpsl
mov
stos
insb
xchg
jae
daa
mov
sub
mov
sub
and
mov
enter
add
inc
push
pusha
jbe
out
test
stos
scas
mov
add
cld
add
add
int3
mov
dec
pop
fdivs
sub
loopne
out
in
push
test
or
jb
rcrl
incl
push
es
les
stc
xchg
and
test
jg
inc
cmc
or
cmpb
out
cmp
mov
add
lds
iret
subb
inc
sbb
mov
xlat
dec
rorl
sbb
xor
xchg
and
psubsw
leave
sub
xor
jo
inc
adc
sub
pop
fwait
xchg
out
in
scas
shrl
pop
std
jmp
mov
fistl
in
scas
imul
daa
popa
mov
cmpsl
fdivs
jnp
cld
call
dec
dec
idiv
adc
aas
or
dec
lds
xchg
push
mov
or
popf
push
shrb
inc
je
mov
and
xchg
arpl
testl
test
xchg
icebp
aaa
xor
jo
sub
ret
test
lds
inc
xor
dec
add
inc
and
int
shrb
xor
fcmovbe
arpl
xor
fs
gs
mov
pop
xchg
adc
cmp
xchg
adc
repnz
clc
cmp
mov
test
repnz
out
outsl
cmpb
mov
mov
into
sbb
sbb
daa
shlb
and
cmp
lods
and
movsl
cmc
pop
arpl
dec
and
out
fsubrs
cld
das
icebp
rorb
inc
pop
shrb
sub
adc
xor
ja
pop
movsb
add
imul
imul
scas
insl
add
dec
stos
add
adc
mov
fwait
mov
or
fmul
fsts
xchg
mov
adc
sahf
cmp
aaa
out
out
fbld
and
mov
push
movsb
mov
adc
or
add
add
pop
lcall
addr16
test
lcall
add
adc
sbb
lds
xor
lea
jge
pop
inc
lcall
orb
sub
std
and
sub
mov
lods
xlat
and
xlat
or
inc
call
das
out
cwtd
mov
cwtl
int
push
jbe
movsb
xor
sub
sub
adc
and
pop
sbb
add
push
jmp
sbb
test
mov
in
ss
ja
cmp
and
loop
cmpsl
lods
aam
hlt
sarl
jno
cmp
cs
xchg
add
sub
div
lock
fwait
jnp
mov
fs
int
mov
ss
cwtl
cltd
add
rcrl
movsb
jmp
test
sub
lods
out
mov
test
shrl
or
lods
push
jp
or
iret
inc
cmp
fmul
gs
cwtl
test
inc
shrl
xor
pop
mov
ljmp
fucomip
scas
hlt
xor
mov
dec
test
scas
mov
stos
dec
mov
roll
cmp
test
jg
lret
pop
dec
jmp
sbb
jge
jb
movsl
sti
movsb
clc
les
ficomps
into
incb
mov
sahf
into
iret
rclb
test
pop
pop
in
mov
popa
ljmp
mov
adc
js
sub
es
in
xlat
inc
movsb
and
fsts
mov
or
repz
push
push
popa
inc
stos
testb
inc
and
ret
std
mov
int
xchg
sub
pop
fst
scas
pusha
aaa
idivb
xchg
cmc
loope
lds
mov
out
jae
mov
clc
sti
inc
int
shrb
cmpsl
fwait
mov
adc
sub
dec
or
mov
xchg
xchg
push
jo
add
add
outsl
daa
insl
push
addb
addr16
sub
add
add
add
add
or
push
outsl
sbb
xor
cmp
mov
inc
into
sub
outsb
enter
loopne
sub
pop
bound
dec
pop
adc
fidivl
mov
sbb
loopne
mov
jae
inc
adc
popa
in
int
fdivrs
add
fdivs
pop
mov
rclb
adcb
scas
mov
mov
test
xchg
les
jp
add
jbe
mov
jge
pop
cwtl
push
hlt
xchg
xchg
push
mov
jecxz
add
in
fsubrs
sub
sahf
mov
xor
mov
dec
in
call
cmp
addr16
jno
jle
mov
into
cmp
negb
pop
mov
dec
add
loopne
into
stos
mov
xor
mov
push
fcompp
ss
or
fsubp
arpl
insb
push
movsl
rcl
mov
ror
shl
push
lods
adc
add
sub
stos
inc
jne
in
scas
xchg
push
pop
sbb
pop
stc
dec
lret
hlt
aam
add
jb
dec
pop
jne
push
add
scas
test
push
daa
mov
rcl
push
push
stos
mov
int3
std
fldl
jle
and
mov
or
mov
lds
inc
xor
rol
and
lock
mov
jp
mov
or
bnd
popa
imull
fwait
scas
fadds
cmp
jbe
add
rclb
ja
jns
enter
cld
jne
adc
ss
frstor
aas
push
mov
test
mov
adc
data16
dec
in
cmp
pushf
out
movsl
xchg
jno
aad
out
jbe
xchg
push
into
mov
mov
xchg
push
stos
and
mov
scas
sbb
lret
and
xchg
out
add
or
shrl
mov
jbe
dec
repz
add
inc
lea
and
mov
out
leave
enter
push
fwait
jo
enter
add
add
outsl
sub
push
jnp
loop
or
inc
push
test
mov
inc
clc
cmp
xlat
ss
sbb
fisubl
aam
sar
sbb
fstp
lods
loopne
xor
in
xor
cmovne
test
sub
iret
out
jo
xor
jb
addr16
sbb
cmpsb
pop
in
rorl
push
pushf
inc
decb
adc
aaa
test
add
test
cmp
fsubr
mov
mov
jo
jb
cmp
cmp
shl
int3
daa
popl
lods
and
mov
loope
push
mov
das
ror
jo
fwait
daa
xor
push
das
or
lret
fsub
orl
movsl
leave
stc
push
loopne
adc
pop
jno
movb
mov
lahf
mov
scas
mov
daa
push
shrl
cmp
pushf
movsb
or
fdivl
sub
sahf
pop
push
lret
mov
jle
fcoml
fbld
add
jle
sbb
into
popf
adc
loope
mov
and
iret
mov
inc
pop
inc
inc
test
dec
cmc
dec
pop
lds
gs
cmp
jno
stc
mov
test
stc
sbb
mov
pop
lret
and
lcall
ds
je
dec
lcall
push
gs
push
pop
push
lcall
pushf
js
pop
adc
imul
inc
pop
insl
pop
inc
inc
or
addr16
and
hlt
and
lea
out
mov
mov
movsb
shrb
cmpl
pusha
std
outsl
fstpl
sub
xchg
mov
scas
cmp
imul
cmpl
iret
jb
les
dec
aaa
lahf
adc
jne
ja
stos
jno
dec
sbb
aas
hlt
cmp
mov
inc
test
js
add
cld
add
add
outsl
fsubs
cmp
push
gs
ficompl
popf
cmp
or
insb
je
and
xor
inc
push
aaa
adc
jns
leave
fiaddl
add
jecxz
js
ljmp
aad
shrl
fucomi
insb
mov
pop
fpatan
icebp
daa
bound
bound
aaa
lret
dec
xor
imul
fnstenv
cmp
mov
out
icebp
pop
in
in
sub
lret
data16
imul
mov
jo
jp
and
ret
stc
adc
shll
xor
jae
cmc
add
in
jp
or
jns
js
test
add
mov
dec
lahf
addr16
and
in
fistl
fisubs
pop
in
sahf
test
into
loop
mov
push
in
mov
mov
push
pop
dec
iret
cli
fistps
cmp
sti
out
rorl
sub
pop
xor
mov
leave
sub
lret
test
dec
les
xchg
add
lock
leave
mov
decb
sbb
cli
sub
jne
inc
cmp
sbb
pop
fistpl
out
jmp
push
mov
lods
mov
lcall
ret
xchg
test
popa
xchg
dec
sub
loopne
cs
dec
shrb
mov
int
repnz
in
adc
scas
loop
xchg
fiaddl
pop
mov
pop
ja
daa
mov
in
mov
cmpsl
xchg
adcb
call
popf
cmp
loop
fs
out
mov
popa
jne
imulb
xchg
ss
pop
insb
and
fs
icebp
push
inc
divl
cmp
inc
inc
repz
dec
rorb
popf
sbb
fistpl
ret
sub
cltd
orl
xor
fisttpll
jnp
push
mov
stos
cmp
jle
dec
xchg
lea
push
ds
outsb
sbb
aam
dec
adc
je
add
cld
add
add
shlb
fldt
lds
call
out
xor
in
ret
int
out
pop
push
ret
les
les
mov
filds
cli
or
fcmovnbe
xchg
or
inc
mov
sub
push
daa
fiadds
jnp
mov
inc
cmpsl
in
cmp
sbb
roll
lahf
pop
jge
xor
pusha
scas
pop
test
sbb
inc
xchg
and
aaa
les
jp
xor
loopne
xchg
dec
jae
inc
es
adc
pop
cmpsl
cs
fistpl
popf
js
adc
in
pop
mov
cmc
nop
adc
mov
pop
mov
xchg
xor
sbb
add
into
pop
ljmp
stos
push
lcall
pop
out
mov
adc
sub
into
or
or
xchg
lods
std
mov
pop
mov
lods
imul
mov
mov
push
outsl
add
addr16
sub
dec
mov
xchg
imul
xchg
jmp
xor
movsl
ds
data16
aaa
mov
mov
pop
mov
push
mov
xorb
adc
pop
mov
jecxz
adc
xchg
stos
sub
test
dec
in
imul
and
pop
dec
jb
dec
jge
outsl
xchg
cmpsl
mov
jno
bound
sub
cmp
or
outsb
mov
push
fsubl
jp
gs
push
mov
mov
mov
ret
insl
js
dec
and
sbb
adc
push
das
hlt
mov
mov
push
addr16
dec
xchg
inc
and
mov
mov
mov
outsl
shld
pop
std
movsb
xor
out
mov
pop
dec
gs
jne
sub
mov
sub
add
add
mov
nop
dec
bound
fbstp
add
cld
add
add
int
pop
mov
pop
rcrl
mov
insl
cmc
lods
mov
pop
aas
rorb
inc
sbb
add
in
pop
or
out
fmuls
inc
ficoml
mov
sbb
adc
pop
nop
js
test
test
jp
jmp
push
adc
cmp
lcall
jecxz
dec
aad
xchg
sbb
xor
jns
pop
sub
adc
push
popf
pop
jo
pop
hlt
mov
repz
fimull
push
xchg
inc
cmp
add
rclw
loop
sahf
out
cmc
rolb
aam
pop
fists
xchg
icebp
mov
mov
in
aas
sub
mov
push
daa
jo
jo
stos
dec
sub
push
jne
dec
call
cmp
xchg
dec
mov
mov
dec
adc
lock
std
mov
inc
test
adc
push
es
in
xchg
mov
xor
sbb
xlat
add
icebp
or
add
ficompl
mov
cwtl
cli
je
sub
movsb
push
add
pop
mov
jno
sbb
leave
pop
xchg
lahf
xlat
enter
sahf
push
bound
jle
into
in
and
add
xchg
and
cmp
fdiv
mov
inc
test
adc
cmpsl
push
lods
iret
scas
lret
and
insl
or
in
push
xor
test
dec
cmp
or
sbb
mov
mov
ds
dec
test
les
push
je
and
das
inc
sbb
xchg
in
insb
dec
sub
dec
test
dec
pop
scas
fildll
rorb
dec
xchg
rolb
inc
xor
inc
insb
insb
push
mov
inc
inc
xor
dec
xchg
cmpsl
jno
cmp
cmpsl
lock
and
repnz
add
dec
inc
mov
in
dec
cmp
jo
mov
add
add
add
pop
and
dec
jg
stos
push
and
lods
add
fdivs
stos
push
mov
inc
scas
dec
pop
inc
cli
cmp
out
mov
dec
ja
push
xchg
scas
movsb
inc
xor
int
in
cmp
or
iret
mov
jg
adc
mov
sahf
xchg
fidivl
cmp
js
jne
dec
es
mov
call
sbb
dec
in
icebp
push
mov
mov
dec
push
sbb
push
cli
test
xor
cmp
out
out
fwait
mov
mov
jmp
xor
sahf
outsl
cmc
lret
inc
mov
subl
and
fidivs
sub
imul
stc
lods
xor
out
mov
mov
dec
mov
js
jecxz
mov
cwtl
arpl
pop
lcall
hlt
fcmovbe
dec
xchg
inc
and
popf
lret
or
xchg
cmpsb
jae
push
cld
mov
jmp
aad
pop
bound
jae
adc
fwait
repz
mov
fcmovnbe
jne
lock
je
xor
cltd
std
or
insl
es
mov
sbb
cli
pop
repnz
and
jg
mov
push
sbb
jnp
js
stos
popl
stos
or
aad
insl
and
inc
mov
lds
addr16
bnd
leave
aad
mov
mov
and
push
pop
in
inc
stc
jmp
or
push
sti
jmp
and
pop
sub
sti
je
cmp
fs
pop
out
in
ljmp
sub
scas
mov
adc
push
sub
mov
mov
divl
jne
mov
and
mov
lret
stc
push
cltd
je
jle
inc
adc
dec
les
add
stos
jo
dec
cli
fldcw
insl
or
pop
push
add
add
or
and
loope
mov
mov
fldcw
xor
pop
les
ja
repnz
jno
mov
lock
jmp
popf
sub
mov
dec
xor
mov
enter
stc
repz
mov
pop
and
push
scas
lods
mov
cwtl
sbb
jmp
lods
shlb
inc
loope
adc
loope
movsb
xchg
addr16
xor
inc
pop
lret
adc
out
add
xchg
pushf
inc
pop
js
cs
mov
pop
cltd
imul
pop
dec
test
push
jbe
js
mov
inc
pop
pusha
popf
or
fsubl
ret
dec
in
push
xchg
out
jno
jo
shrl
jp
int3
lds
loope
jbe
xor
iret
mov
out
mov
push
das
ret
inc
or
cmc
pushf
push
andl
je
test
pop
jecxz
sbb
jo
invd
stos
shlb
stos
xchg
ss
das
aas
push
lock
xchg
stc
stos
mov
sub
mov
pop
jecxz
cwtl
jns
cmp
sbb
pop
repnz
ret
jne
imul
adc
mov
aas
addb
jmp
out
dec
mov
and
shl
invd
and
add
sti
push
bound
call
out
xorb
dec
xor
aad
mov
and
mov
pop
lret
outsb
gs
not
sub
pop
pop
inc
fs
lret
fistps
jb
ret
in
adc
mov
sub
cli
push
addr16
hlt
sbb
mov
nop
sbb
jmp
xor
call
mov
xchg
pop
lods
mov
outsb
mov
dec
mov
pop
xchg
pop
lret
mov
lock
jno
out
in
jmp
add
dec
xchg
pop
xchg
outsb
dec
lock
add
add
add
add
fsincos
aam
pop
stos
and
sub
out
sbb
mov
cmc
jmp
xchg
mov
dec
push
push
cmpsl
insl
xor
or
sbb
jns
push
stos
leave
mov
mov
into
mov
pushf
push
xor
cltd
lock
into
scas
sahf
xchg
sub
out
bound
fisubrl
es
sbb
test
xor
push
xor
pop
lods
fisttpl
lock
pushf
push
xchg
sahf
sub
cmp
stos
push
xchg
push
cltd
push
sub
xchg
adc
rol
inc
sub
jb
mov
fdivl
adc
inc
mov
inc
cltd
imul
jmp
add
jmp
aaa
mov
mov
lahf
loopne
push
jns
int
cmp
or
inc
fldenv
dec
or
inc
lods
push
jge
std
mov
lret
inc
outsb
xchg
divl
daa
enter
imul
cltd
dec
fisttps
enter
dec
sti
sbb
popa
adc
arpl
leave
cmp
out
dec
sbb
ficomps
aam
daa
lock
arpl
in
mov
std
js
mov
movsb
mov
adc
push
adc
or
mov
push
push
push
fldl
stos
icebp
push
mov
and
ds
or
mov
ret
rcr
cmp
xchg
sahf
leave
dec
je
mov
ja
iret
mov
cmc
and
cs
insb
sbb
push
and
aas
sub
ds
pop
push
loopne
fistpll
jmp
dec
xor
sahf
cli
popf
mov
aas
bound
sbb
jp
add
xor
prefetcht2
push
jns
push
dec
mov
fxch
jmp
push
mov
fistps
cmp
cmp
jne
or
dec
mov
sub
sub
pop
ret
add
cld
add
add
addr16
push
push
mov
jecxz
push
push
jle
xor
and
jb
push
lods
mov
push
insl
jb
test
inc
xchg
mov
in
mov
in
mov
jbe
push
addl
clc
outsl
incb
andl
into
rcrb
in
cmpsl
pop
std
in
rclb
out
fdivrl
imul
push
push
in
cs
arpl
mov
jns
repz
inc
imul
jle
mov
out
data16
andb
mov
sub
std
out
jno
or
push
addr16
push
icebp
int3
inc
mov
or
scas
pandn
adc
clc
add
or
xor
sahf
std
outsl
adc
fldcw
push
fwait
aad
lcall
mov
repnz
cmp
mov
aad
outsl
inc
fistl
clc
gs
mov
mov
cmpsb
and
pushf
jl
imul
into
test
inc
popa
mov
lret
adc
adc
fstps
jle
jmp
mov
lahf
in
add
push
fstps
mov
push
lock
sub
push
and
sarb
jns
das
sub
dec
inc
aas
rcrl
mov
mov
cmp
cmpl
add
sbb
cmp
ror
sbb
iret
leave
shl
xchg
cmp
push
cmp
xchg
dec
std
ret
cmpsb
aaa
xchg
xchg
ret
or
dec
idivb
mov
lea
mov
movsb
push
call
cli
lods
mov
sub
mov
mov
mov
mov
mov
jnp
out
push
ss
loop
mov
lcall
add
imul
add
arpl
test
ljmp
popf
jne
pop
mov
xchg
add
add
and
dec
repz
fldt
test
add
add
add
and
sbb
imulb
fsts
gs
or
push
dec
in
or
ja
cwtl
push
imul
cmp
movsb
iret
jb
in
jmp
jne
adc
pusha
in
mov
push
xchg
inc
sti
pop
cmp
outsl
cmpsl
cmpsl
faddl
cld
cmpsb
mov
pop
mov
outsl
dec
ds
inc
xor
jmp
daa
mov
or
mov
cli
clc
dec
mov
divb
and
jp
add
inc
xchg
or
pop
popa
pop
sarl
add
sahf
insl
sbb
stos
adc
es
mov
add
pusha
add
fwait
mov
push
mov
jb
test
xlat
shll
cmp
dec
sbb
mov
rcll
xchg
mov
aad
cmc
faddl
pop
and
adc
cmpsl
sbb
addr16
inc
mov
nopl
ja
inc
cld
and
cmpsb
inc
sbb
mov
or
out
xor
jp
xor
aam
sub
push
adc
sub
sub
ds
out
xor
int
pushf
or
inc
dec
ss
lea
sbb
xchg
pushl
or
mov
jo
sarl
aad
push
les
pop
outsb
or
rolb
shrb
xor
add
pop
outsb
dec
repz
cmpsb
add
mov
lods
inc
sbb
pusha
dec
adc
in
stos
xchg
cwtl
dec
shll
or
std
ret
adc
fisttpl
sbb
hlt
data16
mov
test
pop
mov
mov
lods
iret
mov
int
sub
mov
scas
jnp
loopne
push
je
jecxz
mov
adc
das
mov
xor
test
faddl
test
dec
mov
add
add
lcall
sar
dec
aad
pop
fiaddl
add
add
add
push
add
aaa
jge
add
or
test
orb
fsubs
icebp
or
add
daa
adc
shrl
adc
aam
mov
out
xor
jo,pt
mov
popf
sbb
jno
or
insb
add
movsl
xchg
pandn
mov
and
pop
loope
pop
sub
sahf
in
dec
int
mov
loope
jnp
ss
mov
pop
dec
cmpb
or
sub
nop
pop
rcrb
mov
iret
add
jecxz
fdiv
lcall
adc
pop
mov
fistl
dec
mov
cmp
sbb
sti
cltd
or
cltd
pop
xchg
inc
add
cmpsl
js
fwait
mov
pop
sbb
filds
dec
xor
in
xchg
ss
movsb
cwtl
imull
xchg
cwtl
mov
sub
stc
rol
push
xchg
jg
or
sbb
dec
popa
dec
sbb
mov
insb
jl
mov
movsb
dec
mov
mov
movsb
or
dec
xor
push
xchg
sub
fcoms
lods
loope
cmp
and
fdivrl
inc
sbb
rcrl
push
mov
scas
sahf
and
icebp
xchg
add
adc
xchg
pop
mov
dec
jbe
mov
jp
sti
int3
jmp
add
adc
loop
jno
add
aas
ss
jno
xchg
or
push
cmp
lods
pop
in
filds
sub
or
cwtl
fwait
push
inc
xchg
aam
xchg
icebp
mov
ror
sbb
data16
pop
shl
cmc
aas
and
adc
push
xchg
int
jae
sahf
ljmp
cld
scas
ret
repnz
movsl
and
mov
js
xchg
int3
adc
lcall
sbb
mov
mov
scas
xor
fs
sarb
or
pop
mov
sub
xor
or
rolb
dec
idivl
jg
inc
xor
add
add
add
jo
aas
in
xor
dec
xor
jmp
push
push
pusha
outsb
sub
sbb
or
xchg
cmp
mov
ret
mov
push
push
scas
adc
mov
jne
lods
aam
add
aad
mov
in
rorl
and
jl
in
ret
gs
stos
xchg
mov
out
push
cwtl
sub
loope
aaa
scas
jge
jmp
loop
scas
sbb
cmp
mov
in
cmpsb
les
pushf
mov
mov
mov
mov
sub
and
sbb
stos
movsl
cwtl
shll
insb
add
ret
jnp
or
call
hlt
pop
mov
lea
les
nop
lock
cmp
scas
pop
mov
push
out
ret
movsb
mov
cmp
outsl
xchg
jno
cmpsl
push
cld
sub
in
out
mov
ja
mov
mov
jl
adc
sbb
mov
and
inc
push
fnsave
jo
or
mov
push
icebp
imul
mov
fwait
js
dec
add
pop
in
cmp
inc
push
test
sub
and
call
sbb
jne
jb
and
int3
ja
icebp
cmp
cltd
cmpb
xchg
jl
ljmp
adc
loop
loop
and
int
add
nop
stc
scas
subl
lret
movsl
push
pop
xlat
dec
negl
rorl
xchg
lds
cmp
mov
or
sbb
xlat
mov
mov
adc
push
popf
xor
push
add
fxch
or
sub
repz
rcll
mov
jl
ljmp
iret
jns
mov
dec
mov
subl
mov
call
mov
push
in
jle
push
fiadds
add
add
add
scas
lods
jo
pop
add
data16
pop
push
xchg
ja
mov
sub
icebp
mov
jo
data16
in
push
xor
bound
push
out
shlb
xchg
scas
mov
dec
mov
add
adc
sbb
icebp
pop
inc
movsl
ljmp
hlt
sbb
ret
subl
mov
sub
les
cmp
jno
mov
fnstcw
sti
push
mov
aam
fstl
repnz
out
inc
fisubrs
sub
jle
fwait
adc
lret
pop
mov
or
ret
es
loopne
or
sarb
mov
stos
sbb
mov
sub
xchg
lret
rep
sub
jne
arpl
int3
inc
scas
xchg
mov
inc
pop
hlt
mov
sti
or
pop
lods
dec
xchg
inc
sbb
jnp
mov
outsb
sub
mov
in
test
sub
stos
push
and
hlt
movsl
or
cltd
adc
xchg
cmp
dec
mov
push
xor
sbb
enter
aad
scas
loopne
outsl
push
sub
dec
xchg
jl
scas
jl
or
repz
xchg
gs
jle
arpl
ss
roll
cwtl
pop
xor
push
or
adc
in
into
stos
ja
repnz
outsl
out
mov
pop
push
out
stos
lret
xchg
push
jecxz
out
mov
lea
ds
mov
xor
adc
jg
clc
inc
sub
les
insl
sti
pop
mov
pop
into
xchg
and
ja
or
jno
sahf
mov
ret
pop
in
push
mov
es
sbb
in
stos
lret
dec
inc
push
xchg
adc
fmull
jnp
jne
push
cmpsl
ss
cwtl
push
cli
je
dec
inc
in
loopne
jmp
xchg
in
loope
push
adc
push
jg
outsb
mov
fcompl
or
xchg
or
sbb
loopne
add
add
add
dec
movsl
clc
mov
pop
repnz
sbb
sahf
or
or
or
jne
mov
clc
shlb
rcr
cmc
add
mov
mov
out
pop
mov
push
imul
movb
sub
loope
xchg
stos
cmp
inc
mov
insl
jl
stos
fldl
sbb
daa
fiadds
cmc
iret
cmpsb
mov
jne
repnz
adc
push
xchg
arpl
push
sahf
cmpsb
sti
sbb
iret
push
jge
adc
lock
pop
mov
popf
inc
mov
inc
cltd
mov
stos
in
inc
push
lcall
jo
pop
pop
daa
jno
push
jbe
and
dec
hlt
insb
jmp
stos
lret
add
and
jmp
cs
xlat
jb
jmp
push
mov
fistpl
push
in
add
sub
inc
inc
fiaddl
test
mov
add
arpl
dec
stos
xchg
imul
or
fsubrl
jg
lods
sahf
push
test
adc
test
lcall
cmpsb
add
or
cmp
mov
test
ret
adc
movsb
pop
inc
mov
mov
mov
xlat
movsl
cmp
sub
je
jg
iret
xor
sbb
loopne
outsl
adc
pop
fimull
sahf
xchg
dec
pusha
mov
xchg
fadds
dec
dec
cwtl
in
mov
movsb
sbbl
mov
mov
stos
xchg
aad
out
std
jecxz
imul
mov
gs
cmc
xchg
pop
sub
je
out
lcall
dec
sbb
daa
rcll
je
xchg
divb
inc
aaa
jne
inc
aas
lods
inc
xchg
orb
dec
daa
sub
or
push
inc
enter
rolb
icebp
jns
mov
lock
pop
loopne
adc
add
add
pop
sbb
cli
inc
cli
mov
jl
in
dec
loop
add
add
add
sbb
inc
mov
ds
pusha
movsb
push
sar
fs
or
xchg
in
jle,pn
test
out
push
mov
icebp
xchg
lret
push
xchg
push
scas
lret
test
xchg
cmp
mov
xchg
fldenv
add
flds
push
outsl
mov
decl
cmp
mov
aad
push
adc
pop
shll
shrl
push
push
xor
xchg
dec
pop
cmp
fld
xlat
jge
sarl
adc
and
test
add
inc
xor
xlat
movb
popa
ds
out
ret
mov
int
xor
sbb
nop
repnz
xchg
imul
lds
and
loop
pop
mov
push
sarb
sub
or
push
xor
stos
dec
negl
les
jo
sub
mov
ss
inc
gs
ret
gs
push
pop
lret
mov
rol
loop
mov
imul
xchg
stos
mov
cmp
pop
enter
stc
mov
mov
mov
test
or
inc
pop
xchg
stc
inc
and
scas
sar
insb
inc
lret
int3
cmpsb
pop
fildll
cmp
adc
and
mov
into
mov
cmp
mov
or
out
push
ds
mov
pop
xchg
repz
pushf
sbb
xchg
inc
ss
cs
and
cmpsl
and
cmp
push
cmp
fsubs
rol
cld
and
pusha
in
in
andl
sub
dec
mov
xchg
cmp
inc
inc
fmuls
aas
repz
pushf
xlat
inc
fdivs
jbe
xchg
push
cmp
push
andb
mov
mov
lock
cmp
psubq
and
ret
dec
arpl
popa
je
add
jns
mov
adc
add
add
ja
out
push
lahf
lcall
add
add
add
ja
lret
lods
inc
mov
fwait
jge
add
mov
gs
popf
pushf
xchg
jle
outsb
cmp
xor
fs
arpl
cmp
cltd
pop
pop
out
inc
aas
shl
mov
dec
into
inc
cmp
mov
xchg
xchg
clc
push
js
bound
subb
adc
xor
add
mov
lock
sbb
add
ret
mov
xchg
lea
sbbl
dec
testb
xor
sahf
push
sbb
adc
sub
sbb
sbb
or
inc
adc
data16
and
les
jmp
mov
ljmp
movsb
mov
mov
das
push
pop
or
fs
mov
jns
add
fidivl
cmp
pop
or
sti
mov
int
inc
jns
pop
out
sahf
push
arpl
gs
enter
add
stc
inc
mov
mov
inc
out
iret
sub
mov
push
aaa
mov
or
and
sub
jbe
scas
aad
xchg
gs
mov
out
xor
test
fcomps
or
pop
sbb
cmp
xor
pop
xchg
add
pop
popf
lock
dec
ret
jge
adc
push
insl
xor
pop
jge
fscale
in
sub
fwait
push
fs
ljmp
adc
mov
xor
aam
xchg
adc
shrb
push
jne
pop
imul
push
test
push
movsb
dec
je
inc
jne
xchg
push
mov
xchg
jb
cld
xor
das
inc
fcompl
inc
out
out
ds
imul
mov
xor
sbb
mov
icebp
inc
mov
add
rcll
jmp
mov
stos
inc
out
add
add
add
mov
js
test
ljmp
push
ss
rcll
adc
push
dec
je
adc
or
sbb
aaa
mov
std
mov
addr16
sahf
pop
aad
fwait
ret
mov
arpl
dec
sbb
insb
test
mov
pushf
push
aaa
or
sarl
adc
stos
adc
addr16
mov
jmp
dec
push
push
outsb
imulb
mov
pop
pushf
jp
xchg
cs
mov
cld
sbbl
xor
pop
rorb
mov
imull
cmp
dec
insb
stos
mov
and
sahf
cmp
pop
pop
push
jbe
fldenv
mov
jecxz
mov
lret
cmp
jb
jl
xchg
dec
mov
cmpsb
js
popf
adc
lds
mov
cmp
push
xchg
scas
xor
pusha
lret
outsb
jbe
sub
xchg
mov
fldcw
or
pop
dec
inc
fsts
fbstp
cmpsl
inc
push
jg
adc
ret
add
movsl
data16
mov
aaa
jecxz
sbb
push
fimuls
jle
in
pop
pop
push
dec
mov
cwtl
cmp
test
mov
ss
and
jno
push
fiadds
rorl
leave
xor
js
loop
les
mov
mov
jmp
mov
or
cmpsl
repz
fiaddl
jae
adc
xor
xchg
rcrb
roll
insl
iret
or
sub
push
inc
jmp
mov
out
es
dec
hlt
mov
pop
test
fmull
adc
xchg
adc
rorl
hlt
ret
popa
add
outsb
mov
mov
adc
mov
pop
mov
add
negb
mov
fmul
mov
add
cld
add
add
data16
out
or
xor
push
inc
jle
add
jae
inc
add
ds
imul
das
jmp
cmp
xorl
icebp
push
roll
sub
xchg
lods
loopne
adc
sahf
fldl
lock
in
mov
jbe
sub
or
jp
aam
mov
push
data16
sub
xor
cmpsl
je
add
imulb
rep
in
inc
addr16
pop
jmp
fdivr
pop
sub
rol
xor
xchg
pop
pop
sbb
nop
shl
dec
clc
icebp
add
sbb
outsl
pop
sub
sbb
xchg
pushf
sbb
or
pop
int3
incl
enter
cmp
cltd
add
test
loop
mov
scas
push
out
hlt
pop
mov
add
in
sbb
add
mov
aas
fmuls
xor
and
mov
xchg
dec
xor
int3
outsb
outsb
xchg
fwait
cwtl
push
enter
out
inc
mov
push
jp
and
xchg
push
rcll
xchg
xchg
fcoms
mov
push
xchg
je
loope
fiadds
mov
inc
fimull
jo
orl
xor
sbb
cwtl
xchg
rcrb
jnp
int
and
mov
mov
jmp
or
push
lock
lds
int
call
dec
addb
mov
int3
and
sbb
jg
ss
push
push
movsb
and
je
test
nop
jmp
sahf
pop
xchg
mov
loope
adc
mov
pushf
imul
cmp
pushf
or
ret
or
mov
dec
sbb
xor
cmp
filds
mov
jl
cli
into
mov
push
push
jnp
outsl
jno
dec
sbb
add
cld
add
add
popf
punpcklwd
popf
rorb
lods
fs
aad
std
cmp
lret
inc
xchg
jno
adc
movhps
inc
sub
pop
mov
or
adc
mov
pop
call
xchg
dec
loope
xor
and
ret
data16
ret
je
mov
faddl
xchg
push
mov
inc
test
sbb
enter
or
mov
sub
sbb
cmc
out
xchg
inc
test
xor
sub
fsub
jmp
or
movb
mov
es
out
in
or
or
rcrb
enter
jmp
mov
negl
lds
ja
jl
movsb
call
shlb
adc
jl
repz
ret
psubusw
or
push
aas
shlb
sub
xchg
fldcw
sbb
mov
in
ljmp
push
jo
xchg
mov
test
mov
stos
in
xchg
std
ljmp
push
mov
mov
sbbb
dec
mov
scas
mov
nop
dec
mov
and
or
mov
imul
mov
fldt
xchg
shll
sub
lods
dec
test
lds
mov
mov
test
mov
fdivrs
orl
int
mov
mov
scas
jmp
sub
enter
mov
add
add
xor
mov
ljmp
frstor
fcmovne
cmp
jge
icebp
dec
jp
sub
inc
stos
push
fwait
in
dec
popf
ss
xchg
das
cmp
hlt
push
pop
pop
out
mov
add
cltd
enter
mov
stc
popf
loop
mov
in
add
cld
add
add
movsl
sub
stos
ret
jmp
pop
rcl
in
push
mov
mov
sub
sbb
xlat
lahf
aas
fstpt
push
xor
int3
ss
sbb
out
sub
and
sbb
push
leave
fiadds
lea
add
outsb
loop
fmulp
inc
fisubs
xchg
dec
mov
stc
neg
repz
xor
add
add
or
jns
ret
arpl
test
sbb
cmp
in
lds
int3
cli
jl
jns
arpl
mov
das
mov
lret
icebp
ljmp
test
mov
mov
dec
push
xorl
dec
mov
push
push
ret
cli
xchg
inc
and
and
sbb
sub
arpl
insb
pusha
sub
sbbb
shll
repnz
stos
lret
xor
in
leave
das
push
mov
cmpb
add
sbb
ja
in
mov
jno
xchg
xchg
or
dec
cpuid
cmp
push
lahf
cmp
cs
xlat
mov
pop
jno
jb
jle
lods
and
mov
cmp
pop
out
stc
addb
sarb
jmp
aas
mov
enter
inc
gs
shll
cmp
or
lock
into
add
in
jnp
loope
mov
dec
outsb
sub
shll
inc
arpl
aam
aad
mov
out
dec
in
sub
sbbl
jns
xchg
cmp
lahf
lcall
xor
sub
pushl
cmp
movsl
lcall
cld
nop
mov
mov
pop
ljmp
cmpsl
and
aad
insb
mov
lea
pushf
push
mov
pop
push
jp
ret
insl
in
push
addb
add
jns
sbb
jge
and
dec
sahf
and
fs
add
cld
add
add
add
div
xchg
adc
stos
imul
scas
or
jno
jmp
imul
cli
pop
dec
cwtl
and
jg
sahf
nop
xchg
mov
inc
lock
dec
es
repnz
bound
es
sbb
push
daa
pop
into
leave
push
dec
sub
xchg
popl
and
scas
into
and
ret
jo
pop
popa
lret
or
andb
call
adc
pop
cltd
mov
xor
pop
inc
enter
clc
out
pushl
pusha
adc
and
push
mov
aad
nop
int
popa
sub
arpl
sbb
imul
push
movsb
jo
inc
and
sub
jge
jmp
push
ljmp
dec
push
dec
icebp
pushf
lods
aaa
shrb
repz
mov
adc
inc
cmp
fs
and
cltd
dec
outsb
ficompl
fmulp
jae
shl
cld
mov
or
cltd
int3
mov
es
mov
and
mov
jmp
xchg
xchg
push
shlb
pushf
mov
and
movsb
pop
pop
inc
push
and
outsl
lret
or
hlt
test
jo
cmp
dec
mov
out
sbb
shl
daa
sbb
pop
mov
push
pushf
rolb
mov
addr16
jb
cltd
push
push
adc
lea
stos
adcb
gs
xchg
les
lods
rorl
movsb
outsl
in
or
mov
nop
fs
xor
jmp
popa
fsubrs
pop
cmp
dec
ret
loop
movsb
scas
arpl
jnp
ss
sbb
cmp
je
xor
lahf
xchg
fiaddl
add
imul
addb
mov
inc
xor
cld
repnz
lret
mov
mov
and
pop
add
inc
fcmovnb
fstpl
arpl
int
sub
add
cld
add
add
aaa
imul
lods
rolb
add
leave
lea
mov
shlb
inc
push
dec
lods
rcrb
mov
or
shrb
dec
cmp
or
out
xor
mov
sti
inc
mov
or
dec
add
iret
lret
aas
xor
fmull
mov
repnz
lods
dec
es
cli
popf
rorl
imull
out
in
sbb
rorl
mov
xor
push
sub
mov
incl
adc
push
jns
cmp
jg
or
dec
in
ss
imul
ja
fucomip
sbb
dec
sbb
fs
jnp
adcb
pop
rcl
mov
cmpsl
fwait
jecxz
in
or
mov
push
xor
push
cmpsl
jge
cmp
cmp
mov
arpl
sbb
scas
jbe
or
loopne
and
out
xchg
cwtl
jg
or
mov
in
add
inc
and
lods
sbb
roll
cli
mov
xchg
cmpsl
les
mov
mov
adc
lock
adc
in
out
sahf
in
les
fdivrl
lock
out
test
lods
mov
mov
std
pop
fisubs
or
jns
lds
daa
xchg
lahf
mov
lcall
xlat
xor
movsb
mov
jno
dec
push
imul
je
scas
pushf
lahf
js
sbb
insb
mov
fwait
test
in
jl
mov
bound
out
mov
mov
outsl
out
mov
mov
addr16
dec
push
or
jns
pop
movl
xor
push
cmp
sub
jne,pt
andl
add
add
daa
pushf
cli
mov
xchg
out
cltd
aaa
xchg
popf
fisubrl
repnz
cld
add
add
dec
addr16
stos
xorl
sbb
sbb
test
lahf
data16
notb
loop
lods
jge
dec
insl
insb
addr16
cmpsl
jecxz
xor
js
lret
imul
test
lcall
sbb
shrb
gs
sbb
push
iret
sahf
ret
sbb
bound
insb
sub
iret
adc
pushf
mov
push
adc
std
pop
pop
dec
movsl
ret
adcl
je
and
adc
in
test
mov
scas
mov
std
fistpl
test
in
ja
aam
and
cmp
shr
mov
test
mov
xor
lods
jbe
mov
nop
adc
les
enter
inc
fstpt
jge
ss
jl
lcall
jl
into
or
testl
mov
and
js
outsl
in
sti
sahf
jecxz
fsubrs
dec
jb
pushl
jb
icebp
jg
movsl
je
cli
ss
stc
sbb
arpl
mov
loop
mov
in
in
push
dec
mov
and
popa
imul
push
cmp
lea
mov
pop
cmp
xor
jo
push
imul
les
dec
inc
loopne
lds
mov
sub
out
mov
adc
jnp
mov
movsb
add
iret
push
rolb
push
mov
mov
pop
xlat
sbb
xchg
jmp
fadds
repz
and
pop
sbb
insb
es
lret
mov
outsb
push
call
sahf
pop
dec
rep
lret
pusha
inc
xchg
test
sbb
ret
inc
and
sub
pop
lock
shll
aam
mov
xchg
push
lcall
leavew
and
inc
sahf
push
and
add
cld
add
add
fwait
inc
or
mov
cmp
jg
in
sbb
dec
jns
cmpsb
aaa
xchg
test
add
xchg
mov
imul
fsubs
fsubr
cld
xor
ror
test
and
aaa
mov
je
orl
icebp
lea
push
and
sbb
shll
lock
test
dec
fdivl
roll
pop
mov
sbb
xchg
test
sub
enter
mov
subb
add
fwait
in
shlb
in
cltd
push
pop
imul
and
fs
mov
je
out
xor
aas
pop
xchg
sub
addr16
in
lock
addl
lret
inc
lock
leave
icebp
push
or
and
loop
and
iret
loop
scas
xchg
imul
sub
insb
ret
inc
pop
das
loope,pt
addr16
or
sub
xor
mov
pop
xchg
outsl
fnstenv
jno
enter
jmp
int3
pusha
push
cmp
fs
and
cwtl
mov
dec
xor
fimuls
rcr
lock
and
xchg
je
push
inc
mov
pushf
xlat
xchg
mov
and
mov
ret
jns
push
scas
int
rolb
data16
popf
repnz
testl
outsb
cmpsb
mov
and
jno
clc
xchg
and
jge
inc
das
add
outsl
ja
mov
mov
mov
into
rcll
push
test
je
sarb
ret
pushf
lock
lcall
mov
bound
xchg
rclb
nop
jb,pn
xchg
repnz
push
or
adcb
repnz
movsl
pop
cmc
push
shlb
sub
cld
jle
add
add
iret
cmc
sti
pushf
and
push
arpl
add
cld
add
add
sbbl
popf
mov
mov
xchg
ret
mov
lcall
add
mov
nop
mov
ds
out
sbbl
push
jne
jge
add
movsl
repz
and
lahf
adc
cmpsb
mov
jmp
jnp
shll
sahf
jne
sahf
dec
call
mov
sub
mov
adc
movsb
mov
in
mov
push
mov
in
movsl
iret
dec
cltd
add
adc
enter
xor
std
fsubl
fsts
xchg
sub
pop
dec
call
psubq
push
add
and
repnz
cmp
jmp
sub
or
xor
xor
cmc
fmuls
add
sbb
outsb
ret
xchg
ds
repz
je
add
xor
and
sbb
cmp
push
adc
shrl
ret
push
inc
cmp
fcoml
sbb
inc
jb
or
pop
jle
sbb
cs
adc
idivb
xor
insl
mov
pop
sub
jl
jb
test
mov
test
dec
popf
scas
push
xchg
push
in
scas
mov
int
stc
cs
inc
into
adc
aam
cmpsl
roll
dec
pop
test
cmovbe
lea
push
mov
cmc
sub
mov
std
or
pop
ret
jl
jp
loope
ss
add
pop
hlt
pop
sub
sub
mov
xlat
lret
pop
mov
ljmp
mov
lret
fcmovnbe
xor
pusha
sahf
xchg
pop
cli
icebp
loope
xchg
push
sti
ret
loop
jle
fs
pop
pop
mov
out
cmpsl
lods
shrl
movsl
repz
xchg
pop
xchg
std
pop
pop
mov
add
add
add
add
cmp
stc
jl
stc
jne
push
pop
lret
add
in
add
sub
and
push
xchg
out
xchg
ljmp
fnstenv
out
jnp,pt
jmp
sbb
aam
xor
sub
adc
jmp
data16
or
jne
mov
jnp
sbb
xlat
sub
push
pop
dec
xchg
aas
jg
test
int3
push
mov
std
mov
imul
inc
in
outsl
jecxz
aam
inc
pop
sub
jae
add
and
dec
xor
decb
add
mov
sub
adc
and
in
or
call
and
xchg
mov
sbb
cs
or
out
mov
add
push
es
shlb
or
in
xchg
fsubl
ss
pop
push
or
or
xor
movsb
mov
sbb
enter
cmp
jno
cmc
cs
or
aam
or
arpl
push
lret
jns
daa
xor
ror
jge
add
or
xchg
nop
push
enter
lea
mov
and
aas
xor
stc
or
shlb
cmpsb
scas
das
xchg
repnz
mov
iret
roll
jb
dec
dec
push
mov
insl
cwtl
lahf
xchg
push
inc
pop
lock
adc
jae
push
add
movsl
push
adc
paddsb
or
sbb
ds
jp
out
xchg
mov
call
insb
out
jbe
inc
pop
and
sahf
ret
scas
sub
mov
jmp
int
sub
adc
dec
outsb
push
sub
jo
ljmp
and
sub
hlt
iret
mov
mov
push
cmp
add
