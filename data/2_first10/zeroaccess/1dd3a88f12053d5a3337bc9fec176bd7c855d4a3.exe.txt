mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
and
mov
push
add
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
mov
inc
xor
or
mov
fs
mov
fwait
mov
pusha
fcmovb
and
aad
lahf
iret
and
sarl
push
or
je
shlb
fwait
ljmp
mov
cmp
xchg
call
xor
cmpsb
add
mov
mov
jnp
jp
pop
inc
sbb
lds
mov
imull
addb
and
lahf
and
inc
fidivs
imul
pop
jno
jmp
dec
pop
sti
sarb
mov
jno
jb
dec
jns
fsts
and
lea
gs
xchg
scas
push
dec
movaps
mov
mov
mov
lahf
sub
les
scas
inc
scas
fsub
test
pop
imul
popa
inc
mov
lcall
popa
xchg
mov
out
jb
or
stos
add
insb
xor
push
jmp
xlat
cld
out
sub
loopne
mov
jne
sub
in
scas
dec
testb
test
mov
inc
pushf
flds
cmp
mov
sub
int3
mov
jecxz
sub
adc
mov
mov
xor
mov
pop
out
scas
scas
fwait
adc
js
mov
jp
loop
push
fldcw
mov
inc
ss
mov
xchg
push
push
popf
lock
add
and
mov
xchg
mov
lret
cmc
cmpsl
xchg
dec
cwtl
imul
cmpsl
movsb
mov
aaa
movsb
jle
cmp
cwtl
out
sbb
inc
mov
imull
test
call
lcall
jg
scas
push
mov
cld
cmc
mov
mov
pop
mov
scas
or
dec
add
or
popf
incb
fs
enter
pop
enter
clc
sbb
aas
mov
sti
out
ja
xor
adc
jno
xchg
fsub
xor
add
or
syscall
add
mov
inc
ret
out
add
ja
mov
in
jge
int
int3
pusha
aaa
add
jl
mov
into
pop
cmp
call
call
fidivrl
test
mov
or
pushf
jp
adc
bound
out
insb
fcompl
pop
inc
lock
fdivrs
mov
cltd
push
out
cmp
sbb
in
push
jg
pop
clc
enter
xchg
sbb
xchg
mov
xchg
and
roll
out
mov
cmp
push
ret
leave
inc
pop
xchg
push
mov
pop
xor
addr16
sub
xor
jecxz
mov
shufps
cmp
mov
jmp
aad
gs
pop
stc
add
ficompl
outsb
ljmp
mov
fldl
cmpsl
mov
jle
xchg
lods
pushf
notb
push
jb
cmp
out
jne
mov
mov
xchg
adc
adc
mov
cmp
pushf
lods
xchg
roll
ljmp
adc
mov
xlat
jl
sbbl
cs
inc
pop
testb
dec
in
test
xor
in
lock
fistps
pop
cli
rcrb
in
mov
xor
test
pop
add
jnp
mov
and
hlt
and
push
stc
jno
out
mov
dec
fs
loopne
and
gs
sub
xor
clc
dec
cmc
loope
popa
sbb
not
mov
xchg
xchg
mov
decb
sbb
mov
pusha
mov
mov
xchg
cs
jge
dec
dec
mov
shl
sti
mov
jo
pop
mov
xchg
fldt
sarb
adc
nop
jmp
push
or
test
mov
cwtl
cmc
insb
icebp
roll
sub
cmp
add
das
sbb
mov
scas
push
push
addr16
shl
jo
int3
jns
jae
es
cltd
divl
lods
cmc
lds
mov
repz
js
jl
jge
call
bound
lods
xchg
lahf
mov
dec
or
cmp
lea
insl
pop
and
and
mov
pushf
and
inc
rolb
and
and
mov
cs
pop
jno
xchg
jp
idivb
scas
sub
jno
and
inc
cmp
mov
pop
jno
add
inc
inc
pop
fisubs
fdivrp
pop
inc
imul
pop
out
cmp
push
sub
cmp
sbb
lret
sbb
ret
leave
fimuls
aas
adc
jb
mov
sub
mov
dec
outsb
cmp
cld
shll
xchg
push
loopne
dec
stos
sbb
jne
dec
jnp
js
shl
inc
fadd
ljmp
cwtl
pop
fs
cmp
into
nop
idivl
dec
in
pop
xor
mov
out
dec
mov
mov
add
fmuls
jbe
iret
xor
lret
sub
ror
into
cmpl
sbb
push
testb
inc
syscall
cld
xchg
or
push
mov
push
cli
daa
xor
ret
enter
or
mov
jnp
sbb
inc
mov
pop
mov
jmp
mov
jecxz
mov
gs
sbb
mov
sahf
inc
pop
and
aas
lods
arpl
scas
incl
and
mov
adc
ficompl
push
jb
sub
inc
pop
ret
and
and
or
xor
stc
pop
lods
adc
test
jbe
lea
mov
jo
sbb
xchg
xchg
shll
insb
and
dec
fcomip
mov
add
iret
iret
pop
inc
and
adc
cli
into
push
push
or
outsb
js
pop
inc
inc
popa
std
std
or
push
es
mov
int
pop
pop
imul
xor
call
ljmp
cmp
lahf
mov
pushf
and
aam
jne
mov
lods
xchg
mov
bound
mov
or
pop
mov
scas
popa
stos
pop
loope
das
mov
nop
icebp
fstps
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
js
add
jge
popa
pop
imul
outsl
int3
push
bound
aaa
dec
es
sub
push
sub
aad
out
mov
mov
ss
pop
outsb
lea
xor
pop
cmp
jbe
je
testb
scas
mov
xchg
mov
cmp
and
scas
sbb
jle
and
fmuls
xchg
popa
sahf
je
lds
pop
je
cmp
xor
cmpsb
insl
jge
add
cmp
ret
mov
lds
bound
aas
mov
subb
dec
sahf
xchg
imul
mov
aam
mov
out
icebp
add
sahf
call
cmpsl
jp
xchg
test
jns
imul
pop
cmp
sbb
stc
les
xlat
jle
jle
mov
addl
xchg
xlat
mov
xor
sub
insl
imul
test
xchg
and
jb
push
sub
loop
std
jl
push
faddl
xor
push
sbbb
dec
cmp
xorl
dec
inc
xchg
movsb
shrl
sahf
fidivrl
mov
hlt
in
pop
add
mov
loopne
in
jge
adc
sbb
es
adc
addr16
sbb
xor
repnz
or
cmp
sub
push
xor
fadd
outsl
jne
movsb
or
jo
xor
stc
mov
lea
dec
sbb
and
call
in
cmp
ds
mov
inc
outsb
and
inc
mov
pop
dec
fxch
jbe
pop
mov
testb
leave
in
adc
shrl
pop
push
aaa
cmp
inc
or
sub
pop
mov
jl
cs
xchg
or
testb
lods
ds
addr16
loopne
pop
hlt
inc
lea
cmp
xchg
out
push
add
mov
push
test
out
xor
bound
jp
mov
cwtl
rolb
shr
inc
negl
mov
cltd
fcom
fidivrl
push
daa
push
ja
mov
mov
jo
pop
cltd
add
sub
arpl
negl
aad
jle
cs
fcmovb
and
dec
xor
jae
pop
jns
test
pusha
fistpl
loope
mov
add
mov
adc
xor
mov
shlb
add
dec
cmp
adc
out
test
jmp
xor
sbb
mov
ret
ss
and
test
cmp
adc
xor
or
andb
sbb
mov
push
aam
mov
xchg
adc
push
mov
jp
push
pop
test
sub
cmp
jmp
test
xor
aad
loop
xor
pop
hlt
dec
mov
hlt
adc
lods
mov
rorl
push
das
stos
test
xchg
loope
mov
iret
jp
inc
popa
stos
push
sbb
inc
xchg
movsl
mov
pop
jno
jmp
jbe
int
je
xchg
mov
dec
divb
in
or
mov
dec
sti
cmp
inc
ret
or
fdivrl
push
xor
xchg
test
stos
dec
jmp
xchg
and
dec
and
inc
or
movsl
rorl
pop
adc
daa
or
push
addb
arpl
ljmp
icebp
je
sarb
stc
mov
xor
add
xchg
mov
insb
bound
push
lret
icebp
mov
mov
daa
loope
inc
not
adc
std
cmp
xor
shlb
lret
cmpsl
jmp
out
pop
mov
mov
xor
fwait
pop
mov
ficompl
fadds
test
or
es
stos
mov
cmp
xorl
loope
sti
pop
pop
daa
lods
out
out
lret
pusha
ss
or
and
aad
adc
cltd
data16
jg
mov
inc
and
dec
pop
sbb
stc
int
arpl
adc
test
iret
push
jb
fs
lret
inc
out
in
je
int3
add
idivl
in
cmp
xor
fstl
cmp
out
dec
lock
xcrypt-ctr
cmpsl
pop
popa
dec
push
or
inc
jb
add
mov
or
inc
jg
lahf
mov
loopne,pt
mov
test
mov
or
rolb
les
out
bound
pop
mulb
ret
cwtl
fiaddl
addb
inc
not
test
ds
out
mov
int
mov
pop
adc
mov
mov
jno
mov
ljmp
xchg
cmpsb
push
xchg
sbb
mov
mov
inc
sub
push
imul
in
mov
test
adc
pop
sbb
lods
int3
fdiv
pop
inc
xchg
outsb
cmp
aam
push
xor
pop
das
or
int3
xchg
pop
xor
fsubr
lcall
cs
mov
cli
testb
loopne
mov
jp
jae
lock
dec
cmpsb
pop
imul
cmp
adc
sbb
jmp
xchg
xchg
shr
addr16
daa
xor
and
fldt
mov
cmp
sahf
dec
inc
push
adc
mov
sti
xchg
jmp
stos
add
fidivrs
decb
mov
movsl
pop
xchg
add
rorb
pop
pushf
fldt
call
xchg
pushf
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
cvtps2pd
in
aaa
adc
cmp
es
jae
repz
lret
xchg
hlt
push
loope
popf
cld
out
lock
sbb
loope
jne
cmp
and
or
adc
fisubrl
push
aad
inc
lock
rol
add
xor
mull
sbb
jge
vmread
stos
inc
inc
mov
mov
pop
mov
out
pop
dec
insb
mov
mov
add
and
iret
xor
and
jns
push
xchg
in
movsl
pop
pop
pop
cmc
out
ja
jne
adc
cmp
scas
icebp
xchg
fsubs
fwait
sub
insb
sarb
mov
lds
fiaddl
or
addr16
adc
cmpsl
movsb
jo
outsl
les
mov
fmuls
mov
aad
cmp
and
sbb
inc
pop
xor
xor
cld
jge
dec
push
in
push
and
and
sub
mov
push
fst
add
les
dec
ret
xorb
or
fimull
std
addr16
or
inc
loopne
iret
pop
lret
pop
enter
in
fdiv
sbb
jp
or
mov
xor
dec
sbb
es
push
outsb
repz
pop
dec
and
sub
cli
pusha
mov
xor
sub
and
insl
jae
pop
shll
push
leave
call
roll
stos
shrb
xor
cmp
cmp
pushl
mov
pop
aad
jmp
je
inc
es
mov
mov
add
enter
mov
inc
filds
inc
popa
ljmp
jne
mov
ret
jmp
xchg
lret
mov
movsbl
jp
cmp
xchg
sbb
mov
std
jg
nop
jmp
fistl
shrb
add
xor
mov
add
orb
fsubp
xor
push
push
push
mov
ds
in
aad
push
data16
adc
pusha
les
sub
push
cmp
dec
cmp
nop
or
sub
jae
mov
lret
and
fdiv
sub
lods
mov
mov
out
jns
mov
int
stc
or
inc
out
iret
ljmp
xchg
stc
sub
pop
lock
xchg
repz
jns
mov
repz
mov
fsubrs
push
lahf
aas
push
dec
jne
add
mov
push
out
cmp
cmpsl
mov
into
mov
in
sbb
sbb
push
sub
lret
dec
mov
xchg
repnz
mov
mov
data16
lret
xor
outsl
pop
cwtl
push
mov
pusha
cmpsl
iret
mov
push
flds
xor
mov
add
sti
adc
jmp
outsl
scas
addr16
inc
lock
loopne
mov
mov
mov
fmull
push
or
xchg
add
adc
jns
mov
mov
decl
das
sub
cmc
sub
je
mov
jae
jecxz
js
sbb
ljmp
push
and
and
cmp
out
fdivs
mov
push
push
fildl
adc
addr16
mov
shrl
cmp
xor
add
sub
jb
test
pusha
rcrl
jnp
sub
xchg
pop
aam
jae
nop
rol
test
xchg
iret
xor
inc
fwait
inc
mov
and
or
mov
xchg
add
jb
or
leave
dec
xchg
daa
pop
xor
fbstp
les
ficomps
je
mov
jo
cwtl
sub
iret
dec
xchg
adc
nop
push
cli
xor
or
jnp
stos
mov
sub
bound
cmpb
stc
int3
pop
dec
shl
lahf
inc
push
sub
aad
sub
xchg
repnz
xor
dec
cmpsl
mov
xchg
mov
cmc
inc
pop
mov
or
in
int
jns
adc
mov
sub
pop
bndldx
lret
pop
scas
fsubrl
dec
ja
inc
mov
mov
sti
cltd
cmpsb
ror
pusha
mov
mov
mov
adc
call
fldcw
jbe
jecxz
adc
cmp
shrb
and
mov
es
mov
les
sub
dec
xchg
inc
int
push
cmp
push
xorb
cli
mov
nop
cs
xor
add
pushl
push
or
daa
hlt
mov
ja
inc
lock
int3
mov
sbb
mov
dec
andb
or
jle
sbb
in
fmuls
add
or
and
out
cmp
subb
dec
jbe
dec
test
ja
cmpsb
and
stos
je
and
inc
call
dec
xor
test
lods
push
sub
jle
imul
in
inc
hlt
cld
in
push
dec
stos
inc
pushf
stos
pop
or
push
dec
jo
nop
movsbl
dec
mov
xor
jl
jae
or
dec
xchg
pop
loopne
repz
pop
or
out
push
mov
int3
imul
mov
cs
in
pop
jno
mov
mov
and
pop
cmp
jle
out
pop
adc
js
popa
mov
xor
jmp
sub
push
scas
fcomps
add
in
popa
push
fmuls
mov
mov
xchg
out
adc
addr16
or
pop
rcrl
out
outsl
add
pop
adc
mov
aaa
outsb
fcomp
xor
orb
mov
orl
mov
mov
inc
call
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
mov
add
xadd
sbb
dec
rcl
loopne
push
popf
push
leave
idivl
jg
cmp
aam
inc
push
inc
cld
push
inc
mov
sbb
mov
pusha
jb
stos
or
sbb
test
dec
fdivrp
scas
sub
outsl
mov
and
sbb
das
out
scas
out
shll
push
mov
inc
dec
les
and
sub
sti
xchg
sub
mov
xchg
pop
or
pushf
cmp
adcb
imul
inc
xor
icebp
mov
xor
or
cmp
jmp
fiaddl
fimull
lods
add
mov
mov
in
adc
jmp
xchg
xor
dec
bound
xchg
and
mov
and
in
fs
aam
dec
or
cmpsl
and
inc
cli
iret
subb
decb
sbb
cmp
mov
adc
mov
div
cli
imul
dec
mov
mov
arpl
bound
scas
out
je
in
and
xchg
dec
xor
xchg
scas
es
xor
jg
xchg
mov
jbe
cmp
xor
xchg
push
outsb
das
rclb
fwait
mov
sub
leave
in
cli
mov
mov
xor
cmp
mov
fisttpl
filds
jecxz
cmc
xchg
pop
mov
mov
pop
xchg
jp
jp
cwtl
enter
test
xor
fs
divl
cmpl
jno
inc
mov
aam
adc
cmp
out
test
cmp
adcb
cld
pop
add
add
xchg
cltd
mov
out
pop
sbb
aaa
imul
cwtl
cmp
pop
add
mov
dec
stc
pop
adcl
cmovle
jp
sub
test
hlt
xor
push
mov
testl
insl
adc
xchg
fdiv
bound
mov
das
fcmovbe
add
into
testl
xchg
jnp
cmp
inc
lcall
jge
leave
mov
cmpsl
insl
and
jge
pop
sub
mov
movsb
add
sbb
std
je
inc
insl
and
cmpsl
dec
pop
pop
xlat
out
outsl
fdivrl
pop
sub
cli
dec
clc
fidivrs
push
dec
xor
aaa
dec
addr16
iret
popf
lock
adc
jecxz
sub
xchg
push
iret
dec
popa
outsb
fsubl
rcrl
dec
or
mov
popa
into
das
xlat
add
jmp
ret
xchg
mov
jbe
loopne
or
xchg
add
mov
aaa
rol
xchg
dec
ljmp
sub
scas
pop
mov
cltd
inc
orb
pop
ljmp
mov
aam
pop
and
push
and
xchg
jl
sub
mov
cmp
lods
mov
lods
xchg
xchg
jp
leave
or
ret
cmp
cmp
stos
xchg
rcrl
push
mov
ret
lock
lret
div
add
xor
gs
shrb
inc
jns
scas
and
imul
sbb
call
hlt
cmc
aam
sub
inc
roll
xchg
mov
gs
xchg
insb
pusha
enter
cs
movsl
shr
inc
js
sbb
and
jle
out
cmp
dec
jo
bound
ljmp
sbb
lret
out
mov
jp
inc
jmp
arpl
test
pop
jg
xchg
add
leave
jl
in
or
and
lds
clc
daa
rcrb
xchg
sub
jno
fsubr
js
cmpsb
mov
outsb
icebp
cwtl
or
mov
leave
and
mov
loopne
xchg
cmc
into
nop
add
xor
dec
xchg
xlat
add
ljmp
push
sub
fdivp
adc
je
dec
popl
jecxz
dec
sarl
sub
in
pop
jl
dec
pop
loop
test
cwtl
data16
lea
xchg
arpl
sub
xchg
pop
test
out
cli
shrl
jae
mov
movsl
pop
jl
imul
or
or
cmp
andl
sbb
and
daa
cmp
sub
xchg
jge
aam
dec
dec
and
mov
lret
in
ret
movsl
nop
jg
or
xchg
out
nop
fisttps
and
and
add
sbbl
pop
dec
ret
fdivs
pop
xchg
jmp
push
ljmp
mov
inc
incl
push
mov
jmp
fimuls
les
outsl
dec
std
icebp
xchg
jb
xor
xchg
bound
push
mov
in
sub
cmp
lock
repz
outsl
fwait
xlat
loope
sub
push
mov
aas
adc
es
push
out
icebp
outsb
xor
inc
xchg
or
std
sbb
fistps
outsl
ljmp
movl
aam
incb
lock
dec
lret
xorl
mov
add
push
cmp
add
xor
mul
cmp
cmp
cmpb
or
pop
cmc
and
lret
mov
aad
cmc
xor
or
inc
pusha
sarb
out
cltd
les
pop
jp
mov
mov
jge
inc
sub
test
int3
add
repnz
insb
xchg
xchg
dec
and
push
jle
xor
notb
xchg
inc
xchg
in
push
mov
movsl
sbb
lea
pop
jp
sub
fstl
or
imulb
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
or
pinsrw
cmovle
sbb
int3
mov
pop
or
adc
adc
aas
jno
inc
insb
gs
test
sub
xchg
lock
out
inc
dec
or
inc
ficoms
dec
lea
andb
adc
push
andb
pushf
cmp
push
cmp
push
das
dec
push
int3
test
pop
add
adc
into
jmp
repz
cmpsl
pop
js
xchg
test
mov
cli
mov
enter
jnp
xor
cli
cmp
addr16
pushf
fwait
dec
add
pop
xchg
xchg
xchg
daa
mov
sub
daa
in
sbb
cmp
int
push
adc
in
pop
cmpsl
and
sub
fadds
sbb
cli
xor
test
dec
imul
out
mov
sub
mov
fwait
xchg
stc
adc
inc
mov
rcr
jle
or
push
pop
test
dec
sub
cmpsb
pop
ljmp
sahf
pop
fsubl
xor
adc
ja
lods
jnp
orl
cltd
push
shll
or
push
int3
push
xor
dec
outsl
and
adc
and
push
lret
sbb
shl
adc
pop
or
sub
adc
gs
repz
mov
outsb
out
mov
push
sarb
es
sub
std
cld
jmp
dec
lea
mov
mov
mov
in
dec
int
shr
lods
sub
and
imul
adc
or
inc
popa
pop
pop
stos
fadd
leave
adc
mov
cmp
jge
jmp
inc
out
add
cli
aaa
out
leave
add
sahf
imul
or
sbb
mov
dec
add
ret
adc
fcomps
pop
fldenv
mov
dec
or
inc
sub
push
sbb
lods
xchg
adc
mov
mov
aaa
lret
pop
fsubl
hlt
push
push
dec
cltd
pop
stc
push
dec
fcmovnu
stos
out
sub
fiadds
or
jge
lods
rcrb
outsb
ret
push
cmp
scas
cmp
fwait
add
and
mov
enter
add
int
xor
mov
int
xor
push
std
sbb
ret
cwtl
cmp
inc
and
out
and
js
pop
add
sbb
pop
lret
lds
push
cmp
repz
pop
add
stc
pop
cwtl
cmovns
or
and
xor
popf
fistpll
xor
xchg
sub
dec
stos
fs
imul
ret
sub
jecxz
inc
sti
sub
icebp
cmpsb
shlb
and
or
xchg
xlat
cmc
cmp
xchg
mov
xchg
ss
inc
in
push
mov
sub
mov
push
dec
push
pop
shr
dec
fbstp
sbb
rcr
jns
imul
add
xor
dec
jp
add
insl
fildl
cmc
test
and
lcall
daa
pop
mov
xchg
mov
push
pop
lea
ss
hlt
ds
mov
jnp
popf
fmuls
scas
aaa
pop
rclb
mov
je
pop
jp
iret
mov
push
call
stc
out
pop
in
in
dec
pop
loop
or
gs
jl
repz
lds
loop
push
pop
push
pause
pop
xchg
dec
fcmovnu
pop
arpl
mov
das
mov
fwait
mov
or
inc
fadds
xor
mov
mov
fdivs
faddl
xlat
or
dec
subb
push
test
lods
cmp
inc
scas
fcmovu
stos
imul
sub
xor
stos
testb
or
mov
rorb
jmp
jl
jns
cmc
sbb
cmpsb
jno
or
addr16
jg
int3
jecxz
jp
xchg
xor
jno
fs
pop
fmull
push
mov
clc
add
shrl
and
dec
roll
inc
out
or
sub
or
popa
mov
xor
push
push
adc
scas
mov
and
sbb
mov
mov
int
or
xor
sbb
ds
cmp
sahf
sub
mov
sub
aas
negl
inc
xchg
out
ss
jle
dec
mov
ficoms
or
jle
inc
xchg
clc
aam
inc
push
cmp
cmc
mov
xchg
inc
jle
lcall
out
sbbl
or
xchg
add
push
mov
mov
mov
lods
fnstenv
into
ffreep
jl
add
stos
aas
dec
or
mov
ss
mov
adc
cmp
hlt
cwtl
and
dec
outsl
cltd
js
push
dec
pushf
jg
and
mov
add
pop
fidivs
mov
pop
arpl
mov
nop
rorl
mov
add
adc
aas
jne
inc
dec
xor
push
inc
sarl
fisttpll
mov
push
ss
xchg
or
add
lods
add
cmpsb
jge
push
xchg
inc
into
jge
fs
push
enter
adc
mov
inc
mov
ljmp
in
xor
sbbb
cmp
jo
xor
mov
mov
loopne
repnz
pop
je
add
addr16
adc
mov
lds
gs
movsl
xchg
dec
lcall
dec
lock
mov
add
add
mov
popl
repz
dec
push
nop
adc
popa
je
sub
add
mov
cmpsb
fstpt
fdivl
or
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
out
in
rorb
pinsrw
pmaxsw
mov
adc
xchg
mov
xor
xor
add
out
mov
mov
push
icebp
push
dec
nop
push
out
mov
incl
mov
push
imul
adc
fsts
inc
in
lret
je
repnz
mov
fisubl
pop
inc
mov
sub
and
pop
or
push
imul
or
add
pushl
xchg
loope
cltd
sbb
subl
cmp
xchg
ja
pop
icebp
adc
fmulp
jnp
inc
aaa
inc
idivb
xchg
xchg
clc
icebp
push
jecxz
push
stc
cwtl
mov
insb
test
push
sahf
test
cmp
jecxz
xor
rcrb
mov
bound
add
mov
inc
addr16
jae
incl
mov
jae
cmp
imull
out
cli
jl
js
mov
mov
mov
lcall
inc
sub
cmp
jmp
mov
xor
xchg
cli
notb
push
cmc
movb
mov
mov
adc
jle
iret
aad
mov
and
adc
mov
outsl
cmpl
mov
jb
popa
lret
scas
push
xlat
mov
out
xchg
xchg
dec
arpl
mov
push
test
clc
sbb
fwait
xchg
fcoms
add
adcb
mov
jnp
dec
inc
pop
in
and
sbb
xchg
xchg
es
push
fcompl
and
inc
leave
lods
or
and
shrb
jno
ljmp
xchg
pop
mov
or
mov
and
xchg
adc
mull
pop
push
mov
scas
dec
sub
mov
rcrl
sbb
add
push
in
mov
mov
pusha
flds
fdivr
call
mov
dec
mov
inc
sbb
fs
mov
dec
clc
test
loopne
or
pop
das
jmp
xchg
mov
cmp
pop
xor
and
pop
push
orl
cmp
cmpl
cmp
int
mov
fcomps
inc
pop
dec
sbb
loope
mov
es
fcomps
cli
inc
jg
mov
and
scas
insb
loope
pop
mov
mov
inc
push
fisttps
bound
and
pusha
add
loop
or
ret
clc
mov
mov
movsl
bound
movsl
fsubrs
std
sub
adc
jns
sbb
jge
xchg
xchg
adc
out
repz
fs
in
cmp
push
xlat
fcompl
clc
xchg
jge
pop
lret
xchg
push
rcl
pop
adc
mov
push
test
sti
popa
xor
mov
or
and
pop
pop
lods
jne
rorb
mov
in
incl
pop
xchg
in
cmp
xor
jb
and
xor
into
jbe
xchg
or
leave
mov
sub
rorb
and
mov
jne
sub
push
pop
add
add
add
shrl
inc
ret
pop
shrl
mov
fwait
or
pushf
aad
push
adc
mov
sbb
cmp
rcr
in
add
in
pop
movsb
sub
jmp
leave
into
jns
mov
inc
sbb
sub
call
adc
add
xchg
sti
push
push
jb
ja
fstpl
cmp
cmpsb
in
push
imul
into
add
mov
cmp
dec
pop
ss
das
lds
in
pop
sbb
bound
and
and
xchg
push
das
push
dec
push
lea
shl
and
mov
in
daa
pusha
shll
add
ds
xchg
sti
aad
sahf
ret
dec
adc
cmp
sbb
mov
mov
int
movsb
and
dec
lods
cs
fwait
pop
jg
shlb
mov
insl
cmp
xchg
rcll
incb
jecxz
mov
push
scas
sbb
arpl
push
rclb
int3
es
enter
mov
pushf
cmp
cmp
adc
jns
negb
inc
int
adc
dec
push
jp
movsb
mov
xchg
fistpl
jg
mov
jl
jmp
lea
aaa
jns
dec
sub
mov
jp
mov
inc
mov
sbb
ljmp
jg
gs
lods
rcl
shll
popa
jb
ficoml
lret
lcall
pushf
fisubrl
or
inc
pop
xchg
ljmp
pop
mov
and
ret
inc
inc
xchg
push
pop
lea
xorb
loopne
jo
scas
cltd
out
mov
mov
xor
inc
inc
mov
add
shll
jp
mov
inc
jmp
pop
cmp
lods
and
aas
pop
iret
push
ret
cmp
xor
and
movsl
xor
xchg
add
movsb
pop
aas
xor
xor
lret
push
shll
jne
sub
cld
das
inc
add
lods
add
push
cs
xchg
jle
lock
push
mov
sbb
adc
sti
xchg
push
sbb
into
pop
minps
stos
ja
aas
sub
icebp
push
mov
add
dec
shrl
ss
in
cmpsb
arpl
jb
scas
dec
and
xchg
gs
lret
cmc
movsl
push
fisubrl
ficoml
das
aaa
clc
or
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
data16
dec
mov
pinsrw
cvttps2pi
decb
notb
sub
cmp
xchg
stc
dec
jl
int3
cmpsb
pop
cmp
js
push
aam
sbb
cli
pop
mov
aas
mov
ret
jge
ds
jae
lods
sarl
sbb
xchg
inc
sbb
mov
sub
fcompl
shrb
stos
loope
notl
push
aam
jmp
pop
popf
mov
adc
hlt
enter
sub
push
stc
fildll
inc
sbbl
inc
mov
movsb
fcomps
loope
xor
cmc
jge
stos
movsl
xorb
lods
and
pop
es
sub
inc
movsb
sbb
mov
test
faddp
mov
outsl
aam
mov
pushaw
adc
and
and
push
inc
lret
rclb
int3
sbbl
imul
jo
icebp
test
or
inc
loopne
jge
or
cmp
adcl
jge
sbb
jne,pt
sbb
pop
loop
xor
dec
mov
push
inc
mov
into
mov
or
in
dec
mov
in
hlt
push
scas
test
push
mov
int
cmpsl
clc
pusha
test
mov
mov
cltd
adc
mov
shrb
cmp
pop
jne
xchg
call
push
fstp
subb
int
jne
mov
subl
push
fstps
in
dec
or
mov
cmp
jecxz
xor
mov
xor
jnp
sub
mov
out
jne
in
or
sarb
cmpsb
pop
xor
mov
add
mov
popa
mov
shrb
in
scas
dec
aas
out
sti
add
cmp
inc
jge
mov
stos
mov
inc
mov
rorb
mov
sub
cmpsb
dec
inc
fwait
inc
ds
in
mov
jno
pshufw
xchg
dec
negl
dec
and
cmp
ret
sbb
sub
fwait
imul
mov
or
repz
pop
jl
inc
dec
push
mov
js
add
es
hlt
mov
fmuls
mov
fxch
lock
data16
and
inc
xor
sar
popa
test
mov
pop
push
sahf
cmp
je
ja
testb
push
shrl
xchg
in
inc
cmp
jmp
daa
cwtl
jge
clc
jb
sahf
cmpsl
xchg
pop
mov
call
iret
pop
dec
cmp
mov
out
int
or
push
sahf
xchg
pop
mov
xchg
imul
in
inc
xchg
adc
loopne
or
sbb
and
jbe
push
lock
pop
in
add
mov
push
pop
mov
les
sti
mov
fs
mov
rcll
xchg
and
xor
ds
xchg
cltd
enter
nop
jle
adc
insl
push
mov
cli
lcall
and
adc
mov
xor
fucom
ljmp
imul
fcomps
rcrl
mov
mov
scas
push
les
mov
pop
adc
js
int
iret
repnz
cmpl
imul
adc
lahf
nop
mov
mov
test
scas
xor
mov
jmp
mov
add
inc
fldl
cli
and
xchg
loopne
lret
aas
mov
adc
jg
push
mulb
pushf
fbstp
jb
jg
out
mov
cmp
lahf
insb
les
mov
dec
xchg
pushf
and
add
mov
sbb
mull
ja
popf
sub
mov
sti
movl
jecxz
jb
sub
push
daa
mov
adc
mov
ret
add
notb
loopne
push
jp
call
and
jns
andl
pop
test
icebp
fistpl
sub
outsw
fstpl
push
movsl
xlat
inc
mull
jecxz
mov
rcrl
sbb
xor
jge
pop
in
inc
out
popa
and
fsubr
adc
cmc
adc
addr16
sbb
sahf
out
xor
lods
sub
iret
fsubs
push
mov
add
cmp
sub
cmp
adc
cmpb
push
sti
or
ret
xor
or
out
push
daa
inc
aad
jp
andb
loope
and
loopne
cmp
fistpl
sub
xlat
xchg
dec
fisttpll
insl
movsb
stos
inc
inc
mov
push
add
push
mov
xor
add
and
popf
int
lods
lret
cwtl
nop
pop
cmovs
popa
pop
jmp
sti
dec
xchg
mov
or
inc
fs
mov
sub
jg
in
mov
test
and
adc
call
mov
outsb
and
push
daa
mov
leave
cmp
ljmp
dec
mov
push
lods
imul
insl
push
dec
sub
in
xor
mov
das
cmp
push
inc
mov
jmp
jne
inc
mov
jnp
pop
sbb
insl
clc
sbb
lahf
stos
insb
xchg
shlw
mov
and
incb
adc
cltd
lods
test
ljmp
sbb
in
bswap
stc
stc
test
movsb
and
lahf
push
gs
std
add
dec
fcmovbe
and
mov
adc
imul
pop
fwait
insb
les
adc
xor
jg
mov
cmp
out
imul
sbb
cmp
outsl
mov
dec
shrl
pop
inc
xor
popf
xor
pop
mov
bound
lcall
sub
repnz
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
in
inc
sub
data16
pinsrw
cmovg
mov
sbb
roll
add
sbb
sbb
xchg
sbb
mov
push
sbb
pop
or
mov
fwait
adc
push
int
out
fcompl
pop
stos
xlat
xchg
orb
faddp
popf
lods
insl
jl
jge
mov
xchg
dec
repnz
jbe
or
pop
data16
js
mov
and
jnp
int3
negb
jp
leave
jno
jge
outsb
xchg
mov
pop
adc
jns
adc
mov
ret
sub
lahf
mov
cwtl
js
adc
mov
movsb
rorl
push
mov
adc
push
inc
xlat
or
mov
das
jb
roll
push
lahf
mov
sub
jno
out
out
sbb
push
push
std
pop
cltd
faddl
fwait
sti
xchg
jmp
ss
dec
jge
and
loop
out
push
inc
adc
sbbb
push
lods
fists
enter
mov
inc
fsubrl
cmc
mov
push
fs
aad
imul
je
push
arpl
sbb
mov
mov
mov
clc
outsb
push
adc
out
inc
imul
dec
inc
jno
bound
sub
clc
stos
mov
mov
push
loopne
cmp
cmp
inc
popf
pop
out
pop
jae
out
or
jb
xchg
add
fisttpl
cmp
dec
xor
adc
psubsw
cmpsb
imul
fmuls
cmpsl
add
jb
sub
ret
xchg
mov
lea
dec
cmpsl
cld
dec
pop
imul
push
shlb
stos
and
xor
push
jl
and
mov
adc
nop
pop
stc
add
outsb
jg
push
jbe
aad
scas
cltd
jbe
pop
fsubs
push
or
out
cwtl
or
negl
sbb
and
nop
addr16
xchg
mov
mov
sbb
mov
in
mov
test
dec
lods
mov
es
leave
cmp
jmp
inc
jbe
pushf
xchg
sbb
aad
sbbb
out
outsb
push
jmp
mov
adc
clc
lock
cwtl
repnz
or
mov
lcall
add
es
inc
mov
inc
arpl
pop
jo
aas
dec
js
push
cmp
je
test
xchg
xlat
xchg
and
pop
xchg
adc
loope
in
movl
sbb
ljmp
fbstp
cmpsb
push
jmp
sub
ds
mov
jb
cmc
cmp
sub
lods
push
xchg
inc
jae
mov
sub
dec
mov
loop
out
cmp
bound
ret
mov
iret
sub
push
das
add
push
popa
inc
cmp
imul
std
aad
mov
sbb
adc
es
and
mov
repnz
fldl
push
scas
sbb
mov
aaa
jo
push
xor
fisubl
xor
jae
dec
in
repz
mov
les
mov
cmp
in
sub
ret
sbb
and
xchg
mov
aad
push
sbb
xor
fs
mov
sub
lods
jb
repz
cwtl
push
arpl
adc
xchg
sahf
jl
enter
mov
aas
mov
mov
testb
js
and
jo
push
mov
aas
adc
repnz
mov
mov
test
jb
sti
std
call
inc
add
aas
stc
imul
into
loopew
fstpt
pop
cmp
dec
pop
sbb
outsb
pop
mov
mov
xor
xchg
xor
xlat
jecxz
dec
push
repnz
cmpsb
adc
ret
sub
enter
ja
arpl
adc
int3
xor
mov
cmpsb
shl
das
aad
cmpsb
mov
les
hlt
lcall
outsl
sbb
mov
mov
stc
mov
lock
test
jp
mov
xor
sub
push
mov
test
js
cmp
sbb
mov
adc
test
and
add
das
repz
inc
inc
inc
aaa
jno
mov
xchg
loop
subl
cwtl
fwait
pushf
ret
xor
push
outsl
mov
adc
inc
call
sbbb
loopne
imul
fadds
mov
mov
adc
nop
bound
sub
push
insb
fbstp
loopne
aad
roll
push
cs
out
mov
iret
mov
xchg
push
push
jae
xlat
enter
mov
push
xchg
jne
in
fwait
loopne
fcmovbe
or
xchg
dec
jne
xorl
in
scas
int
jae
in
lods
adc
popf
jbe
call
das
pusha
fs
adc
dec
add
leave
jl
mov
jmp
cmp
push
sarl
or
divl
and
mov
mov
xchg
out
idiv
es
in
daa
ljmp
cli
pop
pop
pop
test
inc
inc
cmpsl
divl
xchg
test
push
lock
ja
ds
stos
inc
out
xchg
push
inc
loope
sub
outsb
lock
nop
in
dec
adc
subl
lahf
xchg
cmp
lahf
and
mov
int
cld
subl
sub
push
adc
sub
lods
cmp
addr16
out
or
mov
aaa
pop
pop
sbb
jmp
jbe
test
mov
inc
cmc
cmpsb
inc
or
inc
dec
sahf
mov
scas
pcmpgtw
add
pop
adc
pop
mov
pop
enter
daa
push
ffreep
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
pushf
pinsrw
psubusw
dec
mov
dec
push
mov
add
dec
cmc
insb
mov
cmp
jmp
mov
pop
add
jle
sub
sbb
push
jmp
inc
nop
or
test
mov
cmp
adc
into
inc
xor
mov
mov
sbb
or
sub
in
hlt
or
ss
sbb
or
cli
scas
pop
dec
addb
and
je
xor
cltd
sahf
pop
in
cltd
sahf
dec
mov
pop
scas
mov
insl
and
fucom
rcll
bound
outsl
fstl
js
shlb
jbe
rclb
sbb
enter
jb
xor
scas
movsb
xor
mov
outsb
js
sub
xchg
xchg
xor
xchg
mov
dec
test
push
aam
and
mov
mov
test
out
loope
idivl
mov
sub
dec
pop
loop
adc
shrb
lret
push
loopne
sbb
lods
mov
sub
adc
jnp
sbb
and
imul
popa
inc
sub
bndldx
push
daa
pop
fcoml
vmovaps
jbe
pop
pop
xor
cmp
jb
clc
jno
jecxz
mov
fiaddl
mov
cli
call
dec
mov
fadds
test
sarl
icebp
popf
pop
insl
or
or
inc
leave
pop
scas
es
sub
and
sub
cmp
and
sarb
xor
scas
pop
sti
aad
push
sbb
jno
dec
dec
inc
mov
xchg
int3
push
lret
xor
pop
xor
rcll
popa
or
pop
mov
mov
mov
scas
and
jl
in
clc
out
add
arpl
lds
lods
pop
xchg
data16
sbb
xor
imul
inc
scas
shrl
xchg
dec
mov
sbb
cmp
pop
sbb
aas
clc
sbb
scas
or
fisubl
jg
dec
mov
fstpl
jnp
inc
pop
arpl
addb
repnz
pop
or
mov
mov
push
fisubs
out
lds
gs
cs
sub
lds
out
push
pop
pushf
aam
sbb
adc
jle
cltd
sub
jp
sti
shll
jle
mov
mov
mov
lock
adc
sbb
pop
and
outsl
repnz
or
cmpsb
push
jmp
out
mulb
int
and
movb
aas
xor
or
mov
rclb
dec
repz
out
fldl
or
xchg
jmp
std
add
mov
pop
xlat
fldl2e
cmp
inc
jae
xor
loope
xor
movsl
mov
mov
xchg
aad
cltd
test
test
xor
aas
inc
pop
loope
shlb
bound
xlat
jnp
lahf
inc
lret
lods
pop
xchg
or
mov
ja
test
add
pushl
pop
ds
gs
mov
dec
xlat
push
sbb
imul
imul
sbb
lcall
xchg
and
sub
flds
arpl
and
cwtl
mov
pop
jg
fld
std
sbb
out
push
push
add
and
loop
mov
mov
sub
push
icebp
fcomp
int3
push
inc
les
sbb
stos
test
cld
ds
cmpsl
in
mov
pop
je
mov
popa
pop
mov
xchg
inc
aam
push
mov
jno
outsl
adc
rorb
xor
jge
lret
out
push
in
leave
fwait
loop
add
push
aas
push
dec
aaa
incl
xorb
add
mov
pop
xchg
repnz
push
xor
arpl
or
dec
inc
enter
aaa
add
outsl
dec
fdivrp
aas
xchg
nop
jp
imul
lret
sub
add
mov
rcr
mov
inc
xorb
cmc
pop
fstp
mov
out
fdivrp
divl
dec
push
xchg
stos
mov
sub
jns
movsl
sbb
sub
adc
pushf
dec
mov
adc
jg
jae
cmp
xlat
xor
pop
adc
cwtl
shlb
test
clc
xchg
sarb
add
jg
stc
loope
fldl
xor
mov
jo
cmpsb
lret
push
mov
push
nop
or
jp
xchg
lret
cmp
pusha
xchg
pop
hlt
push
sbb
add
dec
push
mov
xor
lret
jp
movsb
or
and
cmp
pop
cmp
lcall
inc
sbb
cmp
bound
fimull
insl
pusha
hlt
repz
leave
xlat
nop
cwtl
and
popf
icebp
xor
into
out
xor
cmp
cmpb
or
mov
repnz
inc
ljmp
sbb
push
push
imul
xchg
lock
xchg
pop
jp
dec
xchg
int
enter
cmp
cs
add
test
imul
loopne
mov
jl
add
xor
out
test
cmp
jl
mov
popa
lods
mov
xchg
repz
mov
xchg
jne
clc
test
pusha
lret
rol
xor
sahf
leave
mov
int
out
dec
mov
call
shll
dec
or
fdivrl
jno
ret
imul
andb
testb
fwait
repnz
mov
imul
or
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
sbb
jbe
mov
add
femms
push
and
aad
mov
testb
jmp
in
not
xchg
xchg
adc
lahf
mov
roll
xchg
xchg
mov
and
dec
and
and
xchg
add
mov
jl
dec
and
mov
jb
jecxz
inc
rcrl
test
mov
fwait
inc
loope
mov
pop
push
mov
or
mov
sbb
repz
mov
push
pop
leave
sbb
jecxz
mov
inc
std
jl
mov
push
ja
hlt
nop
lods
push
xor
cmc
pop
add
scas
xchg
pop
ljmp
clc
imul
push
mov
ret
inc
mov
jg
push
mov
xchg
push
push
repnz
subl
xchg
dec
dec
ds
add
jg
sub
or
repnz
std
xchg
lds
repz
sub
insl
sbb
inc
mov
mov
lcall
test
jge
gs
loop
or
out
scas
lahf
dec
jno
jae
test
sub
and
mov
ljmp
sub
fstps
mov
in
pop
add
in
pop
int
xchg
out
ret
pop
cmp
cmp
sub
enter
fsub
and
fs
movsb
imul
cmp
in
rep
es
mov
popa
push
hlt
jmp
inc
ljmp
imul
xchg
inc
aad
sbb
push
rcrl
imul
xchg
lods
sbb
aas
loop
xor
xchg
add
dec
pop
or
lahf
jne
sbb
loopne
xchg
ja
push
sbb
push
sub
xchg
fdivrs
lds
mov
repz
sub
jecxz
push
or
sarl
hlt
mov
xor
xchg
mov
lcall
jbe
sahf
push
mov
xorl
xor
mov
cltd
push
push
push
testl
jmp
dec
mov
and
xor
rorl
jecxz
rclb
jns
mov
mov
icebp
ja
inc
xchg
jnp,pn
add
push
fstpl
dec
imul
jne
cmpsl
bnd
push
nop
jmp
jns
xchg
pop
std
pushf
add
mov
shll
sbb
push
ret
inc
push
int
pop
pop
lret
popf
rorl
aad
sub
mov
outsl
pop
mov
pusha
arpl
insb
fsubrl
jnp
or
adc
clc
mov
sbb
rcrb
mov
aas
mov
jecxz
mov
cmpsl
aad
je
std
ret
inc
call
adc
cld
lods
dec
mov
ret
xchg
fisubrs
sbb
les
les
xchg
dec
test
insb
repnz
push
bnd
pushl
stos
sahf
dec
test
pop
insb
sub
and
rcrb
sbb
xchg
and
ja
repnz
addr16
cld
adc
sbb
and
pushf
sbb
es
mov
add
sbb
mov
test
stos
jns
mov
lods
repnz
out
jl
dec
push
shll
dec
dec
lock
push
lcall
adc
cs
xchg
lds
popf
push
inc
in
call
je
sbb
add
imul
icebp
call
inc
loop
es
xchg
dec
mov
movsl
fldenv
cmp
push
cmp
es
filds
push
into
data16
cmpsb
dec
jno
cmp
int3
mov
mov
aad
mov
test
jp
push
inc
lods
ds
xlat
adc
lcall
xorl
dec
popf
scas
inc
or
cmpsb
jae
xor
jo
add
lret
insb
out
inc
inc
sub
pop
roll
clc
adc
addr16
fists
rolb
andl
lods
ret
dec
cs
imul
faddl
pop
lea
aad
xor
jge
ljmp
fists
clc
stc
adc
gs
mov
mov
pop
or
sbb
push
dec
inc
xor
fsubrs
or
cmp
pop
roll
mov
xor
in
cmp
or
inc
fcmovne
pop
imulb
xor
pop
stc
xchg
lods
testl
or
push
insb
rcrl
mov
lcall
push
je
imul
test
jae
dec
test
or
sbb
or
lods
add
mov
jo
mov
xchg
sbb
outsl
dec
jb
into
imul
or
cmp
mov
leave
inc
jns
cmp
rcr
lds
scas
cmpsb
mov
pop
ret
add
cltd
xchg
out
repz
aaa
add
inc
test
hlt
xchg
fistpll
cld
jbe
push
dec
xor
shrl
in
popa
js
nop
mov
out
in
test
shll
lds
mov
adc
push
inc
insb
dec
jne
fisubrl
xchg
xlat
and
mov
jnp
pop
out
mov
sub
pop
outsl
js
arpl
rcrl
fmulp
lcall
push
sbb
cmp
add
aas
pop
ja
dec
mov
sarl
cmp
push
into
pop
dec
jl
push
inc
push
ss
pop
add
mov
or
jo
sti
pop
mov
and
dec
mov
dec
cmp
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
or
pinsrw
pmulhuw
cltd
jp
xor
jg
ret
jno
arpl
mov
scas
gs
or
iret
dec
jp
jp
inc
push
jge
mov
test
aad
test
mov
test
pop
pop
dec
jg
jne
es
loope
or
mov
aam
imul
sub
xchg
mov
mov
js
enter
outsl
pushf
xor
jnp
adc
inc
lret
pop
cmpl
rcrl
aaa
ffreep
clc
popf
je
hlt
jb
in
lcall
into
xchg
and
gs
int
imul
jne
imul
out
cmpsl
dec
mov
es
adc
pop
out
ret
aad
xor
push
mov
or
fistpl
and
cmp
xchg
xchg
hlt
and
cmpb
xchg
cwtl
lcall
loopne
insl
push
lock
add
mov
dec
addl
test
dec
inc
jg
call
mov
out
fwait
dec
lods
pop
sub
cwtl
pop
mov
dec
add
adc
inc
xchg
mov
addb
addr16
mov
xchg
aad
dec
mov
mov
sbb
mov
in
lock
addr16
adc
adc
cli
mov
inc
or
jp
and
pop
aad
push
popa
mov
cmc
aas
lods
mov
pop
sub
and
stos
or
jne
pop
test
dec
mov
mov
fdivrs
stos
imulb
dec
or
test
pop
iret
mov
add
aaa
scas
pop
add
es
xchg
inc
jle
adc
mov
loopne
cmc
push
xchg
js
xchg
or
xchg
clc
cs
adcl
orl
cmp
leave
push
std
add
sbb
les
push
popf
xor
xor
das
jno
xchg
stos
jns
xor
dec
pop
jae
ja
and
rorb
decb
lods
int
pop
adc
cmp
xor
and
das
filds
push
cmp
mov
fstps
xorb
xor
out
xchg
lcall
movsb
leave
test
loop
xchg
xor
sarl
mov
sub
movsl
lods
cmp
pop
sub
aaa
data16
jle
inc
jp
repnz
arpl
rorl
aaa
insl
cmp
loop
add
ret
jp
mov
das
inc
sbb
jns
mov
mov
push
dec
fbld
lcall
fs
jp
in
and
cmpsb
xchg
sub
push
xlat
ret
repz
xor
ja
add
lcall
fstpl
out
jno
mov
js
pop
push
test
sub
fwait
sub
mov
pop
xlat
sub
add
dec
mov
inc
or
jle
cwtl
jae
fisubl
loope
cmp
stc
enter
outsb
shrb
pop
and
mov
scas
outsl
sbb
jecxz
push
xchg
lret
push
aad
mov
dec
pop
push
jae
test
jl
test
jae
adc
fs
in
cli
push
sub
mov
orl
stos
push
out
sbb
test
mov
lret
inc
sarb
inc
loopne
out
sar
mov
pop
ret
jle
mov
push
xchg
add
ljmp
stos
mov
add
fildl
fistpll
scas
std
inc
js
adc
shl
sbb
sarb
mov
les
cmpsl
cltd
data16
in
out
mov
shl
dec
test
sbb
lock
iret
jae
inc
scas
cmp
or
lods
cmpsb
ja
test
imull
fisubl
aam
les
sub
ret
pop
int
jne
aaa
aad
mov
aaa
testl
mov
pop
dec
mov
mov
ljmp
mov
je
jae
cld
int3
addl
pop
rep
repnz
aam
pop
outsl
push
jmp
loope
adc
cmp
test
push
jno
popa
dec
add
call
xchg
test
sub
sub
xor
xchg
jp
neg
shrl
imul
push
mov
pushf
fidivs
movsl
movsb
adc
or
dec
inc
jl
repz
jno
mov
pop
and
into
xor
cmp
jle
add
jecxz
and
call
pusha
les
incl
push
mov
sub
pop
xchg
es
std
in
mov
inc
mov
push
out
rorl
pop
mov
push
in
pop
shrd
inc
add
mov
icebp
inc
jno
and
call
daa
pop
lcall
inc
fidivrs
xorl
inc
lods
dec
push
lcall
lret
adc
int
fcmovnu
or
jmp
sub
mov
and
or
imul
dec
cwtl
mov
cs
lret
xor
pusha
stos
sahf
cli
push
outsb
stc
lods
or
std
fldl
pushf
ret
mov
iret
faddp
fadd
push
popf
sbb
xchg
mov
mov
iret
fidivl
pusha
fistps
sub
lahf
es
xchg
cmpsl
scas
lds
outsb
test
addr16
push
fadds
test
ja
pop
aad
inc
inc
arpl
push
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
dec
scas
dec
mov
add
outsl
out
cwtl
je
adc
jmp
sbb
sbb
dec
adc
cmp
xor
fldt
jb
dec
sbb
lock
xchg
or
xor
sbb
fists
jle
mov
in
pop
cltd
in
or
std
fildl
push
enter
sahf
jmp
stos
cwtl
xchg
int
inc
arpl
ss
xchg
pop
mov
decb
inc
xchg
out
leave
push
adc
lock
fimull
sub
add
out
scas
cli
xor
es
push
scas
jl
lahf
or
aam
xchg
inc
in
inc
imul
iret
mov
test
dec
pop
shll
jg
jmp
pop
inc
in
ds
jle
enter
dec
hlt
or
int3
scas
add
jns
sub
nop
pop
test
shrb
fisttps
int3
aaa
inc
xchg
pushf
ja
fsubs
mov
xchg
pop
mov
test
jecxz
int
jno
fbstp
or
into
jbe
fst
out
sbb
xchg
and
pmovmskb
int3
mov
mov
or
jnp
pop
xchg
data16
aas
push
ficoml
int3
jg
pop
rcll
jl
sub
loope
mov
fcomps
ja
jne
sarb
mov
jnp
dec
mov
xor
mov
pop
popa
pop
aaa
neg
push
ror
out
pop
movsb
dec
outsl
lock
divb
add
arpl
xlat
jl
pop
or
sub
mov
mov
out
and
push
pop
call
movsl
ficomps
ja
aas
xor
test
or
lret
inc
dec
jle
push
aam
js
call
popa
jl
inc
sub
push
dec
push
out
les
push
mov
mov
notl
gs
inc
xchg
dec
repz
add
lock
jb
pop
jmp
mov
inc
jns
ret
add
jp
loopne
mov
int
mov
lock
mov
insb
xchg
and
xchg
out
fmuls
inc
mov
mov
jge
push
outsl
jne
fdivrs
mov
push
jnp
mov
push
notb
adc
clc
lcall
fs
mov
pusha
es
orb
xchg
cli
push
push
xor
add
jns
dec
cwtl
in
rorl
pop
jp
test
bound
sarb
cmp
bound
dec
fsubs
aam
push
jo
push
sbb
outsl
fdivs
lcall
fucomip
leave
je
pop
pop
push
rcrl
dec
bound
sub
push
add
mov
jne
scas
mov
lahf
jmp
xchg
and
je
xor
mov
cs
cld
mov
mov
xor
xor
icebp
mov
fstps
in
or
cwtl
mov
je
xchg
mov
jns
add
out
push
mov
or
lods
xor
push
push
fbld
sbb
insb
ret
dec
into
out
addr16
fimuls
fldt
dec
cmc
dec
loope
ljmp
divl
sbb
push
mov
mov
sub
arpl
cli
mov
lret
push
test
cmpb
push
fdivrp
sub
mov
jmp
imul
inc
or
jo
pop
sti
sub
cmp
call
test
int3
adc
call
dec
cld
jge
or
dec
pop
stc
mov
out
mov
or
mov
dec
push
out
add
dec
lea
pusha
fs
ror
mov
scas
ljmp
icebp
fildll
nop
mov
addr16
mov
movl
movsb
or
xor
pop
sub
pop
dec
push
rcll
mov
adcl
xor
push
xor
xchg
imul
and
and
jg
out
mov
mov
and
add
jmp
popa
out
cmc
stos
mov
jno
sahf
fcmovbe
adc
mull
push
lahf
push
sub
or
or
cmpsb
adc
inc
mov
lock
xlat
repnz
mov
push
iret
fbstp
push
in
sti
js
pop
cmpsb
jecxz
out
or
rcll
cwtl
repnz
mov
xor
repz
lahf
push
fmull
lea
outsb
cli
lret
mov
push
push
mulb
dec
lret
decb
nop
mov
sub
inc
and
cwtl
in
push
jnp
clc
nop
addr16
xchg
add
xchg
mov
or
ret
pop
sub
jb
imulb
sbb
sbb
jge
in
scas
inc
xchg
getsec
add
imul
adcb
inc
out
xor
mov
xchg
sbb
and
sbb
inc
mull
cmp
and
testb
loopne
mov
leave
inc
and
inc
xlat
sbb
push
subb
xlat
movsl
lods
jecxz
or
mov
rcrb
fldt
data16
int
xchg
rcl
sahf
in
mov
push
sub
and
enter
cmp
icebp
icebp
and
fwait
xor
adc
ss
xor
into
movb
xchg
add
subb
cmp
out
xor
pop
addl
push
xlat
and
pop
dec
jl
aam
mov
mov
and
cmp
pop
push
cmp
dec
or
fldenv
inc
rorl
jbe
push
lcall
stc
lahf
jge
negb
inc
pop
jmp
dec
lds
fstpt
sub
push
cmp
xchg
lahf
inc
stos
loope
out
jmp
mov
popa
push
fisubrl
mov
xchg
shll
out
jne
idivb
sub
sbb
mov
xchg
enter
and
add
sbb
pop
jg
add
or
stos
sub
popf
cmp
mov
pop
inc
xor
aaa
sbb
xchg
mov
cmpsl
movsl
jnp
and
dec
cmpsb
cmc
insb
call
mov
mov
icebp
inc
cs
dec
mov
inc
adc
sub
jp
mov
sub
sub
sbb
inc
jmp
iret
add
sub
push
call
push
out
stc
jp
and
call
and
push
into
repz
xchg
pop
sti
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
nop
sbb
repz
cmpxchg
jp
inc
mov
sbb
jbe
push
ror
xor
mov
fsubrl
mov
imul
movsl
sub
or
lods
mov
cmp
cmp
mov
jb
popa
scas
mov
stc
xchg
pusha
les
data16
adc
ds
popf
in
mov
dec
testb
push
cwtl
mov
repz
int
cmp
mov
pop
lods
out
pop
cmpsl
fildl
mov
or
leave
cmpsl
lods
jl
inc
xchg
gs
mov
jg
sub
ljmp
pop
es
pop
mov
add
fcom
fisttps
push
mov
cmp
subb
cmp
add
cmp
fiadds
push
jo
pop
sub
popa
push
loop
lcall
cmp
test
xor
int3
mov
lret
or
mov
mov
sti
push
stc
fmull
fnstenv
mov
add
jno
mov
pop
cwtl
push
jmp
dec
push
cld
pop
or
xchg
push
sarb
lcall
repz
mov
ljmp
xor
push
mov
decb
sub
add
lods
jmp
xchg
rcrl
aad
lods
repz
pop
jns
ss
daa
jmp
xchg
popa
dec
cmp
mov
mov
mov
cmp
sbb
mov
mov
cltd
and
arpl
jae
stos
cwtl
in
jp
scas
call
imul
lahf
mov
shlb
dec
jge
mov
jmp
or
sbb
xchg
inc
rclb
stos
cmp
addr16
fs
xchg
add
and
and
mov
sbb
jns
add
mov
jno
fidivl
and
ljmp
aad
ja
mov
mov
xchg
mov
jnp
mov
and
cmp
jnp
sbb
and
jno
shlb
jno
mov
push
dec
adcb
test
adc
inc
in
cmp
movsb
cmp
arpl
sbb
xchg
in
subl
cld
jnp
imul
movsl
jne
jae
pop
push
test
fiadds
add
and
inc
test
push
inc
cli
imul
insb
cltd
add
mov
fwait
clc
jb
mov
shlb
sbb
ja
mov
jge
pop
mov
push
jne
aas
add
adc
sub
or
fs
xor
cmpsb
jae
and
sbb
adc
shl
jno
pop
mov
pushf
out
adc
inc
xor
or
adc
scas
mov
mov
fdivrl
push
test
scas
jbe
stos
aad
in
push
adc
int3
imul
test
sbb
call
cmp
fcompl
adc
das
mov
jmp
pop
mov
mov
sub
jge
dec
lret
jl
inc
add
jecxz
fndisi(8087
lds
cmp
dec
mov
and
xor
filds
push
mov
xchg
mov
in
fdiv
mov
xorl
imul
adc
add
std
maskmovq
mull
mov
or
repz
addr16
fdivrs
cmpsl
or
fnstcw
and
out
fdivrs
adc
xchg
aad
mov
roll
int3
pop
js
mov
imul
call
test
push
inc
xchg
pop
pushf
mov
dec
mov
std
lods
mov
sahf
adc
mov
xor
in
jns
lahf
aad
fidivl
cmp
pop
dec
pop
pop
xchg
ss
cmc
xor
or
popa
adc
xor
test
sub
add
cmc
pop
ret
enter
scas
cmp
addb
arpl
pop
arpl
mov
or
icebp
loope
push
leave
adc
jl
mov
mov
mov
sub
hlt
fistpll
lret
cmp
dec
xchg
imul
movsl
in
and
cwtl
test
int
dec
xchg
pushf
cld
int3
add
xor
loopne
mov
mov
sub
mov
mov
or
pusha
and
test
sub
mov
rorl
test
inc
mov
mov
jnp
mov
clc
mov
sub
cli
lock
mov
leave
mov
pop
add
stos
adc
and
inc
stos
sarl
mov
jb
sub
xchg
aaa
sbb
pop
adc
adc
imul
in
mov
das
stos
adc
cwtl
sbb
sti
aad
sbb
cltd
jmp
adcl
adc
js
push
adc
pushf
pop
ret
and
aas
sub
adc
jno
or
xchg
aas
jne
pop
rclb
fldpi
mov
jl
in
negl
int3
add
mov
ficoms
cmc
or
mov
cmpsl
xor
push
std
sbb
or
dec
push
insl
pop
cmp
ljmp
push
lock
jle
or
pusha
cmp
inc
imul
push
push
dec
in
sub
ja
test
ficoms
leave
xor
sbb
nop
scas
inc
mov
jne
add
xor
pushf
imul
inc
xor
fs
nop
jp
and
push
or
fcmovnbe
jo
mov
shll
cwtl
dec
repnz
inc
jle
mov
stc
xor
mov
jae
ja
mov
js
pop
lock
lcall
mov
xchg
xchg
mov
out
jne
clc
out
inc
pop
mov
and
mov
xchg
fadds
xchg
inc
dec
ret
mov
movsl
dec
sub
and
cld
das
mov
and
sbb
cwtl
lcall
and
mov
xchg
sarl
pop
xchg
mov
mov
ja
push
mov
pusha
ds
daa
popa
pop
pop
push
pop
mov
into
rol
pop
arpl
fsubrp
push
loop
push
mov
notl
test
push
int3
insb
mov
jecxz
leave
test
ficompl
push
loope
insb
push
adc
data16
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
mov
pop
add
and
int3
add
push
fs
test
inc
or
aaa
popa
fnsave
icebp
adc
push
dec
movsb
ss
fisubl
or
dec
xchg
mov
pop
icebp
mov
popa
jmp
js
add
lods
imul
xchg
push
int
subl
in
idivl
cltd
push
add
icebp
stos
cmp
out
mov
xchg
push
pushf
loop
fwait
aaa
sti
sti
js
adc
fcmove
xchg
inc
fisubs
ret
lcall
fdivrl
pop
add
jl
sbb
lret
mov
pushf
movsl
pop
fwait
subl
inc
lcall
xchg
xor
movsl
or
popa
xchg
test
loop
adc
aad
inc
push
mov
sbb
adc
mov
and
pop
addb
insb
imul
mov
stos
fmuls
or
rcrb
or
cld
fldenv
in
push
scas
lea
int3
stos
push
iret
test
ret
shrb
call
pop
cmc
repnz
push
xchg
ret
pushf
fs
out
jmp
arpl
leave
push
xchg
aad
gs
dec
insb
and
inc
mov
and
rcrb
dec
loope
shlb
cli
sarl
sub
dec
mov
push
stc
cmp
pushf
jle
mov
pop
push
in
push
js
ficomps
mov
cmpl
inc
or
sub
and
xchg
movsl
and
jmp
js
xor
idivl
bsr
ret
adc
out
xchg
rorl
test
es
pusha
loopne
mov
js
mov
xor
adcl
pop
dec
cmp
mov
fstl
inc
adc
push
test
mov
or
pop
xchg
out
pop
jns
dec
pop
xchg
stc
cmpsl
cmpsl
cmpsb
iret
push
and
sbb
jo
adc
mov
dec
aaa
fimull
rcl
push
dec
sub
inc
jb
ret
push
inc
jb
push
jl
jg
xchg
scas
hlt
sti
mulb
jge
or
push
addr16
xchg
and
pop
push
xlat
stos
sarl
sub
xor
icebp
pop
iret
aam
sbb
xchg
adc
xor
mov
dec
adc
cmp
popf
jmp
adc
fwait
js
sbbb
nop
insb
adc
xrelease
push
lock
int3
sub
ret
mov
and
push
pop
adcl
xor
or
sub
and
data16
jg
jmp
icebp
nop
mov
call
mov
ret
xor
test
cmpb
lahf
add
inc
test
lock
sti
jb
xchg
mov
mov
mov
call
mov
ret
mov
jg
popa
inc
popf
jae
fs
push
push
stos
dec
adc
jbe
and
gs
arpl
or
push
sbb
and
adc
fdivl
pop
sub
jle
insl
les
rorb
cmp
mov
jle
jns
hlt
adc
dec
pop
popa
fcmovb
in
sub
adcb
shll
aad
push
sbb
dec
mov
mov
outsl
rorb
cmp
pusha
out
pushf
or
stos
inc
das
bnd
js
imul
xchg
adc
out
jnp
mov
push
fists
fiaddl
idivl
por
push
inc
and
cmp
mov
adc
je
loope,pn
push
popa
call
pop
insb
push
fstpt
xlat
jnp
cmp
aaa
repz
fucom
sub
mov
push
stos
push
pop
iret
pop
std
mov
bound
shl
pop
lods
lods
sbb
xchg
mov
jo
in
inc
out
jmp
out
rcrl
and
out
or
lea
mov
rcrl
jb
mov
cmp
ficompl
mov
inc
aas
jg
jo
subl
or
mov
shll
aad
test
xchg
mov
mov
hlt
pop
outsb
fwait
xchg
mov
scas
xchg
push
inc
jnp
lret
lcall
lods
inc
pushf
dec
sub
and
push
loope
xor
scas
std
xor
rcl
xchg
xor
ror
test
dec
ss
addr16
fcmovnb
lahf
fildll
inc
test
sti
push
fistl
xchg
ss
and
adc
xor
and
imull
idivl
xor
loope
test
test
lods
jg
outsb
sub
xor
push
fbstp
jg
push
pop
aam
lock
add
xchg
je
pop
sub
cmpsl
mov
add
xor
adc
pop
jns
mov
ret
es
lret
mov
fdivrl
mov
xchg
xchg
popa
cmp
in
arpl
push
push
or
inc
aaa
clc
lods
lret
pop
int
pop
lret
sbb
mov
mov
out
xorb
jbe
mov
idivl
int3
inc
ret
mov
data16
sub
adc
cltd
movsl
std
scas
dec
cwtl
loope
lock
adc
mov
fstps
imul
push
outsl
cmp
lods
mov
pusha
js
out
mov
adc
ds
mov
mov
decb
adc
int
and
jge
ljmp
dec
je
pusha
imul
pop
dec
repz
mov
pop
pop
das
cmc
mov
mov
rcl
xor
mov
mov
stos
sub
ror
mov
adcb
sbb
test
xor
data16
sbb
ljmp
mov
scas
add
push
xor
pop
sarl
mov
cmp
fcoms
popa
xchg
repnz
pop
test
sub
inc
jmp
jmp
shrb
das
test
push
cli
cmp
popa
dec
cli
hlt
stc
stos
sbb
sbb
cmp
mov
add
cmc
stos
out
outsl
mov
push
lret
loope
sti
xchg
push
fsubp
adc
test
ret
jle
xchg
push
xor
call
jno
mov
sahf
cld
popf
hlt
mov
sub
mov
mov
lcall
sub
jmp
scas
loope
pop
jno
lcall
cmp
add
jo
imul
push
push
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
xchg
xchg
sub
push
add
bound
pop
stos
outsb
add
fwait
in
dec
mov
jg
push
sbb
scas
out
sbb
cmpsb
seto
shlb
lea
mov
pop
lret
xchg
int3
dec
insb
inc
repnz
sbb
cmpsl
sub
fistpl
adc
push
add
cmpsl
push
mov
and
push
xchg
iretw
jl
inc
adc
jmp
cmp
push
stc
cmp
cmp
jmp
testb
dec
xlat
or
inc
push
add
outsb
and
cmpsb
or
sbbl
dec
mov
shrl
enter
dec
lret
or
dec
mov
mov
inc
fdivl
cld
mov
push
fldl
jecxz
add
mov
aas
xchg
or
adc
xor
gs
mov
testl
int3
and
ss
aas
and
fs
push
stos
cltd
rclb
pop
sbb
sbb
push
xor
mov
inc
loop
adc
push
adc
sub
add
add
add
sub
xchg
pop
cmp
lods
jmp
cmp
dec
aad
and
mov
mov
into
aaa
aad
jg
jnp
ret
cmp
sbb
push
fidivrl
xor
push
dec
test
lahf
jecxz
es
idivb
mov
cltd
jae
lea
lods
cmpsl
sbb
popa
pop
sti
and
cmp
xchg
insb
inc
lcall
jb
ret
aam
cwtl
loop
cmpsl
in
or
arpl
sub
adc
adc
pushf
arpl
adc
xchg
das
insl
push
push
subb
or
popa
roll
adc
cmp
xchg
adc
sub
mov
icebp
push
ja
adc
jno
mov
sub
mov
sbb
push
xchg
lock
es
test
outsb
jne
mov
testl
test
jbe
mov
dec
push
mov
lret
xlat
inc
repz
movsl
inc
data16
repz
mov
in
mov
fwait
lea
xor
lods
or
sub
leave
fisttps
jo
lcall
dec
enter
xchg
nop
call
repz
movsb
xor
mov
add
sbb
pslld
dec
cmp
mov
mov
test
cmp
int
fisubrl
lret
test
mov
sub
or
fiadds
pushw
les
push
stos
jl
mov
mov
mov
movsb
das
cld
mov
cwtl
int
mov
or
scas
mov
cmpsb
xor
stos
xchg
jle
push
pop
push
adcl
push
mov
or
ss
mov
inc
sti
scas
sbb
cmpsb
xor
and
mov
xchg
fwait
mov
out
in
mov
cmp
dec
mov
pop
fs
xor
inc
hlt
jl
repnz
cmc
rolb
leave
cld
sbb
jbe
fmuls
add
pop
adc
js
pop
inc
loopne
fists
jnp
or
repz
sub
and
mov
push
and
js
nop
mov
inc
or
fstl
cmpsb
pop
xlat
into
xchg
and
adc
cmp
pop
and
jae
cmp
dec
mov
cmp
fcomps
lods
lods
add
xchg
mov
mov
subb
xchg
jne
scas
jp
loopne
push
or
sub
mov
cmpsb
cmc
mov
cwtl
mov
push
cmp
movsl
xor
ret
out
xchg
sbb
inc
dec
fnsave
pop
div
sti
out
adc
inc
lcall
push
jno
loope
shrl
dec
jecxz
push
lahf
or
mov
push
imul
xor
loopne
pop
cs
fcmove
push
sbbl
or
outsb
gs
mov
adc
cmp
insl
pop
arpl
sbbb
arpl
loop
imulb
pop
dec
subb
fsubs
mov
pop
loope
mov
outsl
test
sbb
xchg
shlb
hlt
mov
mov
icebp
pushw
das
xor
in
sub
xchg
mov
insb
cvtpi2ps
aad
or
aad
inc
lahf
pop
dec
mov
inc
psubq
cmp
xchg
icebp
adc
inc
es
ret
xchg
pop
cmpsb
jmp
pop
imulb
inc
ss
mov
js
stos
xchg
out
lea
lahf
int3
sbb
pop
into
inc
pop
push
les
es
test
push
jno
imul
gs
mov
adc
mov
pop
jmp
push
or
sub
cld
inc
insl
insb
int
and
adc
dec
sub
ret
in
mulb
cmc
aaa
faddl
es
aad
pop
lock
filds
push
mov
pop
sub
in
addr16
sbb
mov
sbb
stc
movsl
xor
jg
nopl
aaa
cmp
out
pop
mov
dec
movsl
mov
lcall
inc
sbb
cwtl
add
aas
mov
xchg
dec
lods
in
inc
jae
std
mov
stc
dec
mov
hlt
add
push
cltd
and
ror
adcb
repz
dec
in
test
cli
lcall
mov
jge
lret
mov
lret
dec
push
sbb
jno
cwtl
adc
in
roll
mov
mov
fistpll
push
outsb
add
dec
lods
sub
sbb
pop
push
es
xchg
js
aad
imul
push
lret
cmp
call
mov
jns
sti
sti
movl
dec
mov
lea
inc
add
lret
les
fisubrl
jp
jno
bound
or
in
jnp
jbe
push
je
cmp
sbb
mov
pop
cmpsl
cli
in
rolb
dec
push
hlt
mov
xchg
arpl
xchg
push
push
movsb
pop
inc
pop
loope
add
insl
or
push
jbe
jmp
adc
sahf
mov
lds
bound
lds
pop
xor
push
inc
mov
incb
mov
scas
mov
xor
add
rorl
cmp
cmp
addr16
add
sub
dec
ret
and
test
mov
cmp
inc
imul
addr16
mov
je
pop
add
inc
mov
mov
jae
ds
mov
fucomp
andb
mov
dec
lret
fdivrl
testb
jecxz
push
push
jbe
enter
sbb
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
in
fadd
cs
add
inc
sahf
ljmp
loopne
sti
je
jle
adc
scas
push
std
lahf
xor
negb
mov
rcrb
int3
fisubrl
ljmp
ljmp
pop
add
mov
ss
or
aas
aaa
arpl
sbb
adc
repz
scas
enter
mov
out
xchg
test
js
cmp
jae
push
faddl
sub
and
imul
add
jmp
das
cmp
push
add
inc
add
sahf
mov
adcl
mov
shr
add
adc
or
mov
icebp
repnz
jmp
out
stc
xchg
xchg
jo
mov
lds
jmp
pop
cli
push
popa
or
jecxz
sbb
xchg
movsb
xor
insb
loop
mov
xchg
xchg
scas
daa
sub
xorb
or
orl
dec
stc
lds
cli
subb
ds
adc
imull
gs
pop
clc
add
scas
pop
scas
push
adc
mov
push
pop
jle
jge
push
lds
jge
or
mov
mov
addr16
add
popa
out
cmp
loop
mov
inc
inc
data16
cld
dec
out
xchg
in
and
popa
mov
outsl
mov
popa
sub
sub
sar
ret
arpl
dec
jl
rorb
inc
stc
sbb
fdivrl
jae
dec
push
cmp
lock
pop
popl
je,pt
loop
xor
dec
js
adc
int3
sbb
mov
inc
jg
jmp
rolb
iret
xor
arpl
in
insl
mov
dec
sub
out
cmp
dec
decl
dec
sub
lcall
xchg
cmp
sahf
push
dec
lahf
cltd
mov
pop
js
in
mov
dec
sbb
imul
adc
fdiv
mov
in
push
push
fchs
mov
inc
and
xchg
mov
mov
mov
inc
sub
movsl
xor
pop
pop
loope
mov
imul
pop
mov
sbb
popl
cmp
add
lea
cmpsl
into
inc
clc
sub
fidivrs
leave
fsts
lahf
fcom
inc
pop
lods
das
cmp
lcall
jno
int3
mov
sahf
xchg
test
lds
sub
fsub
jb
mov
cmp
xor
out
cmp
aas
sbb
cmp
push
les
jae
out
gs
enter
sbb
loopne
cmpxchg
xlat
pop
mov
ret
push
lds
cmpsb
sbb
or
mov
adc
lods
cld
imul
xor
sub
adc
sub
pop
in
or
sbb
jp
std
outsl
ja
xorl
mov
inc
mov
ss
xor
xchg
mov
dec
sub
xor
fldl
push
popa
mov
lods
or
cmp
out
mov
out
jns
fisttpl
xor
inc
dec
mov
dec
cld
int3
in
inc
sti
addb
shl
mov
movsl
in
jne
jle
mov
repz
fs
adc
psubd
rolb
ljmp
sub
test
xchg
insl
and
sbb
sub
add
lds
xchg
sub
jl
pusha
lcall
scas
cmp
push
ret
cmc
addr16
xchg
add
mov
int3
data16
shr
ret
scas
sbb
in
xchg
clc
call
pop
sbb
jmp
flds
test
stos
push
stos
sbbl
ja
es
loopne
ror
add
out
cmp
shld
push
mull
js
add
hlt
mov
pop
enter
xchg
jp
out
shrb
pop
add
outsb
mov
push
movsb
popa
ja
in
pusha
pop
orl
or
fwait
jl
pop
and
mov
jp
mov
adc
push
fwait
sub
cmp
popf
out
sti
cmp
dec
pop
mov
push
mov
mov
pop
jg
push
jno
sbb
stos
out
sub
insl
pushf
jge
sub
mov
imul
in
xor
cmpsl
leave
xlat
push
pusha
mov
push
inc
aad
out
pushf
xchg
push
adc
sub
adc
sti
testb
shll
cld
mov
pusha
test
imul
mov
aam
pushf
loope
ret
pop
sub
aaa
rorb
shlb
mov
push
pop
mov
sub
shrb
mov
sbb
xchg
pop
int
fucomip
int3
and
mov
cmc
xchg
xor
fsub
iret
dec
fwait
push
cmpsl
and
mov
bound
dec
mov
mov
xchg
push
dec
jae
ret
push
std
and
std
jbe
cmp
sbb
shlb
adc
loopne
cld
jle
lea
sub
shll
mov
sbb
jg
iret
daa
or
mov
xor
and
xor
xor
js
mov
jge
aas
cwtl
sbb
popa
lret
sti
cmp
rclb
repz
jmp
ss
out
ljmp
lahf
lcall
sub
roll
imul
push
sub
pop
mov
sbb
or
das
fs
cmp
or
jl
je
mov
cmp
ja
dec
cmp
xor
add
pop
pop
pop
or
roll
mov
inc
sbb
jecxz
inc
fdivrp
cltd
out
outsb
jnp
mov
shrl
sbb
les
imul
cmp
adc
sbb
xor
inc
dec
add
and
cli
mov
sti
jnp
push
fnstcw
sbb
and
enter
fidivrs
jg
mov
mov
dec
dec
imul
xchg
popa
test
scas
subb
push
rorb
sbb
push
dec
push
or
mov
dec
fsub
popf
push
push
inc
test
cmp
and
ss
mov
aad
testb
pop
pop
lods
addr16
stos
mov
jge
cmp
inc
test
sbbb
or
mov
aad
push
int3
xchg
lahf
pop
fwait
hlt
push
loopne
add
pop
xchg
fldl
enter
inc
aaa
leave
xor
xor
sub
jmp
xchg
and
mov
andb
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
movsl
or
in
inc
add
mov
or
test
cmp
arpl
in
pop
test
fsubp
mov
stos
loopne
rclb
push
scas
dec
fcoml
shlb
mov
hlt
jnp
pop
ss
imul
out
lret
jno
nop
xlat
popa
leave
arpl
jo
and
mov
pop
cltd
arpl
sub
sarl
ja
pop
test
int3
repz
imul
inc
out
scas
mov
cmp
mov
scas
mov
les
in
sbb
push
add
pop
pop
lods
movsb
pop
jo
dec
mov
or
hlt
fsubrp
mov
sbb
jge
lods
and
and
lret
outsl
daa
leave
test
mov
sbbb
sub
into
daa
fdivr
jmp
scas
shll
sub
sahf
xor
mov
inc
mov
sbb
jmp
sbb
mov
mov
fs
pop
xor
sub
pop
push
iret
enter
sbb
pop
icebp
push
jmp
sti
loopne
rcr
or
adc
aad
jg
inc
outsl
mov
mov
adc
mov
mov
inc
inc
shll
shrl
sahf
sbb
adc
push
sub
daa
mov
lods
out
push
lcall
jae
cs
subl
inc
pusha
in
scas
test
sub
ja
cmpsb
int
cltd
mov
cltd
jecxz
pop
jp
jb
inc
xchg
pushf
aam
mov
or
lds
ljmp
dec
mov
mov
jnp
jno
and
push
and
inc
push
jo
fcmovne
mov
inc
push
dec
lea
xlat
clc
adc
add
mov
dec
mov
jnp
hlt
adc
dec
pop
lods
jnp
leave
cltd
or
les
addr16
adc
int3
jmp
cmp
daa
sub
jle
orl
outsb
adcl
cmp
pop
xchg
stos
fs
jb
mov
jne
aam
mov
mov
lcall
faddp
pop
test
ficomps
jle
xchg
jbe
jl
test
cltd
and
mov
les
mov
jae
push
push
int3
je
xor
lcall
in
pushf
leave
xchg
or
lret
pop
cmp
sbbl
cltd
dec
std
lods
cltd
add
jbe
jno
cwtl
sub
xchg
stc
js
jl
test
adc
sbb
lret
sub
push
icebp
mov
or
jbe
push
daa
pop
mov
fwait
mov
sahf
sahf
stos
repz
sub
rolb
adc
loopne
xchg
and
insl
aad
jecxz
cmc
out
int3
push
xchg
icebp
or
rorl
ud1
adc
xchg
jbe
xchg
in
out
enter
ficomps
dec
or
and
push
test
in
cmp
xor
adc
push
jnp
dec
inc
xlat
cli
decb
fdivrl
ret
lea
mov
cli
push
pop
mov
insl
shl
addl
lahf
in
je
scas
xchg
fucomip
iret
pushf
test
inc
push
sbb
inc
inc
and
int
push
mov
fwait
pop
cwtl
push
ret
push
xchg
sbb
ret
jns
dec
movntq
mov
mov
jg
jo
je
xchg
stos
es
xor
lea
sbb
jno
jg
pop
sub
sub
insl
xchg
std
imul
add
in
dec
nop
adc
cmpsb
cmp
push
and
cmp
pop
dec
pop
out
cmp
inc
push
add
jp
dec
cld
movsl
dec
pop
cmpsb
stos
inc
mov
jo
mov
sahf
sub
idivb
subps
lods
jno
jae
addr16
notl
xor
cvtps2pi
jne
inc
hlt
mov
clc
mov
lods
sbb
lea
mov
cmpsl
push
pop
inc
loopne
push
enter
test
inc
push
mov
jbe
mov
lds
mov
outsl
andb
mov
icebp
movsl
mov
fldenv
push
xchg
lock
notl
xchg
sub
aaa
xchg
jp
jmp
in
mov
lahf
inc
outsb
popa
ret
sub
and
cltd
or
cld
popl
sti
xchg
and
repz
shl
sub
lret
inc
inc
or
pop
pop
pop
sbb
pop
pop
sbb
paddsw
movsl
sahf
push
add
pop
sub
and
jmp
inc
mov
and
fs
lahf
xchg
add
xchg
dec
daa
jno
push
scas
mov
repnz
jle
movsl
int3
les
stc
sub
and
inc
mov
jp
jo
pop
jecxz
dec
rorb
jns
roll
cwtl
mov
mov
ret
mov
inc
inc
mov
mov
pop
jl
inc
jo
mov
pushf
or
xor
mov
push
popf
cmp
std
mov
add
mov
mov
popa
in
add
addr16
push
imul
ret
or
xlat
test
mov
dec
inc
add
lcall
lcall
cmp
iret
insb
scas
sti
mov
inc
fadd
sub
iret
dec
test
std
and
cmp
push
xchg
push
jmp
mov
icebp
push
mov
gs
js
cmp
mov
push
mov
outsb
test
mov
fcmovne
sti
inc
ss
dec
fisubrs
sub
lret
xchg
inc
les
stc
inc
int
jl
cli
imul
mov
adc
cmp
adc
aad
out
inc
cwtl
pop
repz
dec
lds
or
add
sub
pop
loope
sbb
int
in
jmp
sbb
or
xor
push
bnd
push
jae
push
dec
ret
imul
fs
jmp
add
sub
clc
int3
sub
add
jl
push
popf
repz
outsb
mov
sub
in
lret
inc
ss
pop
inc
mov
data16
add
inc
roll
xor
lods
push
fldenv
repz
mov
rcr
push
loope
cmp
mov
gs
xchg
in
stos
int3
lods
int
sub
push
ss
cs
cltd
mov
mov
jb
cmp
inc
push
insl
jnp
add
mov
lret
out
daa
adc
mov
leave
xor
imul
rclb
inc
xchg
aad
mov
aaa
mov
jecxz
jo
sub
sub
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
pop
sbb
sub
sbb
lahf
pop
out
dec
sbb
pop
jb
mov
inc
cmp
xor
add
gs
shll
loope
test
lahf
test
cld
repz
pushf
adc
jb
xor
xchg
adc
push
mov
aad
push
ja
mov
mov
jnp
jg
xchg
xchg
fcmovnbe
or
xor
cmp
push
jmp
jl
pop
inc
and
mov
mov
aam
jb
je
inc
and
imul
mov
xor
adc
inc
xor
adc
push
adc
outsb
ljmp
les
lcall
xchg
mov
xor
xor
je
xchg
mov
cli
xor
jnp
push
mov
imul
xchg
pop
mov
xor
or
cli
sub
xlat
mov
sub
inc
mov
mov
sbb
dec
mov
jle
fdivrl
add
testb
or
add
pop
mov
clc
mov
pop
sbb
jg
repz
mov
push
adc
dec
add
cmp
jge
xor
ljmp
push
mov
mov
stos
mov
push
xor
incl
roll
sbb
xor
cltd
push
ficoml
out
lods
mov
push
jo
ror
cmp
sub
and
shlb
jmp
shrb
jp
add
stc
jge
xchg
popf
jbe
sbb
add
or
repz
std
fwait
outsb
icebp
dec
cmc
add
stc
orb
mov
push
in
mov
rolb
nop
jp
mov
call
push
jg
pop
aam
jge
jg
lahf
and
xor
rcr
mov
arpl
ret
pop
mov
scas
jle
aas
push
fstps
adc
pop
jmp
and
fdivs
xchg
jp
dec
sub
pop
mov
mov
dec
aam
mov
mov
push
rcr
xchg
das
push
andb
sbb
push
repnz
mov
sub
fisubrl
fs
or
cmp
call
mov
addps
pop
sub
dec
es
push
fcmove
sbb
stos
lahf
pop
notl
jmp
sub
sbb
mov
or
outsl
mov
jae
fwait
out
or
fcmove
loop
shrw
popf
xchg
dec
icebp
jo
dec
shlb
pop
inc
stc
mov
and
orb
subl
ficomps
dec
mov
and
out
mov
push
lret
mov
sbb
stos
dec
icebp
xchg
mov
push
push
mov
inc
jecxz
jle
push
rolb
fcoms
push
or
out
outsl
in
test
mov
sub
cmpsl
mov
gs
das
cmp
push
fs
lcall
je
inc
and
cli
push
mov
dec
sub
cmp
jae
bound
cmc
lea
sbb
ret
mov
popa
xchg
out
and
sub
push
ds
in
pop
add
add
ficomps
sti
fisttpll
in
pop
cmc
stos
lret
jg
push
das
cwtl
adc
sub
xchg
xchg
and
jns
pop
push
std
cmc
loope
inc
insb
pushf
dec
fdivrs
fists
fs
inc
std
cmpsb
jno
push
push
scas
xlat
lock
cmpsb
jbe
icebp
cmp
insl
mov
sbb
or
xchg
int
sub
sub
xchg
out
xor
sbbl
ds
pop
bound
adc
test
in
sbb
fists
stos
lahf
dec
dec
loope
mov
cmp
ret
scas
lods
mov
sbb
xchg
subb
xchg
jns
enter
sbb
dec
or
xchg
mov
imul
cmp
push
addr16
sbb
std
or
sub
sub
popf
in
bound
add
adc
aam
or
jbe
test
packsswb
mov
fdivrp
cmp
push
lret
test
jle
xor
mov
mov
bnd
xor
adc
push
mov
test
push
sarb
push
fiaddl
mov
push
mov
sbb
lock
inc
mov
das
pop
xor
xchg
mov
and
ja
mov
lret
jge
fimuls
ja
pop
out
les
scas
pop
stos
gs
push
cmp
mov
sbb
pop
or
xadd
lcall
pop
mov
add
dec
fmul
jmp
cmp
mov
insl
push
fwait
pop
or
cmp
mov
add
xchg
add
adcl
pop
mov
ljmp
dec
cmpl
cmp
psrld
push
mov
outsl
leave
xchg
rolb
fbld
lret
or
inc
cmc
push
sbb
xchg
mov
rcl
dec
daa
fisubl
ror
imull
pop
mov
jne
push
add
lea
add
jmp
sub
cmc
xchg
test
xor
sti
cmp
and
fistpl
and
jb
cwtl
test
lcall
or
pop
cli
xchg
xchg
fsubs
cmp
pushf
mov
iret
mov
and
enter
mov
dec
push
aas
bound
mov
mov
roll
dec
xor
icebp
push
dec
cmp
cmpsl
pushf
xchg
es
fs
arpl
aad
pop
dec
mov
jl
loopne
rcr
add
dec
movsl
pop
mov
popf
lds
push
popa
mov
mov
ficoml
shrl
sbb
mov
dec
adc
fisubrs
imul
cmp
cmp
sbb
sub
clc
mov
or
dec
mov
sbb
pop
enter
push
stos
clc
xchg
cmpsb
lods
roll
in
js
fdivs
add
les
jle
jg
fneni(8087
lods
sbb
sbb
lds
xor
lahf
sub
gs
movsl
nop
cmp
es
mov
je
clc
adc
or
or
adc
xlat
pushf
pop
or
fstpt
jmp
cmpsb
scas
mov
adc
jg
xchg
xchg
in
pusha
push
jmp
inc
insb
inc
sbb
push
pop
mov
jns
pop
fistl
jno
push
sti
or
icebp
and
lret
dec
fwait
test
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
inc
jg
add
repz
ret
mov
lea
dec
add
mov
push
pusha
cld
leave
sbb
loope
lea
mov
add
xlat
push
loop
mov
dec
sub
shrb
pop
outsl
ret
pusha
jae
sbb
movsb
repz
jecxz
or
sbb
std
arpl
cmp
lret
add
es
loopne
idivb
dec
sbb
cltd
dec
or
pusha
jae
xchg
aaa
xchg
pop
jne
es
or
and
cltd
mov
repz
xlat
cli
dec
fwait
adc
std
cmpsl
rclb
add
xchg
dec
outsl
stos
push
cmp
mov
repnz
cmp
rcll
xchg
pop
sbb
data16
addr16
jb
shlb
and
or
movsb
mov
cs
les
or
loopne
les
pop
mov
mov
roll
push
jo
cld
ret
in
in
pop
mov
cli
cmp
ja
cmp
out
jbe
sarl
imul
pop
das
outsb
test
je
mov
and
sub
sub
xchg
dec
stos
xchg
stc
xchg
jecxz
or
xchg
sub
xor
inc
loop
outsl
and
adc
shrb
pop
dec
jle
xor
out
test
jl
push
jmp
arpl
fdivl
sahf
jecxz
out
xor
data16
leave
mov
dec
pop
lcall
sarb
adc
cmp
push
sahf
dec
and
mull
pusha
arpl
cmp
rcl
pop
mov
fsubrl
jg
out
xor
fld1
adc
xorb
jnp
test
aam
sub
xchg
xor
stos
pop
insb
pop
sbb
sub
popa
sarb
adc
hlt
dec
rcll
jnp
mov
cmp
loopne
ja
lret
jp
xchg
lret
rorb
subl
dec
rcr
adc
std
fucom
sub
jle
push
fisubrs
mov
stos
ror
pop
pushl
push
aad
and
aas
popf
cmc
mov
lret
aaa
pop
pop
add
mov
popa
and
push
out
jnp
xor
sub
int
popa
push
roll
inc
enter
and
mov
ficoml
rorl
mov
inc
mov
scas
mov
xlat
xor
inc
popf
xchg
out
leave
stc
push
mov
xor
push
and
pop
pop
lods
cltd
mov
into
leave
sbb
popa
clc
jne
ja
fcoml
loope
mov
roll
jecxz
inc
push
fwait
or
xor
ret
pop
inc
repz
out
and
les
mov
into
mov
pop
or
call
push
mov
enter
in
ficoml
mov
repz
pop
adc
imul
lret
mov
and
push
mov
inc
cmp
xor
into
lret
add
xchg
add
or
outsl
movsl
jmp
pop
jecxz
dec
push
sbb
scas
xor
pop
pop
ljmp
shr
jg
mov
push
mov
loopne
inc
sarl
or
jl
jno
jle
rcrl
adc
fwait
jno
shr
and
push
daa
push
ds
roll
sar
fistps
inc
popf
cmpsb
lret
jb
test
inc
adc
pop
sub
jb
jl
ja
loop
popa
xchg
sarl
mov
mov
cli
enter
shll
mov
iret
push
imul
sub
aas
in
add
jnp
into
popf
popf
popf
mov
pop
shlb
xor
pop
push
lods
sub
and
push
jl
aas
les
mov
xor
fcoms
adc
add
mov
pop
sbb
mov
pop
adc
pop
sahf
scas
test
push
and
and
daa
mov
jo
jp
sbb
jl
out
mov
ret
stc
cld
sarl
shrb
scas
sahf
pushf
dec
int
repz
je
push
push
movsl
data16
hlt
imul
jno
popa
scas
lods
xchg
push
hlt
xor
push
fwait
adcl
daa
ret
add
lret
adc
pop
lds
mov
push
pop
ja
push
scas
sbb
or
and
iret
pop
cltd
jno
cmp
add
push
or
fcoml
cli
rorl
loop
dec
xor
aaa
push
pop
jmp
mov
in
shll
sub
fs
icebp
dec
mov
inc
and
fwait
xchg
ljmp
xor
jo
lcall
loopne
mov
dec
sbbl
push
mov
jb
dec
js
adc
xor
or
aaa
int
adc
inc
pop
xchg
jecxz
in
int3
or
pop
out
xor
and
ds
das
mov
dec
push
nop
movsb
xor
jmp
ret
out
fildl
icebp
push
mov
or
adc
aas
push
out
jo
mov
add
repz
roll
jmp
push
inc
add
mov
scas
inc
lcall
mov
sar
jg
loope
pop
add
hlt
push
lahf
ja
mov
sub
sbb
push
xchg
xchg
lret
popf
pop
sub
testl
lea
int3
adc
lds
and
cmpsb
mov
popf
imul
pop
pusha
xchg
addr16
push
fsubrs
add
add
mov
sarl
rcll
pop
iret
andl
xchg
addr16
xor
inc
xchg
mov
in
jge
add
inc
fstpl
xchg
mov
int
outsl
push
jno
sub
cmp
imul
push
add
rcr
jmp
jge
pop
enter
inc
fwait
xchg
cmp
add
arpl
jne
ffreep
dec
cld
repnz
ja
sarb
mov
repz
push
cmpsl
fldenv
fst
xchg
jbe
and
sti
lret
pop
cmp
movsl
sub
dec
outsb
xor
je
in
push
mov
cmp
fs
adc
jno
and
mov
rcrb
mov
mov
and
pop
mov
lods
xor
ja
test
xchg
bound
repnz
jne
sbb
inc
pop
les
inc
push
jbe
xor
lcall
popa
std
push
test
and
outsl
adc
mov
add
ljmp
insb
xchg
xchg
movhlps
and
jns
cmp
or
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
push
js
jnp
cmpsl
aam
xor
jno
add
test
and
mov
push
enter
or
inc
ja
test
mov
adc
and
ljmp
cmp
mov
rolb
enter
sbb
fnstsw
or
imul
aaa
outsl
xchg
ret
jge
fcoms
std
addr16
sub
push
or
mov
arpl
push
push
test
sub
jl
or
test
in
lods
popa
out
xor
xchg
nop
js
add
adc
jb
mov
xor
pop
adc
int3
hlt
ljmp
pushf
mov
inc
dec
pop
xchg
and
sub
lahf
mov
mov
push
dec
shlb
jle
add
push
add
push
divb
sub
push
and
push
jns
dec
mov
push
loop
mov
jns
mov
mulb
cmp
sbb
inc
dec
lea
jecxz
faddl
sahf
dec
mov
imul
dec
lahf
jecxz
aas
add
bound
in
aad
roll
mov
jmp
clc
lea
fists
or
mov
ret
ja
inc
pop
xor
dec
into
iret
mov
pop
jne
mov
pop
ficoms
dec
enter
mov
mov
adc
pop
lret
push
adc
mov
imul
xchg
jle
push
rcl
ja
lahf
fisubrs
out
mov
pushf
arpl
pop
xor
jecxz
nop
mov
sub
pusha
loop
es
cmp
jo
sbb
or
cltd
dec
mov
ljmp
sbb
daa
push
and
movsb
mov
mov
outsl
and
adc
popf
js
adc
and
jmp
nop
cmp
popf
dec
in
xor
mov
out
sub
mov
xchg
iret
cli
sub
imul
mov
pop
or
pop
or
addr16
loop
push
dec
fistps
test
idivb
xchg
inc
icebp
ret
xchg
mov
ret
outsl
mov
mov
fmul
adc
xor
das
mov
shl
fcmovu
test
sti
jbe
movsl
ror
test
icebp
mov
out
subl
mov
fldenv
xor
adc
xchg
xor
jae
lcall
scas
leave
test
lods
adc
outsl
fwait
dec
jle
daa
sbb
bound
inc
mov
xchg
mov
ffree
mov
xlat
ja
or
rcll
fcompl
das
pushf
andl
pop
and
je
mov
xchg
or
cmp
or
add
mov
and
adc
lahf
jb
mov
jnp
imul
xchg
daa
subb
jns
adc
shll
mov
cmpsb
test
xchg
push
sub
inc
sub
pop
mov
jecxz
popl
mov
inc
push
lds
pop
iret
add
cld
cmp
adc
cmpsl
ss
fstpt
daa
xor
xchg
out
mov
mov
mov
push
or
jg
es
sub
ret
hlt
dec
dec
pop
notl
or
ret
dec
daa
stos
fwait
pop
push
pminsw
xchg
aaa
lret
push
in
adc
and
cmp
addr16
clc
ret
xor
cmp
jecxz
fwait
adc
and
dec
cmp
in
sub
lds
std
cli
cmpsb
jg
mov
adc
push
xlat
push
and
ljmp
mov
push
push
imul
popa
ss
and
cli
cmpsb
cmp
scas
repnz
and
dec
xor
cld
cmpsl
push
aaa
leave
and
mov
sub
test
jmp
scas
movsl
lahf
shrb
sbb
mov
call
popf
out
dec
stos
adc
loopne
ror
xchg
cmp
pop
push
mov
cmp
fisttpl
mov
push
jno
call
clc
sub
mov
add
orl
xor
aam
fcmovnbe
test
and
lahf
add
mov
sub
jnp
rorl
adc
xchg
mov
pop
adc
aas
outsl
sbb
cmp
xchg
lods
cld
fists
lea
pop
dec
mov
push
rcl
push
adc
orb
xchg
loope
ja
xchg
push
cmpsb
stc
test
mov
pop
pusha
or
mov
movsb
or
push
sbb
outsb
cltd
inc
fisttpll
push
int3
mov
jns
aaa
push
push
inc
lods
ret
or
sub
inc
fsubrl
stos
popa
cmc
out
sbb
nop
lcall
pop
jge
shrb
push
repnz
adc
addr16
ljmp
ss
xchg
andl
xchg
arpl
fnstcw
cmpb
lret
mov
add
pop
mov
repnz
popl
ss
call
cwtl
push
pushf
xchg
push
dec
aaa
mov
mov
js
jge
lcall
shlb
xor
imul
rcrb
add
int
mov
mov
adc
inc
cmp
out
vcvtsi2sdl
in
out
mov
add
mov
out
cmp
shrb
addr16
out
mov
inc
cmp
xor
loopne
dec
inc
adc
or
inc
aas
je
or
mov
jns
cmp
out
dec
or
enter
xor
sbb
mov
in
ss
adc
sahf
rclb
dec
mov
cwtl
leave
or
inc
sbb
mov
in
and
out
inc
fsub
inc
ljmp
orl
dec
rol
xchg
sub
scas
imul
call
cmc
jmp
push
lods
jl
mov
mov
jmp
sbb
mov
fstpl
les
in
xor
out
push
insb
and
ds
xchg
pushf
shrb
cmp
jmp
das
pop
pand
out
test
xor
fnstsw
jns
test
sbb
xchg
inc
pusha
or
cmp
test
lret
push
add
shrb
ss
mov
outsb
nop
push
sbb
int
add
into
lret
popf
into
and
cli
inc
movsb
jge
stc
lret
fistl
out
jne
pop
add
cmp
fistpll
cli
add
test
fildl
mov
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
or
add
aad
pop
lret
lock
fwait
mov
dec
and
call
mov
xor
rcr
clc
pushf
cs
or
jno
out
jmp
loopne
push
jmp
inc
jp
mov
push
adc
cmp
stos
pop
cmp
call
fisubrs
or
out
pushf
movsb
mov
into
mov
xchg
dec
add
fucomp
repz
pop
pop
roll
fstpt
fists
dec
dec
and
sti
fisubrl
imul
xchg
dec
in
out
lea
push
cmp
and
sbb
push
orl
lret
or
cmc
sbb
outsb
idivl
or
mov
mov
mov
push
jle
movsl
cmpsb
mov
mov
xor
pop
hlt
scas
xor
inc
sub
dec
outsb
push
cmc
test
dec
hlt
int3
mov
adc
fwait
aas
xlat
popa
ret
loop
mov
sbb
dec
test
daa
sbb
and
ficomps
adcl
lcall
push
push
out
jnp
mov
cltd
mov
pop
xchg
adc
push
adcb
jge
pop
pop
inc
cmc
insb
popf
int3
mov
dec
jo
mov
out
mov
pushf
inc
inc
mov
sbb
mov
mov
stc
test
push
push
dec
xor
mov
push
and
mov
push
ror
and
ja
into
lret
pop
sti
push
mov
mov
int
sahf
movsb
xchg
mov
and
jbe
push
cld
cli
pop
insb
mov
sub
jnp
adc
sahf
jle
xor
mov
xchg
mov
fistl
iret
filds
push
sub
cwtl
sbb
pushf
rorl
test
xchg
push
out
adc
pop
xchg
xor
push
jns
es
adc
mov
inc
fs
ss
xor
and
xchg
push
push
es
or
xchg
pusha
pop
cwtl
adc
int
cltd
mov
insl
lret
jae
lea
fdivs
shrb
mov
fldcw
xor
cltd
mov
data16
xchg
mov
xorb
sub
fldl
test
pop
xchg
cmp
fwait
leave
icebp
outsb
cmpsl
xor
test
std
jo
mov
negl
dec
jnp
cmp
je
jno
xchg
test
in
pusha
addl
inc
inc
mov
stos
fdivs
adc
xor
pop
xchg
mul
jle
in
xor
lds
add
scas
xchg
jp
insb
mov
inc
aam
sub
xchg
rcr
cmp
and
imul
pop
pop
sbbb
push
mov
loop
adc
incb
arpl
xchg
test
int
xchg
adc
add
xor
jo
insl
pop
cmp
into
insl
lock
add
push
adc
das
mov
rol
add
push
je
mov
lea
daa
inc
or
call
inc
in
push
shrl
mov
pop
xor
jns
and
and
int3
push
xchg
mov
jle
push
insb
sarb
inc
lods
xor
faddl
aaa
inc
push
ljmp
shrl
aad
repz
sbb
mov
dec
outsb
dec
jl
test
cmc
js
pop
add
lods
and
add
mov
fldl
fbstp
mov
pause
popa
inc
sbb
lock
mov
das
jb
sbb
mov
mov
cmp
push
adc
test
jne
es
and
ja
dec
jg
movsl
icebp
push
push
push
dec
aad
jle
cltd
jb
in
mov
dec
pop
fistpl
into
stos
xor
xor
nop
push
lcall
rol
lds
xor
int
insl
repz
pop
xchg
xchg
ret
stc
int
test
push
xor
nop
pop
fsubs
pop
or
jecxz
out
xchg
mov
jne
cmp
test
mov
dec
popa
mov
movsb
nop
cmp
jg
dec
and
lret
lret
and
or
pop
inc
test
mov
pop
sarl
fbld
aad
fists
fidivrl
adc
push
cs
aas
and
daa
and
aam
neg
mov
iret
shrl
inc
xor
fs
jge
adc
in
or
push
jp
push
es
dec
jge
pop
jg
lahf
sbb
mov
mov
adc
ror
filds
fwait
add
mov
stc
jne
push
jo
es
and
inc
mov
icebp
and
bound
xchg
push
xchg
clc
inc
shlb
xchg
inc
pop
mov
mov
in
dec
add
jne
jecxz
in
mov
fwait
sub
push
cmp
mov
out
popa
mov
inc
cli
sbb
ret
hlt
inc
push
jne
push
fidivrl
push
out
adc
sub
pop
pop
leave
lock
jl
push
ret
jne
sahf
push
out
sub
xchg
or
pop
decl
pop
mov
xchg
inc
enter
sub
mov
push
aaa
push
ret
sbb
call
ljmp
pop
adc
xchg
or
cmpl
inc
pop
cmp
mov
in
push
fldcw
xchg
and
sbb
mov
fiaddl
mov
pop
push
sbb
adc
xor
imul
addr16
mov
xchg
pop
adc
out
testb
popf
fxch
sub
test
lret
lahf
fimull
xchg
popa
inc
and
lds
ljmp
pop
adc
mov
sub
mov
jl
or
jle
mov
push
clc
inc
dec
andl
aas
cmpsl
movsl
adc
js
mov
cmc
dec
dec
ss
cmpsl
loope
cli
mov
pop
lret
daa
push
arpl
cld
adc
lock
cmc
insl
test
sahf
aaa
and
in
push
lret
jo
inc
jp
ret
xor
mov
adc
lret
popa
cmp
ja
cmp
and
ret
dec
sbb
mov
lock
pop
jo
sti
adc
cmp
xchg
lds
pop
cmp
jle
dec
sub
jecxz
jl
sbbb
mov
pop
test
adc
lods
ljmp
sub
sbb
ret
outsb
ds
or
cmp
ret
sub
call
outsb
shl
and
aaa
clc
push
cmpsl
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
xchg
sub
mov
add
jp
sbb
lock
cmp
icebp
jmp
pop
jge
loope
pop
xor
je
sub
xchg
sbb
xor
aam
lcall
xorb
jecxz
dec
or
lea
rorl
adc
fs
mov
stos
rclb
pop
dec
xchg
mov
popf
add
push
in
inc
imul
ds
int3
jne
cmp
and
fdivl
add
pop
mov
dec
test
loope
and
les
xchg
int3
fucomi
cmpsb
sbb
dec
in
insl
es
or
out
cmc
sub
test
push
sub
push
arpl
push
push
clc
or
ljmp
xor
test
imulb
add
mov
popf
aaa
jmp
sbb
pop
and
or
call
aaa
test
in
xchg
sti
lods
fsubp
or
flds
fidivrl
pop
sub
sbb
pop
mov
movsb
or
loop
jmp
dec
test
inc
lret
inc
jl
or
push
andb
mov
mov
sub
pop
and
sub
cld
pop
scas
or
sub
pusha
std
daa
mov
sbb
xchg
call
sti
push
mov
sub
pop
pop
jg
add
adc
pop
je
fldl
adc
sub
std
mov
or
jmp
jno
mov
push
push
or
inc
dec
sbb
cmp
push
mov
and
repz
icebp
mov
add
pop
dec
repnz
inc
or
push
mov
xchg
push
mov
daa
push
ljmp
test
pusha
push
scas
loop
test
rorl
aad
jmp
incb
push
or
test
mov
stc
loop
push
xchg
repnz
inc
ss
pop
and
mov
call
pop
mov
lret
imul
pop
fnsave
call
or
nop
or
sbb
insl
leave
std
pushf
or
scas
lds
testl
leave
mov
push
addb
cli
lret
gs
inc
aaa
lret
adc
jns
scas
movsb
movsb
cmpsl
neg
aaa
mov
cmp
popa
mov
imul
jns
inc
cld
into
adc
fs
sbb
fldl
imul
insl
or
daa
dec
mov
stc
ljmp
mov
ja
ss
sub
lcall
dec
push
sub
movsb
fcmovnb
sbbl
push
lcall
mov
pop
das
arpl
mov
pusha
push
and
andl
int
pop
jg
push
xor
jp
pushf
in
mov
insl
pop
sti
aam
bound
sub
jns
out
imull
jbe
mov
dec
push
inc
and
icebp
fstps
sbb
repz
loopne
ja
push
xchg
add
imul
mov
cs
sub
jae
xchg
xchg
hlt
inc
inc
sbb
push
and
popa
jno
and
mov
fs
fisubs
dec
nop
jmp
out
pop
adc
rcrl
das
mov
mov
push
mov
fs
in
fidivrs
aam
cmp
repz
xor
pop
sbb
mov
mov
call
or
and
cmp
lret
push
js
adc
mov
out
mov
les
gs
dec
fs
xchg
xor
dec
fwait
sub
in
scas
mov
lahf
ljmp
pushf
jno
out
push
pop
pusha
mov
push
jno
in
aad
jne
lods
mov
loope
aaa
adc
rorl
ljmp
aam
pushf
inc
xchg
sub
ficomps
inc
jp
daa
push
adc
in
xchg
stc
jb
gs
cmp
pushf
xor
sbb
leave
mov
out
cli
lea
imul
push
out
pop
adc
test
lea
add
dec
je
in
jb
jnp
pop
lret
and
insb
ret
test
imul
pop
and
or
and
andb
or
js
pushf
push
mov
sbb
int3
and
cmp
subl
cmp
jnp
mov
xchg
test
lea
push
mov
pusha
dec
or
xor
jl
push
fisubrs
sbbl
imul
jl
sbb
arpl
out
insb
lea
mov
cmp
jle
out
loope
icebp
out
push
int
fdivs
add
dec
mov
jp
push
mov
pop
add
call
daa
pushf
sub
mov
jle
leave
popf
and
pop
stos
out
inc
sahf
xchg
pop
popa
pop
mov
ss
lds
incl
mov
jns
pop
lock
jo
das
mov
fstpl
push
sub
rorb
fwait
or
inc
cmpsb
fcoml
call
jecxz
cmp
data16
mov
add
in
out
xor
test
call
dec
push
imul
loopne
pop
sub
mov
bound
addr16
xchg
add
std
xchg
pop
pop
sub
sahf
push
fidivrs
popf
mov
or
mov
xchg
pop
fxch
sub
fildll
cmp
pusha
cmp
cli
and
lret
mov
mov
jmp
cld
xchg
mull
and
jns
inc
inc
push
cmp
orl
xor
lret
in
add
mov
not
daa
addr16
ljmp
icebp
dec
push
pop
sahf
pop
dec
divl
test
adc
movsb
mov
or
mov
ret
jl
inc
les
mov
mov
fiadds
test
inc
pop
lret
stos
aaa
test
adc
pop
or
or
cld
push
pusha
push
cs
lea
cmpsl
pop
cmp
xor
add
loop
subb
adc
xlat
lea
jl
or
ret
jb
adc
inc
inc
cmp
and
jge
shll
sahf
push
push
jmp
aad
int
test
loop
inc
adc
inc
sub
and
sbb
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
psrad
loopne
enter
pop
mov
push
pop
enter
mov
jo
adc
pop
mov
bound
and
addr16
jge
cwtl
inc
outsb
inc
xor
mul
out
stc
nop
out
push
adc
xchg
inc
nop
cmpsl
rclb
ss
ljmp
testl
xor
ret
pop
adc
scas
insl
add
sahf
xchg
push
ret
lahf
lret
out
pop
loop
push
sub
cmpl
and
adc
cmpsl
push
stos
mov
adc
push
out
pop
xchg
inc
adc
push
cmc
stos
sbb
das
scas
nop
shll
sub
punpcklwd
adc
gs
sbb
mov
xor
pop
or
dec
int
filds
mov
out
mov
mov
fisttps
mov
mov
es
mov
mov
push
psubw
scas
mov
cmp
pop
adc
bound
mov
shrb
loope
lea
int
gs
mov
std
ss
sub
mov
out
inc
inc
and
popf
enter
ljmp
or
lds
pop
je
rcrb
add
ja
push
shrb
push
push
dec
movsl
mov
lods
out
lret
ds
or
imul
clc
imul
pop
mov
jno
inc
outsb
out
rcll
push
and
push
inc
add
enter
pop
xlat
adc
jne
jmp
push
add
stc
scas
jnp
fs
xchg
cmp
popf
dec
stos
test
xlat
sbb
fs
cmpsl
push
push
push
or
rolb
xchg
jmp
push
xchg
mov
jo
ja
mov
mov
rcrb
int3
loop
fcomi
aad
leave
adc
pop
adc
fs
insl
and
mov
test
xor
cvtdq2ps
ja
sbb
and
jne
jle
sbb
mov
and
cs
enter
loopne
inc
xchg
out
jmp
cmp
adc
decl
push
pop
sbb
fwait
imul
gs
pop
inc
xor
jno
aam
lret
xchg
add
ss
lea
ljmp
out
test
fisubs
mov
imul
push
incb
adc
mov
pop
cmp
push
jno
lods
enter
movsl
ds
jbe,pn
jecxz
in
pop
dec
fwait
dec
lret
lcall
inc
call
add
sub
xchg
dec
rorb
cltd
pop
mov
int
mov
push
cmp
xchg
xchg
lret
jge
sub
insb
inc
lret
into
ljmp
mov
xchg
xchg
movsl
pushf
jp
icebp
mov
cmpsb
mov
xchg
call
pop
and
sbb
ss
ret
sti
fbld
dec
pop
insb
and
ds
lahf
cs
mov
xor
dec
mov
cmp
mov
push
orb
rclb
mov
cld
loop
std
fcoms
sub
pop
into
or
je
dec
mov
inc
cmpsb
dec
mov
mov
xlat
pop
adc
dec
inc
mov
mov
out
push
mov
mov
mov
loope
inc
push
lea
cmp
aam
and
popa
out
and
insb
mov
mov
subl
cli
scas
cs
adc
fisttpll
add
test
and
scas
push
sbb
or
or
adc
out
cmpsl
jbe
fcomp
cmp
pop
mov
mov
das
or
fistpl
inc
adc
cmp
mov
repnz
pushf
bound
aad
push
xchg
or
jmp
sbb
adc
lods
movsl
mov
mov
hlt
outsb
mov
inc
jecxz
leave
xchg
sub
aas
dec
movsb
xchg
mov
adc
push
es
cmp
xchg
mov
in
outsl
push
sub
push
cli
inc
stc
sub
dec
icebp
lods
iret
mov
push
inc
leave
push
test
in
pop
loope
push
mov
dec
das
lods
mov
mov
sbb
addr16
imul
inc
cmp
in
aaa
out
push
mov
arpl
scas
into
adc
inc
mov
shlb
stos
cmp
pop
gs
mov
mov
in
ss
cmc
xchg
inc
sahf
pusha
test
xlat
mov
sub
jbe
mov
cmp
mov
out
jnp
adc
insb
or
sahf
mov
insb
ljmp
push
jb
loopne
in
andl
mov
lods
hlt
add
loopne
int
xorb
push
repz
movb
data16
fcoms
dec
pop
sbbl
mov
lock
es
shlb
xchg
loope
fwait
xchg
sub
push
sahf
sti
je
sbb
enter
push
sbbl
in
pop
cmp
jae
mov
sub
cmp
pop
es
add
daa
out
test
lods
addr16
push
jmp
pop
add
and
xlat
sbb
push
sub
mov
insl
fldt
dec
dec
mov
sbb
cli
out
imul
arpl
or
lcall
xor
scas
jno
push
cli
lea
mov
lods
ret
aam
popl
sbb
add
adcl
push
or
push
mov
mov
inc
dec
or
loop
inc
pop
inc
sub
jmp
orl
in
lods
sahf
sbb
mov
pop
and
sbb
mov
aad
iret
pusha
aad
mov
lcall
mov
xor
popf
inc
daa
fidivs
pop
cmp
cmp
cmp
or
das
cmp
mov
subb
jle
insb
cmp
inc
jle
pop
and
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
jno
and
or
wbinvd
adc
pop
ja
push
dec
dec
sbb
call
jo
lock
pusha
cmp
mov
or
jg
rcrb
dec
inc
imul
and
arpl
mov
js
inc
push
mov
sbb
int
xor
mov
mov
loope
push
fwait
mov
xor
dec
addr16
mov
xchg
sub
and
dec
fnstsw
shrb
dec
pop
add
nop
int
push
mov
sub
or
stos
xchg
icebp
mov
fisttps
inc
adc
imul
rcl
jo
jo
fldt
jae
ljmp
outsl
inc
js
and
xlat
in
mov
add
dec
jg
rclb
movl
int3
cmovp
sbb
sub
cmp
iret
mov
loope
scas
dec
hlt
pusha
push
dec
inc
dec
or
add
out
roll
andl
or
sub
lea
scas
in
adc
fidivrl
cmc
cltd
or
ja
pop
xchg
jge
mov
xor
push
mov
sub
andb
orb
mov
sbb
test
js
add
sub
int
mov
mov
add
lahf
add
cmc
cltd
xor
cmc
push
jle
bound
push
jo,pn
adc
insl
js
mov
movsb
stc
jae
imul
inc
mov
inc
pushf
sahf
sub
cwtl
inc
sbbl
pushl
ja
sub
data16
push
nop
adc
scas
je
sub
mov
mov
xor
iret
enter
push
jp
insl
adc
stc
pop
dec
sbb
in
mov
cmp
mov
or
and
push
add
arpl
es
sub
push
and
xchg
scas
inc
in
jo
rol
iret
std
jb
mov
lcall
push
and
mov
mov
jecxz
inc
push
sub
icebp
lods
xlat
repz
fiaddl
xchg
xchg
cmp
lock
push
insl
push
mov
dec
push
setge
and
sub
bound
mov
xor
fwait
xlat
lcall
data16
push
fdiv
mov
leave
lock
je
dec
and
and
ljmp
arpl
ret
shrl
sbb
mov
sub
daa
in
xor
fsubrl
inc
sbb
jbe
sub
or
out
scas
insl
bound
aam
ja
or
mov
jnp
fdivrs
xor
adc
data16
mov
outsb
fstps
in
mov
sbb
jns
leave
repz
pop
icebp
cmp
or
inc
jle
inc
cltd
inc
movl
lahf
sbb
xchg
jb
ret
add
in
rcr
pop
pusha
dec
and
mov
xor
jnp
inc
mov
shlb
mov
mov
scas
loopne
inc
movsb
mov
push
int3
cmp
jecxz
adc
les
mov
aad
mov
mov
jno
mov
xchg
test
pop
aaa
mov
arpl
push
jmp
lret
cmp
fcmovne
cli
jns
push
int3
or
daa
mov
lds
mov
mov
mov
int
repnz
pushl
mov
pop
lcall
and
jl
popa
cmp
push
fdivs
ljmp
sub
xchg
imul
dec
imul
add
mov
es
cwtl
push
dec
mov
gs
xchg
cmp
sbb
dec
cmp
inc
mov
outsl
inc
dec
mov
and
jae
icebp
jecxz
aas
xchg
adc
ret
mulb
aaa
jecxz
fucomi
insl
in
ret
ret
mov
xchg
test
mov
lds
xchg
iret
push
add
stos
rcrl
push
outsl
outsl
sub
leave
stos
test
cmp
out
add
push
es
jns
lcall
push
mov
cmp
xlat
out
mov
inc
mov
cmpsl
int3
movsl
out
int3
sbb
sub
out
pusha
jbe
int
sti
push
jae
push
push
fisubrl
dec
fwait
mov
inc
out
pop
mov
ret
and
gs
popf
xlat
lret
jo
sbb
xchg
xor
adc
fwait
adc
out
and
add
fs
das
imulb
fildll
aas
rcrl
cmp
fists
xor
cwtl
or
or
and
insb
mov
mov
push
fsubrl
divb
out
out
mov
lds
movsl
outsb
test
mov
pop
subb
je
mov
push
in
inc
xchg
test
inc
in
jecxz
iret
push
movsb
pusha
aad
lds
push
lods
pop
sahf
xchg
push
sub
pushf
iret
lcall
or
push
push
cmp
cmp
sbbl
or
mov
mov
js
pop
shl
xor
scas
out
adc
fidivl
dec
sub
imul
rcll
add
add
inc
popa
icebp
ljmp
cmp
inc
mov
lcall
mov
jl
mov
pushf
outsl
out
mov
pusha
mov
xchg
lahf
mov
cltd
mov
jbe
jl
test
bnd
mov
mov
fdivl
lcall
sub
es
push
scas
push
inc
fwait
jge
ljmp
and
push
cmp
popl
mov
loope
mov
sbb
push
outsb
sti
js
cmpsb
fdivp
inc
pop
rcrl
dec
leave
pop
jl
pop
sti
adc
aaa
dec
sub
add
inc
xor
negb
pop
dec
xor
sti
les
inc
or
fiaddl
bound
cmp
dec
aad
adc
cli
add
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
repz
mov
invd
add
pmaddwd
sbb
mov
mov
mov
jecxz
xchg
jl
dec
into
dec
paddq
inc
mov
lods
notb
test
aad
push
xor
loope
cli
lods
adc
xchg
jne
js
lcall
adc
push
in
or
int3
jne
imull
ja
fwait
out
jmp
inc
mov
or
repnz
mov
or
sub
call
mov
lods
push
push
int3
imul
jae
sub
inc
in
mov
clc
je
scas
lods
pop
fsubrp
sub
jmp
pop
xchg
in
addr16
jl
aas
sbb
mov
sbb
or
jbe
jmp
lcall
mov
jle
xor
mov
cmp
mov
sub
div
cmp
mov
ss
stc
jg
pop
jne
push
jo
xchg
loope
out
jnp
pop
pushf
enter
hlt
jmp
add
icebp
imul
and
lock
push
cltd
ret
sar
inc
fs
push
push
incb
nop
shll
mov
push
subl
xor
in
cmp
and
pop
popf
mov
and
fdivr
movsl
jp
inc
xchg
dec
add
aas
out
loope
push
scas
xchg
inc
loope
test
jb
dec
jb
xchg
das
loope
subl
or
pop
cmp
ret
pop
xchg
or
sub
in
into
hlt
push
sbb
gs
dec
in
cs
sub
dec
aaa
jo
mov
cltd
mov
xchg
imul
push
lods
lcall
shlb
je
std
leave
das
dec
and
and
int
sti
add
sub
dec
call
pop
jl
pushf
outsl
ss
xor
pop
or
hlt
inc
sub
fisttps
pop
push
shl
pusha
or
sbb
mov
repnz
movsb
jmp
sahf
dec
cmp
or
xchg
rorb
inc
lcall
movl
sbb
mov
cmp
mov
push
fisttps
xchg
pop
cld
scas
adc
lock
cmp
add
ret
insb
ljmp
mov
lahf
ret
call
dec
inc
fbstp
nop
clc
pop
rcl
pop
and
inc
pop
ret
jmp
fcoml
dec
add
push
test
push
or
and
in
insl
cmp
scas
xor
sahf
push
test
jle
dec
iret
dec
jle
or
pop
mov
dec
lods
inc
xchg
push
sub
nop
rclb
mov
dec
in
pop
adc
xor
fstps
imulb
sbb
pop
push
dec
sbb
pop
add
cmp
addl
scas
sar
int3
leave
pop
sar
ret
into
sbb
repnz
mov
cld
lock
jne
mov
sbb
cmp
dec
loop
leave
xchg
inc
lock
pop
or
movsl
aam
fisubrl
scas
les
adc
pushf
ljmp
imul
jae
mov
das
add
jl
mov
popa
out
mov
ja
pop
or
flds
sub
adc
mov
push
test
mov
mov
lds
adc
add
dec
outsl
out
das
orb
lds
mov
sub
add
cs
jne
or
xchg
pop
cmpsb
fisubs
or
insb
mov
inc
movsb
xchg
push
mov
mov
inc
xchg
outsl
and
fsubs
adc
and
xlat
mov
push
dec
stc
int3
push
stos
int3
jb
fstps
mov
inc
jns
pop
int
fs
xchg
int
insb
jne
inc
sti
imul
adc
addr16
fwait
cmp
daa
xor
or
push
jns
movsl
jmp
ficoml
cmp
and
clc
fmull
lods
je
std
pop
mov
sarb
adc
dec
inc
mov
dec
mov
inc
sti
and
push
cltd
inc
mov
fiaddl
test
and
mov
lret
mov
out
arpl
pop
mov
mov
mov
jmp
push
adc
test
repnz
mov
cmpsl
aas
xor
cli
adc
xbegin
clc
lret
and
fidivl
pop
xchg
inc
mov
rcrl
jne
jmp
loop
jno
filds
mov
test
enter
mov
in
ret
test
lahf
pop
xor
es
mov
into
aad
dec
pop
mov
fsubr
xchg
outsl
mov
add
or
cmp
in
jle
add
add
mov
ret
pusha
lahf
and
std
pop
pusha
test
inc
inc
mov
out
and
sbb
push
hlt
jbe
adc
cmp
mov
insb
out
in
imul
mov
jmp
cld
lahf
jp
or
sbb
out
xchg
fisttpl
mov
mov
cmp
jbe
std
cltd
and
adc
int
push
je
fbstp
scas
loop
or
bound
jl
xor
imul
popf
pop
add
out
movsl
mov
mov
push
adc
and
fisubrs
into
sti
data16
sbb
mov
movsb
dec
sbb
popf
mov
fs
mov
repz
add
xor
add
push
mov
inc
add
pop
xor
push
les
mov
mov
adc
test
mov
sub
and
adc
inc
mov
out
bound
in
xor
pop
sub
dec
mov
add
pusha
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
cmpsb
mov
popa
xchg
dec
pusha
pop
lahf
inc
iret
and
cmpsb
lock
mov
cmp
mov
out
popf
idivb
lds
dec
in
stos
jo
dec
aas
jecxz
push
in
mov
sbb
or
in
xor
mov
fstps
and
lock
rorb
push
sub
test
sbb
pop
fwait
gs
pop
xchg
iret
push
xchg
add
mov
xor
shlb
idivl
mov
cltd
push
out
je
imulb
pop
cli
jg
lret
shll
xchg
imul
insb
push
ud0
ret
aaa
push
out
scas
add
shlb
push
jmp
out
outsb
or
ljmp
sbb
mov
in
add
rorl
xor
ljmp
test
ja
cmp
dec
cmpsl
inc
xchg
mov
je
daa
pop
out
mov
xor
ss
mov
jnp
dec
lret
js
arpl
add
dec
push
xor
xor
inc
inc
repz
arpl
or
ljmp
fisubl
or
fnsetpm(287
mov
adc
into
add
xor
xorl
enter
dec
dec
dec
jo
lcall
mov
push
push
cld
push
out
hlt
jmp
push
xchg
xchg
loop
cmpsl
xor
insb
into
mov
cwtl
mov
and
jne
xor
dec
rdpmc
lcall
adc
add
dec
das
or
sti
popf
jns
sub
in
insl
test
out
inc
cmpsb
fdivrs
push
mov
and
test
inc
inc
lods
cld
stos
push
call
pop
mulb
or
addl
lret
fdiv
fdivl
js
mov
lret
fsubr
push
lods
xor
stos
add
xor
repnz
cmpsl
das
les
popf
add
lods
xor
stos
out
test
inc
call
jb
inc
xchg
mov
mov
jmp
dec
and
nop
call
push
jnp
sarb
xor
jle
xor
mov
xchg
rcll
aam
xchg
adc
ret
and
stc
sub
mov
lret
loope
sub
inc
cli
lds
inc
or
adc
xchg
cs
mov
add
mov
subb
mov
stos
out
les
jle
pop
dec
lcall
mov
push
scas
mov
subl
adc
jno
insl
mov
lock
sub
sbb
or
push
shlb
lds
stos
mov
cmp
ja
push
push
cmp
lahf
cli
adc
cld
ljmp
clc
adc
data16
mov
clc
cmp
ret
push
mov
pop
sub
enter
cwtl
xchg
popa
mov
xorl
jecxz
int3
dec
and
popf
pop
push
cmpsl
roll
std
dec
mov
mov
test
daa
pop
add
sub
into
and
ret
cli
fnsave
pop
add
test
frstor
je
add
inc
xlat
inc
xchg
in
int3
pop
inc
aad
in
addr16
mov
xor
out
add
inc
gs
ss
add
mov
sub
fnstsw
pop
jl
mov
jle
cs
ja
mov
jle
or
pop
ficoml
mov
xchg
icebp
int
adc
call
hlt
or
gs
clc
xchg
mov
mov
outsb
jns
nop
adc
ficompl
ds
cli
repnz
mul
clc
adc
add
je
fidivrl
sub
enter
jb
mov
pusha
out
cmp
push
xchg
test
int3
xor
inc
je
inc
jne
orb
cmp
add
out
mov
in
dec
aas
in
aam
push
mov
inc
shll
subb
lret
xlat
loope
clc
xor
sbb
fidivrs
shlb
int
jg
cmpb
mov
mov
outsl
ret
sub
sub
out
add
clts
mov
daa
in
add
ds
inc
ja
ret
mov
push
lock
lret
mov
mov
cmp
stos
aam
andb
mov
or
loope
int3
adc
cmpsb
xchg
in
push
sbb
cmp
adc
mov
sbb
dec
jg
andl
mov
loopne
popa
aad
inc
aam
mov
mov
xlat
pop
in
adc
aas
aad
push
fmuls
dec
jl
cmpsl
mov
push
jno
jb
push
cmpsb
cmp
in
push
push
lcall
pusha
aas
and
jns
cmp
data16
es
sbb
lds
add
cmp
push
and
dec
aam
cmp
stos
incb
sbb
adc
cwtl
sub
aam
mulb
push
xchg
mov
pop
in
adc
mov
leave
sbb
xchg
gs
mov
out
dec
negl
dec
clc
cmp
sti
rclb
js
push
xchg
lret
and
or
ss
xchg
xchg
jno
mov
int
push
dec
sub
stc
hlt
cld
enter
mov
sub
and
lret
jae
mov
cmp
xchg
cld
lds
imul
mov
push
mov
ffree
add
loop
loope
adc
or
sti
clc
pop
add
sbb
inc
sub
jnp
inc
lea
and
add
dec
push
jb
addb
sahf
scas
mov
les
xchg
mov
mov
jae
xor
xchg
xchg
push
pop
pop
sbb
add
decb
sub
cmp
lock
jg
fcmovb
mov
cltd
mov
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
mov
test
cmovp
popa
test
insl
notl
mov
sbb
sub
xlat
inc
aas
inc
mov
lret
mov
adc
bound
leave
lahf
push
arpl
std
or
mov
lcall
lock
das
ja
fimuls
inc
or
testb
sbb
inc
pushf
lret
push
fistpl
xchg
sub
add
ret
mov
mov
or
ss
cmp
int3
enter
fisubl
cld
rolb
jns
push
iret
xor
xor
xchg
mov
fadds
outsl
pop
scas
jge
add
fistpll
sbb
add
in
movsb
lcall
mov
inc
outsl
ret
jl
and
inc
lods
inc
aad
pop
lods
inc
cmp
movsb
stos
incb
pop
movsl
pop
add
cmc
sub
das
fs
test
push
cli
add
mov
iret
xchg
sti
es
sub
add
and
test
inc
or
loope
rorl
and
das
icebp
sbb
add
pop
aam
scas
pushf
stc
daa
hlt
xor
out
and
push
in
fxch
jecxz
imul
and
pop
rclb
popf
sbb
mov
int3
and
and
jle
mov
pop
lret
xchg
es
lret
jae
sub
stos
cmp
or
leave
mov
add
cltd
inc
xchg
mov
jbe
mov
ja
es
inc
cmpsb
or
add
cmc
pop
leave
shlb
lcall
add
movsl
adc
ja
ljmp
mov
call
adc
pop
add
in
push
mov
sbb
mov
pop
test
sbb
xchg
mov
subb
fucom
add
loop
aam
roll
sub
mov
int
xchg
in
sarb
iret
xor
int3
test
dec
imul
and
or
and
jbe
in
mov
sbb
andb
jg
test
mov
add
mov
jp
mov
pushf
in
mov
cwtl
dec
xlat
bound
jae
adcb
loopne
sbb
sahf
insl
cmp
aam
ret
frstor
push
dec
inc
lcallw
rolb
jae
xor
movsb
cmp
scas
pop
shll
or
dec
frstor
popw
ret
pop
mov
or
dec
shrb
roll
xor
int3
xor
dec
popf
lret
sub
jmp
lcall
add
arpl
and
inc
mov
test
leave
movsl
lret
and
fdivs
out
mov
mov
xchg
std
mov
pop
in
add
int3
jl
mov
sub
jle
cmp
movsb
pop
pop
xor
stos
pop
mov
xchg
les
pop
fidivrs
fwait
jb
dec
daa
add
aad
test
mov
mov
cmpsb
ds
xor
pop
test
xchg
xchg
addr16
add
push
sbb
fadd
ret
mov
push
ljmp
add
or
adc
or
jae
mov
cmpsb
dec
call
xor
lods
mov
inc
jnp
cmova
daa
jb
or
cmp
icebp
jmp
pop
les
cmp
int
xchg
js
adc
pop
mov
and
mov
bound
xor
pop
jo
lahf
hlt
jb
or
xorb
sahf
push
mov
fcoml
jbe
js
adc
cmc
jl
or
cmc
loope
mov
push
mov
xchg
mov
scas
adc
push
jno
xchg
jb
popa
mov
ljmp
es
sub
push
ljmp
xorl
pop
cmc
push
jno
adc
fwait
push
pop
push
sbb
cmp
inc
xor
cmp
mov
rcr
jo
inc
loope
insl
add
adc
cs
lcall
push
dec
or
mov
mov
mov
out
ret
pop
sub
in
arpl
sub
push
jp
fmull
aam
shl
aad
out
hlt
andb
lret
repz
cli
fnstcw
fwait
lret
dec
dec
push
push
enter
xchg
movsb
iret
jnp
inc
fdivl
lds
add
in
in
mov
sub
shlb
or
loop
bound
push
add
xchg
cltd
pop
rorl
xor
sub
pop
ljmp
test
jb
loop
cmp
div
movsb
ds
aaa
sub
stos
jge
inc
jae
popa
xor
pop
jbe
and
inc
rol
add
cld
xlat
out
rorl
imul
fdivrl
dec
inc
pop
gs
inc
test
or
fiaddl
aad
push
xor
cmp
mov
dec
pushf
mov
lds
push
ja
in
mov
jnp
js
sbbb
pop
xor
bound
jl
mov
push
inc
cmp
mov
stos
push
mov
enter
iret
scas
aaa
filds
xor
sbb
push
inc
cmpsb
mov
ljmp
sub
popa
sub
outsb
and
insl
mov
jbe
outsb
ficoml
addr16
sbb
pop
ljmp
push
xchg
mov
pop
clc
push
jae
cmp
pop
push
xchg
fstpt
stos
jg
mov
mov
out
mov
add
mov
or
or
mov
scas
or
pop
add
cwtl
xorb
in
and
pop
ret
or
and
sbb
inc
sbb
and
inc
pushf
add
push
lahf
out
jmp
int3
outsl
add
push
add
divl
inc
mov
lret
mov
pop
aas
repz
in
pop
sbb
lcall
jmp
mov
xchg
mov
cmpsb
mov
add
paddq
mov
jns
mov
aam
fstps
inc
push
sub
jno
popa
mov
xchg
shll
cld
sbb
addr16
popa
xchg
imull
xchg
xchg
les
inc
pop
mov
adc
scas
aas
xor
icebp
jnp
xorl
sbb
mov
pop
test
sarl
das
jbe
jge
push
addl
out
jno
xor
adc
pop
mov
je
cmp
scas
pusha
cli
sub
add
in
push
aam
movsl
aad
ret
mov
xchg
cli
add
and
jnp
cltd
mov
popf
adc
pop
fistps
aas
mov
mov
cltd
test
out
mov
ret
stc
mov
mov
cmpsb
mov
pusha
jbe
stc
mov
sub
hlt
es
mov
xor
mov
push
es
rcl
gs
inc
stos
mov
fisttps
mov
aam
lods
idivl
gs
repnz
sbb
push
loope
xor
test
jg
xchg
shrl
test
jo
mov
aas
loop
sti
dec
int
ret
dec
sub
decb
push
push
or
insb
bound
outsl
test
push
add
and
cmp
sub
stc
xchg
or
mov
setne
faddl
pop
lea
cs
mov
movsb
enter
test
adc
int
pop
nop
adc
inc
push
jnp
push
or
aam
orl
in
cmp
xchg
shll
cmpsl
das
dec
stos
sbb
mov
dec
jne
mov
je
fisubl
aaa
movl
push
mov
popa
xchg
icebp
or
jbe
cld
sub
test
orb
jp
loop
jne
sub
fistpl
sbb
add
outsl
lret
mov
in
pusha
xchg
mov
xor
add
iret
out
dec
stc
pop
inc
ds
xlat
sbb
aas
inc
xchg
sub
lods
cmp
call
movsb
add
mov
sbbl
bound
adc
filds
or
incl
cwtl
mov
or
sbb
rcl
fidivs
or
outsb
mov
push
pop
mov
mov
push
test
xchg
lret
testb
push
mov
sbb
ret
lret
lds
mov
or
adcl
enter
ss
rorl
shlb
jne
xor
std
sbb
movl
adc
push
scas
aad
or
movb
and
adc
rorl
mov
stc
adc
aad
aas
pop
loop
jl
sub
fadd
jne
pop
call
mov
test
jge
dec
inc
pop
cmp
mov
dec
adc
push
mov
fdivs
sub
jmp
mov
add
mov
or
cmp
mov
movsb
mov
dec
sub
push
inc
sbb
add
cmp
cs
jg
gs
add
cld
imull
movsl
mov
push
jp
xchg
mov
xor
rorb
mov
and
repnz
xor
insl
push
out
lds
mov
add
jp
push
push
mov
arpl
leave
add
loope
ss
loopne
jae
push
pop
xchg
ds
xor
inc
push
jg
out
mov
lret
mov
push
sub
and
out
out
sub
or
push
xlat
lea
in
mov
and
xchg
add
ds
fsubs
das
xor
test
xchg
in
pop
xchg
loopne
daa
push
loop
mov
into
incb
movsl
js
imul
test
cs
sub
shrl
pop
adc
les
xor
cwtl
add
imul
jge
je
xchg
push
pop
xor
mov
cmp
xchg
jne
bound
push
push
xor
push
push
std
add
ficompl
dec
cmpsb
and
push
insb
cmp
mov
scas
leave
jle
lds
cmp
push
xor
mov
mov
jle
adc
sub
mov
inc
mov
add
outsb
push
sbb
insl
xlat
jecxz
aas
cs
int3
pop
xor
enter
jnp
jmp
lret
jge
lods
xor
fiadds
fwait
adc
mov
mov
dec
adc
cmp
inc
jl
nopl
inc
adc
dec
mov
scas
outsb
adc
cltd
mov
lods
add
mov
adc
mov
sbb
dec
mov
testl
mov
add
mov
leave
jmp
lock
test
jno
movl
ret
add
push
xchg
sysret
mov
es
add
and
daa
mov
jmp
js
jge
dec
mov
test
sbb
mov
dec
mov
fildll
push
mov
lret
jnp
push
ret
scas
das
xor
sbb
or
lds
pop
inc
dec
jp
sti
sub
pop
lock
cmpsl
pop
pop
add
add
cmp
pop
xchg
arpl
cmp
leave
mov
cmpsl
mov
pop
rorl
sbb
jno
hlt
outsb
push
and
adc
fcmovnb
cmp
clc
jecxz
cs
jnp
je
repnz
lds
flds
pop
sti
jb
and
lret
mov
jo
ja
inc
add
mov
fwait
xor
test
dec
cmp
xor
push
outsl
ljmp
clc
push
sub
add
jp
push
add
int3
add
fsubs
insb
fstl
adc
das
jg
out
dec
jecxz
pop
stos
push
mov
push
sub
fmulp
sahf
cltd
mov
rorl
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
jo
pop
jo
mov
xorb
inc
jnp
pextrw
mov
fbld
pop
push
pop
outsb
mov
jbe
loope
lcall
cwtl
cmp
xchg
hlt
mov
out
or
dec
rorb
cld
push
lea
mov
xor
mov
add
mov
popf
ljmp
sbb
out
lods
mov
int
jecxz
es
inc
ljmp
clc
outsb
insl
mov
fs
leave
in
imul
inc
out
nop
ret
push
pop
add
lods
pop
sbb
daa
andb
sbb
lock
lret
lock
xchg
cltd
jno
imul
pop
mov
ret
xor
xchg
icebp
fsts
fidivrs
push
inc
es
negb
loopne
into
repnz
imul
jns
fmulp
inc
fwait
add
movsl
inc
sub
inc
test
push
loop
stc
or
sbb
pop
out
adc
cmpb
push
shll
imul
cmp
ret
mov
jg
and
shrl
scas
push
lret
inc
cld
mov
les
xchg
rcrl
fdivl
scas
cmp
sahf
mov
not
cmpl
or
pop
les
repz
sbb
inc
outsb
or
add
scas
add
dec
movsb
fsubr
in
divb
mov
lea
or
test
or
mov
jb
adc
loope
jge
insl
add
nop
insl
movsb
scas
or
roll
cwtl
xchg
icebp
incb
stc
dec
jns
mov
in
jns
push
sbb
jecxz
xor
in
xchg
gs
and
arpl
test
jg
stos
sbb
stc
ss
movsb
dec
or
inc
jmp
stos
lahf
mov
fmuls
push
xchg
cmp
xchg
cmp
mov
add
sub
pop
jns
or
sub
lds
sarl
pop
int
dec
fcmovne
hlt
push
sbb
call
sub
aas
mov
inc
out
ljmp
sbb
daa
inc
gs
jge
lock
popf
mov
out
int3
in
xor
xchg
mov
test
popf
xchg
xor
pop
testb
and
add
adc
addl
xchg
xchg
inc
adc
dec
pop
rorb
sub
push
lcall
lcall
rcrb
addl
inc
leave
aam
fs
pushf
sti
jl
jmp
js
xchg
lods
cli
and
xor
cmp
pop
stc
dec
jo
ret
cmp
cmp
rcr
push
and
sbb
js
push
cmc
in
mov
xchg
xchg
mov
xor
sub
and
mov
je
lods
jl
stc
pop
cmpsb
or
push
stos
sub
ret
test
sbb
adc
je
jle
sahf
stos
mov
pop
out
jmp
and
pop
jge
ret
fwait
test
fildl
jb
std
xchg
repz
enter
jno
mov
and
mov
sbb
sbb
mov
cltd
inc
mov
mov
icebp
jg
cli
inc
and
dec
xchg
ljmp
sub
cmp
addb
data16
jg
ljmp
sbb
outsl
dec
ss
into
cmp
nop
aam
and
nop
dec
adc
in
js
repnz
add
mov
push
mov
or
sahf
jecxz
jl
xor
push
mov
subb
fdivrl
push
ss
into
add
popa
cmp
add
lea
xlat
out
std
inc
or
xorb
out
sbb
lods
imul
sbb
int3
gs
shll
mov
mov
mov
rorb
dec
lahf
inc
add
xor
xor
addl
pop
or
mov
jns
repnz
mov
mov
mov
lea
js
sti
and
sub
mov
sahf
andb
xor
cs
jns
or
dec
imul
fwait
push
sbb
mov
insl
lret
jbe
mov
out
test
fcomp
subb
xchg
cli
jne
jns
lcall
dec
stos
push
adc
loop
or
jbe
outsb
insb
je
je
int3
xor
icebp
loop
push
cmp
jmp
ljmp
ret
popa
mov
loope
xchg
jbe
shrl
shrb
shrb
lock
outsb
out
mov
cmp
pop
pop
call
pop
pop
inc
cmp
push
push
clc
mov
jb
cmp
or
push
fdivrs
inc
rcr
out
outsl
cmpsb
mov
mov
fwait
dec
cmp
mov
jg
mov
das
jmp
repnz
adc
push
cmp
adc
sbb
lods
imulb
add
enter
xchg
iret
addr16
cmp
dec
out
lret
std
dec
repz
std
push
xchg
push
and
or
sbbb
jns
loope
xor
xlat
iret
ret
sti
add
cmpb
pop
scas
movsl
enter
jne
shrb
fucomi
out
jecxz
or
test
lods
mov
lds
outsl
pcmpgtb
lret
inc
out
pusha
and
jo
test
fdivrs
xor
loopne
out
dec
push
pop
xchg
jnp
mov
lods
movsl
shll
push
xor
sub
insb
xor
or
xor
inc
call
cld
imulb
cmp
jns
and
jo
mov
cs
imul
inc
rorb
sub
mov
and
cmpsb
and
dec
orb
fistpl
outsl
rolb
dec
pop
sbb
aad
aad
into
das
mov
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
lods
js
mov
add
psubq
insb
cwtl
xchg
fwait
xchg
add
lret
insb
ds
popl
sbb
mov
sbb
mov
mov
shr
inc
adc
and
test
call
lods
aaa
sbb
jb
jmp
hlt
xchg
xchg
pop
cmpsb
loope
pop
mov
aam
pushf
std
jle
out
xchg
int
lcall
sub
jb
jb
mov
pop
xor
aaa
loopne
loopne
jae
jnp
push
mov
ds
xor
cmp
pop
mov
dec
or
pop
push
xchg
push
les
test
pop
jmp
popa
pop
jmp
pop
inc
mov
lock
pop
xlat
pop
inc
addr16
not
outsb
and
jecxz
jmp
imul
aaa
cmp
sub
pop
mov
jmp
out
jbe
sbb
push
sahf
jo
xchg
xchg
punpcklwd
lret
mov
dec
stos
jge
lret
cmp
xchg
ret
mov
xchg
add
push
add
ffree
xlat
or
add
add
sub
add
add
adc
popa
mov
mov
dec
cmp
out
rcrb
enter
jns
or
sbb
stc
je
shll
je
or
lock
xchg
int3
je
and
es
and
je
xlat
lahf
inc
mov
mov
xor
into
out
shll
xchg
mov
xor
test
sbb
pop
xchg
push
jg
mov
mov
dec
xchg
ss
jb
scas
pop
xorb
dec
push
aad
mov
add
jo
push
adc
enter
mov
lock
add
das
ss
inc
in
push
pop
mov
xor
arpl
xchg
push
pop
adc
inc
cwtl
fcoml
inc
mov
in
sub
test
nop
fdivrp
adc
dec
cmpsb
add
pop
mov
dec
ror
pop
movsb
imul
sbbl
fidivs
jecxz
cmp
into
std
pushf
inc
adc
pop
push
nop
jns
sub
jl
hlt
or
pop
push
adc
add
jne
or
adc
pop
mov
xchg
dec
ret
xchg
mov
cmp
data16
pop
testb
mov
scas
cmp
pusha
insb
mov
pop
ror
mov
cmp
adc
adc
cmp
out
xchg
repnz
pop
push
arpl
mov
rorl
pop
mov
cmpsl
xor
int
xchg
inc
adc
loopne
aam
pop
mov
mov
jle
cmpsl
mul
pop
addr16
sub
scas
adc
xchg
int3
fcomps
fwait
rol
lret
jo
lock
fwait
popa
pop
fistpl
shlb
jecxz
outsl
cmp
scas
push
lds
imul
mov
shrl
pop
cmp
jb
loop
adc
xchg
out
pop
jg
inc
add
push
cs
les
jge
int
sbb
mov
sub
ret
int3
aas
pop
std
pop
push
icebp
fcom
inc
and
push
add
mov
fmull
loope
xor
xchg
xchg
addr16
pop
mov
inc
pop
adc
pop
xor
movsb
hlt
aad
cmp
insb
cli
cltd
enter
dec
jb
mov
lods
outsl
add
neg
jmp
testb
mov
push
push
cmp
pop
movsl
add
inc
scas
inc
lds
cmp
mov
inc
push
push
addr16
in
idivb
inc
or
mov
xchg
pop
mov
sbb
movsl
mov
ljmp
mull
adc
fstps
or
sbb
movsb
mov
push
jecxz
subl
in
insb
addl
lea
insb
sar
jbe
lcall
aaa
dec
imul
jb
out
and
addr16
nop
fs
scas
sarb
pop
adc
aam
ret
mov
push
mov
rcll
orl
mov
shlb
jecxz
jmp
movsb
mov
sbb
mov
mov
testb
push
pop
cltd
mov
jmp
clc
jbe
dec
or
jae
cmc
pop
out
pop
jb
jnp
inc
cltd
lahf
int
adc
test
addl
dec
pusha
jmp
pop
add
sbb
shll
loopne
scas
addr16
dec
mov
rcl
mov
enter
cmp
repz
lea
cmp
mov
cmp
pusha
addr16
das
fdivrl
js
icebp
imul
mov
mov
sub
aas
movsb
ja
push
jle
add
or
xor
call
cmp
mov
cs
cmp
add
aad
lret
sbb
cld
outsb
fucomi
jne
gs
jae
pop
enter
out
daa
add
outsl
in
pushf
mov
nop
into
adc
loop
and
scas
mov
sbbb
push
or
push
xchg
adc
push
mov
cmpsl
js
inc
int
jnp
repz
mov
test
pop
pop
js
iretw
std
ss
data16
adc
cltd
fistl
cmp
sbb
pop
or
adc
stos
int
pushf
jge
adc
hlt
je
pop
loopne
arpl
and
ss
push
scas
js
jne
pushf
pop
pop
movsl
xchg
addr16
sbb
fstpl
repnz
inc
testl
lret
xor
mov
or
push
sbb
push
shll
or
or
enter
mov
sarl
inc
sub
jne
cmpl
lret
sub
adc
test
addb
dec
cmp
xchg
xor
mov
sbb
lods
sbb
jge
dec
fisttpl
inc
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
jno
dec
mov
add
rorb
add
xor
jmp
std
cli
sub
jp
sub
and
clc
sub
sti
lea
adc
pop
cmpsl
push
test
sbb
outsb
or
imul
inc
popf
lods
pop
scas
push
aam
ret
mov
aaa
adc
push
push
loopne
out
jne
sub
mov
and
inc
xchg
cmpsb
adc
movsl
cwtl
or
sahf
test
add
iret
rol
nop
push
stos
movsb
cltd
in
sbb
test
lds
lret
inc
gs
cmpsb
jge
mov
stos
cmp
mov
cltd
add
add
adc
pop
jns
xchg
aaa
pop
xchg
hlt
pop
sub
pop
ljmp
pop
and
xor
lea
popf
out
out
push
call
jnp
testb
xor
data16
push
test
lea
push
pop
shl
xchg
cmc
fsts
inc
nop
cmp
in
clc
bound
test
pop
jl
repnz
aam
stos
fiaddl
jae
js
fwait
and
cld
push
xchg
arpl
pop
dec
push
jns
pop
xor
daa
fsubl
int
cwtl
pop
daa
mov
adc
adc
dec
out
xchg
push
bound
pop
mov
mov
and
and
ffree
xchg
jne
ret
stc
dec
mov
jae
aam
xchg
mov
sub
ljmp
and
cltd
pop
xor
mov
mov
jmp
and
jp
dec
jb
outsl
xor
mov
pop
icebp
mov
push
leave
dec
setg
adc
inc
cmp
jp
xchg
ficomps
sub
and
dec
gs
movntq
sbb
xlat
test
insb
lods
cwtl
inc
imul
fnstsw
inc
loopne
inc
inc
dec
inc
mul
push
push
inc
adc
cmc
cs
mov
sub
inc
mov
loope
cmc
jecxz
loopne,pn
xchg
sahf
sahf
das
lods
imul
and
lahf
pop
dec
test
movsb
cmpb
mov
mov
mov
adc
inc
movsl
aas
mov
jb
push
jmp
sub
jno
sub
int3
push
out
mov
mov
sarb
xor
pop
mov
jae
xor
sbb
in
pushf
lcall
xlat
mov
sahf
xor
xchg
mov
les
test
fstp
mov
xor
and
ds
fcompl
jl
imul
pop
pop
xor
orl
aaa
roll
xor
mov
stos
or
fidivrl
rcrl
rclb
stos
adc
shll
jg
movsl
fdivp
inc
adc
jp
adc
in
jo
pushf
sahf
lret
jmp
ret
test
jbe
push
or
add
nop
addb
mov
jmp
inc
arpl
adc
jmp
xchg
loope
fdivrl
ret
xchg
mov
fadds
inc
in
push
pop
xor
subb
aas
dec
xor
or
push
sbb
or
sub
scas
cltd
nop
std
sub
rol
xchg
iret
shll
push
in
int
push
sahf
rorl
js
cmp
mov
insl
sub
es
fisttps
jno
cli
cmp
pop
test
lcall
mov
lock
xor
das
ja
loop
clc
pop
leave
inc
insb
cld
push
pop
cmc
adc
add
gs
scas
mov
xchg
sub
mov
inc
xchg
movsb
mov
or
pop
inc
jmp
jecxz
mov
or
inc
das
sahf
dec
cmp
pusha
sbb
mov
xchg
bound
in
iret
test
sbb
mov
push
add
push
ljmp
stc
jecxz
fcoml
jbe
xchg
cmp
push
nop
inc
mov
mov
dec
pop
bound
pusha
cvtps2pd
aad
xchg
std
jmp
dec
je
aam
outsl
lock
add
mov
rorl
add
addr16
psubsw
push
add
pop
into
pusha
orb
mov
mov
dec
mov
mov
enter
int
fisttpll
or
cmp
adc
lret
jmp
stos
push
lods
push
add
shlb
mov
lcall
icebp
mov
xor
xlat
inc
pop
sbb
push
pop
jo
jl
gs
jl
or
lods
lea
add
mov
mov
push
mov
ja
jns
es
lods
iret
push
sti
mov
xchg
inc
sbb
and
aad
cmpsl
daa
shll
lret
dec
std
std
and
insl
mov
and
mov
inc
dec
and
or
lret
bswap
or
mov
je
adc
jno
cld
pop
pop
sub
bound
jns
dec
repnz
xchg
sbb
stc
ret
out
jl
xchg
jmp
ljmp
loop
arpl
orb
pop
fiaddl
lahf
fs
sub
test
dec
mov
mov
cmp
sbb
mov
dec
cs
in
cld
andb
xlat
adc
pop
fdivrl
pop
mov
inc
xor
push
lods
pop
std
mov
ret
inc
sub
jecxz
pmaxsw
sub
sub
push
adc
pop
push
lods
cmp
mov
sbb
adc
inc
add
add
xchg
or
lds
ficomps
mov
xchg
push
dec
cld
pop
clc
xchg
push
mov
pop
loopne
lock
jge
mov
push
movsb
xor
cwtl
adc
sub
fwait
xchg
push
pop
push
or
jle
loope
jl
cld
push
pop
scas
iret
lahf
mov
fdivrs
mov
jnp
push
mov
mov
aas
js
test
mov
sub
adcb
jp
push
pop
mov
out
daa
les
cmc
fnstsw
insb
cltd
add
inc
lods
stos
pop
pop
xor
mov
and
outsl
xchg
xchg
xor
add
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
maxps
sub
lods
fwait
dec
mov
lea
add
push
xor
mov
stos
push
jl
jle
lahf
add
sbb
xor
lock
xchg
dec
fsubrs
mov
or
cmpsb
movsl
les
jecxz
je
loope
or
add
add
movl
xor
mov
adc
movb
xchg
push
mov
mov
repz
xchg
adc
lcall
and
jg
inc
fnsave
mov
push
inc
aaa
dec
imul
push
pop
sub
push
adc
sub
stos
fistl
sbb
inc
sub
out
mov
mov
pop
in
popa
mov
enter
inc
loopne
rcr
xchg
jmp
pop
xchg
mov
push
faddp
addr16
sub
ss
aad
cmp
mov
pop
ret
subb
and
fs
dec
cld
jbe
lock
rorl
mov
call
xor
in
xchg
loope
cld
and
addb
push
notl
sub
lock
add
mov
icebp
cwtl
lcall
arpl
jp
iret
ljmp
pop
push
call
popf
cwtl
in
iret
repz
push
roll
test
nop
mov
sbb
cmp
cmp
ror
xchg
xchg
sub
aam
and
in
arpl
lcall
sbb
pop
negb
lea
scas
mov
push
jns
cmp
inc
mov
cmpsl
cmp
xchg
pop
cmpl
push
stc
jo
push
add
rcrl
shr
sbb
sub
or
lea
jg
dec
xchg
test
cmpl
xchg
xchg
xchg
fdivr
ja
test
push
mov
stos
ds
stos
mov
subb
and
sahf
xchg
mov
test
pop
adc
push
sub
loop
jmp
and
sub
in
mov
int
and
imul
jne
cld
and
movsl
shlb
dec
and
shll
mov
jnp
repnz
lret
pop
dec
add
cwtl
mov
loope
push
aam
pop
rcll
inc
incl
push
xchg
cmp
and
push
repz
push
inc
cltd
dec
dec
rolb
outsb
addl
divb
aaa
adc
in
or
clc
gs
mov
jbe
sub
nop
sub
inc
shlb
add
arpl
xlat
pop
and
jl
ja
mov
lock
push
into
jbe
out
jne
sub
jl
enter
xor
xchg
xchg
add
cli
repz
xchg
lret
mov
adc
pop
shlb
sub
mov
divl
test
movsl
cmp
test
push
lods
lods
ffreep
pushf
mov
in
push
movsl
dec
lods
pop
and
pushf
jno
mov
xchg
lret
hlt
ss
dec
scas
cltd
lret
jne
add
inc
clc
lahf
mov
jns
add
sbbb
out
jnp
add
push
pop
jecxz
push
gs
add
push
mov
push
adc
mov
xchg
inc
inc
mov
jae
xlat
or
imul
int
ja
jge
mov
mov
push
xchg
mov
xor
xlat
adc
dec
rolb
iret
std
xor
lret
call
and
jmp
push
xchg
xor
dec
add
or
inc
and
vrcpss
sarl
mov
mov
pop
jns
rcl
cmp
shlb
add
pop
jae
loopne
rcll
mov
mov
lret
push
fsubr
popa
add
lcall
or
dec
popa
loope
mov
mov
fwait
jo
xor
jge
cli
or
je
test
adc
push
test
jl
fs
stc
in
mov
push
movsl
xorl
lods
lods
cmp
nop
cmp
sub
adc
adcb
xchg
add
addb
xor
lcall
sub
rol
test
dec
sarl
inc
xchg
sub
popa
lods
lods
lds
repz
xor
sahf
outsl
lret
out
faddl
mov
ljmp
aam
mov
rcll
add
and
ds
outsl
jno
mov
scas
adcb
loope
stc
dec
jmp
out
mov
mov
adcb
mov
int
in
cmp
das
fcoml
and
sbb
push
push
sbb
xchg
rcrb
fdivrl
xlat
scas
dec
jo
or
fnstenv
dec
mov
inc
sub
sarl
mov
fcmovnbe
add
shrl
cli
les
push
lods
or
das
ret
mov
mov
mov
adcb
or
add
cwtl
mov
adcl
lret
pop
imul
outsl
fsubl
lahf
fmull
test
fidivrs
push
lock
lds
les
cmp
mov
int3
sbb
inc
js
or
or
pushf
xor
mov
or
sub
pop
into
xchg
push
pop
adc
pushf
addps
das
call
fs
jbe
fidivrs
dec
fs
add
adc
mov
int
xchg
rolb
xor
mov
xchg
icebp
lcall
adc
xchg
rcrl
ret
std
lods
push
imul
cld
add
cmc
or
dec
int3
or
enter
xchg
sahf
in
xor
mov
pop
idivb
dec
sub
fsubs
pop
mov
notl
stos
sbb
mov
mov
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
or
mov
push
invd
add
mov
pop
push
push
push
dec
mov
cli
cmp
loop
les
mov
or
arpl
sbb
cmpsb
loopne
enter
test
push
mov
adc
popl
jg
and
jle
movsb
mov
int
ljmp
push
sti
roll
adc
mov
cmp
push
sub
cwtl
sbb
inc
int3
and
in
sub
cmp
xchg
push
sbb
insb
xchg
or
sub
jle
stos
mov
inc
pop
jns
ret
or
pop
cmc
ss
lods
xchg
mov
mov
mov
out
es
fsubl
in
mov
loope
adc
in
sbb
mov
or
mov
inc
cwtl
sbb
clc
fcompl
pop
out
iret
loop
int3
iret
pop
ja
lret
add
sub
add
mov
push
jns
outsl
repnz
add
dec
push
rcll
add
sbb
test
lods
mov
shll
sub
push
loopne
add
sbb
xchg
xchg
inc
lods
ret
inc
jno
xor
ljmp
aam
pop
pop
xor
add
mov
cmpsl
mov
pop
mov
into
add
imul
jne
sub
popa
jno
sbb
idivb
jne
mov
lock
addr16
lea
call
mov
fldl
mov
xchg
loop
sbb
outsb
lret
mov
jge
out
data16
mov
jne
fcomp
je
dec
or
imul
adc
cmp
insb
movsl
jns
rcll
sub
inc
sbb
jmp
mov
jg
push
mov
scas
popa
mov
pop
shr
fildl
clc
int
sbb
dec
es
pop
outsl
jecxz
mov
mov
sbb
inc
shl
movb
lock
fldt
inc
jge
adcb
sbb
xchg
lahf
xchg
sbb
aad
mov
test
push
xor
xchg
and
sbb
cltd
xor
fldt
adc
sbb
test
lahf
test
sbb
push
imul
push
lods
int
jno
sbb
inc
mov
mov
stos
stos
inc
xchg
push
mov
int
dec
jmp
ss
fdivs
mov
shll
ficoms
mov
sub
mov
addb
gs
pop
cmp
xorb
push
mov
ja
mov
jmp
xchg
sbb
roll
ja
or
and
dec
xor
xor
int
pop
aam
sub
xorb
cld
in
pop
mov
fidivrs
outsl
outsl
insl
and
gs
lods
fcmovne
lahf
jp
push
inc
sbb
stos
fcmovbe
sbb
mov
jg
inc
dec
lahf
lods
jg
fiadds
daa
add
repz
sub
fstps
loop
push
out
push
jmp
and
imul
ret
clc
in
mov
iret
leave
push
lock
shr
jp
cwtl
enter
mov
push
mov
jl
xlat
insl
adc
jle
push
rol
pop
push
outsb
test
adc
mov
aam
add
imul
aam
pop
out
jns
jno
es
mov
pop
ret
xchg
jne
pushf
pop
fwait
lcall
dec
jo
loope
cmp
push
pop
test
and
sbb
mov
jae
push
enter
jns
adc
ret
in
mov
std
je
fistpl
pop
test
jecxz
iret
and
mov
ret
dec
add
shrb
repz
std
mov
lret
inc
pop
insb
fwait
sbb
cmp
sbb
inc
and
add
lock
lods
pop
push
push
sub
sub
cmc
lods
push
insl
pop
mov
mov
ficompl
int
or
fs
shlb
sbb
les
test
inc
push
sub
push
test
lods
in
jp
outsb
mov
pop
gs
loope
mov
xor
adc
jno
cs
and
mov
aam
sub
mov
pop
inc
and
fstl
loop
ds
cmc
cmp
push
adc
stos
push
or
push
cli
xchg
pop
sahf
lret
mov
inc
xlat
cmp
call
outsb
xchg
mov
mov
or
jge
lods
cmpsl
rcrb
lcall
and
mov
adc
jp
movl
adc
jecxz
loopne
stos
push
add
inc
push
mov
pop
push
lock
ret
gs
jo
sbb
stos
inc
push
dec
sub
ret
and
mov
push
aas
std
sbb
push
outsl
dec
add
xchg
cmc
cmpl
cltd
rcl
adc
ljmp
push
popa
mov
test
ss
xchg
loopne
xor
dec
test
stc
pop
inc
mov
hlt
mov
pop
aaa
mov
lods
inc
dec
mov
mov
mov
cmp
std
inc
mov
jp
scas
cmp
fdivs
push
es
push
mov
jb
pop
pop
mov
les
std
mov
sbb
inc
shl
inc
or
hlt
nop
popf
push
and
add
rolb
mov
and
stos
inc
pushf
cs
pop
push
cmpsl
xchg
dec
dec
test
or
push
mov
in
or
rolb
jbe
mov
adc
out
mov
mov
and
adc
clc
lret
xchg
cmp
dec
jno
out
xor
lcall
fldenv
mov
adc
fsubp
xchg
iret
mov
inc
jge
and
inc
jo
mov
mov
pop
cli
xchg
data16
lods
cmp
mov
insl
ret
inc
sub
iret
mov
and
das
shrb
mov
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
repz
push
mov
or
pxor
jle
or
loope
test
jge
subl
sub
ss
cmp
test
pop
bound
subl
enter
fdivl
jnp
pop
pop
cmp
jo
sub
orl
adc
and
sbb
in
lods
pop
jp
cmp
or
cmpsb
sbb
jle
xor
fstl
lds
sub
stc
mov
add
mov
out
dec
cwtl
dec
sahf
mov
jno
adc
lods
mov
fiadds
arpl
es
out
cmp
inc
push
fldl
xchg
add
pop
inc
andb
jge
movsb
push
je
orb
aas
and
push
xchg
dec
jg
sbb
out
out
or
add
dec
xchg
jno
dec
movsb
jbe
jle
ret
icebp
les
call
les
hlt
lods
aaa
cmpl
jne
and
cmp
and
jae
cmp
ljmp
lahf
in
stos
fldt
cmp
mov
mov
frstpm(287
sbb
cmpsl
dec
iret
fildl
pop
jmp
mov
inc
or
mov
in
xor
mov
scas
jo
notl
ss
ljmp
xor
js
sbb
iret
aas
std
loop
loope
xchg
mov
stos
push
push
mov
push
pop
mov
or
rorb
fs
xor
adc
add
cwtl
xchg
lds
nop
jns
pop
and
mov
jl
push
or
call
mov
hlt
mov
sub
dec
jg
pushl
test
mov
jmp
mov
lcall
stos
imul
aaa
lods
mov
adc
cmp
jmp
cmp
mov
pop
test
sub
push
popa
movsl
mov
mov
popa
movsb
mov
xorl
into
jp
fs
bound
sbb
stc
dec
mov
popa
jns
dec
outsb
or
xchg
fwait
subl
xor
mov
sahf
iret
dec
inc
out
ficomps
add
jmp
jl
push
mov
and
fwait
test
daa
jecxz
sub
scas
jp
rcl
push
pushf
and
sub
test
fidivrl
cmp
jecxz
test
fcomps
mov
outsl
cmpsl
repz
or
add
aaa
dec
stos
xor
add
pop
push
aad
inc
pop
adc
js
call
mov
cmpsb
cld
je
add
push
cmp
movsl
arpl
jle
cmp
cmp
rcrl
arpl
daa
sti
sahf
xor
stos
mov
push
repnz
dec
lods
ficoms
sbb
jl
mov
jmp
fisubs
pop
mov
rol
out
int
add
cmp
and
xchg
cmp
cmp
call
pusha
aaa
xchg
pop
inc
cmp
xchg
cli
jae
and
or
push
jg
imul
das
ljmp
jge
cltd
lahf
gs
bswap
pop
push
cli
aam
cmp
lea
xchg
and
jge
adc
sbb
aaa
or
mov
shlb
push
out
fs
mov
dec
loope
rolb
sarl
iret
jg
add
inc
xchg
cmpsb
stc
leave
push
or
mov
movsb
mov
stos
sbb
mov
jle
mov
loopne
dec
push
jg
mov
stos
add
mov
fiaddl
sub
out
jmp
mov
xlat
pop
inc
jmp
mov
xchg
roll
or
dec
xor
mov
clc
add
xchg
int3
xchg
push
push
jno
xchg
test
outsl
push
push
pop
mov
jne
rcrb
push
icebp
je
dec
xor
call
iret
sub
jo
into
inc
mov
and
cmpl
jae
andl
mov
outsl
or
shl
add
dec
clc
daa
mov
mov
ss
pushf
cmp
xor
ret
stos
and
jbe
test
mov
out
mov
mov
cmpsl
inc
mov
pop
aaa
into
or
fadds
jb
int3
jbe
nop
sti
inc
xor
int
lea
ljmp
xor
ds
cmp
imul
mov
xor
xchg
subl
jmp
pop
adc
pop
push
clc
jl
push
or
lcall
dec
jnp
stos
inc
sbb
push
xlat
outsl
sbb
sub
les
xor
add
hlt
js
add
inc
pusha
clc
xchg
lret
mulb
outsl
or
jg
mov
push
add
pushf
pop
shl
sbbl
faddp
mov
inc
or
lahf
mov
loopne
jae
sbb
cld
lock
leave
sti
sarb
inc
addr16
mov
and
adc
data16
push
jae
ds
faddl
sub
fsubrl
popa
jb
push
jbe
popa
add
jmp
cmp
pusha
push
jb
nop
and
mov
icebp
sarb
push
arpl
push
mov
mov
or
orl
pop
and
aad
aas
incl
test
sar
mov
jle
std
rcrb
inc
fldl
lret
sub
outsl
adc
lahf
mov
push
jns
outsb
ret
adc
fdivs
cmp
xor
out
xchg
lods
daa
xor
xor
jge
addr16
lds
rcrl
mov
cmp
cmp
fs
add
pop
jns
or
pop
mov
push
jp
cmp
mov
mov
lods
cmp
pop
in
scas
xchg
out
aas
aaa
aad
cmc
shl
lcall
xchg
mov
push
pop
cmp
data16
es
mov
push
inc
adc
mov
je
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
jns
andb
sub
xchg
mov
mov
push
xchg
cs
stos
jecxz
idivb
ss
cmovne
ja
pop
sbb
roll
sahf
repnz
addr16
aaa
movsl
out
stc
lods
ljmp
push
dec
aam
lods
int
jns
or
adc
pop
stos
sahf
scas
outsb
mov
fdivs
fidivl
jmp
imul
cli
stc
mov
popa
push
jae
adc
add
inc
mov
or
rorb
cli
cmp
dec
ret
push
addl
cmp
mov
call
bt
sbb
mov
cltd
inc
or
mov
pop
sbb
outsl
push
andb
cmp
add
adc
pop
and
xor
enter
cld
aas
sub
nop
lds
xlat
in
push
popf
xor
sub
outsb
icebp
push
inc
dec
out
adc
ret
jle
das
pop
xchg
and
cmc
out
mov
cmpsb
dec
leave
cmp
popa
push
push
stc
int3
mov
push
insl
out
test
push
xchg
push
mov
call
fucomi
stos
clc
aam
jle
xor
stos
test
shll
sub
xlat
xchg
jnp
out
icebp
sub
lods
movsl
or
jle
cmpsb
push
push
ficoml
scas
mov
jnp
out
sbb
jmp
sbb
mov
insl
cmpsl
fnstsw
loopne
push
pop
lods
mov
adc
push
adc
inc
push
mov
push
cmpb
sarl
and
scas
addr16
dec
inc
jle
mulb
sarb
dec
outsl
and
mov
out
pop
into
or
mov
sub
xchg
filds
mov
rcrl
lods
fucomp
test
adc
jge
aad
push
push
sbb
sbb
ja
cmp
fists
xor
icebp
imul
push
mov
add
mov
sub
jle
insb
rcrl
subb
scas
cs
popa
inc
fldcw
ficomps
repz
mov
cld
xor
push
lds
aaa
cmp
push
test
push
stc
mov
inc
mov
lds
mov
xor
je
lds
std
cs
sub
mov
aas
dec
cltd
xlat
adc
popa
lea
pop
mov
jno
ret
ja
mov
stos
iret
push
pushf
jno
mov
mov
enter
lret
xchg
inc
bnd
pushf
arpl
bound
aaa
cltd
mov
test
mov
add
push
das
sub
add
rolb
mov
adc
or
jns
test
xorl
in
fs
cld
shll
adc
clc
or
sbb
sub
cmp
lods
sbb
adc
add
and
or
add
jno
adc
insb
aad
lods
sbb
xor
popa
mov
arpl
loop
or
lea
lret
dec
aas
pop
in
add
inc
divl
lock
jp
incb
outsb
mov
std
imul
fs
ret
jno
jecxz
mov
adcb
pop
push
fucomp
in
xor
ss
pop
enter
xor
cmp
ret
pop
push
xor
sbb
or
inc
orb
ljmp
mov
dec
cmp
test
push
push
dec
inc
jo
pop
add
xor
mov
popf
jecxz
dec
lods
ss
call
cmp
popf
cmpb
add
cltd
out
das
xchg
sbb
out
inc
insl
lods
pop
clc
or
ret
mov
loope
dec
pop
mov
sbb
add
inc
lods
in
xor
jmp
xor
inc
xor
test
pop
dec
dec
fadd
in
dec
cld
mov
std
sbb
pop
leave
xchg
cmpsb
les
dec
insb
aad
mov
xchg
fbld
pusha
cmp
push
daa
xchg
xchg
push
sub
lret
repz
movsb
cmp
push
movsb
dec
stc
aam
test
ret
pop
xchg
testl
and
daa
je
out
push
cmpsb
pop
fcoms
inc
cmp
inc
fiadds
bound
je
push
aam
loop
pop
xchg
ja
repnz
pop
mov
cmp
inc
bound
mov
imul
andl
mov
inc
test
mov
ja
push
into
lods
jne
xor
dec
cmpsl
outsb
rol
mov
out
mov
fwait
stos
and
movsl
dec
jo
pushf
lahf
nop
xorps
cwtl
xor
pusha
jecxz
mov
push
mov
test
mov
ss
mov
xorb
sbb
addl
jmp
flds
and
mov
fwait
pop
mov
xor
xchg
add
and
jae
fwait
int
ds
aas
or
sub
in
adc
movsb
in
jmp
aaa
shlb
sub
jo
cmp
in
push
jno
arpl
add
xor
inc
jo
out
shl
jo
lock
inc
inc
aam
ds
lock
les
mov
es
leave
and
dec
sbb
out
mov
mulb
xor
fs
aaa
xchg
push
aad
mov
in
ret
loopne
lods
rol
xchg
adc
sbb
inc
test
xor
mov
stos
cmovo
lret
xchg
xor
adc
mov
jmp
mulb
pop
add
xchg
icebp
adc
mov
inc
into
data16
push
xor
out
xor
ja
lds
test
cmpsl
shll
lds
inc
cmp
cld
jge
push
mov
adc
ret
sbbl
je
add
lds
and
ret
or
sbb
std
aas
pop
repz
testb
push
xor
push
xchg
jno
push
fcmovnbe
in
and
imul
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
add
inc
invd
add
wbinvd
call
mov
fstpt
mov
scas
and
jp
mov
bnd
cltd
stc
sub
xor
cmc
jl
movsb
movsb
shl
shll
or
sub
aas
xchg
push
fisttpl
jbe
xchg
push
inc
jl
dec
cmp
nop
in
fdivr
es
into
mov
push
pusha
sub
adcl
xchg
clc
mov
pushf
and
punpckhbw
xlat
popa
dec
out
sub
jp
lret
mov
xchg
push
cs
pop
aam
inc
fisttps
cli
or
xchg
stc
jae
daa
lret
into
inc
cmp
hlt
mov
jmp
imul
jl
adcb
fiaddl
sbb
push
cld
xchg
mov
mov
mov
and
fsub
pusha
addr16
mov
popl
test
xor
pop
xor
in
or
cmp
fidivl
mov
and
ret
fcomip
xchg
out
dec
push
or
mov
push
sbb
dec
sub
dec
mov
cmpsl
push
sahf
iret
jno
ljmp
adc
adc
in
mov
nop
push
loop
and
outsb
pop
in
xchg
sub
ja
jns
mov
pop
std
int
int3
mov
lea
push
cmp
xchg
sub
adc
sbb
mov
adc
add
ljmp
or
mov
imul
je
push
dec
mulb
dec
fdiv
aaa
out
imul
jmp
inc
addb
sbbb
fsubl
call
mov
sub
mov
subl
cmp
jae
mov
rol
push
jb
jecxz
iret
pop
bound
test
add
ret
mov
mov
hlt
push
rcr
mov
scas
int3
xor
rorl
jae
mov
daa
mov
dec
sub
sbb
inc
inc
adc
sahf
out
add
insl
leave
inc
xchg
inc
test
mov
pop
out
out
cmp
xor
xor
lcall
cmp
mov
mov
insb
pop
and
stos
sbb
cld
mov
arpl
sar
ret
test
lret
shll
cmc
sbb
dec
scas
push
fildll
pop
dec
pop
repz
cmp
mov
daa
mov
ret
outsl
lods
sub
sti
xchg
imul
nop
push
jo,pt
or
mov
lock
mov
add
mov
rclb
mov
mov
shll
jno
mov
xchg
cmp
pusha
test
sub
ret
pushf
cmp
outsb
mov
push
sbb
mov
fwait
pop
ds
jns
ret
pushf
movsl
dec
sbb
xchg
aam
cli
dec
sub
stos
adcl
pop
loop
xor
int3
loop
icebp
xorl
repz
xlat
rorb
jmp
cwtl
lds
mov
push
pop
popf
mov
inc
jb
push
les
jmp
test
or
pop
xchg
adc
adc
in
les
popa
jle
shl
xor
dec
mov
rcrb
cs
xlat
leave
popf
je
mov
iret
test
jns
or
dec
pop
add
cli
or
jmp
mov
pop
ljmp
lahf
not
notl
or
ljmp
shr
fisttps
daa
shlb
fmuls
sub
mov
punpckhbw
fnsave
and
pop
inc
mov
loopne
jno
inc
jne
push
bnd
imull
adc
and
cli
mov
push
mov
movsb
cld
in
arpl
or
pop
jp
lods
fwait
into
jnp
fisttpll
sbb
xor
mov
mov
mov
jg
iret
add
dec
mov
sub
es
std
mov
xor
loop
loope
test
pop
rcll
add
sub
cwtl
push
je
sbb
sub
imul
mov
sub
mov
sub
inc
rcll
dec
xchg
mov
and
enter
inc
pop
aas
iret
icebp
add
ss
mov
sub
mov
mov
filds
pop
insl
push
push
mov
testb
int
ret
nop
mov
xchg
pop
scas
sbb
mov
dec
mov
add
jecxz
jns
les
sbb
mov
leave
inc
mov
mov
dec
xchg
dec
insb
test
es
mov
jmp
xor
ret
add
mov
xor
arpl
jbe
pushf
inc
sub
cmp
adc
ret
push
mov
adc
mov
lcall
push
cmpsb
popf
push
out
ja
mov
idivb
mov
dec
scas
dec
inc
in
cwtl
sbbb
in
jl
adc
adc
hlt
sti
dec
sahf
jg
enter
mov
or
test
cltd
loop
loop
sti
xor
pop
fists
ret
rolb
xchg
sub
loope
lock
fisubl
mov
hlt
outsb
pop
xor
jecxz
cwtl
ror
fsubrp
pushf
popa
fsubrl
add
dec
std
mov
lds
adc
mov
dec
jl
push
cmp
mov
inc
xchg
push
sub
adc
pop
push
iret
mov
clc
lret
sbb
js
pop
or
aaa
mov
cmpsl
ret
mov
mov
jl
adc
mov
fwait
fs
xor
pushf
lods
mov
cmp
jmp
pop
inc
loope
int3
roll
das
lock
in
pop
mov
in
dec
lds
jo
lret
lahf
adc
and
cmpsb
aad
mov
inc
ljmp
xchg
mov
popa
lahf
aad
clc
cmp
leave
sub
mov
mov
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
mov
pi2fw
pop
in
lods
pop
xor
cmp
jp
xchg
and
sub
jns
jl
adc
mov
sbb
mov
cmp
scas
inc
fsubrl
cmp
add
cmp
adc
test
outsb
imul
sbb
and
mov
xchg
fmuls
loope
fldt
mov
fldl
inc
loopne
popa
mov
enter
in
nop
imul
aad
pop
xchg
ss
in
negb
add
cltd
loop
xor
sahf
cmp
pop
cmpsl
andb
sbb
xor
sub
sub
mov
jg
cwtl
outsb
daa
mov
xor
jge
leave
mov
sahf
fs
adc
and
test
testl
jmp
sbb
xchg
sti
pushf
hlt
mov
jnp
mov
jae
adc
xor
je
inc
cmp
pop
mov
sub
jge
rcr
test
int3
fistps
inc
cs
or
les
call
aas
pop
lret
xor
jb
add
cmpsb
int3
adc
cmpsl
add
test
mov
popa
ds
inc
push
dec
js
pop
cmc
cmc
mov
cmc
dec
das
xor
jge
mulb
ja
sub
xor
sub
xchg
rcr
nop
repnz
int3
fidivrl
mov
push
pop
jmp
sti
aad
sbb
xor
loopne
popf
push
cwtl
xor
out
push
cmp
repz
popf
dec
leave
or
push
imul
fidivs
pop
movsl
push
add
dec
xchg
aaa
push
add
and
mov
adc
mov
out
add
pop
out
xchg
jg
push
adc
imul
push
in
lds
cmp
mov
ds
xor
cs
out
shrl
or
loop
push
les
mov
ljmp
mov
dec
mov
dec
mov
movl
pop
mov
push
mov
mov
inc
lret
shrb
mov
scas
xchg
rcrb
mov
stos
adc
stos
in
icebp
or
fnstenv
jne
or
and
push
pop
rorl
outsb
shrl
pop
fstpl
sbb
xlat
mov
das
add
fstp
mov
xchg
std
jns
es
push
dec
sbbb
int
xor
test
je
sbb
sahf
xor
icebp
mov
jne
xchg
and
ret
mov
jecxz
rolb
push
mov
mov
test
outsl
sub
jns
cmp
xchg
sti
sub
insb
push
repnz
aad
insb
rol
xor
out
add
add
push
cmp
mov
jnp
jmp
inc
or
mov
es
insb
std
jle,pn
push
movsl
je
test
mov
inc
lahf
pop
and
into
in
bts
xor
popf
pushl
out
enter
mov
cmpsl
push
fyl2xp1
and
and
roll
arpl
mov
sbb
pop
jp
mov
jmp
imul
xor
xchg
jmp
xor
push
adc
inc
pop
clc
aaa
data16
mov
rorb
leave
pushf
incl
rcll
xchg
xchg
lods
in
stos
imul
pop
out
cmp
out
data16
stos
cli
loopne
pop
mov
bound
ds
fmull
js
jmp
sbb
and
fcom
push
loope
fdivl
push
add
aas
sti
mov
xchg
fwait
jp
inc
mov
rol
sbbl
jg
mov
mov
mov
mov
cmp
add
shlb
inc
sub
inc
push
repz
fwait
mov
scas
mov
add
sbb
or
das
jge
imul
push
lret
ds
je
mov
lods
push
inc
gs
subb
into
sub
xor
int
shl
outsl
cmp
adc
jmp
and
cmp
xor
or
push
mov
pop
cmp
frstor
mov
shll
cmp
cmp
ret
xorb
mov
mov
cmp
mov
xchg
adc
aaa
arpl
arpl
daa
or
mov
dec
mov
mov
cltd
cmp
mov
xor
pop
and
mov
pop
or
add
pop
das
xchg
sub
out
lahf
lcall
out
jmp
ja
cmpsb
test
adc
lahf
aaa
or
sbb
rorb
clc
test
lahf
adc
adc
scas
mov
into
adc
add
shl
lea
mov
push
inc
sbb
jne
outsl
shlb
mov
inc
sub
inc
dec
add
cmp
in
jecxz
hlt
test
mov
mov
loope
popf
pop
nop
mov
fsub
test
shll
xorl
or
cmp
mov
js
je
inc
repz
call
dec
pop
mov
fs
push
cs
fwait
adc
and
jle
data16
aad
or
xchg
loopne
test
xor
mov
and
jge
outsb
and
fistl
xorl
cmp
adc
add
sbb
call
aaa
add
test
push
icebp
mov
ret
mov
ja
clc
push
sbb
sbbb
mov
loope
and
jecxz
imul
lods
and
lahf
dec
test
and
out
xor
inc
pop
add
aas
xor
test
or
push
test
dec
fadds
decb
int
lock
dec
mov
adc
cld
fwait
jnp
sbb
mov
pop
push
lods
rorb
es
lods
xor
mov
js
push
cmp
cmp
jecxz
fistpl
push
pop
adc
stos
jae
les
or
out
pop
cld
pop
adc
jp
push
je
sub
out
sahf
dec
add
adc
mov
pop
std
xchg
and
test
into
aam
or
xchg
inc
leave
adcl
loopne
push
leave
roll
xor
adc
mov
mov
dec
lock
shl
inc
push
cld
dec
dec
xchg
sbb
in
sub
mov
int3
in
in
shll
xchg
cld
and
xchg
hlt
jne
push
fsts
adc
cmp
and
fldl
std
sub
pushf
pop
mov
cmpsl
aad
cltd
add
mov
sbb
cs
xchg
jbe
push
fidivrs
xor
or
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
mov
mov
comiss
inc
sbb
xor
push
dec
addr16
cmp
test
imul
jp
mov
mov
xchg
aas
mov
cmpl
mov
lock
test
addr16
cld
sbb
stos
sbb
leave
push
jmp
push
sahf
pop
push
mov
outsb
push
xor
adc
add
leave
sbbb
mov
add
mov
push
clc
pushf
push
data16
lock
fisttpll
out
outsb
mov
enter
nop
mov
ss
sahf
pusha
cwtl
pop
call
in
daa
scas
adc
xchg
int3
outsb
repz
add
test
insl
addl
inc
addl
movl
mov
and
fildl
test
inc
test
and
adc
sub
rorb
rcll
xchg
or
insl
xchg
push
sub
mov
or
pop
inc
stos
add
xorb
adc
pop
sub
adc
xor
shrl
pop
je
jmp
add
jb
or
pop
mov
test
add
dec
sub
push
jmp
js
push
push
xor
mov
cli
jnp
int
inc
out
pop
mov
or
ficomps
cmp
mov
add
add
int3
fsubs
sub
push
inc
adc
in
push
xchg
jns
add
loope
mov
lret
adc
int3
rcrb
dec
xchg
mov
push
test
and
ret
mov
mov
aam
es
fistpll
sub
mov
inc
or
addr16
hlt
out
xchg
in
cs
push
xor
hlt
mov
pop
xchg
rolb
hlt
jge
aam
shll
and
push
imul
mov
scas
ss
xor
xor
cmp
sti
pop
sbb
mov
mov
mov
ja
inc
mov
and
daa
jae
cli
adc
push
mov
fcoms
imul
dec
push
push
mov
fbstp
mov
adc
and
sahf
xchg
mov
xchg
push
jb
push
call
push
xchg
fcompl
adc
movsl
bndldx
stc
dec
add
add
addl
add
push
pop
dec
nop
cmc
hlt
ret
or
daa
lea
mov
nop
fcompl
dec
sbb
mov
lods
into
mov
jbe
lock
rclb
jle
sti
mov
push
nop
sahf
inc
mov
sub
loop
xor
dec
mov
in
xor
pop
ret
adc
inc
in
call
xor
mov
mov
mov
push
pop
fisttpll
in
loop
push
cmpb
es
decl
aam
nop
mov
lds
repz
dec
repz
jne
xchg
cmp
jo
inc
das
bound
into
lods
pop
pop
mov
cltd
push
jmp
stos
jno
adc
cmpsb
mov
loopne
pop
jnp
pusha
aas
gs
mov
pop
pop
push
inc
test
inc
add
das
mov
imul
addr16
push
push
ljmp
mov
pop
out
mov
xchg
mov
movsl
sarb
mov
xor
dec
jle
jnp
std
add
sbb
xchg
jecxz
mov
adc
sbb
cli
in
inc
dec
xchg
mov
out
mov
fnstcw
mov
xchg
xor
jne
mov
arpl
dec
jmp
aaa
and
mov
sub
mov
flds
push
inc
in
inc
cmp
push
xchg
xchg
xchg
sbb
fwait
es
je
lods
loop
jne
mov
jae
pop
or
fs
xor
cmp
mov
fs
ret
xor
mov
and
gs
mov
dec
jl
mov
dec
ja
es
repz
insb
mov
xchg
or
das
fwait
xor
dec
pop
fwait
in
inc
loope
push
mov
sub
rol
cmp
test
leave
mov
dec
jg
aas
dec
adcl
push
ret
mov
cmp
xchg
push
xchg
push
sub
push
rclb
shll
xchg
aaa
mov
ret
push
sbb
repz
repz
out
inc
smsw
adc
push
into
push
clc
inc
xchg
jo
decl
and
out
clc
xchg
dec
push
testl
das
pop
xor
push
pop
push
jge
clc
push
inc
rcr
movsl
rclb
mov
scas
xor
mov
imul
sbb
or
test
subb
mov
out
mov
loop
mov
adcb
ss
js
jns
xchg
shlb
mov
push
xchg
stos
aam
push
es
out
stc
popf
dec
int3
pop
dec
adc
call
pop
daa
sub
mov
jbe
outsl
pushl
sbb
or
inc
or
push
popf
push
mov
or
xor
dec
inc
insb
xchg
cmp
xchg
and
push
shrb
xchg
outsb
sub
cli
sbb
js
mov
jae
push
mov
cmp
cmp
push
sub
das
fwait
lret
std
cmpsb
lods
cli
lret
lds
imul
dec
cli
mov
repz
test
nop
push
pop
es
cmp
push
cmp
jl
push
cmpsl
les
jae
fs
sti
add
sbb
and
mov
xchg
adc
and
outsb
pop
test
addr16
fnsave
stos
pop
jmp
ficompl
jb
mov
lcall
popf
scas
inc
jle
lahf
adc
ja
sub
dec
aas
and
fldenv
cmpsl
push
scas
mov
pop
cwtl
loope
testl
lods
js
inc
dec
add
cmovge
lea
push
cmp
pop
rcll
in
out
out
int3
pushf
xchg
sub
sbb
jns
les
mov
add
fcoms
ret
pop
cmpsl
scas
xchg
nop
sbb
subl
leave
add
rcrb
pop
pop
push
adc
pop
cmc
or
adc
test
jae
xor
and
push
pop
cmp
repz
cmp
cmp
fwait
cmp
mov
mov
mov
repz
out
add
out
sbbl
mov
mov
sub
outsl
leave
leave
mov
mov
and
lea
sbb
sub
insb
lds
ret
cmpsl
inc
sub
mov
aam
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
adc
scas
xchg
pop
pop
mov
setne
lahf
jl
mov
lea
xlat
shrb
leave
jo
subl
xor
jbe
pop
push
out
dec
shll
add
popa
adcl
pushf
xchg
mov
push
or
insb
gs
jmp
xor
cmp
fwait
xchg
call
jle
cltd
sub
mov
scas
cmp
mov
push
dec
push
es
pop
call
jg
int3
loope
fcoms
xchg
aam
mov
std
mov
hlt
xlat
scas
imul
out
rcrl
xor
push
dec
mov
dec
hlt
add
jg
fcmovnu
inc
leave
aad
fidivl
cmp
outsl
cwtl
and
or
jg
jae
mov
test
outsl
icebp
and
mov
cltd
dec
xchg
cwtl
fiaddl
roll
cs
mov
dec
pop
imul
mov
outsl
xor
jmp
cli
lret
mov
fistps
dec
stos
add
popa
insb
enter
mov
fidivrl
inc
adc
xchg
mov
pop
mov
mov
stos
in
ja
jl
xchg
pop
loope
sub
lds
xchg
mov
cmp
xor
inc
popa
jle
or
add
sbb
arpl
inc
push
jns
dec
addl
sbb
out
insl
ret
stos
aad
jl
or
jns
fldcw
stos
adc
or
cmp
jmp
outsb
frstor
data16
mov
cmpsl
sbb
pop
sbb
inc
es
adc
inc
mov
mov
push
repz
pop
out
insl
sbbb
shrl
mull
xchg
push
adc
flds
xor
cmp
xlat
fs
and
inc
jne
mov
jns
loope
ss
mov
mov
adc
loop
push
fisubrs
repnz
leave
jp
scas
test
and
sub
shlb
or
lock
fs
lods
xchg
sbb
mov
sahf
jbe
jo
adc
adc
ja
dec
jg
mov
jecxz
sti
int
not
fs
fnstenv
pop
push
aad
xlat
or
cli
add
pop
inc
aam
dec
or
loope
stos
sbb
or
or
inc
out
mov
mov
outsb
mov
es
fdiv
aam
cs
sub
and
sbb
leave
pop
leave
or
rolb
imul
push
nop
ljmp
in
jo
setge
add
cmp
lret
idiv
fidivrl
out
nop
aas
push
pop
jg
xchg
lods
test
or
jg
es
int3
or
aas
xor
fs
fs
xlat
or
aam
stc
lret
xor
adc
and
insb
xchg
pusha
inc
adc
inc
mov
test
mov
icebp
mov
mov
sub
and
adc
imulb
imul
or
fimull
imul
bound
xchg
sub
inc
sahf
aad
add
mov
jp
jae
xchg
cmpb
js
dec
imul
sub
or
pop
mov
hlt
jle
cli
push
fiadds
add
jle
addb
nop
imul
mov
push
imul
xchg
ss
adc
test
jno
mov
and
mov
and
insb
mov
les
mov
dec
jns
and
lds
das
int3
dec
rcrb
jmp
pushl
mov
imul
iret
jp
mov
lret
data16
scas
adc
mov
push
rcr
add
inc
aam
ss
mov
inc
mov
xlat
js
insl
mov
lods
pop
mov
iret
imul
cli
and
push
fbstp
mov
sub
sbb
jmp
insb
xchg
lahf
lahf
jb
aas
outsl
shll
cmp
pop
cld
lock
push
inc
jg
jnp
xchg
pop
out
push
stc
inc
push
push
adc
and
xchg
nop
jns
in
lock
stos
xchg
test
mov
repnz
loope
mov
lahf
insb
cmpsb
and
sahf
roll
out
push
aas
in
lahf
mov
jge
adc
add
xor
xor
int3
shlb
mov
mov
int3
cmpsl
gs
stc
in
mov
aas
push
adc
cmpl
cld
cmpsl
mov
lahf
je
stos
mov
scas
cmpsb
icebp
cmp
mov
arpl
fistpl
lret
cmp
pop
mov
inc
pop
das
nop
in
pop
repz
xchg
jnp
data16
mov
xlat
xchg
aaa
outsl
adc
pusha
out
outsb
adc
stos
arpl
cmp
mov
xor
mov
cmc
mov
movsl
stc
pop
xor
test
ja
xor
xor
jmp
cwtl
xchg
clc
xor
adc
dec
inc
clc
adc
mov
into
jne
insl
lcall
fnsetpm(287
rolb
lock
or
aaa
pause
jl
outsl
in
adc
push
scas
cmp
lret
lds
mov
pushf
and
jbe
imul
sbb
lock
rdmsr
fiaddl
fnstcw
pop
lret
mulb
mov
xchg
mov
add
aam
xchg
aam
inc
adc
mov
bswap
adc
xchg
out
add
or
push
mov
xchg
sbb
into
xor
jle
in
adc
fwait
push
jmp
xor
shlb
into
rcll
jnp
jge
adc
dec
pusha
jle
add
clc
ficoml
fldenv
adc
lahf
pop
mov
mov
add
outsb
adc
outsl
rcll
xchg
in
mov
insl
iret
pop
push
add
aas
mov
daa
cwtl
dec
sbb
or
mov
movsl
adc
leave
repnz
jb
orl
cld
jae
cltd
dec
insb
jno
jl
cmp
scas
jnp
sbb
out
fistpl
outsl
testb
jge
call
inc
cli
dec
je
or
scas
mov
mov
dec
sbb
loope
adc
jg
sbb
mov
sbb
test
inc
imul
nop
cwtl
inc
adc
gs
pop
adc
stos
aaa
mov
xor
adc
pop
lcall
and
jnp
aaa
jmp
fstps
arpl
adc
and
pop
out
xorl
ret
cmpb
popf
shl
mov
es
inc
add
in
pop
push
scas
stos
mov
add
test
push
adc
cmp
fisubs
dec
inc
nop
dec
mov
outsb
and
inc
inc
jno
cs
pop
sbbb
test
loopne
adc
jmp
into
add
or
lock
stos
js
notl
mov
cvttps2pi
mov
out
xor
inc
in
mov
push
push
lea
scas
mov
jae
pushf
jl
pop
sub
stc
mov
and
rcrl
push
jg
daa
fpatan
arpl
or
aaa
jns
and
ss
movsb
fcmovnbe
ret
out
mov
push
nop
push
test
sub
out
sub
or
inc
in
cmpsl
mov
enter
jne
fisttpll
stos
jg
pop
repz
pmaxsw
repnz
mov
adc
je
std
mov
jg
pop
xor
push
sbb
mov
pop
mov
cs
add
enter
mov
nop
sarb
lret
or
mov
add
insb
mov
or
jmp
xchg
aam
mov
loopne
inc
loope
subb
mov
mov
ljmp
and
and
mov
nop
psrad
nop
mov
adc
into
lds
jl
out
movsbl
cli
push
adc
pop
fwait
js
mov
push
jb
ja
dec
push
mov
dec
flds
or
or
test
mov
arpl
inc
adc
cmp
cmpsb
or
cmp
movsl
mov
cmc
cs
fisubrl
test
fdivrs
movsl
insl
ja
loop
lret
dec
mov
and
mov
mov
jle
push
xchg
push
push
std
dec
fsubl
and
add
lret
or
and
mov
and
stc
iret
imul
and
mov
dec
divl
mov
cmp
ljmp
sub
enter
inc
sbb
scas
cltd
mov
or
add
adc
lods
jmp
stos
outsl
icebp
xchg
xor
insb
push
jno
xchg
test
in
pop
adc
movsl
mov
adc
lds
pop
repnz
xor
push
icebp
push
mov
adc
es
stos
jg
loop
cmc
fistpl
jbe
addr16
mov
pop
shlb
lcall
inc
mov
xchg
iret
mov
jns
sbb
and
jb
rclb
xor
pop
lahf
dec
cmpsl
and
daa
push
loopne
lret
aas
inc
lahf
shrb
cld
mov
xlat
push
test
inc
movsb
add
cmc
ljmp
nop
aaa
je
inc
cmp
add
push
add
cwtl
out
push
mov
mov
push
mov
arpl
mov
es
push
sti
scas
jno
dec
pop
sub
mov
mov
inc
gs
dec
dec
addl
ljmp
ficoms
or
jl
add
arpl
cwtl
fs
jecxz
push
lret
andb
jns
popl
inc
mov
loope
cld
inc
adc
lea
mov
inc
push
into
jbe
inc
fiaddl
cmp
insl
sub
data16
xchg
lds
aas
push
into
mov
push
xchg
lret
sbb
dec
dec
fidivrl
repnz
imull
mov
repz
xchg
add
ljmp
cmpsb
jp
xor
jns
inc
or
lock
add
scas
dec
int3
mov
shl
mov
add
in
ret
xchg
fstps
test
call
push
xchg
fisttpll
popf
push
or
mov
xor
aas
cmpsb
pop
add
gs
fsubrs
fnstsw
dec
in
or
xor
aas
lea
xorb
test
and
test
js
add
iret
aas
push
fwait
push
mov
movsl
sarl
mov
pop
adc
cmpsb
fdivr
stos
lods
cmp
pop
xorb
xchg
mulb
scas
jb
inc
sub
mov
popf
or
dec
cmpsl
lret
scas
lds
jo
and
insb
sbb
lahf
add
adc
addr16
mov
in
push
or
jmp
rclb
orb
xchg
and
sbb
stos
jns
pop
cmpsb
mov
cld
pop
jp
jl
ret
hlt
sbb
std
inc
pushf
pop
inc
insl
addl
jno
fisttpll
xor
mov
lahf
rol
jl
xchg
jl
or
fcmovnb
pop
add
imul
cltd
mov
je
imul
mov
lods
mov
aad
out
push
aad
jge
scas
and
movd
push
inc
testl
repz
test
add
mov
in
ret
pop
add
ret
cltd
ja
daa
sarl
jge
scas
pop
mov
roll
out
test
ljmp
loope
popf
adc
nop
push
mov
daa
incb
xchg
lds
ljmp
fisttps
mov
xlat
mov
inc
dec
add
or
dec
jecxz
dec
push
adc
cmp
ret
pop
cmp
and
repnz
mov
enter
dec
adc
insb
cmpsb
inc
adc
popf
mov
cmp
dec
and
adc
mov
cmpsl
adc
xor
mov
lcall
lea
push
call
or
sti
xchg
test
lea
mov
adc
jmp
or
add
add
sbb
mov
mov
add
ret
jb
xor
sbb
mov
push
je
arpl
repnz
rorl
std
les
in
mull
enter
cwtl
cs
stos
rcrl
repz
and
xchg
sub
xor
shlb
pop
icebp
ret
dec
movsl
mov
stc
or
repz
and
jle
jnp
adc
lea
mov
push
xlat
jg
push
mov
and
sbb
inc
not
addr16
aaa
pop
and
das
bound
aaa
aaa
and
insb
sbb
cli
cli
rcrl
into
xorb
mov
icebp
loope
fsubr
mov
fiadds
pop
cmp
or
popf
test
pop
das
std
out
xchg
jl
or
jno
inc
jmp
filds
int
test
fdivrp
xor
add
mov
lahf
sub
in
out
push
aad
cmp
fistpll
cltd
add
xchg
add
int
ret
nop
mov
sub
popa
inc
xor
daa
push
std
lret
stos
sbb
dec
jbe
xchg
test
xchg
and
mov
loopne
or
adc
int
inc
pop
testb
xor
sbb
xor
adc
dec
jmp
testl
cmc
dec
rorb
sbb
and
xchg
and
xchg
leave
imul
bnd
stos
outsb
mov
in
outsb
cmp
pop
mov
lahf
jno
and
outsl
movsl
pop
stos
lret
push
add
pop
outsl
lcall
push
xchg
rolb
add
add
enter
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
fst
mov
in
adc
and
arpl
pusha
dec
cmp
xchg
adcl
lret
push
xchg
adc
mov
das
cmpl
cmp
pop
and
cmp
out
lock
mov
lea
pop
movsb
pop
add
xchg
aam
cmp
or
xor
test
repnz
orl
jg
rorb
pop
rcll
lret
dec
jne
addr16
mov
test
mov
ja
cmp
mov
xor
push
push
pop
add
inc
dec
cs
sub
mov
movsl
add
adc
push
mov
pusha
xor
lcall
testl
shlb
int
or
popa
std
arpl
clc
pushw
movsb
repnz
sbb
add
cmp
mov
cwtl
into
and
popa
int
imul
lds
out
add
or
dec
pop
or
inc
movsl
lock
aaa
lret
dec
ljmp
jecxz
xor
js
inc
loope
jno
and
data16
aaa
nop
rcll
xor
sbb
push
mov
cmc
cmpsb
xchg
sub
mov
or
iret
mov
gs
dec
lds
adc
push
xor
outsb
arpl
mov
addl
jge
rol
add
pop
add
mov
adc
cmp
mov
fwait
insl
rcrl
les
and
and
xor
jecxz
xchg
fcmovb
inc
push
inc
iret
sub
out
faddl
sti
mov
jb
in
cmpsb
push
push
aad
mov
dec
aad
pop
test
push
and
inc
push
or
cmp
xor
inc
pop
sub
sbb
sub
mov
mov
test
test
or
mov
mul
push
lret
pop
push
scas
pop
xchg
pusha
shlb
pop
shlb
mov
hlt
pushf
or
add
fdivrl
fldenv
mov
jle
mov
stos
mov
dec
repnz
adc
jbe
mov
mov
push
dec
dec
jnp
mov
xchg
sub
and
xchg
cmpb
mov
rorb
mov
pop
cmp
ds
jb
cmpsl
leave
jns
push
daa
in
add
ja
or
dec
fadds
ja
sub
insb
out
xchg
stc
xchg
mov
mov
shll
adc
inc
mov
add
add
xchg
mov
fstps
mov
cmp
xchg
idivl
lds
test
popa
ljmp
mov
inc
das
out
in
mov
gs
pusha
stos
or
fisubs
mov
pop
xchg
lahf
jae
inc
mov
insl
das
mov
lcall
fiadds
call
xor
jle
mov
repz
daa
lock
ja
jle
test
or
pop
mov
xor
pop
mov
mov
sbb
popf
sub
sub
sbb
fcmovu
in
xchg
push
dec
das
in
push
cmc
dec
xchg
cmpsl
dec
scas
insb
xchg
stos
jb
test
scas
insl
sub
pushf
mov
xchg
sbb
std
or
and
inc
sbb
mov
fs
test
push
cltd
xor
add
cltd
push
movsb
loope
inc
inc
lahf
jg
jle
push
mov
xchg
arpl
sbb
adcl
pop
inc
idivl
aas
stos
fdivrl
adc
sub
push
std
and
arpl
lods
cmpsl
pop
rep
inc
out
stc
xchg
lcall
pop
xor
insl
outsl
ljmp
repz
push
cld
sbb
xchg
lods
or
cmpsl
bound
sarb
sub
movsl
mov
jb
aas
xchg
mov
test
in
cmp
cmp
ja
add
repnz
xor
pop
xchg
repnz
cld
clc
notl
jne
sub
test
and
xchg
rol
pusha
xchg
dec
sbb
adc
pop
push
es
xchg
push
stc
fiadds
or
add
mov
mov
dec
mov
out
add
cmc
and
mov
mov
stos
int3
dec
jns
mov
inc
sbb
cmp
inc
in
push
in
ror
fsubrl
sub
lock
dec
mov
fmuls
and
cmpb
xor
mov
and
push
insl
inc
cs
cmp
sbb
mov
jecxz
lret
sbb
roll
cmpsl
mov
sub
icebp
fwait
movsb
cli
cld
mov
mov
cmp
inc
sahf
shr
dec
mov
out
pusha
pusha
dec
movsb
jno
cld
outsl
pop
loop
mov
jns
xor
and
mov
orl
mov
cmp
jg
rol
outsb
mov
xchg
pop
lret
pop
dec
test
mov
lahf
push
popa
or
mov
inc
xlat
in
push
jg
inc
inc
xor
ret
mov
pop
or
or
dec
pop
mov
movsb
lods
icebp
xor
imull
in
mov
dec
lahf
xor
mov
pop
mov
mov
outsl
adc
pop
inc
test
add
sahf
outsb
cli
les
inc
sub
inc
fdiv
loopne,pt
xchg
mov
das
xor
sub
jmp
or
les
cmp
adc
loop
adc
mov
lcall
lret
ja
pop
mov
call
sbb
cmp
pop
sahf
cli
cmp
fpatan
in
out
insb
iret
and
inc
outsl
in
jecxz
bound
lret
push
fdivs
add
pop
xchg
cltd
cld
shl
and
jne
mov
push
mov
push
cld
outsl
xor
push
pop
repz
mov
test
xchg
jns
jle
sbb
ret
push
mov
jle
rcll
pop
lret
inc
sti
mov
xchg
ja
test
popl
movsb
pushl
jnp
ljmp
mov
inc
ja
jne
decb
sub
xor
fidivl
rorl
hlt
mov
xchg
in
fadd
mov
shll
add
pushf
repz
adc
add
dec
jb
push
addr16
cmpsb
lock
jns
jb
or
scas
loopne
push
adc
enter
inc
xchg
leave
fstl
insl
in
fmull
push
cmp
scas
sbb
ljmp
in
mov
xor
add
inc
sub
mov
xchg
hlt
mov
leave
sub
movsb
xlat
nop
jnp
mov
scas
out
push
leave
add
es
jmp
push
pop
sbb
xor
std
pop
mov
xchg
adc
sub
in
icebp
arpl
fcmovnb
ret
or
sub
add
jp
dec
cltd
and
dec
loop
stos
dec
ret
pusha
and
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
loope
loopne
cmp
adc
and
mov
push
outsl
cmpl
xor
sti
jns
mov
mov
sbb
scas
insb
test
push
add
lock
aaa
lods
mov
lcall
mov
cmpsb
mov
data16
dec
push
outsb
or
xor
sbb
lock
dec
loop
pop
hlt
inc
push
sub
jle
dec
mov
pop
int
inc
and
sbb
jb
out
es
aam
mov
int
and
enter
pushf
cmpsb
jnp
outsb
and
aas
cli
xor
push
mov
cli
stos
in
mov
mov
sub
and
push
dec
dec
subl
mov
in
and
cli
and
pop
loopne
imul
sbb
xor
or
mov
add
scas
cmc
bound
pushf
adc
outsl
cmc
xor
lahf
fsubrs
jmp
sbb
jg
adc
int
sbb
lret
pusha
int3
test
and
cmpsl
pop
insl
cwtl
das
pop
loopne
inc
or
mov
dec
mov
imul
sbb
lret
imul
fcoms
sbb
adc
dec
arpl
sarb
pushf
mov
mov
loope
mov
add
jg
xor
jno
or
jns
lods
inc
sbb
adcb
jns
mov
leave
jmp
mull
push
xchg
cmp
mov
inc
test
lea
mov
movsb
addr16
popl
bound
cmpl
inc
pop
vmread
and
vphaddbw
sahf
bnd
push
fidivl
pusha
xchg
xor
aad
imul
push
js
gs
jno
hlt
adc
fcomps
or
mov
je
mov
test
pop
xor
jns
adc
or
repz
push
subb
mov
dec
lea
sbb
out
jl
hlt
xor
pushf
mov
push
push
dec
xchg
aas
add
and
sbb
mov
mov
or
icebp
popf
push
das
and
mov
loopne
adc
inc
pop
mov
adc
mov
jmp
roll
pushf
pop
cltd
push
push
inc
rolb
cmpsl
lods
mov
lods
inc
dec
mov
xchg
or
xor
mov
insl
mov
push
mov
lods
test
lret
pushf
add
cmp
shll
popa
lret
ret
repz
out
jae
xchg
pop
jae
push
js
and
call
bnd
mov
fstl
aas
sub
xor
test
rcl
test
lret
je
pop
dec
je
call
fldt
or
add
pop
lahf
inc
cltd
push
push
pushf
fnstcw
pop
dec
jbe
cmp
lods
pop
mov
ja
lret
popa
push
mov
aad
mov
mov
pushf
in
mov
in
ljmp
pop
xor
xor
push
sahf
adc
adc
lret
mov
insl
data16
push
loopnew
sti
sub
add
dec
add
pop
cmc
jbe
dec
mov
test
add
sub
xlat
es
xor
sbb
in
das
imulb
mov
sub
fistps
or
cmc
or
iret
mov
bound
cmp
repnz
fsubl
mov
ss
lcall
ljmp
mov
in
stos
and
es
mov
sbb
imul
fcmovnbe
mov
inc
xor
or
mov
add
stos
fisubrl
mov
push
sub
adc
add
sub
aas
lret
lret
out
mov
ror
mov
add
jbe
fidivrl
jbe
scas
ljmp
push
pop
lcall
ret
in
sbb
push
push
ja
in
mov
cld
arpl
or
stos
xor
popf
mov
das
dec
mov
lret
scas
fsubr
xor
mov
xor
ds
fwait
mov
iret
out
dec
mov
inc
js
add
gs
mov
cmp
add
ja
lods
es
ret
scas
mov
cmp
insl
inc
dec
mov
push
xchg
movsl
adc
jne
sub
xchg
lret
mov
inc
shlb
sub
rorb
mov
fidivrs
adc
shlb
lea
std
xchg
push
jae
xchg
cmp
test
je
xor
push
notb
adc
xchg
jne
ljmp
andl
aam
pop
pop
mov
or
mov
fisttps
or
push
dec
fimuls
mov
out
dec
pop
jnp
jno
pavgb
fsubl
sub
fcomi
jmp
dec
adc
nop
flds
mov
loope
movsb
mov
movsl
xor
cmpsl
rol
in
jle
and
aam
sahf
mov
int
or
cmp
push
xor
test
push
andl
iret
mov
sbb
sbb
cmp
mov
imul
icebp
sub
jb
aad
nop
popf
xchg
icebp
mov
aaa
inc
push
push
cld
addr16
and
mov
push
cli
hlt
popa
inc
add
mov
add
cltd
outsb
jg
jmp
out
or
dec
gs
jle
dec
clc
scas
xor
sub
in
popa
push
bound
in
in
push
or
inc
frstor
ds
int
stc
push
xlat
lock
icebp
mov
lahf
pushf
int
adc
mov
les
into
cwtl
dec
mov
inc
add
mov
repnz
or
leave
or
jns
mov
add
clc
xlat
mov
rcrb
pop
adc
outsl
sti
lahf
sahf
mov
mov
xor
clc
je
iret
xor
add
pop
leave
into
mov
lods
movl
jno
sbbb
and
cmp
or
popf
outsb
inc
and
push
mov
incl
test
and
into
pushf
leave
jo
cmpsb
dec
adc
lea
js
fidivrl
lcall
std
push
movsb
push
cmp
xchg
jnp
cmp
jbe
lds
clc
mov
inc
mul
jo
aaa
cwtl
add
shl
inc
cld
cmp
mov
push
cmp
mov
cld
movsl
not
xchg
imul
pop
or
inc
dec
les
sub
xchg
shrl
xchg
je
sar
or
inc
xor
int
push
mov
in
fists
lret
pop
fiaddl
out
rol
xorl
or
sar
or
adc
pop
mov
jmp
cmc
xchg
cmp
push
mov
adc
jl
dec
inc
int3
adc
and
jmp
dec
sub
and
xor
idivl
jne
shr
pop
mov
or
daa
ret
int3
mov
push
sahf
add
out
inc
popa
mov
jge
mov
cltd
faddp
lds
jge
xchg
pop
aam
mov
xor
and
add
fistps
jno
mov
das
aam
xor
loope
lods
imul
push
jmp
sub
ret
jmp
push
test
pop
fistpll
fs
scas
cmp
sub
ja
sti
pop
into
in
jb
pop
neg
sub
cld
sub
pushf
pop
add
sbb
cmpsl
mov
pop
fstps
xchg
adc
adc
sub
and
xchg
divl
jmp
xchg
je
cs
shl
sub
ficompl
pop
stc
sbb
cmpsl
sub
outsl
test
pushf
mov
push
inc
dec
pushf
mov
ret
jnp
pushl
sub
mov
xorl
arpl
mov
xchg
sbb
and
insb
popf
test
jnp
insl
aam
jmp
hlt
in
and
pcmpeqb
subl
outsb
jmp
jge
push
adc
pop
jae
add
push
cmp
int3
dec
adc
es
cmp
pop
repz
sub
xchg
inc
xchg
pop
sub
adc
dec
cmp
ret
into
insb
xchg
jns
sti
imul
test
jle
imul
gs
or
out
test
xor
aas
cmp
mov
sbb
mov
lcall
cmp
mov
mov
add
dec
out
aam
pop
xor
shlb
je
sub
sub
daa
sti
inc
fimull
stos
sbb
or
and
xchg
pop
or
addr16
aaa
jge
imul
mov
xchg
pop
sti
mov
shrb
push
mov
pop
stos
test
cmpsl
jmp
ss
test
in
sbb
mov
mov
dec
inc
popf
pop
nop
movsb
jo
enter
mov
xchg
rolb
fcmovu
jmp
fmul
xchg
push
jnp
push
pop
mov
mov
cmp
sub
sub
iret
outsb
xchg
adc
cltd
cltd
adcl
int3
scas
inc
lods
push
push
pop
mull
dec
adc
cmp
adcl
out
stos
xorb
icebp
das
inc
fmuls
push
lcall
sar
and
daa
jge
jb
cmp
lret
mov
push
or
mov
cmp
sub
mov
mov
lret
arpl
sbb
pop
daa
ss
stos
shr
mov
insb
dec
push
jmp
jecxz
mov
sub
dec
mov
into
loope
int
insl
jb
jb
scas
cmp
scas
push
or
mov
cmp
cli
dec
cmc
push
test
adc
jle
stc
imul
mov
stos
stos
stos
int
push
xor
imul
outsb
mov
lds
lret
adc
adc
clc
int3
std
in
mov
imul
loopne
pop
aas
and
mov
jbe
jge
inc
and
mov
fdivr
ja
push
mov
dec
les
js
outsb
es
adc
out
fdivs
je
cmp
test
mov
fidivrl
fnstenv
dec
faddl
mov
dec
xor
sub
sub
cmp
fadds
jae
rcrl
mov
fcompl
ja
nop
mov
movsl
lahf
adc
xlat
faddp
lds
adc
lods
movsl
icebp
add
cmp
mov
movd
lcall
fmuls
lahf
and
adc
rorb
sbb
inc
shl
xor
adc
xor
lcall
mov
loop
addr16
mov
jmp
pop
pop
rcll
add
xchg
cmpl
je
xchg
push
xchg
push
fs
cmc
addr16
movsl
pop
push
leave
push
push
loope
popf
xlat
shr
lea
inc
sub
mov
ret
xchg
lods
mov
mov
sbb
sbb
arpl
add
mov
mov
mov
shr
in
adc
in
add
mov
es
push
or
jmp
xchg
mov
test
dec
sub
dec
mov
mov
out
inc
outsb
mov
push
jmp
scas
dec
xor
daa
jecxz
sbb
dec
add
iret
mov
pop
and
lods
std
add
sbb
jl
pop
add
mov
push
mov
nop
push
popf
pop
adc
loopne
xchg
cs
addr16
sahf
pop
mov
ss
neg
dec
adc
jae
xor
jg
pcmpeqw
xchg
pop
lea
aaa
lods
xchg
and
cmc
ficoml
xchg
mov
xor
lods
xor
mov
stos
int3
rep
iret
fwait
xchg
adc
rcrb
add
outsb
dec
sub
xor
cwtl
sub
js
cld
sub
sub
lods
and
dec
xchg
push
inc
xor
sbb
mov
add
mov
sbbb
pop
stc
add
lret
mov
fsubrp
cmp
hlt
es
push
jp
shlb
fdivl
inc
ja
inc
gs
pop
adc
inc
movsb
or
and
inc
outsb
out
ljmp
jg
ja
lds
pop
xchg
xlat
mov
jns
test
push
xchg
sti
and
add
icebp
std
loop
inc
mov
sbb
and
scas
leave
xor
scas
inc
fs
pop
or
std
jno
mov
fistl
test
push
sbb
mov
sub
in
push
mov
gs
movsl
addr16
cmp
push
daa
fnstcw
dec
idivl
loope
enter
cmc
in
aam
sub
fistpll
jl
pusha
and
push
je
adc
push
pusha
adc
mov
dec
jbe
adc
out
js
imul
nop
mov
add
outsl
adc
sti
push
mov
xor
or
or
fs
loop
js
sarl
mov
test
cmovno
sbb
sarb
enter
xchg
outsb
jge
jnp
cmpsl
mov
and
and
add
repnz
fimull
out
jne
lret
movsl
pushf
ret
out
push
scas
xchg
fcompl
out
push
cli
dec
andl
lcall
lret
pushf
insl
cmc
das
sti
jbe
jnp
and
es
ret
mov
mov
or
je
cmpsl
pop
pop
adc
fildl
cld
mov
subl
push
faddl
inc
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
pfrcp
mov
sti
fdivrs
and
movsl
daa
and
mov
sub
mov
xchg
sub
mov
movsl
mov
xor
dec
sti
or
or
call
jns
jb
cmp
sub
jnp
add
push
and
jo
dec
lds
mov
imul
mov
fs
push
adc
popf
out
cmpsl
sbb
movsb
enter
adc
les
fidivrs
add
inc
popa
enter
sub
xchg
movsl
and
bound
scas
cmc
push
mov
enter
inc
cmp
int
insl
mov
test
scas
pop
imul
sub
mov
cmp
cltd
dec
jbe
pop
jbe
mov
sub
pop
cmc
xor
pop
push
mov
imul
stos
jbe
test
in
sti
lret
or
fnstcw
and
xchg
ljmp
jl
addl
aam
add
das
mov
push
inc
cmpsb
inc
push
push
inc
cltd
loopne
pop
cmpsb
divb
cwtl
aad
scas
sub
call
test
mov
cmp
mov
fistl
push
mov
sti
add
jg
pop
add
jno
ret
rcl
or
pop
sub
or
jp
adc
bound
pop
enter
adc
push
push
jl
sbb
and
xor
mov
test
dec
orl
mov
iret
inc
lds
rorb
jmp
push
addr16
or
ss
or
movsb
and
fsubs
mov
ljmp
pushf
rcr
mov
test
loop
xchg
cmp
xor
int3
xchg
movhps
popf
add
push
fcoml
pop
out
iret
icebp
sub
jae
gs
test
push
bound
test
mov
js
adc
sbb
pop
rolb
sbb
or
cmp
mov
cwtl
mov
mov
scas
xchg
test
sub
fiaddl
dec
adcb
repz
shr
out
mov
jns
adc
cmp
repz
xchg
add
jmp
pop
adc
mov
cmc
sbbl
adc
xor
pop
sub
mov
sub
pop
inc
ljmp
ret
test
lret
test
mov
add
test
out
fwait
cld
jg
fwait
cmp
sbb
fldl
mov
scas
mov
inc
nop
xor
mov
lods
shlb
imul
jne
into
mov
adc
and
es
or
subb
and
xor
lds
dec
xchg
dec
dec
inc
bound
jns
bound
pop
test
pushf
pop
jno
mov
push
bound
outsb
fmuls
sbb
es
rcll
jge
cmpsl
pop
loopne
push
jns
in
lods
insl
and
das
mov
sbb
shll
int
fidivs
call
mov
pop
scas
pop
aas
insl
jge
lcall
pop
jbe,pt
je
pop
ss
dec
aad
lret
movsb
lahf
ds
and
aaa
dec
fwait
les
xor
sarb
aad
jle
mov
inc
iret
dec
pushf
and
or
in
in
cld
dec
adc
std
inc
or
test
and
daa
cmpb
pop
ret
add
push
andl
fs
ljmp
bound
pop
push
enter
sbbb
adc
imul
mov
xlat
push
stos
mov
push
lahf
sbb
pusha
in
in
adc
mov
hlt
ljmp
mov
inc
out
stos
inc
pop
movsl
dec
sub
or
imul
and
js
enter
adc
pop
inc
mov
out
out
mov
leave
int
popf
mov
push
aam
pop
sbb
add
cmp
aas
push
mov
jmp
testb
or
inc
pop
mov
addr16
shrb
add
push
rcrb
icebp
push
scas
rclb
xor
dec
jns
adcb
mov
pop
dec
jo
fcomps
rcrl
out
fnsave
jl
inc
loop
sub
sbb
push
jb
ret
mov
ja,pt
adc
repnz
lret
lret
lock
adc
mov
addr16
sbb
dec
inc
popf
nop
sub
insl
icebp
dec
sti
add
inc
cmp
popf
aas
cmpsl
out
data16
push
add
in
xchg
mov
mov
jnp
xchg
xchg
mov
add
nop
add
pusha
xor
sbb
and
sbb
loope
aam
shl
push
sub
jo
ret
pop
mov
ss
push
mov
addr16
mov
pushf
cmp
shlb
push
je
mov
daa
scas
dec
xor
adc
cmpsl
sbb
rclb
add
addr16
inc
adc
sti
fistpll
mov
adc
adc
cmpsb
mov
mov
icebp
rorl
insl
dec
mov
int
and
scas
clc
cmp
dec
pusha
bound
mov
cmp
inc
aas
test
nop
scas
das
iret
xor
pop
add
test
cmpsb
mov
cwtl
adc
scas
addr16
cmp
dec
sbb
mov
arpl
and
add
push
pop
or
push
lahf
lock
jnp
lods
jb
push
divb
dec
mov
pop
lock
dec
insl
xor
icebp
cld
add
pop
and
and
mov
push
xor
iret
sbb
sbb
sub
out
sub
xchg
add
in
xchg
sbb
into
pushf
mov
push
mov
popa
and
outsb
test
pop
enter
lods
pusha
addr16
cli
sahf
sbb
sbb
pop
inc
lods
pop
lcall
movsl
xchg
repnz
enter
xchg
mov
outsl
push
outsb
sbb
sbb
scas
sub
cwtl
lcall
leave
ja
sti
cltd
data16
jns
dec
mov
repz
mov
out
mov
ret
mov
mov
add
addb
lahf
and
mov
hlt
rcrl
sub
ret
ljmp
mov
inc
lods
jae
dec
cli
daa
inc
inc
jge
inc
push
rcrl
pop
lods
add
or
aas
xor
lret
jg
jle
movsb
mov
inc
xor
ret
xchg
decb
sub
xchg
ds
loopne
cmp
cmpsl
jmp
cld
push
sbb
mov
xor
mov
lds
lock
inc
scas
cmp
add
sarl
adc
idivl
ja
jmp
xor
xor
push
es
jnp
sahf
or
sub
pop
je
dec
mov
push
cmp
or
test
jbe
iret
cmp
in
testb
xor
and
jmp
jne
add
subl
xchg
xchg
dec
addr16
and
daa
je
cmp
mov
sbb
hlt
inc
xchg
aas
scas
pop
popf
sbb
xor
or
dec
out
xchg
sbb
loop
leave
xor
rorb
sub
stos
xchg
mov
repnz
sbb
dec
jbe
push
fsts
sbb
sahf
nop
jb
mulps
sub
push
pop
sarb
mov
cmp
movsl
int
dec
push
test
ret
jne
std
scas
push
fisubrl
cwtl
xor
subl
sbb
cld
push
pop
in
sbb
pop
js
cmp
mov
adc
xor
push
or
test
test
and
and
adc
daa
push
movsl
out
or
jecxz
sbb
aam
test
or
pop
mov
je
frstor
rorb
shll
push
sbb
fs
jns
into
lret
lds
shll
xorb
pop
lods
mov
pushf
pushf
sbb
inc
lahf
test
mov
sub
fwait
xchg
pop
mov
jg
jp
cmp
imul
lret
push
rolb
lret
sbb
inc
mov
sarl
jnp
adc
push
mov
adc
in
in
xor
sub
fistpl
sti
or
pop
addb
sub
mov
lock
aad
daa
jnp
leave
movsb
jp
das
sbb
or
jecxz
mov
das
cmp
cmpsb
ret
xchg
xlat
mov
xchg
sahf
adc
mov
sub
cmp
cltd
in
and
js
mov
pop
mov
sbb
mov
mov
mov
sbb
jecxz
mov
xor
add
and
jb
jecxz
dec
add
ret
and
popa
xchg
push
sub
sbbb
push
sbb
popf
aaa
insl
jl
ret
add
dec
mov
mov
mov
push
shrb
rep
add
lret
int3
call
pop
out
xchg
js
test
fadds
push
inc
xor
enter
cwtl
in
xor
xor
icebp
imul
aam
cmp
pop
pusha
out
inc
xor
jne
addr16
ljmp
adc
in
ret
and
sbbl
fildll
mov
xchg
scas
lahf
rcrl
out
push
mov
insb
pushf
arpl
jl
clc
mov
daa
popa
mov
ljmp
pop
mov
mov
dec
notl
repz
and
mov
outsb
movsl
fmul
dec
xchg
pop
mov
sahf
mov
mul
xor
push
fdivs
sti
bound
aad
jbe
mov
call
hlt
rolb
xor
lods
sbb
mov
and
pop
scas
test
xchg
xor
pop
je
jno
mov
dec
negl
test
imul
scas
inc
adc
fbld
cmp
cmpsb
mov
jecxz
nop
rcl
push
mov
lea
xchg
push
loopne
sbb
adc
nop
mov
roll
mov
cltd
data16
in
in
pmuludq
sbb
sbb
inc
scas
jg
xchg
sbb
mov
mov
or
pop
adc
shrb
aaa
xlat
fs
fcmovbe
fmuls
leave
cmc
or
add
es
stos
adc
ljmp
jge
aam
adc
aas
push
subl
insl
inc
cmp
inc
in
adc
cli
out
lahf
xchg
or
sub
inc
jecxz
repz
mov
out
push
loop
or
andb
inc
pop
rcll
push
ret
std
jmp
repz
ret
fcomip
cld
jno
dec
call
mov
and
fldl
dec
sub
push
xchg
pop
lahf
pushf
call
adc
inc
pop
pop
incl
jo
pop
xchg
mov
sub
dec
add
fsubs
out
cmp
adc
cmp
dec
or
mov
add
mov
and
lock
push
mov
test
xor
mov
sub
fidivl
cmp
or
add
dec
push
sarl
daa
pop
sub
and
ja
pop
ljmp
sbb
lcall
inc
movsb
jg
fmull
xor
inc
jle
cld
je
cwtl
add
cmp
pushf
loope
inc
cmpl
or
ljmp
jbe
ss
scas
mov
jl
nop
loope
add
jecxz
mov
mov
divl
cld
mov
adc
fwait
cmpsl
pop
fiaddl
and
movsl
jge
arpl
sti
leave
pushf
mov
or
xor
out
lcall
cld
movsb
loop
clc
xor
cmp
jnp
neg
fwait
ds
js
lods
fwait
adc
adc
cmp
push
fldt
ss
mov
and
outsb
dec
jle
or
xor
and
push
pushf
mov
or
cmp
and
daa
aam
sti
insl
int3
xor
aas
popaw
inc
add
xor
sbb
daa
jb
aas
dec
and
pushf
daa
sub
jbe
dec
xor
sbb
lret
or
aaa
mov
cmp
sub
cs
xchg
add
mov
ljmp
mov
push
divl
popf
in
jb
and
aaa
out
mov
enter
jns
fs
cmpsl
div
sbb
mov
xchg
xor
rorb
sahf
mov
popa
pop
mov
jnp
and
cld
jle
lea
test
push
or
inc
pop
push
loopne
or
sub
add
das
mov
pusha
cmpsb
stos
fs
dec
push
push
pop
push
mov
fsubr
mov
and
jbe
pushf
imul
test
shlb
inc
add
and
mov
xor
sbbl
jo
mulb
rcll
mov
jb
cld
repnz
js
insl
enter
ds
insb
mov
movsl
enter
test
sbb
pushl
inc
incb
add
ss
fisttpll
cmpsl
fildl
jle
push
cmp
mov
push
or
repnz
add
push
cltd
mov
ds
bnd
loopne
dec
sbb
dec
add
adc
lret
add
pop
cmp
les
lods
lods
dec
pop
test
cltd
outsl
out
dec
or
out
mov
scas
pop
test
xor
aam
mov
inc
pop
and
dec
dec
insl
jb
mov
dec
hlt
scas
cli
jo
aaa
xor
insl
push
cmc
ljmp
out
mov
sub
mov
jg
sbb
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
xchg
mov
adc
and
cmpsl
or
fs
sub
push
popf
test
xor
pop
cmp
pop
js
add
add
sar
arpl
loope
jnp
scas
clc
ret
jne
insl
xor
lret
cli
sub
mov
and
xchg
mov
pop
sub
into
enter
xchg
cld
cmp
std
mov
pop
insb
xchg
movsb
arpl
add
add
movsb
pop
sbb
ja
add
push
int3
jne
test
jg
ret
xchg
aad
pop
sbb
xchg
repz
add
adc
iret
sbb
adc
add
aaa
pop
mov
enter
adc
mov
mov
sub
mov
jae
popf
insl
je
ds
xor
xchg
mov
sub
call
push
les
repnz
iret
bound
sub
imul
push
in
sbb
dec
pushf
or
pop
mov
push
jo
jmp
xchg
jnp
xchg
pop
test
or
and
sub
push
dec
sbb
xlat
mov
xchg
jg
xor
nop
jo
leave
jbe
push
imul
lret
pop
push
into
hlt
test
xchg
hlt
aad
xlat
sbb
aas
clc
sub
mov
pop
ret
jg
push
mov
outsb
xorb
dec
push
cmp
jecxz
ds
mov
rorb
pop
fwait
inc
push
fldl
sub
pop
scas
fnstenv
dec
or
or
push
je
rorl
test
mov
sbbl
cmpsb
movsb
scas
push
lock
out
cmp
and
imul
leave
cltd
push
loopne
mov
fistpl
cmc
test
je
push
dec
ja
push
push
data16
mov
jnp
test
cwtl
cs
outsl
lret
test
je
jmp
push
hlt
push
repz
cmpb
sub
cmp
cmpsl
push
jle
pusha
mov
mov
sub
adc
or
gs
stos
scas
out
jecxz
out
dec
jne
outsl
jae
push
push
stos
arpl
hlt
roll
sub
insl
dec
dec
jbe
sub
push
test
data16
xlat
or
dec
adc
shll
js
mov
mov
lock
dec
out
cwtl
mov
fbstp
std
stos
loope
daa
mov
call
xor
inc
add
shll
or
and
adc
cmp
test
cld
lret
rorb
mov
mov
or
adc
jae
lock
hlt
popf
ror
inc
add
js
sub
mov
sbb
adc
iret
std
sbb
scas
dec
xchg
push
push
and
test
jecxz
xlat
fstps
dec
outsl
jae
imul
addr16
insl
popa
cmp
mov
mov
hlt
lds
addr16
aaa
jp
pusha
sbb
adc
inc
sbb
dec
lret
jle
mov
mov
or
in
enter
testl
pop
imul
jge
inc
test
push
mov
fwait
inc
and
push
mov
xchg
xor
enter
sbbl
cmp
roll
mov
push
dec
sbb
in
jnp
jp
sub
ret
rcrl
push
int
push
and
mov
pop
imul
in
idiv
jmp
jbe
mov
inc
arpl
js
test
ds
mov
iret
mov
inc
test
mov
subb
sbb
aaa
imul
jg
jmp
test
cli
out
daa
popa
lods
push
jp
test
cwtl
mov
mov
enter
insl
dec
xlat
fsubs
push
es
pop
and
out
mov
pop
xchg
xchg
xchg
mov
fsub
loop
clc
add
lods
into
int
stos
fiadds
inc
out
push
outsl
and
dec
cmc
or
mov
push
and
lret
cmp
mov
pop
push
roll
sub
fisttps
mov
out
aas
cmpsl
push
call
subb
mull
mov
adc
dec
xchg
lahf
inc
lea
mov
mov
sub
repnz
xchg
cmpsb
mov
inc
dec
insb
stos
xchg
test
and
popf
arpl
mov
dec
mov
push
add
jo
lahf
loope
mov
lods
mov
in
mov
adc
jnp
push
adc
loop
popa
sub
fcoml
push
push
imul
aaa
or
inc
xlat
xor
cwtl
testb
insl
imul
les
stc
jle
fs
js
stos
arpl
pushf
dec
mov
insb
pop
pop
cwtl
inc
add
test
mov
adc
stos
lods
mov
mov
std
fwait
daa
jbe
mov
sarb
xchg
addr16
or
fistpll
loop
pusha
add
fildll
mov
dec
or
add
mov
add
fs
test
or
or
xchg
xor
pusha
aaa
mov
sub
test
ss
clc
push
jmp
push
add
test
adc
stc
ds
shrl
in
mov
mov
push
sbb
dec
stos
lds
lahf
adc
or
rclb
add
iret
dec
fsubl
mov
test
movsl
mov
dec
loope
lods
mov
ss
mov
mov
iret
rorl
mov
imul
jne
dec
jmp
test
test
cs
sbb
lea
push
mov
es
das
fdivr
iret
mov
xchg
lods
inc
xchg
cli
fxch
bnd
lahf
dec
fstpt
mov
nop
js
sub
in
xchg
fmul
inc
leave
fimull
lcall
ja
push
inc
mov
dec
push
adc
jb
mov
cli
movsl
and
xor
sub
gs
lds
jbe
cltd
test
fimull
add
cmpl
push
mov
je
push
fisubl
gs
insl
test
adcl
inc
and
out
addl
mov
je
mov
fwait
dec
mov
xor
mov
pop
mov
add
aad
ret
jmp
push
repz
clc
cmp
cli
dec
lock
mov
inc
pop
ljmp
xchg
bound
xchg
loop
cmp
sub
sub
subl
xchg
aad
or
xor
cmc
enter
cmp
dec
lds
enter
shrl
pusha
outsl
jg
rcl
jge
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
cmp
xchg
pop
loop
adcl
mov
push
mov
pop
and
xchg
mov
pop
sbbb
fs
mov
jae
int3
sub
xchg
dec
push
scas
ljmp
and
fildl
cmpsl
mov
pop
cwtl
cmc
xchg
out
mov
mov
pop
inc
in
and
mov
or
imul
xchg
mov
mov
shl
int3
dec
mov
rorb
out
push
jae
jp
loope
fsts
xor
lret
lcall
cmp
in
cltd
arpl
ficompl
test
ljmp
inc
jle
inc
jnp
mov
cmp
lcall
inc
fcomps
sbb
cs
sbbb
stc
les
lahf
xchg
loopne
or
out
ror
pop
xor
sbb
out
aam
push
sub
aaa
mov
neg
mov
push
mov
push
test
lods
jg
test
inc
jecxz
push
mov
sbb
rclb
ds
sbb
mov
pop
in
stc
bound
sarl
fiaddl
fwait
xchg
popa
xor
aam
jo
jmp
das
lret
sbb
fildl
fcmovb
dec
dec
cmpsb
sbb
in
add
mov
mov
leave
rorb
push
push
xor
bnd
scas
cmpsl
or
pop
scas
jne
jno
add
inc
or
jl
or
fdivrs
aas
dec
mov
stos
ds
test
popf
jg
jbe
rcrb
sub
dec
jae
mov
xchg
andb
loop
jp
lds
sti
out
mov
fstps
shlb
call
pmaddwd
cli
out
xor
add
in
mov
ret
jae
cmp
insb
pusha
xchg
jmp
shll
movsl
mov
mov
frstor
int3
dec
jb
dec
jge
mov
aam
push
int
lock
lea
inc
shll
insb
repz
ss
sbb
sti
movsb
jmp
sbb
int
cli
and
or
cmovnp
pop
daa
filds
sahf
scas
nop
sbb
sahf
imul
sub
push
add
jb
arpl
or
cmp
insl
mov
jecxz
fadds
shrb
test
xor
test
and
pop
xlat
hlt
lock
push
rorb
loope
add
push
mov
jae
dec
je
fnstenv
popf
fidivrs
pop
adc
mov
sbb
push
ljmp
jl
inc
mov
pop
or
and
mov
aas
push
int
mov
push
repnz
cmp
xchg
loope
dec
in
inc
fldl
inc
inc
lret
inc
shrl
xor
cld
jmp
push
sbb
movsb
cmpsl
aam
or
mov
gs
add
repnz
dec
xor
enter
push
dec
scas
lret
repnz
shlb
adc
push
ret
jl
ljmp
push
shr
mov
add
popa
dec
mov
out
xchg
dec
jmp
and
mov
pop
shll
pop
insb
int
xchg
icebp
in
adc
popf
xor
mov
cmp
mov
je
pop
and
xchg
mov
inc
repnz
imul
xlat
ja
in
int3
xor
shrl
pop
jp
jge
iret
insb
dec
mov
aas
mov
aam
aam
mov
lods
sub
adc
fsubs
mov
iret
dec
cmpsl
fistpll
outsb
cli
shlb
scas
aas
adcl
stc
idivb
das
push
xchg
fdivs
aaa
push
dec
rcll
int3
push
cmpsl
call
dec
out
out
mov
jp
cmp
mov
add
jmp
clc
dec
js
mov
or
bound
aam
sub
test
mov
cmp
test
jecxz
jb
loop
int
loopne
jbe
je
subb
sbb
xor
jb
and
fldcw
in
push
xor
lret
loope
adc
inc
nop
xor
leave
or
sti
inc
mov
jecxz
mov
int3
jl
mov
repz
cwtl
mov
push
mov
push
popa
or
or
scas
cli
test
out
sbb
shlb
mov
mov
fmuls
rcrl
cmc
sahf
and
pop
push
push
or
out
cmc
pop
loope
sbb
jecxz
pop
mov
cmp
insb
pop
add
adc
fnclex
mov
cld
pop
aaa
insb
mov
rorl
xchg
ret
out
xor
out
aaa
aas
lods
mov
std
mov
lcall
imul
rorl
repnz
pushf
mov
mov
outsb
jmp
xchg
mov
fwait
lcall
in
inc
les
movsl
je
mull
int
repnz
cwtl
mov
fildl
or
int3
out
mov
movsb
insb
outsb
lcall
imulb
sbb
jp
cmp
data16
ffree
loope
mov
add
mov
out
fstl
inc
inc
hlt
js
sub
aad
std
lret
test
fmull
std
mov
out
ret
mov
push
pop
or
jg
pop
fwait
sbb
jle
lahf
jge
lds
pop
pop
call
ret
jne
das
pop
fadds
mov
shlb
add
xchg
jo
adc
xlat
sub
mov
cmc
jl
mov
les
int
lods
popa
xchg
popa
inc
je
mul
repnz
or
popa
push
loop
je
test
mov
sbbb
fsubl
pop
or
inc
ja
sbb
shll
fiadds
rorl
inc
xchg
mov
gs
pop
push
xchg
scas
lret
jno
ret
mov
stos
pop
adc
push
ret
in
icebp
das
clc
or
pop
sub
mov
inc
fucom
sbb
dec
or
ret
xchg
sbb
jge
mov
mov
pop
shrl
inc
adcb
xor
inc
inc
and
push
dec
inc
mov
xor
jno
shrl
push
inc
xchg
out
adc
xor
icebp
cmp
lods
jmp
add
push
xor
sahf
add
xor
cmp
imul
movsl
daa
adc
fcmovbe
repz
xor
sub
sbb
push
cmp
pop
sub
dec
push
mov
push
iret
mov
stos
push
mov
out
clc
cmc
clc
arpl
ss
xor
xor
in
test
shl
orl
cmp
pop
push
push
jmp
sbb
push
adc
xchg
int3
xchg
adc
and
cmc
lods
mov
cmpsb
push
into
and
adc
daa
xor
flds
idiv
shr
and
and
sub
push
cld
adc
pop
lea
cmp
xor
jl
in
xchg
decl
repz
cltd
stos
xor
push
lret
repz
xchg
sub
out
push
mov
inc
mov
pop
xor
lds
cli
daa
lods
jns
adc
es
xchg
das
add
or
test
rorl
andb
outsb
add
jbe
mov
pop
dec
int
icebp
testb
fwait
testl
xlat
scas
mov
add
movb
insl
stos
dec
or
ss
data16
mov
ljmp
adc
mov
pop
fdivl
cwtl
mov
fidivrs
lret
nop
xor
or
aaa
je
les
movsb
cmp
clc
mov
dec
or
fwait
std
test
test
mov
pop
xlat
gs
ds
clc
or
mov
sarl
mov
rcrl
scas
pop
fwait
sti
add
ja
jge
adc
cmp
push
fsubp
pop
jne
add
roll
jg
and
aad
rol
lcall
lock
xor
sbb
out
xchg
mov
adc
cmpb
and
mov
iret
test
je
loopne
adc
mov
rolb
cmpsl
fs
adc
lds
push
gs
cmpsb
inc
icebp
and
les
push
pop
pop
lret
add
pusha
mov
cs
add
ds
scas
cld
pushf
and
adc
cltd
aad
sub
mov
stos
xchg
add
jnp
sub
cmp
push
lret
ror
xchg
clc
adc
mov
pop
mov
je
lods
sbb
bound
mov
xor
cmp
pop
es
test
jg
add
out
rorl
call
jbe
es
outsl
out
lods
sbb
aam
xchg
xchg
dec
mov
stos
rcrb
xor
sub
lea
repz
lret
push
jl
loopne
popf
inc
insb
mov
mov
or
mov
or
xchg
pop
mov
call
push
aad
loopne
int
sbb
test
push
sub
inc
nop
sti
pop
mov
mov
pop
mov
inc
loopne
repz
or
imul
out
push
mov
popa
sahf
xor
dec
js
rcrl
fst
in
ljmp
pop
in
int
mov
jno
or
or
xchg
aas
sub
xchg
xchg
cld
pop
adc
and
inc
int3
and
pop
xor
pop
adc
dec
divl
xchg
xchg
pop
mov
stos
mov
hlt
sbb
adc
push
icebp
test
loopne
aad
inc
addl
sub
cmp
lret
inc
leave
xchg
loope
mov
add
addr16
sub
xchg
stos
inc
cmp
pop
cld
ret
jns
inc
int3
dec
dec
inc
adc
imul
shlb
inc
mov
std
ret
pop
loopne
push
mov
push
enter
int3
cld
push
mov
mov
mov
lods
push
xchg
sbb
pop
lds
mov
mov
and
xor
movl
push
shlb
shl
lcall
cmpsl
test
mov
jo
pusha
inc
das
mov
ret
mov
movsl
cmp
and
or
inc
xchg
mov
jb
jae
mov
xor
mov
sbb
outsl
and
lea
xchg
mov
fndisi(8087
push
faddl
mov
sarl
pop
pop
mov
fnstsw
mov
push
inc
push
or
fimull
xchg
cmpsb
xlat
call
inc
lret
inc
push
sub
mov
ja
xchg
dec
jge
jbe
ljmp
ss
xor
push
test
mov
jle
mov
js
pop
pop
xor
das
repnz
adc
pop
lds
and
cmp
xorl
cmc
xor
cmp
inc
sub
cmc
mov
bound
and
sbb
xchg
stc
inc
int
iret
xor
xchg
push
out
out
jb
xchg
into
jne
dec
pop
mov
in
shlb
cmp
adcl
dec
mov
jne
sub
out
xchg
fdivrs
lret
mov
mov
lods
aam
add
sub
xor
pop
adc
test
or
xchg
test
dec
stc
push
lock
lea
in
ljmp
out
and
sbb
mov
mov
int
in
insl
inc
out
or
push
sbb
cs
lret
aaa
add
sub
call
out
iret
insl
xchg
adc
cmp
push
rorl
inc
insl
jne
pop
push
mov
daa
ret
lcall
inc
pop
fstps
jmp
xlat
fbstp
xchg
lds
adc
and
lahf
scas
push
call
mov
mov
add
ljmp
movsl
adc
jbe
call
sbb
dec
jb
insl
mov
shl
push
cmp
clc
rcrl
inc
imul
lods
sub
jnp
jb
imul
push
andb
sub
mov
push
push
mov
cmp
push
fmull
cmp
clc
addl
pop
jg
add
cs
mov
das
ficoms
nop
int3
nop
popa
push
ds
mov
cltd
cld
outsb
lock
dec
cltd
arpl
pushf
in
divl
shlb
cmpsb
and
or
push
jbe
ljmp
pop
in
pushl
or
adc
mov
jge
pusha
push
inc
jnp
icebp
cmp
mov
aaa
jno
add
sub
cs
fdiv
add
add
or
sti
subb
lods
shll
stos
mov
repz
fs
sti
dec
pop
enter
aas
sar
inc
mov
imul
scas
and
aaa
dec
xor
popa
or
icebp
push
ljmp
iret
jnp
addr16
adc
popa
dec
jbe
and
ret
sub
and
js
stc
lods
lret
iret
xorb
bound
mov
rcll
xor
out
cs
xor
bound
mov
out
fstpt
xchg
lahf
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
rorb
xchg
jno
mov
jb
add
aam
into
mov
dec
fistpl
or
xor
xchg
push
stos
cwtl
out
dec
mov
xor
mov
sbbl
xchg
data16
pushf
loopne
jle
lock
mov
mov
bound
ja
adc
xor
fisubl
or
inc
dec
mov
mov
test
mov
inc
jae
push
jle
pop
cmp
int
xor
or
imul
std
or
push
mov
frstpm(287
or
flds
cmp
and
xchg
pop
insb
out
cltd
and
js,pt
lret
add
sti
mov
mov
pop
inc
mov
sub
mov
movsl
jbe
gs
mov
mov
lahf
push
sub
mov
push
add
xor
and
popf
push
fimuls
and
fistpl
adcl
push
cmpsl
stos
push
jno
dec
shl
dec
stc
and
je
inc
addr16
jecxz
sub
xlat
push
ret
mov
xchg
mov
or
test
nop
xor
mov
fadd
imulb
dec
add
lods
shrb
push
lahf
lods
and
das
ja
or
call
sti
mov
and
aaa
mov
mov
xor
pop
ljmp
mov
es
ds
loope
push
sub
jle
adc
mov
add
mov
jmp
cmp
movl
jno
adc
arpl
cs
sub
jb
jl
xchg
jno
mov
repz
xchg
jg
lret
sti
and
mov
fnstenv
xlat
insl
sbb
mov
push
dec
push
xor
movsl
push
icebp
dec
pop
mov
in
das
sar
hlt
mov
mov
lret
es
iret
repnz
pop
popa
lret
sbb
push
sub
test
fs
fstpt
pop
mov
sahf
cli
push
xchg
popa
aas
cld
pop
or
and
cmc
loop
or
cmp
xlat
jns
cmpsb
pop
mov
ljmp
sar
adc
sti
aad
add
leave
inc
and
adc
repnz
adc
outsb
fnstcw
mov
push
popl
dec
push
test
insl
xchg
inc
fisubrs
nop
fdiv
cmp
cmp
shrb
ficompl
mov
iret
test
lret
cmp
test
push
in
imul
fxch
mov
xor
push
or
mov
push
loope
xor
mov
lock
xor
andl
add
jmp
adc
xchg
xchg
mov
push
mov
aad
mov
inc
sbb
jmp
adc
lahf
or
in
pushaw
in
lea
aam
add
push
adc
pop
sbb
popf
jae
push
lea
fxch
push
js
fs
jecxz
jecxz
decl
mov
xchg
or
or
stc
jno
scas
or
and
inc
das
push
loop
sbb
jne
or
mov
push
jmp
call
movsl
bound
adcl
sub
jp
mov
pop
out
aad
aam
mov
fwait
cmpsl
bound
mov
dec
std
jle
cmp
xchg
or
xor
mov
es
add
cmc
lret
inc
cs
out
push
dec
xor
es
adcb
rcll
mov
push
cs
mov
stc
fsubrs
dec
dec
test
leave
ret
and
arpl
push
jl
pop
inc
inc
and
dec
iret
test
push
mov
xor
add
aaa
cmp
into
scas
and
xchg
cwtl
lock
clc
push
pushf
jl
jnp,pt
xor
or
sub
dec
loopne
scas
cmpsb
add
xor
jp
mov
mov
xor
loopne
mov
and
mov
xchg
dec
aad
cmc
iret
in
dec
lods
mov
hlt
jl
dec
pop
push
inc
int3
or
stos
pop
cmc
inc
popa
rcl
into
inc
jmp
aas
negl
dec
mov
xlat
cmp
mov
mov
inc
out
repnz
lea
enter
pop
mov
xchg
push
jbe
lods
stc
mull
add
repz
scas
std
cld
je
add
sub
mov
jne
pop
pop
movsl
mov
inc
fsub
jle
rcll
or
or
sub
xor
cs
aad
shr
lds
mov
in
jp
fsts
pop
sub
fstl
and
and
cmp
dec
sub
pop
inc
mov
add
dec
sbb
nop
push
stos
repz
cmpsb
sti
out
cmp
mov
push
push
push
push
inc
jl
jbe
xor
cs
ljmp
pop
pop
loopne
scas
push
fwait
rcr
out
xor
int
ds
js
cmp
jno
rorl
test
clc
dec
xor
sub
pop
dec
sub
sub
outsb
sbb
cmpsl
insb
sub
fdivl
inc
jmp
sub
mov
shld
cmpb
sub
pop
insb
adc
add
push
cmp
push
and
lcall
sub
adc
jo
rcrb
bound
xor
les
xchg
inc
xlat
fbstp
stc
int
pop
pop
add
cmp
ret
out
xchg
inc
lret
xchg
jne
cs
fs
maskmovq
notl
sahf
or
adc
xlat
insl
dec
mov
or
enter
pop
shl
or
adc
loope
cmpsl
sbb
mov
jnp
jb,pt
and
out
mov
out
push
cmpsl
loopne
adc
and
adc
dec
xorl
adc
push
push
inc
fistpll
and
jge
repnz
aas
mov
ljmp
mov
les
sbb
cld
mov
xchg
mov
fimuls
pop
insb
dec
testl
hlt
pop
test
icebp
sbb
imul
or
mov
and
scas
sub
hlt
cs
pop
xchg
pop
ss
jg
cmp
es
mov
and
dec
dec
cmp
xor
mov
inc
cwtl
xchg
mov
cli
cld
test
outsl
inc
jl
sarb
out
imul
mov
mov
dec
adc
sub
jnp
dec
cmpsl
out
push
mov
push
add
xlat
jl
sbb
pop
mov
adc
aaa
jmp
cmp
lret
dec
push
scas
stos
pop
sti
and
mov
adc
dec
mov
ja
adc
mov
daa
mov
lret
outsl
mov
testl
dec
jo
das
addr16
scas
inc
int
or
sub
sub
sbb
loop
dec
call
sarb
xchg
push
cs
pop
cmp
aad
jp
xchg
pop
add
and
out
inc
test
outsb
nop
pop
mov
je
incl
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
data16
addl
or
shll
fwait
push
fs
jle
mov
adc
data16
test
clc
pop
sub
repnz
and
sub
lods
sub
and
inc
dec
popf
daa
outsl
jno
fs
mov
or
ficompl
adc
pmulhuw
fwait
inc
sbb
jns
xor
and
fldt
sbb
sub
and
sub
je
popf
mov
mov
cli
pop
pop
sub
push
xor
lods
cmp
mov
and
pusha
xor
and
add
std
jb
arpl
sub
lret
sbb
xlat
bound
xchg
sub
test
jecxz
push
ja
adc
inc
ret
icebp
push
inc
addr16
jno
fwait
nop
push
add
xor
fsubl
pop
orl
lahf
icebp
pop
aam
in
in
enter
ljmp
add
inc
es
add
add
inc
sub
outsb
add
mov
pop
or
jne
arpl
sbb
sub
adc
xchg
xchg
push
xchg
call
jns
lahf
adc
sub
mov
clc
cltd
and
sahf
ss
enter
rclb
and
movsl
test
dec
cmpsl
mov
lret
cmp
icebp
in
sarb
adc
adc
and
test
add
mov
sbbb
dec
ret
and
mov
or
jbe
jg
sub
jmp
les
mov
xor
and
add
or
inc
cwtl
mov
loopne
in
xor
movsl
push
pop
and
movsl
jg
data16
jae
je
out
test
cmp
popa
push
sbb
dec
out
stos
in
in
dec
stos
fstps
out
jp
xor
cli
mov
pop
push
or
jns
hlt
ja
and
mov
out
in
sbb
xlat
sub
mov
adc
scas
push
xlat
mov
pop
mov
sbb
xor
inc
ret
nop
cld
pop
fsubrl
les
xor
adcl
mov
pop
dec
pop
and
add
std
sub
out
ret
lods
shrb
inc
psubd
pop
ja
xlat
in
xor
repnz
stc
sarl
aas
leave
sub
xor
fstl
jecxz
cltd
push
and
jnp
add
aaa
scas
xchg
insl
call
mov
test
jge
sahf
mov
stos
jbe
xchg
or
je
cld
lds
shl
test
lcall
cmc
sub
inc
repz
shll
in
pop
pop
push
cli
push
mov
ret
loop
mov
clc
ljmp
cmpsl
ljmp
xchg
insb
or
leave
ret
pop
add
aaa
mov
ss
push
cmpsb
add
pop
lods
cmp
pusha
jg
push
adc
or
out
cmp
in
lret
add
sbb
imul
hlt
inc
push
aam
cmpsb
jbe
xor
xor
inc
sub
mov
push
addb
and
dec
mov
insl
fwait
ret
cmp
lds
cwtl
jbe
sub
pusha
data16
lock
jno
lahf
in
add
idivl
sbb
in
outsb
lcall
mov
shlb
dec
fwait
adc
sbb
mov
ja
mov
xor
or
adc
xchg
sbb
jae
xor
out
or
adc
outsb
mov
scas
aam
push
je
in
xor
lods
add
out
fdivr
and
cld
xchg
xor
cmp
mov
mov
cmpl
andl
mov
mov
push
movsl
cmpsb
int
push
dec
int
mov
fst
leave
mov
xchg
pop
inc
imul
jo
jg
mov
push
mov
pop
mov
push
xchg
xorl
or
mov
jecxz
scas
push
and
shlb
mov
dec
test
loope
mov
add
adc
repz
fistps
push
test
imulb
ja
sbb
in
xchg
pop
flds
pop
or
arpl
jne
or
lcall
pop
invd
jae
pop
popl
test
shrl
int
flds
xor
loopne
iret
stos
fistl
dec
dec
mov
hlt
pushf
or
cmpsl
dec
lea
inc
push
fstl
cmp
popa
push
cmp
ds
pushf
aam
adc
jo
pop
pop
mov
inc
push
mov
or
jbe
fsts
imul
sahf
dec
stos
mov
repnz
addl
push
inc
cmp
cli
jns,pn
out
and
out
int3
mov
int
adc
and
cmp
in
sub
mov
dec
into
imul
shl
xchg
stos
sbb
push
fs
stos
pop
jp
lahf
rclb
push
mov
pop
pop
mov
aaa
test
mov
ret
dec
std
mov
stc
mov
push
int
push
inc
mov
imul
mov
adc
sbb
shll
xchg
cltd
movsb
add
xchg
mov
cmc
js
inc
jbe
mov
test
repz
ret
or
and
inc
adc
adc
push
jp
jecxz
or
cmpsl
lds
push
xchg
out
clc
push
ljmp
mov
out
add
repz
out
mov
dec
enter
sub
mov
sbb
dec
or
push
aaa
jnp
cmpl
push
cltd
jl
ds
add
xor
dec
testb
test
sub
ds
scas
je
push
jmp
xor
inc
lods
les
push
in
mov
aad
subl
fsubr
inc
enter
and
mov
daa
jne
aas
imul
scas
inc
adc
sub
inc
mov
movswl
mov
cld
cmp
fnstsw
mov
jne
ljmp
mov
aas
stc
fs
mov
jae
sub
mov
dec
out
iret
mov
fdivrs
orl
dec
cmp
xor
jns
sahf
add
cld
adc
jo
sub
jmp
mov
push
push
out
mov
aad
aas
ret
ret
jecxz
xchg
arpl
mov
push
inc
pop
xchg
push
pop
and
pop
andl
mov
jmp
mov
imul
mov
push
sbb
arpl
stc
adc
das
out
out
inc
cmp
cmpb
out
push
dec
add
and
jbe
cmc
mov
mov
mov
sbb
shl
aaa
daa
mov
sub
rol
out
cmc
push
pop
xor
das
out
fisubrs
call
sti
pop
xor
dec
and
pop
aad
or
dec
aam
fiaddl
je
pop
pop
cmp
lea
xadd
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
lods
out
mov
adc
addl
pop
adc
cli
pop
dec
sti
ss
jb
mov
test
push
mov
loope
inc
bound
orl
outsl
nop
ret
add
addr16
into
xlat
out
inc
shlb
les
mov
loope
jp
mov
mov
rolb
fs
enter
fdivrs
cmp
push
lock
cmpl
scas
push
lock
xchg
jmp
ds
leave
pop
adcl
sbb
push
sbb
jns
repz
mov
xor
shll
lcall
insl
lods
and
inc
push
stos
aas
outsl
out
sahf
aam
push
lock
pop
sub
mov
jnp
fsts
jle
aam
popa
pop
imul
jns
test
xchg
rcll
flds
aas
fwait
outsl
push
ds
or
inc
fisttpl
gs
pop
push
mov
and
xlat
out
shr
and
decl
jecxz
scas
mov
dec
push
mov
dec
dec
icebp
push
out
cmpsb
sub
and
ja
lahf
stos
gs
jg
nop
adc
test
movsb
jecxz
sub
scas
push
ret
jns
shlb
pop
push
sbb
xlat
mov
push
mov
sahf
nop
push
idivb
sbb
pop
shrl
inc
jno
push
xchg
ja
cli
stos
fcom
xchg
arpl
mov
hlt
pop
push
inc
js
cmpsl
imul
or
add
or
xchg
jmp
sbb
ljmp
int3
mov
pushf
jae
mov
stos
imul
mov
mov
sub
jb
mov
ss
js
sub
ret
push
inc
sub
dec
jp
shrb
push
xor
loopne
daa
fsubrs
mov
daa
insl
mov
lds
sahf
sbb
sub
jmp
mov
push
mov
or
pop
int
in
dec
sub
int
adc
fmul
inc
lret
add
ret
dec
pop
add
xchg
cmp
mov
pop
lret
int
or
and
hlt
repnz
mov
xchg
inc
stos
add
pop
jge
dec
mul
pushf
pusha
jae
cmp
mov
and
jno
subl
push
mov
out
push
in
push
mov
xor
jge
add
movsb
push
repz
lds
lret
lods
aas
popa
sub
push
out
ficomps
sub
popf
mov
adc
dec
push
mov
add
jmp
addr16
ret
fldt
adc
inc
xor
cwtl
xor
fisubs
ss
repz
xor
mov
fcom
test
xor
xor
mov
pop
shl
lock
out
in
mov
ja
mov
faddl
inc
pop
fdivs
cwtl
and
xor
and
lods
xchg
ret
sti
mov
sub
popf
sti
loop
cmp
mov
mov
xor
or
cmp
mov
dec
dec
lahf
enter
loope
cltd
ss
mov
pop
data16
xor
cltd
push
jo
adc
gs
fistl
popa
lret
lods
cmp
aam
int
mov
push
dec
sti
leave
push
js
xchg
or
xchg
cmp
seto
push
lods
sub
mov
jnp
adc
outsl
mov
bound
mov
mov
rol
das
nop
cmc
scas
mov
sbbb
mov
xchg
movsl
pushf
movsb
scas
loopne
fbstp
movsb
nop
ret
rorb
cwtl
sahf
shrb
insl
repz
gs
mov
push
adc
int
fcoms
fistl
adc
jbe
mov
push
popa
sbb
in
pop
xor
push
cltd
or
inc
xchg
outsb
fisubrl
les
adcl
or
pop
pushf
mov
mov
enter
push
mov
inc
push
xchg
imul
sbb
pop
jbe
sbb
les
out
mov
mov
cmp
sub
mov
lcall
fs
or
sub
push
and
das
mov
std
ds
jns
test
cmp
jae
pop
inc
rcrl
push
je
out
inc
xchg
subb
scas
sub
jnp
cmp
out
mov
xor
test
adc
jmp
lods
push
xchg
xor
dec
popf
aad
popa
cmc
adc
sbb
imul
push
pop
xchg
jo
xorb
roll
add
roll
loopne
fcoms
cltd
add
ret
into
dec
mov
js
repz
popf
or
pop
jo
xchg
jmp
insb
lock
fistpl
aad
jbe
mov
mov
cmpsb
outsl
add
subb
jl
jg
jmp
xchg
cmp
mov
adc
addr16
add
jl
dec
add
jns
rcrb
testb
les
in
ret
mov
pop
cs
pushf
sbb
test
ja
ljmp
cmc
repnz
nop
ds
test
ret
in
or
lea
or
cmp
dec
scas
inc
repz
sbbb
pusha
pop
sbb
ja
stos
sarb
dec
push
adc
js
ljmp
sar
push
adc
sbb
or
pop
jbe
nop
cmc
push
sbb
mov
dec
lcall
jno
inc
mov
rorl
mull
xor
subb
bound
cmp
xchg
arpl
cmp
fcom
sbb
add
add
mov
cmp
push
sub
push
inc
dec
ret
icebp
aam
repnz
loope
clts
loope
and
adc
loope
lods
cs
xchg
es
dec
and
xor
or
lea
sbb
jg
mov
sahf
cmp
mov
shlb
iret
mov
notb
dec
rorb
dec
scas
inc
inc
or
add
dec
nop
test
lret
leave
out
std
fwait
push
xchg
jne
hlt
xor
enter
xor
leave
aaa
inc
xor
daa
fistl
adc
out
mov
push
lods
sbb
mov
mov
out
fld
dec
xchg
rcr
psraw
cmp
xchg
movsb
loope
xchg
and
aad
jle
xchg
popf
leave
idivl
push
dec
test
movsl
mov
imul
add
inc
xchg
je
and
push
iret
ljmp
cmp
and
fstps
cmpsl
fldl
and
fs
or
nop
add
bound
mov
jl
pop
stos
pop
pop
repz
rcr
cmp
jnp
cld
push
int
mov
adc
jns
push
in
inc
xor
mov
jnp
inc
or
testb
xchg
repz
jp
ja
sub
xchg
in
pop
cmc
cmp
popl
movsl
leave
push
mov
es
sbb
jnp
dec
cmp
scas
es
negb
mov
mov
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
call
adc
addl
push
mov
dec
test
lods
test
jl
push
sub
push
mov
cli
ja
rcll
sbb
lea
enter
dec
je
xor
scas
pusha
push
es
dec
jle
test
rol
add
mov
outsl
mov
or
ficoml
jo
add
xchg
jbe
and
and
jns
icebp
xorl
pop
cmp
push
lds
dec
xorb
loop
lret
rcr
jmp
shrl
xchg
xchg
mulps
push
push
repz
lret
aas
pop
fs
xor
imul
sub
jbe
pushf
xchg
jg
pop
cmpsb
jns
and
cmp
sub
and
mov
mov
pop
ret
and
xchg
subb
xor
xchg
cmp
lock
adc
xor
mov
fisubrs
insb
clc
adc
int3
mov
cmp
repnz
dec
iret
mov
fidivs
rcl
mov
mov
loop
push
sub
cs
ds
push
outsb
jne
push
sbb
pop
or
stos
add
insb
sbb
loope
outsl
sub
bound
push
xor
pop
or
daa
mov
repz
xor
les
xor
xlat
add
icebp
cmp
mov
je
push
pop
mov
xor
add
call
ficomps
loopne
aas
mov
cmp
adc
push
push
cmc
rcr
pop
mov
adc
out
sbbl
ret
push
and
call
fwait
loopne
mov
jbe
scas
mov
xor
in
insl
pop
outsl
movsl
cli
push
std
adc
clc
pop
mov
sbb
in
sub
loop
movsb
add
or
dec
and
pusha
leave
imul
xchg
cmp
lock
leave
out
jne
or
push
sbbl
pop
pop
push
adcb
mov
mov
mov
and
movsl
incl
inc
mov
jl
je
or
cmp
subl
add
push
mov
lea
xchg
jg
adc
jecxz
adc
sbb
cmp
sbb
int3
adc
inc
push
aam
jb
stos
fiaddl
popa
shlb
inc
jecxz,pt
loopne
and
sub
push
lds
ror
lcall
jno
scas
dec
push
sbb
sbb
inc
adc
adcb
inc
mov
inc
pop
jnp
les
cmpsl
in
fcoml
dec
xchg
icebp
loope
inc
jno
mov
adc
mov
decl
shrl
sub
mov
gs
and
and
enter
loope
xchg
sub
mov
pop
ret
push
and
fsubl
cmp
movsb
push
add
push
clc
cmp
xlat
orl
jg
or
inc
cwtl
je
in
mov
enter
xlat
sub
jl
mov
cmp
inc
out
repnz
mov
into
sub
lods
push
inc
jecxz
inc
and
in
sub
test
push
inc
fisttps
xchg
and
aaa
mov
sarl
je
jno
push
je
stos
paddsw
sub
mov
popa
or
out
lods
jb
dec
mov
shrb
mov
sbb
bound
cmp
xor
fwait
mov
inc
xor
jmp
or
mov
ss
adc
add
cltd
fmuls
aas
xchg
ja
jecxz
push
ds
je
jae
cmp
leave
mov
leave
std
mov
lods
out
xor
jo
lods
icebp
ficomps
pushf
cmp
add
scas
lea
daa
dec
loopne
cmp
xor
vpmaxsw
fdivl
and
lcall
pop
cltd
daa
cmpsl
out
inc
sti
ja
aam
lods
repnz
ss
aas
fcomps
push
cmp
int3
int
lcall
stos
test
mov
xor
movsl
xchg
jbe
push
sbb
lahf
and
jb
and
test
and
shlb
and
loope
fs
cmp
sub
adc
repz
inc
mov
push
push
ud1
hlt
add
sub
popf
pop
jge
cli
xchg
iret
inc
jne
das
sarl
xchg
jp
nop
fcomps
adc
push
rcr
aas
roll
mov
jecxz
mov
dec
lods
push
sbb
lcall
sub
xor
fwait
push
lods
out
push
jb
jl
xor
mov
or
aas
sbb
lahf
out
mov
out
addr16
or
mov
and
sbb
and
adc
ljmpw
aad
mov
gs
jle
jg
mov
ljmp
dec
inc
repnz
inc
lret
and
sbb
cmp
push
dec
scas
aas
fwait
or
xchg
fcomip
pop
lret
sbb
pop
inc
into
int
stos
out
insl
scas
dec
andb
ja
sub
pop
dec
lahf
dec
int
aam
push
mov
adc
sbb
cmp
rol
dec
insb
int3
jne
push
mov
lahf
mov
xorw
pushf
daa
push
out
sub
lods
aas
pop
xor
rcll
testb
fadd
cmpsl
mov
sti
dec
inc
adc
jns
jno
xchg
add
lret
movsl
and
rorl
sub
lahf
xlat
out
repnz
inc
pop
push
mov
or
sbb
lret
jl
mov
bound
add
ds
aam
xchg
pop
sbbb
iret
jnp
mov
and
addr16
push
shll
lock
mov
mov
das
das
jae
mov
fsubrs
cmpsb
cmp
adc
or
or
sbb
fdivl
stos
in
cld
aam
jp
in
xchg
push
sub
sub
push
lahf
js
or
xchg
gs
imul
mov
scas
aaa
mov
dec
dec
jne
ja
or
and
lahf
pop
ljmp
or
and
fnstsw
in
sti
popa
out
adc
fldcw
or
test
cmpl
jo
add
jbe
mov
clc
jg
or
push
push
cmp
jno
lahf
movsb
ss
std
mov
push
test
pop
push
pop
sub
repz
iret
je
cli
scas
sahf
mov
loope
loopne
orl
jnp
or
inc
xor
push
test
push
mov
fldl2t
rcrb
sbbl
dec
lcall
fcoml
test
and
lret
xor
xor
dec
xor
jg
nop
out
in
ja
jg
cmp
outsl
mov
pushf
cli
aaa
xchg
mov
std
fisubrl
lret
dec
dec
pop
stos
mov
lea
movl
fisubl
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
dec
jb
movsb
enter
or
pushf
mov
sbb
fsubr
cmpsb
mov
xchg
int3
lahf
mov
xor
cmp
pop
std
int
call
sbb
jl
push
jo
mov
int
addr16
inc
dec
dec
and
mov
or
mov
push
push
inc
imul
mov
pop
movhlps
xor
inc
jbe
or
sbb
inc
push
adc
mov
pop
lcall
rcl
and
inc
mov
mov
add
std
inc
jecxz
push
call
pop
or
cmpb
jae
cmpsb
jb
leave
push
cli
in
and
dec
cmp
xchg
pop
out
xor
adc
sub
mov
cmp
imul
inc
aam
inc
lahf
push
cmp
jecxz
popf
rorb
shlb
lahf
dec
pop
iret
xchg
xor
cmp
sub
shll
mov
enter
add
push
rcll
int3
cmp
xor
test
xchg
add
mov
bound
out
rcll
addr16
mov
mov
out
push
sbb
nop
pop
mov
dec
jle
cmp
jb
and
xchg
movsl
out
mov
sub
pop
mov
lret
xchg
movsb
js
cmc
jge
xchg
and
mov
mov
pusha
imul
aas
sarl
mov
dec
outsb
dec
sub
imul
mov
hlt
add
test
enter
xlat
lock
pop
jge
inc
dec
mov
cmpsb
xchg
dec
cmp
fistl
std
aad
lock
imul
mov
xchg
ja
push
sbb
mov
inc
push
mov
mov
je
or
mov
ja
xor
pop
pop
push
or
pop
pop
sbb
test
push
test
mov
push
fisttps
fldl
mov
movsb
bound
repnz
cs
mov
push
xchg
mov
mov
cmp
imul
sub
aas
ret
adc
and
and
xchg
cmp
leave
add
or
lret
lods
mov
dec
xchg
test
popa
cmp
inc
cvtdq2ps
pop
xchg
stc
jno
or
clc
stos
mov
jne
jl
jmp
fsub
pop
mov
mov
or
xor
dec
es
out
mov
in
fwait
in
addr16
jge
mov
pop
test
mov
ljmp
pop
out
sub
out
in
push
aaa
xchg
add
fcmovnu
movsb
pop
repnz
mov
sbb
or
fsts
in
out
mov
mov
orb
or
call
out
pop
or
push
daa
mov
pusha
insb
imul
jo
fistl
mov
push
ss
mov
cli
push
push
xor
xor
test
pop
enter
insl
and
subb
pop
add
cmp
ret
lret
and
ja
inc
mov
ret
loope
and
mov
in
sbb
and
test
pop
mov
sub
leave
lret
mov
imul
mov
mov
icebp
mov
outsl
add
data16
out
repz
enter
notb
jecxz
outsb
sub
inc
shlb
mov
sbb
repz
sub
aas
adc
shrb
mov
xor
sub
test
aaa
ss
in
push
subl
jo
sbb
sbb
insb
adc
in
jae
sbb
lea
stos
xlat
pop
inc
push
mov
outsb
pop
les
js
add
fiadds
sahf
pop
xor
bound
jo
out
fwait
test
sbb
ret
jl
lret
mov
xchg
sub
xor
ret
scas
push
in
mov
push
add
sbb
mov
int3
mov
bswap
arpl
xchg
ljmp
cmp
adc
add
xor
fstpl
dec
mov
int3
ret
mov
xlat
enter
sbb
fcmovbe
lods
data16
push
mov
sbb
pop
dec
mov
mov
sti
add
pop
cld
mov
sar
sbb
shlb
in
sbb
xor
rorb
arpl
fcompl
pop
movb
cmpsl
inc
loop
cmpl
xor
xchg
inc
aaa
in
or
mov
int3
lret
or
and
pop
jecxz
movsl
mov
insb
rorl
cmp
mov
cmp
fxch
sub
cmp
loope
sbb
frstor
das
iret
mov
fsubrl
sub
xchg
ja
loop
sub
lock
adc
push
xchg
cltd
ret
stc
mov
or
sahf
cmp
aam
pusha
sbb
dec
fisttpl
add
mov
xor
pop
shrl
addr16
xor
ds
cli
loope
outsl
repnz
inc
shll
je
dec
adc
insl
and
cmpsl
mov
mov
outsb
pop
lds
push
sub
cmp
cmpl
sbb
add
mov
stos
pop
push
mov
ret
repnz
dec
in
sarl
fbld
hlt
mov
sbb
pop
insl
insl
shrl
shrb
mov
ret
jp
mov
test
int
mov
int
cmp
inc
sarl
loopne
orb
xchg
sbb
sub
or
jmp
in
test
sbbb
sbb
adc
mov
adc
mov
pop
add
bound
lahf
pop
cmpsb
sbb
decl
sbb
out
loope
imul
lods
push
std
and
cmp
mov
dec
and
fwait
add
in
shlb
xlat
cltd
and
testb
and
jno
cwtl
dec
mov
cmp
addb
fwait
orl
add
cmpsb
add
add
jno
sub
mov
ljmp
rorb
add
adc
orb
addb
mov
dec
xor
add
mov
add
jbe
xor
xchg
sti
mov
dec
jle
mov
adc
xchg
sbb
out
and
mov
pushf
pop
idivb
into
pop
xlat
fdivl
sbb
cs
std
push
dec
and
xchg
hlt
dec
jmp
cld
mov
das
jb
xchg
iret
inc
rcrb
mov
push
cmp
rcrl
idivb
inc
mov
loopne
int
cmp
xor
flds
outsb
popf
arpl
or
fcmovne
lcall
xchg
jne
aam
call
fisttpll
mov
pop
sbb
and
xchg
sub
jg
sahf
nop
adc
aaa
inc
fs
int3
pop
push
mov
sahf
sarb
int
mov
testl
dec
push
mov
inc
popa
mov
jle
pop
adcl
insl
icebp
cli
repz
les
jp
mov
fstps
enter
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
popf
xchg
xchg
xor
jno
idivb
xor
pusha
shlb
xor
mov
jle
mov
pop
mov
inc
clc
hlt
outsl
pushf
test
jo
daa
pop
push
mov
mov
push
push
push
popf
mov
ljmp
lods
xor
push
lahf
fbstp
mov
lods
sub
dec
xor
and
pop
mov
stos
push
push
test
sbb
je
inc
add
adc
dec
mov
xor
cmp
and
adc
mov
shll
xchg
add
cmp
aas
bound
add
mov
je
xchg
inc
divl
add
jl
dec
loope
add
add
inc
pop
cmp
sti
add
ret
xor
jo
mov
addr16
inc
arpl
aam
bound
xchg
pop
outsb
push
mov
negl
lahf
push
je
xchg
inc
std
inc
sub
pop
dec
dec
xor
add
addr16
inc
xor
mov
je
popa
sti
mov
push
sbbl
ror
pushf
sbb
in
lahf
mov
jge
ljmp
fwait
push
mov
insl
test
jp
mov
dec
mov
add
push
dec
mov
jg
es
cmp
jne
and
andb
inc
pop
test
loopne
pop
or
jo
xor
aaa
dec
insl
or
je
jg
push
scas
js
mov
repnz
in
inc
aas
adc
std
xor
ret
and
ljmp
xor
out
icebp
lock
pop
rorl
out
das
sub
push
mov
hlt
cmc
addr16
fs
mov
sub
and
ret
jp
cmc
mov
repnz
push
data16
movsb
mov
jbe
push
dec
jb
sbb
and
popf
xchg
lcall
dec
mov
inc
sahf
cmc
sahf
mov
pop
insb
mov
andb
push
or
scas
push
psubq
shrl
add
xchg
lret
ja
adc
filds
shll
push
inc
jl
or
jno
sarb
dec
iret
jg
aad
jno
mov
cmc
ds
add
out
push
loope
out
push
adc
push
push
dec
out
inc
sub
cld
sahf
sbb
cmp
mov
xor
pop
fnstcw
mov
inc
jg
imul
mov
insb
int
and
out
test
xchg
stos
bound
jecxz
insl
add
stc
xchg
rcll
loope
dec
scas
nop
adc
push
jbe
pop
pop
pop
sahf
adc
xor
out
dec
orb
iret
fnsave
dec
fnstcw
mov
imul
daa
iret
jnp
push
push
and
popf
orl
add
mov
fistps
fwait
inc
loope
movsl
mov
mov
out
dec
or
push
js
jns
pushf
orl
ja
pop
ljmp
pop
inc
cli
lods
inc
add
dec
lret
rcrb
jp
cli
jecxz
mov
shrb
xchg
jle
sbb
xchg
pop
pop
add
mov
mov
sbb
stc
loopne
test
jmp
and
sti
hlt
out
mov
filds
mov
ss
pop
pushf
inc
lods
lret
inc
jge
xlat
daa
lret
xchg
std
fsubrs
pop
jge
nop
rcrb
fmull
fsubs
xor
xchg
in
push
inc
push
adc
dec
sbb
jne
xor
cltd
jb
enter
push
mov
shrl
add
daa
jb
or
fdivs
aam
jnp
out
jb
inc
insl
lea
into
inc
or
push
ss
insb
sti
jnp
xchg
das
mov
test
cmpl
sbb
sti
inc
push
mov
mov
inc
loopne
or
pop
loopne
mov
jnp
pop
ror
push
inc
pop
bound
mov
rcll
cmp
ret
push
pop
negb
insb
cmp
or
cmp
hlt
xchg
inc
adc
inc
push
jns
ljmp
movsb
lock
pop
test
add
pop
or
push
pushl
fstpl
je
icebp
daa
inc
fnstenv
mov
mov
ds
mov
cs
and
ds
xor
push
mov
push
in
mov
mov
xchg
jecxz
or
cmp
jmp
and
push
mov
rcrl
popf
repnz
popa
iret
pop
mov
inc
and
adc
sti
repnz
push
jmp
dec
push
iret
rcl
dec
repnz
mov
xchg
or
mov
clc
leave
mov
fistps
jno
ss
pop
test
sub
pop
mov
mov
sub
xor
inc
bound
insb
lcall
xchg
subl
iret
out
xchg
sub
addr16
push
out
dec
insb
sub
sbb
adc
loop
sahf
movsl
and
add
dec
ljmp
push
inc
fbstp
fs
push
pop
aad
sbb
lret
add
icebp
sti
sahf
aas
xor
sbbb
xor
ret
xchg
mov
scas
das
sti
int3
dec
xor
aam
adc
cmc
mov
shlb
dec
mov
js
mov
insb
pushf
sbb
fldt
test
push
enter
mov
lds
cmp
pop
inc
push
loope
ja
icebp
xor
outsl
test
dec
inc
hlt
outsl
lret
adc
dec
addr16
fmuls
mov
adc
push
jno
sub
mov
jp
aad
add
fistl
dec
sete
mov
mov
fwait
roll
jle
mov
movsb
inc
push
cmp
stc
mov
dec
es
sti
inc
add
fdecstp
leave
pop
ja
cmp
inc
mov
std
test
mov
xor
icebp
xchg
mov
inc
dec
lods
aad
std
out
pop
scas
add
rcr
int
in
sti
arpl
ds
jmp
movsb
rcrb
push
lods
mov
pusha
dec
cmpsl
cmp
jnp
and
inc
xchg
icebp
cwtl
mov
testb
pop
nop
inc
imulb
ss
mov
mov
jge
jl
mov
loop
jge
jle
sti
fnsave
ds
fildl
idivb
les
aam
push
insb
xor
cmp
sahf
and
cwtl
and
insl
pop
push
or
ret
inc
ret
in
fwait
into
pop
sbb
in
sarb
lret
insb
push
aam
push
divb
and
pop
inc
mov
mov
inc
les
aam
push
sbb
sbb
dec
cwtl
popa
inc
cmpb
fxch
cmpb
mov
sbb
push
mov
or
sub
xchg
call
sub
push
cmc
fldenv
enter
sbb
scas
mov
cmpl
mov
push
push
pop
ss
or
xchg
bound
xchg
lea
push
stos
pushf
dec
lods
sahf
sti
iret
divl
rcr
mov
push
je
xlat
sub
inc
and
jg
arpl
stos
test
or
and
add
movl
add
call
inc
inc
add
inc
add
loope
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
popa
std
lahf
fidivs
loopne
lcall
movsb
enter
aam
sbb
xor
cmc
dec
pop
push
push
sub
lahf
mov
lock
mov
sbb
mov
mov
jmp
stos
pop
push
mov
data16
jl
iret
pushf
xchg
daa
stos
xor
es
jecxz
push
ds
in
mov
test
clc
inc
inc
fdivl
cmp
cmp
js
dec
and
adc
and
aas
xor
iret
arpl
jp
mov
sbb
mov
repnz
and
stos
pop
sbb
push
inc
icebp
add
xlat
in
cs
mov
inc
cwtl
xor
sbb
mov
xor
lret
lcall
push
mov
outsb
fsubrl
scas
hlt
cmpsb
in
and
je
sub
iret
stc
popf
outsl
pop
stc
sub
mov
dec
idivl
outsl
add
lods
xchg
pop
pavgb
push
arpl
mov
popa
sub
xchg
inc
xor
jmp
lret
fidivl
sub
pop
cmp
pop
xor
arpl
jecxz
lret
pop
xchg
fstps
cmp
push
or
rorb
xchg
add
jg
loope
fcom
push
fwait
or
push
sahf
decb
cmp
inc
dec
dec
dec
mov
insl
fdiv
cmp
lahf
push
jecxz
subl
push
pop
mov
in
repz
repz
mov
and
adc
pop
sbb
je
mov
jb
xor
add
mov
inc
adc
xor
pop
dec
jns
pop
fs
mov
mov
int3
and
cmpsl
js
mov
loopne,pn
sub
push
xor
fimull
or
fst
mov
popa
sbb
popf
insb
mov
es
addl
in
xor
sbb
jne
or
imul
cmp
fisttpl
movsb
ds
imul
xor
addl
xchg
test
adcl
data16
sbb
jbe
add
sbb
fcmovnb
ljmp
jbe
inc
leave
pop
lods
add
xchg
test
mov
fstpt
enter
aam
push
or
fs
mov
or
push
test
push
sub
movsb
syscall
and
mov
mov
mov
sub
sti
jb
jmp
lods
and
rcr
jns
scas
les
and
jae
dec
into
pop
mov
or
repz
pop
xchg
in
jmp
push
loope
mov
push
das
mov
cmp
scas
xchg
cmp
sbb
or
cs
adc
push
jnp
js
outsl
pop
xor
dec
fdivs
mov
loop
jp
pop
pop
xchg
mov
scas
divl
cmovns
fsubr
sbb
xor
idiv
add
out
mov
sub
pop
push
test
pop
fld1
cwtl
incl
xchg
cmc
std
mov
xchg
pop
out
xchg
int
call
arpl
jo
add
call
sahf
mov
fdivp
push
adc
outsb
push
push
inc
mov
scas
jns
cmp
cwtl
stos
sbb
insl
jne
push
insb
and
test
dec
mov
mov
loopne
shlb
jl
inc
rcrb
push
pop
mov
mov
inc
lret
sub
xchg
sub
inc
mov
mov
ret
or
add
fnstsw
into
jle
dec
push
push
mov
popa
fndisi(8087
cmp
mov
mov
fs
pusha
movl
enter
lcall
lret
xchg
add
jle
mov
mov
fsub
cli
lcall
sbb
or
fwait
mov
sub
enter
sbb
dec
pop
pop
imul
loop
inc
ss
popf
pop
sbb
loope
lret
cmp
jo
js
xchg
xor
dec
dec
adc
ficomps
je
push
testb
lcall
loopne
cmpsb
rorl
movups
divb
pop
mov
sti
push
in
out
insb
sbb
lock
cmp
cmp
pop
loop
in
sbb
mov
jno
inc
lock
jmp
xor
rcrl
mov
cmp
ret
out
sub
sbb
sub
rcll
mov
xor
fimuls
test
test
loop
std
and
call
pop
mov
xor
cmpsb
push
inc
sub
or
ljmp
jo
adc
fs
lds
jne
dec
mov
xor
pop
mov
or
lods
pushl
mov
in
out
mov
push
dec
mov
movsl
data16
inc
ss
outsl
sub
xor
sub
in
ja
test
mov
inc
adc
je
aaa
xor
sbb
mov
pushf
inc
pusha
mov
in
cmp
mov
adc
insl
cmp
push
xchg
xor
or
mov
lods
call
mov
shll
xchg
sbb
jmp
inc
inc
in
adc
xlat
mov
fcompl
inc
lret
inc
sbbl
pop
or
clc
add
int
mov
rol
push
out
lock
add
xchg
pop
pop
cs
out
xchg
pop
dec
sti
sbb
sub
pop
div
mov
rclb
out
sub
cwtl
add
xchg
sbb
mov
mov
fidivrs
mov
sbb
mov
pop
cmp
xor
imul
mov
and
aas
or
jle
fwait
into
mov
ljmp
adc
sub
jno
pop
add
inc
xor
push
sbbb
aas
adc
pop
add
dec
subb
jo
cld
and
leave
push
mov
jmp
shld
int
or
inc
int
cmp
mov
lcall
pop
push
addb
andb
push
mov
cmp
jle
aad
inc
inc
xchg
add
pop
hlt
cmpsb
push
bound
sbb
int3
bnd
lcall
mov
jg
sbb
push
iret
ret
lods
and
inc
jo
add
jp
adc
vfrczss
sbb
dec
cs
mov
mov
jbe
lods
pop
scas
fwait
es
dec
fwait
rorb
inc
push
int
sahf
sub
aas
enter
add
lret
xchg
add
nop
addl
out
or
push
ja
aam
push
insl
mov
outsb
dec
sbb
in
mov
cmpl
push
ret
xchg
lods
mov
popa
cmp
jmp
jg
push
rorl
jns
pop
ja
into
negl
push
mov
js
das
fmull
enter
add
or
inc
mov
andl
test
leave
xchg
movsl
cld
mov
ljmp
adc
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
and
adc
addl
adc
cwtl
jne
mov
cmp
test
xchg
lea
and
sarl
rcrb
mov
sahf
dec
sti
adc
es
cmp
sbb
cli
jno
xchg
or
out
sbb
scas
sbb
or
sub
adc
sbb
popa
addr16
jnp
pop
stc
or
inc
jmp
inc
movsb
insl
loopne
cwtl
std
dec
mov
int
jo
and
xor
adc
pop
clc
leave
pop
dec
pop
sti
jnp
xchg
das
insb
shlb
push
bound
and
sbb
mov
mov
int
mov
fldl
into
shrb
movsl
jno
rep
sbb
ljmp
mov
or
sbb
mov
gs
add
add
sahf
jbe
cmp
xor
lods
mov
adc
shlb
dec
inc
mov
mov
xchg
aad
pop
sub
jae
inc
aam
pop
mov
push
popa
scas
movsl
mov
fbstp
xor
adc
mov
xchg
in
and
daa
out
push
xor
es
push
shrb
test
movsb
rorb
adc
lret
fsts
out
lcall
mov
cmpl
fwait
push
mov
mov
and
inc
test
jnp
and
movsb
in
fxch
sarl
dec
mov
shr
add
inc
cmp
mov
mov
imul
jle
nop
pop
jno
lret
pop
in
pop
inc
jnp
bound
imul
or
inc
sbb
es
in
push
aaa
sbb
mov
scas
call
push
sahf
jmp
mov
dec
xlat
push
jg
add
clc
fistpl
add
fxam
hlt
mov
test
lods
in
testl
cs
stos
in
mov
cmp
lock
repnz
sub
fdivrs
cs
mov
stc
adc
popa
inc
into
or
js
popa
inc
pop
push
mov
jae
cli
lret
xor
clc
mov
pop
jne
sti
lock
dec
pop
mov
push
addb
pop
outsb
fsubrs
add
stos
sbb
outsb
cmp
dec
cmc
xor
push
ffree
push
idivb
push
xchg
sbb
cmpsl
sub
stos
xchg
sub
aaa
aas
xlat
inc
out
jl
and
icebp
pop
inc
cld
lret
int3
mov
hlt
pop
xlat
jo
sahf
inc
aaa
lcall
pop
and
mov
notl
lahf
popf
and
inc
cmc
sarl
negl
push
leave
repz
xchg
mov
cmpsb
fwait
push
fstpl
ljmp
shll
mov
popf
or
push
inc
fsts
cmp
shlb
mov
add
cmp
imul
add
mov
push
js
dec
or
push
fdivrs
add
sbb
pop
aas
dec
or
push
call
pop
rcrl
xchg
mov
rclb
and
jg
inc
push
pop
add
jb
cmpsb
sub
sbb
mov
scas
push
mov
cs
add
pop
push
dec
sbb
shlb
xchg
std
rol
negl
lods
jne
mov
sbb
lods
orl
and
cmp
dec
lods
mov
mov
jae
jns
push
test
jmp
movsl
push
pop
mov
xlat
pop
pop
test
xor
push
lea
dec
and
pop
dec
data16
sub
mov
fwait
subb
push
add
lret
push
pop
cmp
sub
ja
mov
addr16
push
fmuls
jge
push
nop
mov
pop
add
mov
mov
push
daa
imul
out
xor
lret
add
aam
xlat
sbb
xchg
repnz
cmp
stos
out
xor
pop
stos
pop
aas
stc
lds
data16
inc
add
leave
adc
cmc
mov
sbb
pop
mov
sbb
lods
xor
cmp
lret
sahf
mov
cmp
fcomp
jmp
loop
jmp
cmp
jb
jnp
dec
and
das
pop
or
inc
rcl
sub
push
jo
sbb
add
aam
and
test
ss
mov
jl
call
adc
sahf
insl
out
push
and
xchg
sbb
bound
sub
es
nop
hlt
scas
and
sbb
test
data16
popf
test
mov
mov
lcall
ficoml
aas
add
push
sub
lret
lret
shl
or
fucomip
jecxz
adc
pop
xor
xchg
dec
sbb
push
lds
fbstp
jg
cmpsl
jmp
pop
mov
cli
clc
adc
sbb
icebp
rorl
push
jle
and
cltd
mov
jmp
cmp
popf
pop
inc
add
sbb
nop
out
pop
gs
jbe
push
jmp
jno
fnstenv
adc
daa
dec
jecxz,pn
iret
cwtl
sti
ficompl
sub
incl
xchg
fiadds
inc
inc
shlb
or
and
add
pop
mov
pop
jmp
scas
add
fdivl
fimull
mov
in
pop
mov
popf
pop
andl
inc
lock
fs
jno
push
jae
mov
mov
popf
in
mov
int
sub
mov
lock
adc
adc
inc
lcall
fimull
lds
ds
cmp
adc
push
xor
int3
pushf
cmovp
in
jl
out
aaa
add
leave
mov
loope
dec
xor
inc
mov
push
sahf
movaps
adc
lahf
and
mov
mov
cli
push
mov
add
xchg
sub
sub
mov
push
jbe
ds
sbb
fwait
ret
inc
ljmp
adc
popf
out
aad
jl
imul
cld
out
cmpsl
xchg
sbb
sar
cmp
mov
shll
ja
leave
xchg
jl
push
jno
jae
jle
out
or
pop
xchg
mov
mov
add
sub
imul
push
bswap
es
pushf
sahf
movsb
ds
gs
xor
addr16
mov
dec
int3
aas
je
push
jmp
shrb
iret
js
dec
clc
lret
and
sbb
rclb
ljmp
adc
pushf
aam
or
lcall
rorl
push
inc
movsl
mov
push
lret
mov
sarb
mov
dec
ljmp
push
repz
inc
rcrl
and
and
sar
xchg
jmp
jo
lret
movsl
negb
lcall
bound
push
xor
enter
push
popf
mov
and
ja
adc
sub
xor
lea
push
lods
mov
aas
into
repz
push
and
cli
mov
sbb
cmp
xchg
aam
scas
lret
sub
cmp
fnsave
xor
fdivrl
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
jnp
stos
js
cli
adc
mov
fcompl
and
inc
cmc
sbb
inc
cwtl
jecxz
test
push
adc
jo
movzbl
push
jnp
jae
pop
or
pop
mov
push
stc
jle
stos
cmp
jge
sub
gs
cmp
xor
jae
jne
push
ret
mov
in
out
in
rcr
and
das
cmpsb
cmp
ljmp
movsb
ds
adc
adc
and
jecxz
lcall
sub
adc
jbe
cli
xor
mov
repz
icebp
and
ss
lods
movl
push
fimuls
cwtl
gs
pop
mov
mov
mov
into
iret
pop
das
test
rcl
cmp
mov
mov
push
xchg
push
push
std
or
pushf
cmp
movsb
or
sbb
std
sahf
sub
inc
lods
es
mov
imul
lods
repz
push
push
cmp
push
out
and
popf
test
xlat
jo
lret
es
dec
imul
out
loop
sub
mov
daa
adc
dec
push
adc
pop
inc
mov
mov
loopne
and
inc
pslld
lods
sbb
push
cli
fbld
movsl
lods
push
pop
shr
in
and
jne
mov
decl
aam
shll
jno
cmp
mov
repz
shr
data16
inc
or
inc
stc
push
ficompl
sub
pop
in
cs
lods
movb
pop
or
inc
lods
das
pusha
mov
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
