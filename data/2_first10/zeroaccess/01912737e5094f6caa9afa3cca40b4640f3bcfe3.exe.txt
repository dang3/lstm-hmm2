push
mov
sub
mov
mov
jmp
adcb
shrl
mov
jle
jle
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
aad
ljmp
ljmp
cwtl
jne
ret
jmp
cmp
in
sub
test
mov
xchg
imull
jmp
and
arpl
sarl
scas
hlt
fsubl
jbe
test
aas
cld
fidivl
push
mov
cmp
mov
dec
adc
fdivl
mov
in
cmpsl
xchg
pop
js
jne
push
adc
pop
jno
cltd
dec
adcb
push
hlt
aad
pop
repnz
gs
call
scas
loopne
into
mov
dec
leave
push
gs
cmp
fiadds
jle
jl
lahf
push
fs
and
inc
stos
pop
pop
cmp
jae
mov
mov
ret
mov
lret
or
jecxz
bound
out
test
sbb
push
or
dec
push
lret
fwait
imul
sahf
ss
and
scas
mov
adc
mov
sahf
pop
bswap
lret
inc
mov
jne
jno
enter
adc
push
xor
xchg
stos
inc
mov
xlat
mov
jb
sub
fsubl
cltd
cmc
adc
jp
sub
fdiv
jecxz
sbb
ficomps
ja
sbb
ds
sbb
aaa
cli
mov
dec
inc
sti
sub
xor
cli
jb
push
jo
adc
cltd
push
mov
out
icebp
and
adc
js
pushf
fimull
add
xchg
scas
daa
fldl
hlt
inc
sahf
enter
movsb
mov
mov
shrl
mov
fmuls
call
adc
ds
imul
cld
mov
xchg
jno
addr16
dec
cs
stos
das
cld
push
shrl
in
enter
nop
push
xchg
stc
stc
in
aas
sub
ret
repz
cld
ficoms
sub
pop
fidivrl
into
xchg
mov
adc
out
or
jb
idiv
xchg
das
cltd
sub
mov
scas
pushf
bound
sub
test
add
int
adc
mov
sub
mov
in
add
mov
aad
rcrl
cmpsl
repnz
cmp
sarl
mull
jge
pusha
mov
or
jbe
test
jno
and
jmp
mov
push
jno
inc
lcall
dec
push
inc
mov
push
jmp
pop
repnz
cwtl
xor
lods
pushf
pop
in
pop
lret
mov
into
int
dec
mov
dec
push
pop
lods
scas
in
ss
jle
sbb
sti
js
mov
rcll
jns
jb
and
dec
sbb
into
insl
dec
imul
adc
loopne
pop
mull
fs
lods
pop
daa
or
into
xchg
or
leave
sub
rcl
popf
cmp
shrb
mov
outsb
aam
sbb
mov
lds
push
pop
out
call
lods
jecxz
or
shl
mov
decb
lahf
in
xchg
mov
stos
jg
andl
cmp
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
mov
xor
rcll
cmpsl
addr16
repz
jp
pop
std
rcl
ds
shrl
dec
mov
scas
jns
mov
xor
in
rorl
filds
mov
sbb
insb
sbb
or
testb
jge
fwait
xchg
or
or
xchg
in
push
lret
inc
sbb
mov
xchg
push
mov
lcall
popf
cltd
dec
xor
jg
and
mov
sub
out
std
pop
mov
out
sbb
inc
clc
into
test
dec
add
jne
sti
add
arpl
jb
pop
mov
mov
iret
dec
stos
lret
push
insl
popf
adc
out
mov
sbb
mov
popa
call
test
ja
pusha
and
dec
xchg
mov
mov
xchg
ret
in
jmp
in
cs
ljmp
xor
addb
pushf
or
jmp
sub
push
inc
push
lock
jbe
lcall
cltd
adc
divb
insb
push
and
dec
jmp
movsb
xchg
xchg
cmpsb
add
sub
pushf
jge
add
adc
je
test
mov
adc
sub
rol
aad
pop
pusha
mov
jnp
stos
xchg
sbb
in
push
mov
shl
in
inc
mov
mov
pop
negb
jno
or
mov
pop
xor
dec
jbe
dec
imul
imulb
inc
shlb
hlt
ja
adc
inc
sahf
ljmp
je
adcb
cs
xor
popa
rcrl
ficomps
jp
jge
in
xchg
pop
cmp
push
xor
int
aaa
pop
mov
jns
fiaddl
push
in
stos
sub
mov
xchg
mov
cli
hlt
addl
lret
dec
stc
mov
lea
movsb
or
add
sbb
jns
mov
stc
mov
or
jge
and
push
cmp
or
sub
xchg
pop
and
mov
fs
out
dec
pop
sbb
insb
outsb
mov
std
jne
cmpsb
test
mov
test
insl
push
push
dec
jg
add
stos
cmp
inc
movsl
cmp
in
mov
in
or
lret
rorl
repz
andl
loopne
sbb
call
daa
add
cmp
cmpsl
jae
jnp
push
sbb
xor
xchg
rorl
dec
and
sbb
and
mov
decb
movsl
xlat
jnp
dec
lds
xchg
stos
and
mov
inc
and
iret
push
sbb
hlt
ds
cmp
xchg
sbbw
andb
rol
iret
shlb
ljmp
xor
cmp
rcll
fs
lods
repnz
scas
and
jmp
mov
or
and
enter
push
movsl
xchg
sbb
sbb
imul
mov
sbb
rcrl
xchg
gs
mov
mov
cltd
jnp
stos
out
bound
bndstx
mov
dec
jne
jmp
lret
data16
pop
adc
popf
xchg
mov
inc
imul
call
inc
mov
in
mov
popa
xchg
out
add
loope
xor
push
jnp
mov
mov
mov
or
shr
subb
pop
sbb
mov
js
mov
mov
cmp
inc
test
xor
jno
lods
mov
stos
jg
fsubrp
aaa
cmp
movl
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
push
xchg
in
pop
jns
jle
jge
jle
mov
into
mov
outsl
cltd
mov
faddp
pop
push
jns
push
mov
insb
jno
aam
adc
sbb
xchg
inc
imulb
shll
pop
fldl
xor
les
dec
cmp
dec
xor
mov
es
aam
jecxz
jbe
ret
jo
jne
pop
subb
aad
ret
imul
clc
inc
lret
fidivrl
stos
push
fcomi
xchg
aas
sub
cs
lea
xor
jmp
cmp
in
sub
jne
cmp
jmp
ja
outsl
clc
mov
lock
in
fbstp
cmp
mov
dec
and
mov
fsubl
pop
or
imul
adc
je
mov
sarb
leave
daa
pop
jp
mov
std
fwait
pop
push
ret
mov
push
mov
pop
pop
fldenv
jg
aas
mov
aad
push
jl
and
push
bound
test
movsb
or
scas
shlb
sub
fwait
and
gs
ss
hlt
sub
sub
out
das
push
aaa
pop
push
roll
push
dec
sub
cmp
insl
push
stos
loop
int3
mov
cwtl
out
add
sbb
add
jb
jecxz
enter
movsb
dec
arpl
and
push
iret
xor
xor
inc
jno
in
repz
addr16
mov
fwait
cltd
xor
shrb
add
sub
jle
mov
sbb
jecxz
lods
pop
dec
jno
loop
xchg
insl
jl
xor
sbb
subl
divl
push
inc
insb
mov
or
lods
inc
sbb
push
xorl
or
sbb
lret
inc
dec
pop
pusha
jae
xor
xchg
xor
dec
imulb
out
push
in
mov
mov
adc
fdivp
sub
mov
add
pop
adc
aas
mov
or
xor
fstpt
ja
ret
ja
out
dec
sbb
mov
inc
fcom
popf
mov
dec
mov
icebp
pop
inc
sbb
arpl
hlt
insb
mov
insl
imul
or
data16
dec
sub
xchg
ret
sbb
xlat
dec
fstl
dec
cld
mov
inc
jne
pusha
iret
mov
scas
jbe
mov
inc
mov
mov
insl
shl
int3
or
xchg
push
push
jne
stos
ficompl
lahf
ficoms
lret
call
fwait
adc
xchg
mov
ljmp
xchg
testb
inc
push
push
dec
lea
into
push
mov
test
call
shrl
insl
mov
mov
in
outsl
je
pop
mov
mov
lods
lods
xor
inc
jbe
or
pop
pop
insl
jg
adc
jl
xor
cld
push
xchg
inc
imul
add
xor
sbb
fcompp
adc
pushw
rcrl
in
out
data16
cmpsb
jns
nop
inc
into
jmp
push
and
iret
xchg
mov
out
push
lahf
fwait
push
iret
mov
aas
sbb
mov
push
xor
push
push
cmpsb
push
xchg
call
add
test
jge
xchg
test
mov
pop
mov
jae
lods
inc
divb
jl
jnp
inc
std
jl
jns
push
dec
cmp
or
xchg
mov
mov
pop
fxch
scas
and
cli
loopne
cmp
jmp
imul
sbb
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
xchg
xor
orb
jle
jge
jle
sbb
xchg
outsb
xchg
movsl
cmp
add
outsb
hlt
adc
mov
loopne
out
arpl
test
cmp
adc
insb
sub
das
lret
int3
cmp
in
push
xchg
aas
xchg
dec
xchg
into
jnp
data16
inc
and
mov
cmp
pop
jg
lcall
pop
inc
lock
sub
mov
nop
or
popa
in
xchg
lods
popa
mov
stc
addr16
mov
pop
fmull
adc
mov
sbb
pop
test
sub
xor
mov
mov
arpl
mov
xor
push
loope
sahf
jle
jg
out
add
mov
xor
inc
xor
jg
cmp
push
hlt
data16
mov
mov
mov
pop
lcall
mov
push
fsubl
jmp
sbb
add
shrl
enter
pop
icebp
mov
or
jae
aas
movsb
or
cld
stos
mulps
jl
sbb
cli
ret
adc
aas
inc
ja
inc
lds
or
cmc
dec
jmp
stos
add
int3
mov
jecxz
pop
inc
loop
out
arpl
pop
test
jbe
std
mov
std
inc
sbb
mov
leave
outsb
add
fistps
dec
push
push
sbb
lcallw
sub
lret
mov
xor
loop
and
clc
jno
mov
dec
push
and
pop
pushf
pop
push
mov
cli
push
in
shrl
fcmovnbe
fcmovnb
jb
xchg
cmc
dec
mov
mov
adc
aaa
push
sbb
mov
test
cmp
or
data16
mov
mov
ds
pop
fidivrl
add
out
sub
adc
cmpsl
or
mov
call
scas
add
fstl
jge
shll
jg
gs
les
jp
sbb
sbb
pop
push
inc
call
test
cmp
and
subl
sub
pop
mov
jecxz
hlt
inc
xchg
cmp
fnstcw
sbb
std
push
mov
or
jle
mov
and
mov
and
xchg
and
incb
pop
mov
add
or
fs
xor
xchg
inc
loope
push
test
dec
cmp
sub
cmp
aad
sbb
popa
cmpsl
out
in
std
out
jle
push
ret
pop
push
ret
push
xorl
shll
daa
test
outsb
sarl
pop
cmp
sbb
jl
xchg
mov
cli
sbb
aad
push
dec
inc
jne
pusha
mov
mov
jnp
cmp
test
insl
lahf
jge
arpl
int
xchg
fwait
jge
std
xchg
dec
cmp
or
enter
insb
adc
stc
sub
insb
lea
ficompl
call
sbb
enter
or
pop
ds
orb
add
leave
idivl
mov
xchg
sub
mov
testb
sub
lret
pop
dec
ret
add
jl
pop
pop
faddl
ja
add
cs
cld
mov
fstps
or
mov
sahf
pop
mov
test
test
or
sti
shl
mov
sti
mov
ret
psllw
pop
xchg
xlat
and
mov
add
stc
sbb
or
stos
rolb
mov
call
enter
int3
int3
insl
xor
arpl
stc
shr
fldenv
cmp
sub
jecxz
mov
xchg
add
xlat
jb
test
test
dec
aam
test
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
das
mov
add
outsl
jge
jle
xorl
and
pop
idivl
push
rclb
int3
jae
inc
notb
cmp
adc
xorl
pop
jo
add
imul
or
sub
rol
pop
lods
cld
xor
ja
ret
or
inc
test
jge
fwait
insb
mov
pop
cli
das
mov
test
cwtl
sub
jae
rclb
sbb
call
call
ljmp
inc
pop
pop
adc
mov
lret
lock
push
dec
mov
loope
mov
mov
stos
xchg
mov
lods
inc
loop
sub
icebp
out
rorb
inc
adc
ds
mov
xlat
xchg
aas
pop
or
mov
or
scas
dec
inc
mov
imul
imul
lret
lds
pop
xchg
add
sbbl
mov
out
addr16
aaa
push
fnstcw
cmc
cmpsb
out
cmp
and
mov
xchg
pop
inc
iret
mov
xorl
frstor
push
pop
lea
mov
xor
sete
orb
xchg
ja
sub
pop
lods
sahf
xchg
xor
adc
pop
push
push
or
or
xchg
icebp
jle
or
rclb
lret
or
lcall
xchg
push
popf
xor
popa
mull
movsl
data16
je
dec
jmp
bound
add
sub
and
xor
or
sub
sbb
jl
xlat
inc
out
pop
xor
add
mov
cmp
call
icebp
aas
jo
xor
and
testb
push
fidivrl
jbe
pop
mov
cmp
repz
pop
cmp
sahf
xchg
jbe
ja
inc
shrb
mov
sub
hlt
insb
sarb
add
mov
push
xchg
leave
inc
js
lods
mov
xor
filds
or
sub
dec
push
inc
xor
test
or
std
dec
mov
xrelease
in
inc
mov
cmp
stos
sub
shlb
sahf
sbb
xor
out
popa
dec
fiaddl
inc
pusha
cli
dec
es
dec
mov
inc
repz
jge
adc
add
xchg
push
int3
cmp
push
ret
mov
out
frstor
inc
insb
cmpl
inc
mov
mov
das
out
repnz
add
daa
or
push
fs
pushf
xor
aad
jns
loopne
sub
sub
sbb
popl
mov
or
test
in
ss
xchg
push
pop
jns
xchg
cmpsb
jne
popa
sbb
hlt
data16
xchg
xor
fwait
or
es
mov
lds
movsl
add
aaa
cld
lods
std
mov
pop
adc
push
add
scas
ret
test
adc
cmp
sub
mov
lock
dec
mov
test
sub
jg
hlt
sub
pushf
loope
push
cmp
fnstenv
out
cmp
fucom
sahf
mov
xlat
cwtl
imul
nop
jmp
xchg
xchg
hlt
mov
clc
nop
sub
popa
mov
scas
sbb
js
bound
fnstcw
pop
imull
or
mov
data16
aad
push
xor
mov
sub
pop
fadds
in
icebp
xchg
mov
clc
call
subl
xor
push
push
sbb
fstpt
loopne
enter
outsb
sub
lcall
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
das
and
fisubs
or
and
dec
mov
fcoms
imulb
dec
sub
fwait
repnz
outsb
movsb
nop
pop
jo
cmp
ljmp
out
mov
push
mov
pusha
imul
pop
sub
xlat
push
xchg
mov
jno
fdivrp
lret
ret
mov
sbb
addl
push
mov
repz
mov
aam
pop
data16
jecxz
and
and
roll
sub
fdiv
inc
mov
fidivs
sbb
add
bound
sahf
cltd
adc
sub
pop
pusha
jb
mov
sub
test
mov
pop
adc
loopne
out
adc
movsl
iret
into
jmp
jp
jg
arpl
repz
adc
inc
pushf
mov
bound
out
mov
jno
lret
cmpsb
add
call
dec
pushf
add
mov
daa
mov
inc
push
xor
push
cmp
push
fsub
inc
jmp
cmp
mov
mov
mov
fisttps
inc
mov
loop
push
inc
inc
cli
fwait
aaa
rorb
scas
sbb
ret
rcll
xor
insb
ds
outsl
call
pop
sti
xchg
xorb
cli
test
aaa
push
sub
mov
mov
add
movb
inc
mov
faddl
ficomps
ss
outsl
pushf
push
mov
iret
inc
or
test
cmp
lods
add
and
lcall
mov
pop
add
mov
sti
cld
xor
pop
aas
inc
or
hlt
mov
jbe,pt
mov
cmp
mov
orb
rcl
ret
adc
pop
push
jnp
fildl
cs
std
and
add
ja
repz
icebp
push
xchg
pushf
push
cli
jl
std
pop
sub
call
sbb
pop
jg
out
repz
popa
adc
push
mov
xor
imul
movsl
in
scas
rol
add
push
sub
hlt
pop
adc
popa
xchg
psrld
push
or
loop
ret
lods
and
das
push
test
xor
adc
stos
cmpsb
rorb
xchg
mov
ror
lcall
cmc
hlt
cs
push
cmpsb
lahf
inc
lret
testb
pop
xor
orb
iret
int
push
std
add
jp
rolb
je
or
pop
ljmp
cmc
std
mov
clc
mov
data16
or
mov
imul
jno
movsb
pop
je
in
push
or
arpl
mov
mov
push
scas
mov
in
sti
cmp
mov
push
movsb
jb
xlat
popf
jns
insl
dec
mov
cmp
cmp
cmp
jae
cmpsl
call
std
gs
movsb
imul
inc
cli
in
stc
subl
fldl
aad
stc
xchg
loope
cltd
enter
popa
or
data16
sbb
xchg
jns
add
cwtl
push
sbb
lea
sbb
xchg
pop
pop
inc
cmpl
ret
cmp
cmp
jae
and
or
jne
xchg
cmp
add
jg
push
das
pop
lcall
mov
cwtl
push
adc
cmp
push
cmp
ret
xor
test
push
adc
in
pusha
mov
test
and
adc
mov
divb
in
insb
lock
insb
add
rclb
orl
add
and
inc
test
cmp
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
or
jle
jge
jle
cmp
es
sbb
push
in
out
es
inc
sub
in
jecxz
and
or
lahf
pop
ret
mov
mov
stos
pop
and
and
ficomps
insl
mov
sub
push
push
xlat
shl
call
jno
cmpsl
lret
test
pop
xorb
and
mov
and
cmp
or
jecxz
mov
sbb
lods
faddp
pop
es
sbb
inc
out
test
out
add
add
andb
test
mov
mov
pop
xchg
pop
les
xchg
jno
rcrl
xor
jge
push
add
es
testl
push
mov
adc
mov
stc
push
jg
inc
dec
decb
inc
out
xchg
je
pop
stc
mov
daa
sti
mov
xor
or
mul
fcomps
cmpsb
nop
or
adc
movsl
and
xor
cmp
dec
add
mov
sub
add
sub
xor
jbe
and
or
lods
int3
mov
xchg
mov
lret
arpl
inc
sbb
repnz
xchg
enter
sub
and
jbe
addr16
loope
pop
pushf
push
ss
jae
pop
sbb
jp
pusha
cwtl
out
gs
add
inc
and
call
sub
jnp
sub
pop
int
stos
aad
in
leave
and
and
xor
aad
pop
sbb
cmpsl
add
hlt
decl
jnp
xchg
mov
aaa
data16
xor
jg
stos
imul
mov
fucomp
jbe
das
out
dec
dec
add
pop
mov
and
iret
dec
xchg
sbb
mov
mov
cs
loope
pop
mov
pop
test
les
adc
sub
jo
mov
dec
lahf
movsb
gs
stc
and
movsb
sbb
aam
xchg
test
mov
aam
stos
adc
mov
lods
fs
xor
pop
add
push
lods
xchg
mov
enter
insl
scas
mov
mov
shl
jge
add
xchg
out
mull
and
out
or
push
pop
or
xlat
out
or
arpl
jp
jg
cmp
add
clc
out
adcl
jmp
mov
mov
cmc
movsb
insb
and
mov
ja
xchg
xor
dec
out
pop
rcr
roll
enter
fdivs
sar
push
imul
add
add
add
dec
mov
sbb
sub
fucom
sbb
inc
inc
xlat
mov
mulb
add
jb
mov
scas
xor
dec
addr16
cmc
push
mov
pop
push
outsl
sub
sti
jle
cmpsl
lock
jno
dec
push
lahf
test
sbb
lds
xchg
lods
enter
adc
adc
les
cmp
xchg
push
pop
insl
aad
iret
aaa
in
mov
mov
push
sub
andl
xchg
repnz
lret
mov
call
inc
mov
mov
pop
jl
lret
testl
hlt
jbe
mov
mov
bound
cwtl
push
or
adc
test
jne
loop
jmp
xchg
push
mov
mov
inc
jl
mov
mov
xchg
lock
negb
in
sub
mov
add
fisttpll
ret
xchg
push
push
cmpsl
or
xchg
add
sarl
jp
adc
mov
adc
sub
das
ja
cmp
ret
cmp
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
adc
test
adc
jle
adc
cmpsb
inc
js
popa
cmp
cmp
in
jmp
fmul
pushf
lret
pop
xor
jmp
cs
push
int3
in
repnz
mov
sub
test
mov
or
jns
das
fmuls
xlat
out
cli
mov
test
das
jmp
in
push
xchg
fs
push
adc
inc
cmp
xor
xchg
push
jg
adc
aad
lock
test
cmp
jb
dec
pusha
into
enter
clc
pop
cmp
mov
push
xor
das
lahf
inc
stos
je
in
jmp
lret
mov
add
xchg
or
mov
addr16
in
mov
add
xchg
sbb
push
call
mov
lock
mov
ret
dec
pop
lock
jnp
mov
pushf
and
pop
es
push
aad
mov
lret
push
mov
push
pop
imul
aam
sbb
dec
pop
inc
rorl
insb
mov
shr
xor
call
sbb
jnp
adc
xchg
pushf
pop
jecxz
jne
xchg
stc
mov
scas
pushl
jecxz
int
sbb
sub
adc
nop
dec
cs
jo
push
push
adc
jle
outsb
cmpsb
pop
xchg
mov
xchg
mov
cwtl
fs
jle
sbb
orl
or
pop
stos
ret
bound
jbe
jo
mov
dec
cmpsl
mov
sbbl
sti
pop
jno
cmp
lret
inc
cmpsl
outsl
inc
inc
pop
jmp
jl
in
mov
into
out
xchg
cmp
neg
jb
insb
aas
sub
pop
aas
stc
bound
popa
out
cmp
mov
cld
mov
push
adc
daa
push
insb
cwtl
call
aam
mov
push
repnz
mov
fsubrl
mov
ficoms
jmp
addr16
pop
sbb
inc
arpl
jne
push
pop
adc
fsubl
call
aam
mov
outsl
outsb
cld
mov
test
dec
xchg
and
fnstenv
das
dec
push
xchg
push
mov
cmp
jl
cmp
mov
int
and
cmp
stc
push
test
mov
jecxz
and
out
sahf
inc
xchg
sub
lcall
lret
rorl
lock
int3
test
push
pop
and
loopne
mov
jecxz
ja
pop
jge
dec
fdiv
xlat
cltd
arpl
call
orb
lds
ret
xchg
sti
outsb
jl
shll
inc
in
outsb
sub
sub
faddl
inc
inc
sbb
xchg
lock
hlt
xchg
mov
out
mov
call
push
sbb
outsb
push
xchg
sets
and
sub
ret
mov
out
cmp
xor
xchg
loopne
sti
shlb
stos
hlt
hlt
and
fisttpl
pop
insl
dec
popf
mov
daa
jae
cmp
addr16
arpl
daa
setg
mov
dec
add
cmp
insl
shll
mov
jb
das
js,pt
or
adc
mov
aam
shlb
dec
insl
out
mov
or
loopne
jo
lea
xor
mov
push
xchg
xor
ja
into
cmp
lahf
fstpt
stos
or
dec
xchg
shll
mov
adcb
add
into
ljmp
cmp
repz
mov
push
dec
ret
int
mov
pusha
mov
outsl
jmp
dec
sahf
mov
cmpsb
adc
cli
movsb
inc
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
out
gs
jmp
outsl
jge
jle
mov
loope
fisttpl
lods
lahf
cmp
fmuls
ljmp
sarb
xchg
sbb
mov
xor
cmp
hlt
jmp
mov
mov
ja
xchg
jne
or
xlat
insb
hlt
stos
or
filds
mov
jb
aaa
push
sbb
das
ljmp
add
pop
test
test
inc
out
rcrl
jp
cmp
cs
jns
jge
arpl
jecxz
push
scas
or
inc
xlat
push
add
add
cmp
ficomps
mov
jmp
rorl
clc
cwtl
pop
or
push
pop
jne
mov
hlt
push
and
daa
push
int3
cmpsl
fs
xorb
bound
icebp
mov
add
xchg
test
hlt
cs
gs
test
push
sub
aam
scas
rorb
test
adc
lods
xor
mov
adc
jno
push
sub
adc
add
fbld
pop
sub
sbb
sub
dec
out
mov
sbb
js
xor
inc
ja
adc
aam
fadd
pop
sbb
sub
push
jns
sub
stc
jns
and
inc
add
mov
add
pop
in
xchg
pusha
add
and
notb
lahf
lret
lahf
repz
ss
test
xor
pmulhw
cmp
push
pop
ja
lret
adc
ficoms
arpl
aad
test
lods
push
enter
fisttpl
imulb
sub
dec
mov
js
pop
imul
mov
clc
cmp
jmp
push
outsl
frstor
mov
mov
mov
xor
inc
mov
les
mov
cltd
or
outsb
sub
xor
lahf
js
jno
add
cld
xchg
test
xchg
nop
icebp
lds
lock
mov
xchg
push
mov
lret
loopne
jnp
cs
sbb
cmpsb
dec
xor
inc
adc
movsb
imul
or
cli
decl
and
xor
lock
repnz
fsubr
mov
gs
test
outsb
aaa
lds
lret
cmp
ret
inc
inc
mov
std
cld
dec
pop
mov
jmp
sub
cli
outsb
mov
xor
jns
mov
in
dec
pop
lret
bound
sbb
xchg
js
jae
push
mov
mov
sub
das
mov
and
mov
or
add
test
decb
fidivl
std
inc
mov
cmp
sub
jo
mov
sahf
xor
fwait
enter
dec
mov
ss
or
sbb
and
out
out
ret
gs
push
fwait
xlat
pop
jge
stos
mov
jb
pop
popa
or
push
dec
and
dec
dec
and
popf
aas
xor
mov
mov
sbb
xchg
lea
and
inc
fs
pushl
jae
and
xor
jno
or
bound
mov
xor
or
filds
push
outsl
idivl
cmc
and
mov
scas
mov
adc
cmp
dec
xchg
jbe
sbb
shrl
shlb
inc
jl
push
jnp
stc
aaa
lds
jo
push
sub
lahf
arpl
mov
dec
push
das
inc
add
mov
test
cmpsl
jnp
shll
adc
test
cmpsl
jbe
fidivl
call
or
movq
movsl
lock
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
push
cs
sbb
jle
in
push
sub
sub
jo
mov
add
dec
jge
xor
je
mov
dec
xchg
movsl
xchg
sub
xchg
dec
xchg
in
pushf
push
push
inc
shlb
xor
leave
push
xlat
je
add
dec
decb
rol
cmpsb
mov
pop
cmpsb
and
clc
mov
and
mov
push
je
adc
pop
add
add
addr16
scas
sarl
lcall
or
fnstcw
push
and
orb
ror
xchg
call
xor
push
and
adc
add
mov
aaa
mov
out
add
daa
inc
xor
inc
mov
gs
clc
cmp
cmp
xchg
add
mov
cld
shrl
xchg
or
lret
in
mov
fwait
cs
jno
test
pop
jae
movsb
xchg
fists
fiadds
adc
xchg
shrl
mov
pushf
jnp
shrb
loop
in
xor
mov
pop
pushf
xorb
push
add
add
xchg
fsubrs
jg
pop
scas
int
je
push
cmpsb
push
sbb
inc
push
cmc
cmp
lds
lods
jmp
jno
xor
sbb
dec
pushf
mov
loope
xchg
stos
push
call
inc
pop
and
cmp
push
aaa
or
test
out
mov
cmp
push
mov
sbb
ja
cmp
arpl
xchg
rcll
lcall
or
push
in
gs
out
das
ljmp
mov
add
sbb
add
cmp
rorl
popa
shlb
pushf
dec
pop
xchg
jb
insb
pop
adcl
sbb
and
aas
ljmp
nop
cli
xchg
out
sbb
les
inc
or
pop
shlb
xchg
aam
sub
das
rorl
push
lcallw
sub
push
pop
dec
imul
dec
out
insl
int
in
repnz
out
adc
fdivrs
daa
out
cmp
mov
scas
je
add
pop
adc
dec
fadds
and
test
aas
cmp
cmp
sbb
ds
mov
or
jne
es
addr16
lods
and
mov
inc
test
pop
push
fidivs
pop
into
cwtl
adc
rcr
cmpsb
stos
cmpsl
inc
push
push
mov
jecxz
or
ss
mov
stos
mov
mov
js
cwtl
gs
divb
mov
add
cmp
or
sub
fistpl
or
xor
mov
mov
jmp
sbb
popw
test
cmpsb
or
stos
push
pop
sub
rclb
sub
jns
inc
mov
xor
lds
jge
lcall
sbb
and
sub
pop
shl
outsb
and
adc
and
je
dec
rcll
xlat
outsl
pop
xchg
sbb
cmpsb
ljmp
mov
dec
mov
fcoms
inc
mov
leave
adc
sbb
pop
fidivrl
inc
adc
shl
cld
cltd
sub
cmc
dec
mov
or
dec
cmp
xchg
subl
out
adc
mov
xlat
mov
adc
or
imul
or
mov
in
daa
clc
aaa
leave
aaa
repz
xchg
outsl
jnp
icebp
mov
das
les
pop
and
int3
fwait
pop
xlat
cmp
repz
lcall
dec
mov
or
mov
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
daa
pop
sub
fidivs
call
xor
pop
jmp
pop
dec
xchg
stos
hlt
call
push
dec
adc
dec
out
daa
and
jge
add
insl
scas
cmp
xor
xchg
les
out
pop
xor
sahf
ret
adc
ss
test
or
adc
or
test
jge
inc
in
sub
std
fisttpll
jecxz
cmpsb
dec
sti
fsubr
or
adc
sub
aas
xor
mov
fisubs
imul
or
dec
xchg
push
out
sti
dec
jns
sbb
paddusw
mov
iret
scas
pop
insb
or
stc
dec
roll
fisubrs
cmpsl
imul
sbb
roll
test
mov
xchg
sub
fmull
bound
and
daa
mov
sbb
fwait
test
push
lock
popa
test
sub
shlb
jmp
aam
sbb
xchg
inc
mov
cmp
cs
xchg
scas
fildl
jo
popl
shlb
or
daa
in
mov
lahf
fnsave
fistpl
not
push
stos
pusha
or
cmp
stc
pop
inc
lock
mov
pop
sbb
or
sub
jg
jno
jb
sbb
xchg
cmp
sbb
sbb
call
jno
lret
cli
test
pop
mov
cmp
int
jp
cmp
mov
rcrb
in
and
dec
jmp
cmp
jge
push
cmp
ss
pop
jne
fcoms
add
inc
mov
mov
add
xchg
mov
outsl
ljmp
out
mov
adc
sahf
and
outsb
arpl
out
sbb
nop
cmp
xor
or
das
mull
sahf
sti
jae
push
xchg
in
xchg
inc
push
and
mov
push
push
mov
lahf
cs
out
ficomps
shlb
xor
sbb
jle
jns
aaa
fnstenv
mov
repnz
mov
jns
dec
lods
pop
push
adc
mov
enter
lahf
mov
push
mov
es
repnz
lea
dec
mov
xor
ja
fistpll
cmp
cmc
mov
or
pusha
int3
mov
into
popa
inc
movsb
cmp
or
sbb
daa
subb
mov
imul
xchg
movsl
inc
mov
out
lds
mov
in
xor
sti
aas
loop
movsl
negb
outsl
cmp
dec
jmp
jo
test
pop
jb
pop
sub
mov
xlat
mov
cmpsb
insb
mov
dec
fistpl
xor
fwait
adc
mov
jecxz
fiadds
and
ret
pusha
mov
or
and
dec
xchg
sbb
mov
cmp
sahf
int3
mov
fistps
cmp
repz
cld
sub
mov
imul
dec
dec
lahf
pusha
and
and
orl
push
in
js
movsb
push
ja
int3
dec
sub
gs
push
dec
add
in
inc
lods
aam
inc
jle
ja
addr16
xchg
sbb
loope
aaa
xchg
mov
setl
mov
cmp
add
arpl
push
mov
push
leave
es
ret
mov
loope
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
push
scas
aad
jle
outsl
jge
jle
sbb
gs
add
or
sbb
inc
xorl
movb
mov
stc
and
mov
negb
std
bound
popf
adc
push
ja
and
or
mov
cmc
cli
bound
ret
push
inc
sub
and
mov
pushf
test
inc
xchg
in
mov
push
cmp
gs
pop
and
lahf
mov
mov
cmp
repz
cmp
fimuls
dec
les
jno
or
or
out
aas
lods
aam
es
cmp
fsubs
test
pop
gs
push
test
rclb
pop
aad
inc
add
fildll
add
rclb
sub
rcr
inc
or
inc
push
outsl
mov
push
hlt
popf
loope
jmp
jae
and
adc
imul
push
xor
or
mov
mov
mov
add
xchg
add
add
fst
sar
push
dec
jp
jecxz
pop
sub
or
and
and
adc
stos
mov
cli
sbb
mov
icebp
pop
ret
cmpl
hlt
inc
sub
add
pmuludq
and
clc
bound
xchg
loop
test
mov
movsb
sbb
mov
arpl
sbb
gs
cmpsl
cmp
inc
mov
pushf
rclb
adc
lret
je
mov
push
fs
loopne
cli
repnz
sti
inc
pop
cmpsb
jne
es
add
loope
scas
imul
scas
mov
jnp
jge
jge
lds
mov
fisttpl
loopne
dec
sbb
push
cmp
dec
cld
mov
divl
bound
xlat
or
mov
jne
sbb
cltd
add
aad
outsl
sbb
ds
out
inc
adc
arpl
stc
add
xor
cmpsb
add
stc
popl
jmp
outsb
xchg
cmp
jno
mov
and
test
mov
jg
loope
loopne
xchg
shll
divb
enter
mov
sub
int
sarl
push
outsb
sbb
inc
int
push
int3
dec
push
test
xchg
xchg
jmp
ret
pop
lret
pop
test
imul
pop
mov
mov
lods
cmpsl
inc
xor
push
push
mov
sbb
xor
xor
sub
dec
aaa
dec
into
popf
shl
dec
lea
xchg
into
lret
mov
test
pop
inc
out
daa
mov
in
dec
pop
inc
xchg
mov
test
or
sbb
fsubp
mov
rorl
sbb
ja
inc
lcall
jecxz
pop
add
fsts
aas
and
cmp
insb
lods
sub
jno
push
cltd
xchg
popa
jmp
mul
mov
popa
inc
punpcklbw
push
or
jbe
push
popa
pop
and
stc
dec
stc
jno
flds
jle
test
or
adc
fidivrs
mov
insl
fistpl
les
pop
xor
and
pop
jno
jp
pop
movsl
jno
emms
sub
inc
test
test
mov
push
mov
mov
and
xor
push
mov
fcompl
rorl
adc
xchg
xchg
xchg
out
fwait
push
pslld
or
dec
mov
out
sbb
outsl
lods
sub
in
test
mov
mov
fs
lret
xor
hlt
shrb
pop
pop
jg
cmp
and
dec
mov
mov
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
pusha
ret
jle
jge
jle
andl
xchg
jbe
jp
in
jns
lret
or
sti
pop
inc
mov
sub
icebp
sbb
xorb
pop
dec
ret
shl
dec
xchg
insb
or
sbb
cmp
dec
xor
shll
cltd
insb
push
and
lret
xchg
int3
loope
testb
and
ds
push
pop
xor
lcall
inc
pop
icebp
and
in
lea
and
xchg
add
cwtl
cwtl
loopne
push
stos
mov
popa
inc
push
leave
mov
add
inc
adc
js
add
xor
sar
push
jge
cmpsl
mov
outsl
mov
dec
cltd
adc
sti
jns
mov
mov
ds
sbb
mov
outsb
mov
mov
mov
test
lea
ds
xor
in
lods
and
lret
pop
icebp
xchg
stc
shrl
enter
sahf
scas
ret
pop
ss
stos
mov
xchg
int
push
daa
xchg
xor
pop
not
jl
into
scas
pop
leave
cmp
mov
push
cmpsb
xlat
pop
insb
add
stos
push
mov
ja
and
std
pushf
repnz
mov
sub
pop
je
pop
jns
pop
mov
out
inc
mov
stos
movb
out
jecxz
adc
cli
fsts
dec
push
lods
mov
lahf
int
mov
enter
or
mov
in
sub
or
scas
xor
mov
test
xor
push
push
lock
or
das
xchg
mov
cld
lcall
jecxz
clc
xor
mov
icebp
mov
mov
mov
stos
scas
jl
roll
ss
cmp
loope
cltd
ds
outsl
mov
cld
pslld
jo
in
in
cwtl
insb
dec
sub
sub
lock
push
inc
mov
loopne
cmp
dec
xor
jge
je
mov
jp
lcall
fcomp
jns
iret
mov
adc
pusha
rorb
imul
xlat
dec
lds
inc
call
dec
pop
or
and
xor
xchg
mov
pushf
and
push
mov
out
sub
cwtl
outsl
add
cmp
cpuid
ret
jno
mov
aam
mov
add
jge
in
push
ror
jmp
subl
outsb
repnz
fistl
dec
xchg
fldl
adc
mov
cwtl
es
std
lahf
or
cmpsb
jg
mov
mov
pop
push
rcrl
jb
push
call
stos
inc
push
xor
pop
outsb
jmp
mov
push
add
or
jg
pop
fcomps
pusha
fsubl
mov
and
mov
xor
fwait
push
dec
add
in
cmpsl
and
or
arpl
dec
aad
add
lock
xor
pop
mov
lret
xchg
popf
fisttpl
mov
repz
aas
push
pop
pop
pop
and
or
mov
push
aas
mov
loop
cmp
mov
test
or
xchg
push
mov
sarl
push
add
adc
pusha
jnp
xor
or
repnz
imul
adc
aad
mov
mov
fwait
cmp
sbb
jo
mov
xchg
and
stos
or
cwtl
add
ficomps
out
sub
fisubl
cmp
sbb
sbb
or
imul
loopne
test
adc
fstpl
lahf
mov
out
ror
dec
dec
push
pop
pusha
push
push
stos
jg
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
inc
mov
cmp
aas
cmpsl
fwait
inc
out
inc
cmpb
xorl
repz
dec
push
push
inc
ljmp
inc
pusha
ds
jl
inc
mov
adc
push
icebp
loop
sbb
xchg
xchg
push
adc
xor
inc
ret
jno
mov
data16
push
jnp
sbb
arpl
cmc
and
out
sbbb
add
cmp
cltd
adc
rolb
mov
sbb
ja
or
mov
mov
cmpb
xchg
cmp
xor
int3
or
and
and
cmpsb
mov
cmp
outsl
mov
mov
jg
ficompl
das
int
lret
xchg
fmull
mov
sbb
mov
lock
inc
outsl
dec
pop
test
popf
sub
adc
test
lret
sahf
popf
insb
dec
daa
adc
test
xchg
adc
xor
test
xchg
mov
sub
jns
sbb
xchg
out
cwtl
push
mov
popa
in
test
jae
push
xor
ja
arpl
lret
loopne
mov
sub
rclb
es
inc
outsl
inc
bsf
in
xchg
daa
cmp
cwtl
sbb
clc
cltd
push
dec
aam
dec
mov
xchg
int3
push
xor
mov
mov
cld
in
out
adc
lods
jne
cmp
inc
scas
sub
push
jmp
out
jno
or
cmp
mov
addl
xor
idivb
incl
jno
mov
pop
pop
inc
pop
fdivs
push
push
jecxz
sub
mov
cld
jbe
dec
adc
cli
inc
cmp
push
mov
push
jl
int
insb
push
iret
mov
push
jae
int3
fcmovu
pop
inc
xchg
push
shll
mov
movsb
aas
and
scas
int3
xchg
data16
push
and
xor
jno
mov
shll
nop
lcall
pop
inc
mov
cmpsl
jge
sub
push
mov
xchg
sub
push
and
mov
loop
ficomps
add
data16
xor
out
dec
sub
push
jmp
ja
sahf
iret
aaa
addr16
add
bound
push
push
mov
add
or
push
xchg
lods
push
mov
mov
lret
pusha
int3
adc
pop
or
test
ret
mov
or
inc
lret
test
or
stos
adc
lret
jg
sbb
enter
xor
or
mov
pop
mov
retw
cmpsb
stc
push
dec
mov
filds
sub
sbb
gs
cmpb
mov
push
mov
movsb
repnz
fiadds
in
xchg
push
push
ja
dec
fs
sbb
std
sub
xchg
xor
fdivrs
mov
dec
mov
pusha
bound
adc
dec
mov
adcb
mov
sbbb
mov
mov
push
or
add
or
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
scas
sahf
movsb
mov
xor
jle
push
les
mov
dec
out
rcrb
mov
and
in
or
push
xchg
cmp
xchg
and
inc
andb
add
dec
outsl
js
bound
lods
cmpsb
xchg
scas
icebp
imul
xor
lds
add
push
xchg
dec
inc
bound
lea
insb
lock
xchg
pop
sarb
dec
add
sbb
lret
jbe
xchg
jbe
not
lret
adc
pop
movsb
xor
mov
inc
fldcw
jae
or
xor
clc
les
jns
sete
dec
jg
or
jmp
les
pusha
or
jbe
and
or
xchg
std
push
aad
add
mov
cli
add
push
loop
pop
sbb
rorl
add
shll
dec
sub
addr16
data16
sahf
pop
pop
sub
scas
xchg
add
lahf
xor
jo
push
mov
faddp
jp
out
stc
push
add
sahf
sbb
inc
push
movsl
scas
mov
inc
xor
xchg
movsl
ret
mov
pop
push
aas
jle
lret
pop
test
xor
mov
jecxz
mov
lahf
iret
sbb
aas
jno
sub
jne
neg
sbb
dec
dec
movsl
sbb
inc
sbb
adc
insb
cmc
cmp
scas
pop
loope
jnp
stos
pop
fwait
mov
scas
inc
adc
jl
sub
sti
mov
cmc
scas
push
lods
push
xor
scas
push
cmp
popa
sub
jno
leave
dec
mov
fisubs
inc
cmp
ret
push
mov
pop
subl
rolb
inc
jmp
add
mov
and
arpl
sub
dec
mov
shrl
fs
mov
clc
jle
sub
push
ret
aas
xlat
dec
ffreep
repnz
nop
aaa
sbb
pushf
pusha
bound
pop
mov
icebp
loop
pop
pop
ds
sbb
ds
shlb
push
subl
push
push
mov
dec
xchg
push
mov
pop
sub
mov
clc
mov
push
dec
iret
jne
pop
stos
pop
add
or
not
xchg
add
negb
cwtl
int
or
jp
add
iret
inc
cli
loopne
ds
fimull
adc
jmp
imul
dec
add
or
adc
pushf
sub
sahf
xchg
and
clc
dec
mov
insl
and
push
sub
mov
push
jmp
call
cmp
jp
cmp
pop
scas
adc
shrl
pushf
fdivp
jl
mov
lahf
pop
adc
rolb
push
and
mov
sahf
ret
inc
adc
cmp
subl
sbb
out
pop
cmpsl
push
sbb
in
or
clc
mov
or
adc
mov
cltd
pushf
jl
jle
test
mov
dec
pop
imul
cmpsb
xchg
push
fsubl
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
sbb
mov
xchg
fistpl
call
mov
pop
cmc
and
dec
or
sbb
dec
nop
mov
les
push
sti
shll
and
xchg
rcl
mov
andl
xor
ss
ficoms
in
sahf
xchg
mov
push
push
cmc
cmc
and
jg
aaa
das
sbb
xchg
int
jle
mov
or
or
data16
sbbb
outsb
adc
pop
xchg
pop
cmp
lcall
test
adc
sub
dec
dec
ja
adc
jno
push
call
lods
push
lret
fisttps
or
ret
cmp
xor
jbe
xor
jle
out
repnz
insb
jb
push
movsb
and
or
mov
xchg
push
scas
and
mov
in
push
sbb
pop
popf
dec
lea
std
mov
fadds
mov
dec
dec
mov
rcl
pop
push
fmuls
movsl
lods
push
mov
les
mov
adc
pop
inc
and
lods
ss
mov
aad
mov
inc
leave
movsb
stos
xchg
mov
xchg
dec
test
and
int3
mov
push
jp
lret
addb
loope
jp
xorb
push
hlt
mov
xlat
mov
add
sti
imul
adc
orb
insl
into
std
add
hlt
sbb
dec
js
mov
inc
wrmsr
iret
mov
push
xchg
jecxz
xchg
mov
jns
int
push
jbe
mov
mov
in
shll
dec
mov
cltd
cmp
xor
movsb
jo
cwtl
je
cmp
mov
jne
xchg
mov
pop
mov
mov
push
imul
nop
test
in
push
sbb
push
mov
fs
pop
psubq
mov
add
cltd
push
lret
or
rolb
and
or
pushf
jl
jb
xor
xlat
push
adc
or
pushf
push
mov
lds
mov
fcomps
xchg
mov
mov
fs
enter
shll
pop
div
ds
adc
lds
lea
fistpll
dec
mov
icebp
das
pop
icebp
mov
or
xor
xor
lods
mov
sub
fcmove
les
xor
mov
out
insl
inc
cs
es
mov
rol
push
stos
fimuls
lahf
add
pushf
fiadds
dec
leave
pop
or
cmp
out
inc
sbb
mov
lods
cs
jbe
movsb
in
push
aam
mov
and
shll
fcoms
fistpll
cmp
stc
gs
nop
push
hlt
pop
xchg
mov
flds
popa
jo
repnz
pushf
rorl
cwtl
sbb
xchg
push
xchg
xchg
cmp
cld
popa
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
cli
mov
jle
xor
jle
lret
push
push
xorb
orl
sbb
mov
jbe
mov
por
sub
fsubl
xlat
loop
xor
scas
filds
add
fprem1
dec
adc
cmp
out
lock
jnp
cmp
sub
xchg
cli
rclb
in
or
adc
dec
mov
imul
xchg
scas
push
js
jno
adc
dec
jae
jo
jmp
add
jl
add
popa
aad
hlt
insb
sbb
dec
rclb
and
push
f2xm1
push
fisttpll
jg
in
sub
dec
test
out
or
pop
mov
adc
add
rcr
jo
cmp
test
movsl
out
and
hlt
jne
add
data16
xchg
xor
popf
popf
dec
add
call
clc
jl
and
int
ret
cmpsb
aad
xor
mov
push
aam
pop
xchg
movaps
and
ffreep
sbb
orl
mov
loopne
push
ljmp
pop
mov
test
mov
fidivrl
daa
aam
outsb
addb
xor
push
popa
es
mov
mov
aas
popf
cmp
inc
sub
mov
and
fwait
xchg
cmpsl
loopne
sarl
dec
sub
push
not
xchg
sbb
cmpsl
add
xor
or
lcall
fwait
mov
fadd
xor
and
mov
call
shll
dec
xchg
push
lock
or
and
mov
inc
in
cmc
repz
outsb
adc
or
push
push
pop
std
insb
ficompl
push
or
xor
fsubrs
daa
inc
jbe
test
enter
jmp
jbe
add
lods
add
xor
es
neg
int3
int
mov
fdivl
pusha
lcall
adc
adc
movsb
push
arpl
lahf
jg
testb
jno
add
bnd
pop
je
mov
inc
cmp
cmp
push
cmp
push
subb
icebp
imul
filds
decb
jae
cmpsl
jno
loop
sbb
dec
or
xchg
ret
mov
add
imul
mov
add
xchg
sbb
lcall
mov
or
jecxz
xor
mov
mov
pop
mov
fbld
lcall
mov
or
dec
add
mov
je
int
ror
inc
rol
shll
mov
insl
imul
sbb
dec
jo
test
cmpsl
cmovne
push
fs
bound
cmp
xchg
xor
cli
test
sbb
into
add
por
dec
dec
fdivl
add
rcll
jecxz
bnd
rcl
cmp
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
pushf
popa
lret
jle,pt
xor
jle
loop
movl
xchg
or
dec
mov
sub
scas
cmp
and
adc
xor
push
orl
bound
push
push
cli
jg
imul
add
inc
fwait
mov
ret
shll
sbb
adc
pop
adc
sbb
mov
sbb
das
jne
mov
stos
xchg
iret
sub
push
push
iret
mov
mov
fwait
sbb
in
scas
jbe
push
jg
lea
iret
cli
jae
jnp,pt
pusha
xor
mov
stos
std
daa
je
inc
xchg
out
push
sbb
data16
lods
inc
ljmp
sub
lahf
out
repnz
rolb
in
pop
xchg
test
jg
faddl
push
dec
imul
pop
and
into
add
push
sub
adc
xlat
mov
inc
jno
add
repnz
movsl
test
lahf
mov
imul
push
imul
mov
inc
pop
mov
cmp
data16
mov
add
movsb
cltd
pop
pop
lret
jmp
add
jecxz
mov
lret
jg
add
lea
xchg
addl
icebp
pop
or
stos
clflush
sbb
jb
xchg
pop
cmc
or
cmp
mov
cs
popa
fisubrl
movsl
shlb
mov
mov
inc
pop
dec
pusha
dec
push
mov
adcl
lcall
fiaddl
ss
daa
xchg
adc
pop
stc
xchg
mov
test
out
nop
or
jmp
sbb
xchg
xor
sub
clc
hlt
adc
jmp
ss
rol
nop
pushl
jecxz
loopne
pop
subb
test
mov
cmc
adc
push
insb
add
fmuls
jnp
sbb
test
call
dec
push
mov
adc
outsb
scas
stc
pop
call
xchg
aaa
xor
jbe
mov
lahf
add
iret
outsl
bound
pop
sbb
imul
arpl
xor
mov
scas
cli
jg
mov
stos
loop
mov
fisubrs
adc
push
mov
sbbl
loopw
icebp
sarb
lret
adc
inc
rolb
testb
dec
arpl
pop
dec
jae
cs
lods
pop
sub
bnd
sbb
lea
jle
out
ror
add
xor
in
mov
imul
jp
sti
rcr
jl
pop
lea
cmp
or
mov
mov
add
or
mov
sbb
sbb
iret
loope
adc
mov
sbb
call
mov
inc
femms
add
push
gs
cli
cmpl
adc
les
or
push
loopne
pop
in
push
das
push
add
fldl
mov
xor
popf
mov
adc
jp
pop
shrl
mov
jmp
test
jno
ja
shrb
inc
daa
loopne
jle
xor
jle
jnp,pn
scas
daa
sbb
mov
loop
ja
xchg
aam
jl
cltd
push
lcall
movsb
js
mov
mov
mov
adc
ljmp
adc
push
xlat
idivl
lret
pushf
xor
dec
jo
call
mov
scas
in
mov
dec
rcr
dec
pop
lods
fs
xor
es
movsl
cmpsl
xor
movsb
sub
or
fdivl
ret
sbb
push
push
cmp
clc
imul
aaa
dec
or
loope
test
out
cmp
fs
jmp
adc
xor
imul
push
xor
test
xchg
mov
test
and
jne
mov
aas
adc
sbb
ljmp
in
ja
sub
rolb
push
movsb
stos
adc
js
fcmovbe
je
mov
mov
xchg
jne
das
mov
roll
add
ret
bound
repz
fnstcw
mov
imul
outsb
inc
add
and
mov
cmp
shrb
arpl
imul
icebp
fisubrs
sbb
sub
mov
pusha
dec
dec
cmp
cmpsl
fadds
dec
add
repz
divl
nop
mov
push
ds
sbb
and
into
add
in
ss
out
or
arpl
enter
dec
pushf
inc
lea
dec
jnp
leave
push
dec
pop
jno
mov
test
mov
call
nop
cmp
inc
outsb
dec
stos
fidivs
fwait
pop
push
adc
or
push
punpcklwd
jle
cmpsb
out
fidivs
jg
pop
mov
iret
fistps
cmp
push
out
lret
sbb
xchg
dec
dec
xor
arpl
push
fsubrl
inc
enterw
adc
cli
sbb
pop
and
test
lods
sub
test
or
pop
and
jmp
add
mov
pop
mov
add
outsl
data16
add
xchg
movsb
pop
ja
lods
push
xchg
adc
testl
test
pop
mov
or
daa
mov
shrl
testl
filds
cltd
dec
sbb
mov
cmp
shrb
push
jno
in
cmpsb
dec
sarl
or
nop
inc
xchg
cmpsb
test
jns
pop
aas
sbb
adc
xor
and
stos
jecxz
xlat
jne
fwait
sub
sbb
je
call
stos
add
int
push
add
mov
pop
out
inc
jge
mov
sub
pop
cmp
fdivp
mov
mov
xor
and
movsb
and
rcl
dec
dec
inc
test
mov
xor
inc
in
jmp
iret
adc
fistpl
iret
daa
xchg
repnz
stc
std
jns
sahf
sbb
adc
dec
mov
popf
or
xor
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
scas
sub
movsl
cmp
xor
jle
outsb
cmc
aaa
out
inc
stos
loop
sub
and
xor
fmuls
inc
xlat
cs
xchg
ret
cmc
inc
mov
adc
or
dec
inc
and
in
jecxz
test
movsb
mov
frstor
mov
mov
ficompl
pop
mov
iret
daa
push
aam
sbb
xor
xchg
aaa
and
cmpsl
push
sub
cwtl
xchg
leave
call
jge
mov
sub
mov
test
rolb
test
xlat
sub
in
mov
adc
nop
cmc
xor
jnp
pop
jnp
call
push
popa
mov
inc
mov
push
jb
push
loopne
sti
out
xlat
nop
push
jg
dec
int3
orb
cmc
sub
insl
pop
xchg
xor
push
jno
in
mov
stc
xor
aam
jmp
push
pop
sub
jg
nop
add
jmp
inc
sbb
test
jmp
fstpl
xchg
into
in
inc
sub
inc
cld
xchg
mov
sbbb
mov
xlat
les
movsl
cmp
mov
subl
fadd
sbb
int
in
jle
shlb
and
out
imul
xor
jo
fcomi
xor
adc
movsb
mov
hlt
adc
xchg
jg
pop
adc
jle
in
sbb
scas
rcrl
stos
pop
jmp
xchg
cmp
mov
imul
push
adc
imul
mov
pop
adc
iret
gs
jne
pop
mov
inc
mov
out
inc
lcall
jo
shl
fmulp
lods
cli
insb
fsubs
sbbl
dec
mov
lods
sub
adc
dec
test
inc
or
addr16
insl
inc
lods
imul
mov
jecxz
pop
mov
inc
lcall
lret
mov
add
or
mov
aad
or
les
push
out
imul
iret
or
mov
in
popa
lods
jae
adc
int
mov
out
push
aaa
aad
adc
sbb
mov
mov
xchg
cmovno
inc
dec
das
or
fsubl
scas
je
mov
push
imul
pop
jb
ljmp
aas
test
and
pop
pop
out
test
adc
or
sub
rolb
mov
sbb
cld
outsb
or
js
mov
sbb
xor
insl
or
rolb
outsl
inc
ds
sbb
out
push
lea
lods
mov
mov
imul
int3
imul
pmuludq
outsb
hlt
jae
popf
and
pusha
sub
dec
daa
mov
imul
test
fstps
out
xor
aam
mov
cmp
inc
movsl
rcl
cld
hlt
or
inc
cmp
test
test
je
orl
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
sahf
push
data16
jle
fistpll
pusha
and
cmpsl
std
cmp
lahf
pop
mov
mov
outsl
scas
fucom
mov
movsl
cmp
and
xchg
adc
sbb
sbb
lods
or
cmp
dec
mov
int
pop
jl
aas
xorb
add
cmp
inc
cmpsb
mov
mov
dec
popl
jl
mov
push
cmpsl
jl
mov
mov
stc
fimuls
mov
lods
mov
jne
mov
xor
bound
and
fsubrs
jne
add
lock
pushf
stc
jmp
ljmp
push
pop
mov
or
sar
xlat
mov
dec
repz
int
test
icebp
push
fwait
push
sub
fstpt
pop
jae
jp
cmp
push
sbb
pmaxsw
inc
imul
gs
pop
cmc
pop
jecxz
push
add
into
insb
cs
ror
aam
dec
lock
icebp
add
sbb
xchg
and
adc
and
test
mov
ja
jle
repnz
rcrb
and
mov
xchg
sbb
stc
test
dec
lret
jp
pop
cmp
adc
int
push
inc
lahf
push
lods
jl
andl
stos
cld
xchg
mov
mov
mov
das
lret
pop
fwait
sbb
out
xor
xor
in
mov
mov
add
push
test
sbb
repz
inc
into
call
and
test
xacquire
push
lds
cltd
pop
sub
fidivrl
rcl
push
mov
lea
inc
pop
jmp
mull
out
xor
inc
or
dec
fists
push
outsb
fnstsw
jb
inc
andl
jl
and
std
adc
pusha
lock
jbe
ljmp
cltd
pop
add
fldcw
mov
mov
mov
push
shrb
push
add
mov
mov
sub
rclb
lods
xchg
mov
cmp
mov
jge
in
mov
xlat
xor
cmp
das
aaa
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
out
mov
jle
jne
sub
mov
sub
add
repz
push
pushf
cmp
xor
cmp
pop
or
enter
jl
mov
insl
jb
call
add
mov
cmp
xchg
xor
xor
jl
call
repnz
rcll
jp
pop
movsl
nop
xlat
push
lds
lret
js
jg
repz
inc
xchg
out
popa
repz
scas
inc
clc
push
outsl
and
arpl
insb
add
out
push
outsl
cmp
icebp
xor
ds
jae
adc
lods
mov
add
cld
or
cltd
sti
rcl
hlt
int
jb
das
leave
ret
bswap
aas
add
outsb
ja
or
fdivl
sub
push
add
sar
jmp
dec
movsb
sarl
and
mov
imul
sbb
idivl
jl
mov
inc
push
aaa
pop
dec
ret
imul
mov
shlb
aas
std
addr16
jne
mov
mov
das
sbb
sub
dec
cs
sub
jne
pushl
mov
cmpsl
leave
cmc
xorl
xchg
lds
lcall
sbb
mov
daa
mov
std
cli
mov
and
movsb
outsl
imul
js
negb
pop
aas
xor
mov
in
pop
dec
cmpsl
dec
fcomps
and
cld
enter
and
sahf
roll
js
aas
outsb
loope
jg
mov
mov
mov
test
mov
lret
outsb
sbb
xchg
pop
std
mov
pop
test
fucom
pop
or
jae
push
daa
mov
inc
mov
jno
std
push
xchg
icebp
outsb
push
sbb
imul
dec
in
jl
enter
mov
sahf
mov
pop
sbb
add
leave
and
loope
mov
movsb
push
aas
pop
rorl
inc
add
sub
sbb
cmp
and
xchg
or
sbb
mov
ja
mov
imul
fstl
inc
pop
jmp
sbb
xor
inc
push
cmc
xchg
dec
imul
push
add
ss
repz
int
push
xchg
movl
or
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
sbb
ret
jle
and
jle
add
imul
push
push
outsl
addb
dec
jns
jne
push
cmpsl
or
dec
popf
hlt
ss
test
xor
stos
mov
sti
add
sbb
cmp
js
scas
cmp
call
idivb
mov
sub
inc
xor
jge
inc
sub
mov
add
in
test
dec
aam
sub
sub
sbb
iret
inc
sub
out
sub
dec
adc
sub
xchg
aaa
sbb
push
stos
fnclex
inc
adc
lds
sub
mov
ss
das
addr16
jle
subb
aad
sub
enter
sti
js
adc
xchg
mov
mov
pop
test
mov
push
arpl
lods
stc
inc
sbb
dec
sub
xlat
add
push
mov
inc
mov
mov
pop
mov
ja
jmp
insl
mov
daa
jg
cld
imul
ffree
test
add
cmp
sub
xchg
or
pop
pushf
rcrl
inc
sbb
ret
imul
jg
or
mov
js
push
sbb
pop
ret
cmpsb
pop
add
ss
roll
je
push
das
ret
sub
inc
pushf
mov
add
pop
fldl
orl
js
and
in
fstpt
mov
call
mov
fisttpll
hlt
pop
sbb
sar
hlt
mov
add
insl
pop
sub
mov
pop
lret
or
sub
repz
sub
in
shl
mov
nop
test
cmpsb
cld
cwtl
daa
cld
pop
sbb
cmp
inc
cs
push
testl
xchg
pop
adc
pushf
jl
inc
icebp
js
or
add
dec
dec
mov
outsl
mov
mov
xor
lret
sbb
mov
push
push
std
aam
fisubs
stos
jb
test
pushf
push
in
out
movsb
leave
fldcw
inc
es
adcl
mov
rorb
enter
push
aad
inc
loopne
add
and
out
cs
or
xchg
in
aad
jnp
sbb
leave
lret
add
mov
or
gs
fmul
add
shll
incl
imul
sub
pusha
sub
xchg
xchg
dec
pushw
cmpb
leave
sahf
pop
inc
test
jp
int3
or
out
mov
rcr
mov
cwtl
test
jnp
cmp
sbb
sub
mov
repz
adc
leave
sub
mov
inc
xchg
cmp
mov
jmp
adc
cmp
adc
add
clc
jg
aaa
xchg
movsb
daa
pop
jbe
stc
lret
nop
push
xlat
testb
push
test
jne
dec
daa
imul
and
xchg
mov
out
push
pusha
cmp
push
xor
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
mov
iret
jle
and
jle
xchg
mov
sub
in
dec
cmpsb
leave
into
and
cmpsb
and
mov
bound
xor
out
cmp
sub
ja
fwait
mov
jb
sub
xor
in
xchg
sbb
push
jo
jb
sub
ficoms
ds
xchg
or
push
push
rorl
jns
jle
jns
and
in
xchg
cli
sub
mov
cmpsb
fwait
and
dec
int3
jnp
mov
cmp
mov
jmp
push
jp
arpl
out
and
into
xor
xor
imul
fcmovnu
xchg
xor
loopne
inc
mov
push
insl
lea
pop
pusha
push
jg
lahf
fcoml
popf
and
jo
leave
sbb
in
std
cmpsl
dec
cmpsl
or
loopne
push
and
sbb
xchg
push
cmp
sbb
in
iret
cmpsb
jo
cltd
sbb
or
loope
loopne
jmp
lret
push
dec
and
popl
mov
movsb
xor
mov
out
rcll
push
mov
add
aam
and
cli
xchg
pop
lods
dec
cmp
int
in
inc
xchg
mov
scas
test
mov
outsl
jnp
hlt
inc
test
sbb
roll
inc
mov
sub
jno
cmp
pop
dec
and
inc
pcmpeqb
cs
lods
popf
out
inc
jo
in
mov
dec
mov
jmp
mov
push
pop
and
pop
mov
pop
aaa
pop
dec
xchg
add
fadds
adc
xchg
or
gs
bnd
push
xor
pop
push
add
shlb
dec
pop
sub
lret
lcall
cmpsl
jae
sub
add
dec
add
lret
sub
mov
sub
data16
int3
add
out
jnp
jmp
cltd
mov
and
inc
add
filds
dec
icebp
jmp
and
iret
mov
mov
int3
cltd
adc
arpl
out
test
push
pop
adc
loope
filds
xor
ja
test
ret
add
push
xchg
test
dec
xlat
and
mov
mov
or
lret
add
push
aad
cwtl
into
nop
add
enter
pop
sub
pop
dec
or
jns
sub
inc
sub
stos
dec
adc
or
fwait
das
shrb
outsl
fistps
repz
inc
popa
sbb
rorb
iret
or
cmp
jae
js
pusha
pop
add
rcll
inc
and
push
out
pop
in
cmpsb
mov
pop
adc
out
jae
icebp
add
mov
ret
test
xchg
sub
pop
jle
mov
jmp
adc
jle
loopne
mov
lds
cmpsl
push
inc
ret
jg
and
fsubs
imul
das
jnp
fmull
and
enter
push
jns
shr
jp
shrl
or
fistpl
fs
dec
test
or
mov
iret
ja
data16
fmull
lcall
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
jg
mov
and
jle
pop
push
icebp
push
insb
negl
out
pop
inc
sub
xchg
jge
lret
stc
clc
enter
rclb
cld
mov
ds
mov
cmp
jo
insl
hlt
or
jae
mov
ds
xlat
or
mov
sahf
ja
fmull
js
adc
jp
sti
push
ljmp
jge
in
jb
fcmovnu
jecxz
movsb
leave
xchg
stos
stos
aas
and
aad
pop
fstl
es
inc
cltd
addr16
js
pop
pop
movsb
push
lcall
mov
cmpsl
pop
xor
dec
xor
xor
dec
cltd
or
sbb
xor
and
xor
dec
lods
clc
pop
in
stc
mov
pop
movsb
jge
fwait
clc
sbb
rcl
mov
jg
pop
or
xor
sub
cmp
or
imul
stos
in
cmp
cld
in
fisubrl
adc
add
sti
push
ret
or
xchg
jno
mov
push
cmp
into
movsl
add
bound
inc
popw
lahf
test
ja
ss
das
cmpsl
xchg
xchg
inc
xorl
mov
fildll
and
push
ficoml
mov
mov
mov
inc
cwtl
loopne
fcoms
fs
jbe
add
mov
mov
int
data16
andl
add
loop
pop
in
shrb
mov
xchg
push
mov
inc
push
sbb
pop
iret
dec
mov
test
scas
shrb
or
push
mov
int
loopw
mov
test
xor
hlt
icebp
lcall
cmpsb
lcall
hlt
divl
xorb
out
push
or
xor
adcl
push
notb
scas
push
in
xor
cmp
or
dec
mov
enter
rcll
bound
sbb
or
xor
sub
mov
pop
lds
mov
cmp
mov
data16
mov
jmp
lcall
inc
popf
stc
xor
xor
ret
add
aam
loope
cmp
adc
sbb
mov
popa
arpl
add
xchg
sti
cmpsl
push
shlb
jbe
mov
in
xchg
push
dec
scas
push
xchg
xchg
push
mov
pop
push
pushf
or
push
mov
mov
fstpt
dec
or
pop
bound
push
data16
mov
outsl
push
cmp
aam
ja
fisttpll
pop
lock
push
mov
jle
fcomps
pop
cmp
arpl
repnz
sbbl
mov
leave
stos
jecxz
push
mov
push
sub
cmpsl
cs
push
bound
dec
sbb
repnz
jno
add
rorl
inc
jecxz
fnsave
int
xor
imul
outsb
mov
inc
dec
rorb
lods
or
xorb
cmp
subb
mov
sbb
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
cs
add
sub
jle
in
jle
and
mov
sbb
ja
fwait
stos
mov
testl
inc
out
fsts
cmp
popf
cli
xor
and
fstl
xchg
dec
out
adc
xlat
bound
call
sbb
mov
mov
movsl
sbb
loopne
xchg
pcmpgtb
scas
ja
xchg
jp
test
clc
inc
dec
add
ja
cs
test
or
mov
test
xor
outsl
aas
es
test
popa
jb
jl
lods
loope
rorl
mov
mov
fucomi
dec
jb
imul
dec
les
dec
addr16
sub
fcmovb
inc
scas
dec
or
xor
test
loopne
iret
jnp
push
pop
movsb
sub
mov
jp
sbb
mov
pop
fidivrl
adc
push
hlt
in
jae
add
test
scas
call
jge
pop
addr16
xchg
jae
push
xor
push
cld
mov
xor
mov
adc
mov
sti
leave
cmpsl
int3
jmp
xorl
out
call
jl
mov
dec
repnz
fisubrl
jno
and
add
aam
je
add
mov
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
nop
nop
xlat
jle
in
jle
data16
or
cmp
jg
jmp
cmp
mov
cmc
cmpsb
xor
xchg
mov
loope
push
jmp
gs
jmp
cmp
or
push
pop
mov
sahf
cmp
daa
repnz
loope
jne
das
mov
movsl
add
pop
leave
sbb
sub
outsl
mov
imulb
aas
sti
in
leave
stc
xor
aaa
dec
add
pop
lcall
imul
cmp
mov
iret
test
sub
and
outsl
xchg
loop
inc
outsb
jne
pop
leave
cli
test
lret
pop
jge
xor
dec
xor
push
mov
inc
cmp
cmp
or
hlt
daa
sbb
pop
aaa
sbbl
in
pop
pop
sub
aam
das
jl
sub
add
pop
std
mov
ja
sbb
daa
sub
push
inc
and
cs
or
lret
divw
mov
fnstenv
insb
mov
cmp
lea
xchg
mov
jl
mov
out
or
sbb
sub
jb
sbb
add
inc
mov
test
call
clc
mov
and
icebp
or
lds
sbb
mov
pusha
pop
loop
test
mov
add
add
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
push
push
jnp
cmp
je
dec
std
cmp
out
pop
flds
dec
jb
sbb
je
cmp
jle
bound
jne
stos
jmp
push
dec
adc
jnp
in
mov
add
jnp
inc
stc
or
fnstsw
aad
dec
sbb
add
arpl
mov
mov
rcrb
repnz
imul
fucom
push
sub
sahf
mov
enter
sbbl
sub
pop
jae
pop
hlt
pop
lret
cs
pop
pop
pop
in
cmp
jp
hlt
push
xchg
xchg
pop
mov
push
lds
lea
xchg
ret
fidivs
sbb
mov
cmp
and
lret
lock
push
std
mov
hlt
jp
fstps
xor
jae
outsl
lock
stos
leave
cmp
xchg
dec
and
imul
lcall
adc
add
mov
inc
push
lret
dec
inc
rorl
dec
negl
mov
jns
in
mov
insl
lahf
lret
mov
and
or
cmpb
jo
push
in
inc
scas
lea
lea
imul
pushf
lock
lahf
dec
movl
sahf
and
sbb
xchg
mov
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
xlat
mov
jle
in
jle
shll
mov
cmp
sub
jmp
mov
mov
mov
dec
test
xchg
adc
out
cltd
popl
ret
inc
repz
xor
insl
push
sbb
mov
inc
adc
jp
std
cwtl
mov
cld
je
in
mov
jle
add
jp
jecxz
sti
cmpsl
stc
pushf
xchg
cmpsl
mov
jo
lcall
mov
shlb
sahf
loopne
movsb
adc
pop
mov
cmc
call
xlat
xchg
mov
jne
cmc
mov
mov
aas
aam
xor
or
xchg
or
push
or
outsl
jnp
sarl
mov
outsb
adc
xchg
lret
xor
xor
sub
sbb
les
jg
sbb
cmp
into
nop
and
fs
push
cmp
jmp
outsb
out
test
fsubrs
mov
dec
add
nop
test
xorl
sbb
mov
js
jmp
clc
insb
mov
mov
and
jmp
or
xchg
pop
scas
sbb
adc
popf
xor
lds
out
je
mov
cmp
add
sahf
xor
push
add
cltd
mov
in
fnsave
mov
adc
int
repz
clc
xor
add
jmp
adc
test
or
or
push
sarl
in
jle
xchg
mov
xchg
outsl
dec
add
sbb
sahf
inc
pop
push
xor
sub
inc
std
add
push
out
mov
cwtl
sub
scas
shrl
jno
jns
push
mov
fsub
xchg
pushl
aas
pop
and
movsl
jmp
pop
or
mov
in
xor
ja
sbb
das
test
fcmovnbe
mov
inc
jmp
jbe
cld
lods
in
jae,pn
loopne
icebp
pop
outsb
and
sbb
nop
enter
or
lds
sbb
mov
stos
and
inc
in
mov
xor
sbb
fsub
int
inc
mov
push
mov
sub
lret
pop
jns
adc
inc
fsubr
lret
push
xorl
pusha
dec
test
fimull
sub
mov
dec
adc
test
idiv
stos
dec
cld
xor
insl
stos
movl
mov
or
not
ss
ret
mov
insb
cmp
xchg
rorl
push
ja
push
mov
jge
add
adc
rcll
sbb
pop
push
xchg
inc
mov
mov
add
and
mov
push
cld
sub
mov
mov
pop
sbb
loopne
inc
pop
mov
inc
pop
stos
dec
stos
enter
dec
dec
sub
dec
push
cld
jne
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
add
cmp
jle
in
jle
mov
test
jns
jecxz
scas
in
push
insb
mov
imul
pop
shlb
xchg
mov
add
xchg
push
stc
adc
arpl
mov
inc
cmp
ficoms
xchg
repz
outsl
test
int
aas
aam
pop
mov
mov
mov
and
mov
lret
movsl
test
push
mov
cs
inc
pop
dec
test
pushf
clc
mov
call
xchg
mov
fisubl
in
mov
xor
mov
dec
add
call
lods
sub
mov
js
mov
pop
jo
fildl
jo
add
adc
adc
cmc
movsl
jl
mov
sbb
int
icebp
test
pop
jbe
into
loope
idivb
mov
mov
jb
enter
je
dec
or
mov
fimuls
loopne
pop
scas
sbb
les
sub
jns
fbld
mov
mov
imul
push
push
das
mov
cmpb
push
xlat
shlb
adc
int3
sub
insl
call
sarb
mov
icebp
or
xchg
sub
shrl
stc
sbb
xchg
cmp
cmp
sbb
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
pop
sbb
scas
fidivrs
in
jle
add
dec
add
mov
call
mov
insb
cmpsl
into
rcll
icebp
mov
inc
fcoml
fists
jge
or
pop
fwait
repz
jg
or
test
jb
jle
jo
dec
pop
push
cmp
push
inc
fwait
loopne
daa
ss
add
mov
cmp
sbb
mov
std
hlt
pop
frstor
scas
push
mov
lret
mov
mov
mov
mov
push
je
push
std
and
lahf
imul
mov
clc
lods
inc
mov
inc
add
cltd
jns
aas
call
inc
push
sahf
aas
xchg
jne
jl
xchg
iret
ljmp
adc
out
xor
imul
jg
jae
lods
xor
jbe
sbb
jp
mov
inc
hlt
ds
add
adc
in
push
mov
movb
push
aaa
lock
aaa
sub
xor
mov
cmpsb
cmp
movsb
mov
xchg
push
je
fiadds
sbb
je
repnz
loope
test
loop
icebp
nop
loope
pop
sub
iret
in
fnclex
fwait
jo
inc
rclb
stos
ret
popa
xchg
cmpsb
rolb
xchg
dec
cmpsb
stc
sbb
cmp
pushf
dec
xchg
das
add
push
add
push
dec
adc
mov
cmp
mov
and
hlt
and
movl
lock
inc
movsl
dec
ljmp
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
aaa
sub
jle
in
jle
mov
sub
jmp
add
je
mov
imul
jnp
stos
shll
dec
sbb
jne
test
jecxz
jo
daa
jbe
insl
js
xchg
jnp
lahf
fistps
fnsave
out
ret
cmc
enter
jl
sahf
cwtl
enter
sub
dec
adc
mov
loope
xorb
es
shll
xor
mov
xor
ja
lods
ja
jecxz
inc
and
aaa
sahf
pusha
int3
ficoms
dec
dec
outsw
add
jle
add
shlb
mov
cmp
jmp
lea
fsubrs
inc
push
loop
pop
dec
lret
ror
pusha
and
lahf
leave
je
sbb
pop
mov
ja
cli
sbb
or
test
cmp
ret
clc
sbb
fwait
dec
mov
mov
cmp
scas
inc
jp
cmpsl
lds
pop
or
mov
adc
xor
mov
fst
out
xor
pop
mov
fildll
aam
add
pop
jns
loope
sub
loop
or
push
sbb
sbbb
cmp
cmpb
aad
cmp
in
ja
test
lret
push
xchg
mov
lock
pop
dec
xchg
jbe
lret
adc
push
inc
cmp
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
pop
and
mov
jo
pop
out
adc
mov
pusha
push
fnsave
xor
test
es
and
das
sub
cltd
shlb
in
push
lods
arpl
loopne
pushf
sub
fwait
lcall
ljmp
xor
mov
icebp
ds
dec
pop
fistps
sub
fdivrl
cmp
cld
inc
dec
repz
xchg
enter
mov
in
or
call
inc
icebp
aaa
lret
in
mov
out
jl
in
or
mov
ds
cld
arpl
cmp
adc
out
cwtl
fcomps
pop
mov
sar
mov
push
loope
and
js
int
mov
cmp
push
push
fisttpll
or
sahf
push
sbb
push
mov
dec
or
and
pusha
pop
xor
push
cmc
out
stc
aas
xchg
cmp
xlat
and
mov
mov
pop
pop
jne
rolb
lds
imul
mov
dec
jle
push
dec
push
in
jno
fisubrl
inc
lods
push
pushf
mov
test
iret
insl
test
sbb
ror
pushf
jne
mov
push
jmp
add
xchg
pop
mov
add
mov
ljmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
lock
push
dec
pusha
fidivrl
jp
jle
mov
mov
lret
xor
jae
push
stc
int
cli
adc
cltd
in
lret
sahf
mov
push
jb
mov
add
in
xor
add
push
xor
cmp
lret
movntps
dec
faddl
in
adc
pop
push
push
imul
out
jb
les
lcall
xor
rorl
inc
movsb
out
ret
adc
pop
mov
lods
lds
and
mov
out
sbb
and
mov
inc
jge
mov
add
es
mov
ja
rorb
dec
dec
mov
pop
stos
sbb
lahf
push
xchg
sbb
mov
dec
and
xor
xor
cmpl
test
push
sub
xchg
dec
or
lods
cs
and
nop
xchg
jb
mov
fnstcw
inc
inc
and
loope
or
sub
mov
jbe
insl
leave
dec
ret
gs
call
imul
and
icebp
mov
mov
repnz
in
pop
daa
adc
cltd
scas
and
and
fidivrs
leave
jmp
inc
loope
sub
sahf
sbb
add
adc
std
push
out
xor
or
dec
xchg
fcompl
out
inc
loopne
cmpsl
xor
add
out
xchg
jp
imul
push
inc
cwtl
daa
xchg
push
mov
xor
xor
mov
out
jmp
rcrl
hlt
pop
add
push
stos
int
adc
jae,pt
sub
lret
push
jae
mov
or
enter
mov
pcmpgtb
jbe
outsb
xchg
popf
push
xor
push
dec
cwtl
cwtl
in
mov
ret
mov
aam
enter
xor
and
arpl
repnz
xchg
lods
insl
cmp
mov
test
jne
push
sub
sbb
mov
xchg
ds
cs
jne
sub
shrb
push
rorb
sbb
stc
jae
bound
sahf
push
xchg
in
cmp
cmpsl
jg
mov
jle
mov
cmp
xor
or
xchg
jl
cmp
imul
arpl
sub
push
jmp
pop
bound
cltd
lds
or
loopne
mov
clc
sbb
movsl
les
rcr
aas
mov
popf
hlt
fidivrs
fsts
xchg
mov
push
mov
mov
daa
fldcw
outsb
out
adc
scas
mov
lret
lret
ss
sbb
xchg
int
add
lea
popa
xchg
fsubrs
lock
cli
or
arpl
lds
or
lds
xor
xor
lret
pop
movsb
pushf
insb
mov
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
pop
insb
fnstcw
jp
jle
pop
jmp
jecxz
xchg
jl
mov
push
lds
and
cmc
mov
adc
lahf
hlt
outsl
add
or
lcall
dec
popf
cwtl
inc
icebp
in
in
mov
movsl
ds
adc
lret
or
push
incl
iret
cmp
rcll
sbb
mov
mov
lock
fs
inc
data16
daa
or
inc
add
daa
loopne
jp
or
addl
xchg
xor
ror
or
jae
dec
dec
sub
xchg
and
inc
testb
lods
sti
shl
ss
push
in
cmpsl
adc
dec
push
inc
sti
popf
loope
pop
cs
adc
bswap
fimuls
call
aad
dec
xchg
in
stos
test
jbe
loope
out
insb
out
sahf
inc
sbb
testb
std
add
and
lahf
pusha
adc
clc
jo
inc
xor
inc
aas
sahf
mov
jae
mov
roll
push
push
push
mov
dec
inc
stos
dec
add
push
mov
adc
add
gs
not
pop
cs
movsl
cli
push
or
add
or
aaa
test
sub
push
and
jp
mov
push
fadd
andb
adc
js
or
rorl
dec
adc
inc
add
push
push
jmp
stos
mov
enter
js
nop
sub
repz
pop
or
lret
mov
add
and
dec
mov
or
mov
pop
popf
fcmovbe
inc
aam
cmp
scas
pop
cwtl
add
bound
add
xlat
mov
jge
incl
mov
int
xor
mov
ret
pop
or
push
or
andb
test
popf
add
push
shll
or
lea
and
xor
imul
in
cmp
ret
movsb
bnd
icebp
mov
xchg
mov
cmc
addr16
add
clc
pop
push
xorb
rcll
mov
push
jle
gs
jns
gs
mov
cmpsl
subb
jl
sub
pop
dec
mov
sahf
push
cli
push
cs
or
jmp
push
nop
out
test
retw
imul
sbb
out
or
in
jecxz
into
iret
jl
xor
fisubl
dec
jle
gs
mov
xor
sbbb
cmp
cmp
insb
jl
cmpsl
adc
push
push
ret
rcrb
test
jecxz
mov
mov
and
sub
sub
or
jg
pop
jmp
aaa
xchg
rcl
xchg
xor
cli
jno
xor
dec
ret
pop
js
jge
jle
and
xchg
and
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
frstor
mov
bound
jle
jp
jle
faddl
repz
jle
das
aam
add
lea
jecxz
mov
mov
push
ret
push
cmp
arpl
clc
insb
stos
pop
xchg
jns
jno
xchg
jmp
xchg
jl
nop
rorl
dec
mov
arpl
push
subl
xchg
insl
inc
mov
fildl
push
and
lds
push
push
setbe
xor
cs
arpl
sub
test
fwait
std
jle
mov
xor
or
mov
iret
pusha
pushf
aaa
nop
pop
xchg
cli
aad
adc
fisttpll
ljmp
outsb
pop
test
jno
outsb
shl
dec
divb
dec
inc
shl
in
mov
dec
pop
test
aaa
loop
jp
cmp
cmpsl
add
inc
or
push
inc
inc
lea
sbb
and
xchg
imul
fs
addr16
outsb
ljmp
sti
gs
push
and
and
push
rorb
adc
pop
inc
loopne
and
sarl
loopne
pop
hlt
dec
cltd
test
out
fistpll
nop
cmp
jl
mov
mov
jecxz
fs
clc
push
out
adc
sub
sub
out
outsl
pop
mov
ja
cmp
adc
push
jb
inc
into
les
jle
jl
jb
ficompl
push
adc
cli
sti
fldt
test
mov
push
push
in
test
fsubrs
xor
pop
pushf
add
jnp
pop
adc
sub
push
sbb
mov
push
stos
outsb
fdivrs
dec
loope
cmpsl
cmp
xchg
in
mov
dec
imul
push
cmp
int
sub
rcl
lea
je
fsubl
sub
inc
repz
fidivl
in
or
dec
lret
xor
out
xchg
pop
mov
sbb
adc
notb
mov
out
arpl
hlt
inc
dec
push
int
sub
lahf
notb
pop
lock
pop
ret
enter
repnz
sbb
sub
ds
popf
inc
and
lcall
push
mov
pop
xor
or
mov
insb
fldcw
dec
mov
push
sbb
mov
mov
xchg
popf
push
xor
sbbb
pop
and
add
push
in
push
fcomps
and
dec
jmp
push
bndstx
mov
out
or
out
in
mov
ret
mov
lock
enter
xchg
jle
xchg
mov
mov
mov
xor
and
add
or
jo
inc
dec
push
sbb
cmp
test
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
dec
in
out
je
jle
jp
jle
adc
or
sub
mov
mov
repz
mov
lret
lea
cli
sarl
pop
jmp
jae
pop
scas
pop
sbb
inc
cld
inc
and
add
xchg
stc
rcr
in
into
push
out
lret
fdivs
mov
jo
mov
push
sbb
je
xlat
movsb
mov
xchg
aad
mov
xor
fimull
mov
sub
mov
loop
js
into
and
cmpsl
divb
pop
ret
xor
sbb
dec
xchg
sub
sbb
jl
pusha
jbe
sbb
insb
fidivrl
mov
mov
inc
adc
and
cmpsb
test
enter
loopne
mov
pushl
test
sbb
push
mov
or
in
pop
orb
sti
mov
bound
inc
sbb
xlat
fadds
xor
jbe
call
aad
jle
aam
mov
mov
xor
push
mov
pop
adc
xor
add
ret
iret
push
sbb
notb
push
push
ds
mov
data16
cli
ljmp
push
dec
aad
idiv
jmp
xor
push
ljmp
repnz
mov
pop
mov
xchg
ja
arpl
mov
sbb
sbb
adc
sahf
aad
and
mov
out
adc
sub
xchg
ja
mov
scas
jmp
jno
push
or
outsl
scas
and
or
loopne
pop
xchg
bsr
scas
iret
lret
arpl
and
sub
std
ds
pop
dec
mov
dec
push
in
pop
pop
add
aaa
call
cmp
xchg
cmp
iret
in
mov
cmp
and
mov
xlat
cmp
pause
xor
testl
xchg
lcall
fucom
or
jno
inc
je
sbb
push
pop
xor
adc
mov
dec
mov
cmpsb
stc
out
inc
cmc
movsl
lret
mov
mov
and
shll
movsl
push
cmp
loope
lret
test
xor
pushf
push
outsl
push
rcr
clc
pop
fisubrl
pop
mov
sub
pop
sub
inc
je
and
xor
out
xor
imul
enter
arpl
dec
out
adc
jl
push
adc
pusha
int
mov
sbb
lods
jle
sub
test
imul
std
fs
sti
nop
jb
mov
ss
es
jecxz
mov
subb
mov
cli
jmp
adc
or
movsl
sti
test
popl
dec
cwtl
fs
mov
sti
dec
sub
sbb
jae
jbe
mov
xchg
mov
js
fdivp
add
out
aam
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
sbb
test
jle
jp
jle
jb
outsb
icebp
xchg
stos
xlat
mulb
loopne
int3
cmp
stc
std
lret
cmpsb
icebp
adc
add
aam
jl
xchg
out
sub
add
add
stos
popf
cmp
jecxz
es
stos
sbb
push
data16
pop
jmp
or
movsb
push
fadds
push
cmp
lahf
icebp
pusha
dec
test
insl
test
pop
push
mov
sbb
inc
cmc
pop
push
orl
mov
jno
mov
mov
loopne
mov
adc
adc
inc
mov
or
loopne
add
pop
mov
jbe
add
imul
pusha
ret
fmul
adc
push
rclb
divb
adc
push
mov
pop
or
dec
mov
in
xchg
mov
fdivl
adc
sub
icebp
pop
in
daa
int
int
aam
out
push
fwait
xchg
inc
into
out
or
and
sbb
mov
jo
mov
leave
and
inc
arpl
lods
lods
loopne
bound
sbb
outsb
sahf
test
cld
push
adc
adc
sahf
cld
sub
scas
aaa
and
push
js
xorl
stos
mov
xchg
bnd
cmp
popf
shr
stos
lds
add
rcrl
and
int3
mov
cmpb
push
fs
rclb
test
imul
xchg
fdiv
shlb
cs
data16
rol
bound
stos
arpl
mov
xor
int3
or
inc
repz
adc
insb
mov
mov
sbb
movsb
mov
shrb
aam
gs
mov
inc
icebp
jb
add
cwtl
mov
push
fwait
push
gs
or
xor
out
adc
xchg
and
decb
xor
mov
cs
jge
outsl
test
daa
out
int
js
mov
inc
insl
xchg
lock
mov
mov
push
imul
shl
and
push
test
fcomps
mov
lahf
push
mov
stc
loop
xor
ret
daa
or
int
jmp
test
dec
les
fdivrl
and
insw
or
mov
jne
mov
aas
aaa
mov
dec
adc
enterw
push
jecxz
pop
mov
loop
jge
leave
out
aaa
mov
pop
dec
scas
mov
dec
adc
push
cwtl
addr16
cwtl
imul
out
dec
aam
cmp
xor
cli
repnz
into
rcr
fwait
jp
inc
xor
add
pop
lock
imul
repnz
adc
jle
add
mov
xor
leave
xor
mov
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
mov
mov
jl
jle
jp
jle
mov
or
pop
jnp
and
es
insl
mov
push
loope
inc
mov
movsl
push
xor
dec
or
jns
push
cli
ja
sub
lcall
rclb
dec
cmp
adc
jle
jge
push
lret
cmp
cmp
icebp
in
cmp
push
outsl
cmp
sar
xlat
xchg
and
cmpsb
xor
mov
ret
jo
mov
pusha
push
mov
dec
int3
call
pop
sub
push
lahf
xchg
push
dec
sub
xchg
xchg
or
call
mov
pop
jns
popa
jb
sbb
adc
stc
adc
xlat
push
sbb
mov
xor
jmp
sub
enter
popf
pop
je
sahf
ficomps
stos
jne
popf
stos
dec
pushf
cwtl
aas
das
fistl
out
jae
push
push
fisttpll
mov
out
xchg
sub
fsubs
stos
push
mov
inc
and
adc
xor
mov
dec
fildl
ljmp
popf
dec
out
pusha
jl
orb
inc
pop
adc
and
in
outsl
outsl
notb
les
cli
dec
pop
rcrb
mov
into
push
mov
xor
inc
pop
pop
push
das
lea
inc
and
jle
pop
or
pusha
inc
sbb
or
popa
imul
lods
jp
or
inc
ja
xor
and
mov
cltd
enter
iret
jl
xlat
cmpsl
repnz
sbb
pop
jle
push
sbb
out
movsb
movsl
iret
enter
and
pop
cmp
sub
subb
sarl
ret
out
daa
pop
pop
int
add
test
sbb
dec
hlt
addr16
push
lahf
das
lcall
pop
push
xor
add
sub
sbb
add
mov
and
shrb
notb
lds
or
nop
jmp
sub
mov
lret
jbe
dec
out
out
lret
idiv
sub
dec
fidivrs
mov
ljmp
mov
xor
sbb
leave
mul
xchg
mov
push
mov
pop
xchg
cmp
xchg
mov
idivb
inc
fwait
push
add
push
sbb
aas
in
outsb
sbb
mov
pop
into
aad
dec
pop
adc
fcmovnb
loope
ret
aad
dec
xor
pop
pop
pop
push
int
in
stos
jbe
and
mov
pop
ret
mov
jl
roll
mov
mov
or
pop
mov
xor
cmpsb
dec
xchg
int
pusha
add
sbb
add
in
notb
sub
cmp
jle
jge
jle
lods
pusha
aaa
dec
jmp
adc
xchg
push
std
fstpt
orl
xchg
enter
mov
xchg
inc
cld
mov
push
cli
cmc
inc
pop
sahf
out
lahf
dec
insb
and
out
std
test
and
sbb
and
cmp
mov
icebp
pop
sbb
pop
dec
enter
mov
outsl
sub
inc
mov
lods
mov
pop
clts
push
loopne
loope
inc
push
xchg
mov
das
push
out
hlt
jmp
ja
cmp
loope
out
pop
std
insb
dec
dec
push
adc
fwait
out
cmp
aad
subb
xor
dec
testl
push
jge
sbb
scas
scas
dec
loope
and
cmpsb
loop
xor
pop
pop
not
ret
fcoms
call
dec
sbb
dec
mov
fwait
jae
test
push
loope
lock
fists
cmp
dec
test
push
fnstenv
adc
mov
aad
sbb
lcall
inc
inc
jmp
xchg
inc
imul
xchg
fbstp
and
xor
in
ja
aas
mov
xchg
movb
rcrb
loop
mov
add
xorl
and
xor
and
add
xor
imul
jb
cmp
iret
sub
test
xorb
fistpll
cmpsb
jo
jbe
inc
sbb
mov
stc
or
mov
mov
jmp
mov
dec
scas
pop
arpl
xchg
not
lds
stos
jle
stos
jo
lods
dec
push
or
int3
mov
lcall
pushf
xchg
add
mov
mov
movsl
sub
daa
xchg
sbb
adc
mov
aad
lcall
push
ds
and
sti
div
inc
jae
jecxz
into
and
stos
mov
lcall
imul
fsubr
cmp
push
sbb
in
mov
stc
mov
int
xchg
xchg
dec
leave
pop
adc
add
fsts
int3
or
cmpl
outsb
mov
adc
inc
stos
mov
adc
in
mov
test
jge
std
mov
push
inc
dec
fwait
xlat
sbb
nop
insb
incb
push
jns
cmpsb
arpl
pop
xor
mov
dec
xchg
test
xrelease
div
adc
pop
sti
arpl
sub
sti
call
jnp
test
push
shrb
cmp
push
sub
push
or
push
loop
setb
inc
jg
pop
hlt
aam
stos
mov
outsl
insb
inc
insb
bound
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
xchg
add
jle
jp
jle
stos
data16
adc
or
cmp
adc
dec
jle
xor
cmp
dec
cli
sub
sahf
sub
pop
and
andb
mov
xchg
xchg
aaa
xor
add
lret
jg
ds
or
rcrb
mov
mulb
xchg
add
sub
sahf
ljmp
enter
sbb
mov
xchg
cld
clc
adcl
push
xchg
pop
xor
test
jb
or
cmpsl
and
ret
stos
lret
lds
inc
xchg
cmpsl
js
inc
icebp
mov
insl
xchg
mov
xor
mov
push
inc
cmpsl
mov
pop
adc
mov
es
gs
cmpsl
xchg
into
repnz
cs
test
sbb
pop
pop
addr16
xchg
jbe
insl
push
es
pop
or
popa
imul
jno
adc
das
lret
data16
and
jp
adcb
xlat
fldenv
fcomip
adc
push
in
lea
hlt
das
and
add
mov
push
out
cmc
imul
cmp
xchg
or
xchg
pop
xchg
mov
cmp
inc
adc
daa
add
adc
das
add
cltd
fstpl
repz
xor
cmp
pop
mov
rolb
sub
dec
xor
push
and
sub
pop
push
inc
cli
pop
fwait
xchg
pop
aad
icebp
add
roll
shll
popa
xlat
data16
pop
push
test
insl
sar
cmp
xchg
daa
or
popl
and
loopne
popa
push
repz
xor
mov
enter
xor
pusha
fstps
jnp
and
dec
jnp
or
or
imul
push
mov
and
stos
xchg
test
scas
jmp
jno
call
xchg
cmc
cmp
paddq
rol
mov
in
adc
sub
jmp
lock
and
inc
xor
divl
ret
fadds
fidivrs
sub
lret
cmpsb
jmp
adc
aam
gs
aaa
ds
scas
stos
push
mov
jno
add
xor
shl
movsl
and
pop
add
jbe
or
in
dec
xchg
sub
dec
cltd
xchg
mov
aaa
and
inc
mov
mov
mov
fs
xor
ja
fnsave
mov
shrd
cmovbe
push
call
jno
bound
mov
dec
filds
xchg
xor
test
cmp
outsb
xor
lahf
or
or
dec
push
xor
movsl
nop
jle
and
decl
bound
mov
fistl
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
in
add
jle
jp
jle
dec
cmp
pop
ret
cmp
push
shr
aaa
and
daa
add
jmp
dec
mov
ret
pushf
movsb
movsl
stos
xorl
sahf
jno
cmc
sub
mov
push
pop
adc
jle
sub
mov
out
mov
sub
sbb
dec
add
adc
dec
push
lock
and
push
ds
rcll
loope
mov
icebp
lcall
push
xchg
add
out
and
or
xchg
sti
add
xor
adc
loop
sahf
das
std
mov
fbstp
jae
xor
cmp
xchg
cmp
fs
push
pop
xchg
xor
mov
push
push
sub
in
mov
lret
push
out
fisttpll
jnp
fbstp
sbb
sbb
xchg
aas
arpl
test
jmp
cmp
filds
dec
jle
aas
dec
imul
repz
aas
popf
mov
fsubrs
add
adc
pop
call
mov
xor
setp
fnsetpm(287
jecxz
test
add
mov
pop
ds
push
mov
push
jbe
movsl
or
decl
push
adc
mov
fisubrl
insb
cmp
fs
push
fadd
pop
addr16
stos
mov
and
pushf
rcll
movsl
xor
fwait
cmpsl
lods
cmp
out
push
xor
mov
dec
dec
xchg
in
inc
mov
out
jge
rcll
mov
test
nop
push
inc
movsb
jns
ja
add
xor
jecxz
push
or
pop
cmp
inc
cmp
mov
movsb
loopne
xor
cmpsl
sub
pop
mov
fcompl
adc
jno
movsl
icebp
int3
dec
fiadds
sub
mov
mov
out
jne
ret
aad
dec
inc
lret
adc
adc
push
xor
push
mov
in
lea
lock
popf
xchg
je
jmp
icebp
push
sub
mov
popf
and
jns
ret
pop
and
and
sub
push
dec
leave
xor
fimuls
idivl
or
scas
loop
push
mov
sahf
test
pop
and
test
pop
cld
cmc
out
loop
add
stos
adc
outsb
lds
data16
sub
nop
loop
fistps
push
xor
mov
xor
inc
push
out
sbb
push
pop
jae
insl
bound
adc
aaa
clc
fisttps
xchg
mov
mov
addr16
fwait
xchg
mov
test
jmp
cltd
push
dec
clc
or
out
jb
fisubrs
cmp
lahf
adc
aam
mov
sbb
add
das
cmc
dec
popf
cmp
movsl
inc
sbb
pop
jl
mov
movsb
ret
add
adc
mov
or
pop
decb
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
or
aas
and
jle
jp
jle
mov
inc
mov
and
pop
xor
je
adcl
imul
push
push
test
stos
xchg
dec
rcr
gs
jmp
inc
sub
mov
outsl
mov
cmp
adc
data16
mov
sahf
insb
aam
and
add
je
and
dec
ss
hlt
jle
dec
movsb
xor
jns
and
push
add
add
and
lret
jo
subl
push
push
xchg
pop
dec
ss
cld
jne
xor
jl
push
cmp
andb
dec
les
mov
xor
pop
stos
xchg
jnp
sti
inc
sub
and
outsb
push
mov
push
imul
pop
sbb
mov
out
push
scas
cmpsb
push
leave
mov
int3
sarb
jmp
cmc
push
pop
sahf
and
push
imul
jbe
aaa
enter
dec
rcl
cmc
enter
inc
shl
jmp
shll
cmp
pop
adc
clc
icebp
cli
repnz
xor
mov
fcomps
lea
xor
mov
jno
fadds
xchg
rclb
jbe
xchg
fmull
pop
pop
dec
aam
ss
loopne
sbb
adc
push
add
add
das
jae
fucomip
ret
shlb
test
mov
xchg
mov
clc
test
addb
cmp
dec
outsl
add
dec
testb
add
xor
push
test
clc
cmp
mov
or
icebp
jle
jge
cmp
mov
xchg
popf
mov
stos
cmp
push
xchg
xchg
outsb
loop
mov
jns
rorl
ss
mov
sub
aam
sbb
jb
mov
dec
xchg
repz
sbb
fwait
psubsw
repz
sti
mov
sub
add
sahf
cwtl
pop
out
fistpl
pop
push
mov
and
aad
fisubrs
sub
mov
adc
or
dec
jae
pop
inc
cmpsl
lods
or
push
cltd
icebp
sbb
sub
iret
aas
dec
in
cmp
test
jbe
sbb
int
fnstenv
in
cwtl
lock
xor
xchg
mov
adc
cmp
fnstsw
ds
lock
add
xor
psrad
adc
nop
repz
mov
lcall
arpl
mov
and
fs
mov
scas
sub
inc
out
scas
jle
push
repz
jnp
stos
push
es
sbb
cmp
lods
cmc
in
fnstsw
mov
orb
jae
loop
stos
lods
sbb
enter
insb
in
sub
pushf
dec
sub
es
in
sub
add
adc
dec
lods
es
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
push
mov
or
int3
sub
mov
bndldx
fists
xchg
imul
sarb
mov
or
pop
jnp
push
and
out
push
data16
fidivl
leave
iret
pop
in
and
repnz
cmp
add
push
out
pop
ret
inc
xchg
xchg
and
add
jecxz
or
xor
aam
mov
daa
and
imul
adc
pop
xor
aam
fidivl
inc
push
push
fidivl
add
lods
imull
jg
out
dec
movsb
dec
inc
loop
mov
mov
inc
or
aad
loopne
or
xchg
jne
cmc
in
inc
out
mov
push
adc
xchg
push
fiaddl
xchg
stos
test
adc
mov
jg
aad
push
insl
outsb
std
loopne
cmp
adc
adc
popf
xchg
ret
insb
popf
mov
jecxz
mov
aam
ret
mov
rol
push
jge
insl
or
inc
cld
sub
dec
nop
push
mov
lahf
adc
xor
pop
repnz
jle
mov
inc
pop
cmp
fcomps
mov
outsb
mov
es
xchg
dec
xor
ret
adc
inc
outsb
lahf
jl
inc
jo
jp
and
popa
insl
aaa
cwtl
stos
frstor
dec
xor
add
push
push
dec
stos
and
push
js
sbb
das
or
push
inc
sti
lods
scas
sbb
xor
mov
dec
jge
cli
daa
das
lds
mov
add
pop
loope
xchg
pop
sahf
sbb
sub
jl
push
lods
fstp
add
xor
fldt
lods
adc
punpcklbw
test
clc
addr16
pusha
les
xchg
or
dec
popl
push
sti
xorl
movsb
movsb
shl
mov
subl
mov
add
data16
dec
cmp
sub
aam
insb
pop
mov
sbb
es
and
rolb
shrb
ljmp
push
mov
push
enter
dec
push
inc
movsb
sbb
xor
je
cwtl
inc
xchg
test
ljmp
pop
mov
mov
loop
loop
dec
popa
loopne
shlb
filds
mov
pop
lods
sub
jbe
and
cwtl
lock
out
aad
mov
jmp
or
mov
inc
cltd
add
adc
mov
mov
aas
rcr
inc
stc
in
pop
imul
bound
scas
xor
pop
std
in
pop
imul
test
adcl
sbb
inc
and
in
jge
dec
xchg
popl
sbb
int3
test
mov
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
jle
jp
jle
imul
das
pusha
fidivl
out
arpl
jl
fs
pop
mov
push
sbb
mov
popa
test
pushf
xchg
sbb
and
jno
sarl
sub
push
xlat
inc
xor
adc
mov
jne
inc
rclb
clc
fistps
or
adc
out
pop
clc
ret
js
and
or
xchg
mov
ret
lahf
pop
xchg
pop
aad
jnp
loope
dec
cmp
pop
rolb
inc
mov
repnz
xor
push
inc
mov
pop
jl
and
pop
js
orb
and
xchg
add
scas
mov
inc
inc
pop
add
mov
push
mov
dec
push
pop
xlat
shll
inc
call
ror
push
dec
in
add
or
jae
or
ret
and
iret
gs
aas
sub
xchg
sar
inc
cmc
pmullw
inc
rcll
notl
mov
icebp
mov
jns
sbb
fldenv
movsl
in
push
loope
jo
data16
xor
data16
push
mov
test
and
stos
int3
mov
xchg
mov
jns
push
lahf
ficoms
inc
lock
cmc
mov
xor
bound
pop
mov
stos
mov
push
sbb
xor
gs
and
push
sbb
lods
add
jge
int3
hlt
stos
sbb
jbe
xchg
xchg
pop
fsubs
adc
xchg
outsl
and
pop
pop
pop
andb
jno
add
adc
adc
cmp
lret
and
xchg
jp
pop
inc
sbb
mov
sub
mull
imul
push
ljmp
lds
cmc
ficoml
xchg
and
repz
fisubl
and
mov
fmul
fcomps
mov
popa
lcall
inc
cmp
xor
pop
dec
jmp
mov
shrb
cmpsb
mov
mov
cmpsl
adc
sbb
fmulp
lret
fwait
push
add
or
xor
sbb
pop
push
out
lcall
daa
dec
test
notl
xchg
and
jbe
aas
jle
mov
aad
lret
outsb
mov
and
dec
mul
sub
std
test
sub
call
sbb
aaa
shl
inc
push
adc
sub
test
enter
add
pusha
ja
mov
adc
push
dec
xlat
clc
sarl
inc
mov
push
xchg
shl
jo
jne
fisubrs
repnz
inc
roll
xchg
je
nop
mov
or
dec
dec
xchg
add
fs
lcall
xlat
jno
xchg
sub
dec
call
add
mov
cld
into
inc
cmp
imul
jp
jle
cmp
aaa
ja
icebp
insb
test
outsb
into
inc
cmc
sub
out
stos
cld
jmp
std
push
cmp
js
push
loop
xor
jg
rorl
xchg
push
loope,pn
mov
sahf
test
popa
and
vpaddb
lcall
pop
cmpsl
dec
xchg
out
push
mov
rolb
jne
leave
mov
ja
shlb
add
pop
dec
or
je
lds
push
outsl
stos
jno
nop
inc
test
lret
ror
ja
xor
fisubl
int3
add
fnstcw
jnp
cld
mov
sub
push
push
or
jb
mov
test
cmp
lcall
sub
jmp
sbb
insb
cmc
sub
daa
out
add
sbbb
sarl
fs
and
jo
bound
pop
out
shrb
loopne
in
xchg
xchg
aad
jb
jno
fldenv
popf
xchg
lret
and
pop
shl
js
ja
adc
or
or
out
scas
or
jl
mov
sub
stc
bnd
adc
cmp
mov
xchg
movsb
adc
cli
jge
test
jl
cmp
sub
in
jae
xchg
addl
ja
mov
aad
clc
js
xlat
or
ret
xor
mov
jge
test
es
fimull
mov
ret
xchg
mov
fists
fwait
out
jns
sub
sbb
adc
jno
test
int
idivl
add
repz
mov
mov
out
and
xor
cmp
sbb
or
dec
stc
iret
roll
sbb
fmuls
lcall
cmp
or
jb
stc
clc
idivb
cld
into
fisubl
sub
jmp
push
jo
stos
addr16
xlat
fadds
sub
cmp
jecxz
in
rcrl
in
sbb
out
sbb
mov
jno
div
repz
out
cmp
sub
test
xchg
or
mov
mov
fwait
dec
scas
pop
mov
fcmovu
loop
sbb
mov
and
mov
adc
mov
or
sti
enter
test
adc
dec
cmpsl
nop
sub
ret
popf
into
aad
lcall
xchg
jge
pop
lret
hlt
add
xchg
pop
ds
lahf
jle
cmp
pusha
mov
push
icebp
push
movsb
add
mov
ds
scas
inc
out
lret
aam
imul
in
mov
ds
insb
cmp
sub
subl
or
cltd
mov
mov
fadd
aam
js
mov
and
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
std
inc
add
jle
jp
jle
and
aas
mov
mov
mov
stos
hlt
lods
jne
les
mov
push
frstor
fdivr
add
sbb
movsl
test
add
ljmp
xchg
mov
cmpsb
dec
and
das
jb
jae
cmpsb
jno
int
pushf
lcall
into
sub
rcr
lret
test
cs
daa
inc
ss
aaa
xchg
mov
ret
inc
sbb
pop
vpackssdw
mov
sub
fadds
jmp
dec
les
sub
and
and
inc
xor
je
mov
out
push
xchg
jp
dec
push
and
sbb
cmpsb
in
into
lock
pop
push
mov
jae
shll
je
xor
jg
or
pop
adc
mov
push
sbb
sub
daa
push
push
mov
fisubl
jbe,pn
inc
push
mov
test
xchg
dec
insb
subl
incl
dec
imul
sbbl
lock
xorl
lcall
inc
mov
mov
enter
inc
out
lock
aad
out
inc
iret
movsl
int
or
jne
es
jg
stos
and
sub
jl
call
int3
dec
add
push
testb
repz
cmp
pusha
add
lods
stc
aas
xchg
sub
out
nop
repz
xor
cli
inc
nop
xor
stos
addl
cltd
rclb
push
mov
or
dec
bound
pop
clc
mov
shll
lds
in
cmc
scas
test
jmp
std
sbb
ds
sbb
repz
repnz
int3
add
aam
or
inc
jb
out
inc
pop
pop
mov
push
shll
cld
fimull
xchg
push
dec
out
mov
adc
mov
repz
dec
dec
adc
sub
inc
mov
or
xchg
pop
and
sub
adc
pop
jne
cli
call
lea
inc
xchg
xchg
test
jmp
and
ds
fisubrl
test
into
inc
lret
pushf
jne,pn
pop
lods
mov
cmp
cmp
push
out
rol
mov
cmpsb
xchg
mov
xor
pop
leave
and
sbb
adcl
push
inc
andb
jae
ljmp
and
lods
fnstcw
mov
push
cmpsl
addl
fsts
es
or
arpl
cmpsb
cmp
dec
mov
test
fld
stc
leave
jl
mov
push
sbb
push
adc
ret
es
outsl
jle
mov
movsb
xor
leave
aaa
jo
outsl
inc
push
jmp
jo
mov
push
test
arpl
rol
mov
int
inc
and
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
or
sbb
jle
cwtl
scas
imul
adc
ss
sbb
fsts
jne
jnp
lret
add
insl
xor
jno
fisttpl
cmp
in
push
pop
pop
mov
in
rol
sbb
xorl
into
nop
pop
xor
fnstsw
aad
lret
outsl
out
mov
mov
hlt
inc
clc
pop
push
jl
sbb
mov
idiv
iret
adc
scas
bnd
enter
ja,pn
arpl
inc
push
pop
jno
xor
mov
loope
xchg
shll
jecxz
adc
pop
jne
push
out
out
fnstcw
jle
stc
xor
mov
andb
stos
pushf
rcll
aam
movsl
mov
sbb
cwtl
or
mov
cld
loopne
sbb
sbb
dec
and
push
decl
adc
or
pop
xor
or
and
xchg
cmp
xor
mov
or
pop
jmp
jge
loop
add
loope
dec
and
scas
jmp
xor
pop
mov
and
push
stc
or
mov
pop
into
call
dec
and
push
addb
insb
jp
inc
push
mov
pop
jae
add
jmp
xor
add
mov
cmp
mov
jmp
das
push
push
dec
lahf
mov
lea
push
mov
addr16
and
and
mov
cmc
jns
ss
test
adc
loopne
inc
pop
dec
push
icebp
fldt
dec
mov
or
ds
and
push
xchg
loope
js
inc
popf
call
add
sbb
ret
notl
xor
jne
or
cmp
arpl
test
loope
pushf
outsl
aas
sub
pop
mov
cmpsb
sub
shl
dec
cmp
mov
int3
push
sbb
mov
mov
mov
mov
cwtl
popa
xor
mov
xor
andl
cmpsb
cli
sbb
jb
insl
push
jns
jmp
jns
ds
pop
repnz
cmp
pop
add
jp
and
sub
xor
pushf
fcoms
call
xchg
xchg
scas
pop
in
inc
out
mov
xchg
dec
xor
xchg
fidivs
test
pushf
mov
sbb
xor
shrl
mov
jl,pn
lret
adc
pop
stos
mov
hlt
call
push
repnz
or
fwait
movsl
hlt
lock
jne
sub
mov
repnz
pop
loop
dec
hlt
fwait
xor
sub
add
cmp
aaa
xchg
js
aaa
movsb
lock
add
sbb
mov
and
fwait
fs
push
mov
inc
imull
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
push
les
daa
mov
jge
jle
inc
jle
lret
mov
pop
mov
mov
rolb
out
ffree
add
add
pusha
add
mov
sar
ja
bound
jo
sbb
aad
mov
pop
mov
push
sbb
xor
loopne
push
mov
cwtl
mov
in
popf
mov
xor
and
test
in
lahf
in
and
dec
addb
aad
loope
insb
xor
jle
test
sub
jb
sub
push
xchg
mov
insb
rolb
hlt
in
add
lock
stc
add
sub
inc
xor
sbb
stc
push
add
out
popa
jb
test
add
out
rclb
pop
xchg
inc
push
pop
or
pop
std
mov
jle
inc
inc
in
aaa
cmp
lock
jl
popa
and
cmc
mov
xchg
es
push
pushf
cmp
imul
cmpsb
lods
lods
ret
mov
xchg
xchg
adc
ror
loope
and
mov
popf
inc
or
mov
out
and
xchg
add
jne
xchg
push
adc
mov
inc
xchg
repnz
aaa
jnp
pop
sub
imul
push
add
jae
dec
and
neg
sbb
stos
gs
fidivrl
cli
pop
insb
add
dec
addr16
lea
dec
aad
or
imul
les
mov
stos
in
ret
sbb
pop
js
mov
xchg
xor
imul
sar
int
aas
inc
shll
pushf
push
mov
out
mov
std
push
addl
imul
loop
push
rolb
or
pop
mov
xacquire
stc
jb
sarl
popl
sub
dec
add
dec
bound
idivb
jp
je
sub
mov
sbb
xchg
or
out
xor
js
cmp
or
outsb
xor
sub
jbe
fisttpl
xchg
stos
cmc
sti
cmc
adc
pusha
inc
jmp
and
or
fdivrs
ret
dec
fcoml
std
mov
mov
jecxz
pop
lds
into
add
jp
mov
icebp
xchg
xor
aam
out
pop
loope
dec
aas
xchg
mov
fdivl
repz
jnp
add
mov
xchg
cmpl
mov
shrl
sub
push
cmpsb
inc
insb
scas
mov
aam
inc
mov
rorb
call
out
loopne
add
idiv
push
fisubl
sub
adc
adc
test
xor
les
pop
push
enter
cmc
outsb
mov
xchg
inc
je
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
and
icebp
cli
jle
in
imul
imul
jo
scas
stc
or
add
jp
pop
adc
imul
bound
sbb
adc
jmp
sub
sti
loop
out
mov
mov
test
cmp
popf
ret
sbb
push
mov
mov
jnp
jge
hlt
or
les
or
fwait
xchg
lods
push
ja
ds
out
mov
push
jmp
in
lcall
out
hlt
push
fwait
pushf
adc
popf
jecxz
cltd
call
xchg
out
mov
adc
or
jecxz
fisubs
jmp
in
pop
fidivs
mov
inc
int
push
jns
stos
inc
nop
popf
jno
aad
lea
orl
mov
test
dec
lods
dec
test
loop
mov
mov
adc
pop
addl
and
aam
fdivrp
push
pop
jge
push
mov
cwtl
int
mov
add
adc
adc
movq
sbb
faddl
std
cld
int3
pop
mov
inc
popa
lods
mov
dec
jns
jne
mov
ret
hlt
mov
mov
sbb
lock
daa
es
lahf
push
push
mov
iret
mov
loope
insl
aaa
movsb
das
push
push
popl
mov
in
leave
sti
rcrl
call
ret
push
push
rcrb
arpl
mov
mov
mov
or
cli
and
dec
mov
ret
out
jg
sahf
icebp
pop
push
cld
xor
xchg
addb
mov
mov
je
push
mov
in
adc
add
ja
test
xor
xchg
inc
xchg
dec
shrl
xor
sub
push
imul
outsb
mov
jl
xchg
test
hlt
add
xor
mov
pop
decl
call
jo
and
jge
lods
icebp
push
sarl
and
call
in
pop
out
jbe
pop
sti
dec
sub
out
jmp
mov
push
cmc
cmp
push
test
aaa
daa
stos
add
mov
and
decb
ja
mov
pop
add
adc
adc
xorl
arpl
dec
mov
mov
andb
enter
ss
imul
gs
inc
pop
xchg
iret
inc
cmp
in
fwait
mov
sub
stc
negl
jns
mov
nop
loop
add
jae
cmp
loop
fstpl
subl
dec
sbb
and
fsubl
pop
iret
enter
mov
adc
or
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
sub
mov
xchg
jle
jge
jle
sub
cmp
pop
aam
adc
jbe
fidivrs
testb
stos
cmp
add
sub
xor
aad
stos
jp
aam
mov
mov
mov
cmp
idivb
dec
clc
addr16
mov
jbe
or
fs
jo
loope
fldcw
cmovne
pushf
movsl
mov
test
and
sub
sub
loop
out
add
mov
mov
mov
pop
ja
inc
filds
jno
cli
or
dec
in
pushf
insl
fmul
inc
cmpsb
lret
inc
testb
clc
outsb
add
mul
add
cld
shlb
pop
fcmovbe
sbb
xor
jne
int3
xchg
dec
int3
or
xor
push
fiadds
xor
inc
jl
mov
movb
mov
test
xchg
das
sbb
ja
int3
sbb
or
cmpsl
mov
ljmp
jge
pusha
inc
sub
dec
dec
inc
xchg
xchg
sub
push
dec
ss
outsl
jns
hlt
icebp
push
mov
adc
and
mov
int3
pop
mov
dec
push
out
or
orb
sub
and
sbb
jge
idiv
add
aaa
movsl
or
jo
xor
cltd
sbb
dec
jno
out
xor
lock
ljmp
shlb
jnp
std
and
cmpsl
shl
pop
insl
mov
inc
pop
jp
and
xchg
xlat
xchg
pop
fstpt
data16
mov
fcomps
mov
adc
xchg
pop
xor
mov
xor
pop
mov
xchg
adc
movsb
push
outsb
scas
dec
test
sub
jae
xor
or
ja
call
mov
out
pop
push
gs
sbb
xor
bound
mov
cmp
lods
nop
fadd
gs
shrb
mov
mov
mov
dec
das
clc
or
xor
and
nop
push
outsl
sub
ret
sti
and
test
push
cmp
push
addl
ss
in
nop
dec
lret
int
mov
arpl
int
lea
adc
aaa
adc
mov
add
sbb
mov
mov
inc
test
jne
cmp
pop
aaa
mov
int
fcmovnb
insl
cmp
mov
dec
xor
cmp
es
fnop
lahf
in
scas
cmp
inc
les
adc
lahf
jo
mov
inc
rorb
push
icebp
lds
mov
sub
call
std
inc
hlt
ret
xchg
dec
jge
lods
ds
cs
mov
mov
jl
fldenv
fiaddl
or
push
imul
jns
mov
imul
pop
scas
or
stos
inc
or
pop
inc
rol
fists
jmp
push
mov
mov
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
dec
mov
lds
jle
pop
pop
or
pop
sub
jg
enter
pusha
rcr
push
fstps
sbb
fldenv
outsl
mov
mov
ret
insl
pop
pop
mov
mov
std
mov
inc
fnstsw
nop
test
in
daa
push
sbb
mov
jne
lahf
scas
dec
push
pop
and
mov
clc
or
cmp
sbb
pop
out
xor
xor
xchg
push
in
leave
ret
and
jl
pmaddwd
xor
push
lods
sub
pop
xor
nop
cmp
lea
and
pop
movsl
jg
cli
mov
xlat
in
in
repnz
xchg
push
lea
mov
push
push
ja
dec
and
in
xor
cmp
out
xchg
aaa
lret
bound
fnstenv
hlt
and
or
dec
adc
fisubrl
inc
jo
ja
jge
sub
jb
sahf
inc
out
mov
mov
add
sbb
popa
aas
mov
mov
xor
inc
shl
push
pushl
jnp
push
cmpsb
scas
ds
xchg
aam
cli
neg
into
xchg
outsl
nop
aad
call
ja
mov
jne
sti
mov
iret
ja
icebp
push
std
xchg
sbb
lock
lahf
jge
mov
jg
inc
add
or
popa
iret
mov
dec
cmp
cmpsl
fcompl
fnstcw
push
mov
inc
dec
cmp
jg
mov
and
mov
loop
adc
stos
ljmp
cli
adcl
xor
cmp
dec
nop
scas
icebp
cmp
fwait
lods
mov
add
sub
sbb
xchg
ret
xor
xlat
cmp
xchg
jg
jp
push
sub
int3
cmpsl
jnp
test
lock
fmull
les
imul
xor
ds
test
xor
adc
imul
insl
or
xor
push
jo
inc
xor
cmp
out
pop
jno
ret
movl
aad
push
mov
mov
mov
lods
dec
mov
in
fcompl
bound
push
lds
push
xor
test
dec
dec
jo
jecxz
lret
xor
jbe
cmc
xchg
rcrb
iret
mov
outsl
push
enter
das
insl
push
js
mov
pop
adc
pop
inc
pop
mov
xor
adc
mov
push
xchg
je
das
ret
shrl
sub
rorb
xchg
mov
pop
dec
cmpsb
pusha
daa
push
lock
cmp
test
enter
sub
lds
cmp
sub
cmp
xchg
xchg
pop
icebp
dec
jbe
aas
cmpsb
popa
movb
fidivrs
fucomi
jecxz
pop
out
adc
mov
sub
inc
stos
lock
sbb
out
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
aam
sub
jle
and
inc
orl
sti
mov
mov
inc
insl
jb
insb
xchg
lahf
outsl
sub
mov
shr
mov
cmpsl
loopne
jne
test
mov
outsb
fisttpll
jge
ss
aaa
fcmovnb
mov
fisttpll
sub
dec
out
sbb
fnstsw
push
xchg
lret
push
inc
repnz
or
cmp
sub
fadds
push
pusha
outsl
lods
jne
fisubrs
sub
xor
cmp
je
aam
push
clc
pop
push
inc
es
jae
xor
pushf
pop
in
mov
mov
pop
dec
lods
fildl
jns
and
sub
inc
std
push
push
lock
je
in
lea
jns
jmp
adc
mov
xchg
xor
jbe
addb
mov
jg
movsl
jns
bound
lret
aad
push
inc
or
push
mov
cmp
sub
popa
mov
mov
fisubs
cmpsl
loope
mov
pusha
jp
mov
imul
mov
leave
cld
xor
popl
inc
mov
sbbb
test
jbe
jb
jbe
in
fdivrl
or
mov
pop
mov
mov
fisubl
test
aas
sub
loopne
mov
xchg
mov
mov
pop
push
xchg
push
mov
mov
mov
imul
ret
loop
into
shrl
mov
and
sti
jg
mov
scas
adc
xchg
repnz
mov
js
test
icebp
dec
sub
int3
icebp
dec
aaa
push
rcr
dec
push
sahf
jp
test
xor
lock
mov
mov
aas
and
out
xchg
scas
ja
popa
out
icebp
popf
mov
mov
mov
cltd
movsb
mov
mov
xchg
inc
push
inc
mov
movsl
add
mov
test
loopne
imulb
ret
cmp
icebp
or
cmc
lahf
out
lock
xchg
mov
jg
or
lods
adc
mov
sbb
xchg
out
adc
insb
pop
jbe
add
loopne
aaa
xchg
into
ss
fcmovnu
lods
les
jle
arpl
sub
lcall
out
jp
movsb
rcrb
mov
bswap
pop
imul
xchg
mov
and
push
popf
in
mov
icebp
pushf
movsb
add
arpl
sub
clc
int3
data16
xor
fmull
movsl
lea
sub
mov
scas
jg
dec
loopne
xchg
cmpsb
add
ror
xlat
sbb
push
pusha
roll
addl
into
dec
out
lahf
ficoml
lret
push
shll
leavew
in
xchg
jl
and
jae
jo
data16
xchg
xor
lea
jmp
das
subb
mov
xor
push
out
movsb
cwtl
ss
jle
jge
jle
aas
mov
jge
mov
inc
lcall
cld
jecxz
xchg
gs
sub
xchg
inc
fsubrl
mov
mov
cmpsb
mov
faddp
pop
test
mov
lret
test
cs
neg
and
xchg
jmp
clc
insl
fmull
adc
imul
fcoml
xchg
adc
sbb
sbb
hlt
out
mov
push
mov
mov
cmp
pop
jo
insb
and
mov
inc
mov
inc
xchg
xor
add
jno
jbe
mov
push
cmp
jne
repz
add
dec
outsl
dec
les
jae
or
or
pop
cmp
imul
mov
imul
imul
sub
mov
adc
push
test
mov
push
add
pushf
dec
stos
stos
outsl
and
jle
cmp
sbb
xchg
fsubrl
ljmp
ds
sub
mov
and
cmc
mov
or
insl
jnp
sahf
xchg
sbb
movsl
ljmp
fs
push
sahf
push
jl
inc
push
or
fnstsw
xchg
rcrb
call
gs
shrl
out
movsb
imul
ss
nop
push
lahf
xor
in
push
xor
data16
into
lods
cmovge
lret
or
adc
cmp
mov
ds
insb
daa
jl
scas
leave
outsb
fnstenv
xor
xor
aad
subb
cs
and
fidivrl
insl
sub
loope
sub
aas
mov
mov
or
movsl
fstps
xor
lea
hlt
jb
movsb
jle
sub
mov
mov
mov
push
mov
insb
lret
jns
lret
int3
insl
push
je
pop
jns
xchg
out
clc
mov
lahf
arpl
sarb
pop
and
inc
pop
in
js
sub
and
test
dec
inc
mov
sub
push
and
mov
mov
mov
movsb
mov
jmp
insb
scas
ret
out
and
mov
loope
sbb
lret
push
and
pop
rcll
cmc
push
std
fisttpl
subl
fisubrs
cmpsl
mov
push
inc
fwait
scas
lock
mov
push
xchg
or
dec
jmp
push
sbb
lret
mov
and
lods
shrb
cwtl
popf
cmpsb
mov
jae
shrb
mov
mov
mov
cld
mov
cmc
shrb
xor
cli
pop
jbe
push
leave
mov
btr
stos
pop
imul
and
inc
jo
push
les
ret
pop
stc
jae
pop
push
or
add
add
cmp
adc
aad
fcoms
mov
jle
jge
jle
add
adc
out
in
int
inc
push
sub
push
repz
jp
xlat
or
mov
repnz
popf
repz
movsl
nop
xor
xchg
lea
lret
cs
int
xchg
gs
mov
and
push
stos
dec
pop
jecxz
push
cwtl
je
rol
lods
clc
lods
jne
mov
sbb
fnstenv
in
fndisi(8087
adc
in
sbb
pop
cmpsl
test
xchg
pop
pop
xchg
xchg
jmp
fndisi(8087
mov
aaa
xor
pop
jmp
jmp
mov
jmp
push
fwait
lahf
lock
aas
cwtl
cmp
xor
pusha
and
andl
push
js
sub
add
dec
dec
mov
xchg
push
and
sahf
out
xor
xor
out
mov
fs
xchg
lock
pop
stos
jp
add
pop
sub
and
faddl
jnp
sbb
test
divb
aad
sub
jle
adc
pop
mov
push
jbe
push
out
adc
sub
enter
ja
push
push
inc
mov
inc
sub
lds
adc
ret
lods
jg
inc
dec
xchg
inc
jo
pop
int
push
add
dec
outsl
lods
cmpsb
xor
jno
sti
adc
mov
data16
mov
inc
jg
cmp
cmp
ss
sbb
imul
out
repz
dec
ficoms
out
sarl
or
insl
inc
pop
addr16
popa
inc
addr16
jbe
push
jg
popf
ret
lahf
dec
mov
cmp
jp
xor
aad
daa
stos
mov
data16
adc
xor
mov
pop
add
cmc
addb
daa
mov
scas
repnz
lcall
push
mov
sub
pusha
data16
aaa
hlt
and
shlb
sbb
popf
sub
mov
jge
inc
pop
mov
faddl
int3
rorl
push
jp
mov
mov
jmp
scas
smsw
js
inc
inc
insl
insb
pop
sbb
frstor
cltd
inc
mov
ret
push
lret
cwtl
mov
push
lret
daa
popf
les
loop
fisubrs
mov
or
adc
cmp
outsb
insl
inc
and
jg
in
sbbl
mov
lcall
fisubrl
xlat
shl
jp
xchg
and
push
imul
out
xchg
xchg
pop
lcall
mov
xchg
xchg
dec
clc
mov
je
pop
xor
aad
or
into
jnp
cs
mov
jns
mov
in
pop
enter
mov
outsl
in
gs
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
andps
jle
jge
jle
shll
jp
inc
push
cmp
push
push
je
popa
insl
sbb
adc
outsl
mov
out
pop
lods
loope
xor
jno
pop
mov
ret
xor
or
push
push
xlat
out
xor
fildll
je
sarb
adc
pop
fildl
inc
insb
jl
xchg
jbe
mov
mov
xchg
jl
neg
jbe
xchg
and
and
push
mov
out
out
mov
iret
xor
sub
push
in
sub
xchg
sub
fwait
mov
mov
xchg
mov
add
fwait
sub
adc
ljmp
jecxz
sti
push
enter
shll
out
fsqrt
bnd
xor
ret
mov
and
aam
jmp
cmpsl
mov
fdivrs
adcl
cli
pop
sarl
jge
gs
mov
xchg
movsl
lds
sbb
pop
cmp
movsl
scas
notb
sahf
mov
je
mov
push
fwait
dec
fs
mov
icebp
lret
and
shl
fptan
pop
mull
call
sti
xchg
add
es
xchg
or
lea
xchg
scas
pop
add
jno
push
idivb
add
fisttps
add
je
xchg
jns
nop
scas
hlt
xor
xor
fistl
pop
jmp
jmp
mov
movb
sbb
rcr
sbb
fidivrl
sbb
or
sbb
adc
pop
mov
data16
out
xor
or
ss
sti
cmp
jecxz
icebp
xchg
dec
shrl
xlat
push
fldenv
jno
fwait
jg
nop
xchg
or
fwait
lahf
mov
repz
jmp
fs
cmp
dec
or
dec
adc
and
pop
pop
cli
push
cltd
out
stc
in
leave
call
xchg
sbb
adc
pop
jo
out
pop
and
test
dec
outsl
pop
or
leave
mov
pop
xor
mov
mov
sbbl
lret
ret
dec
call
inc
scas
and
or
stc
fcompl
sbb
add
scas
dec
pop
jnp
jmp
inc
out
mov
icebp
int3
insb
scas
fisubrl
ret
loop
jbe
in
mov
mov
inc
cmp
out
mov
add
test
sbb
xor
add
mov
and
mov
mov
add
pop
call
dec
pop
sub
out
add
xchg
push
test
sub
adc
scas
xchg
jb
loope
fcoml
lods
in
inc
push
hlt
je
or
pop
sub
or
cld
or
sub
js
iret
and
test
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
ljmp
jle
push
jg
jle
cs
pop
aaa
cmp
jbe
movsb
insb
icebp
loopne
mov
lret
lods
inc
in
adc
mov
push
jg
mov
jbe
out
jae
fistpll
mov
fsubrl
xlat
loope
push
in
mov
add
hlt
xor
les
jne
inc
pushf
or
sub
in
xchg
ljmp
in
arpl
ja
pushl
adc
add
nop
jg
out
roll
inc
or
dec
mov
outsb
movsb
push
xor
add
cmc
jp
in
add
jl
adc
adc
jne
inc
outsl
leave
pusha
scas
jl
mov
or
inc
sub
push
or
xor
nop
dec
xlat
push
xchg
cli
addr16
jns
sbb
inc
sub
lds
jno
lds
dec
or
or
sub
mov
cld
in
bound
mov
inc
pmaxsw
call
push
mov
popa
xchg
jbe
cmp
das
cmpsl
and
jo
cwtl
push
jae
fsubrp
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
notl
push
jg
jle
mov
and
scas
dec
lret
inc
mov
ss
xor
or
repnz
adc
negb
push
push
lret
fldcw
jns
test
dec
adc
xchg
xor
sbb
dec
or
mov
nop
cmp
adc
fwait
stos
in
xor
or
call
fadds
fidivrl
nop
call
icebp
jl
cmp
aas
test
je
push
stos
fisttpl
xchg
mov
stos
leave
and
push
movsl
push
faddl
add
xor
cmp
cmc
cmp
addr16
ljmp
sahf
fdivrl
xchg
stc
cmp
lock
adc
mov
cmp
cmc
repnz
jmp
and
add
sub
fbld
push
xchg
push
inc
adc
mov
adc
aaa
in
or
lahf
xchg
hlt
insl
push
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
fnstenv
mov
jle
sbb
push
enter
xchg
xchg
mov
movl
jno
fldt
xchg
pop
jge
inc
out
jl
inc
push
outsb
xchg
test
dec
ja
scas
in
inc
fildl
cmc
subl
mov
sahf
test
or
cmp
jne
popf
or
jmp
cmp
int
or
mov
xchg
xor
mov
fidivs
bound
dec
mov
leave
ja
ljmp
aaa
jge
cmp
mov
fadds
jmp
push
and
inc
insb
pushf
sbb
mov
dec
cmp
test
in
fs
shl
lds
push
lods
push
add
mov
addr16
mov
int3
mov
sub
or
dec
idivl
pop
negb
adcb
pop
sub
cmp
cmc
insl
rcl
pusha
pop
push
pop
aaa
xor
arpl
mov
rclb
mov
les
mov
sbb
jecxz
mov
sti
sub
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
outsl
jo
out
mov
jle
mov
jge
lods
push
jecxz
jge
inc
imul
inc
push
imul
add
adc
sbb
cmp
xchg
jo
and
xor
push
repnz
push
mov
push
sbb
dec
mov
inc
insb
fwait
mov
bound
cmp
mov
leave
rcrl
dec
in
incb
xor
push
dec
mov
and
imulb
jmp
inc
pusha
or
sub
psllw
cmp
adc
xlat
test
sahf
lcall
xchg
les
scas
decb
cmpsb
mov
dec
mov
cmp
mov
daa
adc
xor
dec
hlt
sub
test
movsl
int
icebp
pop
lods
in
jmp
mov
bound
imul
push
mov
icebp
je
les
dec
mov
cld
int3
in
movq
push
pusha
cld
and
aad
pusha
and
fstps
das
arpl
flds
mov
xchg
mov
leave
iret
inc
xchg
imul
jno
push
orl
stos
ds
pop
test
jae
pop
mov
outsb
inc
int3
std
in
or
inc
flds
lahf
add
sub
pop
xchg
adc
pop
divl
mov
pop
jno
loop
sbb
out
pop
iret
lods
sbb
sbb
imul
and
jb
cmc
push
test
sub
inc
sub
lds
xorl
sub
ficompl
les
hlt
jg
loope
push
jmp
or
in
or
push
ret
push
mov
fisubl
inc
mov
lea
stc
dec
jl
cmpsb
lods
aad
movsb
in
push
les
jle
icebp
mov
test
xor
icebp
lods
popa
imul
inc
out
jno
xchg
lock
adc
adc
out
inc
lcall
lcall
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
xchg
int3
jb
fsts
pusha
adc
push
roll
sbb
outsb
fwait
ficomps
mov
lods
push
and
popf
mov
pop
test
cmp
movsl
in
inc
test
pop
mov
mov
dec
jl
pushf
sub
loop
loope
outsl
cmp
mov
int3
sahf
pop
pop
into
lret
push
cmp
mov
or
sbb
mov
inc
cmp
ret
inc
fidivl
mov
mov
pop
xor
cld
mov
sti
in
loop
mov
filds
cmp
jge
sbb
mov
leave
jno
add
cmp
dec
mov
push
nop
fwait
sti
jno
mov
and
rorb
popa
inc
aaa
jg
xchg
out
call
adc
cmp
aam
sub
sbb
sub
cmpsl
or
cmp
cmp
jmp
and
push
jne
inc
cmp
lcall
std
mov
insl
adcl
fiadds
cld
push
and
iret
jecxz
bound
leave
push
lods
or
sub
mov
repz
sub
mov
imul
aaa
mov
mov
fwait
xor
or
cmc
jl
mov
cmp
addl
es
pop
pop
rcrl
hlt
add
sbb
inc
ds
xchg
pop
pop
in
cs
test
mov
and
cmpb
add
pop
in
xchg
gs
jnp
or
xchg
das
ljmp
adc
push
add
mov
ljmp
push
aas
adc
push
cli
push
cli
jg
push
push
jno
dec
mov
imul
dec
and
ljmp
add
adc
das
mov
ret
push
and
aam
dec
inc
lahf
int3
cmp
sarl
push
cmp
dec
sahf
cmp
movsb
mov
fdivr
xchg
xchg
push
push
cmpsb
ret
mov
cwtl
pop
repz
sub
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
mov
loope
mov
pushf
idivb
jl
testb
cmpb
mov
add
adc
pop
insl
sahf
push
xchg
ret
imul
sub
stos
pusha
and
fmuls
mov
cmp
in
cmovs
jbe
fnstcw
in
clc
sahf
xor
jne
shrb
sbb
les
add
aas
pop
data16
out
sbb
jle
mov
dec
cli
test
push
out
imul
mov
nop
aas
jl
enter
xor
lea
pop
data16
jns
jge
scas
lahf
or
cmp
cwtl
bound
cli
sbb
mov
mov
sbb
in
movsl
cld
lahf
cmpsl
addl
mov
mov
loop
mov
out
push
popf
out
lret
sbb
stc
and
mov
leave
push
pushfw
cmp
in
das
out
orb
dec
xor
jp
mov
dec
xor
stc
sub
out
mov
scas
negb
mov
scas
insb
cwtl
repnz
incl
out
or
inc
inc
ja
push
mov
mov
fdivrs
shr
stos
imul
sub
lods
pop
pusha
push
add
adc
stos
insl
add
jg
xorl
push
rcrb
push
mov
enter
vcvtsi2ssl
cmp
xlat
les
and
jb
cmp
dec
leave
icebp
xorl
mov
push
mov
mov
leave
sub
sar
sbb
push
fisubl
push
ficompl
gs
mov
roll
adc
aas
in
js
sbb
sbbl
rorl
mov
pusha
jg
pusha
in
cmpsl
jo
fs
mov
jno
jo
in
loop
leave
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
loopne
fistl
lcall
pop
push
or
adc
pushf
lahf
pusha
outsb
inc
int3
fs
push
pop
fmuls
nop
xlat
xor
sar
mov
roll
and
jmp
pop
imul
and
xlat
mov
pusha
sti
dec
mov
lods
lds
imul
add
outsl
fwait
sbb
hlt
testl
inc
test
push
stc
outsb
flds
shl
fbld
mov
outsl
dec
xor
rcrl
and
cmp
jnp
jmp
sahf
mov
icebp
das
inc
cltd
pop
cmp
push
push
ds
push
and
int
add
sbb
psrlq
mov
jecxz
mov
lds
push
lahf
ds
push
pusha
pop
fcmove
nop
movsl
andb
sbb
push
in
jl
xchg
call
push
mov
mov
lcall
notl
ret
cs
scas
inc
push
pop
fwait
sbb
shrb
pop
push
out
in
mov
rorb
fmulp
insb
pop
xchg
shl
into
fldt
aas
ret
dec
lods
sub
mov
cltd
sbb
mov
mov
ret
pop
pop
mov
je
adc
fs
jge
daa
jmp
push
adc
mov
push
lret
repnz
insb
test
add
pop
mov
cli
std
test
pop
add
adc
cltd
repz
push
mov
inc
sub
sbb
xor
test
mov
push
icebp
mov
jp
mov
roll
lock
xlat
pop
and
sbb
mov
jle
lds
call
repnz
lods
lods
movsl
jecxz
jns
rclb
push
lock
push
sahf
roll
das
std
mov
repnz
dec
insb
icebp
mov
cmpsb
mov
mov
cli
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
lods
std
pop
shrb
jle
xlat
inc
adc
std
push
dec
test
or
push
das
jb
outsl
stos
jnp
jle
mov
loopne
mov
or
or
repz
sbb
pop
je
or
enter
ret
sbb
fs
addr16
pop
negl
ficomps
arpl
fdivrl
test
in
les
fcompl
pop
inc
repz
ja
mov
xor
adc
lret
std
pop
push
hlt
dec
mov
jne
mov
or
out
aaa
xor
inc
xchg
push
cs
mov
push
dec
mov
rcll
fnsave
loopne
xchg
jge
and
jns
je
jge
mov
inc
add
and
repnz
sbb
andb
add
mov
mov
push
inc
fidivrl
fidivl
sub
jo
mov
imul
lret
popa
lret
imul
out
adc
sbb
mov
fdivrs
sbb
inc
jecxz
insb
bound
aam
xchg
mov
ficoml
jo
mov
xchg
in
das
and
enter
and
cld
loop
outsb
scas
jae
fistps
mov
pop
pop
pop
mov
aas
aam
jge
mov
cmp
or
das
xor
push
in
jp
insl
jbe
xchg
test
jecxz
add
popa
add
adc
and
ret
sti
js
pop
in
mov
sarb
and
mov
dec
call
or
cmpsl
je
fwait
testb
lret
jecxz
push
ja
sub
cltd
je
jnp
repnz
mov
cmp
dec
push
adc
inc
mov
addl
push
cwtl
xchg
cmpsb
adcb
and
lock
and
fs
daa
push
cmp
xor
and
jno
and
into
cmp
scas
fs
mov
jne
xchg
sub
cmpsb
cmp
xor
dec
stos
popa
fwait
imul
gs
xchg
sub
in
xchg
xor
pop
in
or
movsl
xchg
stos
outsl
and
pop
push
mov
stc
pop
mov
divb
cmpb
jno
shlb
push
ds
push
pop
shlb
push
sbb
inc
popa
add
jp
jb
rcrb
shl
ljmp
pushf
mov
std
jns
adc
mov
jbe
push
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
cwtl
xor
jle
jl
jle
repz
sub
das
loop
mov
icebp
mov
scas
dec
rcr
jbe
xchg
das
ljmp
mov
push
push
test
arpl
rorb
push
dec
sub
icebp
sub
pop
clc
cwtl
movsb
mov
fidivrs
cmp
call
iret
ss
pop
push
lds
mov
cmp
xor
fidivl
xor
jg
push
xor
das
jns
lret
cli
mov
mov
and
lock
cmc
push
or
push
insb
jae
jo
cmp
pop
sub
pop
adc
mov
xchg
leave
lcall
mov
pop
aaa
jne
dec
cmp
dec
dec
and
adc
ffree
not
std
icebp
dec
rolb
fimull
insl
hlt
jle
push
inc
pop
push
xor
dec
cwtl
adc
repz
int3
sub
mov
add
inc
cld
sbb
aaa
mov
add
stc
sbb
push
sbb
jbe
pop
notl
mov
in
jg
bound
sub
pusha
fldt
lret
sarl
fisubl
adc
out
mov
jle
test
mov
jge
lock
test
add
or
aas
mov
push
sbb
addr16
popa
add
xchg
pushf
mov
xchg
mov
test
mov
adc
or
cmpl
rorl
addr16
test
jb
int
mov
dec
repz
movsb
mov
mov
cmpsb
cld
stos
clc
sbb
adc
pop
inc
pusha
push
sbb
js
xor
movsb
or
mov
in
mov
imul
sbbb
jbe
cmp
dec
into
mov
jb
imul
pop
outsl
xor
and
jg
dec
in
jecxz
pop
xchg
lods
fistl
adc
push
push
pop
outsb
je
lret
lcall
jge
movsl
jne
sbb
push
cwtl
fildll
sub
lods
repnz
pop
sub
jp
es
mov
xor
xor
ret
mov
stos
mov
jge
mov
shll
out
xor
xchg
outsl
fsubrl
and
mov
lods
out
das
por
dec
dec
gs
push
push
or
sub
cmp
sahf
mov
add
call
fisubl
ret
or
adc
mov
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
into
test
and
mov
jle
jl
jle
test
xor
test
fnstenv
xlat
mul
xchg
xchg
cmp
movsb
mov
sub
faddl
mov
cmp
push
loop
out
push
insb
xchg
jg
ja
arpl
pop
mov
or
cmp
adc
inc
repnz
pop
clc
icebp
icebp
test
push
stos
push
sbb
xor
xchg
or
mov
mov
jb
or
and
xor
cwtl
sbb
movsl
mov
xor
or
nop
div
fnstsw
xlat
inc
enter
jo
fs
push
loopne
movsl
addr16
xor
mov
xchg
in
mov
test
rcrb
clc
push
push
push
cmp
add
sbb
movsl
cmp
mov
addr16
cli
ljmp
out
inc
call
int3
cmp
daa
cmp
stos
in
aad
std
push
sbb
cmp
jecxz
jno
in
xchg
inc
mov
sbb
mov
adc
adc
js
je
popa
pusha
mov
movsb
cmp
lea
cmc
adc
mov
callw
cltd
dec
stos
mov
jb
fdivr
mov
push
fistps
cmp
dec
mov
cld
mov
je
icebp
rolb
inc
hlt
test
cwtl
xchg
lea
in
out
dec
inc
or
sbb
and
cli
cwtl
fbstp
std
js
pop
stos
ds
xchg
in
push
xor
movsl
loop
sbb
sbb
push
outsl
sub
shlb
pop
ret
out
fiadds
dec
xchg
or
ds
push
xor
push
popf
xchg
jmp
sub
mov
mov
fistpl
lock
in
cmp
push
mov
movsb
mov
movsb
inc
bound
add
insb
push
sub
rorl
push
xchg
test
dec
daa
push
subl
orl
movsl
loopne
adc
xor
stos
mov
jp
xor
decl
cmp
adc
and
fmuls
xlat
arpl
or
pushf
pop
hlt
push
fwait
mov
in
sbb
add
jo
inc
and
and
mov
pushf
lea
push
pushf
mov
mov
cmc
xor
insl
xchg
cs
dec
push
icebp
xor
add
cmp
ljmp
dec
cmc
ljmp
pushf
jmp
icebp
add
jmp
lock
arpl
sub
scas
ret
roll
mov
jle
jl
jle
xor
icebp
sub
push
aaa
stc
dec
xchg
addr16
scas
stos
dec
or
inc
popf
mov
mov
mov
xor
cmp
or
out
pop
and
cmp
jne
test
or
btc
addr16
mov
outsl
or
pop
or
inc
in
es
and
and
subl
jno
adc
scas
mov
pop
xorb
mov
jno
or
jle
movsb
mov
addr16
xchg
lods
adc
in
pop
push
out
lret
aaa
shll
xchg
mov
add
push
fnstcw
add
out
xchg
fidivs
arpl
push
add
in
pop
negl
rorl
jg
push
xorl
out
mov
jge
subb
sub
add
push
movl
jge
push
mov
test
mov
cmp
int3
xor
xchg
std
imul
xchg
or
nop
sbb
sbb
inc
fidivrl
orb
stc
and
lcall
in
jmp
sub
in
pop
and
int
mov
jecxz
add
aam
je
push
sub
push
movsl
xchg
pop
shlb
sbb
mov
sub
add
cmp
xchg
dec
adc
in
fstl
fnsave
aam
or
cmpsb
test
xchg
jbe
pushf
nop
pop
cmpsl
bound
mov
fwait
sbb
scas
xchg
test
aaa
out
lock
mov
call
pusha
andl
test
cmp
pop
subb
and
sbb
mov
dec
orb
jb
rep
pop
and
fidivs
ds
sbb
or
mov
sub
inc
adc
xchg
cmp
pop
aaa
enter
adc
inc
pop
into
mov
pop
aam
xchg
xlat
outsb
dec
popf
sub
addb
out
fisttps
in
es
daa
rcl
xor
out
xor
sarl
stos
lret
fcoms
pop
cmpsl
jmp
insl
mov
mov
xchg
enter
sar
mov
test
pusha
cmpsb
int3
and
stos
js
in
ds
mov
repnz
add
in
inc
or
movsl
mov
adc
push
mov
xor
cltd
test
icebp
addr16
ljmp
sbb
or
or
icebp
adc
jl
xchg
pop
shlb
sbb
test
jb
and
sti
sbb
jne
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
add
jle
jl
jle
lods
jb
popa
icebp
push
inc
dec
xor
jns
iret
inc
rcr
xchg
enter
out
or
xor
sub
jp
inc
cmp
fildl
mov
and
int3
movsl
enter
sbb
mov
adcl
sub
mov
sbb
mov
lahf
push
xchg
aad
mov
je
add
adc
and
and
push
cmp
sub
pop
test
or
jne
cmp
adc
add
scas
ss
daa
mov
insl
inc
dec
mov
jb
mov
and
push
movsl
clc
jnp
dec
xor
outsb
insl
mov
jecxz
jecxz,pt
dec
iret
jns
inc
sbb
lods
xchg
gs
dec
cmp
repz
popa
mov
inc
jl
xchg
cmpsl
stos
inc
push
fcmovbe
nop
sub
jl
cli
test
divl
push
adc
mov
sti
pop
lret
aam
cmp
in
inc
pop
sbb
dec
leave
mov
icebp
div
pop
fmull
ljmp
arpl
pop
add
sub
sbbl
stos
adc
push
cmpsl
xchg
pop
mov
mov
xchg
sti
xchg
pop
jae
push
data16
mov
nop
xor
mov
dec
cmc
popa
or
add
cs
add
pop
ja
movsl
dec
mov
sahf
jl
add
cltd
sbb
xchg
mov
pop
lret
mov
mov
dec
mov
and
adc
aam
out
mov
mov
call
in
lods
dec
pushf
dec
cmc
stos
shl
pop
inc
iret
cmpsl
ret
mov
xchg
ss
push
xchg
sub
rcl
fisubrs
pusha
mov
test
mov
out
test
aaa
push
mov
in
shrl
leave
ljmp
std
pop
xchg
xchg
jl
xor
sbb
mov
push
int3
sahf
pop
adc
push
cmc
push
repz
sti
sbb
pop
mov
mov
lods
idivb
incb
sub
mov
push
or
pushf
or
out
dec
add
push
fdivp
jnp
test
cs
push
lds
push
jae
out
adc
jnp
mov
xchg
rclb
sarb
pop
repnz
xchg
push
add
mov
loop
lcall
stc
jnp
sub
push
shl
scas
mov
jg
push
xchg
sbb
add
mov
add
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
popf
or
lea
movsb
inc
dec
daa
sub
xchg
cmp
jo
fidivs
out
dec
mov
cmp
pop
push
xor
mov
lret
add
mov
sbb
imulb
mov
xor
mov
sbb
sub
mov
mov
sub
adc
movsb
aas
cltd
mov
mov
push
int
adc
push
pop
cltd
dec
clc
nop
mov
inc
hlt
insb
jmp
mov
scas
pop
xchg
fisubrl
jle
sbbl
sub
or
push
sbb
mov
lcall
gs
inc
dec
push
aad
and
ja
cwtl
push
dec
hlt
outsb
sbb
cmp
rcl
xchg
rcll
sbb
ds
lock
xor
sub
cs
lcall
vcvtss2sd
cs
xchg
leave
aad
pop
cmpsl
pop
std
sbb
mov
pop
es
cmp
mov
mov
inc
push
enter
push
cltd
inc
fs
sti
mov
pusha
shr
inc
lahf
icebp
negb
sub
test
dec
xchg
stos
dec
call
xor
adc
dec
add
pop
and
movsl
hlt
fwait
ds
popa
icebp
sbb
and
mov
fdiv
add
hlt
ss
repz
outsb
fnstcw
aad
daa
fiaddl
movsl
push
loop
xor
add
inc
pop
aas
jae
in
fidivs
inc
lahf
xchg
fisttpll
xchg
xor
cmpsb
sub
cmp
cs
int3
pop
add
xlat
es
dec
insb
adc
aas
aad
imul
xchg
jo
into
add
jle
pop
jne
sti
mov
ss
add
sarb
pop
mov
data16
push
pop
or
std
daa
mov
data16
shlb
adc
mov
mov
cld
outsb
xor
orl
jae
xchg
jmp
outsb
aad
call
ror
cltd
sbb
daa
or
iret
sub
push
add
inc
push
jo
rorl
and
pop
adc
shlb
adc
xchg
sbbb
xchg
fdivrp
outsb
aaa
and
clc
movsb
xor
sbb
cmp
inc
mov
mov
out
test
push
je
and
inc
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
inc
jo
push
ljmp
sub
fs
cmp
test
std
add
mov
lea
inc
lcall
fsubrl
in
adc
fcmove
cmpb
mov
mov
repz
shll
aas
pop
xchg
xor
inc
in
outsl
pusha
adc
inc
add
cmp
sahf
cltd
and
mov
mov
pop
xchg
jo
mov
outsb
nop
test
push
sarb
faddp
add
inc
inc
sub
mov
jns
mov
insb
jae
jp
mov
movsb
mov
mov
mov
jns
cmp
push
cmpsb
pop
sub
pop
jnp
jne
aaa
mov
sti
aaa
inc
in
inc
cltd
movsb
fdivs
jnp
mov
mov
inc
arpl
les
scas
adc
arpl
push
mov
dec
icebp
inc
movsb
pop
mov
sbb
xchg
or
xchg
rorb
cwtl
lahf
mov
or
cmpsl
ja
test
cmp
jb
loope
orb
mov
clc
or
and
cli
fmulp
popl
test
inc
pop
rolb
jmp
scas
daa
andb
loopne
out
je
sbb
jmp
push
daa
xchg
or
or
cld
pop
insb
mov
cmpsl
dec
aaa
imulb
mov
lahf
xorl
ret
or
add
mov
daa
loop
aaa
inc
adc
mov
shll
push
scas
xor
jge
in
and
out
cmpsl
lea
sub
mov
inc
push
sbb
pop
insl
ret
and
repz
or
sbb
stc
addb
inc
sub
mov
or
insb
or
mov
fistpll
push
jp
fimuls
dec
mov
xor
fisubs
sti
jae
out
push
loop
jle
pusha
mov
mov
fildll
lret
cmp
dec
push
inc
or
in
stos
adc
int
cmp
sbb
pusha
dec
sub
push
mov
cmp
scas
sbb
lcall
push
iret
dec
pushf
adc
push
aas
or
aam
imul
mov
dec
rcll
dec
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
or
mov
icebp
jg
jle
lods
add
cmpsb
jmp
iret
pop
adc
fildl
sbb
sbb
call
jl
push
adc
ficoml
inc
daa
pop
ja
push
sbb
jb
cmp
in
in
push
mov
iret
addr16
fadd
in
clc
push
xlat
mov
mov
icebp
aaa
pushf
jnp
loopne
add
test
cmpsl
test
mov
xorl
loop
sub
mov
pop
mov
clc
hlt
cli
aas
out
test
sub
fisttpl
sub
js
in
js
and
mov
adc
inc
popa
inc
push
push
push
lds
push
in
jno
push
sub
lahf
push
pop
inc
test
mov
pop
and
popa
jp
add
bound
jbe
xchg
sbb
fidivrs
psubb
push
inc
data16
push
outsl
pop
push
js
lahf
xchg
insb
adc
sbb
shll
loope
outsl
and
fdivrp
inc
or
dec
cmp
shll
cmp
sbb
jo
es
dec
xchg
das
bound
dec
push
jp
ss
inc
imul
bound
sub
cmp
dec
arpl
pop
mov
loop
push
jb
mov
add
push
mov
sbb
sub
push
pusha
push
in
push
mov
rcrl
adc
mov
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
inc
jle
icebp
jg
jle
int3
push
lea
mov
or
repnz
mov
mov
leave
hlt
xorb
ljmp
in
lahf
inc
push
sub
mov
idivb
sbb
mov
stos
pop
xchg
inc
add
adc
push
ss
mov
xchg
sub
and
mov
je
mov
inc
adc
ret
loopne
loop
mul
cmp
or
sub
pop
adc
adc
sbb
fs
or
out
stos
xchg
lods
jb
add
xlat
addr16
call
adc
adc
add
cli
xchg
mov
shll
fidivrs
out
movsl
and
lock
push
decb
push
fiadds
rorb
out
or
mov
sbb
jns
popf
std
or
push
shr
mov
dec
stc
inc
je
mov
cmp
or
jbe
test
and
jno
push
test
cltd
adc
add
xor
into
insb
jne
dec
pop
adc
sbb
popa
cmp
inc
mov
ds
xor
push
jae
ss
aas
fisubrs
push
in
fidivrl
mov
in
vlddqu
insl
enter
lock
adc
sub
xor
fs
sub
outsb
test
pop
inc
dec
jge
outsb
mov
push
xchg
or
xorl
stc
in
sbb
jmp
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
sbbl
jle
jg
jle
pop
xchg
loopne
mov
mov
dec
lods
insb
out
mov
dec
loop
or
mov
dec
and
lds
sbb
std
mov
daa
or
mov
push
lods
cmpsl
and
adc
sub
xchg
clc
add
push
push
adc
inc
push
fnstenv
sub
pop
stos
test
or
dec
mov
out
or
adc
hlt
call
js
inc
cli
sub
insb
and
cmc
pop
clc
or
cltd
pop
sbb
lret
jge
dec
daa
cwtl
ret
inc
bound
imul
aad
mov
cmpxchg
jno
push
sbb
pop
push
adc
nop
mov
mov
cmp
push
jnp
js
addr16
call
inc
adc
adc
xor
mov
fwait
cmp
mov
dec
inc
popf
gs
scas
mov
pusha
in
insb
mov
add
jge
xchg
mov
out
cs
cli
jg
or
cmp
fsubs
ljmp
sbb
enter
arpl
cmpsl
pop
test
ja
xchg
jns
je
movsb
mov
stc
and
and
lock
jne
xchg
jae
jbe
adc
xchg
dec
inc
dec
lods
js
sbb
std
pop
mov
insb
mov
stos
add
inc
lahf
jp
ljmp
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
shll
jmp
inc
jle
icebp
jg
jle
pop
iret
push
out
and
repnz
fcoml
or
and
xchg
xchg
cmpsl
xchg
notl
dec
div
out
xor
adc
sbb
push
mov
out
je
cmp
adc
fiadds
in
in
cwtl
cmp
add
iret
fisttpl
ds
fildll
jmp
xlat
pop
push
cmp
or
shll
shll
jp
cltd
addl
lahf
fstps
jl
sub
sarb
rcrl
daa
je
int3
stos
shrb
faddl
pop
cmp
and
push
sbb
iret
add
jge
lret
jo
out
rclb
inc
push
es
mov
dec
sbb
adc
mov
push
and
and
int
cs
xchg
dec
in
cmp
sbbl
je
loopne
sbb
daa
dec
imulb
aam
jno
repz
popa
mov
movl
in
cmp
adc
lahf
mov
ja
mov
mov
jb
push
pop
dec
pop
out
popl
mov
sbb
adc
pop
xor
adc
les
mov
dec
cltd
shlb
dec
mov
daa
push
sub
clc
je
rcrl
scas
fadd
cmp
test
push
or
add
test
inc
clc
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
xchg
inc
jle
icebp
jg
jle
filds
pop
cmp
lods
cltd
xor
sub
loopne
scas
cwtl
add
cltd
pop
pop
push
sbbb
sbb
pop
je
jl
and
insl
fisubs
subl
dec
aad
ds
mov
adc
fnstenv
mov
int
adc
les
negb
sti
and
mov
adc
xchg
cmp
and
cmp
mov
inc
scas
insb
negl
push
xchg
cmp
stos
jecxz
sar
andl
fldcw
in
add
mov
cmp
movsb
sbb
outsb
mov
out
xchg
adc
jno
aaa
add
aad
xchg
add
popf
and
sub
jnp
and
lret
ds
cwtl
ja
cmc
cmpsl
push
push
test
push
mov
jne
mov
sub
pop
jne
lods
out
inc
dec
cmp
test
pop
or
and
xchg
push
jb
dec
ja
adc
mov
push
dec
add
sub
mov
sbb
mov
xchg
lea
shlb
out
aad
loopne
and
scas
repnz
sub
push
pop
cld
push
ljmp
dec
xchg
fs
ljmp
out
xchg
jae
sub
or
pop
mov
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
out
fwait
jge
addb
icebp
jg
jle
out
hlt
test
mov
sarl
sub
mov
jge
inc
ds
push
pop
sub
adc
pop
mov
mov
inc
inc
push
fwait
push
daa
mov
and
ljmp
mov
sub
jmp
xor
hlt
addr16
es
popa
dec
push
sbb
les
mov
rolb
inc
addr16
push
pop
dec
arpl
pushf
mov
ret
in
sahf
je
mov
jne
enter
pop
xchg
jae
insl
fldt
dec
stos
push
fildl
popf
cmp
pop
imulb
mov
push
jge
mov
fwait
xor
lret
stc
push
push
xor
xchg
lea
cmpb
adc
stc
mov
ficomps
loope
in
cmpsb
rcr
loope
mov
dec
mov
sti
add
inc
arpl
nop
test
and
ficoms
rclb
sub
das
cs
xor
sub
jne
data16
push
shlb
pop
xchg
mov
and
adcb
stos
jae
fwait
xchg
mov
jnp
rcrl
cmpsl
cs
sti
and
jns
addr16
sahf
ficomps
dec
inc
add
jmp
rol
jge
scas
and
adc
lret
shl
icebp
mov
lock
call
mov
cmpsl
sub
cmp
sub
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
jno
and
jnp
popf
jae
icebp
cltd
scas
adc
push
xor
lods
adc
push
mov
cmpsb
mov
insl
mov
mov
push
add
push
add
push
jnp
or
push
scas
sbb
das
test
aam
dec
cmp
xor
int
aad
addr16
xchg
mov
lahf
adc
fcomi
sbb
out
add
and
cs
mov
je
and
jmp
mov
jge
jbe
inc
insl
xchg
stc
daa
aam
imul
sbb
sti
mov
pushf
mov
pop
das
add
pop
in
popa
cmp
shr
dec
outsb
mov
push
aas
jg
nop
ljmp
fidivl
lods
daa
adc
push
dec
adc
jp
sti
jae
pushl
movsb
jne
cltd
xchg
call
mov
outsb
inc
ja
movsl
in
mov
fistl
fisubrl
dec
mov
add
in
and
in
or
int3
inc
adc
jecxz
imul
insb
xchg
sahf
jmp
cli
imul
insl
scas
out
nop
xlat
getsec
arpl
sbb
icebp
or
mov
ljmp
aaa
jo
dec
mov
loop
or
dec
adc
sbb
sub
sub
movsl
xchg
mov
jb
sbb
pushl
xor
jbe
lds
xor
mov
lods
jle
ljmp
cld
jmp
cltd
int
jbe
xchg
dec
mov
aad
xor
mov
adc
jmp
jns
jo
into
test
cmp
test
in
data16
adc
imul
jno
shlb
inc
test
ljmp
or
es
insl
and
scas
gs
sub
cmp
mov
mov
sbb
enter
dec
jbe
out
xor
xchg
test
scas
add
loop
mov
adc
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
xchg
mov
and
jl
jle
sub
pop
or
ret
dec
dec
xchg
or
and
add
ja
fsubrl
push
push
mov
push
mov
stos
les
je
and
xchg
mov
notb
lods
mov
insb
cli
or
out
je
lcall
in
mov
outsb
fsubrl
fistpl
test
loope
dec
and
repz
cmp
add
and
sub
fmull
fistl
adc
sub
mov
stc
adc
mov
ja
adc
xor
xchg
divb
sbb
ss
pop
add
stos
popl
clc
cwtl
mov
xchg
faddp
stos
inc
push
push
cmc
sub
jnp
in
pop
jnp
jg
lods
pop
xor
sarb
pop
test
inc
loopne
adc
stos
lea
shrl
adc
out
adc
xchg
xor
cmp
or
int
jmp
sbb
or
pop
push
push
out
jnp
mov
test
jmp
dec
xchg
nop
inc
xor
mov
inc
push
rcll
int3
leave
ret
add
enter
sub
bound
jle
jle
gs
into
mov
push
jb
lds
mov
sbb
xor
and
pop
sub
clc
mov
push
mov
jmp
adc
leave
jmp
mov
add
test
sbb
ds
xor
jne
ret
inc
adc
dec
cs
mov
jnp
lods
xchg
scas
xor
dec
fstl
cmp
cwtl
int3
shlb
push
cmp
adc
rep
add
sbb
pop
push
in
pop
and
lock
push
pop
add
cmpb
loope
scas
mov
es
daa
pop
push
mov
repz
add
add
mov
cmp
lret
mov
mov
xor
push
mov
mov
add
jmp
mov
imul
sahf
adc
dec
jle
adc
or
xchg
push
or
dec
testb
jecxz
xchg
iret
sarb
stos
xchg
or
jg
inc
jae
sub
aad
jno
cltd
push
rorb
cmp
and
mov
mov
rcll
sti
push
pop
mov
jno
lods
jecxz
pop
inc
add
add
xor
imul
leave
fs
repnz
or
or
push
loope
enter
icebp
stos
bound
push
std
lods
jo
sahf
xor
int
mov
or
rcrb
or
push
movsb
sbb
imul
pop
outsl
jecxz
xchg
xlat
test
pop
pop
mov
into
xor
xor
inc
mov
out
or
cld
andb
mov
cld
shrl
jecxz
in
mov
jge
mov
in
mov
out
into
pop
mov
add
enter
xchg
popf
mov
inc
sub
js
cli
adc
pusha
leave
and
pop
sbb
cmpsl
cwtl
push
cld
lods
dec
or
ljmp
xor
loope
sub
loopne
mov
fidivrl
lock
fisttpll
xchg
dec
jl
adc
sub
pop
aad
loopne
xor
dec
rolb
in
mov
je
lds
xchg
leave
inc
sbb
fcmovnbe
aad
push
mov
sub
jge
push
jle
sahf
imul
sbb
adc
sub
pop
outsl
and
test
jno
jb
xor
into
popf
insb
cs
pop
out
pop
jae
mov
sbb
mov
fucomi
sbb
adc
mov
ljmp
dec
mov
out
jle
adc
js
adc
mov
sub
jno
jns
mov
mov
inc
lret
inc
mov
roll
test
lea
fwait
dec
fwait
enter
mov
xor
and
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
lods
pop
mov
add
add
add
cmp
iret
int3
scas
push
ficoml
notl
cmpb
ljmp
or
enter
xchg
mov
pop
push
xchg
ret
dec
push
hlt
popf
push
stos
sbb
push
or
inc
fistps
aad
cmp
ficoml
xchg
add
jbe
addb
push
xor
mov
jge
mov
jl
not
int
repz
push
sbb
jle
inc
insb
fldenv
push
cs
pop
clc
sahf
push
sbb
jmp
scas
xlat
lahf
jle
jecxz
je
adc
add
out
bound
in
push
mov
mov
sbb
aas
leave
inc
mov
std
subb
fistpll
js
lods
cwtl
cld
sub
cmc
enter
out
jge
push
xchg
mov
inc
push
inc
aas
stc
mov
xchg
xchg
insb
loopne
lock
gs
pop
call
push
repnz
test
pop
ficoml
in
jle
lcall
jmp
incl
add
mov
clc
dec
mov
shll
mov
xacquire
lods
pop
lret
sub
sub
mov
cltd
cwtl
fwait
imul
add
jmp
push
out
lret
addb
je
addb
mov
roll
xchg
imul
xchg
shll
cmp
movb
test
sub
sbb
loopne
jne
out
push
cltd
lret
mov
push
shll
and
daa
ds
pop
lcall
pop
inc
jp
pushf
cwtl
sbb
pusha
sarb
ljmp
jb
and
popa
cmpsl
scas
pop
jmp
dec
mov
fwait
jge
and
and
test
push
test
or
fiadds
or
and
inc
sbb
pop
ljmp
mov
icebp
fxch
leave
and
mov
and
jne
add
adc
mov
mov
push
shll
insb
sti
flds
add
add
add
lahf
in
test
insl
pop
sub
data16
loopne
mov
push
outsl
fimuls
addl
bound
inc
pop
mov
cmp
enter
jo
pop
sub
pop
jecxz
jno
jle
and
nop
fdiv
pop
dec
xchg
scas
loopne
in
dec
jp
outsl
idivb
loope
mov
pop
aad
sbb
and
fs
xchg
out
dec
lahf
jle
fnstsw
in
mov
sbb
add
out
inc
je
sub
sub
mov
mov
sbb
mov
mov
lret
fmuls
mov
fsubrl
cmp
sub
cmp
call
popa
fwait
pop
pop
clc
or
xor
popf
enter
push
outsb
push
ret
xchg
incb
pop
mov
in
cmp
mov
and
and
push
mov
inc
data16
add
jmp
add
subl
roll
add
sbbl
incl
add
xor
push
adc
das
xchg
out
clc
jmp
add
or
mov
cld
and
repz
jecxz
js
ljmp
aaa
lock
push
xor
sahf
ret
jbe
mov
cmp
repnz
xor
and
movsb
and
out
aas
and
or
sbb
ret
jmp
pop
loopne
mov
cltd
push
xor
fstp
sub
jmp
cld
dec
sbb
jno
outsb
rcr
lret
dec
and
sub
mov
push
aaa
xor
fnstsw
in
rcll
inc
stos
imul
mov
aad
xor
fldt
arpl
sub
out
mov
cmpsl
shll
jns
and
dec
xor
push
cli
icebp
inc
fs
test
lock
repnz
hlt
dec
fildll
repnz
sub
jno
cmp
sub
pop
sbb
test
cwtl
and
pop
cli
insb
cmpsl
cld
add
inc
or
pop
dec
or
scas
call
add
add
add
xchg
sub
mov
xchg
hlt
mov
sbb
outsb
jb
jno
fcomps
jns
push
cltd
icebp
add
clc
mov
pop
jne
negl
cltd
scas
xchg
lret
dec
rcrb
loope
mov
mov
ja
jl
lods
stos
int3
cli
xor
push
cli
aaa
in
inc
inc
es
cmpsl
jo
lahf
or
jecxz
hlt
test
xor
xchg
pop
add
fsubs
jg
loop
mov
cld
sub
cltd
pop
cltd
cmc
mov
mov
xorl
cmp
fs
or
icebp
mov
dec
or
movsl
mov
bnd
push
stc
je
mov
and
add
sbb
movsb
sub
icebp
fisttpll
mov
test
push
dec
mov
and
lret
push
mov
js
mov
jmp
add
cmc
insl
cmc
out
lcall
enter
add
mov
add
incl
add
mov
ljmp
fcmovnbe
mov
cmpsl
lcall
push
das
pop
sbb
ffreep
mov
xchg
sub
or
stos
xchg
xor
sarb
jmp
push
sti
xor
ret
fdivrp
mov
loop
mov
sub
mov
std
dec
cmp
in
mov
test
in
jg
push
fstpl
pop
push
cltd
shlb
dec
or
mov
pop
jbe
mov
inc
adc
push
ret
in
dec
push
inc
pop
cmp
pop
jno
ds
fcmovbe
sahf
out
xchg
inc
leave
push
insl
cwtl
insb
outsl
fidivl
fstpl
push
pop
mov
ljmp
std
ss
inc
gs
mov
or
mov
daa
pop
iret
inc
xchg
jb
dec
or
out
pop
mov
in
mov
paddusb
push
cmp
hlt
mov
gs
mov
lret
lea
jle
add
outsl
jle
aas
mov
cmp
popa
fldl
add
add
add
sbb
push
rcrl
pop
ljmp
cwtl
mov
mov
mov
dec
mov
or
jge
sbb
xor
mov
scas
mov
imul
sbb
xchg
dec
lock
hlt
jecxz
imul
jp
fldln2
sub
mov
mov
pop
je
inc
pop
shll
outsb
cmpsb
adc
adc
fcoml
cld
mulb
loop
cs
aas
dec
dec
add
pushf
jmp
inc
xchg
repnz
dec
scas
les
xchg
aaa
rcrb
je
lock
push
mov
stos
icebp
dec
sub
aam
lock
sub
xchg
fldl
mov
cmp
bound
xor
mov
jp
rcll
ss
add
movsb
jne
les
nop
sbb
mov
jbe
adc
lcall
inc
lret
and
jns
add
jle
and
scas
sti
jle
pop
push
pop
neg
ret
jns
fiadds
add
add
add
ja
cmp
and
mov
out
xlat
and
jge
icebp
notl
rclb
icebp
adc
inc
imul
push
fldl
insb
mov
aam
lahf
add
push
sti
repnz
adc
mov
cmpsb
movsb
es
push
adc
mov
scas
jmp
inc
out
testb
sbb
leave
dec
aad
icebp
fnstsw
jmp
repz
shlb
enter
lret
cmp
mov
jo
das
pusha
xchg
xchg
pop
xchg
jp
out
mov
mov
pop
mov
loope
cmp
fwait
mov
inc
dec
sbb
shll
mov
xlat
negb
cmp
dec
pop
push
mov
cwtl
mov
ss
jno
mov
insb
sti
outsb
dec
inc
mov
movl
pop
push
jp
popf
into
rcr
out
jg
adc
das
lcall
xchg
push
in
rolb
add
add
negl
arpl
filds
add
add
add
js
fbld
cld
pop
loopne
movsb
add
pushw
arpl
jns
cli
or
lret
sub
sahf
adc
scas
pop
or
sub
jae
inc
pop
mov
out
cmpsb
push
cwtl
add
pop
mov
sbb
outsb
dec
xchg
sti
cmp
mov
dec
jecxz
or
es
pop
ror
dec
fwait
out
filds
inc
jae
push
cs
mov
inc
shll
into
icebp
out
iret
ds
jecxz
insb
arpl
pusha
loopne
mov
jge
mov
mov
push
xchg
dec
cmp
mov
mov
outsl
mov
jns
and
sub
enter
lcall
loopne
jmp
int3
clc
iret
icebp
cmpsl
loope
mov
mov
cmpb
das
mov
pop
bound
jno
inc
popl
cmp
xor
push
jl
jle
insb
out
cs
xor
pop
loopne
add
add
add
movsb
cltd
xchg
stc
sub
dec
push
jp
sbb
testl
inc
arpl
fildll
addr16
xchg
fldt
cltd
cld
imul
cmp
jae
mov
mov
dec
es
cli
dec
fidivs
xchg
sub
lret
jne
out
outsl
push
stos
lcall
loopne
push
jg
cwtl
shlb
lret
dec
inc
stc
imul
jmp
dec
ret
mov
cld
stc
push
scas
out
sub
fistl
cmp
jecxz
mov
pusha
rorb
es
js
stos
mov
stc
clc
nop
out
enter
notb
mov
cmc
daa
push
sbb
cmpsb
adc
std
nop
jne
orl
adc
loopne
mov
xchg
pop
stos
repz
xlat
add
fwait
mov
in
xor
adc
pop
loope
add
add
add
jns
adc
rorl
jo
push
mov
mov
dec
mov
sbb
notb
mov
mov
add
jp
sbb
in
leave
dec
mov
cmovb
fbstp
stos
mov
cmp
ja
pop
imul
jg
jae
or
sti
lcall
xor
add
jecxz
sbb
cs
and
lahf
into
mov
repz
cmp
int
ror
imull
insl
cmp
sub
mov
lahf
add
mov
dec
mov
pop
sub
push
mov
nop
mov
add
testl
repz
cmpb
xchg
pop
or
xchg
and
jo
int
scas
pop
or
ret
jp
pop
xchg
xchg
outsb
movsb
xchg
jl
push
xchg
xor
add
data16
jne
mov
lcall
add
incl
add
sahf
sti
mov
rolb
into
pop
and
mov
jecxz
lcall
loop
xchg
pop
xorl
sub
outsb
mov
pusha
jg
or
inc
mov
imul
lods
push
lods
mov
shll
sti
or
jecxz
jle
pop
das
xchg
jl
pop
mov
xor
shr
dec
jge
cmp
rolb
mov
decb
cmp
mov
jl
in
inc
pop
out
pop
inc
xchg
adc
jmp
sbb
cmp
mov
lahf
mov
jle
pushf
bound
fsts
dec
movl
dec
clc
lock
popa
jp
fs
xor
bound
cmpsl
fsts
clc
icebp
aam
test
and
fdivrs
sub
and
push
imul
shlb
jp
mov
sub
mov
hlt
add
add
jnp
sti
xchg
lahf
mov
cltd
mov
jecxz
add
add
add
sahf
lods
outsl
or
in
dec
adc
jne
imul
outsl
fldcw
inc
jnp
xchg
stos
or
adc
lods
dec
imul
pop
mov
jo
sbb
sub
pop
lret
inc
sbb
sub
int3
pushf
flds
addr16
or
mov
sbb
sub
inc
mov
push
push
xor
pop
cmp
out
movsb
cmp
jo
imul
adc
test
cmp
jecxz
cmp
dec
sarl
loope
out
adc
mov
cmpsb
stc
test
xchg
mov
sub
lods
stos
movsl
adc
jge
inc
int3
nop
stos
mov
or
jns
jnp
sbb
xchg
ret
stc
xchg
in
repz
adc
push
xchg
mov
aaa
sahf
enter
add
push
mov
stc
mov
adc
fwait
hlt
xchg
in
test
sub
pop
sarl
mov
pop
pop
in
add
add
add
xchg
fwait
xchg
add
jle
gs
mov
cmp
es
xchg
mov
repz
inc
or
sbb
clc
ljmp
dec
inc
lea
jmp
cmpsb
movsb
test
pop
testl
mov
dec
push
sbb
jge
or
inc
fs
movsl
xorl
pop
fs
cmp
lret
mov
push
mov
lahf
shlb
outsl
or
xlat
rclb
adc
and
cmp
mov
into
fmull
insl
sbb
movsb
pop
out
dec
sub
jmp
dec
faddl
cmp
sub
es
jmp
mov
and
sahf
push
pushf
in
ret
xor
aad
push
iret
insb
lret
stos
and
mov
in
lock
int
lea
aaa
int3
loope
sti
push
jp
jp
fdivl
xor
aam
shll
add
repz
std
repz
pop
leave
dec
pop
in
add
add
add
sahf
adc
cmpl
test
daa
fcoms
arpl
ret
add
and
push
out
add
cmc
cmp
or
out
movsb
cmpsb
sub
jp
fiadds
mov
fiadds
pop
popa
mov
lret
xor
and
fisubrs
mov
imulb
xor
sub
push
aas
into
sbb
inc
lret
add
sub
inc
test
pop
pushf
enter
sbb
lahf
sbb
std
test
mov
mov
mov
and
ss
cmpsl
flds
sub
mov
mov
add
jecxz
xchg
dec
sub
xor
cmc
mov
xchg
inc
sbb
cld
stc
setnp
in
leave
sbb
xor
mov
adc
loope
push
lret
sub
xorl
out
fsubl
pop
pop
in
mov
aam
jmp
adc
aam
inc
ja
neg
stos
adc
mov
mov
sub
add
lock
cmp
arpl
je
xchg
add
add
add
mov
or
push
cmp
out
int
dec
cmp
repnz
adc
jb
hlt
xorb
in
cmpsl
dec
fistps
testb
inc
push
inc
adc
jmp
push
adc
lods
test
jnp
int3
xchg
jne
xchg
jmp
push
fbld
xor
pop
xor
ds
fnstenv
sti
cs
int3
and
and
sub
adc
mov
cmp
fsub
or
leave
fbld
fs
cmc
nop
jae
adc
inc
cld
imul
dec
cmp
lret
sbbl
mov
push
and
mov
je
movsb
xchg
std
mov
int3
call
pop
cmp
adc
loopne
push
loope
push
cmpb
cwtl
decb
rclb
mov
jg
jbe
mov
test
pop
fisttpl
or
sbb
mov
addr16
or
push
repnz
add
mov
mov
xchg
adc
pop
push
out
add
add
add
mov
ret
inc
or
mov
pop
incb
neg
cli
inc
cmp
pop
out
mov
sub
adc
lock
mov
sub
mov
sbb
lret
mov
leave
into
mov
pop
scas
fbld
pusha
pop
std
adc
mov
inc
cmp
scas
hlt
xchg
or
scas
and
fs
dec
pusha
dec
sbb
cmc
ja
iret
mov
or
pushf
sti
testl
flds
cmp
adc
ret
ret
push
inc
out
lods
hlt
push
loopne
push
aam
mov
cmp
cwtl
push
testb
jge
sbb
adc
push
add
cltd
fs
in
jle
test
sub
sub
mov
int
pushf
arpl
pop
mov
jo
mov
adc
mov
ret
std
mov
nop
inc
adc
pop
fucomp
dec
add
xchg
in
mov
incl
shrl
outsb
xchg
adc
incl
add
sahf
pop
mov
adc
add
jecxz
lahf
inc
arpl
and
pop
dec
rclb
mov
addl
popa
jmp
xor
lds
outsb
add
xchg
fisttpl
cmc
jge
mov
fsubl
call
cld
out
mov
clc
stc
jae
in
movsb
inc
cmpsl
push
mov
sbb
sub
adc
jle
or
nop
fistps
jle
andb
push
lret
pop
lods
sti
xor
and
into
sar
in
pop
dec
xchg
rclb
mov
scas
outsl
jb
fpatan
loope
repz
push
xlat
scas
adc
mull
aam
add
rcll
mov
sbbl
push
shr
or
xor
cmpsl
hlt
adc
dec
or
xlat
mov
pop
push
mov
xchg
mov
adc
jne
out
jle
inc
filds
push
sbb
add
sub
in
negl
sub
movsb
out
iret
xor
jmp
add
nop
ds
jl
mov
std
dec
and
insb
and
andb
pop
sub
sbb
pop
jae
sahf
test
bndldx
push
in
movsb
mov
mov
jbe
in
push
pusha
add
inc
mov
jge
loop
ljmp
or
add
add
outsb
iret
imul
test
jge
int
int
push
loopne
sub
movsb
and
adc
das
pushf
fdivrp
js
xchg
push
add
xchg
lcall
mov
fadds
sub
out
in
xor
adc
sub
incb
xchg
push
mov
ss
mov
test
mov
lret
sbb
xchg
mov
lock
loop
stos
out
or
jp
jo
dec
inc
scas
fs
dec
ds
mul
jne
jb
or
mov
les
int
pop
pop
stc
jo
push
adc
fistpll
stc
dec
push
fdivr
push
sbb
add
add
add
xchg
xchg
or
add
cwtl
dec
or
adc
sbb
fstp
jge
adc
mov
jl
add
or
in
js
fimuls
pop
jmp
mov
ret
shll
inc
cmp
fcoml
inc
sub
push
addr16
add
stos
pop
test
dec
fimuls
fisubrs
andb
dec
repnz
cmp
pop
shrl
xchg
push
fists
test
daa
mov
mov
cmc
dec
lcall
fldenv
adc
dec
push
jne
sbb
movsl
cmp
cli
sub
xchg
ljmp
add
jo
insl
sub
lods
std
iret
add
jae
pushf
js
xchg
mov
mov
xchg
add
mov
and
lds
enter
shl
and
add
mov
and
cmp
mov
push
push
push
mov
ret
add
incl
add
sbb
push
ret
shrb
into
in
lahf
adc
lcall
aad
mov
push
jbe
lret
in
cwtl
outsb
xor
pop
jge
cltd
mov
xor
jns
cltd
insb
inc
neg
mov
push
add
push
fs
jns
ljmp
mov
sahf
call
pop
and
cmp
mov
add
aam
cwtl
dec
dec
sbb
mov
loope
mov
daa
ror
dec
mov
dec
or
jno
das
pop
sti
jb
outsb
mov
add
orl
rclb
push
xor
lods
cmp
arpl
stos
jmp
push
gs
shl
lods
adc
add
mov
sti
lock
mov
cld
mov
sbb
fcompl
jmp
add
std
lods
adc
xchg
pop
sbb
add
add
repnz
add
pop
lcall
les
test
add
incl
add
pop
mov
xchg
aad
cmp
sub
dec
popa
iret
dec
lret
mov
jmp
push
and
mov
inc
dec
int
cld
push
jno
ret
imul
add
pop
and
pop
jae
or
mov
and
mov
unpckhps
push
cs
divb
jbe
mov
push
les
nop
mov
fnsave
lahf
and
ljmp
xor
ret
mov
adc
in
cmpsb
filds
aam
pushl
lock
jbe
test
jecxz
add
inc
pop
lds
mov
into
pop
dec
lock
sbb
dec
js
lods
js
and
cld
int3
adc
lret
out
xor
and
jns
das
adcb
sub
or
out
inc
sub
jb
jae
and
pop
hlt
add
add
add
mov
push
decl
shlb
cmp
push
in
add
incl
add
pushf
test
xor
dec
popa
pop
addr16
movsl
leave
in
xbegin
ficomps
loope
bound
cs
push
int3
stos
sbb
in
cmp
test
out
ret
icebp
imul
fimull
dec
enter
rolb
loopne
inc
rcr
inc
lds
sub
push
push
rcr
pop
stos
xor
shrl
inc
or
das
mov
test
aaa
xor
imul
cli
aad
out
movsb
popf
ficoml
in
imul
cmpsl
xchg
jg
pop
mov
mov
xchg
cmp
push
sbb
push
aad
cmovb
imul
lods
inc
aas
push
xlat
pop
setbe
stc
lods
cs
dec
inc
mov
shrb
out
fldcw
pushf
das
cwtl
std
push
push
inc
sahf
int
push
jl
xchg
add
mov
and
mov
and
add
and
cmp
sti
fsubp
inc
push
sub
xor
add
incl
add
rcrl
cmp
dec
or
adc
dec
sbb
push
rorl
jne
out
sbb
lcall
aad
xchg
pusha
test
daa
jne
xchg
or
stos
cmp
sub
jb
mov
xchg
and
imul
test
inc
push
or
iret
popf
js
pusha
mov
mov
jno
in
stc
inc
xor
movsl
or
sbb
push
jbe
ljmp
jne
sub
jb
fwait
add
enter
inc
mov
mov
dec
lahf
dec
mov
xlat
pushf
sbbb
stos
iret
andl
popf
mov
out
lret
xor
movsl
sti
cmc
cmp
mov
clc
pop
dec
cwtl
enter
push
add
and
aad
and
xlat
and
sub
fdivrs
xlat
add
outsb
xor
mov
lcall
out
add
incl
add
jns
mov
or
movsl
push
int
mov
bound
sbb
pop
dec
dec
dec
jnp
inc
test
dec
and
pop
mov
outsl
sbb
push
jo
test
ja
sub
ss
xchg
mov
ret
mov
cld
jmp
jle
in
sub
lea
gs
lahf
xor
push
pop
fsubrl
pusha
sbb
cmc
and
movsb
loope
jecxz
fsubl
je
jno
rcrb
mov
adcb
xor
stc
enter
cbtw
adc
icebp
dec
in
push
rcr
add
jmp
ds
notb
adc
sbb
in
xor
inc
nop
push
jnp
sub
pusha
cmp
xor
pop
mov
repnz
pusha
inc
lea
ljmp
mov
push
xchg
ret
add
add
add
inc
ror
lock
jnp
xor
xchg
inc
mov
add
add
incl
add
sarl
pop
adcl
lahf
jb
add
fnstsw
pushf
ret
mov
shrb
cmc
aad
repnz
aam
aas
inc
adc
pop
adc
jp
dec
adc
push
fmull
add
stos
mov
sarl
mov
push
or
mov
scas
or
data16
or
xchg
sti
mov
sti
pop
cltd
jmp
std
mov
stos
xchg
inc
repz
aas
push
mov
imul
stos
xchg
rol
xlat
add
xlat
xchg
push
mov
mov
xor
sbb
test
xchg
inc
lea
sub
sbb
or
dec
or
mov
ja
ja
movaps
pop
cmp
add
test
ret
cmp
mov
jge
dec
push
jle
popf
cmpsb
test
aas
les
movsl
out
loop
add
repz
fisubs
adc
icebp
add
incl
add
lret
pusha
lods
mov
int3
xor
lods
lods
jne
mov
and
mov
stos
mov
lock
lret
jb
out
xchg
mov
or
jecxz
inc
das
sub
mov
push
and
das
sub
mov
xchg
sahf
ret
sti
jmp
lods
ss
mov
dec
push
mov
int
out
gs
adcl
loope
cli
aad
cmpsb
jecxz
push
lods
pop
xchg
lods
in
int3
jle
hlt
mov
xchg
cmp
mov
or
stc
fldcw
mov
jmp
xlat
mov
scas
jns
aad
daa
or
mov
and
jnp
inc
sbb
jmp
cmp
mov
xchg
push
in
ret
inc
cwtl
ret
xchg
fadd
push
popa
mov
ljmp
ror
rclb
push
cltd
sarb
push
adc
add
add
out
sbb
sahf
test
loope
repnz
incl
add
pushf
pop
cmp
leave
cmp
and
sbb
imul
aas
stos
xchg
sub
and
loope
in
push
lds
clc
fiadds
mov
ret
inc
fs
inc
arpl
call
pop
fwait
cmc
aam
adc
test
push
push
sbb
aad
cmp
cmp
mov
jge
cmc
fiaddl
push
jle
rep
jl
dec
fnstcw
xchg
popa
pop
in
outsl
testl
out
push
pop
in
cmp
or
les
jmp
in
das
notl
in
sub
pop
loopne
insb
and
enter
pushf
mov
xchg
mov
dec
fistps
stos
sub
bound
dec
fisttps
lods
xchg
pop
cld
xor
fwait
push
call
scas
je
movsb
imul
mov
cmp
inc
rorb
js
add
scas
push
repz
cmc
scas
sub
mov
dec
repz
incl
add
stc
mov
adc
pop
sbb
add
pushl
xchg
pop
adc
jmp
in
es
fnsave
dec
pop
roll
movsl
or
loop
sbb
sbb
mov
std
sarl
mov
out
pop
jge
test
mov
pop
daa
ret
and
mov
clc
and
test
insb
jae
or
pop
out
xchg
xor
pop
cmp
sub
jnp
jno
ja
push
mov
adcb
sub
adc
add
fwait
xor
sbb
shr
pushf
mov
jg
sub
inc
xor
fdivs
sub
sti
or
loope
dec
cltd
mov
out
jmp
jae
inc
inc
inc
xor
or
sub
cmp
xor
cs
mov
dec
and
mov
lods
mov
clc
gs
scas
les
sub
in
lret
pusha
rorb
cmpsb
mov
jle
dec
hlt
add
incl
add
fstpl
cld
jge
xor
rcrl
xchg
or
out
into
test
jne
and
fisubs
dec
jge
and
adc
outsb
das
fpatan
inc
addr16
out
dec
pslld
outsl
testl
int
add
inc
cwtl
sbbl
outsb
inc
pop
les
shrb
dec
jae
pusha
adc
addr16
mov
adc
jl
mov
jmp
cmp
pop
fcmovnbe
mov
shrb
shl
cmpsb
cmp
xor
add
js
mov
or
add
xlat
sbb
and
push
shlb
mov
dec
ljmp
or
jae
cmp
and
es
xchg
in
out
add
movsl
mov
sub
dec
jbe
xchg
mov
insl
nop
outsl
xchg
out
repnz
sub
ret
aaa
or
add
gs
testl
stc
jno
dec
cmc
add
incl
add
sub
xor
ficompl
out
push
jbe
outsl
and
in
cmpsl
rcr
inc
es
push
clc
push
pop
sahf
aam
dec
jae
fimull
mov
adcb
loopne
xchg
add
and
sbb
frstor
sbb
ss
push
fistpll
push
lret
jbe
mov
mov
js
shlb
inc
push
or
mov
mov
add
inc
add
jp
and
pop
in
dec
insl
incb
sbbl
adcb
mov
dec
xchg
rorb
push
jae
xor
ret
add
sbb
fisubs
rorl
mov
lret
jecxz
rcrb
dec
mov
rcl
or
mov
notb
arpl
inc
daa
or
pop
fildll
or
dec
mov
adc
sbb
inc
outsl
shr
nop
add
xchg
mov
mov
pop
das
movsb
mov
loope
testb
incl
add
aaa
xchg
inc
xchg
xchg
ffree
loop
scas
cmp
adc
pop
scas
mov
fists
addb
add
add
gs
mov
pusha
movb
out
aaa
push
out
daa
and
lahf
or
inc
sbb
aaa
loopne
aad
pushf
mov
push
dec
es
es
pop
shll
jno
ret
push
xor
notl
fdivrs
sbb
xchg
daa
or
mov
xchg
stos
push
mov
test
jb
sbb
cmpb
jp
mov
fwait
xchg
in
xchg
rolb
push
push
lret
test
add
popa
das
pop
push
lahf
push
mov
lret
xor
fisubrl
mov
pusha
pop
sti
mov
cmp
in
jmp
lret
mov
out
inc
jo
or
test
jns
ds
push
rdpmc
pop
fldl
cmp
sbb
xlat
cld
popa
push
or
add
add
fucomi
xor
inc
ds
testl
add
testl
movsb
shlb
xor
lea
and
das
movd
jno
and
jo
ficomps
xchg
sub
dec
mov
push
xor
adc
int3
aad
popa
add
cmp
std
inc
pop
dec
mov
sbb
testb
mov
in
sbbb
xlat
lea
aad
rol
loopne
jge
or
mov
icebp
jg
xchg
sub
imul
jle
fildll
push
es
shl
adc
push
lock
sahf
xchg
pop
das
lahf
adc
repnz
push
mov
or
les
pop
pop
mov
sub
sub
pushf
dec
cmpsl
dec
lods
add
jo
sub
scas
test
hlt
or
cmp
push
ret
xchg
loope
iret
mov
jbe
push
inc
pop
jns
aas
loopne
sub
lcall
incl
add
mov
mov
sbb
or
xchg
ljmp
leave
sbb
je
cmp
or
xchg
xchg
xchg
push
cmpsb
rcrb
mov
andl
inc
push
mov
dec
push
loop
and
adc
sub
pop
mov
fdivr
mov
jecxz
dec
lret
xlat
jecxz
and
bound
in
mov
pop
push
lods
sbb
mov
and
lret
pop
inc
adc
lds
cmp
sub
adc
inc
mov
lcall
mov
xor
jns
jge
pop
movd
inc
jne
nop
test
inc
out
mov
jge
shl
or
fcmovu
js
pop
mov
leave
scas
addb
mov
inc
fisubrs
mov
das
pop
and
aaa
daa
xchg
cs
xchg
or
mov
xchg
lods
jbe
add
jnp
mov
ja
ficomps
add
incl
add
dec
pop
in
adc
xor
mov
push
mov
sti
loopne
ljmp
lock
cld
pop
jo
mov
loopne
push
les
jle
inc
sar
into
cmpsb
cmp
xchg
sub
pop
lret
push
mov
mov
push
pop
fstl
mov
xor
jge
sbb
imul
ss
ljmp
std
nop
mov
inc
sbb
push
divb
movsb
push
lock
lret
cwtl
add
repz
pop
fadd
push
mov
push
aas
jbe
aaa
or
jno
in
das
lahf
sub
xchg
cmc
lret
mov
lahf
cmp
or
daa
pop
and
dec
sbb
test
fimull
call
imul
mov
dec
adc
ret
mov
add
fsubrp
pop
mov
lcall
int3
aaa
in
cmp
imul
gs
mov
add
incl
add
mov
sbb
test
movsb
mov
sub
testl
dec
or
pop
mov
call
ds
sub
inc
ss
jae
sub
pop
cld
xor
pop
gs
push
pop
xor
imul
stos
insl
imul
push
loop
xchg
dec
inc
bound
lds
lahf
and
imul
pop
mov
cmc
pop
add
addr16
push
jp
or
pop
shll
sbb
imul
add
mov
popf
scas
andb
cmp
sub
lahf
cli
push
jno
fildl
dec
nop
loop
jp
nop
inc
and
pop
data16
pop
mov
jmp
or
cmp
insb
mov
mov
bound
aaa
or
push
mov
mov
adc
leave
push
jl
out
jb
int
inc
mov
sub
ret
add
add
fdiv
mov
cwtl
xchg
in
inc
sti
add
incl
add
xchg
jge
fisttpll
push
jns
and
sbb
dec
xor
adc
out
add
mov
inc
sbb
fstps
inc
lods
imul
test
enter
repnz
cmp
inc
xorl
or
sbb
in
lods
test
mov
xchg
std
cmpb
sub
mov
lahf
inc
sub
lods
mov
imul
ss
inc
cmp
pushf
in
cmp
sub
lods
insb
out
loopne
jge
lock
pop
inc
data16
mov
or
xlat
in
cwtl
dec
jns
xchg
sbb
xor
in
test
stc
orb
std
adc
xor
xchg
mov
shll
aas
adc
movsb
mov
xor
xchg
xor
xor
or
hlt
or
lds
repnz
repnz
add
add
mov
fimull
cld
add
incl
add
jae
nop
cmpsl
inc
add
shrl
xor
push
daa
pop
add
push
jne
mov
sar
loope
or
push
repz
xchg
lret
push
sar
cmp
std
and
imul
adc
push
pop
fnsave
sti
adc
inc
push
inc
out
add
xchg
mov
icebp
push
lret
xor
test
lahf
movsl
mov
mov
xlat
js
rcl
out
inc
add
les
mov
adc
or
dec
mov
loop
clc
loopne
je
push
fs
adc
mov
jl
repnz
andps
sbb
out
ret
and
cmpsl
aas
lods
cli
xor
test
imulb
cmp
jmp
fcoml
mov
test
sbb
pop
pop
push
xchg
daa
std
ja
out
lcall
scas
add
push
pop
push
jmp
shrb
pop
adc
add
incl
add
fsubrs
inc
adc
lret
dec
mov
push
cs
test
je
lods
subl
in
jge,pt
add
lock
cltd
int3
mov
addb
fnstcw
xchg
andl
pop
out
mov
adc
xchg
loopne
jne
sub
sbb
dec
test
push
inc
in
mov
ds
pop
pushf
js
sbb
pop
popf
mov
jne
xchg
lods
in
leave
sbb
mov
test
xor
xor
push
cmp
sub
lcall
fisttps
ja
ja
sub
dec
lock
xchg
out
mov
mov
dec
hlt
leave
stos
fiadds
les
fbld
jb
incb
dec
mov
and
lret
fisttps
popf
cld
push
sbb
fcomi
imul
mov
iret
into
jge
inc
add
pop
lods
pop
cli
cmc
cmpsb
lret
push
inc
and
add
incl
add
stc
mov
mov
sub
sbb
seta
shl
cmpsl
lods
mov
cs
cmp
stos
push
ja
lret
je
push
out
out
lods
xchg
lods
xor
add
fidivrs
push
dec
pop
dec
arpl
es
fsts
xor
jnp
mov
sub
andl
mov
out
push
ss
push
das
mov
js
fs
daa
sbb
xor
cmc
pop
popa
out
in
std
mov
incb
or
fnstsw
rcr
sub
mov
mov
fistl
jbe
ret
mov
mov
dec
inc
icebp
sbb
stc
insl
pop
sub
xchg
and
inc
push
jg
nop
jo
cmp
or
shll
mov
outsl
and
inc
test
push
push
pusha
rorl
mov
inc
lea
inc
gs
pop
adc
cmpsb
pop
ds
mov
das
stos
cltd
inc
popf
jae
out
xor
aas
incl
add
add
add
adcb
mov
pushl
sub
leave
pusha
mov
sbbl
xchg
push
shlb
or
and
pusha
dec
ret
rcrb
push
movsb
sbb
out
in
dec
es
jp
sbb
inc
add
cmp
loop
xchg
sbbl
push
repnz
cmpb
inc
imul
xchg
mov
and
mov
jp
mov
push
clc
mov
push
add
in
bound
enter
imul
outsl
lods
shlb
pop
test
dec
xchg
cmp
xor
in
jle
and
inc
stc
inc
cmc
jb
pop
adc
popf
and
insl
xchg
xor
sub
insl
out
fidivrs
mov
out
andl
repz
sbb
push
or
xchg
cmp
mov
scas
add
aam
int
aaa
das
aam
mov
add
incl
add
and
mov
sbb
insb
int3
dec
add
xor
bnd
mov
push
inc
test
loop
sbbl
pop
loopne
das
mov
cwtl
jge
push
cmp
push
mov
dec
xor
xchg
adc
jb
repz
push
sbb
lods
ss
test
mov
daa
pushf
xchg
scas
outsl
cld
enter
jmp
push
dec
call
out
jl
push
leave
adc
xlat
popf
call
jecxz
loopne
and
mov
cmpl
gs
test
push
inc
or
dec
pop
and
hlt
shr
scas
inc
dec
cmp
sahf
lds
mov
push
push
ljmp
and
stos
js
nop
adc
mov
mov
rcrb
push
mov
and
in
cmpsb
push
nop
add
ja
jecxz
gs
clc
movsl
stos
dec
xor
jg
aas
mov
jge
push
out
mov
pop
arpl
addr16
sub
out
and
cmp
add
add
push
inc
sahf
mov
cmp
mov
mov
inc
mov
xchg
mov
popa
and
imul
pop
sub
insl
in
mov
lds
pop
inc
xor
cmc
xchg
xchg
mov
mov
push
mov
test
fwait
mov
bound
push
fsts
push
jle
mov
sub
jbe
in
aaa
push
jmp
adc
outsl
pop
repz
adc
shlb
pop
call
out
aas
or
imul
sahf
pusha
ljmp
push
jle
js
push
mov
negl
push
lcall
jne
xor
addr16
les
xchg
adc
stos
jae
mov
xchg
inc
sub
fwait
popf
add
ljmp
cli
bound
insl
add
out
out
pushl
xchg
xor
out
fisttpl
incl
add
fstp
dec
hlt
jo
jl
add
imul
pop
daa
fisubrs
sub
dec
mov
push
push
jbe
add
xchg
and
xor
jle
mov
sti
cmpb
dec
mov
stc
leave
out
add
ret
clc
and
or
mov
xchg
adc
mov
leave
and
mov
xor
and
inc
test
pusha
leave
cmp
and
test
inc
repnz
or
adc
inc
xchg
test
xor
rorl
dec
rcr
into
std
fisttpll
xchg
sti
mov
mov
enter
and
jb
xchg
les
adc
outsl
pop
mov
mov
inc
les
pop
test
imul
ds
pop
ljmp
mov
cmp
aas
ret
imul
add
test
push
scas
mov
sub
and
incl
add
call
lods
adc
pusha
or
or
test
xchg
nop
test
out
gs
fiadds
pop
inc
out
ja
sbb
subb
dec
cmp
sbb
mov
rolb
inc
sbb
lahf
out
mov
xchg
xchg
enter
mov
imul
fcmovbe
in
lods
js
cltd
sub
jnp
adc
out
into
push
xor
xor
mov
pusha
mov
dec
aam
push
pop
in
sub
xchg
cmp
daa
jl
jne
fcmovne
mov
mov
stos
mov
cmp
inc
xchg
sub
fnstcw
xor
fbld
ss
cltd
out
lret
sbb
insl
mov
leave
add
xchg
and
rorl
idiv
lea
fildl
imul
push
aam
xor
sub
loopne
dec
test
xchg
sub
dec
sbb
mov
pop
pop
adc
xor
jmp
popa
les
add
xchg
and
movsl
mov
mov
mov
mov
cmp
add
add
add
dec
push
scas
ds
and
neg
pusha
aad
stc
out
adc
push
mov
xchg
mov
xor
xchg
mov
rcrb
dec
push
mov
mov
sbb
mov
pushf
inc
pop
pushl
adc
dec
push
lods
xor
sub
xchg
xor
les
cs
sti
add
xchg
xchg
pusha
inc
subb
sub
dec
lret
sbb
imul
movsb
loopne
pop
xor
hlt
cmpsb
ret
jg
or
inc
dec
xchg
subl
jp
sbb
mov
out
fidivrs
xchg
xchg
fstpl
pop
ret
sar
add
pop
cmp
ja
jge
lods
lahf
pop
xor
fimuls
jecxz
jno
sub
sahf
pop
dec
jmp
push
pop
adc
test
lds
divl
outsb
mov
lods
add
cmpsl
ficomps
sub
lret
inc
xchg
enter
fdivl
mov
jno
inc
lcall
add
adcl
xlat
or
xchg
mov
inc
cltd
sbb
cld
sub
jg
fistpl
aaa
mov
push
or
or
cmp
mov
scas
pop
add
or
mov
ret
and
mov
aad
pop
and
clc
insb
mov
fbld
fwait
das
xchg
cmc
gs
pusha
dec
jmp
mov
or
pop
mov
clc
mov
xor
call
imul
test
mov
xchg
daa
mov
test
shlb
add
fs
outsl
push
jne
xor
mov
pusha
mov
fsubrp
stc
fnstenv
neg
inc
and
test
inc
mov
add
pop
aas
insb
lcall
fistps
lahf
fidivrs
xchg
icebp
dec
pop
arpl
jecxz
inc
xor
xor
add
cmpsb
mov
adc
fmulp
add
add
mov
mov
lods
imul
andl
add
add
add
aaa
leave
push
test
adcb
iret
mov
out
mov
das
jle
push
stc
ret
inc
popf
or
add
popa
lret
jp
lods
pop
mov
sahf
mov
jae
push
imul
pop
aam
notb
arpl
sahf
ja
pop
and
in
pop
pop
dec
scas
inc
shll
mov
jne
lahf
cmpsl
jg
js
or
in
das
push
and
xchg
jne
mov
xchg
les
repz
push
imul
xor
movsl
jmp
in
pop
bound
pushf
insb
cmc
sbb
inc
adc
imul
imul
cmc
cs
xor
aaa
jp
jns
cmp
dec
orb
ds
into
data16
outsb
pop
cmpsb
jno
shlb
out
xor
pop
imul
repz
loope
sbb
mov
testl
xchg
sub
scas
or
cmp
jecxz
fbstp
pop
add
incl
add
int
xor
mov
or
shlb
jmp
hlt
fnstenv
mov
fcmovbe
jge
inc
je
push
pop
sarl
mov
jnp
and
into
push
dec
mov
sub
jle
arpl
add
hlt
push
imul
leave
cmp
fdivrs
aad
dec
pop
es
mov
pusha
adc
push
int
adc
pop
inc
sub
or
cmp
mov
decb
test
test
out
arpl
dec
popa
or
stos
cmp
jp
mov
sbb
mov
out
and
push
aaa
ja
mov
imul
fdivrl
jbe
in
jecxz
push
push
pop
es
push
icebp
pop
ds
fstps
push
movsb
push
lods
jae
leave
cmpsb
mov
dec
es
je
shll
mov
dec
adc
mov
xor
leave
data16
push
jne
sub
mov
add
hlt
fbld
out
mov
or
add
add
add
jo
nop
repnz
fisubs
push
js
lds
cmp
inc
push
lahf
lret
add
and
jno
add
int
xor
push
mov
dec
fnstsw
sub
or
pop
imul
rcrb
jmp
insl
xchg
out
mov
sbb
cmp
xchg
pushl
cmc
in
push
jo
std
adc
popf
cmp
movsb
fsubl
test
push
repz
xchg
enter
inc
aam
or
out
inc
jns
leave
repnz
enter
xchg
add
shl
sbb
bound
jg
or
fcomps
shlb
inc
jmp
mov
fwait
add
nop
xor
mov
and
stos
mov
inc
xor
out
insb
xchg
jb
mov
push
popa
sbb
sub
sub
adc
enter
popf
cmp
imul
add
add
into
fwait
add
mov
cmp
add
add
sub
push
test
pop
insl
sub
popa
std
and
mov
movsb
adc
out
or
nop
insb
jge
pop
inc
jp
imul
loope
sub
and
neg
mov
push
loopne
aaa
insl
adc
insb
jbe
aad
jns
je
xchg
out
cmp
pop
nop
cmc
scas
fs
push
mov
in
cmp
pop
fs
movsl
jnp
insl
das
xor
pop
sub
stos
pusha
mov
jnp
in
popa
cltd
jecxz
clc
pop
dec
push
mov
lods
adcl
adc
push
js
jg
out
and
xlat
cmpsb
pop
jecxz
stos
aaa
orl
cmpsb
jno
xchg
mov
mov
daa
add
xor
xor
daa
sahf
das
into
inc
sub
xor
mov
int
cwtl
iret
xor
xlat
dec
or
lea
ret
stc
or
mov
pop
or
aam
jns
cmpsl
add
xor
mov
pop
sarb
in
inc
xor
add
add
add
out
inc
stos
cmp
adc
inc
sbb
jmp
cmpsl
leave
in
cmp
jmp
jnp
jno
lods
in
cmp
and
ds
ss
repz
sbb
lcall
lret
in
mov
mov
xchg
dec
adc
dec
sub
cmp
mov
int
sbb
mov
lods
add
or
outsl
out
mov
xchg
cmp
js
jns
aaa
out
cwtl
jae
dec
das
cwtl
mov
adc
das
mov
mov
lcall
add
int
cmp
dec
lock
imul
ljmp
jns
pop
aaa
inc
mov
dec
mov
xchg
add
sahf
lds
scas
adc
out
in
lret
fidivrl
in
cmp
pop
ds
call
sti
inc
out
aas
mov
rorb
or
add
add
add
pop
adc
hlt
lds
ffreep
or
dec
outsl
jg
sbb
xchg
sbb
in
add
jo
fcmovne
push
dec
mov
adc
inc
dec
sub
mov
cmp
lods
lea
fwait
push
insb
xchg
cltd
dec
adc
leave
daa
lahf
into
adc
adc
dec
rolb
shl
sub
adc
and
pop
ja
inc
or
decl
sbb
arpl
out
insb
adc
lcall
sub
sbb
jg
dec
or
sbb
ret
push
sub
int3
test
inc
sbb
lcall
mov
jl
mov
inc
loope
arpl
push
xchg
lret
push
jo
sbb
sahf
js
push
adc
mov
fistl
and
je
mov
mov
popa
mov
cmp
lcall
pop
pop
pop
lods
js
xlat
nop
in
xchg
les
push
bnd
dec
leave
and
shrb
add
add
add
pop
call
addr16
adc
ret
or
mov
sti
fmuls
int
sub
addr16
mov
add
xor
sti
testl
mov
xchg
mov
loopne
xchg
fimuls
xchg
cmp
js
push
aam
js
ret
and
or
adc
inc
aad
jb
xchg
mov
filds
adc
andb
stc
fiaddl
in
pop
lahf
paddw
mov
test
push
cmp
outsl
fiaddl
mov
mov
ret
bound
out
loop
ret
lahf
mov
or
pushf
fsub
pop
push
jl
lret
movsl
xchg
sbb
pop
mov
or
es
add
add
and
in
sub
je
push
in
jne
sbb
jecxz
pop
push
cmp
dec
inc
cmp
add
in
out
ja
filds
or
pusha
xor
add
call
xor
cmp
inc
jg
fistl
xor
xorb
and
push
mov
imul
lea
stos
jge
dec
scas
loop
rcll
test
dec
push
push
jle
jle
xor
int3
aad
jp
into
mov
test
dec
or
in
enter
lea
sub
xchg
shrb
push
sub
scas
pop
pop
xchg
ljmp
mov
cmp
stos
dec
adc
pop
dec
arpl
mov
fstps
fucomip
rorl
mul
fidivs
push
lahf
test
cmpsw
imul
call
pop
jbe
xor
push
sub
xchg
scas
push
pop
or
mov
in
sub
ret
cli
sub
loope
movsl
push
sbb
push
sbb
dec
ss
cli
into
cmp
ljmp
mov
scas
test
in
inc
push
or
xor
xor
add
incl
add
in
inc
xchg
or
mov
es
lock
orl
mov
xchg
aam
leave
dec
xlat
sub
xchg
sub
push
inc
lret
mov
enter
icebp
mov
scas
fstpl
stos
mov
sub
cmpl
out
test
dec
pop
jnp
pushf
pop
mov
sub
shlb
dec
xor
or
cltd
hlt
mov
and
dec
lret
adc
pop
xchg
push
inc
cmp
pop
stos
out
rcl
sti
sarb
and
sub
or
pop
or
ljmp
flds
fidivs
sarl
gs
sub
sub
cmp
lods
sarb
icebp
test
jo
aas
adc
lahf
cmpsb
sub
les
stos
mov
cmp
and
xchg
sbb
ficomps
in
pop
lods
dec
push
mov
mov
into
dec
adc
add
jg
neg
pop
daa
inc
dec
das
ljmp
add
add
mov
push
jne
dec
out
mov
mov
out
jo
popf
mov
dec
xor
adc
mov
cmc
ja
mov
pop
addr16
sub
inc
mov
stc
pop
jns
test
and
sbb
rorl
sub
add
mov
clc
lods
dec
xor
clc
jp
xchg
xchg
ret
mov
xchg
and
stc
jbe
test
push
mov
inc
loopne
shll
cmp
push
dec
rcrb
mov
jnp
out
fwait
je
outsb
lds
pushf
adcl
cmpsl
gs
and
loope
mov
inc
xchg
or
or
out
mov
dec
negl
jo
inc
adc
inc
call
sub
mov
jnp
jmp
mov
repz
and
cmpsb
sub
dec
mov
fs
ja
lods
mov
divb
xor
stos
sti
insl
add
sti
jg
cmp
je
xlat
iret
mov
adc
add
add
add
dec
dec
mov
int3
out
mov
test
push
mov
sarb
gs
add
and
pop
jno
addr16
push
in
loop
mov
xchg
andb
jno
sbb
rorl
popl
mov
xchg
ljmp
fnsave
scas
xchg
jo
and
icebp
add
sub
push
cmpsl
pop
xor
stos
inc
dec
xchg
mov
pushf
pop
movsb
out
push
lcall
mov
jns
rorb
fdivr
push
sub
jg
inc
loop
out
in
pushf
push
inc
dec
enter
fistl
in
inc
and
or
or
sbb
adc
popa
adc
in
in
in
push
popf
std
cld
sti
sarl
lcall
push
xchg
dec
dec
xlat
push
cmp
xchg
and
roll
xchg
add
jnp
fstp
fcompl
test
or
adc
add
add
add
push
push
adc
and
push
test
xchg
shl
fsts
xor
xor
into
mov
jg
cmp
jns
xchg
xchg
pop
jmp
lahf
scas
jle
mov
decb
dec
das
in
test
mov
shlb
jbe
lret
xchg
bound
mov
push
lds
fildll
in
mov
inc
pop
outsl
inc
frstor
aaa
cmp
int
and
cltd
cmc
jo
sbb
jns
icebp
push
cmp
aad
mov
ljmp
pop
mov
arpl
mov
xlat
lea
out
sub
sbb
sub
push
scas
out
lcall
mov
mov
pushf
pop
rclb
orb
outsl
daa
inc
jl
lock
inc
shll
or
or
mov
cs
test
pop
test
das
cmpsl
fmulp
and
les
mov
iret
cmp
test
add
outsl
mov
add
jge
sub
add
incl
add
test
sub
sub
aaa
pop
jne
push
fidivrl
lods
push
mov
xchg
cmp
flds
lds
cmp
mov
lret
scas
outsl
sub
adc
dec
jg
test
lock
movsl
dec
incl
mov
out
fldl
cmp
jecxz
add
ss
lahf
mov
enter
fstpt
aad
fidivrs
and
lods
aad
fsubp
inc
push
out
jle
push
incb
mov
pop
cmp
sar
adc
mov
mov
cli
fldcw
mov
in
fnstenv
rep
or
dec
ds
ret
dec
scas
or
jmp
dec
jg
loope
stos
stc
push
mov
inc
jecxz
xchg
xchg
ret
add
jl
mov
add
add
jmp
frstor
or
incl
add
mov
jbe
push
cld
movsb
adc
movsb
xlat
add
addr16
mov
addb
pop
dec
inc
cmpsb
mov
in
std
pop
loopne
sti
adc
and
ss
mov
idivb
sub
lods
pop
xor
in
pop
pop
adc
out
and
push
repz
stc
sbb
inc
push
imul
mov
lds
aaa
ret
aas
sub
add
shl
dec
push
movsl
imul
data16
xchg
scas
lret
into
call
out
mov
jne
and
cwtl
xchg
sub
pop
adc
jne
pop
push
inc
jecxz
mov
test
fiaddl
notb
and
in
ja
in
jae
inc
and
fcompl
mov
add
scas
push
pop
cltd
icebp
pop
leave
mov
add
xor
test
hlt
in
or
adc
add
add
add
xor
adc
scas
xchg
call
push
insb
lcall
sbb
inc
jmp
lahf
jl
mov
outsl
xchg
nop
sbb
push
xchg
inc
cld
cmp
test
add
lcall
cs
adcl
mov
movsl
neg
enter
in
jo
sahf
call
stc
clc
mov
push
out
dec
dec
sub
data16
jl
fisttps
push
imul
imul
sub
test
push
pop
push
jp
sub
push
mov
in
inc
dec
inc
pop
jg
or
adcl
dec
insb
repnz
call
cmp
add
out
lahf
lret
fiadds
pop
inc
inc
mov
andl
xchg
add
mov
push
data16
pop
lret
mov
sar
sahf
cli
mulb
add
pop
ret
inc
add
cli
inc
jg
int
xchg
lods
or
dec
or
incl
add
in
leave
xchg
dec
arpl
mov
xor
fisttpl
out
mov
shl
popa
jmp
sti
mov
pop
and
mov
dec
xor
out
push
inc
vmovapd
std
nop
jg
xor
in
jl
lret
fsub
cld
outsl
inc
xchg
decb
mov
das
lcall
jae
arpl
lret
icebp
dec
sti
sub
push
rcrl
mov
xlat
sub
bswap
mov
fstl
push
imul
inc
mov
cmp
mov
mov
inc
insl
push
inc
mov
pushl
ja
outsb
lcall
jo
push
jp
and
cmpsb
pop
mov
pop
mov
adc
mov
mov
shll
aaa
aad
inc
out
and
imul
add
insl
dec
int3
rorl
jb
in
xchg
roll
lock
std
cmp
jle
fistpll
ficompl
push
add
incl
add
xor
ds
inc
mov
jp
daa
je
adc
mov
xchg
and
sbb
inc
lds
mov
pop
jecxz
mov
cmp
push
fwait
sbb
mov
sbb
mov
aam
adc
les
mov
jge
fwait
mov
push
cs
insb
xchg
pop
popa
mov
in
adc
vcvttsd2si
jg
cmpsb
sub
cli
sub
adc
movsb
add
int
dec
dec
sub
std
inc
cltd
je
xor
sbb
popa
xlat
in
shrb
fldl
es
ja
mov
mov
test
into
pushf
std
roll
pusha
popf
gs
aad
int3
or
addr16
das
mov
addr16
xchg
fldl
mov
repz
jle
jecxz
sbb
test
ret
mov
xor
adc
xchg
orl
push
pop
push
js
jne
dec
pop
jecxz
rolb
xchg
pop
lds
xlat
ficompl
inc
push
std
shr
pop
add
incl
add
push
scas
cs
testl
gs
xor
push
lds
xlat
in
cmpsl
stos
inc
test
stos
xchg
jg
push
push
adc
hlt
adcl
mov
adcl
adc
xchg
cmpl
pop
andl
sbb
xchg
ljmp
outsb
mov
cmp
cmp
jae
mov
add
and
mov
insb
rolb
fmull
xor
xchg
cmp
cld
sbb
push
and
lds
mov
mov
cld
aad
mov
xchg
push
iret
pop
push
mov
imul
inc
mov
sub
mov
inc
adc
jp
nop
int3
in
jno
mov
dec
or
inc
add
clc
test
mulb
sbb
add
xchg
addb
cmp
push
jle
xchg
loopne
dec
jmp
dec
scas
iret
outsb
jmp
push
test
ret
sbb
add
add
add
std
lods
in
iret
adc
xchg
fsin
mov
jnp
sbb
and
add
adc
test
idivl
jno
jae
mov
add
pop
push
movsb
xchg
out
add
jecxz
adcl
out
add
dec
dec
mov
add
in
or
insl
mov
stc
imul
push
and
pop
xchg
fs
sbb
push
cld
or
loop
movsl
divl
and
es
leave
sub
or
cltd
jo
out
jl
in
sbbb
rcrl
cli
pusha
pushf
mov
mov
cmp
dec
jle
rep
add
psadbw
mov
cmp
cmp
cmp
ret
mov
dec
shrl
adc
sbb
aad
add
sbb
lds
cmpsb
rcll
push
lods
in
pop
insb
push
mov
xor
push
loop
or
sbb
std
sbb
stc
cld
or
sub
int3
mov
incl
add
mov
sbb
jae
dec
pop
lock
incl
jae
push
test
sub
imul
xchg
rcrl
rcrl
and
lret
adc
adc
mov
in
push
add
sti
xchg
inc
and
mov
out
testb
movsb
cwtl
in
pop
add
mov
add
mov
stos
push
jl
mov
subb
mov
subl
push
mov
sbb
aaa
sbb
or
test
sub
sbb
pop
in
mov
mov
cmpsb
negl
das
push
outsb
jmp
test
popa
dec
cmpsb
ret
fucomi
cmpsl
ljmp
mov
mov
movsb
es
jae
xor
xchg
insb
and
dec
icebp
aam
or
jno
or
imulb
cmc
aad
popf
fmull
icebp
add
pop
test
scas
repz
cld
adc
rorb
sbb
add
add
add
xor
out
pop
inc
xchg
adc
adc
or
mov
dec
shr
je
mov
les
lods
lret
pop
xchg
xchg
jne
lods
xchg
add
pop
cmpsb
xchg
dec
xor
pop
scas
sti
idiv
jbe
cmp
mov
test
fstpl
ds
sbb
sbb
jg
and
and
outsb
push
push
icebp
adc
mov
mov
lock
add
arpl
loope
shll
jae
adc
adc
or
scas
imul
fs
in
bound
dec
lcall
out
shrb
jno
pop
bound
jns
cmc
add
sub
jmp
pop
push
in
pop
dec
aad
js
push
adc
pop
cmpsl
dec
jmp
and
orl
cmp
push
js
mov
dec
pushl
leave
testb
and
add
incl
add
jle
push
xchg
shl
fnsave
inc
fsts
pop
mov
add
inc
xor
pop
stos
sbb
push
jne
imul
mov
dec
xchg
sbb
dec
inc
cmpsb
push
in
subb
scas
into
mov
call
cmp
xor
mov
push
cmc
push
mov
mov
outsb
fwait
les
lret
sbb
cltd
imul
xabort
sbb
sub
stos
mov
xor
xchg
pusha
pop
jmp
mov
dec
aad
jge
mov
sub
jne
cmp
inc
push
sub
mov
inc
out
mov
repz
lock
stos
call
xchg
mov
pop
rolb
cmova
test
jo
rep
jmp
hlt
push
xchg
xor
loop
jmp
push
fwait
push
xchg
add
add
mov
jnp
test
sub
cmp
add
inc
ja
pop
aas
dec
push
mov
and
add
add
add
aaa
in
mov
aam
or
enter
push
std
fwait
mov
cmpl
fstps
mov
mov
push
cmp
mov
loop
pop
jge
adc
andl
mov
mov
int3
addr16
stos
mov
xor
jle
popa
pop
and
or
cmp
mov
idivl
hlt
jmp
mov
dec
ds
pop
sti
es
adc
scas
jnp
das
sbb
inc
repz
pop
jbe
jecxz
dec
pop
arpl
push
fnsetpm(287
adc
mov
xor
sub
jae
mov
inc
cmpsl
push
dec
adc
out
les
dec
mov
popa
and
push
or
xor
mov
andb
add
cmp
dec
xchg
sbb
jl
dec
orb
mov
cld
aad
ficoms
femms
sbb
cwtl
loopne
sub
inc
scas
sbb
pop
lcall
add
add
xchg
jae
ja
div
mov
movsl
cwtl
lock
add
mov
sbb
sub
outsl
mov
add
pop
arpl
sti
or
inc
andl
xchg
xchg
jnp
push
shll
cltd
repnz
je
add
aaa
int3
add
adc
or
and
dec
pop
inc
pop
push
and
adc
cmp
frstor
test
test
mov
sarb
xor
in
rcr
pop
insl
in
pop
notb
fnstsw
pop
xchg
dec
or
cltd
jg
adc
adc
sbb
in
pop
js
mulb
loopne
cmp
cld
push
and
int3
lahf
popa
inc
outsl
pop
lret
push
notb
popf
adc
jne
jno
sahf
into
or
jg
test
imul
repz
insb
outsl
je
mov
sbb
out
in
test
push
cli
dec
pop
mov
inc
and
arpl
dec
jo
pop
dec
sbb
sub
add
cli
std
jg
push
pushf
dec
movsb
ja
out
push
add
incl
add
or
lret
imul
aaa
jb
mov
enter
test
aam
xchg
clc
dec
xor
sbb
or
mov
pop
lfs
and
jns
iret
inc
pop
pusha
mov
adc
mov
pop
fimuls
mov
stc
mov
imul
cmpsb
xor
jne
and
xor
int3
dec
or
jmp
pop
adc
lds
jmp
fwait
pop
jae
iret
mov
push
jns
ret
lar
popf
loopne
mov
pop
shl
xchg
mov
sbb
mov
out
mov
cli
fbld
sahf
fs
leave
jg
rclb
aad
jge
test
leave
sub
push
mov
inc
add
or
and
jns
pushf
mov
rcll
ja
subb
xor
fcompl
jmp
adc
add
testl
incl
sbb
arpl
adc
pop
add
incl
add
jl
int3
sub
popf
mov
mov
dec
or
inc
push
scas
pop
lret
scas
jnp
mov
out
sahf
add
xchg
add
xchg
shlb
out
lret
dec
xor
jl
in
cmp
lcall
js
adc
mov
test
icebp
mov
repz
ss
xchg
jmp
loope
je
mov
sub
and
sbb
loopne
cld
add
push
add
push
sbb
fmuls
xor
mov
inc
push
movsb
sub
push
and
cltd
jge
mov
insb
adc
ret
sbb
incb
rcl
and
popa
xchg
out
add
into
push
cmc
adc
jl
ljmp
push
or
je
mov
lret
out
ljmp
fstpt
sbb
notl
or
jb
pop
inc
inc
push
bound
mov
into
rolb
dec
pop
add
es
jg
pop
or
xor
rcrl
and
add
add
add
mov
insl
nop
sbb
jle,pt
mov
lds
arpl
adc
es
ss
mov
or
mov
nop
in
bound
in
mov
add
jle
out
sbb
adc
out
sahf
mov
inc
sarl
inc
fwait
subb
stos
mov
push
inc
lods
push
mov
out
xchg
mov
lock
lcall
daa
popa
out
mov
cmp
inc
fstl
bound
mov
lock
fidivl
pop
sahf
push
ret
inc
ret
addr16
out
cmp
push
push
xchg
das
mov
dec
sti
in
bound
aas
add
add
xor
imul
in
out
mov
xchg
lods
es
xchg
mov
mov
int
cmp
sub
xor
xchg
push
pop
xchg
pop
adc
push
jo
and
fimuls
xchg
add
or
dec
push
cmp
and
add
add
add
adc
cmpsb
enter
jb
cmp
mov
fnstsw
imul
jp
pop
sub
pop
loope
or
lret
mov
imul
pop
fxch
dec
data16
ror
mov
adc
pop
mov
adc
notl
lock
and
ret
imul
push
sub
and
les
add
bnd
mov
sbb
in
inc
fs
roll
jo
mov
sub
or
inc
add
loopne
scas
stos
into
aas
aam
jmp
and
scas
fsubs
rorb
out
pop
xchg
scas
flds
sbb
or
int
imul
sbb
push
fstps
mov
movsb
dec
imul
xchg
adc
jbe
jp
cwtl
fnstsw
mov
test
dec
mov
int3
xchg
xor
mov
in
sbb
add
incl
add
sbbl
add
adc
push
into
imul
pop
or
lock
and
and
cmpsl
ja
sbb
test
ds
push
jo
mov
jl
popa
ss
sti
xchg
sub
dec
mov
lea
mov
sbb
arpl
pop
push
mov
fwait
and
movsl
mov
sub
cmp
decb
shrl
out
rorl
aam
roll
lcall
mov
imul
mov
adc
pop
or
stos
dec
mov
stos
outsb
push
add
jbe
cmp
inc
jg
popa
in
roll
mov
lea
jno
fstpl
push
outsl
mov
xchg
adc
imul
outsl
lea
xor
stos
jnp
push
mov
shll
jle
mov
test
addr16
hlt
xchg
int3
mov
jecxz
and
or
in
outsl
setbe
fisubs
add
ficoms
stos
sbb
call
mov
sbb
add
incl
add
mov
sub
push
jo
jo
push
cmp
shrl
jb
jecxz
mov
ss
rcrl
push
lea
jle
and
pop
sub
and
outsl
mov
ret
faddl
pop
lods
add
adc
mov
fisttps
xchg
push
iret
mov
push
pop
in
jle
adc
addl
dec
or
and
dec
pop
shrl
mov
in
frstor
jno
xchg
jb
fldt
cmp
in
and
pop
lret
xchg
xlat
orl
add
mov
in
mov
jbe
sub
inc
rcrl
cmp
mov
sub
dec
repz
jbe
repnz
mov
jl
push
cmp
pop
dec
sbb
inc
outsl
sti
mov
fstpt
lods
dec
pop
sub
loop
outsb
push
dec
and
xchg
add
add
in
out
stos
jge
or
dec
dec
sbb
add
add
add
pop
movsb
adc
inc
add
jl
js
sub
imul
je
mov
ja
addr16
cmpsl
repz
or
pusha
mov
cld
dec
sub
xchg
xchg
or
dec
out
into
loope
cld
pop
das
mov
or
arpl
test
loope
sbb
add
push
divb
cmpsb
pusha
inc
push
fstl
mov
adc
stc
test
cltd
in
inc
cwtl
stos
addr16
sbb
and
clc
das
mov
gs
test
scas
or
fidivrs
hlt
push
sub
cwtl
push
js
ja
test
fisubl
xchg
gs
jbe
call
das
mov
mov
mov
mov
hlt
js
stc
loope
dec
jbe
cmpsl
mov
enter
jne
int
aas
adc
rep
stc
lea
pusha
add
add
sbb
out
xchg
iret
push
aas
jg
ficomps
add
incl
add
jo
cmp
mov
and
push
pop
jne
fucom
enter
dec
jae
sbbb
mov
pop
stos
shl
stc
xor
adc
data16
std
adc
into
mov
xor
jbe
mov
cmp
jno
mov
dec
push
mov
xor
mulb
icebp
adcl
sub
imul
mov
jp
jno
mov
and
outsb
xlat
fistl
jns
roll
fidivrs
mov
out
cmp
das
mov
out
shl
or
outsb
or
cmpsl
popf
pop
in
add
jg
pop
jmp
test
pop
lds
cmp
popf
xor
or
mov
adc
pop
push
cmpsb
sbbl
sub
test
pop
mov
mov
or
fsub
push
mov
or
cmp
loop
out
mov
and
add
in
add
cmp
out
loope
jns
scas
and
adc
add
incl
add
mov
mov
adc
sbb
test
xor
div
outsb
mov
lret
loopne
mov
outsl
xchg
fisubrs
lods
sbb
dec
leave
pop
or
xor
mov
xlat
cwtl
les
arpl
leave
cli
das
repnz
jp
lret
jno
push
xor
lret
cmpb
or
dec
inc
int
or
popf
mov
jns
jne
dec
outsl
inc
or
lods
cld
repz
je
ret
movsl
out
jbe
sbb
lret
stos
sti
xchg
fs
lret
mov
cmovge
pop
sahf
xchg
sbb
jno
popf
push
push
pop
movsl
inc
push
bound
fmull
mov
jne
mov
push
add
lds
aaa
pop
mov
popf
inc
popa
adc
xor
cmp
in
pusha
jecxz
loope
lock
std
cmp
jge
add
lods
jg
push
mov
rorb
es
pop
daa
add
incl
add
aaa
mov
dec
pop
adc
or
jne
mov
int
xchg
pop
adc
sub
dec
push
stc
dec
popa
push
xchg
clc
lcall
test
nop
dec
es
dec
pop
or
ret
mov
inc
and
aas
mov
dec
pop
les
inc
imul
jo
jecxz
test
or
clc
mov
jno
scas
push
fistps
pop
dec
sub
add
push
loope
xchg
push
mov
bound
hlt
sti
lea
push
push
xor
aam
push
mov
xchg
push
inc
add
push
sbb
push
dec
sub
outsb
fistl
push
jecxz
roll
imul
shll
lret
imul
int3
lods
cmp
mov
loopne
stos
sub
cmp
fwait
in
jbe
jnp
stc
pusha
outsb
adc
fs
outsl
inc
fidivrl
fisttpl
mov
add
add
jg
cld
ret
add
push
adc
push
sub
add
add
add
lea
jp
jl
adc
int
lret
push
das
fisttpll
stos
loop
in
ret
rcr
pop
fsubrs
adc
enter
add
ret
push
mov
in
fs
mov
or
push
sar
fldenv
xchg
push
xor
sbb
sbbl
mov
dec
scas
out
fidivl
sub
imul
inc
or
xlat
adc
adc
inc
push
xor
sbb
sub
push
cmpsb
sbbl
xchg
fwait
jl
scas
divb
std
push
dec
inc
mov
popa
fcoms
jmp
aam
inc
jbe
xchg
imul
push
in
inc
fdiv
loope
nop
mov
leave
mov
push
idiv
xorl
loopne
adc
and
insb
ret
cmp
xchg
cld
pop
fsubs
dec
dec
test
test
scas
sti
scas
dec
add
mov
iret
mov
inc
movsl
sub
adc
add
add
fucomp
ja
add
aaa
out
scas
push
jo
xchg
pop
or
les
shlb
cmp
cmp
daa
fsub
adc
push
dec
cli
jb
push
rcll
mov
sub
push
nop
cmp
push
repnz
jne
out
sbb
cmp
jmp
sbb
mov
int
call
mov
inc
mov
popf
sub
ret
nop
scas
ja
mov
divl
push
mov
xor
aaa
adc
push
xor
push
dec
andl
push
scas
and
dec
push
cmp
jge
out
fbld
add
push
movsl
cmp
out
cli
lock
adc
add
hlt
pop
jns
sbb
loop
stc
jae
dec
lcall
xchg
mov
and
sti
pop
adc
addr16
jns
rolb
add
add
mov
jg
arpl
mov
add
incl
add
ret
lcall
dec
push
inc
ljmp
or
or
pop
mov
stos
lods
mov
jns
sbb
das
cmp
inc
into
jmp
xchg
adc
mov
jae
xchg
sub
out
in
into
pop
adc
shl
push
insl
out
jo
nop
addl
sub
stos
push
mov
fcompl
xor
cmp
push
enter
sub
ficomps
sub
mov
ds
lds
cs
push
push
xchg
inc
roll
mov
pop
int3
addr16
jle
add
xchg
xchg
inc
imul
call
pop
mov
sub
add
ljmp
pop
adc
clc
aad
mov
stos
push
mov
and
negb
push
push
rol
fwait
in
push
in
add
mov
push
imull
jno
sbb
add
xor
clc
cli
clc
sarb
sti
mov
jb
adc
add
incl
add
in
or
aas
je
jmp
mov
hlt
push
mov
lret
or
popl
data16
mov
daa
cmp
fcompl
push
dec
and
jne
sub
pop
mov
lahf
push
pop
loope
fidivrs
mov
jmp
push
dec
push
je
push
mov
sbb
mov
iret
es
mov
in
and
push
jbe
imul
pop
jne
adc
cmp
cmova
rol
and
inc
ret
sub
leave
int
int3
adc
or
mov
dec
addb
xchg
out
cmp
jne
push
sub
push
test
aam
cld
adc
inc
inc
shrl
out
fsubrp
and
and
push
jnp
sahf
xchg
inc
fildl
cld
imul
add
ret
jl
mov
test
imul
mov
test
sub
add
add
add
sbb
lds
push
pop
das
data16
push
das
stos
fwait
cmpsb
cmc
or
cmp
adc
jne
jns,pt
rorl
dec
cmp
adc
sbb
jbe
cmpsl
fstp
ret
rol
ret
xchg
das
mov
push
inc
jnp
jl
mov
add
sbb
xlat
movl
repz
pop
sub
outsl
mov
cmp
out
mov
lret
mov
lods
and
stos
rcr
insb
push
or
dec
push
mov
cmp
sarl
lods
insl
das
das
in
push
outsl
loope
push
aas
and
mov
cltd
mov
push
ds
dec
pusha
leave
lret
outsl
adc
daa
popf
fstp
aad
or
test
ret
pop
jno
out
sub
adc
xor
jecxz
mov
loope
push
pop
fdivl
in
jecxz
xor
pop
mov
cltd
adc
jmp
push
bound
mov
push
jmp
sub
fs
es
data16
insb
daa
mov
sub
cwtl
mov
sub
add
loopne
jb
inc
daa
out
mov
lock
stc
outsl
sbb
adc
jno
insl
mov
insb
rcl
cmp
cli
cmp
cs
ret
push
fwait
sbb
xchg
hlt
sub
movsb
mov
loope
or
sti
nop
adc
cmp
mov
mov
sbb
aam
mov
in
sti
xchg
mov
pop
xor
xchg
push
jnp
out
movnti
xor
mov
adc
test
ja
les
mov
ss
imul
in
movsb
sbb
and
sarl
scas
push
in
jns
mov
outsl
dec
dec
loopne
mov
dec
arpl
inc
push
mov
cmp
ljmp
sub
pop
std
add
inc
insb
rcrb
jno
sub
push
cmovno
xchg
pop
push
dec
in
adc
out
xchg
popa
scas
lret
add
add
dec
mov
imul
fistpll
adc
add
incl
add
sbb
fwait
dec
iret
fdivl
cld
insb
and
js
cmp
and
xchg
push
lret
fcomps
pop
aam
stc
stos
sbb
jb
push
gs
cmc
sub
aam
mov
sbb
test
mov
bnd
dec
add
out
pop
fs
rcl
push
sub
mov
stos
sbb
adcb
mov
repnz
add
push
jbe
test
mov
lahf
cld
aas
xor
push
movsb
add
dec
int
loope
mov
ja
jnp
ljmp
pusha
test
fs
mov
in
mov
pushf
push
push
xor
cmp
iret
sub
xchg
xchg
dec
mov
aas
mov
inc
int
lcall
mov
dec
dec
lods
xor
xchg
je
ret
xor
mov
add
and
push
sti
cmpsl
enter
scas
jecxz
xchg
das
add
incl
add
sbb
out
mov
or
ret
fmul
jmp
popf
pop
filds
cli
and
je
repz
stos
sahf
sbb
inc
sub
cmp
cmp
pop
clc
lea
sub
jp
push
cmpsl
adcb
daa
push
and
xor
xchg
std
dec
ficoml
mov
inc
test
sbb
mov
push
sbb
or
add
imul
cmpsb
jbe
adc
mov
cli
push
lret
addr16
cmp
rcl
pusha
addr16
fisubs
inc
or
arpl
cmp
xor
mov
sbb
sbb
adc
push
ljmp
dec
mov
pushl
sub
push
push
sbb
leave
in
out
cmp
jae
sub
popa
sbb
adc
pop
loope
scas
dec
mov
jnp
mov
cmp
xchg
nop
inc
fstp
xchg
pop
imull
dec
push
mov
push
push
sub
add
mov
std
mov
dec
push
add
lea
xor
add
add
add
mov
testb
add
stos
mov
test
or
sbb
pusha
sarb
fadds
inc
ficoml
dec
and
cmp
push
dec
arpl
iret
or
inc
inc
jmp
cs
ret
pop
xorl
fiaddl
mov
arpl
lahf
lret
imul
push
adc
call
cltd
inc
ja
ret
fildll
stos
mov
movsl
or
sub
fcomp
push
xchg
or
and
sbb
js
repz
sti
stc
fwait
add
and
jg
mov
ljmp
adc
ret
loopne
js
cs
aaa
and
xlat
sbb
jae
or
in
les
cmp
scas
scas
add
lahf
add
sarb
fwait
jns
in
loope
fiadds
fbld
fidivs
or
cmpsb
sbb
mov
push
jmp
add
and
jecxz
and
lcall
add
incl
add
xchg
jmp
sbb
xor
shll
cltd
inc
test
popf
lods
movsb
shl
jns
push
out
dec
push
lea
pop
dec
outsl
out
lret
cld
xchg
mov
out
or
insb
cmpsb
das
js
jae
ljmp
out
loopne
cmp
add
jge
mov
xchg
js
mov
xor
test
aam
in
push
ljmp
rolb
nop
xchg
test
in
orl
test
mov
adc
cld
gs
and
xchg
hlt
fimuls
rcrl
mov
nop
jmp
xchg
jns
in
dec
xchg
pop
pop
mov
out
sub
add
jle
mov
pop
sarl
loope
xor
pusha
loop
call
stc
clc
aad
dec
pop
insb
add
add
xchg
ficomps
cmp
lahf
push
call
add
incl
add
push
dec
jbe
mov
dec
push
push
test
test
insl
fstpt
repz
into
push
fsub
rcrl
lds
std
inc
mov
sarb
jg
push
cmp
dec
cmpsb
hlt
add
or
insl
mov
adc
pop
bnd
iret
ja
jp
ret
cmpsb
mov
dec
add
sbb
mov
mov
fwait
ss
stos
cmpb
into
test
sub
add
mov
fdivrs
arpl
jmp
test
cwtl
jg
call
dec
add
incl
sbbl
cli
test
add
dec
rcrb
xlat
insl
mov
repz
inc
mov
int
dec
push
mov
jmp
dec
push
dec
repnz
pop
out
ss
or
sbb
mov
or
push
arpl
sub
inc
add
lods
xor
mov
cmp
imul
add
incl
add
mov
insl
or
dec
femms
pop
cltd
inc
xor
adc
jnp
out
int
mov
inc
pop
cmp
jge
sahf
mov
add
data16
fld1
nop
loopne
shlb
aas
ret
ds
xchg
stos
test
lea
outsb
adc
ja
sbb
sahf
arpl
push
xor
jg
into
movsl
xchg
dec
into
movsl
ds
xchg
push
mov
mov
movsl
enter
mov
mov
jae
xor
cltd
dec
jecxz
jmp
insw
jo
jb
pop
ljmp
cli
xchg
mov
mov
in
push
sahf
mov
mov
jp
sbb
pop
dec
dec
movsl
in
pop
sti
shll
aad
stc
ja
jmp
negl
sbb
sbb
test
ret
adc
bound
add
dec
aad
leave
push
inc
mov
jae
iret
mov
sbb
push
lds
bound
lock
mov
or
adc
add
incl
add
clc
pusha
add
push
jl
and
pop
dec
std
jecxz
jo
jns
dec
stos
push
jmp
and
add
cmpsl
stos
inc
ret
or
inc
call
dec
and
inc
add
or
sti
loopne
xor
pop
xor
jmp
push
sub
lods
mov
mov
scas
cmp
lea
lret
mov
mov
jae
mov
cmp
scas
scas
mov
fmull
cmp
or
fidivrs
jbe
pop
int
or
in
or
les
xchg
and
shl
test
mov
aam
sahf
js
dec
jb
push
mov
push
ficompl
push
hlt
mov
lret
pop
cltd
xor
iret
lret
stc
popl
inc
jne
lds
jmp
loopnew
cmp
pop
mov
imul
push
movsl
sub
add
mov
push
mov
xor
add
sti
pop
jge
neg
hlt
add
and
xor
add
je
lods
inc
clc
sti
dec
push
sbb
bound
lds
mov
daa
aad
scas
mov
popa
push
jnp
aaa
loop
aad
xchg
ret
ds
pop
and
es
and
push
js
xor
or
ret
ret
call
js
out
out
int
cmpsl
data16
js
jbe
les
push
mov
into
xchg
or
mov
data16
dec
add
inc
xchg
pop
and
mov
cmpb
jns
aam
dec
sub
mov
xor
out
xchg
jge
inc
lret
sbb
cmpsl
sti
mov
xor
lcall
daa
int
hlt
jns
iret
inc
decl
scas
cmpsb
imulb
or
sub
mov
mov
les
imul
outsl
and
fists
shlb
sbb
cwtl
loope
aad
stc
int
lea
popf
pop
test
mov
add
fsub
std
in
popf
in
stc
jmp
aaa
or
pop
or
add
incl
add
pusha
push
push
out
lds
scas
dec
xor
popa
sbb
push
mov
and
cmpsb
lock
pop
pop
adc
push
fidivs
add
or
jl
test
jbe
enter
adcb
pop
and
pop
leave
fsts
sub
push
stos
daa
and
lret
into
push
xchg
xchg
cltd
ds
jnp
ret
mov
fcompl
imul
stos
popf
out
and
lds
dec
roll
sbb
sahf
repnz
jbe
movsb
add
std
mov
and
push
iret
xor
mov
arpl
adc
xor
and
addr16
movb
and
pop
aam
hlt
xchg
lret
int3
lock
and
pop
orb
lcall
mov
xchg
rolb
add
add
jp
jnp
sti
xchg
jle
jp
lods
xchg
cld
xchg
lea
aaa
add
incl
add
inc
nop
js
jns
sub
pushf
adc
cmp
inc
pop
lods
pop
push
lock
frstor
and
dec
mov
jle
hlt
add
iret
mov
pop
imul
in
cmpsl
imul
cmp
xor
je
cmpsb
movsl
xlat
push
mov
leave
popf
pop
in
mov
fistpll
jge
push
fcmovnb
push
std
add
jp
dec
cltd
sbb
out
shrl
rcll
pop
outsb
pop
mov
mov
pushf
cmp
insl
sti
divb
pop
repnz
mov
daa
inc
adc
fdivl
stos
in
fdivl
loopne
test
xchg
cld
dec
das
dec
dec
fdivp
dec
mov
jmp
jge
lds
in
push
outsl
mov
pop
daa
fmul
mov
mov
push
mov
sbb
cmpsb
sbb
lock
aas
sbb
aas
mov
inc
scas
stc
xor
scas
cmp
fiadds
mov
sbb
xor
scas
dec
popl
mov
push
sti
decb
mov
jb
cmp
add
add
add
insl
xchg
filds
adc
mov
inc
sbb
into
cwtl
dec
mov
mov
sbb
xor
mov
shll
and
das
sbb
jp
into
jl
stos
call
push
sbb
out
loope
aam
mov
test
cli
cmpsl
dec
out
idivb
lret
repnz
and
mov
sub
push
pushl
sbb
jb
and
xor
mov
into
mov
dec
xor
lods
mov
push
hlt
bound
or
stos
adc
cmpsl
sbbb
ret
stc
sub
enter
inc
dec
cmp
xchg
mov
scas
push
lcall
lahf
mov
ja
mov
bound
mov
xchg
loop
ret
xchg
xor
fidivl
xor
cmp
sbb
repz
repz
push
ret
cmp
xor
hlt
pop
in
mov
add
add
add
push
dec
jg
test
shl
les
or
xchg
stos
mov
int
xchg
mov
rolb
xchg
mov
dec
xor
inc
scas
adc
pop
aaa
push
xchg
outsl
insl
loop
pop
xchg
xchg
xor
or
inc
jnp
inc
or
add
mov
inc
lds
inc
or
adc
popa
xor
aaa
jmp
out
in
mov
or
mov
test
mov
jo
cmpsb
and
mov
sbb
mov
mov
gs
sbbl
dec
shrb
adc
je
mov
aad
je
cmp
mov
std
into
sbb
cmp
xor
mov
mov
mov
push
shr
sbb
jae
xor
imul
clc
pop
sub
mov
data16
fdivs
mov
nop
adc
push
add
cmp
jge
stos
lea
shrb
je
add
add
incl
add
cs
out
loop
xchg
adc
fldln2
scas
lds
push
mov
sbbb
cmc
cmp
inc
pop
pop
rcll
loopne
pextrw
inc
fucomip
jg
test
jle
sahf
push
push
rorl
aam
xor
adc
imull
inc
sub
mov
fsubs
aas
adc
andl
pop
mov
push
inc
addr16
outsl
cmp
push
outsb
fcoml
out
lretw
push
pop
imul
xchg
mov
pop
leave
cmp
outsb
mov
cmpxchg
adc
sti
mov
out
aad
sbb
xchg
movb
in
test
stos
icebp
pop
aad
pop
arpl
movsb
xor
fimull
jmp
cmpsl
fildll
iret
lods
ljmp
loopne
push
out
push
and
pop
imul
jecxz
mov
in
mov
enter
mov
xchg
into
ret
pop
pop
jno
lret
ss
cmpsb
cmp
pop
add
rclb
nop
lcall
cmp
add
add
add
sub
jle
cmp
iret
cmp
add
lcall
and
mov
enter
pop
xchg
popf
leave
into
test
push
out
fcom
dec
xchg
sbb
sbbb
fwait
xor
fwait
jb
adc
pop
jmp
popf
push
mov
or
mov
or
add
pusha
xor
mov
stos
xchg
mov
inc
push
fwait
ret
sbb
cmp
cmp
pop
sub
fidivl
repz
mov
test
mov
xchg
adcb
xorb
into
cmpsb
popa
mov
sbb
push
sub
js
push
sub
mov
insb
mov
jae
mull
andb
adc
je
sbb
inc
test
loope
push
xor
add
andl
daa
and
mov
cmp
lds
push
add
jbe
idivl
or
movq
incl
add
ljmp
jmp
push
in
push
hlt
int
negb
testl
pop
das
shlb
adc
mov
mov
call
test
xorb
pushl
inc
cmp
sbb
or
cmp
adc
xor
push
cmp
mov
imull
shlb
push
fs
push
mov
psraw
push
xor
mov
rcll
into
flds
rcl
cmpsb
xchg
stos
xor
nop
mov
cmp
fwait
xchg
cmp
mov
insb
adc
aaa
in
mov
shll
or
push
xor
inc
pusha
inc
push
xchg
call
push
sub
pushf
fisttps
popf
rep
lret
pop
push
fwait
lods
int3
or
out
dec
outsl
jno
push
fs
js
test
xchg
cwtl
dec
mov
cmc
adc
and
outsb
sub
stos
fs
jmp
leave
aas
sbb
lods
aam
cmp
add
push
bound
int3
adcl
js
dec
cmp
insl
pop
fistl
mov
jp
xor
push
xor
jg
in
mov
xor
lea
push
mov
adc
inc
mov
imul
fucomip
sbb
xchg
sarb
pop
test
inc
pusha
arpl
out
stos
stos
add
add
xchg
lcall
sbb
cmpsl
fsts
mov
test
in
into
mov
push
mov
stc
cwtl
mov
idivl
scas
pop
mov
out
outsl
es
adc
and
xchg
pop
or
int3
xchg
pusha
shll
outsl
dec
push
jno
jmp
and
mov
xor
test
mov
cmp
fdivp
stos
fwait
lcall
call
adc
in
inc
ret
push
pusha
cmp
mov
inc
jg
mov
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
xchg
or
add
incl
add
addr16
daa
call
sub
jp
or
inc
aas
cs
add
adc
pop
pusha
cmc
jo
push
or
icebp
add
data16
dec
mov
insb
sub
jecxz
mov
repnz
jecxz
test
push
inc
add
scas
jp
inc
jmp
js
pusha
inc
flds
xchg
je
inc
xchg
pop
divl
mov
bound
rolb
aad
insl
inc
int3
add
in
push
cmp
popf
mov
arpl
pop
test
loopne
xchg
test
out
stos
and
fnstenv
add
jp
sbb
sbb
andb
pop
add
sub
mov
lcall
mov
inc
andb
inc
mov
xchg
mov
insb
test
lret
andb
sbb
jnp
jnp
cmp
movsb
push
sbb
lcall
incl
add
cwtl
add
shlb
push
jecxz
jmp
dec
jno
int3
lock
xor
dec
jl
jae
add
mov
lret
xchg
fcoms
push
notb
sub
mov
loop
fisubs
leave
mov
pop
and
in
cmp
mov
loopne
sub
push
repnz
imul
ds
incl
mov
inc
rcrb
mov
ret
fistps
shlb
mov
fsubrl
nop
cmp
push
out
aas
dec
mov
shll
test
mov
mov
mov
pusha
rcll
fcoml
sahf
push
enter
test
sub
inc
lcall
push
sub
les
clc
add
sbb
jge
cli
insl
or
mov
inc
add
cmpsl
lret
mov
sahf
movsb
aaa
or
pop
or
imul
cmp
push
add
cmp
adc
outsl
lret
mov
out
jmp
mov
add
incl
add
lahf
nop
lods
inc
mov
in
or
mov
lods
loope
loope
xchg
xor
test
xlat
jg
cmp
out
or
adc
cmp
loopne
push
scas
add
jg
cmpsl
adc
mov
and
inc
xchg
jnp
pop
add
dec
mov
test
cmp
movsl
jns
das
movsb
outsb
ret
or
int3
jmp
push
lods
sbb
addr16
in
iret
bound
pop
pop
add
pop
sbb
sub
add
xor
test
fstpl
arpl
icebp
mov
sbb
shrb
inc
ret
adc
iret
push
imul
jge
pmovmskb
push
shll
dec
and
je
xchg
lea
cs
test
mov
sbb
dec
rcr
int3
add
out
lods
repz
xor
adc
sti
pusha
add
repz
cmp
lods
repz
mov
nop
into
jns
std
inc
add
incl
add
test
in
hlt
insl
mov
ds
mov
dec
push
mov
jns
xchg
cmp
icebp
pop
call
cmp
fldenv
fistl
jb
adc
mov
sbb
mov
std
iret
mov
mov
test
dec
push
xchg
mov
arpl
xor
sarl
ret
xchg
push
adc
es
sub
roll
test
inc
in
clc
sub
pop
mov
or
mov
mov
mov
lahf
shlb
pushf
jne
sti
add
notb
push
and
dec
into
cmp
in
and
call
cmp
dec
repnz
adc
data16
push
adc
out
out
in
mov
xor
cs
xchg
popa
outsb
fnstcw
inc
fmuls
adc
arpl
sub
add
daa
push
cld
push
std
jmp
dec
push
test
add
add
add
jne
xor
mov
andb
inc
icebp
dec
cmp
add
jb
in
popl
lds
cltd
in
add
fidivrs
cltd
test
and
cmp
das
and
aad
sub
loope
fstp
cld
movsl
cwtl
mov
stos
push
mov
loop
adc
cmp
cwtl
mov
sahf
pop
loope
push
xchg
mov
arpl
push
outsl
lock
pusha
incb
cmpb
imul
pushf
out
adc
pop
adc
movb
es
and
jmp
jnp
xchg
stc
jle
jmp
hlt
mov
and
movsl
and
jae
outsb
mov
pop
in
add
or
mov
mov
out
cmp
cmpsl
mull
push
aam
and
and
jb
and
in
adc
sub
add
mov
adc
dec
push
add
sbb
dec
push
out
aad
jge
jae
sti
inc
add
incl
add
inc
pop
iret
pop
das
push
je
push
pop
lret
or
out
push
dec
cltd
repnz
fisubrs
sub
les
data16
lock
xor
pop
call
cmp
addb
loopne
cs
mov
insb
ja
popf
inc
pop
out
arpl
pop
and
aas
loopne
pop
jno
enter
in
push
jl
and
xlat
cltd
push
loope
mov
pop
inc
test
mov
daa
ret
into
xor
or
push
insl
add
mov
fcmovnb
hlt
leave
sub
ja
arpl
int3
daa
dec
insb
aas
mov
cmc
push
inc
loopne
pop
push
stos
test
adc
inc
imul
in
xchg
or
add
cmp
cmp
mov
ficoml
mov
addr16
ss
cmp
pop
jg
or
push
or
xchg
add
ficompl
push
jecxz
mov
push
inc
add
idivl
or
popa
pop
out
inc
add
incl
add
and
fcompl
outsb
push
add
and
outsb
push
push
in
push
loopne
ss
lret
and
imul
inc
std
shll
into
jno
mov
mov
pop
sarb
jl
aas
movsl
ds
dec
mov
outsl
mov
push
sahf
or
stc
pusha
jmp
out
inc
cmp
cltd
mov
mov
aas
scas
xchg
push
int3
leave
insl
leave
aad
adc
dec
pop
jbe
adc
pushf
pop
js
pop
sti
inc
popf
sub
into
std
sub
into
xchg
orl
sub
cmp
in
jecxz
cmp
pushw
pop
pop
imul
jnp
inc
inc
test
xchg
into
push
add
xor
mov
mov
dec
push
cmp
lahf
jmp
loopne
xchg
cli
fistl
mov
mov
dec
and
cmp
xor
add
adc
ja
xchg
repnz
xchg
add
add
jg
xchg
orl
jne
inc
add
incl
add
mov
push
mov
vcvttss2si
jmp
cmp
test
repz
loope
sahf
cld
add
and
mov
js
and
cli
nop
enter
sub
in
in
adc
nop
in
ja
jge
pop
fstpt
and
mov
dec
lock
ss
xchg
hlt
pusha
pop
push
cmp
push
cltd
out
and
dec
jb
data16
aas
stos
or
mov
fnstcw
jb
mov
push
daa
sbb
sahf
mov
add
shlb
pop
rdpmc
or
mov
adc
int3
mov
sub
xchg
sbb
lock
fildl
mov
dec
mov
push
test
adc
or
push
test
or
pop
mov
divb
clc
mov
lods
adc
popf
scas
dec
or
fbld
test
ret
iret
ret
into
jno
ret
add
add
push
dec
lret
jmp
imul
aaa
je
fs
mov
incl
add
nop
mov
jbe
jge
inc
call
sub
sub
sbb
nop
inc
adc
xchg
es
adc
daa
sbb
add
adc
lahf
lahf
adc
into
imull
mov
jp
ret
xorb
sbb
jae
add
call
clc
jnp
pop
inc
pop
adc
sarl
mov
xchg
int
pop
fstl
cmp
mov
in
xchg
sub
mov
push
xchg
fildl
stos
outsl
outsl
mov
movsb
in
jmp
push
adc
push
movsl
mov
lea
and
pushf
mov
push
and
pop
xchg
fildl
scas
cmp
fistl
sub
shl
aaa
add
sbb
cmp
or
add
xchg
rcrb
and
cmp
dec
or
xor
sub
cmpsl
adc
cmp
adc
inc
cmp
push
pop
jbe
cli
mov
shlb
mov
sub
lds
cmc
cwtl
xchg
push
sub
pushl
xor
inc
add
incl
add
fsubrp
in
ss
jge
push
insl
push
mov
icebp
sbb
jb
or
sbb
inc
cltd
cmp
mov
dec
mov
mov
sbb
jmp
add
lcall
roll
scas
sahf
or
mov
into
pop
mov
add
xchg
pop
or
xlat
mov
imul
push
outsb
loopne
bnd
hlt
dec
dec
js
int3
je
mov
mov
or
add
xchg
push
sbb
rcll
push
mov
cmp
mov
movsl
clc
jne
repz
out
xchg
pop
scas
outsb
scas
int
scas
test
lret
or
mov
ds
sub
add
movsl
adc
fiadds
in
push
sahf
cmp
frstor
dec
imul
mov
fsubs
mov
push
les
in
jne
inc
dec
push
test
loopne
movsl
add
jns
xor
jg
add
add
incl
add
clc
jmp
jnp
inc
rol
nop
push
int3
add
test
xor
dec
mov
mov
adc
adc
and
mov
jle
sti
stos
into
mov
sbb
cwtl
mov
out
rcll
nop
inc
out
or
push
repz
pop
lret
and
fisubl
jo
jne
and
xor
or
arpl
push
mov
and
bound
in
popa
popa
test
inc
nop
into
int3
jl
ffree
lret
into
and
das
add
xor
push
int3
push
loopne
hlt
lods
lcall
cli
push
popa
jo
xchg
cmp
movsb
pop
dec
out
push
sti
pop
or
mov
push
xchg
enter
xchg
fwait
sub
jo
mov
and
xchg
xchg
fimuls
pop
cmp
jns
xlat
push
inc
in
enter
cli
xchg
and
push
in
popa
jmp
add
ret
jg
decl
rol
or
mov
add
add
add
test
je
popa
fnstcw
or
sub
lret
in
push
xchg
stos
pop
pop
mov
push
mov
push
mov
xchg
jg
xor
jno
jo
cmp
pop
lods
rcrb
jl
sarl
fsubl
js
loopne
call
and
cmp
test
out
xor
jle
pushf
mov
pop
ds
fstpt
xchg
pop
mov
repz
sahf
mov
mov
cs
or
fcmovbe
nop
ficoml
iret
sub
addb
inc
push
pop
mull
xor
mov
push
pop
and
fidivrl
lock
les
pop
stos
nop
mov
mov
push
cli
neg
xor
dec
in
test
and
clc
mov
jo
push
fsub
or
movb
sar
add
add
add
das
mov
out
aad
stos
or
hlt
dec
add
incl
add
lock
inc
sbb
sub
inc
jo
cmpl
mov
fisubrl
dec
sbb
out
xchg
pop
mov
sub
pop
and
repz
roll
xchg
popa
btc
imul
xor
mov
jg
pop
push
mov
cs
lahf
push
xchg
jecxz
add
or
jne
mov
dec
add
pushf
xor
out
pop
mov
gs
addb
push
std
or
aad
xor
xchg
push
lods
rcrl
sbb
shl
cmp
clc
pop
inc
pop
daa
imull
and
push
adc
cmc
inc
sbb
xor
ljmp
inc
jge
mov
adc
inc
stos
jo
cmp
add
mov
mov
push
and
rolb
adc
jge
inc
push
movsl
sub
fldcw
cmc
data16
add
hlt
gs
dec
adc
xlat
scas
repz
add
incl
add
lahf
cld
lahf
or
and
outsl
cltd
dec
push
loop
mov
xor
or
mov
sub
push
pop
fldt
lahf
mov
cli
add
loopne
inc
fwait
dec
dec
test
push
sarl
ds
xchg
adc
add
adc
xchg
mov
xchg
call
fstp
lock
push
and
and
push
fsubp
jle
vpmulhuw
test
loop
push
xchg
pop
push
clc
push
sbb
xor
aas
push
pop
mov
cmp
fildl
add
push
ror
lods
mov
mov
jae
add
add
jp
jge
inc
loop
imul
fldlg2
std
lods
fmull
mov
and
stc
mov
test
call
pop
sbb
xchg
inc
cmp
lret
jmp
or
das
pop
xchg
and
loop
das
jecxz
and
test
add
aas
gs
pop
repnz
dec
add
incl
add
mov
cmp
lcall
jp
push
test
imul
jnp
fistps
stc
pop
outsb
test
test
lds
jecxz
loopne
adc
xlat
dec
mov
mov
pop
jbe
int3
loope
cwtl
fadds
mov
and
mov
add
mov
xor
sbb
fstpt
mov
inc
cmpsl
or
xchg
fistps
stos
and
mov
dec
lea
fisttpll
sbb
push
ret
je
push
addl
movsb
iret
cmp
dec
dec
mov
or
xchg
jae
jo
aam
es
mov
and
ja
lock
mov
adc
jmp
jb
mov
ljmp
lret
jp
mov
stc
data16
pop
xor
loope
mov
mov
dec
mov
mov
fldt
jno
add
push
adc
sub
mov
out
fisttpll
lock
pop
jae
dec
add
incl
add
ljmp
xchg
fcoms
mov
out
push
push
addr16
add
dec
dec
int3
pop
adc
sbb
pop
daa
cwtl
sub
int
mov
inc
xchg
stos
adc
scas
scas
in
or
mov
cwtl
or
divl
ret
cmpsb
in
push
mov
daa
shll
mov
ss
insl
add
mov
sahf
xor
mov
testb
or
cld
movsl
lds
hlt
iret
loop
ds
push
lds
inc
sub
xchg
or
data16
ss
mov
push
insl
jge
aam
add
enter
stos
insb
jp
lds
add
add
mov
test
mov
push
loop
js
lods
in
addr16
add
inc
xchg
and
sar
pop
pop
push
out
adc
pop
dec
lahf
pop
mov
jno
fidivrl
sbb
out
data16
ret
inc
shl
xchg
add
mov
ljmp
add
incl
add
clc
out
xchg
and
jo
adc
fstl
fsubs
pop
jmp
test
mov
adc
pushf
movsl
sbbb
dec
inc
pusha
add
mov
mov
cld
mov
popa
and
push
adc
xor
std
scas
push
dec
lds
fwait
or
jmp
cmp
ljmp
in
call
dec
lods
or
mov
out
scas
repnz
div
aad
rorl
xchg
mov
call
rolb
mov
or
dec
hlt
mov
icebp
mov
pop
mov
sub
outsl
xchg
and
add
mov
xchg
sub
or
inc
pushl
inc
mov
in
mov
imul
je
ret
sbb
mov
jecxz
enter
das
lds
push
jecxz
out
std
aad
fsubr
imul
lret
roll
add
add
jmp
out
aas
jo
sahf
jb
push
jno
out
dec
add
incl
add
push
arpl
inc
mov
sub
ficoml
pop
and
notb
xchg
lcall
xchg
sub
push
daa
push
xor
jb
out
pop
jg
imul
cmp
xchg
mov
cwtl
stos
jg
bound
rcl
adc
je
addr16
jmp
sarb
sub
or
adc
mov
and
cs
adc
xchg
insl
push
or
xchg
aaa
imull
and
mov
pop
shll
mov
lock
cmp
in
and
mov
int
rorl
frstor
jecxz
or
fidivl
push
aas
pop
fs
sbb
and
fiadds
sar
cmp
xor
push
fstpl
mov
pop
fwait
js
fadd
inc
add
data16
push
testb
inc
inc
xor
cmp
imul
out
mov
mov
and
jg
dec
add
incl
add
aam
in
or
mov
insb
add
mov
or
dec
leave
stos
lcall
mov
mov
add
loopne
xor
pop
mov
sub
mov
shlb
lahf
popf
xor
inc
nop
push
dec
pop
sbb
dec
adc
test
inc
or
imul
test
mov
movsl
and
in
dec
adc
mov
mov
fisttpll
inc
test
adc
movsb
out
jo
mov
or
lret
std
stc
test
cli
es
sbb
pop
inc
repz
push
pop
daa
icebp
popa
sub
pop
push
shrb
scas
pop
pop
insl
jno
jp
roll
mov
clc
pop
hlt
imull
loopne
andl
icebp
lds
arpl
mov
cmp
ja
orl
dec
out
cmp
push
mov
inc
add
add
dec
stc
mov
ljmp
in
push
add
incl
add
js
lahf
adc
xor
fsubs
in
cmpsl
add
test
add
ficoml
test
pushf
inc
xchg
rcr
xchg
scas
cmpb
rclb
adc
push
loop
dec
mov
jmp
in
sbb
mov
stc
out
add
mov
add
jmp
xor
aad
call
jnp
fld1
mov
xor
scas
push
addr16
fidivs
xchg
cli
inc
cmp
test
test
cmc
pop
andb
cmp
sti
add
mov
popa
jl
shll
aas
enter
push
push
push
loop
sub
mov
mov
aad
aas
test
das
cmpsb
sub
inc
add
scas
xor
andl
out
adc
pushf
scas
test
loope
shrb
inc
xor
stos
fs
jns
mov
add
xchg
cmp
jle
jg
cld
lcall
adc
push
add
incl
add
rcrl
loope
pusha
rclb
les
imul
stc
inc
lods
jecxz
xchg
cmp
repz
lcall
out
add
xchg
mov
mov
std
adc
jge
repnz
mov
or
lcall
or
mov
js
clc
xchg
mov
dec
add
lea
iret
ret
fmul
mov
cmp
enter
scas
xor
xorb
and
sbb
xchg
cmp
and
fldt
dec
addb
sti
repnz
enter
pop
aam
dec
dec
pop
xchg
mov
jmp
adc
in
mov
aam
out
jns
adc
pop
loopne
xchg
mov
mov
lcall
sbb
sub
fldcw
out
mov
adc
outsl
arpl
aaa
xchg
je
add
xchg
mov
pop
mov
push
add
incl
add
out
inc
or
stc
inc
sti
fdivrl
xlat
jo
dec
js
and
cmp
loope
jg
sti
mov
or
mov
inc
push
stos
loopne
sub
xor
jae
sbb
nop
or
push
rorl
fcmovnbe
std
repnz
stos
and
add
test
pop
sub
mov
xorl
incb
insb
inc
cmc
adc
es
lret
xor
inc
xchg
mov
das
jbe
popa
push
jno
test
dec
lock
inc
idivb
xor
clc
cmp
jge
pushf
xor
cmp
fstp
add
xor
mov
clc
pop
cmc
outsl
shr
decb
xor
push
xchg
push
jne
jb
inc
mov
dec
jb
inc
call
lock
outsl
mov
lahf
incb
add
inc
lret
add
inc
mov
push
push
jmp
push
mov
addr16
add
dec
inc
loopne
cmpb
leave
les
mov
mov
out
mov
sub
inc
inc
out
ds
mov
mov
rclb
movsb
xlat
into
push
jge
scas
pop
les
call
pop
xchg
mov
lods
sub
je
roll
mov
adcl
pop
inc
cmp
hlt
dec
popf
mov
adcb
inc
mov
mov
movsb
in
jnp
dec
dec
pop
mov
inc
fcoml
xchg
push
xchg
clc
sbb
or
lods
dec
out
pop
mov
push
adc
ja
rcrl
dec
movl
dec
dec
leave
adc
aas
xchg
adc
or
repnz
lahf
mov
mov
xorl
and
aas
outsl
xchg
inc
outsl
push
sahf
cmpl
out
fidivrs
out
sbb
stc
test
fdivl
push
jg
add
sub
cmp
ret
or
push
addr16
jmp
add
add
ficoml
push
inc
shrb
cmpsb
mov
xor
and
sahf
inc
mov
pop
fldl
mov
je
mov
xchg
cmp
jbe
lods
mov
lock
xor
or
repz
pusha
cmp
jbe
jge
or
leave
jle
test
sbb
xchg
cltd
setae
out
mov
daa
cli
sbb
loopne
adc
or
hlt
mov
mov
sub
adc
pop
es
faddl
rcrb
lock
shrl
and
adc
clc
xor
shr
xchg
fdivrl
xchg
xchg
or
add
dec
scas
push
enter
mov
dec
mov
jecxz
pop
push
movsb
mov
add
dec
push
sbb
mov
inc
mov
sub
add
push
shll
out
pop
pop
pushf
push
jecxz
xchg
nop
call
add
add
cmpl
gs
or
pop
xor
imul
sahf
cli
jge
data16
aam
lahf
ret
ss
daa
lret
gs
pushf
add
dec
push
outsb
pop
in
pop
inc
add
inc
sbb
mov
pop
pop
das
gs
or
add
cmp
adc
fiadds
cltd
sbb
xor
jno
enter
shll
out
cmpsl
ljmp
movsb
inc
mov
mov
fs
push
dec
inc
cmp
lds
lea
xor
lods
movsl
popf
lods
mov
stos
mov
mov
push
jle
adc
xchg
mov
add
pop
ret
int3
out
cmc
popf
cmp
outsb
outsb
push
nop
push
cmp
and
pop
and
lret
addl
xchg
xchg
jnp
xor
pop
push
pushf
rcrl
xor
mov
adc
test
loopne
rclb
lcall
stos
push
lcall
hlt
mov
bound
add
add
add
mov
clc
dec
fucom
je
loop
xchg
push
xchg
cmp
mov
push
insl
dec
mov
hlt
cwtl
lea
mov
test
adc
test
sub
xor
sub
pop
mov
sub
mov
and
pop
inc
lret
push
mov
hlt
push
sub
out
push
or
xor
imul
pop
dec
ret
fbld
fscale
sbb
and
xchg
push
les
pop
shrb
sub
cmp
mov
or
fwait
dec
xchg
push
fwait
pop
pop
aaa
lds
cmp
aaa
shl
rcl
call
lret
jno
push
mov
lock
xchg
jnp
cmp
imul
loop
ljmp
xchg
cmp
add
lods
ss
pushf
add
sbb
push
testb
lds
jo
aad
ret
xlat
cmp
shlb
push
call
jge
add
jbe
idiv
imul
jle
sub
push
add
incl
add
ret
add
fcmove
icebp
mov
push
cmp
mov
mov
push
push
dec
xchg
xchg
or
scas
and
sbb
mov
jb
add
push
into
arpl
xor
cwtl
repz
lahf
subl
xor
daa
stos
in
dec
dec
mov
add
cltd
stos
adc
xorl
inc
push
or
cmc
xchg
xlat
inc
cli
mov
inc
nop
push
nopl
xor
cltd
stos
mov
flds
out
adcl
mov
or
mov
loopne
jnp
int
mov
out
lcall
sbb
inc
pushf
sub
and
mov
adcb
pop
std
aaa
outsl
mov
pop
mov
push
pushf
mov
sbb
sti
xchg
sbb
loopne
fimuls
jns
add
loop
hlt
jl
lret
add
add
fwait
cmp
stos
sarb
in
add
incl
add
jg
dec
mov
xor
push
cmp
lds
insl
in
fprem
test
cmpb
jb
ret
jne
dec
xor
dec
pop
in
ja
mov
test
adc
lods
out
mov
pop
sbb
dec
inc
mov
adc
lock
push
fnstcw
ror
lds
movsb
inc
in
dec
pop
int
mov
push
pop
jo
pop
pop
les
ljmp
out
mov
dec
adc
mov
aam
in
lahf
mov
xor
jae
nop
inc
ss
lock
das
pop
mov
sub
call
jmp
xor
push
notb
ret
int
insl
pushf
mov
dec
sub
cltd
test
mov
arpl
in
daa
inc
stos
xchg
or
leave
xchg
aaa
sahf
jae
jno
xchg
pop
mov
sbb
xchg
lret
xor
std
xor
pop
stos
mov
add
inc
push
clc
mov
and
hlt
xchg
in
dec
push
in
add
incl
add
fisubrl
scas
fldt
sub
jo
xchg
xchg
sarb
dec
lods
xor
xchg
test
push
mov
jmp
call
mov
sub
lock
into
sub
jl
popf
enter
and
jg
push
pop
sub
or
jp
dec
jne
loopne
lret
adc
mov
adc
mov
dec
in
fdiv
stos
imul
push
shlb
mov
in
sub
dec
mov
lcall
out
mov
mov
repz
xorl
mov
clc
pop
cmp
mulb
jnp
push
jp
sbb
inc
stos
pop
mov
lret
cwtl
xor
dec
insl
sbb
xchg
lcall
in
mov
in
mov
mov
or
push
xor
loopne
cld
push
mov
dec
inc
inc
sbb
scas
inc
or
popf
in
push
xor
add
shr
mov
mov
sbb
pop
add
incl
add
xor
pop
lods
pop
push
pop
lods
pop
dec
lods
test
sbb
pop
add
or
clc
xor
xchg
push
stos
sbb
in
inc
xchg
aaa
in
mov
pop
cmp
mov
xchg
jbe
es
fcompl
mov
inc
jo
pop
pop
fistl
cmp
or
shll
das
cmp
push
jns
mov
testb
es
mov
lods
bound
sbb
aas
and
inc
mov
rcl
lea
jge
insb
and
add
aad
add
dec
fcompl
aaa
dec
sub
lds
add
pop
or
jmp
leave
incb
icebp
push
add
mov
je
fwait
pop
sub
mov
sbb
movb
in
icebp
add
jg
cmpsl
xor
push
loope
add
push
add
test
or
fdivs
cmp
imul
add
incl
add
data16
fstps
add
pop
fstpl
in
mov
pushf
repz
out
ret
push
sahf
mov
into
cmp
and
mov
mov
mov
push
or
mov
leave
loopne
jl
inc
add
dec
lods
hlt
jne
mov
sbb
shll
xor
movsb
call
pop
or
pop
test
jnp
nop
lcall
cmpsl
mov
in
or
fsubr
pop
sbb
in
mov
js
shrb
pop
ljmp
mov
movsl
nop
dec
dec
push
push
mov
gs
inc
iret
mov
push
lods
adc
sti
es
push
xchg
ja
out
xchg
mov
push
pop
fimuls
in
subb
les
sbb
dec
mull
xor
mov
cmc
cmc
lret
arpl
adc
add
mov
pusha
sbb
dec
loope
add
incl
add
push
mov
mov
popa
test
fdivs
jle
adc
popf
inc
push
aas
mov
lock
push
js
push
sbb
nop
dec
cmc
addb
inc
fisttps
xchg
mov
jne
leave
sbb
add
movsl
push
lret
xor
pop
jge
das
rol
out
in
cmc
cmp
outsl
lret
faddp
ja
mov
out
or
data16
adc
ret
call
mov
dec
cld
les
jne
scas
movsl
out
dec
mov
js
and
jp
adc
xchg
mov
enter
int3
movsl
pop
lret
into
test
lock
ja
sti
push
scas
xor
lods
and
in
mov
cmpsb
insb
pushf
mov
xchg
rorb
popa
shrl
lcall
pop
and
push
imul
ret
sub
inc
jg
jmp
or
movsb
xchg
push
cmp
fsubl
mov
ja
mov
dec
xlat
mov
incl
add
mov
pop
mov
shrb
rol
gs
and
jns
pop
test
sub
mov
jecxz
shlb
push
xchg
jg
jne
inc
mov
imul
ds
divb
nop
dec
push
push
mov
mov
add
cmp
xor
sub
cmp
sub
jns
mov
xchg
std
mov
mov
cmpsb
mov
bswap
add
add
sbb
stos
push
or
xor
jo
pop
out
push
imul
fucomip
scas
jge
cld
inc
arpl
test
out
iret
adc
sbb
jns
outsb
xchg
sbb
clc
ficomps
pop
ficoms
lret
sub
cwtl
mov
sub
aam
and
xchg
adc
ret
int3
outsb
mov
ret
cli
cmpsb
add
and
sbb
xchg
jle
fistl
fcompl
sbb
aaa
insl
xor
sbb
jmp
dec
inc
add
xor
xlat
out
cld
mov
pop
add
incl
add
jmp
jmp
dec
mull
ret
outsl
imul
mov
shll
pop
push
cmp
sub
pusha
jmp
sbb
jle
mov
std
or
aad
call
hlt
push
cli
ja
add
xchg
inc
imul
fwait
cmp
and
jmp
lds
jle
imul
aad
loop
int
cmp
add
dec
arpl
rcl
cmp
rcrl
sub
push
xorl
adc
or
stc
and
jne
gs
cld
fcoml
lcall
sahf
and
mov
insb
ja
add
mov
adc
jb
ss
xchg
push
or
and
sbbl
pop
cltd
xor
inc
inc
call
aad
xchg
cmp
inc
lcall
push
fsubs
mov
cmp
xor
ja
jne
bound
add
mov
add
fidivrl
test
pop
add
incl
add
xchg
test
lahf
testb
es
dec
lahf
dec
mov
ret
and
call
stos
gs
push
mov
dec
outsb
add
ds
sbb
xchg
sbb
fimuls
movsl
mov
mov
push
insl
adc
and
mov
cmpsl
xchg
add
cmc
call
mov
sbb
std
mov
jle
pop
call
call
scas
icebp
mov
jmp
loopne
je
arpl
mov
mov
jbe
sbb
fnstcw
movsl
adc
mov
ja
ds
test
mov
imul
movsl
xchg
xchg
adc
mov
add
push
sbb
cmp
jge
adc
cwtl
repz
fstl
test
mov
dec
mov
dec
jmp
dec
mov
in
icebp
aam
xor
mov
xor
out
into
push
push
inc
lahf
mov
frstor
add
add
add
fldcw
inc
cs
leave
mov
fistpll
loopne
push
inc
sub
sahf
in
in
loopne
xor
lcall
sub
outsb
rorb
push
rdtsc
xchg
xlat
mov
mov
enter
jmp
cmp
cmp
cld
fdivrl
iret
iret
cld
bound
rcll
inc
out
or
push
add
mov
adc
push
xor
ss
xor
mov
sub
push
mov
fwait
adc
jo
sbb
cmp
dec
pop
lret
fucomip
push
jnp
xor
cmpsl
pop
xor
adc
inc
out
sahf
pop
or
sub
pop
cli
mov
inc
add
and
inc
pusha
xchg
mov
mov
pop
loope
rcrb
arpl
inc
bound
rcll
add
insl
add
dec
push
xor
mov
jg
dec
adc
mov
jns
scas
mov
and
mov
jg
or
fsubl
add
add
add
jle
xchg
icebp
or
add
jno
ret
cld
lcall
jl
arpl
jbe
cs
jbe
adc
sbb
or
test
xchg
sbb
idiv
jo
adc
nop
roll
pop
jg
sbb
outsl
es
xchg
out
roll
jecxz
pop
jg
lock
lea
mov
mov
jae
jle
stc
pusha
incb
jns
sub
pop
js
repz
mov
ret
ss
lret
and
repnz
sub
out
mov
ds
mov
pop
sub
push
pop
divb
imul
out
fbstp
scas
dec
xor
mov
nop
pop
fistpl
cmp
xchg
hlt
ja
mov
push
faddp
popa
and
repnz
mov
std
into
cmpl
push
adc
int3
je,pn
rcrl
sub
add
add
add
lahf
pop
cmpsl
jne
mov
bound
add
add
add
mov
cmp
ds
dec
add
jp
clc
xchg
mov
lret
mov
fsts
pop
jbe
mov
gs
cs
mul
dec
mov
pop
cltd
adc
jmp
mov
mov
fnstsw
stos
bound
mov
fs
arpl
inc
mov
test
clc
popf
and
sti
mov
das
add
rcl
scas
adc
push
jb
or
sub
mov
sub
repz
aad
ss
shll
pushf
push
push
out
pop
inc
xor
sysenter
mov
mov
add
sbb
pmaddwd
insb
repz
fnstcw
sub
pop
add
sbb
ljmp
mov
push
ss
leave
jmp
test
aas
lock
sti
scas
fistl
ds
push
jp
andb
or
mov
sahf
pop
testl
js
or
arpl
add
add
add
and
xor
mov
ja
repz
xchg
ljmp
scas
insb
ror
inc
pop
add
pop
fnsave
imul
pop
fisubrs
sub
test
jmp
rorb
les
cli
rclb
cmp
hlt
sbb
xchg
mov
js
sbb
sub
inc
and
jg
repnz
outsb
jbe
mov
ljmp
dec
movl
and
std
pop
adc
and
imulb
push
test
jmp
out
scas
inc
xor
int3
into
cmp
jns
jo
popf
push
movsb
je
cmpl
mov
mov
loopne
or
cs
fcomp
pop
ret
add
in
sahf
mov
imul
xchg
cli
fwait
add
stos
mov
xlat
and
lret
pushf
add
pop
mov
fstps
xchg
cld
fldenv
incl
add
adc
out
mov
scas
mov
dec
out
lds
sbb
mov
cmp
scas
insl
ds
shl
loope
xor
mov
shlb
in
movsb
pop
push
js
jg
ret
adc
mov
sub
push
sbb
or
jbe
jno
jne
iret
mov
sub
xorl
test
or
imul
bound
clc
addr16
sub
dec
inc
xchg
mov
filds
inc
stos
xor
pop
iret
dec
and
xor
fidivrs
sub
sbb
outsb
stos
jne
jl
dec
out
mov
popf
pop
iret
dec
jg
shlb
cmpsl
cmp
jne
sbb
adc
pop
arpl
popf
sbb
fistps
lret
movsb
adc
mov
adc
lret
sbb
mov
pop
cmp
fs
pop
add
lcall
ljmp
repnz
movsb
jle
arpl
mov
fsubs
add
add
add
cmp
hlt
add
scas
loopne
mov
push
xor
dec
xchg
mov
xor
jecxz
mov
mov
and
or
add
lea
dec
push
icebp
inc
mov
ja
rolb
mov
fisubs
mov
mov
cltd
jb
call
pop
mov
inc
in
xchg
mov
js
push
adc
clc
cmp
lahf
jp
inc
mov
and
add
out
mov
inc
pop
mov
icebp
pop
or
xchg
lcall
cmp
sbb
pop
jg
cmpsl
xor
aas
stos
cmp
fisubrs
jae
pop
xchg
stc
stos
and
js
jbe
insb
bound
es
lds
or
mov
xor
mov
adc
mov
mov
test
mov
jl
mov
arpl
mov
aam
add
jmp
sub
jg
aaa
or
add
incl
add
cmp
fs
out
push
dec
orb
or
out
in
adc
test
stos
ja
pop
int3
rolb
ret
aam
or
or
ss
pop
mov
test
mov
mov
mov
daa
dec
mov
sbb
mov
std
enter
clc
dec
cmp
shlb
pushl
stos
and
xchg
cmp
nop
pusha
jle
jns
pop
mov
call
inc
jge
shrb
subb
xchg
fwait
or
xor
jb
call
jnp
dec
adc
mov
cld
daa
in
sub
test
in
aam
repnz
add
xor
shl
push
lock
mov
cwtl
pop
pop
mov
test
std
pop
mov
jl
ljmp
and
lret
sti
jp
xchg
jecxz
mov
inc
les
add
add
cli
clc
push
add
mov
fnstenv
jl
aaa
or
add
incl
add
mov
adc
idiv
fnsave
jecxz
lods
inc
cs
mov
dec
mov
or
mov
fdivs
mov
inc
in
dec
pop
xlat
sub
sti
or
sub
dec
xor
shl
pop
iret
mov
mov
bound
ret
clc
dec
outsl
cmp
inc
movsb
pop
pop
mov
fmull
fwait
adc
icebp
push
sbb
and
dec
jne
push
fistps
mov
cltd
mov
push
movsl
es
jle
adc
bound
andl
xor
push
arpl
mov
nop
pop
xor
cmpsb
repnz
lods
loope
cmp
clc
sbb
mov
add
mov
leave
inc
orb
dec
outsb
ret
lods
add
or
xchg
fistps
lods
and
ffree
push
rorb
push
mov
sub
lock
or
mul
add
arpl
cmpsl
mov
pop
mov
push
inc
fildl
cld
je
jbe
jns
sbb
inc
mov
add
add
add
pushf
sbb
sbb
mov
jmp
iret
test
orb
loop
push
testl
adc
sbb
fldt
int
loope
js
nop
fdivl
or
call
push
in
outsb
pop
in
shrb
mov
mov
cmp
cmp
iret
into
dec
in
fimuls
aaa
enter
inc
jp
cmpsl
aas
outsl
pop
add
sub
pop
in
lcall
repnz
out
sahf
jo
push
mov
pop
jmp
add
adc
xchg
dec
lret
enter
pop
adc
repz
das
fisttpl
nop
daa
xchg
cmp
jae
rolb
add
sbb
in
into
sbbb
lret
sti
fs
sub
jnp
mov
out
lcall
std
addb
jg
imul
add
faddl
cld
mov
cld
inc
jmp
xchg
mov
das
sbb
push
cltd
jmp
fildl
or
add
incl
add
pusha
outsl
sub
into
mov
fsubrp
pop
and
mov
mov
mov
and
push
push
sub
xchg
and
inc
fwait
cwtl
mov
jae
pop
jecxz
xor
lods
push
rclb
mov
pop
imul
sahf
mov
dec
inc
fwait
stos
jp
add
push
arpl
outsl
inc
ljmp
push
fimuls
aaa
iret
popf
xchg
mov
cmpsb
ljmp
cltd
repnz
xor
push
sub
jmp
in
sub
mov
pop
in
int3
mov
cmp
dec
fiadds
mov
cmp
lea
mov
call
jns
loope
cs
arpl
aam
jmp
lret
pop
int3
mov
jge
incb
pop
inc
lea
into
ficoml
xor
jecxz
sbb
pop
push
push
or
mov
mov
fdivl
add
mov
xchg
jmp
add
mov
mov
push
jg
dec
xchg
dec
cmp
in
shrl
add
add
add
add
stos
adc
pop
fsts
hlt
cmpsl
aas
addr16
jle
ljmp
and
icebp
mov
popf
das
dec
ljmp
xor
cmpl
scas
insl
xchg
into
mov
dec
hlt
movsl
test
add
and
pushf
outsb
mov
dec
js
mov
dec
out
and
xor
pushf
mov
dec
pusha
xor
roll
sbb
cli
sub
test
cld
add
add
push
data16
dec
mov
enter
push
stos
cwtl
and
push
cmpsb
dec
mov
push
les
add
mov
in
or
sbb
fisubl
outsl
mov
pop
push
rolb
mov
lret
hlt
rcr
das
aam
sub
scas
sbb
int
mov
mov
mov
js
xchg
mov
adc
mov
jg
sub
iret
mov
fucomip
push
insb
xor
xor
mov
shrb
add
add
add
cmp
push
mov
daa
pop
stc
outsb
or
dec
and
ja
icebp
shrb
or
aad
mov
pop
and
and
dec
mov
stos
test
dec
jp
or
dec
ret
adc
jbe
xchg
iret
add
mov
mov
dec
out
lret
and
pop
jmp
dec
mov
adc
mov
fiaddl
and
push
scas
mov
cmp
out
hlt
and
mov
push
jnp
adc
push
cmp
pop
xchg
mov
dec
inc
cmp
repz
orb
lret
mov
jnp
sub
enter
sbb
rorb
dec
sub
les
repnz
jp
icebp
cmp
test
pop
jno
ret
jbe
bound
add
jae
cltd
jmp
add
arpl
push
sahf
out
dec
mov
rolb
imul
dec
out
iret
jmp
aas
in
push
data16
stos
addl
add
add
push
ret
mov
pusha
push
mov
inc
jecxz
loope
into
lock
xchg
addr16
call
aas
rcrl
xchg
imul
add
into
out
pop
pusha
jecxz
mov
dec
sahf
aam
xor
jno
jge
add
mov
shlb
and
shr
loope
jns
inc
sbb
test
sbb
mov
jae
sbb
rolb
dec
jae
sub
jbe
iret
jle
bound
imul
fisubrs
inc
or
outsl
aam
or
test
test
pop
lcall
and
shrb
movsb
ret
xchg
dec
jmp
sub
sbb
cmp
jl
xor
adc
sbb
cli
mov
sarb
adc
cwtl
mov
xchg
ds
das
jmp
add
push
xor
dec
push
add
std
cmpsb
pop
dec
sub
sub
insl
add
incl
add
mull
pop
movsl
xor
sub
testb
lea
add
mov
sahf
xor
dec
mov
xor
jmp
dec
or
push
inc
es
mov
stos
xchg
jp
jne
aad
lods
insb
add
std
clc
cmp
add
rcll
dec
imul
pop
lahf
ret
mov
in
mov
adc
pop
aas
mov
or
cmp
mov
push
jb
mov
cld
ss
insl
lds
outsl
scas
in
jle
fs
xorl
add
pop
outsb
mov
xchg
adc
scas
mov
insb
xchg
lds
sbb
lea
push
sahf
jnp
mov
cmp
ret
jge
sub
leave
dec
gs
clc
push
inc
fildl
mov
adc
pop
mov
incl
jmp
mov
pop
mov
cmp
loop
add
neg
std
sub
dec
dec
cmpsl
imul
add
incl
add
add
and
ret
iret
xchg
movsl
pushf
and
push
nop
clc
cltd
scas
mov
xchg
mov
inc
push
mov
xlat
imul
jo
xchg
inc
add
loopne
in
movsl
bnd
cmp
int3
lock
or
adc
inc
mov
out
orb
sub
sahf
lock
cmpb
in
dec
mov
xchg
and
sub
loope
xchg
clc
daa
std
pop
pushl
inc
shll
push
call
paddd
cmc
cltd
ss
xor
mov
cmc
jo
jle
je
jl
xchg
lahf
or
rol
ds
dec
sub
pusha
pop
pushf
mov
cmp
xlat
movsl
xchg
shl
inc
cld
mov
int
pop
imul
adc
aam
jmp
push
out
push
cmp
jb
cmpsb
xor
les
fldl
das
insl
cmp
je
push
and
xor
push
add
stos
ljmp
add
add
cs
xor
cltd
fwait
adc
pusha
into
outsl
add
incl
add
pushf
cmp
arpl
dec
xchg
pop
scas
add
js
jle
jp
iret
cltd
dec
rol
dec
jbe
push
test
jl
mov
in
mov
nop
inc
or
and
imul
cltd
gs
sub
inc
xor
roll
repnz
loop
fnstsw
pusha
leave
jmp
push
jmp
bswap
ror
sub
lcall
fdivs
mov
xor
imul
das
setno
je
ljmp
adc
insl
adc
es
ficomps
adc
jp
cmp
addr16
jns
shr
mov
push
lock
mov
outsb
fwait
adc
dec
pop
mov
popa
jno
push
daa
add
pop
sbb
mov
cmp
xor
mov
fstps
scas
es
test
pop
dec
mov
lahf
scas
out
popf
daa
in
and
pop
dec
jl
sbb
imul
add
add
ja
out
sbb
push
int
add
incl
add
dec
loopne
fistps
sbb
fwait
dec
jno
sub
rclb
inc
xchg
out
mov
adc
bound
js
jne
jecxz
xor
mov
dec
jle
shll
mov
pusha
jae
flds
out
in
sbb
xchg
rcrl
xchg
leave
lods
in
test
jnp
push
fmuls
mov
sub
iret
mov
dec
xor
cmp
sub
mov
pop
adc
outsb
fs
mov
outsb
movsb
incb
jnp
popa
stc
xor
xorl
sbb
xor
cmpsl
inc
lahf
mov
stos
adc
cmp
lods
mov
ds
in
std
icebp
ja
movsb
xchg
sti
xor
push
xlat
in
mov
xchg
insl
xor
popa
jmp
mov
add
cmpb
les
ss
mov
int
cli
mov
mov
aam
pop
jae
sbb
mov
jns
push
outsb
das
xorb
and
add
add
sub
ja
mov
nop
sub
incl
add
lods
jae
sub
push
lahf
fnstsw
or
fcmovnbe
mov
mov
and
xlat
shrb
stos
mov
jnp
sub
inc
push
xchg
pop
jl
inc
jp
sarl
shl
std
and
xor
cmp
inc
sub
ret
push
notl
xchg
or
jecxz
inc
sub
or
mov
fs
inc
test
mov
leave
pop
cli
and
or
fsubrs
cwtl
je
mov
push
lret
jl
mov
fcoml
fstpl
mov
and
pop
in
pop
jge
mov
and
dec
dec
rolb
jecxz
aaa
out
cltd
xchg
stos
push
cs
shrl
or
xlat
and
cmp
jecxz
cmp
xchg
xchg
xlat
dec
push
scas
xchg
fisttpl
xchg
push
pop
mov
push
adc
push
cmpsl
leave
mov
cmp
mov
stc
scas
and
jbe
int
mov
jnp
outsl
cmpsb
loopne
push
fcompl
add
incl
add
sub
pop
lret
in
ljmp
cmp
jae
cmp
mov
push
movsl
lcall
and
cmp
sti
dec
sbb
xor
or
mov
add
cld
movsl
pop
clc
mov
je
loope
pcmpeqd
fs
movl
bound
subl
cltd
cmp
jae
push
sub
out
in
xchg
sbb
lret
mov
pop
lock
mov
inc
fistps
xlat
stos
imulb
fsubl
jb
and
loop
sub
or
inc
je
mov
xlat
outsb
js
aad
cs
cmp
jns
push
add
jae
rcrb
mov
pop
mov
xchg
push
test
xor
lock
dec
add
inc
jno
xor
idivl
add
add
cli
xchg
jle
push
je
insl
imul
add
aaa
cmc
movsl
adc
add
jl
ret
hlt
inc
jge
sub
dec
add
or
mov
mov
adc
aam
iret
negl
and
mov
mov
outsb
cmp
loop
lods
sub
pop
dec
pusha
loope
movsb
and
scas
mov
push
jecxz
inc
inc
lods
fwait
movsb
xchg
sub
hlt
jecxz
mov
and
cmp
sub
mov
sub
js
insl
mov
insl
outsb
sub
mov
pop
or
push
dec
sbb
push
mov
adc
pop
icebp
out
out
adc
mov
dec
int
or
movsl
scas
in
aaa
jp
jmp
vshufpd
lods
into
cmp
mov
pop
icebp
ret
icebp
pop
stos
add
jle
dec
pushf
dec
out
cmp
loope
cmp
lret
mov
and
aaa
xchg
sbb
push
nopl
nop
mov
inc
aaa
dec
fwait
jnp
aad
sbb
mov
add
add
add
mov
stc
pop
pop
push
test
mov
fsub
sbb
push
mov
ja
fwait
push
cmp
movq
das
mov
and
pop
jne
pop
mov
mov
test
stc
int3
cwtl
out
mov
and
out
mov
inc
adcb
push
stos
inc
mov
mov
adc
mov
arpl
cmp
jle
hlt
inc
xchg
rcr
rol
jl
fildl
lret
dec
orl
or
mov
ds
jne
or
mov
scas
push
nop
cmp
jmp
jnp
or
cltd
cli
popa
push
repnz
out
test
nop
push
xor
mov
into
adc
in
pusha
fildl
mov
ret
pushf
je
test
imul
fcompl
mov
sbb
jns
pusha
stc
or
adc
mov
and
and
mov
xor
roll
add
add
std
mov
sub
fnsave
incl
add
arpl
popf
mov
das
mov
or
pop
pop
loopne
mov
aad
hlt
jge
hlt
popf
mov
sti
fcomps
xchg
xchg
xor
aas
fwait
scas
pop
xchg
mov
cmp
insb
enter
lock
out
cmp
xchg
or
mov
mov
push
fwait
cmpsl
std
xor
arpl
add
cmpsb
push
mov
dec
arpl
fs
lret
xor
clc
fnstsw
movsb
out
and
inc
insl
mov
pop
jp
std
jno
cmpsl
and
pop
push
adc
inc
mov
cmpsl
push
loope
scas
js
pushf
adc
ffreep
test
cvtdq2ps
pop
mov
and
jne
ss
mov
mov
jg
leave
out
pop
call
push
push
movsl
mov
nop
pushf
ret
hlt
dec
push
pop
and
adc
sub
and
call
add
enter
sbb
lds
hlt
add
fstl
lret
cmp
incl
add
sub
das
in
mov
bound
sbb
adc
arpl
dec
mov
mov
insl
aad
xchg
xchg
pop
jg
cld
outsl
js
lret
ficoml
lret
or
sti
das
xchg
and
cmp
cmp
inc
or
mov
adc
test
jmp
jg
testl
jno
adc
cwtl
jecxz
insb
mov
lods
movsb
mov
dec
addb
mov
leave
dec
push
notb
imul
xchg
xchg
mov
push
faddl
mov
fidivrl
or
pop
shll
and
popa
cmp
sub
cmp
test
pop
into
out
sub
push
fstl
sub
mov
repnz
aaa
pop
xor
or
mov
repz
dec
cmp
pop
push
movsb
out
lods
cmp
fwait
inc
add
bound
sub
sbb
ja
add
add
add
mov
lahf
addr16
popa
mov
xor
xchg
push
cmpsb
mov
in
sarb
push
test
fwait
sbb
jo
js
dec
lea
cmpsl
rcll
mov
idiv
lock
pop
lea
push
jmp
pop
sti
aas
adc
push
cmpsb
idiv
sbbb
mov
hlt
in
scas
xchg
imul
mov
and
mov
jmp
inc
test
xor
and
or
mov
mov
cmc
rorb
sbb
out
sub
mov
mov
data16
jmp
loop
sub
shlb
sub
enter
into
xlat
sub
mov
rcrl
hlt
push
jns
mov
and
int3
repz
push
scas
mov
xor
jne
imul
sub
mov
out
mov
add
divl
in
sub
lds
add
add
add
jle
sub
pop
fsubp
dec
aas
lock
jmp
xor
shll
add
sbb
fnsave
sbb
xchg
add
mov
mov
or
incb
loope
das
inc
imul
and
movb
mov
ja
out
jmp
divb
sub
ljmp
push
scas
xchg
imul
fmuls
ds
cli
shl
xchg
pop
xor
pop
dec
lock
or
testb
jp
mov
bound
fisttpl
fwait
cmp
sbb
and
push
call
or
jb
ret
mov
sbb
dec
shr
xchg
mov
xchg
fnstenv
cld
push
push
ljmp
cs
push
push
add
mov
addb
je
dec
pushf
and
testl
xor
pusha
mov
mov
add
clc
fisubs
mov
mov
lds
les
add
add
add
int
jp
mov
inc
inc
xchg
lock
in
enter
lret
sub
cld
push
adcl
pop
xchg
dec
stc
loop
jle
andb
in
and
cli
xor
jo
jmp
pop
jge
adc
jne
push
mov
push
jne
clc
repz
jecxz
test
push
lcall
dec
daa
xor
ret
pop
adc
and
pop
xchg
sub
das
jno
push
mov
or
add
out
mov
test
xor
ret
lods
push
push
sbb
pop
orl
ret
outsb
push
and
dec
adcl
fstpl
xlat
adc
xor
cs
mov
scas
orb
pop
fwait
test
icebp
repz
push
test
or
and
and
daa
pop
mov
bound
test
push
adc
jge
lret
push
dec
mov
test
push
jae
andb
clc
jns
sub
mov
shlb
mov
into
shll
incl
add
out
push
cwtl
pop
mov
divb
leave
adc
inc
sub
ljmp
push
and
cmp
jge
xor
dec
loope
jns
and
jle
inc
pop
jns
sahf
sub
test
push
mov
les
push
dec
fiaddl
xor
imul
or
stc
or
mov
mov
lahf
sahf
ss
call
sbbl
xor
adc
fdivl
lds
sbb
shrb
and
inc
dec
push
fdivrl
xlat
js
xchg
dec
mov
xchg
lds
pop
cwtl
xor
stos
mov
mov
fbld
scas
insb
rclb
cmp
cltd
lock
out
adc
lds
pop
push
popa
das
adc
xchg
and
adc
popf
subb
pop
enter
mov
mov
add
add
testl
dec
ret
add
add
add
in
adc
jmp
push
mov
jno
pusha
jg
ja
or
test
aad
adc
xorb
test
cmp
cltd
cmpsl
xor
data16
inc
mov
inc
xchg
cmpl
adc
lods
cld
adc
mov
or
loope
sbb
inc
lcall
es
cs
xchg
mov
dec
cmp
sbb
aam
enter
outsl
sbb
jne
adc
fisttps
hlt
ror
lret
mov
mov
dec
jb
sbb
test
adc
mov
movsb
test
mov
stos
into
add
lock
movsb
push
xlat
sbb
loop
adc
mull
shr
dec
pusha
cmp
movsb
mov
out
cs
icebp
mov
xchg
xchg
sahf
insb
aad
sbb
loop
hlt
iret
mov
xchg
repz
sbb
mov
add
add
jo
ja
std
stos
sbb
ljmp
add
incl
add
testb
mov
stc
es
lods
xorl
mov
jo
or
mov
ret
iret
popf
pushf
cmp
add
imul
shll
jns
movsl
lcall
sub
jnp
cld
lods
mov
jb
cmp
test
push
add
clc
lock
pop
xor
sub
lea
ja
inc
daa
ret
mov
sbb
pop
jo
sbb
xchg
es
xchg
jecxz,pn
ds
cmpsb
pop
iret
fsubs
nop
fwait
inc
pusha
lcall
jg
fucomi
xchg
das
jns
mov
lods
push
insl
xchg
xchg
jnp
mov
lods
xchg
mov
mov
les
insb
sub
lahf
push
pop
rcll
inc
sarl
stos
xchg
inc
dec
in
out
sbb
xchg
rcrl
movsl
inc
jne
out
xchg
rorb
movsb
cmovge
adc
mov
cmpsb
push
sbb
inc
daa
sarb
incl
add
into
sub
lahf
dec
aad
pop
out
jl
imul
cmp
sbbl
mov
jmp
mov
push
imull
std
popf
and
jb
or
cmp
std
mov
arpl
push
cmp
xor
flds
push
mov
lcall
lcall
jbe
inc
jae
cmp
xchg
arpl
outsl
push
addr16
shrb
clc
lret
aad
push
push
in
test
inc
mov
mov
vpsraw
or
jle
push
and
xchg
add
or
pop
imul
shlb
les
out
cmp
out
shlb
ss
fisubrs
idiv
je
push
jb
mov
sub
jmp
adc
push
repz
sahf
dec
push
sbb
pop
sbb
or
adc
aad
jmp
push
imull
push
mov
addb
loopne
xor
cli
mov
jne
stos
bound
add
add
lret
jne
movsb
mov
imul
sbb
imul
fildll
inc
jl
addr16
push
test
jne
call
fsubl
sbb
and
adc
push
jle
sbb
imul
sub
imul
in
lods
push
lfs
addr16
mov
scas
imul
jl
push
adc
movsb
cli
aad
push
cli
jl
fdivs
pushf
inc
daa
push
push
es
loop
ja
stos
and
mov
xor
dec
out
outsb
das
and
mov
and
arpl
cmp
clc
stc
imul
fidivrl
leave
lret
in
mov
sub
push
xchg
sub
ficompl
mov
inc
in
pop
or
sahf
sub
test
pop
add
test
lcall
sub
incl
add
daa
push
mov
or
mov
fucomip
jle
jo
cmp
xchg
sahf
add
sahf
add
inc
inc
dec
or
aas
negb
loope
repz
in
test
in
mov
data16
mov
mov
jno
repnz
enter
inc
cmp
mov
rorl
test
mov
jecxz
lret
in
dec
sub
fisttpll
push
in
shl
jno
pop
cmp
adc
mov
xlat
push
push
or
pop
js
sub
ucomiss
xchg
jle
or
add
enter
enter
aad
mov
inc
adc
push
or
insl
mov
outsb
push
push
sub
je
clc
inc
lahf
inc
sub
test
int3
jns
cmp
push
icebp
pop
add
js
jo
stc
aas
sbb
stos
test
out
jge
dec
add
push
adc
add
add
xchg
xchg
jns
jmp
mov
movsb
mov
add
add
and
pop
fwait
mov
and
stos
lret
jge
xchg
mov
test
inc
pop
inc
dec
jns
xchg
or
push
fbld
roll
scas
xchg
sarb
int
ret
fldpi
and
les
stos
hlt
inc
mov
ss
or
mov
pop
loope,pn
ja
fs
push
js
mov
xor
es
hlt
pusha
lahf
stos
dec
and
jno
jp
xor
xchg
pop
pusha
lret
sti
test
inc
jns
clc
cmp
add
mov
sub
daa
shrl
mov
inc
pushf
pop
fstl
ds
adc
jno
imul
sub
js
addr16
xchg
xlat
and
imul
mov
sahf
mov
mov
jmp
lods
enter
and
xchg
xor
stos
jno
cmpsl
xchg
scas
lcall
adc
sbb
dec
pop
insb
mov
incl
add
outsl
jge
ds
je
adc
dec
fwait
mov
fisubrs
mov
cmp
stos
sti
mov
cltd
fstl
insl
jmp
xlat
mov
out
jg
lret
add
test
push
mov
xor
jecxz
adc
dec
lea
mov
xchg
lods
decb
jl
rcrl
aaa
addl
xor
lahf
lret
std
fdivrl
inc
dec
xchg
and
pop
lea
jae
mov
adcb
ja
push
ficomps
add
repz
sub
imul
push
inc
sub
xor
mov
mov
icebp
pusha
iret
imul
inc
cmc
les
mov
in
arpl
add
mov
mov
insl
mov
and
addr16
loopne
aas
andl
fistps
and
xchg
fsubrs
movsl
lods
jns
in
loopne
add
outsb
lods
adc
adc
or
jl
cs
idiv
jne
iret
subl
add
add
add
cli
in
fsts
rcrl
push
and
cmp
cmpsl
imul
xlat
mov
daa
push
adc
cmpsb
xchg
movsb
outsl
push
mov
mov
je
adc
and
out
lret
aad
mov
or
das
dec
mov
testl
adc
add
mov
inc
lods
aas
sub
push
push
mov
lret
stc
mov
xor
or
and
loope
sub
jp
mov
mov
aam
xchg
push
pusha
xlat
faddp
test
movsl
pusha
jno
or
dec
not
pop
rcl
das
orb
imulb
xchg
scas
inc
int3
xrelease
lahf
dec
push
imul
notl
les
inc
or
mov
xchg
lock
dec
xchg
inc
andl
xchg
jge
adc
mov
add
xchg
pushl
sub
data16
and
addl
incl
add
adc
lock
jl
mov
das
leave
sti
pop
xor
cmp
jge
subl
test
xor
xlat
add
jns
scas
movsb
std
push
loope
sbb
into
mov
scas
aad
aaa
cmp
xchg
int3
aad
add
push
cmp
xchg
popa
scas
adc
sbb
add
mov
rol
mov
mov
mov
and
cmpsb
das
fisubs
js
test
mov
mov
in
cmp
jo
fistpl
je
or
rcrb
testl
and
xchg
or
cmp
mov
movl
mov
loope
pop
movl
pop
fnstsw
dec
pop
ror
add
and
sbb
xor
addr16
jb
adc
sbbl
adc
repnz
add
add
sti
iret
ss
push
jno
out
dec
mov
add
add
scas
xchg
lds
int
lret
pop
cmp
or
sub
addr16
hlt
sub
pop
in
je
inc
loopne
pop
adc
out
lret
sbb
mov
xor
mov
aad
rcl
popf
and
shrb
rolb
mov
jmp
and
pushf
shll
repnz
xor
mov
xlat
xor
addr16
popa
outsb
xor
dec
outsb
int3
outsl
dec
push
js
adc
jbe
aas
add
xchg
lea
push
jle
loopne
and
adc
or
mov
jle
dec
mov
hlt
mov
sub
xor
push
pop
ficompl
and
pushf
loop
jmp
idiv
lret
inc
add
lock
jnp
xchg
loope
jnp
out
push
fistl
and
ds
adc
adc
jmp
fiaddl
lods
add
adc
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
mov
add
incl
add
adcl
aad
mov
es
stc
and
lea
jmp
stos
inc
pop
dec
push
daa
pushf
jno
fsubrs
push
xchg
subb
xchg
sbb
push
cli
jbe
xchg
pop
push
scas
dec
hlt
out
loop
push
pushf
sbb
cmp
cltd
xchg
jg
test
je
adc
mov
ss
pop
lea
lock
jnp
or
lea
fs
add
add
add
cmpsl
sbb
push
stc
adc
inc
inc
ljmp
and
mov
jbe,pn
mov
aaa
stos
clc
hlt
ja
jns
lea
repnz
mov
out
and
sbb
push
mov
sub
cmpsl
mov
stos
fdivrp
out
leave
loope
out
xchg
inc
mull
scas
adc
pop
imul
mov
lahf
jmp
push
lds
cmp
add
mov
mov
mov
or
add
add
add
or
outsb
pop
ds
lret
jl
add
ja
iret
mov
or
xchg
mov
mov
xchg
dec
push
xchg
lea
xor
cmp
cld
mov
imul
clc
clc
mov
push
mov
insl
rorl
decb
jmp
sbb
rcll
stos
mov
stc
in
jae
stos
in
jge
xlat
pop
cli
jne
das
mov
into
shr
insl
pop
and
cwtl
in
daa
rclb
xor
jns
add
inc
divl
cwtl
shll
dec
lock
dec
or
aaa
dec
mov
xchg
mov
mov
cmp
push
loopne
xor
in
inc
lods
mov
xchg
mov
test
push
aad
shl
scas
jp,pt
jae
or
cmp
scas
ror
inc
hlt
in
jl
sbbl
mov
js
sub
and
out
ljmp
lock
xchg
in
pop
shll
add
add
inc
or
addb
jg
out
mov
fstpt
mov
xor
add
lods
imul
mov
adcl
cmp
fs
cmp
pop
mov
xlat
inc
sti
cwtl
cmp
mov
ds
or
loop
dec
cmpsl
int
adc
ljmp
cmc
lea
pop
fcos
lea
rcrb
mov
xchg
dec
dec
cltd
sbb
mov
fistl
insb
mov
sti
cmp
jae
and
jp
jns
xchg
dec
fldl
pop
imul
lds
sbb
lods
xchg
xchg
lcall
or
lock
fsubrp
add
pop
mov
sbb
sub
pcmpeqb
js
mov
ss
xor
sti
mov
mov
inc
scas
sti
cmp
int3
cmc
inc
or
sbb
imul
push
jnp
sbb
push
xor
mov
add
incl
add
dec
pop
fdivrs
jo
lods
fisttpll
xchg
mov
gs
adc
mov
stos
mov
inc
fs
push
cmp
out
js
les
dec
cmp
insl
arpl
mov
pop
cmp
fsts
sub
or
adc
fildl
sub
mov
cmpsl
daa
inc
outsb
fdivs
xchg
push
js
gs
cmp
mov
jl
xor
mov
lods
sub
lods
imul
lea
insl
das
jle
dec
jecxz
call
mov
addr16
insb
xchg
test
and
jmp
sub
sbb
loop
dec
fisttpl
push
pop
mov
fwait
lcall
xchg
dec
sub
fisubl
outsb
push
imull
pop
jnp
jmp
jnp
cmp
ret
jmp
outsl
setne
dec
in
movsb
loope
mov
pop
scas
roll
clc
ret
pop
push
mov
aad
or
add
aas
or
mov
xor
add
incl
add
lea
or
xor
icebp
out
sti
sub
stos
test
jns
pop
fbstp
jl
push
out
arpl
addr16
mov
xor
adc
incb
int3
mov
push
lds
mov
mov
jne
and
pop
inc
gs
push
dec
xor
cmp
loopne
or
fcomi
pop
scas
inc
or
cs
xchg
cmp
push
cmp
fs
in
jnp
adc
mull
rolb
fdivs
jecxz
cld
mov
insl
arpl
movsl
ja
ret
in
inc
xchg
xor
hlt
rclb
sub
in
sbb
and
jbe
cwtl
fstpt
out
repz
push
clc
dec
mov
outsb
out
push
lods
pop
jae
inc
cwtl
data16
loop
mov
mov
jle,pt
inc
pushf
dec
jae
mov
cwtl
imul
push
inc
hlt
arpl
insb
fidivl
bound
jmp
add
add
add
pusha
or
cmp
lods
push
sarb
sub
lea
lret
in
cltd
lock
out
lods
loopne
out
dec
dec
add
rclb
push
or
shll
jno
lods
jns
loopne
fidivl
imull
or
leave
push
add
fnsave
push
dec
daa
rcl
pop
jle
lahf
pop
cwtl
adc
sbb
pop
jns
int3
js
or
lock
sub
jl
pop
xor
adc
lods
sub
dec
call
das
pushf
pop
popf
out
loope
fs
dec
cmp
sbb
push
xchg
incb
mov
mov
or
jns
incl
cli
pop
cmp
arpl
add
out
cmp
fimuls
js
adc
repz
xchg
out
out
xlat
xchg
push
jp
sbb
mov
mov
or
cmpsb
xlat
or
js
lock
and
fildl
add
popf
mov
mov
add
mov
jns
sbb
mov
add
incl
add
stc
sub
xlat
aam
out
push
xchg
stos
add
das
aam
out
push
loopne
and
cmc
lock
jl
not
fcoms
ds
dec
xchg
lahf
xorb
push
sbb
es
and
cmc
mov
es
push
sbb
repz
xchg
sub
jmp
dec
add
dec
pop
loope
fisttpll
fsts
pop
sbbl
pop
or
nop
mov
iret
xor
fucom
movups
fisubrs
adc
aaa
cwtl
aaa
pop
fsubrs
mov
rcrb
in
xchg
rdtsc
push
inc
loope
popf
lea
or
pop
cmp
sbb
xor
ljmp
xor
mov
dec
in
adc
dec
inc
push
inc
imul
sub
jo
ret
inc
sub
dec
inc
mov
adc
sub
in
in
lret
mov
push
inc
cld
cli
sbb
inc
stos
rcrb
add
int
fstp
iret
push
cmpsb
fadd
dec
fincstp
cs
incl
add
or
aaa
sub
xchg
outsl
ljmp
push
lods
ud2
cmpsb
aad
jnp
xor
or
out
adc
lea
insb
js
jae
cmp
dec
rcrl
inc
push
xor
xor
mov
sbb
sbb
cmpsb
outsl
cmp
mov
pop
or
stos
pop
jne
xchg
shr
xchg
test
sarl
outsb
dec
cs
sub
push
sub
lods
fistpl
int3
loopne
in
fucomp
xor
dec
lods
jecxz
sbb
push
pushf
aas
imul
jns
rcrl
xor
and
mov
stos
jo
mov
inc
sbb
dec
push
dec
add
inc
and
stos
and
jecxz
xor
dec
out
pop
lds
mov
xor
add
mov
shlb
dec
xchg
popa
jle
outsb
jno
mov
push
ds
lock
xchg
mov
ficoms
lahf
and
scas
std
out
ljmp
mov
add
incl
add
mov
mov
pop
inc
pop
imul
sub
sub
xchg
arpl
add
into
loop
pop
adc
adc
xor
aam
xor
xor
aaa
mov
sbb
daa
aam
cmpsb
adc
cltd
push
imull
and
loopne
pushf
cmp
cmpsb
pop
popf
push
aad
cmp
dec
pop
scas
cmpsl
ret
sub
stc
inc
lock
cmpb
insb
fwait
bound
pop
dec
jmp
das
out
jne
lcall
dec
xlat
and
repz
mov
add
adc
mov
jae
ret
daa
or
jle
hlt
loope
mov
xor
pop
imul
outsl
cmpb
jp
and
push
pop
jae
stos
jne
pop
jecxz
mov
mov
pusha
shrl
push
int
inc
les
lods
les
jnp
mov
icebp
pop
test
add
add
add
rolb
imul
shlb
pop
aad
fs
jnp
jecxz
xchg
test
cld
dec
mov
aaa
lahf
inc
pop
sub
mov
stc
push
loop
pop
loopne
mov
push
cltd
mov
adc
mov
fcmovu
xlat
mov
into
das
jmp
bnd
mov
ss
or
fisubs
and
sub
cld
arpl
int3
xchg
loope
in
add
cmp
mov
push
xchg
adc
pop
shlb
cmp
dec
and
jmp
xchg
repz
or
ret
int
jnp
xchg
jne
mov
or
pop
and
stos
push
push
xor
sub
sbb
jbe
sbb
jo
lods
sbb
cmp
push
mov
mov
jle
js
insl
lret
mov
popf
aaa
in
cmp
das
out
in
xchg
imul
fisubl
jg
das
mov
stos
push
add
les
fcomps
add
sub
scas
popl
add
add
add
jp
sub
sbb
inc
fcmovnu
out
mov
jae
adc
fstl
dec
insb
out
daa
and
stos
mov
push
movsl
sub
jg
inc
aas
rcrb
lock
adc
mov
inc
stos
jne
inc
jb
aam
into
cld
xor
aas
inc
mov
rcr
int3
jnp
invlpg
cwtl
inc
xchg
dec
insb
insl
lods
pop
lods
mov
sbb
jge
cmpsb
daa
gs
pop
sbb
pop
lcall
int3
add
jecxz
pop
mov
divb
mov
xchg
sbb
adc
stc
mov
je
xchg
sub
xor
mov
pop
jge
std
jo
enter
inc
push
aaa
data16
repnz
sub
or
inc
lret
mov
inc
out
popf
mov
or
push
cmp
adc
in
mov
mov
or
mov
add
ljmp
dec
mov
movsb
sub
add
add
gs
inc
jle
sahf
push
scas
add
inc
sub
mov
mov
data16
cmc
pop
and
xchg
pop
sarl
push
das
xchg
sub
movsb
pusha
add
push
mov
popf
push
addr16
pop
pop
fwait
testl
ja
icebp
je
cwtl
mov
xor
dec
test
icebp
lds
xlat
xchg
mov
iret
mov
rcrb
test
sbbl
jp
stos
pop
inc
mov
fisubs
ja
scas
scas
les
jp
fstl
scas
push
movsb
insl
lock
adc
mov
lret
test
popa
adc
add
stos
mov
ja
inc
push
aad
lods
jbe
jg
repnz
js
cmc
xor
insb
insl
jle
jl
ljmp
fwait
out
jns
jmp
rcll
jbe
es
addr16
fcompl
sbb
cmp
sub
add
aaa
shlb
cmc
div
testl
pusha
lods
xchg
add
incl
add
mov
dec
mov
xchg
lcall
xorl
mov
jo
popa
int
push
cmp
sbb
xor
dec
dec
sub
cs
lcall
cmp
ljmp
inc
je
push
push
ljmp
push
cmc
stos
leave
add
mov
pop
cltd
mov
jg
jno
bound
cmp
sbb
fsin
scas
jns
xchg
dec
pop
out
repnz
inc
cld
ja
imul
jmp
ds
pop
stos
mov
ds
popa
out
sti
out
fcomps
jp
and
fwait
imul
nop
pusha
popl
push
iret
lret
ret
adc
iret
out
stos
outsl
dec
sahf
mov
orl
stos
jae
pop
test
outsb
add
push
sahf
rcr
pop
adcb
adc
add
incl
add
out
cmp
pop
cmp
push
mov
dec
sbb
adc
into
jae
push
mov
outsb
mov
pop
push
jl
jno
fistl
jns
xor
sahf
jbe
jo
negb
push
sub
jne
imul
and
jecxz
cwtl
jno
ja
pop
mov
popa
jo
ja
adc
jae
cmp
push
cmp
push
xor
push
jmp
jl
call
dec
fmull
int
push
test
pop
inc
mov
pop
aad
xchg
lahf
mov
scas
lret
pusha
enter
in
insl
push
cmp
push
mov
dec
popa
rcrl
sub
dec
aas
leave
das
scas
push
xlat
sbb
out
nop
ffree
add
and
add
pop
mov
loop
mov
push
bound
push
jl
imul
test
or
test
and
fs
mov
shll
cmpsb
jcxz
fimull
stos
xchg
add
incl
add
push
mov
mov
fcomi
sub
rorl
add
test
mov
push
and
sbb
sti
sbb
call
lret
in
sbb
cmp
push
mov
add
loop
popa
jp
jg
stc
xchg
cmp
aad
jg
lods
or
pop
pop
cmp
int
cmpsb
outsl
out
clc
lds
push
pop
sbb
push
loop
pop
aaa
xor
filds
leave
ljmp
xchg
dec
lods
inc
roll
aad
clc
into
adc
cmc
mov
insl
lahf
outsb
movsl
ljmp
inc
mov
js
sti
jl
xchg
sub
dec
lahf
dec
cmp
or
sub
adc
lock
mov
sub
jg
cpuid
mov
mov
mov
movsb
out
insb
push
loopne
cs
punpcklbw
fs
out
mov
mov
movsl
lret
add
sub
clc
jnp
jg
in
cli
enter
push
pop
mov
incl
add
xchg
sbb
mov
lcall
idivl
ss
add
addr16
jne
add
pop
or
scas
and
jb
xor
std
ja
inc
jns
inc
jmp
repnz
mov
enter
les
test
fcoms
adc
ficomps
imul
ficoml
repnz
iret
repnz
loopne
dec
ljmp
add
pop
xchg
les
push
aas
add
mov
in
icebp
fiaddl
gs
fwait
and
rep
mov
addr16
lds
xchg
mov
out
xchg
in
dec
call
bswap
lods
jno
cmp
aam
fcmovbe
push
bound
loop
fmull
sub
jmp
cmp
mov
je
out
call
clc
movsl
sti
jbe
lcall
pop
push
int
mov
and
push
jmp
add
push
jmp
enter
add
ljmp
cld
gs
mov
test
add
incl
add
mov
sbb
mov
dec
ljmp
mov
gs
push
xor
pusha
xchg
enter
pushf
push
test
jl
and
jno
jns
pushf
cli
xchg
inc
jmp
sbb
push
bound
in
sub
cmc
adc
ret
aam
jb
push
aad
movsb
mov
mov
pop
jnp
push
dec
dec
fsubrs
mov
cld
mov
cmp
jns
cmpsb
inc
scas
or
pop
cmp
xchg
pop
push
insl
popa
arpl
sbb
pop
jmp
sti
test
ficoml
rclb
dec
mov
fst
jmp
mov
imul
dec
stc
inc
mov
or
sub
pop
loope
rcll
xchg
in
xchg
mov
dec
cmc
std
ljmp
hlt
outsl
or
push
pusha
pop
out
mov
xlat
fwait
sbb
idivl
loope
loop
mov
clc
mov
add
add
jl
sar
std
jle
pop
popf
scas
or
add
incl
add
mov
or
xchg
xchg
mov
push
add
sbb
mov
or
xchg
std
fsubl
add
mov
adc
test
xor
inc
jno
in
lret
mov
pop
leave
loope
add
mov
arpl
cmp
xchg
mov
out
mov
xor
andb
and
nop
or
in
sbb
xchg
jo
inc
fstps
and
fscale
addr16
jmp
push
fldt
outsb
test
jecxz
movsl
lahf
pop
push
lds
push
lods
inc
mov
int
ds
fnstsw
mov
or
incb
push
ss
int3
mov
mov
xorb
sbb
clc
sbb
or
inc
stos
hlt
sub
push
dec
add
mov
daa
movsl
cmp
movsb
lods
sbb
push
cmp
mov
cmp
cmp
in
jne
cmpsb
cmpsb
xchg
add
incl
add
pop
xchg
adc
mov
clc
adc
mov
clc
mov
pop
ret
orb
das
cmpsl
push
mov
push
mov
jnp
int
xchg
lds
mov
jl
scas
clc
sbb
loope
mov
xchg
or
cwtl
loop
fwait
xchg
cmp
out
push
or
push
in
aam
mov
addl
das
cmp
pop
pop
aam
adc
out
aas
bound
xchg
xor
push
out
es
xor
inc
cmp
ss
mov
out
mov
add
sarl
xor
loop
and
rcr
outsl
xor
sti
in
xchg
mov
adc
ja
popa
sub
mull
cltd
lods
in
lahf
das
sub
aaa
or
add
slwpcb
cmp
xchg
aas
mov
mov
sbb
fwait
and
popa
mov
xorl
movsl
cwtl
add
incl
add
outsb
mov
insb
shrl
inc
mov
sub
icebp
fcmovnu
push
bnd
mov
repnz
sub
mov
jne
dec
addr16
enter
stos
mov
fcoml
ljmp
jle
sti
add
sti
ds
and
xchg
or
mov
sub
and
add
jmp
lods
out
mov
and
fsubrl
mov
jge
jecxz
inc
lock
fmul
into
push
push
xchg
dec
cmp
pusha
jle
stc
rcll
xor
out
fs
imul
adc
cmpsb
add
xchg
mov
int3
mov
rcrl
es
roll
mov
mov
mull
add
xchg
testb
fisttpll
and
mov
jl
dec
in
add
jbe
xchg
ds
jecxz
push
std
mov
pop
add
dec
std
out
xlat
aas
dec
sbb
or
movsb
cltd
add
incl
add
sbb
pusha
imul
mov
ljmp
cmp
pop
jnp
shll
xor
jne
fldl2t
fists
cld
aas
push
add
mov
jno
push
jnp
sub
test
gs
or
jmp
pop
sar
jmp
push
mov
cmpl
mov
dec
sbb
mov
push
pop
jb
dec
push
pop
cmc
fwait
or
cmp
add
xchg
mov
ja
stc
pusha
jp
aam
push
add
into
inc
mov
sahf
addr16
or
sbb
inc
rorl
add
cmpsb
shl
or
bnd
cli
imul
or
lods
scas
mov
inc
inc
pop
outsb
and
mov
loope
cltd
and
cmpsb
insb
add
xor
cmp
push
lods
or
cmp
imul
outsl
vmwrite
fsubl
add
add
cwtl
and
bnd
scas
arpl
sbb
pop
cld
cmpsb
test
and
sbb
int3
cld
out
jecxz
cmp
and
addl
inc
xor
inc
int3
xchg
mov
cli
dec
outsl
push
sub
lahf
jg
pop
fmul
mov
xchg
addl
mov
ret
dec
inc
push
jecxz
push
into
push
pop
gs
sbb
sbb
inc
jecxz
cli
stc
cmp
ja
and
jae
and
mov
or
movsl
std
aad
jle
jbe
sbb
mov
lret
adc
mov
add
or
jns
mov
insb
jo
inc
cltd
jmp
mov
bound
cltd
cmc
cltd
std
sub
pop
fistl
jae
jp
shl
in
cmp
out
rcrl
lcall
pop
and
xor
mov
out
push
popa
add
lret
sbbl
popl
xchg
xchg
add
add
jge
fcoms
pop
cwtl
pop
jg
add
mov
out
or
dec
jae
sub
lcall
dec
iret
lods
shlb
iret
sahf
inc
fildll
aad
data16
mov
outsb
sarl
out
inc
imul
push
in
das
stc
mov
sbb
cltd
add
sbb
test
cmp
das
test
je
or
aas
outsb
xchg
inc
mov
fldl
and
mov
das
push
adc
sbb
mov
cmp
dec
or
rclb
and
cmp
jp
movsb
fstl
sbb
cmpsb
repnz
xchg
mov
movsl
pop
push
in
or
out
insl
xor
xchg
stc
in
mov
sub
xor
dec
movsl
lret
mov
xor
aam
xor
or
sbb
or
xchg
push
mov
inc
cld
xor
mov
imul
movsb
and
mov
sub
incl
add
outsb
jbe
pop
filds
aas
xor
jmp
dec
dec
fcmove
sahf
js
fstps
push
mov
fistl
les
adc
leave
fsubr
aad
jg
xchg
popa
in
xchg
lret
lret
aam
popa
xor
js
inc
scas
and
out
push
loope
gs
sub
and
mov
pop
xchg
mov
xor
mov
push
je
call
xlat
ret
lods
stos
test
jmp
xor
sbb
lret
push
sbb
outsl
clc
lret
push
pop
jne
push
xor
insl
ljmp
negb
add
not
add
adc
stos
mov
jg
clc
or
aaa
pusha
gs
pop
bound
push
add
jle
lods
pop
outsl
inc
sbb
mov
int
sti
mov
fstpl
push
mov
sbb
int
jle
pop
dec
and
pop
fadd
sti
lea
cwtl
add
adc
into
movsl
neg
mov
adc
mov
jge
jg
ljmp
in
lahf
mov
mov
incl
add
mov
scas
sbbb
sub
push
lcall
mov
jns
push
or
add
divl
mov
shr
pusha
sahf
xor
shll
mov
mov
and
cld
add
mov
mov
pop
decb
lds
push
adc
ljmp
stos
aas
pop
fcomps
out
cmp
fwait
xchg
les
pop
jne
push
out
lahf
pop
inc
into
jge
cltd
mov
inc
mov
mov
aas
das
call
icebp
xor
aaa
cmp
inc
aas
pop
cli
pop
or
sbb
lahf
xor
imulb
movsb
xor
test
mov
mov
clc
sbb
js
sbb
pop
jne
sbb
cmp
clc
pop
fidivl
jp
jge
and
imul
or
pop
fisubrl
clc
and
push
fistl
add
cltd
sub
out
inc
sub
or
call
add
incl
add
mov
push
pusha
jns
pop
cmp
inc
sub
jae
jp
sbb
mov
mov
mov
pop
xchg
fdivrs
push
test
in
push
pop
add
daa
xor
imul
pop
mov
clc
and
movsb
inc
xor
xchg
sbb
and
repz
popa
xor
loope
out
popa
pop
sbb
lret
in
pop
jns
sbb
nop
cmp
arpl
jp
push
jmp
mov
push
ljmp
jns
movsb
push
fists
in
out
jne
test
daa
dec
mov
adcl
iret
adcb
lds
stc
mov
lret
sub
daa
test
add
sub
dec
out
imul
data16
outsl
or
push
int3
fwait
sti
pop
ja
lock
mov
repz
lock
out
in
lods
add
pusha
test
mov
cld
mov
sahf
lahf
add
incl
add
dec
cmova
call
push
or
sbb
mov
dec
test
gs
mov
xor
pop
lods
inc
push
or
jge
loop
sarl
or
out
inc
scas
lcall
enter
pop
push
push
pop
mov
push
dec
lods
lcall
mov
adc
bound
gs
jp
das
and
test
out
testb
and
in
mov
jne
or
pop
repz
dec
stos
jno
pop
es
jae
jnp
adc
imul
push
bswap
push
pshufw
push
pop
pop
mov
pop
mov
cld
call
and
out
mov
xchg
lods
hlt
mov
enter
inc
or
jae
test
mov
jp
movsl
cmp
mov
inc
rolb
push
pusha
cmp
adc
hlt
lods
jb
mov
scas
rcrl
cmpsb
stc
popf
mov
add
add
mov
repz
repz
dec
int
popf
mov
add
test
stos
xor
cltd
xchg
les
movsl
pushf
int
repnz
and
dec
rol
ret
dec
jne
out
lds
mov
das
ret
push
pop
sbb
std
mov
adc
loop
xor
pop
aad
xchg
push
fdivl
cmp
stc
cmp
daa
adc
lods
sbb
mov
cli
mov
inc
sti
arpl
idivb
out
cld
mov
mov
fdivl
mov
ficoml
sbb
in
xchg
xchg
iret
fisttpl
xchg
lcall
cmpsb
pop
sbb
add
popf
enter
ds
sarl
movsb
jnp
adcl
sbb
idivl
andl
cld
mov
inc
cli
mov
stos
or
pop
leave
sub
mov
scas
xchg
inc
xor
or
das
aaa
mov
jae
imul
andl
add
mov
inc
inc
add
mov
add
lods
cmpsl
xchg
scas
ret
es
mov
outsl
jl
rcl
inc
cmp
pop
push
loop
scas
push
mov
test
pop
inc
push
cmp
and
adc
jnp
cmp
lret
das
cmp
mov
jno
fisubrs
pop
push
mov
js
jl
icebp
in
aam
leave
sbb
dec
ds
cmpsb
mov
push
movsb
sub
adc
movsl
add
xor
aad
or
xor
out
loope
lea
push
adc
push
sarl
scas
nop
test
push
add
push
dec
in
xchg
mov
add
stc
aaa
adc
int3
pop
sub
xor
ret
or
mov
out
roll
ret
iret
add
mov
pop
fs
daa
ds
jne
stos
push
push
sub
pop
subl
pushf
dec
outsl
sub
inc
cmp
test
add
or
adc
add
pop
loopne
jnp
in
xchg
lahf
add
std
inc
mov
xor
fwait
mov
add
mov
jo
pop
js
mov
sub
in
or
pop
add
dec
imul
pop
xchg
xor
mov
mov
mov
loopne
jle
adc
lret
dec
or
mov
mov
sbb
pop
push
xor
cmc
push
loop
xor
stos
pusha
loopne
mov
jg
xor
clc
enter
push
pminsw
arpl
popf
or
outsl
push
sbb
out
xchg
jns
jge
pushf
mov
pop
jge
push
popa
cmp
jp
outsl
aas
push
sahf
js
cld
dec
out
cs
jbe
pop
sub
xor
cltd
jno
lea
test
dec
nop
sub
outsl
sub
cmp
mov
test
adc
inc
or
xchg
ret
and
out
out
ss
mov
filds
adc
mov
nop
ss
aam
out
pop
stos
pop
call
mov
add
inc
fdivl
push
dec
mov
lcall
add
jns
cmc
mov
sbb
cltd
cli
js
sbb
xchg
imul
cmp
rclb
push
ljmp
jp
mov
or
insl
jge
adc
mov
movsb
mov
jno
or
lcall
mov
lods
mov
loopne
mov
push
jno
push
and
and
call
jge
pop
push
fcomps
dec
sub
sar
push
arpl
pop
ret
int
jg
loopne
aam
xor
pop
cmp
lcall
pop
lods
jle
cmp
jge
cmpb
lods
add
mov
das
out
mov
cmc
mov
testl
xchg
jne
pop
fsubrs
sub
jp
jnp
ror
inc
cwtl
add
adcb
xchg
lret
into
mov
xchg
xchg
and
fs
xchg
arpl
jmp
xchg
push
xlat
xlat
adc
dec
insl
lods
cmp
add
add
sbb
mov
sbb
fneni(8087
mov
incl
add
pop
inc
xchg
lea
out
insl
daa
xor
cmp
add
sub
insb
add
les
lret
mov
cwtl
inc
nop
adc
iret
jp
shrb
out
dec
stos
add
or
xchg
mov
dec
add
xchg
pop
data16
or
sub
mov
aam
dec
mov
xlat
and
pop
rep
push
xchg
sbb
mov
or
fidivrs
jmp
cmpsb
cltd
sbb
mov
add
loopne
cwtl
daa
xchg
enter
pusha
mov
faddl
jae
or
ret
cmp
jnp
clc
iret
fs
and
stos
stos
movsb
enter
jp
fistpl
push
or
les
adc
jle
out
int
or
adc
std
call
imul
data16
push
inc
pop
and
in
add
stos
hlt
jmp
cmp
jbe
inc
jnp
iret
cwtl
movsl
add
incl
add
popf
xchg
outsl
push
mov
sarb
xor
cmc
cld
jbe
xor
jns
je
mov
lds
in
sahf
lahf
lock
push
out
mov
iret
cltd
popa
fidivl
sub
jne
int3
loopne
mov
roll
or
mov
mov
enter
into
pop
les
sbb
xchg
mov
test
rdtsc
imul
stos
adc
aad
inc
ret
ds
ret
xlat
inc
push
lret
push
loop
mov
aam
push
sbbl
xor
cltd
cmpsl
fs
jecxz
or
insl
jle
enter
movsl
mov
mov
sahf
mov
sahf
xor
dec
jnp
mov
les
xorl
ja
in
sahf
add
mov
push
test
dec
push
adc
out
pop
fwait
aad
lcall
clc
push
sub
iret
xchg
add
out
xlat
out
jg
in
xor
pop
aad
cmpsb
add
incl
add
cmp
and
lahf
loope
mov
pop
mov
cmpb
shlb
test
scas
add
pop
sub
ret
mov
adc
mov
sub
jns
mov
adc
inc
rclb
inc
outsb
or
icebp
mov
mov
cltd
mov
sub
mov
jge
adc
test
aas
enter
adc
rcr
fs
ret
insl
cmp
or
addl
cmp
push
mov
cmpsl
test
test
cmp
pushf
inc
add
dec
data16
cmpb
pop
pop
nop
sti
xor
mov
cmc
jns
imul
xchg
jnp
xchg
mov
nop
sub
out
loopne
dec
leave
fs
jp
shll
insb
out
mov
fs
repz
cmpsb
rcrl
push
int
imul
pop
add
mov
inc
fwait
lds
jo
fldl2e
lcall
add
outsb
imul
hlt
inc
mov
addb
sub
sbb
push
call
rcl
mov
arpl
popa
push
sarb
stos
icebp
sbb
adc
pop
mov
movsb
cs
xor
push
inc
in
mov
ds
fwait
inc
cmp
cltd
add
outsl
testb
into
mov
push
int
adc
in
mov
or
push
stc
mov
push
outsb
adc
fwait
jno
cmp
sbb
add
shr
es
jo
seto
xor
xor
mov
sbb
movsl
outsb
pop
cs
or
imul
jmp
push
pop
addr16
popa
mov
mov
adc
outsb
push
push
or
out
pop
mov
out
andb
jne
mov
sub
add
mov
fadds
xchg
test
add
add
add
shrb
jmp
leave
int
lea
ljmp
sub
xor
inc
movzwl
and
aad
cltd
push
insb
mov
gs
movsb
sub
mov
ds
pusha
mov
lret
sub
mov
insl
inc
dec
mov
add
shl
or
mov
dec
adc
sbb
leave
xor
addr16
xchg
sbbl
popl
mov
jnp
jl
call
movsl
sub
lret
xrelease
test
cmpsl
mov
push
ljmp
and
mov
sub
or
jmp
fxch
fldl
js
test
cmpsl
pop
cmpsl
sub
xchg
cmp
push
mov
test
pop
arpl
sub
cmpsl
dec
mov
popa
sub
inc
sub
pop
pop
fimuls
push
cmp
clc
add
mov
push
sti
jmp
push
mov
neg
popa
mov
incl
add
adc
jle
add
gs
iret
icebp
sbb
jp
or
stos
pusha
pop
loopne
hlt
out
sti
mov
sbb
cmpsb
andl
int3
push
cmp
es
cltd
insb
sub
fidivl
sub
or
ret
enter
mov
ds
scas
or
fsubs
outsl
xor
push
mov
jbe
stos
push
stos
je
popa
push
dec
pop
in
sbb
leave
add
das
in
lret
loop
cmp
aaa
add
push
pop
scas
pop
pushf
inc
in
push
leave
mov
popf
rorb
mov
pop
and
jns
push
add
mov
and
cmp
pop
lds
popa
adc
xlat
and
jbe
sbb
div
adc
xor
cmp
aam
cmpsl
pop
scas
cmpsl
dec
inc
push
mov
sbb
lods
stos
enter
fldt
lds
pop
lcall
aaa
adc
add
add
jecxz
lock
nop
xchg
stos
add
incl
add
push
mov
push
fbstp
test
push
mov
dec
pop
mov
xchg
mov
lods
popa
jne
cwtl
out
mov
lret
in
or
out
cmpsb
call
jo
hlt
mov
dec
pusha
push
mov
add
nop
cli
fwait
inc
ffree
call
les
cvtps2pd
test
daa
jp
out
xchg
jg
imul
jge
jb
mov
fsubl
or
adc
pop
imul
push
mov
adc
fwait
lret
dec
sub
inc
hlt
cmp
adc
push
mov
push
cltd
pushf
jmp
stos
inc
dec
lods
in
jae
bound
xorb
add
lret
and
icebp
jmp
js
clc
subw
loop
add
addr16
dec
push
inc
aas
xchg
dec
iret
and
push
in
out
adc
mov
add
cld
mov
leave
divl
add
incl
add
kandnb
imul
add
push
push
mov
adc
rolb
lcall
adc
pop
sbb
mov
push
popa
jle
sbb
mov
pop
outsl
roll
mov
into
mov
xchg
pop
or
testl
sub
sbb
mov
mov
mov
xor
inc
imul
imul
aad
jae
pop
jb
cmpb
insb
jge
cmp
js
push
bswap
cli
cmpsb
mov
ljmp
mov
shll
dec
dec
ja
xchg
or
lahf
or
inc
aas
sbb
sub
fsubrs
mov
or
clc
ja
inc
xor
lds
inc
test
sti
push
push
sbb
ret
ss
imul
dec
ret
xchg
rolb
pop
sbb
and
pop
or
mov
dec
das
pop
out
cmc
mov
cmp
mov
add
add
shr
xchg
inc
clc
xchg
sahf
test
inc
pop
inc
rcr
cmp
push
test
scas
je
mov
sbb
test
in
sub
or
stos
ja
fninit
or
lea
cmp
andl
arpl
jmp
mov
std
sbb
fstl
push
leave
ljmp
repz
mov
dec
cmpsb
mov
lods
add
out
jecxz
popf
in
xchg
out
sti
icebp
lahf
xchg
bound
mov
mov
mov
pop
aas
and
mov
test
inc
rclb
popf
xchg
lea
xchg
cmovl
push
cli
test
or
push
or
daa
xchg
cs
inc
xchg
dec
or
fs
mov
scas
fisttpll
mul
sub
lret
test
fistpll
pop
stos
dec
jmp
xchg
nop
and
popa
mov
jge
scas
fdiv
dec
mov
subl
pusha
or
fucomip
std
dec
std
pop
lcall
xchg
pop
push
adc
inc
nop
lods
add
incl
add
jns
fs
mov
loopne
aad
orb
jne
movsb
jge
mov
enter
push
or
mov
std
lds
push
pcmpgtd
mov
mov
adc
mov
pop
in
xchg
adc
dec
jecxz
mov
lahf
ret
jnp
push
sub
jo
in
sti
pushf
push
xorl
popa
call
test
out
mov
jns
sbb
aam
mov
imul
jnp
xchg
repnz
ds
lahf
xchg
jmp
pop
mov
push
dec
cmp
sub
subl
adc
xor
pop
andb
pop
repnz
inc
and
cmpsb
sahf
lods
mov
mov
js
stc
push
push
test
add
adc
mov
sbb
pop
push
sub
mov
dec
mov
loopne
xchg
out
push
fistps
xchg
lret
push
into
outsb
sbb
add
fidivs
loop
ljmp
inc
or
scas
add
incl
add
shrl
movb
ljmp
inc
jnp
add
je
mov
loop
daa
fdivrs
dec
jp
inc
sbb
loopne
jbe
mov
loop
repz
rol
enter
push
les
mov
scas
jg
push
das
andl
mov
mov
or
aas
xor
roll
movsb
jp
mov
nop
iret
jl
jnp
mov
mov
imul
jle
mov
xlat
pop
inc
cltd
add
dec
push
sbb
push
repz
cmpsl
aaa
sbb
dec
dec
stos
test
nop
test
sub
je
dec
pop
adc
stos
enter
jp
aas
jno
cltd
imul
mov
xor
sub
lcall
fidivl
test
ss
sub
push
xchg
jg
jmp
std
mov
shll
add
add
add
inc
fildll
hlt
fildll
repz
mov
mov
jle
je
sub
xor
mull
pop
test
mov
xor
std
inc
jl
inc
jae
arpl
out
adc
inc
mov
jge
daa
mov
add
stc
sti
andb
mov
ljmp
aas
outsl
outsb
dec
dec
jbe
daa
and
js
adc
and
scas
jge
fimuls
movb
push
or
data16
pop
adc
sub
push
and
into
push
test
mov
nop
xor
insl
mov
mov
or
jecxz,pt
xchg
pop
cmp
xlat
push
adc
repz
mov
or
loope
roll
sub
jmp
push
xor
imul
xor
aas
push
xchg
add
xchg
cmp
aas
sbb
mov
outsl
dec
imulb
push
pop
jns
push
outsl
pop
inc
jne
push
divb
inc
mov
mov
lea
add
cmc
lret
loope
dec
xchg
lcall
insb
push
dec
test
es
dec
sub
jle
std
or
mov
imul
mov
jle
xchg
call
pop
in
pusha
fstps
cltd
lcall
jnp
inc
test
ret
lds
cmp
cmp
jmp
ret
test
ficoms
movsb
sbb
rclb
add
stos
leave
idivl
dec
inc
and
scas
push
or
hlt
sub
leave
cs
cmpsb
push
pop
dec
out
mov
sbb
lret
cmp
in
sbb
test
jle
mov
sbb
stos
in
inc
lahf
fcomps
int
push
sub
pushf
call
adc
or
xlat
out
shlb
jge
mov
inc
mov
mov
pop
pop
or
or
push
pop
xor
cmp
inc
call
inc
mov
add
out
sbb
hlt
fisubrl
int
xchg
sbb
mov
mov
and
sub
aam
in
out
daa
cmp
sarb
adc
out
pop
addb
mov
add
sbb
and
es
rolb
ret
mov
jns
dec
pop
out
push
sub
inc
outsb
orl
lea
pop
std
cmpsl
std
mov
stos
in
cmp
repz
mov
add
mov
xorl
movsl
inc
mov
pushl
or
ja
js
pop
jbe
imul
cltd
rcrb
jae
inc
out
inc
popf
fwait
popa
xchg
fisubrl
pushf
mov
xchg
std
decb
and
cmp
rcl
out
push
mov
or
xor
rorb
sbb
mov
xor
sbb
add
add
jp
les
mov
arpl
out
mov
add
imul
add
push
mov
xlat
nop
pop
sub
fdivs
xchg
daa
loopne
inc
push
sti
and
loope
or
clc
push
adc
sub
nop
int
lds
jne
push
push
out
aaa
jg
mov
xor
ja
fstps
addr16
imul
negb
mov
mov
fwait
push
in
mov
sub
fucom
jae
xchg
xchg
lret
andb
clc
addr16
or
les
pushf
pop
adc
jp
cmp
mov
fdivrp
mov
push
lock
add
pop
in
sub
and
jp
shl
mov
lcall
add
lods
jb
fstpt
push
aas
icebp
adc
inc
mov
jo
pop
push
push
pop
aad
adc
insl
add
sub
fstpl
pop
scas
add
clc
pop
stc
out
push
pop
bound
fmull
add
add
hlt
pop
pop
sub
jne
push
pop
test
rep
fwait
xor
xchg
sti
lds
or
or
add
mov
mov
sahf
xor
add
popa
or
mov
dec
fidivrl
int3
lods
inc
inc
insl
jecxz
out
push
sbbl
out
loope
cwtl
test
xor
push
iret
nop
iret
fistl
xchg
in
insl
js
lods
or
push
or
push
ficoml
out
jmp
inc
int3
adc
xor
pop
adc
fcmovnb
xchg
xor
lret
xor
adcb
stc
inc
into
add
add
xchg
inc
xor
and
cmpsl
xchg
ss
push
xor
push
cld
mov
arpl
adc
dec
dec
loope
push
push
pop
cmpsb
xor
out
jo
sbb
or
insb
dec
adc
fidivs
add
jge
push
sub
xchg
and
add
push
mov
lcall
push
mov
add
mov
out
pop
or
fdivp
lods
outsb
add
xor
out
decb
leave
or
mov
jl,pn
insb
cmp
ror
fcoml
nop
push
movsl
nop
add
roll
mov
jecxz
mov
cltd
mov
test
jae
shrb
cld
cmp
fs
hlt
mov
and
dec
jge
mov
jecxz
adc
push
addr16
js
dec
or
pop
sbb
sub
fisttpl
jbe
out
rorl
ja
ror
insb
cwtd
insl
mov
repz
int3
lret
sub
push
or
add
fyl2x
mov
sub
outsl
mov
or
inc
loop
mov
pop
leave
int
pop
push
imul
movsl
cmp
cmpsl
cmp
mov
js
fldl
dec
out
faddp
lds
ret
lods
sbb
stos
or
cld
inc
shll
add
jne
mov
int3
insb
lret
out
add
add
adc
dec
sub
adc
data16
mov
popa
mov
fidivrs
jno
lret
mov
int3
pop
stos
test
add
push
dec
mov
ret
jb
test
insl
lret
add
dec
jbe
cmpsl
xchg
insl
test
ror
adc
and
adc
inc
mov
cmpsb
mov
and
loopne
shrl
pop
jecxz
and
loopne
cmp
fcmovnbe
adc
addr16
mov
sbbl
xor
mov
inc
jne
mov
stos
icebp
fisttps
sub
mov
push
negb
push
packssdw
rclb
cld
xchg
or
cs
jecxz
jge
jl
dec
dec
out
out
dec
xor
loope
cmp
ficoms
movsl
push
das
cmpsl
sbb
xchg
jl
mov
and
lods
push
arpl
inc
or
mov
insl
push
lahf
outsl
andl
mov
and
outsl
adc
ret
add
pop
sbbl
fstp
rorl
ret
xchg
xchg
add
jns
pop
jbe
es
xorb
mov
dec
xor
xor
sti
std
xchg
and
pop
loopne
insb
test
stos
or
int
push
ljmp
push
scas
roll
lea
dec
push
sbb
nop
mov
and
inc
add
sub
stc
xchg
fidivs
in
fwait
add
and
push
daa
insb
sahf
xor
lret
mov
imul
popf
fxch
daa
mov
cmp
test
frstor
daa
sbb
or
jl
test
jbe
dec
xchg
outsb
ret
add
push
dec
cmc
icebp
xor
arpl
push
inc
adc
icebp
mov
scas
lcall
dec
ret
cli
pop
scas
cmc
adc
sbb
sbb
push
jns
clc
clc
xchg
insb
mov
inc
or
fisttpl
cmpsl
inc
imul
xor
sub
lcall
add
add
in
mov
jecxz
out
mov
iret
mov
add
add
add
jno
mov
jb
lock
mov
add
rclb
pop
cwtl
jmp
pop
pop
mov
repnz
out
pop
inc
addb
pop
sbb
jle
jae
out
sbb
fiaddl
mov
rcll
mov
out
lahf
inc
int3
in
push
mov
mov
xor
jecxz
pop
dec
add
dec
jno
adc
push
mov
pop
test
les
dec
movsl
sub
scas
jno
aam
std
mov
mull
jbe
sarb
jne
add
stc
shlb
shlb
pop
call
mov
int
lds
jmp
in
dec
sub
scas
add
cs
sub
enter
pushf
je
cmpsl
in
mov
repz
push
inc
pop
in
icebp
xlat
mov
pop
cmpsl
adc
mov
ljmp
add
add
std
test
jg
into
lret
orl
add
add
je
shlb
jge
loopne
add
ficomps
mov
add
mov
push
xor
mov
jmp
lods
mov
sub
jnp
xchg
rcr
sbb
xchg
in
lds
add
stc
daa
mov
jo,pt
movsl
sub
rcll
hlt
sbb
cmpsl
cmp
add
out
or
fiaddl
les
xchg
mov
testb
mov
cmp
call
jmp
mov
xlat
or
sti
cmp
inc
cld
xchg
cli
xorb
inc
xchg
or
push
xor
jae
clc
fwait
and
cmp
push
or
das
loopw
sub
in
cmc
add
fisubl
imulb
outsl
inc
lret
pop
cmc
sahf
cs
sarb
jge
aad
or
xor
jno
lret
xor
jp
int3
jne
mov
loope
arpl
into
sub
add
add
adc
in
lcall
jae
dec
mov
push
hlt
sub
add
shrb
push
ficoml
int
cli
xchg
xchg
xor
fs
sbb
jo
lret
push
or
xor
cmp
jge
or
xlat
inc
stos
cld
es
push
cmpsb
lahf
aam
push
pop
fwait
lea
sarl
and
sbb
push
fwait
in
fldt
sahf
jb
test
das
cmpsl
adcl
jbe
pop
test
fidivl
dec
push
push
stos
std
inc
lods
xchg
ljmp
lds
or
loop
push
inc
data16
sahf
int3
loop
xor
cli
cmp
push
fldcw
mov
out
js
fdivl
je
push
cmp
or
push
int3
popf
inc
aad
jne
dec
and
loopne
adc
int
xor
push
add
sbb
roll
ror
test
shr
in
data16
mov
fistpl
add
fsubrs
or
dec
or
jg
dec
arpl
lods
cmpl
add
cltd
call
idiv
fsubrp
pop
xor
add
jle
roll
mov
jg
add
push
ss
and
sbb
push
fbstp
xorb
and
lret
pop
pushf
leave
testl
xchg
fildl
xchg
fwait
adc
mov
fcoml
roll
mov
adc
fistpl
push
ljmp
jmp
fwait
cmpsl
movsl
popaw
or
lret
push
mov
lods
mov
push
adc
sbb
js
negl
mov
les
sbb
push
cmovns
addb
fcmovnu
test
movsl
inc
mov
fld
sbb
shrb
inc
pop
sbb
add
sub
push
sti
mov
add
jnp
or
dec
pop
xor
shl
adc
bound
cmpsb
pop
pop
insb
jmp
cli
or
cmpsb
add
addl
insl
sbb
outsl
mov
js
in
lods
cmpb
add
sbb
sub
jnp
mov
sub
cmc
and
mov
in
cmpsl
mov
xorb
adcb
mov
outsb
aad
fistpl
aad
arpl
jo
xor
xchg
inc
fldenv
lods
ja
jb
push
inc
rclb
sbb
mov
aad
pop
xor
insb
out
adc
rclb
js
or
jno
aad
mov
xchg
add
adc
push
test
subb
and
sbb
jmp
mov
loope
jb
loope
imull
jne,pn
aas
clc
into
dec
pop
sbbb
xchg
out
in
adc
cmp
pop
out
fidivs
cmp
les
nop
addr16
ss
lock
xchg
xor
das
push
push
xor
jns
cltd
push
cmp
imul
cli
ljmp
xor
mov
pop
insb
mov
push
cmpl
xorb
jmp
dec
or
mov
ljmp
jae
into
fcmovb
push
sub
inc
lahf
xchg
pop
outsl
jno
js
es
sbb
adc
inc
or
jae
push
sbb
and
jecxz
in
arpl
add
cmp
and
lds
ljmp
sbb
mov
in
xor
cmp
pop
scas
xchg
dec
or
sbb
push
fnstsw
pop
add
and
xor
gs
or
popf
inc
bound
xor
add
xchg
and
cwtl
les
adc
jno
dec
jg
jg
or
jecxz
test
cmp
jbe
sahf
gs
xor
scas
scas
pusha
in
das
cmpsb
aas
xchg
aam
cs
and
add
enter
int3
call
pop
in
push
call
sub
cmp
push
mov
xchg
push
jp
jbe,pn
xor
add
fistpll
call
ss
and
cmpb
add
ljmp
fidivl
sbb
jecxz
xchg
loopne
jg
mov
repnz
ficompl
sub
sti
and
andl
cmp
mul
leave
fcmove
xchg
add
dec
pop
sbbb
xor
mov
mov
out
lret
addr16
adc
inc
enter
pop
inc
inc
xchg
push
push
sub
mov
mov
pop
stos
imul
sub
fstpl
mov
push
pmaxsw
inc
adc
lcall
lods
and
xor
or
insb
and
pop
pushf
push
ret
jne
int3
cld
mov
inc
int3
push
push
lods
mov
dec
inc
std
arpl
ret
mov
or
test
andl
jo
lret
andb
lea
jb
movsl
push
lahf
xchg
ds
or
std
flds
xchg
inc
pop
sbb
mov
jg
or
pop
int3
push
in
sub
rolb
xchg
stc
dec
or
into
std
sti
leave
sti
iret
jmp
or
add
add
add
dec
fwait
leave
mov
test
mul
xchg
or
xlat
js
mov
imul
icebp
outsl
jmp
inc
int
fnstsw
sahf
mov
adc
call
aas
ret
ret
mov
pop
int3
stos
subb
jne
push
dec
mov
xor
xor
rcll
jae
addb
bswap
dec
lea
push
or
lods
jno
mov
ret
push
cmpl
or
ljmp
lcall
enter
jge
cmp
das
and
inc
sbb
sbb
cmp
mov
push
loopne
mov
hlt
sbb
arpl
outsb
ljmp
aad
repnz
pusha
aas
xchg
cmp
mov
loope,pt
sbb
mov
jg
inc
mov
out
add
mov
xor
mov
add
sub
test
repnz
outsb
lods
int3
adc
jmp
pop
dec
mov
mov
push
addr16
adc
adc
movsl
ds
fcompl
iret
fiaddl
xor
push
adc
xchg
adc
rclb
mov
shr
pop
les
push
mov
xor
sub
jbe
in
imul
sbb
nop
gs
outsl
dec
call
pop
sub
popf
aad
mov
call
pop
adc
pop
rcrl
lods
nop
stos
cmp
bound
mov
push
cmp
lret
test
dec
dec
ret
push
imul
aaa
sub
adc
or
in
dec
fisttpl
push
lods
mov
push
cmp
pop
sub
add
jbe
pop
cld
dec
sbb
pushf
xchg
pop
mov
lods
dec
test
pop
mov
mov
push
mov
push
add
jg
mov
sahf
loop
adc
pop
imul
add
add
add
daa
push
push
and
adc
add
push
test
pop
dec
fimuls
sbb
cwtl
mov
pop
sub
mov
das
mov
scas
or
adc
stos
js
sub
repz
and
add
jge
push
cld
pop
add
xchg
jmp
mov
daa
mov
sbb
xchg
sub
lock
test
les
or
aaa
outsb
lods
cld
add
inc
sarl
insl
sbb
jge
jp
or
sar
push
movsb
adc
jle
sbb
cmp
icebp
ret
shlb
imul
shlb
inc
adcb
lock
hlt
sbb
push
xchg
cmp
mov
push
adc
mov
inc
fildll
shlb
subl
mov
jne
popf
dec
dec
repz
adc
inc
or
adc
inc
xor
add
xor
push
cld
pushl
cld
sbb
jl
add
incl
add
push
lods
or
adc
mov
repnz
jl
data16
inc
xchg
ret
push
jle
int
and
test
ffree
or
jmp
or
int3
jg
rcll
mov
mov
xchg
jae
push
mov
sbb
je
sub
es
adc
in
mov
test
popa
icebp
lods
pop
les
jbe
idiv
insl
rorb
in
cltd
mov
jge
push
mov
fcoms
je
and
sub
add
shll
mov
mov
aaa
insl
mov
sbb
mov
push
popa
add
iret
sbb
push
mov
pusha
arpl
pushf
nop
addr16
mov
sbb
div
ds
mov
and
push
add
roll
cmp
cmp
fs
repnz
add
add
pushf
shrb
lcall
lock
add
add
add
fstpl
addb
sbb
push
cmp
fdecstp
outsb
dec
pop
or
inc
jmp
je
enter
xchg
jg
inc
xchg
mov
out
jg
es
adc
out
shll
push
add
sbb
jge
rcl
sbbb
fildll
icebp
ss
cmpsb
std
cmpsl
out
xor
icebp
and
sahf
mov
faddl
jb
add
sbb
mov
out
stos
mov
dec
sub
and
xor
pop
mov
jb
out
jecxz
test
sahf
dec
test
sbb
and
add
test
sub
aaa
cs
test
fsubs
mov
jmp
imul
call
js
movsl
in
test
cmpsl
es
push
xchg
lcall
js
cmpsb
add
xchg
add
test
mov
aas
scas
fldz
xor
jp
add
incl
add
pop
add
cmp
cs
out
sub
cmp
xor
mov
mov
pop
dec
mov
aad
sbb
fwait
or
jnp
xchg
sbb
es
lea
stos
movsl
int
mov
mov
xlat
out
and
aam
shl
in
dec
mov
shlb
push
jecxz
pop
repz
pop
jecxz
or
push
jbe
es
popa
cwtl
fidivrs
mov
pop
icebp
inc
push
mov
mov
sbb
enter
aaa
paddw
js
inc
cltd
fdivl
sub
xor
test
scas
inc
out
repz
pop
push
add
ret
xchg
and
pop
push
popf
mov
or
xchg
mov
cmp
jp
pushf
aas
jge
jne
add
andl
ja
pop
inc
xorb
pop
add
sbb
xlat
call
add
jg
jne
jne
jg
loop
mov
aad
les
add
add
add
cld
shll
or
shlb
orb
adc
jmp
adc
jae
imul
cli
jecxz
std
sti
sub
jmp
test
jl
pop
aad
add
sarb
mov
pop
rclb
xor
mov
sbbl
inc
mov
add
sub
cmp
mov
push
adc
mov
cmpsb
flds
xor
lds
mov
iret
gs
push
repnz
stos
inc
mov
hlt
mov
ds
mov
nop
mov
shl
mov
sbb
add
inc
dec
lods
mov
dec
fcompl
jae
jb
add
fwait
add
pusha
cmpsb
pop
fimull
sub
mov
fiadds
fs
ja
cmp
fwait
push
int
or
cmpsl
fcoms
lods
sub
add
add
dec
pop
mov
cmc
mov
fistpll
add
incl
add
jecxz
ss
ficoml
pop
je
repnz
add
pop
jmp
sbb
inc
inc
movsb
lea
pop
jnp
cltd
aad
rcll
add
fwait
insl
gs
pop
or
pop
jmp
inc
push
push
lea
inc
add
imul
divl
jl
cli
sub
aam
mov
xchg
adc
sbb
int3
call
ficoml
fisttpl
cmpsb
mov
in
bound
enter
jns
pusha
adc
jbe
fsubrs
dec
mov
js
js
jbe
in
add
stos
dec
cmc
mov
test
xor
jbe
pop
loop
es
lock
jmp
mov
sti
push
push
xor
mov
adc
sbb
sti
rcl
xchg
or
dec
out
and
loope
mov
mov
fistpll
aas
inc
mov
push
in
xchg
fdivrs
arpl
add
mov
add
outsb
jle
lods
testl
movb
incl
add
add
test
and
loope
sbb
aad
test
fwait
xlat
dec
outsl
sbb
sub
int
sub
cmp
bound
xor
daa
mov
xor
repz
xor
fistps
pop
mov
push
xlat
jb
or
lds
jnp
aam
jne
faddl
cli
jp
mov
sub
enter
push
cld
sahf
xor
mov
adc
cmp
int3
mov
out
pushf
jnp
mov
loope
ja
push
pusha
sub
clc
inc
and
cltd
inc
data16
iret
dec
fsubrl
ret
xchg
mov
test
ja
xor
call
sbb
out
jno
loop
lret
dec
push
push
pop
mov
xchg
or
dec
into
pop
push
ror
decl
bound
icebp
fucom
xchg
pop
cmp
lods
dec
add
pop
in
stos
push
ss
dec
fiadds
mov
mov
add
mov
mov
add
jns
jbe
add
incl
add
mov
insb
shrb
push
push
int
sarb
aam
dec
stc
out
jg
jbe
and
mov
jecxz
mov
cmp
aam
sub
fildl
test
out
in
mov
lods
gs
and
loop
comiss
jbe
es
aad
sbb
add
mov
shrl
mull
ljmp
outsb
outsb
outsl
adc
cmp
hlt
lret
daa
nop
adc
rol
aam
std
inc
xchg
imul
mov
hlt
nop
pop
mov
jmp
mov
jae
push
sub
loop
and
jp
pop
and
out
cmp
inc
cli
leave
adc
into
icebp
sbbb
mulb
jle
out
push
add
out
sub
lds
push
adcb
repz
mov
movsl
dec
enter
add
test
sbb
xlat
in
aad
out
out
jo
enter
add
add
sbb
xor
mov
push
repz
jle
push
pop
rcrl
scas
fstp
fs
cmpl
xor
fcmovbe
lds
into
cli
std
stos
inc
imul
sub
inc
xor
fistpl
mov
cmp
test
fsubrs
adc
dec
ss
loop
add
pop
inc
mov
sub
out
adc
pushw
arpl
mov
mov
and
jbe
sbb
xchg
cmc
push
xor
aad
inc
xchg
pop
scas
pop
sub
lods
cmpsl
test
leave
xchg
adc
xchg
xor
test
jno
mov
push
stos
mov
cmpsb
insb
mov
pop
or
lods
xlat
mov
push
cmp
sub
fsts
ret
sub
cmp
or
jmp
mov
adc
insl
out
adc
pop
cld
sbb
fimull
add
ds
sub
cmp
jg
and
mov
mov
leave
add
incl
add
fildl
sbb
dec
ja
mov
in
pusha
jno
inc
loopne
add
gs
sbb
dec
jl
xchg
cli
aam
push
out
faddl
mov
rorl
stos
lret
in
adc
mov
jb
addr16
cmp
jnp
divb
pop
std
pop
dec
and
inc
insb
hlt
pushl
and
sbb
mov
and
vcomiss
lods
shrb
pop
sub
jb
in
sbb
sbb
addr16
roll
mov
pop
adcl
adc
rolb
imul
inc
nop
cmp
andl
sbb
add
mov
js
or
and
into
mov
fwait
pop
ljmp
inc
call
repnz
xchg
or
pusha
mov
test
jo
jo
mov
xchg
and
cmp
xchg
push
jo
sub
loopne
mov
cmpsl
dec
test
add
xor
fistpll
out
repz
fcoms
and
xor
jae
add
incl
add
pop
mov
pop
dec
enter
push
fsubl
or
pop
xor
mov
or
push
inc
out
lcall
xor
loope
loop
sbb
shrb
cmpsb
sub
xchg
add
dec
xor
mov
sbb
xchg
not
mov
into
rorl
mov
xor
je
mov
xor
inc
subb
and
ficomps
adc
int
jecxz
sti
mov
stos
sbb
test
rol
mov
out
mov
dec
adc
lods
stos
ret
and
popa
fndisi(8087
aaa
inc
sbb
movsl
xchg
fcoms
xchg
inc
dec
adc
adc
xor
xlat
mov
in
mov
and
inc
push
mov
popa
cmp
push
ss
out
popa
xor
loopne
cmc
stc
mov
insb
or
mov
add
add
mov
mov
je
adc
add
incl
add
movsb
rolb
add
push
sti
push
adc
xchg
dec
test
cmp
das
js
mov
imul
mov
fiadds
cmp
push
mov
push
sbbl
lret
lock
mov
jns
sahf
cmp
into
push
repz
mov
add
and
fs
aam
fstpl
cwtl
fiadds
outsb
and
xor
add
repnz
outsl
inc
push
cmp
in
fdivl
mov
inc
lea
dec
lea
lea
add
pop
imul
sub
std
sbbb
and
add
mov
testb
cmp
sub
jne
mov
pop
dec
call
or
cmpsb
pop
in
jnp
push
push
add
push
sub
fldcw
jne
inc
push
or
inc
add
ret
inc
mov
shlb
arpl
hlt
mov
add
enter
in
sbb
push
inc
mov
int3
add
incl
add
cmpsl
xchg
mov
push
or
subb
test
clc
test
and
jae
loop
ljmp
adc
xlat
lods
cltd
or
jmp
cmp
test
pop
jecxz
push
push
mov
stos
divb
lcall
les
pop
jae
sub
sub
mov
bound
pop
sti
xchg
xor
inc
mov
insl
jae
xor
jmp
in
push
jnp
test
hlt
fcoml
cmp
incl
pushf
imul
add
call
rolb
mov
sbb
ds
inc
ljmp
xor
mov
aaa
inc
jmp
popa
mov
loopne
pop
lock
test
popf
or
and
sbb
dec
cmc
jge
dec
and
loop
mov
arpl
push
test
adc
and
add
imul
cmc
call
inc
push
popa
mov
int
add
add
add
data16
lea
pop
inc
pop
push
int
les
jl
sbb
jge
xor
inc
ja
xchg
insl
lcall
add
push
out
into
cltd
cwtl
mov
test
test
dec
out
scas
sti
cmp
pop
mov
cld
jae
and
push
aam
add
push
mov
rcrl
filds
outsb
mov
fistpll
add
rorb
cmp
ljmp
and
sub
and
mov
xchg
xor
adc
inc
xchg
call
cmp
repz
and
ja
sub
and
cmpsl
ds
stc
test
or
push
push
jnp
test
dec
gs
and
insb
pop
ss
out
xchg
pop
les
push
mov
mov
je
sbb
xchg
push
outsb
outsb
push
sub
fcoms
mov
sbb
add
ja
iret
sub
and
outsl
into
add
incl
add
xlat
testl
xor
mov
xor
cmp
jbe
xchg
inc
and
ds
jl
and
cwtl
jg
pushf
pop
mov
in
add
dec
clc
lods
rcrb
add
roll
pusha
std
sub
sti
mov
mov
ficompl
inc
xor
dec
and
insb
lret
and
sarl
data16
pop
dec
cmp
xchg
push
fwait
and
cs
and
xchg
lret
add
cmp
div
dec
or
mov
fwait
sub
nop
inc
icebp
mov
cs
nop
imul
push
jle
ja
stos
fnsave
mov
adc
sbb
sahf
mov
push
aas
fidivrs
incb
mov
push
adc
pop
in
push
bound
fwait
sbb
aaa
fsts
movsb
mov
popa
jmp
lret
sbb
xchg
xchg
cmp
enter
add
out
into
gs
cld
test
iret
add
incl
add
mov
mov
push
push
jle
std
mov
int3
push
pop
cmp
repz
jle
in
add
in
cld
loop
jnp
imul
xchg
sti
jl
add
mov
push
lret
shrl
in
jbe
ret
sbb
fsubrl
xchg
pop
push
dec
pop
fisttpll
inc
fstl
in
int
pushf
lods
adc
loopne
inc
sub
jae
mov
mov
cmpsl
and
repz
dec
std
adc
insl
sarl
mov
xlat
mov
mov
cltd
or
scas
enter
sub
dec
push
add
bound
xchg
out
inc
decb
cs
rorl
out
or
jb
cmpb
lods
insl
mov
or
mov
es
aaa
out
adc
dec
xor
fcmovnu
or
fisubrl
xchg
testb
xchg
pop
iret
daa
bound
loopne
and
je
out
mov
sub
rolb
add
add
add
movsb
outsb
xchg
xchg
xor
push
out
clc
outsb
into
add
test
sub
in
pop
and
addb
xchg
popa
adc
scas
cwtl
xor
das
icebp
xchg
cmp
out
fwait
shl
push
pop
mov
pop
sub
rcl
jle
fistpll
sahf
xor
sti
out
adc
pop
jns
mov
xor
push
repnz
mov
mov
outsl
daa
or
fsubl
lock
imul
jg
ja
mov
out
add
ret
xlat
out
je
test
scas
mov
jp
jg
add
or
mov
mov
clc
sbb
mov
addl
cmp
dec
pushl
mov
decl
jl
repnz
xchg
inc
adc
cs
lret
pop
lods
sbb
and
mov
ret
pop
mov
loope
jb
mov
jno
and
push
add
dec
daa
dec
das
outsb
imul
push
xchg
arpl
fs
roll
add
add
add
xchg
add
fadds
xchg
std
andb
push
cmp
repz
jnp
inc
add
mov
andb
jmp
scas
jne
mov
fnstsw
sbb
jb
xlat
or
sahf
adc
jnp
je
fiadds
dec
rcl
and
add
cld
inc
les
xor
add
sub
lea
ljmp
or
jbe
pop
icebp
fst
xchg
mov
dec
add
xchg
out
je
pop
aam
call
lods
call
jecxz
sub
sub
aas
cmp
mov
pop
pop
lcall
mov
push
dec
sub
mov
dec
js
ror
and
repnz
clc
xor
adc
int3
dec
push
std
shlb
out
fwait
sub
sbb
xor
jno
push
xor
imul
add
call
out
lahf
ret
or
sub
rolb
add
add
add
iret
aaa
pop
cmp
sbb
jp
cmc
xchg
pop
lods
mov
xor
xchg
pop
pop
dec
insb
ja
int
sub
xchg
aad
cmpsl
lods
lods
lahf
out
push
push
mov
dec
sbb
push
lods
lds
dec
sbb
fiadds
mov
jae
stc
ret
nop
cld
cmc
notl
sub
adc
jmp
sbb
xlat
and
dec
push
push
lods
outsl
or
lret
mov
into
inc
leave
out
xlat
inc
inc
push
lea
xchg
jmp
cmpsb
pop
shl
js
ss
fs
jmp
orl
test
shlb
std
xchg
push
arpl
imul
sbb
popf
insb
mov
into
xlat
cmp
xor
mov
mov
aaa
scas
das
cs
les
movsl
push
psubsb
fsubl
cmpsb
xlat
movsb
cmp
rorl
sbb
xlat
addb
fwait
icebp
add
neg
outsl
push
xchg
or
roll
add
add
add
mov
pushf
adc
jne
pop
cld
test
lcall
jo
push
push
add
addr16
scas
xor
jnp
jne
mov
or
cmpsl
push
js
jns
nop
loop
cmpsl
jmp
xchg
add
imul
sarb
stos
je
mov
push
inc
and
stos
cmp
jl
xchg
cmpsl
fnsave
js
jnp
subl
or
cmp
xor
cld
xor
mov
cmpsb
or
out
test
dec
in
cmp
test
jmp
nop
shlb
and
shlb
adc
jecxz
imul
add
lret
lret
add
pushf
decl
push
mov
cmpl
repz
out
gs
xchg
roll
sti
mov
mov
sub
push
pop
lret
mov
cwtl
insb
gs
jnp
pop
push
pushf
popf
sbb
xor
add
sbb
sub
dec
enter
imul
add
rcrl
cmc
call
add
jns
outsl
inc
in
mov
or
andl
sbb
test
into
int3
in
ftst
lods
and
xchg
sbb
push
sbbb
aad
stc
push
mov
in
gs
shlb
ficoms
sbb
cmpsb
and
lods
psraw
pop
into
inc
rol
lcall
push
sbb
jmp
rol
es
cmp
repnz
dec
das
mov
aas
hlt
das
xor
ret
and
lods
stos
jl
pop
addr16
aad
lea
iret
js
fwait
push
jbe
loopne
mov
and
mov
outsl
rol
inc
push
scas
push
lahf
ljmp
fldt
adc
cld
icebp
dec
mov
cs
push
test
movsb
cmpsb
in
pop
enter
cmp
push
or
fs
loop
lret
data16
pop
add
ja
pop
in
mov
pushf
adc
ds
jae
cltd
cwtl
fldcw
add
incl
add
sbb
inc
sub
pusha
aas
sub
sbb
or
jae
inc
les
xor
sub
mov
enter
add
xchg
cmc
mov
test
lret
cs
and
popa
adc
test
push
sub
add
cmpb
out
mov
loopne
aas
fstps
sub
stos
xchg
and
sbbb
add
push
test
call
mov
push
mov
shrl
into
popf
lds
xchg
inc
jae
enter
cli
mov
fs
cmpsl
lahf
inc
adc
add
jp
pop
push
les
cmp
cmp
or
adc
in
fsts
xchg
fisttpll
lret
pushf
ja
movsb
mov
sbb
add
or
add
mov
cmpsb
cld
pop
inc
scas
mov
dec
and
xchg
and
idiv
lahf
insl
mov
hlt
jecxz
addr16
add
incl
add
mov
decb
popf
and
push
inc
or
ljmp
add
sub
add
ret
cmp
mov
lcall
loop
fwait
cltd
xor
mov
imul
ja
pop
repz
aaa
ja
jns
outsl
inc
cmc
rcr
pop
outsl
mov
and
ret
dec
fwait
cmp
push
adc
test
jne
cmp
xchg
cwtl
das
inc
jl
movsl
push
outsl
test
jle
testb
dec
cmpl
pop
in
sub
and
sbb
call
and
adc
sbb
sbb
mov
mov
aam
out
loopne
adc
push
pop
cmp
jb
mov
pushf
inc
outsb
nop
add
movsb
sub
fidivl
cmp
mov
jno
stos
pop
mov
fnstenv
gs
jo
sbb
stos
clc
mov
ret
or
imulb
mov
imul
mov
add
xchg
ja
push
jg
leave
or
xor
and
data16
add
incl
add
fcompl
lock
mov
cmpsb
dec
jnp
xor
repnz
add
cmp
cli
pusha
bound
sar
xor
dec
xchg
mov
lods
jne
sub
sub
cmp
repz
jecxz
in
mov
push
loope
out
clc
popa
adc
ljmp
sbb
popl
mov
mov
or
push
or
mov
xchg
adc
cmp
cwtl
outsl
or
dec
mov
xchg
adc
inc
fstl
mulb
clc
nop
mov
ret
repz
mov
and
rep
outsl
leave
xchg
aad
ds
inc
mov
movsl
in
negl
insl
repnz
xlat
ss
stc
shrb
lds
ja
lea
es
ret
ljmp
sbb
push
movsl
cmpsl
mov
call
clc
pop
jnp
mov
pop
orl
or
cmp
imul
xchg
movsb
into
popa
push
dec
fadds
add
add
add
shll
or
vpminub
out
arpl
jo
sbb
push
into
int3
dec
cmp
aad
enter
mov
dec
inc
imul
adc
adc
mov
push
std
and
cmp
sbb
lock
lret
push
cmp
push
lods
mov
popf
add
mov
leave
out
movsl
and
mov
sbb
push
cli
dec
jg
cmc
int
sbb
sbb
sbb
cmp
sbb
sub
jno
jb
bound
hlt
jl
nop
sbb
cmp
lcall
push
addb
outsl
stc
arpl
or
pop
ljmp
jns
lds
inc
or
cmc
pop
and
sbb
push
sub
sbb
testb
arpl
push
pop
fs
ja
das
ds
shlb
add
add
psubusw
push
in
sub
jge
flds
add
add
add
fisubrl
push
arpl
pop
or
shlb
adc
jle
test
popf
imul
xorl
sbbl
dec
or
leave
dec
stos
or
xor
sub
clc
in
sub
xchg
imul
push
mov
inc
addl
in
xchg
insl
or
and
aam
rol
lea
jg
pop
outsb
mov
push
rcll
andl
xor
rcrb
xchg
push
adc
or
push
jl
lret
clc
inc
fsubs
xchg
outsb
xchg
pop
jle
das
lcall
sub
or
add
in
loopne
mov
lret
adc
das
js
iret
xchg
aam
mov
lahf
adc
mov
push
loopne
sub
or
leave
ds
mov
push
add
shrl
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
into
arpl
add
incl
add
repz
lods
jg
daa
std
or
push
jbe
push
mov
mov
xorb
int3
fmuls
sub
imul
scas
in
outsl
fadds
cld
negb
pop
jno
xchg
add
sbb
sub
push
andnps
adc
test
fstpl
and
xchg
shlw
xor
dec
int
fs
mov
sti
push
and
shll
repz
pop
inc
mov
sbb
shll
and
scas
fcoml
add
and
mov
dec
lock
fbstp
mov
mov
and
xor
dec
sub
push
and
xor
xlat
and
xchg
pushf
lds
sbb
pop
mov
loope
pop
daa
cmp
xor
dec
cmc
in
sarl
inc
inc
dec
or
int
add
cmp
add
add
jle
jg
std
fstpt
roll
add
add
sub
push
jmp
push
cmp
ja
mov
jne
repnz
sti
xchg
test
into
adc
inc
pop
xchg
arpl
cli
jp
enter
adc
mov
mov
ret
pop
push
mov
xchg
cmp
adc
and
test
leave
add
mov
push
icebp
hlt
or
outsl
stos
xchg
jo
fs
jg
mov
addl
adc
lock
push
pop
jae
jg
mov
in
cwtl
sub
xchg
test
adc
loope
mov
data16
shll
cltd
sub
mov
flds
ja
inc
xchg
roll
push
add
mov
stc
mov
out
push
pop
inc
std
rcr
aaa
fiadds
pushf
repz
add
jo
push
pop
or
idivl
push
dec
data16
mov
xchg
push
adc
jb
sub
xchg
adc
mov
cmp
ljmp
pop
push
add
incl
add
insl
and
js
xor
pop
fdivl
jns
cmpsb
into
cmpsb
mov
leave
or
and
repnz
aam
inc
rolb
cmp
xor
add
fldcw
in
cmc
or
xchg
and
add
cmp
xchg
xchg
aaa
inc
in
dec
shll
sbb
mov
aad
repnz
cld
xchg
call
or
addb
cmp
cs
inc
push
mov
lods
mov
imul
add
xchg
sbb
jge
jo
int
or
frstor
inc
xor
push
dec
cs
cmp
sub
add
in
dec
out
cs
cmp
push
filds
push
lods
out
sub
ss
ficomps
pop
add
adc
jne
inc
sti
jg
fiaddl
jne
scas
mov
cmp
adc
adc
leave
jmp
scas
inc
call
pusha
fldl
add
add
add
push
stos
jge
subl
loope
mov
insb
cld
idivl
mov
cmp
aas
fs
xor
gs
push
inc
insl
or
fs
loope
xlat
jle
shr
lock
push
stc
into
jl
mov
mov
das
or
rep
xchg
lds
mov
fildll
aaa
cmpsl
dec
frstor
sub
add
call
in
xor
in
mov
mov
add
call
fimull
loopne
jge
fcomps
push
and
das
cli
mov
inc
les
jecxz
dec
push
shll
imul
cmp
xor
add
int3
mov
push
or
in
ljmp
jle
mov
mov
cld
push
cmp
mov
data16
pushf
xchg
add
push
out
faddl
sub
pop
fiadds
add
add
add
xorb
adcl
xchg
js
int3
add
imul
adc
or
jmp
sub
sub
mov
xchg
adc
or
outsb
out
mov
fpatan
adc
sub
popa
and
push
push
sub
jnp
lods
jne
push
shl
cli
sbb
aas
and
repnz
int
imul
mov
cmc
and
mov
cwtl
xchg
sbb
les
pop
lahf
stos
inc
das
mov
test
in
aaa
or
lcall
mov
std
mov
mov
insb
aad
jno
hlt
popa
sbb
dec
dec
shl
xchg
lds
mov
jae
dec
mov
push
fidivs
pop
out
sbb
test
aad
cmp
mov
lods
inc
xchg
cmc
out
clc
aad
ja
and
dec
imul
mov
add
jg
mov
lcall
fisttps
or
pop
filds
add
add
add
mov
jecxz
fs
mov
cld
add
popa
into
or
cmpl
jg
cmp
mov
mov
mov
inc
cltd
sub
rorb
lret
scas
ljmp
pop
mov
mov
sub
inc
jecxz
ja
mov
es
xor
dec
push
mov
enter
push
sbb
and
sub
ds
sub
shrb
xor
fstp
push
cs
jmp
cli
aad
jbe
lods
jno
jg
ret
scas
sbb
repz
dec
cmp
outsl
pop
cmc
dec
and
xor
dec
push
scas
aam
jb
push
push
ret
adc
jo
mov
and
xor
push
movsb
push
test
fisubl
mov
cmp
sub
jge
add
lds
repnz
push
inc
out
add
mov
jns
xchg
xchg
mov
aam
js
loopne
add
add
add
in
mov
ret
or
addr16
ss
test
xchg
imul
rcll
jmp
js
xlat
xor
imulb
pop
jo
pop
add
xchg
push
adc
xchg
sbb
jns
mov
cmc
cmpsl
in
jno
lock
cmc
mov
stc
add
xchg
test
cmpl
js
pop
lcall
rcll
pop
fidivrl
sub
ficoms
movsl
ja
cmp
dec
push
subl
cmc
cs
mov
shrb
xchg
mov
stos
lcall
mov
in
add
xchg
lds
inc
mov
or
in
xchg
test
addr16
dec
adc
mov
jmp
and
or
jb
fdiv
pop
out
push
dec
sub
in
pop
subl
std
dec
pop
gs
test
sti
clc
adc
adc
jae
fadd
fsubp
jnp
or
cld
les
fs
pop
loope
add
add
add
negb
dec
test
hlt
jbe
std
je
xorl
nop
std
scas
xchg
jl
hlt
insb
xchg
arpl
cwtl
jo
aad
inc
mov
and
or
movsb
push
mov
fiadds
shll
sbb
shrb
bound
dec
mov
add
movsb
mov
loop
sbb
test
shll
add
sub
sub
push
call
mov
aam
mov
cli
sti
xchg
scas
leave
daa
sbb
cmp
mov
xchg
das
in
popa
stos
xor
add
sbb
add
imull
xlat
imul
push
inc
push
test
cmc
pop
push
aas
pop
test
adc
pop
sbb
rolb
pop
cmp
lcall
arpl
ja
push
pop
ret
mov
or
inc
std
add
sub
cld
cli
jle
dec
nop
xor
add
incl
add
ss
jecxz
subb
mov
or
inc
clc
jb
shrl
push
sbb
mov
test
movsb
lods
jecxz
xor
xchg
inc
mov
pop
jl
in
jecxz
inc
fisubs
ds
outsb
lods
jecxz
sti
fs
je
in
or
adc
cmp
mov
cmp
lods
fnstcw
and
in
loop
les
fistpll
hlt
adc
pop
xor
ds
and
fwait
mov
cltd
jne
out
sub
aas
jno
clc
mov
jp
mov
lods
mov
inc
sbb
decb
push
jge
inc
sub
pop
mov
cmpsb
lahf
sub
lods
ss
jb
dec
std
movsb
xchg
xor
push
rcr
xchg
cmp
push
xchg
xchg
cmc
pop
xchg
adc
dec
call
aad
push
sub
xor
das
aaa
cmc
add
stc
dec
mov
mov
lea
pop
jbe
ja
sti
aaa
out
ja
or
cwtl
pop
jecxz
add
add
add
sahf
mov
ret
enter
test
pop
mov
dec
mov
add
fcompl
or
ds
icebp
jno
and
jbe
int3
inc
dec
mov
mov
mov
fs
fisubrl
repnz
in
fidivl
imul
push
ds
outsl
or
insl
jecxz
adc
cmp
inc
lahf
add
ljmp
sarl
mov
fisttpl
push
ds
xor
pop
mov
xchg
pusha
add
dec
pop
ficompl
xchg
aam
lds
outsb
or
and
inc
int
sub
nop
pop
jmp
arpl
mov
out
xchg
xchg
dec
ljmp
scas
jge
sti
rorl
mov
xor
lcall
sub
pop
enter
rorb
test
mov
movsb
pop
add
into
arpl
pop
xchg
aaa
pushf
cmpb
xor
add
incl
add
xchg
or
rorl
cmp
fbld
aaa
mov
and
mov
repnz
and
ret
sub
mov
inc
jecxz
adc
out
inc
adc
call
inc
les
add
jae
outsb
sub
xorb
and
xor
iret
sbb
jns
and
fcmovbe
or
cmpb
and
jne
cmp
inc
fidivrs
loope
mov
rorb
out
cmp
int
es
sub
xor
adc
sbb
cmpsl
loope
sbb
push
sub
cmpsb
inc
mov
pop
xlat
ja
out
inc
or
pushw
mov
xchg
les
inc
mov
cmp
mov
test
xchg
or
mov
cltd
rcll
jnp
in
pushf
mov
fs
out
add
ja
lcall
mov
or
incl
add
cmp
test
xor
jmp
imul
sbb
lods
mov
mov
lock
xchg
pop
shl
jmp
pop
icebp
call
popa
mov
data16
movsl
lock
jbe
cmp
and
iret
xchg
pop
mov
scas
subb
cmp
incb
in
scas
adc
aas
stos
dec
xlat
push
imul
pusha
dec
fdivrl
adc
dec
outsb
fsubp
dec
subb
in
cld
xchg
mov
dec
addr16
in
subl
fdivs
inc
mov
jecxz
push
xchg
or
fistpll
jp
fdivl
xlat
or
in
or
popf
push
sahf
inc
cmc
rolb
std
push
sbbb
inc
lods
fldcw
daa
adc
inc
inc
and
xor
inc
enter
cmp
fwait
hlt
sub
pop
mov
adc
sahf
lret
icebp
mov
mov
je
sbb
repnz
add
add
add
lock
jg
in
and
negb
push
out
add
add
add
loopne
aad
sub
or
inc
mov
das
sbb
loop
push
pop
add
xchg
cmp
jbe
dec
xchg
jb
jecxz
iret
adc
jb
sti
mov
dec
shl
call
dec
add
dec
ret
cmp
push
mov
xchg
lcall
add
sbb
pop
mov
rolb
clc
aad
fstl
push
stos
jo
loopne
sub
push
mov
pop
mov
aad
inc
pushf
shll
cmp
in
jge
test
inc
inc
or
repnz
mov
mov
push
add
popf
sarl
mov
andb
in
and
fs
scas
mov
xor
jge
pop
out
aas
push
pop
jno
popa
movsb
push
enter
les
xlat
push
int3
in
je
push
dec
push
and
sub
ljmp
inc
inc
jl
pop
xchg
testl
add
add
pop
xlat
fistpl
clc
ljmp
out
add
add
add
sub
dec
xchg
call
dec
adc
pop
cmp
jp
sub
xchg
mov
pop
inc
push
fidivs
in
insl
jp
cs
mov
imull
sbb
outsl
sbb
jb
pop
enter
jg
imul
stos
jp
adc
dec
sub
cmp
mov
inc
in
popf
movsb
xchg
xlat
xchg
es
cs
or
ja
jg
push
jne
test
sbb
add
and
mov
gs
daa
push
icebp
xor
jnp
aas
push
sti
rcrb
in
add
xchg
in
enter
and
insl
xchg
clc
xchg
and
call
div
mov
ret
inc
dec
adc
ds
fbstp
jne
pop
sbbb
jno
cmpsl
sub
sub
xchg
pushf
shlb
mov
add
scas
ficomps
xor
inc
dec
sti
mov
dec
leave
sub
in
aad
adc
add
mov
dec
js
stc
mov
dec
int
nop
gs
call
add
sbb
outsb
jbe
stc
mov
rcll
out
mov
fdivl
jae
push
fiaddl
inc
shl
jbe
fsub
lea
sahf
jge
out
movsb
xlat
mov
cmc
cwtl
aam
xchg
shlb
mov
push
pop
push
int
pop
pushf
fiadds
stos
movb
aaa
movsb
jmp
jnp
pop
cwtl
pop
adc
push
pop
push
jecxz
jmp
jl
call
lds
decb
mov
aad
inc
dec
pop
outsl
lods
push
fidivl
test
stos
jg
repz
jmp
mov
enter
clc
jo,pn
pop
sahf
fnstcw
sbb
pushf
xchg
lods
fsts
mov
out
jp
add
stos
sbbl
pop
dec
aas
test
fldl
repnz
or
mov
mov
loopew
pop
cmp
sub
mov
jns
adc
imul
mov
pop
insb
fildll
fwait
jns
jns
cs
pop
push
jmp
add
pushf
js
add
inc
jno
xchg
add
cmpsb
rcrl
dec
loopne
jecxz
mov
sub
popa
lret
clc
or
dec
popf
sbb
xor
xchg
xorb
push
or
int3
std
cmp
sub
ss
jno
divb
mov
push
xchg
mov
sbb
sub
adc
cltd
fcomi
cmp
mov
stos
fidivrs
jge
xchg
mov
sar
pop
in
loope
mov
mov
sub
push
add
test
pop
pop
jae
loopne
shlb
push
mov
shr
scas
in
sbb
gs
cltd
lret
aaa
jl
adc
mov
jge
pusha
popf
cwtl
cmc
add
enter
adc
mov
mov
sub
xchg
loopne
std
cwtl
mov
repnz
lcall
xchg
or
fnstsw
out
and
roll
add
mov
pxor
jnp
adc
jne
and
mov
ljmp
xor
lcall
jmp
into
loop
and
cmp
dec
enter
outsl
fdivs
push
jge
mov
sub
jecxz
rorl
test
in
sahf
fwait
sub
xchg
arpl
push
inc
inc
sub
out
mov
and
pop
hlt
push
cltd
int3
loop
xchg
mov
dec
pop
nop
subb
dec
mov
mov
push
inc
xchg
or
imul
hlt
inc
aaa
loope
call
jmp
fsubrp
jg
push
push
xchg
repz
cmpb
cld
xor
push
pusha
xchg
add
iret
and
fnstcw
adc
pop
xchg
dec
sbb
scas
in
push
inc
insl
dec
movsl
icebp
daa
test
fisttps
and
popf
xchg
cmc
pop
testl
pop
mov
es
rclb
pop
mov
add
fidivrs
and
sub
inc
xor
add
out
lods
xor
aas
xlat
fistl
das
popa
pop
in
aas
push
jmp
add
add
add
out
ficompl
sbb
jnp
cwtl
pop
arpl
sub
or
loopne
lock
pop
roll
mov
jge
inc
dec
into
inc
mov
jae
filds
xchg
lods
out
lret
inc
bound
mov
push
mov
or
push
xor
xor
flds
jbe
dec
jge
adc
add
addr16
cli
sub
xor
pushf
mov
mov
mov
sbb
lea
jo
cs
sub
and
sbb
cmpsb
push
mov
insl
jo
fstl
sbb
out
jl
aas
fistl
pop
dec
roll
fdiv
pop
xor
push
or
pop
loop
sbb
out
leave
pop
pop
data16
sti
lea
into
sub
fldcw
add
add
jb
scas
decb
fisttps
bound
inc
push
in
add
incl
add
ss
insl
ret
pop
mov
dec
cmp
jecxz
cmp
aam
and
sbb
pop
push
out
cmp
and
pop
sahf
push
or
jg
repnz
loope
clc
int
adc
mov
add
cmp
ja
push
and
jecxz
xor
jmp
cmpsl
pop
in
push
jg
xchg
aam
push
shll
xchg
pop
fdivp
loope
das
cltd
dec
sub
or
mov
jns
dec
fldpi
mov
ja
lret
push
add
sahf
out
out
jns
sbb
push
test
mov
lahf
repnz
std
pushf
addl
or
lret
aam
gs
aad
jo
xor
pop
mov
mov
iret
pop
dec
bound
or
dec
pminsw
xchg
popl
ja
mov
mov
sub
shl
xchg
push
sbb
ss
aas
sahf
cmp
add
xlat
mov
xchg
add
mov
push
in
add
incl
add
xchg
popf
outsl
mov
fisubrs
cmp
out
cmp
stos
lds
mov
loop
mov
ja
subl
call
jg
cmc
xor
or
out
cmp
movsl
bnd
push
cltd
sahf
les
and
stos
into
cs
jo
jg
cltd
ss
pop
test
mov
mov
loop
movsb
sub
pop
inc
jns
stc
int3
add
mov
sub
mov
les
push
rcl
xchg
mov
clc
sbb
shlb
jge
arpl
lret
daa
sub
lods
pop
movsb
loopne
inc
jne
cmp
loop
dec
jnp
xchg
xor
push
sub
jge
jmp
push
rorb
mov
cld
or
icebp
mov
add
fldln2
push
add
dec
test
push
popl
cmpsb
lret
fadd
out
mov
stos
mov
push
adc
lods
arpl
pushf
pop
jb
cmp
add
mov
aas
mov
movsl
mov
dec
out
add
incl
add
adcb
and
jbe
mov
or
adc
push
cmp
aaa
stos
mov
xchg
out
pop
das
mov
sarl
mov
pop
stc
mov
mov
outsb
pusha
aas
mov
call
outsl
dec
fcmove
pushf
mov
aad
out
or
addr16
and
and
aas
dec
lret
and
mov
rol
int3
mov
aad
push
sbb
sbb
outsl
mov
pop
aam
mov
call
stc
arpl
popa
dec
sti
popa
aam
sub
sbb
adc
rcl
test
insl
jae
pushf
inc
test
mov
lock
das
push
lret
in
mov
aas
popf
and
cmovo
insl
lds
repnz
xor
sti
sbb
test
dec
and
xchg
xchg
sbb
pop
add
dec
popf
sub
fsts
movsb
or
sbb
pop
fsubr
and
sahf
iret
lcall
add
add
mov
sti
mov
sub
mov
incl
add
fiadds
dec
push
pop
jno
xchg
data16
xchg
stc
and
je
lock
push
jmp
mov
test
mov
insl
fs
inc
pop
fdivr
mov
cmpsb
je
ja
pop
add
push
xor
cmc
mov
sub
push
mov
hlt
sar
dec
or
cmp
fimull
call
push
in
pop
sub
xchg
outsb
xlat
xor
gs
sbb
out
nop
sbb
dec
dec
lcall
xor
jno
arpl
mov
or
inc
dec
dec
movsl
adc
xchg
movsb
gs
sarl
xor
insl
sub
inc
inc
in
fimuls
lret
push
das
and
add
pushf
xchg
bound
lcall
leave
mov
or
mov
mov
orl
frstor
fsub
mov
inc
dec
insb
in
sbb
into
push
dec
cli
popa
pop
add
add
push
cmp
adc
neg
jge
xchg
jns
sub
add
incl
add
lret
dec
xchg
push
cld
or
movsl
lahf
lods
or
in
mov
add
add
loopne
xchg
and
jecxz
push
cmp
stc
lock
ja
xchg
fldcw
cmp
ret
jg
adc
jae
and
or
and
dec
push
in
xchg
fsubrl
mov
cmp
push
and
cwtl
adc
sub
jne
mulb
repz
in
fstpt
jns
jnp
jae
jo
pop
shl
ljmp
add
jae
out
lods
push
imul
mov
icebp
fidivl
leave
push
sbbb
inc
mov
mov
or
jns
mov
insb
std
ja
mov
inc
jge
jo
push
test
bound
rcrb
pop
jb
add
dec
mov
fadd
pop
and
insl
jmp
inc
pop
idiv
sbb
cs
shlb
sti
push
push
insb
mov
xchg
popf
add
dec
sub
sub
ficompl
and
incl
add
sar
xor
movl
aad
jmp
imul
cmp
out
scas
data16
mov
sbb
fs
insb
popa
jecxz
jbe
shlb
stos
loopne
push
sub
test
xchg
pop
mov
and
xchg
fwait
dec
mov
sub
gs
or
mov
mov
push
xrelease
push
and
fistps
mov
fdiv
mov
dec
jne
aaa
shlb
shll
and
adc
call
mov
je
sbb
jp
fidivrs
mov
in
cwtl
scas
mov
in
mov
std
xchg
ret
fsubrp
fmulp
test
sub
jnp
addr16
jg
and
xor
fiaddl
push
mov
sarl
add
push
out
sub
mov
adc
adc
pop
or
movsl
into
push
add
addl
add
add
ja
and
aaa
divl
ror
jne
repnz
incl
add
inc
sbb
repnz
lea
inc
push
xor
xor
lock
ret
fsubrl
adc
sub
repnz
push
lock
negl
dec
mov
leave
push
sbb
mov
push
fs
mov
cmp
xchg
xchg
stc
cld
iret
popf
push
jae
test
adc
sbb
sbb
xchg
jb
mov
test
dec
fwait
insl
enter
cmp
xor
jne
repz
sbb
in
push
movsl
add
enter
idivl
jle
cmp
call
add
jecxz
das
mov
std
repnz
outsb
and
push
leave
sbbb
mov
mov
add
xor
push
dec
mov
leave
xor
inc
ret
and
lret
rolb
inc
out
pop
jo
dec
mov
add
mov
cmc
mov
mov
inc
dec
dec
repz
incl
add
rcll
inc
sbb
xor
pop
popf
and
mov
xor
or
and
nop
icebp
mov
push
jg
pop
mov
fldenv
outsb
or
jb
xchg
inc
mov
and
push
mov
int
je
mov
jbe
rol
int3
notb
jbe
cmp
add
jl
jnp
inc
jmp
je
pop
inc
aas
loop
pop
push
gs
adc
add
dec
inc
lds
or
addl
insb
pop
scas
lods
cmp
mov
or
mov
ss
dec
into
mov
testb
pop
add
xchg
je
xor
push
pop
mov
lahf
adc
xor
pushf
mov
arpl
cmp
rolb
jb
lret
xchg
cmpb
mov
sbb
sahf
outsl
mov
adc
xchg
push
rcll
cli
push
add
jne
pusha
popf
pop
orl
add
incl
add
xor
mov
sbb
pushf
add
pushf
cmpsb
lods
das
jmp
loop
cli
mov
lcall
and
sub
fwait
pmulhuw
pusha
pusha
lods
fdiv
pop
out
pusha
xchg
testl
movsl
mov
dec
out
ss
inc
pop
jnp
add
and
cmp
inc
mov
int3
enter
pushw
mov
sbb
test
cmp
jg
hlt
lret
jb
push
mov
push
stc
out
jmp
in
ss
jnp
mov
mov
push
lahf
push
add
jb
pop
mov
data16
test
xor
and
pop
sub
lcall
testl
ud1
mov
mov
add
scas
outsb
gs
cld
push
iret
adc
mov
flds
push
add
imulb
mul
xor
loopne
cmc
add
incl
add
rol
pop
pop
sbb
cmp
adc
inc
push
mov
imul
decb
sbb
aaa
dec
out
test
xor
iret
jno
fwait
mov
lret
and
mov
push
xchg
and
push
sub
lds
pop
dec
mov
sbb
les
stos
xchg
and
insl
pop
sub
dec
loop
inc
jle
adc
or
cmc
vmaxps
jp
test
test
dec
ljmp
sub
and
push
and
scas
js
paddsb
ja
insb
xor
decb
adc
shrl
shll
dec
cltd
mul
fwait
mov
mov
cli
mov
dec
data16
dec
mov
cmp
lock
mov
jecxz
les
push
loop
xor
lcall
jge
rep
sbb
cmp
js
dec
push
add
es
in
les
aaa
xor
movsb
jp
dec
rcl
or
inc
mov
add
ret
add
xor
jb
jae
sub
inc
testb
incl
add
mov
cmp
mov
fcomp
repz
lds
lea
test
pop
leave
ret
scas
pusha
fwait
out
rol
add
sar
xchg
or
pop
pop
ljmp
and
adc
popf
int3
dec
arpl
jnp
pop
mov
sbb
in
imul
test
or
sbb
xor
clc
mov
xor
mov
lahf
pusha
and
jnp
xchg
inc
std
jl
cmp
cmp
inc
addr16
dec
cmp
out
sub
leave
es
in
cmc
scas
andb
daa
jne
xchg
sarl
adc
dec
xchg
out
fmuls
aam
pop
call
loop
fstpt
repnz
or
mov
push
sarl
mov
mov
incl
icebp
push
sbb
incb
inc
sub
fwait
xlat
cmpsb
lds
js
xchg
inc
add
add
ds
in
idivl
js
mov
mov
mov
add
incl
add
lds
lahf
out
pop
fwait
mov
mov
pop
sti
leave
popf
iret
dec
pop
pop
popa
mov
jecxz
cmp
into
xchg
jge
imul
insb
lods
adc
iret
ljmp
or
je
addb
imul
jecxz
adc
cmpsb
mov
in
lahf
orb
bound
call
pop
fucom
jp
cs
inc
out
imul
lea
jne
cmp
movl
mov
movsb
outsl
jp
scas
push
adc
pop
test
push
dec
xchg
pop
fcomps
aaa
jge
jnp
es
icebp
mov
cli
pop
pop
dec
clc
sbbl
mov
out
pop
dec
push
js
mov
outsb
xchg
push
movsb
insb
dec
gs
dec
jp
setl
inc
jns
jns
aad
sub
push
das
push
inc
xor
rcl
mov
pop
add
lret
enter
add
jecxz
inc
cli
aas
into
lret
mov
cmp
incl
add
or
pop
xchg
xchg
jns
aaa
adc
dec
sbb
mov
cmc
lea
mov
inc
adc
xchg
pop
jp
loop
stos
push
in
je
lea
mov
movsb
lcall
cmc
out
mov
ljmp
scas
test
dec
push
adc
pop
mov
mov
ss
das
push
pop
std
xchg
xchg
js
fbld
xor
sbb
inc
fiaddl
mov
sbbb
cmp
push
pop
push
mov
js
push
xchg
cmp
dec
inc
ret
push
mov
mov
fimull
sbb
adc
sbb
add
jnp
jl
nop
in
hlt
fmuls
mov
movsl
and
movsl
fimull
dec
xchg
mov
aaa
pop
xor
mov
sbb
adc
jl
movsb
in
xchg
adc
movsl
xchg
push
jbe
xchg
inc
pop
inc
jp
loopne
xor
mov
lods
sarl
add
lcall
sub
fstl
stc
add
incl
add
call
fcompl
inc
mov
mov
aad
testl
sbb
xor
xor
mov
lret
jg
aaa
repz
data16
adc
cmp
in
xor
add
data16
jo
aas
popl
mov
cld
push
fdivrs
rclb
or
xchg
pop
sub
jmp
js
repz
mov
adc
jmpw
lret
les
inc
xchg
push
addr16
mov
mov
inc
cmpsl
mov
loope
adc
mov
push
fcoms
fldenv
cmpsb
or
pop
add
or
jns
jbe
daa
adc
bound
dec
lea
ds
xchg
div
xlat
sti
flds
rol
dec
jbe
add
and
movsl
and
adc
sti
sbb
daa
std
mov
adc
movl
aaa
jae
cltd
dec
mov
jno
in
push
pop
inc
cli
add
incl
add
bound
cli
daa
push
push
fwait
mov
les
push
orl
pop
scas
jge
pop
int
jg
pop
xchg
lds
pop
jne
mov
mov
adc
and
aas
clc
ljmp
adc
pop
xor
lret
idivl
push
mov
mov
push
mov
popa
jne
and
add
clc
inc
test
outsl
sub
mov
out
mov
mov
sbb
icebp
jnp
fsubrs
and
lahf
loope
testl
sub
jns
inc
enter
fucomi
adc
mov
mov
add
shlb
adc
pop
cwtl
sbb
cmp
xchg
jns
mov
sbb
pop
test
cwtl
and
lods
push
nop
hlt
add
dec
ret
sbb
lar
dec
jno
inc
insl
outsb
and
testb
add
ds
into
nop
out
cwtl
jle
push
sub
dec
mov
sti
add
incl
add
imul
or
call
out
pop
push
pop
mov
outsl
fists
lret
jb
inc
or
out
adc
hlt
stos
dec
sub
movsl
decl
mov
inc
xchg
lock
jne
push
inc
inc
rcr
into
sahf
hlt
mov
les
fisubrs
mov
adc
mov
vpcmpgtb
repnz
jnp
stos
pop
sarl
pop
mov
mov
mov
lea
bound
pop
nop
pop
push
cmp
add
or
pop
xor
fstps
mov
xchg
int3
and
loopne
lods
push
cltd
loopne
iret
scas
sub
inc
push
lods
mov
cmp
mov
or
jo
flds
bound
push
mov
xor
mov
sbb
subb
fnsave
shll
inc
add
xor
push
adc
add
add
test
jg
push
pop
push
mov
inc
cld
add
incl
add
mov
out
dec
add
xchg
pop
loope
dec
insb
in
or
fcompl
mov
cmpsb
sarl
clc
cli
mov
scas
pop
pop
outsl
cs
sub
std
repnz
iret
test
mov
or
ljmp
rol
add
movsb
idivb
mov
movsl
pop
outsl
cs
sbb
out
fsubl
es
sub
adc
leave
pop
sbb
insl
mov
mov
push
mov
int
dec
and
and
jmp
push
inc
add
fucomip
fnstsw
jp
jae
or
movsl
gs
inc
and
cli
jo
xlat
rclb
mov
adc
lea
cmp
mov
xchg
or
rolb
subb
mov
ficoms
xor
xchg
nop
stos
xchg
add
bound
xor
adc
movsb
push
in
cmc
jne
sbb
js
mov
bound
add
incl
add
out
leave
js
pop
jns
add
sar
mov
mov
cmp
jg
in
cmc
movsb
imul
jge
das
call
int
stos
int
in
jae
push
xchg
add
cmp
data16
mov
xchg
sub
std
mov
fnstsw
sbb
fidivrl
lea
in
push
adc
jg
push
mov
push
jmp
lods
sub
mov
mov
movsb
cmpsl
xchg
pop
sbb
mov
aad
inc
call
jns
mov
inc
jae
imul
fidivrs
test
das
test
ja
rolb
cmp
aam
xor
pop
imul
negl
sbb
xchg
cld
ret
scas
lret
jmp
dec
xor
xchg
loop
cmc
cltd
mov
bound
push
pop
subb
sub
shrl
dec
sbb
cmpsb
sti
sbb
pop
popa
mov
sbb
shlb
aas
out
int3
mov
mov
data16
incb
add
add
add
fucomip
imul
imul
add
mov
sbb
test
adc
lahf
loopne
adc
jl
inc
or
popf
cmpsb
mov
sbb
add
loopne
push
adcl
cmpsb
and
psadbw
lock
push
fwait
inc
mov
inc
pop
mov
arpl
or
imulb
xchg
mov
test
jnp
daa
cltd
insl
addr16
inc
out
movsb
mov
imul
dec
push
ret
or
scas
sti
test
jl
lahf
mov
jge
inc
push
sbb
aad
in
xchg
mov
ja
sub
cmpsl
int3
sti
cltd
mov
add
adc
cmp
xor
inc
mov
or
add
and
mov
push
xor
cli
fsts
xchg
or
stc
jg
insl
inc
daa
xor
mov
lret
xor
vrcpps
lahf
push
cmc
sub
add
or
mov
and
ss
incl
add
add
add
add
sarb
std
les
enter
lds
pop
push
xor
adc
popa
out
ljmp
addb
ds
sbbb
adc
and
push
sbb
iret
rol
mov
sahf
scas
jecxz
bswap
push
jecxz
insb
out
add
dec
push
mov
add
xchg
mov
push
xor
pop
xchg
test
loope
aas
filds
hlt
out
addr16
adc
xor
jae
inc
addr16
inc
jb
js
test
push
cld
rclb
fisubl
dec
mov
mov
mov
pop
movb
mov
mov
es
inc
push
mov
repnz
push
mov
and
push
sub
rolw
cltd
outsb
mov
push
push
sbb
mov
outsb
pop
mov
add
ret
bnd
cmc
inc
stos
repz
fwait
icebp
cmp
add
add
and
sbb
push
lea
loopne
rolb
add
fcompl
aas
jno
or
mov
jge
int3
int
fcomps
pusha
std
lds
das
add
bound
lock
inc
mov
xchg
xor
mov
and
xchg
in
push
clc
leave
ja,pt
adcb
sahf
xchg
inc
xor
xor
push
fucom
pop
adc
test
enter
inc
or
popa
int
jne
fsubrp
xchg
ret
cmp
mov
inc
and
sub
hlt
shrl
xchg
ret
roll
mov
xchg
iret
fs
or
nop
add
jne
hlt
repnz
test
mov
mov
bnd
repnz
push
inc
mov
and
sub
dec
sub
mov
pop
push
xchg
adc
fld
cmp
call
in
fsubrl
dec
cmpsl
cmp
mov
mov
add
std
aaa
mov
shll
and
add
incl
add
mov
leave
add
push
int
scas
xchg
sbb
iret
jnp
pop
push
loopne
shll
xchg
lret
jl
sahf
inc
in
lods
insb
jnp
push
test
or
lods
aaa
add
scas
ds
pop
insl
test
mov
jnp
mov
out
aam
xrelease
push
in
loop,pn
shlb
dec
hlt
and
sub
ja
test
pop
stc
xchg
pop
mov
add
jno
pop
ljmp
add
out
lods
push
add
stos
mov
lods
sub
pop
repz
adc
cli
or
out
jecxz
daa
arpl
xor
and
dec
pop
ja
xchg
lods
loop
repnz
fcmovnu
les
adc
push
loop
imul
cs
into
mov
in
insb
add
mov
fs
in
stos
sub
mov
enter
push
sbb
fldenv
stc
pop
add
insl
aam
mov
scas
add
inc
mov
cmp
add
sub
add
out
xchg
rolb
in
aad
add
aaa
fldenv
jo
mov
testb
add
lret
xlat
xchg
mov
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
and
inc
xchg
or
inc
mov
out
cmp
or
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
