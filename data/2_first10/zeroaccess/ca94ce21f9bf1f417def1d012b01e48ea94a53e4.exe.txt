push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
scas
sbb
jp
jp
pop
jp
and
daa
cmp
jno
jne
shlb
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
pop
jae
addr16
into
fcoml
jne
pop
dec
incb
push
sahf
dec
add
je
pop
cltd
lods
pop
xor
mov
out
outsb
cmp
jmp
sub
sub
jl
lods
call
pop
rclb
lock
xor
notl
rolb
mov
sti
add
js
mov
mov
cmp
mov
bound
xchg
push
jb
addr16
loope
fstps
aas
sbb
icebp
ljmp
fsubrp
in
sti
fidivrl
jbe
cmc
sub
adc
cmpl
mov
je
aas
and
insl
sbb
aam
and
pop
or
cwtl
or
sti
sbb
adc
rcl
sub
pop
pop
lock
test
mov
inc
fisubrl
or
mov
mov
jge
fnstcw
jae
and
sub
xor
xor
cmc
rorb
into
or
xor
xchg
ret
sti
gs
inc
dec
loop
adc
in
mov
pop
pusha
mov
lods
das
sbb
test
mov
jb
or
in
cli
adc
jmp
xchg
lods
loopne
sahf
daa
dec
lcall
cli
insl
fiaddl
inc
mov
xor
or
cmpsb
in
pop
aaa
push
lret
xor
cs
xlat
mov
insb
ds
cmpsb
inc
push
inc
sbb
and
sub
lods
fs
sahf
mov
in
stos
arpl
mov
mov
mov
enter
push
arpl
loopne
loopne
lods
popa
dec
sbb
js
push
pop
push
push
mov
pusha
push
inc
in
cmpsb
xor
int
inc
xchg
int3
cltd
and
jecxz
push
xchg
cwtl
stos
mov
mov
out
sub
jno
push
push
std
lahf
cmp
xchg
int
fwait
push
mov
insl
loope
push
icebp
std
stc
loope
icebp
xor
movsl
mov
shlb
mov
mov
jmp
jmp
dec
sub
ret
pusha
jmp
add
pop
fwait
decb
js
gs
mov
push
outsb
and
xor
sti
pushf
mov
mov
add
inc
shl
xchg
ljmp
sbb
push
gs
cmp
sti
cltd
nop
sub
cli
loopne
frstor
ret
mov
enter
cmp
es
mov
shl
popf
jbe
sbb
lock
push
mov
into
xor
icebp
xor
rcrl
jl
mov
out
cmpsl
std
pop
fs
mov
loopne
xlat
sub
adc
pushf
pop
in
bound
lods
push
fdivl
sub
xor
pop
psubb
scas
ss
dec
lea
pandn
dec
xor
xor
addl
das
dec
ljmp
test
mov
inc
mov
test
aaa
lret
loope
push
test
aam
cmp
scas
push
aaa
lods
push
fsubrl
pop
clc
jnp
in
aaa
cmpsb
movsb
pop
rclb
jp
xlat
aam
out
pop
cmp
shrb
lret
outsl
xchg
adc
or
mov
or
mov
popf
sub
sub
mov
pop
or
adc
cltd
aaa
bound
adc
mov
xor
fs
xor
cmp
or
xor
incb
adc
xchg
dec
push
mov
jne
ret
cmp
mov
sbb
out
add
push
mov
xchg
add
sti
cmp
sahf
xchg
lret
pop
or
adc
fldt
add
xchg
or
lcall
jb
cmp
enter
lcall
ds
leave
xor
ss
adc
push
mov
sbb
orb
aas
dec
loopne
jns
mov
adc
inc
clc
lock
lcall
jmp
push
mulb
mov
sbb
add
pop
aas
push
jg
inc
out
addb
test
jg
inc
jecxz
roll
sbb
push
and
mov
rcrl
sub
lock
in
mov
movsl
hlt
jo,pn
sub
inc
adc
jmp
xor
pushl
xor
and
jecxz
push
out
mov
outsl
fdivs
lods
fptan
pop
dec
mov
sbbb
repnz
xchg
cltd
push
movb
add
pop
push
rorb
loop
loopne
lea
sub
or
data16
sub
int
add
pop
dec
push
or
mov
pusha
add
out
shrb
jns
add
mov
outsb
loopne
mov
cltd
and
lret
leave
ljmp
add
sbb
xor
mov
sub
pop
ret
inc
sub
aam
and
popf
test
xchg
pop
jb
push
mov
out
testl
sub
ljmp
jnp
out
adc
aas
data16
les
test
jp
jns
fwait
cmp
pop
pushf
push
into
insb
jecxz
pop
xchg
jo
adc
cmp
insl
ljmp
pop
jae
pop
stc
sub
int3
xchg
push
scas
mov
or
mov
push
into
inc
mov
sbb
dec
mov
mov
scas
rcrl
cmpsl
xchg
js
repz
jne
pop
dec
and
mov
cld
cmp
xor
fwait
bound
mov
dec
mov
popa
sti
test
loop
xor
mov
scas
jb
push
inc
les
hlt
sbbb
mov
icebp
mov
jecxz
bound
jl
inc
or
or
add
shrb
adc
lret
in
inc
icebp
shl
in
pop
mov
mov
pop
lcall
dec
adc
test
jbe
out
push
aas
dec
sarb
cmpb
sub
mov
scas
ret
inc
push
filds
cmp
repz
in
pop
mov
lret
mov
push
insl
ja
jecxz
pop
push
incb
in
je
mov
and
xchg
lods
add
mov
push
lods
adc
and
gs
jb
or
fldl
push
sub
mov
lock
pop
bound
cmp
or
jecxz
test
mov
dec
hlt
adc
das
insl
xchg
mov
loope
mov
or
ret
add
sbb
call
fadds
lret
xchg
xchg
mov
cmp
pop
js
loope
or
or
test
xchg
mov
mov
cmpl
mov
mov
cli
or
stos
sahf
jno
sahf
mov
mov
pop
es
aas
pop
jmp
hlt
cmp
aam
fwait
sub
dec
clc
gs
and
cmp
fs
add
cmp
andb
stc
popa
and
loope
add
sub
cmp
clc
insb
mov
outsb
or
imul
fidivs
gs
fstl
cmp
arpl
cmc
xchg
push
jo
and
out
loopne
lods
out
scas
jge
dec
xchg
repnz
pop
dec
inc
in
jne
cmpsb
pop
enter
sahf
pushf
call
mov
xchg
mov
fs
sub
pop
daa
call
dec
arpl
dec
pop
or
xor
mov
add
mov
jp
mov
cmpsl
mov
inc
int3
in
jnp
lea
cmc
cmp
lods
rolb
outsl
xchg
inc
xor
push
shlb
stc
or
mov
insb
mov
outsb
fisttpl
arpl
int
lea
ret
sbb
or
aas
add
loope
test
sub
inc
sub
hlt
inc
adc
outsb
popl
sbb
data16
fimull
lcall
popf
push
rorl
mov
inc
and
jns
fists
add
sbb
xchg
push
stos
femms
mov
cmc
shlb
mov
dec
add
add
pusha
mov
jmp
push
xchg
xor
dec
fidivs
mov
push
or
leave
push
add
xor
outsb
add
lock
out
shll
test
push
fcomip
gs
lea
sbb
imul
inc
dec
sub
fdivs
cmp
dec
sar
notl
dec
loopne
xchg
loope
in
aas
xor
mov
fstpl
stc
pop
inc
clc
mov
in
adc
int
inc
aam
and
xchg
xchg
iret
std
mov
sub
xorb
sub
dec
cmp
lcall
scas
fwait
and
ss
movsb
mov
ret
notb
lods
sub
repnz
iret
push
shrb
inc
xchg
push
lcall
push
sub
sub
cmp
pop
mov
dec
add
push
aaa
jne
jp
inc
pop
sahf
pushf
fstl
jbe
les
je
cld
xchg
jno
lock
cmp
push
jb
jns
jg
pop
enter
mov
cld
mov
cltd
pop
inc
fwait
adc
push
mov
das
mov
into
cmp
movsb
aaa
dec
movsl
enter
adc
mov
dec
mov
subl
or
add
in
cmp
xor
rcrl
cmp
sahf
lret
rcrb
call
cld
movsb
rcll
push
insl
out
call
sbb
or
leave
mov
inc
or
and
imul
push
sbb
mov
test
push
nop
lea
jle
lds
ret
push
lret
xor
cli
push
mov
cmp
cmp
sbb
dec
fisubs
sbb
out
test
add
ret
repz
or
mov
call
inc
mov
fldl
lea
and
div
xchg
add
mov
std
sub
scas
nop
or
fdivrl
bound
pop
repnz
pop
fs
jmp
repz
cmp
add
mov
xchg
clc
dec
popa
inc
mov
popa
xor
cs
in
inc
scas
mov
or
mov
shlb
std
cmp
mov
jecxz
ror
cld
push
jge
push
popa
jmp
arpl
xchg
dec
cmp
mov
lret
pop
mov
pop
aam
shlb
mov
cmp
cmp
inc
add
insl
cs
imul
insb
cltd
mov
xchg
push
inc
mov
push
loopne
jl
in
es
jp
das
out
lret
fsubr
adc
jl
push
shl
inc
lods
or
lret
ret
rclb
fs
ret
js
inc
push
aam
add
ror
mov
aam
insl
mov
nop
inc
fiadds
pop
out
lahf
xchg
push
mov
push
xchg
fiadds
in
sub
xchg
scas
aad
mov
mov
push
out
lods
mov
stc
add
or
imulb
pop
aas
ret
push
inc
stos
test
lret
es
icebp
add
inc
sbb
mov
sahf
cmp
jno
lock
outsb
js
js
xchg
hlt
push
scas
das
stos
lods
inc
adc
hlt
popa
cli
shrb
lea
dec
adc
mov
sbb
popf
dec
or
jecxz
jmp
lds
push
fldl
sahf
and
incb
jb
in
mov
cld
mov
je
int
insl
fwait
mov
mov
mov
bound
jmp
or
mov
add
pop
mov
cltd
sbb
mov
cli
and
add
sbb
inc
stos
dec
daa
sub
int
adc
push
insb
out
sahf
xchg
pop
dec
xorb
xor
and
loopne
pminsw
inc
fsubl
cld
ja
push
add
pop
xor
pushf
sbb
xchg
sbb
cli
jecxz
int3
mov
lcall
rorl
jge
mov
fcoms
mov
je
cli
xor
shlb
xchg
and
sub
push
pop
ror
push
filds
into
mov
xchg
insl
hlt
add
lds
mov
mov
mov
cmp
sub
cmp
andl
adc
and
push
dec
das
or
mov
test
daa
scas
hlt
pop
mov
fmuls
mov
dec
jp
dec
scas
std
pop
jmp
pop
inc
es
xor
inc
adc
mov
cli
jae
mov
jp
into
scas
push
ret
aad
dec
add
xor
aaa
lcall
inc
not
xchg
rcrl
fisubrs
ss
fs
stc
sbb
out
lock
adc
inc
out
mov
cmc
es
or
in
popf
leave
iret
or
jo
mov
outsb
fldcw
stos
add
mov
and
es
aam
pop
test
iret
loopne
cmp
push
sbb
lcall
mov
lahf
xchg
mov
sahf
mov
and
and
lcall
pushl
js
addr16
mov
scas
out
or
or
cs
roll
jmp
pop
outsl
inc
in
inc
or
pop
int3
les
or
sub
mov
int
adc
jns
loope
xor
test
bound
lea
loopne
mov
pop
xchg
adc
mov
addr16
mov
rcrl
dec
lds
imul
xor
push
rcr
shll
lods
push
push
fadds
lahf
call
call
fdivrs
int
cmc
mov
scas
outsb
repnz
add
fdivl
add
loope
scas
imull
dec
dec
mov
xor
lods
jl
mov
and
nop
into
lahf
icebp
sub
leave
aas
xor
imul
mov
aam
shrb
dec
xor
stos
les
add
adc
in
jge
xchg
mov
mov
sub
in
pop
push
cmp
lcall
pop
cmp
mov
xor
mov
std
popf
in
int
aas
xlat
mov
mov
xor
out
jnp
arpl
inc
cmp
dec
adc
sub
jo
and
mov
icebp
shll
popf
mov
inc
ror
repz
adc
xchg
fldl
in
popf
adc
test
hlt
or
ret
inc
addr16
sbb
fwait
cmp
aas
ret
mov
scas
in
jno
sbb
testl
and
dec
rcll
repnz
testb
xchg
jmp
push
cmp
loopne
push
pop
mov
jle
sbb
add
xor
mov
xchg
lods
mov
inc
pop
aaa
xchg
sub
roll
jge
int3
cld
pop
dec
loopne
ret
aam
clc
cmc
outsb
pop
gs
in
xchg
jl
xor
mov
gs
aaa
mov
adcb
mov
add
shr
cltd
lock
jl
mov
inc
xor
push
push
rol
outsb
sub
sbbb
sbb
push
clc
add
shll
int3
and
arpl
test
xchg
loop
push
call
insb
setge
mov
adc
dec
call
bound
or
inc
mov
pop
xor
cmp
mov
xor
add
clc
es
dec
aas
xorl
xchg
push
mov
rorb
in
icebp
add
mull
ljmp
xchg
pop
add
in
pop
xchg
sti
mov
in
xor
mov
pop
dec
es
dec
pop
or
pshufw
and
jns
cltd
jo
imul
pop
adc
add
pusha
add
pushf
mov
add
clc
in
cld
push
repz
dec
jne
fistpll
mov
insb
imull
jne
xor
roll
jge
adc
pop
inc
lds
sbb
inc
or
push
cmp
sub
mov
cmp
jmp
dec
mov
cmp
addb
lods
push
mov
icebp
loop
inc
shl
mov
lret
pop
push
repnz
pop
lock
pop
loop
jl
inc
and
pushf
sahf
cltd
jbe
mov
adc
mov
lock
arpl
test
sub
outsb
lods
fwait
jb
jp
xchg
mov
xchg
xor
push
sti
decb
cmp
lea
rcr
sbb
sbb
sub
les
mov
lds
les
inc
lock
jae
xor
out
or
push
stos
jo
outsb
inc
in
gs
jge
cmp
and
ret
stos
rolb
xor
cmpsl
loop
lods
or
add
imul
ljmp
ss
rcll
xchg
xchg
lods
add
dec
xchg
or
aas
gs
inc
lea
add
inc
int
push
jp
and
and
add
mov
mov
in
and
add
cwtl
jne
sbb
xor
mov
jnp
mov
cmp
push
imul
inc
sub
in
mov
decl
sahf
sbb
jae
inc
movsl
and
loop
and
xor
cltd
xor
je
ljmp
mov
inc
lcall
les
int
jle
mov
gs
daa
pop
mov
fists
addr16
adc
testb
movsl
adc
add
lret
mov
jne
jecxz
and
fidivs
xchg
add
cwtl
adc
fimull
sarl
shll
dec
dec
xchg
xchg
add
inc
xor
in
ss
mov
sbb
sbb
mov
jnp
test
out
mov
pop
stos
xchg
scas
jo
and
adcl
out
cmpl
out
cmp
out
or
xor
scas
scas
or
push
jno
stc
add
aaa
inc
lds
cmp
fld
push
xchg
lcall
sbb
add
mov
dec
xor
cs
sub
test
sub
std
mov
sahf
adc
jno
clc
xor
inc
incb
bound
sar
rolb
in
cmc
cltd
xchg
das
xchg
or
cs
neg
mov
stc
sbb
mov
int3
push
push
cmp
js
and
mov
mov
mov
leave
inc
pop
dec
cs
movsb
out
or
cmp
loopne
pop
jb
push
stc
out
subb
jl
nop
dec
fwait
div
xchg
nop
jle
divl
hlt
int
push
push
sub
rcrb
in
es
xchg
mov
jg
shll
pushf
or
fldt
pop
inc
bound
pmaxsw
xchg
xchg
mov
push
pop
movsb
push
ret
cwtl
add
out
dec
aad
fnstsw
mov
pop
add
cmc
add
lahf
push
add
adc
or
sbbl
popf
out
stc
shrb
jno
push
pop
xchg
mov
movsl
pop
cmp
call
sbb
aad
movsb
sahf
or
xlat
in
jecxz
add
jmp
push
xchg
out
insl
out
in
pusha
jp
sbb
fldcw
xor
push
test
mov
push
das
dec
out
pop
cmp
daa
xor
mov
cmpsb
test
nop
pop
lods
daa
or
popa
mov
mov
add
clc
cmpb
xor
getsec
lock
xchg
dec
popl
outsl
and
scas
and
xchg
push
sub
and
stos
mov
xchg
jbe
cmp
inc
cmpsb
mov
mov
imul
mov
jge
call
lahf
cld
leave
mov
vsqrtps
ss
in
and
jns
notb
dec
orl
lcall
shll
fwait
pop
testb
rorb
xor
int3
mov
out
pop
mov
inc
das
lret
leave
bound
test
imul
incl
aad
loop
and
orb
mov
push
pop
daa
sub
jbe
fldcw
mov
mov
lock
jle
push
adc
int3
in
pop
inc
in
cltd
nop
adc
pop
lds
nop
test
push
and
movsb
mov
int3
xchg
xchg
sbb
and
ret
sub
pop
dec
adc
shrl
sub
fcmovnb
sub
lahf
pop
in
bound
lahf
cmp
aad
int
adc
mov
pusha
pop
mov
neg
sub
adc
jmp
sarl
ret
cmp
xor
adc
sub
cli
and
repnz
xchg
int
pop
arpl
inc
daa
adc
mov
mov
xor
data16
into
popa
jb
std
popf
movsl
jecxz
lea
outsl
rcll
inc
push
mov
pop
sbb
mov
cmpsl
pop
rorl
add
shr
cmpsb
add
in
cmp
add
sbb
inc
mov
adc
pop
arpl
push
jb
test
mov
hlt
lret
push
inc
mov
dec
mov
int3
popf
sub
cmpsl
dec
cmp
mov
add
loope
xor
shll
push
mov
fmull
mov
pop
outsl
mov
and
and
in
lahf
repz
mov
xchg
sub
sti
mov
sbb
sbb
aam
cmp
sahf
in
imul
sub
out
je
mov
and
inc
imul
sbb
test
outsb
jmp
or
jno
in
inc
jp
popf
fmuls
imul
mov
movsl
fildll
pop
mov
sbb
push
cli
inc
out
test
addr16
in
decl
iret
fnstcw
shll
pop
sbb
mov
dec
mov
data16
mov
andb
mov
push
cmpsb
jnp
loopne
and
add
jmp
out
popf
stos
test
insb
imul
pop
addr16
inc
sbb
andb
cld
dec
cs
repnz
mov
js
xchg
arpl
rclb
and
aas
cltd
incl
and
mov
mov
call
push
cmp
cld
out
mov
subl
idivb
ja
add
xchg
push
ret
pusha
jne
pop
or
inc
jmp
mov
repnz
call
jl
pop
jo
adc
scas
push
mov
bound
sub
mov
dec
cmp
in
fistps
or
imul
xchg
int
sbb
xchg
dec
xor
enter
mov
sbb
outsb
mov
dec
add
jno
push
int3
ret
jp
push
in
sub
add
jno
inc
sbb
inc
cmp
mov
mov
test
pop
xchg
aad
adc
icebp
jmp
test
pop
fidivl
fdivs
inc
enter
xchg
inc
shll
xchg
je
dec
push
lods
jb
repnz
ficompl
imul
push
adc
or
movsb
repnz
out
loope
xor
push
arpl
cmpsb
ret
xchg
mov
xor
lock
push
popl
test
iret
lods
or
push
ret
gs
dec
mov
jbe
into
xor
mov
jmp
cmp
mov
je
mov
rolb
arpl
das
cs
or
adc
add
add
lret
out
push
or
mov
in
mov
lock
ljmp
rep
sahf
aas
and
cmp
or
mov
adc
inc
pop
mov
xchg
or
call
std
je
repz
pop
into
mov
mov
jge
loopne
jge
mov
loop
xor
cld
xlat
jb
aas
jmp
push
cmc
adcl
xchg
pop
scas
or
mov
mov
jne
mov
cwtl
shrl
xchg
push
mov
cltd
repnz
fcompl
cmp
dec
lods
push
fstl
xorl
mov
or
gs
or
adc
popa
or
push
les
xlat
jle
aad
pop
inc
sub
repz
mov
dec
sbb
adcb
lea
pop
mov
sahf
fcoml
into
push
xchg
pop
adc
ss
xrelease
ss
xor
jg
sub
movsb
imul
nop
loopne
shrl
adc
mov
cmp
lcall
adc
addr16
adcl
out
jecxz
mov
outsb
cmpsl
push
das
lahf
or
imul
push
and
mov
dec
inc
add
test
flds
fdivs
js
test
jno
sub
mov
xchg
or
daa
or
dec
inc
pop
scas
test
lea
or
or
mov
test
mov
sub
inc
mov
mov
dec
mov
stc
lods
stos
or
and
mov
outsl
ja
mov
adc
mov
mov
pop
in
pop
repz
mov
test
cli
mov
call
jns
hlt
mov
or
xor
cmp
ljmp
mov
addb
jb
inc
dec
push
xchg
xchg
aas
call
aad
test
jo
jae
xor
dec
addr16
pop
arpl
xor
aad
test
daa
xchg
aaa
sub
jnp
sub
lods
leave
xor
pop
xchg
sub
dec
mov
ss
gs
sbbb
mov
int3
xchg
push
jnp
mov
into
out
push
insb
aam
dec
push
xchg
cmp
fwait
cltd
in
cmp
cmpb
scas
out
pop
cmp
pushf
push
ds
mov
or
shlb
cmc
fdiv
stos
ds
and
roll
add
xor
incl
pop
stos
inc
pop
std
stos
push
cli
lcall
dec
popf
es
movsl
xor
pop
aad
inc
leave
loop
imul
out
mov
cltd
nop
addr16
enter
aaa
bnd
aaa
pop
lock
ds
and
cmp
cmc
and
xchg
out
xchg
cs
push
adc
loope
add
fcom
mov
hlt
xor
push
jo
jno
mov
cmp
and
movsb
xor
packsswb
enter
popa
test
int
pop
insl
cmp
bound
jmp
dec
cmp
or
pop
cld
ja
sub
ljmp
out
movsb
mov
sub
pop
rclb
cmp
insl
mov
lret
mov
adc
mov
xor
mov
cwtl
mov
xchg
jmp
repnz
xchg
or
setbe
hlt
jae
dec
stc
push
and
in
lea
jge
in
adc
xchg
das
popf
mov
and
mov
mov
pushf
sti
mov
xchg
lods
scas
imul
scas
lahf
mov
mov
sub
imul
dec
shl
fdiv
daa
call
add
scas
call
cmp
shlb
hlt
popf
sbb
adc
xor
pop
lret
cld
jne
fisubrl
ja
pop
pop
sub
cs
stos
ljmp
fldenv
sti
pop
adc
jnp
xchg
js
lahf
xor
rclb
sbb
or
orl
and
or
scas
mov
mov
mov
dec
mov
adc
shrl
iret
mov
xor
lds
sub
mov
lea
cld
dec
imul
cld
addl
inc
shrl
insb
scas
popf
pop
xchg
push
pusha
jecxz
rolb
fcomi
pusha
imul
pop
addr16
outsl
loopne
fldl
das
push
loope
push
into
lods
lret
dec
repnz
push
es
js
mov
out
xor
leave
aas
push
dec
mov
outsb
xchg
test
cmp
pop
cmp
pop
cmpsl
int3
and
xchg
inc
sbb
dec
mov
and
cwtl
sbb
int3
dec
subb
leave
jge
int
jbe
or
ljmp
lret
mov
or
xchg
insl
mov
sbb
mov
lods
stc
aas
fldl
fbld
loopne
mul
outsb
aam
testb
dec
push
xchg
or
mov
mov
cmp
mov
insl
xchg
add
or
jae
cmovns
lcall
sbb
mov
add
les
test
jb
outsl
daa
cld
dec
mov
cmp
and
xchg
imul
dec
push
dec
mov
xchg
push
sarb
imul
aaa
push
pop
jmp
mov
ljmp
testl
pop
lds
sbb
cli
mov
pushf
push
mov
push
cmp
test
test
lret
adc
popa
adc
mov
dec
xchg
test
inc
xchg
fldpi
or
lds
js
and
adc
scas
add
pop
into
inc
inc
dec
cmp
or
repnz
dec
test
and
stos
out
cltd
scas
mov
add
pop
ja
mov
test
mov
jbe
fsts
fadds
fwait
adc
mov
xor
push
inc
fst
andb
push
adc
int
pop
int
sti
mov
pop
mov
pop
push
sub
mov
mov
lcall
sbb
inc
fwait
roll
sbb
cmp
fcomps
pusha
mov
insl
sub
mov
add
pop
fldt
mov
pop
mov
clc
mov
push
cmp
and
adc
sub
dec
xor
lcall
mov
repz
inc
lock
icebp
inc
imul
out
inc
iret
mov
pushf
sar
mov
pusha
xor
sbbb
scas
in
shll
imul
or
mov
xchg
ds
lret
lcall
cltd
bound
mov
push
shr
out
insb
out
inc
jl
stos
add
sbb
adc
push
imul
jnp
mov
clc
xor
and
sbbb
setg
pushf
sbb
inc
and
mov
sub
loop
or
jns
xchg
xchg
or
das
mov
fisttps
sahf
imul
repz
fdivrl
loope
mov
jmp
into
pop
adc
pop
and
push
into
xor
xor
minps
dec
xor
jp
sahf
jns
xchg
or
push
int3
repnz
test
inc
cmp
mov
rep
jo
sub
mov
pop
dec
xor
or
lcall
mov
fidivrl
push
pop
lock
sub
dec
pop
fsubr
push
fcomps
mov
add
scas
rorl
sbb
hlt
xor
add
jmp
scas
pushf
and
add
test
adc
das
pop
jp
das
pop
jp
and
pushf
pop
jne
or
jmp
lcall
shl
cmpl
out
mov
mov
lahf
mov
mov
mov
add
push
ss
cmp
cmc
sub
fstpt
xchg
adcb
shll
pop
imulb
or
repz
addb
dec
sti
pop
mov
out
mov
inc
leave
fidivs
ror
cli
leave
movsl
sub
imul
inc
mov
xor
push
pusha
mov
mov
and
push
push
dec
aas
loope
ret
mov
mov
rcrl
xchg
xor
pop
test
rcll
or
fcmove
dec
arpl
mov
xchg
jmp
daa
jmp
mov
xchg
or
pop
cmp
daa
cli
xchg
icebp
inc
jo
cli
in
mov
pop
mov
dec
cli
xor
mov
mov
mov
push
mov
pop
inc
test
cmpl
andl
xchg
add
push
cmc
inc
mov
dec
cld
stos
cmpsl
push
mov
lcall
sub
mov
xorl
cmp
sarb
fwait
mov
mov
pushf
push
pop
les
lret
xchg
iret
in
les
mov
pop
scas
pushf
sbb
jns,pt
enter
mov
enter
jo
ret
push
loopne
jbe
jecxz
mov
mov
adc
xor
xchg
mov
inc
out
scas
fcompl
mov
imul
or
cld
push
fidivrl
cs
and
push
es
sbb
popf
psraw
jl
cmp
mov
ret
leave
mov
xchg
cmc
dec
out
pop
or
dec
pop
loop
call
mov
sub
and
subl
mov
inc
loopne
pusha
cmpsb
movsb
or
clc
jo
xor
arpl
cmc
mov
mov
adc
repz
sbb
xchg
pusha
pop
repz
in
rclb
and
dec
scas
int
lret
lds
or
mov
mov
decl
sub
or
jp
dec
ja
into
mov
popf
and
lods
enter
mov
jb
pop
jo
cli
push
jg
push
cmc
push
xor
mul
fsubrs
ror
pop
repz
jbe
test
xchg
push
pop
shll
loop,pt
jne
out
pop
lret
test
adcb
push
push
daa
cmp
sub
scas
lahf
jecxz
clc
fisubs
int3
mov
add
pop
adc
mov
adc
sbbl
xchg
pop
add
andb
scas
and
pushf
lods
sub
sar
jmp
mov
test
inc
out
pop
jae
out
inc
or
notl
inc
out
sub
lds
push
ret
pushf
arpl
pop
push
incb
fmuls
inc
and
push
jo
pop
dec
pop
push
jno,pt
pop
sbb
mov
push
enter
inc
cmc
pop
sub
jp
cltd
jge
ljmp
add
fnstenv
adc
ss
stos
sbb
mov
mov
or
sbb
mov
mov
aam
or
jmp
cmp
sub
popf
cmp
addr16
test
jp
add
cmp
inc
mov
int
mov
pop
pop
cmp
lahf
imul
and
movb
scas
jp
fmuls
out
icebp
jno
jbe
scas
xlat
adc
shlb
inc
movsb
sbb
adcb
adc
fnstcw
jae
les
leave
sub
and
jecxz
addr16
sbb
xor
stc
lret
lods
js
sub
dec
jbe
std
mov
mov
mov
mov
inc
jne
or
sbb
mov
into
jmp
outsw
sub
aad
mov
mov
push
clc
loop
lods
inc
adc
pop
jbe
jl
mov
adc
cmp
push
loop
push
inc
xchg
roll
popf
mov
cmp
lods
jb
xor
lods
in
adc
test
xor
dec
insb
mov
lods
mov
lock
sbb
pop
out
test
jns
cmp
mov
pop
out
inc
push
cld
jmp
scas
cwtl
inc
rcll
mov
jo
xor
test
push
sub
clc
ss
xchg
in
pop
imul
push
xor
ja
pop
and
lcall
dec
fistpl
mov
into
add
lods
sbb
lods
out
pushf
add
cltd
popa
leave
ss
fadds
sub
xchg
mov
push
shr
insb
add
sub
jno
sbb
imul
aas
test
mov
cmp
movsl
add
fstps
mov
fadd
ljmp
insb
lods
adc
cmp
pop
xchg
fs
jmp
rolb
xor
adc
mov
repz
jae
lcall
cmc
cmpsb
push
sbb
ds
and
test
pop
jo
aaa
insl
mov
sbb
dec
hlt
ret
ljmp
loop
mov
je
mov
sub
mov
shl
stos
ret
scas
enter
xchg
sub
lcall
lods
jge
lret
dec
loope
hlt
xlat
cmpsl
or
xchg
cmpsb
mul
adcb
push
cmp
call
loopne
addb
push
push
add
test
std
jmp
insb
xchg
xchg
aad
loope
xchg
cs
adc
lret
and
je
ljmp
sub
and
jnp
cmp
dec
fmul
and
push
lea
repz
lahf
add
add
pop
test
pop
jmp
loop
sbb
push
push
xchg
push
rol
cmp
xlat
mov
pusha
movsb
or
out
push
fdivrs
aam
xor
mov
mov
inc
mov
mov
sahf
xor
scas
add
mov
or
dec
dec
fisttpl
push
push
adc
aas
jnp
and
cld
jg
push
movsb
fdivrs
arpl
jmp
pop
les
and
push
out
fcompl
xlat
cltd
gs
mov
adc
jno
stos
mov
mov
jnp
mov
stc
adc
out
push
cmp
loopne
add
dec
movsb
mov
pop
mov
fstps
xor
inc
mov
ds
in
jne
adc
cmp
ja
mov
adc
cld
push
or
add
xchg
pusha
jp
jg
xlat
dec
mov
mov
xchg
mov
in
dec
repz
cmp
out
sbb
lea
sbb
clc
mov
mov
cltd
test
jne
es
pop
cmp
jmp
cmp
jae
das
push
ds
pop
imul
fwait
mov
ret
xlat
insl
mov
stos
push
int
rcl
sbb
push
sbbl
je
sbb
stos
arpl
cmp
sub
repnz
xor
out
adc
idivb
mov
cmp
push
lock
sbb
orl
push
pop
in
je
bound
aam
sub
mov
pushf
fisubs
popf
sbb
inc
push
dec
dec
fsubrs
xor
add
pop
mov
scas
pop
xor
ja
mov
cmp
call
test
dec
sbb
ss
test
push
int3
xchg
fsubrl
adc
cltd
mov
mov
insb
xor
pop
sbb
adc
stc
lahf
insb
daa
jp
mov
icebp
arpl
xchg
js
sub
pop
loope
push
fs
push
adc
lods
jne
loope
ds
push
mov
push
cmp
xchg
sub
push
or
or
sbb
mov
add
adc
mov
mov
xor
out
sbb
jge
or
mov
push
xor
repz
jns
mov
fldt
cltd
movsl
push
mov
mov
enter
adc
leave
inc
lahf
adc
xor
les
xchg
outsb
cmp
xchg
mov
pop
sub
and
dec
sub
bound
lret
mov
mov
dec
ja
fiadds
xchg
leave
sti
in
mov
mov
ljmp
sbb
mov
dec
xor
imul
movsb
ficompl
mov
mov
loop
aam
push
push
leave
inc
push
jnp
xchg
or
sbb
fnstenv
push
xorb
dec
xor
in
mov
into
pop
out
cmp
repnz
mov
leave
fcom
xchg
outsb
sbb
arpl
and
push
sbb
add
xchg
push
sub
out
push
push
rorb
mov
inc
push
subl
ja
mov
loope
jmp
mov
out
test
mov
jl
pushf
and
leave
mov
mov
sub
repz
and
mov
lods
mov
scas
push
andl
insl
add
testb
shrb
daa
ss
mov
popf
sub
adc
xor
movsl
out
test
dec
pusha
repnz
rcll
rorb
popf
push
jle
stos
in
mov
add
loopne
jnp
into
jmp
mov
mov
inc
loopne
jns
movsb
jp
sub
hlt
movsl
or
lock
jle
xchg
adc
inc
jbe
mov
xchg
pextrw
dec
inc
add
pop
jne
enter
pop
cmpb
iret
jge
pop
inc
sti
ficoml
jo
ds
enter
and
add
xchg
sbb
out
push
cmpsb
das
ds
lock
loope
push
jg
jp
mov
pop
inc
jae
cmp
xchg
dec
cmc
and
out
aad
fistl
inc
xlat
pop
sbb
faddl
cmp
xor
movsl
scas
test
push
lods
out
sub
sub
mov
and
jne
adc
sbb
fists
pushf
sahf
rclb
sbb
jge
scas
icebp
in
sub
hlt
leave
pop
or
loope
notb
push
push
mov
mov
add
mov
dec
decb
pop
sub
arpl
adc
and
cmc
subl
out
add
mov
and
test
mov
dec
or
dec
fistpl
imul
into
rsqrtps
cmc
add
out
adc
fucomip
push
movaps
es
add
cmp
xchg
aaa
and
ljmp
mov
lret
rdtsc
mov
cli
add
pop
xchg
add
mov
cmp
inc
ret
pop
mov
add
lods
sar
and
jl
cmpsb
sbb
push
lahf
int3
ficompl
mov
or
sub
pop
cmp
and
or
cld
dec
xor
pop
cmp
mov
or
xor
jl
inc
pop
jle
sub
in
pusha
add
insl
dec
adc
andb
push
dec
das
ret
mov
xor
pop
cwtl
ss
ret
mov
shrb
pop
sarb
sub
or
sbb
aas
jno
ljmp
adc
dec
int
xor
fwait
ds
sarl
ja
mov
push
push
sbb
add
int
cld
adc
inc
mov
xlat
jb
imull
pop
push
enter
aam
sahf
ret
jae
test
xchg
xadd
and
mov
sub
dec
loopne
aam
leave
xchg
or
aam
fcoml
dec
hlt
jecxz
dec
fimull
add
test
xor
lret
shr
mov
adc
dec
rorb
ja
ds
loope
fimuls
sub
icebp
outsb
aad
test
lea
mov
out
out
rorb
shl
out
out
dec
xor
lcall
sub
faddl
cmpsb
cmp
andl
pop
loope
ja
add
call
loopne
add
lea
cwtl
and
out
icebp
mov
jmp
sarl
int
fnstenv
fs
lret
inc
shll
cld
add
or
dec
mov
in
clc
cmc
lcall
pop
mov
or
ret
ss
pop
and
push
mov
mov
mov
ret
mov
xchg
insb
adc
fs
sbb
std
xlat
push
pop
arpl
xor
or
inc
jns
add
out
or
push
dec
mov
mov
push
or
jne
out
jmp
add
add
repz
into
lock
dec
pop
pop
xor
cmp
pop
pop
dec
push
les
addb
rcl
std
loopne
or
stos
push
fdiv
loop
mov
add
xchg
or
out
xchg
ds
les
adc
add
push
pop
inc
mov
xchg
adc
push
subl
scas
das
adc
ds
mov
pusha
pop
ret
and
xchg
and
pop
cmpsl
orb
shl
and
ds
dec
ficomps
insb
mov
mov
mov
push
addr16
sbb
cmp
and
mov
roll
mov
add
and
loopne
dec
add
popa
test
and
jle
xchg
stos
aas
repnz
xchg
imul
mov
hlt
test
sti
adc
les
int
stos
inc
mov
push
and
push
ret
adc
push
push
ret
aad
pop
mov
or
lret
inc
in
inc
mov
dec
lods
addl
repnz
adc
add
push
ss
push
jbe
lret
cmp
sub
cmp
push
inc
add
not
das
popa
add
mov
or
je
dec
mov
pop
inc
in
xor
cltd
popa
les
xor
rorl
int3
bnd
push
inc
dec
outsl
mov
sub
mov
jnp
adc
mov
xor
or
sbb
xor
mov
pop
movsb
dec
mov
xor
into
add
mov
lds
add
push
or
cs
int3
xchg
and
and
or
fwait
aad
std
sub
mov
mov
hlt
mov
push
sbb
dec
fistl
push
gs
mov
pop
je
jns
or
mov
xchg
cmp
jns
mov
inc
js
jno
xchg
mov
stc
aaa
cmp
call
shrb
addr16
push
pop
addr16
sti
pop
cmc
adc
xchg
popf
sub
inc
scas
lcall
xchg
hlt
dec
dec
mov
loop
rcr
xchg
arpl
icebp
push
adc
xlat
std
add
cld
cs
subb
push
out
lock
mov
repz
adc
mov
lds
mov
xor
mov
leave
jmp
shll
sbb
data16
jae
mov
push
xor
push
dec
mov
aaa
jae
lret
lds
lea
pop
aad
or
push
nop
jb
pop
insl
sub
testb
cltd
mul
jl
ret
popa
adc
inc
jo
scas
cmpsb
push
dec
fsts
push
mov
and
cmpl
lcall
sbb
ret
sub
inc
dec
fcoms
ret
cmp
add
push
into
cmp
push
xorb
sub
insl
cs
lret
sub
push
test
pop
fmull
fidivrl
ljmp
sbb
lea
cmpsl
mov
data16
pop
cwtl
mov
cmp
leave
pop
xor
sahf
stc
or
push
xor
and
mov
fldl
sahf
xchg
inc
aaa
pop
mull
cmp
mov
cmp
repnz
sbb
fisttps
test
popf
int
mov
sub
or
adcl
pusha
xor
fs
addb
std
cmpsl
sti
cmp
add
adc
rclb
xchg
lea
mov
movsl
cmpsb
shll
fucompp
mov
xor
inc
sbb
jnp
pop
mov
stos
push
shrl
push
gs
jl
nop
or
cmp
push
call
cmp
ffree
cmpsl
aas
add
inc
or
stos
cltd
cwtl
jle
adc
andl
imul
add
or
stc
cmp
jnp
jb
stos
addr16
js
je
lahf
hlt
mov
jecxz
cmp
or
cwtl
push
andb
xchg
repz
mov
aam
or
sbb
dec
mov
ret
ja
mov
mov
xor
inc
sbb
test
fistpl
inc
andb
mov
mov
pop
and
and
sbb
jg
pop
pop
popf
test
pop
popa
or
cmp
or
dec
xchg
mov
mov
jns
inc
ret
xchg
dec
mov
jle
arpl
adc
cld
sub
aam
les
mov
sbb
push
arpl
add
mov
roll
pop
mov
cltd
out
je
mov
pop
push
sahf
xchg
inc
dec
cmpsb
jne
clc
pusha
and
sub
xchg
cwtl
popf
stc
push
add
sbb
push
orb
jmp
data16
outsl
fisubrl
mov
stos
pop
imul
lret
and
push
mov
dec
ljmp
insb
mov
push
test
mov
cmpsb
inc
outsb
aad
inc
pop
fwait
and
lods
lock
dec
bound
jle
int3
ret
add
test
or
iret
mov
jb
repnz
cmpsl
je
ja
xchg
cmp
mov
fcom
in
adc
jo
sub
mov
ljmp
aad
into
aam
in
or
xor
push
pusha
daa
mov
mov
sub
and
leave
popf
je
in
aaa
jle
or
or
icebp
lods
adc
bound
lock
sub
xor
push
cmp
adc
mull
dec
iret
inc
cmc
cmpsb
mov
mov
jae
sbb
inc
lahf
push
adc
shll
push
mov
gs
inc
xchg
shrb
mov
insl
enter
imul
lds
mov
adc
inc
mov
dec
xor
xchg
mov
ret
pushf
je
mov
cmc
inc
out
or
imul
sub
mov
arpl
and
and
int
das
cmp
std
pop
mov
mov
sub
sbb
push
cwtl
int
push
jnp
xlat
mov
cmc
mov
scas
jbe
scas
inc
push
mov
shrb
push
or
pop
shrb
popf
leave
jge
and
das
sbb
mov
mov
in
or
push
mov
test
cmp
lock
pop
pop
imul
enter
mov
mov
outsl
subl
shrl
mov
jns
stc
fcoml
test
pop
push
sti
aad
into
cli
insl
cmp
pop
imul
gs
and
cwtl
jns
lock
xchg
xor
out
lahf
test
or
sbb
ja
popa
repnz
xor
int
out
add
dec
lret
or
int
iret
lret
push
dec
in
push
into
push
inc
dec
pusha
mov
mov
pop
leave
xchg
loop
cmp
scas
jle
lret
and
cmp
push
sub
push
insb
lret
cmp
mov
sub
iret
jge
adc
xchg
mov
ud2
xchg
sbb
bound
pop
sbb
or
jl
aas
dec
fadds
in
jg
std
lret
into
lods
out
adc
hlt
jne
add
pop
rclb
in
sub
or
std
pop
into
aas
jb
cltd
push
xchg
popa
xchg
lret
fcoml
outsl
test
sub
aaa
sbb
clc
lods
lret
and
mov
rdpmc
sahf
jl
push
andb
xor
stos
ret
sti
sub
dec
cld
cmp
pop
subb
cmpsl
cmc
and
repnz
pop
sub
notb
and
xor
xor
sbb
test
lcall
cmp
adc
sub
cmpsl
outsl
push
jnp
add
pop
notb
shrl
rclb
add
cmp
xor
into
sub
rorl
mov
outsl
push
or
add
rcr
mov
or
insb
and
xorb
clc
jb
scas
pop
std
aaa
xchg
into
or
in
decl
andl
notl
sub
neg
aaa
clc
mov
cmpsl
mov
cs
sbb
mov
je
xor
mov
or
mov
test
inc
push
rorb
pop
add
inc
negb
jge
adc
sbb
push
rclb
adc
jns
roll
in
inc
cmp
push
adc
sub
lods
adcl
push
pushl
mov
das
push
or
xchg
sbb
and
pop
mov
sahf
fcoms
addb
xchg
sub
popf
xor
mov
mov
pop
inc
daa
adc
sub
iret
cmp
jmp
add
cmc
mov
xor
fbld
xchg
call
jnp
hlt
adc
mov
jne
or
adc
pop
faddp
fdivrp
fmul
xor
push
push
mov
or
or
jmp
cmp
add
jg
nop
xor
push
lds
xor
mov
cmp
sbbl
sub
mov
test
insb
in
mov
jbe
je
pop
addr16
fimuls
inc
jge
ret
mov
lret
scas
movzwl
inc
or
jecxz
and
push
cmp
cmp
sub
inc
call
loopne
test
push
test
jb
pop
add
dec
adc
adc
push
xchg
gs
stos
jbe
or
stos
mov
jg
sbb
cli
repnz
push
jns
je
out
push
xchg
push
fcoms
xchg
std
mov
sbb
gs
xchg
and
sti
cmp
and
ljmp
pusha
cli
or
mov
and
inc
call
jb
sub
rcr
mov
add
mov
lret
push
nop
mov
stos
enter
pusha
movsb
jecxz
out
mov
stos
popa
mov
jnp
clc
mov
mov
cld
ds
in
fadds
inc
mov
mov
enter
mov
popa
mov
outsl
int
stc
mov
cmpsb
sbb
loopne
imul
pop
pop
xor
add
mov
mov
lret
mov
or
jl
and
mov
loope
jae
sti
xchg
shrb
popf
int
icebp
pop
sbb
or
inc
jmp
frstor
jmp
lea
xor
add
pop
and
lcall
punpcklwd
icebp
mov
sub
fsubrs
cli
jmp
movsb
adc
test
in
xor
adc
loope
pop
rclb
mov
stc
mov
test
test
mov
mov
cmp
sbb
mov
pop
adc
fwait
lcall
adc
dec
pop
aam
std
fldt
fldpi
push
dec
das
inc
mov
mov
mov
fnstsw
pop
dec
in
in
mov
loope
or
aaa
jbe
rcll
leave
push
mov
stos
outsb
adc
mov
aad
pop
aad
jnp
jne
lret
out
inc
cmpsb
xor
dec
scas
mov
xchg
pop
mov
fistl
inc
les
roll
push
push
out
popa
aaa
xor
dec
inc
add
push
fwait
mov
jnp
je
scas
lea
pop
push
cs
adc
jae
ficompl
push
or
add
jno
ret
cmpsb
insb
mov
mov
sub
sbb
mov
cmp
mov
inc
push
cld
pop
dec
and
repnz
pop
sub
frstor
jbe
dec
xor
fdivs
xchg
add
pop
ss
sbbb
movsb
cmpsb
loope
shlb
dec
pop
lea
cmc
pop
mov
or
movsb
xor
dec
cli
adc
repnz
aaa
jle
aaa
test
pusha
arpl
pop
sbb
mov
lock
aam
jl
loopne
mov
hlt
or
jb
out
mov
ja
out
daa
imul
mov
or
lret
pusha
lds
fists
inc
cmpsb
rolb
mov
inc
jo
and
cmp
sbb
aam
or
fisubrs
xor
cmp
add
push
mov
add
sbb
sahf
push
mov
notb
mov
outsl
repnz
jp
lock
fdiv
hlt
nop
mov
and
fcoms
shrl
shlb
jecxz
mov
xchg
pop
in
inc
jecxz
sub
mov
rclb
push
push
jno
pop
adc
xchg
arpl
inc
std
sub
in
sarb
inc
or
js
mov
or
pop
push
mov
insb
fistpl
mov
xchg
push
cmc
in
add
and
mov
mov
mov
imul
xchg
sbb
icebp
leave
out
cs
cmp
xchg
dec
inc
push
rcl
and
xchg
pushf
mov
lahf
mov
xor
push
ds
sub
jns
push
push
mov
mov
adc
xchg
pop
sbb
mov
ficomps
out
xchg
addr16
mov
sbbl
adc
adc
jne
xor
and
push
jg
pushf
dec
mov
push
mov
sbb
lds
pop
sub
xor
repz
or
imul
xchg
inc
lret
and
push
ds
adc
push
mov
orb
fcmovnu
decb
dec
fidivrl
push
fnstenv
push
cld
mov
jns
pop
setb
sub
and
inc
jge
xchg
cwtl
mov
neg
aam
push
xchg
mov
sub
push
jne
xchg
lods
xchg
int
jp
adc
mov
mov
adc
adc
inc
cmp
outsl
sar
cwtl
orb
push
movsl
or
mov
dec
clc
jecxz
and
out
adc
jmp
aad
lahf
ficompl
in
testb
clc
test
xchg
pop
pop
inc
addr16
push
repz
ret
add
pop
jnp
lods
xchg
insl
xchg
clc
paddw
add
je
ss
std
les
ljmp
xchg
mov
into
mov
add
inc
inc
cmp
out
out
sti
mov
and
decl
filds
jge
pusha
pop
xor
sbb
testb
mov
or
out
add
inc
mov
cmp
push
rcrb
notb
sbb
hlt
or
aad
test
mov
dec
ret
jle
sub
fidivrs
stos
mov
mov
sbb
popf
roll
clc
or
cli
out
mov
dec
inc
nop
dec
cwtl
mov
cmp
data16
or
jecxz
sub
aaa
stc
pop
mov
jge
adc
aaa
mov
addr16
orb
mov
test
adc
mov
int3
pop
addb
lret
aas
adc
xor
shr
inc
mov
mov
dec
jecxz
shlb
sbbb
and
push
mov
dec
sbb
mov
mov
out
jnp
or
addl
mov
or
lret
mov
xor
int3
mov
je
out
jmp
or
popa
in
cld
data16
lret
fdivs
mov
mov
lahf
xchg
sbb
aam
lock
aaa
mov
jecxz
cmp
mov
stc
fwait
loopne
pop
xor
mov
and
jp
dec
mov
leave
test
jno
xchg
xchg
push
addl
cmp
pop
and
pop
mov
mov
das
in
jg
ret
sub
in
xchg
outsl
fsubrl
pop
je
jg
push
sahf
dec
ja
bound
iret
loop
and
fnsave
add
xor
fs
xchg
jmp
sub
cmpsl
cs
pop
and
int3
repz
cmp
sbb
push
cmp
in
je
push
addl
test
xor
sbb
or
push
movsb
dec
mov
sbb
repnz
xchg
inc
adc
inc
jg
and
push
cli
je
inc
mov
fistpll
sbb
mov
xor
in
lcall
leave
mov
scas
test
int
cmpl
les
inc
mov
movsl
mov
inc
ds
adc
sahf
in
push
inc
call
or
dec
mov
test
shlb
shrl
xchg
hlt
arpl
add
dec
adc
xchg
icebp
pusha
add
jl
push
insl
out
add
adc
int3
sub
test
dec
mov
mov
pop
out
test
pop
rclb
sti
lods
cmp
inc
int3
xchg
sub
jns
repz
pop
sbb
jnp
int
outsb
or
mov
mov
and
sbb
adc
or
clc
imul
xor
cmp
mov
xor
repnz
int3
xchg
xchg
push
add
test
mov
push
or
fistps
insl
shll
push
test
xlat
sub
jmp
jae
pop
jo
std
fsubrs
adc
xlat
push
jecxz
pop
cmp
and
and
outsl
add
push
inc
or
fucomi
adc
inc
jg
jae
cmp
or
jo
cmpsl
jecxz
xchg
jge
sbb
push
pop
dec
sbb
popf
mov
mov
sbb
sbb
ljmp
sbb
pusha
test
clc
test
fldl2t
push
loop
addr16
jg
jge
rorb
imul
lret
mov
enter
sar
adc
loop
ja
mov
sarb
lahf
pushf
xor
xor
push
mov
or
sub
jl
pop
test
adc
popa
aas
mov
mulb
mov
pop
rcrb
popa
ret
fucomip
xchg
js
xor
gs
cmp
mov
dec
clc
sub
nop
and
mov
lcall
xor
or
sarb
add
scas
pop
mov
fldpi
fcmove
jae
add
xchg
push
outsb
sub
mov
scas
pop
pop
enter
pop
jb
push
add
negb
mov
fcoms
repnz
cmp
lods
ret
xor
jecxz
mov
and
out
xchg
mov
pop
addl
xor
mov
pop
idivl
mov
arpl
repnz
mov
mov
dec
xchg
jmp
push
daa
stc
and
ret
test
dec
push
out
divb
xor
mov
in
add
pop
lods
xorb
jae
push
jb
xchg
push
push
push
rolb
test
ss
dec
mov
icebp
test
mov
add
les
ja
jge
pushf
mov
mov
lret
dec
fistl
call
fmuls
jbe
movsl
es
sbb
ret
int
shll
mov
fs
jns
fldl
sub
mov
ss
test
push
mov
addr16
adc
andb
add
insl
enter
adc
mov
xor
sub
es
or
loop
clc
jl
and
faddl
sbb
mov
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
xchg
lods
jno
fdivrl
jp
pop
jp
mov
je
dec
sbb
and
lea
mov
and
xor
lods
test
pop
mov
mov
jb
cmp
pop
or
loopne
add
out
lea
inc
inc
aad
aas
call
push
push
xor
shrb
and
mov
test
xor
cmp
cmp
pop
and
mov
sbb
fists
pop
inc
leave
addr16
mov
stos
push
adc
or
pop
jo
movsl
jne
mov
add
inc
pop
pop
lahf
fisubrs
andl
in
enter
cmp
dec
insl
imul
and
fstl
mov
fwait
ja
cmpsb
gs
ljmp
pop
xchg
sbb
insb
mov
jle
and
or
mov
stc
ficompl
jmp
push
jae
les
jp
xor
cli
or
push
dec
leave
test
out
dec
sub
mov
mov
mov
inc
push
inc
cmp
jmp
mov
cld
jnp
bound
xor
jne
outsb
cs
add
pop
addb
call
and
out
int3
cmp
and
inc
repnz
sbb
icebp
nop
inc
cmp
jno
mov
and
sar
mov
dec
scas
mov
add
adc
and
scas
xor
enter
dec
pop
fdivs
dec
testb
fimuls
xchg
or
push
xor
xchg
pushf
mov
xor
out
pop
in
movsb
in
or
mov
inc
or
jno
test
fcoms
out
sbbb
lds
fidivrs
dec
xor
pop
xchg
sbb
ljmp
stos
sbb
cmp
xchg
outsl
push
mov
xchg
inc
cs
mov
xchg
lahf
aas
jno
and
fistl
sbb
arpl
pop
dec
mov
adc
dec
xchg
mov
nop
xor
sarl
xchg
lock
fcomps
and
dec
sub
adc
jecxz
fisubrl
sbb
fsubp
sbb
pop
fst
inc
daa
rorb
cmp
or
shlb
jns
pop
mov
cmpsb
ret
jbe
cmp
jmp
mov
andl
loope
in
sub
jge
subl
incb
mov
xor
gs
add
std
cmc
or
into
aam
outsb
out
cwtl
bound
outsb
movsb
fdiv
shlb
int
add
and
or
sarl
inc
or
push
repnz
or
mov
dec
dec
jno
popf
xchg
rolb
out
sub
add
pop
lods
les
int
ja
mov
sub
lret
loopne
mov
je
push
jns
ret
movb
xchg
imul
dec
jb
pop
shlb
aam
out
sbb
pop
in
xchg
pop
std
in
mov
xchg
inc
mov
xchg
and
jb
int
shl
outsb
pop
mov
mov
mov
testl
pop
mov
js
mov
test
mov
aas
pop
scas
stos
ret
outsb
or
dec
icebp
jo
aam
das
xchg
bound
or
pop
cmc
sbbb
mov
push
jbe
sbb
mov
fisttpll
add
inc
push
mov
repz
sbb
jp
test
idivb
cmc
mov
or
and
jbe
mov
lret
imul
scas
iret
adc
inc
jle
ror
mov
cwtl
ret
call
xchg
cwtl
aaa
testb
fadds
stos
nop
cli
in
inc
mov
xor
jp
outsb
lods
and
fucomp
enter
cmp
xlat
ret
aaa
mov
insl
jp
add
fstps
jmp
ds
mov
iret
aaa
mov
cmp
sub
sbb
lods
hlt
mov
inc
sub
ja
das
sbb
dec
hlt
or
jnp,pn
push
das
movsl
fs
jo
mov
pop
shlb
ss
jnp
and
jns
or
in
add
ja
aam
test
xor
cwtl
pop
inc
xchg
test
mov
int3
pop
test
mov
pop
out
in
jmp
test
sti
cmpsb
outsb
shrl
les
cmp
addr16
ss
ret
xchg
je
add
mov
and
movsb
fiaddl
mov
out
addr16
adcl
inc
or
lret
xor
cwtl
and
aaa
pop
jmp
mov
int3
in
add
add
add
xchg
orb
rclb
and
mov
inc
cmp
pop
push
mov
sbb
loop
mov
push
fsubrs
cmp
adc
or
fdivl
jnp
cmovnp
add
and
ss
aas
push
jp
jecxz
aas
mov
lea
into
lock
cltd
xchg
aam
sub
sbb
push
out
ret
dec
adc
pop
jne
push
pop
push
dec
mov
outsb
jns
loope
mov
gs
adc
mov
dec
and
xchg
pop
nop
fwait
fwait
adc
dec
xor
movsb
pop
aad
ds
or
int
push
inc
xchg
pop
mov
mov
hlt
jns
xlat
loop
pop
xchg
sub
insl
or
mov
lcall
mov
rclb
sbb
rorb
push
or
pusha
into
sub
insb
test
mov
xchg
sti
and
xor
test
jle
pop
insb
dec
lret
mov
mov
loope
and
sub
xchg
icebp
xchg
rcrb
cmp
xchg
stc
out
mov
sub
out
mov
mov
pop
or
cli
mov
cmpsb
pop
mov
lret
sbb
ret
xor
push
iret
xor
ret
mov
lock
push
cltd
xorb
dec
sti
insb
jno
rorl
jle
icebp
pop
lods
dec
pop
fidivs
mov
sub
push
push
fs
movsb
sub
scas
jb
das
shr
mov
popa
lock
mov
pop
mov
sahf
push
inc
mov
lods
pusha
push
out
xlat
lods
and
jo
clc
dec
ret
pop
cwtl
rcr
dec
adc
adc
cmp
mov
fs
and
inc
add
div
jbe
lock
adc
test
mov
inc
fstpl
jb
jge
hlt
iret
xor
es
cmp
imull
cmp
add
add
outsl
sub
dec
jg
stos
outsb
lods
mov
adc
out
orl
pop
bound
stos
xchg
xor
sub
repz
mov
jmp
fistl
xchg
sub
out
jge
aas
into
fcomps
pop
jmp
jl
or
inc
shrl
sub
xorb
pushf
stos
call
lahf
js
sbb
mov
pop
shrl
cmp
negb
test
enter
pop
lock
insl
pop
or
mov
fidivrs
and
add
pusha
das
cmp
cmc
mov
mov
mov
pop
repnz
pusha
mov
adc
cmp
jg
push
cld
jecxz
mov
fstps
es
mov
aam
loop
mov
repz
mov
cmp
insl
xor
inc
addr16
imul
movsb
or
fistpll
loope
int
leave
fadds
notb
call
push
sti
jg
test
jmp
mov
mov
inc
ret
jne
outsb
lods
pop
mov
jmp
jle
mov
vcvtdq2pd
adc
xchg
jg
push
push
jb
pop
xchg
lods
sbb
in
imul
dec
movsb
cmc
stc
add
jb
or
and
in
out
adc
pop
or
pop
add
sub
pop
mov
xchg
aas
xchg
aas
inc
test
xchg
movsb
pop
jg
pop
out
push
mov
lret
sub
pop
cli
inc
jecxz
dec
jb
movsb
pop
sbb
mov
xor
mov
fwait
and
jb
pop
cmpsb
xor
jae
inc
push
xor
mov
jne
or
fldt
cmpsb
jle
iret
fcoms
stc
or
clts
add
sub
es
jnp
sbb
push
ds
popa
out
push
fs
fwait
xorl
test
cmpsb
orb
xor
aaa
rorl
test
in
jg
push
sbb
add
repnz
mov
and
roll
pop
push
push
or
inc
dec
adc
mov
and
enter
jae
lret
dec
mov
dec
shrl
mov
cwtl
jb
adc
xchg
mov
xlat
lret
xor
loope
mulps
jecxz
add
cwtl
jae
xchg
mov
mov
leave
sub
xor
js
hlt
push
cs
sub
pushf
adcb
sbb
pop
xchg
mov
idivl
sub
xchg
sub
icebp
push
and
mov
inc
xlat
mov
lahf
rcrl
call
dec
mov
cmp
inc
jle
arpl
jnp
xor
push
cmpsb
push
xchg
int3
pop
incl
out
or
or
js
push
mov
mov
or
adc
pop
mov
push
test
pop
mov
add
pop
insb
inc
jp
dec
aas
cltd
fwait
push
out
sahf
inc
xchg
add
and
push
ret
lods
test
jecxz
ret
stos
push
mov
ss
cmpsl
mov
aas
pop
pusha
push
je
add
push
xchg
add
and
or
xchg
xchg
push
movb
cli
dec
in
xchg
loopne
js
dec
xor
lret
xor
movsb
and
lahf
in
divb
mov
imul
loopne
gs
and
mov
xorb
push
cmp
dec
orb
jmp
mov
sbb
sbb
jno
xor
aad
cmp
pop
int3
xchg
adc
cmp
sbb
mov
movsb
adc
ljmp
cmp
mov
mov
adc
push
lcall
mul
pop
mov
adc
fisubrs
xchg
add
inc
pop
push
jns
std
pop
repnz
dec
and
in
adc
sub
fadds
sub
in
xor
out
push
addb
inc
mov
scas
mov
std
mov
fistpl
daa
cli
push
inc
scas
cwtl
sub
stos
loopne
or
ds
jne
xorl
jne
enter
loopne
fsubrs
mov
int3
lods
xor
ret
mov
or
call
pop
pushf
inc
pusha
add
fdivrl
inc
scas
add
mov
inc
mov
cmpb
xchg
cmp
xor
push
sbb
sahf
push
mov
add
movsl
push
push
ret
in
xor
icebp
in
push
subl
fwait
das
cmp
ret
sbb
movsl
cwtl
xor
adc
lock
cli
pushf
jbe
jmp
add
lea
in
cmpsl
or
lock
sub
xchg
push
jbe
or
push
fsubs
adc
jns
aas
dec
adc
outsb
sbb
push
outsb
mov
pop
fldln2
lret
mov
push
dec
push
inc
jnp
shr
add
fwait
mov
imul
mov
testl
loopne
fdiv
cmpl
aaa
stos
dec
mov
call
xlat
outsl
ss
jle
scas
in
mov
sub
gs
sub
jo
pop
fcomps
jmp
imul
stos
fcomp
sub
adc
insb
cltd
les
jb
xchg
filds
lods
jmp
ja,pn
dec
sub
xor
dec
inc
push
dec
lcall
and
xor
dec
bound
notb
incl
bound
jno
mov
or
or
jo
pop
lds
rol
and
std
mov
xchg
std
mov
repz
lods
sti
sub
or
out
sbb
and
jmp
push
out
ds
lds
inc
stos
mov
lret
cmpb
pusha
sbb
dec
hlt
loop
ss
sub
inc
cmpsb
icebp
ret
jne
add
dec
lea
or
add
dec
lret
and
inc
gs
cmpsb
jp
insl
aad
jbe
mov
add
push
xchg
mov
push
mov
mov
ret
xor
lds
and
aas
movzbl
negb
or
pop
incl
rcl
sti
dec
out
adcb
lods
jae
mov
fwait
jecxz
in
fisttpl
addb
cmpsb
imul
sbb
mov
fsubr
inc
push
pop
loopne
push
mov
inc
or
std
push
dec
push
xchg
jno
dec
sub
dec
add
jns
sti
jle
sti
fwait
cld
xor
cmp
lcall
fsubrl
pop
jge
pop
mov
mov
mov
and
test
dec
jbe
in
cmp
xchg
call
and
ret
aam
push
lods
xor
das
pushl
mov
nop
gs
cmc
shrl
and
xor
push
dec
jbe
xchg
xchg
sti
push
add
popf
nop
and
enter
xchg
stos
jp
sbb
leave
cwtl
clc
dec
jne
dec
push
js
pop
dec
pop
mov
mov
push
and
insl
stos
jecxz
jp
pop
test
push
in
push
outsb
xor
dec
xor
repnz
or
in
lret
jg
mov
and
adc
push
push
in
and
insb
xor
fcoml
imul
cs
daa
arpl
sub
sbb
testb
mov
cltd
addb
testb
mov
push
enter
lods
mov
cmc
test
and
mov
jp
inc
outsl
out
outsl
pop
mov
ret
pop
scas
ficompl
fcmovb
pop
adc
lds
mov
adc
and
iret
and
fistps
in
jecxz
sbb
fsts
jbe
xor
es
les
fdivrl
testl
cwtl
test
add
lret
sahf
mov
div
in
jmp
cmpl
pop
and
xchg
pop
in
int
jg
in
js
cwtl
mov
test
hlt
aad
ret
cmp
push
fsubrs
outsl
cli
repz
popa
fadds
shll
bound
sahf
popa
shlb
hlt
sub
jmp
sbb
sub
fs
scas
xchg
adcb
push
negl
inc
loope
js
push
movsl
icebp
arpl
insb
insl
icebp
sbb
jle
add
pop
call
lcall
jl
outsl
divb
cmp
movsb
stos
hlt
xor
idivl
insl
iret
mov
fistpl
mov
imul
les
rcr
push
leave
pushf
iret
push
enter
sub
jp
xlat
ljmp
dec
es
lods
fisubrs
in
nop
dec
fldcw
and
mov
sub
xchg
jecxz
addr16
pop
xchg
int
mov
sti
fdivr
ss
dec
mov
and
jno
xor
notb
repnz
and
or
add
ficompl
es
adc
or
pop
cmp
lods
int
jnp
lcall
out
add
adc
rolb
hlt
inc
stos
add
ljmp
js
push
shlb
xchg
xor
je
scas
fmuls
out
dec
xchg
mov
mov
repnz
dec
mov
cmp
int3
sub
sub
lret
outsb
rclb
sbb
add
loopne
mov
les
fwait
sub
fisubl
aas
pop
jnp
es
addl
pop
test
stos
gs
add
test
mov
sbb
out
jmp
jns
shlb
xor
adc
inc
imul
ljmp
pop
jmp
js
mov
pop
shlb
sbb
inc
mov
or
aas
inc
dec
adc
pop
mov
dec
mov
xor
or
jne
pop
push
lahf
roll
outsl
es
pop
pop
xor
dec
pop
and
pop
pop
xchg
adc
adc
into
addb
mov
xor
das
jnp
inc
and
fcomi
or
pop
pop
dec
movsb
rorb
sub
int3
mov
std
in
jmp
shl
fmull
mov
pop
pop
or
pop
push
leave
cltd
pop
mov
dec
inc
jne
inc
xchg
cmc
int3
fmul
and
inc
sub
in
mov
add
stos
nop
mov
ds
loop
and
ss
dec
ret
ret
cs
aas
in
push
xor
xor
push
sbb
pusha
in
sti
dec
or
sub
jmp
popf
cmp
push
add
cmp
stos
and
sbb
dec
popa
loopne
mov
xchg
jnp
fidivrl
mov
jg
enter
cmp
mov
int
mov
add
ljmp
cld
jl
imul
aam
sub
adc
sub
adc
xchg
mov
adc
mov
aad
cmp
add
ljmp
xor
or
movsl
test
mov
cmp
incb
cwtl
mov
mov
push
xchg
xor
js
dec
repnz
pop
cld
and
loop
or
out
mov
jne
rolb
cmp
jb
outsl
popf
push
mov
mov
movsb
imul
out
lcall
sbb
decb
push
shll
iret
inc
adc
ss
push
aaa
xchg
mov
loope
int3
add
xchg
into
adcb
jne
popa
mov
mov
xor
hlt
aaa
ljmp
pop
cs
icebp
imul
daa
inc
or
inc
dec
cld
insl
sbbl
mov
mov
mov
inc
push
cmp
aas
aaa
push
into
sti
sbb
inc
cwtl
sbb
xchg
add
pop
jne
mov
and
mov
xchg
push
mov
lret
fcoms
call
lds
lcall
pop
jbe
icebp
adc
lea
and
jmp
inc
lods
dec
and
or
add
pop
sbb
mov
mov
leave
push
and
dec
mov
cs
mov
or
mov
pop
add
sbb
jns
leave
sbb
adc
jnp
cwtl
enter
xor
push
jp
subb
pop
shll
cmpsl
or
pop
or
pop
add
dec
inc
jnp
sarl
pushl
sahf
mov
push
outsl
test
mov
sbb
lock
lret
pop
push
xchg
out
mov
pop
or
nop
pop
sbb
gs
mov
ss
sub
pop
mov
ffreep
ret
incb
enter
scas
pop
mov
fldcw
loope
inc
nop
mov
xlat
andl
push
jbe
mov
aas
pop
ficoms
lea
add
xor
push
data16
sub
dec
fmull
xor
sub
test
mov
mov
fwait
and
into
adc
push
lret
push
or
stos
stc
sub
data16
cmp
sub
xor
push
cmp
cmp
inc
std
out
je
data16
adc
in
addr16
or
aad
and
aad
test
sub
rclb
or
add
les
inc
or
mov
iret
ret
nop
bnd
sbb
ljmp
sub
jl
das
je
cmc
ret
lock
pop
adc
in
xlat
mov
sbb
imul
push
mov
and
cmpsl
and
out
scas
cmp
test
sbb
outsl
sahf
dec
stc
xor
pushf
cmp
bnd
sub
mov
jle
lret
in
lcall
pop
and
and
sbb
mov
mov
out
xchg
rcrl
popa
dec
scas
pop
jnp
jmp
cltd
daa
rcl
inc
mov
add
sub
add
jge
sbb
scas
mov
and
aam
xor
cmp
and
pop
shl
jmp
loopne
inc
js
pusha
int3
in
dec
push
pop
dec
stos
jb
sbb
adc
shlb
mov
sbb
scas
xor
adc
xchg
gs
mov
imul
mov
push
pop
lret
das
loop
je
xchg
inc
cmp
lods
mov
rcll
sahf
mov
out
shll
test
xchg
mov
fcmovbe
fdivl
gs
dec
rol
dec
mov
push
imul
shlb
shlb
lods
ret
sahf
mov
jp
dec
subl
fistps
cmpsl
push
jmp
mov
icebp
test
cltd
fnstcw
and
inc
shlb
ja
add
add
jmp
adc
dec
pop
ret
xorb
movl
int3
test
sub
cmpsb
pop
int3
inc
incl
inc
push
aam
cltd
hlt
dec
test
cmp
xorb
add
mov
sub
fdivrl
jge
sbb
aam
xchg
fisubs
fildll
cmp
xchg
test
push
lcall
int
aaa
and
mov
jb
cmp
xchg
out
bound
loope
dec
xor
imul
and
stc
ret
pusha
jge
or
dec
dec
movsb
and
mov
enter
flds
inc
and
mov
xchg
inc
and
sarb
push
sub
stc
jp
cmc
add
lods
push
sbb
iret
jmp
xor
call
je
in
push
into
cmpb
int
xor
or
rclb
popl
lods
inc
dec
inc
mov
clc
sub
and
inc
push
mov
rcrl
pop
cmp
xorl
inc
dec
das
cwtl
arpl
or
aaa
sub
dec
in
dec
gs
mov
mov
push
dec
ds
jo
mov
repnz
pop
in
lret
jbe
inc
inc
stos
push
sbb
adc
cwtl
inc
add
outsb
je
jb
sbb
aad
inc
cmp
nop
sahf
mov
add
mov
out
test
cwtl
mov
aad
jmp
or
int3
scas
mov
xor
xchg
push
cmc
fsubr
pop
and
cmp
jl
inc
dec
and
sub
in
xlat
xlat
stc
sbb
call
imul
mov
sbb
data16
cmp
imul
and
xchg
nop
cltd
rcll
arpl
adc
out
sub
repz
mov
mov
push
push
sub
and
jno
pop
iret
frstpm(287
gs
cld
dec
out
bound
test
mov
test
mov
pop
xchg
mov
popf
mov
push
loopne
andb
fiaddl
adc
aad
push
push
fprem1
mov
cld
sub
ljmp
cs
inc
les
push
rclb
dec
aam
aaa
pop
jbe
fdivrs
sub
and
cmp
out
push
dec
sub
aas
test
js
bound
cwtl
insl
xor
or
sbb
call
add
sbb
cmpsl
mov
stos
aam
xor
outsb
movsb
sub
dec
rorl
dec
pushf
pop
dec
dec
xor
cmp
mov
popa
sub
push
leave
fcoml
mov
les
push
or
insl
push
popf
or
mov
xchg
jl
adc
mov
jb
add
leave
stc
sbb
arpl
fistpl
mov
jno
js
pop
movsl
pop
xor
aam
push
xchg
xor
test
leave
xor
and
lahf
cmp
fbld
in
subl
push
adc
push
iret
insl
or
jge
repnz
outsl
ljmp
hlt
fidivl
or
ret
sub
push
into
sub
fcoms
ljmp
out
mov
mov
mov
icebp
fisttpll
xchg
pusha
pop
fsub
pop
inc
or
xor
pop
jno
mov
push
xor
cmp
lret
adc
icebp
test
mov
jne
push
dec
divl
jbe
shll
and
push
leave
adc
cli
add
cmpsl
mov
push
clc
ljmp
sbb
lret
xor
pop
pop
jecxz
orl
dec
xor
sbb
ljmp
je
adc
decl
jo
test
push
call
jle
dec
bnd
sbb
adcb
fildll
xchg
aas
icebp
mov
cltd
imulb
pop
fistpll
dec
xchg
stc
mov
dec
jl
int
cmp
or
mov
jns
out
push
sbb
sbb
add
push
into
in
mov
add
movsl
fbld
lret
jecxz
repz
jnp
cs
add
hlt
ret
push
dec
push
scas
movsl
shll
cs
push
mov
imul
lds
sbb
lds
xor
out
dec
cmc
lsl
add
sbb
insl
or
mov
jns
xchg
notb
jnp
loop
repz
and
addb
cmc
fsubrl
push
mov
xor
daa
push
out
inc
dec
pop
jbe
popf
std
pop
inc
lea
mov
xor
test
cmpsb
js
add
mov
mov
mov
pop
int3
mov
fsubr
adc
fsubrl
cmp
jle
dec
and
dec
and
pushf
lret
test
mov
ja
sbb
push
les
push
xchg
stos
adc
inc
cli
ret
imulb
insb
or
mov
pop
imul
mov
mov
xchg
xor
dec
mov
mov
dec
leave
or
sti
fisttpl
mov
mov
cli
push
sub
mov
dec
jecxz
mov
push
jbe
or
and
fldl
adc
pop
xchg
es
negl
cmpsl
cltd
aaa
push
jecxz
icebp
std
icebp
xor
nop
arpl
jne
mov
mov
jge
out
sub
mov
addr16
pop
enter
push
mov
pop
stos
daa
loop
cld
movsl
test
lcall
std
movsl
push
sub
jl
adc
iret
insb
das
and
out
and
adc
or
xor
daa
icebp
addb
mov
repz
jbe
lods
hlt
ret
cmpsb
pop
mov
rcrl
add
xchg
xor
mov
and
cmpsb
mov
aaa
hlt
imul
xchg
repnz
notl
in
mov
mov
hlt
shll
push
shll
inc
jbe
ss
add
repnz
andb
mov
add
push
out
inc
ja
outsb
mov
xchg
scas
cmp
cmp
mov
cmp
cmpb
cs
mov
imul
adc
mov
lock
fiadds
inc
sbb
les
xchg
cmp
mov
or
addr16
jae
cmc
sub
jbe
loop
icebp
and
push
fnsave
cmp
adc
push
mov
lcall
mov
sahf
jg
int3
pop
jle
mov
mov
stc
push
pop
pop
bound
or
add
sub
mov
sub
shrl
popf
mov
sbb
lcall
ficoms
ret
scas
iret
sbb
sbb
mov
dec
clc
and
leave
sub
stos
inc
jmp
insb
scas
sub
xor
andb
test
cmpsl
clc
fcoms
sub
ret
testb
ss
dec
mov
jne
lret
jbe
jnp
fidivrl
jg
scas
cli
add
ret
and
jecxz
fiaddl
mov
and
and
imul
lods
mov
adc
lods
into
push
popf
mov
push
loop
decl
movsl
data16
xor
repnz
mov
pop
jge
iret
push
mov
scas
incb
xchg
aam
mov
jae
shrl
iret
or
cmp
dec
mov
adc
mov
jns
scas
shrb
pop
sbb
out
adc
or
leave
mov
cmp
insl
pcmpeqw
mov
leave
sarl
dec
mov
dec
adc
in
jl
aas
cmp
loop
push
cmp
repz
bnd
push
out
pop
into
mov
push
xorl
mov
stc
xor
jecxz
and
icebp
js
jno
jle
mov
repnz
hlt
shrl
jle
out
push
icebp
cld
cs
sbb
cwtl
ret
adc
jmp
or
ss
xor
jns
rcrl
popa
add
icebp
push
lahf
mov
xorb
repz
jmp
sub
xorb
fldenv
xor
jno
ljmp
xchg
inc
call
repz
cs
in
push
outsl
outsl
cwtl
addb
fldenv
insl
add
push
ret
xor
les
repz
push
mov
or
icebp
stos
inc
cltd
loopne
mov
addl
pop
dec
push
arpl
push
pop
push
imul
push
mov
pop
test
out
sub
mov
pop
mov
sub
xchg
cmp
fnstcw
sahf
fidivs
ficompl
pusha
inc
xlat
or
xchg
notb
mov
xor
imul
movl
jl
negb
xor
rcrl
mov
pop
lds
jo
mov
inc
mov
cmp
and
add
sbb
push
xlat
mov
jno
pop
push
push
cltd
lret
cltd
or
fs
inc
in
mov
jb
jle
jecxz
test
or
je
mov
or
push
or
mov
cs
lods
pop
lock
lret
insb
push
sub
jnp
xor
jp
jae
fxch
and
fs
out
push
jmp
mov
pop
xchg
pop
mov
scas
cmp
xchg
int
pop
data16
sbb
pop
mov
xor
cmp
pop
mov
dec
mov
std
add
pop
mov
add
fistl
fs
and
jns
dec
pusha
cmp
dec
push
test
shlb
lret
out
enter
sub
in
xor
xchg
gs
int
mov
mov
and
es
lods
imul
es
lret
sub
add
stc
mov
ljmp
ljmp
jle
dec
inc
or
stos
fwait
or
cmp
push
xor
inc
std
jg
jns
adc
mov
xor
or
push
push
test
adc
jg
pop
lods
or
push
loop
mov
push
sbb
dec
int3
push
std
dec
sub
jge
push
dec
fmull
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
shll
jp
das
pop
jp
ffreep
sahf
push
pop
cmp
nop
leave
jne
mov
ja
or
addr16
add
push
sbb
xchg
pop
sbb
xchg
lea
pop
into
xor
sub
rcr
cmp
into
mov
icebp
jo
out
xchg
mov
scas
or
dec
addr16
orl
xlat
add
add
mov
adc
lret
dec
push
int3
in
sbb
lods
arpl
jecxz
pop
pop
pop
pop
jle
scas
jbe
lret
jo
cmp
into
insl
xor
and
stc
imul
stc
mov
in
fists
fsts
enter
sub
jne
lret
add
mov
push
or
push
ss
pushf
outsl
or
leave
xor
pusha
stc
adcl
call
and
jo
or
sahf
scas
pop
popa
sahf
cld
rclb
mov
xor
dec
push
lds
mov
sbb
dec
inc
fs
andl
jecxz
xchg
cmpsb
sti
jno
outsl
sti
mov
dec
mov
pop
lret
jb
in
pushf
sub
loop
cmp
stos
in
push
movsb
imul
stc
andb
cld
scas
jno
fidivrs
inc
hlt
in
rcrb
fstpt
sahf
mov
jecxz
adc
push
cmpsl
sti
or
movups
imul
lahf
push
stc
inc
mov
filds
sbbl
push
fwait
sbb
push
inc
inc
les
loopne
add
les
lock
push
sbb
sub
pusha
cld
inc
pop
sbb
sub
js
add
mov
jbe
sub
loope
add
sbbl
ds
lock
sub
xchg
das
jle
mov
xchg
jmp
ffree
and
cld
lret
sti
jo
pop
cmp
bound
push
lea
cmp
sbb
fstps
add
push
and
lods
data16
jg
fdivs
das
and
es
stos
sub
jae
sub
add
dec
lret
shll
sahf
push
xchg
jg
loop
repnz
cmp
dec
adc
dec
in
lock
and
lret
jmp
or
xchg
pop
call
addr16
test
shll
xor
push
fwait
out
inc
in
adcl
in
dec
xchg
sahf
mov
dec
cwtl
popa
ja
arpl
andb
in
mov
inc
fwait
rcll
dec
mov
pushl
and
lea
fs
pop
ret
sti
inc
add
mov
inc
cmp
sbb
cmpl
out
int
mul
fwait
rorl
bound
push
lods
or
push
or
and
mov
iret
push
xchg
cmp
in
push
fwait
test
push
aaa
push
add
fcoml
mov
dec
sbb
lret
jecxz
inc
into
and
lods
stos
dec
mov
push
dec
fiadds
js
mov
pop
and
inc
movsl
out
inc
ds
xchg
mov
push
stos
or
adc
mov
mov
adc
jecxz
jmp
aad
je
insl
xchg
inc
fisttps
ljmp
fnstenv
clc
add
push
outsl
pop
jge
sbb
out
jno
add
dec
and
scas
mov
fnstenv
xor
fs
cli
out
push
cli
push
and
jge
or
mov
pop
xchg
test
das
inc
mov
sub
addr16
sub
ficoml
push
jbe
fistpll
popa
sub
incb
out
pop
sub
outsl
into
jmp
adc
mov
es
push
mov
incb
inc
js
xor
fsubrs
push
adc
xorb
imul
pop
cmp
stc
mov
in
xchg
ficoms
test
stc
loop
fs
cli
rorl
pop
pushf
sbb
xchg
dec
dec
sbb
loop
sub
jno
scas
enter
or
fwait
ja
cmp
mov
jae
push
test
xor
mov
pop
adc
insl
jae
jmp
lds
out
jb
inc
or
out
jmp
add
enter
adc
pop
cmp
pop
pop
sti
int3
fcoms
pop
scas
push
and
je
test
fnstsw
lods
lret
lods
aaa
mov
popf
fiaddl
sti
sbb
test
lods
hlt
or
rorl
mov
mov
aad
bound
in
mov
pop
in
or
ljmp
clc
cmpsb
xor
push
pop
cld
mov
pop
pusha
fisubrl
xchg
cli
mov
push
mov
clc
mov
icebp
andb
jb
cli
out
lods
mov
sub
mov
dec
sarl
enter
lcall
mov
dec
pop
add
mov
jnp
enter
inc
add
mov
fisttpll
jb
stos
cs
cld
cmp
sarl
sub
insb
mov
fucomi
lods
or
xchg
pushf
cmp
in
xor
adc
push
push
lock
subl
ds
and
lahf
adc
call
cmp
push
jno
in
add
in
call
or
mov
movsl
sti
lcall
ss
cltd
cwtl
push
sahf
xchg
lret
jne
jae
loope
and
or
imul
mov
ret
mov
jns
rorl
add
js
in
lea
popf
jle
jno
cmpsb
stc
jae
xorl
push
fildl
hlt
sbb
push
divb
fistps
pop
jno
inc
add
inc
popa
ja
insl
jbe
stos
pop
fidivrl
or
pop
xchg
cmp
pusha
or
xchg
aam
push
and
call
pop
cli
out
mov
jns
lahf
and
jge
out
push
scas
ja
mov
mov
loope
pop
and
cwtl
add
sbb
stc
xor
addb
insb
jbe
adc
sub
loope
mov
push
or
adc
mov
push
add
jecxz
push
test
lods
cmp
inc
scas
mov
add
daa
movsb
repnz
std
mov
jns
cmp
mov
or
rorl
adc
or
lahf
push
jbe
stc
movsb
adc
xchg
or
add
rcrb
outsb
rcrb
sahf
sbb
or
lret
in
test
jne
ljmp
mov
mov
push
shlb
fistpl
mov
mov
fidivrs
jb
mov
sbb
lahf
fistpl
hlt
jmp
sub
scas
lret
lret
sub
cmp
aam
and
adc
push
movlps
mov
mov
mov
lret
ja
add
pop
add
fs
decl
mov
iret
cmp
imul
jecxz
data16
repz
inc
pop
xchg
out
pop
jmp
pop
aad
aam
mov
icebp
test
movsb
cld
fsub
lea
adc
or
loope
lret
xchg
cmpsl
push
rcll
lds
int
ja
mov
cmp
and
pop
cmp
cmpsb
pop
sti
icebp
jle
push
mov
fcmovne
in
insl
mov
in
fisubrs
push
add
stos
push
bound
adc
cli
and
out
dec
dec
test
fidivs
mov
fdivl
push
std
push
and
jg
mov
dec
repnz
scas
jmp
and
sub
cmp
mov
jecxz
inc
lret
sub
dec
in
pop
adc
mov
mov
jmp
xchg
rcrl
push
bound
pop
sbb
ficompl
fnstenv
out
in
lret
cmpl
ficoms
nop
ret
adc
xchg
fdivp
outsb
clc
movsb
shrd
or
xor
int
pop
xchg
adc
cmp
mov
mov
mov
call
jno
ja
mov
and
adcb
xorl
cwtl
movsl
in
aaa
int3
xor
lea
das
xor
lahf
test
or
std
es
mov
test
pop
adc
add
aas
and
push
xchg
cmpsb
mov
and
xor
cmp
sbb
xchg
pop
gs
lds
push
sub
call
sub
loope
das
xor
jl
jno
or
mov
movsb
push
loopne
orb
outsb
mov
repnz
aam
sets
pop
add
jmp
lds
loopne
cltd
xlat
adc
fdivp
test
outsb
cmp
sbbl
xor
xor
icebp
jbe
and
cmp
lcall
imul
out
mov
cmp
add
into
imul
shr
mov
sahf
inc
loope
push
std
sbb
sub
inc
sub
testl
inc
into
or
add
sub
in
test
test
pop
leave
sarb
cmp
addr16
ret
dec
and
mov
add
adc
mov
sub
xchg
lds
out
popf
adc
inc
jbe
bound
icebp
xchg
jno
rcll
loopne
pop
jmp
mov
push
js
xor
in
cmp
aaa
fwait
or
scas
lods
xchg
xchg
and
cmp
lahf
aam
adc
push
push
add
add
or
ret
mov
push
mov
pushw
push
push
ljmp
add
or
and
aaa
cwtl
and
inc
dec
push
rol
push
add
jnp
mov
testb
cs
pop
mov
mov
xor
mov
out
add
pusha
aas
rorl
sbb
and
mov
insl
mov
jge
ds
ds
push
xchg
push
aaa
popl
push
inc
pop
scas
or
test
test
jae
in
negb
jmp
fidivrl
test
lods
cmp
stos
jns
ljmp
imul
mov
cmp
xchg
mov
jb
cmpsl
pop
imul
ret
xor
int
inc
divb
lahf
popf
fwait
scas
cli
arpl
cmp
push
je
mov
in
push
jae
xchg
dec
mov
enter
les
pop
add
stc
hlt
out
test
or
add
inc
xor
pop
ljmp
movsb
add
cmp
fldt
push
daa
mov
jo
imul
movsb
push
push
dec
fisttpl
cld
nop
stc
aas
cmpsl
push
repz
pop
pushf
push
add
pop
mov
movsb
pop
ret
repz
mov
cmp
xlat
adc
nop
xor
jnp
in
fcompl
pop
jbe
leave
or
pushf
inc
jo
and
scas
pop
xor
pop
enter
xchg
jno
in
sbb
add
xchg
bound
int
js
jbe
addr16
out
aad
scas
cmp
xor
xor
pop
out
and
jne
adc
pop
dec
mov
test
pop
dec
lcall
mov
es
xor
mov
fwait
pop
dec
cmp
out
jb
jg
aam
stc
xor
dec
stc
enter
push
pop
outsl
mov
mov
push
mov
dec
pop
loop
push
push
mov
ja
addr16
xchg
xchg
imul
cmp
loopne
mov
jae
xchg
fdivr
adc
adc
sbbb
int
int3
daa
test
xor
addb
nop
push
push
sub
gs
push
ds
mov
xchg
mov
les
loop
insb
cli
push
daa
ss
ficoml
imul
lds
ja
and
in
insb
adcl
xor
push
xchg
mov
mov
and
dec
pop
fidivl
loope
subb
adc
paddw
xor
push
call
icebp
pop
lock
pop
xor
js
test
jmp
leave
push
int
jne
sbb
imull
mov
jb
in
lds
jmp
mov
andb
mulb
rorl
roll
fwait
lea
call
mov
stos
lods
pop
into
mov
pop
sbb
mov
jl
sbb
mov
ret
jg
test
mov
and
inc
pop
sbb
rcr
push
mov
xchg
lret
jg
sbb
xchg
push
inc
shl
int
sti
push
fisttpl
fdiv
ret
sub
iret
push
pop
inc
pop
push
xchg
fidivl
notl
jmp
cmc
dec
and
adc
int3
add
mov
ja
pop
es
lock
es
fst
inc
hlt
jp
ljmp
test
aad
fs
pop
xchg
mov
adc
rorl
nop
subb
push
repz
ds
mov
fstpl
int3
lds
dec
push
push
movsb
addr16
add
push
into
jmp
and
dec
and
mov
mov
push
pop
sbb
mov
or
mov
out
inc
imul
jb
and
push
inc
dec
add
daa
xor
mov
sub
or
imul
xchg
jecxz
out
stos
out
or
add
inc
jno
mov
outsl
sbb
push
lcall
mov
mov
xor
popa
iret
leave
mov
popa
xchg
jnp
adc
insb
pop
lret
rorb
sbbb
imul
test
sub
cmp
es
stos
cwtl
pop
dec
pop
cmp
es
adc
popf
jns
dec
fistpl
popa
pop
push
push
inc
mov
inc
lahf
mov
cmp
mov
inc
lea
es
ds
sbb
or
jno
sbb
jne
jp
rclb
js
cli
test
push
mov
sbb
das
and
addb
dec
outsl
pop
xor
pop
xchg
lea
imul
rcl
sbb
sub
hlt
fsubs
push
push
iret
sbb
xchg
mov
int
xchg
jnp
addl
imul
pop
and
lods
into
lcall
cmpsl
cwtl
push
cmpsb
pop
scas
sub
mov
or
dec
and
sbb
mov
pop
gs
les
scas
mov
pusha
sti
xchg
je
push
es
fs
imul
and
and
out
lock
push
imul
pop
jge
out
fwait
mov
fsubl
dec
adc
sbb
dec
cmpsl
and
xor
adc
cmp
push
push
pusha
cmp
pop
call
pop
je
or
dec
int3
cmp
inc
ret
mov
lret
imul
mov
das
jle
xor
cmp
mov
loop
jmp
stos
or
fsubrp
pop
dec
fmulp
iret
movsbl
mov
xor
adc
ljmp
adc
sarl
into
out
adc
add
xchg
aad
lret
movsl
xlat
stos
sarb
lock
mov
aad
mov
jnp
or
pop
push
jo
jecxz
ja
pop
es
aaa
adc
push
jne
stos
int
push
arpl
lods
xchg
fisttpl
dec
add
xchg
mov
addr16
out
pop
into
jb
add
lea
sub
fstpl
insb
mov
orl
cmpsl
jo
int3
call
adc
jno
mov
aam
sub
inc
repz
mov
jno
out
sbb
and
fwait
out
fldt
sub
pushf
add
inc
cmpsl
mov
mov
adc
ficoml
push
or
or
das
lahf
fisubrs
pop
ret
out
fs
jg
sub
int3
lcall
inc
sub
push
and
push
cmp
in
addr16
push
jmp
or
and
sbb
insb
rcrb
xchg
inc
push
loope
jp
lret
mov
int3
xorl
cmp
cmc
cmp
pop
ljmp
fdivl
push
imul
addr16
jmp
bound
jns
xor
adc
fwait
mov
and
or
lcall
out
sub
dec
mov
xchg
out
push
insb
aad
aad
pop
push
mov
fistps
hlt
push
mov
jp
insl
mov
adc
pop
jg
xchg
fsubrs
dec
jl
add
push
jmp
or
mov
test
adc
cmpsl
cli
or
hlt
enter
sub
sbbb
notl
xorb
xor
adc
add
les
xlat
inc
testl
stc
cs
nop
push
mov
ret
mov
sahf
loopne
leave
mov
mov
adc
aam
dec
hlt
ret
in
mov
arpl
and
nop
cmp
fbld
aam
dec
mov
stos
jl
xor
mov
addl
cmc
pop
movsb
inc
xchg
dec
fwait
mov
ret
adc
imul
fmul
loop
inc
in
add
arpl
loope
subb
test
jae
or
push
enter
imul
push
pop
pop
mov
ds
sub
jle
loope
test
or
test
jecxz
fildll
aas
outsb
adc
icebp
adc
jnp
ljmp
jge
aas
leave
nop
insb
pusha
repnz
xchg
sub
jns
pop
test
pop
popf
push
es
sub
add
lahf
leave
pop
push
adc
inc
lret
clc
sub
mov
ror
jle
rorb
pop
mov
sti
mov
popa
pop
je
shl
cli
fldt
jg
repnz
clc
adc
mov
mov
mov
sbb
sahf
push
out
inc
jo
bound
ljmp
icebp
jb
iret
sub
outsl
adc
adc
js
cld
sbb
add
push
cli
sbb
sbbb
lock
int3
push
pushf
shlb
push
pop
jae
cmpsl
sysexit
hlt
sub
jg
mov
inc
jg,pt
add
and
adc
pop
test
leave
push
adc
pop
cmp
xor
push
cmpsb
push
stc
sbb
sar
lods
push
aad
xchg
test
aas
jmp
xor
pop
push
pushf
pop
nop
mov
sub
xor
mov
flds
mov
pop
jle
test
stos
cld
cmp
jge
push
mov
test
xchg
in
lret
push
iret
mov
rcrb
adcl
stos
mov
pop
or
sahf
push
jl
sub
orl
xor
push
inc
push
fsubrl
xchg
add
inc
mov
adc
leave
adc
loope
jmp
fadds
je
mov
es
jnp
out
mov
mov
daa
fnsave
xchg
push
pop
aad
fsubs
xor
jae
orb
mov
subl
lock
dec
in
pop
jecxz
or
fistpll
or
ret
jns
clc
sbb
and
mov
mov
andb
jbe
icebp
lret
scas
cli
loope
dec
ja
js
and
xchg
lea
cmp
mov
pop
mulb
mov
mov
lahf
push
add
fs
xchg
fmull
leave
fidivs
pop
sbb
xchg
pop
pop
js
mov
cli
imul
pop
js
arpl
jno
fisubrl
sbb
mov
repnz
aas
and
insb
rep
push
lds
mov
pop
stos
mov
jle
push
jmp
shrb
inc
cmp
insb
xor
jge
gs
pop
pop
mov
cs
add
and
inc
or
add
inc
pop
pusha
jne
mov
push
mov
cmpsl
push
mov
xchg
scas
xchg
andl
dec
aad
adc
loop
cwtl
xchg
and
test
jmp
jl
mov
xchg
and
pop
xorl
mov
outsl
mov
or
lret
out
leave
lods
push
add
adc
add
mov
pop
dec
adc
idiv
xchg
scas
sub
mov
sbbb
jecxz
daa
push
pop
sbb
rol
sub
pop
adc
lds
jp
xor
adc
clc
shrl
inc
add
pop
fisubl
stc
mov
dec
mov
insl
cmc
jbe
pop
fs
mov
scas
aaa
addr16
lds
repz
es
sbb
mov
xchg
sbb
lods
enter
pop
testb
adc
hlt
sub
xchg
icebp
data16
push
push
xor
push
das
sbb
addr16
push
inc
testl
cmpb
sub
shlb
push
ja
and
nop
or
mov
loope
fcoms
dec
sbb
sti
cmpsl
lods
and
push
jge
out
cli
stos
or
popa
inc
mov
dec
loope
xchg
dec
ret
or
push
outsl
and
adc
inc
sub
jle
push
jo
and
ret
fidivrl
lret
dec
push
add
xor
adc
sarl
sbb
inc
decl
and
mov
pop
ds
mov
filds
icebp
test
mov
xor
sbb
mov
dec
xchg
inc
scas
pop
andl
xchg
mov
mov
push
mov
fwait
rclb
jp
xchg
ljmp
sub
out
push
mov
int3
adcb
out
jno
mov
sub
or
mov
add
xor
call
xlat
stos
or
mov
sbb
ror
mov
xchg
and
out
fcomps
dec
dec
test
mov
mov
ds
xchg
mov
pushf
sbb
movsb
bound
xor
sbb
ret
sub
push
inc
jmp
outsb
add
pop
mov
test
rcrb
or
jbe
jns
mov
popa
mov
or
jno
test
mov
mov
pushw
push
test
pop
fadd
shlb
and
mov
popa
or
stc
mov
add
pop
lods
rcll
or
test
mov
lock
push
sbb
gs
ret
mov
cs
loope
pop
xchg
pop
mov
dec
push
loopne
push
mov
and
mov
jb
ficomps
sub
xchg
loopne
xchg
ret
add
mov
push
popf
sbb
es
jne
movsb
mov
or
sbb
push
xchg
lcall
jne
fisttpl
jae
jg
pop
xor
std
jg
stos
pop
push
data16
lods
aaa
stos
mov
dec
dec
outsb
aaa
inc
sub
mov
push
insb
in
and
jmp
imul
lock
fdivl
pop
adc
std
std
xchg
xchg
sub
test
or
inc
xchg
xchg
ja
popa
enter
insb
lock
sbb
xlat
bound
sbb
jnp
mov
sbb
movsb
scas
push
es
and
jns
lods
aas
or
xor
or
and
stc
pop
push
or
ret
mov
or
ret
mov
pop
repnz
dec
pop
xchg
push
js
out
cmp
inc
cwtl
aas
pushf
leave
movsb
arpl
aaa
lret
sbb
inc
sbb
xchg
sbb
push
push
xchg
test
pop
cmp
shrl
push
add
push
test
scas
cs
int
jb
jbe
dec
fidivl
cmc
jae
fs
call
sub
fdecstp
and
ds
pop
add
scas
shlb
stc
mov
mov
bound
jns
and
jne
bnd
andb
cld
mov
loopne
sbb
psrad
dec
aad
xor
call
pop
xor
mov
or
in
daa
sbb
testl
xchg
sbb
leave
dec
dec
push
push
add
lret
lock
jnp
pop
dec
insl
hlt
add
mov
jp
into
sub
popa
mov
mov
cld
mov
insl
nop
lds
sub
xor
nop
mov
jne
sahf
mov
push
loope
jl
ret
fsubrs
pop
or
fs
push
mov
sub
test
cmp
xlat
jmp
repnz
testl
jg
lcall
or
mov
pop
xchg
repz
push
add
inc
or
cld
push
xlat
xor
add
test
ja
push
jecxz
xor
rcl
jno
andb
mov
aas
mov
sbb
push
dec
pop
mov
mov
push
push
sub
cmc
scas
push
jne
cmp
inc
testl
dec
mov
and
stos
push
mov
ljmp
testl
push
movsl
loope
out
inc
dec
lret
stos
adc
cld
fistpll
loop
fists
xor
push
pushf
cmpsl
pop
pop
fcompl
sbb
clc
dec
js
xor
xor
adc
fstpl
mov
das
std
mov
xor
mov
xor
xchg
push
cmp
adc
je
test
aaa
imul
mov
lahf
adc
pop
mov
push
mov
repz
in
push
pop
dec
xor
adc
jge
mov
pop
and
mov
shrl
pop
push
sbb
add
inc
std
cmpb
xor
push
jl
das
rorb
mov
aaa
and
adc
arpl
xchg
dec
push
subl
ds
in
pop
rolb
leave
xchg
mov
pushf
fisubs
mov
into
jp
dec
pop
mov
lcall
pcmpgtb
std
xor
mov
or
add
std
inc
push
mov
bound
repz
mov
nop
lods
fisttps
ss
lret
popf
xor
std
in
lret
lahf
lcall
imul
mov
xor
xchg
dec
lea
and
stos
test
aas
ret
ret
leave
xchg
ljmp
loopne
sbb
add
and
add
dec
adc
fmull
subl
data16
fisubl
repnz
stos
lahf
aaa
cmp
mov
bound
cwtl
mov
sub
jae
jl
or
aad
jmp
dec
pop
push
add
fisubl
mov
and
mov
repz
sub
mov
jae
insl
popf
fstpl
mov
test
jne
mov
jne
and
aas
jle
aam
push
insb
out
mov
ret
jb
mov
mov
mov
add
loope
xchg
jl
sahf
rcrb
push
xchg
sahf
addr16
in
add
ror
repz
jecxz
or
ljmp
cmpsb
roll
pop
mov
jne
nop
push
adc
call
mov
or
jl
movsl
push
cld
push
mov
mov
add
outsb
out
aaa
stc
rcrb
addr16
xchg
sti
inc
mov
sub
xor
aad
iret
xchg
mov
test
lods
movsl
roll
pop
add
jae
xor
sub
enter
xor
clc
out
nop
adc
pop
cmp
stos
testl
ror
out
out
negb
fsubrl
sahf
or
pop
cmp
ja
mov
adcb
dec
stos
out
shll
mov
inc
mov
es
cwtl
jecxz
data16
lret
and
jle
sub
bswap
nop
sub
pop
dec
sti
mov
out
adc
sub
fwait
adc
mov
xchg
iret
in
or
ja
push
sbb
lock
iret
sbb
mov
shll
jo
fwait
out
mov
mov
mov
es
mov
not
cmp
sub
jle
cltd
or
idivb
and
pop
add
scas
or
add
and
pop
nop
push
jno
in
movsl
or
les
leave
mov
mov
insb
ds
sub
imul
xor
fcmovb
push
xchg
inc
push
divl
aaa
pusha
jae
leave
insb
in
inc
nop
inc
ss
stc
sbb
mov
pop
nop
test
xchg
dec
push
mov
popa
fldl
mov
sub
push
aam
pop
std
cmp
rcll
or
lea
test
test
cmp
addr16
dec
arpl
xchg
icebp
jnp
mov
lahf
jo
sub
es
mov
cld
inc
daa
movsl
into
push
add
daa
cmp
add
mov
xor
lahf
mov
sub
mov
cmp
fisttpll
jge
pop
xchg
sbb
fidivs
mov
sbb
in
dec
add
mov
xchg
icebp
jl
mov
xor
test
lret
dec
lret
jmp
or
leave
test
sub
gs
mov
mov
movsb
fxch
push
lods
mov
sti
jnp
push
sub
inc
pop
outsl
jge
adc
xor
xor
out
cmp
sub
cli
clc
adc
imul
push
jb
sub
cmp
pop
jns
lea
mov
movsl
adc
es
les
sub
ficoms
ret
ljmp
add
pop
push
inc
add
ja
xchg
stc
fsubrs
scas
lcall
gs
imul
push
out
mov
dec
dec
fidivrl
arpl
jnp
jnp
lock
cli
mov
fmull
bound
push
xchg
mov
dec
add
push
cmp
sbbl
adc
inc
jne
rclb
out
jg
rorb
ljmp
cmpsb
clc
aad
jle
fadds
test
aaa
push
int3
or
xchg
mov
xor
xchg
adc
int
arpl
enter
aas
les
sub
or
icebp
inc
lock
cmp
mov
push
mov
and
ljmp
dec
add
pop
jno
adc
cmp
adc
cmc
xchg
insl
scas
popa
push
stos
and
cltd
xor
jnp
loop
shll
nop
mov
mov
in
push
mov
lcall
cmp
and
out
push
add
out
rcrl
fldt
mov
sbbl
fdivrl
in
inc
push
lods
in
xchg
dec
xor
and
inc
leave
xor
or
xor
fwait
lds
lret
loope
dec
fildl
scas
call
mov
popa
out
fsubrl
jbe
xor
inc
mov
movsl
es
test
decl
in
fldenv
sti
xchg
dec
mov
pop
ret
push
stos
or
shrb
andb
sub
mov
xor
push
mov
sbb
subl
xchg
push
aam
inc
int
adc
push
pop
lret
in
mov
push
push
jae
and
inc
mov
cld
xor
pop
pushf
pop
inc
ljmp
xor
jb
jl
mov
mov
ljmp
sub
loop
data16
dec
jp
ja
outsb
fsubp
xor
rcl
pop
pop
push
mov
enter
in
inc
xorb
cld
xchg
lahf
jmp
aam
cmp
or
lock
shr
inc
sahf
divb
mov
incb
shrb
stos
mov
les
out
cmp
mov
test
jae
dec
adc
xchg
mov
hlt
pop
out
aam
or
call
add
add
cmp
sub
mov
aaa
mov
jp
mov
mov
pop
cltd
push
and
movsb
dec
inc
clc
and
aam
sbb
mov
fcomp
scas
inc
cmp
fdivr
xchg
jne
popf
xor
loop
and
xchg
popa
and
scas
and
xchg
ds
mov
ja
dec
dec
mov
add
mov
lods
inc
mov
mov
pop
arpl
cs
dec
ss
fsubs
push
jge
nop
mov
loopne
inc
loopne
push
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
outsb
add
sbb
cmc
jp
adc
jp
cmp
sarb
fsubrl
ret
push
ficompl
sub
icebp
mov
loopne
or
andb
bound
adc
mov
xor
xor
dec
outsl
inc
ljmp
cmpl
loop
dec
push
lret
into
pop
clc
fwait
cmpb
dec
sti
mov
push
mov
imul
call
out
lds
pop
hlt
rcrb
fcoms
jno
stos
lds
lods
mov
pop
loop
jge
jne
add
cmp
jge
dec
cwtl
das
cmp
out
lds
add
shl
rorl
call
push
push
xor
sbb
mov
int
ja
aad
adc
imul
arpl
dec
xchg
cmp
iret
shll
sbb
iret
pop
inc
fsubrs
sahf
pop
hlt
rcl
cmpsb
movsb
lods
loop
push
test
push
inc
sbb
xchg
shll
mov
mov
out
into
fcmovnbe
ret
mov
cmp
test
inc
in
inc
lea
inc
loop
or
iret
xor
inc
loop
dec
cmc
daa
pop
xor
insb
pop
jae
ret
or
call
das
addb
push
ss
cli
ja
aaa
xor
fnsave
pop
cli
addr16
jg
sub
add
pop
and
scas
ljmp
add
jge
fwait
mov
pop
pop
lahf
stc
xchg
loopne
pop
sub
xor
fs
ja
test
inc
jns
fwait
jne
adc
shrb
push
jbe
insl
loop
add
jecxz
stos
xchg
sub
mov
dec
sub
loope
sub
aam
mov
cmpsl
or
pop
dec
or
xchg
mov
cmp
mov
jns
fisubrl
jecxz
dec
jp
popf
and
pop
in
pusha
adc
ret
sub
add
lds
push
lea
clc
push
jp
jecxz
int3
push
es
enter
and
jle
and
push
xchg
push
jle
mov
lahf
cmpb
out
jb
je
mov
iret
lret
iret
cmp
test
lcall
jp
push
mov
cltd
push
sahf
cwtl
sbb
mov
push
psubsb
and
mov
cmpsb
lods
dec
aaa
xchg
leave
jmp
stos
dec
popa
inc
mov
add
out
mov
stos
push
sbb
and
and
test
jo
test
or
fidivrl
adc
cmp
dec
bound
dec
xor
into
mov
and
cmpsl
add
scas
sti
pop
jnp
adc
ret
fstpl
mov
mov
js
mov
xchg
bound
repz
pop
int3
pop
or
push
aas
fs
gs
test
inc
mov
mov
sbbl
xchg
incb
or
imul
popf
adc
daa
enter
stos
push
xor
lcall
xchg
aaa
dec
mov
xchg
push
sbb
adc
adc
dec
enter
and
imul
js
xlat
pop
popf
sbb
in
add
cmp
jp
lods
cld
add
inc
sti
outsl
pmaxsw
testb
and
or
adc
sarb
sbb
int3
inc
jns
in
jge
in
movsb
and
push
ret
mov
xor
arpl
jns
loopne
and
cmpsb
cmp
idivl
or
mov
push
mov
outsb
je
clc
mov
pop
stos
int
cmp
inc
sbb
out
and
jnp
inc
lock
and
andl
hlt
pop
shl
es
ficomps
testb
lds
mov
outsl
imul
lea
cmp
and
xchg
push
imul
stos
popf
jbe
mov
sub
mov
xor
xor
xchg
hlt
sub
out
mov
pop
inc
test
sarb
jnp
into
testb
and
xor
jne
mov
push
fs
xchg
jmp
sub
outsl
loop
test
or
jl
std
negb
in
int3
add
cwtl
push
pop
jns
shrl
xchg
icebp
add
pop
mov
enter
jb
mov
icebp
push
dec
lock
out
push
xor
or
mov
or
sti
repz
sub
jne
lds
sub
pop
cmpsl
inc
test
and
dec
xor
lcall
mov
imul
mov
lea
dec
push
cli
cwtl
mov
pop
sbb
jge
rep
sahf
bound
mov
mov
dec
add
into
xchg
push
sub
xor
jno
cmpl
fnstenv
xor
adc
mov
xchg
lock
mov
sarb
fistl
mov
mov
sahf
repnz
les
and
testl
push
xchg
aaa
loop
leave
out
fs
aas
add
mov
jbe
imul
repnz
insl
stos
push
dec
push
or
out
adc
mov
popa
jg
dec
loope,pt
mov
dec
addr16
inc
add
lds
push
and
jnp
jmp
fwait
or
out
stc
lahf
mov
stos
cli
xorl
xor
inc
std
cmp
push
repz
mov
push
outsb
incl
lock
rol
mov
lcall
fs
stos
adc
jge
leave
mov
fwait
dec
clc
hlt
mov
fisubrl
adc
fmuls
loope
adc
sbb
add
stos
cmpsb
pop
mov
add
andl
push
mov
pop
movsl
push
mov
test
adc
xor
mov
jmp
jecxz
xor
pushf
test
mov
mov
add
stos
or
mov
pop
cltd
push
xor
loope
add
push
push
xor
jae
adc
adc
cmc
popf
pop
add
dec
lock
js
xchg
js
inc
dec
aad
in
not
cmp
cmp
cwtl
sbb
pop
shlb
iret
repz
jg
xor
out
mov
sbb
loopne
pop
data16
insl
cmpsl
jnp
in
mov
sub
cmp
dec
inc
push
ffreep
mov
sub
loope
inc
enter
repnz
jb
cmpsb
lods
add
inc
js
sti
xor
sahf
icebp
fadds
add
call
mov
add
sbb
push
mov
or
pop
sarb
ret
adc
test
call
mov
movsl
and
inc
mov
dec
xor
mov
mul
jb
push
jecxz
pop
adc
add
dec
js
lret
test
xchg
xchg
adc
ljmp
add
dec
rcll
out
inc
sarl
jnp
or
and
and
fcomps
shrb
lods
aad
cmp
jae
out
gs
lahf
or
cmp
push
sbb
int3
incl
movsb
ficoms
out
mov
popf
sbb
inc
or
decb
out
jmp
out
jo
pop
test
lea
pop
sub
jg
ds
daa
scas
inc
mov
leave
add
mov
outsb
sbb
lret
adc
cld
test
je
or
roll
loopne
xorb
addr16
inc
imul
add
popa
fwait
out
insb
loopne
ret
ds
lods
out
ror
dec
rol
jne
jbe
xor
mov
mov
push
mov
test
push
xor
pop
jg
add
xor
lock
dec
sbb
int
xchg
add
lret
pop
or
dec
adc
pop
xchg
adc
adc
jns
aad
push
dec
jae
push
inc
add
add
pop
add
imul
and
push
out
arpl
movsb
jecxz
jge
push
jbe
adc
xchg
jg
pop
mov
ds
into
push
jnp
pop
mov
fadd
mov
add
test
xchg
lret
cmp
sub
push
cmc
xor
sub
mov
daa
mov
andb
test
xchg
outsl
xor
dec
aam
icebp
popf
in
adc
add
xor
popf
mov
cmc
cmp
xchg
cmp
xchg
mov
cmpsb
iret
sub
ss
fisubs
cmp
lock
or
jae
xor
repz
pop
push
jnp
stc
sub
in
sub
add
or
hlt
jnp
pushf
int
xlat
filds
inc
dec
mov
mov
sub
lret
jb
imul
stos
and
xor
mov
sbb
movb
jne
ret
idivb
mov
adcl
dec
lods
jle
pop
inc
movsl
fldl
pop
es
jns
fstl
xor
imull
test
jbe
fld
es
jo
testb
add
mov
jo
jae
adc
jae
repnz
jmp
int3
adcl
movsb
jns
fadds
jle
and
sub
sub
xchg
ja
jb
insl
jne
lea
inc
pop
push
je
add
cmp
icebp
add
js
repnz
hlt
and
lcall
sbb
in
add
jne
fsubrs
fbld
sub
push
add
lods
and
pop
xchg
push
subl
test
jecxz
adc
jmp
jg
ljmp
mov
std
push
cmc
rcrl
pop
mov
in
push
cmp
hlt
add
std
out
cmp
pusha
jg
into
cltd
push
lret
dec
mov
movsb
pop
cmpsb
or
ret
mull
stos
ds
jo
sub
dec
xchg
cmp
dec
add
pop
pop
leave
xchg
mov
jbe
aaa
dec
xlat
loope
outsl
stos
outsb
sbb
lcall
push
ds
adc
xchg
les
mov
mov
outsl
dec
push
popa
sub
daa
sahf
push
add
popa
lret
inc
dec
out
test
sub
cmp
mov
insl
in
dec
mov
adc
and
push
lea
xor
mov
dec
jbe
cmpsl
testl
ss
and
adc
in
dec
and
int3
xchg
inc
push
pop
test
scas
dec
testl
add
clc
xlat
cmp
xchg
rorl
imul
icebp
cli
dec
sub
fisttps
mov
loopne
adc
imul
popa
jae
addr16
in
sub
xor
shl
add
mov
mov
add
or
aam
lret
arpl
enter
mov
sbb
rcrl
xor
push
loope
cmp
outsl
or
mov
fildll
sbbb
cmc
add
mov
jge
cmp
sbb
ror
std
push
sahf
xchg
mov
xorb
inc
outsb
and
movsl
sbb
sub
dec
cmp
jl
pop
testb
jle
add
mov
hlt
add
lcall
cmp
dec
decl
ret
jns
mov
lds
lret
jg
add
rcrb
pop
dec
push
or
push
std
orb
iret
inc
add
mov
testl
mov
mov
fwait
mov
bound
pop
sub
je
dec
cld
fisttps
mov
cmp
push
mov
pop
jge
mov
mov
cmp
adc
stos
mov
mov
adc
dec
lods
cmpsl
xchg
stc
adc
dec
shlb
int3
ljmp
pop
or
mov
and
xor
adc
sbb
outsb
add
scas
xor
lds
imul
dec
cmp
mov
pop
rorl
push
mov
jno
aas
sbb
and
lcall
push
xor
push
mov
add
fs
enter
adc
movsl
movsl
mov
push
sub
fcoms
ror
js
out
imul
mov
xor
mov
into
mov
idivb
stc
addr16
in
add
jle
loope
jns
testb
and
inc
sub
rorb
xchg
xchg
movsb
loope
pop
loopne
cmp
jbe
xchg
add
daa
pop
addl
outsl
daa
insb
mov
fidivs
adc
pop
mov
lcall
pop
test
push
in
jmp
sbb
test
inc
nop
inc
pop
ret
pop
sarb
pop
push
les
adc
mov
loope
mov
dec
adc
xchg
into
sub
sarl
mov
loopne
pop
mov
loope
or
push
fidivrl
lods
dec
mov
into
push
xor
push
mov
adc
mov
push
ja
das
mov
adc
push
sub
mov
loopne
xchg
cmpsl
and
loopne
adc
jecxz
stos
jmp
into
lds
lods
cmc
inc
inc
inc
add
cli
cs
loope
inc
icebp
mov
scas
sub
pop
test
sbb
mov
sbb
jb
push
cmp
jecxz
xchg
cmp
outsb
mov
xchg
jl
sahf
push
pushw
das
pop
mov
mov
in
dec
mov
mov
sbb
mov
aas
lcall
test
add
lods
ljmp
sbb
movsb
outsl
fisubrl
mov
xchg
pop
pop
lcall
xchg
xor
xchg
add
in
mov
push
add
cli
icebp
push
add
out
inc
adc
dec
bound
rolb
pop
lret
ljmp
out
inc
add
pusha
mov
into
je
mov
add
pop
cs
enter
jbe
mov
push
mov
pop
inc
cmc
imul
lcall
movsb
mov
push
adc
jb
dec
es
lcall
jo
andb
fnstcw
cmp
fs
pushf
ret
add
cmc
leave
mov
roll
mov
scas
mov
cmp
mov
sub
out
pop
cmp
sub
or
fcmovnbe
outsb
add
mov
mov
push
ret
and
xor
mov
stos
jnp
lock
jecxz
xor
adc
cmpb
push
fbstp
xor
mov
fsubl
pusha
int3
mov
xlat
aam
ret
mov
test
shlb
les
das
les
insb
gs
hlt
and
jg
je
mulb
pop
mov
dec
fdivrl
dec
lret
sbb
fcomi
adc
jp
fs
out
inc
hlt
mov
fiadds
cmp
std
repnz
adc
add
xchg
sbb
lods
outsb
push
jno
pop
mov
push
aam
es
fnstcw
stos
xchg
daa
push
inc
cmp
dec
int3
and
adc
scas
frstor
adc
ss
mov
adc
jecxz
and
add
loop
and
adc
xchg
in
cmp
adc
jle
xchg
push
ds
into
pop
mov
loopne,pn
inc
inc
mov
lcall
cmp
insl
aas
jno
xorb
mov
inc
cmp
imul
test
aam
movsl
cmpsl
mov
pop
mov
addb
mov
push
cli
xlat
stos
stos
push
xchg
stc
adc
pusha
cld
mov
push
push
mov
pop
mov
stc
ljmp
les
push
adc
xchg
in
cmpsb
into
inc
loopne
and
mov
mov
xor
xor
int3
shlb
cmpsb
add
mov
mov
jle
subb
inc
mov
lahf
iret
jb
and
sbb
repz
pop
mov
rcl
imul
lock
cmp
push
fidivs
sahf
sarl
jg
mov
push
sub
push
sbb
and
or
jbe
std
push
push
mov
aad
pop
inc
push
push
leave
mov
jp
xor
pop
dec
jecxz
cmp
fld
ljmp
sub
push
pushf
ret
push
jle
gs
stc
xchg
subl
mov
cs
adc
mov
clc
sbb
ficoml
mov
adc
popa
inc
aad
outsl
sbb
mov
add
add
xor
mov
dec
dec
add
add
je
and
pop
xor
mov
jns
arpl
cmp
in
mov
gs
sbb
mov
stos
push
aas
test
sub
dec
sub
negl
outsb
inc
and
lcall
rcl
mov
sbb
fisubl
inc
pop
push
sub
mov
in
popf
jo
insl
test
cli
dec
sar
enter
fdivr
cmpsb
cwtl
sub
fadd
popa
pop
and
sub
sub
push
enter
arpl
mov
sbb
jmp
loop
fmuls
add
pushl
ret
ret
js
dec
cwtl
mov
mov
xchg
aad
dec
rclb
or
dec
xor
xchg
mov
cmp
into
sarl
je
lea
cmp
mov
pop
pop
mov
les
adc
jno
jg
pop
cmc
out
mov
jb
mov
cwtl
sub
pop
test
into
ja
cmpl
test
sbb
push
das
cmp
scas
ljmp
ret
push
xchg
add
addb
dec
stos
movsb
push
pop
mov
jae
xchg
cmpsb
push
mov
hlt
iret
mov
loopne
cmpsl
notl
inc
call
gs
push
jnp
pop
das
aam
xor
out
in
jp
stos
dec
rcll
cmp
enter
enter
test
pop
mov
xor
add
jo
out
out
adc
ljmp
pushf
xchg
imul
sbb
pop
sbb
mov
dec
int3
sbb
push
adc
jb
xchg
cmp
sub
mov
jo
adc
hlt
cltd
lahf
cwtl
cmp
rcrb
cmp
test
or
jne
arpl
or
jno
fcmovb
mov
sub
incb
cmp
cmp
xor
mov
jbe
lret
and
ret
or
insb
clc
lret
imul
fucomip
call
std
inc
jne
push
xchg
lcall
movsb
sbb
pop
adc
jp
subb
or
xor
cmpsb
lret
gs
push
jae
mov
cmp
mov
sarb
loopne
mov
jb
arpl
inc
mov
sub
add
pop
int
sbbb
push
fiaddl
loop
popf
xchg
jl
jecxz
mov
mov
dec
inc
divl
add
loopne
adc
cs
add
insl
and
bound
test
push
push
xor
clc
rorb
ficoml
movsl
out
clc
in
mov
sub
cmp
in
cmp
or
pop
cmp
mov
lret
add
scas
add
iret
inc
jae
adc
lahf
ds
fdivs
or
and
testb
pop
notb
leave
jg
mov
js
movsl
in
jo
movb
cmpsb
in
iret
jg
shlb
aam
lret
mov
in
lds
dec
xor
jp
fnstenv
inc
push
test
push
jmp
push
inc
mov
mov
fwait
xor
adc
cld
jge
mov
jecxz
adc
in
inc
cli
out
outsb
outsb
test
outsb
push
js
and
fwait
lcall
dec
cmpsb
bound
mov
int
mulb
jmp
sbb
cmpsl
xor
inc
adc
sti
mov
xchg
xor
rcrb
arpl
or
fwait
shl
mov
out
adc
pop
push
adc
xchg
and
add
sub
and
push
xor
adc
addr16
je
mov
int3
aas
xor
pop
insl
sbb
push
das
pop
push
jg
push
push
jmp
fcomps
dec
cmovae
stos
or
sub
in
pavgw
push
arpl
test
jle
std
jecxz
rorb
movsl
fsubl
fucomp
add
les
mov
mov
dec
mov
xor
sbb
ret
cmp
push
mul
and
hlt
leave
sub
cmc
push
sbb
mov
push
inc
pop
mov
mov
add
inc
sarl
cmp
cmp
fyl2x
test
subl
push
stc
sbb
icebp
dec
cs
xor
xor
jmp
push
clc
stos
kmovw
enter
xor
inc
xchg
ds
lret
jmp
jmp
xchg
ds
sbb
in
adc
ja
jo
icebp
xchg
insb
pop
std
lods
mov
pop
shlb
lret
jecxz
push
js
int
loopne
pushf
sub
pop
adcb
scas
xchg
pop
jge
sub
call
ror
imull
decl
mov
xor
jb
sti
sbb
cmpsl
mov
mov
mov
movhps
and
sbb
push
cmp
pop
enter
imul
rclb
movsl
popa
xor
test
punpckhdq
adc
pop
inc
bound
in
or
pop
sahf
in
mov
inc
xchg
push
add
idiv
xchg
icebp
push
shlb
xor
jle
mov
into
sbb
dec
mov
xchg
loope
dec
pop
inc
ret
cmpsb
leave
push
imul
addr16
repz
mov
jmp
dec
dec
fsubrl
test
xchg
add
movsb
mulb
pop
mov
or
fldt
or
inc
std
jnp
jp
jg
jge
mov
fnstenv
dec
or
adc
loop
popf
mov
push
roll
xchg
aad
jge
mov
inc
call
add
cmp
mov
xor
out
dec
sti
repnz
sub
outsl
cmpsl
pop
push
dec
rorl
push
add
push
lea
sbb
lret
cs
dec
incl
ret
mov
in
orl
xor
pushf
xacquire
stos
mov
sbb
subb
jp
cwtl
nop
mov
in
adc
scas
adc
xorb
repz
dec
or
clc
cmpsl
xchg
xor
fwait
sbb
jl
or
jl
mov
xor
mov
and
lock
bound
call
mov
mov
clc
push
das
hlt
add
arpl
idivb
data16
inc
stc
sbb
in
in
test
sarl
out
shrb
xchg
in
mov
inc
pop
xor
clc
xor
push
pop
add
out
jae
dec
lret
sbb
sarb
addr16
cmc
push
mov
jle
push
mov
dec
out
mov
fchs
push
pop
bound
std
mov
mov
inc
inc
das
in
dec
into
out
push
les
mov
jl
ret
imul
dec
dec
rorb
dec
outsb
ljmp
adc
pusha
pop
shll
inc
shll
stos
sarl
jb
ret
int
fcom
aaa
or
dec
add
js
mov
push
xchg
push
ja
lret
mov
or
or
add
adc
xchg
cli
jp
fcoms
insl
data16
sarl
into
inc
inc
outsb
xor
lods
cmp
scas
fsubrl
pushf
pushf
mov
dec
call
xlat
xchg
xlat
popf
mov
pusha
xlat
mov
jb
lods
imul
test
dec
lahf
adc
add
mov
mov
lds
xorl
add
fsubs
scas
cmp
or
jo
sub
daa
int3
aad
dec
inc
sbb
mov
xchg
daa
dec
cs
sbb
pop
test
test
cmp
bound
jbe
fwait
movsl
outsl
aam
fwait
sbb
rcrl
in
out
adc
ficompl
stos
mov
cmc
cmp
xchg
movsb
fwait
cmp
cmpsl
nop
xor
stos
sti
lcall
lahf
pavgw
inc
sbb
pop
int
dec
cmp
jmp
sub
orl
pop
mov
or
repz
cwtl
xchg
cmp
stos
loope
cmp
xor
mov
jbe
push
call
jo
jmp
push
pusha
mov
fisubs
push
jmp
fsubs
and
xchg
mov
popa
mov
cmp
push
out
dec
push
icebp
xor
fdivrs
lea
loope
stos
sbb
hlt
jle
pusha
icebp
inc
xchg
fwait
mov
inc
dec
pop
leave
mov
push
ffree
xchg
dec
scas
insl
pop
cmp
mov
in
stos
pop
pop
mov
inc
dec
movsb
cltd
sbb
xchg
push
pop
pushf
jns
adcl
das
lock
fnsave
sbb
cltd
test
jmp
andl
jne
outsb
test
out
mov
test
mov
bound
sub
iret
inc
push
stos
imul
movsb
sbb
add
dec
cwtl
push
xchg
xchg
lock
mov
aaa
push
pop
pop
or
add
arpl
xchg
cmpsb
pop
cmp
fs
cmp
fwait
cwtl
stos
cmp
lret
cld
sbbl
subb
fcoml
aad
jl
mov
dec
xchg
adc
dec
or
mov
hlt
sub
leave
lcall
roll
adc
jns
sbb
and
out
dec
xchg
mov
aas
mov
loopne
xchg
mov
pushf
or
pop
mov
negb
add
movsb
fisubrs
jnp
imulb
sbb
xchg
jne
inc
sub
idivl
roll
sti
sub
push
cld
mov
lea
mov
shll
jbe
lods
adc
in
push
fmuls
mov
jl
push
loope
test
xchg
cmc
mov
out
jp
adc
inc
add
ja
scas
das
mov
lods
test
lret
or
cli
les
push
mov
gs
add
aad
push
mov
add
adc
jge
lret
push
push
and
outsb
loopne
cmpl
arpl
repz
data16
mov
and
fsubs
repz
int
popf
mov
dec
sbb
adc
or
adc
pushf
int3
cltd
dec
or
xlat
fimull
xor
enter
jle
or
sub
sbb
xor
and
push
inc
cmp
pop
push
in
popa
outsb
mov
jo
xchg
out
or
lahf
frstor
xor
sti
scas
cmpsl
adc
and
lock
cmc
loope
push
fistl
xor
aaa
mov
ds
fucom
mov
xchg
mov
xlat
pop
push
mull
fs
das
mov
in
pop
fisubs
cmp
mov
sbb
ja
mov
mov
mov
cld
mov
les
in
in
leave
dec
push
dec
jge
sbb
ds
add
call
dec
mov
adc
lcall
divl
ror
rolb
dec
adc
ja
adc
decl
or
pushf
ss
mov
mov
les
xor
je
fadd
lods
fists
in
cwtl
or
mov
mov
pop
xorb
fnsave
pop
rorl
dec
aam
es
xchg
test
icebp
shrl
aaa
mov
jg
mov
adc
jo
pop
fmul
imul
mov
pop
add
push
data16
call
pop
ja
ret
cmp
xchg
add
dec
add
rorl
aad
arpl
shl
sbb
hlt
cmp
ss
mov
sbb
pop
cld
das
repz
jno
cmp
or
jae
push
nop
sub
push
mov
lret
mov
inc
adc
xchg
adc
sub
inc
sub
push
rorb
pop
in
dec
repnz
into
mov
push
subl
adc
scas
add
mov
inc
mov
mov
mov
jg
lock
adc
outsb
shl
ret
aas
aaa
popa
adc
clc
gs
stos
insl
mov
int3
popa
mov
lods
inc
jns
dec
or
or
outsl
push
lea
add
adc
sbb
int
fisubrs
adc
sbb
sbb
mov
das
pop
movsb
arpl
cmpsb
xor
jecxz
lock
mov
or
add
sahf
adc
or
or
xorb
pop
dec
mov
test
repnz
cli
fcoml
cmp
sub
sub
sub
push
jl
cltd
dec
or
ret
sarl
mov
or
push
in
jo
lret
cmp
jg
ljmp
fucomp
pop
test
shlb
ljmp
cmp
cwtl
into
lods
negb
mov
sbb
repnz
js
and
scas
stos
mov
cmp
cmc
dec
and
test
cmpsb
jl
popa
lods
outsl
daa
clc
add
jl
and
jl
adc
popf
lcall
rcrb
daa
mov
in
mov
push
mov
jecxz
repnz
add
and
test
addl
movsl
scas
in
add
pop
out
sbb
xchg
pushf
into
je
loopne
mov
pop
xor
mov
inc
dec
cmp
shr
cmp
fnstcw
mov
pop
sub
xor
cmp
mov
in
mov
lahf
pop
scas
push
dec
gs
out
sub
mov
subl
idivb
shrb
repnz
outsl
xor
js
test
inc
scas
in
int
adc
jmp
jl
and
push
pop
sbb
dec
cwtl
push
outsb
repnz
in
sub
xchg
and
outsl
ffree
std
pop
insb
or
mov
mov
repnz
cmc
ret
add
jmp
pop
shl
shr
xor
add
inc
jbe
sbbb
xor
mov
rol
out
in
push
xchg
add
cmp
jecxz
aas
out
cwtl
adc
pop
push
mov
loope
xchg
daa
push
popf
adc
ficoml
das
shrl
pop
pop
loop
aas
push
inc
cmc
fldcw
adc
jbe
fadds
aas
popa
clc
js
insb
lods
xchg
jns
lcall
pusha
add
xchg
shlb
ret
jl
lret
fwait
sti
and
subb
mov
cmp
or
cmpsb
xor
ret
mov
sub
bnd
cmc
pusha
sbb
or
ss
jmp
mov
mov
add
test
sbb
push
js
cmc
sar
pop
idivl
insb
aaa
pop
ss
bound
inc
arpl
add
mov
sub
pop
lret
test
xchg
push
cltd
ja
into
push
sbb
pop
dec
inc
pop
cld
push
sbb
lret
popf
in
xchg
popa
adc
in
getsec
es
xchg
daa
sub
and
test
fwait
sub
sbb
insb
push
mov
fdivr
bound
or
sbb
sbb
clc
fmul
or
idivl
bound
push
inc
repnz
jl
mov
and
scas
test
insl
push
add
insb
cmova
or
fcomps
sbb
fcmovu
dec
push
fisubrl
sahf
imul
and
push
or
out
repnz
dec
test
out
fs
sub
inc
mov
and
jg
je
ss
loopne
jle
mov
xorl
aaa
lock
inc
cmp
les
test
dec
insb
jp
pop
push
loopne
rclb
lahf
cmpsb
xlat
arpl
mov
and
in
push
pop
sub
loope
int3
mov
subb
cmp
std
sar
mov
inc
jns
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
test
lret
adc
jp
repnz
push
sbb
pop
incl
into
test
out
sbb
shrl
xor
ja
and
lea
jl
std
mov
into
pop
in
push
inc
xor
dec
rcll
push
stos
cmp
pusha
in
fildl
out
ss
clc
cli
mov
cmp
fdiv
adc
add
dec
ret
stos
dec
jo
call
js
lcall
out
pop
mov
or
test
notl
roll
movsl
fstps
fmulp
outsl
mov
shlb
std
push
sub
ret
rolb
sbb
fmul
jmp
arpl
iret
jae
mov
rcrb
gs
push
mov
xor
jge
fnstsw
dec
cmp
xchg
dec
sbb
jb
outsl
inc
push
sbb
call
shll
imull
in
andb
aad
or
mov
mov
xor
xchg
mov
xchg
cmc
jns
pop
imul
addr16
push
add
sub
daa
push
loope
or
pop
xchg
sahf
xor
gs
inc
add
cmpl
lea
icebp
inc
orb
pop
in
dec
mov
inc
push
xorl
or
sbb
sbb
jne
sub
add
xchg
and
repnz
pop
lods
sarb
js
and
mov
cmp
rorl
push
xor
aaa
std
iret
xor
mov
rorl
add
mov
mov
mov
and
mov
int3
cmp
leave
lea
leave
xchg
xor
add
int3
or
sub
test
sub
cmp
je
lods
push
push
sub
inc
andl
sub
sahf
lret
repz
jne
or
or
xor
mov
insl
aaa
xchg
hlt
jecxz
and
cmpsb
dec
ss
fcompl
push
add
mov
adc
adcl
mov
rcrb
aas
test
adc
sti
sbb
dec
xchg
mov
push
cmc
into
xor
test
jmp
cmp
cmp
jno
imul
jmp
adc
fisttps
pusha
pop
push
xchg
gs
sbb
mov
mov
nop
pop
xor
xchg
negl
inc
xor
pop
je
pop
push
inc
loop
cmp
pop
test
ds
inc
test
and
inc
lds
and
adc
leave
cltd
pop
clc
pop
mov
test
mov
repnz
repnz
push
or
sbb
iret
fcmove
fdivp
mov
jmp
push
jnp
ljmp
push
lret
push
and
mov
dec
cmpb
mull
cmp
push
aaa
mov
cwtl
nop
jle
pop
iret
movsl
out
inc
inc
pop
loope
insl
inc
insl
cmp
std
inc
pop
mov
es
mov
lock
rcl
lea
scas
xchg
pop
add
popa
mov
shll
xlat
aam
repz
dec
cmp
sub
cmp
jns
mov
test
out
cmc
rorl
xchg
mov
pushf
imul
aaa
adc
sub
rcrl
call
rorl
dec
mov
mov
or
sub
std
pop
icebp
sbb
movsb
pop
add
fdivl
push
jecxz
lahf
jbe
push
in
inc
dec
lret
outsl
ja,pt
push
jecxz
sti
sbb
data16
dec
push
add
mov
dec
inc
jle
add
xor
push
or
cmp
add
nop
push
pop
lcall
hlt
out
scas
jge
loope
sbb
jnp
shlb
pop
xor
loopne
jae
mov
int
inc
enter
mov
push
into
mov
pushf
inc
stos
push
pop
add
mov
mov
aad
xchg
xchg
jmp
xlat
lret
push
pop
rcrl
inc
into
inc
mov
lods
iret
xchg
mov
clc
push
dec
jae
int
pop
and
mov
add
push
orl
mov
or
cmp
or
sbb
insb
xchg
fwait
xor
lods
dec
jo,pn
roll
fldenvs
call
iret
test
mov
adc
lods
and
sub
neg
inc
frstor
fnsave
and
pop
mov
icebp
jecxz
sahf
mov
arpl
push
outsb
mov
push
add
lret
mov
arpl
add
cli
mov
ja
mov
test
out
out
cmp
sarb
jno
jns
xchg
pusha
icebp
shufps
lcall
xchg
inc
int3
pop
push
pop
mov
jge
sbb
dec
stos
mov
aad
cmpsb
or
sbb
cmp
das
pop
jecxz
add
pop
mov
test
push
mov
bound
sar
cld
pusha
shrb
xchg
fwait
jecxz
push
movsb
pop
mov
dec
pop
sbb
rcll
sbb
jg
push
scas
and
push
mov
int
or
pop
std
dec
ja
pop
lahf
rclb
sti
jno
out
sub
mov
js
push
pop
loope
ds
filds
subl
mov
arpl
jb
xchg
outsl
les
aas
inc
mov
popa
in
sub
adc
sub
xchg
jnp
in
das
cmp
xchg
icebp
jmp
mov
mov
add
stos
imul
cmp
ja
aam
pop
adc
outsl
and
popf
stos
ret
outsl
ja
enter
push
mov
sbb
daa
pop
popa
mov
mov
jecxz
ljmp
lret
or
out
fisubs
cmp
mov
ss
inc
sub
addb
jae
dec
pop
test
inc
add
hlt
test
cwtl
adc
push
inc
cmpsl
mov
cli
xchg
push
das
mov
fmul
sbb
jle
cmp
fcoml
push
xchg
or
jne
arpl
dec
cmp
and
push
fdivs
into
mov
dec
xchg
push
insl
cmc
test
test
cmc
aas
nop
push
mov
divb
cmp
mov
hlt
dec
jge
xchg
add
pop
insl
cmpb
pop
shrb
pop
out
in
aam
nop
outsl
and
inc
ficoml
jecxz
aam
lret
sti
mov
xchg
orl
and
call
cmpsb
inc
jg,pt
pop
jmp
lret
pop
jns
mov
adc
push
call
add
mov
pushl
dec
jl
lds
nop
arpl
sbb
ss
clc
jns
lcall
and
adc
cmp
push
push
add
outsb
xor
add
inc
inc
out
in
daa
shr
jl
aam
bound
aaa
push
xlat
cmp
adc
mov
testl
mov
mov
sahf
inc
cmp
xor
and
into
pusha
jbe
scas
or
pop
adc
mov
add
bound
mov
addl
and
call
jno
dec
sub
dec
cld
cmp
jecxz
pusha
mov
es
shrb
sub
js
jl
mov
cmp
sbb
ja
inc
adc
jmp
out
cmp
adc
fistl
imul
out
sbb
and
movb
push
rcr
out
arpl
ret
adc
int
xor
in
andl
mov
mov
in
jnp
cmpl
insb
fucomi
test
xchg
into
or
mov
jge,pn
mov
sti
lock
push
int
lea
cmp
dec
js
add
push
inc
shrb
arpl
pusha
mov
ret
cwtl
scas
std
mov
jns
and
mov
adc
loopne
ficompl
cmp
lods
push
xor
jb
rcll
aas
or
fcmovnb
push
cld
lock
repnz
cmc
int3
jge
je
jbe
shrl
xor
test
sbb
out
or
ds
sbb
xchg
loop
pop
sub
dec
push
test
imull
mov
ss
jg
xor
push
call
adc
shl
or
adc
scas
push
insb
dec
push
mov
xchg
stos
popw
lret
in
inc
daa
and
std
or
xor
inc
dec
dec
pop
aas
out
jecxz
mov
mov
add
mov
sub
pop
cmpsb
sub
mov
sub
mov
fldl
sub
pop
dec
mov
fcomp
rorl
xchg
insb
add
adc
mov
push
stos
aad
jecxz
lcall
pop
jnp
mov
jge
and
add
imul
jnp
mov
cli
xchg
iret
dec
jmp
outsb
repz
pmaxsw
into
inc
mov
test
pusha
add
test
xor
fnstcw
xor
bound
movsl
sbb
inc
inc
xlat
mov
rolb
cmp
or
xchg
in
es
mov
fidivl
leave
cltd
or
jg
sub
stc
mov
jno
call
push
inc
cltd
aad
pop
sbb
mov
out
sub
imul
movsb
shll
or
inc
cmpsb
into
popa
jg
adc
and
ror
movsb
fistl
xor
int
addb
sbb
xchg
movsl
arpl
mov
insb
adc
in
mov
xor
mov
jns
jmp
push
push
stos
std
ds
xor
sahf
orb
sbb
and
cmp
jg
les
adc
xchg
ljmp
aam
jo
popf
lds
cmpsl
push
outsb
loop
jbe
dec
xor
out
add
je
inc
xchg
sbb
inc
pop
nop
in
push
loop
aam
xor
push
idivb
int
sub
pop
pop
sub
xchg
je
in
jge
push
push
jecxz
daa
loop
jb
movsb
shll
xchg
push
xchg
cmp
bound
inc
repz
dec
push
roll
shlb
push
sub
out
pop
push
add
negl
negl
cltd
jmp
jb
aad
lods
aaa
andl
mov
xlat
std
cld
gs
fadds
mov
mov
mov
lahf
mov
or
mov
or
repz
idivl
sub
movsl
jle
aad
ret
sbb
xor
xchg
shrb
and
cmpl
xchg
ss
shr
push
shl
pushf
jae
pop
pop
xchg
sbb
int3
nop
or
test
xchg
pop
sub
and
inc
dec
sub
push
aad
aaa
jns
jne
jno
fdivrp
clc
add
stc
lds
xchg
and
adc
jge
sbb
jbe
dec
and
lods
adc
pop
aam
in
sbb
jnp
sbb
jp
fucomp
invd
jmp
xchg
mov
or
imul
ja
lods
mov
nop
push
sbb
repz
ficoml
jecxz
lcall
je
jle
mov
dec
mov
call
and
lds
sahf
push
jae
xchg
nop
push
dec
ss
stos
scas
stos
scas
cltd
pop
mov
setne
jno
leave
xor
insl
mov
xchg
lods
shll
bound
sbb
pushf
mov
push
cmp
outsb
add
ret
imull
out
lret
ss
out
stos
aaa
add
jbe
ljmp
xor
jnp
or
jae
cmpsl
fists
xchg
xchg
sub
cmc
in
mov
sbb
scas
test
lds
or
sti
add
mov
push
or
jno
call
jae
repnz
stos
fs
sbb
pop
jb
xor
jne
push
loopne
pop
mov
dec
dec
addr16
sbb
pop
gs
sub
popf
lret
lret
push
pop
loope
mov
lcall
xchg
ret
scas
mov
sub
or
add
cmp
lock
jmp
ljmp
iret
fwait
xor
jge
jge
push
and
jno
loop
or
mov
cmp
dec
mov
add
das
jp
jmp
mov
scas
jg
ljmp
pushf
test
outsl
in
bound
jne
cmpsb
std
aaa
sbb
xchg
sarb
daa
in
jle
adc
mov
mov
add
sub
and
sti
je
push
dec
and
ret
and
push
or
incb
and
lret
add
xor
test
jg
or
enter
inc
aam
add
pop
negb
mov
add
testb
mov
xchg
rcr
adc
in
and
or
xchg
in
popa
jmp
enter
rcrl
push
adc
xor
add
ja
into
fistpl
adc
dec
ljmp
jmp
jns
clc
adc
data16
add
pop
repz
in
xchg
or
sub
jl
mov
fwait
jg
or
push
jecxz
xchg
loopne
movsb
cmp
sub
sbb
or
shr
xlat
xor
mov
add
in
add
mov
dec
arpl
andb
xchg
inc
jo
jg
sbbb
mov
call
push
in
xchg
and
jg
push
cmp
inc
jl
push
lcall
addr16
std
std
test
jle
mov
scas
and
ja
int
xor
adc
bound
inc
mov
test
pushf
push
movsb
mov
sub
jg
dec
mov
jb
mov
outsb
arpl
or
adc
ljmp
pop
pop
outsb
cmpsb
inc
jge
insl
sub
xor
sub
adc
sbb
mov
mov
aaa
xor
mov
rolb
lcall
out
out
adc
into
sub
add
and
sub
and
lahf
in
push
jne
subl
mov
mov
xchg
aam
and
xlat
dec
adc
rcll
cmp
js
lahf
mov
in
aad
sub
js
dec
xor
mov
shrb
dec
ljmp
mov
std
dec
push
dec
cld
cs
xchg
cmp
pop
test
push
pop
mov
je
pop
sarl
and
pop
xchg
lea
dec
mov
fldl
mov
dec
std
testl
push
popf
pop
and
repnz
inc
jne
mov
sbb
xchg
sub
std
dec
into
out
nop
pop
dec
aaa
adc
and
sbbb
jo
add
sarl
cmp
mov
ljmp
mov
xchg
rcll
sbb
mov
or
xchg
pop
jo
and
cmp
in
mov
xchg
fsubs
jp
dec
ret
test
push
test
sbb
rorl
cs
add
push
shrl
inc
add
in
push
je
jo
cmc
and
hlt
sub
outsb
jge
pop
aam
jbe
mov
pop
cmpb
cmp
call
mov
mov
mov
cmp
ljmp
in
xchg
idivb
insl
pop
push
dec
and
popf
pop
outsl
into
jno
xchg
sub
shrb
or
xlat
pusha
sbb
xor
shl
jne
ss
rcrb
in
mov
mov
push
xchg
inc
push
sbb
dec
push
pop
add
flds
mov
sbb
pop
mov
xchg
loope
bound
xchg
fistl
ljmp
adcl
stos
xchg
adc
cmp
lret
and
aaa
xor
xchg
outsb
addl
pop
cmp
push
cmc
mov
cmp
fbstp
rorl
mov
inc
jo
push
xchg
xor
sbb
mov
jbe
ds
lods
popa
imul
cmp
push
fwait
outsb
rol
insb
movsb
scas
pop
fs
fstpt
test
imul
rcrb
dec
inc
pusha
aad
xor
push
xchg
shll
pop
shlb
push
sub
mov
out
push
aaa
insl
jnp
lods
test
pusha
into
add
and
push
bound
mov
insb
pop
in
or
flds
inc
xchg
jno
fdivrl
js
jle
in
popf
lea
hlt
mov
cld
dec
nop
xor
cli
sbb
mov
cltd
adc
sbb
mov
sbb
and
sbb
mov
and
icebp
push
imull
rol
loope
sub
shrb
push
xor
push
push
insl
out
push
gs
cmc
inc
loopne
mov
cmpsb
mov
dec
or
or
jmp
es
jns
int3
dec
xor
inc
pop
fs
and
std
cmp
rorl
mov
push
addr16
mov
in
cmp
fstpt
decb
in
jle
dec
sbb
inc
mov
movsl
cmpsb
fs
jbe
lcall
dec
shrb
cs
xor
enter
inc
bound
das
push
sbbl
movsb
dec
dec
cmp
inc
and
sub
ss
cmp
add
in
enter
xchg
and
pop
add
xchg
jne
adc
inc
sbb
sub
lret
mov
push
lret
nop
jne
sar
xchg
add
mov
ret
xchg
imul
hlt
xchg
icebp
xor
dec
sbb
les
pop
mov
cli
mov
mov
aaa
popf
sbb
and
stos
mov
lcall
mov
loope
out
addb
jo
addr16
cmpl
jmp
jae
nop
jmp
lods
sub
cmp
xor
jmp
decb
lock
mov
test
xor
mov
push
call
loop
mov
in
lods
cmpsl
lcall
mov
add
xlat
jbe
add
dec
xor
inc
cmc
mov
faddl
pop
xchg
scas
das
mov
ds
ljmp
aad
jno
shrb
popl
mov
lea
repnz
je
lcall
mov
inc
pop
addr16
jmp
fadd
test
mulb
ficompl
cltd
sub
mov
insl
nop
jmp
pop
pop
enter
sub
leave
imulb
imul
mov
into
cld
scas
pop
jmp
sti
test
dec
jmp
inc
mov
ret
fnsetpm(287
xor
outsl
sub
outsl
sahf
xchg
mov
add
adc
loopne
pop
jl
or
mov
std
mov
popa
cmp
adc
loop
push
xchg
push
jo
std
xor
mov
dec
jnp
scas
ja
pop
mov
pop
mov
out
out
jno
cmp
inc
rclb
test
ljmp
enter
jmp
arpl
scas
or
jle
cmpsl
sti
pop
arpl
mov
dec
sbb
das
incl
iret
enter
sub
dec
push
les
out
adc
aas
mov
dec
xor
in
cltd
xlat
inc
mov
cli
stos
jle
pop
jb
test
sti
inc
or
fdivs
mov
je
sub
mov
pop
add
pusha
xchg
idiv
fwait
mov
jecxz
into
cmpsl
inc
push
test
shlb
sbb
and
fmuls
out
jecxz
dec
push
xor
ja
mov
call
mov
int
mov
enter
xchg
je
iret
cmpsb
lds
jne
sahf
add
jg
mov
popf
mov
enter
push
gs
jnp
sbb
dec
fnstsw
xchg
lods
push
pop
outsl
test
insb
inc
aaa
mov
dec
ja
cmpsl
movsb
icebp
movsb
jmp
in
cmp
jg
dec
dec
mov
iret
lcall
mov
and
divl
mov
mov
popa
stos
jbe
data16
psraw
lahf
sbb
ret
mov
xor
mov
mul
xchg
pushf
sbb
dec
jae
in
push
dec
fdivrp
adc
stos
sbb
cmp
xor
xor
idivb
mov
or
mov
add
push
or
jbe
mov
cltd
fmul
pop
gs
int
jbe
lret
sbb
ds
cld
jae
cmp
ficoml
popf
push
movsl
sbbb
inc
mov
and
and
sahf
adc
fsts
mov
sub
leave
push
xchg
cli
cmp
pusha
popa
out
and
add
xchg
ljmp
mov
fs
cmp
xor
mov
adc
adc
add
jb
xor
enter
pop
cmpb
mov
xchg
lods
xchg
hlt
sarl
jae
push
and
test
fwait
pop
addr16
pop
mov
dec
lahf
cmc
sahf
jmp
gs
pop
jno
sub
jbe
mov
hlt
xchg
stos
gs
insb
aad
xor
sbb
mov
jbe
pop
jl
ds
or
dec
test
push
mov
adc
pop
test
cs
sub
sarl
pop
cmpsl
mov
icebp
add
and
lods
pop
jg
das
shrl
out
movsl
lcall
push
mov
cmc
mov
jl
mov
sub
dec
push
and
arpl
cmp
inc
push
push
out
js
and
mov
xor
bound
push
subl
inc
pop
push
xor
decl
push
js
icebp
mov
dec
jo
fwait
mov
lret
mov
xorb
rol
in
or
mov
fisubs
jno
mov
cmp
mov
popa
ljmp
es
mov
outsb
cmp
sub
arpl
xchg
pop
imul
xchg
shll
testb
mov
mov
pop
add
and
or
fidivrs
in
xchg
xor
push
inc
outsb
mov
loop
inc
out
sub
add
sub
rcr
inc
dec
ja
fs
jl
or
and
adc
or
sahf
lods
push
negb
sahf
testl
out
loope
cmpsl
ds
out
lods
push
fwait
mov
fadds
mov
ret
test
ss
mov
and
add
test
pop
push
mov
andl
outsl
mov
scas
and
frstor
mov
stos
cmp
mov
sarl
or
enter
test
fisttpll
nop
and
std
push
cmp
cmp
or
arpl
mov
scas
lret
adc
pop
sbb
ss
xchg
mov
inc
sbb
pusha
inc
outsl
pop
push
add
add
leave
inc
insb
or
dec
and
lret
call
xlat
push
pop
mov
jo
or
cmp
add
xor
out
pop
aas
inc
cmp
pop
scas
lock
push
or
out
xchg
mov
jo
out
mov
pop
cwtl
dec
mov
les
lea
pop
vsqrtss
xorl
pop
aaa
mov
data16
or
lretw
dec
cmp
aaa
int
xchg
add
nop
cmp
fbstp
lea
xor
insb
cmpsb
aad
cmpsb
adc
sub
iret
inc
sbb
cmp
mov
sub
dec
mov
and
sub
out
dec
xlat
sub
mov
cmp
sbb
add
push
fucomp
int
xchg
dec
stc
outsb
mov
fsubp
pop
sbb
shlb
stc
loope
pop
xlat
daa
jb
dec
cmpsl
aas
mov
sbb
notl
test
xchg
notl
repnz
sbb
dec
and
mov
out
leave
jecxz
lret
stc
jns
cmp
jl
aas
pusha
sub
jnp
dec
popf
adc
xchg
pop
sbb
push
cmpb
cmp
pop
xchg
mov
les
jno
ror
aam
nop
ror
jge
js
inc
cltd
inc
pop
ja
push
mov
imull
test
int
cmp
jae
xchg
mov
pop
subb
shlb
enter
inc
in
sbb
rclb
orb
fsubrs
dec
or
or
dec
js
clc
mov
inc
call
bound
jecxz
in
inc
mov
test
arpl
rep
out
cmc
in
sub
push
rorb
mov
test
push
sbb
stos
mov
mov
xlat
in
cmc
jns
sti
dec
pushf
xchg
stc
aam
testb
mov
ficoms
fsubs
int
jnp
mov
iret
inc
jg
lock
jp
xor
mov
ret
sti
and
push
scas
sti
loope
sub
lds
out
fcompl
popl
dec
xor
add
inc
xor
add
mov
icebp
clc
mov
imul
je
ljmp
cwtl
ljmp
imul
or
sbb
xlat
sahf
xchg
jl
xchg
adcb
loope
fadd
sbb
in
jecxz
jne
push
stc
xor
jg
xchg
mov
lds
pushf
scas
les
cmp
dec
sub
popf
mov
sahf
and
movlps
inc
push
insb
addr16
icebp
movsb
ds
sub
mov
add
lahf
xchg
ficompl
sbb
inc
ret
sbb
lahf
pop
cmc
clc
and
sub
or
inc
cli
mov
fldenv
addl
inc
stc
inc
dec
jge
test
ss
imul
enter
mov
mov
cmp
xor
cmpsb
test
icebp
stos
mov
mov
arpl
sarb
jg
dec
jl
xor
movsb
adc
xchg
hlt
add
leave
pushf
cmpb
hlt
mov
movsl
js
movsl
in
iret
mov
scas
xlat
mov
rcrl
sbb
mov
push
sbb
sub
mov
pop
or
rclb
push
mov
adc
mov
or
jecxz
lea
cltd
cmp
sbb
jns
ret
pop
stos
popa
xor
xchg
in
test
xchg
test
jecxz
scas
outsb
jae
sahf
scas
pusha
mov
dec
repz
mov
jl
ss
dec
cmpsb
and
shll
data16
mov
mov
push
dec
sbb
dec
push
repnz
pop
fstpt
dec
cwtl
out
lret
std
pop
mov
sub
mov
in
popf
lea
mov
cltd
inc
jo
ficoms
mov
push
push
lret
cmp
jmp
movsb
in
fisubs
fs
push
sbb
mov
ja
dec
dec
jl
sbb
ds
sub
add
mov
xchg
clc
cmp
jno
or
cli
mov
cmp
leave
mov
addr16
dec
lds
adc
ss
clc
test
test
insb
adc
loope
or
rorl
lods
clc
or
lea
lds
mov
out
out
sub
sub
pop
and
mov
ds
add
jmp
cmp
pop
rcll
and
dec
or
pusha
mov
mov
scas
and
fbstp
mov
iret
add
xchg
push
aas
adc
lahf
nop
jle
je
cli
adc
xor
jae
out
or
mov
rcll
jb
pop
push
lret
jp
scas
jne
out
inc
pusha
rcrb
mov
ja
es
stos
sub
loopne
rcrl
fisttpl
or
das
inc
decb
fldenv
cmp
arpl
adc
jne
and
xor
outsl
arpl
fcompl
in
inc
or
leave
push
adc
lahf
sbb
je
xchg
test
js
xor
xor
int
ret
movsl
inc
hlt
bound
bound
fildll
push
xchg
cmp
lret
mov
push
popf
mov
daa
inc
mov
stos
cltd
and
and
lret
stos
adcb
outsb
stc
cwtl
dec
jne
jg
cmp
fs
mov
lahf
xchg
cltd
cld
sbb
data16
arpl
inc
insl
fxch
shlb
push
imul
xor
cmc
stos
xor
stos
movsb
test
inc
inc
xor
adc
outsb
push
fcoml
popf
or
cwtl
mov
push
pop
paddusw
or
fisttps
mov
jo
sbb
test
hlt
lea
int3
in
mov
hlt
iret
lahf
je
popa
lea
test
or
enter
movsl
test
mov
xor
es
mov
xchg
fwait
je
inc
out
mov
aad
roll
cmp
rol
mov
mov
stos
leave
rclb
stc
xchg
cmp
fnstcw
int3
xchg
inc
jge
sahf
mov
lahf
jo
or
inc
clc
bound
adc
cmpsl
jl
xchg
xor
aam
outsb
lret
cmp
bound
hlt
adc
repnz
jns,pt
jbe
iret
mov
xchg
movsb
sahf
xor
adc
pop
into
sub
pop
nop
xor
lods
mov
mov
out
and
and
sti
mov
aaa
gs
mov
neg
fnstenv
andl
mov
mov
out
mov
loop
je
mov
enter
fnstenv
iret
pop
stos
push
rclb
cmpsl
out
pop
fimuls
jg
cmpb
subb
das
pop
repnz
xor
cmp
pop
sub
push
pop
cmp
shlb
add
scas
jnp
push
sub
mov
cmp
lods
inc
fldcw
mull
icebp
jbe
das
int
xchg
jbe
sbb
mov
and
or
imul
jg
sub
push
jno
enter
int
testb
icebp
and
push
push
sbb
sarl
sbb
je
dec
movsb
test
adc
and
jne
mov
shl
stos
popf
cmp
push
sub
addr16
adc
fldcw
jle
or
imulb
notl
icebp
sbb
inc
pop
imul
push
lds
push
fstp
mov
incl
andl
dec
in
out
xchg
jge
lods
xchg
andb
xchg
pop
mov
pop
stc
push
sub
pop
sub
mov
je
lods
arpl
jecxz
in
pop
inc
call
inc
jbe
ja
hlt
nop
cmpsl
push
xchg
es
cmp
scas
in
push
push
sub
and
jp
pop
jp
adc
test
push
xchg
je
cmp
jl
mov
mov
sub
xchg
and
pop
and
popa
ljmp
push
je
and
mov
stos
push
inc
adc
cmp
or
inc
inc
pop
push
orb
shrb
adc
xchg
js
push
dec
mov
xchg
inc
adc
add
inc
pusha
mov
js
cmp
aaa
mov
inc
fildl
ret
lret
inc
jp
mov
adc
sub
loopnew
add
roll
mov
popa
and
addr16
adc
out
fisttpll
mov
cwtl
dec
push
aaa
and
fildll
lock
hlt
lcall
xchg
sti
stos
cmp
jmp
sbb
orb
cli
dec
fld
insl
jns
push
xor
dec
lea
dec
cltd
fninit
xchg
pop
and
xor
push
enter
mov
push
inc
sub
incb
mov
js
dec
or
mov
xchg
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
push
aaa
stos
cmc
data16
jp
adc
jp
fwait
imul
pop
lods
jb
hlt
imulb
test
arpl
mov
jne
dec
xor
xchg
mov
xchg
and
jmpw
xchg
sahf
bound
xorb
sbb
stos
in
addr16
outsl
cmc
mov
pop
sbb
addl
or
sub
add
jne
fs
ret
imul
sub
outsl
push
ret
push
and
enter
push
push
mov
jns
inc
push
sbb
inc
mov
or
mov
pop
jns
mov
and
ljmp
fdivrl
outsb
push
push
mov
out
scas
push
dec
loop
adc
inc
jne
cld
dec
arpl
enter
inc
sbb
pop
add
outsl
pop
stos
fwait
sub
xor
add
dec
jne
and
arpl
mov
or
out
aad
and
push
data16
shlb
test
xor
leave
adc
pop
xchg
leave
daa
push
inc
ret
add
sub
or
xor
pop
or
idivb
cwtl
in
cs
cmpsl
cmpsb
cmp
data16
and
pop
push
mov
sbb
arpl
or
in
nop
pop
sarb
pop
push
mov
popa
xchg
jmp
mov
mov
lock
clc
sub
xchg
jns
jmp
adc
pop
cmpsb
pusha
mov
enter
adc
sub
mulb
in
jp
lock
sub
comiss
aam
push
enter
lret
mov
or
mov
mov
or
fisubl
repnz
iret
cld
imul
pop
mov
aaa
lds
cld
fldl
int
orb
and
push
cli
or
sahf
pop
icebp
mov
sub
js
es
faddl
or
inc
seta
adc
lods
adc
aas
mov
mov
mov
enter
mov
inc
and
les
jmp
icebp
mov
andl
shrl
cmpsl
pusha
ficoml
adc
push
or
clc
push
in
test
mov
das
sbb
in
out
push
sub
and
jns
jmp
shl
imul
or
xchg
pop
leave
push
mov
lods
sbb
cltd
xlat
fmulp
repnz
rcr
lret
xchg
jno
mov
adc
hlt
scas
ds
imul
xchg
adc
aad
loopne
fistpl
xchg
mov
or
cmp
subb
inc
xlat
push
inc
scas
repz
fsts
xchg
sbb
mov
out
sub
inc
and
insb
push
or
int
aaa
push
sbb
and
cld
dec
shlb
cmp
stos
xchg
scas
mov
lock
jl
pop
inc
lahf
push
dec
cmpsl
xchg
in
loop
push
out
fcmovb
add
gs
sbb
jo
jmp
xchg
adcb
cmp
hlt
fcomp
mov
arpl
cmp
pop
push
jb
jo
jo
loop
mov
shll
sub
xchg
dec
icebp
mov
cmpsl
rcl
insl
and
pop
mov
lods
push
or
in
mov
repz
call
adc
clc
je
test
cmpsl
jne
push
shll
add
cwtl
dec
pop
xor
push
push
xchg
sub
or
push
insb
loop
pop
sar
out
push
sub
pop
ret
mov
arpl
ljmp
jle
jo
ja
out
sti
add
addl
test
ret
jmp
fisubrs
arpl
insb
stos
ljmp
xor
dec
xchg
loope
pop
pop
scas
fsub
ret
fmuls
and
dec
fisubl
mov
fidivrs
add
stos
dec
mov
call
adc
lods
mov
imul
xlat
sarl
dec
or
adc
cmpsl
insl
ficoms
mov
xlat
inc
or
jge
pop
jne
andl
aad
pop
addr16
imul
and
repz
or
aas
cmpsb
xchg
gs
out
in
add
jmp
jns
adc
xchg
pusha
aas
pop
in
aas
fcomps
pop
push
es
pop
scas
mov
es
out
mov
loope
ja
repz
icebp
test
sub
and
ffree
add
jae
mov
rcll
push
adc
or
sar
xchg
xchg
inc
adc
aam
adc
dec
fisttps
jmp
mov
cmp
cmp
xchg
rep
jp
or
sahf
scas
sbb
or
cli
std
ror
movb
push
push
fdivs
add
xorb
es
dec
mov
and
mov
mov
sbb
pop
int3
xor
xor
and
movsb
je
push
lret
push
inc
pop
xchg
xor
ret
mov
scas
subb
dec
xor
mov
jae
outsb
js
fs
dec
movsb
hlt
jne
dec
insl
push
sarl
sahf
and
and
pop
or
or
push
leave
jae
xor
hlt
pop
dec
sbb
sub
or
push
mov
scas
sbb
xlat
fidivrl
lods
addr16
inc
dec
dec
aas
lock
fwait
rcll
aam
and
jg
popf
mov
in
push
mov
stos
test
sub
negb
cmp
sbb
mov
sbb
loop
and
inc
mov
add
ficoml
pop
stc
xchg
dec
add
or
xchg
add
and
xor
xor
or
mov
xor
or
cli
fnstsw
int
jnp
inc
jne
xor
out
movsb
cmp
pop
je
add
cld
lods
out
aaa
mov
cmpsl
sbb
jmp
push
sbb
sbb
cmpsb
and
jb
jmp
leave
imulb
in
dec
lret
jmp
and
lahf
jno
pop
jmp
clc
dec
inc
push
push
frstor
in
mov
in
outsl
sbb
mov
cmp
aaa
sbb
insl
aad
in
push
dec
into
gs
int
or
inc
repnz
scas
ss
sbb
lcall
sahf
and
xor
inc
fs
jb
add
mov
cld
cs
mov
test
insb
inc
jb
and
mov
adc
inc
lahf
inc
repz
mov
ret
lods
scas
insb
fwait
adc
push
and
inc
add
mov
jbe
lock
out
push
mov
xchg
mov
pop
push
gs
sub
push
cmpsb
or
lret
xchg
push
pop
push
scas
stc
xlat
test
xlat
out
in
sub
xlat
es
sub
push
pop
xlat
inc
cwtl
push
je
in
addr16
fwait
outsb
fxch
int
scas
mov
out
pop
mov
mov
loope
push
sarl
push
lods
and
jb
xor
cmc
out
jae
cld
pop
ds
enter
sbb
lret
movsl
xchg
push
or
or
out
push
and
sti
and
fwait
inc
inc
push
push
xchg
outsl
shrl
adc
or
into
pop
lret
ja
shlb
mov
xchg
sbb
shll
cwtl
inc
jbe
xchg
mov
hlt
or
adc
push
push
mov
xchg
sub
jns
popa
mov
std
and
scas
out
add
sbb
in
and
cwtl
stos
xor
pop
hlt
and
mov
and
aas
push
aas
lock
jns
imul
jg
mov
add
jle
xor
adc
adc
xchg
xor
jp
icebp
mov
mov
hlt
pop
mov
adc
inc
cmp
clc
mov
sub
notb
sbb
dec
mov
stc
icebp
add
or
mov
mov
sbb
mov
xor
notb
jnp
ja
cmp
ret
rorb
pushf
pop
mov
out
jae
fisttpl
rcrl
pop
shll
out
je
insb
dec
or
fstpl
loopne
sbb
cld
mov
xor
xchg
cmp
stc
dec
push
movsb
imul
dec
sbb
mov
push
and
dec
xchg
fistpl
cmc
insl
ret
cs
jge
push
mov
repnz
mov
es
icebp
sub
inc
mov
mov
fistpll
mov
adc
sbbl
repnz
push
outsl
adc
mov
and
popf
mov
dec
test
xchg
das
insb
xchg
aam
inc
and
mov
push
lea
popf
or
dec
loop
sbb
and
xchg
shl
or
fbld
es
mov
xor
cmp
sub
ss
push
mov
lods
pop
cld
inc
dec
scas
jae
cmp
popa
jmp
ret
je
stos
mov
jmp
rolb
or
mov
mov
ret
adc
das
adc
dec
lds
jb
dec
and
les
xor
adc
push
lods
pusha
popa
mov
inc
xor
xor
pop
icebp
shr
push
cmp
xor
or
arpl
xchg
cld
sub
popa
dec
in
movsb
pop
lahf
scas
aaa
sub
add
sahf
dec
int3
sbb
rcrb
sti
inc
lea
xlat
les
scas
dec
in
or
repnz
jnp
sbb
push
xor
sbb
mov
jnp
in
mul
lods
sub
cs
add
test
xchg
add
mov
dec
push
aam
inc
hlt
xchg
mov
fbstp
mov
xlat
mov
popa
mov
mov
jns
adc
addr16
cli
arpl
xchg
lock
xchg
mov
jb
cmp
jnp
jg
in
orl
push
loop
pop
fwait
es
stc
dec
imul
cmp
add
and
adc
ret
push
add
push
sub
cltd
outsb
xchg
dec
inc
cmp
add
push
clc
fcoms
adc
sub
sahf
xchg
ret
cmp
xchg
in
mov
std
jle
adc
out
mov
pop
jp
xorb
imull
clc
ljmp
pop
lea
scas
in
stos
out
subb
mov
cmp
pop
movsl
jl
jle
jge
sbb
pop
jo
mov
dec
add
rolb
cmp
mov
sbb
iret
sarl
int
adc
mov
jmp
add
aam
push
xlat
adc
sub
jbe
cmp
ljmp
jae
xor
adc
pushf
push
inc
insl
jae
shr
shr
andb
jmp
les
aas
push
fisubrs
cmp
nop
sti
in
inc
sub
adc
ljmp
or
or
cmp
ss
mov
xor
xchg
xchg
stc
orb
adc
sbb
push
mov
or
and
inc
and
jle
add
push
xchg
sbb
cmp
js
xchg
es
out
fidivrl
pop
fs
push
cmp
repz
cmp
jns
rcll
mov
in
mov
inc
in
js
or
sbb
pop
sbb
push
pop
inc
mov
add
dec
sub
jg
xlat
outsl
mov
repnz
cmp
sbb
arpl
and
or
mov
add
xor
and
jns
pusha
fwait
stos
mov
inc
pop
data16
jne
shl
sbb
mov
fdivrl
push
pop
fwait
mov
jno
sub
inc
sub
jne
rcll
jmp
ret
fdivl
shll
insb
inc
addl
cmp
out
and
push
mov
addr16
lock
ja
je
int3
cmp
xor
lods
mov
sub
mov
cmp
push
xchg
pusha
pop
ljmp
lret
loopne
mov
scas
xor
dec
sbb
frstor
dec
or
int3
adcl
inc
or
or
jne
dec
mov
stos
leave
sbb
adc
shrl
dec
push
aaa
push
push
out
pop
pop
or
insl
inc
test
imul
push
adc
ds
push
sub
jp
add
push
push
repnz
xor
popf
inc
loopne
and
jl
imul
cmp
mov
test
addr16
adc
in
int
in
std
lcall
test
or
mov
lds
sbb
sbb
adc
cmpsb
mov
mov
orl
faddl
aaa
mov
push
imul
xchg
insb
imul
push
shlb
jge
inc
cs
mov
mov
add
nop
cmp
mov
xor
and
int3
push
xchg
dec
imul
and
push
push
jp
push
insl
sbb
js
out
or
imul
push
add
mov
clc
sbb
mov
sti
sbb
arpl
ds
jmp
cmc
xchg
aaa
inc
xor
mov
pop
xor
dec
mov
sarl
lcall
ds
insl
jl
or
mul
or
in
addb
cmp
movsb
decb
mov
push
adc
fstps
lock
pop
sbb
or
in
mov
jne
es
rcrb
dec
push
mov
push
bnd
test
adc
adc
fwait
hlt
dec
call
mov
jp
ja
arpl
fsubr
movsb
subb
push
das
subb
dec
gs
aam
push
inc
jge
pusha
xchg
jle
pop
dec
nop
nop
adc
movsl
and
dec
push
add
xchg
rorl
lea
mov
xor
and
mov
nop
les
pop
and
or
or
push
jnp
xchg
add
outsb
in
xchg
repnz
popf
pushf
dec
mov
jno
jno
test
or
xor
repnz
or
out
jbe
pop
pop
mov
pop
push
cmp
pop
xchg
jge
dec
push
mov
sub
push
pop
js
shlb
out
test
xchg
lret
movsb
cltd
cmpsl
out
movsb
lea
filds
fs
imul
jle
add
cli
imul
inc
daa
xchg
sub
iret
loop
xor
sahf
or
jp
add
lock
aad
adc
pusha
icebp
push
mov
mov
sbb
out
popf
incl
lahf
lea
out
inc
cld
push
js
mov
xchg
in
sub
filds
leave
mov
out
xor
lcall
pusha
cs
std
es
pop
int
pop
dec
iret
adc
popf
movsl
jle
mov
in
push
sbb
arpl
shll
inc
xorb
or
or
or
jae
out
sbbb
inc
ficomps
mov
pusha
addr16
hlt
push
mov
ljmp
xchg
int
push
rcll
inc
inc
sbb
test
filds
fucomi
stc
or
adc
cmc
sbb
arpl
arpl
dec
stos
sbb
lahf
inc
rorb
dec
sub
lea
fcoml
push
insb
test
test
sahf
xor
mov
call
stc
push
pop
xchg
sub
lea
rorl
lods
cmpsl
rol
xlat
ds
scas
aad
push
mov
cmpsb
fdivl
jl
sub
ret
dec
add
push
cltd
movsb
lods
sbb
mov
xchg
push
es
adc
sbbb
sti
orl
fidivl
pop
sub
cmp
sbb
cmp
cld
scas
and
push
mov
mov
sbb
ret
and
xchg
adc
xchg
sub
aaa
ret
cltd
roll
jecxz
adc
mov
jae
mov
inc
xchg
mov
inc
pop
fbld
adc
scas
dec
jp
add
and
xchg
lods
jge
mov
dec
fwait
outsb
or
aaa
inc
ficoml
adc
sub
pop
scas
lcall
ss
sub
jp
add
flds
inc
sub
cli
adc
mov
cld
je
cmp
in
xor
sbb
pop
inc
dec
pop
push
daa
adc
aad
lea
dec
cs
lds
or
push
addr16
sub
add
xchg
mov
lret
cmc
idivb
jae
rcrb
push
iret
sbb
jo
dec
xchg
mov
into
es
lds
ret
mov
push
ffree
add
xor
inc
jp
sbb
sti
stos
subl
or
aad
dec
cmp
in
mov
popa
adc
sub
adc
repz
xor
stc
sub
dec
xchg
dec
jno
xchg
and
xchg
fimuls
mov
outsb
jnp
pop
out
add
inc
xchg
outsb
dec
jecxz
cmc
jp
mov
mov
rorb
fdivrp
es
or
pop
dec
movsb
xor
jbe
ljmp
mov
sbb
mov
fbld
das
mov
les
mov
push
jbe
pop
push
jp
sub
fcomps
sbb
icebp
push
scas
lds
sub
mov
xor
in
les
cmpsb
xor
mov
jmp
out
gs
ret
bound
ja
add
ljmp
aas
jmp
test
cmp
rol
stc
lret
fwait
cmp
or
xor
leave
cmp
sbb
sub
add
mulb
jae
push
sbb
xchg
mov
dec
ja
hlt
and
xorl
mov
xlat
push
xchg
add
mov
int
or
sbb
mov
imulb
sbb
mov
jp
push
mov
push
out
fwait
sub
and
in
test
xor
xchg
pop
sub
mov
adc
xor
jnp
dec
es
mov
cmp
jp
imul
mov
or
jmp
cmp
or
sbb
out
cmp
and
clc
adc
out
jge
and
in
sub
test
idiv
popa
inc
add
mov
add
dec
subb
scas
inc
pop
xchg
loope
aaa
jl
rcll
jb
or
popa
adcl
mov
dec
cmp
sub
inc
fstl
xchg
cmp
sbb
sbb
jnp
xor
in
push
dec
std
rcrl
mov
dec
insb
pop
add
out
jno
push
cmp
add
sbb
mov
iret
sarl
ss
popa
stos
inc
sub
insb
lahf
in
dec
xor
sbb
dec
clc
or
push
push
cmpsb
aas
mov
adcb
test
push
pop
adc
or
out
inc
sbb
outsb
clc
cwtl
cmp
ds
xchg
xchg
js
outsl
mov
cltd
ret
loope
mov
mov
daa
aad
jge
or
cmp
aad
mov
fwait
inc
push
sarb
addb
std
inc
add
js
inc
pop
rcl
test
inc
test
jbe
sbb
and
cmpsb
cmp
nop
imul
test
add
inc
push
push
mov
push
mov
sub
xchg
add
shlb
popf
test
pop
sub
movsb
or
ja
sbb
mov
mov
jle
cmp
in
pop
xorl
dec
inc
adc
rorl
xor
fisttps
fistl
xlat
mov
rolb
mov
pop
jae
sbb
jl
stos
mov
fdivrl
imul
dec
js
inc
mov
popf
push
lods
sub
hlt
inc
pushf
adc
imulb
xchg
in
cmpsl
xchg
jno
and
add
stos
xor
sub
repnz
push
pop
xchg
add
out
out
mov
xchg
ret
cmpsb
gs
inc
loope
jne
jbe
xor
and
leave
aaa
add
xor
int
repnz
and
lcall
adc
sbb
xlat
mov
cld
or
cmp
in
add
shrb
xor
mov
ljmp
xchg
xchg
or
dec
and
popf
adc
xor
inc
jno
test
repz
outsb
insl
ret
sbb
or
divb
add
mov
cmpsb
int3
pop
adc
shl
imulb
xlat
out
add
stos
jecxz
jne
jg
push
mov
xchg
cltd
sbb
popf
es
outsl
fadds
add
subl
inc
pop
aas
mov
adc
jmp
shll
cmp
fwait
and
loopne
ficoml
mov
das
pop
dec
fwait
and
js
xchg
cwtl
jmp
pop
je
sub
jmp
mov
sarb
ljmp
in
aas
ss
fldt
xor
xor
out
les
jnp
fs
sub
push
daa
cmp
xor
lods
add
xchg
inc
std
push
addr16
mov
fisttpl
add
popa
es
and
xchg
popf
or
dec
insl
add
mov
sbb
lcall
or
cmp
aaa
sbb
clc
cmc
insb
test
vmwrite
cmpsb
stc
xor
cmp
nop
cmp
pop
repz
mov
test
or
test
pop
ss
fldcw
inc
and
jmp
ja
sahf
ds
jge
aas
fisubl
push
inc
pop
jnp,pt
sbb
pop
inc
pop
adc
sub
inc
xlat
mov
imul
ficoml
adc
les
daa
sahf
cwtl
repz
mov
cmp
data16
xor
aaa
out
and
movsb
ret
push
dec
mov
ret
xchg
lahf
rcll
repz
or
js
mov
jmp
popf
or
out
insl
push
push
dec
mov
cli
dec
mov
mov
hlt
xor
xchg
jo
or
enter
push
fadds
fsin
and
repnz
aas
ss
js
dec
scas
in
mov
jb
in
jbe
mov
adc
push
xchg
xor
jmp
add
xor
out
fwait
and
mov
ljmp
jmp
adc
in
repz
fdiv
jg
insl
arpl
insl
xchg
subl
pop
loope
or
cltd
push
push
and
pop
sbb
sub
push
mov
fdivrl
shrl
inc
shl
scas
mov
add
stos
inc
out
pop
adc
ja
jns
setp
inc
adc
mov
icebp
call
into
sub
cltd
mov
add
sub
fidivs
ss
push
xchg
out
sahf
mov
scas
mov
rcrl
fnstcw
cld
enter
mov
test
mov
popf
pushf
mov
dec
jge
add
jnp
in
mov
xlat
inc
in
dec
repnz
sub
bound
push
mov
or
cmp
je
lret
popa
cld
call
cmp
cmp
nop
mov
outsb
push
inc
aaa
mov
cld
push
lcall
cmc
jge
mov
mov
insb
xchg
ds
xor
sub
std
aad
xchg
call
loop
and
rclb
call
add
daa
test
xchg
jae
xor
push
xchg
inc
arpl
das
cmp
xor
js
ss
ret
cmp
in
inc
jo
push
daa
sub
aad
or
xchg
mov
jns
adc
xchg
lret
sbb
cwtl
jge
jne
sub
cmc
xchg
adc
arpl
xchg
cwtl
mov
or
pop
add
test
lock
mov
lods
sbb
imul
pop
adcb
iret
sbb
lahf
jg
pop
sub
jae
xor
call
adcb
mov
insb
jmp
mov
push
enter
popf
iret
sbb
fdivrs
sub
dec
lcall
lods
mov
dec
in
sbb
jno
and
fsubl
add
dec
adc
cmc
test
mov
jmp
fnstsw
lds
sub
push
sub
cmp
out
lods
or
xor
fimuls
jo
mov
imul
popf
std
sbbb
mull
pop
cmp
push
in
hlt
aas
fldl
test
mov
pop
xor
insl
mov
sbb
and
adc
pop
push
scas
ficoms
cld
fcmovnu
insl
gs
xchg
leave
add
shr
cmpsb
ret
and
mov
xchg
shrl
lret
int
fdivrs
jl
pop
mov
sub
adc
mov
adc
mov
jno
jp
daa
and
or
xlat
mov
mov
je
les
cmp
push
jnp
adc
sub
mov
push
scas
icebp
fs
and
fisttpll
faddp
cmc
xchg
enter
iret
xor
nop
jle
xor
ret
inc
cwtl
xlat
jl
add
and
aad
mov
sbb
lock
movsl
push
and
inc
comiss
in
cmc
lret
popf
xchg
xchg
mov
push
mov
insl
jb
inc
movsl
mov
pop
sub
push
push
sbb
loopne
stos
hlt
inc
test
or
or
stc
sahf
lahf
sub
hlt
jae
repz
or
int3
out
faddl
loop
ds
enter
mov
rorl
mov
sbb
push
movsb
and
test
mov
sbb
jecxz
je
ja
xlat
jbe
enter
push
iret
insl
test
add
rclb
mov
loop
mov
lea
mov
roll
add
js
adc
inc
jmp
fldenv
addr16
jmp
ja
xor
inc
dec
movsb
mov
dec
leave
ret
mov
pop
mov
cmp
push
cmpb
push
mov
loop
stos
dec
mov
xor
mov
paddw
in
xor
jb
push
test
pop
addr16
push
jge
call
out
push
mov
enter
adc
adc
sbb
mov
out
jge
jle
scas
sub
lret
dec
int3
ret
push
subl
das
sahf
and
popa
xchg
sbb
scas
jecxz
aaa
cmpsb
lea
and
add
xchg
fnstsw
xor
mov
icebp
or
pusha
push
xorb
push
xchg
mov
inc
dec
insb
mov
or
cltd
sbb
and
movsb
pop
cltd
cwtl
mov
inc
in
dec
scas
sbb
jmp
jle
bound
xchg
pop
pop
shll
fstps
jecxz
dec
pop
add
lret
xchg
jecxz
loopne
lret
andb
divl
ret
in
lods
push
adc
sti
insl
cld
shl
sbb
pop
popf
and
rcll
jmp
fistpl
sbb
mov
cmp
sub
or
xchg
dec
cmp
jg
lret
cmpsb
sahf
int3
mov
adc
aam
xchg
daa
xor
scas
sbbb
lods
or
cmpsl
mov
int3
popa
inc
push
test
or
or
pop
bound
lds
in
pop
cld
dec
stos
outsl
push
and
test
loope
cwtl
aad
push
fwait
out
mov
adc
inc
add
addr16
push
pop
or
sub
testb
mov
mov
cli
xor
inc
mov
push
aas
dec
and
and
sub
xor
and
lods
adc
or
mov
arpl
jb
lods
adc
xchg
sbb
in
sahf
jp
and
mov
leave
ret
or
cmc
lea
xor
xchg
cmpsl
dec
adcl
jmp
lods
pop
push
xchg
ljmp
pop
mov
pusha
faddl
mov
or
mov
mov
xchg
mov
fistl
rcll
sti
shr
insb
mov
and
daa
cmp
lret
and
sbb
stc
fcomi
ljmp
pop
jnp
cld
add
sub
cmpb
mov
int3
mov
push
sbb
lret
jge
xchg
add
xor
enter
and
mov
dec
xchg
sbb
cs
mov
ror
pushf
stos
inc
fisubrl
or
push
xor
std
ljmp
push
into
and
dec
add
xor
sub
rorb
sahf
cmp
ds
push
or
xchg
jo
imul
enter
dec
js
sbb
int
jo
in
lcall
push
sbb
fcoml
cmp
div
lret
nop
in
int
or
cmc
cmpsb
lds
test
xchg
mov
cmp
adc
fwait
and
enter
shll
pop
dec
and
or
adc
out
bound
inc
add
addr16
push
dec
iret
ds
test
xchg
mov
leave
lds
and
dec
jno
jno
stos
lcall
lods
pop
pop
roll
insb
jae
test
pushf
sti
dec
add
add
jno
add
loop
jle
jmp
out
pop
jl
mov
movsb
pop
popf
shl
sub
pop
aam
dec
cli
jmp
adc
mov
outsl
pushf
loope
sbb
aam
xchg
movsb
data16
push
push
xchg
imulb
icebp
pop
jg
das
rol
orl
add
mov
stc
jl
jmp
popf
sub
or
arpl
loopne
jle
insb
xchg
xor
lock
das
fildll
bound
cmpb
jle
js
scas
ds
mov
aas
xchg
int3
aas
mov
mov
mov
and
xor
cmc
sbb
lods
push
imul
add
or
cmp
xchg
cmp
shr
jne
push
pop
aas
out
inc
adc
push
jg
out
fs
test
xor
aad
fnstcw
in
into
or
shlb
mov
repz
mov
xor
lret
scas
ljmp
mov
jnp
or
ss
mov
sbb
cvtps2pi
mov
or
push
ljmp
je
xchg
cld
push
int
insl
stos
test
mov
dec
dec
push
mov
mov
popf
xchg
xchg
adc
test
cmc
sub
mov
add
xor
push
or
xchg
xchg
int
lahf
iret
xor
cli
fldl
cmp
or
jmp
jno
lahf
aad
xor
fisubl
push
pusha
rol
pop
adc
lcall
std
mov
xchg
pop
jb
sub
cmc
out
lods
mov
and
sub
mov
dec
lret
adc
cmpsb
cld
mov
cmc
loopne
stos
cli
pushf
sbb
xchg
mov
jnp
mov
fistps
pop
sub
xchg
rcll
pop
in
scas
rcl
loop
cmp
add
mov
and
jecxz
cs
arpl
pop
xor
inc
add
ror
mov
int
pop
out
jmp
je
mov
rsm
xor
push
lock
ret
jg
lds
xor
sbb
or
push
test
clc
cmpsl
es
cmpsl
orl
xlat
jne
lds
sbb
fwait
and
pop
push
mov
mov
ds
cmc
sbb
push
add
subb
pop
mov
or
push
or
sub
popf
pop
sbb
inc
js
push
popl
jmp
and
lcall
dec
andb
mov
jae
xor
dec
sub
lahf
js
push
or
test
ret
push
add
scas
rorl
or
pushf
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
add
incb
jp
xor
mov
mov
andl
sbb
popf
sub
adc
push
mov
push
outsb
das
adc
outsb
inc
xchg
and
pushf
adc
test
cmc
adc
inc
pop
nop
test
jo
xor
insb
ret
sub
lahf
lahf
adc
frstor
cltd
lods
stc
std
adc
outsl
pop
pop
enter
ljmp
push
dec
mov
add
mov
cmp
push
fbstp
fisubl
aam
xchg
fwait
inc
sbb
xor
loopne
ret
pop
pusha
imul
ds
popa
xchg
inc
je
icebp
adc
inc
fdivs
cmp
pop
inc
repnz
cmpsb
jbe
cwtl
ficomps
inc
popf
cltd
pop
pop
bswap
mov
js
aam
fsts
sbb
std
push
jnp
mov
imul
sbb
mov
filds
add
stc
ds
out
das
cmc
imul
xorb
lret
insb
out
ja
fucomi
fmul
daa
xchg
cmpsl
lret
lahf
sbb
sahf
and
pop
lds
mov
jl
cmpsb
dec
jp
and
cmp
outsb
jnp
lods
int3
addb
lcall
fwait
push
fs
lea
mov
packssdw
jo
stos
adc
mov
pop
cld
fdivl
int
outsl
push
add
rcrl
xor
pop
xor
adc
aad
mov
mov
push
ret
insb
cmpsb
and
cmp
js
and
or
dec
mov
mov
and
push
push
outsl
push
test
and
pop
push
inc
sub
aam
pop
enter
xlat
ljmp
aad
xchg
je
aam
lods
fidivs
in
sub
incb
add
or
imul
jl
cmpsl
or
aam
in
dec
shlb
inc
loope
xchg
js
out
xor
xchg
push
jg
and
xchg
in
xorl
scas
insb
sub
out
mov
sub
push
xor
mov
pop
ret
push
push
ret
rcr
add
je
repnz
fnclex
ret
mov
pushl
in
mov
push
pop
andb
inc
add
into
mov
xor
lods
clc
mov
orl
test
dec
pushf
inc
les
or
xor
pop
std
fistl
lret
mov
cmpsl
leave
cmpsl
sub
out
push
cmpb
int
std
mov
jne
xor
lret
imul
int3
inc
pop
mov
and
pop
cmp
pop
test
popa
cmp
repnz
mov
jno
js
or
loopne
ret
sbb
clc
clc
lods
out
repnz
enter
add
ret
lcall
int3
lods
pop
cmc
shrl
inc
cmc
les
push
lds
push
sbb
pushf
add
test
pop
orl
aam
out
sarl
out
shl
mull
mov
push
push
mov
push
shl
xor
rolb
outsb
int3
repz
aam
mov
int
push
jmp
mov
add
jmp
addr16
in
pop
shlb
sbb
xor
les
loopne
cmp
pop
out
stos
mov
xor
outsb
mov
pop
loop
repnz
cli
imul
enter
cmp
cmpsb
loop
mov
icebp
adc
ja
cmpb
xor
cmc
push
in
pop
mov
mov
xchg
cmp
stos
insb
test
dec
test
aam
lods
adc
jnp
pushl
ljmp
mov
cwtl
test
and
push
pop
clc
sahf
or
sbb
xchg
icebp
mov
xor
icebp
out
and
add
scas
and
pop
je
mov
sbb
or
enter
sub
jo
js
stos
lret
fcmovnu
mov
adc
mov
pop
inc
addr16
inc
jo
stc
cmpsl
scas
ret
jb
stos
mov
sti
add
cld
push
les
mov
bound
out
sub
lea
in
mov
push
loop
sbb
add
adc
out
in
jne
pop
and
leave
cmpsb
addl
adc
mov
movsl
add
nop
pop
lret
out
push
mov
adc
pushf
xor
popw
jnp
mov
loopne
out
fs
pmaxub
leave
sub
jne
leave
push
add
fwait
andl
lret
adc
mov
cmpsl
test
or
mulb
mov
push
shlb
mov
inc
jb
mov
mov
iret
out
stos
test
push
enter
data16
mov
push
sbbb
xchg
lds
popf
xor
rorl
loope
sub
fwait
sub
sub
lahf
stos
inc
and
nop
push
dec
pop
dec
jbe
es
ret
or
adc
orl
outsb
ljmp
lock
sbb
in
nop
or
out
and
aad
adc
dec
adc
js
inc
sbb
sbb
and
sbb
jl
out
hlt
xchg
add
cli
stos
cmp
add
outsl
sahf
adc
shll
sar
sbb
lea
loop
jge
cs
jo
es
fildl
insb
test
inc
mov
pop
xor
adc
in
das
push
add
cmc
cmpsl
stos
adc
add
mov
pop
les
ficoms
hlt
dec
adc
inc
ret
cmp
sub
xor
lea
cmpl
push
adc
jmp
jge
cmp
fwait
inc
mov
repnz
or
ljmp
loope
stc
xor
shll
dec
nop
adc
out
jno
add
push
and
push
dec
outsb
aad
gs
pop
xchg
xor
filds
in
and
mov
fldenv
aaa
mov
lods
in
aas
cmc
adc
xchg
nop
adc
sbb
sti
into
xchg
andb
ja
mov
cwtl
lret
cmp
movsl
or
or
cli
add
shld
pop
sbb
push
and
sub
mov
lods
cmp
ret
int3
and
inc
ret
jns
data16
sbb
push
xor
jmp
gs
cmp
sbb
inc
int3
scas
jp
xorl
jecxz
inc
cmp
xor
mov
add
fsub
jecxz
loope
movsl
dec
imul
cli
out
mov
mov
das
movsb
pushf
cmp
cli
push
cmp
lods
lock
push
dec
jl
mov
hlt
ret
mov
mov
cmc
sub
mov
outsb
jecxz
mov
add
lret
add
enter
frstor
lods
inc
call
fiadds
arpl
mov
jl
dec
pop
lods
lods
add
jbe
loope
sahf
sub
int3
mov
jo
leave
pop
fmul
and
push
xor
icebp
add
subl
mov
test
lds
fistl
fnstcw
cltd
lea
ret
inc
enter
or
shlb
mov
stos
mov
icebp
insl
sti
jae
lcall
jg
dec
leave
outsb
mov
rcrl
and
adc
pop
mov
inc
popf
xchg
inc
sbb
xchg
adc
cmp
fsubrl
xchg
pop
dec
and
lea
xchg
xor
xchg
lds
xchg
sbb
add
jo
xor
or
mov
into
push
cs
and
adc
arpl
mov
xor
loope
jbe
or
ja
fs
mov
stc
mov
data16
cs
jns
pop
pop
ss
dec
inc
jecxz
popa
sbb
int
out
pusha
sti
arpl
push
rol
jmp
je,pt
add
pop
cmc
in
jbe
cmp
jo
or
rcr
sbb
movsb
adc
adc
pop
jae
xor
in
leave
xor
in
or
mov
mov
mov
mov
add
or
xchg
mov
push
cld
cmpb
sbb
stos
insb
movl
std
pop
pop
xor
xchg
xchg
adc
shlb
es
outsl
sbb
mov
out
xchg
pushf
xchg
mov
adc
mov
fcomi
pop
jg
pop
inc
test
mov
pop
ret
lds
or
aaa
call
dec
nop
rorb
call
mov
pop
daa
roll
pop
pop
cmpsb
mov
mov
mov
pushf
hlt
rolb
pop
arpl
and
pop
pop
je
shl
aas
movsb
test
or
fsts
sbb
std
mov
sbb
in
jo
and
out
cmp
bound
sti
iret
outsb
sub
adc
jb
cltd
inc
lods
dec
fadd
sub
and
push
adc
mov
scas
mov
mov
rol
stc
mov
aad
mov
jmp
je
push
dec
test
xor
cmp
and
push
rcl
pop
mov
dec
shr
xor
adc
push
adc
fidivrs
ja
sahf
or
push
inc
dec
insb
inc
pop
xchg
movsb
rep
les
sbb
pop
adc
imul
int
xchg
add
shll
xchg
ret
mov
out
mov
rcll
jge
dec
pop
es
sub
hlt
cmp
popf
sbb
fcos
inc
add
notb
mov
sti
xchg
out
pop
lret
or
mov
iret
rcl
adc
clc
and
call
or
data16
out
sub
stos
mov
flds
pushf
adc
mov
mov
iret
scas
inc
dec
add
cmp
xorb
dec
sub
mov
iret
inc
inc
xchg
pushf
fcmovu
xor
out
mov
mov
imul
jno
not
xchg
adc
xor
and
mov
dec
push
clc
addr16
sub
cli
incb
or
xchg
sub
loope
jecxz
mov
lcall
out
sub
jne
xchg
inc
dec
xor
ret
jle
pop
stos
les
adc
push
jl
faddl
jl
jno
lock
cmp
mov
mov
flds
dec
jne
mov
popf
adc
adc
ret
jb
cmp
pop
sahf
outsb
mov
ds
push
imul
orl
and
mov
mov
rorl
mov
lods
add
aam
in
or
scas
dec
bound
icebp
aaa
dec
icebp
aaa
daa
add
daa
adc
aam
dec
pop
daa
add
rorb
or
or
sub
xor
es
xlat
ljmp
pop
push
mov
pop
int
leave
adc
mov
lret
and
rcrl
aaa
int
lahf
hlt
mov
push
mov
shr
push
dec
les
pusha
inc
add
mov
test
cli
hlt
mov
add
pusha
ds
popa
mov
rcrb
sahf
mov
cmc
js
xchg
in
out
dec
dec
pop
pop
andl
es
xchg
push
lock
ret
inc
aas
pop
mov
inc
call
std
mov
adc
adc
out
sub
push
adcb
cli
mov
test
notb
cli
pop
or
inc
cld
sub
test
sub
dec
mov
imul
push
pop
div
mov
wrmsr
ja
jno
pop
xchg
mov
xchg
adcl
int3
xor
add
pop
mov
imul
adc
fldt
sbb
test
scas
mov
add
sbb
dec
sbb
scas
shll
ret
inc
sub
mov
pusha
ljmp
fists
push
xrelease
jbe
and
fwait
xor
loop
out
ret
or
je
inc
cs
cli
cltd
shl
mov
dec
xchg
or
jbe
jl
xor
and
subb
setge
push
cltd
imul
mov
pop
ss
push
daa
insb
arpl
sbb
pop
mov
out
popf
sarb
push
jmp
imul
inc
pop
sub
aad
sbb
in
lock
insb
jg
popf
jl
inc
pusha
dec
inc
int3
dec
cwtl
dec
or
stos
add
dec
push
pop
adc
push
xchg
fbld
inc
les
movsl
ret
imulb
and
push
inc
push
inc
and
ficoms
or
mov
cmpsb
and
mov
std
fisttpll
xorl
mov
fidivl
add
out
xchg
adc
outsb
in
cwtl
push
and
pop
adc
add
dec
xchg
imul
jle
xchg
div
pop
test
sub
repz
pop
pop
pop
and
xchg
and
daa
dec
jl
mov
bound
fwait
jb
loop
dec
inc
pop
xlat
sarb
xor
lcall
pusha
or
jl
add
push
ror
xchg
cmpsb
or
js
pop
jae
imul
imul
sub
sub
test
aas
in
jmp
lods
mov
stos
arpl
fcomps
sti
xchg
cmp
out
addr16
dec
js
jnp
dec
jno
pusha
sub
mov
sub
das
movsl
pop
jecxz
fstpt
sbb
stos
fldcw
pop
sub
push
mov
dec
jl
cmp
cmp
ds
xor
xchg
jne
sub
dec
icebp
and
lahf
jmp
xchg
mov
inc
push
stos
cmp
xor
sbb
mov
cs
idivb
ja
movsl
dec
pop
mov
mov
xchg
mov
xor
fadds
ret
in
bound
or
jne
add
pop
in
xor
sbb
mov
outsb
data16
sbb
or
nop
or
sbb
push
rolb
sub
xor
test
clc
loope
fwait
test
gs
add
xlat
add
xchg
shlb
shll
stos
adc
ja
ficompl
iret
imul
push
jns
inc
rcll
xchg
mov
or
mov
int3
sub
push
push
mov
cmp
xor
mov
data16
ret
push
in
xor
and
shrb
fsubrs
mov
in
push
adc
jp
sub
jg
lahf
cmpsb
jns
or
mov
xchg
xchg
out
fdivs
pop
int
inc
cmp
jnp
cmp
clc
sub
cmp
js
xor
push
mov
lods
fdivp
xchg
test
cmpsl
sbb
xor
fsqrt
sbb
in
and
shll
xchg
je
inc
add
add
into
mov
sbb
fnsave
aad
dec
xchg
inc
sbb
cltd
ja
subb
in
cld
stos
jno
nop
jg
iret
add
jg
outsl
pop
pop
dec
mov
push
fildll
push
sub
fnsave
loope
lea
sbb
lock
jge
or
and
xchg
sub
sub
xchg
sti
pcmpgtw
sub
xchg
int3
cmp
adc
pop
enter
cmp
pusha
repz
lcall
ja
push
divb
pop
mov
mov
pop
test
mov
fcomi
cmp
or
std
or
pop
xchg
lods
enter
stos
in
pop
xchg
fcomps
jns
or
sahf
pusha
subb
dec
mov
pop
mov
bound
js
push
pop
mov
inc
ffree
mov
stos
rcrb
push
cmp
daa
rcrl
fcoml
sbb
lret
cmp
les
cmp
insb
sbb
mov
ds
subl
cmp
push
rcll
xor
mov
mov
lcall
xchg
push
inc
and
mov
sub
push
pop
xor
loopne
cltd
fidivrl
inc
mov
push
cmc
sub
push
mov
mov
push
xor
ljmp
sub
and
aad
cltd
pushf
cmp
sarl
loope
inc
cltd
fldl
imul
enter
sub
jbe
bound
fnsave
jae
jge
push
and
inc
mov
mov
cld
leave
cli
sbb
dec
xor
setno
and
dec
or
cmp
add
mov
orb
xchg
or
out
dec
lcall
out
mov
pop
ds
mov
and
sub
add
rclb
push
inc
push
mov
xchg
outsl
mov
lds
jo
inc
mov
mov
push
mov
pop
xor
dec
and
lahf
fstpt
gs
bound
add
add
pop
jnp
push
popa
test
js
push
push
adc
sub
clc
daa
push
arpl
xchg
lcall
mul
xchg
stos
ret
mov
jo
jp
jmp
dec
dec
je
add
add
mov
pop
icebp
test
xor
mov
sbb
pop
mov
add
jecxz
lds
sarl
div
lahf
icebp
cmp
add
movsl
mov
inc
jge
popf
lock
mov
leave
pop
cwtl
jge
mov
sub
je
test
push
xlat
sahf
test
mov
imul
out
stos
ret
cld
std
repnz
pop
in
xchg
in
jae
pop
lcall
mov
fwait
dec
add
imul
sub
insl
shrl
mov
push
orl
cmpsb
mov
pop
out
int
out
sub
mov
jge
lods
ret
fstl
js
and
out
lds
imul
outsb
popf
es
and
and
and
jae
outsb
push
xchg
adc
or
push
mov
subl
mov
push
cld
fstl
bswap
adcb
fdivs
inc
dec
cmp
cmp
out
and
std
or
cmc
add
mov
cmp
cli
cmp
out
jge
jnp
mov
xor
push
pop
inc
lods
cmpb
and
add
lea
or
mov
in
sbb
sbb
adc
pop
sub
or
add
jo
in
aam
or
add
scas
sbb
add
mov
in
jae
ja
mulb
sub
lret
adc
inc
mov
pop
loope
bound
sbb
jp
inc
xchg
adc
jbe
lds
movsb
cmp
or
add
jb
mov
popa
test
xchg
or
inc
dec
insl
add
popf
jb
adc
repnz
orl
popf
fnstenv
jp
sbb
adc
inc
dec
test
ds
or
mov
xor
test
mov
repnz
inc
jecxz
gs
std
jle
loope
setle
cs
fdiv
ret
xchg
lods
inc
das
push
xor
movsl
add
sbb
adc
lock
inc
pop
sbb
pushl
mov
nop
mov
mov
jp
mov
gs
and
shl
cltd
and
sub
inc
add
mov
out
test
addb
aas
imul
test
lods
dec
out
jns
adc
in
imulb
and
movsl
mov
xor
test
addl
lret
imul
test
and
xor
add
mov
or
cmp
add
and
pop
xorb
fisttpl
or
enter
call
inc
hlt
test
dec
mov
stc
jnp
test
inc
aad
jns
sti
add
inc
out
jge
cmpsb
or
scas
cmp
mov
roll
xchg
mov
adc
cwtl
enter
loop
out
rolb
dec
jecxz
ja
std
rcrb
cmp
ja
ljmp
sti
aaa
stos
jge
pop
in
push
mov
add
xchg
fsub
push
jno
stos
hlt
sub
jmp
cmpsl
push
pushf
hlt
sub
push
gs
mov
popf
add
pop
or
cltd
pop
xchg
out
adc
xor
or
or
mov
xchg
ret
mov
push
and
leave
sarl
sbb
sysret
pop
cs
imul
jae
cs
hlt
lahf
lods
and
dec
ja
mov
les
rcll
xor
jg
jno
lock
mov
dec
mov
mov
pop
subb
cmp
lods
int3
aaa
aad
pop
lock
stos
jns
push
flds
push
addr16
iret
out
push
sub
mov
adc
repz
push
cmp
ja
pop
daa
mov
mov
dec
or
mov
cmp
imulb
dec
adc
sarl
leave
cmp
sub
outsb
jno
xor
or
pusha
xor
jge
out
add
das
popf
rcll
sbb
xchg
je
ftst
and
push
movsl
add
mov
addr16
adc
inc
fsubl
iret
adc
hlt
mov
inc
cld
add
in
incb
mov
add
mov
ss
xchg
adc
xchg
inc
fidivl
sahf
enter
movsl
inc
nop
and
xchg
popf
fs
mov
jl
fwait
pop
inc
insb
test
fcoml
fsub
clc
jmp
jp
stos
add
and
lea
xor
insb
sahf
mov
aaa
inc
stos
sbb
add
xchg
jle
or
in
jg
rcrl
lods
xor
inc
pop
push
push
sub
cmp
bound
and
jnp
sbb
fisubrs
sub
or
movsl
test
xchg
ficompl
push
adc
add
hlt
mov
xlat
cmp
mov
inc
xchg
sub
outsl
imul
sub
adc
mov
sbb
cmp
mov
iret
fildl
jge
aam
dec
pop
addl
mov
stc
mov
int3
adc
movsl
push
cmp
movsl
inc
inc
jne
call
adc
xchg
sub
push
in
inc
xor
jl
jecxz
push
enter
adcl
fmuls
andl
out
mov
fwait
jle
mov
lods
cmpsl
scas
adc
mov
pusha
lods
in
jge
mov
push
jle
mov
sbb
xor
leave
xor
cmc
jg
jp
sbb
xchg
xorb
shll
adc
inc
jg
mov
jmp
inc
dec
add
scas
repz
push
stc
add
ret
inc
mov
mov
sub
pop
fistl
arpl
repz
pusha
jnp
in
scas
lret
stc
imul
lea
inc
fisubl
repnz
push
leave
add
pop
fbld
int
fdivrs
scas
xor
push
orb
add
xchg
rcll
xor
iret
cmpsl
clc
test
mov
dec
scas
mov
push
cmpsl
cmc
pop
xor
into
pop
jg
sbb
jbe
int3
jle
sahf
mov
sti
mov
js
mov
adc
out
movb
cli
mov
sti
adcb
sbb
mov
seto
and
or
xchg
xchg
clc
jno
icebp
aas
scas
out
jae
or
adc
mov
xor
adc
xor
stos
icebp
push
sbb
xor
cmpl
cmp
push
insb
xchg
faddl
mov
outsb
insb
xchg
xchg
sbb
sub
push
movsb
std
movsl
cmp
and
cmc
lods
mov
test
aaa
xor
mov
push
cmp
push
lahf
or
js
sbb
out
pop
popa
dec
sub
and
adc
test
inc
pop
sbb
mov
pop
mov
insl
mov
cmp
inc
fnstcw
inc
cld
fwait
adc
mov
lods
mov
add
mov
pop
inc
cld
or
mov
loopne
or
push
push
hlt
sbb
inc
jbe
adc
test
fstl
or
ljmp
adc
xlat
test
cltd
das
enter
negb
fstl
rcrb
mov
inc
push
shlb
push
mov
inc
dec
mov
es
insb
addr16
in
adc
stc
lret
in
mov
pop
fbstp
cmpsb
cmp
or
pop
fildll
cs
xchg
in
and
test
out
pushf
test
out
fsts
sarl
int3
push
xchg
pop
add
adc
adc
sub
cld
push
nop
sahf
imul
shll
lret
clc
into
into
lea
sub
out
stc
out
sbb
pop
push
popa
mov
and
scas
fisttpll
cltd
cmp
push
arpl
sub
cmp
xchg
test
icebp
out
pop
jle
jge
arpl
test
ljmp
cmpsl
test
cmc
add
idiv
imul
std
call
int
scas
push
clc
out
scas
push
xchg
stos
lea
and
pop
xor
mov
gs
cmc
insl
fstpl
mov
std
rorb
pusha
cld
push
out
mov
inc
mov
inc
roll
cwtl
dec
enter
mov
int
mov
daa
xor
repz
aas
popf
xor
push
test
inc
inc
jne
mov
xor
pop
jne
sbb
mov
xor
or
adc
mov
ret
mov
pop
loope
bound
adc
ret
sbb
add
das
fidivrl
loopne
push
movsl
cmp
cmp
mov
adc
jnp
ds
shrb
bound
stc
mov
push
test
fists
cltd
outsl
pop
inc
fiaddl
mov
sbb
mov
xchg
cltd
outsl
xlat
dec
sub
push
js
insb
fsubr
gs
sbb
and
sub
call
mov
rorl
fcmovnbe
fcmovne
and
mov
pop
xor
xchg
and
add
cmp
add
cmp
pusha
insb
sbb
loopne
adc
arpl
and
xor
lods
jmp
mov
or
out
rolb
mov
ds
in
cmp
mov
push
in
ljmp
xor
loope
and
push
xchg
push
and
sarb
pop
cs
sar
fstpl
pop
shrl
aad
jmp
loopne
xor
add
cmp
pop
je
fwait
daa
sbb
stos
test
into
and
sbb
lock
add
ds
sbb
fbstp
call
mov
call
jns
and
repnz
jno
cmp
call
jle
dec
ss
cs
mov
push
loop
cmp
rcrl
push
addr16
xorb
jg
pop
notb
daa
mov
test
fmull
pop
jb
test
or
rcll
imul
scas
xchg
and
cmp
add
inc
int3
jge
out
les
repz
adc
push
leave
xchg
mov
fdivl
push
sahf
add
mov
mov
mov
add
pop
test
mov
pop
scas
push
jmp
cmp
jle
xchg
imul
mov
fnstsw
pop
repz
cmp
push
dec
inc
jns
pop
dec
pop
mov
pushw
inc
and
pop
andb
cmp
sbb
sbb
xor
lcall
sub
dec
aam
lcall
bound
orl
jmp
ret
jecxz
stc
mov
test
cmp
xchg
cmp
push
or
stc
dec
iret
cmpsl
enter
cmp
gs
je
sar
jno
adc
loopne
mov
ja
mov
loop
daa
xchg
mov
ja
js
and
adc
xor
cmp
fnsave
lahf
sub
xchg
clc
mov
cltd
adc
cmpl
fisttpll
mov
sub
stc
mov
ror
or
sbb
adc
jle
lcall
cmpsb
cmp
rcll
cmp
adc
push
jbe
ja
test
lcall
adc
push
rcrb
adc
sbb
push
pop
lret
pushf
push
push
adc
ret
sahf
xchg
xor
cmpsb
les
sbb
mov
push
adc
push
cmpsl
idivb
pop
pop
mov
hlt
daa
xor
shlb
pusha
cmpsl
stos
fsubrl
fimuls
add
in
out
pop
jle
adc
sbb
lods
jno
loop
xlat
mov
cltd
xchg
mov
leave
loop
or
mov
not
js
rolb
xlat
jnp
cmpsb
adcl
ret
push
push
daa
inc
lods
fcmovnu
mov
loope
pusha
xor
sbb
mov
mov
nop
sbb
push
jp
stos
and
cmc
sub
mov
mov
insl
jge
or
call
sbb
push
mov
dec
add
insb
enter
jp
fcmovu
popf
sbb
xchg
int3
push
outsb
add
add
sbb
adcl
xor
rclb
cmc
or
popf
andl
or
or
shll
jg
mov
and
pop
push
and
outsb
lods
cltd
aam
lahf
add
or
pop
sbb
dec
or
cwtl
cld
loop
push
jo
xor
stc
cmpsl
out
aas
pusha
jl
sbb
mov
adc
int3
dec
sbb
bswap
cwtl
pop
mov
cs
gs
mov
or
insb
xchg
mov
add
test
cmpsl
sbb
push
stos
xor
sbb
inc
or
jg
enter
xchg
pop
inc
or
or
mov
inc
ljmp
shrb
iret
or
adc
dec
push
repz
mov
cmp
dec
rorb
sub
imul
xchg
arpl
outsl
mov
fnstenv
pop
sti
pop
aad
jecxz
mov
daa
adc
rorl
sub
inc
xor
mov
xor
pop
jl
or
cmc
ds
jno
cwtl
add
fcomip
negb
stc
mov
out
pop
scas
jno
sbb
lods
cmp
adc
pop
mov
inc
add
lds
pop
fs
cwtl
mov
and
xchg
dec
arpl
les
icebp
clc
lock
xchg
fadd
cli
stc
test
lock
xor
push
mov
aaa
or
nop
insl
xlat
int3
push
sbb
sarb
mov
sub
inc
adc
xchg
jge
fsubrp
jge
shrl
mov
lods
dec
mov
or
jno
inc
popl
subb
or
jl
mov
jo
add
pop
rorl
or
dec
or
scas
aad
add
xchg
sub
push
push
adcl
push
xor
sub
pop
jb
hlt
mov
les
dec
into
in
ljmp
stos
xor
sbb
shlb
and
popf
inc
int3
out
mov
dec
xchg
lods
inc
add
sub
cmp
fs
push
mov
push
pop
xor
rclb
push
sti
mov
mov
dec
lahf
mov
pop
jne
jb
cltd
lods
cmpsl
jg
lds
leave
daa
cmp
ret
cld
dec
clc
xor
mov
add
test
xchg
pop
stos
inc
lret
cmc
loope
filds
subl
xchg
xor
add
mov
je
jmp
cwtl
add
or
test
pusha
mov
mov
xchg
pusha
jns
adc
jp
and
aad
fistl
mov
leave
sub
addr16
dec
push
clc
mov
dec
add
andl
je,pn
arpl
shl
push
dec
mov
popf
xchg
dec
jle
and
push
mov
stos
sbb
sahf
sub
sub
rol
push
xorl
icebp
idivb
in
cmp
add
cld
mov
das
shrb
jo
addr16
stos
gs
or
pop
fcompl
mov
push
lret
cmp
lods
cwtl
push
scas
mov
subb
incl
psubsb
dec
adc
sbb
cmp
jl
mov
mov
add
cli
mov
xor
mov
xchg
push
sbb
jnp
mov
movsb
pop
add
repz
pop
jae
ret
nop
xchg
lret
scas
ljmp
xchg
outsl
or
add
xchg
int3
push
cltd
shrl
pop
sbbl
adcl
push
cmp
insl
mov
push
xor
mov
divl
iret
aaa
jb
xchg
rorl
xor
inc
add
jae
fcoms
aaa
mov
dec
ret
out
mov
jbe
mov
mov
fs
stos
aam
dec
mov
jg
jg
stos
sbb
mov
and
push
dec
fisubrs
or
xor
jge
test
add
movsb
gs
not
ljmp
xor
enter
shrl
adc
andb
call
or
pop
fists
int3
ror
andl
fwait
push
jg
popa
mov
ss
pop
push
cmp
mov
push
jge
xor
fistpll
addr16
adc
xor
adc
sub
call
test
test
repnz
lds
mov
sbb
scas
ja
mov
int3
outsl
in
xor
inc
push
inc
mov
addr16
fstps
shrb
lods
cmovle
dec
arpl
in
jge
js
popa
cmp
lea
push
jecxz
es
sbb
dec
inc
inc
cmp
xor
divb
pushf
jl
test
stc
and
push
mov
mov
pop
mov
shlb
push
pop
imul
sub
call
fnstenv
mov
dec
jae
imul
sbb
pop
dec
xchg
xor
mov
or
lret
loop
cmp
cs
mov
clc
sbb
pop
int
frstor
ja
inc
scas
addr16
repnz
jnp
sbb
xchg
les
mov
sbb
inc
test
fisubs
out
cmc
jne
sub
ja
int3
mov
push
adc
adc
xor
cltd
add
lret
loopne
xchg
pop
leave
aaa
dec
stos
mov
test
jmp
dec
dec
gs
adc
in
dec
add
adc
lods
sbb
loopne
iret
and
xchg
xchg
pusha
cmp
inc
lds
pushf
mov
push
or
addr16
sub
inc
leave
pusha
enter
aas
lcall
xchg
push
jo
popl
add
repz
fs
xor
aaa
add
imul
sbbl
mov
inc
test
xor
and
rclb
dec
cmc
mov
aad
dec
hlt
and
lock
sub
addb
sbbb
scas
stos
and
mov
xor
or
cmp
ret
mov
pop
aad
dec
mov
loop
pop
ja
add
loop
push
mov
je
sbb
mov
in
sbb
fidivrl
xor
cld
bound
das
sub
push
icebp
and
jmp
out
pop
dec
or
push
sti
neg
dec
stos
mov
js
shlb
sbb
int
std
inc
and
scas
aaa
mov
adc
popa
leave
jmp
fstl
ret
cmpb
xchg
inc
dec
pop
subl
mov
icebp
das
add
int3
fs
les
es
out
sub
push
dec
mov
jp
lock
scas
push
pop
push
nop
es
mov
jae
sahf
cmp
mov
pop
aas
mov
shl
adc
stos
or
sub
fnstenv
cmpsl
dec
ret
sbb
add
scas
mov
sbb
mov
dec
sbb
mov
push
xor
xchg
aas
subb
call
movsb
mov
sub
int
and
or
push
jecxz
fdivl
fwait
dec
out
mov
mov
icebp
push
sub
jp
xchg
fdivrl
inc
mov
aam
adc
outsb
es
xchg
adc
out
sbb
mov
jno
sti
iret
js
jae
subb
cmpsb
cmp
pop
hlt
and
cmp
shll
js
jg
jns
xor
stos
ja
mov
clc
outsl
les
jb
jmp
dec
fsts
cmp
ja
loop
push
imul
lret
bnd
pop
xchg
inc
mov
mov
ds
xchg
xchg
add
mov
pop
scas
rcr
mov
hlt
xor
scas
lahf
add
lods
inc
dec
mov
add
les
shrl
jmp
scas
mov
outsl
push
add
push
and
jl
and
pop
xchg
mov
arpl
les
out
xchg
popf
or
arpl
rolb
xor
xlat
inc
cwtl
sbb
inc
je
dec
sbb
and
jl
shr
je
out
dec
mov
pop
dec
js
decb
xchg
fcoml
adc
clc
adc
lcall
jp
pushf
jle
cmp
mov
arpl
stos
xchg
mov
sbb
mov
scas
mov
mov
sahf
cmp
mov
xchg
adc
ficomps
or
std
mov
ja
movsb
mov
clc
je
mov
inc
fdivrs
sbb
dec
adc
lods
jno
fimuls
cmp
dec
cwtl
mov
lea
addr16
and
gs
and
push
jp
adc
stc
jne
pop
adc
jb
stc
int
xchg
mov
insb
push
adc
xor
pop
cwtl
out
adc
lock
je
lods
xchg
mov
push
mov
push
mov
rol
add
enter
call
mov
repz
rolb
cmp
mov
inc
loop
xchg
xor
lds
jp
xlat
or
adc
xchg
fcmove
popa
imul
push
lcall
adc
mov
cs
js,pt
movsb
stos
mov
push
sub
test
push
sub
out
fucom
push
pop
xor
cltd
pushf
fistpll
jmp
push
testb
jle
mov
mov
add
imul
in
or
lods
and
xor
ret
lods
call
out
in
sub
and
rolb
mov
mov
xor
push
pop
stos
cld
fsubrl
dec
ret
jmp
ret
mov
shl
mov
addb
and
jns
incb
xor
mov
dec
adcl
sub
jl
mov
inc
sbb
sti
pop
clc
divb
dec
xor
sub
dec
cltd
push
pop
cmpsb
ljmp
and
dec
xchg
mov
add
mov
push
addr16
sbb
cmp
lcall
sbb
call
or
inc
leave
jl
int
xor
pop
xchg
mov
sbb
adc
mov
inc
mov
adc
inc
jmp
mov
js
xor
mov
mov
jae
push
push
mov
jnp
mov
or
or
stos
xchg
ret
dec
rorl
jp
incb
sbb
jl
pop
iret
dec
sbb
cmp
mov
lock
inc
dec
cs
notl
fidivl
inc
dec
cmp
push
mov
jne
pop
push
dec
cmpsb
jb
cmp
dec
popa
and
jecxz
push
sbb
mov
adc
lods
cld
jns
jecxz
jne
aad
and
pop
pushf
mov
and
push
mov
xlat
leave
movl
sub
cmp
imull
imul
nop
mulb
icebp
ja
lret
leave
enter
call
lahf
sub
mov
jp
or
dec
cmc
inc
ds
ja
fldt
leave
fwait
or
cmpsb
push
ffree
aas
jmp
pop
lret
in
rclb
sbb
jbe
test
xor
sti
mov
daa
popf
rorb
clc
push
sbb
xchg
push
faddl
mov
movsl
lahf
mov
stc
cli
stos
scas
mov
cli
imul
fwait
push
mov
enter
or
xor
jae
pop
push
inc
push
shrl
mov
insl
arpl
cmp
mov
push
jns
jg
jmp
das
repnz
xchg
addr16
mov
loopne
call
lea
out
xchg
jno
dec
xor
sbb
jnp
arpl
xchg
out
lock
scas
xchg
aam
loope
add
nop
sub
pop
in
sub
pop
sub
xor
jecxz
or
mov
dec
lahf
lahf
sub
movsl
out
mov
mov
rcll
jmp
clc
in
sub
pusha
ljmp
test
add
add
pop
test
sub
push
clc
mov
je
sbb
shll
mov
and
xor
inc
pop
mov
xchg
mov
fstp
jge
xor
leave
sbb
rcl
bound
xor
mov
or
push
xor
stos
add
or
and
pop
adc
add
jnp
xchg
xchg
andl
ret
popa
or
push
xchg
lods
bound
jl
test
push
stos
or
mov
jl
adc
pop
repnz
mov
jbe
popf
out
iret
mov
daa
ret
shr
mov
and
in
loopne
popf
pop
nop
push
int
inc
cltd
movsb
jae
xchg
scas
inc
jg
inc
in
pop
rolb
or
lcall
sti
dec
jp
sub
mov
or
push
in
ficoml
sbb
xor
push
mov
shrl
pop
adc
jae
pop
dec
or
add
push
or
pop
pop
mov
pop
xchg
mov
cmp
test
dec
push
negb
in
pop
push
into
in
push
pop
cmpsl
daa
nop
fisttpl
sti
pop
ret
push
cmpsl
rclb
push
pop
clc
pop
add
ja
cmp
or
stos
push
mov
push
hlt
scas
add
push
cmpsl
dec
loopne
mov
sbb
xor
shlb
pop
lds
rolb
mov
xor
xchg
out
sahf
call
adc
add
es
pop
dec
pusha
jle
data16
fcoml
xchg
lods
jb
into
mov
data16
aas
cmp
insb
sbbl
sbb
cli
inc
sbbb
call
shll
movsb
xchg
adc
adc
stos
aas
insl
mov
popf
fbld
or
cmpsb
lds
popf
jecxz
xor
lods
imul
mov
jnp
xchg
out
cmpsb
in
push
fwait
ljmp
stos
push
jno
push
pop
jae
and
into
test
movsl
rorl
out
insb
xchg
mov
repnz
dec
jmp
mov
pop
bndstx
xor
stos
dec
movsb
sub
cmc
and
mov
fdivl
inc
cmp
mov
lds
pop
ss
push
push
data16
xor
shlb
stos
js
loopne
lods
and
cmp
xchg
xchg
in
adc
fadd
test
jnp
mov
pop
and
arpl
xchg
and
mov
cltd
pop
or
push
and
shr
push
mov
pop
mov
dec
sti
inc
adc
fcomps
ret
adc
fcmovne
hlt
ficompl
data16
push
in
out
pop
frstor
aam
sahf
cmp
and
lock
pop
les
add
lds
add
lret
cmp
push
popf
xchg
movsl
pop
daa
sub
sbb
mov
dec
bnd
insb
sub
or
xchg
lods
xchg
loope
out
std
or
out
icebp
gs
loope
imul
sbb
dec
cmc
sub
jnp
mov
push
mov
les
sbb
out
scas
imul
sbb
jbe
or
repz
cs
pop
insl
or
lcall
sub
es
sbb
add
mov
pop
jne
cmc
cmpsb
and
lock
or
dec
lds
cmp
mov
push
int3
push
mov
push
inc
push
cmpsb
add
stos
push
aaa
popf
adcl
xchg
dec
stos
xchg
out
ret
ja
or
lret
dec
xlat
mov
lret
pop
push
sbb
std
dec
arpl
xor
dec
loope
les
out
push
mov
mov
hlt
jno
in
adc
mov
aas
roll
pop
pop
fdivrl
test
add
ja
and
jae
xchg
jno
fxch
loopne
clc
mov
inc
or
lret
sbb
jp
push
mov
cltd
and
repnz
jno
add
jnp
xchg
mov
sub
divl
sbbl
push
cmp
dec
dec
shl
mov
sbb
xor
fs
divb
ss
sti
inc
repnz
ja
imull
mov
popf
lods
jecxz
jno
aad
in
lods
mov
pop
iret
cltd
sub
inc
jmp
test
nop
faddl
cmp
mov
push
and
repz
fnsetpm(287
inc
push
inc
mov
sub
mov
rol
mov
cmp
movsb
pmulhuw
mov
sub
orb
xlat
xorb
clc
imul
out
shrb
xor
xor
and
int
in
or
sbb
xchg
dec
mov
xor
mov
xor
shrl
fwait
push
negb
push
or
inc
or
movsl
xor
hlt
lret
outsb
sbb
imul
cmp
pop
mov
pop
leave
lds
int
ret
mov
call
xor
bound
jno
les
pusha
test
test
or
lds
mov
add
and
dec
pusha
push
shrb
mov
mov
mov
subl
dec
and
pop
xchg
scas
rcrb
rorl
daa
jge
stos
shr
cmp
and
or
push
jns
or
add
add
jecxz
cmpsl
add
adc
mov
sbb
sub
xchg
jae
xor
bound
sub
xchg
adc
fiadds
and
cltd
jl
mov
rorb
cmp
int3
dec
push
push
imul
bound
add
mov
jp
gs
aaa
push
inc
inc
shl
pop
ljmp
out
iret
pop
push
movsb
xor
push
jne
mov
fwait
in
or
add
sub
ror
ljmp
push
mov
shlb
in
into
int
sbb
add
stc
loopne
or
mov
and
je
push
scas
jg
sub
in
pop
ljmp
shrl
pop
std
cmp
test
xchg
das
lea
in
add
sbb
pop
jns
lret
andl
rcll
lds
scas
pop
mov
or
out
fldl
pushf
pusha
push
jl
mov
dec
sbb
cmp
clc
mov
and
rcll
add
sub
lret
insb
pop
cmpsl
mov
xor
push
push
jbe
mov
hlt
pop
dec
xlat
inc
pop
nop
cmpsb
jecxz
jl
xor
loopne
ss
adc
xchg
mov
or
in
and
sarb
mov
mov
jbe
sbb
jmp
dec
ds
dec
scas
sarl
jge
jb
test
loopne
imul
fidivl
jmp
mov
outsb
sub
sub
out
dec
cmp
enter
xor
in
pop
hlt
repz
mov
mov
cwtl
and
pop
mov
jb
imul
jl
mov
mov
mov
mov
sub
jne
stc
xor
cmp
out
pop
mov
fsubl
pop
inc
pop
push
jns
jg
push
jle
adc
scas
mov
xlat
out
jb
mov
sub
movsb
push
xchg
cmp
pop
push
or
pop
mov
ljmp
jnp
mov
sti
inc
adc
je
outsl
dec
mov
rcl
into
scas
ljmp
mov
test
scas
mov
dec
int3
movsb
lea
lret
cmp
lcall
adc
xchg
lcall
sbb
push
xchg
bound
pop
add
xchg
cmp
out
add
dec
xor
adc
xchg
jne
xor
loop
xor
mov
adc
cmpsb
pop
addr16
xchg
dec
stos
mov
pop
pop
jle
pusha
push
mov
arpl
icebp
int
pushf
rcr
cltd
cli
jp
pop
adc
inc
jle
fs
jnp
dec
insl
ljmp
filds
cmp
mov
xchg
add
repnz
loop
pop
das
xor
and
and
adc
fidivl
inc
jmp
addr16
and
adc
push
rcrl
rcl
test
addr16
cmpsl
adc
xchg
jnp
mov
inc
push
fdiv
or
add
call
cmpsl
and
add
subl
icebp
clc
mov
bound
pop
add
push
imul
adc
imul
mov
insl
mov
lods
push
xor
mov
pusha
incl
je
mov
test
dec
or
inc
lret
hlt
fwait
xor
jae
loopne
and
pop
enter
rcrb
xor
mov
out
jb
fwait
adc
fwait
repz
mov
cmp
or
or
cmp
jb
mov
adc
push
cmc
xchg
sbb
and
in
add
fs
sbb
mov
inc
mov
adc
pop
mov
mov
or
push
test
test
in
mov
inc
in
cmpsl
ja
cmpsb
mov
fidivrl
int
icebp
inc
out
dec
sti
stos
push
or
and
fs
xchg
es
dec
lahf
mov
inc
addr16
adc
adc
push
scas
jmp
xor
mov
dec
pusha
dec
mov
mov
add
push
ficoms
imul
push
out
cld
inc
xchg
inc
cmp
scas
xor
lcall
mov
lds
xrelease
mov
adc
ja
cld
inc
pop
pop
sub
lock
lds
pop
mov
incb
cmc
repnz
or
fcompl
shr
sbb
xchg
mov
inc
dec
mov
sti
pop
sbb
push
insl
adcb
add
and
xor
jo
gs
mov
clc
mov
sub
mov
dec
jl
mov
pop
cli
cmp
mov
and
mov
int3
sbb
mov
add
icebp
pop
xor
dec
push
push
nop
aas
fstpl
dec
mov
jns
cld
mov
pop
inc
test
sbb
pop
js
cltd
aad
cmp
out
cmp
mov
or
lock
mov
mov
sub
movb
cmpsl
jae
je
adcb
push
mov
cltd
push
push
pop
fcompl
and
and
xor
fisubl
gs
mov
repnz
jecxz
ljmp
sbb
xor
jb
dec
jnp
movsl
lret
adc
push
pop
or
sar
pop
dec
pop
xlat
stos
shrb
fistl
mov
int
repz
sti
ret
int
push
dec
andl
repz
mov
sbb
mov
mov
jmp
cmp
push
pop
xchg
or
and
insl
mov
je
das
cmp
mov
add
aad
test
mov
xchg
int3
mov
daa
jnp
andl
outsb
push
and
jae
roll
sahf
push
insb
andb
jp
pop
jg
popf
xor
insl
ret
push
rclb
jne
int
shll
pop
imul
dec
sub
and
sbb
hlt
pop
jle
fdivrs
dec
add
xchg
or
cmp
jnp
cmp
cmc
in
mov
push
ljmp
dec
mov
mov
in
pop
lods
pop
jle
push
imul
inc
push
lahf
testb
add
pusha
bound
push
mov
das
mov
mov
push
lret
mov
dec
das
jmp
mov
clc
push
xchg
rcrl
pop
mull
test
jmp
lock
lods
in
int
scas
pushf
fcompl
dec
xchg
mov
add
jle
xlat
fs
inc
inc
bswap
popa
sbb
adc
loop
loope
add
push
sbb
xor
int
enter
inc
in
fstpt
mov
lods
pop
sahf
les
les
push
jecxz
es
push
push
sub
pop
add
lea
lcall
and
adc
dec
jns
push
xor
out
leave
ret
jmp
test
outsl
xchg
cmpsl
mov
enter
mov
xchg
xor
lods
test
test
jle
jnp
xchg
lods
cmp
mov
add
dec
orb
ds
enter
xor
js
jne
leave
jne
mov
fdivl
mov
shll
jmp
lods
dec
lcall
xchg
cs
lods
jg
dec
mov
sti
sti
in
mov
call
mov
divl
mov
jl
jae
or
test
les
or
pusha
repz
adc
xchg
nop
mov
lret
push
jecxz
dec
ror
mov
aas
mov
sub
loope
dec
sub
sbb
dec
loop
rcll
insl
adc
cmp
testb
daa
mov
mov
lock
xor
shl
jge
rcl
adc
ret
bound
or
xchg
sub
icebp
rcr
movsl
or
gs
inc
pusha
add
outsb
test
mov
push
fidivs
mov
adc
xchg
jg
fistpl
fidivrl
int3
push
jp
pop
loop
push
imul
out
mov
fwait
or
xchg
or
roll
pop
mov
mov
push
xchg
arpl
shrb
mov
mov
jnp
sub
add
mov
out
lret
mov
jmp
in
xchg
jmp
pop
or
icebp
add
and
popa
fwait
stos
cs
es
iret
ffree
aaa
fdivrl
and
adc
lock
loopne
nop
aad
add
ljmp
mov
aaa
push
dec
shlb
fstps
mov
cmp
pop
movb
outsl
xchg
xchg
push
jb
push
stos
imul
aaa
stos
xor
fildl
mov
or
in
nop
cltd
test
adc
aad
ret
or
inc
xchg
dec
push
int
push
inc
inc
iret
pop
test
mov
push
pop
lods
jbe
adcb
sub
add
jo
pop
aad
add
aaa
jbe
movsl
sbb
ja
pop
adc
mov
xor
test
push
mov
into
and
inc
jg
test
push
popa
cmp
inc
insb
clc
aaa
xor
dec
hlt
jmp
ss
push
loope
xchg
pop
iret
fcomip
mov
sub
std
es
pop
movsb
adc
mov
and
mov
test
xlat
out
mov
pop
les
jecxz
lcall
jg
and
shll
cld
cmp
dec
repz
loopne
subb
orl
jl
and
dec
sbb
mov
stos
loop
xlat
mov
push
das
pop
fildll
and
cmc
xchg
out
sbb
cmp
or
mov
int3
test
xchg
in
fstps
cmpsb
std
test
and
pop
pop
inc
jmp
mov
add
cs
scas
push
test
xchg
xchg
pop
ljmp
out
movsl
addr16
push
rorl
add
jle
mov
xchg
jne
and
std
stos
sbb
mov
jbe
push
scas
out
push
push
sub
adc
outsl
or
out
xchg
jbe
bound
cwtl
ss
sbb
sub
fdivl
mov
mov
cwtl
xchg
add
movsl
inc
mov
pusha
lds
les
and
pop
aaa
dec
loopne
dec
nop
pusha
xor
xchg
cmpsb
les
adc
into
shll
adc
cmp
mov
sbb
inc
push
jb
jbe
ret
add
mov
popa
cs
push
adc
jl
stos
test
mov
fisttpll
stos
subb
or
push
lcall
aam
pop
fs
insb
cmpsb
and
or
push
xor
inc
int3
les
ss
ljmp
pop
and
stc
std
add
add
outsb
out
inc
bound
loop
shrb
jbe
imul
pop
xchg
ss
bnd
adc
fwait
int3
insl
jo
es
rol
out
xor
in
movsb
iret
fidivs
cmp
mov
pop
adcl
and
inc
and
xor
inc
pop
sarb
addb
push
inc
fadds
das
dec
in
int
mov
into
out
je
hlt
es
add
mov
mov
jle
ss
out
add
push
sub
jo
add
stos
std
fisttpll
shll
out
imul
daa
add
test
jbe
mull
adc
kmovw
fcmovne
push
cmp
cmp
dec
mov
shr
fnstsw
mov
dec
xor
fcomps
inc
xchg
shlb
cmpsl
mov
fisttps
push
xor
test
fisubs
jp
lret
xor
mov
cwtl
sbb
imul
sub
mov
xchg
push
cmc
daa
or
pushf
sbb
xor
repnz
test
lret
or
lret
jb
imul
loopne
jns
jne
ret
adc
scas
or
fisubrl
nop
and
sub
fidivrs
dec
pop
add
int3
scas
roll
jb
cmp
incl
testl
cld
mov
insl
lock
adc
lea
jle
and
inc
inc
call
jbe
movsl
out
or
jns
std
pop
es
fs
jb
mov
sbb
not
pop
xor
js
fbld
lds
inc
ret
sbb
daa
mov
and
rcll
hlt
lock
xchg
mov
xchg
mov
mov
push
and
xchg
sbb
inc
mov
jl
inc
cs
jno
sbb
sti
iret
shll
inc
das
inc
popa
xor
xchg
add
ret
mov
mov
icebp
add
rcl
mov
dec
dec
iret
cli
mov
xor
mov
hlt
xchg
pop
scas
push
mov
ficoms
cmp
call
adc
aaa
rorl
shl
test
push
out
dec
mov
test
inc
and
mov
imul
clc
arpl
pop
dec
rolb
and
dec
dec
iret
jo
popf
ds
jmp
cmp
shr
js
push
push
or
mov
jae
and
inc
jno
ret
das
inc
popa
inc
xor
push
mov
push
mov
adc
fsubl
jne
push
jmp
pop
outsl
stos
xorl
push
fsts
incb
sbb
rcrl
sub
inc
mov
jno
loop
push
into
mov
jns
or
mov
sbb
pop
xor
fwait
imul
popa
and
lods
jge
inc
mov
mov
sub
hlt
hlt
or
lods
push
aas
add
dec
mov
cld
inc
stos
inc
cmpsl
negl
ja
xchg
insl
and
add
out
add
xor
shll
fs
repz
outsl
mov
mov
sbb
mul
push
stc
hlt
popf
fcoms
mov
imul
call
rcrl
fnsave
sbb
dec
addb
pop
xchg
add
stos
pop
dec
icebp
mov
iret
sbb
push
into
popa
sub
dec
or
ret
dec
dec
loopne
sub
sbb
xor
dec
dec
hlt
or
push
fistpll
cmp
dec
stos
rorb
and
mov
xor
jnp
cmp
adc
leave
xor
aad
mov
movb
pop
sub
inc
sub
icebp
push
jmp
mov
dec
mov
or
jno
sbb
lock
insl
scas
int3
mov
pop
divb
pop
cli
in
fidivrs
je
repnz
imul
add
pop
fisubl
add
xor
push
dec
and
add
in
and
sbbl
push
in
dec
mov
out
mov
ret
aam
and
std
lret
adc
out
aad
push
adc
push
pop
pop
stos
xchg
sbb
or
add
pushf
pop
shl
fdivl
cld
das
jl
pop
mov
testl
or
out
jp
lcall
stos
mov
adc
iret
jmp
xchg
in
fwait
add
mov
sahf
push
mov
jl
aad
lcall
adc
or
adc
mov
push
xchg
es
jl
jns
stos
mov
or
out
cmpsl
mov
jo
sub
mov
mov
fldt
shlb
adc
jae,pn
xchg
xchg
add
jl
jge
test
mov
jl
aaa
ss
dec
test
sub
dec
xor
cmpsb
sub
dec
addr16
cmpsb
lahf
seto
iret
sub
pop
mov
sbb
sbb
das
mov
sbb
cmp
adc
pusha
cltd
popa
jnp
sti
dec
ret
mov
sbb
hlt
fdivs
js
sbb
mov
cmp
pushf
adc
rorl
jbe
subb
pop
push
je
stos
imul
insb
cs
imul
mov
push
fistps
add
xchg
mov
pop
mov
cmc
adc
lcall
ja
and
mov
stos
mov
bound
fldcw
scas
dec
lahf
add
in
mov
push
subb
icebp
fdivs
cmp
call
arpl
rcrl
sahf
fcmovnbe
dec
icebp
rcr
push
adc
cmc
lahf
jmp
xlat
pusha
lods
mov
incl
push
sub
popw
pop
popa
pop
daa
push
adc
adc
das
fiadds
test
jp
mov
cmp
lea
cmpsb
mov
xchg
addr16
sbb
lods
fdivr
dec
jmp
xlat
rorb
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
cs
dec
idivb
mov
test
leave
push
or
enter
xor
cmp
jmp
sbb
mov
mov
mov
xchg
addl
or
lds
mov
inc
mov
mov
in
add
add
aad
imul
lahf
xor
cmpl
mov
jo
into
pop
sbb
in
bound
out
dec
das
jbe
or
cld
pop
icebp
and
rcrl
popf
xchg
pop
fcmovb
xor
mov
and
dec
insb
push
or
or
lods
es
jne
movsl
mov
in
mov
pop
jge
insl
fcomi
or
hlt
faddl
fisubrs
ret
cmp
inc
sbb
push
push
push
xlat
add
arpl
jb
leave
xchg
jb
and
stos
mov
inc
lock
sbb
pop
imul
movsb
insb
add
push
loope
jmp
rcl
inc
lret
cmp
and
cs
mov
push
sar
dec
inc
inc
int
insl
nop
aas
inc
loopne
push
hlt
sbb
in
inc
or
das
pop
imull
xchg
mov
dec
xor
out
fmuls
fs
push
sbb
mov
inc
lock
loopne
shlb
mov
push
psllq
lret
mov
jge
or
icebp
sahf
in
jbe
imul
out
adc
lret
mov
mov
repz
nop
bound
jg
mov
enter
lcall
or
mov
push
orb
in
decl
xor
std
xor
jne
xor
loop
in
or
jns
cmp
jecxz
data16
addr16
sti
leave
fmulp
cmc
jbe
fucomi
dec
push
mov
and
bound
or
sub
mov
rcrl
and
mov
cmp
insl
push
push
subl
in
dec
icebp
jmp
push
pop
aad
cmp
and
aaa
insb
rcr
mov
popa
or
stc
jns
fsubs
out
or
lret
fisttpl
shl
pop
enter
mov
xchg
fldt
out
dec
sbb
bound
in
inc
rcrb
movsb
adc
cmp
addr16
int
push
fstps
pop
loop
sahf
into
cmpsl
hlt
fwait
adc
sub
xor
ja
add
movntsd
icebp
mov
xorl
push
cld
or
or
fwait
subb
repz
bound
mov
imul
aam
movsb
xchg
cmp
cmp
xlat
mov
cmpsl
outsb
outsb
nop
and
jnp
movsl
stos
outsl
mov
call
std
mov
push
xchg
out
aad
mov
das
gs
scas
daa
loop
add
in
pop
int
popa
mov
pop
divl
mov
sub
push
add
xchg
mov
rcrb
stc
js
int
or
ss
sub
fsub
pop
out
aas
jmp
jo
push
gs
dec
andl
inc
repz
hlt
rol
test
lds
fisttpl
jae
jmp
mov
mov
inc
push
out
idiv
sub
outsb
stos
cmpsl
mov
jae
cmpsl
aas
sahf
inc
xchg
adc
or
push
push
pop
les
gs
pop
iret
mov
lods
ljmp
ja
aam
push
jo
lret
int
arpl
cmpsb
cltd
xchg
mov
stc
sahf
shr
pop
pop
int3
push
mov
adcb
mov
adcl
mov
cld
in
adc
shlb
fcmovnbe
mov
and
fwait
xor
clc
pop
adc
movsl
movsb
ret
jo
shll
sbbl
repnz
add
fistps
out
push
push
rclb
repnz
cmpsl
pop
and
in
out
inc
jg
add
sbb
cmc
fucomp
dec
aad
iret
xchg
mov
mov
fs
mov
rcl
loopne
pop
scas
pop
jne
std
ss
cmp
sbb
xchg
jae
mov
cmp
mov
fnstsw
cmp
mov
popa
mov
rorb
mov
xchg
lds
out
and
sub
adc
xchg
out
and
or
inc
push
dec
pop
push
and
icebp
xchg
add
das
cld
push
mov
stc
sarl
frstor
int
cmp
push
mov
inc
sbb
stc
pop
mov
rcl
insb
mov
fistpl
daa
jg
inc
cmpsl
push
mov
mov
pushf
daa
add
enter
mov
add
orb
xchg
mov
dec
dec
dec
mov
popa
adc
sahf
inc
xchg
fwait
gs
loope
repz
jae
mov
lock
adc
jmp
pop
repz
or
popa
or
or
pop
jg
scas
push
mov
fcom
lret
cmp
ss
xchg
ljmp
mov
or
cwtl
pop
pop
jmp
ja
or
call
hlt
inc
sbb
mov
outsl
mov
sbb
sti
jnp
or
das
js
sbb
add
sbb
pop
lret
mov
je
in
rcll
dec
push
ret
aad
dec
xor
idivl
or
cltd
popf
out
fsubrs
int3
insl
jno
and
popa
and
fsubl
cs
arpl
ds
sbb
icebp
mov
fs
and
fisubs
pushf
mov
inc
and
jg
push
and
into
sbb
sub
sub
xchg
xor
fsubrs
xchg
in
pop
pop
cwtl
rolb
pop
or
xchg
jp
inc
lods
xchg
push
mov
pop
adc
sub
xchg
inc
stos
scas
mov
xchg
aas
xor
dec
pop
aaa
cmp
cmpsl
mov
lahf
mov
mov
cld
les
add
mov
and
shll
mov
jge
test
ds
adcl
mov
in
push
mov
movsb
inc
dec
sub
xchg
mov
sub
loop
test
add
push
xchg
push
cmp
imul
popl
imul
xchg
negb
mov
insb
not
ret
int3
fistpll
daa
ss
clc
add
lret
push
or
or
pop
adc
inc
hlt
jb
mov
hlt
hlt
dec
daa
inc
cmp
mov
cli
inc
cmc
jp
adc
push
mov
sub
fs
cmp
lds
adc
mov
inc
rclb
insb
int3
pop
cmpb
push
mov
pop
repnz
sbbb
jmp
repz
out
ret
jnp
inc
mov
fldcw
shrb
xor
push
mov
or
add
inc
stc
jno
xor
ljmp
pop
cmp
aad
and
stos
xor
in
jg
rclb
pop
aad
popl
jne
inc
enter
movsl
shl
push
cmpsb
les
js
cmp
mov
xor
push
inc
mov
stos
in
rcll
lret
fst
pop
sub
dec
ret
sub
das
sub
mov
shlb
mov
sub
xor
push
es
mov
shl
lods
xchg
jecxz
xor
or
scas
pop
jp
and
xchg
push
and
cs
pop
cli
pop
lods
adc
shlb
pusha
mov
movsb
push
push
or
scas
push
xchg
xor
and
push
sbb
enter
sub
adcw
mov
push
and
xchg
or
mov
aam
cwtl
add
mov
xor
sbb
xchg
iret
xor
je
xchg
imul
lcall
push
jae
movsl
jecxz
iret
fwait
add
push
dec
push
mov
or
jnp
paddusw
std
loop
xor
xchg
aas
cwtl
and
jns
push
xchg
xchg
dec
dec
jle
mov
mov
imul
xor
sbb
push
lret
rcll
inc
incl
jae
adc
lods
jmp
popl
popa
sar
sti
cli
inc
fsubrs
fs
and
xchg
in
and
scas
xor
lock
movb
cli
sbb
pop
cltd
pop
subb
cmp
dec
inc
adc
jmp
movsb
rcll
test
insl
int
addr16
xchg
mov
adc
shlb
inc
pop
cli
xor
and
insl
call
inc
push
jae
ss
cld
shl
pop
push
rcll
cmpsb
cmp
cltd
in
jg
mov
into
scas
imul
pushw
out
pop
or
mov
out
pop
imul
nop
xor
les
in
shlb
rolb
shl
sbb
and
aam
movsl
pop
sbb
rcrl
scas
mov
or
jae
lcall
fisubl
icebp
pop
pop
mov
aad
and
xchg
pop
mov
test
out
cltd
mov
or
mov
addr16
xor
sbb
addl
xor
repz
aad
xchg
xchg
stos
cmp
dec
sbb
push
xchg
lods
les
jnp
mov
insl
pop
mov
mov
push
mov
notl
push
pop
mov
mov
add
push
fcom
cltd
lods
dec
aas
popa
dec
sub
gs
gs
dec
movsb
cld
mov
jp
hlt
or
sub
push
pop
and
xor
lods
dec
mov
adc
aas
push
cmpsb
inc
call
aaa
jns
ss
jle
xchg
in
aam
mov
stos
in
loop
shll
cmp
pop
scas
inc
pop
pop
loop
sub
push
ss
shrb
jecxz
push
or
movsb
std
es
sbb
das
negl
fdivl
lret
arpl
push
scas
mov
sbb
sbb
push
movsb
push
notb
rcll
aaa
movb
or
cmp
adc
add
jbe
nop
rorl
pusha
into
cmpsb
push
add
hlt
or
fdivl
cwtl
addb
int
sbb
mov
test
out
movb
or
xchg
pop
repz
push
std
sarb
xchg
in
sub
sbb
pushf
mov
push
pop
aad
test
or
add
pushf
mov
inc
aas
mov
mov
iret
inc
pop
stos
push
enter
ja
test
sub
cwtl
mov
cli
sub
inc
cltd
hlt
mov
sbbb
jl
or
fimuls
lods
ss
adc
pop
js
or
pushf
inc
mov
or
stos
je
icebp
or
enter
xchg
das
cmp
xor
mov
rcll
mov
mov
adc
mov
or
pop
mov
pop
jmp
xor
dec
dec
jecxz
mov
adc
dec
jl
movsl
jno
fnstenv
mov
pop
xor
cmc
gs
sub
dec
mov
dec
inc
test
sbb
xor
sub
xor
js
in
mov
je
lret
or
jecxz
inc
scas
popf
popa
out
mov
and
mov
mov
bound
inc
fisttpll
int
pop
lea
orl
gs
mov
and
mov
cmpl
pop
lods
sub
xchg
fucomi
mov
aas
adcb
cmpsl
push
dec
adc
aaa
fwait
mov
mov
outsl
push
stc
out
addb
mov
adc
je
mov
std
sub
xchg
pop
inc
iret
or
pop
outsl
std
sub
gs
mov
je
fdivp
imul
push
add
mov
xorb
pop
sahf
pop
scas
xor
setp
xlat
pop
adc
xlat
fs
out
fucomi
shl
jge
push
je
pop
es
bound
stos
xor
insb
loopne
fwait
adc
jle
pop
cmpsb
mov
jmp
jnp
das
iret
outsl
subb
sarb
repz
inc
sbb
sbb
xor
insb
aas
popa
fsubrs
imul
or
shl
jp
cmc
jns
lods
mov
adc
data16
dec
iret
insb
or
xor
mov
cmc
mov
cmp
push
in
into
push
in
pop
lods
sbb
insl
push
xor
jg
faddl
data16
xlat
cmp
loop
shrl
lcall
es
cltd
stos
cmpsb
addr16
inc
pop
adc
push
xchg
push
mov
pop
int3
inc
mov
jl
mov
lods
out
adc
mov
popa
push
add
mov
cld
arpl
and
outsl
dec
pop
outsb
sbb
adc
arpl
pushf
sarb
mov
pop
adc
leave
sbb
insl
cmpsl
mov
inc
xchg
mov
mov
testl
aaa
movsb
pop
jle
mov
stc
push
or
lods
movsb
inc
clc
mov
scas
icebp
int3
shlb
aad
add
ljmp
arpl
and
negl
push
jge
out
jae
test
push
js
cmp
mov
sti
arpl
dec
insb
jnp
shl
lcall
decl
add
add
int3
lds
insb
mov
or
jo
xor
js
popf
fsubs
movsb
adc
mov
adc
ret
dec
cmovp
cli
movsb
out
xchg
push
pusha
xor
mov
push
test
pop
and
add
jns
and
jg
adc
popf
cmp
mov
cmpsb
mov
in
mov
in
ret
daa
and
daa
dec
sarb
mov
int
pop
rolb
out
push
sbbl
dec
negl
ds
repz
lds
lods
jl
mov
sbb
pop
dec
cmp
lods
push
dec
mov
jge
outsb
mov
jl,pn
rcrb
cmp
xor
jecxz
in
fsubrs
cltd
mov
lea
lret
in
cld
leave
or
mov
aam
lods
ljmp
lret
or
lahf
mov
shlb
push
cmp
aas
les
jb
xor
movsb
pextrw
lods
rorb
or
mov
into
out
xor
inc
sbb
ds
and
dec
push
rorl
aaa
and
xchg
lahf
mov
push
jnp
mov
cmp
popa
fcmovne
fnsave
jo
mov
mov
fmull
mov
mov
call
clc
popf
sub
mov
push
pop
loop
cltd
mov
adc
push
push
push
test
lock
lret
adc
push
xchg
sbb
lea
inc
andl
add
es
cltd
xchg
xchg
jle
mov
dec
scas
lret
or
add
inc
mov
xchg
push
ja
test
sahf
mov
and
pop
insl
mov
dec
int3
lcall
test
sub
loopne
xor
sbb
stos
mov
icebp
mov
fsubl
int3
dec
pop
sbb
out
loop
dec
iret
popf
rcl
mov
and
sub
xor
scas
int3
xor
mov
mov
xlat
fwait
and
xor
add
push
and
fbstp
jbe
movsl
pop
dec
cmpps
push
xchg
cmp
xlat
mov
or
dec
hlt
scas
xchg
rol
out
sub
popf
fucomp
movsl
das
icebp
adc
out
repz
pop
inc
jne
mov
push
clc
fcompl
xor
hlt
sub
jns
and
in
add
shl
inc
je
xchg
dec
rcr
mov
add
popa
sub
aas
das
sbb
es
shrb
mov
cltd
mov
xor
icebp
lock
dec
pop
sbb
inc
jmp
pop
cmp
xchg
fstps
cwtl
sub
fisttpl
arpl
bound
ret
pop
xor
xchg
shrl
dec
pop
call
outsb
lret
lahf
mov
jecxz
dec
dec
in
sub
in
pop
sbb
add
jno
call
adc
dec
dec
or
mov
dec
sub
out
pop
fwait
mov
xlat
and
mov
and
into
pop
loop
out
and
mul
jb
lahf
sbb
dec
jmp
sbb
mov
cli
pop
push
hlt
add
cmpsb
mov
lods
fcoms
ret
test
mov
call
test
popa
xor
ds
test
lret
jmp
ret
shr
shr
test
scas
enter
or
test
adc
jge
lock
push
lods
pop
les
data16
or
shll
sub
stos
inc
xor
testl
push
mov
push
or
inc
sub
scas
fdivl
push
mov
add
jo
lret
stos
out
scas
fcomp
insb
xchg
fcomps
lods
into
ss
push
movhps
pop
sbb
test
lret
ret
divb
and
jne
sbb
test
sbb
mov
mov
imul
add
jecxz
pop
fidivrs
cltd
mov
dec
fdivr
pop
cmpsl
xchg
push
jne
popf
adc
test
int
lods
sub
fsts
push
mov
jle
push
into
clc
or
sbb
ljmp
pop
enter
test
dec
jnp
jae
dec
fldenv
out
lods
in
xor
in
ficoms
mov
dec
aas
scas
push
out
pusha
icebp
add
mov
in
int
inc
in
jne
fs
dec
xchg
ja
and
into
xchg
cmpsb
scas
push
mov
dec
inc
scas
xor
nop
test
push
test
or
ds
mov
insl
jbe
movsb
inc
inc
inc
rol
test
push
out
test
mov
inc
mov
jo
sbb
jno
fidivl
mov
mov
add
inc
jle
push
test
ficoms
xchg
push
rorb
invd
sub
sbb
addr16
mov
pop
lods
rcrb
mov
inc
push
mov
add
cwtd
inc
popa
jp
shrb
pop
or
and
pop
jp
push
ds
pop
xchg
adc
adc
sbb
sbb
dec
imul
pop
jbe,pt
xchg
or
adc
iret
add
cld
call
dec
iret
add
sarl
mov
xor
adc
pop
dec
cmp
cmp
mov
inc
roll
sub
std
xchg
mov
addl
fsubrl
es
xor
jae
movsb
pop
arpl
push
ffreep
push
mov
sbb
fs
dec
dec
dec
fcmove
es
rcrl
mov
sbbb
pop
and
fdivl
jge
lcall
outsb
cli
mov
pandn
or
xor
test
stos
fdivr
inc
pusha
jg
les
orb
divl
xlat
fwait
push
movaps
adc
xor
and
adc
lahf
hlt
es
pop
dec
pop
push
leave
movsl
cmp
xchg
ret
mov
or
stc
mov
lods
scas
ss
div
hlt
out
mov
pop
mov
fidivrl
loopne
stc
and
sarl
pop
cmp
imul
call
mov
dec
icebp
cwtl
adc
pop
sub
repnz
jno
dec
les
fwait
sbb
pop
sub
mov
icebp
data16
xlat
lahf
int
mov
and
nop
push
push
je
adc
and
jmp
in
inc
mov
andl
cmp
mov
jecxz
mov
adc
push
cmpsl
jne
or
call
pop
add
outsb
mov
jno
enter
dec
lret
lahf
add
das
xchg
push
sub
push
mov
dec
stc
mov
sub
push
xchg
es
xchg
xchg
mov
rcll
subl
mov
ss
push
add
xadd
sub
dec
cs
add
popf
clc
ret
jno
xor
dec
add
push
push
shlb
inc
xchg
and
js
jp
mov
push
xchg
dec
mov
xlat
jmp
mov
adc
addr16
jno
outsb
imul
or
push
imul
sbb
testb
incb
push
je
cwtl
aam
inc
loope
shll
push
aas
imul
sahf
icebp
cmp
mov
fimuls
fbld
pop
pop
insl
jmp
pop
aam
and
gs
lds
arpl
sahf
loop
data16
mov
and
pop
loopne
adc
test
xor
cwtl
push
jp
arpl
dec
mov
call
call
dec
cltd
dec
orb
arpl
inc
rcrl
out
cmp
pop
pop
jg
pop
daa
ss
mov
mov
pop
inc
icebp
push
inc
mov
nop
cmp
popf
jnp
dec
push
push
push
test
fcmovnb
xchg
pushf
ss
mov
add
ss
xor
in
mov
pop
je
fiadds
push
mov
push
jmp
je
lcall
inc
lret
sarl
mov
and
loop
std
sub
inc
mov
adc
cmc
rcrl
sar
inc
xchg
shl
and
ror
stc
cmpsl
inc
add
add
outsl
sub
fistl
cmp
mov
sub
jno
xor
fdivl
or
out
adc
icebp
dec
mov
lret
and
test
adc
or
test
add
pop
repz
xchg
leave
cli
sub
out
jge
xor
rolb
ds
pop
xchg
sahf
mov
dec
push
sub
lcall
int3
aam
sti
in
or
stos
rcl
sbb
jge
and
and
xlat
push
or
mov
push
push
ret
cs
addr16
in
pop
add
lret
das
mov
pop
jbe
test
xchg
scas
push
movsl
nop
aas
sbbl
pop
out
test
int
mov
dec
icebp
or
repz
stc
jns
xor
mov
sbb
insb
push
cmp
jb
pop
pop
dec
jae
or
push
or
js
dec
pop
xor
xor
push
mov
cmp
das
cld
lods
fldenv
cwtl
mov
mov
xchg
in
fs
sbbl
xchg
ss
dec
movb
jle
and
xchg
pop
mov
or
rcrb
les
popa
xchg
jno
js
sub
les
inc
xchg
inc
sub
lahf
mov
sbb
add
jmp
insl
movsb
in
push
add
leave
fistpll
scas
cmp
lret
cld
lahf
lret
ljmp
fmull
jl
rcrl
dec
movsl
es
xorl
ja
pop
out
xchg
loope,pn
and
adcb
icebp
or
jne
mov
sbb
xchg
mov
dec
cmp
jne
pop
lret
fsubl
out
push
mov
push
aad
mov
or
add
pop
xchg
or
ljmp
xor
lcall
and
jl
and
pop
scas
int
xor
adc
icebp
jle
xchg
out
and
adc
imul
test
sbb
mov
test
push
movsl
cmpb
mov
mov
std
or
push
xchg
stos
addr16
jg
push
ret
mov
push
cmpsb
add
aam
jne
push
cmp
dec
jp
cld
push
lret
pop
sub
aam
push
pushf
mov
xchg
outsb
mov
pushf
test
fwait
imull
cld
ret
fldt
mov
or
add
sub
shrl
mov
and
mov
stos
shlb
xor
push
imul
sbb
lods
dec
push
push
mov
scas
shl
inc
popa
jne
lea
lret
leave
out
xor
jecxz
and
mov
jo
dec
mov
cmp
push
sub
inc
and
clc
loopne
mov
or
insb
negb
sub
loopne
jg
ss
push
fnstsw
popf
fidivrs
out
clc
mov
test
scas
mov
or
xchg
xchg
xchg
push
inc
cmp
test
or
adc
jge
adc
lds
xor
pop
mov
jl
xchg
pop
jno
push
call
dec
les
pop
ja
pop
push
ja
pop
jae
and
ljmp
stos
inc
add
push
loope
movsb
mov
cltd
das
sahf
sub
push
add
sbb
cli
filds
sahf
pop
push
lcall
js
xchg
mov
cld
cmc
mov
or
xor
sbb
lock
ficoml
jae
push
ss
popa
push
mov
or
cmpsb
les
insb
inc
ss
push
cmp
xlat
and
mov
xor
iret
cs
shlb
push
mov
mov
mov
mov
dec
adc
mov
fidivrs
sbb
xchg
xor
sub
lods
pop
call
xor
movsl
jns
hlt
inc
iret
sbb
add
pop
xor
push
sub
push
sub
out
push
cs
and
sar
mov
jae
or
fists
cltd
outsl
sub
lods
jl
ss
ret
mov
or
pop
dec
adc
mov
push
aad
cli
add
xchg
in
xor
add
into
lea
fimuls
and
inc
fidivrs
pop
dec
loope,pn
insl
repz
adc
std
pop
std
lods
pop
cmp
inc
inc
testl
inc
imul
out
sahf
add
inc
or
popf
or
hlt
leave
adc
ret
and
push
sbb
unpcklps
sub
mov
cmp
rcrl
xchg
mov
int
lods
add
mov
jbe
pop
fimuls
in
mov
adc
cmpl
rorl
in
push
mov
pop
aas
or
add
cmp
das
outsb
xor
repnz
outsb
mov
xchg
dec
mov
gs
push
mov
and
pop
bound
hlt
repz
pop
dec
or
lret
pop
shr
out
in
xor
out
mov
loopne
ret
les
push
shlb
mov
mov
sarl
addl
outsl
mov
jge
or
and
aas
lea
rcrl
add
adc
dec
xchg
mov
inc
ljmp
adc
jnp
mov
mov
popa
pushf
popf
into
ds
outsb
rcr
xor
jnp
jbe
mov
pop
xor
push
lea
jbe
loop
int
xchg
cmc
xor
shlb
mov
sub
cwtl
pusha
pop
sub
inc
pushl
dec
test
dec
int3
xchg
jb
cmpsb
cmp
gs
xor
pop
mov
in
sbb
ja
xor
ret
sbb
xchg
aas
pushf
jns
scas
jb
fldenv
adc
xor
pushf
xchg
mov
jmp
arpl
xchg
mov
cmpsb
div
stos
pop
dec
hlt
jne
inc
jno
sbb
test
pop
sbb
pop
add
lahf
cltd
int
pop
jecxz
mov
dec
xchg
xor
sub
ficomps
fildll
xchg
xor
xlat
ficoml
int3
cs
xor
xor
int
jns
ret
and
repz
fcomps
add
or
pop
frstor
daa
mov
daa
cmpsl
js
test
cmpsl
sbb
fldt
clc
sbb
dec
inc
ja
insl
movl
loopw
mov
loop
mov
jae
adc
icebp
xchg
sarb
mov
cmovbe
xor
pand
xor
inc
inc
inc
cli
test
mov
dec
and
adc
cmc
jle
daa
xchg
int
add
push
xor
mov
test
test
clc
ja
sub
test
pop
loope
xor
rclb
push
push
fxch
addr16
jne
inc
idiv
arpl
in
push
xchg
push
lods
shl
iret
jbe
out
jg
fadd
push
test
testb
and
push
jae
inc
nop
scas
xchg
ficompl
pop
mov
shrb
jecxz
sbb
xor
popf
popl
test
ret
and
cltd
int
enter
jecxz
insl
push
mov
dec
jne
mov
inc
xor
in
repnz
dec
pushf
or
add
out
repz
and
mov
pop
xchg
push
add
cwtl
je
leave
jle
pop
push
subb
in
mov
iret
xor
cwtl
mov
xor
jns
cmp
enter
int3
push
cld
ss
in
lods
push
sete
rcrb
cmc
push
lret
xor
in
sbb
add
into
repnz
aaa
sbb
out
sbb
fisubl
shll
les
push
or
dec
sbb
xor
xchg
movsb
rcl
pop
aaa
sbbb
or
insl
dec
add
ja
sbb
add
xor
jb
pop
test
filds
lea
stos
jne
pop
ljmp
add
lcall
pop
popf
mov
push
jecxz
mov
mov
push
mov
in
in
mov
pop
ss
test
cmp
jmp
movsl
pop
cli
and
cmp
in
mov
xchg
lds
aad
mov
das
sub
mov
xchg
inc
hlt
enter
cmpsb
sbb
into
out
xor
rcrl
mov
stc
mov
mov
ret
movsl
movsl
daa
mov
in
inc
jl
lods
stos
jbe
inc
out
cmp
lret
push
movsb
cli
inc
cwtl
cli
pop
jae
jnp
out
pop
stos
jge
fisttps
hlt
les
pop
push
mov
jl
aam
pop
jp
push
inc
int
dec
pushf
sarb
push
insl
mov
mov
mov
fdivl
loop
jle
jmp
es
mov
xchg
pop
and
mov
mov
insb
loopne
movsl
xor
mov
test
or
mov
sti
sbb
das
push
bound
mov
loop
inc
mov
aaa
popa
jge
cld
sub
imul
sbb
xor
push
dec
xlat
adc
arpl
mov
sub
mov
cmp
add
or
xchg
dec
fwait
pop
ss
call
push
popa
or
sub
fs
jmp
jno
iret
mov
scas
iret
lea
mov
or
ss
jecxz
jno
rclb
cwtl
repnz
jnp
sbb
mov
enter
pop
mov
fcomi
and
mov
cld
or
imul
or
dec
out
pop
or
push
adc
aad
out
cmp
mov
ljmp
in
gs
pop
lods
xor
mov
fadd
mov
xchg
adcb
push
outsl
mov
dec
mov
stos
shrl
jg
sub
xchg
inc
andl
mul
je
imul
fwait
adc
test
pop
ja
fldl
mov
cmp
xchg
mov
scas
aam
out
stos
jbe
imul
fdivrs
mov
pop
ret
and
pop
adc
push
sti
pusha
sbb
dec
fwait
clc
mov
push
aam
inc
std
imulb
test
push
mov
cli
dec
test
sub
fsts
test
lcall
sbbb
and
or
rcll
and
ja
jno
dec
fimuls
dec
push
inc
call
jns
outsl
add
mov
xchg
sahf
lcall
je
je
mov
mov
mov
mov
test
mov
add
xor
mov
pop
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
sahf
sbb
adc
jp
popf
sbb
mov
inc
pop
sub
sub
call
mov
repz
hlt
pop
out
aam
shl
shlb
fstpl
add
inc
outsl
adc
mov
pop
clc
cmp
lret
dec
inc
clc
aam
and
rcrl
cwtl
add
insb
mov
lar
jle
cmpsb
xor
and
inc
cmpsb
in
xchg
fcmovnb
push
std
push
inc
rorl
xor
or
xlat
dec
rcrl
int
stc
mov
push
dec
push
or
lcall
adc
jae
mov
je
push
lock
filds
push
pusha
cmp
and
pop
fcomp
stos
pop
imul
dec
jmp
inc
pop
lods
shr
ret
ds
jno
add
and
add
fs
push
mov
push
loopne
insl
cmp
add
cmp
jp
mov
outsl
iret
out
mov
mov
hlt
out
lahf
iret
repnz
movsb
push
loope
cmp
cmp
and
fldenv
pop
out
nop
xchg
mov
push
jo
push
jmp
or
push
adc
jmp
push
jl
dec
imul
mov
push
push
add
rcrb
inc
enter
adc
mov
pusha
or
loop
push
enter
push
out
jae
sbb
lock
dec
mov
fstps
add
and
insl
jae
pop
mov
xor
ret
mulb
xor
push
call
or
sbb
xor
inc
xor
xor
sub
xchg
mov
mov
sbb
cmp
add
call
push
lahf
arpl
push
mov
xchg
dec
push
mov
mov
mov
mov
cmp
test
sti
jno
cmp
mov
imul
stc
in
mov
or
call
shrb
scas
sbbb
push
mov
mov
cmp
add
gs
mov
mov
pop
clc
hlt
hlt
pushf
add
pop
jg
xlat
sbb
xor
popf
pop
push
pop
test
repz
dec
lds
add
movsl
cmp
cmp
cli
fstpl
push
imul
std
or
fs
xchg
ror
adc
xorb
int3
lods
mov
lock
adc
or
lahf
iret
clc
loopne
gs
dec
xchg
mov
mov
sub
adc
cli
push
xchg
xor
shll
rol
dec
xor
in
pop
add
test
aad
clc
push
dec
ja
in
lret
or
dec
push
and
stos
ljmp
xor
fbstp
push
test
stos
lock
push
jae
fdivrl
dec
mov
or
orb
lods
push
cld
orb
inc
mov
inc
fisttps
xchg
sub
jno
ret
mov
push
les
mov
lret
addr16
pop
ds
xor
popa
dec
mov
adc
jge
jae
mov
js
dec
pushf
xchg
add
pop
cmp
stos
call
js
lock
in
inc
insb
mov
hlt
xor
inc
dec
bound
add
pushf
mov
and
xor
mov
and
push
cmp
push
cmc
idivl
iret
sub
lahf
lods
push
xchg
inc
mov
sbb
and
js
sub
or
pop
push
xor
nop
xchg
inc
addl
aaa
outsl
or
pop
or
cmpsb
mov
filds
push
push
movsl
sub
pusha
xlat
mov
lods
mull
lods
mov
mov
xchg
adc
sub
dec
sahf
and
inc
or
stc
dec
cmp
xchg
push
jno
mov
inc
lods
mov
xchg
test
popf
jns
mov
cmp
popl
cmp
adc
rcrb
xchg
mov
adc
push
lret
mov
inc
adc
imul
aas
jl
insl
loope
sub
imul
sarb
pop
mov
ds
sub
push
jge
xor
mov
dec
fistl
adc
inc
ret
mov
lahf
adc
enter
adc
and
es
mov
cmc
add
add
jno
and
adc
push
or
jmp
jne
loop
sub
mov
pop
jb
mov
repz
pop
mov
out
push
or
xchg
jle
shrb
mov
adc
mov
inc
test
pop
scas
mov
add
cli
push
sbb
fldt
shlb
jae
rcr
pop
aas
fs
shrl
cmc
push
xor
pop
mov
jnp
mov
jb
stos
jb
lcall
outsb
outsb
scas
push
mov
arpl
enter
cmp
mov
and
pop
jl
lods
cwtl
xchg
xchg
and
aaa
lock
aam
mov
or
mov
push
and
enter
inc
dec
aam
xchg
adc
sbb
push
xchg
dec
add
scas
ja
push
popf
sub
idivb
sub
loope
pop
mov
jle
mov
cltd
and
pop
fnstenv
mov
dec
adc
cltd
lret
pop
pshufw
scas
stos
lcall
dec
mov
mov
es
int3
int
into
outsb
rcrb
xor
ljmp
sbb
push
cmp
cwtl
lds
xor
xchg
jmp
and
hlt
dec
call
test
pop
js
cmp
sbb
add
add
inc
mov
cmp
les
mov
and
ret
push
mov
add
outsl
ficomps
cmp
aas
xchg
lock
shll
pop
xor
jo
dec
rolb
mov
repz
stos
lea
push
imul
xorb
lret
mov
mov
mov
mov
cli
cwtl
and
lds
dec
xchg
xchg
insl
test
lret
mov
jmp
lret
xchg
outsl
mov
mov
xlat
cmpsb
add
testb
dec
je
mov
scas
sbb
icebp
inc
mov
jg
pop
and
xlat
jge
cmpsl
pop
ljmp
jne
std
inc
pop
push
jb
pop
cwtl
or
fs
sub
insl
jb
scas
sub
xor
dec
scas
ret
lcall
roll
in
mov
ret
mov
popf
pop
pop
pusha
jbe
pushf
cs
loope
adc
pop
mov
mov
dec
push
xor
push
aad
jno
dec
test
inc
cwtl
dec
pop
add
arpl
inc
bound
orl
arpl
pusha
iret
ds
push
lcall
pop
inc
dec
mov
test
push
jmp
lahf
xchg
mov
adc
xor
cli
jl
cwtl
iret
ficomps
fists
pop
out
push
pop
push
fmuls
arpl
mov
push
and
ret
neg
stc
shlb
jge
adc
leave
cmpb
scas
jbe
dec
add
fdivrl
push
push
stos
inc
lret
push
std
lods
icebp
dec
sub
and
dec
inc
mov
movsl
repnz
in
inc
aas
sahf
or
mov
mov
pop
jnp
and
push
int3
mov
inc
inc
add
xchg
cld
test
add
mov
loope
jmp
sub
and
aas
xchg
xchg
mov
xor
lods
cmp
xor
pop
mov
or
insb
fimuls
pop
out
lret
mov
xchg
out
xchg
mov
mov
xor
test
push
cld
mov
or
shll
stc
xor
jge
pop
mov
into
lahf
mov
push
lods
jl
xchg
lcall
mov
popa
inc
inc
rcrl
pushf
mov
fsub
or
popa
repz
out
test
stc
lea
sbbl
push
out
push
and
nop
or
mov
jg
or
cwtl
testl
pop
jae
pop
xchg
je
xor
mov
mov
arpl
mov
pop
subl
push
and
mov
repnz
or
xor
pushf
jl
cmp
cmp
cmpsl
jge
inc
stc
adc
cmp
pop
sti
mov
or
inc
mov
pop
pop
sub
loope
fnsave
xchg
nop
insl
and
rcrb
stc
cmp
and
dec
fstl
ds
sbb
sbb
pop
xchg
sub
lret
rcrl
stc
das
jae
or
fmulp
mov
mov
cmp
cmp
arpl
mov
xchg
aad
icebp
adc
inc
pop
mov
call
mov
xchg
fwait
inc
inc
mov
clc
lods
outsb
sub
or
fisubrs
xchg
shll
push
lahf
sarb
imul
jl
cmpsl
imul
hlt
pop
jmp
in
scas
mov
push
nop
push
leave
cmp
movsb
fdivl
push
inc
add
lock
jecxz
xlat
lods
lret
lcall
sarl
jb
sub
jle
stos
jns
lret
mov
lea
jae
jno
popa
push
imulb
fldt
test
xor
adc
aad
mov
test
daa
out
cli
sub
aad
das
adc
sbb
icebp
lds
dec
xchg
stos
xor
loopne
inc
pcmpgtw
sub
inc
test
cltd
fsubs
mov
inc
sahf
cmc
inc
mov
pop
sub
jno
mov
ss
popf
bound
mov
ja
pop
loopne
jle
mov
jmp
or
stos
pusha
aam
adc
rorl
xchg
push
xchg
shll
nop
jp
xchg
inc
sbb
loopne
jle
sbbl
push
cli
sub
mov
adc
pushf
or
jb
iret
xchg
int
sub
stc
cli
mov
jp
adc
add
loope
xor
hlt
ss
xchg
in
iret
mov
push
jno
sub
xor
ret
pop
pushf
ret
in
out
dec
inc
pop
add
jae
stos
negb
jg
push
scas
inc
xchg
mov
mov
mov
jg
fldl
adc
and
clc
pushf
jle
mov
das
mov
aam
pop
fstpl
sub
jp
and
dec
sub
xor
shll
cmp
mov
and
bound
sub
test
mov
xor
cltd
dec
bound
out
jl
pusha
clc
daa
pop
bound
adcb
xchg
sbb
and
jp
dec
hlt
xlat
cld
icebp
inc
push
andb
pop
icebp
sub
sti
inc
push
int3
pop
jmp
dec
rol
test
add
xchg
adc
aaa
loopne
xchg
dec
mov
mov
or
fxch
or
sti
lods
mov
lret
jl
push
out
mov
mov
dec
xchg
cmp
pop
mov
sahf
mov
repz
sahf
adc
fsubrl
inc
repz
iret
mov
cmpl
fisubrs
sub
or
mov
sub
sbb
jmp
addr16
inc
jle
adc
je
mov
cmp
mov
xchg
cmp
fists
cmp
adc
iret
xor
mov
adc
test
cs
mov
jle
or
cmpsb
push
popa
push
pop
dec
lret
pop
popf
fwait
repz
pop
push
dec
mov
call
nop
add
mov
pop
fcomip
mov
in
mov
nop
ror
stc
adc
xlat
adc
pop
insl
js
jne
xor
lahf
inc
sub
testl
add
nop
test
mov
or
pop
sub
mov
lods
mov
cmp
ljmp
mov
jmp
add
mov
pop
add
lret
mov
or
fstl
sar
adc
cli
jbe
iret
or
repz
xor
dec
rorl
mov
sub
sub
mov
nop
rolb
aaa
mov
mov
pop
aam
mov
test
mov
sub
adc
or
xchg
pop
sahf
es
cmc
jbe
repz
mov
ficoml
outsl
imul
xor
les
mov
jecxz
push
lds
cmp
dec
and
rorl
add
xchg
addr16
clc
jmp
pop
out
mov
arpl
pusha
inc
inc
icebp
add
inc
arpl
adc
pop
and
mov
or
sub
js
repnz
push
out
les
movsl
push
mov
scas
rclb
in
adc
jnp
pop
rcl
loope
jbe
outsl
xchg
or
mov
lds
xor
mov
jno
lea
add
sub
test
les
in
lea
mov
imul
xchg
aas
mov
pop
pop
xorb
sbbb
lea
das
jp
pop
imul
sbb
mov
mov
mov
dec
inc
sbb
mov
or
loopne
imul
imul
fdivl
inc
adc
mov
adc
jle
and
mov
cmpsb
jbe
xchg
xchg
fnstenv
outsb
and
dec
out
pop
pop
lea
mov
daa
icebp
adc
dec
pop
out
mov
inc
lret
incl
jmp
xlat
jo
pop
call
in
loop
out
insl
mov
nop
cmpsb
jp
sbb
push
mov
xchg
inc
push
jle
or
cltd
push
cmp
push
inc
adc
add
test
in
cld
push
pop
int3
das
mov
xchg
push
dec
imul
mov
fimull
stos
and
jg
xchg
aad
mov
repnz
movsb
scas
sbb
xchg
fwait
addr16
jg
push
pushf
mov
bound
stos
fildll
aaa
push
ret
inc
gs
xor
sbb
jne
inc
xchg
dec
outsl
loope
fistl
xchg
mov
loopne
push
pop
cmp
sub
xor
dec
or
scas
push
pusha
push
sbb
xchg
xchg
iret
outsl
daa
xchg
test
insl
fiaddl
mov
pop
lods
aam
mov
imul
outsl
sti
adcb
mov
or
xor
lea
incb
pop
enter
icebp
js
test
ss
inc
pop
inc
std
pop
jb
and
adc
mov
out
xchg
dec
adc
dec
xor
enter
les
jg
outsb
shl
push
pop
fwait
cmp
mov
out
roll
lock
pop
xchg
fdivrp
pop
add
xor
inc
add
xorl
test
sbb
xor
loop
add
aad
dec
ret
aam
pop
pop
stos
std
loop
fcompl
dec
push
imul
dec
cmpsb
stc
mov
xor
sub
flds
fistps
dec
mov
push
shl
or
cmp
incb
lock
fldt
in
outsb
jae
cmp
mov
sti
mov
sbb
shrl
jp
or
jnp
jp,pt
roll
mov
push
test
pop
or
popa
mov
dec
in
mov
jns
and
xorl
notb
fnstenv
es
mov
xor
outsb
gs
push
dec
popa
lcall
daa
ds
push
shll
jp
ficoml
or
mov
mov
sub
add
add
add
mov
sbb
mov
fisttps
push
and
add
mov
cmp
pminub
push
cld
jnp
jecxz
mov
enter
outsb
addl
cmp
mov
push
icebp
add
pop
pop
rorl
inc
fwait
es
sti
inc
or
andnps
aas
pop
popf
insl
in
aad
xchg
fisttpll
pop
pop
js
jge
and
insl
scas
mov
dec
seta
in
fmul
inc
sti
sbb
cli
pop
out
mov
mov
or
mov
xor
fsts
sub
xor
sbbb
add
inc
into
add
add
mov
testl
fimuls
push
xor
out
sbb
add
test
fidivrl
fldt
cld
xor
hlt
mov
ret
and
xlat
push
or
aam
jb
jl
out
insl
std
mov
les
mov
popa
adc
cmp
lret
cmp
into
daa
jg
stos
rolb
add
rorb
xchg
mov
int3
ds
mov
adc
jo
rol
add
mov
jae
fnstsw
xchg
out
cld
ljmp
cli
imul
xchg
rol
movsl
rcll
lds
mov
add
pop
ss
out
and
cmc
or
jns
pop
clc
rorl
scas
xchg
mov
dec
inc
mov
mov
lds
pop
mov
mov
lea
int3
stos
pop
xchg
sbb
inc
leave
cmc
out
mov
xchg
frstor
lods
or
sub
insb
in
cmp
xor
pop
out
push
sbb
xlat
xchg
es
push
mov
into
enter
je
sbb
inc
sbb
inc
add
clc
jno
enter
ror
cltd
stos
sarl
shl
fldl
pop
out
xchg
jmp
add
sbb
cmp
inc
clc
jmp
and
imul
out
inc
pop
push
jp
sub
fcoms
mov
out
jbe
cltd
jnp
mov
pop
inc
ljmp
cltd
xor
repz
mov
adc
das
daa
lret
mov
xchg
into
fstpl
inc
aad
cmp
pusha
or
fsubr
xor
fadds
and
xor
in
mov
iret
push
sbb
sbbb
inc
xchg
jg
ss
andl
adc
inc
mov
jns
xchg
mov
pop
push
adc
mov
andl
fdivrp
nop
stc
and
pop
or
lea
sbb
test
xchg
xchg
loopne
inc
pop
mov
sub
sarl
fwait
scas
cli
inc
xchg
sub
aam
adc
inc
and
movsl
pop
lcall
dec
lret
loop
mov
addl
leave
cmp
or
mov
in
das
pop
mov
jp
xor
adc
fsubs
shl
mov
iret
shll
inc
mov
je
mov
push
sbb
mov
mov
jg
test
jne
iret
lcall
cmp
and
imul
add
daa
sbb
inc
mov
jl
and
jmp
ljmp
shrb
adc
cmp
mov
cmp
arpl
and
sti
leave
movsb
mov
rol
out
fdivr
fnstsw
adc
mov
aad
insb
xor
xchg
into
mov
push
sub
and
add
dec
fcmovnbe
pusha
xchg
sub
repnz
sbb
cmp
ljmp
sti
lea
ds
mov
xor
xchg
dec
rol
repz
std
sub
mov
out
int
inc
lahf
pop
mov
repz
fisubs
sub
cltd
xchg
xchg
add
sbb
xchg
loope
fs
or
pop
les
sahf
xchg
call
mov
inc
cld
jg
xchg
dec
fisubs
imulb
push
or
imull
cmpsb
les
sbb
nop
pop
fcom
sbb
add
ret
outsl
cmp
pop
push
lret
cmp
mov
add
addr16
test
fsts
xchg
cmp
jb
jne
cmpsb
add
dec
andb
call
mov
mov
mov
add
mov
loope
out
push
orb
loope
fildl
sar
daa
scas
ja
pop
js
push
arpl
mov
aam
cmp
cwtl
inc
and
and
mov
adc
rolb
insl
or
pushf
idivb
movsl
jnp
fadds
ret
out
lods
push
out
inc
mov
xchg
popf
ret
xor
jge
mov
cli
negb
xor
test
push
aam
movsl
bnd
jbe
cld
push
in
adc
fs
pop
pcmpeqd
push
pop
add
je
mov
pushf
or
adc
mov
adc
push
fbld
out
fwait
xor
cmp
adc
jns
jg
js
pop
push
in
add
xor
lds
scas
out
mov
psrlq
cmpsb
push
push
dec
jp
mov
inc
push
mov
cmovs
pop
popf
pop
dec
aas
and
call
hlt
out
pop
or
mov
dec
mov
in
pop
pop
pop
add
rorb
cmpl
cltd
test
cmp
push
adc
outsl
sbb
lahf
movb
sub
lahf
jns
sbb
xor
es
xor
mov
mov
cmp
hlt
js
xchg
iret
aam
adc
ljmp
aaa
sub
test
xlat
sub
pop
jbe
dec
inc
xor
and
adc
mov
jmp
fsubrp
add
xor
ja
and
push
pop
test
fldcw
jmp
out
adc
stos
jmp
or
xor
sbb
sub
nop
imul
and
iret
pop
in
mov
test
outsl
inc
cmc
jl
cmp
leave
pop
popf
cwtl
mov
jecxz
js
bound
adc
push
push
nop
scas
loope
scas
mov
sti
cmp
inc
dec
jb
test
imul
fst
loop
mov
out
adc
mov
push
add
aas
js
mov
sub
pop
xorl
test
les
inc
das
mov
rcl
and
scas
das
push
cltd
mov
jne
das
inc
xchg
movsb
jle
or
aaa
and
lret
and
insl
cmc
xchg
call
out
aas
cmp
sbb
imul
mov
xor
jo
and
fsub
fldl
add
lret
xor
rclb
outsl
stc
enter
rclb
fidivs
xchg
loope
stos
mov
scas
mov
xchg
ljmp
pushl
cmp
mov
sub
aas
jns
nop
int
xor
or
push
lock
pop
es
lods
push
data16
pmullw
add
pop
push
xor
cltd
iret
dec
enter
cmpsb
mul
repnz
subb
ljmp
add
mov
mov
dec
cmp
clc
out
mov
add
pop
push
cmpsb
sbb
fdivr
sub
mov
adc
insb
xchg
outsb
lahf
adc
mov
and
dec
push
push
mov
pop
cmp
mull
push
xorb
fsubs
push
cmp
or
mov
xor
stos
cmp
lcall
pop
mov
dec
popf
sahf
scas
dec
inc
push
in
les
xor
insb
mov
iret
rol
pop
stc
out
or
stc
sub
clc
cmc
data16
mov
shrb
xlat
test
jg
inc
mov
insl
inc
xchg
scas
je
mov
iret
lock
jmp
cmpb
int3
decl
xor
cmp
int
pop
daa
pop
iret
sub
push
std
shr
ds
xchg
xchg
mov
or
cmp
in
test
xchg
lods
ds
loope
and
addl
jmp
inc
and
add
cld
xor
insl
in
sub
jnp
xchg
sub
adc
mov
sbb
out
je
xor
aaa
movsl
sub
movsl
cmc
jp
mov
push
mov
inc
ljmp
and
jmp
pop
add
add
rcll
das
rcll
pop
dec
cld
arpl
data16
fsubrs
push
pop
mov
into
icebp
xor
inc
test
push
in
and
test
nop
adc
addr16
clc
mov
xor
mov
inc
sub
xchg
int3
push
push
cltd
xor
shrb
mov
inc
stos
dec
and
lods
push
stos
int
sub
bound
jl
imul
int
sbb
jns
fadds
jmp
push
std
cmp
test
nop
out
jle
es
cmp
dec
dec
jo
mov
cmp
test
dec
sbb
fnstcw
fstpl
adc
jne
dec
fs
mov
fists
addr16
cmc
sar
mov
sub
hlt
int3
mov
loopne
clc
adc
xchg
cmp
mov
sub
out
lea
xchg
or
fwait
xchg
push
jno
pop
xor
lock
lret
pop
out
loopne
sbb
or
cmp
cmp
mov
jb
gs
rorb
pop
movsl
cmp
jne
add
fcompl
cmp
fimuls
xor
aam
movsb
sub
xchg
in
adc
lret
call
rcrl
test
mov
push
imul
sbb
jmp
push
cmp
mov
mov
pushf
adc
cmpsb
jle
mov
testl
movsl
mov
cmpsb
mov
sub
adc
fdivl
xlat
xlat
sbbl
lret
xchg
dec
cmpsl
mov
ss
jmp
icebp
or
lret
push
mov
add
je
repz
cmp
mov
inc
aas
in
push
lock
xor
add
mov
mov
shr
add
js
cmp
into
pop
gs
dec
insb
jl
mov
mov
mov
xor
call
in
sub
arpl
mov
shl
jbe
mov
dec
push
fucomp
fldt
addr16
imul
inc
dec
cltd
or
mov
mov
or
subl
fisubs
lea
dec
push
leave
hlt
imul
iret
add
andl
adc
cwtl
mov
mov
adc
or
fs
data16
sbb
jns
sub
dec
mov
or
sbb
outsl
insb
hlt
fistpl
sbb
aam
sahf
scas
adc
dec
test
cmp
test
cmp
cmp
imul
mov
popf
dec
rcr
sub
sub
cmp
sub
ret
sbb
push
dec
ffree
mov
adc
inc
popf
aam
mov
mov
cmp
mov
loop
sbb
sbb
je
push
mov
pop
adc
cmc
cmpsl
aaa
push
insl
call
sub
hlt
pop
push
fs
gs
sub
in
je
clc
push
xchg
mov
cltd
repz
xchg
negb
leave
imul
mov
or
jg
mov
and
movsl
jno
sbb
and
imul
int3
cld
pop
popa
fisubs
mov
rep
inc
mov
call
mov
gs
std
jp
mov
stos
aam
in
iret
dec
xchg
jge
pop
push
mov
jmp
inc
cltd
outsb
inc
add
mov
cmp
inc
pop
dec
out
dec
inc
test
pop
lret
cmp
mov
sbb
dec
roll
mov
lods
push
lods
dec
push
pusha
dec
stos
jmp
mov
lock
mov
ret
cmovp
mov
add
test
sbb
add
dec
xchg
pop
into
or
mov
xchg
testb
sti
sbb
adc
lock
lods
nop
adc
xor
divb
outsb
add
pop
sbb
dec
sub
aas
aam
shll
sti
neg
shrl
push
lret
loopne
loopne
lds
icebp
mov
ficompl
xchg
outsl
shrl
in
cltd
leave
pop
outsl
in
and
lcall
icebp
stos
fists
dec
rorl
mov
mov
jae
mov
dec
cmp
lock
push
dec
ficoms
mov
stc
mov
btr
mov
add
xchg
xor
sub
sbb
jae
rcrb
mov
sub
int
hlt
ret
jl
bnd
sub
pop
inc
push
add
sbb
push
inc
inc
mov
fcmovu
dec
sbb
xchg
push
scas
add
mov
fsts
mov
push
mulb
jnp
push
pop
sub
sub
int
adc
and
bound
fisttps
add
mov
mov
sub
out
xchg
jb,pn
pop
xchg
rcl
cmp
in
aas
lock
imul
aam
std
push
jg
fsub
push
jbe
mov
int3
inc
add
lahf
jbe
in
into
xchg
sub
cmpsl
dec
stos
imul
cmpsl
imul
jmp
cwtl
ret
mov
ja
xchg
mov
add
notb
jge
shll
add
mov
aad
ret
ja
clc
sbb
call
add
mov
gs
or
out
daa
add
pop
imul
inc
pandn
lock
out
push
dec
fcmovnbe
dec
sahf
mov
in
lods
or
roll
std
std
jmp
push
mov
cltd
lcall
and
mov
sbb
sbb
int3
mov
or
mov
pop
aaa
xchg
dec
xchg
rclb
push
les
in
addb
mov
add
mov
mov
adc
mov
jge
ror
pop
enter
in
sti
clc
xchg
xor
cmp
ja
xor
sub
jmp
pop
mov
push
out
adc
jmp
cmp
fcmovnu
dec
insb
negl
int3
xor
dec
or
addl
das
jbe
dec
ror
xchg
cmp
cmp
cwtl
ret
pop
roll
icebp
sub
lret
rolb
imul
pusha
dec
pop
mov
rcl
adc
mov
xchg
push
fnstcw
xchg
cmp
imulb
subl
fimuls
cmp
loope
sub
cmpsl
pop
adc
mov
scas
xor
js
daa
push
rcrl
push
pop
and
xchg
jge
pop
jp
cmpsb
jns
pop
das
icebp
mov
push
xor
and
or
daa
xor
sbb
shl
aas
xchg
mov
mov
add
loopne
cli
mov
cmp
mov
or
lahf
aas
clc
push
mov
ds
rolb
inc
hlt
idivl
adc
cwtl
lahf
jb
xchg
scas
xchg
adc
pop
jnp
pop
imul
cmp
mov
jge
dec
inc
push
mov
lcall
push
jnp
movsl
cld
inc
or
lret
mov
sbb
and
push
stos
or
pop
adc
sbb
paddsb
push
xchg
ds
mov
leave
fidivl
movsl
clc
jle
inc
sub
aaa
push
out
fcompl
idivl
lea
fs
jecxz
or
pop
ja
sub
rcll
scas
jg
pmuludq
sub
mov
faddl
enter
popf
sub
test
cs
mov
xor
scas
add
add
pushw
push
mov
or
adc
rcl
add
mov
cmp
fs
lcall
loop
movsl
rcl
sbb
and
xor
xchg
pusha
int
mov
test
sub
and
and
or
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
int3
sub
pop
std
jns
adc
jp
sub
mov
xchg
adc
cmp
add
les
aad
inc
andb
adc
cli
xor
xchg
sbb
mov
xchg
sahf
aad
sub
jle
mov
sub
mov
sbb
add
stc
lret
adc
sub
rclb
jecxz
daa
and
cwtl
je
push
and
mov
cltd
stc
jecxz
cltd
push
cmp
jmp
mov
mov
push
and
in
lock
inc
dec
cmpsl
dec
ss
push
jge
push
xchg
jp
sbb
vpacksswb
adc
fsubrl
sbb
test
adc
fidivl
iret
ss
xchg
and
bnd
jmp
mov
push
decl
push
nop
addl
jmp
jmp
movl
xor
inc
lods
mov
cmp
mov
dec
ja
repnz
pop
icebp
mov
movsb
repnz
adc
mov
mov
daa
movsl
jbe
mov
jae
pop
add
adc
xorb
jae
out
cli
add
pop
push
pop
push
push
cli
test
ss
xchg
fcmovu
pop
jb
push
dec
in
sbb
or
mov
lcall
ret
in
loop
cmp
std
mov
push
movsb
sarb
aas
leave
jle
imul
shr
pop
call
ljmp
sub
scas
insl
mov
jb
mov
jnp
push
fwait
or
repnz
xchg
loop
jno
push
popf
lret
jle
xchg
cltd
enter
mov
push
movsl
lods
shll
sarb
loope
fstpt
jmp
add
jno
imul
xchg
jbe
push
add
push
shrl
fld
outsb
mov
mov
scas
xor
fimull
jecxz
push
push
add
std
mov
and
ss
add
shll
ljmp
xor
je
jnp
daa
lret
cwtl
dec
pop
push
cmp
mov
div
xor
jp
stc
popf
push
xor
es
mov
sub
mov
mov
jg
mov
pop
sbb
es
dec
and
sub
mov
cs
and
rcl
idivl
cmpsl
lods
mov
pop
cs
loop
and
gs
pop
aaa
addr16
dec
inc
pop
xchg
mov
mov
xchg
xchg
rolb
ss
ds
stc
jne
xor
fsubl
mov
out
cmp
or
sub
neg
dec
inc
repnz
stos
jmp
leave
mov
rol
dec
inc
mov
xchg
jo
sub
lahf
xchg
add
or
and
ret
insb
add
outsb
mov
pop
adc
fwait
lock
mov
stc
dec
mov
mov
mov
push
mov
jecxz
xlat
add
hlt
mov
lods
shrl
stos
xchg
xor
out
xchg
cmpsl
mov
xchg
aad
scas
cmp
jp
lods
rolb
lods
cld
lret
imul
popa
xchg
dec
cmp
pop
testb
fldenv
dec
and
enter
test
test
sub
loopne
outsb
scas
xor
rcrb
out
and
adc
adc
loope
loopne
rcr
dec
inc
clc
mov
push
clc
and
insb
ficomps
mov
inc
sahf
xchg
lock
std
in
out
inc
sbb
nop
aam
cld
leave
push
xor
shll
mov
fmul
adc
icebp
xchg
aam
jmp
inc
outsb
mov
inc
jmp
add
int3
rcrb
inc
movsb
dec
sbb
and
dec
shlb
lods
icebp
mov
adc
inc
orb
dec
sbb
notl
sbb
idivb
lods
xchg
push
jne
xor
outsb
enter
sub
out
inc
iret
inc
or
andl
or
clc
xchg
cltd
out
rcrl
sbb
or
jmp
lea
push
cmp
iret
in
addl
and
test
xchg
std
popl
xor
in
jbe
cmc
and
aaa
add
lods
mov
xchg
les
jo
int3
aas
xchg
les
jo
jne
mov
test
aaa
test
push
push
and
nop
sub
push
subl
or
loope
pop
dec
jo
xchg
out
inc
or
daa
pop
add
xchg
negl
xchg
pop
shrl
rol
mov
jbe
push
sbb
sarl
cmpsl
inc
inc
sbb
aas
jle
pop
in
hlt
fstpl
scas
imull
jmp
sbb
pop
test
daa
pop
mov
lret
adcl
sbb
icebp
stos
or
in
iret
inc
rorb
arpl
test
sub
ret
push
nop
or
mov
jb
inc
jmp
add
cltd
xchg
incl
sbb
movsl
cmpsl
lds
in
adc
das
subl
adc
shlb
lea
dec
loopne
push
dec
mov
jg
jmp
call
dec
jle
dec
lods
adc
jle
ljmp
jecxz
loop
in
loopne
mov
lcall
pop
jle
scas
and
mov
pop
mov
push
jp
inc
lods
and
inc
loop
lods
inc
test
out
test
push
cli
adc
mov
ret
jecxz
outsb
test
int3
lret
fwait
jge
jge
mov
test
es
xchg
dec
test
cmp
and
in
aas
mov
lret
pop
gs
aam
push
fnstenv
mov
mov
jg
mov
mov
jae
aam
or
xchg
push
ds
test
test
xchg
jne
jb
stos
mov
popf
rcrl
lea
mov
mov
cli
and
stos
cwtl
ror
mov
xor
jl
adcb
sub
inc
push
xchg
shll
fidivrs
mov
lods
or
jne
lea
pop
push
lock
sbb
mov
or
xorl
sbb
xchg
insb
movsl
mov
insl
lock
jecxz
add
sbb
out
and
and
int3
push
cmp
mov
xchg
in
and
shlb
adc
mov
sbb
cmp
in
xor
mov
jle
jl
mov
xlat
adc
shl
sarl
ja
mov
nop
in
lretw
push
jne
xchg
ss
pop
decb
sub
andl
dec
fdivr
xor
dec
cmp
sbb
mov
dec
sti
mov
neg
pop
mov
stc
xlat
mov
ds
mov
mov
inc
pop
fsts
lea
pop
inc
mov
aaa
ficompl
fabs
cmp
insl
sub
jnp
cmp
jae
fwait
pinsrw
push
pop
sahf
sbb
fnstenv
dec
ss
add
adc
les
dec
into
inc
adc
jae
pop
mov
mov
sar
cmp
jle
mov
sbb
mov
shlb
cmpsb
push
sub
ret
sub
fwait
push
inc
xor
xchg
sahf
out
pushf
cmpsb
fsubrs
leave
inc
dec
loop
pop
stos
mov
push
mov
adc
mov
jp
std
xchg
inc
stc
inc
pop
cmpl
push
dec
sub
inc
cli
adc
jae
les
xor
or
and
mov
add
jmp
fistpll
xchg
sti
push
aaa
out
xchg
or
or
addl
xchg
jne
repnz
das
lea
sbb
sarl
jmp
jmp
xlat
addb
dec
lds
dec
lods
mov
shl
jne
shrl
in
out
cmc
inc
xor
mov
jle
orl
jb
adc
int3
bound
push
or
das
negl
test
lea
pop
or
push
ja
hlt
cmp
ret
pop
push
pop
cmpl
dec
pusha
rolb
rcrb
push
jmp
inc
mov
hlt
inc
jmp
push
or
mov
xchg
jbe
dec
push
rcll
leave
cmp
lcall
and
aaa
and
imul
sbb
repnz
cli
jg
xchg
loop
cwtl
call
into
jg
scas
jno
jne
loope
js
scas
sub
push
aad
cmp
adc
xchg
push
outsl
sub
setg
fwait
sub
add
lock
movl
aaa
enter
orl
dec
aaa
adc
mov
jno
push
andl
mov
call
xlat
ss
addr16
sarb
fwait
mov
cld
mov
pusha
adc
dec
lock
or
xchg
shll
ds
lcall
add
loopne
sbb
test
cmp
fidivrs
cmp
movl
cmp
xchg
adcb
cltd
leave
fwait
dec
int3
das
movsl
test
xchg
mov
mov
andl
and
pop
pushl
jbe
xchg
fdivr
clc
stc
push
jb
mov
sub
cmp
push
xor
cmp
fsub
out
jnp
push
mov
xor
aas
sahf
popa
pop
jg
add
iret
and
add
xor
jb
repnz
jmp
jb
bound
loopne
xchg
aad
arpl
sub
sub
ljmp
mov
mov
and
js
test
dec
sbb
dec
rcl
andl
push
pop
jp
xchg
mov
insb
into
pusha
adc
push
push
mov
adc
aam
cmpsb
jo
sub
or
fucom
aam
pop
sub
movsl
pusha
jp
xchg
push
or
xchg
or
ret
aaa
mov
rorl
inc
shll
lods
vmovq
mov
sbb
es
fnstcw
lds
mov
pop
loop
insl
loop
das
loope
pop
jnp
pop
call
jmp
pop
stos
lret
dec
jl
push
loop
pop
push
and
push
jp
add
jg
xor
pop
jmp
xlat
gs
in
xor
jo
jnp
fcomp
pop
out
adc
mov
aam
xor
imul
add
xor
or
mov
scas
or
xorb
cmpsl
jle
negb
lret
adc
addl
fldl
mov
mov
xchg
test
sub
addr16
in
cs
or
andl
in
imul
mov
jbe
or
xchg
sbb
jnp
or
pushf
mov
leave
adc
lahf
js
push
pop
cmpsl
stc
or
dec
inc
lods
pop
xchg
sbb
ret
mov
xchg
xor
jle
pop
push
cltd
cli
cmp
testb
jl
movsb
jle
sub
jne
mov
pop
bound
mov
stos
aas
aas
gs
incl
data16
lcall
pop
jge
mov
xchg
mov
popa
jbe
hlt
adc
fstpl
cmp
fmuls
leave
testl
inc
or
inc
fdiv
out
fsub
sbb
jp
or
mov
repnz
cmp
mov
outsl
add
repz
xlat
mov
add
rcll
push
or
or
mov
mov
sbb
cmpsb
jl
xor
pop
cltd
hlt
pop
mov
dec
scas
sub
int
loop
stos
stos
mov
cmp
ret
jg
mov
inc
ja
or
ret
and
idivl
push
sbb
test
inc
mov
push
aad
push
push
adc
fmuls
dec
sbb
mov
pop
dec
bound
sahf
mov
sti
aas
xor
mov
aaa
das
fbld
cltd
push
outsb
shl
jae
inc
lahf
pop
and
mov
mov
stc
adc
repnz
fadds
adc
inc
or
or
sbbl
movsb
jno
mov
int
lret
mov
lods
adc
xchg
pop
imul
jo
cmp
pop
xchg
nop
bndstx
out
xor
mov
cmp
leave
pop
iret
enter
shll
int3
in
or
push
jecxz
ss
lods
fwait
pusha
cwtl
mov
popf
mov
into
mov
sbb
push
mov
mov
jne
mov
dec
dec
fistps
pop
fs
test
gs
mov
jo
and
adc
popf
scas
ret
iret
xor
sbb
xor
loop
dec
push
and
or
fstpt
sbb
mov
fildll
fiadds
jns
rcl
fs
cwtl
rolb
sub
push
lock
xchg
jbe
in
negb
xorb
mov
xchg
dec
mov
lcall
std
sub
lods
xchg
and
jmp
outsb
loop
negl
adc
movsb
add
movsl
dec
repnz
cmp
nop
movsb
sub
cmp
ror
xchg
mov
dec
std
xchg
lcall
xor
xchg
mov
imul
aaa
movb
loope
rclb
inc
sub
push
loope
jnp
and
sbb
xor
mov
aad
jno
pop
out
mov
xchg
mov
in
adc
insl
mov
fldt
loope
add
repz
dec
call
icebp
mov
cmp
rorb
pop
xor
or
sbb
repnz
xchg
jae
aad
outsb
inc
leave
mov
ret
cmpl
mov
push
int
xchg
out
mov
inc
inc
jp
sub
loope
xorl
xor
cmp
sub
mov
jne
in
pop
cmp
outsl
mov
shll
xchg
repnz
aaa
int
inc
fiadds
xor
sbb
outsl
mov
pop
cmc
cmp
sbb
out
cmc
loopne
call
call
mov
cmp
push
movsl
rorb
loope
in
xchg
add
iret
push
mov
push
fistps
mov
rorb
mov
jmp
pop
sub
test
imul
ss
pop
popl
cmc
cmp
add
cmp
leave
lahf
push
add
aad
or
sti
push
sbbl
pop
inc
loope
lds
or
xor
ljmp
mov
scas
add
mov
jae
mov
shlw
push
mov
imul
daa
sbb
xlat
jns
add
fcomps
xor
push
dec
out
adc
loopne
and
inc
pusha
jns
xor
nop
push
sti
popf
inc
inc
sub
push
push
inc
sub
imul
mov
rcrl
sbb
fcmovbe
pusha
aaa
pop
mov
cltd
sub
shlb
push
cmp
aaa
adc
mov
or
cmp
sti
lods
stos
hlt
js
xchg
movsl
xchg
xchg
lcall
push
jo
or
push
pop
mov
sbb
cli
push
xor
mov
xor
inc
dec
push
jle
xor
aad
out
pop
iret
rcrl
add
xor
shrl
popa
inc
jecxz
lock
es
fstpt
or
fwait
nop
ret
loope
push
call
js
xchg
jno
push
rcrl
pusha
xchg
cmp
jmp
mov
mov
mov
ss
out
push
push
mov
mov
mov
mov
xlat
aas
jg
pop
jl
adc
loopne
mov
mov
lock
dec
sti
cmpsl
mov
xor
jae
mov
arpl
call
jle
movsl
dec
mov
loop
mov
sub
rcrb
push
add
out
mov
pop
xchg
add
xor
imul
xchg
jo
cmp
movb
xchg
fxch
xchg
sub
adc
ljmp
std
and
and
sub
sub
aad
mov
sub
pop
repnz
fmull
add
xchg
xchg
lret
cltd
and
add
jp
add
clc
cwtl
xor
and
popa
adc
fldenv
les
stc
jae
cltd
lds
ss
jb
in
jl
xchg
xor
fimuls
scas
sub
add
pop
imul
sub
cli
out
xchg
sub
mov
iret
mov
cmp
iret
mov
aam
mov
push
mov
shl
sahf
adc
stos
ss
inc
pop
add
jmp
loop
sbb
push
scas
lds
hlt
aad
jg
xlat
rcr
out
jno
or
insl
cltd
cmp
sbb
test
movsl
popf
es
mov
subl
rcll
dec
add
add
fldl
ja
in
mov
or
jmp
insl
mov
jp
jecxz
into
xchg
adc
adc
lods
outsl
jo
subb
shrw
cmp
outsb
test
mov
xchg
lret
sub
sarl
in
cmpb
mov
les
inc
push
fwait
mov
lcall
addl
imulb
jbe
stc
xchg
repz
mov
pop
mov
adc
add
rorl
shll
call
call
xor
cmp
shll
rolb
xor
jno
push
jns
leave
rolb
js
into
rcrl
inc
pusha
cmp
mov
mov
cmpsb
mov
and
fcompl
std
xor
mov
adc
pop
or
insl
ja
add
mov
dec
jns
rcll
push
add
insl
bnd
inc
or
lds
xor
aaa
mov
xchg
movl
imul
xor
sbb
mov
out
push
test
jle
notl
in
insb
imul
xor
ja
ljmp
mov
push
jb
xor
int
repnz
imull
add
fsubrl
push
pop
dec
movsl
push
push
ret
jo
aam
inc
arpl
cltd
mov
std
adc
adc
lods
leave
push
sub
jo
mov
inc
mov
mov
shll
repz
xor
aad
push
xor
pop
lock
lea
push
icebp
mov
ja
loope
pop
cmpsl
push
add
sub
mov
shrb
pop
inc
je
dec
sbb
and
outsb
mov
rorb
dec
arpl
xchg
cmp
test
loopne
cmc
dec
ret
pop
sarl
fimull
or
jmp
sub
push
dec
or
fisttpll
cmp
addr16
mov
and
inc
int
mov
adc
dec
aad
adc
mov
mov
jmp
jns
mov
shlb
fs
ss
pop
sub
fwait
lods
add
pop
out
sar
add
mov
ror
cmp
clc
out
ss
mov
xor
addr16
lret
inc
ficompl
mov
xor
repnz
mov
lret
adc
inc
add
pop
js
fdivp
pop
enter
fdivs
iret
mov
mov
or
pop
std
add
ja
dec
inc
notb
sahf
lret
push
movsb
dec
mov
lret
inc
cmpsl
mov
int
das
sti
in
test
bound
sub
mov
into
insb
lea
cmpsb
dec
stos
xchg
sub
aas
rolb
dec
xor
add
push
jecxz
mov
clc
pop
int3
test
mov
cmp
scas
xlat
out
sbb
imul
cmpsb
mov
ss
sahf
sbb
outsb
shll
movsl
movsb
fdivp
imul
jo
and
test
adc
test
fs
stos
mov
jb
xchg
pop
lret
jbe
lods
xor
dec
hlt
clc
push
push
fwait
pop
aas
mov
xchg
ret
and
and
orb
push
mov
test
mov
pop
lahf
and
jp
mov
mov
add
scas
das
jg
jns
call
mov
and
adc
add
xor
shlb
imul
lea
lds
jb
add
xchg
add
sub
push
jp
cli
loop
out
out
fadd
test
xchg
or
loopne
xor
push
inc
mov
dec
repz
jnp
sbb
shrl
jmp
into
f2xm1
push
push
mov
inc
mov
stc
repnz
daa
rcll
push
and
xchg
data16
xchg
inc
loop
xchg
dec
fmulp
xchg
andb
into
mov
movsb
test
jo
adc
inc
or
je
add
push
bnd
pop
mov
adc
rcrb
cmp
inc
shlb
mov
in
mov
rorb
cmpsl
mov
and
jmp
scas
mov
pop
xlat
stos
jo
mov
jno
mov
jbe
xor
inc
bound
jle
xor
jno
mov
stos
enter
pop
fwait
or
xor
ds
cli
insb
mov
addr16
test
mov
dec
hlt
mov
dec
inc
sbb
jno
xor
adc
repnz
cmpsb
in
or
push
stc
or
mov
dec
sub
jne
pop
aam
mov
fstpl
in
movsb
out
xchg
mov
fcmovnb
mov
push
out
xchg
in
stc
cmp
test
cmp
sbb
cs
hlt
pop
mov
mov
xor
loop
xchg
sahf
inc
popw
addl
cli
roll
jo
mov
testb
call
and
and
orl
ljmp
lods
mov
lods
bound
test
fucomi
leave
popa
ljmp
out
mov
sub
cmpsb
push
ja
pop
jecxz
je
test
mov
sbb
sti
shll
rcr
gs
sub
fstl
push
cwtl
jmp
inc
cmp
movsl
in
test
xchg
cmc
pop
jbe
xchg
roll
stos
cli
add
subps
fs
xor
faddl
cltd
push
mov
inc
lret
push
xchg
lods
or
stc
push
pushf
dec
imul
inc
xchg
insl
andl
stos
jge
mov
imul
xor
jle
mov
mov
xor
int3
shrl
mov
fldt
popf
mov
xor
aaa
pop
xchg
jp
adc
int3
test
outsl
daa
cs
out
cmc
lods
inc
fstl
lock
and
pop
insb
sub
mov
dec
jne
notl
push
push
xchg
add
nop
ljmp
ret
sbb
jno
inc
adc
aas
sbb
add
mov
lods
jns
testl
pop
inc
test
popa
xchg
bnd
cmp
in
jae
in
andb
popa
in
mov
pop
inc
push
out
pop
lds
loopne
and
push
xlat
cmp
into
or
jne
outsb
xchg
dec
daa
pop
jne
sub
adc
popf
inc
push
mov
xchg
xchg
ret
mov
sti
fnstsw
out
mov
cltd
rorb
dec
syscall
pushf
sbb
mov
lock
js
movsl
mov
cltd
cltd
jbe
dec
mov
loope
add
outsl
add
dec
cwtl
add
int3
test
lret
sbb
ss
cmp
div
dec
mov
pop
cs
test
add
aas
push
int3
inc
andl
mov
pop
add
imulb
out
mov
cmp
test
or
jns
sbbb
cmp
mov
mov
ds
mov
inc
clc
cmpsb
xchg
test
push
in
jge
cwtl
and
clc
call
ss
xchg
lds
xchg
pop
xor
es
jp
sbb
outsb
adc
out
stc
cmp
jno
add
adc
mov
cmc
repnz
outsb
adc
cs
ret
out
daa
xchg
cwtl
sbb
add
nop
dec
push
mov
cmp
pop
ljmp
jmp
notb
addl
jbe
popa
std
add
sub
pop
ret
mov
insb
lock
in
sahf
xor
jne
cmp
nop
push
in
pop
pop
cld
or
cmpsl
adc
sub
cmp
sbb
xor
mov
insl
adc
add
daa
into
insb
sbb
fidivs
test
out
divb
xchg
dec
imul
fs
sbb
ljmp
add
lock
clc
adc
cs
xchg
push
inc
dec
adc
and
xor
mov
mov
dec
mov
jge
in
mov
pop
lds
mov
add
bound
mov
xchg
loopne
int
push
js
jle
mov
jg
dec
loopne
jbe
adcl
inc
ficomps
xor
dec
jge
adc
sub
andl
mov
mov
jns
aaa
sub
or
std
fisttpll
popa
adc
insb
pop
fstpt
sti
adc
iret
dec
xor
sub
aas
andb
sub
popa
dec
pop
jp
ja
les
rorl
lea
iret
and
cmp
sbb
add
lods
push
jne
fs
mov
xor
pop
mov
jnp
inc
inc
pop
xchg
add
cmp
jmp
and
cli
pop
test
mov
lea
lcall
out
cmp
andb
xchg
jae
push
sbb
das
loop
ja
cli
mov
jmp
je
or
sarb
icebp
cmc
pop
add
addl
lds
pop
ljmp
int
mov
push
loope
in
xor
cli
scas
jo
add
mov
or
sub
or
clc
arpl
imul
cmp
lods
sub
int
mov
mov
mov
and
and
sbb
nop
pop
fidivrl
xchg
sbb
inc
jbe
jnp
push
lock
addr16
jns
pop
hlt
mov
ja
sbb
out
mov
xchg
fcompl
pop
add
fidivs
or
rorb
jo
je
and
leave
sub
sub
decb
nop
cmp
push
stos
loopne
sbb
ja
jp
add
insl
xor
mov
daa
or
and
and
push
popf
test
sbb
inc
and
sub
cli
jle
mov
lods
shll
rolb
movsb
repnz
fxch
sub
xchg
sbb
pop
xchg
loopne
stos
sbb
push
or
mov
xchg
aam
adc
imul
mov
dec
push
sbb
cmpsl
jle
mov
jnp
and
sub
mov
dec
iret
and
frstor
push
lods
fisttpll
jg
push
imul
in
cmp
mov
sub
std
inc
add
test
dec
sub
nop
and
xchg
fsin
sub
cwtl
mov
mov
xchg
mov
fistpll
mov
sbb
inc
inc
mov
dec
aas
push
fnstenv
sti
dec
jge
leave
popa
mov
in
nop
and
xchg
jb
jecxz
xor
inc
stos
inc
cmp
gs
adc
mov
inc
dec
push
dec
pop
sub
jecxz
jg
popf
cltd
iret
test
jbe
sbb
das
lret
jmp
push
aad
push
push
push
test
ret
mov
or
sub
pop
xchg
sbb
cwtl
lret
adc
aas
xchg
popa
pop
push
jmp
cmp
mov
sub
jle
stc
or
stc
push
add
lds
loopne
adc
rcr
pop
mov
push
xorb
out
or
enter
lock
cmpsb
jne
adc
cld
popl
lcall
in
daa
dec
test
clc
andb
pop
ret
cwtl
mov
scas
inc
jno
int3
push
dec
sbb
pop
inc
subl
ror
jg
je
insb
cmc
inc
pushf
out
and
jo
xchg
rorb
stos
repnz
shll
testb
test
fisubl
add
jecxz
sub
inc
lods
dec
or
inc
adc
xor
shrb
push
leave
fs
scas
sub
orl
mov
mov
ret
jno
and
or
sbb
mov
pop
imul
xor
repnz
push
in
sub
or
daa
cs
imul
xorb
or
cmp
int3
dec
mov
cmpsb
push
pop
dec
fsubs
mov
add
xchg
cmp
jl
out
and
cmp
je
cmpsb
imul
jg
je
fsubs
xchg
dec
pop
fwait
pushf
jp
pusha
test
or
scas
cmp
pusha
aad
daa
gs
pop
pop
in
in
nop
xchg
fisubrl
push
push
mov
sub
jne
jns
mov
inc
insb
leave
les
aad
inc
xor
and
jne
push
sub
mov
jb
ffreep
pop
rorb
jb
mov
xlat
push
test
scas
daa
adc
stos
cs
dec
out
out
lds
addr16
into
pop
lahf
dec
or
bound
jbe
xchg
mov
int
or
lock
sub
hlt
adc
dec
adc
or
xchg
fsubrs
jecxz
sbb
mov
icebp
mov
ficompl
fwait
out
mov
mov
rolb
jnp
pop
test
ficoms
bound
or
daa
hlt
sbb
out
into
xor
sbb
scas
mov
dec
int
pop
push
mov
stc
inc
int
pushf
js
mov
call
cmp
adcl
and
insb
add
roll
mov
or
out
pop
push
stos
fnstenv
fwait
mov
jns
stos
push
jmp
mov
mov
mov
mov
pop
jo
mov
pop
push
rcr
lret
push
in
inc
jbe
decl
adc
insl
negl
imul
mov
sub
cltd
int
inc
cmp
jb
xor
add
stos
inc
jns
pop
cmp
push
cmc
outsl
cmp
push
mov
dec
rcrl
insl
push
loope
xor
sub
rclb
ret
sbb
jmp
lds
jecxz
test
mov
insl
mov
push
ret
cs
add
pop
add
in
lea
test
or
xchg
dec
add
cmp
pop
mov
vpshufhw
jnp
or
mov
gs
or
cltd
gs
pop
fs
inc
cmpsb
lret
clc
push
xor
pop
mov
cwtl
enter
xchg
adc
or
fdivr
inc
scas
loop
pop
or
adcl
scas
mov
aaa
xor
aas
aad
ficoml
mov
inc
out
sbb
add
xchg
or
aaa
mov
xor
pushf
aad
imul
mov
or
lock
jmp
cmp
lret
push
mov
pop
lea
dec
add
lret
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
inc
cmp
jp
pop
jp
inc
rclb
jg
pop
push
xor
adc
jb
adc
mov
jb
dec
sbb
das
cmp
and
std
popf
sub
adc
mov
push
pop
push
push
shl
mov
addr16
push
xchg
aas
hlt
lods
mov
ret
push
push
cmpb
and
mov
pop
mov
and
dec
mov
jmp
sbb
arpl
sbb
rcl
mov
xor
sub
movsb
mov
bound
clc
repz
cwtl
mov
dec
out
rclb
xor
jge
les
mov
repz
fnstcw
xchg
mov
push
inc
sbb
dec
dec
inc
dec
shrl
xchg
sbbl
mov
lcall
mov
xor
jp
in
pop
mov
int
xor
cmp
xchg
xchg
mov
mov
mov
imul
lods
ret
adc
jmp
inc
pop
nop
xlat
es
fildll
rorb
and
xchg
ss
xor
js
mov
mov
dec
jb
push
mov
sarb
notb
sub
xchg
xchg
movsl
push
sub
out
leave
insl
mov
pusha
dec
push
or
int3
push
mov
xchg
pop
jle
addb
xchg
mov
cmp
sbb
dec
cmp
pop
jnp
jns
sub
cmp
jmp
mov
in
jp
sub
lea
test
add
stc
sub
div
xchg
std
push
sub
in
dec
out
xor
sbb
fistpll
loopne
inc
sub
dec
inc
movsb
push
mov
dec
addr16
adc
xor
push
std
xor
mov
pop
dec
out
cmp
cmp
ss
pop
jns
roll
cs
and
cs
call
dec
mov
rorb
js
pusha
dec
cmp
iret
repz
std
mov
filds
mov
xchg
repz
repnz
jp
sub
shlb
mov
cwtl
in
cmp
into
mov
insb
lahf
inc
outsb
ss
jmp
pop
ret
push
pop
sbb
in
jecxz
mov
xchg
mov
int3
enter
not
stc
leave
dec
cmpsb
stc
rorl
sub
push
clc
test
mov
xor
push
bound
fwait
rcrl
push
pushf
xor
ljmp
ret
jbe
jns
xorb
lahf
jle
mov
sub
add
xchg
rclb
lds
mov
push
inc
and
lahf
jns
inc
xor
jb
add
xlat
idivb
sbb
adc
mov
dec
mov
mov
mov
lods
mov
xchg
vhaddps
mov
xor
xor
scas
inc
int3
cmp
sub
int
cld
jae
inc
cltd
movl
lods
mov
sub
hlt
cld
jl
inc
enter
loope
jmp
push
gs
jbe
jmp
mov
mov
shlb
lock
jecxz
inc
leave
rcrl
push
xor
push
mov
mov
or
sub
out
cltd
test
and
xchg
sti
dec
cmp
fs
icebp
mov
xlat
cld
dec
cmp
xchg
pop
add
popf
xchg
inc
cmp
bound
adc
adcb
or
push
stos
and
jl
pop
pop
subl
sbb
and
into
jne
cmp
test
mov
inc
dec
or
mov
nop
push
js
outsb
and
sti
push
arpl
mov
jns
test
loope
pop
sbb
mov
mov
neg
out
xchg
and
les
adc
ret
stc
in
mov
stos
cmp
stos
mov
xor
jae
push
shll
or
sbbl
fs
sbb
jl
jl
cmp
adc
dec
jg
stos
test
int3
xor
test
pop
xchg
and
shlb
or
sub
cltd
ret
or
js
mov
gs
add
vunpcklpd
negb
jb
dec
out
xchg
jg
mov
jecxz
push
mov
lcall
sub
jns
pop
pshufw
test
or
xchg
fsubl
jg
push
lret
xlat
pop
insl
mov
add
mov
xlat
cmpb
test
scas
pop
into
push
push
xor
ljmp
repz
pushf
std
pop
imul
cmp
push
aad
in
cmp
push
adc
bnd
mov
out
repz
xchg
cmc
xor
clc
xchg
shr
xor
mov
lea
cmc
inc
fptan
fnstsw
pop
pop
scas
jge
sbb
or
lock
adc
inc
mulb
mov
push
and
incb
inc
movsb
sbb
ja
iret
add
int3
notl
addr16
jg
lcall
test
inc
subl
pop
mov
mov
and
mov
and
insl
or
pushf
incl
inc
imul
add
aad
fs
inc
scas
lea
lods
push
jo
push
adc
shrb
mov
popf
sbb
and
push
ds
aas
pop
ret
aad
sub
xor
fisttpll
stos
insb
sub
jno
bound
daa
add
int
adc
dec
dec
inc
fmull
pop
test
ret
push
xor
stos
movsw
cmp
mov
inc
dec
test
imul
pop
in
xchg
das
scas
jmp
insl
add
sbb
mov
adc
imul
sub
cmc
scas
imul
add
push
test
xlat
cld
gs
out
mov
sbb
mov
and
cmp
stos
adc
idiv
testl
push
rorl
xchg
imul
adc
stos
mov
daa
cmp
lock
std
out
mov
mov
mov
mov
mov
cltd
negb
and
out
mov
xchg
mov
jno
push
jbe
repnz
aam
inc
inc
leave
push
sbb
cmc
or
add
int
jmp
pop
stc
xchg
mov
xchg
jmp
adc
cmp
dec
sub
fldt
jbe
inc
or
rorl
pop
mov
cld
orb
imul
jae
cmp
sbb
mov
mov
jns
mov
cmp
add
loop
jns
jno
or
adc
jmp
jne
mov
pop
mov
xor
lahf
loop
and
or
cli
addr16
sti
mov
stos
xchg
pop
iret
punpckldq
in
dec
mov
mov
test
push
test
and
lret
xchg
pop
or
fisubl
jecxz
cwtl
or
rcll
test
les
scas
out
sub
xchg
push
adc
xchg
dec
jl
inc
movsb
adc
xchg
cmp
mov
xchg
push
jmp
push
js
sub
sub
ret
test
adc
jno
jmp
lds
xor
mov
dec
add
xor
cmpsl
in
inc
or
xor
cmp
mov
push
push
arpl
je
test
sbb
add
mov
sbb
pop
xor
inc
arpl
push
fisttpll
cld
in
push
scas
shrb
inc
bound
or
outsl
stc
cmc
pop
ror
aam
lods
sub
rcrl
ljmp
nop
jno
add
cs
jae
xor
imul
mov
clc
fcomi
mov
in
add
test
xchg
push
sub
add
cmpsl
jl
out
cs
push
xchg
mov
add
adc
outsb
leave
fistps
xchg
pop
imul
movsb
aas
int3
test
cmp
or
outsl
cmpsl
nop
xchg
mov
fcomps
stc
fcmovb
in
out
addr16
mov
jbe
in
inc
xchg
es
outsl
lcall
or
es
ret
dec
xchg
arpl
jge
or
ja
shl
mov
dec
in
xchg
mov
xchg
lea
std
add
jbe
xor
mov
pop
ror
push
xchg
shlb
adc
push
insl
mov
sbb
call
sub
rorl
lds
cmpsb
les
cli
cmc
push
jmp
xchg
mov
aas
push
hlt
pop
push
pusha
xchg
test
fiaddl
xor
ret
stos
mov
dec
leave
add
jecxz
movsl
std
cmc
loopne
pop
test
sub
sbbl
add
pop
mov
xor
inc
mov
cmp
xchg
rcrl
sub
loop
cmp
js
out
adcb
dec
lea
stos
jmp
push
push
and
push
mov
fwait
in
movsb
or
mov
lods
adc
je
jno
xchg
in
xchg
add
jecxz
inc
pop
cmp
mov
rolb
push
or
push
push
pop
lret
fnsave
loop
lcall
pop
cmp
sub
pop
ret
mov
aad
push
dec
mov
test
xchg
xor
add
cmp
addr16
andb
imul
pop
add
push
mov
and
ljmp
das
xor
dec
dec
inc
cli
rclb
outsb
fwait
mov
frstor
pop
cld
mov
pop
test
mov
push
push
and
xlat
pop
mov
dec
les
push
mov
pop
add
arpl
clc
push
pop
aam
xor
gs
mov
enter
arpl
in
test
icebp
cmp
mov
or
imul
stos
xor
inc
pop
cwtl
jmp
jb
inc
jne
movlps
shll
bound
stos
mov
push
adc
andb
imul
adc
hlt
and
add
sbb
or
stos
xor
mov
mov
mov
pushf
jae
sub
test
sub
leave
xor
or
sbb
adc
push
mov
mov
xchg
aaa
jne
leave
scas
movsb
xchg
mov
pop
xchg
out
dec
mul
sbb
faddp
dec
andb
add
movsb
dec
xchg
sbb
mov
dec
rcll
xor
and
xor
mov
push
jo
jl
pop
pop
add
test
adc
add
adc
adc
outsb
gs
lcall
ja
cld
mov
inc
fimull
daa
adc
pop
pop
mov
les
shlb
fidivrs
les
add
xor
fwait
outsb
sbb
xchg
test
gs
pop
and
xchg
mov
data16
cmp
shlb
ljmp
imul
or
sahf
pop
loop
inc
into
fldt
mov
js
xchg
sub
stos
push
adc
cmp
lahf
dec
xor
scas
idivl
sbb
outsl
dec
out
adc
xlat
jge
outsb
mov
xchg
sub
std
lods
mov
scas
inc
and
sub
adcb
adc
push
lods
or
testl
lock
adc
adc
mov
pop
mov
std
out
out
mov
mov
jnp
aam
push
in
mov
dec
mov
int3
rclb
push
stos
pop
call
aaa
int
cmp
cmpsb
imul
out
dec
mov
xchg
lcall
sub
fdivs
inc
jmp
lret
imul
fadds
fildl
pop
mov
or
mov
dec
lahf
mov
test
sbb
lea
push
outsb
mov
aas
fwait
cwtl
cmpsl
mov
addr16
fisttps
push
inc
mov
push
lods
es
adc
in
insb
bound
test
lods
arpl
mov
cmp
mov
cmp
xor
repz
sub
adc
mov
and
inc
cmp
mov
add
mov
mov
aad
xor
inc
aam
enter
jp
fildl
call
mov
mov
lcall
daa
popa
jns
aam
cmp
nop
jecxz
mov
inc
mov
mov
cmp
xchg
xor
pop
loopne
jno
mov
xlat
mov
pop
add
lcall
aaa
aad
lahf
jle
shrb
xchg
stc
jne
test
fistpll
sbb
insl
dec
lcall
imul
rorl
xlat
jmp
push
xchg
imul
jge
scas
adc
int3
test
stos
ja
inc
fiaddl
sub
sbb
mov
adc
ss
push
jmp
cmp
aam
fldcw
shll
jo
pop
sahf
jg
push
addr16
jge
imul
out
xlat
dec
sbb
loopne
sub
sbb
mov
std
jl
and
hlt
add
dec
shl
stc
dec
sbb
mov
pop
or
mov
pushf
xchg
int3
and
pop
out
inc
dec
or
dec
mov
cs
push
xor
adc
pop
inc
mov
pop
mov
xchg
sub
push
adc
subb
adc
fisubrs
push
inc
adc
out
ss
mov
movsb
addl
lret
pop
jbe
add
xchg
xchg
adc
and
shl
cs
mov
faddp
out
xchg
cmp
sbb
rorl
jae
lods
insb
xchg
xor
popf
sahf
mull
mov
mov
jae
jmp
in
cwtl
or
jg
pop
push
lcall
mov
mov
push
ret
loopne
test
rcrl
clc
rolb
imulb
and
jp
lock
mov
orl
ss
test
pop
xchg
mov
or
jmp
and
and
loope
movsl
movb
mov
or
out
inc
push
cmp
pushf
xlat
sbb
dec
or
mov
rcl
subl
dec
jnp
loope
filds
sub
pop
xchg
xchg
ds
jno
mov
cmp
out
mov
ds
pop
mov
repnz
mov
gs
rclb
cmc
lcall
sbb
pop
repnz
pop
sub
bound
or
jae
adc
int3
nop
insl
lcallw
and
std
xchg
xor
fidivrl
push
mov
jl
inc
add
ret
fs
mov
push
repz
out
sub
add
enter
mov
nop
jmp
adc
push
leave
int3
mov
cmp
imul
movsl
adc
jmp
pop
push
mov
in
xchg
hlt
arpl
les
shrl
sti
mov
xor
mov
xchg
mov
loopne
leave
sbb
add
dec
jnp
add
ljmp
dec
je
mov
jl
xchg
xchg
in
loopne
or
dec
mov
adc
enter
add
cmp
mov
fistpll
movsl
add
rolb
xchg
rcrl
ja
ds
mov
inc
xor
and
cwtl
xlat
movsl
cmpb
or
shl
fdivl
push
divb
push
pop
push
push
in
out
mov
int3
add
jb
int3
test
fistpl
stos
sbb
movsb
cltd
mov
iret
loop
xor
push
mov
inc
test
sub
mov
dec
and
cmpb
push
or
mov
sub
jg
cs
adc
xor
mov
out
es
xchg
out
loopne
and
mov
jge
push
adc
popf
loop
sbb
dec
loope
xchg
insl
leave
cwtl
es
pop
insl
cmp
mov
jmp
test
pop
mov
cmpsb
dec
and
stos
call
mov
push
gs
adc
into
cmp
cmp
or
cmp
cmp
mov
das
mov
jns
inc
mov
gs
ds
push
icebp
call
adc
loop
cmc
aaa
or
lret
xor
das
dec
push
xor
mov
insb
sbb
scas
mov
push
es
xchg
movsl
mov
push
adc
cmp
loopne
xchg
fists
xchg
cmp
mov
or
cmp
pop
movsb
lcall
into
jle
or
push
shll
icebp
rcrb
sti
sub
neg
das
mov
sub
jbe
ret
lock
pop
xor
cmp
dec
xorb
inc
imul
sbb
adc
cmp
add
adc
idivl
push
mov
popf
dec
cmp
ja
add
ret
test
int
imul
add
movsb
jno
lcall
push
inc
sbb
mov
pop
bound
fs
cmpsl
sahf
into
xadd
push
mov
mov
cltd
pop
cld
into
lret
xchg
fiaddl
iret
fldenv
mov
int3
imul
xor
addr16
fimull
bound
je
int
sub
xlat
or
or
add
jge
push
es
cld
mov
and
scas
inc
cmpb
sub
xchg
fsubrl
loopne,pt
mov
sub
lret
addr16
mov
popa
ror
xor
andb
add
rcrl
cs
ja
test
cltd
cmp
mov
add
add
inc
inc
int3
fldenv
pop
cld
rcr
fnstenv
xor
adc
pushw
dec
jbe
loop
leave
fnsave
jle
hlt
cmpsb
xchg
sbb
sub
outsl
or
dec
pop
std
xchg
jb
jp
cmp
int3
mov
test
dec
test
lds
fiadds
sbb
sbb
movsl
ret
hlt
jecxz
mov
dec
call
fs
arpl
xchg
ljmp
mov
adc
mov
mov
bound
sub
dec
cmpsl
lods
jmp
adc
std
int
mov
in
scas
outsb
inc
push
push
fchs
mov
push
stos
xor
leave
aaa
jmp
test
mov
push
sub
push
ja
jg
dec
adc
adc
add
sahf
mov
rorb
dec
mov
js
sbb
fstl
popf
sbb
jecxz
jecxz
adc
mov
cwtl
jns
cmpsb
or
jno
fnsave
mov
adc
fs
jbe
push
push
cmc
shrb
lock
xchg
aas
cmp
push
bound
in
in
cmp
popl
xchg
std
adc
sahf
cmpsl
jecxz
clc
jmp
jne
push
inc
mov
adc
dec
push
insb
sbb
mulb
jecxz
ds
fdiv
mov
add
push
jmp
add
lods
jno
mov
push
lock
fidivrl
mov
je
test
sub
mov
add
insw
dec
in
out
loopne
pop
dec
jnp
push
and
or
in
mov
mov
add
ljmp
es
jle
jae
dec
lock
dec
mov
mov
push
push
movsl
adc
push
xor
loop
inc
sub
ja
mov
sbb
and
outsb
xchg
inc
outsb
aam
sub
sbb
sbbl
out
xorb
jp
push
push
mov
add
cmp
jge
bound
jne
cmp
sub
xor
cmp
or
ja
inc
mov
popf
and
adcl
xor
ss
jmp
fisubs
imul
cmc
adc
jge
test
lock
lret
iret
sub
orl
aad
inc
in
out
out
in
shlb
lret
mov
fstps
iret
mov
inc
jecxz
cmc
int3
imul
jl
pop
mov
cwtl
xchg
pop
scas
cmp
mov
xchg
fnstcw
inc
fdiv
sti
mov
aad
hlt
jge
adc
mov
pop
mov
test
out
sbb
add
cli
lahf
test
push
adc
pop
pop
js
adc
jl
fists
sbb
adc
jecxz
mov
pushf
dec
adc
pusha
jge
sbb
rcrb
jne
pop
mov
lahf
or
sbb
sar
sbb
jne
xchg
push
push
jnp
push
cmp
add
imul
rol
test
test
jecxz
add
xor
cltd
into
mov
adc
mov
xchg
dec
in
mov
mov
xchg
adc
scas
loopne
mov
pop
stc
pop
mov
add
insb
loope
jge
cmp
leave
mov
lods
lret
adc
mov
add
add
dec
leave
lock
inc
aas
pusha
inc
fwait
add
out
pop
in
push
stos
ss
out
out
rcll
mov
std
sbbl
bound
lods
jle
add
movsl
push
add
jge
dec
push
mov
int
adc
inc
mov
xchg
data16
or
sbb
std
and
sbb
int3
adc
leave
je
and
mov
add
fimuls
push
pop
mov
xor
fildll
mov
jns
mov
cmp
in
jge
mov
daa
loopne
ficompl
out
jecxz
xchg
lods
mov
pop
mov
sub
popa
mov
mov
pop
aad
jb
outsl
add
outsl
imul
sub
ljmp
or
jo
add
push
pop
adc
mov
movsb
shll
cwtl
sub
or
adc
scas
repnz
add
mov
sarb
and
pop
add
and
mulb
fcmovnbe
insb
loopne,pn
out
sub
xor
out
push
leave
mov
loope
or
adc
fdivrs
add
aaa
js
in
stos
adc
push
fildll
add
cltd
movsb
inc
adc
rcll
push
mov
xchg
push
mov
sarb
ljmp
ja
repnz
xchg
xor
js
stos
sarb
and
pop
push
jo
xchg
addb
pop
mov
call
xor
push
mov
syscall
xor
sbb
jo
mov
stc
dec
jge
sub
sub
or
dec
adc
lret
stos
sar
xlat
movsl
cmp
inc
fwait
daa
sbb
in
add
xor
cmpb
xchg
imul
das
imul
out
sbb
test
sarl
pushf
adc
imull
scas
add
pop
mov
mov
outsb
cmp
mov
les
mov
cmovns
arpl
repz
adc
sbb
xor
pusha
mov
into
es
mov
aaa
or
adc
xor
cmp
mov
dec
mov
mov
add
gs
stos
sbb
or
outsl
sub
mov
sbb
push
scas
adc
js
sub
mov
cmpsb
cld
popa
xchg
jecxz
cmp
loop
and
adc
stc
daa
ds
xchg
testl
arpl
xor
xor
xchg
sarl
cmc
xchg
fucomip
mov
fidivrl
adc
fs
push
jge
sub
mov
les
dec
je
mov
fiadds
dec
pop
or
daa
lret
pop
pop
jne
cmp
je
xor
inc
mov
aas
or
arpl
subl
xchg
cmp
testl
pop
cmc
add
add
sahf
jl
mov
mov
pusha
mov
push
cmp
and
pusha
sarl
push
int
andb
and
iret
push
stos
lret
aad
or
fsubs
jnp
pop
out
andb
inc
iret
out
mov
xor
jg
xchg
lds
cltd
sbb
adc
jp,pn
cltd
ret
daa
mov
movsb
outsb
push
test
pushf
imul
out
insb
mov
insb
repnz
mov
inc
and
call
ret
xchg
dec
jge
hlt
jmp
bound
aaa
xor
inc
cli
stos
iret
sbb
inc
sbb
push
jmp
popa
fbld
je
repz
dec
add
sub
pop
push
inc
lods
add
mov
insb
push
sbb
mov
sahf
sub
call
stos
fcmovne
push
xchg
jns
dec
arpl
cmp
rcrb
xchg
rcl
xor
pop
push
xchg
or
jb
lds
clc
fnstsw
fcoms
mov
loope
sbb
aas
cmp
adc
fsubl
and
or
fadd
pushf
mov
scas
sbb
mulb
jle
cs
ret
test
pop
xchg
arpl
shll
in
sub
dec
loop
or
push
jns
push
jl
ljmp
js
mov
imul
adc
adc
ja
aas
jne
mov
add
push
rcrl
adc
jmp
clc
cld
repnz
ljmp
rcl
into
dec
xor
or
add
adcl
gs
jg
test
xor
push
cmp
or
adc
and
dec
addr16
ljmp
mov
outsb
mov
mov
shll
lock
pop
in
fwait
enter
insl
push
js
dec
push
nop
pusha
push
fwait
cmpsl
daa
outsb
fstpt
stos
inc
divl
push
fcomps
vpaddq
jae
lods
cwtl
mov
and
scas
jnp
shrb
out
sub
fs
test
inc
or
push
lods
adcb
mov
mov
cmp
scas
out
je
and
outsb
push
mov
pinsrw
dec
adc
inc
jecxz
push
aad
xchg
mov
and
pop
jl
cli
pop
maskmovq
testl
or
addb
mov
xchg
push
mov
jl
movsbl
in
sub
ret
add
dec
leave
inc
lahf
or
lcall
xor
icebp
mov
sub
mov
jns
mov
mov
push
test
xor
jle
cli
scas
cli
push
push
cs
sub
imul
cmp
inc
and
cld
dec
lock
cmp
cmp
mov
fucom
mov
and
cs
lahf
xchg
in
pop
in
cmp
sub
or
divl
popf
pop
out
repnz
test
xor
test
les
mov
push
xchg
adc
or
mov
push
mov
mov
dec
and
pop
ds
in
arpl
mov
out
popa
dec
mov
orl
jno
sahf
sahf
gs
push
xor
cltd
outsb
sti
lods
dec
pusha
ss
scas
push
lods
shll
mov
jle
test
lods
outsb
aaa
test
std
fcomip
xchg
cmc
jns
or
imul
or
or
in
movd
inc
cltd
testb
inc
aaa
sub
nop
adc
ret
xor
ror
pushw
jle
ljmp
sub
das
movsb
gs
outsl
ss
push
enter
call
mov
pop
movsb
fcompl
ja
xchg
push
push
inc
pop
xor
scas
jne
jge
pop
xchg
into
pop
cld
xchg
dec
hlt
cmp
sbb
xor
inc
pop
dec
xor
xchg
push
mov
jge
or
sub
push
or
mov
lock
shll
aam
pusha
out
adc
incl
call
mov
gs
repz
icebp
cpuid
lods
jle
outsl
sbb
roll
lahf
out
mov
cmc
test
sbb
loopne
and
inc
inc
rcll
inc
imul
int3
rolb
aam
push
movsl
mov
call
dec
xlat
adc
mov
das
push
push
int3
cs
mov
insb
sub
push
jne
sbb
pop
jns
mov
sbb
and
stc
mov
addr16
sub
pop
cmp
pop
fs
sbb
sbb
int3
lret
ss
insb
mov
pop
sbb
iret
out
mov
jg
mov
ja
pushf
cs
cmpsl
repnz
ret
mov
mov
xchg
xlat
cmp
stc
lahf
subb
add
sbb
jp
cld
jns
sub
sub
enter
add
xlat
stos
clc
mov
cltd
out
and
and
divb
jmp
mov
inc
push
popa
repnz
or
pop
outsl
xchg
lds
out
jge
add
sub
jp
out
add
cmp
cld
cltd
outsl
push
adc
jge
inc
rolb
aam
movsb
mov
xchg
adc
es
or
je
shlb
stos
fisttpl
xchg
vmread
das
lods
push
mov
imul
cmp
clc
aas
cltd
addr16
jae
mov
ret
mov
ja
cmpsb
ja
frstor
pop
dec
and
bound
mov
cwtl
xchg
out
andl
sbbl
mov
push
imul
insl
ret
cmpsb
mov
dec
rolb
sti
add
insl
stc
add
sbb
loope
leave
sbb
lret
js
in
sub
mov
cmc
adc
ljmp
mov
cmpw
sti
or
inc
out
sub
inc
iret
or
mov
out
div
xchg
out
and
shrb
test
xor
cmc
xchg
lods
imul
repnz
mov
or
dec
dec
mov
or
push
jl
inc
lahf
out
pop
inc
dec
pop
dec
mov
mov
shll
lea
leave
adc
popf
rcl
jno
test
mov
nop
mov
xchg
pop
push
jge
add
addl
mov
popa
and
in
les
in
adc
xor
das
outsb
loopne
mov
lock
mov
push
xchg
imul
sti
sub
addb
arpl
sub
iret
mov
clc
in
or
mov
jecxz
fdivrl
movsb
mov
mov
pop
jo
test
adc
mov
add
test
lds
inc
xchg
cltd
std
js
lret
sbb
ret
pop
pop
xchg
test
shll
xchg
push
icebp
xor
pushf
mov
mov
mov
cmp
dec
jl
add
mov
and
mov
xorl
jno
mov
xchg
push
jl
xor
xchg
sub
jbe
inc
mov
ljmp
imul
cmpsb
pop
inc
leave
sbb
repz
cltd
lods
mov
in
mov
push
mov
outsl
push
js
ds
loope
xorl
cmc
mov
negb
cmpsl
lahf
sbb
lcall
xor
stos
mov
jg
in
jae
aaa
sbb
push
ljmp
orl
lock
jg
xor
fiadds
ljmp
dec
mov
je
mov
arpl
ss
outsl
pushf
inc
adc
xor
cmp
call
fsubl
cmp
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
mov
jp
pop
jp
js
and
push
fwait
sbb
add
ret
insb
fwait
jg
insb
shrl
in
ret
cli
push
data16
mov
dec
std
mov
jnp
xor
repz
adc
mov
jns
faddp
iret
xor
pop
cld
or
xchg
filds
mov
and
ss
xor
mov
sahf
xlat
call
xchg
cmp
xchg
jle
std
pop
sbb
dec
jmp
fsubrs
rclb
jae
inc
mov
or
adc
out
arpl
call
jp
into
cli
sub
scas
insl
inc
sub
jbe
mov
stos
sbb
fidivs
dec
mov
mov
inc
leave
xchg
adc
pop
std
shrb
hlt
pop
xchg
pop
dec
cmpsb
dec
push
inc
lock
fldenv
push
mov
and
mov
push
cmp
cmp
scas
or
sub
loopne
xchg
clc
mov
imul
movsb
das
jae
add
push
cmp
test
js
add
mov
dec
dec
push
inc
rcrb
int
in
adc
pusha
push
lds
scas
pop
inc
cmc
loopne
sbb
cmc
stc
or
iret
jmp
jmp
outsl
stc
or
dec
xor
stc
ror
decl
jnp
cmp
les
negb
in
jne
fcmovnu
scas
cmp
and
mov
sbb
lret
in
jmp
pop
adc
dec
cmpb
lods
outsb
in
andl
or
and
enter
jbe
pop
lds
mov
jae
add
xchg
movsl
rolb
xchg
inc
rorb
imul
out
jne
idiv
rorb
pop
sbb
xchg
enter
lods
fdivrs
je
cs
mov
pop
insl
or
push
inc
out
in
xchg
adc
xor
sbb
sahf
call
insl
push
add
sbb
test
sti
jne
or
sub
jmp
dec
sahf
add
and
push
dec
movsl
adc
cli
lock
push
aaa
les
sbb
jl
mov
push
mov
int3
adc
cmc
dec
mov
shld
mov
pushf
popf
roll
jne
add
cltd
cmc
jle
xchg
xchg
dec
dec
dec
cmp
mov
std
cmp
add
int3
adc
xchg
lods
xchg
insl
sbbl
or
mov
cmpsl
mov
pop
cli
push
shlb
scas
aas
mov
and
insb
push
pop
or
or
jns
xor
lods
cmpsl
or
fcmovb
mov
pushf
ds
iret
sub
jbe
cmc
insl
fcmove
pop
push
pop
dec
mov
push
and
mov
in
mov
cmpsb
sbb
mov
sbb
repz
pop
or
jmp
fildll
mov
dec
stos
js
out
out
std
jge
outsb
repz
testl
cld
bound
lods
xchg
sbb
cmc
xlat
mov
ds
xlat
xchg
stc
push
aas
add
ja
daa
je
jmp
push
mov
test
adc
pop
push
out
add
add
xchg
add
or
lcall
out
inc
int3
dec
mov
icebp
rclb
mov
shl
xchg
or
push
cli
cmp
psubb
scas
dec
xchg
js
jge
push
popa
or
inc
clc
jo
hlt
push
lds
leave
js
ret
sahf
pop
cmovns
sub
or
lret
addr16
push
xchg
sub
or
loope
repnz
push
sbb
fucomi
inc
fldl
add
aad
adc
add
pop
add
lcall
push
mov
sub
and
mov
ret
xor
inc
jp
pop
jmp
adc
and
add
ja
loope
push
mov
mov
mov
fsubrl
xsha1
cmpsb
dec
testl
lahf
stos
and
fcoml
push
ja
mov
popa
loope
je
inc
sar
pushf
and
xchg
mov
mov
imul
mov
xor
jne
dec
mov
mov
loop
push
incb
and
xor
push
jo
mov
dec
pop
mov
push
mov
in
mov
outsl
adc
jae
and
cmp
adcl
cmp
xor
aam
in
mov
xchg
add
cmpl
push
call
sub
test
push
add
test
jns
stos
repz
mov
iret
dec
adc
push
jno
loopne
imul
les
pop
mov
push
hlt
fwait
into
outsl
into
lret
cmp
andb
mov
dec
dec
ret
std
pusha
mov
mov
lret
stc
clc
pop
sub
std
sub
jno
std
fcmove
mov
and
nop
orl
mov
ds
pop
daa
shlb
call
xchg
dec
lcall
mov
hlt
lret
sbbl
sbb
stos
loop
mov
xchg
mov
xchg
outsl
test
rclb
outsb
repnz
jge
loop
clc
adc
les
push
pop
lock
in
adc
dec
inc
cmpb
popa
fsubrs
add
mov
push
repz
arpl
cwtl
movsb
add
repz
add
enter
fistl
push
mov
rclb
pop
inc
xor
mov
lahf
and
pop
mov
dec
jnp
frstor
and
call
mov
mov
xor
mov
repnz
pop
add
pop
das
addr16
mov
dec
aaa
push
insb
ffreep
add
jge
xor
mov
and
shlb
cmpsb
out
fstpt
xchg
add
inc
out
pop
and
xlat
icebp
sbb
call
ljmp
jmp
cmp
mov
mov
insl
add
pop
mov
xchg
es
in
push
inc
fucomip
call
aad
add
mov
mov
sbb
adc
xor
xchg
and
addb
cltd
int
push
dec
pop
mov
cwtl
push
sbb
sahf
jmp
stos
xorl
pushf
fisttpl
mov
cmp
clc
lret
outsb
sbb
push
adc
push
mov
sub
xchg
pop
cmpb
mov
jne
imul
add
repnz
jecxz
aaa
and
xor
jmp
fucomi
sbb
rolb
mov
scas
dec
push
clc
mov
cs
out
and
or
stc
sbb
inc
scas
cmc
and
in
xchg
ljmp
orl
push
push
sub
jl
mov
in
lret
fisubs
je
loop
cltd
xlat
lods
fs
push
mov
mov
scas
mov
xor
jp
mov
inc
out
mov
popa
jp
and
sarb
cmp
add
arpl
test
mov
fs
jmp
dec
mov
push
and
pop
shlb
cs
and
xchg
pop
push
push
push
pushf
dec
addr16
xchg
out
lock
inc
and
sbb
sub
cwtl
sarl
aad
add
out
cmp
mov
je
cmp
xor
sahf
pop
mov
push
jb
out
pop
mov
lret
pop
pop
outsl
sbbb
addr16
cmp
mov
inc
xor
sbb
sub
cmp
subl
or
outsl
int3
jb
or
mov
inc
stc
daa
addb
push
insb
jmp
sahf
inc
and
inc
movsl
push
insl
out
dec
fcoms
push
fsubl
arpl
sub
add
jno
loopne
pusha
inc
popf
cmp
adc
out
sub
clc
icebp
jl
adc
and
pop
push
mov
dec
popl
adc
pop
adc
scas
mov
es
jmp
stc
pushf
mov
mov
jno
rclb
test
adc
mov
dec
xchg
pop
jmp
cld
sub
aas
roll
xchg
or
push
jle
mov
movsl
push
push
das
and
pop
adc
mov
xor
pop
pop
fdivrl
mov
repz
test
add
jnp
out
shll
dec
xor
dec
test
xchg
nop
aaa
push
lods
and
ss
push
xchg
mov
mov
xlat
add
dec
lcall
push
into
daa
aas
mov
filds
xor
cli
sub
imul
sahf
adc
lret
inc
cmp
jg
fwait
test
sbb
mov
jecxz
cmpsl
adcl
mov
xchg
xchg
pop
add
mov
xor
xchg
mov
jle
sbb
push
xorl
jne
mov
cmp
or
cltd
sbb
xchg
arpl
dec
sub
push
dec
xchg
add
adc
fisttpll
pop
scas
stos
scas
clc
inc
dec
movsl
xchg
cli
mov
xchg
test
fcmove
adc
or
cli
in
pop
adc
sbb
movl
test
jne
or
lahf
jns
mov
std
mov
mov
fcomps
cmp
popf
imul
lcall
add
add
movsl
stc
sbb
lods
pop
fcoms
js
push
aam
repz
pop
bound
pop
mov
out
mov
loop
stos
cmc
rorl
add
rcl
mov
mov
cmp
dec
fwait
out
lea
stos
jns
sbb
pop
mov
jbe
adc
cld
jo
mov
lds
les
mov
pop
xor
xchg
adc
jmp
jbe
ss
stos
cwtl
test
push
dec
jnp
dec
and
xchg
cmp
mov
repz
rcl
mov
pop
aas
je
imul
mov
push
jae
fcoml
push
push
xor
inc
inc
sbb
inc
lcall
int
add
into
cs
cmp
fnsave
repz
xor
fdivs
sbb
xchg
mov
ds
inc
or
aas
das
stos
pop
and
add
push
lods
test
mov
jle
into
call
or
xchg
scas
push
leave
or
int
into
inc
icebp
jne
adc
lods
out
sub
movsl
fisttpl
sbb
jb
movsl
aam
adc
imul
adc
mov
cmp
sbb
dec
insb
and
sbb
pop
jge
sbb
dec
push
xchg
dec
aas
int3
enter
mov
fadds
repz
icebp
xchg
icebp
es
xchg
out
xchg
mov
add
fwait
push
dec
jg
fistl
daa
xor
std
clc
leave
mov
lea
and
inc
add
dec
je
gs
cwtl
inc
repnz
adc
dec
jb
shl
and
aas
adc
lahf
xchg
dec
loopne
mov
inc
and
add
fidivrs
mov
lret
xor
or
sub
aam
jle
mov
jmp
pop
xor
cld
jne
andb
and
scas
popf
fwait
jle
jg
in
fcoms
rorb
insl
ss
xor
popf
stc
dec
test
dec
insb
sahf
mov
cmp
js
xchg
hlt
dec
fadd
mov
push
int3
push
and
lds
ret
add
inc
xor
xorb
jmp
dec
daa
jbe,pt
mov
xchg
pop
loop
adc
inc
out
popa
dec
jae
push
inc
sub
pop
leave
sti
push
pop
stc
sub
es
sbb
add
sub
add
jecxz
mov
fmul
push
push
cmp
and
mov
jp
cs
movsl
dec
out
jecxz
aad
jb
shrb
dec
sbb
imulb
fisubrl
jmp
dec
push
push
sub
mov
in
xchg
mov
push
push
shrb
dec
dec
xchg
push
mov
sub
lret
lret
test
into
std
ss
sti
insl
dec
and
adc
xchg
xor
idiv
or
add
sbb
clc
fdivrl
sbb
jno
or
mov
dec
mov
jp
sub
mov
dec
pop
sbb
sahf
pop
mov
and
push
stos
lods
xchg
and
push
pop
add
scas
cmp
xor
loope
addb
stos
sahf
adc
out
push
mov
jae
dec
popl
mov
mov
lcall
push
imul
push
inc
outsb
mov
dec
cmp
movb
in
cmpsb
jg
stos
push
call
sub
mov
jle
xchg
lret
mov
pop
inc
lcall
repz
adc
fdiv
lods
ficoml
cmp
dec
mov
js
inc
aas
pop
push
cmpsb
out
xor
subl
adc
xchg
inc
ljmp
push
mov
sbb
imul
add
sub
xor
jl
mov
xchg
xor
xor
pop
mov
mov
lret
mov
fs
mov
mov
mov
pop
mov
rorl
jmp
pop
and
jns
or
and
pushf
ret
ljmp
push
jo
mov
js
push
lahf
shl
mov
scas
mov
rorl
pop
mov
jns
jge
sbb
insb
mov
xor
loop
jno
mov
bound
jge
xor
insl
xchg
lock
mov
sarl
push
ss
or
add
pop
outsl
dec
test
lds
pop
test
sbb
xor
dec
outsb
jnp
xorl
in
arpl
jae
xchg
sbb
gs
mov
or
push
roll
add
xlat
ret
mov
adc
stos
stos
sub
jecxz
cmc
rorl
cmp
xor
mov
or
mov
mov
das
cmpsl
pushf
pop
jbe
cltd
mov
gs
std
jp
jnp
dec
add
clc
test
into
pushf
lret
adc
loope
xor
mov
js
jns
xor
stc
dec
jae
mov
clc
sub
ja
or
imul
or
outsl
xchg
pop
mov
or
mov
jmp
leave
sbb
test
mov
out
in
mov
jno
cmp
mov
pop
scas
ficomps
xor
hlt
dec
sub
mov
movsb
jo
filds
ljmp
mov
std
fistl
arpl
push
jne
adc
test
inc
dec
xor
add
sbbb
in
add
fs
lcall
mov
or
mov
push
jecxz
cmp
dec
out
insb
pusha
lock
fwait
stos
xor
sbb
int
ret
push
pxor
xchg
in
sbbb
std
loop
pop
lret
dec
xorl
adc
leave
aas
xchg
aas
sbb
cmova
outsl
cltd
and
xor
adc
lcall
and
lret
subb
mov
mov
mov
aad
sub
iret
lcall
xchg
push
adc
cs
xor
les
push
mov
lds
sbbl
test
sahf
dec
icebp
test
sbbl
sub
cmp
sarl
insl
popf
push
jge
outsl
lret
push
stc
add
mov
add
inc
imul
hlt
jle
xchg
mov
mov
inc
push
pop
push
jge
ljmp
outsl
movsb
je
adc
outsl
jns
mov
inc
dec
mov
in
adc
inc
lcall
or
cmp
push
rolb
add
inc
ds
test
and
jge
aam
ja
xchg
adc
push
imul
add
xlat
pop
bound
insl
lea
cltd
jl
push
dec
mov
xchg
pop
adc
xchg
cmpsl
hlt
es
out
fdivs
int3
add
sti
push
cmp
add
cmp
fwait
lea
fwait
push
jbe
cmp
sub
mov
sub
les
xchg
xchg
add
into
sub
cmp
aam
pop
and
jecxz
cld
mov
lcall
fcompl
jae
mov
clc
insb
jo
push
scas
and
mov
dec
inc
push
add
xchg
mov
enter
cmp
data16
mov
loope
movsl
jne
jecxz
fnstcw
sub
push
enter
sbb
mov
lret
andb
test
shl
mov
icebp
push
leave
dec
incb
addr16
mov
xor
push
sbb
cltd
nop
sub
ds
xadd
mov
dec
call
dec
jnp
lods
enter
add
gs
dec
sbb
dec
dec
or
xchg
lret
jo
invd
inc
jbe
bound
xchg
loope
cwtl
loope
lahf
jo
insl
popf
js
test
inc
js
sbb
pop
test
add
add
out
push
fistps
adc
jecxz
in
cmpsl
inc
sub
jecxz
fidivrs
dec
iret
cmp
pop
les
outsb
clc
lods
dec
mov
sub
je
add
fcomi
js
xor
shll
push
roll
pop
inc
cmpb
pop
mov
push
call
push
outsl
flds
mov
or
lcall
cmp
movsb
push
mul
pop
shll
js
das
xchg
pop
mov
int
add
fisttpl
pop
cwtl
test
add
aas
sbb
fmulp
out
xor
xor
sub
std
mov
fabs
js
out
mov
shrb
leave
scas
push
mov
insb
faddl
sbb
sub
mov
leave
sub
adc
adc
cltd
test
dec
lods
out
je
mov
leave
sub
test
inc
push
fstps
mov
inc
outsl
cli
pop
mov
test
xor
das
hlt
cmp
add
mov
and
xor
adc
jns
aas
dec
xchg
cli
out
daa
ljmp
xchg
rcrl
mov
push
push
push
dec
pop
mov
cld
push
out
daa
negl
adcl
and
push
lahf
idivl
aas
lods
in
data16
dec
push
dec
imul
push
ljmp
shrl
test
pop
in
xchg
pop
jnp
ss
cmp
aas
scas
mov
icebp
ret
fisttpll
pop
rcrb
cmp
stc
xchg
mov
cmp
sub
or
ja
stc
scas
or
ljmp
mov
sbb
call
sub
and
sub
lea
outsb
pop
lods
dec
enter
or
enter
jg
inc
mov
jp
es
scas
sahf
mov
pop
cmp
sub
clc
shll
sub
pop
inc
pop
xchg
cmp
adc
push
popa
xchg
push
jl
sti
xchg
divb
mov
lock
lods
mov
xchg
and
xchg
aaa
in
xchg
iret
and
sub
hlt
xor
int3
jmp
mov
dec
mov
and
lret
xor
ds
add
push
addr16
cmc
pop
bts
addr16
out
push
insb
mov
lock
mov
adc
data16
sbb
cmc
add
arpl
adc
lds
iret
jg
call
sbb
cmc
movsb
sti
sti
in
push
mov
out
mov
pop
sub
lods
adc
ds
push
pop
mov
out
jne
aaa
sahf
repz
jecxz
nop
adc
and
ret
into
rol
nop
loopne
xchg
das
popa
ror
in
std
jns
subl
mov
mov
cltd
inc
push
inc
cmc
xor
mov
rcrl
cltd
into
mov
mov
jmp
mov
xor
mov
jmp
cmp
mov
fwait
sti
adcl
mov
in
jl,pn
fadd
dec
push
and
inc
aad
imul
outsb
mov
mov
push
jb
addr16
sub
bound
dec
cli
cmp
lret
xor
jnp
cmpsb
inc
bound
inc
xchg
sub
mov
ds
out
pushf
ja
mov
filds
and
fdivrp
push
stos
xchg
xchg
into
push
sub
xchg
sbb
into
fsubl
cmpsl
pusha
cmpsl
dec
icebp
and
int
push
nop
mov
adc
loope
jg
lods
js
cmp
mov
rolb
and
mov
mov
test
call
out
adc
repnz
push
jl
pop
seto
fcoms
hlt
lods
mov
push
scas
xchg
dec
add
push
popf
lods
sti
sahf
aaa
push
push
pop
jae
mov
push
lcall
jecxz
ljmp
mov
je
push
cmp
xchg
add
out
mov
scas
xchg
out
and
aam
sbbb
adc
mov
mov
popf
jmp
xor
dec
lods
cmp
aas
rcll
ljmp
lret
sub
cmpb
test
adc
pop
pop
leave
push
xor
test
add
ficoms
fnstsw
mov
and
pop
std
test
or
or
cmpsl
mov
daa
mov
lods
adcb
int3
lds
ljmp
xor
xchg
loopew
inc
or
jg
mov
fcomps
push
sbb
cmpsl
push
aaa
mov
sbb
add
jno
xchg
insb
jae
cmpsl
xor
sub
push
lret
or
xchg
lret
rolb
pop
mov
mov
loop
mov
ss
jg
and
sbb
enter
jb
pop
xor
ljmp
add
and
jmp
rolb
sarb
movsb
int
push
mov
xchg
mov
push
dec
popa
cmp
pop
pop
out
inc
jle
out
scas
pop
or
jg
pop
push
pop
jecxz
stc
test
or
ss
mov
push
pop
fnsave
lret
xchg
shrl
xor
int
pop
aad
test
outsb
push
mov
imul
lret
repz
mov
mov
jg
inc
cli
xchg
imull
ficomps
iret
aam
insb
aaa
jg
push
iret
cmp
xchg
pop
fwait
cmpsl
push
or
push
and
daa
ljmp
adc
scas
rcrb
mov
test
dec
lods
cli
xor
lock
insb
xorb
sub
jb
mov
mov
xlat
in
pop
cmp
dec
fnstenv
mov
jae
test
test
fisttpl
movsb
mov
int3
dec
mov
add
imul
xchg
lcall
inc
and
jmp
jae
ja
cwtl
adc
sti
or
pop
or
mov
stc
gs
xor
je
out
mov
push
sbb
in
pusha
mov
pop
fs
les
scas
ret
leave
pop
add
es
mov
push
sbb
out
mov
add
mov
mov
xchg
sbb
xor
aad
lahf
fdivl
aam
and
cwtl
jmp
xchg
xchg
insl
out
push
sbb
inc
in
sbb
fstl
jecxz
mov
in
dec
cmpsl
pop
xchg
stos
in
mov
adc
mov
cmpsl
or
add
ljmp
jae
test
jne
shll
mov
dec
pop
add
loope
mov
repnz
dec
ficomps
jo
inc
mov
insl
add
pop
lds
les
js
xor
mov
fwait
mov
movsb
in
pusha
mov
cs
rcl
mov
inc
in
iret
cmpsl
and
adc
outsl
stos
sbb
loop
je
repz
iret
inc
div
repnz
ljmp
jle
push
dec
lea
jmp
jg
mov
push
cmp
adc
pusha
cvtdq2ps
pusha
sar
roll
sbb
mov
jb
stos
push
cmpb
pop
add
xor
sub
mov
cmp
jle
rolb
jns
bnd
lods
sub
push
jbe
jmp
or
fildll
dec
hlt
push
imul
jb
jns
aas
popa
sarl
clc
stos
jae
jecxz
mov
or
push
lods
xlat
dec
iret
adc
mov
jb
imul
aas
loope
daa
cli
pop
cwtl
aad
dec
icebp
loope
jne
fists
sub
sbb
pop
mov
scas
aas
or
pop
cwtl
frstor
mov
lret
pop
in
hlt
les
xor
pop
mov
das
pop
sbb
mov
dec
pop
fistps
in
gs
and
leave
sub
mov
enter
dec
jecxz
inc
fdivl
gs
les
imul
mov
xor
add
into
repz
in
cwtl
fcmovu
pop
call
pushl
cmp
jmp
ror
jbe
xor
shll
pop
rorb
jle
or
fwait
or
adc
in
mov
shl
add
push
adc
test
out
dec
repz
add
xchg
inc
sub
mov
or
mov
fcmovbe
flds
fadds
xchg
scas
and
aam
int
out
or
cmp
mov
cwtl
push
xchg
inc
adcb
orb
sbb
xor
outsb
outsb
mov
xchg
sarb
rorb
sbb
div
in
or
pop
popa
jg
fsubp
stos
mov
hlt
subl
or
fnstsw
movsl
lods
adcl
and
je
push
jbe
inc
inc
xchg
and
mov
or
aaa
aad
jne
dec
cmp
mov
or
stos
mov
fistpl
cmc
or
mov
lahf
ficompl
cmovs
aas
imul
bound
faddl
cltd
aaa
jne
mov
or
cmp
mov
sub
dec
fldl
lock
xchg
into
xchg
jge
mov
or
xchg
cmp
add
icebp
out
fwait
xchg
shrb
mov
mov
mov
bound
stos
lods
mov
pop
mov
add
or
rcll
repnz
jo
fisubrl
adc
push
hlt
cmpb
lds
cmp
adc
pop
and
repnz
ds
xchg
pop
pop
hlt
in
fnstcw
js
dec
mov
inc
xchg
jge
fimuls
stc
ds
mov
data16
faddl
push
in
dec
cmpsb
xor
or
negl
and
dec
leave
xchg
or
xchg
sbb
movsb
dec
leave
movsb
pop
inc
and
scas
sub
outsb
movsb
mov
mov
and
cmp
scas
call
xlat
neg
ss
les
jge
mov
int3
imul
add
scas
in
in
rcl
cli
in
push
xchg
jnp
ljmp
jae
mov
mov
adc
sub
mov
cmp
cmp
loop
loope
pushf
mov
dec
adc
mov
pop
ja
cmp
outsb
and
adc
in
lods
ljmp
mov
gs
add
mov
popa
sub
jns
xchg
in
push
jecxz
lds
mov
mov
divb
xchg
mov
mov
insb
loop
cmp
push
push
dec
ss
fisubs
mov
dec
mov
je
lcall
mov
or
bound
mov
cmp
dec
cwtl
cs
int3
aas
rolb
cmc
in
inc
push
mov
pop
inc
sbbl
fisttpl
mov
jns
rcrb
xchg
sarb
cli
adc
mov
leave
pop
xor
mov
and
mov
xor
inc
mov
and
div
lds
sub
lahf
fidivrl
and
repz
push
xlat
push
xor
mov
or
call
sbb
leave
cltd
repnz
jg
scas
call
jle
popf
cwtl
dec
loopne
sub
fdivl
add
xchg
inc
pop
add
sub
pop
xor
mov
xchg
sub
aas
fimuls
gs
adc
cmp
insb
sub
dec
in
jno
push
scas
or
mov
push
cmpsb
xchg
cmp
inc
jo
sub
not
cmpsb
aam
jp
mov
sbb
or
shll
cltd
sub
mov
dec
jmp
mov
orl
lods
neg
sub
repz
add
idivl
mov
cmpl
jge
add
lea
xor
pop
xchg
mov
je
daa
xor
es
dec
sti
pop
sbb
or
mov
cmc
sub
es
test
cs
adcl
testl
pop
adc
add
pop
cmpsl
or
cmp
push
xor
in
out
dec
je
stc
shlb
push
in
pop
add
sbb
loop
les
outsl
lahf
jae
sbb
mov
mov
add
fwait
loopne
sbb
mov
adc
push
stos
dec
mov
arpl
or
xchg
adc
pop
dec
in
test
xlat
xchg
push
jecxz
out
ror
sti
mov
add
mov
fcoml
lods
pop
popf
aaa
dec
repnz
and
mov
adc
inc
jno
repnz
lcall
xchg
push
jbe
inc
inc
sahf
mov
and
xchg
sti
mull
ds
lcall
mov
mov
das
mov
jbe
pop
fucomp
xchg
cli
cmpsl
or
mov
int
es
jge
sbb
xchg
add
popf
jnp
fnsave
cli
mov
mov
sbb
test
sub
lds
daa
mov
psubw
mov
sbb
data16
and
stos
std
dec
cld
scas
jg
mov
mov
xchg
shrb
sbb
sbb
rcr
call
mov
jp
mov
mov
andps
pop
push
adc
push
xor
fsts
and
into
push
pop
cmp
mov
jae
cmp
adc
dec
and
jae
rorl
push
divl
fstpl
adc
stc
adc
sub
insb
or
xor
jns
orb
inc
mov
push
aad
lahf
mov
or
and
adc
fldt
aas
pop
fs
and
add
loopne
rol
iret
js
inc
insl
cmc
mov
aaa
negb
pushf
pop
out
test
dec
popf
bound
push
mov
mov
movsl
std
mov
in
stos
mov
mov
leave
push
adc
pop
sub
lea
mov
or
or
push
jecxz
std
stos
int3
ljmp
mov
inc
push
rcrb
mul
jae
jecxz
out
or
inc
sti
into
xchg
ret
and
add
sahf
or
imul
push
adc
push
jnp
dec
sbb
mov
mov
cmp
adc
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
xorl
jns
dec
imul
in
sub
in
das
xchg
pop
aad
inc
adc
pop
out
dec
int3
lods
jge
dec
stos
mov
xor
inc
xchg
mov
lds
iret
cmpsl
sbb
cmpsb
popa
mov
add
adc
pop
out
subl
xchg
adc
ret
addb
lds
ljmp
push
xchg
fcmove
and
mov
sub
cmp
arpl
mov
cmp
test
daa
ljmp
xchg
jnp
mov
xorb
imul
push
ficoml
add
int
loop
mov
ja
cmp
out
xchg
pop
stos
xor
or
mov
jg
pusha
out
jne
loope
into
push
add
daa
cmp
jae
add
mov
jg
fisttps
cmpsb
lock
stos
outsl
jp
or
arpl
shrb
mov
bnd
sbb
dec
into
and
outsl
aad
xchg
in
jns
adc
pop
xchg
fistpll
cmpb
xchg
xchg
push
cmpsb
out
outsb
inc
inc
aaa
dec
aas
jbe
and
subl
add
adc
lds
inc
add
jp
inc
pop
cld
fsubl
pusha
or
bound
add
xor
enter
ss
sub
sbb
sbb
addb
and
ljmp
pusha
lods
nop
cmpl
mov
ds
pop
dec
pushl
push
mov
loope
lahf
inc
insb
xlat
inc
or
mov
rclb
mov
xchg
mov
icebp
mov
ja
iret
arpl
mov
add
jecxz
popa
sub
fcmovu
sbb
test
inc
adc
cmp
loope
mov
push
lahf
push
cli
add
mov
or
inc
aam
push
ljmp
dec
daa
lret
or
les
dec
mov
sbb
stc
and
daa
sar
mov
xchg
pop
shll
loopne
xchg
cmpsb
hlt
inc
adc
dec
rorb
inc
dec
std
add
movsl
and
movsl
pusha
dec
nop
xchg
jmp
lods
outsb
xor
mov
cmp
shl
popa
dec
xchg
jbe
arpl
xor
cld
and
push
stc
repz
mov
sbb
cmc
jl
lahf
fmull
shll
out
shrb
out
mov
cmpsb
sub
cmp
gs
repnz
fiaddl
mov
sub
jecxz
sub
mov
mov
mov
fnsave
push
pop
dec
outsb
pushf
add
sbb
fwait
xor
push
in
adc
xchg
mov
mov
cmpsl
clc
mov
scas
mov
lods
punpckhwd
leave
sub
test
or
rcl
cmp
inc
hlt
dec
inc
xchg
and
xchg
repnz
push
or
mov
inc
cmpsb
add
or
lock
push
cs
mov
lods
lods
pop
js
imul
addb
dec
sbb
xor
add
popa
mov
fs
xor
fldpi
dec
call
les
add
fnsetpm(287
stc
cmp
cltd
scas
rcll
or
adc
mov
sar
ss
push
mov
adc
daa
repz
shll
xor
mov
sbb
mov
xchg
call
mov
cmpsb
out
test
pop
insl
ret
shlb
or
fs
aam
adc
ss
ss
inc
lret
and
sbb
adc
scas
dec
dec
adc
out
cli
cmc
pop
cmc
pusha
sub
loopne
jno
es
stos
mov
das
nop
movsb
adc
dec
ljmp
or
adc
cmpsb
xor
call
stos
push
dec
repz
pushf
daa
stc
mov
jae
cltd
fadd
cltd
lret
fmuls
dec
rol
cmp
sbb
jmp
movsl
push
sahf
xchg
outsb
ja
and
fcomps
lods
or
sbb
insb
rcll
and
ljmp
cwtl
lods
rclb
test
les
adc
pop
out
jle
fnstcw
mov
add
mov
out
mov
aam
ss
sahf
cmp
femms
cmpsl
xor
pop
jecxz
jge
loope
ficoms
out
lea
adc
sbb
push
ja
mov
push
cmp
insl
sub
jl
rcrl
stos
xchg
out
jmp
loope
pop
jb
xor
fbld
sub
fnstenv
into
or
jo
add
ss
mov
mov
add
bound
pusha
add
xchg
out
ss
call
loop
sub
pushf
adc
icebp
nop
xchg
jb
xor
lret
int
js
fwait
jmp
xorl
push
or
arpl
jl
cwtl
cmc
jmp
popf
push
je
add
cmp
test
mov
cmp
iret
xor
iret
mov
push
mov
mov
xchg
movb
mov
add
dec
jecxz
cltd
dec
mov
xchg
sarl
mov
pop
dec
int
jnp
jns
push
sbb
pushf
mov
xor
inc
push
int3
dec
outsl
and
push
xchg
imul
insl
inc
dec
cs
sbb
or
cmp
clc
jmp
mov
and
inc
sbb
es
inc
ljmp
add
rol
insb
mov
jbe
jmp
stos
adc
jns
in
or
hlt
pushf
and
cmp
nop
and
nop
out
subl
pop
and
xchg
jmp
in
push
push
inc
push
mov
stos
test
je
mov
dec
scas
sahf
dec
and
lea
lahf
int3
sub
enter
lods
mov
mov
push
mov
cmpsl
fnstcw
in
xchg
push
jecxz
iret
and
mov
mov
stos
scas
lcall
lea
lods
test
jb
cmp
loope
xchg
add
jo
inc
jge
and
icebp
outsl
sub
out
jno
mov
pop
pop
lds
add
ljmp
inc
pusha
test
addl
xor
lcall
jb
fsubrs
out
xor
xor
jge
push
xor
or
inc
and
jae
inc
mov
movsl
insb
jecxz
dec
mov
and
xlat
test
lds
lds
cmp
pop
js
aas
scas
in
xchg
xor
fwait
call
mov
scas
xor
sub
mov
aas
mov
push
lret
mov
ret
mov
ret
pop
rcl
fisubrl
ljmp
sbb
sub
das
cmc
inc
add
push
in
and
out
popf
movsl
cmp
adc
xchg
adc
mov
inc
daa
inc
lahf
mov
push
cwtl
movsb
cld
pop
insl
je,pt
cmp
sbb
scas
jge
dec
mov
xor
adc
cmc
iret
out
outsl
insl
adc
stos
fcmovbe
jb
sbb
call
insb
xor
int
add
addr16
adc
xchg
in
lret
push
xlat
mov
xlat
dec
add
xor
test
cs
fistl
mov
push
sbb
mov
xor
xor
int
in
cmp
mov
aad
test
inc
dec
or
jmp
fnstenv
orl
pop
shll
into
lret
in
dec
pop
fisttpll
movsb
sahf
lds
mov
pop
sti
mov
cmp
gs
inc
int
mov
stos
inc
fcompl
shrb
mov
xlat
ljmp
lods
push
sahf
fs
mov
aad
push
sub
mov
sbb
in
sbb
out
pushf
imul
clc
sti
xchg
push
sbb
ret
push
inc
pop
cmc
add
xchg
mov
aas
and
dec
adc
pop
xchg
iret
jmp
and
cmp
or
push
lcall
insb
lcall
push
cmp
stos
paddsw
insb
jl
dec
jo
and
hlt
xor
lods
push
in
jbe
enter
sahf
out
leave
rcl
pop
adc
inc
or
pop
cmp
lahf
mov
sub
fistl
mov
or
mov
loop
aas
shr
sub
or
mov
aam
push
rorl
in
sub
dec
or
push
scas
int
test
xor
cmpl
mov
clc
cwtl
je
push
out
aad
sub
xorl
mov
clc
push
push
cmp
sbb
cmp
sub
add
mov
fstl
call
adc
sbb
push
out
nop
stos
jb
repnz
stc
mov
test
mov
mov
iret
stos
sahf
cmpsb
mov
data16
iret
pop
jge
jl
cmpsb
dec
inc
imul
outsl
in
pop
xor
jl
xchg
mov
cmpsb
popa
mov
fldenv
cmp
sbb
jle
cmpsb
int
aas
fsts
cltd
push
dec
lahf
xor
clc
jo
pop
inc
jno
push
out
and
dec
cld
movsl
mov
int3
push
jo
lock
cs
mov
dec
dec
xor
daa
inc
or
xchg
addl
cwtl
ss
ret
add
dec
jl
scas
hlt
shld
mov
push
dec
pushf
jl
lahf
and
pop
ja
jmp
or
int3
pop
jecxz
into
loopne
inc
push
enter
iret
push
pop
addr16
mov
inc
push
mov
daa
std
add
js
rorb
fiaddl
mov
stos
fists
ss
sub
mov
push
aas
sbb
std
and
in
cmp
dec
mov
sub
inc
push
cmc
stc
add
ljmp
arpl
imul
rol
lcall
and
fsubl
jmp
fs
jecxz
or
add
pop
divl
pop
cwtl
inc
push
inc
cmp
jmp
add
xchg
jp
dec
andl
in
aas
rcrb
xchg
ret
out
std
fsub
les
int3
popf
xchg
icebp
stos
loope
fcompl
ret
pop
arpl
inc
out
testb
mov
mov
inc
inc
out
jle
scas
loopne
push
movsl
dec
leave
je
mov
xchg
aas
aad
mov
xor
test
enter
add
xchg
mov
in
or
data16
into
aam
or
cwtl
dec
mov
adc
ds
mov
aaa
mov
adc
data16
les
cwtl
mov
adc
xor
mov
hlt
xchg
dec
std
dec
aam
gs
adc
lea
or
ret
shl
dec
movsb
stos
addr16
pushf
sub
lret
jnp
loopne
sarl
adc
push
xchg
cmp
cmp
sbbb
rorb
mov
sti
rorl
sub
imul
jo
out
pop
lock
dec
sti
pop
mov
test
int3
lock
push
cltd
lahf
pop
cmp
xor
add
inc
mov
hlt
shrb
or
aad
test
scas
pop
mov
enter
mov
test
dec
popa
or
imull
or
push
mov
call
mov
movsb
push
add
mov
xor
daa
xchg
sbb
jnp
xchg
pop
push
cmp
mov
aas
ret
shll
sub
or
lods
lret
adc
inc
pop
jge
xor
das
sar
add
jl
stc
xchg
repz
adc
xor
mov
and
dec
cmp
movsb
mov
ljmp
cmp
push
mov
lret
lock
add
push
mov
pusha
dec
adc
cmp
aas
and
jb
push
shrl
insl
dec
repz
fs
iret
mov
lock
dec
imul
add
ja
sub
add
data16
sbb
in
loop
xchg
and
sti
out
outsb
mul
rcl
sbb
out
push
pop
fldl
scas
mov
lock
cmp
dec
jecxz
push
jne
xchg
aam
pop
push
sahf
aaa
imul
les
pop
push
jp
stos
mov
xlat
insb
jmp
scas
jne
mov
mov
movsl
rorl
stos
inc
das
sbb
pop
sub
mov
add
sti
int3
xor
mov
lret
mov
in
pop
mov
jle
pop
and
dec
mov
or
xor
dec
fdivs
inc
in
scas
add
js
push
frstor
sti
notl
movsl
inc
cmpsl
cmp
jne
enter
cmp
sbb
cwtl
mov
jne
in
and
ret
dec
xchg
pop
cmp
les
xchg
xchg
add
imul
adc
mov
dec
push
xor
fstpl
stos
inc
or
sbb
fs
cmp
ret
xchg
stos
or
jmp
fxtract
add
fwait
jb
add
push
or
and
loopne
xor
cmp
jns
pop
stos
test
cmpsb
ss
push
and
je
sub
or
jnp
push
inc
lahf
rcl
mov
mov
ret
mov
icebp
sub
push
jmp
mov
js
and
mov
dec
fdivs
ds
loopne
xchg
jno
push
loopne
ret
push
adc
icebp
je
mov
rorb
cmp
into
std
sahf
and
dec
xor
and
out
pusha
push
stc
push
push
ss
pop
inc
mov
popf
dec
sub
shll
inc
lock
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
out
add
add
add
add
xor
add
nop
push
add
nop
inc
add
add
add
push
push
inc
push
shlb
or
mov
dec
mov
mov
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
