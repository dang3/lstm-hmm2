add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
hlt
mov
fidivrl
jle
cmp
fld
ja
or
call
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
inc
pushf
pop
add
or
repz
lds
or
aaa
stos
lock
push
nop
sti
sbb
dec
jg
pushf
aad
sti
das
das
subb
pusha
xor
cmp
movsb
jge
popa
xlat
cmp
out
sub
rcrb
adc
and
loop
xor
jle
add
in
lods
pop
mov
icebp
cmp
jns
in
mov
xchg
fcompl
js
xor
mov
jbe
stc
push
jmp
or
fs
cltd
loop
les
push
daa
push
stos
sub
inc
cli
jae
sar
add
mov
les
pusha
sbb
loop
inc
test
sbb
push
jle
add
movb
lret
xor
add
add
adc
and
scas
pop
addr16
pslld
jg
jle
jg
jle
pusha
push
mov
outsb
mov
out
sub
sbb
mov
jnp
loopne
add
movsb
mov
pop
clc
cmp
jge
cmp
out
inc
cltd
in
push
pop
pop
sar
push
cld
out
sarb
pop
das
inc
dec
fisttpll
sub
mov
mov
cs
fwait
pop
sub
shrl
or
adc
ret
movsb
add
movb
or
inc
mov
sahf
ds
mov
in
mov
mov
mov
jp
ja
js
mov
adc
pusha
dec
adc
sub
or
mov
jnp
xor
mov
pop
mov
mov
or
je
lods
sbb
jb
bound
mov
push
loope
rcrb
aas
pop
add
jns
loopne
fisttpl
adc
pop
shl
push
mov
stc
shll
dec
mov
je
mov
dec
mov
test
and
lret
rclb
outsb
insl
push
into
mov
cmc
popa
xchg
aaa
cwtl
hlt
sbb
jnp
scas
stos
test
shrl
inc
lods
mov
cwtl
adc
iret
pushf
dec
test
int3
imul
mov
subb
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
adc
xchg
loope
jl
jle
jg
jle
push
sub
loop
inc
mov
nop
fcmove
fs
push
push
int
mov
cli
es
loop
pop
sub
loopne
jecxz
mov
xchg
add
in
or
lods
inc
aam
jbe
cmc
pop
daa
insl
enter
fwait
ret
sbb
imul
mov
mov
fs
scas
repz
bound
dec
popl
push
out
sbb
jb
sbb
fcoms
push
decb
push
test
cmp
scas
aad
ret
cmp
fstp
mov
pop
sahf
test
rcr
jb
jmp
pop
xor
or
or
adc
sbb
pop
mov
in
pop
push
icebp
enter
inc
cwtl
popa
test
popf
hlt
add
mov
ror
xor
gs
xor
movsb
mov
sub
or
rcll
xor
xorl
cwtl
rcll
jp
and
les
xchg
adc
jecxz
push
pop
out
xor
dec
cmc
lahf
or
xchg
push
fcom
clc
mov
cmp
inc
dec
jge
mov
sub
nop
sbb
aam
mov
dec
test
js
jg
fisttpll
cs
sti
pop
sub
push
push
movsl
shr
ljmp
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
aam
add
jle
jg
jle
jg
faddl
add
into
cli
icebp
sub
add
adc
out
popa
in
cli
and
mov
mov
push
push
mov
push
inc
jge
js
pop
fcompp
fisubrs
pop
clc
pushf
shll
or
push
cmc
ljmp
xchg
xchg
mov
call
lods
fs
mov
popa
lahf
out
bound
ds
sub
lods
cld
sub
test
shrb
adc
sbb
adc
add
and
pop
bound
mov
sbb
mov
int3
push
jle
outsl
mov
lock
mov
test
pop
jo
adc
xor
scas
jmp
add
int
mov
icebp
call
icebp
pushl
mov
sarl
mov
xchg
out
xchg
xchg
pop
out
adc
cs
fistl
enter
and
or
pop
pusha
push
xchg
sbb
je
out
xor
push
sti
cmp
push
ljmp
pop
cmp
movsl
dec
arpl
fs
mov
mov
out
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
cmpsb
adc
mov
gs
insl
pop
fs
xor
push
scas
inc
aaa
mov
mov
mov
nop
sub
cltd
mov
mov
pop
mov
add
imul
sbb
xor
and
cld
mov
add
outsb
pusha
push
xor
push
movsl
dec
cmp
lea
push
mov
dec
insb
lret
xchg
fbld
orl
jmp
add
add
stos
jae
jno
xchg
dec
popa
mov
loope
fwait
repz
mov
xchg
xor
or
push
jecxz
pusha
loop
sub
push
ret
faddl
adc
clc
adc
or
mov
push
sbb
jmp
and
mov
sbb
sbb
mov
xor
out
lods
scas
iret
das
xchg
imul
pop
shlb
push
sbb
sbb
and
add
add
mov
push
es
pushf
stos
lret
in
loope
mov
popf
mov
cmp
loopne
adc
jnp
adc
out
push
leave
not
ds
imul
mov
xor
adcl
test
std
pop
jp
punpckldq
rclb
add
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
ret
sti
push
dec
jo
jle
jg
jle
pop
and
fld
sti
cmp
and
add
bnd
add
push
jecxz
sub
push
insb
mov
dec
mov
mov
popa
mov
jl
aaa
test
test
dec
ds
pusha
test
ljmp
jle
ret
fwait
ret
imul
inc
lods
icebp
push
fimuls
and
shlb
jmp
xor
gs
mov
push
sub
and
jp
fisubrl
push
rcrl
dec
or
push
xchg
cmp
inc
xchg
xor
xor
call
icebp
test
xchg
repz
adc
in
inc
cmp
lahf
adc
fcoms
out
bnd
xchg
xor
rclb
subl
aas
testb
xor
ficoml
inc
into
rolb
sub
lret
fcoms
mov
mov
pop
mov
xor
mov
in
mov
adc
xchg
sbb
push
out
arpl
pusha
mov
out
mov
div
mov
adc
mov
ds
jecxz
roll
cmpsl
cwtl
scas
mov
cs
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
adc
dec
push
jbe
jle
jg
jle
popa
xchg
xlat
push
movsb
add
in
adc
out
pop
mov
and
and
dec
movsb
gs
pop
sub
test
mov
push
je
stc
aas
mov
jl
out
fnstenv
gs
popf
jo
xor
xchg
jns
shlb
xor
lds
lock
out
imul
ret
lods
xchg
daa
je
subl
pop
das
lds
push
xchg
xor
xchg
sub
lret
imul
push
das
push
mov
mov
adc
push
cmp
dec
adc
shr
mov
sbb
aaa
aam
or
and
pop
movsb
adc
outsb
push
ljmp
repz
lret
or
and
adc
ret
test
es
jno
xchg
jbe
lock
fwait
push
mov
flds
and
repz
lods
pusha
mov
enter
icebp
xor
pusha
loope
cltd
movsb
rcrb
xor
inc
out
and
jp
in
mov
inc
out
xchg
and
sbb
inc
in
pshufw
push
mov
shll
mov
notl
xor
sbb
shrb
icebp
sub
test
aas
mov
stos
test
mov
stos
mov
xor
jmp
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
mov
bnd
jle
jg
jle
mov
pop
das
dec
push
insb
dec
cmp
aam
lock
fcmovbe
stc
xchg
sbb
sets
fistpl
xorb
lea
adc
pop
mov
in
xor
movsb
adc
xlat
mov
xor
and
pop
shlb
mov
lret
or
dec
add
dec
fiaddl
inc
cltd
outsb
xchg
cli
aad
cmp
je
mov
adc
pop
dec
shlb
daa
push
push
mov
sti
cmp
xchg
sar
fldenv
pop
bound
decl
pushf
cmpsb
gs
adc
sbb
pop
adc
add
lods
je
and
aaa
push
std
cld
imul
pop
mov
test
test
test
inc
inc
fldt
jbe
sti
xchg
and
push
adc
sbb
lcall
cld
icebp
ds
fcomps
push
loopne
fwait
add
adc
cli
jne
test
in
pop
aad
test
das
lock
adc
decb
or
jg
imul
cmc
outsl
test
hlt
jp
fistpll
jecxz
sti
adc
jle
fiadds
push
rol
aam
mov
or
mov
sbb
sub
jo
xor
and
pop
int3
sbb
inc
decl
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
xchg
das
cmp
je
jle
jg
jle
mov
push
jbe
mov
aaa
mov
fcmove
iret
sahf
sbb
xor
scas
and
out
mov
adc
pop
or
loop
jecxz
sbb
gs
or
int3
jne
imul
adc
loope
cmp
nop
mov
mov
xor
leave
jno
ds
jns
xor
cmc
fwait
cmpsl
sub
aas
dec
fiadds
and
scas
sbb
pop
lret
or
dec
rcrl
add
cmpsb
rcr
cmp
enter
adc
lds
push
dec
sub
xchg
inc
jb
mov
mov
inc
add
jns
push
out
jo
mul
and
dec
sbb
stos
xor
popa
push
lds
sbb
inc
jg
inc
lret
xchg
dec
stos
cltd
lds
lods
push
cmp
sbb
and
push
adc
inc
pop
jbe
sub
pop
dec
xchg
int3
cld
outsb
sar
fsub
jno
jge
js
push
fcmovnu
negl
not
and
sbb
mov
aad
popa
out
dec
xchg
ret
add
inc
cld
pop
cwtl
test
push
push
negl
and
jg
push
mov
int3
into
xor
movsl
push
stc
push
frstor
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
sub
adc
or
fidivrl
jle
mov
push
push
xlat
mov
sub
mov
jo
call
or
jp
lods
adc
dec
ficoml
jns
fstps
shll
pushf
stos
pop
adc
add
push
jp
aam
push
xlat
insb
or
xchg
cltd
and
hlt
pusha
or
fldl
mov
insb
ror
and
mov
incb
lods
dec
mov
fldenv
jmp
jl
mov
fcmovne
inc
pop
in
xchg
push
adc
scas
hlt
andl
push
insb
incl
xchg
pop
lea
xor
mulb
mov
in
jecxz
jmp
hlt
in
testl
inc
adc
pop
xor
mov
ret
loope
div
out
in
push
ret
mov
pop
sub
inc
lods
xor
add
push
mov
sub
pop
mov
push
jecxz
push
dec
sub
jle
ljmp
cmp
leave
add
stc
mov
pop
mov
xor
icebp
push
andl
add
jge
cmc
mov
out
std
popa
daa
sub
cmpsb
jae
into
in
mov
xchg
push
jne
xor
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
shlb
ret
jle
and
jle
inc
scas
cmp
or
aad
mov
es
std
std
sbb
fmull
cli
test
fwait
and
dec
into
inc
add
or
inc
or
sub
addb
shll
adc
pop
ss
pop
clc
dec
call
repnz
add
shr
xor
nop
cs
scas
test
add
jno
mov
lods
jl
add
shrb
xchg
mov
aaa
subl
sbb
cmp
nop
popl
sbb
pop
stos
insb
dec
loopne
stos
pushf
mov
je
shll
lods
lea
test
mov
cmp
fsub
dec
sub
pop
push
sub
outsl
ja
jle
cmp
jnp
cli
push
or
push
push
lahf
into
cmp
or
cmp
lret
loope
xchg
sahf
test
and
pop
loop
shrl
mov
cmp
cltd
pusha
or
bound
inc
gs
add
cmp
lods
push
mov
push
and
inc
mov
sbb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
outsb
arpl
jle
jg
jle
jle
cmp
aad
cmpb
fsts
or
insl
lret
mov
pop
shlb
add
pop
add
cmc
jle
mov
xchg
mov
mov
add
push
std
mov
mov
and
lock
stc
sub
dec
jo
sbb
or
and
mov
jp
add
mov
lds
mov
xchg
stos
pop
dec
addr16
out
pusha
jno
mov
sub
into
in
insl
mov
scas
fnstsw
pop
aas
shll
std
mov
imul
out
popa
outsl
cmp
loopne
rolb
push
sub
iret
cli
pop
xchg
jo
movsl
fisubrs
dec
push
lea
xlat
cmpsb
jg
cmp
xchg
emms
push
jns
ljmp
dec
out
lods
mov
xchg
dec
sahf
jg
arpl
out
inc
mov
pop
fbstp
push
pop
sub
lahf
jecxz
aad
push
mov
dec
cwtl
lock
test
ja
stos
test
cltd
sbb
cmp
in
xor
xchg
add
jg
push
fsubl
fwait
mov
out
jae
fimull
mov
inc
jmp
or
mov
or
and
xor
and
jle
sub
or
jp
in
cmpsb
aam
cld
adc
jno
shll
mov
cli
cmp
xlat
jbe
xchg
das
xor
std
jno
inc
out
or
popf
add
push
ds
push
hlt
outsl
fsubr
sub
jp
pop
cld
sbb
jns
adc
xor
mov
pop
xchg
jbe
dec
push
sub
jge
mov
sub
jle
in
outsb
cmpsl
jge
mov
sbb
jle
sub
icebp
cmp
cmc
adc
in
and
mov
loope
mov
xchg
scas
push
mov
inc
xchg
aad
shlb
ljmp
mov
jl
imul
cmp
fcomip
aaa
fmulp
pop
adc
test
ret
jecxz
mov
inc
fnstsw
jge
dec
inc
sti
jmp
aam
shll
push
jae
and
adc
ror
popl
push
clc
or
mov
ljmp
stos
cmp
add
pop
std
cwtl
aaa
stos
push
test
test
pop
test
mov
movl
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
test
jle
and
jle
cmp
xchg
inc
int3
add
push
push
sbb
cltd
or
pop
in
fisttps
sub
sub
paddusw
pop
dec
loope
lock
push
mov
out
cld
lds
or
jecxz
pop
xorb
mov
push
test
jg
sub
nop
insb
mov
fldt
push
lds
or
daa
int
sbbb
inc
jae
fldcw
mov
jo
cmp
jecxz
push
add
aad
add
ss
jno
daa
sti
outsl
push
push
sbb
xor
inc
es
ljmp
fmull
lret
push
push
xchg
loop
rcrb
xor
loopne
shr
jle
xor
sub
mov
cmp
lock
xor
mov
data16
mov
mov
mov
sub
push
lock
push
inc
inc
dec
imul
std
pop
orb
jae
mov
push
jge
leave
xor
inc
jmp
xlat
mov
push
inc
out
xchg
xchg
and
pushf
pop
ja
movsl
mov
cmp
ljmp
lds
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
push
leave
sbb
mov
jne
cmpsb
lret
ss
data16
or
int
mov
scas
cmp
push
pusha
cli
and
xchg
fcmovnu
jno
cmp
jo
je
sbb
andl
iret
in
int3
cmp
mov
jecxz
sub
sbb
in
stos
jb
jo
loop
push
mov
lds
movsl
lods
push
xchg
fdivrs
lods
mov
je
in
or
adc
jle
inc
mov
push
fbstp
aad
repz
inc
inc
mov
in
insl
sbb
int3
jle
mov
in
jb
add
mov
push
stos
pop
sbb
mov
ss
cld
rcrb
jo
jne
push
cmp
sti
daa
add
pop
mov
cs
sahf
repnz
imulb
or
or
xor
push
mov
cmp
lret
or
in
mov
cwtl
lret
push
pop
xor
pushf
movsb
add
les
hlt
cld
add
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
jo
lahf
or
jle
push
int3
ja
out
jle
inc
imul
insb
jae
lea
adc
lods
pop
push
pop
cmp
xchg
in
popa
cmc
sub
test
ljmp
ret
repz
and
or
xchg
adc
add
mov
ret
sbb
push
pop
movsl
ret
clc
sbbl
xchg
jl
push
mov
lret
sahf
out
push
xor
mov
mov
xchg
pop
sbb
or
cmc
into
pop
repnz
xchg
inc
mov
outsl
xor
dec
shlb
testb
and
scas
ret
add
sbb
test
fldt
inc
test
xor
rcrl
mov
push
or
inc
push
sub
xchg
add
enter
pop
mov
js
pusha
mov
out
or
cli
test
ja
jne
mov
insl
fndisi(8087
fidivrs
icebp
call
cmpsl
lock
rclb
mov
arpl
mov
lret
pop
loop
ret
and
adcb
mov
jg
cmc
xchg
rol
push
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
mov
in
inc
add
and
jle
push
mov
dec
loope
in
and
and
jl
ret
pop
dec
cmp
cli
mov
outsl
and
test
jns
test
mov
out
in
pushf
xor
jl
push
adc
enter
sbbb
es
mov
cmp
jp
jns
insl
es
cmp
mov
mov
insl
pop
xorl
add
dec
mov
addr16
jmp
ss
aaa
xchg
in
xor
fwait
jecxz
out
sarb
xchg
mul
stos
sub
je
adc
hlt
xchg
ret
test
dec
push
cli
into
xchg
inc
mov
xchg
daa
int3
ljmp
movsb
mov
mov
cld
push
lea
fldt
sub
icebp
sub
pushf
faddl
or
shll
dec
test
fiadds
in
jle
in
adc
jno
push
leave
pop
ss
jle
lds
sar
mov
xchg
outsb
dec
cmp
movsl
lods
test
loop
mov
loop
clc
lock
push
std
pop
add
and
hlt
stos
jle
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
jle
js
add
and
jle
jp
out
sahf
cmc
outsl
and
sub
jecxz
stc
add
xchg
jge
xor
sub
inc
and
imul
xchg
je
fcomip
or
mov
cmp
or
lods
add
mov
push
pop
in
mov
lahf
pop
loop
or
push
xchg
add
mov
push
cwtl
and
ja
fmul
mov
nop
jnp
fwait
xor
add
rorl
inc
jg
push
and
in
jne
sub
sti
cmp
aam
rcrl
cmc
pop
cmp
dec
test
je
cmp
dec
mov
jge
mov
test
fimuls
jge
push
and
mov
inc
leave
adc
mov
pop
xor
std
or
mov
xor
or
popa
push
xchg
roll
push
push
ljmp
xor
mov
inc
call
bound
push
cmpsb
pop
jae
and
cwtl
movb
jno
push
addl
push
jns
clc
cli
mov
adc
sbb
xor
jmp
int
mov
stc
repnz
xor
add
and
jle
fdivl
lcall
fs
stos
cmp
pop
dec
jmp
xor
shlb
push
pop
pop
jl
and
xchg
jae
add
jo
repnz
hlt
mov
fstps
xor
mov
js
mov
add
lds
sbb
in
sbb
lea
push
mov
or
movsl
jns
loop
in
in
or
aam
aam
imul
or
pop
add
lcall
repz
mov
add
fldl
or
cmp
and
pop
insl
or
sub
popf
test
imul
fwait
imul
data16
push
enter
imul
cli
decb
cmp
enter
shll
sub
fucomip
mov
or
push
add
int
loop
or
andb
cs
loop
es
xchg
dec
jno
bound
xor
in
insb
in
lods
mov
dec
fisubrl
or
loop
lret
not
adc
or
jl
xor
jge
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
pop
test
imul
rolb
cmp
repnz
mov
push
test
cmp
or
or
sub
jae
sub
iret
leave
outsw
xchg
mov
lcall
pushf
imul
xor
add
repnz
mov
rolb
xor
lret
in
fdivrl
xchg
sub
or
mov
daa
lret
lods
pop
sub
cltd
dec
adc
pop
xlat
fmul
je
popa
push
scas
jb
jecxz
int
frstor
stos
std
pop
push
add
outsl
add
inc
stc
stos
int3
xchg
test
popa
or
adc
loope
out
push
inc
or
dec
adc
repz
mov
cli
push
std
enter
mov
mov
inc
pop
mov
jb
int3
and
jne
push
imul
mov
imul
cmp
jl
adc
test
push
inc
inc
or
mov
aaa
mov
cmpsb
mov
jne
xchg
leave
nop
sbb
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
movsl
cltd
aaa
xchg
pop
jle
and
jle
loope
fbstp
or
push
mov
imul
fwait
mov
inc
lret
add
ljmp
xchg
fldenv
sbb
mov
push
mov
mov
mov
cs
push
std
out
jl
xor
sbb
jge
jg
insb
sbb
push
xchg
xchg
add
or
scas
and
mov
pop
fwait
std
iret
push
mov
and
sub
mov
testb
push
in
das
xor
jg
sbb
pop
data16
lret
sub
add
mov
lods
cmp
ret
bound
rorb
push
cmp
xchg
mov
adc
lret
push
xor
push
dec
loopne
fildll
addr16
inc
lods
cli
push
push
lcall
test
push
int3
mov
lret
mov
dec
shrl
scas
cmpsb
aam
scas
inc
adc
lds
jb
jns
sbb
and
cmpsl
scas
stos
fcomi
lods
stc
into
pusha
call
dec
xor
cmc
adc
pushfw
mov
pop
aam
mov
jmp
jns
mov
dec
js
movsl
mov
lods
cmpsl
sub
jle
and
jle
sar
adc
jbe
cwtl
aas
into
inc
mov
addr16
mov
jp
repnz
hlt
jo
xchg
aam
dec
popa
lret
fisubl
cmp
dec
push
leave
shlb
pop
negb
mov
push
push
mov
jge
test
rcr
mov
movsb
add
adc
cwtl
fcomps
push
stos
xchg
cltd
leave
cwtl
and
pop
push
sbb
pop
das
inc
mov
lret
jmp
lret
sbb
pusha
sub
or
push
push
repnz
or
shrb
imul
and
push
out
cmp
fwait
or
sbb
push
sahf
mov
jb
pop
and
scas
dec
sahf
std
and
sbb
push
jns
outsb
iret
jg
push
push
outsb
push
ret
inc
fildl
ret
and
mov
imulb
xor
ja
push
push
inc
xor
inc
mov
sarb
ret
loope
jne
push
cwtl
xor
jecxz
dec
pusha
pop
mov
gs
mov
fstpl
jno
fwait
xchg
or
sub
movsb
sbb
inc
rol
pop
mov
inc
lret
test
jge
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
jnp
cmpb
jle
and
jle
xor
xchg
in
aas
imul
xchg
mov
jg
sub
scas
push
cld
idivl
js
fnsave
pusha
cmp
clc
lea
lret
fbstp
test
jl
jmp
sbb
sarl
stos
imul
mov
add
out
jo
leave
mov
add
int3
adc
and
call
dec
pop
push
fwait
pop
ss
shll
lret
mov
or
scas
add
sbbb
or
mov
ret
cld
popa
fcomps
inc
jmp
push
add
push
andb
sbb
addl
jmp
js
cmp
jne
nop
cld
pop
ja
pop
push
push
orb
mov
pusha
cltd
outsl
xchg
in
mov
sbb
xchg
in
adc
leave
sub
loope
sub
pavgw
push
out
adcl
inc
dec
push
jmp
stos
cmpsb
lsl
mov
push
ja
inc
add
add
xor
aas
mov
sub
mov
add
and
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
pop
jne
aaa
sbb
and
jle
nop
dec
pop
mov
jl
xchg
sbb
or
push
sarl
adc
and
mov
subb
sbb
repnz
divb
push
in
dec
jmp
or
aaa
insb
mov
cmpsl
push
or
sub
xchg
das
xorl
int
or
cmc
in
mov
jmp
mov
jmp
cmp
stos
mov
movsl
mov
scas
or
sub
fwait
pop
push
scas
ja
scas
xor
pop
inc
cmc
push
shlb
in
in
sti
and
ljmp
add
aam
jg
gs
inc
jnp
mov
and
cmp
and
les
pop
pushf
cmpsb
into
pop
or
icebp
stos
pop
in
adc
sub
bound
pop
pop
lods
and
xor
stc
push
mov
jecxz
sarb
and
and
mov
int
dec
mov
lret
jl
mov
inc
aaa
sub
push
pop
xlat
loop
mov
fistps
add
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
int3
lock
sbb
and
jle
and
negb
lcall
push
loopne
fsubp
or
mov
adc
fs
cmp
repz
jge
cmp
icebp
mov
push
xor
cmp
rorl
jne
inc
inc
add
push
xchg
push
and
insl
mov
sbb
mov
sti
fiaddl
push
push
ror
fsubrs
dec
loope
or
out
sub
inc
imul
jmp
or
inc
xor
add
or
xchg
loop
xor
sub
aam
test
dec
icebp
call
sbb
js
ljmp
clc
xchg
lds
shl
adc
pop
xor
inc
int3
in
xchg
fisubrs
sub
mov
pop
xor
dec
or
andl
testb
adc
jge
repnz
shr
iret
pop
inc
iret
mov
ja
shll
and
mov
sbb
xchg
dec
scas
push
mov
inc
and
inc
js
pop
fdivrl
xchg
movsb
xchg
jae
cmp
test
adc
std
in
cmc
in
test
ret
push
mov
jmp
jb
test
adc
jl
lods
sbb
jmp
aas
push
adc
cmp
mov
cmpsl
xlat
jnp
xorl
rclb
jne
and
fwait
cwtl
mov
dec
loope
out
inc
push
mov
inc
sbb
fiadds
inc
cmp
and
jb
cmp
mov
aam
lods
pop
mov
add
mov
cmc
push
mov
movsl
cmp
inc
pop
es
xchg
test
cmp
sbb
fdivp
aad
sbb
cmp
dec
std
loop
mov
push
cmp
or
cwtl
inc
test
pop
sub
out
hlt
stc
adcl
clc
or
mov
lea
add
jecxz
mov
cmp
aas
das
idivb
mov
jecxz
dec
lock
inc
cwtl
jo
adc
mov
push
xor
iret
mov
and
lods
andl
cmp
mov
add
or
shrb
jns
sbb
insb
inc
dec
rorl
sahf
cmpsb
jae
mov
mov
mov
fistpll
pop
int3
sub
inc
stos
rep
mov
in
xchg
pop
in
in
lods
cmp
leave
cmp
icebp
mov
push
xchg
xor
fnstenv
xlat
pop
jle
sbb
pop
pop
sbb
push
in
outsl
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
dec
inc
scas
sbb
jle
jmp
outsl
push
dec
xor
or
outsb
daa
cld
xor
ja
das
hlt
or
fs
push
cli
push
xchg
sbb
xchg
mov
popf
sbb
movsl
cmp
xchg
icebp
jmp
dec
push
mov
loop
add
into
mov
add
rolb
loop
mov
addb
orl
xchg
jns
cmp
or
out
dec
mov
mov
dec
popf
push
cli
sbb
scas
call
add
pop
fisttpl
mov
and
adc
mov
lret
mov
mov
int
xchg
fimuls
and
ss
mov
add
xor
cmp
hlt
mov
add
adc
push
mov
xchg
je
inc
jne
adc
inc
out
push
pop
jno
out
push
dec
push
fs
test
movsl
pop
push
ss
ss
adc
pop
int
jns
inc
dec
in
xor
cmp
lret
out
pop
leave
mov
inc
nop
js
enter
inc
pop
sbb
loope
sbb
fbstp
push
sbb
mov
dec
push
lods
cmpsl
gs
add
sbb
adc
mov
inc
lret
lods
pop
scas
sbb
adc
xor
ret
add
fcmovu
mov
nop
es
jb
stc
inc
mov
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
rorb
loopne
xchg
iret
sbb
mov
fistpll
scas
push
cmp
clc
mov
incl
addr16
cmp
jo
in
adc
aaa
fisttpl
repnz
stos
scas
loopne
testb
ret
insb
int3
sbb
add
jbe
cmpsb
sbb
xor
and
xchg
shrb
jns
hlt
xchg
jp
xchg
call
and
shl
inc
je
push
xor
or
xlat
sub
xchg
int
inc
mov
rorb
add
je
ret
inc
lahf
ds
lods
div
xchg
arpl
ja
jae
adc
push
test
cltd
xchg
popf
scas
push
pop
inc
mov
xor
scas
push
and
fcompl
jge
mov
std
jnp
inc
dec
out
sub
nop
fdivs
out
stc
fs
jge
push
arpl
fistps
fwait
xor
in
xchg
pop
int3
push
push
mov
nop
cmp
cmp
pop
inc
xor
pop
scas
jae
andb
inc
mov
and
fsubl
js,pn
in
ss
lret
out
inc
adc
ljmp
imul
mov
xchg
xchg
repnz
push
jo
jne
sbb
in
rclb
insb
xlat
js
push
clc
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
mov
jle
jg
jle
sbb
out
mov
mov
pop
xor
sbb
mov
pop
xor
pop
xchg
ljmp
push
mov
push
cmpsb
dec
movsb
ret
fildl
push
push
lret
adc
sub
jno
sub
jg
dec
mov
mov
fimull
mov
shl
cmpsl
cld
jg
or
mov
int
loopne
cmc
lock
add
popa
dec
cmp
mov
mov
mov
loope
mov
xor
and
xchg
mov
fwait
outsl
pop
popf
or
sti
adc
mov
int3
sbb
ss
mov
scas
loop
and
bound
in
sub
pop
dec
mov
mov
mov
inc
and
push
jnp
cmpsb
jns
jl
ljmp
mov
jbe
out
mov
inc
shrb
cmp
pop
mov
xchg
ret
or
outsl
lcall
mov
jl
xor
mov
aas
jbe
xchg
fiaddl
std
xor
mov
and
inc
shl
mov
test
jmp
inc
xchg
repz
or
or
add
lock
sub
insl
adcb
push
jno
xlat
push
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
dec
jmp
jg
jle
lcall
cmpsb
cmp
jns
data16
movsb
je
cmp
pop
or
jne
aam
fistpll
daa
pop
outsb
jp
lock
mov
test
mov
fstp
ljmp
jp
xor
push
test
adc
pop
sbb
sbb
jb
scas
fstl
pop
movsb
mov
jae
sbb
mov
push
add
repz
fstpt
xchg
jecxz
rep
es
jno
dec
add
adc
pop
adc
notl
outsb
mov
xlat
movsl
mov
repnz
lret
lret
pushf
xchg
push
popa
xchg
movb
lods
add
add
add
adc
movsb
or
sub
addl
hlt
dec
ljmp
fsubr
test
leave
push
adc
clc
xchg
sbb
in
xor
and
insl
in
or
jne
fwait
je
xchg
lahf
aas
jecxz
mov
cli
ficomps
sbb
xchg
int3
xor
test
in
sbb
or
int3
inc
mov
push
push
aad
icebp
in
arpl
push
jp
repnz
lock
sbb
add
xchg
orb
add
aad
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
mov
jle
fdivrl
jle
add
push
jne
nop
fcmove
xchg
or
testl
imul
scas
inc
lea
leave
rorl
mov
stc
lahf
xor
sbb
mov
je
push
lret
push
dec
push
insl
insl
sub
fstl
adc
sbb
mov
stos
dec
mov
xchg
lret
popa
adc
xor
mov
cmp
mov
orb
sub
cmp
out
arpl
dec
test
cmpsb
inc
xor
inc
test
inc
jbe
test
call
dec
cmc
or
scas
arpl
dec
loopne
cmp
in
fs
shlb
xlat
nop
test
ja
repz
test
lret
mov
fistpll
cld
in
push
jle
fimull
jg
push
adc
xchg
inc
sti
and
test
sbb
mov
push
clc
add
cmp
gs
or
pop
add
or
adc
pop
dec
xor
mov
cmpsb
xchg
lods
flds
ret
out
cmovs
push
jnp
fldcw
out
stc
insl
fwait
jecxz
pop
mov
or
jmp
lds
sti
mov
push
out
or
in
cwtl
pop
mov
aas
pop
push
mov
divb
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
gs
sbb
jle
jg
jle
hlt
mov
cmp
pop
dec
mov
insb
mov
add
and
xchg
jbe
dec
outsb
jmp
adc
cmp
sti
dec
sub
js
push
in
imul
fwait
push
pop
pusha
nop
std
fildl
sub
jbe
mov
outsl
mov
inc
clc
sbb
jnp
orb
gs
sbb
mov
lret
scas
mov
jns
lcall
div
out
dec
dec
sub
mov
leave
dec
sub
mov
mov
std
adc
outsl
fmuls
rorb
sub
adcb
fidivl
outsl
add
add
rcl
mov
stos
push
sahf
sahf
mov
jnp
lcall
jb
test
gs
mov
mov
outsb
dec
ss
leave
aam
mov
es
xor
loopne
push
jg
dec
sbb
sbb
aas
popf
mov
push
xchg
cmc
push
aad
ds
ret
scas
push
xor
or
imul
mov
cmp
aad
dec
sub
mov
and
lret
jmp
push
push
outsb
mov
xchg
sub
faddl
arpl
dec
data16
stos
push
xor
add
mov
jmp
mov
jmp
push
gs
movsb
es
jle
adcl
jle
jg
jle
dec
imul
lcall
mov
pop
hlt
jno
sub
cmp
jp
sbb
push
lahf
push
pusha
pop
insl
cmpsl
fnstenv
cmpsb
mov
add
idivb
sub
adc
sbb
shlb
test
imul
cwtl
push
jg
mov
inc
imul
outsl
mov
out
pop
fdivl
popf
cmc
cmp
movsb
scas
push
sub
ss
jnp
jge
jecxz
jecxz
jo
sbb
mov
inc
out
sub
out
fsts
mov
stc
inc
fdivs
not
xorb
xor
pop
jae
xlat
je
mov
lcall
jbe
in
repz
inc
stc
add
xchg
pop
int
pop
ret
pop
sbb
sti
dec
xchg
jp
rorb
fstps
pop
mov
jne
cmc
mov
rorb
add
arpl
in
jne
std
or
popf
dec
and
pop
in
inc
pop
and
pop
ret
and
xchg
pop
in
pop
jg
mov
addr16
xorl
test
pop
data16
divb
cmp
aam
pushf
jne
arpl
push
jae
sbb
mov
jno
ret
cmp
add
pushf
movsb
mov
jne
cmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
push
sub
std
repnz
mov
jge
jle
adc
aas
ja
cwtl
dec
jge
sub
xor
test
imull
cmp
stc
sub
adc
cmp
jp
pop
bound
jo
pop
push
cmp
mov
mov
sbb
fsubl
je
inc
fldt
ds
pop
adcb
and
lea
ljmp
jg
fnstenv
nop
lret
xor
loopne,pt
sahf
dec
daa
pop
enter
into
fsubp
fwait
sti
aas
sar
test
add
mov
sti
pop
iret
inc
popf
mov
shl
pop
sbb
enter
inc
adc
add
pusha
inc
push
push
test
inc
dec
lods
into
dec
ja
cltd
sbb
inc
fnstcw
inc
sub
addl
sub
mov
jl
hlt
push
push
out
aaa
jmp
cmpsb
outsl
fistpll
jnp
popf
cmpsb
decl
stos
mov
addr16
push
xchg
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
cld
mov
jge
jle
or
jle
ret
loopne
data16
and
dec
xor
jno
ja
pop
push
cmp
pop
dec
or
mov
xchg
ja
lcall
add
in
loopne
sub
ret
call
pop
sub
outsl
sbb
call
ficoms
jg
das
shrl
push
out
mov
or
dec
aad
arpl
addr16
loopne
cmpsb
in
push
adc
test
in
inc
lock
and
lahf
pop
fdivr
push
mov
mov
cmp
test
sbb
call
cmp
daa
test
pop
adc
into
mov
xchg
cwtl
sbb
mov
cmpsl
loopne
xchg
inc
and
add
out
mov
in
pop
inc
jl
adc
dec
adc
insl
imul
movsl
mov
loope
lret
sub
or
loope
mov
add
mov
or
mov
roll
cltd
jne
push
imul
rolb
dec
jle
add
jg
inc
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fisubl
sub
or
jle
mov
cmp
insl
mov
aad
stos
xor
testl
fs
push
adc
inc
add
mulb
jge
jbe
push
inc
fimuls
neg
inc
mov
out
sub
adc
pushf
jl
fcoml
mov
imul
inc
mov
cmc
xor
addb
roll
clc
stos
jle
sbb
movzbl
int3
mov
mov
pushf
fidivrs
jl
adc
and
clc
adc
cmp
fimuls
loope
js
xor
jns
mov
or
push
test
ret
es
push
ds
and
dec
insl
mov
rcrl
mov
pop
mov
cmp
jbe
dec
sbb
lahf
sbb
cmp
scas
xchg
cmp
sarb
cmp
pusha
daa
scas
pop
inc
ret
push
loop
fwait
cmp
stos
add
lods
imul
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
ljmp
or
jle
dec
lret
xlat
and
call
ret
xchg
jbe
es
int
mov
inc
out
std
cmp
jg
incb
pop
dec
sub
lret
adc
testl
pushf
fsts
mov
aaa
repz
inc
iret
mov
cld
mov
pop
daa
mov
les
and
adc
sbbl
pushf
hlt
jg
and
lods
pop
dec
fdivs
and
jecxz
mov
les
scas
lods
lea
repnz
and
jne
idivb
movsb
rolb
pop
adc
push
clc
insb
and
mov
cltd
mov
call
mov
sub
push
cwtl
leave
fchs
int3
pop
and
lcall
push
ja
push
mov
jbe
iret
pop
out
orb
out
push
cmc
mov
sbb
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
mov
jle
or
jle
pop
aam
dec
lcall
or
and
pop
add
dec
inc
out
sub
inc
xchg
imul
stos
pop
or
mov
mov
inc
xchg
inc
maskmovq
imull
fwait
mov
mov
stc
lock
push
ds
neg
sbb
jl
imulb
roll
out
in
gs
and
mov
adc
xchg
mov
adc
mov
cmp
sub
jnp
jecxz
mov
or
cs
nop
adc
pop
stos
xor
xchg
cmp
adc
cltd
cltd
mov
fisubrs
stc
xchg
pop
call
sub
jb
cmp
js
mov
mov
pusha
stc
negl
xor
fcomps
rcr
jbe
ljmp
sub
sub
jle
jle
cmc
jbe
cwtl
jmp
adc
jo
cmp
out
lret
sub
pushaw
daa
jns
ljmp
lahf
out
jb
mov
xchg
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
mov
ljmp
jg
jle
cli
cwtl
mov
sahf
jae
pop
movsb
addr16
aad
enter
xor
xor
pop
aam
or
in
jo
push
jle
add
add
pushf
mov
push
ret
push
and
pushf
enter
cmp
jo
notl
addl
lahf
cmp
mov
popa
sub
mov
dec
mov
dec
inc
addr16
int3
jg
inc
add
in
jge
xlat
or
negb
mov
out
cmp
repnz
pushf
add
jge
xchg
adc
ret
in
xchg
add
mov
mov
mov
push
das
jge
jge
sbb
or
in
inc
dec
aaa
push
or
xchg
iret
push
xchg
xchg
xor
dec
mov
test
cmp
mov
push
jb
push
aad
scas
fucomip
xchg
ss
mov
push
add
xchg
sbb
and
mov
mov
cld
pop
mov
xor
fdivrs
pop
or
sub
sti
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
push
popa
insb
cmp
jle
or
jle
out
fidivl
aas
mov
inc
cmp
push
sub
cwtl
jno
test
and
cmp
push
push
sarb
sbb
in
cmp
dec
mov
or
push
jmp
outsb
int
cmpsl
scas
pop
add
stc
aam
push
fs
pop
rolb
xor
jl
and
adc
popa
dec
inc
mov
lods
leave
ret
or
mov
cwtl
ljmp
sub
sbb
mov
in
in
mov
sbb
and
push
push
dec
pop
or
inc
je
or
test
ljmp
pop
aam
fistl
push
leave
mov
mov
mov
mov
mov
inc
jno
push
jns
jae
pop
sub
loope
es
pop
cmpsb
popl
and
mov
mov
inc
sub
fxam
cld
pusha
sub
cmp
scas
ja
ds
mov
jmp
dec
sub
lock
xor
jle
jg
jle
jae
mov
fildll
mov
mov
mov
repnz
mull
cwtl
push
mov
stc
mov
pushf
dec
sub
lods
mov
pop
push
stos
ja
or
mov
ffree
jne
inc
fistps
dec
fstp
or
jg
sbb
inc
pop
enter
cmp
mov
sbb
lret
idivl
inc
inc
enter
push
pop
aaa
repnz
pusha
pop
adc
imul
cmp
dec
jae
or
pop
rcrl
adc
lret
mov
mov
fisubl
jbe
add
xor
mov
pushf
std
push
sbb
je
out
sub
shlb
ds
js
loopne
adc
xor
sub
daa
lahf
movsb
call
adc
cwtl
testl
fildll
ret
or
shrl
data16
dec
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
mov
or
jle
loop
inc
jp
xor
shll
push
jno
nop
sbb
mov
mov
testb
push
pop
add
or
jae
ficompl
testb
push
divl
mov
test
xor
mov
inc
je
int
shrl
adc
xor
dec
in
in
movsb
test
call
dec
in
lods
mov
mov
outsb
shll
xchg
cli
inc
pusha
lcall
mov
mov
xor
repnz
loopne
fsubs
xchg
push
add
jge
push
testb
in
push
subb
push
arpl
sarl
adc
lret
addr16
cmp
loopne
movsb
mov
adc
fiaddl
sti
clc
aaa
retw
cmpsb
aaa
sbb
enter
movsl
ror
cmp
sti
push
xchg
xchg
jmp
jbe
lods
mov
outsb
push
fdivp
sti
xchg
in
out
sbb
shlb
out
sbb
fwait
lds
repnz
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
pop
data16
and
or
jle
lret
lahf
and
and
jno
fidivl
mov
pop
mov
xchg
inc
dec
pushf
icebp
mov
mov
pop
jle
mov
xor
gs
push
adc
lock
adc
imull
adc
loopne
das
sarl
push
and
loopne
mov
sub
int
push
sub
sbb
stc
jbe
pop
cs
and
dec
loop
xchg
xchg
aam
add
mull
pop
mov
mov
ljmp
sbb
and
in
aam
lahf
pop
mov
adc
hlt
sbb
jle
addr16
inc
dec
ss
leave
out
jl
cmp
das
movsb
outsb
dec
ret
cmpsb
js
push
pop
js
mov
fs
lahf
push
rorl
xchg
and
in
and
int3
and
pop
xchg
aas
inc
mov
pop
cmp
and
mov
jns
adc
or
rol
mov
xchg
lahf
daa
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
jmp
jle
or
jle
mov
ja
jns
out
adc
test
cmp
inc
push
adcl
cmc
fsub
push
out
mov
inc
adc
stos
into
int
int
addb
sbb
lds
jge
sub
lahf
lock
test
push
in
std
push
jo
repnz
jnp
inc
nop
imul
stos
dec
cmp
inc
adc
cli
sti
fnstcw
stc
addr16
stos
push
dec
sarl
andl
xchg
lea
sub
sbb
jnp
scas
ret
fs
adc
xchg
nop
mov
loope
xchg
push
xchg
xchg
add
pop
scas
push
and
jge
rolb
movsl
mov
mov
inc
sar
iret
mov
pop
daa
mov
lahf
popa
cld
nopl
push
mov
mov
movsb
xor
and
repz
jg
fcmovbe
push
xchg
xor
or
scas
dec
pushf
add
jo
inc
jnp
pop
add
xchg
xchg
dec
cli
icebp
ja
fs
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
inc
xor
or
xchg
jbe
call
mov
push
cmp
nop
das
inc
sbb
daa
push
mov
inc
jae
jno
aaa
xchg
adc
pop
loope
ljmp
mov
pop
in
adc
fiaddl
fnstenv
push
sarl
pop
fistpl
ja
mov
cmp
sbb
iret
mov
pop
push
xchg
xchg
loope
repnz
outsl
test
xchg
push
adc
cwtl
shlb
sbb
cli
outsb
push
sub
push
roll
enter
mov
mov
mov
mov
jmp
es
mov
les
xor
push
or
jle
jle
jle
mov
fsts
push
aaa
mov
lea
mov
in
test
inc
mov
es
loop
push
and
pop
mov
xchg
xor
movsl
jle
sub
lret
jge
andb
outsb
in
scas
add
fdiv
loope
xchg
xchg
icebp
and
and
xchg
fldpi
pop
sub
mov
xchg
imul
fdivp
and
mov
mov
cwtl
in
dec
adc
loopne
jnp
nop
and
les
push
hlt
aas
sbb
xor
addb
inc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
and
push
jg
jle
mov
push
mov
pusha
adc
xlat
aam
cmpb
add
cmpsb
push
adc
mov
and
mov
repnz
adc
subl
movsb
sbbl
jno
leave
nop
cmp
push
pop
mov
jge
popa
adc
mov
sub
xchg
cli
fdivl
push
clc
negl
dec
adc
test
or
andb
stos
add
sbb
push
mov
sbb
cmc
cwtl
rcrb
lahf
lret
test
sti
mov
je
jbe
sarb
pop
repz
inc
adc
imul
mov
std
sub
cmpsl
mov
and
popa
push
lods
sbb
pavgb
cmp
xor
ret
mov
jnp
into
cmc
mov
push
jmp
call
das
sbb
mov
fsubr
js
pop
jns
or
lock
shrb
add
jp
movsl
dec
push
inc
sti
imul
push
mov
or
mov
or
ja
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
fcmovu
es
push
jg
jle
add
and
fmull
pop
outsb
and
jns
setb
stos
mov
xor
cmp
ljmp
loopne
mov
adc
lret
jge
pop
xor
xor
std
aam
movsl
imul
ficoml
mov
mov
add
or
mov
sub
les
mov
adc
in
xchg
pop
mov
sub
test
dec
movsl
pop
cmc
inc
les
dec
mov
mov
xlat
mov
insl
je
cld
fsub
inc
shrl
out
ficompl
jmp
jp
aad
sahf
lock
icebp
adc
or
js
nop
jb
push
jecxz
mov
imulb
in
loop
add
hlt
fcomps
out
add
mov
pop
sti
int3
hlt
or
out
enter
call
loopne
jle
cltd
push
lret
frstor
dec
test
and
std
or
jl
test
jmp
outsb
add
xor
pop
out
xchg
shl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
add
jle
push
jg
jle
pop
cmpsl
sbb
push
movsl
cmpsb
xchg
mov
dec
cmp
dec
xlat
imul
stos
mov
repz
orl
fsub
xor
cwtl
lds
cmp
int
insl
outsl
xor
jno
lods
shl
push
in
add
data16
mov
or
inc
mov
xchg
fwait
add
mov
rolb
pusha
cld
repnz
mov
pop
push
mov
xchg
and
pop
bound
cmp
lahf
sbb
cmc
sub
push
enter
sbb
xchg
das
inc
cmpsl
rorl
test
addr16
popf
pop
or
inc
les
inc
ror
jmp
xchg
jnp
xchg
push
sbb
xchg
ss
add
add
out
cmp
lods
xchg
push
fs
pop
into
cmpsb
imul
jmp
add
rorl
stc
push
jne
scas
and
daa
jp
push
mov
fsts
lock
jmp
push
dec
jmp
cmpxchg
aaa
loopne
xlat
test
xor
push
test
sarb
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
mov
and
jle
fs
jae
sbb
adc
jg
cmpsb
test
cmp
and
movsl
cmp
cmp
adc
pop
xchg
stos
push
add
mov
cli
dec
mul
shl
int
inc
xchg
pop
and
addr16
imul
fnstcw
adc
lret
adc
in
inc
push
sahf
andl
sbb
shl
mov
cli
aam
fidivs
outsl
setg
pop
mov
xchg
in
les
daa
in
adc
push
cmp
shl
clc
adc
xlat
lret
jbe
scas
test
mov
test
jmp
out
xchg
lret
jns
fcoms
pop
xor
xchg
cmp
and
and
xchg
pop
push
popf
subb
aas
push
lret
push
sbb
mov
les
xlat
aas
repnz
bound
std
jae
stos
or
jmp
imul
stos
call
and
add
ret
lcall
push
lret
jl
outsl
cmc
lea
fnstenv
jge
mov
sub
dec
test
xchg
rorb
pop
pushl
fsubrp
cmpsb
inc
jmp
jp
or
test
daa
mov
push
les
inc
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
out
lods
out
loopne
jle
lds
jle
scas
xchg
lahf
push
frstor
gs
roll
mov
cmp
mov
lahf
xchg
lods
imul
mov
mov
dec
fcmovu
xchg
pop
jge
cmc
xor
inc
cmc
mov
jo
das
mov
lahf
push
lods
pop
daa
push
add
movsb
fwait
mov
mov
or
push
dec
xlat
cmpsl
das
dec
ss
mov
roll
pop
pop
push
push
int
icebp
mov
cmpb
addr16
ffreep
add
test
inc
sbb
xchg
ja
pop
dec
orl
mov
lods
mov
lahf
push
popa
lahf
push
xorl
mov
rolb
inc
push
out
xor
jp
dec
jmp
mov
sub
jnp
sbbl
push
and
icebp
jno
push
xor
mov
and
push
ss
mov
imul
mov
imul
dec
mov
pusha
dec
inc
mov
fisttpl
sbb
lcall
add
ljmp
cli
and
push
out
stc
xor
mov
or
push
or
es
mov
shlb
inc
push
bound
imul
lret
cmpsb
cli
dec
or
lds
dec
imul
xor
add
jmp
jg
add
jns
cmp
cli
dec
cmp
lds
jle
in
jp
push
dec
dec
repnz
xchg
bnd
in
inc
testb
push
sub
popa
xor
bound
sub
ss
mov
xchg
outsb
mov
aad
cmp
decb
xor
pusha
testb
xchg
pop
add
test
and
adc
push
push
aam
adc
mov
ds
and
dec
enter
inc
loope
addr16
adc
cltd
dec
inc
jge
sbb
mov
adc
sub
int3
pop
sub
push
jge
pop
sbb
dec
inc
xlat
lock
popa
fcoml
and
cmp
xlat
fcoms
and
jle
movsb
in
fdivs
add
in
insb
jmp
add
push
loope
xchg
jmp
xor
mov
push
loope
xor
rcll
repnz
shlb
xchg
pop
xor
fcomps
mov
lret
cmp
and
fidivrs
ja
xor
push
icebp
mov
iret
lods
jo
scas
or
out
movsl
add
inc
mov
je
lods
push
sahf
andb
mov
inc
outsb
sti
lods
and
cs
xor
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
icebp
fiadds
cmp
lds
jle
add
fdivrs
lret
mov
shrl
dec
lahf
push
jno
inc
pop
sub
sbb
mov
nop
hlt
cli
sahf
and
pop
repz
mov
addr16
out
cmp
jae
jp
adc
dec
rclb
mov
push
stos
xor
mov
aas
inc
les
imul
mov
decl
xor
imul
mov
mov
mov
cmp
ljmp
lock
faddp
ret
inc
sbbb
aas
sub
inc
jecxz
cmp
aad
jb
jge
mov
cmpsb
or
js
cwtl
icebp
mov
int
lret
cltd
nop
insb
xlat
mov
and
and
sti
addr16
push
and
adc
ss
xchg
int
and
or
pop
adc
or
mov
xchg
xor
outsb
cli
push
cmp
adc
int3
xchg
dec
push
add
jo,pt
jb
or
fs
testl
jge
aad
adc
sub
lahf
stos
push
lcall
rcll
imul
adc
and
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
insl
daa
mov
jle,pt
mov
jle
adc
mov
lcall
inc
ret
sahf
loop
mov
mov
ss
pop
cmc
js
inc
mov
scas
adc
fisubs
jae
add
in
stc
ds
cmp
jns
xchg
xor
xor
lahf
in
cs
movsb
adc
aaa
jne
test
sbb
cmp
sbb
mov
mov
sarl
aam
xor
sub
fst
es
sbb
mov
mov
sbb
xor
les
outsb
dec
mov
sub
orb
jns
sbb
lahf
jb
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
pop
div
leave
aas
jle
mov
jle
adc
scas
and
jl
inc
lea
dec
popf
loop
and
jmp
dec
iret
push
jl
rcr
sbb
mov
testb
jle
sub
pop
xor
jnp
dec
aam
mov
lahf
mov
dec
jb
push
aas
add
fildll
negb
arpl
add
int
orb
jae
sti
push
mov
pusha
adcb
xchg
fstl
ljmp
jns
inc
mov
xor
lods
xchg
xchg
sub
or
pop
pusha
lcall
insl
aaa
scas
jge
adc
xor
pop
or
push
or
cltd
push
in
inc
mov
mov
inc
jge
sbb
lea
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
setle
mov
jle
ret
arpl
push
fsubr
push
jnp
push
add
jle
scas
ljmp
ss
clc
lahf
cld
jno
jle
add
push
iret
xchg
aad
cmp
mov
lret
mov
sub
push
dec
mov
mov
nop
cmp
push
cmp
call
lret
or
subl
pop
mov
inc
jl
push
xor
into
por
sub
mov
mov
and
repz
addb
sbb
jns
ret
lret
mov
inc
imul
and
mov
cmpsb
ja
xor
jb
inc
mov
pop
aad
jle
cmc
fadds
fimuls
cmp
pop
cmp
stos
add
std
push
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
adc
pop
cmp
jle
jle
jle
loope
loop
sarb
shrb
and
dec
cld
push
adc
ljmp
pop
sub
pop
sbb
shll
imul
push
lret
push
adcl
imul
shrb
setp
rcll
iret
popa
push
cmpsb
repz
or
sbb
ds
or
int
fsubr
fwait
add
rcrb
aam
sbb
rclb
mov
adcl
push
fstpl
mov
movsw
pop
and
es
mov
jmp
dec
shrb
cmpsb
gs
adc
cmc
daa
iret
movsb
adc
cmpsl
imul
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
add
outsb
xchg
cmp
jle
adc
or
mov
ret
pop
repnz
push
fmull
leave
push
fs
or
test
push
mov
imul
dec
subb
mov
idivb
xor
cmc
sbb
pop
pop
test
shl
dec
adc
lret
mov
pusha
leave
mov
fstpl
in
lahf
rcr
das
adc
shll
stc
mov
mov
call
mov
fiadds
mov
xchg
ljmp
fistpl
out
stos
lahf
mov
xor
jp
sbb
popf
push
mov
outsb
sahf
add
sub
inc
cwtl
in
or
daa
push
jecxz,pn
loopne
mov
pop
out
mov
mov
divb
pop
subb
je
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
fstps
xor
mov
jle
ret
cwtl
mov
int3
pop
jl
mov
out
daa
adc
lods
inc
testl
xor
out
add
xchg
shl
dec
fisubs
rcl
pop
mov
xor
dec
mov
mov
mov
iret
dec
sub
adc
testb
dec
xchg
aaa
mov
adc
stc
or
add
mov
test
add
xchg
jp
jnp
sbb
cli
fwait
xor
adc
negl
inc
dec
sbb
mov
scas
inc
dec
dec
lods
jno
mov
xor
sub
or
sub
inc
push
dec
lret
and
or
mov
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
repz
xor
mov
jle
mov
ret
ret
mov
mov
adc
or
push
pop
rol
cmp
cmpsl
cmp
ficomps
inc
xchg
out
push
xor
cmp
cs
cld
lcall
mov
adc
lock
xchg
xor
mov
daa
mov
jmp
and
out
ret
or
or
mov
push
jae
sbb
pop
dec
test
call
mov
or
cmp
jp
filds
mov
cltd
push
les
ret
test
pop
iret
or
xchg
daa
jecxz
popf
test
int3
and
lcall
cld
addb
pop
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
mov
xor
mov
jle
cs
imul
ds
ror
pop
sbb
loop
cmpsb
adc
mov
cmpsb
sub
jb
xlat
inc
push
or
sub
mov
push
loop
int3
pop
push
and
insb
mov
sub
lods
mov
imul
imul
das
mov
movsl
jge
ja
mov
sub
xor
jo
xor
jp
inc
scas
push
iret
cmpsl
jmp
mov
fwait
push
and
mov
jle
pushf
aam
xchg
call
sbb
mov
and
or
cmc
scas
mov
mov
xchg
pop
inc
outsl
mov
jl
sub
negl
in
cmp
mov
dec
rclb
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
das
ljmp
jle
jle
movsl
cmp
lea
sti
leave
and
mov
mov
test
mov
mov
repnz
mov
and
gs
push
aaa
mov
push
insb
aam
xchg
in
movsl
adc
inc
test
cmp
sub
xor
add
cmp
in
mov
push
outsb
sub
jb
jg
ret
jne
sbb
repz
xor
mov
rol
sbb
sbb
int3
cwtl
pusha
sbb
repnz
clc
cmp
pop
sti
dec
jp
and
and
decl
fistpll
hlt
sbb
and
add
test
jmp
or
cmp
fcomp
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
lret
imul
mov
jle
lret
aad
shrb
mov
sbb
pmuludq
pop
fcoml
push
hlt
or
dec
xor
or
lret
mov
xor
lods
jmp
pusha
dec
adc
xchg
mov
jns
push
test
dec
mov
push
imul
sbb
cmp
add
andb
fld1
xchg
imul
or
test
sti
in
push
andb
sbb
lods
roll
push
fimuls
movsl
sbb
out
xor
mov
and
loop
test
sub
xlat
add
xchg
hlt
push
addr16
stc
pop
cli
icebp
mov
sbbb
popl
xchg
cmp
into
fcmovnbe
out
pop
mov
cmovo
gs
and
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
aad
stos
jp
ss
mov
jle
lods
pusha
imul
adc
outsb
loop
jecxz
lds
leave
inc
xor
push
les
dec
lds
adc
lcall
cmp
mov
aam
mov
ret
mov
xlat
iret
ljmp
mov
xchg
imul
mov
fistl
rclb
mov
fs
icebp
push
es
sub
jp
bound
dec
jne
push
xchg
add
pushf
xchg
sbb
fcomi
sub
and
sbb
push
test
lods
xor
sti
ja
push
inc
aad
jp
sub
stos
or
fsubs
repnz
stos
test
jb
into
sub
outsl
mov
or
cmpsl
ljmp
add
xor
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
mov
arpl
sbb
jle
mov
jle
scas
or
enter
adc
sub
inc
mov
inc
insl
aaa
mov
add
cmp
xchg
in
std
loopne
iret
sub
or
out
sub
sub
rclb
pop
lea
mov
stos
shr
les
jae
sbb
loopne
fwait
sub
dec
cwtl
leave
jbe
scas
jmp
test
nop
test
js
or
out
ret
lcall
lods
add
out
and
or
scas
jae
test
dec
or
or
std
rorl
mov
es
sub
mov
pushf
pushf
or
xlat
mov
mov
inc
imul
jmp
inc
loop
xchg
imul
call
jle
jle
jle
pop
pop
out
test
and
cmp
cltd
and
xchg
pop
cmp
mov
out
andl
cmc
filds
fisttpl
lea
out
insl
xchg
clc
cmp
xor
jmp
inc
xchg
push
add
jle
and
cwtl
lea
jmp
scas
test
pop
in
sbb
inc
notb
push
mov
aaa
jmp
sbb
sti
pop
pop
dec
leave
jmp
lods
loopw
mov
adc
inc
add
inc
in
pop
mov
add
dec
bound
mov
jmp
out
sbb
xchg
xlat
xchg
cmpsb
nop
push
rcrb
mov
pushf
push
and
enter
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
clc
pop
out
xor
jle
jle
jle
xchg
lds
adc
es
cmc
add
call
xorb
in
adcl
inc
pop
rcrl
adc
xor
xchg
mull
or
cmp
jbe
mov
or
int
aam
hlt
je
mov
push
clc
push
push
mov
sbb
jne
test
sub
cli
fdivrl
or
xchg
adc
xchg
out
push
dec
jge
inc
xchg
popl
mov
push
stc
inc
out
dec
push
aad
xchg
fs
insl
gs
pop
add
xchg
mov
cmp
add
loop
lret
das
adc
test
push
push
popa
loopne
xchg
mov
lret
aam
popf
cmp
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
mov
xlat
cmp
xor
jle
xorl
nop
mov
int
xchg
xor
add
out
mov
dec
ds
push
cmp
lods
bound
add
lds
cmp
and
sbb
cmpsl
jo
mov
and
mov
and
orl
mov
push
jne
orl
cmp
test
pop
inc
addr16
test
add
and
test
fwait
add
cli
ret
in
loope
in
and
sbb
push
xchg
out
lret
add
add
call
shll
into
pop
cltd
cld
jbe
cmp
mov
out
and
mov
cmpsb
or
jae
mov
lahf
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
imul
pop
mov
or
stc
mov
rclb
dec
inc
adc
fwait
lret
sbb
xchg
and
and
pushf
mov
outsb
ret
add
mov
sbb
and
js
into
gs
pusha
cs
int
inc
outsl
inc
add
popa
xchg
dec
inc
into
jns
pop
test
pop
cld
jle
pop
icebp
cmp
out
sub
pop
mov
dec
enter
in
and
push
or
cmp
call
sti
out
mov
inc
adc
jge
outsl
sub
sti
mov
pop
mov
xchg
insl
xlat
fidivs
dec
rcrb
mov
repz
mov
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
push
cli
pop
jno
jle
mov
jle
xchg
mov
lret
aad
dec
jno
xchg
cld
mov
ret
or
jbe
sbb
xor
and
pop
in
xorb
pop
ficompl
ficomps
out
mov
and
and
mov
fsubrs
and
mov
popf
inc
jmp
xor
and
inc
push
jbe
mov
mov
pop
data16
ficoms
out
or
addr16
lret
das
adc
xchg
push
and
lock
fnstcw
mov
jmp
add
das
and
pop
mov
scas
add
push
dec
cwtl
negb
adc
ret
jp
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
std
scas
dec
dec
lret
jle
mov
jle
aaa
push
les
inc
lods
push
enter
mov
aam
jg
add
push
movsb
sqrtps
push
mov
pop
dec
dec
sbb
loop
fmulp
and
mov
in
test
push
outsb
xor
pushf
outsb
cmpsl
lods
dec
dec
push
dec
ret
jae
icebp
cs
inc
test
push
iret
adcb
jo
movsb
jo
mov
pop
push
cmpsl
or
sbb
ret
aam
xor
mov
mov
adc
push
add
pop
pop
push
scas
es
bound
movsb
shll
shl
mov
mov
or
enter
mov
aas
dec
pop
pop
mov
mov
das
inc
scas
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
dec
pop
test
jle
jle
cmc
cmp
fistl
fidivrs
test
xchg
jmp
dec
je
xor
jl
xchg
icebp
adc
and
ret
xchg
adc
adc
lret
cmova
jnp
notl
das
jp
ljmp
pop
add
cwtl
xchg
push
xor
pop
jp
xor
nop
adc
data16
jle
sbb
aas
cmc
into
stos
mov
dec
jmp
shrb
popa
dec
movsb
inc
in
push
xor
daa
sti
nop
xor
mov
xchg
xor
fwait
das
mov
frstor
jp
dec
cltd
mov
inc
lcall
add
in
mov
push
neg
icebp
int
inc
push
fbld
sub
sub
movsl
sub
fs
sub
jecxz
sbb
lcall
add
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
sbb
push
addr16
test
pusha
clc
test
xor
push
jg
jnp
inc
mov
orb
push
out
ud2
out
cltd
sbb
dec
jp
jnp
scas
inc
push
jae
stc
es
int3
ret
fistpl
mov
test
sbb
adc
xchg
sti
mov
cltd
xchg
daa
pusha
push
inc
test
popf
push
adc
fbld
fs
nop
or
push
stos
cmc
clc
shlb
sbb
xor
ret
subb
cmpsb
mov
adc
fdivr
add
pop
pusha
aas
xchg
imul
inc
push
in
mov
arpl
add
xchg
jp
sub
mov
adc
rcrb
insb
in
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
