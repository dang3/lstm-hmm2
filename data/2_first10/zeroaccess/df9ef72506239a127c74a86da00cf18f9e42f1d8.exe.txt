push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
sbb
sahf
push
jl
jl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
loop
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
sub
repz
cli
std
aad
cmp
cmp
stc
loope
xlat
jecxz
xor
std
ret
jmp
aaa
repz
shl
shl
int3
iret
hlt
enter
and
clc
jecxz
jmp
fnstsw
fmulp
roll
in
iret
lock
out
in
fidivl
fsub
call
decl
divl
fnstenv
stc
xlat
cmp
xor
cli
cmp
rcl
cmp
ror
lret
mov
mov
fsub
or
call
cmp
rcl
aad
adc
test
cmc
cld
out
les
out
out
sub
fmul
repz
loope
loopne
out
fmull
fsubp
mov
mov
enter
xor
out
jmp
shl
int3
rcl
aad
stc
fstp
xchg
ljmp
xchg
mul
fprem1
iret
leave
aam
dec
fptan
aas
cmp
loopne
faddp
loop
in
call
out
cld
cmc
cmc
rol
ret
neg
sar
repz
and
les
xchg
sub
sub
shl
lret
fadd
fldl
out
mov
cmp
mov
fsubp
leave
mov
fsubrp
test
imul
xor
icebp
out
in
aad
xor
fadds
ljmp
jecxz
jmp
fdivrs
cmp
cld
hlt
fcmove
shl
cmp
test
mov
shl
rcr
fdivrp
repnz
ljmp
or
test
repz
fildl
orl
cmc
ss
aaa
imul
aas
aad
into
cmp
sti
rcr
fmull
rcr
mov
out
ret
das
iret
aaa
xor
cmp
icebp
lock
orl
mov
lock
sti
repz
cmp
iret
out
call
iret
loope
xchg
mov
ret
mov
fidivl
clc
aam
cmp
fldl
nop
sbb
shl
xor
enter
aas
idiv
neg
inc
sub
out
mov
jecxz
xchg
mov
in
call
rol
aam
clc
fadd
ljmp
loope
xchg
xor
xor
cli
cmp
repz
fucom
aad
xlat
lea
ljmp
ret
lret
out
cmc
jmp
loop
xlat
cli
repz
sbb
loope
shlb
jecxz
lret
in
sarb
idiv
shr
neg
sti
cmc
testb
ror
loope
xor
ljmp
jmp
cmc
aas
test
rol
aam
ds
shl
ror
aad
aam
lret
lret
int
leave
lock
hlt
sti
faddp
rol
out
call
ljmp
xlat
xor
das
aam
fcomip
icebp
shr
incb
fcmovu
test
leave
cs
fst
lret
stc
lret
fcomip
cli
ret
or
int
out
xchg
out
xor
clc
cmc
xor
cmc
cmp
ss
xlat
lds
cld
jmp
fstp
mov
cli
jecxz
loope
das
lret
hlt
leave
ljmp
aam
flds
std
out
stc
fcomp
jecxz
mov
ljmp
shl
cmp
enter
call
orl
call
loopne
aaa
repz
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
pop
push
mov
addb
jl
add
cmp
cmp
cmp
lret
iret
loope
faddp
xlat
mov
fdivrp
decl
rol
not
int3
out
leave
loope
cli
lret
shr
test
mov
stc
mov
out
filds
icebp
xor
call
cmc
fcmovu
shr
test
bnd
mov
in
jecxz
jmp
out
cld
cmp
aaa
test
fld
ret
jmp
int3
addb
xor
jmp
ret
cs
stc
fdivr
xor
fdivp
hlt
test
fadd
xor
jmp
lret
out
cmp
cmp
div
xlat
ret
call
test
cmc
neg
jmp
ljmp
cld
shl
lock
cmp
ret
std
aam
dec
lea
sub
aam
in
shr
repz
repnz
icebp
loope
loope
idiv
frstpm(287
jecxz
out
out
dec
shrl
shl
out
lock
enter
in
xlat
addb
std
int
out
faddl
ror
clc
cmp
sti
out
cmp
aad
sti
cmp
addl
jmp
loopne
ss
in
xor
cmp
aam
xor
testb
jecxz
int3
jecxz
lret
xchg
nop
aad
jecxz
aaa
loop
fsubr
call
cmc
fcmovbe
shr
ret
test
sbb
into
rorl
int
fdiv
cmp
cmp
adc
out
std
sti
fcmovnu
test
and
xor
cld
cmp
repnz
sti
ret
out
icebp
clc
in
rcll
stc
repz
jmp
fdivr
icebp
cmc
int
cmc
jecxz
aad
ljmp
jmp
lret
div
not
out
jmp
idiv
jmp
iret
fcmovbe
repz
aam
cmp
out
mov
jmp
xor
lret
into
icebp
xor
in
cli
rcr
aam
lds
lock
hlt
jmp
out
xor
cli
repz
cs
xor
int
stc
cli
xchg
out
neg
cmp
orb
in
xlat
cli
xor
clc
sarl
std
into
fldz
cmp
in
test
rcr
loopne
iret
mov
cs
shl
sti
lock
iret
jmp
fcmovnu
cmp
incb
cli
fdivr
out
int3
cli
test
enter
jmp
clc
rcl
sti
int
repz
xchg
mov
int3
in
shlb
sub
in
fxch
int
enter
cmp
idiv
cli
loope
xchg
inc
leave
stc
xchg
enter
repz
int3
ss
jmp
lret
adc
stc
vcvttpd2dq
shl
fcom
sti
test
ljmp
lds
jmp
icebp
cmp
out
loopne
enter
lret
test
int3
in
lret
in
in
rcr
lret
test
loopne
lock
rolb
sti
lret
xchg
test
nop
in
in
iret
leave
in
xor
into
fcomip
out
testb
cmc
aam
mov
int
loop
mov
xor
das
das
sar
iret
std
xor
sarl
aas
sar
sti
jmp
lret
xchg
int
into
out
aam
ss
cmp
aas
lock
fcmovnu
enter
jmp
int3
clc
leave
xchg
fsubr
hlt
ret
xor
int3
aam
fcmovnbe
repnz
xchg
lret
enter
mov
in
xchg
in
call
aaa
stc
stc
hlt
ror
ljmp
call
in
stc
cli
lret
nop
call
icebp
ss
xbegin
fst
cmp
rcl
mov
ffreep
hlt
pop
fistl
shrb
stc
leave
icebp
cmp
clc
rcl
les
imul
jmp
lea
rcl
shl
in
cs
cmc
cld
jecxz
int
repz
std
loop
add
fisttps
stc
cmp
cmp
sarl
shl
icebp
ds
add
fiaddl
int
fsubrp
int3
jmp
out
into
hlt
rol
lret
hlt
out
testb
inc
cmp
jmp
stc
icebp
xchg
roll
out
lret
xor
lock
hlt
ret
mov
idiv
out
sub
xor
enter
aaa
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
pop
shl
or
jl
addb
jl
int
out
ret
fdivp
call
addb
sar
fyl2x
fucomip
in
std
in
cmp
icebp
loop
xchg
aad
std
xlat
xchg
jmp
loopne
cs
lds
cld
cmp
cmp
std
not
loopne
aad
aas
std
mov
jmp
fiadds
mov
int
in
shl
lret
repnz
repz
in
test
fcmovnu
std
test
mov
int
dec
in
rol
faddp
cmp
int
rcl
int3
ret
in
in
out
cmp
shl
testb
mov
aas
loopne
shl
in
rcl
icebp
ss
lock
ljmp
ljmp
out
not
test
cmp
out
cmp
cld
mov
imul
loop
ficoms
vcvtsi2ss
int3
jmp
cmp
rcl
test
in
aam
sbb
fmull
xor
int
cmp
icebp
cmp
icebp
ret
ror
fmull
cld
shr
ljmp
lock
out
cli
cmp
shl
shl
sti
cld
xlat
jecxz
sub
mov
lret
ljmp
loopne
cmp
aas
out
ret
test
test
xchg
in
in
iret
into
cmp
jmp
repz
ss
mov
clc
int3
aam
neg
into
clc
ret
mov
addb
out
test
lret
shr
cmp
icebp
flds
ljmp
loop
repz
sti
out
fcmovbe
fildl
aas
loopne
loop
mov
xchg
stc
int3
cli
out
cmp
loop
iret
hlt
out
xor
mul
xor
stc
ret
int
fiaddl
adc
xor
int3
xor
repnz
aam
stc
cmp
sar
stc
fcmovb
in
enter
sbb
jmp
ljmp
repz
out
lds
enter
test
out
rcl
int3
ret
lock
fcmove
cmp
iret
lock
imul
cld
rol
neg
clc
shl
or
fisttps
xor
cmp
aam
repnz
loope
out
jmp
jecxz
jmp
xchg
in
loopne
iret
xor
idivl
cmp
fsubr
fcmovne
int3
ds
cmp
aas
sar
testb
xchg
rolb
ret
out
out
repz
imul
jecxz
out
sti
repnz
jmp
cli
or
xor
fucomi
in
ss
shr
aad
sti
rol
shl
aam
decb
xchg
icebp
leave
fcom
lret
rcr
clc
jmp
in
jecxz
ror
loop
fldln2
iret
stc
clc
ljmp
xor
in
hlt
out
ss
cli
fadd
mov
jmp
cmc
xor
xor
lret
stc
fmulp
out
cli
clc
jecxz
mov
addb
test
xor
loopne
into
ret
ret
fsqrt
std
hlt
jecxz
xchg
in
icebp
ss
sarb
sti
repnz
fldl
in
xchg
shl
aam
in
jecxz
xor
aad
icebp
into
fdivr
mul
clc
jmp
mov
out
loope
fst
cmc
in
loopne
xor
fdivr
fidivrl
movl
test
out
out
imul
ss
repnz
mov
mov
cli
lret
iret
mov
in
xor
ljmp
repz
fcmovb
aad
addl
ret
jecxz
fcomp
hlt
cmp
xlat
jecxz
cmp
clc
in
test
fchs
std
add
out
fcoml
ljmp
aad
cli
add
into
xchg
shl
cmc
in
xchg
nop
loop
lret
hlt
fdivp
xlat
jecxz
ror
cs
loopne
out
fdiv
mov
loope
orl
enter
cmp
cmp
cmp
ljmp
rol
neg
lea
mov
mov
fidivs
aad
fcomp
in
out
sti
repz
lret
rolb
int
fldl
hlt
xor
repz
fadd
lret
ds
ror
cli
ret
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
or
add
call
fcmovne
fucom
rorl
xor
ret
aam
int3
cmp
cmp
aad
stc
mov
lret
test
lock
fsubrp
in
clc
repnz
fidivrl
icebp
rcl
aas
xlat
test
test
mov
aas
mov
test
mov
sub
loopne
aam
out
fdivr
jecxz
clc
push
sarb
add
loop
cli
enter
out
aas
rol
aam
fnstenv
xor
in
out
neg
mov
std
enter
hlt
rcl
repnz
jmp
in
inc
int
xor
into
out
xor
les
in
in
rcl
shlb
ljmp
cmp
aad
hlt
stc
mov
fucom
loop
repnz
aam
cs
shl
cmp
xor
cld
test
test
ret
sti
fldl
xor
loopne
ror
das
cli
cli
enter
stc
or
faddp
loopne
xchg
cmc
ret
rcl
aaa
into
cld
fcom
call
ds
fsub
loope
ljmp
loopne
xor
roll
out
jmp
in
ffree
int
enter
xchg
int
loope
enter
int3
aad
ds
aad
cld
fdivr
adc
call
lds
loope
in
in
leave
sti
cmp
faddl
stc
enter
loopne
cmc
loope
cs
iret
leave
leave
repz
lret
icebp
test
rolb
loopne
decl
lock
int3
jmp
rcr
loope
fptan
fdivrl
in
shl
cmc
xlat
test
fsubr
out
orb
lret
neg
fndisi(8087
jmp
mul
sar
icebp
add
aas
test
ljmp
out
int3
int3
div
icebp
clc
fdiv
repz
sarb
jmp
mov
ljmp
jmp
out
shll
icebp
sar
clc
mov
and
orb
hlt
xchg
aaa
jecxz
lret
jmp
test
lret
out
fmul
out
sti
into
std
loop
out
cmp
cmp
out
out
cmp
stc
jecxz
std
rcl
fstp
neg
idiv
addl
xchg
shl
aaa
lret
repz
out
aaa
fcmove
xor
incl
test
fsubrp
stc
fchs
xchg
enter
cmp
out
cld
cmp
xlat
fdivr
neg
aad
orb
icebp
fmul
ror
das
repnz
aad
xor
sarb
stc
fiaddl
lret
hlt
loop
fcmove
out
mov
leave
int3
sarl
into
ret
hlt
cmp
cmp
rcr
or
cld
addl
rcl
xor
fsubr
ljmp
or
std
mov
in
in
lret
das
loopne
xor
hlt
aam
cmp
cmpb
loope
in
repnz
aad
mul
sub
loopne
xor
xor
addb
aam
loop
fmulp
xchg
in
clc
mov
mov
in
cmp
sar
fadds
xchg
fiadds
fstp
xchg
loopne
loope
cmp
fnstsw
loope
cmp
ret
shl
out
jmp
fstp
int
popl
repnz
fnclex
into
neg
xor
ror
xchg
ffree
xchg
loopne
jmp
int3
rolb
fdivs
jmp
enter
fstpt
test
out
out
out
ffreep
mov
into
mov
loope
clc
repz
int
xor
cmp
test
hlt
hlt
mov
fmuls
nop
jecxz
fdiv
fxam
enter
shl
divl
jecxz
aas
call
fdivrp
ljmp
shl
xor
out
rcr
xor
fistpll
aas
aaa
int3
into
fdivr
rorb
out
aad
mov
jecxz
int3
test
dec
hlt
sar
lock
fldl
xlat
loop
lret
cmc
ljmp
xor
into
enter
cmp
loop
jmp
filds
sti
loopne
xor
aad
out
cli
fucomi
stc
fcomp
xor
mov
fildl
sbb
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
mov
adc
jl
addb
jl
and
int
loopne
leave
call
in
out
repnz
sti
clc
hlt
in
in
jmp
mov
jecxz
in
jmp
in
jmp
int
cmp
cmc
clc
test
in
incb
ficoms
clc
in
jmp
cmp
ds
test
mov
test
sti
test
lret
xor
xlat
hlt
repnz
fnstsw
jmp
in
shl
ds
cld
fcomp
and
out
in
in
into
enter
idivb
lock
iret
clc
leave
out
adc
cli
sar
rol
jmp
jecxz
cli
int3
roll
sub
jmp
cmp
fcomi
loop
loop
test
in
lret
enter
xchg
out
cmp
fucom
rcr
cld
add
xchg
cmp
cmc
xlat
out
movl
xor
leave
hlt
ljmp
loopne,pt
aam
bnd
les
test
cmp
sub
shr
repnz
sbb
cld
loop
cld
fld1
in
sbb
loope
fcmovnu
shl
xor
out
enter
aas
repnz
cmp
rcl
xlat
aad
sti
testl
lock
jecxz
jmp
stc
iret
cmp
loopne
sti
aam
jecxz
loopne
fcomp
leave
in
fcmovnu
out
int
aam
sub
xor
cmp
jmp
call
lock
or
dec
clc
mov
in
push
out
in
xor
jmp
aam
ret
xlat
std
fsub
stc
repnz
aas
and
or
mov
icebp
test
in
cmp
cmp
xlat
std
sarb
cld
addb
icebp
nop
sub
out
fstp
aam
jecxz
cmp
aas
shr
test
jecxz
orl
out
lock
sti
rcr
cmp
loope
lock
iret
ds
cmc
std
shr
leave
loope
lret
sti
out
mov
enter
shl
leave
sarl
cmc
in
aas
int
cmp
ret
neg
out
cld
lret
test
loopne
jecxz
out
lret
cmp
enter
neg
sti
imul
hlt
cli
cmc
std
xchg
xchg
lret
xlat
leave
sub
sti
ljmp
fsub
rcr
ffreep
jmp
faddp
ljmp
xor
cmp
loope
in
out
repz
fcmovu
in
adc
int3
call
xchg
repnz
test
cmp
fcmovb
out
aad
hlt
fisttpl
fcomip
sub
cmp
stc
cli
lret
int
aas
into
aam
mov
or
xchg
fucom
jecxz
ret
xor
into
clc
stc
shl
rcr
stc
shl
fsubrp
out
ret
test
out
loopne
rorb
lret
in
lret
fcomp
neg
cli
test
in
out
filds
in
cmp
cmp
jecxz
leave
in
testb
out
out
ffreep
aad
leave
cmp
fcomp
cmp
sti
sar
jmp
in
enter
cli
jmp
in
in
cmp
lret
imul
cmp
mov
decb
fmull
jmp
in
jmp
shl
inc
std
cmp
fldpi
in
std
fucomip
or
out
xor
aad
fidivrl
loope
jmp
rorl
cld
cld
in
in
repz
in
ret
lock
out
cld
lock
lock
cli
xchg
test
loopne
std
std
in
repz
rcl
jmp
cld
stc
sti
aad
rcl
fst
fdecstp
mov
xchg
xchg
xchg
ror
stc
jecxz
cmp
cmp
into
loope
loope
cmp
loop
enter
lret
rolb
aam
lret
xor
rol
ds
sti
call
enter
rcl
mov
cs
jmp
cmp
cmp
shl
in
jecxz
aam
fcomp
int
in
fmull
vcvtdq2pd
aaa
rolb
iret
hlt
aam
addl
aad
enter
clc
xor
leave
jmp
test
loopne
xchg
loop
cli
std
out
out
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
xor
addb
jl
xchg
enter
clc
out
hlt
clc
imul
clc
fcomi
shr
adc
out
leave
orl
xor
rcr
fnstenv
idivl
cmp
incb
out
aam
fcmovnu
int3
fcmovu
cld
inc
lret
xor
fsub
cmp
fcmovnu
lret
addb
test
in
fmuls
shl
sub
xor
aaa
iret
fdivp
sti
aad
lds
xlat
ret
fists
icebp
shll
iret
out
iret
into
aad
xor
cmp
fadds
xchg
sti
les
shl
in
sub
jecxz
out
int
out
shl
cmc
test
xlat
test
xchg
fsub
int3
out
lret
shl
shrl
int3
shl
call
fnclex
jmp
std
xchg
addl
lret
hlt
repz
ds
fxch
stc
lock
test
decb
mov
xchg
enter
xor
loope
idiv
int
cmp
cmp
fsub
cmc
xchg
out
std
cli
out
xchg
mov
xor
xor
int
repz
int
cli
out
cld
faddp
fsubp
cmp
sbb
cld
in
xchg
mov
aad
lret
loope
call
enter
cli
int
fcomip
shl
lds
out
mov
in
out
call
sub
out
fucomp
cmc
fldl
sbb
hlt
xlat
div
leave
fmulp
into
pop
sub
fdivs
out
repnz
cmp
hlt
ret
cld
testb
sbb
lret
sarl
xor
lret
cmp
fdiv
iret
in
jecxz
aas
aam
fldl
test
int
addb
ffree
cmp
iret
lret
sbb
call
fmull
cmc
out
das
xor
fcomp
lret
leave
or
repz
xlat
jecxz
fcmove
enter
repnz
divl
ror
xor
xor
icebp
cmp
faddp
fcmovu
aam
xlat
fxam
ljmp
int3
leave
out
ret
test
xor
iret
iret
into
movb
loope
in
rclb
aam
int
std
call
ret
std
aas
aas
aad
clc
clc
xlat
cli
faddl
xchg
in
repz
lock
ds
lock
in
shl
test
fisttpl
fisttps
out
int3
aaa
into
leave
aas
cmp
shl
cmp
fcmovu
mov
loopne
lret
aam
ljmp
out
fdivr
rcr
cmp
cmc
ds
cmc
loope
iret
faddl
repnz
repz
sub
cld
leave
shr
hlt
cmp
iret
clc
loop
ret
test
loope
lret
rolb
out
out
shlb
cmp
repnz
xchg
in
jmp
mov
rol
int3
sub
repz
xor
call
loope
mov
cmp
in
aaa
icebp
xor
aad
sar
hlt
repnz
fadds
jmp
loop
std
fcmovbe
loope
jecxz
sbb
rcl
loope
leave
mov
test
xchg
out
bnd
out
cmp
ljmp
stc
flds
cld
out
int
mov
enter
out
icebp
cmc
jmp
ss
aad
stc
cmp
repz
ljmp
call
xor
stc
not
lock
jmp
in
fidivrs
cmp
test
std
clc
in
test
out
xchg
test
int3
imul
lret
into
fdivr
call
stc
cmp
sbb
stc
fsubr
lret
fcmovu
call
leave
lret
jecxz
iret
aad
aad
loope
shl
in
shl
ret
xchg
in
in
sbb
xchg
loope
aaa
hlt
divb
out
in
xlat
cmp
out
cmp
out
add
repnz
xchg
leave
loopne
lret
clc
sti
cmc
aas
xor
ljmp
ds
fsub
loop
lret
out
std
cld
repnz
fidivs
ss
ror
mul
leave
fmul
cmp
cmp
rcr
jmp
std
fcmove
std
mov
decl
lret
cmp
ss
leave
ss
mul
test
aas
loopne
fmulp
inc
mov
xchg
subl
out
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
cs
ja
sbb
add
aam
cld
in
into
fyl2xp1
ret
vpmaxub
loope
incb
out
call
ss
std
jecxz
jecxz
iret
clc
fdivp
fcmovu
faddl
in
xchg
lret
repz
rcl
leave
clc
sti
ror
aaa
fnstsw
xlat
test
shl
imul
lret
lret
loope
ret
icebp
cmc
out
stc
leave
sti
hlt
icebp
sarb
xlat
int
cmp
idiv
out
into
sti
xlat
add
in
test
les
clc
enter
repz
loopne
sar
loopne
fisttpl
out
mov
xor
lock
cmp
rolb
icebp
cmp
cmp
sti
add
out
repnz
into
fincstp
in
aas
iret
xor
int
clc
std
in
mov
stc
out
call
call
iret
ljmp
int3
out
test
test
mov
iret
rolb
rcl
cs
in
enter
iret
jecxz
stc
ds
xlat
rcl
rol
iret
out
out
nop
aad
xor
loop
sarl
xlat
sar
cmp
sar
cmp
not
out
in
lock
leave
lret
xlat
aad
leave
out
ljmp
iret
sti
fsin
hlt
test
leave
xchg
out
test
faddl
leave
ljmp
std
xor
adc
jmp
fimull
aas
jmp
in
iret
cmc
jmp
cld
loope,pt
ret
stc
out
fcmovb
fcomip
out
ljmp
rcl
in
rcl
jmp
fdiv
cli
jmp
loopne
repz
out
lret
test
in
loop
fxch
cld
cmp
cld
sbb
test
jecxz
in
out
iret
rcll
enter
stc
stc
test
aad
cmp
adc
test
out
loop
in
in
int
lock
shr
loopne
hlt
cli
lret
divb
sti
shl
in
xchg
xor
mov
mov
enter
call
in
out
stc
repnz
fstpt
loop
ret
cld
mov
jecxz
lret
fxch
fsubrp
xchg
test
int3
out
cmp
shll
hlt
cmp
test
fiaddl
loope,pt
mov
cli
mov
into
call
int
cmc
fcmove
lret
out
lock
fsubrp
std
jmp
in
sar
clc
icebp
in
cld
loopne
ds
int3
in
cli
out
les
int
addb
mov
std
sarb
not
fstpt
hlt
loop
shl
cmc
repnz
fsub
test
xorb
ret
in
in
jmp
jmp
ds
fsubr
fiadds
leave
sbb
rorl
ret
repnz
leave
cmp
lock
add
hlt
jmp
ftst
test
loop
cmc
xchg
jmp
enter
std
lret
cmp
enter
adc
fadd
fcmovb
les
out
sti
jmp
fsub
aaa
lret
in
fdivs
jmp
cli
loop
ret
inc
jmp
in
addl
sub
xor
clc
ss
aaa
sub
stc
repz
leave
fcomi
lret
fcmove
fmull
cmp
aaa
out
aad
lock
test
loopne
ret
in
out
sbb
loopne
aam
divb
div
sti
testl
xchg
call
in
xchg
shrl
stc
shr
ss
cmc
shl
sub
xchg
mov
cld
int
fadds
mov
xor
out
icebp
aaa
leave
fsubr
faddp
cmp
std
faddp
fucomp
in
test
aad
xabort
xlat
ss
out
lret
aaa
cmp
clc
hlt
test
std
loope
push
loope
shl
nop
int
test
aad
aam
shr
fcmovnbe
aas
in
ret
cmp
out
lret
out
fisttps
sub
in
xor
repnz
cmp
fcmovnu
xchg
hlt
mov
in
fmul
out
test
sbb
leave
in
ror
out
out
ljmp
jmp
neg
fmull
lret
xlat
xor
cmp
xlat
lret
test
inc
movb
ljmp
into
aaa
xor
shr
out
xlat
cli
icebp
mov
jmp
sarb
enter
fidivl
mov
push
or
add
add
fcmovnu
aam
out
xlat
lret
mov
out
icebp
out
icebp
mov
ljmp
cli
inc
ljmp
xacquire
stc
int3
loop
iret
fcoml
ljmp
cld
repz
iret
aad
sti
mov
fimuls
cmp
shl
loopne
xor
out
cmp
std
fcmovbe
aam
addb
enter
addb
divl
aad
aad
leave
into
aaa
rcr
repz
stc
icebp
fsub
fadd
enter
sub
lea
out
cmp
aaa
jmp
aad
test
into
cli
clc
jmp
aad
sti
int3
in
xchg
mov
ror
rcl
in
cmp
xlat
loopne
icebp
cmp
lock
int3
iret
loop
faddl
cs
sarb
sti
jmp
ror
loop
aad
ret
addb
iret
in
lret
lea
icebp
xor
ds
test
cli
aad
xchg
jmp
shl
loopne
sub
xor
out
cmp
cmp
into
neg
hlt
cmc
xchg
testl
xchg
in
cs
ffree
sti
adc
idiv
les
in
mov
in
cmp
out
into
shr
sti
ss
lret
cmp
iret
out
fiadds
fstp
clc
int3
clc
fucomp
int
shl
rol
loop
repnz
cmp
adc
in
fcmovnb
cld
incl
sub
fnstenv
fidivrl
stc
xlat
int3
cmp
ss
int3
fldz
add
loop
ret
ret
sti
ljmp
xor
rol
xbegin
xor
in
in
xchg
leave
test
vpcomub
xchg
mov
cmc
call
out
cmp
icebp
std
cmc
inc
out
sar
test
les
ret
lret
das
shrb
jmp
neg
std
cmc
std
out
xor
loope
or
out
not
hlt
cs
les
cs
int
shl
sti
repz
repnz
std
in
rcll
shl
in
ljmp
jecxz
xor
fcom
filds
hlt
neg
mov
cli
test
in
shr
lret
xlat
call
and
rorb
in
loopne
orl
xor
aam
clc
call
in
into
rcl
lock
in
leave
jecxz
call
shl
loope,pt
out
iret
aaa
xlat
stc
sarl
aad
test
out
loope
and
loop
mov
ljmp
out
cmp
shl
xor
in
mov
in
ljmp
lds
xor
out
fmul
fsincos
aad
clc
out
idiv
out
loope
fildl
lret
shl
hlt
in
std
aaa
lret
aam
aaa
aam
repz
fucomi
iret
call
repz
int3
clc
fidivrl
shl
ror
in
stc
cmc
xchg
out
mov
int
ffree
jmp
in
xchg
in
fmul
lret
call
in
in
les
cli
iret
mov
enter
cmp
out
into
fsubp
out
vcvttpd2dqx
xlat
add
in
cli
in
out
jmp
lock
ss
in
sarb
sarb
rcr
or
in
out
test
mov
repnz
loop
in
out
ds
repnz
fadd
cmp
test
fsubr
int
mov
mov
repz
ror
ss
stc
int
repz
loopne
addb
clc
leave
ret
xchg
mov
in
sub
ret
aaa
aad
roll
loopne
xlat
lds
bnd
iret
repz
lret
fistpll
cmp
fcmovne
stc
cmp
sti
cli
fucomip
xlat
mov
repz
repz
jmp
jmp
push
not
ret
mov
in
addl
loop
into
aad
into
into
ss
cmc
aad
ret
jecxz
mov
fxch
lret
lock
and
loopne
ss
int
xor
aad
lret
jecxz
ffree
addb
aaa
fmulp
sub
cmp
enter
ror
cli
in
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
das
ror
jb
and
add
repz
testb
in
jecxz
xor
out
idivl
loop
cmp
test
lret
cli
jmp
jmp
out
ret
shlb
call
loope
int
aas
test
loop
rcl
jmp
orb
xor
rcl
in
leave
ror
hlt
sarl
into
jecxz
fildl
popl
mov
shr
call
out
jmp
icebp
ffree
rol
aad
mul
xchg
cli
cld
test
fsubp
das
xor
out
xor
xor
in
fcmove
out
shl
filds
shr
fcomi
out
cmp
aaa
std
iret
clc
rol
std
hlt
test
test
out
lret
cmp
enter
ss
jmp
out
cmp
fsub
xor
xchg
out
out
out
cmp
shr
call
sti
lds
cld
shr
loope
mov
call
in
icebp
aas
jmp
ror
repz
cmp
sar
bnd
fsubr
jecxz
shr
std
xchg
into
out
lret
in
clc
out
in
aam
repz
cli
lock
mov
lock
div
xor
in
aad
into
idivb
cli
xlat
into
xchg
repnz
xlat
loopne
stc
int3
adcl
imul
repz
aaa
repnz
icebp
out
ds
repnz
hlt
cld
cld
sti
imul
int
mov
out
call
fdivr
cld
cmc
into
fdivr
add
mul
stc
lret
add
ret
sub
lret
lock
fdivr
ret
fnstsw
out
mov
or
call
into
ret
cmp
in
call
lret
out
in
std
aas
enter
mov
adcl
out
xor
fmulp
int3
icebp
faddp
repnz
roll
fxch
out
test
icebp
repz
in
aad
std
sar
clc
mov
int
int
out
loope
out
ret
shl
in
aad
enter
repnz
roll
into
in
jmp
jecxz
out
out
das
cli
xlat
xor
fld
fisttpl
nop
in
in
in
fld
hlt
cmc
cmp
jmp
ljmp
out
xlat
xchg
lea
in
cmp
les
sti
xlat
std
jmp
not
int3
clc
stc
out
aam
mov
cli
mov
rol
ret
std
into
xlat
loope
shl
std
aam
testl
mov
cld
div
in
out
cmp
cmp
loope
loope
ret
loop
enter
in
fsubr
vpsllw
ret
cs
stc
cli
fstpt
iret
cmc
div
mul
jmp
aam
iret
filds
ljmp
imul
idivl
movl
fildl
in
lret
int3
loop
jmp
jmp
clc
cld
stc
test
ljmp
std
orb
ljmp
aaa
loope
int3
in
inc
cli
mov
cld
lret
repz
xor
cmp
shl
out
fucomip
repz
cmp
fucom
dec
jmp
in
ljmp
cmp
icebp
repz
int3
out
sbb
test
out
sbb
std
ljmp
sti
std
out
ss
not
clc
flds
in
in
leave
jecxz
sti
mov
xchg
ds
hlt
hlt
xor
shl
cmp
into
xlat
cld
sti
xlat
loop
fsub
test
icebp
ret
fldl
aam
frndint
lret
loop
jmp
jmp
sti
in
mov
call
aad
cmp
loopne
loop
rorl
lret
in
sbb
xchg
out
xchg
int3
xor
sub
fyl2xp1
int3
cmc
repnz
ljmp
xlat
in
mov
lret
movb
aad
leave
shr
stc
cmp
lret
fadds
stc
jecxz
mov
out
out
mov
lock
fucomp
xor
cmp
cmp
call
in
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
rorl
jl
add
ds
fisttpll
shl
sarl
fcom
repz
loope
cld
out
loopne
repz
std
out
loope
out
fiadds
iret
iret
xlat
stc
fldpi
hlt
fcomi
cmp
addb
aas
cld
ljmp
rcl
icebp
loope
in
xor
xor
in
ds
out
out
ret
test
nop
lret
repnz
out
jecxz
out
int
fmul
ss
cmp
mov
test
sti
or
iret
lret
int
repnz
xor
leave
cli
rol
ffreep
ret
fdivrp
loope
int
in
int3
into
test
int
repnz
cmp
xor
fbstp
shr
shl
fildl
mov
rcr
mov
in
int3
loop
ret
repz
fmulp
repnz
jmp
enter
ljmp
xor
int3
icebp
repnz
addb
out
cmc
jmp
rolb
leave
xlat
loop
in
lret
cmp
cmp
jmp
rcr
ret
and
ret
out
mov
int
int
xchg
aam
out
fdiv
std
hlt
fdivp
fcomi
clc
out
ljmp
mov
icebp
aam
shr
fdivr
idivl
out
in
rol
xchg
enter
xchg
clc
out
nop
nop
xor
idivl
fadd
call
repz
clc
cmp
jmp
in
loopne
call
sub
shrb
rcl
cmp
loop
cmp
repz
enter
test
std
ljmp
xor
into
bnd
shl
in
fiadds
hlt
inc
mov
aad
into
in
jmp
cli
call
xor
xchg
imul
neg
cld
lret
xchg
out
rcl
out
shl
aaa
cs
repnz
shl
out
sti
mov
mov
mov
jecxz
vcomiss
fcomi
fdivrs
stc
fcomip
out
lret
in
fadd
cld
mul
cmc
jecxz
fsubr
xchg
repz
xor
xor
ljmp
loop
xchg
cli
in
mov
int
aaa
enter
out
pushl
stc
xor
repz
in
mov
aad
ljmp
mov
out
jmp
shr
iret
stc
ss
loopne
lds
not
out
fimuls
lock
rcl
aam
enter
cli
aad
sbb
out
out
xchg
jmp
into
xchg
fmulp
shl
clc
clc
int
cmp
ljmp
not
leave
repz
in
iret
leave
xchg
rolb
xor
fldt
fdiv
in
hlt
fildl
mov
shl
mov
int3
mov
jmp
int
in
cs
lret
repnz
lret
loopne
fld
or
iret
jmp
not
in
shl
neg
icebp
shlb
fcmovnbe
stc
cld
or
lds
repz
fadds
in
cmp
shr
sarb
ljmp
ret
xchg
std
clc
adc
or
in
loopne
xor
xor
fstp
fucom
aaa
cmp
loop
aam
fsubrp
test
mov
shl
xchg
das
stc
lock
test
cmc
iret
cmp
ds
jmp
xchg
or
int3
jecxz
lret
jmp
jecxz
jmp
rcr
fistpll
out
fsub
icebp
out
leave
mul
adc
cmc
in
not
call
xor
cmp
jmp
cli
incb
xchg
in
lret
loope
iret
xor
fucomp
rcl
loopne
shl
lock
stc
neg
cld
leave
out
out
call
xor
das
leave
loop
repz
int
ds
roll
loopne
mov
std
in
jmp
iret
ljmp
idiv
neg
iret
cmp
repz
xlat
icebp
not
loope
sub
int
out
jmp
out
lret
aad
in
in
fsubr
enter
fcmovb
fsub
repnz
fimuls
mov
xchg
xor
enter
lock
out
cli
shlb
fisttpl
iret
call
shl
sub
rcr
out
jmp
xlat
clc
cli
rcl
clc
jecxz
mul
shl
clc
mov
addl
add
into
les
rcr
fxch
enter
repz
test
jl
add
iret
fucom
out
lock
hlt
enter
lret
cmp
out
roll
aad
enter
xchg
sbb
mul
int3
fxch
inc
clc
in
div
icebp
in
addb
xchg
in
icebp
mov
fsubp
fucomip
loop
lret
cld
idivl
out
cmc
addl
loop
fisttpll
hlt
cmp
iret
xor
cmp
iret
cmp
int3
jecxz
fptan
test
out
testb
std
jecxz
xor
icebp
out
clc
ljmp
cmc
fcomp
rol
out
test
loop
call
sub
out
int
cld
into
fcomip
jecxz
xlat
filds
xlat
xlat
fmulp
sbb
xchg
aad
loop
idivb
loopne
sar
cmp
rol
loope
mov
lret
fucomip
rcl
divb
jmp
shlb
stc
cmp
ret
ret
shl
sar
ret
fcmovne
out
in
out
lock
int3
in
iret
cli
int
sar
ror
in
fpatan
xlat
mov
sub
loop
nop
xchg
leave
xor
out
int
repz
shr
call
ds
call
mov
in
ret
icebp
in
repnz
ljmp
loop
ret
stc
mov
in
shl
xor
out
std
into
fcmovnbe
repnz
fiaddl
aad
cli
in
in
loop
in
faddp
imul
in
jmp
cmc
roll
ret
in
in
loopne
iret
xchg
in
aaa
les
icebp
fcmovnu
lret
fcomip
xor
cmc
icebp
ds
lret
and
out
jmp
in
shl
aaa
out
fstpt
shr
out
lock
ret
clc
mov
mov
in
rcl
iret
imul
lret
in
rcr
lret
ret
aaa
cmp
xlat
aad
incb
call
lret
cmc
jmp
cld
cli
cld
sbb
ret
movl
iret
loope
shl
ror
repnz
xlat
repnz
loopne
std
cmp
shl
mov
out
cld
in
out
out
out
lock
cmc
aad
cmp
lret
loopne
iret
fld
test
lret
repnz
fcmovbe
lret
lret
clc
mul
cmc
aam
les
jmp
fmull
shlb
cmc
clc
enter
jmp
hlt
into
int3
testl
mov
ror
out
xchg
enter
ror
das
out
divl
sarl
sar
loop
aam
sti
loop
loop
icebp
repz
loope
sub
stc
aam
int3
call
jmp
sti
iret
rcl
aam
std
loope
in
cld
rclb
rol
ror
clc
fsubr
int3
ljmp
loop
jmp
fucomp
aam
sti
test
xchg
clc
xor
cmp
lock
loopne
call
ficoms
in
out
aaa
out
xor
xor
out
out
repz
adc
out
neg
clc
cli
clc
xchg
orb
call
loope
testl
hlt
jmp
into
mov
bnd
in
into
out
fucomi
repz
cld
cmp
sbb
clc
cld
mov
aam
out
aad
lret
in
int
addl
xlat
fidivrl
leave
xchg
out
in
cmc
ret
leave
sti
into
xor
cmp
lret
in
sti
rcr
repz
repz
aam
ljmp
in
fyl2x
xlat
out
ljmp
rcr
cmpl
jmp
jmp
faddp
lret
hlt
cmp
call
aaa
repnz
icebp
fiadds
int
fiaddl
out
in
leave
cmc
in
aaa
out
std
sbb
aas
sbb
test
loope
xor
in
call
repnz
in
fndisi(8087
cli
aad
out
fadd
jmp
loope
in
xor
xlat
xor
xor
mov
sbb
sti
fsubp
in
rcl
xor
xor
cmp
fmul
faddp
sar
into
test
icebp
icebp
in
xor
inc
lock
xor
jmp
enter
vpsubusb
sub
xor
insl
mov
add
out
repz
out
int3
aam
fcmovnu
cmp
fcomip
addl
into
cld
test
lret
in
cs
iret
xor
cli
cmp
sar
cmp
loop
ret
in
inc
lock
int3
loope
fsubp
leave
hlt
call
cmp
in
call
ljmp
in
repnz
out
icebp
sti
icebp
sar
cmp
repnz
cld
fcomi
xlat
out
loope
mov
loopne
out
mov
shl
les
int
shl
into
cmp
cli
test
loop
cli
mov
fists
shr
jmp
not
shr
xor
leave
enter
xlat
jmp
fists
xor
cmp
repnz
in
jecxz
sti
out
into
lock
jmp
in
ficoml
out
jmp
clc
cmp
cmc
cli
std
shl
call
mov
vpaddd
icebp
iret
mov
jmp
fidivs
jmp
lret
xlat
cli
xchg
in
jmp
leave
shl
out
hlt
iret
in
rcl
fst
int
cmp
cmp
ljmp
jmp
test
mov
lds
cmp
cmp
loope
test
icebp
lds
loop
shr
lret
cmp
lock
cld
icebp
rcr
out
rol
in
jmp
incl
out
loopne
cmp
hlt
ror
rcr
ss
fcmovnb
cmp
jmp
xchg
in
lret
hlt
repz
int3
lret
ljmp
fdiv
aad
xchg
aam
ds
out
fimull
cmc
ss
icebp
xor
fmul
xlat
repnz
les
in
jmp
ret
mov
jmp
fstp
lds
sub
sarb
jmp
repz
fucom
loop
test
jmp
leave
rorl
loope
lock
ror
neg
rcl
shl
cmp
cmp
neg
imul
orl
into
aam
clc
out
loope
in
aam
fdivr
fucompp
out
enter
repz
stc
cmp
imul
xlat
stc
sub
cmp
out
adc
inc
loopne
loopne
in
out
lret
sub
xlat
rol
not
fdivrl
cld
rcr
clc
jecxz
rorl
test
ljmp
test
sub
rcr
cld
sar
lds
cmc
loop
cld
in
jmp
out
fldl
rcl
call
aaa
sti
add
cmp
fimull
in
xor
loope
iret
in
lret
loope
test
xchg
xchg
leave
enter
testb
ljmp
std
ljmp
out
aam
cmp
out
nop
xchg
jmp
hlt
leave
out
fdivrs
into
sti
imul
cld
and
std
cmc
idiv
call
cmc
out
adc
jmp
int3
xlat
shl
into
cli
decb
cld
ret
cld
repz
fsubp
into
out
shr
jmp
cmp
fidivrl
xlat
fcmovnu
loop
jecxz
sti
shl
mov
loopne
std
fcomi
loopne
cld
jmp
jmp
cli
in
call
fcomp
fnstsw
mov
sti
clc
fisttps
sub
xor
out
cmp
rcl
ret
loop
sti
fucomip
mov
imul
sub
shl
leave
jmp
idivl
std
repnz
ret
test
clc
addb
xor
hlt
repnz
std
loope
xor
cld
sar
mov
xchg
call
mov
in
xor
hlt
aad
xor
ror
fdivrp
sti
fidivrs
fst
aas
jmp
xchg
jmp
sti
xchg
int3
test
mov
iret
shr
rol
in
aam
aad
test
testl
out
out
lret
xor
icebp
cmp
cmp
add
cli
jmp
int
icebp
shr
std
mov
aam
shrl
hlt
aad
call
aad
rcr
fsub
fadd
sub
xchg
mov
fcmovbe
ror
aaa
ljmp
lock
cmp
xchg
cld
std
clc
into
ljmp
out
fdivr
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
nop
mov
jl
addb
jl
xor
xor
repnz
ret
loope
test
std
std
fidivrs
ss
iret
int3
fidivl
sub
cli
repnz
movb
jecxz
in
clc
leave
aad
cld
cmp
cmc
rcr
ffree
add
loope
lret
fcomp
sar
mov
das
int3
fcmove
lret
fnstcw
call
shl
jecxz
std
xor
in
fldlg2
xchg
ret
not
cmc
shll
sti
into
cmpl
clc
mov
or
cmc
xchg
cmc
call
std
out
leave
xor
ss
cmp
xchg
loopne
ret
fsqrt
fucomi
leave
mov
jmp
jmp
cmp
in
sti
cmp
cld
aas
test
jmp
mov
jmp
filds
xor
lret
call
stc
cmp
rorl
decb
stc
in
jecxz
lret
fsubr
imul
stc
aam
repnz
in
cmp
orl
stc
jmp
fldz
aas
aad
out
rcl
aam
adc
mov
iret
in
icebp
std
icebp
addl
loop
in
aas
cli
icebp
lret
jmp
std
lock
icebp
jmp
fmull
loope
nop
aaa
jecxz
cli
shl
xor
aad
fdivr
shl
in
ffree
in
mov
jecxz
iret
out
hlt
cmc
hlt
out
hlt
ds
fcomp
int
hlt
cmc
cmc
in
out
int3
sti
test
icebp
jecxz
out
out
ljmp
out
cmp
lock
ss
xchg
testb
mov
enter
lret
jecxz
rcr
cld
test
call
fildl
in
lret
in
loopne
stc
hlt
fcomp
in
into
std
cmp
cmp
clc
in
in
cld
in
test
clc
call
repz
leave
cmp
cld
shll
sti
xchg
in
mov
fisttpll
loopne
les
in
into
call
repz
adc
jmp
ljmp
repnz
out
ljmp
clc
fildl
enter
ffreep
dec
jmp
sub
xor
clc
fdiv
fstpt
cmc
iret
xlat
cmc
loopne
hlt
test
fsub
in
std
sti
popl
cmc
rcl
fidivrl
sar
xlat
int
ljmp
sti
ret
jecxz
xchg
orl
lret
into
int3
int3
shl
cmp
adc
mov
ljmp
out
jmp
sub
stc
in
int
int
xlat
jmp
hlt
loopne
xchg
in
loope
lret
loop
sub
imul
in
clc
in
aaa
icebp
enter
cmc
fucom
testb
jmp
mov
jmp
lds
hlt
cmp
aad
in
sar
lret
test
icebp
cmp
cs
out
aad
int3
cmp
les
sar
rol
xchg
jecxz
roll
clc
in
enter
cmp
cmc
fdivrl
adc
in
test
addb
out
hlt
lret
neg
rcr
ret
roll
loope
lret
frstpm(287
test
in
sub
addl
call
ljmp
jecxz
call
repnz
sti
cmp
fcmove
fcmovne
rcr
roll
fadds
xchg
cmc
repnz
ljmp
fsubr
fildl
jecxz
hlt
fldl
mov
mov
mov
into
shlb
xor
cmp
test
ljmp
out
xlat
in
fst
mov
out
lock
les
fsubr
in
stc
fcomp
aad
shl
std
test
out
in
rcl
icebp
iret
jmp
lret
ss
lret
aaa
xor
cmp
roll
testl
cmp
cmc
cmc
lock
int3
lock
lret
repnz
fildl
jmp
in
out
out
into
lock
repnz
cmp
out
in
aad
shl
xchg
push
int
loope
nop
mov
mov
fninit
iret
fucomp
not
lret
lret
or
dec
or
sahf
add
add
iret
leave
ret
int
xor
fldcw
dec
ss
addb
jl
rcr
icebp
out
std
lret
flds
xor
jecxz
cmp
icebp
enter
iret
in
in
cmp
faddp
test
xchg
lret
iret
in
out
ljmp
out
leave
jmp
ret
idivl
repnz
add
lret
sub
lret
xor
enter
hlt
ror
clc
fsin
shl
fdiv
in
into
jmp
ret
rol
out
aam
rcl
shr
hlt
fdiv
aas
cmp
out
int3
xchg
enter
loopne
lds
in
jmp
std
loope
ffree
loope
ret
sti
fxam
enter
rol
cmc
das
shr
rcr
repz
out
fcmove
into
fcmovu
cld
shl
test
aam
mov
jmp
ds
xlat
fsubr
cmc
cmp
not
repz
rol
rcr
hlt
clc
mov
enter
cld
shl
loop
icebp
icebp
lret
stc
out
sarl
test
ss
rcr
out
in
fstp
ljmp
loop
hlt
iret
lret
cmp
cld
rcl
not
xor
out
iret
lock
xchg
lock
call
out
cmp
cli
aam
fcmovnb
ret
mov
lock
fcmovnb
hlt
lret
lret
in
cli
rol
sar
filds
loopne
xor
sub
iret
std
icebp
xlat
test
sbb
sub
xchg
xchg
lret
xor
fcmovnu
aas
lock
cld
fsub
mov
mov
movl
aad
jmp
imul
ret
fdivrp
ljmp
xchg
mov
lea
shl
fdivr
std
cmp
fcmovnu
ds
icebp
sar
leave
fdivrp
mov
mov
jmp
aad
xor
ljmp
into
clc
xor
loope
sbb
ret
out
clc
mov
test
ss
int
lock
enter
cli
aad
adc
lock
mov
movl
aad
stc
lret
idiv
loopne
in
cmp
std
loop
xchg
call
fmul
into
aam
xor
aad
fsubrp
cmp
loopne
xlat
jmp
clc
leave
mov
leave
cld
mov
lret
enter
xlat
fstp
icebp
cmp
out
fdivrs
aam
cmp
rcr
loopne
fucompp
lock
jmp
vpinsrw
int
out
call
ret
leave
clc
hlt
loopne
shl
int3
nop
jmp
out
cli
sti
jmp
std
rcr
idiv
std
test
aam
mov
mov
movl
into
fsubr
in
cmc
clc
jmp
aas
rol
movb
xchg
fisttps
ffreep
rol
cli
repz
fucomi
rcl
into
xlat
cld
loop
rcr
in
lret
out
std
mov
loop
loop
jecxz
xor
repz
rcr
icebp
icebp
add
neg
pop
cli
addl
sti
call
roll
repnz
into
shl
lret
sar
shr
xabort
aam
fst
fnstenv
faddp
or
in
mov
clc
call
out
in
cmc
jmp
cmp
hlt
icebp
sub
adc
call
fadds
xor
rol
lret
fmul
cmp
sti
sti
test
inc
les
ljmp
in
fcmovnbe
cmc
lret
cmp
cmc
iret
cmp
stc
stc
aas
fdecstp
std
clc
enter
xchg
jmp
aad
clc
cmp
call
enter
test
xchg
mov
loopne
fsubp
in
cmc
rcl
stc
enter
enter
into
fcmovnb
cmp
ret
lret
mov
cld
fucomi
mov
xchg
out
enter
out
xor
sarb
icebp
hlt
repz
ffreep
cli
rorb
call
xor
xor
cmc
out
cmp
hlt
test
stc
jecxz
jmp
test
call
loopne
hlt
ljmp
loop
ret
fdivrl
ret
lret
cld
lea
call
repnz
aaa
repnz
leave
xor
lea
jmp
rcl
int3
iret
rol
shll
or
test
cmp
jl
cli
cld
test
call
out
jecxz
out
cmc
iret
test
iret
int
testl
out
xchg
lock
mul
xor
icebp
loope
int
ret
loop
addl
fisttps
in
icebp
cmp
cmp
ror
aad
loop
ror
neg
fdivr
jmp
orb
xor
out
repnz
rcr
neg
ds
xchg
sti
fcmovne
fld
icebp
test
xchg
in
jmp
aaa
lret
in
aad
fdivr
xor
loop
sbb
dec
iret
xchg
adc
xchg
test
aad
leave
cmp
icebp
rcr
out
cmp
hlt
call
fcompp
out
in
iret
jmp
in
xlat
das
ret
cmp
aaa
iret
idivl
aad
std
rolb
loop
enter
xchg
call
ret
out
fdivr
cmp
int
sti
sti
jmp
not
cli
jmp
cld
iret
out
ret
shr
shll
lret
cmp
int3
lock
iret
sar
xlat
xchg
lret
loopne
xchg
loop
hlt
fadd
in
int3
xor
stc
fcomi
into
fsubr
stc
rcr
lds
ljmp
lea
sub
neg
cmp
int
sar
add
fsub
fsub
fiaddl
loopne
ljmp
cmc
repz
test
lret
int3
sar
nop
into
xor
mov
jmp
fstp
lock
neg
jecxz
cmp
sti
loop
ror
hlt
rol
loope
call
cld
imul
clc
in
out
out
decb
mov
cs
xor
xor
sar
fnstcw
xor
neg
loopne
sar
lret
mov
out
loopne
rol
ror
call
in
test
sti
jmp
loopne
mov
shl
in
fxch
fcmovnbe
into
ret
hlt
ds
rcr
in
int
call
into
loop
lret
aam
hlt
fmulp
fst
in
clc
test
xor
cmp
ror
out
rcl
ret
sub
iret
int
enter
fmul
out
out
stc
xchg
repz
enter
xchg
sarl
out
shr
call
fmulp
fcmovnu
into
adc
std
std
incb
xchg
xchg
std
int3
sub
shl
fnstcw
test
cmc
cmp
ds
fcmovne
bnd
lea
repnz
lret
into
call
sub
shr
in
ljmp
and
and
mov
out
fld
shr
in
repz
out
in
aam
int
rcl
clc
rolb
out
repnz
xchg
repnz
aam
clc
cmp
lret
fsub
aad
aas
shl
aad
fst
in
les
in
xchg
sub
imull
lret
rcl
std
into
test
call
in
out
int3
fldl
xlat
repz
xlat
xor
fsubrp
iret
jecxz
fsub
xchg
fldl
iret
out
iret
xchg
shl
loopne
loop
jmp
sti
into
lret
lock
fsub
in
fdivr
sbb
icebp
repz
rcr
cmp
aaa
xor
idiv
int3
into
roll
iret
mov
mov
sbb
shl
jecxz
ret
fcmovu
xor
fnstcw
aad
out
cld
out
mov
rcr
repz
mov
in
int
out
into
fcmovne
jmp
lret
test
sar
loopne
jecxz
jmp
xchg
loopne
out
sub
sarl
xor
xlat
add
sti
out
xlat
jecxz
jmp
into
cmc
out
call
clc
cmc
ss
cmp
shl
ret
leave
xlat
fmul
test
in
shl
repnz
jecxz
ljmp
shl
rcr
rol
fisttpl
std
in
in
shr
int3
lock
cs
loop
cs
sti
cli
fistpll
adc
ljmp
push
fidivs
lret
cmp
xlat
not
rcr
loopne
cld
in
jmp
shr
jecxz
test
das
into
xor
clc
lock
fnstsw
out
stc
add
sarb
xchg
test
loope
fidivs
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
add
jl
addb
jl
fisttps
das
out
lret
enter
aam
rcl
repnz
ret
hlt
xchg
ret
fisttps
xchg
ds
ret
leave
loop
jmp
std
repnz
les
lock
into
xchg
aad
loop,pn
int3
leave
int3
rcr
fabs
shl
out
lock
cli
shl
mov
out
xor
xor
repnz
aas
shr
fneni(8087
rcr
ror
and
cli
jmp
loop
sub
loop
aaa
aad
ss
out
in
int3
lds
dec
xlat
mov
mov
test
leave
out
repz
cli
out
into
lock
sarb
cmp
call
call
fst
rcr
ljmp
cli
repnz
icebp
mov
xchg
in
int3
out
repz
lock
sub
cld
cli
hlt
iret
and
shl
cmp
in
xchg
int3
out
stc
hlt
int
fld
clc
hlt
icebp
icebp
or
stc
cld
cli
in
ljmp
fucomip
lret
out
out
out
cmp
call
loope
leave
addl
loop
enter
aas
shrl
cli
shl
fsubr
jmp
cli
fiadds
in
out
xchg
fists
hlt
sub
std
out
fxch
ds
cmp
rcr
cld
in
fcomi
decl
mov
loope
enter
icebp
ljmp
loope
fcom
testl
xchg
loop
vlddqu
fdivrs
cmp
mov
out
mov
nop
loop
int
into
mul
loopne
aam
out
leave
enter
xor
out
xlat
out
cli
aam
jecxz
cmp
out
faddp
out
stc
jmp
icebp
jecxz
aas
stc
neg
vpsubb
mov
in
cli
in
jmp
leave
call
iret
xor
jmp
into
cmp
loope
jmp
clc
int3
fxch
add
xor
xlat
loop
xor
out
fucom
cmp
cmp
lock
sub
shl
shl
rol
shl
cmp
cmp
rol
inc
loope
stc
jmp
in
incl
iret
ret
aad
repz
aad
hlt
repz
rol
shl
mov
ds
out
std
out
hlt
call
stc
repnz
enter
in
addl
das
ljmp
aad
in
cmp
add
cmp
sti
rcr
cld
fildl
call
xor
clc
aam
iret
aad
out
cmp
out
std
in
test
cmp
stc
lret
test
fadd
lret
ret
lock
enter
icebp
repz
cli
in
rorb
mov
jecxz
sub
mov
loope
jecxz
cmc
xor
aad
out
ss
in
cmc
ret
loop
in
std
sti
loopne
xchg
call
cmc
ret
call
sti
into
hlt
cmp
out
in
rcr
std
leave
testb
xchg
fnstenv
repz
iret
jmp
jecxz
std
lock
out
mov
cmp
or
call
int
into
cmp
cmp
fprem
xor
cli
repz
out
std
icebp
out
call
lret
ljmp
lret
ret
roll
orb
sar
call
aam
into
vpsubsw
stc
out
shl
sar
into
test
fsub
call
in
xor
lret
hlt
xor
clc
jmp
in
iret
loop
aad
incb
fdecstp
in
fcmovnu
out
into
nop
into
jmp
jmp
out
lret
stc
in
ss
int3
ror
sti
std
ret
aad
add
orl
mul
aad
cmp
jmp
repz
sti
lret
loopne
cmc
stc
les
fmul
int
cld
lret
in
repnz
cs
in
cmp
xor
into
clc
cmp
cmp
loop
jecxz
xchg
mov
repz
shl
call
out
ds
idiv
ret
out
xlat
inc
out
call
fdivp
ret
aaa
sub
fcos
fcmovb
cmp
leave
mov
aam
int3
mov
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
shr
into
iret
out
cmp
fistpll
add
cli
loopne
imul
enter
out
mov
cs
xor
xor
cmp
cli
iret
jmp
aaa
incl
frndint
mul
fstp
fdivrp
out
rol
xor
sub
clc
das
sti
aaa
clc
sarl
iret
rolb
fimuls
jmp
lret
into
ljmp
xor
ds
not
repnz
aam
out
ljmp
int
fucomi
xor
clc
sar
stc
cli
test
mov
imul
out
orb
leave
out
into
out
fdiv
cld
xlat
xlat
fildl
cli
fimull
ret
aam
lock
testb
or
in
mov
lret
jmp
in
xlat
cs
out
rcr
ror
sar
rcl
aam
call
int3
in
lret
xor
hlt
aad
cld
fld
rcl
repz
repnz
fdivrs
inc
aas
int
xor
cmc
repnz
loop
xor
xlat
std
into
xor
int3
hlt
jmp
cmp
neg
cli
mov
test
rcl
aaa
xor
in
out
ror
fidivrl
lret
sti
cli
iret
icebp
rcl
mov
cld
into
iret
mov
shll
repz
cld
lret
ret
sbb
jmp
aad
mov
in
fdivr
sub
rol
rol
lret
cmp
aam
shl
cmp
loopne
or
ret
les
icebp
sbb
aad
sarl
in
std
cmp
cmp
xchg
faddp
xchg
std
in
shr
aad
cmp
hlt
cmc
fdivr
fdivp
cmpl
in
mov
repnz
out
cmp
icebp
divb
cmc
sbb
stc
faddp
mov
in
clc
fstp
jmp
loopne
enter
repnz
shr
in
ret
in
les
std
fninit
cmc
xchg
enter
xor
xor
call
hlt
ret
cmp
mov
leave
fsubr
sti
lock
addl
icebp
fcmovbe
aad
xlat
in
test
ffree
cld
shr
mov
in
in
in
loopne
call
jmp
cmp
hlt
ljmp
ret
sti
out
vpminsw
cmp
stc
lret
out
xor
cmp
fnstsw
clc
addl
stc
mov
call
ljmp
enter
int3
hlt
loopne
shl
xchg
sti
int
in
lret
jmp
std
cmp
jmp
repz
out
roll
fyl2xp1
std
mov
call
cmp
int
aad
lret
cmc
ds
enter
ljmp
jmp
in
in
aad
call
iret
cmp
addl
jmp
out
int
cmp
cmp
aad
adc
or
movb
loop
xlat
idiv
ret
call
call
in
ret
icebp
lds
mov
jmp
fdivrp
xor
int
xor
loopne
cmc
sar
cmp
loope
jmp
out
std
ret
int
mov
fnstenv
clc
cmp
iret
stc
stc
rcr
ret
lds
cmp
xchg
loop
xchg
nop
das
aad
fldl2t
ffree
fcmovu
aaa
push
into
sarl
clc
xchg
faddp
loop
cmp
nop
xchg
xchg
in
jmp
repnz
sar
xlat
ds
enter
ljmp
aam
in
int
cmc
fucom
leave
aas
ds
aam
shl
hlt
roll
ret
ret
jecxz
aam
hlt
xor
test
out
enter
loope
cmp
enter
mov
out
ror
out
aas
repnz
in
out
cmp
rcr
test
jecxz
jmp
xlat
std
rorl
shl
shlb
ljmp
xor
hlt
xlat
cli
imul
leave
cmp
std
out
loopne
rorb
out
fxch
in
lock
int3
shll
into
loope
cmc
aam
mov
testb
shr
xor
mov
jmp
jmp
rcl
rol
fstp
xor
jl
add
fidivrl
lock
repnz
loope
jmp
fcmove
enter
int3
nop
ds
in
int
pushl
stc
sti
fidivrl
repnz
ds
in
xlat
movb
aad
xor
loop
xor
clc
in
enter
sar
aam
jecxz
mov
orl
xor
repz
into
sarb
int3
jecxz
cmp
test
cld
vcvtpd2dq
loop
loopne
into
rcr
aaa
out
cmp
ds
iret
in
cli
decl
std
in
loopne
iret
jmp
fcmovnb
iret
iret
cli
aam
test
ds
aam
hlt
leave
fucomip
xchg
fcmovu
fucomp
test
aaa
cmc
cli
cmp
fdiv
sar
testl
out
icebp
shr
shl
aad
aam
fnstcw
ljmp
stc
not
cmp
leave
sti
loope
aam
enter
nop
into
faddp
out
fadd
in
cmp
fdivrp
loope
xor
cld
ret
lock
jmp
jmp
in
lock
xor
imul
enter
loop
ret
ret
cli
mov
xchg
fsubr
lds
divb
fcmovnu
repnz
sti
in
fadd
movb
mov
hlt
ljmp
cmp
cmp
fsubp
cmp
ds
fcomp
fcmovnu
ljmp
fcmovnbe
cmp
iret
lret
stc
in
ds
shr
cld
mov
loopne
fcoml
loope
div
vpsubw
rcr
sar
aam
fsubp
mov
testl
ret
fadd
cli
aas
ror
jecxz
fsin
into
leave
cmp
dec
jecxz
fsubrl
into
repz
loopne
loope
test
xlat
cmc
jecxz
fcmovu
aas
fabs
std
mov
loopne
fprem
ss
rcl
lret
fdivp
cmp
hlt
add
hlt
aad
jecxz
into
mov
fucomi
fmulp
loopne
jmp
leave
cld
hlt
ds
fdiv
stc
xlat
fdivrp
fsin
lret
cld
xchg
add
repz
shl
int
rcr
cmp
out
int3
fdivrs
fndisi(8087
shl
loopne
in
clc
faddp
fucomp
adc
les
sub
rcl
jmp
ss
fsubr
sti
loopne
stc
cli
fcmovb
jmp
mov
jmp
cli
xor
ss
fmulp
not
jecxz
not
les
mov
adcb
lret
std
jmp
cmc
ds
aad
loope
loopne
ljmp
xor
xor
cmp
rcr
fiaddl
shl
xor
std
hlt
sbb
in
in
into
ret
clc
ret
sti
ljmp
cmp
test
mov
adcl
out
fidivrs
xor
repnz
int3
repz
leave
jecxz
iret
int3
xlat
sarl
icebp
ds
cmp
clc
rol
vpsubusw
out
out
mov
int
shr
lock
ror
dec
sti
cmp
cmpl
rolb
xchg
xchg
loope
call
cmp
cmp
sbb
xbegin
loop
xchg
aad
divl
loope
loopne
xchg
test
sti
addb
enter
aas
hlt
lock
in
loop
repnz
les
out
xchg
mov
ds
in
std
shr
fcmovbe
jmp
neg
add
out
out
testl
shlb
sarl
jmp
cli
xlat
cli
repz
out
leave
ffreep
xlat
out
out
lds
shr
std
stc
icebp
cld
lock
fcomip
fcmovnb
ffreep
cmp
in
loope
out
loopne
fcmovnbe
jmp
in
cli
int
aad
xlat
call
int3
adc
xrelease
mov
aam
out
out
repz
cld
fidivrs
aad
shl
jmp
fimull
out
fcmove
sbb
aaa
xor
ret
fmulp
filds
loop
repnz
stc
cmc
lret
nop
xchg
hlt
xor
jecxz
sti
repnz
xor
lea
mov
jmp
mov
lret
fnstenv
push
ret
inc
call
add
loope,pt
faddl
mov
out
repz
repnz
xor
shl
stc
cmp
cmp
shr
loope
sarb
neg
clc
std
jecxz
test
xchg
iret
xor
stc
leave
in
in
in
icebp
test
cli
repnz
adc
iret
out
mov
ror
test
fcmove
fsub
std
fucom
lock
mov
lret
clc
test
in
lock
xor
in
icebp
cli
icebp
jmp
fnstenv
cmc
idivb
adc
std
ffreep
out
loopne
and
int3
iret
cmp
aas
cmp
ret
push
test
faddp
out
in
std
loop
test
xchg
mov
sar
in
ret
repz
cmp
test
into
xlat
fsubr
ds
int
lret
shl
aaa
out
loop
repz
hlt
loopne
ljmp
ret
ljmp
jmp
rcl
ret
int
sub
cs
fbstp
xlat
cmp
rol
xchg
xchg
out
jmp
jecxz
call
jmp
cmp
cmp
std
call
shl
cmc
enter
jmp
cmc
shl
loopne
fstpt
aam
cmp
out
shl
rcl
jmp
in
into
xchg
out
leave
ss
rcr
out
push
in
jmp
clc
aam
loope
loope
mov
jmp
ljmp
lock
loop
out
xlat
fmul
iret
cmp
std
stc
loope
loop
sti
faddl
repnz
ret
iret
leave
repz
int3
int
lret
in
cmp
icebp
shr
ret
faddp
in
testb
repz
xor
xor
out
jmp
enter
neg
shl
loope
mov
fcmove
fisttps
xlat
hlt
ret
leave
in
std
shl
inc
xchg
loopne
in
int3
in
int
jecxz
repz
ljmp
sub
test
aad
jmp
xchg
shr
nop
imull
not
cmc
stc
cli
out
jmp
cmp
rol
in
mov
mov
enter
shl
loopne
shr
std
aad
ds
into
icebp
int
xlat
loop
fstp
test
jmp
nop
in
shl
enter
in
call
shr
in
in
icebp
fldl
cmp
adc
fcomp
fcmovnbe
aaa
cli
enter
iret
int
int3
ret
xchg
cli
out
incb
aad
in
out
in
in
int
lret
cmp
cmp
cli
std
ret
out
xlat
mov
into
xchg
in
loope
shr
shl
shl
int3
xor
rol
repz
cli
test
and
in
in
cmc
jmp
ror
in
sarb
cli
in
out
jmp
nop
test
div
int
lret
repnz
fsubrp
clc
sarb
not
jecxz
int
iret
xor
iret
ret
into
cmp
lret
into
ss
ffreep
cld
aas
jmp
out
lds
lret
repz
sub
loop
in
fdivr
out
fstpt
in
lock
aas
cld
jmp
addb
into
fsubp
out
aad
lret
fsqrt
fsub
call
cmc
push
loopne
std
enter
jmp
loop
fimull
ljmp
loopne
shr
lock
test
and
jecxz
call
leave
repz
into
cmp
out
iret
fprem1
ds
cli
out
fldl
leave
cld
roll
ret
aad
fmul
call
in
loop
call
fsubp
out
out
nop
in
faddl
shl
in
aaa
iret
int
rcr
adc
cmc
std
xchg
cmp
frstpm(287
cli
out
int3
icebp
and
std
cmp
in
xor
out
cli
int3
cmp
cmp
ret
leave
fdivr
in
in
ds
ret
lock
hlt
ljmp
fld
loop
std
loopne
lret
loopne
fisttpll
int3
int3
out
mov
test
rol
cld
cli
cli
fmul
mov
loopne
enter
int3
rcr
stc
cmp
out
fucomi
aad
cmp
cld
fcomp
cli
std
orb
or
out
in
lret
xor
cmp
cli
jmp
icebp
idiv
rcr
out
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
out
jecxz
int3
mov
cld
incb
loop
idiv
cld
repnz
cmp
enter
div
aam
xchg
jecxz
ffree
in
int
xchg
shlb
hlt
in
lret
aam
jmp
stc
in
clc
fdivr
jmp
jmp
out
out
into
enter
aad
out
fsub
fnstsw
inc
fadds
out
mov
xchg
repz
cmc
ss
lds
hlt
into
in
hlt
imul
loopne
cmp
sbb
mov
in
sub
in
iret
in
call
cmp
xor
fucom
icebp
iret
fadds
std
xlat
test
iret
mov
xchg
xchg
int3
out
enter
repz
ds
ret
aam
decb
lret
xchg
iret
out
vpmulhuw
xorb
fucomp
icebp
aam
test
fildl
jecxz
call
ljmp
sti
stc
fidivrl
adc
incl
fsubp
repz
icebp
loopne
test
jmp
sar
into
stc
cmp
ret
orb
fcmovne
roll
ret
cmp
lret
int3
cmp
xlat
std
cmp
inc
aad
xchg
roll
xor
loope
call
cmp
xlat
jmp
mov
neg
mov
mov
out
ss
hlt
repz
into
enter
loopne
aam
cld
aad
loop
in
cmc
mov
aad
sti
fdivs
ss
fst
into
fld
xacquire
cmc
in
xchg
xchg
xchg
repz
into
sub
loop
cmc
enter
cmp
int
cld
cmp
out
ret
incl
xor
ret
lock
xor
adc
cmp
xlat
in
orb
sub
call
out
cmp
jecxz
test
ret
jmp
loope
test
int3
xchg
fmul
int
aas
aam
jmp
repz
cmp
repnz
sti
ljmp
iret
loop
mov
stc
fsubr
aam
out
in
filds
aam
icebp
shl
sti
mov
ljmp
mov
xor
lock
vpsubq
icebp
ljmp
fsubp
fsubp
testb
repz
in
cmp
xor
aaa
iret
in
aas
out
cmp
cmp
loopne
cmp
mov
test
loopne
jecxz
int3
out
icebp
or
cmp
vpaddusw
mov
ret
leave
out
into
ror
int3
fstp
in
loopne
testb
fdivrp
call
repz
icebp
repnz
test
aam
xlat
loopne
jmp
ljmp
divl
icebp
xor
in
shll
sbb
test
loope
in
mov
in
into
std
fiadds
out
sar
in
out
loope
enter
test
fucomp
jmp
iret
int3
hlt
xor
iret
jecxz
shll
aad
in
xlat
xchg
out
fucomip
test
iret
xor
lret
imul
iret
addb
fcomp
mov
leave
rcr
lret
mov
into
lret
in
cmp
loopne
fdivr
idivb
cmp
ret
loop
loopne
jmp
into
int3
test
fiadds
sti
rcr
cmp
ss
cmp
xor
loop
cmp
in
out
sbb
call
in
cmp
in
fldpi
std
fcmovbe
out
int
aam
cmc
cmc
lret
jecxz
in
loopne
xchg
in
ljmp
ret
divl
jmp
aaa
ds
cld
fdiv
fcomp
icebp
sti
cmp
iret
or
popl
ss
ss
cmp
cmc
out
aam
loop
int3
mov
jmp
repnz
out
xor
jmp
jecxz
ljmp
test
cld
and
cli
jmp
sti
xor
fsincos
aas
stc
cmp
repz
loopne
loopne
jmp
in
std
call
sarb
vpand
cli
in
fsub
fcmovne
ret
in
iret
test
mov
incb
cmp
int
lret
int
int3
les
in
movl
jmp
jmp
ret
lret
enter
dec
call
jl
addb
jl
fiadds
int
in
call
xor
cmp
ds
out
jmp
xchg
test
fsubp
ret
fcom
lret
stc
in
enter
aad
rolb
sti
jmp
test
ljmp
fucomi
fnstsw
jecxz
in
sti
ds
out
cld
cli
loopne
mov
addl
shl
repz
div
in
loopne
testl
out
xchg
in
rcr
shl
cli
out
sar
ljmp
testl
or
xchg
aad
vpslld
aaa
lret
out
hlt
fiaddl
enter
xlat
int
sti
sub
jmp
lret
shl
sarb
adc
aad
fyl2xp1
jecxz
ljmp
int
shr
aaa
fldl2e
xor
aad
cmp
adc
cmp
repnz
ljmp
into
jmp
jmp
shlb
xlat
int3
in
xor
sti
loope
fadds
lds
loopne
out
mov
cmc
repnz
into
loopne
cmp
cmp
in
xor
loope
clc
ljmp
xchg
hlt
aam
in
in
rcl
call
aam
rcr
in
inc
mov
lret
xor
mov
fstp
int3
enter
ret
shr
into
loope
rol
aas
in
sbb
in
mov
lock
out
in
out
xor
leave
in
out
enter
test
decl
ds
out
inc
out
ror
cmp
loopne
jmp
cld
in
repnz
enter
cmp
fsub
test
in
jmp
lret
xor
xlat
int
fcmovnbe
rcl
cmc
cmp
in
loope
leave
addb
into
out
out
fdivrs
std
in
in
clc
fadds
loope
test
decb
mov
in
xor
cld
stc
cmp
loopne
cmc
aaa
sar
repz
ljmp
cld
xchg
nop
jmp
loopne
in
xlat
in
sti
out
idiv
fst
fdivr
ds
cmp
xchg
cmc
jmp
clc
ret
aad
ljmp
out
ret
repz
call
out
xchg
xchg
test
xor
loopne
xor
cmp
cmp
shr
repnz
mov
fcomi
lret
sti
loop
mov
call
xlat
in
test
inc
cmp
stc
ror
push
enter
nop
out
mov
xor
in
cmp
lock
fcmovbe
shl
icebp
loopne
cmc
loope
ds
into
or
int3
loop
lret
das
std
xor
stc
std
cli
aad
cmp
jmp
aam
mov
xchg
cli
cmc
cmc
jmp
int3
call
xor
cld
std
out
iret
icebp
roll
sti
mov
mov
cmp
fcmove
lret
adc
cmc
out
mov
xchg
ljmp
mov
int
out
out
in
cmp
leave
jmp
cmc
in
fucom
icebp
jmp
xchg
xchg
lret
iret
in
loopne
subb
call
fpatan
cld
sarb
fimuls
fisttps
int
out
shr
leave
leave
aam
out
int
sti
icebp
lock
idiv
out
neg
lret
in
iret
test
jmp
in
xlat
fdivrp
ret
in
cmp
fcom
inc
cmp
lret
out
or
jmp
xor
out
in
int3
fdecstp
faddp
cli
mov
mov
test
ret
jmp
xor
call
aad
mov
clc
std
not
out
lret
xchg
cld
int
clc
shl
into
aad
fildl
jmp
jmp
in
leave
not
xor
cmp
jmp
ror
shll
aad
test
int
xchg
addb
icebp
aaa
clc
jmp
clc
in
aaa
addb
lret
xchg
mov
xor
fcmovu
adc
test
clc
incl
sar
lock
loopne
in
in
aad
lock
cmp
ret
repnz
mov
fsubrp
int3
or
jmp
ret
aad
lret
enter
sub
jl
addb
jl
repnz
ret
aaa
lret
int
xor
hlt
adc
into
jmp
jmp
test
sub
loop
fdecstp
int
cmp
cmp
div
fiadds
mov
test
xchg
in
int3
jmp
cmc
rcl
std
in
jecxz
icebp
fdivr
stc
ret
flds
leave
int3
nop
and
loop
icebp
out
std
aam
cmc
loopne
shr
repz
fldl
call
imul
lock
shr
sbb
aam
cmp
xor
out
cld
sub
mov
into
out
jmp
pushl
call
ret
adc
fcmovnu
mov
std
loopne
cld
into
out
iret
hlt
aam
fcmovu
out
test
idivb
hlt
repz
enter
cli
iret
std
sti
repnz
repz
cmp
in
aad
cld
jmp
repnz
cmp
loope
xchg
cld
mov
ror
sti
xor
iret
aad
repz
jmp
loopne
in
in
jmp
cld
fmul
ror
fiaddl
lret
shr
lock
idivl
fldl
sbb
or
repnz
loopne
call
shr
xlat
lret
ret
idiv
repnz
aas
jmp
xchg
lock
fcmovne
xor
fmul
cmp
jmp
fadd
div
ror
mov
enter
xchg
out
loop
cmp
out
iret
in
call
sar
hlt
jmp
ljmp
out
fldl2e
ret
aam
cmp
repnz
cmp
repz
mov
fcmove
lret
fbstp
enter
lret
cmp
cld
test
cli
fndisi(8087
out
xchg
test
xorb
cs
shl
into
fucom
call
add
aad
out
in
fcomp
call
jecxz
xor
mul
xor
xor
lret
in
add
loop
sti
ret
lret
out
cli
cmp
in
xor
fld
sti
int
std
cld
ljmp
loope
xchg
or
or
lret
cli
sarl
loop
out
stc
std
sub
test
in
int
icebp
jmp
aam
lret
repz
shll
cmp
ds
icebp
fcompp
call
sub
loopne
xor
ss
fcomp
repz
sub
cmp
xchg
clc
loopne
loop
out
out
imul
clc
out
cmp
aad
addl
test
loop
lock
jecxz
rol
cmp
not
cmp
inc
fsub
out
out
fidivrs
std
lret
out
ljmp
xor
rcl
lret
repz
sar
vcmppd
test
fsts
div
aaa
out
aaa
call
rol
ret
cld
xchg
int3
loopne
jmp
xor
xor
les
not
cmc
jecxz
xor
std
adc
jmp
mov
iret
fucomi
fldl2e
into
in
icebp
xor
inc
xchg
xchg
shrb
repnz
ljmp
cld
loop
loop
fsubrp
mov
cmc
enter
cmp
sarb
loopne
shl
jecxz
faddp
jmp
incl
repz
ret
lock
clc
loopne
fsubr
sbb
test
jecxz
notb
in
shr
shr
call
fdivp
loope
ds
fcmovu
std
fucom
mov
cli
iret
out
loop
lock
test
cli
stc
shr
repz
icebp
aas
lock
jecxz
cld
addl
out
iret
repz
repnz
idivl
clc
clc
in
test
hlt
mov
fninit
in
shl
int
sub
out
stc
mul
aam
cmp
std
aas
aas
out
test
test
mov
lret
lret
cs
xlat
lock
rcr
cmp
out
std
jmp
ljmp
fst
sti
cmp
aam
fcom
cmc
cli
in
loop,pt
xchg
loopne
not
mov
xor
add
jmp
rol
rcr
jbe
roll
cmp
addb
jl
int3
leave
fsubr
shl
icebp
icebp
ds
out
div
fcmovnb
mov
cld
rolb
cmp
cmp
not
lock
cli
sbb
loope
ljmp
lret
fucomip
aaa
cmp
aaa
fdiv
cmp
iret
clc
filds
xlat
fadd
hlt
hlt
loope
test
out
fimull
icebp
in
icebp
int
out
sti
add
clc
xchg
loopne
in
test
repz
mov
in
aad
sub
out
ss
aad
addl
cli
loopne
cld
loop
leave
lea
lret
lock
in
cmp
cmp
fstpt
xchg
out
fstl
in
enter
cmp
loope
cmp
sti
lock
xchg
hlt
lret
movl
shr
test
int3
stc
ret
std
fdivr
inc
aad
fstpt
test
mov
shrb
icebp
int
cmp
in
xlat
roll
out
out
fsub
fists
int3
cmp
cmp
fcomip
xor
rcr
rorl
jmp
nop
xchg
call
les
loop
int
lret
aaa
std
xlat
loop
fst
out
aas
call
ret
out
fisttps
divl
xor
xor
fcom
in
aad
xlat
fsubp
iret
or
fimull
enter
xlat
shll
lret
xor
cli
ret
test
out
aas
or
mov
xchg
sub
mul
jmp
idivl
fcomip
out
aas
out
jecxz
lret
fdivr
loop
mov
loope
fiadds
fcmovne
rcl
into
idivl
int
aam
rolb
sti
enter
rcr
loop
in
int
ret
out
cmp
sar
flds
mov
loope
mov
ds
int
into
ds
out
sti
addb
jmp
loop
shr
xchg
lock
into
into
in
rcr
xor
cli
ror
rolb
mov
in
faddp
loop
mov
call
fldln2
cmp
aad
leave
in
ds
in
ror
fdivp
jecxz
sti
mov
in
iret
call
cld
out
iret
sar
cmpl
jmp
cli
sub
out
int
xor
repz
aaa
out
rcl
div
repz
iret
out
aam
xchg
call
fcmove
xor
xor
ret
xor
clc
cmc
cmp
clc
inc
repz
fcmovu
vpmovmskb
in
std
decl
xor
ljmp
rcr
clc
ds
fsqrt
out
sub
lret
nop
repnz
sub
out
int3
ljmp
cmp
int
std
aad
hlt
sti
xlat
stc
xchg
into
test
test
aad
fmul
stc
cld
shll
iret
stc
repz
loopne
loop
xlat
xchg
mov
xchg
inc
xor
xor
fnsave
shl
and
cmc
fcmovb
out
cli
stc
out
ljmp
iret
jmp
cli
cli
int
cmc
ss
rcl
int3
loope
lock
add
neg
test
in
out
xchg
sar
out
in
lret
cmp
loopne
out
xchg
out
test
jmp
cld
loopne
loope,pt
hlt
out
enter
cmc
repnz
out
xor
jmp
ret
loope
icebp
fiadds
repz
int3
cmp
xor
hlt
int
into
clc
loop
rol
xchg
out
test
lret
in
ljmp
lret
out
sti
sti
cmp
out
cmp
sti
out
out
clc
rol
loop
mov
out
test
enter
aam
cmp
cli
hlt
cli
test
rcr
test
test
enter
ljmp
call
out
rcr
repz
xor
aam
out
rol
or
loopne
xor
out
aas
out
aas
aam
test
test
jmp
jmp
cli
mov
les
cmp
cs
aam
in
rol
xlat
into
icebp
fnclex
fimuls
out
out
xchg
int3
in
aas
divb
shl
shll
xor
int
aam
xchg
cmp
mov
incl
into
lock
ljmp
clc
enter
add
test
cmp
add
clc
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
mov
push
push
in
jl
add
repz
roll
lret
xchg
fcmove
fildl
dec
ss
hlt
cmp
out
enter
rol
cli
lock
fxch
sti
loope
lret
xor
xor
in
out
shl
shl
fdiv
out
out
cmp
jecxz
loopne
sbb
fdivrp
fucomip
loopne
in
out
hlt
fsubr
cs
divl
loopne
rolb
out
cmp
stc
loopne
and
nop
in
shl
repnz
aam
jmp
ror
loopne
cli
testl
lret
into
jmp
jmp
jmp
cmp
aas
aas
aas
xor
fld
xchg
incl
fadd
xor
jmp
xlat
sti
not
lret
fsubr
ds
ds
mov
orl
leave
loop
out
ljmp
enter
int3
cld
fsqrt
fiadds
cld
sub
out
iret
repz
out
in
cs
icebp
in
int
in
ljmp
hlt
xchg
imul
mov
in
cld
in
enter
rol
fbstp
adc
cli
xlat
rcr
stc
lret
lret
cld
lret
mov
aad
lock
shl
xor
loopne
cmp
rolb
mov
loope
lret
hlt
fmulp
out
cmp
xor
cmp
repnz
and
rolb
int3
adc
aam
hlt
ret
aaa
xor
repnz
enter
stc
loopne
out
rolb
orl
ljmp
fdiv
shl
xlat
loopne
sti
div
hlt
xchg
lret
in
fmull
jmp
out
xor
out
aaa
aaa
into
jmp
test
fcmovb
rcl
leave
sbb
test
loop
in
mov
jmp
aaa
enter
loopne
idiv
out
ret
clc
idiv
clc
mov
iret
test
out
ds
aad
stc
fdivs
fucomi
cmpb
aad
std
testl
iret
sub
lret
enter
in
cmp
cld
neg
stc
movb
jmp
out
xchg
repnz
xor
lret
icebp
fidivrs
loop
cmp
xchg
faddl
lret
out
orl
cli
lret
sbb
loope
inc
ffreep
test
fucomp
lret
fprem
aaa
repz
out
lret
lret
cmp
out
adc
out
into
xchg
test
test
fcomp
repz
stc
cmp
fcmovnu
cmp
cli
fsubrp
mov
fisttpl
into
fiadds
in
cmc
stc
sti
jmp
icebp
xlat
out
cmc
testl
icebp
out
add
xor
ss
cmp
int3
ss
std
fst
leave
jmp
enter
addl
int
shlb
test
rol
cmp
shl
cld
mov
in
ror
sbb
repz
in
ljmp
fadds
xchg
fimull
clc
ret
repnz
int3
rcr
out
cmp
xlat
iret
filds
fadds
enter
shl
out
in
cmp
fcomi
aad
not
sti
cld
fcmovnbe
in
in
test
in
icebp
int
leave
das
aad
ss
cmc
clc
aad
cmc
fstp
fxch
in
test
mov
sti
out
mov
loope
jecxz
jmp
fsubrp
cmp
cmc
stc
repz
dec
ret
mov
call
call
out
enter
fcmovne
ljmp
flds
mov
sar
cmc
out
out
xor
bnd
leave
enter
cmp
repz
div
int3
out
cld
sbb
cs
xor
fsubr
iret
aaa
out
sar
aam
sar
adc
adc
into
xor
test
in
cmc
div
int3
xor
aad
test
cmp
aad
out
clc
xchg
mov
lret
hlt
out
idiv
jmp
ds
test
fsubrp
mov
cld
mov
sub
in
in
into
clc
fmulp
cld
iret
cmp
out
fiadds
lret
jecxz
rcl
cli
lret
xchg
sar
ror
in
rcl
fdivrp
lret
sub
mov
jmp
int
xlat
int3
int
cmc
or
idiv
and
jl
add
shl
or
xor
decb
xor
int
les
cmp
aaa
cmp
cmp
fcmovnbe
loop
test
aam
iret
icebp
ljmp
les
repz
out
loope
fidivrl
out
cmc
fucomi
inc
loope
fndisi(8087
in
int3
sub
repnz
ss
cmp
addl
xchg
ljmp
icebp
in
aaa
xlat
lock
lock
jecxz
cld
cmc
fucom
sti
mov
orl
out
xor
fmul
sti
jmp
icebp
cld
adc
shl
enter
in
enter
ror
iret
into
out
xlat
not
aaa
stc
xor
fsub
hlt
fcomp
test
or
orl
ss
jmp
cmp
in
stc
repz
fisttps
cld
hlt
in
lret
icebp
jmp
cli
leave
cld
cli
rol
fcmovb
fildl
fidivrs
mov
fninit
cmc
int3
imul
ds
xor
fstp
ror
sub
sbb
in
testb
jmp
lret
cmp
stc
xor
in
int
into
cmp
cmc
mov
int
in
lock
iret
xor
lock
out
hlt
aas
fcomp
shl
cli
icebp
test
fimuls
xchg
incl
fld
fcmovnu
aaa
idiv
clc
xlat
loopne
icebp
out
fildl
fdivrp
fcmovbe
shr
nop
fucomip
fsubp
fcomp
xor
repnz
sarl
std
cld
aad
iret
ret
sar
out
lret
shl
jmp
mov
ror
fld
fstpt
in
std
repnz
in
fcmovbe
icebp
ret
test
out
jmp
xchg
jmp
repz
int3
jmp
jmp
cmp
rcl
shl
hlt
loope
xabort
fndisi(8087
icebp
shl
aam
call
in
cmp
cld
out
ror
in
cmc
enter
test
in
aam
lret
sti
jecxz
int
cmp
cmp
sub
fxch
repz
hlt
les
repz
in
aad
jmp
enter
add
fdiv
jmp
enter
loopne
in
ffreep
xor
ret
xor
cmc
lock
push
out
test
mov
jmp
leave
lea
call
clc
aaa
lock
out
out
xlat
aam
jecxz
mov
stc
cli
lock
xchg
xor
lock
out
rcl
cmp
lock
in
mov
xchg
call
clc
aam
enter
fmulp
xor
shl
add
fcompp
mul
cmp
xchg
aad
fchs
cmp
icebp
call
idiv
fld
loope
repz
call
enter
out
jmp
loopne
jmp
cmc
enter
frstpm(287
fnsetpm(287
rcr
stc
in
fdiv
call
cld
xor
out
in
out
jmp
cmp
clc
and
addb
fsubr
int
lds
roll
call
jmp
cli
int3
into
shl
int3
enter
lock
cs
repnz
call
fadds
loop
cmc
jmp
fucomp
icebp
lret
mov
mov
vshufps
in
not
xlat
test
aam
clc
incl
mov
in
nop
icebp
lret
ss
shl
divb
test
aam
aad
xor
std
xlat
sti
filds
sub
int3
rcl
into
repz
repz
xor
fnstsw
ret
cmp
div
loopne
or
mov
out
out
roll
sti
cmp
fstp
ljmp
call
loopne
test
clc
cld
call
in
call
call
cmp
out
fucom
fdivp
hlt
decl
test
leave
loope
loop
out
repz
xor
rcr
cmp
cmp
test
ror
loop
loope
std
mov
ret
xor
sarb
xor
stc
ljmp
lock
ljmp
sti
fiaddl
jmp
lret
out
cmp
repz
in
shr
fcmove
in
in
fcomp
in
fst
out
in
fnstenv
xor
aad
fidivs
ret
aad
aad
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
sbb
jl
addb
jl
stc
jmp
xchg
int
xchg
aad
ret
rol
fcmovnbe
xor
hlt
fcmovnu
cmp
rorl
loopne
mov
jmp
divl
loop
out
repz
test
sti
repnz
in
in
jmp
ffreep
idiv
out
xchg
icebp
ds
xor
xor
in
repnz
cmp
loope
loope
rol
sub
loopne
xchg
popl
rcr
ss
icebp
ss
enter
out
ret
incl
nop
jmp
orl
ret
stc
aad
cmp
cmc
cli
add
sbb
out
clc
dec
orl
lret
xor
cmp
into
cmc
cmp
cli
cmp
out
call
enter
out
shl
das
xor
iret
hlt
ljmp
rcr
roll
xlat
ljmp
repz
rcl
hlt
ljmp
rcr
jmp
enter
sub
in
xor
enter
fmul
sar
shll
hlt
xlat
addb
fiadds
lret
int
jmp
fcomp
cmc
cmp
icebp
in
fadd
cld
ror
loop
repz
ret
stc
int
jmp
mov
xor
lock
cmp
shr
repz
loop
repnz
sti
test
out
into
ret
in
std
cld
lret
cmp
idiv
jecxz
inc
test
jmp
in
lock
fsubr
or
ss
xor
aas
fcmovbe
ffreep
cmp
fdivr
aam
loop
xlat
jmp
repnz
xchg
xor
int
shr
repnz
lock
rol
addb
call
loope
iret
call
out
aas
out
cmp
repz
jmp
in
ljmp
in
in
int3
xor
in
iret
out
loope
aad
sarl
xchg
lret
stc
in
xlat
out
lret
repz
ret
ds
iret
in
xor
shl
in
aas
adc
sarl
lds
sbb
xchg
in
iret
in
std
aam
cmp
cmp
and
test
fdiv
out
into
cli
in
cmc
cld
lock
cmp
jmp
hlt
rol
xchg
lds
out
jecxz
sti
rorb
lret
in
cmc
stc
std
in
leave
in
leave
cmp
jecxz
xlat
stc
lds
jecxz
or
in
stc
iret
lock
lock
ds
cld
add
cmc
std
in
int3
out
out
in
in
shll
out
sub
aaa
aam
cmp
ds
movb
mov
lret
hlt
icebp
loop
out
fcmovne
jmp
hlt
cmp
aad
fucom
fisttpll
mov
out
orl
out
sarl
ljmp
sbb
in
xchg
addb
jmp
cmp
int
sub
sarb
neg
jecxz
sub
fistl
ds
jmp
in
loope
filds
aam
call
std
cli
loop
cmc
out
stc
cmp
fmul
out
cmp
cmp
int
loopne
sarl
jecxz
fndisi(8087
and
enter
out
in
leave
fcom
ss
lock
cmp
in
std
std
mul
ret
fucomip
orb
cmc
clc
fcmovnbe
aaa
aad
xor
aam
test
out
roll
mov
loope
fdiv
cmp
cld
cli
cmp
iret
jecxz
cli
cmc
aas
aam
add
icebp
test
std
pop
rcl
int3
sub
enter
xor
lret
cld
aaa
test
sti
hlt
mul
mov
lret
xchg
lret
in
nop
into
repnz
rcl
les
leave
clc
repz
in
fdivrp
xlat
testb
std
mov
xchg
rcr
rorb
rcr
call
std
cmp
jecxz
cli
xchg
add
leave
in
fadds
in
ljmp
cld
iret
lock
sbb
fucomip
stc
aam
jecxz
add
in
loope
out
repnz
stc
loop
das
call
repnz
sbb
in
out
ljmp
subb
stc
iret
mul
jmp
neg
rcr
cld
idiv
in
xlat
out
add
jmp
ror
int
fcmove
mov
push
adc
cmp
add
xchg
xchg
fdivl
vpmuludq
rol
fdiv
fsubr
shl
fsub
repz
std
fsub
leave
loope
leave
in
mov
test
ljmp
xlat
fsubrp
stc
ljmp
std
repz
call
in
ljmp
cmp
xlat
cmp
out
loopne
rcr
fneni(8087
flds
rorl
int
clc
enter
into
xor
cmp
clc
out
stc
loopne
in
cli
mov
roll
xlat
in
aam
sarl
lds
aam
mov
leave
jmp
xchg
in
jmp
xor
ljmp
cmp
ret
sar
mov
into
iret
jecxz
sub
out
repz
ljmp
out
call
ljmp
rcl
int
xor
fsub
fdivr
ds
les
mov
enter
shl
lret
rol
into
lock
aaa
lret
jecxz
rcl
add
call
fists
fmul
fcomip
icebp
leave
leave
std
aaa
rcl
xlat
cmp
fcmovu
shl
neg
loope
or
lret
mov
icebp
loopne
loopne
out
xor
xor
std
rcl
shl
xchg
loope
xchg
loope
in
xchg
test
jecxz
shl
out
xor
loopne
shl
cli
rcr
in
out
loop
leave
xchg
xchg
repz
shl
sub
lret
xor
clc
sar
shl
clc
loope
clc
loop
mov
enter
std
faddl
rcl
repz
rcr
into
rolb
stc
repz
jecxz
out
into
rcr
loopne
enter
ret
out
cld
fdivrp
std
in
into
fadds
stc
fucomi
sbb
in
out
out
ret
int3
flds
shl
mov
std
iret
jecxz
in
enter
in
jmp
cmc
out
loopne
rol
cmc
testb
repz
lock
ret
repnz
cmc
sar
icebp
out
lock
neg
shl
incl
cli
fisttps
repnz
std
in
clc
ljmp
clc
loop
jmp
lea
into
loope
shl
in
cmp
loop
fld
jecxz
clc
iret
loop
xchg
out
in
ret
icebp
aad
aaa
in
cmc
sarl
sub
loop
xlat
test
out
addl
jmp
iret
addl
aad
std
cld
out
xchg
mov
cld
call
loopne
hlt
cli
aaa
ror
enter
hlt
cmpl
jecxz
ret
in
loop
jmp
loope
cmp
repz
xor
sti
loope
neg
in
repnz
out
lret
lea
enter
aaa
loopne
call
cmp
cmc
ljmp
fucom
repz
jmp
shr
xor
into
stc
out
neg
in
lock
ret
std
std
into
out
rolb
aam
call
rol
into
ret
out
ljmp
cld
cmp
call
in
das
xlat
hlt
icebp
shl
sarb
cmp
iret
repnz
loop
movb
iret
loop
test
in
xor
loope
aas
cmp
les
call
xor
jmp
cmp
aam
cmp
repz
in
fcmovne
fdivp
iret
fucom
xchg
lock
rcl
xor
jmp
ss
jmp
jecxz
cli
and
int3
or
in
into
popl
xor
cmc
fcmovne
aam
idiv
div
rorb
mov
call
jmp
rol
xor
shr
cld
cmp
cmp
in
mov
loopne
lds
xchg
rcll
lock
lock
aad
aad
ds
out
test
cmp
clc
loopne
mov
std
loope
shrl
lock
test
icebp
jmp
repz
jmp
faddp
decl
addb
hlt
shr
lret
std
ret
shl
repnz
mov
fadds
loope
fildll
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
and
sti
push
idivb
add
int3
ret
shr
int3
cmp
cmp
lret
fdivp
push
sti
call
or
icebp
mov
mov
out
das
ss
ret
into
ds
cld
repnz
cmp
loop
fiaddl
mov
ficoms
stc
in
sti
in
into
div
in
ljmp
in
loope
test
int
int3
and
out
into
shl
rcl
repz
sarb
shl
in
std
xchg
mov
ljmp
loopne
sub
into
xlat
icebp
lock
icebp
xor
loope
aam
fdiv
in
int
divb
aaa
not
fcomip
cmp
cld
cmp
neg
loope
call
aam
ljmp
shlb
ret
cmp
cmc
int3
repnz
std
jecxz
loopne
fucom
decb
out
loope
xor
icebp
repz
stc
int
repz
int3
shl
idivl
icebp
shl
aad
int3
mov
xchg
loope
xor
div
xor
loop
in
xlat
fstp
mov
leave
std
jmp
xor
jmp
repz
xor
xor
rol
sti
out
cmp
cmc
cmc
std
mov
out
cld
xchg
ds
jmp
out
cmp
stc
stc
ljmp
jmp
ljmp
shrb
out
clc
aaa
in
aam
neg
lock
aam
jmp
testl
test
jmp
in
icebp
aam
cmp
cmp
xlat
addb
clc
leave
xchg
lret
out
fld
aaa
out
shl
xor
aam
std
cmp
hlt
std
jecxz
hlt
jmp
into
cli
mov
test
nop
int3
jecxz
clc
out
fnstsw
loopne
aad
out
xlat
lock
test
jmp
in
xchg
iret
shl
sub
iret
shr
cld
cmp
rolb
addb
and
xor
aam
sar
out
jmp
loopne
push
std
testl
mov
rolb
mov
clc
lret
cmp
aas
xlat
aas
fdiv
ret
orl
loopne
ljmp
ds
aam
shll
cmp
cli
lret
clc
test
shl
test
fcmovnb
rcr
into
cmp
in
aam
aas
test
fndisi(8087
fcomip
lret
in
in
cmc
sub
xlat
into
enter
test
test
lret
mov
int3
in
popl
cmp
aad
sub
fadd
in
in
test
sti
sub
loop
in
in
fcmovnbe
hlt
cli
fsub
int
clc
cmp
test
testl
ss
ss
in
aas
repnz
sar
cld
dec
fcmovu
vpaddd
in
sti
out
lret
nop
cs
xor
clc
out
rolb
repnz
aam
mov
fcmove
hlt
int3
lret
ljmp
ss
in
in
xor
clc
into
out
sti
jmp
rcl
xchg
int3
loop
jmp
shll
xor
repnz
into
into
ret
cmp
fadd
cld
jmp
out
std
adcl
fdivs
call
add
std
movl
in
mov
aam
sub
call
shr
fdivr
testb
xchg
int
mov
loop
xchg
out
rol
rcr
xlat
in
leave
enter
repnz
stc
sar
cmc
test
aam
sbb
fmul
xchg
sti
out
sub
lock
out
shrb
jmp
idiv
xor
rcl
mov
int
push
mov
xchg
nop
or
stc
int3
int3
fdiv
into
int3
hlt
fistpll
xor
std
mov
jecxz
and
in
int
in
out
out
jmp
rcl
shl
idivb
fcom
imul
vpsubq
jmp
jecxz
xchg
jmp
icebp
cmp
cmp
jmp
cli
ret
xchg
enter
leave
cmp
in
jmp
fmul
in
fprem1
cmp
loop
hlt
hlt
mov
stc
fld
call
int
ret
xor
cmc
cld
sarb
fcmovnu
roll
addl
into
jecxz
loopne
cmpl
xor
jecxz
out
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
stos
adc
movsb
cli
jl
addb
jl
in
into
ds
repnz
fdivr
fmul
enter
out
int3
in
call
call
hlt
cmp
cmp
vpsadbw
in
stc
in
nop
incl
in
loopne
lock
fmulp
fidivrs
test
jecxz
enter
jmp
jmp
call
fnstcw
fcomp
stc
repnz
into
cli
jmp
in
clc
call
icebp
ret
shl
out
shl
xlat
out
into
aas
ret
xlat
loope
ret
cld
vpavgw
iret
xchg
sub
int
repnz
jmp
in
hlt
sti
cmp
loopne
leave
hlt
mov
test
in
enter
repz
aam
cmp
out
rcr
sti
ret
out
leave
shl
out
das
in
cmp
iret
stc
out
out
int3
fcmovnb
loope
not
repnz
sti
mov
std
xchg
loopne
sub
jmp
stc
repnz
aad
fidivl
sar
std
xchg
ret
xchg
lret
loop
ss
fcmove
in
xor
in
enter
iret
iret
rcl
test
cli
jmp
out
in
lock
aam
cmp
cli
iret
shl
in
fadd
out
rcl
test
leave
jecxz
int
xchg
enter
xor
out
cmp
xor
add
cmp
flds
stc
addl
repnz
xor
dec
fadds
ljmp
loope
shr
icebp
out
cmp
xlat
cmp
lret
jecxz
aas
cli
mov
out
rorl
out
hlt
cmp
les
shr
enter
sarb
cli
bnd
mov
int
xchg
hlt
fsub
out
cmp
in
out
cli
sarb
std
loop
cld
shl
addb
sub
cmp
out
enter
aas
sti
adc
xchg
rolb
int
rorb
jecxz
ret
clc
fcmove
shl
cmp
fdiv
mov
mov
out
ljmp
enter
stc
cmp
int
fcmovnb
aaa
sti
jecxz
loope
cli
fldpi
xlat
mov
xchg
fmull
lock
lock
loopne
repz
call
lock
ffree
loope
sbb
jmp
test
cmp
cld
aas
stc
ds
jecxz
out
sarb
fisttpl
fcmove
xchg
in
clc
out
ss
iret
cmp
fdivr
xor
jmp
cli
cli
call
stc
cs
icebp
xor
fdiv
in
call
into
in
out
add
mov
std
jecxz
repz
aam
divl
fdiv
std
int
loop
ret
neg
fst
enter
fmul
into
das
lret
aam
xlat
lock
lock
iret
aas
roll
int
clc
cld
xchg
lret
in
stc
int3
into
out
cmp
test
mov
jmp
test
out
repnz
call
int3
xlat
clc
cli
sti
sbb
loopne
loope
mov
loope
movb
and
ret
enter
xlat
int3
into
cmp
rol
hlt
cli
cmc
mov
mov
shl
icebp
xor
aad
in
fcmovbe
hlt
ror
in
fidivrs
cmp
cmc
in
enter
out
in
icebp
jmp
repz
xor
icebp
xor
aam
clc
jmp
jecxz
test
out
std
jmp
mov
jecxz
mov
shr
ret
int3
fcomp
ss
int3
in
loopne
add
loopne
stc
mov
in
mov
xchg
xchg
hlt
xor
leave
out
clc
out
out
repz
loopne
into
repz
mov
cld
cld
leave
roll
out
ss
fcmovnbe
fadd
in
mov
test
icebp
into
enter
fxch
out
in
cmp
or
out
rcl
repz
loopne
iret
and
shl
out
ljmp
idivb
shr
sar
icebp
clc
sar
in
loopne
jmp
cld
sub
xor
divb
xor
repz
testb
decl
mov
test
aam
xor
dec
mov
jmp
leave
int
int
int
mov
aam
pop
mov
jl
add
loope
fprem1
not
in
call
xchg
mov
in
cmp
imull
aad
call
loope
mov
enter
in
flds
ljmp
std
fdivrs
clc
aas
aas
cli
incb
fildl
in
repnz
repz
out
sti
lds
test
sti
fcmove
call
sarb
in
out
jmp
xlat
loop
fdivrp
repz
int
fmull
leave
ret
stc
jmp
int3
fdivr
in
out
out
loope
xlat
fiadds
fstl
fucomp
ljmp
iret
rcl
and
shl
int
loop
fsubr
xchg
lret
jecxz
repz
stc
fsubrp
xlat
stc
cmc
adc
xchg
rcr
sbb
jmp
in
repnz
xor
lock
fidivs
out
std
idiv
in
into
stc
cld
jecxz
mov
rcl
cmp
iret
repz
shll
in
xlat
fcmovu
stc
aad
ret
cmp
fcmovnb
cmp
call
shl
loopne
leave
int
xor
icebp
jecxz
xlat
addb
loope
in
fiaddl
out
jecxz
out
xor
aad
fsubr
or
cmp
cmp
fdivr
lds
loop
fmul
dec
mov
aaa
shl
fcomi
push
cli
repnz
sbb
rcr
ret
mul
rcr
xchg
aam
xor
xor
repnz
test
rcr
mov
decl
xlat
xor
fxam
in
xor
ljmp
cmp
mov
shr
xor
idiv
sub
clc
loopne
rcr
xchg
addb
in
xchg
ljmp
clc
ljmp
loop
loopne
xlat
jmp
lret
faddp
mov
icebp
in
sti
xor
lret
fucom
cli
hlt
cmp
lret
enter
xchg
out
jmp
aam
les
xor
fsubr
rcl
cmp
repz
fiaddl
repnz
std
ss
ret
enter
iret
dec
sbb
test
clc
test
hlt
test
test
int
xchg
xchg
out
xor
jmp
lret
int
call
test
mov
lret
int3
leave
call
into
cmp
fnstcw
aad
vpavgb
in
incb
fadd
sub
jmp
into
fstpt
fsubr
jecxz
fdivrp
ds
fyl2xp1
test
out
jecxz
in
repz
clc
out
out
out
cmp
out
ret
repz
faddl
mul
loopne
call
enter
cmp
cs
aaa
cmp
cmp
jecxz
adc
fcmovbe
xchg
out
lret
out
mov
shlb
cmp
sar
sti
fprem
icebp
loope
xlat
leave
enter
loopne
jmp
xor
sub
icebp
leave
fcos
fcom
cmp
vpsrad
std
fcmovu
testb
cld
aaa
xor
xor
leave
leave
in
int3
call
ret
xlat
mov
jecxz
fiaddl
xor
xor
fxch
iret
lret
cmp
rcl
cmc
sti
test
xchg
cld
ror
mov
ljmp
out
cmc
iret
fdecstp
fmul
clc
sti
fidivrl
fcmovb
ret
rorl
iret
jmp
lret
in
out
iret
xor
int
sti
in
loop
loopne
cmc
mov
cmc
in
sti
mov
rol
enter
aad
dec
repz
ret
in
loope
rcr
rcr
sbb
aam
in
shl
into
aas
shr
icebp
out
iret
jmp
rcr
call
shl
leave
mov
xchg
mov
movb
xor
xor
in
fmul
out
clc
icebp
rcr
cld
test
mov
in
xor
xchg
fsubrp
xor
repz
loop
out
lock
xlat
out
lock
aad
out
icebp
ret
xlat
loop
clc
lret
sar
in
mov
lret
xor
aaa
imul
ljmp
out
ret
enter
mov
jmp
int
shl
xor
in
sarl
ret
repz
out
xchg
add
add
aad
leave
lret
fstp
aad
mov
mov
mov
jl
addb
jl
aam
test
in
call
sub
fcmovbe
aas
loop
repz
idiv
in
loopne
sub
jmp
imull
xor
call
sub
ret
cli
idiv
cmc
mov
test
orb
hlt
ljmp
push
rcr
out
out
fdivr
loope
fldl2t
ljmp
jmp
les
stc
out
int
sarb
cmc
adc
mov
cli
out
mov
out
aad
ds
aaa
xor
hlt
shr
fdivr
cmp
cmp
call
mov
int
ror
xchg
xor
shr
out
hlt
out
jmp
out
repz
loop
test
aam
shl
int
lock
push
lock
xor
stc
in
cli
cld
hlt
lret
dec
loop
stc
cld
test
jmp
cli
mov
xchg
in
jmp
ljmp
repz
leave
xchg
std
mov
vpsubusw
idiv
fdivrs
shl
ss
rcl
out
jmp
inc
mov
cmp
repz
int3
into
stc
in
fstpt
lock
icebp
hlt
mov
cli
mov
out
mov
shll
in
cmp
ss
stc
sti
fsubrp
rol
fdivr
ljmp
loopne
cmc
lret
leave
out
aad
fmul
out
loopne
std
mov
fmull
in
int
xor
lret
jmp
stc
fstp
jecxz
fscale
loopne
clc
repz
jmp
ljmp
repnz
ror
int3
jmp
cmp
loopne
repz
jecxz
cli
fucomp
std
call
xor
leave
cmp
fcmovnu
loopne
iret
call
fcomp
fldl2t
fdivr
out
mov
cmc
ljmp
leave
ss
dec
aad
aad
out
std
mov
call
xchg
jmp
idivb
lock
clc
cmp
in
not
xlat
not
incl
lock
lock
mul
cmc
xor
sarl
fdiv
cmc
out
repz
sub
stc
fcmovu
int3
ljmp
div
sti
cmp
cmp
cli
hlt
fcomi
mov
addb
in
out
loop
out
into
aam
aas
jmp
fstpt
sbb
loop
jecxz
faddl
loop
mul
sti
aad
repz
mul
fsubr
test
jmp
stc
stc
test
mov
jmp
ror
xor
idiv
hlt
ret
aad
xlat
aam
aad
hlt
in
xchg
mov
out
mov
cmc
xor
in
in
inc
add
roll
sbb
aad
icebp
xlat
das
divl
repz
shl
into
cmp
hlt
sti
ret
stc
xchg
xlat
imul
in
call
enter
cmp
not
shr
mov
icebp
call
xor
aad
hlt
call
cld
cmp
fxch
rcr
mov
xlat
call
xor
jmp
lds
fsubr
icebp
imul
jecxz
test
xchg
sti
icebp
loope
xchg
rol
call
xor
fnclex
iret
cmc
roll
into
dec
hlt
loopne
rol
in
iret
aam
repz
shr
in
cmc
sti
out
jecxz
fldl
lea
rol
jmp
lock
cmp
aam
rcl
mov
call
xchg
jecxz
in
int3
cmc
call
int3
ss
clc
in
in
cmp
rol
call
icebp
mov
loopne
jecxz
aad
std
rcr
cmp
fdiv
cli
sar
stc
fsin
enter
mov
div
ret
shll
out
div
mov
cmp
out
out
out
shl
aad
sti
ror
jmp
icebp
fcomp
repz
and
cmc
call
rorl
into
ret
rcl
les
in
cmp
hlt
fcmovb
out
jecxz
repz
fxch
ljmp
jecxz
fcomip
rol
int3
shl
fld
dec
out
cmp
cmpb
xchg
in
fmuls
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
aam
mov
add
xchg
xchg
hlt
int
rol
loopne
out
ljmp
icebp
xlat
aad
in
jmp
ffree
out
fadds
xor
clc
in
enter
test
cld
loopne
cld
ds
fdivr
sti
mov
repnz
shll
call
ljmp
test
hlt
std
cli
ds
sti
fiaddl
xor
ret
sti
iret
les
shl
cmp
ret
std
test
test
fcmovnb
cld
leave
mov
xlat
sub
aad
iret
cmpb
cmc
aad
in
or
xchg
add
call
into
fldl2e
icebp
roll
leave
aam
clc
sti
out
mov
jecxz
bnd
enter
lret
rol
sub
lock
leave
fmulp
into
cld
fsubr
int
xlat
ret
cmc
xor
std
rcl
repnz
shl
loop
xchg
mov
mov
xchg
ficoml
xor
int
cmp
add
frstpm(287
jmp
loope
fcmove
test
icebp
ljmp
rcr
leave
cmp
int3
cmp
out
and
imul
jmp
mov
test
ror
xor
fisubrl
in
out
cmp
icebp
cmp
std
cmc
jmp
cmc
call
addb
cmp
int
repnz
leave
clc
out
loope
cmpl
lret
lds
sub
lret
xor
repnz
hlt
lret
cmp
cld
ds
lret
jmp
ror
fnstenv
icebp
rcr
shl
fcomip
cmc
imul
clc
neg
clc
mov
mov
enter
out
lock
aam
or
cli
stc
fdivr
les
mov
leave
in
aad
aas
cmc
xlat
aam
lret
aas
test
repnz
xchg
clc
fdivr
out
nop
loope
into
into
out
loop
int3
in
lock
ret
cmp
fcmovbe
mov
icebp
fsubr
iret
fcomip
mov
in
rcl
cmp
fcmove
cmp
shr
xor
idiv
out
rcl
fdivr
fldl
shl
call
cmp
loope
shr
mov
addb
dec
ror
addl
shll
fidivrl
fdivrs
cmp
cli
in
out
cmp
ffreep
idiv
out
mov
mov
iret
rcr
lock
aaa
not
enter
testb
mov
decl
in
test
jmp
ss
out
cmp
int
aam
aad
leave
loope
cmc
hlt
jmp
filds
jecxz
out
in
in
icebp
sti
ror
cmp
aas
cmp
cmc
lock
fmul
in
in
aam
leave
aaa
shr
aad
in
in
xor
iret
icebp
rcl
orb
mov
mov
xchg
jmp
xlat
enter
icebp
int3
lret
std
fst
test
aad
stc
fsubr
in
mov
call
xor
aaa
idivl
in
test
test
out
or
repnz
cmp
sar
rcl
cmp
shr
call
xlat
fildl
ljmp
out
mov
repz
aad
cld
cmp
iret
shl
fstp
jecxz
fcom
hlt
cld
mov
sti
test
enter
in
loope
rcr
cmc
in
cmp
adc
out
lock
hlt
xchg
test
jecxz
jecxz
repnz
cmp
xor
cmc
xor
cmp
int
aas
aas
addl
call
hlt
jmp
xor
xor
aad
aam
jecxz
loope
hlt
clc
xlat
ret
fdiv
mov
clc
test
adcb
xor
xor
leave
repnz
lret
cli
icebp
idivl
aad
repnz
clc
out
enter
int3
ret
jmp
ss
int
les
in
ret
aam
clc
lret
repz
xchg
int
cs
rcl
cmp
xlat
incl
add
enter
jecxz
icebp
xchg
in
fld
ljmp
fst
cmp
xor
shl
test
cld
test
lds
rcl
cli
in
not
xorb
ljmp
cmp
movb
jmp
xlat
aad
rcr
fstp
sub
addb
jl
shl
int3
out
lret
stc
jmp
int
jmp
ret
clc
fsub
sbb
enter
icebp
fucomi
shl
ret
xor
fcmovbe
into
clc
repnz
not
incb
jmp
xor
shr
ljmp
lock
hlt
fdiv
repz
loop
fcomp
mov
jmp
call
cmp
cmc
not
lock
mov
mov
out
mov
xchg
cli
xchg
ret
ljmp
into
cmp
fcomi
jmp
cli
addb
and
in
in
jecxz
divl
lret
rcr
testb
inc
cmp
loope
xlat
ljmp
fmulp
cs
leave
lret
cmp
cmp
cmp
ret
fadds
in
out
cmpb
vcmpps
lret
fmul
shl
shl
cmp
test
xlat
stc
xor
add
push
repnz
jecxz
in
repnz
fadds
iret
in
rol
xchg
out
in
fucomp
sti
test
aaa
fucom
into
fldl
aad
out
xchg
jmp
xchg
mov
mov
aam
jmp
lret
xor
testl
jecxz
cld
aad
xor
cmp
aad
clc
sarb
shl
dec
and
jmp
shl
xchg
loop
out
shlb
lock
stc
fstp
fcmovnbe
out
aas
xlat
fcmovnb
cld
leave
mov
idiv
repz
jmp
xor
xor
aam
in
xchg
mov
mov
repz
ret
aad
fsubrs
int3
shl
aam
lds
enter
fdivrp
and
repnz
int
ret
jmp
ror
lock
aam
lret
mov
fisttps
cs
xor
aad
cmpl
roll
idiv
in
test
mov
shll
in
aam
mul
fdiv
ret
cli
fistpll
aad
std
fld
test
mov
xorl
repz
stc
cli
iret
rcl
xor
std
cli
ret
test
test
xchg
xchg
xchg
jecxz
rcl
hlt
call
jmp
and
imul
out
xchg
mov
ljmp
leave
aas
aam
fsub
stc
loope
fcmovb
ds
hlt
sbb
leave
int3
fisttpll
leave
xor
repnz
in
hlt
lock
cmc
aas
hlt
jmp
sti
fptan
test
icebp
mov
iret
xchg
icebp
int
aam
enter
aas
int3
lret
hlt
into
fnstcw
sti
idiv
int
mov
test
ljmp
cmp
jecxz
ds
rolb
cli
jmp
call
cli
xchg
mov
xor
int3
call
sarb
aad
xlat
aam
clc
fcmove
out
fstl
test
jecxz
jmp
fcmovnbe
rcl
out
ffreep
ret
in
in
les
test
loope,pt
imul
icebp
aad
fcom
cmp
rcl
shl
in
repnz
xlat
fadd
shr
std
out
out
xor
xor
aaa
jmp
cmp
out
dec
neg
sti
ret
out
in
cli
int
ljmp
aaa
sub
clc
icebp
jmp
in
cmp
fsub
loope
in
jmp
in
and
shl
jmp
clc
in
repz
cmp
testb
sti
aad
test
in
xchg
mov
xor
xor
loope
faddp
cmp
in
xlat
iret
mov
rolb
fsubr
ffree
fcmovu
fcmovnbe
shr
iret
ffree
loope
addl
sti
into
lret
xchg
ljmp
in
cmp
iret
cli
rcr
idiv
mov
test
xor
mov
out
ror
clc
in
aaa
clc
xor
fdiv
xlat
ror
aam
out
cmp
movl
and
in
jecxz
aaa
cmp
cmp
lock
repz
icebp
fucomp
sar
iret
enter
jmp
clc
sarl
shl
stc
lock
icebp
lret
rorb
xor
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
out
cmp
cmp
sar
sti
cmp
in
aad
enter
xchg
mov
in
cmc
shl
into
imul
fsubrp
loope
in
in
fiadds
hlt
fdiv
mov
xor
fxtract
shl
stc
in
out
fstpt
clc
rol
stc
xchg
xchg
cmp
stc
fstp
out
orl
aad
enter
xor
std
cmp
cmp
loop
out
out
loopne
mov
xchg
das
faddp
clc
ret
ss
push
jmp
aas
hlt
out
fnop
std
cld
popl
jmp
shr
jecxz
lock
int3
hlt
leave
loope
test
fdivp
in
call
leave
int
rorl
jecxz
lret
icebp
cmp
cmp
out
cli
out
hlt
xlat
jmp
ret
lea
roll
div
out
fidivrs
cmp
sarb
jmp
hlt
and
jecxz
cld
shlb
shll
int3
int
dec
fucomip
xlat
aam
aad
fdivrp
loopne
ror
cli
cld
in
jmp
mov
cmp
int
fxch
cmp
cmp
into
cmp
loop
xlat
sti
mov
xor
aaa
loopne
call
enter
repnz
jecxz
mov
fdivrp
out
mov
xchg
cmp
lock
hlt
aad
repz
stc
hlt
cmp
cmp
repz
lret
fiadds
jmp
xor
vpaddsw
aas
xlat
shr
neg
fstpt
into
enter
test
int3
lock
aad
fsubr
jmp
jmp
icebp
aaa
xlat
cli
aam
aam
ds
rcr
mov
shl
rcl
xor
repnz
out
clc
sar
in
fnstsw
bnd
ljmp
lret
cmc
jmp
out
ror
repz
fdiv
xlat
clc
inc
mov
xor
shl
out
xor
icebp
cmpl
rorl
fiaddl
xor
neg
lock
repnz
cli
stc
out
movl
fsubp
rcl
ljmp
sarl
aam
addb
in
neg
movb
fbstp
aaa
mul
xor
cli
hlt
cld
fcomi
into
fxch
cmpb
fmulp
test
out
xchg
xchg
aas
sub
call
stc
hlt
repz
aam
fnstcw
rol
jmp
mov
xchg
mov
xor
ss
jmp
aam
std
fcmovu
leave
fcmovu
std
fxch
fcmovnu
lock
out
loopne
xor
icebp
cmp
fndisi(8087
cmpl
out
stc
testb
in
jmp
cld
aam
repz
cmc
aam
stc
ds
fsubp
into
xchg
cmp
fisttpl
mov
icebp
ret
sub
xlat
xor
lock
iret
fldl
loop
shl
lock
lock
jmp
loop
int3
out
clc
cmp
cmp
cli
test
aam
xchg
sti
ficoms
lret
ftst
fstpt
fnstcw
into
cmp
shl
repnz
xchg
repz
lock
out
hlt
enter
ror
xor
int3
xor
rcr
test
aas
loope
fcomip
mov
int
loop
jecxz
jecxz
xor
mov
sar
clc
cmp
cli
fiadds
mov
div
shl
in
shr
fmulp
int3
fdivrs
xor
cmp
mov
faddl
xchg
xor
fdivl
aam
ror
aas
sar
cmp
fsubp
neg
lret
in
mov
jmp
jmp
cmpl
xchg
std
in
test
push
enter
xor
icebp
cli
sarb
repnz
jecxz
cmc
cld
jmp
jmp
test
inc
aad
into
lret
into
in
std
call
aam
in
icebp
xchg
sub
mov
cld
lock
cmp
das
clc
fcom
cmc
rcl
aad
cmp
out
cli
mov
int
test
fildl
call
sub
cmp
ss
rol
cmp
bnd
pop
loop
xchg
mov
in
xor
stc
fcmovnu
cmp
testb
add
mov
sahf
add
add
lret
fcmovne
inc
clc
adc
jle
push
or
jl
addb
jl
mul
les
mov
mov
nop
loope
in
in
xlat
xlat
jmp
idiv
rcl
ret
mov
cmp
in
mov
rcl
stc
xor
cld
aam
div
in
lock
ds
clc
sub
repnz
lret
xor
cmp
fprem1
ds
in
fstp
jecxz
ffree
loope
in
out
test
in
out
enter
ss
sbb
out
out
rcr
fadds
lock
call
out
cmp
aam
lds
loop
imul
xchg
loopne
repz
ds
icebp
cmp
rcr
out
in
cmc
fdivp
ljmp
roll
in
out
leave
aam
out
add
jecxz
fdivp
std
std
neg
in
mov
repnz
rclb
ss
out
cmp
cld
std
loopne
fsqrt
jecxz
mov
lret
jecxz
shrb
clc
xor
cli
xor
fiaddl
cmp
aam
lret
xor
fmulp
rolb
aaa
in
idiv
int3
xor
into
ror
sarl
xlat
ffreep
cmp
nop
xchg
jmp
icebp
fscale
cli
aas
cmpb
cmc
aas
out
out
fcomi
jecxz
jmp
ret
into
fcmovbe
xchg
ljmp
cld
clc
fld1
or
rol
lock
fmuls
jmp
call
in
into
rcl
cmp
ret
cmp
jmp
mov
xchg
lock
out
jmp
cmp
out
cmc
in
in
int
into
jmp
rcll
jecxz
lret
clc
repnz
fsub
sti
inc
aam
in
mov
stc
cld
cli
lock
lock
lock
lret
ret
ret
std
test
fcomp
in
cld
cli
enter
ljmp
int3
iret
hlt
cmp
in
rol
rolb
idiv
out
sub
aad
aam
loope
lret
jmp
sti
int
rcr
stc
in
fcmovne
or
jmp
loop
aaa
loop
xlat
not
cmc
enter
lret
cmp
iret
ret
aam
aam
call
fucomip
mov
loopne
out
xor
ss
mul
sar
fadd
cmp
mul
mov
in
jmp
not
icebp
aam
aaa
repz
xlat
repnz
mov
repz
stc
int
mov
lock
iret
test
jmp
fincstp
ss
in
fdivp
in
test
clc
fcmovb
leave
in
or
mov
loope
int3
int3
xor
hlt
fdivrs
call
fiadds
test
incl
in
std
divb
rol
out
ss
cmc
fcmovne
icebp
loope
xlat
in
ljmp
shr
xchg
lret
sub
shr
cmc
sar
shl
xlat
cld
icebp
loop
std
std
xchg
xchg
fcmovnu
test
out
cmc
aad
ss
fcmovbe
xor
add
add
xchg
sti
jmp
int
repz
aam
iret
lock
call
rcl
fcom
rcl
cmp
loop
hlt
stc
fnsetpm(287
clc
nop
in
mov
shl
icebp
xor
idivl
cmp
icebp
inc
iret
jecxz
xrelease
fsub
flds
loop
jecxz
xor
out
imul
sti
ror
rcr
aam
jecxz
neg
call
test
fsub
cmc
mov
cli
hlt
in
aas
fdivl
rcr
std
cmp
jmp
in
jmp
mov
clc
call
int
rcr
xchg
addl
shrl
cmc
lret
int3
out
lock
in
xor
std
cmp
rcl
repz
jecxz
stc
addb
call
out
ss
ds
shl
test
mov
mov
xchg
in
xor
int3
fdivr
cmp
shr
xlat
loop
fcmovne
loopne
out
loope
lea
int3
mov
aaa
shl
xor
xor
in
xor
lock
xor
stc
enter
cli
in
in
enter
and
ljmp
aas
repnz
fcmovb
in
inc
clc
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
dec
and
into
lcall
in
jmp
int
rcr
icebp
into
das
icebp
in
sti
std
ror
int3
cmp
cmp
cmc
aad
std
movb
bnd
repz
ljmp
rol
fsubr
loop
leave
call
loop
rclb
das
in
test
icebp
fdivrs
ret
aam
cli
xchg
lock
out
clc
cld
leave
sub
leave
shrl
cmp
cld
in
leave
ss
icebp
loope
repz
mov
lret
test
popl
std
ljmp
ljmp
rcl
loopne
hlt
icebp
std
int
fcmovbe
iret
fmul
in
mov
aad
cmp
ss
loopne
fdivr
in
rcl
in
mov
mov
repnz
call
neg
cmp
jecxz
jmp
xor
stc
test
loopne
mov
xchg
xor
iret
leave
call
lret
mul
rolb
loope
in
std
icebp
faddp
stc
out
in
cmp
leave
lock
iret
ss
xlat
rcl
xbegin
repz
hlt
out
in
ret
xlat
repz
jmp
cmp
cmp
fcompp
hlt
std
test
fimull
hlt
loop
hlt
shl
jmp
cmp
hlt
in
out
cmp
fstp
orb
fucomip
out
shr
xor
xor
repz
repnz
sar
call
fucompp
test
int3
mov
aam
loopne
lret
hlt
fidivrl
sti
into
in
enter
out
ret
jmp
cld
std
sti
lret
incl
int3
cmp
in
out
jmp
idivl
fcmovnu
aam
in
in
loopne
in
xchg
xor
lock
jmp
fxch
out
int3
std
loope
addb
hlt
jmp
lret
loopne
ret
jecxz
fcomi
fxch
jmp
loope
cli
loope
ret
xlat
sar
mov
mov
fucomp
iret
cld
lret
xchg
iret
iret
aad
into
cmp
fistpll
aas
xchg
aad
fld
loop
out
out
les
lret
lret
in
cmp
cmp
in
clc
fsubr
loop
loop
lret
in
fmulp
test
lret
push
ljmp
cmp
repz
fcom
cld
repnz
sti
fmuls
rol
cmc
icebp
hlt
lret
loopne
icebp
sarb
cmp
icebp
rol
loop
fiadds
fcomip
in
jmp
xlat
in
into
aad
shl
imul
cmp
int
rol
faddl
mov
loop
repz
leave
cs
stc
in
lret
ret
neg
test
enter
in
loop
sti
and
shlb
rol
int3
out
cmp
xor
or
loopne
lock
cld
xchg
iret
out
enter
das
hlt
stc
call
testl
sbb
call
int
cli
orl
lret
in
sar
cmp
loop
in
icebp
add
std
int
std
mov
xchg
in
jecxz
xlat
imul
jmp
out
aad
stc
mul
addb
std
mov
sti
fisttps
out
call
not
cmp
cli
adc
lock
sar
aad
or
xchg
int
ljmp
ds
sub
aas
test
leave
fucom
mov
xchg
fst
cmp
aas
aad
out
call
cmp
sti
rcl
out
aam
hlt
xacquire
ljmp
in
enter
fdivp
cmc
cmp
cmp
cmp
shl
test
mov
fadd
xchg
icebp
icebp
out
in
cli
iret
cld
call
loop
ret
aam
in
cmp
ds
lret
call
in
ret
lock
into
cmp
loopne
rcr
fsubp
ret
cmp
enter
int
cld
loope
cmc
xor
clc
out
jmp
stc
test
fincstp
loop
test
call
xor
iret
sti
cmp
clc
repz
fptan
cmp
in
std
fucom
in
fmuls
xor
fxch
repz
cmp
xor
loopne
sar
cmc
leave
loope
mov
sti
fcomi
test
sub
xor
xor
shl
cli
imul
fidivrl
loope
idiv
aad
sub
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
cmp
jl
add
fcomip
loop
fdivp
shrl
call
xor
int3
ret
aad
cmp
mul
ror
jmp
loopne
aam
cmp
cli
out
in
cmp
dec
repnz
sbb
clc
test
out
out
out
in
int3
ss
in
out
fadd
cmp
cmp
repnz
rcl
stc
loopne
out
mov
loopne
faddl
clc
cmp
sarb
repnz
ror
xorl
test
add
addl
xlat
loope
lret
ds
repz
jmp
in
xchg
lret
call
repz
out
cmp
cmp
iret
clc
in
cmp
sarb
rcl
fcmovnb
xchg
loopne
out
fisttps
fnstenv
fsubr
shr
in
call
sti
inc
cmc
shl
test
orb
hlt
hlt
cmp
int3
out
lret
hlt
ljmp
cli
xlat
enter
std
jmp
out
jmp
lret
shlb
cmpl
loopne
dec
inc
out
iret
out
xchg
test
lret
in
std
leave
fsubp
xor
test
test
mov
repnz
loopne
in
int3
xor
std
in
not
and
or
leave
mov
shl
fcoml
hlt
cli
cmp
in
idivb
clc
repz
icebp
in
xchg
repz
xchg
out
fldl
out
loop
cs
lret
stc
in
cmp
rolb
icebp
in
shl
xor
int3
jmp
adcb
xor
xor
iret
cmp
cmp
cmp
icebp
not
in
leave
fimull
ljmp
cmp
in
iret
fstp
in
sarl
cmp
in
fildl
mov
int3
xchg
loope
ret
les
aaa
out
leave
out
ror
stc
icebp
clc
iret
testl
nop
in
rolb
sti
jmp
out
jmp
fcomip
ret
fmul
out
jmp
mov
adc
xlat
rcl
out
cmp
repz
ds
repz
flds
call
divl
shl
cmp
iret
ljmp
mov
adc
iret
xchg
int
mov
repnz
loopne
rcr
xor
out
cmp
div
sub
shr
sar
cli
lds
shr
cld
xchg
lret
shl
int
fnstsw
in
fcom
into
lock
in
test
cli
mov
lret
aam
int3
cld
out
into
push
into
fidivrl
ds
xlat
in
xabort
call
lock
enter
hlt
cmp
ljmp
xchg
std
cmp
mov
out
cmp
test
xchg
leave
test
jmp
sar
leave
int3
cmp
cli
ret
fnstsw
mul
fcomp
xlat
mov
leave
cli
std
loope
lret
xor
stc
lret
fcmovu
jmp
repnz
test
mov
fcmove
lret
das
fdivp
not
enter
fucomip
fyl2x
test
repnz
xchg
enter
fisttpll
int3
rcr
into
clc
hlt
stc
jmp
clc
test
xchg
out
rol
fld1
stc
fimuls
test
shl
in
rcr
ss
xor
int
in
addl
mov
fcom
ror
in
lock
sti
xchg
jmp
out
clc
jmp
call
call
clc
ds
fildl
mov
test
loope
sub
out
loop
xor
cmp
divb
aaa
div
shlb
loop
cmp
sar
movl
in
out
sti
xlat
xor
fdivr
stc
lock
sti
rolb
fadd
cld
int3
jmp
in
shl
lret
xor
hlt
fnsave
cli
out
xor
repz
sub
loop
loop
jmp
jmp
cmp
sarb
sbb
xchg
jmp
repnz
enter
rorb
lock
shl
cmp
cmp
std
addb
and
fucomi
loop
cli
int
test
into
ss
in
std
clc
in
shl
and
cmpl
fsubr
in
stc
int3
loopne
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
shl
xor
enter
xor
iret
stc
sar
iret
icebp
loopne
or
call
fst
sub
cmp
fucomp
lock
ret
cmp
aas
xchg
in
addb
jmp
into
out
cmc
repz
jecxz
cmp
cli
in
xlat
aad
cli
ds
hlt
out
fadds
movb
lret
jecxz
xlat
enter
fildl
shl
loop
repnz
leave
aam
ljmp
aas
int3
leave
into
in
xor
xlat
fsub
hlt
sti
out
fcomi
cmp
stc
loopne
test
loopne
nop
xchg
lret
xlat
shll
into
std
ds
cmp
ret
ds
cli
in
fld
test
loope
out
loope
cmp
cmp
clc
call
xor
repnz
mul
xchg
aas
mov
mov
out
int
mov
xor
clc
loop
aaa
jmp
std
std
cmp
fadds
shl
mov
clc
test
in
jecxz
aam
aad
lds
out
jmp
loope
in
out
cmp
cmp
incb
enter
lock
shl
int3
rcl
int
aaa
loope
sti
rcl
iret
mov
cmp
ljmp
in
xlat
lret
rol
cmp
fst
xor
cmp
xchg
ljmp
call
enter
int3
lock
rcr
in
neg
stc
and
fiaddl
fildl
lock
xor
enter
xlat
aad
jecxz
xchg
sti
aad
out
mov
int3
jmp
fdivs
sti
shl
xlat
aaa
fldl
in
cmp
loope
cli
jecxz
loopne
xor
cmp
repnz
cmp
cmp
repz
mov
fdiv
lea
in
rclb
aaa
xor
cmp
mul
int
les
dec
imul
fmull
lret
call
leave
imulb
hlt
cmp
sbb
loop
ffree
cld
loope
lret
test
mov
lret
xor
xor
fmul
lock
imul
into
out
loop
ret
ret
loop
out
fucomp
hlt
xchg
aam
loopne
in
cmp
lret
in
aas
stc
add
orb
lock
jmp
xor
fcmovnb
sti
fidivrs
addb
mov
mov
rorl
in
xor
fldl2t
int
jmp
aad
and
ljmp
ficoms
ljmp
cli
out
cmc
hlt
xor
loopne
loope
test
sub
in
fsub
rcll
out
cmp
fnop
cmp
cmp
cmp
addb
enter
mov
lret
iret
fcomip
xor
not
loop
out
xlat
loope
cmp
cmp
xor
xchg
movl
xlat
idiv
cmp
fsubr
int
into
int
aam
xlat
fsub
mov
cli
sti
out
iret
lret
shl
jecxz
leave
sar
in
aaa
fidivrl
fnop
ds
lock
sti
rcl
decb
mov
loope
aas
in
xor
out
enter
cli
fidivrs
lock
clc
loopne
loope
loopne
stc
rcr
lret
movl
cli
dec
lret
fdivr
xchg
sbb
fsubrp
test
mov
incl
sar
into
xor
in
sti
addl
enter
sti
xchg
xchg
lret
mov
xor
out
lds
ljmp
cmpb
cli
ret
jecxz
ljmp
fimuls
hlt
out
xor
cmc
fnstsw
shll
xlat
out
idiv
aas
mov
int
out
cld
xchg
movl
fbstp
ljmp
lock
faddl
lock
cmp
test
int
icebp
int
lock
test
out
aam
mov
jmp
into
xchg
hlt
xchg
out
int
out
repz
lret
into
cli
aad
loop
aas
in
addl
and
int3
out
sub
out
repnz
int
rcr
fisttpl
xor
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
mov
jl
add
jmp
adc
in
f2xm1
icebp
cmp
lock
aad
xlat
lds
mov
ret
mul
stc
aam
repnz
rolb
in
xchg
int
in
enter
in
out
in
ss
test
hlt
cmp
stc
fcmovnb
jecxz
lret
cli
rcll
int3
xor
call
loopne
lock
in
loope
aam
mov
flds
int
xor
leave
call
addb
mov
ror
mov
fisubrs
xlat
icebp
in
xor
fidivs
aam
aaa
in
out
fiadds
leave
mov
cld
xchg
jecxz,pn
fsub
out
cmp
fsubr
cmp
cmp
ds
ret
leave
adc
xchg
ss
shlb
cmc
cmp
cli
ljmp
lock
xchg
enter
lret
ljmp
leave
leave
sarb
aas
in
inc
xchg
cli
orb
in
repz
test
fdivs
call
in
fdivr
aad
cmp
cli
xchg
repz
out
aam
jmp
or
test
idivb
cli
cmp
call
xchg
hlt
cmc
in
into
shll
out
clc
loopne
clc
sti
ljmp
int3
rol
in
jmp
into
leave
loopne
hlt
fcomip
aad
test
dec
xchg
lret
enter
loop
cld
xor
cmc
leave
int3
sti
das
enter
aam
cmp
loopne
shl
test
lret
inc
iret
cld
iret
mov
int3
loopne
ror
xlat
cmp
lret
cmp
aad
out
aad
jmp
cli
int
clc
stc
loope
xchg
xchg
test
vpsubusb
icebp
aaa
repz
ror
aam
aas
sti
sarl
xlat
cmp
rcr
lock
lock
shl
stc
icebp
leave
idiv
lret
out
repnz
cmc
ret
cli
neg
loop
xchg
lret
cli
in
cmc
out
jecxz
stc
aaa
sti
ror
divl
cmp
int3
aas
sar
fsubr
test
xor
mov
out
fxch
xor
aaa
jmp
lock
aam
fpatan
xchg
fcmovnb
xlat
cli
leave
cli
lock
shr
ss
sarb
cli
fcom
cmc
stc
in
loop
cli
int3
xchg
lock
icebp
xor
cmp
int
lret
cmp
icebp
repz
aad
loope
in
lret
loop
sar
loop
call
test
into
aad
cmp
rol
testl
enter
in
lret
xlat
aam
sbb
icebp
rorl
lret
in
test
xor
xlat
div
iret
cmp
mov
loopne
loope
testb
test
lret
ret
sub
div
cli
shr
aas
loope
out
xlat
leave
stc
test
out
addl
shl
cmp
jmp
jmp
lock
in
rcr
or
fcmove
mov
les
lds
out
aas
aaa
std
adc
rcl
xchg
call
fsub
cli
lret
xchg
cmc
xor
xor
stc
rcl
iret
out
test
fadd
rol
shl
in
fcmovu
out
in
xchg
cld
fsubp
enter
fdivl
ror
stc
jmp
frndint
shl
xchg
lea
out
rol
stc
fcomi
ss
repnz
cmp
in
enter
out
shr
mov
out
sub
xor
out
imul
in
cmp
out
sarb
fcomi
ret
lret
cmp
call
in
in
ror
cmp
lret
sti
div
xchg
aad
jecxz
leave
cld
in
sti
icebp
in
fimull
fdiv
ss
aad
int
iret
sbb
in
loop
mov
int3
repz
rclb
cmc
aad
aam
cmp
sti
call
in
sti
xchg
iret
incl
xor
in
not
shl
loop
into
test
in
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
cwtl
or
adc
jl
std
in
mov
in
nop
fildll
fdivrs
out
sarl
shr
aad
dec
div
xchg
loope
stc
mov
out
xchg
jmp
repnz
int
sub
idiv
ret
sarb
ret
leave
clc
out
nop
icebp
mov
jmp
jecxz,pn
out
jmp
divl
push
sti
repnz
aam
stc
rol
xchg
shr
sub
loop
xor
hlt
jmp
ret
icebp
cmp
ret
loope
std
and
cli
rolb
aad
ljmp
jmp
aam
fsub
mov
test
in
jmp
iret
shr
jecxz
xor
aas
cmpl
fsub
std
cmc
cmp
test
fcmovne
iret
jmp
icebp
icebp
fyl2x
fnstenv
aad
cmp
cmp
incb
mul
out
iret
mov
ljmp
call
aad
cld
loop
xchg
mov
lock
das
icebp
in
imul
lret
in
fucomip
loopne
fstp
std
fcmovb
rol
leave
jmp
jecxz
in
xchg
clc
idiv
cmc
cmp
std
shr
hlt
int3
cmc
cld
sar
cld
sti
stc
cli
lock
loop
aad
int3
xor
xor
repnz
out
test
aas
out
xor
call
mov
in
xor
sar
aaa
out
ljmp
mov
test
sti
filds
loopne
xor
cmp
enter
ret
ds
stc
call
jmp
in
jmp
vaddsubpd
fst
div
fcmove
fyl2x
shl
loope
cli
in
int
jmp
rcll
shll
jmp
cmp
and
sti
cld
faddp
hlt
mov
test
cli
enter
lret
xor
lret
shll
out
clc
repnz
shl
test
fimuls
fldl
ror
aad
sub
aad
sti
cmp
aam
cli
rcr
repnz
loop
out
movb
enter
lret
lret
call
cld
sarl
cmp
jecxz
sar
fildl
sti
clc
fdiv
into
in
fsubp
ss
xlat
iret
repnz
xlat
leave
cmp
loopne
ret
ret
xchg
decb
cmc
jecxz
xor
repz
fstp
ret
cli
cli
repz
shl
lret
cld
out
sub
out
ljmp
fdecstp
lret
shl
loopne
rcl
enter
mov
lock
subb
aam
sarb
shlb
shr
rcr
aas
sti
repnz
inc
cmp
test
clc
ret
xchg
xor
stc
ror
lret
in
ljmp
loop
test
ffree
into
enter
test
xor
shlb
sub
iret
leave
out
ljmp
filds
mov
enter
out
out
std
in
cmp
cld
fsub
lock
hlt
xlat
call
jecxz
out
aad
xor
into
stc
in
cld
ror
cmp
adc
repz
jmp
call
sub
out
into
stc
shr
repnz
xor
fprem1
jecxz
cli
adc
repz
loope
mov
xchg
cmc
nop
in
fpatan
cmc
cmp
cmp
out
sarl
aam
not
mov
shl
iret
in
into
xchg
xor
loopne,pn
enter
int3
cmp
stc
repnz
fcmovnb
sub
mov
mov
in
sub
clc
shl
in
adc
fsubp
les
cld
jmp
ret
repnz
jecxz
jmp
stc
stc
iret
repz
out
loop
test
jecxz
lds
out
fscale
fiadds
test
out
xor
fmulp
out
sarl
stc
int
lret
cmp
repnz
shl
testl
leave
out
mov
aad
in
jmp
leave
div
iret
aam
idiv
not
std
out
int
xchg
out
jmp
int3
ljmp
fidivrs
shl
xor
je
jmp
iret
aad
aad
aad
aad
mov
mov
mov
jl
add
cli
icebp
xchg
mov
in
fucomi
test
rcll
shl
cmc
int
in
enter
fdivr
ds
mov
jmp
stc
orb
mov
ret
icebp
neg
int
shr
cmpl
sarl
xlat
fcmovbe
rolb
xchg
lret
xchg
fidivs
in
fcmovb
rcr
aam
aas
fcom
or
sar
faddl
ror
or
rclb
out
test
out
neg
xor
cmc
loop
call
mov
sub
aaa
clc
enter
sar
cmp
cmp
idiv
mov
in
hlt
into
rol
call
shlb
jmp
fld
les
jmp
lret
hlt
mov
les
cmp
out
push
loopne
cld
faddl
lret
std
xchg
adc
fcom
loop
clc
cli
iret
ror
loopne
into
jecxz
cli
leave
repz
sbb
jmp
fimull
fucomi
cmp
std
imul
testl
int
in
out
xchg
lret
out
iret
ljmp
lock
fucomi
test
fstp
icebp
call
jecxz
ret
into
into
fsin
shr
icebp
in
aad
in
fiadds
fdivr
test
repnz
in
fcomi
ss
clc
aas
out
jecxz
roll
loope
jmp
xor
xlat
leave
out
ljmp
clc
ds
int3
ret
rclb
enter
leave
out
xlat
rol
repnz
cli
in
aas
fadds
clc
cmp
test
xlat
in
shll
out
aad
out
ret
loope
loopne
leave
ret
mov
dec
shlb
iret
lock
ljmp
aad
jecxz
roll
clc
std
jecxz
rorl
in
ss
fstpt
in
in
repnz
cmc
fisttps
out
lret
shr
xor
sub
jmp
cli
fabs
test
cld
out
out
mov
shr
fcompp
jmp
test
leave
int
fcmovbe
xor
cmp
int3
not
sarl
call
jmp
aaa
shr
repz
xlat
iret
int
cmp
aad
sar
ljmp
jmp
loop
ds
in
int3
aam
in
ror
cmpl
and
in
cld
mov
fimull
icebp
jmp
into
hlt
xor
icebp
cmc
iret
ret
cmp
cld
mov
testb
xor
repz
cli
fmul
cld
repz
into
add
test
sbb
xchg
testl
int3
aaa
ret
aam
cmp
fdiv
out
icebp
ljmp
mov
enter
lock
sub
out
cmp
aas
sti
cmp
ljmp
enter
lea
fsubrp
in
fnstenv
fcomi
into
repz
test
cmpb
movl
aam
xor
cs
cmc
int
cmc
fsubr
fsub
test
mov
sub
ror
xchg
ljmp
iret
cld
aad
ljmp
fiaddl
loopne
leave
lea
int3
shl
ror
aam
ss
cmp
sar
fcmovbe
sti
fcmovu
hlt
enter
in
xchg
icebp
xchg
shl
aas
in
lret
cmp
loope
fadd
fcmove
rol
stc
std
test
lret
and
xlat
lock
ss
sar
lock
in
loopne
cmp
xchg
aam
aad
xchg
addb
call
iret
out
fmul
int
fiadds
in
lds
repnz
out
out
iret
aaa
clc
fnstsw
cmp
sti
icebp
incl
aam
imul
out
lock
repz
iret
xor
jmp
out
stc
jmp
rolb
loope
xchg
in
mov
das
cmc
stc
iret
clc
hlt
lret
cmp
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
jge
inc
mov
jl
add
icebp
hlt
add
loop
fiadds
mov
ret
sbb
rol
jmp
ljmp
out
fcmovne
ret
cld
fcmovu
enter
cld
cld
in
int
repnz
out
iret
hlt
enter
fnop
loopne
fcomi
in
icebp
fdiv
xlat
rcr
cld
mov
dec
jmp
into
cmc
fdivr
cmpl
test
aam
in
loop
call
aas
jmp
shr
cmp
cmp
rol
in
in
fdivr
loope
fndisi(8087
icebp
jmp
in
hlt
loope
call
jmp
repnz
int3
fxch
iret
aad
repnz
loope
stc
cli
out
out
xchg
out
cmc
dec
into
ss
int3
into
sti
fidivrl
cli
jecxz
aas
ret
sti
repnz
out
stc
xchg
xchg
xchg
ffreep
loop
shlb
std
shll
fsub
lret
loop
cld
faddp
mov
loop
test
mov
call
in
jmp
enter
ljmp
in
xor
std
fildl
std
mov
rcl
xor
sti
out
iret
in
ljmp
incl
mov
leave
mov
xorb
lret
aad
std
cmp
rcr
loopne
jecxz
fimuls
std
mov
repnz
int
jmp
cld
fidivs
adc
cli
cmc
test
mov
sti
fmuls
xor
xchg
int
xor
shr
iret
aaa
xor
flds
mov
fmul
call
das
aaa
aam
out
ss
cmp
cmp
lock
leave
shl
mov
cld
std
lret
fildl
xor
enter
and
ret
test
dec
aad
fcmovbe
fsubr
loope
mov
hlt
aam
stc
std
les
rol
cmp
xor
xlat
cld
repz
addl
mov
imul
fsub
fsubr
enter
cmp
call
loopne
cld
loope
test
std
std
out
or
mov
into
loope
lret
into
in
out
cmp
imul
cmp
loop
aam
fadd
out
call
lret
xlat
ret
aaa
aaa
stc
out
rcr
out
aam
shl
lock
ds
ror
xchg
cmc
aaa
loope
shr
sbb
clc
aad
fmulp
fucomi
mov
ljmp
fcmovnu
cmc
aad
fcomi
int3
in
cmp
hlt
aad
roll
std
out
xchg
aaa
xor
cmp
fsubr
neg
xlat
div
sbb
ffree
lret
clc
shl
xchg
ficoms
les
iret
aaa
lret
ss
rol
cmc
fcmovnb
out
cli
leave
out
fucomip
repz
nop
in
test
shl
leave
shl
stc
int
in
aaa
jecxz
in
int3
sti
rcl
cli
repnz
sbb
iret
xor
out
out
icebp
rcr
sub
sbb
out
cld
xchg
loopne
mov
fsubrp
lret
fcoms
rol
shr
call
fiadds
rcr
sti
xchg
mul
loopne
sub
jmp
sti
cli
repz
aam
cmp
call
out
loop
in
mov
clc
hlt
aam
out
ljmp
sti
cld
flds
loopne
loope
xchg
stc
out
out
hlt
cli
shl
loopne
loopne
jmp
xchg
lea
out
xchg
shlb
lret
aaa
xor
cld
rcl
faddp
or
add
sbb
mov
xor
test
xlat
xor
cmp
cmp
loopne
aam
mov
nop
jmp
xor
aad
std
iret
ljmp
loopne
cmp
fimuls
mov
in
sub
fyl2x
lret
icebp
rcr
in
loopne
shl
in
loop
orb
fmul
out
out
sti
repz
aad
icebp
ret
icebp
jmp
loope
in
lret
in
test
mov
icebp
icebp
aam
repz
cmp
fld
mov
in
xchg
xor
rcr
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
jl
aam
xor
cmp
div
fcomp
ffree
repz
jmp
mov
cmc
rcl
sub
cmp
leave
cmp
cmp
lret
in
clc
fistpll
jecxz
icebp
mov
aad
xchg
out
mov
icebp
sar
into
cmp
shl
ljmp
xchg
mov
jecxz
push
jmp
fdivp
aam
into
mov
iret
shr
cmc
fdivp
aad
fisttpl
lret
incl
ljmp
repz
fmul
incl
fsubrp
call
loopne
rcl
shl
rcl
int
aam
fcmovnbe
xlat
loop
adc
jmp
test
mov
mov
xchg
lock
shr
repnz
std
rcr
xor
sar
icebp
cmc
fldl
loopne
adcl
xchg
xor
iret
cs
into
aaa
lret
repz
lret
out
xor
addb
rclb
lock
xlat
xor
cmp
aad
cli
out
icebp
loope
stc
out
std
aad
mov
lock
rcl
repz
xor
ljmp
ds
adc
in
out
out
test
out
lock
out
lret
hlt
std
in
xor
into
in
clc
in
xlat
vpminsw
int3
sti
fisttpll
fmul
in
into
enter
fcmovu
cld
in
stc
xlat
repnz
fadd
ret
fucomip
std
in
jecxz
leave
in
in
repz
xlat
out
fstpt
lret
aam
iret
cli
jmp
decb
iret
dec
jmp
leave
clc
fcmovnu
lret
int3
out
cmp
fmul
cmpb
leave
testl
ret
in
lock
repnz
aas
cmp
xor
cmp
imul
mov
sti
in
lock
lret
out
aad
repnz
jecxz
cmp
aas
shl
cmc
jmp
jmp
xbegin
lret
xor
cmp
test
cmc
fcomi
sarl
enter
xchg
test
into
int3
shr
xchg
ffreep
lret
icebp
cmp
icebp
int3
sti
fcom
ss
shl
sti
out
in
lret
fscale
clc
in
into
into
lret
in
in
repz
aam
cld
xor
cmp
rol
and
aam
rolb
in
das
ret
jmp
cmp
sti
xor
not
bnd
neg
lea
in
ror
lock
out
ret
rol
hlt
xor
rcr
fsubr
xchg
idiv
mov
int
fdiv
lock
sbb
in
xor
lret
rcl
out
ljmp
cli
jmp
jmp
clc
loopne
test
ljmp
lret
int
xor
lret
xor
in
shl
loopne
aas
leave
enter
loopne
in
xchg
out
not
in
out
in
int
aam
ds
ljmp
test
cld
out
dec
out
jmp
rcl
fst
in
lret
cli
rcr
cmp
and
mov
mov
lock
fnstenv
in
rol
cmp
fxch
repz
in
aam
fsubr
in
addl
iret
in
xor
ror
sar
loope
cli
div
jmp
fsubr
lret
std
clc
cld
lret
test
aam
leave
icebp
divl
fucom
cmp
sarl
std
in
int
xor
shr
out
aam
loop
jmp
dec
sarb
lock
div
cli
leave
addb
fsubr
xchg
lock
aaa
xor
cmp
lret
cmp
cmp
sarb
ss
ret
dec
ret
lock
enter
int3
call
shll
repz
jmp
cld
out
fdivrp
rcr
out
mov
frndint
iret
repnz
xchg
ret
lret
ret
into
fcmovbe
icebp
aas
cmp
in
out
fdiv
sar
in
ljmp
hlt
in
stc
call
xor
sar
test
test
lock
out
jecxz
icebp
xor
jecxz
iret
idivl
call
in
fyl2xp1
call
fndisi(8087
sbb
cld
clc
leave
decl
xor
leave
clc
leave
xor
cmp
sub
or
leave
out
out
jmp
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
jg
inc
iret
cld
mov
jl
fnstsw
xor
iret
cmp
aad
cmc
sarl
cmc
test
mov
lea
int3
in
repz
lock
enter
not
std
or
fsub
out
jmp
les
repz
aas
repnz
enter
aad
aas
lret
into
lock
aad
enter
call
in
nop
in
xor
stc
sub
loope
int
test
int3
fidivrl
ffree
int
int
mov
in
loopne
loopne
shrb
iret
sub
icebp
jecxz
loopne
jecxz
lret
fcmovnu
loop
ficoms
rol
lret
jmp
jmp
testl
call
xchg
out
loope
shlb
jmp
fxtract
fstp
idivl
in
icebp
loopne
fcomp
loop
in
cld
addb
test
fprem1
sti
cmp
loop
in
out
rcr
leave
loop
out
xchg
fcmovbe
in
jmp
repnz
repz
xlat
cld
leave
idivb
icebp
addl
xlat
std
loop
cld
jecxz
out
jmp
into
neg
fcmovnbe
in
clc
out
cmp
sti
cmp
adc
xlat
shl
std
fsub
cli
loope
mov
fucomip
icebp
shl
call
fnsave
ds
icebp
in
jmp
fxch
icebp
enter
shl
shl
out
jmp
std
cmp
aad
rol
incb
iret
mov
out
leave
xor
aam
ss
cmp
sti
lds
sti
loop
loopne
xor
cmp
fucomp
jmp
hlt
cmp
fdivr
jecxz
std
fildl
stc
fadds
jecxz
jecxz
leave
icebp
xor
aaa
rcl
repz
faddl
mov
mov
lock
in
fst
icebp
fcmovbe
fcmovbe
stc
ss
out
aam
iret
mov
int3
ret
lret
ljmp
rol
fadd
hlt
enter
lret
lret
test
lret
repz
xor
idiv
iret
cmp
rcr
ljmp
mov
in
into
out
call
lret
lret
loop
sarb
cmc
aad
fsub
std
lret
jmp
std
loop
mov
xchg
aaa
ret
xor
rcr
enter
lret
xlat
test
test
test
xchg
fisttps
ret
icebp
in
out
out
div
cld
lret
out
iret
cmc
cmp
fisttpll
iret
fucomi
xchg
rcl
shr
std
aaa
xlat
aad
fdiv
cmp
flds
test
clc
enter
rclb
leave
cmc
fucomp
icebp
cli
repz
sar
icebp
cmp
jmp
into
out
addl
cmp
fprem
std
fst
adc
cmc
in
mov
call
ljmp
div
repz
fnsave
repz
out
stc
aas
div
loope
mov
xchg
in
aaa
lock
ljmp
sbb
aam
leave
faddp
xchg
mov
clc
ret
fsub
out
mov
int
jecxz
fst
out
lock
into
and
fdivrp
testl
into
out
xlat
aad
repz
xor
dec
hlt
cmp
test
ds
leave
test
jmp
jmp
in
loop
lret
in
stc
rcr
loope
cld
loop
out
std
jmp
lock
in
xchg
xor
xlat
xor
xlat
fdiv
rcl
xor
cmc
cmp
loopne
sti
loop
imul
jmp
fdivr
nop
call
das
call
fptan
ljmp
lock
stc
fsub
fimuls
leave
jecxz
call
neg
hlt
in
std
xor
neg
cli
adc
aam
fsub
fimull
mov
loopne
enter
in
fidivrs
xchg
loopne
jmp
rcll
into
stc
enter
cmp
out
in
shl
cmc
loop
in
in
fld
sti
lret
cld
jmp
cmp
out
lock
aad
fscale
testb
cmp
fxam
mov
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
clc
lret
shrb
cs
lret
sti
fprem
lock
sar
std
in
add
leave
sti
clc
icebp
ljmp
test
jmp
call
roll
call
mov
fbstp
in
leave
clc
cmc
stc
ljmp
stc
ret
aas
mov
loopne
xchg
shrb
stc
out
enter
lret
into
fchs
out
rcr
call
ficoms
int
jmp
hlt
in
fdivr
out
in
std
xlat
iret
sar
in
sbb
div
in
xlat
fdivr
out
test
lock
ds
in
int3
jmp
loope
xor
repnz
call
out
in
and
adc
lret
fcmovnu
in
aaa
clc
idivl
rcr
and
aam
out
cmc
roll
std
out
fsubp
mov
iret
aad
aam
cmp
aam
iret
imul
iret
and
aad
loopne
fucomip
fld
fmull
repnz
aaa
enter
repz
loope
aam
test
fdivrl
fxch
in
ljmp
repz
out
iret
cmp
clc
cld
test
repz
movl
sub
sub
icebp
in
sti
clc
xor
fucom
aam
xchg
repnz
fldpi
xchg
in
fdivp
shl
jmp
out
in
leave
lret
shr
cmp
cmp
ss
loop
hlt
in
cli
loopne
xchg
call
xor
out
aad
out
iret
fildl
filds
out
jmp
xchg
in
lock
int
into
in
dec
repz
lock
loope
mul
clc
cld
fmull
ljmp
cmp
ror
in
in
rol
ljmp
loopne
repz
shl
icebp
aam
sti
cmp
leave
cmp
xor
roll
jmp
xchg
in
repz
ss
xlat
cmp
iret
adc
xchg
leave
fcmovb
cmc
test
lret
cmp
iret
out
enter
out
repnz
icebp
fucomi
fucomip
les
lret
flds
int3
lret
into
out
in
ror
sbb
les
fxch
lret
icebp
mov
loope
fcmovnb
in
fmul
xlat
cmc
clc
jmp
xlat
out
loope
sbb
xchg
std
loopne
lock
ror
cmp
rcl
into
aaa
icebp
into
cmp
sar
jecxz
hlt
lret
and
leave
incl
lret
iret
div
sbb
fdiv
leave
iret
cli
mov
cli
mov
jmp
clc
xor
cmp
cmp
rol
enter
leave
mov
xchg
xlat
repnz
enter
clc
in
enter
into
xlat
cmc
rcr
test
adcb
aam
lret
int
leave
fdivr
loope
out
jecxz
fcmovb
test
neg
std
or
icebp
jmp
xor
lret
out
out
cmp
std
cmp
ret
or
lock
fsubp
xchg
cmc
iret
iret
leave
xor
cmp
cmp
out
aas
cmp
aad
xlat
or
enter
rol
rcl
in
lock
cmp
shr
incb
sbb
mov
in
out
int3
aam
cli
cmp
jmp
cli
roll
adc
jmp
mov
lock
std
out
cs
lret
xor
repz
jmp
ljmp
lret
sub
cmp
cmp
enter
shlb
addl
leave
cli
fucomip
mov
fst
mov
stc
ret
aam
clc
das
in
in
sub
jmp
mul
cli
aam
fnclex
xchg
rcl
push
enter
lret
cmp
ljmp
adc
jecxz
rol
out
cld
loopne
jmp
fdivr
cmc
cld
int
add
leave
leave
cli
test
enter
enter
adc
ror
stc
xlat
cld
loope
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
lods
xor
jl
add
fisttpll
fcoml
icebp
jmp
in
aaa
std
cmp
jecxz
icebp
out
ret
mov
xchg
rol
lock
ror
xor
rol
cmp
fstpt
hlt
aad
fdivp
fnstsw
filds
xchg
enter
in
jmp
shr
fcos
cmp
xlat
sti
out
std
roll
cli
sub
mov
in
jmp
xlat
enter
call
cli
loop
ljmp
xchg
mov
shl
xlat
xlat
stc
iret
ss
incb
sar
nop
icebp
sub
aad
cmc
clc
repz
addb
in
cmc
in
leave
iret
in
fsubr
fcoml
iret
ss
xor
out
lock
repz
lock
in
sti
jecxz
enter
out
test
loop
iret
leave
cmp
std
sti
aas
std
ds
int3
aam
sti
lret
out
loopne
fldpi
in
loope
jmp
xor
or
cmp
cmp
leave
xchg
loop
lret
in
xor
hlt
repz
incb
loope
stc
call
aad
cs
ror
test
aam
frndint
ret
fdivrs
clc
out
cli
test
sti
jmp
loope
enter
cmp
ds
fnstcw
clc
lock
mov
orl
xchg
aam
vpxor
aaa
iret
shl
cmp
fadds
cmc
mov
test
ljmp
clc
div
aam
out
push
lret
xlat
fdiv
loop
fadd
in
loope
lret
jecxz
call
cmp
stc
sti
lret
cmp
filds
addl
xor
std
rcr
into
repz
loope
fsubr
int
mov
in
int
xorb
jecxz
xor
test
std
jecxz
xlat
xchg
shl
rol
in
cli
or
rolb
in
test
xor
shl
sti
aas
aad
clc
shl
in
out
lret
mov
xchg
cld
aam
shll
cld
fucomp
aam
loopne
rolb
cmp
cli
fcmovnu
in
test
fisttps
in
xor
out
repz
out
in
aas
out
fsub
stc
and
out
mov
leave
loope
fimuls
repnz
aaa
std
cmp
fsubp
repz
jecxz
orl
mov
cli
xchg
into
xchg
into
int3
jmp
xor
idivl
repnz
rcr
shl
clc
clc
fcmovu
test
int
fucom
iret
hlt
mov
xor
xlat
int
int
rcl
call
std
xor
ror
call
out
loope
cli
or
faddp
lret
cli
cmc
xor
ljmp
xor
fsubp
add
iret
aam
cmp
into
call
icebp
fcom
iret
lock
testb
call
lock
aas
iret
fildl
aad
faddp
in
loope
mov
mov
neg
ss
ss
jmp
sarl
aam
xlat
ffree
loopne
fisttps
nop
jmp
loop
cmc
cmc
idivl
fdiv
out
fstpt
std
fcmovbe
clc
aad
lock
in
lock
jmp
mov
dec
lret
loop
xor
lret
aaa
sti
hlt
loope
aas
les
clc
cli
cli
mov
faddp
into
int
stc
call
cmp
out
idiv
into
stc
sti
out
ret
lds
icebp
jmp
stc
shr
sti
icebp
fistpll
xor
cld
mul
cmc
in
fimuls
repnz
shl
fld
in
enter
rolb
out
aad
iret
jmp
repnz
loop
out
repnz
sarl
into
int
in
stc
out
cmp
clc
test
out
fucomp
mov
fistpll
lret
aad
into
cmp
lock
rcl
rcr
xchg
xchg
and
xchg
jmp
xchg
mov
leave
loopne
rcl
xor
test
cmc
xor
icebp
lock
repnz
jmp
lret
aam
fstp
fisubrl
push
int3
jle
adc
flds
jl
loopne
mov
lret
in
lret
loope
shl
out
int
shlb
shr
cmp
stc
rcl
in
icebp
fadds
out
fmuls
jecxz
out
out
cld
cmp
std
in
sarl
sti
fucom
jmp
out
cld
xchg
mov
in
div
cmp
lret
fcmovne
not
ffreep
sbb
ret
repnz
test
icebp
loopne
xchg
xor
in
lock
int
cmp
int
int3
fsin
icebp
fcom
sar
hlt
loop
leave
or
mov
not
fsqrt
ljmp
out
inc
into
rcr
mov
int3
in
out
xor
cmc
cmp
loopne
cld
out
cld
clc
cmp
sub
fsub
jmp
rorb
clc
ret
ss
fucomi
ss
sar
fdivp
hlt
xchg
loope
jmp
decl
cmp
in
in
aaa
ss
aam
faddp
std
sub
cld
ljmp
or
in
xlat
fsub
stc
iret
aam
leave
addl
fcmovnbe
cld
jmp
loopne
sti
ljmp
in
fidivl
cmp
int3
hlt
int3
in
clc
ret
fucom
cld
sar
mov
fcompp
cld
nop
rcl
sar
ret
jmp
loop
into
das
cs
aas
shl
or
test
fdiv
flds
int3
xchg
test
out
int3
imul
enter
aad
shl
aas
ds
ret
fsub
sti
fsub
ret
popl
loopne
stc
out
rol
xor
lock
sbb
xlat
mov
in
xchg
ljmp
ss
aam
cmp
cmp
fsubr
sarl
cld
jmp
mov
loop
nop
mov
sub
int
out
out
int3
hlt
sar
shl
testl
enter
iret
aam
xor
cmp
clc
fcmovne
stc
int
out
cmp
out
xchg
loop
cmp
out
fsubrp
in
in
rol
out
iret
out
cmp
aad
fdiv
int
shr
sti
icebp
aas
sub
clc
loopne
clc
inc
incb
lret
in
jmp
sti
std
shl
loopne
out
cmp
loop
cmp
cld
std
aam
fnstenv
in
aam
repz
out
ret
fcmovne
adc
xchg
xchg
ret
jmp
jmp
fcmovnu
leave
lret
repnz
shl
test
mov
in
iret
aas
xlat
in
in
loop
cmp
idiv
cli
hlt
cli
aam
shl
and
fucomip
mov
shr
lret
cmp
lock
stc
add
cld
sbb
jmp
dec
int3
sub
shl
icebp
icebp
std
aam
hlt
cmp
jecxz
cmc
ret
stc
cmp
int
cli
int
clc
jmp
in
loope
rcr
stc
dec
fistpll
int
iret
ds
or
in
out
out
cli
out
divb
rcl
out
or
loopne
stc
cld
and
test
xchg
lret
xor
enter
rcr
fpatan
cld
aas
sub
cmc
stc
loop
int3
and
ljmp
das
test
out
in
ljmp
mov
loopne
iret
ret
out
shr
das
cli
hlt
ljmp
mul
shr
sti
neg
sti
cli
incl
not
call
cmp
fcomp
cli
out
out
in
in
jmp
shr
loopne
ljmp
enter
sti
cld
in
faddl
enter
int3
fmuls
loope
into
rcr
call
iret
in
in
in
out
in
test
out
jmp
int
shl
std
out
repnz
sti
sti
rcl
fildl
fucom
sti
rcr
fsub
int3
xchg
xchg
in
test
shl
fcmovne
into
shl
out
icebp
cli
xchg
in
int3
loop
jmp
lds
int
std
int
into
out
fcomip
dec
shl
ret
cmc
ljmp
jmp
in
mov
jecxz
lret
in
hlt
aaa
repnz
testl
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
adc
dec
push
add
fdivr
mul
ret
repz
xchg
mov
cmc
test
jmp
icebp
loopne
div
rcl
aad
fcmovbe
jmp
stc
stc
jecxz
lret
out
xchg
leave
ret
fsubr
clc
iret
aad
int3
lret
aas
lock
sub
ffreep
in
stc
enter
loopne
rcr
sti
cmc
call
and
loopne
cli
loopne
cmp
leave
test
fstp
in
lret
aam
repz
hlt
call
xlat
test
out
xlat
out
cld
out
ljmp
xor
mov
fdiv
loopne
repnz
loop
out
xchg
dec
cli
xchg
icebp
cli
fmulp
repz
xor
iret
out
out
sti
push
in
int3
aad
call
hlt
enter
loopne
xor
into
xor
xor
xor
std
repnz
sti
sub
aad
fisttps
xchg
fdiv
repnz
cs
cmc
shll
repnz
testb
leave
fsub
loopne
hlt
lds
xor
xor
in
out
cmp
int
rcr
jecxz
rolb
mov
icebp
mov
mov
xor
cli
cmp
in
mul
xchg
sub
xor
out
xchg
enter
enter
ljmp
iret
std
xchg
call
mov
jmp
lret
lret
aam
fdivr
iret
cmp
int
aaa
loopne
and
cmc
jmp
jmp
xchg
lock
xor
lret
fcomip
jmp
call
fcmovbe
fisttpl
xchg
xor
int
rcr
test
rol
testl
rcl
lds
out
sub
sti
clc
loope
in
cmp
ret
adc
ljmp
sub
enter
jmp
sarb
ljmp
call
jecxz
test
xor
sarb
aam
lret
out
cmp
out
fsincos
leave
in
xchg
jmp
shlb
xor
sar
iret
in
cmc
or
int3
call
shr
fincstp
out
ljmp
roll
mov
test
aam
lret
ljmp
ret
rcl
in
loope
lds
enter
ret
aaa
out
leave
aad
neg
int3
sarb
adc
rolb
jecxz
mov
jmp
repnz
les
jmp
cmp
jmp
imul
leave
stc
filds
hlt
ror
test
clc
repz
cmp
test
and
aam
fsub
mov
loop
test
bnd
neg
cmp
idiv
fdivr
cli
cli
in
mov
mov
out
fstl
jmp
jmp
int3
loopne
iret
lock
test
fmul
dec
fadds
jecxz
sti
xor
aad
shr
icebp
icebp
repnz
call
roll
rol
neg
leave
cmp
cmp
std
jecxz
fidivrl
ds
loop
into
out
xchg
rclb
ret
cmc
repnz
hlt
in
ret
and
ds
out
xchg
out
icebp
int
das
xor
aad
cmp
jecxz
ret
ret
sti
shr
lret
in
mov
out
fcomip
lock
in
leave
aaa
hlt
lret
lock
xor
xchg
ret
fadds
loope
out
in
iret
vpsrlw
push
cmc
cld
rolb
xlat
in
mov
in
addl
out
div
call
call
fsub
and
jmp
ror
xchg
xor
aad
ss
cmp
sti
icebp
cld
xor
into
call
loope
out
out
xchg
adc
ror
out
stc
int3
sti
cli
jmp
clc
iret
aad
call
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
mov
push
jl
lret
jl
test
loope
jmp
ror
shl
cmc
divl
cmc
lret
not
jmp
hlt
rcl
and
jmp
call
fsubp
lret
repz
lret
leave
hlt
sti
aaa
call
aad
stc
sarl
repnz
mov
fcompp
xchg
loope
in
rol
xor
sti
in
xlat
hlt
lock
aad
ret
xchg
in
mov
jecxz
ficoms
in
out
xor
in
cmp
sbb
and
mov
iret
jecxz
mov
icebp
xchg
leave
call
cmp
fsqrt
cmp
test
out
hlt
lret
lret
jmp
cli
xchg
shrl
loopne
in
sti
shl
aaa
stc
out
jecxz
fst
aam
cmp
clc
ljmp
int
jecxz
ror
xor
cmp
aas
ss
cli
movl
into
loope
rcl
shl
fst
leave
iret
aaa
cmp
ror
cmp
mov
out
xchg
xchg
div
cmp
xor
out
fcmovb
cmp
repnz
in
loope
mov
mov
int
ror
xor
aam
xor
rcl
adc
rcr
testb
int
out
out
cmc
mov
rcl
icebp
cld
out
fnstenv
hlt
cmp
loope
fcomi
fcmovnu
clc
ljmp
repz
not
cmp
fdivr
in
cmp
test
hlt
sti
clc
cli
xchg
xchg
repz
xchg
loope
leave
shr
xor
cld
aas
ror
ror
sbb
clc
in
xlat
mov
out
jmp
out
rorl
xor
in
int
in
sarl
jmp
stc
int3
idiv
fsubp
xlat
cld
clc
mov
popl
icebp
sti
divb
loope,pt
std
rol
rcr
jmp
in
test
loop,pt
xor
into
jmp
int3
std
idiv
cmc
aam
ds
xlat
in
mov
fldlg2
iret
mov
icebp
dec
jecxz
repz
cmc
xor
xor
lock
rolb
test
icebp
mov
in
cmc
xor
repz
aad
call
rolb
int
orb
ljmp
aam
repz
loope
jmp
stc
mov
in
fmuls
into
xchg
mov
shr
shl
ss
out
int3
call
std
repz
in
sti
decl
out
xchg
out
lret
xor
ljmp
cld
cmc
mov
jmp
out
fildl
rol
sub
cmp
sar
fidivl
hlt
ror
fucom
aad
fiaddl
out
xchg
xchg
out
iret
stc
aaa
cmc
fcmovb
repz
in
cmc
stc
cmp
inc
movb
jmp
cmp
hlt
into
fmul
cli
call
ljmp
ret
out
mov
clc
into
aad
loop
ret
icebp
cld
imul
repnz
lret
icebp
in
rcl
int
out
mov
into
test
iret
repz
into
ljmp
xor
push
clc
cli
stc
call
adc
nop
in
call
cmp
out
not
rcr
std
aam
rcr
in
cld
mov
ljmp
test
fcomp
repz
test
jmp
int
loopne
addb
shl
out
cmp
stc
adc
cmp
aam
loop
mov
in
in
xor
rol
ss
icebp
xor
cmp
imul
loop
cmp
repnz
ret
leave
test
cmpb
hlt
in
cmp
cmp
out
cli
cmp
test
sar
jmp
incb
shr
icebp
cmp
rol
cmp
lock
in
fldlg2
fsts
mov
jmp
std
cli
lock
sbb
in
mov
clc
mov
clc
in
ljmp
jmp
ss
fcomp
iret
test
xlat
call
fisttpl
loop
shll
aam
stc
shl
fcmovb
inc
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
or
out
test
jl
add
clc
cmp
rcl
cmp
cmc
rol
loope
xlat
idiv
sub
in
shl
jmp
rol
lock
lock
out
stc
sbb
repnz
cmc
mul
mov
out
clc
in
xchg
sar
loopne
shl
repz
test
fucomip
cmc
xlat
repnz
testb
mov
out
jmp
iret
loop
cmc
clc
lret
cmc
iret
sti
shl
fildl
ljmp
xorl
cmp
xlat
cli
cmc
rolb
ror
test
test
out
int
std
fidivrs
sti
out
cmp
movb
stc
ret
rcr
loopne
xchg
in
ret
jmp
xor
in
int3
loope
repz
cmp
shr
enter
jecxz
in
cmc
into
out
sub
out
cmc
sar
fcomi
lock
out
sti
idivb
test
leave
ljmp
out
in
sub
cli
aas
lret
cmpb
icebp
aad
jecxz
xlat
mov
orl
ret
sarb
int
rcr
cmp
test
loop
call
fimull
out
cmp
lret
lock
out
clc
cmp
repz
clc
out
cmp
int3
clc
leave
xchg
out
hlt
loopne
sar
jmp
call
fildl
in
lret
lret
sub
lret
in
iret
loope
neg
iret
jecxz
clc
ret
mov
call
shl
in
cmp
lock
repnz
fnop
call
int3
ljmp
add
loop
sub
int
int
fmulp
xor
iret
lock
rcr
in
call
shl
call
mov
mov
cld
leave
xchg
ret
aad
ss
ror
ljmp
rcl
loop
sbb
hlt
fmuls
jmp
repz
aaa
repnz
repnz
out
aam
loop
fxam
out
fxch
xchg
enter
xor
lret
in
stc
loope
aaa
ret
icebp
ds
or
loope
decl
aaa
in
ljmp
aad
xlat
fsubr
sar
cli
addb
int3
mov
ror
loope
shl
sti
movl
movl
int3
rcl
repnz
jecxz
lock
fsubr
jmp
ret
aaa
rcl
repz
rolb
into
shl
in
jecxz
aam
stc
out
fcmovu
int3
aas
cmp
int
cmp
out
lret
out
fisttpll
in
mov
out
hlt
call
fldl2t
repz
ds
jmp
jmp
out
cld
fsubr
loop
mov
iret
int3
ror
out
enter
in
cmp
inc
repz
cli
ret
std
rcr
out
in
test
in
fcmovnbe
repnz
jmp
out
aad
in
fcom
test
jecxz
ret
addb
icebp
rol
cmp
lds
and
clc
ffreep
loopne
fsubr
lret
loop
orl
repnz
xlat
cmp
fdivrs
aaa
clc
cli
repnz
ljmp
loope
icebp
mov
divl
xlat
xor
cld
iret
sarb
out
repnz
test
leave
test
fdivr
out
loop
fadd
shl
lock
hlt
aad
idiv
out
sar
into
fadd
shl
lret
int3
leave
jmp
xor
ljmp
enter
fidivrs
out
cmp
fcomi
xchg
stc
xchg
ds
cmc
rol
cmp
fsubr
xor
in
in
in
icebp
xchg
fst
in
stc
lret
sub
decb
xlat
cmp
xlat
cmp
sbb
ret
leave
out
fcmovne
xchg
shl
or
stc
bnd
fidivrs
std
aad
cmp
fsub
aad
fcmovne
lea
jmp
ror
stc
in
lock
cld
dec
fstpt
jecxz
in
test
out
out
mov
aad
cmp
cmp
cmp
hlt
ret
fisttps
add
add
rol
aad
aad
fcmovne
scas
push
mov
and
out
pop
jl
lret
jl
ret
lret
enter
mov
aam
out
int
cmp
lock
int3
fcmovnbe
jmp
cld
in
fcmovne
xor
and
out
leave
cs
out
in
lret
leave
ss
divl
and
ffreep
sti
enter
out
out
int3
xchg
into
ljmp
in
call
rcr
cld
xchg
fcom
ljmp
leave
orl
lret
clc
xor
fsin
rcr
orl
mov
enter
hlt
sub
jmp
int
int
sar
std
std
loop
xchg
sar
xlat
test
lret
xchg
out
in
xor
cmp
in
idiv
fsubr
neg
test
rolb
iret
fimull
ret
sti
clc
cmp
cmp
in
out
sti
out
test
jmp
sbb
jmp
jmp
xor
ss
into
aaa
into
ds
sti
in
roll
nop
mov
cmc
repz
loopne
divl
icebp
cli
call
dec
in
aas
sbb
fdiv
in
test
loop
cmc
in
ret
hlt
fcmovnu
test
in
enter
in
ret
test
fcmovne
loopne
addl
icebp
aad
ljmp
and
repz
mov
cli
decb
cld
iret
rcr
fmulp
lret
cmp
iret
xor
xor
hlt
ret
out
xlat
ret
incb
in
mov
int3
ss
xor
in
std
call
cmp
xlat
in
call
neg
ljmp
xlat
out
shr
in
repz
in
xlat
cmp
dec
rcl
mov
std
or
lret
repnz
shrb
xor
sti
in
lret
fucomi
clc
fcmovu
test
sti
hlt
adc
icebp
out
decl
shlb
leave
xlat
les
fistpll
fcomip
out
stc
ret
loop
lret
shl
icebp
lret
into
in
xor
lret
idiv
jmp
fsin
test
xchg
shr
dec
in
mov
cli
out
mov
xor
ror
ss
enter
shr
in
in
neg
into
call
ror
fdiv
in
out
aas
into
dec
shr
rol
test
popl
neg
ljmp
aaa
cmp
fcomi
hlt
inc
stc
aad
or
mov
xchg
jmp
jecxz
in
fcmovnb
cmc
hlt
icebp
cld
enter
iret
out
loop
out
mov
fsubp
fldl
mov
ret
xor
out
cmp
out
int3
sti
addl
xchg
loop
out
jmp
in
xor
out
cmc
cld
int3
into
into
cli
lock
jecxz
cld
lret
out
leave
cld
in
adc
xor
lock
cmp
ret
roll
aam
cmp
mov
mov
cmc
in
xor
xor
in
idivl
sti
cmc
cmc
in
ds
out
fcmovnu
rorb
out
call
ror
ljmp
xchg
sti
cmp
fsubp
decl
fdiv
into
out
int
out
ljmp
test
loopne
add
cli
dec
ljmp
int
xor
rcr
int3
hlt
iret
ds
sti
fdiv
repnz
ljmp
fiadds
enter
sti
cmp
shl
fsin
addl
lret
out
cld
lret
shl
out
jmp
out
out
call
iret
ror
cmp
jecxz
std
mov
in
fmul
loop
mov
loope
iret
call
xor
jmp
cmp
stc
sar
clc
ffree
out
icebp
repnz
mov
into
iret
stc
iret
loope
out
in
sarb
cmc
fcom
ret
stc
cli
orb
sub
repnz
cmp
fcomip
sti
ror
sarl
out
stc
fdiv
test
add
xchg
xchg
lock
in
int3
ljmp
clc
ds
bnd
cld
out
xchg
fsub
test
jecxz
iret
iret
cld
xchg
in
in
repnz
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
shlb
jl
add
fprem1
fidivrl
cmp
cmp
loope
out
testl
xchg
iret
ret
xor
ffree
cmp
ds
filds
xlat
call
out
in
repz
or
into
fucomip
lock
icebp
roll
leave
out
jmp
cld
nop
loopne
xchg
shlb
enter
in
int
fcomip
aam
fst
repz
hlt
lret
xchg
in
cld
rcl
into
ret
cmp
sub
fsubr
cmp
enter
aas
iret
out
enter
call
int3
int3
aad
jmp
lret
aas
aad
into
idiv
jmp
fiaddl
jmp
jecxz
aaa
ror
cmp
cli
in
cmp
in
fcmovb
rcl
xchg
out
xlat
loopne
fsub
ljmp
hlt
out
xor
fdivl
lock
cld
std
cmc
jmp
out
sbb
jmp
icebp
ret
aam
into
fistpll
fdiv
ret
xchg
leave
loope
loope
lock
fninit
iret
into
xor
divl
cmp
out
rcr
loopne
int
aad
fadd
jmp
neg
call
das
rcr
lret
icebp
fsubr
out
clc
xlat
sti
loop
idiv
call
ds
iret
xchg
into
sub
iret
xlat
out
xor
cmp
fucomip
aas
fxtract
aas
and
fsubrp
enter
xchg
lock
iret
call
lock
sar
iret
ss
int
aad
cli
test
call
in
out
xchg
in
cmp
cmp
fidivs
aam
stc
mul
std
loope
cld
loope
mov
ret
rorb
xor
xor
std
fyl2x
xor
fdivrs
in
xlat
stc
in
sar
lret
in
test
loop
dec
xorl
jmp
enter
out
cli
xlat
in
jecxz
xchg
repz
call
push
in
lret
xor
cmpl
lret
loopne
call
cmp
cmp
shl
lret
ret
std
in
idiv
orl
int3
in
sar
std
fcompp
xor
xchg
lds
jmp
loope
std
shl
int3
in
test
divb
in
xor
in
fidivrs
lock
out
fnstcw
lock
ret
in
mov
clc
out
in
mov
aad
not
xor
xlat
aam
repnz
xchg
in
xlat
in
fildl
mov
aaa
int
cmp
cmp
fiadds
fcmovnbe
aas
ret
enter
mov
fcomip
das
out
xor
aas
sti
shl
shr
aas
fdivr
leave
mov
lea
icebp
out
fsubr
faddp
loope
lret
repnz
into
hlt
lock
cld
fsub
rol
loope
call
out
out
loop
iret
leave
cmp
xor
out
icebp
shl
into
fsubr
out
orl
cmc
and
jecxz
out
jmp
fcmovne
cmp
into
in
inc
sar
out
int
xchg
out
lock
in
repz
aad
ds
xchg
lds
in
fmull
jmp
call
cld
repz
cld
sti
loope
loop
fdecstp
ret
mov
in
in
mov
out
lret
xor
xorb
fnstsw
sti
in
std
loop
rolb
ret
in
cmp
hlt
lock
repnz
aam
cli
clc
ds
in
test
xchg
in
xor
clc
ror
aam
fmulp
lock
stc
stc
loop
out
jmp
mov
loop
divl
out
in
fcmovb
out
in
lock
jecxz
loopne
fcmovnu
xlat
hlt
ret
mov
stc
jecxz
and
icebp
xlat
ror
in
clc
out
cmp
fneni(8087
std
shl
fsincos
fisttpll
movb
fsubrp
ror
out
in
jmp
lock
ss
decb
int3
decl
jmp
out
lret
lock
std
stc
xor
mov
add
jmp
ret
int
lret
sub
mov
out
fs
lret
jl
cld
out
incb
shl
sub
ds
call
icebp
repz
jecxz
xchg
call
xor
cmp
lret
xor
aad
sar
lock
aam
stc
jecxz
test
lea
in
out
leave
ss
repz
lret
int
out
mov
mov
lea
lret
xchg
sub
shr
sar
cmp
cmpb
fcomi
and
cld
ret
leave
mov
jecxz
roll
repz
cmp
xlat
loope
ret
adc
cmc
fcomp
cli
orb
sti
std
loope
in
jmp
cmp
fistpll
repnz
loope
aad
mov
lock
into
das
xor
jmp
cld
fxch
repz
cli
fdivrp
sbb
mov
mov
sub
rcl
int3
fdivr
lret
fcom
lret
fcom
addb
jmp
call
addb
fldcw
call
aas
cmc
sarl
icebp
aaa
aas
loop
shl
fucomip
std
clc
out
cld
ljmp
xor
int
in
jmp
sar
in
ret
icebp
jmp
faddl
xchg
ror
lret
rcr
shr
fcmovnbe
xlat
rcr
rcr
sti
aam
enter
test
test
std
xchg
loope
loopne,pn
repz
in
std
rcr
cmp
ror
lds
in
call
int3
mov
xor
jmp
icebp
shr
lret
ret
shl
adc
jecxz
repz
lock
ror
call
into
aas
filds
leave
cmp
loop
orl
loop
xor
div
repnz
adc
cmc
out
cmp
mov
xchg
hlt
ds
cmp
leave
lret
call
rol
not
filds
lret
lret
in
aad
ret
stc
stc
idivb
repz
sar
fcomip
rcr
sbb
fcmove
mov
jecxz
cmp
lret
ss
idivb
stc
in
cmp
in
test
call
xchg
repz
hlt
cmp
aam
fstp
repnz
shl
and
fdivr
mov
fcmovu
lock
cs
shr
clc
cmp
int3
jmp
ljmp
std
mov
out
out
nop
in
call
shll
iret
xor
fld1
jecxz
cmp
out
in
mov
mov
fstl
in
xlat
ret
aam
jmp
lret
cmp
clc
cmp
out
test
fdiv
test
out
fcmovne
xchg
leave
stc
repnz
cld
fidivrs
call
ret
sti
aas
repz
in
ds
leave
in
fidivrl
cld
jmp
int3
sti
repnz
stc
loope
adc
fxch
out
out
lret
clc
jecxz
lret
cmp
std
xlat
iret
repz
int3
into
loope
fprem
addb
fmul
aam
call
repz
fidivrs
int
fcomip
loopne
add
xchg
fsubr
call
ljmp
mul
out
int
loope
sbb
mov
in
std
out
div
ror
in
cmp
std
fxch
shll
cmp
hlt
in
roll
in
xchg
xchg
aad
hlt
shll
jmp
fdivrs
cmp
cmp
rol
cli
roll
jmp
out
and
hlt
sti
in
hlt
cli
stc
xlat
iret
cmp
out
sbb
int
out
fadds
idiv
xlat
ret
xor
enter
std
aam
aam
xchg
shl
lret
test
enter
ds
cmc
out
cli
xor
int3
or
cmp
repz
test
icebp
in
out
loope
xor
cmc
jmp
rcl
fdiv
cmp
cld
rcr
std
sti
lret
rcll
cmc
xor
fdivrp
div
ljmp
enter
int
ret
in
in
mov
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
push
ficomps
push
jl
jecxz
ret
enter
fucomip
sar
jmp
cmp
cli
fld
ret
in
sti
mov
roll
in
out
lock
lret
std
fdivrs
lock
shr
jecxz
cld
testb
cs
loop
div
call
std
sti
cmp
fildl
clc
std
in
rcll
iret
fnsetpm(287
cmp
iret
xor
out
hlt
rcl
clc
lds
loop
out
repnz
shll
xor
cmp
jmp
fld
mov
lret
mov
nop
test
loope
cmc
xlat
repnz
out
cmp
icebp
int
rol
xchg
orl
nop
fldl
div
aad
out
cmp
clc
in
std
ret
lea
cld
call
ss
call
imul
clc
into
cli
rorb
flds
jmp
lret
xor
sarb
cmc
sti
rcr
repz
in
loope
fld
aad
ret
cli
lret
in
mov
and
shl
out
div
enter
int
cmc
in
test
clc
fucomi
loope
lret
loop
rol
cmc
ljmp
into
in
fadd
loopne
out
incb
lret
jecxz
aad
imul
sar
call
lret
sar
xchg
out
testl
xchg
aaa
xor
out
fld
sti
std
sarl
cmp
cli
sti
movb
nop
xchg
lock
into
loop
int
aad
out
in
fiadds
loop
in
cld
std
out
int3
iret
in
repnz
jecxz
icebp
cli
xor
cmp
loope
test
ror
loope
sti
out
mov
lret
mov
sarl
stc
fisubrl
icebp
iret
lret
out
aad
int
rcr
or
loopne
loop
out
xor
out
icebp
loop
int3
lock
out
out
lock
rolb
in
xchg
out
int
xchg
mov
in
xor
fnstcw
enter
out
cmp
div
cmp
fdivr
mov
into
leave
loopne
ljmp
xor
icebp
out
loopne
not
test
fcmovnbe
sti
test
stc
mov
mov
out
out
xbegin
out
cmp
int
addl
fmul
sbb
repz
xor
cmp
hlt
aam
sti
int3
iret
loope
loop
mov
cmp
xchg
ds
jmp
in
std
lret
ds
xor
out
aam
cmp
shl
or
clc
shr
test
repz
roll
aam
jmp
out
jmp
repnz
faddl
in
iret
mov
sub
in
aaa
lret
into
cmc
sarb
hlt
out
int
lret
enter
mov
repnz
test
repnz
xlat
int3
in
sarl
loopne
movl
xchg
stc
into
cmp
in
aaa
fcomip
fcomp
std
testl
jmp
repz
out
in
fucomp
cmp
xor
rolb
fucom
cmp
ret
out
ljmp
in
in
repnz
sarl
lock
mov
loope
cmp
ret
stc
xchg
orl
cmp
fndisi(8087
fcmovbe
adc
clc
cld
icebp
stc
sub
sti
mov
popl
out
leave
xor
cmp
repz
ror
xlat
sar
fptan
cli
jmp
fildl
idiv
in
in
shll
fst
cmp
cmc
sarb
fcmovnbe
std
cli
jmp
sub
call
jmp
leave
call
fcmovne
idiv
ret
cmp
clc
sti
loopne
test
out
in
sti
call
out
repz
repz
xor
cmp
faddl
loopne
lret
in
filds
shl
mul
sub
shl
ds
int3
fidivrs
sti
test
ljmp
cld
in
repnz
into
call
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
mov
outsl
jl
lret
jl
test
cmp
fldl
mov
xor
repz
out
jmp
fmul
fidivrl
icebp
loopne
cld
xchg
ret
orb
mov
xor
repnz
repnz
cmp
cmc
mov
std
imul
lret
int3
std
icebp
int3
icebp
out
xor
jmp
aaa
fidivrl
fdecstp
fucomp
rolb
in
in
enter
cmc
cmc
xor
test
out
cmp
xchg
jecxz
ret
mov
mov
hlt
in
ljmp
into
sti
sarl
aad
rorb
leave
int3
jmp
sar
jmp
vshufps
iret
cmp
sbb
repz
les
lret
test
das
in
ret
into
ss
leave
fdivrs
test
out
ret
fcmovu
loop
movl
cld
rcl
aaa
cmp
in
cli
iret
cli
lock
cmp
leave
mov
mov
in
out
loopne
fcmovnb
aam
jmp
loope
lock
ret
aam
stc
xlat
iret
xchg
rcll
fsincos
jmp
shlb
std
cli
clc
repz
ror
lock
idiv
mov
xchg
xchg
sub
in
ror
std
cli
cmc
lret
dec
cmp
mov
lock
mov
aam
in
int
xlat
addb
vpand
sbb
cld
in
xchg
cld
out
jmp
shl
fcmovu
adc
shr
icebp
lock
test
dec
in
int
out
icebp
lret
hlt
lret
fcmovbe
iret
clc
aas
rcl
std
sti
int3
ret
sbb
out
jecxz
cli
jecxz
int3
call
iret
fdiv
out
xor
fldz
aam
std
rol
addb
ljmp
iret
cmp
xor
hlt
faddl
fdivr
clc
xchg
hlt
lret
hlt
out
mov
iret
xor
out
shrb
cmc
aaa
enter
aad
mul
hlt
cld
out
lret
loope
ljmp
loopne
into
das
leave
rcr
rcr
ret
in
loopne,pt
fisttpl
lea
push
shrb
ljmp
enter
into
les
test
out
mov
int
out
cld
stc
jecxz
clc
iret
repz
xchg
mov
lock
fdivrp
sub
rol
lret
out
fcmovne
out
fstp
adc
loopne
loopne
out
or
in
int
out
jmp
xor
lock
cld
jmp
ss
cmc
xchg
testb
lret
xor
aam
fucompp
cmp
cmp
test
int
xchg
mov
repnz
xor
out
cmp
sarl
test
fldl
xlat
neg
loope
enter
jmp
aaa
into
repz
in
fxch
repz
ljmp
aas
cmp
stc
fimull
mov
hlt
mov
loope
cmp
cmp
stc
iret
push
incl
fldl
jmp
cld
rcr
enter
xor
in
fcmovb
lret
repz
mov
lret
mov
cld
mov
sti
adcl
enter
aaa
test
repnz
enter
fimull
mov
sti
leave
test
call
sar
out
out
in
loop
mov
int3
mov
fld1
aaa
jmp
out
aas
aaa
imul
int
test
repz
call
decb
hlt
adc
xor
xor
shl
into
in
ret
out
ret
fsubp
aad
in
int
dec
mov
xchg
loopne
jecxz
in
cmp
lret
not
clc
filds
xlat
fucom
mov
ds
in
sti
xor
cld
enter
incl
mov
lret
loopne
xchg
in
ljmp
enter
xor
repz
in
aam
fcmovnu
in
out
std
xchg
inc
hlt
jmp
aad
enter
fsts
ja
in
jae
jl
add
xchg
fiadds
sti
in
rol
lock
fst
loop
std
cmp
cmc
ret
sbb
cli
mov
xchg
sar
aad
cli
enter
aam
cmpl
in
clc
fdivr
fnstsw
sbb
sub
xlat
aad
stc
repnz
and
cmp
test
fucomip
fiadds
fsubrp
sub
stc
out
fcmovu
int
cmpb
iret
icebp
xchg
jecxz
xlat
mov
lret
addb
cs
rol
jmp
cmp
cli
cmp
cmp
ret
stc
call
xchg
repz
in
enter
aad
cld
rcr
cmp
in
ret
cmp
hlt
vpaddusb
icebp
sub
cs
int
repz
loope
sbb
incl
loope
fiadds
ror
in
cmp
enter
loop
repnz
addl
fld
int
out
or
call
into
jmp
lock
std
fdivp
stc
jecxz
call
jmp
sti
out
jmp
out
aad
icebp
out
in
cld
and
ret
fsub
clc
fsubp
lock
into
aaa
xor
repz
cli
icebp
aas
jmp
ds
iret
cld
into
mov
lret
loope
jmp
out
jmp
cmc
ret
int3
lock
hlt
sti
fabs
cmc
rcr
cli
and
std
incl
repz
lea
ret
jmp
xor
xlat
cld
xchg
roll
ror
leave
cs
cmp
in
enter
stc
adc
rolb
int3
cld
loopne
rcl
repnz
ljmp
repnz
sti
shl
ds
mov
std
cli
out
test
out
addl
cmc
aam
sti
clc
testl
xchg
out
mov
aaa
shlb
idivl
fcmove
stc
xlat
loopne
repz
sbb
add
jecxz
mov
jmp
or
lock
stc
xor
iret
in
fstp
cmc
cmpb
clc
stc
call
loope
std
int
or
shrl
jmp
out
aaa
hlt
fucomip
xlat
and
idivl
test
sti
xlat
fcmovbe
loop
leave
mov
in
out
lock
shl
call
aam
cmc
fdiv
addb
hlt
fcmove
int3
in
int3
test
nop
xlat
shl
ret
xlat
leave
ror
int3
hlt
out
imul
icebp
out
faddl
in
xchg
fisttpll
iret
lret
lret
rcr
cmp
roll
hlt
jecxz
mov
in
out
enter
fsub
xlat
call
fdivr
call
sbb
fsubp
mov
leave
out
fxch
divl
cli
aam
in
repnz
loope
not
in
ljmp
iret
in
idivl
cs
repz
aam
shl
cmp
sti
loopne
fimull
sbb
fdivr
cld
lock
in
lock
cli
shl
jmp
aam
addb
mov
mov
call
loopne
shr
shrl
clc
sarb
sar
not
fmull
iret
test
out
rcl
aas
iret
out
in
shl
ss
ds
fidivrs
loop
decl
lret
shll
enter
aad
ljmp
in
aad
cmp
jmp
test
in
aaa
int
rcr
jmp
fadd
test
mov
lea
out
fists
into
in
sti
xlat
or
test
ds
aam
enter
test
shl
rcl
in
imul
rcl
addb
cli
repnz
cld
fmuls
add
cmc
xor
aad
repz
cld
in
fidivrs
stc
fcomip
out
aad
mov
out
shr
in
aad
rol
call
cli
lock
aam
jecxz
in
jmp
mov
mov
xor
jmp
lret
stc
std
call
add
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
ss
shlb
fldl
jecxz
fadds
cld
ret
mul
jmp
rcr
and
fstp
out
frndint
cmc
push
test
sti
out
fimuls
int3
xor
cli
jmp
sar
cli
xchg
shl
aad
int3
test
mov
mov
aaa
fdiv
in
cld
push
int3
ds
mul
fcmovnbe
jecxz
enter
and
sub
ljmp
cli
sar
xor
sar
mov
lds
loop
test
in
xlat
xor
in
iret
out
cmp
cmp
int3
fdiv
rol
fst
test
fxch
call
sub
xlat
int3
call
rcr
shl
out
cli
cmp
leave
aas
call
nop
shr
mov
shl
icebp
xlat
fcmove
in
xor
shl
fscale
loop
stc
call
out
repnz
cmp
rcr
into
cli
cmp
jecxz
cmp
lock
clc
testb
mov
jecxz
shl
ss
fcmove
stc
sar
fucomip
cli
ror
ss
loop
hlt
mov
jmp
mov
call
enter
lock
cmp
loope
cmp
out
loop
jmp
add
in
xor
ljmp
loope
lock
in
fisttpl
lret
test
iret
enter
rcr
cmc
cmp
jmp
loop
aam
cld
clc
cld
addl
out
call
lret
stc
xlat
cmp
into
fcmovnu
addb
mov
hlt
xchg
repnz
ret
repnz
loope
repz
jecxz
call
fucomp
std
or
out
loopne
cs
cmp
cmp
in
loopne
ret
cmc
in
aad
out
orl
xor
shr
aaa
jmp
out
out
out
incl
mov
test
cld
xchg
aaa
enter
out
jmp
cli
cmp
ret
repnz
mov
out
jmp
ret
cs
fcmovnu
aad
out
sar
call
out
test
xchg
rclb
aam
lret
call
fadd
call
jecxz,pt
shl
decl
lret
xchg
lret
xor
in
repnz
lret
cmp
rcr
in
cli
jmp
loope
out
enter
mov
in
out
cli
cmp
into
cmp
fdivr
lock
ds
aam
hlt
loopne
sbb
cmc
sub
stc
cli
out
ss
repnz
ds
rcr
sar
enter
int3
xchg
out
out
xchg
lret
jmp
ds
rolb
fstp
fucomi
sti
enter
xchg
shlb
ret
int
cmp
imul
int
cmp
not
in
call
mov
rcr
in
int3
out
into
fnop
cmp
ret
cli
fldl
ret
ljmp
int
out
iret
in
repz
cmp
sarb
cmp
fsubp
ret
sti
ret
int
ror
int3
mov
hlt
in
int3
leave
aaa
xor
aad
lock
and
fdivr
fiaddl
xor
jmp
mov
cli
cmp
shr
icebp
sbb
mov
clc
out
call
in
in
sar
out
sar
shl
sti
sbb
sbb
loop
out
jmp
shl
xchg
fbstp
fnstsw
in
ljmp
aam
call
movb
idivl
xlat
iret
in
in
xor
rcr
sar
in
loopne
fcomip
in
ret
rol
call
out
shr
xor
xor
rol
out
mov
clc
lret
loopne
leave
mov
xor
jmp
lock
into
xorb
into
rcl
call
xchg
in
jmp
in
in
repnz
sarb
cmp
in
out
test
hlt
lret
aas
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
xchg
cmpxchg
je
jl
lret
jl
xchg
aam
loop
cmp
lret
cmp
fistpll
cmp
xor
adc
mov
addb
out
aaa
int3
enter
cld
div
in
icebp
sti
int3
into
hlt
shl
sbb
jmp
lock
mov
shl
int
icebp
in
jmp
fnstcw
loopne
lock
xchg
ret
sbb
mov
call
ljmp
lock
ret
add
add
adc
lret
lret
jmp
cmc
cmp
repz
repz
xlat
call
mov
incb
ror
repz
xor
out
aad
int
ss
loop
repnz
xbegin
xchg
hlt
sub
hlt
jmp
cmp
fildl
fdivrp
mov
loopne
mov
jecxz
fcomip
out
aam
lret
int
icebp
fmul
jmp
aas
rcr
sbb
enter
or
decb
out
xor
xor
idiv
int3
roll
repnz
lret
jecxz
out
jecxz
mov
into
repz
cmp
leave
cmp
div
std
repnz
mov
mov
xchg
mov
int3
into
clc
lret
aam
cmp
loopne
xlat
xlat
fcmovnu
out
neg
mov
out
fld
fdiv
loop
ljmp
int
aas
aad
aas
idiv
out
std
cli
cli
dec
neg
mul
lret
loopne
cmc
repz
out
icebp
shr
lret
cmp
sub
ffree
into
rcll
les
out
lret
cli
xlat
xlat
ror
sti
mov
xlat
decb
into
lea
jmp
ss
cs
sarl
cmp
into
cmp
ds
enter
or
loopne
lret
leave
aam
iret
int
out
cld
icebp
aam
xchg
roll
xchg
out
mov
aam
xlat
enter
aaa
call
shll
addl
fmuls
repz
lret
fdivrl
fistpll
std
fdivp
ret
cmp
test
decb
call
xor
in
out
shr
sarl
aam
xlat
aam
loop
test
iret
shl
xchg
lock
in
icebp
xor
leave
cmp
aad
fsub
sbb
ret
aam
xlat
std
enter
repnz
roll
out
fcmovbe
clc
ds
ret
cmc
in
sar
int
test
out
in
int
lock
ret
call
ss
in
loop
stc
in
addl
std
mov
int
fsub
ret
enter
fdiv
cli
call
std
addl
ret
iret
mov
shr
lret
aam
ss
jecxz
rcr
mov
lock
roll
xor
clc
jmp
sar
repnz
adc
loope
rol
jmp
lock
call
lock
out
fmulp
cmp
int3
xor
xlat
out
neg
fsubp
mov
int
orb
ret
fld
ss
shl
aaa
cld
repz
leave
cmp
loop
adc
iret
cmc
xor
ljmp
test
jecxz
jecxz
loope
ficoml
incb
cmp
cmp
cld
fcmovne
aad
cli
jecxz
fsub
jecxz
in
ljmp
and
divl
hlt
in
xlat
aas
repnz
stc
jecxz
ret
faddp
xchg
ljmp
out
aad
in
out
icebp
repnz
clc
idivb
rcl
fdecstp
cli
fadd
xchg
std
cmp
out
out
in
and
aam
loop
rcl
icebp
in
fsubr
repnz
cmp
in
repz
icebp
lret
cmpl
cmp
lret
out
fmulp
cmp
cli
cmp
clc
fmul
out
jmp
pop
leave
out
xchg
nop
cmc
aad
xor
lret
ss
loope
cmp
int3
fcmovnbe
fst
repz
xchg
out
in
call
shr
sarb
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
sub
cmp
ret
jl
add
dec
iret
aam
lret
cli
movl
enter
sub
xor
clc
xor
xor
fldl
in
sbb
mov
in
shl
repnz
ss
cmp
hlt
aad
ss
cld
mov
jmp
enter
lret
int3
xor
stc
call
shl
jecxz
rolb
mov
mov
in
int
in
repz
fldz
xor
aam
in
sar
cld
cld
jmp
mov
in
xchg
jecxz
out
out
cmp
fsubp
loope
in
cmc
cli
call
into
lret
leave
int
xchg
div
icebp
stc
xor
out
fnstsw
call
cmc
rcl
ffree
enter
mov
leave
jmp
mul
ret
jmp
imul
sti
in
rolb
rcl
neg
repz
fucom
repnz
xlat
out
fdiv
aam
out
out
shl
in
jmp
fnstsw
loopne
mov
repz
into
aas
aad
inc
cmp
loop
cmp
loop
leave
stc
leave
out
test
ljmp
sti
xor
loopne
cmp
aaa
shl
fsub
div
iret
loope
nop
icebp
call
cmc
xor
cmp
out
into
addl
int
leave
mov
fcoml
in
fdiv
xor
out
cmp
vpmullw
shl
shl
clc
int3
lock
addb
sar
ss
xor
shr
repz
rolb
out
int3
cli
sub
cld
sub
jmp
cmp
repnz
sar
lret
fimuls
loop
into
xor
enter
cmp
xchg
lock
loope
sti
loopne
movb
ds
mov
xlat
in
stc
ljmp
xchg
xchg
int
jmp
std
orb
clc
std
cmp
idiv
aad
xor
xchg
fcomi
lock
lret
ror
int
int3
fdivs
aad
fstp
aas
aas
cli
and
in
fimuls
inc
jmp
loopne
int
loope
sti
fsubr
repnz
cli
enter
int3
out
ret
jmp
test
divb
out
xor
ret
in
lock
fcmovbe
hlt
jecxz
out
enter
fisttpll
in
sub
hlt
cmp
das
xor
enter
in
sar
in
out
out
test
ror
repz
aas
xor
in
aad
aam
cmp
cld
fsubrp
adc
fsubr
in
ret
in
ror
shl
fxch
cmp
jmp
idiv
lret
cmp
lds
mov
rorl
out
lret
fnstsw
shl
cmp
in
out
std
out
lock
xchg
shl
jecxz
aad
ss
xlat
cld
sti
test
out
cli
call
xlat
cld
xchg
cmp
nop
aam
in
out
ret
repz
fcomp
add
xchg
cmc
out
loope
clc
xchg
loope
sub
aad
xlat
in
out
cmp
ds
add
xchg
repz
loopne
loop
test
mov
adc
xor
fmul
cmp
loope
cmp
cli
or
loopne
int3
jmp
fmull
rcl
in
into
ljmp
orb
in
clc
xchg
call
out
out
aaa
repz
fadds
rcr
in
les
xchg
out
ljmp
cld
int
in
hlt
lock
aas
ret
std
addl
int3
lret
ss
in
cmc
ljmp
ret
cmp
ret
lret
les
out
mov
xor
xor
call
loope
aas
int
inc
or
leave
test
orl
in
cld
out
jmp
out
std
xlat
sti
mov
jmp
ror
ds
ret
or
cmpsb
lods
bound
add
cmc
and
sti
into
lret
cli
cmc
cmc
shrl
ret
xlat
int
aad
cmp
hlt
cmp
fdivr
in
test
cli
mov
test
mov
loope
xor
lock
out
out
neg
repz
aas
ret
fucomip
ljmp
xchg
jmp
lock
stc
out
cmp
int
loopne
fucomip
cmc
neg
ffreep
in
xchg
ljmp
ss
ror
fsubr
idiv
aam
movb
enter
std
or
loop
in
xor
ljmp
test
std
fsub
cmc
aad
stc
popl
sar
sub
neg
out
rcl
faddl
repnz
xlat
ret
mov
out
aad
xor
jmp
cmc
out
lock
shr
cmp
vpsubsw
mov
loopne
rol
cmp
fdivrs
lret
int3
loop
idiv
orl
out
in
call
mov
ds
clc
int
fst
in
cmp
cli
fucom
aas
in
fadd
loopne
xchg
into
vpmuludq
ror
sti
sti
idivl
faddp
cmp
test
std
testb
repnz
das
icebp
aam
xor
ror
fcomp
lret
cmp
loopne
in
in
out
leave
mov
xchg
mov
out
imulb
in
jecxz
into
leave
cmp
hlt
shr
loope
faddp
ret
stc
in
jmp
loopne
not
repz
aad
enter
repnz
sti
ret
hlt
lret
ljmp
and
out
bnd
ss
loopne
shlb
ret
fdiv
rol
jmp
jecxz
lock
das
aad
aaa
cmp
fcmovne
out
std
repz
fucom
mov
test
ret
ret
in
rol
hlt
sti
lock
lret
xor
repz
rolb
test
enter
aam
aaa
in
stc
cmp
int3
fcmovne
fsubr
cld
shlb
not
into
fsub
in
jecxz
enter
ljmp
aaa
xor
out
std
xor
aas
ret
fcos
mul
cli
xchg
xchg
fadd
ljmp
in
aam
ljmp
fiadds
cmp
xchg
loop
xchg
in
fsubp
repz
aad
neg
fdivrl
cmc
xchg
std
cld
xlat
xlat
xlat
cld
lret
out
std
mov
xor
sar
icebp
cli
std
cmp
aad
loope
mov
fsubr
ljmp
xor
ss
clc
jmp
or
fcomp
shl
jmp
cld
ljmp
out
xor
in
out
icebp
aad
out
int3
rol
fyl2xp1
lds
in
div
xchg
loope
shr
xor
loopne
in
idiv
sar
std
call
icebp
and
mov
fimuls
ljmp
ljmp
in
cmpl
add
cli
mov
out
ret
leave
loope
out
lret
jecxz
ret
shlb
shr
test
xchg
neg
mov
nop
lret
jecxz
sub
loope
icebp
repz
fdivr
repz
vpsubb
rcr
cld
orb
xor
rcl
div
into
cmp
loope
fsubr
test
jmp
ret
neg
in
addl
lret
out
int3
icebp
idivl
iret
repz
in
xlat
fcmovnu
out
lret
jmp
xchg
lret
jmp
loop
test
hlt
ret
adc
in
rol
mov
in
xchg
out
into
cmc
ljmp
icebp
div
cmp
enter
mov
test
mov
shl
in
idivb
ret
aam
call
lock
clc
clc
int
nop
test
repnz
repnz
ret
call
rclb
sub
iret
fucomip
shl
fdivrl
std
rorb
mov
nop
jmp
push
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
pop
xchg
or
jg
lret
jl
cli
cmp
cmc
aam
cmp
sti
aas
repnz
aad
mov
icebp
loope
mov
in
hlt
cli
shl
in
aaa
xlat
in
idiv
ljmp
testb
lret
out
ljmp
int
cmp
ljmp
jmp
fdivrp
cld
fucomip
test
fmull
enter
cmp
repz
cmp
in
sbb
jmp
fisttps
cmc
imul
sarl
std
neg
cmp
shl
in
test
fadd
shl
testl
shrb
not
enter
cmp
test
jmp
leave
jmp
dec
xchg
lret
stc
test
cmp
call
rcl
leave
sti
loop
int
lret
in
loopne
dec
int3
ljmp
aad
ljmp
ret
fdivr
stc
loope
loop
fxch
leave
out
out
rol
rcl
in
repz
aad
rolb
test
ljmp
mov
aas
loope
les
test
rcr
shl
in
jecxz
hlt
into
loop
loope
in
fmul
fcomp
rorl
aam
lret
pushl
fucomi
cld
ljmp
jmp
lret
out
adc
out
icebp
loop
out
cmc
lret
repz
fsincos
jecxz
jmp
lret
mov
std
xchg
in
icebp
sarb
jmp
xor
loop
out
loop
in
test
nop
jecxz
ljmp
ljmp
mul
test
ret
fisttpl
in
nop
xchg
xor
sar
hlt
enter
xlat
fdivr
or
loope
fmuls
fisttpl
out
jecxz
into
ror
repz
lret
cmp
clc
fld
fistpll
not
ffreep
ffree
in
cmp
repz
in
xorb
cld
cmp
stc
cmp
into
cmp
aad
test
test
fadds
int3
int3
imul
jmp
lret
cli
cmc
in
test
xchg
call
jecxz
ret
clc
aad
addb
out
cli
inc
out
xchg
icebp
rcl
jmp
ljmp
not
fprem1
iret
test
cli
cld
fcmovne
out
ret
std
rcll
icebp
sti
repz
call
xlat
cld
xchg
mul
std
jecxz
ret
ljmp
icebp
addb
mov
fsin
mov
leave
decb
shl
leave
fcomi
fcmovbe
cmp
cmp
lret
xlat
clc
jecxz
lds
enter
jmp
xchg
xor
cmc
out
sub
cmp
lret
shl
shl
ds
neg
in
xchg
mov
mov
and
ret
cs
enter
roll
cld
div
test
adcb
jmp
shl
clc
fnsave
into
shl
shl
loopne
jecxz
ljmp
shl
xchg
in
icebp
call
test
out
aam
ret
not
cld
loopne
fucomi
stc
test
leave
mov
nop
ret
iret
das
ss
int
std
ljmp
rcr
sti
shl
cmp
and
shl
enter
out
aad
lret
ds
fninit
rolb
stc
out
enter
jmp
idiv
xor
xorb
cmc
cmp
loope
add
testl
out
repnz
xor
rcl
cmp
cld
in
in
hlt
test
incb
inc
loopne
roll
in
fucomi
cmp
loopne
cmp
rolb
aad
out
loope
sti
in
shr
sub
leave
lock
fstp
cmp
ljmp
ret
lds
out
sbb
lock
fsub
ljmp
ds
addb
cli
out
xchg
cmp
loopne
lret
repz
lret
fstp
fcomip
in
cmp
jmp
mov
fcmovnb
in
mov
xchg
lret
jl
repz
jmp
xlat
jmp
mov
fdivp
imul
divb
cli
cmp
cmp
cld
jmp
ds
test
sti
leave
mov
out
rcl
shl
jmp
clc
icebp
fxch
rcr
xlat
sbb
call
sub
jmp
lret
fdiv
icebp
stc
cli
repz
aas
leave
jmp
testl
xor
xor
into
out
out
repz
clc
rorb
fadds
test
aam
loop
shl
cmp
into
std
ds
int
loop
xchg
cli
sar
mov
cld
icebp
leave
lock
aam
cmp
xor
icebp
fucomip
xor
out
orb
mov
leave
rcl
in
lret
out
in
cmpl
fsubr
sar
in
jmp
fcmovne
mov
aam
int3
call
xor
ss
faddp
fdivrp
stc
rcl
call
loopne
ljmp
xor
shl
call
sti
repnz
test
ds
hlt
sub
repz
mov
add
sub
aaa
repnz
ljmp
hlt
mov
sar
jmp
in
ljmp
stc
in
inc
fcmovnb
fcmovb
rol
cmc
cli
mov
fdivr
in
fildll
into
repnz
int3
icebp
ss
cmp
in
repnz
out
fdivrp
cld
mov
loop
aad
call
jmp
loopne
xlat
hlt
test
shl
out
out
out
xchg
int
loopne
jmp
lock
loope
lock
ffreep
mov
mov
int3
leave
call
mov
aam
neg
cmp
lret
cmp
ret
loopne
loop
mov
mov
lea
loop
sti
out
clc
idivl
out
fucom
in
fcomip
icebp
jecxz
testl
loope
lret
imul
loop
aaa
aad
cmp
sbb
cli
lock
fucomi
jecxz
lret
repnz
icebp
xchg
shl
fdivr
fld
jmp
out
enter
repz
stc
loop
test
ret
leave
out
stc
adc
orl
neg
lret
dec
cmp
stc
icebp
ds
cld
fistpll
fsub
jmp
in
aad
xor
aad
enter
aad
into
loopne
out
sti
ds
int
decl
hlt
loopne
iret
leave
into
repz
in
rcr
stc
ret
inc
loope
fstp
and
std
rorb
icebp
xor
sar
jmp
hlt
out
repz
loop
loope
shl
rolb
mov
into
push
xor
int3
xor
lock
cmp
loopne
clc
clc
loop
mov
jmp
out
mov
aam
call
aad
icebp
cmp
loope
addl
sti
fdiv
lock
xor
xor
int
neg
sarb
fcomp
jecxz
fdivp
loope
sar
in
ret
iret
xchg
fmull
xor
int3
cmc
cmp
in
ret
int3
lock
faddl
out
rorl
xor
fdiv
in
out
enter
loope
loope
out
into
in
std
xlat
jmp
sbb
int3
sub
iret
lock
lret
stc
xlat
cli
div
out
jecxz
cmc
xchg
aam
sar
in
fxch
int
fsub
xor
ret
aam
fucomi
out
test
sar
test
cli
cld
ret
xchg
hlt
mov
cli
mov
call
ljmp
ret
sarl
in
std
aaa
iret
fldl
jecxz
fsub
mov
testl
call
neg
aaa
sarl
sarb
fxch
repnz
fimull
xchg
lret
ljmp
xor
clc
fcmovnu
cmc
fsub
ret
mul
fcomp
rorl
out
xor
call
fdivp
loop
ret
stc
les
in
mov
loope
pop
les
clc
fmulp
fistpll
shr
loop
stc
ljmp
xchg
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
sub
lret
jl
rol
in
fnstenv
cld
stc
sti
fmulp
cmc
out
fnstsw
cmp
sti
std
aad
clc
mov
cld
cli
xchg
xor
xor
fdivs
repnz
in
cld
cmp
fxch
rol
icebp
aam
test
in
call
into
lock
cs
in
int3
leave
enter
cmp
fxtract
xchg
cld
out
mov
xchg
sbb
mov
xchg
rcl
ljmp
aad
in
stc
ds
cld
cmp
xchg
call
lock
xchg
in
ss
into
enter
ror
cmp
jecxz
cmp
loope
call
ljmp
stc
xor
cld
icebp
out
lret
aas
cmc
cmp
out
rcl
in
xlat
call
into
loope
loopne
in
call
lret
xor
out
stc
neg
test
fst
enter
call
icebp
hlt
rcl
ret
sti
clc
iret
cli
fsubr
fdivrs
fdivr
jecxz
in
test
fiaddl
int
in
ret
int
out
sti
lock
ret
out
jmp
test
jecxz
int
enter
fcmovnu
mov
lret
in
sar
roll
in
idiv
ficoml
in
xor
jmp
cmp
xor
out
addb
test
mov
xchg
xchg
jmp
ret
leave
fcmovbe
fcmovbe
shll
call
fdivrl
inc
repz
aad
aam
mov
fsubrp
in
nop
iret
out
call
sti
cmp
sar
rol
ret
out
fiaddl
testb
rorb
repz
aas
jmp
int3
call
testb
in
imul
dec
loope
icebp
xchg
icebp
iret
rcr
jmp
jmp
repnz
incb
xchg
fcmovb
enter
rcr
call
in
xchg
ds
sub
hlt
in
repnz
imul
ror
shl
vshufps
test
xchg
leave
int3
mov
adc
cs
into
loop
int3
not
jmp
ret
sarl
clc
rol
leave
leave
clc
jecxz
xchg
repz
xor
in
out
cmp
enter
cmc
cmp
and
shr
mov
fadds
ror
clc
jmp
out
sarb
fdivrs
jmp
leave
ret
dec
mov
aam
stc
lock
fidivrs
rcl
xlat
test
cmc
les
fdivp
fcmovnu
loope
cmc
repnz
enter
aaa
cli
call
ljmp
clc
fiaddl
sbb
lock
shlb
cmp
idivb
aad
repnz
fnstcw
orl
sub
shr
repz
fld
sti
vpsubusb
ds
iret
icebp
aas
xchg
cld
xlat
mov
orl
call
ds
ljmp
call
xchg
lret
into
test
xor
int
out
lret
lret
clc
hlt
aam
jmp
out
test
call
leave
enter
sti
div
std
cmp
idiv
not
cld
loope
ds
mov
sub
ret
call
rcl
in
les
sub
fildl
int
aad
loop
fsub
jmp
in
repnz
fmul
roll
fdivrp
loope
xor
aam
xor
out
cmp
in
cmp
test
int3
iret
loopne
shl
shl
int
lret
cld
lret
aaa
stc
rcr
xchg
out
mov
jecxz
mov
into
out
out
aam
sub
xor
idivl
cmc
clc
or
cmc
call
leave
mov
loopne
loope
in
iret
out
mov
sarb
int
fldl
cmp
mov
shl
out
shr
in
out
jmp
shl
aam
xor
adc
fndisi(8087
in
xchg
int
lret
xor
xor
xlat
cmp
lret
lret
iret
fcmovnbe
neg
stc
out
std
rol
cld
fsub
mov
out
xor
fnstsw
cli
xlat
call
je
movl
jmp
rcl
rcl
roll
in
push
dec
adc
jl
iret
shl
repz
lret
jmp
fcmove
iret
in
int
xor
in
jmp
out
iret
rcl
test
xchg
enter
test
loop
cmc
int
into
shrl
jmp
dec
sar
jecxz
test
sti
iret
out
xor
stc
hlt
lret
aaa
repz
in
lret
jmp
fsubr
mov
fisttpl
loopne
int
out
stc
lret
fucompp
ljmp
std
shl
rcr
lret
xlat
out
out
nop
test
in
roll
icebp
divb
stc
sti
xor
xor
fadds
aam
loope
loopne
mov
in
in
lret
fcmove
out
jmp
loop
hlt
cmc
cmp
idiv
les
mov
xchg
div
cmp
int3
cmp
stc
iret
sti
in
clc
cmp
xlat
hlt
jmp
in
test
lret
xor
ljmp
lock
xchg
hlt
test
ljmp
out
ror
out
ss
fnstsw
xor
lret
fucomi
lock
xchg
fistl
xor
cmp
lret
repz
fdivr
stc
mov
testl
ss
rcr
int3
cld
fcomp
out
aam
into
fdivrp
ret
xchg
vpminsw
cld
cli
out
icebp
fcmovne
cli
in
int3
xor
aaa
ror
xor
div
clc
cli
idiv
stc
jmp
jecxz
jecxz
int
iret
xor
repz
sti
add
mov
in
fld
rcl
icebp
out
cmp
fsub
ss
testl
lret
in
fucomip
xchg
enter
cs
sti
xor
xor
cmp
ffree
jecxz
loop
testl
cmc
jmp
cs
int3
out
cmp
in
aad
roll
into
pop
sbb
aaa
xor
hlt
xor
std
sti
hlt
out
cmp
fcmovnbe
mov
int
lret
cmc
lret
out
aam
imul
rcl
cmp
imul
int
lock
mov
lret
xchg
fildl
into
bnd
cmp
cmp
leave
fdivrs
repz
lock
loopne
test
leave
fimull
and
cmc
lret
cmp
lock
rcr
roll
aas
out
neg
std
out
lds
lock
jmp
fdivs
cmp
fcomp
cmp
ds
cmp
cmp
ret
lea
loope
xchg
xchg
jecxz
jmp
out
out
in
loope
call
cld
loopne
enter
leave
fucomp
mov
lret
jmp
out
cmp
stc
ror
out
cmpl
repnz
add
jmp
test
aam
test
icebp
sarl
enter
int3
inc
xlat
cmp
mov
std
sbb
std
cmp
ss
out
xlat
clc
std
int3
sbb
add
mov
cli
neg
std
mov
int
rcl
out
leave
xor
cmp
aad
push
call
rcl
leave
jecxz
in
int3
jmp
addl
sarb
cmc
icebp
ret
test
in
inc
int
orl
mul
in
shlb
loopne
loop
sti
ds
loopne
adc
testb
mov
jmp
repz
in
sarb
roll
fcmovnb
xchg
iret
lret
in
mov
leave
lock
int3
iret
out
enter
rcr
cmc
xlat
aam
cmc
cli
xlat
sbb
mov
cmp
enter
fcmove
icebp
iret
fiaddl
mov
test
out
enter
fcmovbe
xor
aas
out
sar
int3
repnz
sar
in
xlat
faddl
iret
lret
cmp
rol
jmp
cmp
cld
xchg
out
xchg
dec
mov
lret
cmp
sar
fcmovne
test
cmp
sti
repnz
rcl
loope
lea
jmp
lret
ret
int
jle
rcrb
jg
lret
jl
std
xchg
xchg
xchg
enter
in
cmp
in
sti
cmp
lock
enter
mov
fstl
lret
xor
divb
cmp
aam
ret
test
stc
xlat
fsubr
stc
in
clc
cmp
test
leave
cmp
fnstsw
repz
xor
roll
in
aam
mov
cli
icebp
icebp
ljmp
cmp
hlt
int
lret
iret
vpaddq
ret
out
call
nop
in
sub
fyl2x
cli
ljmp
ffreep
jecxz
div
aam
jecxz
mov
cld
sarl
out
shr
cmp
lret
ds
cmc
jmp
loopne
add
std
call
test
add
jmp
enter
ror
call
lock
ret
leave
orb
faddp
iret
iret
xor
xor
aam
testb
test
xchg
in
mov
mov
xchg
xchg
cs
int
repnz
neg
loope
in
repnz
les
ljmp
repz
lret
iret
sub
stc
std
ss
shl
cmpl
ljmp
shr
mov
xor
xor
cld
fdivr
cmc
lock
loopne
mov
ror
mov
lret
hlt
fsubr
shl
in
out
call
out
icebp
rolb
ror
ljmp
fnsave
fcomip
cmp
fdiv
rcr
test
test
and
inc
lret
test
repz
xor
cmp
in
ljmp
fdiv
xor
imul
ret
enter
out
loope
repz
shl
ss
call
ds
int
rolb
ret
in
nop
cld
out
cli
xchg
int3
loope
cmc
ror
cmp
shl
loop
cld
sar
sbb
cmc
les
xchg
jmp
xor
repz
into
roll
loopne
cli
std
cmc
xor
and
adc
fbstp
out
in
leave
out
aam
xor
shl
fdivr
test
sbb
in
fldl
sti
not
sti
shr
rcl
fmulp
in
ds
leave
cld
loope
leave
loope
icebp
aaa
in
int
ret
in
xor
hlt
sti
cli
cmc
ret
cli
call
lret
test
jmp
subl
lret
call
rolb
std
aam
lret
into
icebp
nop
popl
test
cmp
neg
xor
fdivp
iret
testb
fucomi
and
ljmp
das
out
fxch
call
fmulp
cld
int3
loopne
call
fdivrp
xchg
call
clc
out
cmp
loope
std
hlt
incb
test
std
xchg
out
cld
int
lock
sarl
xor
int
repnz
fiaddl
fdivr
rcl
loope
enter
loop
out
leave
into
out
icebp
into
leave
in
cld
fcmovb
ret
icebp
cmp
sarl
testl
rclb
out
idivl
cmc
repz
jmp
jmp
ret
jmp
fxch
fiadds
call
aam
int
lret
cmp
stc
ss
ret
aam
fabs
mov
jecxz
jmp
ss
iret
cli
testb
cmp
clc
loopne
int
lock
xor
enter
out
into
hlt
fcmovnu
sar
enter
loopne
out
in
hlt
in
out
cmc
out
cmc
cmp
icebp
rolb
sti
fldl
int3
jmp
sub
sar
shl
enter
int
xchg
cmc
imul
xchg
filds
fcom
in
clc
xlat
fiaddl
loop
aas
ds
sti
int
shl
xchg
xchg
into
xor
cs
cmp
cmp
std
sti
sbb
aad
movb
xchg
fisttps
shl
in
cld
leave
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
ficompl
fwait
daa
in
jg
lret
jl
lret
adc
rorl
lret
ljmp
adc
in
in
aam
rcl
shl
xlat
cmp
xlat
std
aad
test
ljmp
pop
add
les
xor
sub
idivb
jmp
in
icebp
in
ds
lock
std
xchg
mov
int
mov
repz
clc
cmp
cmp
sti
cmp
cmc
ds
rorb
call
rorb
out
repz
out
ss
icebp
idiv
cmp
aam
fmulp
test
ljmp
aaa
xor
f2xm1
iret
clc
cmp
test
fcmovbe
icebp
fadd
jecxz
test
mov
loope
shr
mov
fdivp
out
repnz
int3
hlt
cmp
cmp
cmp
hlt
loopne
aad
ljmp
leave
mov
stc
lret
cmp
ljmp
sbb
lock
ds
out
fdivl
rcr
loope
rcl
lock
fdivrp
repnz
hlt
iret
xabort
sar
ror
fcomip
xor
aad
call
shl
xlat
addl
test
mov
xor
stc
jmp
cli
int
std
repnz
out
loopne
leave
faddl
or
int
mov
lock
std
fprem1
cli
enter
addb
loopne
addb
mov
xor
out
cmp
lret
aad
idivb
rol
jecxz
imul
leave
fiaddl
into
xor
test
les
in
xor
enter
loopne
fdivrp
mov
xchg
repz
hlt
jmp
frndint
std
fcom
cmp
rol
sti
aas
fsub
aam
ret
jmp
lock
xchg
aaa
shll
lret
fidivl
cmp
int3
loopne
in
rcl
repnz
out
fnsetpm(287
int3
xchg
out
loopne
in
out
cld
int
xlat
icebp
testb
repnz
enter
lret
mov
in
ret
sarl
lret
lret
test
cmp
or
cmp
lret
ror
ror
adc
jecxz
int3
int3
sti
cmp
in
jmp
rcl
lock
repz
rolb
call
int
or
icebp
in
int
cli
testb
fucomp
cmp
in
mov
mov
fsubrp
xor
aad
in
leave
cmp
ret
cld
cmp
loop
cmp
jmp
fsubp
in
fmulp
divl
xor
lret
into
cmp
cld
aas
fnclex
iret
lock
fdiv
cld
hlt
and
mov
rolb
lret
idiv
xor
fnstsw
lret
adc
cld
test
icebp
xlat
rorb
in
out
shl
aad
leave
jmp
fcmovbe
fmulp
int
ss
stc
jecxz
sti
in
addb
adc
jmp
repnz
fsubr
fstpt
cmp
cmc
fcomip
xlat
out
fnclex
std
xlat
out
adc
loopne
loop
stc
ss
ss
icebp
in
shr
cli
cmp
repnz
out
lret
iret
adc
incb
repz
cmp
cmp
test
mov
fisttps
xor
out
call
hlt
lock
sarl
int
shl
hlt
int3
jmp
ret
ljmp
sub
iret
repnz
jmp
int3
xlat
lret
in
fisttpll
hlt
sbb
loopne
jecxz
xchg
aam
sub
jecxz
call
adc
test
cmp
fscale
or
int3
jmp
cs
lock
out
ss
repnz
rcl
cli
cld
test
jmp
mov
loope
xor
repz
xlat
int3
ljmp
aad
testb
jmp
into
hlt
iret
icebp
xor
lret
out
imul
cmp
sti
in
fcmovbe
sti
sti
xchg
mov
sti
lret
lret
cld
lock
test
into
repz
sarb
std
cmc
out
cmp
fsubp
rcr
lds
fcmove
enter
xchg
call
jmp
cmp
lret
repnz
repnz
push
or
rorl
add
add
add
int3
ret
ds
jge
jae
push
xorl
jl
test
std
test
mov
repnz
icebp
ljmp
xor
incb
fisttpl
aaa
in
aad
call
fcmovbe
repz
aam
enter
ljmp
repz
xlat
ss
sar
rolb
adc
out
hlt
neg
in
cld
fdiv
loopne
stc
shl
shl
sti
rcr
into
loope
in
aad
fsub
xlat
cli
mov
ljmp
xor
aaa
aaa
into
lret
jmp
xlat
fcom
test
hlt
shl
fcmovb
and
nop
int3
call
ss
xor
cmp
cmp
rol
shl
xchg
xchg
mov
cld
shrl
ror
fcomi
ror
cli
icebp
cmp
repnz
fdivrp
int
xchg
sti
out
repz
ret
int
in
lret
aam
out
cmp
test
fnclex
out
in
clc
adcb
in
repnz
iret
fdivs
not
ret
addl
mov
in
sar
rclb
fcmovnu
out
xor
cmc
cmp
into
mov
leave
ljmp
mov
test
shr
in
vcomisd
sti
cmc
cmp
cli
icebp
stc
add
not
out
fisttpll
repnz
in
fmul
cld
aas
int
cmp
cmp
in
std
fmul
fiaddl
xor
ljmp
out
cmp
cld
shl
fsubrp
shl
xchg
stc
loopne
fildl
ss
in
aad
icebp
loope
cmp
cmp
aas
sbb
jmp
mov
icebp
fiadds
cmc
fdivrs
cmc
aad
sub
cmp
mov
fmul
aam
sub
sti
icebp
faddl
fcomip
jecxz
push
les
fucomp
sub
out
into
cli
xor
cmc
cmp
icebp
fidivrl
fyl2xp1
ds
repz
vpaddsw
enter
jmp
fmul
jmp
shr
cmp
out
fdiv
cmp
out
loope
test
xlat
fcmovnu
jecxz
into
rcl
xchg
xchg
out
iret
xor
divb
cs
cmp
out
fnstcw
into
out
test
xlat
test
clc
mov
lock
ljmp
out
shlb
jmp
iret
cmp
leave
push
loop
lret
mov
test
repz
aaa
icebp
cmp
xlat
cmp
xor
std
lret
mov
int
mov
xchg
loop
cmp
aad
lds
cmp
loopne
out
hlt
xchg
mov
out
aam
cs
fcmovbe
cli
hlt
fcmovu
fcomp
in
in
mov
out
lret
mov
in
lret
fists
lret
jmp
std
cmp
out
mul
cmp
in
xchg
out
fadds
hlt
repz
ffree
out
xor
in
xlat
dec
clc
rolb
xchg
loop
orl
iret
enter
cld
rcr
lret
into
loope
cmp
or
jmp
in
xchg
ljmp
lret
in
out
in
ds
ret
test
out
fcmovne
fucomi
xchg
out
repz
cli
xor
cmp
fiaddl
cmp
fimuls
mov
mul
aam
out
lret
fdivr
jmp
fnstcw
aam
repz
in
xchg
xchg
fisttpll
repnz
not
iret
lock
int
test
stc
rol
fsub
fmul
addl
out
call
fneni(8087
shl
flds
ljmp
in
faddl
idivb
cmp
testl
fucomi
fxam
in
repnz
mov
sarl
out
in
hlt
out
call
ffreep
aam
sub
mov
out
int
iret
out
iret
fucomip
ret
ret
rcl
xor
ror
add
mov
int
lret
imul
in
out
ljmp
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
xor
add
jg
lret
jl
cmc
jmp
fidivrs
roll
repz
test
orb
rorl
cmp
ss
leave
fprem1
shr
sar
lock
sti
adc
test
lds
jmp
aam
fucomi
icebp
loope
shl
repnz
lret
iret
sti
xchg
rorl
rcl
in
cmp
in
aam
repnz
cld
cli
mov
ljmp
sar
loopne
jmp
lock
int3
int3
out
jmp
cmp
and
loop
cmc
mov
out
iret
enter
loop
sub
xlat
out
sti
cld
fcmovu
fcmovnu
fnstcw
shr
adc
sbb
icebp
loopne
mov
cmp
fidivrl
fldl
fcmovnu
xlat
xor
ljmp
cli
shr
mul
shl
cmp
enter
sbb
out
addl
in
int3
int
mov
ret
xlat
cmc
enter
ds
out
faddl
aam
xlat
fimull
test
shl
shl
in
aaa
sti
cmp
ret
fstp
test
jmp
orl
jmp
std
shr
rcl
aas
call
out
repz
test
int
mov
mov
rcl
iret
in
repnz
icebp
stc
icebp
repnz
out
incb
ds
fcmovb
ret
std
leave
ljmp
cs
xlat
fdivr
jmp
clc
stc
not
not
repnz
repz
stc
xor
out
test
clc
sbb
mov
mov
xchg
xorb
ret
vcvttpd2dq
lock
fcmovne
aam
sar
cmp
rorb
test
shl
nop
lret
call
in
out
xlat
jmp
cmp
repnz
in
mov
xchg
xchg
and
fmul
ret
xor
fdivrl
out
ror
cli
in
in
xchg
int3
lret
lock
loope
lret
out
repnz
xor
icebp
xlat
int3
ljmp
sti
rol
add
mov
out
in
in
clc
stc
fidivrl
aad
ret
lock
std
std
clc
out
out
cmp
fadd
shlb
cmp
loope
loop
in
icebp
aas
inc
cmp
clc
jmp
icebp
lret
loop
fcmovnu
icebp
clc
idiv
stc
cmc
rcr
cmc
sarl
faddp
fisttpll
lret
loop
cmc
out
ds
icebp
ljmp
xchg
icebp
leave
cmp
std
inc
ror
repnz
cmp
xor
aam
stc
div
xor
aam
fstp
cli
fiadds
loop
into
call
out
loope
xor
loope
xor
clc
xchg
mov
lret
sti
in
cld
fcmove
int
into
aaa
clc
out
xlat
loope
mov
ret
int
std
jmp
xchg
enter
fcmovne
hlt
in
enter
cmp
std
cmp
ret
fdivrp
cli
stc
sti
mov
jecxz
loopne
out
iret
in
repz
fucompp
fdivrl
fiadds
std
cmc
fiaddl
xchg
rclb
ror
cmp
cld
cmc
into
shl
int3
rolb
cmc
loopne
loope
out
int3
out
decb
ret
lock
xor
lret
ret
repnz
loope
int3
jmp
leave
incl
aam
ror
div
cli
repnz
repz
out
repz
cmc
test
loope
std
leave
fmuls
out
enter
jmp
out
fxch
ds
addl
leave
fsubr
loop
into
repz
xor
lock
fsubr
jmp
iret
xlat
out
cmc
loopne
fsubrp
in
stc
in
out
ret
out
aam
fnstenv
xor
int3
out
rcr
test
lret
fdivr
mov
xchg
in
in
neg
loop
sub
dec
in
icebp
fcmovnbe
loopne
out
addb
xchg
fisttps
xor
cmp
xlat
sar
cmp
cld
cmp
data16
add
ds
rcr
fsubr
push
scas
push
jecxz
into
sub
lret
jl
aam
ret
loop
out
mov
test
out
aas
ds
fcmovnu
shl
aas
in
int
stc
icebp
in
ffreep
inc
mov
incl
out
icebp
aam
sar
repz
idiv
shl
ljmp
fldl
in
jmp
enter
call
xlat
out
cmc
clc
int3
out
cmp
shl
test
lret
mov
iret
xchg
jmp
aaa
int3
stc
icebp
jmp
fsub
fst
loop
mul
jecxz
sar
jmp
cmc
loope
jmp
ror
rcl
rcl
int
cld
clc
cmp
test
repz
xlat
loope
call
loopne
test
ret
cmc
leave
lret
in
xlat
aam
leave
ror
fidivrl
sub
mov
fnclex
in
out
test
jmp
fucomip
out
lock
div
fxch
into
faddl
aad
lret
lea
enter
cli
clc
std
cli
jecxz
cmp
clc
jecxz
testl
out
out
fxch
cmp
ss
xlat
in
bnd
into
loopne
cld
stc
ret
decl
cli
in
das
lock
xor
icebp
jmp
cmp
std
jmp
out
shl
stc
aam
in
sti
fcomp
out
fdivl
xlat
out
ror
aam
out
into
ds
aad
aad
vshufps
fld1
in
in
sti
cld
fsubr
xchg
pop
out
in
in
jmp
repz
icebp
icebp
ror
call
int3
mov
in
divb
cmp
lret
clc
fdivrp
ss
leave
jmp
xchg
lock
xchg
icebp
hlt
call
ror
fsubrp
sti
std
ret
call
loopne
test
in
mov
aam
sbb
out
out
rcl
loop
out
out
xor
ss
into
adc
xlat
loope
fsub
ljmp
orl
cmc
ljmp
cmp
ds
fdiv
mov
test
out
int
mov
ds
out
iret
clc
lret
fcmovnbe
sti
fiadds
sti
cmp
cld
adc
in
std
aaa
fdivs
out
repz
fildl
roll
fcmove
or
rolb
fxch
aaa
cmpl
xlat
aam
mov
lret
mov
xor
aad
repnz
xor
lret
ljmp
fld
std
in
mov
xchg
repz
jecxz
enter
hlt
hlt
loopne
in
repz
testl
in
repz
repz
enter
xlat
cmp
xlat
icebp
incl
cmp
in
mov
jmp
shr
into
cmp
lock
repnz
sti
cld
xchg
fadd
out
call
in
int
test
fmul
ljmp
leave
out
mov
faddl
cmc
loope
iret
repnz
fucomp
cmp
fstp
div
in
stc
neg
in
addb
xor
sub
cmp
fadd
addl
int3
test
lret
int
ljmp
stc
fsubrp
cli
cmp
stc
lock
mov
les
jmp
sub
jmp
clc
ds
xlat
jecxz
idiv
addb
mov
fists
xor
shlb
lret
rcl
fcom
cmp
ds
cmp
out
std
sub
xchg
xchg
int
aam
call
cli
shl
fdivrs
loope
ret
sar
jmp
jmp
imul
aad
lock
icebp
lock
out
lock
fstp
out
aad
jmp
ljmp
xor
shl
sar
xor
call
jmp
mov
std
orl
ror
stc
rcl
cmp
std
aas
idiv
in
mov
sti
jecxz
icebp
int3
xor
xor
cmp
iret
std
lock
ss
out
lret
loope
xchg
jmp
orl
int3
fcmovnbe
int
loope
insl
lahf
jno
mov
pushf
das
jg
lret
jl
aaa
vaddsubpd
xor
rcr
out
loopne
hlt
call
cmp
out
mov
idiv
jecxz
rol
mov
or
xor
jmp
shr
std
into
cmp
xor
mov
nop
lret
aaa
shll
int3
ret
fsubr
out
sti
stc
stc
lock
out
mov
xchg
jmp
in
int
clc
fnsave
xor
clc
std
cld
ror
repnz
sti
rcr
aad
lret
out
iret
out
test
aam
iret
xor
shr
out
clc
enter
fucomp
out
cli
xchg
xchg
mov
fmul
xor
int
iret
int
aaa
icebp
into
cmpb
cmp
rol
sti
fucomi
mov
jmp
out
sub
ret
ret
int3
ror
cmp
cmp
cmp
out
cmc
loop
mov
stc
in
clc
flds
in
shl
ret
aaa
lock
faddp
sar
fxam
lret
lret
enter
shr
test
test
int3
xor
icebp
ljmp
xlat
ret
jmp
fiadds
sub
ret
cmp
sarb
aas
roll
out
cld
clc
lret
nop
test
ret
out
rcl
iret
cmp
aam
cmp
in
xlat
lock
loopne
clc
int
adc
xchg
ss
cli
fsubr
xlat
xlat
xlat
aad
idiv
out
enter
sti
jmp
sub
imull
aad
iret
fmul
xor
in
shl
ds
fsub
loope
stc
mul
out
out
repnz
out
shl
stc
aaa
repz
in
icebp
fcmovnu
int
cmp
xchg
mul
fcmovu
xlat
jmp
loop
fucomp
jecxz
into
shr
cmp
stc
lock
fcomi
roll
out
test
xchg
xchg
shr
divb
in
ss
fdivrs
cli
in
mul
loopne
iret
loopne
push
xlat
mov
lds
rol
lret
ss
cmp
hlt
lock
call
idiv
in
cli
cmc
fsubr
incb
xchg
jmp
icebp
lret
leave
cmp
sarb
flds
fcomip
call
jmp
in
das
ret
cli
icebp
enter
sti
out
fadd
rol
add
ljmp
aaa
aad
xor
xor
in
jmp
in
xchg
xchg
fsub
stc
stc
mov
out
test
into
aam
lret
jmp
hlt
lret
std
out
ror
incb
addl
xchg
out
fnstenv
jmp
lock
shl
testl
ljmp
fstp
in
std
call
ds
ret
repnz
cmp
cmp
test
xor
in
call
aad
xor
aam
jmp
stc
into
lret
nop
xchg
repnz
out
lret
hlt
leave
int3
iret
loop
cmc
rcr
leave
cmc
std
cmc
sbb
cli
addl
hlt
out
int
fcmovnbe
dec
fcomp
icebp
in
sti
lock
neg
in
cli
int3
in
xor
cmc
clc
ror
fpatan
out
lock
cli
cmp
repz
cli
enter
enter
in
xor
clc
aad
cmp
jmp
vaddsubpd
fiaddl
icebp
lock
xchg
enter
aam
ss
fcmovnu
xor
sti
xlat
cli
aad
faddl
shl
in
aam
ds
ret
shl
jmp
fcmovbe
xlat
in
xlat
in
loope
out
out
fdivrp
jmp
int
sub
out
out
shl
aas
cli
neg
aam
orl
shl
sub
jmp
xor
ds
xlat
incb
mov
loop
out
out
mov
mov
ret
enter
out
int3
jmp
aam
fcmovb
mov
cmp
enter
out
std
cld
loop
loope
xor
repz
lock
std
hlt
neg
std
call
mov
lret
xor
cmp
out
cmp
int3
xlat
repnz
roll
jmp
iret
iret
sarb
aad
aad
pop
sbb
adc
jl
add
fstp
loope
test
in
mov
jmp
orl
out
lret
lret
aam
vcmppd
lret
fmull
fcmovne
out
xchg
rcr
shl
out
in
fcmovu
cmp
sar
out
ror
loop
sbb
mov
ljmp
loope
aad
cld
lock
std
lock
cmp
rcl
repnz
lret
mov
into
fcoml
icebp
lret
lret
lret
xor
cmp
lret
cmp
addl
ljmp
xor
jmp
fucomi
sar
cld
iret
fsincos
test
xlat
xlat
decl
fldl
xor
out
repnz
sar
sti
fmulp
cld
ret
clc
leave
loop
int
fcmovu
mov
lret
loopne
ljmp
fucomip
jmp
ss
mov
int3
mov
xchg
rorb
cmp
fld1
jmp
aam
loopne
hlt
shl
cld
loopne
and
jmp
lock
rol
xor
jmp
call
cmp
aas
fcomi
div
clc
std
fisttpl
fdivr
jmp
xor
rcr
sti
ss
xor
add
xor
decl
cld
ficoml
aad
loopne
iret
xor
lock
aaa
repz
hlt
sar
ret
mov
enter
out
out
in
iret
int3
icebp
rcl
xor
in
f2xm1
in
repnz
into
cmp
cld
cmp
fsubp
loope
fucomip
jmp
lret
lea
in
out
lret
jmp
ror
aas
fcom
rol
fsubr
cmc
out
clc
out
shr
fldl
leave
shr
fsubrp
out
repnz
ret
orl
addl
in
cmp
div
out
shr
aam
aas
ds
xlat
enter
in
out
mov
in
cmc
ljmp
repz
int3
in
aad
loope
std
shr
fcomp
out
xchg
xor
sti
xor
iret
rcl
cld
sti
sti
loope
out
stc
fadds
mov
xchg
loop
in
xlat
jmp
jmp
ret
cmc
iret
rcr
cld
ret
enter
mov
mov
repz
ret
jmp
cli
icebp
sti
fiadds
std
leave
mov
leave
jmp
loope
rol
clc
into
out
int3
ds
xor
aam
cmp
aad
jmp
ljmp
jmp
cmp
hlt
in
in
ljmp
ss
orl
out
ss
call
ljmp
fdivr
cmp
aam
and
mov
in
lret
xor
aad
in
cmp
std
repz
loopne
faddl
jmp
das
cmp
in
lret
aad
fucomip
out
ds
rol
xchg
in
in
fdivrp
test
cmp
int
aas
stc
ror
fstpt
out
ss
cmp
call
rolb
mov
xchg
xchg
aad
int
jmp
fstpt
fdiv
cmp
shl
ror
in
and
lret
das
loopne
fcomi
out
iret
lret
cmp
fdivrp
lds
icebp
aad
cli
int
fadd
in
int
in
aad
xor
fmul
repnz
adc
ret
aam
fucom
fmulp
xchg
xchg
incb
repnz
ljmp
cmp
ret
addl
std
enter
mov
leave
in
in
cmp
shl
xlat
cmp
ret
out
xlat
aam
lds
out
hlt
idiv
aad
sti
aam
fmul
fnstsw
lock
mov
lret
test
into
loope
loopne
fxch
xor
clc
sti
lock
test
enter
mov
in
nop
xchg
xchg
in
not
xor
iret
iret
fsin
fldz
push
repz
test
stc
out
int3
sti
out
icebp
shrb
xor
repnz
aam
cmp
cmp
push
jecxz
int
loop
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
dec
inc
ds
ss
add
lret
rorb
into
cmp
int
in
cmp
clc
repz
repnz
shl
lret
lret
call
jmp
lret
rcl
ds
xchg
cmp
mov
incl
das
loop
out
xor
cmp
hlt
ds
idiv
ret
lret
mov
jecxz
fxtract
clc
lock
cmp
ljmp
not
mov
fsub
add
lret
loop
hlt
sti
sti
xlat
int
into
clc
loopne
repz
fiaddl
clc
fdiv
mov
xchg
hlt
ror
leave
sti
cmc
lret
shr
ljmp
test
cmp
mov
and
in
aaa
sub
icebp
into
ror
sti
loopne
fucom
in
fiaddl
into
mov
iret
hlt
xchg
mul
int
cld
aaa
or
clc
stc
rolb
leave
mov
in
cld
fstp
jmp
enter
in
enter
int
aaa
fcomi
call
stc
sti
jmp
aam
jmp
icebp
int3
in
repnz
out
out
fildl
imul
fcmovu
jmp
test
int
call
aad
xor
fcmovnu
repnz
call
out
sar
addl
out
loopne
ret
in
ror
fidivl
fsubrp
aas
rcl
test
loopne
leave
not
jmp
orb
out
test
xor
cmp
loopne
fldlg2
fadds
sti
out
leave
cli
loop
icebp
loope
imul
std
out
test
stc
testl
icebp
xchg
lds
ret
das
hlt
dec
fcmovb
std
hlt
aad
xchg
leave
jecxz
xchg
fsubp
mov
jmp
cmp
loopne
addl
cld
mov
out
test
iret
clc
out
iret
cmp
sarl
ret
test
and
jecxz
and
int
ror
aad
in
loopne
fnsave
hlt
leave
cmc
fsubr
aad
cmp
shr
stc
mov
out
mov
ret
jmp
cmp
ror
test
loop,pt
testb
mov
lret
sar
in
out
repnz
cmp
fiadds
xlat
adc
loope
dec
mov
fdiv
mul
int
les
out
cmc
ror
rcr
icebp
icebp
incb
loopne
xchg
mov
call
ror
lock
cmp
call
in
xchg
clc
fmul
orl
loope
out
int
xor
xor
shl
adc
cld
sar
fadd
jmp
mov
cmc
repnz
icebp
in
out
xor
iret
repnz
fmul
ret
sbb
enter
fsub
in
lret
lret
sar
hlt
out
shll
out
inc
cli
fcomp
mov
std
mov
decl
fxch
fstp
rcr
cmp
rcl
ds
add
enter
std
out
mov
ljmp
shl
iret
not
cli
rcl
clc
call
hlt
loope
std
add
lret
lret
jmp
sub
repnz
sar
xlat
jecxz
xchg
cmc
jecxz
sbb
loop
xchg
out
aam
xor
leave
in
in
cld
cmp
shl
cli
stc
jecxz
sti
vpsubb
fmulp
mov
xor
iret
icebp
idiv
shr
sti
cmp
dec
repnz
icebp
adc
loope
addl
icebp
filds
out
cmp
sti
dec
ror
sbb
dec
out
out
in
mov
int
shr
aad
fcom
fcmovnu
loopne
stc
lock
ds
shl
in
cld
rorb
jmp
in
xlat
repz
in
cmc
cld
in
ret
repnz
incl
sti
jecxz
mov
out
out
xchg
xlat
repz
out
xor
shr
not
out
aam
shl
cld
repz
sti
in
mov
into
repz
out
fcoml
jmp
jmp
std
ret
iret
loopne
rol
mov
jmp
or
std
lock
xor
fdivr
std
aad
sti
cmp
xor
cld
cmp
out
hlt
lock
cs
ret
aam
ss
into
iret
loop
xor
fucomp
ror
call
int3
mov
int
jecxz
in
repz
shl
in
sarb
out
xchg
leave
vpandn
test
loop
idiv
call
in
in
rcr
std
xchg
repz
xchg
repnz
lock
xor
push
movl
jmp
into
rol
aad
rcl
jmp
dec
sub
cmp
jl
int
aad
aad
out
cmp
cmp
cmp
std
jecxz
aam
mov
das
loopne
xor
stc
in
cmc
leave
ds
out
incb
enter
addl
rol
sti
cmp
ljmp
in
fisttpll
adc
enter
jecxz
fxam
xor
ss
vpsraw
fdivr
test
in
out
repz
xlat
call
lret
call
cmpb
fsubr
cli
aad
mov
mov
out
aaa
xor
out
idiv
out
cmp
enter
iret
ss
std
loop
in
out
xchg
ret
cli
cld
addb
repz
stc
sarb
xor
cmc
test
aad
loop
out
mov
out
jecxz
int
repz
fnstcw
cmp
cmc
out
clc
int
fistpll
fcomip
stc
ljmp
loopne
ljmp
cmp
xlat
clc
cld
fdivr
cmp
std
add
mov
test
out
fisttps
loopne
aam
in
fucom
ds
out
ret
jmp
dec
fimull
jmp
idiv
lret
incb
aas
mov
stc
mov
decb
subb
in
jmp
std
cmp
shr
cmp
in
test
xbegin
out
rol
out
repnz
ffree
out
int3
aam
hlt
aas
aad
jecxz
lret
in
in
fcomi
in
jmp
cmp
in
xlat
enter
rolb
lock
ret
fdivr
loop
sbb
repnz
xchg
in
xlat
lock
rcl
out
hlt
aaa
xchg
ret
rol
out
jmp
repz
jmp
out
xor
ds
sti
in
loop
into
aas
mul
mov
sar
xchg
xchg
jecxz
rcr
cmp
sub
cmp
cld
cmc
cmp
iret
aas
cmp
fdiv
ljmp
in
cs
leave
icebp
cmc
jmp
fsubr
aas
cli
xor
loop
cli
loope
enter
loopne
xor
repnz
cmp
in
fiaddl
test
fcmovnb
mov
mov
out
lret
cld
ror
aad
cmp
in
sar
in
sub
stc
mov
stc
int3
enter
sar
in
loop
out
cs
cmp
xlat
xor
ret
sti
loope
fcomp
rol
cli
test
stc
in
mov
lret
int
sub
cmp
lret
fcmovu
int
repz
fcomip
clc
aam
in
fucomp
sti
xchg
lret
rcl
ss
cmc
xor
rcr
push
les
int
int3
xbegin
in
xor
out
int3
repnz
in
lret
loope
aam
hlt
and
jmp
mov
ret
mov
test
into
lret
cmc
jmp
cmc
std
imul
rcr
test
cmp
stc
les
icebp
in
repz
shl
cmp
lock
hlt
sbb
test
aam
addb
in
rcl
repnz
xor
shr
icebp
aas
in
sti
out
cld
ffree
add
cld
lret
into
jmp
call
loope
out
iret
int3
rol
cmc
and
shl
sub
lret
out
fyl2xp1
fnop
cmp
jecxz
loopne
fcomip
mov
xchg
stc
shr
mov
mov
fidivl
int
cli
cmp
cli
lds
hlt
rorl
in
mov
out
enter
out
fstpt
in
cld
in
loop
in
rorb
fucomip
and
test
lret
lret
call
icebp
sti
loop
clc
mov
lret
jmp
in
jmp
sub
enter
fmul
repz
test
cmp
repz
fcmovnbe
mov
mov
mov
das
xor
rcr
cmc
jmp
xor
aam
aas
ret
aad
in
jecxz
mov
in
mov
xorl
repz
ret
xor
lock
iret
fcmovnu
fcomip
fmuls
icebp
in
jmp
out
icebp
sarl
out
cmp
fxch
cmp
addl
repz
dec
ljmp
repz
fidivrs
push
in
repnz
xchg
std
mov
call
xor
in
leave
repnz
std
rcl
lock
loopne
in
ljmp
xchg
xor
enter
out
pushl
std
incb
mov
icebp
fsubrp
xchg
xchg
lret
jmp
cmc
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
out
incl
sarb
add
repnz
xor
loope
sbb
clc
jecxz
in
lea
test
das
int
loop
cmp
xor
icebp
neg
stc
aas
loop
ds
fdivr
leave
orb
out
iret
int3
fadd
xor
xor
clc
cmp
shl
loop
test
fsub
enter
test
loope
rcl
aad
xor
out
ds
or
rol
stc
roll
sar
repnz
xchg
in
out
repz
cmc
cmc
int3
hlt
jmp
test
cli
loope
sbb
cld
mov
aad
out
fcomi
call
icebp
sti
rolb
lret
mov
cli
fucomp
out
shl
jmp
cmp
cmp
rcl
fadds
lret
fdivrp
out
xchg
fcomip
leave
rcr
leave
imul
xor
loop
stc
iret
ret
rolb
mov
xor
repnz
aaa
in
clc
iret
jmp
int
cli
cmp
jmp
out
mov
lret
xor
xor
out
int
loopne
hlt
sar
add
jmp
out
nop
out
jmp
int
cmp
xor
icebp
test
in
loope
xor
loop
xchg
int3
int
ljmp
ss
ds
shl
shl
and
out
test
repnz
repnz
ljmp
shl
in
sar
clc
lret
lret
fisttps
lock
lret
repnz
loopne
xor
div
in
flds
rolb
shl
sti
div
cmp
fnstsw
jecxz
addl
incl
ret
shr
fcmovnb
leave
shll
ror
incl
loope
fsubr
cli
test
loop
mov
rorb
jmp
jmp
cmpl
rcl
test
in
out
xchg
loop
in
jecxz
jecxz
sarb
xor
xor
ret
mov
cmpb
mov
out
mov
std
test
int
shrl
repnz
out
in
lret
incl
cmp
cmp
into
into
in
mov
loop
fidivrl
lret
cmc
adc
cld
ror
icebp
aam
jecxz
les
xchg
ljmp
lock
out
idiv
shr
cmp
aad
mov
xchg
test
nop
jmp
mov
xlat
lret
repnz
sarl
shr
ror
ret
icebp
incl
inc
cld
out
out
test
hlt
shl
imulb
aaa
call
lock
loopne
sarb
out
loope
xlat
lret
mov
or
rol
clc
out
in
into
std
shl
sti
ret
sti
cmp
jmp
fimuls
mov
jecxz
ss
iret
loop
in
out
lret
cld
rcr
into
xchg
test
fildl
test
ds
xor
rcl
adc
call
mov
out
cli
call
loope
clc
xor
lret
fxch
frndint
sarl
out
loopne
fmulp
clc
xlat
ror
nop
mov
repz
lds
ror
int3
int3
cmc
sti
testb
fcmovnbe
xor
cmp
mov
loopne
jmp
in
aaa
std
in
lock
repz
ds
loop
clc
faddp
rcll
shl
ds
xlat
clc
aam
in
fdivp
fst
repnz
jecxz
movl
ljmp
into
ret
cmp
lock
jmp
in
mov
shl
in
repz
fidivrl
cmp
aam
not
int3
fsub
cld
xchg
icebp
jecxz
call
fstp
imul
std
sarb
stc
cmpl
lret
cmp
loope
in
int
out
out
hlt
xlat
shlb
lret
in
xor
iret
shr
test
fmull
fcmovne
decb
repz
clc
enter
loope
jecxz
rol
fadds
jmp
fucom
mov
int
in
shl
fcmovnbe
into
repz
out
cmp
loop
cld
test
out
mov
aam
xor
xor
fcomi
aas
fdiv
repz
xlat
div
test
mov
int3
out
cmp
fsubr
cmp
iret
ret
fst
in
orb
xchg
xchg
jmp
cmp
repnz
clc
stc
cmp
out
in
rol
faddl
test
int
xor
sub
shll
cmp
int
rol
out
jne
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
mov
jl
add
rolb
xchg
out
repz
stc
out
out
aam
out
jmp
aas
sti
loope
cmc
aad
test
mov
fsubr
int3
sti
ror
adcb
xor
cmp
sarl
jecxz,pt
ret
fsub
out
cmc
leave
ljmp
xchg
hlt
sub
fcmovu
xor
test
mul
cld
clc
std
lds
leave
nop
loopne
xchg
ljmp
ljmp
stc
sti
shl
in
sti
xlat
test
mov
jecxz
out
in
repz
aas
int
cld
jecxz
lock
loopne
ljmp
fisttpl
aad
out
int
aad
ds
in
in
faddp
decl
in
enter
in
out
stc
enter
jmp
ljmp
xchg
lock
in
mov
shl
mov
hlt
jecxz
cmc
loopne
clc
stc
cmp
in
loope,pt
aad
cmp
hlt
ret
iret
out
jmp
jmp
movl
into
int3
div
cmp
test
loopne
in
clc
lret
fdivr
cld
nop
loopne
cmc
out
cmp
in
cmp
aas
xlat
sti
cmp
aad
jmp
cmc
out
shl
xor
shlb
ljmp
cld
shl
aam
mov
rcr
out
mov
loop
jmp
xor
xor
std
shl
rcr
loop
xchg
fldl
in
leave
jecxz
in
stc
clc
repz
call
fldl
jmp
fucomi
in
out
lret
fsubp
in
int
out
in
cmp
xlat
not
cmp
jmp
in
loope
jmp
out
xchg
xchg
iret
das
leave
sar
lret
cli
cli
not
loope
repz
loop
mov
stc
out
mov
aam
enter
div
cmp
xlat
sbb
aad
std
fcmovne
lea
ds
div
icebp
lret
aaa
rcl
fdiv
ftst
jmp
leave
fcmove
lea
in
out
aas
cld
sub
ds
addl
mov
call
in
enter
div
cmp
test
iret
cmp
fildl
std
mov
int3
rolb
fstpt
int
cmp
test
fucomip
cld
aas
ret
test
fadd
lea
in
fmull
iret
fnstsw
aas
fcomi
addb
fcmovnb
mov
nop
in
xchg
sub
jecxz
xlat
repnz
call
out
in
cli
repnz
lds
call
in
ret
xlat
cmc
test
out
fnstenv
lret
in
in
stc
shl
movl
int
repz
fcom
ss
int
shr
int3
loop
test
xchg
xchg
jmp
jmp
fmuls
shl
sarb
lret
int3
iret
repnz
stc
cli
mov
cli
test
mov
shr
sar
cmc
xor
out
in
cmp
jmp
push
orl
cli
jmp
mov
aad
out
push
out
cmp
iret
xchg
hlt
fucom
xor
int
mov
xor
int3
int3
out
sar
cld
sbb
xor
fucomi
rol
fsubrp
out
xchg
cmc
loop
cmp
rcr
div
ds
jecxz
xor
test
std
xabort
loope
xchg
loope
in
jmp
fmul
in
leave
loopne
neg
lock
addb
loopne
mov
cld
hlt
das
in
xor
lret
hlt
xor
enter
xor
repnz
out
jmp
in
test
ljmp
out
in
ljmp
testb
stc
decl
orb
cmp
fcmovne
enter
shll
mov
ret
test
into
xor
cmp
enter
int3
jmp
hlt
repnz
and
ljmp
sti
adcl
shl
rcl
fcmovnbe
dec
cld
fldl
addl
cld
adcb
repz
cmc
fildl
ror
mov
jmp
ljmp
xlat
cmp
cmp
out
mov
std
mov
repnz
in
ror
ret
fidivrs
cmc
std
fstp
xlat
sti
fldln2
loopne
fisttpl
int
aad
shr
clc
xor
cmp
repnz
cli
in
aad
loop
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
mov
push
lret
jg
add
out
mov
fisttpll
ret
repz
in
aaa
out
lret
out
div
fsubrp
movb
nop
xchg
into
xchg
test
lock
shl
fxch
out
ror
cmp
xchg
test
and
popl
faddp
xor
int3
iret
int3
into
std
call
out
aas
repz
fsubr
mul
xchg
out
mov
loope
ret
ljmp
stc
iret
rcl
cmp
test
mov
lret
or
repnz
ss
cmp
cmp
xor
and
lret
adc
test
loopne
aam
lret
out
loop
rcr
xlat
int3
xor
cmp
sar
out
flds
cld
fisttpll
into
shr
ret
in
aad
hlt
out
rcl
sar
loope
ffreep
lock
and
int
int3
movl
out
aam
fstpt
out
clc
loop
lds
jecxz
cmp
loop
fildl
call
int
cmp
std
cmp
cmp
aaa
cmp
fcmovu
fucom
cmc
mov
cli
fisttpll
xlat
out
loop
not
sarl
int
int
cmp
sti
fsub
mul
xlat
icebp
ljmp
shlb
in
cmp
dec
int3
test
and
clc
jmp
out
in
decb
loope
ljmp
stc
cmc
jmp
aas
test
mov
mul
addl
xor
rcr
in
hlt
cmp
rol
cli
fdivr
out
lret
addb
shlb
fdivl
out
cmp
testb
xchg
or
fcmovnu
sub
jecxz
ss
rcr
aaa
call
iret
out
cmc
clc
imul
shl
std
cld
xchg
fcmovnu
call
into
repnz
xor
into
sar
in
cmp
cli
clc
in
in
fsubrp
xlat
stc
aad
out
icebp
sti
xchg
rclb
in
jmp
jmp
fidivrs
int
in
xlat
ds
rorl
ljmp
shrl
shl
das
cmp
into
jmp
fucomi
sti
shl
ret
test
cmp
std
mov
ror
clc
out
shr
rcl
lret
std
cmp
xlat
iret
shl
loope
shl
xlat
xchg
sti
cld
out
aam
les
lret
int3
shr
sar
cmpl
flds
nop
in
in
loope
in
rol
out
fscale
sar
cmp
std
repz
fadd
int3
enter
in
lock
xor
aaa
in
call
aam
out
out
out
mov
hlt
test
xor
out
jmp
leave
aam
sti
lret
lock
loopne
ret
xor
lret
call
aas
out
lret
ret
repnz
int
cmp
ror
in
aam
fidivrs
loop
not
ljmp
std
xchg
ljmp
fsubr
loope
cmp
enter
jecxz
sti
xchg
xchg
loopne
fidivrs
fdivr
xor
fdivr
rolb
fdivrp
ds
int3
clc
rolb
repz
shl
fsubr
int
fincstp
shlb
cmc
mul
in
filds
or
jecxz
xlat
enter
hlt
cmc
enter
repz
mov
std
int
iret
ljmp
cmp
in
fcmove
xlat
repz
stc
rolb
rcr
aad
fsin
lret
dec
xchg
ror
into
loopne
jmp
out
cs
jmp
ss
out
ffreep
loope
fldl
cld
mov
rorl
sub
shl
les
repnz
in
fucomp
fsincos
roll
fmull
jmp
out
xor
aad
fcmovu
into
enter
sarb
in
cmp
loopne
ret
fsubrp
mov
into
orl
xor
out
enter
hlt
repnz
addl
jmp
repnz
in
cmp
fptan
out
fucomp
iret
cmp
sar
xlat
adc
jecxz
mov
cld
xchg
mov
xor
in
cmp
jmp
cmp
out
fabs
roll
clc
in
jecxz
mov
or
enter
cmp
out
aad
cmp
fstpt
aad
out
orl
jmp
fcmovnbe
in
loope
rol
shl
ret
clc
int3
xor
xlat
adc
rol
clc
rolb
jecxz
xchg
leave
test
out
ds
hlt
xor
xor
fmul
sarl
aad
aas
mul
jecxz,pt
cld
fsubr
in
in
jecxz
incl
loop
sar
xor
icebp
fadd
xlat
aas
loope
mov
imul
testb
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
fucomip
int3
xor
leave
lret
cmp
out
cmp
ret
jecxz
loope
leave
in
loopne
xor
ror
lock
aas
fcos
hlt
fcomp
clc
cmp
xlat
lds
shr
jmp
sub
mul
ss
jmp
sti
cmp
iret
out
test
leave
enter
mov
test
jmp
fmul
shr
xor
int
std
hlt
in
clc
in
hlt
ljmp
fsubp
xchg
xor
ror
cs
sti
loopne
fsubr
rcl
cli
in
int3
out
sti
int3
cmp
iret
shl
loop
repz
int
cmc
rcl
cld
sarb
shr
xchg
hlt
loop
ret
fsub
lret
leave
lret
xor
xor
out
iret
call
ljmp
cli
out
loope
aaa
xor
cmc
in
int3
ss
or
test
cmc
fdiv
loope
inc
fnclex
lock
cmp
xor
loopne
xor
jmp
aas
jecxz
fadds
fcmovnu
out
loopne
xchg
out
shr
ror
aam
into
jmp
loope
std
idivl
fadd
cmc
lret
jmp
xchg
lock
leave
xor
sti
ror
cmp
out
loope
fadd
cmp
fucomi
loop
fucomp
in
in
lock
shl
shl
xor
cmp
call
int
fcmovnbe
jmp
call
mov
iret
ror
cmp
out
cmp
loope
std
mov
cld
xchg
in
loope
leave
out
aam
sti
fdiv
into
ror
cld
cmc
ds
fmul
fcmovu
mov
out
out
mov
mov
int
sub
cmp
int3
sti
loope
fsubrp
aam
ror
cmp
hlt
std
ljmp
cli
jecxz
test
ror
xor
rcl
hlt
cmc
cmp
fld
loope
test
in
test
jmp
ljmp
clc
lock
call
rol
loope
lock
fldln2
cli
icebp
jmp
jmp
aaa
aad
in
jmp
fcomp
shr
loope
into
test
call
ljmp
test
xor
repnz
sarl
fsubr
lret
fldl
cld
addb
fsubr
jmp
jmp
iret
jecxz
out
shl
ds
jecxz
fdivr
repnz
fdiv
hlt
rorl
sub
test
addl
cld
fsubrp
call
addb
into
stc
xor
fnstcw
cmp
out
out
xchg
in
lds
and
leave
cs
cmp
rcl
cmp
testl
mov
mov
fnstenv
lock
icebp
jmp
fsubrp
cmp
fadd
fst
call
out
and
xor
int
repz
jmp
fdivrl
aas
xor
mov
sub
xchg
ret
ljmp
cmp
cld
iret
vcvtdq2pd
not
test
call
jmp
sub
aaa
in
int3
repz
fdivr
icebp
sti
std
vshufpd
mov
mov
neg
ss
cmp
call
faddl
cli
clc
in
test
in
ret
sti
int
aam
rcl
fcomi
in
int3
fcomi
jmp
orb
rcr
aaa
ds
out
icebp
cmp
into
jmp
jecxz
inc
jmp
xlat
test
sti
nop
fdivr
in
xchg
int
aam
std
fucomip
xor
aad
sti
xlat
aas
aas
aad
out
in
cmp
cli
mov
fbstp
lret
cmp
std
fdivrp
cmp
mov
jmp
or
mov
aam
fnsave
stc
ljmp
stc
xchg
xchg
mov
fldl
iret
xchg
cs
xor
out
xlat
in
xor
int
sarb
rcr
idiv
test
div
mov
out
sbb
out
xlat
stc
clc
ljmp
in
repnz
test
test
lret
mov
jecxz
ret
sti
out
into
fstpt
fdivrp
cmp
add
cmp
mov
std
faddl
rcr
lock
test
aad
ds
fdivr
xchg
mov
int3
enter
cmc
fmulp
out
aad
out
xor
cmpl
fiadds
ljmp
in
cld
out
cmc
aaa
ret
aam
shr
jmp
fidivrl
icebp
xchg
in
test
mov
jecxz
out
cld
int3
lock
iret
lret
iret
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
sbb
mov
add
sti
clc
icebp
aas
cli
not
fdivr
std
sti
cmp
test
movb
loop
cmp
int
fdiv
lret
fcomp
testl
fsubr
into
popl
das
ret
cld
hlt
sar
cmc
std
lock
fdivrp
hlt
test
aam
enter
rcl
fmul
test
out
stc
lock
rorl
incb
test
xor
cld
clc
aaa
aad
ljmp
repnz
mov
in
lock
call
sarl
cmc
fcmovne
lock
hlt
fsubrp
fnstcw
out
hlt
fnstsw
xor
loopne
lds
ficoms
jmp
lret
repz
cmp
out
ror
hlt
cmp
mov
test
aaa
hlt
fnstcw
in
call
cmp
rcr
jmp
aas
fcmove
clc
orl
cmc
clc
fucom
cmp
aad
out
repnz
int3
cmpb
cmp
mov
lea
aaa
out
in
out
fdivl
loopne
rcl
cmp
out
jmp
out
call
sub
ret
xor
into
out
repnz
xlat
test
loop
loope
repnz
xchg
int3
lret
mov
fst
out
ret
in
aam
cld
xor
xchg
out
mov
loopne
cmc
sbb
jecxz
stc
iret
cmp
cmp
rcl
xor
cli
jmp
aam
fmul
xchg
iret
repz
iret
call
fdivr
cmp
fucomi
ds
out
add
fsub
fisttpll
in
rcl
ror
xor
sti
cmp
fdivp
fprem
iret
aam
repz
fsub
loopne
mov
lret
lock
rol
in
out
aad
into
into
ret
repz
rcl
movl
call
xlat
shr
fdiv
fld
call
cli
in
int
loopne
cs
into
clc
enter
loop
inc
cli
cld
mul
lret
testl
das
xor
mov
fcmovbe
fadd
cmp
stc
fdivp
vaddsubpd
fsubp
xchg
xchg
lret
in
shlb
hlt
out
aam
fistpll
xlat
sar
loop
jecxz
std
std
sti
repz
mov
shr
sub
ret
xor
cmp
cmc
ret
hlt
std
aam
in
jmp
test
mov
call
int3
call
shl
out
clc
jmp
int
in
cld
int3
fcomp
loope
shl
in
cmp
les
fptan
aad
cmp
hlt
ror
xchg
aad
ret
fmuls
cli
mov
test
xor
rcr
call
cmp
cmp
xchg
std
jmp
iret
fucom
sub
int
out
cmc
cmp
cli
cmp
in
add
sti
std
repz
loope
shl
xor
out
fstpt
stc
cmp
rol
repz
shl
lds
cli
jecxz
jmp
divb
sti
fcmovu
sbb
cmc
ret
call
mov
in
loopne
lea
leave
fstp
hlt
into
fcmovbe
aas
aam
fstp
ret
xlat
loope
ds
into
jmp
out
jecxz
cs
int
iret
clc
loopne
cmp
hlt
ret
in
decb
jmp
xor
repz
jmp
int3
aas
jecxz
icebp
loopne,pt
in
mov
lret
leave
sar
xor
loopne
into
clc
in
test
aam
cli
aam
test
test
neg
cmp
mov
shl
lret
out
in
cmp
jmp
into
cmp
xlat
aam
shl
aam
out
fxam
lret
cmc
into
out
repz
cmp
in
cli
jmp
cmp
cmp
fcmovnb
ffree
jmp
call
out
mov
jmp
xor
repnz
cld
out
xor
fxtract
stc
loopne
and
rcl
aad
jmp
lea
fcmovnu
call
cld
int3
ret
hlt
fadds
hlt
xchg
call
fucomip
loopne
jecxz
out
into
not
hlt
std
ss
cli
cmp
std
addb
xchg
in
in
lret
out
cmp
cmc
out
fabs
in
int
fnstsw
xchg
ret
loop
movb
shl
repz
idiv
out
sti
xor
fcom
shl
in
into
rolb
ljmp
xor
in
lret
fiadds
cmc
into
mov
jecxz
ljmp
aaa
ret
das
xor
clc
jmp
fdivrs
cmp
fimuls
js
inc
or
inc
cld
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
add
or
mov
jg
add
sti
filds
aas
ret
jmp
into
sub
fcmovne
repz
aam
aas
hlt
and
repnz
test
xchg
mov
lock
icebp
out
xlat
hlt
stc
iret
cmp
aam
ret
div
add
in
rolb
aaa
in
fdivs
leave
ljmp
loopne
hlt
out
test
std
aad
orl
lds
lret
shr
fnstsw
xor
in
ds
int
repz
fucomi
fcmove
shr
test
movl
xor
ljmp
cmp
clc
out
fprem1
cld
test
nop
out
in
xor
call
xlat
sti
rolb
cmc
incb
out
cli
lret
mov
in
xlat
cmp
loop
stc
repnz
int3
loop
xorl
out
clc
lret
ret
loop
in
jmp
shl
mov
loopne
int3
leave
int
in
sarb
std
cmc
dec
xchg
rcr
fdivr
and
loop
fcmove
int3
mov
stc
divb
out
sti
cmp
stc
fcmovnbe
fdivrp
fmuls
nop
int3
lock
icebp
das
lock
cmp
call
shl
iret
cmp
ffree
ljmp
loopne
loopne
rol
in
out
xor
cmc
fcmovnu
loope
cmp
incl
fsub
test
lea
xchg
test
cmp
into
int3
xor
cmp
sarl
sub
loope
fld
in
loop
cld
int3
rcl
lret
xor
fdivrl
int3
ret
cmp
std
rcl
jmp
jmp
in
shll
jmp
iret
out
repz
cmp
add
ret
fcmovne
out
addb
fdiv
ffree
pushl
lret
lock
cmp
xchg
loop
loop
out
dec
cld
fmul
out
test
aad
cs
ffree
into
lock
in
ret
fcmove
call
out
std
stc
mov
repnz
cmc
clc
std
mov
cld
cmp
icebp
test
cld
fldl
jmp
rorl
int3
int
leave
sti
rol
filds
loope
filds
repnz
xor
leave
fdiv
into
cld
call
rcr
rcr
aad
loop
decb
lock
aad
out
loop
fdiv
into
xor
stc
cli
cmpl
aam
lock
in
lret
mov
mov
ds
ret
ljmp
into
loopne
and
rolb
out
and
out
xor
shl
xor
cmp
call
addl
loopne
in
repz
aad
sub
fcmovnbe
loop
int
cmp
call
icebp
lock
loope
clc
leave
xchg
nop
xor
out
lret
cmp
call
aaa
xlat
shl
rcr
repz
fmulp
xchg
mov
hlt
repz
fucomi
int3
icebp
rcl
rolb
cld
stc
into
rol
xchg
lret
cld
mov
jecxz
cmp
out
int3
int
jmp
xlat
cmp
ss
adc
fdiv
fildl
in
idiv
in
lret
div
hlt
std
cmp
into
aam
jmp
xchg
call
roll
xlat
stc
shl
cmc
jmp
hlt
in
into
std
cmp
cmp
repz
lret
leave
out
iret
cmc
xchg
lock
in
ss
in
cmp
out
fsubrp
xlat
out
shl
aam
out
int3
cld
lea
loopne
int
xlat
int
out
ds
aad
cmp
leave
xchg
loope
lret
mov
into
fdivp
xor
in
cmp
jecxz
into
rcr
ret
hlt
xchg
enter
mov
fcomi
cli
sub
jmp
out
xlat
in
cmp
in
fcomi
int3
sti
jmp
in
mov
lock
leave
cmp
lret
sar
repz
int3
cmp
sti
and
lock
mov
fsub
lret
mov
jecxz
jmp
xor
cmp
leave
cmp
fiaddl
enter
neg
call
std
shl
in
xor
rcl
rcr
iret
or
fdivr
fadds
xchg
lret
fmul
cmc
out
xor
loopne
fnstcw
xor
aaa
fcom
cmc
lret
in
cld
out
fcomp
loope
vpmulhuw
call
div
cmc
leave
icebp
xor
aaa
fidivl
enter
idivb
out
fst
call
jmp
addb
hlt
cmp
fstpt
fdivrl
out
ds
adc
xor
int3
in
fcmovu
loope
loop
ror
out
xor
lock
cli
sti
aam
cmp
scas
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
lock
add
test
lret
out
cld
mov
int3
ror
ljmp
adc
cli
addb
int3
in
lret
mov
shl
hlt
jmp
ljmp
rcl
ds
in
int3
frstpm(287
leave
xchg
int3
loopne
lock
cli
int
addl
cld
in
ror
mov
lock
icebp
std
into
enter
stc
iret
icebp
out
cld
fcomip
cmp
jecxz
jecxz
lret
repnz
aaa
repnz
xor
std
out
int3
int3
adc
mov
enter
aaa
call
in
ljmp
loop
in
filds
jmp
xchg
xchg
in
enter
ljmp
jmp
sub
fcomip
test
out
stc
jmp
jmp
adcb
ret
sti
iret
aaa
fxch
aam
loope
jmp
loop
sti
lea
test
iret
idiv
in
clc
jmp
loopne
icebp
ret
enter
test
call
int
shl
imul
rcr
ret
test
jecxz
hlt
cli
flds
lret
call
xor
xlat
cmp
xlat
repnz
fdivp
fxam
xor
fsubr
mov
lret
out
xor
lret
rcr
rolb
shl
call
fildl
test
aam
fcmovne
xlat
enter
test
ror
cmp
std
sbb
sub
ljmp
lock
out
aam
cld
aas
xlat
icebp
rol
aam
jecxz
fmuls
decb
vaddsubps
fstp
cld
xor
ret
xchg
xlat
rol
fisttps
shr
xorl
fcmovnbe
enter
into
and
jmp
stc
in
lock
aaa
ret
cli
std
fscale
cmp
cld
fsubr
div
ss
std
rcl
std
leave
fmulp
lret
cmc
jecxz
aam
lock
in
xlat
aaa
in
jecxz
jecxz
sbb
clc
xlat
ret
ds
loop
ljmp
in
lret
xlat
int
sti
aam
cmp
lock
fcmovb
ds
mov
sti
mov
cmp
int3
shl
divb
loop
leave
in
fcomp
cmp
xlat
neg
std
stc
clc
leave
loopne
in
xor
out
mov
xchg
loopne
out
xor
in
loop
enter
cmp
and
xlat
out
out
test
cmp
out
repnz
cld
shr
lret
xor
fucomip
into
shr
loopne
std
lock
fsub
neg
vphsubwd
in
rol
xor
shl
fdiv
hlt
repz
fucom
cmp
loopne
sbb
std
in
incl
cmc
divb
cmp
std
cli
cli
int
loop
roll
fucomip
int
jecxz
fdivrp
out
xor
jecxz
clc
std
cmp
lret
cmp
sti
shl
in
out
faddl
sarb
ret
sarb
out
jmp
xor
jmp
cmp
cmc
cmc
fnstsw
enter
call
idiv
shrl
stc
out
jmp
aad
aam
xlat
in
fdivr
clc
clc
in
clc
ror
in
in
ljmp
cmp
ss
movb
mov
loope
in
test
loop
xor
sub
cmc
test
in
testb
xchg
divb
idivl
cld
lock
shl
loop
mov
mov
loopne
leave
icebp
into
repz
decb
sti
xlat
xor
sti
cmp
cmp
shl
fsub
ret
loopne
loope
jmp
call
fcmove
lret
cmp
call
mov
out
loop
fcomi
lret
loope
xor
leave
out
fsubrp
jecxz
repnz
shl
flds
fmulp
jmp
repnz
into
divl
cld
leave
int3
fxch
cld
test
aam
jmp
fcmovu
loopne
mov
out
xchg
repz
stc
rcl
sub
shl
loope
loope
cmp
fadd
loop
fcmovnu
mov
mov
out
sar
xor
loop
out
in
fcomip
cmp
aas
fldz
in
shl
fcomip
ljmp
ljmp
xor
bnd
fistpll
decb
test
int
lret
adc
int3
idiv
aam
into
lock
fdivr
xchg
sbb
fcmove
in
aam
ds
fsub
out
cs
hlt
or
rol
std
loopne
int3
int
in
mov
jmp
iret
int
ret
fstp
sbb
mov
jg
add
nop
out
in
mov
xor
iret
xor
in
shr
int3
cmp
fcmovne
icebp
clc
out
test
stc
cld
lea
lret
int
repnz
cmp
sarb
ror
call
vpsrld
or
mov
xchg
fdivrp
sub
in
idiv
cmp
int3
jmp
cli
into
lock
loope
jecxz
mov
cld
test
xchg
in
xor
repnz
aam
xor
repz
rol
fcomi
sar
sub
cli
cmp
test
aad
out
ss
repz
cmp
out
ffreep
mov
lret
flds
clc
mov
xchg
aad
repz
divb
repnz
xlat
cmp
ret
out
test
int3
test
enter
xor
into
lock
sar
fcmovnbe
faddp
sub
lret
cld
fsubp
repz
ljmp
sti
loope
idivl
rcl
stc
sti
loopne
sti
into
adc
out
out
leave
call
loopne
shl
loope
xchg
in
aam
test
loopne
call
out
leave
enter
cmp
fsin
in
idivl
fdivrl
loop
test
xchg
fimull
iret
ret
cmp
cmp
cmp
cmp
shl
out
icebp
ds
in
jmp
in
int3
stc
jmp
xchg
imul
into
stc
shll
shr
cmp
stc
clc
stc
iret
aad
clc
loope
enter
incb
icebp
xor
repnz
xor
hlt
cmp
aam
aas
out
repnz
mov
jecxz
jmp
xor
leave
fldz
std
xor
fdiv
sti
iret
out
loopne
fucomi
in
xchg
test
in
xor
repnz
cli
fucomi
xor
ljmp
lret
adc
clc
icebp
cld
out
out
lret
stc
rol
ljmp
iret
fcmovu
fadds
out
jecxz
or
mov
orl
out
fcom
int3
icebp
add
les
xchg
dec
xchg
loope
imull
lret
cmp
fxch
fcmovu
ret
les
fst
cld
jecxz
loop
lret
sti
in
fmulp
and
leave
xor
leave
fcmovnu
loopne
aad
out
sbb
ljmp
loop
nop
aaa
out
out
cmp
idiv
out
xlat
sbb
cmp
std
ds
sti
addb
out
xchg
nop
imul
lret
aam
xor
icebp
loopne
out
rcl
leave
std
test
cld
std
fimuls
ljmp
icebp
ds
aaa
out
aas
clc
movb
jmp
jecxz
in
xchg
out
ds
cmp
icebp
shr
div
cmp
repz
in
leave
fsubr
loope
int3
cmc
mov
leave
lret
shl
fcmove
xor
std
rolb
leave
mov
fcmovnu
jmp
ror
lea
stc
aad
xor
div
imul
cmp
adc
fmuls
rorl
jmp
in
clc
ss
shl
aad
sar
rcl
addb
fdivrp
jmp
div
clc
ljmp
in
loop
decl
int3
test
mov
xchg
fimuls
out
ljmp
cmp
fld
repnz
loope
ds
fucomi
sub
loopne
rcl
in
shlb
shl
cli
repnz
add
int3
out
rol
leave
fucomip
cli
mov
ror
call
not
int
rcl
std
aas
rcr
repz
test
sti
sar
lret
ljmp
xchg
test
xchg
loope
leave
iret
in
loop
xor
xlat
div
ds
out
rolb
fcmovbe
int3
repnz
lock
std
aaa
ss
fadd
roll
mov
mov
das
rol
xor
repz
ror
fstp
aaa
stc
std
fstp
fst
clc
in
mov
xlat
loopne
ret
sub
fdivr
ror
fiaddl
jmp
lret
mov
in
mov
out
fmulp
enter
leave
stc
lock
aad
leave
ljmp
call
adc
jmp
out
ljmp
out
aaa
cmp
f2xm1
cmp
shl
loopne
leave
jmp
xchg
xchg
in
test
jmp
std
sar
out
fcomi
jmp
testb
in
xor
leave
in
sar
cmp
cmc
out
sti
rol
ret
cld
loopne
out
icebp
out
xchg
in
adc
repnz
cmc
enter
repnz
lock
std
fmul
call
fldl
je
xor
add
jmp
rol
sarl
rcl
mov
lret
ds
jl
shr
out
stc
repnz
ss
ds
std
aam
fcmovne
or
in
xchg
lock
fidivrl
in
fcmovne
fistpll
cmp
adc
in
loop
call
lret
in
cs
fmul
cmc
aam
repnz
incl
in
shr
in
in
hlt
jmp
stc
rcl
and
rcr
fstp
mov
out
mov
ss
fdivp
rcr
in
add
leave
test
and
loope
ret
ss
clc
xor
into
cmp
ljmp
and
test
shl
lret
xor
jmp
lret
enter
cli
cmp
repnz
loopne
int3
xchg
loope
jmp
lret
loope
lds
rcl
cmp
fnstsw
fiaddl
xchg
fdivrp
out
icebp
sti
mov
repnz
call
xlat
push
icebp
in
std
shl
out
out
loop
in
out
icebp
in
fidivl
cli
cmp
into
enter
iret
sar
ror
loop
idivb
flds
add
in
out
shrl
fnstsw
lret
test
ds
jmp
cld
xchg
into
roll
stc
ret
jmp
cmp
repz
roll
xchg
shr
mov
lret
cmp
out
out
shr
cmp
ror
fdiv
ffree
jecxz
ret
test
loop
iret
test
out
in
cmp
fnstenv
ss
out
aad
loop
ret
cli
repz
cld
loopne
shr
xchg
loope
repz
in
out
out
icebp
fcomp
hlt
int
int3
fcmovb
xchg
int
iret
mov
int
leave
aaa
in
rcl
sar
div
aad
cmp
fstpt
in
div
test
out
lret
jecxz
mov
rorb
rcl
hlt
jmp
rcr
push
cmp
test
mov
sti
faddl
aad
iret
cmp
cmp
jmp
lret
repz
ffreep
sti
test
jecxz
jmp
mov
repz
xlat
fcmovbe
aas
stc
ss
test
cmp
call
decl
fdiv
call
cmp
xlat
in
in
roll
xlat
jmp
lret
int3
in
shr
clc
shlb
int
sti
std
clc
sti
xor
neg
cld
jecxz
fcmovne
sub
xchg
repnz
repz
aam
xor
clc
fnstsw
int
hlt
fdivrs
xlat
neg
in
incl
out
in
clc
repz
icebp
fdivrl
cli
stc
aam
in
testl
xchg
sub
shll
lret
into
idiv
std
aad
adc
std
cld
stc
cmp
sti
jmp
sti
jmp
jmp
stc
lock
repnz
sbb
fsub
orb
fsubr
int3
mov
cli
aad
out
loopne
out
divl
ljmp
cmpl
call
std
fpatan
xchg
mov
clc
repz
neg
hlt
idiv
lret
cli
aad
cld
enter
jmp
lea
hlt
repnz
repz
fdivrl
sar
in
loope
repz
enter
aad
out
xor
leave
aad
cmp
loopne
loope
cld
xor
repz
cmp
jmp
ret
ret
out
cmp
test
rolb
cld
cli
in
lret
fcoml
fnstenv
lret
in
hlt
clc
cmp
aas
fdivr
loopne
leave
call
mov
in
out
in
sub
clc
aaa
cmc
fnstenv
lret
xchg
mov
mov
mov
mov
icebp
aam
cmc
xor
std
int3
lret
iret
sarb
clc
aad
test
call
sub
loopne
ror
cmp
fcom
fdivr
jmp
rolb
repnz
in
in
int
mov
repz
mov
enter
ret
stc
out
rcl
icebp
rcr
cli
call
mov
std
in
out
idiv
out
rcr
repz
cli
loope
lret
xlat
cmc
fadds
aam
div
in
std
jmp
out
cmp
repnz
out
xor
fcmovnbe
lock
repnz
in
call
and
aam
in
xor
icebp
idivl
ds
repz
xlat
movb
out
sti
test
rcll
fdivr
fcomi
into
aas
xor
clc
fnstsw
repz
xchg
ret
mov
lret
into
sti
nop
adc
in
xlat
out
cmp
mov
jmp
iret
aad
aad
push
jge
aam
in
jg
add
sti
shr
in
loopne
shl
repz
in
out
in
xchg
clc
lret
int
sub
rcl
cmp
aaa
xor
repnz
cmc
in
fildl
in
fisttpl
sub
xor
repz
repz
ret
clc
incb
in
jmp
mov
iret
repz
fidivrs
ret
int3
sbb
xor
call
call
filds
cmp
into
cmp
std
ljmp
stc
ret
enter
fimull
lret
lret
sub
fnstcw
icebp
aas
out
stc
fimull
fmull
aaa
jmp
cmp
cld
jmp
loopne
in
aam
enter
fdivp
test
out
xor
cs
cmc
cmp
fdivr
std
xlat
cmp
int3
idiv
icebp
movb
enter
jmp
in
enter
xor
in
shl
out
mov
call
orl
int3
cld
xor
repz
fcmovu
adc
test
std
sti
addl
ror
aad
xor
fsubr
cmc
xlat
jmp
hlt
sti
cld
xlat
into
icebp
cli
enter
jecxz
sub
shr
repz
xor
aaa
jecxz
icebp
test
out
testl
shl
jecxz
jmp
ror
lret
xbegin
out
out
std
fcmovbe
out
lock
jecxz
shl
nop
cmc
int
repz
iret
fucomp
fdivr
cli
ljmp
xchg
xor
leave
jmp
fdivrp
repz
lock
leave
in
ss
cmp
addl
cmpl
jmp
ret
fucomi
fadd
repz
cmp
fdivrs
shl
xor
enter
call
lret
hlt
int
icebp
jmp
out
out
repnz
sti
xlat
std
lds
aad
mov
mov
fisttps
fpatan
cmp
std
cli
loopne
out
into
test
bnd
jmp
xchg
int3
shr
int3
ror
xlat
repz
cld
fcmovbe
xlat
jmp
iret
int3
cld
xchg
xchg
test
in
call
jecxz
out
out
cmc
iret
xor
aam
cmp
fdivrp
shl
decb
fsubp
out
call
xor
xor
rol
fstpt
idivb
aaa
cmp
out
aam
xlat
enter
mov
lock
shl
aad
ljmp
test
incl
cld
enter
ljmp
lock
cli
cmp
fstpt
adc
ret
clc
in
std
clc
xchg
neg
cmp
into
mov
shr
cs
cli
enter
int3
repz
ret
loop
in
call
mov
xchg
lock
lret
neg
cmp
cmp
rcr
repnz
aad
cmp
call
rolb
int
fcmovnbe
clc
repz
cmp
fldln2
testb
xlat
lret
out
test
out
leave
shl
out
imul
ljmp
xor
hlt
loope
jecxz
out
shl
fcmovnu
testl
lret
xlat
icebp
sarl
sar
addb
fld
loopne
loopne
fucom
das
shl
xor
shl
cmp
sarb
fcom
cmp
add
test
fmul
lret
jmp
cld
lret
hlt
inc
sbb
ret
into
faddl
aaa
shl
aam
lock
xlat
loopne
ret
cmp
out
out
cli
adc
xlat
lock
in
repnz
out
ret
idiv
std
cmc
flds
loope
adc
cmp
cmp
leave
lret
std
int
loopne
fsub
mov
mov
jmp
dec
jmp
hlt
jmp
shl
aas
cmp
fcos
aam
in
fdivr
clc
leave
jmp
sub
ljmp
iret
jmp
cmpl
fdivrp
mov
in
test
in
ror
lret
out
fucompp
clc
lock
iret
in
cmp
cmp
enter
fst
add
int3
ror
jmp
fxch
ljmp
out
jmp
sti
fsubrp
roll
iret
out
shl
neg
sti
cmc
call
jecxz
fdiv
addl
lret
lret
cli
xchg
icebp
xlat
call
cmc
fdivr
cmp
cld
fdiv
fildl
faddl
test
jmp
xor
fcmovnu
fcmovnu
out
scas
roll
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
mov
push
or
jg
std
add
testl
or
adc
fdivr
jmp
xlat
lret
xlat
hlt
sar
stc
fcmovu
xor
loopne
jecxz
aad
aam
call
xor
not
rcl
aad
fdiv
out
shl
cld
fucomip
lock
ror
les
clc
sarb
cmp
cli
aam
std
addb
mov
movl
sarl
in
fmul
fptan
fidivrs
into
out
test
sti
rol
rorl
sti
xchg
rol
orl
iret
xlat
rcl
ljmp
lret
in
out
enter
xor
rcr
enter
hlt
std
filds
cmp
sub
loopne
call
ss
iret
fcomip
imul
repz
xchg
repnz
dec
jecxz
out
jecxz
fadd
xor
clc
int
cli
loopne
cmp
fucom
movl
jmp
xor
repnz
cmp
stc
div
out
shl
ret
out
out
in
in
sti
leave
lea
into
jmp
ss
int3
fildl
sbb
out
add
enter
call
cmp
icebp
in
xlat
fstpt
rcr
rcr
and
les
shr
loop
lret
aad
xor
cmp
cmp
ror
fmulp
xor
aas
rolb
fldpi
jecxz
decl
fcmovne
out
int3
in
repz
shr
ljmp
and
jecxz
call
out
fyl2x
xor
fdivr
ljmp
test
cmp
cli
jmp
xchg
jmp
int3
cs
test
enter
cmpb
cld
fucomi
out
in
int3
std
repz
jmp
xor
enter
fdivr
cmp
sbb
in
fimull
enter
repz
fsub
aaa
in
cli
repz
call
into
cmp
repz
in
loope
mov
out
fsub
fcmovnu
in
int3
shl
loop
xor
lret
sub
fcmovnu
mov
fiadds
xchg
shl
ss
cmp
rcl
jmp
cmc
test
into
in
filds
fucomi
sti
out
xchg
repz
sub
lock
xor
stc
loope
faddp
shl
in
jecxz
in
out
xchg
lret
in
lret
shl
iret
loope
out
int3
fiaddl
test
in
in
xchg
aas
rol
in
icebp
lret
shl
cmp
jecxz
in
repz
out
cld
cmp
ds
or
addl
lock
fistpll
cld
repnz
cmc
aam
flds
lock
iret
vpmaxsw
icebp
out
stc
out
loope
aad
sar
ftst
leave
test
out
std
jmp
rol
jecxz
cmc
lock
cmc
loope
stc
aam
iret
fsub
sti
lret
leave
in
out
iret
jecxz
imul
lret
loope
hlt
push
int3
aad
shl
fcmovnbe
in
xchg
add
mov
roll
les
aaa
shl
cmc
ljmp
ret
fdivr
xchg
mov
fcmovu
test
out
in
iret
jmp
rol
fyl2x
fldl
xchg
lret
out
rcr
shl
das
xor
shr
cld
cmc
div
xor
loope
cmc
sbb
mov
jecxz
aad
call
repz
loope
in
icebp
fiadds
stc
int
mov
mov
out
aaa
aad
xor
cmc
lret
test
hlt
aad
add
test
lret
xchg
xchg
loope
ret
xor
cmp
cmp
cmp
out
in
inc
out
fsub
ffreep
in
lret
loope
addl
in
lock
enter
bnd
ret
orb
iret
in
repz
sti
into
xor
or
fdecstp
lock
cld
fstp
loopne
lret
out
out
aas
das
stc
xor
ljmp
fstp
cld
out
fcomip
hlt
loope
test
sub
nop
int3
aam
stc
xor
icebp
aad
xor
call
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
out
pmulhw
add
out
jecxz
out
xlat
loope
jmp
int3
aad
shl
jecxz
lret
cli
cmp
aad
in
addl
loop
leave
mov
leave
loop
mov
rol
call
xor
call
sar
push
ffree
in
icebp
xchg
ror
xchg
enter
xor
cmp
stc
cmp
neg
aas
not
mov
out
and
ror
out
loop
in
call
cld
out
into
fucomi
rcr
call
enter
fucomip
addl
hlt
stc
fld
ss
lock
out
icebp
aad
xor
and
sti
loopne
fimuls
xchg
repz
loope
div
repnz
call
loopne
add
sbb
fcmove
cli
neg
mov
xchg
mov
xor
jmp
fdivrl
fdivrp
aam
int
idiv
loope
rcr
leave
or
loopne
in
or
loopne
xor
lds
lock
in
sar
lock
sub
or
int
lret
std
loop
ret
loop
in
ror
cmp
jecxz
iret
sti
addb
cld
mov
loop
std
loope
xor
xor
stc
xor
clc
not
cld
idivl
fld
hlt
and
jecxz
ficoml
xor
test
aas
aam
in
aam
faddl
mov
int
mov
mov
xor
sub
std
into
repnz
loop
iret
test
stc
ljmp
nop
jecxz
cmc
sti
repnz
xor
loope
rol
xlat
std
cmp
incb
mov
loop
ds
enter
cmp
aas
rcl
jmp
fdivr
xchg
out
shl
xchg
jmp
ret
jmp
clc
repz
fsubr
loop
icebp
add
enter
sub
jmp
xor
jecxz
out
ss
int
ds
aad
fmuls
iret
lret
mov
iret
fildll
aaa
cld
cmp
iret
rolb
mov
int3
mov
cmpb
int3
shr
icebp
fdiv
fsubrp
ljmp
rolb
test
addb
int3
fldl2e
fdiv
int
lret
repz
jmp
fucomi
in
in
loop
adcl
xor
lret
out
int
in
cmc
cmp
rorl
fisttpl
icebp
xor
int3
in
clc
ljmp
cli
std
aad
std
out
loop
fucomi
fsub
xor
fdivs
stc
lds
cld
rcl
test
std
rolb
xchg
test
not
out
stc
enter
cmp
cld
call
clc
sti
jmp
std
in
cmc
enter
cmc
cmp
icebp
out
out
aad
cmp
rol
clc
cmp
ljmp
xchg
in
aam
into
jmp
xlat
fiadds
out
ds
rol
jecxz
stc
in
enter
rcl
shr
sti
xor
incb
aas
cmp
std
call
leave
test
std
enter
loopne
in
cmp
das
repnz
cmp
les
or
vpmacsww
in
sti
aam
jmp
addl
xchg
mov
mov
cli
int
shl
in
iret
enter
xlat
in
out
repz
cmc
in
in
aad
call
xchg
jmp
lret
shr
idiv
xlat
cmp
in
in
loopne
fldl
loopne
xchg
lret
ljmp
ds
or
hlt
mov
out
orb
les
xor
fnstcw
hlt
cmp
aas
cld
jmp
fstp
fdivr
jmp
jmp
call
in
xor
aad
cmp
xor
aaa
jmp
cli
test
xchg
xchg
ljmp
in
fldz
clc
mul
cmp
out
loop
shr
ljmp
jecxz
hlt
loopne
xor
into
xor
fcmovb
ljmp
flds
loope
fndisi(8087
and
cld
loop
ss
aaa
cmp
fdivr
lret
xlat
cmp
and
mov
mov
jmp
jmp
enter
fstp
fstp
adc
cs
cmc
or
jg
std
add
aam
loop
mov
jecxz
fneni(8087
mov
rcr
loop
loope
ror
loopne
lret
fcmovnbe
lret
rcr
jecxz
shl
jecxz
fisttps
cli
call
iret
ret
enter
fcomi
ret
cmp
std
shr
mov
test
cld
sub
xlat
shl
repnz
test
clc
jmp
xchg
xchg
rol
ret
cs
loop
std
aad
ds
sbb
into
stc
fsubr
xor
jmp
cld
out
orb
fadd
xor
lret
sti
and
xlat
fdiv
std
loope
leave
fdivr
int3
shl
loope
int
call
xor
cmp
sar
test
repnz
cmp
fimuls
repz
mov
icebp
jmp
ret
cmp
jecxz
test
mov
jmp
xchg
dec
shl
clc
in
enter
cld
int
cli
shl
jecxz
cmp
std
ffree
mov
out
loop
in
test
sarb
fldpi
sarl
sti
cmp
int3
sar
mov
faddl
xchg
xchg
shl
ror
out
xor
int
xor
iret
ret
loop
cmp
rol
std
xlat
fcmovu
ret
mov
rol
loopne
ret
jmp
hlt
jmp
test
into
out
cli
loope
cld
ret
fcmovbe
in
fsub
ret
xor
fsubr
in
icebp
fcmovbe
rcl
repnz
jmp
in
out
fcmovne
test
out
loopne
out
xor
rcr
cld
aaa
neg
into
shl
aad
mov
rorb
out
xchg
and
sub
repnz
call
fdecstp
fisttps
in
fdivr
xchg
ret
out
shl
xor
loopne
loop
xor
xlat
shl
ljmp
in
mov
sti
lock
repz
sti
in
sti
rol
cmpl
clc
mov
int
std
sti
xchg
dec
sarb
rol
jmp
addb
rorl
fmuls
cli
rcl
ljmp
int3
repz
and
sub
xor
mov
out
xchg
test
xlat
lret
cmc
xor
call
adc
aas
loopne
repz
call
jmp
int3
shll
rol
clc
repnz
aas
sar
loop
fcmovu
rcl
lds
fimull
sub
xor
out
hlt
aaa
shl
cli
idivl
loopne
aam
loope
lret
cld
jmp
ljmp
repnz
enter
shl
loop
sar
clc
shl
stc
in
cli
loop
fcmovbe
xchg
mov
in
repnz
in
out
in
std
shl
into
rcr
sar
loop
mov
enter
jmp
sub
aaa
cld
icebp
in
hlt
in
fdivr
shl
xbegin
jmp
xchg
lock
xor
xor
repnz
cmp
xlat
cld
aad
fadd
sti
fstp
sarl
addl
mov
mov
shlb
jmp
aam
iret
clc
fld
sar
test
in
leave
leave
mov
shrl
into
out
cli
jmp
repnz
cmp
in
out
jecxz
mul
jmp
sub
out
sub
neg
out
shr
cli
lock
fistpll
shl
out
call
loope
clc
jmp
cld
fidivrl
into
sar
fdecstp
hlt
incl
ror
fucomp
xchg
ror
xor
imul
xor
push
fmulp
cmp
stc
fucom
std
call
lds
cld
out
xor
cmp
aaa
ss
cmp
fildl
cli
test
sti
lock
in
fsubp
stc
xor
not
xor
repnz
out
cld
lock
ss
cmc
in
hlt
lret
in
fucomip
inc
into
int
out
aad
shl
shl
cmc
aas
iret
dec
mov
leave
in
jecxz
jmp
rol
lret
in
iret
aas
cmc
cmp
and
cmp
fmul
jmp
decl
xchg
sub
out
enter
out
enter
sar
xlat
fdiv
clc
std
std
orb
test
ror
fcom
icebp
std
lock
fcmovne
aad
xorl
jmp
aad
rcr
fstp
sbb
mov
std
add
stc
rol
cmp
repz
jmp
addb
aam
stc
cmc
in
fdiv
jmp
repz
fucomp
ljmp
call
in
cmp
xor
int3
cld
loope
lret
cli
stc
jmp
fdivp
xchg
mov
in
cld
std
xchg
aad
fnstcw
in
in
stc
int3
shl
aam
sti
sub
mov
aas
xor
out
int3
shr
cld
in
fxch
xor
in
neg
loope
cmp
idivb
incb
cld
fdiv
xchg
xor
lret
fxch
sti
cmp
adc
loopne
hlt
in
clc
decb
xchg
ljmp
int3
out
rol
aas
fsubp
test
fstp
clc
stc
out
fcmovu
cld
rorb
lock
in
cmp
cmp
in
aas
out
lock
ret
sar
orb
fucom
sub
xor
shr
jmp
div
loopne
jecxz
xlat
xchg
ret
mov
in
stc
leave
or
fcomip
shl
sti
cmp
fdivs
loop
hlt
shl
ffreep
aad
xchg
in
mov
jmp
jecxz
xlat
aam
cmp
cmp
call
rcl
fcmovu
aam
test
enter
in
mov
div
idiv
out
jecxz
clc
loopne
std
aad
sbb
out
ljmp
rcr
xor
lret
fucomip
cmp
ror
fdiv
cmp
aad
cmp
fildl
incb
cmp
cmp
imul
fstpt
in
loop
sar
sbb
test
int
das
out
xor
jmp
xlat
rol
cmp
mov
lret
lret
imul
in
xor
jmp
cmp
xchg
neg
out
enter
cmp
loop
out
loopne
clc
leave
fnstcw
out
cmp
in
out
out
ret
adc
icebp
out
mov
xor
xor
aaa
cmp
jmp
idiv
loop
ret
std
call
std
filds
lret
sub
cmp
stc
ljmp
test
lret
xchg
in
mov
int
repz
lock
enter
roll
neg
cmc
int3
in
mov
out
call
jecxz
into
int
lret
jmp
in
int
cmp
aad
ret
call
div
ljmp
xor
shll
ror
repnz
aad
rol
rcr
rol
ljmp
xchg
xchg
out
shl
fcomip
out
fldl2t
enter
cmp
ds
ret
add
in
loopne
loop
out
decb
into
clc
xor
out
repnz
into
sbb
ret
in
call
enter
mov
int3
out
in
xor
cmc
in
cmp
loope
cmpl
fdiv
xlat
in
mov
mov
in
test
xchg
out
loopne
xor
xlat
fdivrl
cmp
fst
ds
call
test
not
fsub
mov
out
call
repnz
into
in
xlat
int3
fcmovbe
sub
loopne
fiaddl
hlt
fucomip
jmp
in
xchg
in
xor
in
in
aaa
push
jecxz
into
jecxz
into
cmp
clc
faddp
loopne
fcomp
jmp
in
mov
repnz
jmp
xor
in
cld
aam
fcmove
cmp
sar
addb
mov
leave
int
xchg
jecxz
fcom
enter
into
cmp
cmp
cmp
cmp
out
fiaddl
icebp
shl
in
cmp
std
cmp
clc
sti
rcr
imul
into
roll
int
clc
jecxz
mov
icebp
shl
jecxz
in
repnz
cmp
lock
rcr
sar
cmc
idiv
ror
loop
in
test
aaa
int
fdivs
aad
int
cmp
aas
xchg
test
popl
test
ds
xlat
into
in
lock
cmc
cli
loop
idivl
sti
fnstsw
shr
int
test
jmp
rol
aad
std
cmp
shr
aaa
call
and
std
orb
in
leave
xor
repnz
lret
iret
ljmp
idiv
xchg
test
xchg
out
out
mov
lret
xchg
jmp
not
fxam
das
fmul
rcl
cld
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
mov
int3
or
jl
fistpll
cmp
iret
sti
rolb
test
jmp
ret
xor
fdivl
repz
repz
addl
in
jmp
jmp
ror
cmp
test
clc
rol
inc
mov
cmp
leave
lock
call
cli
loop
int3
test
lock
sti
ljmp
int3
loope
xor
repz
xor
roll
xchg
mov
int3
into
loope
in
ret
clc
icebp
rcl
cmp
xlat
fdivrp
int3
xchg
hlt
fnstsw
cld
mov
sub
xor
iret
xor
xor
clc
ret
ret
testb
int
leave
lret
addb
imull
int
ljmp
addl
loopne
out
loop
cmc
call
cmp
xlat
fcomp
aad
cmp
neg
fmul
ror
cmpl
call
out
xchg
jmp
das
call
cmp
ret
les
test
out
lock
aam
out
sarl
iret
fdiv
fptan
std
aas
cmc
in
shl
loop
sti
ror
iret
in
call
enter
leave
xlat
repz
xor
cld
test
cmp
fiaddl
mov
ret
idiv
out
lret
aad
rcr
and
out
cmp
loop
rol
repz
loopne
call
sti
xlat
in
sti
call
ret
rcl
in
mov
xchg
loopne
xlat
fadd
xor
in
stc
cmp
ret
aad
ret
icebp
std
enter
jecxz
int3
fildl
in
shll
fnsave
jmp
cmp
cld
stc
out
jmp
out
call
test
mov
ror
lret
stc
into
aas
cmp
rcr
shr
ret
cmp
cli
jmp
iret
sub
aad
ss
aas
ds
repz
xlat
mov
sub
jmp
vpshlb
xlat
xor
ret
lock
loopne
lret
std
mov
repnz
stc
fmull
mov
rol
ljmp
fdivrp
rcr
std
sarl
rcl
cmp
xchg
fmul
cli
adcb
xor
xor
out
leave
fld
shl
shl
cmp
lds
fnclex
nop
xchg
fsubr
out
rcl
cmp
into
rcr
inc
loope
loop
orl
in
out
xor
fnsave
lret
aam
test
enter
fxch
int
jecxz
rol
call
out
aad
int
inc
test
frstpm(287
jmp
aad
sbb
loope
shlb
ret
int3
enter
fyl2x
shl
aas
in
fcmovbe
test
mov
in
fimuls
xor
fld
in
fdiv
imul
out
fsincos
call
rol
xlat
loop
call
leave
xchg
iret
iret
call
call
out
fsubrp
into
out
ss
aad
sti
stc
lret
fmull
loope
lock
lret
cmp
addb
shl
cmp
out
ljmp
into
ret
cmc
xor
aad
std
rolb
test
in
test
xchg
in
shl
fcmovne
cmp
fistpll
jecxz
lock
frndint
loop
push
jmp
faddl
xchg
xlat
in
jmp
icebp
hlt
cld
cld
loopne
fsubr
loop
out
rclb
das
mov
cli
in
in
out
sarl
add
repz
out
xchg
call
out
les
xlat
sarl
cmpb
adc
cli
neg
jmp
movb
jmp
loope
hlt
lret
cmp
icebp
aas
lock
fidivrl
ljmp
xor
shrl
int3
lret
cld
into
ror
xor
ret
cmp
lds
out
std
out
out
les
enter
xor
add
faddp
enter
out
lock
rcl
cmp
aam
sub
fcmove
sar
iret
out
cli
fucom
fdivr
fsub
mov
cli
push
xchg
ret
lds
in
repz
stc
sbb
fdecstp
shl
repz
inc
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
xor
mov
cmpsb
add
aam
out
fcoms
into
in
cmp
shll
xlat
lret
lret
jmp
sar
shl
orb
cld
clc
enter
fucomip
shrb
int3
ret
int
fcomi
stc
int3
rcr
filds
rorb
rcll
in
cs
aad
fmul
fcmovnbe
not
ds
out
xlat
fcomi
xchg
imul
loopne
in
enter
xchg
xchg
cs
leave
clc
in
xor
ljmp
fdivs
rolb
incb
xchg
out
iret
sti
enter
cmp
inc
fistpll
rolb
int
iret
addb
fdivs
ljmp
and
lret
mov
rcl
in
aaa
lret
sarl
ror
and
cli
out
cli
flds
adc
mov
xchg
out
faddp
call
fdivrl
lret
sti
ret
cmp
incb
loopne
ret
les
imul
repnz
fnstcw
add
int3
hlt
cmp
and
mov
out
test
jmp
lock
stc
out
sub
enter
clc
cmp
out
cmp
hlt
sar
and
call
rcr
sar
ret
repnz
loope
add
sbb
aad
ljmp
repnz
in
lock
xor
repz
ljmp
mul
roll
out
iret
clc
int3
fsubr
jmp
ret
in
in
ss
hlt
fistpll
iret
sbb
lds
call
movl
out
jmp
shll
aad
shl
cmp
aas
int3
out
xor
loopne
cli
call
leave
sub
xor
out
xor
fdivs
repz
cmp
sar
lock
clc
int3
jmp
xor
in
xor
cmp
in
iret
into
ds
icebp
fsub
cmc
out
cmp
addl
int3
out
cmp
ror
cmp
xlat
sarb
addb
in
xlat
std
mov
fstl
divb
ss
repz
addb
mov
mov
rcl
loopne
ljmp
fldl2e
cmp
cld
loopne
icebp
aas
out
and
lock
fdiv
out
enter
into
sti
rcl
int
cmp
testl
test
repz
das
cs
stc
cld
clc
lret
stc
xor
fsubp
mov
enter
xchg
ret
bnd
cmp
lock
rolb
div
aam
in
int
loop
xchg
mov
out
in
aad
out
xor
fmul
leave
rol
in
fisttps
mov
iret
das
aaa
xor
cmp
repnz
ss
not
std
out
hlt
jecxz
fmulp
int
nop
xchg
out
ficoms
out
sti
sarb
cmp
icebp
fdivrs
out
fcomp
jecxz
test
aas
lret
inc
lret
clc
xchg
cs
out
roll
cmc
std
fmuls
in
int
lret
out
ret
hlt
ret
fmul
vpsubw
aad
fdivrp
sbb
test
clc
stc
rcl
vpor
orl
aaa
into
aam
cld
std
jecxz
rol
ret
jecxz
test
sbb
fmulp
cld
xchg
xchg
das
ret
int3
div
cmp
ljmp
or
cli
ret
loop
cld
out
out
test
into
xor
ret
out
fcomp
ljmp
cmp
lds
stc
iret
ljmp
into
call
leave
iret
fistpll
repnz
idiv
fsubrp
in
jecxz
xchg
lret
sbb
int3
iret
mov
cld
out
aam
rol
mov
jmp
mov
mov
xchg
fmulp
out
cmp
aaa
ror
jmp
loope
cmp
cmp
sti
vcvtpd2dq
xchg
fcmovbe
mov
fmull
out
ljmp
repnz
rol
loop
test
nop
int
repnz
shl
repz
idiv
shr
stc
ret
rolb
ret
in
ljmp
jmp
out
int
aaa
xlat
iret
cmc
cli
out
std
fcmovbe
test
xlat
in
std
test
in
int3
fidivl
sarb
fsubr
cmc
aam
orb
rolb
loopne
mov
adc
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
cmp
mov
cmpsb
add
rcl
fsubrs
in
cmp
out
xlat
iret
in
vpor
addl
shl
aam
xor
lock
ds
idivb
cmp
out
fdiv
add
aad
mov
nop
clc
loopne
mov
iret
call
cmp
cmp
int3
xor
xchg
mov
xchg
std
in
into
aaa
aam
into
in
repnz
rcl
cli
sarb
cli
iret
in
fadd
test
hlt
std
iret
clc
out
cli
loope
cs
repnz
das
xor
rcr
cmpb
ljmp
out
rorl
enter
fcmovnb
loope
bnd
test
jecxz
jmp
lret
faddl
imull
rcr
lret
out
repz
mov
out
loopne
jecxz
xchg
xor
ret
out
xlat
ljmp
rol
inc
fsin
aam
cld
fcomp
xlat
lret
in
lock
shr
shl
aam
fcom
cli
cld
rcr
cmp
fcmovbe
ds
cmp
xor
loopne
xor
rcl
enter
imul
cld
sti
aad
jmp
orl
fnop
rcr
ror
out
stc
adc
and
cli
jmp
fdivrp
leave
out
xchg
loop
aaa
out
enter
in
jecxz
repz
in
leave
mov
lret
int
icebp
in
int
xchg
leave
into
icebp
leave
aas
jmp
aam
lock
xchg
sbb
fxch
lea
xor
out
int3
std
cmp
out
loop
rolb
loop
test
loopne
icebp
xchg
call
repnz
lock
cli
icebp
rcr
lret
aas
xlat
into
test
jmp
neg
mov
rcl
cs
xor
shl
fdivrp
ss
in
xchg
fucom
repz
ljmp
loope
in
aad
icebp
cli
xor
sar
sarl
test
fisttpll
jmp
icebp
shll
in
xor
in
in
loopne
in
leave
mov
iret
out
test
xor
leave
clc
into
int3
cmp
shl
fdivrp
aam
stc
jmp
out
fucom
int3
cmp
ret
out
jmp
fstpt
in
cmp
fdivrl
mul
call
xchg
int
lock
out
aaa
xor
ror
bnd
fcomp
out
fcom
mov
out
fdiv
repnz
sarb
into
shr
aas
out
loopne
cmp
sar
fimull
in
nop
out
loop
int3
rcl
out
fucomip
sti
out
mul
aad
xor
fsub
cli
cmp
out
shr
xor
shl
out
jmp
jmp
cmp
roll
ljmp
sbb
out
rcl
into
loop
xlat
out
into
cld
cmp
fcmovnbe
cmp
repnz
fsubrp
int3
xchg
adcb
jecxz
xor
fcmovu
jmp
cmp
rcl
neg
in
fdivrp
fucomp
div
leave
test
ficoms
cs
in
xor
cmc
ds
repz
loope
loop
icebp
fildl
faddp
repnz
cmp
shlb
aad
cmp
test
rol
out
ret
idiv
mov
xor
xor
ret
lret
shl
fst
stc
ds
into
sti
xlat
loop
jecxz
jmp
rcll
ret
ljmp
inc
fxch
ds
rol
mov
mov
into
in
leave
into
xchg
leave
lret
lret
into
lret
aad
shl
loope
jmp
lret
call
fcomip
jecxz
xor
ror
xor
cli
fstp
int
cmp
imul
cld
testl
out
jecxz
xorb
jecxz
aad
in
rcr
repnz
cld
jmp
test
vshufps
roll
idiv
jmp
aas
repnz
int
not
cmp
out
xlat
jecxz
jmp
ljmp
ret
xor
call
xor
cld
lock
and
in
enter
fdivrp
fcmovnu
repz
shr
repnz
stc
clc
in
repz
xlat
test
aam
testb
in
ror
loopne
in
loop
repz
cs
std
cmp
rcl
loope
aas
cmp
xor
fcmovu
std
ljmp
ret
xor
lret
fcmovbe
out
jmp
inc
call
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
adc
add
xchg
jg
cmpsb
add
cmp
icebp
and
hlt
fsub
fstp
jmp
xchg
leave
mov
fst
int
xor
lret
clc
leave
div
mul
ret
cmp
lock
ret
ret
loopne
jecxz
xchg
xchg
shll
lret
aam
cli
repnz
cli
out
aam
shl
repz
cli
loop
loope
lret
loope
sub
hlt
xor
shl
test
ret
lret
cmp
in
jmp
iret
sti
rcl
fcmovu
xlat
fidivrs
out
aaa
adc
loope
hlt
enter
jecxz
faddl
lret
icebp
cmp
fistpll
into
in
cmp
fcmovbe
mov
cld
test
ficoms
xor
in
out
leave
ror
lock
in
ret
rorl
ret
nop
repz
repz
repz
cmc
clc
aad
cli
xchg
out
in
enter
lret
loopne
fcom
div
out
lret
loope
ret
repnz
loope
std
ret
out
sub
lret
cli
cmc
jmp
in
in
xor
test
xor
fsub
fadds
leave
fmul
loopne
iret
xchg
out
lret
enter
lret
mov
aad
fucomp
loop
fst
mov
in
std
mov
rcl
in
stc
mul
out
xor
test
fsubp
fcomi
hlt
xlat
aad
jmp
fiadds
jmp
shr
xor
in
call
out
in
jmp
fcmovnbe
stc
add
out
mov
and
shl
test
cmp
leave
clc
lret
imul
enter
fcomi
sbb
in
loope
fmul
mov
fucom
ljmp
neg
cmp
fcmovnu
xor
fcmovb
or
shr
imul
ret
fcmovnu
xchg
xchg
enter
hlt
fucom
sti
rcl
test
cld
aad
sti
and
int3
cli
mov
loop
out
ljmp
neg
idiv
fldz
out
fsub
cld
lea
rolb
ret
loop
cmp
hlt
ds
fcom
repz
lds
fstp
in
test
out
rcl
ror
xor
cmp
stc
in
fcmovbe
rcl
aam
test
cli
fadds
in
lret
jecxz
lock
in
sti
fsubrp
shl
out
and
fmull
mov
xchg
call
cmc
repz
in
repz
repnz
rol
shr
neg
xchg
mov
fdivr
in
das
sub
out
aam
into
lret
ss
out
fstp
ds
sar
fadd
loope
rorb
xor
aam
aaa
clc
ds
hlt
in
out
aam
hlt
leave
xabort
out
xchg
loopne
rcr
fdiv
in
cmp
sti
jecxz
mov
loopne
fadds
mov
call
std
repz
std
ffree
aaa
jecxz
rorb
fsub
xchg
ljmp
std
shlb
cmp
rcr
sti
jecxz
fiadds
loope
xchg
xchg
shl
lret
stc
xlat
ljmp
in
aad
rorl
fsub
adcb
hlt
aam
rcr
cmp
sar
fxch
ret
xlat
cli
sub
repnz
in
clc
int3
fcomi
ss
inc
out
loope
mov
out
jecxz
loopne
orl
in
divb
ss
out
xlat
shl
repz
ds
in
addb
jmp
xor
call
cmp
cmp
incb
aam
cld
lret
ljmp
mov
sub
stc
fcmovnbe
lret
lock
faddl
cmc
rorl
and
into
in
jmp
out
ret
aad
les
ror
xor
hlt
fucomip
cmp
cmc
fldl
loop
out
call
divb
xor
aam
jmp
lock
cmp
sbb
fucomip
icebp
sti
enter
in
out
sub
lret
cld
sti
int3
into
into
loope
sti
xlat
cld
loope
rcl
int3
repnz
int3
in
xor
cmp
ss
ss
xor
ret
test
call
mov
ljmp
ss
jmp
sar
rolb
jecxz
int
mov
iret
iret
aaa
cmc
cmp
hlt
ret
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
jmp
inc
std
mov
jg
cmpsb
add
xchg
ljmp
orb
xor
aaa
ds
out
ret
movb
jmp
xor
in
out
in
in
repnz
fcmovnbe
cmp
in
leave
test
jmp
jmp
or
hlt
nop
shl
shlb
sti
div
out
int3
call
xor
shl
shl
orl
rcr
aaa
xor
stc
dec
cmc
cli
out
test
fxam
neg
out
in
fpatan
iret
mov
aad
xor
ljmp
loop
fidivrs
xchg
stc
fcmovnb
clc
sub
lock
int3
fdiv
aad
jecxz
rcl
repnz
out
mul
repnz
into
clc
fldl
out
out
orl
lret
xor
into
jmp
cld
cmpb
fstp
repz
cld
out
fcmove
fadds
loope
jmp
repz
sar
loopne
out
test
aam
fsubr
lock
out
jmp
int
aad
loopne
std
aam
repnz
jmp
mov
out
in
out
fst
sar
aas
cmc
xor
fcomip
clc
fucomip
in
out
int
test
rcll
xor
out
ss
cmp
cmp
loop
jmp
loop
iret
decl
hlt
shl
sti
ljmp
out
fdivrl
jecxz
in
leave
call
hlt
mov
ds
cmp
jmp
fscale
xlat
in
shl
hlt
loop
cld
fisttpll
ret
xor
xor
out
xlat
rolb
sbb
out
iret
out
xor
rcl
xor
out
aam
aad
aam
enter
fsub
int3
loope
mov
out
cs
ljmp
cmp
repnz
jecxz
mov
mov
lret
int3
filds
cmpb
fcom
fprem
xor
cmp
in
out
out
loopne
test
mov
xchg
jmp
sub
lret
in
sti
into
aad
xor
cmp
enter
int
int3
mov
jecxz
lret
int3
shll
rcl
call
ret
cli
xlat
cmp
lret
stc
ds
in
into
lock
enter
repnz
call
xor
and
not
aam
aad
ljmp
mov
xor
lock
jmp
into
hlt
hlt
fcmovbe
xchg
xchg
rcr
lea
int3
jmp
aad
cmp
leave
lock
fdivr
fdivl
shl
lock
mov
cli
in
icebp
fstl
into
rcr
aaa
lret
fstpt
sub
lock
leave
xchg
mov
or
repz
enter
jmp
xlat
call
repnz
test
cld
out
loop
mov
call
jmp
aaa
cmp
std
cmc
in
jecxz
mov
sub
popl
ror
cmc
out
std
in
testl
les
lret
xchg
xor
cld
enter
shr
aam
loop
mov
aas
test
in
fmull
ret
sub
call
icebp
cmp
fcmovu
ret
cmc
loopne
hlt
int3
test
fcmove
jmp
aam
icebp
enter
fst
cmp
ss
in
incl
aam
loopne
mov
rorl
leave
aad
cli
int3
in
cmp
out
mov
out
in
mov
std
loopne
hlt
shlb
das
leave
lret
aam
jmp
jecxz
in
xlat
out
cli
fucompp
xlat
sti
and
loope
xchg
movl
iret
repnz
cmc
in
ret
loopne
enter
jmp
rcl
out
loopne
loopne
cmp
cld
xlat
test
sti
mov
aad
das
out
aaa
lret
xor
hlt
xor
sti
icebp
cli
iret
cmc
aas
sar
sti
fdivr
movl
mov
xor
ss
into
lret
aaa
jecxz
cmp
sar
jmp
lret
iret
cmc
xchg
xchg
cmc
jecxz
loop
xor
repnz
aam
rcr
fildl
call
mov
mov
loopne
xor
xlat
repz
ds
jecxz
loopne
sti
rol
test
test
in
lret
icebp
addl
add
add
leave
rcl
fst
leave
pop
push
aam
ficompl
jl
xchg
jecxz
out
fdecstp
rcr
cld
idiv
std
add
sar
xchg
out
sti
cmp
icebp
xor
clc
ss
fucomp
out
std
aas
cmc
fstpt
fabs
cmpb
loopne
mov
mov
std
xchg
cmc
jmp
ret
repz
int
stc
sub
ret
fcomp
add
xchg
or
xchg
cld
nop
aas
hlt
sar
std
in
cmp
jmp
aam
incb
out
fimull
xchg
xor
lret
jmp
out
cmp
iret
sarb
cmc
repz
repnz
loopne
fucomp
out
ficoms
ror
das
ss
cmp
loopne
fdivr
into
frstpm(287
fld
in
call
enter
xor
aam
cld
cli
lret
neg
adc
roll
loopne
int
in
fiadds
hlt
ret
enter
cmp
xchg
xchg
mov
ret
rcl
in
lock
fidivrs
ret
addl
jmp
call
clc
stc
icebp
hlt
out
cmpb
in
ffreep
rcr
mov
jmp
orb
loope
ror
jmp
repz
xor
cli
cld
cmp
not
mov
in
jmp
lret
sti
lret
jmp
fstpt
leave
imul
cld
in
test
fdivr
mov
hlt
jecxz
fcmovnbe
out
cmc
sub
cli
cmp
stc
sarl
notrack
out
fiadds
mov
out
out
faddp
int3
in
xlat
in
cmc
ror
loope
repz
std
fcmovnb
rol
call
in
test
int3
jmp
icebp
xor
cmp
in
ror
aas
int
rcl
les
jmp
fists
ds
call
test
repz
cli
addb
clc
clc
mov
mov
rol
xor
std
cmp
fnstsw
xlat
clc
fcmovu
cld
in
jecxz
xchg
jecxz
std
out
icebp
call
ror
xor
repz
leave
stc
aam
clc
icebp
ds
sti
aad
fcmovu
and
rcll
in
ss
ret
aas
out
cmp
shl
cmp
aad
call
int3
repz
aaa
enter
enter
aad
cmc
sti
call
mov
into
fcomip
repnz
ret
stc
icebp
int
repz
ds
in
in
in
xchg
ror
loop
addl
aaa
stc
int
std
aaa
std
shr
xor
lock
inc
movb
mov
aas
repnz
out
shr
xor
xorb
fxtract
mov
fxch
call
hlt
shr
aad
fdivrs
aad
faddp
out
mov
out
int3
rolb
xor
xor
aam
fnstsw
repz
hlt
cld
sti
xchg
cli
jmp
cli
cli
icebp
jmp
cld
int
sbb
out
shl
loopne
call
icebp
test
mov
in
clc
leave
jmp
in
aad
cmpb
ds
mov
enter
fcmovu
addl
xor
fucomp
sti
enter
fcmovnu
clc
sbb
and
fucompp
in
xchg
xchg
lock
icebp
cmp
sti
call
iret
idiv
rcr
ret
jmp
jmp
fimull
in
out
das
stc
jmp
std
jmp
repnz
cmp
xchg
in
roll
into
in
out
xor
hlt
div
shlb
into
jmp
out
repnz
cmp
aam
cmp
test
out
call
lret
not
xor
lock
cmp
repz
cmp
fcmovnbe
loope
sbb
std
sbb
cli
std
jmp
ljmp
call
shl
xlat
aad
cmp
fmul
cmc
aam
int
out
mov
jmp
ljmp
cmp
out
rol
loope
test
test
xchg
int3
xchg
lea
clc
repnz
fmul
lret
cmp
in
cmp
addb
in
sti
loopne
lret
xchg
std
out
shl
aad
aad
cmp
iret
aas
in
rcl
loope
std
loopne
out
lret
call
in
hlt
into
ret
int
xor
into
into
incl
add
xchg
out
repz
into
int
fcmovne
xor
xor
add
add
jmp
leave
sarl
rcl
int
mov
xchg
sbb
jl
add
int
cld
cmp
fstp
aad
ljmp
dec
out
hlt
cmc
xor
in
fdivs
repz
shl
lock
mov
xchg
mov
sub
cmp
fmul
ss
rcr
out
fld
fidivrl
clc
out
test
mov
xchg
jmp
repz
sub
xlat
aaa
stc
xor
cld
aad
out
aam
call
loop
jmp
incl
iret
lock
int3
fbstp
fucomip
mov
mov
lock
xor
into
in
fdiv
shr
neg
int
shl
lock
xchg
lock
ss
hlt
cmp
out
into
icebp
xlat
rcr
ffreep
loopne
or
addb
lret
sub
fldlg2
jecxz
rcl
test
mov
loop
shl
xchg
lock
fdivrs
leave
into
cmp
aam
cli
cmp
fadd
orl
in
loop
sarb
int3
loope
rcl
into
leave
cmp
clc
rcr
sub
aas
mov
test
jmp
in
lret
leave
cli
out
int3
cmp
loope
xor
ds
aad
out
fmull
loope
xlat
ftst
fxch
cmp
fldl
cmc
clc
fldl
into
repz
out
loopne
divb
xor
fucomi
repnz
cmc
lock
in
fdiv
test
sbb
loop
addb
repnz
fucomip
std
iret
cld
out
add
vaddsubps
and
test
test
int3
mov
lock
iret
hlt
out
sti
repnz
incb
cmp
jmp
std
out
nop
test
in
faddp
out
rol
fdiv
out
fmul
std
ret
xlat
in
loop
xor
ljmp
sti
fisttpl
into
ljmp
int
out
cmp
jecxz
xchg
repnz
cmc
mov
loop
loopne
ljmp
fsubr
ror
iret
ds
fcmove
fcmove
repz
loopne
fnstcw
nop
jecxz
icebp
ljmp
in
out
shl
cli
shl
rol
loopne
addb
xchg
enter
xlat
in
xor
cmc
iret
xor
lret
iret
iret
in
fdivrl
test
hlt
mov
fsubr
cli
mov
std
call
stc
out
lret
fcmovb
int3
ljmp
mul
fcmovnb
test
fsubrp
jecxz
rcl
ljmp
loop
repz
repz
fcomi
fmulp
rolb
aam
call
fcoml
fld
neg
leave
mul
fcmovnu
cmp
bnd
cld
ret
aad
addl
loop
aam
jmp
jecxz
xor
int
cmp
mov
test
int
addl
loop
rcl
icebp
cld
call
cmp
incl
sub
jecxz
xor
out
fcomp
addl
rcl
repnz
fiaddl
repz
hlt
rcl
sar
icebp
into
cli
into
fcomp
fcom
icebp
stc
clc
ret
xchg
xchg
mov
clc
jecxz
jmp
repz
not
mov
cli
loop
xchg
xor
aam
cmp
fcom
out
sti
ret
cld
lock
loope
test
mov
in
lret
ds
rcl
sarb
cmp
xlat
out
ds
repnz
test
out
cld
xchg
out
add
call
cmp
repnz
ds
sti
les
cld
sub
enter
loop
ljmp
cli
clc
cmp
aas
loope
out
std
shl
cmp
mov
test
mov
int3
loopne
cli
aaa
xor
std
ds
sti
lds
mov
lock
int
lret
sti
loopne
cmp
not
clc
in
fcmove
lock
cmc
in
leave
ret
cmp
aaa
cmp
cld
clc
icebp
rcl
shl
in
mov
fucomip
lret
xchg
cmp
xor
cmp
jmp
cmpl
out
fstpt
xlat
stc
xchg
leave
fsub
call
call
cmp
shlb
fdivr
shl
not
out
mov
into
out
rcl
jmp
fst
cmc
ds
lret
fsub
shl
div
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
repnz
lea
sbb
icebp
jmp
lret
sti
out
out
jmp
cmp
std
jecxz
xlat
rol
cmp
mov
call
lock
in
rcl
xor
rcr
out
mov
lds
ffreep
mov
ljmp
repnz
cld
xor
shl
stc
shl
cmpl
jecxz
xor
enter
cmc
xor
in
cmp
fst
cmp
sti
cmp
test
out
in
cli
mov
int
lock
ret
aaa
xor
shl
aam
xor
out
aad
test
sar
xlat
mov
ret
call
fdivp
vpsrlq
hlt
shl
cmp
out
ss
fcomp
loopne
loope
and
mov
jmp
xchg
rol
stc
les
repz
repnz
lock
rol
mov
addb
repnz
das
sub
vpsubsb
clc
cmc
shl
cmp
sar
clc
rolb
mov
xchg
mov
xor
cmp
sar
rolb
iret
add
fucom
hlt
fucomi
mov
in
repz
jmp
std
xor
icebp
jmp
testl
lret
int3
iret
repz
lock
jecxz
icebp
enter
int3
iret
loope
std
and
call
in
xor
shl
in
out
aad
shr
test
ret
aam
call
mov
mov
fimull
icebp
lret
repnz
aad
lock
aam
aas
loopne
call
loopne
xchg
int
aam
shl
hlt
xor
neg
test
loopne
in
cld
aas
out
loop
out
xlat
xchg
xor
loope
hlt
fnstenv
xor
in
fcmove
in
fcmovnu
shl
mov
xor
test
mov
loope
ljmp
enter
repnz
loopne
sti
out
hlt
sar
fisttpl
fimull
out
lret
ror
xor
xor
clc
fidivrl
testb
shl
out
neg
jmp
shl
ret
clc
sti
cmp
xor
rcr
shr
int3
cmp
cmc
cmp
jmp
out
lock
shll
enter
aaa
int
hlt
iret
hlt
icebp
rcl
loopne
repz
call
int3
ljmp
xor
fld
fxch
out
cmp
cmc
cmc
cmp
sti
mov
std
clc
cld
fcmovu
xchg
out
xor
cmc
iret
repz
divl
ds
filds
ror
nop
mov
fdivr
jmp
fsubr
sarl
cmp
test
out
xchg
out
xor
cs
xlat
cli
fldpi
jmp
shlb
rcr
cmp
rcr
add
fsubr
iret
rcll
loopne
ljmp
cmp
cmp
test
shl
lret
incb
mov
fptan
out
fdivrs
sar
cmp
std
ret
loopne
test
mov
enter
out
in
ss
loopne
icebp
loopne
stc
loop
loopne
fxch
xchg
sti
mov
xchg
lret
jmp
sti
in
out
shl
repnz
cmp
sar
out
enter
decb
xchg
ljmp
sub
xor
std
xor
cmp
shr
shl
in
cld
shl
cld
testl
in
jmp
xor
lock
int3
cmp
sub
lret
out
std
loope
fildl
repnz
fcmovnbe
aam
loopne
hlt
xor
call
loopne
cmp
test
xchg
in
cmc
repnz
shr
out
iret
fxch
clc
rol
jmp
loope
fildl
sub
lret
jecxz
not
jmp
cmp
std
cmp
ret
loopne
jmp
les
in
in
rol
shl
int
cmp
in
rol
in
std
repnz
mul
call
test
test
cs
xlat
xlat
clc
sar
repnz
xchg
rorl
in
loope
ljmp
ret
shl
fcmovbe
lret
aad
aam
cld
cmp
stc
ds
jmp
xor
lret
cmp
stc
in
sti
fcomp
cmp
xchg
xchg
hlt
lea
xor
ss
idivl
xor
roll
aam
cmp
sti
sbb
xchg
test
call
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
test
jl
add
cld
ljmp
leave
in
fmul
jmp
dec
out
test
test
repz
test
in
xchg
ror
hlt
test
enter
xor
aam
ret
int3
aad
stc
mov
xchg
enter
repz
out
rcr
in
cmp
cmp
and
in
xchg
ror
cmc
cmc
shlb
sarl
xlat
cmc
stc
lret
sarl
iret
fiaddl
ljmp
in
call
iret
hlt
aad
aaa
rol
aad
cld
stc
jmp
ljmp
repz
xor
sarb
ror
cli
fdivr
out
hlt
in
rol
mov
mov
jecxz
mov
out
hlt
xor
cmp
in
stc
div
rcl
test
xlat
fcmovb
lret
std
out
in
lock
cmp
loop
lret
idiv
loope
sti
shl
fsincos
ret
rorl
xchg
icebp
out
filds
out
lret
or
fstpt
lock
neg
loope
in
mov
call
jecxz
stc
in
fstp
aas
ss
xor
rcr
inc
test
int
int3
out
nop
fdivrp
xchg
out
loopne
in
xor
int
ss
cmp
fcmovnu
cmp
cmp
xchg
cli
mov
rolb
shr
leave
sarb
jmp
fdivrl
xchg
decl
fisttps
call
fdivrp
fstp
sarb
in
fimull
enter
in
repz
ret
lret
cli
repnz
cli
aas
cmp
shl
rol
test
mov
lret
in
shr
shrb
out
hlt
repz
in
jmp
int
aas
xchg
loopne
rcl
stc
mov
lock
fcompp
sti
leave
lret
aaa
call
incl
les
jmp
loop
neg
cli
cmp
pushl
enter
ror
sti
rcl
lret
sti
fucomi
call
test
mul
fidivrl
std
in
aaa
cmp
test
clc
loop
aam
stc
test
out
std
iret
xchg
lock
xor
into
icebp
cmp
jmp
cmc
cmp
fsub
sbb
mov
in
cld
jmp
in
out
hlt
cmp
cmp
ljmp
out
repnz
leave
mov
cld
mov
or
fcmovnb
cld
jecxz
lret
aam
sub
icebp
int
into
fidivrs
fiaddl
and
repnz
xchg
das
in
in
cmc
fnsave
idivl
ret
add
repz
clc
icebp
out
cli
xchg
icebp
shr
das
cld
jmp
int
repz
rcl
out
leave
clc
fnstcw
in
out
ljmp
fnstenv
aaa
aaa
in
out
clc
adc
hlt
rol
rcl
leave
mov
mov
loopne
iret
jecxz
aam
loop
stc
out
aad
fcomi
fnstcw
cmp
call
out
out
xchg
fmulp
xor
out
in
xor
jmp
iret
lret
jecxz
cmc
xlat
in
xchg
ffreep
mov
in
dec
fstl
ror
shl
call
cmp
xlat
cld
cli
in
int3
into
jmp
loopne
cld
mov
xor
sub
ret
repnz
ljmp
into
cli
loopne
fsubrp
in
mov
ljmp
shlb
in
repnz
aaa
xor
cmpl
cmp
shl
sti
and
in
loopne
fsubrl
xlat
cs
jecxz
call
xlat
adc
rcr
enter
loop
xchg
orl
xor
in
cli
lret
repnz
fadds
or
fmulp
ss
enter
call
fstp
rcr
mov
incb
push
hlt
shl
xor
int3
lock
roll
ror
xacquire
cli
out
mov
test
loopne
test
iret
idiv
flds
incb
cli
mov
call
in
cmp
xlat
fsub
out
into
shl
stc
fiaddl
nop
repz
fsubr
ret
ror
stc
or
rolb
lret
call
xchg
sub
rcl
jmp
ljmp
rcr
shl
add
lds
in
into
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
mov
scas
jg
cmpsb
add
ss
sti
cmp
cmp
call
ljmp
int
xor
idiv
out
jmp
incl
rcl
call
enter
lock
repz
leave
aaa
fcmovnbe
aas
ljmp
in
fst
aad
mov
iret
ljmp
lret
int3
into
ljmp
add
xchg
xchg
lea
lret
cmp
enter
cmp
loopne
into
sbb
and
orb
int3
lock
enter
cli
shr
std
iret
xlat
repnz
cld
mov
std
cld
xchg
ror
fucomp
lock
cli
idiv
fucomi
rcl
sarb
cld
out
aad
cmp
fisttpl
xchg
xchg
loop
div
enter
leave
lret
ds
xlat
xlat
fucomip
sar
test
fimuls
iret
xor
repnz
div
aam
out
cli
decl
leave
sub
int
xor
jmp
repnz
fsubrp
aas
fstp
sub
jmp
xchg
test
in
shr
aam
stc
cli
iret
ds
jmp
in
test
dec
in
jecxz
xchg
in
out
lock
jmp
rol
rcl
sub
lret
jmp
cmp
jmp
enter
xor
out
call
shr
fstpt
sar
lock
xchg
mov
xchg
rcr
fsubrp
ds
sti
fdivrp
out
ss
aad
loop
fisttps
in
ljmp
loopne
xor
loopne
sti
jecxz
lock
fcmovu
testl
call
xlat
cmp
aam
ror
lret
fildl
fcomp
aad
cli
int3
lret
in
fmul
ret
xor
ss
sti
leave
ror
shl
std
test
stc
repz
mov
fucom
leave
in
cld
lock
enter
call
ror
out
xor
repz
leave
loop
cli
test
fcmovb
loopne
addb
cmp
int
icebp
clc
repz
cli
sarl
xlat
inc
cmp
ljmp
lret
lret
div
std
idiv
cmc
xlat
repz
mov
stc
enter
xchg
leave
jecxz
shlb
int3
out
fchs
hlt
loope
shr
fcom
fst
cmc
loopne
int3
fcmovu
repz
fsubp
ret
iret
cmp
repnz
int3
rcl
fcomip
rcl
xchg
repnz
aam
fsub
jmp
leave
ror
ret
cmp
fisubrl
loopne
or
fcmovu
mov
std
out
mov
and
out
aam
out
int3
out
cmp
out
out
cmp
addl
std
out
shl
shl
xor
ljmp
ljmp
ret
jecxz
fmuls
call
aad
fucomi
ljmp
vpsllw
lds
jmp
lret
xor
cmp
ss
ljmp
aad
icebp
cld
fmull
cmp
call
rcl
int
aad
fstpt
shl
xchg
mul
out
nop
xor
leave
ss
repz
loopne
jecxz
icebp
ret
std
loop
sub
lea
ds
repz
fmul
fucomi
aam
in
lock
cmp
faddl
loope
out
lret
sti
ljmp
int3
xor
ret
std
roll
rorb
xor
rcl
cmp
cli
icebp
idiv
dec
in
xor
sbb
ret
in
filds
fsubrp
in
frndint
aam
in
lock
lock
out
lret
loope
call
icebp
into
ror
call
rcl
clc
jmp
ljmp
jecxz
vcmpps
xchg
loop
iret
out
jmp
repnz
loope
out
int3
clc
loop
out
stc
cli
xlat
std
call
jecxz
xchg
shrb
clc
out
fucomi
leave
idivb
cli
icebp
cli
aam
vshufpd
cli
loopne
test
test
out
xor
call
hlt
ss
shr
icebp
xlat
f2xm1
ffreep
out
std
cld
icebp
xchg
rcr
loopne
aad
in
aam
into
xor
fmul
fcmovb
idivl
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
stos
cmp
jno
mov
jl
add
ds
shr
mov
jecxz
in
xor
xor
cmp
out
sar
rol
cmp
xchg
jecxz
test
jmp
xchg
xchg
in
in
ljmp
repz
xlat
ret
fcomp
filds
xchg
jmp
xor
icebp
leave
sarb
into
stc
lock
mov
stc
in
lret
cld
bnd
jmp
aaa
xor
and
out
mov
loope
enter
fstp
cmp
out
jmp
aaa
xor
iret
aad
ljmp
mov
out
mov
adcl
lock
loopne
out
fcmovnbe
rcr
fcmovb
aad
inc
repnz
icebp
call
shl
out
xor
in
sar
icebp
enter
ret
stc
fildl
loope
out
fcmovne
icebp
mov
ss
in
call
in
test
test
leave
stc
in
sub
shl
stc
lock
into
cmp
fsub
into
ret
in
cld
aas
in
fmul
call
into
shr
ret
test
lret
jecxz
mul
icebp
cmc
testl
jecxz
cmc
faddp
out
xor
leave
div
aad
lret
fnstenv
stc
pushl
fldl
in
fldpi
mov
fmull
in
ss
icebp
cmp
jecxz
aaa
jmp
lret
loopne
in
fucom
mov
cs
lret
leave
lock
fsubr
hlt
int3
hlt
ret
loope
mov
mov
enter
shr
in
std
xor
fcmovne
cmp
cld
loopne
mul
jmp
mov
jecxz
xchg
jmp
lret
cmp
out
rcr
cmc
in
shr
sub
xchg
stc
clc
sub
xchg
rorl
iret
out
sarb
cmp
cmp
lret
addb
xchg
out
les
nop
jmp
hlt
int
iret
cli
std
fcom
cmp
neg
xchg
cmp
loop
repz
call
in
lock
std
jmp
cmpl
ret
repz
mov
or
out
std
loop
test
aam
int
fdivr
aad
neg
in
std
aas
jmp
jmp
xchg
addb
clc
fxtract
jmp
out
hlt
loope
cli
jecxz
out
out
in
in
cld
lea
out
ror
fucomi
xor
call
sarl
hlt
xchg
fsubr
mov
fcmovu
push
aad
loopne
cmp
adc
mov
jmp
nop
xchg
jmp
out
ss
ljmp
cmpb
cmp
div
cmp
mov
out
out
call
cli
aam
aas
cmp
ds
test
add
mov
fcmovu
mov
loope
in
icebp
out
divb
neg
fcmovbe
call
out
test
cld
adc
shr
out
and
int3
sub
loopne
repnz
fcmovnbe
shl
out
ret
aas
out
jmp
jecxz
add
loope
in
int
xlat
iret
repnz
in
ror
shl
test
stc
leave
clc
icebp
int3
in
xchg
ret
fdivs
aam
iret
stc
cmp
test
cmp
faddp
loop
ret
in
mov
test
jecxz
in
rcr
call
loopne
xor
fdivrs
into
add
jmp
cmp
iret
fimull
rol
clc
xor
cli
in
stc
cmp
xor
in
fcmovnbe
sbb
loope
out
fcoml
in
aaa
imulb
sti
idivb
lret
xlat
lds
cld
int3
loope
xchg
nop
xchg
xchg
in
sub
xor
lock
cmp
cli
icebp
ds
test
aam
repnz
xchg
out
fsubrp
lock
xchg
cmc
jecxz
cmc
fcmovbe
sti
cs
int
out
dec
repnz
in
enter
out
iret
mov
test
sarl
lock
loope
lret
dec
fcom
ds
xchg
in
fisttpll
xlat
leave
xor
divl
shl
cmc
ds
shl
orl
call
xor
out
icebp
jmp
aam
std
clc
xchg
test
in
jmp
test
sub
jecxz
fdivrp
fstpt
fidivrl
xor
fdivr
enter
out
enter
inc
hlt
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
xchg
out
sub
xor
rcl
cmp
test
cmp
fst
call
mov
enter
in
ds
cmp
shl
cmp
jecxz
cmp
fimuls
fxch
clc
lock
jmp
xor
jmp
jmp
cmp
loop
test
cld
sar
fmul
int
mov
repz
lock
jecxz
das
xor
xor
incb
idiv
fsub
loopne
in
shl
into
cld
jecxz
cld
div
rol
jmp
jmp
aas
jmp
std
loopne
cmp
jecxz
in
fucomi
cld
leave
jecxz
repz
test
repz
lret
in
fdivrp
aad
loope
shl
loope
loope
stc
ror
jecxz
sub
xor
shr
xor
repz
sar
in
test
out
aam
in
sti
mov
xchg
icebp
leave
lock
ss
int
or
jmp
lret
faddl
iret
loope
loope
cmp
out
ds
loope
sub
in
clc
mov
jmp
fsub
nop
test
sub
leave
aam
lock
repnz
int3
out
loop
iret
roll
test
out
int
hlt
icebp
ret
aam
imul
clc
leave
out
addb
cli
ret
ljmp
xchg
into
leave
jecxz,pn
xor
fcmovbe
loope
fcmovnbe
std
icebp
fdivr
ds
fsubr
out
test
out
sub
lea
in
into
hlt
ljmp
sti
mov
loop
in
cld
faddl
xor
aaa
in
xor
cmc
cmp
out
loop
addl
xchg
in
mov
call
stc
aad
fsubr
aam
fdivr
xchg
int3
test
test
lret
xor
shl
out
cmp
fcmovnb
aad
loop
stc
ret
pop
fsub
fsubr
rcl
in
in
in
xor
in
fmul
lock
repz
les
into
xchg
fimuls
leave
aam
out
out
out
int
icebp
lret
test
ret
mov
jecxz
mov
ret
loope
icebp
mov
in
out
fcmovnb
in
repz
rcl
ret
imul
enter
in
test
cmc
out
hlt
cmp
out
out
div
cld
std
out
int
adc
vpsubusw
mov
test
out
xor
iret
cld
fdivrl
cmp
xlat
int3
call
rcl
shl
out
enter
test
xchg
xchg
mov
hlt
xor
ret
out
in
cmp
std
neg
aam
mov
shl
enter
jmp
aam
not
cmp
into
in
repz
aas
sti
out
loope
out
leave
loopne
stc
lock
fsubp
into
iret
call
xor
xor
std
repz
ds
out
test
test
fldl
mov
xor
shll
into
cmp
repnz
sarb
sti
in
call
in
icebp
out
loop
out
lret
xor
stc
cmp
cmp
int
out
aas
test
fcomp
ror
out
out
stc
fadd
shll
aas
stc
cmp
shr
fisttps
decl
iret
jmp
hlt
ds
lret
fchs
loope
xor
addb
mov
lret
cmp
flds
cmc
stc
fcmove
mov
xchg
int
lret
xor
icebp
div
enter
lret
and
mov
dec
fmuls
mov
int
xor
aad
f2xm1
cmp
aas
aas
out
icebp
repz
call
cli
mov
iret
mov
in
aad
repz
loopne
aas
aam
xlat
fsubp
rorb
clc
in
out
mov
sub
iret
in
iret
shl
jmp
icebp
cli
stc
cmp
movl
fisttps
cli
out
lock
rolb
xchg
filds
loope
out
lret
into
hlt
das
hlt
neg
lock
sbb
clc
test
jecxz
fucom
fisttpll
shl
clc
repz
int
cmp
sti
sti
clc
ret
out
repz
ret
popl
ljmp
jmp
lock
incb
cld
hlt
fprem
out
lret
loop
in
loop
xor
jmp
rol
int
fst
fcmovne
xor
ja
mov
jl
out
enter
aad
cmpb
sar
decb
faddl
ret
cmc
in
cmp
xlat
stc
iret
int
addl
mov
lret
nop
test
in
aad
lret
lret
repz
fmulp
xor
stc
rcr
stc
aas
leave
mul
fucomip
ljmp
mov
rcl
jmp
aad
sarl
loope
fcmovb
sti
aas
ret
or
mov
out
into
cli
xchg
test
ss
jmp
in
into
cmp
cmp
adc
xchg
test
nop
loop
int3
loopne
xor
repnz
aam
ss
cmp
xlat
cmp
ret
stc
loope
cld
enter
lea
ret
xlat
call
repnz
fadd
ret
xchg
stc
xchg
fcmovnu
cld
loope
jecxz
lds
sarb
xor
std
out
in
cmpb
cmp
shr
fsubp
nop
fstl
rcl
xor
into
cmp
jmp
out
fdivrl
jmp
imul
enter
test
hlt
lret
fsubr
cmp
in
in
xor
rcr
ret
cld
shl
out
std
nop
enter
ret
das
hlt
sarb
fst
out
xor
test
aam
ret
enter
enter
out
call
out
jmp
sti
lret
icebp
out
cmp
ss
mov
test
xchg
repnz
call
cmp
aam
lret
aad
loop
std
std
cmc
cmp
sbb
enter
xor
out
fcmovbe
fdiv
iret
aad
fsubp
cld
icebp
add
out
in
fisttps
aad
repz
in
ss
int3
shl
std
xlat
jecxz
rol
clc
test
lea
rcl
fldl2e
out
ss
cmp
cmp
aad
xchg
jmp
clc
call
rolb
clc
fcos
cld
cmp
in
cli
hlt
div
in
rcr
aad
clc
test
icebp
adc
out
xlat
loop
fsincos
stc
cmp
test
fcmovnu
ret
ret
hlt
loop
in
jmp
sar
repnz
out
fnstenv
in
hlt
loopne
fldz
icebp
aam
fld
add
out
loope
in
iret
repnz
ret
xlat
std
clc
loope
aad
out
cmc
faddp
fisttpl
stc
jecxz
xchg
jmp
lds
xor
aad
leave
int3
rol
stc
xchg
icebp
loop
sti
test
sti
in
mov
aas
iret
shl
repnz
leave
leave
stc
sar
fstp
or
clc
jecxz
sti
int
or
int
mov
jmp
xor
into
ss
fcmove
cmp
mov
out
fildl
iret
shrl
repz
xlat
iret
into
aas
aam
rcr
xorb
xchg
clc
loop
stc
leave
loopne
addb
xor
test
cmp
sarb
neg
out
cli
frstpm(287
lret
jecxz
leave
lock
xor
cli
cmp
leave
out
clc
sarb
xlat
mov
test
ffree
loopne
fmul
cmp
ror
sarl
shl
out
jecxz
in
int
out
out
ret
ror
std
int
ljmp
mov
cmp
cmp
jecxz
fcmovnu
iret
aam
cli
shl
out
xchg
fdivr
loopne
jecxz
loope
xlat
out
iret
fstp
iret
stc
fsincos
call
xchg
fadds
mov
stc
out
std
in
lret
not
stc
sti
cmp
int
cmpl
ds
adc
and
cmc
out
loopne
mov
xor
in
ror
aad
cld
enter
cmc
lock
test
lret
xchg
repnz
ljmp
aam
stc
iret
fsub
std
cmp
in
loope
fucom
test
xor
xor
shlb
repz
lret
ffree
aas
out
out
out
mov
jmp
out
out
int
out
ss
std
cmp
xor
cmp
decl
mov
aam
call
in
aad
icebp
into
fistpll
stc
cld
add
mov
enter
out
not
out
xor
cmp
cmp
rcr
and
shl
in
clc
mov
loope
loopne
loopne
out
in
sub
xor
icebp
fcom
sarb
loopne
rcl
fimuls
fxch
repz
mov
out
cmp
in
enter
jmp
lret
ret
fstpl
fidivrl
pop
andl
rol
xchg
cmc
fprem
movl
iret
loope
out
leave
repz
jmp
loop
sar
aas
stc
cld
mov
decl
std
loopne
jmp
ljmp
ret
testb
in
and
lret
test
xor
out
shr
aaa
int3
xor
aas
sarl
aad
aas
int3
std
ret
loop
ret
jmp
in
xchg
lea
in
ss
shr
lret
jecxz
roll
std
loopne
int3
addl
jmp
in
fcmovne
stc
sar
ds
enter
cli
sti
out
nop
test
sarl
clc
hlt
lds
test
cmp
testl
shrb
into
xor
div
out
loope
cmp
aad
or
cld
call
in
or
ret
clc
divb
cmp
and
fiaddl
enter
in
loope
shl
repz
loope
xor
in
cli
fcmovnb
fsubr
ss
test
sarl
loop
cld
rcl
aad
mov
in
divb
in
out
in
jmp
fdivp
lret
aad
fidivrl
test
in
loope
out
std
cld
jmp
xor
aaa
cmp
xor
sbb
int
cld
jmp
mov
mov
fdivr
call
int
repz
lret
cmp
fabs
in
test
enter
fmull
repz
int3
shll
fdivrs
int3
sar
fxch
rolb
xlat
stc
jmp
lret
fcomi
nop
shl
out
jmp
out
jmp
cmp
clc
int
cmpb
and
hlt
rolb
mov
in
mov
mov
stc
push
in
add
icebp
ret
out
shl
lret
ljmp
jecxz
icebp
out
ljmp
cmp
aam
into
addb
int3
mov
lret
aad
jmp
lret
idiv
hlt
xor
sar
rol
test
aad
aad
out
std
loope
into
clc
mov
xchg
not
call
aad
out
aas
aas
int
sti
fildl
aas
mov
filds
fidivs
ljmp
aad
cmp
lock
std
test
xlat
inc
out
test
out
xor
cmp
aam
sti
jmp
cmp
into
aas
cmp
shl
mov
fnstsw
fucomip
jmp
out
cmp
shl
shr
into
cmp
lock
and
mov
lret
enter
jmp
div
lock
enter
int3
clc
fildl
ffreep
movb
mov
in
iret
icebp
lock
enter
ffreep
fldl
enter
jecxz
mov
loope
lret
loope
ljmp
fdivr
int3
testl
cld
sbb
in
ror
ljmp
rcr
fdivrp
ret
mov
sub
cld
loopne
int3
ljmp
fmulp
in
in
xor
lret
lock
cli
shl
lock
incb
out
iret
loopne
aad
iret
cs
fmul
leave
cli
loopne
ret
sti
fiaddl
int3
shl
icebp
ror
jmp
fucomi
cmp
in
fldln2
cld
test
loopne
and
aam
out
mov
ret
cmc
in
jmp
inc
cmp
lret
fcmovu
out
mov
cld
xchg
aam
rcr
into
int3
clc
xor
loop
loope
cmp
mov
mov
sub
int3
lock
lock
lock
lret
rcl
iret
out
repnz
shl
fdivr
hlt
loope
testl
fsub
iret
xor
jmp
repnz
jmp
xchg
in
fimuls
enter
sti
xor
icebp
icebp
ror
idivl
roll
loop
std
repnz
aas
in
call
xor
cmp
aas
roll
clc
out
sti
orb
out
fmulp
aad
cmc
clc
test
testb
xlat
xchg
ror
xchg
rcl
int
in
xlat
lret
clc
cmp
add
ret
idiv
ret
sbb
cld
clc
loop
std
xchg
xchg
aas
das
lret
aaa
cld
cld
stc
int
cmp
ret
in
icebp
jmp
mov
ret
mov
jmp
aam
fcmovnu
mulb
cmp
aam
jg
cmpsb
add
in
test
cld
popl
repnz
hlt
clc
shl
leave
std
xor
ret
sti
xlat
sti
out
in
in
call
ffreep
call
into
xor
in
aam
aad
test
flds
lret
dec
lret
out
out
repz
lret
cmp
rcl
fiaddl
xlat
loop
lock
rcl
loope
rcl
cmp
xor
cmp
out
in
test
fdivr
fcomp
call
call
xor
shl
ret
sar
incb
mul
loop
call
shr
cmp
shl
jmp
clc
cmpl
adc
lret
loopne
std
lret
fcomip
loopne
xlat
xor
hlt
xor
incl
mov
mov
in
int3
out
in
rcl
xor
neg
aaa
cmp
test
aas
push
shl
idiv
fiadds
out
aas
xlat
rol
sar
aam
cmp
ds
adc
neg
rol
jecxz
add
lret
xchg
lock
hlt
ror
xor
jmp
xlat
cmc
shl
filds
in
cld
iret
loop
lea
lret
xor
ss
cli
test
ret
movl
loopne
hlt
repnz
shl
cmp
sti
cmp
in
xlat
loopne
int
out
fcomp
fimull
xor
stc
rcl
lret
sti
hlt
cmp
jecxz
cmp
dec
jecxz
xchg
jmp
clc
fptan
xlat
iret
in
fsub
testb
out
fsubr
out
adcl
aam
cmp
imul
idivb
sti
repz
flds
mov
fimuls
adcl
cmp
stc
lret
rol
rcl
shl
fidivrl
addl
call
std
out
shlb
stc
ljmp
fcmove
icebp
out
cmp
repz
repz
out
dec
ror
in
iret
int
in
sti
cmp
int
rcr
lock
xchg
fsubrp
jmp
repz
ret
std
xor
in
cmp
cmp
fincstp
jmp
test
iret
test
out
jmp
into
jecxz
sub
repnz
ss
repz
repz
testb
sti
rclb
jecxz
in
cld
cmp
loope
sarl
xchg
mov
in
std
incl
fsubrp
aaa
jmp
test
out
rcr
clc
int3
aas
mov
rol
fcmovb
mov
out
out
jmp
xor
fscale
shll
shl
xlat
xchg
out
cli
addl
shr
out
int3
bnd
into
iret
repz
fidivrs
aad
fidivrs
idiv
fucom
loop
ljmp
aad
out
enter
out
in
sar
shr
sar
ds
loop
ror
aad
in
lret
rorb
loopne
lret
out
ss
fdiv
ss
cmp
ds
xacquire
loop
into
cli
lret
leave
into
hlt
shl
stc
loop
fsubr
and
and
loope
std
out
cli
loopne
loop
iret
sti
divl
test
cmp
aad
loop
mov
cld
fsub
fdivr
fiadds
aad
out
lock
divl
stc
iret
cli
xlat
ret
xchg
rcl
shr
orl
call
xor
repnz
not
int
loope
out
repz
rolb
repz
cli
mov
repz
ror
ret
sti
jmp
in
loopne
loopne
loop
mov
fadds
lock
icebp
xchg
cmp
clc
xlat
idiv
int
cmp
test
fstp
ret
clc
jmp
ror
in
cmp
jmp
leave
divl
aas
stc
xor
ds
mov
rcll
icebp
xor
cli
cmp
cmp
sti
iret
loopne
lret
sti
enter
int
test
jmp
in
jmp
out
loop
aaa
sti
loope
ds
out
shl
call
stc
mov
lock
ljmp
out
enter
cmp
repnz
out
into
fdivp
std
cmp
cmp
cli
shl
in
sub
out
shl
clc
idiv
ljmp
jecxz
fadd
jmp
hlt
mov
enter
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
push
jg
cmpsb
add
iret
test
int
std
cmp
ss
cmp
test
clc
mov
lret
in
fdivp
xor
out
fstpt
cmp
icebp
cmp
xchg
fldl
divl
divl
lock
int
jecxz
loopne
jmp
fcmovnb
enter
lock
idiv
in
cmp
in
hlt
hlt
roll
xchg
mov
std
cli
lea
repnz
ret
ljmp
aad
test
in
idiv
ret
loop
jmp
stc
fmul
jmp
fdivp
lock
out
call
cmp
out
fcomip
in
sti
out
vpaddw
in
repnz
iret
jmp
in
sti
lret
xor
aaa
fcmovnu
lret
aam
roll
in
ljmp
rol
in
icebp
fldlg2
int
std
ds
cmp
sbb
cmp
jecxz
in
xor
out
enter
not
clc
jmp
shl
cli
leave
jmp
shr
cli
int3
mov
mov
xchg
xchg
xor
cli
enter
div
loope
in
adc
in
in
lret
jmp
fdivl
ret
int3
jecxz
shl
sti
into
fidivrs
loope
roll
jmp
pop
sub
cmp
xor
stc
stc
out
into
sti
aad
cmp
std
incb
fimull
sub
in
in
jmp
stc
ss
std
sti
mul
hlt
fisttpll
sbb
ret
int3
ss
cli
repz
repz
xlat
lock
loope
add
cld
in
in
xchg
out
shl
out
icebp
xor
lret
lret
cmpl
cmp
leave
jmp
in
xlat
in
fsub
xchg
and
int
hlt
fnstenv
std
out
loope
xlat
cmp
rcr
cmp
cli
cli
loop
fucomip
mov
sti
xchg
loopne
stc
fldpi
cmp
leave
lock
in
xor
stc
fcmovu
loope
decb
aam
into
call
cli
loopne
not
leave
std
jmp
nop
loopne
sub
loopne
xor
rcl
fdivr
xor
xlat
fucomip
filds
rol
xchg
clc
roll
repnz
enter
jmp
repz
out
addl
out
out
xchg
loopne
in
leave
fpatan
loop
repnz
fstp
lret
fsubrp
cmp
shl
aam
jecxz
sti
dec
mov
in
call
out
std
ds
std
aas
test
loop
cli
out
loope
mov
mov
nop
aad
xor
into
ror
repnz
cmc
clc
cli
ljmp
fsubr
jmp
mov
mov
int3
shl
lock
cmc
int
cmp
aad
cmp
test
inc
mul
fimuls
xchg
divb
jecxz
xor
hlt
in
ror
cmp
cmc
shl
clc
jecxz
mov
mov
stc
out
sti
ror
loopne
aad
lret
fpatan
ljmp
cmp
shl
in
aam
stc
add
lock
ret
aam
xlat
xor
cmp
ffree
fdivr
shr
fsub
aad
enter
addl
xor
cmc
aam
jecxz
test
lret
jecxz
mov
xor
rol
xor
aas
jmp
lret
fidivrl
cmpb
ffreep
notrack
cld
sbb
out
sub
xor
out
sti
jmp
cmp
test
test
incb
int
xchg
ss
cmc
aad
out
aas
std
lock
xlat
repnz
xchg
imul
aas
xchg
fsubrp
ljmp
xor
sti
icebp
cmp
ror
clc
fcmovbe
div
xchg
aad
stc
adcb
shl
xor
rcr
das
rcr
std
shr
loop
add
enter
lea
out
rcl
xor
out
out
cmp
fdivrl
fucomp
ljmp
mov
fists
cmp
sarb
leave
enter
aad
cld
cli
loop
aad
neg
clc
test
call
lret
repz
cmp
fcomp
fsin
sti
icebp
and
mov
mov
int3
ror
jmp
in
cmp
cmp
idiv
in
fcmovu
enter
std
out
ljmp
fcomp
shr
cmp
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
shlb
mov
cmpsb
add
fscale
fsub
xlat
fldl
rcr
ljmp
lock
shr
fcomp
add
jmp
enter
test
roll
jmp
iret
repnz
cmc
leave
in
rcr
loopne
fsub
imul
xlat
notl
xchg
out
xlat
call
idiv
into
icebp
jmp
aam
cmc
ret
xchg
fimull
or
in
das
into
ret
enter
aaa
lock
fcmovnu
rcr
ljmp
addl
repnz
jecxz
fucom
jecxz
test
jecxz
ds
out
fsubr
loop
repnz
fcmove
cld
cmp
jmp
cmp
sar
stc
clc
ds
xchg
loope
jmp
sbb
shl
sti
shr
in
sti
rcr
in
and
repnz
addb
iret
lret
repnz
rol
into
fcomp
cmp
shr
int
ret
stc
std
leave
in
jmp
int3
xchg
xchg
cmc
lret
rol
in
stc
out
cmp
aam
cmp
fnstsw
add
in
in
lock
xchg
xorb
stc
shlb
fcmovu
lock
shl
mov
fmuls
test
out
enter
hlt
xor
sarl
cmp
inc
in
adc
fxam
fld
in
xchg
std
in
int3
sub
not
stc
lds
cmp
cmp
fcmove
fldl
lds
icebp
loop
adcb
xor
iret
rcr
aam
repnz
clc
repnz
jmp
idiv
fchs
out
mov
test
aam
std
aam
xlat
stc
stc
int3
fnstcw
repz
loop
fabs
in
loop
out
cld
loope
jmp
leave
fucomi
hlt
std
out
cmp
ffree
aas
enter
out
jecxz
in
xchg
nop
out
fsubp
jmp
shl
jmp
aad
xlat
cmp
in
fstp
test
aaa
into
aad
shr
fdivl
aam
into
int
std
ss
clc
jecxz
aam
out
ljmp
xor
fstp
fidivrs
ds
sti
addb
sbb
in
out
orb
repnz
out
int
cmp
loope
hlt
fmuls
ret
out
out
lret
cmp
dec
loopne
xlat
int3
xor
xlat
ds
fdivr
cli
out
xchg
loop
dec
in
stc
enter
into
fsubp
int3
repnz
sti
shl
jmp
cli
and
loope
icebp
sub
lret
int
call
aad
jecxz
xchg
xlat
jecxz
jecxz
idiv
out
mov
enter
in
lock
xor
ljmp
out
loop
and
test
mov
mov
lret
out
int
fcmovnu
in
cmp
out
aam
in
test
clc
stc
fsubp
mov
into
in
fnsetpm(287
repnz
hlt
iret
jmp
hlt
cmp
sti
ret
fcomi
out
imul
xchg
cli
mov
rol
ror
out
int
in
ror
sti
cli
cmp
ret
mul
ret
hlt
out
out
jmp
in
in
lret
lock
cmp
fst
iret
clc
ffree
cmp
xchg
fadd
cs
ret
out
leave
std
jmp
loopne
shl
sti
in
rolb
out
sub
aaa
cmp
test
leave
loopne
aas
hlt
xchg
fdivr
movb
mov
ret
imul
cmp
rcr
aaa
ljmp
xlat
shl
fst
sbb
fildl
xorb
cs
clc
cmp
cli
int3
out
sarl
cmp
aad
cmp
cmc
cli
ret
icebp
lock
cmc
into
ljmp
lret
std
cmc
fcmovnbe
cmp
ret
fcomp
in
popl
shr
jmp
repz
icebp
xlat
fiadds
fmuls
out
decb
xor
repnz
cmp
lret
shl
ret
idiv
out
aam
ret
div
dec
test
xchg
in
shr
ljmp
cmp
rcl
shl
xor
out
fldl
rcr
lret
in
in
ljmp
cmp
aam
ret
rorb
int
test
leave
cmp
enter
neg
fdivp
sub
aad
enter
jmp
mov
int
mov
add
push
jg
cmpsb
add
ret
mov
mov
shl
ljmp
xor
aaa
aam
cmp
repnz
in
in
out
vpsubq
jecxz
xchg
in
xlat
cmc
xor
out
fcmovnu
xor
fcmovbe
ds
loop
inc
mov
cld
cld
fcmove
int3
int
out
loopne
ljmp
xor
cmp
test
aam
cli
inc
sub
cmc
xchg
lret
aaa
aaa
fcmovbe
in
std
leave
rcl
fpatan
or
aas
cmp
out
xchg
fsubp
in
bnd
aam
out
out
aam
sti
lret
int3
out
aad
repz
enter
out
int3
stc
ret
out
ljmp
shlb
std
int
rol
jmp
int3
test
icebp
call
repnz
in
sti
rcr
int
cmp
xor
jecxz
jmp
aas
lret
roll
loopne
das
in
lret
call
repnz
mov
fxch
cmc
int
jmp
sbb
int
in
int
sti
ss
jecxz
inc
hlt
in
ret
imul
iret
fdivr
icebp
fimuls
shr
idiv
int
cmc
stc
ret
cmp
les
into
lock
mov
xchg
rcl
leave
cmc
icebp
std
fdivrp
call
shl
jmp
xlat
fsub
orb
lret
in
enter
cmp
iret
out
repz
clc
sti
cld
std
cld
clc
loop
addb
into
call
call
icebp
fdivrp
fcomp
icebp
addb
lret
out
in
sub
ljmp
iret
fsubrp
cli
ret
sti
jmp
decl
mov
call
aaa
ljmp
repnz
ds
cmp
jmp
sti
fadd
in
mov
loop
repz
fcomi
fcmovnu
cli
call
lret
cld
aad
fiaddl
mov
icebp
mov
imul
not
icebp
icebp
repz
aas
aas
test
xchg
fst
call
int
xchg
xor
stc
in
in
into
cmp
repnz
rolb
cli
les
xchg
aam
repz
hlt
int3
jmp
loopne
fcmovbe
add
out
aad
aad
addl
in
in
sub
rol
divl
aas
mul
cld
cmp
flds
rorl
into
jecxz
cmp
int3
cmp
xor
repnz
add
hlt
xchg
idiv
int
xchg
int3
out
lret
aam
shl
test
out
fsubr
jecxz
icebp
test
ds
xor
sti
mul
stc
enter
shr
divl
ljmp
neg
in
cli
les
repz
xbegin
lock
lret
aas
out
rol
shl
in
xor
loope
roll
sbb
mov
xchg
out
sub
enter
cmc
iret
sar
aam
out
fcomp
hlt
std
fsubr
test
xchg
int3
in
div
cmc
ret
clc
out
div
in
idiv
repnz
fcmovb
idiv
jmp
in
fstp
out
icebp
xchg
out
in
iret
fcmove
cld
shl
int3
flds
call
jecxz
lret
into
call
in
aad
test
call
xor
ret
into
ffreep
aad
cmp
addl
sub
cmc
out
ss
jmp
xlat
ret
add
vpsadbw
stc
loopne
xchg
xor
jmp
fcomip
lock
aam
loope
jmp
sti
mov
ljmp
in
lret
lret
out
cmp
ret
cli
in
loopne
jmp
int3
xchg
cmc
lret
ret
iret
hlt
int3
fdivrp
cmp
int
fiadds
addb
out
xor
out
shr
rcr
shr
sar
jecxz
repz
out
in
nop
lock
shrb
loopne
rol
das
call
shlb
rcr
repz
fildl
out
xlat
iret
cmp
fxch
ror
ds
cmp
cmc
loope
out
aad
in
hlt
cmp
repnz
fst
icebp
xchg
rolb
xchg
in
mov
in
iret
ret
aam
stc
ljmp
cmc
test
ret
jmp
int3
lea
ret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
call
lret
cmp
ljmp
jecxz,pt
out
xlat
mov
in
dec
fcoml
lret
aaa
xor
jmp
cld
not
rcr
lock
cmp
mov
icebp
lret
jmp
in
shl
sti
ljmp
fcmovne
cmp
loope
testb
mov
loopne
divl
shlb
cld
out
aaa
repnz
roll
fsub
cmp
out
cld
icebp
into
test
xor
ret
out
sti
leave
int3
fmulp
cmp
aad
mov
fisttpl
les
xchg
hlt
icebp
rcl
cmp
jmp
rcr
in
fucom
sti
rcr
adc
int
jecxz
xchg
fstl
cmp
sti
call
xlat
incb
sbb
mov
jecxz
ffreep
xor
aad
fcomi
fnstcw
fidivrs
stc
fcmovb
mov
leave
iret
or
sarl
repz
repz
cmp
fdecstp
sbb
shl
xchg
fstp
jecxz
cld
std
cld
icebp
out
ror
repnz
aas
into
aam
aad
ret
fucom
mov
ljmp
enter
into
fmul
stc
std
xor
lock
fadd
out
cld
loope
mov
test
xor
ret
out
lret
cmp
add
out
cld
mov
movl
repz
shll
lret
cld
lock
in
rcl
sbb
in
int3
rcr
fcmovnb
cmc
mov
aaa
cmc
shr
out
xor
cmp
cmp
aas
sti
jecxz
mov
xchg
out
cmc
orl
out
out
int3
cmp
xor
sti
flds
testb
mov
mov
out
cmp
aad
aad
add
cmc
cld
fadd
jecxz
repz
repz
lds
idivb
std
stc
cld
out
stc
rcl
sub
test
jecxz
call
xchg
sub
hlt
lret
sar
cmp
repz
rol
neg
test
mov
mov
int3
divl
jmp
cmc
int3
stc
call
fldl
xchg
stc
addb
xor
fldcw
ljmp
aaa
sar
out
jmp
mov
loope
in
in
out
imull
out
repnz
out
shl
rcl
test
ds
fcmovnu
test
leave
cli
std
jmp
loopne
mov
loop
shll
ss
int
enter
ds
loop
fcomip
enter
sub
mov
ret
leave
ljmp
cmp
xor
test
aad
repnz
sbb
sti
flds
lock
enter
sti
cmp
std
cmp
ds
xor
shl
fdivrp
enter
jmp
sub
lock
aaa
aas
aad
cmp
lock
std
test
xchg
aam
fucomi
xlat
das
in
fucomi
lret
sti
iret
fsincos
fisttpll
mov
cld
loope
ljmp
ret
lret
in
shl
aam
fcomip
leave
in
ffreep
in
sub
loop
rcr
int3
cmp
repnz
loop
clc
in
repz
repnz
in
out
lock
xor
loop
in
rcl
sub
stc
testb
fdiv
addl
int3
lret
rcl
ljmp
fxtract
testb
out
xabort
in
jmp
in
decb
fdivr
cmc
in
fcmovb
cmp
testb
in
out
fiaddl
xor
out
in
jecxz
in
fcomi
aas
rolb
lds
or
int3
sub
adcb
xor
sti
into
jmp
sbb
aam
filds
jmp
out
fsub
iret
in
decl
int
cmp
jmp
cmp
jmp
rol
fsub
xchg
mov
hlt
std
in
test
rol
hlt
fxch
fldcw
repnz
in
cmp
cld
xor
clc
fdivr
call
out
loop
lret
test
hlt
in
sti
out
out
ljmp
lock
loopne
dec
mov
icebp
out
out
fmulp
int3
enter
hlt
call
xlat
in
test
loopne
loope
ret
out
int3
loop
jecxz
xchg
repz
out
aas
call
push
es
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
pop
lret
cmpsb
pop
jg
cmpsb
add
sti
in
rcr
add
sbb
clc
sub
mov
int
xor
rcl
ss
shr
fidivrl
fcmovu
cli
test
out
leave
xchg
enter
cld
fdivrp
out
jecxz
in
fcomi
aad
std
into
leave
sarl
loop
ss
ror
sar
xchg
enter
repz
lret
icebp
xor
div
fsubr
int3
test
fninit
lret
sar
in
into
in
aad
leave
xor
std
ljmp
loope
clc
mul
out
loopne
into
in
xchg
in
imul
in
aam
xor
aam
xorl
adc
fsub
mov
xchg
out
ret
in
iret
cli
cmp
in
jmp
iret
xlat
repz
movb
ror
sub
out
cld
imul
enter
aas
cmp
fcmovnu
std
jmp
sar
cmp
xchg
loope
loope
loop
cmp
shl
fcmovu
loopne
fadd
test
mov
clc
ret
mov
shr
sti
xor
xor
jmp
out
iret
shl
xor
orl
xchg
loop
xor
hlt
shr
cli
fdiv
jmp
cmp
xchg
and
dec
decl
lret
shl
aad
xor
aad
addb
mov
xlat
rcr
test
mov
jecxz
std
xchg
repnz
ret
repz
loop
repz
stc
cmp
int
cmc
rol
out
idiv
cmp
rcr
out
ret
cmp
repz
in
sarb
lret
in
idivl
aam
fcomp
fcomi
in
in
fsubr
xchg
repz
shl
fnclex
out
in
xor
leave
fcomi
icebp
xlat
test
not
test
fdiv
hlt
lret
into
mov
lret
out
shr
xor
sti
cmp
in
xlat
fsub
sbb
aam
call
enter
std
into
mov
ror
fnstenv
ror
xlat
aaa
out
fcmovbe
into
aam
jmp
out
test
cmc
test
lret
in
loopne
iret
mov
lock
in
in
cmc
repnz
std
ret
int3
mov
jecxz
aas
ds
aaa
lret
cmc
cmp
adc
sbb
shl
fldl
enter
xchg
into
iret
hlt
shr
not
xlat
jmp
lock
ret
loop
cli
cmp
test
mov
std
adc
lret
in
cmp
fldpi
iret
aam
clc
test
aas
loope
iret
fucomp
cld
lret
xchg
rol
out
iret
sar
cmp
lret
cli
cmp
out
icebp
testl
xchg
call
jmp
repz
repz
cmp
out
stc
enter
ljmp
in
xchg
call
xlat
test
clc
sarl
in
add
fsubp
ljmp
icebp
xor
jmp
ret
idiv
sti
ffree
call
sti
into
xchg
in
sti
in
aam
sti
mov
aam
out
cmp
xlat
int3
out
clc
fsubrp
cmp
in
fld
shl
fucomip
lret
test
int
mul
imul
out
mul
ss
cmp
xlat
cmc
cld
fdecstp
xchg
mov
cld
in
loop
jecxz
out
ss
fdiv
repz
dec
shr
cmp
jmp
sbb
in
loopne
int3
loope
xor
iret
cmc
int3
std
sti
fidivs
loopne
addb
loopne
in
call
call
xor
repz
cli
aam
flds
xlat
stc
imul
stc
leave
mov
in
leave
int3
out
lret
sti
iret
icebp
rcl
leave
clc
rcr
clc
aas
iret
hlt
vpslld
int3
mov
ljmp
fcmovne
cmp
loope
cmp
into
int3
iret
aam
testl
in
rol
leave
loop
in
out
out
into
cmp
imul
in
rcl
aam
sbb
xlat
call
in
int3
lock
shr
into
xor
int
aad
lret
jecxz
in
sarl
loope
loop
int3
out
cli
in
ror
lret
lock
aaa
mov
xor
ds
icebp
cld
jecxz
mov
in
xchg
in
xchg
jmp
enter
test
out
iret
repnz
sti
sarb
rorb
jecxz
and
in
sub
into
int
cmp
clc
idivb
cmp
hlt
aad
xchg
ret
lret
test
out
lret
in
ljmp
lret
in
xor
ret
test
clc
clc
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
pusha
jg
cmpsb
add
inc
int3
jmp
fldl
cmc
loop
in
aam
aaa
in
cmp
fiaddl
cld
decl
loope
leave
icebp
xor
clc
hlt
std
icebp
cmpb
aam
xchg
mov
sar
ficoml
hlt
clc
in
ds
into
int
std
fcmovb
loope
stc
out
xchg
out
ficoms
leave
loop
cmp
neg
loopne
adc
std
in
fcmovnu
mov
cmc
lock
ret
sti
ss
cmp
aas
cmc
loopne
fst
repnz
aad
lret
imul
in
mov
mov
xchg
movl
idivb
cmc
cmc
rol
in
lock
fninit
in
jecxz
into
rcl
in
dec
in
in
xor
xor
cmp
lock
into
call
fistpll
lds
cld
in
and
loop
shr
cld
cld
push
lret
into
std
shl
clc
in
sti
loopne
in
ret
ljmp
lock
lock
testb
loope
and
in
xchg
out
out
xor
out
cmp
cmp
sbb
cmpl
jmp
fstp
int
sbb
loop
fprem1
cmp
cmp
cmp
test
addb
fcoml
ds
jecxz
iret
sti
sti
fdivrp
lock
hlt
fsub
cli
fxch
idiv
mul
orl
fxtract
shr
leave
xor
fucomip
fnstsw
loope
cmp
decb
mov
leave
aad
ljmp
loop
shl
loope
jecxz
lret
loop
mov
shl
loop
xor
clc
enter
cmp
fnstsw
cmp
ds
test
fsub
mov
out
in
jmp
ror
cmc
mov
ljmp
loopne
test
sti
in
int3
int
call
out
ret
int
fistpll
lret
shl
jmp
call
leave
mov
popl
ror
xor
repz
fadd
cli
ds
cmpb
loop
lret
and
cs
out
hlt
leave
cmp
std
xor
stc
cld
fdivrl
xchg
into
in
leave
int3
decl
out
iret
lret
out
cmc
dec
aam
cmp
rol
mov
sbb
nop
mov
fcmovnb
call
lret
fadd
ret
add
enter
repz
ljmp
xor
call
lret
sti
ret
cli
in
fcmovu
jmp
or
lock
in
loopne
repz
iret
lret
ret
ret
in
rcl
adc
ret
shl
xor
rcr
ret
out
incb
cmp
les
sbb
lret
ljmp
cmp
ffreep
lock
not
fcmovb
fsub
cli
loop
mov
fdiv
repnz
xor
hlt
aam
lret
aaa
iret
cmp
filds
ljmp
icebp
in
les
in
clc
leave
hlt
iret
out
loopne
in
cld
sbb
jecxz
fldl
xchg
mov
int3
fsubrs
shr
in
std
clc
sarb
stc
repnz
cmp
testb
rorb
xlat
in
in
lret
fsubr
fdivp
ljmp
fdiv
mov
test
mov
aad
jmp
fnstsw
in
ret
fsub
sti
xchg
sti
xchg
nop
jecxz
out
cs
ret
hlt
sarb
test
icebp
fdivrp
xchg
fstp
jecxz
jmp
adc
int
xor
test
hlt
repnz
stc
ds
fstp
inc
fisttps
int3
orb
jmp
jmp
std
clc
xor
incb
testb
xchg
xor
loopne
jmp
fidivl
lret
lret
fsubr
cli
rcl
mov
fdivrs
int
nop
xchg
loop
in
mul
aaa
lock
out
fadd
rcl
repz
decb
sti
loopne
out
shl
fsubp
xor
xor
xor
fcomip
cmpb
ret
lret
int
dec
cld
lea
divl
cmc
fdivr
out
lret
fst
ret
xchg
shl
test
mov
lret
into
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
add
jg
cmpsb
add
int3
lret
xor
into
lret
repz
call
sbb
loop
mov
addl
out
hlt
repnz
aad
cli
cmp
repz
sti
ror
add
xor
mov
lret
test
lret
rcl
divl
in
aam
fcmovu
std
cmp
cmp
ret
std
and
out
sti
std
clc
fcoml
neg
in
ror
int
enter
ror
sti
fstp
rcl
in
in
fsubr
out
xchg
lret
lock
in
fnstsw
ljmp
roll
mov
cld
test
lock
lock
hlt
out
repz
ds
out
adc
rol
cld
int
in
fucomi
test
in
out
xor
in
iret
hlt
clc
jmp
out
cli
std
into
xlat
loopne
shl
fcmovnu
mov
int
in
lea
hlt
lret
aam
xor
sar
sarb
test
ret
test
test
xor
lret
stc
idiv
jecxz
aas
xchg
jmp
fxch
in
nop
test
icebp
out
fmul
icebp
repz
in
sar
sar
out
out
jecxz
cld
out
test
jmp
jecxz
aam
in
ljmp
cli
xchg
jmp
aad
int3
out
mov
repnz
int3
loope
shl
fcmovne
out
fucomi
repnz
orb
mov
cmp
out
out
ret
leave
ret
icebp
xor
sti
in
jmp
jecxz
loopne
jmp
call
out
adc
hlt
leave
int
ror
ljmp
cmp
rcr
fst
rorl
jmp
xchg
xlat
cmp
aad
cmp
xor
icebp
aas
fcmovnbe
icebp
test
xchg
fdivp
test
xor
enter
cmp
shr
loopne
ds
aas
clc
rorb
mov
fcomip
test
cs
into
cli
cmp
fstpt
addl
mov
cmp
xchg
add
jecxz
sar
fdivl
ljmp
cmp
incb
lret
mov
in
das
rcr
fcomip
lds
lea
lret
cld
icebp
test
cmc
sti
iret
into
icebp
cmp
aas
loope
add
aad
fincstp
jmp
fcmovu
sti
out
lret
shr
lret
in
call
enter
hlt
lret
fcmove
fsub
out
out
into
adcl
xlat
clc
lret
into
rcl
lock
into
out
fdivrl
movl
test
ljmp
jecxz
idivb
aad
stc
aaa
int3
fadds
incl
mov
shl
rolb
xor
repnz
in
jmp
jmp
out
sti
sar
out
fdivr
lret
mov
lret
sti
iret
in
ror
mov
ds
std
enter
rcr
filds
shl
hlt
fmul
call
fmull
lret
icebp
in
neg
rol
rol
fst
jmp
fadd
sar
and
loope
cmp
into
cmp
stc
clc
xor
jmp
jecxz
loop
repnz
call
aaa
aaa
cli
fsubr
ret
sti
repnz
loope
jmp
mov
out
jmp
icebp
cli
repnz
hlt
clc
out
loope
loopne
in
jmp
loop
repz
in
hlt
out
lret
div
stc
in
ljmp
rcr
call
fsubr
out
int
ret
leave
cmp
hlt
hlt
imul
xlat
loope
ljmp
jmp
xchg
repnz
sub
shrb
cmp
cs
cmp
rol
cmp
loop
sbb
loope
std
mov
out
into
mul
into
aaa
lret
jmp
xlat
cmc
xor
aam
aas
loop
xchg
enter
leave
cli
icebp
into
hlt
shl
fnstenv
repz
cmp
rcl
leave
lret
jmp
in
test
xlat
ret
into
in
enter
lret
fyl2x
lock
loopne
jmp
int
iret
lock
lea
icebp
int
cmp
fidivs
not
rol
lock
fadd
repnz
jecxz
test
addl
cmp
ljmp
in
fdiv
orl
fisttps
jmp
cs
out
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
cmp
stc
fcmovnb
rol
vpsadbw
ret
lret
std
lock
shl
iret
repnz
fcomp
imul
out
cmp
ljmp
enter
pop
std
xchg
enter
aas
in
rcl
int3
iret
out
ror
test
rcl
cmc
lret
fdivr
ret
fsubp
fists
fnstenv
in
cmc
out
fcmovu
shr
int
ror
xchg
loopne
sbb
clc
repz
xchg
call
call
sti
repz
cld
stc
rorl
loope
lret
xchg
repz
shl
in
xor
cmc
jmp
fdivr
loope
test
fxch
fisttpll
loopne
int3
ljmp
cmp
ror
repz
aam
fdiv
stc
out
out
int
out
jecxz
fst
in
ljmp
xor
adc
out
adc
shl
fsub
faddp
jecxz
orb
int
repnz
mul
hlt
enter
cmp
xchg
hlt
fcmovnu
enter
jecxz
in
loope
aaa
leave
shr
fcmove
cmp
aad
call
dec
mov
fsubrp
fimuls
ror
fstpt
repz
shr
aas
lock
xlat
cli
cmc
aas
int3
xchg
mov
in
loop
ljmp
xlat
into
repz
rcr
test
sti
out
incl
cli
test
test
int3
xchg
repz
shlb
iret
les
jmp
shl
fidivrs
sti
add
fsts
loopne
jmp
into
loopne
xor
inc
shr
clc
cmp
fildl
addl
std
shl
lock
loop
rcl
xlat
iret
leave
clc
frndint
loopne
ds
fimuls
std
sbb
kmovw
das
xor
jmp
ds
cld
rolb
in
loopne
fldl
out
xor
jmp
lock
loop
or
ret
shl
out
fisttps
call
loope
aaa
cmc
hlt
aad
lret
neg
ret
cmp
cmp
idivb
call
in
mov
loopne
in
ljmp
out
cmp
aad
ret
xlat
loop
in
rcll
sub
out
ret
das
out
xor
stc
clc
repz
ret
in
call
add
xor
int
aad
fnstsw
jecxz
cld
incb
lret
and
popl
out
ret
enter
out
sarb
in
fsubp
cmp
cli
test
in
cli
in
jecxz
out
xor
call
into
xor
fldl2e
into
shl
cmp
out
mov
loopne
mov
repz
loop
int
xlat
in
push
addl
mov
jmp
xor
lret
cmp
lret
into
test
into
xbegin
std
fisttps
repz
fucom
rcl
sti
loopne
cmp
into
xchg
addl
cld
shl
mov
ret
jmp
iret
cmp
loopne
and
rol
aam
enter
cld
xchg
std
fsub
or
stc
das
sarl
clc
call
aad
fstp
sbb
lock
repnz
in
cmc
in
xor
aam
fistpll
int
icebp
idiv
rorl
cli
lret
icebp
repnz
mov
ror
test
enter
fdiv
in
test
out
fsub
test
xor
lock
fdivrs
enter
fcmove
ds
ret
leave
stc
cmc
jmp
fcmovu
cli
iret
xchg
loop
lret
xor
std
cli
in
repz
fdivrp
cmp
loope
aam
ret
test
int
addb
fxch
cmp
std
xlat
sti
enter
loop
xchg
fdivr
hlt
ret
enter
call
int
aaa
cli
lret
lret
ss
stc
cmc
fistpll
cmp
fdivr
fucomi
in
clc
rorl
sub
enter
aaa
jmp
cmp
rolb
stc
int
jecxz
xchg
fdivrp
xchg
out
aam
lret
cmp
cmp
cli
shl
loop
in
mov
out
mov
in
shl
in
aad
enter
out
fucomip
repnz
std
adc
fcomip
in
jmp
iret
mov
shrb
cmp
cld
xlat
out
into
aam
fstpt
jmp
int
ret
fcmovu
add
dec
xchg
and
in
outsb
jg
cmpsb
add
hlt
lret
and
addl
into
stc
in
enter
aad
loopne
cmp
call
xlat
idiv
aam
lock
ljmp
ret
fcmovnu
cmp
sti
out
rcl
shl
xchg
shl
out
icebp
xlat
xor
in
out
cmp
cmp
jecxz
roll
mov
into
std
or
xor
xor
divb
fstp
stc
enter
clc
xchg
shl
fsubr
lret
jmp
cld
mov
shl
out
int3
in
int
xlat
lret
jecxz
test
mov
int3
xchg
mov
in
lock
aam
call
dec
fucomi
loop,pt
clc
fcmovu
out
int3
icebp
loopne
mov
loopne
sar
stc
lret
lock
cmp
loopne
out
test
mov
loope
int3
fucomp
cli
sbb
enter
repz
in
int3
out
int3
call
cli
test
fmul
lret
std
in
icebp
int3
adcb
icebp
shll
cmc
ljmp
cmc
mul
cmp
loop
into
loop
ljmp
xlat
jmp
cli
stc
repnz
xchg
or
xchg
jmp
aas
fidivs
cmp
test
ror
clc
clc
stc
std
hlt
std
call
leave
jmp
loope
mov
lock
das
in
xor
cmp
cld
repz
lock
and
mov
into
shl
loope
ss
cmp
fcom
cmp
lret
testb
stc
sti
fisttps
test
fldpi
dec
div
cmp
xlat
lds
fsub
mov
in
int
imul
clc
loop
std
aad
enter
repz
clc
mov
out
in
test
xchg
xor
int3
into
fnsave
enter
xlat
int3
hlt
in
cmp
enter
or
xrelease
ss
fcmovu
adc
xlat
hlt
aas
cmpb
les
lret
icebp
cmc
loop
jmp
cli
stc
fcomip
faddl
xchg
enter
lock
xor
das
stc
shlb
cmpb
cmp
aad
orb
out
test
rcl
aaa
aam
std
fsubr
sarb
out
or
cmp
addl
int
bnd
rol
not
clc
aad
cmp
cmp
xlat
sti
and
addb
inc
vpmacsww
aam
imul
jmp
hlt
in
hlt
in
idiv
fldl
xchg
loope
int
leave
clc
icebp
ss
div
xlat
cmp
sti
loop
xchg
enter
test
in
test
int3
cmc
sar
ss
cmp
std
shl
sbb
cmp
fsubp
fmuls
jmp
xor
leave
sar
sar
loope
flds
in
hlt
addb
xor
shrb
jecxz
xor
hlt
cmp
cmp
xor
xlat
repnz
ror
mov
jmp
jecxz
mov
jecxz
aad
repz
xor
hlt
xlat
stc
inc
int3
out
call
cli
jecxz
out
fstp
loopne
mov
iret
xor
fcmovnbe
fnstsw
lret
hlt
fcmovnbe
fsub
test
ret
enter
clc
jecxz
ror
call
xor
sarb
std
repz
fcomi
fldl
mov
fdivrp
cld
iret
in
loope
idiv
into
xor
imul
jecxz
ds
lock
jmp
in
and
shr
into
repnz
fcmovnb
repz
aam
fcmovnu
aas
neg
test
into
repnz
xchg
clc
lock
out
aam
out
xor
xor
jmp
fprem1
lret
iret
fstp
in
hlt
aad
out
xchg
int
in
in
out
fxch
repz
aaa
cmp
cmc
and
or
mul
enter
in
vaddsubpd
xabort
repz
loop
fldl
addl
mov
cmc
into
int
iret
in
rcl
out
mul
xor
iret
test
and
repnz
fcmovnb
fcomip
fsubr
xchg
lret
repnz
out
std
in
out
loopne
fadd
cmp
add
loop
mov
in
aam
jmp
inc
aad
stc
loop
aam
fmuls
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
adc
jg
cmpsb
add
repnz
mov
lock
fcmovnu
not
xlat
ljmp
clc
ret
fsub
in
lret
addl
aaa
xor
aam
xlat
cmp
fnstenv
sti
lret
iret
addb
aas
leave
in
fyl2x
cli
cmc
loop
xlat
sub
clc
out
shr
cmp
aam
idivl
shl
rcr
repz
xlat
mul
cli
out
lret
int3
iret
in
xor
idiv
out
sti
icebp
ror
out
shr
jecxz,pt
test
imul
idivb
out
in
out
ror
in
aad
cs
cmp
lock
aad
sub
addb
mov
xchg
ljmp
repnz
int
lock
xor
addl
filds
stc
hlt
shlb
ds
shr
ret
in
in
fdivr
in
in
call
loop
cmc
in
stc
shl
std
enter
loopne
idiv
neg
imul
mov
sti
mov
jmp
enter
repz
out
cmc
ret
not
cmc
cmp
test
ror
lret
orb
out
xor
fxch
call
shr
xlat
in
out
iret
fisttpl
shlb
call
aad
cmp
cli
clc
cmc
loop
cld
aas
loopne
in
jmp
out
std
shl
nop
repz
leave
enter
in
lret
lret
repnz
repz
call
call
call
repnz
aam
xor
xor
mul
loop
cmp
std
out
ljmp
nop
test
rcl
into
out
out
fndisi(8087
lret
hlt
out
shl
out
aam
mov
mov
stc
jecxz
aaa
ss
rcr
enter
lret
out
lock
cld
ds
jecxz
xchg
in
leave
lock
aad
int
rcr
fstp
loop
in
test
out
fists
mov
lock
fstp
ljmp
and
hlt
repz
in
int
fdivr
std
shr
jecxz
xor
icebp
in
out
int3
jmp
fadd
cmp
cmp
int3
mov
clc
fmul
xchg
lock
fnstenv
repz
out
cmp
ljmp
aam
fsub
ret
mov
faddl
ljmp
out
ss
cld
cli
test
out
fcomi
leave
repz
mov
jmp
mov
in
in
shll
leave
cmc
in
out
lret
cmc
fiaddl
leave
hlt
xchg
cmp
fcmovnb
popl
xor
xor
ljmp
fabs
rcr
fsubr
fadd
sbb
iret
aad
lret
loop
stc
leave
ljmp
or
clc
in
lock
int
in
int3
out
jmp
xlat
jmp
shl
xchg
jecxz
cmp
ffree
decl
test
in
fucomi
cmp
icebp
lret
lock
ret
out
xabort
fcmovnu
sti
xchg
in
jecxz
xchg
mov
shl
lret
xlat
cmp
into
ror
in
cmp
aas
fdivrs
call
aam
fcmovne
loope
sbb
jmp
lock
out
ljmp
sti
loop
rcl
clc
jmp
xchg
ret
sub
xor
cld
fsubrp
pushl
loopne
cmp
jmp
cmc
mov
fucomi
test
lret
xor
fbstp
stc
iret
aam
lock
out
mov
test
jecxz
sub
lock
cmp
xor
div
aas
stc
cld
sarl
enter
fsubrp
popl
mov
in
lret
jmp
cmp
cmp
fxch
icebp
fnstcw
incl
jmp
in
cli
clc
nop
mov
and
aas
shr
out
int3
stc
repnz
repnz
cmc
aas
iret
rcr
cmp
test
int3
repz
call
out
int3
xlat
int
in
jmp
out
jecxz
fsubp
jmp
lock
shlb
shr
in
cli
std
aaa
shr
int3
rol
loop
rolb
lret
in
in
out
fcomip
loope
hlt
fprem1
cli
cmp
ljmp
in
loop
sbb
xchg
mov
nop
in
in
xor
fucompp
cmp
rolb
shl
orl
neg
in
sarl
icebp
xor
ss
fprem1
loop
cmp
int
and
xchg
out
test
call
test
decl
add
mov
add
add
rcl
rcl
aad
xchg
mov
in
pop
and
mov
add
int3
ljmp
rol
cmp
int3
fcmove
fists
shl
idiv
fdivr
cmc
fstpt
stc
neg
fsub
cmc
cmp
inc
lret
out
fmul
repnz
xlat
in
in
int3
out
ss
repnz
into
into
fxtract
out
fcom
cli
ljmp
ret
ret
xlat
fdivr
jmp
sti
incb
cli
mov
leave
test
loope
ljmp
call
jmp
int3
cmp
std
xlat
cli
call
clc
loop
shl
rcl
leave
in
repz
call
hlt
jmp
in
repz
cmc
repnz
repz
roll
jmp
cmp
stc
stc
shll
loopne
cli
ret
inc
sbb
fadds
rolb
out
xor
xor
enter
into
fmulp
aam
lds
repnz
loop
rcll
fmulp
repnz
ror
clc
in
aaa
stc
jmp
cmp
ret
xor
jecxz
fcmovnu
loop
sub
mov
int
shll
repnz
test
fst
std
cmp
fcmovu
aas
fsubp
in
fmul
call
out
loop
jmp
iret
rcl
cmp
cli
test
sbb
out
fsub
loop
lret
stc
lret
aam
int3
ss
cmc
fst
xor
repnz
lock
movb
fucom
jmp
loop
cmp
hlt
repnz
sti
div
in
ret
xchg
fcmove
mov
shlb
fidivs
stc
jmp
ss
fsubr
fdivrs
ror
ds
sar
leave
shl
in
and
lds
aam
in
cmp
idiv
cmp
fdivrp
cli
aas
out
shl
std
out
xlat
loope
out
xchg
xchg
mov
enter
fcmovbe
hlt
ret
std
test
loope
enter
int
fimull
les
out
rcr
stc
cli
loope
int
fdivr
fcmovb
loopne
ret
into
icebp
iret
in
lret
lret
out
out
fsub
rcr
into
fiadds
out
mov
sar
xchg
fsubr
xlat
aam
out
in
rcr
loope,pt
aad
loopne
sbb
rol
fsubr
int
out
sti
in
test
loopne
xlat
f2xm1
stc
cmp
fincstp
dec
lret
fcmovnbe
cli
out
loopne
mov
mov
cli
call
xor
sarl
lret
hlt
idivb
out
add
in
xchg
sti
test
shl
xlat
stc
out
out
cmp
fdivrl
repnz
test
in
leave
in
fsubr
iret
repz
ss
sti
rcr
fdivp
in
fcom
shl
fucomp
sti
iret
fisttpll
ror
jecxz
int3
repz
aad
jmp
lret
jecxz
fidivrl
std
mov
out
adcb
sub
cmp
cmp
lret
loope
icebp
fadd
shl
testl
lret
ret
sar
repz
cmp
iret
cmp
not
out
loopne
test
decb
in
jecxz
cmp
out
enter
fidivrl
cli
fdivp
repz
jmp
cmp
repz
xor
iret
stc
cmp
in
rolb
cmc
mov
enter
in
loope
lock
shlb
sar
cli
lock
clc
loop
repnz
in
lret
fucomp
enter
xchg
xchg
jmp
in
into
aaa
iret
out
cmp
in
hlt
lret
fnstcw
hlt
faddl
fdivr
orb
xlat
lock
in
out
cld
aam
stc
cmpl
shl
sti
stc
out
xchg
mov
aas
aad
ljmp
int
int3
ret
jecxz
xchg
test
clc
sub
repnz
lret
div
cmp
aad
ljmp
hlt
addl
mov
leave
cmc
call
into
clc
cmp
cmp
aad
ret
jecxz
cld
mov
icebp
cmp
leave
lock
cmp
cmp
rcl
aad
loop
jecxz
orb
fcomp
ror
xchg
out
xor
ss
lret
repnz
ret
repz
ds
leave
hlt
fcmovnbe
fadds
shrb
fcom
in
aam
fsubp
cmp
iret
shl
cld
icebp
std
repz
decb
int3
div
fchs
int3
jmp
in
std
ljmp
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
out
je
jl
jl
add
rolb
int3
loope
xchg
in
out
in
repz
fnsetpm(287
cmp
jmp
push
fstpt
cmp
fldl
mov
sti
in
fsubrp
rcl
aam
shr
leave
cli
std
aad
aas
call
out
xlat
aam
loope
iret
in
int
jmp
aad
loopne
ss
repz
std
stc
out
cli
loope
in
and
xchg
ficoml
vpmulhw
shl
repnz
lret
cld
int3
rolb
adc
mov
xor
xor
into
fidivrl
cli
rcr
sar
hlt
shr
aam
hlt
int3
mov
in
filds
das
lret
ret
fcomi
lret
in
cmc
aaa
sti
fdivr
xor
clc
mul
out
lret
test
out
test
icebp
jecxz
sti
cmp
in
ss
cmp
lock
ss
rcr
xlat
mov
mov
out
icebp
lret
into
icebp
neg
out
aam
fcmovbe
mul
stc
out
jmp
lret
cli
jmp
repnz
hlt
shl
fnsave
aad
cli
icebp
in
addl
fisttpll
mov
hlt
test
xor
aad
repz
repz
rcr
in
jmp
int
mov
into
repz
sub
out
out
shlb
ds
cli
out
aad
test
loop
fxam
in
mov
icebp
cld
mov
fcmovne
cmp
fst
aaa
in
int3
loop,pt
not
ret
enter
in
mov
int3
imull
loope
stc
shl
iret
xchg
cli
cmc
mov
fmuls
loopne
test
repnz
jmp
in
repnz
clc
loopne
repz
cli
xor
mov
test
flds
aad
jmp
int3
sti
aaa
cld
out
cmp
sar
lret
cmp
aad
out
fildl
fmuls
jmp
in
ljmp
lret
int3
repz
test
lret
fsubrp
cmp
mov
int
xor
xor
std
hlt
jmp
fsub
lds
decl
cmc
xchg
jecxz
xor
repz
lock
aad
idivl
loop
test
iret
cmp
mov
mov
and
lret
cli
int
mov
shl
leave
stc
xor
repnz
faddl
lret
test
loope
fdiv
shl
loop
shr
shl
int3
jmp
into
call
shl
test
shl
leave
call
and
mov
shl
idiv
cli
xor
lock
fcmovu
lock
aam
icebp
out
lock
mov
sti
out
out
in
imul
cmc
xlat
lret
cmp
call
int
aam
vpslld
jmp
cli
test
xchg
nop
std
mov
rcl
int3
out
into
fucomi
addl
addl
leave
mov
xor
ss
repnz
fistpll
fcmovu
xlat
mul
test
sti
test
fninit
fcoml
out
fchs
xor
fcomp
ljmp
ret
cld
lock
stc
cmp
enter
push
xchg
das
loopne
jecxz
rol
cli
lret
cmp
rcr
fstp
enter
out
call
xchg
hlt
xlat
fchs
in
repz
in
call
stc
add
loope
xlat
cld
in
fdiv
fucom
loope
rcr
ffreep
xor
clc
out
clc
fdivp
aam
loop
test
jmp
rorl
sub
hlt
call
aam
rcr
fcmovbe
aad
fimull
test
out
out
xchg
iret
shl
enter
cmp
cmp
shl
test
cmp
cmc
loope
mov
xchg
ror
shr
xor
std
call
lock
loope
test
fiadds
or
sub
adc
lock
xor
clc
fcmovnbe
in
not
repnz
lock
into
neg
loope
in
jmp
clc
cld
test
cld
xchg
jmp
repnz
aam
leave
cmp
xlat
les
fadd
sbb
loop
out
iret
jmp
xor
fnstsw
lock
ret
cmp
lock
sti
mov
stc
fisttpll
xor
sti
xor
cmp
cmp
aad
cmp
aad
jmp
out
mov
fdivr
mov
xor
mov
ror
clc
xor
in
loopne
fdivr
fcomp
in
fldl2t
mov
shr
loope
icebp
idiv
sti
lds
int3
cmp
iret
in
lret
cmp
fdivrs
in
call
int3
mov
out
jmp
shll
enter
shl
std
aam
stc
ret
mov
mov
mov
call
aas
jmp
loop
repnz
int3
out
push
aas
in
idiv
cmp
cld
call
cli
xchg
out
hlt
mov
shl
xor
fst
neg
cmp
in
ror
aas
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rcrb
icebp
ror
add
jge
jl
idiv
sub
cld
movb
jmp
xor
lret
fcomip
shl
cld
fchs
out
fadd
test
mov
fmul
test
out
out
shlb
xor
stc
repz
repnz
test
addb
int
stc
fdivl
sarb
lret
in
cld
loope
add
stc
cli
repz
rol
std
xor
repz
cmc
sarl
aas
rolb
in
fcoml
test
test
icebp
icebp
xor
shl
sti
ss
sar
jecxz
test
mov
in
aaa
sti
out
shl
ror
out
in
imul
xor
mov
mov
mov
fdiv
mov
rcr
enter
loop
icebp
clc
sti
rcl
repz
sti
test
incl
ljmp
ljmp
shl
cmp
rol
aad
mov
les
fucomi
out
out
lock
test
repnz
jmp
ret
fcomp
stc
icebp
fnstsw
jecxz
mov
loop
jmp
fldl
stc
repnz
std
int
cmp
loopne
mov
inc
mov
mov
in
addb
xor
cmp
shl
ljmp
loope
cmp
jmp
int
dec
loope
sub
jmp
lret
fstp
int
div
iret
fdivr
aad
out
mov
in
in
das
repnz
xor
repz
out
shl
std
sti
stc
mov
mov
leave
fxch
iret
lret
or
cld
in
jecxz
sbb
in
mov
cld
xor
in
jmp
cld
in
cld
cmp
cmp
test
neg
hlt
stc
aam
jmp
in
cli
mov
jecxz
fmull
leave
jmp
out
loope
sarb
rcr
sar
not
incb
jecxz
shll
cmp
call
ror
fiadds
leave
cmp
in
call
loop
out
leave
jmp
jmp
aam
loope
mov
ds
fidivrl
cmp
addb
int
lock
rcl
lret
loopne
xor
fst
jmp
stc
out
iret
ret
test
sar
clc
lret
ljmp
ljmp
hlt
idiv
fdivr
jmp
cmp
and
movl
lock
repnz
cmp
ds
clc
stc
sarb
ffree
loop
lret
aas
stc
cli
out
iret
iret
xchg
out
repz
lret
out
lret
rcl
cmp
cli
clc
cmp
clc
test
cli
in
xchg
test
imul
enter
neg
fcomi
lret
shr
aam
test
fsubrp
ret
test
in
ret
iret
out
ret
cmp
std
in
rcr
cmp
repnz
xlat
xlat
mov
fmull
pushl
rcr
fxch
icebp
repz
icebp
sti
into
ret
stc
clc
fucomip
cli
int
xchg
loop
xchg
sar
cs
aad
shr
loopne
cmp
jecxz
cmp
out
in
ret
fucomp
loopne
ret
xor
cmp
loope
std
sti
rcr
cmc
loop
neg
fsubp
leave
in
in
out
cli
test
cmc
stc
cmp
clc
neg
out
hlt
rcl
fsub
xor
test
lock
xor
in
lock
in
fcom
repnz
aas
loope
iret
in
cli
mov
mov
mov
in
jecxz
out
fdiv
hlt
xor
out
repz
sar
jecxz
idiv
aam
idiv
neg
jecxz
div
xbegin
sub
repnz
cmc
into
out
int3
std
cld
shr
clc
incb
test
cld
stc
orl
in
xor
shll
fdiv
cmp
cmp
idiv
xchg
int3
in
lret
iret
ljmp
cld
hlt
aas
xor
ds
fcmovnu
repnz
jmp
call
rol
ss
into
icebp
cld
cmp
loope
sarl
out
fcmove
jecxz
test
mov
rcl
rcl
cmp
out
ljmp
out
rol
fld
loope
int3
into
in
test
into
nop
xor
int3
lret
idivb
cmc
call
sar
cmp
hlt
rcl
fdiv
aam
jmp
in
xchg
in
in
repz
lret
std
ljmp
ret
jecxz
mov
loope
lret
shr
out
loopne
das
in
sub
cmp
xlat
rcl
lock
out
fmulp
aam
loopne
out
in
mov
jmp
out
fcomi
std
hlt
ret
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
repz
jl
add
xlat
in
mov
xlat
sti
lret
out
int3
les
ror
iret
fyl2x
ljmp
ret
sub
movb
jmp
out
rcr
in
aaa
sar
lret
in
ret
std
xor
rol
loop
mov
mov
jecxz
xor
repz
int
call
rolb
decb
cli
jmp
aaa
into
lock
cld
cmp
lret
icebp
adc
sar
addb
jmp
leave
cli
mov
adc
ret
in
into
xor
cmp
jmp
and
leave
in
hlt
lock
call
stc
lret
in
roll
repnz
fdiv
movl
sub
int
repnz
repnz
sar
cld
stc
sti
cld
cmpb
icebp
stc
fimuls
shl
stc
cmp
aaa
into
xlat
xor
call
cld
out
jmp
in
in
out
shl
in
ss
xlat
in
call
hlt
out
loop
incl
enter
nop
xchg
in
ljmp
jmp
rol
inc
ds
aad
mov
mov
jecxz
in
sar
repz
int
into
jecxz,pt
jecxz
cli
test
jecxz
sub
ror
aam
leave
stc
ljmp
std
adc
or
fsubrp
xchg
in
lret
in
xchg
aam
xor
cmp
div
iret
jmp
jecxz
aas
std
std
filds
ror
mov
hlt
sub
hlt
fpatan
aaa
icebp
out
xlat
aas
fsubr
icebp
aas
jmp
mov
loope
and
into
aam
ss
ds
in
fucom
fdivrs
xchg
mov
aad
xor
xor
sarl
lock
lret
cmp
adc
mov
int3
jmp
xor
fldln2
cmp
fnstcw
cmp
neg
in
jmp
mov
test
in
lret
out
lret
ljmp
fucom
std
icebp
iret
mov
faddp
in
idivl
repz
icebp
stc
xlat
lock
sti
rol
out
enter
in
jecxz
cmc
aaa
call
loope
into
xor
cli
les
loopne
cmp
out
addl
fsubr
cmc
std
leave
fstpt
in
fsub
cld
mov
les
lret
in
das
shr
ret
leave
enter
fstp
in
cmc
sbb
in
ret
in
out
cmc
in
in
xor
xlat
xor
cmp
shl
cld
icebp
std
ror
ds
xor
mov
jmp
out
repz
enter
cmp
not
addb
loope
std
fadds
in
out
test
out
ret
cmp
fcomip
sti
iret
xor
fld
xchg
rcl
sti
test
jecxz
in
int3
lret
idivl
int3
lock
sti
jmp
fsubp
aad
fcmovbe
xchg
fcmovnb
mov
orl
int3
clc
aaa
into
fdiv
sbb
xchg
xchg
hlt
jmp
leave
lret
rcl
jmp
xor
iret
xor
xchg
cmp
in
loope
call
out
iret
int3
ret
in
aam
cmp
cmp
imul
out
clc
xor
cli
testb
dec
xorb
sar
in
jmp
hlt
cmp
les
fildl
loopne
fcom
jecxz
jmp
ror
into
out
fptan
jecxz
jecxz
cmp
fcmovbe
out
xchg
xchg
ror
ret
idiv
cmp
cmc
cmp
icebp
sbb
in
xchg
iret
in
icebp
fists
in
out
fcos
cli
shl
repnz
div
stc
jecxz
loop
cld
fsub
mov
int3
hlt
xchg
iret
out
jecxz
lret
std
fidivrl
xor
in
sti
rol
and
mul
out
xchg
mov
sub
xor
jmp
ffreep
sar
in
orl
repnz
rcl
aam
int
jmp
aad
cmc
fcomip
loop
in
mov
call
in
xchg
xchg
jecxz
lret
out
fcmovnu
aad
fnstcw
out
loopne
repz
test
mov
loopne
shl
fsubp
in
out
jmp
hlt
cs
in
aam
cmp
in
idivl
call
cld
jmp
mov
lret
leave
fdiv
in
ss
cmc
cmp
test
aas
xchg
xlat
cld
fistl
xor
in
sar
cmp
repnz
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
lcall
jl
add
repnz
sti
aad
loopne
loope
lds
in
shl
fpatan
out
cmp
jmp
fcmovbe
int
cmp
sar
ljmp
test
add
loopne
fdivr
out
aas
stc
aam
rcl
ret
idiv
fstp
stc
into
jmp
fistpll
ds
les
out
xlat
aad
int
cmp
xor
aad
int
lret
xchg
nop
out
shll
jecxz
int
cli
xor
hlt
cmp
hlt
rolb
ret
orl
cs
jmp
out
test
adc
lds
loop
loopne
test
lret
lret
ss
hlt
cs
fildl
shl
les
call
fsubrp
xchg
lock
repz
cmp
int
cli
test
out
xchg
std
int3
in
divb
enter
std
repnz
cmp
push
iret
loopne
in
mov
xchg
jecxz
ror
fnsave
int3
lret
ljmp
loop
add
fsin
lret
mov
repz
into
xor
cmc
aas
sti
loopne
sbb
lock
add
mov
repz
div
shll
rcl
xor
aam
in
shl
ret
icebp
call
mov
out
xchg
les
not
cmp
in
shl
sti
ljmp
repz
loop
out
enter
out
xchg
cs
ljmp
stc
shl
test
rcr
call
call
hlt
int
ss
jmp
repz
fidivs
jmp
mov
call
test
repz
clc
aaa
xor
aas
cli
int
and
sbb
leave
in
icebp
int
int3
repz
rcl
out
int3
std
aad
out
jmp
or
lock
mov
leave
in
into
int
enter
aaa
fsubr
sti
jmp
adc
clc
clc
mov
cld
icebp
jecxz
in
xlat
iret
aaa
clc
vcvtdq2pd
int
fdivl
loopne
loop
aad
fcomip
mov
in
das
xabort
leave
xor
cli
fcmove
cmc
sar
add
call
stc
ret
xchg
xchg
out
das
int3
out
stc
ljmp
int
icebp
iret
jecxz
stc
xlat
ljmp
cmp
xor
lret
lret
fucomip
jmp
shl
fdivr
int3
cmp
cld
enter
sub
mov
repz
in
xor
repz
call
rcr
cmc
sarl
jmp
loope
shr
xchg
xchg
int
ret
ror
ror
roll
test
shl
incl
shr
fdivp
out
xor
sar
cli
hlt
xor
lret
loopne
cmpl
cld
out
out
mov
fmuls
in
ret
in
lret
hlt
out
int
repz
xlat
cli
stc
mov
sbb
fimull
xor
cmp
rcl
div
hlt
xlat
out
flds
mov
mov
icebp
in
rcl
jmp
fmulp
rcr
sti
fdivp
hlt
std
mov
in
int3
lock
into
das
cmc
fidivrl
aad
sti
out
cmp
cli
clc
int3
aam
repz
fdivp
int
shr
icebp
xchg
jecxz
xor
lret
jmp
loope
sarl
fstp
clc
aam
int3
clc
test
lret
out
lock
in
fnstcw
repz
aad
sarb
loopne
sar
cmc
leave
fsubp
fld
iret
mov
out
mov
cmp
imul
fcomi
in
repnz
fistpll
call
out
test
aam
into
les
hlt
jmp
lret
cmp
ret
sar
ret
neg
cli
lret
out
rcl
hlt
leave
xor
cmp
out
enter
cmp
rcr
out
mov
fucomi
lret
mov
leave
cmp
fcmove
cld
hlt
cmp
cli
ret
loopne
mov
in
test
orl
shl
ret
rcl
xor
in
aam
ret
int
out
addl
cli
sub
xor
xlat
leave
divl
sti
cmp
jmp
shl
lock
in
fsincos
sbb
cmc
xchg
das
xor
jmp
xor
cli
xlat
aas
aas
std
les
fiaddl
cli
ror
div
lret
out
in
test
loope
in
rol
icebp
inc
shl
sub
mov
mov
lock
out
cmp
jecxz
sti
ret
out
std
cli
add
imul
test
fiadds
int3
xor
out
xlat
shr
aas
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
call
adc
jge
jl
clc
cli
repz
shl
hlt
jmp
loope
out
xchg
sub
loope
shl
aad
repz
aaa
sti
ss
jecxz
test
test
test
jmp
nop
hlt
lret
jecxz
rcr
jmp
sbb
mov
call
cli
lret
mov
aad
enter
shll
out
in
jmp
ror
hlt
cmp
std
cmc
fdivr
loop
mul
std
int
xchg
xchg
xor
sub
jmp
repnz
aam
cmp
fiaddl
xchg
xlat
rcr
jmp
not
lock
repz
rol
rorb
in
int3
lret
out
hlt
xor
aaa
cmp
repz
rol
aam
fcmovnu
frndint
testb
das
aad
xlat
stc
les
std
xlat
ljmp
loope
in
xlat
cld
jmp
mov
int
out
sub
in
into
into
rcr
xorl
not
xchg
cld
test
into
xor
aaa
enter
clc
loopne
iret
mov
leave
xchg
mov
mov
xor
ljmp
in
out
loop
stc
int3
shl
cli
xchg
lea
into
aam
rol
out
shr
xor
cmc
hlt
lret
out
in
not
mul
inc
in
fdivr
test
cli
loope
ljmp
cld
cli
fadds
inc
loope
hlt
xchg
lret
int
ret
lret
in
loop
loop
loop
lret
aad
shl
ljmp
test
addl
decl
repnz
out
std
cmp
cmp
sti
std
std
mov
faddl
lock
ljmp
ljmp
cmp
roll
ret
xchg
jecxz
sbb
int
ret
hlt
aam
das
icebp
fucomi
xlat
out
std
sar
cmp
cld
jmp
out
out
rcll
hlt
fsubr
xor
cmp
into
lret
bnd
neg
jecxz
test
call
jmp
in
repnz
lret
cmc
lret
lock
fsubrp
shl
fdiv
sbb
out
pop
out
fcomip
nop
int
xor
ror
xor
fst
fidivrs
aam
in
and
xlat
fsubrp
addl
call
idivl
loope
test
test
xchg
faddl
xlat
out
in
xor
repz
f2xm1
int
jecxz
dec
rol
sar
fucomp
fdivp
rolb
xor
jmp
out
ds
fdivr
fadd
loope
jecxz
mov
orl
out
xor
out
lret
repnz
int
jecxz
into
rcl
aam
jecxz
testl
xor
sti
clc
call
fcmovu
adc
stc
addb
loop
int
test
das
repnz
iret
int
in
shl
aas
test
sbb
leave
cld
xchg
jecxz
ret
cli
cmp
not
iret
loope
neg
shl
orb
cld
icebp
out
icebp
int
repz
ror
int3
fucomp
imul
leave
icebp
sar
lock
cld
out
lret
fisttpll
shr
cld
out
shlb
int
in
repz
ljmp
mov
mov
xchg
out
aam
lret
rcl
icebp
out
loope
ret
out
aam
mov
int
sub
enter
in
cmp
fadds
into
fchs
loop
div
loop
out
fisttpll
aad
icebp
loop
divb
clc
out
idiv
fiadds
out
lret
out
out
rcl
in
cs
cmp
ss
fdivrp
cmp
loopne
mov
in
xchg
loope
xchg
fcmovu
test
xor
fucom
std
out
aad
cmp
ds
iret
jmp
iret
shll
neg
iret
ljmp
repnz
cmp
ret
fsubr
jecxz
mov
in
cmp
jmp
enter
clc
rcr
jecxz
fcmovnbe
ret
in
lret
out
in
orb
repnz
xor
cli
rcl
call
cmp
aam
cmc
sti
loop
xchg
fstp
call
cmp
xor
aaa
ds
xlat
ret
sub
jecxz
fsub
ljmp
enter
fidivrl
cmp
xor
lock
fstp
leave
enter
mov
aam
aam
out
xor
vpsubw
in
cmp
adc
movl
jecxz
int
test
fcmovbe
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
lret
pop
jle
jge
jl
call
jecxz
addb
out
xchg
jecxz
or
iret
loop
lret
lret
hlt
aas
or
fldl
in
test
or
hlt
leave
out
shr
stc
hlt
fcmovnbe
int3
cld
lret
lock
lds
ds
in
int3
in
out
out
loope
lret
std
out
clc
rcl
aad
iret
rcl
mov
xchg
mov
mov
fmul
int
repz
xor
out
cmp
lock
in
sbb
in
lret
mov
test
loopne
lret
into
icebp
leave
iret
icebp
clc
fcmovnbe
cmp
out
test
loop
and
fmuls
not
loopne
xor
lret
sarb
repz
lds
loop
mov
out
in
sub
xor
aas
aam
cmp
ds
jecxz
in
cmp
xchg
enter
lret
jmp
icebp
ss
repnz
and
in
cmp
shl
int
loope
lret
fisttpll
stc
rcl
stc
lret
divl
ret
cmp
mov
ljmp
int
lock
out
hlt
out
jmp
lret
ds
addb
loope
loope
into
jmp
jmp
ss
lret
int
ss
repz
cld
loop
test
mov
xchg
out
cld
out
cmp
xor
cmc
fyl2x
not
leave
not
add
fucomp
loope
xchg
xor
icebp
test
in
jmp
aad
fyl2x
xchg
lret
lret
lea
mov
sub
fsubr
icebp
idiv
clc
std
loope
rcr
clc
test
out
fucomip
sbb
cld
int3
roll
xlat
shl
jmp
cmp
icebp
flds
rcr
xchg
in
std
mov
cmc
int3
rol
repz
fucomip
enter
fiaddl
call
mov
loop
xor
imul
iret
xor
repz
shl
out
out
fisttps
aad
in
imul
in
std
rcr
imul
cld
clc
test
shl
std
in
fstp
roll
xchg
lret
icebp
lret
out
in
jmp
iret
shl
fcomp
test
test
ljmp
loop
loop
cs
iret
hlt
cld
aam
std
shl
test
mov
fucom
test
mov
loop
decl
ret
repz
icebp
leave
sar
sti
neg
in
aam
aam
addb
repz
rcl
out
xor
sarb
iret
jmp
hlt
cli
std
shl
enter
in
iret
addl
call
ds
xchg
shr
cmc
hlt
mul
lret
fsubr
xchg
in
loope
cs
icebp
int3
jmp
sti
filds
fcmovu
roll
mov
mov
xchg
out
rorl
icebp
icebp
cmp
ljmp
enter
test
in
xor
xor
xor
lret
clc
cmpb
mov
lea
ljmp
aad
shr
hlt
out
sarb
clc
iret
cmp
rorl
std
lret
lret
in
shrb
leave
shlb
xlat
cmp
ljmp
jecxz
in
in
clc
lret
iret
mov
lock
out
fst
std
xor
fsubp
rcr
jecxz
add
stc
clc
fldl
mov
fcmovnbe
xor
cmp
sti
xor
test
adc
ret
rolb
lret
out
shrl
xlat
das
in
xor
cmp
loop
cli
lock
loop
lret
in
jmp
loop
xchg
out
enter
into
cli
jmp
int3
cmp
sti
loop
lret
loope
jmp
nop
and
loopne
jmp
leave
lock
cli
loop
test
fnstcw
enter
cmp
xor
ljmp
icebp
aas
jecxz,pt
out
leave
bnd
fsincos
xchg
out
xchg
orl
xlat
das
lret
xlat
icebp
int3
int
int
fcomp
in
mov
cmpb
xchg
iret
call
hlt
xor
xor
xlat
fdiv
in
aam
fdivrs
std
addb
loopne
shl
dec
xlat
sub
in
icebp
cmp
stc
cmp
filds
mov
in
cli
in
ret
shl
lock
xor
ror
jmp
cmp
lock
fnstcw
jecxz
loop
int
loop
or
repz
out
fstpt
aas
stc
in
rcr
shl
aam
addl
loopne
out
decl
in
cmp
out
shrb
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
sub
mov
jge
jl
iret
jecxz
idiv
lock
lock
in
loopne
leave
mov
xchg
xor
ss
ror
jmp
repz
addb
lret
lret
loopne
repnz
orb
jmp
int3
fsubr
hlt
rcr
std
aam
in
ljmp
jmp
call
aaa
lret
fldlg2
rcr
iret
cmp
hlt
std
ds
xchg
jmp
fiaddl
xor
icebp
in
cmp
fdivr
stc
clc
test
not
sti
aam
imul
test
jecxz
jecxz
shl
ss
out
cmp
xlat
fdivr
aam
rcl
mov
xchg
sti
cld
xchg
repnz
hlt
out
out
out
ss
out
aam
fdiv
rcl
std
mov
test
in
jmp
jmp
ret
fdecstp
shl
out
aaa
rcl
fucomp
aas
out
loop
enter
ret
in
and
call
rcl
xor
xor
out
fcomip
out
cli
hlt
out
icebp
int
into
in
mov
ret
das
out
repnz
sar
jmp
jmp
fxch
hlt
push
roll
cli
nop
enter
adc
leave
xor
jmp
enter
rcr
out
out
shl
cmc
clc
fcmove
out
into
fistl
xor
ljmp
ljmp
in
aam
fcmovnu
in
jmp
into
loop
into
in
jmp
repnz
out
cld
sar
cmp
xchg
test
mov
fmulp
loope
ret
hlt
in
idiv
ds
ret
out
std
leave
loope
fdivr
sti
int
mov
into
mov
cmc
in
out
cs
cmp
fdivp
rolb
fcomp
test
lret
ljmp
imul
cld
hlt
repnz
xor
jmp
cli
out
fiaddl
icebp
in
cli
int3
int3
loopne
cmp
call
test
fld
fsubr
rorb
out
sub
fcmovne
shll
f2xm1
fdiv
ss
aam
mov
mov
xor
clc
enter
int3
lret
ss
in
ret
adc
clc
aam
fcomp
in
iret
loopne
xchg
out
leave
int3
out
cmp
cmc
cld
cmp
clc
fadd
ffreep
fsubrp
imul
in
in
int
jmp
xchg
icebp
aaa
xor
xor
repz
cld
iret
jecxz
std
roll
lds
jmp
shr
repz
cmp
ljmp
sar
rolb
std
icebp
sbb
in
and
imul
aad
cmp
idivb
loope
stc
fdivrl
out
leave
in
shr
roll
ss
ss
ljmp
iret
repnz
rolb
loop
std
in
icebp
out
clc
imul
leave
cmp
repz
cmpl
loop
repnz
ljmp
loope
in
mov
rol
int
cmp
icebp
xlat
cmp
cli
cmp
lock
test
ret
testl
in
sarb
stc
in
leave
int
aad
loopne
stc
cmp
clc
cld
loopne
faddp
repz
mov
lock
xor
xor
repnz
int
incl
and
jmp
fsubrp
shl
fmull
jecxz
shrl
fdiv
stc
ret
xlat
cmc
fcmovnbe
test
ljmp
hlt
dec
out
xor
lock
cmp
std
xor
fxam
aad
fiadds
sub
shl
xor
aad
xor
aad
aas
loop
repz
jmp
xchg
in
repz
fsubrs
lret
iret
hlt
fdivr
repz
mul
aad
shl
test
mov
enter
out
test
ret
jmp
ljmp
ret
sbb
cmp
stc
fmuls
call
cmp
out
lret
cli
xlat
sbb
out
fdivr
xlat
shl
out
adc
jecxz
rcl
nop
loop
jmp
jmp
rcl
icebp
iret
aam
shl
cld
cld
xchg
fisttpl
in
repz
xlat
lock
adc
fisttpl
iret
mov
out
in
icebp
xor
out
lock
xlat
cmc
cmp
test
sarb
clc
jecxz
fcmovbe
in
xchg
cld
mov
sbb
out
shrb
jmp
rcr
std
dec
cmp
fcmovb
stc
xchg
loop
std
fucom
mov
iret
xor
loope
xor
xlat
icebp
enter
cmc
into
into
jmp
jecxz
mov
xlat
lret
out
ss
out
aad
cmp
fdivrp
out
rcr
jmp
call
cmc
int
shlb
fnstcw
stc
jmp
jge
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
xor
jge
jl
aad
repnz
in
aam
ret
jecxz
lock
fiadds
divb
fcmovnu
cmp
loopne
rcr
xlat
cli
mov
repz
shl
ljmp
not
clc
in
out
lret
int
rolb
mov
sti
sar
jmp
divb
jmp
fildl
rolb
cli
fcmovbe
jmp
std
lret
xchg
aad
in
xor
fidivrs
cmp
int3
lock
sti
lock
cmc
call
call
jecxz
xor
xor
std
clc
sarb
iret
idiv
in
lock
fcom
ljmp
ljmp
hlt
ss
cmp
int3
loopne
roll
mov
and
repnz
ljmp
fucom
icebp
cmc
aas
std
aad
shl
rol
enter
sbb
xchg
lret
fiadds
rcl
repz
in
aas
int3
fsubr
fsubr
loop
out
hlt
cli
mov
aam
in
lock
faddl
aad
rcr
cmc
enter
shl
cmp
fadd
fld
in
ljmp
call
ret
div
out
cmp
lret
repnz
sar
call
icebp
orl
shr
fcmovnu
clc
sbb
rolb
jecxz
out
mov
jmp
sub
jmp
lock
in
hlt
test
lock
xlat
rol
std
mov
xor
ljmp
cli
sbb
fnstcw
cmp
loope
xlat
mov
cmc
mov
iret
hlt
div
jmp
out
cmc
into
aaa
incb
cld
loopne
leave
lock
out
shll
out
test
jmp
roll
ds
ret
stc
lret
in
xchg
aam
rol
xor
ds
out
shl
stc
fucomi
fcmovu
mov
repnz
shl
icebp
hlt
rcr
lret
cmp
fcmovnu
rcl
orl
lret
cli
xchg
int3
xlat
imul
fpatan
xor
sti
out
lret
adc
test
cmc
jmp
cli
icebp
adc
repz
in
in
std
repz
bnd
std
xlat
or
out
call
xor
out
xor
loopne
xor
add
int3
cld
lock
hlt
xor
clc
repnz
out
lret
call
fdiv
std
fiaddl
enter
or
ljmp
aad
lret
aam
fcmovb
aas
fmul
movb
out
addb
aaa
xor
into
cmp
cmp
out
ds
out
mov
in
decb
xchg
mov
aam
jmp
cmp
cld
int
aas
hlt
in
sti
ret
xchg
fdivrp
cld
test
stc
in
cmc
call
rcl
std
cmp
rcl
repz
fcmovu
fucom
mov
loope
sub
rol
lock
cmp
leave
sbb
ffree
leave
sti
cmc
ret
jecxz
leave
out
out
orb
shr
cmp
ss
rcr
les
test
ret
into
xchg
loopne
aam
ret
clc
fcmovnbe
call
fdivp
fiadds
xlat
mov
out
out
xchg
test
iret
jmp
ret
lock
xor
not
and
std
iret
mov
fstl
faddp
lret
stc
jmp
in
shr
fcomip
shl
test
fisttps
shl
ret
aad
cmp
sarl
fdivr
aas
cld
loope
lock
flds
out
sti
in
nop
lret
imulb
cmp
sar
in
sti
aam
fdivr
xchg
adc
in
cmc
repz
cmp
test
aam
in
aad
in
cli
fsubrp
fsubrp
test
ljmp
lret
test
xlat
cmc
cmp
and
mov
in
aam
fdivs
repnz
cld
shl
loopne
test
testb
call
lret
jmp
fld
sub
jmp
out
div
enter
mul
fiadds
fsubrp
out
popl
xor
in
ror
iret
cmpl
rcl
mov
jmp
loope
in
cmp
lret
int
mov
xor
out
jecxz
out
cmp
lret
out
addb
out
rcr
in
into
dec
rcl
repnz
xor
std
sarl
aaa
aad
fcomip
jecxz
aas
and
xchg
out
ror
aaa
divl
out
cmp
mov
incl
jmp
int
iret
rcl
fsts
fs
mov
lret
and
jl
add
fucom
clc
icebp
ret
rcl
ret
mov
int
and
int
sarb
rcl
ss
xlat
sti
out
lret
cmp
fdivrl
cmp
lds
test
xchg
test
iret
icebp
not
aam
repz
cmp
fistpll
loop
lock
enter
xchg
and
xor
aam
in
cmp
cmc
into
ljmp
out
fadd
int
fcmove
fisttpll
shl
jmp
std
repnz
repnz
test
in
enter
lret
shl
leave
lret
aaa
call
in
fsubr
add
fadds
fsub
lret
fmull
int
enter
lret
sar
add
xlat
rcr
jmp
in
clc
mov
xor
out
int
enter
dec
into
repnz
ret
std
aas
test
jmp
repnz
jmp
rcl
iret
fdivrs
cmp
ret
lds
fstp
mov
test
ljmp
repnz
cmp
jecxz
sar
jmp
mov
xlat
sub
int3
lret
icebp
ljmp
loope
test
test
and
jecxz
cli
ffree
std
xchg
in
ljmp
cmp
enter
jecxz
add
idiv
icebp
shr
in
mov
das
lret
out
not
fmul
fdivrl
rcr
roll
fmulp
mov
jecxz
xor
cli
aad
aas
int
cmp
shl
cld
fcom
aad
fcomp
or
rolb
fsubr
les
ss
int
test
stc
in
mov
into
int
rorb
repnz
out
leave
out
aaa
repnz
and
out
shl
fiadds
test
aaa
cmp
xor
xlat
sti
xor
fadd
fldl2t
int
test
fsubrp
fisttps
call
cmp
iret
lock
int3
ret
shl
rol
fcomp
enter
mov
shr
call
aad
iret
out
fst
sti
loop
inc
xchg
lret
in
mov
cmc
in
lret
divb
loop
out
xor
fiadds
mov
fst
std
cmp
int
into
repnz
sub
enter
call
sbb
std
addb
fcmovb
fdivp
xchg
fcomi
stc
stc
fmul
xor
in
icebp
in
aaa
fneni(8087
in
fchs
call
lret
in
loope
xchg
in
fld
xor
fcmovbe
cld
sar
cmp
cmp
std
fld
in
jmp
test
jmp
xchg
call
shr
cmp
out
xor
idivb
filds
imul
in
loopne
lock
loope
das
icebp
sub
xlat
leave
fstp
std
rol
and
dec
in
cli
out
fmul
adc
lds
jmp
into
loopne
xor
repnz
fnclex
cld
sbb
std
out
cli
lret
das
lret
xor
fxch
repnz
test
sbb
xchg
aas
ffreep
loop
cmp
out
xchg
lret
cmp
div
cmp
hlt
loope
ret
lock
xacquire
xchg
out
call
sti
lock
cld
loope
int3
xor
adc
imul
lret
loop
sub
xchg
mov
xor
jmp
in
fucom
into
ret
repnz
incl
mov
xchg
std
sti
repz
shl
enter
sti
rcr
cli
icebp
sar
rolb
flds
xchg
leave
lret
cmp
into
ret
cld
not
in
aad
fdivr
les
neg
nop
repz
xlat
cmp
cmp
fstp
sbb
xor
add
std
ljmp
nop
loop
test
in
stc
xor
leave
enter
cmp
in
shl
xchg
fisttpll
rcr
in
mov
aaa
jecxz
in
sarl
int
aaa
fld
cmp
out
fdivrp
cld
fcmovb
xlat
mov
sbb
addl
xor
fdivrs
cmp
ret
sbb
aas
jmp
aad
std
test
rcl
cs
fyl2x
repz
sti
int3
cmp
ds
ret
out
ds
call
sar
repz
xlat
out
shr
repnz
out
fucomp
rolb
loope
lock
out
shr
test
int3
out
iret
fcomi
cmp
repz
fcomip
clc
ret
in
mov
clc
lea
faddp
rcr
fcmovb
ljmp
fcmovnu
fdivp
jecxz
mov
repnz
sbb
in
xchg
jmp
fstp
mov
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
neg
lret
cmp
leave
repnz
mov
mov
out
in
imul
in
xor
xor
sti
test
out
stc
test
in
addl
aaa
aad
aas
faddl
test
int3
in
iret
and
ljmp
leave
iret
cmp
aas
fld
clc
icebp
cmp
ret
xchg
xchg
imull
rol
rcr
cmp
ds
repnz
in
ret
mov
mov
fimuls
ljmp
into
aam
div
fadds
loopne
sti
mov
lret
ret
test
aad
sar
in
xlat
lret
fdivrp
and
xchg
mov
out
fsubr
std
loope
xchg
repz
xor
fcomip
loope
shl
add
roll
incl
aad
test
fucomi
cmp
aaa
adc
fyl2xp1
loope
add
test
test
in
loope
aad
fidivrl
aad
cmp
and
std
orb
loop
lock
hlt
enter
cmp
int3
fidivrl
clc
test
jmp
or
loope
xor
xor
repnz
ret
in
int3
in
div
hlt
lret
out
shr
out
jmp
ljmp
into
cmp
cld
ret
fnclex
mov
fnstcw
into
rorl
enter
xlat
int
aam
and
repnz
aam
addb
out
out
out
xor
lret
xlat
out
cmp
lret
testb
cmp
mov
out
in
shrb
int
jecxz
cmc
aam
ret
cmp
sti
jmp
fmuls
xor
xchg
cmc
xor
cmp
fdiv
xor
fdivr
icebp
cmc
shl
rcl
out
xchg
test
repz
jmp
out
out
xor
int3
hlt
aas
out
cmpl
xlat
dec
loopne
out
mov
dec
shl
out
lret
cmp
fsub
out
fstp
cmp
cmp
fdiv
test
mov
cmp
lret
jecxz
ljmp
out
aaa
jecxz
aam
testl
out
in
roll
shl
rcl
fnstsw
add
faddp
in
clc
in
fdivr
in
mov
sti
icebp
jecxz
adcb
ret
into
xor
lret
fpatan
ds
test
jecxz
leave
fdivr
sbb
icebp
out
xchg
mov
lock
std
enter
repnz
adc
sub
testb
aas
in
hlt
cmp
cli
clc
into
ds
hlt
shl
test
aad
mov
xlat
or
aad
in
lret
divb
lret
enter
out
int3
cld
repnz
idivl
in
test
fucomp
fcomi
in
ljmp
cs
aam
das
ror
aad
xor
fildl
jmp
mov
cli
repz
adc
call
rol
dec
in
fmulp
ret
rol
cmp
stc
lret
jecxz
fstl
call
aad
cld
inc
out
cmp
and
call
fucomip
in
or
jmp
in
sti
sti
int
repnz
ds
ljmp
rcr
mov
in
loope
int3
fists
sub
xlat
in
fprem1
out
lret
cmc
cmc
lock
fisttps
loope
clc
mov
rorb
xor
ffree
frndint
cmp
test
out
xchg
xrelease
ljmp
cmp
or
clc
rolb
mov
test
int
jmp
in
ljmp
cmc
flds
in
ret
mov
int
in
mov
ret
out
jmp
stc
cmp
aam
fadd
enter
fyl2x
fisttpl
lret
cmp
fstp
aad
loope
repnz
lret
int3
out
loope
repnz
xor
xor
lret
xor
fdivrs
std
rol
int
in
lret
test
lret
jmp
ljmp
clc
xchg
loope
call
loope
ret
call
cmp
cmp
testb
add
nop
leave
icebp
sub
aaa
loopne
xor
into
clc
ss
aaa
stc
repz
test
repz
ror
or
lret
cli
xchg
adc
cmc
ret
into
leave
aas
ror
ss
sti
out
and
aas
inc
cmc
loope
jmp
loopne
and
cmc
div
cmp
jmp
rcl
aad
aad
rolb
push
mov
jle
jge
jl
out
hlt
test
std
shl
in
adc
test
int3
addb
xor
cmp
shll
xlat
int3
cmc
out
rcl
and
enter
fists
leave
xor
into
fldlg2
in
in
jmp
rcl
stc
fiaddl
mov
rcr
addb
call
fcomp
fiadds
cmp
faddl
in
ret
out
xor
xor
std
cmp
cmp
repnz
std
loope
aad
enter
sbb
in
jmp
rcl
int3
hlt
idivb
stc
iret
shl
call
into
test
repz
test
out
out
mov
jmp
in
xchg
out
sub
xlat
cld
aam
in
sti
ret
xor
aad
ret
addl
jecxz
xor
aaa
rcr
ss
not
ss
neg
ret
mov
ljmp
call
in
stc
xlat
out
into
sar
cld
out
sar
xchg
into
rcl
iret
enter
enter
xor
in
addl
clc
mov
loopne
xchg
mov
ret
in
shl
jmp
fsqrt
std
repz
aam
mov
jmp
xchg
lea
sub
cmp
jmp
in
and
les
leave
leave
fisttps
xor
aad
cmp
fdivr
in
int3
not
les
jmp
out
xchg
into
in
out
ret
lret
int
fcomi
int3
aam
divb
add
aam
xchg
in
xchg
jecxz
loopne
aad
into
aam
clc
cs
xlat
fucomp
frndint
into
aam
xchg
lds
loop
repz
jmp
out
sti
ds
faddp
rolb
mov
in
ficoms
loope
xor
lret
idivl
std
sar
idiv
cmp
leave
jmp
jmp
in
out
in
call
cmp
aam
fldl
sti
rorb
loop
out
cmc
fidivs
jmp
into
icebp
fidivl
lret
fdivr
cli
lock
loope
orb
lock
ret
aam
lret
aam
int
loope
cmc
fdivp
sti
leave
cmp
in
mov
xlat
stc
in
fcoms
ds
fsubr
int3
into
fcomp
leave
aad
cmc
fdiv
fdivr
cli
cmp
stc
jmp
int3
fldpi
in
rcr
int3
jmp
fisubrs
repz
xor
ljmp
ror
fdivr
ret
xchg
addl
in
clc
cmp
aam
rol
ffreep
aam
ret
out
faddp
movl
aaa
rcl
out
enter
fabs
cmp
rcr
cmp
clc
fucompp
shr
lret
in
ret
ret
icebp
cs
enter
icebp
aad
loopne
cmc
repnz
test
test
hlt
iret
into
lock
leave
rcl
shr
std
fdiv
lock
rol
fscale
and
cld
std
iret
hlt
rol
not
out
cmp
into
int
stc
out
stc
out
aas
aas
adc
test
xlat
in
out
xchg
lock
loopne
jmp
in
xor
call
icebp
in
fucomp
div
call
mul
cmp
in
xor
stc
xor
out
cmc
iret
idivl
jmp
loopne
xchg
or
jmp
lock
jmp
in
in
aaa
xlat
hlt
jecxz
cli
xchg
leave
sbb
int3
fmull
int3
jmp
jmp
ror
icebp
shr
rolb
clc
std
cmc
test
out
in
into
out
aaa
xor
xor
jmp
iret
cmp
aad
loope
jecxz
sti
ds
out
cli
loope
xor
xor
ss
shl
hlt
adc
std
mov
or
roll
jmp
leave
iret
repnz
mul
aam
mov
aam
ljmp
out
jmp
cld
repnz
into
shl
int
into
out
ljmp
enter
in
xor
out
call
aaa
hlt
jmp
ret
ret
cmp
hlt
in
mov
mov
aad
shrl
call
fcomip
sti
aas
roll
cli
sti
out
fstp
lret
repz
in
lds
fdivs
into
cli
cli
fcos
rcr
test
sti
in
fmul
std
iret
int
das
das
lock
das
xor
fcmovnbe
sbb
push
ror
xchg
int
jmp
sarb
sarl
rorl
cld
fadd
mov
xchg
sarl
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
fdivr
aad
fdiv
xlat
fdivrl
test
loopne
jecxz
xchg
ljmp
hlt
jmp
cmp
repz
cmp
xlat
iret
sarb
std
loope
int
out
test
cli
into
out
in
xor
xor
shl
out
in
sti
xor
loopne
in
xchg
call
fdecstp
ljmp
dec
jecxz
cld
xchg
in
loope
ffreep
xchg
xchg
sub
shl
loop
lret
std
ror
cmp
std
repnz
cld
out
out
in
mov
icebp
fsubrp
out
hlt
enter
cmp
fdiv
jecxz
in
ds
test
hlt
sti
aam
lea
xchg
ret
lret
int
std
lret
jmp
fnstcw
xor
mov
aas
stc
in
clc
fcmovnu
cmc
loope
xlat
shlb
out
aad
in
cmp
ljmp
lock
clc
mul
mov
out
mov
in
out
xor
enter
xlat
jecxz
loopne
cli
lock
and
movl
sub
jecxz
in
ror
stc
rcr
cmpl
aad
loop
cli
in
or
lock
cmc
mul
fxch
fistpll
sarl
int3
in
fucomi
flds
lret
aad
fcom
int3
ret
shr
repz
repz
lock
div
shl
cmc
fmulp
fimull
lret
xor
ds
loopne
and
xchg
xlat
xchg
aam
out
xlat
int
repnz
jecxz
cli
xlat
ljmp
jmp
jmp
xor
into
aad
out
cmp
ljmp
cmp
flds
into
icebp
sarl
cli
cmc
fmul
aaa
idiv
sarb
xor
out
cli
addb
loop
aam
imulb
fucomi
in
ss
in
aad
imul
cld
fcomip
xor
testb
mov
imull
icebp
xor
cld
xor
xor
and
aad
xchg
std
mov
repz
into
aad
ljmp
test
leave
mov
enter
ror
lret
aad
jmp
jecxz
jmp
sarl
fpatan
in
cmp
faddp
ret
mov
repz
in
ror
sub
out
aaa
fnstenv
icebp
sub
out
stc
xchg
mov
int3
mov
xchg
lock
icebp
sub
out
xor
int3
iret
xlat
sti
into
rol
sarb
fcmovnu
neg
jmp
shr
in
int
ret
aaa
lret
call
loopne
fadds
leave
int3
fst
lock
loope
cli
enter
ds
div
std
cld
out
clc
ret
mov
orl
loop
out
aam
iret
in
jmp
ffree
fldl
jmp
mov
ret
sti
out
ljmp
loopne
repz
test
mov
lret
in
in
int3
adcl
repz
leave
aad
cmp
int3
hlt
cmp
xchg
xor
mov
in
loop
loope
in
ror
in
in
ss
stc
sti
cmp
loop
sarl
repz
loopne
in
not
addl
repnz
xlat
out
aad
cmc
iret
fdiv
ret
loope
les
repnz
les
rcr
ljmp
cmc
in
aas
fstp
dec
fiaddl
faddp
hlt
cmc
loopne
xchg
lret
jmp
out
aaa
in
hlt
sub
enter
cmp
in
icebp
mov
stc
cmp
jmp
fadds
loop
rcr
div
out
push
rolb
fcmovb
aad
mov
jecxz
call
mov
hlt
cmc
lret
fcmovnbe
iret
sti
fincstp
hlt
loope
rcr
iret
out
ret
repz
neg
clc
out
icebp
lret
loop
lret
push
out
adc
fcmovbe
out
std
ret
ljmp
xchg
lret
cs
out
shlb
int3
leave
repz
icebp
flds
fcmovu
jmp
nop
mov
sar
enter
int3
hlt
fnsave
in
and
ljmp
out
cld
out
in
lret
cmp
in
fyl2x
ret
cmp
mov
in
jmp
lret
cmp
in
sarl
iret
jmp
cmp
rcr
ds
aam
test
mov
cli
into
jmp
mov
shl
aam
out
hlt
cmp
sar
loope
fmulp
stc
shl
loope
cld
in
fcomip
call
in
cmc
ret
cli
aad
cmp
cmp
cmp
in
test
in
mov
cli
shl
out
fimuls
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
mov
jle
jge
jl
hlt
int3
cmc
test
in
hlt
sbb
test
cmp
decb
int
out
xlat
idiv
aaa
cmp
rol
ds
fcmovu
in
mov
lock
out
ret
in
lret
rcr
fxch
fsubr
shl
stc
faddl
vpsubw
int3
in
aad
cmp
sti
call
test
loopne
in
test
cli
mov
test
xor
shl
xlat
cli
xor
hlt
fucomi
shl
test
xchg
sbb
cli
test
int
aad
shr
stc
in
in
cmc
shl
rcl
fdivr
std
cmc
roll
xlat
loope
mov
test
hlt
out
xor
in
aad
neg
stc
aas
ss
sti
ffreep
sar
aam
rorl
loope
hlt
in
call
xor
cli
aas
fsub
jmp
repnz
out
cli
or
mov
das
jmp
xor
shl
cmp
fnstenv
dec
test
test
out
xchg
test
fsubp
cmc
call
ljmp
cli
cmp
rcl
into
repz
shl
out
dec
test
fiaddl
divb
icebp
icebp
ror
ror
leave
loop
testl
ljmp
aam
into
icebp
clc
fcomp
adc
jecxz
incl
orb
lret
sti
aam
not
fdivp
aaa
rcl
cmp
fcomip
sarl
cld
out
loopne
xchg
xchg
cmc
shl
in
jmp
int3
leave
roll
out
aad
sub
fadds
fucom
mov
hlt
jmp
cli
fdivrl
int3
lock
loope
ret
cmp
cmc
out
ret
out
lret
lret
clc
fisttpl
int3
xlat
in
cmp
xlat
cmp
repz
icebp
leave
cmp
enter
into
leave
test
xchg
sub
lock
xor
lret
ljmp
aam
adc
in
jmp
call
lret
call
shl
stc
shl
iret
cmp
in
jecxz
cmp
stc
repnz
out
ret
loopne
lock
leave
leave
call
cld
icebp
loope
mov
mov
fstp
loopne
jecxz
decl
ss
hlt
sarb
stc
fdivrs
shl
clc
cli
xor
aas
nop
loop
aaa
xor
icebp
cli
int
jmp
shl
loope
testl
rol
fnstcw
call
fcomi
shl
xor
mov
faddl
jmp
lret
jmp
sub
loopne
repz
sar
aad
cmp
lock
fdivr
rcr
repnz
clc
in
leave
shl
loope
aad
sub
sti
das
aam
ljmp
aam
loope
idivb
test
mov
iret
out
leave
into
lret
xor
cmp
int3
fistpll
shl
cmp
rol
test
call
xchg
jmp
into
out
icebp
lock
cld
cmc
cmp
addb
hlt
fucomip
fucomip
iret
rclb
into
in
xor
in
shl
lret
cmp
rcr
loope
lret
mov
mov
shlb
int3
cmp
int
cmp
cmc
dec
hlt
jecxz
enter
lret
faddp
in
neg
icebp
ljmp
test
lock
stc
leave
ljmp
std
lret
std
repz
ljmp
add
int3
fcomp
aad
jmp
enter
mov
mov
shr
cmp
fsubp
fcmovnbe
lret
neg
ds
sti
fsub
loopne
jmp
ss
icebp
movl
loope
repz
ffree
loop
into
xchg
in
xchg
jmp
jmp
rol
cmp
not
iret
aaa
out
sar
aam
int
in
loopne
leave
into
fisttps
ss
xor
std
in
fcomp
jmp
call
iret
cli
faddl
mov
leave
out
cli
shr
jmp
sub
in
ror
cmp
hlt
orl
orl
call
cmp
rcl
aad
icebp
stc
les
in
testb
mov
or
int
das
xor
ljmp
cmc
rol
fsub
mov
movb
fsub
shl
int
int3
cmp
rol
lds
int
loopne
sti
in
lock
out
ror
xbegin
stc
idiv
sar
rol
test
leave
in
jmp
jmp
das
int
xor
sar
cld
aad
fdivr
icebp
jecxz
aad
ds
cmp
lret
icebp
jmp
icebp
call
pop
add
lret
leave
lret
rol
loop
jmp
jle
jge
jl
cmc
xor
hlt
sarl
cld
out
sti
in
aaa
iret
shl
repz
fcmovu
cli
fucomp
mov
loope
xor
xor
sarb
out
repnz
sarb
shl
and
fsub
out
jmp
sarb
xor
cmc
fdivrl
cmp
cld
fcmovbe
sbb
aad
sti
out
fmull
in
ss
cmp
repnz
ss
repnz
aam
loopne
xlat
stc
aam
int3
shl
out
xchg
xor
test
aad
int
fcomi
lret
cmp
xchg
sti
loopne
in
les
cmp
xor
loopne
fsub
cmp
jecxz
stc
lret
std
mov
icebp
lret
in
jmp
clc
fucom
clc
sti
jmp
ret
sarl
jmp
ljmp
out
shlb
cmp
lret
sar
int3
fistpll
loop
mov
in
test
dec
stc
cli
mov
into
aam
out
hlt
xor
xor
jmp
rcr
test
jecxz
repnz
test
loope
add
xchg
lock
not
icebp
cmp
sti
jmp
fcmovnb
fcmovnb
testl
fmul
in
xlat
loop
repnz
fucomp
call
add
stc
addb
xlat
leave
cmc
ret
shr
sti
cmp
cmp
in
aad
stc
mov
fcomp
in
dec
icebp
ljmp
ljmp
repz
mov
xlat
mov
int3
loop
shl
jmp
fcmovne
aad
leave
out
in
fdiv
fdivr
sti
cli
xor
fcmovu
fiaddl
aas
aaa
xlat
loopne
shll
xor
ljmp
repz
lret
jmp
sbb
in
rcl
std
lret
in
out
clc
sar
in
test
jecxz
hlt
mov
hlt
out
icebp
sub
or
repz
std
fldl2t
out
fdivrs
call
xchg
div
mov
jecxz
in
xlat
loop
sti
in
hlt
lock
cmp
xlat
in
aam
mov
ret
int
shl
xor
idiv
sti
cmp
shlb
sub
fucom
mov
and
stc
test
in
mov
cmc
jmp
ds
cli
shl
loope
decl
test
out
lock
out
xor
flds
cmp
int3
faddl
xchg
fbstp
neg
fsqrt
fcmovb
fsub
in
cmp
jecxz
loopne
out
mov
mov
xor
rcl
xchg
cmc
aad
int
clc
leave
fldlg2
fcom
call
sar
repnz
cld
clc
addb
in
shl
call
fldpi
std
repnz
out
ffreep
stc
out
orb
mul
shl
lret
cmp
fmulp
fsubr
lock
iret
cmc
sarb
fmuls
mov
jmp
ret
das
in
cmp
std
cmp
cmpl
out
xchg
ljmp
in
out
lea
fldl2t
icebp
fsubrp
neg
cli
ffree
call
mov
lret
xchg
iret
mov
lret
fdivrs
aas
sar
faddl
mov
cli
fyl2x
cld
mov
int3
out
repz
out
xor
stc
xor
hlt
rol
cmp
test
testb
mov
into
out
fidivrs
in
repz
fucom
sarl
repz
orl
mov
xor
fnstcw
adc
ds
call
clc
fucom
loop
into
mov
out
aam
aad
cmc
aaa
repnz
flds
lret
jmp
out
out
lret
imul
cli
aad
fstpt
ds
fyl2xp1
stc
call
xchg
jmp
loop
sub
xor
enter
lret
incb
test
loope
lret
ret
int
mov
xor
ljmp
out
iret
mul
fcmovu
test
lret
in
xchg
mov
leave
cmp
stc
idivb
sbb
aad
cmp
roll
stc
mov
in
sub
lock
cmc
in
out
out
fdivrs
std
fldl
shr
out
loope
addb
int
in
ljmp
cmpl
rcr
imul
xchg
clc
ljmp
sub
cmp
cmp
testl
out
in
leave
fdivr
xchg
ret
aad
sti
fcmovnbe
xor
int
cmp
sub
mov
orb
out
in
ror
mov
push
jmp
rcl
mov
neg
repnz
je
outsl
fstpt
ret
jge
jl
loopne
cmp
fidivs
cmc
out
xor
fsubp
enter
cli
dec
shr
int3
shr
cmp
loop
aaa
cmp
sarb
repz
ret
std
orl
std
mov
xor
cli
in
cmp
cld
sti
out
ds
xchg
in
test
repnz
int
les
aaa
iret
xlat
sarb
adc
in
and
ljmp
icebp
xchg
in
lret
int3
icebp
rcr
cmp
fdivp
jmp
xchg
mov
mov
sub
out
into
loopne
enter
fbstp
cmc
clc
int
cmp
loop
loop
fimuls
jecxz
into
cmc
clc
imul
ror
lock
repz
cmc
loopne
cmpl
cmc
call
xchg
lret
out
rcl
out
xor
xor
incb
xchg
hlt
mov
mov
in
xor
fnstenv
cmp
clc
xor
xlat
cmp
in
loop
fld
cli
xlat
fmuls
in
sti
shl
in
xor
int3
ljmp
in
fdivr
sbb
repnz
mov
in
repnz
cld
int3
ret
xor
cld
idiv
cmc
out
not
ds
add
filds
xchg
iret
rcl
sub
out
fcmovnbe
iret
test
repnz
rcr
fiadds
lret
out
mov
shl
out
lret
fmul
icebp
lret
sbb
fsub
in
out
in
mov
int3
jmp
out
in
shl
leave
lret
bnd
xor
cmp
lock
mov
lret
xor
in
sub
out
ss
fsub
loope
out
test
mov
lret
loop
jmp
xor
jmp
in
loop
std
iret
in
adc
fiadds
xchg
neg
ljmp
loope
aad
sti
leave
cld
lock
loope
int
into
sti
ret
loop
addl
jmp
ljmp
loope
cmc
cmp
test
fucom
call
nop
loopne
xlat
ror
ret
jmp
cmp
rol
ret
repnz
aad
jmp
in
enter
int
in
int
in
xor
cmp
icebp
in
clc
loop
repnz
aam
cmc
std
jmp
enter
ljmp
fxch
in
aas
shl
cmp
repnz
orb
out
in
loopne
jecxz
in
sti
cmp
loopne
inc
lock
test
aam
test
std
jmp
hlt
fmulp
lret
repnz
out
lret
sub
adc
cmp
fcmovnu
xchg
mov
int3
and
out
jmp
fcom
sbb
cld
loopne
loop
test
test
fsts
xor
leave
out
ss
fldpi
fcmovnu
clc
int
aam
cmp
cld
sti
cmc
fsubr
ljmp
cmc
xor
cli
divl
in
lock
lret
icebp
clc
fucom
fmuls
ljmp
into
not
aaa
shlb
jmp
jecxz
hlt
lds
in
in
cld
in
orb
lret
neg
fnstsw
cli
test
push
cmp
jmp
cli
mov
jmp
iret
in
icebp
lret
ljmp
clc
xchg
loop
sbb
mov
fisttpll
xchg
xchg
icebp
in
aaa
cli
repnz
aad
repnz
add
and
aad
jmp
xchg
ret
in
sub
in
xlat
cmp
icebp
sar
addb
loope
sti
fdiv
out
sub
shl
sti
ljmp
ret
sti
loop
clc
incb
test
xchg
loope
mov
aaa
rcl
aad
out
cld
fcmovb
fiadds
leave
xlat
stc
out
mov
out
leave
ror
fcmovb
aam
enter
sbb
hlt
and
xchg
xchg
call
int
fsubr
loope
ror
in
addl
rcl
xchg
iret
lret
lret
cmp
fxtract
xlat
int
iret
test
loopne
sar
xlat
sbb
loopne
in
repz
fdiv
cmp
int
cmp
add
clc
enter
fadd
fimuls
repz
jmp
aam
out
hlt
ss
lds
rorb
int3
shl
xchg
cmp
in
leave
std
out
fbstp
ret
aam
shr
ret
ret
jecxz
mov
in
loop
call
ss
icebp
test
fcmovnbe
idiv
fst
aad
test
mov
lret
shl
mov
pushl
call
jmp
jmp
int
mov
cmp
xchg
aas
jecxz
aas
leave
jle
jge
jl
shl
fcmovbe
aad
stc
loope
jecxz
cmp
cld
out
test
mov
xchg
rcl
xor
fcmove
lock
ljmp
cmc
fadd
fldl
fucomip
lret
mov
leave
jmp
ret
int
imul
sarl
and
mov
cld
std
rorb
int
ljmp
into
shl
hlt
rol
stc
out
fisttpll
lret
sub
fadd
cmp
sti
sti
clc
out
cmp
out
fucomp
xchg
cmc
fisttpll
aad
out
jecxz
stc
sti
cli
repnz
fmulp
cmp
aad
aam
loopne
in
fsub
xchg
loopne
out
ljmp
loopne
ds
repz
fdiv
clc
lret
xchg
loope
out
cs
in
in
sar
rcl
in
std
repz
rol
in
aas
fiaddl
adc
shr
out
out
cmc
repz
in
lret
into
loopne
fdiv
cmp
neg
lret
lret
cmp
fsubr
lret
in
fcomip
xlat
xor
xor
clc
lret
fucomip
stc
out
test
lock
cld
jecxz
call
loope
in
xchg
jecxz
lret
ret
lock
cmc
ljmp
cmp
aam
rol
loop
cli
out
jmp
jecxz
out
xor
loopne
repnz
fdiv
ror
cmp
sar
fyl2xp1
fcmovu
mov
fldl
shr
fdivr
fucomp
std
jmp
rcl
test
mul
aad
ret
in
enter
out
shl
ljmp
cmp
in
call
cmp
fsin
xchg
sti
sti
ret
lret
ljmp
xor
out
repnz
jmp
ljmp
jmp
int
in
xor
out
repnz
sub
cmp
jmp
cmp
xchg
addl
enter
cli
out
das
fld
cmp
in
xor
aam
fst
clc
jmp
sbb
cli
mov
in
iret
fmulp
xchg
xor
lret
stc
into
cmp
test
test
jmp
xlat
in
ljmp
cld
cmc
aas
int3
add
add
shl
xlat
cld
movl
sarb
cli
std
std
fnstcw
in
int
out
ret
stc
jecxz
out
cmc
jmp
lock
test
sub
lret
sarb
cmc
fcomp
cmp
mov
jmp
or
decb
in
ljmp
inc
repz
fldl2e
test
les
ljmp
leave
jmp
idiv
inc
and
aam
lret
dec
into
fucomip
out
enter
fucomi
fnstsw
cmp
shl
jecxz
loope
clc
icebp
mov
repz
mov
lret
sarb
idivl
shl
shl
in
xor
fdivr
lret
out
xchg
loop
jecxz
out
hlt
leave
repnz
in
cmp
fcomip
div
out
std
fcmovnu
in
sti
xchg
fimull
repnz
les
xor
in
xlat
incb
ror
fldl
in
shl
out
clc
jecxz
cmp
int3
cmp
fidivrl
idivb
testb
cmp
out
loop
in
int
in
lret
repnz
out
fnstsw
fdivr
sti
sar
mov
xor
stc
les
aaa
aad
ljmp
idivb
leave
and
icebp
jmp
xchg
rol
int
ljmp
fucomp
fcomp
jecxz
cmc
imul
mov
leave
int3
iret
out
mov
xor
aad
out
xor
cli
fucom
shl
fcmovu
fadd
aad
idiv
ljmp
in
int
stc
xor
cmc
fcmovbe
cmp
sti
int
icebp
test
cld
hlt
orl
cld
shr
ljmp
xor
loope
idiv
cli
std
mov
ljmp
in
in
in
aaa
leave
into
cmc
fdiv
incb
in
test
ret
mov
xchg
nop
test
in
aam
enter
cmp
rol
or
loopne
hlt
cmp
fucomi
jmp
ljmp
fdivl
in
sub
fxch
iret
int3
shr
fdiv
icebp
repnz
testb
out
iret
xor
out
xor
in
std
sti
in
cmp
cld
repnz
xchg
cs
icebp
in
lret
jmp
cmp
loope
jecxz
rolb
sti
fnstsw
fimull
lret
icebp
out
cmc
in
xor
iret
int3
cmc
lret
fsubp
add
ds
ljmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
jo
int3
jle
jge
jl
icebp
into
fsub
hlt
leave
cmp
xor
iret
cmp
test
aam
out
iret
jmp
call
ljmp
cmp
out
into
in
pushl
cli
loopne
loopne
fcomi
lret
std
dec
jmp
ror
jmp
imul
shl
test
cli
aas
out
cld
fcomp
jmp
in
fdivrp
xor
in
lret
cmp
iret
hlt
iret
jmp
repnz
shl
repz
ror
mov
in
mov
iret
xchg
rcr
dec
shll
call
fnstcw
ds
jecxz
lock
rol
fildl
fstl
ljmp
in
in
in
into
fistpll
ffree
out
ret
aam
in
sbb
xchg
lea
into
iret
aad
xor
iret
ds
out
clc
loope
enter
clc
sti
jecxz
xchg
ljmp
cmp
cmp
xor
int
lock
loope
lret
cli
mov
repz
hlt
fidivrs
loopne
into
fnsave
shl
cmp
stc
ds
jmp
xlat
loopne
testb
repnz
ljmp
loopne
xlat
sar
test
xlat
out
ljmp
rcll
enter
xor
fildl
std
rol
clc
out
decl
lret
jmp
out
aaa
ror
fstpt
roll
test
loop
mov
in
xlat
enter
test
cmp
sti
sti
out
fcmovu
ret
xor
out
xchg
xor
call
cmp
loope
repnz
test
ljmp
mov
int3
shl
repz
aaa
repnz
out
cld
lock
std
loopne
sti
ret
clc
movl
out
add
xor
idivb
fildl
testb
test
enter
fdivr
clc
ds
cmp
test
ret
jmp
ljmp
ds
xlat
into
out
xlat
fdivr
in
aam
cmp
repz
fdivr
addl
xchg
xchg
rol
enter
call
out
aad
aas
test
ds
loope
decl
std
out
sub
aaa
fnstenv
sti
ss
call
aad
sti
lock
xchg
mov
loopne
in
xlat
into
out
fcmovne
cmc
out
cmp
cmp
hlt
not
ftst
stc
add
lret
test
jmp
xor
xlat
out
enter
fidivrs
loope
adc
adc
and
out
out
xlat
ss
loop
hlt
lret
iret
clc
rcl
int
repnz
fsubp
mov
cmp
mov
rclb
sti
out
cs
stc
jecxz
std
aam
aas
cli
icebp
addl
lret
int
int3
or
icebp
out
fst
in
aad
lock
flds
test
jecxz
mov
leave
fimull
rcr
jmp
test
leave
sti
rcr
call
idivl
in
cld
cli
mov
xor
out
aam
out
xor
idivb
loopne
cli
shl
jmp
aas
int3
mov
lock
jmp
shl
fst
iret
aad
repnz
sarb
aad
repz
addb
out
in
xchg
xor
loopne
cli
int
hlt
xor
icebp
cld
fmulp
cmp
out
cmpb
repnz
out
or
lret
aad
sarl
aad
fnstcw
into
test
test
cmp
out
call
fsubrp
test
xchg
into
hlt
jmp
rcl
aas
rcr
xor
aam
in
int
lock
add
ljmp
xor
jmp
out
test
loopne
repnz
fcmovne
adc
fucomip
icebp
into
xor
repz
out
xlat
cmc
cmp
xor
clc
stc
icebp
testl
fsubp
in
adc
loopne
jmp
lds
notrack
in
iret
in
jecxz
ret
fadd
cld
fucom
mov
int
int
test
out
xor
in
int3
std
jmp
idiv
jecxz
xor
in
call
cmc
das
stc
ljmp
cmp
loope
jecxz
xchg
out
iret
in
fimuls
hlt
aad
fdivs
call
shl
icebp
std
shl
jecxz
aam
ds
fucom
and
lock
xor
xor
repz
addl
enter
mov
xor
cmp
aad
cmp
ret
cmp
rcr
fdiv
loope
testl
jmp
xbegin
in
loop
test
fdiv
aad
dec
cld
jmp
inc
loop
inc
in
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
add
jl
add
out
into
cmp
clc
repnz
not
sarl
cld
out
aam
jmp
std
int
jecxz
ror
ljmp
out
hlt
call
cld
loop
shl
ret
rolb
mov
repz
ljmp
call
clc
stc
idiv
out
cmp
loopne
aas
cld
jmp
in
xrelease
jmp
cld
repz
clc
fsubr
fsubr
ret
aad
vpaddusw
test
out
int
call
ret
neg
fnop
in
cmp
rcl
hlt
stc
loope
repz
call
lock
fldl
das
imul
fidivrl
jecxz
jecxz
clc
lock
out
repnz
test
orb
aam
icebp
into
fdivrs
fadd
in
fucompp
sub
out
jecxz
in
repnz
mov
in
xlat
imul
fcom
xor
cmpl
testl
icebp
lock
int3
lds
out
icebp
jecxz
out
testb
rcr
loopne
ret
mov
lret
int3
or
xchg
nop
hlt
in
ror
xor
hlt
jmp
aaa
lret
fcomi
shl
cld
and
div
test
lea
fstp
xchg
aad
xlat
xlat
cmp
rcl
cmp
test
cld
shl
loope
lret
mov
cli
in
or
in
lret
aaa
ljmp
sti
test
loope
sbb
inc
in
and
out
repz
aam
cmp
fdivr
cmp
cmc
loopne
roll
lret
call
int
repz
hlt
out
shr
icebp
ds
jecxz
leave
test
cld
mov
jecxz
xchg
repz
ds
out
in
fsubr
ror
jecxz
cli
cli
fisttpll
dec
leave
xor
mov
xlat
cmp
lock
cmp
sti
xchg
les
faddp
orb
aam
icebp
icebp
clc
xlat
int3
enter
fdiv
dec
xchg
cld
cli
in
in
imul
mov
enter
xor
icebp
xlat
clc
rcr
fcomip
int
ror
out
rol
in
lret
shl
cmc
out
iret
loopne
leave
int3
icebp
out
iret
in
ret
cmc
shl
out
cmp
mov
ljmp
lock
ror
ljmp
fucomp
cmp
hlt
mov
hlt
ljmp
int
out
lret
in
stc
xor
not
hlt
cld
iret
cmp
cmp
cmp
leave
std
xchg
jmp
hlt
rol
rcr
lock
cli
cmp
in
imul
jmp
mov
xchg
out
xor
lock
fcmovbe
ret
rolb
lea
cs
icebp
iret
in
cmp
ds
int
rcr
les
or
xchg
addl
hlt
into
out
repz
loop
loopne
aas
fsub
test
fdivr
int3
leave
idiv
orb
hlt
ljmp
lret
and
stc
ret
mov
call
std
xchg
jmp
int3
aaa
out
aam
lock
lock
xor
neg
loop
sbb
test
loop
call
sar
in
out
fdivrp
ffree
ljmp
fmul
ljmp
cmp
jmp
repz
in
aas
rcr
sti
sar
sar
faddl
call
out
fmulp
fcom
loop
aaa
out
loope
in
ret
fnop
loopne
loope
filds
fsubp
xor
ss
iret
cmp
cmp
cmp
xor
fdivrl
jmp
shl
std
imul
fcmove
xchg
int3
divl
xlat
ss
shlb
sarl
hlt
clc
cli
repz
fadds
lock
nop
out
call
leave
das
out
fucomi
lret
into
test
xlat
cmpb
shl
sti
les
repz
xlat
aam
fsub
fcomp
cli
xor
icebp
stc
icebp
out
cli
mov
cli
add
cmp
and
test
xor
cmp
cmp
lret
ds
stc
loop
sbb
fcomp
cmp
lock
in
out
cmp
jmp
mul
not
cmp
loop
jmp
filds
fcomip
xor
shr
fstpt
hlt
aaa
out
fsubr
out
ret
test
cmc
xchg
jecxz
leave
mov
rclb
loop
lock
lret
int3
enter
xlat
neg
repnz
leave
ffreep
sbb
jecxz
int3
add
shl
aaa
fdiv
rcl
cmp
filds
sub
mov
xchg
xor
cmc
fdiv
xlat
into
shl
shl
addl
sti
ljmp
loope
out
dec
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
mov
jle
jge
jl
rorl
rcr
xor
lret
xlat
adc
loope
lret
rcr
clc
xlat
fcmovu
iret
filds
test
imul
in
hlt
loope
loopne
icebp
sti
fcomi
loop
shl
xchg
sar
cmc
out
out
aad
rcl
fnstenv
fsub
ret
rol
dec
and
stc
iret
in
into
mov
aad
aad
shl
clc
std
std
fcmovu
out
aad
ret
int
xlat
xchg
stc
lock
iret
iret
loop
das
sub
jmp
cmp
loopne
aad
hlt
mov
cld
imul
call
ljmp
sti
dec
repnz
xlat
cmp
aas
aam
std
sbb
clc
lock
shlb
xor
rcl
icebp
jmp
cmp
aam
fmull
xchg
mov
xor
lret
std
ret
aaa
test
fstp
hlt
ret
orl
jecxz
repnz
xlat
xor
icebp
int3
sti
fcmovu
cmp
in
jecxz
stc
in
std
lret
rol
enter
int3
xor
int
xlat
rcr
out
loope
aas
clc
sti
mov
iret
int3
lret
lock
cli
aad
lret
iret
aam
call
sar
mov
orb
out
lret
ds
int
call
shl
clc
cmp
shl
cld
faddp
loopne
fimull
cmp
cmp
ffree
shl
sti
sar
jmp
in
out
shl
test
jmp
call
cmp
cmp
shr
test
cmp
mov
jmp
out
mov
in
in
int
xor
cmp
out
cmp
rcl
out
lock
sti
xchg
xchg
int3
int
cld
hlt
rol
shll
int3
call
repnz
loope
loope,pt
clc
ret
lret
lock
loop
fcmovu
lret
rcl
cld
lret
in
lock
sbb
xlat
ret
fcoml
stc
cs
aaa
fcmovne
out
jmp
std
out
fdivrp
incl
sub
xchg
cs
lock
ss
icebp
cmp
ror
sti
in
loope
mov
cld
ret
ret
cli
int
sub
sub
int3
repnz
std
ljmp
int3
aad
in
xlat
jmp
int
iret
jmp
in
ret
int
hlt
xor
in
rcl
cmp
fdivrs
not
fsub
mov
test
into
jecxz
vpaddsb
lret
cmp
hlt
shr
sub
add
jmp
loopne
in
fistl
aam
xor
icebp
repz
fcmovne
int
rcr
cmp
test
fnop
in
ret
xabort
out
loopne
aad
rol
cmp
in
cs
sti
cmp
leave
fsubp
in
in
fucomip
std
fdivp
out
rol
into
fnstenv
sti
std
sarl
fstp
jmp
loopne
flds
sarb
jmp
call
clc
ds
int
in
fcomi
shr
out
cmp
enter
int
addb
xor
cld
fdivrl
shl
test
xchg
mov
icebp
in
loopne
xor
in
lret
jmp
stc
shl
aad
xchg
repz
fsubr
cmp
out
loope
xchg
xor
aad
lret
fucomi
fcomp
sar
sar
cld
iret
ret
cld
in
sar
cld
lret
in
fdiv
in
shl
int
divb
enter
jmp
idivb
div
jecxz
cmp
and
jmp
xchg
jmp
aam
int
int3
aad
aaa
sar
cmp
aam
fsub
aad
fcomp
xchg
sti
sti
loope
sbb
xor
test
icebp
xlat
sti
shll
rcl
ret
add
or
int3
loope
loopne
stc
int
out
repz
int
cmp
int3
ret
jecxz
add
xrelease
sbb
sarb
ss
cmp
lock
xlat
shl
cld
sti
and
mov
xlat
fsub
lock
lret
jecxz
testb
mov
sbb
orb
ret
cmp
cmp
shl
out
shr
stc
mov
mov
sti
cmc
in
out
cmp
out
sub
rorl
les
out
xor
call
and
lock
and
testb
shr
shrb
jecxz
shll
ss
in
adc
in
jmp
out
and
shr
into
lret
leave
xor
icebp
shl
fisttps
filds
mov
pop
xor
jmp
int
enter
int
lds
push
cmp
jle
jge
jl
and
cmc
lock
out
fucomi
enter
into
cli
cmc
out
icebp
leave
xchg
pause
loop
aam
xor
cli
in
stc
faddl
cld
aam
in
jmp
cmp
repz
xlat
jecxz
stc
aaa
enter
cmp
rcr
loop
enter
loopne
in
mov
shr
fsincos
xor
clc
sar
cmp
xchg
std
neg
loop
in
out
mov
jmp
xlat
cmc
xor
neg
xor
clc
stc
test
ret
in
mov
xchg
in
out
int3
icebp
ljmp
cmp
out
into
out
into
faddl
jmp
jmp
out
mov
ss
out
out
idivl
into
cmp
clc
cmp
repz
fcomp
stc
call
ret
ret
stc
div
stc
cmp
addb
loope
test
mov
sbb
fstp
test
ror
in
xor
cmp
lock
sti
ljmp
cld
fadds
in
jecxz
repz
not
xlat
int3
shll
fiadds
loop
jmp
icebp
mov
lock
jmp
cmp
shll
ror
cmp
cmpb
fcmovbe
fldl
cli
in
fmull
iret
ljmp
std
sbb
loopne
fadds
ret
enter
adcl
enter
out
into
repz
stc
fmuls
rolb
idivb
imul
shl
shrl
xor
fcmovnu
fcmovne
loopne
aad
ds
mov
into
into
repz
xchg
shlb
xor
std
fdivrs
in
sti
cmp
cmp
in
rcr
test
in
or
xchg
jmp
icebp
xlat
repz
cmc
call
shl
cmc
out
loope
imul
icebp
in
adc
lock
aaa
cmp
sti
in
not
int
jmp
aas
movb
fcmovne
xchg
lret
jmp
sar
xor
clc
iret
cli
fistpll
cld
clc
in
mov
repz
aas
shl
sub
cld
fstp
fdivp
rol
leave
stc
cli
test
cld
mov
nop
imul
aaa
shl
aam
repnz
aad
rcl
aas
fdivp
lock
mov
xchg
ss
clc
in
lret
lock
neg
xlat
mov
and
std
mov
stc
in
xlat
rcl
xor
cli
lret
fmul
cld
loope
leave
xchg
xchg
jmp
out
mov
xor
out
sti
loopne
cmp
icebp
out
aam
ds
fucomip
jecxz
loop
shl
in
icebp
repz
call
cli
sar
repnz
cld
in
lret
lret
fxch
shl
xor
into
faddl
idivl
aas
not
fsubr
cld
incb
rol
iret
cmp
cld
sarb
cmp
shl
aad
cmp
out
ljmp
or
out
xor
xor
ss
repnz
repnz
push
mov
hlt
mov
clc
cld
icebp
sub
xchg
xchg
ljmp
hlt
lock
jmp
xlat
in
sar
rcr
mov
call
test
in
int
jmp
cmp
repz
idivb
test
and
and
mov
iret
in
icebp
rorl
shl
rcl
ss
sarb
lock
cld
int
out
in
shr
cmc
loope
aaa
icebp
cmp
cmp
shl
cmp
fdivrp
xlat
jecxz
adc
out
mov
mov
xor
int
xor
rol
cmp
fildl
nop
rorb
xor
aam
in
in
cmp
sti
repz
add
ret
mov
fadds
aad
xor
out
cmp
in
ror
ljmp
movb
loopne
fists
aaa
jmp
enter
fdiv
cmpb
loopne
out
std
mov
hlt
repz
in
xor
cmp
ror
cmp
fucom
mul
jecxz
loope
int3
in
mov
call
call
aaa
shl
cli
aas
fdivr
idiv
idiv
lret
mov
jmp
in
decl
aaa
icebp
fxch
lock
sarl
aad
cli
test
in
test
repnz
into
out
iret
repnz
rcl
stc
lock
in
iret
call
aad
out
in
shl
int
cmp
in
ds
cmp
cli
fdiv
jecxz
xchg
test
cld
call
pop
add
ror
aad
fistl
loop
pop
add
mov
jge
jl
xchg
int
stc
xlat
rol
cmp
icebp
cmp
cmp
loope
dec
enter
ret
call
leave
int
xlat
divl
xor
adc
fdivs
filds
jecxz
cli
xchg
int3
int3
xchg
xlat
aaa
hlt
in
call
out
cmp
incb
fnsetpm(287
enter
fiadds
into
fdivs
ret
shr
call
repz
ror
rolb
sbb
int
repz
cmp
jecxz
cli
sar
rol
fcmovb
sti
fcmovnu
lret
std
test
not
aam
xor
cli
fdivrl
loope
out
in
enter
iret
mov
test
xlat
in
xor
sti
jmp
flds
std
out
sti
lret
loope
rcll
clc
xlat
rcl
cmp
std
roll
aad
fld
call
rcl
loop
sub
lret
in
jmp
cmp
in
fadds
mov
fld
test
faddl
fnstenv
lret
out
fcmove
shl
loope
sarl
out
xchg
test
call
test
cld
jmp
aam
out
loop
in
xchg
xlat
roll
lret
mov
shl
sub
into
ljmp
lret
fxch
aad
sti
lret
mov
loopne
shll
mov
cmp
ljmp
aam
idiv
test
faddl
mov
leave
out
jmp
cmp
lret
cmp
cmpb
iret
clc
lock
mov
orl
fldcw
in
sbb
cmp
stc
fcmovb
test
idiv
mov
test
lret
ss
cmp
neg
cmp
in
test
leave
faddp
into
mov
lret
fdivl
ss
lock
jmp
lret
iret
faddp
test
cmp
lret
fisttps
shrl
in
rcr
xor
xlat
sti
loope
xor
rolb
mov
fcmovu
and
xor
xor
xlat
into
ffree
loop
add
mov
mov
mov
xchg
out
repnz
int3
sti
shl
cs
std
loope
cli
cmp
movb
std
test
out
in
jecxz
xorb
lret
cmp
iret
clc
fidivrs
xor
lock
push
ffree
test
out
cmp
ds
sarl
stc
movb
lock
cmc
test
out
enter
roll
iret
rcr
sti
dec
fsubr
fiaddl
xchg
nop
xchg
int3
aad
in
int
int
iret
repz
lock
iret
filds
sti
in
fcmovnb
mov
repnz
lret
das
xor
hlt
xor
out
into
dec
rolb
call
jmp
adc
repz
xor
fcom
icebp
repz
call
ret
leave
loopne
rol
addl
into
jmp
cmp
rcr
into
xlat
sar
cmp
hlt
cmp
mov
xlat
int3
int
test
out
xor
cmc
clc
jmp
hlt
div
call
ljmp
xchg
int
out
icebp
out
in
shrb
aad
in
leave
sti
shr
repz
sti
in
fcmovb
loopne
fcmove
add
iret
nop
repnz
out
ss
xor
fucomi
mul
jecxz
repz
cli
ret
vpand
in
and
rcl
rol
lret
cmc
hlt
out
fnstsw
rorl
jecxz
test
shr
aaa
fdivr
cmc
cmc
neg
cmp
test
test
fsubr
mov
enter
call
repnz
ret
add
sti
mov
lret
out
int3
enter
sar
cld
out
fidivrl
lds
out
lret
lret
in
and
out
in
not
shl
xorb
clc
test
call
out
in
out
rol
cli
in
rol
int3
shll
loopne
loope
stc
xlat
out
repnz
enter
shl
icebp
cs
xlat
aam
sar
std
in
cld
aad
fidivrs
fadds
add
out
fsub
loopne
mov
sub
jecxz
loop
stc
lret
aad
xlat
cmp
ret
neg
les
fchs
std
cli
mov
in
int
sti
not
in
aam
stc
aam
int
icebp
xchg
inc
incl
call
ret
xor
idivb
fsub
cmp
loope
add
fcmovnb
loopne
inc
sbb
lds
ret
push
mov
jmp
int3
ret
ds
fst
decl
gs
cs
cmp
jle
pop
add
call
cs
stc
jmp
aaa
out
aaa
lock
int3
cmc
shl
shl
shl
lret
cld
sti
in
loopne
loop
iret
leave
lock
cmp
xor
aam
ret
xchg
out
jmp
lret
std
nop
loope
fildll
das
out
test
cmc
sti
std
cmp
in
repnz
fcom
clc
call
mov
aaa
icebp
bnd
lock
out
fcmovne
jecxz
loope
sti
lret
mov
out
cli
out
shl
jmp
jmp
cmpl
fiaddl
or
icebp
repz
out
out
ret
out
out
xlat
cmp
cmc
loope
aam
clc
out
aad
repz
out
fnstenv
cli
sar
std
fcomi
xor
loop
cmc
test
xchg
jmp
int
les
out
cmc
iret
cmp
loopne
test
cli
fdivrl
out
filds
call
hlt
cmc
aam
hlt
and
fst
lds
sbb
dec
aam
in
lock
icebp
xor
fldlg2
faddp
addb
mov
into
int
sub
in
cs
repz
rcl
hlt
sbb
ret
lock
rolb
mov
fsubrp
iret
out
lock
cmp
cmp
xchg
loopne
mov
iret
sub
in
repnz
shlb
xor
fcmovne
repnz
test
ds
hlt
test
xlat
stc
jmp
out
std
jecxz
out
out
shl
lret
lret
cmp
out
loopne
out
lret
rolb
ds
shll
cmp
cmp
idiv
int3
hlt
repz
test
in
fld
mov
std
aad
xor
xor
in
sti
repz
lret
cmp
loop
in
addl
in
roll
out
xor
xlat
lret
fucomip
cmp
out
cli
fucomip
out
adcb
out
bnd
div
fdivrl
cmc
aam
fadds
xchg
fscale
out
out
shll
shl
in
fsubrp
out
sti
sarl
cli
sbb
call
int3
out
lds
out
lock
in
not
rcl
lret
fcomp
leave
mov
out
loope
clc
jmp
sbb
stc
int
fcmovne
xor
fiadds
clc
aam
jecxz
fcmove
mov
and
loopne
jmp
out
stc
fsubrp
cmc
in
in
aam
xlat
vcmpsd
iret
and
lock
lret
fyl2x
std
fidivrs
aas
call
hlt
jmp
mov
in
fisubrs
div
aaa
xlat
jmp
cmp
out
aad
xchg
fcomip
out
stc
sbb
sar
loop
int3
sub
in
ss
fdiv
xorl
into
icebp
rolb
cli
in
mov
test
repnz
int
pushl
int3
fcmovne
xlat
lret
sbb
movl
int
xor
out
cmp
cmp
icebp
fdivrp
out
lret
xchg
xor
aam
ret
sti
hlt
iret
jmp
iret
and
adc
and
lret
in
loop
xchg
divb
loope
cli
in
fsubr
jecxz
leave
cmc
xchg
or
jecxz
call
cs
int3
lret
fsubr
into
cmp
incl
sti
sub
leave
test
fsub
mov
repz
cmp
lock
repz
xlat
aad
orb
shl
test
ror
cmp
in
jmp
filds
mov
inc
roll
xor
in
out
clc
out
repz
cmp
ret
testb
mov
mov
loopne
add
jmp
out
xor
rol
cmp
shl
into
sarl
sbb
jmp
iret
xchg
shlb
sub
in
xor
int
shr
icebp
test
aad
test
cld
lock
and
loope
rol
clc
std
rcr
ds
cmp
aam
mov
fdivr
in
xchg
std
int3
loopne
in
xor
xlat
fcomp
cmp
repz
fadd
sar
sbb
loopne
loope
std
pop
mov
rolb
icebp
sar
in
cmc
jmp
repz
loopne
aam
sti
fiaddl
iret
lret
cmc
lret
into
lock
xor
loope
ds
mul
adc
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
jbe
adc
jle
pop
add
lret
int
icebp
nop
lock
shll
out
icebp
cmp
fld
cli
out
sub
int
enter
out
cld
lock
cmp
out
aam
ds
iret
jecxz
ret
fisttpll
mov
cli
std
mov
add
xor
in
cmc
cld
shl
ss
xlat
ret
sti
jecxz
faddp
leave
xchg
sub
cmp
stc
lret
sub
fistpll
ret
test
adc
call
std
xrelease
mov
call
int3
fucomip
out
loopne
in
stc
enter
decb
rol
lret
out
cmc
stc
cmpl
rol
in
fldl
in
mov
test
out
out
leave
xlat
leave
xor
stc
hlt
fidivrl
fsubp
loope
test
out
mov
lock
jmp
in
cmp
loopne
fidivrl
ret
cmc
rcl
xchg
test
test
mov
into
jmp
repz
out
clc
xchg
call
jmp
std
enter
xor
jmp
idivb
cmp
add
not
loopne
in
jecxz
mov
in
fucomp
aas
shlb
xor
out
ljmp
aas
out
lock
fisttpl
lret
aad
rcl
stc
std
out
std
ds
rol
in
fucomip
jmp
dec
loop
xchg
icebp
cmc
fmul
hlt
xor
cmp
divl
and
in
loop
clc
in
hlt
lret
fimuls
out
jmp
ss
enter
iret
loop
jecxz
loop
call
out
mov
cmc
in
lock
jmp
lock
xor
aam
ret
in
fcos
stc
decb
jecxz
dec
xor
xchg
mov
sar
fsub
idiv
addb
in
enter
mov
ret
ss
fsubr
ds
cmp
hlt
xchg
std
fiadds
int
mov
icebp
xchg
in
enter
repnz
int
lock
ffree
bnd
aas
fadd
iret
test
lret
shl
jmp
jecxz
shr
ljmp
clc
icebp
cmc
jecxz
clc
std
ljmp
cld
repz
out
call
stc
xorl
fcomi
repz
out
mov
lret
std
mov
ds
rol
out
sti
in
std
aas
into
aad
repnz
in
sti
or
hlt
int3
imulb
clc
rol
cmp
jmp
cli
icebp
repz
testl
clc
xchg
lock
repnz
loop
in
jecxz
les
cmp
cli
std
clc
testb
fcmovnbe
adc
das
fprem
lret
shl
cld
cmp
jmp
aad
stc
mov
loopne
into
ljmp
xor
int3
into
cmp
rcl
cld
loop
and
rcl
mov
fadds
aam
fmulp
ljmp
cli
cli
xor
ret
xchg
ror
jecxz
mov
xlat
iret
iret
stc
sbb
aad
cli
icebp
fcmovne
call
lret
call
int
test
repnz
xor
xlat
in
stc
loop
test
cli
xchg
mov
and
aad
xor
repz
sti
sti
lock
fmulp
cmc
loope
fchs
fcomp
aam
out
lret
call
sub
shl
divl
jmp
lock
out
cld
std
ret
cld
xlat
aam
lea
fiadds
xor
std
stc
repz
shl
vpextrw
jecxz
out
in
in
test
xor
repnz
cli
fcomip
ss
not
flds
jmp
flds
repz
hlt
shr
int3
shlb
testb
stc
repnz
jmp
jecxz
mov
nop
cmc
fcomip
fsubr
sub
stc
cmp
rcr
int3
cmp
fst
loope
out
ljmp
rcl
icebp
in
int3
sti
ds
add
cmp
lret
fsub
xchg
fadd
xor
aad
loop
fstpt
sti
ds
test
aad
in
in
fmul
ret
fimuls
call
fcmovne
ror
stc
lock
out
icebp
fcmove
xor
out
int
shl
shr
rcl
out
fidivl
mov
xlat
sti
in
repz
cld
cmp
enter
lock
call
loop
out
in
iret
cmp
in
into
ror
cld
in
in
clc
cmp
movl
subl
jmp
lret
ffree
fst
in
notl
fcomps
sbb
jle
pop
add
test
loope
mov
jecxz
xchg
lds
shlb
lret
neg
cmp
aad
shl
cmc
aas
cmp
loope
ret
xchg
cli
iret
in
fbstp
aam
xor
jmp
in
fistpll
cmp
ret
fiaddl
aad
mov
xchg
in
ds
shl
jmp
ffreep
rcl
rcl
loopne
fcmovne
in
fpatan
std
in
lock
jmp
repnz
jmp
loop
cmpl
les
rorl
lret
cmp
cmp
push
fadd
fcmovb
out
repnz
fcomi
jecxz
fucomp
lret
int3
int
push
lret
loopne
ret
lock
fdivrs
sti
loope
out
cmp
loope
test
int3
int
cld
cld
xchg
in
enter
dec
rcr
fdivr
in
xchg
sti
loope
ljmp
jecxz
fdivs
in
sti
sar
fcom
sti
aas
fstpt
jecxz
mov
orb
aaa
int
xor
ss
clc
iret
iret
addl
addb
loop
enter
ss
xlat
fcomi
cmp
jecxz
fxtract
mul
call
mov
divl
jecxz
aam
stc
cs
jmp
lret
cmc
out
test
out
aad
fadds
xchg
lea
xlat
fsub
not
shl
xlat
repz
repz
leave
fsubp
xchg
fadd
mov
lret
in
int3
std
imul
fsincos
lret
shl
loope
jmp
out
neg
mov
cli
in
icebp
mov
std
int3
cmp
shl
cli
testl
iret
call
test
lds
fcmovb
sar
lret
rcr
rol
loopne
cmp
jmp
loopne
out
xchg
aaa
fldcw
int
enter
fstp
std
shl
fld
sub
jecxz
enter
fidivs
out
jmp
cmc
fucomip
cli
fcom
fst
vshufps
jecxz
xor
sub
stc
ljmp
xchg
cmc
cli
repz
xchg
sti
lock
aad
loope
loopne
fucomi
int
out
aam
in
cmc
xor
mov
mov
cmc
loop
in
lret
repz
cmc
in
into
jecxz
hlt
cmp
out
std
fptan
ret
out
mov
test
sar
aam
shll
iret
cmp
cmp
sar
out
aam
fxam
ret
fsubr
nop
addb
cmc
xor
cmp
xlat
stc
ds
cli
addl
loopne
jmp
loopne
int
ss
cmp
cmp
repz
fcomi
loope
shl
not
fsubr
into
std
cmp
mov
stc
hlt
cmp
xor
fcmovbe
neg
idivb
test
aam
xlat
xlat
hlt
leave
in
test
in
adcb
lock
cmp
fcmovnu
cmp
rcr
cmc
sub
fmuls
ljmp
cld
cmc
cmp
xlat
out
std
aas
sar
stc
xchg
hlt
out
enter
jmp
xchg
rcl
call
push
enter
shl
sar
sti
cmp
clc
std
jmp
out
cmp
fcmove
adcl
fidivs
out
fdivp
cmc
fcomi
clc
rol
filds
xchg
out
xchg
out
ret
cmp
idivl
adc
shl
in
jmp
decl
aam
shlb
out
fmul
cmp
out
fdivr
jecxz
int3
ret
aad
out
int3
out
rcr
out
in
cs
xor
xor
rcl
idivl
aas
repz
in
sar
cmc
or
icebp
iret
jecxz
fisttps
aad
out
iret
xor
pushl
lock
repz
mul
ljmp
fisttpll
loopne
fcom
rcl
les
xor
cmp
rcr
out
into
mov
orb
in
enter
repz
ds
cmp
adc
fmull
mov
repnz
in
call
fcomi
xlat
ror
ret
lret
call
test
ljmp
shl
cmp
fcomp
repz
test
iret
or
call
cmp
cmp
cmp
cmp
fcmovnbe
fsubp
xlat
loopne
cmp
clc
mov
out
mov
cmp
aaa
leave
cld
cmp
ret
repz
out
fdivr
jmp
fmulp
xlat
out
ss
imul
icebp
not
lret
cmp
jecxz
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
and
dec
cmc
jle
pop
add
repnz
orb
lock
bnd
lret
in
xor
jecxz
test
in
xchg
sbb
inc
shll
shlb
lret
out
fnstsw
iret
cmp
fsubrp
call
out
mov
call
in
ret
in
xor
cli
fcmovbe
call
out
shl
shl
and
xchg
and
shr
ljmp
aaa
cmp
loope
fdivrs
filds
sar
call
int3
faddp
loope
iret
sub
sub
vpminsw
cmp
hlt
testb
std
cs
vpxor
hlt
icebp
aas
test
sti
addl
out
loopne
fmulp
mov
aam
lock
cmp
lock
aam
rorb
loope
lret
loopne
out
enter
xor
cmc
jmp
ror
ds
sti
incb
iret
mov
shr
inc
enter
out
not
lret
int
aas
incl
test
enter
stc
out
ror
aam
sub
jmp
out
cli
fdivrl
mul
out
cmp
leave
jmp
lds
call
aam
lret
shr
call
lock
aam
cld
xchg
shlb
fmul
repnz
aad
mov
leave
fisttpll
nop
in
pop
leave
fldl2e
jmp
call
stc
stc
out
leave
cmp
adc
jmp
jmp
xor
fcom
xor
repz
adc
sti
lds
mov
cmp
jmp
iret
cmp
fidivs
cmc
cld
aam
jecxz
cld
loopne,pt
loopne
out
lock
fisttpll
xor
fcmovnbe
fiadds
ds
shl
fsubp
aad
fsubrp
mov
divb
shr
leave
int
enter
shl
shl
hlt
ds
mov
xchg
out
call
out
lret
in
in
neg
enter
in
cmp
fprem1
loope
in
mov
mov
in
iret
mov
aaa
icebp
xor
shr
fucomi
shl
iret
aas
xlat
std
adc
fld
clc
mov
out
test
xor
lock
in
rcr
cmp
ret
rcl
aad
mov
fisttps
in
xor
lds
iret
enter
iret
fiadds
and
cli
jecxz
cld
cmp
mov
mov
das
ds
loope
fnstcw
addb
xchg
int3
xor
aad
repnz
xor
rcr
neg
cmp
or
iret
std
into
ljmp
sub
in
xor
in
cmp
adc
faddp
enter
cmp
xchg
addb
cmp
in
int3
lret
aad
cmp
fcmovnb
rcr
repz
clc
fsqrt
jmp
jmp
xor
ret
hlt
repnz
cmc
cmp
out
incl
out
sub
sar
fucompp
std
loop
fxch
in
fcmove
clc
xlat
cmp
sarl
loopne
loopne
cmp
mov
loope
aaa
fnstenv
cmp
adc
ret
shl
hlt
hlt
loopne
and
xchg
lret
jmp
in
out
leave
hlt
cmp
addl
jmp
loope
clc
mov
loopne
lret
jmp
out
aam
test
aad
loope
out
stc
fadd
clc
clc
enter
out
std
xchg
fdivr
jecxz
lock
sub
jmp
sti
rcl
aam
cli
out
out
mov
push
fdivp
jmp
cmp
aad
jmp
icebp
test
sar
ret
in
out
mov
out
in
test
icebp
in
ss
icebp
cmp
leave
fsubr
sarl
aad
out
xchg
ljmp
fists
enter
repnz
aaa
push
stc
jmp
cli
cmc
stc
idiv
fimuls
mov
repz
neg
hlt
out
std
loopne
repz
lock
and
lea
into
in
in
aam
fstp
jmp
cli
cld
lret
ret
sti
fldl
enter
ss
cli
stc
cmp
int3
or
std
leave
out
cmp
test
lret
mov
mov
ret
lret
cmp
cmp
repz
lret
rolb
fucom
in
out
icebp
loope
fimuls
fadd
aad
cmc
aam
ss
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
enter
jle
pop
add
xchg
shl
cmc
loop
imul
sub
sar
loop
in
in
lret
icebp
lret
jmp
cmpl
and
fsubrp
aam
aam
not
cli
repz
hlt
int
rol
aad
in
cmp
mov
in
and
iret
shl
out
loopne
out
rcr
xor
cmp
cmp
jmp
out
ffree
lret
ljmp
aad
icebp
cli
sti
sti
loope
xor
fdiv
sar
hlt
cld
inc
sub
test
lret
cmp
xor
stc
out
cmc
test
in
fsubrp
enter
cmc
fmul
stc
in
shl
cmp
cmp
cld
jmp
iret
rorl
fsub
mov
mov
xor
aad
icebp
aad
out
jmp
hlt
repz
cmp
mov
fiaddl
nop
xchg
jmp
imul
in
call
fdivr
cmp
clc
idivb
ds
ljmp
cmc
repz
fdiv
shr
loope
ret
cld
cmp
xchg
jmp
call
not
xor
ret
cmp
shl
rcl
repz
clc
loope
jmp
iret
shl
lea
out
sti
loop
lret
leave
ljmp
push
mov
test
jecxz
mov
fadd
rol
xor
shr
lret
jmp
loop
in
hlt
mov
orb
in
loope
enter
xor
lret
cmp
hlt
lock
hlt
jecxz,pt
jecxz
loopne
rol
out
test
loopne
lock
mul
jmp
lret
neg
fcomip
idiv
fld
shl
in
mov
out
addl
out
cmp
fcomi
in
test
fxch
ljmp
out
mov
call
cmp
cmp
fdiv
icebp
loope
cli
mov
iret
mov
clc
out
fsubrp
jecxz
in
hlt
jmp
aam
cmp
cmp
aad
ret
cmp
int
loop
xchg
jmp
jmp
into
out
in
out
ljmp
add
sti
ret
mov
loop
int
stc
xor
into
aaa
jmp
xor
sti
ret
test
fcmovnb
enter
ljmp
ret
mul
cs
hlt
leave
in
aam
ret
in
xlat
cld
xlat
bnd
int3
rcr
in
loopne
hlt
lret
ret
stc
cli
into
ds
aad
xchg
addb
iret
xor
ret
cmp
addl
orb
out
hlt
test
out
clc
out
icebp
das
fdiv
idiv
aas
hlt
cmp
jmp
mov
jmp
mov
rcl
cmp
in
icebp
lret
rcr
ds
jecxz
clc
jmp
in
loope
loopne
call
lds
sub
lret
shl
aas
rolb
lret
ror
nop
shr
aam
fmul
out
cmp
fdivp
xor
xor
roll
xchg
out
loop
mov
shr
ss
leave
xor
test
fcmovnb
cmp
repnz
shr
jecxz
call
fcmovne
rcr
rcl
fxch
enter
fst
loope
fcmovnb
stc
imul
fsubr
mov
cld
mov
out
shl
cmp
cli
int3
shr
cld
repnz
fadd
in
jecxz
out
loop
vpslld
ret
fcmovne
cld
ljmp
cld
cld
loopne
enter
loop
int3
xchg
jmp
in
lock
out
ljmp
fsub
lock
loopne
jecxz
fiaddl
jmp
mov
mov
stc
loop
lock
cmp
imul
std
cmp
sbb
fst
xchg
ret
lea
in
out
jmp
jmp
enter
in
inc
adc
lret
ljmp
in
shl
sti
clc
call
cmp
into
int
filds
loope
enter
in
repz
div
into
jmp
stc
cmp
dec
stc
std
lock
stc
xchg
sar
cmc
loope
int3
int3
icebp
leave
xchg
jecxz
clc
xlat
lock
ss
xor
shl
cmp
aam
out
repz
jmp
lret
icebp
ror
cmp
out
call
out
repnz
jmp
lret
test
loopne
orb
in
lds
cmp
shl
aad
out
in
test
cld
ror
loop
repz
int
not
cli
xorl
jmp
aas
ror
aas
aad
iret
rol
adcb
in
fstps
mov
jle
pop
add
repz
hlt
fdivp
stc
aam
aam
mov
out
lds
repnz
icebp
jmp
lret
xlat
ror
iret
cmp
out
testl
call
out
call
in
cld
aad
cmp
cli
jmp
fsubrp
mov
hlt
mov
jecxz
jmp
in
cmc
in
clc
in
loopne
incb
fildl
in
in
icebp
ss
in
xor
out
out
enter
cmp
shr
neg
stc
xchg
mov
lret
orb
jecxz
in
in
shl
sti
std
xchg
xlat
in
repz
ret
iret
fcmovnbe
lock
int3
fidivrl
cmp
cld
aas
sarb
cmp
test
fsubr
xchg
mov
test
cmp
ljmp
aas
rcr
cmc
sti
xlat
out
in
shl
xchg
nop
repz
jmp
rcl
fsub
inc
and
mov
leave
sub
icebp
lock
in
loope
int3
enter
fldl
aam
rorb
clc
int
mov
nop
fnstsw
call
call
in
shl
fdivr
aad
hlt
fmulp
enter
fcomip
faddp
ljmp
std
sti
fadds
aam
loopne
xchg
mul
out
icebp
test
jmp
in
into
xor
cli
fsub
cmp
sarl
xchg
fsub
stc
test
out
fcmovnu
lock
addl
hlt
cld
in
repnz
repz
ret
cli
ret
out
cld
loop
out
out
loopne
jecxz
repnz
out
lret
leave
jmp
xlat
test
sar
and
lock
loop
call
xchg
lock
in
div
iret
xor
fdiv
int
cmp
dec
aad
test
aam
orb
iret
cmc
loopne
ret
xor
frstpm(287
aam
in
fsub
loop
rol
out
fdivrl
mov
aas
int
loopne
jecxz
cmc
lret
and
xlat
cmp
jmp
out
out
neg
icebp
aas
xchg
loopne
mov
shl
int3
out
cmp
int3
neg
rol
xlat
aam
hlt
fst
test
mov
dec
clc
xor
idivb
xlat
idiv
cli
cmp
sarb
test
mov
fcmovbe
std
in
test
or
xchg
iret
loopne
rcr
fstpt
jmp
hlt
std
cmc
cli
test
clc
test
xlat
faddp
sti
xchg
jecxz
sub
test
into
cmp
addb
mov
ret
sub
mov
repz
lock
out
xlat
ror
ds
test
mov
xchg
call
lea
aaa
lock
push
cmp
stc
in
cmc
ret
cmp
ds
fdiv
flds
mov
xchg
inc
out
xor
lret
xor
out
stc
aaa
ss
icebp
adc
test
in
out
lock
out
shr
aam
shl
cmp
hlt
and
sub
stc
out
mov
sub
hlt
icebp
in
ret
loop
cmp
repnz
in
lret
mov
flds
in
stc
xor
sub
repz
rol
fsub
stc
shr
loope
loop
mov
jecxz
aam
cmc
iret
icebp
bnd
and
jmp
or
xbegin
out
leave
ror
xor
lret
in
xlat
int
out
std
fcmovnu
incl
decb
int3
out
loopne
repz
cmp
icebp
repnz
aam
sti
shl
fstpt
ret
lock
or
fimull
out
leave
xlat
int
call
in
sar
repnz
xchg
loopne
call
in
and
stc
out
shr
jmp
loope
cld
hlt
hlt
ret
clc
enter
fucomip
clc
lret
loope
xchg
in
cmp
xor
rcl
adc
test
movl
xchg
and
jmp
rcr
icebp
xlat
lret
std
shl
ffreep
rcl
hlt
ljmp
repz
mov
enter
xlat
loope
idiv
int
ffreep
bnd
incb
jmp
cmp
les
cmp
add
fiaddl
lret
xchg
orb
div
stc
clc
fstp
clc
lock
fptan
orl
out
int3
leave
shll
aad
cmp
sarb
rcr
ret
clc
in
out
loopne
mov
rclb
hlt
rcl
aaa
ss
xchg
jb
add
roll
add
add
add
pushl
cmp
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
jae
inc
js
cmpb
add
faddp
fdivrp
loopne
rolb
les
iret
mov
test
xor
imul
fstpt
cmp
hlt
repnz
ds
shl
mov
repz
enter
iret
mov
mov
out
ljmp
sti
loopne
in
call
loop
in
cli
xlat
mov
out
clc
fimuls
xor
leave
stc
xlat
iret
fildl
cmp
jecxz
incl
xchg
in
ret
in
ss
clc
std
sti
sarb
in
roll
out
or
in
fadd
adc
rcl
fstpt
fcomi
call
shl
cli
xlat
cld
lds
in
xlat
icebp
fmul
into
aaa
int
lret
ljmp
xchg
cmp
loop
test
ficoms
lret
aam
ds
int3
rcr
stc
aad
aam
aam
hlt
sti
test
cld
ror
rcl
shl
call
in
ds
cmp
cmp
mov
iret
ret
xchg
xchg
aad
into
out
out
sti
leave
lret
out
int
in
into
cmp
out
sti
incb
mov
test
das
lret
shl
leave
xlat
neg
rcl
in
xor
fildl
incb
iret
out
fsubr
xor
not
cmp
fcmovb
in
into
fcmovnbe
lds
mov
loop
xchg
lock
rol
cli
fdivrs
repz
cmp
loope
mov
ret
iret
loop
fcomi
sar
xor
cli
jecxz
cmp
lret
lret
icebp
int3
in
shl
jmp
fxch
xor
lock
xlat
ljmp
aas
sti
sub
mov
leave
int
xchg
loop
shrl
in
in
cmp
int3
fnstsw
lock
fcmovne
cmp
fstp
mov
ret
shll
out
in
cmc
testb
and
ljmp
repnz
in
sub
ljmp
cmpb
into
icebp
stc
out
clc
add
testl
int
xor
cmp
cs
clc
fxtract
aas
in
in
out
mov
out
iret
mov
lret
jecxz
loopne
icebp
rol
lret
xlat
out
clc
cld
ds
hlt
jmp
in
call
xchg
and
aaa
fld
ror
aam
sar
fcomip
fstp
std
cmp
sub
int
loop
rcr
ljmp
shlb
xor
aam
rcl
iret
roll
clc
lret
test
mov
aaa
call
call
and
faddp
rcl
mov
int3
mov
call
icebp
xor
xor
out
sti
lock
icebp
rcl
xor
ret
stc
neg
iret
sti
rorb
loopne
xor
enter
cmp
into
fucomp
rcl
ret
out
jmp
loopne
out
lock
leave
in
aam
rcr
loope
repz
cmp
hlt
fstp
fcmove
stc
jmp
mov
xchg
xor
imul
xor
lret
fstp
icebp
rol
fsub
loopne
and
test
in
fsub
in
mov
out
repnz
fxch
call
cli
clc
loopne
clc
in
sti
cmc
jmp
enter
repz
cld
in
out
cmp
into
int3
std
xor
int
shr
repnz
clc
leave
mov
clc
xchg
xor
aaa
xor
cld
cmp
cmp
addb
ljmp
sub
xor
cmp
cmc
cmp
sti
lock
aas
test
jecxz
bnd
leave
lret
mov
xor
xor
sti
xor
lock
fcmovu
test
test
addl
enter
mov
out
xor
leave
leave
out
leave
cli
ss
rolb
test
fiadds
mov
fmulp
repz
shr
out
out
call
xchg
repnz
rcl
iret
in
shr
call
repz
div
aam
sar
cld
loope
clc
test
call
rcl
cli
cmc
clc
aas
out
fidivrs
sar
out
cmp
test
lret
ret
fmull
iret
in
das
shll
sarb
cmp
icebp
hlt
into
aas
lock
ljmp
adc
sub
lret
in
in
ss
std
stc
clc
in
ret
in
fscale
cld
into
cld
out
adcb
std
cmc
repz
xor
repnz
mov
clc
fdivrp
xchg
test
aam
xor
into
stc
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
or
mov
pop
add
call
xor
hlt
ds
mov
mov
hlt
cmc
repnz
rol
dec
cmc
enter
loop
xchg
fdivrp
call
jmp
jmp
xchg
jmp
jmp
rcl
jmp
out
loop
cmp
lock
aam
stc
stc
into
mov
div
xor
lock
jmp
loope
clc
in
std
icebp
dec
mov
into
int
mov
fcoml
cmp
out
iret
mul
aad
sti
loopne
cmp
sti
xlat
enter
or
fildl
lock
fcmovnb
out
fcomi
xor
fistpll
out
aam
enter
fld
ljmp
shll
xor
out
lock
cli
shl
sti
ret
vpmaxub
sub
repnz
int
cmp
fcmovu
aad
loopne
adc
hlt
cmp
in
enter
les
icebp
cmp
aas
fmul
ds
loop
rol
ljmp
lret
jmp
lret
int
repz
ss
xlat
fdivrp
repnz
fld
loope
xchg
test
loop
loop
xor
xor
std
cmc
cmp
out
std
sarl
call
clc
out
ror
xor
lret
jmp
aaa
call
fdivp
cmc
leave
stc
in
out
out
xchg
out
call
cmp
rcl
stc
hlt
loope
test
test
iret
jmp
cli
lock
shrb
aad
sub
fdivp
hlt
fadds
cli
shl
jmp
in
out
loope
jecxz
nop
ret
int3
hlt
cmc
cmp
imul
sar
loopne
ds
shl
fmul
lea
in
shlb
xlat
clc
enter
xlat
cmp
shl
xchg
xlat
ret
fadds
rorl
call
std
fdivr
icebp
cmp
ret
fsub
call
int3
int
rclb
sub
aad
iret
bnd
out
sbb
and
fsubrp
and
icebp
loop
xor
ss
cmp
icebp
fsub
loopne
repnz
repz
addl
ss
fdivr
cmp
jecxz
rol
mov
in
fimull
fsubrl
xor
ret
ret
cmp
out
call
std
rcl
xlat
fcmovu
hlt
mov
into
cld
shl
jmp
ljmp
into
cmp
out
fstp
out
rcr
cli
clc
shl
int
loope
xchg
lock
loop
jmp
cli
repnz
loope
stc
fdivp
aam
repz
test
mov
leave
enter
in
out
icebp
cmc
xor
in
sti
call
stc
aas
loope
test
sub
icebp
out
int3
jecxz
in
leave
fst
not
out
fdivrs
fadd
aam
xlat
repz
mov
mov
icebp
xchg
out
cs
xor
int
out
leave
cmp
fnstcw
rol
loopne
test
repnz
into
xchg
lret
mul
cmp
in
icebp
out
lock
lret
cmc
loope
clc
aad
loopne
lret
in
cld
out
jecxz
fsubp
xor
shrl
icebp
jmp
iret
cmp
sti
enter
fsubrp
test
iret
iret
vpor
fucomp
aas
out
ljmp
xlat
cld
testb
jmp
cli
int
fdiv
hlt
enter
rcl
rolb
incb
cld
in
xchg
in
test
ss
shl
stc
out
out
std
aas
cmp
ss
xchg
leave
leave
into
icebp
roll
cmc
fcomi
ss
sarl
aas
ss
fadd
std
ret
loope
iret
in
cmc
iret
xor
fld
ror
fdivrp
out
call
cli
jmp
fcmovne
in
loopne
out
mov
int3
idivl
shr
call
fsub
sti
rorl
ffreep
cld
leave
ljmp
ror
aam
aas
sti
enter
cmp
faddl
lret
xchg
loope
repz
cmp
call
xlat
fdivrs
rol
fstp
icebp
xor
call
in
lret
not
icebp
repnz
not
sti
repnz
jecxz
cld
into
aam
lds
mov
aad
out
fdiv
out
aam
enter
fcomip
in
out
loop
hlt
repnz
cli
in
loope
ror
call
xor
xor
iret
cld
jmp
aas
sbb
aad
fisttpll
shr
add
ret
int3
and
inc
fs
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
cmpsl
push
sbb
pop
add
cmp
fdivrs
aam
loopne
shl
orb
ret
xchg
loop
ljmp
lret
out
xor
aas
into
cmpl
xchg
cli
orl
leave
out
cmp
repnz
div
cmp
iret
xchg
test
in
lea
sub
ror
stc
xor
cmc
lret
rcl
dec
fabs
in
fcmovnu
leave
fimuls
std
in
jmp
lret
enter
sti
sar
repz
ret
fincstp
rorl
iret
in
into
loope
rcl
call
ljmp
hlt
in
loope
ret
in
test
out
fst
mov
loopne
xor
lret
jecxz
sti
into
shl
sbb
cmc
aad
cld
sar
out
fsubrp
iret
aas
hlt
repnz
fucomip
fnstcw
jecxz
rol
std
mov
stc
imul
out
jmp
in
jmp
xlat
icebp
fdivrs
dec
loope
in
idivb
roll
out
repz
int3
mov
xor
lock
sarb
aam
loopne
shl
cmp
enter
loope
xchg
out
out
out
out
out
sub
stc
cld
hlt
xchg
jecxz
in
in
out
into
in
xor
cmp
neg
hlt
mul
aam
leave
out
test
iret
jmp
in
out
aam
xor
sarl
aas
hlt
fcmovnu
std
out
rolb
ljmp
div
ds
jmp
lock
rolb
in
ljmp
loop
iret
fyl2xp1
jmp
aaa
fdiv
aam
xor
fsub
mov
xchg
in
mov
xchg
into
ds
out
aaa
jmp
cmp
lock
rcl
fcomp
ret
jmp
clc
mov
ljmp
out
shlb
jecxz
aam
cmc
cmp
hlt
test
into
loopne
loop
sub
out
shlb
ss
fmul
in
xlat
fcomp
fsub
in
aas
ffreep
iret
call
shl
xor
repz
sar
cmc
clc
aas
loopne
jmp
jmp
fldl2t
into
fiadds
sub
loop
jmp
cmpb
shl
in
shl
ret
out
out
out
fmull
in
xor
enter
cmp
sar
lret
ljmp
sub
out
div
std
cmp
int3
cmp
in
aas
repnz
loop
repz
aam
aas
in
mov
leave
lret
aad
aad
cmp
lock
shr
ret
cli
mov
les
int3
aad
leave
xor
int3
int3
sti
fsin
int
shl
shl
jecxz
aad
ret
fildl
mov
in
imul
repnz
leave
leave
stc
ds
loop
loope
iret
rol
leave
sti
inc
test
into
test
jmp
sub
test
repnz
stc
fdivr
jmp
lret
lds
loope
repz
xor
shlb
fldl2t
into
clc
fcmovu
repz
iret
rcl
loope
mul
fucompp
xlat
cli
xchg
out
in
lea
sub
xor
xor
loop
clc
cmp
fsubr
les
test
std
nop
out
orl
cmp
leave
lret
fistpll
cmp
repnz
sbb
out
idivl
xlat
enter
cmp
cmp
sti
sub
xchg
cmc
les
fcmovbe
icebp
xor
sub
xor
in
enter
fdiv
incb
xchg
fsub
mov
repnz
lock
aam
cmp
aam
test
and
in
cli
jmp
in
cld
fstp
subl
out
imul
std
xor
cmc
jecxz
in
jmp
lret
clc
std
sbb
fdiv
enter
out
aam
aas
rcr
icebp
fcompp
cmp
fadd
mov
call
out
sarl
int3
out
xor
leave
fst
div
neg
aad
ret
fcomi
or
loope
call
cmc
shlb
ds
fdivs
aam
loop
not
cli
leave
mov
cmp
stc
out
jecxz
ljmp
xor
cli
iret
cmp
icebp
cli
hlt
rolb
jmp
xlat
sar
xchg
mov
shlb
test
cmc
sti
fcom
hlt
cmp
ds
loopne
leave
lds
in
in
repnz
in
leave
lds
shl
cmc
ss
fcomp
cmc
out
fcmove
movb
or
cmp
jmp
aad
fstl
mov
jl
add
not
repz
sarb
fdivs
not
fdivrs
sarb
in
ffreep
jmp
fmulp
in
stc
loope
lret
lret
out
in
cmp
jmp
int
aad
in
aad
decb
mov
loopne
nop
jmp
cmp
xor
ss
fcomip
cmp
mov
mov
int
stc
ljmp
fdiv
loopne
roll
fsub
and
call
jmp
in
iret
lock
cmp
int3
lret
cmpb
xlat
mov
cmp
in
loop
in
loope
fnstenv
cmp
xor
fsub
ret
aam
incl
clc
int
cld
mov
mov
repz
xor
cmp
icebp
in
repnz
fadd
rcr
jmp
hlt
lret
fimull
xchg
shl
fldlg2
xor
std
clc
loope
loopne
div
movl
nop
lret
xchg
mov
hlt
icebp
loopne
icebp
icebp
iret
sti
loope
repnz
out
add
xchg
out
call
orb
mov
cmp
clc
cmp
ret
hlt
rol
jmp
and
lea
leave
xlat
rol
ljmp
int
repz
leave
fildl
call
xor
loope
xor
cmp
sti
int3
cli
sti
add
rcr
xchg
idiv
std
enter
jmp
xchg
lret
sub
clc
out
cld
cmp
out
jecxz
into
std
rolb
xchg
in
xchg
test
aam
xlat
cli
cmp
fucomp
cli
aam
jecxz
adc
aad
mov
iret
fld
icebp
shr
shl
ljmp
ror
loop
ret
incl
in
ljmp
out
imul
sar
out
call
in
ret
jecxz
cli
sti
loop
fdiv
sti
mov
mov
iret
stc
repz
cmp
clc
hlt
and
xchg
clc
mov
loop
iret
mov
out
mov
shl
shr
iret
xlat
cmp
in
int
ret
cmp
in
stc
fcmove
mov
ljmp
aad
repz
cmp
shl
xlat
ljmp
mov
xchg
in
fsubr
loopne
incb
mov
clc
cmp
into
ret
in
sti
out
fcmovne
out
mov
xchg
or
aad
lret
aad
ds
fst
cli
in
addb
out
fcom
repz
loopne
leave
xlat
neg
aad
fdivrl
cld
fsubp
cli
stc
cmp
cmc
loop
test
cmc
aam
icebp
xor
int
xor
clc
imul
mov
iret
xchg
sub
jecxz
out
in
out
adc
repz
out
fadd
incl
icebp
sti
jmp
lret
ret
enter
cmc
cli
not
xlat
repnz
sti
aad
xchg
out
mov
cli
mov
fiadds
out
imul
xor
iret
not
out
mov
aam
aad
out
faddl
and
sarb
fcomi
aaa
aad
loope
int3
aam
repz
addl
iret
mov
out
in
aam
std
cmp
idivl
loope
in
fmul
aam
sub
icebp
cld
loope
ret
int
hlt
lock
aaa
fdivp
cmp
shl
in
cli
les
bnd
loopne
iret
sti
in
sti
hlt
sar
xchg
mov
repnz
fchs
xchg
xchg
xchg
test
shlb
ffree
in
int3
cmp
aas
neg
repz
aam
ds
leave
loopne
loop
in
sub
shl
ss
int
icebp
ret
loope
icebp
jmp
call
enter
cmc
enter
xor
icebp
cli
in
aas
std
xchg
fucomp
cli
test
out
fimull
out
xor
in
rcl
cmp
cmc
in
std
cli
cld
std
xchg
int3
jmp
rcr
mov
test
jmp
aam
ljmp
repz
loope
enter
cld
loop
mov
div
cmp
idiv
xlat
enter
stc
iret
in
xlat
hlt
shl
cmp
xor
cmp
and
hlt
aad
shl
shll
ljmp
cmpb
hlt
aad
jecxz
or
enter
ror
cs
cmp
ds
iret
std
cmc
ret
and
stc
out
xchg
lock
das
out
repz
icebp
aam
cmp
aas
fdivp
xor
shl
cmp
std
xor
cld
jecxz
xchg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
stos
imul
pop
add
xchg
xchg
aaa
jmp
vcvttss2si
shll
out
loopne
ds
addl
in
leave
xchg
in
in
nop
int
into
xor
leave
std
loope
loopne
icebp
rcl
out
neg
mov
mov
call
int
cs
sub
repnz
loope
repnz
imul
ljmp
hlt
iret
icebp
xor
clc
repnz
ljmp
iret
in
mov
aam
call
xchg
into
icebp
in
hlt
out
shlb
ret
clc
cmp
call
int
icebp
jmp
xchg
sti
cli
xchg
clc
into
lret
out
loope
not
call
loopne,pt
fninit
cmc
in
loop
rorb
iret
lock
xchg
mov
cmp
hlt
lret
repz
idiv
cmp
loopne
aas
clc
lret
ret
xchg
ss
cli
enter
repz
aas
fmull
out
in
in
mov
xlat
in
xor
fcomp
aas
into
aas
jecxz
in
rol
in
jecxz
sub
ljmp
jmp
in
ds
repz
iret
fcomi
addb
iret
ljmp
xor
xlat
enter
enter
hlt
rcl
aad
aas
aas
shl
call
out
fisttps
int3
out
jmp
int3
cmp
xor
fdivrp
dec
std
cld
xchg
lock
add
ret
int3
lret
loope
rol
in
ds
cld
rol
mov
lret
shr
test
loop
rcl
in
cld
in
cmp
lret
int3
inc
fcmovu
aad
test
loopne
into
fists
int3
xlat
cmc
shl
into
test
fcomip
cmc
sti
test
sti
cli
imul
cmp
rcr
jecxz
aaa
xor
repnz
rolb
in
mov
incl
shlb
ss
rcl
out
ljmp
incb
loopne
test
loopne
call
shl
in
lret
lock
lock
sbb
fildl
cmp
sbb
in
fidivs
ljmp
lock
fcmovbe
stc
ljmp
adcl
into
out
cmc
fldz
xlat
in
iret
enter
out
cmc
aam
dec
jecxz
fsubp
in
out
faddp
in
fcmovne
in
in
int
cmp
cmp
rcr
cld
loopne
int3
out
fadds
into
cmc
cmc
aaa
ror
int3
imul
sar
clc
std
in
out
stc
leave
mul
jecxz
loop
in
hlt
ret
in
in
fdivrl
call
in
repz
fisttpll
mov
leave
call
loop
ljmp
aad
lock
cmp
fisttps
repnz
repz
std
out
clc
xor
xor
cmp
lock
roll
jmp
out
sub
ret
cmp
sbb
cld
cld
stc
mov
fimuls
call
leave
sti
xor
cld
xor
cmp
loope
ffreep
hlt
in
jmp
xlat
xchg
into
shr
icebp
rcr
hlt
ss
icebp
cmc
hlt
leave
cmp
vpaddd
loope
clc
in
xlat
add
call
xor
repz
jmp
cmp
loopne
fmulp
test
xlat
cmc
cmp
fdivr
out
out
loop
ljmp
repz
cmp
enter
in
out
jecxz
adc
mov
cmpb
mov
in
xor
ret
icebp
in
xor
cmp
ror
int3
stc
out
cld
test
cmp
stc
aas
ret
jmp
lea
xor
in
xor
stc
ds
cmpl
cmc
aad
xor
cld
or
std
mov
repz
ljmp
call
loope
xor
jmp
out
xchg
shl
mov
shr
stc
ss
sar
xlat
aad
loope
loope
jmp
loopne
lret
in
repz
aaa
cmc
out
cs
test
out
test
xor
int3
iret
ljmp
int
cmc
loop
repz
sarl
ffreep
hlt
enter
xchg
ljmp
jmp
int3
cld
hlt
jmp
sti
sbb
clc
rol
fmull
incb
lret
lret
sarb
ret
cmp
out
repz
out
cld
loop
mov
out
fcoms
out
imul
iret
clc
xlat
cmc
shll
loopne
fistpll
loop
lret
mov
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
pop
add
js
lcall
xabort
loopne
xchg
int
int3
cmp
lret
aam
fcmovne
icebp
in
stc
sti
std
mov
sbb
out
orb
in
jmp
sti
aas
cld
cmc
loopne
loop
jecxz
test
test
fcmovu
mov
in
out
loope
out
shr
lock
rol
sti
loope
cmp
cli
aas
iret
rcr
cmc
sbb
xchg
fmul
ror
lret
subb
lret
xor
out
fcmovbe
shl
fstp
loop
rol
enter
xchg
and
fucomp
loope
lret
mov
out
dec
loop
iret
fcos
test
out
int
jecxz
xchg
in
shr
lds
xor
leave
fld
jmp
in
xor
rol
loop
cmp
repnz
ret
int3
into
shl
loop
rol
ret
in
shll
xor
cmp
hlt
shl
mov
or
cmp
roll
icebp
xor
out
fbstp
xlat
cmp
cmp
sbb
mov
test
fadds
xor
into
aad
out
cld
cmc
aad
jecxz
std
in
fldln2
in
cli
in
lock
test
in
iret
cmp
call
cmp
sar
fimull
jmp
xchg
lret
xor
jmp
jmp
aas
ror
stc
icebp
hlt
cmc
std
call
adcb
ss
shl
sar
cmp
into
fidivs
clc
shl
xor
in
mov
mov
lock
repnz
in
lret
frndint
ss
test
cld
clc
repz
hlt
int3
xchg
in
adcb
ret
fpatan
jmp
div
int3
stc
cmp
std
fisttpll
xchg
xchg
lret
test
iret
lock
imul
fnstsw
fsub
div
stc
call
xchg
mov
aaa
shr
iret
shl
xlat
cmp
fnstenv
icebp
in
int3
rol
in
rcr
fmulp
xchg
xchg
xlat
iret
sti
jecxz
int3
div
repz
out
aam
loopne
and
jmp
lret
cmc
shr
xor
in
icebp
testl
test
out
lock
mov
ljmp
fsincos
ror
cli
int
out
aad
call
loop
call
fdiv
out
aam
imul
cld
rcr
clc
ss
call
mov
ljmp
cmc
icebp
lret
repnz
cmp
into
sar
loop
fsubrp
xchg
in
xchg
lock
sarb
repz
repz
shl
in
stc
roll
fcmovnu
cli
les
int3
icebp
fld
iret
ret
fsubr
cmp
testb
leave
ret
hlt
cli
stc
fsubr
fucomip
xor
in
int
vpor
lock
idivb
cld
icebp
rcr
repnz
hlt
std
faddp
out
repnz
inc
repnz
xor
fildl
fadd
incl
imul
loopne
mov
shl
subb
mul
icebp
shr
int3
out
in
sti
ljmp
test
loope
ljmp
lret
cli
rcl
xor
shlb
cmc
loopne
aad
ret
fdiv
jecxz
xchg
testl
shll
icebp
xor
repnz
fcomip
repz
repnz
jmp
loopne
mov
hlt
ret
in
cli
cmp
loopne
hlt
std
in
roll
jmp
nop
lock
xchg
call
sarl
sarl
hlt
xchg
neg
jmp
int3
leave
cmp
icebp
icebp
xor
sti
in
repz
out
into
aas
rol
in
ret
out
mov
ljmp
stc
neg
fdiv
sar
iret
fsubp
addl
test
in
icebp
decl
xor
clc
fnstcw
rcr
xor
rolb
fadd
lret
call
mov
hlt
hlt
int
out
cli
aad
iret
aas
incl
jecxz
icebp
fucom
leave
addl
out
aam
out
lret
shl
fsubr
lock
ds
loope
addl
in
out
aaa
repz
stc
out
jmp
cmp
stc
aad
rcr
inc
repz
fmuls
mov
call
loopne
loopne
loop
cmp
cs
cmp
cmp
rcr
faddl
cld
mov
fstp
xchg
out
fld
repz
hlt
iret
rcr
into
icebp
aam
cmp
mov
fsts
out
out
call
clc
icebp
call
fdivr
in
ljmp
cmp
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
push
xchg
mov
jl
fsub
fiadds
lret
in
out
jmp
clc
std
loope
sarl
stc
mov
mov
lock
xchg
lret
nop
sbb
in
lock
enter
sar
rcr
cld
cld
neg
xlat
test
std
fcmove
out
xor
fsubr
hlt
xor
xor
cmc
iret
cmp
cli
xchg
fdivr
idiv
icebp
cli
iret
out
icebp
loopne
jecxz
rcl
cmp
aas
repz
in
loope
jmp
dec
loop
lret
in
mov
leave
in
xlat
out
repz
xor
cmp
icebp
int
iret
aam
iret
mov
div
clc
ret
mov
lock
xlat
hlt
in
fucomp
xor
fcmovu
out
std
aad
rol
stc
testb
mov
ljmp
rcr
aas
out
test
cmp
les
jmp
cld
out
out
jmp
out
lock
lret
lock
cld
hlt
out
test
out
loope
xchg
in
in
in
cmp
lret
sarl
ljmp
repnz
call
xchg
fmuls
int
jmp
bnd
imul
cli
aas
out
sar
jmp
cld
lea
repz
repz
aaa
ljmp
lock
into
jecxz
repnz
les
in
ficoms
xor
lock
aas
jecxz
add
in
mov
mov
ljmp
into
aaa
repz
fidivrs
add
in
aam
loopne
int
loopne
cld
mov
xor
std
out
test
int
into
inc
jmp
fsub
clc
fiadds
xchg
mov
jmp
int3
repnz
div
test
in
cmp
faddp
leave
div
movl
xlat
mul
jmp
out
cld
out
lock
rolb
sti
rol
cmp
rcll
jmp
fcmove
loopne
aad
cmp
rcl
xchg
mov
iret
in
loop
mov
ret
aad
cmp
dec
fcmovnu
ret
testb
jmp
jmp
aad
das
xor
leave
out
xor
aad
std
fcomip
test
clc
lret
int
mov
sbb
mov
fyl2xp1
leave
fcmovnb
sar
fcomp
int3
cld
loopne
lock
ret
loopne
cld
flds
xchg
into
icebp
cmc
jmp
aam
sar
icebp
loopne
out
sbb
cli
loope
stc
addl
lret
sti
hlt
hlt
xlat
ror
loopne
rcl
f2xm1
sti
lret
testl
adc
cmp
ljmp
cmp
clc
aas
loope
ror
in
fstp
in
in
int
xorb
aam
xor
iret
idivb
div
cmpl
loopne
incb
int
lret
orb
das
jecxz
in
aam
lret
icebp
ror
cmc
ret
ljmp
out
enter
jmp
cmc
xor
cmp
out
repz
cmp
fucomi
out
mov
mov
cmc
std
icebp
in
cli
aas
fcmovnu
shl
xchg
lret
sti
loopne
fldl
sti
in
stc
lock
ret
and
xlat
fdivrl
fucomip
loop
orl
xor
mul
out
repz
cmc
out
ss
call
hlt
sub
sub
xlat
cmp
xor
aad
call
ss
loope
enter
mov
cli
lock
jmp
int3
das
sar
fldl2t
jmp
fsubr
iret
loop
in
ret
in
repnz
call
xlat
mov
mov
sub
repnz
cmp
clc
aad
cld
cmp
loop
faddl
fsubr
mov
call
std
clc
fidivrl
call
rolb
clc
jmp
jmp
ljmp
jmp
xor
cmp
and
sub
cli
mov
and
out
mov
out
into
lock
xor
xor
int
aam
fstpt
ret
xlat
in
mov
jmp
into
mov
in
xchg
xor
hlt
shlb
cmc
fcmovnbe
repz
in
cmp
sti
rcr
ret
in
call
in
out
xchg
aas
aad
cmp
lret
lret
loopne
cmp
in
rcr
fsub
xor
in
xchg
shl
jmp
ror
xor
aad
cld
std
filds
ret
repnz
test
ds
xor
out
ljmp
jmp
fdiv
adc
xlat
call
sahf
fs
add
add
add
aam
rcl
aam
insb
bound
movsb
jle
pop
add
clc
xchg
iret
cli
mov
into
lock
xlat
cmp
sbb
stc
std
in
repnz
hlt
neg
loope
cmc
shll
call
out
lock
repnz
roll
cli
jecxz
call
int3
int3
xbegin
cmp
clc
fadd
repz
clc
repnz
lret
jmp
out
rol
int3
ss
cmp
idiv
shl
not
aad
loope
testl
ss
rcl
iret
into
jmp
neg
clc
mov
bnd
sub
and
xlat
out
ret
jmp
cmp
cld
test
ret
jmp
test
ljmp
repz
xor
idivl
into
aaa
xor
add
sarb
cli
std
std
lret
in
fsub
fimuls
cli
cld
fsubr
aas
fcmovb
inc
sbb
shl
fmuls
icebp
iret
cld
lret
xor
out
out
jmp
ds
shr
cli
fistpll
aam
cli
fdiv
test
shl
xor
out
repnz
aad
into
aad
ljmp
jmp
neg
mov
mov
fcom
out
leave
int
ljmp
ret
out
ds
loop
xlat
clc
iret
and
int3
xor
out
leave
in
aaa
fcmove
cmp
ds
out
loope
ret
and
imul
test
lret
in
jmp
xor
xor
xor
imul
cmp
or
rcl
mov
aad
lret
out
in
repz
lret
les
fmul
repnz
rolb
xor
into
mov
div
rcl
fsubr
das
repz
repz
ds
lock
repnz
filds
std
jecxz
lret
int
repnz
shl
jmp
int
and
les
jmp
out
cmc
xbegin
int3
cmp
cmp
std
repnz
testl
in
std
in
aam
xor
out
loop
clc
in
out
clc
int
or
add
stc
in
iret
test
ret
std
jmp
in
enter
std
sub
cmc
in
rolb
int
faddp
mov
aad
jmp
ret
xor
fsubr
lret
fistpll
aas
fadd
and
in
ret
out
shl
iret
int
xor
xor
cmp
fucom
in
sar
call
in
xchg
mov
loop,pt
fcmovnb
aam
fdivrl
repz
fcmovnb
leave
sti
cld
lret
out
filds
xor
int
hlt
in
fprem
shl
test
fcomi
xchg
fdivr
in
mov
test
out
ljmp
rcr
cmp
in
and
rolb
sbb
repz
rcl
xlat
loopne
aad
sti
into
cmp
cmc
repz
shr
cmp
loop
rorl
xor
repz
xor
shl
aam
push
repz
cmp
mov
mov
lock
in
jmp
xor
enter
fsubr
ret
aad
in
stc
loopne
out
in
repz
out
std
leave
cmp
std
fdivr
aad
into
into
fcmove
aas
clc
jecxz
sbb
mov
loop,pn
repz
int3
cmp
ret
cmp
or
fldz
filds
xor
into
hlt
std
repnz
jmp
or
les
out
mov
fsqrt
xchg
not
xor
aam
lock
hlt
fcmove
fdiv
loopne
cmp
fadd
aad
leave
sti
out
xchg
jecxz
mov
adc
aam
sub
lret
fidivs
iret
fucom
loope
cli
fdivr
stc
test
out
rcr
rclb
fcmovnbe
xor
repnz
repnz
into
ret
cld
orb
ficoml
ret
in
fcmovu
enter
imul
xchg
call
test
cmp
std
fsubp
iret
xchg
iret
out
loop
loopne
jmp
sti
fcmovu
cmp
fdivrp
cmp
loop
mov
hlt
out
sub
in
lret
cmp
idivl
in
fadd
mov
in
mov
lret
ret
enter
rcr
in
fmul
int3
out
cmp
iret
rolb
out
fsubr
loop
xor
repnz
fcmovnu
fadd
cli
clc
repz
loop
xchg
in
loopne
ror
fimull
int
repz
xor
cmp
shl
cli
call
repz
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
in
ljmp
rcr
inc
loope
lret
idiv
icebp
std
ss
cli
aad
les
loope
stc
fsubrp
sub
cmp
sub
div
ror
cmp
cld
fucom
xchg
idiv
std
mov
xchg
div
call
cli
in
cmp
iret
roll
fdivr
xlat
mov
jmp
test
iret
jmp
out
iret
sti
hlt
into
cmp
mov
ljmp
lret
lock
out
ljmp
rorb
clc
mov
subl
out
aam
fcmove
lock
ljmp
ds
mov
call
jecxz
loopne
enter
xchg
hlt
ror
out
ffree
std
aad
jecxz
cmp
in
in
neg
int
in
dec
shr
in
out
cmp
cmpb
loopne
repnz
int
loope
fiaddl
out
xor
out
int3
lret
repz
sti
repz
aam
jecxz
fiaddl
cmp
mov
aaa
ret
xor
rol
xlat
lock
test
in
rcl
mov
iret
repnz
int3
fsubrp
hlt
stc
sti
filds
ljmp
shl
call
in
repnz
idiv
icebp
clc
icebp
cmp
shl
xlat
test
cli
loopne
mov
fsubp
xchg
out
xchg
xor
lock
xlat
cmp
stc
cli
cld
cmp
hlt
rol
mov
mov
iret
in
stc
rcr
jmp
in
lock
test
hlt
out
mov
mov
call
lret
orb
shl
rcl
into
shr
cmp
lock
cld
roll
out
jmp
out
in
repz
shl
imul
loop
lock
stc
icebp
hlt
fcmovnbe
loopne
cld
cli
out
cli
lds
out
loope
out
stc
repnz
jmp
stc
jmp
fcmovu
iret
into
cli
roll
call
test
cli
mov
out
in
into
cmp
sti
adc
cmp
ljmp
fsubr
mov
cld
xor
sti
sti
sar
cmp
shl
sarb
cld
fisttps
mov
rcl
xor
into
xlat
out
sbb
cld
fdiv
in
idiv
in
clc
into
roll
icebp
ljmp
cld
sarb
testl
mov
fidivs
divl
out
repz
fdiv
int3
fdivr
icebp
cmc
div
std
fcmovne
ljmp
icebp
repnz
shll
int
loop
out
fdivr
sti
not
jecxz
fcmovu
cmc
jmp
loop
in
int3
enter
rcl
loop
in
repz
hlt
shl
fidivrs
hlt
int3
idivl
fstpt
hlt
repz
int
fldl
loop
repnz
in
cli
xor
cmp
out
iret
sti
loope
shl
fildl
jmp
mov
and
aam
xor
fcomi
out
repz
cmp
cmp
sti
push
out
rcl
rolb
xchg
lret
int
xchg
ror
lock
cli
aad
aad
hlt
int3
out
lock
shl
testb
call
xor
hlt
fst
fscale
rcr
ret
cmp
jmp
ret
mov
mov
fcmovb
xchg
loopne
xor
leave
int3
int3
rol
cli
aas
in
repz
test
clc
ffreep
ljmp
into
call
out
repnz
fbstp
loopne
iret
fcmovu
hlt
clc
fildl
jecxz
int
int
int3
ror
jmp
cs
xlat
out
rcr
stc
cld
roll
sti
out
decb
shl
out
xor
in
vshufps
aas
aas
and
repz
cmp
movl
jmp
icebp
repnz
in
aad
repz
aad
test
mov
lds
loope
mov
xchg
test
in
iret
xor
lock
shl
cmc
clc
clc
jmp
out
add
nop
in
in
ds
ljmp
cmp
in
out
idivb
enter
fucom
sti
sti
sti
test
xchg
jecxz
fcomip
or
and
mov
mov
or
int
int3
enter
into
cmc
call
or
sarb
rorl
cmp
test
jecxz
into
in
cs
xlat
call
lock
cmc
neg
test
cli
out
jmp
in
in
shl
aad
lret
out
fst
cld
ret
fidivrl
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
pop
push
pop
add
ret
mov
in
mov
fists
out
fcomi
lret
out
aam
xlat
lock
aad
ljmp
nop
fcmove
in
xchg
in
rol
leave
cli
iret
repnz
aaa
in
loop
fildl
fcmove
mov
mov
test
int
shrb
call
xor
in
jecxz
jecxz
rcr
fxch
flds
xchg
lds
xor
in
rcl
icebp
leave
fadds
cmp
loope
stc
xlat
xchg
out
sar
nop
mov
aad
leave
std
aas
lret
ljmp
loopne
sub
iret
ror
std
jmp
cmp
in
lock
int
hlt
test
fsubp
test
ret
cli
std
sti
in
fisttpll
rol
xor
icebp
enter
lret
rcr
fdivr
xchg
add
ffreep
mov
repz
call
ds
cmp
cmp
leave
loopne
enter
stc
loope
loop
ljmp
cmp
fcmovnu
std
rol
shl
ret
cld
test
jecxz
mov
in
lret
lret
ror
call
cmc
repnz
hlt
fadd
ror
cmc
aam
fmulp
in
in
test
out
fsubr
test
in
rcl
xor
xlat
sub
enter
ret
aas
hlt
shl
ret
orl
in
loope
out
cmp
cli
cmp
repnz
xchg
mov
in
icebp
enter
leave
fcmovbe
out
sti
fcmovbe
fstpt
int3
shl
ret
lret
sbb
out
ror
lret
ret
in
xor
repz
out
call
repz
rcl
call
iret
std
int3
int3
xchg
popl
xor
fdivrs
into
cld
aaa
cld
repz
fcom
loope
fcmovu
loopne
repz
lret
lret
ss
and
ss
cmp
aad
addl
stc
icebp
fidivrl
shl
or
cli
out
test
repnz
fstp
test
rol
stc
xor
int
aaa
sti
xlat
fildl
ret
cmc
in
inc
enter
test
int
loop
loop
leave
xor
cmp
into
icebp
fdivr
fsubp
call
loope
jmp
repnz
ret
divl
std
cmp
in
movl
fmull
in
aaa
into
out
icebp
out
cld
in
int
sar
aad
in
in
fld
loop
int3
xchg
cmc
lret
aaa
ss
div
lret
out
shll
test
jecxz
out
mov
rol
aaa
mov
fmulp
rolb
rol
mov
fdivr
cli
popl
stc
sub
aam
xor
sti
out
std
rcr
shr
mov
frstpm(287
in
jecxz
lret
in
lret
enter
shr
cmp
aaa
cmp
cmp
fisttps
out
out
shl
loop
jecxz
clc
shl
xlat
cmp
xchg
jmp
loope
ret
mov
mov
repnz
ljmp
test
hlt
in
jmp
add
stc
repz
repz
fidivl
cld
clc
hlt
jmp
jmp
aas
and
ret
stc
out
ljmp
iret
out
xor
jmp
out
cmp
cmp
shl
in
les
out
mov
leave
sbb
into
xor
out
sub
aad
cld
out
cmp
fdivrp
and
stc
fdivrp
test
loopne
int3
mov
in
shr
out
xlat
fdiv
sarb
shr
not
loop
shl
test
call
xchg
not
in
icebp
sar
in
sti
in
cmp
and
stc
fsubr
in
xchg
xchg
cmc
jmp
xor
aam
icebp
leave
test
stc
aaa
sar
repnz
rol
idiv
nop
cld
jecxz
sub
xor
xlat
xor
enter
clc
icebp
in
loope
call
in
xchg
std
xchg
mov
jecxz
enter
iret
sti
cmp
aaa
std
enter
loop
sti
lret
cli
test
jmp
std
into
ror
loop
out
xorl
repz
fsub
rcl
mov
enter
clc
mov
loop
icebp
rcr
leave
fcmovnbe
cmp
roll
rcr
fmuls
jmp
enter
ret
xlat
sar
lret
repz
aas
rcr
shl
loop
cli
rcr
test
jmp
call
jmp
cld
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
mov
pop
loope
mov
jl
jl
jl
out
cmp
ret
out
cmc
lock
test
iret
clc
in
in
rorb
xor
icebp
stc
cmp
ror
lret
lret
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
