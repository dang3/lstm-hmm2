push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
jp
jp
pop
jp
and
daa
cmp
jno
jne
cmpsb
ja
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
sbb
inc
insl
inc
scas
inc
aad
psubq
add
push
loope
adc
jb
jge
xor
rolb
xchg
dec
addr16
out
mov
xlat
or
sub
add
sarl
jecxz
rclb
lcall
out
jl
iret
out
clc
xorb
lock
lret
test
nop
push
pop
idivl
test
push
adc
jo
xor
adc
sahf
fdivrs
mov
dec
mov
in
inc
fstp
inc
and
mov
lock
dec
enter
fistl
inc
sar
inc
cmp
stos
js
mov
mov
xchg
add
and
sub
jo
and
mov
insl
gs
mov
push
out
lret
mov
mov
inc
aaa
pushf
push
or
jne
adc
test
mov
je
sbb
sub
lret
or
sarl
xchg
xchg
sub
aas
sub
sub
cmp
call
rorl
mov
lds
mov
cmp
xchg
and
dec
aaa
js
xchg
add
cmp
lahf
popa
mov
pop
inc
or
roll
mov
sub
and
fucomi
push
mov
inc
stos
add
mov
imulb
das
pop
repnz
leave
sbb
cmp
add
dec
xchg
add
jnp
pop
mov
mov
clc
cmpsl
popf
dec
fistpl
das
enter
into
jns
icebp
jne
xchg
mov
addb
jae
lret
jbe
push
sub
imul
call
push
lahf
inc
dec
negb
clc
loop
push
sbbb
sub
sbb
popf
adc
out
mov
bswap
in
pop
fs
jns
push
adc
stc
fsubl
scas
por
jle
test
cmp
mov
lods
cmp
lret
xor
adc
into
jge
adc
inc
push
and
fcoml
pop
sub
push
repnz
das
out
jb
jle
xor
fmull
cmp
call
and
nop
mov
data16
adc
sbb
sub
cld
or
push
pop
or
mov
loopne
js
enter
imul
pop
dec
or
pop
and
cli
lret
out
loop
or
fldcw
pop
jo,pt
pop
xchg
lcall
popa
adc
push
and
xchg
xchg
push
test
pop
adc
outsb
sub
xchg
jno
xchg
inc
xchg
pop
add
std
rorb
in
pusha
inc
int
shlb
scas
mov
out
cs
sbb
iret
inc
mov
and
and
push
push
or
xor
add
pop
xchg
adc
jmp
mov
sti
jl
xchg
aad
push
aam
gs
adc
mov
loopne
and
pop
faddp
pop
popf
jmp
adc
cld
scas
push
lods
fidivl
inc
push
dec
mov
clc
xchg
mov
es
pop
jl
lahf
xor
mov
push
push
add
push
clc
loope
xor
inc
adc
lea
mov
out
pop
xchg
push
pop
in
sbb
xchg
lods
adc
js
mov
aaa
dec
xchg
fxsave
mov
dec
fcmovnb
cmpsl
aas
jne
lds
cli
mov
push
aad
sub
mov
cmp
inc
icebp
mov
in
or
push
xor
inc
adc
imul
push
in
les
mov
lret
stos
andl
fisttps
call
mov
insl
pop
adc
pop
imul
pop
test
repz
dec
dec
pop
xchg
sbb
lock
scas
aad
cltd
sti
mov
jbe
adcb
sbb
mov
mov
divb
dec
sbb
out
in
push
mov
jle
popf
mov
lret
sub
lret
fcoml
andb
mov
insl
jbe
sbbb
inc
pushf
sahf
call
rclb
daa
sub
cmc
inc
jmp
orb
es
pusha
das
jb
pop
push
test
mov
mov
add
jge
dec
push
xor
xor
sbb
mov
insb
fs
sbb
scas
popf
adc
mov
cli
lock
push
inc
cwtl
dec
icebp
fisttpll
xor
fidivrl
jne
mov
sbb
daa
shll
jg
sbb
rcl
mov
add
sbb
aas
pusha
push
mov
or
dec
ret
fiaddl
movsb
shll
repz
sub
cltd
mov
cmovo
pop
lock
jne
cmpsb
cmp
and
xor
bsr
loopne
push
cmp
inc
pop
aad
adc
and
cmpb
data16
aam
push
js
cltd
push
nop
jne
rcrl
cli
out
lahf
cli
or
pop
mov
mov
aad
sarl
dec
mov
and
pop
or
inc
out
loope
jmp
es
mov
inc
inc
inc
or
pop
jmp
push
dec
rcrb
jmp
push
fcmovne
push
mov
xchg
popf
movsl
pop
lock
xchg
mov
pushf
mov
adcl
mov
sub
xlat
sbb
xlat
fwait
scas
lahf
movsl
and
shll
test
mov
add
stos
xor
xchg
mov
mov
stc
stos
fwait
push
leave
jmp
adc
push
popf
js
xchg
inc
sub
inc
mov
out
mov
cmp
jae
adc
call
mov
aaa
jae
scas
test
add
jo
aas
inc
xchg
or
mov
xor
jae
mov
jbe
outsl
nop
int
imul
and
es
and
dec
shr
xor
cmp
adc
push
mov
out
imul
xor
jns
and
mov
cmpb
adc
int3
pop
sub
mov
adc
jecxz
sbb
std
mov
lods
addr16
aas
pop
jb
jb
test
into
xchg
cs
scas
push
push
mov
int
repnz
orl
cmp
cmpsb
push
test
inc
inc
mov
popf
pop
lret
insl
addl
push
jbe
loopne
fiaddl
test
inc
fiadds
cmp
dec
pop
aam
push
fadds
push
jns
jg
movsb
in
fwait
sbb
pop
mov
into
inc
lret
imul
mov
shr
or
sub
and
pop
jo
insb
sub
pop
pop
es
mov
and
dec
cmp
push
xor
push
imul
shll
loopne
inc
xchg
xchg
xchg
pop
mulb
push
cmpsl
out
mov
xchg
adc
cwtl
push
jns
sbb
mov
mov
aas
sub
sbb
jae
clc
fldt
mov
or
jp
mov
or
inc
mov
sti
mov
cwtl
std
and
pushf
jp
jns
loop
cmp
jl
xchg
mov
out
int3
push
movb
es
xor
sahf
enter
jp
xchg
popf
and
mov
mov
into
ds
lds
lcall
mov
mov
push
lods
sbb
pop
mov
jnp
sbbb
cltd
add
add
imul
push
sbb
mov
in
sbbl
out
mov
lret
pop
adc
xchg
sub
add
fisttpl
sub
xchg
cs
dec
nop
xchg
icebp
les
mov
dec
mov
xchg
enter
out
or
adc
ja
push
dec
fwait
scas
loopne
scas
in
adc
jp
pop
cld
in
mov
or
testl
fadd
jmp
nop
cmp
xor
les
sub
adc
mov
cmp
sti
cmp
add
js
das
or
sarb
add
jmp
mov
test
int3
psubsw
jae
scas
pop
out
push
and
or
outsl
jle
mov
dec
pop
lcall
icebp
mov
pusha
and
dec
jne
xchg
pop
jb
mov
push
fistpl
add
pop
aam
call
sbb
aad
test
aaa
sub
inc
pop
mov
jae
or
inc
scas
mov
outsb
and
or
inc
mov
pop
mov
clc
loop
repnz
inc
nop
inc
dec
hlt
cmp
xor
xor
imul
adc
int3
and
cld
fcomps
stos
in
and
jmp
mov
sahf
and
and
fs
cmp
cld
mov
mov
movsl
cmp
xor
std
dec
mov
pop
add
mov
jae
inc
lea
out
int3
lods
sbb
xlat
mov
and
adc
inc
pop
repz
inc
inc
push
subb
lret
xor
mov
scas
mov
jb
sysenter
ja
ljmp
jno
fsts
daa
shrl
xor
inc
dec
popa
xchg
call
fidivs
ds
loopne
jge
and
sbb
mov
dec
lret
push
cli
mov
mov
lret
xchg
std
push
pop
inc
mov
inc
push
pop
push
mov
sub
push
leave
jnp
xor
addr16
and
cmp
and
leave
cs
sahf
pop
mov
jl
sbb
mov
jl
cwtl
fwait
jg
xchg
sub
mov
popa
cmpb
orb
add
sahf
xchg
shlb
bound
xchg
out
js
pop
mov
mov
cmp
mov
xor
add
out
pop
jo
js
pushw
ret
push
inc
loop
repnz
and
insb
or
push
int
sbb
pop
push
jno
js
jp
cwtl
mov
push
in
loope
in
adc
and
cwtl
pop
fnstsw
ss
mov
add
pop
sbb
sub
int3
sahf
imul
mov
pop
movsl
jne
ret
rolb
cwtl
mov
leave
jo
xchg
addl
and
jp
fisubl
popf
fisubrl
mov
subl
xchg
pop
cmc
pop
lret
xor
cmpsb
cmpsb
mov
inc
rcll
xchg
and
mov
and
sub
mov
ss
mov
or
loope
clc
and
popf
mov
fiadds
mov
mov
adcb
xlat
pop
bound
xor
in
push
pop
inc
imul
test
inc
inc
movb
and
xor
out
jge
adc
xor
leave
data16
insb
mov
mov
xchg
out
test
ja
lret
add
jecxz
mov
pop
fcmovb
sbb
scas
pop
ja
into
push
in
mov
inc
outsb
ss
loop
or
ja
adc
sub
inc
bound
mov
push
lea
and
fistpll
sub
pop
rorb
xor
lahf
rcr
lea
lock
out
fs
jg
in
mov
insb
sub
loopne
mov
push
nop
outsl
jne
push
icebp
arpl
jnp
add
js
loop
cltd
or
in
cmp
mov
jae
cli
ljmp
and
cld
imul
les
dec
xor
fwait
ss
pop
rcrl
addl
movsb
jmp
jmp
xor
push
dec
fcmovnbe
out
lock
sbb
insl
push
jmp
loope
mov
je
fcoml
jb
push
mov
mov
ror
rorl
mov
aaa
scas
sti
es
xchg
aas
stos
add
adc
adc
insl
pop
inc
in
and
ss
mov
incl
fimull
sbb
rcl
jecxz
imul
pop
test
push
mov
jne
xchg
fbstp
lock
dec
out
aam
push
les
int
mov
imul
push
je
pusha
pop
call
cmc
notb
addr16
or
mov
xor
jmp
subb
or
fldenv
out
sbb
add
mov
mov
stos
xlat
out
inc
and
inc
and
pop
adc
aam
xor
aas
mov
xchg
inc
mov
int3
mov
inc
inc
shrb
mov
cmpsl
pop
and
data16
sbb
cmc
add
out
or
adc
cmp
in
mov
jo
mov
ret
rclb
in
pushf
jg
int3
push
cmp
pop
js
cmpsb
push
push
xlat
imul
fldenv
inc
into
pop
xor
sbb
fsub
cs
rcll
mov
cmpsb
ja
es
push
pop
in
xchg
adc
adc
icebp
dec
sbb
scas
and
inc
or
pop
pop
dec
dec
and
out
jae
sbb
adc
gs
js
movsl
adc
fsubs
aaa
stc
and
in
lahf
ret
cmp
std
pop
imul
mov
cmp
ljmp
fsub
mov
pop
leave
nop
scas
adc
xor
pop
cmc
pop
dec
shlb
sbb
push
pop
scas
test
sbbb
movsl
push
add
rcll
pop
cmp
loop
mov
shrl
or
inc
push
shl
xor
sub
inc
and
mov
test
mov
inc
jg
out
dec
xor
jmp
push
insl
into
lahf
mov
xchg
add
push
rcll
dec
scas
pop
pop
xor
int3
sbb
mov
inc
dec
sbb
in
mov
push
fstps
sub
stc
cmp
cwtl
mov
cmp
and
aam
fstl
push
pop
mov
sbb
pop
sub
icebp
jmp
adc
xor
push
jmp
cwtl
stc
cmpsb
in
xchg
and
repz
push
fidivs
mov
mov
fwait
push
mov
mov
mov
and
sub
andb
jbe
testb
inc
mov
or
sarb
pusha
inc
data16
dec
stos
mov
rcr
cmovge
adc
dec
aas
jl
jbe
outsb
mov
fidivs
xlat
cs
repz
pop
jmp
in
bound
mov
adc
sbbl
xor
push
cwtl
call
fists
imul
inc
inc
and
in
lods
push
sbb
add
push
arpl
mov
or
gs
or
addr16
fisttpll
push
sti
mov
jbe
shlb
ret
or
pop
mov
mov
add
xchg
xchg
mov
xor
test
lret
jle
fisttps
and
cmp
fxch
clc
arpl
mov
and
aas
outsl
cwtl
and
xchg
fnsave
outsl
in
sahf
inc
adc
lcall
xor
jae
push
pop
scas
jb
rclb
les
or
xor
enter
jae
fwait
mov
nop
sub
dec
mov
push
lret
mov
mov
mov
mov
or
outsb
lcall
xor
sub
cs
loop
xchg
sahf
xchg
cwtl
cli
cltd
adc
out
adc
ljmp
jmp
xor
push
test
mov
cmp
andb
ljmp
push
mov
or
ss
or
frstor
stc
push
icebp
push
shlb
xchg
or
mov
mov
mov
mov
negb
lahf
sub
add
mov
sbb
out
mov
addr16
add
scas
xchg
loopne
push
fsubl
mov
loope
sbbl
push
sub
aam
popa
lock
rcll
inc
xor
movsl
ret
dec
and
push
push
and
sbb
adc
andb
je
xor
push
mov
rorl
or
pop
scas
mov
sub
jmp
insb
lahf
pop
pushf
pop
dec
adc
insl
in
dec
push
leave
icebp
xchg
adc
dec
lret
mov
stos
inc
les
mov
adc
fs
lds
repnz
add
cmp
add
das
movsl
sbb
test
jbe
jl
xchg
mov
mov
negb
push
jb
and
inc
jecxz
and
pop
sbb
inc
and
pop
inc
cwtl
loop
fsubs
dec
pop
inc
pop
mov
cmpsl
out
adc
mov
cld
xorl
insl
pop
ljmp
mov
sbb
jg
sbb
ret
fadd
push
inc
jbe
dec
push
adc
imul
je
jae
push
jg
es
and
xchg
andb
mov
cmp
clc
mov
and
mov
xlat
or
lods
push
clc
incl
xlat
cmpsb
add
cmp
xchg
insl
hlt
lahf
dec
and
mov
in
and
xor
fidivl
loopne
jo
mov
mov
add
sbb
xchg
fstpt
pop
pop
jns
loop
cwtl
imul
inc
lods
ret
xchg
xor
fs
out
aam
push
dec
cmc
cmp
test
xchg
popf
sub
les
xor
sub
imul
lret
lret
inc
rorl
sbb
out
mov
mov
xchg
mov
arpl
and
mov
lock
les
movsl
jl
adc
cmc
mov
mov
cmp
inc
cmpsl
rclb
js
cmp
lds
loopne
adc
adc
mov
push
and
lea
xchg
ret
jns
and
ss
fsubs
jecxz
inc
cmp
aam
jge
pop
std
cmpsl
xchg
ficompl
enter
jmp
and
lea
test
xchg
loope
mov
test
jb
aam
shl
lret
push
cltd
stos
push
out
jae
sarl
inc
adc
and
cmc
mov
lds
dec
je
shll
daa
movsl
adc
loop
cmp
inc
mov
loope
mov
fisttps
pop
cmp
mov
pushf
push
loop
mov
mov
pop
push
ja
sbb
mov
in
cmp
mov
and
lret
je
inc
int
dec
sub
sbb
pop
mov
xchg
lock
add
ret
sahf
std
xor
addb
and
xor
and
out
ret
jnp
fidivs
shlb
push
mov
adc
aaa
je
bound
adc
pop
cmpsb
add
cmp
loopne
jb
mov
loope
movl
xor
jg
mov
bound
fwait
push
pushf
ret
xchg
pop
xchg
test
push
icebp
jo
scas
inc
into
adc
push
xchg
xchg
pop
sbb
xor
pop
mov
mov
lea
jo
lock
adc
jl
je
sub
iret
repnz
mov
mov
sbb
cmc
inc
jmp
pop
jg
jp
popf
test
lahf
sbb
mov
arpl
pop
xchg
ret
mov
pushf
mov
movsb
mov
aad
mov
sub
pop
aam
inc
cli
jo
mov
fidivl
out
xchg
push
std
sbb
cmp
testl
mov
sub
mov
sbb
mov
ljmp
idiv
mov
shr
mov
repnz
xchg
dec
push
leave
xchg
dec
fcmovb
mov
shrb
rclb
fwait
xchg
scas
repz
mov
into
negb
mov
stc
cvttps2pi
sub
movsl
jmp
mov
push
shll
mov
aad
cwtl
jo
stos
lahf
test
sti
mov
icebp
sbb
fmuls
fcos
dec
daa
mov
lock
sbb
mov
xchg
fs
arpl
mov
neg
jge
sbb
fsubrl
addps
aad
fdiv
lahf
repnz
adc
jnp
inc
and
xor
cmpsl
addr16
fistpll
cwtl
adc
push
out
aas
cltd
lret
sub
sahf
rorl
sarb
pop
in
inc
jnp
out
inc
sbb
xlat
out
jb
shlb
mov
cmp
roll
arpl
iret
jae
sub
shl
and
sbb
cmpsb
adc
sbb
push
inc
test
jne
ljmp
in
hlt
jmp
mov
jle
aad
negb
mov
pop
push
lock
sbb
mov
xlat
inc
pop
out
imul
in
sbb
mov
das
stc
inc
lock
cltd
aas
push
add
and
cmpsl
inc
inc
mov
decl
pushf
jae
mov
pop
fstl
mov
mov
ret
sbb
aad
cld
add
movsl
inc
int3
idivb
ret
in
in
jle
push
push
xchg
iret
data16
scas
jns
pop
daa
popa
xchg
push
fwait
mov
mov
imul
xchg
mov
test
dec
and
push
inc
or
add
mov
mov
sbb
add
movsb
inc
pop
aaa
add
data16
mov
cmpsl
cmp
xor
es
cmpsb
mov
mov
shlb
cmpsl
pop
adc
fidivrs
stos
inc
mov
rcll
testb
sub
cltd
sub
hlt
std
or
push
stos
dec
xchg
fnsave
fwait
mov
sbb
mov
ljmp
and
inc
fcom
out
dec
sbb
and
int
push
in
lods
sar
loop
in
or
xchg
daa
in
shl
push
test
mov
stos
cmp
xchg
and
pop
xchg
sbb
fs
fbld
ja
xchg
mull
adc
in
adc
mov
or
lret
xlat
pop
jecxz
xchg
inc
inc
xchg
or
outsl
arpl
pop
sahf
ljmp
xchg
je
pusha
jbe
mov
out
cmpsl
enter
push
je
xor
jmp
loop
stos
mov
sub
inc
or
lret
mov
and
jno
nop
stc
stos
fcmovb
push
cmp
fdivs
inc
jecxz
fcoms
jge
test
pop
rep
pushf
mov
stos
mov
dec
in
movsl
loopne
pop
sbb
je
call
lods
lret
xchg
mov
xorb
pop
push
jl
pavgb
mov
and
pop
int3
sbb
aas
lds
dec
ss
or
or
sbb
mov
and
popa
xor
stos
adc
jo
add
std
and
std
fcmovne
rolb
xchg
loopne
dec
xchg
mov
subl
inc
lret
mov
cmp
mov
fidivrl
loopne
mov
and
lret
pushf
adc
fldt
gs
push
jne
mov
add
les
mov
roll
xlat
loope
and
insb
adc
inc
call
or
push
xchg
out
or
cs
stos
cmp
fsts
pop
mov
fs
sbbl
std
mov
div
xchg
jns
movsb
hlt
gs
in
stc
fstps
ret
test
aas
cmp
cld
push
add
mov
fdivp
arpl
popa
pop
or
jecxz
add
lcall
xor
sub
ja
mov
insl
cmp
leave
sti
outsb
shlb
loop
xor
inc
and
fmuls
ss
sbbb
xor
scas
cmp
mov
rolb
xorl
mov
rcll
xchg
jecxz
das
in
inc
or
stos
lea
mov
fisubrs
inc
insb
sbb
subl
test
add
or
pop
jg
or
cltd
subl
cmpsl
ficoms
jp
sbb
test
push
sub
in
call
jb
lds
xchg
and
sub
imul
push
add
clc
inc
mov
cs
inc
flds
push
adc
xor
mov
enter
lds
mov
sbb
and
sbb
pop
pop
adc
jg
jmp
pop
or
mov
js
das
cmp
shll
out
cmc
andl
inc
hlt
and
loop
sub
mov
fdivr
call
cs
jo
inc
std
lock
sbb
jecxz
and
fwait
mov
enter
cmpl
cmpsb
or
mov
pushf
adc
test
std
es
mov
dec
pushf
xchg
dec
sbb
pop
push
xorl
sub
cs
roll
inc
jmp
pop
movl
movsb
pop
ss
dec
mul
xor
and
xor
ret
ja
dec
addr16
mov
in
out
out
sub
scas
lfs
fsubs
popf
stc
sub
shlb
inc
jl
popa
dec
repnz
cmpsb
sub
jb
xor
out
stos
inc
rorl
int3
xor
cmp
and
clc
popf
movsb
push
push
test
and
jnp
int3
lcall
lods
xlat
in
fmuls
jp
outsl
leave
leave
jbe
mov
adc
pop
dec
into
xchg
mov
sar
add
das
ret
lods
jl
mov
or
push
lahf
aam
orb
jns
fisubrl
fisttpl
test
sbb
ss
or
imul
insl
lcall
push
dec
ja
cli
mov
jle
add
cmp
fwait
out
mov
xor
add
fidivrs
lret
lret
mov
sub
cld
call
xchg
loope
xorb
xchg
ret
mov
sbb
cmp
stos
mov
cwtl
fcmovb
mov
lods
enter
cltd
adc
fwait
mov
sub
inc
in
aad
outsl
push
xor
test
jge
or
mov
cld
pop
pop
mov
push
fdivr
ljmp
mov
call
inc
xchg
call
or
out
popf
and
ss
sub
imulb
nop
int
les
cltd
add
enter
pop
inc
push
pop
lahf
sub
sbb
pop
repz
inc
jmp
sbb
jecxz
sbb
inc
adcl
cmc
sbb
sub
outsb
rclb
in
lods
and
fisubs
in
adc
adc
push
adc
sub
adcb
jnp
adc
test
lods
cmc
inc
cmpsl
lret
rcr
mov
std
pop
push
bound
dec
add
data16
xor
mov
push
hlt
stc
or
sub
dec
dec
pop
movsb
mov
dec
or
jl
and
push
xor
iret
jl
gs
scas
shlb
inc
pushf
sub
sub
adc
push
add
or
mov
repz
and
xchg
outsl
and
mov
imul
mov
dec
xchg
and
adc
push
jp
pop
pusha
mov
jl
mov
js
push
stc
and
pop
push
pop
iret
xchg
and
push
std
js
jmp
das
adc
pop
in
dec
je
cs
xor
test
aas
lret
and
sti
push
test
bound
xorl
data16
and
xchg
or
data16
sysenter
dec
shrb
xor
mov
jp
shrl
pop
mov
ljmp
stc
loope
adc
mov
sahf
incb
inc
lock
push
inc
and
dec
cltd
imul
mov
lret
xchg
in
pop
inc
ret
jbe
dec
jae
je
fistl
arpl
ljmp
mov
stos
lock
mov
pop
lret
cmc
sub
add
hlt
mov
iret
mov
push
popf
scas
and
and
ds
mov
movsl
mov
je
push
jle
imul
xchg
push
inc
repz
xchg
and
adc
rcrb
cs
mov
push
mov
sbbl
lahf
call
rorl
hlt
imul
push
pop
fnstcw
push
cmp
lcall
iret
into
fnstcw
call
cmp
mov
sub
fidivl
ret
or
ret
cmp
fdivl
shlb
ds
nop
sbb
outsb
enter
pop
sub
mov
mov
jae
repnz
mov
adc
sbb
xchg
or
addr16
adc
sub
stos
cmp
push
dec
jecxz
pop
orl
sarb
push
or
mov
icebp
or
stos
shlb
jp
orl
lock
leave
jo
jl
sub
and
xor
xor
dec
in
sbb
dec
vmovaps
cmpsl
mov
inc
push
inc
cmp
add
out
mov
adc
mov
mov
repz
mov
sbb
cltd
adc
aaa
jge
mov
mov
push
imul
xor
xor
bnd
jmp
push
fbstp
popa
clc
ret
adc
sahf
mov
loope
jno
jbe
repnz
scas
pop
rcll
inc
roll
mov
les
xchg
push
testl
pop
out
sbb
dec
jae
rolb
or
enter
push
xorl
inc
jecxz
push
jg
xor
pop
mov
test
addr16
lock
dec
xchg
pop
mov
gs
insb
in
cmp
addr16
cmp
std
outsb
adc
inc
test
mov
icebp
cltd
movsb
sbb
out
dec
imul
cmp
stos
lret
hlt
in
adcl
int3
push
lods
lods
adc
mov
and
int
pop
cmpsb
inc
mov
scas
dec
xchg
sbb
mov
add
jmp
popf
push
nop
jno
rcll
inc
sahf
sub
adc
mov
mulb
cmp
in
and
dec
or
cmpsb
lods
push
xor
cmp
lock
cmpsb
push
push
int
cli
jle
ss
bound
or
loopne
inc
movsl
outsb
mov
cmp
aas
lock
add
push
or
mov
xor
out
add
arpl
hlt
adc
add
cli
or
jecxz
xor
ljmp
shl
push
ret
lretw
cwtl
test
sbb
stos
fstps
popf
or
push
movsl
pop
lret
inc
add
test
jl
ret
mov
dec
mov
fs
cmp
test
mov
mov
es
pop
pop
sbb
pop
popf
test
loop
add
cmpsl
cmp
inc
movsl
iret
dec
das
add
lret
jb
pop
daa
mov
scas
rorl
sbb
hlt
xor
add
jmp
scas
pushf
and
add
test
mov
jp
das
pop
jp
mov
cmp
xor
dec
cli
fldl
inc
or
scas
les
dec
addb
dec
pop
adc
test
adc
iret
pop
mov
orb
cmp
and
repnz
jbe
mov
dec
push
test
pop
cwtl
inc
enter
push
out
push
push
inc
fwait
mov
out
fldcw
mov
cmp
pop
repz
xor
movsb
pop
lods
sti
imul
out
test
and
sbb
ljmp
jecxz
dec
mov
ss
popa
aaa
mov
xor
xchg
dec
xchg
ljmp
mov
mov
sub
lahf
pusha
adc
ljmp
mov
sub
cmpsb
shlb
adc
mov
cs
int
outsl
test
mov
jle
adc
aam
scas
lret
in
shll
adc
push
sbb
cmp
or
push
or
lods
sub
pushf
dec
js
add
and
xchg
cmp
or
jge
fildl
jp
stos
cmp
jae
or
data16
test
ja
repnz
out
imul
xchg
inc
jb
fwait
mov
out
loope
lahf
xor
xor
shrb
lds
sbb
scas
sbb
out
vmread
or
inc
jo
scas
rcrl
jae
sbb
scas
enter
push
adc
lret
es
cmp
pop
and
mov
shr
in
push
adc
in
lods
fcom
leave
ss
adcl
sbb
xor
pop
push
push
stos
xchg
fucomp
mov
lret
or
pusha
dec
push
ljmp
lods
xchg
loop
ret
add
test
jmp
cmpsb
and
sti
fwait
inc
stos
movsl
adc
shlb
adc
jmp
ss
mov
ret
pop
loopne
test
test
mov
push
outsl
lcall
and
lea
fnstsw
add
or
inc
je
jo
push
pop
hlt
jo
fcmovnb
fimuls
addb
lea
jmp
pusha
mov
scas
mov
repz
std
les
push
or
dec
mov
imul
jge
int3
jnp
mov
mov
push
dec
leave
jne
shrl
or
and
popf
xchg
pop
into
scas
sar
push
jge
xorb
cwtl
hlt
mov
dec
dec
cmp
sub
dec
and
insl
sysenter
xchg
sub
and
cmp
pop
lock
add
out
xlat
pushf
gs
daa
cmp
jae
adc
push
adc
jle
xchg
mov
pop
leave
xchg
fs
dec
stc
push
cmp
dec
daa
jp
je
jl
pop
cli
ficomps
xchg
pop
mov
or
mov
xor
push
xor
mov
xchg
rcl
jp
frstor
xor
loope
dec
std
imul
dec
xor
mov
and
push
dec
filds
mov
sbb
std
out
lret
xlat
loopne
add
or
jne
add
in
xchg
inc
dec
repnz
push
and
xor
lods
cmp
stos
inc
xor
iret
arpl
pop
out
fildl
sbb
dec
int3
gs
xor
dec
lret
fcompl
xor
fbstp
adc
out
xor
xchg
dec
push
adc
xchg
xchg
fdivrl
clc
pop
mov
adc
stos
pop
dec
mov
pop
pop
das
in
lret
mov
adc
stc
xchg
mov
inc
inc
inc
jge
xchg
push
mov
sbb
pop
mov
sbb
out
push
lahf
lahf
arpl
mov
adc
cmp
push
stos
pop
lahf
xchg
jno
movsb
enter
in
gs
push
push
icebp
stos
sbb
jns
cmp
sbbl
xchg
ret
mov
pop
shll
sti
dec
mov
lods
loope
es
popf
push
and
dec
fcoms
ret
std
fmuls
movsb
pop
notb
nop
mov
add
movsb
sbb
mov
jnp
lcall
js
inc
loop
rorl
shrl
jg
sbb
stos
cmp
sbb
shr
push
pop
stos
adc
call
cltd
jae
dec
mov
call
in
in
lret
gs
frstor
fcomi
mov
add
sbb
mov
aam
mov
mov
pop
mov
ficompl
push
cmpsb
arpl
nop
repnz
int
xor
repz
test
mov
xor
adc
repz
fisttpl
jp
out
mov
xor
xchg
jns
inc
inc
dec
pop
outsb
insl
jne
or
xchg
fcoms
loopne
inc
dec
adc
sbbl
inc
ljmp
scas
fcmove
push
cwtl
jp
notb
fbstp
repz
cmp
add
shlb
mov
cmpsl
pop
sahf
out
int
arpl
jno
xchg
rorb
test
bnd
adc
pop
fcmove
mov
ja
adc
aad
xor
inc
out
adc
lret
jno
jae
loopne
push
loopne
in
mov
add
repz
pop
gs
dec
adc
test
imul
sahf
lock
cld
push
inc
int3
fwait
jmp
dec
mov
or
stos
aam
mov
mov
movsb
jle
cmc
dec
mov
adc
add
add
mov
mov
ficomps
scas
enter
push
or
gs
xchg
subb
ljmp
leave
in
mov
jge
mov
in
cmpsl
outsb
dec
call
insl
aas
inc
lods
aaa
cmp
call
nop
push
and
pop
xor
xor
idivl
mov
fdivr
inc
mov
push
sub
adc
popa
mov
sub
mov
push
orl
and
inc
inc
out
leave
movsb
les
jbe
int
dec
mov
pop
adc
mov
sub
cmp
out
hlt
mov
mov
dec
loop
cmp
sbb
pop
imul
je
pop
mov
movsb
sbb
addr16
ficoms
and
mov
mov
dec
fidivrs
mov
adcb
cli
sbb
or
ss
xor
inc
in
into
pop
movsl
push
enter
fdivrs
sub
xor
cmp
out
aam
scas
ret
mov
mov
jp
mov
stos
loop
js
rol
popa
mov
stos
inc
test
dec
mov
xchg
lock
subb
sbb
pop
pop
sub
add
ret
xor
fldl
add
imull
lods
les
lret
js
pushf
outsl
sbb
inc
xor
pop
popa
push
stos
jp
loope
xor
fisubs
pusha
adc
push
jge
shrl
push
je
enter
sub
or
xchg
cmp
lock
adc
inc
enter
cmp
adc
or
mov
push
jns
imul
jns
in
mov
ret
cld
aam
mov
cmp
jge
aad
sub
push
outsl
fistps
sub
call
inc
das
xchg
inc
lods
add
iret
pop
addr16
inc
xor
mov
loop
fildl
daa
out
sub
mov
mov
push
into
add
insl
push
icebp
mov
dec
pop
out
pop
dec
hlt
sahf
add
jo
ds
xor
fdivs
sbbb
add
xchg
mov
and
add
mov
jnp
push
fistpl
xor
cmpsb
mov
ja
xchg
fnstcw
cltd
add
or
lock
pop
adc
pop
out
push
mov
and
sub
mov
popl
lret
into
xor
jnp,pt
lock
iret
int3
inc
stos
pushf
cmp
pusha
mov
push
jp
mulb
das
jno
jge
enter
test
out
push
push
bound
xchg
addb
pop
xchg
mov
dec
hlt
mov
das
stos
mov
mov
xchg
push
push
pop
dec
mov
cmp
lea
sub
or
adcb
insb
clc
add
sar
gs
jg
jae
or
cld
xchg
xchg
into
test
sub
xchg
jecxz
test
sbb
outsl
xor
jecxz
and
sub
jge
adc
std
repz
push
jo
jg
ret
test
and
scas
mov
cli
fsubp
insb
sbb
dec
idivb
idivl
push
fdivrs
xchg
ljmp
rcll
out
testl
bound
push
popf
inc
pop
pop
pusha
pop
loopne
mov
cwtl
arpl
fisttpl
and
daa
dec
push
gs
ljmp
imul
aam
je
nop
adc
adcb
mov
and
xor
sub
aad
and
jb
xor
pop
fisttpll
mov
xchg
stos
int3
xchg
cltd
xchg
jmp
test
lods
mov
aam
loopne
enter
arpl
jne
and
and
das
rcrl
push
pop
call
pop
cltd
and
sub
cwtl
push
fdiv
cmp
push
cmp
roll
pop
sbb
outsl
neg
lds
jecxz
fidivs
filds
in
push
lods
icebp
mov
pop
dec
ds
mov
pop
dec
adc
add
mov
enter
imul
jnp
clc
xchg
add
scas
inc
fimuls
dec
jb
xchg
jl
cmp
add
push
xor
sti
xor
mov
jge
test
sahf
outsl
sub
or
push
ss
push
in
xor
pop
pop
or
jmp
leave
fidivl
imul
inc
push
xor
mov
das
jo
ljmp
xor
je
push
adc
in
fcmovnb
mov
jns
dec
out
setbe
xchg
xor
scas
sti
lds
scas
rcl
out
pop
dec
pop
jo
call
adc
pop
adc
outsb
mov
mov
adc
les
pop
test
lahf
lds
mov
arpl
sbb
lret
push
mov
idivb
stc
filds
outsl
mov
push
fisttpll
dec
dec
stos
adc
je
in
mov
ljmp
inc
xchg
ret
je
jp
add
lret
in
mov
mov
push
mov
repz
cmc
std
cmpsl
cmp
push
jns
mov
lods
into
dec
test
mov
repz
rcr
lods
aam
out
arpl
rorl
in
mov
roll
mov
mov
in
push
repnz
xlat
clc
daa
sbb
push
arpl
adc
pusha
jae
stos
pop
movsb
add
cmp
iret
decl
push
arpl
adc
cld
jns
fsubs
push
fcompl
rcrb
mov
shr
in
lret
and
mov
outsb
lods
xchg
cltd
cmp
jmp
int3
pop
push
es
iret
xchg
cmc
pop
fs
je
mov
imul
mov
scas
nop
pop
sbbl
mov
push
test
pusha
in
cld
and
xor
fcoms
ret
adc
mov
add
xchg
pop
in
xor
daa
mov
popa
in
sbb
lcall
loope
jl
scas
add
push
ljmp
jo
pop
pusha
insb
ljmp
jno
fdivrp
inc
jl
inc
pop
add
pop
xlat
loopne
and
jno
jp
insb
repnz
dec
sub
dec
pushf
cld
cmp
ljmp
xor
cld
fdivs
std
xchg
movsl
jmp
pop
xor
sbb
xor
jp
dec
inc
push
mov
sbb
insl
std
and
inc
das
cmpsb
sahf
xchg
fdivrp
inc
jnp
mov
loopne
mov
icebp
or
sbb
cwtl
sub
jmp
xchg
jbe
out
mov
and
mov
add
icebp
mov
and
rolb
sub
cmp
mov
enter
movsl
ss
stc
popf
sbb
jnp
and
pop
in
idivl
xchg
adc
cmp
mov
cmp
push
movb
xor
aas
xchg
lret
in
bnd
mov
push
jmp
cmp
jg
call
lret
add
push
add
xor
aad
rcrl
mov
and
sub
ret
mov
push
in
mov
mov
test
lret
lods
cmp
scas
orb
lods
mov
testb
push
mov
andl
idivl
sub
or
js
mov
xor
ja
cmp
gs
decl
in
cmp
push
mov
xchg
pop
sbb
int3
mov
or
mov
adc
xchg
fisubs
lahf
inc
cmpsl
frstor
and
iret
push
incl
cmp
pop
popa
into
mov
enter
test
ds
cs
mov
mov
in
jno
sbb
dec
mov
push
test
sahf
sub
xor
int
scas
jno
mov
cwtl
fnstsw
mov
push
icebp
mov
sahf
in
mov
je
lahf
fcomps
out
daa
loopne
dec
cmp
scas
loope
cld
loope
movsl
lods
shl
insb
xchg
xor
out
xchg
es
sub
loop
into
inc
cli
test
inc
push
mov
push
and
shl
pop
mov
inc
dec
clc
mov
es
xchg
mov
orl
cmp
mov
jge
popf
iret
push
les
push
jmp
mov
inc
rorl
mov
scas
mov
or
loope
lds
stos
iret
dec
jge
sahf
xlat
dec
enter
stc
and
enter
test
mov
nop
cmp
mov
inc
jmp
ret
notb
sbb
icebp
push
pop
and
scas
xchg
xchg
out
mov
pop
out
int3
push
sbb
sub
add
repz
push
imul
aad
iret
test
mov
cmp
inc
cmp
add
arpl
sub
movsl
cwtl
movsb
jno
mov
loope
pop
xchg
test
adc
sti
nop
repz
and
xchg
shlb
cmpsb
stos
les
and
bound
jp
lret
aam
xchg
jle
out
std
inc
fldlg2
jecxz
mov
out
xchg
call
push
test
sub
icebp
fisubrl
ljmp
push
xchg
gs
jmp
cld
mov
or
imul
xchg
pop
push
cltd
mov
jo
mov
push
adc
loop
fadds
jne
fldcw
cli
mov
fisttps
or
iret
dec
sbb
std
cmc
sti
xor
mov
lahf
mov
insb
imul
mov
adc
dec
sub
js
mov
sar
ss
mov
cltd
lcall
pushf
xchg
mov
lret
xchg
and
imul
frstpm(287
mov
dec
cwtl
sub
jg
stos
xlat
pop
jbe
iret
inc
add
hlt
dec
dec
lods
out
jno
adc
jmp
int
or
mov
jne
ret
xchg
or
popa
mov
scas
nop
faddp
mov
imul
or
push
movsl
xorl
cmp
pop
mov
jl
or
insb
jns
mov
icebp
in
popa
jne
adc
js
sbb
push
jae
rolb
mov
mov
orl
dec
sbb
decl
mov
sub
inc
sub
int
xlat
xchg
mov
mov
sub
sub
cmpsb
nop
dec
mov
pop
fbld
sbb
loope
inc
jle
pop
jle
lods
lret
pop
orb
stc
add
rcrb
adc
fmuls
mov
repnz
int3
mov
ss
add
addr16
int3
lods
je
or
adc
popf
icebp
pusha
push
fwait
lcall
mov
imul
or
or
movsl
rcrl
jl
jmp
pop
or
sub
inc
lea
push
stc
push
push
cmp
or
icebp
fwait
mov
cld
cmp
hlt
inc
sub
sbb
cmp
out
and
outsb
nop
les
inc
jbe
fdivr
pop
jbe
pop
xlat
fisttps
sub
insb
sbb
mov
into
sbb
fildll
or
loope
int3
pop
xchg
mov
pop
sub
clc
adc
sbb
jno
std
rol
or
inc
push
push
add
and
stos
cmp
push
dec
icebp
dec
lock
lea
out
or
adc
call
scas
fistps
rorl
leave
pop
push
shll
and
mov
and
add
adc
lcall
xchg
test
jae
inc
cmp
xor
outsb
cmp
cmc
shl
iret
add
dec
iret
sub
aad
loope
incl
or
cmp
leave
xor
stos
inc
xor
inc
subl
dec
fisttpl
cld
push
into
push
and
sbb
cmc
sbb
lock
mov
stc
xor
xchg
std
sti
lret
call
ss
inc
lret
int3
dec
jecxz
fimuls
sub
xchg
insb
jmp
mov
popf
rcl
jnp
out
clc
out
fwait
lret
sbb
pop
mov
xchg
jl
pop
xor
loop
inc
notl
add
xor
std
scas
adc
inc
std
test
hlt
cmp
das
lock
mov
push
dec
je
sahf
mov
into
mov
pusha
imul
dec
cmpsl
divl
mov
adc
sbb
jnp
roll
mov
mov
dec
test
lea
pop
inc
cmp
jmp
lods
pop
shll
add
test
mov
pop
or
add
push
loope
repnz
shlb
test
cmp
pop
sub
lods
out
arpl
lret
aam
testb
add
outsb
lahf
fs
xchg
ret
mov
aaa
dec
mov
pop
xchg
ja
fwait
jno
popl
xchg
inc
fsubrs
in
xor
shlb
xchg
test
shlb
xchg
subl
xchg
push
hlt
cmp
subb
jmp
repz
pop
adc
lcall
dec
outsb
inc
xor
push
fnstsw
sbb
push
out
dec
dec
jecxz
das
loopne
cmpsb
inc
mov
inc
pop
in
fsts
stos
popf
pop
pop
shll
adc
mov
in
lcall
push
fcomps
outsb
enter
ljmp
in
stos
inc
mov
push
nop
add
dec
sbb
shr
sub
aam
dec
rclb
mov
mov
and
js
jo
push
xchg
lea
jae
aad
jmp
push
es
dec
xchg
ret
nop
scas
outsb
test
xchg
dec
out
enter
jmp
xchg
daa
ss
lret
incl
jl
mov
imul
mov
subb
ret
push
ret
and
sub
xchg
dec
fnstsw
aaa
in
push
push
mov
aas
adc
sbb
jnp
pop
shlb
mov
fisttpl
popa
fs
sbb
gs
cli
push
or
rclb
and
aaa
ret
scas
push
call
adc
and
dec
dec
mov
jb
cmpsb
xchg
mov
inc
and
push
xchg
jge
lret
fmul
inc
fcmove
jp
mov
shr
rcll
mov
bnd
xchg
mov
cld
sub
repz
je
mov
mov
inc
mov
fsubs
dec
jmp
jp
jecxz
xlat
mov
movsb
ja
xor
pop
movsb
mov
fsts
xor
leave
scas
fbld
subl
ds
and
fnstcw
xchg
and
jp
call
ret
dec
or
fisttpll
mov
jl
jecxz
sarl
jno
js
and
into
pop
int
inc
push
mov
inc
out
dec
lods
mov
enter
inc
sub
pop
stos
in
adc
aam
addr16
add
test
mov
test
hlt
cmp
test
and
jp
into
inc
jmp
or
ss
inc
xchg
xchg
push
in
into
out
leave
ficoml
inc
lds
push
cmpsl
adc
cs
xor
insb
mov
lcall
cli
fldl
pushf
dec
pop
andb
aad
sar
pop
inc
xchg
in
mov
lods
fdivl
mov
mov
xor
fimuls
inc
ds
inc
inc
movsb
sbb
sub
or
mov
mov
enter
ficomps
mov
and
pop
test
sub
cmp
inc
repz
lock
int3
ss
mov
or
bound
xchg
fwait
or
outsl
jnp
xor
inc
push
enter
push
adc
je
dec
jnp
lea
push
inc
push
popa
shlb
cltd
rcr
stos
fldenv
and
int3
jmp
pushf
imul
push
stos
mov
jae
stos
stos
jns
mov
push
mov
addr16
mov
push
cltd
dec
movl
dec
mov
lret
pop
incb
cltd
xchg
outsl
jbe
sti
inc
xchg
rcrl
sub
bound
dec
lahf
xor
sub
mov
inc
mov
aam
fbstp
outsl
xor
adc
and
shlb
cwtl
pushf
movsb
push
inc
sbb
mov
clc
daa
gs
xchg
in
dec
repz
jp
jb
adc
bound
aaa
mov
xchg
push
ret
cmpsl
pop
fwait
mov
dec
loopne
and
pop
cmp
mov
fmul
sub
push
cmp
cmp
orl
mov
mov
mov
xor
push
cmpsl
add
imul
xchg
xchg
lds
pop
pop
addr16
cld
push
cmpsl
stc
scas
adc
in
ret
inc
push
xchg
push
mov
popf
adc
sbbb
cwtl
mov
ss
xchg
jae
dec
and
or
sub
add
cmpsb
imul
call
ret
and
and
fmulp
arpl
mov
pop
rcrb
cmp
jge
stc
mov
gs
sub
mov
push
push
push
jbe
pop
add
test
dec
dec
jl
jecxz
out
add
cmpb
mov
out
arpl
xlat
pusha
mov
push
ja
sub
xchg
ja
les
push
sbb
int
xchg
in
cmp
xor
xor
mov
cli
sbbb
out
hlt
jno
pop
and
mull
nop
cmp
inc
push
push
cli
lretw
movsl
mov
jle
arpl
add
jne
jmp
mov
jb
es
push
xor
pop
adc
xor
daa
out
fnsave
je
add
or
cmpsb
xchg
lods
jmp
inc
dec
nop
dec
aaa
jbe
push
dec
enter
dec
jmp
pop
mov
inc
add
pop
addr16
setle
testl
test
lods
shrb
cmc
mov
jnp
lahf
push
je
xchg
dec
xor
xor
pop
cmpsl
xchg
mov
xor
dec
jge
scas
stos
pop
mov
icebp
rol
insl
push
test
sbb
pop
and
mov
pop
movsb
inc
outsl
jl
push
jle
mov
ud2
rcr
pop
in
int
sub
out
fmull
test
sbb
xor
rclb
out
inc
aad
rolb
insl
sar
addr16
jae
sub
push
mov
inc
mov
out
mov
jmp
mov
or
inc
or
push
mov
cmpl
xchg
loop
xchg
xchg
add
mov
xchg
sbb
lahf
icebp
push
add
insb
in
mov
inc
mov
dec
cmp
ljmp
stc
jecxz
xchg
or
or
fstpt
add
and
dec
mov
aad
dec
add
scas
negl
add
and
mov
fbld
into
jmp
test
fdivs
or
shrb
cmpsb
inc
outsb
mov
jns
mov
imul
sbb
shrb
cmp
jl,pn
cmp
sbb
mov
mov
sub
dec
std
mov
jmp
jp
mov
pusha
das
mov
ja,pt
xchg
cmp
add
sbb
and
sub
movsb
mov
mov
pop
xor
pushf
sbb
aas
mov
test
add
loop
icebp
xchg
ret
cli
mov
pusha
and
fldl
iret
pop
lds
jmp
lahf
cmp
outsb
enter
pushl
xor
or
jp
imul
cmp
xchg
dec
xchg
cmc
lock
testl
enter
jl
scas
push
ficomps
shl
mov
into
dec
hlt
lret
scas
cmc
push
push
push
dec
push
scas
push
stos
xchg
icebp
iret
xorb
clc
les
repnz
xlat
and
lock
mov
aas
arpl
lret
mov
xor
jno
fwait
inc
dec
mov
adc
loopne
and
les
cmpsb
xorl
jo
xor
mov
nop
ficompl
mov
mov
mov
jecxz
orl
out
arpl
mov
pop
arpl
push
icebp
xchg
xchg
loopne
pop
xchg
dec
dec
jno
ja
les
jnp
loopne
lods
outsb
xchg
aam
adc
cmpsb
out
jl
and
pop
int
aad
adc
push
fimuls
sub
sub
sti
movb
imull
insb
fisubs
push
add
arpl
xchg
stos
mov
into
sbb
icebp
sub
sbb
jl
mov
cmpsb
fisubl
jecxz
ret
sub
imul
and
sbb
cmp
mov
inc
inc
xchg
fmulp
hlt
es
mov
xor
rcl
cmp
cmpsb
pop
or
and
daa
test
jmp
addr16
or
and
sbb
outsl
pop
jo
pushf
ret
xor
mov
les
add
jno
into
into
or
mov
dec
jo
cmc
aas
inc
repz
xchg
jae
sbb
hlt
pop
fadds
dec
cmp
outsl
out
bound
push
pop
lds
aas
icebp
push
and
mov
cmpsl
dec
sbb
xor
sbb
and
sahf
mov
fbstp
inc
dec
push
push
xor
push
in
cmc
push
ds
mov
mull
inc
das
fcompl
xchg
loope
incl
stc
inc
lds
inc
mov
ret
add
int3
mov
sbb
les
out
dec
rol
or
sbb
add
mov
sti
mov
adc
leave
add
or
push
mov
adc
out
push
dec
mov
fwait
gs
xchg
mov
lahf
divb
add
xor
mov
js
and
push
and
dec
outsb
jecxz
mov
lret
add
mov
stos
outsl
mov
jle
aas
pop
push
push
andl
mov
pop
int
lods
mov
mov
dec
pop
jecxz
cs
mov
dec
jmp
mov
mov
or
push
es
icebp
imul
dec
mov
bound
cmpsl
sbb
imul
mov
cld
and
shlb
sub
ret
dec
dec
mov
sti
cmpsb
pop
loope
cmp
sahf
xchg
inc
mov
or
mov
adc
xchg
inc
xor
inc
test
sbb
clc
jae
pop
scas
jmp
lods
sbb
adc
mov
int
sahf
aad
idivb
adc
dec
cli
jg
sar
mov
cld
stos
dec
aam
int
or
dec
xor
fiaddl
ficompl
lods
adc
mov
jnp
ds
and
lock
aaa
or
pop
jp
dec
mov
dec
pop
test
cmc
inc
and
sar
push
sbb
loope
sub
popa
jb
and
mov
rcrb
hlt
testl
cmp
loop
jo
pop
dec
sub
jecxz
fcom
inc
mov
fmuls
sbb
rorl
pop
or
pop
das
repz
mov
mov
fcomps
cmp
add
jbe
into
sbb
xor
leave
inc
pop
dec
push
cmp
in
fldenv
mov
mov
scas
push
push
push
rcrl
leave
and
pushf
pusha
pushf
xchg
cmp
and
or
adcb
push
mov
mov
icebp
sub
cmpsl
cvttpd2dq
inc
icebp
inc
inc
imul
cmp
mov
cmp
jp
aaa
push
xor
xchg
sub
and
sub
aas
scas
mov
sub
mov
jo
imul
mov
push
ret
jle
mov
jb
adc
jg
add
mov
push
xchg
jbe
roll
jb
sub
sbb
inc
arpl
pop
xor
mov
ret
cltd
lock
mov
pop
adcl
fcmovb
or
hlt
les
fcompl
xlat
or
jo
and
dec
sub
jmp
mov
cs
mov
ret
rcr
jne
add
and
and
idivb
push
testl
sbb
mov
test
or
xchg
loop
jbe
sbb
pop
or
jecxz
in
push
fstpl
sub
iret
xor
inc
scas
cmpsb
stos
dec
cmc
add
push
cmp
sbb
jne
adc
stos
cmp
dec
push
stos
popa
push
sahf
dec
adc
cmp
jo
adcb
mov
mov
jnp
cmp
pop
in
push
enter
je
testb
fcmovu
push
test
and
cmp
stos
repnz
adc
or
divl
push
push
test
mov
cwtl
pop
mov
aas
sbb
jg
cli
gs
lahf
insl
xor
stos
repnz
ficompl
or
es
mov
xor
xor
cs
add
sub
lret
mov
push
cmc
hlt
or
popaw
sbb
mov
rcr
loopne
add
push
push
pop
adc
subb
mov
pop
xor
adc
rcll
mov
dec
shll
lock
mov
popa
push
int
sarb
mov
or
mov
shl
les
dec
aaa
loope,pn
repnz
scas
fnstsw
imul
cmp
pop
push
jns
jecxz
inc
pop
out
sbb
push
imul
xlat
lods
cli
cmc
insb
je
loop
mov
pushf
mov
pminub
out
jae
sub
loopne
xchg
adc
fldcw
mov
iret
cltd
lret
jns
jb
icebp
mov
sub
sbb
push
cmpsb
jae
hlt
outsl
jp
loop
enter
or
cltd
dec
jg
jge
test
dec
mov
mov
or
aam
es
testl
pop
setle
loopne
push
sarl
mov
std
jmp
insb
es
xorb
push
pop
pop
push
and
jns
xchg
and
fisubrl
in
dec
jno
xor
dec
push
add
adc
fistpll
and
movb
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
shl
test
cmp
jp
pop
jp
and
add
dec
das
ljmp
pop
cwtl
dec
push
add
lods
cmpsb
jmp
inc
inc
mov
lcall
imul
pop
out
pop
int3
shll
adcb
pop
in
scas
addr16
dec
mov
or
mov
nop
clc
mov
jecxz
cs
lret
cmp
fcoml
or
mov
out
repz
ret
cli
push
mov
inc
mov
xchg
dec
loopne
test
mov
sub
fcmovne
adc
xchg
jecxz
incl
dec
and
jb
add
adcl
orb
scas
pop
pop
jo
ficomps
jo
gs
xchg
xor
add
pop
jl
inc
cmp
xchg
mov
mov
mov
mov
mov
mov
cmp
mov
outsl
call
in
mov
sbb
ljmp
iret
or
jne
out
mov
push
and
sbb
xor
popf
daa
out
xchg
lods
mov
fsub
mov
push
daa
fistl
sub
cld
push
scas
rclb
mov
inc
cld
xchg
gs
sbb
add
push
xchg
fbld
xchg
jae
aaa
sbb
xchg
scas
es
out
mov
pop
jge
mov
and
sbbl
jl
das
fsubs
aas
jb
fcompp
lahf
aas
divb
cmp
bound
mov
add
dec
mov
es
push
xchg
mov
mov
test
fwait
mov
mov
adc
sub
mov
mov
dec
enter
pop
das
and
jmp
movsb
sahf
das
fsubrs
jns
repz
add
fs
mov
add
and
bound
mov
sub
push
inc
xor
inc
nop
daa
mull
mov
mov
jl
scas
cld
cmp
imul
push
dec
cltd
fwait
xorb
push
movsl
adc
dec
int3
cld
mov
xchg
aad
push
pop
mov
shrl
pop
fsubs
and
pusha
push
out
bound
and
adc
pop
testl
mov
ffree
cs
dec
xchg
adc
stos
add
loope
ret
gs
fiadds
adc
mov
push
fwait
in
pop
lds
jnp
ret
sbb
aas
xor
xor
sti
fisubl
and
inc
fwait
sub
add
jle
xchg
and
lret
and
jecxz
adc
dec
mov
scas
and
test
das
rolb
shll
xor
stos
sub
testl
pusha
aam
fidivl
lret
xor
int3
xor
push
xorl
dec
jl
jle
mov
push
pop
outsb
in
add
xchg
leave
push
xchg
scas
jge
cmp
mov
imul
lds
out
mov
sub
pop
outsb
lds
test
hlt
adc
mov
jp
inc
and
test
outsb
je
mov
int
add
cli
notl
pop
add
dec
ljmp
test
out
fldenv
cmc
dec
cwtl
sti
mov
es
je
mov
jg
daa
data16
mov
std
push
pop
xchg
mov
out
fdiv
sbbl
xor
xchg
mov
xor
test
adc
inc
negl
inc
add
adc
jecxz
and
insl
add
cmp
mov
lcall
lahf
and
add
scas
pop
lods
int3
pop
aad
movsb
push
cmp
xchg
and
add
xchg
cmc
dec
jmp
lock
dec
jnp
lds
fisubl
mov
out
shlb
sub
inc
sbb
and
push
out
pushf
pop
inc
leave
ret
xchg
out
push
add
inc
sti
pop
add
call
add
jg
loop
mov
xor
ffree
lods
outsl
jne
sahf
out
in
pop
add
leave
lret
add
loop
outsl
jp,pn
rcl
dec
into
sti
sub
in
cmp
mov
pop
xchg
sub
jo
jecxz
shr
mov
xor
push
ss
stos
cmp
shll
daa
jno
data16
std
jbe
in
out
mov
sbb
lods
loop
stos
xchg
or
rorb
push
or
pop
cltd
shr
pusha
adc
jns
cld
xchg
fnstsw
lock
jmp
adc
xlat
mov
sar
repnz
or
daa
xchg
lret
popf
pushf
dec
xor
jecxz
inc
ja
out
ret
xor
cmp
mov
movsl
pop
movsl
sbb
mov
hlt
idivb
mov
fwait
push
xor
adc
push
mov
nop
ljmp
int3
loop
filds
sbb
jb
mov
test
mov
hlt
cwtl
sub
es
jge
pop
ljmp
popf
daa
ljmp
fisttpl
pop
int3
ljmp
ret
cmpsl
out
sub
push
cwtl
int
push
test
and
inc
dec
inc
lcall
push
fnstsw
scas
mov
nop
xchg
gs
and
jmp
rorl
fwait
push
inc
mov
or
pusha
mov
roll
push
and
jb
scas
sbb
push
pop
push
jno
cmp
rolb
out
xchg
daa
push
jae
pop
loopne
adc
pop
sbb
shrb
aam
dec
dec
ljmp
add
add
sub
push
leave
xor
sahf
dec
adc
push
sub
pusha
mov
test
push
and
push
push
mov
fcoms
addr16
xor
mov
adc
loop
pop
sub
pop
cli
dec
push
scas
adc
and
push
fmul
ficomps
orb
push
inc
sub
xor
fcom
mov
jnp
inc
test
adc
cltd
int3
jno
or
or
jmp
pushf
notb
out
jg
je
lds
mov
cmpsl
jne
scas
push
push
aad
push
push
push
xor
xor
push
adc
inc
fimuls
shrl
popa
popf
jle
in
imul
push
inc
out
mov
cmp
int3
xor
inc
push
in
repz
push
xchg
into
scas
xor
mov
xlat
lea
fimull
out
rol
mov
mov
movsl
fdivr
nop
lods
fwait
leave
fcomps
stos
int
cmpsb
jle
xchg
int3
jne
ja
jp
inc
jl
inc
adc
gs
int
cwtl
hlt
cwtl
inc
push
cmpsl
and
sub
enter
push
arpl
jl
sub
cli
xchg
test
xor
insb
push
js
pushf
dec
and
pop
push
enter
loope
std
push
and
shrb
pop
fsubr
frstor
fs
ss
jmp
rorb
jnp
test
insl
fsave
xchg
pop
xchg
test
ret
neg
inc
pop
imul
push
mov
fwait
in
fadds
xchg
bnd
inc
cmc
adcb
daa
fcoml
inc
jecxz
pop
mov
dec
int3
test
xor
push
arpl
rcll
push
shl
mov
je
mov
jge
cmp
xor
out
nop
add
adc
push
lds
xchg
test
cmc
imul
mov
notb
hlt
fdiv
xchg
add
rcrl
out
cltd
cmpsb
cltd
ret
pop
jne
scas
xchg
lods
insl
stos
mov
inc
mov
cltd
pop
insb
inc
and
jnp
inc
into
add
mov
pusha
inc
pop
addb
jmp
or
pop
nop
lock
push
xor
pop
nop
les
xor
or
ret
rcrb
ljmp
pop
xchg
mov
loop
cmp
or
cmp
es
push
dec
test
lret
sbb
inc
testl
push
mov
and
jmp
push
mov
cs
test
add
xchg
sub
in
jne
sub
vpsubusw
mov
or
cmp
pop
ret
lods
jle
mov
xor
push
invd
xchg
adcl
pop
dec
aas
iret
push
push
sub
out
out
pop
inc
mov
mov
add
icebp
xlat
or
and
stos
fldl
adc
je
lret
inc
lcall
pop
iret
jno
cld
or
sbb
inc
or
add
adc
and
push
iret
rclb
pushf
xor
dec
roll
andb
adc
imul
mov
insl
daa
mov
popa
repz
jnp
pop
stc
add
inc
popf
jecxz
inc
pop
shrb
cmp
repnz
inc
stos
icebp
jmp
data16
jnp
jb
in
mov
loopne
mov
std
adc
adc
dec
push
frstor
inc
in
aad
sbb
arpl
sub
adc
xchg
addr16
mulb
adc
add
sbb
or
scas
and
jmp
mov
scas
test
loope
jle
and
or
add
xchg
outsb
xor
in
inc
push
xchg
and
test
lahf
in
sub
sbb
adc
int3
mov
scas
jmp
outsl
andb
outsb
cmp
xor
xchg
dec
and
cltd
fstl
sub
adc
xor
shl
ds
cs
push
and
sub
imulb
jecxz
mov
ret
mov
jl
inc
ret
xor
mov
insl
mov
mov
mov
bound
subl
or
cmc
mov
shrl
cmp
inc
and
jno
repz
dec
les
call
cltd
leave
mov
xor
ret
std
fdivrs
add
cltd
ja
dec
push
mov
fdivs
imul
repz
add
pop
jg
mov
loop
push
andb
in
xchg
es
xchg
jne
dec
pop
sbb
cmp
add
inc
adc
inc
mov
dec
psubusw
xlat
loop
mov
xchg
cmp
movsb
jge
rcr
fisubs
mov
push
outsl
lock
add
mov
int
out
cltd
xchg
sub
push
test
cmp
outsb
fldl
and
mov
and
cltd
jbe
pop
xchg
push
dec
and
push
lcall
or
in
adc
and
enter
cmp
lods
or
push
add
push
ficoms
shlb
inc
push
ja
outsl
adc
pop
xchg
mov
jo
inc
sub
cmp
pusha
fiadds
scas
std
test
stos
test
and
in
icebp
aaa
rolb
mov
repz
jno
loopne
pop
xchg
sub
adc
cmc
inc
dec
mov
cli
ror
out
in
inc
stc
es
sbb
lcall
adc
cwtl
add
sbb
fmuls
mov
xchg
rolb
rorl
lret
xchg
jmp
lds
aas
jmp
dec
pusha
lret
xchg
pop
jge
mov
mov
addb
dec
ret
mov
ljmp
inc
enter
mov
mov
test
scas
adcb
cs
or
jle
add
out
out
inc
incl
dec
push
mov
xor
push
mov
push
div
sbb
scas
sti
add
sbb
and
pop
rclb
mov
fcompl
and
outsl
add
xorl
mov
aas
mov
nop
lock
xor
push
dec
sub
adc
sub
add
or
mov
scas
adc
lret
cmp
test
dec
adc
and
addr16
inc
sbb
cltd
pop
loopne
jge
repnz
sub
add
out
xor
lret
cmove
mov
idivb
cmp
mov
stos
mov
push
imul
jo
jle
jge
imul
mov
rcrb
popf
cmp
or
hlt
xor
xor
ret
mov
inc
shr
push
push
dec
cmp
fadd
lret
bound
jecxz
dec
pop
mov
push
push
cmp
aas
push
lahf
arpl
xchg
adcl
push
inc
dec
test
divl
ret
push
mov
inc
adc
pop
cltd
pop
fstpl
repnz
clc
les
push
pop
xchg
mov
xor
addr16
xor
scas
in
and
mov
and
adc
bound
and
mov
jnp
outsl
jmp
or
sbb
and
inc
addr16
xor
ds
sti
ret
out
clc
aas
wbinvd
orl
jno
add
roll
sub
imul
mov
insl
or
je
repnz
adc
adc
cs
jl
xor
test
dec
insb
out
mov
xchg
dec
addl
jg
add
xchg
movsl
seto
shl
xor
mull
ds
push
lea
adc
xchg
mov
sbb
pop
hlt
cs
jge
pop
rorb
in
mov
jbe
inc
cltd
cmp
push
dec
rep
aad
sub
xor
outsb
and
xor
movsl
cmp
jbe
mov
xchg
sbb
push
js
cld
sbb
and
loop
ja
stc
push
fstpl
test
pop
xacquire
fcompl
rorb
repz
and
mov
test
das
dec
outsl
rorl
gs
jmp
jl
add
inc
mull
lahf
dec
xchg
outsb
inc
cld
mov
dec
xchg
ljmp
mov
orb
gs
sub
and
inc
in
sub
stos
push
sub
mov
aam
outsb
dec
jae
lcall
imulb
jnp
or
cmp
push
sub
mov
sbbl
pop
xor
dec
pushf
loope
sub
fiadds
xchg
int
fsts
fwait
lea
rorl
and
cmp
movsb
sbb
inc
adc
insb
adc
xor
mov
xchg
cmp
cltd
push
mov
mov
fisubrs
and
mov
ror
push
nop
pop
in
mov
cmp
sarb
sti
loop
mov
fiadds
cmpsl
or
xlat
mov
add
push
jbe
das
lcall
push
into
das
add
mov
lret
enter
push
inc
adc
movsb
dec
or
jb
sub
hlt
fwait
popa
rcrb
push
and
jb
mov
test
cli
cmp
repz
ljmp
mov
das
push
enter
fsubrs
push
test
fildl
sahf
and
push
pop
int
lods
sub
mov
repnz
mov
or
flds
ljmp
mov
xor
xlat
clc
inc
jo
hlt
in
loope
icebp
pop
cmpsl
ss
xlat
rolb
sti
outsl
repnz
xor
adc
rcr
push
fldenv
pop
xchg
fs
push
mov
movsl
cld
pusha
enter
imul
xor
xchg
sarl
pushf
daa
jl
sbb
out
hlt
adc
sub
mov
test
sub
fs
std
add
push
sub
rcll
lea
add
jge
lods
sub
enter
dec
push
xchg
xor
dec
mov
pop
ss
fsubs
bound
aas
adc
mov
jle
inc
dec
stos
cmp
dec
shl
adc
out
leave
dec
push
dec
bound
adc
int3
les
lds
sub
jne
iret
add
mov
outsb
jg
and
movsb
mov
mov
push
loope
js
xchg
xlat
mov
loop
jno
sar
push
xchg
fnstcw
and
cld
cmp
mov
add
jg
mov
xchg
mov
ljmp
push
scas
xor
in
stc
mov
std
cld
cmp
into
dec
pop
dec
insb
std
and
jle
push
lock
xlat
dec
out
ficoml
cmp
sbbb
adc
sbb
sarl
dec
out
inc
stos
push
lret
sbb
pop
adc
sbb
xchg
sti
mov
push
mov
aaa
inc
dec
jmp
decl
pop
ljmp
xchg
mov
fldt
stos
aaa
mov
jmp
movsl
in
mov
pusha
nop
or
movsl
aaa
push
repz
mov
xor
orb
xchg
lahf
ret
sbb
push
mov
and
cs
xchg
inc
aad
and
mov
mov
sbb
cs
inc
mov
sbb
mov
movb
inc
jl
scas
lret
stc
jecxz
cmp
sar
into
cmp
push
push
movsb
pushf
adc
add
push
ret
and
jb
fwait
enter
pop
adc
stc
jnp
mov
rclb
outsb
ljmp
rcrb
dec
addr16
inc
std
add
sbb
ss
xlat
in
jmp
xchg
daa
jo,pt
mov
js
push
pop
pop
cmc
subb
sbb
cmpb
shlb
inc
xor
jnp
cmc
xlat
add
lea
enter
lret
jle
inc
dec
mov
or
inc
dec
inc
test
adc
cmp
rclb
movsl
pop
push
and
imul
nop
dec
hlt
jne
inc
cmpsb
fbstp
incl
and
xchg
nop
add
mov
arpl
add
and
mov
aaa
jmp
jecxz
sub
aam
jnp
push
lcall
shrl
fiaddl
mov
cmpsb
lahf
xchg
cmp
popw
outsb
xchg
shl
lret
out
jno
push
inc
popa
adcl
sub
push
dec
push
fld
inc
mov
fisttpll
or
mov
push
iret
sahf
jbe
add
into
js,pt
pop
fadds
test
mov
lods
lret
push
dec
xchg
add
int3
movsl
es
mov
xchg
cmpsl
mov
and
out
aas
push
pushf
inc
push
outsb
sbbb
shl
dec
das
cmp
adc
pop
daa
sbb
xor
mov
jp
sti
lea
loope
popa
arpl
clc
and
loope
or
inc
adc
cld
adc
and
adc
pop
sarb
cmp
int
cmp
lret
stos
outsb
hlt
cltd
mov
xor
add
dec
mov
dec
inc
pop
subl
or
jge
pop
sub
or
xchg
subl
mov
rcrb
inc
filds
cmc
les
hlt
addr16
or
jnp
int3
lock
jg
fidivrl
lret
cmpsb
shlb
pop
xchg
pop
dec
sub
push
jb
jge
xor
test
stc
pop
sbb
push
lahf
push
movsb
in
lret
aad
sbb
dec
fmul
and
dec
stos
out
outsb
pusha
ret
xor
pop
and
fstps
outsb
sbb
sub
jb
out
cmp
xchg
jb
inc
in
jg
stc
loope
insl
mov
mov
cmp
mov
rorl
mov
xchg
pop
jne
cmp
int3
mov
inc
xor
adc
inc
dec
cmp
push
ja
dec
nop
cmpsb
mov
pushf
fadd
bound
sub
sbb
dec
pop
xor
inc
std
imul
incl
mov
js
fs
es
movsl
sbb
mov
xor
add
rcll
xor
out
add
stos
dec
xor
addr16
add
pushf
call
scas
inc
fstpl
addr16
mov
mov
lock
pusha
cwtl
mov
mov
imul
aas
popf
mov
ds
into
inc
ss
repz
sbb
lods
xchg
dec
and
int3
js
fsubl
pop
jno
dec
or
popf
push
ror
xor
cli
fdivl
mov
pop
call
add
scas
sbb
jl
in
or
shrb
or
gs
in
xlat
dec
jbe
mov
sbb
xor
xchg
or
scas
mov
push
ss
sbb
cmpsl
mov
cmp
call
add
movsl
scas
cltd
mov
inc
push
xchg
loop
inc
add
xchg
push
test
rcrl
push
sbb
lahf
xchg
inc
dec
repz
in
loop
mov
loopne
jno
lea
xchg
idivl
ja
loopne
mov
sub
imul
popf
inc
xchg
aam
mov
insb
jecxz
inc
and
fbstp
test
inc
or
cmp
cmp
repnz
push
xor
and
pop
popa
xor
inc
and
xchg
mov
stos
cld
inc
adc
icebp
or
ret
cmp
dec
sbb
jmp
ljmp
in
push
leave
sub
xchg
fdivrs
mov
outsl
sarl
cmp
mov
sti
test
jmp
push
xlat
sub
dec
push
and
jp
xchg
lret
xchg
dec
adc
mov
lock
fists
lahf
mov
hlt
push
and
fnstcw
add
lret
adc
lds
mov
mov
shl
xchg
aas
sub
enter
jp
jno
cld
or
repz
das
jbe
mov
pop
nop
dec
sbbb
xchg
mov
mov
add
xchg
pushf
xchg
repnz
inc
cmpsb
mov
inc
add
int3
sbb
int3
push
out
pop
inc
fiaddl
mov
cmpsl
cmpsb
push
push
std
lss
aas
add
and
loope
sbb
or
shlb
sbb
fwait
bswap
lret
pop
cli
or
inc
or
xchg
cmc
ss
lds
or
mov
movsl
movsl
xor
jge
sbb
aam
push
pop
call
fldcw
mov
add
popf
enter
mov
divb
xchg
mov
sbb
cmpsb
push
sarb
mov
xchg
adc
inc
in
mov
aas
jnp
adc
xchg
loope
adc
outsb
pop
mov
mov
mov
test
pop
ljmp
in
fildll
push
inc
sub
rol
in
ljmp
inc
cmp
cmp
lods
scas
clc
inc
sbb
mov
jo
leave
lods
jle
push
mov
jns
xchg
mov
push
jbe
push
loop
or
xchg
sub
pop
mov
and
cmc
xchg
adc
fidivrs
push
repnz
push
lods
xchg
nop
xchg
daa
ss
shll
cli
pop
ss
mov
push
addr16
mov
dec
mov
mov
adc
je
aaa
jp
sbb
xchg
mov
sarb
dec
jmp
mov
in
pop
sahf
ficoml
fildl
or
ljmp
stos
icebp
add
and
sbb
sub
dec
mov
mov
pop
cmpsl
pop
jge
test
shrb
fisubrs
jns
push
lea
daa
pop
loop
dec
mov
jns
pop
dec
and
jae
sub
out
aam
and
jns
iret
adc
mov
adc
mov
mov
in
sahf
and
xchg
mov
adc
push
cmp
xchg
hlt
aad
mov
mov
mov
jl
hlt
adcb
rcll
btr
or
push
mov
in
xor
pop
push
call
xchg
xor
out
int
pop
cmpsb
imul
flds
mov
push
jge
ljmp
and
fisubrl
insl
cli
cmp
jmp
add
nop
lea
fwait
push
fwait
leave
sub
sbb
clc
push
daa
fistpl
subb
xor
mov
xor
rcl
add
add
lods
xor
xor
dec
push
adc
pushf
arpl
dec
jecxz
inc
scas
aad
imul
pop
push
in
add
push
push
lahf
lea
jne
cmp
sbb
popf
push
dec
mov
sbb
ret
sti
xor
lahf
divb
ljmp
jb
xor
scas
jge
sub
jne
pop
jecxz
fnsave
lahf
and
outsl
in
cmpsl
insl
insl
imul
dec
inc
and
push
jle
cli
mov
leave
insl
push
scas
lret
int
popf
shlb
jl
ret
dec
mov
xor
adc
xchg
sub
addr16
xchg
mov
mov
lcall
jns
ss
movsb
out
es
ror
jmp
out
call
xchg
push
cmp
inc
leave
and
cmp
or
fcom
mov
xchg
cmpl
dec
rcr
xchg
inc
call
lret
mov
mov
xchg
popa
nop
jb
pop
and
jns
pop
stos
cmp
in
cli
add
int3
or
push
jnp
mov
sahf
testl
xor
jmp
roll
test
es
fwait
cmpsb
dec
mov
js
xor
mov
sti
cli
daa
or
das
ficoml
test
fisttpl
sub
iret
xchg
sbb
sub
jo
lds
lock
mov
lret
jno
mov
push
mov
xchg
imul
shlb
cld
je
pop
jg
inc
pop
mov
fwait
jle
jl
cmp
push
mov
and
xchg
sub
or
lcall
xor
movsb
lds
stc
stos
int3
fistpll
xchg
fs
or
lock
adc
jb
sbb
bts
daa
icebp
xchg
test
sbb
inc
push
pop
mov
enter
xchg
divb
jge
ds
insb
sbb
adc
jae
into
lods
and
stc
xchg
test
mov
cmpsb
std
cltd
cli
adc
loopne
pop
jl,pn
into
lock
aaa
adc
ljmp
adc
ret
adc
hlt
sub
jno
dec
push
xchg
xor
out
ljmp
arpl
push
jbe
mov
jnp
lods
mov
xchg
jb
dec
sahf
aam
xchg
push
adc
dec
cmpsb
outsb
mov
fbstp
push
std
mov
repnz
xor
xor
add
imul
jae
aas
pop
sti
mov
sahf
les
jmp
hlt
mov
leave
les
fwait
xor
sbb
int3
pop
and
jle
jp
sti
jp
fwait
mov
inc
add
dec
jmp
ret
mov
add
pop
adc
push
jbe
dec
insb
test
rorl
lea
inc
icebp
mov
call
lods
xchg
lcall
iret
mov
xor
out
jbe
lea
sbb
movsb
aas
out
push
jmp
test
pushf
xor
xlat
scas
dec
enter
mov
lock
loop
sarb
popl
aas
mov
lods
js
aad
mov
mov
rep
inc
movsb
dec
jg
fnstcw
gs
xor
rclb
push
iret
xor
jne
pop
ret
sub
bound
mov
sbb
sub
cmp
ja
push
addr16
mov
ds
dec
or
pop
fsubp
mov
daa
jge
xchg
jl,pt
ret
scas
cltd
mov
dec
cld
inc
and
pop
hlt
fstp
leave
adc
xchg
sbb
fldcw
scas
pop
xchg
sarl
ror
dec
sub
xor
les
roll
xchg
rcl
push
dec
mov
rorb
pop
xchg
mov
xor
scas
cmc
pop
xchg
xor
mov
das
mov
inc
test
sub
add
fwait
repz
mov
mov
cmpsb
cmp
rorb
jns
bound
aad
in
scas
addr16
push
lods
test
jle
jmp
push
outsl
dec
xchg
hlt
push
scas
sbb
and
xchg
enter
cmp
pop
fcomps
mov
cli
lcall
pop
cltd
leave
ss
nop
scas
mov
push
sbb
aas
mov
dec
mov
fldcw
testb
dec
push
mov
sub
push
push
xor
aaa
fcoml
pop
adc
jmp
sbb
pop
jb
xchg
dec
inc
xchg
mov
and
test
fstl
insl
jecxz
mov
lods
rolb
imul
sbbb
mov
add
mov
mov
test
xor
fs
fwait
mov
or
std
mov
test
or
mov
mov
scas
lods
cmpsb
imul
mov
or
test
fs
cmp
aad
fnstcw
sbbl
jns
flds
mov
mov
inc
mov
popa
sti
lret
outsl
lock
imul
and
fcomip
mov
in
shlb
subl
and
stos
int
mov
and
js
jae
inc
daa
les
ret
or
adc
leave
dec
mov
cmp
lahf
mov
aas
and
mov
ljmp
mov
in
punpcklbw
repnz
gs
dec
popa
pop
data16
push
xchg
dec
das
scas
or
sbb
or
into
push
shlb
inc
lcall
ljmp
int3
aas
into
iret
pushw
inc
add
or
fidivl
mov
or
stos
dec
fisubrs
add
popa
sbb
sub
insl
mov
inc
sbb
lea
sbb
jo
pusha
dec
inc
fmul
test
loopne
loop
sbbb
jbe
cs
addl
cltd
ucomiss
add
mov
leave
jbe
sbb
mov
aam
ds
inc
pop
lea
ja
loopne
stc
xchg
push
jb
int
mov
imul
or
bound
inc
call
scas
stc
insb
stc
arpl
sahf
mov
jb
cmpsb
adc
test
pushf
inc
fnstenv
repnz
inc
dec
add
xor
pop
sbb
imul
dec
sbb
mov
or
aad
xor
mov
popl
movsb
and
sub
xchg
push
jle
xor
push
rol
mov
mov
mov
xlat
pop
push
in
stc
jecxz
fistl
xchg
mov
out
sbb
loop
imul
repnz
aad
lds
data16
mov
and
sahf
mov
mov
push
test
inc
and
lea
add
lret
subb
iret
hlt
scas
push
call
cltd
lahf
int3
cmp
pop
sahf
push
dec
sub
or
sbb
adc
scas
mov
lock
lret
or
repz
fnstenv
push
mov
adc
out
fisubrl
mov
xchg
enter
add
je
push
es
fld
inc
mov
xchg
pop
ret
mov
stc
jns
lret
push
or
mov
sti
sbb
leave
out
clc
pop
inc
repz
adc
sbb
xchg
ss
out
adc
aad
nop
aad
subps
leave
lods
mov
jl
jne
sub
mov
imul
mov
dec
adc
out
cli
nop
cmc
in
int3
and
xchg
add
cmpsl
dec
int3
jge
mov
xlat
ja
bound
dec
lret
mov
sub
loopne
pop
cmpsl
test
es
push
lea
fdivr
jecxz
aas
mov
push
dec
sub
fistl
stc
mov
cmp
mov
dec
arpl
dec
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
and
adc
das
pop
jp
and
rcrb
sub
xchg
shl
inc
testb
sbb
cmpsb
popf
aad
cltd
ficoms
arpl
pop
adc
jns
push
jo
daa
or
lea
sahf
jl
popa
xor
enter
pop
ljmp
outsb
and
mov
jecxz
shl
mov
push
cmp
repz
in
aad
lods
cmpsb
push
mov
dec
sbbb
push
pop
adc
scas
lods
ds
rcr
xchg
jecxz
pop
mov
popf
test
sahf
jns
jb
push
int3
add
into
lods
pop
sub
sbb
xchg
mov
lock
mov
jae
mov
push
mov
pop
mov
and
lods
sbb
mov
aam
ret
xchg
loope
aaa
inc
pop
test
call
ja
out
shrl
fisttps
leave
fdivl
lds
shlb
pop
movsl
mov
inc
ja
mov
pop
aaa
pushf
push
loope
sub
jecxz
push
jnp
dec
push
sub
push
outsl
ds
movsl
adcl
jbe
sub
mov
movsl
inc
pop
mov
push
add
aas
nop
mov
cmpsb
enter
fisttpl
mov
add
xchg
imul
jns
mov
lret
push
scas
push
xor
cmc
lahf
sub
mov
push
loop
in
or
lods
sbb
fisubrs
jb
insl
pop
pop
dec
cmp
dec
mov
sbb
jae
nop
push
scas
lret
testb
xor
jne
hlt
addr16
or
out
adc
sub
and
cmp
pop
sarb
jge
xchg
xchg
pushf
jle
xor
and
sbb
xor
or
icebp
xchg
xlat
cmp
pavgb
mov
or
les
cmp
add
push
inc
testl
ret
cmp
idiv
test
push
mov
fldcw
outsl
test
adc
lcall
lret
and
and
int
xor
push
xchg
jp
outsl
shll
cmp
jecxz
xor
mov
pusha
popf
adc
cmp
nop
pushf
int3
or
popa
ret
xchg
sub
lcall
sub
push
xor
xchg
dec
xorb
inc
in
in
andl
fildll
jne
mov
outsl
xchg
sub
outsl
xchg
rcll
popf
int
das
fstpt
notl
dec
loop
mov
sbb
shll
rorl
mov
inc
mov
jecxz
nop
pushf
mov
ljmp
and
cmpsb
hlt
mov
and
call
xchg
mov
scas
mov
jns
xchg
ja
mov
xchg
cmp
jno
push
or
mov
push
or
xor
out
fwait
adc
test
lcall
roll
or
mov
in
mov
or
stos
pop
clc
add
fists
cmp
and
pop
das
push
je
test
adc
add
xor
xchg
push
or
cmp
aam
push
jnp
jmp
dec
rcl
sahf
jno
mov
imul
fisubrs
fsts
ljmp
call
pop
imul
jne
sbb
imul
out
sub
pop
popf
cmp
out
dec
dec
adc
and
xor
add
notl
test
xchg
jp
dec
lods
testl
repz
ja
cmp
jge
ja
subl
roll
lea
pop
mov
aas
cmp
hlt
jg
ja
rcrb
std
lea
mov
push
jge
inc
mov
mov
scas
lods
es
stos
push
cmp
sbb
jge
rcl
xor
ss
hlt
add
sub
jae
inc
je
xchg
sarb
fidivrs
xor
mov
xchg
roll
xchg
push
push
push
jl
das
pop
mov
fdivrs
aam
or
fmuls
ret
outsl
push
in
leave
jae
imul
adc
aad
jb
ror
cmpsb
add
test
movntq
sbb
mov
mov
inc
lock
dec
inc
lea
jl
aas
mov
bound
movsl
jae
sub
cwtl
in
popf
push
es
add
in
popw
pop
add
xor
rclb
push
mov
int3
popa
aad
push
inc
or
adc
fsubl
cmp
push
push
repnz
push
ret
dec
fsubr
pop
outsb
and
fisubl
mov
and
outsl
orb
push
sub
out
pop
icebp
jl
pop
xchg
xor
insl
test
mov
in
add
xchg
push
xor
roll
adcb
scas
andl
int3
jns
jb
icebp
fistl
int
jl
std
inc
es
lock
cmp
es
mov
out
cmp
aad
lods
mov
xchg
arpl
dec
xor
cmp
ds
movsb
pop
xchg
roll
jp
pushf
mov
std
cmp
scas
and
in
fbld
inc
repnz
lock
les
pop
xchg
jns
mov
and
pop
cmpsl
idiv
xchg
jnp
inc
pop
and
push
pop
in
push
xlat
pop
nop
pop
sub
sahf
or
jl
nop
lcall
fs
fsubl
addr16
cltd
sbbb
data16
xchg
pusha
push
ja
out
jno
inc
stos
mov
dec
insl
daa
ror
pop
ja
aam
roll
xchg
arpl
mov
push
xchg
push
pop
daa
jl
clc
inc
push
insb
out
int
xchg
mov
cs
cli
xor
out
dec
ss
fcoml
loope
and
ret
mov
jns
cs
pop
jge
push
dec
sahf
xor
xor
and
inc
fneni(8087
test
shr
cmp
insb
cmpsl
pop
or
mov
xchg
adc
jg
test
inc
clc
cli
and
insb
pop
add
jmp
sarb
lds
sahf
mov
inc
cmpsl
fsubp
cmp
xor
sti
testl
jecxz
fidivs
inc
test
mov
fdivrp
fdivs
iret
fdivp
aas
and
and
xchg
sub
rcll
daa
cltd
stc
js
xchg
pop
pop
xor
test
or
mov
xchg
fldenv
imul
incb
fwait
mov
sahf
pop
inc
mov
xlat
mov
push
fisttpl
mov
iret
lret
fabs
daa
xchg
shll
inc
je
je
xorb
push
push
push
outsl
out
test
jle
cmpsl
pop
lret
scas
adc
iret
xchg
adc
inc
xlat
std
sahf
jno
stos
or
push
fs
pusha
sub
and
sub
movsb
sarb
pop
pop
test
mov
rcrl
adc
into
adc
ss
inc
shl
or
xor
mov
pop
mov
bound
popl
into
jle
add
loopne
push
addr16
pop
add
xor
xor
call
js
loope
pop
push
jge
popf
in
push
inc
clc
fistpll
imul
fnsave
xlat
hlt
push
xor
inc
mov
mov
jecxz
jl
fst
cmpsl
test
addr16
pushf
jl
mov
cli
daa
xor
add
inc
push
pop
and
xchg
push
and
jae
mov
mov
fiaddl
fldcw
adc
repnz
jae
les
sbb
sbb
fstpl
pop
lods
fdivrl
cltd
es
movsb
loop
stos
ljmp
cld
jo
pop
clc
sbb
hlt
push
pop
cmp
mov
inc
inc
cmpsb
rol
xor
ret
bound
shlb
retw
or
and
inc
jbe
jnp
mov
mov
lods
cmp
mov
sub
and
pop
int3
mov
add
or
inc
es
hlt
xor
cmp
mov
mov
inc
mov
test
leave
dec
leave
aaa
jg
scas
mov
out
lahf
and
push
int3
rclb
sub
adc
sahf
iret
push
xchg
push
repnz
enter
mov
push
aad
outsl
pushf
movsl
loopne
outsb
dec
aam
dec
test
loop
outsb
stos
sub
aam
inc
cmp
mov
inc
jne
dec
jl
xor
in
pop
cmp
addr16
popf
inc
adc
int3
and
lea
sub
push
in
sti
ljmp
test
aaa
add
mov
cltd
xchg
fstpt
and
movsb
inc
rclb
mov
xor
pusha
lret
push
out
std
loope
add
mov
andb
and
mov
mov
pop
xor
cmp
ret
stos
dec
outsb
mov
jb
jne
add
inc
pop
test
xchg
ss
xor
xor
shll
or
jnp
xor
jp
adc
push
cmc
cmp
cmc
lea
cmpsl
jbe
push
ljmp
xor
data16
cmpsl
and
add
xchg
sub
in
xor
ljmp
call
das
addr16
incl
dec
or
arpl
push
imul
sahf
ss
xchg
jmp
lret
rcr
imul
xor
or
ljmp
or
cltd
scas
stos
dec
lret
ret
std
imul
add
pop
adc
or
loopne
inc
fs
int3
ds
lret
mov
gs
arpl
test
fnsave
mov
push
adc
loope
xor
and
cmpsl
sub
loop
jmp
stc
add
cld
cmp
mov
push
mov
sbb
scas
or
gs
cmp
inc
je
pop
pushf
cmp
xchg
push
mov
and
repnz
rcr
lods
scas
jbe
leave
cmp
push
sbb
cmp
xor
jmp
mov
fsubrp
push
fstl
outsb
inc
ret
push
cmp
test
jb
push
push
fmul
mov
pop
clc
push
les
fistpl
mov
cmpsb
pop
pop
aam
iret
ljmp
aas
inc
mov
ss
jns
pop
sbb
sti
test
pop
xor
daa
inc
lods
mov
dec
xchg
fcmovu
add
dec
decb
fldt
jle
or
iret
cmp
ss
test
xor
insl
insl
pop
jnp
data16
pop
jo
jno
call
mov
out
es
mov
sub
jle
sbb
repnz
cs
push
xor
lret
xchg
fstl
cmp
jp
xchg
cld
add
xchg
mov
lock
jno
sub
mov
xor
mov
jle
inc
shl
xchg
mov
add
sbbb
adc
shlb
movsl
movsl
or
insb
pusha
bound
sbb
push
cmp
cmpsb
stos
fimuls
enter
jo
xor
mov
popf
es
mov
mov
sbb
push
sahf
xchg
sahf
aad
adc
rcrl
or
adc
out
mov
imul
fsubr
aam
sti
sub
cmp
add
testl
mov
and
dec
xlat
mov
fimull
xor
ds
ljmp
imul
adc
and
mov
std
jno
mov
movsl
jne,pt
inc
and
push
inc
aam
xlat
adc
js
outsb
sbb
js
andl
jmp
loop
loop
int3
movsl
xor
dec
iret
push
js
pop
ret
add
mov
inc
stc
or
mov
popf
mov
in
pusha
les
das
xor
mov
inc
add
daa
arpl
leave
or
dec
jl
xor
pop
or
pop
sti
inc
jecxz
sbb
stos
sbb
test
xchg
add
mov
stc
mov
pop
jecxz
in
add
pop
ja
adc
daa
bound
imul
icebp
fdivrp
repnz
pushf
bswap
xchg
adc
dec
push
aaa
pop
sub
in
sbb
imul
aam
push
bound
xchg
xor
adc
out
cmpsl
js
arpl
lahf
outsl
mov
xchg
add
adc
xchg
xor
in
xchg
adc
aad
es
aas
mov
pop
xorl
addl
mov
div
mov
xor
and
sbb
test
or
inc
and
mov
rcr
sbb
flds
fwait
pop
mov
outsl
add
int3
mov
stc
or
test
in
inc
and
ss
sahf
jne
pop
lods
rcll
or
cmpsb
mov
dec
mov
adc
lods
mov
mov
imul
call
movsb
test
push
push
jmp
xor
jne
add
xchg
push
push
test
pusha
mov
shrl
and
lds
pop
jp
adc
xchg
cmpsl
cmp
jle
mov
jne
xchg
pushf
push
fstl
stc
insb
loop
pop
sub
or
push
rcrl
insl
data16
clc
repz
add
or
daa
mov
in
fisttps
out
lods
pop
ret
std
sbb
test
mov
bound
lahf
mov
xor
and
and
and
inc
call
scas
iret
jp
push
inc
pop
push
aas
mov
push
push
push
pusha
ficompl
pop
and
cmp
add
iret
dec
clc
mov
mov
lea
test
sti
movntps
imul
dec
mov
adc
in
fistl
cmp
and
sub
sbb
push
mov
pop
out
test
shll
fnstcw
mov
ja
hlt
inc
inc
xchg
std
sbb
push
push
fs
and
push
or
inc
jns
imul
sub
int
hlt
or
shr
push
xor
adc
into
mov
pop
cltd
mov
xor
outsl
mov
mov
test
mov
or
ljmpw
jecxz
cltd
dec
push
fldenv
pop
popa
add
aam
mov
lods
dec
adc
mov
adc
or
xor
leave
cmp
mov
insl
inc
bound
jg
pop
jo
push
aaa
repnz
xlat
leave
mov
mov
inc
mov
enter
sbb
subl
dec
sub
scas
popa
je
mov
clc
lds
adc
je
dec
enter
push
mov
aad
jge
inc
daa
sub
push
scas
subl
pop
xor
rcr
enter
push
lcall
push
mov
lcall
jno
mov
scas
mov
loope
ljmp
in
dec
inc
jno
das
or
jecxz
call
and
add
cmpsl
clc
jp
call
int
or
adc
movsb
mov
mov
out
addl
xor
sahf
cmp
add
scas
jae
aad
addr16
scas
pop
xchg
xchg
ret
popf
cmp
loopne
fdivl
outsl
jnp
add
mov
sub
jo
ret
cmc
popa
das
into
or
push
clc
scas
pop
loope
out
int3
sti
add
mov
aam
add
jecxz
dec
js
jnp
xchg
mov
icebp
mov
mov
pop
in
aad
sub
repz
dec
xchg
ja
loop
sbb
cld
mov
pushf
outsb
push
mov
push
pop
or
data16
lock
dec
and
jmp
jp
adc
pop
mov
dec
punpckhwd
js
jne
mov
int
and
nop
dec
int3
cmp
and
xchg
call
jl
cld
and
addr16
pop
mov
in
imul
das
inc
jmp
lds
shll
lret
jae
xchg
aad
sbb
sti
inc
dec
enter
icebp
xchg
fwait
inc
cwtl
ret
sub
pop
arpl
and
xlat
xor
sbb
push
push
mov
push
or
or
mov
mov
sub
cmp
pop
repz
lods
pop
pushf
test
gs
inc
sar
mov
dec
push
ds
mov
lds
inc
dec
push
cmp
push
fnstenv
mov
add
mov
or
flds
sub
cmp
sub
xchg
in
push
and
mov
fidivs
add
xor
sbb
std
fs
dec
out
mov
cmp
mov
mov
push
lret
sub
mov
fstl
dec
push
cwtl
fisubs
in
call
lods
ja
jge
gs
jmp
sbb
cmp
mov
jp
mov
jp
cwtl
mov
push
fstl
cmp
jno
daa
lea
xchg
or
add
inc
lret
dec
mov
jp
mov
mov
orb
pop
sub
pusha
popf
nop
hlt
aad
daa
dec
cmpsl
bound
inc
dec
sbb
out
sahf
dec
cwtl
ret
mov
iret
outsb
mov
mov
sbb
dec
mov
scas
sbbb
xlat
push
and
mov
or
cmp
hlt
jecxz
jne
inc
das
adc
sub
jbe
loop
loopne
rclb
jno
cwtl
or
fldl
mov
cmp
adc
fwait
jae
mov
in
mov
xchg
fnstcw
or
mov
popa
call
repnz
hlt
push
mov
jl
or
shl
jbe
insb
cmp
fs
in
cs
xor
dec
or
nop
inc
std
cmp
call
clc
in
lcall
pop
cmp
lahf
iret
popa
mov
imul
rcrb
loope
lcall
xchg
bound
jns
ss
call
mov
mov
ret
out
adc
iret
in
mov
add
mov
mov
insb
clc
mov
lea
push
push
mov
lcall
aam
sub
xor
mov
mov
xchg
xchg
lock
and
xchg
stc
loop
jge
push
ficomps
call
mov
mul
pop
and
arpl
stos
or
in
pop
mov
dec
jbe
mov
ret
fs
leave
mov
pop
xchg
xor
and
lret
mov
das
lret
ds
and
and
xchg
sahf
leave
popa
jmp
or
fldl
sub
bound
cltd
or
popa
cmp
addb
fisttpll
pop
sarb
in
cmpsb
pusha
push
stos
xor
sub
mov
mov
xchg
pop
xchg
mov
mov
xchg
sahf
mov
or
mov
adc
xor
add
cmp
mov
add
push
lea
jp
sbb
xor
dec
scas
icebp
mov
ret
sub
mov
testb
cltd
pushf
xchg
xor
mov
and
xchg
out
iret
cmpsl
xchg
das
gs
stc
add
push
cmp
movsl
ss
cmpsl
cld
and
scas
mov
mov
mov
mov
mov
mov
mov
into
paddw
adc
fsubs
sub
jmp
dec
and
inc
pop
jnp
sbb
mov
popa
fwait
lret
insl
ja
jo,pn
cmp
mov
or
or
std
xchg
cmc
mov
inc
jmp
inc
or
mov
or
and
clc
adc
pop
stc
and
shll
push
pop
xchg
mov
mov
std
stos
test
clc
sahf
and
inc
cli
aad
les
or
cmp
inc
aam
mov
arpl
inc
iret
movsl
leave
popa
adc
cmc
xor
push
mov
cltd
rcll
add
and
aad
mov
cltd
out
jnp
cli
xor
aad
push
insl
aad
les
insb
fs
pop
add
xchg
or
jbe
andl
dec
int
inc
outsb
push
jle
lods
pop
popa
xor
pushf
push
icebp
mov
xlat
lods
iret
fdivrs
and
push
or
pop
xlat
mov
filds
test
or
mov
lds
fisttpl
xchg
and
cmp
or
xor
cmpsl
test
cli
jns
fidivs
fidivrl
push
and
push
inc
cmpsl
mov
xchg
shll
cltd
sti
aas
xchg
ja
dec
ds
inc
mov
jns
fwait
dec
loopne
stos
cwtl
xor
fs
iret
ss
shlb
adc
push
pop
adc
push
leave
mov
mov
sub
sbb
lcall
xorl
aaa
lods
push
out
stos
mov
out
sbb
mov
add
sbb
jle
mov
jge
test
adc
fucomi
fucomp
lds
out
push
nop
lret
cmpsl
xor
cmp
fstpl
lahf
dec
dec
lock
sbb
pop
adc
movsb
test
jae
sti
scas
lea
sbb
sti
je
fwait
lock
or
ret
iret
out
mov
lods
mov
mov
xor
test
sahf
cmp
xchg
in
sbb
push
and
test
mov
clc
flds
fnstsw
jno
mov
mov
bswap
out
push
cwtl
inc
in
and
sbb
iret
out
sub
fmuls
push
into
das
les
adc
xor
daa
clc
push
popf
lock
in
mov
xchg
push
jle
cld
icebp
push
dec
mov
fldenv
jno
sbb
test
mov
jne
out
cs
dec
pop
jb
xchg
ss
rcrl
xchg
sub
dec
inc
aaa
mov
sub
fisttps
fidivrs
mov
inc
test
mov
stos
pushf
mov
loop
test
push
nop
push
clc
sub
cmp
fiadds
pop
lret
xchg
mov
mov
fstpl
cmp
sub
aaa
adc
or
imul
and
pop
aaa
je,pt
cmpl
lds
jae
jne
fucom
popf
jnp
pop
adc
xchg
inc
sub
and
xchg
adc
pop
sar
aaa
test
shlb
mov
mov
fcmovnu
cmp
fwait
inc
sbb
pop
in
lahf
out
int
sbb
scas
fisubrs
sbb
xor
int
leave
xor
test
lahf
xor
loope
ret
popf
xchg
push
jnp
add
daa
xor
cmp
ss
mov
mov
shl
out
in
test
in
int3
sub
mov
gs
adc
xchg
lcall
rorb
sub
mov
xor
add
cmp
or
xor
stos
sub
mov
sub
or
sbb
stos
cmpsb
dec
add
ret
push
xchg
idiv
mov
cli
mov
mov
adc
icebp
in
into
xchg
adc
inc
nop
pop
push
je
das
jmp
mov
rcrb
mov
push
sti
test
or
movsl
mov
pop
mov
out
dec
mov
test
lret
jle
fstpt
cld
pop
cli
xlat
repz
push
add
aam
ror
pop
push
add
inc
js
gs
xchg
in
xchg
cmp
dec
dec
pop
inc
pop
int
enter
xor
or
out
in
pop
pop
push
cltd
push
outsl
repz
test
lret
clc
jnp
enter
cmc
push
stos
arpl
ret
mov
or
xor
aas
dec
inc
and
mov
dec
rcrl
cmp
icebp
repz
adc
shlb
jnp
sbb
loope
pushf
inc
xchg
test
and
mov
or
adcb
inc
out
lods
popf
inc
lock
lret
jo
in
aad
in
dec
and
nop
push
stos
leave
and
mov
sub
push
sbb
add
mov
out
ror
lea
inc
pop
xchg
out
aam
call
jb
test
outsl
cmp
adc
pusha
mov
or
dec
and
add
jbe
push
fists
push
or
sub
xor
xor
repz
adc
ror
xchg
jp
mov
adc
jb
inc
fisubs
and
sub
sub
sbb
mov
sub
insl
mov
rcrb
fwait
sahf
push
adc
xchg
sbb
xchg
lods
not
aas
add
stos
shll
lahf
dec
cld
popf
pop
ja
inc
xor
xchg
jo
stos
imul
mov
outsl
aad
aaa
daa
and
js
xchg
divb
mov
adc
add
add
pop
xor
dec
dec
sbb
jle
push
mov
movsb
or
dec
push
aad
inc
dec
movsb
add
xchg
lods
mov
mov
pop
sbb
hlt
outsl
sarl
mov
sub
push
nop
pop
notrack
int3
inc
enter
in
ds
push
int3
or
xor
movsb
xchg
adc
xchg
scas
xchg
cvtps2pd
and
mov
test
xchg
mov
xchg
xchg
and
sbb
jb
mov
iret
jge
push
sbb
mov
call
mov
mov
out
repnz
not
popa
imul
inc
fidivs
mov
out
push
sub
xchg
lret
mull
fdiv
sbb
dec
out
jle
and
pop
pop
es
dec
xchg
sub
in
ss
popf
jl
sub
shl
xchg
lock
repz
xor
int
jnp
mov
inc
mov
lret
repnz
adc
lods
loopne
jl
testb
fisubrs
cmpsl
and
push
insb
int
push
jle
out
into
jns
pop
icebp
mov
bound
mov
add
mov
sub
or
out
ljmp
out
je
xor
or
es
aad
pushf
lahf
stc
dec
cmp
std
fmul
jo
inc
aas
mov
adc
add
mov
dec
mov
out
aas
and
mov
jmp
insb
ljmp
lds
mov
adc
dec
xor
out
lea
mov
enterw
pop
xlat
stos
pop
mov
dec
popf
mov
out
cmp
mov
call
repz
fadd
add
jge
cltd
repz
repnz
popf
mov
pop
aaa
add
in
jns
adc
imul
add
fdivl
inc
pop
insb
inc
adc
mov
xor
stc
into
push
jns
pop
sbbl
mov
push
pop
je
lcall
push
push
jo
adc
dec
xor
mov
cmp
jnp
mov
pop
push
push
es
lods
out
rcr
movsl
adc
mov
cld
ljmp
or
inc
or
scas
icebp
rcll
iret
jge
ss
push
ret
pop
ret
mov
and
sti
lock
frstor
inc
fidivs
push
xchg
or
sub
in
pusha
add
pop
dec
cmp
xor
or
inc
add
push
lcall
or
and
in
in
cmp
das
aaa
jae
sbb
add
sti
dec
ja
adc
les
cmp
pop
jno
dec
pop
xchg
sub
test
xchg
or
fisttpl
and
dec
add
mov
xor
pusha
sbb
shrb
inc
jns
iret
inc
mov
dec
fld
cmp
push
orb
inc
sbb
xor
sbbb
lret
gs
pop
dec
cmp
xchg
lret
push
lods
dec
in
jbe
jo
inc
and
inc
mov
loope
repz
in
fs
loope
lahf
xor
push
xchg
popa
out
dec
rcll
dec
movsl
cld
or
xchg
cmp
outsl
mov
or
in
lcall
xor
in
sub
repnz
outsb
in
imul
outsl
or
pop
in
mov
rcrb
stos
xlat
add
es
jbe
mov
clc
outsl
gs
jge
cwtl
push
pop
ror
stos
sub
in
hlt
loopne
popa
xor
daa
fldenv
int
dec
mov
push
test
inc
mov
and
push
mov
cmp
cmp
mov
mov
and
das
jmp
in
aam
dec
dec
xchg
or
addr16
lock
mov
out
ja
out
addr16
xchg
repz
test
pop
dec
mov
jmp
lret
adc
or
sti
dec
sub
clc
outsb
iret
ret
add
dec
jne
loop
out
adc
mov
fs
popa
lds
cmp
or
fstpt
lods
adc
push
mov
mov
mov
cmp
inc
adcb
mov
mov
xor
scas
xchg
dec
jbe
add
sahf
mov
clc
pop
dec
mov
mov
es
add
mov
scas
mov
popf
insb
scas
or
dec
add
sbb
mov
mov
dec
idivl
cwtl
xchg
push
pop
sbb
pop
xlat
sbb
fwait
stos
outsl
push
sub
inc
xchg
testl
repz
aad
jbe,pn
mov
clc
add
and
cli
inc
rcrb
test
mov
test
out
xchg
pop
shlb
sti
imul
dec
cmp
loop
es
arpl
lea
mov
jnp
les
sub
jne
push
negl
mov
jnp
cmp
mov
jmp
xorb
shrb
jmp
or
in
popf
xchg
int3
ret
scas
addb
mov
or
add
je
mov
pop
ret
push
dec
xlat
arpl
int3
adc
clc
cld
fnstcw
test
dec
adc
jns
iret
cmp
lds
call
aas
loop
xchg
sbb
int3
xor
xor
xor
mov
pop
dec
push
inc
inc
fisttpll
int
sub
sbb
inc
stc
sub
or
xor
adc
rcl
subb
lcall
movsl
les
cmp
bswap
inc
mov
mov
sub
jae
shlb
pop
cmp
repz
or
lock
sub
pop
and
or
popf
loope
xchg
jo
or
test
lods
mov
movsb
xchg
fildll
orl
notb
and
mov
sar
cwtl
cmp
jge
in
insl
lods
xchg
push
daa
adcl
mov
or
popl
xchg
out
inc
shll
arpl
xor
xchg
jne
jmp
cmp
mov
outsl
add
lahf
addl
je
test
rorl
sbb
test
lret
mov
adc
and
data16
dec
clc
mov
aaa
or
lahf
xor
dec
or
mov
lds
test
mov
lea
ret
mov
lahf
inc
dec
dec
pushf
inc
cmpl
nop
push
and
loope
test
cld
aam
mov
jno
inc
or
inc
ret
popf
dec
cmp
insb
xchg
bound
cmp
sub
arpl
pop
jl
rolb
or
jns
inc
xchg
mov
les
jbe
sub
stc
adc
fidivrs
stos
aad
mul
push
sbb
mov
jmp
je
mov
adc
xchg
xor
mov
add
push
das
in
jecxz
push
fidivrs
sti
imul
mov
cmp
packuswb
adc
invd
xor
outsb
push
jb
or
rol
xchg
ret
cmp
flds
shlb
int3
sub
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
inc
test
jp
adc
jp
sbb
ficomps
push
sub
mov
push
idivl
jb
ss
lock
movsl
mov
or
ret
lds
mov
xor
mov
jmp
sbb
loop
or
pusha
xchg
add
sahf
aaa
and
fwait
ljmp
daa
loop
adc
push
stos
and
js
push
adc
push
pop
and
xor
or
inc
call
push
dec
cltd
int
push
loop
clc
push
in
jns
mov
je
push
xchg
jle
xchg
mov
mov
leave
ja
xchg
bound
loope
fwait
aaa
adc
fisubrs
xor
or
movsl
xchg
scas
mov
push
das
ja
leave
lahf
stos
in
mov
ret
sti
mov
insb
cmpsb
mov
mov
insb
jae
arpl
push
mov
adc
cld
jle
rcrb
mov
pusha
cmp
jge,pt
xor
sti
movsl
ret
mov
sub
xor
sbb
rcrl
cli
mov
fsubrl
cmp
sahf
fs
sbb
add
jg
addr16
push
movsl
lret
iret
lods
pop
and
fldenv
mov
fbld
sbb
lock
push
mov
and
out
jns
fwait
jmp
cld
addr16
out
insb
jl
dec
push
pop
scas
int
sbbb
mov
mov
sbb
inc
aaa
xor
aaa
popa
adc
lret
int
addr16
cmp
enter
jmp
rcrl
out
and
lods
int
fldl
cmpb
imul
or
push
js
ss
sbb
xor
cmp
or
jg
pop
je
ret
mov
leave
nop
dec
aam
lds
popa
cmp
andb
aaa
sub
inc
jne
enter
loop
repz
and
pop
and
out
pop
ss
fisubs
sbb
jb
inc
in
lret
inc
aad
inc
aam
mov
sub
pop
call
clc
jbe
dec
sbb
stos
and
incb
fwait
push
lea
mov
inc
adc
jl
cld
sbb
add
xchg
jg
add
pop
adc
cmp
jb
add
cmp
mov
xchg
cmpsl
fwait
hlt
cmp
jmp
mov
pop
mov
ds
std
rol
pop
or
out
inc
scas
cmp
imul
and
ret
push
mov
pop
out
sub
push
cmp
movsl
push
cmpsl
mov
frstor
sub
cmp
adc
mov
jbe
popf
mov
pushw
es
mov
pop
jo
stos
add
sub
xlat
scas
in
sbb
leave
stc
add
ja
add
mov
fisttpl
push
dec
or
addr16
rcll
adc
jb
lds
or
out
inc
shlb
inc
int3
pushf
jmp
push
cmc
jmp
or
std
in
dec
xchg
inc
xorb
sub
test
and
adc
and
cmc
lods
cs
sub
jmp
outsb
pop
shrb
sub
jbe
movsb
mov
xchg
push
mov
mov
clc
nop
test
js
cmpl
imul
faddl
jno
popf
popf
cmp
or
inc
hlt
pop
cmp
xchg
xor
fldt
aas
imul
jg
adc
push
subl
or
fimull
lret
inc
pop
inc
lcall
push
mov
out
cmp
cmp
adcb
jnp
ja
in
into
mov
add
jne
rcl
or
lret
jmp
test
jg
adc
xor
sti
jp
inc
cmp
push
xorb
popf
stc
test
mov
clc
push
lret
xchg
in
xchg
push
mov
inc
popf
movsl
pushf
insb
imul
mov
cli
mov
jb
div
popa
mov
clc
out
jmp
divb
cmc
mov
dec
push
mov
mov
negl
jo
fxtract
lock
dec
test
lcall
sub
pop
in
push
mov
aas
pop
push
push
sub
test
pop
fldenv
pushf
push
jp
jno
pop
sub
jl
in
cmc
insl
ja
js
jbe
scas
aam
adc
sub
shr
xor
sbb
cmpsl
pop
bound
js
mov
xor
pop
shrl
loop
insl
jno
inc
scas
std
mov
jge
outsl
ja
hlt
pop
push
mov
pop
inc
fildl
add
dec
inc
inc
push
fldenv
or
into
sbb
scas
dec
push
mov
sub
inc
xchg
es
sbb
xorb
add
and
fsubrl
js
mov
push
lds
cmc
sub
sbb
fcmovnbe
iret
icebp
out
push
iret
sub
mov
push
repnz
das
or
movl
loope
fistps
rol
xor
add
or
stos
outsb
push
mov
cmpsl
test
add
mov
out
lret
stos
out
xor
mov
dec
mov
jl
cli
ljmp
or
into
sub
sbb
lcall
lock
mov
lret
mov
dec
hlt
sbb
daa
pushf
leave
ljmp
stos
movsl
jle
shll
adc
push
stos
addr16
dec
pop
mov
inc
mov
xor
leave
pop
jo
ds
pop
mov
or
adcl
xchg
ljmp
lods
inc
adc
loopne
mov
fldenv
mov
mov
fidivrl
ja
ror
push
icebp
inc
sbb
into
xchg
scas
test
pop
subb
das
fadd
push
shl
loopne
out
sbb
test
out
and
inc
mov
jle
inc
sub
pop
inc
sbb
repz
xchg
or
mov
sbb
jbe
in
inc
cmp
pop
adc
iret
enter
adc
insl
jno
and
aad
clc
mov
aam
in
push
ret
adc
xchg
push
pop
sub
das
icebp
and
sub
out
je
ret
scas
adc
lret
ret
and
cmp
mov
andb
jle
pop
push
fisubrl
jmp
dec
pmuludq
mov
or
insl
push
xchg
popf
jl
mov
push
xor
int3
ds
aaa
xor
push
jne
pop
sub
out
inc
fstps
mov
cmp
pusha
es
movsb
or
fdivl
jmp
fwait
pop
pop
cmp
cmp
or
mov
lcall
push
inc
pop
push
sahf
or
shlb
cmp
mov
pop
jbe
jg
mov
int3
orl
lock
in
imul
dec
fs
or
sbb
mov
out
cmpsb
lods
jp
push
dec
sahf
imul
gs
frstor
mov
inc
mov
andb
lock
movsl
sbb
mov
mov
cs
push
mov
loope
sbb
test
arpl
addb
leave
cmp
pop
adc
push
call
sbb
cmp
xchg
pusha
mov
pop
js
imul
or
pop
sbb
xchg
lret
out
ret
out
cli
cmpsb
sub
fsub
cmpsb
arpl
out
pop
jns
cmpsl
iret
jge
aad
or
mov
orps
lahf
mov
dec
lret
incb
fst
sbb
imull
das
fbld
mov
loopne
rcll
lret
aaa
test
iret
mov
mov
mov
cmp
loopne
outsb
pop
pop
jp
loope
loope
cmpsb
into
xchg
aaa
int3
mov
mov
mov
push
mov
push
ret
pop
out
xlat
aad
mov
xchg
insl
xchg
clc
xlat
sub
popf
repz
fnstcw
shrb
dec
and
sub
push
nop
add
xchg
and
sbb
enter
scas
out
mov
or
lods
push
jo
sub
dec
sub
in
filds
lods
ret
roll
inc
ficoml
sbb
ja
sub
sbb
sbb
sbb
cwtl
mov
loopne
xchg
inc
cld
mov
xchg
xchg
es
ja
sbb
mov
add
shrl
mov
cmpl
mov
sbb
insb
sub
add
push
andl
cmp
inc
jg
sbbb
shrl
jns
and
mov
ficompl
ss
sub
push
test
mov
dec
call
adc
and
add
adc
push
and
xor
fwait
xchg
pop
or
sbb
dec
adc
mov
dec
mov
rolb
lea
push
jecxz
mov
clc
idivl
pushf
addr16
push
pop
and
mov
out
sbb
jmp
xchg
mov
addr16
add
push
lret
cmc
popa
mov
push
lock
leave
cmp
out
mov
rorl
sub
ljmp
mov
cmpsl
mov
clc
rcrb
add
pop
loop
jmp
data16
dec
lret
xor
insl
mov
movsb
sbb
test
in
aaa
scas
push
and
in
nop
mov
scas
popa
jl
push
inc
into
jge
decb
aad
jg
fimuls
xor
push
cmp
loopne
jmp
pop
xorl
leave
mov
mov
xor
mov
mov
es
inc
or
xor
add
mov
pushf
std
jg
inc
push
cmp
jp
jb
mov
ds
ss
mov
mov
push
push
and
shrl
sub
inc
mov
fcompl
jecxz
cwtl
imul
adc
push
push
jo
inc
push
jb
mov
add
stos
or
mov
push
and
sub
xor
cltd
int3
add
xor
inc
js
dec
pop
and
idiv
cld
cmp
dec
bound
loop
stos
xor
stc
push
adc
dec
js
push
and
xchg
loope
mov
pop
mov
lock
jns
dec
inc
mov
bound
icebp
or
mov
cmp
data16
mov
pop
js
imul
add
sbb
inc
mov
xchg
out
mov
pop
sbb
hlt
out
repz
inc
loope
mov
rclb
push
pop
mov
add
mulb
pop
outsl
jl
jge
pop
or
loope,pt
dec
adcb
fstp
pop
repnz
lret
popf
mov
rclb
push
jmp
push
fidivrl
or
lods
lea
mov
pop
test
mov
movsb
icebp
les
in
subl
push
mov
jge
cmp
mov
gs
lret
mov
adc
sbb
inc
or
and
lods
pop
xlat
cltd
sub
dec
and
cmpsl
xor
cmp
and
adc
in
jbe
mov
or
xchg
gs
sub
arpl
or
in
dec
lds
and
or
jns
repnz
outsl
dec
data16
fcompl
push
add
dec
dec
lods
cltd
dec
push
mov
fcoml
out
inc
fwait
in
sub
jns
jl
out
cmp
sub
mov
sbb
jne
pop
ja
mov
sbb
xchg
push
mov
icebp
jmp
fisubrs
sbb
push
in
mov
fcmovnu
cmp
das
dec
fsubl
pop
xchg
pop
sub
es
bound
fcoml
test
inc
mov
stos
mov
xchg
dec
mov
andb
adcl
das
std
out
mov
into
mov
popf
mov
fnstenv
mov
mov
jl
jp
pop
mov
xor
fs
pop
cmp
xor
sbb
dec
pop
imul
in
js
js
movsl
xor
mov
xchg
cmpsl
inc
push
jo
push
insb
dec
pop
pop
push
sbb
inc
imul
push
mov
outsb
cld
jge
pop
xchg
mov
mov
pop
mov
inc
pop
pop
xchg
inc
jp
cmpsl
je
cmpsl
mov
jno
mov
mov
mov
xor
call
repz
push
mov
movsb
xchg
shrl
dec
sbb
test
jae
mov
mov
cli
pushf
out
imul
test
lss
jp
cwtd
out
ret
fildl
mov
leave
lahf
movsb
fstpt
pop
pop
sbb
in
mov
loope
iret
add
pushf
out
punpckldq
sbb
idiv
jl
cmp
in
pop
scas
sbb
mov
adc
sbb
mov
mov
xor
add
mov
pop
pusha
outsb
sbb
pop
sbb
out
sahf
mov
popa
sbb
pop
xchg
sub
push
mov
push
xchg
out
in
and
xor
or
iret
sub
jmp
mov
xchg
push
or
and
xlat
leave
out
test
ret
or
or
mov
cs
push
dec
push
jg
pop
imul
or
in
outsl
mov
add
sbb
cmp
rclb
xor
xor
rcl
inc
jle
ficompl
popa
push
repnz
or
xlat
pop
loope
adc
aas
icebp
lods
enter
aam
out
add
in
add
mov
mov
jae
adc
mov
xor
shlb
popf
rol
leave
inc
jmp
movhps
add
cmp
rcl
sbb
mov
mov
xchg
mov
push
mov
add
aad
jle
jl
punpcklbw
clc
pop
negb
add
xor
lock
stos
outsb
movsl
xor
xor
xor
sti
xor
lahf
cmp
inc
jmp
in
test
js
mov
aas
adc
into
dec
ret
mov
pop
cmp
jne
fs
ss
sbb
mov
push
mov
xchg
pop
push
mov
mov
jno
or
dec
and
jne
adc
mov
adc
scas
pop
push
mov
dec
lock
pandn
enter
ret
xor
popf
push
int
adc
jae
pop
aas
dec
jne
jmp
mov
repnz
ret
push
pushf
mov
out
sbb
lcall
in
test
arpl
mov
lret
xchg
jle
add
sub
fidivs
imul
jecxz
or
lret
cmp
ret
dec
xor
or
sbb
inc
pop
dec
or
mov
cmpsb
mov
aas
fsubs
loop
or
mov
inc
pop
int3
pop
push
scas
adc
repz
mov
cs
scas
ret
dec
insl
fadds
sbb
outsb
jmp
push
push
imul
addb
mov
cmpl
or
testl
push
sbb
lret
js
int
mov
xor
in
adc
xor
mov
jbe
and
jnp
and
xchg
cmp
xchg
add
push
bound
test
out
stos
inc
sahf
xchg
dec
stos
jbe
jecxz
dec
stc
sbb
xor
enter
cs
aaa
push
rcll
mov
or
insl
ss
mov
mov
or
push
test
lcall
cld
xor
out
movsl
repz
push
incb
xchg
std
jne
adc
out
mov
imul
add
pop
xchg
leave
std
sub
mov
cld
cmpsb
int3
rolb
aaa
punpcklbw
mov
fchs
mov
push
pushf
push
movsl
push
andl
mov
jecxz
and
lods
xchg
in
scas
jo
nop
and
ds
cmp
pslld
fiaddl
inc
lods
orb
test
loopne
call
loopne
push
mov
push
inc
and
in
icebp
adc
mov
mov
mov
rcl
jecxz
sbb
push
leave
add
adcb
movsb
adc
jecxz
pop
mov
and
xchg
jnp
xor
fldenv
cmp
imul
push
mov
imul
sub
dec
dec
mov
sub
pop
pusha
in
adc
aam
insb
dec
cmpsl
popf
dec
cltd
push
lret
jl
push
hlt
iret
cmpsb
sti
sub
jg
sar
mov
movsl
insl
mov
sbb
xchg
dec
lret
inc
and
dec
xor
test
mov
or
loope
pop
fbld
mov
outsl
fsubl
pop
test
cs
daa
bound
popf
push
adc
outsl
outsl
xor
cmp
subl
insb
and
lods
jmp
mov
daa
mov
test
loop
mov
daa
arpl
cld
or
jns
mov
jg
aad
jle
mov
push
cmp
push
pop
dec
movsl
sub
pop
pop
sbb
aam
push
push
push
push
lea
sbb
cmp
pop
xor
in
jns
icebp
mov
cs
orb
fidivrl
mov
insb
lahf
push
sbb
push
out
push
xor
pop
xchg
iret
jmp
dec
lds
mov
dec
dec
lods
shrl
or
and
sub
sub
or
jge
clc
xchg
scas
xor
or
mov
sbb
in
subl
push
rorl
sahf
das
or
ffree
inc
js
insl
test
jne
dec
sub
pop
popa
mov
bound
or
jae
repnz
repnz
movsl
fiaddl
cmp
push
and
sbb
cmp
mov
shll
outsl
int
rsqrtps
das
nop
sbb
sub
aam
lea
xchg
xor
daa
jmp
ljmp
adc
iret
daa
add
and
iret
sti
iret
push
mov
add
fcomi
out
out
test
sbb
daa
mov
push
xor
aaa
xchg
or
mov
sbb
push
jmp
mov
das
nopl
sbb
push
adc
movsl
lods
outsl
mov
push
mov
pop
aam
in
loopne
xchg
shl
adc
push
or
ja
push
xchg
add
xor
ja
ljmp
jge
pushf
sbb
fdivrl
push
imul
dec
lea
rolb
jno
lea
icebp
push
jbe
sbb
int
mov
pop
sarb
xor
or
pop
lea
fcomi
mov
mov
mov
gs
pop
jle
fists
add
mov
insl
adc
stos
mov
ret
dec
lcall
jle
gs
cmp
pop
lret
inc
and
mov
cmp
sub
mov
loope
aas
bound
and
pop
out
mov
mov
sbb
mov
add
into
daa
outsb
insb
pop
and
adc
ret
stos
jmp
jmp
dec
jge
pusha
and
cmpsl
insb
mov
aad
dec
or
imul
movsb
fmull
scas
pop
jmp
xchg
inc
ja
out
add
pop
push
jmp
mov
je
call
sbb
or
pop
scas
mov
mov
call
scas
arpl
cmp
rcrb
or
push
jno
push
inc
and
pop
or
or
call
push
push
sbb
out
outsb
mov
test
rclb
inc
add
add
enter
sub
xchg
addb
add
out
adc
shlb
pop
adc
push
adc
xlat
icebp
sub
sub
loop
fimuls
mov
sahf
sbb
les
xchg
push
sub
cmp
cltd
jmp
iret
dec
jb
adc
stc
and
pop
mov
push
inc
roll
clc
cmpsl
cmpb
sbb
lods
pusha
hlt
sub
sub
mov
lahf
cli
dec
push
inc
cmp
leave
int
loopne
sub
fisubl
cmpb
pushf
jne
sbb
sub
adc
aad
push
push
dec
cmpsl
push
popa
mov
xor
repnz
jo
jne
xor
inc
out
jb
push
push
ja
rcrb
pop
cmpsb
jecxz
or
inc
mov
jmp
dec
xchg
xchg
lods
or
outsb
lret
stc
sub
cmp
icebp
dec
fs
mov
sti
cmovle
imul
in
nop
popf
je
out
je
mov
cmp
cmp
mov
mov
lock
ja
pcmpgtb
adc
shll
lcall
push
and
js
or
and
sbb
sub
imul
add
sahf
xchg
inc
lods
jle
mov
cmpb
mov
ljmp
cmp
push
or
movsl
jne
out
lcall
movb
xor
jns
fisubrl
aad
movsb
mov
out
adc
pop
push
pop
clc
dec
add
test
cmp
cmp
not
and
push
cs
adcb
test
mov
scas
movsb
dec
mov
or
pop
xchg
lea
lds
hlt
movsb
jbe
push
sti
xlat
lods
xor
xlat
jmp
test
jbe
mov
jecxz
mov
rolb
fisttpl
leave
xchg
stos
aaa
hlt
xchg
dec
imul
jle
lret
int3
aas
jbe
dec
sub
mov
cmc
and
sbb
daa
mov
xor
adc
ljmp
mov
mov
into
addr16
push
daa
sbb
push
xchg
sti
pop
xor
cmp
and
pusha
lds
imul
cld
pop
out
aam
mov
bound
stc
das
pop
pop
sbb
jne
pop
movsb
lcall
push
in
mov
dec
insb
pop
fildl
adc
sbb
pop
or
test
xchg
mov
pop
fstpt
xor
lods
fistpl
pop
xorl
stos
mov
dec
pop
push
in
inc
pop
std
test
xor
addb
popf
push
mov
sub
pop
dec
rolb
mov
cmp
mov
das
ljmp
add
push
xlat
std
mov
sub
or
mov
push
dec
jb
clc
and
movsb
or
mov
rclb
mov
sbb
aam
jecxz
xchg
lods
jecxz
mov
adc
pop
mov
cltd
movb
jno
adc
push
fistpll
fsubl
cmp
and
sahf
push
movb
cmp
pusha
cmpsb
adc
int
pop
out
in
ss
insb
rep
call
pushf
lds
cld
mov
push
or
jo
push
icebp
call
out
rcr
sub
add
push
enter
jl
adc
std
cmp
not
dec
xchg
dec
stos
adc
outsb
pusha
mov
push
add
inc
cmp
iret
test
sub
lock
ss
sub
decb
xchg
jl
or
js
push
fdivr
sahf
arpl
pop
test
xor
sar
add
sbb
mov
cmpsl
jle
xor
pop
addb
jge
cmp
out
push
sub
xor
pop
pop
inc
lcall
mov
mov
mov
cli
mov
pushf
cmp
mov
ds
adc
jb
lea
das
push
cmc
sbb
xor
mov
push
xor
pop
add
adc
fwait
dec
pusha
dec
out
addr16
mov
adc
stos
jb
or
loopne
cwtl
add
popa
dec
aas
mov
jp
pop
sub
or
push
or
mov
fs
scas
mov
xchg
jbe
ret
bound
ficompl
push
std
mov
jmp
in
out
add
cmp
nop
adc
adc
sub
and
bound
and
jae
mov
scas
or
adc
lea
and
mov
in
adc
inc
or
divl
push
test
pop
lret
jp
mov
push
aaa
pusha
sub
cmp
int
shll
or
movsl
or
das
outsb
mov
mov
push
mov
mov
push
dec
dec
dec
pop
inc
sbb
mov
loopne
inc
pop
mov
movb
mov
dec
push
pop
or
cld
lea
out
adc
push
out
ss
mov
push
cmp
outsl
lods
mov
inc
jmp
movsl
fadd
add
jae
cmp
out
dec
sub
cmp
mov
and
and
enter
cmp
mov
push
jmp
mov
adc
outsl
mov
shll
and
andb
mov
or
andl
push
push
jb
out
stos
adc
cwtl
pop
xor
pop
add
jl
mov
es
adc
sub
out
in
das
mov
sub
pop
mov
gs
icebp
out
inc
jo
jo
lock
fmull
mov
imul
lret
add
mov
in
adc
in
cltd
idivb
xchg
cmp
loope
or
sarl
mov
in
dec
dec
insb
pop
xor
lret
std
fwait
xor
ss
jp
sub
inc
fadds
test
shll
add
pop
push
xchg
cmpsl
in
push
sahf
jle
pusha
addr16
ja
in
xchg
push
loope
pusha
rol
xor
mov
fcmovnb
adc
fildl
and
push
ror
add
stos
mov
add
mov
dec
add
rolb
or
pop
out
xchg
cmp
adc
sub
pop
ret
cmc
xchg
push
stos
les
add
leave
pop
push
inc
inc
add
popf
push
mov
aam
pop
int3
xchg
push
fisttpl
mov
sete
jb
add
push
mov
mov
cs
cmc
dec
mov
dec
dec
mov
push
hlt
les
sub
and
sub
rolb
jae
xchg
adcl
or
inc
test
cltd
clc
sub
insb
ljmp
adc
xor
cmp
pop
and
stos
nop
outsb
jbe
and
pop
fdivs
xchg
into
cmp
inc
stos
ret
movsl
pop
inc
sbb
outsl
mul
and
ficomps
insl
mov
sub
mov
cwtl
adc
out
pop
mov
adcb
imull
pop
and
mov
dec
ret
sbb
cmp
xor
loopne
xchg
push
jo
xor
je
movsl
mov
and
jp
add
in
jbe
xchg
pop
add
cld
lret
xchg
pop
mov
fnstcw
mov
dec
outsl
and
pop
dec
cmp
lret
lds
mov
xchg
jae
push
fidivrl
popa
add
cmp
xorb
stos
in
sti
and
popa
js
mov
pop
sbb
adc
mov
icebp
leave
loopne
loope
xchg
xor
mov
ror
xchg
aaa
dec
add
outsl
sbb
stc
into
adc
inc
cltd
dec
cmp
test
inc
xchg
pushl
lret
jno
xchg
es
out
call
and
cs
incb
shl
pop
repnz
sub
mulps
in
enter
pushf
or
push
fimull
cmpsl
and
pusha
mov
pushl
mov
inc
mov
decl
lds
jg
cmp
push
movsl
add
xchg
scas
je
ljmp
mov
and
popf
es
xchg
inc
dec
sub
xor
ja
jl
inc
xor
and
imul
addr16
out
and
shll
pop
lock
les
or
arpl
cmp
bnd
fstl
sbb
in
adc
add
test
push
sbbl
loopne
push
and
mov
jecxz
jecxz
and
fsts
pop
mov
sti
jp
cmp
fmuls
push
sbb
xor
mov
jae
outsb
jp
mov
xchg
mov
loop
adc
mov
test
xchg
orl
popa
lods
decl
ja
sub
push
inc
cs
mov
adc
inc
stos
inc
jmp
lret
cmpsl
pop
push
aas
cmp
bound
scas
ja
inc
jle
sar
fidivrl
xchg
mov
stc
imul
sub
dec
loop
pop
adc
fstpt
jg
push
push
jle
add
in
dec
subb
push
rcrb
addb
lods
ret
mov
or
stc
xor
xchg
fsqrt
gs
repnz
out
mov
int
xchg
leave
insl
pop
mov
xchg
out
hlt
xchg
inc
mov
insl
hlt
out
lret
movsl
cwtl
popa
std
xor
mov
xchg
mov
pop
jge
test
ret
scas
in
pop
rep
outsl
int
sub
and
loopne
push
iret
shrb
cli
or
rorl
push
jl
int3
mov
pop
outsb
mov
fidivs
mov
test
cmpsl
push
xchg
inc
into
dec
inc
jl
gs
jae
pop
dec
push
push
pop
and
lahf
cmpsb
int3
or
stc
jnp
data16
arpl
xchg
push
shrb
mov
push
data16
adc
dec
mov
sarl
xchg
fistps
sbb
pop
pop
fildl
je
jns
ljmp
pop
adc
lods
rcrb
push
loop
cmc
stos
dec
fldcw
xchg
filds
push
test
add
subl
add
cmpsb
xchg
mov
mov
sub
xor
push
mov
std
jb
rcrl
outsb
ja
push
sub
mov
loop
pushf
xlat
jge
mov
arpl
cmp
popf
lret
jl
xchg
ret
bound
in
pushl
dec
test
xchg
cld
sbb
lods
push
and
movsb
test
cli
daa
loope
mov
or
sub
mov
lcall
pusha
mov
xchg
push
mov
ficomps
mov
clc
out
xor
in
inc
sub
add
in
pop
insb
je
mov
lret
jmp
cmc
push
lcall
lahf
dec
push
in
or
push
es
mov
pusha
cmp
and
xor
pushf
je
sahf
pop
jne
js
in
out
jns
imul
dec
das
rcll
cmc
orb
popa
mov
lahf
jb
loopne
std
enter
test
lret
pop
push
fnstcw
cmp
ret
or
add
out
pop
jg
inc
mov
je
out
stos
dec
ret
cmp
aad
mov
pop
aad
pop
xor
push
cmp
inc
roll
in
mov
mov
cmp
mov
sbb
cmp
inc
or
jnp
popw
jecxz
mov
das
pop
sub
faddl
inc
mov
sahf
cmpsb
in
fnstsw
popf
jl
push
mov
pop
idivl
cmp
inc
call
dec
cli
sbbl
roll
jp
or
pop
mov
insl
push
into
or
neg
adc
push
sub
insl
inc
lea
jae
nop
or
arpl
outsb
addb
inc
scas
sbb
push
movsl
repz
es
ljmp
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
push
jbe
mov
adc
jp
enter
fiadds
sbb
dec
out
add
scas
sub
add
adc
bound
jg
or
cmpsb
inc
clc
sbb
mov
add
inc
dec
iret
push
in
cmc
fsubrl
int3
mov
fcoms
pusha
dec
cmp
nop
and
pop
rcll
sub
lret
xchg
bound
imul
or
xor
dec
fwait
into
xor
cltd
fs
xor
les
repz
dec
repnz
leave
xchg
cmpsb
inc
movsb
mov
cmp
in
sub
mov
imul
mov
xchg
int
popf
arpl
adc
out
shr
sahf
sahf
mov
xchg
js
mull
test
cmpsl
push
xchg
lods
sahf
int3
mov
push
dec
mov
cli
mov
inc
mov
and
int3
in
fcmove
mov
gs
mov
add
jns
repnz
xchg
jmp
loope
push
sbb
nop
gs
lret
mov
mov
ljmp
inc
sbb
fidivs
insb
adc
iret
fadds
cs
push
rcrb
add
cwtl
arpl
scas
and
lcall
push
jnp
xchg
add
adc
lahf
ret
lcall
and
popf
iret
aaa
insb
fmulp
andl
push
and
mov
jo
and
add
jb
frstor
mov
add
aad
hlt
ds
inc
xchg
push
mov
inc
jns
and
out
push
popf
sub
enter
mov
scas
dec
clc
div
je
mov
mov
dec
leave
ret
stc
xor
push
aam
jbe
fiaddl
stc
dec
rol
mov
andb
outsb
push
in
xlat
popa
loopne
mov
in
les
ficoml
inc
notl
aas
push
adc
and
mov
movsb
rcl
notl
jle
rcrb
push
clc
jo
mov
inc
adc
enter
cmp
ja
insl
popf
stc
faddl
lahf
pop
inc
lcall
loop
mov
pushf
jecxz
pop
movsl
sahf
mov
stos
std
and
sahf
dec
jg
js
jo
movsb
ds
jmp
xor
roll
mov
repz
out
roll
pushf
pop
adcl
mov
loop
cmp
insl
or
pop
inc
xchg
sarl
cmpsb
les
push
push
sbb
outsl
adc
ds
sub
sbb
negb
mov
adc
add
ret
push
push
push
jno
mov
jge
rorl
dec
fdivr
pop
sub
ret
adc
xchg
cmp
jle
stc
mov
popf
mov
jge
fneni(8087
lret
mov
aad
ret
inc
pop
iret
imull
inc
mov
jle
aam
cmp
push
popf
push
add
cs
add
js
hlt
aas
push
mov
xchg
push
addr16
or
push
sub
mov
scas
inc
stos
or
dec
push
cmc
popa
dec
mov
and
icebp
push
mov
mov
dec
cld
ret
loop
jg
mov
loopne
and
call
daa
movsl
jmp
xchg
pop
dec
in
jmp
adcb
mov
popf
adc
xor
and
xor
les
mov
aas
cli
call
fst
and
hlt
cmp
sbb
imul
fisttpll
test
shrl
adc
js
adc
cmpl
test
mov
xor
cmc
in
std
fbld
test
push
cmp
aad
push
sub
mov
out
or
and
push
mov
jb
cmpsl
addr16
xchg
call
push
imul
pop
pushf
iret
ret
clc
jns
dec
and
cwtl
jbe
std
inc
loope
xchg
sub
test
fwait
movsb
pop
jb
and
cmp
ror
fs
mov
push
sub
xchg
mov
jmp
out
sbb
lret
out
xchg
fnstsw
enter
adc
shl
movsl
jne
pop
adc
enter
js
cwtl
mov
gs
aaa
mov
xchg
pop
nopl
addr16
inc
js
xchg
sbb
int3
ret
lcall
lods
dec
push
inc
orb
add
das
scas
xor
mov
push
nop
xchg
push
fistl
out
push
mov
mov
push
pop
cmpsb
gs
inc
iret
test
add
jnp
sbb
pop
out
jb
sbb
sbb
mov
xchg
test
xchg
xor
stos
pop
xlat
fistpl
cmp
addr16
repz
and
into
jg
aam
cmp
inc
sbb
out
push
inc
push
pop
sti
hlt
add
sbb
cli
cld
stos
xchg
out
insl
and
xor
mov
imul
lods
mov
mov
in
and
inc
or
push
sahf
ljmp
pop
in
cmp
stc
in
enter
outsl
jge
mov
out
lahf
dec
mov
outsl
inc
mov
mov
and
lds
xchg
xlat
xchg
popa
xchg
mov
inc
or
lcall
dec
jmp
xor
stc
dec
mov
cmp
movl
pop
into
mov
loop
cltd
mov
mov
arpl
in
adc
aam
mov
jbe
adc
xchg
mov
add
jo
out
idivl
loopne
and
int
mov
inc
inc
adc
mov
inc
pop
js
sbb
leave
add
aas
xor
pop
xor
mov
cmp
test
pop
pop
xlat
iret
inc
adc
ss
adc
mov
mov
mov
into
xor
push
imul
adc
in
jecxz
add
add
mov
neg
movb
pop
aaa
or
cs
xlat
mov
pop
sbb
aam
jno
mov
sub
into
xor
mov
dec
das
pop
push
push
mov
pop
mov
mov
and
sbb
mov
mov
sbb
stos
pusha
lock
test
repnz
stos
push
mov
mov
mov
stos
les
out
mov
std
dec
hlt
mov
xor
and
stc
call
fcomps
test
push
cmp
movsl
push
arpl
outsb
inc
push
cltd
cmpsl
jecxz
ljmp
sbb
insl
fistps
les
sbb
jmp
movsl
xchg
push
inc
lret
cmpsl
lret
mov
adc
inc
lods
cs
bound
aaa
add
inc
push
xchg
out
mov
add
out
movsb
lea
stos
inc
inc
lock
add
negl
cmp
out
shll
and
jle
sbb
pop
sub
in
sbb
test
or
cmpsb
mov
mov
jo
dec
sahf
xor
add
cmpsw
and
mov
sarb
push
fwait
mov
jp
jl
inc
xor
sbb
xchg
push
add
inc
in
and
dec
pop
pop
scas
inc
sarb
lcall
xlat
leave
ficompl
cmp
jecxz
lods
mov
shll
daa
mov
push
xor
xor
loope
and
xchg
fs
rcl
jle
xchg
rclb
pushl
sbb
ss
push
jb
pop
and
insl
jecxz
rclb
fadds
aam
cmp
call
in
mov
orl
stos
xchg
mov
jo
push
add
pop
dec
push
aad
mov
pop
sbb
dec
sbb
repnz
fs
mov
adc
push
cmp
inc
dec
push
push
sti
scas
and
shll
adc
push
xchg
jp
insb
fs
mov
push
ljmp
cmp
stos
inc
fidivrs
aam
mov
add
je
pop
repz
cli
push
inc
sub
jne
into
insl
pop
mov
add
mov
xchg
push
dec
aam
je
ret
cmp
jl
cmpsw
lcall
pop
imul
js
pop
loopne
fcoms
hlt
fisttpll
std
inc
leave
jns
cmpsb
ds
es
mov
mov
jecxz
idivb
into
lcall
mov
movsb
idivl
daa
push
push
lahf
dec
shrb
insb
pop
xchg
nop
mov
out
sbb
cli
jo
xchg
test
call
cmp
or
cs
rcll
test
je
sub
dec
pop
fdivs
sbb
sbb
testl
jae
testl
xchg
mov
outsb
shll
out
xchg
sbb
push
mov
pop
sbb
mov
and
push
pop
xor
and
jnp
push
push
std
xlat
add
mov
xchg
and
jmp
data16
xor
cmpsl
and
lock
fcomp
push
clc
js
int
jb
mov
stos
jl
out
pop
inc
and
pop
pop
and
mov
scas
xchg
int
stc
jge
fdivrl
jmp
pop
lahf
pop
xchg
mov
xchg
sarb
mov
add
push
sbb
fnclex
and
loope
in
lods
fwait
and
insb
dec
cld
adc
int3
mov
loop
add
pushf
fs
dec
jno
pop
lret
mov
fisttpll
rcll
and
adc
and
cwtl
in
inc
mov
pop
jecxz
xlat
fcoms
jl
or
ljmp
mov
sti
leave
mov
lods
inc
arpl
fnsave
rcr
popf
xor
test
xchg
ret
in
push
inc
loopne
insb
mov
mov
inc
out
cmp
xchg
gs
mov
sub
mov
aad
test
fbld
cmp
icebp
test
xchg
testl
and
push
call
jl
sbb
ret
adc
lahf
push
push
imul
in
mov
jp
popa
mov
push
pop
adc
cmp
cmp
push
jl
inc
lret
inc
dec
mov
loop
cmpsl
inc
insl
mov
xor
inc
and
in
xchg
add
cli
mov
cmp
push
jo
mov
push
add
enter
xor
aam
popa
inc
fucom
ret
and
mov
jp
insb
push
inc
jl
daa
dec
jg
clc
aad
rorb
fistpl
push
sub
fbstp
fdivrs
adc
pop
data16
inc
add
arpl
or
dec
shlb
xor
notb
xchg
add
loope
mov
xchg
jle
mov
cmc
fmull
inc
pop
test
repnz
outsb
dec
mov
cmp
dec
mov
jbe
mov
sbb
pop
aad
fistl
inc
out
xor
cmpsl
mov
incl
cmp
push
clc
insb
ljmp
call
inc
orl
xor
cmp
or
add
das
fildll
xor
mov
push
test
or
cmpsl
fistl
or
repz
jl
loope
into
stos
popa
bound
das
cmc
cmpl
jl
xchg
int3
mov
mov
fwait
sbb
in
ficoml
mov
fbstp
out
dec
shlb
frstor
stc
inc
xchg
pop
sub
movsb
ljmp
push
orl
in
cmc
test
and
pop
pop
add
test
les
push
lret
dec
mov
cmp
jnp
sub
or
or
xor
rol
jo
cld
outsl
lea
push
adc
in
in
test
or
xor
aad
jecxz
xlat
xor
ftst
inc
push
les
pushf
ret
pop
ds
mov
jmp
xchg
push
pop
ss
sub
sti
mov
add
inc
adc
cwtl
arpl
pop
fnsave
cmp
mov
dec
xchg
dec
aad
dec
mov
aas
sub
testb
dec
jle
psubq
call
and
sub
sbb
ds
mov
rcr
and
mov
push
andb
shlb
daa
xor
sbb
sbb
loop
jge
jl
mov
xor
std
adc
call
ja
mov
ljmp
inc
call
fcmovnb
jmp
adc
cmpsl
scas
inc
rorl
or
sbb
sub
shr
lods
or
sub
cmp
sbb
xor
mov
repz
xorl
cmp
mov
xor
dec
pop
gs
cltd
frstor
push
jp
mov
into
jb
out
imul
sub
std
push
lods
sub
mov
dec
mov
cmp
jl
push
mov
ljmp
insb
mov
aad
pop
mov
bound
mov
iret
ja
xor
mul
std
out
notb
push
int
outsb
outsb
add
mov
cmp
loop
les
dec
push
sub
div
xor
shl
test
mov
jmp
pop
pop
pop
push
scas
cs
inc
pushf
push
repnz
mov
mov
vphsubdq
lods
sbb
adc
imul
pop
incl
inc
inc
inc
push
int3
in
lcall
jmp
cmp
mov
ljmp
cld
idivb
mov
fwait
xor
cmpsb
cltd
mov
and
icebp
or
jo
out
push
ja
jns
xorb
movsb
roll
jmp
and
mov
lock
insl
inc
ja
jmp
jmp
roll
out
or
nop
lahf
mov
dec
fdivrl
pop
push
xchg
jne
push
adc
mov
jbe
inc
pushf
mov
ret
cmp
jg
jb
cwtl
xor
sub
jnp
dec
jl
pop
sbb
fisttpll
pop
sub
mov
pop
pushf
daa
jecxz
xor
cvtdq2ps
mov
jae
adc
push
xor
dec
add
sar
xchg
mov
push
lret
ficompl
daa
jns
aam
mov
adc
xchg
ljmp
test
ficoml
or
das
rcll
cmpsl
sahf
pop
push
popf
flds
out
cmc
and
mov
idivb
inc
stos
sarl
movsl
push
das
lret
sbb
mov
xlat
inc
mov
xchg
pop
push
push
stos
aam
fwait
pop
push
inc
ret
mov
mov
out
xchg
xlat
xor
push
sub
jle
dec
add
add
inc
adc
xor
fcmovbe
sbb
push
sbb
aad
push
mov
add
cwtl
jmp
and
xchg
jo
cltd
cmp
roll
popf
pusha
cwtl
adc
adc
clc
xor
and
pop
call
fld
pop
dec
rcl
aad
ficompl
dec
cli
fmuls
jo
pusha
insb
xlat
in
gs
out
imul
ficomps
imul
adc
xchg
or
std
sbb
sbb
scas
mov
shrl
jb
jo
in
imulb
cmp
shr
mov
scas
sub
mov
rclb
div
ja
mov
xor
mov
push
adc
out
call
pop
bound
repnz
pop
outsl
sbb
dec
pop
mov
sbb
dec
sub
push
pop
fcoml
pop
fistpll
aam
xchg
dec
sbb
mov
leave
jecxz
aaa
pop
cs
lret
mov
jmp
adc
outsl
sti
add
sub
test
lea
ds
sbb
mov
scas
mov
xor
decl
fldt
pop
fcom
dec
ja
les
xchg
movzwl
push
push
into
popa
shrl
xchg
push
jmp
mov
leave
fisubs
jge
or
ja
fcmovbe
push
or
std
push
adc
cmp
cwtl
mov
data16
cs
int3
xchg
out
insl
dec
adc
insl
scas
cwtl
rorl
jge
fsubrl
lret
dec
lahf
fidivrl
xchg
mov
subl
mov
mov
inc
dec
xor
call
out
test
leave
inc
outsb
out
cmovnp
clc
popa
call
frstor
cmp
jno
sub
enter
cli
adc
cmp
nop
dec
test
push
ja
gs
lods
mov
popf
jecxz
addr16
sbb
loope
das
xchg
les
ljmp
cmpsl
mov
dec
loop
mov
imulb
jo
mov
and
stc
insl
into
dec
popf
leave
or
jmp
mov
pop
add
cmc
lea
dec
fistpll
dec
in
in
pop
jae
repz
sar
popa
sbb
pop
push
stos
popf
push
cmp
xlat
dec
shr
xor
pop
cmp
push
hlt
lods
xchg
xlat
sbb
adc
add
push
xor
fsubp
inc
repnz
adc
xor
popf
rcrl
call
fidivrs
jge
mov
stos
test
decb
jne
test
sahf
repnz
xchg
scas
enter
push
lret
mov
inc
jg
adc
cmpl
xor
lea
scas
ficoml
cmp
push
jnp
xlat
and
xchg
loopne
or
xor
mov
iret
aaa
xchg
mov
sub
add
ds
pop
mov
push
inc
xchg
imul
inc
cmpsl
data16
cmc
out
mov
adc
in
ss
sti
dec
mov
push
shll
sbb
arpl
push
pop
lcall
fisubl
mov
test
and
adc
cmp
scas
mov
push
ss
mov
out
aam
adc
push
call
and
adc
pop
jge
sbb
jg
mov
push
mov
in
sahf
sar
rcll
mov
subl
ljmp
xchg
or
push
aaa
jp
loop
stos
aaa
shlb
divb
add
cmp
sub
sbbl
add
aaa
cltd
sub
push
into
and
pop
jmp
sub
bound
xor
add
test
pusha
popa
inc
or
or
imul
enter
cltd
arpl
aas
lret
mov
hlt
mov
lock
sub
pcmpeqb
xor
lret
shr
pop
add
clc
es
ds
xchg
sti
mov
arpl
fcompl
adc
mov
mov
sub
push
ds
mov
dec
push
test
orl
or
add
aad
xchg
insl
mov
cmp
lods
mov
adc
push
inc
int3
add
mov
jmp
ret
push
sub
adc
inc
pop
or
scas
jbe
in
mov
lret
cmp
lock
lods
ljmp
orl
aam
lea
mov
das
shr
dec
and
pusha
loopne
maxps
and
inc
jns
jns
enter
repz
sahf
adc
push
repz
enter
push
xchg
add
pop
loop
mov
data16
xchg
mov
inc
or
xlat
shlb
arpl
aad
or
mov
sbb
jp
aam
xchg
push
pop
xor
out
outsb
xorl
popf
or
sub
scas
sbb
jmp
stos
shll
jns
mov
mov
ja
adc
enter
inc
jnp
cs
sbb
adc
pop
and
dec
outsl
jecxz
and
push
mov
cmpsb
iret
sahf
mov
jb
lods
cmpsl
jb
pop
repnz
push
dec
scas
mov
push
idivb
dec
cmp
mov
test
pop
or
dec
movsl
iret
add
fcoms
iret
cltd
xorl
xchg
popa
ds
ss
lcall
mov
or
scas
mov
pusha
mov
je
in
out
dec
mov
or
dec
ret
fiadds
popa
xchg
mulb
or
loopne
and
sub
js
aaa
mov
shl
fld
shl
stos
out
sbb
fs
es
xchg
sbb
orb
ret
fisubrl
mov
jmp
mov
push
sbb
and
mov
ds
jge
pusha
popf
fnsave
call
add
pusha
push
out
je
dec
andb
sbb
mov
xor
adc
and
jne
shlb
arpl
push
inc
idiv
pusha
inc
cwtl
clc
jae
movsb
and
popa
jo
test
jno
std
dec
jb
dec
mov
inc
clc
lea
pushf
inc
outsl
imul
into
xor
cwtl
sub
lret
mov
xchg
nop
xor
stos
dec
dec
aaa
je
imul
xchg
mov
sub
adcb
lret
or
cmc
icebp
insb
insl
adc
fnsave
icebp
and
mov
mov
mov
fsubrp
jge
jmp
sti
iret
push
hlt
mov
js
push
mov
jmp
add
pop
or
ret
fdivs
imul
outsl
mov
repz
test
adc
imul
dec
cmpsl
pusha
ficoml
mov
inc
jnp
sbb
sub
and
movzwl
sbb
dec
pop
and
in
dec
push
mov
jge
shlb
mov
mov
sub
fistps
cmp
sbb
mov
inc
repz
xchg
pop
cmp
sub
ffreep
int3
pop
adc
popa
dec
out
sbb
xor
add
pop
in
and
sbb
call
inc
add
sahf
into
rcrb
mov
mov
fld
jae
push
lret
dec
xor
mov
sti
data16
orl
ret
mov
mov
xchg
push
orb
xlat
fdivrp
pop
ret
inc
add
fsubl
mov
push
sbb
mov
cmp
shrl
std
mov
xchg
xor
lods
fildll
mov
pushf
orb
std
or
in
ja
loop
and
cli
and
fiaddl
xchg
xchg
inc
and
ss
cmp
das
enter
daa
out
dec
in
jmp
jl
inc
mov
pop
subb
push
test
and
pusha
clc
es
fwait
testb
lods
sar
mov
mov
scas
jae
inc
fldl
add
mov
lret
rcr
divps
sarb
mov
inc
and
popa
xor
leave
mov
mov
imul
cmp
shr
push
add
inc
movsb
push
mov
lock
shrl
and
jp
ljmp
stc
out
xorb
imul
cmc
add
inc
inc
bound
sub
mov
enter
or
jo
sub
cmovp
in
cmp
ret
popa
aaa
mov
scas
rorb
or
xor
out
popa
rorl
xor
lock
fisttpl
adc
imulb
andl
lea
imul
fists
jmp
mov
enter
dec
jp
scas
pop
xor
add
mov
dec
jns
es
jl
ret
mov
push
push
mov
rolb
mov
cltd
mov
pop
mov
mov
xchg
scas
shrl
adc
xor
in
fnstenv
imul
xchg
lods
dec
ficoml
pop
stos
mov
adc
pop
push
jmp
out
push
cs
jns
into
mov
xor
fiadds
mov
cmp
insb
cs
mov
lds
pop
lods
stc
dec
lods
aas
lret
and
shrb
out
in
mov
test
sbb
mov
jg
clc
out
out
aam
stc
popf
sbb
lcall
enter
add
dec
xor
hlt
and
dec
fldcw
gs
imul
fdivrp
stos
and
mov
add
sub
imul
imul
addl
xchg
inc
roll
sub
add
pushf
or
mov
mov
into
xchg
stos
call
push
and
inc
add
in
in
push
jg
mov
das
sbb
jne
daa
jecxz
cmp
and
scas
mov
sbb
cmc
addl
stc
aad
xchg
sbb
dec
inc
out
pop
and
sbb
xchg
imul
mov
loopne
push
mulb
pusha
fwait
sbb
sub
or
and
fisubrs
sbb
sub
into
sub
cmpsl
mov
cmc
push
cld
dec
movsl
out
sahf
pop
inc
icebp
rep
xor
mov
adc
fwait
mov
mov
mov
inc
sti
fbld
stc
xor
mov
inc
addb
sub
add
push
pushf
add
add
dec
pop
pop
pushf
inc
inc
adc
xor
int3
lahf
xchg
jo
pushf
aas
pusha
shll
sbb
sub
sbb
adc
pusha
inc
mov
or
adc
sbb
test
mov
push
sub
ret
jmp
jle
cmpsw
sbb
cmp
in
inc
testb
fdivl
pop
xor
jl
mov
cmp
cmp
out
cmp
je
dec
stos
xor
push
not
scas
lcall
or
push
ljmp
aad
mov
push
js
jge
fnstcw
addl
xchg
cmpsb
pop
xchg
push
xor
cs
dec
stc
inc
nop
push
push
xor
mov
pop
dec
dec
jno
leave
int
add
data16
xchg
push
icebp
enter
loope
and
xlat
inc
inc
mov
sub
js
inc
loopne
mov
in
add
dec
leave
fadd
adc
out
jecxz,pn
stos
cmpsl
xchg
cmp
pop
push
mov
cld
sbb
mov
cmpl
ljmp
pop
sti
or
insl
and
and
xor
pop
xor
outsl
dec
add
pop
pusha
repnz
cli
nop
or
outsl
lds
std
icebp
pop
icebp
inc
adc
or
add
popl
cli
push
xchg
and
shr
jnp
dec
sarl
add
mov
daa
push
pushf
fisubrl
addr16
cmp
dec
test
dec
and
jecxz
mov
cmp
inc
push
jl
ljmp
popa
add
rclb
inc
and
stos
aas
mov
xor
test
mov
les
movsb
cld
movq
ljmp
mov
movsl
addr16
push
inc
mov
xor
clc
add
cmp
jo
jbe
lahf
jmp
aam
pushf
sbb
mov
repz
insl
mov
test
enter
jae
and
inc
stos
push
jb
cli
enter
push
lods
scas
repnz
jmp
mov
shrb
pop
or
aas
movsl
ljmp
or
scas
sub
push
push
mov
loopne
ljmp
outsb
mov
and
bound
adc
dec
sub
mov
mov
inc
scas
mov
add
out
les
dec
xor
jg
dec
sbb
rol
loopne
cmp
rcl
leave
repz
popa
sbb
add
dec
sbb
rclb
scas
sahf
test
sub
fmuls
sub
or
in
cmp
sbb
mov
lahf
mov
ret
scas
ss
pop
shlb
jnp
insb
adc
inc
sahf
test
mov
je
push
in
inc
cmpsb
adc
or
lahf
mov
xlat
scas
jnp
push
dec
stos
and
mov
mov
outsl
pusha
inc
cmp
or
ja
jmp
or
lock
mov
popa
in
aaa
call
out
stc
out
mov
mov
stos
sarl
int
enter
cmp
mov
in
mov
xor
insl
xor
mov
into
and
fldt
adc
stos
jmp
adc
and
addb
push
leave
mov
xchg
rol
loope
add
lods
add
les
push
mov
xlat
mov
shrb
xor
sahf
mov
leave
mov
cmpsl
fisttps
mov
leave
ret
mov
mov
js
xchg
stos
mov
scas
leave
lret
add
divb
add
cmp
js
push
mov
rolb
jae
jb
jns
mov
fwait
adc
pop
addl
test
mov
popa
add
jl
mov
add
dec
out
jecxz
xchg
popl
push
sub
imul
dec
adc
or
jbe
stos
xchg
jmp
jecxz
pop
mov
mov
and
or
add
xchg
test
adc
xchg
dec
push
jl
rcll
jnp
mov
data16
lret
or
outsl
inc
jmp
sti
jo
add
inc
or
jl
fucomp
loop
push
xchg
fistpll
clc
sbb
push
push
xor
adc
adc
push
rcl
jge
adc
popa
cs
clc
cmp
push
push
inc
lods
into
pop
mov
aas
sub
daa
push
xor
cmpsl
fcoms
clc
lret
xchg
mov
ficoms
pop
out
mov
sub
sub
push
cli
mov
fs
inc
mov
scas
mov
stos
xchg
mov
jb
andb
jmp
cwtl
jge
cmpsb
dec
pop
adc
push
xor
pusha
cmp
aas
and
inc
adc
cwtl
inc
lods
scas
mov
int
cmp
dec
xor
xor
dec
jmp
cwtl
getsec
leave
xor
inc
push
xor
pusha
std
dec
aas
sub
sbb
out
xor
pop
pop
adc
out
testb
xor
sub
sub
aam
mov
inc
mov
or
add
lods
cmp
pop
xor
xchg
push
in
xor
jmp
xchg
movsb
cli
push
rol
stos
inc
xorl
push
scas
lret
jmp
xchg
dec
in
mov
and
pusha
lahf
sub
dec
sahf
fwait
pusha
xor
cld
scas
pop
add
sar
js
xlat
nop
push
xor
inc
test
xor
cltd
or
sbb
cli
repz
inc
pop
cmp
dec
in
lods
push
cmp
adc
aam
add
sahf
inc
scas
insl
popa
lcall
ljmp
adc
ret
pusha
inc
das
or
jg
cmp
dec
jecxz
jg
movsb
push
push
test
pop
fidivl
cmpsl
inc
sbb
inc
adc
sub
cmpsl
push
insb
pop
add
jbe
clc
adc
ljmp
test
in
lret
js
mov
push
out
es
and
and
mov
pop
jp
inc
lock
push
aam
and
push
dec
mov
movzwl
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
sub
adc
data16
jp
adc
jp
sub
or
call
les
mov
shl
pop
stos
cwtl
scas
add
loop
jne
lods
out
xchg
sub
pusha
mov
sahf
jno
loop
mov
lret
in
mov
les
iret
adc
and
adc
lret
cmpsl
push
inc
int3
in
sbb
or
mov
jg
rcrb
insl
dec
je
test
or
mov
outsb
push
xchg
imul
adc
sbb
aaa
mov
sub
mov
add
jns
xchg
hlt
mov
call
pusha
rcl
mov
loope
sbb
push
pop
fs
lock
sarb
fidivrs
mov
mov
mulb
sbb
push
pushf
xor
sub
add
jl
lods
into
push
add
out
jl
mov
xchg
cs
adc
dec
pop
hlt
pop
push
pop
sbb
loope
cmc
sbb
imul
pop
xor
leave
and
mov
or
xchg
jo
dec
xor
lods
dec
sub
std
add
jg
adc
out
inc
inc
adc
insb
mov
aad
cmp
lret
mov
mov
sub
xchg
add
iret
inc
adc
sub
cmp
ret
and
or
push
aaa
pop
stc
xchg
iret
cltd
into
and
cmpsb
mov
jmp
loopne
dec
push
xchg
jae
lret
dec
loopne
loope
in
pop
insb
and
clc
fcomps
push
sbb
ficomps
xor
and
mov
adc
pop
testb
jg
push
sti
in
stc
xchg
lods
das
je
iret
call
cmpsl
fisubs
pop
es
lea
addr16
rol
and
fimuls
xchg
test
sbb
aas
jge
sub
hlt
movups
pop
sbbl
hlt
les
shr
dec
movsl
or
xchg
fwait
push
dec
lret
pop
xor
movsb
inc
xchg
mov
and
fbld
pop
push
push
mov
inc
mov
stc
pop
jno
loope
addl
lock
jge
mov
inc
movzbl
jbe
xchg
ret
cmc
stos
jp
inc
jmp
int
out
push
inc
sub
int
mov
rolb
je
inc
neg
sub
mov
jae
pop
cmp
push
lods
add
push
bound
mov
int
stos
mov
jo
adc
ret
pop
data16
and
cwtl
or
ja
push
jmp
je
aad
adc
sub
cmp
sbb
addr16
inc
cmp
jg
add
mov
out
mov
cmpsb
dec
hlt
lods
cwtl
jnp
sub
test
lods
rorb
add
dec
cmp
xor
xor
mov
mov
mov
clc
mov
pop
or
pusha
mov
dec
scas
jp
jecxz
inc
mov
shll
mov
mov
xor
dec
inc
adc
dec
mov
mov
int3
sbb
mov
lods
mov
arpl
cwtl
sub
stos
hlt
push
mov
adc
sbb
pop
xor
xor
or
inc
lds
js
cmc
add
mov
sub
scas
jae
scas
mov
sub
cmp
out
loopne
mov
sbb
jae
push
pusha
push
lret
pop
lahf
cmpsb
xor
or
or
jne
push
outsl
sbb
inc
xor
and
pop
aaa
lret
inc
inc
pusha
jl
push
cwtl
stos
mov
pop
adc
notb
mov
add
insb
jge
fistpl
imul
filds
std
inc
lahf
inc
repnz
cbtw
sti
loope
in
mov
outsb
test
dec
add
xchg
fmull
dec
loop
or
xor
fs
jo
mov
sbb
push
cmp
mov
fwait
pop
mov
add
xor
jae
dec
ja
pop
rorb
loop
mov
ret
sbb
scas
jmp
ret
jp
xchg
push
nop
jns
ret
pushf
mov
xor
add
cmp
sub
fsub
xchg
cmp
scas
ret
or
xor
scas
imul
out
jae
push
hlt
aam
sbb
sub
fidivrl
jno
sarl
fimull
mov
mov
adc
mov
xor
scas
loop
or
cwtl
adc
adc
jle
mov
cmp
push
sbb
jle
in
fsts
mov
mov
pop
ja
cli
mov
inc
push
lcall
jg
jle
dec
mov
icebp
jnp
sti
push
push
sahf
dec
idiv
cwtl
cmp
or
lods
push
mov
subb
int3
lahf
sarl
xor
inc
pop
or
fs
dec
pushf
packsswb
pop
into
mov
cmp
sub
hlt
mov
in
movsl
add
out
mov
or
jbe
jecxz
cli
pop
rorl
test
sti
sbb
es
push
push
scas
icebp
dec
stos
push
inc
fwait
adc
nop
xchg
nop
xor
pop
test
cltd
xchg
orb
jbe,pn
pop
xchg
into
scas
shl
mov
pop
in
pop
mov
dec
mulps
pop
push
push
sub
jle
add
sub
cmp
mov
cwtl
adc
jae
jp
sub
pop
xor
fs
push
inc
inc
sahf
or
sub
push
dec
xlat
push
rcrb
scas
enter
shlb
inc
lds
jp
cmp
adc
out
insl
mov
test
mov
fisttps
adc
sti
push
xchg
jo
adc
imul
pusha
jo
pushf
add
seto
lds
xor
inc
jg
in
pop
add
xchg
orl
push
ljmp
ja
pop
inc
call
ret
xor
push
pop
sub
fbstp
and
jne
lea
jnp
push
in
or
sbb
and
fisubl
push
loopne
enter
jg
iret
jg
xchg
pop
push
scas
pop
lods
out
int3
cmp
icebp
ja
adc
gs
sbb
mov
rclb
pusha
xchg
xchg
mov
push
not
lcall
jg
movsl
repnz
pcmpeqd
cmpsb
aad
sub
hlt
into
jg
fmulp
mov
imul
rcr
enter
bound
das
mov
mov
bound
mov
xchg
arpl
mov
into
xor
rcll
lret
push
mov
add
push
popa
mov
rcrl
iret
lods
rorl
pop
lods
add
fidivrs
sti
ret
push
cmp
mov
jo
mov
int
cmp
test
or
mov
sbb
mov
shll
mov
jae
insb
jmp
jge
cmp
mov
xchg
pop
or
call
dec
and
mov
arpl
fs
lcall
sti
fldenv
pop
mov
test
mov
jb
mov
and
into
jmp
lods
xorl
sub
arpl
fisubl
shlb
lods
pop
pushf
mov
sbb
dec
mov
adc
or
xchg
xor
fidivrs
inc
in
mov
sahf
shlb
jb
std
cwtl
xorb
pop
xor
fmul
adc
popf
mov
fwait
shlb
push
leave
mov
push
fdivr
or
jmp
and
jmp
sbb
lods
mov
push
push
outsl
jo
fmuls
fdivl
mov
xchg
mov
jae
aad
negb
mov
stos
int
sub
adc
add
hlt
les
fisubrl
sahf
fists
xchg
or
push
cmp
adcl
jge
push
mov
call
repz
leave
int3
test
cmp
icebp
jg
inc
mov
icebp
data16
pop
loop
sub
insl
sar
ja
inc
cs
cld
push
push
dec
in
insl
in
outsl
mov
hlt
and
fwait
cltd
push
and
movsl
adc
scas
mov
ret
jnp
pop
shll
aaa
cmp
rolb
mov
xchg
fwait
ds
xorb
scas
popa
mov
xor
mov
lcall
xor
cmp
mov
out
shll
mov
jns
pushf
xchg
scas
cmc
aad
repnz
out
inc
jge
nop
cmp
fmul
cmp
orb
dec
insl
mov
mov
arpl
pop
push
sbb
jl
sti
test
jecxz
push
jecxz
or
push
outsb
push
sti
dec
cs
xchg
dec
out
imul
std
subl
cld
rorl
insl
sbb
leave
scas
add
dec
insl
pop
mov
mov
fwait
push
lret
popa
fldl
push
rcrl
mov
setge
xchg
push
rolb
sub
pushf
mov
mov
repz
lahf
in
push
das
mov
push
and
int3
inc
ss
inc
les
insl
cmp
cld
adc
jns
mov
push
cmp
mov
xor
cmp
adcl
stos
nop
mov
push
and
insb
andb
js
sbb
rcr
test
fdivr
ja
add
xchg
lock
mov
adc
imul
shlb
inc
mov
add
outsb
imul
xchg
push
push
inc
lret
jle
mov
aam
js
addr16
xchg
mov
jae
add
dec
stos
add
stos
ret
ror
jbe
push
das
cmp
fisubrl
adc
mov
ss
jb
je
sbb
mov
jns
jp
xchg
test
xchg
les
xor
testl
or
pop
int
gs
cmp
fiadds
or
push
dec
pop
push
adc
lret
xchg
data16
mov
mov
or
dec
lret
lcall
insl
outsb
test
js
aam
xlat
cmpsl
mov
ja
scas
sarb
mov
mov
xchg
repnz
imul
fimull
loopne
pushf
cmpsl
pop
pop
jne
fcmovu
testl
mov
mov
repnz
adc
and
jg
push
dec
sub
popf
push
pushf
dec
rorl
mov
aad
pop
cmpsb
sti
imul
or
sbb
cs
cmp
mov
xchg
mov
push
ret
repz
mov
fcomi
shrl
jg
jae
js
add
enter
cmp
cmp
xchg
add
ljmp
jecxz
xchg
leave
lods
inc
cmp
jo
add
daa
xor
cmp
xor
jmp
jae
jae
cmpsb
in
push
rcrb
ja
mov
jg
and
addr16
push
mov
add
mov
out
aam
pop
mov
cmpsl
push
mov
into
fadd
inc
and
ja
mov
mov
or
pop
push
stos
testl
sub
je
cwtl
aaa
mov
aas
dec
sahf
push
nop
pop
je
cld
sbb
push
xor
mov
rcrl
sbb
push
clc
lock
jg
cmpsl
pop
dec
dec
inc
insl
sbb
es
jl
sub
out
and
xchg
pop
pusha
cmp
cmp
btc
xchg
mov
stos
lods
dec
xor
movsl
mov
push
insl
lock
shlb
fiadds
adc
jne
out
mov
aaa
imul
push
cld
out
andl
mov
mov
decl
or
adc
cli
loopne
addl
mov
cmp
addr16
or
mov
push
out
leave
adc
call
xor
mov
lea
mov
rorb
shlb
insl
sub
out
in
movsl
jns
mov
mov
push
ljmp
jecxz
dec
dec
and
mov
pop
jb
insb
push
fimuls
test
in
xchg
icebp
sti
mov
xor
in
sar
je
inc
dec
or
xchg
adc
mov
addl
js
aas
jmp
call
int3
mov
jb
shlb
push
cmp
gs
push
test
or
and
inc
fsubp
ret
mull
push
stos
dec
adc
fcomps
or
pop
ror
daa
cld
in
insb
loop
lcall
in
sub
and
aaa
mov
out
shll
ficoms
dec
sub
mull
insb
dec
cli
push
fwait
xor
fwait
lcall
gs
aas
and
xchg
xlat
or
mov
jp
fisubs
xchg
push
jb
cmc
cmp
jae
and
sbb
xchg
mov
push
std
jb
or
adc
inc
neg
mov
repz
mov
xor
adc
push
jp
data16
mov
ds
push
xor
das
jp
ja
int3
jbe
in
fsubs
insl
jl
adc
sti
pop
xchg
stos
pop
aaa
xchg
and
fisttpll
gs
test
jne
ret
mov
mov
and
imul
add
popf
dec
cmp
mov
int3
or
out
scas
lret
bound
ret
sub
pop
movsb
out
xchg
mov
data16
xchg
iret
lret
mov
out
push
inc
int3
rcl
and
xchg
out
test
fidivrs
nop
in
pop
cmp
or
jno
inc
sbb
sarb
push
jg
fs
pushf
ja
enter
push
movsb
xorb
out
in
sub
cs
shlb
lea
pop
jne
xchg
fiadds
lcall
mov
cld
cmp
push
dec
xchg
xchg
or
push
cltd
add
mov
test
push
imul
add
popf
pop
rol
sahf
aam
fistpll
adcl
mov
das
out
xor
jno
pop
jg
fcoml
je
shll
mov
mov
add
arpl
xlat
or
dec
mov
xchg
xor
cmp
or
and
popf
xchg
pop
lahf
add
jp
sub
dec
bound
cwtl
inc
and
or
or
cmp
cwtl
nop
sub
lcall
or
add
mov
adc
insb
or
dec
push
jecxz
out
and
xor
jns
sbb
aam
dec
nop
hlt
sar
out
or
mov
sbb
adcl
fwait
loop
in
dec
pop
jge
xchg
inc
les
in
mov
dec
movsl
jae
inc
movsl
inc
and
rolb
les
hlt
push
cld
pop
adc
btc
pop
cld
in
xor
leave
add
fmuls
sbb
les
mov
std
xchg
outsb
inc
js
jo
xchg
xor
ljmp
shlb
int
in
into
imul
and
arpl
add
fs
push
fimuls
test
fldenv
fidivrs
cmpsb
std
jb
dec
add
inc
andl
jne
pop
push
cmpsl
mov
stos
push
dec
icebp
mov
in
stos
inc
fstpt
js
add
mov
dec
out
mov
bound
jg
sbb
cmp
and
icebp
enter
mov
xchg
fucom
pop
cmp
push
ret
sub
fists
jl
sbb
test
fs
dec
pusha
sbbl
pop
adc
jo
roll
icebp
add
ror
fs
push
jp
and
mov
sub
add
mov
jecxz
fiaddl
cmp
lcall
pop
fnsave
clc
test
in
call
jmp
andb
mov
lock
inc
mul
insb
mov
cmpsb
adc
cmc
sub
mov
imul
cmpsb
es
cli
push
xchg
orb
subl
lock
iret
test
fcoml
dec
pop
push
ret
cmc
pop
mov
or
fmull
pop
adc
ret
push
pop
push
pop
inc
in
mov
shlb
mov
push
xchg
divl
add
insl
hlt
std
cmp
movsl
stc
mov
mov
pushf
fdiv
mov
das
addr16
lcall
icebp
fwait
lea
inc
sbb
inc
cmpsl
xchg
scas
xchg
cli
loope
add
jnp
mov
xor
and
dec
loop
bndldx
mov
sbb
imul
lret
xchg
or
or
inc
movsb
std
daa
jb
xchg
jne
cmp
xchg
jecxz
mov
dec
cmpsl
lcall
mov
in
push
pop
mov
and
mov
adc
stos
jb
pop
xchg
sbb
add
push
iret
jle
icebp
adc
dec
adc
call
sbb
rep
fmull
xorb
mov
mov
sub
pop
dec
out
cld
push
or
cmp
test
mov
inc
sbb
mov
jne
ss
lahf
shl
xchg
out
leave
jmp
inc
and
enter
iret
fwait
jno
adc
or
jno
gs
xor
mov
movl
repz
mov
add
pop
push
xor
clc
pop
out
fcoms
mov
mov
mov
pusha
cmpl
inc
dec
adc
fdivl
popa
in
xchg
add
fmul
mov
adc
data16
mov
mov
fsubrs
inc
stos
mov
cmp
in
stos
sbb
sbb
cld
cmp
pop
lock
js
dec
ss
cmp
jecxz
jecxz
and
pushf
lret
iret
sbb
repz
mov
jmp
mov
dec
mov
dec
movsb
fwait
nop
push
inc
jecxz
xchg
jnp
push
dec
dec
aaa
or
cmp
pop
nop
mov
out
sbb
jle
pop
data16
shll
shr
ljmp
cmp
mov
or
cmp
add
subb
jbe
xor
bound
shr
adc
push
mov
push
pop
cwtl
inc
stc
adc
inc
add
es
cmp
data16
and
in
jns
aaa
xchg
jecxz
les
arpl
aam
sbb
xlat
xor
fimull
inc
insb
fidivrs
mov
adc
aad
push
xchg
out
mov
into
in
inc
orps
inc
psubb
or
enter
subl
mov
pop
pop
adc
or
mov
popa
roll
xchg
and
adc
ret
ds
mov
fists
push
mov
mov
xlat
sbb
mov
xchg
mov
nop
ds
xchg
repnz
add
xor
sbb
sti
and
jb
nop
cmp
adc
cmc
sub
pop
sbb
mov
daa
xchg
lret
int3
loop
incb
cmp
punpckhwd
mov
es
push
mov
mov
xchg
adc
out
push
arpl
scas
repz
sahf
cltd
fsub
rcrl
enter
je
sbb
push
ja
aaa
pop
xchg
hlt
repz
mov
je
mov
jns
std
and
sub
int3
aaa
jae
in
jge
cmc
cwtl
roll
or
outsb
daa
in
lcall
or
dec
inc
adc
cli
aam
cs
lcall
sbb
sub
dec
or
dec
mov
fucomp
lods
rcrl
jecxz
imul
mov
sub
add
aad
mov
and
lock
fwait
mov
xchg
fists
nop
jp
jecxz
inc
fimull
imul
sti
lods
lret
dec
subl
mov
push
ret
push
jb
shll
mov
inc
mov
xor
fsubrl
lret
ficoml
push
aaa
pop
dec
loopne
mov
js
pop
outsb
fisubrs
mov
cmpsb
and
and
cmpsl
inc
pop
sub
fnstcw
sub
ret
mov
arpl
cmp
jae
ret
mov
mov
test
inc
pusha
pop
lahf
je
mov
mov
ja
mov
pop
mov
pop
lods
adc
mov
xchg
and
stos
aam
das
addl
push
pop
sahf
lds
leave
popa
xor
push
push
cld
sub
xchg
shlb
cwtl
rorb
das
dec
dec
ja
incb
in
jecxz
or
nop
jae
xchg
mov
adc
ja
cmpsl
hlt
mov
mov
jno
into
mov
mov
pop
lods
fwait
push
sar
out
in
nop
push
movsb
bound
stc
xchg
or
jp
mov
jp
fdivrl
cli
jecxz
in
pop
lea
cld
mov
sbb
jo
mov
ds
push
adc
ljmp
inc
and
add
adc
ds
mov
clc
mov
xor
arpl
fstpl
sub
pop
inc
dec
mov
jae
ljmp
sub
stos
adc
ffreep
adc
inc
enter
test
mov
test
mov
inc
cmp
jmp
lcall
outsl
cmpsb
fistps
adc
pop
push
mov
popf
dec
push
inc
xchg
cmp
pop
je
lcall
xor
sbb
dec
lock
pop
pop
shlb
jg
pop
add
mov
push
sub
fwait
or
pop
cmp
test
push
pop
push
push
add
push
xor
gs
xchg
pop
dec
inc
add
jg
popa
mov
test
test
lock
incl
lea
xor
inc
pusha
loop
push
imul
xchg
mov
inc
or
push
int3
adc
sub
and
sbb
and
mov
aaa
jnp
ret
push
xor
sbb
scas
out
or
xchg
aas
pusha
jmp
and
flds
xchg
enter
inc
sub
pop
jge
scas
mov
sub
shl
add
rorb
fistl
rcr
mov
lcall
daa
inc
sbb
scas
es
mov
loop
or
cld
sbbl
jle
push
mov
fiaddl
inc
inc
ljmp
cmpsl
sbb
test
add
xchg
xchg
jnp
pop
lds
push
and
and
fnstcw
dec
mov
jne
sbb
push
lods
sub
hlt
pop
xchg
sbb
sub
add
inc
out
push
push
sbb
inc
xor
push
stc
inc
repz
jo
test
lret
into
jno
into
cmp
sub
sub
cmpl
dec
pop
push
scas
cmp
lret
js
rorl
popf
jmp
cmp
sbb
aas
sbb
xchg
stos
flds
jecxz,pt
enter
into
mov
pop
pop
adc
xor
std
mov
mov
xchg
or
lds
inc
xchg
sub
jae
dec
mov
xchg
sub
mov
push
mov
out
sub
ja
xor
dec
add
pop
mov
rol
jp
add
fadds
jb
or
push
imul
nop
cmp
mov
ret
xchg
cmpsl
xchg
jg
jecxz
mov
stc
mov
dec
sub
fadds
inc
scas
bound
mov
clc
sub
jns
pop
xchg
inc
lods
mov
nop
adc
fidivl
jge
cmp
fistpl
dec
clc
mov
bound
arpl
addr16
sbb
aam
mov
push
data16
cmc
mov
sub
shll
aaa
jecxz
sbb
jmp
adc
xor
mov
pop
add
mov
and
inc
sbb
movsb
mov
push
push
lcall
jge
outsl
jg
rcrb
addr16
jb
mov
mov
je
push
ror
jne
sbb
pop
jp
lods
sar
fsubrp
outsl
push
xor
sub
les
and
movsb
sub
sub
add
cmc
push
mov
push
adc
cmp
loop
sub
sbbb
mov
dec
fmuls
into
xchg
lahf
push
shlb
xchg
repz
cmp
mov
in
xor
xchg
dec
push
push
adc
add
and
imul
and
cli
movsl
lret
in
ljmp
xchg
mov
call
mov
into
xor
pop
mov
sub
shll
push
fdivrs
pusha
lods
lods
out
or
push
imul
or
and
fldenv
ret
cmp
js
mov
aaa
sub
mov
adc
hlt
test
or
into
cli
lret
sub
sbb
movb
dec
or
enter
mov
xchg
inc
in
pop
mov
dec
enter
pop
mov
add
xor
or
mov
push
jo
pop
mov
xor
mov
sub
mov
and
cmpsl
pop
adc
pop
adc
mov
cltd
pop
in
insl
jo
ljmp
adc
inc
fs
inc
mov
rolb
movsb
adc
mov
pop
cmpb
add
mov
xchg
es
incl
test
cmp
sub
xlat
pop
mov
fists
adc
rcr
pop
divl
mov
iret
xor
out
xchg
dec
les
xchg
movsl
test
movsl
lods
lret
push
jno
sbb
lret
fdivrl
pop
or
test
xchg
jg
xchg
ds
adc
cmc
mov
and
mov
lcall
mov
test
inc
das
jl
mov
clc
pop
xor
inc
leave
inc
mov
push
test
xor
sbb
loopne
loopne
mov
jno
sub
xchg
aad
dec
shrl
pusha
jl
cmp
pop
stos
xchg
fdivl
lahf
and
cmp
pop
rep
jo
or
jno
sbb
clc
sbb
repz
push
pop
ret
ret
pop
addr16
and
mov
sti
jmp
int
loop
sub
dec
hlt
inc
rclb
lea
and
pop
push
aad
roll
mov
cmp
out
jmp
jmp
loop
rcrl
or
jmp
insl
ret
test
cli
cwtl
sub
push
in
push
cli
inc
push
sub
add
pop
jl
or
jmp
int3
sbb
dec
add
xchg
add
bound
fs
jp
ja
in
sahf
in
and
pop
and
mov
in
das
mul
mov
add
cs
mov
jns
mov
jno
push
cmpsl
or
sbb
rcrb
sbb
cltd
repz
mov
iret
in
xor
insb
stos
lahf
lods
ds
xchg
js
push
shll
xchg
push
or
xor
pushf
mov
sar
lock
push
aas
sbb
popf
add
mov
pop
pop
xchg
or
rcll
dec
xor
jp
stos
push
mov
frstor
fidivrs
inc
add
jl
mov
xchg
mov
es
mov
jmp
mov
decl
jns
test
add
xchg
aam
jge
movl
jg
jmp
cmc
gs
push
mov
mov
adc
repz
cmp
dec
call
sahf
stos
imull
outsb
mov
in
mov
sbb
pushl
mov
pop
arpl
mov
shll
fs
lahf
stc
mov
inc
push
jns
cmp
rcrl
in
das
xchg
push
dec
inc
les
or
mov
out
mov
fdivrl
test
jno
xor
imull
clc
sbb
xchg
testl
jbe
mov
movsb
lods
cmp
daa
and
fcoml
lret
aam
add
rorl
cmc
jp
jae
mov
pop
push
and
and
or
sbb
enter
xchg
test
xor
sub
idiv
add
mov
lds
decl
mov
or
cmp
or
sti
cmpsl
fcomip
pushf
sbb
lahf
jns
cltd
jnp
ss
pushf
dec
scas
repnz
aas
or
adc
fs
xchg
fisttpl
mov
imul
jmp
mov
fnstsw
xor
int3
mov
popf
xor
cmc
gs
adc
and
add
lahf
or
nop
iret
shr
ror
xor
push
ja
int3
sbb
ret
and
sbb
aas
mov
aas
mov
xor
sti
cmc
and
mov
mov
ss
sbb
dec
adc
inc
push
push
iret
jno
iret
int3
dec
push
sub
jno
sbb
in
xchg
sbb
push
or
inc
test
scas
dec
push
js
jg
jne
jl
pusha
mov
loopne
inc
pop
sti
nop
sahf
or
pop
jecxz
jg
scas
cmp
arpl
arpl
out
or
mov
je
fisubrl
stos
rcrl
jge
sbb
sub
xchg
and
fisubrs
call
fld
ret
fdivrl
addb
into
aaa
enter
cmp
adc
lret
add
mov
lock
fstpt
cld
push
icebp
xor
lea
jmp
adc
adc
sarl
lcall
mov
cmp
mov
hlt
cmpsl
mov
sub
scas
and
int3
jb
iret
or
and
aad
lret
jle
inc
push
and
cmp
mov
test
hlt
sbb
sub
loop
insb
xchg
insl
xchg
push
push
mov
nop
push
lret
movl
int
scas
iret
mov
push
sbbb
test
mov
jmp
jo,pt
test
dec
aad
dec
insb
push
std
or
pop
xor
out
mov
sub
pop
dec
jmp
add
sbb
call
mov
cmp
mov
enter
notl
pop
into
rol
iret
aad
lcall
sbbb
pop
lock
adc
cmp
mov
fdivl
jmp
pop
xchg
ret
xchg
mov
jbe
push
cwtl
or
movsb
push
inc
and
cltd
cmc
rclb
and
sub
fs
subb
ficompl
sbb
pusha
aam
shlb
add
std
out
mov
pop
jne
sub
sub
js
fldl
jnp
xchg
mov
pop
add
jecxz
xor
xor
mov
xchg
mov
aaa
xchg
or
mov
sbb
pop
out
push
call
or
ret
adc
aad
daa
push
in
xor
rorb
loop
lods
mov
jns
pop
sbb
push
loop
pop
xchg
scas
aaa
push
adc
mov
popa
adc
int3
cmpsb
push
and
sbb
mov
jge
movsl
or
stc
jmp
fidivs
sbb
in
divb
incl
and
pop
add
xchg
jge
xchg
in
enter
popf
ficompl
test
mov
pushf
push
nop
xchg
test
bound
lea
negl
mov
je
cli
rcl
xor
jmp
outsl
mov
or
adc
mov
pop
movsl
pcmpgtd
or
mov
sub
insl
mov
pop
out
insb
mov
xchg
iret
out
insb
imul
out
cli
sub
mov
cli
pop
fnstsw
mov
mov
lock
dec
call
ja
loop
scas
cld
mov
jg
inc
cmpsl
ja
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
loope
mov
adc
jp
sub
cmp
and
jmp
test
test
cmp
xchg
or
dec
xchg
in
inc
mov
mov
dec
jle
xor
cmp
xor
cmp
pop
xor
aad
loop
rol
fstpl
lret
mov
xchg
in
sbb
sbb
push
rol
aam
and
cwtl
or
test
clc
std
adc
xchg
movsb
arpl
test
inc
test
pop
aad
push
mov
bound
mov
sbb
shrl
and
mov
jge
into
push
pop
pop
mov
mov
jmp
pop
in
add
pop
or
lret
mov
mov
mov
es
push
push
pop
xor
fidivl
test
jl
push
stos
cmp
xor
cld
fcoms
mov
inc
and
inc
lcall
leave
leave
mov
xchg
icebp
loop
xchg
sbb
rorb
imul
push
mov
jp
push
insb
or
mov
pop
add
add
push
cwtl
sub
push
mov
movsl
xor
sub
mov
xor
add
and
inc
push
jecxz
dec
xor
jno
lods
pushf
mov
mov
fildl
and
jbe
cmp
dec
sbb
mov
cmpsb
fs
add
dec
popf
imul
js
rcrb
jae
jecxz
fldcw
jp
loop
mov
xor
imul
cmp
ret
shl
xchg
or
int3
mov
fstpl
pop
daa
cmp
stc
scas
stos
sahf
xor
imul
xor
je
or
inc
inc
adc
jbe
sub
rcrb
xchg
or
pop
jae
btc
pop
in
fsubs
xor
push
lret
cmpsl
aad
pop
fucom
int
imul
adc
adc
mov
dec
pop
bswap
fs
pop
pusha
sbb
daa
sbb
movsb
adc
lcall
xchg
add
mov
nop
and
sarb
fdivl
sbb
or
pop
push
xor
bswap
mov
xchg
pushf
xchg
pop
and
adc
inc
xchg
pop
lret
and
cmp
cmpsl
icebp
xchg
cmp
aaa
and
mov
mov
cmpsb
pusha
rcll
add
jmp
mov
ja
ret
and
jmp
clc
div
xchg
xor
insb
xchg
jns
pop
pop
adc
lds
dec
push
lods
outsb
pushf
push
mov
push
in
test
fnstsw
sub
push
mov
jmp
dec
repz
add
mov
or
lret
aam
int3
push
popa
jnp
ret
inc
jle
jl
insb
addr16
call
js
sub
inc
xlat
and
jno
pushf
ljmp
cs
jo
mov
cwtl
add
fimull
lods
jmp
mov
cld
push
sbb
mov
jae
test
xchg
jbe
sti
jbe
gs
push
aad
in
sub
and
out
cmp
addr16
stc
push
stos
stos
adc
pop
adcb
lret
sbb
xlat
mov
das
insl
jns
ret
stos
sbb
mov
rcr
add
dec
loop
inc
pusha
movsl
inc
sub
lds
ja
repz
xlat
out
add
cmc
adc
pushf
sub
xchg
lret
pop
jecxz
xchg
roll
lret
mov
push
movsl
int
stc
leave
adc
xor
inc
insl
roll
inc
mov
mov
stc
xchg
popa
or
aaa
int
jbe
clc
adc
push
inc
push
or
cmp
jne
repnz
and
arpl
pop
pop
mov
jbe
insl
testl
rcrl
pop
roll
xchg
out
mov
push
mov
iret
mov
fistpl
daa
cs
lods
pop
and
test
out
js
or
and
std
daa
nop
add
outsb
inc
sub
out
sti
fxtract
out
ret
xchg
mov
pop
add
pop
lods
and
push
les
sub
sbb
imul
andl
es
adc
and
jecxz
lock
out
shr
and
ljmp
mov
mov
out
sahf
push
int3
sub
inc
mov
das
and
lea
mov
sbb
or
loopne
sbb
xchg
pop
push
mov
movsl
dec
jns
andb
sti
aam
lods
test
pusha
sub
xchg
jecxz
and
pop
ja
outsl
int
xor
push
or
int
fnsave
xor
mov
movsb
sbbb
sub
dec
cmpsl
push
out
fxam
mov
adc
hlt
outsl
lds
shr
sbb
in
insb
jge
jae
add
ja
test
pop
mov
xchg
ljmp
jbe
add
bound
frstor
adc
push
ja
dec
sub
or
mov
lods
stc
imul
mov
in
rclb
xor
mov
stos
sub
cmp
add
sub
or
push
jl
mov
push
mov
mov
adc
xor
xchg
insb
cli
inc
sub
into
incb
inc
mov
or
insb
test
ljmp
mov
scas
rcl
shll
mov
roll
cwtl
rcrb
jnp
shrl
aam
add
mov
fdivs
and
aaa
push
pop
enter
add
imul
int3
insb
xchg
mov
pop
movsl
jns
inc
push
pop
incb
shll
add
mov
imul
adc
pusha
or
mov
xor
sub
push
outsb
imul
out
ja
add
mov
cmp
ror
adc
filds
push
inc
call
xchg
call
push
test
or
or
rcll
push
jle
loope
jmp
jnp
fldenv
push
shlb
shrb
pop
cmpsb
xor
loope
mov
leave
xlat
add
aaa
xchg
scas
enter
loope
mov
sbb
sbb
push
jbe
jl
shll
xchg
and
fistps
lds
inc
push
and
sbb
push
loope
cmp
sub
jno,pt
push
xchg
mov
loop
push
mov
sub
scas
xchg
jmp
push
dec
aaa
sahf
outsb
fucom
lahf
mov
xchg
mov
nop
icebp
inc
jecxz
sbb
call
sahf
sahf
pop
pop
xor
sub
cwtl
lret
stos
dec
or
push
xor
mov
mov
mov
push
sub
test
scas
decl
cs
sub
out
xor
jo
in
mov
out
loop
add
push
xlat
push
jmp
cltd
push
push
jge
in
mov
movsl
cmp
push
insb
mov
pop
cwtl
pop
dec
lods
popf
add
push
add
xchg
decl
je
jno
mov
or
mov
mov
sbb
das
ret
fcmove
xlat
and
fwait
inc
fwait
cmc
and
xchg
push
ret
sahf
roll
in
dec
adc
push
in
aaa
sub
rcll
addr16
adc
sub
shlb
leave
pop
push
xor
mov
and
and
adc
repnz
test
or
xchg
and
jg
and
inc
add
sahf
and
pop
fildl
test
sbb
adc
in
movsl
cmp
dec
hlt
sub
inc
imul
inc
scas
sbb
sub
inc
mul
ds
add
dec
push
clc
mov
cwtl
jp
out
adc
mov
ljmp
xor
push
fstps
test
scas
add
mov
outsl
out
add
sbb
xorb
pop
lods
mov
mov
divl
jbe
inc
cmp
adc
test
int3
and
ljmp
les
add
or
jae
cld
mov
je
add
rcrl
jge
daa
lcall
das
xor
push
les
xchg
and
outsl
in
mov
cmp
popf
mov
scas
xchg
loop
fildll
fwait
call
cli
ret
jle
dec
cmpsl
jecxz
fwait
aam
test
out
outsb
arpl
fldcw
pop
es
data16
jg
jl
movsb
push
pop
mov
icebp
sub
pushf
in
pop
gs
fisttps
test
pusha
in
ljmp
mov
inc
sbb
dec
bound
push
cmp
or
and
clc
push
cmp
xor
lea
data16
sti
pop
push
pusha
aad
fildl
stc
cmc
add
in
outsl
test
mov
imul
clc
adc
loopne
mov
mov
stc
sub
jg
test
jl
movsb
shrd
mov
repnz
ficompl
lods
sbb
pop
stos
std
or
iret
insb
fwait
cmpsl
cmp
fdivr
add
or
jg
adc
dec
data16
loope
aam
pop
lds
das
stc
dec
or
push
mov
es
pop
xor
pop
aas
dec
jae
stos
cmp
adc
sub
add
push
int3
in
lret
enter
mov
mov
cmp
push
xor
and
push
mov
std
aaa
push
loopne
rcrl
les
sar
sahf
mov
jne
and
test
xchg
dec
adc
lds
cli
inc
xchg
outsb
scas
sbb
add
push
shl
enter
inc
adc
cld
ljmp
sti
jg
xor
mov
xor
xchg
shrl
xorl
fcoms
cs
stos
cld
fisttpll
push
jp
sbb
ret
mov
test
push
aam
movsl
aad
push
out
mov
movsb
es
mov
popa
je
aad
adc
add
or
out
js
push
enter
cmp
mov
jno
iret
fmull
ss
mov
lret
movsl
and
lods
xchg
lret
cmp
sub
mov
dec
sti
icebp
push
dec
cltd
mov
jne
cmpsl
dec
test
test
inc
lods
xchg
cmp
add
std
cmpsl
cs
pusha
jne
mov
add
adc
push
hlt
call
mov
popa
or
and
inc
data16
pop
jne
jg
inc
jle
dec
and
xor
jecxz
jg
mov
xor
mov
aaa
movsl
imul
mov
dec
mov
ficomps
sahf
rolb
int
outsl
pop
pop
scas
aam
or
repnz
dec
xor
lret
js
mov
fsubp
pop
lds
repz
xor
xchg
pusha
or
insl
subb
decl
fucomi
int3
cmp
xchg
fisttps
cmc
pop
cmp
jno
and
sbb
sub
testb
arpl
and
pushf
mov
inc
frstor
cmp
sbbl
cli
jbe
stos
adc
cli
mov
std
mov
add
cmc
call
mov
cmpb
add
mov
add
std
loope
cmp
lahf
movsl
scas
in
loop
and
mov
xor
sbb
es
std
sub
test
dec
arpl
jecxz
lods
and
inc
push
jp
cmpsl
cltd
sub
cltd
sub
mov
mov
cmpsl
loopne
shl
adc
imul
adc
cmp
or
pusha
lret
push
pop
out
jns
or
outsl
aam
xor
sahf
inc
adc
xchg
ds
dec
adc
hlt
jg
cmp
sbb
dec
ja
pop
jmp
ds
idivl
in
jge
xor
stc
lahf
sbb
int3
out
mov
add
dec
inc
andb
scas
pop
data16
mov
pop
femms
inc
dec
aad
fmull
mov
shrl
sbb
mov
cs
sub
push
daa
nop
mov
cmpsb
mov
nop
js
mov
stos
push
sbb
push
mov
push
sar
inc
jl
imul
inc
in
scas
leave
pop
push
push
rorl
into
mov
fisttpl
icebp
cmc
push
cmp
fs
loop
dec
xchg
mov
rcll
fimull
mov
mov
in
dec
adc
ljmp
adc
ja
or
insl
daa
repz
jae
ljmp
xchg
pop
lcall
rcl
cmp
pop
lret
sub
outsb
loop
cs
es
lahf
mov
mov
push
mov
das
xchg
jae
jmp
pop
xchg
adc
pop
jecxz
and
aas
jns
inc
mov
inc
pop
fcoms
sbbb
mov
adc
in
inc
add
arpl
push
adc
dec
push
mov
pop
mov
shlb
aaa
push
ljmp
inc
mov
enter
icebp
mov
or
out
and
pop
pop
movsb
pop
mov
jbe
or
test
loope
dec
icebp
fimull
sahf
out
and
cmp
pop
sbb
lods
sub
xor
cmp
iret
fimuls
dec
and
icebp
fcomip
add
fs
pop
inc
xor
lahf
icebp
add
loopne
pop
cmpsl
add
and
ret
lcall
sbb
es
je
fbstp
hlt
or
stos
out
push
xor
ds
sbb
test
testl
cmpb
dec
inc
and
data16
xchg
xor
shrl
jnp
imul
out
mulb
xlat
and
inc
mov
les
movsb
cmp
xor
fucomp
inc
in
cmc
jb
loopne
jae
jns
cmp
pop
daa
std
inc
imul
mov
jne
push
xchg
and
int
jle
sub
xchg
sub
jnp
shl
aaa
mov
hlt
ds
data16
lds
xchg
mov
pushf
pop
pusha
scas
into
mov
lock
and
push
jl
mov
ljmp
push
add
stos
jecxz
dec
push
push
scas
lds
mov
into
out
test
push
es
and
icebp
push
outsl
ljmp
or
loope
je
les
mov
imul
inc
mov
push
sbb
testl
in
xor
inc
mov
ja
loopne
pop
das
add
jle
cmp
aas
lea
shlb
mov
adc
adc
xor
inc
icebp
mov
clc
repz
rcl
mov
ja
xor
mov
xor
inc
dec
xchg
dec
gs
jns
sbb
mov
cwtl
cld
sbb
js
or
mov
push
push
movsb
xor
pushf
and
test
je
push
mov
ret
nop
and
sbb
push
sub
div
ds
hlt
mov
outsl
jb
xchg
or
or
mov
data16
shll
xor
or
mov
jl
enter
cld
shrb
fcmovu
mov
test
mov
cmc
push
fdivp
xchg
repnz
shrb
lcall
shrl
pop
je
jae
or
mov
stos
repnz
pusha
fimuls
scas
sub
popf
adc
xchg
pop
pop
test
ss
push
inc
mov
lods
adc
mov
jns
xchg
test
lret
cmp
push
xchg
or
push
shll
bswap
mov
push
or
repz
shlb
jmp
sbb
aam
cmp
pusha
sub
adc
cmp
cmp
in
sub
inc
sub
push
pop
jle
adc
and
xchg
xor
insb
push
jb
int3
mov
sbb
sahf
push
inc
mov
jo
sub
repz
push
test
jns
mov
aas
dec
mov
movsl
inc
popf
movsb
mov
mov
idivl
or
jbe
lahf
fdivrp
iret
movsb
sub
xchg
push
test
lods
lahf
addl
fisttpl
mov
sub
aas
push
int
enter
pop
adc
jge
imul
pop
adc
bound
repnz
in
ss
mov
lret
xor
cmp
mov
inc
cmpsl
insb
cmpsl
mov
pop
repz
mov
test
loopne
icebp
adc
sbb
dec
out
mov
enter
and
out
cmp
xchg
std
out
leave
loope
push
push
sbb
inc
stos
mov
sbb
inc
jle
xor
adc
and
sbbb
jae
lock
xchg
bswap
stos
push
mov
pop
push
rolb
lret
push
fsubrp
mov
mov
iret
xchg
xorl
pop
in
loop
sub
js
cld
leave
push
pop
addl
rcl
std
sbb
dec
mov
push
xchg
aad
dec
cmpsl
aas
inc
es
dec
pushf
mov
jno
in
or
arpl
mov
shlb
jnp
ss
movsb
jbe
cmp
data16
push
jb
xchg
dec
pop
or
js
aas
ret
pop
xor
rep
jmp
cltd
out
insl
and
mov
push
call
mov
inc
jns
sbb
ret
mulb
jle
flds
out
lock
ds
sub
add
lahf
inc
fdivs
fcoml
repnz
adc
ja
das
stc
xchg
int
inc
lcall
or
addr16
ret
mov
xchg
jbe
mov
cltd
jge
pop
fs
sbb
repz
imul
jno
ja
dec
mov
mov
jecxz
out
and
and
inc
jp
jno
xchg
aaa
mov
sti
shr
fcmovb
pop
push
movsl
sar
jae
mov
imul
push
and
push
jo
test
mov
fucomip
out
and
enter
call
push
lcall
ja
dec
in
in
aas
inc
push
stos
mov
int
testl
cltd
pop
cld
lcall
popf
mov
popf
notl
push
rolb
daa
push
loope
inc
lock
in
or
and
lahf
pop
dec
sbb
test
push
sub
lods
inc
enter
mov
in
and
fisubrl
nop
push
and
sti
jno
mov
jge
nop
outsb
aad
imul
pop
or
cld
push
sbb
stc
cli
stos
js
lret
inc
jnp
xchg
bnd
cwtl
dec
inc
sbb
test
insb
mov
mov
icebp
jo
in
js
test
jae
andl
out
adc
pusha
lcall
in
cmc
mov
xchg
xchg
and
aaa
inc
cmp
subl
mov
xchg
dec
std
cld
xchg
adc
jl
pop
int
cmc
xchg
pop
mov
pop
mov
mov
fiadds
mov
push
aam
inc
mov
sub
imull
push
in
mov
ds
mov
sbb
enter
imul
dec
mov
xchg
mov
icebp
ja
sbb
lret
push
lcall
pusha
and
jb
push
aad
fcomps
mov
sbb
outsl
sbb
xlat
mov
sti
cmp
sahf
sti
ror
xor
xchg
je
mov
fimull
nop
xchg
fcmovnbe
push
jae
mov
ss
or
push
mov
lea
xlat
pop
mov
sub
lcall
stc
int
fisubrs
push
dec
jp
push
out
dec
dec
xlat
cmp
loop
add
sub
push
jl
or
clc
imul
fisttpl
push
xor
jns
lods
jmp
adc
xchg
xchg
loopne
sub
js
push
ss
and
stos
xchg
lods
mov
inc
or
sbb
adc
inc
xor
repnz
mov
dec
ficomps
dec
inc
imulb
inc
out
mov
lods
fucomi
dec
mov
push
jne
add
cs
push
loop
mov
sahf
mov
xor
sub
pop
jl
and
xchg
lcall
shrl
add
out
mov
scas
adc
fimuls
and
or
bound
dec
push
xchg
xchg
cmc
shrl
mov
dec
iret
adc
cbtw
imul
and
outsl
jne
or
jae
movaps
loop
in
icebp
push
mov
push
arpl
xor
mov
fsubrs
repnz
and
fsts
sti
cmp
mov
outsl
je
add
rolb
insb
xchg
and
out
jle
xor
in
sub
push
mov
sbb
mov
pop
ds
xchg
mov
popf
jle
shl
cmp
ret
push
out
std
xor
dec
add
mov
dec
scas
cmpsb
sbb
or
jnp
jge
and
ljmp
push
ljmp
leave
pop
sub
in
icebp
xchg
or
pop
xor
enter
jp
imul
cwtl
or
xchg
or
mov
movsb
popa
movsl
xchg
mov
push
data16
lock
mov
jns
xor
js
adc
ret
fwait
adc
sub
jne
xor
int3
popa
aam
push
or
cli
xchg
xchg
pop
test
test
cmp
inc
lcall
pop
mov
mov
mov
xor
out
aas
mov
push
in
or
add
sahf
test
fsubl
sbb
push
dec
cs
xchg
icebp
loop
mov
sahf
cmp
cmc
jae
fwait
xor
lret
cmp
adc
fucomip
push
cld
inc
iret
out
iret
mov
jmp
mov
push
mov
push
movsl
stc
filds
cmp
jb
pop
push
pop
int
lret
sarl
inc
cs
cmp
daa
mov
enter
or
lods
pop
out
jno
stos
movsl
fwait
xchg
in
es
sub
pop
push
mov
mov
sub
repnz
daa
mov
aam
rcrl
mov
mov
rorb
sbb
pop
push
std
mov
test
insb
fsubr
mov
adc
cmp
test
mov
iret
push
std
insb
lahf
mov
or
js
loopne
cmpsb
push
add
mov
push
xchg
repz
jg
stos
inc
insb
xchg
or
and
dec
push
lcall
scas
jle
or
fwait
pop
dec
adc
jmp
mov
mov
stos
mov
lcall
adc
pop
add
cmp
repnz
shll
flds
inc
xchg
dec
clc
xlat
xor
push
cmp
int3
or
mov
jno
orb
out
dec
into
push
popa
and
mov
je
movsb
repnz
enter
popf
mov
push
push
int
pop
lea
repnz
dec
loop
mov
gs
pop
push
sub
push
add
jnp
or
cli
inc
xchg
jnp
or
popf
lret
jg
mov
cmpsl
mov
or
lock
cmp
fildll
mov
jecxz
daa
mov
adc
xchg
or
outsl
shlb
jb
arpl
push
flds
mov
std
cmpsl
push
xchg
movsb
pop
mov
or
cli
clc
mov
scas
and
sbb
mov
inc
push
push
adc
xlat
add
sbb
int3
dec
inc
or
popa
popl
addb
mov
or
lock
jo
jb
fst
dec
cmc
ja
lock
cmpsl
push
and
aas
dec
lods
or
add
mov
cli
pop
pop
arpl
cwtl
es
ret
xor
inc
pusha
das
or
mov
xchg
push
xor
jno
push
pop
add
sbb
inc
mov
cmpl
push
fiadds
addb
inc
add
fcmovb
cmp
inc
pop
sti
sbbb
jno
popa
sub
out
pop
mov
aam
or
jbe
inc
leave
pusha
sarb
inc
std
outsl
or
push
dec
in
or
mov
xor
jo
pop
inc
dec
ds
adc
mov
add
xchg
repnz
insb
sbb
in
push
fstpt
pop
pop
inc
dec
aam
arpl
imul
movsl
jl
xor
mov
push
call
stos
adc
in
mov
lock
mov
pushf
xchg
cld
jb
je
push
and
jp
dec
mov
lret
xor
das
mov
pop
lahf
jle
sysenter
je
inc
sbb
mov
jbe
movsl
sar
or
loop
gs
int
jl
outsl
mov
jne
cmpsl
pop
jo
adc
aad
pop
pushf
sub
pop
xchg
push
imul
cwtl
lods
add
inc
mov
cmpb
mov
addr16
jp
sbb
js
fcoml
xchg
push
jnp
into
ja
fdivrs
push
popa
sbb
fucomip
mov
mov
iret
stos
insb
scas
jns
jnp
addb
in
cltd
adc
sbb
sbb
xchg
pop
push
jbe
subb
fnstenv
inc
int3
rolb
pop
push
mov
aam
repz
push
adc
in
cmp
inc
pop
mov
or
dec
repz
or
jmp
out
sbb
in
xchg
add
insl
stos
cmc
pop
fsubs
ficomps
cmpsl
mov
adc
adc
push
lock
jnp
sti
cmc
subl
mov
aad
push
les
loop
rolb
jp
sub
lds
jle
stos
scas
sbb
add
add
mov
or
add
mov
orb
inc
xchg
fwait
jecxz
xor
outsl
dec
push
repnz
stos
adcb
ds
xor
aas
jmp
test
jb
mov
mov
popa
xchg
mov
mov
insl
mov
cmp
xor
jmp
cmpsb
ret
pop
lret
cli
into
xchg
push
lahf
jmp
add
mov
aaa
adc
mov
in
scas
popf
push
jmp
stos
fdivrl
cmpsb
popf
test
push
xor
sbb
or
xor
push
imul
mov
aad
and
push
xchg
cwtl
add
iret
mov
movsl
mov
pop
dec
xchg
int
outsl
loope
scas
xchg
and
mov
shlb
scas
or
sub
ficoml
dec
add
pop
push
sub
mov
mov
jle
inc
adc
neg
cltd
mov
call
add
push
lret
sbbb
cwtl
push
fdivrs
mov
mov
adc
rcrl
in
push
es
movsl
sub
test
xorl
loope
lcall
dec
gs
cltd
mov
mov
push
sbb
xor
test
and
jae
pop
cmp
push
out
ja
cltd
out
orl
jecxz
fisubrl
xorl
mov
call
orb
cmp
jns
scas
adc
mov
mov
add
rcl
jns
aas
bound
outsl
arpl
add
sbb
xlat
xchg
mov
pop
sahf
jp
dec
mov
in
fcmove
push
ret
clc
pop
fsubrp
mov
cmc
push
lret
dec
dec
enter
xchg
mov
scas
dec
bound
and
out
aad
fcomps
cld
inc
test
sub
divb
clc
pop
ljmp
mov
pop
sbb
aas
lret
cmp
fsubs
cmp
and
jbe
and
repnz
cltd
xor
lods
int
mov
sbb
xchg
cmp
cmp
xor
inc
dec
in
ljmp
jl
icebp
sub
stos
push
aaa
ret
pop
out
ja
and
ja
and
in
leave
or
int3
inc
xor
in
sub
jp
dec
mov
add
sarb
dec
adc
cwtl
sbb
out
mov
sub
sub
and
out
int3
xchg
or
mov
jnp
or
and
xchg
push
pusha
mov
andl
outsl
stos
addr16
push
lods
mov
inc
test
dec
jp
ds
testl
mov
sbb
xor
dec
insl
xchg
ret
dec
xchg
aam
or
hlt
xchg
xchg
add
xchg
jne
pop
cli
mov
out
ss
jg
push
lret
cmpsb
xchg
xchg
gs
test
mov
and
sub
sub
sbb
aas
sub
mov
loopne
and
loope
jbe
adc
call
adc
sbb
or
rorl
insb
dec
or
and
test
imul
ds
and
int3
leave
jne
lcall
mov
cli
cltd
xchg
ficoms
bnd
push
fs
mov
xor
pop
pop
inc
dec
add
xchg
xor
mov
ljmp
push
stos
mov
adc
movnti
jns
adc
repz
loope
fistps
jp
push
jns
es
arpl
or
xchg
outsl
faddl
sti
stos
xor
imul
int
dec
sub
inc
jbe
cmp
roll
xchg
adc
cmpsb
mov
pop
mov
xor
rcrl
std
mov
push
pushf
cmp
test
cmpsl
pusha
xor
or
lret
stos
mov
mov
mov
jnp
cmp
mov
cmpsl
mov
inc
mov
push
test
push
pushf
inc
pop
bound
arpl
mov
add
or
sahf
out
popl
aas
test
mov
test
and
add
add
push
lods
lock
mov
fisttpl
call
pushf
and
idivl
inc
inc
jae
fsubrp
inc
popa
jae
pusha
or
mov
cld
add
lds
lods
xlat
dec
fnstenv
and
sub
in
xchg
ret
jne
neg
sbb
or
sub
cmp
xor
xchg
test
das
xor
in
test
push
icebp
js
movsl
push
cltd
loope
cmpsl
lock
mov
cmp
lea
popa
jge
dec
push
and
xor
sub
fldenv
jo
sahf
insl
pop
pop
cli
das
not
fsubrl
pop
data16
add
test
adc
mov
sub
and
cmpsb
idivl
stos
sub
inc
pop
jg
test
call
int
roll
mov
push
jne
loop
mov
test
xor
cmp
push
testb
cmpsl
clc
sub
jmp
sti
repz
imul
iret
fabs
scas
cmp
sbbl
addb
arpl
or
imul
jae
add
imul
and
sbb
adc
clc
push
outsl
mov
push
das
divb
shll
xchg
lods
arpl
mov
loopne
sbb
or
bound
scas
push
dec
xchg
test
xchg
int
lahf
cltd
fs
addl
push
jb
lods
out
mov
pop
test
adc
jo
cmp
xor
mov
in
mov
and
and
loope
fadd
sbb
jge
adc
roll
mov
shrb
je
cmp
xchg
mov
sub
xor
dec
nop
lahf
sarb
mov
shrb
push
enter
mov
xchg
mov
js
sahf
mov
fwait
in
repnz
test
cmp
fists
dec
mov
mov
jmp
mov
faddp
or
outsl
pop
fs
xchg
lahf
jns
fsts
add
inc
in
add
outsb
xchg
push
sbb
xchg
mov
mov
or
out
in
imull
loop
push
dec
push
inc
dec
rolb
or
lret
scas
sti
les
xchg
in
mov
push
pushf
jno
xchg
adc
into
mov
je
jmp
cwtl
add
or
test
pusha
mov
cmp
scas
xchg
pusha
jns
adc
jp
movsl
jmp
xlat
aam
movsl
mov
into
xchg
fldcw
outsl
xlat
out
pop
rcrl
ret
or
into
mov
xchg
dec
cmp
loope
jb
je
lea
out
sub
pop
out
stos
cmp
rorb
xor
andb
imull
daa
pop
pop
out
pushf
cmpsl
stos
pop
test
sub
enter
into
scas
lods
adc
outsb
cld
add
inc
ss
cmp
dec
add
push
js
sub
or
jns
mov
and
sbb
loope
dec
mov
aad
xchg
lock
arpl
inc
mov
rcll
outsl
outsb
xchg
pop
jns
inc
sub
cmpsb
mov
mov
aam
movsb
test
outsb
lea
dec
xchg
decl
adc
push
insb
rolb
pop
add
addr16
out
push
fnstenv
or
xor
scas
sarl
add
push
subl
push
push
jbe
xchg
mov
nop
mov
dec
bound
pop
pop
pop
test
mov
jl
push
xchg
sub
pop
adcb
and
adc
ret
mov
pop
xchg
out
pop
lds
sub
or
or
add
cmp
bound
lods
aad
dec
jl
pop
es
enter
fadds
add
cmc
es
cli
sub
ror
test
fstpt
adc
sub
in
mov
or
icebp
icebp
fdivrl
cmp
shrl
in
xor
or
jg
dec
lods
adc
sti
sbb
mov
xor
fwait
fwait
mov
jmp
cmp
cmpsl
xchg
divb
cs
fcompl
push
add
adcl
pop
mov
scas
jl
and
aam
orb
pop
adcb
test
mov
repnz
stc
push
cmp
jecxz
rorl
jmp
jmp
cmpsl
cmp
push
sarl
into
iret
lods
das
rcrb
fidivrs
pcmpgtw
cmpsl
pop
jmp
dec
cmp
negl
fs
and
aaa
or
pusha
inc
dec
and
mov
out
xchg
testl
shrb
and
fwait
lret
sahf
xor
and
sbb
add
ror
pop
nop
dec
mov
push
or
mov
adc
dec
scas
cld
stos
lods
fisttpl
insb
scas
adc
or
xchg
scas
xor
push
push
xchg
push
shr
sub
mov
es
mov
cld
das
or
test
gs
mov
aas
jmp
adc
jge,pt
pop
movsl
inc
add
pop
cmp
mov
fimull
ret
xor
cmp
icebp
movsb
mov
arpl
jmp
adc
sbb
arpl
std
jns
push
push
mov
lcall
imull
adc
cmp
lret
fistps
test
outsl
push
pop
push
scas
jbe
sub
loopne
pop
stc
dec
mov
push
iret
inc
in
push
dec
pop
xchg
repnz
movsb
mov
or
push
add
pushf
out
mov
vhsubpd
sbb
pop
push
mov
out
ret
test
xor
xor
dec
push
push
dec
xlat
dec
add
movsb
out
dec
adc
repnz
loop
pop
mov
mov
fadd
js
fnstcw
xchg
test
mov
sbb
subb
push
mov
cmp
pop
pop
xlat
inc
and
aad
mov
scas
add
in
out
into
ret
mov
push
ret
and
mov
insb
aaa
mov
repz
xor
sub
out
adc
shr
sbb
xchg
or
pop
js
sub
push
inc
push
mov
mov
jne
or
push
iret
add
addb
cmp
jp
push
pop
add
mov
call
imulb
xor
in
pop
inc
push
mov
mov
xchg
popf
cmpsb
aas
loop
in
inc
pop
loopne
lds
sub
cltd
aas
in
push
scas
cltd
pop
or
inc
and
pop
xorb
xchg
inc
fwait
sbb
sub
sub
xchg
pushl
movsb
jge
pop
in
scas
mov
cltd
das
push
scas
pop
add
data16
dec
sbb
adc
jle
aad
les
pop
lds
testl
push
and
mov
pop
or
adc
stos
fistpl
jbe
imul
or
xor
fldl
punpckhbw
aas
fucomi
add
jecxz
js
push
nop
push
sbb
sbb
sbb
jl
xlat
adc
fdiv
pop
sti
les
mov
xor
sub
inc
add
out
lods
repz
pop
xchg
cmp
out
out
sahf
rol
xchg
mov
dec
xchg
mov
or
ffree
ret
xlat
xor
mov
sub
sub
incb
bound
push
inc
push
push
int3
pushl
push
mov
loopne
fcoms
jae
cltd
movsl
mov
add
bound
mov
sti
orb
sahf
xor
into
pop
xchg
or
add
daa
mov
mov
or
fdivrl
cmp
rcll
xor
and
sbb
mov
mov
adc
xchg
fyl2xp1
int3
ffree
and
mov
imul
inc
xor
lcall
insl
add
xchg
movsb
hlt
out
rol
mov
das
in
pop
cld
punpcklbw
pop
lods
fs
sbb
incb
fidivl
faddp
in
insb
pop
sub
sar
fwait
sarl
cmc
sbb
scas
adc
or
push
sub
adc
inc
pop
add
adc
rcrl
mov
mov
fucom
iret
dec
out
in
xor
xchg
addl
gs
xor
fwait
adc
outsb
pop
outsb
in
loop
scas
push
jmp
in
xchg
jmp
shlb
shlb
test
sti
sub
lea
shrb
pop
shl
push
cli
arpl
imul
stos
les
cmp
and
scas
dec
or
lahf
je
notl
loop
dec
mov
jge
arpl
cmp
or
std
fwait
add
push
sti
adc
jecxz
sbb
data16
lret
inc
lcall
xor
jns
repz
ffreep
aas
dec
or
clc
mov
push
push
add
or
fnsave
mov
fsts
lcall
sbb
out
in
clc
and
in
or
inc
jae
xor
cld
inc
js
cmp
add
cmpb
aaa
imul
xor
scas
jo
sahf
clc
sub
dec
cmp
movsl
pop
addb
repnz
sbb
pusha
xchg
push
jnp
mov
dec
leave
sti
dec
dec
mov
jge
mov
jmp
cld
add
mov
pop
adc
pop
and
mov
mov
sbb
les
imul
stos
dec
lock
sub
dec
sbb
in
inc
mov
lods
push
dec
add
icebp
movsb
incl
pand
pop
icebp
push
sub
add
outsl
in
and
outsl
fisttpll
cmp
sub
sub
dec
insl
mov
mov
insb
in
int3
fsubrs
shr
cmp
sbb
xchg
xchg
mov
jle
and
pop
clc
dec
iret
xchg
mov
add
sub
aas
pop
sub
lds
test
incb
out
mov
xor
dec
lods
xor
sbb
sbb
lock
popf
gs
sbb
or
xor
cmp
nop
jmp
ljmp
pop
sub
or
mov
icebp
xchg
cmp
lahf
shl
cmpsl
jg
jg
push
or
pop
sub
icebp
mov
push
sub
das
fldcw
cmp
in
sti
xor
pop
xor
mov
sbb
test
pusha
mov
and
bound
sub
xor
ret
sbb
or
jns
test
outsl
lock
pop
xlat
sahf
cmpsl
test
and
xor
scas
mov
push
jecxz
sbb
and
loopne
xchg
stos
jb
push
je
mov
jbe
ret
dec
mov
xlat
popf
pop
pop
mov
mov
sub
aam
or
jne
xchg
movsl
inc
push
sbb
sbb
cld
in
or
arpl
mov
ja
mov
jnp
nop
jmp
movsl
and
cmovno
imulb
dec
jno
or
add
sbb
fisubs
xchg
dec
cmp
mov
push
out
xchg
gs
bound
outsb
mov
inc
mov
or
imul
pmaddwd
cmp
outsl
lods
out
sbb
shlb
lods
pop
test
jno
std
aas
xor
pop
and
cld
filds
mov
xchg
mov
ret
fnstcw
adc
jle
repnz
loope
xor
inc
icebp
mov
pop
push
fisttpl
dec
ss
negl
fbld
and
or
inc
loope
into
xlat
cmc
inc
sbb
in
loop
and
incb
ss
mov
lock
jbe
inc
scas
lahf
scas
stos
popf
mov
xor
out
cmpl
mov
dec
cli
lods
jnp
cli
adc
and
and
pop
xchg
jecxz
daa
or
cli
xchg
xchg
repnz
cmp
fidivrl
cmp
outsl
pop
xor
push
inc
dec
mov
scas
push
adc
cmp
fdivrp
inc
fdivrl
in
fbld
mov
scas
inc
adc
lcall
test
movsl
shrb
push
pop
xor
jl
xchg
scas
pop
scas
add
xor
xchg
loopne
mov
xlat
adc
sub
mov
pop
fistps
jge
cmp
jg
jne
repnz
pop
pop
sbb
stos
add
jecxz
cltd
test
mov
pop
jp
cltd
xchg
inc
shl
pop
lahf
jle
sub
psrlw
mov
js
mov
mov
ret
into
cmp
and
pop
in
dec
cmp
mov
fwait
xchg
ret
dec
cmp
push
inc
rcll
loopne
out
adc
xchg
ss
addr16
pop
xchg
outsb
push
movsb
push
cmp
inc
lds
push
fwait
cmp
cmp
mov
sub
ja
call
mov
les
xchg
cld
adc
insb
fwait
addl
mov
adc
cld
push
repz
stos
mov
repz
lods
cmp
popf
sbb
and
int
jne
cmp
adc
inc
push
push
adc
xor
xor
inc
adc
pop
xchg
ret
dec
addr16
mov
and
fidivs
jno
bound
in
mov
std
push
xchg
movsb
cld
pop
fmull
push
pop
std
int3
sar
nop
mov
jle
imul
ret
push
adc
xor
std
or
cmp
jl
adc
jns
les
lds
dec
xchg
fmuls
repnz
jbe
push
ss
in
out
in
out
cmpl
lahf
mov
pop
scas
mov
lret
cmp
pop
out
add
popf
clc
jne
popf
lods
mov
cs
xor
cs
out
pop
scas
lods
xchg
mov
dec
mov
and
xor
or
push
adc
rclb
inc
xchg
lret
mov
jae
out
and
sbb
dec
shr
xchg
movsb
pop
repnz
leave
push
pop
mov
in
or
xor
xor
jb
lods
xor
pop
mov
add
std
xor
sub
push
adc
cli
xchg
pushf
push
icebp
daa
insl
jl
cmp
gs
imulb
popa
sub
sbb
ret
xchg
arpl
bound
xor
test
jns
int
lods
or
sub
inc
adc
das
adc
out
adc
mov
jmp
mov
out
pop
sbb
pop
push
xchg
fcompl
adc
cwtl
adc
outsl
les
imul
mov
pop
decl
sahf
mov
in
mov
push
mov
imul
pop
or
lds
into
movsb
pop
movsl
push
jb
sbb
mov
stc
lock
jb
xchg
sbb
push
pop
mov
jns
es
pop
inc
cmc
imul
mov
pop
adc
jae
aad
xchg
xchg
dec
push
add
cmc
jmp
in
cmp
paddq
mov
mov
and
mov
sarb
sarb
rolb
dec
sbb
or
sub
cmp
jmp
pop
dec
pop
xor
or
pushf
insb
int3
sub
cmp
mov
adc
iret
nop
loop
sarl
inc
imul
hlt
jno
pop
adc
push
xchg
es
mov
sub
cltd
mov
push
fucomi
pop
jno
add
sbb
xlat
mov
mov
xchg
pop
inc
add
and
pop
mov
mov
adc
les
mov
call
idivb
cmp
enter
popa
clc
mov
ficompl
push
xor
movsl
sbb
mov
call
stc
jmp
shlb
out
and
loopne
and
sub
popa
jns
push
xor
jb
loop
push
jge
imul
data16
and
push
inc
shrb
and
popf
mov
add
sub
inc
xorb
xchg
jl
mov
pop
outsl
jg
leave
out
lcall
arpl
sahf
lea
enter
jg
dec
jmp
sarb
mov
popa
mov
push
sub
xchg
mov
mov
pusha
and
cmpsb
movl
and
rorb
into
daa
fcompp
call
jge
insl
push
insb
mov
mov
mov
cs
aaa
aas
push
or
out
iret
bound
xor
ret
cli
aam
insl
out
sbb
insb
xchg
dec
add
mov
or
das
ds
pop
jo
add
cmp
inc
push
xor
or
xor
movsb
xorl
sahf
jg
xorb
call
movl
test
pop
inc
sahf
jno
mov
popf
cmc
xlat
xchg
loope
adc
and
cmp
xor
fnstsw
cld
cmp
sbb
sti
rclb
fs
outsl
inc
jns
bound
enter
fisubrs
and
xchg
dec
fstl
ss
out
ja
movsb
loop
mov
push
and
ud0
sbb
nop
xor
dec
loop
in
adc
jmp
mov
outsl
enter
addr16
sbb
lods
xchg
popa
sbb
jo
jo
jno
mov
jnp
imul
mov
cmpsl
ja
inc
dec
call
jg
xchg
mov
and
adc
pop
test
icebp
dec
daa
movsl
hlt
imul
in
rcl
popa
jno
mov
ret
adc
inc
xchg
mov
sub
int
lods
rolb
pop
jo
or
xchg
mov
mov
sti
mov
and
shll
mov
movl
mov
pop
and
and
mov
lods
jl
cmpl
inc
aam
jecxz
inc
dec
xchg
insb
ret
pop
jecxz
and
xchg
pop
sahf
and
mov
xchg
mov
pop
cwtl
push
in
push
in
ss
jnp
sub
scas
sub
pop
out
int3
pop
das
ljmp
cld
outsl
leave
lahf
mov
ljmp
aad
in
aad
mov
or
popf
cltd
add
push
jle
fdivrl
scas
mov
and
mov
and
mov
sbb
add
jb
or
pop
xchg
pop
add
jae
pop
out
cli
js
adc
xchg
mov
xchg
dec
imul
imull
add
notl
cmc
add
xchg
ljmp
repnz
imul
xchg
xchg
mov
in
lods
pusha
mov
pop
jge
jl
rclb
xchg
test
add
dec
xchg
sbb
je
mov
outsl
mov
push
adc
ret
loope
mov
in
mov
adc
pop
mov
in
lret
xor
cmp
fistpl
dec
out
notb
sub
jnp
rdmsr
stos
testb
gs
div
sbb
insb
inc
mov
es
mov
mov
sarb
push
int
pop
xlat
fsts
scas
repnz
sbb
std
test
mov
sbb
xchg
sub
dec
fsubs
mov
inc
jmp
jg
or
xlat
repnz
xchg
mov
adc
xchg
jecxz
xor
or
pop
fsts
popa
inc
insl
pop
cli
add
call
xchg
retw
mov
nop
stos
mov
mov
push
insl
lea
adc
aas
mov
sti
call
push
mull
test
fnstsw
popa
xchg
pop
lret
arpl
rcll
icebp
cltd
pop
jmp
or
jb
xchg
pop
mov
push
pop
push
add
insb
inc
add
mov
add
lcall
ss
fnstsw
addb
in
jl
fbld
xchg
into
dec
push
popa
and
mov
adc
lahf
push
call
test
mov
adc
jne
xchg
fbld
jnp
inc
jb
pop
std
repz
inc
lods
push
xor
test
lea
dec
sub
pop
repnz
add
data16
xor
das
inc
ret
movb
sub
ljmp
bound
pop
jl
insb
cmp
cwtl
rcrl
int3
inc
test
sahf
inc
in
int
je
in
add
test
scas
mov
scas
orl
xor
mov
pusha
mov
add
pop
test
mov
dec
pop
pop
js
and
xor
hlt
in
in
add
mov
push
lea
push
les
push
iret
fstl
cs
inc
cmpsl
pushf
pop
pusha
xchg
xchg
js
mov
dec
xchg
ds
or
fwait
incb
inc
sbb
inc
sahf
mov
hlt
aaa
mov
sub
xor
push
stos
lds
repz
js
sbb
lods
popa
pop
pop
add
iret
add
popa
mov
fwait
mov
mov
jl
fsts
xchg
jo
and
lods
push
fucom
push
hlt
test
adc
push
in
mov
add
cmp
mov
ret
cmpsl
test
movsl
gs
addl
pop
out
push
pop
stos
fcompl
sub
sbb
ja
jae
mov
out
lcall
add
mov
mov
inc
loope
inc
loopne
cmpl
and
inc
and
xor
in
loope
pop
add
icebp
xchg
mov
stos
mov
sub
sahf
shr
enter
test
inc
out
mov
int3
adc
ror
bound
daa
cli
out
fs
iret
mov
mov
and
test
xchg
out
loope
push
ret
lods
pop
sbb
dec
xchg
sub
mov
mov
xchg
fs
fidivrs
mov
mov
ljmp
repz
fildl
ret
xor
or
mov
sbb
lret
cmp
or
mov
pop
stos
inc
pusha
jnp
add
sbb
push
lock
popf
cmp
mov
lea
cmpsl
jno
or
cmc
outsl
sbbl
add
in
subl
and
arpl
adc
inc
push
jle
out
adc
inc
xor
mov
je
stc
xchg
mov
addl
inc
lods
sbb
dec
fld
xchg
bound
dec
rcll
pop
lret
mov
dec
loop
sub
mov
adc
mov
sub
mov
xor
mov
dec
xchg
cltd
jp
cmp
xlat
sbb
adc
imul
incb
adc
int
out
mov
jo,pn
pop
inc
out
sbb
ret
cmpsl
out
dec
insb
sbb
outsl
pop
movsl
ret
push
xchg
sub
adc
stc
scas
mov
adc
and
or
jmp
mov
sbb
mov
dec
or
enter
aam
fs
push
cwtl
pop
inc
xchg
scas
jge
sarl
repnz
call
nop
jg
loope
es
sub
fidivrl
mov
push
sub
sbb
adc
mov
jns
lods
push
inc
das
jno
fstpt
rcll
sbb
shl
sbb
mov
xchg
and
ret
and
fs
add
aad
insb
xchg
xchg
rolb
dec
das
push
test
xlat
std
jl
lret
xor
add
lds
mov
push
clc
inc
inc
or
cmp
mov
push
jo
lock
iret
sbb
or
cmpsb
fcomip
je
rcrb
mov
mov
cltd
fsub
in
adc
testl
pusha
scas
movl
push
ja
jp,pn
bound
dec
cmp
pushf
inc
xchg
xor
sbb
packuswb
jge
jb
ljmp
ret
add
adc
lcall
cmp
xor
enter
mov
cmp
inc
imul
les
call
jae
xor
xor
jmp
addb
out
mov
cmc
insl
and
sbb
xor
xor
fisubrs
aad
add
fisttps
cmp
dec
pop
add
cmp
das
pop
jl
cld
xchg
pop
sbb
addb
sub
jge
adc
pop
push
cs
icebp
pop
mov
add
pusha
push
pusha
addr16
xchg
adc
outsl
mov
loop
rorb
aam
cltd
sub
adc
mov
add
hlt
aas
ficoml
outsl
mov
loop
xchg
int
inc
mov
repz
ret
mov
into
imul
jnp
shl
enter
loope
xor
push
rcrb
sbb
jmp
mov
xchg
mov
mov
int
mov
pop
jnp
push
out
push
add
adc
xchg
pop
mov
insb
mov
cmp
neg
push
fimuls
mov
mov
test
outsl
mov
fists
mov
int
push
pop
jmp
ss
adc
imul
mov
jno
or
xchg
aaa
sbb
shll
fisttpll
jecxz
mov
rcll
sbbb
xor
jae
add
add
mov
mov
popa
fdivrl
adc
inc
xor
fldt
xchg
outsb
mov
in
push
sub
add
jne
xor
imul
movsl
test
rclb
lods
popl
mov
or
stc
mov
mov
inc
cmpsl
xchg
dec
or
cmp
out
cmp
pop
sub
in
ficoms
dec
jg
push
sbb
mov
fdivr
aaa
clc
test
fnsave
dec
icebp
std
jmp
inc
loope
data16
adc
in
lods
cmp
xchg
stos
outsl
jbe
jecxz
dec
cmpb
xchg
push
lret
or
stos
js
test
lock
and
mov
mov
aaa
cltd
bound
add
mov
push
pop
mov
les
outsl
loope
repz
stos
out
cmpsb
dec
das
jge
dec
out
pop
out
mov
jno
pop
or
xchg
out
sub
mov
xchg
sbb
cmp
inc
push
adc
or
mov
inc
adc
sbb
sbb
mov
cli
add
mov
xorl
or
add
adc
xor
gs
insb
adc
jge
pop
mov
out
push
arpl
icebp
sub
jae
std
divb
mov
imul
hlt
ljmp
cli
addb
xlat
stos
jecxz
subl
mov
and
push
lret
imul
push
adc
imul
test
pop
pop
std
xchg
adc
dec
fidivl
mov
into
dec
rorb
inc
sbb
pop
ds
in
cli
repnz
jbe
ljmp
push
inc
repz
gs
cmp
es
sbb
inc
inc
mov
out
dec
popa
mov
in
mov
dec
roll
fbld
jg
adc
adc
mov
pop
mov
iret
lret
lcall
push
data16
es
into
xor
daa
stos
pop
loopne
push
inc
popa
dec
fnstsw
hlt
mov
in
xchg
pop
lea
fiaddl
jnp
mov
xor
sbb
filds
cltd
cmpsb
movsb
cltd
sahf
imul
cmc
sub
mov
stos
into
xchg
cmpsl
mov
idivl
jmp
ja
cmpps
xchg
bound
add
pop
les
scas
push
shrl
je
int
loop
xor
imul
push
jmp
out
pop
es
fcomip
pop
je
lea
outsb
push
and
inc
jge
mov
mov
addr16
add
mov
xchg
cmpsl
fsub
xchg
fisttpll
mov
mov
cwtl
out
cmpl
movd
icebp
fstpl
sub
idivl
cltd
pandn
inc
call
out
pop
aam
pusha
icebp
scas
ss
and
repz
push
push
pop
into
scas
aaa
xor
adc
inc
call
mov
mov
pop
rolb
jne
jno
inc
xchg
lahf
mov
out
stc
cmp
mov
call
sarb
movsb
cwtl
lea
in
ret
testb
jle
mov
popa
ss
icebp
cwtl
ja
mov
loope
mov
jg
inc
in
fsubrp
xchg
mov
adc
push
int3
and
push
dec
fisttpl
cwtl
andb
mov
jae
inc
int
cmp
xchg
pop
faddl
rcll
or
sub
movsb
dec
add
sbb
repnz
cmpb
sub
inc
cmp
data16
leave
or
xchg
xchg
cmpsb
xor
cmp
cmpsl
rcrl
movl
sbb
lods
lcall
xor
jp
scas
dec
fidivl
insb
lret
out
pop
stos
push
stos
adc
mov
mov
mov
jp
or
mov
jno
roll
fcompl
sub
test
scas
jg
loop
mov
insb
xor
mov
stc
ret
out
jle
ja
dec
jp
pushf
gs
scas
jnp
jbe
dec
shlb
loop
cs
fdivrs
xchg
pop
adc
negl
inc
pop
data16
imul
in
outsl
fisubrl
iret
cmpsb
lahf
xor
mov
icebp
push
shrl
std
and
add
mov
jo
push
or
insl
adc
dec
lods
jge
test
cmpsb
lcall
pop
adc
inc
repnz
lea
enter
cli
loop
stos
fsub
pop
xchg
adc
arpl
out
push
cld
add
out
push
clc
lret
add
leave
dec
cmp
scas
testb
imul
add
int3
or
mov
jb
jl
dec
xor
inc
jge
mov
and
push
stos
insl
lret
cld
sti
xchg
add
fcompl
ret
inc
fidivrs
fldt
mov
bound
mov
lods
sbb
xor
icebp
add
jl
nop
jmp
jbe
mov
sbb
jnp
sub
push
pop
jns
push
mov
mov
or
xchg
int3
loop
incb
push
div
adc
inc
push
xor
popf
fs
das
daa
leave
call
test
stc
lock
xchg
outsl
int
lods
and
xor
loop
adcl
into
nop
outsl
adc
es
ret
push
out
lret
dec
clc
pop
mov
inc
sbb
and
test
aam
cmpsb
insl
dec
ficomps
loopne
lds
cltd
notl
faddl
add
fmul
xor
lods
call
cmp
test
pushf
inc
jp
and
lods
cld
sbb
cmp
in
call
adc
inc
inc
mov
repz
adc
and
out
lods
xlat
sbb
bound
mov
fwait
movsl
pop
popf
fdivl
insb
pop
or
inc
mov
push
out
adcb
sub
pop
inc
or
mov
test
stc
call
mov
and
lret
arpl
mov
mov
inc
ficomps
enter
jecxz
jbe
loop
insb
adc
and
cld
clc
adc
jae
loope
mov
sub
test
div
mov
mov
add
inc
pop
ljmp
popa
scas
cli
pop
data16
mov
sldt
cmc
test
js
cltd
divb
imul
adc
xor
insb
mov
push
decb
les
js
xchg
jle
or
in
data16
mov
mov
jbe
pop
adc
sub
sub
lds
dec
xchg
scas
cmpb
xchg
xchg
xor
leave
xchg
int3
mov
cwtl
sub
pop
aas
icebp
push
lea
cwtl
dec
pop
or
rorb
inc
sbb
dec
lds
call
stc
sub
push
push
mov
in
sub
mov
xor
or
jg
cmp
lret
dec
jne
and
jge
xchg
xchg
test
insl
ucomiss
loopne
jle
push
sub
adc
imul
in
bound
lret
cmpsb
test
pop
icebp
pop
arpl
push
xor
push
xchg
addr16
push
mov
scas
lahf
mov
jge
mov
xchg
add
jg
adc
sarl
mov
pop
push
fisttpl
or
mov
out
fildll
sahf
push
sub
cmp
mov
fsubs
jp
test
shrl
inc
jnp
leave
imul
lock
adc
push
push
cltd
addb
divb
pushf
and
in
mov
test
gs
int3
push
sahf
aad
sbb
imul
push
addr16
lahf
xor
xchg
stos
loope
rcl
icebp
xchg
hlt
or
pushf
sub
cmp
adc
sub
imul
mov
cmp
test
std
cmp
sbb
jle
inc
lret
imul
and
inc
and
and
add
sub
seto
sbb
ja
xor
mov
mov
cld
adc
push
push
sbb
aas
xchg
dec
add
xchg
stc
ss
insb
inc
dec
ret
mov
sbb
lock
cmp
or
add
das
pusha
ret
push
pop
jae
rclb
mov
push
es
insl
pop
je
pop
repnz
sarb
into
bound
push
clc
cmpsl
sbb
jmp
stos
test
pop
jno
push
and
es
push
stos
loopne
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
les
fisubrl
pop
ret
and
and
icebp
outsl
add
insl
cmp
dec
xchg
arpl
prefetchwt1
or
scas
cmp
and
testl
rcrl
mov
jne
stos
jbe
sbb
add
inc
jmp
push
mov
mov
call
mov
imul
out
popa
fsubrl
inc
in
and
or
cmp
lods
jp
add
pushf
sbb
mov
push
push
jmp
ljmp
inc
adc
imul
and
cmp
cltd
mov
mov
loope
add
les
in
out
adc
dec
push
dec
adc
enter
ret
in
int
lds
rcrl
daa
ds
int
push
push
xor
pop
in
inc
cltd
scas
shrb
stc
ljmp
mov
jo
xchg
icebp
mov
and
xchg
std
imul
add
push
inc
and
out
sarb
pop
ret
or
ret
add
fildll
adc
mov
inc
inc
xor
ljmp
fwait
push
imul
sbbb
out
pop
xchg
mov
and
inc
repz
daa
int3
test
and
sub
adc
popf
ljmp
loopne
mul
js
repz
adc
jnp
gs
stos
fnstsw
adc
inc
dec
sub
xchg
aam
bound
mov
jmp
or
xor
mov
adc
lock
inc
dec
xor
push
ret
dec
in
inc
stc
inc
clc
or
mov
or
repnz
pop
daa
xchg
int
iret
aas
mov
push
dec
push
mov
stc
mov
fisubl
cmp
jp
sbb
push
repnz
iret
inc
and
dec
imul
xor
pop
je
pop
je
pusha
mov
xchg
sub
int
sbb
sbbl
sub
movsl
aas
pop
jmp
in
xchg
mul
or
mov
pop
mov
xchg
roll
mov
call
mov
repz
in
lret
loope
xchg
or
lock
int3
push
lret
xchg
das
inc
ret
xchg
mov
arpl
inc
hlt
jge
inc
fdivs
mov
arpl
arpl
dec
dec
les
cmc
xor
mov
insb
cmp
mov
pop
mov
or
dec
test
ret
test
push
cmp
jno
fdiv
mov
shl
push
xor
out
popa
ss
mov
pop
sbb
imul
mov
pushf
leave
loope
std
lds
push
ss
adc
pop
icebp
loope
loopne
lds
imul
sub
mov
xchg
test
lret
pop
hlt
inc
lret
add
xor
mov
out
push
xchg
fsub
xor
lret
testb
les
sub
mov
and
inc
shrb
push
aad
mov
pusha
or
pop
add
shll
jns
or
xchg
push
cltd
push
lret
pop
push
adcb
test
jl
dec
dec
js
ds
add
shll
inc
mov
cmp
testl
inc
sub
sahf
jmp
fstpt
mov
push
cmp
adc
dec
mov
fstp
orb
iret
cltd
push
es
fildll
ja
icebp
cmpsl
mov
stos
xor
sub
les
lods
pop
inc
sub
sbb
adc
gs
pop
sub
mov
mov
outsl
das
sarb
push
into
jne
loopne
cmp
sbb
outsl
mov
cmp
int3
ret
test
dec
xlat
imul
sub
cmp
in
fdivrs
imul
rcl
jge
push
out
or
dec
test
imull
jbe
mov
adc
xchg
add
insl
enter
data16
addb
and
cmp
dec
out
xor
adc
bound
add
jae
incb
sahf
inc
xor
dec
xchg
push
inc
xlat
stc
cmp
dec
adc
popa
sbbl
loop
je
push
push
sbb
mov
cltd
sti
cmpsb
fists
adc
imul
ss
and
ss
imul
add
xchg
mov
cmp
je
and
push
push
in
and
cwtl
pop
and
jmp
lcall
mov
mov
mov
inc
and
movsl
or
lahf
dec
bound
ds
pop
aad
or
rorb
pushf
mov
sahf
aas
xchg
inc
cmp
test
adc
repnz
in
mov
cltd
aas
fs
je
loop
xor
push
gs
pop
xchg
ret
pop
xchg
dec
pop
mov
cld
ljmp
push
push
push
xchg
inc
ja
fldcw
inc
shlb
pop
lea
cmp
movsb
ficompl
xchg
in
push
add
mov
dec
mov
adc
fisubrs
xchg
imul
icebp
rcrb
adc
jle
cmpb
arpl
mov
cmp
xchg
rcll
or
sahf
fnstenv
leave
rdtsc
jg
xor
mov
pop
push
mov
xlat
lods
test
sub
mulb
cmp
add
fistpl
dec
int3
adc
sub
mov
popf
and
xchg
std
insl
mov
xchg
adc
sub
mov
lods
test
or
into
push
push
mov
and
xchg
data16
ret
and
and
aas
pop
js
movsb
mov
sbb
dec
add
repnz
stos
ja
add
iret
and
sbb
and
mov
clc
leave
push
ret
inc
cli
scas
mov
repz
mov
adc
mov
jnp
cmp
mov
out
xchg
sub
pop
push
mov
xor
mov
or
or
cld
push
outsl
andl
sbb
jnp
inc
mov
mov
pop
or
and
mov
mov
arpl
pop
mov
or
mov
mov
cli
pushf
pop
popa
sbb
mov
sbb
fisubrs
lret
dec
cmp
jmp
fists
addb
cmp
push
cmpsb
popa
neg
push
aad
shll
sbb
mov
out
pusha
imul
and
js
mov
jmp
jp
mov
es
popf
in
adc
fcmovnbe
fstpt
test
xor
shl
inc
sub
addb
mov
sbb
lret
xchg
fidivrl
gs
dec
ret
mov
sarb
loopne
and
inc
aaa
loope
adc
test
push
aaa
or
sarl
xchg
inc
xchg
repz
inc
xlat
aaa
cmpsb
fs
lahf
das
addl
outsl
mov
mov
sub
fsubrs
jnp
lcall
popa
cmp
xor
add
int3
insb
mov
xor
pmaddwd
sub
enter
in
dec
pop
xlat
push
adc
dec
push
icebp
into
or
aam
ret
xor
cmpl
rcl
push
jno
inc
rclb
xchg
outsl
and
and
lret
inc
jns
mov
adcl
popf
idivb
inc
lahf
rcrl
pop
aam
sub
je
mov
cli
inc
sub
ret
dec
inc
shl
pop
and
inc
sub
sbb
movsl
stc
and
add
fisttpll
mov
decl
dec
fs
test
mov
data16
in
push
data16
mov
outsl
add
adc
cld
leave
dec
jmp
das
dec
cmpb
mov
fsubp
dec
test
xor
orb
lahf
int
aad
jns
addr16
jl
mov
ss
sub
push
dec
repz
and
cs
aam
adc
mov
mov
dec
insl
out
ljmp
lret
aad
mov
jp
lea
scas
popf
mov
push
addr16
inc
insl
adc
arpl
mov
setns
test
repnz
rcr
mov
add
adc
mov
movl
leave
xchg
leave
dec
fldl
out
sbb
jne
adc
mov
ret
fs
jp
push
dec
sub
add
adc
mov
nop
aaa
jne
hlt
les
into
pop
outsb
pop
push
jne
or
lretw
enter
inc
xchg
dec
mov
pop
lds
and
movsl
dec
aas
push
arpl
xor
mov
dec
sarb
inc
pop
or
pop
sti
jno
lods
in
or
rorl
jno
inc
sbb
mov
icebp
shll
mov
xor
jno
xor
and
cs
lcall
outsl
add
loop
xchg
jae
or
add
adc
mov
fistps
inc
dec
mov
add
in
mov
lods
popa
xchg
pop
hlt
call
mov
jge
mov
push
and
nop
add
push
mov
je
sbb
add
add
mov
fmuls
cmc
es
mov
xchg
pop
out
jmp
dec
inc
fiadds
jns
push
sub
sti
fwait
imulb
out
fs
or
add
lret
lea
push
or
jns
cmc
push
ss
jns
fdiv
test
lahf
enter
mov
adc
mov
inc
mov
inc
je
sub
cmpxchg
xlat
shlb
cmp
adc
mov
shr
imul
pop
mov
mov
pop
or
test
dec
inc
subl
mov
fwait
add
jne
ret
pusha
std
dec
mov
adc
out
mov
mov
mov
xlat
adc
inc
pop
mov
push
call
and
lods
dec
jnp
inc
std
movsl
inc
cmp
xchg
fst
inc
loope
in
xlat
inc
popf
push
daa
sti
test
sub
dec
orl
arpl
mov
adc
test
mov
movsb
push
popa
sbb
mov
mov
xor
or
fwait
inc
push
jecxz
jne
or
mov
aad
insb
mov
pushf
cmpsl
int3
xorl
mov
mov
pushf
loope
imul
je
jle
jge
in
and
sbb
adc
mov
and
stos
mov
lret
push
pop
push
xor
aam
or
add
add
lds
sbb
adc
xor
rcl
xor
push
and
popf
push
push
inc
xchg
jne
fs
add
adc
add
movsb
pop
fildl
jmp
std
cmp
rcl
test
fptan
cmp
or
adc
fcompl
inc
cmpsb
lret
test
pop
fs
push
or
or
call
das
push
out
and
cmp
mov
movsb
xor
lret
insb
bound
popa
popa
test
jge
stos
xor
pop
xchg
icebp
jns
jle
loopne
push
sbb
dec
int
stc
insb
inc
out
lea
cmpsb
inc
mov
stos
xor
ja
adc
mov
sqrtps
fistpll
add
lds
lds
stc
sbbl
bound
aam
rcrb
mov
mov
sti
out
push
mov
mov
pop
test
or
push
ret
ss
xor
enter
add
xchg
or
mov
and
leave
mov
cmp
ljmp
xor
ja
xchg
sahf
call
ja
stc
inc
popa
mov
and
test
fcomip
mov
outsb
jnp
arpl
cmpsb
mov
repz
rorb
sbb
jno
pop
lods
je
iret
es
sbb
lods
xchg
pop
negl
repz
sub
sbb
loop
and
aas
test
sub
dec
jmp
or
ja
sub
int3
adc
scas
adc
sub
and
fstps
loop
outsb
add
mov
out
popa
lahf
hlt
adc
jmp
jo
int3
stos
xchg
mov
mov
mov
in
and
push
insl
out
push
inc
js
xor
ds
add
pushf
xor
out
mov
mov
cld
sbb
sbb
outsb
sahf
je
push
xchg
test
mov
jmp
push
jb
xor
pop
cmp
mov
call
inc
inc
sub
inc
mov
mov
adc
lds
pop
adc
sbb
mov
adc
pop
lret
inc
cmp
call
shlb
inc
jno
push
out
pop
jae
jne
inc
outsb
sbbl
repnz
popf
popa
ja
lea
xor
movsl
cmp
and
test
test
je
dec
pop
push
testl
addb
loope,pt
lret
fisubrs
xchg
fsubl
mov
adc
je
inc
mov
fdivl
icebp
mov
or
loopne
dec
pop
sub
subl
repnz
mov
imul
inc
stos
mov
cmpsl
mov
xor
add
push
jbe
push
push
cs
push
mov
xchg
and
fisubrl
int3
icebp
push
lock
and
scas
xchg
lret
mov
mov
sbb
aaa
mov
pop
sbb
sbb
in
popl
sbb
inc
leave
hlt
adc
inc
test
iret
and
sub
mov
or
jl
loopne
add
int
out
mov
inc
pop
pop
in
sub
mov
push
popa
cmp
pop
ja
rcll
jae
repnz
xchg
xchg
cmp
push
xor
ret
mov
out
or
lahf
mov
loope
dec
adc
icebp
cltd
das
jge
push
int3
ret
es
mov
jle
adc
xchg
sub
dec
arpl
out
ret
fwait
push
jmp
sbb
cmpsb
push
inc
and
rclb
insb
loope
fcmovb
popa
arpl
push
imul
add
jnp
dec
dec
fidivl
in
xor
out
inc
stos
dec
repnz
mov
push
add
sub
sahf
mov
in
dec
aad
and
sub
inc
mov
lret
dec
pop
sub
and
add
sbb
nop
stos
jmp
sub
cs
cmc
jns
jne
arpl
cmp
test
sub
cmp
lods
inc
pusha
arpl
neg
call
fs
xor
adc
clc
in
or
aam
sbb
sub
es
mov
adc
xor
dec
mov
inc
test
sbb
or
push
or
push
add
fwait
push
loopne
iret
push
mov
xchg
sub
lock
hlt
je
mov
ja
jle
push
call
rorb
sbb
call
pop
test
mov
add
mov
jg
push
jno
jae
js
aad
xchg
fidivrl
mov
es
aaa
xchg
es
rcrb
and
jl
xchg
pop
cmp
cmp
sarl
js
pop
or
imul
bound
fdivs
loopne
ficoms
xlat
mov
mov
jnp
aas
sbb
les
dec
daa
or
jae
cmp
fmul
cmpsl
in
push
and
mov
pop
or
xchg
cmpl
pop
inc
xchg
aam
push
jg
or
inc
sbb
je
adc
cmp
push
xchg
scas
stos
into
outsl
dec
adc
dec
sahf
stos
or
cmp
fcmovnu
mov
out
out
lods
push
add
xchg
mov
call
test
sub
jnp
dec
or
shlb
xchg
push
push
leave
add
stc
insl
pop
jbe
or
imul
mov
lret
or
daa
jno
adc
push
pop
shrb
pop
xchg
aas
orl
jl
nop
sahf
or
ljmp
sbb
sub
xchg
scas
fcom
sub
ret
inc
xor
adc
push
and
or
fs
repnz
int
imul
pop
les
mov
aaa
adc
stos
mov
jecxz
enter
ret
cmp
loope
dec
jbe
xor
sbb
and
out
xor
das
push
mov
les
icebp
cli
movsl
xchg
adc
mov
jecxz
movsl
xor
out
mov
inc
arpl
or
pusha
dec
shlb
pushf
ja
sti
pop
in
xor
clc
fldenv
push
loopne
data16
mov
je
mov
lock
dec
stc
jae
ds
adc
int3
fbstp
add
stos
jmp
push
add
mov
jbe
dec
push
dec
push
xor
mov
jnp
fisubl
xchg
push
sti
shrb
fsub
lods
mov
lret
dec
rclb
cmp
lea
stos
or
xor
aam
lea
bound
jge
or
leave
xor
sub
insb
jl
cmp
sub
push
fwait
lret
adcl
and
or
push
pop
sbb
jmp
jmp
addl
sbb
mov
ja
mov
aad
or
inc
es
ret
push
pop
add
adc
ljmp
jae
lods
xor
divl
idiv
or
popa
sub
inc
push
insb
sub
mov
lock
or
mov
mov
push
enter
adc
repz
leave
xchg
rcll
mov
xchg
jg
mov
cmp
ljmp
stos
xor
mov
stc
adc
shll
mov
inc
inc
clc
aas
inc
or
jno
xchg
fwait
push
cmp
mov
dec
pop
sub
jno
mov
scas
mov
cmp
scas
or
mov
ffreep
in
iret
notb
mov
leave
sbb
movsl
cmp
popa
jmp
mov
leave
cmpsl
insl
fistl
mov
aas
rol
pop
cmc
dec
push
adc
ret
imul
xchg
js
cmpsl
add
stos
jne
or
pop
add
mov
cmp
xchg
sbb
dec
ss
xchg
mov
int3
push
xchg
insb
push
jecxz
jg
pusha
pusha
in
cmp
xchg
pop
jno
or
xchg
cmp
je
xlat
jmp
fcomps
fs
bound
cmpsb
add
jo
push
sbb
icebp
subb
dec
push
ss
sar
mov
inc
sbb
divl
imul
cs
cmp
lcall
loop
xchg
mov
push
dec
xchg
mov
push
dec
shll
adc
in
in
fstpl
push
in
pop
fwait
xchg
mov
and
inc
inc
dec
aaa
xor
xor
insl
movsl
arpl
ljmp
jl
aaa
jg
pop
insb
aad
lcall
adc
sbb
mov
jmp
lods
cs
jmp
nop
scas
push
shl
addr16
push
mov
pop
push
fwait
lret
pop
jo
ds
cmp
adc
cmp
leave
das
sub
cli
sub
add
sub
mov
test
xchg
stc
outsb
fdivl
jo
adcl
test
pusha
cmp
ret
call
xor
dec
mov
cmp
jmp
push
pop
out
aaa
push
mov
test
mov
fwait
sbb
cmc
sub
mov
inc
mov
xchg
and
xorb
imul
lds
mov
mov
sbb
jge
jnp
inc
mov
dec
and
push
pop
mov
imul
push
lods
in
mov
push
dec
sub
daa
push
jbe
jbe
pop
cmpsl
cmc
mov
adc
ret
mov
sub
je,pt
ret
mov
int3
push
xchg
add
dec
movsb
xchg
push
cmp
fcom
rorl
cmp
lea
inc
jns
imul
sbb
mov
arpl
mov
xor
pop
pop
test
add
jbe
repz
xchg
inc
cli
mov
inc
aad
and
jmp
xor
or
mov
dec
popf
shll
jg
shll
jp
in
sbbl
sbb
outsb
and
shrb
jno
loopne
mov
mov
inc
jmp
bound
je
shlb
or
pop
andb
das
mov
sub
mov
std
adc
dec
frstor
add
inc
cmp
sbb
jge
add
sti
xchg
ja
ljmp
pop
in
mov
and
xchg
ret
mov
ret
stos
loop
push
cvtdq2ps
push
bound
mov
fisubrl
iret
fsubs
outsl
addr16
jno
fstps
addb
mov
loopne
mov
jp
cmp
cld
scas
or
mov
push
mov
pop
data16
fisubs
in
push
test
dec
outsb
shll
fbld
and
fsubl
mov
mov
shrl
jp
mov
repz
pop
in
dec
mov
ror
cltd
inc
vmovaps
xchg
mov
fists
arpl
or
dec
add
rolb
pavgw
aaa
fsubrs
dec
popa
mov
sar
sti
clc
call
mov
mov
mov
fisubl
cwtl
cltd
push
fadd
push
rcr
lea
cmp
fdivp
inc
xor
inc
aad
jnp
mov
xchg
ljmp
out
adc
into
addl
cmpsb
fbstp
push
fldt
adc
shlb
ds
mov
icebp
adc
cmp
lods
sub
dec
out
fbld
push
ja
movsb
imul
jae
movsb
out
mov
and
pop
insb
jecxz
js
and
test
in
fists
mov
fistps
xchg
lret
jno
pop
xchg
push
lods
pop
mov
enter
sub
daa
dec
cltd
cwtl
pop
insl
xchg
xchg
sbb
dec
out
loope
lock
pusha
push
fnstenv
leave
andb
nop
sti
jno
je
push
in
xchg
push
sub
shll
ret
sbb
rorl
aas
pop
popf
js
pop
jb
or
xchg
adc
repz
add
mov
lods
ds
pop
imul
test
pop
out
aaa
mov
popf
cmc
sbb
push
jg
inc
dec
in
scas
xor
cwtl
mov
lds
outsb
xor
add
rep
aad
movsb
in
sub
lock
jg
sbb
rorl
repz
mov
stos
adc
lcall
jg
sub
and
push
sub
loope
add
jmp
lock
lea
jl
gs
xchg
dec
dec
sbb
dec
xchg
sahf
in
add
divl
lock
outsl
mov
xchg
orl
cmpsb
mov
pop
cmc
and
push
out
pop
xor
push
or
mov
ficomps
add
mov
add
mov
push
cltd
cmpsl
imul
xchg
in
xchg
add
inc
into
icebp
inc
pop
mov
jl
cmp
jle
js
fimull
xlat
inc
in
jbe
arpl
push
mov
xor
adc
pop
mov
outsb
js
call
xor
clc
dec
fnstcw
sbb
and
xchg
add
fsubrl
fcoms
int3
fdivrl
jmp
jno
inc
mov
lods
js
test
daa
xchg
dec
ljmp
test
test
lret
jge
sbb
leave
xor
mov
iret
xchg
jmp
stos
lret
rcll
shrl
push
inc
sti
cmpsl
ret
and
lock
and
ds
jecxz
mov
lahf
push
add
leave
punpckldq
xchg
roll
dec
les
shll
pop
cli
jle
mov
jo
repz
fistl
jne
pop
hlt
add
clc
sub
push
jne
add
inc
stos
pushl
sbb
mov
push
lock
adc
mov
cmp
mov
or
cmpl
fs
pop
repz
jo
pop
roll
movsl
out
das
sbb
xchg
pop
pop
mov
mov
in
add
push
xor
test
adc
kmovb
aaa
outsb
lcall
in
fnstenv
cmpsb
lods
xchg
jo
enter
xchg
jge
mov
mov
dec
into
popf
mov
stos
adc
sub
xchg
xor
dec
sub
push
repnz
sub
nop
push
add
mov
dec
and
jg
mov
ljmp
xor
inc
addr16
pop
xor
mov
into
mov
cmp
mov
jmp
pop
call
js
cli
mov
pop
xchg
xchg
mov
pop
mov
dec
push
jbe
hlt
es
xchg
xchg
add
mov
add
rolb
dec
and
add
enter
inc
xchg
in
push
push
data16
mov
cmp
imul
sbbb
sub
and
hlt
subl
xchg
movb
stos
std
cmp
ficoms
pop
add
pop
xor
daa
adc
or
jnp
sub
gs
push
out
cwtl
es
mov
outsl
xchg
mov
jae
mov
or
pop
or
sub
les
mov
mov
add
gs
push
clc
push
cmp
ss
in
cmp
mov
xor
loopne
or
fists
fisubrl
int
into
jne
mov
out
mov
add
cmp
fcmovb
mov
addb
test
and
sub
xchg
sbb
jae
fs
add
test
stos
jno
bound
push
and
push
and
int3
jg
xchg
and
sbb
cmpsl
jmp
pop
je
das
inc
cmpsb
fs
dec
sbb
ror
aad
sbb
pop
mov
aaa
pop
cmp
cltd
xchg
pop
adc
js
xor
rcrb
mov
stc
loopne
push
lods
pop
pusha
bound
lds
and
jecxz
mov
sbb
jnp
sbb
xchg
pop
icebp
loope
lret
aad
mov
lods
push
bound
mov
test
push
push
out
xlat
negb
lods
xor
pop
mov
mov
addr16
fdivl
pop
cmp
push
nop
jae
fninit
pop
inc
push
adc
out
lahf
mov
adc
repnz
xor
enter
push
es
push
out
es
nop
movsb
mov
pop
add
mov
pop
sbb
hlt
pop
sti
adc
mov
jo
repz
push
mov
sbb
or
xor
je
pop
xchg
ficoms
dec
xchg
mov
aaa
xchg
lret
les
mov
sbb
push
int3
xor
aas
fcoms
and
mov
or
mov
push
repz
in
test
push
outsl
daa
addr16
and
jns
inc
and
frstor
cwtl
push
mov
mov
btr
add
sbb
idiv
push
andl
push
fsubrl
arpl
pop
or
fstps
push
or
ret
inc
je
sbb
adc
push
mov
pop
xlat
mov
xchg
inc
inc
adcl
push
push
in
inc
cmp
into
sbb
cmpsb
sbb
mov
addr16
sti
sub
js
enter
into
rcrb
jmp
cmpl
pop
in
adc
ja
inc
call
cli
sub
scas
mov
fbld
jp
lock
inc
mov
cld
pushf
ss
shl
out
push
ja
dec
pop
cmp
loop
xor
scas
fwait
sub
ja
mov
pop
popl
push
loope
rcr
pop
dec
pop
lds
mov
pop
inc
push
jge
and
idivl
pop
pop
out
je
push
adc
xchg
push
mov
fsubrp
pop
call
ficoms
pop
xchg
or
or
or
fldl
inc
shlb
out
imul
movsl
and
cmpsl
mov
xchg
jg
ja
sbb
push
xchg
adc
cmc
adc
inc
popa
sbb
cmp
rclb
dec
sbb
out
cmpl
cmp
dec
data16
push
into
xchg
add
push
mov
mov
jecxz
mov
fsts
mov
clc
pop
cwtl
or
mov
mov
out
imul
ret
sar
jl
fistpll
xchg
inc
sub
insb
js
add
pop
adc
xor
lea
fists
test
mov
sahf
mov
and
cld
mov
dec
inc
push
call
movsl
je
mov
sbb
shlb
out
insb
in
jge
dec
fsubs
sbb
inc
sub
dec
ret
repz
repnz
out
push
lret
lret
rorl
cmp
sub
jb
cmc
sarb
pop
add
pop
imul
cmp
jecxz
repnz
sub
fsubrs
jae
mov
pop
xor
popa
dec
insb
mov
leave
add
rcll
repnz
sub
flds
cmpb
test
ret
jns
sbb
ja
in
jle
add
jbe
in
jns
pop
push
outsb
es
push
imul
ficompl
dec
es
inc
xor
ljmp
hlt
jae
sbb
push
into
push
cmc
enter
cmp
pusha
or
mov
pop
in
adc
push
sbb
inc
cld
xor
into
push
mov
jge
jecxz
fistpll
int
mov
fisttps
mov
cmp
jnp
mov
in
mov
stos
sbb
ja
or
or
icebp
aam
push
push
call
lahf
cmpsb
cmp
push
lcall
andb
add
negb
pop
rcl
iret
sub
pop
stos
mov
and
outsl
stc
hlt
orb
fpatan
mov
nop
in
xor
rorb
pop
pop
adc
cwtl
jns
or
dec
or
dec
and
es
xlat
mov
push
out
pop
into
nop
mov
push
les
cmp
movsb
sahf
mov
mov
and
jecxz
iret
ret
fidivrs
push
sub
aam
and
and
int3
lahf
mov
dec
test
and
jecxz
insl
lahf
and
pop
jp
dec
cmp
xor
inc
adc
testb
ret
pop
aam
es
jmp
xchg
mov
xor
in
imul
push
pop
nop
xchg
jmp
dec
ret
fbld
mov
stos
mov
pushf
fildl
pop
cmp
xor
fisubl
dec
sub
stos
and
inc
ljmp
rcl
sahf
mov
pop
sub
into
enter
popa
lods
and
dec
add
dec
fsubrs
mov
mov
sbb
lods
sub
xchg
popa
ror
and
sti
or
inc
mov
mov
jns
movsb
stos
or
xchg
les
out
pop
mov
lods
adc
mov
sub
shll
pop
adc
fdivl
add
lret
sbb
rolb
fiadds
sub
sti
out
cmp
lret
pop
mov
rcl
lahf
mov
lods
pop
fdivrs
xchg
mov
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
pop
sbb
adc
jp
or
pop
or
fistpll
and
loope
mov
subb
lds
mov
cli
mov
xchg
or
hlt
icebp
jnp
lahf
int3
push
fs
jmp
push
aad
out
js
mov
jecxz
sbbl
pop
lock
mov
das
jno
adc
in
and
mov
jecxz
xchg
iret
and
cmp
idivb
push
add
je
scas
dec
testl
mov
in
mov
adc
into
outsb
nop
clc
cmp
pop
cmpsl
push
or
rclb
pop
push
aad
lret
or
xchg
adcl
mov
pop
push
test
mov
mov
ret
or
aam
gs
insb
int3
mov
sbb
shl
ja
int3
mov
add
jb
lods
loop
push
rcr
xchg
stos
fmul
sarb
imul
lret
sub
out
jg
add
mov
cmp
mov
daa
into
fs
push
movsl
mov
add
incb
std
sbb
loope
xchg
push
ljmp
xor
imul
fs
sar
jle
and
leave
mov
cmp
std
mov
cltd
cmp
pop
mov
or
test
and
ss
ret
pop
das
stc
inc
or
idivb
mov
jnp
or
sub
call
in
dec
mov
pop
mov
in
add
push
mov
aad
jae
or
dec
int3
fnstcw
fldl
in
inc
sarl
inc
das
int3
jl
pop
les
jae
scas
fnstcw
mov
dec
push
cmpl
sub
sub
fidivrs
dec
inc
fidivrl
enter
dec
in
jno
push
inc
scas
sbb
sbb
push
cld
sbb
push
push
imul
cwtl
insb
push
sbb
jge
and
jle
out
mov
mov
or
sub
cli
mov
cwtl
sub
xor
jp
mov
xor
test
sub
idivb
mov
adc
call
fisttpl
fs
shl
loope
in
adcb
jnp
xchg
cs
scas
push
ja
mov
add
cmp
push
repnz
imul
dec
mov
pop
mov
and
sbb
inc
xor
scas
hlt
std
xchg
mov
cmp
pop
push
movsb
test
jae
outsl
mov
adc
fs
pop
cmpsl
stc
push
lcall
jns
inc
mov
loop
pop
scas
or
bound
mov
lds
aas
arpl
enter
pushf
pop
mov
in
out
imul
loop
test
leave
mov
insl
mov
loopne
mov
jecxz
insb
jb
in
in
std
add
daa
or
out
adc
cmpsb
fiaddl
add
push
or
cltd
outsl
pop
imul
icebp
popf
loope
sahf
sbb
shlb
ds
ficoml
adc
push
add
data16
mov
ja
movsl
pop
or
repz
ss
jns
xor
add
inc
lea
sbb
xchg
sub
jae
cmp
je
mov
test
sub
pop
adc
cwtl
repnz
jge
mov
sbb
cmp
sbb
ljmp
cmp
push
pcmpeqw
aaa
es
mov
push
xlat
jmp
rcll
mov
sbb
nop
lret
aaa
imul
lcall
xchg
sub
rep
cmp
pop
sahf
jecxz
mov
push
dec
dec
cmpsl
mov
or
pop
loope
or
pop
jbe
inc
xor
push
subb
clc
das
lds
mov
dec
dec
inc
inc
add
fiadds
ljmp
cvtpi2ps
leave
leave
push
inc
pop
orl
inc
gs
cld
sarl
mov
nop
int3
in
lea
or
cvtps2pi
cmp
insb
jnp
aaa
mov
movsb
sarb
xlat
pop
sti
ss
mov
mov
std
subl
mov
es
mov
aam
insb
aas
mov
inc
sub
leave
jmp
jae
mov
xlat
sbb
jmp
adc
xor
and
jp
adc
jp
mov
pop
jns
shrb
sarb
xor
daa
daa
cmp
pusha
int3
pop
outsl
and
mov
je
jb
xchg
push
sub
popa
shlb
mov
aam
push
pop
aas
cmp
mov
inc
gs
cld
adc
popf
pop
into
adc
xor
ficoml
cld
pop
hlt
push
pop
sub
jbe
cmp
inc
adc
ret
out
out
mov
das
sub
sahf
gs
mov
fwait
outsb
add
fistpl
in
xor
push
out
sahf
das
sub
ss
je
mov
lods
cmp
mov
mov
mov
cltd
adc
mov
sub
push
push
pop
fwait
popf
and
inc
stos
xor
cmpsl
enter
bound
imulb
sub
dec
xchg
adc
and
xchg
out
js
jle
addl
jge
scas
xor
adc
push
call
or
push
pop
dec
push
jge
icebp
xor
mov
mov
repz
jl
imul
jge
inc
and
xchg
mov
and
xlat
daa
jbe
in
hlt
adc
loop
std
xchg
aam
daa
iret
inc
dec
pop
and
sub
dec
cmp
loop
sbb
sub
mov
mov
cmc
inc
mov
cmp
cmp
adc
dec
stc
push
scas
mov
leave
aaa
ds
in
pop
or
adc
and
pop
jecxz
xlat
mov
in
push
adc
scas
lahf
or
lcall
jp
lea
testl
imul
jno
ja
lods
mov
fs
mov
dec
push
jecxz
sub
rolb
mov
xor
sahf
cmpsb
in
pop
mov
sbb
mov
push
cli
jle
lret
jb
cmp
add
fnstsw
cmc
pop
and
clc
push
adc
jnp
stc
inc
pop
sub
mov
pushf
inc
cmp
pop
inc
jnp
pop
aam
xor
rolb
mov
push
fmuls
icebp
cwtl
fsubr
sbb
je
mov
dec
rcrl
dec
adc
adc
xchg
into
pop
lea
outsb
mov
and
lock
arpl
sub
mov
cmpsb
sahf
out
jae
bound
push
das
lock
inc
mov
insl
or
out
sarb
sub
mov
cli
xchg
mov
ret
cmp
mov
mov
and
xchg
bound
into
addl
fcomip
minps
aam
inc
aam
out
sub
fdivl
loope
mov
xchg
or
nop
lahf
addr16
xor
sbb
mov
lret
jle
fdiv
in
sub
pop
stos
in
mov
push
or
icebp
in
inc
out
mov
xchg
mov
xchg
pop
cwtl
sbb
sbb
inc
cmpl
ja
loop
lock
xor
aam
pop
inc
xchg
js
stc
add
sti
lds
repnz
sbbb
dec
pop
adc
ljmp
push
adc
stc
jns
push
mov
in
xchg
fcoms
mov
pop
add
std
cld
sub
pop
loope
gs
rclb
in
sbb
jno
divb
test
xor
jne
aam
rclb
bound
mov
push
push
nop
sbb
inc
fisubl
add
mov
movsl
js
inc
or
jp
xorb
je
or
xchg
popa
and
push
ret
xor
jmp
xor
sub
mov
sub
sbb
mov
add
daa
test
popl
js
shll
inc
pfnacc
sbb
hlt
cmp
sub
sbb
daa
cmp
push
sub
sarl
adc
mov
mov
adc
fsts
pop
sbb
cltd
pop
pusha
pop
push
lea
in
pop
mov
test
mulb
or
and
loope
rorl
sbb
or
jae
mov
leave
dec
mov
test
or
xor
cli
aas
or
mov
inc
cld
dec
mov
or
movsl
arpl
in
je
cmp
xchg
mov
popa
dec
inc
adc
jno
mov
xor
les
pop
cmp
mov
mov
sbb
or
aaa
push
iret
inc
xchg
insl
xlat
inc
cld
push
mov
add
cmp
arpl
push
sub
cmp
dec
mov
jg
ret
xchg
addr16
mov
xlat
movsl
int3
mov
js
push
rcr
xor
xchg
mov
push
cmp
into
imul
inc
cmp
xlat
in
pop
stos
fisubl
xchg
sub
jecxz
std
mov
mov
inc
lret
cmp
cmp
negb
into
dec
movsb
out
popf
sahf
das
xlat
mov
or
call
dec
mov
or
addl
inc
int
adc
iret
inc
mov
sbb
or
push
xchg
mov
ljmp
mov
jmp
inc
xchg
or
mov
stos
cmp
fcomip
sub
mov
int3
test
pop
push
sahf
add
aaa
xor
mov
push
mov
sub
xor
adc
pandn
sub
push
fisubl
cmp
and
pop
sub
xchg
mov
sub
sbb
ret
stos
popa
xor
sub
dec
xor
and
rolb
jecxz
add
push
mov
xor
aas
dec
push
es
mov
testl
sbb
mov
inc
scas
gs
push
xor
rolb
sar
dec
pop
add
loop
mov
sbb
fistl
je
imul
sahf
cmp
xlat
push
fsub
jno
inc
test
movsb
mov
push
or
scas
fsubr
pusha
xlat
popa
les
enter
sarb
mov
sbb
jmp
lret
hlt
std
or
add
adc
fcomi
imul
mov
add
adc
or
out
sbb
or
mov
sub
adc
movsb
and
fisttpl
mov
ret
gs
or
pop
or
dec
lods
push
call
push
ljmp
add
cmp
rolb
jge
lods
pop
push
outsl
lea
adc
rcrl
call
imul
adc
in
push
push
cwtl
fldenv
add
xchg
mov
shll
stos
and
add
pusha
and
repnz
or
repnz
pop
add
fst
mov
fwait
ljmp
repnz
mov
mov
adc
mov
cmc
clc
das
loope
add
mov
pop
and
mov
push
mov
lods
adcl
pop
test
aas
es
popf
fcom
adcl
int
test
jl
neg
fwait
add
push
and
lock
cmp
pop
int
xchg
mov
and
or
gs
sub
pop
into
or
xchg
adc
dec
adc
imul
jle
mov
inc
cmp
loop
std
imul
pusha
icebp
lods
repz
cmp
ret
lea
loopne
lret
dec
insb
mov
loope
push
xacquire
pop
push
cmp
inc
xorb
js
lret
fsubrs
dec
mov
dec
nop
dec
mov
inc
mov
cmpsb
inc
scas
jecxz
shl
popa
lea
pop
inc
jmp
flds
sbb
pusha
arpl
scas
xor
jno
out
cmp
dec
dec
inc
mov
dec
out
adc
pop
fiadds
push
cmpl
cmpsw
inc
negb
pop
scas
sbb
call
mov
dec
insl
cmp
js
fnstsw
jo
outsb
mov
xor
pushf
addr16
loope
jmp
pop
push
xchg
lea
dec
mov
inc
pop
push
jle
adc
incb
or
push
in
stos
xor
mov
inc
dec
sbbl
in
and
inc
jnp
int
and
and
lret
mov
dec
xchg
bound
arpl
and
mov
pop
icebp
outsl
imul
hlt
jno
addl
addr16
mov
adc
adc
stos
fnsave
fsub
lds
mov
pop
inc
push
xchg
inc
stos
mov
lret
shrb
xchg
lock
and
mov
sbb
leave
loopne
jmp
add
push
test
cld
mov
dec
push
aaa
lcall
xchg
mov
cmp
dec
dec
sahf
xchg
hlt
or
and
sub
add
and
std
pop
stos
mov
and
mov
cmpsb
mov
mov
jg
jg
inc
dec
lret
pop
cmpsb
shl
jl
mov
jb
push
hlt
test
sub
cmp
sub
jae
das
fs
cli
jae
dec
cwtl
jno
mov
sub
std
mov
stc
rorb
xor
sbb
movb
and
std
dec
ret
lods
fstl
fnstsw
mov
ret
xor
aad
fs
inc
out
js
leave
adc
mov
out
out
push
je
shrb
aas
stos
or
adc
movsw
mov
test
push
in
push
pop
xchg
mov
pop
cmc
sub
les
xchg
pusha
call
push
or
lods
addl
mov
push
dec
aas
repz
jne
movsb
add
data16
sub
xor
push
inc
and
aaa
fisttpll
xlat
and
icebp
fwait
adc
mov
addr16
in
movb
ret
into
push
xchg
mov
into
xor
mov
cmp
cmp
rorl
std
scas
repz
pop
lds
fstpl
cli
bswap
mov
sti
or
mov
dec
es
adc
xor
mov
clc
pop
enter
cmp
sbb
xor
sub
push
outsl
in
pop
testb
sbb
and
jno
int3
push
inc
shll
jp
cmp
dec
fldenv
and
loop
pop
mov
fmull
lods
aam
push
in
incl
leave
fwait
jno
jle
dec
pusha
mov
inc
push
fdiv
pop
mov
in
addb
imul
and
and
pop
stos
sub
imul
repnz
lret
mov
jle
xchg
jne
ror
add
lds
dec
repnz
sub
xor
arpl
mov
dec
insb
addr16
sarb
adc
les
fcompl
add
pop
testb
sub
lds
push
dec
adc
scas
xchg
test
mov
ds
pusha
movsl
loope
insl
dec
out
cmc
mulb
scas
push
cltd
rol
call
pop
push
icebp
imul
pop
jb
cmpsb
frstor
enter
and
cmpl
lds
lea
addb
clc
bound
xchg
or
dec
cmp
sbb
lret
cwtl
jecxz
stos
push
pop
sub
loop
xchg
push
xor
and
popf
xchg
push
ja
inc
sub
sub
add
test
mov
stc
push
mov
mov
push
xor
movsb
adc
repnz
fcom
in
adc
push
mov
jbe
sub
cltd
jbe
cmp
cwtl
cmp
test
aam
shrb
aam
enter
fidivrl
xor
adc
add
push
lret
cmp
test
dec
jns
fldcw
cmovae
aam
jmp
mov
sbb
movsl
xchg
xor
mov
loop
and
addl
insb
push
or
lds
push
data16
jb
fiadds
add
pmaxub
push
rcl
and
scas
fiadds
mov
sub
xor
incl
pop
aad
adc
arpl
lret
lret
addl
dec
push
lock
inc
adc
jno
xor
mov
or
rclb
in
xchg
mov
popa
call
mov
cmpsb
sub
subl
out
inc
inc
push
adc
xor
mov
push
stos
into
mov
movsb
xchg
outsb
pop
cltd
aas
pop
cltd
outsb
pop
mov
add
movsl
xchg
pop
mov
inc
mov
sbb
ljmp
dec
lret
mov
or
cmovp
int
aas
add
insb
insb
xor
gs
ret
lret
in
pop
and
mov
fwait
mov
cld
sub
shrb
lock
mov
adc
adc
das
lock
pushf
dec
adc
into
xor
xchg
jo
mov
in
jbe
push
addr16
mov
xchg
in
pushf
movsl
sbb
outsb
xor
fstpl
movsb
jmp
mov
cmp
sbb
mov
mov
in
testb
jl
movsl
ljmp
adc
adc
push
pop
out
movsl
dec
icebp
sub
xchg
jmp
mov
push
in
cmc
stos
inc
adc
add
sti
popf
scas
inc
push
adc
pop
add
ja
adc
pop
sub
addb
fisubl
or
xchg
sub
nop
cltd
xchg
enter
lcall
jmp
cmpsb
mov
sbb
add
out
dec
mov
inc
add
adc
orb
leave
mov
pop
stos
ss
arpl
mov
call
aad
xchg
dec
out
pop
fisubrs
movsl
les
test
sub
adc
sub
sub
pop
ret
ret
fisttps
xchg
xor
scas
or
and
arpl
div
aaa
mov
loopne
pusha
out
jle
xor
xor
jecxz
testb
movsl
mov
xor
movb
jns
in
jp
and
ja
mov
testb
adc
xchg
loop
jns
inc
sbb
push
out
int
mov
les
bound
cltd
adc
imul
mov
push
or
clc
sbb
imul
in
mov
xchg
sub
add
popa
adc
dec
movsl
jmp
push
pop
in
lods
lret
jge
inc
sub
and
xchg
add
mov
inc
ficoms
pop
cmp
lods
mov
shlb
cld
add
sub
pop
gs
sahf
pop
push
scas
dec
mov
adc
xor
lods
fmuls
and
lret
daa
jne
xchg
adc
push
arpl
iret
cld
loopne
push
mov
ret
and
jmp
xor
push
mov
bound
in
mov
sub
adc
aaa
jo
and
cmp
repz
pop
push
in
add
mov
scas
loop
xchg
incl
pop
jns
mov
xorb
sarb
pop
lret
sti
and
push
int3
xchg
stos
pop
mov
jg
fldl
ljmp
mov
adc
sbb
push
cs
shrb
mov
mov
xor
int3
xor
adc
or
fisubl
inc
or
or
and
sbb
addr16
push
std
or
loopne
iret
in
pop
adc
lcall
shl
add
js
push
mov
test
xor
mov
cmc
jmp
mov
dec
cmp
enter
cmp
addb
sub
lea
fisubrl
daa
lret
cld
mov
shrl
scas
aad
sbb
xor
loopne
xor
mov
sbb
adc
popf
mov
pop
gs
pushf
adc
jge
sub
mov
sbbb
clc
jg
sarb
unpckhps
movsb
ja
push
add
sub
lods
jp
data16
dec
mov
xchg
and
sbb
out
loop
mov
daa
call
push
setno
xchg
xchg
jnp
mov
daa
nop
jbe
imul
loopne
jo
or
jo
jge
mov
mov
cmp
sub
xchg
mov
inc
sub
fs
cmpl
cmp
adc
pop
aam
mov
add
mov
mov
adc
xchg
sbb
pushl
out
or
out
mov
fwait
push
popa
or
cmp
sbb
and
cmpsl
sarl
ss
daa
lods
xor
jp
mov
inc
push
imul
cmpsl
pop
fcmovbe
add
mov
adc
stos
jns
imul
sub
mov
inc
inc
movsb
cld
lea
lcall
repz
sub
cmovge
lret
loopne
sub
in
xor
and
stos
cs
jecxz
xor
xor
adc
or
sub
lret
fstl
loopne
stos
add
or
insb
mov
xor
sub
sbbb
pusha
xchg
or
rolb
outsl
inc
mov
add
iret
movsl
and
add
test
xchg
mov
popa
push
in
and
fcoms
nop
jnp
adc
sbb
fadds
sub
jno
dec
xor
fsubrl
movsl
jmp
ds
scas
aad
int
push
mov
lock
stos
add
pop
add
cltd
mov
popf
add
cs
imul
mov
pop
pushf
pushf
jle
cld
incb
pop
rorl
fwait
mov
lcall
push
aam
pop
pop
addl
pop
iret
mov
lret
testl
cmpsb
shrl
sub
enter
div
cmpsb
sbb
ss
int
sbb
mov
mov
pusha
aad
test
mov
arpl
mov
jb
jmp
adc
dec
jecxz
stos
jle
push
inc
jbe
fcoms
cltd
dec
les
adc
xorb
mov
arpl
pusha
inc
dec
sti
or
stos
in
rclb
or
pop
mov
adc
and
mov
mov
lock
add
ja
mov
into
pop
or
push
scas
cmp
into
popa
sbb
fwait
in
mov
ficoml
test
xlat
ret
lock
push
mov
dec
insb
xor
in
pop
mov
pop
lretw
inc
and
pop
sub
aad
adc
cmp
push
push
cmp
inc
adc
pusha
sbb
femms
aad
popa
insl
pop
cmp
mov
dec
not
and
rorb
ja
and
cmp
ficoml
dec
mov
sti
test
add
and
test
and
lods
fnstsw
pop
mov
pushf
mov
rclb
xchg
and
shrb
sbbl
or
lret
insb
pop
idiv
jnp
sub
insl
loope
pop
movsl
mov
jnp
ret
cmp
cmp
outsb
sub
jecxz
sti
cmpsl
insb
and
dec
add
lcall
add
push
scas
push
mov
xchg
cmp
decl
pop
shlb
aaa
cmpsl
stos
xor
mov
or
add
movsl
fisubl
call
mov
inc
jmp
mov
mulb
aam
fcmovnu
lahf
lret
ret
pushf
mov
test
test
sbb
sub
leave
out
inc
mov
in
mov
fimull
mov
adc
rcr
and
mov
movsb
pushl
sarl
or
xor
push
push
shlb
outsb
cmp
into
call
mov
mov
aad
cltd
mov
ljmp
adc
lds
subl
adc
aad
pop
mov
dec
subl
mov
lods
mov
arpl
pop
cmp
dec
sbb
sarb
pop
mov
pop
pop
repz
cmp
mov
xchg
jmp
sub
stos
fs
movsb
dec
jg
test
jbe
dec
pushf
out
mov
pop
xor
shrl
xchg
mov
imul
mov
in
ja
stc
std
jge
push
sub
fdivrl
gs
add
push
in
inc
pop
mov
inc
dec
lock
hlt
cmp
add
push
xchg
jle
pop
daa
lret
and
test
lds
cltd
pushf
mov
and
xchg
add
inc
mov
cmp
pop
les
xlat
clc
aam
dec
push
cld
jno
pusha
add
ja
addr16
iret
cmpb
dec
dec
sub
data16
push
aam
xor
and
mov
xchg
xchg
cmp
adc
sub
cli
sub
or
pop
push
shlb
mov
cmc
sub
in
adc
add
xor
call
flds
mov
jo
inc
xor
jae
mov
mov
ja
lcall
flds
nop
scas
pop
into
fdivs
sub
out
and
jno
in
into
pop
int3
mov
push
fwait
std
xchg
daa
out
mov
test
ja
test
fstpl
cmp
adc
mov
int3
lret
xchg
enter
push
arpl
jmp
push
add
cmp
div
dec
push
add
std
mov
xor
mov
mov
loope
outsl
jge
repnz
push
rorb
loopne
push
jge
or
into
mov
sbb
jl
stc
jl
push
in
pop
ret
rorb
mov
pop
or
loopne
inc
jle
sbb
imul
fcmovnbe
roll
mov
in
push
jl
arpl
decb
cmc
sbb
inc
fwait
jo
sbb
adc
fneni(8087
out
pushfw
xlat
and
push
cltd
andl
xor
push
mov
fstpl
and
je
cmp
pop
sub
xchg
fisubs
leave
inc
xor
mov
nop
pop
pop
into
inc
lock
jmp
jp
add
daa
into
adcl
lret
mov
mov
leave
push
data16
mov
mov
jp
shl
jbe
add
jmp
lcall
push
leave
jecxz
in
cltd
incb
pop
es
ret
pop
mov
xchg
call
xor
push
sub
push
cli
pushf
mov
add
scas
imul
xlat
sbb
fisubs
hlt
xchg
pop
ljmp
lret
lahf
nop
xchg
push
mov
xor
mov
movsb
test
inc
and
add
arpl
inc
pop
pop
sbb
pop
and
je
cmp
call
cmp
sti
xor
mov
push
dec
pop
mov
rclb
inc
sbb
insl
scas
fadd
and
pop
ss
pop
outsb
xor
sbb
cmpsl
adc
mov
mov
jg
sbb
ljmp
cmp
cmp
out
xchg
and
mov
sbb
push
mov
lret
cwtl
sarl
inc
cmp
and
or
fadds
xor
xor
jge
add
cmc
fisubrs
sub
mov
in
and
test
aad
add
push
lods
and
loope
cmp
test
dec
jl
fsub
xrstors
addr16
push
rcl
hlt
and
adc
inc
popf
popl
push
lahf
and
test
xor
and
xchg
roll
mov
cmp
iret
inc
aad
jecxz
sub
jl
cmp
mov
push
cmp
in
push
pushf
stos
and
and
xchg
mov
cs
inc
jo
xor
cmp
or
push
jecxz
xchg
addr16
sbb
fdivl
jmp
movl
insl
gs
and
lret
mov
dec
ret
push
lds
adc
jp
push
lods
jle
int
adc
mov
test
nop
dec
cmpsl
or
jg
dec
mov
cmp
mov
jl
inc
mov
orb
adc
dec
inc
inc
out
mov
pop
push
adc
dec
aas
mov
cli
xchg
jg
cmp
mov
popa
outsl
dec
in
push
mov
mov
lods
xchg
fisubrl
aam
stos
mov
mov
or
push
in
inc
test
mov
xor
xor
xorps
idivb
movsl
movsb
mov
mov
imul
jbe
mov
cmpl
test
sbb
cmpsl
mov
mov
in
jge,pt
push
jb
or
and
add
xor
les
popl
test
inc
hlt
mov
ficomps
jle
lcall
incb
in
fisubrs
into
pop
gs
adc
cmp
bound
pop
xchg
es
and
jns
shll
faddl
inc
je
pop
jns
lock
pushfw
mov
in
test
push
jg
pop
add
in
mov
push
movsl
sbb
sub
stos
stc
mov
cs
sbb
mov
sti
dec
and
mov
lret
lahf
mov
scas
push
add
sbb
jnp
push
push
mov
pop
int3
popf
lahf
adc
xorl
xchg
ficoml
aam
adc
inc
cmp
xchg
push
loope
jo
sti
pop
cmc
sub
push
pop
sub
lret
jle
daa
mov
dec
into
inc
cmc
push
les
push
lods
sub
dec
adc
xchg
adc
push
scas
jmp
jno
jo
repnz
jge
sar
pop
pop
clc
je
adc
lret
pop
js
push
mov
mov
jae
pusha
xchg
mov
cltd
push
pusha
repnz
nop
inc
das
rorb
cmpb
cwtl
test
ret
mov
scas
add
arpl
aas
inc
pop
push
sbb
cltd
dec
pop
jbe
add
in
loope
mov
es
sub
jae
adc
rcr
aam
lds
loop
insb
push
jmp
push
das
or
rcr
pop
xchg
mov
cwtl
xor
adc
inc
and
stos
nop
push
lret
mov
pop
stc
insl
jae
fldcw
lods
jp
mov
push
jno
bnd
adc
fwait
add
dec
adc
mov
xor
or
sbb
mov
repz
add
mov
ljmp
cmc
fstpl
mov
das
clc
mov
pop
gs
bound
cmp
insl
pop
mov
ret
sub
in
sahf
mov
dec
mov
clc
scas
mov
mov
fdivl
jge
adc
mov
aas
cmp
dec
push
loop
or
sbb
sbb
pop
mov
ret
mov
ss
js
sbb
out
jecxz
popf
into
jmp
pop
aas
add
inc
data16
in
ret
mov
pop
ss
pushf
cmp
cli
mov
into
jge
mov
mov
into
xor
and
adc
inc
icebp
mov
lret
into
sub
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
ret
pop
std
jns
adc
jp
or
sub
jo
jmp
inc
int
bound
push
insb
movsl
jmp
orl
add
inc
xchg
cmpsb
dec
mov
sbbb
adc
fidivs
xchg
mov
pushf
xchg
xchg
outsb
stc
push
jmp
sti
mov
mov
cli
pop
fadd
mov
in
lea
mov
jbe
mov
loop
dec
mov
ficompl
xor
outsl
jge
pop
insb
in
fwait
js
ds
mov
mov
mov
xor
push
fldenv
mov
mov
ss
and
dec
test
lea
fstps
clc
das
or
jo
out
cwtl
ds
jp
add
or
outsl
pop
mov
jnp
adc
rcl
clc
hlt
negl
jno
mov
mov
push
test
out
cmp
enter
sarl
fsubp
nop
add
pop
std
xor
pop
cmp
call
repz
dec
dec
xchg
add
sub
dec
int
dec
cwtl
push
mov
mov
pop
push
mov
or
idivb
pop
loopne
add
les
lds
rolb
mov
imul
mov
jmp
pop
test
pop
or
cmc
cwtl
add
push
and
lret
push
ja
fcomps
or
sti
pop
call
jbe
add
mov
mov
fdivrl
jo
jo
xor
add
pop
sbb
mov
jmp
pop
jb
setno
outsl
and
jmp
jo
mov
stos
mov
and
add
cmp
pop
pushf
xchg
mov
pop
mov
mov
mov
stc
cmc
xchg
add
sbb
lods
pop
sti
das
fnstcw
daa
jbe
arpl
test
in
rcrl
pop
lds
loope
mov
jns
jae
movsl
mov
iret
call
mov
stos
test
lock
addr16
xchg
mov
jp
leave
inc
gs
fimuls
push
pop
pop
subl
adc
xchg
loopne
mov
xor
lods
cmp
sub
scas
or
dec
sub
sbb
sbb
and
pop
sub
movsl
jl
les
mov
leave
bound
lods
lock
dec
jmp
pop
cmc
test
lock
dec
xchg
push
xor
jp
cmc
ja
or
es
call
or
xchg
rclb
scas
aaa
push
dec
mov
adc
jae
add
out
sbb
push
gs
inc
mov
jno
xchg
xchg
enter
lock
sub
addl
lea
sub
cmp
pusha
sub
mov
jo
fldl
push
pop
dec
mov
dec
pop
dec
pop
cmp
fwait
das
test
es
icebp
je
out
dec
stmxcsr
shlb
repnz
mov
mov
repnz
jnp
sbb
addr16
negl
pop
repnz
dec
out
xchg
clc
jmp
fisttpll
mov
sub
cmp
push
add
adc
mov
testl
lock
popf
or
sahf
pushf
jne
mov
in
push
in
decl
idivb
incw
les
cmp
adc
jns
and
jmp
test
stos
lods
in
andl
loopne
aam
ss
xchg
dec
leave
xor
mov
in
lret
mov
and
mov
ret
sub
out
xlat
push
pop
jp
lods
imul
sahf
mov
adc
in
xlat
sub
sbb
stos
cmp
and
mov
test
cmp
mov
js
push
lcall
sbb
push
mov
insb
sbb
mov
xchg
adc
mov
insl
pop
shll
sbb
daa
test
stos
ret
push
xchg
cmp
jb
fsubrl
and
mov
xor
into
loop
lods
add
lds
inc
pop
popf
enter
sbb
xchg
jae
enter
dec
jae
call
inc
push
or
lds
sbb
mov
pop
lods
dec
mov
cld
mov
push
xchg
xor
push
enter
loop
test
jmp
mov
dec
adc
jg
setle
cmpl
into
leave
fcoml
imul
shrl
dec
fstp
shlb
xor
mov
rcll
inc
and
add
or
testb
and
cmc
push
outsl
adc
mov
pop
mov
cmp
out
mov
fucomip
inc
lcall
inc
sub
adc
mov
pop
nop
call
cltd
lcall
inc
jns
movb
mov
pop
mov
icebp
fwait
rcll
shl
fcmovnb
mov
rcll
leave
stos
cmp
test
ljmp
fcmovbe
enter
js
lods
mov
inc
add
into
das
pop
mov
xor
clc
int3
push
jae
in
fimuls
or
mov
sub
stos
rorb
mov
lods
sub
rolb
jmp
mov
jo
cmp
pop
jl
add
outsb
sbb
or
ljmp
aad
movsl
stos
sbb
ret
push
pop
jecxz
or
inc
notl
inc
repz
xor
pop
fcomi
icebp
ja
or
cld
int3
cwtl
rcrb
cmp
arpl
adc
scas
sub
inc
cmp
popf
xchg
sbb
lret
out
push
loop
jae
loopne
je
xchg
fimull
xchg
ret
aam
xchg
bound
add
outsb
fwait
or
mov
jecxz
out
pop
test
sbb
dec
jne
jp
mov
jmp
jno
adc
sub
mov
mov
xor
loopne
sub
test
dec
sub
andb
inc
data16
inc
test
cld
push
xchg
stos
mov
inc
enter
call
ljmp
ja
mov
aaa
lcall
jo
ja
test
jb
dec
adc
mov
dec
mov
mov
es
add
sbb
addr16
repz
fdivr
jge
arpl
in
push
sub
enter
xchg
cmp
rcl
pop
jecxz
inc
fdivrs
sbb
dec
push
sub
leave
insl
jo
or
inc
add
ret
mov
adc
outsb
sbb
fdivrl
mov
call
std
fcmovbe
mov
leave
sub
inc
jmp
cltd
aaa
in
cmp
push
leave
mov
ret
jmp
jae
arpl
dec
in
leave
mov
test
test
test
data16
sbb
xchg
sbb
outsl
stc
or
loopne
mov
cmp
dec
cs
pop
fstl
xchg
sub
in
pop
and
popa
sbb
lods
and
scas
pop
jmp
xchg
in
sbb
es
stos
pushf
sti
xchg
dec
cmc
icebp
sarl
icebp
inc
pop
jno
xlat
inc
shrb
dec
pop
cs
and
stos
call
jnp
arpl
scas
mov
adcl
pop
bswap
test
je
in
push
rclb
jb
xchg
xchg
scas
lcall
pop
in
aad
sbb
dec
aaa
subb
dec
popa
scas
repz
fdivrs
imul
test
bound
xor
push
push
lret
lods
pop
sub
xor
mov
add
mov
push
fcoms
dec
and
popf
stos
outsb
xor
xor
add
daa
test
pop
lds
imul
jmp
rcl
test
imul
ret
in
cmp
mov
sbbl
inc
aaa
push
bound
pop
mov
push
nop
sbb
scas
xor
enter
xlat
nop
insl
popa
imull
pop
int3
subl
mov
pop
sahf
cmp
or
xchg
mov
test
inc
in
stos
outsb
aad
fistpll
xor
adc
jo
jle
dec
dec
jle
mov
roll
nop
notb
dec
dec
and
bound
arpl
pop
sahf
jp
adc
cmp
xlat
insl
xor
js
out
xor
inc
rcrb
cmp
imul
cmp
pop
pop
push
mov
xchg
cltd
ja
inc
neg
stos
dec
jge
lods
sub
js
dec
cmp
leave
mov
call
xchg
je
pusha
int
sbb
sbbl
gs
ss
cli
iret
lret
inc
cld
sbb
xor
sub
xchg
stos
out
xor
lock
push
lods
ret
or
add
int3
push
add
rcr
inc
movsl
into
dec
jne
xchg
jne
fwait
mov
stos
cli
jns
sbb
xor
mov
in
cmp
les
sub
cmp
das
shll
cltd
adc
fiadds
jmp
je
hlt
movsb
enter
jne
cmc
and
rol
dec
dec
dec
mov
aad
sbb
repnz
sbb
cmp
mov
and
into
aam
dec
push
mov
fwait
sbb
scas
out
ret
adc
adc
fwait
mov
mov
in
mov
btc
lahf
xor
imul
push
iret
jg
int
mov
inc
bound
dec
aad
fmull
outsb
into
lods
repnz
xor
outsb
out
imul
iret
inc
js
lock
sti
jbe
adc
jbe
dec
mov
inc
mov
jl
dec
lods
add
dec
out
test
inc
imulb
mov
mov
addb
xchg
aas
pushf
and
movsl
mov
push
pop
jp
call
cmpsl
ds
xchg
sub
pop
xchg
roll
out
or
cmp
sbb
mov
xchg
cmp
mov
push
addl
jle
pop
push
xchg
cmp
movsb
xor
dec
mov
pop
mov
jns
inc
xchg
outsl
push
cmpsb
adc
mov
adc
mov
push
lret
popf
adc
pop
gs
push
xor
push
ja
je
pop
mov
jb
pusha
dec
mov
mov
pop
in
adc
and
mov
es
fdivrs
into
cmc
add
int
jbe
pop
lds
lods
fs
or
jbe
bound
lret
xchg
or
rcrb
adc
sub
jg
sbb
fdivrs
movsl
xchg
mov
icebp
pop
sub
out
jecxz
dec
mov
addl
pop
fdivrs
xchg
scas
mov
sub
or
cmp
mov
xchg
sbb
jp
in
stos
mov
mov
lea
popa
nop
xchg
int3
xchg
das
xor
mov
mov
sbb
push
add
and
dec
rorl
pushf
decb
jns
ret
push
enter
rcll
out
xchg
lods
fbld
pusha
sub
adc
inc
dec
mov
xchg
and
fimuls
fcomps
mov
outsb
or
ds
in
push
sbb
fidivl
sub
fstpt
mov
adc
jb
stos
mov
fs
dec
push
jmp
cmp
mov
mov
mov
lods
dec
fidivrl
jae
cld
dec
aas
in
jno
roll
push
jmp
bnd
add
bound
xchg
push
cmpsl
jle
enter
arpl
mov
cmp
xor
cmpsb
mov
movsb
xor
in
inc
inc
inc
pushf
fcomi
mov
cmpsb
sbb
mov
cmc
movsb
pop
lods
imul
lock
ljmp
lods
ret
int
es
shrb
pop
mov
jle
repnz
data16
shrb
repz
or
icebp
mov
fisubs
jecxz
mov
xor
rcrl
decb
push
rolb
addr16
xor
mov
aas
notl
sbb
pop
mov
mov
inc
out
mov
dec
push
lahf
and
data16
in
shlb
xchg
cld
xchg
gs
lock
mov
mov
lods
sub
je
add
pop
icebp
mov
loopne
into
and
aad
dec
icebp
mov
jmp
mov
mov
add
fistpl
mov
mov
shr
sti
imul
aad
mov
sub
pusha
sub
je
pop
lea
fs
fisubrs
imul
rolb
clc
sbb
xor
pop
jle
push
fisttpl
or
lods
xor
sbb
inc
sub
jnp
ror
push
jge
aam
sahf
sub
loop
jmp
std
xchg
int3
ror
jecxz
adc
pushf
les
pusha
ds
ror
sub
mov
pop
or
ds
mov
ds
mov
mov
push
dec
or
push
es
inc
dec
addl
out
aaa
adc
pop
vcmpsd
ja
sub
mov
pushf
jns
pusha
cmpsl
pop
addr16
fimuls
xchg
sahf
dec
rcrb
mov
cmp
jae
or
push
std
pop
cmp
fsubl
sub
cld
pop
aaa
lret
jnp
push
mov
cli
iret
fdiv
adc
in
cmp
sahf
ficomps
rorb
std
push
dec
fildl
or
adcb
mov
pusha
fwait
sub
enter
mov
jns
mov
sub
mov
jg
je
and
jmp
clc
in
mov
outsl
out
push
out
xor
jg
test
out
dec
fisubs
xor
jcxz
xor
movhps
xchg
cli
push
mov
mov
cwtl
jns
pop
cmp
lret
xlat
xlat
shr
out
jmp
push
arpl
or
inc
fwait
sub
adc
push
jne
rcrb
cmc
gs
leave
jl
loop
out
dec
adc
or
jno
popf
mov
mov
mov
dec
pop
movsl
aad
pop
fsubs
jnp
sub
and
bound
repz
pop
gs
fs
arpl
or
imul
popf
fistpll
sti
or
push
into
lods
add
jp
xor
or
sub
in
iret
scas
pop
mov
mov
fisubrl
inc
lock
decl
insb
or
mov
addr16
ffree
outsb
dec
push
aam
push
xchg
stos
in
sub
enter
test
add
inc
lret
pushf
je
into
es
dec
or
sbb
test
or
cltd
sbb
dec
push
xor
addb
out
loope
shlb
scas
jno
pop
sbb
clc
mov
sub
rcr
add
mov
sub
stos
xchg
test
mov
xchg
jno
popf
jne
dec
push
jle
fimuls
ds
test
mov
sbb
mov
mov
sbb
enter
ficoms
mov
xchg
mov
out
pop
fldenv
sub
pop
mov
mov
and
enter
fsubs
outsl
lods
fbstp
test
or
js
pushf
jae
lods
out
mov
jns
pop
push
lock
filds
aad
lods
push
arpl
mov
sub
in
outsb
test
dec
outsl
push
push
leave
sub
add
std
test
jbe
push
in
sbb
in
jg
dec
std
repnz
mov
push
imul
pop
repnz
cltd
or
add
js
mov
cmp
inc
xchg
hlt
jecxz
shrl
into
ds
sbb
jecxz
lods
push
sub
adc
into
and
jmp
jno
mov
push
dec
call
rcr
jecxz
jle
sub
inc
fs
adc
call
lea
pushf
dec
movsl
gs
xchg
arpl
dec
push
testb
xchg
fisubl
mov
dec
clc
orl
mov
and
pop
nop
flds
push
adc
xor
push
shlb
cmp
or
das
insb
cmpsl
lret
out
pop
xor
adc
sbb
xchg
js
outsb
pusha
cmp
sub
or
enter
std
jge
mov
or
enter
nop
mov
insb
mov
mov
fcomi
pop
test
int
mov
cmp
idivl
adc
repz
adc
mov
push
add
loopne
lret
mov
sbb
sti
xlat
aas
daa
scas
add
or
jnp
out
loopne
aas
dec
cmpsb
add
pop
fwait
sti
mov
sub
loopne
loopne
sbb
xlat
mov
lock
rcl
inc
das
mov
rorl
sub
fwait
cltd
data16
mov
add
jo
cltd
ljmp
mov
xchg
rcrb
push
ss
nop
mov
mov
lock
je
lret
sub
mov
jnp
inc
jmp
dec
jle
jl
inc
jo
outsb
push
adc
into
push
outsb
pop
dec
repz
out
sbb
xor
or
ja
adc
fwait
pop
inc
scas
shlb
outsb
repnz
adc
and
push
pushf
lock
gs
cltd
sbb
cmp
aam
enter
ss
outsb
pushf
ljmp
sbb
mov
push
xor
scas
push
in
out
sbb
sub
jne
sbb
or
daa
repnz
inc
sub
mov
xchg
jl
arpl
sub
push
sbb
sbb
dec
shld
xor
rcrl
stos
dec
lea
nop
mov
pop
mov
cmp
sbbb
mov
cmp
dec
call
outsl
mov
adc
sub
hlt
paddb
mull
int
int3
xchg
push
cld
in
pushf
adc
icebp
inc
pop
mov
adc
push
loope
xor
fld
mov
inc
pop
jae
jg
cli
lret
ret
adc
add
jne
daa
popa
cwtl
sub
mov
jge
sbb
mov
rcrl
add
sbb
enter
mov
sbb
fiadds
jne
lds
jle
idivl
mov
pop
cmp
mov
dec
outsl
ja
xchg
cmp
in
shl
and
mov
das
adc
js
fistpl
adcl
out
adc
jge
push
cli
xchg
sub
and
add
lds
jmp
jnp
gs
lods
mov
in
in
shlb
inc
cmp
incb
sub
adc
cmp
and
jge
add
push
dec
arpl
andb
enter
scas
adc
mov
jae
filds
or
pop
nop
jnp
arpl
sbb
xchg
orl
loop
sub
add
cmpsb
and
and
jne
inc
stos
test
jns
roll
cmp
call
push
fildl
in
cmp
mov
push
sbb
mov
sar
shrl
jge
enter
mov
addr16
push
dec
adc
dec
cmpb
aad
xor
inc
inc
icebp
cmp
mov
push
outsb
jl
add
mov
adc
movsb
cmp
aaa
xchg
in
lds
mov
fcompl
cmc
or
dec
add
jge
pop
mov
hlt
push
pop
sub
inc
mov
lods
jbe
popa
cmp
out
rcll
pop
movsl
sbb
push
push
lret
sub
movsb
addr16
mov
and
mov
push
adc
dec
fidivrs
mov
jmp
sbb
push
jns
aam
mov
dec
pop
jge
and
test
push
dec
jo
movsb
adc
pop
jg
mov
test
lods
xchg
sbb
aaa
call
or
push
ja
dec
dec
xchg
cli
cmpl
xor
bound
sbb
popa
mov
pop
or
sub
cmp
pop
sbb
adc
ja
lret
popa
xchg
dec
push
out
mov
das
int
sbbb
mov
pop
cmp
daa
dec
leave
movsl
add
pop
adc
xchg
lret
push
mov
mov
jo
iret
xorb
and
fwait
out
scas
fimull
fidivs
xlat
pop
je
fistl
or
roll
pop
inc
aam
push
fsubrl
mov
stos
out
jmp
fildll
addr16
add
xchg
push
pop
jmp
xchg
fidivrl
adc
mov
andl
push
xor
push
mov
and
popf
mov
jg
pop
out
fisubs
adc
jle
mov
inc
fdivr
cli
ret
add
out
aaa
adc
mov
mov
leave
call
insl
lods
addr16
mov
sarl
jb
sbb
and
dec
outsb
loope
xchg
cld
cmp
ljmp
sub
jp
enter
adc
mov
dec
callw
pop
imul
mov
jb
bound
mov
pop
inc
nop
test
dec
imul
mov
and
pop
outsb
pop
lcall
lahf
lds
sbb
sub
mov
jo
rcrl
adc
js
outsl
pusha
adc
ror
stos
pop
xor
push
jnp
pop
sti
inc
out
sbb
and
and
or
ret
insl
xlat
mov
mov
movsl
aas
inc
pop
out
push
adc
test
jecxz
mov
mov
mov
fsubrl
je
mov
lahf
jge
jmp
add
insl
shl
add
adcl
fimull
out
pop
stos
pop
loop
xlat
mov
xor
icebp
and
adc
lods
jns
sbb
scas
add
jns
test
cmpsb
sub
imul
xor
pop
pop
lods
enter
ja
inc
push
loope
fstpt
aam
or
xchg
inc
int
adc
mov
test
js
out
nop
scas
out
fldt
fidivrs
jmp
adc
pop
popa
sti
dec
imul
push
mov
sti
in
adc
jl
out
movsw
imul
ret
inc
and
pop
inc
shl
leave
mov
mov
sbb
std
jmp
jp
lock
test
into
xchg
or
lock
stos
cltd
lds
lock
mov
push
mov
inc
out
and
sbb
inc
ds
ja
jno
les
pop
push
std
jmp
mov
cltd
dec
mov
adc
sub
shl
aam
aad
insl
test
mov
sahf
pop
dec
sbb
sbb
jno
out
mov
mov
shll
aam
push
dec
outsl
arpl
mov
in
fwait
pop
jb
pop
mov
ret
xchg
inc
dec
dec
out
mov
jne
cmp
and
cmc
inc
add
jnp
jb
jae
jae
xchg
pop
or
popa
popf
or
in
and
cmp
xchg
aaa
out
cmp
or
fidivs
shl
in
out
or
and
daa
xchg
loop
rclb
sbb
mov
mov
ret
jge
icebp
jns
mov
ds
pushf
icebp
mov
and
pop
push
enter
cmp
movsl
lcall
dec
lods
fistps
adc
rcrb
int
cs
fisttps
test
pop
or
dec
movsb
inc
rclb
pop
xor
lcall
pop
ja
lcall
mov
dec
es
out
js
cmp
ds
stos
cmpsl
lret
stc
ret
xchg
andl
pop
pushl
mov
call
xlat
mov
sub
dec
ret
daa
dec
pop
imul
adc
shl
mov
loop
lcall
jno
dec
mov
call
lock
rorb
in
mov
aad
loop
pop
add
and
stos
jb
dec
loop
addr16
call
xor
sarl
inc
aas
or
push
mov
mov
rcll
js
les
popa
mov
push
test
adc
push
movsb
push
bound
mov
sub
orl
aaa
adc
xchg
dec
xor
xor
bound
cmp
pop
jle
jg
inc
ja
stos
enter
jo
mov
sbb
test
andl
scas
add
ja
or
sbb
jecxz
mov
sbb
jl
divb
lret
popf
lahf
xor
stc
xchg
xlat
clc
push
out
out
insl
sti
mov
sbb
push
imul
loope
jl
cmpsl
inc
in
movsl
push
mov
in
repnz
repz
ret
outsl
push
inc
sub
jne
xchg
leave
popa
cmpsl
and
and
mov
inc
jno
mov
inc
cmp
cmpsl
dec
sbb
push
ja
or
sti
sub
mov
shlb
dec
fdivrl
cmp
adc
rolb
stc
mov
sub
push
xchg
lret
mov
daa
fmuls
cmc
inc
mov
loope
aas
sahf
inc
mov
cmp
test
mov
js
das
jmp
jne
inc
sbbl
pop
mov
andb
jbe,pn
shlb
sbb
and
in
je
int3
dec
jmp
std
jg
clc
or
shr
adc
dec
lods
inc
cmp
jge
icebp
addl
add
mov
insl
lods
adc
xor
pop
flds
std
push
lea
adc
jp
jg
js
ja
dec
mov
scas
loop
or
cmp
mov
in
mov
imul
mov
cmp
lods
jle
jo
xorl
repz
pop
int3
mov
fs
add
add
scas
sbb
xor
add
mov
pushf
dec
shrl
lcall
mov
mov
mov
sbbl
mov
push
dec
add
cmp
dec
pop
lods
mov
fsubrs
test
xor
mov
mov
arpl
push
mov
mov
cmp
shl
shlb
jecxz
rcll
pop
inc
pop
mov
mov
jb
daa
ds
clc
inc
aam
int3
sub
mov
or
xchg
insl
es
xchg
push
lods
test
xchg
mov
inc
adc
lahf
in
mov
int3
push
dec
in
xchg
cmp
lods
pop
jle
ret
add
add
jmp
adc
and
cmc
out
xchg
test
mov
fstpt
mov
mov
jl
and
pop
add
jnp
inc
adc
add
or
cmpl
jmp
clc
hlt
sbb
pop
jo
pop
mov
mov
adc
sbb
stc
cwtl
call
xchg
xchg
adc
lahf
add
in
mov
cmp
mov
push
sar
pop
sub
ljmp
and
xor
and
mov
push
ja
pop
push
xchg
ljmp
lods
fs
xchg
sbb
clc
loope
test
pop
cmp
leave
inc
in
stos
leave
test
fnstsw
mov
xchg
out
push
xchg
jno
cmc
push
jae
dec
and
cs
pop
out
xlat
jle
xchg
imul
mov
outsb
enter
fsub
and
push
rcl
lods
mov
sti
std
fs
test
fidivl
sub
lock
jae
or
adc
fcomi
and
adc
mov
lods
andb
sahf
aaa
sbb
sbb
testl
imul
cltd
jne
lret
or
int3
xor
stos
jmp
fs
out
push
adc
xor
xchg
sub
dec
inc
je
outsl
mov
call
lea
je
lock
popf
pop
xchg
scas
fiadds
sarb
int3
xor
gs
jae
lea
imul
lcall
test
and
mov
stos
cld
mov
dec
pop
test
lock
pop
andb
mov
sbb
sub
pop
add
push
jns
inc
aam
cli
int
pop
cmpsb
enter
fwait
movsb
sbb
dec
or
scas
pop
or
rcrl
hlt
xchg
ret
es
push
inc
gs
outsb
adc
mov
iret
mov
mov
dec
es
leave
pop
out
and
sbb
adc
or
fmuls
movsl
call
vpminub
xor
ret
je
mov
sub
aas
add
movsl
jno
je
xor
xchg
outsl
jle
int3
jns
in
sub
pop
mov
jmp
sub
jg
sub
push
fbstp
cmp
push
cmpsb
mov
leave
decb
xchg
ss
push
shrl
pop
inc
jbe
mov
mov
mov
or
or
xchg
in
icebp
cmp
cmp
fdivs
cltd
push
mov
mov
mov
mov
or
jae
or
daa
lret
andb
sbb
mov
jns
sub
mov
test
lods
sub
mov
jbe
pop
and
je
pop
rcr
jo
jo
mov
or
outsb
xor
and
dec
inc
pop
jne
enter
repz
sbb
cmp
test
jp
std
repz
ret
cs
rclb
dec
mov
out
shll
sbb
jno
or
dec
cltd
les
add
jne
fldt
daa
xchg
sahf
mov
mov
ret
cmp
sarl
ja
dec
jnp
inc
dec
imul
lods
out
mov
xor
xchg
std
jne
pop
pop
push
mov
out
cmovl
cmp
imul
test
ljmp
xorb
insl
stos
jg
xor
imul
loop
maxps
mov
and
leave
mov
mov
inc
jbe
or
dec
jbe
imul
jb
mov
das
ljmpw
out
sub
add
leave
inc
loop
ret
mov
sub
aaa
je
icebp
adc
fcmove
lock
mov
jecxz
out
fwait
adc
ds
pop
ja
stos
and
pop
movsl
cmp
sub
pop
xchg
inc
pop
jp
xchg
shrl
cmpsb
or
mov
jg
dec
push
sahf
sbb
dec
call
leave
aam
adc
add
fimull
movsl
xor
data16
icebp
xchg
and
mov
gs
cld
dec
xchg
das
inc
lret
daa
or
cltd
clc
fsts
inc
ja
sub
cmp
xchg
cmp
out
addr16
dec
dec
xchg
and
mul
jne
aas
lahf
leave
cmp
push
add
dec
inc
xor
pop
iret
rcl
int
sub
out
jp
pop
imul
xor
mov
adcl
push
gs
data16
int3
in
fists
add
xchg
outsb
int
lds
ja
fnstenv
adc
jmp
xchg
sub
mov
pusha
jno
fistl
mul
sahf
jbe
jb
fdivr
cmp
lret
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
jns
pop
not
jns
loope
jp
divl
xor
hlt
fstenv
xor
arpl
dec
lcall
aaa
scas
jp
leave
inc
les
xchg
sti
or
adc
mov
pop
mov
dec
mov
dec
incb
xchg
inc
and
mov
mov
cmp
pop
pushf
in
pop
in
out
add
mov
fisttpll
je
test
stos
jnp
or
sbb
cmpsb
inc
mov
cmpsb
leave
cmpsl
push
mov
insb
jge
xchg
insb
adc
mov
push
pop
jg
test
outsl
mov
inc
popa
outsl
outsb
insb
scas
inc
adcl
mov
inc
cmp
jmp
adc
add
js
push
mov
and
cwtl
je
push
xor
pop
addr16
cmpsb
fistpll
xchg
sbb
lods
and
push
or
push
fstpl
sub
dec
dec
cmp
cmp
lock
sahf
mov
sub
cwtl
js
sbb
jno
jp
mov
out
mov
push
jno
mov
jae
in
push
test
pop
adc
lahf
mov
jmp
mov
movl
repz
and
jae
leave
pop
push
pop
cmp
lods
icebp
ret
add
mov
scas
neg
xor
outsl
incb
or
push
js
gs
decl
mov
push
adc
arpl
lds
aad
mov
xchg
cmp
adc
xchg
lds
out
in
push
decl
popa
push
out
xor
push
cmp
into
aas
push
mov
jp
cld
mov
scas
lods
loopne
jl
cmpsl
xlat
daa
stos
pop
imul
jbe
pop
loop
scas
inc
adc
cs
dec
dec
xor
cmp
fdivl
pop
je
lods
fs
cld
fildl
fsubrl
jnp
dec
adc
int3
pop
pop
mov
or
push
mov
out
cltd
cmpsl
repnz
sbb
jg
es
mov
add
leave
out
sub
pop
inc
stc
jg
pop
xchg
rorl
sahf
inc
scas
rcl
xchg
dec
mov
and
aad
jl
push
push
and
sbbl
loop
movsl
outsl
ret
xchg
mov
out
loop
hlt
jg
daa
das
shlb
fdivl
filds
je
mov
scas
xchg
jge
cltd
or
pop
mov
xchg
inc
mov
jmp
in
mov
scas
ss
xorb
push
in
in
jecxz
punpckldq
mov
xor
je
test
or
lds
inc
lret
sub
xchg
mov
mov
mov
test
inc
sub
out
pcmpeqd
and
mov
insb
stc
xchg
jae
cmp
dec
or
inc
pop
stos
lret
jle
cltd
daa
nop
out
pop
cmpsb
ds
divl
loopne
push
jg
dec
sbb
pop
cwtl
mov
rorl
jle
fadds
aas
and
push
aam
xchg
add
arpl
rorb
or
bound
mov
cmp
cmp
add
ret
imul
cmpsl
fstps
adc
cmp
aas
and
lea
mov
mov
movsl
mov
jnp
cs
les
cmp
lds
aas
cmp
lahf
add
sti
inc
in
test
xchg
roll
sub
jmp
lcall
sub
push
leave
mov
dec
test
mov
out
repz
xchg
cwtl
paddd
dec
add
pop
enter
call
pop
std
stos
jne
sbb
lock
int
and
leave
mov
push
sti
push
out
ret
sub
dec
enter
jb
sti
scas
out
mov
xchg
and
mov
insb
push
test
or
rcll
mov
cld
movsl
push
add
outsb
push
mov
and
cmpsb
adcl
push
adcl
loope
adc
inc
xor
sahf
adc
les
sub
out
add
dec
fsubrl
movsl
pop
in
jg
int3
leave
pop
test
mov
dec
sub
jo
out
jbe
pop
loope
in
jecxz
mov
out
addr16
adc
sti
mov
call
push
cmc
push
ds
stos
push
out
fidivs
jge
and
pusha
inc
fs
jb
pushl
addr16
loopne
jl
notl
js
jb
lods
pop
sbb
fadds
clc
loope
cmc
into
subb
sbb
stos
xchg
lods
rorb
lea
popa
lret
add
mov
cmp
push
dec
outsl
frstor
movsb
jmp
or
jmp
mov
out
std
adc
stos
and
popa
xlat
xor
out
fidivs
lock
inc
es
cmp
mov
mov
push
fisubs
dec
inc
fnsave
rorb
lds
dec
push
pushf
mov
mov
add
out
adc
roll
iret
jae
stos
dec
shr
mov
inc
sbb
mov
maxps
aaa
sarb
jo
in
sub
sbb
popf
sahf
in
std
pop
lods
or
lods
shl
dec
or
xchg
pop
stos
jne
cmovp
lods
test
inc
xchg
push
inc
notl
push
call
mov
loopne
adc
daa
and
das
dec
add
or
jns
mov
bound
sbb
jae
pop
in
push
sbbl
mov
repz
ja
negl
outsl
cwtl
pop
in
fdivp
sti
pusha
std
addr16
repz
lret
jae
inc
mov
das
or
shlb
cmpsl
in
and
shl
lret
into
mov
out
push
jae
arpl
scas
push
mov
cli
or
sub
stc
mov
daa
push
cmpsb
out
jae
mov
lahf
cs
adc
xor
ja
mov
iret
fxsave
movsl
dec
push
bnd
dec
insl
or
sbb
or
out
out
out
mov
xchg
mov
add
scas
pop
sbb
jns
popf
gs
movsb
inc
fiadds
jg
xchg
hlt
in
sub
jns
into
sarb
mov
sub
cld
loopne
sti
jb
int3
cli
or
mov
lret
xor
mov
mov
push
xlat
adc
pop
cltd
add
or
shld
sbb
sbb
jb
jbe
enter
repz
cmc
xor
and
in
test
test
in
in
adc
imul
pop
lock
xchg
mulb
in
cmp
loopne
push
add
aaa
add
movl
or
shrb
sbb
in
push
mov
sbb
sbbl
sub
adc
cmpsl
sbb
mov
call
pop
inc
xchg
cmp
xorl
and
jne
or
icebp
test
and
xor
xchg
test
fldl
pop
sti
xchg
cmp
std
test
gs
jecxz
sub
out
jmp
rcll
aas
xor
jp
je
lods
stos
xchg
inc
sahf
jb
dec
lods
push
or
out
dec
fwait
sahf
sub
popf
mov
add
jo
jp
out
shlb
ljmp
mov
sbb
cli
cmpsb
mov
ficomps
mov
out
mulb
cltd
mov
loope
or
mov
pop
xor
in
mov
cmp
lods
mov
mov
add
sbb
push
mov
in
cmp
repz
call
fcompl
cmp
shll
adc
dec
mov
in
out
test
mov
mov
and
adcl
std
mov
xor
jp
icebp
pop
mov
mov
pop
sub
and
adc
repnz
lea
in
jl
arpl
add
cmpsl
pushw
sbb
fwait
sbb
xor
push
rcrb
jb
inc
and
and
add
les
outsl
and
pop
or
push
pop
mov
sbb
in
nop
xor
jno
adc
cltd
mov
ret
and
aaa
jecxz
and
int3
inc
into
in
xchg
mov
mov
sbb
dec
dec
int3
aaa
aaa
icebp
cmpsb
pushf
in
push
fldenv
sub
pop
sub
movsl
test
sahf
dec
sub
jns
sbb
cmp
icebp
push
jne
fwait
mov
sahf
xchg
lret
mov
xchg
fldln2
push
jecxz
mov
lret
sti
xor
mov
addr16
shrl
or
adc
cmp
aam
inc
test
lods
inc
arpl
add
insl
hlt
es
into
xor
sbb
pop
lock
hlt
int3
xchg
and
mov
and
loopne
push
es
pop
adc
mov
add
push
lds
es
push
js
and
sbb
fwait
xor
mov
or
jp
outsb
test
loopne
xchg
jecxz
add
pop
push
movsb
cmpsl
mov
lea
xor
mov
pop
mov
gs
or
add
rclb
lds
shr
xor
mov
xlat
scas
cmp
sbb
shl
dec
mov
das
pop
inc
and
mov
xor
scas
push
xchg
call
fnstsw
adc
cmp
push
pop
aam
loop
shl
sbb
lea
sbb
sbb
enter
xorl
ret
mov
xor
outsl
loope
int3
adc
iret
xchg
fdivrl
add
scas
ficoml
jnp
fdivp
sbb
inc
sub
lods
out
sub
fisttpll
shlb
xor
inc
push
inc
scas
in
inc
add
and
je
js
repnz
dec
mov
call
dec
lret
shlb
psubd
sub
sbb
mov
pop
xchg
push
cmc
pop
or
xchg
daa
data16
aaa
mov
lret
mov
sahf
push
push
sbb
and
inc
push
xor
cli
sbb
push
or
cmpsb
lods
dec
ja
push
cld
jb
lock
lock
mov
mov
pop
adc
mov
inc
mov
sub
xchg
flds
mov
lret
and
push
xchg
mov
and
aaa
mov
pop
xor
clc
dec
jb
lret
fs
mov
sbb
xor
and
loop
push
and
stc
movsb
popf
push
pop
sbb
fists
repnz
mov
in
push
pop
imul
or
xor
mov
cmpsl
add
mov
sbb
or
hlt
jmp
sti
in
xorl
repnz
or
pop
cmp
xor
dec
lods
add
pop
sub
add
stc
mov
pop
mov
das
cwtl
rolb
jne
jmp
das
inc
mov
jle
lahf
jns
inc
cwtl
cmpsl
sbb
das
test
mov
cltd
jb
lds
popa
movsb
adc
sub
gs
lock
das
jge
mov
adc
fwait
sti
mov
mov
adc
sub
pop
cmp
fbstp
scas
xlat
scas
pushf
mov
mov
adc
lahf
push
cmp
scas
test
push
inc
pop
cmpsb
or
mov
dec
sbb
adc
inc
or
push
add
dec
scas
das
sbb
lods
fldlg2
outsb
cmpsl
inc
or
inc
push
loopew
lret
out
in
mov
jne
cmp
stc
push
out
sub
lea
test
fcompl
mov
xor
sbb
add
xor
adc
jge
mov
or
addr16
jno
mov
and
testl
xchg
hlt
mov
cmp
cmp
negl
jno
fnsave
cmp
sbb
mov
test
push
sub
je
add
inc
jl
dec
dec
xor
in
mov
sub
lcall
lea
shlb
sbb
mov
and
notb
xor
jo
ror
lds
sbb
xorl
out
inc
xor
add
and
inc
aad
xor
fcompl
aas
sbb
movsl
dec
jns
mov
or
js
aad
sbb
call
sub
mov
les
xchg
popf
lahf
sbb
outsl
xchg
inc
repz
pop
jne
add
jecxz
xchg
jbe
popf
lret
dec
fcomi
nop
sub
ja
sarl
dec
inc
dec
test
dec
aaa
nop
test
xchg
imul
mov
or
repnz
pop
int
aam
push
xchg
out
ja
ja
xor
dec
ret
repz
sbb
adc
imul
xor
sbbl
lock
cmp
push
push
movsb
xchg
gs
cld
add
lahf
popl
jo
jno
in
adc
cmp
lea
or
pop
mov
enter
cmp
aam
decb
in
and
clc
movb
arpl
mov
pop
loopne
out
push
popf
mov
xor
or
mov
in
inc
arpl
inc
dec
fisubl
fwait
mov
and
xchg
loop
fmul
adc
xchg
shl
mov
sub
bound
mov
sbb
dec
sub
shl
std
push
insb
imul
push
mov
outsl
push
dec
cmc
xchg
lcall
imul
and
pop
aam
fwait
mov
ficoms
cmp
push
push
cmc
pop
adc
mov
gs
popf
ss
mov
mov
xor
xchg
jo
xchg
in
ret
push
push
xchg
mov
imul
outsl
insb
lret
or
data16
gs
movsl
call
xchg
sub
cmpsl
pop
fs
xor
xor
dec
lds
pop
in
movsl
in
inc
cmpxchg
add
push
daa
xor
aam
sbb
stc
mov
jne
int3
je
add
jmp
xor
mov
stc
sbb
inc
jge
les
or
mulb
and
push
adc
ds
jns
lcall
push
push
addb
lock
push
sarb
lds
cmp
popa
sbb
je
push
test
syscall
mov
xchg
sub
enter
inc
mov
xor
es
inc
sub
ret
int
inc
out
fwait
movsl
sub
mov
pop
std
pop
mov
scas
shl
adc
sbb
xchg
cmp
frstor
sub
lods
xor
pop
xor
loopne
xchg
lahf
pushf
hlt
dec
lea
xor
loope
push
and
jnp
pop
lock
jb
mov
add
adc
jmp
push
ja
outsb
sbb
jmp
ret
mov
cs
jns
addr16
aam
js
cwtl
adcl
jae
int
adc
xorb
addl
jmp
shrl
pop
sbb
icebp
int3
pop
cs
push
pop
ja
fimuls
in
xor
mov
stos
and
clc
rcrl
ds
loope
daa
adc
add
dec
sbb
xor
add
xchg
inc
dec
call
dec
cld
or
sbb
fcoml
lea
popa
in
sbb
jo
sbb
xor
and
lods
sti
fs
into
js
cwtl
cltd
js
mov
or
jns
sbb
jbe
scas
enter
movsb
aas
maxps
mov
pop
cmp
jae
repz
mov
jl
in
int3
push
in
dec
xor
add
inc
mov
mov
mov
cmpsl
aas
in
pop
cli
jno
test
sub
rol
xchg
fwait
cltd
adc
fmulp
push
sub
or
int
sti
fadd
xor
mov
fisubrl
mov
je
imul
lcall
pop
mov
xlat
les
pop
mov
jg
jle
leave
fsubrl
push
ret
test
fistps
push
jbe
out
je
mov
sbb
sbb
test
mov
pop
fcoml
lahf
sub
cmp
or
adc
out
mov
adc
mov
dec
cmpsl
mov
and
aad
and
cld
loopne
cmpsl
scas
shlb
xchg
popf
test
movsl
or
fsubrs
and
sbbl
mov
xchg
stc
int
jne
pop
ljmp
inc
mov
pushf
or
add
pop
xor
sti
aad
fiadds
pop
mov
cmp
jmp
cltd
dec
push
cld
pushf
push
cltd
mov
cmpsl
subl
push
xchg
loop
mov
cmp
arpl
jo
shl
nop
js
js
xchg
and
push
data16
lods
pop
test
mov
sarb
mov
add
lods
xchg
or
sub
push
sbbb
imul
pop
adc
xchg
bound
les
mov
enter
sub
ljmp
cli
outsl
ljmp
push
or
add
dec
nop
xor
rep
lcall
and
aaa
add
mov
jne
mov
jns
shrl
fimuls
push
lea
in
cmp
dec
push
lock
inc
jmp
add
push
mov
test
or
cmp
test
mov
mov
mov
dec
or
test
xchg
pop
sahf
popa
mov
mov
imul
mov
fsubrs
sti
mov
mov
push
add
mov
in
mov
pop
pop
jecxz
rorb
gs
cmc
lods
into
flds
gs
sub
mov
add
loope
mov
repnz
sub
adc
das
jno
adc
xor
filds
jmp
xchg
pop
or
lods
fs
add
lea
es
add
call
jge
xchg
adc
bound
adcl
test
mov
clc
movsl
int
addr16
hlt
sbb
insl
and
mov
rcrb
mov
mov
sbbl
xchg
xor
pop
call
stos
imul
aad
push
outsl
push
popf
jae
aas
ret
dec
out
xor
xchg
or
pop
push
mov
leave
jnp
stos
nop
outsb
dec
and
jbe
or
pop
arpl
cmc
ret
sbb
sbb
fsts
lea
rolb
push
fbld
lock
sar
iret
in
jecxz
psubb
out
jle
sub
das
xorl
mov
xchg
or
inc
push
and
cmp
or
shrb
jg
push
out
fistpll
xchg
mov
cmpsb
inc
xchg
das
fmul
pop
xor
jno
xor
out
mov
adc
sbb
pop
cmp
or
mov
hlt
arpl
and
xorl
mov
mov
jae
call
pop
sub
xchg
sub
mov
xchg
lock
addl
das
adc
flds
in
shl
out
movsb
add
fisubs
ljmp
js
jge
pop
mov
xlat
mov
repz
dec
test
cmp
js
pand
sarb
mov
and
inc
or
mov
test
inc
jae
stos
lahf
mov
inc
mov
sbb
lods
mov
mov
mov
jae
popf
les
nop
scas
mov
mov
sbb
pusha
stos
add
cmp
shll
cmp
sarb
addl
mov
dec
jnp
sub
call
sbb
clc
mov
add
fstp
in
icebp
mov
out
scas
fistpl
inc
idivb
fstps
in
orl
scas
imulb
fnstcw
clc
ss
js
cmp
clc
negl
enter
imul
mov
cmp
sbb
jne
mov
sub
and
xchg
sub
inc
pop
jg
add
inc
add
push
mov
out
sub
sbb
inc
sub
les
sbbl
enter
mov
or
loop
addr16
or
inc
into
jle
mov
mov
jns
into
push
sub
icebp
adc
xchg
xorb
pop
out
cld
es
bound
arpl
push
mov
scas
ljmp
mov
dec
ret
push
adc
mov
mov
dec
fwait
xor
cmp
jo
inc
jl,pt
and
mov
outsb
shrl
inc
insl
xor
pop
xor
add
sub
cmpsb
add
test
inc
fs
or
mov
add
int3
js
add
bnd
jl
rol
lret
imul
jmp
ficomps
inc
pop
lods
ds
add
shll
into
add
adc
outsl
or
fdivr
mov
pop
dec
movl
cwtl
pop
and
mov
mov
dec
jns
scas
jbe
rorl
add
test
mov
inc
call
dec
jae
and
mov
movsl
xchg
and
sub
cltd
xor
sub
cld
xor
cmpsb
jecxz
or
mov
and
int3
mov
pop
es
cltd
std
loop
pushf
push
push
test
push
push
sub
or
lret
push
mov
filds
ret
in
xor
mov
movsb
mov
faddl
jg
cmp
pop
and
xchg
gs
loop
inc
mov
out
pop
mov
push
xchg
inc
xchg
cmp
lret
ljmp
ds
or
dec
addr16
ss
lock
cli
xor
arpl
mov
xchg
mov
mov
pop
jo
fucomp
or
leave
mov
adc
aas
sbb
xchg
cmp
xor
loopne
outsb
lock
gs
mov
push
add
int
sub
ljmp
gs
xchg
xor
fcomip
popf
pop
dec
pushf
cmc
xchg
ss
or
or
pop
sbb
sti
push
and
mov
lock
fildl
push
inc
add
jg
mov
int
xchg
pop
and
mov
cmpsl
dec
mov
lret
mov
mov
das
mov
rcl
into
adc
jnp
jl
sbb
test
ds
jbe
mov
dec
or
lods
pop
out
repnz
adc
lahf
push
cli
mov
mov
jbe
rcl
xchg
pop
and
and
mov
adc
inc
jns
pop
mov
shl
stc
ljmp
jbe
hlt
cwtl
pop
mov
loopne
mov
jge
sbb
pop
in
pop
xchg
cli
inc
mov
jbe
xchg
inc
dec
push
mov
jecxz
xor
addr16
das
movsb
xchg
mov
push
cmc
insb
mov
iret
lock
lcall
mov
push
jne
aam
push
clc
cmp
nop
adc
jg
int
gs
repnz
nop
sbb
mov
in
pushf
outsb
addr16
or
into
inc
pushf
mov
mov
sti
sub
incl
jo
xchg
add
int3
es
std
xchg
inc
aad
iret
in
mov
movsb
dec
add
into
xchg
lahf
shrl
stos
je
pop
push
jb
movsl
bound
repnz
add
or
leave
pop
jl
mov
push
lods
faddl
sarb
push
sub
cmpl
out
stos
cwtl
ds
dec
aas
inc
fwait
repz
push
add
adc
push
loope
dec
mov
fdivs
adc
lods
xchg
xor
adc
mov
fs
mov
pop
rorb
lret
sahf
mov
daa
std
scas
fnsave
es
imul
imul
or
sti
lahf
mov
mov
dec
dec
fcoml
jbe
sbb
push
sbb
or
mov
rcrl
roll
or
push
inc
push
adcb
cmp
rorl
and
fildll
lods
daa
aaa
ret
sub
push
dec
add
xor
loopne
sub
cwtl
imul
xor
in
lods
xor
cmpsb
inc
addb
in
dec
aaa
unpckhps
push
adc
fnsave
ret
leave
outsb
jns
pop
pop
fcoml
stos
loopne
xor
adc
dec
fldcw
loope
mov
mov
addl
pop
mov
in
inc
shrl
pop
xlat
inc
daa
xchg
pop
push
and
lods
xchg
jge
sub
ds
jne
fs
insl
inc
push
jbe
dec
xor
pop
loop
or
inc
out
xor
in
jp
in
and
out
jle
adc
push
mov
lds
dec
out
ret
cmp
mov
dec
xchg
sti
into
or
mov
and
cwtl
jne
aad
adc
push
outsb
cltd
pop
ret
jg
jae
pop
inc
dec
cwtl
sub
scas
mov
mov
push
das
in
mov
xor
mov
xchg
sub
fmuls
cmpsl
jmp
sub
add
pop
cmp
and
or
movsb
add
je
leave
lahf
cmp
sbbb
cmp
bound
cmp
js
or
sbb
arpl
gs
pop
mov
add
xor
das
sub
mov
mov
jae
mov
jo
push
xor
sbb
std
arpl
and
dec
outsl
js
cvtps2pd
cltd
cmp
mov
dec
mov
push
mov
add
xor
xchg
push
in
and
stc
add
les
jge
mov
and
negl
adc
push
inc
pop
xchg
cmpl
adcl
ror
mov
imul
sbb
movsb
pop
push
sub
push
aaa
dec
test
sbb
fdivs
loopne
xchg
push
or
add
or
fs
sub
cltd
bound
dec
lcall
outsb
pop
add
xchg
jne
imul
out
lock
enter
data16
xchg
scas
es
cmp
mov
push
cmpsl
into
and
mov
fnstcw
mov
aaa
xchg
pop
pop
cltd
adc
out
cmpb
fisubl
mov
mov
clc
and
pop
outsb
jecxz
adc
das
jp
mov
and
and
inc
call
out
inc
pop
inc
xchg
imulb
je
repz
cmp
cld
fwait
xchg
cs
addl
adc
rorl
lods
push
repnz
int3
mov
mov
or
cli
xchg
pop
std
mov
jne
inc
adc
test
les
enter
in
mov
stc
dec
cwtl
pusha
ss
sbb
or
push
sti
js
inc
lds
pop
push
cmp
sbb
in
pop
sub
push
test
aad
cmc
cltd
jbe
in
das
xor
sbb
xor
inc
imul
into
sbb
cmp
push
mov
addr16
cmp
mov
loopne
pop
out
jmp
mov
dec
or
dec
out
shlb
sub
and
push
pop
arpl
repnz
cmp
sti
out
add
adc
mov
scas
iret
cmp
stc
sarb
xor
es
test
loope
mov
pop
push
movsl
mov
or
push
fldenv
aad
in
idivb
cmpsl
inc
pusha
imul
jl
in
testl
pop
mov
or
pop
or
xor
xchg
imul
loope
mov
sub
push
jb
call
insl
ficomps
xor
mov
xor
or
adcl
fwait
and
movsl
mov
cmpsl
mov
orl
mov
dec
insl
pop
dec
dec
sub
lcall
xchg
add
and
loopne
xor
je
sub
xchg
cmp
add
xchg
push
jno
test
cmp
cmp
pop
cwtl
mov
scas
movsb
popa
inc
sub
sub
pop
xor
insb
jae
testl
test
popf
inc
cmpsb
pop
push
sub
sbb
stos
mov
jno
mov
mov
adc
cmp
push
xchg
jae
mov
jl
adc
inc
mov
jnp
sub
fistpl
xor
fsubrs
leave
daa
std
outsb
cmp
sub
fsub
mov
shll
arpl
push
les
add
pop
movsl
sub
dec
test
jl
test
mov
faddl
push
enter
push
inc
mov
mov
and
jb
addl
scas
mov
cmc
push
mov
sbb
add
push
in
cmc
mov
xor
out
aad
add
jae
and
sbb
xchg
dec
adc
or
adc
push
out
inc
loope
mov
xchg
gs
ficompl
out
flds
ret
lret
fld
xchg
test
pushf
mov
jle
jno
mov
xchg
mov
je
cmp
or
fists
in
pop
data16
pop
pusha
jl
xor
cmpl
push
fstp
test
das
ret
shlb
cmp
mov
stc
int
sbb
mov
sub
enter
or
adc
push
gs
out
aam
test
in
lods
and
mov
dec
pop
or
xor
jnp
cmpsb
dec
dec
xchg
jne
or
fsubrl
fcomps
lods
jmp
lock
out
mov
jp
inc
sarl
shlb
lea
lcall
std
ret
adc
cmp
imul
pop
mov
mov
leave
dec
cli
icebp
outsl
test
out
and
leave
jecxz
jnp
jp
out
dec
in
or
or
sub
adc
fistps
out
or
dec
inc
push
in
jnp
cmp
dec
adc
fstps
mov
push
sarb
jbe
xchg
jle
sub
dec
das
push
cs
mov
mov
mov
or
ljmp
movsl
inc
fnstcw
mov
xchg
insb
mov
add
outsl
or
push
icebp
mov
lock
scas
dec
ja
or
cmpsl
lahf
in
sub
fwait
mov
sarb
xchg
mov
dec
pushf
xor
and
repz
jg
jl
std
jno
inc
imul
mov
cmpb
xor
sbb
xchg
push
mov
out
arpl
and
pushf
pop
cmp
fidivl
dec
pandn
movsl
push
aam
je
cwtl
sub
jle
cmpsb
and
flds
push
dec
cmp
cmp
js
mov
fdivl
into
sub
js
sbbl
inc
pop
pop
inc
lea
mov
mov
test
lahf
sbb
dec
sbb
in
fldenv
add
xchg
in
dec
arpl
fcompl
test
mov
shlb
mov
mov
or
shll
xchg
ljmp
lds
mov
sub
sub
out
data16
shll
mov
inc
outsl
push
push
jge,pn
loopne
mov
call
in
dec
dec
inc
sub
add
in
jg
lods
mov
in
in
call
mov
fbld
mov
dec
pushf
nop
test
and
neg
sahf
xchg
je
adc
ss
pop
mov
push
cmpsb
in
imul
ja
and
jge
sti
add
pop
in
xchg
mov
sub
scas
scas
sub
push
shlb
dec
mov
cmp
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
jns
sub
jp
loop
fwait
jle
push
sahf
idivl
movsl
mov
and
repnz
or
rcll
out
dec
ret
lock
push
adc
call
adc
je
cmc
call
cli
jo
nop
fisubrl
xchg
aam
movsb
loopne
cmp
rep
je
xchg
dec
dec
xchg
mov
mov
mov
jp
jl
and
dec
dec
arpl
pop
cwtl
adc
cmp
push
fisttps
dec
mov
es
push
lcall
sahf
sbb
and
pop
mov
out
xchg
or
popa
xchg
bound
xchg
mov
mov
popa
mov
cwtl
cli
mov
std
mov
lahf
or
cmc
mov
and
out
pop
and
sbb
test
insl
test
mov
inc
orl
shl
xor
loope
in
sub
adc
testl
arpl
or
xor
fsubr
fists
cmpsb
or
pop
or
inc
pop
ret
jns
sbb
mov
pop
add
push
inc
mov
nop
popa
lock
test
mov
scas
loopne
jmp
pop
xor
xchg
add
iret
jge
testb
cmp
push
mov
call
out
nop
lods
in
mov
fwait
icebp
push
xchg
xorl
push
jl
adc
div
push
dec
in
outsl
sbb
mov
cltd
jge
inc
neg
repnz
cmp
mov
std
int3
adc
lret
add
xor
movsb
pop
mov
sub
mov
in
int3
jmp
nop
loop
pop
fs
sbb
dec
in
jle
fdivrl
lret
jmp
iret
mov
push
jle
nop
mov
lods
xor
push
mov
lahf
ss
pop
mov
punpcklwd
sub
repz
xorl
lret
xor
fs
push
mov
in
or
lahf
add
pop
mov
xchg
std
inc
cmc
mov
mov
fdivp
or
int
out
sub
movsl
rol
mov
mov
cld
sbb
push
hlt
ja
or
lret
insb
rep
ds
std
dec
xchg
push
idivb
jle
mov
dec
xchg
adc
or
mov
hlt
inc
lods
xchg
dec
lea
jnp
std
mov
mov
xchg
hlt
jae
scas
sbb
mov
cli
sbb
and
and
or
pushf
xlat
push
mov
mov
and
push
imul
loope
push
pop
or
fidivl
and
out
sahf
addl
dec
xor
xchg
ror
repz
ret
xorl
loope
faddl
sbb
xchg
or
aaa
fmuls
and
inc
aad
push
push
cltd
or
sbb
inc
out
iret
movsl
xchg
ds
mov
lods
jb
or
mov
nop
dec
adc
enter
adc
mov
dec
mov
std
inc
or
test
stos
jno
push
inc
insl
addb
push
imul
sti
mov
cmp
cmp
faddl
pop
push
js
cmp
std
ret
gs
mov
lea
pop
dec
jge
enter
and
dec
ds
data16
push
leave
xchg
mov
es
inc
scas
cld
or
ss
cs
sub
xorb
aam
aas
jl
add
xchg
out
cmpsl
data16
sub
xor
sub
jnp
dec
pop
cmp
movsl
fs
add
fnstsw
out
push
or
xlat
movsl
mov
and
aaa
popf
daa
mov
adc
out
push
sbb
mov
lea
inc
xor
gs
mov
daa
adc
adc
ret
lock
nop
or
mov
outsb
or
mov
mov
dec
cli
fs
shr
add
out
inc
push
jae
fcoml
sub
mov
shlb
lock
rorb
or
je
and
sub
fcomps
pusha
ficomps
out
shr
sysret
jnp
test
push
std
sbb
std
cmpsl
sbb
insb
stos
mov
ja
xor
sub
out
fwait
sbb
mov
mov
and
addb
stc
mulb
iret
inc
sbb
dec
xor
mov
scas
mov
cld
jl
ficoml
mov
add
lds
or
ret
push
pop
adc
inc
lret
ljmp
adc
mov
push
xlat
mov
jge
push
xlat
cmpsl
mov
add
add
cld
and
mov
sub
pop
jo
inc
and
cli
jl
lock
sbb
jae
fcomip
mov
pusha
sti
imulb
dec
mov
das
adc
dec
divl
sahf
cmc
scas
pop
and
aam
sub
inc
rcrb
shl
movsl
mov
inc
or
popf
xchg
and
insb
in
jmp
dec
dec
fs
nop
xchg
inc
add
leave
faddl
jecxz
lea
mov
dec
sub
pop
jne
std
inc
xor
imul
test
sub
stc
test
and
xlat
test
and
jo
add
or
push
xchg
loope
sbb
movsl
or
adc
mov
data16
jno
scas
in
jbe
ss
lods
push
jge
sbb
xchg
icebp
sub
decl
pop
cltd
jo
pusha
stos
mov
out
lock
push
fisttpl
mov
dec
pop
jge
mov
rcll
sti
repnz
int3
loop
nop
or
cli
adc
mov
into
dec
js
pop
imul
les
mov
cmp
push
xor
lahf
aad
movsb
aas
jmp
push
inc
mov
aaa
pop
dec
jbe
push
dec
lret
les
ljmp
push
lds
lea
shll
or
sub
bound
sahf
sbb
clc
jp
fstps
pop
in
and
pop
mov
inc
nop
and
test
movsb
and
ja
push
nop
and
int3
shrb
sub
out
adc
inc
imull
and
cld
loopne
mov
and
inc
pop
mov
mov
xchg
dec
addr16
movsb
jno
sub
fldcw
aam
shlb
sbb
imul
daa
inc
mov
adc
sbbb
pop
mov
dec
pushf
sub
mov
iret
sbb
mov
push
dec
mulb
enter
inc
mov
or
pop
sbb
out
fcomi
ja
lods
jl
out
in
pop
adc
mov
xchg
repnz
jae
in
pop
sarb
or
mov
leave
jbe
sub
stos
xchg
clc
push
imul
ret
int
int
push
cmpsb
movsl
mov
push
mov
ret
mov
push
or
test
in
rcrb
add
sbb
mov
pop
add
sub
jp
add
xor
std
push
push
rcrl
daa
insb
dec
or
mov
xor
mov
repnz
sbb
inc
fiadds
push
in
test
mov
pop
insb
imul
fsubrs
lods
inc
adc
enter
sbb
inc
leave
push
out
dec
in
imull
int3
jbe
jl
sub
pop
jbe
call
mov
outsl
xchg
lret
lds
inc
and
mov
lods
push
jmp
ja
clc
or
fiadds
in
jp
cwtl
out
out
sub
fldcw
push
mov
sti
adc
je
ret
push
cmc
shlb
outsb
xchg
xchg
in
xchg
sahf
cltd
jbe
loop
fildll
rcrb
ret
xorb
orb
mov
xchg
cmp
sbb
xor
jbe
test
dec
jg
sbb
es
scas
repnz
loope
adc
jno
or
cwtl
outsb
dec
in
jecxz
xchg
sarl
and
jbe
sub
loopne
std
es
cmp
jae
das
dec
cmpsl
aaa
xchg
shlb
dec
fimull
dec
stc
sub
and
jp
pushf
aam
push
sub
ffree
push
jmp
lahf
stos
and
xchg
test
sbb
dec
jmp
sub
and
jno
push
cwtl
dec
shrl
aam
dec
fs
repz
jne
insl
daa
mov
mov
mov
cwtl
add
pop
ja
mov
xor
sbb
sti
loopne
cld
leave
lret
mov
mov
cmp
dec
mov
and
stc
push
xchg
pop
cmpsl
lock
add
out
or
imul
or
popa
sub
imul
push
insb
insb
mov
push
add
mov
std
jmp
add
movhps
dec
ss
dec
dec
xchg
xchg
out
xchg
popf
adc
mov
jnp
daa
sub
lahf
int
leave
jge
inc
mov
andl
adc
stos
add
loop
ss
mov
and
inc
sbb
mov
add
repnz
adc
dec
mov
insl
lahf
aam
or
inc
mov
xchg
stos
in
jmp
jp
loope
scas
pop
adc
data16
mov
mov
jmp
adc
jbe
bound
mov
mov
cltd
das
cmp
mov
sub
sbb
pop
mov
cmpsb
inc
add
xchg
loope
jmp
sub
out
pop
cltd
mov
bound
in
imul
sub
or
dec
adc
jmp
mov
xchg
outsb
stc
or
pop
cli
test
lret
cmc
mov
and
inc
insb
mov
pop
mov
jge
imul
mov
push
sti
mov
jo
call
inc
adc
sbb
jne
rolb
xorb
into
jmp
xlat
addl
sbb
stos
imul
jg
pop
test
add
int3
and
je
pop
scas
call
pop
mov
adc
add
popa
mov
mov
addr16
rclb
xor
mov
pop
jnp
mov
lods
mov
xchg
xor
mov
sbb
xchg
jg
scas
push
cmp
out
cld
sbb
jge
add
xor
scas
inc
loope
or
int
xchg
adc
mov
cmp
in
pop
jge
subb
jns
push
cwtl
add
in
rclb
jle
pop
or
int
out
mov
mov
lock
fwait
xor
aaa
xchg
pop
cmp
add
sbb
aad
mov
mov
dec
add
jbe
cmpb
test
mov
or
addr16
test
pop
and
in
js
jnp
cmp
insb
inc
popa
insb
push
and
dec
inc
out
outsb
cmpsb
scas
add
inc
dec
jbe
and
int3
cmp
or
stos
jnp
and
push
movl
jle
mov
fsub
sti
lods
sbb
ss
push
push
xor
in
sub
cs
shll
push
push
dec
popf
roll
adcl
shrl
jp
dec
pop
pop
xchg
aas
inc
out
arpl
mov
in
mov
dec
cwtl
and
mov
orl
ja
inc
xor
sarl
jecxz
jl
inc
add
fidivs
push
pcmpeqw
test
pop
jo
push
sbb
add
imul
inc
sub
leave
loop
jg
jl
pop
dec
mov
xchg
push
negl
add
rorl
fsts
cs
sub
je
mov
pop
mov
and
or
adc
inc
and
sarb
jp
shlb
dec
or
push
mov
fimull
ret
xchg
mov
inc
jp
outsb
js
je
jp
and
cmpsl
in
jo
push
pop
add
pop
mov
in
nop
insl
push
fsubl
push
inc
fsubrl
pop
je
mov
xchg
andl
lea
mov
mov
sbb
cmc
jg
mov
mov
adc
mov
jno
adc
push
out
clc
dec
subb
pop
push
push
push
test
icebp
hlt
push
or
lret
push
jne
outsb
cltd
cmpsb
lcall
pushf
std
jae
push
stc
arpl
mov
push
mov
cmpsb
popf
out
mov
jne
into
hlt
lahf
addb
addb
pop
clc
outsl
ror
cli
and
mov
rclb
and
ja
ja
nop
mov
pop
push
pop
shrb
iret
adc
popw
adc
xor
arpl
out
in
mov
adcb
xor
lock
xor
pop
fwait
push
and
pop
test
mov
aas
pop
leave
int3
adc
cs
adc
fcomip
cmc
sub
fdivs
sbb
jmp
movsb
xchg
jno
dec
or
mov
push
or
and
lea
inc
jae
mov
xor
pop
movsl
out
mov
in
adc
in
inc
and
test
xchg
push
popa
jge
loop
mov
xchg
ljmp
jg
jg,pt
shlb
add
dec
sub
mov
xor
xlat
cli
pop
push
xor
out
jp
loope
cs
addr16
dec
mov
mov
sbb
ss
mov
jno
lret
pop
push
mov
or
xchg
push
jmp
ja
sub
shl
mov
pushf
jg
rol
icebp
leave
aad
dec
adc
loope
cmpsb
and
jmp
mov
sbb
and
and
push
daa
mov
mov
jp
sub
imul
inc
sub
pop
cs
add
adc
jg
clc
pop
pop
jmp
push
add
enter
movsl
lods
lock
sbb
out
pop
fldenv
jg
inc
xchg
jbe
jecxz
pop
xchg
dec
push
cs
ds
popa
mov
jmp
insl
mov
sbb
sbb
outsb
lret
int3
ds
add
jbe
sub
pusha
sub
ds
and
or
xchg
mov
push
fimull
adc
add
pop
inc
sbb
gs
add
adc
cmp
xor
mov
and
cmp
pushf
dec
lcall
ror
inc
int
inc
loopne
inc
call
lock
push
shl
scas
fsubrs
jb
loope
push
xlat
or
aam
jbe
jp
aad
outsb
std
inc
fwait
mov
mov
lea
mov
shrl
mull
mov
pop
faddl
dec
push
and
cwtl
pop
mov
loop
cmp
shl
add
out
leave
xchg
aam
sbb
jmp
jg
xchg
test
and
test
push
popl
subb
mov
mov
popl
or
imul
xor
scas
xorl
lcall
int
mov
in
pop
pushf
sbbb
decb
ds
jb
shll
add
or
hlt
repnz
pop
lds
fmul
shrl
add
inc
jo
jmp
mov
mov
and
xchg
fdivrs
push
les
sahf
out
test
daa
outsb
xchg
lods
mov
mov
lcall
std
dec
outsb
mov
bound
aam
xchg
jg
cltd
cmp
push
movsb
mov
fdivrl
mov
xchg
add
outsl
iret
sbb
sub
dec
mov
pushf
test
add
adc
fisubl
xor
negb
inc
cmp
in
fwait
out
rclb
sbb
fsubl
es
sub
add
dec
mov
inc
mov
jecxz
inc
jae
int3
ljmp
mov
sbb
jmp
popf
pop
inc
stos
loop
sub
dec
sub
add
out
sarb
in
xchg
mov
cltd
ss
sahf
aaa
cmp
stc
and
mul
mov
jnp
mov
addr16
add
mov
mov
push
push
mov
push
rcll
cmpsl
push
fnsave
leave
dec
xorl
mov
outsb
insl
add
fldcw
add
sbb
iret
test
cmp
scas
mov
lea
ja
imul
in
into
in
rorl
int3
xor
push
clc
cmp
leave
inc
cli
add
sahf
and
fisttpl
idivl
add
xor
or
xor
lods
cmp
add
cld
mov
mov
jmp
enter
and
loope
jge
negl
das
mov
dec
ja
popa
lret
adc
mov
nop
lret
push
lcall
sti
xor
test
or
cmp
stos
xchg
and
cmpsb
dec
rcrb
push
dec
outsb
dec
cld
jo
frstor
mov
mov
repnz
mov
cwtl
inc
movsl
adc
cmp
out
jne
ja
mov
or
add
jg
stos
xor
ss
sti
push
daa
aas
pop
call
xorl
shlb
and
loop
out
and
lret
and
cltd
mov
or
pusha
pop
inc
stos
lods
jnp
in
pushf
sbb
inc
adc
xchg
addr16
xor
aam
xchg
int3
pop
cmp
adc
adc
cltd
sbb
and
and
fisttpll
inc
mov
setbe
mov
scas
cmpsl
iret
xchg
adc
mov
mov
add
mov
hlt
jo
out
jns
shll
mov
xchg
lcall
mov
dec
pop
adc
repnz
add
jbe
inc
and
mov
cmp
int
push
cli
call
mov
fs
mov
mov
stos
outsb
pop
nop
fsts
cmp
leave
in
out
add
add
scas
sub
jge
push
not
rcll
inc
xchg
ss
mov
arpl
andl
add
or
cwtl
out
pop
lock
aas
push
pusha
out
clc
xchg
cltd
inc
push
test
pop
mov
jl
jmp
fistps
xchg
pop
pop
and
dec
add
scas
aaa
icebp
ss
repnz
rorb
rcll
cmp
out
insl
jp
inc
repz
adc
lea
push
sub
jmp
jl
sbb
aaa
cmp
rcll
fsts
int
xchg
xchg
lods
daa
and
xchg
mov
inc
adc
mov
jo
rcll
popf
cmpsb
mov
mov
xor
repz
pop
xchg
mov
mov
add
arpl
and
dec
cmc
xorb
adc
imul
insl
xchg
xchg
jnp
sbb
push
popf
das
xchg
or
and
cltd
jb
dec
mov
sub
les
push
cs
jmp
sbb
nop
xor
dec
shl
in
test
ret
fidivl
dec
dec
jae
test
aas
dec
pushf
or
or
adc
sub
sbb
adc
xchg
fwait
into
add
xchg
jb
popa
das
insl
inc
loopne
push
push
test
mov
roll
cltd
push
dec
test
and
jle
and
jbe
inc
xor
push
fsubs
ret
xor
pop
cmpsl
shlb
inc
mov
es
mov
enter
push
jne
rclb
jmp
inc
jmp
loope
cmpsl
les
aad
sub
stc
sahf
pop
xlat
movsl
iret
shl
cli
icebp
lds
popf
sbb
ret
mov
or
inc
addr16
test
xor
test
push
cltd
andl
nop
sub
jbe
sahf
mov
vmwrite
repnz
cmp
or
loope
sahf
adc
aad
hlt
loop
push
stc
xor
inc
mov
mov
pop
dec
pop
testl
add
and
cmp
repz
das
rcll
inc
jo
into
loop
int3
hlt
js
movsl
popf
test
scas
leave
loop
jecxz
lds
or
js
sub
into
xlat
xchg
push
fildll
cmp
push
cmp
cmp
sahf
fwait
aad
dec
loop
out
xchg
mov
addl
popa
mov
jmp
rcrl
mov
sbbl
mov
mov
in
aaa
call
out
sub
inc
fstp
insl
inc
clc
mov
out
std
ficompl
add
subl
mov
jne
dec
mov
add
fidivl
add
fiaddl
iret
sbb
loop
dec
cmpl
add
pop
dec
mov
push
out
ret
popa
test
and
rcr
out
add
jp
xchg
xchg
xchg
inc
cmpsb
sahf
fwait
jns,pn
jl
subl
mov
jbe
inc
push
addl
das
dec
in
ret
iret
push
push
stos
iret
and
sub
aas
dec
jbe
cmp
dec
inc
jbe
aaa
and
inc
push
and
je
mov
jb
push
aad
inc
adc
outsb
mov
xor
pop
inc
jae
sahf
push
mov
shlb
lods
pop
mov
or
mov
jno
inc
scas
outsl
repz
lods
cmpsl
insb
cld
orb
jnp
jnp
inc
std
mov
outsb
jnp
add
mov
dec
mov
sarb
cmp
loop
xor
orl
out
ror
pop
enter
mov
xchg
cltd
jnp
clc
or
sub
jp
push
cmp
add
mov
ret
jge
aad
xlat
sub
scas
jns
test
mov
jg
or
and
and
int3
in
xor
and
into
push
jl
jp
inc
or
pop
int3
into
in
insl
sub
in
xor
or
hlt
add
dec
ror
adc
mov
add
xor
test
pop
xchg
or
lcall
sub
popf
out
or
pop
enter
pusha
int3
lods
stc
push
inc
inc
push
in
jne
xor
lock
scas
jns
jb
repz
mov
lea
mov
cmp
and
ds
rcrl
lea
push
repz
xor
xchg
push
daa
stos
pop
out
inc
cmp
fidivs
jl
xor
push
xchg
push
lret
or
mov
inc
out
push
pop
jb
out
jns
or
xor
imul
cltd
mov
dec
push
pusha
add
gs
add
adc
int
adc
jae
inc
add
imul
cli
or
push
loopne
adc
addr16
jae
ja
and
lret
xchg
les
popf
mov
cmp
mov
xor
and
ja
ja
stos
push
dec
in
aam
sub
dec
adc
inc
push
fwait
xchg
push
neg
cli
push
imul
add
cli
dec
mov
imul
cmp
adc
aam
loopne
sahf
pop
push
mov
aaa
jge
jg
add
jb
cli
mov
cli
cwtl
addr16
insb
daa
mov
test
fiaddl
dec
push
push
aaa
cmp
mov
push
push
mov
out
sbb
mov
loop
ja
scas
pop
lret
sarb
rcll
cmc
scas
jo
push
lahf
jae
test
int3
xor
mov
fildl
jmp
pushf
icebp
addb
pop
jmp
jl
mov
call
push
aaa
jb
into
fwait
out
int3
jmp
ret
outsl
xchg
mov
jae
ret
mov
bnd
inc
lcall
add
mov
jmp
call
mov
les
mov
cwtl
lods
mov
add
jae
add
pop
popf
loopne
xchg
test
adc
daa
jecxz
jp
repnz
lcall
ror
icebp
and
mov
aas
cld
out
cmp
xor
jl
pop
and
sbb
xchg
imul
pop
stc
sbb
push
leave
xchg
cmc
xchg
add
fldl
push
cmp
mov
adcb
cli
xchg
jb
mov
dec
mov
dec
insl
movl
mov
add
jmp
mov
pusha
inc
sub
fs
xorb
je
sbb
lods
add
mov
ss
les
mov
adc
lret
gs
pop
in
xchg
cmp
fdivs
icebp
sub
ficoml
adc
data16
fsubs
je
data16
jle
shrb
negl
aaa
xor
jo
iret
cld
push
int3
mov
fnstsw
ret
test
pop
push
imul
loope
iret
in
shl
addr16
pop
sub
xchg
mov
xchg
push
out
xor
sub
pop
fs
or
lock
out
iret
xchg
pop
imull
push
lcall
cwtl
pop
cltd
dec
fsubl
xchg
leave
jns
loopne
push
pop
mov
cwtl
or
fcomps
xchg
sub
mul
int3
sbb
mov
faddl
adc
cmpsb
add
repz
xor
cmp
arpl
sub
xchg
xchg
ret
cmpsl
cmp
xlat
mov
sti
cmp
mov
hlt
popa
or
test
out
aad
mov
je
imul
inc
or
inc
sub
or
aas
pusha
cmp
sub
movsl
fstpl
mov
ret
push
sub
stos
leave
xchg
xor
push
jns,pt
add
mov
sub
xor
repz
cmp
cmp
movsl
xor
insl
inc
pop
dec
rclb
mov
push
jbe
jge
mov
adc
and
xchg
dec
push
orb
mov
shrb
inc
dec
dec
sti
ljmp
cmp
fsubrs
xor
mov
xchg
imul
cmp
adc
cmpsb
lret
and
int
in
fnstcw
cltd
lret
mov
push
push
or
sqrtps
add
mov
xchg
insb
lods
mov
vpacksswb
jmp
pop
es
inc
daa
ficoml
and
adc
sub
aad
cmp
fsubs
inc
sub
pop
inc
xlat
pop
sbb
subl
cmpsb
data16
fwait
std
je
sti
pop
adc
push
bound
jnp
or
xlat
shlb
and
jmp
fs
push
fmul
push
mov
insb
pop
jnp
xchg
jmp
xor
mov
jno
out
sbb
setno
lods
sbb
mov
pop
sub
jge
shll
xlat
add
xor
add
ret
pop
xor
testl
jae
inc
mov
pop
xchg
popa
ds
rclb
jmp
cmp
sarl
loop
aam
or
xchg
fwait
aad
jb
xor
lock
fstpl
sub
inc
sbb
cwtl
dec
sbb
xlat
outsl
push
pop
imul
pop
ret
loope
das
adcb
or
or
add
lods
and
jne
adc
xchg
jae
add
sub
sub
xchg
xchg
out
or
pop
jge
jae
aas
outsl
xchg
cmc
and
lahf
push
push
xor
outsb
fstps
jbe
jmp
push
rcrl
pop
aad
test
jl
cmp
push
mov
lock
fistps
push
loop
sub
xchg
lock
into
test
jl
pop
daa
sub
and
orl
lahf
fwait
pop
lret
cwtl
sbb
ja
jp
arpl
xchg
mov
in
movsb
jae
dec
mov
mov
xor
mulb
lods
dec
cwtl
and
in
dec
lds
inc
in
add
or
repnz
xchg
adc
sbb
sub
inc
jecxz
inc
dec
mov
popf
adc
jb
sbb
jo
jecxz
sub
adc
add
push
mov
xchg
xor
enter
inc
mov
ror
loope
imul
sbb
push
xchg
cmpb
sub
mov
xor
in
pop
cld
repnz
rorl
les
les
adc
repnz
movb
fiaddl
idiv
clc
xor
jg
add
loop
out
push
rcrl
sub
adc
or
fsubl
fisubs
sbb
xorl
xchg
xor
je
pop
sbb
aad
push
xor
js
loope
cmc
cmc
rolb
dec
stc
loop
and
push
sbb
jmp
test
in
dec
cltd
jno
es
cltd
and
push
dec
lods
test
lcall
dec
xor
mov
into
inc
and
aad
sub
inc
dec
pop
test
adc
movsl
cmc
loope
xlat
and
push
sahf
or
dec
and
pop
in
mov
xor
or
mov
inc
inc
jmp
lods
loop
sbb
push
rorb
inc
mov
mov
jecxz
xor
push
outsb
lahf
xchg
cmpsl
pop
inc
jg
out
mov
jnp
jge
sbb
sub
out
mov
push
aam
mov
dec
jle
nop
jecxz
mov
sub
inc
add
adc
jo
sahf
scas
adcl
adc
jnp
and
test
mov
or
ret
clc
add
popa
fadd
in
and
mov
out
fwait
jbe
or
or
call
adc
clc
sbb
int
push
inc
mov
dec
mov
mov
mov
push
insb
lcall
mov
inc
gs
ds
cmc
mov
mov
int3
pushf
insb
pop
inc
ljmp
popa
fsubs
pushf
sbb
idivb
das
dec
pop
js
aas
cmp
jnp
xchg
mov
cmp
add
jns
mov
push
rorl
jno
mov
call
xchg
out
movsb
testb
jg
sub
xor
decb
mov
sub
aad
jne
lds
add
or
sbb
lret
jb
sahf
pop
xor
insl
xchg
mov
xor
fnsave
incl
sbb
lret
cmp
jle
cs
ror
cli
sti
mov
adc
dec
notl
fisubrl
jo
push
sbb
inc
pop
push
orl
add
mov
popa
mov
and
push
and
mov
mov
jmp
fisttpl
loop,pn
mov
lcall
cmc
xchg
pop
sbb
out
test
xchg
roll
in
loopne
and
imul
sub
mov
push
daa
or
fadds
ds
dec
jp
popf
and
mov
orb
add
addr16
out
jl
cmp
ljmp
lcall
push
jo
cmp
push
mov
test
jae
test
mov
outsb
mov
adc
aad
popf
loopne
sbb
pop
jbe
scas
jne
cmpsb
mov
cmp
push
mov
stc
jmp
pop
xchg
scas
cmp
cmc
imul
jb
jno
mov
sub
pop
popf
int
out
ss
lret
fnstsw
hlt
xchg
test
dec
outsl
cmp
fwait
jae
pop
mov
pop
adc
fisubs
fimull
subb
push
in
mov
adc
xchg
in
jae
mov
lds
cmc
mov
mov
or
adc
pop
lret
mov
sbb
data16
mov
call
les
pop
cld
sub
or
cmpsl
divl
push
cmc
push
add
adc
push
pop
es
dec
xchg
cmp
roll
push
nop
call
enter
mov
adc
mov
stc
push
and
imul
incl
xor
or
icebp
into
adc
xchg
pop
test
fcoms
add
int
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
mov
push
je
jp
hlt
mov
stos
ret
push
daa
or
filds
movsb
push
std
scas
mul
insl
mov
and
mov
cmp
inc
dec
pusha
in
add
pop
cltd
loop
cmpsb
or
in
xchg
loopne
outsb
cs
pop
dec
sub
sub
and
pop
pusha
jne
mov
sti
xor
arpl
jg
pop
jle
fsubrs
fld
or
int3
mov
iret
mov
xor
icebp
mov
shl
sbb
push
add
bound
clc
mov
imul
in
pop
repz
cmc
aad
and
push
sub
jge
dec
cmc
mov
out
movsl
sbb
adc
inc
mov
gs
sub
inc
mov
push
pop
out
pop
mov
and
adc
shrb
inc
icebp
in
xchg
mov
ljmp
jg
inc
nop
inc
inc
push
add
aas
orb
mov
pop
ficompl
ret
sbb
mov
mov
xor
or
inc
xor
adc
js
push
call
dec
lods
lahf
adc
adc
iret
stc
sbb
in
cmp
hlt
aam
aad
mov
mov
bound
ror
in
fs
mov
jo
ficoms
cld
mov
inc
les
pop
push
daa
int
rorb
pop
test
ja
sub
test
daa
cmp
icebp
in
call
int
lods
pop
mov
add
lock
fisubrl
mov
xchg
sub
cmp
popa
fwait
in
pop
xorl
push
mov
mov
idivl
adc
xchg
inc
mov
xorb
ss
mov
mov
loope
sub
mov
repz
sbb
cltd
test
pop
dec
jp
cmp
sub
sbb
outsb
or
stos
fistpl
mov
mov
jb
popa
enter
adc
push
stos
push
add
stc
int3
dec
leave
cmp
inc
cmp
mov
outsl
mov
pop
lods
push
cmpsb
in
dec
sub
jb
sub
ljmp
lea
mov
sarl
cld
shl
jnp
sub
dec
xlat
decb
in
and
std
int
and
sub
scas
mov
cs
and
mov
ja
pop
inc
and
insb
mov
xor
push
test
mov
jmp
testl
adc
or
out
and
cld
in
cmp
outsl
fwait
mov
adc
flds
pop
dec
pop
or
nop
sarl
lods
ret
xor
ds
mov
jae
out
stos
pop
dec
fisubs
push
adc
imul
in
xor
out
incb
aaa
mov
jb
ljmp
cmp
xlat
sbb
insb
jmp
hlt
xorl
loop
lea
mov
push
pop
ficomps
lret
push
sub
pusha
shlb
mov
inc
xor
in
xchg
outsb
insl
aas
outsl
cmpsb
in
sbb
jg
adc
dec
js
xchg
fldenv
test
pop
mov
mov
leave
jl
scas
jge
loop
lds
mov
scas
xchg
dec
mov
push
das
insb
xor
jne
das
inc
inc
jl
mov
mov
xchg
pop
aam
out
loop
xor
pop
pushf
mov
pop
lret
lret
daa
pushf
ds
or
dec
popf
popf
arpl
lock
ret
mov
sub
ss
sti
xchg
call
mov
or
fisubs
sub
fisubl
fs
push
adc
std
in
jo
fdivrl
jne
mov
shll
sub
and
inc
pop
clc
lock
push
push
sahf
push
mov
or
adc
nop
push
int3
xlat
sub
and
cld
shlb
cmc
int
jbe
bnd
add
pusha
push
outsl
sbb
mov
leave
pop
mov
repnz
pop
sub
movsb
sub
pop
out
push
push
pusha
into
adc
mov
add
inc
int
xor
ljmp
add
stos
imul
clc
jg
arpl
sub
dec
push
in
test
mov
cmpsb
pop
or
and
arpl
xor
adc
inc
mov
push
add
lea
xor
pop
mov
lock
xor
mov
xchg
outsb
out
je
int3
scas
fs
das
int3
or
sub
and
sbb
ss
lcall
pop
inc
mov
cmp
cmp
nop
mov
mov
xor
jp
mov
push
lret
cmpsb
or
push
lcall
in
addr16
mov
lret
xchg
in
arpl
add
push
ljmp
xor
push
push
inc
inc
cmp
lock
cmp
or
lret
cmp
mov
add
push
inc
cmp
psubw
dec
xor
and
fistpll
cwtl
cli
popf
inc
enter
sub
cmp
and
add
and
cmp
clc
pop
aad
ja
stos
push
ja
ret
and
cli
xchg
push
je
or
xor
jecxz
sbb
jnp
hlt
push
call
out
xchg
dec
dec
data16
mov
jg
sbb
in
push
insb
ret
add
cmp
adc
mov
cmpsb
jl
nop
out
cmp
xor
ret
or
xchg
cwtl
out
push
js
mov
pop
das
xor
testl
loop
sbb
pushf
pop
lea
fistps
shr
clc
in
jno
push
xchg
xchg
aas
pop
sub
push
insb
xor
out
repz
jmp
cli
dec
lods
faddl
pop
data16
sbb
leave
dec
sbb
jp
mov
aaa
xor
add
xchg
stc
add
les
lcall
cmp
xchg
inc
mov
leave
xchg
adc
jns
not
sub
cmp
imul
test
inc
cli
jns
outsb
movsb
lock
js
xlat
jne
xchg
mov
adc
jl
cli
dec
mov
pop
es
mov
and
ja
fsubl
notl
add
xchg
mov
dec
inc
test
cli
mov
es
sub
xor
int3
in
movsl
or
leave
lret
push
repnz
mov
out
mov
outsl
sbb
shrl
inc
adc
jnp
push
sbbl
xor
sub
insb
mov
dec
push
mov
mov
clc
sbb
jns
mov
add
aad
out
gs
push
add
xchg
pushf
lret
lret
inc
lods
lds
ret
cmp
sbb
mov
test
fucomp
mov
addl
mov
ret
adc
pushf
cmp
jne
pop
adc
pusha
sub
pop
mov
movsb
jne
dec
xchg
adc
sub
imul
xchg
mov
add
mulb
outsl
dec
jae
cmp
push
dec
dec
mov
pop
sub
adc
cmp
pusha
stc
ds
aad
cli
push
pop
xchg
pop
hlt
and
cwtl
outsl
rorb
xor
nop
stos
cwtl
jns
cs
mov
jmp
jb
dec
push
fstpl
out
lock
js
mov
outsb
call
sahf
push
dec
and
xchg
cmpsb
in
and
xchg
jo
xor
push
mov
mov
in
icebp
xchg
pushl
mov
lcall
bound
mov
add
sbb
test
leave
dec
imul
repnz
addb
rcrl
out
pop
cmp
mov
sub
push
pop
outsb
cmp
insb
popa
push
cmpsl
mov
cli
inc
repz
mov
daa
popa
and
rclb
pop
jecxz
addr16
push
push
cmpsb
test
inc
jnp
push
mov
cmp
fisttpl
sub
fwait
cwtl
and
inc
lcall
loopne
inc
imul
les
orb
inc
mov
sub
test
aaa
jb
pop
pushl
xchg
loope
cwtl
xchg
add
aam
xchg
cmp
mov
jns
cmp
shl
jle
mov
sbb
mov
lcall
fsubr
xor
push
cmpsl
sub
mov
and
jp
sarl
rcrb
and
and
fisubl
dec
leave
mov
mov
xlat
inc
cmp
dec
sub
dec
lds
adc
das
pop
lret
cmp
mov
adc
leave
fs
stos
mov
flds
pushf
push
add
test
inc
addl
jle
jp
int3
pop
jl
rcl
sbb
popa
push
cmp
decb
cmp
lods
into
fistpl
push
negl
das
pop
mov
xor
jmp
mov
cmp
js
add
dec
cs
nop
sub
xor
pop
pop
and
stc
pop
jecxz
inc
out
mov
daa
xor
mov
test
add
inc
xchg
call
stc
sub
mov
out
shll
negl
dec
dec
and
xchg
push
ret
jo
js
xchg
jl
gs
out
mov
sbb
stos
pop
or
xchg
inc
xchg
sub
fcom
and
ss
fbstp
or
int3
sub
sub
test
jbe
xor
iret
mov
lcall
repnz
stos
imul
fstpt
mov
out
loope
push
sahf
mov
inc
jmp
mov
push
xchg
hlt
push
sbb
hlt
sbb
mov
cmp
pop
lahf
xor
pop
add
test
mov
addr16
mov
jnp
in
cmp
cmpb
outsb
lods
xor
add
sbb
push
lock
bound
xchg
imul
pusha
add
add
and
and
popa
clc
adc
and
xor
inc
jmp
jne
pop
pop
cld
dec
cmp
das
and
xlat
movsb
jb
ljmp
cmp
mov
leave
jle
test
fsub
cld
push
in
pop
xchg
idivb
xchg
pop
and
inc
pop
inc
push
mov
adc
test
and
das
fbld
push
int3
xor
pop
mov
pushl
scas
sbb
and
mov
or
inc
or
cmp
les
notl
daa
out
mov
std
mov
andb
xchg
dec
ss
pushf
std
pop
ret
xor
or
mov
pushf
xor
aaa
mov
ljmp
icebp
push
pop
fcoms
cmpsl
lea
lods
pop
push
xor
sub
lea
mov
push
pop
or
or
adc
aam
mov
rclb
mov
notl
lcall
fiadds
insl
adc
or
je
data16
dec
ret
mov
insb
or
gs
xchg
out
cmp
dec
dec
mov
lret
mov
xorl
mov
sbb
xor
inc
xor
pop
or
iret
arpl
cwtl
das
mov
push
xchg
loop
repz
sbb
sub
lret
movsb
cld
push
orb
jmp
stos
xor
out
fiadds
jge
add
fcompl
hlt
xchg
inc
adc
and
dec
mov
mov
ss
jns
loop
ds
push
push
inc
imul
inc
cmp
ljmp
pop
imul
cmpsl
push
cmpl
lahf
sbb
pushf
dec
out
jo
mov
mov
cltd
jbe
popf
mov
lcall
test
cld
mov
scas
in
jns
negl
lock
stos
in
pop
push
jg
add
xchg
dec
and
popa
stos
lods
push
jl
cmp
test
dec
gs
mov
enter
pop
xchg
or
mov
mov
stos
push
ret
not
mov
pop
leave
pop
movsb
mov
je
push
mov
cltd
inc
or
test
test
mov
sub
sub
ja
sub
and
outsb
jl,pn
or
or
xor
cld
push
lcall
xor
mov
in
popa
push
mov
cmpsl
xor
mov
data16
jle
clc
mov
cmc
fidivl
jb
push
call
call
les
sub
inc
dec
jbe
jnp
fs
and
push
insb
inc
cltd
arpl
pop
xchg
outsb
scas
cmpsb
adc
aaa
stc
sbb
add
jb
movsb
sti
pop
andl
sub
push
adc
sbb
fnstcw
mov
fidivrs
and
push
fstps
pop
mov
bound
popf
stc
pop
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
out
add
add
add
add
xor
add
rorb
rolb
add
add
push
push
inc
push
lret
jg
or
iret
lods
inc
mov
inc
repz
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
