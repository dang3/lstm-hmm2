push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
dec
das
sub
addl
subl
es
cmp
js,pn
je
lock
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
daa
pusha
push
clc
mov
pop
ficoms
mov
push
push
sahf
xchg
cmp
nop
and
pushf
adc
imul
mov
dec
loope
xor
fcomip
sub
das
pop
and
mov
adc
aad
cmp
cwtl
data16
int3
sahf
adc
addr16
mov
icebp
addl
pusha
xchg
lret
jle
aam
add
push
call
addr16
adc
fldl
and
push
addb
ret
clc
cmp
inc
loope
dec
inc
stos
aad
mov
adc
cld
sub
mov
inc
shrb
adc
xchg
xor
fiadds
movsb
lds
add
xchg
inc
xor
add
add
push
jae
or
ret
push
out
or
sbb
nop
sub
mov
inc
addr16
cmp
sbb
movsb
adcl
adc
xchg
and
adc
push
outsl
leave
xor
inc
fsubrl
jnp
dec
data16
push
sbb
xchg
fwait
fwait
in
inc
mov
cltd
mov
and
popa
dec
scas
jbe
call
mov
or
popa
adc
adc
push
push
js
xchg
push
movhps
adc
xor
sbb
in
fcmovbe
jp
sub
cs
xchg
outsl
jbe
push
bound
test
mov
lods
clc
cs
test
hlt
adc
adc
jns
test
sub
push
xchg
jle
hlt
repnz
xor
fcomi
mov
pushl
enter
mov
nop
repnz
data16
fistps
xchg
xchg
shlb
sbb
cs
dec
repz
fst
push
inc
rcrl
add
cmp
push
xchg
mov
pop
insb
jbe
jno
pop
lcall
inc
pop
js
aaa
pop
repz
jecxz
data16
fldt
push
das
adc
ret
pop
fidivl
in
clc
sbb
cmp
ss
inc
fiadds
pop
inc
movsb
mov
rorl
outsl
jbe
push
pop
sbb
mov
jl
pop
xchg
out
loop,pt
adc
pop
inc
mov
nop
out
les
push
jge
fs
pop
adc
sti
pop
fidivrl
jns
vhaddps
cld
mov
mov
ja
leave
out
rorb
test
and
orl
jle
push
push
sub
and
in
sbb
mov
push
fistps
pop
js
ja
fcoml
test
push
imull
cmp
jecxz
mov
pop
loopne
push
add
sbb
fiadds
adc
xor
cli
mov
cmc
lods
imul
fists
cld
inc
cwtl
in
in
lds
ds
lock
xor
dec
mov
push
in
mov
inc
mov
mov
jle
xor
out
inc
adc
ret
popa
push
pop
lahf
lcall
test
call
lds
mov
leave
or
into
dec
in
mov
data16
pop
push
jns
add
fdivs
mov
int
orl
popf
cltd
mov
fnstsw
stc
jle
fistps
jecxz
xchg
stc
js
movsb
es
aas
pop
xorb
pop
adc
sub
push
imul
mov
dec
aad
jb
adc
jne
add
pop
notb
pop
pop
adc
in
movsl
cld
sbb
pop
popf
aad
sub
mov
inc
fcompl
je
loope
push
aad
sbb
mov
mov
out
dec
iret
push
cld
sahf
sbbb
adc
push
jle
push
pop
mov
push
dec
mov
in
add
fsubs
jmp
out
jmp
rorl
mov
pop
push
sub
sub
loopne
pop
cmp
aaa
or
and
js
test
mov
daa
pop
cmp
mov
das
dec
sub
jp
push
push
cmc
pop
ret
cmp
and
xor
pop
jl
into
inc
xchg
mov
test
daa
stc
nop
mov
in
push
mov
xchg
adc
insl
ret
jecxz
xchg
mov
cmp
out
mov
outsl
inc
notb
push
mov
fisttps
mov
aad
add
sub
imul
pop
fsubr
popf
mov
push
push
xor
sub
sbb
sbb
in
hlt
in
out
dec
jo
movsl
int
fwait
pop
and
xchg
mov
push
les
dec
repz
outsb
lahf
adc
pop
jae
mov
adc
repz
imul
scas
mov
xor
adc
bound
pop
mov
push
or
lods
movsb
cmp
and
inc
in
arpl
mov
repnz
pusha
sbb
sbb
mov
jl
or
sbb
sbb
xor
and
pop
xor
and
xchg
dec
cmpsl
data16
leave
mov
sub
imul
and
mov
xchg
push
add
push
fcmovnu
xlat
adc
jns
cmpl
cmp
mov
push
adc
push
ja
inc
cwtl
int
inc
mov
pop
cli
int3
dec
fcoms
add
shl
outsb
pop
fstpt
in
bound
mov
inc
jl
test
lea
dec
leave
dec
pop
repz
sub
fldcw
sbb
mov
jecxz
subl
test
mov
pop
or
shlb
popa
lcall
popa
dec
out
jmp
outsb
js
add
lods
xchg
inc
ja
mov
mov
lret
fldenv
pop
data16
xor
mov
xchg
dec
ds
js
add
lret
decl
sbb
mov
push
das
sub
inc
das
xchg
jnp
testb
sbb
adc
push
es
pop
mov
bound
mov
subb
push
dec
inc
out
js
ds
rcrl
in
arpl
out
xor
shlb
mov
mov
pushf
int
xchg
ljmp
lret
inc
mov
fcoml
mov
mov
mov
mov
cmp
mov
sub
sti
rclb
mov
out
sub
push
insb
xor
and
mov
mov
pop
iret
mov
cli
scas
bnd
adc
xchg
sbb
xlat
xor
cmp
sub
hlt
mov
push
pop
imul
mov
lea
jmp
push
jno
and
bound
pop
test
cs
clc
mov
rorb
leave
dec
js
mov
or
popl
daa
lods
out
adc
dec
or
inc
insw
mov
xchg
push
push
cmpsb
mov
mov
sub
and
push
bound
je
lods
mov
or
or
xor
fdivrs
and
mov
and
push
fwait
mov
insb
fwait
imul
mov
test
rorl
jp
mov
sar
jnp
lods
andb
mov
xchg
jo
cmpsl
out
repnz
imul
imul
sti
push
add
leave
push
mov
fs
or
mov
cmp
adc
inc
in
pop
xchg
inc
cmp
lock
pop
aas
dec
mov
mov
push
push
xor
lret
cmp
je
and
inc
jae
mov
imul
test
ret
in
ret
cmp
push
out
lcall
popa
sahf
sti
cwtl
ss
dec
push
inc
add
mov
push
lahf
jecxz
adc
sbb
popf
mov
sbb
int3
xor
aam
jp
xor
push
push
push
jle
inc
push
popf
dec
push
inc
xchg
es
ret
cwtl
mov
test
pop
or
out
add
lret
jl
push
sbb
sbb
test
and
loop
jne
inc
xchg
lods
stos
stos
cmc
inc
movsl
lcall
decl
aad
es
xchg
xchg
insb
xor
cld
jg
mov
inc
fistpll
movb
shll
scas
add
or
insl
add
cld
mov
int3
lea
xchg
loopne
cltd
lods
clc
daa
jno
testl
jl
jae
inc
or
jno
sbb
xchg
nop
mov
xor
push
stc
addr16
dec
jns
or
push
sbb
pop
mov
out
ljmp
mov
testl
aas
psubusb
add
or
test
or
cmpsb
fmuls
jecxz
mov
sbb
test
inc
int
sahf
lcall
jae
jae
and
insl
push
out
test
lret
dec
sub
lods
ja
sub
cmp
xlat
shll
cmp
cmp
outsl
in
lret
test
jb
xor
dec
stos
push
lods
dec
push
pop
in
add
leave
test
bts
inc
pop
lods
push
pop
xchg
cmp
sub
push
push
std
mov
fwait
popa
jl
lea
mov
mov
inc
and
mov
popl
nop
push
pop
icebp
lods
xchg
and
xor
mov
mov
or
repz
xor
test
ret
out
cmp
insb
arpl
jns
iret
push
scas
or
dec
sbb
loope
ljmp
fisubs
gs
stc
pop
jne
and
icebp
dec
mov
iret
stos
imull
jmp
repz
mov
cltd
add
push
mov
or
test
lcall
sarb
and
cmp
roll
mov
inc
lods
lea
adc
add
mov
sarb
jecxz
cmc
ja
loope
jg
sub
notb
cmpsb
addr16
loop
jbe
and
push
inc
test
pop
rcrb
hlt
xor
jns
mov
arpl
sahf
mov
addb
in
ljmp
les
pusha
xlat
or
pop
or
xchg
push
inc
jbe,pn
push
xchg
or
sahf
lret
into
mov
bound
adc
mov
popf
mov
sub
fisubrl
cmp
xor
inc
stos
sbb
mov
loopne
and
shl
in
roll
shll
xchg
inc
lahf
xor
push
pop
pop
loop
aam
pop
jl
les
cltd
push
aad
clc
fdivr
int3
dec
rcl
out
shlb
aas
imul
faddl
sahf
xor
aaa
lods
ljmp
add
sbb
pop
insb
out
addr16
jp
outsb
mov
mov
xchg
mov
and
clc
in
into
int3
fst
add
adc
adcl
call
fimull
mov
mov
outsl
lret
ja
or
repz
sbb
icebp
jo
movsb
and
fcompl
in
mov
scas
dec
out
mov
lcall
flds
or
xor
cmp
mov
mov
sbb
out
cmpsb
call
inc
lea
push
jo
fisttpl
movsb
sub
lret
dec
adc
and
out
cmp
xor
cmp
and
sbb
dec
jo
xchg
mov
and
cmp
rorl
loop
arpl
jae
sbb
or
and
lret
mov
repz
arpl
inc
xor
aam
ja
jmp
inc
inc
pop
sub
ret
adc
cmp
inc
mov
and
dec
adc
lods
inc
daa
jmp
out
sbb
xlat
pop
pop
lock
cs
sub
es
inc
mov
lock
mov
shlb
adc
mull
xchg
xchg
insb
pop
icebp
inc
and
lock
lods
jge
mov
adc
cli
pop
mov
cwtl
lds
cltd
cmpl
push
xchg
push
xor
fs
push
rorb
in
and
push
scas
cmp
push
lods
sar
int3
sarl
sbb
xchg
popf
pop
fistl
mov
sbb
adc
shlb
pop
clc
roll
ficoml
daa
scas
pop
jb
cmc
cmc
jg
dec
pop
dec
add
pop
clc
lcall
sbb
jno
mov
filds
aas
or
mov
xchg
addr16
adc
shlb
mov
and
mov
jnp
insb
leave
pmaxub
mov
stos
inc
orb
add
inc
adc
xchg
inc
xchg
pop
in
mov
cld
sbb
push
les
and
js
xchg
xchg
sub
pop
test
cwtl
aaa
jle
mov
fmull
mov
mov
mov
lods
outsl
outsb
pop
popa
sti
adc
push
or
cmp
into
repz
scas
sbb
scas
bound
xor
xchg
xchg
out
inc
nop
push
sbb
mov
dec
xchg
adc
mov
lcall
dec
xor
pop
sub
call
and
jns
dec
je
inc
insb
test
mov
ret
jno
xor
fildll
mov
inc
sarl
mov
mov
and
dec
mov
add
jae
dec
gs
andl
in
clc
mov
adc
shll
cli
call
sub
popa
pop
push
adc
into
fistpl
mov
xlat
inc
sbb
ror
test
sbb
sti
pop
mov
pop
and
xchg
add
jb
arpl
repz
into
movsb
mov
js
sub
mov
mov
pop
jg
mov
ret
mov
jg
push
cmpsl
push
negl
xlat
add
jle
jb
cmp
xchg
bound
add
or
int
push
add
loope
cwtl
mov
pop
pop
mov
in
out
out
cld
outsl
daa
inc
pop
or
push
mov
mov
jl
icebp
inc
push
pop
ficompl
xor
push
fs
sub
arpl
nop
mov
push
les
fisttpl
cmp
push
mov
insb
sbb
xor
ss
xchg
mov
popa
xlat
daa
lret
push
shrb
xorl
inc
inc
nop
push
fildll
add
push
jmp
add
call
push
aaa
sub
sub
bound
fcompl
outsb
dec
test
daa
loope
dec
inc
sub
cmp
test
mov
iret
adc
adcb
adc
jmp
add
inc
mov
lock
jnp
imul
mov
or
or
icebp
xchg
mov
cmc
mov
int
rep
dec
cltd
rolb
pop
mov
or
int3
xchg
jp
inc
jnp
xorb
inc
jg
mov
adc
sub
inc
sbb
ret
sub
and
mov
imul
xchg
sbb
repnz
ret
leave
push
arpl
out
enter
ss
loope
cmp
test
dec
inc
add
jl
sub
shll
pop
mov
sbbb
xchg
test
cmc
dec
mov
aaa
mov
xchg
arpl
shll
inc
or
loop
mov
jmp
mov
push
inc
pop
popf
push
and
push
xlat
mov
test
or
push
fildll
jmp
out
repz
cwtl
and
push
mov
xor
adc
xchg
arpl
movsl
pop
pop
mov
and
lea
jmp
cmc
cmp
sub
outsb
mov
xchg
test
daa
mov
ret
push
lcall
pop
lock
lret
fcomp
shll
jnp
leave
insl
dec
dec
cltd
jne
sbb
dec
mov
stc
cmp
and
jecxz
or
movsb
mov
int
inc
sub
cmpsl
in
mov
scas
and
ljmp
aad
loope
addr16
cmp
fs
in
mov
xchg
or
add
sbb
add
iret
dec
pushf
shlb
les
scas
data16
dec
push
insl
add
adc
fsubr
pop
les
and
cwtl
mov
fildll
mov
cmpsb
stos
add
add
lock
xor
addr16
pop
inc
inc
fdivp
ss
movsb
and
aam
arpl
loope
std
repz
aam
test
mov
sbb
ret
in
int
jl
stos
shrl
push
xchg
and
jp
lret
outsb
stc
xor
jmp
js
or
add
mov
subb
xor
mov
mov
cs
stc
cmp
xchg
ja
jnp
pop
push
in
in
sub
sub
in
fdivs
xchg
sbb
cmpb
pushf
push
add
adcl
cmp
push
dec
mov
shl
out
fisttpl
xchg
cs
and
cwtl
mov
jp
out
jle
xchg
push
sbb
pop
or
jg
shll
dec
add
mov
mov
inc
gs
scas
jle
int
mov
add
fsubl
orb
sti
xor
pushf
dec
roll
pop
out
test
jo
jbe
mov
jge
stos
je
pop
dec
into
pop
adc
in
hlt
mov
xor
fadd
cmp
into
jmp
and
jge
lods
mov
and
push
bound
out
lea
nop
cmp
movsb
mov
fcmovnu
mov
aas
xor
mov
hlt
sub
orb
rclb
xor
insl
and
aas
mov
loopne
push
gs
inc
lock
je
xor
fnstsw
adc
mov
cmc
and
popf
xor
sub
jno
daa
loopne
imul
out
xchg
int
xchg
sub
aaa
jo
mov
cmp
hlt
test
or
mov
das
and
pop
jbe
mov
pushf
jo
jg
mov
lds
incl
ljmp
leave
push
repz
pop
jno
fimuls
cli
nop
out
aam
jecxz
and
incl
aaa
mov
into
push
lret
and
or
or
jnp
orl
hlt
add
or
or
outsb
cmp
xor
push
jl
imul
jb
dec
lds
movsl
or
dec
xchg
xchg
pop
or
jecxz
mov
xchg
jb
add
enter
sbb
jp
inc
xlat
dec
mov
jl
ljmp
mov
adc
out
xor
cmp
test
push
scas
add
xchg
fwait
jle
iret
adcb
ret
adc
inc
sbb
rcl
pop
fiadds
mov
sub
jne
mov
ret
testb
jo
mov
outsl
call
xchg
xor
les
sbb
pop
jnp
jl
xchg
incb
test
ss
cmp
ljmp
bound
and
jnp
push
sbb
sbb
or
fisttps
sub
adc
sti
fucom
outsl
in
xor
movsb
imul
sub
movsl
xchg
lahf
sbb
jp
jmp
dec
cmpsb
jno
push
push
cs
sub
stc
or
or
fdivrl
add
adc
sahf
in
jb
adc
cld
out
out
push
jl
std
call
data16
xor
xor
pusha
cmpsb
fiaddl
dec
cmp
and
aam
sti
std
ret
lcall
inc
xchg
xor
sbb
mov
icebp
in
or
sub
aas
lods
xor
adc
clc
add
rol
pop
sar
aas
jae
adc
sbb
sbbb
lock
aaa
xchg
xor
daa
ljmp
inc
aas
daa
cltd
jecxz
aad
lods
pop
ret
test
rcrb
add
shrl
hlt
jns
cmp
lcall
sub
push
xchg
out
dec
cmp
imul
mov
test
inc
mov
adc
mov
notl
mov
mov
hlt
and
lahf
xchg
mov
inc
cmp
movaps
pop
and
addr16
jns
jno
ds
mov
int
xchg
movlps
int
dec
add
mov
jae
push
arpl
testl
into
call
rep
shr
stos
sub
sub
lret
sub
xchg
mov
inc
movsb
dec
adc
scas
aas
out
and
jp
fisttpll
push
rcrb
cmp
xchg
inc
mov
mov
jmp
jns
cmp
mov
mov
jle
out
and
das
inc
pop
imul
fcmovb
sbb
cltd
rcrl
arpl
mov
push
or
push
push
in
lret
imul
adc
jmp
out
mov
outsb
pop
mov
test
insb
ja
insl
mov
mov
push
push
pop
pop
insl
mov
pop
inc
je
cmp
mov
jmp
pop
push
pop
cmpsb
enter
xor
inc
mov
adc
mov
inc
in
mov
aam
xchg
fdiv
pop
filds
dec
ret
loope
jp
outsl
outsb
mov
and
fnstcw
stc
loope
ds
push
dec
xor
inc
mov
sbb
pop
cmp
icebp
lret
jae
sub
push
arpl
ror
pop
imul
jecxz
insb
cmp
dec
inc
dec
lods
add
xchg
push
lea
jmp
in
jecxz
jl
cmp
repnz
xchg
mov
xor
or
lds
imul
int3
loope
mov
cmp
and
ds
stos
adc
cmc
test
loopne
and
leave
inc
sbb
pop
push
cmpsb
jae
or
adc
in
sbb
popf
jl
cli
mov
pop
cmp
movb
jp
lods
jno
testb
rclb
sbb
outsl
push
repnz
mov
repnz
out
shr
mov
gs
pop
sub
xchg
or
mov
int
push
mov
nop
insl
out
sbb
test
mov
rorl
out
or
pop
push
outsb
fstpt
adc
scas
fadd
call
jno
and
repz
dec
scas
and
inc
ljmp
mov
lds
and
fdivr
and
rcll
or
mov
xor
mov
hlt
pop
cmp
int3
imull
adc
sbb
xchg
ljmp
rcrl
stos
sbb
in
push
sahf
mov
add
shlb
sub
and
nop
in
mov
mov
mov
in
iret
fldt
jbe
adc
call
fidivrl
cld
xor
mov
pop
pop
es
inc
mov
xor
xor
mov
lret
mov
dec
addr16
addl
xchg
out
lock
lea
jge
push
mov
std
mov
loop
aas
xchg
add
fsts
or
pop
repnz
jb
jp
daa
orb
mov
ret
pusha
repnz
mov
or
pop
mov
xor
popa
pop
push
cwtl
dec
in
adc
xchg
mov
mov
adc
jecxz
popa
dec
xchg
xchg
sbb
jnp
arpl
pop
push
clc
nop
lds
adc
test
lds
adc
add
mov
adc
mov
jbe
push
and
mov
mov
xchg
push
into
cmp
ret
popf
call
dec
push
pusha
adc
clc
popf
sbb
mov
dec
mov
sbb
pop
test
outsb
loope
data16
jnp
mov
and
mov
ret
lcall
pop
dec
adc
and
cld
push
mulb
outsl
repz
or
jl
push
add
icebp
lods
xchg
mov
insb
inc
notl
sub
std
sbb
mov
mov
pop
sbb
pop
fldl
leave
mov
dec
mov
imul
xor
stc
int3
orl
pop
shrb
lods
es
and
ja
inc
xchg
xchg
sahf
adc
mov
xor
aaa
aad
and
inc
leave
xor
pop
adcb
rolb
test
mov
inc
mov
aam
arpl
jge
dec
push
xchg
pop
fldcw
push
or
push
pop
adcb
icebp
es
mov
frstor
xor
xchg
mov
out
mov
dec
sarb
imul
cld
and
dec
xorb
inc
mov
push
xor
or
jae
addr16
push
inc
inc
cmp
daa
leave
pushf
sub
push
fwait
imul
out
xlat
adc
cmp
mov
push
mov
loope
stos
jmp
jae
dec
fnsave
push
addr16
mov
dec
pop
daa
pop
push
cmp
fnstsw
out
addb
xor
lods
in
fcompl
xchg
or
xor
dec
pop
jne
jecxz
scas
out
push
dec
call
jmp
xchg
fisubrl
jae
push
enter
imul
push
lds
jecxz
jnp
mov
pop
mov
lock
movsl
add
mov
leave
hlt
and
cmp
mov
std
sbb
sti
push
sub
push
jp
insb
sub
adc
pop
push
leave
aam
jmp
mov
mov
repz
and
mov
dec
mov
fwait
addl
les
dec
stos
sti
jle
jbe
loopne
mov
adc
push
cmp
imul
jo
ds
xor
shlb
scas
push
cmc
adc
ss
xlat
daa
or
insb
ljmp
mov
sub
push
pop
jg
mov
sbb
adc
mov
mov
or
xchg
mov
movsl
mov
pop
shll
imul
mov
jne
fistps
dec
inc
jb
or
inc
movsl
and
in
mov
mov
dec
mov
in
outsb
cmp
mov
in
dec
cwtl
cmp
mov
je
xchg
xchg
sub
adc
push
jne
ss
pop
es
shll
jmp
mov
js
arpl
loopne
add
les
pcmpgtw
jg
inc
jmp
xchg
aam
xchg
jg
sub
call
outsl
shlb
cmp
dec
lahf
pop
adc
xor
mov
and
sub
stos
push
mov
mov
negl
in
movsb
scas
push
cmpsl
xchg
inc
dec
mov
test
push
push
in
and
cmpb
xor
iret
lret
or
mov
jecxz
push
insb
roll
xchg
or
shrb
clc
push
cmp
test
testl
pop
ds
loop
fwait
xor
sahf
and
in
jbe
cld
mov
mov
cmpsb
jo
aaa
mov
xchg
adc
fmul
push
nop
mov
cs
jmp
popw
test
sahf
loope
in
sub
cmp
jge
cmp
cld
sbb
outsb
popf
pop
daa
int3
push
cmp
mov
dec
std
pop
das
pop
es
popf
mov
out
and
mov
xlat
cmp
cmp
lock
data16
test
dec
das
mov
add
fmuls
inc
ljmp
mov
add
or
hlt
imul
dec
movl
je
push
dec
imul
cs
mov
inc
iret
adc
dec
pop
dec
adc
jae
movsl
xor
negb
sub
push
lods
gs
outsb
xor
xchg
fcoml
in
scas
repnz
sbb
mov
adc
push
negb
pushf
stos
inc
mov
cmp
movsl
ret
push
push
stos
cmc
inc
inc
and
xor
mov
push
ss
sbb
out
and
movsb
sbb
xchg
jle
std
sahf
or
icebp
pop
enter
xchg
fdivs
jg
shl
popa
popa
cli
push
dec
jnp
sub
ljmp
mov
push
out
in
imulb
cltd
xor
mull
dec
mov
les
push
jecxz
cmp
jne
jl
xchg
inc
xchg
scas
data16
dec
mov
adc
enter
jns
xchg
loope
subb
cmp
mov
pop
repz
decl
imul
orb
adc
enter
shll
les
mov
xchg
cmp
and
in
sub
adc
cld
mov
cmp
lret
movsb
movsl
add
push
adc
sbbb
aad
clc
imul
pushf
mov
sub
hlt
sbb
sti
cwtl
cmp
cmp
aad
jp
mov
jecxz
cmp
pop
cmpl
xchg
sbb
xor
cwtl
sti
fiaddl
dec
pop
das
adc
aam
push
sub
sbb
filds
xchg
ret
lods
jl
add
jno
es
jno
cmpsl
adc
rcl
mov
mov
pop
repnz
mov
insb
xchg
mov
push
mov
shrl
leave
pop
xchg
xor
dec
out
out
test
dec
or
cmp
cwtl
jbe
icebp
int3
adc
daa
rolb
dec
stos
mov
lock
arpl
pop
nop
jne
popa
xor
mov
push
xor
mov
jl
cltd
cmp
xor
bound
xchg
enter
stc
mov
out
aaa
mov
or
pop
movsb
pusha
cld
pop
mov
inc
dec
push
aam
pop
adc
int
push
dec
sbbb
mov
repz
mov
inc
imul
gs
add
mov
xchg
and
out
pop
lods
ds
sub
jp
cmp
push
roll
lea
in
or
cmpsl
shrb
loopne
push
repz
stc
xchg
cmp
lahf
inc
push
in
or
je
gs
pop
addr16
xor
sub
shl
xor
mov
daa
icebp
cmp
add
lock
dec
pop
adc
add
je
mov
rolb
lcall
xor
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
sbb
dec
pop
addl
xor
cmp
ljmp
push
mov
or
mov
stos
adc
sub
rcrl
mov
movsb
dec
mov
lar
lods
idivl
push
sbb
pop
cmpb
jnp
inc
ret
cmc
out
insb
jge
cmpsl
adcb
and
inc
xchg
mov
xchg
imul
and
imul
jp
fadd
cli
outsl
inc
pop
mov
xor
pop
sub
mov
sbb
dec
push
fpatan
mov
pop
aaa
dec
movsl
repnz
idivb
movsb
jg
lahf
adc
rcrb
lcall
aad
jo
mov
loop
dec
cmp
lret
imul
adc
imulb
xorl
xor
orl
fcompl
dec
nop
mov
xchg
dec
cli
inc
and
cmp
bound
fstpl
ljmp
add
outsb
fisubrs
mov
out
or
aaa
mov
sub
push
nop
inc
push
push
test
xchg
aas
mov
cmc
in
arpl
subl
add
dec
aam
imul
jmp
in
inc
jp
push
mov
jg
lret
cmp
sbbb
xlat
mov
jmp
mov
jp
mov
and
sub
mov
addr16
fidivrl
jecxz
fidivrs
jecxz
cmp
popf
enter
cltd
xor
jae
dec
mov
cwtl
fwait
rolb
out
push
sub
dec
movsb
repz
out
inc
insl
fwait
mov
sub
add
mov
pop
divb
push
addr16
push
jnp
dec
add
pop
mov
adc
fwait
sub
push
mov
jno
cmpsb
mov
push
xor
js
xchg
xchg
and
daa
pop
cli
inc
imul
ljmp
or
loopne
call
jge
ja
xor
sub
sbb
sub
jo
inc
sbb
jne
inc
in
aad
aad
lahf
pusha
outsl
add
push
sahf
lahf
outsb
and
push
cwtl
xchg
push
xor
mov
nop
and
cwtl
mov
pushf
cli
inc
fdivl
rcrb
mov
push
push
repz
add
xchg
adc
mov
xchg
jae
fadds
xchg
cmp
dec
sbb
insl
mov
adc
inc
rcrb
add
lret
jp
or
cwtl
add
clc
fs
lds
pop
cmpsb
mov
mov
xchg
mov
stos
add
idivl
in
clc
les
add
xchg
fistps
pop
mov
pop
inc
xchg
cvtdq2ps
in
xor
inc
jb
insl
mov
push
sbb
cs
out
lock
adc
sub
dec
dec
lahf
jo
or
dec
arpl
and
cmp
iret
or
sub
sub
sti
and
decb
pop
sbb
leave
mov
repnz
pop
sbb
jae
stos
imul
jge
jp
sti
sbb
clc
push
sbb
ret
cwtl
es
iret
stos
cmpsb
pop
push
or
cmpl
popf
fs
xor
jnp
bswap
dec
mov
subb
rclb
lret
xorl
fwait
mov
mov
xor
adc
jg
add
push
je
iret
mov
dec
xchg
mov
mov
sahf
cmp
cmc
nop
cmp
push
adc
mov
orb
rcll
mov
dec
push
das
sti
xchg
or
iret
sbb
ds
or
in
push
add
lret
in
lcall
add
dec
fs
push
or
xchg
leave
sbb
leave
xchg
adc
or
xchg
fwait
dec
pop
lret
movsl
or
jecxz
xor
icebp
outsb
test
js
cmpsl
push
adc
hlt
lret
cwtl
jg
mov
fstpl
cli
rolb
xchg
jno
cmp
pushf
xor
push
pop
add
sub
sbb
scas
in
sarb
cmp
in
fcomps
mul
xchg
bound
mov
nop
dec
pop
push
out
aaa
inc
and
stos
mov
inc
outsb
mov
cld
out
loope
cmp
jb
dec
inc
popa
fldenv
cmp
mov
mov
ds
das
push
lods
inc
loop
mov
mov
mov
loopne
dec
sub
mov
lock
inc
inc
and
cmp
inc
loop
daa
je
fisubl
sbb
cld
jns
daa
mov
movsl
cmp
repz
and
lret
mov
sub
pusha
add
cmpsl
jnp
xor
test
enter
outsl
adc
push
movsb
scas
cmp
scas
pop
mov
subl
ret
mov
pop
pop
popa
push
xchg
imulb
loop
shll
int
xchg
xchg
jl
ss
mov
addr16
lods
mov
xor
faddl
cli
cmovl
incl
pushf
add
mov
mov
pop
mov
mov
sti
into
xchg
mov
mov
sbb
jns
aam
lods
outsb
rcrb
clc
pop
gs
or
mov
iret
je
push
push
mov
mov
sbb
sub
rcrl
inc
fwait
pop
xchg
iret
fucomi
js
mov
push
adc
out
push
xchg
push
push
push
xchg
adc
sti
mov
sbb
mov
leave
int
dec
xor
pop
xor
je
pop
mov
out
cmp
jmp
test
jp
jno
xchg
cmp
dec
mov
push
sahf
pop
pop
push
push
ljmp
mov
mov
jnp
fcmovnu
jae
ljmp
xor
hlt
negl
adcb
add
mov
jp
jns,pn
ror
repz
mov
adc
fildl
jb
fmuls
push
insb
shl
rol
test
push
popa
and
xchg
fcmovnbe
dec
lret
ds
adc
je
popf
cmp
stos
leave
shr
pop
sahf
cmp
inc
push
int
stos
push
pop
push
insb
xchg
cmpsl
inc
test
push
mov
jmp
cli
divl
stos
aas
adc
les
cmp
push
pop
mov
mov
in
data16
fidivs
mov
mov
decl
jmp
xchg
jbe
rcrl
xchg
sti
jnp
xchg
ja
push
ds
mov
rcrb
sub
add
pop
stc
imul
loope
xor
sbb
mov
leave
pop
adc
jns
xor
out
mov
cli
xchg
sbb
push
push
mov
lret
sbb
cmpsl
mov
dec
dec
lahf
xchg
xor
outsl
push
cmp
adc
hlt
push
lods
dec
jnp
loopne
push
sbb
lods
xor
cmp
lds
xchg
in
inc
mov
movsb
mov
sub
mul
das
lock
mov
mov
sub
jns
add
jmp
mov
call
cmc
jne
jns
mov
cmpsl
sti
adc
jnp
stos
dec
cld
arpl
xlat
mov
sub
inc
inc
faddl
lret
repnz
jecxz
fidivrl
repz
mov
pushf
inc
cmp
dec
roll
test
xor
and
sub
stos
pop
mov
les
out
sbb
xlat
insb
ss
fcoms
xchg
inc
mov
adc
loop
fdivrs
xchg
pusha
or
inc
inc
mov
push
ds
js
sub
imul
les
jl
sbb
fnstenv
mov
or
push
mov
je
xchg
leave
lcall
xchg
or
lahf
sub
push
lret
cmp
pop
int3
pop
cs
out
rcr
sub
xor
ljmp
mov
stc
aaa
fs
mov
jle
ss
insl
xchg
mov
sub
sbb
js
add
arpl
insl
notl
sti
mov
dec
call
push
xor
xor
lcall
insl
inc
nop
into
roll
inc
fwait
cmpsb
pop
mov
pop
cld
and
jmp
orl
repnz
cli
sub
gs
cmp
imul
jnp
sub
cs
mov
jecxz
xchg
pop
scas
or
and
out
ret
outsl
movsl
stos
xor
cltd
mov
xchg
inc
push
call
and
xchg
pop
push
andb
ss
fldcw
xchg
xorb
inc
pop
je
nop
xor
imull
int
jmp
fcompl
mov
cli
dec
sub
leave
fldcw
push
pop
shlb
xchg
popf
ficoml
pop
cmc
or
add
cmpsl
push
sahf
in
imul
jmp
jle
das
push
xor
mov
add
das
ss
or
push
out
das
dec
add
cltd
jnp
mov
pop
repnz
xor
push
pop
inc
cmp
into
mov
fldt
ds
ss
xor
sbb
and
mov
pop
inc
inc
push
add
sbb
enter
adc
jg
daa
cld
inc
sbbl
div
js
add
imul
inc
mov
pop
idiv
movsb
pop
mov
xchg
jnp
inc
xlat
cmp
pop
fcomps
std
mov
mov
push
jp
jl
push
inc
dec
jmp
sbb
dec
jge
ret
int3
cli
popf
add
sub
push
sub
mov
aaa
pop
cmp
test
test
mov
shll
xchg
lea
xor
add
and
xor
xor
push
outsl
push
mov
movsb
imul
dec
mov
jge
in
inc
xchg
loop
cmp
or
mov
cmp
mov
inc
out
xor
das
mov
sbb
pusha
push
rep
push
lock
dec
sbb
lret
xchg
clc
lods
dec
xchg
test
pop
jle
dec
out
leave
je
dec
sbb
shll
repnz
inc
sbb
mov
mov
outsb
outsl
ficomps
and
aam
repz
cmp
aam
sarb
xor
cmp
xor
push
jne
jge
loope
xor
pushf
sbb
insb
les
fs
xlat
subb
lods
jmp
sub
and
cmp
pop
xchg
jns
mov
les
je
imull
dec
fcmovne
push
shl
xor
xor
and
shll
sbbl
jno
sub
dec
movsb
fmulp
fadds
roll
aad
add
dec
adc
pop
fdivrs
mov
sbb
xor
nop
sarb
in
ja
ljmp
lret
fs
lds
dec
inc
insb
shrl
out
dec
pop
sbb
pop
add
and
xorb
mov
dec
test
add
sub
dec
fdivl
arpl
push
adc
mov
sti
cld
xchg
ret
pop
int3
fisubrl
cld
adc
sub
push
push
std
ret
out
sub
mov
in
jno
jmp
sahf
inc
jp
adc
fisubl
sub
shll
mov
xchg
add
pop
jne
push
push
lcall
sub
cmpsl
dec
pop
lock
jns
xor
add
mov
ljmp
movsl
lods
dec
add
icebp
dec
pop
sbb
adc
adc
push
in
dec
add
mov
pop
ret
push
pop
pop
adc
dec
mov
mov
lret
adcb
insl
add
nop
int
les
cmc
hlt
ljmp
nopl
lahf
out
rolb
pusha
cld
lcall
mov
in
pop
xor
inc
aam
adc
cmp
and
dec
stc
scas
mov
and
ret
jnp
jp
ljmp
out
inc
iret
pop
jno
mov
movsl
loopne
es
or
sub
rclb
cmpb
mov
ljmp
jmp
mov
repz
stos
inc
das
lahf
lahf
stc
mov
test
jnp
inc
aas
xchg
arpl
mov
sub
fmull
lock
xor
add
fimull
sub
mov
and
scas
add
clc
jne
outsb
clc
jle
inc
pushf
dec
sbb
call
rcrb
dec
add
mov
adc
and
cmp
jns
and
cmp
jb
inc
inc
ja
out
in
dec
mov
sbb
scas
mov
mov
out
dec
enter
mov
test
cmp
stos
pop
call
cmp
in
lods
test
mov
jbe
add
add
inc
cld
mov
je
leave
fidivs
testb
xlat
push
sahf
lcall
mov
push
cs
cwtl
loop
push
js
mov
in
and
aad
push
sti
cmp
sub
xchg
push
in
mov
xchg
dec
dec
dec
cmc
hlt
call
dec
in
cmpsl
sub
stos
imul
push
pop
sarl
dec
loop
addb
jo
jg
fucomi
xor
xchg
mov
mov
pop
rcr
pop
sub
inc
jg
scas
mov
scas
xchg
pushf
cltd
dec
jnp
xchg
outsb
in
mov
daa
inc
mov
mov
push
mov
and
fnsave
pop
loop
movsl
ja
lahf
inc
daa
xor
mulb
rcll
adc
popa
sahf
push
ret
jge
ret
pop
sub
mov
leave
cmp
sbb
mov
inc
ret
push
cmp
xchg
popa
ret
stos
je
pop
sbb
jbe
push
dec
popa
dec
test
scas
push
jecxz
and
rorb
data16
sbb
dec
test
jg
mov
jp
push
jp
in
int3
and
pop
sahf
and
cmc
xor
xchg
add
int3
ret
ret
mov
insb
and
mov
insb
int
out
lcall
cmp
push
leave
cmp
jne
sub
fnstcw
loopne
and
xor
mov
mov
rorb
pop
or
xlat
jns
add
mov
dec
pop
or
icebp
mov
jg
loopne
xchg
fists
mov
popf
jo
ficompl
jae
push
mov
jmp
pop
shrb
inc
js
dec
test
push
ljmp
das
fistl
pop
xor
mov
shlb
lods
in
inc
sbb
pop
mov
mov
rol
jmp
clc
dec
pop
idivb
loope
aam
pop
mov
mov
cli
and
and
pextrw
sub
xchg
vmulsd
leave
push
pop
dec
rclb
pop
test
movsl
xlat
jp
add
clc
imul
cltd
sbb
icebp
jnp
mov
mov
cmp
arpl
xor
sub
out
sbbb
lahf
aaa
stc
popf
cmpb
sbb
fnsave
add
add
fdivs
jno
jns
push
cmp
dec
mov
jb
push
push
push
shlb
pop
jae
sub
inc
or
andl
mov
xor
xor
popa
xor
dec
test
sbb
loop
in
xchg
sub
mov
pop
or
enter
repz
or
mov
ljmp
lahf
jnp
je
push
mov
bound
and
into
lret
out
sti
pop
test
lret
sbb
jecxz
lret
inc
sub
out
sbb
pop
push
jmp
and
mov
stos
das
sbbb
or
fbld
push
adc
pop
inc
push
leave
jnp
shl
jbe
stos
inc
lods
cltd
mov
out
cli
add
insb
jno
mov
cmp
cli
and
iret
js
sub
jne
xor
jne
imul
and
fucomi
in
push
lret
cltd
mov
xor
stos
mov
jnp
and
imul
fcomi
cs
insl
pop
ds
dec
arpl
push
pop
cltd
fdivs
mov
add
or
leave
sub
xchg
das
pusha
adc
fadds
fneni(8087
or
stc
mov
cmp
xchg
sbb
scas
lods
push
xchg
pop
pop
lea
add
inc
stos
add
inc
jge
cmpb
pop
sub
ljmp
in
adc
xchg
xchg
imul
push
mov
cmp
filds
push
mov
frstor
mov
xchg
lods
add
and
into
jle
jnp
add
or
leave
stc
test
shll
gs
add
cmp
stos
sub
outsb
insb
scas
mov
sbb
sbb
add
mov
aas
inc
cmp
mov
aas
jg
fcoms
subb
outsb
ffreep
dec
popa
sub
mov
sub
loopne
ljmp
rclb
add
gs
adc
dec
push
mov
mov
rorl
jle
mov
inc
add
xchg
mov
loop
xor
jge
icebp
sub
jnp
jp
int3
aam
push
mov
in
mov
sbb
ret
push
pop
fisttps
lds
loop
inc
aas
jae
iret
mov
pop
rclw
pusha
cli
repnz
push
jns
movsb
movsb
je
mov
cmp
mov
sbb
cwtl
sbb
dec
push
dec
push
dec
mov
mov
les
sub
stos
pop
negl
sbb
jnp
std
test
jb
xor
nop
cmovl
push
sbb
jp
mov
gs
pop
jnp
xchg
adc
xor
out
or
in
in
jg
mov
lds
inc
xchg
xor
push
jns
add
xlat
cmp
insl
sub
or
pusha
pop
push
mov
call
lds
xchg
xor
mov
mov
stos
jle
lret
mov
jp
adc
es
dec
or
outsl
mov
mov
xchg
jne
mov
cmp
or
test
loop
sti
add
jmp
es
lret
test
call
cmc
stc
mov
movb
popl
sbb
repz
fdivrs
and
pusha
add
fs
mov
imul
bound
xor
mov
xor
mov
mov
stos
jecxz
push
xchg
into
jl
mov
in
pop
rol
aad
dec
andl
sub
les
clc
xlat
pop
lods
test
mov
push
gs
mov
sahf
lret
dec
pushf
fwait
aaa
adc
lds
mov
mov
mov
loop
fcoms
addl
mov
or
cld
lret
jnp
pop
leave
outsb
fisttps
adc
jns
rcrb
push
adc
and
arpl
stos
mov
add
and
push
jne
ret
into
addb
push
aas
enter
inc
roll
aaa
test
xchg
pop
pop
lahf
sbb
stc
sbbb
jecxz
mov
sub
dec
out
shll
popf
inc
jmp
std
cmpsb
andl
mov
ds
fsubrs
xchg
add
fdivs
daa
cwtl
je
push
inc
xchg
and
inc
sub
xor
add
lods
popf
xchg
popa
inc
out
icebp
call
and
into
stos
test
pushf
scas
xorl
or
push
sbb
mov
out
testl
addr16
mov
lea
jecxz
jecxz
imul
ss
xchg
into
and
repnz
push
jp
mov
jl
daa
xor
loop
movsb
xchg
or
lret
adc
jnp
mov
iret
mov
pusha
push
push
xor
sbb
push
sti
out
adc
or
sub
sahf
test
enter
mov
sbb
inc
jb
gs
mov
pushf
xchg
imul
xor
or
sbb
stos
bound
xchg
mov
stos
iret
idiv
and
and
and
les
iret
jne
jbe
icebp
sbb
and
out
xchg
mov
cmpb
fstl
jae
enter
mov
in
push
adc
sub
rcll
or
adc
push
mov
push
div
out
sbb
ror
repnz
in
aad
inc
dec
push
imul
inc
sbb
es
jp
lret
mov
pushf
sub
and
jp
dec
rclb
popl
mov
xchg
out
sbb
or
mov
xchg
mov
in
out
sub
leave
imul
adcl
loope
bound
nop
cmp
shrl
jmp
push
shrb
add
sub
stc
mov
pop
push
daa
fistl
xchg
fcomps
pop
mov
cmp
in
out
push
mov
xchg
mov
push
aam
cli
mov
pop
sbb
pop
adc
hlt
out
xor
lret
xchg
arpl
cmp
je
or
mov
jle
fcoml
loopne
jns
inc
mov
cli
add
es
dec
mov
sbb
in
sbb
cmpsl
lea
sbb
cli
addr16
sti
ret
xchg
mov
xorb
jnp
faddp
sahf
iret
xor
cwtl
sub
enter
test
pusha
in
sbb
xor
fldcw
mov
pop
lret
movsb
or
adc
cwtl
scas
ss
mov
dec
mov
ja
loopne
push
leave
inc
cmpsl
dec
loop
faddl
dec
jp
fiaddl
sbb
inc
lods
add
mull
call
inc
mov
rorl
movsl
adc
jne
mov
inc
xchg
mov
dec
jnp
mov
stc
fnstenv
adc
pop
pop
push
mov
mov
jns
jp
leave
xchg
jle
pop
mov
or
jbe
and
fs
clc
push
xchg
xor
sbb
hlt
packsswb
shll
xchg
or
sbb
sbb
add
fistl
and
jmp
inc
mov
je
xchg
ret
imul
and
cmp
imul
std
pop
cld
jns
ds
into
or
loop
ja
or
cmp
movsb
mov
sub
testb
mov
pop
push
cmpsb
sub
xor
insb
movsl
scas
cmp
push
fsubp
mov
clc
bound
push
sub
cmp
mov
add
or
movsl
imulb
xchg
loope
mov
adc
adc
jge
mov
ret
and
daa
pop
popa
push
inc
xchg
popa
scas
sub
setge
sub
mov
jne
jl
dec
popa
mov
gs
ret
push
cs
push
jns
add
or
insb
lds
ljmp
scas
jp
mov
and
orb
jecxz
add
and
xor
xor
cmp
or
add
out
jbe
cli
pop
and
add
js
popa
lea
inc
xchg
xlat
cmp
dec
cld
loopne
jnp
or
imul
mov
xor
dec
and
daa
movsl
out
adc
pop
and
sbb
mov
sbb
and
bound
das
pop
jne
mov
sub
enter
ret
mov
xor
dec
popa
adc
pmulhuw
xchg
add
mov
stc
xchg
aaa
sbb
and
insl
inc
rcll
xor
and
jmp
cmpsl
rcrb
out
pushf
ljmp
or
add
out
lahf
dec
fs
push
or
sbb
push
xor
in
ds
mov
sbb
shlb
mov
cmp
in
xchg
test
inc
sahf
fstpl
pop
dec
popf
cltd
or
xor
data16
inc
sub
add
dec
sbb
mov
fadd
mov
or
fs
movsl
mov
mov
pop
pop
mov
div
call
xor
jl
jecxz
adc
fcoml
stos
and
jmp
xor
dec
out
pop
and
mov
ljmp
mov
dec
fbstp
add
push
mov
fistl
in
inc
cltd
adc
jo
arpl
xchg
jne
mov
sarl
xor
cwtl
cmpsl
out
fcmovnbe
pop
sub
out
push
sub
dec
out
xchg
pop
or
mov
sub
loope
cmp
pop
cmp
jle
lods
xchg
sbb
and
int
sub
jecxz
inc
fistl
pop
adc
adc
mov
outsl
xchg
out
push
xor
cmp
lock
pop
ret
scas
add
dec
test
add
andb
push
insb
inc
pop
jne
lretw
gs
jae,pn
adcl
test
xor
dec
mov
jne
clc
sbb
mov
sbb
mov
sahf
pop
aam
jae
out
xor
push
dec
clc
cmp
in
lret
pop
into
xchg
call
cmp
cmp
sbb
mov
ret
xlat
sub
or
lcall
mov
subb
rep
popf
push
cmp
fs
pop
enter
sbb
xchg
rclb
mov
or
outsb
xchg
fcmovu
mov
and
inc
incb
fsubrs
dec
dec
test
adc
pop
jmp
mov
shll
movsb
pop
mov
scas
data16
xor
je
loope
mov
pusha
cmp
mov
xchg
lcall
imul
dec
xchg
movl
imul
enter
dec
mov
jecxz
fisttpl
sbb
in
xor
je
cmp
stos
loope
test
xchg
push
jno
sub
test
xchg
push
sbb
fldpi
xchg
push
addr16
xor
jbe
ss
mov
jno
das
sbb
inc
add
jge
jg
hlt
jnp
or
std
test
mov
mov
inc
testl
adc
movsb
inc
cwtl
std
xor
icebp
movsb
push
int
mov
xlat
pusha
mov
lret
popa
mov
pushf
icebp
push
in
arpl
dec
adc
ret
out
add
jae
fistpll
hlt
gs
push
shrl
mov
pop
lods
ljmp
fiaddl
lods
sub
insl
mov
xchg
scas
mov
test
inc
jp
outsb
lods
outsb
dec
iret
out
aad
adc
fs
insb
sub
pop
xchg
xchg
outsb
out
leave
mov
jp
mov
outsb
mov
mov
rcll
mov
mov
ss
sbb
mov
xor
dec
mov
sub
mov
outsb
mov
movsl
pop
or
test
sbb
mov
adcl
lock
out
xchg
pop
shl
in
add
dec
data16
mov
mov
sbb
mov
daa
mov
adc
call
xor
fs
fadd
add
das
ja
rorb
aaa
shr
and
repnz
xor
cwtl
pop
repnz
shrb
xlat
mov
ja
and
stc
mov
xor
nop
push
lods
insl
test
fmul
daa
arpl
inc
inc
and
cld
jge
negl
out
sbb
xchg
out
dec
and
dec
mov
into
xor
jl
idivl
jge
ljmp
pop
dec
mov
fisubl
mov
les
or
sub
clc
into
mov
inc
hlt
je
in
mov
push
adc
stc
orb
call
push
cltd
xor
mov
addr16
cmp
or
adc
out
iret
fbstp
movsb
scas
cmpb
pop
pop
jb
mov
pusha
dec
cmpsl
xorb
xchg
imul
sbb
adc
mov
cld
adc
in
mov
sti
jle
lret
mov
inc
dec
cmp
mov
mov
es
inc
xchg
shll
gs
stc
lret
idivb
daa
mov
or
stos
aaa
push
add
shl
roll
mov
rolb
inc
divb
add
add
push
cmp
in
jo
clc
push
xchg
shll
in
sbb
jae
popa
mov
fyl2xp1
movsb
jne
mov
imul
add
mov
and
mov
jecxz
and
push
cmp
fucom
xchg
jp
push
pop
iret
in
mov
push
inc
aaa
loope
gs
pop
add
sub
fwait
arpl
stos
aad
xchg
push
mov
filds
sti
mov
enter
push
and
arpl
add
scas
cmp
dec
sbb
jp
push
xor
fmuls
mov
stos
push
dec
inc
sbb
add
mov
adc
pop
test
out
arpl
out
push
dec
ret
mov
pop
or
fmull
mov
mov
repz
fs
inc
sub
cmp
inc
pop
inc
pop
lcall
xchg
out
gs
xor
pusha
mov
xchg
ds
ret
lcall
pop
fdivrp
shrl
or
mov
mov
or
dec
mov
enter
push
and
mov
in
rcr
mov
scas
or
cmp
lcall
mov
cli
sarb
lcall
fdivs
lret
sub
insb
iret
imul
pop
nop
lret
jmp
loope
aam
adc
mov
inc
sarl
addr16
and
hlt
je
xor
test
inc
call
jge
into
dec
pop
cli
inc
fwait
dec
inc
mov
leave
push
dec
mov
movb
add
sub
in
push
cmp
mov
pop
ds
mov
adc
jg
jecxz
or
loop
arpl
out
aad
push
sub
mov
or
pop
aad
neg
lock
mov
xchg
sbb
in
lret
lret
pop
pop
lahf
pop
je
movsb
adc
shll
int3
or
pop
cltd
or
out
shrl
pop
xchg
xor
cmc
xor
ret
add
fisttpll
push
dec
in
movsl
and
jns
push
arpl
or
jno
sarb
sbb
lcall
sahf
call
xor
stos
cmp
xor
adc
cmp
pop
push
lods
shrb
repnz
jge
div
add
sarb
idiv
in
push
repz
divb
out
mov
les
mov
or
adc
jmp
xor
in
fscale
mov
cmpsl
daa
xchg
je
in
int3
xor
popa
rorb
inc
les
rcr
xchg
repz
sahf
add
mov
pop
repz
out
cltd
aam
scas
dec
push
pop
int
int
movsl
fidivl
push
out
test
inc
mov
mov
xor
sub
out
imul
out
es
sbb
arpl
xchg
insb
aas
in
sub
lds
mov
dec
fwait
cmp
imul
jl
and
cmp
imul
push
gs
hlt
cmpsb
fs
jl
popf
or
or
push
pop
sahf
mov
ficoml
das
movsl
inc
aaa
in
inc
sahf
jle
mov
ret
pushf
call
out
ss
push
and
fmull
pusha
fildl
jmp
cmc
sti
pop
jmp
and
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
pop
jecxz
mov
or
addl
pop
std
rol
ds
add
scas
xlat
shl
dec
push
roll
xchg
hlt
pop
std
sub
mov
scas
pop
daa
movsl
imulb
ds
sbb
push
adc
enter
sbbl
cs
rcll
push
push
cwtl
sbb
hlt
pop
push
out
shll
stc
lods
jl
aam
xchg
mov
addr16
mov
push
xor
jae
int3
imul
sub
dec
adcl
inc
adc
ds
test
out
push
rcrl
stos
aas
lock
or
or
lret
mov
ficoml
lods
xor
sahf
sbb
jbe
pop
fldcw
mov
jl
mov
xor
cmpsl
je
fucom
fcoms
and
jp
and
jno
xor
sbb
sub
mov
out
pop
push
mov
sub
int3
inc
cmp
fyl2x
mov
cli
jmp
fdivrs
fidivrs
dec
fxch
sbbb
bound
stc
loopne
cmp
push
adc
pop
add
test
mov
out
imul
scas
hlt
cld
jle
ds
jl
push
scas
jns
fcoml
rcrl
cmp
pop
cld
jecxz
or
fistps
lahf
adc
aam
fnsave
ljmp
sub
and
cwtl
jg
int3
xorl
ljmp
leave
test
adc
test
mov
mov
adc
pop
fsubl
fnstcw
mov
lret
sbb
jns
test
xchg
adc
stos
cmp
cmp
sbb
test
sbb
adc
inc
mov
dec
test
xor
or
inc
adc
jbe
inc
xlat
shl
leave
inc
pop
popa
and
mov
dec
jo
or
add
sbb
ficomps
out
sarb
dec
sub
sub
add
hlt
out
sbb
cs
nop
sub
out
lods
cmp
loope
sbb
roll
hlt
push
in
lret
test
or
ja
mov
stc
gs
mov
jns
in
sbb
mov
cmpsb
sub
les
mov
mov
xor
push
pop
mov
and
in
ret
sbb
mov
inc
je
inc
push
lcall
fistpl
mov
loopne
jae
pop
inc
pop
cmp
push
mov
repz
cmp
fldenv
jo
test
imul
add
call
repnz
and
in
dec
mov
push
std
fs
sub
bnd
jb
daa
mov
scas
push
aas
mov
lret
mov
or
cmp
aas
movsl
dec
lods
enter
int
jl
mov
and
stos
push
call
add
mov
fs
sub
pop
shrb
enter
mov
or
movsl
push
sarb
das
mov
movsb
sbb
je
mov
bound
or
xchg
icebp
adc
lds
mov
sub
xorl
and
push
fiadds
pop
push
dec
mov
pusha
mov
mov
rol
out
inc
xchg
pusha
dec
addr16
je
pop
shrb
xor
aas
fisttpll
sbb
dec
jle
jne
fisttpl
pop
in
push
ret
imul
nop
mov
pushf
pop
mov
mov
cwtl
cmc
mov
mov
push
pop
pop
les
cwtl
ljmp
decl
dec
or
sbb
mov
cld
mov
dec
dec
les
mov
pop
pop
sbbb
mov
cmp
xchg
push
or
das
adcb
ja
lock
sbb
cld
stos
jnp
rorl
fcompl
cltd
daa
subl
out
adc
fnsave
loope
jmp
movsb
push
mov
add
pop
dec
movb
in
insl
push
in
pop
sbb
inc
mov
loope
out
inc
test
cwtl
pop
jg
mov
mov
into
push
clc
mov
xlat
loopne
adc
outsb
hlt
pop
cli
sbb
cmp
mov
loopne
inc
hlt
repnz
loope
mov
pop
mov
aad
mov
xchg
inc
fiaddl
out
leave
sub
mov
bound
test
enter
iret
push
push
out
xchg
pushf
cmp
inc
test
xchg
sbb
ret
aaa
enter
popa
ret
dec
test
push
mov
sbb
roll
popa
sarl
ret
cmp
xlat
dec
out
loopne
movsl
nop
aas
in
mov
repz
cmp
std
pop
int3
xor
and
fldt
hlt
mov
and
jmp
test
cmp
pop
test
jne
dec
sub
pop
lds
test
outsb
ficomps
sub
dec
fistpll
xchg
jl
inc
andl
pop
xchg
jb
imulb
push
out
lock
scas
add
jmp
pop
std
cli
repz
jno
hlt
mov
in
mov
inc
mov
mov
rorw
jl
jecxz
inc
in
data16
dec
add
cltd
mov
xchg
jle
repnz
xchg
or
sti
push
adc
xor
add
and
test
mov
jmp
les
aad
sub
jmp
inc
jo
mov
out
inc
dec
and
cltd
pop
scas
lret
dec
push
push
notb
push
aaa
sub
sub
jecxz
shlb
jb
fisubrl
jp
mov
test
push
sub
popf
sub
xor
nop
cmp
sub
cmp
addr16
mov
je
rep
push
sub
push
jmp
mov
loope
xorl
cld
std
pop
mov
cmpl
cltd
jne
and
les
fsub
mov
pusha
mov
scas
jge
testl
iret
inc
jl
mov
jecxz
xor
fwait
sub
sub
lea
aad
lret
outsl
or
insb
hlt
cmpsb
and
push
mov
shlb
fcmove
sub
add
jb
into
sub
clc
mov
add
and
adc
cmc
dec
dec
leave
scas
jmp
pusha
dec
cs
mov
xchg
mov
dec
addr16
fidivl
xchg
clc
mov
xchg
lock
xor
fwait
mov
sub
mov
cmp
jno
sbb
pop
jns
xchg
mov
in
push
outsl
sbb
iret
pop
ret
jle
cs
mov
fyl2x
push
xchg
and
iret
stos
lods
or
add
rol
sub
pushf
or
add
push
decl
pop
lods
pop
or
adc
add
enter
lock
data16
or
repz
xchg
jb
push
inc
mov
fcomps
adc
popf
int
push
out
test
add
repnz
in
ds
bound
leave
inc
inc
mov
inc
xchg
and
lods
shrl
enter
testb
push
lods
in
in
testb
mov
xchg
imul
sbb
sbb
int
outsb
sbb
lods
test
lea
sbb
jle
or
inc
sub
insl
and
test
shlb
jo
gs
fsts
insl
mov
xor
xor
mov
nop
mov
and
and
jg
push
push
mov
xchg
xlat
loope
and
mov
inc
ds
rolb
int
arpl
mov
loope
xchg
movsb
mov
xchg
mov
out
xor
nop
loop
outsb
xchg
pop
jge
push
push
test
add
int
inc
movsb
inc
inc
adc
lcall
jae
pop
rol
push
das
jp
adc
push
pushf
lret
mov
aam
pushaw
cmp
pop
mov
xor
into
icebp
lret
xchg
adc
test
lea
out
imul
sbb
mov
xchg
cwtl
xlat
clc
mov
mov
push
jbe
pop
roll
mov
cmpb
cltd
cmp
int3
aaa
stc
fcmove
sbb
jp
jo
les
mov
pop
idiv
pushf
std
and
jmp
fcoms
outsl
cmp
sub
cmp
xor
and
sub
out
fs
mov
cmp
scas
xor
lods
cmpsb
mov
and
fwait
pusha
int
mov
pop
push
es
sarl
stc
fidivrs
cmp
repnz
les
pop
sub
stos
out
push
adc
popf
cmp
inc
xchg
mov
arpl
push
aaa
cmp
sbbl
outsb
not
cmp
add
mov
xchg
sub
xchg
or
push
aam
lahf
add
add
fldcw
ljmp
rolb
xchg
xchg
mov
xlat
mov
mov
jp
stos
arpl
ret
add
inc
scas
adc
lahf
clc
ror
movsl
sub
xchg
mov
jnp
inc
aad
daa
sbb
mov
clc
sub
xchg
add
sbb
popf
rcrl
aaa
dec
imul
imul
mov
movsb
shr
and
mov
stos
out
icebp
hlt
hlt
sbb
mov
inc
insb
push
or
jb
xchg
jmp
pop
nopl
sub
addl
inc
cmpsb
les
mov
and
out
clc
ja
push
movsb
push
mul
lcall
fldcw
dec
push
inc
call
leave
imul
les
mov
cmpsl
sub
cli
imul
scas
mov
sbb
mov
cli
enter
jno
cmp
adc
cld
cmpsb
stc
and
repz
push
cmp
mov
push
pop
out
imul
shlb
and
testl
cli
sub
mov
daa
push
mov
rcll
stos
in
jmp
add
out
negl
hlt
dec
adc
aam
mov
mov
sbbb
push
js
dec
inc
jae
aam
push
aad
pop
das
mov
mov
cmpsb
sbb
out
lret
rcrl
xchg
jb
outsb
sbb
jbe
mov
pop
push
sub
mov
mov
add
pop
or
push
mov
xchg
cmp
int
out
je
adc
in
cmpsl
out
sub
adc
jnp
push
mov
jne
out
xor
adc
mov
dec
fbld
dec
pop
loop
sbb
pop
dec
out
stos
cmp
ja
scas
fs
mov
sbb
pop
jns
push
pop
dec
ss
lea
sbb
xor
daa
subb
inc
test
ljmp
xor
loop
or
scas
lea
enter
leave
icebp
jae
addr16
cld
or
dec
adc
fsub
fisubrs
dec
out
mov
jle
mov
fimull
ret
mov
test
pop
jmp
sahf
ss
adc
xchg
dec
push
cli
pause
lret
gs
or
popf
loop
push
sbb
hlt
ljmp
lahf
adc
pushf
xor
mov
push
int3
jnp
jecxz
mov
pop
add
lcall
cs
mov
dec
mull
xlat
out
sbb
xchg
imul
push
cwtl
mov
getsec
nop
scas
aaa
aas
dec
adc
dec
fidivs
push
out
outsb
pop
xlat
insb
xchg
push
inc
adc
scas
imul
fldl
jnp
cmp
out
pop
mov
xchg
imul
cmpsb
mov
lods
jge
movsl
mov
sbb
xchg
push
mov
lea
cmp
movsl
adc
cmp
lea
lds
add
sbb
adc
mov
cmp
fidivrs
push
ja
outsl
rcr
adc
jns
push
add
out
mov
and
cmp
mov
test
dec
xchg
pop
fnstenv
lret
mov
xchg
mov
or
add
and
int
loopne
and
gs
dec
int
sbb
pusha
sbb
enter
push
cmp
popf
and
xor
jae
adc
fwait
mov
xchg
or
in
sbbb
addr16
cmp
call
pop
xchg
mov
shl
jecxz
mov
inc
cmp
push
stos
sbb
roll
dec
xchg
stos
mov
fldl
pusha
mov
ret
push
mov
bound
int3
jae
sahf
lods
stc
xchg
mov
inc
or
sbb
mov
cmp
shrl
or
out
nop
sbb
mov
in
pop
jl
scas
sbb
pushf
mov
fwait
adc
icebp
leave
xchg
out
lock
iret
adc
js
and
push
call
fcoms
mov
mov
add
sbbl
and
xor
bound
insb
jae
dec
je
cld
dec
fcoms
cmp
lahf
cmp
push
jg
and
dec
pop
stos
mov
xchg
dec
roll
push
cmpsb
add
pop
aam
out
clc
into
mov
in
mov
out
lcall
mov
or
daa
popa
inc
fwait
and
adc
in
dec
and
bound
jmp
mov
cli
xchg
and
mov
mov
xor
scas
iret
mov
shlb
lret
outsl
jg
out
xchg
xchg
divl
mov
mov
test
mov
shrl
or
pop
xor
jle
inc
xor
imul
cltd
pop
jle
icebp
icebp
jecxz
scas
cmp
pop
pusha
repnz
xchg
rep
cmp
iret
adc
jge
frstor
push
adc
cwtl
jmp
icebp
push
push
ljmp
rcl
or
adc
jmp
and
imul
jnp
sub
scas
movsl
push
pusha
and
jle
mov
push
addl
push
xor
push
addb
push
cmc
out
mov
inc
movsb
es
xchg
ret
ja
in
push
rcl
cmp
and
xor
xor
add
jnp
jl
icebp
mov
movsb
or
scas
pop
inc
push
ret
sbb
mov
jmp
pop
lock
add
test
sub
mov
push
std
mov
outsl
aas
or
pop
cmp
mov
loopne
into
dec
lret
cmp
jg
mov
icebp
stos
test
movsb
enter
cmp
aaa
hlt
rcl
jae
loope
jb
iret
lcall
xchg
add
cmp
and
mov
push
sbb
movsb
cmp
add
dec
shl
xchg
xchg
imul
das
push
dec
or
and
inc
jns
sbb
filds
dec
in
xor
insl
rcl
sti
cmp
jge
rcrb
fsubrs
loop
xchg
xchg
inc
jno
xchg
cmpsb
dec
jbe
mov
nop
popa
cld
add
adc
xor
testb
xchg
add
scas
out
out
cmpsb
push
xor
mov
das
sbb
lret
data16
inc
or
mov
jmp
sahf
mov
jb
mov
and
in
lock
adc
jmp
jge
cmp
mov
in
in
lcall
in
cmp
fidivrs
sti
xlat
sub
cwtl
cmp
jg
aad
sub
fistpll
jecxz
cmp
out
push
test
push
and
scas
mov
imul
mov
lods
loopne
lock
aad
bound
ss
lods
dec
mov
pusha
vfrczsd
cmc
xor
pushf
sbb
int3
push
outsb
pop
xchg
iret
call
sahf
add
add
jnp
cwtl
cmp
push
pop
mov
push
outsb
dec
test
inc
mov
cwtl
es
jnp
or
stos
int3
out
jb
data16
xchg
popa
ss
call
and
je
aaa
ss
cmovo
xor
jle
pop
jle
aaa
jo
cmp
cmp
lcall
jg
ja
push
dec
inc
jbe
or
xor
pop
bound
cwtl
xorl
dec
sub
mov
data16
std
jbe
push
or
xchg
daa
xchg
aas
sub
jne
cld
dec
mov
xchg
lods
popf
jg
ficoml
roll
rcr
aas
dec
cmpsl
sub
xchg
jnp
jne
sbbb
pop
out
adc
mov
mov
mov
sbb
lods
jecxz
mov
mov
test
scas
pop
stos
cmpb
ds
jnp
into
or
stos
push
int
test
pop
shll
mov
movsb
mov
mov
test
mov
xchg
sti
insb
push
imul
out
jo
lcall
inc
fsubrs
je
and
fsubrp
mov
test
add
sbbb
daa
insb
fmull
fcoml
test
jmp
out
inc
pop
std
cmp
xchg
push
xchg
lret
rcrb
adc
xor
movsb
nop
cmp
and
push
push
scas
faddl
loopne
pop
shll
or
into
call
lret
repnz
arpl
cmp
call
or
push
xchg
pop
int
mov
sti
sbb
xchg
lret
test
mull
test
adc
fsubrl
push
mov
adc
mov
hlt
rcr
insl
lahf
repz
rclb
xor
std
nop
idiv
leave
push
popl
in
and
mov
sub
push
fdivrs
iret
push
jbe
loopne
push
cli
imul
sahf
out
int3
lods
roll
push
arpl
push
imul
lock
mov
xchg
leave
pop
pop
call
in
mov
mov
outsl
sbb
mov
sbb
mov
mov
cmc
dec
mov
pop
mov
jg
mov
mov
in
mov
add
jp
les
xchg
mov
mov
push
mov
adc
xlat
hlt
shl
xchg
scas
ret
int
stos
mov
mov
idiv
cwtl
and
pusha
xor
testl
mov
popa
out
mov
rclb
mov
jno
movsb
int3
jle
popf
aad
jae
cwtl
pop
pop
sbb
mov
add
arpl
push
mov
test
add
test
mov
repz
dec
adc
scas
adc
sahf
or
add
jl
mov
mov
mov
in
ljmp
mov
mov
and
xchg
imul
lods
jb
cwtl
imul
push
mov
mov
gs
decl
xchg
subb
test
add
push
mov
in
in
fs
push
or
out
mov
stos
shlb
iret
arpl
mov
loopne
and
pop
pop
pop
icebp
jns
mov
ret
pop
cmp
xchg
out
lea
push
cmp
sbb
cltd
pop
mov
adc
sbb
leave
scas
mov
adc
vcvtdq2ps
stos
or
out
push
xchg
fdivs
lcall
lret
xchg
fs
outsb
push
call
jns
jns
loopne
lcall
jno
pop
les
ljmp
sub
and
nop
aad
lret
test
repnz
fstpt
mov
xlat
shll
and
mov
in
ss
and
dec
pusha
in
xchg
jne
int3
mov
incb
inc
push
iret
addr16
mov
lahf
jae
mov
cwtl
add
frstor
in
sahf
pop
testb
shlb
aam
stc
cmp
out
mov
inc
mov
sub
enter
mov
je
mov
adc
cmc
lea
pop
clc
jmp
inc
or
xchg
outsl
cltd
add
fwait
jno
lahf
and
xor
dec
push
in
mov
pop
movsl
mov
pop
jle
fildl
add
cmc
jne
xchg
pop
mulb
add
push
push
mov
pop
inc
add
insl
es
int
arpl
dec
loope
push
enter
lret
aas
fisttpl
inc
out
push
in
cmpsl
das
jmp
cmc
mov
imul
sub
fnstsw
loop
movsb
jno
iret
xchg
mov
mov
xor
lret
ret
sahf
dec
repnz
adc
mov
dec
test
data16
xor
push
mov
ret
lods
sbb
add
cmpsb
out
or
mov
inc
or
pop
sub
sbb
loop
ret
fdivrl
leave
int3
mov
ds
insb
and
push
orl
in
adc
into
leave
mov
mov
dec
loopne
pop
sti
sbb
lea
adc
push
dec
jg
xor
and
out
mov
scas
shll
inc
adc
call
mov
xor
aad
inc
mov
push
adc
and
xchg
data16
jb
inc
mov
pop
enter
sbb
adc
push
cmp
jge
scas
push
xchg
decl
cwtl
ljmp
jns
lret
and
fcom
loope
fwait
xor
repnz
test
lret
shrb
and
push
mov
mov
into
fdivrl
push
jmp
xchg
dec
sbbb
mov
add
enter
dec
cmpsb
xor
mov
div
int
dec
mov
lods
imul
mov
push
repnz
lods
push
mov
xor
loopne
repz
mov
mov
add
call
sbb
std
jne
enter
insl
pop
dec
lock
outsb
lcall
xor
inc
icebp
inc
ret
push
adc
sbb
cwtl
jge
sti
xchg
sbb
sub
mov
jg
mov
jne
sub
pop
dec
push
xor
lods
cmp
outsb
test
mulb
out
xchg
jno
enter
cltd
xchg
push
jg
push
jge
ljmp
push
pop
test
push
jl
mov
mov
mov
test
sub
xor
or
daa
test
sbb
sub
movb
add
mov
or
and
xchg
cmp
mov
jle
sbb
insb
sub
pusha
pop
or
popf
pop
dec
dec
adc
stc
add
mov
mov
pop
dec
sti
xchg
pop
push
dec
add
xchg
push
adc
mov
push
mov
inc
sbb
and
sti
int
xchg
sub
in
std
sub
faddl
jecxz
inc
jns
sarl
xchg
sahf
js
popa
sar
mov
xchg
sub
aaa
movsl
and
fistpll
cli
dec
loope
dec
loopne
push
in
addr16
push
jl
movsl
inc
addr16
jno
shr
cld
push
roll
sahf
hlt
xchg
inc
cmpb
push
xchg
pop
inc
push
ret
clc
dec
jmp
push
xor
sbbb
pop
pop
pop
mov
add
loopne
inc
mov
mov
cmp
lods
pop
ds
adc
pop
cltd
adc
push
jne
cs
and
adc
cmp
fldcw
lret
jne
in
data16
xchg
inc
ljmp
sub
sbb
out
cmp
mov
add
sub
pushf
or
int
push
les
scas
ds
scas
scas
push
lods
and
addr16
ds
stos
push
add
dec
xor
insb
daa
push
inc
fsubr
repz
negb
orl
mov
loopne
rcll
inc
cmp
jno
fsub
or
push
out
por
add
test
and
mov
in
or
push
sbb
inc
cmc
add
and
repnz
fdivr
shlb
sub
mov
hlt
dec
dec
lea
sbb
adc
xchg
adc
and
mov
les
in
dec
mov
leave
dec
or
push
push
out
cmpsl
fsubs
xor
xor
add
mov
movsl
jge
aam
mov
mov
xor
pushf
scas
repz
mov
mov
into
sub
jecxz
mov
push
mov
sub
repz
cmp
vmovaps
mov
lcall
pop
add
mov
xchg
aaa
or
push
sub
push
push
fcmovnb
xor
dec
cwtl
xchg
loop
lds
mov
add
cld
in
out
mov
loope
stos
in
fucomp
inc
xchg
inc
lret
jae
ja
cmp
push
in
imul
cmpsl
mov
mov
imul
sub
push
stos
pop
and
popf
out
flds
scas
xchg
sbb
push
fdivrs
cmpsl
frstor
ret
xchg
mov
scas
sbb
scas
addl
inc
fxam
lds
and
mov
mov
mov
adc
pop
jns
in
ljmp
test
jns
je
test
dec
mov
pop
repnz
jle
xchg
cs
sub
movsl
loopne
mov
jb
sub
jecxz
stos
arpl
pop
push
fimuls
ljmp
dec
leave
icebp
adc
or
das
mov
lar
fwait
pusha
xor
addb
fsubrp
mov
shll
add
mov
inc
pop
aam
mov
nop
divb
push
sar
jmp
sub
dec
leave
sub
cmp
xor
fcmovbe
push
and
push
lret
xchg
or
adc
and
sub
daa
cmp
enter
sub
test
push
inc
das
pop
das
mov
arpl
sbb
repz
outsl
and
sbb
mov
xchg
cmp
inc
addr16
cmp
dec
hlt
das
dec
in
nop
or
sarl
stc
xor
in
mov
inc
nop
in
pop
gs
stc
pusha
pop
fisttpl
ror
arpl
dec
roll
inc
aas
mov
inc
aad
pop
jmp
movsb
in
add
sbb
push
cltd
or
add
adc
cmp
ja
sbb
popf
imul
add
adc
dec
andl
xchg
add
aaa
outsb
and
xor
fs
ret
lahf
xchg
mov
xor
bound
pop
cmp
mov
mov
sti
sub
stc
orb
and
fdiv
insl
out
jge
and
push
fcomp
jge
jns
mov
add
adc
cmp
cli
lret
cli
adc
ds
cmpsl
shl
xchg
sub
nop
inc
cs
lcall
fdivrl
lret
cmpsl
and
insb
out
mov
int3
jmp
mov
mov
orb
popa
popf
fs
push
mov
jmp
popa
leave
add
dec
roll
dec
add
xor
mov
adc
jge
dec
lock
mov
inc
dec
mov
lock
je
dec
mov
pop
dec
subb
popf
scas
in
mov
loopne
xlat
cs
loopne
mov
jge
xchg
movsl
sahf
out
add
and
ja
mov
ljmp
repz
push
jge
mov
mov
test
cmp
pop
jle
cmp
fistl
pop
push
lock
push
mov
push
movsb
xchg
mov
mov
mov
outsb
fadd
mov
dec
inc
lahf
and
sub
sub
jae
insl
movsl
cmp
int
and
stc
push
in
mov
sbb
out
dec
aaa
loope
data16
cmp
dec
push
cmp
sahf
push
testl
insl
pop
leave
lret
pop
fwait
aad
and
cmp
pop
and
mov
into
jle
add
movsb
cs
pop
pop
loopne
pop
pushf
pop
movsb
in
mov
iret
pop
popa
das
lods
pop
dec
add
leave
aad
fnsave
daa
jb
dec
sbb
xor
sbb
in
mov
push
scas
dec
and
inc
rol
jmp
jl
cmpsb
dec
sbbl
rolb
sub
add
mov
out
mov
iret
inc
mov
ljmp
ds
addl
mov
cmp
jp
or
mov
cs
inc
mov
dec
shll
clc
cmp
adc
mov
mov
xor
ja
mov
sahf
inc
jp
movsl
int3
les
outsl
mov
lods
fistpl
iret
lahf
addl
inc
sub
test
push
mov
add
js
push
repnz
aam
loop
sub
addr16
loope
jno
bound
mov
xchg
test
test
and
inc
mov
fmull
into
loopne
test
aad
sbb
test
dec
jecxz
adc
pop
cmc
add
inc
iret
dec
sti
adc
xor
mov
inc
dec
xor
add
jns
sbb
dec
movsl
bound
jg
push
loop
inc
pushf
movsl
lcall
push
sub
or
inc
cli
push
sub
xor
sub
repz
jg
mov
dec
shlb
cli
cli
pop
cli
jle
adc
clc
mov
mov
adc
pop
fidivrs
ss
cmp
ret
dec
cmc
sbb
repz
fs
or
add
and
or
stc
mov
cmpsl
mov
xor
xor
dec
pop
xchg
cmpsb
inc
aam
xacquire
adc
inc
or
jp
leave
xchg
jge
mov
call
cmpsl
insl
mov
es
push
cmpsl
fildl
adc
add
aam
dec
sbb
enter
pop
insb
outsl
mov
sbb
push
xchg
enter
lcall
movsb
and
mov
cmp
lds
ljmp
ret
cmp
stos
mov
scas
jne
cmp
test
mov
mov
jb
dec
movsl
xchg
mov
dec
sub
mov
ljmp
popf
xor
imul
adc
sub
mov
mov
lods
adc
daa
dec
mov
mul
and
or
adc
rclb
out
inc
mov
ficoml
js
xchg
fwait
sbb
xor
mov
inc
sub
mov
mov
loop
stos
mov
jge
lea
call
pop
inc
notl
ds
inc
in
adc
ljmp
sbb
or
sub
pop
inc
scas
mov
mov
gs
sbb
sbb
adc
out
sbb
pop
mov
out
mov
arpl
pop
jg
ljmp
sub
cmpsl
jp
addr16
jecxz
pop
pop
test
pop
cli
jecxz
mov
je,pt
int3
sbb
pop
dec
mov
ds
lds
mov
fisttpl
and
es
paddusw
movsb
lods
imul
repnz
mov
sub
lods
cld
jp
cs
push
lods
enter
movb
cmp
sahf
mov
scas
mov
repz
inc
mov
adc
push
dec
mulb
inc
incb
mov
xor
push
pop
sub
pop
push
loopne
lcall
outsb
adcl
popa
aad
inc
mov
or
sbb
lods
outsb
shlb
and
stos
addl
pushf
cs
lock
push
cmp
mov
into
jmp
push
loopne
lds
add
imul
or
repz
mov
dec
xlat
mov
inc
add
andb
xor
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
pushf
sbb
and
pop
xor
aas
movsl
add
jg
stc
cmpsl
jnp
mov
add
xchg
xor
add
scas
lock
cmp
jp
pop
clc
pand
outsl
jge
push
leave
sarb
ret
insl
sub
add
mov
sub
pop
fisubs
ret
and
adc
fs
loope
pop
or
in
xor
rsm
xor
mov
imul
stos
stc
mov
inc
sar
mov
pop
out
push
adc
xor
cmp
insl
push
inc
lods
out
nop
xor
dec
jmp
shrb
adc
aaa
cmp
cmp
lods
mov
mov
mov
movsb
fimuls
aaa
add
loopne
pop
fdiv
ds
adc
jae
cltd
in
xchg
ljmp
stos
push
sbb
aad
inc
cli
pop
cmp
push
inc
adc
stc
dec
lds
cmp
idivb
push
negb
jp
cmp
and
jg
out
aas
push
int
jmp
inc
scas
repnz
fimull
xchg
cmp
cld
test
mov
pop
mov
pushf
mov
in
rcr
pop
out
push
fsubrl
sbb
test
fs
jnp
inc
daa
sbb
inc
jne
add
cmp
shl
and
jp
jne
xchg
movsb
js
sub
lea
sbb
mov
lds
daa
addl
pop
into
fldz
push
repnz
mov
push
in
ficoms
add
inc
lret
fildl
mull
jb
and
jbe
xchg
xchg
pop
in
leave
inc
push
sub
mov
pop
pusha
push
and
and
jns
addr16
or
push
cmpb
scas
and
outsb
sub
test
adc
iret
mov
loopne
fsub
adc
dec
jecxz
adc
sbb
lock
daa
mov
cmp
nop
sub
fildll
inc
imul
adc
call
xor
dec
sub
inc
inc
inc
push
fsub
dec
push
push
sub
push
in
dec
adc
sub
mov
ja
cld
push
xor
push
mov
mov
leave
xor
mov
cmp
cmc
pop
out
jb
and
add
inc
cmp
lahf
dec
pop
sub
js
inc
cltd
push
call
js
fsub
in
push
js
sbb
push
mov
inc
int3
lahf
adc
pop
dec
adc
xchg
das
pop
std
inc
repz
xor
jae
xor
andb
adc
lcall
adc
mov
lret
outsl
lret
stos
imul
and
fisttps
adc
cmp
ret
int3
in
xchg
popf
inc
rep
sbb
mov
cmpsl
and
pop
iret
jo
mov
popa
fcomip
pop
dec
cmp
inc
push
imul
ret
jbe
mov
js
hlt
push
xchg
ljmp
cltd
adc
cmpl
addr16
mov
add
or
xor
lods
leave
addr16
dec
lods
cli
pop
in
xor
mov
test
nop
add
insb
daa
sahf
xchg
fistpl
xchg
jnp
neg
mov
lea
add
push
dec
dec
arpl
add
pop
jno
add
sbbl
out
dec
mov
test
push
out
daa
scas
inc
jecxz
and
push
pop
inc
mov
jecxz
xor
cmp
mov
xor
loop
mov
jl
sbb
repz
pusha
and
mov
rcr
outsl
dec
push
mov
push
rcr
xchg
ret
nop
sti
pushf
mov
cs
inc
gs
dec
sbbl
test
mov
jecxz
xchg
loopne
pop
pop
jmp
cmp
mov
idivb
pop
addl
aas
stc
push
cmpsl
xor
jae
aaa
test
outsb
cmp
adc
jmp
aaa
arpl
test
imul
leave
sbb
lock
daa
cmpsb
inc
xchg
cmpsb
cmc
sub
adc
fildl
gs
or
lcall
mov
jb
pop
jge
and
pop
mov
shl
jne
outsb
outsl
shrl
stos
and
loope
test
insb
scas
add
pop
std
inc
stos
clc
xchg
out
test
mov
fildl
iret
dec
pusha
add
std
fmull
pop
cmpsb
push
lcall
nop
sub
dec
pop
fcmovb
out
loope
add
xchg
lahf
into
lcall
test
test
jecxz
cmp
test
subl
and
mov
popa
pop
sub
dec
fsubrl
pusha
mov
insl
js
dec
jnp
outsb
adc
lea
imul
mov
dec
ds
mov
enter
xor
mov
ficompl
rorl
and
jp
xchg
xor
cmp
scas
sub
mov
push
shll
in
mov
lock
outsb
mov
cli
loopne
out
sbb
cmp
dec
jmp
popf
loop
lret
in
ret
popl
inc
sub
in
or
imul
bound
icebp
jle
ljmp
int3
cmp
test
nop/reserved
pop
outsl
mov
imul
out
nop
nop
mov
clc
dec
sbb
push
ja
mov
or
dec
movsl
or
dec
adc
mov
es
and
inc
dec
pop
jo
push
and
pop
inc
subb
sbb
lea
js
push
sbbl
mov
dec
nop
cmp
adc
sti
jmp
out
push
mov
lahf
sahf
xchg
or
inc
in
cmpsl
sbb
push
icebp
loop
sub
mov
push
jp
outsl
insb
cmp
scas
mov
xchg
dec
sbb
adc
jge
push
pop
adc
loopne
mov
adc
mov
ja
ja
or
dec
xchg
dec
sub
xor
lea
setl
shr
gs
lcall
mov
adc
add
mov
inc
xchg
dec
inc
bound
lret
fdivrs
add
leave
sub
dec
lock
inc
mov
movl
hlt
mov
pop
icebp
and
inc
pop
dec
sub
in
or
xlat
push
stc
andb
push
dec
bound
hlt
push
push
cmp
inc
inc
scas
cld
or
sbb
out
adc
stc
sahf
inc
pop
cmp
andl
outsl
loopne
cs
cmp
add
dec
aam
inc
ds
leave
lods
dec
ja
cwtl
sbb
mov
mov
xchg
fisubl
nop
jnp
popa
sub
daa
loopne
scas
or
jne
xor
cld
loopne
add
cmp
fstpt
dec
cld
clc
lods
add
in
and
scas
push
out
sbb
sahf
lea
sbb
dec
rorl
nop
dec
add
pop
mov
push
mov
ror
hlt
cmp
sub
cli
mov
into
sbb
in
cmp
xchg
mov
addr16
add
dec
mov
imul
jnp
inc
repnz
xor
pop
push
subl
dec
movl
jle
mov
in
cmp
ljmp
lea
ljmp
scas
push
pop
sub
and
jns
xor
inc
aam
insb
pop
mulb
mov
fsubs
or
or
jecxz
das
jae
push
or
cs
leave
jecxz
jmp
test
adc
sub
in
shlb
rorl
jmp
push
icebp
jbe
aad
das
outsb
push
insb
and
inc
and
stc
push
out
jb
sahf
cmpsb
sub
cli
xor
dec
lcall
sbb
mov
enter
leave
into
dec
mov
cmp
dec
pop
aad
push
xor
mov
es
xor
add
lahf
sarl
mov
pop
mov
in
test
stc
sbb
movsl
sub
sbb
test
mov
enter
ret
inc
mov
test
cmp
out
mov
or
add
cltd
adc
mov
and
inc
cmp
stos
cmp
add
pop
sbb
pushf
mov
pop
imul
aaa
inc
mov
sbb
mov
shll
jbe
dec
fxch
adc
pop
and
jecxz
lds
or
pop
loop
sti
lret
imul
out
js
fmuls
jle
xor
xor
mov
pusha
sbbb
test
push
out
inc
xor
pop
mov
add
daa
popa
jns
mov
dec
xchg
sarl
dec
inc
arpl
ficoms
sbb
jg
iret
pop
loop
adc
in
test
adc
addr16
add
cltd
xor
or
mov
call
out
adc
aaa
inc
sar
sub
aam
xlat
inc
sbb
mov
pop
in
push
out
sub
cmpsl
jb
cmc
inc
xchg
in
stos
xchg
lock
push
and
pop
fisttpll
test
movsb
jno
stc
inc
push
mov
sub
fdivrl
test
lcall
mov
jmp
insb
out
lock
fwait
push
sub
dec
das
in
addr16
stos
xor
mov
push
out
sub
je
pop
adc
mov
fs
adc
jns
mov
sub
lahf
pop
and
xlat
pop
test
push
add
xor
rorl
inc
push
mov
mov
jge
inc
lods
mov
hlt
push
cli
data16
inc
jb
inc
jle
or
ss
aam
cmpsb
add
mov
scas
jl
add
das
movsl
fnsave
mov
jg
sub
or
imul
pop
sub
xor
rorl
add
mov
fdivrs
or
or
inc
or
jge
adc
sbb
fmuls
dec
add
fwait
test
xchg
mov
das
test
push
test
dec
pushf
pop
rcr
int
xchg
xchg
lahf
rorl
call
xchg
sahf
roll
mov
outsb
jmp
jbe
lret
loope
mov
gs
daa
cmp
push
pop
test
ja
cmpl
pop
cmc
and
out
mov
push
lret
mov
mov
loope
aam
or
cltd
je
sbb
or
sbb
int
iret
fimuls
sarl
cmpb
cmp
jl
outsb
into
push
out
jle
sbb
pop
movsl
xchg
cmp
mov
add
stc
lea
xor
and
lods
ljmp
pop
faddl
xor
pop
sbb
xor
test
dec
jg
mov
push
push
push
fstpl
xchg
pop
stos
pop
std
pusha
xor
dec
gs
mov
jns
les
ja
std
mov
mov
out
jmp
sub
jp
xchg
fs
jbe
inc
insl
or
and
insl
sbb
inc
icebp
mov
xor
insb
in
lods
stc
dec
in
pop
loope
aad
jecxz
in
icebp
inc
and
and
jbe
cmp
push
out
mov
and
mov
push
inc
mov
pop
xlat
lahf
pmullw
stc
adc
mov
sub
imull
in
mov
inc
push
and
pop
sahf
shll
repnz
jnp
movb
mov
in
rcrl
and
sarl
or
lret
and
ss
adc
jge
mov
insl
leave
push
push
daa
inc
push
addl
push
dec
adc
xor
movsl
inc
jb
rcrb
pop
in
xchg
jmp
pop
jnp
jae
xor
subl
and
jbe
xor
mov
rcrb
mov
dec
jg
roll
or
jae
mov
cmc
movsl
sarb
mov
mov
or
fdivr
pushf
and
ret
stc
dec
lcall
push
imul
sub
lcall
sbb
mov
hlt
and
mov
push
ret
outsb
jge
jmp
insl
jbe
sbb
mov
push
pop
lock
and
mov
lods
rorb
imul
mov
and
enter
int3
lea
lahf
pop
addr16
jle
arpl
push
insb
js
pop
int3
push
jbe
scas
icebp
adc
lret
cmpsl
test
or
mov
mov
xchg
es
mov
loopne
sbbl
jns
in
lods
sub
lcall
add
stos
xchg
popf
fucomi
movsl
jmp
das
mov
sbb
adc
sbb
cmpsb
or
jbe
jb
mov
lods
pop
cli
push
ret
jge
out
add
lret
test
adc
jne
mov
jnp
mov
mov
scas
mov
je
lods
push
sub
aad
dec
push
pushl
mov
das
fidivrs
cmpsb
add
or
sbb
movsl
and
jmp
stos
andl
xor
pop
pop
loopne
dec
stc
jns
mull
mov
in
jge
add
cmp
mov
insb
mov
lret
shrl
or
add
inc
fcmovnbe
push
inc
pop
pop
xchg
clc
jns
jbe
sub
loope
xor
and
adc
mov
xor
mov
cmp
dec
sub
or
test
pop
pop
lcall
mov
mov
dec
cmp
test
das
add
push
cmp
adc
mov
sahf
int3
mov
push
subb
jp
ret
aaa
lods
and
loop
scas
pop
int3
imul
movsb
clc
inc
shrl
cmp
mov
repz
scas
cltd
mov
cmpl
cmp
jmp
ljmp
fstpt
rolb
push
xor
xchg
mov
cmp
inc
std
andl
adc
push
hlt
xchg
pusha
popa
das
aas
cltd
aaa
jmp
xchg
sub
cmpsl
xchg
cmpsl
push
mov
daa
inc
mov
data16
pop
ret
jmp
mov
dec
jmp
in
fwait
push
mov
push
xor
jl
push
bound
pop
jg
cmc
push
les
push
ljmp
cmovo
mov
sbb
fsubs
pop
jnp
mov
sbb
sub
cmp
pop
mov
mov
movb
xor
adc
mov
add
loope
dec
dec
or
mov
dec
pop
repnz
shlb
pushf
and
out
stc
das
mov
push
xlat
cmp
in
push
dec
outsl
mov
adc
sbb
jo
sub
in
adc
sub
test
inc
mov
and
js
nop
push
cmp
and
aas
adc
or
leave
xchg
dec
fbstp
popf
jbe
dec
sub
gs
ja
mov
in
mov
add
dec
mov
mov
cmp
andl
cmc
cmp
loop
inc
sub
and
data16
cs
and
mov
pop
sahf
push
rcl
xchg
xorb
enter
xchg
sar
mov
repz
mov
adc
pusha
mov
pop
inc
and
xor
adc
jnp
dec
mov
enter
xchg
jp
inc
and
mov
xor
fisubrl
ja
aad
lds
cmp
stos
mov
add
mov
int3
fs
jne
add
in
data16
xor
pop
push
and
xchg
clc
mov
sbb
xchg
and
cmc
and
xor
sub
and
mov
call
sbb
cmp
add
jb
inc
sahf
mov
jno
xor
into
mov
mov
sbb
out
mov
lea
jg
mov
and
cmp
shll
jo
lea
jbe
outsb
mov
push
jae
aaa
push
push
xor
add
cwtl
push
fwait
jg
nop
adc
pushf
dec
dec
je
mov
push
sub
mov
push
enter
xor
test
jecxz
movsb
or
out
and
jl
mov
in
lods
adc
sub
jmp
js
pop
in
mov
xor
cmp
sarb
ds
pop
lcall
and
xor
mov
and
insb
pusha
adc
xchg
mov
fsubs
stos
pop
push
sahf
sub
imul
movsb
sbb
aam
jmp
dec
mov
je
xlat
jb
lods
jae
sti
adc
mov
or
xchg
sbb
stc
mov
decl
xchg
stc
and
pop
dec
loopne
cmp
and
jo
into
fdivrl
rolb
hlt
je
jl
and
frstor
or
sub
ja
add
test
out
movsb
sub
stos
shl
clc
pop
mov
pop
dec
js
sbb
roll
mov
inc
adc
fs
sub
fisubrs
sbb
mov
scas
cltd
jno
jg
cmp
sarb
mov
stos
test
adc
in
rcl
adc
push
inc
sti
mov
dec
mov
outsl
xor
sub
fimull
xorb
ja
imul
or
push
sub
movb
push
jecxz
dec
lock
mov
mov
arpl
stos
mov
and
jo
mov
dec
adc
es
push
popa
xchg
sahf
stos
aas
jo
pop
lcall
out
adc
enter
bound
lock
imul
fstpl
mov
aas
inc
inc
add
jno
xchg
xor
dec
dec
sbb
imul
inc
pop
and
sar
icebp
test
sub
and
movsl
fidivrl
sbb
scas
mov
jmp
ror
data16
js
mov
loope
mov
jnp
popa
hlt
pusha
jns
xchg
mov
mov
stos
adc
push
or
xchg
cmp
dec
jg
and
cmc
mov
sub
sti
xor
jg
xor
or
aas
add
gs
add
pop
jb
dec
jo
lock
popa
test
fistl
pop
test
adc
int3
fstl
mov
mov
xor
fs
int
ds
lock
add
ret
sub
jecxz
jo
loopne
stos
mov
cmp
ret
mov
sbb
cmp
mov
mov
add
ljmp
mov
ret
cmp
fwait
mov
shll
into
add
jmp
pop
and
jle
or
sub
xchg
nop
inc
or
neg
cs
inc
xor
sub
adc
cli
mov
and
loope
mov
lea
pop
cmp
mov
sbb
icebp
clc
outsb
dec
rclb
push
in
xor
sub
xor
push
lahf
sahf
test
fnsave
pop
sub
out
sub
shll
nop
lods
xchg
xchg
push
arpl
movsb
push
es
roll
xchg
outsb
bound
dec
jno
mov
mov
adc
jle
pop
and
adc
and
xchg
stc
add
call
daa
inc
sbb
insl
repnz
mov
push
jl
ss
jp
movsb
stc
mov
in
adc
jnp
out
mov
mov
add
pop
and
and
sbb
dec
mov
insb
enter
test
cmpsb
pop
mov
icebp
sub
mov
dec
push
imul
adc
cmp
adc
jno
or
enter
xchg
add
in
add
mov
je
push
push
or
dec
jmp
fwait
jl
adc
lods
daa
stc
xor
xchg
fbstp
dec
cltd
xchg
inc
mov
and
insb
adc
fdivrs
loopne
xor
inc
arpl
xchg
pop
rcll
dec
cmp
dec
stc
cld
jno
pop
inc
aam
cwtl
testl
popa
or
loope
fnsave
ja
jno
jae
sub
cmp
popf
jns,pt
leave
aas
add
arpl
pop
inc
sub
mov
push
scas
dec
mov
stos
inc
test
adc
lcall
jae
cmp
es
dec
jle
jecxz
sbb
fstp
jne
jb
sbb
fisttps
jb
xchg
mov
mov
movsb
ss
outsb
mov
push
dec
dec
push
pop
push
cmpsl
dec
push
int
mov
daa
sub
mov
mov
data16
sti
add
pop
cmp
mov
mov
outsb
push
enter
sbb
out
sbb
sub
fbld
sub
lret
pop
mov
arpl
inc
mov
add
mov
cmp
sbb
test
sub
push
adc
sub
xor
xchg
loope
lds
dec
xor
lret
data16
adc
sbb
push
jbe
fcom
and
insl
loope
es
dec
pop
xor
jae
push
das
int
fildl
cmc
pop
cli
push
mov
jmp
icebp
loope
xchg
out
push
icebp
add
gs
mov
imul
xchg
test
mov
lret
pusha
fucomip
clc
les
xor
jae
and
call
xor
dec
dec
fistl
jmp
pop
dec
mov
pop
mov
ja
sbb
push
cld
jnp
sub
cmp
and
pop
leave
dec
cld
mov
and
and
or
pop
adc
sub
test
rolb
test
xchg
or
push
enter
idiv
pushf
insb
mov
stos
imul
ljmp
mov
in
ds
push
xchg
mov
inc
out
loop
cmp
out
stc
dec
ljmp
sub
imull
out
xorl
push
jmp
fwait
daa
cmp
fbld
mov
sbb
or
stos
inc
pushf
mov
les
mov
jp
mov
push
adc
in
pusha
mov
and
repz
aad
add
sub
shll
adc
or
jl
mov
test
js
or
or
and
cmpsl
in
or
in
loop
push
js
mov
jbe
dec
scas
sub
push
xorl
lds
shll
and
or
leave
scas
lods
cmova
inc
pcmpgtb
sbb
mov
std
mov
jp,pt
in
outsb
aaa
es
lods
mov
bound
and
adc
push
in
call
dec
popaw
adc
add
or
insl
data16
lock
iret
lods
xor
or
cmp
adc
add
mov
sbb
daa
cwtl
rcr
or
sub
inc
or
and
rcll
fdiv
mov
rorl
adc
mov
push
addr16
mov
cmp
stos
inc
mov
cmpps
in
das
xor
xor
pop
sbb
mov
xchg
iret
pop
pop
ss
sbb
adcb
out
mov
sahf
ds
insb
popa
cs
xor
das
push
movsb
lods
inc
mov
push
popf
cld
lods
sbb
push
cmp
mov
mov
aaa
jecxz
call
sbb
jl
sub
stos
push
sbb
cmp
test
sbb
fwait
imul
in
fildl
enter
mov
ja
push
mov
mov
add
pop
or
fwait
stc
fcoml
push
push
xor
rcrl
pop
mov
gs
add
add
js
in
inc
jmp
adc
movsb
in
fnstenv
fcoms
fistps
inc
push
loope
xchg
das
fwait
insl
je
call
into
push
into
or
scas
mov
shlb
xchg
test
fldcw
mov
xor
out
mov
out
aad
aaa
inc
fildll
mov
cmp
cmp
xor
dec
dec
xlat
add
and
out
mov
xlat
xchg
clc
sub
bound
xlat
pusha
and
push
aam
or
stos
cmp
repz
addb
shll
push
leave
stos
popa
push
sahf
push
jecxz
or
mov
pop
mov
enter
fnstcw
push
loopne
leave
jg
loop
das
and
push
js
mov
sub
xor
lahf
xor
mov
jp
insl
pop
jbe
xchg
popa
and
mov
lods
add
sbb
xchg
mov
push
and
ffreep
mov
cwtl
hlt
mov
and
push
scas
xor
push
cmp
roll
mov
xor
mov
data16
fcomp
cmp
or
xchg
dec
jo
push
repz
andl
mov
xor
scas
inc
mov
xchg
mov
insb
push
cld
shl
fiaddl
ljmp
test
sar
sub
jno
pop
pop
push
pop
out
mov
xor
pop
jb
push
leave
mov
push
enter
incl
xorb
popa
mov
mov
adc
pop
icebp
and
out
or
orl
stc
movsb
rolb
dec
adc
inc
xchg
out
cltd
xchg
mov
leave
jge
dec
bound
inc
hlt
mov
jb
xlat
or
sub
orb
loop
dec
dec
sbb
jo
rol
sub
dec
add
jne
push
adc
xor
lcall
cmp
repz
or
adc
push
push
clc
jbe
cwtl
adc
das
lods
cmp
add
push
xor
sbb
mov
pop
aaa
subb
add
icebp
sbb
cltd
xchg
roll
ds
push
mov
lret
pusha
sbb
pop
popa
mov
dec
arpl
ret
jb
scas
sub
xchg
cmp
out
mov
lds
inc
call
add
in
rorb
dec
pop
cmp
lods
jp
adc
stc
and
xor
pusha
data16
xor
inc
bound
xchg
inc
xor
js
and
cmpsl
pop
sbb
jl
xor
pop
hlt
popa
and
fildll
sub
icebp
daa
das
imul
mov
mov
jbe
or
fcmovnb
popa
or
pop
inc
es
mov
ret
pusha
or
loop
inc
scas
mov
sbb
sbb
or
dec
sahf
gs
inc
popf
repnz
add
mov
xchg
daa
lea
sbb
sub
shrb
push
subb
pop
je
das
push
mov
sub
outsl
mov
sarl
cld
jno
push
or
iret
mov
lods
sahf
jmp
adc
cld
iret
inc
in
popf
pop
out
outsb
mov
jnp
mov
fsubs
or
push
fdivrp
adc
jmp
add
scas
mov
cmovp
shlb
cmpsb
fmull
mov
stos
xor
jp
push
fbstp
mov
out
jmp
arpl
ret
fwait
bts
jns
xchg
cmp
int
pop
jg
ret
push
sbb
call
mov
xor
repnz
jae
mov
and
sti
mov
cmp
mov
jp
movsb
jb
stos
push
imul
test
xchg
test
jmp
push
xchg
andl
js
mov
ret
cs
in
out
cs
and
inc
rorb
bnd
push
push
dec
inc
gs
cmp
mov
call
lods
ret
xor
mov
gs
adc
mov
cmp
ja
lret
cmpsl
mov
loop
aad
and
pop
stc
mov
aas
fldenv
pop
imul
call
jae
ffreep
add
cltd
add
int3
in
xchg
mov
or
sbb
pop
jle
cmp
out
aam
xor
hlt
jb
jne
mov
in
dec
pop
testl
fsubs
bound
fs
mov
aaa
add
adcl
imul
hlt
imul
iret
cmp
jge
pop
or
sub
fsubl
fidivs
inc
push
xlat
int3
mov
sub
or
addr16
add
lret
sub
jne
shlb
xchg
in
int3
push
inc
mov
lret
test
loopne
cmp
pop
out
popa
pop
xchg
mov
jne
adc
ret
cs
push
mov
roll
xchg
loopne
pushf
mov
xorb
and
out
insl
add
sub
xchg
or
push
pop
mov
cli
fisttps
mov
and
test
cmpsb
adc
arpl
mov
shr
pushf
outsb
mov
repnz
loopne
and
adcb
sub
sbbl
fucomi
sbb
dec
pop
cltd
je
add
xorl
daa
test
xor
cmpsl
pop
call
cltd
jmp
sbb
iret
fisttpl
push
stc
loopne
ret
pop
sub
lea
icebp
addb
sub
xchg
test
ret
je
adc
mov
cmp
pop
inc
xor
les
dec
imul
stos
into
jns
inc
roll
pop
jp
loope
fists
int3
pop
adc
jae
xchg
fwait
sub
mov
jecxz
add
inc
ja
or
cld
lea
outsl
sub
adc
jno
cmp
inc
and
sbb
cmpsb
imul
add
sbb
xor
or
xchg
popf
das
jno
cmpsl
and
cmpw
sub
sbb
cs
aam
or
sub
sub
ret
jecxz
sub
xor
imull
fdivrs
mov
pop
pop
add
out
in
daa
lcall
fsts
insb
stc
repnz
cmpsl
outsb
push
and
push
pop
out
pop
xchg
pop
enter
sub
pop
mov
fnsetpm(287
inc
imul
xor
sti
sbb
xlat
push
test
sahf
les
pop
and
cld
add
sub
shld
dec
ret
jmp
mov
shll
rcr
shll
jecxz
mov
test
pop
stos
test
shlb
and
fldcw
push
jo
cmp
lea
outsl
rcrb
jno
pop
into
pop
cli
insl
cmp
push
fidivl
scas
inc
sti
mov
jb
rcr
cmpl
adc
daa
push
xor
mov
add
inc
outsl
out
rcr
icebp
stc
je
fstp
jmp
push
xchg
mov
dec
nop
dec
add
decl
hlt
inc
fbld
sbb
adc
mov
test
add
mov
out
loop
and
add
shlb
int3
mov
js
add
fisttps
fs
popa
mov
stos
lahf
push
enter
data16
cmp
iret
mov
movb
ret
shl
push
notb
stos
push
test
xchg
in
or
cmp
push
adc
fistpll
stc
pop
scas
inc
inc
test
jmp
jge
mov
push
insb
xchg
mov
or
out
clc
pop
cmp
inc
arpl
das
xchg
jg
add
clc
dec
sbb
jo
adcb
scas
clc
inc
cli
jno
cmc
lret
cld
xorb
mov
rcrb
sbb
sub
jae
imul
mov
lea
aad
xor
scas
xchg
aaa
sub
jbe
lock
mov
mov
mov
dec
and
and
dec
push
push
in
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
push
xlat
sub
addl
sub
jmp
loop
push
sub
dec
xchg
adc
aaa
xchg
cmp
fcmovnb
das
punpcklbw
xchg
bound
xchg
adc
pop
dec
iret
movsl
xor
adc
movl
cmp
ret
aam
gs
std
hlt
lcall
test
xor
leave
jge
arpl
shrb
ds
fisttps
mov
xchg
enter
inc
xor
ds
cmpl
sti
imul
shll
in
lock
aas
into
lahf
movsb
lea
cmp
andb
sub
pop
cmc
out
xor
pop
push
adc
into
repnz
lret
fnsave
jbe
mov
jle
in
lds
ficomps
add
movb
sub
jmp
xchg
jmp
leave
cld
jb
jle
xor
pusha
int3
sbb
xchg
out
lahf
pushf
cwtl
stos
daa
pop
out
lods
popf
xchg
mov
decl
and
adc
test
out
cmc
xorl
or
rcr
xchg
xchg
jo
jo
scas
jl
xor
mov
xchg
js
jno
pop
and
jg
or
rcrb
popf
pusha
mov
shlb
insl
lret
push
xchg
mov
add
cmp
je
xlat
push
lahf
ret
xor
repnz
cmp
shrl
or
push
add
push
fld
scas
in
add
idivl
cwtl
pavgb
in
xor
lds
push
fsubrs
xchg
js
dec
adc
ja
fbld
mov
imul
push
mov
mov
xlat
push
push
lods
jecxz
fcomps
stc
mov
stc
popf
inc
popa
hlt
inc
push
jmp
lods
into
stos
sbb
clc
jb
andl
test
mov
fstpt
pop
xorb
pushf
test
loop
jne
add
adc
xor
sbb
cmp
push
mov
decb
call
sub
call
xchg
rcrl
bound
push
xlat
jno
cmpsl
jle
out
inc
cmp
sbbb
jnp
subl
push
and
mov
lds
repz
call
mov
lahf
ss
adc
lret
stos
ret
imul
sub
sbb
pusha
ja
and
add
cmpsl
push
je
mov
inc
imul
fimull
shrb
jecxz
les
sbb
movsb
and
nop
dec
cmpsb
int3
sbb
xchg
xor
add
sahf
das
adc
mov
mov
pop
mov
scas
xchg
repnz
mov
mov
cmp
sub
mov
cmp
push
test
dec
and
jg
cli
push
xor
mov
jbe
xor
int3
jns
adc
mull
xor
mov
dec
mov
cli
jae
sub
cmp
jge
adc
mov
inc
test
mov
and
pop
ss
ss
mov
stos
cltd
sub
or
ret
scas
inc
aad
test
je
data16
and
add
sbb
jg
push
xchg
arpl
mov
push
outsb
and
mov
cmp
sub
out
outsb
xor
cld
dec
mov
dec
ljmp
rcrl
and
push
or
adc
pop
loopne
fsub
push
iret
cmp
ja
pop
stc
mov
divb
or
aam
notb
icebp
out
test
dec
and
scas
xor
in
nop
push
add
in
insb
lahf
mov
fidivl
jp
or
and
es
add
or
popa
daa
cmp
sub
movsl
adc
popf
inc
sub
fucom
mov
sarl
lods
and
and
stc
leave
fistl
jge
or
pop
daa
mov
push
clc
push
dec
and
or
xor
dec
loop
sahf
sub
gs
sub
add
shrl
push
pop
push
daa
xor
add
or
aam
aaa
pop
fwait
push
lahf
lret
movsb
adc
inc
pop
pusha
push
add
lret
add
insb
outsb
mov
fnstenv
jae
pop
mov
loop
iret
inc
cmc
lret
jecxz
push
push
cltd
or
sub
add
push
mov
js
mov
mov
incl
push
jo
notb
js
les
fsubr
out
push
frstor
jo
aad
movsl
lods
lods
imul
outsl
rcl
cmp
cs
xchg
gs
or
jbe
jmp
or
hlt
mov
addr16
inc
dec
lret
xor
dec
das
mov
loope
out
sub
int3
lock
in
push
inc
hlt
insb
call
ljmp
xor
adc
xchg
inc
aaa
lahf
rolb
bound
frstor
dec
push
data16
add
push
enter
jnp
sbb
and
jb
scas
flds
fs
pop
out
jb
imul
les
aaa
pushf
or
movsb
sbb
mov
push
add
clc
cmc
aas
jb
add
fmulp
jle
insl
lods
aaa
jae
imul
mov
lea
jp
lea
cli
or
cs
pop
mov
pusha
cmpsl
mov
repz
lret
push
out
lods
sub
push
sahf
int
ret
jno
leave
sarl
lahf
adc
jbe
mov
cld
testl
dec
mov
jbe
add
mov
adc
xchg
and
repnz
iret
cmpsl
movsb
insb
xchg
sarb
mov
and
pop
sbb
pop
pop
add
inc
shlb
sar
bound
mov
mov
mov
mov
aas
jo
mov
push
lods
pop
repnz
adc
mov
pop
inc
adc
jl
sbb
dec
cld
and
aam
mov
loop
push
pop
lcall
mov
aas
add
sarl
push
push
loop
mov
mov
xor
pushl
mov
mov
pop
pushf
shrl
aas
dec
sub
pop
lcall
xchg
lcall
fwait
in
data16
inc
inc
and
loop
sub
fsts
scas
icebp
cld
pop
fldl
push
daa
push
cmp
mov
add
jns
or
loope
cmpsb
adc
fidivs
push
into
in
fcompl
jns
imul
les
ret
mov
xor
nop
jns
xor
repnz
xchg
and
mov
out
insl
xor
xor
dec
inc
test
rcll
sbb
inc
in
mov
jb
and
xor
and
movb
mov
mov
jp
icebp
es
xchg
enter
mov
out
sbb
mov
or
and
jae
daa
les
push
xor
mov
shl
stos
stc
xor
lret
inc
sub
lock
inc
sar
mov
mov
enter
dec
in
sbb
dec
jne
out
lcall
inc
test
dec
out
mov
in
pop
add
xchg
cmp
push
or
add
insb
xchg
pop
mov
popa
ljmp
pop
iret
sub
or
nopl
daa
sbb
lahf
xchg
lahf
inc
inc
ror
add
test
and
into
dec
call
inc
popf
cmp
pop
fwait
sub
cmp
dec
scas
and
repz
inc
into
imul
pop
js
mov
pop
ret
dec
lcall
fdivs
mov
xchg
sti
movsb
adc
outsb
or
mov
sub
push
out
mov
pop
mov
in
jmp
mov
mov
and
lods
jecxz
loop
pop
dec
xor
pop
sub
loopne
int3
call
out
mov
bound
stos
push
pop
and
xor
into
roll
scas
mov
cmp
lds
test
test
jmp
popf
or
pop
sbb
push
setno
pop
push
mul
jne
fidivl
int
xchg
into
mov
xchg
outsb
out
push
lds
aam
xor
fstpt
jmp
mov
sbb
jns
mov
lret
in
push
loope
rcrb
ds
sub
mov
nop
addr16
mov
popf
jbe
cs
andl
pop
cmp
sbb
adc
fcmovnbe
jp
aad
cmpb
jnp
jne
test
dec
xchg
int
loopne
in
push
mov
xlat
aaa
and
sub
sub
loope
scas
fdivrs
sahf
add
cld
stc
add
pop
popf
movsl
pop
jecxz
rcrl
and
out
movsl
sub
clc
xlat
and
insl
pop
pop
int
dec
cmp
dec
out
cmp
jnp
push
push
add
sbb
rcl
push
movsl
and
cwtl
mov
and
aad
dec
push
ss
out
and
notl
mov
or
outsl
call
repz
test
scas
mov
mov
mov
mov
dec
iret
mov
loopne
lahf
mov
or
mov
inc
fildl
pop
xor
mov
mov
and
jmp
pop
and
add
add
test
loopne
or
jmp
pop
popa
or
mov
call
lods
lret
dec
popf
in
dec
pop
and
jae
lea
hlt
sbbb
sarb
xchg
je
int3
mov
or
aam
jae
mov
dec
dec
aaa
lea
lret
cmpl
mov
jg
cmc
jb
sub
jne
scas
iret
rorl
scas
push
ja
movsb
call
fcom
mov
test
out
xor
pop
xchg
adc
leave
fadds
adc
mov
in
jb
addr16
pushf
push
sarl
jmp
inc
and
in
push
pop
mov
push
decb
cld
iret
push
repnz
call
dec
imul
and
out
jg
xchg
ljmp
xchg
xor
enter
es
fs
outsl
rcrb
arpl
movsb
add
jp
inc
into
jns
push
jno
ret
mov
dec
lret
mov
popa
std
in
das
sub
pop
int3
xor
inc
mov
scas
jns
lahf
dec
mov
es
push
cmp
scas
sbb
sti
arpl
dec
imul
mov
out
insb
imul
jbe
push
mov
ds
sbb
test
mov
jbe
sub
cmp
and
mov
pop
jmp
fldpi
add
ss
xor
popf
repnz
iret
data16
mov
in
sub
mov
popf
cli
das
jno
mov
in
xor
pop
mov
imul
ficoml
dec
test
aas
sti
les
test
lods
lret
jg
pushl
xlat
lcall
cltd
mov
scas
push
nop
lahf
dec
out
inc
sub
shll
xchg
pusha
int
mov
leave
sub
dec
ret
jle
xlat
jmp
dec
daa
inc
testl
add
ds
jo
jmp
xchg
xchg
pop
in
test
test
and
cmp
cmpsb
hlt
cs
and
gs
xor
mov
pop
out
mov
push
jmp
call
loope
or
rolb
xchg
and
and
packuswb
insl
lock
pop
cmpsb
push
popa
push
jo
pop
ffree
ficoml
mov
mov
xchg
mov
imul
test
sub
aaa
push
loope
ficompl
mov
imul
dec
add
popa
push
sbb
sbb
mov
loop
into
dec
lock
add
iret
push
hlt
mov
add
sub
sub
mov
mov
mov
xchg
outsl
ret
cmp
push
inc
inc
daa
das
sub
adc
cs
lcall
cmpsb
notl
lret
imul
in
scas
dec
sti
mov
in
inc
nop
pop
jbe
or
aaa
mov
jno
push
xor
movsl
push
mov
jb
insb
jnp
insb
stos
test
js
fs
inc
lret
xor
inc
cs
mov
je
fisubl
or
xor
js
les
in
jns
adc
fdiv
sti
pop
mov
adc
jb
add
lock
loopne
arpl
sbbl
dec
or
cmpsl
cmpsl
adc
dec
lods
call
jge
hlt
mov
jmp
pop
fcomps
jne
and
pusha
lahf
js
ljmp
rol
dec
push
sub
imul
push
into
fs
sbb
mov
stos
or
cmp
jb
xor
sbb
dec
ljmp
mov
repz
fcomps
mov
addl
fidivs
pusha
sub
arpl
xchg
cmpl
mov
inc
cmp
xchg
inc
and
xchg
mov
call
cmp
cli
ja
mov
mov
data16
insb
in
ftst
ljmp
call
fnstcw
add
xchg
jg
cmp
mov
scas
test
and
xchg
icebp
in
imul
inc
out
into
cmpsb
popf
mov
jno
popf
mov
xor
cmp
cmp
dec
lahf
std
fwait
mov
mov
je
mov
push
cmpps
mov
imul
sub
das
ss
repz
pop
in
rcll
mov
mov
lods
add
insb
jle
lcall
jl
jb
push
cmp
inc
mov
out
aad
mov
mov
cmp
pop
xchg
push
mov
push
cmpsb
mov
popa
mov
pop
jl
sub
loope
cmp
xor
fnsave
push
into
pop
xchg
fcmovnb
cmp
xchg
or
add
adc
test
or
insl
in
or
imul
fdivs
ret
sub
jg
mov
bound
imul
icebp
cmpsb
ret
nop
xchg
xor
daa
aaa
pop
mov
cli
in
sub
jno
add
mov
pusha
sub
outsb
add
aam
and
addr16
and
sub
subb
sub
lods
popa
out
int3
call
pop
push
push
repnz
int
xlat
push
xchg
adc
mov
inc
or
insb
mov
je
clc
mov
jb
js
ljmp
and
lret
cli
adc
insb
les
adcb
dec
mov
or
out
sbb
arpl
insl
je
sbb
add
std
lock
jp
cmp
pushl
imul
push
pop
dec
cmc
pop
mov
xchg
loope
test
in
aas
fldcw
cwtl
mov
xlat
fwait
xchg
ret
mov
incb
mov
and
mov
daa
lahf
mov
and
call
bound
fldl
ret
sub
add
icebp
mov
sbb
mov
xchg
or
xchg
and
test
xchg
mov
inc
fisttps
jmp
jb
cltd
loop
shr
test
xlat
inc
and
fdivl
faddl
lods
xchg
in
pop
cmpsb
rorl
inc
ret
stc
imul
xchg
xor
dec
jg
jo
loope
push
xchg
jg
sbb
xchg
shrb
cmp
ror
lods
and
out
sarl
std
movsb
mov
xor
sub
lock
insb
or
inc
leave
gs
or
push
mov
fcomps
fstpt
scas
out
push
xor
pop
ret
mov
jg
jp
or
xlat
sbb
arpl
adc
jg
in
xor
aas
sub
inc
lret
into
add
fisubrs
jle
test
cmp
imul
call
jo
xor
lret
and
lds
lods
hlt
movsb
dec
xchg
dec
jno
pop
or
test
hlt
fsubl
and
mov
pop
sub
and
dec
cmp
cmpsl
mov
call
data16
mov
fwait
movsl
lock
xchg
pop
inc
and
ret
adc
adc
xchg
push
pusha
ret
xchg
pop
and
int
and
sar
jnp
sarb
ljmp
subl
loop
loop
dec
xchg
outsb
push
push
mov
in
push
decb
and
adc
mov
push
nop
sub
pop
xchg
dec
sar
sub
push
aam
imul
jbe
or
xor
pop
dec
sbb
adc
mov
push
mov
pop
test
mov
inc
insl
jnp
loopne
add
jns
mov
cmp
cwtl
ja
incl
mov
push
mov
jbe
mov
into
sub
test
mov
pushf
repz
fistps
xor
lods
and
popa
add
lock
and
movsl
cmp
fwait
dec
cmp
cmp
xor
lods
mov
fs
add
ret
sbb
fstl
xor
xor
cmpsl
addl
and
pop
outsl
cmpsl
push
test
xchg
popf
dec
sarl
inc
xor
push
cmp
fildl
xchg
pop
popf
popf
mov
cli
scas
loopne
idivb
inc
fcoml
mov
sub
outsb
sub
sbb
inc
mov
push
sbb
icebp
cwtl
pop
nop
dec
cmp
and
xor
sbb
xchg
inc
imul
cmp
stos
and
pushf
cwtl
mov
lock
addb
sub
repnz
imull
sti
popf
xchg
sub
dec
enter
pop
call
mov
xchg
mov
push
adc
adc
out
in
cmc
push
sbb
out
or
dec
xchg
inc
outsb
fwait
jnp
mov
daa
out
int
xchg
pop
test
xor
je
int3
iret
jl
mov
imulb
sbb
out
sub
ficompl
les
sub
fwait
pop
or
adc
dec
push
dec
sbb
cmc
rcll
xchg
pop
jmp
movsl
mov
ja
gs
mov
mov
xchg
jge
cmpsl
mov
imul
cmc
lahf
iret
aas
dec
lahf
popf
xlat
out
lds
les
push
test
inc
xchg
cmp
divl
pop
call
or
ja
enter
mov
mov
aam
bound
add
mov
or
or
inc
iret
mov
pop
add
mov
sbb
add
push
jecxz
sarl
popa
enter
les
std
xor
mov
sbb
in
xchg
ss
mov
cmp
aad
sbb
sti
shll
cmpsl
std
sarl
mov
sub
mov
lret
jbe
std
dec
cltd
sbb
jne
push
inc
aam
data16
les
jmp
adc
je
imul
out
mov
inc
sbb
and
stc
xor
inc
lods
mov
stos
jg
jbe
jg
out
cmp
pop
test
call
mov
leave
int
cltd
mov
sub
lea
cmp
mov
mov
ret
fstps
frstor
xlat
pop
sbb
xchg
stos
dec
push
adc
mov
addr16
or
sti
outsl
jmp
add
movsb
cwtl
jns
fisttpll
movsl
inc
mov
and
out
scas
jnp
je
jle
loop
add
sbb
stc
adc
out
push
lea
hlt
sbb
sub
xor
sub
fdivrp
inc
rcll
xor
adc
hlt
xor
imul
inc
pop
push
icebp
sbbb
adc
add
add
or
popa
bound
sbb
loope
inc
ret
ja
mov
aad
or
cmp
into
pop
push
call
sub
scas
and
dec
lret
cmp
push
popa
ja
jge
loope
imul
mov
push
xchg
jl
pop
imul
push
xor
push
das
mov
cmp
mov
popl
out
out
mov
out
arpl
sub
dec
and
xchg
out
jmp
mov
and
cmc
out
fcom
jbe
aas
out
in
add
pop
movsl
push
push
add
push
push
mov
mov
fwait
daa
pop
js
scas
pusha
cld
xchg
icebp
jg
lcall
out
mov
push
ret
inc
jle
xor
push
and
popa
xchg
imul
jne
mov
pushf
imul
pop
cmp
cmpsb
inc
and
inc
in
mov
jmp
xchg
lds
scas
adc
into
adc
dec
pop
mov
scas
fimuls
or
xchg
shrl
jmp
xchg
push
mov
dec
mov
notl
stos
mov
out
sub
cmpsb
pusha
inc
push
push
push
shll
fsts
sub
lahf
xor
insl
in
dec
and
dec
in
jl
and
aas
dec
mov
lret
lods
ret
in
stos
les
push
jp
pop
xor
fdivr
lock
cmpsb
inc
mov
pop
cmc
add
push
dec
push
push
dec
std
jg
sbb
orl
cmp
xchg
rorb
pop
hlt
pop
sti
lock
lahf
jb
shlb
jno
test
ror
hlt
pop
cmp
testb
mov
mov
inc
outsl
loopne
enter
stos
in
cmc
aas
cmpsb
outsb
loop
inc
sbb
leave
xlat
iret
ss
inc
in
mov
hlt
cmpsb
push
ror
push
mov
out
xchg
mov
das
in
adc
dec
arpl
shlb
inc
popf
lock
mov
js
mov
ds
les
fcmovne
dec
push
sbb
add
or
mov
adc
jge
in
inc
mov
pop
mov
dec
lock
imul
sbb
jp
pop
dec
xchg
mov
into
xchg
rolb
push
nop
decb
mov
es
fwait
lock
sbb
daa
into
test
pop
in
mov
stos
out
shll
ret
xchg
pop
mov
add
lcall
fs
push
loop
push
rcrl
mov
fidivs
mov
push
sub
xchg
inc
sub
stos
xor
push
test
push
jnp
push
mov
mov
pop
es
scas
mov
out
neg
push
push
mov
pop
pop
ss
cltd
pusha
scas
or
enter
push
or
lcall
lret
or
sahf
mov
sbb
popf
xchg
jecxz
fwait
mov
aad
int3
out
cltd
mov
decl
js
or
idivl
test
mov
pop
mov
xor
mov
cmp
lcall
cli
xor
ja
int3
xor
fsubr
sbb
add
xchg
loopne
mov
dec
addr16
je
cs
je
cmp
or
mov
xorb
outsl
ljmp
cld
into
cmpb
outsb
in
popf
cmp
xor
jmp
mov
aad
cmpb
into
push
sbb
jbe
fsubp
or
cs
pop
pop
pop
mov
dec
push
xchg
push
fmul
in
xchg
dec
ss
je
push
mov
ret
cmp
aad
push
in
push
jae
push
mov
ljmp
repz
push
and
xchg
insl
orb
daa
pop
push
mov
rcrb
movb
inc
or
rolb
rorb
pusha
xlat
adc
dec
mov
fucomp
test
mov
mov
cmp
sub
test
xchg
scas
xchg
cmpb
test
mov
mov
add
cli
pop
rep
je
lods
jmp
outsb
jnp
pushf
pop
jbe
xor
mov
fwait
sti
cs
or
in
cltd
ja
fsubl
lea
pusha
jne
xor
adc
aam
in
adc
add
fsubrl
lcall
aam
push
pop
insl
scas
lods
jp
popf
jne
mov
adc
jbe
flds
shrl
ret
and
out
std
jne
xchg
push
jg
add
sub
stc
mov
jecxz
ret
jge
mov
stos
scas
loopne
push
movsb
lock
pop
or
xor
pop
test
sbb
pop
setb
hlt
nop
rcrb
ds
xchg
ja
stos
test
test
adc
outsl
mov
test
ds
or
xchg
xchg
push
fs
shl
fisubrs
xchg
in
cmp
or
mov
dec
cmp
shlb
into
arpl
sub
mov
fisubl
fidivrl
sub
out
loop
aam
push
ficomps
jae
sbb
jl
icebp
imul
sub
dec
jbe
dec
rcrl
mov
pusha
dec
cmp
aaa
dec
push
sub
js
or
mov
enter
xlat
jnp
fiadds
decb
sub
pushf
inc
pop
dec
lods
stos
pop
daa
cmp
inc
pop
lock
xor
adc
cltd
adc
mov
sbb
sbb
mov
out
pop
add
add
aaa
ja
pop
fs
cld
jbe
xor
cmp
ss
mov
in
jmp
pop
gs
lds
loop
xor
mov
cmp
movsl
adc
jge
call
add
or
and
sti
mov
mov
and
push
jg
sub
jecxz
xor
pop
mov
test
cmp
mov
pop
mov
mov
ljmp
jle
lahf
ds
mov
clc
dec
out
mov
mov
mov
mov
cld
mov
iret
clc
fistpll
xchg
push
xchg
cmp
hlt
mov
add
cld
fmul
sub
mov
cmp
scas
cmc
popa
pop
popa
jg
je
loope
xor
aam
jl
xchg
mov
lods
repnz
pop
or
fwait
aad
or
mov
xchg
jmp
or
cs
lods
aaa
leave
pop
jae
dec
cmp
loope
jg
icebp
sub
ss
cmp
ret
inc
in
mov
pop
fs
sub
mov
stos
dec
mov
jle
sub
lahf
pusha
jmp
push
inc
push
lock
add
mov
pop
in
lock
dec
cli
pop
pop
leave
cmp
sbb
pop
mov
sti
test
dec
andb
mov
adc
mov
cli
inc
inc
test
xor
ljmp
inc
lret
jns
frstor
wrmsr
jp
ret
dec
lcall
adc
mov
mov
sbb
inc
xchg
mov
and
jmp
push
push
push
aad
xchg
stos
sahf
sub
bswap
mov
push
into
sbb
js
sub
ret
pop
push
xor
inc
test
in
sbb
js
sahf
iret
test
xor
nop
cs
jmp
mov
stos
int
cmc
cwtl
in
mov
push
add
pop
cmp
fsubrl
push
mov
mov
mov
ficoml
sbb
mov
ja
into
jge
jb
mov
and
ja
ret
inc
mov
popa
cmp
hlt
mov
subl
sub
sbb
mov
push
push
mov
movsl
cmp
lcall
lods
adc
push
add
bound
sbb
mov
xchg
popa
pop
mov
jecxz
stc
mov
loope
pushf
ret
mov
mov
lock
push
pop
insl
lea
push
sbb
std
cmpsb
jne
add
test
icebp
xlat
xorb
insb
push
into
sbb
mov
xchg
pop
out
mov
fdivs
inc
push
mov
sub
push
sbb
jge
shrb
cmp
les
mov
mov
or
mov
pusha
cltd
in
clc
aaa
xchg
pop
testl
push
xchg
adc
mov
push
lock
mov
popa
add
cmp
es
sbb
mov
loop
or
ret
pop
dec
sarl
jbe,pn
xchg
popf
jns
std
xor
mov
ljmp
xchg
cmc
dec
mov
fwait
dec
jecxz
xchg
fs
push
je
jmp
in
lods
and
push
or
fcompl
stos
ljmp
xor
fisttpl
scas
mov
dec
cmp
inc
imul
push
iret
out
cmp
xchg
inc
sbb
fcomps
push
adc
pop
js
adc
test
push
lret
loop
dec
cs
sahf
addl
dec
cwtl
mov
hlt
jbe
jle
stc
das
sub
sti
repnz
int
inc
into
xchg
lret
out
divl
push
sub
aas
mov
std
xlat
push
mov
xchg
cmpsb
or
pop
jnp
mov
adc
inc
das
adc
pop
adc
xchg
jl
std
in
or
dec
jno
mov
adc
or
lods
sarb
test
mov
jae
fistps
dec
insl
es
incl
pop
mov
outsb
jb
lahf
stos
out
inc
lods
cld
repnz
jl
mov
inc
mov
xchg
pop
jae
lret
into
xchg
jae
shl
push
js
in
rolb
sbb
mov
lods
in
leave
clc
sbb
adc
push
shl
shlb
xchg
loopne
adc
jbe
cmp
insl
test
mov
notl
push
sub
cmp
inc
adc
out
clc
mov
cltd
sub
fstl
ret
mov
mov
mov
jg
mov
call
pushf
fcmovne
push
rcll
ret
cld
jnp
mov
out
cmp
dec
insl
mov
aam
lock
cmpsl
cmp
sub
dec
test
push
fstps
popf
xchg
mov
sub
lods
fwait
addb
fs
xlat
fwait
in
es
aam
cmp
enter
push
inc
cmp
insl
mov
idivb
jno
push
loope
jge
ficoms
dec
dec
imul
inc
or
testb
iret
mov
sbb
cli
dec
es
pop
insl
mov
cmpsl
mov
sbb
sarl
rorl
cltd
xchg
ret
jl
in
test
jbe
mov
stc
movsl
mov
jnp
mov
sbb
arpl
aad
mov
xchg
inc
sub
lret
mov
push
and
sbb
hlt
or
sbb
pushf
mov
dec
scas
clc
or
lret
fistpl
std
or
push
aaa
fmull
cmp
les
aas
adc
aaa
divl
inc
addl
sub
call
test
int
push
rcr
mov
dec
jo
and
bound
lcall
or
xlat
mov
lahf
or
mov
call
leave
or
sbb
xor
adc
jae
and
test
adc
mov
pop
cs
repnz
xlat
or
push
sub
loop
or
or
push
add
dec
mull
lods
mov
push
adc
andb
ret
pop
xor
push
lcall
push
cli
ret
inc
or
push
in
lea
out
cld
xchg
sbb
fmull
jl
mov
mov
jb
cwtl
mov
sub
lahf
int3
dec
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
test
roll
or
mov
xor
fdivrs
lods
sbb
pop
das
lret
in
cmc
pop
add
pusha
jg
int3
nop
pop
mov
dec
sbb
add
test
jg
aas
adc
in
jb
mov
data16
addr16
sub
push
and
stos
and
mov
sub
jmp
jg
dec
sub
js
or
ret
sbb
test
imul
cmp
push
movsl
mov
jg
jno
or
lock
loopne
cli
insb
mov
push
mov
push
out
in
or
inc
and
fnstsw
test
jns
xchg
cmp
pop
dec
out
jbe
mov
jb
test
pop
pop
in
test
lret
fdivs
loopne
inc
lock
inc
sub
mov
lds
mov
lds
sub
add
cmc
pop
and
fildl
sbb
xor
popf
mov
outsl
pop
cli
fistpll
in
jno
int3
add
adc
dec
add
jnp
inc
or
jecxz
xchg
push
cmp
mov
pushf
popf
es
stos
out
mov
hlt
pusha
push
adc
jge
xchg
or
popa
pop
inc
inc
sti
sahf
imul
mov
imul
or
cli
in
inc
popf
movsb
cmp
incl
fs
lcall
and
cmp
in
mov
rolb
test
shrl
mov
call
dec
ret
outsb
push
add
aam
cltd
inc
cli
dec
sub
setb
hlt
add
jne
andnps
inc
push
cltd
in
in
mov
bound
testb
pcmpgtd
shl
cltd
loop
aaa
inc
mov
cmp
inc
cmp
cmp
jle
pop
dec
addr16
stos
or
lret
outsl
int
pop
or
mov
and
xlat
jmp
adc
lret
pop
mov
ret
xchg
ljmp
sbb
in
or
addb
aas
mov
outsl
dec
data16
incb
add
fisttpll
test
fs
mov
jns
shrl
out
jnp
add
ljmp
cmp
xor
pop
push
jmp
mov
loopne
imulb
je
test
push
jae
and
push
mov
pop
or
or
dec
sbb
lds
lret
dec
cwtl
andl
daa
ljmp
jge
fstp
mov
pop
jge
push
insw
add
pushw
lods
outsb
push
loope
lret
stc
push
lret
xlat
idivb
std
jo
rcl
and
fcompl
loope
push
divb
shl
aad
mov
dec
sub
out
or
pop
shl
movsb
cmp
loopne
and
xor
test
inc
out
sarb
shufps
clc
push
shrl
shll
shlb
pop
sbb
push
arpl
jmp
sbb
cmp
outsb
pmullw
sub
nop
bound
int3
adc
adc
je
jmp
ret
popa
mov
jecxz
cmc
push
xchg
fisubrs
or
mov
test
mov
and
scas
sahf
insl
add
jb
mov
cmpl
pop
sbb
push
jge
xor
dec
jl
gs
loop
mov
lret
mov
xor
cmp
xor
and
lods
xor
aaa
mov
xchg
ds
jmp
and
ret
sahf
mov
and
and
out
and
insb
faddp
push
rcll
mov
adc
outsb
dec
jl,pn
call
push
call
cltd
lods
loop
insb
xor
jns
mov
xor
jb
insl
pop
addl
push
dec
int3
xchg
out
add
and
push
sbb
daa
ja
xlat
lods
push
inc
repnz
jo
bound
xor
xchg
mov
cltd
dec
inc
pop
and
int
loop
in
push
mov
mov
subb
fsubrs
lahf
sbb
inc
aaa
xchg
and
push
push
mov
jns
mov
adc
imull
push
or
cli
cltd
xchg
mov
inc
insb
and
cmp
pop
inc
inc
mov
mov
mov
mov
push
imul
push
repz
lahf
lds
and
repz
les
push
push
ljmp
popf
mov
cmpsl
cmpsb
cmpsb
mov
sub
pushf
push
dec
mov
jne
xchg
xor
inc
mov
mov
test
rcrb
scas
ret
popf
into
jl
xchg
xor
arpl
jne
and
xchg
adc
push
pop
inc
mov
adc
ds
fisubl
add
dec
push
ficomps
fcoml
mov
out
fwait
push
ljmp
xchg
aaa
ss
add
mov
add
call
cmp
lea
stos
ss
int
dec
pop
mov
data16
fimull
mov
and
cmp
cmp
xor
xchg
push
push
stc
fwait
insl
mov
cmp
mov
mov
sbb
sub
sub
movsl
inc
inc
and
mull
fbld
jl
in
sub
xchg
cmp
or
jae
aas
xchg
inc
mov
pop
je
xchg
sub
dec
shrb
push
cmp
in
fstps
push
xlat
push
xchg
push
push
xor
cmpsb
bound
arpl
icebp
and
lahf
bsr
mov
bound
test
push
cmp
into
outsb
ret
jae
adc
aad
sbb
setns
das
loopne
jg
dec
frstpm(287
pop
inc
addr16
xchg
jg
xchg
in
sub
jl
push
cld
jne
sbb
mov
sbb
or
fucom
push
jb
repz
ds
rclb
leave
lods
hlt
xor
pop
mulb
xchg
push
insb
sbb
mov
popa
cli
mov
enter
cmpsl
adc
ret
stos
mov
push
cmp
das
jecxz
sti
rcll
mov
icebp
cmpsb
mov
ret
mov
es
scas
stos
dec
stc
adc
repz
lret
js
lcall
add
roll
inc
popa
addr16
shr
adc
push
cltd
push
mov
lea
jae
sahf
out
or
jae
fs
stc
jmp
sub
ljmp
call
jl
stos
popa
loope
test
and
lds
aam
ljmp
inc
adc
fmuls
daa
push
jp
mov
mov
cmovae
imul
push
call
ljmp
adc
mov
into
or
aad
push
mov
scas
xor
and
cwtl
and
push
test
sbb
shlb
or
in
clc
cmc
pop
sub
sbb
and
mov
adc
popf
jl
add
daa
outsb
sbb
stos
ret
lock
test
shll
push
adc
in
sub
xor
adc
adc
cmp
jno
out
mov
add
mov
out
lret
mov
xchg
xchg
test
dec
cwtl
fdivr
cltd
imul
mov
jo
cmp
stos
cld
cmpsl
jnp
mov
imul
xchg
aaa
xchg
enter
imul
xor
hlt
std
rolb
pushf
jecxz
out
push
push
ja
and
scas
or
sarl
pop
push
push
je
movl
inc
aam
push
lea
inc
rcrl
enter
push
jle
jl
xchg
and
nop
stc
sahf
int
cld
fistpll
mov
mov
mov
dec
loope
dec
or
mov
lret
inc
dec
test
xor
adc
mov
arpl
ss
or
scas
jb
xchg
scas
popf
inc
xchg
lret
je
push
cwtl
push
mov
leave
imul
bound
pusha
or
cmp
loopne
xchg
xchg
cmp
call
loopne
jo
jnp
inc
push
mov
inc
subl
mov
or
decl
shll
idivb
jp
mov
adc
aaa
ss
fnstcw
pop
or
adc
test
sbb
int3
int
sbb
psadbw
xor
fildl
adc
sbb
mov
push
and
shll
adc
movsb
mov
jmp
adc
rorb
insb
in
in
or
rolb
cmp
xor
stos
jno
mov
cmp
adc
adc
out
out
and
pop
in
fwait
add
mov
push
adc
dec
push
xor
mov
adcl
sbb
test
sub
dec
call
xor
sub
cmpsl
jns
dec
cmc
mov
jns
icebp
jle
add
andl
inc
sub
jmp
sbb
loope
jno
add
xor
fmull
jl
sub
aad
imul
mov
in
lock
fisttps
jge
push
out
adc
sbb
jbe
imul
pusha
inc
inc
sarb
sub
ss
pop
jb
stos
xchg
pop
mov
and
into
andl
repz
sub
mov
inc
leave
or
and
rorb
lods
loope
push
in
fs
mov
jb
adc
mov
test
or
insb
lcall
xchg
adc
xor
fstps
cmp
negl
sub
add
dec
dec
cld
mov
inc
push
push
or
loope
inc
mov
and
add
pop
outsb
fsubs
aaa
orb
mov
arpl
repnz
or
stc
push
insb
xor
arpl
aas
stos
adcl
insl
pop
cltd
pop
leave
cmp
idivl
add
or
jbe
mov
testb
ljmp
xchg
adc
int3
xor
std
pop
pop
cs
mov
or
nop
xchg
test
imul
xchg
mov
stc
pop
jbe
ja
lret
inc
dec
mov
out
mov
mov
addr16
jbe
dec
push
out
mov
add
in
iret
adc
jmp
push
xchg
out
aas
fwait
add
fstl
sbb
and
and
push
pop
subl
repnz
adc
adc
sub
orb
popa
pop
xchg
inc
rol
jg
cld
sbb
loop
int
divb
dec
inc
sub
sub
jmp
cmp
jb
jge
sbb
lea
and
sbb
cs
cli
divb
add
pushf
cmp
insb
movsl
in
push
xchg
jne
sbb
adc
test
dec
not
lods
pop
jne
out
sbb
loopne
hlt
mov
xchg
add
mov
mov
mov
jbe
divb
cmp
adc
sub
rorl
xchg
sbb
roll
sub
stc
clc
sbbl
and
hlt
out
sub
ret
mov
scas
push
mov
loope
adc
or
les
orl
dec
inc
lret
lea
cmpb
pushf
stc
xor
xor
inc
movsb
mov
icebp
mov
mov
push
mov
and
clc
dec
clc
and
inc
loopne
cmc
jne
push
xchg
sar
dec
xor
and
dec
movsb
fimuls
xor
lods
mov
sahf
dec
in
push
pop
into
ljmp
cmp
and
mov
adc
pop
jl,pt
pop
jb
mov
addb
mov
imul
or
es
jp
fcoms
dec
and
adc
rorl
mov
out
mov
shlb
dec
xchg
fldt
es
aaa
xchg
xchg
insb
sub
sahf
cmp
xor
fstpt
das
xor
inc
les
ret
fwait
leave
sub
mov
mov
or
dec
jns
shll
cmp
mov
mov
cmp
in
mov
lcall
rcrb
mov
cmp
jae
lret
cltd
pop
jnp
sbb
aas
into
insl
or
ljmp
sti
xchg
jge
sbb
fisubs
jmp
repnz
dec
call
mov
cli
push
sbb
add
ljmp
add
hlt
cmc
add
fs
push
ja
fst
into
and
sbb
imul
and
in
sub
scas
iret
movsl
inc
andl
enter
pop
mov
xchg
insb
add
mov
mov
jno
push
push
fcoml
dec
les
adc
inc
int3
push
sbb
add
popa
or
mov
mov
lods
mov
pop
pop
and
repz
test
inc
mov
sub
sarl
xchg
andl
xor
shl
repnz
out
insb
cmpsl
aad
adc
inc
insb
inc
sbbb
fdivr
mov
out
fidivrl
cwtl
dec
fsubrs
sub
push
xchg
mov
outsl
lret
xchg
push
mov
lea
jbe
ja
sbb
lret
ret
movl
fdiv
xor
cs
xorb
pusha
rolb
jecxz
cmp
adc
and
fidivs
mov
out
test
mov
jne
stos
jg
pop
sub
or
xlat
cmp
fwait
bound
stc
add
and
sbb
inc
xor
ljmp
add
jmp
xchg
imul
ds
sub
push
pop
insl
cltd
aas
mov
or
push
mov
adc
mov
pusha
sub
mov
dec
inc
cli
lds
outsl
adc
shrb
sub
lea
mov
dec
daa
daa
jmp
jmp
jmp
jb
mov
jmp
inc
mov
ret
inc
xor
jmp
out
fiaddl
mov
xor
sub
icebp
test
or
mov
dec
cmp
dec
jbe
fcmovne
testl
pop
inc
push
jno
xor
ss
sbbl
pop
pop
push
xchg
pop
pop
pop
sub
and
pop
ja
mov
push
inc
js
repz
iret
add
std
add
idivb
aam
rolb
mov
xchg
and
fdivl
lcall
les
add
clc
mov
or
mov
xor
jecxz
sub
fwait
jg
out
es
lret
pushf
jbe
push
out
jle
daa
push
dec
xlat
push
fidivl
das
rcl
dec
push
shrb
lods
mov
addb
je
push
dec
xor
push
mov
fisubs
jno
mov
add
sbb
sub
jecxz
shll
mov
adc
mov
mov
outsb
mov
sbb
test
aas
cld
fwait
adc
push
int3
leave
push
stos
pusha
je
out
push
sar
or
pop
jmp
pushl
cmp
cmc
mov
mov
test
sarl
sub
fistl
mov
mov
leave
ffreep
movsb
and
sbb
push
aam
jecxz,pt
inc
int3
mov
fldenv
mov
enter
aam
add
sub
cs
mov
xchg
mov
aad
dec
imul
aam
test
lret
test
add
mov
fldt
jbe
xor
add
mov
fcmovbe
popa
movsl
push
ljmp
dec
xor
cmp
lret
int3
fxch
sbb
movsb
mov
pop
fwait
out
mov
inc
cmc
stc
dec
outsl
ret
sbb
ja
outsb
out
mov
mov
fcmovb
cltd
out
cld
fldt
mov
cmpsl
mov
les
mov
xor
mov
lret
add
sub
sub
popa
mov
iret
or
sub
dec
loope
xor
dec
adc
push
inc
xor
jae
pop
lods
fstl
sbb
dec
nop
sbb
mov
lret
dec
mov
enter
repnz
daa
mov
adcb
clc
andb
aas
ds
dec
jmp
negl
imul
xor
adc
cmp
or
or
sub
nop
sbb
adc
popf
or
mov
inc
lods
fistps
in
mov
shrb
shl
scas
mov
mov
cmp
jno
pusha
cmp
sahf
mov
xchg
fisttps
mov
mov
adc
outsb
adc
adc
or
xlat
lods
scas
les
jnp
inc
xchg
push
idivl
add
in
dec
addr16
adc
inc
es
lock
lret
fdivl
push
adc
pop
jge
pop
mov
das
xchg
pop
dec
push
sub
mov
push
fldenv
dec
dec
mov
sbb
xor
and
dec
sahf
mov
fs
adc
mov
test
or
sbb
mov
pop
ja
sub
test
popf
int3
outsl
stos
out
xchg
pushf
mov
fdivs
les
fwait
js
adc
push
leave
sarl
inc
dec
mov
sti
bound
and
inc
mov
add
pop
add
daa
xchg
lock
sub
fcoms
int
sbb
mov
stc
xchg
xor
lcall
jle
add
xor
pop
iret
shl
es
sti
push
mov
loop
push
stos
mov
and
cmp
cmp
mov
sub
es
push
add
mov
adc
and
ret
leave
cmp
out
jnp
dec
pop
mov
sub
cmpsl
mov
fadds
inc
xchg
out
add
mov
sarl
scas
ds
mov
shl
cmc
and
adc
mov
dec
popf
clc
daa
lcall
mov
fwait
mov
test
je
mov
adc
xlat
lahf
daa
leave
sbb
jg
cmc
scas
lcall
jne
xor
out
int3
sbb
fbstp
and
fwait
jns
int
andl
xor
aaa
daa
out
inc
addl
cld
adc
dec
icebp
jne
jecxz
mov
jae
bound
inc
in
lock
xchg
lods
adc
data16
mov
inc
and
add
and
rcll
push
jb
loop
dec
icebp
les
jb
repz
shll
roll
cmpsl
es
popa
cmc
or
inc
into
lahf
les
push
fisttpl
sbb
xchg
pushf
sbb
cwtl
inc
jl
out
dec
scas
cmp
and
xchg
out
add
and
xor
dec
sub
sti
out
fdivs
orl
cmp
xor
movsl
push
lret
xchg
pusha
fsubrl
push
inc
pop
out
and
mov
lods
xor
bound
sbb
jno
or
insl
sti
cmpsl
hlt
lcall
loop
enter
stc
sub
ret
pop
xchg
test
inc
in
divl
lea
pop
stos
dec
loope
rolb
inc
rcrl
cmc
popf
pop
mov
or
sbb
enter
xor
xor
sub
pop
rcr
pusha
cmpsb
in
aam
xchg
cli
add
lods
sub
mov
pop
xor
hlt
xor
mov
hlt
push
mov
mov
cltd
or
mov
sahf
lds
into
js
mov
xor
shll
stc
mov
xchg
cs
sbb
xor
leave
cwtl
jle
shl
pop
enter
sbb
adc
xchg
scas
inc
cmp
adc
xchg
jge
mov
cli
ja
sarb
sti
mov
outsl
popa
xchg
cmp
inc
dec
hlt
jnp
in
dec
pop
cld
movsb
sbb
aad
loopne
lcall
add
bound
push
imul
stos
inc
push
jae
sarb
or
jo
adc
mov
pushf
jae
cmp
mov
es
lock
sub
inc
mov
call
lahf
or
fstpt
rorl
call
add
xchg
fwait
push
cmp
pminub
in
push
iret
or
fsubrl
xchg
xchg
cli
stos
faddl
push
push
cld
out
mov
les
jg
jns
das
xor
cmp
dec
adc
dec
cmp
ret
mov
sahf
mov
sub
insl
faddl
xchg
stos
mov
adc
inc
jb
xchg
dec
lret
in
out
sbb
test
es
mov
lea
xor
and
mov
sbb
cmpsb
xchg
push
push
fiaddl
xchg
xor
in
dec
sub
sarl
dec
sahf
adc
or
add
lret
scas
jp
aam
das
mov
jle
xor
call
and
aad
xor
xor
in
pusha
jg
js
test
aad
sub
mov
sub
jne
aaa
pushw
pushf
loop
fidivrs
pop
mov
adc
xchg
fisubs
rorb
imul
inc
inc
ds
repz
pop
or
mov
mov
addr16
push
fisttpll
addr16
push
notl
dec
cmc
adc
outsb
fistps
xor
lahf
jl
push
and
pop
pop
jno
xchg
das
outsb
xor
pusha
les
cmc
cmp
push
push
xchg
sahf
or
fdivr
movsl
out
ljmp
rcll
aaa
sbb
and
inc
nop
adc
mov
push
ja
mov
mov
xchg
stos
push
negb
mov
mov
mov
ret
and
cwtl
int3
mov
insl
sahf
or
fwait
popf
icebp
lcall
push
mov
cwtl
sub
sub
call
add
stc
mov
sbb
iret
int3
das
push
in
jbe
inc
jns
cmp
xchg
xchg
shlb
sbb
cmp
xor
test
dec
test
aas
jl
movsl
cmp
icebp
or
jb
adc
mov
shl
cmp
mov
ret
in
lahf
daa
sahf
call
jns
lods
xchg
mov
aaa
sub
jne
pop
sti
dec
test
pop
mov
rol
inc
nop
ss
cmpsl
or
fistpl
add
repnz
adcb
xrelease
or
cmpsl
pusha
scas
sahf
arpl
lods
sub
mov
push
mov
mov
std
inc
shll
aas
outsb
call
arpl
pop
mov
loopne
adc
repz
aaa
xchg
push
sbb
ss
sub
pop
lcall
in
pop
add
xchg
xor
add
stc
stos
cmpsb
test
push
mov
rcrl
fdivs
loopne
add
iret
mov
out
subb
hlt
add
subl
testb
xchg
int3
cmpb
jne
push
inc
scas
jno
jecxz
sbb
or
leave
test
jne
sub
cwtl
pop
inc
mov
aas
cmp
pop
pop
lock
push
int
aas
js
inc
dec
out
inc
mov
std
mov
or
pop
jb
les
xchg
adc
cltd
iret
adc
stc
pop
adc
adc
imul
imulb
xor
jmp
pop
adc
sbb
cs
sub
add
notb
shll
and
sbb
mov
mov
xor
or
inc
dec
mov
jne
add
fs
lock
push
mov
push
ljmp
cmp
std
test
fwait
lret
decb
dec
push
or
cli
jg
pop
ud1
mov
in
stos
jge
inc
sub
and
mov
push
in
leave
xor
dec
cld
jge
push
mov
or
leave
loopne
xchg
pop
loopne
mov
out
push
push
xor
pop
test
popa
inc
enter
dec
xchg
xor
pop
std
cmp
mov
cmpl
repnz
pop
cwtl
sub
cmp
fbstp
mov
pop
pushf
sbb
out
fwait
lea
or
ljmp
jl
cmp
and
shrb
dec
imul
fwait
mov
shrb
mov
cmp
add
in
out
out
xchg
fidivrs
stos
push
mov
mov
stc
dec
cmc
pop
mov
ret
fnstenv
pop
cwtl
fs
dec
mov
insl
sti
jo
lret
mov
push
sub
test
stc
cwtl
leave
je
rorl
imul
xchg
mov
add
int3
in
clc
pop
clc
sbb
in
or
jb
and
mov
fsub
push
test
cmp
sbb
mov
mov
sub
cltd
arpl
lods
jge
hlt
sub
int3
cltd
mov
push
scas
arpl
in
clc
mov
inc
sub
jmp
and
ljmp
test
je
sbb
dec
xchg
sub
cmp
push
lcall
and
cmpsl
aaa
and
movsb
xor
hlt
mov
sahf
mov
inc
popf
jne
sti
push
mov
mov
inc
nop
lds
xchg
lret
adc
sbb
fs
sahf
lods
loop
stos
sbb
popa
xchg
push
push
cmpsb
fistpll
mov
rorl
mov
out
pusha
xchg
mov
xchg
sub
xchg
pop
add
add
pop
jnp
pop
aam
mov
pop
push
rcr
ljmp
into
popa
sahf
jg
inc
enter
or
cwtl
out
mov
xorl
push
sbb
daa
cmp
xchg
pop
or
jge
js
mov
dec
pop
xchg
outsb
cmp
jecxz
int
andl
cwtl
jmp
xchg
cmp
push
xlat
mov
loop
xlat
pop
cs
jb
add
mov
mov
cmp
testb
adcb
mov
push
adc
test
xchg
mov
stos
cmpsl
xor
xchg
loope
xchg
lock
add
repnz
jb
sbb
sbb
shl
aad
out
jns
test
or
and
push
and
nop
jecxz
popa
ret
jg
jb
and
and
cmc
push
movsb
mov
pop
xchg
test
faddl
lds
cs
add
fisttpll
push
add
sub
sbb
sbb
lret
mov
movsl
ljmp
stc
mov
push
fstps
jmp
dec
jmp
mov
xchg
sbb
lret
push
cld
xor
stos
shll
adc
sub
pop
hlt
rorl
shrb
cmpsl
pop
xor
push
or
sub
dec
and
dec
lea
cmc
mov
dec
rol
pop
mov
push
add
mov
inc
mov
mov
scas
ja
fdivl
rol
cmp
mov
jecxz
jbe
cmp
neg
and
xor
adc
cmp
inc
adc
jnp
sbb
mov
sub
sahf
sub
jb
faddp
cmp
pop
cmp
aas
into
jo
push
dec
sub
enter
adc
test
xlat
xchg
je
push
in
outsl
xor
rorb
dec
sub
add
mul
mov
movsl
add
adc
sarb
fwait
mov
lret
jle
adc
test
lret
cmp
lea
inc
int3
add
pop
mov
jnp
mov
sbb
in
fnstcw
rcrl
stos
inc
xor
dec
gs
je
xor
scas
and
adc
das
jle
xchg
hlt
sub
arpl
lods
aam
xchg
mov
inc
insl
lods
mov
dec
cli
xor
call
cltd
test
mov
movsb
pop
sub
int
jne
dec
imul
loope
xchg
add
scas
repz
imulb
xor
fldt
hlt
mov
shrb
pop
push
inc
xor
pop
sbb
pop
jbe
into
and
cmp
dec
mov
ss
add
push
scas
and
cmp
dec
or
xchg
cmpsl
mov
insl
ret
fs
imul
sti
mov
or
daa
lret
outsb
out
aas
pop
jb
pop
cli
push
icebp
aas
aad
and
mov
ficomps
xor
sbb
inc
outsb
xor
int3
jg
scas
add
or
pop
add
pop
insb
sbbb
fstpt
xchg
cmpsl
pop
push
loop
stc
std
xchg
inc
sub
jae
push
mov
imul
addr16
pop
inc
mov
inc
shl
popf
push
repz
fdivrp
dec
jle
inc
nop
xor
xchg
jmp
outsb
mov
mov
fwait
jnp
es
iret
scas
lret
adc
and
cmp
mov
ret
mov
enter
xchg
ss
stos
lods
insl
test
aad
lds
int3
sbb
mov
stos
push
out
faddl
xchg
cmp
ret
lret
test
aad
sahf
shrl
push
mov
lods
dec
fs
leave
dec
xor
test
mov
imul
xor
lret
popa
adc
es
xor
ljmp
shr
es
jo
iret
and
das
cmp
xchg
dec
fbstp
lret
jne
hlt
cmp
dec
sub
lock
dec
pop
and
sub
out
pop
inc
loope
mov
and
cwtl
pop
loop
std
rclb
movsl
sti
sbb
cmp
les
mov
bound
xchg
pop
pop
adc
mov
jne
mov
mov
jne
push
loope
fdivl
sub
cmc
dec
in
lcall
into
nop
repz
dec
jbe
fs
mov
out
mov
inc
inc
cvtps2pd
push
push
sti
jmp
mov
push
lahf
sbb
pop
sub
xor
push
jp
fmuls
aaa
pop
xor
inc
dec
cmpsl
fiadds
jno
es
dec
lds
frstor
movsl
dec
fucomi
fsubrl
pushf
jno
adc
xor
add
nopl
cli
and
mov
lahf
dec
mov
xchg
jg
out
cmp
inc
push
mov
popa
loope
jno
xchg
sbb
adc
stos
lret
sbb
sub
stc
gs
test
adc
scas
mov
xchg
cmpsl
mov
mov
mov
jnp
or
mov
ret
js
dec
jecxz
dec
add
and
pop
or
jo
daa
in
mov
nop
rorl
sub
in
test
and
mov
or
stos
shr
push
in
dec
pop
addb
sarb
cmp
lcall
and
stc
lcall
bound
mov
or
xchg
mov
out
outsb
movsl
mov
mov
imul
add
jno
pop
out
pop
xor
mov
sub
push
jo
pop
ss
cmp
mov
mov
sti
jge
adc
cmp
pop
xchg
mov
jo
test
pop
push
xlat
pop
roll
out
fdiv
fldl
mov
dec
mov
xor
repnz
pop
movsb
pop
stc
dec
and
scas
dec
lret
jnp
add
inc
mov
mov
mov
test
cwtl
mov
lea
shrl
je
repnz
pop
andb
decb
cmpsl
mov
hlt
mov
jmp
mov
and
cmp
outsb
cmp
mov
and
arpl
add
lock
in
mov
pop
inc
adc
adc
or
imul
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
dec
out
aas
scas
addl
mov
jns
mov
dec
inc
jg
leave
adc
cmp
jecxz
notb
xchg
adc
test
sub
push
xor
lds
adcb
sub
mov
cmp
pop
ficoms
and
pop
and
ret
dec
cmp
add
stc
jne
sahf
jg
shlb
xchg
leave
adc
les
movsl
jno
int3
push
mov
outsl
imul
out
shlb
adc
stos
test
jmp
push
dec
leave
inc
jl
push
sahf
sti
fdivs
adc
adc
mov
mov
into
xor
cmp
mov
dec
enter
dec
mov
jb
adc
cmc
add
insb
ljmp
aam
repz
jmp
cmp
je
mov
rcl
dec
sbb
jle
je
imul
test
cltd
sbb
jb
xlat
mov
scas
jmp
arpl
jae
stos
mull
enter
xor
mov
mov
adc
adc
negl
pusha
adcl
test
jbe
cs
ss
lret
mov
insb
into
rcrl
loopne
inc
pop
sub
fildl
data16
ss
fstpl
decl
gs
test
pop
dec
shlb
push
pop
popf
jge
cmp
shlb
stc
gs
jge
inc
jnp
enter
push
test
sub
cmpsl
xchg
sbb
push
addr16
mov
sar
or
cmp
cs
push
stos
xor
cmc
or
add
xor
mov
fiaddl
xor
pop
mov
dec
adc
cld
or
dec
pop
mov
push
dec
jnp
and
aad
mov
or
js
sbb
cld
cld
ds
pop
addl
fmuls
mov
sbb
sub
dec
push
push
jnp
outsb
jge
rcl
jle
sahf
cld
sahf
enter
jbe
imul
sahf
lahf
and
dec
decb
iret
fs
repnz
ja
sub
ret
fwait
mov
jl
lret
cltd
aaa
in
push
and
mov
inc
es
xchg
int3
cmp
ret
jle
mov
sbb
arpl
inc
cld
shr
xlat
je
loop
daa
adc
dec
adc
stos
adc
data16
cmpsb
stos
mov
stos
xchg
loope
rclb
cmc
and
call
xchg
movsl
mov
test
push
mov
cmpsl
scas
and
push
ret
cmp
int
rorl
mov
mov
push
jae
repz
ret
jne
adc
jno
mov
out
push
shr
iret
cmp
out
xor
add
dec
adc
jge
scas
xchg
jg
ret
test
adc
setnp
sbb
cmp
in
dec
inc
sub
cmpsl
pop
ja
scas
add
rcrl
adc
jl
hlt
fstpl
or
lret
pop
mov
jp
jp
mov
xor
jne
cli
dec
push
mov
inc
fbstp
xlat
jnp
cmpsl
popa
subl
ljmp
sbb
cli
sub
mov
push
ss
jne
add
and
jp
es
cli
insl
aas
leave
add
shrl
lea
test
in
xchg
int3
aam
popa
push
adc
xor
lret
cmc
rclb
lret
sbb
shr
or
in
or
mov
and
sbb
and
push
mov
mov
aad
bound
jne
test
push
es
or
mov
jmp
out
push
les
insb
and
arpl
jbe
inc
inc
arpl
and
and
loope
dec
pop
or
push
in
fidivl
inc
sub
sbb
jno
stos
sbb
sub
jns
out
and
jnp
jae
xchg
arpl
je
arpl
repz
or
js
dec
test
mov
or
or
leave
sbb
cs
xchg
mov
jnp
sub
push
or
push
sbb
cmp
or
fisubl
mov
mull
jle
add
and
jnp
mov
pop
mov
scas
pusha
add
lcall
mov
and
pop
not
jne
sti
or
fstpl
movsl
inc
repnz
mov
iret
jmp
pusha
daa
xor
out
dec
fdivr
insl
inc
cmp
fcmovbe
inc
sub
pop
out
loopne
and
loope
cwtl
out
push
dec
and
lea
aam
sbb
scas
js
outsb
nop
dec
nop
pusha
mov
inc
xchg
mov
jns
in
or
test
ss
in
xchg
jmp
mov
fcompl
xor
adcb
pop
pop
xchg
popa
sbb
mov
ret
push
lds
fnstsw
sbb
cmp
lret
inc
cmc
and
pop
cmp
cmp
push
outsb
and
repz
xchg
dec
sbb
and
outsb
adc
insb
xchg
adc
sub
pop
out
outsb
push
sbb
dec
addr16
and
inc
and
in
adc
sbb
dec
clc
fisubrl
mov
add
jp
pop
inc
fisubs
xchg
sbb
sbb
jmp
push
lret
and
dec
xor
bound
fstps
mov
push
iret
xchg
into
or
mov
movsb
sbb
xor
cs
pop
lods
jl
sub
dec
xor
lcall
out
lods
jnp
loope
sub
sbb
sbb
or
lods
out
aaa
xchg
add
pop
push
mov
pop
popa
test
inc
push
pusha
pop
outsl
movl
loope
pop
lret
repnz
ret
and
popa
sub
aas
subl
shl
fsubr
lods
ja
pop
push
inc
mov
adc
icebp
add
mov
mov
sbb
inc
push
stc
sub
inc
out
aas
xchg
push
gs
stc
bound
ja
test
sub
mov
or
push
and
daa
in
or
imul
or
test
or
dec
insl
jae
pushf
ljmp
aad
adc
fstpt
inc
cltd
repz
push
and
mov
mov
sbb
imul
pop
cld
mov
xchg
fbld
lcall
jge
and
mov
jg
call
orl
icebp
cmp
cmpl
fwait
ds
adc
pop
fs
cmp
mov
sbb
mov
mov
adc
inc
add
test
cmp
jl
shll
jecxz
pop
scas
movb
xchg
sub
andb
aam
xor
addl
lcall
xor
push
es
sbb
jg
fnstenv
dec
clc
jnp
aad
xor
shrl
ja
fnstsw
fadds
push
test
fdiv
mov
aas
xor
push
sbb
push
ret
push
jge
lea
divb
sbb
js
dec
sbb
add
mov
movsl
stc
jne
iret
mov
loope
dec
daa
dec
negl
mov
rolb
xchg
adc
lahf
dec
pop
pop
shrl
cmp
les
jns
out
pop
gs
pop
lret
fidivl
push
add
or
in
jb
or
mov
adc
xchg
pop
popa
subb
push
jl
adc
dec
lock
adc
inc
pop
push
dec
mov
or
fisubl
popa
or
push
jnp
jns
stc
jge
mov
lahf
in
gs
fadd
xlat
cld
jae
loop
add
mov
push
jge
dec
and
test
xchg
dec
lret
jno
or
lret
dec
fildll
adc
or
and
pop
dec
or
push
pop
loope
ja
or
jl
ficompl
fiaddl
sbb
fcmovnb
push
pop
pushf
and
inc
loop
inc
sub
lock
jo
push
test
hlt
xchg
sub
sbb
push
aas
hlt
arpl
popa
and
loopne
add
jecxz
jae
in
mov
push
test
pop
out
pop
insl
imul
lea
outsb
push
lcall
xchg
and
mov
insl
mov
pop
dec
push
adc
testb
cwtl
jecxz
sub
mov
pop
out
out
fistl
movsb
inc
pop
mov
sub
leave
cmpsb
pop
pop
testb
xlat
punpckldq
xchg
mov
or
add
dec
cwtl
inc
cmp
cwtl
loop
cmp
push
xchg
add
sbb
mov
fidivl
dec
out
cmpsb
add
xchg
sub
addl
xor
ds
ljmp
call
sub
xchg
into
in
les
and
stos
push
outsl
clc
aam
jns
inc
fbld
xchg
and
sbb
jecxz
inc
ljmp
jnp
scas
stos
cmp
add
fcompl
jecxz
xor
inc
jo
rcrb
cmp
sbbb
jge
jbe
test
mov
lds
fwait
cmpsb
mov
or
cld
icebp
inc
lock
mov
mov
fldenv
fimuls
add
cmc
mov
movsl
movsb
mov
sti
hlt
mov
call
scas
dec
lret
pushf
adc
cwtl
jne
jg
repz
adc
jl
movsb
stos
adc
dec
jo
clc
subl
mov
arpl
dec
dec
fwait
inc
inc
stos
cmpsl
mov
rcll
les
sub
add
dec
pop
xchg
xchg
mov
add
arpl
je
repnz
leave
rcrb
sbb
sub
xor
dec
cld
mov
mov
popa
dec
mov
shll
xchg
fs
lcall
push
adc
movsb
rorb
mov
adc
add
adc
in
arpl
pop
mov
sub
inc
outsl
fldenv
mov
cmpsb
add
xchg
xor
push
cmp
add
mov
add
cltd
cmp
xchg
sbb
aaa
adc
cmp
pop
cs
push
inc
sbb
movb
sahf
xchg
dec
test
jo
call
xor
daa
jno
rorb
arpl
jae
dec
mov
pop
aam
fimull
sub
push
adc
jb
aam
and
cmp
cltd
cmpsl
push
pop
lea
push
cld
pop
xor
push
mov
jnp
das
imul
jg
push
leave
xchg
sbb
pop
push
mov
aam
jbe
jo
mov
inc
cld
jecxz
add
adc
shl
in
mov
jns
jge
push
xlat
aaa
jmp
jbe
fadds
rorl
xor
xor
mov
lret
enter
or
std
in
std
and
in
sbb
lret
jns
pop
cwtd
push
xchg
in
ljmp
push
cs
xchg
ljmp
pop
mov
cwtl
int3
repnz
dec
loop
inc
clc
imul
inc
add
aam
jg
sti
xor
ja
mov
popa
pop
rclb
fsubrl
lcall
xchg
rol
mov
push
inc
cwtl
pop
mov
stos
pop
lock
cmp
dec
enter
in
pop
roll
jne
and
pop
data16
stos
pop
je
les
xor
aas
jno
fs
sbb
jbe
jecxz
adc
xchg
push
repz
and
decb
lret
pop
cmpl
es
scas
loopne
push
shrb
arpl
cltd
mull
xor
jl
popa
jnp
sbb
jne
pop
jno
inc
cmp
push
imul
inc
mov
mov
mov
outsl
xor
aas
inc
fcomi
dec
lret
mov
repnz
inc
arpl
or
sbb
sub
and
pop
adc
xor
repz
ficompl
push
sbb
adc
xchg
adc
cmp
insl
xlat
sbb
sub
adc
movb
cltd
test
fcoms
xchg
pop
lcall
adc
push
mov
popa
leave
clc
icebp
or
jg
mov
adc
jno
mov
aas
or
orb
sbb
rol
mov
pushf
ds
or
lock
imul
add
xchg
push
push
jb
les
add
dec
jmp
and
xor
div
stc
mov
inc
nop
decl
jmp
test
mov
test
loop
outsb
push
lcall
mov
imul
mov
adc
add
xchg
add
test
out
push
gs
sbbl
test
or
xor
jno
and
sbb
cmp
test
xchg
jo
insl
fnstcw
mov
test
xchg
sub
sub
lcall
dec
lahf
fnstcw
fcomps
adc
push
pop
mov
stos
push
jl
popa
scas
cmpsb
shll
loopne
mov
scas
out
jne
das
mov
sbb
jl
pop
scas
mov
mov
push
mov
out
aam
cmpsl
stos
sub
adc
mov
dec
out
cmp
inc
sub
addb
rorl
jno
loopne
cmp
or
imul
sbb
xor
loopne
clc
les
jne
aaa
int3
dec
xchg
cld
pushl
jl
out
imul
pop
imul
imull
lock
popf
stos
cmp
dec
dec
scas
popa
outsb
lcallw
jge
stos
bound
and
sub
shll
int3
imul
lret
filds
mov
mov
hlt
cmp
pop
dec
shrb
push
es
and
test
in
mov
xchg
aas
les
push
cwtl
push
xchg
int
pop
sub
mov
leave
aam
jne
fdiv
ret
xor
fisubrl
pop
xor
xchg
push
add
add
bound
stos
push
pop
cmp
push
pop
icebp
or
mov
dec
psubsb
cmp
dec
cmp
stos
add
mov
cmp
mov
mov
pop
ja
les
clc
imul
ret
test
and
mov
out
mov
pop
ljmp
mov
icebp
mov
sbb
sti
push
adc
xlat
ficomps
adc
mov
cmp
xor
pop
or
ja
mov
insb
mov
cmp
ja
cmp
jb
mov
cmp
shr
lods
jb
jbe
pop
popa
jmp
scas
or
push
aas
fs
cmpsb
inc
movb
jne
popa
shrl
mov
lea
dec
andb
dec
dec
jnp
addr16
and
or
aam
and
sub
call
fldt
xchg
push
adc
outsb
in
pop
outsb
loop
arpl
dec
fcmovb
sub
int3
lret
adc
mov
adc
add
das
aaa
mov
jge
aas
xor
aas
add
add
xor
and
in
push
mov
or
in
mov
rol
loope
lods
int3
adc
popl
leave
dec
cltd
jg,pt
lods
bt
movsb
xor
mov
xor
int
arpl
lods
test
sbb
std
mov
loope
int
insl
dec
mov
push
lret
fdivr
push
xor
jp
ss
outsb
push
lock
xchg
int3
clc
mov
push
xchg
imul
mov
fcmovnb
or
mov
rcll
sub
int3
arpl
dec
repz
or
dec
jns
or
movsl
cmp
jbe
pop
das
mov
lcall
inc
xor
xor
cli
mov
out
pop
sbb
fsin
movsl
pop
lret
jbe
jle
xchg
shl
pop
inc
push
pop
out
in
aas
cmp
fldcw
pop
sub
mov
push
sbb
daa
aas
add
nop
cmp
mov
jbe
in
mov
fs
ret
jne
ror
or
jns
mov
mulb
cmp
adc
out
adc
push
push
mov
xor
mov
js
add
sar
in
push
dec
rol
jecxz
xchg
and
imul
lods
iret
std
sarl
xor
fstl
sub
and
add
fidivrl
sub
aad
roll
rep
mov
sbb
jl
sub
mov
je
sbb
ret
xorb
shr
imul
and
outsb
repz
lcall
push
and
test
xchg
sub
mov
inc
insb
push
dec
cmc
xchg
lea
outsl
sbb
add
iret
fists
sbb
std
sahf
sar
jl
in
fisubl
fsub
sbb
fisubs
stc
mov
stos
and
aas
fadds
adc
lret
jno
jecxz
sub
hlt
fstl
scas
push
sbb
xchg
push
cmpsb
push
xchg
fsubl
into
arpl
inc
dec
inc
cmp
mov
stos
jmp
js
popf
movsl
dec
add
das
int3
leave
and
in
mov
mov
ret
pop
cmp
dec
add
sahf
mov
cmp
sub
cmp
adc
movb
pop
cwtl
in
fwait
cmp
cld
loop
pop
push
scas
and
es
jge
aam
jmp
mov
jmp
inc
mov
and
dec
push
dec
sub
lock
mov
orb
push
pop
fs
icebp
mov
push
xor
and
lcall
ljmp
xor
xchg
jecxz
lea
mov
repz
pop
out
adc
dec
sub
mov
sub
add
sub
mov
xchg
in
push
rcrl
pop
add
mov
mov
mov
lcall
fstp
mov
insl
dec
mov
pop
inc
and
dec
adc
test
sub
div
mov
jg
aam
push
pusha
lods
loop,pn
cmc
and
and
fstpl
mov
popf
ret
mov
push
mov
pop
jo
push
js
popf
and
leave
inc
and
stos
fistl
mov
mov
dec
pop
jp
repnz
pop
andb
pop
in
push
mov
andb
cmp
mov
jmp
adcb
lods
mov
jae
fs
cmp
out
loop
xchg
pop
and
mov
cmc
push
inc
lds
sub
inc
or
inc
sarl
rcr
test
xor
cmp
cltd
cmp
and
inc
add
inc
xadd
fucomi
mov
pop
repz
push
xor
rorl
pop
pop
mov
mov
rcrl
adc
loopne
add
sbb
or
mov
sahf
andnps
inc
fs
test
out
adc
push
mov
sub
negb
push
fdiv
mov
daa
mov
push
out
fldenv
je
fsubrs
hlt
divb
iret
jbe
ds
adc
test
sub
cld
push
mov
adc
imul
dec
adc
cld
xor
enter
test
mov
pop
cltd
imul
enter
jp
jne
call
and
and
mov
mov
mov
xor
mov
push
fnstsw
in
int3
lcall
push
cli
roll
dec
mov
adc
cmp
ds
das
fisttps
push
xor
lds
stos
pop
add
inc
test
lret
cmpsl
in
into
outsl
jbe
add
sbb
and
add
inc
outsb
mov
enter
and
jl
push
enter
jg
dec
pop
jge
faddp
push
jmp
cld
adc
js
push
bound
in
lods
cmc
out
add
daa
pop
xor
stos
fsubl
or
mov
pop
mov
jne
push
test
mov
jae
xchg
flds
jno
pop
ja
or
sbb
xor
sahf
stos
ret
out
cmp
or
dec
mov
aaa
jmp
xchg
sbb
or
aad
das
mov
movsl
outsl
push
cmpsl
mov
cmp
pop
clc
jge
mov
mov
cmp
lret
xorb
lret
xor
push
das
mov
xchg
jmp
xchg
filds
jl
and
sbb
ljmp
inc
sti
add
inc
out
cs
das
push
adc
andb
xlat
cmp
cmp
jb
push
cmpsb
dec
lods
jmp
adc
pusha
int
mov
fidivl
out
les
loopne
xor
dec
ja
clc
rolb
daa
push
test
and
lods
shlb
lds
push
insl
and
ljmp
in
iret
sub
adc
ss
into
push
les
cmp
add
cs
pop
pusha
add
and
xor
sbbb
nop
iret
dec
outsl
push
push
les
dec
shl
shrb
add
ljmp
inc
decl
sbb
sbb
or
je
sub
push
cwtl
mov
pop
add
hlt
sub
cmp
scas
adc
fwait
je
push
ret
test
ja
jge
mov
jmp
js
jle
mov
sti
je
addr16
clc
sub
aad
test
push
jl
jno
mov
mov
mov
dec
ficompl
test
push
leave
inc
dec
push
cltd
push
push
lods
in
es
lcall
stc
mov
inc
and
mov
pop
addr16
cmp
inc
out
out
xor
xor
test
mov
and
and
test
xlat
rcrb
popf
lcall
scas
xchg
fst
push
pop
xchg
cmp
cmp
push
push
jg
adc
out
ljmp
mov
dec
mov
daa
mov
push
dec
es
test
cmpsl
jno
add
or
inc
test
inc
push
popa
mov
dec
ret
adc
adc
add
push
mov
push
mov
jae
sub
and
inc
xor
in
or
jb
pop
dec
cmpsl
lret
cmp
arpl
xlat
in
cli
jbe
movsl
aam
or
mov
leave
inc
lds
push
scas
xchg
nop
adc
mov
push
loop
mov
fildll
test
ds
xlat
xchg
and
push
or
mov
aam
mov
testl
xor
inc
inc
sub
fidivl
dec
jnp
aam
cmpsl
mov
sub
lahf
les
xchg
shrl
push
add
aas
add
jmp
jnp
mov
inc
fidivrl
std
dec
push
fwait
mov
add
lods
inc
rcrl
mov
aam
out
mov
popf
int3
jnp
fnstcw
mov
cmp
fldt
push
push
jmp
dec
mov
cli
jle
jne
push
cmpb
push
cmpsl
mov
ds
addr16
gs
mov
out
outsb
fwait
mov
push
push
loopne
and
clc
push
inc
stos
xchg
adc
pop
into
js
pusha
dec
pushf
mov
cmp
jl
inc
hlt
mov
in
push
jae
jle
scas
push
cmpsl
std
add
mov
fs
stos
sub
adc
dec
dec
xor
loopne
xchg
out
xor
lock
or
jg
pop
jge
mov
iret
sahf
gs
mov
dec
test
out
aaa
mov
pop
cmp
push
mul
sub
leave
inc
mov
es
insl
inc
pushf
test
dec
mov
enter
arpl
lds
in
mov
in
lds
rclb
xor
or
clc
bound
xor
mov
inc
mov
in
mov
sbb
add
adc
and
sti
insl
mov
dec
enter
rcll
or
arpl
dec
mov
ret
push
loopne
xchg
mov
cmpsl
add
arpl
imul
cs
xor
arpl
push
mov
mov
or
dec
inc
enter
nop
and
aam
out
push
pop
xchg
push
dec
scas
cmp
mov
int3
sbb
push
rcll
pop
gs
enter
dec
scas
pop
popf
sub
outsl
lcall
mov
push
push
imulb
adc
sbb
fs
stos
loopne
icebp
pop
decb
stos
es
xchg
and
sub
pusha
jge
push
jecxz
lahf
sub
push
in
dec
or
adc
nopl
aad
in
jg
das
adc
add
ret
lcall
sahf
mov
leave
xrelease
in
rorl
daa
cltd
pop
mov
pop
fcomps
in
ficompl
ret
xchg
fisttpl
mov
xor
push
fstp
adc
movsb
mov
into
lock
sahf
pop
pusha
popf
pop
mov
cmpsl
vpsadbw
adcl
test
subl
test
pop
pushf
fcompl
mov
and
pop
test
and
add
cmp
jp
imulb
es
push
gs
cmp
pop
xchg
leave
out
and
inc
lods
or
icebp
pop
jmp
popf
insl
pop
pop
mov
scas
dec
sub
stc
jmp
fs
leave
addr16
xor
or
sub
adc
inc
les
jb
jb,pt
std
inc
cli
imul
call
pusha
in
je
sub
xchg
xchg
test
mov
jle
sub
lret
and
sbb
push
jnp
xchg
jl
xchg
and
ja
mov
dec
push
insl
ret
mov
mov
jns
outsl
ds
adc
mov
outsb
and
stos
adc
lret
lret
shr
add
shrb
mov
mov
xchg
lock
push
movsw
sbb
pop
sar
mov
fdivr
lret
mov
out
in
popf
repnz
inc
lods
enter
popf
push
outsb
xchg
in
imull
mov
movsb
fdecstp
mov
sub
push
adc
stos
adc
jg
loop
push
int
clc
lret
adc
loope
out
or
add
cmp
adc
and
mov
jbe
aad
jns
mov
es
pop
lods
sub
rolb
je
mov
mov
sbb
rclb
insb
xchg
test
adc
cmpl
fildl
mov
add
push
outsl
jecxz
dec
ds
cmpsb
outsl
mov
xchg
jae
stc
je
inc
ljmp
dec
neg
mov
or
mov
hlt
push
js
push
dec
adc
inc
mov
push
adc
sbb
mov
mov
cmpsb
aam
fwait
xor
and
and
clc
call
jecxz
mov
xchg
aas
adc
adc
loope
cs
out
xchg
leave
rorb
shll
jp
xchg
inc
test
pop
mov
es
push
cmpsl
ja
stos
inc
dec
jle
jge
mov
jl
sti
movsb
dec
cmp
mov
push
jecxz
inc
add
fistpll
in
stos
rsqrtps
mov
dec
test
jo
dec
xchg
es
fldenv
cmp
in
repnz
push
mov
insl
lahf
test
xor
pop
fimull
pop
in
push
jp
xchg
or
aam
mov
clc
pop
repnz
cs
test
aad
fnstenv
adc
fcmove
hlt
xchg
cmpsb
push
xor
lea
andl
lahf
adc
cmp
lods
test
cmpl
jl
lods
sahf
dec
jmp
or
stos
lock
add
cmp
adcb
push
test
pop
add
or
pop
sub
pop
fsubl
add
inc
fstpl
pop
stos
imul
lret
fbstp
cltd
mov
es
scas
jl
ds
stos
punpckhbw
fsubl
pop
loop
mov
pop
mov
fcoml
sbb
test
aas
divb
push
mov
mov
je
ja
push
pop
aam
sub
jmp
and
cmp
xchg
inc
mov
in
fs
fbstp
loope
int3
popf
loopne
pop
mov
jecxz
nop
gs
imul
aas
xchg
jno
lcall
repz
jl
scas
repz
scas
not
dec
in
out
mov
iret
dec
mov
nop
jl
mov
pushf
iret
push
es
adc
rcrb
xchg
movsb
imulb
inc
bound
push
mov
adc
dec
lods
or
scas
jle
jl
push
adc
sub
adc
xor
mov
sti
loop
insb
dec
or
aam
sahf
lods
test
xor
test
xor
std
fisubl
sub
test
ljmp
fs
pusha
adcl
cmpsl
xor
adc
dec
ret
test
or
pusha
cmp
xor
cmp
cmp
inc
dec
stos
and
sarb
dec
test
sbb
in
and
adc
sbb
pop
fsubrl
or
pusha
mov
jge
ret
enter
aam
aam
pop
mov
jno
sub
out
leave
movsb
fsts
xchg
incb
jge
scas
cmpsb
inc
mov
mov
out
fs
stc
jb
mov
iret
mov
cmp
lds
and
js
xchg
push
rorb
lcall
sub
in
call
dec
fbld
push
jns
mov
cmp
pop
outsl
lret
mov
cltd
and
inc
xchg
pushf
push
popa
or
xor
dec
xchg
divb
lds
add
pop
mov
repz
xchg
ret
pop
stos
push
stc
xchg
arpl
dec
icebp
and
gs
add
sbb
pop
and
cld
mov
data16
push
pop
cmp
sbb
ffreep
sub
sub
cs
cmp
addr16
cmpsl
lock
jno
sbb
cmp
adc
shlb
addl
mov
and
mov
loope
jl
insb
div
pop
nop
ja
mov
lods
imul
and
out
or
push
icebp
mov
inc
fwait
into
cmpl
ljmp
call
sbb
xchg
xor
or
fs
dec
jnp
sbb
pop
pop
pop
dec
dec
and
lock
adc
sub
pop
or
stos
test
pop
mov
sbb
xchg
test
add
setae
lods
aaa
push
xor
xor
adc
in
scas
or
pop
shl
dec
xchg
mov
mov
cs
ret
push
lock
push
sub
xor
dec
push
push
xchg
aas
sbb
xchg
adc
pop
das
fcompl
into
add
repz
mov
mov
lods
and
or
out
test
rorb
inc
sub
nop
mov
cs
adc
fimull
xchg
mov
adc
and
bnd
lods
loopne
dec
in
shll
pop
jns
sub
mov
dec
pop
loop
xor
inc
jmp
cmp
adc
jle
bound
fstpt
movsb
test
xor
popa
mov
and
shlb
frstor
loope
ror
adc
out
fsubrp
xor
les
jno
cli
push
sbb
loopne
cmp
aaa
sub
je
mov
test
cwtl
jbe
sbb
pop
aas
xor
jg
jg
mov
add
leave
inc
lods
xchg
adc
in
sbb
and
push
in
pop
popf
sbb
loop
ret
mov
and
add
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
notb
lahf
scas
cli
mov
orl
pop
push
cmpsb
jl
fwait
shrb
mov
sub
and
jo
xchg
mov
rclb
test
out
inc
test
push
aaa
loopne
mov
adc
hlt
cli
push
mov
xchg
mov
push
daa
loope
mov
adc
jbe
push
jl
leave
add
sub
xchg
inc
mov
aas
outsb
cmpsl
mov
push
sub
inc
leave
sub
fistpll
mov
bnd
je
jb
pushl
lds
cld
xchg
push
cmp
xchg
popa
mov
adc
in
outsl
inc
loopne
xor
or
ret
inc
add
aad
pop
inc
sub
ljmp
adc
les
jo
inc
loope
les
gs
lods
xchg
pop
jp
cs
push
cli
lock
decl
push
sub
insl
lock
stos
jg
out
jl
push
lret
jmp
mov
hlt
xchg
cmp
and
cs
mov
in
hlt
add
fsubl
loope
cmp
aas
jnp
cmp
inc
xor
pop
xchg
inc
dec
lea
mov
addb
add
xor
outsl
pop
inc
data16
imul
aad
jp
test
jns
cmp
xchg
out
pop
add
cmp
adc
pop
adc
in
orl
into
cmp
std
arpl
jmp
cmpsb
jl
inc
das
cmpsl
mov
mov
add
jmp
rorb
mov
mov
xchg
incl
mov
lods
push
ret
ljmp
and
cmpl
sbb
mov
inc
out
fsub
rorl
ss
add
pop
cmpsb
subb
loope
cmc
pop
dec
sbb
cmp
mov
mov
movsl
bsr
cmp
mov
shr
xor
loope
divb
and
cmp
or
mov
dec
jp
enter
mov
mov
stos
xor
dec
and
loop
das
inc
inc
call
xor
lea
pop
insl
and
xchg
and
addr16
push
int3
add
xchg
or
jo,pn
stc
fucom
std
jbe
fisttpll
xchg
lret
cmp
leave
cmc
lcall
mov
js
xor
pop
fimull
jns
jge
shrb
test
leave
xchg
outsl
add
cltd
pop
mov
ret
cmp
mov
jp
out
fildll
lret
sbb
pop
pop
xor
sbb
sub
or
push
xchg
pop
and
add
jmp
iret
or
mov
inc
mov
sub
mov
fdivl
aaa
lods
sbb
mov
ja
stc
ss
push
mov
mov
mov
mov
mov
dec
pop
push
ja
and
pop
sub
sbb
and
mov
push
dec
xchg
test
add
insl
mov
mov
in
ret
sbb
addb
rclb
out
adc
mov
and
mov
pop
cmc
ss
xchg
xchg
aad
mov
outsb
mov
leave
test
out
mov
fnstsw
int3
shlb
and
pop
inc
clc
cmp
out
fs
dec
xlat
fidivrl
leave
ffree
inc
idiv
mov
sti
push
pop
sub
enter
xchg
hlt
into
push
inc
adc
cmp
xchg
cmp
mov
xor
gs
adcb
out
push
das
jp
fwait
roll
fs
add
ret
cmp
rcrb
pusha
addr16
mov
das
dec
test
jecxz
movsl
mulb
addr16
fisubrs
std
ret
loopne
xchg
or
mov
push
mov
and
loopne
mov
push
mov
pop
loopne
sbb
inc
enter
mov
mov
push
push
in
lcall
xchg
cmpsb
jle
fdiv
pop
mov
and
fwait
dec
imul
lea
mov
jg
adc
test
push
jmp
stos
jae
sbb
sbbb
fcompl
dec
xor
push
xchg
xorl
movsl
sar
dec
test
and
es
je
leave
aad
in
jo
mov
dec
out
mov
imul
sbb
add
aaa
add
movsb
int3
clc
jnp
outsl
popa
outsl
xchg
mov
jae
cmpl
or
test
inc
sbb
mov
pop
lcall
scas
xor
nop
add
out
xorl
mov
movsb
call
fsub
leave
in
xchg
addr16
sub
jae
popa
mov
mov
push
jb
mov
dec
jmp
and
in
test
stos
sub
loop
repz
jp
cmp
jo
lret
inc
push
pop
dec
int
xor
xchg
mov
fucomp
fwait
cmp
sarl
jg
jne
mov
and
stc
xchg
stos
push
add
sub
add
xor
dec
mov
add
pusha
in
repz
fcompl
push
std
imul
fwait
mov
xor
jo
or
mov
adc
cmp
loop
cmpsb
in
mov
mov
fs
hlt
mov
jo
aad
pop
fildll
mov
adc
pop
sarl
orl
xor
cmpsb
lods
pop
ret
insb
jns
in
mov
das
in
addr16
sar
nop
cli
pop
push
and
data16
dec
addr16
jns
call
jge
je
push
pop
aaa
stc
lahf
sbb
repz
je
sbb
popa
cmpsl
sub
repnz
bnd
push
mov
sbb
add
push
xchg
xor
inc
dec
repnz
cmp
test
in
leave
xor
out
or
cltd
dec
cmpsb
testb
xor
mov
ss
out
and
imul
sbb
pop
add
inc
mov
leave
adc
jge
je
xchg
pop
mov
cwtl
cli
cmp
data16
stos
lea
mov
dec
or
push
mov
jno
fsubrs
or
iret
hlt
xor
cmc
andl
xchg
xor
dec
out
pop
cmc
cmp
add
adc
icebp
mov
cmp
fsubl
rcrb
xor
nop
mov
movsb
pop
addl
cs
rcrb
mov
mov
inc
mov
jo
sbb
lds
cmp
iret
dec
sti
push
lahf
mov
jl
push
cs
cld
test
jnp
inc
pop
xchg
pushf
lods
stos
int3
sbb
popf
int3
in
lcall
dec
gs
xchg
repz
cmp
mov
sbb
bnd
pop
mov
push
fdivs
push
cmp
loop
dec
out
mov
xlat
pop
sub
mov
in
xor
idivl
out
fs
fnsetpm(287
std
int3
adc
and
aaa
push
pop
cs
loop
fcomp
pop
js
ds
out
pop
sbb
mov
shlb
std
into
ficompl
stos
out
stos
xchg
iret
into
cmp
out
imul
jne
repz
stos
outsb
adc
ficoml
fdivr
pusha
jmp
cmp
jno
retw
ret
scas
mov
call
xchg
xor
jbe
jae,pt
xchg
into
xchg
sub
pusha
cmc
mov
jecxz
mov
cld
adc
cli
jae
jg
dec
xor
test
dec
push
aad
dec
mov
mov
or
insb
dec
aad
lahf
test
lock
in
lret
div
sbb
and
cmpsb
insb
arpl
nop
in
stc
jns
push
pop
lods
and
mov
push
std
insl
pop
and
and
sahf
cmp
or
sahf
loopne
das
dec
adc
inc
adc
mov
popf
into
and
cmpsb
out
call
mov
lds
mov
xchg
outsb
sub
out
jle
rcl
xchg
mov
add
jp
jle
lret
cmpsb
ret
pop
pop
lock
mov
mov
push
pop
pusha
es
adc
jns
add
cmpsl
ja
jg
mov
push
sbb
push
mov
dec
andl
mov
cld
xlat
mov
lds
movsl
xchg
xchg
jecxz
in
imul
ret
pop
sti
xchg
add
xor
add
push
mov
add
push
cli
idivl
pushf
clc
or
fdivr
daa
loop
aad
inc
arpl
daa
adc
leave
lahf
insb
mov
jmp
mov
and
out
mov
adcl
cli
inc
mov
ss
in
clc
xor
mov
dec
push
shll
jb
lcall
daa
movsl
mov
mov
cmpsb
ret
movb
sbb
inc
xor
out
mov
lods
rcrl
outsb
pop
pop
fsubrl
loope
pop
sub
dec
push
xchg
adc
in
test
loop
andb
sarl
shll
lcall
imul
mov
repnz
jae
into
int3
xchg
lods
xchg
icebp
pop
mov
sbb
or
lock
mov
aad
jbe
inc
sbb
sbb
lcall
or
loope
out
jecxz
dec
mov
sub
fldt
push
inc
mov
pop
imul
mov
jae
rcrb
divl
sub
loope
xchg
adc
and
leave
add
loop
bound
mov
xchg
sahf
push
push
aam
loop
aam
and
jl
xchg
cltd
mov
cmp
orl
mov
xor
xor
push
lret
repnz
jmp
mov
cld
aam
add
insl
stos
lods
outsb
out
sbb
dec
repz
or
add
jae
mov
jle
scas
cmp
pop
sub
icebp
sbb
mov
xchg
outsb
rclb
pushf
add
mov
cmpsl
fdivrs
pop
mov
loopne
lea
mov
or
push
cmp
and
or
cmc
cli
std
popf
call
lods
dec
mov
push
xor
mov
je
fistpll
mov
xlat
mov
icebp
mov
lea
aad
orb
std
xor
aad
movb
mov
movsl
scas
addr16
rclb
repz
shrb
es
leave
ret
dec
jne
fcoml
ljmp
xor
cmp
adc
in
sbb
pop
mov
xchg
add
push
fistpl
xorl
outsb
clc
jne
hlt
movsl
movsb
dec
inc
adc
or
fwait
mov
fcmovu
push
xor
mov
push
icebp
in
pop
enter
mov
orl
adc
xor
addl
push
cmpsl
pop
mov
pop
mov
in
push
dec
insl
cs
lret
testb
mov
jp
das
pop
inc
mov
sub
xor
adc
pop
cli
arpl
test
in
mov
jmp
dec
mov
pushf
scas
xchg
mov
xor
push
dec
insb
jae
sbb
lods
fnstenv
stc
lock
sbb
jge
cmp
insb
ja
addr16
push
mov
loope
sbb
cltd
roll
mov
call
mov
loop
pop
adc
inc
pop
pop
arpl
lcall
push
inc
cmp
mov
loop
push
xchg
divl
sub
cmp
or
inc
icebp
jmp
inc
out
mov
loopne
xlat
and
loop
aaa
sub
pop
and
roll
sub
push
xchg
sub
inc
mov
mov
aas
sub
and
jo
and
push
xchg
mov
paddw
dec
test
popa
stc
pop
adc
or
dec
lahf
test
aas
clc
cmp
pusha
lahf
inc
mov
cmp
ss
lods
or
in
xchg
in
jns
inc
decb
lock
add
mov
xor
lds
fcom
es
mov
pop
xor
into
mov
scas
dec
inc
fs
xchg
mov
jo
pop
mov
sbb
xor
js
nop
frstor
loop
loope
dec
call
pop
es
or
addl
jmp
pop
pushf
inc
push
push
lea
cmp
imul
js
ljmp
xchg
mov
int3
imul
popa
sbb
loopne
lods
cwtl
aaa
sti
push
pop
sbb
clc
xor
sub
mov
sar
push
sbb
stc
push
test
imul
jne
imul
movl
xchg
test
jp
push
loopne
inc
cs
gs
mov
sub
xchg
stos
sub
stos
adc
testb
mov
adc
in
js
enter
add
mov
fsubrl
sbb
dec
sbbb
push
dec
inc
cld
clc
and
mov
cmpsb
mov
cmp
cmp
push
xorl
inc
push
stc
mov
or
pop
jnp
mov
sub
dec
xchg
scas
adc
les
jb
mov
test
popa
lods
aad
cmp
sti
add
rol
hlt
xor
fwait
pop
dec
lahf
adc
cs
popa
les
das
xchg
sar
test
into
addr16
jb
ds
popa
enter
lea
hlt
push
bound
cmp
dec
gs
shrl
jae
test
and
mov
lods
stos
in
lods
fldenv
mov
xorl
mov
out
hlt
lods
fwait
enter
scas
dec
adc
lcall
push
in
std
cmp
es
inc
jae
mov
and
in
push
repnz
add
xchg
rolb
ljmp
add
test
mov
push
jno
js
cld
jle
test
outsl
outsb
int3
mov
xlat
lret
loop
mov
fucomp
test
aad
dec
sub
sub
testb
xor
je
popf
sarb
nop
les
mov
fisubs
sbb
push
les
push
lds
daa
xchg
outsl
xchg
lret
dec
pusha
dec
xor
lea
dec
mov
out
out
jl
and
jno
or
mov
aam
inc
sub
mov
cmpsl
std
cwtl
inc
push
mov
dec
addr16
jle
mov
jns
fildl
mov
cmpsb
xchg
lret
inc
lock
mov
inc
ss
repnz
xchg
xchg
sti
ret
out
idivl
movsl
dec
fsubp
pop
mov
xor
neg
or
fcoms
mov
adc
inc
xchg
inc
or
jne
ficomps
cld
and
mov
or
popf
add
lahf
cmp
adc
jo
inc
inc
and
repz
insb
out
lcall
repnz
add
cmp
dec
jnp
dec
xor
int3
stos
sti
in
gs
stc
sbb
dec
jecxz
push
jns
iret
nop
xchg
xor
add
and
push
roll
in
scas
xchg
sbb
pop
jae
lock
jp
push
jp
push
mov
push
test
outsb
inc
rcrb
aam
leave
mov
cli
adc
and
adc
dec
push
in
jp
adc
push
imul
push
jg
adc
out
sbb
pop
mov
scas
pop
addr16
push
dec
mov
mov
fsub
dec
movsb
push
dec
shr
push
insl
mov
cmp
adc
sub
add
sub
ret
cmp
jae
or
pop
sub
daa
scas
push
mov
xchg
inc
inc
shll
jmp
mov
jmp
sbb
or
fld
add
popf
insl
popf
mov
aad
in
mov
mov
je
jae
arpl
xchg
in
xor
repnz
fsubp
loop
test
mov
sub
dec
movsl
mov
inc
ds
adc
cmpsb
adc
mov
fiadds
shlb
jnp
rcrb
mov
xor
lds
adc
and
xor
inc
mov
in
in
jno
xchg
dec
add
lret
mov
adc
out
sbb
cmp
mov
rcr
sahf
rorl
mov
stc
mov
les
data16
inc
push
andl
icebp
fidivrs
test
pop
lret
roll
lahf
es
repz
sub
enter
mov
adc
out
pop
push
lea
sbb
adc
pop
dec
lea
mov
test
mov
add
xchg
sub
mov
enter
push
sub
dec
lods
ret
in
repz
ficoms
aas
fldenv
xor
je
and
daa
bnd
push
aas
sub
push
push
lods
pushf
or
xchg
add
cmp
pusha
or
jns
pop
xlat
push
in
leave
loope
push
mov
cld
xchg
sti
sbb
roll
lcall
int3
int
popa
jnp
push
enter
jns
cwtl
fdivl
popa
adc
jp
and
cmpsl
outsl
arpl
xor
mov
insl
pop
xchg
stos
insl
pushf
hlt
cld
adc
incb
gs
lds
int
mov
inc
rol
rorl
icebp
lahf
mov
or
pop
jns
lahf
mov
cld
shrb
mov
lea
mov
in
mov
mov
push
cmp
inc
xor
jb
in
movsl
test
int
cmp
leave
shlb
cmpsb
push
xchg
ret
mov
repnz
xchg
rorl
ds
loope
sub
clc
loopne
pusha
mov
cmp
das
test
xchg
sahf
fnstcw
imul
mov
and
andl
lods
addr16
ljmp
mov
pop
outsb
fwait
movsl
enter
jmp
cli
mov
adc
aam
jnp
and
xlat
adc
fcomi
movsl
js
cmp
ret
xchg
test
mov
fidivrl
stc
mov
mov
mov
jns
xchg
movsb
rcll
sub
cwtl
sbb
les
jnp
jp
repnz
mov
in
lahf
or
sub
adc
fwait
xor
and
sbb
imul
std
push
out
ficoms
xor
add
aam
cld
jno
aam
and
mov
ss
push
mov
jp
insb
mov
lahf
cld
xchg
pop
cs
and
push
pop
push
mov
jbe
and
pop
pop
aad
popf
fidivrs
lret
enter
in
scas
ret
jo
add
out
mov
or
mov
push
jnp
and
sub
xor
push
inc
xor
jp
adc
fcomi
pop
add
dec
or
int3
cmp
xchg
rorl
fimuls
mov
add
imul
sbb
loop
cmpsb
and
dec
dec
pusha
shll
lds
lods
push
push
stos
or
enter
jo
aam
mov
xor
lea
cmp
dec
fdiv
mov
add
jg
add
cmp
aas
lcall
out
mov
out
aam
add
insb
cmpsl
data16
outsb
mov
pop
mov
mov
ret
and
add
repnz
cmp
addr16
aaa
outsb
fstps
rorb
sbb
push
fsubr
dec
outsl
ljmp
mov
mov
mov
sub
mov
int3
xor
jl
into
mov
in
mov
cmp
jae
pop
push
push
mov
fdivr
or
dec
out
mov
add
inc
inc
xchg
js
add
xlat
push
rcrl
fwait
nop
pop
outsb
add
jno
movsl
aaa
sbb
fs
and
scas
pusha
sub
inc
repz
push
enter
mov
and
push
push
in
pop
outsl
push
out
jecxz
xchg
push
mov
ror
aas
inc
mov
rolb
jg
or
pop
mov
mov
cmpsb
call
jmp
add
and
push
arpl
push
and
call
dec
dec
adc
dec
jp
xchg
add
jmp
sahf
adc
dec
xchg
loope
push
test
add
mov
lcall
sub
cld
call
pop
mov
inc
jmp
testb
mov
clc
shlb
sbb
popa
mov
shlb
stos
xor
dec
mov
ja
sbbl
leave
rol
and
xor
add
pop
inc
sub
sub
jns
loope
xchg
sub
clc
pop
and
jp
xor
pop
lods
dec
shl
lret
pop
push
dec
mov
fsubrl
loope
adc
ret
sub
mov
inc
std
inc
and
sub
pop
push
xchg
jns
into
mov
push
or
jbe
xor
pop
xor
dec
adc
ret
lahf
into
rep
in
xor
sarl
bnd
add
scas
push
fcompl
imul
insl
iret
inc
imul
or
adc
insl
add
stc
scas
ret
enter
cld
mov
cmp
cmp
lea
cltd
jmp
mov
dec
lcall
js
sarl
js
dec
xchg
lret
xor
js
shlb
lret
jns
lret
mov
xor
mov
jb
stos
xchg
or
call
je
dec
xor
in
jecxz
ret
or
nop
mov
cltd
push
iret
jne
xchg
insb
rorl
bound
roll
and
loop
imul
inc
lret
or
les
adc
mov
pop
shlb
cmp
test
push
xorl
jns
jge
test
jmp
jp
pusha
imul
bswap
cmp
mov
sub
rolb
pop
push
sub
jbe
mov
fstpl
push
jge
sbb
xor
sub
push
sbbl
cmpsl
inc
sub
rcll
jae
mov
push
fnstcw
insb
push
fists
xlat
push
cmp
rorl
sub
inc
jp
adc
cli
sub
dec
inc
out
in
repnz
push
fsubs
push
scas
rorb
adc
xor
sub
in
rorb
ss
movl
pop
sar
popa
addr16
sbb
push
mov
insl
pop
testb
in
enter
xchg
jb
ds
push
mov
fcompl
rorl
adc
scas
dec
xor
mov
movsl
addl
jge
lods
mov
scas
loopne
push
enter
dec
pop
es
scas
push
pusha
pusha
js
mov
mov
rcrb
push
mov
dec
scas
lcall
repnz
fisttpll
lods
fnstenv
mov
jmp
sti
xor
push
bound
shll
fsub
xlat
sub
cmpsl
rorb
dec
push
daa
shrb
dec
lcall
cwtl
loope
pusha
ret
mov
pop
pop
jb
lods
lds
mov
or
ss
mov
mov
popa
add
add
adcb
cmp
cmc
das
lods
push
push
mov
dec
and
mov
mov
mov
cmp
add
cmpsb
inc
daa
xchg
push
xor
add
inc
into
pop
push
in
lods
sub
jecxz
mov
inc
xor
rorb
sub
push
jne
jle
mov
xorl
jg
inc
jmp
mov
xlat
cltd
pop
mov
sbb
xorb
sbb
ja
out
repnz
mov
imul
mov
cmp
sub
dec
mov
lahf
inc
mov
push
sbb
aad
mov
aas
sbb
pop
sbb
sub
arpl
mov
or
add
push
rep
jmp
pop
movsb
fs
rorl
jo
fwait
adc
or
fidivrs
jne
popa
testl
pushf
sbb
popl
or
inc
shrb
call
push
cmp
sbb
popf
inc
jns
stos
inc
mull
icebp
pushf
mov
out
push
push
divl
jb
jp
lgs
sbb
xchg
pop
loope
mul
stc
arpl
nop
ljmp
mov
ret
ja
insl
mov
jecxz
sub
inc
stc
push
sub
in
fidivl
imul
mov
add
mov
pop
add
sbb
aas
jne
pushf
je
mov
lret
sub
shrb
xor
cmp
imul
jecxz
shlb
inc
mov
xchg
inc
daa
jns
in
shr
jb,pt
adc
jmp
cmp
and
pushf
pop
and
and
scas
pusha
ljmp
push
mov
mov
pop
es
fwait
outsb
int
sarl
ficoms
mov
repz
jne
adc
xor
jl
fnstenv
add
add
push
je
cltd
jb
inc
xchg
mov
and
xchg
lods
and
fisubrl
repz
shlb
dec
shlb
jne
lock
iret
je
pop
jmp
popf
push
rorb
inc
loop
mov
lret
sub
xor
dec
and
incb
in
in
xchg
pushf
pop
or
out
pop
call
leave
shlb
outsb
cs
and
jmp
adc
mov
pop
fmul
push
jae
and
scas
mov
jb
aam
xor
xchg
or
push
cs
dec
xchg
cmpsb
sub
xor
xchg
push
mov
sti
scas
mov
ret
push
cmc
push
into
mov
push
pop
dec
add
jl
sbb
pop
sub
sahf
xor
jg
inc
xlat
pop
xchg
jnp
not
cli
sbb
rcrl
pop
push
xchg
and
negb
loope
mov
cmc
in
int
inc
dec
ffree
loopne
aaa
movsl
in
sbb
test
sub
test
out
or
xchg
ds
xor
push
imul
mov
mov
jp
adc
sbb
aam
xchg
cmp
cld
xchg
fcomip
incl
mov
fcomip
sub
or
pop
inc
or
movsb
and
mov
leave
in
or
sbb
lea
cmp
and
fsts
aaa
das
into
jo
jo
jmp
and
inc
subb
loope
insb
pushf
fsubs
cmp
jns
xchg
dec
cltd
jge
out
addr16
lahf
mov
pop
ds
js
mov
call
cmp
mov
sbb
push
dec
jnp
nop
lret
push
lahf
fwait
lods
and
and
loopne
js
lock
jp
cmp
test
sub
xchg
loopne
jnp
pusha
hlt
mov
pushf
orl
lds
les
ss
sbb
inc
xchg
sarl
xor
inc
cmp
icebp
movsb
xor
ret
lcall
loope
rcrl
push
xor
lahf
aam
lret
add
testl
adc
icebp
sbb
add
icebp
mov
mov
inc
xchg
out
mov
ret
stos
mov
pop
push
pushf
mov
sarl
push
pop
das
inc
fcoms
mov
fstps
cli
clc
ficoml
aas
aad
aas
cmpsl
lds
sub
xchg
or
inc
fs
dec
adc
jl
loope
jbe
ret
sbb
mov
cmc
or
inc
sub
jno
ss
fstl
pop
jb
add
inc
outsl
incl
xor
shrl
jp
lea
lret
filds
mov
ljmp
icebp
stc
sub
aad
arpl
jmp
mov
push
mov
push
fisttpll
cld
loop
test
orl
push
les
mov
hlt
mov
mov
cmpsl
lods
xchg
stc
es
xchg
jno
jg
lods
clc
or
shrb
jne
mov
outsl
fidivs
insl
pop
or
enter
mov
jle
push
jp
jecxz
sbb
pop
mov
rcr
xchg
scas
xor
xchg
adc
sbbb
xor
jle
cmp
xchg
jae
cmp
repz
test
in
xchg
xor
fistpl
jecxz
pop
push
test
mov
cmovne
pusha
push
fs
pop
mov
jb
cmp
cmp
push
std
fldcw
fnstcw
xor
das
int
loop
push
xor
mov
cs
push
insb
lahf
sbb
inc
mov
int
lods
push
xchg
rorb
add
mov
cmp
pusha
das
adc
ret
hlt
adc
gs
movsl
sub
xchg
clc
into
mov
addr16
adc
int
cmp
lods
dec
cs
push
cmp
dec
insl
ljmp
ret
fcomip
ficompl
mov
int3
in
sbb
loope
jmp
cmc
mov
loopne
push
shll
aaa
mov
pop
mov
pop
adc
mov
xor
dec
xor
dec
imul
xchg
adc
mov
mov
das
mov
and
pop
out
lahf
jae
adc
aaa
jae,pn
jmp
adc
lahf
mov
ja
into
sub
repz
ret
and
mov
in
imul
cmc
outsb
pop
sbb
das
xor
sub
dec
ret
iret
xchg
pop
in
mov
out
sub
mov
jns
mov
sub
push
xchg
or
xchg
std
push
mov
sti
dec
mov
push
mov
repnz
adc
cmpsb
cmp
inc
and
das
mov
jmp
or
lret
cmc
push
xor
sbb
add
repz
incb
xchg
add
insb
jp
xchg
ljmp
loop
or
mov
inc
dec
or
xor
data16
cmp
divb
adc
push
mov
fidivrl
mov
jns
pop
cmp
inc
jns
outsb
pop
loopne
pop
inc
jae
add
lock
mov
fimuls
imull
push
pusha
sbb
lods
lret
lock
add
mov
mov
xchg
loope
je
xchg
push
ror
jl
add
ljmp
and
jae
movsl
push
cmc
sahf
lret
push
fidivrl
shl
jl
cmp
enter
outsb
mov
shll
fsts
adc
dec
xchg
inc
stos
xor
iret
imul
iret
popa
jle
mov
xchg
bswap
aad
cmp
scas
enter
test
xor
in
mov
mov
mov
pushf
jge
movsl
das
push
xchg
jg
or
cmp
subl
cmpsb
icebp
add
xchg
insl
mov
xlat
xor
inc
cltd
cmp
enter
xchg
sbb
fmull
sbb
mov
iret
sub
test
sub
nop
rol
mov
lcallw
sbb
and
sub
gs
movsl
lret
pop
arpl
mov
shll
mov
loope
add
stc
lret
mov
xchg
insb
rorl
pop
arpl
lret
rcrb
mov
gs
jg
sub
outsb
jnp
into
mov
ret
mov
add
fucomi
movsb
inc
push
pushf
psrld
out
stc
xchg
loope
dec
pop
stos
lcall
int
sub
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
inc
sub
mov
stc
loope
pop
inc
lds
daa
cmp
popf
sub
jmp
imull
packsswb
sbb
test
call
cld
cmp
pop
mov
xchg
js
xchg
popf
inc
arpl
stos
sahf
adc
aaa
xor
cmp
push
mov
mov
add
pop
cmpsb
loop
or
mov
and
push
sub
ret
sbb
icebp
push
in
mov
lret
and
lods
lret
lahf
shrl
mov
out
mov
decl
les
cmp
push
imul
psadbw
shrl
pusha
xchg
mov
int
mov
dec
out
mov
dec
testl
fs
fwait
popf
clc
add
mov
cld
mov
sbb
or
jecxz
gs
jge
sbb
inc
dec
add
cmp
fiadds
push
inc
pushf
out
pop
jg
xor
pop
add
in
xor
es
xor
outsl
pop
jno
mov
jmp
push
xor
loope
xor
ret
xor
clc
and
fs
sbb
and
push
xchg
shlb
shll
bound
jecxz
mov
cmp
aaa
sub
sub
icebp
or
and
xor
mov
cltd
and
aad
fmuls
mov
or
push
adc
mov
shrb
and
mov
fldl
notl
test
out
jg
adc
pop
dec
shlb
je
lock
xor
iret
add
mov
sub
cld
pop
jns
sbb
dec
pop
mov
jmp
out
fwait
lcall
adc
iret
sbb
mov
je
test
outsb
and
lcall
sbb
scas
leave
aam
push
dec
in
add
outsl
imul
pop
fld
enter
insb
aad
push
in
call
stos
cmpsb
cmovge
jle
fists
dec
shll
or
cli
aad
lahf
and
ss
ljmp
lds
jecxz
sbb
mov
pop
mov
addr16
adc
out
ds
add
dec
xchg
nop
push
xor
test
sub
inc
push
xor
out
lods
repz
out
mov
xlat
mov
xor
ret
jnp
and
lret
push
dec
movl
std
aas
in
jmp
and
or
inc
ds
or
push
pop
scas
dec
icebp
lcall
in
sub
bound
stc
in
adc
cmp
and
xchg
pop
int
sahf
adc
cmp
jge
fcmovnu
add
push
xorl
inc
mov
pop
jb
out
sub
into
cmp
jge
sahf
mov
fcmovnb
into
in
loopne
sbb
les
btr
adc
pop
sarb
add
mov
aaa
sub
dec
xchg
mov
stos
sub
std
test
in
lds
fdivrp
cmpl
out
out
outsb
lcall
add
mov
test
mov
cmpsb
cwtl
movsb
and
notb
mov
jecxz
insl
jle
mov
mov
mov
mov
or
jbe
leave
hlt
mov
xlat
jae
and
call
shll
mov
cmc
fsub
mov
inc
add
mov
and
sbb
cli
xchg
adc
jmp
cmp
fisubrl
pop
gs
addr16
push
leave
out
divb
jecxz
lods
dec
hlt
cmp
addr16
sub
push
and
pop
push
cli
jl
pop
jg
or
dec
arpl
ljmp
mov
dec
inc
incl
pop
lds
sub
jns
into
sub
add
inc
xor
lret
pop
pop
out
mov
cmp
or
xorb
push
jmp
and
push
inc
and
xor
mov
mov
jb
jns
mov
jnp
shrb
sbb
inc
jg
inc
mov
cmp
lods
aam
push
mov
push
mov
fisubl
jo
jne
aad
cmp
loope
daa
scas
jae
pushl
mov
sbb
shll
nop
push
ret
adc
ljmp
les
add
or
push
in
mov
lock
push
rcll
xchg
call
jl
cld
or
in
aaa
xchg
sub
enter
jecxz
inc
mov
loope
ljmp
lods
mov
rcl
xchg
lock
cs
punpckhwd
pop
inc
adc
cld
loope
or
in
adc
lods
fistps
pop
dec
dec
add
xor
enter
repz
adc
les
cmpl
jg
test
popa
fcomps
cltd
imul
add
push
xor
loope
jmp
arpl
movsl
out
pop
sti
mov
orb
xchg
negb
inc
jg
xlat
mov
sbb
test
aam
repz
jae
daa
icebp
cmpsb
lds
shlb
xorl
int
xchg
int
mov
or
or
pop
dec
aad
stos
jne
inc
xchg
outsl
mov
stos
icebp
call
jg
push
clc
cmp
pop
fldt
lcall
jmp
pusha
jnp
int
mov
mov
fldl
sub
cli
mov
push
les
jp
mov
jle
divl
ret
imul
sbb
lret
inc
add
dec
adc
inc
sub
scas
out
scas
push
mov
aad
addl
add
js
pushf
sarb
jne
mov
push
fdiv
cli
out
insl
test
cli
jle
push
add
in
xor
cmp
out
bound
aaa
inc
lcall
push
jmp
jg
add
rorl
jbe
pop
or
mov
push
fnstsw
inc
fstps
xchg
fbstp
cwtl
mov
stos
sbb
mov
aas
dec
fwait
jns
imul
jg
xchg
call
xor
inc
repnz
add
or
jns
in
stc
sbb
adc
mov
std
andl
jle
inc
push
push
xchg
repz
sbb
stos
jnp
dec
push
into
inc
inc
aad
dec
ret
bound
mov
mov
mov
les
fs
mov
xchg
xlat
stc
sub
mov
out
out
push
cmp
shl
or
inc
sbb
mov
loope
enter
jbe
notl
out
cmp
cmp
aad
xor
xchg
in
lret
adcb
xor
scas
loop
test
xchg
sub
pop
mov
cmpsl
imul
push
stc
js
sub
inc
popl
testb
das
adc
and
sub
cmpsl
cmp
inc
out
lcall
loope
lcall
inc
adc
call
lcall
lods
jb
enter
fwait
sarl
sub
push
jle
jne
test
push
stc
sub
int3
cld
or
inc
xchg
or
outsb
daa
pop
dec
int
push
jne
pushf
loop
xchg
jle
fcompl
pop
jmp
push
push
js
adc
rcll
in
aaa
rcrb
cmp
fs
pop
xor
xor
pop
test
fucomp
xor
subl
iret
mov
into
gs
and
rol
mov
and
cmpsb
out
and
jle
negb
sub
stos
push
mov
sub
jl
jb
inc
jns
rcrl
jne
mov
sub
mov
sbb
pop
int3
fistpll
xchg
mov
gs
inc
inc
jb
in
jmp
js
std
xlat
popa
pop
add
pop
pop
jmp
das
inc
push
test
sub
push
stos
jae
adc
jne
dec
or
fucomp
call
jle
dec
add
mov
xor
or
mov
mov
xchg
aad
cmp
mov
push
cmp
in
call
sbb
mov
xorl
sbb
cld
lahf
das
pop
and
inc
icebp
sub
pop
fstpl
sub
adc
xchg
fidivl
call
inc
sbb
out
cmc
adc
ljmp
push
inc
mov
dec
loopne
mov
es
scas
sbb
jno
stos
mov
jno
rcll
jmp
not
push
in
mov
negb
pop
pop
in
icebp
adc
mov
popa
cmp
and
arpl
mov
jnp
push
add
sbb
stc
loop
sarl
mov
push
pop
sub
mov
mov
cmpsb
xor
jnp
cltd
testl
jbe
mov
push
iret
inc
loope
scas
fstpl
push
add
ret
lss
clc
xchg
out
std
inc
sbb
cmp
les
pushf
push
mov
cmp
test
sbb
repz
shll
sahf
out
mov
cmp
in
jb
pusha
add
imul
in
add
inc
inc
add
or
in
cmovg
push
inc
xchg
rcll
mov
lods
stos
pushf
dec
or
push
push
xor
mov
std
mov
cmp
or
sbb
or
dec
or
repz
mov
fbstp
xchg
imul
sbb
push
ret
jle
stc
push
cld
loope
into
out
lods
and
aad
in
movsl
mov
mov
and
scas
and
fs
fiaddl
push
out
inc
ss
mov
pop
add
pop
int3
call
add
xor
xor
scas
mov
inc
mov
jbe
out
mov
or
stos
mov
sub
leave
pushf
fiaddl
sbb
shll
repz
jno
add
out
pop
mov
push
cmc
ja
imul
adc
push
lcall
out
inc
popf
scas
or
pop
scas
bound
je
cmc
sbb
push
negb
mov
rcl
adc
addr16
in
jno
mov
or
inc
fwait
xchg
cmpsb
add
daa
xchg
lods
imul
adc
dec
stos
sti
lret
into
mov
push
mov
fimuls
sti
sbb
or
lods
nop
pushf
arpl
in
out
lahf
xchg
int3
pop
out
inc
cltd
inc
data16
dec
mov
insb
js
pop
negb
adc
shl
aas
push
dec
gs
cld
mov
cmpsl
inc
mov
mov
and
xor
dec
mov
out
mov
test
sub
movsb
mov
out
iret
ret
push
xchg
data16
cltd
mov
xor
aad
pop
cmpsb
pop
sbb
pop
repz
and
cwtl
jmp
pop
mov
loope
ret
mov
xor
xor
mov
outsb
push
js
clc
popf
jno
out
test
xor
jl
mov
sarb
and
dec
mov
cmc
or
mov
aaa
cwtl
mov
sbb
scas
and
cmp
gs
loope
cmpsb
cmpsb
mov
insl
sar
je
data16
out
xor
nop
movsl
xchg
mov
addr16
subb
outsl
das
cltd
push
sub
pop
pop
arpl
pop
xchg
lret
pop
inc
mov
lock
jae
and
xor
or
test
into
int3
xor
enter
dec
fs
pop
ret
icebp
loop
aad
rcrl
sbb
mov
pop
jle
inc
daa
test
jmp
sub
mov
fcomps
xchg
ret
add
jo
stos
fwait
out
cmovo
faddp
cli
and
fistpll
sahf
or
in
xchg
xor
fmull
sbb
iret
sub
bound
mov
not
or
std
leave
inc
mov
fimuls
rcrb
fcoml
sub
xorb
jae
jp
ficoml
xchg
jle
lret
jmp
inc
inc
js
adc
sub
push
or
push
fldenv
nop
movsb
sti
mov
clc
mov
sar
add
stc
jno
cmp
fcoms
aaa
adc
mov
pop
aaa
das
adc
ret
addr16
add
sub
imul
hlt
shr
mov
cmp
xchg
add
push
mov
dec
sbb
xchg
sbb
movsl
jp
jno
les
mov
pop
pop
push
push
lret
fists
or
arpl
scas
push
lahf
cwtl
adc
fisubs
lret
je
outsl
call
shl
xchg
jae
test
pop
push
xchg
inc
mov
mov
add
add
push
pusha
stos
xor
pop
sub
pop
movb
leave
xor
push
and
pop
pop
push
cltd
sahf
sub
data16
subb
aam
call
mov
call
jne
movl
mov
mov
arpl
dec
adc
inc
ds
lock
fistpll
or
pop
mov
xor
add
dec
sarb
leave
jns
pop
in
fwait
clc
dec
and
add
mov
inc
mov
add
add
adc
cmp
xchg
xorl
push
adc
pop
lods
inc
pusha
xchg
cld
incl
fidivl
sbb
add
or
adc
lret
sub
cmc
jp
jnp
inc
test
mov
xchg
lret
aam
cmpsb
lahf
cmp
xchg
or
dec
cwtl
ljmp
mov
adc
push
push
sbb
mov
daa
sbb
cli
push
imul
add
push
xor
pop
cmp
pop
pop
loop
and
pop
ds
add
call
out
stos
adc
cmp
insb
lock
daa
call
mov
xchg
je
cmp
or
ss
pop
out
in
test
sbb
mov
cmc
sbb
adc
call
les
decb
xchg
pushf
sbb
xchg
fidivl
add
pop
push
in
movb
xchg
pop
lret
xchg
in
insl
jns
out
in
push
loopne
jl
xchg
mov
inc
jno
outsb
adc
dec
sti
int3
dec
int3
insl
es
mov
in
es
shlb
and
cltd
push
jge
in
mov
mov
push
and
aad
inc
out
shrl
jg
xlat
add
dec
addr16
dec
push
pusha
ljmp
pop
pop
push
xor
ret
mov
mov
dec
out
cmp
jp
xor
outsl
xlat
outsl
das
ja
adc
cli
cltd
out
frstor
mov
mov
adc
or
in
aas
scas
sbb
frstor
push
pop
dec
decb
fs
stos
enter
mov
mov
mov
mov
pop
adc
cmp
mov
enter
aas
fisubs
push
xlat
and
rcrb
cmpl
inc
ljmp
jnp
frstor
xor
jo
mov
test
scas
inc
aad
xlat
mov
pop
or
ds
subl
push
inc
imul
lock
fs
add
cmp
fsubl
xor
mov
aaa
or
jno
push
add
jo
cmp
dec
cmp
lret
dec
out
pop
mov
cmp
or
hlt
fistpl
sbb
mov
and
sarb
cli
test
or
add
push
xchg
cmc
bswap
jecxz
aam
icebp
leave
pop
in
mov
or
hlt
adc
movsl
das
std
mov
mov
jo
sbb
jge
pop
fiaddl
mov
ljmp
xor
sub
repz
sub
test
lds
mov
mov
jo
out
jge
mov
jecxz
mov
adcl
pushf
push
mov
inc
popf
sub
jl
sub
insl
and
or
movsl
adc
push
gs
jb
and
sub
pop
lcall
sub
shll
out
adc
imul
loopne
mov
mov
lds
add
icebp
xchg
aas
cmpsl
jmp
stos
adc
rcrl
out
out
dec
mov
mov
jbe
cmp
pop
mov
pushf
outsb
call
fmull
jns
jne
fiadds
nop
pop
pushf
and
or
loope
loopne
mov
xchg
sub
iret
in
sub
push
int
dec
sub
sarl
and
aas
or
sti
xor
sub
pop
icebp
cltd
jl
outsb
nop
nop
adc
rorl
cmpsb
jecxz
jge
rcr
addr16
sub
out
sub
jns
mov
call
jb
loop
mov
es
stc
mov
daa
adc
mov
lcall
out
popa
sub
jne
aas
sub
fstl
imul
ss
xchg
sub
inc
pop
xchg
lret
repnz
inc
test
or
dec
inc
lcall
and
sub
push
and
adcl
insl
mov
imul
xor
setle
pusha
cli
lahf
aas
cmp
cmc
in
push
cmp
fstpt
fadd
hlt
adc
andl
dec
pop
int
mov
outsl
mov
lods
xchg
not
gs
add
repz
push
in
sbb
inc
sbb
jecxz
bound
inc
outsb
fsubs
cmc
jns
xor
paddd
xchg
add
movsl
mov
insl
adc
inc
cmp
xchg
and
push
mov
icebp
imul
out
push
sti
mov
outsb
lahf
push
xor
sub
je
clc
sub
mov
stc
sub
cmp
xchg
xchg
test
inc
div
inc
popf
shl
mov
lahf
inc
sbb
pop
cmpsb
mov
xor
int3
sub
mov
arpl
std
adc
sub
push
mov
lcall
mov
xor
ror
mov
jge
movsb
mov
adc
aad
pop
cmp
inc
jno
aas
pusha
mov
test
shlb
push
std
push
sbb
cltd
stos
orl
or
sbb
lods
push
loopne
sbb
push
or
and
and
and
and
loop
pop
push
imul
popa
fildl
lret
mov
lods
into
lock
out
cwtl
loope
push
pop
jbe
adc
mov
mov
xor
mov
pop
arpl
les
sub
rolb
lret
in
adc
fs
mov
movsb
ret
jo
pop
and
cmp
or
cli
stc
xchg
cwtl
test
jmp
idiv
adc
jns
sbb
stos
fucomp
xlat
and
dec
push
loop
lret
loopne
imul
dec
pop
push
inc
push
xor
movsl
jecxz
movsb
stc
and
mov
cmc
imul
pop
lods
cli
movsl
rcr
call
out
pop
mov
jle
aaa
leave
xor
int3
mov
inc
and
xor
cld
mov
push
gs
xchg
aaa
dec
mov
fs
daa
es
stos
sub
cmc
call
cltd
gs
pop
dec
inc
out
testl
movsl
ljmp
fimull
pop
iret
mov
int3
cmc
int
int
into
push
adc
push
adc
mov
jns
sahf
insb
loop
cmpb
add
cmpsb
addl
out
dec
out
in
sub
test
clc
popa
in
or
sarb
sbb
mov
push
push
outsl
push
push
fcmovnb
jo
adc
push
cmpsl
out
aas
cmpsb
aad
pop
cmpsb
pop
add
adc
mov
pushf
mov
lds
cmp
hlt
jg
mov
scas
cmp
or
mov
imul
ret
shlb
fsubrp
xchg
xchg
call
jae
adc
fcomps
sbb
sahf
xor
xchg
dec
ret
mov
aaa
mov
push
push
popa
add
jg
mov
incb
xor
sti
sub
lods
pop
xor
or
fistpl
testb
lds
mov
xchg
nop
or
insb
mov
mov
lret
cmp
ja
ret
xchg
or
mull
sbb
xor
insl
sbb
cli
rolb
sub
inc
jns
push
sub
lea
cmp
fisttpll
mov
mov
sbb
xchg
in
cmpsl
nop
pop
cmp
scas
xor
push
jecxz
test
outsl
or
add
adc
dec
mov
test
inc
cmp
fcmovbe
push
cmpsl
nop
inc
pushf
out
xorb
mov
inc
sbb
mov
loopne
nop
and
mov
lret
cmp
cmpsb
adc
sbb
jmp
pop
fisubrs
jp
xchg
fdivl
sbbl
je
test
orl
hlt
fwait
add
xchg
xchg
stc
mov
inc
test
push
cmp
dec
jge
leave
icebp
pmaxub
xchg
lods
insb
push
cmp
nop
pusha
leave
andl
dec
mov
stos
dec
test
out
sarb
es
in
imul
cmp
std
test
push
pop
jmp
adc
mov
inc
insl
ret
sahf
dec
add
dec
dec
jb
cmp
divl
add
sub
adc
das
xchg
stos
out
mov
mov
push
mov
shlb
jmp
mov
mov
mulb
mov
in
dec
aad
lods
pop
xchg
in
icebp
jge
add
push
cli
pop
sbb
or
lock
dec
jecxz
adc
mov
es
sbb
out
jp
rcr
nop
int3
mov
mov
adc
sbb
dec
imul
adc
scas
in
imul
int3
lahf
or
fsqrt
inc
and
ja
aam
es
lret
aas
into
dec
lds
inc
add
scas
lods
repz
cli
popa
test
sub
mov
xchg
xchg
xchg
or
add
nop
lods
icebp
or
or
shll
ja
pusha
sub
je
lahf
les
inc
inc
loope
ds
or
cmp
pop
mov
ss
push
or
cli
mov
loopne
mov
sub
add
lds
xor
loopne
xchg
sbb
mov
push
repnz
fs
add
shrl
lret
push
rolb
xchg
or
cmp
xor
fsubrl
mov
xor
mov
cwtl
sub
and
jns
add
stos
dec
jae
ja
faddl
inc
addr16
cmp
cltd
sub
dec
inc
dec
ret
jne
dec
data16
repz
jo
test
jb
xchg
lods
xor
sahf
cmp
cmpsl
pop
lods
arpl
int
xor
cmp
test
scas
addr16
pop
pop
and
pushf
mov
cld
movsl
mov
mov
push
aas
ss
call
jb
pop
push
fimull
je
out
jmp
xlat
iret
insl
add
xchg
repz
lods
pop
arpl
jl
mov
ljmp
rcll
cmc
jge
in
xor
pop
sbb
pop
xchg
mov
pop
aaa
dec
pop
mov
in
mull
pusha
push
or
sbb
xor
int
sub
push
nop
push
inc
push
into
jb
jne
test
sar
data16
mov
ljmp
movsl
dec
inc
inc
jae
cs
popf
or
or
pop
pop
sti
push
push
js
stc
cmp
mov
and
movsl
ss
mov
inc
inc
jnp
xchg
xor
fstps
ret
mov
mov
and
pop
fidivs
mov
or
adc
int3
push
test
mov
mov
and
sti
inc
xchg
jne
add
dec
sbb
mov
jnp
and
fs
xor
insb
push
mov
cmp
mov
dec
jns
outsb
add
int
scas
sarb
rolb
jne
aad
or
pop
add
adc
cmpsb
js
into
sti
cmp
pop
pop
imul
push
lret
popf
sbb
nop
xor
imul
jle
inc
int
sub
cmpsl
adc
xor
cmp
mov
mov
rcll
fsubr
add
push
test
loope
mov
pop
es
push
mov
call
xorb
call
cmc
inc
add
dec
stc
aam
mov
mov
in
pop
popf
jmp
cmc
jmp
dec
adc
sub
ds
test
sahf
pushl
fcoml
out
or
sbb
sub
sub
mov
xchg
mov
mov
pop
lea
and
lahf
pop
adc
adc
out
out
xor
mov
add
or
lret
movsb
adc
movl
daa
adc
or
push
sbb
ret
dec
sbb
and
and
pop
xchg
insb
scas
rolb
cmp
adc
sub
mov
mov
in
jno
adc
in
mov
jmp
add
xchg
and
lahf
adc
mov
loope
or
daa
stos
jnp
stc
stos
loopne
and
rcrl
pop
sahf
lret
pop
movsl
insb
dec
push
fmuls
push
mov
adc
scas
and
in
or
dec
add
div
mov
stos
dec
push
xor
sbb
push
add
xor
fsubrl
jecxz
adc
adc
sbb
repz
xor
ret
imul
dec
mov
pop
mov
xor
inc
sahf
in
nop
jle
sbb
loopne
sti
fiaddl
and
imul
negb
jno
mov
nop
xor
and
cmp
adc
cwtl
jl
pop
js
lods
xchg
es
cmpsb
xor
sahf
andb
mov
mov
mov
inc
insb
sahf
sahf
call
push
or
insb
cmp
dec
pop
xchg
lock
lds
insb
hlt
inc
int
fcmovb
push
fidivrl
xor
addr16
repz
movsb
cmp
and
testb
sbb
xchg
xchg
imul
inc
lds
or
clc
or
fildl
sbb
inc
jno
cwtl
mov
inc
and
xor
mov
jae
fs
lret
fnstsw
fcompl
mov
mov
imul
fimuls
xchg
mov
and
and
cmc
xchg
imul
jae
jbe
jnp
dec
pushf
cli
jns
jo
cmp
and
dec
sub
scas
mov
dec
or
inc
clc
sar
sub
ljmp
inc
out
xchg
stos
nop
sbb
xchg
add
cld
scas
xchg
xchg
and
inc
push
into
jp
mov
cmp
ja
mov
ret
cmp
xchg
arpl
pop
fadds
loop
out
xchg
sti
mov
shll
add
ret
adc
add
enter
setns
ljmp
dec
insb
dec
hlt
addl
sbb
and
fmul
call
and
enter
xchg
cld
ljmp
sub
mov
sub
call
add
imul
lea
int3
push
jbe
jecxz
mov
es
cmp
mov
xor
les
pop
pop
int3
mov
dec
sti
add
mov
sub
and
fdiv
mov
pop
adc
inc
frstor
stmxcsr
hlt
aam
fcmovu
adc
sbb
mov
mulb
std
in
pfmin
jge
cld
xor
fcomi
mov
ret
mov
repnz
sti
jbe
mov
sub
repnz
mov
dec
add
add
test
loopne
or
int
adc
movsb
cmc
popa
sti
pop
test
cld
dec
cmc
cmpsl
pop
dec
lods
scas
mov
or
testb
xor
arpl
aas
xchg
icebp
mov
fwait
lea
add
and
add
or
lahf
mov
cmp
xchg
pop
cmc
bound
jb
cmp
out
insb
pusha
stos
test
aam
jg
cmp
sbb
sbb
nop
fstpt
lcall
xor
faddl
jne
and
push
hlt
jecxz
outsb
push
out
mov
scas
cmp
pop
decl
dec
shlb
outsb
fidivs
dec
cmp
in
mov
push
js
outsb
push
popa
loopne
rcl
sub
pushf
shlb
adc
push
push
cmc
cmp
jmp
or
fdiv
jns
push
pushf
mov
dec
xor
pusha
cmp
cmp
in
frstor
push
xchg
in
sub
out
cmc
push
mov
lods
das
xchg
divl
jae
or
sbb
sub
sub
ljmp
mov
int3
dec
sbb
cmp
cmp
cwtl
push
or
cmpsb
dec
in
pop
sbb
icebp
push
push
pop
and
ficoms
mov
into
out
jle
mov
and
mov
jle
or
cmp
fdivp
fnsave
mov
jl
sub
dec
sbb
xor
add
mov
mov
neg
js
popf
insl
enter
mov
mov
xchg
xchg
les
sarl
mov
xor
sub
rorl
fidivrs
movsl
dec
loope
jae
cld
gs
mov
mov
loop
loopne
pop
pop
xchg
sub
test
or
adc
mov
stos
out
aaa
nop
out
inc
es
out
loope
xchg
sub
mov
lods
aad
in
lret
ss
jae
je
add
dec
jg
out
dec
sub
xchg
pop
outsb
sub
pop
push
jno
dec
lcall
jb
in
dec
popl
mov
int3
addr16
outsb
jecxz
xchg
movsb
shll
xchg
push
pop
sbb
xor
xlat
xor
xor
mov
mov
inc
and
lret
imul
scas
cmc
inc
jle
xor
std
sbb
pop
mov
stos
xor
adc
mov
das
cmp
shr
cmpl
push
divb
mov
aaa
mov
inc
ret
js
dec
jae
pop
dec
xchg
and
dec
adc
push
mov
sbb
xchg
inc
stos
aas
cwtl
mov
stos
sub
and
insb
sub
dec
js
mov
adc
jno
in
sbb
mov
inc
leave
rcr
sahf
xor
sbb
dec
inc
int3
mov
inc
fsubrl
ret
sti
xor
jp
stc
mov
aam
xchg
out
cmpl
cmpsb
add
popf
in
jae,pn
push
clc
rorb
jb
push
std
xchg
jb
daa
push
sub
push
cmpsl
test
insb
pop
push
aad
xchg
sub
dec
stos
cmp
add
stos
push
out
add
dec
nop
nop
bound
ss
jecxz
fwait
jns
fidivl
in
ja
cmp
lods
mov
adc
es
lret
loope
mov
push
pop
psllw
sbb
push
ret
sub
mov
addr16
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
inc
addb
enter
mov
lahf
mov
mov
pop
daa
cld
roll
mov
inc
mov
sub
int3
inc
inc
mov
mov
sti
mov
jbe
ret
or
pushf
adc
pushf
push
xchg
xchg
outsb
xor
push
cmp
sub
jmp
sub
inc
xchg
mov
mov
iret
mov
and
inc
or
outsl
popa
jbe
lcall
push
mov
and
pushf
addr16
test
push
je
dec
jge
xor
stos
les
sub
lcall
adc
sbb
push
jl
outsb
jns
cmpsb
jg
dec
test
jbe
inc
xchg
xchg
dec
scas
jb
and
push
and
jmp
fistpl
jl
sub
sbb
pushf
popa
fisubl
push
jbe
sub
cltd
pop
xchg
push
xchg
cmpsl
cltd
adc
jg
inc
lock
inc
sub
in
push
inc
dec
ljmp
rcrl
xchg
mov
cmp
jno
ja
popa
and
mov
jb
xor
xchg
pop
scas
in
or
jns
cmp
dec
sbb
sbb
cmp
push
ljmp
es
push
mov
loope
repnz
fistpl
cmpsb
das
jmp
xchg
push
sti
movsb
cli
lret
dec
inc
xlat
mov
jns
dec
aam
in
jne
adc
and
or
out
jp
cmpsb
jmp
lahf
sahf
jmp
les
jb
test
push
into
fisubl
mov
js
pop
inc
jl,pn
test
mov
push
push
lahf
hlt
add
lods
aas
mov
jg
sbb
fs
xlat
imul
sbbb
jp
sahf
or
mov
inc
pop
lea
test
push
dec
push
jle
mov
popa
stc
pop
cmp
int3
bound
xchg
fs
jmp
sub
fwait
leave
lcall
inc
and
cltd
sub
jbe
mov
adcb
add
stc
or
sbb
int3
nop
mov
push
push
cmp
iret
mov
das
adc
std
pop
std
clc
outsb
pop
xchg
sub
fisttpl
add
jl
add
aas
or
add
pop
inc
sub
push
jle
fists
mov
xchg
and
ror
mov
or
jmp
or
xchg
dec
aaa
push
cmp
mov
lret
sahf
test
cmp
lods
mov
fwait
sbb
push
fdiv
ret
jnp
dec
mov
inc
xchg
outsb
cmp
cmpsl
rorb
mov
imul
out
push
lahf
lret
test
gs
mov
adc
ss
adc
data16
dec
mov
adc
sub
or
add
sub
or
movsb
push
hlt
inc
mov
adc
ss
inc
mov
into
sahf
inc
ret
mov
test
divl
scas
mov
incl
les
lcall
test
or
test
dec
xor
mov
test
lret
adc
inc
testl
push
inc
push
inc
iret
int
xor
pop
ljmp
xor
imul
mov
cld
adc
push
aad
mov
sahf
add
lret
lcallw
xchg
add
repnz
test
shrb
aas
push
inc
notl
sbb
out
js
movl
jmp
mov
jo
pop
in
ja
mov
adc
stos
push
fnsave
roll
movsl
jle
and
mov
xor
or
xor
mov
sub
popa
leave
sbb
fsubs
incl
jp
rorl
outsl
flds
cmp
push
add
mov
cmp
ret
mov
jbe
adc
in
movsb
pop
ffree
movsl
mov
fildll
mov
scas
mov
iret
ja
mov
adc
add
pusha
insl
loop
fs
iret
mov
cmpsb
daa
loopne
or
btc
call
jno
mov
sub
dec
xor
pop
xchg
fwait
push
int
mov
in
push
sub
dec
or
mov
icebp
data16
fldenv
data16
mov
inc
scas
cli
or
in
pop
cmp
enter
xor
ds
fstpt
or
mov
popf
outsb
xorb
or
jecxz
mov
mov
pop
gs
daa
mov
mov
sub
xchg
inc
jecxz
int
sbb
dec
or
mov
add
sub
ljmp
jnp
out
sub
in
in
popa
sbb
data16
fstps
mov
jmp
mov
jl
mov
add
cmc
mov
ret
lahf
ret
cmp
ficoml
mov
ficomps
rorl
sti
jge
ds
in
mov
add
aaa
scas
cmp
les
fs
mov
clc
les
inc
sub
mov
test
stos
enter
fcomp
pop
pushf
rorl
pop
or
add
or
xor
je
cmpsb
xchg
pop
add
mov
mov
sahf
or
mov
sbb
add
mov
daa
sti
ret
mov
sbb
xlat
mov
insl
das
repnz
mov
xchg
sub
add
call
out
hlt
adc
iret
daa
popf
repnz
add
push
xor
push
mov
add
int
lods
or
ror
and
lods
hlt
aam
fs
ret
add
aaa
adc
jae
pop
push
pushf
dec
repnz
fldt
cli
jbe
cli
rcl
xor
aaa
outsl
leave
add
enter
xor
data16
mov
clc
incb
les
xchg
add
ljmp
xor
cmp
jp
cmpl
jae
xchg
cmc
inc
push
mov
in
cmp
into
in
mov
jb
or
mov
lea
adcl
pusha
add
pop
std
add
dec
mov
stos
jns
fcmovb
add
lahf
push
int3
js
sti
or
dec
pushf
shl
mov
push
out
jl
cmpsb
mov
js
or
sti
sub
cmpsb
mov
adc
imull
add
icebp
sub
adc
lret
mov
dec
aam
jbe,pn
push
insl
cmp
test
aas
pop
xchg
roll
scas
push
fwait
test
xchg
jp
pop
bound
jno
std
xchg
dec
adc
enter
pushf
adc
mov
sbb
popa
mov
in
mov
sub
outsb
int
cs
jnp
call
out
scas
andb
in
adc
mov
je
test
sbb
fs
xor
leave
xchg
add
repz
mov
mov
adc
outsl
cld
or
lock
repz
les
ret
inc
ficoms
jle
call
mov
dec
insl
cmp
call
out
dec
cmpsl
testb
jp
dec
sbb
jecxz
jns
adc
add
xchg
pop
lods
xlat
inc
mov
ljmp
fwait
xor
dec
or
cmpb
xchg
fists
cmp
mov
in
xor
push
mov
add
add
push
ret
xchg
adc
test
popf
imul
add
pop
or
cmc
inc
ud0
ljmp
cmp
lret
and
pushf
pop
adc
fdivrs
out
add
or
ja
inc
or
add
push
shr
bound
js
dec
repnz
sbb
dec
or
cmp
xor
fdivl
scas
int3
fistpl
add
cwtl
jp
les
fldl2e
push
les
add
popa
xchg
das
lcall
popf
jae
xchg
xchg
push
xchg
sbb
sub
sbb
jp
push
cwtl
addr16
hlt
test
lods
insb
cmpsb
jmp
mov
setb
in
lock
mov
lods
out
popf
hlt
jo
xor
punpcklbw
pop
arpl
inc
fdivrl
sbb
loop
sub
popa
sub
cmp
mov
jb
inc
addb
xchg
testl
add
ljmp
pushf
mov
mov
lea
fwait
icebp
push
xchg
flds
or
frstor
mov
test
movsl
jecxz
xchg
or
and
jle
mov
pop
pusha
mov
iret
mov
xor
adc
inc
xor
add
outsb
mov
and
mov
add
jg
add
fsubs
call
out
rcrb
sbb
addr16
adc
imul
lds
push
icebp
cli
rolb
sbb
mov
mov
inc
pop
lds
in
iret
push
hlt
jl
inc
inc
cmp
xor
adc
std
imulb
xchg
push
inc
and
inc
bound
jge
int
mov
cmp
jl
sbb
xor
cmp
cmp
inc
adc
insl
adc
xorl
flds
sbb
scas
decl
jg
out
stos
inc
xor
adc
adc
hlt
jns
imul
lahf
fcomps
bound
and
add
sbb
inc
adc
xchg
out
mov
pop
mov
add
cmp
cmp
rep
dec
sbb
clc
cmp
xor
data16
std
and
nop
pop
mov
dec
push
and
fisttpl
inc
mov
gs
xchg
push
jg
sbb
fcmovbe
in
push
sbb
dec
sbb
jmp
pop
gs
lods
adc
mov
fistpll
icebp
jmp
mov
push
clc
clc
sub
mov
and
loopne
pop
mov
lret
jmp
jge
into
jne
mov
mov
popf
lahf
ret
fnsave
out
pop
and
pop
stc
mov
push
inc
cmpsl
repz
ficoml
fnstenv
shlb
mull
sbb
stc
rep
push
sub
sub
in
incl
and
cltd
mov
pop
pop
sbb
lahf
mov
fsubrl
pusha
loope
or
or
mov
dec
inc
dec
fists
push
addb
pop
movsb
or
sub
nop
repz
jbe
fisubl
div
pop
in
mov
out
ss
outsb
mov
adc
sub
xor
dec
daa
pop
lods
fisttpll
push
jle
push
loop
inc
shll
push
dec
mov
cmp
dec
jl
pop
jmp
xlat
sub
sahf
pushf
jno
adc
hlt
leave
mov
nop
movsl
push
hlt
repz
enter
fs
or
push
mov
inc
adcl
rcll
mov
push
inc
int3
and
sbb
scas
push
and
sub
mov
jge
cmpsb
stos
jmp
xchg
pop
js
test
or
xor
mov
loope
insb
dec
push
cld
pop
pop
jmp
repnz
mov
into
xchg
pop
pop
push
mov
dec
aaa
and
xlat
aad
test
mov
jl
das
pop
adc
loop
stos
xchg
fcomip
ret
ss
daa
imul
fadds
outsb
dec
pop
xchg
dec
pop
pop
push
fisubs
mov
inc
outsl
adc
test
xchg
or
add
cli
movsb
jl
mov
xor
fildll
xor
inc
cli
and
mov
mov
cmpsb
in
pusha
or
cmp
add
int3
fisubrl
cwtl
daa
int
xchg
into
dec
cli
cli
sbb
push
or
scas
cmp
cmp
xor
sbb
sti
loope
insl
mov
adc
mov
aad
add
insb
push
mov
scas
fistpl
std
jbe
jecxz
xchg
lods
stc
test
adcl
imul
lcall
mov
movsl
push
add
insl
fwait
stos
jmp
cld
cmp
adc
mov
sbb
repz
out
jae
shr
jl
iret
sub
pop
mov
mov
adc
fmull
xchg
arpl
dec
jg
xor
outsl
mov
fmuls
add
push
jge
in
mov
add
push
jl
loope
sub
adc
clc
xchg
jp
test
pop
rorl
das
fmul
mov
jbe
mov
nop
ja
je
scas
jp
into
pop
and
adc
mov
and
movsb
push
inc
or
xchg
into
xor
mov
aam
hlt
sbb
fcmove
xchg
in
push
sub
cmpsl
lahf
inc
pop
pushf
es
int
add
and
rol
or
or
xchg
loopne
fcmove
loop
xchg
lret
test
xor
cmp
inc
test
and
xchg
jae
push
ja
or
shrb
subl
loopne
in
jno
mov
imul
lret
lahf
jnp
pop
jo
repz
pop
mov
pop
testb
or
shll
cmpsb
mov
add
cmp
pop
dec
out
jge
xchg
jmp
aam
xchg
leave
fisubrs
mov
pusha
jg
cltd
ret
loopne
test
mov
adc
in
notb
leave
mov
js
fstl
imul
loope
repnz
je
in
ret
dec
push
dec
push
sub
mov
aas
mov
pop
sti
adc
rcrl
mov
ret
fsts
mov
ja
nop
loop
jmp
and
sbb
shl
jae
xchg
testl
adc
std
fwait
call
das
out
adc
cmp
fwait
stc
jle
sbb
int3
ja
add
mov
push
mov
mull
mov
cmp
inc
pop
mov
stos
mov
fidivrs
cli
pop
xchg
enter
sbb
lock
push
imul
inc
sarb
sbb
fcmove
adc
int
push
pop
xchg
push
sub
xor
pop
aad
mov
and
xchg
fsts
sbb
movsb
cmp
lods
insb
jno
mov
testb
aam
sub
dec
scas
add
imul
decl
pop
and
mov
xchg
mov
and
mov
lea
xor
aad
cmpsl
in
dec
jne
adc
push
cltd
aas
or
jmp
std
cld
cmp
or
cmpl
push
xor
sbb
stos
xchg
cltd
mov
jb
jb
aam
out
ds
outsl
pop
add
outsb
icebp
out
pop
movsb
push
gs
fildl
pop
xor
pushf
adc
shll
lods
jns
outsb
cmp
or
sbb
pop
jmp
xor
fnstsw
icebp
pop
jb
repz
mov
mov
dec
inc
scas
test
ficomps
inc
lcall
je
pop
loopne
int3
out
inc
push
jmp
mov
jns
and
xchg
dec
mov
cmp
sub
mov
pop
mov
xchg
mov
inc
std
nop
push
inc
xor
je
xchg
insl
cmpl
cmp
sub
js
jge
cmp
fimuls
pop
mov
dec
inc
cmp
adcb
daa
in
mov
jno
cltd
dec
add
pop
and
nop
or
cltd
out
mov
pop
pop
inc
jbe
xchg
ds
cli
xor
push
pop
repz
test
or
mov
arpl
test
lock
lret
jo
pop
dec
xchg
cmp
add
xor
cmp
push
enter
es
imul
mov
lret
int
inc
xor
repnz
loope
mov
decl
mov
add
out
mov
xor
dec
or
cmp
push
pop
sub
cmp
imul
mov
adc
xor
mov
sbbl
lods
mov
mov
xorl
cmp
popa
into
xor
sahf
cmp
cmp
mov
xor
pop
xchg
pusha
xchg
movsl
nop
pop
loopne
pop
dec
int
or
divl
addr16
stos
xchg
adc
jns
sbb
push
inc
mov
inc
jp
pop
push
js
ret
les
or
pusha
clc
mov
das
push
xor
dec
xchg
add
jmp
inc
mov
enter
xchg
inc
std
cld
das
pop
mov
aas
xor
mov
jle
jle
mov
ret
out
outsb
sbb
xor
jae
test
jg
loop
into
adc
push
mov
xchg
pop
loop
pop
jge
or
add
icebp
cmp
nop
cmpsb
arpl
jge
xchg
jp
fidivrs
dec
push
push
or
aam
jnp
sub
in
dec
xchg
sbb
icebp
pop
xor
dec
into
divb
sbb
data16
cmpsb
outsl
sub
arpl
lret
ds
daa
xor
sbb
pop
scas
scas
enter
ja
add
mov
pop
shrb
push
leave
dec
arpl
jmp
dec
cmp
std
mov
sub
das
dec
mov
sub
push
repnz
pop
push
and
out
aas
imul
xor
sti
pusha
dec
cld
in
push
inc
cmp
push
nop
sub
orb
mov
mov
dec
add
mov
out
in
or
push
mov
in
mov
cmp
das
pop
aaa
push
jno
in
xchg
cmp
stos
mov
xchg
jmp
shrb
or
mov
mov
cld
jbe
loope
test
lahf
and
push
and
xchg
je
insb
cld
aam
test
jae
sbbl
mov
inc
shrl
out
and
testl
fldenv
mov
lcall
adc
leave
and
adc
add
jmp
dec
in
add
subb
leave
dec
dec
push
xchg
mov
fists
mov
movsl
push
movsb
jg
pusha
xor
mov
xor
shll
pusha
shll
in
mov
les
jle
ds
addl
sti
pop
out
cld
popa
std
sub
mov
shll
and
sub
cli
inc
sti
mov
or
mov
dec
adc
mov
xorl
gs
pusha
mov
mov
sbb
adc
out
ja
mov
cmp
jbe
fdivl
out
adc
arpl
add
aas
push
dec
jne
out
inc
jg
add
lahf
not
addl
in
cmc
xor
adc
js
mov
adc
adc
ret
or
test
xor
push
std
mov
inc
jl
cmpl
fisubrs
xor
push
xor
add
xor
and
mov
dec
sbb
xchg
fsubrs
dec
xchg
repz
add
add
add
repz
mov
movsw
cmpsb
xchg
cmc
jns
lods
xchg
sbb
orb
mov
jbe
mull
je
xor
push
lock
sub
testb
inc
xor
cwtl
lret
lea
imul
xchg
movsb
pop
movsl
or
in
insb
sub
movsb
xchg
repz
jns
pop
xchg
push
add
add
popa
repnz
nop
int3
sub
xor
lock
sbb
popf
dec
cli
xchg
scas
popf
push
lods
sbb
jmp
mov
cld
flds
dec
fcompl
mov
xor
inc
cmp
int
icebp
mov
push
shll
je
jns
lahf
bound
xchg
add
inc
sbb
jp
bound
pop
dec
jnp
popf
enter
cmp
lea
add
nop
jecxz
in
xor
int3
lods
aam
fmuls
repz
fnsave
jns
mov
hlt
stc
out
mov
in
das
arpl
and
imul
out
jg
das
aaa
cli
mov
data16
int
sbb
imul
in
arpl
fsubrs
sbb
aam
nop
mov
les
pop
repz
push
adc
mov
mov
in
mov
jb
in
inc
out
pusha
push
test
cmp
testb
and
dec
and
mov
lahf
imul
mov
shll
clc
xor
sub
xchg
and
inc
cmpsb
aad
cltd
lahf
mov
xorb
mov
push
mov
rdtsc
pop
rorb
push
test
gs
and
js
into
mov
mov
cwtl
cmp
mov
sbb
imul
jne
pusha
in
xchg
adcb
jg
push
mov
push
inc
cmovne
xor
scas
xorl
mov
inc
xlat
lahf
fildl
adc
cmp
dec
adc
dec
stos
pushf
mov
stos
cli
imul
inc
xchg
inc
cmc
jo
push
mov
jmp
test
lret
mov
mov
rcl
decb
mov
cmpb
sub
push
adc
jmp
mov
decl
test
push
mov
and
fdivp
popa
sbb
cli
lods
inc
xor
into
test
dec
ss
in
ret
sar
in
cmp
inc
push
movsb
sub
mov
xchg
cmp
add
das
shld
lock
mov
loop,pt
insl
mov
shrl
add
or
add
int
out
arpl
lcall
cmp
pop
scas
imul
mov
pop
nop
negl
add
push
xor
sahf
and
lret
xor
inc
inc
pop
lcall
daa
scas
loop
and
clc
ret
loopne
add
stc
or
nop
adc
into
into
sub
dec
mov
mov
pop
lods
push
lock
mov
push
jns
idivb
push
cmpsb
mov
xchg
push
cmc
jb
pop
ljmp
test
xchg
adc
into
rcrl
in
mov
add
test
in
hlt
dec
in
aam
or
push
mov
stos
cmpsb
sbb
es
inc
out
lods
xchg
fst
arpl
fwait
imul
mov
xor
cld
pushf
outsl
imul
pop
lock
xor
inc
ds
loope
push
xchg
adc
mov
cld
nop
sub
test
rcrb
jb
push
pop
jns
mov
xor
inc
xor
ficompl
in
mul
push
insb
mov
mov
fmul
xor
lods
mov
add
sbb
jo
or
and
fmulp
lods
pop
inc
xchg
movsl
cs
push
scas
jo
dec
call
andl
lahf
xchg
dec
inc
adc
test
adc
dec
fmull
mov
xchg
into
add
in
jns
dec
add
xorl
bound
jp
movsb
adc
sbb
cmp
jnp
xchg
and
adcl
fs
mov
insl
fcmovu
dec
inc
mov
lods
xchg
outsb
xor
leave
mov
lret
jbe
cs
insb
pop
mov
mov
popa
mov
filds
dec
or
aaa
add
or
fisttpl
rep
mov
test
jge
shlb
and
pop
dec
popa
in
xor
xchg
je
adc
test
ja
std
mov
adc
inc
shlb
mov
ficomps
mov
sub
bnd
push
dec
add
mov
mov
mov
stos
negb
lahf
push
push
or
sahf
lcall
stc
sub
sahf
sbb
aaa
adc
mov
mov
push
cmpsb
mov
test
and
jecxz
inc
mov
add
test
push
cmp
repnz
mov
cmp
mov
fnstsw
negl
mov
addb
fs
pop
mov
mov
inc
push
jo
or
push
std
cmp
sub
dec
hlt
fisttps
mov
mov
mov
push
mov
inc
push
outsl
lcall
out
pop
adc
sub
lock
dec
jae
dec
push
jns
pushf
int
sub
sub
test
repz
sarl
lods
dec
je
cmp
jo
mov
shl
and
push
cmc
cmp
jp
mov
out
xor
sahf
push
pop
inc
jp
sti
fidivl
es
push
lock
popa
adc
cltd
pushf
js
mov
pop
pusha
cmc
shlb
mov
cmp
push
mov
mov
inc
addr16
jns
mov
push
mov
arpl
mov
rcr
and
stos
xchg
int3
add
mov
inc
jl
dec
adc
int
pop
jnp
imul
inc
pop
push
sub
pop
or
mov
mov
mov
cld
cmp
je
outsb
pop
lea
sbb
in
cld
aas
mov
test
fs
push
dec
inc
popa
push
sahf
imul
stos
inc
cmp
mov
sbb
cmp
xchg
and
out
push
mov
cld
sti
fisubrs
mov
push
cmp
int3
mov
fwait
testl
dec
icebp
inc
pop
or
iret
sub
ss
jne
loopne
data16
mov
insl
shlb
rcrb
mov
mov
aam
and
adc
aam
mov
or
inc
push
dec
lahf
mov
sub
ss
fmuls
and
adc
or
adc
cli
outsb
or
push
fcomp
mov
lock
jecxz
and
cmpsl
push
test
enter
sub
or
xor
mov
sbb
sbb
xchg
out
in
repnz
pop
cmp
push
dec
add
push
adc
jbe
lods
sbbb
push
inc
xchg
mov
pop
mov
repz
mov
aas
inc
movsl
cmp
mov
ret
pop
rclb
pop
leave
or
or
sarb
push
div
push
out
xchg
xchg
dec
mov
or
push
add
js
and
ljmp
xchg
pop
cmp
mov
fsts
in
adc
insl
mov
push
fcompl
cmp
or
mov
inc
aam
push
push
outsl
outsl
push
xchg
mov
lea
test
repnz
arpl
jmp
jne
arpl
inc
std
inc
std
dec
fs
adc
jp
mov
clc
adc
test
sub
pop
out
and
mov
inc
dec
lret
jbe
mov
mov
call
into
clc
fxch
nop
lods
pop
mov
in
adc
sub
add
xchg
dec
push
fisubrs
xchg
add
aam
in
repnz
cmp
out
sbb
test
cmpb
or
mull
js
jmp
mov
add
push
mov
jmp
pop
xchg
mov
repz
jl
sub
out
in
xorl
cmc
repnz
test
ret
push
jg
pop
adc
fsubl
scas
xor
xchg
lock
mov
cmp
sbb
jb
pop
lahf
cmp
push
loopne
jge
rolb
inc
pushf
push
shlb
stc
cmp
mov
adcl
fs
cmp
jo
and
pop
mov
pop
aad
lret
aad
orl
leave
pop
out
lock
inc
test
bound
addb
inc
or
nop
lods
call
cli
cli
mov
add
dec
dec
adcl
xchg
lret
les
jno
aaa
dec
pusha
rorb
popf
xor
and
add
fdiv
add
out
fstpl
xlat
mov
or
inc
int
sub
outsl
jne
enter
leave
cltd
sbb
adc
add
scas
push
sbb
xchg
or
sub
adcb
addl
fmulp
pop
ds
fwait
je
cltd
pause
jno
test
xchg
dec
push
cmp
out
pop
mov
std
xchg
push
fistpll
sub
jecxz
lahf
das
jbe
leave
sbb
addr16
pusha
daa
hlt
mov
jo
outsb
fldt
push
dec
inc
inc
out
fwait
cmpsb
dec
aas
out
loopne
sub
mov
mov
insl
pop
repz
xchg
in
out
push
lcall
or
jae
inc
pop
adc
in
dec
cs
xlat
cmpsl
pop
cwtl
push
sbb
pop
fwait
push
mov
dec
aad
push
or
mov
pop
repnz
pop
jg
jge
cli
mov
inc
vpunpcklqdq
inc
lret
xchg
js
repz
mov
pop
lahf
mov
mov
faddl
push
add
vucomiss
pop
loope
pop
fsts
dec
xor
mov
imul
iret
rcll
lret
in
push
ljmp
mov
js
rcrl
mov
fld
sub
xor
ljmp
test
cltd
loope
sbb
mov
rol
xor
xor
outsl
inc
add
mov
bound
insl
adc
mov
sub
into
aas
mov
fisttpll
pop
iret
xchg
js
mov
lods
push
cmpsb
dec
std
jno
xchg
lods
or
inc
inc
or
arpl
cltd
jecxz
imul
not
add
fucomi
das
fldt
fldt
adc
scas
je
stos
enter
sti
inc
sub
popf
je
push
clc
ret
cmp
push
add
or
xor
lcall
push
test
mov
lock
cmpsb
nop
js
and
shlb
shl
push
mov
fisttps
and
xor
pop
xchg
xlat
pop
je
push
cmp
inc
out
mov
pushf
mov
pop
xchg
mov
mov
jbe
mov
jmp
fisubrs
dec
xchg
push
call
je
enter
loopne
icebp
pop
mov
test
mov
fistps
out
jle,pn
jecxz
call
loop
jmp
mov
js
add
mov
sub
cwtl
and
pop
xchg
add
pop
sahf
jae
aad
xor
push
es
cmp
and
mov
test
sti
mov
dec
mov
xchg
cmp
xchg
cwtl
inc
cmpsb
stos
jmp
fsubr
push
and
gs
dec
jg
stos
mov
jno
lahf
inc
mov
pop
inc
jo
inc
lahf
fsubs
aad
cmpsl
out
push
jnp
xor
push
pop
pushf
mov
or
lods
mov
pop
jnp
sbb
addb
dec
rcrb
lcall
lds
inc
push
in
loope
adc
fildl
xor
fwait
in
pusha
nop
outsb
xor
loop
mov
dec
inc
add
adc
outsl
pop
xor
sbb
imul
fadds
cmp
jo
jmp
mov
iret
inc
jb
push
lds
mov
xchg
dec
les
pop
lret
inc
push
ds
jmp
cwtl
adc
mov
xor
stos
aaa
mov
pop
cmp
xor
test
or
in
orl
and
shll
cmp
test
mov
pusha
ret
xchg
sub
test
inc
dec
loope
loopne
imul
mov
pop
in
mov
adc
cmp
test
in
rcl
loope
sahf
out
inc
pop
mov
sub
or
adc
lcall
push
js
and
cltd
xchg
aad
call
push
push
pushf
ret
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
insb
out
xor
addb
stc
push
and
test
pop
mov
sub
xchg
sub
jb
dec
ret
loop
int3
mov
stos
jmp
test
cmp
loopne
sti
push
rcrb
pop
jae
dec
pushf
jl
jle
stc
dec
cmc
scas
repz
pop
or
ficomps
pop
push
pop
sub
popf
mov
ret
dec
adc
popa
cmp
xor
xchg
testl
sub
mov
lcall
mov
mov
sar
cmp
sbb
mov
xchg
sub
pop
outsb
jo
shl
push
test
cmp
enter
adc
inc
adc
adc
sahf
mov
fists
mov
test
xchg
mov
imul
sahf
mov
stos
push
mov
test
loopne
clc
cltd
mov
pop
fs
mov
mov
sub
and
push
shlb
ds
mov
ds
push
rcrb
repnz
mov
lods
lea
adc
inc
dec
mov
enter
jnp
sti
xor
lods
aaa
ret
xchg
insb
test
cmc
mov
data16
inc
sub
mov
dec
xchg
cwtl
ljmp
cmp
push
ds
je
mov
mov
jl
js
cld
push
repnz
adc
icebp
cli
fidivs
lret
rol
out
js
cmc
xor
mov
adc
rcrb
dec
adc
sbb
mov
xorl
test
stos
inc
cmp
enter
xor
xor
pop
pop
sbb
xchg
pop
mov
or
sub
leave
dec
xchg
push
clc
inc
movsl
leave
push
rcrb
adc
out
mov
mov
jmp
add
outsb
mov
jne
stc
jb
push
pop
dec
in
cmovbe
popa
pop
jns
cltd
mov
cwtl
mov
pop
pushf
fs
aas
pop
xor
push
fsubl
sub
test
sbb
mov
mov
test
ret
in
aam
sub
rcrl
sbb
sahf
mov
dec
sub
mov
mov
in
mov
lcall
popf
hlt
lds
cmp
lods
mov
into
dec
jo
lods
cs
rep
mov
jae
scas
lret
lods
cmp
jb
inc
cmpb
mov
xor
xchg
mov
push
lahf
jae
popf
and
pusha
jns
fdivs
push
pushl
cmp
jle
jmp
cmpsl
ja
sbb
repz
adc
jecxz
dec
fldl
and
lret
iret
loop
lret
shlb
rclb
addb
sti
fwait
cltd
fdivrp
test
jmp
push
xor
out
aas
lods
mov
mov
mov
sbb
rol
out
hlt
lods
popa
xchg
out
mov
sbb
jbe
mov
in
andb
push
or
inc
pop
bound
inc
mov
push
adc
cmp
into
jne
lods
out
jnp
das
push
pop
testl
aaa
mov
test
jmp
in
test
sub
jne
fs
stos
mov
insl
inc
mov
cmp
cld
pop
sbb
sbb
jp
js
js
fadd
lcall
clc
cmp
cmp
rcll
arpl
insl
mov
lock
in
inc
sbb
shll
outsb
ret
inc
imul
xor
xor
or
add
fwait
nop
loope
int3
xor
outsb
pop
leave
jmp
push
hlt
adc
cmc
add
pushf
repz
std
fwait
lcall
scas
cmc
sub
and
mov
xchg
int
sbb
pop
arpl
into
pusha
cmp
mov
mulb
roll
pushf
push
sub
jl
push
inc
mov
push
lahf
pop
ja
loop
adc
clc
mov
call
loopne
adc
test
push
and
imul
pop
jo
bound
pop
adc
mov
lock
lods
lret
pop
iret
cltd
add
imul
idivl
std
push
mov
xchg
mov
nop
fsubs
inc
xchg
and
test
or
sahf
shr
mov
dec
jg
lahf
xchg
pop
jnp
adc
shll
cwtl
je
ret
fadd
cltd
movl
sbb
dec
mov
mov
std
jle,pn
xlat
push
pop
jnp
fimuls
mov
mov
add
adc
rorl
decb
and
jge
cs
callw
sub
and
jb
xor
mov
cld
lahf
in
xor
inc
nopl
andl
mov
mov
or
adc
xorl
dec
std
inc
mov
jb
mov
or
dec
lcall
mov
cmp
sub
mov
test
xchg
adc
pop
test
push
aaa
pushf
jnp
sub
and
mov
sub
iret
xchg
pop
or
sahf
or
call
test
mov
out
pop
sub
and
cmp
push
and
mov
imul
mov
or
cmpsl
mov
mov
or
orb
and
fsts
mov
pop
add
xor
fucom
or
outsb
addl
sbb
jns
mov
pop
inc
pop
mov
fxch
dec
xlat
or
jp
pop
imul
je
mov
rorb
mov
pop
mull
into
push
xor
inc
mov
jo
js
out
movsl
shl
xor
inc
es
cld
cmp
shlb
lea
jno
sbb
xor
sahf
mov
in
ss
sbb
pop
outsb
out
mov
fisttpll
cmpsl
xchg
clc
movsb
out
cmove
xchg
popf
addl
pop
push
pop
in
push
inc
sahf
pop
js
xchg
mov
subl
ret
imul
aad
inc
mov
rorl
inc
xchg
pop
mov
lret
addl
pop
outsb
clc
mov
les
pop
sbbb
sbb
xchg
sbb
enter
inc
je
or
lret
fldenv
xchg
pop
ja
mov
pop
test
inc
cmpsb
cmpsl
not
sbb
mov
call
sub
push
movl
inc
xchg
rclb
add
push
mov
and
xlat
popf
or
mov
push
fildll
inc
mov
mov
pop
push
pop
inc
call
xchg
loopne
mov
mov
sub
jmp
and
inc
out
xor
pusha
xlat
jns
test
cld
fiaddl
bound
enter
jp
lcall
xchg
stos
jmp
xchg
jbe
adcb
repz
outsl
or
pop
sub
in
xor
popf
sbb
jno
call
ret
ljmp
ret
outsl
clc
inc
adc
inc
arpl
or
test
pop
imul
scas
cmp
fidivs
adc
pop
mov
xchg
pop
shll
cmp
pop
ljmp
cmpsl
in
gs
sarb
shll
std
outsb
xor
push
jl
fsts
cld
int3
mov
dec
cltd
add
mov
mov
sub
adc
out
fprem
sbbl
mov
lret
mov
push
xchg
addl
nop
aad
inc
out
jle
lds
or
mov
mov
test
mov
jnp
lret
int
cld
ret
aad
rcr
jl
and
int
fidivs
shl
cmp
mov
int
jbe
sub
int3
cmpsb
and
adc
aad
loope
pop
gs
int3
or
mov
std
out
cmp
and
aad
push
sbb
lret
pop
jae
aaa
aam
jmp
push
ja
push
xor
aad
push
fcom
mov
jmp
popa
mov
mov
pop
fldenv
stc
shl
mov
insb
xchg
rcll
mov
mov
inc
ficoml
jle
mov
jne
cld
enter
cmp
jmp
shll
sahf
adc
adc
mov
clc
pop
ret
imul
jo
lods
jo
adc
outsb
addl
xchg
fsubp
jns
push
cli
cmp
lods
popf
notl
xor
outsb
icebp
push
gs
scas
pop
mov
enter
fsubs
fiadds
adc
inc
outsl
mov
mov
mov
cmp
push
sub
pop
aaa
jbe
adc
xchg
add
clc
xor
mov
ljmp
sub
cli
ror
mov
stos
or
cmc
push
cmc
std
sbb
jbe
loop
push
imul
cmp
rclb
repnz
sbbl
dec
ds
cli
jb
rcrl
mov
jecxz
aad
jnp
int3
aaa
mov
inc
xchg
mov
addl
cmp
cmp
push
scas
lahf
xor
sbb
pop
inc
xorl
inc
out
jbe
pusha
adc
ficompl
rcrl
movsb
std
test
out
push
lock
jl
mov
xchg
cmp
ret
movsb
sbb
sub
sbb
push
lea
loop
dec
insl
mov
lods
or
add
repnz
or
aam
lsl
adc
cli
popf
int
mov
rcrb
pop
xlat
add
sbb
aam
out
adc
sub
adc
and
dec
xchg
sahf
sub
scas
cmp
fcoms
or
adc
cmp
test
je
clc
inc
adcb
jmp
xlat
ljmp
push
or
lds
aam
xchg
rorl
fldenv
lods
lea
lea
ficoms
add
rorb
out
in
and
jmp
adc
jno,pt
stos
dec
cmp
mov
xchg
fisubrl
out
aaa
ds
pop
xor
pop
mov
adc
imulb
dec
and
out
xchg
cltd
cmp
iret
xor
xor
std
addl
in
inc
pop
dec
push
or
xor
cmpsl
lea
lods
dec
push
sbb
fcompl
xor
sbb
xchg
jge
cltd
pop
data16
aad
stc
xor
mov
dec
cwtl
aam
jle
roll
adcl
fs
xchg
or
ljmp
inc
cmc
sbb
mov
add
pop
mov
push
in
pushf
pop
mov
jecxz
push
jmp
xchg
in
dec
bnd
fcmove
andb
rorl
mov
inc
and
mov
test
ret
icebp
xchg
jl
pop
add
xchg
and
add
in
mov
jecxz
push
inc
int3
aad
add
xor
gs
or
cmp
movsb
xor
sub
into
lods
and
xor
add
data16
mov
mov
lret
pop
jo
pop
stos
repz
xor
lahf
inc
ja
inc
icebp
mov
pop
xor
out
test
dec
das
jae
push
mov
jl
insl
or
jns
and
int
cmp
enter
in
xchg
jne
mov
jns
jns
jecxz
and
sti
shlb
jmp
test
nop
push
inc
fdivl
dec
xlat
sbb
push
negl
mov
xor
push
push
stc
push
sub
mov
icebp
rcrl
cltd
fstl
cltd
or
int
sahf
imul
cli
push
mov
mov
dec
adc
stos
test
and
xlat
add
out
cli
cmc
push
lock
sti
sbb
inc
fnstcw
and
les
ret
es
lock
inc
adc
pop
mov
mov
popa
cli
jmp
mov
xor
and
lods
lcall
sahf
xor
enter
mov
addr16
jmp
dec
pop
inc
xchg
hlt
aad
popf
mov
leave
xor
popa
in
add
sub
inc
test
jno
mov
call
cmp
jnp
jle
mov
mov
shl
sub
mov
addr16
sbb
and
arpl
push
lea
lret
cmc
mov
sub
mov
xchg
push
inc
xor
adc
xorl
add
sub
sbb
scas
daa
mov
cltd
popa
es
cli
jmp
sahf
and
push
mov
imul
daa
lock
fcoml
and
out
ret
aam
push
cmp
je
cmp
mov
cmc
push
sbb
push
leave
loopne
cmp
dec
rorb
or
fcmovu
jp
std
or
cmpsl
mov
fldl
dec
aad
add
test
outsl
jns
dec
sbb
aaa
mov
pop
movsb
sti
pop
pop
in
inc
lcall
dec
xchg
sbb
push
xor
icebp
jns
mov
inc
addr16
movsl
aas
sbb
inc
cmc
push
jecxz
inc
iret
jne
movsl
sub
aad
imul
adc
mov
add
fs
pop
scas
fwait
ret
rcrb
call
sbb
test
sub
call
loope
mov
rcrl
jl
add
stos
sbbb
mov
mov
and
cwtl
cmp
mov
fisttps
outsl
xchg
push
mov
mov
lret
fdivr
xlat
int
in
add
notl
and
or
inc
andb
or
jle
mov
gs
pop
xchg
lds
jb
jbe
mov
xchg
out
sub
scas
js
ds
inc
shlb
popf
mov
xlat
lcall
rcrb
in
mov
push
mov
fsts
rcll
imul
dec
pop
movsb
lcall
rorb
mov
mov
inc
and
iret
pop
jmp
divb
xchg
add
cli
lahf
mov
out
ja
sub
aam
lea
add
cmc
push
movb
xchg
sub
jne
test
in
pushf
lahf
or
loope
gs
xor
jno
inc
addb
rorl
addr16
push
jge
xor
sbb
lret
jb
push
and
insl
xchg
mov
fs
cmpsl
mov
push
push
insb
mov
mov
mov
cmp
push
mov
mov
out
arpl
negl
psubusw
mov
mov
insl
mov
adc
mov
cmc
mov
test
mov
loopne
sbb
adc
inc
das
daa
mov
dec
mov
inc
pop
cmp
sub
insl
dec
mov
pop
das
outsl
mov
mov
push
pop
sbb
jno
lods
fsubrl
aas
pushf
sbb
js
xor
cld
gs
push
jne
pushf
mov
mov
push
xchg
pushf
cmpsl
sbb
out
inc
mov
add
sub
fcoml
mov
fsubrs
cwtl
xor
cwtl
neg
mov
xchg
sbb
inc
ljmp
and
inc
sbb
mov
fmull
jns
cmpsl
js
or
jno
sarb
in
test
jle
jb
sbb
jl
and
push
push
lea
push
movsl
dec
pop
cmp
or
int
mov
fsubrl
lock
cmpsl
lahf
lea
mov
xor
mov
stos
pop
loop
shrl
loop
jbe
rcrl
roll
xor
daa
cmp
mov
pop
inc
int
mov
iret
jp
outsb
xor
inc
push
or
js
inc
stos
and
sti
xchg
ss
jge
das
ds
repnz
mov
aas
lahf
pop
fstl
jge
adc
shlb
inc
call
rorb
pop
filds
inc
out
fdivp
insl
and
fildl
and
add
lcall
dec
pop
push
dec
movb
add
ds
stos
mov
or
in
int3
xor
outsb
push
or
movsl
pop
push
mov
gs
sahf
mov
xor
es
lods
jecxz
mov
nop
dec
mov
hlt
imul
push
xlat
std
xor
les
ret
test
mov
sbb
add
and
xchg
dec
iret
push
icebp
fcoml
ret
sbb
fisttpl
mov
arpl
cmpsb
call
mov
outsl
pushf
int
cmp
in
push
add
pusha
mov
mov
inc
or
push
mov
repnz
aaa
shll
xchg
mov
fiadds
subb
test
inc
jle
or
or
test
push
pop
ss
ret
push
test
cmp
iret
jle
iret
push
push
adc
jmp
incl
inc
xchg
push
mov
xor
pop
lds
inc
mov
in
adc
push
or
cltd
fwait
inc
pop
cmpsb
lcall
das
pop
call
push
pinsrw
mov
jg
push
gs
xlat
pop
orl
or
pop
push
sarb
add
add
jbe
adc
push
jmp
cli
mov
fs
push
shrb
xchg
lods
stos
adc
xor
repnz
and
and
cs
lcall
int3
int
jne
bnd
xchg
push
cmp
xchg
pop
inc
movsl
push
sub
fnsave
xchg
dec
lea
xchg
xchg
ss
pop
nop
fistl
mov
jo
movsl
dec
lods
sub
in
mov
es
xchg
fs
mov
jle
sbb
ret
pop
scas
fstps
arpl
test
mov
jne
add
insl
mov
leave
add
popf
dec
clc
hlt
inc
test
fcomps
cmp
rcrl
push
fsubl
in
xchg
sbb
hlt
inc
lcall
mov
mov
and
andb
xor
fs
je
lret
js
test
arpl
imull
fwait
xchg
sub
je
enter
jae
lods
push
xchg
fnstsw
jno
addb
jecxz
jbe
pop
jg
icebp
fistpll
mov
in
data16
pop
pop
dec
imul
mov
jge
and
movsl
icebp
xlat
shll
jne
push
jge
dec
repnz
push
jp
jl,pn
inc
jmp
ljmp
andl
mov
inc
and
pop
adc
addb
jo
mov
pop
lods
mov
lea
mov
xor
add
clc
aam
ret
pop
xchg
pop
jle
sub
inc
and
xor
jge
cmc
lahf
xor
movsl
sbb
adc
popl
xor
fdivs
jo
mov
mov
pop
jg
rorb
dec
aaa
hlt
imul
xor
push
dec
movsb
scas
cmp
icebp
xchg
mov
inc
adc
sbb
cli
mov
adc
cltd
in
aam
mov
xchg
icebp
popa
lcall
vldmxcsr
and
lea
mov
sar
imul
mov
test
ds
aad
testb
jno
sbb
hlt
mov
fwait
adc
mov
ret
sub
inc
mov
outsl
xrelease
repz
or
andb
notl
mov
dec
inc
push
lcall
stos
out
adc
or
or
jl
iret
pop
inc
sub
lock
pop
push
push
rcrb
push
lea
lret
idivb
cli
imul
lret
es
in
insb
xchg
ljmp
adc
repz
xchg
rol
fiadds
pop
inc
pop
scas
gs
iret
mov
dec
sub
sar
adc
xchg
out
and
fiaddl
aaa
mov
test
faddl
popa
sbbb
mov
std
jno
outsb
loopne
insb
pop
xor
add
mov
add
aaa
mov
rclb
lods
ss
lret
iret
or
dec
orb
mov
jp
adc
cmc
movsb
xchg
bound
pop
mov
sbb
sbb
mov
cld
push
testb
dec
sbb
popl
aad
mov
lods
call
mov
jo
aad
outsl
mov
fwait
repz
or
adc
into
push
insb
popf
xchg
cmp
testl
xchg
dec
or
loopne
mov
outsb
ljmp
jmp
lret
ja
lock
fwait
pop
xchg
push
dec
mov
cwtl
xor
popa
dec
push
pop
test
pushf
ss
adc
aam
fmull
leave
mov
imul
cmp
sbb
jle
adcl
lret
mov
daa
scas
dec
jnp
add
cmp
push
lahf
ljmp
cli
dec
pop
sarl
sbb
pop
adc
xor
mov
push
jo
popf
pop
jne
out
or
or
pushf
subb
fst
or
inc
push
cmpsb
xchg
jno
push
pop
sbb
pop
push
jnp
add
ss
inc
mov
pop
ljmp
out
rorb
loopne
dec
mov
popa
lods
pusha
sub
inc
dec
out
pop
push
xchg
mov
idivb
or
jmp
stos
mov
mov
stos
or
lods
xor
xchg
inc
jecxz
and
jmp
fnsave
jecxz
cmp
repnz
xchg
imul
push
mov
out
or
aas
ret
jnp
adc
movsb
orb
imul
sbb
cmpsl
mov
cmp
mov
lea
dec
mov
xchg
mov
ret
int3
or
dec
cmc
dec
lahf
test
int
fidivrl
jo
push
or
loopne
fisttpl
jno
xchg
inc
pop
and
xchg
mov
sbb
jmp
mov
cmpsb
push
mov
std
pop
ljmp
cli
mov
js
fwait
cmpsb
sub
sbb
fwait
mov
xchg
cmpsb
jecxz
xchg
outsl
ret
inc
add
jmp
mov
sub
or
sbb
sbb
lods
add
adc
or
add
iret
xchg
aam
sbb
int3
lods
push
ljmp
mov
mov
adc
cltd
shrb
jp
jb
dec
mov
sbb
loopne,pn
push
and
inc
in
js
popf
and
push
dec
iret
stc
dec
pop
scas
xor
mov
dec
ds
cmpl
test
mov
push
add
and
add
int
and
and
sbb
test
cmpsb
cmpsb
adc
ret
es
push
jnp
sahf
ja
push
mov
jmp
fistl
sub
and
push
xlat
cmp
lds
call
cmc
test
or
test
dec
mov
pop
cmp
call
into
repnz
fsubrs
add
push
push
ja
lcall
jno
fisttpl
sbb
xor
leave
add
aam
rorl
inc
sub
loope
adc
fldenv
scas
push
dec
and
mov
mov
xchg
and
or
fs
inc
and
mov
jmp
int3
mov
nop
stos
in
adc
das
jnp
scas
add
fidivl
int
xor
gs
mov
mov
mov
into
popa
push
push
inc
lret
xchg
lcall
push
out
push
pop
pop
fidivrs
dec
push
fucomp
mov
nop
push
sbb
inc
jmp
inc
fidivrl
dec
mov
outsl
push
es
sub
push
sub
dec
imulb
ret
jecxz
js
mov
jecxz
cmp
mov
js
dec
popa
jecxz
jns
pop
fucomip
pop
add
cli
pushf
xor
movb
popf
pop
dec
dec
out
xchg
je
or
stos
pop
dec
in
cmovle
add
pop
nop
shll
mov
std
pop
add
sub
jmp
setne
je
mov
loop
aad
movsl
pop
icebp
jno
int3
pop
movsl
dec
adc
sbb
scas
adc
pop
daa
cli
jb
xor
or
fmul
mov
int
out
push
push
or
pop
dec
sbb
push
ja
xchg
push
iret
nop
add
add
push
jl
daa
fiadds
dec
jge
and
rolb
mov
mov
dec
and
adc
and
fimuls
pusha
pop
cmp
push
push
lds
push
icebp
mov
xor
xor
or
gs
cmp
xchg
movsb
cmp
adc
jmp
mov
push
jne
pop
jle
xchg
cmp
pop
xchg
cmp
in
pusha
das
rolb
mov
sub
xchg
adc
mov
movsl
into
lds
xchg
and
loop
pop
icebp
xchg
lods
lret
push
mov
jns
cwtl
pop
sbb
xchg
sbbl
bnd
jbe
push
jns
or
pop
mov
scas
mov
scas
inc
xchg
roll
cmp
ret
mov
or
dec
xchg
pusha
or
loope
jbe
mov
test
fnstcw
inc
cmpsb
mov
dec
sub
dec
stos
popa
inc
jmp
push
add
pop
cld
hlt
aaa
pop
repnz
xchg
into
loopne
orb
xor
pop
mov
jmp
jnp
xor
sub
out
sub
in
or
lods
rcrl
add
movsl
push
sbb
dec
mov
xlat
addr16
movsb
or
lods
movsb
cmpsb
outsl
inc
jg
pop
push
fwait
lret
rcr
outsb
and
sahf
pop
push
ja
jne
jbe
xlat
ja
jge
imul
stos
das
xlat
negl
jl
sub
or
imul
ds
cmp
movsb
dec
inc
mov
xchg
cs
jg
xor
icebp
in
popf
adc
mov
push
mov
rorb
or
std
test
sub
push
sbb
cmpsl
addr16
xor
adc
cli
add
sbb
fldpi
dec
sarb
xchg
lods
or
out
out
loopne
sub
jecxz
sbb
leave
mov
in
and
sti
cmp
add
repz
fidivrs
pop
sub
cmp
jns
sbb
dec
jb
pop
aam
fildl
push
loope
lea
lods
xchg
popf
repz
pop
pop
gs
fcoms
cmp
xor
fisubrl
sub
aaa
fs
in
inc
mov
cld
ror
test
insb
mov
movsb
in
cmp
lahf
jbe
pop
rorb
add
inc
and
js
sbb
fstl
lahf
imul
cmp
mov
xchg
pop
jg
mov
mov
dec
mov
dec
or
int3
shll
mov
test
leave
dec
imul
pop
outsb
pop
dec
movsb
xchg
cmp
cmp
sub
mov
adc
pop
mov
arpl
cld
mov
and
dec
inc
in
das
push
bound
pop
push
pop
cmpsl
int3
scas
mov
mov
clc
inc
pop
cmc
setbe
stos
adc
lods
loop
add
push
mov
mov
inc
mov
mov
imul
inc
xchg
repz
in
adc
mov
sub
scas
pusha
mov
pushf
push
in
mov
push
pop
sbb
decb
xchg
sti
jb
inc
cmp
xor
jnp
dec
das
dec
out
xchg
pusha
fsub
das
or
pop
dec
int
mov
jl
push
add
inc
xor
fcomps
data16
mov
nop
cs
mov
push
lds
lods
outsb
xor
fs
dec
pop
inc
loop
inc
dec
sub
add
mov
cmp
ds
jl
jns
aaa
or
push
dec
push
sbb
imul
movsb
sbb
icebp
shlb
jecxz
pop
fwait
cmp
je
xchg
icebp
xchg
stos
and
sub
inc
int
data16
sub
pop
in
mov
lods
cmpb
lock
ds
shl
inc
rcrb
fwait
mov
sub
repnz
int
std
movsl
pop
subb
je
pop
mov
mov
gs
addr16
add
loopne
push
sub
data16
sbb
inc
iret
sbb
sub
push
dec
push
stos
xchg
insb
jnp
sbb
cmp
dec
mov
cmp
cmpsb
rcr
jmp
ret
pop
jl
insb
in
fadds
leave
fisubrl
xchg
insl
in
outsb
aad
lret
mov
rorb
pop
gs
add
inc
fsubrs
scas
xorb
divb
mov
lock
int3
xchg
in
sub
sbb
inc
inc
in
cmp
cmp
js
outsb
jo
sub
mov
testl
aam
test
pop
mov
das
jp
lret
or
fldl
stc
clc
mov
out
inc
movsl
mov
push
and
nop
push
sbb
jg
mov
lahf
lcall
push
hlt
loop
repz
mov
jl
sbb
push
pop
add
and
imul
bound
pop
pop
aaa
push
es
rcll
mov
push
lds
mul
jbe
sbb
sahf
jno
inc
nop
sub
adc
inc
addr16
sub
fcmovb
nop
insb
add
test
sbb
lock
iret
call
mov
fwait
push
les
sub
adc
pop
aam
jbe
out
leave
loope
ds
roll
sbbl
sahf
inc
stc
rolb
dec
call
insl
pop
in
insb
inc
push
jns
test
mov
push
add
out
jecxz
test
xrelease
push
adc
test
fstl
movsb
sbbb
fs
call
xor
dec
clc
mov
lods
cmp
pop
mov
fildl
mov
lret
jb
xchg
add
shlb
wrmsr
outsl
pop
pop
test
adc
mov
cli
mov
enter
mov
fdivrp
das
clc
mov
pop
in
mov
sub
imul
pop
dec
adc
cmp
mov
test
imul
ds
fisttps
rcll
insl
xor
xchg
fnstcw
in
int3
mov
cmp
mov
cmpsl
add
je
sbb
dec
xchg
cmp
xor
mov
dec
push
xlat
xchg
xor
dec
mov
xor
pop
add
insb
iret
clc
adc
or
addr16
cmp
sbb
dec
gs
mov
outsl
xchg
mov
cltd
pop
inc
sub
xor
push
mov
jno
aas
and
adc
daa
adc
shlb
roll
daa
jae
ss
adc
in
push
call
lods
in
and
jg
clc
arpl
ret
push
cs
mov
push
jne
jne
jge
icebp
cmp
imul
inc
sub
sub
mov
sbb
into
imul
call
das
int3
mulb
pusha
xchg
ds
xchg
mov
sti
cmc
ja
jge
je
repz
ror
sti
push
js
adc
aaa
pop
pop
fidivl
cwtl
adc
hlt
mov
and
test
mov
mov
push
xlat
jno
outsb
cmp
cmpsb
jb
cmp
lods
add
inc
adc
mov
add
add
mov
leave
outsb
mov
push
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
adc
addb
rcrl
out
dec
jbe
leave
mov
mov
add
push
cli
scas
hlt
movsl
push
mov
es
popf
sbb
data16
rcll
dec
fdivrs
out
pop
dec
jne
sti
in
dec
jge
xor
sub
pop
mov
push
mov
in
das
lods
imul
jo
pop
lret
dec
pop
icebp
pop
xor
sub
xchg
jecxz
mov
push
out
insl
jmp
lods
nop
loop,pt
test
xchg
popa
xlat
sub
jl
sub
inc
add
cmp
sbb
stos
push
mov
push
sub
adc
adc
mov
or
mov
inc
jge
ficompl
out
xchg
cmp
add
fnstenv
cmc
cli
cmpsl
push
mov
clc
mov
pop
jno
lock
subl
mov
jno
cs
sbb
mov
cs
mov
jecxz
xor
lock
push
orl
mov
or
or
xlat
inc
inc
mov
or
cmp
mov
jle
mov
movl
push
mov
dec
cli
mov
fsts
lods
mov
insb
cmpsl
in
cmp
add
or
das
xlat
cmpsb
sub
mov
imul
movsb
xchg
mov
cmp
scas
notb
cmp
push
or
leave
pusha
push
and
inc
scas
dec
pop
xchg
rolb
cli
cld
ret
mov
push
xor
ljmp
test
insl
mov
inc
out
lcall
add
pop
pop
scas
arpl
mov
aad
sub
adc
sti
cmp
dec
sti
mov
je
push
addl
out
call
sub
xchg
lret
mov
out
iret
mov
sub
mov
adc
outsb
mov
retw
repnz
or
outsb
push
adc
fsubl
pop
bnd
adc
stc
aad
push
test
push
jg
orl
push
aam
xchg
sub
sub
mov
jno
ss
lods
xchg
mov
int3
loop
mov
lods
adc
sbb
mov
and
ja
mov
notl
mov
or
xchg
outsl
mov
pop
mov
mov
push
loopne
test
jl
lds
xchg
push
and
jge
rolb
xchg
repz
jbe
push
popf
std
pop
popf
add
cs
jecxz
dec
cwtl
imul
lock
push
xlat
out
loop
pushf
jg
cltd
loope
mov
cld
fwait
gs
mov
aaa
adcb
popa
inc
inc
or
mov
adc
mov
push
subl
jge
int3
xchg
and
cld
mov
inc
nop
sub
cmp
outsl
push
sub
in
test
push
scas
jle
push
insl
mov
movsl
inc
outsb
leave
cltd
ret
stos
jno
inc
jmp
lock
mov
jnp
add
repnz
push
adc
push
mov
aam
mov
pop
out
scas
mov
outsl
out
mov
jnp
mov
inc
repz
cmp
addr16
ficoml
iret
outsb
iret
sub
gs
pop
leave
jp
ss
push
scas
cltd
inc
add
push
outsb
xor
and
and
aas
mov
or
xchg
aas
mov
xor
adc
out
lods
stos
scas
push
mov
shl
inc
aam
out
sbb
into
sbb
stos
cmc
cmp
mov
stos
lret
sbb
imul
lock
lods
pop
xchg
outsb
xchg
lret
push
cmpsl
mov
cmp
mov
lahf
dec
pop
inc
loope
scas
mov
rcll
mov
push
add
mov
pusha
xor
inc
xchg
push
lahf
inc
sarl
xor
rcrb
imul
stos
jo
adc
fwait
mov
ss
cld
imull
sbb
mov
fists
mov
imul
mov
stos
xor
push
fisttps
adc
xor
into
jns
repnz
push
popa
inc
repz
cmp
jmp
pop
sub
cli
sbb
aad
inc
std
inc
lock
lahf
and
mov
xchg
dec
jns
jne
lods
xchg
mov
jl
data16
popf
aad
sub
stc
in
test
into
inc
jno
enter
dec
ret
adc
outsb
sbb
jl
dec
fstpt
outsb
sahf
cmp
imul
scas
jmp
out
mov
outsl
pop
ret
stos
leave
pop
fisubrs
test
inc
repz
xlat
sarb
mov
inc
lods
aas
cmovne
dec
ss
jb
pusha
shlb
in
adc
cwtl
adc
cmp
sahf
lcall
ret
or
jmp
gs
es
fstps
pushf
inc
fisttpl
mov
je
fucom
ret
and
xchg
sbb
mov
pxor
cs
xor
sub
imul
jae
jmp
out
popf
aad
fstp
push
mov
push
pop
ret
outsb
mov
mov
xor
dec
adc
hlt
mov
pusha
imull
daa
insl
sbb
xor
std
fisubs
fisubrs
dec
out
popf
and
and
inc
je
shll
nop
loopne
hlt
and
stos
jne
jp
and
cmp
shlb
repnz
cld
stos
in
add
dec
mov
add
cltd
aas
aaa
inc
movl
cwtl
jl
push
mov
add
cld
cmp
dec
mov
negb
push
pop
jbe
pusha
pushf
add
dec
outsl
mov
and
jne
lret
hlt
sub
in
in
xor
mov
pop
or
repnz
mov
cmp
add
cmc
xor
push
cmp
in
mov
adc
push
cltd
lods
leave
test
lods
xchg
loopne
push
stc
adc
push
ljmp
or
pop
filds
push
ficomps
mov
in
cli
lahf
pusha
xchg
rol
popa
ret
dec
das
das
cmp
mov
xor
mov
aad
push
sub
or
pop
mul
sbb
shlb
add
mov
shll
xchg
test
xor
in
xor
sahf
inc
iret
or
shrb
mov
xor
and
and
cmp
jo
push
out
push
adc
aaa
adc
sbb
outsb
sbb
sub
mov
jbe
rorl
push
xchg
lea
jo
mov
xchg
ret
sub
pop
fadd
lock
enter
push
insb
adc
or
cmpsl
xchg
cmp
push
subb
in
imulb
fcoml
mov
test
stos
dec
cmp
fdiv
test
ss
lods
jg
xor
xlat
inc
mov
mov
cli
jmp
test
in
je
aam
popf
lret
add
int3
lods
and
dec
cmp
sub
jmp
xor
push
ljmp
xor
icebp
stos
dec
mov
loop
dec
or
mov
push
push
dec
jo
mov
add
add
xchg
lahf
cmp
leave
movsb
into
loopne
cltd
outsl
mov
dec
add
call
dec
jle
lock
shlb
push
or
adc
test
lcall
cmc
lods
and
pop
jg
pop
inc
ret
imul
sbb
mov
and
sti
int
sbb
sub
mov
ss
aad
xchg
lahf
xor
iret
repz
fldt
addr16
sub
lods
ret
divl
inc
dec
pop
iret
jmp
fildll
dec
mov
jnp
data16
out
cli
in
sub
xchg
nop
and
and
sti
mov
pusha
daa
xchg
mov
lahf
imul
xchg
imul
pop
pusha
mov
dec
jecxz
in
hlt
dec
pop
js
out
leave
mov
mov
cltd
inc
xchg
adc
add
aad
in
test
inc
rcr
push
jae
call
pop
lods
push
scas
xchg
dec
outsb
and
xor
shlb
loope
xchg
mov
push
jle
jo
pop
mov
sbb
movsb
out
arpl
jle
xchg
or
push
es
inc
xor
xchg
daa
and
cmpsl
xchg
andb
pop
mov
pop
jns
mov
inc
int3
cltd
out
or
test
sbb
in
bswap
jle
nop
nop
xchg
add
repz
push
es
dec
adc
pop
sbb
aaa
push
rcrl
inc
lock
xchg
fimull
ljmp
xchg
pop
inc
push
out
into
insl
iret
ret
cwtl
mov
addl
fdiv
sbbb
test
jge
lret
inc
std
jb
sahf
ror
xor
xchg
sar
add
push
int3
sarb
iret
cmp
es
ficoml
ljmp
ficomps
insb
call
iret
imul
and
imul
jne
cmp
jl
dec
mov
fdivp
cmp
popa
cmp
jnp
cwtl
cmpsb
xacquire
loopne
shlb
jbe
fsubr
mov
pushl
lcall
push
lcall
mov
rcr
pop
sarl
cmp
jb
pop
lds
push
sub
int
es
iret
in
in
xor
adc
stc
jno
lods
xchg
int3
pushf
lock
mov
aam
ret
pop
mov
mov
out
sbb
jne
or
aas
loope
sub
movb
push
jns
and
lea
mov
mov
jnp
jl
xchg
inc
mov
ret
mov
lock
fsts
mov
mov
adc
cld
out
xchg
loopne
mov
movl
in
dec
cmc
into
mov
inc
shlb
clc
pop
cmp
or
inc
lea
sbb
scas
fcmovnbe
out
sbbb
pop
out
lea
mov
mov
xor
mov
dec
pop
mov
adc
sbb
xor
jne
or
pop
mov
roll
stos
movsb
inc
je
xchg
push
xchg
insb
inc
cmc
fwait
mov
pushf
in
rorl
insl
dec
leave
xchg
aaa
in
test
add
add
push
stos
fcompl
daa
jecxz
add
mov
lock
add
lret
cld
or
das
mov
outsb
cmp
dec
pushf
daa
out
or
pop
cmpsl
shlb
or
stc
add
xchg
stos
in
mov
adc
jb
and
les
or
lds
test
or
inc
and
push
push
aad
inc
into
xor
mov
cmc
cmp
mov
sub
sbb
cmpsl
cli
arpl
loopne
xchg
int3
hlt
xor
or
xchg
sub
mov
xchg
lds
xchg
mulb
testb
cs
add
cmp
cmpsl
rorb
rcrb
and
cmp
sarl
inc
mov
repnz
pop
dec
jo
jp
jle
cmp
lods
es
xor
outsb
sub
push
push
jo
rol
in
cmp
cld
xor
fsubr
jbe
xchg
sub
xor
outsb
or
or
add
jae
notl
mov
inc
mov
xchg
dec
stos
add
ljmp
mov
lcall
pushf
sub
mov
arpl
inc
in
xor
and
ficoms
jbe
jns
fsubr
push
shr
and
test
mov
iret
scas
ja
jp
sub
cmpsb
aam
ljmp
push
imul
mov
adc
in
gs
mov
cs
data16
mov
xorl
mov
inc
insl
ljmp
xlat
sub
push
jo
xchg
icebp
repz
int3
pop
sbb
xor
sub
ds
inc
push
das
daa
xor
inc
scas
hlt
test
adc
mov
mov
xchg
or
mov
into
dec
test
clc
sbb
sub
mov
andl
das
mov
xor
sbb
ret
repz
fisttps
pop
cmp
adc
cmp
pop
push
mov
mov
push
push
mov
in
adc
add
out
arpl
jae
aas
stc
ret
out
xor
in
loopne
or
inc
and
xor
out
data16
mov
jp
xor
mov
adc
lds
xchg
or
popf
fnstsw
push
popl
pop
or
cmpsb
xor
outsb
scas
xchg
inc
loope
aas
or
sbb
sbb
jae
shl
xchg
les
cmp
push
lea
mov
repnz
and
mov
pop
insb
popa
and
pop
xlat
and
jbe
add
push
je
mov
fdiv
mov
jmp
cmp
sbb
mov
addl
inc
lahf
outsb
jns
jbe
fdivs
in
movsb
pop
inc
int
cmpsb
mov
cmp
test
mov
movsb
jnp
mov
mov
adc
fsts
ja
orb
push
loope
push
push
out
movl
lret
jmp
js
add
fwait
jle
dec
mov
mov
pop
imul
daa
pop
sub
push
push
mov
mov
test
dec
push
fistl
xchg
fdivs
cmc
stos
mov
leave
jecxz
and
jno
jne
out
pop
sar
loopne
jo
xchg
xchg
out
mov
aaa
dec
xchg
fcoml
test
jb
add
jae
sbb
cwtl
ds
inc
cmc
adc
mov
outsb
cs
scas
fbstp
lods
pop
ss
cmpsl
das
mov
cmp
cltd
lcall
xchg
push
mov
aaa
pop
test
inc
sbb
and
lds
test
clc
mov
inc
mov
in
sti
lea
and
add
mov
arpl
xlat
jb
push
jnp
dec
in
ret
sbb
sub
shll
add
jmp
outsb
jge
ret
loop
in
enter
push
cs
dec
sbb
rorb
dec
or
xor
ret
mov
sub
jl
fisubs
jecxz
imul
mov
mov
pop
lret
test
bound
add
xchg
hlt
cld
and
cli
out
adc
xchg
cwtl
hlt
out
in
push
addl
iret
xchg
pop
jl
xchg
test
int
loopne
cmp
inc
or
cld
pop
push
inc
adc
pop
shrb
jo
sbb
mov
mov
leave
pop
je
jmp
push
inc
xchg
stos
outsb
stos
mov
das
int3
or
xchg
mov
push
mov
mov
mov
lods
pop
mov
or
in
dec
sti
pop
xor
pop
cmp
cld
jns
pop
push
mov
mov
psadbw
dec
lahf
mov
mov
movsl
sub
pop
daa
push
push
outsb
loope
clc
faddl
je
mov
imul
loope
pushf
filds
loop
pop
xchg
call
inc
mov
jl
je
xor
out
lock
sbb
fs
mov
mov
jno
inc
in
adc
add
mov
ja
test
and
stos
jecxz
mov
testl
mov
fldl
pop
shl
fadds
mov
adc
lret
adc
cmpsb
movsl
fincstp
test
xchg
ret
lods
jp
mov
pusha
jo
aad
xor
pusha
cld
scas
inc
mov
rorb
mov
sbb
cltd
push
in
xorb
sbb
stos
sahf
pop
fwait
les
lods
pop
xchg
je
sbb
pop
enter
mov
jp
sub
mov
and
mov
int
jo
xor
rcrl
loope,pt
into
cmp
jbe
ds
mov
mov
pop
or
into
es
and
dec
sbb
cmp
xorl
addl
sbb
lea
daa
cmp
push
nop
lcall
xchg
mov
imul
or
das
sbb
sbb
ficompl
cwtl
cli
and
enter
leave
mov
xchg
xchg
mov
pop
dec
lret
popa
sbb
mov
hlt
mov
jbe
pop
into
or
rolb
pop
rorb
scas
mov
push
in
lea
push
fadd
imul
sub
xlat
cmp
icebp
ror
test
jne
mov
outsb
aad
es
fidivrs
hlt
in
xchg
lcall
mov
sahf
sub
jmp
lcall
fwait
pop
popa
outsb
ret
iret
xor
int
and
sbb
mov
cmp
adc
pop
xchg
jp
bound
jmp
fnstcw
je
jp
push
popf
and
xchg
jbe
cmp
mov
dec
pop
sti
push
popf
and
add
in
das
aaa
pop
bound
lcall
jmp
lret
push
fadd
lock
pop
movsl
inc
outsl
stos
dec
add
mov
mov
or
subl
inc
fcmovnu
mov
xor
push
aad
nop
or
xchg
repnz
lcall
ret
sub
push
enter
or
xor
xchg
test
push
pushf
cmpsb
inc
jp
jg
mov
xchg
cwtl
es
xor
mov
popf
jo
imul
add
jle
inc
test
adc
cli
inc
int
outsl
in
stos
sahf
jno
push
jae
xor
cmp
jno
out
sbb
push
aam
outsb
lods
pop
adc
sarl
xor
addr16
testb
fistpll
dec
addl
in
dec
pop
fs
inc
jle
rorl
mov
push
repz
fldenv
or
inc
shll
repz
popf
dec
ljmp
movsb
sahf
jge
jo
cmp
push
mov
iret
in
push
sub
pop
mov
push
xor
jb
or
arpl
xor
inc
icebp
mov
adc
adc
xor
mov
out
imul
rol
or
into
xchg
mov
mov
cli
push
rcll
ficompl
mov
mov
pop
out
xor
and
out
scas
or
adc
ja
out
enter
mov
out
movsb
loopne
iret
mov
mov
roll
lcall
cltd
ret
lahf
insl
aam
cmpsl
adc
mov
or
cmp
aaa
mov
pop
or
in
dec
fnsave
xchg
xchg
scas
push
lcall
cmpl
les
pop
pop
xchg
test
jle
shrl
stc
mov
jl
shll
lret
ret
mov
adc
inc
jb
pop
sbb
mov
imul
lock
cmp
xor
adcl
sbb
das
and
pushl
imul
add
or
mov
pop
jge
cld
inc
orb
add
movsb
push
and
outsl
in
jns
jo
iret
je
pop
ficompl
pop
scas
cmp
jno
xchg
add
fldenv
repnz
shll
aam
cmpsb
ret
add
fnstenv
enter
xlat
rolb
movsb
ret
lods
lahf
test
inc
and
loope
out
inc
add
fidivrl
and
mov
or
lods
xor
shll
xchg
scas
sub
cmp
pop
xchg
push
or
and
and
movsl
das
or
popa
xor
in
lods
in
push
push
int
pop
cmc
mov
ljmp
mov
pop
popa
mov
mov
lret
pop
push
and
push
popa
sbb
clc
xor
or
addb
lds
test
mov
ret
or
and
push
test
nop
adc
xchg
inc
hlt
ljmp
inc
int3
adc
inc
shlb
xchg
out
rorb
add
int3
sub
pop
pusha
stos
fsubr
jl
roll
push
sbb
xor
ljmp
sahf
xchg
fdivrl
imul
aaa
xor
jp
rorb
sub
or
xor
mov
or
outsl
stos
or
outsb
xchg
push
jle
sbb
jg
leave
js
pop
sti
xchg
add
bnd
ffreep
push
iret
fstpt
jl
aad
cmp
inc
push
fwait
mov
out
jb
pop
pop
pop
imul
out
lods
cmp
pop
insl
mov
mov
fidivl
loope
fs
sub
arpl
in
jnp
xchg
push
sbb
les
lret
xchg
test
pop
nop
in
jmp
xor
mov
dec
add
mov
les
rcrl
inc
loope
fwait
inc
test
jle
lcallw
jmp
lods
in
shlb
fs
mov
jne
push
fisubs
sahf
mov
pop
cmp
xor
adc
ficoml
xor
fsubr
mov
xor
and
cmp
jg
in
rcr
sub
and
cli
jae
pop
rcl
mov
lods
jno
sbb
cmpsl
push
xchg
cli
fildll
or
and
pop
shrb
pusha
mov
movsb
imul
fnstcw
adc
add
sbb
out
pop
sbb
stos
js
fbld
scas
jne
shl
lock
push
xchg
fmuls
pop
test
push
jo
jb
inc
int3
and
sbb
jbe
inc
sahf
mov
pushl
fists
stos
inc
ret
shlb
xchg
clc
push
je,pt
dec
sub
fbstp
stc
inc
mov
ja
dec
sub
pop
clc
shr
outsl
push
ds
xlat
mov
push
pop
xchg
dec
and
mov
rolb
pusha
out
mul
sub
mov
iret
push
jne
or
bound
jle
inc
dec
mov
add
sub
pop
jle
mov
jns
lds
jle
stos
in
xor
sbb
push
dec
xchg
in
test
test
ja
and
sub
pop
jle
mov
faddp
outsb
stos
pop
xor
cmp
cmp
lock
add
add
mov
lds
jle
sub
adc
jo
lret
or
mov
outsb
out
xchg
icebp
pop
sbb
xor
push
loop
call
shlb
mov
in
shl
sub
dec
loope
xchg
jmp
fisubs
xchg
repz
daa
sahf
fwait
repnz
inc
pop
jns
in
ds
add
xor
or
aaa
xor
sbb
lds
push
xchg
inc
mov
push
outsb
enter
out
mov
fbld
std
sbb
xor
pushw
ret
xchg
dec
dec
xchg
shrb
lods
fisubrl
gs
add
xor
mov
in
sbb
and
decl
mov
pop
mov
jmp
cld
adc
pop
rclb
daa
sub
dec
sub
jmp
lahf
jnp,pt
inc
jle
in
mov
out
lock
in
jne
aas
xchg
loop
adc
dec
sbb
mov
push
lret
testb
sahf
sub
stos
lods
xchg
inc
rorl
mov
mov
mov
xchg
pop
xchg
cmc
lcall
inc
fnstcw
adc
sub
popf
mov
mulb
xor
popf
jmp
adc
js
jo
icebp
mov
enter
xchg
pop
cli
pop
stos
xor
mov
or
lret
mov
mov
add
mov
cmp
mov
cld
shl
icebp
push
int
and
mov
sbbl
xchg
inc
cld
hlt
cmp
insl
mov
inc
cld
adc
xchg
int3
mov
xchg
push
lret
sbb
sub
cmpl
cmc
mov
cmp
mov
pop
sarb
jno
adc
iret
xor
and
popf
push
inc
mov
in
and
nop
xchg
in
pop
sub
pop
xor
sahf
xchg
imul
insl
xchg
mov
lret
inc
sbb
inc
mov
xchg
popf
mov
into
idivl
sbb
out
imul
fs
flds
mov
test
xor
sarl
mov
mov
shll
lahf
fcompl
hlt
mov
cld
cmp
mov
stos
mov
sbb
jnp
sbb
xor
cmp
shl
adc
pcmpeqb
adc
mov
lea
int
addr16
lcall
fstps
loope
dec
xor
cld
pop
cltd
mov
stc
mov
pop
aam
mov
mov
dec
push
jmp
cmpsb
mov
push
mov
xlat
push
addr16
movsb
xchg
xor
mov
dec
imul
cmp
lcall
lods
cli
loop
testb
inc
cmc
aas
pop
inc
fdivs
push
sahf
cmp
inc
add
in
aaa
push
lret
xlat
leave
xor
xchg
mov
push
mov
inc
xchg
jl
cmpl
adc
pop
cmovns
out
fcoml
sbb
stc
sarl
push
cmp
out
mov
ss
xorb
stc
cmp
bound
inc
dec
xor
or
imul
push
leave
cld
mov
and
mov
sbb
out
mov
pop
push
adc
stc
loopne
stos
std
jo
out
and
enter
or
leave
stc
shrl
and
xor
fmul
mov
sbb
cmp
iret
xchg
mov
jecxz
gs
cmpsl
sub
sbb
fnsave
jge
add
orb
aas
out
adcl
xchg
push
dec
adc
sub
out
cltd
jno
ljmp
pop
jge
rcrl
andb
dec
add
or
stos
jno
std
test
stos
or
push
dec
inc
push
icebp
rclb
les
sub
jne
or
bound
mov
push
mov
jns
seto
in
das
jns
in
sub
in
add
pushf
push
xor
popf
xchg
mov
cmp
xchg
mov
imul
inc
or
icebp
sub
mov
in
cmp
fdivl
jg
enter
push
pop
push
pop
xchg
sub
pop
xor
xlat
mov
insl
int
xchg
fs
or
cmp
push
jmp
push
xor
in
push
mov
pop
clc
inc
test
sbb
jo
cmpsb
mov
cmp
and
int
mov
ret
call
lods
or
int3
jbe
es
sbb
stos
sbb
ljmp
push
mov
int3
loope
and
cwtl
rcrb
xchg
mov
mov
stc
jnp
mov
push
das
in
or
mov
insl
cmp
mov
xlat
loop
pop
sbbb
xchg
rcl
mov
jbe
add
sub
or
shll
lods
outsb
adc
ja
sbb
aaa
mov
sub
push
sbb
mov
jnp
sahf
mov
out
loop
mov
rol
add
cmc
lea
push
lods
adc
jbe
pop
dec
and
xchg
nop
ss
sub
jl
and
sub
cmp
icebp
sti
sub
add
lret
sbb
outsb
mov
call
push
sub
dec
adc
test
push
fwait
or
pop
fs
pop
sbb
in
sbb
inc
adc
mov
add
sbb
jbe
stos
shll
lods
xor
in
roll
pushw
fcoml
jb
push
in
ds
rclb
or
adcl
shll
cmp
add
inc
addr16
pushf
jb
rcrl
mov
pop
mov
cmp
popa
repz
je
inc
std
jb
and
cmpsb
pop
pop
insb
adc
in
jo
inc
push
inc
pop
pop
cmpsb
or
xor
loopne
push
xchg
add
das
stos
add
dec
xchg
call
add
aas
lahf
in
mov
dec
cmp
xchg
stc
pop
jne
jecxz
test
js
mov
sbb
xchg
mov
inc
jne
jne
xchg
adc
jb
xor
xor
insl
addb
push
addr16
scas
iret
leave
sbb
sub
mov
jno
cmp
inc
push
loopne
cmp
mov
and
aaa
test
aam
dec
loopne
and
outsb
and
test
inc
icebp
test
push
dec
mov
xlat
dec
std
js
push
mov
stc
adc
fcomps
int3
add
cs
sub
jnp
mov
xor
cmpl
jg
and
sbb
nop
mov
xchg
testl
out
test
cmp
les
inc
cmp
test
out
xchg
cmp
cli
aad
dec
out
outsb
int3
and
and
sub
mov
test
or
js
xor
mov
and
cld
sub
pushf
dec
int
je
mov
fs
lret
pusha
out
add
jnp
fistps
cmpsb
dec
and
je
pop
mov
mov
setns
inc
dec
jge
adc
or
aam
popf
aas
xchg
mov
ret
or
aam
arpl
jp
inc
cmp
loopne
sbb
jge
add
add
mov
cmp
push
mov
or
xor
lea
orb
mov
flds
flds
loopne
and
or
mov
inc
mov
std
into
sbb
push
jbe
clc
xlat
mov
stos
lods
sbb
loopne
or
cmpsl
pop
aam
out
out
and
xchg
jl
orl
ljmp
fcomip
dec
jno
adc
repnz
xchg
jle
das
cmp
or
lahf
into
shlb
cwtl
inc
ret
xor
cli
xchg
enter
mov
push
dec
enter
movsb
roll
dec
push
xchg
xor
push
outsl
adc
and
shlb
xor
das
lods
outsb
ss
push
mov
mov
bnd
fstl
sbbb
inc
sub
push
pushf
fs
bound
pop
aam
int
pop
arpl
mov
pop
mov
repz
lods
adc
mov
cmpsb
adc
hlt
bound
mov
and
out
leave
cmpsb
jmp
pusha
jb
jle
scas
das
or
cwtl
aad
out
and
xor
cmp
jp
movsb
or
lods
test
cmp
sub
sub
ljmp
pop
mov
or
adc
add
inc
push
gs
adc
pushf
stos
inc
sbb
loope
push
movsl
or
fisubs
jae
dec
std
mov
jo
mov
jl
cmpsl
repnz
mov
mov
xchg
add
mov
pusha
cmp
ljmp
fdivrl
scas
popf
add
fisttps
in
outsb
xchg
adc
sarb
sbbb
pushf
sbb
sub
cli
sbb
insb
cmp
mov
rclb
jge
add
jmp
jecxz
in
dec
bound
push
xor
les
enter
xchg
and
push
push
xchg
rclb
orl
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
fildl
test
jp
addb
jne
lods
dec
or
das
sar
pop
stos
iret
sub
cmovs
movb
cmp
and
stos
dec
push
lcall
xor
test
outsl
call
mov
add
movsb
mov
fisubs
mov
jo
loopne
or
xchg
inc
dec
mov
gs
push
lods
into
popa
mov
cmp
mov
daa
inc
push
or
pop
movsb
inc
jb
imul
js
push
dec
lret
int
mov
loope
xor
sub
in
push
inc
pushf
pop
inc
lock
inc
movsl
test
sub
pop
jae
scas
jb
push
sbb
dec
imulb
xchg
sub
push
xchg
pop
cld
jg
xchg
gs
orb
movsb
xchg
xchg
mov
addr16
fsubr
dec
fwait
std
mov
mov
xlat
roll
mov
sbb
pop
pop
push
ret
inc
jbe
jns
or
js
andl
xchg
jle
mov
scas
xor
add
mov
pop
jmp
and
mov
lods
cmp
add
pop
outsl
shl
push
push
pop
push
aam
and
fdivs
xor
pop
pop
call
lods
mov
xchg
sbb
xchg
pop
or
icebp
js
mov
insb
add
loope
ss
jp
mov
frstor
jne
test
call
cwtl
daa
gs
movsb
clc
lret
mul
mov
push
scas
mov
or
arpl
push
sub
pusha
or
cmpl
sub
mov
cmp
aam
and
jnp
push
or
ret
mov
icebp
mov
aaa
mov
lret
ror
les
mov
popf
scas
dec
out
pop
fists
pushl
aaa
shr
lock
pop
fs
in
mov
pop
and
mov
cmp
shll
out
mov
mov
inc
jmp
frstor
ret
xchg
call
add
mov
xchg
mov
popf
mov
insl
sbbl
jns
cmp
test
cmpl
push
pushf
mov
pop
sub
mov
cltd
mov
call
sbb
dec
adc
les
pinsrw
xchg
sbb
or
std
in
fiaddl
jbe
dec
fwait
jno
in
sbb
repz
fisttpl
scas
cmpsb
cli
mov
sub
hlt
movsb
repnz
insl
xor
adcb
inc
mov
sti
cmp
push
push
jb
mov
fdivrl
cltd
push
xor
pop
pop
daa
inc
jmp
aad
push
mov
sti
cltd
cwtl
adc
jae
ret
mov
mov
mov
fbld
push
icebp
mov
cltd
dec
gs
add
ret
stos
add
or
stos
stos
mov
fimuls
pusha
movsl
pop
ret
icebp
scas
in
xchg
loop
pop
jg
negb
fiadds
xlat
cs
aaa
inc
clc
stos
test
jo
jae
sub
aad
jne
dec
adc
mov
jle
mov
sbb
lock
xchg
xchg
jno
jno
iret
xor
add
mov
xlat
jl
insb
cs
mov
notl
ret
cmp
xor
add
adc
movsb
sub
mov
cmp
shlb
ficompl
pop
cmp
pop
xorl
aad
cmp
mov
fisttps
out
inc
sbbl
push
cwtl
cld
dec
mov
add
popa
leave
lea
test
push
mov
int3
adc
orb
gs
ss
jle
aam
es
mov
pop
push
push
sub
lods
rolb
pusha
clc
call
repnz
fisubl
stos
loope
mov
cmpsl
outsl
je
lcall
in
shll
mov
out
cmc
jnp
push
and
mov
xchg
fisubs
cmp
xchg
lds
cmp
sbb
leave
dec
sbb
jl
mov
jmp
jns
stos
and
dec
minps
inc
ss
xchg
adc
insb
lods
cmpsl
mov
test
incl
pop
xchg
jg
mov
outsl
xor
pop
push
pop
ret
scas
cmpsb
sub
or
adc
imul
sbb
aas
lcall
fisttpll
xor
and
sbb
in
aas
adc
inc
mov
insb
inc
xor
into
dec
ret
dec
out
in
xor
push
xor
mov
lret
cmp
loopne
daa
mov
fstpl
jns
inc
es
mov
and
aaa
push
jb
or
rclb
jo
ja
fdivr
jmp
aad
ss
adc
pop
insb
fildl
mov
std
inc
leave
jg
mov
cwtl
mul
push
call
insb
mov
fisttps
sub
xchg
mov
add
popa
sbb
imul
push
add
inc
ss
inc
dec
pop
mov
xor
pop
jmp
cmp
lret
or
jmp
fsts
jnp
push
pop
in
aad
das
hlt
mov
sbb
sbbb
mov
test
mov
xor
outsb
frstor
dec
xor
mov
imul
ss
orb
cltd
cmpsb
shll
sbb
or
inc
dec
add
fidivl
xor
add
push
mov
and
clc
std
test
lret
in
mov
cmp
mov
dec
add
xlat
xchg
cltd
popa
in
in
das
pusha
fstl
or
pop
pop
mov
push
jl
mov
fistpll
inc
cmp
xor
push
loope
add
or
cmp
push
lea
out
mov
test
pop
and
movsl
push
popa
adc
jmp
pop
cmpsb
inc
les
pop
jno
xchg
mov
pop
mov
mov
xchg
and
or
nop
int3
xor
mov
call
cmp
and
and
sahf
out
cmc
ss
jns
xlat
pop
xchg
nop
or
out
push
mov
or
dec
inc
and
and
sbb
xchg
repz
ds
aam
insb
pop
cmp
jne
cmpsb
mov
gs
cmc
mov
out
int3
andb
sub
inc
mov
inc
mov
iret
lea
adc
inc
aas
pushf
cs
mov
lcall
fbld
aam
xchg
and
jnp
jnp
iret
fldl
xchg
jae
gs
sbb
jb
mov
fs
add
ficoml
aad
js
mov
ljmp
add
add
hlt
inc
ret
sti
andps
mov
hlt
shl
outsb
jmp
jno
sahf
std
lcall
fisubrs
jp
addl
outsl
mov
fmul
roll
aas
cmc
mov
push
mov
push
add
or
or
mov
jne
mov
cmp
loope
fildl
in
insl
xchg
push
ret
shlb
sub
mov
xor
lcall
cmpsb
bound
pop
inc
pop
pushl
mov
les
int3
jmp
or
adcl
ljmp
mov
or
repz
enter
rol
xchg
jp
mov
xchg
movsb
mov
jno
cltd
out
jbe
cmp
mov
call
add
jns
das
push
dec
jno
mov
stos
stos
jge
inc
xchg
test
enter
enter
or
sbb
fst
lods
jl
je
mov
jecxz
mov
sbb
fnsave
flds
lea
aaa
push
pop
jle
mov
daa
fnstsw
push
scas
ret
or
pop
dec
shl
mov
lods
in
sub
stos
sub
mov
ljmp
fldenv
imul
insl
and
mov
push
push
aad
mov
dec
inc
mov
cmp
cltd
xchg
cmp
subb
aas
jb
hlt
int3
fnstenv
xlat
cmp
das
jmp
pusha
xlat
sbb
in
dec
cwtl
mov
pushf
test
stos
adc
or
inc
xor
outsb
push
add
pop
add
mov
or
subb
sti
sbb
jo
adc
fnstcw
enter
pop
dec
cmp
push
cmpsb
xor
leave
outsb
stos
jnp
mov
loopne
rorb
lods
mov
pop
mov
in
shlb
jnp
xor
sub
lea
ljmp
lahf
xchg
push
sbb
data16
add
xor
jno
int3
mov
divb
out
ret
ljmp
and
data16
fisttps
mov
insl
dec
rcll
imul
xchg
sbb
ss
xor
mov
push
hlt
sbb
add
mov
mov
out
sub
lds
stos
enter
adc
iret
sarl
pop
push
xor
data16
shrb
mov
push
loopne
cs
push
xchg
setbe
out
repnz
popf
fisubrs
xor
fs
push
ficoml
push
inc
cmpsl
in
leave
jns
insl
mov
xor
adc
fsubl
lretw
shll
dec
mov
jae
mov
lock
std
inc
movsl
arpl
push
outsl
sbb
movsb
repnz
add
inc
mov
mov
xchg
dec
add
in
int3
xor
cmpsl
mov
and
push
inc
sub
les
mov
or
rcr
pop
and
lods
add
cmp
bound
adc
jp
sbb
jno
push
and
iret
repnz
addr16
out
test
iret
or
jge
aam
into
cmp
daa
add
lcall
inc
mov
fsubrl
sbb
mov
notb
pop
pop
push
adc
mov
ret
sbb
add
inc
mov
fildll
mov
push
shlb
rorb
mov
shrb
pop
xlat
add
out
nop
fdivrl
int3
push
jge
pop
inc
jmp
test
mov
leave
adc
mov
mov
ss
xchg
sub
les
and
sub
and
out
roll
shrl
dec
add
and
inc
mov
mov
dec
and
inc
pop
push
aaa
pop
jge
cmp
pop
or
repz
jmp
jns
imul
pop
sub
mov
stos
push
in
dec
fimuls
push
cltd
out
cwtl
push
mov
int
lret
mov
xor
dec
sub
mov
daa
lock
js
rcrb
cmp
jmp
leave
test
and
imul
popa
in
dec
mov
pop
pop
out
nop
rolb
pop
out
inc
shlb
push
in
jae
adc
testl
pop
cltd
mov
rclb
xor
mov
inc
or
push
lods
sub
jmp
out
push
fsts
sbb
and
pop
pop
jnp
pop
inc
dec
adc
and
mov
leave
sti
pusha
repnz
sbb
shrb
aaa
lds
insb
xchg
sub
rcll
xchg
pop
pop
dec
mov
adc
jo
or
mov
mov
or
cltd
dec
xor
push
out
adc
ljmp
test
das
cltd
ja
xor
sar
jle
xor
mov
lret
pop
xor
mov
bound
dec
mov
mov
add
and
arpl
stc
jbe
mov
cmp
fstps
cltd
sbb
push
xchg
in
lods
popf
xor
loopne
rorl
mov
jl
test
in
sub
mov
out
xchg
add
adc
or
sbb
cld
lcall
icebp
ljmp
popf
inc
lods
rclb
mov
mov
mov
mov
and
jl
pop
and
mov
das
ret
int3
inc
push
pop
aaa
sahf
mov
mov
jae
or
push
daa
mov
out
lds
aam
cltd
lret
out
adc
dec
outsl
popa
push
xor
dec
jae
loope
mov
in
mov
aas
jl
mov
sahf
pusha
adc
je
test
insl
stos
int
mov
jge
cld
lods
les
js
push
adc
lret
mov
jp
movsl
ret
push
fnsave
sti
enter
push
push
std
mov
xchg
cmc
mov
xchg
arpl
movsb
popf
mov
lcall
gs
sub
cmp
xchg
rcrl
stos
xchg
sbb
cmp
pushf
mov
out
lcall
dec
jnp
or
xor
adc
pop
xor
dec
xchg
aaa
ljmp
idiv
jecxz
jbe
cmp
mov
mov
xor
nop
pop
inc
adc
or
in
out
outsl
int
mov
add
dec
test
mov
fisttpl
lea
insl
or
inc
push
scas
push
cmp
out
mov
mov
scas
les
inc
inc
pop
mov
ud0
lds
ja
in
and
in
jnp
loope
lret
mov
pop
dec
and
cmp
clc
xchg
int
push
jg
es
icebp
subb
ljmp
jbe
repz
pop
mov
jmp
daa
sbb
ja
insl
les
pop
pop
movsb
adc
rcl
fsubr
mov
fidivs
mov
lret
outsl
dec
cmp
and
sbb
sbb
test
loope
loopne
lret
cmpsb
lds
push
addr16
nop
sti
addb
in
cmc
insb
inc
aad
hlt
iret
mov
xor
movsl
ja
loopne
and
and
les
icebp
popa
sbb
and
push
dec
je
sbb
sarl
fsubrp
dec
sti
arpl
adc
jne
xor
icebp
xchg
loop
fdivl
incl
jae
jbe
daa
das
cmp
das
enter
icebp
adc
inc
inc
mov
and
pop
fs
inc
stc
ret
cmp
adc
pop
add
ds
out
mov
xchg
lret
hlt
inc
xor
movsb
inc
lcall
mov
mov
loopne
fistl
repnz
shl
adc
xor
stos
and
outsb
scas
mov
lea
jb
movsl
inc
inc
movb
pop
jp
clc
xor
insl
pop
lea
xor
inc
ret
data16
pushf
mov
ds
xchg
push
jno
cmpsl
inc
dec
dec
mov
cmp
mov
into
jg
lret
push
cmp
out
inc
jno
mov
test
cmp
cmp
add
pusha
pop
mov
imul
mov
stos
fistpll
mov
in
pop
clc
and
test
nop
jno
fnsave
jo
pop
loope
push
adc
sbb
jns
pop
fisubl
jns
neg
dec
pop
fdivs
cmpsl
push
fwait
out
and
in
cmc
push
inc
xchg
jb
and
pop
pop
jle
cmp
insb
repnz
cmpsl
inc
mov
out
mov
pop
sti
loop
ss
pusha
leave
fprem
mov
jne
xorb
test
scas
movsb
push
test
stos
mov
mov
ja
rclb
loope
add
popf
imul
sbb
cld
push
movsb
jb
cwtl
inc
enter
cmc
hlt
lret
jmp
movsl
push
lods
cmpsl
or
or
outsb
mov
fimuls
push
sub
push
and
leave
aaa
aaa
shl
fisttpl
and
cmpsl
and
cmp
aad
test
pop
mov
test
mov
pop
imul
jp
inc
mov
mov
mov
sbb
xor
mov
popa
lods
mov
add
xor
mov
in
cs
mov
scas
cmovbe
pop
add
push
inc
pop
push
pop
mov
mov
jno
loope
lods
xor
orb
push
dec
or
cmovle
and
sbb
lcall
cmp
mov
adc
lcall
or
lods
add
xor
sub
std
out
cltd
movsb
fldl
orb
loopne
push
add
in
mov
test
mov
cmpsl
xlat
inc
jb
call
outsl
pop
jmp
adc
lahf
sub
dec
cltd
subl
dec
movsl
imul
mov
fnstenv
cltd
pop
sbb
inc
pop
adc
dec
test
add
loop,pn
out
js
lods
sbb
cmpb
push
dec
jae
arpl
aad
ret
dec
mov
fists
stc
and
xor
pop
xchg
push
shl
ljmp
test
shr
lea
in
push
hlt
enter
mov
add
jb
inc
lret
setge
hlt
push
incb
mov
sub
push
pop
mov
pushf
pop
add
psubd
mov
mov
pop
pop
mov
clc
push
dec
stos
fsubrl
mov
and
ret
icebp
xchg
cmp
js
test
dec
mov
gs
xchg
dec
adc
fdivl
xchg
sub
les
cmp
gs
or
shrb
ret
stos
jle
fwait
cmp
jg
xchg
or
add
jb
inc
popl
popa
addr16
push
std
sbb
scas
push
arpl
pusha
arpl
lods
lahf
stos
outsl
cmp
inc
pop
pop
stos
add
in
add
mov
mov
push
xor
nop
push
xchg
nop
add
dec
fmul
imul
mov
push
popa
in
sbb
dec
mov
shrb
ret
xor
stc
or
or
mov
inc
pushf
pushf
xchg
cmpsl
mov
loop
add
sbb
daa
sub
jo
fcmovne
pusha
out
xchg
push
pop
orl
aas
jno
cmp
pop
test
pop
or
cmpsl
push
jo
mov
in
pop
dec
fs
pushf
repnz
out
jno
in
fstps
mov
sub
inc
fwait
std
pop
inc
insb
add
fs
jbe
lods
pop
jbe
jno
xor
loopne
js
je
mov
sub
jp
data16
push
dec
push
hlt
popa
insb
jb
mov
xor
pop
test
lods
xchg
push
mov
xor
notb
xlat
test
ja
ret
push
pop
push
push
ss
les
cmpsl
mov
and
cwtl
pushf
fbld
sub
dec
nop
xor
jae
jbe
bound
push
xchg
inc
push
and
add
cs
sub
push
movsl
pop
sub
jmp
loop
cmp
jge
subl
bound
bt
fmul
xchg
push
mov
notb
jnp
incl
add
mov
lahf
pop
je
test
data16
pop
fisttpll
jb
cmp
mov
or
in
xchg
push
test
sub
pop
dec
dec
pusha
or
jl
in
mov
xor
sub
out
mov
enter
push
aam
ss
or
jge
dec
je
leave
cmp
sbb
dec
pop
and
sub
cmp
inc
push
jecxz
push
cmpsb
xchg
push
pop
aad
subl
out
and
fsubs
sub
jg
fisubrs
inc
lahf
push
mov
sub
jg,pn
daa
pushf
sbb
cmpsb
lret
ret
mov
mov
adc
int
sbb
mov
outsb
mov
xchg
test
inc
and
sbb
jb
or
sarb
add
dec
sbb
push
mov
aad
sub
cwtl
pushf
or
cmpsl
cmp
call
idivb
ljmp
add
das
cltd
adc
adc
adc
enter
jae
cmc
cld
push
cli
xor
sar
mov
xchg
js
call
jbe
mov
xchg
lea
mov
cmp
jae
xchg
sbb
mov
mov
sbb
mov
xchg
dec
mov
jge
repnz
mov
lea
push
dec
test
inc
scas
je
jno
arpl
cmpsb
lret
stos
imul
pop
mov
cltd
pop
das
xor
push
sbb
cmp
fwait
std
fs
sbb
or
xchg
rolb
inc
push
into
in
push
cmp
gs
icebp
add
clc
xor
mov
test
pop
ds
aam
dec
into
xor
insl
gs
cmpb
cmpsl
scas
lahf
ret
out
cmp
scas
lock
ffreep
insl
repnz
iret
icebp
mov
into
std
xlat
into
adc
psllw
dec
mov
pop
test
lahf
inc
jmp
xchg
nop
test
insb
fistpll
jl
aam
adc
inc
pop
shll
sub
int
mov
dec
repnz
and
pop
popa
xlat
insl
push
pop
pop
jno
rcll
push
xchg
daa
in
dec
jmp
add
cwtl
or
pop
into
jbe
push
sub
in
lcall
scas
cwtl
shr
shlb
cmp
fsubrs
insl
sub
ret
scas
in
lret
pop
jbe
iret
jp
add
daa
mov
adc
insl
xor
add
ja
in
mov
rorb
xor
outsl
cld
jne
pop
dec
jp
mov
fisubrs
sub
mov
mov
fisubs
adc
jne
jbe
shll
pusha
sub
sbb
pop
pop
xchg
mov
clc
xchg
popf
xor
sbb
jle
movaps
jns
jge
inc
in
lret
popf
test
cld
pop
sub
and
js
ss
mov
and
pop
jle
mulb
cmpsl
insb
aas
or
xlat
jo
loopne
dec
inc
inc
jns
inc
jge
and
ljmp
xchg
js
idivl
jns
dec
dec
addr16
test
cmp
pusha
jb
xorb
sub
stos
sub
icebp
sub
jl
push
xchg
out
pop
repnz
shr
and
repz
iret
int3
pop
cld
add
into
jecxz
aaa
push
xchg
fwait
rcl
adc
adc
sti
cmp
fwait
push
jmp
subb
gs
add
out
sub
cwtl
shlb
push
call
test
sbb
xorl
sub
adc
xchg
mov
inc
and
mov
aam
shr
push
mov
popf
test
jb
int3
mov
pop
aas
sbb
push
cmp
cli
insb
mov
jecxz
into
and
add
sbb
fistps
pusha
stos
jb
sbb
inc
push
push
push
popa
cmpsl
or
in
xor
into
in
popa
sub
clc
sti
push
out
fsubrp
mov
les
insb
insb
out
movsl
jge
std
jns
pop
repnz
add
enter
lods
inc
fwait
inc
loope
aad
mov
fdivrs
mov
sub
les
hlt
fidivrs
test
cld
jp
stos
inc
test
lock
rcrb
or
jp
and
fbstp
xorl
mov
flds
inc
scas
push
and
std
mov
or
std
cmp
jbe
push
in
or
xor
sbb
mov
ret
ja
add
repz
in
xor
dec
mov
popf
xchg
arpl
jne
insb
push
jmp
in
lcall
pop
push
sub
pushf
cmp
scas
mov
inc
sub
cmp
xchg
mov
icebp
imul
inc
outsl
scas
cli
enter
add
inc
andb
daa
sub
fdivrl
sub
lea
call
push
out
out
in
cmp
mov
ret
sub
mov
sbb
jl
test
rclb
push
sub
or
ret
push
rcll
adc
mov
popa
lds
xor
push
mov
into
pushf
add
jmp
dec
in
mov
insl
jne
pop
jno
iret
ret
xor
xchg
pop
adc
ss
push
fimull
imul
movsl
rcrl
testl
nop
jb
adcl
pushf
sbb
ret
cs
inc
das
inc
out
sti
lret
xchg
sub
mov
add
leave
stos
out
leave
pop
pop
out
xchg
jne
xchg
xchg
fwait
cmp
and
sbb
or
bound
jno
cpuid
inc
cmpsb
xor
lea
mov
fildl
sbb
mov
pop
out
add
gs
push
sahf
stc
ja
out
jb
sbb
cltd
stos
mov
pop
xchg
mov
pop
stos
jno
mov
js
adc
mov
mov
fistpll
xor
xor
orl
push
iret
lret
cmpsl
inc
mov
call
xor
jo
or
daa
pop
cmp
aam
or
cmp
push
pop
pushf
cmp
jne
lcall
and
loope
loop
jo
cli
adc
std
fldcw
leave
mov
mov
mov
mov
cld
insl
jno
not
adc
outsl
pop
push
inc
pop
clc
sub
mov
add
jp
das
cmc
test
mov
or
push
adc
in
lahf
and
enter
nopl
ja
gs
lods
inc
lods
mov
xchg
bound
lcall
popf
ret
icebp
fwait
jne
out
pop
or
push
iret
ds
int3
inc
mov
and
ret
sbb
lds
ss
mov
sbb
mov
repz
es
imul
add
jb
mov
and
out
push
adc
cmp
ss
enter
je
out
xchg
ret
jle
push
cwtl
xchg
mov
mov
or
xor
cmp
cmp
or
push
nop
adc
pusha
fdivrp
and
xor
cld
xchg
inc
int
or
or
add
fisttpll
rcl
popa
cs
scas
xor
dec
les
add
imulb
fnstenv
pop
lods
movsl
arpl
adc
adc
shrl
mov
andb
push
hlt
test
cmp
jb
jo
je
push
mov
gs
jg
mov
xlat
and
lret
cwtl
sti
call
pop
mov
popa
adc
mov
mov
xchg
stc
cli
xchg
jns
mov
lahf
jbe
sub
xlat
outsl
sub
cwtl
jbe
push
push
dec
xor
jecxz
insl
mov
jo
daa
scas
sbb
mov
cmpsb
xchg
outsb
pop
ret
nop
pop
lods
dec
fsts
mov
mov
bound
xchg
and
xor
push
cmpsl
hlt
cmp
xchg
dec
adc
xor
hlt
scas
out
out
test
adc
insl
cmpsl
arpl
or
test
push
mov
cmpsb
sti
ret
mov
cmp
mov
xor
sahf
inc
inc
inc
dec
popa
scas
fsub
leave
out
adc
xor
jne
push
mov
jae
xchg
push
cmpsl
insb
or
add
test
or
mov
lret
cltd
jl
xchg
mov
sbb
mov
int
xor
inc
sub
test
xor
icebp
jg
jle
xchg
xchg
insl
test
inc
dec
aaa
ja
aam
cmpsl
bnd
daa
push
imul
bound
lea
sahf
fsubrs
repnz
int
xchg
inc
jne
push
test
mov
xor
inc
xlat
adc
test
popa
sahf
pusha
add
fnstenv
jle
icebp
push
inc
pop
or
leave
mov
sub
insl
mov
lds
push
and
rorl
sbb
add
sbb
cmpsb
dec
js
sub
call
leave
xchg
stc
pop
nop
mov
sub
xchg
cmc
mov
jmp
into
popf
in
mov
hlt
and
jns
lods
push
shl
mov
enter
inc
or
or
fmul
dec
imul
lock
cmp
scas
dec
pop
ljmp
int
inc
mov
push
test
in
mov
lahf
jae
lock
jne
inc
or
pop
out
pop
into
add
cmp
inc
cwtl
cmpsb
lcall
push
or
aaa
test
mov
dec
dec
in
out
mov
sbbl
adcl
data16
outsw
ljmp
mov
cmpsb
imul
jecxz
loop
push
fisttps
movsb
movsb
mov
pushl
fistps
test
iret
mov
pop
dec
jecxz
jnp
lods
in
xchg
fmul
ljmp
mov
sahf
loop
xchg
jno
rcl
cltd
dec
mov
xchg
in
out
mov
pop
in
xchg
test
outsb
cmp
sub
cmp
or
mov
sub
dec
xchg
pop
add
cmp
jl
in
jmp
fsubrp
and
out
pushf
in
loop
sahf
adc
mov
adc
rol
sbb
push
sub
dec
xchg
cs
pop
decl
jg
rol
stos
mov
pop
out
into
push
mov
mov
loop
imul
out
ljmp
fs
cmp
push
sahf
loop
add
mov
imul
gs
dec
testl
stos
rcrb
sbb
mov
mov
test
clc
mov
gs
mov
roll
aaa
ja
adc
pop
and
push
sub
pushf
xchg
mov
or
scas
mov
xor
add
sbb
adcl
int
push
bound
xchg
jmp
inc
in
xor
fcomip
mov
push
mov
ror
sbb
pop
pop
mov
scas
dec
rcrb
sbb
xor
ljmp
aaa
inc
out
icebp
pop
push
adc
inc
imul
jne
mov
leave
push
mov
nop
or
pop
orb
pop
into
jnp
rcrb
xchg
and
lods
imul
xlat
mov
movsl
sub
out
mov
sub
inc
daa
jne
lea
push
aas
or
mov
aaa
sahf
xor
mov
aad
mov
cld
fidivrl
xchg
inc
shlb
mov
add
push
inc
jg
inc
sbb
cmpsb
aad
iret
adc
and
push
je
sub
jbe
add
jnp
jge
out
inc
pusha
and
cmpsb
shll
cmc
popf
loopne
jae
inc
mov
dec
movl
inc
ret
out
je
xchg
mov
mov
jp
jle
in
dec
cmpsl
lret
pop
stos
cli
jns
lds
cmpsl
sahf
add
pop
sti
mov
jle
out
dec
negl
lret
mov
mov
aas
pop
jo
push
mov
adc
xor
and
mov
add
mov
hlt
je
je
daa
es
push
xchg
outsb
js
mov
jno
xchg
xchg
or
sti
shlb
mov
lret
arpl
test
pop
sub
sub
jo
jno
loope
lods
xor
in
nop
push
dec
pop
aad
int3
in
fnstsw
std
aad
jnp
xor
mov
or
dec
adc
adc
jp
inc
jmp
mov
push
add
pusha
xchg
sar
insl
cmp
test
incl
pop
lods
enter
lret
incl
mov
testl
jb
adc
orb
andb
push
and
sbb
mov
push
sub
adc
pop
pop
aaa
cmpsl
out
mov
inc
mov
adc
sbb
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
test
divps
test
int
notb
in
pop
lea
dec
and
cmpsl
sub
mov
mov
shrl
xchg
loopne
movsb
jno
test
insb
adc
sti
push
insb
testl
mov
in
test
xchg
mov
aad
sbb
xchg
jecxz
nop
and
add
push
mov
lods
rep
jecxz
das
mov
in
or
pusha
and
cmc
cld
sti
xor
cmc
and
repnz
les
inc
adc
sarb
mov
sbb
mov
xchg
mov
lahf
mov
mov
and
cld
or
fisubrl
ljmp
add
inc
mov
lock
xor
shlb
das
add
inc
rcrl
and
fwait
sub
rclb
xor
sub
sbb
in
enter
or
out
mov
lcall
sbbl
stos
mov
adcl
push
cli
mov
push
mov
jmp
pop
add
jmp
jg
loope
dec
add
inc
pop
push
adc
xor
adc
or
sbb
js
je
xchg
xchg
sbb
lods
sub
xchg
cltd
test
adc
les
pop
dec
test
cmpsl
sub
jns
mov
xchg
mov
xor
aaa
aad
sbb
aad
push
inc
stos
push
lods
inc
xorl
dec
dec
rolb
dec
int
test
pop
ret
fld
sub
jecxz
jo
aas
lret
fsubrs
pop
sarb
int3
inc
int
mov
jne
xor
rcll
imul
iret
push
push
loop
mov
mov
sbb
or
jl
aaa
xchg
inc
std
fstpl
in
bound
sbb
mov
fidivrs
xor
push
pusha
call
mov
aam
pop
insb
jo
add
lahf
clc
lock
push
and
popa
popf
arpl
pop
adc
rolb
ja
lret
addr16
pushf
pushf
pop
xchg
aas
stos
cmp
xlat
call
cmp
sbb
sbb
fidivrl
mov
test
aad
sbb
shll
sub
test
leave
movsb
int3
add
pop
nop
and
pop
xchg
fs
jg
inc
sub
adc
lods
inc
loopne
jmp
push
ja
jnp
ret
xor
mov
addl
push
aad
and
jns
je
fwait
sbb
gs
jg
addr16
pop
ret
and
cmp
inc
push
test
mov
subl
mov
adc
xor
jecxz
jecxz
pop
mov
sbb
xchg
push
xchg
push
cmp
dec
lds
mov
ret
roll
js
add
push
repz
int3
fsubrs
mov
test
insl
rorb
dec
fcomps
nop
insb
cmp
xor
dec
lret
or
fisubrl
call
rolb
mov
pop
lds
int
xor
cltd
scas
lcall
xor
sbb
sbb
push
lock
jle
ljmp
pop
adc
jge
icebp
inc
cmp
test
lea
jmp
stc
push
rcrl
out
movsb
inc
sub
xchg
mov
ss
stos
and
je
inc
xor
inc
aad
sbb
mov
cwtl
lret
mov
fnstsw
leave
in
mov
mov
xchg
push
aad
adc
enter
and
daa
and
nop
divl
xchg
and
fs
sahf
mov
leave
and
out
ret
xchg
push
lock
aad
jmp
fmuls
dec
mov
loopne
loopne
xor
je
sub
or
pop
scas
cmc
scas
push
push
mov
or
sbb
int
out
aaa
cmpsl
push
xor
mov
pushl
popf
xor
sbb
das
sbb
sbb
adc
xchg
lret
rcrl
or
lods
mov
aas
mov
inc
xchg
icebp
cltd
or
fidivrs
sub
or
dec
mov
mov
adc
cmp
pop
testb
pop
sbb
lcall
mov
mov
lods
lret
and
subb
int3
cmp
call
sub
pushf
out
pop
xor
add
mov
test
cmp
cld
out
or
xlat
clc
pop
in
test
pop
leave
aam
loop
xchg
mov
pop
dec
out
mov
in
inc
or
push
pop
fmuls
leave
repz
mov
mov
mov
pusha
daa
add
sub
sahf
cld
in
scas
loopne
in
or
push
stos
inc
aad
and
mov
cmpsb
and
leave
and
fistps
inc
les
aam
mov
icebp
repnz
mov
into
dec
call
data16
dec
and
gs
shlb
outsl
lret
mov
roll
dec
int
xchg
shrb
pushf
inc
imulb
in
les
and
or
sub
cmp
xor
push
adc
mov
scas
mov
jmp
xor
pusha
repz
paddusb
and
adc
mov
push
pop
movsl
push
test
cmp
int
sbb
test
pop
or
aad
aas
popf
jecxz
aad
lahf
push
dec
inc
je
das
bound
loope
and
lea
lods
subl
fincstp
lods
push
bound
sahf
gs
cmc
and
push
sub
test
push
inc
mov
adc
sub
ficomps
mov
cs
or
fcompl
dec
inc
mov
out
add
ss
xlat
or
std
or
idivl
hlt
mov
dec
call
jne
insb
mov
jne
inc
inc
xchg
scas
jmp
xor
aad
shl
scas
sub
bound
and
sub
test
shrb
push
popa
sub
lea
pop
jb
mov
hlt
add
in
push
add
mov
jl
or
cmc
or
mov
pop
push
sarb
sbb
es
test
or
in
mov
mov
jle
mov
in
jl
mov
fiaddl
xlat
cmp
pop
lods
jle
loop
and
xor
push
dec
ss
mov
inc
push
mov
push
stos
push
movsl
add
and
imul
push
and
repnz
sub
hlt
dec
int
pop
fldenv
mov
mulb
adc
jne
xchg
inc
rorl
sub
cmp
and
jle
subl
nop
fsubrs
mov
pop
cmp
jb
add
mov
out
mov
dec
dec
jle
sub
les
mov
sbb
pop
aad
ret
cmpsl
call
adc
aad
out
stos
inc
das
or
das
fsubrl
iret
mov
scas
shlb
ja
add
and
mov
sbb
add
ror
or
out
pop
cmp
push
ss
jno
ret
lea
in
fwait
pusha
sarb
sahf
stc
add
dec
or
arpl
and
lods
sbb
pop
or
imul
repz
add
ja
inc
mov
outsb
cmp
addr16
in
mov
pop
cmp
cmp
jae
push
popf
popf
shr
push
pusha
jle
mov
das
and
pop
movl
sub
call
push
stos
pmulhw
scas
or
int3
sub
cmpsb
imul
in
mov
xchg
lods
mov
push
fists
push
mov
repnz
sti
push
dec
stos
ss
addr16
xorl
mov
cmpsl
mov
mov
in
iret
stos
loope
or
push
mov
push
pop
dec
hlt
mov
sbb
jmp
cwtl
jbe
out
mov
add
rolb
xchg
jnp
push
push
shrb
push
cli
mov
sbb
mulb
dec
jl
sti
jbe
pushf
fiaddl
cmp
shll
jo
dec
call
sbb
jle
aam
imul
xor
adc
mov
enter
mov
fstpt
arpl
loope
push
cmc
stos
pushf
add
xlat
out
sarb
sub
ss
xchg
xlat
mov
push
aaa
sbb
loopne
cmp
xchg
xlat
lods
mov
ret
sub
ljmp
xchg
xor
jmp
jecxz
jmp
insl
jbe
lret
rcrb
cmpsb
nop
adcl
push
pushf
idivl
lea
lret
hlt
mov
aas
shll
icebp
and
jg
jle
push
int3
les
je
lods
sbb
fsubr
and
adc
push
sbb
pop
mov
inc
xchg
mov
notb
add
add
into
adc
mov
or
push
push
dec
xchg
lret
mov
loopne
jmp
adc
sub
filds
mov
pusha
xor
mov
lods
outsl
adc
jmp
sbbl
pop
mov
push
movsl
mov
movsb
in
inc
xchg
cli
push
cltd
mov
pusha
mov
and
add
movsb
mov
sub
notb
lahf
cs
sbb
pop
pop
xchg
hlt
gs
in
repnz
ja
insb
sbb
jmp
adc
outsb
out
add
mov
cmp
and
pop
xlat
xor
adcl
jg
cmc
jnp
insl
inc
cmp
adc
shrl
ss
cld
scas
push
int3
dec
loopne
mov
ret
mov
imul
add
cmp
sub
cmp
lock
jno
cs
out
xchg
subl
jns
ret
cmpsl
pop
mov
xchg
pop
add
dec
xchg
pushf
mov
mov
pop
pop
cmp
push
mov
or
enter
call
dec
ljmp
out
pop
ret
jne
jle
dec
sub
mov
mov
sbb
mov
fisubrl
divb
fsubrs
mov
cld
stos
mov
push
repnz
adc
add
call
lea
out
or
les
mov
push
in
repnz
jg
imul
adc
pop
lock
and
subl
sahf
dec
stc
ja
imul
mov
jae
movsl
sbb
push
xchg
and
fwait
lahf
mov
mov
push
jb
push
arpl
sub
pop
loopne
loopne
xchg
ret
or
mov
pop
fcmovbe
mov
mov
add
pop
jo
inc
adc
sbb
mov
xchg
pop
in
mov
sub
ss
and
sbb
sar
scas
mov
hlt
push
repnz
xor
xchg
mov
adc
or
repnz
aaa
les
fstl
test
call
sti
mov
rol
xchg
push
jmp
mov
adc
daa
test
lock
add
xor
aam
dec
decb
pusha
cwtl
pop
jbe
jl
push
pop
or
daa
int
std
in
arpl
mov
je
and
jno
es
xor
push
adc
and
xchg
adc
lahf
jmp
add
fstpl
mov
adc
gs
rclb
int
sbb
jg
mov
test
mov
adc
add
test
xlat
xchg
sbb
shl
jmp
push
sbb
sbb
cmp
shr
outsb
mulb
movsl
mov
cmp
xchg
out
inc
pop
ja
push
mov
je
mov
dec
outsb
or
pop
add
xchg
push
daa
jae
jno
push
stc
test
leave
add
and
incb
fmul
insl
sub
pop
mov
cmpsl
loope
pop
data16
loopne
push
idivb
pop
inc
aas
push
fidivrl
mov
ret
hlt
movsl
xlat
xlat
ret
int3
sbb
jle
imul
push
shrb
adc
jb
add
lcall
inc
fcompl
mov
inc
jl
jp
cmp
rcrl
aam
mov
icebp
lret
push
je
fs
mov
cmp
xchg
pop
fsubrs
xor
std
jb
add
in
cmpsl
jo
and
push
adc
fsubl
movb
jp
shll
push
push
and
mov
mov
jnp
bswap
scas
out
xchg
lea
push
test
cmp
mov
cltd
ss
sbb
outsb
outsb
lods
mov
lods
dec
sbb
sub
int3
sbb
fwait
push
movsl
ds
fldl
int
shll
divb
aas
pop
outsb
pop
jmp
iret
inc
pop
repz
mov
std
sub
push
adc
in
pop
sub
aaa
lret
je
xor
out
lods
jne
notl
inc
push
inc
dec
repz
nop
xchg
mov
push
nop
mov
movsb
cmc
sbb
pop
dec
ret
mov
ljmp
sbb
addr16
sub
sbb
mov
mov
sbb
xor
faddp
popf
pop
fiaddl
iret
in
jle
roll
into
js
test
insb
mov
lea
xor
jl
jle
femms
cli
push
test
jne
mov
mov
out
je
dec
jge
jge
xor
in
mov
xchg
jecxz
mov
in
cmp
inc
inc
mov
push
popf
dec
jmp
push
cwtl
es
out
push
pop
mov
cmc
cwtl
push
popf
jp
pop
cmc
in
push
add
call
ds
addr16
fisubrl
out
repz
jmp
addr16
sub
repnz
pop
call
adc
fistpl
jb
inc
cmp
inc
imul
shlb
cmp
cltd
dec
push
jp
dec
lea
sbb
scas
in
shll
stos
lods
pop
push
mov
loope
pop
xchg
arpl
adc
je
mov
dec
jp
xor
aad
leave
or
mov
inc
pop
push
mov
mov
mov
in
cwtl
fidivrs
inc
sub
xchg
std
frstor
mov
push
lret
pop
stc
cmp
inc
xchg
lahf
shrl
mov
shl
pop
mov
dec
add
addb
jno
cmpl
repnz
jne
adc
pop
stc
int3
dec
xor
adc
xchg
enter
xor
cmp
jo
loop
xchg
push
mov
lds
fninit
inc
push
add
cmp
bound
cmpsl
inc
cs
icebp
ss
pop
sbb
sbb
imull
mov
fidivs
outsl
sbb
mov
pminub
daa
ja
sbb
mov
push
ret
es
daa
or
out
push
outsl
inc
xor
xchg
sub
xor
lret
cli
sub
lods
or
add
negb
xchg
inc
popf
sarl
loopne
notl
push
sbb
les
subl
jno
pusha
jmp
add
out
stos
jnp
xchg
jmp
leave
inc
data16
jns
pushw
xor
stos
xchg
add
mov
fwait
jns
and
ds
popa
arpl
mov
or
jle
mulb
lcall
or
and
add
xchg
xchg
cmp
sbb
jne
push
pop
aaa
xor
shr
inc
js
std
xchg
cmpsb
into
ret
in
mov
clc
gs
stos
xchg
sub
ljmp
jbe
fldt
sub
mov
add
bound
push
cmpsb
adc
inc
rcrb
mov
pop
lods
jns
popf
ja
jge
jp,pt
leave
aam
jb
and
mov
pusha
inc
push
jae
popf
fcomps
mov
inc
les
push
add
cmp
push
inc
mov
pop
test
pusha
mov
adc
mov
arpl
xchg
mov
adc
dec
push
lock
mov
cmpb
cwtl
clc
nop
out
mov
pop
pop
mov
adcb
aaa
aad
aad
orb
insb
scas
xchg
pop
mov
xchg
sub
test
push
dec
adc
clc
lds
cmp
outsl
pop
inc
sub
add
mov
xchg
lahf
dec
mov
rorb
jmp
pop
inc
das
push
lock
rorl
divb
pop
and
xchg
pop
jp
pop
mov
xchg
xor
or
scas
and
jecxz
loope
daa
repz
cmp
jmp
andl
gs
add
out
stos
push
aas
daa
andl
sbb
mov
lahf
xor
sub
dec
ret
dec
mov
mov
lcall
inc
test
outsb
add
pushf
mov
int
mov
dec
lock
pop
mov
xor
decb
add
sbb
pop
nop
iret
ss
mov
lock
aam
mov
imul
cmpsl
adc
rcrl
int
push
push
push
leave
xchg
scas
lea
cmp
mov
sbb
and
or
shrb
jl
push
gs
hlt
fcmovnu
jbe
int
roll
adcl
leave
jns
jl
in
bound
inc
loop
andb
test
repz
sahf
subl
das
jmp
js
aad
ficoms
mov
nop
cmp
sbb
ss
ss
mov
mov
and
rcrb
xchg
dec
pushf
jne
outsl
pop
xchg
and
cmc
mov
adc
fidivl
cwtl
xor
mov
jbe
enter
out
push
out
pop
mov
ja
iret
popf
sar
dec
cmp
lret
rcrl
pop
mov
sbb
in
rcll
insb
lea
cwtl
iret
aas
cli
les
cmp
jge
adc
pop
les
mov
lret
adc
lods
ja
lret
inc
cmp
cmp
test
movsb
repz
jo
inc
pusha
int3
test
test
cmpsb
aad
mov
push
inc
outsb
pop
sbb
test
or
or
xor
jno
sbb
xchg
data16
pop
dec
popa
xchg
mov
out
mov
add
insl
add
xchg
mov
sub
adc
pop
mov
cmp
or
and
and
popa
stc
xchg
pushf
stc
or
adc
fwait
cmp
call
aad
push
test
insl
mov
cmc
mov
push
mov
xchg
es
pop
mov
movsl
lret
xchg
incl
xor
lcall
pop
mov
ret
inc
fmuls
cmc
jle
and
insl
mov
enter
fbstp
sbb
push
addr16
bound
push
inc
sbb
imul
mov
sarb
adc
push
stos
mov
popa
inc
js
aaa
test
cmp
in
in
ss
jl
push
and
push
sbb
mov
fisttps
jae
and
and
dec
dec
xchg
dec
mov
xchg
and
and
outsl
jno
in
jns
loopne
jno
popa
jecxz
orb
sbb
out
cmp
clc
lret
loopne
adc
mov
imul
xchg
mov
cmp
call
adc
pop
popl
inc
mov
add
ljmp
sub
push
and
adc
cmp
dec
popf
data16
leave
clc
lcall
arpl
gs
fcmovne
inc
loopne
adc
mov
sub
leave
lds
pop
mov
mov
mov
sbb
push
push
pop
pop
test
pop
push
fldz
out
jo
fwait
and
inc
or
jo
scas
xor
mov
mov
imul
mov
fisttpll
test
cmp
xorb
sahf
cmpb
mov
out
sbb
inc
out
adc
test
add
sbb
lods
sub
adc
mov
adc
pusha
jp
sbb
push
push
jne
xchg
test
fistl
jno
and
not
mov
push
sub
es
or
and
xchg
adcl
mov
daa
add
sbb
ret
mov
repnz
jp
popa
dec
popa
mov
mov
jg
sbb
es
clc
ljmp
pop
push
xchg
mov
adc
addr16
std
push
sbbb
push
push
movb
mov
cmp
ljmp
fists
nop
in
or
xchg
cmp
add
rcll
dec
sarw
xor
addr16
mov
or
divb
or
xchg
dec
test
std
pusha
test
add
js
mov
lods
push
dec
rcll
mov
push
or
push
pop
imul
jle
sub
rcll
shlb
pop
insb
and
inc
xchg
mov
inc
mov
pop
and
stc
mov
mov
xchg
sbb
shlb
cltd
je
movsb
mov
mov
mov
push
insb
jbe
test
icebp
xorb
pop
dec
rcrl
sti
jb
jb
adc
rorb
mov
sub
out
add
dec
bound
mov
lods
jbe
mov
stc
mov
sub
add
fwait
cmp
xchg
add
sbb
ficoms
shrl
lods
stos
mov
xor
cltd
xor
enter
movsl
loop
sub
add
pop
outsb
rol
xchg
out
lcall
xor
mov
push
jne
xchg
sbb
paddusb
sub
mov
sub
xor
test
rcl
inc
jle
repz
fimull
mov
cwtl
push
dec
or
ret
dec
ds
jno
sbb
bound
int
fisttpl
sbb
lods
adc
dec
movsl
fucomip
dec
jno
out
int
sahf
in
cltd
jecxz
push
inc
sbb
jne
fsubs
ss
fistpll
std
test
lret
sbb
ja
icebp
cmpsl
negb
pop
xchg
outsl
pop
sbb
or
mov
jnp
sbb
adc
leave
fidivrs
pusha
pop
add
rol
mov
je
sub
mov
call
popf
es
test
out
and
push
adc
inc
inc
dec
inc
js
int
pop
inc
call
idivl
add
mov
xchg
push
push
sbb
jmp
xor
repz
xchg
add
and
inc
shlb
int
mov
sarb
mov
test
jno
lcall
pop
imul
jle
test
stos
dec
lods
movsb
out
ret
add
and
je
jo
mov
add
test
push
cmp
xchg
pop
sbb
dec
js
mov
arpl
or
fwait
lret
popa
jmp
in
mov
fxch
xor
mov
ficompl
pop
test
cmpsb
fstpl
inc
lahf
in
adc
mov
dec
jmp
out
lahf
xchg
fmull
aad
cltd
and
jo
je
nop
out
cmc
int
inc
std
aad
mov
pop
or
or
adc
adc
in
addb
fwait
lcall
sahf
xchg
jbe
adc
xor
in
iret
push
mov
push
adc
scas
jno
cmpsb
lahf
iret
repnz
sbb
mov
inc
jae
jmp
jmp
ljmp
xor
adc
sub
jmp
cld
loopne
push
and
xchg
fsubr
ret
lods
xchg
jmp
movsb
xchg
cmp
cld
out
in
sbb
leave
fimull
lods
add
cmp
repz
mov
test
mov
mov
stos
pop
sub
loop
mov
js
in
mov
scas
xchg
shlb
or
mov
push
mov
add
inc
lods
dec
jmp
out
lods
add
and
je
cmpsb
push
cmp
sbb
sti
push
and
mov
mov
pop
fcoms
cmp
xor
cmp
sbb
sti
shrl
add
mov
loopne
sbb
xlat
adc
cmc
cmc
into
rol
imul
mov
and
lcall
movsb
stos
imul
mov
call
adc
dec
ja
mov
xor
mov
shlb
pop
enter
mov
loope
push
sub
movsb
xor
pop
xchg
jae
cwtl
dec
shll
push
gs
mov
hlt
repz
enter
and
fdivl
inc
pop
fadds
mov
mov
cmpsl
push
mov
negb
cmp
xchg
in
enter
jp
xchg
rolb
push
cmp
dec
or
push
inc
pop
mov
dec
sahf
iret
mov
js
lret
or
xor
push
jge
push
cmpsl
stos
mov
mov
int
les
leave
and
mov
mov
fmul
or
or
stc
fimull
jl
shl
neg
ficomps
dec
fidivs
xchg
jns
pop
lahf
mov
pop
xchg
jne
fadd
mov
popa
fldcw
lea
ljmp
les
outsl
lahf
pop
andb
mov
fisttpll
sbb
mov
adc
popf
rcrb
mov
xor
inc
mov
std
pop
sub
fistl
mov
mov
cmpsb
inc
pusha
cmc
ja
pop
or
lods
pop
inc
mov
jno
das
movsb
cltd
dec
out
lahf
adc
hlt
rcrl
cs
mov
push
sub
pusha
outsl
jecxz
lret
xor
mov
es
ret
mov
xchg
imul
dec
mov
fcomps
adc
mov
cmpb
sbb
pushf
pop
test
imul
stos
in
mov
ret
sub
in
push
xchg
ja
mov
add
jg
mov
loop
sti
ret
inc
pop
shlb
push
sub
pop
out
mov
cmc
lds
je
pop
xor
cmp
add
shlb
inc
and
and
or
lds
mov
aaa
xchg
in
insl
mov
push
test
jnp
aam
imul
lea
bound
jae
jne
pop
sbbl
out
popa
push
pop
and
shlb
cmp
aas
mov
pusha
add
mov
jmp
bound
mov
jg
jg
sub
fst
fistl
aam
sbb
xchg
inc
sbb
test
or
inc
stos
dec
test
xchg
inc
jnp
js
pushf
jno
add
stos
mov
mov
outsb
ja
mov
testb
test
mov
enter
cltd
push
movsl
mov
or
pop
sbb
cmp
push
mov
arpl
icebp
lods
jge
arpl
xchg
popf
loopne
mov
popa
mov
in
fs
stc
or
mov
in
sahf
dec
cmp
ja
mov
out
adc
lods
inc
subl
inc
out
mov
xor
jae
roll
sub
or
lcall
push
daa
js
or
shl
pop
xor
dec
sbb
adc
int3
je
jb
add
mov
mov
out
mov
jne
adc
or
or
lret
lock
add
cmc
mov
fldl
adc
adcl
bound
xchg
cli
in
inc
mov
popa
sub
cld
push
repnz
mov
mov
cmp
cld
hlt
jo
test
inc
lock
xor
je
mov
and
jl
push
insl
sub
dec
loop
gs
shrb
dec
pop
bound
insl
mov
aam
std
sarl
push
push
jb
imul
adc
enter
adc
jl
dec
pop
sbb
cmc
test
push
inc
stos
jnp
fstl
lret
decb
sub
cmp
fldl
js
shrb
jo
fadds
mov
or
clc
dec
mov
cmp
jmp
inc
inc
jne
push
cld
cmp
das
xchg
mov
das
xchg
scas
adc
cmp
inc
dec
in
jb
lds
mov
data16
push
into
sub
cmp
jnp
pop
and
xchg
mov
inc
call
scas
imul
adcb
in
or
scas
mov
mov
and
push
mov
mov
mov
out
sub
pushf
clc
cmpsb
fildl
mov
pop
addr16
pop
xor
addr16
jns
fstpt
mov
lea
in
mov
shlb
inc
sbb
mov
lcall
jo
or
lret
mov
dec
add
and
sub
lods
sub
dec
xlat
mov
jl
xchg
arpl
mov
ljmp
sti
addb
cmpb
popa
mov
std
push
cmp
stos
in
gs
mov
aas
std
cmpsb
cmp
jge
aas
cmovg
std
lret
out
rcll
sbbl
push
adc
enter
imul
push
fiaddl
pop
xchg
int3
shlb
cmc
sbb
insl
dec
test
mov
mov
add
fwait
ljmp
shll
lcall
cmpsl
shlb
mov
ret
mov
xchg
in
and
pop
jp
jne
mov
ret
ljmp
ret
fistpll
mov
shlb
and
leave
fwait
mov
xchg
outsl
inc
pop
mov
xchg
cmpl
push
xor
in
and
jne
shl
adc
xor
sbb
rorl
fadd
enter
jl
xchg
inc
xor
inc
sahf
jmp
mov
add
pop
inc
xor
xor
xchg
rcrb
push
std
lods
xchg
std
adc
xchg
or
cmc
fwait
test
ja
lahf
jge
cltd
xchg
mov
push
mov
inc
in
lods
hlt
dec
pushf
dec
xchg
push
mov
mov
mov
jp
mov
inc
pusha
mov
sbb
xchg
jmp
stc
inc
das
out
mov
lds
add
push
mov
and
inc
sub
test
jl
hlt
into
mov
fidivs
xlat
into
sub
repnz
add
mov
jns
push
out
mov
cmc
movsl
lock
push
mov
and
lret
ret
dec
iret
xchg
sbb
mov
in
popf
mov
ficompl
sahf
add
push
cmpsl
adc
cs
jg
lock
mov
adc
addr16
cpuid
push
cmpsl
inc
push
popf
cmp
push
sub
pop
ja
pushl
fildl
loope
jo
cli
pushf
jge
popa
mov
test
xchg
rcll
mov
cmpsl
shlb
add
int
add
popa
mov
sahf
mov
push
insl
dec
out
ret
push
mov
lods
mov
jae
adc
insb
push
fcmovnb
xlat
adc
inc
pop
jne
xor
adc
mov
lods
mov
adc
cmpsl
or
insb
mov
sub
int3
dec
mov
pop
aam
pop
int
jmp
cmc
lds
mov
shrb
mov
or
dec
push
dec
cmp
mov
imul
push
sub
les
loop
pop
sub
fsubrp
add
das
aas
fidivl
outsb
pop
arpl
xor
js
fsts
mov
push
mul
sub
loop
push
xor
addb
scas
and
sbb
icebp
divl
push
adc
and
fs
or
repz
fdiv
cmp
inc
push
adc
and
out
lods
push
dec
push
stc
pusha
jle
push
xor
call
popf
and
imul
adcb
mov
mov
jb
and
sbb
sahf
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
mov
dec
xchg
xchg
addb
insl
fmuls
lods
pusha
and
push
movsl
push
jns,pn
dec
std
mov
and
out
in
adc
pusha
aas
fbstp
jno
mov
jp
adc
ds
insb
hlt
mov
dec
sub
mov
mov
lret
mov
pop
test
mov
fwait
dec
pop
ss
sbb
stc
loop
cmp
xlat
mov
loopne
cmp
js
pop
mov
repz
pop
lret
lcall
add
shl
pop
jle
add
stos
push
mov
std
mov
jl
pop
mov
jecxz
leave
dec
sub
cmp
xchg
pushf
inc
call
sbb
popa
pop
adc
sbb
pop
pop
stos
pusha
popf
cmp
out
fwait
cwtl
stos
dec
inc
mov
in
pop
dec
jo
mov
push
loope
inc
mov
leave
leave
push
mov
xchg
pop
xor
iret
fstpl
outsl
adc
add
cs
pop
scas
mov
push
bound
push
in
dec
pop
pop
in
cmp
scas
jp
incb
mov
fs
lods
jnp
pop
addl
sub
jp
jns
pusha
js
loop
xor
inc
cmp
mov
jle
jno,pn
sub
mov
xchg
sbb
jmp
dec
dec
sub
sbb
mov
lcall
daa
js
sbb
sbb
xor
in
fcmovnu
adc
xchg
aad
jmp
inc
cld
xchg
imull
add
xchg
xchg
call
mov
jnp
imul
jp
xor
xor
sbbb
mov
inc
imulb
push
sahf
xchg
jnp
cmpsb
gs
stos
out
ljmp
jne
repnz
add
stc
jmp
pop
icebp
sub
sti
or
inc
test
popf
adc
dec
pusha
push
adc
out
adc
dec
lods
stos
shll
dec
mov
jl
inc
sbb
leave
roll
aad
jle
adc
xchg
xchg
push
jle
divb
dec
or
push
jns
jns
sbb
or
cmpsl
push
daa
sbb
lds
xor
jne
shr
das
adc
fidivrs
cmp
inc
dec
popa
push
xor
inc
scas
movsb
push
pop
xchg
je
rcrl
cmpsb
je
mov
jle
push
xchg
xchg
bound
push
mov
dec
xor
cmp
fs
aam
fists
or
stc
xor
mov
mov
jo
add
jno
xchg
test
repnz
add
cli
test
sub
jne
bound
mov
insl
sub
jecxz
or
pop
jp
das
wrmsr
cltd
idivb
dec
icebp
pusha
aaa
pusha
jp
ljmp
jb
or
mov
sbb
fcmovu
ja
aad
cli
jbe
int
and
in
mov
mov
in
daa
testl
or
or
cmp
outsb
subl
mov
push
dec
fistps
dec
jo
es
add
repz
xchg
mov
fs
sarb
or
mov
aas
jmp
hlt
in
push
mov
inc
sub
clc
push
mov
movsb
mov
ficomps
mov
sbb
loope
scas
sub
dec
mov
fs
lahf
add
es
or
xchg
jns
mov
stc
hlt
out
mov
stc
push
xor
ret
pop
or
xchg
into
cwtl
psubb
aam
shll
imul
lea
sbb
ficoml
push
out
insb
pop
sbb
xor
dec
sub
lcall
lahf
outsb
xchg
cmp
jl
insb
cmp
add
loop
scas
and
add
sbb
test
mov
inc
dec
mov
repnz
xor
fiadds
cmpsb
es
xchg
and
dec
rclb
clc
rclb
pop
cmp
jbe
dec
mov
ret
rorl
sti
push
dec
in
sub
imul
and
movsl
sub
std
and
xor
or
nop
inc
outsb
iret
pop
mov
loopne
push
jo
mov
fdivrs
jecxz
call
jl
fisttpll
arpl
outsl
pop
in
cwtl
movsb
nop
inc
jp
or
movl
lods
push
stc
mov
stos
sbb
sub
stc
or
sub
push
cmp
mov
jo
xchg
xchg
adc
jne
pop
mov
jno
sbb
xor
xor
jnp
mov
cmp
or
imul
push
inc
rcl
sahf
imul
flds
sahf
jmp
clc
and
mov
out
push
shl
and
xchg
mov
pushf
jp
rolb
ljmp
mov
test
dec
or
mov
test
mov
js
push
push
inc
ret
aaa
lahf
iret
xchg
xchg
mov
shll
in
inc
lods
cli
out
repnz
jne
out
fcmovu
xorb
ret
stos
enter
pop
add
mov
mov
mov
lds
push
sti
mov
xchg
and
test
mov
dec
int
cmpl
xchg
push
pop
push
xchg
fcomps
mov
xor
add
imul
dec
jno
push
dec
push
add
xor
stos
jo
ss
inc
adc
hlt
fs
push
mov
xchg
mov
testb
inc
int
adc
xchg
mov
inc
in
repz
pop
nop
dec
rcll
stc
fimull
stos
cwtl
repz
stos
adc
and
adc
mov
add
and
cs
in
aaa
sbb
sub
sbb
inc
lods
mov
inc
xchg
insl
jle
aam
test
add
xor
cmp
add
ret
fldenv
xchg
dec
fmull
pop
cmpsl
sbb
hlt
pop
dec
push
sub
sbb
rcll
in
int
mov
sahf
pop
scas
lock
and
aam
inc
leave
shr
arpl
lea
jle
dec
minps
adc
sbb
out
loope
inc
mov
icebp
inc
leave
loope
push
mov
stc
dec
add
adcb
sbb
in
clc
inc
iret
mov
dec
pusha
in
dec
mov
sbb
pop
and
sbb
je
mov
fistpl
sbb
in
mov
xchg
mov
popa
add
gs
cmp
stos
mov
test
dec
dec
mov
add
pop
and
mov
cmc
adc
aam
stos
out
shll
mov
dec
cltd
cmpsl
fimull
push
les
outsl
fldenv
lods
mov
xchg
jb
popa
lahf
fadds
cmp
inc
aas
and
or
jge
add
pushf
inc
cmp
sbb
xorb
inc
in
mov
outsb
outsb
rolb
or
packssdw
or
fucomi
xchg
aaa
outsl
push
inc
mov
mov
arpl
inc
push
jp
mov
mov
or
add
hlt
mov
sub
test
push
push
push
aam
adc
adc
mov
dec
xchg
push
pop
and
add
inc
mov
jecxz
ljmp
mov
imul
repz
adc
xor
loope
fistpll
push
pop
cmp
pop
orb
loopne
in
dec
inc
dec
push
xor
rol
pop
shll
xor
fsubr
fsubrp
cmpsl
or
les
mov
mov
pop
lods
xor
out
fnstcw
data16
jbe
jg
ljmp
mov
jp
fcmovnu
xlat
ja
dec
ss
cmp
push
add
and
lock
test
mov
xchg
add
mov
out
adc
mov
cs
orl
test
cmpsb
inc
xchg
ljmp
mov
pop
test
push
out
addr16
and
jge
cmp
xchg
iret
push
dec
add
xchg
sbb
sub
mov
xchg
out
rclb
mov
test
mov
adc
pusha
sahf
sbb
icebp
lahf
pop
pop
inc
int
cs
mov
ret
fisubs
sahf
cs
inc
push
ljmp
nop
arpl
cmpsb
mov
push
icebp
sti
mov
xor
inc
popf
cwtl
test
imul
lret
mov
mov
push
or
mov
lahf
mov
repz
pusha
mov
sarl
idivb
xchg
mov
int3
pop
aas
jb
fdivp
dec
ret
inc
mov
jl
cmpsl
adc
and
push
jg
sub
sub
xchg
mov
divl
mov
and
cmpsl
lods
mov
mov
inc
xchg
cwtl
add
adcl
adc
jns
cs
push
sti
popf
fisubl
ljmp
jg
imul
pop
ss
out
scas
push
xchg
lea
cltd
adc
pop
push
xchg
test
fwait
dec
test
dec
mov
repnz
movsl
push
pop
sbb
and
sub
mov
cld
in
and
ret
hlt
popf
mov
xor
xor
xchg
mov
or
jmp
ret
push
sbb
dec
push
pop
pop
sbb
nop
sbb
xor
and
dec
aam
mov
aas
jae
fnsave
fidivrl
xchg
mov
mov
popa
inc
push
push
int
inc
sbb
repnz
mov
sbb
jbe,pt
pop
jp
xorb
les
pop
and
aaa
mov
jno
cli
add
aas
stc
jmp
add
xchg
adc
push
lret
fnsave
jae
outsl
mov
mov
xchg
add
mov
imul
jl
pop
mov
std
insl
test
es
mov
fs
lock
aam
out
cltd
add
addr16
add
sub
pop
ret
lds
dec
cs
adc
lahf
and
shrl
cld
shll
lock
sbb
push
pusha
lods
mov
mov
cltd
movsl
push
add
in
adc
push
nop
cmc
push
addr16
xor
dec
and
and
push
sub
inc
addr16
addr16
mov
pop
es
das
lods
dec
sbb
jecxz
sarb
sbb
dec
xchg
jge
cmpsl
aam
and
sub
sarb
dec
jl
and
sbb
sbb
popa
sub
popa
imul
fiadds
mov
pop
mov
mov
dec
data16
sub
incb
mov
adc
push
loop
push
in
sahf
rcrb
fdivr
movsb
fisttpll
jle
pop
test
aas
mul
cs
std
mov
loope
lds
pop
xchg
enter
xchg
xchg
aad
repnz
icebp
inc
adc
jae
lds
cmp
out
in
fldcw
jecxz
adcl
cltd
or
rcrl
js
mov
dec
or
sbb
inc
cmp
and
mov
roll
fisubrs
sub
mov
mov
sbb
std
push
loope
stc
push
mov
xorl
in
push
jbe
adc
push
dec
fcmovnb
rol
test
fstpl
mov
xchg
push
and
xchg
mov
mov
loopne
add
adc
out
dec
nop
ret
inc
pusha
lcall
aad
mov
cmp
cmp
rorl
jnp
add
push
xor
and
or
adc
jmp
imul
int
and
mov
outsl
mov
mov
xchg
jns
call
jge
and
mov
or
inc
pushf
adc
adc
lods
ljmp
jne
popf
aaa
sbb
jle
aaa
inc
mov
notb
sub
dec
imul
ja
jae
insb
sbb
cvtdq2ps
push
cli
xchg
inc
sbb
inc
fstpl
inc
add
movsl
mov
pushf
pushf
leave
push
pusha
mov
xchg
jge
xchg
jg
je
not
ds
nop
fcmovbe
mov
daa
cmp
sti
std
cltd
add
adc
cmp
adc
enter
les
xlat
imul
sbb
and
nop
cltd
add
jecxz
xchg
add
rclb
dec
jl
xor
sbb
lea
mov
or
jbe
sbb
pop
int3
xchg
fsub
inc
jno
xchg
sarb
into
aad
cmpsb
lods
xchg
ja
mov
jle
pop
lcall
add
out
stos
push
insl
sahf
loop
popa
dec
push
pop
dec
mov
pop
lock
jnp
imul
inc
mov
sub
in
out
adc
das
dec
fs
addr16
adc
pop
mov
mov
dec
hlt
or
roll
insl
mov
xchg
jo
shll
negb
push
xlat
stos
push
in
cmc
aaa
sub
les
call
mov
js
leave
xlat
and
jbe
add
and
xchg
cwtl
or
mov
jb
out
sarb
xchg
inc
aam
push
shll
mov
mov
incl
rorb
and
lahf
daa
imul
scas
cmpsl
ja
mov
test
loopne
scas
es
jg
fcmovnbe
pop
push
ret
popa
pushf
cmpsl
in
cmp
and
mov
aaa
aam
xchg
mov
mov
gs
push
gs
adc
out
mov
cmp
cmpl
nop
push
cmp
in
test
aaa
scas
xchg
push
fcmovbe
lcall
paddq
dec
scas
jg
lods
out
es
dec
cmp
in
sbb
push
adc
dec
xlat
pushf
imul
add
xchg
fbstp
sbb
mov
dec
movsl
adc
bound
xor
scas
pop
inc
cmp
cmp
lock
xchg
mov
rcrb
hlt
jg
cld
jp
sub
dec
push
sahf
imul
das
mov
fs
rcrb
cmp
imul
pop
insb
sahf
mov
cmp
les
fisttps
mov
push
scas
xor
scas
test
cmc
in
mov
lahf
fadds
mov
or
and
push
in
xchg
fiaddl
and
add
jbe
pop
sub
mov
addl
add
jns
add
orb
sub
lds
cmp
cmp
cmp
enter
mov
insl
int3
pop
xor
pop
sbb
and
jns
addr16
gs
adc
in
jmp
cltd
into
adc
out
adc
data16
out
shl
mov
cmp
mov
pop
xor
pop
push
mov
ljmp
aaa
stos
pop
mov
orps
stc
sti
in
lret
fwait
mov
xor
mov
inc
ss
in
aas
push
adc
mov
dec
insb
sbb
stc
dec
hlt
mov
mov
mov
add
rolb
push
dec
lret
popa
lods
sub
push
pop
mov
fnsave
mov
xchg
leave
pop
lret
movsb
orb
pop
aam
jo
push
cmpsl
xchg
push
loopne
jb
mov
xor
sub
or
push
xor
hlt
cmp
cmp
or
jl
popa
repnz
cmpsl
add
and
jno
pop
mov
out
inc
ret
xchg
loop
cltd
js
xor
les
push
mov
sti
inc
ret
and
fwait
ds
imul
mov
jp
dec
mov
or
test
push
hlt
xchg
xor
mov
cld
cmpsl
es
shll
lods
push
pop
stos
sub
in
insb
scas
mov
or
push
call
ficoml
leave
sbb
add
mov
adc
or
add
pop
popl
mov
mov
push
add
scas
pop
push
arpl
icebp
sahf
hlt
ss
dec
ja
lret
es
popl
or
flds
shll
lods
mov
sbb
and
loope
ret
lods
stos
mov
cmp
subb
mov
fs
or
push
testb
xchg
mov
sbb
xorl
cmp
out
jno
js
cli
mov
xlat
pusha
add
mov
pop
test
push
cmovb
ds
jl
pop
imul
jns
iret
mov
and
add
imul
cli
push
iret
push
push
add
fimull
xor
test
cmp
mov
inc
stos
jecxz
insl
mov
pop
ds
mov
imul
sbb
mov
xor
lret
sti
sub
stos
ss
push
stc
loope
je
imul
and
out
and
movsl
icebp
popa
ja
add
int3
push
test
push
shr
mov
es
sub
cmp
daa
cmp
into
mov
sub
imul
in
sbb
lret
or
shlb
pushf
sbb
jp
adc
cmp
pop
rol
pop
lahf
sub
loop
mov
mov
xchg
xchg
mov
scas
xchg
push
mov
xor
inc
incb
fsubp
in
xchg
push
pop
mull
clc
or
push
lods
mov
mov
sub
movsl
jo
rcrl
mov
xor
dec
xor
dec
ss
adc
ja
fisubs
hlt
mov
sti
fistps
arpl
pop
and
push
xchg
insl
or
leave
hlt
test
test
arpl
emms
cmp
sbb
fsubp
iret
rclb
lds
test
les
dec
ds
push
mov
popf
mov
in
cmc
cli
sbb
enter
ret
push
std
mov
xchg
fmuls
cmc
aas
or
imul
and
sub
push
adc
adc
sbb
ja
cmp
cmpsl
in
icebp
push
das
add
dec
sbb
mov
in
ficomps
inc
mov
insb
cmp
mov
hlt
std
xor
mov
aad
inc
mov
sub
les
xchg
push
and
cwtl
xor
test
es
aam
fimuls
push
jmp
aaa
inc
xchg
push
add
jle,pn
cmp
adc
int
clc
insl
sub
test
pop
xor
ficompl
xchg
push
push
and
push
mov
push
or
rcrl
js
sbb
lret
add
push
pop
push
push
and
adc
mov
sub
adc
test
rcr
sbb
scas
xor
pusha
sahf
lods
in
mov
out
repz
dec
decl
mov
inc
push
inc
mov
cmp
ljmp
push
or
stos
and
out
maxps
pop
mov
mov
inc
add
adc
mov
dec
xchg
xchg
imul
adc
dec
jns
popa
in
hlt
shrl
outsb
cmp
hlt
loopne
dec
and
jae
divb
add
fiadds
push
xchg
jae
push
sub
cli
mov
dec
push
pop
cltd
mov
dec
xor
and
sar
ds
out
sahf
int3
pop
fs
mov
test
add
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
cmp
dec
add
add
add
add
add
add
pop
add
adc
add
add
add
inc
push
pushf
push
aaa
mov
lods
or
dec
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
