push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
ss
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
jp
push
xor
adc
fdivp
sbb
movsl
mov
js
into
repnz
jnp
dec
jno
adc
cli
aas
jmp
jne
inc
sub
addr16
lret
jge
and
sbb
sub
dec
sbb
test
filds
nop
cmpsb
xchg
add
and
xor
fs
sbb
ja
loopne
jnp
jbe
jecxz
pusha
inc
pushf
add
ret
xchg
orl
stc
inc
inc
data16
mov
pop
decb
cmp
sub
sbb
aas
xchg
jno
shlb
pop
push
outsl
xor
mov
and
jo
jns
cs
lret
or
dec
pop
mov
iret
fistpl
lods
xchg
cld
popa
mov
adcl
test
out
inc
jnp
push
cmp
push
lret
cld
mov
nop
xlat
lods
shlb
mov
pop
hlt
sbb
add
push
pop
jb
jbe
adc
inc
xchg
fcoml
int3
jns
add
xchg
repnz
jae
xor
popa
jle
fldl
ds
lcall
mov
lds
jnp
or
mov
fadds
cmc
mov
dec
jne
mov
addr16
hlt
and
cld
adc
adc
fdivl
jbe
inc
push
cwtl
pop
or
pop
cmpsl
cmpsb
sub
jge
in
pop
fdivr
jecxz
lahf
into
sti
pushf
sub
test
push
faddp
cmp
in
jbe
pop
add
cwtl
and
push
stc
jbe
push
aas
pop
popf
mov
sbb
push
movl
fildl
insb
out
pop
loopne
imul
mov
test
sub
mov
jbe
dec
dec
nop
int
adc
in
lret
push
addr16
cs
mov
mov
loop
out
jae
jg
sbb
xchg
jb
ljmp
fcoms
or
inc
movsb
mov
rclb
cmp
imul
out
in
mov
rcl
scas
dec
push
je
pop
adc
jbe
in
shlb
add
xor
jmp
mov
scas
inc
sub
into
xor
add
xchg
lahf
in
mov
ja
imulb
repz
cmp
adc
sub
orb
leave
lret
and
mov
test
int
mul
lea
mov
cmpl
cs
test
mov
out
push
leave
aas
xor
push
mov
jo
je
movsl
xchg
es
mov
mov
and
clc
inc
adc
dec
inc
out
adc
or
sbb
push
inc
jo
jno
movsb
cwtl
or
mov
add
call
stc
sbb
add
adc
movsl
dec
add
loope
cmp
mov
push
sub
xchg
mov
pop
in
cwtl
jnp
pop
test
hlt
std
pop
lods
ja
fistps
mov
xchg
test
xchg
xor
mov
sbb
and
aam
mov
mov
or
xor
lret
pushf
test
aas
nop
lahf
lret
aam
arpl
adc
mov
pop
fimuls
fcoms
nop
mov
outsb
pop
or
inc
sub
movsl
xchg
cmc
xchg
gs
inc
lea
leave
aas
or
xchg
jae
jo
dec
repz
jb
enter
imul
pop
add
popf
xchg
jmp
push
xchg
ja
loop
push
outsl
ljmp
pop
stc
push
dec
xchg
mov
repnz
iret
sbb
xchg
mov
jg
out
das
mov
leave
adc
sbb
mov
ret
push
fldcw
std
push
inc
mov
js
xchg
xchg
je
ret
pop
xchg
mov
out
lahf
inc
inc
adcl
mov
mov
mov
mov
je
or
mov
sti
mov
je
clc
cmp
add
inc
test
cwtl
dec
shrl
pop
xchg
inc
sub
lea
mov
cwtl
adc
adc
sub
sti
pop
jne
pop
pop
fdivs
lds
adc
pop
jns
push
iret
jmp
push
dec
fadds
push
mov
mov
push
dec
fsubrp
out
jg
call
cmp
xchg
shll
mov
mov
push
sbb
movsb
out
push
xor
sbb
pushf
out
mov
dec
sar
fnstcw
out
add
imul
sti
xchg
inc
inc
pop
les
inc
and
and
int3
movsb
mov
cmp
pop
lods
mov
fcoms
ss
sbb
pop
dec
dec
push
call
hlt
dec
inc
add
shll
clc
js
sub
rcll
jmp
mov
push
mov
test
jl
dec
xor
loop
lods
aam
daa
in
cld
lds
jl
fs
out
mov
mov
sub
setl
fcomip
gs
call
mov
jg
sbb
cmp
cmp
outsb
es
iret
test
adc
popf
movsb
inc
jecxz
jno
decl
cwtl
inc
sti
mov
pushf
adc
xchg
fisttpll
xchg
add
mov
cmpsb
scas
rclb
cltd
sbb
das
ljmp
jl
ds
lret
mov
jne
aam
lcall
dec
mov
dec
mov
shll
sti
mov
add
shrb
pop
imul
int3
mov
nop
mov
adc
and
push
push
and
and
dec
iret
sub
mov
mov
ret
fcoml
or
loopne
cltd
push
push
movsb
cmp
mov
lret
aaa
sub
mov
mov
repnz
mov
sbb
je
add
pushf
cld
cmp
movsl
lock
rorb
mov
ret
adc
seto
dec
pop
das
xchg
mov
cltd
pop
test
gs
inc
pop
cli
and
test
ja
mov
push
adc
dec
jp
sbb
ss
mov
in
ret
ret
stos
inc
arpl
push
add
vmovlpd
pop
pop
dec
cltd
or
aaa
pop
addb
xorl
outsl
loopne
loope
fs
jnp
inc
ret
xor
int
push
xor
sbb
jge
sbb
xor
out
push
jae
inc
mov
mov
mov
inc
in
pusha
testb
mov
mov
idiv
sbb
pop
test
fstps
arpl
jb
sbbl
btr
push
and
dec
add
cld
dec
das
cmp
insl
mov
pop
cld
les
mov
loopne
adc
lock
addb
jno
in
xchg
hlt
jl
cwtl
mov
jle
cmp
jge
add
lea
and
pop
cmpsb
mov
shll
jns
xchg
stc
jp
hlt
add
verw
je
xchg
jecxz
mov
sub
cli
inc
or
mov
cmp
sub
push
mov
rcrl
push
into
xor
movsb
mov
enter
mov
xchg
xchg
mov
addr16
popa
cli
shrb
mov
push
test
jmp
nop
pop
rcrb
add
cmp
add
enter
jb
imul
repz
sub
fwait
push
mov
int
cwtl
shll
jb
lret
enter
inc
dec
loop
add
les
add
icebp
mov
incb
jge
stos
adc
popf
xtest
out
out
test
push
cltd
adc
arpl
and
sbb
negb
mov
sbb
shrl
cmp
leave
or
push
xchg
loope
fstpl
lea
lret
xchg
movsb
icebp
sub
out
ror
xor
fcomp
cli
xchg
lcall
into
sub
jmp
mov
sbb
mov
les
inc
mov
lret
inc
xchg
movsl
shrb
scas
iret
pushf
pop
or
imulb
mov
or
mov
divb
adc
sbb
mov
cmpsl
xor
data16
push
icebp
sub
jmp
cld
dec
fwait
loop
dec
sub
pusha
lcall
jmp
nop
inc
scas
call
rcrb
mov
dec
lcall
xchg
or
stos
dec
xchg
icebp
out
adcl
addr16
scas
iret
adc
jno
bound
insb
mov
adc
add
cmc
mov
in
cmp
das
or
outsb
pop
pop
sbb
add
push
xchg
jg
jb
mov
ret
mov
jns
cmp
addr16
fldcw
jmp
sahf
loope
mov
mov
lret
test
pop
cmp
xor
sbb
xchg
push
push
loopne
ficomps
push
push
pop
mov
lcall
inc
clc
and
or
addr16
movsb
stos
imul
stos
xorb
sbb
sub
jge
sbb
xor
mov
andl
pop
mov
movsb
and
in
fwait
push
nop
mov
bnd
scas
into
inc
movsb
sub
rorl
add
ret
dec
push
mov
xchg
clc
outsb
adc
xchg
adc
jb
fucomp
fstpl
leave
dec
mov
inc
cmp
jae
out
ds
sbb
sbb
pop
jns
aas
xchg
lea
js
mov
fisubs
cli
cmpsb
push
inc
enter
mov
mov
hlt
push
rcrb
data16
insb
dec
push
scas
and
in
pop
push
cmp
int3
stos
insb
jp
rorb
test
out
adc
inc
movl
dec
aam
icebp
rclb
imul
and
sub
loop
pop
push
ds
out
movsb
adc
lcall
ficompl
insb
imul
mov
jge
out
imul
jne
push
bound
sub
mov
out
mov
mov
mov
inc
mov
aam
aad
xlat
lds
jle
dec
in
arpl
outsl
or
push
mov
adc
nop
or
jae
and
sbb
or
jo
lods
add
nop
sbb
lea
dec
bound
pop
int3
loop
push
xlat
pushf
mov
insl
jns
add
or
mov
mov
inc
hlt
ret
and
inc
dec
mov
outsb
movsb
filds
and
sbb
mov
jnp
mov
ret
mov
insl
sub
lea
test
push
jecxz
sbb
jmp
ss
popa
test
fists
data16
popf
dec
pushf
mov
xchg
sbb
xchg
mov
xor
ffree
adc
or
xchg
in
enter
jae
sbb
repnz
xor
in
loopne
fcoms
inc
mov
push
jno
mov
add
or
cmpb
or
sub
sahf
pop
and
dec
aas
inc
mov
stos
stos
mov
outsb
in
jno
outsl
ret
sub
mov
lcall
les
pop
sub
sarl
pop
xchg
cli
push
mov
lock
xchg
add
into
call
cs
inc
sbb
and
pop
mov
and
icebp
outsb
cmp
cmp
lret
add
cmp
enter
mov
cli
fs
mov
popa
les
sti
inc
int
or
daa
jg
fcoml
xor
sti
adc
popa
mov
std
cmpsl
in
sub
mov
push
fsubs
xor
imul
dec
les
pop
xor
sbb
push
add
sbb
and
daa
jnp
jae
inc
sbb
loop
iret
stc
clc
mov
fwait
nop
aaa
gs
mov
pusha
ds
add
sub
fucomp
mov
ss
dec
mov
cli
xchg
pop
inc
cmp
push
int
add
mov
jl
in
jne
mov
jp
flds
movsb
iret
pop
add
push
js
repnz
xor
mov
notl
mov
movsl
sarl
jne
jmp
fistpll
test
sub
add
in
or
pop
adc
aad
shlb
sbb
xchg
push
dec
fidivs
cmp
pop
mov
xor
in
push
loop
inc
push
jl
inc
bnd
sbb
loopne
jge
or
adc
pop
and
ljmp
sbbl
das
loop
lahf
sbb
push
cmp
in
dec
out
mov
mov
in
xlat
and
cmpsb
sbb
into
decl
pop
xor
repnz
xor
mov
jp
nop
and
cli
gs
fimull
lcall
or
das
out
pop
in
loopne
movsl
das
mov
pop
cmpsl
mov
add
and
sbb
scas
adc
add
jmp
xor
out
pusha
xchg
mov
inc
jns
fs
dec
mov
ret
add
repnz
or
test
ret
mov
xchg
cmp
aaa
dec
in
inc
loope
cmp
lcall
dec
jnp
les
ja
lock
xorb
and
inc
add
push
mov
aad
xchg
dec
inc
adc
xchg
fnsave
les
mov
gs
and
jb
push
cmp
aas
xlat
push
pop
test
lcall
ret
cmp
xlat
mov
fxch
add
push
cld
imul
dec
in
adc
je
imul
add
mov
and
loope
ja
pop
pop
sti
inc
pop
rcll
jecxz
popa
test
notb
sub
push
dec
dec
ss
je
repnz
push
ds
add
adc
lods
xchg
adc
inc
pop
test
mov
imul
ffreep
in
mov
mov
adc
push
dec
gs
xchg
js
mov
inc
cmp
inc
rclb
jg
shrb
int
sbb
sbb
inc
xchg
enter
dec
ss
jmp
fdivs
loopne
pop
jb
mov
fst
pop
pop
loop
rolb
xor
insl
orl
add
paddusw
std
adc
mov
or
pop
inc
es
dec
sahf
inc
xor
andl
mov
dec
popf
icebp
mov
xlat
fwait
dec
jns
shll
dec
mov
loope
fwait
or
xor
xlat
inc
jns
and
jg
cmp
and
sub
adc
xchg
mov
test
sub
fs
notl
mov
lea
adc
pop
mov
pop
loope
xchg
icebp
mov
mov
jle
in
pop
movaps
pop
lret
lods
push
jno
loop
outsb
lea
ret
jae
out
fwait
mov
push
out
addr16
sub
and
mov
mov
mov
test
add
pop
mov
int3
outsb
in
and
adc
andl
cltd
cmp
push
or
xlat
or
push
add
mov
out
inc
ss
test
inc
xor
sbbl
scas
dec
sub
cmp
mov
pshufw
xor
mov
fwait
popf
inc
pop
and
popa
popf
push
fsubr
jnp
xchg
outsl
es
mov
dec
sub
xchg
and
add
icebp
sub
outsb
adc
arpl
decb
movsl
inc
cmpsl
mov
jp
sub
int3
pop
movsl
cld
iret
push
lea
lds
inc
inc
cmp
adc
loopne
lret
mov
imul
lahf
jmp
sbb
cmpsl
lods
push
test
cmp
into
dec
and
ret
add
lret
mov
sbb
enter
aam
adc
cmp
ret
adc
push
mov
out
pop
popa
mov
in
mov
or
lahf
ret
imul
mov
test
push
sarl
pusha
popa
xchg
rcll
mov
jmp
lret
jno
jb
ljmp
xchg
jecxz
xor
imul
or
pop
mov
adc
test
jbe
mov
inc
push
sub
cwtl
dec
sbb
testb
xchg
das
mov
repz
shll
mov
pusha
or
jge
lret
jne
mov
icebp
mov
mov
sbb
ja
js
or
jb
movsb
jo
outsl
xchg
outsl
out
adc
or
xchg
mov
lahf
stc
imul
fisttpll
sbb
daa
add
sahf
cmp
in
scas
dec
daa
iret
xchg
int
sub
repz
mov
xchg
in
bound
stos
stos
pop
lret
adc
imul
shll
ljmp
cmp
jb
lret
sarl
outsl
push
and
and
insb
cmp
loop
jnp
push
dec
xchg
int3
mov
jmp
mov
std
sarb
push
cmp
lds
outsl
inc
icebp
je
popf
push
hlt
mov
and
and
lret
sbb
ja
lret
pop
push
mov
cli
and
cmp
jecxz
inc
cmp
iret
mov
lahf
leave
jmp
xlat
cmp
pop
int
enter
mov
sahf
outsb
mov
lahf
sub
std
pop
push
dec
clc
sbb
pop
xchg
pop
inc
jb
push
les
mov
and
mov
movsb
xchg
scas
or
outsb
inc
imulb
xchg
mov
shlb
jle
push
mov
jge
sbb
nop
je
lods
inc
add
cmp
out
or
addps
fwait
adcl
or
adc
xchg
add
xlat
cmp
fstps
pop
dec
shrl
push
mov
inc
sbb
out
std
subb
jnp
test
in
cmp
ds
dec
adc
inc
add
or
xchg
fcomip
fbstp
les
adc
inc
cli
add
xchg
out
leave
lret
roll
loopne
pop
subb
dec
mov
insb
fwait
lds
xor
daa
outsb
sbb
and
mov
imul
stc
hlt
xchg
adc
cltd
cmpb
xchg
cmp
cld
ljmp
inc
aam
into
cmp
jecxz
lret
cli
in
inc
xchg
cmp
out
into
xor
xor
xchg
shl
je
add
gs
push
cmp
jecxz
cmp
mov
stos
insl
adc
mov
push
and
and
adc
mov
ja
mov
les
cmpsl
mov
cmp
pop
mov
stos
dec
adc
dec
and
bound
xor
mov
add
repz
dec
in
dec
sbb
push
lods
fisubs
je
jle
xor
lahf
push
lods
jnp
jle
inc
jle
sbb
fdivs
mov
pop
mov
in
out
pop
xchg
daa
std
pusha
fucomp
incl
pop
mov
sbb
test
sbb
adc
stc
aaa
aaa
sbb
scas
and
jb
movsb
es
sub
hlt
sub
jp
shll
hlt
cmp
call
mov
inc
cmp
in
xchg
dec
sbb
ret
lcall
shll
sbb
add
inc
sub
mov
mov
xor
into
sub
xchg
icebp
daa
adc
mov
dec
es
aaa
jp
dec
pop
pop
dec
mov
lods
testb
stos
inc
int
xchg
test
xchg
ljmp
div
pop
cmpsb
lods
or
std
jne
xchg
out
and
fcompl
cmpsb
jbe
xchg
push
leave
push
jecxz
sbb
inc
addr16
mov
arpl
je
jns
fsubl
xor
sub
insb
sbb
and
mov
push
sbb
mov
enter
xchg
push
xorb
fsubl
into
sbb
ss
xchg
shrb
and
ret
and
cmpsb
std
mov
xlat
add
adc
daa
mov
int3
clc
cltd
push
std
sbb
outsl
test
jg
pop
hlt
xor
or
outsl
xor
mov
mov
or
pushf
daa
push
jb
pop
dec
pop
ja
outsb
inc
add
push
pop
cmp
enter
mov
or
pop
push
ja
mov
mov
xor
inc
and
rcrb
fsts
add
shlb
add
mov
jg
mov
sub
push
xchg
push
push
ja
outsl
pop
sub
mov
cld
mov
in
inc
sub
mov
lcall
sbb
out
mov
out
jo
aas
sub
sbb
mov
jge
test
mov
ret
cld
stc
sub
test
push
xor
push
mov
enter
imul
sub
jl
popf
push
das
sbb
sub
stc
aas
stos
push
ss
test
ret
pushf
lret
imul
clc
jbe
insl
stos
xchg
out
in
hlt
pusha
mov
sbb
repz
or
and
pop
and
inc
cmpsl
mov
cmp
repnz
sbb
mov
popa
mov
mov
push
stos
xlat
fistl
or
loop
cmpsb
add
insl
pop
das
and
xchg
loope
dec
arpl
adc
jns
jo
imul
cmpsl
fstpl
out
jmp
push
sub
arpl
push
outsb
vmread
bound
mov
insl
test
popf
shrl
adc
insb
adc
hlt
jle
icebp
outsb
sbb
jp
rorb
arpl
mov
rep
mov
pushf
adc
addl
xor
stos
popf
rorb
add
cs
and
push
divl
data16
sahf
xchg
in
loopne
fistpl
stos
loope
mov
pusha
arpl
stc
lret
cmc
pop
mov
fsts
cwtl
pop
or
xor
adc
fisubrl
cwtl
dec
sti
cmp
pushf
pushf
cmp
sti
arpl
repnz
subl
inc
testb
push
outsl
frstor
cwtl
cmp
movsb
jns
xchg
adc
adc
or
jg
dec
xchg
push
add
mov
shlb
pop
and
iret
push
cmpsb
mov
cmp
hlt
and
and
adc
bnd
repnz
xchg
dec
dec
or
out
cmp
mov
sbb
mov
repnz
push
outsl
sarl
fnstcw
xchg
jnp
roll
stc
cmpxchg
test
rol
js
and
stos
idivb
xor
or
cmpl
inc
inc
pop
xor
into
mov
add
dec
xchg
adc
nop
cltd
push
and
lea
mov
movsb
mov
push
xor
ret
xchg
jo
jl
mov
cmp
cmp
sub
push
aad
out
pusha
mov
xor
std
inc
pop
cs
insl
dec
in
or
add
out
push
in
pop
gs
jnp
inc
sti
jo
and
push
and
add
hlt
or
sbb
pop
jns
xor
mov
add
mov
ljmp
add
test
add
adc
adc
scas
sub
pusha
bnd
sahf
adc
insl
ret
ret
cs
push
fucomp
arpl
stos
into
test
add
jp
xchg
mov
adc
cmp
xchg
incl
jne
push
mov
jbe
jno
je
and
lret
add
jmp
jp
push
sub
cmp
mov
dec
cld
adc
inc
jae
inc
aad
add
dec
fcoms
dec
subb
mov
cld
lock
pop
orl
insb
sahf
lcall
inc
jo
sub
and
xlat
xchg
int3
test
xchg
jno
add
or
gs
push
push
sbb
lea
incb
mov
add
xorb
hlt
push
insl
mov
mov
xchg
scas
push
mov
arpl
xlat
testl
mov
push
popa
add
insb
or
dec
inc
jle
adc
pushf
aad
sub
cmpsb
adc
decb
pop
sub
lock
cmp
inc
jl
adc
adc
xchg
pop
jns
js
and
pop
adc
iret
jbe
js
adc
push
insl
leave
inc
dec
inc
sahf
lods
mov
je
mov
fsubs
rcl
pop
mov
ja
xor
sbb
dec
pop
mov
or
push
outsl
pop
xor
popa
push
sbb
inc
xor
push
add
enter
mov
aaa
cwtl
addb
sahf
cmp
or
cld
jbe
mov
xor
and
add
inc
mov
xor
sti
dec
jg
or
xor
icebp
gs
jp
push
mov
flds
jbe
repnz
leave
inc
data16
jg
mov
cmp
mov
and
xchg
out
insl
je
cli
mov
adc
lods
sub
mov
jb
jmp
cltd
shl
outsb
sar
shl
notl
cmpsl
push
ja
not
loopne
cmpsl
outsb
pop
rorb
jmp
loope
shlb
jg
in
adc
dec
mov
push
cmc
dec
mov
outsb
sub
and
push
ja
pusha
cli
xor
lahf
stc
testl
into
fdivl
decb
movsb
lahf
and
or
outsl
cmp
add
enter
and
sub
int
jnp
pop
out
std
push
mov
mov
repnz
sub
sub
out
outsb
sbb
push
inc
adc
push
cli
sahf
out
pop
xchg
orl
mov
mov
dec
cwtl
cmp
scas
sbb
ljmp
fldl2t
mov
cmp
mov
hlt
add
popa
fs
jae
sbb
add
addr16
in
out
gs
sbb
mov
push
pop
push
test
adc
xchg
fs
jne
mov
or
push
pop
fwait
icebp
mov
aas
testb
out
push
sbb
push
adc
jne
repnz
xchg
int3
sbb
jg
repnz
subl
mov
or
jae
mov
popa
xchg
clc
imul
inc
enter
mov
mov
xor
fiadds
sbb
cld
loope
push
sub
pop
push
ret
push
ljmp
shrb
pushf
nop
out
lock
aam
mov
sub
nop
fsubs
xor
call
nop
inc
int
arpl
xchg
pop
lret
insb
adc
xchg
fldcw
inc
or
lods
pusha
mov
hlt
rol
mov
xor
std
imul
out
xchg
push
mov
outsb
fs
fsub
js
push
inc
cmp
test
mov
mov
pop
dec
aaa
cmp
popf
aad
stos
push
cmc
mov
xchg
loop
and
pushf
fsubr
pop
jl
mov
cltd
jnp
pop
stos
push
ret
sbb
mov
stc
add
mov
imul
push
xor
pusha
hlt
add
mov
mov
mov
das
mov
ja
add
mov
adc
data16
jl
aad
or
movsl
out
inc
push
or
push
sbb
icebp
movsb
xchg
push
sub
mov
add
roll
test
lods
sub
popf
ss
pop
xorl
ror
jg
cwtl
fcom
push
fisttps
dec
movsb
out
repz
arpl
andl
mov
into
sub
inc
mov
fisttpll
je
mov
ret
jbe
nop
loope
les
push
xchg
fwait
nop
lods
outsl
mov
push
lahf
sbb
movsl
mov
cmp
xchg
ss
pop
mov
rcrl
pop
pop
dec
mov
xchg
pop
pop
popf
in
mov
leave
cmc
push
pop
rcll
leave
mov
fwait
mov
push
jno
mulb
test
xchg
cmp
dec
fld
scas
roll
repnz
call
add
repz
scas
cmpsb
push
push
jle
aam
and
adcb
icebp
popa
push
out
xchg
and
inc
mov
mov
cmp
int
xchg
add
jge
imul
lret
sub
scas
cmc
mov
mov
in
xchg
dec
inc
mov
es
mov
adc
dec
xor
jae
pop
mov
xor
jae
inc
jl
lret
jp
imul
nop
push
les
lock
sbb
test
sub
mov
cmpl
sub
les
mov
jno
imul
jb
xchg
int3
jge
pop
push
and
ret
jbe
daa
lods
popl
inc
int3
imul
xchg
add
pusha
mov
int3
sbb
xorb
jb
cwtl
cltd
mov
jmp
jno
pop
pop
in
add
nop
adc
or
add
inc
xchg
adc
cmp
and
gs
and
pop
jecxz
adc
sub
push
mov
push
sbb
nop
ljmp
mov
cmp
ds
ja
xchg
test
jae
das
cmp
push
adcb
xchg
cmp
data16
xor
leave
push
push
out
ret
push
jnp
ficompl
out
in
gs
daa
add
clc
fucomip
xorb
or
sbb
mov
repnz
add
inc
loopne
jne
jg
push
dec
sti
rolb
fidivrl
inc
jno
out
jne
aam
inc
repz
mov
pop
movsb
inc
push
inc
sub
pop
loope
ljmp
mov
mov
mov
xor
lahf
adc
and
sbb
fsubl
ds
jno
mov
push
and
mov
int3
or
or
sahf
mov
mov
mov
nop
aad
inc
lahf
fistpll
sub
daa
das
sti
outsb
iret
pop
je
pop
mov
stos
add
push
jnp
cmp
insl
mov
cwtl
add
jb
adc
push
jl
ljmp
aam
jp
push
fmuls
dec
adc
lock
jle
lock
inc
shlb
xor
mov
imul
add
in
jecxz
arpl
insb
out
es
cltd
sbb
xor
inc
aaa
pop
shrd
xor
ficoms
ret
out
out
cli
sub
mov
push
insb
pop
insl
inc
mov
insb
mov
subb
test
jb
jle
dec
ret
in
jb
fisttps
rol
pop
ss
test
imul
outsb
aaa
push
rcll
adc
jno
inc
jns
cld
testl
sub
clc
jbe
pop
jp
push
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
cld
pop
jp
aaa
pop
jp
pinsrw
xchg
lds
cmp
mov
shrl
sarb
push
dec
dec
xor
jl
xchg
pushf
push
mov
fists
adc
mov
xor
in
scas
adc
and
lea
and
xchg
dec
dec
insb
mov
mov
pushf
dec
and
cmpsl
sbb
cmc
mov
mov
cmpsb
outsl
mov
cmp
je
jbe
mov
pushf
scas
cmp
into
and
sbb
dec
mov
sbb
stos
mov
int
mov
fidivl
shll
mov
push
scas
pop
sbb
inc
cwtl
pop
xchg
mov
jge
pushf
jg
xchg
or
movsb
insl
push
mov
sub
rclb
vmovq
mov
mov
pushf
aaa
mov
dec
popf
std
hlt
fbstp
sub
jns
popa
sub
lods
mov
movsb
or
inc
mov
stos
and
stos
dec
sub
es
aam
movsl
adc
mov
pop
jo
cwtl
xor
cltd
cmp
jp
push
jmp
inc
add
pop
test
enter
lods
sbb
xchg
lahf
dec
movsl
lock
aam
jns
dec
push
mov
fiaddl
mov
fwait
mov
movl
inc
test
push
mov
sbb
cmp
sub
int
std
stos
clc
push
adc
push
inc
xor
sbb
nop
inc
call
sub
stc
std
aam
pop
les
pop
jns
cld
sub
jle
data16
dec
out
cmp
pop
ds
pop
push
dec
and
aaa
jb
fisubrl
lea
mov
fisubl
and
divb
repz
pop
dec
shll
push
inc
xor
imulb
pusha
mov
fnstcw
and
outsl
stc
jle
xchg
outsb
push
in
mov
push
and
hlt
dec
shll
les
jmp
lcall
rcrl
hlt
xlat
stos
out
int3
mov
test
movb
push
lods
lcall
shlb
and
out
pusha
mov
add
dec
pop
pop
push
stc
negl
pop
xorb
and
xchg
arpl
fwait
cmp
pop
jmp
popf
and
cmp
sub
dec
cmc
xor
fcompl
ss
test
xlat
pop
ret
mov
push
js
iret
pop
fldt
sub
pop
cmp
pop
daa
push
cwtl
jmp
add
pop
xor
lds
cltd
jne
mov
movsl
stos
xor
pop
cmp
adc
aaa
mov
daa
subb
xor
xorl
xchg
pop
dec
mov
repz
jp
fs
gs
std
jp
shrd
xchg
add
mov
ss
xor
cmp
popa
cmp
inc
push
inc
test
push
adcl
add
xchg
push
push
dec
and
dec
xchg
rcl
test
push
xchg
or
jmp
shr
xchg
pushf
aad
inc
lods
adc
pushf
cmc
ss
jle
push
test
dec
xor
fidivs
pop
iret
mov
xchg
arpl
xlat
cltd
jns
data16
fwait
popw
inc
mov
sbb
aas
sub
cmp
inc
fdivp
std
mov
daa
sub
imul
mov
fs
outsl
loopne
scas
int3
nop
xor
jo
les
jae
xor
rorb
mov
popf
or
inc
test
movsb
les
jmp
push
pop
pusha
jo
or
repnz
mov
lret
mov
dec
mov
insb
lcall
pop
mov
jo
xchg
cmp
fdivrs
inc
sbb
sarl
fbld
pusha
sub
pop
inc
imul
hlt
fistl
das
cltd
es
jp
test
scas
aam
pop
stc
xchg
test
and
mov
pop
push
shlb
fstpt
bound
rorl
xchg
repnz
or
mov
sub
adc
or
call
lock
sub
mov
sbb
sbb
loopne
arpl
data16
dec
push
or
sub
movsb
sbb
aad
aad
xchg
leave
or
jo
movsb
inc
xor
xchg
jmp
or
out
and
inc
xor
add
out
and
xlat
push
rorl
hlt
inc
inc
test
adc
bound
or
mov
movsl
or
test
xor
sub
mov
loop
xor
mov
arpl
adc
out
call
push
xor
xchg
fisubrs
addr16
inc
idivl
add
popl
iret
jo
and
cld
fsubl
sub
add
out
push
out
insl
dec
int3
ljmp
mov
mov
subl
sub
es
test
pushl
or
push
hlt
bound
leave
push
pop
sarl
or
mov
jle
movsl
in
jne
adc
int3
pop
sub
sbb
and
jp
stc
mov
incl
sbbl
adc
cwtl
pop
sub
inc
xor
inc
stos
push
scas
xlat
adc
in
loop
pop
mov
xorb
mov
es
loopne
loop
out
mov
mov
data16
ljmp
adc
pop
loop
lods
shrb
mov
lea
rcrb
mov
mov
das
or
or
pop
or
xorl
int3
iret
add
outsb
lahf
arpl
dec
movsl
or
aam
inc
pop
outsl
lods
cmp
jg
cs
test
ss
mov
pushf
pop
jae
add
outsb
and
data16
cltd
popf
mov
mov
andb
aad
aam
xchg
mov
jns
aam
test
mov
add
cmp
int
imul
clc
inc
cmpsb
pop
sbb
test
jbe
inc
sub
ljmp
iret
imul
rorl
sub
push
arpl
inc
les
das
mov
ja
sbb
or
call
dec
mov
mov
rcll
mov
leave
mov
out
fisubrl
cmp
sub
xor
xor
pusha
ljmp
mov
add
sbb
pusha
fs
nop
repnz
or
lahf
mov
and
into
or
insb
lret
or
clc
shlb
sub
pushf
push
fsub
and
sbb
push
test
jecxz
pop
addr16
xchg
mov
fwait
push
mov
jae
inc
movb
mov
xchg
xchg
dec
mov
icebp
mov
xor
xchg
jg
or
es
mov
cmp
loope
cmp
sbbl
popa
sub
inc
inc
push
xchg
and
push
pop
repnz
gs
das
insl
imul
stos
mov
cmp
cmpsl
mov
lcall
int3
cmp
insb
rclb
xor
sti
out
inc
push
lock
xchg
iret
nop
mov
jno
lcall
push
jbe
ds
adc
jle
movsb
dec
mov
jmp
add
imul
cmp
mov
shlb
dec
add
dec
push
pop
xlat
push
jecxz
xor
mov
fnsave
out
xchg
in
or
fildl
inc
insl
mov
mov
movsb
rcrb
or
push
std
dec
cmc
ss
or
test
dec
and
add
inc
repz
shrb
aaa
notb
lret
mov
fnstcw
inc
fistpll
adc
mov
or
jnp
js
pop
xor
aam
mov
out
inc
addr16
xor
cmp
lahf
add
xchg
in
scas
sahf
push
mov
mov
test
mov
test
fmuls
xchg
mov
clc
mov
jg
push
dec
loop
adc
push
jno
ret
cmp
cmp
lods
lock
or
and
cmpsb
jmp
pop
add
fwait
loopne
add
sahf
jo
xchg
jle
mov
outsb
pop
sarb
xor
lods
loop
cmpsl
or
sbb
push
pop
mov
pop
std
repz
mov
sub
xchg
xchg
push
ja
push
and
cmp
xchg
xchg
inc
mov
cld
jle
mov
dec
ss
fdivrs
aaa
jg
mov
cmc
fldcw
sub
call
popf
mov
int3
dec
adc
cwtl
ret
cmp
aad
cmp
je
pop
adc
cmpl
rolb
mov
gs
adc
cmc
sbb
adc
test
imul
fiadds
adc
sahf
int
orb
mov
out
lock
xchg
mov
stc
lahf
mov
sbb
cmpsl
inc
jp
insb
in
outsl
xchg
and
rorb
xor
or
cmp
and
sub
dec
sbb
and
mulb
pop
inc
cmp
and
or
loop
stos
fs
sub
mov
mov
mov
xchg
out
sti
push
test
push
pusha
lcall
int3
incl
add
aas
adc
add
xchg
in
rcrb
inc
inc
pushf
je
pop
dec
ds
pop
inc
imul
fs
xor
adc
fistl
cmpb
enter
loopne
cltd
sbb
mov
test
adc
int
lods
lea
add
insl
inc
pop
lret
insb
and
dec
les
mov
sbb
cmp
out
lret
mull
add
mov
stc
push
mov
imul
lods
sbb
xor
sbb
sarb
fsubrl
pop
sub
sbb
es
scas
pushl
adc
jo
stos
sub
ret
repz
test
sbb
jp
addr16
jns
int
inc
icebp
sub
jb
push
stos
gs
mov
jno
adc
inc
insl
ficoml
rcrb
dec
popf
push
jge
inc
jnp
cmc
cs
test
loop
add
lock
mov
xchg
stos
xchg
jbe
adc
xor
and
daa
int3
pop
leave
mov
sbb
cmp
and
mov
andb
add
mov
mov
and
adc
jg
pop
dec
cli
and
sub
mov
aas
push
lock
dec
dec
sbb
jl
mov
imul
add
dec
stc
les
cs
lcall
add
and
outsl
cld
sarl
popa
dec
xor
mov
cmp
es
cli
inc
in
scas
lock
shl
sub
lds
sarl
pop
pop
test
add
xorb
outsl
cltd
mov
shll
scas
push
lods
sahf
and
lahf
mov
js,pt
icebp
push
mov
mov
adc
jae
jl
ret
jne
je
clc
lea
ljmp
and
xchg
leave
sbb
out
std
mov
pop
push
lods
out
mov
lret
adc
arpl
aad
dec
mov
data16
add
xchg
pop
pop
inc
sbb
adc
cmpsl
insl
outsb
movsl
and
or
lret
popf
stos
jle
push
insl
hlt
lods
cmc
into
shll
sub
jb
popf
out
push
ljmp
sbb
fdivr
xchg
ss
mov
sub
jb
ljmp
cmp
xlat
push
sbbl
lods
jne
insb
imul
in
push
mov
aas
aaa
cmp
test
mov
mov
jg
dec
mov
cltd
xor
dec
fstl
sarl
fdiv
test
mov
push
lcall
pop
pusha
scas
pop
cmpsl
dec
pop
jno
rcrb
ss
pop
mov
cmp
sbb
xchg
rclb
mov
or
mov
movsl
test
pop
repz
repz
imul
movsl
push
sub
loope
imul
popf
inc
sti
sub
and
cmp
dec
mov
jnp
cmp
lds
add
dec
and
pop
inc
test
in
sub
fs
cmp
dec
xchg
or
loopne
popa
call
jns
xlat
xchg
mov
cmc
adc
xchg
mov
inc
stos
mov
mov
mov
add
push
out
insl
insb
sub
dec
jno
test
out
add
adc
lods
mov
adc
iret
into
outsl
inc
mov
and
mov
mov
jns
pop
sub
in
xchg
mov
lds
push
mov
cld
mov
mov
fwait
xchg
mov
ds
cmp
arpl
sahf
fnstenv
loopne
jmp
cmp
inc
jecxz
inc
xchg
sub
xchg
xor
sbbb
test
pop
jne
ljmp
int3
and
add
jge
add
scas
mov
or
sbb
push
dec
outsl
into
daa
sub
cld
lret
push
hlt
push
call
into
pop
out
cmp
push
sbbl
pop
icebp
inc
lock
lahf
xor
popl
ljmp
enter
loope
xor
or
mov
in
add
mov
sbb
imul
sbb
mov
inc
int
fucomi
push
cld
dec
xchg
xchg
push
jb
incb
mov
insl
mov
xchg
repnz
shlb
lea
adc
adc
cmpsl
loopne
in
sbb
push
xor
adc
pushf
xor
bound
cs
mov
stos
adc
lcall
or
ss
inc
adc
push
sbbl
mov
shlb
xor
out
sub
mov
cltd
mov
inc
inc
insb
arpl
mov
call
jne
mov
adc
jl
pusha
xor
outsb
sub
cmp
popf
or
xchg
push
jo
add
add
sub
repnz
pop
push
mov
push
aad
push
mov
add
adc
or
icebp
arpl
add
insl
int
sar
popa
jmp
mov
cmp
mov
pop
mov
mov
rorl
mov
mov
push
pop
pusha
divb
sbb
xlat
cmp
pop
out
add
inc
loop
and
mov
cld
adc
sub
cmp
insb
xchg
fmull
push
push
cwtl
xor
pushf
mov
rclb
xchg
mov
mov
imul
sbbl
mov
or
shrb
stos
gs
pop
dec
outsl
in
and
mov
std
jbe
lret
pop
mov
sahf
dec
out
and
mov
xchg
cmpl
cmp
out
xchg
cltd
push
popa
daa
ret
push
inc
mov
inc
hlt
sbb
sub
frstor
xchg
inc
cmp
jp
inc
jg
xor
in
sar
stos
pop
cmpb
sub
pop
xor
or
dec
inc
cld
in
push
adc
clc
xor
iret
push
call
lret
mov
jbe
ret
outsb
test
sbb
jge
fistpll
scas
xor
lods
adc
std
sub
mov
lods
mov
outsl
jne
mov
ret
sub
and
and
inc
fwait
add
scas
push
fwait
repz
or
xchg
idivl
add
cmp
cmp
enter
das
adcb
imul
push
int3
popf
cs
in
gs
mov
cltd
cmc
pop
or
stc
pop
add
mov
popa
push
ret
cmp
cmp
popa
inc
sbb
push
test
ja
add
cltd
inc
sub
mull
fdivrl
loope
std
push
push
ret
dec
and
icebp
add
dec
inc
sbb
stc
or
jp
jae
scas
movsb
out
pop
adc
scas
dec
pop
ljmp
ror
adc
fdivs
push
sbb
leave
das
pop
stos
cmc
or
mov
xchg
adc
les
fucomi
jl
jns
mov
mov
mov
dec
inc
mov
sqrtps
movsl
xchg
or
mov
hlt
xchg
push
sbb
jns
jno
mov
jmp
ja
pushf
out
sub
movl
sub
jno
or
xor
xor
push
push
mov
jge
movsb
inc
fsubr
sub
out
mov
add
adc
pop
pop
inc
xor
jp
scas
pop
loop
adc
push
push
sbb
pop
xor
or
sarl
lea
dec
sub
pop
call
ja
fisubs
fldlg2
jmp
mov
xchg
addr16
or
sbb
add
pop
in
repz
mov
pop
test
stos
ror
adc
ret
outsl
jno
fistl
daa
mov
mov
adc
popf
xor
jbe
sub
dec
xor
adc
arpl
pop
pop
test
out
and
mov
sbb
lret
jl
stc
push
and
cmpsb
adc
leave
cmc
mov
out
push
dec
or
icebp
lahf
std
sbbb
dec
leave
insl
jnp
xchg
in
fnstenv
pop
pop
push
mov
sbb
loopne
mov
shl
ja
cld
push
pop
aas
cld
dec
jno
xchg
test
iret
mov
sub
adc
mov
inc
sbb
sub
jo
scas
xchg
out
sub
dec
ffree
imul
mov
into
pusha
fstps
test
pop
mov
ret
and
addr16
paddsw
daa
lods
mov
sub
cmp
inc
insl
xchg
adc
inc
mov
out
addl
iret
sub
adc
push
jne
es
adc
fildl
shlb
test
inc
imul
jl
int
adc
ret
xor
pop
jp
adc
gs
push
mov
dec
imul
loope
and
rcr
clc
andb
or
jg,pn
in
stos
dec
es
cmp
sub
sub
cmc
ds
insl
add
push
jmp
or
mov
int
or
inc
orb
pop
mov
sbb
mov
cmpsb
popl
mov
ret
mov
test
aam
adc
lea
adc
push
sub
mov
test
inc
push
ret
push
cmp
cltd
scas
cli
xchg
jle
adc
js
xor
push
fcomi
movsl
loopne
and
xor
rolb
outsl
mov
fstpt
jmp
mov
jne
movsl
inc
out
cmp
dec
cmp
rorb
mov
push
pop
lea
cmp
xchg
mov
dec
inc
stc
push
mov
push
pushl
fs
jbe
xchg
mov
int3
mov
adc
pop
xor
inc
adc
mov
xor
inc
xchg
mov
dec
pop
mov
mov
xchg
incb
add
fs
pop
fstpl
jp
nop
mov
sub
mov
mov
mov
mov
scas
or
pop
or
add
mov
inc
daa
call
inc
pop
in
test
add
dec
daa
inc
mov
adc
xchg
ffree
pop
jg
cmpsl
aas
in
iret
out
push
test
mov
pop
jb
negb
cs
ret
xchg
cmpsb
and
mov
or
aad
cmp
jl
and
inc
mov
adc
and
xchg
or
iret
hlt
rorb
aad
jge
lahf
shrb
js
loopne
loopne
repnz
cmp
mov
push
imul
imul
mov
pop
xor
rcrb
mov
fwait
cld
stc
or
insb
add
cmp
or
jle
and
adc
mov
fdivs
fiaddl
pop
jl
adc
xchg
in
fistpl
sbb
das
or
sub
daa
fisttps
cs
push
fcmovnu
ss
pop
xchg
enter
jo
jp
je
outsl
jecxz
sbb
fisttpl
repnz
notl
in
push
inc
push
fwait
sbb
movsl
push
jge
pop
in
fdivl
sbb
xor
mov
mov
push
mov
add
mov
das
xchg
ss
sub
xchg
cmp
int3
sbb
sub
stos
dec
insl
cmp
or
js
inc
adc
repz
inc
add
fidivrs
dec
cwtl
mov
std
testb
lock
adc
inc
nop
mov
in
ret
hlt
mov
mov
gs
addb
jecxz
cwtl
mov
adc
sbb
fstps
sarl
in
mov
xchg
push
ljmp
inc
mov
ret
rolb
sbb
inc
dec
je
xorb
xlat
das
push
pop
cs
pop
scas
jl
inc
lahf
push
ret
pushf
shr
sbb
sbb
pop
sbb
repz
xchg
add
data16
xchg
jmp
cs
out
rorl
aas
dec
inc
ja
add
popa
add
movsb
jle
inc
jge
push
add
mov
jo
ja
in
or
leave
pop
nop
inc
jp
in
in
pushf
lds
pop
sti
sbb
push
ljmp
rorl
xor
inc
rol
adc
cmpsb
loop
aas
sbb
cmpsl
fidivs
mov
pop
jmp
pop
jle
sub
sub
ret
lock
hlt
sti
mov
fbstp
in
xor
lods
cwtl
pop
shl
jle
loop
ret
rcl
xor
aas
inc
add
and
push
cwtl
lds
adc
dec
mov
int
sub
cmp
xchg
jne
mov
push
xor
outsb
dec
rclb
xchg
std
xchg
pop
push
enter
shrb
sahf
outsb
fadds
and
cmp
imul
dec
ljmp
mov
xchg
xlat
mov
nop
les
lret
xor
adc
aas
pop
leave
outsb
rcrb
stos
in
cld
lock
pusha
fs
pop
mov
aaa
add
ss
scas
sbb
in
addb
xor
push
sbb
nop
jle
dec
xchg
call
xchg
jnp
fldl
jle
loope
iret
mov
push
sub
shr
outsl
xchg
push
js
aas
shl
dec
mov
test
std
xchg
fsubrl
jbe
in
push
out
or
jmp
add
xchg
lret
and
jae
mov
cs
jg
xchg
cmp
sbb
repz
cmpb
cmp
inc
sub
stos
negl
cmp
addb
lret
imul
je
rorl
orb
fcomps
mov
mov
outsl
sub
ret
in
pop
test
adc
sahf
dec
and
mov
cmpsb
mov
and
mov
icebp
inc
pop
mov
mov
or
js
push
mov
stc
xchg
xor
cli
cmp
xor
into
lret
xchg
push
xor
sbb
mov
jmp
in
rorb
xchg
mov
dec
xor
and
jl
aad
fwait
loop
or
sub
mov
jne
outsl
sbb
mov
xor
xor
adcb
mov
icebp
lahf
je
cmpsb
sub
fnstcw
shlb
aam
pop
in
mov
sub
push
sub
ffreep
jbe
divb
aas
xchg
ret
adcl
adc
jne
dec
cmp
out
fs
popa
idivb
aas
bound
cltd
mov
addr16
mov
push
es
ret
std
jae
push
jg
iret
das
xor
mov
jmp
nop
rcrb
lret
je
cwtl
jo
cmc
movsl
mov
jmp
inc
jge
test
cmp
imul
push
mov
icebp
jge
adc
incb
test
mov
jb
jbe
jnp
xor
imul
in
in
stc
ds
inc
mov
out
dec
ficoml
iret
pop
scas
jbe
inc
adc
add
test
std
fcmove
in
jl
out
stc
cmp
into
fs
jnp
mov
add
mov
jae
mov
mov
push
movsb
scas
inc
add
inc
addb
jo
gs
cmp
inc
inc
sbb
gs
dec
xchg
imul
stos
or
and
inc
add
int3
push
es
add
movhps
mov
out
adcb
rorb
xchg
mov
out
jg
sub
and
cmp
jno
cmp
or
add
mov
sub
jae
call
adcb
inc
test
sbb
mov
fiadds
cmc
mov
loope
mov
add
push
test
movsb
inc
and
sti
xor
push
xor
xor
fadd
leave
call
popa
sbb
inc
push
lret
in
loop
movsl
loope
addr16
ss
dec
negl
dec
daa
jecxz
adc
pop
popf
ret
insl
jo
push
dec
cld
jmp
xor
sub
mov
inc
adc
sbb
or
jo
lods
adc
mov
add
cmpsl
ret
dec
hlt
pop
movb
rcl
scas
imul
out
ret
mov
mov
sub
outsl
add
push
push
or
int3
stc
push
xor
aaa
xchg
push
cmp
outsl
repz
pop
mov
jb,pt
leave
sub
pushl
xor
iret
lock
push
or
mov
pop
cli
aam
dec
nop
aam
lahf
lret
stos
js
aad
lock
xchg
cmp
lock
adc
pop
adc
jecxz
fisttps
lcall
ss
mov
push
xchg
mov
std
clc
and
lock
jbe
orb
scas
pop
mov
push
in
xchg
pop
iret
and
adc
mov
mov
mov
push
nop
in
jle
out
jo
mov
insl
ja
lcall
push
xchg
ja
popa
and
shll
mov
mov
sub
adc
mov
lret
push
or
jge
mov
xchg
jne
jge
lea
ret
or
out
faddp
pop
int
push
jno
iret
adc
popa
notl
pop
mov
lock
popa
out
outsl
leave
add
movsl
sub
enter
xor
pop
pop
adc
inc
jge
or
cmp
test
mov
inc
inc
xchg
sub
icebp
xchg
test
inc
addr16
aaa
fldlg2
mov
dec
ficoml
leave
scas
divl
bound
mov
lahf
pushf
push
es
inc
pop
cmc
fwait
lock
pop
cmp
and
mov
out
push
cmc
and
lods
jb
jg
push
sub
push
push
sbb
insl
lcall
mov
test
adc
mov
lret
push
cmp
scas
sti
sti
push
mov
decb
in
xchg
ljmp
adc
push
imul
repz
ficoms
inc
ret
fildll
setno
dec
xchg
ficomps
in
jae
gs
pop
insl
mov
test
and
push
aad
push
loope
xchg
movsl
repz
mov
cmp
cmp
imul
mov
fwait
movsl
mov
mov
mov
fbld
fxch
xchg
add
js
xchg
push
mov
inc
xchg
sub
jg
sarl
mov
gs
sbb
outsb
cmpsb
mov
add
movsb
testb
add
pop
mov
shl
xlat
stos
loop
fs
ljmp
decl
inc
int3
out
mov
mov
lret
cld
jl
xchg
clc
push
cmp
lcall
mov
sbb
sub
mov
dec
in
or
pop
sbb
dec
sbb
dec
stos
leave
ror
or
cmp
dec
or
std
orl
mov
movl
cmp
fstpt
sbb
or
add
daa
pop
dec
push
addr16
leave
mov
imul
inc
adc
cs
leavew
push
call
popa
lods
jmp
jmp
jo
pop
dec
jle
mov
and
int3
mov
dec
push
sbb
add
pop
mov
fdivrl
out
xchg
push
xchg
leave
ds
jp
xor
sub
test
bswap
mov
push
add
sub
xchg
ret
dec
mov
mov
mov
push
lea
out
sub
push
push
dec
cmc
repnz
xchg
inc
push
lods
andl
outsb
hlt
or
push
test
mov
scas
scas
xchg
mov
imul
sub
xor
sub
arpl
push
add
scas
mov
addr16
sub
jns
xchg
pop
insb
mov
xor
dec
or
push
xchg
adc
mov
xchg
lret
xor
jmp
rcrb
xchg
inc
movl
out
lret
int
js
sub
push
inc
shl
pop
xchg
xlat
aad
adc
mov
jl
int3
jo
xor
cmpsl
call
leave
xchg
sub
scas
cmp
shlb
sbb
xor
or
dec
adc
dec
je
test
cmpsl
out
fstps
lahf
ret
pcmpgtb
test
pop
or
int
push
pop
sbb
mov
xchg
add
lret
jnp
mov
cmp
pop
std
popa
mov
xchg
fcmovu
aam
jecxz
fldcw
in
daa
dec
loop
loopne
push
mov
call
test
mov
mov
fstps
and
fildl
push
scas
sbb
push
mov
test
or
or
pusha
push
xchg
xor
pop
repnz
pop
lcall
jne
hlt
xchg
cmp
and
notb
movsb
bswap
loopne
mov
mov
subb
and
orb
push
sub
push
sbb
xchg
es
mov
cmp
stos
mov
repnz
sti
xchg
inc
push
decl
xchg
stc
jge
cmp
bound
jge
fdivl
xor
in
mov
mulb
imul
shl
scas
cmp
jge
adc
xchg
das
movb
inc
add
push
cld
out
nop
aam
jbe
cmc
cmpsb
pop
rcrl
xchg
repnz
xor
push
call
and
hlt
sbb
jl
test
or
adc
mov
test
xchg
pop
inc
cmp
mov
or
in
cmp
sbb
nop
enter
jbe
pop
call
mov
pop
pop
mov
pop
xor
push
aaa
dec
add
testl
rcrb
jg
jae
cmc
xor
jmp
sbb
insl
lods
or
in
test
dec
lock
add
xchg
mov
sahf
push
pusha
xchg
mov
scas
mov
inc
cs
stos
icebp
daa
pop
push
jg
movsl
ret
inc
adc
test
add
push
popf
pcmpeqd
adc
adc
out
jg
aaa
pop
jg
leave
jmp
dec
push
cmp
hlt
sub
inc
adc
movsb
imul
cmp
pusha
mov
sub
outsb
cli
jmp
adc
pop
push
xchg
aad
aam
and
cmpsl
std
and
in
outsb
imul
clc
mov
jb
mov
cltd
lods
lods
notb
lret
cmpl
dec
cld
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
push
dec
in
je
jnp
mov
dec
xor
lret
xor
pop
mov
std
ret
xchg
lea
lcall
insl
sub
push
cmp
mov
jns
pop
shrb
jb
xor
cli
icebp
jge
jge
lret
dec
lret
mov
add
mov
adcb
aas
fisubrs
gs
aad
ja
test
and
jnp
and
jecxz
push
jecxz
and
dec
sub
cmpsb
pop
lds
xor
or
fidivl
sahf
xchg
jecxz
sbb
out
push
pop
xchg
push
pop
dec
out
orl
hlt
inc
push
cmpsl
movsb
ja
shlb
daa
or
pop
pop
mov
cmp
cmpsl
daa
out
xchg
icebp
ja
popa
mov
movsl
adc
and
or
mov
loop
loope
add
pushf
jae
add
jg
cmp
mov
imul
sub
je
lahf
mov
flds
stos
imul
mov
scas
cmp
in
mov
pushf
les
mov
stos
sahf
xor
jne
lret
push
cmc
mov
mov
add
sbb
mov
mov
pop
std
roll
movsb
inc
inc
or
arpl
cmpsb
mov
stc
loop
adcb
aam
scas
addr16
push
shlb
and
jle
mov
cltd
mov
jmp
push
xlat
add
jbe
inc
arpl
fistpl
jne
stos
sbb
jnp
addr16
ds
addr16
adc
dec
pop
mov
xorb
clc
and
scas
sti
lahf
push
mov
xorb
adc
push
lahf
imull
ret
push
add
push
aaa
lahf
call
outsl
in
aad
xor
sarb
cld
xchg
push
icebp
pop
mov
push
not
nop
lret
xchg
pop
xlat
xor
es
aas
adc
add
inc
add
push
mov
xor
mov
test
dec
fwait
dec
pop
mov
push
push
mov
xchg
test
das
fs
movsb
lahf
sbb
sub
mov
mov
add
inc
movsl
mov
outsb
inc
and
push
jmp
pop
or
stos
mov
sub
in
jg
sbb
adc
or
hlt
push
cld
incb
fstpl
fstps
stos
popf
inc
push
mov
fsubrs
out
stos
xor
fidivrs
mov
les
add
stos
mov
shlb
inc
stos
sub
rolb
inc
xor
outsb
aad
cmc
sub
mov
test
into
mov
xor
faddp
iret
rcll
lods
mov
ss
cmc
mov
sahf
popa
in
imul
repnz
mov
jmp
xchg
test
leave
aad
jae
popl
lahf
fdivrs
pop
clc
je
in
jge
pop
push
mov
test
test
loop
jle
pusha
cmp
pop
or
xor
stc
lods
sub
sbb
out
les
mov
push
sub
inc
xchg
lods
int3
cmpsl
clc
mov
adc
stos
lcall
iret
in
fidivrs
jmp
sub
adc
sbb
scas
pop
insl
xor
call
das
cltd
popf
pop
cmp
push
push
push
shlb
in
pop
or
sbb
pop
mov
in
jbe
jmp
int3
lahf
dec
aaa
in
repz
mov
xorl
sbb
push
sbb
mov
push
aam
sbb
sub
hlt
imul
push
mov
data16
jge
mov
adc
and
ror
popa
testb
xchg
and
mov
add
test
cmpsl
adc
rcrl
or
imul
xchg
psubd
scas
pop
add
in
stc
in
inc
mov
imul
inc
dec
mov
cmc
jge
fisttpll
pop
push
xchg
pop
rcrl
inc
and
loop
aam
iret
pop
push
fmul
leave
hlt
lds
lods
pop
stc
adc
sbb
sahf
enter
lea
test
adc
sbb
push
out
rcll
jne
push
cmc
repnz
adc
mov
and
inc
xor
ljmp
enter
andb
cli
push
outsb
cmp
dec
aam
lahf
xchg
mov
cmp
adc
orb
pop
xor
push
stos
push
shlb
lods
dec
push
int3
iret
mov
xchg
loopne
loop
fs
sub
mov
mov
loop
sbb
mov
lock
or
xchg
and
movl
sahf
lahf
cli
adc
dec
xor
adc
imul
and
push
imul
ret
xor
orb
out
push
sub
leave
lods
cwtl
jge
mov
xchg
lret
pop
dec
pop
cmp
into
xor
popa
mov
xlat
sub
xchg
mov
xchg
inc
mov
dec
lret
push
dec
aaa
or
push
add
scas
loopne
push
test
ljmp
into
lret
mov
push
pop
aad
cmpb
test
xor
aas
inc
test
xchg
in
pop
out
cmc
loopne
iret
xchg
sub
arpl
sub
cld
jg
ficoms
inc
dec
sahf
xchg
imul
xchg
es
into
push
add
mov
pop
data16
add
push
pop
lock
push
or
jle
into
sbbl
js
push
rcrb
in
enter
mov
xlat
in
push
rcrl
cwtl
lds
data16
push
mov
popa
mov
push
dec
leave
clc
mov
in
xor
les
xchg
je
xchg
push
lcall
push
and
pmuludq
sub
push
lahf
lret
adc
into
lret
stc
lret
mov
mov
iret
aaa
xor
shll
cmp
shl
sbb
cwtl
lahf
push
sbb
mov
add
stos
imul
stc
adc
sub
dec
jb
jecxz
fdiv
push
movsb
out
pop
sub
pop
xor
mov
jle
xor
mov
fnstcw
jbe
xchg
jo
fnstsw
lcall
test
dec
insl
cmp
jl
scas
lahf
sub
mov
lods
sub
adc
sarb
dec
xchg
or
pop
enter
mov
scas
xchg
push
inc
sub
push
cmpsb
lods
mov
jns
sarb
inc
movsw
sub
sub
out
or
test
cs
push
mov
push
loop
adc
lea
jns
sub
inc
ss
or
mov
dec
adc
movsl
push
ret
adc
pop
fincstp
imulb
cltd
into
mov
sbb
cmc
cli
test
or
and
push
mov
cmpsl
sub
test
jb
test
jecxz
xor
jmp
sbb
pusha
cmp
dec
lods
sbb
cmpsl
in
mov
cwtl
gs
iret
je
mov
movsb
xchg
mov
mov
sbb
popf
out
cmp
dec
lods
lahf
inc
lcall
dec
ret
sbb
push
xor
js
push
cld
mov
adc
mov
and
sti
ficomps
ds
sbb
outsl
ja
jnp
movsl
or
sub
cli
or
sub
cs
add
lods
sbb
mov
and
test
lods
out
push
and
xor
fisttps
jp
movsb
push
jo
and
ret
pop
rclb
int3
lods
mov
ficompl
jg
adc
idiv
in
push
mov
lcall
faddl
adc
icebp
loopne
mov
shrd
daa
mov
imul
cwtl
sar
fldt
bound
icebp
cli
ds
xor
fwait
dec
enter
pop
mov
jge
mov
lcall
into
xor
pop
es
push
and
imul
xor
add
repz
fcom
or
sti
daa
xor
sub
test
mov
mov
inc
push
jno
aas
push
dec
jnp
xchg
add
xchg
mov
out
mov
pop
jmp
and
imul
jne
jl
dec
dec
popa
popa
aad
repz
sarl
push
jp
push
dec
pop
and
sub
int
sbb
xchg
imul
in
aad
or
xchg
xor
or
and
mov
fcomi
xor
in
mov
push
sarb
push
pop
push
push
dec
out
xor
inc
xchg
clc
push
arpl
pushf
sbb
in
addr16
clc
pop
in
scas
movsl
cmp
sub
aaa
jb
sarb
movsb
js
push
and
iret
jo
scas
out
cltd
scas
lahf
mov
mov
in
xor
jbe
or
mov
adc
and
push
pop
mov
adc
jp
push
hlt
mov
movsb
inc
mov
inc
pushf
fdivrs
cs
jb
cwtl
shlb
dec
inc
cld
xchg
test
inc
jns
insb
cmp
xor
jl
negl
mov
shrl
in
pop
xchg
jnp
lds
lea
adc
sub
ljmp
jne
mov
jp
in
out
loope
push
dec
add
leave
or
jmp
sbb
cs
lret
jb
out
add
cwtl
stc
gs
outsb
sahf
sahf
bound
cmc
js
aas
cltd
mov
jl
dec
xlat
jl
insb
ljmp
scas
lahf
ss
mov
or
push
xor
dec
sbb
adc
cmpsl
ja
bswap
dec
pop
sbb
jb
loope
push
mov
mov
aas
bound
enter
lds
jnp
arpl
pusha
xchg
cmp
inc
lcall
push
fmull
xor
lahf
out
dec
je
ja
adc
imul
sub
shrl
pop
sarb
stos
pop
mov
cwtl
imulb
push
test
test
mov
test
jbe
and
daa
jnp
xchg
xchg
xor
pop
xchg
pushf
cld
jo
dec
jmp
gs
inc
mov
push
adc
mov
mov
pop
cmpsb
or
movsl
popf
in
jbe,pn
xorb
pop
add
mov
fsubl
ds
test
out
in
add
or
sahf
dec
rcrl
ds
jbe
mov
out
sbb
jae
jnp
mov
je
inc
inc
mov
popa
dec
pop
test
mov
fildll
fisubs
or
xchg
movsb
push
rcll
cmp
ret
pop
pop
lcall
ss
aaa
jl
ss
dec
jb
movsb
mov
jle
clc
sub
out
add
fisubrl
adcb
and
mulb
shrb
incl
or
and
push
mov
push
add
mov
loopne
sti
mov
dec
inc
sbb
and
mov
adc
in
sti
push
shrl
cmc
pop
inc
addr16
repz
pop
dec
pusha
das
cwtl
jbe
cli
cli
popa
hlt
push
push
adcb
enter
push
pop
sub
test
jnp
and
mov
xor
push
inc
jnp
ret
and
cmp
leave
xor
jb
lock
ror
pop
push
jge
insl
in
lods
cmpl
jbe
imul
rcl
mov
and
cmp
push
pop
lea
je
test
mov
fdivrl
mov
pop
cmp
pop
fldl
movsb
sub
adc
dec
cmp
mov
cmc
imull
addr16
das
popa
cmp
je
sarb
add
or
inc
jno
imul
xor
cmp
nop
decb
pop
xchg
jmp
xchg
pop
sub
inc
lock
les
lods
das
cwtl
mov
sbb
push
xor
packssdw
or
push
cmp
out
aad
xor
es
inc
daa
fisttpll
ja
and
lds
mov
push
fst
test
jns
lahf
jge
loopne
imul
shl
hlt
daa
xchg
push
in
add
adc
dec
pusha
or
out
push
scas
stc
inc
adc
divl
inc
sub
std
jnp
inc
push
push
pop
loop
or
push
in
add
mov
mov
repnz
ret
mov
adc
aad
aad
mov
pop
movsl
pop
in
dec
cmpl
movsl
jp
cmpsl
fbld
jbe
dec
fiadds
cli
cmp
xchg
lcall
cmpb
jne
scas
sub
jae
outsl
out
dec
or
in
cmp
shrl
insl
push
add
inc
cmp
shrl
cmp
icebp
scas
fiadds
pop
sbbl
and
lahf
sub
and
sub
sbb
out
ret
jl
ret
adc
loope
outsl
enter
adc
mov
push
mov
es
mov
hlt
jno
dec
bound
xchg
xlat
lods
push
sbb
or
sub
nop
add
or
mov
in
test
inc
in
stos
and
fsub
jb
mov
lret
sub
push
stos
icebp
test
push
dec
mov
inc
pusha
mov
jbe
addr16
outsb
pop
cmpsl
cs
ret
mov
test
scas
sbb
dec
cmpsb
outsb
shrl
cmc
xchg
dec
js
xor
push
cwtl
jo
push
fwait
das
test
inc
loop
mov
shlb
stos
sbb
push
shl
lcall
addl
mov
scas
fsub
jg
sahf
sub
cmpb
fs
cmp
insl
mov
xchg
icebp
int
push
les
jns
bnd
out
mov
rcr
mov
mov
das
xor
outsl
iret
pop
aaa
scas
add
hlt
cmp
cmpsb
imull
test
lahf
inc
sub
inc
mov
test
jae
push
dec
leave
jne
idivl
mov
notl
out
icebp
arpl
leave
add
das
jne
mov
mov
sub
in
xor
scas
loop
stos
inc
mov
xlat
dec
cmp
dec
sub
add
jne
push
push
lea
push
cmp
ds
push
push
std
test
or
imul
cmc
inc
add
add
cmp
pop
in
lds
xlat
jmp
push
int3
mov
popf
mov
xlat
ficoms
xor
xor
mov
imul
cltd
int3
cmp
fistpl
pop
int3
in
mov
mov
push
add
sub
das
mov
jno
pop
cmpl
pop
sub
sub
adc
mov
adc
lret
push
push
imull
jecxz
mov
shlb
in
and
mov
mov
in
rorb
mov
mov
push
sub
mov
push
fucom
arpl
jno
dec
out
rcll
loop
xor
mov
idivb
cmp
lds
in
xor
call
inc
fs
in
add
adc
repz
fldt
ja
xchg
mov
outsb
xor
rep
and
mov
sbb
push
test
jecxz
push
scas
negb
push
mov
mov
add
and
xchg
ds
loopne
lock
mov
xchg
adc
int
xor
shll
push
xchg
mov
out
inc
jecxz
outsl
sbb
gs
jo
jae
cmp
hlt
adc
jb
in
and
lock
push
xchg
xlat
adc
enter
xor
push
std
ss
fwait
sbb
push
lds
inc
or
jb
gs
push
dec
stc
jne
jno
jno
mov
xchg
test
xorb
mov
imul
jecxz
int
je
and
mov
ljmp
cld
popa
jecxz
dec
popf
xchg
lea
xchg
popa
xchg
fninit
in
lret
pop
data16
push
pop
ja
xchg
test
movsb
push
mov
cli
add
iret
push
push
shl
adc
test
rclb
adc
mov
mov
int
loope
push
loopne
enter
rorl
mov
push
mov
arpl
add
mov
nop
lret
jl
push
stos
cmp
cmp
mov
jns
fs
aam
push
aad
cmp
aaa
enter
and
jns
in
cmp
add
cs
mov
int
xchg
pop
das
fisubrs
push
xorb
fbld
icebp
jmp
mov
cmp
loop
fnstsw
mov
add
insb
xor
cmp
mov
mov
mov
pop
or
mov
lock
shll
or
mov
sbb
add
mov
mov
dec
inc
popa
cmpb
and
sub
xor
idivb
mov
jp
adc
lea
jbe,pn
addb
outsb
add
add
aad
mov
pop
sarl
loopne
popf
arpl
mov
pop
es
int
mov
out
pop
add
lods
pop
sub
int
adc
dec
inc
inc
add
daa
outsl
pop
push
shlb
sarl
jno
inc
pop
sub
test
jp
mov
inc
test
xchg
push
cld
dec
daa
push
push
inc
fimull
js
cmpsl
and
push
mov
out
in
jg
pop
push
bound
cmpl
int
sbb
or
cmp
or
lods
shr
aaa
mov
or
mov
addr16
dec
mov
sub
add
push
iret
or
or
cmp
and
mov
jae
xchg
test
xchg
jns
mov
dec
cli
cmp
inc
mov
cmpsb
insb
addr16
out
aas
xlat
cmp
xor
dec
adc
push
cltd
icebp
popa
jb
rcrl
sbb
decl
pop
repz
push
stc
out
xor
fistpl
add
jae
pushl
jo
sub
shr
loope
cmp
jecxz
in
mov
inc
test
sti
fst
xor
jecxz
pusha
push
addr16
add
inc
mov
lahf
cmp
out
adc
sbb
out
lret
rorl
fdivrl
and
dec
cmp
adc
in
lds
in
sub
or
mov
dec
push
dec
nop
add
pop
and
mov
and
lret
xchg
aad
pop
sti
mov
rolb
sub
repz
mov
xchg
push
jns
inc
xchg
push
add
pusha
enter
sbbl
dec
xchg
or
rclb
lcall
and
pop
and
inc
mov
adcb
push
out
ret
inc
insb
les
push
xchg
out
shlb
inc
pop
out
movsb
mov
dec
xchg
jmp
mul
pop
pop
aam
hlt
cli
fisttpll
xor
loop
adc
sbb
and
xchg
call
insl
cli
push
push
and
and
out
and
push
sbb
insl
imul
imul
sub
lcall
pop
pop
lods
aad
fsubl
pushf
jne
std
mov
pop
out
addb
bound
aam
xor
cmp
dec
je
adc
scas
or
jecxz
movb
arpl
pop
mov
scas
adcl
jns
dec
dec
in
xchg
jns
mov
push
lds
scas
mov
mov
cwtl
xchg
loopne
rcll
mov
push
fwait
mov
ds
pop
push
jl
pop
pop
and
test
jb
shrb
lcall
or
xor
orb
imul
push
mov
xchg
pop
xchg
shrb
js
sbb
fisubl
xlat
jg
popa
sub
push
dec
mov
ret
and
je
aaa
stc
mov
jb
andl
int
cs
dec
das
neg
mov
dec
das
fiaddl
movsb
shl
int
mov
mov
mov
cmp
sub
jae
jecxz
loope
jge
sarl
ljmp
push
push
in
call
push
xlat
loope
ja
push
inc
mov
ret
push
mov
push
cmp
movsb
or
pop
or
ds
int
push
mov
cmp
pop
gs
pop
sbb
test
gs
mov
xor
aam
mov
inc
sub
mov
mov
xor
cs
adc
cmp
jg
out
out
xlat
mov
cs
das
mov
xchg
lret
ss
clc
push
dec
jmp
or
dec
int3
mov
push
jecxz
test
shl
sub
mov
addb
push
dec
mov
dec
jne
iret
mov
cmc
pop
js
je
cld
cmp
cltd
mov
int
xchg
inc
stos
lcall
gs
sbb
lahf
lret
mov
stos
dec
xchg
aad
jle
test
sbb
push
pop
cmp
xor
jg
cmpsl
add
mov
inc
aam
pop
imul
insb
incl
dec
lcall
adc
call
mov
ljmp
xchg
add
pop
clc
jg
xchg
mov
inc
push
sub
dec
movsb
fnsave
mov
repz
pop
fcomp
stos
or
add
mov
inc
imul
push
mov
inc
and
outsl
adc
int
jne
add
outsl
xchg
push
cmp
stos
addb
cmp
push
mov
clc
shll
xlat
cmp
mov
test
ret
fisubrs
mov
lret
xchg
int3
int
fsubp
jae
lds
clc
enter
pop
rorl
fisttpl
insl
sub
repnz
sub
or
cmp
push
pop
aam
fsts
add
cmp
aad
inc
js
xor
testl
std
test
push
mov
out
scas
jno
xchg
das
push
cltd
scas
sti
sahf
arpl
lock
pop
sti
lea
stc
mov
inc
jmp
loopne
outsb
inc
lret
adc
sbb
add
jns
aam
aad
aaa
push
stos
subl
pushf
push
xchg
pop
dec
mov
mov
in
rorl
rclb
je
add
popa
aam
adcb
sbb
jb
cmpsl
cwtl
xchg
ret
outsl
lods
fidivrs
dec
mov
cltd
cltd
xor
xchg
popf
push
in
imulb
add
and
lods
enter
cltd
cltd
pop
leave
addr16
in
pop
pop
fstp
lods
dec
lock
in
ret
adc
cmp
test
insb
aad
cmp
adc
fcoms
orb
iret
in
jp
sub
pop
outsl
push
test
dec
inc
shrb
aad
leave
dec
push
movsb
int3
lock
jbe
mov
pushf
push
inc
pusha
sti
inc
pop
jmp
mov
adc
sbb
rolb
xchg
test
xchg
popa
gs
pop
lret
xor
xchg
xor
fidivl
and
jge
loope
adc
mov
jecxz
xchg
pop
lds
mov
mov
repz
outsb
lret
xlat
icebp
out
cltd
cld
dec
adc
rorb
pop
pop
into
test
inc
mov
mov
adc
pop
jae
jnp
cmpsl
push
inc
jl
in
xchg
testl
mov
fidivrl
subb
sub
mov
inc
xchg
lea
dec
scas
pop
mov
icebp
push
loopne
xchg
jmp
lods
call
fnclex
std
out
push
mov
test
or
jno
dec
out
mov
lods
rcll
insl
mov
icebp
jb
dec
in
mov
xor
out
dec
pop
push
mov
add
imul
sbb
adc
push
pop
imull
xor
inc
sub
dec
shl
scas
push
test
pop
inc
bound
cmc
arpl
sbb
adc
insl
fldcw
and
mov
xchg
pop
add
adc
out
shl
mov
repz
dec
lods
sub
popa
mov
jns
shl
mov
cmp
jb
imul
sahf
cmp
mov
sbb
and
inc
jl
mov
aas
loope
mov
add
and
xor
pusha
jecxz
pop
push
xor
das
inc
push
shlb
test
dec
mov
outsb
jg
push
xor
rcrl
pop
push
call
xlat
xlat
mov
dec
inc
push
cvtpi2ps
inc
mov
inc
and
and
shl
nop
and
push
lods
adc
xchg
push
movsb
divl
or
dec
push
mov
mov
mov
cmpsb
pop
pop
sub
cmp
sbbl
dec
cmpsb
add
xor
imul
movhps
mov
xchg
into
pop
lods
negl
stos
xor
pop
xchg
xchg
fisttpl
insb
pop
xchg
int3
pop
or
pusha
ss
nop
clc
add
test
mov
fs
insl
pusha
jne
pop
int3
sbb
add
push
ds
fbld
jns
int3
and
push
test
nop
add
and
jns
out
cmp
mov
cmp
imul
mov
jne
mov
inc
cli
dec
andl
push
jnp
inc
mov
pop
sbb
push
dec
cmc
not
mov
sbb
mov
out
and
jo
popa
mov
push
arpl
repz
adc
dec
inc
push
cld
dec
adc
jecxz
xchg
mov
and
adc
cmp
xor
mov
inc
mov
stos
mov
lcall
inc
mov
fwait
rcll
xor
add
iret
inc
bound
insl
ret
js
mov
and
popa
icebp
push
add
cmc
aas
inc
ret
xlat
fcmovne
or
mov
or
add
movsl
popf
mov
push
adc
mov
je
cmp
mov
das
aaa
push
adc
call
adc
stos
lcall
and
jae
in
call
jl
rcrb
es
mov
int3
add
lock
cmp
sahf
mov
testb
rcrb
adc
fcompl
push
and
mov
imul
dec
das
fldl
test
adc
or
mov
or
push
sub
arpl
jl
lock
sub
pop
fimull
mov
dec
rcrb
jno
in
xor
jbe
sub
jbe
notb
pop
insb
hlt
adc
adc
mov
adc
shrb
stos
jno
roll
fwait
sbb
movsl
xor
xchg
pop
xlat
leave
lret
mov
stos
dec
movsb
xchg
jb
or
jmp
sub
mov
sbb
stc
fistpll
add
lods
aam
clc
xchg
cmpsl
jp
xchg
test
pushf
cld
sbb
cld
idivb
inc
pop
stos
mov
imul
inc
filds
int
rclb
daa
xor
xchg
jle
xchg
mov
fnstsw
dec
inc
sbb
sbb
in
mov
jae
fwait
xor
cmpsb
jnp
pop
dec
add
mov
or
xor
sub
or
push
scas
jge
cmp
int3
push
fmulp
cli
or
dec
ret
xor
fisubl
dec
fnstcw
add
adc
push
aam
pusha
add
mov
lret
outsl
test
inc
movsb
jb
mov
lret
ficompl
addr16
sbbb
test
jle
shlb
inc
inc
inc
jcxz,pt
outsb
or
sbb
mov
repnz
hlt
mov
divl
out
imul
es
sahf
shl
add
xchg
mov
push
dec
lods
jo
out
ficoms
xchg
sbb
sub
dec
ss
divb
adcb
dec
xorl
ja
or
ror
jecxz
adc
xor
ficompl
push
push
mov
popa
jne
fsubrs
das
lcall
jno
xchg
ss
xchg
les
test
je
inc
pop
hlt
add
pop
cwtl
movsl
das
sub
int
icebp
aad
lahf
adc
dec
dec
shll
into
cmp
jbe
xchg
xchg
daa
pop
mov
jmp
lcall
push
gs
loopne
push
inc
out
loopne
xchg
stos
addb
int3
fadd
nop
lahf
jp
mov
dec
sbb
out
sub
arpl
mov
rolb
or
inc
scas
mov
pop
xor
imul
aam
jo
adc
dec
inc
xchg
mov
xlat
and
in
cmp
push
test
out
mov
lds
push
js
rorb
jnp
divl
jle
out
xchg
sbb
mov
roll
mov
daa
das
dec
cmpsl
or
sbb
xchg
fidivrl
dec
or
decb
jo
sahf
jnp
mov
push
push
pushf
sub
sub
std
aaa
imul
ljmp
mov
sbb
mov
xchg
in
ljmp
sbb
jle
cwtl
pop
aas
jo
outsl
add
shrb
dec
fcomps
call
mov
scas
sub
cmp
or
mov
pusha
xlat
mov
fsubrl
mov
inc
stos
cmp
out
ds
ss
xchg
cld
cli
fbld
pop
cmp
cli
pop
repnz
aaa
mov
jl
jle
fs
out
or
enter
pop
push
out
inc
sbb
cmp
out
jl
sbb
stc
andl
test
jecxz
insl
inc
mov
mov
xor
xchg
test
movsl
dec
fsts
movsb
xor
movsl
or
aam
out
jecxz
dec
sub
pop
enter
mov
mov
imul
lods
adc
mov
push
dec
adc
fwait
cmp
xor
pushf
inc
das
xlat
pop
cmove
and
mov
pop
arpl
test
fidivl
js
mov
test
add
mov
sbb
sub
sti
mov
int
mov
pop
or
inc
adc
subl
sbb
xchg
fstpl
jae
mov
pop
insb
push
loopne
jp
push
leave
dec
popf
or
sbb
negb
int
and
mov
cmc
mov
pop
and
sbb
mov
add
push
pop
push
aad
add
fimull
xlat
inc
add
push
add
cmp
xchg
jnp
pushf
test
pop
sbb
lock
mov
and
pop
cwtl
dec
clc
es
fcoml
jmp
mov
inc
mov
mov
jmp
cltd
lret
xor
sbb
out
inc
push
sahf
scas
or
push
ret
outsb
cmp
out
jbe
add
int3
imul
dec
fadd
adc
or
mov
into
sbb
in
inc
sbb
popf
stos
rcrb
shl
ficompl
add
mov
daa
mov
sbb
push
outsl
push
in
jne
lret
mov
inc
mov
movsl
mov
pop
ds
cmpsl
cmpsl
xchg
xor
pusha
jbe
lret
push
pop
pop
lcall
and
jmp
push
xor
xlat
cwtl
hlt
pop
xchg
sti
testl
add
out
fistpl
add
sbbl
test
inc
int3
sub
xchg
lock
push
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
xor
jp
out
jp
push
or
aam
pop
adc
lcall
add
mov
cmp
push
lret
cmp
mov
arpl
adc
and
push
push
lahf
mov
aas
rcll
bound
js
xorl
fcmovnbe
in
enter
movsb
push
add
sub
mov
or
or
popa
add
and
push
mov
dec
add
iret
mov
inc
jns
iret
and
clc
xchg
push
shll
mov
jbe
ljmp
inc
mov
mov
fdivrs
mov
sbbb
popf
add
dec
std
lods
mov
xchg
shll
add
or
daa
add
imul
cmp
dec
jg
andb
inc
push
cs
cmp
add
jnp
je
pushf
lea
xchg
stc
in
cltd
jecxz
mov
inc
xchg
mov
inc
movsb
jp
xor
mov
xchg
jns,pt
fstps
sbb
test
xchg
adc
in
push
repnz
lret
jns
mov
inc
and
push
add
xchg
xor
fildll
pop
punpckldq
in
outsb
push
inc
and
aad
rclb
into
and
jnp
push
adc
or
dec
add
std
jge
jns
push
cmp
cmp
push
sahf
outsb
mov
adc
jle
lret
jne
cmp
pop
movsb
mov
jp
mov
add
mov
xchg
sahf
idiv
lahf
cmp
cmp
movd
sarb
pushf
inc
loopne
xchg
jnp
push
les
ret
sub
xlat
arpl
rolb
lods
js
imul
aad
aas
jmp
in
mov
or
sti
mov
lods
sub
cli
cli
aaa
pop
mov
and
pusha
test
adc
stos
adc
xor
add
movsb
test
add
fcoml
sub
push
or
mov
inc
or
adc
pop
sub
push
into
mov
incb
fmull
jmp
loopne
sbb
sub
xor
fdivr
fwait
inc
cmp
mov
and
enter
mov
sbb
aam
and
in
fistps
mov
clc
sub
lahf
mov
pop
cmp
sub
movl
push
in
or
pop
xor
or
adc
dec
sti
enter
aas
dec
insb
fisttps
jg
mov
mov
pop
jns
pop
aad
mov
xor
dec
mov
add
mov
popa
lcall
ret
ficomps
sbb
push
dec
xchg
mov
pop
push
cmpl
sti
dec
lcall
sti
mov
pushf
mov
add
int3
fwait
fdivrp
out
mov
mov
out
inc
and
push
mov
jae
pavgb
bsr
or
push
mov
gs
stc
xorb
cmp
aas
fs
fisubrl
sub
jnp
pop
fs
insb
xor
cmp
jl
or
sbb
mov
mov
push
gs
outsb
orl
mov
dec
mov
jl
scas
in
loope
stos
popf
int
cs
add
push
xchg
fmul
enter
cmc
pop
lcall
bound
mov
xchg
outsb
shlb
aaa
fnstenv
cli
push
cmp
out
adcb
mov
out
push
ret
call
pop
and
fdivs
lds
ret
int
arpl
test
aam
lcall
mov
and
repz
inc
and
rcll
sub
leave
mov
sbb
scas
nop
lock
int3
out
loopne
adc
xchg
clc
lods
or
insb
sbb
imul
decl
call
and
sub
push
jp
xor
ret
mov
js
sbb
mov
and
pop
pusha
and
dec
cmp
push
mov
mov
mov
jl
sti
popf
imul
mov
pusha
daa
mov
sbb
push
jge
call
xchg
imul
loopne
push
fsub
cmp
jns
dec
jns
jnp
lods
fistpl
inc
call
aas
inc
cwtl
jnp
out
push
adc
lods
cmp
imul
xorl
loope
out
pop
insb
jne
outsb
pop
data16
and
out
push
fimuls
cmp
adc
int
lods
mov
aad
shll
ljmp
adc
add
cltd
xchg
mov
inc
loop
mov
ret
push
sub
sar
fcomps
outsl
jl
sbb
xlat
ret
push
jb
mov
add
ss
insb
lods
test
jmp
sbb
xchg
xchg
sbb
popf
insl
xor
in
cmpsb
sub
cmp
sbb
ret
rorl
push
push
cs
jg
pop
fistpl
mov
hlt
in
clc
dec
mov
push
jae
loope
dec
mov
into
xor
test
je
fadds
lcall
popf
aaa
jmp
sbb
mov
enter
push
xlat
add
adc
sub
aam
int
and
dec
inc
and
cmp
pusha
mov
adc
je
out
into
mov
mov
adc
jge
jne
int3
adc
push
pop
sbb
movsl
jp
and
adc
sar
mov
pop
jmp
jne
orl
mov
xchg
lcall
xlat
mov
adc
xorl
dec
push
cmp
mov
in
mov
cwtl
jmp
sarl
mov
cmp
dec
les
pop
or
xor
or
cwtl
psrlq
xchg
jb
mov
mov
mov
mov
in
out
lret
adc
in
push
mov
pop
inc
out
pop
fsubs
cltd
movsl
repnz
mov
je
jo
and
stos
clc
mov
in
scas
and
repz
fcmovbe
test
dec
test
inc
in
mov
mov
add
add
mov
mov
pop
push
add
jp
adc
add
pop
xor
sahf
dec
fs
aaa
mov
data16
into
aas
movsb
movsb
mov
cwtl
lcall
jecxz
test
pop
enter
mov
in
pop
cld
sbb
addb
pop
inc
sarl
or
or
cmp
es
cltd
sub
xchg
mov
push
inc
sbb
xorl
and
mov
mov
mov
push
scas
lock
fnsave
scas
push
cli
shlb
xor
add
xor
mov
lret
inc
clc
pop
clc
mov
push
movsl
enter
xchg
stos
sbb
sbb
cmpsl
addr16
push
stos
iret
iret
cmp
mov
push
mov
int
cmp
xchg
jl
push
ss
pop
mov
or
stc
inc
loopne
arpl
stos
sbb
or
jl
cld
movsl
sbb
sti
lock
inc
ss
fs
xchg
add
rcrl
int3
sub
adc
xor
popf
pop
cmp
sbb
jl
xor
aas
imul
popf
rcr
and
and
adc
shlb
jno
xchg
sub
lods
inc
and
call
mov
pop
sub
sti
sti
or
pop
xchg
test
lret
fs
mov
roll
fstl
xchg
sar
movsb
ja
gs
xchg
insb
mov
js
inc
orl
ret
fiaddl
insl
shlb
and
cmpsb
int3
and
ss
sbb
insb
xchg
jbe
outsb
in
rcll
popf
xchg
sub
adc
fcompl
xlat
push
jb
cltd
sbb
pop
es
jle
xor
orb
je
xchg
push
popf
pop
push
aas
notb
push
and
cmp
xor
cmpsb
fsubrl
test
lcall
je
mov
inc
jge
push
cmp
inc
mov
shl
pavgb
push
pop
lret
dec
add
jle
insl
test
sbb
push
push
decl
mov
movsb
outsb
lods
fucom
mov
js
and
addb
movsb
add
mov
xor
xor
fiadds
outsb
push
out
pop
mov
and
stos
repnz
add
sub
jnp
sbb
cmpsl
sub
jno
daa
inc
jo
mov
cmc
fs
adc
inc
fisubrl
dec
adc
add
insb
movsl
cwtl
movsl
sbb
xor
int
shrl
outsl
mov
inc
stos
mov
push
mov
jbe
pop
or
jge
xor
scas
xor
idivl
repz
fcomi
out
pop
add
aas
mov
adc
or
arpl
out
dec
int3
repz
xchg
pop
imul
xor
lods
mov
arpl
aaa
sub
xchg
rcrb
in
push
xchg
js
push
das
mov
pop
jl
and
mov
shr
lock
add
loope
push
mov
cwtl
pop
mov
fsubrs
cmp
xor
icebp
leave
adc
cmp
cmp
mov
repz
jge
subb
inc
cmpsb
fsub
pop
ljmp
aam
push
and
lea
loop
repz
aam
lock
rolb
dec
pop
push
mov
and
mov
mov
mov
and
add
adc
adc
pop
pop
adc
xchg
mov
xor
pop
sub
loop
xor
and
into
or
call
mov
arpl
out
movl
dec
jnp
fldcw
mov
pop
cmpsl
cmp
inc
push
cmp
pushf
xchg
xchg
lods
jmp
push
add
test
and
mov
or
mov
adc
loope
int3
push
aas
inc
scas
jl
lcall
xorb
add
inc
sbb
mov
sbb
iret
xchg
cli
popf
test
jg
dec
inc
lcall
sbb
push
test
lods
idivl
imul
xchg
lcall
mov
xor
mov
out
outsb
pusha
int
insl
int3
xchg
sub
jp
out
or
cwtl
test
sarl
fstps
pop
or
mov
enter
push
adc
mov
xchg
mov
test
je
lcall
ja
fldl
popf
xor
mov
jnp
mov
aas
loop
test
pop
push
sub
dec
shlb
outsb
jns
adc
sbb
mov
lret
dec
add
mov
jo
or
out
sbb
out
mov
add
xchg
and
mov
inc
push
xchg
sbb
add
jle
shrb
mov
fisttpll
sahf
aam
dec
push
mov
inc
sub
inc
sbb
out
dec
bound
clc
and
jecxz
xor
mov
scas
adc
xor
sbb
inc
mov
or
loopne
aam
or
rep
ret
pushaw
push
sti
dec
sti
mov
pop
inc
jle
pop
xchg
dec
fld
insl
dec
daa
cmc
icebp
aaa
leave
les
je
pop
cmpsl
test
outsl
sahf
xor
repnz
adc
in
fisttpll
in
mov
pop
aaa
repnz
dec
bound
jbe
dec
cmp
mov
cmc
out
xlat
or
ret
pop
mov
push
icebp
repnz
mov
dec
lret
jns
std
cmc
and
add
data16
and
insb
cmpsb
aaa
xchg
iret
sbb
pop
and
call
mov
cmp
aad
cltd
fs
lock
scas
push
mov
jno
mov
repnz
js
inc
mov
xchg
aaa
dec
xchg
or
cmp
mov
pop
jle
sub
xor
jmp
push
sub
fstpt
in
mov
mov
push
dec
cwtl
addr16
in
orb
in
jns
in
stos
into
stos
sarl
std
std
jecxz
adc
es
lods
lock
movsl
fsub
mov
sub
imul
int
inc
jne
les
lret
dec
cmp
insl
sbb
adc
inc
ss
push
mov
inc
push
and
sbb
add
pop
push
and
sub
sub
cmp
cmp
movsb
add
pop
repnz
jb
fsubp
push
sti
mov
mov
gs
mov
or
pop
mov
in
adcb
outsb
ljmp
in
cmp
pushf
int
rcrb
dec
dec
int
ret
adcb
sbb
xchg
lahf
inc
push
push
pop
sahf
jnp
loopne
sti
sub
add
sub
mov
jbe
jb
loop
dec
and
into
repz
mov
shrl
or
sbb
out
ror
mov
mov
xchg
sbb
iret
into
mov
fbstp
aas
lds
xchg
mov
roll
mov
andl
pop
add
mov
xor
adc
out
das
mov
stos
test
adc
js
add
sub
xchg
in
movl
mov
pop
mov
sub
lret
lahf
in
scas
pop
ds
adc
fdiv
lret
cmp
pop
sahf
push
icebp
stos
shr
mov
ljmp
loop
sbb
rolb
andl
cmp
cmp
daa
sbb
push
jecxz
clc
inc
xchg
mov
mov
sbb
and
bound
lret
jb
out
fs
pop
xchg
stc
fisttps
cltd
lahf
icebp
dec
push
enter
pop
mov
rolb
ret
sub
jno
fadds
or
call
outsl
adc
fnstsw
jbe
dec
cmp
std
inc
lret
in
mov
xchg
or
mov
and
and
inc
add
push
and
sub
mov
aam
cmp
add
push
es
xor
pop
or
arpl
and
push
dec
and
mov
leave
scas
sub
test
cmpsl
mov
cli
adc
es
adc
jno
pop
es
ljmp
in
push
add
mov
pop
lods
pop
imul
ljmp
paddd
in
jnp
add
add
mov
inc
adc
popf
lret
xchg
loope
cmpsl
jae
test
aas
xchg
test
mov
inc
add
mov
or
divl
sbb
cltd
add
mov
mov
int
adc
mov
xchg
lcall
dec
test
in
fstps
cmp
out
pop
mov
call
aaa
or
and
push
dec
cmp
push
push
xor
nop
jp
adc
imul
push
push
cmpl
pminub
test
jp
or
or
sahf
mov
mov
addb
mov
jne
pop
sbb
lods
stos
pop
insb
movsb
inc
inc
imul
ret
sahf
repz
mov
push
dec
call
sbb
cmp
and
sub
out
dec
out
orl
test
loope
push
ret
es
popa
push
imul
mov
in
fwait
in
dec
mov
jne
jmp
sbb
or
fdivp
xlat
sbb
sarb
xchg
jge
and
sahf
bound
cmp
daa
pop
test
jge
arpl
mov
push
leave
cmp
lods
ss
outsb
inc
test
jp
daa
and
mov
repz
pop
xchg
mov
es
aaa
cmp
dec
inc
cmpl
ret
loopne
leave
orb
sti
insl
imul
mov
adc
lcall
int
pop
push
push
xchg
cmc
mov
push
test
mov
push
sahf
xchg
sbb
jae
and
in
push
stc
lock
iret
jae
inc
fidivs
jmp
gs
iret
stos
mov
jae
push
pop
lret
push
rclb
push
rcl
push
push
pop
fiaddl
enter
mov
cmpl
and
out
xchg
rcrl
sbb
mov
add
out
shrb
lods
push
sub
std
out
xchg
push
les
rcll
cmc
movntq
xchg
mov
lcall
inc
cmpl
push
dec
mov
inc
nop
stos
inc
or
dec
cwtl
loop
adc
mov
push
adcl
mov
pushf
inc
jge
popa
pop
in
imul
add
test
pop
stos
xchg
rolb
aas
inc
dec
aad
cmp
push
sub
and
in
lods
in
dec
mov
js
inc
sahf
mov
out
nop
shll
icebp
popa
dec
enter
mov
int3
xchg
pop
inc
push
jle
inc
fsubrp
lret
and
xor
mov
into
stc
cmc
cmpsl
mov
rcr
pop
xor
icebp
aaa
mov
movsb
push
mov
lock
ja
inc
cmp
jl
pop
sbb
pop
jp
iret
xor
popf
inc
aas
int3
xor
jb
or
pop
std
or
mov
cmp
iret
mov
or
sbb
xchg
xor
ret
shrl
arpl
xchg
jmp
test
fs
dec
push
push
repz
lcall
xchg
add
lcall
xchg
cmp
xor
repnz
dec
mov
sbb
insb
push
in
jb
add
cmp
jb
je
rclb
testb
orl
scas
rcll
cld
xchg
xchg
stc
inc
sbb
mov
cltd
or
cmp
lret
sub
xchg
inc
or
adc
popa
mov
sbb
jae
xor
and
mov
pop
xlat
sbb
imul
daa
mov
pop
mov
mov
xchg
sub
jno
mov
cmp
xor
enter
popa
out
fmull
fnstenv
lret
cmc
push
cmp
test
ljmp
out
mov
pop
cmpsb
and
and
shrl
popf
lea
loop
hlt
jl
xchg
cmp
inc
test
mov
les
jb
push
mov
scas
mov
jo
jmp
out
in
out
sarl
bound
lret
iret
insl
pop
pop
xchg
imul
mov
push
or
sub
lcall
popa
imul
pop
mov
xor
ss
lods
shrb
add
fidivs
and
add
sub
lea
out
mov
into
push
or
test
cmp
xchg
outsb
xchg
cmp
ds
sti
das
icebp
push
sysret
mov
cld
sarb
bound
mov
add
fstp
xor
mov
push
mov
fldt
lds
push
pop
dec
sub
push
mov
jg
call
arpl
dec
cmp
push
loope
icebp
mov
fidivl
leave
popf
stos
orl
xor
int
and
adc
and
and
fidivl
mov
es
sbb
and
pushf
std
mov
es
add
cmpsl
sbb
pop
cwtl
push
pop
dec
loop
icebp
cmp
fbld
mov
push
test
insl
mov
movsb
pop
lcall
in
aad
jb
lahf
jnp
outsl
sahf
mov
xchg
mov
ljmp
cli
push
ret
add
xor
cmc
push
xchg
out
out
sbb
bound
lods
xchg
jle
scas
call
iret
mov
or
je
test
pop
test
repnz
jecxz
fisubs
leave
push
xchg
push
cmp
mov
jmp
cld
jg
sbb
xchg
fcos
push
lret
pushl
xchg
sbb
dec
sub
clc
pop
push
cmp
jp
mov
in
popa
push
ds
push
cmp
mov
mov
enter
lcall
insl
addr16
pushf
pop
shll
push
mov
adc
mov
mov
jge
push
inc
sbb
add
add
pop
mov
xchg
out
pop
sub
and
dec
pop
lret
and
jbe
pop
push
adc
jo
cmp
adc
cmp
addr16
ljmp
bound
add
mov
jecxz
cmp
push
cmc
mov
jl
sti
fidivrs
arpl
xor
adc
jecxz
mov
adc
into
jnp
outsb
push
adc
outsb
dec
push
pop
scas
loop
xchg
fs
sahf
imul
cmc
inc
ret
aaa
mov
jns
adc
sub
fstpt
jb
jmp
mov
mov
push
outsl
jbe
pusha
stos
jecxz
or
mov
mov
xor
xchg
pushf
add
or
mov
adc
push
fdivl
std
mov
xor
dec
push
test
or
test
mov
std
push
test
push
push
test
sbb
mov
fsubrs
and
into
sets
push
das
movsl
test
icebp
sbb
fidivrs
mov
or
jne
out
jecxz
in
add
and
addr16
lahf
int
loop
push
loope
cmp
dec
insl
cwtl
aad
test
xlat
out
jge
jb
out
cmp
mov
adc
sbb
dec
lret
scas
pop
gs
jecxz
cltd
enter
aam
and
test
adc
inc
sbb
and
aam
push
ja
push
enter
mov
xchg
sti
lods
gs
xchg
sub
inc
hlt
popl
lret
repz
adc
or
sub
mov
jno
inc
js
rorl
cmp
aad
jle
out
sub
stos
dec
repz
loope
addb
add
rorl
adc
xchg
mov
add
pop
repnz
pushf
mov
mov
and
add
xchg
gs
and
pop
stos
lcall
fstpl
jno
lcall
mov
mov
sub
test
insb
push
mov
shll
stos
lods
cmp
ror
sbb
mov
jmp
and
insl
lods
rolb
dec
decl
adc
arpl
sbb
xchg
pushf
cmc
xchg
lahf
shll
lods
lds
cmp
mov
outsb
sub
sbb
into
mov
jbe
mov
loopne
dec
dec
adc
pop
pop
push
out
ja
aaa
stos
mov
sarl
sbb
sbbl
mov
adc
out
mov
dec
jnp
pop
mov
fimuls
add
shll
pop
ret
fstpt
cmp
mov
stos
lock
adc
mov
int
sub
xor
mov
out
in
std
pop
dec
mov
xor
imul
test
sub
mov
sub
lds
sbb
sti
test
daa
or
or
outsb
push
stos
ret
inc
mov
push
mov
sahf
popf
in
inc
out
jmp
xchg
xor
call
lret
xor
scas
pop
dec
lret
stos
pusha
and
add
jg
push
aas
push
mov
xchg
js
jo
mov
loop
pop
pop
adc
mov
iret
addb
dec
pop
rcrl
in
cmpsl
xchg
cltd
inc
push
xlat
mov
lock
imul
or
lret
movsl
and
lock
push
outsl
jl
add
out
out
jge
mov
or
cmp
mov
cld
sbb
add
cmp
pop
testb
loope
add
pop
in
aaa
dec
adc
mov
adcl
stos
jmp
imul
sbb
jp
outsb
push
pop
jae
leave
imull
int3
pop
popa
in
std
xchg
sub
cmpsb
test
mov
fimuls
adc
or
sbb
jmp
out
popa
sub
iret
cwtl
cmpsb
xor
mov
cs
idivl
sub
lcall
imul
inc
icebp
cmp
sti
bound
rcll
out
and
int3
or
inc
mov
mov
mov
mov
nop
pop
xor
lcall
lds
push
rolb
mov
lea
cwtl
xor
loop
or
xor
pop
push
inc
cli
pop
fsubr
jbe
cmpsb
push
imul
bswap
ja
jne
hlt
aaa
inc
adc
mov
lret
xor
xchg
ds
mov
xchg
sub
jns
jg
pop
mov
les
stc
mov
push
sbb
xor
cmpsb
scas
jae
adc
jmp
inc
in
loopne
clc
or
lahf
fs
loopne
stos
inc
dec
mov
dec
mov
inc
das
int3
testl
adc
and
and
imul
lods
pop
jbe
push
dec
fisubs
add
sub
stc
lahf
add
cmp
push
out
scas
scas
pop
jbe
jb
ss
push
loop
iret
mov
add
xorl
insb
mov
pop
or
rolb
cmc
cwtl
repz
mov
lods
adc
pop
imul
cwtl
sbb
aad
into
pop
outsb
pushf
dec
mov
pop
enter
pop
or
pop
mov
and
lods
adc
jb
add
lock
fisttps
in
and
sub
pop
jmp
in
lods
aas
jecxz
pop
mov
jnp
jo
lods
jg
mov
in
clc
mov
sbb
les
loope
xor
rcr
push
xchg
sub
mov
push
outsb
jae
pop
mov
sub
pop
roll
dec
repnz
mov
fidivrl
imul
imul
cmp
insb
sti
sub
cmp
testl
roll
sub
fdivrl
lahf
outsl
or
mov
cmpsb
clc
ficoms
enter
adc
add
pop
push
mov
push
fxch
inc
jle
clc
xchg
js
cwtl
inc
add
ret
xor
hlt
sbb
adc
cmp
scas
sahf
pop
in
sub
push
adc
pop
fidivl
cld
stc
out
rolb
and
mov
inc
and
jle
dec
test
fiaddl
mov
pop
ds
xlat
sub
nop
sbb
pop
mov
stc
daa
adc
mov
call
cli
dec
lahf
inc
scas
sub
or
pop
dec
inc
mov
adc
inc
mov
jno
test
rcr
pop
sar
in
aam
or
mov
or
cwtl
sbb
jg
leave
or
arpl
mov
arpl
mov
pop
mov
ffreep
les
xor
fildll
jne
xchg
aaa
xchg
loope
mov
cmpsb
and
jno
and
cmp
mov
jmp
sbb
out
sar
cmp
lret
shll
repz
sbb
xor
dec
pusha
pop
in
dec
fmul
push
jp
testb
dec
add
xor
movsl
adc
in
mov
subb
cmp
mov
cmp
in
cmpsl
adc
xchg
push
filds
cs
inc
push
das
aaa
push
mov
loopne
jb
inc
add
in
imul
call
inc
outsl
in
mov
push
pop
add
mov
and
in
inc
jp
sbb
jl
sub
fidivrs
dec
scas
mov
mov
xlat
std
hlt
jg
jbe
icebp
pop
ja
fwait
int3
rolb
cs
movsl
add
stos
and
aaa
mov
and
push
js
adc
loop
push
jg
bound
int
mov
mov
xor
xchg
inc
cs
mov
xor
add
lods
das
mov
clc
mov
aam
lock
xchg
and
add
add
clc
cmc
leave
or
cmp
or
sbb
cmp
adcb
push
xchg
leave
inc
xchg
mov
pop
out
aam
out
test
mov
ret
cmc
loope
stc
and
jg
add
push
jmp
iret
call
in
add
das
aam
xor
sub
push
cmp
add
push
test
pop
stos
sbb
inc
cmp
mov
out
push
jmp
movsb
loopne
scas
jmp
sub
mov
jmp
adc
arpl
rcl
inc
mov
es
inc
fstpt
adc
ja
cmpsl
pop
aam
xchg
dec
mov
daa
push
sub
mov
int3
inc
daa
mov
push
shrb
sbb
test
xchg
xor
stc
andl
pusha
mov
fwait
mov
sbb
imull
dec
popw
rcrb
test
inc
inc
ja
adcl
push
push
xchg
daa
cmp
mov
pop
test
pop
clc
movsb
xor
xor
jp
sbb
xchg
addr16
mov
stos
lock
dec
mov
scas
sub
fwait
int3
xor
sub
inc
push
mov
inc
out
xchg
roll
push
sbb
mov
cltd
sahf
sbb
mov
sub
sbb
adc
xor
addb
jbe
xor
pusha
pop
inc
leave
push
ficomps
imul
ljmp
mov
notb
das
lods
clc
inc
cmp
and
push
push
xchg
stc
sub
outsb
aas
sub
xor
cs
adc
dec
mov
and
test
sbb
inc
pop
push
cmpb
andl
loope
sbb
clc
jge
iret
add
int
xor
mov
lahf
mov
pop
sub
xor
decl
aaa
test
inc
pushf
mov
sbb
push
jl
jne
jno
imul
out
sbb
aad
clc
sub
scas
roll
pop
lods
or
xor
test
add
sbb
in
lds
jae
cmp
pop
lcall
jns
mov
in
mov
add
dec
ss
enter
lods
cmc
sbb
insl
fidivl
test
frstpm(287
adc
mov
iret
push
in
sub
addr16
dec
adc
mov
sbb
inc
out
xor
push
lock
cmc
gs
cmp
rcll
sti
mov
inc
stos
lret
sarl
ljmp
jbe
or
loope
shrb
fimuls
pop
aaa
pop
or
hlt
add
mov
int
jmp
jb
cmp
and
adc
rcr
sbb
inc
xorb
lods
inc
adcb
push
pop
data16
movsb
jecxz
dec
scas
inc
mov
push
cmc
jae
push
xor
xor
enter
cmpb
fdivp
ljmp
xchg
add
inc
and
adc
mov
mov
shlb
mov
lock
addr16
mov
das
push
stos
scas
pop
xchg
lods
mov
int3
std
cmp
push
stos
lods
fnstenv
into
xchg
jge
mov
adc
fsubl
ja
out
mov
icebp
fidivs
fiaddl
xchg
mov
aas
xor
imul
test
sbb
adc
mul
notl
inc
push
int3
dec
jmp
sub
outsl
dec
mov
cmp
cmp
mov
leave
pop
lods
in
mov
inc
cld
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
or
sub
dec
je
inc
iret
cmp
rclb
pop
jno
daa
in
pushf
jb
shrl
stc
push
es
outsl
dec
shl
dec
adc
jg
fdivrl
in
gs
xor
ljmp
jmp
jnp
out
xchg
jmp
fwait
cmp
push
adc
rclb
mov
pop
push
and
scas
inc
lods
xchg
xchg
push
into
nop
clc
loope
lret
daa
lahf
notb
lods
mov
jne
mov
sub
mov
rclb
repnz
xlat
imul
add
cmpsb
iret
push
or
aaa
fcmovbe
stos
push
out
lods
test
jl
dec
fiadds
shll
adc
inc
rorl
mov
jb
jmp
mov
cmp
cmpsb
push
push
dec
jl
and
jbe
push
fists
int3
lret
leave
mov
sub
cwtl
or
ds
lock
jl
or
jl
mov
or
cmpsb
or
mov
dec
rcl
loope
and
and
out
arpl
in
inc
dec
xchg
pop
pusha
rcrb
mov
imul
pop
das
rclb
out
mov
pop
jecxz
fists
xchg
pushf
icebp
popf
lret
repnz
xor
mov
rcr
shlb
lea
push
and
jle
push
fucomip
jl
xchg
jnp
inc
aad
push
xchg
in
pop
enter
jbe
xor
push
test
sarl
sbb
sti
cltd
cwtl
and
mov
inc
fstp
fs
loopne
repnz
mov
dec
outsb
mov
mov
fsubrs
mov
inc
iret
fnstenv
xchg
scas
clc
inc
xchg
sub
dec
lret
fdivr
clc
cmp
repz
mov
in
and
push
pop
mov
out
cmp
stos
xchg
inc
adc
ds
repnz
inc
scas
push
pop
sub
push
ljmp
cmp
mov
imul
mov
int
dec
fsubp
mull
push
inc
mov
stc
sbb
and
test
inc
pop
pop
mov
or
addb
push
or
pop
xchg
loopne
add
fldz
add
into
loopne
ljmp
lea
les
sbbb
inc
mov
jb
inc
test
test
dec
icebp
xchg
cs
lods
mov
stc
fistpll
mov
cmc
in
pop
sbb
cmpsl
xlat
dec
sub
push
pop
loop
pop
xchg
or
adc
push
cltd
lea
add
call
leave
into
fstpl
sti
fiaddl
mov
lahf
daa
scas
sbb
push
push
sbb
sbb
mov
test
adc
pop
cwtl
ror
or
jb
sti
sbb
adcl
push
mov
mul
inc
push
shrl
sub
in
cs
or
sbb
in
mov
rcl
mov
xor
cmp
inc
dec
pop
add
xchg
fwait
jecxz
bound
xor
ret
inc
fidivl
cmp
mov
adc
dec
shll
jmp
aaa
push
ss
dec
pop
test
iret
xchg
std
adc
add
dec
inc
pop
hlt
mov
fld
sarb
sub
addr16
add
cltd
push
add
cltd
xor
xor
dec
adc
ja
lea
fs
outsb
dec
jecxz
aam
mov
fcmovnu
test
sbb
push
fiadds
cmpsl
mov
orb
sbb
stos
popf
pushf
push
cs
sbb
add
shl
xchg
outsl
pushf
mov
mov
ficoms
cmpsl
xor
push
or
sbb
cmp
js
jne
or
mov
addr16
jge
sub
je
pop
xchg
call
or
mov
inc
push
jns
pop
and
push
pop
shrl
loopne
lret
cmp
stc
mov
sub
cmc
xchg
mov
scas
sbb
cmp
mov
or
lcall
lcall
hlt
cmpl
int3
ret
movsb
test
into
mov
add
gs
xchg
sbbb
pop
repz
jge
daa
ljmp
ret
clc
jae
daa
pop
cltd
cmp
inc
jmp
pop
int3
jle
cmp
insl
jle
repz
loop
call
stos
into
outsb
jb
out
dec
int
daa
mov
pop
push
out
xchg
xor
dec
test
icebp
inc
stc
test
das
aad
adc
cwtl
insl
pop
stc
int3
cli
sub
add
mov
int3
xor
mov
out
dec
jg
xchg
repnz
arpl
add
sbb
out
in
push
out
mov
xchg
pop
push
xor
adc
mov
push
es
pushfw
sub
cmp
jmp
and
in
push
pop
xor
mov
dec
iret
das
jne
fcoms
dec
mov
jge
pusha
stc
cmp
xchg
lea
cmp
mov
out
pusha
sti
xor
lret
pop
dec
inc
call
dec
and
je
xchg
lods
pop
insb
sbb
adc
and
cmp
std
push
std
jo
gs
mov
and
mov
xchg
cmp
out
mov
and
call
add
fnsave
dec
jo
sti
cli
jae
lods
mov
push
xchg
cmpsb
pop
mov
dec
outsl
inc
outsl
xchg
jae
je
into
lahf
int3
pop
icebp
cld
mov
sahf
push
or
cmc
sbb
adc
xchg
popf
adc
dec
dec
pop
call
push
cmovs
mov
adc
sbb
shll
ret
gs
int
movsb
movsb
xor
push
and
adc
mov
push
data16
cmp
push
jmp
mov
xchg
push
test
pop
inc
mov
push
fsubs
inc
add
test
pushl
sbb
test
cmp
inc
xorb
sbb
lea
push
ljmp
xchg
pop
rol
cmp
adc
scas
add
mov
xchg
ret
mov
xor
ss
sahf
cmp
mov
scas
pop
sub
rcrb
ret
jp
xor
jns
push
jnp
push
sub
or
aaa
sub
rcrl
push
xor
xchg
mov
xor
sub
test
pusha
stos
mov
mov
outsb
mov
push
xlat
std
cmp
or
mov
inc
movsb
das
cmp
adc
mov
test
aam
fidivrs
or
pop
out
jne
pop
jp
outsl
pop
je
sub
fnsave
adc
je
jbe
popf
and
mov
enter
aad
push
jmp
test
mov
sub
mov
adc
push
fdivl
inc
insb
sub
add
mov
mov
and
lret
and
daa
or
jg
mov
push
jns
mov
cmp
mov
jg
ljmp
push
cmpsb
pop
xor
icebp
cmp
adc
or
cli
jg
movsb
arpl
andb
leave
into
fisttps
push
cmpsb
push
adc
rclb
into
mov
dec
jns
add
push
roll
dec
loopne
or
lock
das
mov
shll
sub
ficoml
cmp
jle
and
or
mov
dec
pop
mov
fcoms
cmc
pop
cmpsl
mov
inc
pop
pop
pop
mov
adc
aam
leave
out
mov
cmc
and
mov
js
lods
popa
mov
adc
pop
rorl
rcrb
fadd
stos
lods
mov
push
movsb
jb
or
inc
pop
inc
gs
cmpl
adc
sub
cmp
or
das
jbe
sub
adc
jno
sbb
lods
out
mov
inc
mov
sub
adc
int
outsl
dec
push
icebp
fildll
rcl
or
test
xor
mov
adc
sub
repz
test
int3
stos
cmpsl
or
gs
mov
testl
aas
cmc
inc
into
outsb
inc
sarl
adc
lret
mov
jecxz
push
cmp
repnz
xchg
stos
xor
lea
std
add
and
jns
jle
mov
xchg
pusha
jle
sbbl
in
push
and
sub
mov
jne
cmp
lods
stos
pop
adc
aas
sub
clc
cmp
or
into
imul
mov
enter
push
mov
xor
scas
cltd
outsl
or
mov
and
cmp
push
mov
mov
push
mov
dec
dec
insl
xlat
hlt
mov
pop
xstore-rng
cmpsl
sub
sub
lret
mov
adc
or
fsubs
sub
jo
inc
aad
or
sbb
icebp
test
or
and
cmc
movsl
mov
roll
enter
outsb
ja
dec
jne
pop
xor
push
das
cmp
incl
and
add
xchg
inc
fstl
fcomp
aam
lret
xchg
jecxz
or
xchg
pop
rcl
mov
add
xor
add
leave
sbb
pop
push
sahf
xor
outsl
out
imul
jecxz
sahf
test
nop
nop
adc
ret
icebp
loopne
aam
sarl
dec
bound
iret
or
mov
mov
cli
stos
loop
stos
sbb
testl
mov
inc
xor
pop
sub
loopne
xor
pop
out
out
xor
pop
jmp
inc
aad
add
je
mull
in
ds
les
dec
divb
xchg
inc
aam
jnp
add
fadds
sub
sbb
loop
mov
pop
and
sub
daa
repz
add
rol
lcall
dec
mov
dec
in
jbe
fcomip
insl
cmc
pop
adc
and
ret
scas
sbb
das
clc
std
dec
add
ror
or
and
adc
ror
test
cmp
pop
hlt
jb
pop
sbb
sub
ja
xor
dec
dec
sub
pop
rclb
adc
dec
push
data16
rorl
cmpsb
sti
imul
jo
vmovddup
inc
faddl
clc
mov
cmp
push
jmp
inc
lea
pusha
ltr
lret
jl
and
adcb
nop
push
add
mov
fs
adc
jae
dec
mov
jae
out
jle
fdivs
push
xor
sbb
inc
dec
movsb
fcmovnb
and
ds
pavgw
lock
cmpsb
dec
mov
push
cmpsl
fdivrs
push
dec
pop
sbb
subb
pop
xchg
adc
adc
icebp
xchg
in
or
scas
lea
cld
dec
inc
jmp
add
aas
rcll
and
test
aas
xlat
pop
shll
imul
in
dec
adc
mov
ret
or
insb
imulb
dec
inc
push
fidivrs
lods
ljmp
rclb
inc
xor
xchg
hlt
outsl
mov
push
dec
dec
pop
jne
loop
and
lea
ds
adc
mov
sbb
mov
push
sbb
and
or
sbb
adc
add
sub
sarl
into
sbb
aas
aaa
out
fwait
xor
mov
enter
xchg
push
dec
int3
mov
bound
pslld
push
lahf
mov
cmpb
dec
mov
fdivl
int3
pop
jae
pop
lods
xor
ds
and
loope
outsb
or
cmp
xchg
sub
fbld
pusha
mov
movb
fnsave
mov
pop
xchg
dec
add
mov
loope
js
push
fcomps
iret
lods
icebp
xchg
fwait
sbb
dec
daa
xor
mov
inc
jno
test
push
std
imul
jae
dec
adc
bswap
leave
jbe
add
test
paddq
out
jbe
xchg
dec
sbb
cmpsl
stos
pop
xorb
or
mov
std
mov
push
jmp
std
push
into
jne
mov
call
pop
out
int
xchg
cltd
mov
cmp
mov
fistl
dec
movsl
mov
insb
loop
ficoml
mov
jb
cmp
adc
lret
in
addr16
dec
cmp
ja
jo
outsb
pop
into
out
mov
mov
das
loopne
repz
mov
pusha
fmull
jmp
stos
xchg
xchg
stos
cltd
sbb
mov
sub
push
inc
cmp
mov
inc
sub
inc
iret
js
adc
and
sbb
or
addr16
sub
hlt
dec
popa
dec
bound
mov
mov
pushf
fsubrs
lret
sahf
fidivrl
lock
lods
mov
xchg
mov
ss
push
data16
fcomi
arpl
mov
dec
or
shlb
inc
pushf
sub
lods
jb
stc
inc
sbb
rcll
push
xchg
or
add
xor
add
xor
dec
fmul
adc
test
cwtl
ljmp
inc
ds
add
lods
adc
lods
mov
aam
jmp
lret
sbb
mov
jns
or
jecxz
fisttps
inc
icebp
add
xchg
mov
mov
in
loop
stc
cmp
fsubrl
push
mov
cwtl
fs
sub
pop
loopne
arpl
mov
mov
jge
mov
push
or
popf
out
xchg
or
stos
xchg
mov
xchg
mov
popf
xchg
mov
in
sbb
inc
pop
and
add
cld
pop
lret
loope
dec
xor
push
stos
inc
xor
jb
fsubrl
repz
mov
loopne
fs
xlat
adc
jge
lds
hlt
test
lcall
rolb
fsubl
cmp
fcompl
bound
xchg
sbb
mov
mov
or
pop
or
jbe
mov
psubb
xor
adc
inc
or
jmp
addr16
pushf
lret
stos
loop
lret
mov
jae
dec
jnp
lods
push
mov
cli
pop
std
xlat
pop
jnp
lea
out
xor
xchg
inc
popf
push
insb
xchg
xchg
jo
add
push
iret
xchg
pop
push
mov
xchg
push
ljmp
push
in
pusha
pop
xchg
rep
jno
call
ja
push
insb
jp
mov
pop
std
sub
push
dec
jae
movsl
pop
lret
mov
popf
cmc
cs
jno
add
pop
push
cltd
pusha
mov
pop
aad
cmp
test
fmuls
xchg
incb
nop
ds
push
ret
insl
and
fst
test
aad
xchg
jmp
mov
pop
ja
ficoml
mov
push
sub
lods
mov
and
adc
aam
nop
daa
repz
fnstsw
inc
or
jne
scas
xchg
jecxz
nop
cmpsl
imul
jmp
or
mov
testb
in
and
popa
je
mov
jp
add
shl
repnz
sub
aas
lock
push
dec
adc
test
cmp
andb
pop
xchg
xor
data16
fisttps
mov
jl
insl
add
mov
cmp
pop
push
xchg
aam
cmp
adc
cmp
in
mov
xor
es
lods
xchg
sbb
dec
popf
pusha
std
enter
sbb
outsl
fwait
mov
push
enter
mov
fs
inc
xchg
std
rcl
outsb
jne
push
sub
stos
adc
cmpsl
cld
rcr
ret
mov
adc
pop
adc
outsl
pushf
adc
dec
test
cmp
jg
push
movsb
add
push
jecxz
or
cs
loope
mov
fwait
mov
push
pop
inc
popf
sub
inc
xor
inc
pushl
fistpll
push
xchg
mov
push
jae
or
push
not
test
es
mov
iretw
lock
sahf
lock
or
andl
pop
xor
and
into
sbb
sub
push
sbb
cmp
inc
jp
outsb
jb
and
sub
pop
or
mov
xchg
popf
mov
js
add
cli
sbb
out
push
jmp
jmp
jle
call
pop
mov
jne
cmp
test
outsb
sub
das
ss
icebp
xor
dec
mov
push
cwtl
ja
pushf
ret
jg
xor
into
adc
sti
pop
and
jp
push
cs
xor
push
test
sti
and
fwait
data16
es
fnstenv
arpl
xor
push
lahf
pop
xor
dec
cmp
xchg
add
pop
push
mov
sub
cmpsb
ljmp
add
std
fdivl
sbb
test
fwait
stc
pusha
aas
fwait
pop
jne
add
or
mov
fwait
adc
in
push
mov
das
mov
fcoms
insb
sub
lock
mov
cli
jns
es
push
lcall
lods
adc
inc
popl
add
ret
and
int
adc
cmp
adc
fnstenv
push
scas
out
dec
xchg
test
push
mov
cwtl
jae
cmpl
insl
jmp
sbb
in
push
std
adc
push
mov
jno
inc
mov
xchg
pop
sbb
das
divb
xchg
xor
dec
hlt
mov
jp
lds
inc
sub
adc
sbb
lret
jl
out
xchg
popa
mull
movsl
movsl
adc
hlt
jne
xchg
jl
sub
fidivrs
lods
xchg
inc
push
pop
lock
and
mov
insb
cmp
pop
push
data16
xchg
jge
movsl
cmp
jl
test
rclb
sub
jl
inc
lcall
cmpsb
outsl
sti
insb
rorl
push
movsb
xchg
dec
lods
pop
cmp
faddl
inc
lahf
fists
and
push
cmpsb
jl
cmp
adc
insl
aaa
adc
pop
cmpsl
mov
mov
ss
ja
fstps
arpl
notb
push
rcrb
cli
test
out
adcl
push
out
pop
push
imul
push
or
rcrl
call
fnsave
fcoms
mov
sub
cld
push
ret
pushf
cltd
mov
cs
mov
mov
mov
shl
mov
inc
inc
jns
push
and
cltd
or
ja
jb
sub
mov
or
std
jg
repnz
cmpl
cmpsb
inc
mov
das
popf
jg
mov
insb
lock
movsl
mov
pop
sbb
push
out
cs
sbb
sub
push
arpl
dec
nop
jns
cltd
arpl
fwait
lock
sbb
mov
xor
jbe
int
dec
adc
aas
adc
mov
inc
movsb
fsts
ror
imul
fdivrl
ret
lods
sarl
inc
xchg
pop
xor
xor
fiaddl
mov
mov
andl
loop
add
in
add
call
push
and
pop
mov
sarl
mov
mov
mov
stos
les
xor
sub
jmp
les
jo
shl
int3
sti
jb
mov
mov
add
pop
dec
jmp
ss
fimull
xchg
add
push
mov
push
xor
stc
decb
xor
or
mov
ja
jmp
add
push
in
push
popa
aam
in
push
inc
pop
scas
or
outsl
cli
cmp
es
bound
jl
pop
cmp
pop
mov
call
clc
sub
dec
sub
test
shll
dec
mov
out
imul
sti
fidivl
sub
xchg
and
and
inc
mov
out
dec
insb
pop
sbb
mov
flds
into
lock
inc
pushf
test
or
ja
jmp
icebp
imul
jge
xchg
sbb
xchg
cmovo
xchg
add
push
andb
popf
pop
jmp
fistpll
cltd
fwait
pop
dec
push
jmp
mov
ss
mov
pushf
cmp
inc
cmpsb
and
xor
sub
or
cmp
xor
mov
std
sub
cmpsb
mov
iret
pop
sbb
dec
bound
fs
or
pop
sub
clc
add
arpl
cs
xor
scas
fprem
test
mov
or
outsl
add
ret
notl
sbb
cs
repz
insl
or
cmpsb
movsb
aam
cmpsb
push
ret
push
fldt
stos
push
insb
lock
jne
rcrl
jbe
enter
and
push
sub
cmpsb
jne
imul
jmp
cmc
jbe
stos
push
adcl
xorl
inc
stos
lret
sub
mov
pusha
ret
call
cli
and
pop
test
ffreep
sahf
fnstsw
push
add
mov
jg
or
xchg
cmpsb
dec
ss
inc
andb
mov
outsb
add
sbb
mov
inc
leave
pop
out
sbb
and
shrl
rclb
dec
mov
push
jbe
ljmp
popf
and
stos
push
push
insl
or
fists
dec
cwtl
lea
adc
movsl
xchg
adc
das
arpl
roll
out
insb
push
jno
sub
icebp
sbb
mov
std
rclb
movsb
or
add
and
pusha
xor
stc
hlt
mov
adc
shll
mov
mov
popf
dec
or
jae
jmp
out
adc
sbb
xchg
enter
add
pop
dec
jne
jp
out
mov
xor
dec
imul
ds
jb
jno
mov
daa
mov
inc
or
mov
xor
sbbl
movsl
mov
int3
mov
and
hlt
rol
pop
cmp
adc
mov
pop
rclb
mov
divb
pop
push
leave
xchg
sbb
mulb
ljmp
adc
sahf
ja
daa
mov
jge
jne
out
mov
pop
push
mov
inc
fisttpll
psubq
xchg
or
mov
jmp
cld
mov
mov
scas
adc
call
test
repz
hlt
mov
jmp
cmpsl
fwait
jo
cmpps
push
add
mov
andb
cs
push
cmp
in
jbe
push
in
jge
push
test
cmpsl
fdivr
int3
push
inc
inc
inc
jmp
or
int
les
cmp
pop
loop
dec
call
movsb
imul
inc
mov
inc
popl
cld
sub
jae
sti
pop
inc
loope
aam
ret
pop
fsubrl
cli
cmp
rcrl
popf
push
addr16
pop
out
mov
xor
movsl
aaa
stos
fs
inc
push
mov
add
sahf
test
pusha
arpl
jae
arpl
addr16
push
dec
scas
adc
dec
jg
pop
into
test
cmp
xchg
jnp
shrb
cld
lock
xchg
pop
add
pop
mov
out
stos
jg
lock
jns
lds
test
jns
adc
in
push
hlt
or
nop
mov
jmp
adc
jae
pop
fdivl
and
rcrb
pushw
lock
xchg
in
mov
mov
sbb
sub
ficomps
mov
data16
lea
xchg
xor
rcl
lahf
jecxz
outsl
notl
pushf
mov
iret
push
jecxz
call
push
sbb
dec
pextrw
inc
mov
pop
and
shl
dec
ficomps
inc
lods
lods
fistps
jne
ror
incl
fldenv
dec
jmp
sbb
out
mov
leave
inc
jo
test
xchg
ror
xor
sub
jne
lea
subl
mov
mov
cmpsb
lods
lcall
scas
cmp
lret
test
mov
or
mov
mov
incb
pop
mov
or
push
loop
sarb
mov
jmp
rcl
and
cmp
fidivrl
sbb
mov
out
pop
jg
or
mov
pop
xchg
dec
mov
out
lret
adc
jno
dec
xlat
repz
arpl
pop
pusha
insb
out
mov
gs
in
mov
xor
and
inc
sub
cwtl
sub
fst
js
inc
add
mov
jnp
nop
sub
out
xor
jnp
sahf
jbe
movsl
push
jmp
clc
imul
mov
arpl
xlat
fwait
loope
or
or
iret
add
popf
mov
mov
cmp
dec
xchg
mov
fsts
test
add
sarl
push
sub
jo
xor
test
icebp
dec
pop
or
test
xor
std
pop
repnz
fmull
insl
sub
jne
push
vpminub
adc
sub
jmp
out
popf
mov
add
movsl
data16
sub
scas
jne
into
ja
rorb
jnp
cld
push
pusha
adc
imul
xchg
aad
pop
dec
mov
sbb
cli
leave
data16
jno
cmp
sbb
shll
pusha
fwait
mulb
inc
es
dec
and
push
insl
add
or
outsl
adc
sub
sbb
cmp
sbb
cmp
lock
add
pop
sti
cmp
cmp
add
jns
push
sbb
adc
popa
daa
js
ficoml
es
inc
out
xor
rclb
dec
repz
cltd
inc
mov
or
jo
mov
cmp
mov
pushf
subl
into
mov
pop
dec
inc
dec
shrb
movsl
dec
and
xor
cmp
jecxz
jns
adc
dec
imul
shll
add
fistpl
lahf
test
push
dec
dec
inc
js
push
out
sub
sub
addl
das
sbb
in
pop
leave
push
inc
sbb
xchg
frstor
inc
adc
push
xor
pushf
cmp
and
insl
cwtl
vsqrtss
pop
inc
popf
or
or
subl
mov
sub
ja
dec
popf
jnp
or
adc
aas
cld
in
pop
pop
pop
cmp
decb
adc
popa
repz
ret
and
mov
ss
popf
inc
rclb
cmpl
jle
fs
mov
mov
test
mov
add
in
out
mov
jmp
test
pop
test
negb
inc
je
xchg
jecxz
dec
mov
push
sbb
mov
imul
add
imul
lds
in
adc
jne
inc
mov
outsl
stc
mov
outsb
xlat
ss
in
pushl
icebp
add
push
push
loop
inc
and
inc
lea
adcl
aaa
mov
sbb
movsl
lock
sub
add
dec
pop
aas
inc
inc
xor
dec
pop
mov
nop
inc
bound
rclb
add
loop
xchg
leave
in
jl
cltd
pop
fwait
lods
pop
pushl
pop
stos
fisttpll
lea
pop
xor
test
and
add
push
mov
xchg
jl
and
pop
add
scas
pop
cmp
inc
mov
xor
je
pop
fcoms
sub
xchg
xchg
adc
je
push
dec
pop
mov
je
popf
test
mov
jmp
and
test
mov
je
roll
lock
jge
repnz
jmp
push
out
jne
adcb
insb
and
push
roll
test
hlt
push
mov
cld
mov
int
imul
js
sarb
mov
mov
jg
mov
lahf
sbbb
lret
sbb
loop
adc
mov
pop
xor
adc
iret
outsb
lea
mov
jmp
mov
or
dec
rcll
mov
dec
sub
lods
imul
pop
fnstenv
sbb
cmc
sub
sub
aaa
mov
push
jmp
call
lock
mov
ds
pop
shlb
mov
insl
push
xorb
add
fstpt
das
loope
or
add
inc
gs
mov
mov
mov
sar
sub
aas
mov
outsb
out
add
hlt
mov
lock
mov
mov
mov
mov
out
jecxz
or
icebp
les
pop
pusha
je
out
imul
inc
push
cmp
in
ss
int3
shl
outsl
sar
ds
cmp
dec
divl
or
xor
add
dec
jg
xor
pop
sub
sub
cltd
pop
push
mov
cltd
cmp
and
mov
cmp
inc
hlt
and
rorb
stos
cmc
cmc
inc
ret
cmpsb
xor
jmp
enter
inc
daa
push
je
xor
sbb
mov
push
mov
pop
hlt
mov
jp
jmp
fucomip
cld
sub
sbb
mov
pop
popa
sub
lods
dec
and
xchg
pop
ja
fcompl
jmp
dec
push
fldcw
or
xchg
lcall
daa
test
das
pusha
pop
inc
ljmp
adc
leave
pop
js
mov
into
bswap
fdivrs
mov
sti
push
out
xor
mov
push
add
push
dec
cwtl
out
pop
js
lret
test
loop
test
loop
test
dec
testl
lods
adc
push
scas
repnz
bound
std
jp
imul
aad
das
fdivp
rol
ror
mov
xchg
add
sub
or
shrl
add
pop
sbb
mov
mov
jl
jl
outsl
mov
lret
inc
daa
mov
cmp
fildll
inc
out
cmc
jbe
nop
out
bound
pop
shl
les
mov
xor
mov
outsl
jmp
loope
aam
or
lods
imul
repnz
jl
xchg
lock
stos
icebp
in
jmp
mov
jb
unpcklps
data16
sbb
dec
test
scas
mov
data16
in
jbe
xlat
cmc
and
sbb
push
icebp
pop
and
and
or
popf
outsl
fistl
insl
jl
sub
dec
inc
ret
push
rcrb
test
dec
pop
and
fsubp
push
clc
adc
cmp
sbb
mov
test
lds
jle
push
add
xchg
push
pop
xor
jo
aam
and
sub
sbb
in
out
sti
out
lcall
bound
mov
mov
je
mov
jg
mov
les
sbb
out
dec
into
lret
into
fists
and
aad
jle
cli
dec
outsb
imul
add
adc
mov
push
callw
and
ror
fisttps
test
lods
sub
ds
cmpsl
gs
xor
sub
lea
outsb
mov
and
insl
lret
fwait
mov
dec
xchg
sub
sbb
fdivs
rcrb
sbb
call
adc
arpl
incl
pop
jecxz
stos
fcoms
faddl
out
pop
sub
xor
cmp
xchg
lods
clc
orl
dec
add
sbb
inc
cmpsb
mov
jne
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
into
push
je
jp
sti
pop
jp
aam
imul
stos
pop
or
jnp
mov
sub
push
or
mov
int3
outsl
adc
divl
repnz
addb
sbb
xor
addr16
xchg
pop
mov
jb
mov
sub
or
rorb
mov
in
test
xor
or
aaa
ss
lods
es
aam
pop
jae
arpl
cmp
sti
and
cmc
sub
popa
push
fstpt
inc
xor
pop
loop
stos
adc
std
dec
es
pop
je
repnz
push
push
jmp
mov
loopne
cs
js
sar
add
xchg
pop
jl
inc
push
shr
outsb
push
sub
fdivrl
jl
jae
into
stc
sub
pop
pop
push
es
les
pop
jle
mov
pusha
icebp
add
jecxz
cmp
mov
sbb
fsubrs
das
mov
stos
inc
enter
push
fs
leave
jb
push
push
test
in
lahf
mov
pusha
ja
and
cmp
jg
mov
and
jle
shlb
push
push
mov
inc
mov
and
mov
xchg
fwait
mov
and
inc
lock
ret
xchg
in
push
cmp
or
iret
pushf
mov
repnz
test
dec
test
jmp
add
pop
jbe
call
in
jle
xchg
push
fistps
dec
jne
ljmp
cltd
xchg
xchg
dec
pop
pop
testl
add
fisttpll
stos
cmp
mov
fidivrs
ret
xlat
fisubrs
sub
cmc
rep
dec
test
pop
add
es
lahf
mov
mov
sub
lods
movzbl
push
jmp
je
sahf
es
jmp
add
cmp
jae
adc
xchg
inc
jg
out
out
lret
test
mov
jecxz
xchg
adc
push
mov
inc
dec
ljmp
xchg
sub
sbb
out
lods
in
push
clc
das
les
out
inc
adcb
push
and
fsubl
jmp
adc
or
aas
rcll
jp
lock
movsl
mov
and
dec
mov
push
ret
lcall
jb
jge
mov
insb
scas
mov
cwtl
repz
push
loop
mov
mov
sub
push
xchg
repz
sbb
inc
addr16
and
shll
cltd
dec
ja
iret
ds
jne
inc
or
popa
xchg
cltd
cmp
push
cmp
sub
sbb
mov
mov
jl
in
scas
in
aad
ret
hlt
push
add
sub
addr16
cmp
adc
push
inc
int3
stos
xor
xlat
jmp
xchg
mov
pop
or
outsb
mov
dec
push
dec
ds
cs
cmp
sahf
xchg
inc
enter
scas
adc
hlt
setl
decb
xor
scas
dec
imul
lahf
dec
mov
aas
sub
xchg
jecxz
mov
adc
fidivrl
mov
mull
lock
sbb
add
pop
adc
push
dec
lcall
imul
push
lcall
test
imulb
test
mov
popf
inc
addl
in
sahf
sbb
sbb
stc
scas
cmpsl
xchg
fists
sub
push
sbb
push
sub
pushf
or
mov
push
dec
ds
int
not
mov
lods
sub
and
mov
stos
pop
add
ret
cmpsb
lea
movsb
add
decb
test
in
aas
adc
cmp
adc
push
jbe
pusha
lahf
cltd
cmp
ret
mov
bound
ret
test
push
xorl
push
and
sbb
push
inc
jne
jbe
add
cli
adc
rcrb
outsb
dec
jno
jo
add
es
ds
xchg
jge
shlb
icebp
adc
jb
pop
or
lock
scas
arpl
mov
pushf
int
add
adc
jbe
pop
push
pop
jle
leave
lret
dec
adc
fwait
sbb
cmpsb
jl
insl
push
adc
in
pop
loopne
pop
data16
jno
daa
movsb
mov
mov
lods
mov
pop
sub
push
inc
push
pop
insb
icebp
pop
mov
cwtl
jne,pn
mov
jmp
xchg
loopne
or
fs
and
outsl
push
mov
xchg
incb
inc
jl
dec
jg
mov
xchg
repnz
adc
push
aas
daa
dec
je
call
push
fcmovbe
or
xchg
inc
mov
jo
stos
push
mov
xchg
fimuls
mov
pop
iret
cmp
mov
jmp
sbbl
ds
popf
out
ds
call
out
out
xor
mov
xor
repnz
sub
xor
dec
scas
scas
clc
inc
hlt
push
insl
std
xchg
mov
mov
sbb
out
xor
dec
cmp
pop
pop
mov
inc
adc
adc
ss
mov
mov
bound
jge
jg
int3
stos
sti
jle
mov
lea
pop
addr16
inc
mov
fisttpl
and
sub
pushf
or
xlat
mov
aaa
out
loope
cld
outsl
icebp
ljmp
jmp
rep
jecxz
dec
ss
sub
mov
lds
xchg
test
inc
popf
xor
cmp
dec
stos
test
mov
cltd
lret
mov
out
iret
jns
mov
sbb
dec
out
cld
sub
jo
movsl
fstpt
dec
sbb
push
pop
ficoml
out
push
xchg
fstps
mov
into
out
cwtl
sbb
int
lret
shr
clc
out
test
mov
aaa
mov
fnsave
decl
nop
movsb
dec
jge
push
andl
ds
jp
xchg
iret
fmull
pop
sub
push
xchg
icebp
pop
roll
cltd
ja
and
cmp
xchg
out
std
sarb
pop
and
cmpsb
xor
iret
jb
jecxz
add
sub
dec
jno
lds
mov
jmp
les
rcl
xchg
cltd
xor
inc
jnp
pop
xchg
add
shlb
adc
movsb
push
sbb
mov
repnz
mov
inc
xor
lock
push
and
adcl
test
nop
lock
xor
cmc
fildll
inc
or
adc
ja
std
and
push
push
repnz
pop
xor
ljmp
inc
cld
and
pop
mov
and
lock
stos
popf
xlat
inc
aaa
imul
lods
repz
sbb
jmp
out
iret
xor
call
sbb
pop
or
hlt
inc
adc
adc
pushf
cmp
mov
ds
push
lahf
lea
mov
scas
mov
jns
push
xchg
das
adc
or
shrl
mov
xchg
arpl
mov
outsb
adc
test
inc
fld
cpuid
leave
pop
imul
in
mov
leave
data16
out
into
mov
xlat
cmpsb
in
aaa
std
inc
cwtl
lcall
xor
pop
pusha
clc
xchg
pop
jnp
push
xchg
inc
call
pop
jle
pop
xor
int3
mov
xchg
push
jecxz
jge
sub
sub
mov
std
adc
lcall
mov
jmp
inc
add
addl
lret
int
cmp
lret
das
inc
mov
jno
mov
ret
adc
add
pop
push
dec
or
cli
jp
dec
int
scas
adc
scas
sub
pusha
dec
rorb
scas
mov
pop
notl
adc
repnz
push
dec
mov
or
aam
sub
sbb
imul
outsl
push
mov
xchg
add
cmpsl
or
cmp
adc
adc
sbb
mulb
xchg
cmp
pop
addr16
pop
mov
sarl
cltd
inc
add
out
xor
xlat
movsl
adc
sub
cwtl
jl
push
loopne
or
into
test
stos
mov
lds
jbe
test
in
add
pusha
xchg
sub
imul
cltd
and
insb
mov
pushf
clc
inc
and
xchg
and
movsl
rcll
lcall
shlb
pop
cld
in
ljmp
rcl
jnp
inc
rorl
hlt
adcb
je
adcb
jae
loope
cmpsl
aaa
test
ss
cli
push
dec
in
push
add
mov
mov
imul
stos
in
setp
dec
jg
jbe
mov
lds
xchg
and
bound
cmpsb
mov
nop
xorb
sub
cmp
out
les
adc
mov
fsubs
jno
jmp
fmul
add
mov
movntps
sbb
js
lea
fcomip
mov
mov
mov
iret
inc
fisubl
mov
mov
dec
jmp
jo
popl
icebp
inc
adc
sbb
add
and
cmpsb
push
and
or
push
cmp
inc
jo,pn
mov
pop
cmpsl
xor
insb
sti
adc
push
xlat
add
imul
or
pop
pop
jb
gs
nop
xchg
aam
pop
cld
xchg
mov
xchg
adc
add
jo
fxch
lods
push
push
jns
in
lods
or
sub
aas
fldenv
or
xchg
push
xchg
mov
pushl
ret
jne
dec
addr16
out
and
sub
push
push
inc
stos
cmp
shll
je
mov
push
icebp
fildll
negl
push
cld
leave
xor
and
add
xchg
icebp
push
push
les
aad
jge
adcl
sbb
mov
xor
test
jle
loop
xchg
aad
or
add
shrb
push
jle
and
rcl
push
xorl
xor
adc
add
jne
mov
add
aam
pop
lahf
pop
dec
mov
xor
jbe
ja
push
jp
or
mov
sarb
mov
inc
jae
jl
mov
dec
repz
repnz
xchg
mov
dec
pop
lods
daa
sub
scas
movsb
inc
into
out
xchg
inc
lods
cmpsb
fwait
add
pop
imul
xor
lahf
cmc
decl
cli
in
and
jge
fidivs
mov
popa
mov
addr16
pop
pop
shl
cmp
xor
sub
cs
imul
aas
jns
jno
pop
into
xchg
cmpsb
js
sub
lmsw
aam
scas
push
out
xor
arpl
mov
push
push
out
dec
bound
mov
cmp
test
xchg
pop
mov
pop
insl
hlt
sbbb
jp
xor
insl
rcl
sbb
xchg
dec
add
pop
ss
std
mov
adc
mov
mov
mov
fstpl
outsl
ds
jb
movsl
sar
mov
cmp
sub
jecxz
out
rolb
pop
xchg
gs
and
mov
nop
addr16
add
pushw
ds
jb
sahf
cmp
mov
loop
jns
xchg
mov
xchg
jnp
aaa
je
mov
pop
incb
shlb
fucomip
sahf
loope
mov
mov
mov
je
adc
stos
cltd
push
fstl
clc
sbb
jo
and
jmp
inc
push
add
cmp
call
fstps
in
getsec
adc
ss
jmp
jge
mov
aad
mov
dec
sub
pop
inc
xor
dec
push
mov
pop
jle
lahf
jne
xor
int3
xor
shl
in
fadd
les
test
fisttpll
jae
pop
xchg
mov
decb
hlt
dec
repz
xchg
push
jmp
dec
pusha
in
pop
inc
lods
pusha
leave
in
enter
dec
fldt
mov
push
and
mov
mov
loop
fxch
leave
xchg
negl
andb
dec
lock
addr16
sbb
insl
inc
ja
push
mov
push
dec
adc
mov
sub
and
xchg
mov
mov
xor
flds
add
data16
jns
mov
mov
push
mov
sub
inc
call
mulb
mov
jmp
mov
push
pop
cmpsl
clc
outsb
ret
mov
pop
loopne
dec
inc
mov
dec
int3
lret
mov
je
popf
sbb
mov
std
sbb
dec
data16
cmp
lods
clc
push
lods
nop
test
iret
inc
push
jmp
jg
nop
test
xor
dec
out
or
ret
mov
in
outsl
push
push
xchg
shll
jns
xchg
testl
dec
ja
shll
add
mov
fisttpl
mov
and
dec
mov
gs
popf
xor
stos
icebp
sbb
adc
mov
loopne
xlat
cltd
in
in
fstpl
popa
push
cltd
iret
imul
and
inc
gs
and
xchg
xorb
add
mov
das
mov
add
cmpsb
mov
lcall
mov
cmp
repnz
cmp
push
mov
std
movsb
mov
idiv
jb
out
aam
xchg
xchg
sti
loope
fidivl
dec
mov
movsb
fildll
xor
gs
cmp
out
leave
ss
adc
pop
movsl
and
rcrb
dec
pop
mov
addr16
arpl
loop
aad
mov
sti
stos
sbb
dec
scas
jae
popa
rdmsr
push
adc
lea
xor
lods
mov
cli
xchg
aam
jmp
stc
sbb
xorb
int3
fiadds
into
lsl
mov
ja
lahf
movsb
loope
jo
cmpsl
pop
mov
nop
repnz
daa
lods
fldcw
inc
mov
imul
lcall
or
icebp
daa
cmpsb
pop
test
pop
in
fistl
mov
add
mov
in
pop
sub
lds
sbb
adc
cli
test
les
mov
xchg
lock
add
andb
mov
ror
mov
lret
nop
lret
mov
cmp
mov
inc
jns
fsubrs
push
arpl
push
stos
jae
push
or
lahf
and
mov
mov
xor
jo
xchg
jmp
mov
xchg
lret
aaa
pop
pusha
jecxz
divb
push
or
add
mov
call
sub
addr16
sti
adc
mov
jmp
dec
xchg
ds
fisttps
rolb
js
xchg
inc
cmc
or
sbb
mov
bound
push
push
push
mov
sbb
mov
adc
push
out
pop
pop
adc
push
or
int3
or
out
sbb
or
ja
out
pop
pop
cmp
push
insb
push
jnp
mov
out
xchg
dec
sub
sbbl
test
lcall
imul
push
mov
outsb
inc
push
push
test
mov
lock
xor
addr16
out
mov
scas
inc
cmp
ret
into
mov
fistpll
or
sub
jecxz
pop
push
adc
ret
ja
jge
ret
sub
stos
dec
push
out
lods
in
cmp
iret
xchg
add
stc
inc
dec
cmpl
sub
inc
xchg
add
shlb
clc
fsts
dec
cld
fstpt
and
jmp
or
push
and
push
ja
add
popf
dec
pop
pushf
sbb
cmc
and
pushf
mov
outsl
nop
mov
cld
rclb
jge
sbb
mov
xchg
pop
lahf
dec
cld
stc
adc
push
or
cs
push
jge
cmp
adc
push
xchg
sub
cmp
xchg
aaa
jae
dec
cmpb
jns
std
push
mov
sti
jmp
and
aaa
sbb
push
xchg
fstpt
and
pop
jge
pop
cmp
mov
pop
popa
es
shlb
adc
push
mov
and
sysexit
xchg
inc
dec
pop
inc
pop
clc
mov
xchg
test
pushf
ljmp
push
jne
mov
and
and
and
loopne
dec
subl
lahf
xor
push
push
pushf
orb
xor
mov
pop
sbb
cli
fcomp
adc
add
sbb
xchg
repz
push
shll
sarl
cld
js
lods
sub
sahf
in
mov
or
pop
mov
ficoml
je
repz
mov
jmp
lods
xor
pushl
test
or
pop
fwait
call
push
pop
test
and
leave
loope
xchg
push
pusha
out
jmp
mov
jl
ljmp
lcall
fcompl
mov
mov
sub
xchg
popa
mov
cmp
xchg
out
mov
cmp
clc
mov
sub
ret
mov
mov
fwait
push
sub
mov
sub
aaa
inc
sub
jae
test
add
shll
lea
xchg
ds
xchg
cld
pop
fdivr
lods
jb
mov
lret
inc
mov
dec
lds
lea
mov
xlat
mov
popl
xlat
mov
pop
int
out
xor
mov
add
in
outsl
aam
aaa
xchg
fisubrl
xor
pop
mov
ret
sub
mov
cwtl
jmp
shr
xorl
aaa
and
xor
stos
sbb
and
or
lods
dec
sub
mov
stos
out
push
cmc
jns
stos
fmull
scas
loope
les
or
cmp
fildll
xor
cmpsl
xchg
mov
sahf
and
pushf
ret
cmp
sbb
xor
cmp
or
push
mov
xchg
or
mov
cmc
ret
cmp
popf
bndstx
adc
je
gs
cmc
nop
sbb
popa
and
inc
subb
sbb
fwait
add
inc
cmp
lods
inc
add
fs
jno
and
rorl
negb
push
sar
cwtl
stc
es
xchg
dec
xchg
shl
vmovaps
pop
jle
xchg
mov
mov
pop
xchg
or
iret
pop
pushf
and
and
xor
les
in
push
out
lahf
mov
jmp
stc
and
dec
icebp
ret
daa
pop
lods
push
sub
sar
xchg
stc
sarb
mov
movsl
icebp
adc
pop
jle
and
out
inc
push
or
fidivrs
lds
loopne
pop
cmp
les
cs
inc
push
mov
movsb
ss
rcrl
cmp
cltd
lods
mov
mov
data16
xchg
pminsw
add
cmpsl
test
pop
das
sbb
jp
inc
hlt
add
sahf
mov
push
push
push
add
pop
movsl
xchg
cmc
lret
subl
daa
mov
mov
xchg
ret
inc
xor
inc
adc
mov
sub
pop
pop
test
movsl
insb
mov
jae
dec
fisubrl
cmp
pop
inc
divl
pop
push
lahf
push
nop
hlt
cs
inc
aad
push
add
out
std
mov
in
lret
sbb
lahf
mov
push
or
fisubl
ljmp
sti
sbb
and
cmp
ret
sub
mov
mov
mov
sub
aad
lret
push
sub
repz
insb
push
push
mov
stc
outsb
lahf
push
das
pop
cmp
ja
adc
cmpsb
frstor
movsl
cli
movsb
xor
pusha
jg
pop
addb
cmpsb
ja
fldenv
mov
js
sub
hlt
outsl
aas
lcall
iret
cmp
aas
lea
xchg
scas
dec
aam
mov
sahf
icebp
xchg
popa
jl
dec
outsl
jae
adc
es
adc
jno
fs
add
mov
ret
ljmp
add
js
sbbb
test
gs
cmp
mov
sub
negb
shlb
leave
mov
add
out
in
jl
jmp
imul
ret
fcoml
and
in
frstor
cmp
pop
repz
lock
sbb
pop
pop
cmpsb
stos
jmp
scas
popf
pushf
fdivrl
iret
mov
sti
popf
xor
push
or
xchg
xor
xchg
sbb
out
pop
ja
data16
sbb
pop
aas
inc
pushf
adc
fld
mov
and
outsb
sbb
mov
in
sbb
ds
jbe
push
divl
cli
jge
sub
sub
lock
push
dec
cs
and
loopne
mov
jmp
jecxz
loop
fldl
jo
decl
jp
inc
inc
loop
cmp
lods
push
insb
in
sbb
hlt
repz
and
adc
rolb
sub
stos
sbb
out
fcmovb
cmc
push
out
cmp
bound
into
xor
mov
xor
call
and
pop
xor
das
shll
jo
cmp
dec
mov
daa
mov
sub
xchg
js
xchg
bound
lcall
popf
addr16
enter
cmpsl
gs
lret
mov
jg
mov
inc
repnz
pop
mov
or
mov
es
loop
push
mov
cmp
push
pushf
in
cmp
ljmp
and
pop
mov
mov
in
mov
addl
sub
fwait
ds
out
out
inc
mov
push
jle
fsubp
jb
ds
jg
push
das
add
mov
dec
arpl
xchg
jl
mov
xorb
xor
inc
dec
push
and
xchg
scas
cwtl
jns
push
in
pop
push
mov
dec
mov
inc
adc
lret
jo
subl
or
divb
sbb
ret
in
repnz
orl
movb
loope
push
mov
stos
ljmp
fisubs
fxch
dec
inc
movsb
mov
sbb
loop
loope
mov
stc
xchg
outsl
mov
test
jae
jne
js
aam
pusha
add
xchg
pop
xchg
lea
mov
lds
jne
mov
orl
imul
dec
aad
lea
fstcw
xchg
pop
leave
xchg
add
dec
dec
aad
in
fmuls
sub
cmp
lret
pop
loope
mov
cmp
test
push
mov
sti
scas
push
pop
subb
and
pusha
xor
jmp
sbb
push
fdivrl
setae
pop
xor
shl
stos
pop
cmc
les
fwait
ja
pop
adc
adc
andb
int3
shld
les
push
cwtl
arpl
stc
inc
cwtl
icebp
outsl
jl
imul
lret
leave
mov
ss
lods
pop
repnz
jecxz
cs
loopne
cmpb
sahf
cmp
jnp
jmp
test
scas
mov
lds
xchg
dec
mov
sub
push
and
lahf
popl
int
pop
shrb
inc
push
out
hlt
fdivrl
cmpsb
mov
sub
movsl
sarb
jecxz
bound
pop
test
jnp
jb
inc
dec
repnz
test
fdivrs
jmp
inc
xchg
mov
pop
in
xchg
jae
sbb
in
jge
dec
fisubs
fwait
push
cmp
testl
test
sahf
outsb
lcall
out
or
cld
clc
lret
sbb
mov
loope
and
gs
loopne
bound
es
mov
push
mov
int
rcr
or
push
xchg
mov
and
fcomps
or
mov
out
jge
jg
nop
jno
cmpsl
inc
xor
mov
ret
fistpll
jge
ljmp
in
jno
or
outsl
mov
sbb
push
dec
sub
xchg
cmp
test
scas
mov
movsl
cmc
inc
imul
dec
cli
xchg
inc
stos
add
cmc
adc
sub
leave
aad
das
add
sub
inc
pop
inc
sub
mov
fisttps
sub
pop
in
mov
iret
mov
sub
lret
outsb
movsl
outsl
jo
lods
jb
inc
andl
adc
insl
or
xchg
sbb
push
hlt
mov
arpl
push
push
jle
call
cld
dec
adc
lods
mov
movsl
or
or
mov
xchg
pop
pop
pop
cmp
scas
sti
jle
inc
jnp
out
iret
mov
fnstenv
add
lods
aas
rcl
mov
or
testl
imul
mov
movsb
adc
aas
inc
ret
loop
jbe
scas
fs
in
aas
pop
mov
int3
ja
sub
sub
ljmp
inc
push
unpcklps
jnp
into
cli
addl
ss
out
mov
dec
ljmp
or
and
inc
mov
cs
push
shr
cmpsb
adc
add
pop
insb
pop
out
cmp
push
jge
insl
sbb
jo
mov
and
das
rcll
roll
and
les
cmp
hlt
xor
jge
stos
in
fsubrl
or
daa
mov
pop
cmc
rolb
push
lods
pop
sbb
out
and
mov
sub
std
aas
cltd
xor
add
orb
idivb
or
das
and
jb
adc
jle
fisubrl
test
mov
and
mov
dec
mov
mull
mov
cmp
insl
jbe
pop
std
sub
mov
clc
push
addr16
sub
xchg
push
es
fldenv
call
pop
pop
lret
dec
stc
in
testl
out
push
xchg
dec
gs
cmpsl
mov
or
movsb
lock
and
insl
shll
test
sub
or
inc
cmpsl
cmp
push
das
imull
ljmp
lea
dec
xlat
mov
int
dec
fdivl
out
imul
add
push
mov
les
int
sub
aas
inc
loopne
pop
les
gs
sti
xchg
cli
ret
enter
cli
mov
loopne
outsb
rcll
ficoms
aad
or
jns
rcrl
inc
mov
push
adc
jns
dec
in
mov
sub
out
lahf
repz
cwtl
addr16
fdivr
popf
loop
popa
rcll
adcb
iret
iret
mov
push
jo
bnd
push
cmpsl
pop
ja
roll
out
sti
arpl
push
les
loopne
rcr
mov
sbb
cmp
test
lahf
jl
jle
std
pop
repz
imul
das
jle
ljmp
clc
dec
jp
cmp
outsb
lret
dec
xchg
iret
sub
mov
enter
sub
mov
adc
fiaddl
xor
mov
popa
stos
aam
jmp
add
je
insl
xchg
sbb
rol
sti
push
xor
inc
sbb
lds
jnp
lds
push
pop
inc
int
xor
adc
aad
pop
andl
cmc
xorl
xchg
pop
mov
sbb
sub
inc
addr16
cwtl
push
mov
std
dec
mov
cmp
fcmovbe
mov
nop
out
jp
data16
pop
out
mov
push
pusha
xchg
fcoml
iret
inc
inc
std
dec
shr
add
hlt
shl
add
ret
or
mov
movsb
inc
je
xchg
xor
xor
mov
data16
call
data16
shl
jg
and
sub
mov
or
or
and
notl
inc
insl
jae
xchg
sti
repnz
push
push
scas
sbb
xchg
or
popf
jg
sub
mov
lods
mov
xchg
fldl
into
stos
pop
pusha
cmpsl
sbb
mov
inc
sahf
push
loopne
daa
mov
dec
and
sub
addr16
stos
dec
xchg
mov
lahf
sbb
pop
fisubrs
jl
jns
insb
pusha
push
addr16
fst
idivb
inc
push
fidivs
jmp
dec
fnstcw
in
ret
push
pop
and
pop
inc
mov
xchg
insb
jp
dec
pop
cld
and
mov
inc
push
adc
out
rclb
jbe
xchg
imul
jp
iret
mov
int
dec
sub
mov
pop
dec
adcl
pop
adc
sub
sub
jecxz
pushl
aad
or
xlat
jl
ds
rcrb
cld
aaa
and
jne
add
jle
and
pushf
cmp
inc
sbb
bound
stc
jbe
xor
fbld
shll
fsubs
sub
popa
push
fprem
dec
and
repnz
iret
push
mov
mov
lea
insb
lea
sub
mov
addr16
addr16
add
into
or
fadd
hlt
pushf
and
sbb
enter
push
andl
jg
jmp
sbb
outsb
cs
mov
jg
xor
sub
int
and
cwtl
ja
insl
in
mov
sahf
cli
add
loope
int
jl
jnp
sarb
jge
push
int
sti
mov
sub
imul
out
pand
pop
jns
and
mov
cmc
mov
jp
bound
pop
iret
lods
and
scas
int
dec
mov
xor
hlt
xchg
mov
rcr
cmp
push
pop
inc
mov
add
inc
mov
mov
or
jecxz
ds
fs
pop
int
cmp
lods
lods
in
mov
in
clc
jns
shlb
outsb
push
push
sub
movsl
jp
cmc
sbb
mov
sbb
dec
int3
push
cmp
cmc
adc
add
ror
push
sarl
fsubrs
rorb
push
xor
movsb
lods
pop
xchg
and
les
xchg
movsl
sub
stos
cli
jo
push
sbb
pop
lods
es
add
adc
dec
dec
xor
pop
roll
jns
jmp
outsl
lret
and
pusha
mov
adc
mov
popf
mov
sub
inc
cmpsl
cmp
insl
aad
or
xor
repnz
inc
or
fldl
stos
addl
sub
aad
insb
add
or
sysexit
cs
jbe
sub
adc
mov
sbb
inc
test
mov
clc
inc
stos
sbb
hlt
lahf
addr16
push
mov
xor
and
pop
xorb
pop
push
pop
jae
mov
in
push
ret
add
pop
ds
inc
lcall
js
ret
lret
adc
inc
ret
mov
mov
jle
movsl
imul
xchg
mov
js
aam
int
cmp
and
clc
loop
and
lock
jo
lea
iret
les
bound
and
cmp
dec
in
jb
cltd
pop
pop
adc
aad
and
mov
jmp
shll
testl
and
fs
jno
sub
daa
jno
add
sbb
jne
and
clc
or
pusha
mov
dec
jnp
hlt
lret
mov
test
xchg
pop
clc
jnp
and
push
enter
les
cli
leave
movsb
add
pop
mov
mov
int
rclw
lea
mov
mov
xchg
cltd
mov
xorb
insl
dec
dec
push
fsts
mov
cmpb
xlat
mov
filds
xchg
cmp
inc
jp
jne
cld
cmp
data16
cmc
shl
addb
push
fwait
xchg
or
jecxz
xlat
add
cmpsb
adc
test
rcrl
push
adc
in
xor
jb
mov
or
lcall
jnp
xor
ja
fdivs
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
jge
fs
cmp
push
sbbl
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
mov
aam
add
add
add
mov
inc
sub
push
shll
sti
pop
push
xchg
and
test
psubw
hlt
add
inc
stos
lds
scas
xor
lea
xor
jle
test
xchg
dec
in
roll
pop
into
inc
push
int
inc
ret
les
jp
out
or
adc
push
in
xor
sub
ds
sahf
xchg
push
dec
cmp
xchg
sub
incl
rorl
jle
lds
decb
insb
jb
cmp
call
js
sysret
mov
or
js
or
lods
push
cld
jnp
ficompl
xchg
outsb
lds
mov
adc
loop
xchg
mov
or
lods
in
push
stos
adc
pop
or
adc
dec
and
stc
iret
pop
test
mov
pop
lret
inc
adc
test
lret
xor
shrb
inc
xor
lret
outsb
xchg
mov
pop
dec
arpl
popa
loope
fisttpl
dec
push
pop
lret
mov
or
mov
mov
xchg
cmpb
sbb
cltd
jb
or
adc
adc
rorl
mov
stos
push
xor
fadd
out
lock
cmp
sbb
sbb
testb
add
sbb
loopne
xchg
jg
mov
and
rcl
into
js
dec
out
test
cmc
inc
dec
pop
daa
lods
dec
jmp
jecxz
mov
adc
mov
rol
scas
cmp
cmc
add
pop
push
xchg
fimuls
int
clc
mov
pop
dec
dec
cld
leave
sbb
aas
inc
pop
jno
fs
mov
jl
cmp
ljmp
adc
xor
pop
std
sti
add
sti
jns
outsl
dec
aad
movsb
div
xor
mov
push
cmp
mov
inc
lret
out
cmpsb
cmp
ss
dec
hlt
je
fmul
add
lahf
pop
lds
cmp
lock
inc
push
dec
pop
std
xchg
mov
std
jmp
imul
dec
mov
pushf
pusha
pop
fisubs
sbb
ss
sti
inc
push
outsl
imul
divl
cmp
fsubl
out
xchg
stos
inc
xor
daa
inc
push
cmp
out
clc
xchg
xor
or
leave
mov
mov
or
xchg
imul
mov
xchg
adc
sti
mov
dec
jecxz
xor
jo
mov
jo
mov
sti
aaa
hlt
inc
lea
pavgw
in
fcompl
pusha
adc
pusha
outsb
movsb
mov
cs
insb
mov
dec
sub
xlat
fwait
mov
push
in
sarb
jl
int
jo
subl
pop
push
sti
into
jne
push
jo
adc
int3
repz
psrad
dec
or
adc
imul
xor
adc
sbb
push
movsl
sub
stc
dec
inc
leave
js
out
repz
jecxz
rorb
push
ljmp
mov
adc
aam
cmpsb
shll
lods
xchg
and
mov
shlb
sub
dec
jne
push
mov
add
mov
push
stc
pop
mov
mov
sub
and
test
inc
cwtl
imul
jmp
subps
daa
jecxz
inc
fidivs
clc
mov
iret
dec
out
xlat
imul
jge
je
mov
sbb
addb
cld
inc
push
gs
sahf
xor
add
rol
in
jb
iret
lahf
or
mov
in
ret
leave
movsl
pop
cwtl
and
mov
jae
ret
cwtl
mov
or
jecxz
xchg
pop
cltd
fwait
dec
add
sbb
adc
in
and
jg
jle
sub
pusha
dec
loopne
push
mov
inc
fists
push
push
lahf
fsubrp
mov
push
repnz
fcoml
add
cmp
xchg
in
sbb
xor
pop
jle
enter
mov
int3
arpl
test
push
jmp
xchg
das
xchg
test
or
push
or
push
and
fiadds
lods
leave
ss
cmc
push
xchg
sti
pop
adc
sahf
cwtl
or
movb
scas
test
sub
loopne
cmp
jb
dec
add
lcall
and
leave
popf
inc
dec
adc
mov
mov
add
add
push
sbbb
fistpl
sub
add
hlt
add
add
int3
out
cmp
pop
push
out
and
xor
movsl
shll
inc
or
in
pop
cmp
roll
jge
pop
cltd
jl
out
test
and
jb
xchg
rolb
out
add
or
in
jmp
mov
cld
fistps
fmuls
mov
or
daa
xchg
inc
jp
or
push
fs
stos
push
xchg
inc
add
xchg
inc
adc
dec
xor
pop
push
cmp
mov
orb
movsl
jbe
inc
pop
loopne
push
xchg
cmp
pusha
xor
js
rcll
out
pop
jmp
add
push
push
sarb
mov
test
hlt
movsb
mov
add
in
scas
jb
aam
ret
cmc
cltd
shll
out
lods
insb
into
loopne
push
push
outsb
lcall
addl
pop
cmp
popf
mov
int
mov
jno
test
insb
pop
hlt
cs
jo
sbb
faddl
xor
adc
cwtl
cltd
idiv
dec
fcmovne
ret
das
jp
or
psrad
rorb
test
sbb
daa
mov
add
jnp
mov
xchg
fucomp
gs
and
aam
mov
jae
shll
adc
pusha
andb
arpl
mov
mov
xlat
push
xlat
jg
frstor
in
mov
out
mov
fldenv
loop
mov
dec
stos
int
xor
dec
mov
mov
jns
enter
push
push
out
inc
and
and
loopne
cmc
or
fimuls
ret
mov
mov
add
sbb
pop
test
jne
or
iret
cli
idivl
leave
push
shll
sub
stos
rcrb
sub
fdivs
push
stos
mov
testl
sbb
xor
shrl
cld
pop
enter
setae
scas
mov
add
neg
inc
repnz
inc
add
data16
add
push
or
imul
sbb
mov
hlt
jns
jbe
jge
mov
pop
mov
sbb
mov
jmp
mov
sbb
pop
sti
or
mov
mov
dec
sub
outsb
cli
mov
js
sbb
mov
loope
cmc
insl
mov
out
push
inc
in
jbe
adc
or
jo
xchg
sub
jo
mov
int
jge
sbb
bound
add
test
mov
pop
les
aam
shlb
inc
dec
cmpsl
test
xchg
das
pushf
cmp
in
push
pop
mov
aam
jl
orl
mov
nop
ret
arpl
add
pushf
mov
stos
mov
sub
arpl
push
popf
mov
hlt
sbb
rcrl
mov
mov
adc
sub
sahf
fimuls
mov
cmpsl
mov
sarl
popa
enter
mov
jmp
push
xchg
xchg
mov
cmp
jl
sti
mov
or
int3
in
aam
int3
and
loopne
mov
test
mov
shlb
repnz
mov
pop
or
adc
insl
in
add
outsl
adc
cmc
sbb
out
xchg
and
cltd
lock
ja
mov
push
adc
adcl
test
ss
pushf
cld
mov
mov
cmp
scas
popf
jl
lock
pop
mov
test
outsl
and
sbb
test
pop
dec
pop
dec
mov
mov
mov
push
iret
adc
mov
push
dec
stos
dec
ljmp
sub
cmp
fldcw
push
lcall
xchg
adc
cmpsl
add
fwait
xorb
mov
xchg
cmpsb
push
gs
mov
or
or
test
push
cli
hlt
jge
std
pushf
std
xorb
lcall
leave
push
jno
xchg
shll
jb
mov
in
fisubrs
or
adc
mov
jbe
add
fisttps
sti
add
adc
clc
std
xchg
test
push
pop
jo
mov
outsl
inc
call
out
lods
daa
pop
cmpsl
mov
stos
popa
adc
xchg
mov
dec
inc
in
inc
stos
sub
jb
mov
jg
add
cld
js
testl
add
cmp
cmpsb
jg
mov
jae
cmp
add
add
add
outsb
out
xor
push
aad
fmuls
out
mov
ja
stc
cs
xchg
inc
in
cmpsl
arpl
add
stos
ss
std
mov
mov
jp
and
add
aad
imul
sub
aaa
pop
jmp
push
dec
xor
fistps
add
rorb
cli
mov
bound
xchg
js
push
jp
push
sub
mov
mov
lds
out
clc
sti
int3
inc
call
movsl
rorb
out
outsb
or
je
cmp
ljmp
cmp
add
mull
and
lret
gs
lret
push
cmp
sar
pop
sbb
add
push
daa
imulb
sub
adc
push
mov
xchg
dec
or
jle
mov
test
shl
xchg
mov
or
lahf
jno
ds
fildl
adc
xor
dec
sub
jmp
in
jp
imul
repz
dec
or
push
pop
loopne
pop
sbb
dec
mov
add
gs
fildll
xor
shll
int
and
sbb
mov
xchg
add
mov
lds
add
fwait
cltd
pusha
mov
adc
pusha
add
scas
push
iret
lods
sub
jmp
sub
jecxz
or
mov
in
and
xchg
das
fidivl
dec
ret
mov
xchg
dec
push
mov
sti
xchg
cmp
and
adcl
aam
std
js
mull
push
fiadds
pop
ficoms
jb
and
xor
xchg
ss
mov
cmp
push
mov
in
outsl
jg
into
or
in
mov
dec
adc
dec
mov
in
das
dec
push
pop
adc
inc
fadd
inc
push
pop
shrl
cltd
test
adc
cmp
pop
mov
or
inc
adcb
insl
mov
aaa
enter
push
adc
mov
dec
lcall
insl
popf
or
loopne
dec
dec
pusha
push
dec
mov
add
orl
test
ja
fimull
dec
xlat
outsl
pop
inc
mov
jno
sub
dec
sub
push
mov
push
insb
xorb
lock
pop
dec
mov
lods
cld
or
in
xor
inc
jnp
sbb
xchg
pop
jnp
scas
cmpsl
test
repz
mov
dec
mov
and
inc
sub
push
cwtl
xor
es
mov
pop
sub
leave
icebp
push
out
stos
jecxz
pop
sbb
sub
push
lds
push
pop
pop
insl
aad
mov
pop
std
lret
rcl
jno
mov
sbb
ljmp
sub
or
jecxz
movsb
add
and
push
icebp
mov
jl
stos
lods
mov
xchg
subl
enter
les
scas
int3
push
in
xchg
adc
or
movsb
or
jae
add
mov
mov
xchg
scas
pop
xor
mov
jp
cmp
xor
inc
inc
push
xor
inc
and
or
jg
mov
mov
push
xchg
sub
in
out
push
stc
inc
cmc
repz
jmp
insl
pop
and
adc
sbb
dec
add
sub
adc
loopne
roll
mov
fcomps
cmpsl
cmpsb
int
movb
pop
sar
add
xchg
neg
cli
int
xchg
adcb
repz
adc
xorl
cmp
push
mov
insb
rcr
je
cwtl
push
cli
cmc
adc
stos
mov
fisubs
jl
inc
lahf
xchg
test
cwtl
xchg
mov
adc
in
loop
ficompl
push
xor
lock
movsl
cmp
popa
lret
pop
inc
rorl
cli
adc
repz
dec
enter
dec
add
inc
ret
dec
xor
push
int
add
dec
aam
repz
daa
mov
add
adc
pop
cld
sub
loope
leave
fldenv
cmpsb
imul
push
xchg
push
pop
int3
testb
cwtl
add
insl
inc
nop
pop
push
cmp
cmp
or
je
repnz
std
aas
sub
pop
hlt
test
fmulp
xor
push
aaa
aad
mov
jle
sbbb
mov
imull
jno
xor
fwait
and
xor
cmp
inc
and
imul
in
xchg
dec
mov
or
pop
lcall
fdivrp
cmp
ljmp
push
mov
insl
xchg
stc
pop
add
add
clc
pminsw
idiv
repz
lret
push
add
hlt
add
add
pop
data16
cmp
add
pop
loop
inc
jecxz
ret
dec
repnz
rcr
jo
mov
add
push
ds
loope
adc
add
push
and
subl
in
mov
in
dec
shll
addr16
lods
add
cmpsb
cmpb
fwait
mov
cmp
pop
or
and
repnz
mov
mov
scas
pop
xchg
jb
inc
mov
ss
xchg
jnp
mov
fbld
or
int
sub
push
cmp
pop
sbb
rorb
lea
inc
sub
mov
or
out
push
or
mov
inc
push
shrb
lods
je
enter
jmp
adc
out
dec
loopne
add
lret
pop
and
lods
xor
jecxz
rcll
sub
stc
cmpsb
xchg
dec
mov
fwait
fwait
xchg
pop
ja
jno
sbb
jge
mov
decb
xchg
insb
cld
roll
or
push
jo
mov
test
sbb
scas
sub
vphaddudq
lcall
jmp
xchg
push
cmp
jne
fimull
dec
out
cltd
inc
mov
sbb
icebp
xor
adc
push
push
sub
cwtl
fcmovnu
psllq
inc
loopne
stos
xchg
add
mov
pop
adc
loopne
push
xchg
mov
mov
popf
or
ret
mov
adc
push
daa
xchg
mov
xchg
pmuludq
rcll
std
lcall
mov
lods
push
fiadds
lcall
das
fistpll
add
and
xchg
xchg
push
clc
xor
mov
adcb
lods
js
test
mov
push
outsb
xor
int3
shufps
ds
mov
ss
jmp
fisttpll
dec
or
pop
push
mov
pop
aaa
lahf
out
inc
fsub
loope
mov
adc
pop
loopne
loopne
ja
xchg
scas
int
and
lock
inc
adc
and
bound
mov
mov
out
outsb
cmp
mov
pusha
pop
loop
mov
dec
or
imul
and
stc
xchg
jo
int
mov
xlat
push
xchg
out
adc
mov
aam
or
jno
xor
and
in
adc
xorb
push
xlat
out
mov
jnp
dec
and
xor
leave
dec
popf
lds
rolb
push
sti
and
cmp
push
icebp
shll
push
inc
pop
incl
jg
mov
xor
push
sbb
insb
jl
ret
push
stc
and
pop
fwait
es
jmp
push
inc
inc
add
mov
popf
insb
add
out
scas
jl
cmp
cld
loope
ret
fs
cmp
sarl
test
jmp
or
sub
pop
out
push
bound
fidivl
outsb
cli
into
inc
imul
mov
icebp
mov
les
dec
mov
or
jmp
pop
inc
xor
bound
sarl
mov
fisubrl
push
test
inc
out
out
push
mov
mov
jg
sbb
and
xor
sub
jl
js
xchg
mov
xchg
js
or
add
and
aas
push
sbb
jns,pt
jmp
adc
leave
lods
test
test
and
jmp
pop
and
jno
pavgw
xor
mov
mov
popf
mov
mov
sub
arpl
fmulp
xorb
sbb
pop
add
inc
push
xchg
lahf
cwtl
mov
inc
inc
push
out
addl
push
adc
mov
push
xchg
in
push
clc
ss
dec
or
adc
negb
rorb
pop
cmp
adc
icebp
pop
adc
lea
imul
imull
push
inc
add
popl
and
push
mov
nop
lds
push
sub
fiadds
mov
fadds
out
insb
mov
inc
xchg
push
mov
sub
and
mov
mov
fwait
xchg
arpl
fistpl
jg
insl
fdiv
sub
aad
mov
dec
xor
stos
je
sub
popf
cmp
hlt
leave
shrl
arpl
out
test
xorl
cmp
jp
dec
cld
imul
out
inc
or
cltd
paddq
push
or
jecxz
mov
stc
add
add
call
jnp
sarl
mov
add
hlt
add
add
cmpsl
dec
or
jo
jmp
lods
inc
popa
mov
imul
jp
loopne
lahf
inc
adc
inc
test
and
in
in
mov
or
push
xor
adc
xor
push
rcll
pop
aam
hlt
mov
push
pushf
sub
adc
pop
jg
mov
aam
cmc
inc
sub
jne
mov
mov
mov
pusha
jge
rorb
mov
insb
pop
xchg
into
dec
aam
dec
jmp
js
sbb
push
push
inc
mov
xchg
mov
jae
jecxz
adc
mov
xor
mov
clc
sbb
inc
adc
sbb
stc
mov
cli
cmp
sub
lods
daa
mov
insl
ja
xor
push
popl
cltd
xlat
push
movsl
or
mov
pop
in
and
lds
or
aad
mov
xchg
cmp
ficomps
arpl
pop
iret
push
xor
jle
jge
xchg
or
cwtl
call
add
in
inc
fwait
cs
insb
in
mov
psllq
adc
add
cmc
arpl
je
mov
adc
lret
lret
mov
mov
mov
jno
xchg
lods
mov
mov
ss
rorl
and
xchg
push
add
daa
jb
inc
leave
pop
cmpsb
fisubrl
xchg
data16
mov
mov
pop
sub
add
xchg
xchg
lahf
mov
fs
jbe
lods
out
inc
push
out
enter
out
sub
jo
lock
sub
in
cmp
push
ja
pop
pushf
fnsave
inc
add
fs
movsl
ljmp
dec
push
adc
pop
aam
scas
cs
dec
pop
xor
add
jecxz
insb
outsb
sub
arpl
fidivl
jg
mov
fldt
jmp
stos
xchg
pop
dec
sub
and
mov
mov
arpl
cmp
mov
mov
punpcklwd
out
mov
xor
or
adc
stos
mov
lds
sub
or
jp
fldenv
enter
je
push
sub
push
jae
jp
sbb
mov
jmp
dec
push
add
mov
cmp
sbb
jle
out
cmp
mov
dec
lock
mov
sub
daa
fistl
test
addr16
jno
ds
daa
pop
cwtl
loop
test
imul
sahf
xchg
sbb
xor
js
xchg
inc
enter
lods
mov
mov
icebp
test
jb
js
enter
dec
addl
jecxz
and
mov
ds
and
fildl
xchg
dec
ds
daa
jl
adc
xor
push
popa
inc
enter
outsb
dec
fwait
cmpsl
inc
stc
sub
scas
pop
insb
mov
insb
jo
bound
int
mov
cli
push
stos
repnz
bound
adc
inc
push
xchg
fidivrl
movsl
cmp
lock
or
test
add
or
cmp
pop
test
sub
out
fbstp
or
mov
lcall
leave
push
ret
lods
out
and
push
mov
dec
jmp
mov
jne
addr16
rclb
adc
jb
sub
je
in
push
inc
lcall
add
in
lret
enter
xor
std
adc
mov
aad
in
add
in
jp
enter
xchg
pop
or
lret
or
adc
rcr
dec
andb
or
fistpll
pop
es
sub
xchg
pusha
dec
dec
inc
pop
jbe
test
dec
cmp
or
xor
js
cli
bound
xchg
cmp
decb
push
aas
push
jmp
out
mov
push
mov
popa
add
pop
imul
inc
xor
mov
sbb
data16
int
pop
mov
enter
dec
mov
in
sbb
mov
jmp
push
xor
cmp
scas
bound
out
in
sbb
pop
in
xorl
cmp
jnp
rcl
xchg
xlat
jge
jb
in
mov
push
inc
repnz
xor
lock
sub
xor
mov
fcomps
bound
js
lret
shufps
stos
inc
adc
cmp
or
push
cmp
mov
movsb
call
insl
popw
fadd
dec
xchg
or
push
mov
insb
push
test
in
pop
fprem1
lahf
sbb
lahf
test
arpl
push
shlb
cwtl
sbb
add
push
sub
test
adc
inc
in
in
add
hlt
add
add
cld
in
mov
cmp
sub
std
sub
push
cmp
sti
adc
adc
xor
and
arpl
sub
lds
loop
sbb
xchg
xor
mov
sbb
rolb
ljmp
xor
leave
push
sti
ljmp
ret
pop
mov
insl
fmuls
mov
sbb
call
lea
out
jns
iret
ja
sub
or
lock
push
and
sub
pop
fbld
repnz
mov
push
xchg
movsb
into
push
xchg
not
pop
jmp
test
popf
cmp
cli
dec
sub
mov
movsl
mov
mov
jnp
jl
mov
and
popa
xchg
jg
enter
in
adc
dec
mov
cld
ds
pop
sub
jb
cmc
mov
fadds
mov
jno
daa
jmp
push
mov
out
les
mov
or
adc
repz
insb
mov
mov
xchg
and
andl
mov
jle
mov
cs
and
jno
mov
push
mov
sti
mov
aam
cmp
in
pop
adc
sub
test
shlb
int3
scas
pusha
testb
outsb
scas
sub
and
pop
daa
aas
mov
aam
ljmp
pushf
aaa
xchg
mov
insb
xchg
movsl
idivl
stos
mov
add
mov
add
mov
mov
mov
sbb
fisubrs
cmp
pop
push
arpl
test
inc
nop
cwtl
outsl
sbb
sbb
cmp
in
inc
aaa
dec
scas
cmp
enter
xor
lcall
mov
cwtl
int
test
sub
push
sbb
push
jmp
daa
cmc
push
jmp
cmpb
popa
pusha
sbbl
push
loope
jp
loope
adc
inc
clc
sub
aam
cs
pop
addr16
aas
sbb
aaa
inc
outsl
sbb
sbb
stc
int3
aam
mov
xchg
sub
sub
and
les
cmpsl
or
pop
test
jb
pop
inc
fcmovnbe
daa
push
or
add
inc
adc
outsl
lea
push
stos
mov
fs
ja
fsubs
cld
inc
sub
gs
xchg
dec
mov
jge
lea
adc
lods
sub
mov
fnsave
daa
sub
lds
popl
incl
dec
xor
or
push
mov
in
test
es
pop
jl
jp
add
push
aam
lret
in
adc
lock
mov
cli
mov
daa
ret
xchg
fidivl
nop
lea
lcall
sbb
arpl
mov
sbb
fmull
lahf
sub
imul
cmpb
cmpsl
lahf
sar
push
int
mov
or
mov
pop
jg
es
xchg
mov
mov
fstl
jp
cmp
cli
fnstenv
push
mov
add
dec
out
xor
mov
in
popa
sbb
mov
scas
sbb
mov
mov
xchg
cli
aas
stos
or
sbb
in
adc
in
and
pop
inc
add
push
cmc
stos
jg
std
push
imull
icebp
cltd
mov
push
lods
aas
out
sbb
xchg
mov
scas
add
aas
ret
cmc
xor
inc
addr16
jno
xor
lea
bswap
xchg
rclb
sarb
ljmp
in
xlat
adc
pop
leave
pop
or
rcrl
pop
jp
sub
mov
testl
cli
mov
jg
or
jge
dec
ljmp
iret
rol
mov
mov
in
pop
lock
imul
mov
jmp
rcr
mov
stos
fadds
test
inc
pop
adc
sub
and
outsl
lahf
xor
js
xchg
mov
sub
hlt
enter
xlat
mov
add
out
or
sbb
ret
jmp
loope
cmp
sahf
cs
push
or
jo
test
xor
lahf
or
pusha
add
xchg
mov
pop
cmpsb
notb
ja
imull
pop
out
sub
movsl
inc
pop
adc
mov
dec
addr16
mov
add
add
fisttps
mov
adc
lret
dec
aas
xor
add
hlt
add
add
inc
leave
cmp
dec
lcall
jo
out
inc
shrl
mov
in
jle
mov
add
inc
sub
xor
outsb
pop
shl
mov
daa
add
ds
bound
shr
xchg
mov
sbb
mov
mov
dec
fildll
les
cmp
gs
jg
sub
cmc
js
out
push
leave
cmp
das
repz
sbb
and
mov
pop
cmp
cmp
sahf
testb
push
jo
movb
mov
jo
lods
idivb
lcall
aad
iret
or
mov
xchg
jmp
je
sbbl
xchg
dec
push
push
or
xchg
mov
push
and
sub
inc
xchg
test
sti
fwait
aam
loopne
fdivrl
mov
scas
xlat
mov
push
aam
mov
daa
aaa
inc
jb
rclb
out
sub
test
cmp
mov
or
or
mov
push
push
mov
add
xchg
jb
adc
jo
aas
xchg
mov
push
mov
aam
adc
fst
push
push
shr
ss
dec
push
push
adc
popa
pop
jno
test
es
mov
iret
in
cmpb
mov
push
cmp
fisubrl
xchg
outsl
rorl
mov
sbb
ss
or
in
jmp
mov
lock
adc
mov
mov
cld
mov
in
mov
mov
fsubs
bound
or
scas
ds
notl
adc
sbb
mov
cmp
xor
mov
mov
jns,pn
fsubl
bnd
mov
mov
mov
mov
lods
push
jg
cwtl
pop
in
cmp
jno
int3
gs
push
jmp
ds
std
cmp
cmc
aaa
data16
fs
cmp
filds
imull
jnp
das
push
ret
xor
dec
pop
push
push
iret
inc
jno
add
mov
jl
dec
xor
nop
inc
gs
pop
push
sbb
lock
hlt
lods
jns
and
add
xor
or
cli
fsubrs
xor
mov
adc
xchg
mov
es
shll
inc
sbb
aaa
xchg
aad
popa
add
add
arpl
lock
notrack
cmp
push
or
ljmp
dec
outsl
pop
pop
insl
fwait
mov
fldenv
jo
adc
xor
jmp
sbb
stc
out
cld
ds
fildl
sub
mov
jae
sahf
lret
jl
adc
mov
popa
into
pop
and
popa
mov
sbb
push
in
push
jg
dec
add
movzbl
mov
pop
imul
mov
or
and
sub
pcmpeqb
nop
test
out
dec
mov
mov
js
aaa
dec
std
jbe
mov
pop
jp
inc
out
in
xchg
fsubl
mov
es
decb
mov
clc
inc
jne
ss
xlat
movsb
pop
xchg
dec
dec
mov
out
out
js
sti
jmp
les
lahf
into
leave
stos
lods
push
repnz
mov
pop
mov
jle
aam
xor
mov
cmp
xor
mov
inc
out
sbb
mov
lods
jne
lods
sub
aam
xchg
or
fistl
or
rolb
pop
aam
inc
and
je
jae
lock
imul
stos
icebp
or
push
fistps
jle
cmp
stos
sbbb
fsubs
mov
or
and
cmp
fstp
lret
jmp
sbb
insb
mov
and
jns
jns
jne
dec
add
rcrl
sahf
xor
xchg
sub
fwait
adc
sbb
dec
roll
lods
mov
and
loop
mov
adc
sub
cmp
lods
call
jb
xor
mov
mov
sarl
fsubp
xor
jl
mov
jle
sbb
dec
shlb
pop
ret
cmp
cltd
nop
idiv
into
jecxz
add
push
xchg
lods
mov
mov
fisubs
push
xchg
mov
sbb
adc
aam
test
adc
fs
out
stos
mov
pop
mov
push
push
xchg
pop
push
cli
je
out
jg
mov
fidivrl
jns
mov
sti
jp
shll
and
add
add
es
jno
cmc
divl
mov
mov
hlt
add
add
aaa
insw
and
push
lods
shl
shlb
jl
adcb
outsb
push
call
mov
mov
in
hlt
mov
add
and
inc
xchg
loopne
mov
add
fstps
sbb
jae
ds
mov
ret
cmp
pop
adc
popa
dec
enter
pusha
xlat
inc
jnp
mov
push
shlb
fidivs
imul
je
inc
or
fists
je
rcrb
into
jne
jmp
popf
adc
sbb
inc
out
cs
jl
mov
or
jne
push
xchg
lahf
push
push
test
insl
leave
inc
je
fucomp
repz
jl
mov
psllw
xchg
cmp
loope
jmp
push
test
pop
clc
push
xchg
xchg
popa
push
mov
jecxz
popa
in
aad
shrl
jg
mov
stos
movsb
cmpl
adc
mov
mov
dec
inc
jle
mov
inc
aaa
popf
or
jmp
hlt
add
mov
notl
js
pop
add
addr16
lock
jbe
jae
out
fnstsw
adc
pop
les
call
jno
test
pop
xchg
push
ret
ficompl
adc
sbb
cld
fcmovb
flds
ds
cmp
jo
xor
inc
rorb
dec
fnstcw
jp
adc
push
jae
clc
inc
jb
inc
cmp
pusha
jo
dec
fcoms
pop
inc
dec
enter
out
pop
xchg
sub
push
fdivrs
pop
fidivs
lret
push
mov
test
mov
mov
sbb
sub
ljmp
sub
test
out
insb
lds
jmp
mov
sub
inc
mov
sbb
sbb
xlat
sub
jo
xchg
mov
push
or
repnz
enter
mov
cmp
andb
jle
mov
faddp
aad
xchg
std
cmpsl
adc
outsl
add
pop
int3
sub
out
sbb
adc
xor
xchg
and
jbe
xchg
ja
cmp
push
inc
ss
dec
movsb
sbb
sub
or
test
sbb
inc
lcall
arpl
dec
dec
in
xor
stos
and
cltd
leave
cs
mov
jo
rcrb
jbe
or
hlt
out
sub
outsb
lahf
scas
insl
adc
insl
fwait
xchg
fistps
sbb
les
cmp
int3
xchg
test
cmp
imul
and
or
add
cmp
lahf
sbb
enter
push
pop
mov
cli
cmp
cs
dec
mov
dec
xor
mov
pop
xchg
outsb
popa
pop
xchg
icebp
xor
rcll
aad
and
inc
popa
mov
lods
pop
inc
inc
aad
fimuls
repz
or
mov
in
sbb
aad
add
jl
aas
scas
scas
ret
add
pop
xchg
fstl
insb
mov
pop
adc
mov
outsb
push
add
mov
push
jae
push
inc
je
call
ret
out
and
push
rorb
in
test
pop
stos
rcrb
aaa
not
loopne
adc
pop
or
pop
ret
xor
ds
dec
cmp
fnstcw
in
jmp
jo
add
mov
sub
pop
inc
jns
push
sub
and
xor
out
mov
lcall
add
outsl
inc
test
daa
push
movsb
jp
clc
xchg
mov
cmp
lahf
lcall
add
roll
mov
outsl
or
mov
jge
cmc
arpl
xchg
in
xchg
in
and
and
pop
lcall
or
push
cmp
subb
jno
fwait
ljmp
mov
scas
test
cmp
xchg
pop
rclb
jb
fildl
adc
fldln2
stc
scas
inc
pop
dec
int
repz
ds
inc
xlat
pop
lcall
sub
lea
mov
sbb
mov
dec
adc
jne
in
adc
addr16
clc
xchg
dec
ret
sarl
jl
jge
shlb
adc
mov
push
hlt
or
xor
inc
ret
and
xorl
stc
stos
jne
mov
push
or
sbb
add
dec
fmuls
movsl
add
and
test
xchg
pop
pop
aam
mov
and
insl
xchg
adc
rolb
cmpsl
sti
mov
add
add
ret
inc
fisttps
lahf
int
push
mulps
mov
sbb
add
hlt
add
add
shlb
movsb
cld
xlat
cmp
and
shlb
aam
pushf
adc
jo
push
mov
xlat
cmpl
mov
mov
stos
pop
ror
sbb
inc
xchg
sbb
fwait
es
jp
add
dec
in
cltd
and
pusha
mov
std
ljmp
test
jg
jno
and
ret
cmp
fidivrs
idivl
xlat
shr
ljmp
fsubrs
mov
xor
inc
dec
stos
das
fimull
sbb
xchg
sbb
ss
inc
neg
outsb
adc
cmp
xor
ss
aam
jle
xchg
xchg
cmc
ret
pop
aam
pop
inc
mov
inc
mov
fisttpll
aam
inc
jne
jg
insl
mov
sub
mov
ret
pop
push
out
ss
in
pushf
or
pop
xlat
popf
push
mov
fidivrs
mov
das
lods
cmpsb
xor
arpl
lcall
mov
mov
xor
out
out
xchg
add
cmp
addl
std
pushf
idiv
lahf
jno
sbb
lahf
pop
outsb
mov
mov
sbb
iret
lret
rorl
push
cmpsl
push
mov
shll
mov
push
loopne
adc
mov
lods
xchg
addl
push
sub
lcall
cmp
mov
fdivr
fs
inc
test
dec
mov
arpl
sub
loop
imul
addr16
rolb
insl
mov
test
push
pop
dec
bound
fbld
lret
sbb
xchg
sub
xchg
mov
mov
adc
sub
repz
ljmp
and
scas
sarl
aad
xchg
test
cmp
sbb
lds
cltd
jle
adc
inc
mov
out
imul
and
jle
cli
mov
and
les
sbb
out
int3
or
sbb
dec
mov
loop
fnstenv
dec
jl
sahf
cmpb
add
sbb
cmpsb
jnp
setae
in
mov
jecxz
sub
lock
xchg
jbe
push
arpl
push
test
push
add
test
cmp
add
mov
nop
push
xor
lcall
push
mov
dec
xchg
mov
inc
xor
add
dec
cld
push
xchg
and
push
lea
loop
jp
inc
int
push
mov
mov
mov
loopne
js
adc
cld
adc
andl
lea
inc
andb
enter
in
inc
call
xorl
push
mov
or
dec
fidivl
inc
push
inc
or
fs
aad
jecxz
mov
idivb
stc
lods
enter
push
mov
repz
jmp
adc
jbe
mov
dec
or
outsb
jo
sub
xor
xchg
mov
in
lcall
stc
add
test
rolb
sbb
xor
sbb
adc
cwtl
stos
and
xchg
insl
lock
jb
jl
outsl
cmp
sahf
outsl
push
shlb
aad
inc
adc
arpl
jae
je
and
ret
in
fildll
js
out
test
push
subb
cmpl
cmp
inc
cld
fxch
ret
xor
sti
jne
or
xor
xor
and
sar
cmp
add
xchg
push
mov
push
shrl
add
jne
rcll
mov
mulb
xchg
arpl
inc
pop
hlt
sahf
mov
stos
adc
clc
pop
jbe
mov
mov
in
stc
out
pmuludq
scas
jmp
shl
lret
stos
cmp
leave
pop
mov
mov
and
add
adc
mov
dec
lock
loopne
add
sbb
fs
and
xor
mov
test
or
jmp
jp
loop
jg
mov
pop
mov
repnz
aas
int
orl
lahf
icebp
add
repz
inc
jns
or
es
pop
loope
pop
gs
xchg
popa
pop
pop
fcomp
xchg
push
out
rcrl
cwtl
mov
adc
loopne
ret
incl
clc
sti
dec
aas
loop
jmp
or
mov
test
mov
add
add
call
aas
popa
adc
sub
sbb
hlt
add
add
or
sbb
cld
sbb
sub
shrb
mov
xor
std
mov
inc
cld
jae
xor
push
hlt
loop
jo
mov
aas
adc
jl
inc
fistl
sti
cmp
fwait
js
out
jl
mov
push
out
pushf
xor
push
sbb
cmp
das
pop
jns
mov
jecxz
outsb
ret
mov
adc
pop
sbb
jbe
sbb
lock
fsubr
sarb
or
stos
cwtl
jmp
xchg
jb
inc
mov
repnz
aas
cmp
lret
dec
xor
sar
fidivrs
dec
retw
cmpsb
sbb
inc
arpl
jns
mov
adc
lret
jo
mov
cmp
mov
cltd
fs
fistps
ja
xor
in
inc
in
mov
push
mov
push
lcall
cld
xchg
imul
dec
das
xchg
test
adc
and
pop
jbe
insl
mov
xor
sub
flds
mov
dec
dec
loope
add
mov
mulps
add
mov
dec
lret
jnp
ret
jp
aam
xchg
pause
loope
aam
aaa
adc
and
lahf
stc
in
ret
sbbl
movsl
rorb
xchg
mov
cmpsl
aas
popa
pop
sti
outsb
out
dec
iret
and
imul
test
popa
pop
psubd
sub
sarl
sbb
mulb
add
and
dec
fnstsw
scas
push
int3
dec
add
cmp
inc
jnp
jnp
cli
xchg
out
rorl
out
pushf
mov
xchg
mov
mov
lods
int3
cmpsl
lock
out
lock
sbb
mov
loope
mov
dec
iret
nop
pop
mov
enter
mov
shl
xchg
rol
shlb
mov
cwtl
loopne
in
or
or
in
sbb
cld
sbb
xchg
cmc
add
fstps
cli
aam
inc
cld
lods
pop
enter
leave
ficomps
rorb
insl
mov
xorl
xchg
push
movsl
test
test
sub
push
mov
fisubl
inc
pushl
mov
call
mov
shll
sbb
push
mov
das
repnz
jno
xchg
lcall
outsl
and
add
pop
fisubs
adc
iret
mov
pusha
mov
jge
into
jns
mov
and
sbb
mov
mull
ret
imull
movsl
cmpsl
pushf
pop
sub
insl
dec
inc
dec
inc
in
cmpl
pop
mov
pop
loopne
pop
pop
iret
popa
incl
in
jae
fmuls
adcb
xchg
rcrb
popf
insl
cmc
dec
mov
dec
adc
pop
icebp
push
leave
mov
adc
andb
mov
nop
sub
xchg
xchg
ret
inc
aam
xchg
frndint
aad
hlt
pushl
xchg
add
pop
xor
adc
push
dec
push
inc
pop
add
enter
in
lea
xor
out
dec
popf
adc
mov
les
into
cmc
insl
mov
adc
add
mov
and
sub
cltd
mov
jo
movsb
shl
jecxz
add
or
mov
dec
sub
daa
sbb
xor
jns
mov
in
mov
sbb
pop
scas
xchg
push
mov
aad
out
lds
push
cwtl
xlat
lcall
ljmp
and
aaa
add
js
add
lock
cmp
cli
es
add
inc
test
xor
mov
popf
lcall
mov
fs
data16
mul
into
aaa
jno
loopne
and
sub
mov
or
or
push
mov
pop
jno
jno
mov
in
or
cmp
jnp
or
ljmp
dec
in
or
jle
add
push
jbe
add
mov
mov
fnstenv
jmp
pop
in
jp
ds
cwtl
imul
enter
mov
pop
sub
cmpsb
sbb
mov
jne
out
pop
cltd
push
xchg
adc
pop
test
push
push
imul
add
pop
ja
in
call
adc
pop
ljmp
add
repz
scas
xor
push
sbb
add
sahf
insl
not
neg
mov
int
xor
push
add
hlt
add
add
fcompl
xchg
pop
xor
movsl
dec
out
push
ret
sbb
test
outsb
or
adc
in
push
sarb
or
jg
aaa
scas
cmp
out
sbbl
loop
dec
sub
inc
mov
outsl
and
or
push
dec
repz
add
dec
xor
pop
xor
ret
mov
lods
xchg
outsb
fldl
sub
mov
es
loope
inc
movsb
shlb
mov
adcl
ss
pop
sub
pop
mul
xchg
cli
mov
jl
cmp
scas
scas
test
sub
ret
mov
aaa
push
out
shrl
movsb
add
pushl
jne
dec
aam
adc
ret
pop
std
xlat
ss
test
cmp
popa
xchg
jnp
mov
and
pusha
and
imul
divb
pop
ja
push
mov
out
or
popf
cmp
adc
cmpl
sbb
into
sbb
aad
loopne
mov
test
mov
fwait
adc
movsb
fiaddl
xchg
or
adc
movsl
push
incl
or
sub
adc
add
pop
fidivs
stc
mov
gs
in
pop
filds
gs
cmp
mov
and
jmp
and
jecxz
adc
shlb
dec
aaa
imul
xor
shrb
ret
imul
out
adc
dec
mov
xor
mov
mov
mov
imul
nop
incl
int3
lds
lods
std
push
mov
fnstenv
and
test
es
cmpsl
rorl
rcrl
mov
or
mov
sbb
cmp
dec
xchg
ljmp
and
add
fldenv
sbb
xchg
jne
mov
mov
leave
jae
pop
push
cli
mov
push
push
mov
int3
sub
or
jno
cmc
rcll
andl
mov
repz
push
sub
push
xchg
mov
inc
cmp
mov
fyl2x
and
pop
mov
jns
pusha
xchg
lret
fs
lahf
mov
les
push
mov
adc
daa
adc
jbe
cmp
loop
scas
aaa
stc
xchg
divb
int3
pop
popf
jge
je
jge
and
lret
inc
mov
addb
cmpsb
sub
sub
pushf
fisttpll
test
addr16
xchg
lahf
aaa
pushf
jge
cmp
mov
lea
jmp
std
outsb
insb
push
hlt
icebp
call
clc
adc
adc
xlat
lea
jg
fiadds
test
test
fcmovnb
cmp
shrl
insb
test
pop
rcrb
inc
jno
dec
jmp
and
pusha
sahf
ljmp
icebp
ret
add
and
cmc
nop
lea
cmpsb
inc
dec
lock
clc
sbb
stos
push
xchg
cs
pop
pshufw
nop
cmpsl
dec
pop
push
jo
enter
pusha
inc
loopne
cmp
out
pop
iret
and
shrb
call
mov
flds
sahf
mov
jecxz
mov
call
ds
lods
xchg
js
aad
add
pop
xor
nop
rcl
out
fnsave
cltd
mov
in
cmp
movb
pop
loope
add
out
or
repz
aas
jmp
adc
jle
push
xor
push
jne
mov
sti
adc
push
ja
dec
les
cs
cmp
pop
xchg
leave
sub
hlt
aad
sbb
mov
push
out
xchg
cltd
mov
lret
jp
iret
mov
mov
pop
xor
insb
mov
dec
mov
mov
jl
pop
mov
ret
sub
fildl
jo
xor
and
push
arpl
adc
movsb
cmp
in
mov
xchg
test
in
cmp
das
pushf
add
ret
test
out
dec
out
fisubrl
loop
jno
xor
cmp
ja
or
sbb
jle
out
lods
mov
test
push
sbb
std
mov
sub
cmpsl
mov
mov
imulb
out
mov
sub
or
xchg
cmp
cld
jne
pop
sarl
insb
jge
push
rolb
pop
or
mov
pop
inc
ds
adcl
mov
test
lret
int
andb
repz
add
mov
push
out
std
mov
push
jg
mov
cmc
or
add
add
add
or
xor
or
jmp
sub
cmp
or
cmp
mov
pop
stos
pushf
adc
sbb
pop
stc
jbe
stos
mov
out
and
cld
dec
inc
std
movsb
imul
and
add
stos
lock
or
pop
mov
out
sarb
addl
loopne
fstpt
push
mov
mov
sti
dec
mov
outsb
mov
lret
movsl
sub
cmp
mov
xchg
dec
scas
loope
cltd
scas
data16
xchg
outsb
mov
insb
fwait
push
das
xlat
mov
bound
xchg
cmp
mov
test
cwtl
call
jns
fs
mov
mov
xor
or
and
xorl
shrb
jp
ljmp
stos
ja
enter
scas
sub
loope
stos
fldt
icebp
mov
jno
ljmp
cmpsl
fstp
ret
icebp
repnz
cmp
mov
pop
xor
mov
mov
je
gs
adc
or
inc
jo
xor
cmp
mov
jl
adc
jge
cwtl
xchg
or
mov
jne
and
scas
xor
sbb
xor
fnstsw
test
iret
dec
daa
sbb
lahf
test
sbb
adc
sub
sub
lret
outsb
push
popf
mov
cltd
pop
inc
je
pop
xor
cmp
xchg
mov
ds
jmp
fiaddl
pusha
push
and
cmp
pop
xchg
mov
jg
ljmp
das
inc
mov
mov
stos
add
mov
incb
sbb
and
cmc
movsl
cmp
insl
inc
stos
push
bswap
fnstsw
pop
ret
ljmp
lods
and
repnz
xchg
mov
mov
sub
ror
je
fwait
add
std
fsubrl
add
or
rcrb
pop
fisubs
inc
stos
cmp
mov
adc
push
addr16
scas
lret
or
push
repnz
push
imul
pop
lcall
mov
mov
dec
js
lods
je
jnp
pop
test
addr16
cmp
dec
mov
ret
inc
pop
mov
outsb
dec
inc
sarb
mov
and
mov
inc
sub
pop
jecxz
pop
cltd
test
cmp
jns
cmp
sub
and
and
xchg
xor
test
jg
in
sahf
sub
ja
xchg
test
faddl
or
xor
jbe
movlps
outsb
sub
or
push
pop
jae
sar
hlt
daa
mov
lock
and
test
xchg
ds
dec
cmpsl
mov
sub
cltd
test
sti
subl
sahf
mov
mov
clc
les
add
mov
cmpsl
mov
inc
bnd
add
push
and
dec
out
aaa
fisttps
dec
jle
sub
pop
test
pop
popf
adc
fwait
stc
test
mov
cwtl
outsl
sti
fcoms
lahf
jb
mov
xchg
sbb
lock
mov
jmp
inc
es
or
push
inc
fisttps
roll
jnp
xchg
sub
popa
test
cmp
xchg
inc
lea
andl
xor
cmp
mov
pop
xor
lahf
fwait
pop
cmp
xor
cmp
xor
mov
fdivr
cmp
cmc
popf
pop
push
out
aam
addr16
out
xchg
outsl
loop
mov
lea
mov
inc
or
das
fidivrs
push
fstpt
mov
xchg
xor
cmp
divl
ret
out
pop
rcll
add
jnp
xchg
cmp
jg
dec
push
stos
pop
dec
pop
add
lcall
mov
in
rorl
adc
cmp
pop
rcl
or
ds
mov
dec
mov
xchg
mov
adc
dec
popf
sahf
adcl
out
movsl
jae
test
mov
hlt
lods
fwait
stc
hlt
fcmovnbe
adc
sbbl
xorb
in
stc
mov
sbb
les
pop
jno
out
ds
jl
nop
or
iret
xor
mov
mov
lahf
dec
pop
scas
and
and
outsb
dec
and
popf
mov
push
sti
cmpsl
push
aad
adc
inc
subl
mov
dec
and
lahf
xchg
fsub
iret
fld1
sbb
into
jle
push
cmp
pop
das
aad
iret
lds
insb
adc
inc
xor
dec
jecxz
das
aad
pushf
sub
pop
stos
push
and
add
add
inc
push
lret
in
out
dec
add
int3
daa
jmp
add
add
roll
push
add
cmpsl
xchg
push
push
out
fbld
gs
push
xchg
dec
faddl
test
cmp
leave
sbb
mov
mov
adc
test
xor
sbb
add
jl
mov
fcomps
cmp
sub
mov
dec
test
mov
lods
xchg
adc
jg
cmpb
jae
sub
shlb
jne
stc
fyl2xp1
stos
jo
sub
js
cmp
dec
add
stc
xchg
xor
jbe
sahf
lds
movsb
inc
jp
xor
sbb
bnd
sti
decl
loope
nop
mov
or
mov
push
mov
leave
or
mov
xorb
inc
dec
or
aas
icebp
xchg
and
and
push
les
lcall
pop
in
mov
sahf
xor
movsb
stos
aas
inc
lods
xchg
fldenv
jbe
push
mov
lcall
fwait
test
cmpsl
into
cmpsl
sbb
fdivrl
and
jns
loop
ds
xor
mov
jl
imul
mov
jl
push
lods
arpl
lahf
lods
ret
xchg
sub
ret
xor
mov
pushf
orl
pop
sub
js
or
push
jae
add
ficompl
in
jbe
add
xor
out
out
xor
test
rcrl
in
repnz
lret
push
ja
pop
push
pop
fsubrl
ds
xor
arpl
pop
mov
mov
loope
mov
pop
mov
out
imul
pop
adc
aam
xchg
jb
ret
ja
push
xor
sub
outsl
arpl
popf
loop
sbb
insb
push
pop
add
mov
add
jmp
adcl
ja
adc
push
or
xchg
data16
xchg
test
je
add
cmpsb
jge
xchg
sbb
xor
lea
xor
stos
adc
push
dec
mov
sbb
mov
xchg
and
loop
and
mov
lods
mov
push
hlt
jbe
jnp
sub
out
testl
sbb
xor
xchg
or
aam
shr
inc
aaa
clc
fiaddl
rcrb
cmp
adc
mov
shll
lahf
frstor
mov
shll
test
mov
popa
fstp
loop
jno
mov
sub
pop
enter
xchg
outsl
stc
nop
loop
mov
testl
rcl
fisubl
inc
or
mov
inc
xchg
imul
mulb
sbb
lret
std
sbb
ret
leave
inc
aam
pusha
rcl
adc
sbb
xlat
movsl
xor
inc
jno
jnp
sbb
repz
or
xor
pop
push
inc
inc
push
xor
lcall
lods
mov
imul
jb
sarb
mov
lret
lcall
out
outsb
fsub
mov
pop
out
sti
repnz
jnp
pop
int
mov
mov
mov
sbb
or
sub
jp
xchg
stc
fimuls
jo
xcrypt-cbc
cmpsl
push
adc
cs
pop
fcmovnbe
xor
rcrl
adc
cmp
inc
icebp
adc
mul
test
lahf
movsl
insl
arpl
push
push
dec
sbb
arpl
push
dec
shlb
imul
aad
pop
jne
loop
in
jmp
add
inc
imul
mov
arpl
leave
lret
jbe
mov
mov
into
mov
inc
int3
frstor
mov
sub
mov
pop
aas
mov
jle
fisubrl
xor
loopne
movsb
adcl
rcr
jbe
and
and
sub
push
dec
jge
jecxz
push
jnp
sub
adc
fistpll
rorl
ja
insb
mov
negb
notl
push
subb
ds
mov
cmc
pop
lods
and
mov
push
cwtl
dec
adc
pop
xchg
arpl
les
loope
test
jecxz
push
mov
out
inc
xor
xor
jbe
in
fs
mov
jle
pop
mov
pop
cmp
outsb
insl
xchg
imul
lods
out
stos
or
lahf
mov
mov
nop
sbb
push
cmp
int
adc
subb
ret
dec
sub
mov
shr
sbb
pop
push
nop
cmp
adc
je
std
mov
rol
and
jnp
adc
add
add
add
iret
cmp
and
mov
mov
in
mov
push
xchg
pop
int3
and
mov
jg
mov
test
push
adc
and
insl
rcrl
dec
jecxz
push
dec
fwait
xchg
call
sbb
jecxz
insl
xor
fmuls
mov
xchg
jb
inc
sarl
lods
mov
nop
pop
jb
adcb
or
mov
bnd
sbb
mov
jnp
cs
mov
aaa
push
scas
sub
xor
push
xchg
insl
lret
or
jno
xor
dec
adc
push
arpl
call
mov
push
mov
int
scas
mov
sbb
mov
adcb
cltd
sets
mov
mov
cli
nop
and
bnd
mov
xchg
fs
push
into
outsb
pop
daa
in
test
frstor
aaa
cmp
or
out
push
inc
popf
enter
jecxz
inc
or
cwtl
mov
lods
iret
pop
shlb
mov
xchg
cmp
xor
inc
xorb
out
test
addr16
pop
adc
mov
popa
lods
mov
fisttpl
adc
sub
pushf
pop
ss
cld
mov
xchg
push
adc
repnz
insb
add
pop
sbb
ja
icebp
jmp
or
push
pop
out
sub
inc
jbe
movsb
push
and
xorl
inc
xchg
cmp
fists
je
out
faddl
xchg
js
cs
mov
adc
mov
sub
in
push
mov
fwait
std
dec
call
sbb
rclb
or
lock
enter
rcrb
sti
stos
sbb
push
push
dec
pusha
mov
or
and
mov
imul
ret
leave
in
jle
cmp
inc
in
add
lock
repz
sub
js
sub
dec
mov
fwait
scas
int
test
mov
fcmove
iret
out
cs
dec
add
fiadds
icebp
mov
iret
and
add
gs
jl
scas
jle,pn
jle
push
test
int
add
arpl
into
mov
popa
cmpsb
adc
and
lock
pop
pushl
ljmp
nop
adc
lcall
sti
pusha
adc
fsubl
and
inc
hlt
std
shlb
push
cmp
push
adc
je
lock
dec
notb
mov
xchg
adc
sub
xor
outsb
pop
mov
xor
fiadds
addl
scas
aam
aas
cmpsb
inc
pop
cli
cs
lret
pushf
inc
jle
sbb
jp
fwait
adc
lcall
arpl
sub
in
cmp
jns
ret
jp
xchg
push
or
push
aaa
and
cmpsb
sub
lcall
pop
movsl
cld
push
dec
push
mov
jmp
in
test
shrb
or
enter
jmp
push
arpl
je
push
xor
sub
daa
shlb
sub
and
sbb
es
loop
stos
shl
sbb
jo
movsl
orl
xor
es
dec
aad
mov
in
add
push
sbb
icebp
mov
lds
pop
dec
sahf
mov
out
movsl
test
std
cmp
test
testl
push
mov
lock
cmp
jne
sub
insb
imul
outsb
lret
jo
pop
sub
push
mov
pop
xchg
fs
in
mov
xlat
jl
cmc
rolb
les
pop
cmp
pop
aas
mov
mov
lret
lcall
mov
mov
scas
xor
sub
push
jae
cmp
rolb
rcll
dec
imul
popa
or
stc
mov
pop
cmc
or
out
or
mov
data16
addb
add
jo
test
add
xor
cld
int3
andb
mov
and
or
add
pop
cmp
aad
ret
adc
lock
fsubs
lcall
ss
xsaveopt
loop
jmp
in
sbb
and
test
and
and
imul
and
add
or
push
nop
and
sarb
lds
sti
ret
push
scas
repnz
sar
clc
sarb
adc
js
subb
mov
xchg
pop
sbb
scas
add
add
mov
fs
lods
in
or
mov
rcrl
add
hlt
add
add
pop
or
pop
sub
sub
nop
push
aaa
or
xor
cmp
or
icebp
mov
xor
test
mov
fs
add
mov
xor
pop
push
lcall
in
bnd
loope
dec
cmc
xor
xchg
cmp
movb
dec
push
xchg
mov
movsb
out
enter
test
push
adc
nop
idivl
dec
push
sahf
fdivrs
mov
or
push
lcall
mov
sti
scas
test
addr16
nop
movsb
xor
pop
jmp
repz
mov
outsb
jecxz
mov
out
rorb
push
inc
push
imul
sbb
sbb
push
mov
dec
aaa
add
and
mov
cmc
scas
xchg
xchg
addb
sbb
mov
inc
aad
dec
leave
leave
cmc
int
imul
notb
pop
or
fnstcw
lret
inc
clc
pushf
add
mov
inc
in
stc
mov
pop
lahf
imul
xchg
xchg
dec
fs
add
adc
addr16
jl
and
push
push
xchg
mov
cld
cltd
cmp
jo
jl
ljmp
outsl
and
lcall
sbb
dec
pop
or
mov
mov
jbe
inc
add
pop
dec
loopne
aas
gs
arpl
push
dec
jns
pop
add
dec
mov
mov
mov
mov
mov
cmp
xchg
jae
xchg
popf
int3
rol
bound
xor
mov
test
add
xchg
push
inc
in
xlat
push
dec
rcrb
xor
mov
les
jbe
push
push
inc
mov
push
lcall
nop
sbb
dec
xchg
scas
pusha
lret
push
cltd
andb
inc
test
insb
adc
cmpsb
jle
mov
fidivrl
mov
push
xchg
cltd
in
sub
aad
mov
rclb
cmp
dec
ret
pushf
mov
mov
in
sbb
fstl
xor
xor
ret
outsl
aas
addl
jecxz
and
in
sub
cmpsb
lea
mov
fidivrl
pop
push
inc
scas
jno
int3
test
jb
add
aaa
sbb
push
je
imul
js
cltd
rorl
je
das
les
pop
jg
loopne
xlat
addb
pop
rcl
pushf
xor
xor
pop
scas
ficoml
xor
sbb
hlt
orb
popf
enter
mov
inc
movsl
cmpsb
pop
fiadds
mov
test
xchg
inc
loop
sti
xchg
mov
xor
movsl
mov
jecxz
inc
aam
mov
pop
mov
add
mov
pop
push
test
or
mov
out
popf
cmp
push
fnstsw
xor
sub
in
dec
push
jge
mov
inc
aam
lahf
outsl
movsb
js
add
imul
adc
repnz
lcall
and
adc
out
sub
adc
xlat
fsubl
xor
rcll
mov
das
or
xor
fsubrp
adc
ret
into
rorl
xchg
lods
mov
dec
xchg
and
push
pop
adc
sahf
mov
mov
mov
pop
xchg
rcl
adc
pop
cmc
int
clc
ret
jg
divl
fdiv
cmp
mov
lcall
divl
scas
xor
rorl
pushl
cli
push
and
xchg
rclb
imull
fidivs
xchg
test
or
scas
mov
sbb
imul
push
mulb
insb
ret
pop
add
adc
cmp
outsl
mov
popf
mov
mov
aaa
push
lret
mov
jge
andl
test
or
clc
idiv
jg
mov
aaa
add
ficompl
pop
sar
sbb
loopne
sub
cmp
ret
push
pop
sbb
pushf
dec
cmp
cwtl
jg
clc
inc
xlat
mov
addr16
cmp
pop
sbb
jge
pop
cmp
dec
push
iret
imul
shlb
daa
jne
loop
and
cmpsl
add
or
adc
movsl
mov
insb
ficompl
mov
cld
dec
mov
sahf
mov
outsb
mov
or
cs
mov
icebp
pop
cmp
xchg
xchg
push
ljmp
int3
lea
imul
clc
xchg
in
mov
push
xchg
stos
cld
mov
adc
outsl
popf
and
ljmp
xchg
inc
out
cmp
pop
adc
push
mov
sbb
add
lods
test
gs
push
add
hlt
add
add
popf
dec
scas
mov
push
dec
cmp
jmp
mov
or
cwtl
cmp
jo
negb
cmp
mov
push
or
mov
clc
bound
lcall
punpcklwd
jbe
jnp
push
lea
addr16
xchg
and
cmp
mov
mov
das
or
and
shrd
and
fisttpl
lods
mov
mov
jo
dec
lds
nop
cltd
pop
out
aad
das
jl
add
jo
ja
mov
ret
jnp
dec
loop
fs
ja
roll
stos
push
fsubs
cmp
rolb
in
icebp
lcall
jg
mov
repz
add
repnz
sbb
and
ja
push
pop
lock
or
xchg
or
in
sti
addr16
mov
notl
adc
arpl
jp
push
sbb
pop
pop
jmp
shl
sbb
adcl
xor
movsl
sub
push
xchg
adc
inc
mov
adc
adc
lods
jae
push
sbb
pop
push
cmpsl
fs
xchg
pop
lods
lea
inc
mov
std
xor
loop
insl
or
jo
je
or
pop
testl
push
icebp
ss
and
aaa
push
jecxz
stc
cmpsb
popf
inc
jmp
fildl
aad
add
cwtl
mov
mov
push
test
in
mov
xchg
hlt
pop
push
test
pop
xor
push
test
mov
cmc
sti
inc
sub
mov
loopne
loopne
scas
pop
mov
sbb
jne
push
lcallw
xor
or
or
mov
xchg
shll
adc
jns
pop
mov
call
mov
sub
dec
cmp
sub
inc
mov
push
lds
xor
daa
in
add
inc
xchg
aad
or
test
hlt
add
in
xchg
jmp
cltd
xor
sbb
pop
mov
lods
and
mov
jns
pop
mov
jecxz
imul
ret
or
xor
xchg
cmpsb
add
sbb
push
icebp
mov
jle
pop
imul
roll
jl
adc
and
lock
jno
cld
repz
lret
xchg
inc
lahf
push
rcl
dec
mov
mov
or
xor
cli
ds
add
dec
mov
lret
and
mov
addl
dec
lock
mov
dec
popf
rcrb
repnz
mov
jge
mov
addr16
add
addl
jno
jp
cmp
sub
jnp
inc
pop
mov
adc
aas
cmpsl
arpl
inc
scas
pop
lods
fisttps
add
sahf
mov
jno
xchg
outsl
add
repz
dec
xor
jmp
push
sub
cmp
lock
push
test
jmp
mov
xor
push
add
pop
testl
xchg
sbb
into
test
lds
push
xchg
pop
mov
arpl
in
stc
mov
jae
sub
and
mov
adc
subl
mov
cmpsl
jae
mov
mov
divb
icebp
sub
mov
cli
sbb
pushf
mov
adc
icebp
lds
push
call
or
jle
das
push
cmp
jno
xchg
mov
adc
fdivrl
push
int3
ja
roll
mov
jp
movsb
aam
inc
lret
sbb
sub
movb
dec
clts
pop
gs
xchg
push
je
iret
xchg
nop
aad
mov
adc
sub
in
lret
sub
popf
movsl
aad
andl
inc
aad
scas
ljmp
insb
imul
fs
xor
add
push
cmp
sbb
lcall
dec
fstpl
and
frndint
mov
test
cmp
loopne
adc
inc
fwait
data16
mov
mov
jo
adc
sub
cmp
mov
sti
push
arpl
mov
inc
lock
xor
aaa
daa
xchg
add
sbb
out
mov
imul
or
cmpl
inc
cs
adc
cwtl
cmp
mov
shrb
subl
es
xchg
mov
cmpsl
hlt
jle
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
sub
and
add
add
add
stos
andb
xchg
push
dec
push
xchg
imul
icebp
fldt
adc
adc
pop
push
jne
es
lret
into
lcall
adc
jle
mov
add
ja
popa
push
js
cmp
mov
lret
push
mov
mov
mov
inc
or
and
mov
dec
jmp
xchg
mov
sarb
nop
ds
adc
cmp
loopne
aas
sub
push
shr
dec
mov
xchg
ljmp
addr16
cltd
jae
loope
insl
data16
js
stc
and
pop
insl
mov
adc
gs
leave
cmp
pop
or
xor
hlt
dec
pop
jne
pop
stos
enter
xor
mov
or
loopne
and
stos
jno
jp
out
imulb
push
mov
cli
jb
enter
andb
mov
mov
jmp
jg
pop
sbb
dec
cmpsl
cltd
xchg
pop
out
ds
in
in
rcll
inc
idivl
enter
ficoms
cmc
lods
roll
hlt
std
jb
insb
insb
fadds
jg
inc
aas
loopne
adc
mov
adc
ljmp
pop
add
popa
ds
data16
xor
sub
icebp
movsl
pushf
iret
mov
fbld
dec
out
imul
mov
cpuid
adc
xchg
push
stos
push
mov
sub
repnz
sahf
jmp
xor
rcll
ss
xchg
mov
dec
push
add
mov
in
xor
mov
in
mov
ret
adc
jecxz
mov
fdivl
dec
or
push
push
pop
movsb
mov
or
test
scas
mov
xor
jmp
stc
subl
jnp
push
ret
or
add
iret
out
mov
cmp
xor
jb
xor
mov
inc
jo
mov
js
push
push
pusha
jnp
test
outsl
outsb
and
jae
cmp
push
and
imul
or
dec
xor
sbb
lcall
mov
mov
icebp
je
push
ds
stc
arpl
std
int3
aad
fwait
jmp
imul
mov
sbb
mov
movsl
mov
jl
and
ret
or
add
mov
shr
je
xor
or
mov
cmc
fldenv
scas
ds
or
cmp
sbb
test
xchg
xor
es
inc
pop
out
addb
jne
lcall
inc
xor
adc
mov
sahf
fsubs
insb
ljmp
inc
and
je
sti
jle
ss
push
push
mov
jp
sbb
loop
mov
sub
push
xor
sbb
in
ss
mov
jge
mov
pusha
packssdw
xor
popf
ljmp
dec
out
lods
fimull
dec
pop
call
jne
mov
push
dec
xlat
jmp
pop
adc
mov
rol
adc
sbb
inc
sub
mov
adc
or
mov
loopne
icebp
pop
dec
push
and
das
jp
mov
push
into
cmp
xchg
xchg
enter
lods
imul
mov
xor
push
test
mov
sbb
pusha
lret
aaa
loop
gs
mov
sub
cld
xchg
fwait
dec
inc
jne
andl
cmp
lods
mov
adcl
mull
mov
pop
sub
pop
pop
lret
or
jne
mov
outsb
rorb
inc
cmpl
loopne
aam
cmp
int
mov
stc
jo
inc
stos
jp
int
out
notb
push
adc
leave
into
std
sbb
cmc
rcrl
call
and
movsl
inc
mov
sub
imulb
and
shll
out
mov
cmp
inc
pop
cltd
mov
dec
xchg
jle
mov
jmp
push
aaa
popa
stc
or
push
pop
dec
add
sub
stc
ljmp
push
add
mov
mov
gs
mov
fcompl
out
push
cmpsl
stos
adc
cmpsl
push
cmp
push
inc
push
inc
cmpsl
fcomps
cmp
mov
pop
popa
inc
cmp
jns
int3
rorb
negl
movsb
dec
push
dec
add
ret
pusha
call
daa
push
cmp
fs
cmp
add
add
dec
dec
ss
std
iret
cmp
cld
cmc
ds
sub
add
add
add
repnz
std
out
movsb
mov
inc
sahf
fmul
lcall
fstpl
mov
xor
pushf
imul
or
cld
shl
adc
add
sub
cwtl
cld
fdivrp
sbb
inc
mov
shrb
or
jmp
int3
pop
mov
push
jnp
dec
hlt
or
test
js
lret
fwait
pop
shlb
out
add
xlat
setns
and
sub
icebp
adc
fiaddl
cltd
int3
notl
mov
add
jne
fcoml
roll
rcll
adc
push
orb
cmp
jecxz
sub
ss
inc
fimuls
pop
icebp
leave
cmc
adc
fildll
and
xchg
mov
std
or
imul
xor
dec
push
inc
popf
sub
in
pop
xchg
icebp
cmp
cs
mov
cwtl
movsl
mov
shl
pop
stos
repnz
or
iret
lods
ret
ret
xor
dec
je
dec
test
cmp
fwait
test
gs
or
adc
jle
and
ja
jge
jl
jbe
loope
imul
sub
roll
imul
xchg
adc
pop
adc
mov
adc
jb
stos
xchg
mov
and
int3
adc
inc
test
dec
push
xlat
mov
pop
in
jo
shll
xorl
outsl
loope
enter
sub
into
mov
outsb
mov
bound
jecxz
gs
push
loope
aas
cmp
idivb
push
sbb
hlt
pop
xor
mov
sbb
xchg
outsb
jp
xchg
mov
stos
ja
sahf
fldl
cltd
popf
stos
mov
sub
nop
pop
jmp
push
mov
ds
cmp
add
sti
jl
adc
out
frstor
adc
repz
cmp
mov
push
decb
mov
dec
orl
pop
inc
jecxz
popf
arpl
push
cmp
add
adc
dec
push
and
pop
repz
jg
sub
or
out
and
or
jns
andl
movsl
das
add
xchg
pop
pop
repz
adc
jmp
push
add
data16
fidivl
dec
test
dec
mov
iret
sub
inc
push
ss
xor
call
mov
rcrl
mov
mov
shll
in
push
mov
jb
rolb
pop
sub
in
movsb
mov
sub
mov
aas
scas
arpl
or
outsb
adc
dec
fs
shlb
je
inc
push
adc
xchg
in
lock
roll
push
sbb
dec
popa
inc
add
imul
jo
push
add
into
arpl
fimuls
mov
fwait
out
pop
in
mov
adc
pop
mov
mov
pop
roll
and
outsl
int
mov
mov
insl
in
in
fldl
enter
mov
mov
fsubrl
adc
hlt
mov
sub
cmpsl
inc
mov
leave
clc
scas
sub
mov
mov
repnz
call
test
out
lret
fdivs
add
or
cmc
out
sbb
std
sub
sub
movsl
pop
scas
in
inc
in
es
jb
andl
push
rorb
push
lahf
out
jnp
sahf
xor
mov
mov
xchg
rorb
loope
mov
jmp
mov
pop
roll
mov
xchg
sub
into
mov
push
js
shr
pop
cmc
mov
jle
stc
pop
fsub
ja
lret
repnz
and
mov
int
out
inc
scas
sbbb
sub
push
test
jbe
dec
jge
mov
notl
je
outsl
pop
pusha
push
or
inc
leave
pop
stos
out
jl
push
cli
jo
xor
mov
mov
dec
outsl
mov
xchg
fidivrs
mov
mov
inc
popa
imul
xchg
cmpsl
mov
sub
push
int3
and
mov
adc
fcomip
cmp
mov
jne,pn
push
xchg
or
xchg
mov
and
clc
sub
or
cmp
js
shrl
mov
lds
xor
in
faddl
adc
sbb
mov
add
es
mov
jmp
fdivrp
cli
push
add
hlt
add
add
inc
movsl
and
sarl
aaa
daa
jle
ljmp
jge
inc
or
out
lea
rorl
mov
daa
aas
aaa
stos
outsb
xor
push
notl
pusha
imul
xlat
scas
lcall
sbb
aas
xor
mov
inc
into
cmp
subl
jo
mov
push
inc
aam
jecxz
pop
sbb
pop
cld
push
xorl
xchg
ss
out
aaa
dec
aaa
imul
inc
out
push
pop
roll
pop
fsubl
cmpsl
cmpsb
fsubp
pop
aam
sbb
jne
jnp
shlb
cmp
test
arpl
fistpl
sub
xchg
adc
bound
aas
push
fidivrs
push
sahf
fs
test
pop
push
jbe
cmp
pusha
and
test
sahf
push
movsb
lea
mov
data16
mov
les
mov
jmp
mov
add
imull
mov
jecxz
mov
fimull
lahf
jecxz
repnz
insl
icebp
mov
test
adc
adc
and
loope
mov
dec
std
js
or
jmp
lods
repz
dec
std
in
push
icebp
fdivrl
stos
adc
cs
cmp
test
lods
aam
mov
test
jmp
inc
sbb
movsl
roll
loop
lea
sub
dec
loope
and
jae
mov
fldenv
leave
pop
popf
dec
inc
add
nop
test
scas
push
pop
adc
pop
pusha
xchg
adc
int3
stos
pop
inc
daa
adc
adc
iret
iret
pop
pop
fadd
adc
call
mov
sub
mov
stos
popf
inc
jo
xchg
pop
cmp
xchg
bound
inc
jb
mov
jecxz
imull
xchg
mov
imul
fildl
sub
mov
stos
lret
push
xor
pusha
divb
add
mov
out
sar
sahf
inc
sbb
shr
adc
testb
mov
popa
cmpsb
xchg
in
and
mov
fwait
ljmp
out
out
mov
out
fisubrs
xchg
int3
fisubrs
mov
repnz
or
mov
fsubl
outsl
in
fisttpl
mov
mov
jns
cwtl
fnstenv
push
xchg
dec
cwtl
xchg
test
icebp
or
and
clc
iret
aas
enter
jp
push
cmp
sub
scas
mov
aaa
in
sub
sbb
dec
aaa
out
dec
ficompl
dec
add
or
outsl
stc
bound
pop
and
push
sub
mov
incb
out
pop
mov
inc
dec
insb
sbbl
xchg
loope
pop
pusha
mov
lret
push
jbe
inc
std
or
lret
pop
pop
inc
lods
cmp
mov
pop
lret
push
pop
and
cld
negb
mov
ljmp
inc
or
adc
fisubs
lock
in
pop
fisttps
ret
orl
sahf
test
or
push
es
or
cltd
int3
dec
add
pop
int
sarb
in
imul
out
scas
ret
xor
cmp
pop
pop
xchg
mov
enter
jg
jmp
outsb
pop
clc
jg
clc
add
push
dec
stos
cmp
xor
or
push
jbe
push
dec
and
ret
jmp
mov
enter
scas
lret
mov
pop
inc
in
cmp
mov
adc
div
into
mov
sub
mov
xchg
mov
sbb
adc
sub
lahf
xor
negb
in
test
in
adc
ffree
mov
lea
mov
push
or
mov
sbb
call
mov
or
out
stos
sahf
icebp
push
icebp
push
lret
jae
int3
ja
xchg
xor
test
std
fs
call
aam
ss
cmp
sbb
push
mov
sar
loope
push
out
sbb
push
add
push
jge
pusha
sub
iret
in
mov
iret
cltd
sub
or
xchg
add
daa
add
jl
cmpsb
add
fldenv
xchg
fcmovb
mov
jl
data16
shl
orl
or
push
repnz
js
push
mov
xor
repnz
ljmp
stc
pop
adc
sti
xchg
jge
lds
lahf
test
lea
and
sbb
lahf
push
ss
movsb
daa
out
fsubrl
scas
mov
dec
out
pusha
add
add
aaa
sti
addr16
out
fidivs
popa
xchg
into
ret
add
hlt
add
add
adcb
mov
push
test
cmp
adc
or
enter
dec
lahf
fsubl
pop
orl
xchg
mov
and
fldenv
sub
sbb
inc
mov
xchg
mov
inc
das
jp
sub
ficoml
in
pop
pop
push
loop
test
inc
aam
mulb
enter
jp
dec
imul
xchg
fucom
cmpb
pop
iret
add
cwtl
inc
movsb
in
jge
dec
mov
pop
movsb
mov
or
adc
fsincos
pop
or
pop
stos
mov
shll
scas
into
lods
test
es
add
inc
push
xor
push
les
adc
jae
movl
jns
mov
cmp
inc
arpl
jmp
mov
fs
jge
xchg
mov
es
je
mov
loop
shlb
mov
bound
and
les
movsb
jb
cmp
mov
sti
rcrb
pop
out
andl
in
dec
icebp
jp
movsl
enter
inc
mov
pop
mov
test
cmp
ja
and
test
xchg
imul
in
and
push
pop
or
cmp
sub
jbe
stos
mov
mov
jg
or
xor
mov
movb
andb
test
and
pusha
mov
adc
mov
test
pushw
mov
mov
sub
jbe
loop
ret
sub
dec
mull
out
and
int3
pop
xor
movsb
inc
mov
cmp
testb
cltd
mov
xor
cmpsl
std
push
lock
push
ret
sarl
add
outsl
movsb
shll
jmp
shll
pop
push
jmp
jns
cmp
sub
mov
jb
mov
lods
fstl
sbb
leave
cmpsl
and
mov
scas
mov
out
ds
mov
jb
xchg
adc
shlb
lret
js
dec
push
test
push
imul
adcl
sub
aaa
xchg
inc
push
inc
mov
lcall
clc
insl
iret
scas
sbb
dec
xor
sbb
push
jg
mov
mov
adc
mov
cmp
adc
cltd
mov
loop
pop
dec
aad
ror
inc
or
pop
pop
mov
iret
jns
and
jbe
aas
loope
dec
sbb
mov
ljmp
es
mov
sub
out
xor
xchg
bnd
into
nop
in
dec
fistpll
pop
js
dec
outsl
stc
jnp
je
push
dec
sub
out
sub
and
jge
push
imul
mov
dec
cmp
fcoms
mov
shll
adc
jle
jns
es
cli
insb
and
add
es
sar
sub
mov
popa
insl
lock
arpl
in
xchg
mov
insb
xadd
sub
sub
cmpsl
pop
dec
scas
dec
daa
sub
je
or
scas
jbe
adc
dec
xor
cmp
mov
movsl
jp
dec
nop
jbe
cmp
loopne
mov
sahf
mov
push
inc
push
xchg
inc
fbld
fcompl
pop
lods
les
aam
jp
cmp
rolb
inc
jle
jb
xchg
adc
addr16
jmp
xor
xlat
filds
add
cmc
cmp
repz
loope
leave
cmp
inc
popf
fstpt
mov
add
and
pop
pop
pop
jbe
sti
add
leave
xor
jno
and
popf
jl
jle
mov
sbb
addl
jne
push
loop
arpl
xor
lds
pop
data16
movb
sub
ret
push
adc
in
jbe
inc
lock
enter
std
sub
push
aad
or
cmpsl
insl
clc
xchg
and
imul
jno
sub
add
jb
xchg
daa
lcall
pop
dec
fcmovb
gs
xchg
loop
adc
mov
in
sarl
out
clc
sahf
loopne
int3
mov
mov
sbb
mov
enter
ret
mov
in
inc
cmpsl
lods
push
loope
push
cltd
push
xchg
sti
lcall
and
mov
insl
sub
push
in
test
and
pop
dec
and
add
add
out
sbb
repz
xor
int3
mov
add
hlt
add
add
clc
add
mov
mov
lods
push
jbe
imul
mov
xor
ja
adc
imulb
push
test
and
cltd
inc
fildl
jge
loope
add
add
pop
and
jmp
int3
add
dec
enter
test
pop
adc
mov
dec
mov
testb
sub
dec
xchg
mov
fstpt
ds
jns
push
shlb
and
movsl
push
jl
sarl
sbb
add
mov
add
cltd
push
inc
mov
outsl
inc
pusha
idivl
jmp
mov
iret
es
jg
inc
outsb
add
adc
lret
xchg
or
sbb
popa
pop
mov
ds
mov
inc
xchg
or
int3
stos
push
or
mov
mov
pop
leave
das
adc
jnp
pop
in
xchg
out
loop
jo
inc
mov
sub
sahf
insl
call
clc
fwait
and
cmp
imulb
je
iret
push
lock
das
clc
xor
lahf
testb
xor
outsb
out
lods
jne
inc
sbb
pop
insb
enter
cmp
outsb
in
sbb
nop
cmp
pop
cmpsb
sbb
icebp
push
orl
sub
jl
push
rclb
adc
xor
xor
lds
fwait
inc
xchg
lahf
test
fsubrl
push
fists
ret
mov
xchg
cmp
enter
mov
mov
movsb
lret
xchg
mov
into
andb
lods
movsb
test
xchg
es
pushf
lahf
mov
xor
inc
mov
cltd
inc
xorb
xor
nop
jae
mov
inc
sub
push
movsl
adc
rcr
sub
fmul
pop
loop
imul
xchg
outsl
mov
add
xlat
ss
add
xchg
mov
mov
lret
cli
test
adc
push
hlt
pushf
adc
mov
push
imul
mov
add
andl
ja
loop
imul
xor
andb
add
loop
mov
cmp
dec
jl
mov
push
out
cwtl
enter
test
mov
xchg
cmp
adc
jae
loope
popa
inc
out
roll
je
mov
dec
dec
jp
mov
add
jmp
mov
cmp
mov
rclb
add
mov
out
pop
lcall
loopne
add
push
movl
jnp
dec
xchg
add
mov
jne
mov
insb
jns
mov
test
mov
cwtl
nop
arpl
dec
jo
push
imul
rcrb
pop
dec
inc
mov
xchg
popf
std
call
or
and
out
inc
in
insb
sub
cmc
in
push
daa
stos
pop
cmpsl
loop
pop
mov
xor
jmp
divb
orl
leave
mov
into
or
push
mov
push
cmpsb
mov
shl
ja
mov
stos
push
xor
ljmp
pop
outsb
dec
dec
push
cmp
jp
cwtl
push
frstor
nop
out
test
pop
sub
push
stos
js
lods
out
cmp
scas
mov
sub
adcl
test
xchg
sub
and
inc
xchg
mov
pushf
call
push
loop
out
inc
imulb
neg
jno
push
cmp
movsb
push
and
outsb
mov
add
mov
xor
push
aad
pop
imul
xchg
mov
leave
sbb
ret
xchg
dec
cmp
pop
mov
iret
adc
pusha
int
ret
fnsave
mov
in
push
and
mov
mov
or
outsl
jne
ret
loop
adcl
mov
mov
mov
les
xor
fldt
cmpsl
std
out
xlat
and
leave
std
jl
xchg
jns
or
xor
pop
cmpsb
lret
cmp
std
mov
xor
subb
clc
sub
push
push
mov
mov
lcall
rcrl
or
ds
mov
ljmp
sahf
into
scas
in
xchg
int3
lock
mov
fimull
rorb
fstl
fabs
add
mov
xor
mov
dec
mov
ds
sbb
rorl
sub
test
loope
mov
mov
adc
scas
xor
add
mov
out
out
mov
xchg
ret
cmpsb
jo
cmp
add
add
add
rcr
jno
lods
ds
std
jp
push
adc
mov
stos
push
xor
je
and
cmp
dec
dec
xor
rcl
in
or
out
sbb
aad
adc
data16
pop
out
in
out
mov
pop
pop
gs
mov
adc
add
add
jl
loopne
aam
es
pop
xlat
mov
xlat
cmp
adc
popa
add
cld
addr16
rep
push
ss
pop
sbb
sbb
scas
inc
push
out
or
sbb
dec
mov
pop
mov
jb
inc
pop
xchg
test
adc
mov
adc
test
cmp
dec
mov
sub
pop
sbb
pop
and
decb
xlat
xorb
insb
mov
xchg
dec
pop
push
data16
cli
lahf
sbb
mov
mov
inc
shll
mov
push
jbe
jno
push
xor
sbb
fiadds
mov
xchg
and
int
movsl
push
out
mov
in
cmp
mov
push
adc
pop
inc
dec
jl
popf
insb
push
int
loope
rolb
mov
lods
add
mov
jne
jmp
or
insl
sub
mov
mov
dec
and
imul
push
sbb
mov
adc
repz
mov
jnp
into
cmp
lock
xor
cmp
rolb
push
push
pop
xor
das
cli
and
daa
dec
push
lock
adc
mov
mov
sbb
xor
lcall
mov
cmc
movsl
data16
pop
outsl
add
add
addr16
out
mov
xchg
mov
lret
test
jp
shr
pop
inc
insb
mov
push
into
sub
test
and
jcxz
movsl
jp
inc
rcrb
aaa
shr
bound
pushf
mov
xchg
and
ljmp
les
rorl
pop
sbb
mov
stos
and
dec
cmpsb
and
roll
mov
aas
inc
imul
popa
mov
mov
fwait
mov
add
cltd
stos
pop
cwtl
fucomp
in
fxch
sbb
or
or
push
cmpsb
sarl
mov
pop
lods
xor
and
add
cltd
decl
and
mov
mov
xlat
ret
repz
xor
sti
ret
roll
addr16
xchg
lret
sbb
xorb
mov
or
jl
notb
dec
dec
clc
dec
mov
inc
and
std
jmp
fwait
aad
and
mov
leave
test
repnz
mov
add
or
data16
ret
lods
call
lret
int3
jbe
pop
dec
addb
inc
lods
jmp
fld
out
fcoms
inc
out
cmpsl
into
cld
lret
iret
mov
aaa
push
cld
aaa
push
lret
dec
pop
jecxz
cmp
loopne
aad
out
mov
fwait
cmpsb
pop
inc
mov
pop
dec
les
hlt
cli
xor
shrb
test
jecxz
lods
cmc
gs
or
sub
cltd
jo
xor
xor
loop
mov
jl
shl
xchg
adc
mov
push
std
out
mov
cmpsl
cld
push
in
or
add
ficoml
ds
or
js
cmp
mov
lods
mov
repz
pop
lret
sahf
dec
mov
pop
out
xchg
out
or
aam
stc
fs
sub
push
sub
rclb
lea
jb
in
in
adc
stos
mov
cmc
xchg
lcall
mov
xor
std
ret
or
push
loop
xchg
iret
in
arpl
outsl
cli
jp
shlb
ret
jns
test
sarb
and
xchg
int
pop
mov
mov
test
sbb
push
pop
out
dec
or
jne,pt
lock
jmp
cmp
pop
xor
mov
or
sub
aas
scas
pop
pusha
movsl
jo
outsl
push
adc
mov
cli
test
xor
adc
xchg
lds
aas
dec
ss
sahf
imul
mov
pop
and
sbb
fwait
pop
movsb
outsb
push
xchg
cmp
adc
pop
dec
xchg
mov
js
loop
sbb
lret
pop
mov
pop
lods
adc
ret
js,pn
add
add
adc
dec
negl
mov
xor
mov
add
add
add
loope
das
mov
mov
test
in
bound
out
pop
pop
enter
je
mov
repnz
cs
outsl
jnp
jbe
movsb
nop
inc
cmp
xchg
mov
test
dec
add
mov
mov
push
xor
test
dec
push
stc
in
inc
test
in
inc
lods
sbb
push
insb
popf
jle
cmp
mov
jl
inc
pusha
xchg
lds
adcb
lods
cwtl
jns
adcb
add
inc
je
out
movsl
ret
cwtl
push
shrb
idivl
jns
xor
iret
pop
inc
mov
dec
lock
jo
push
mov
cs
in
add
in
fwait
popa
lods
mov
leave
mov
and
daa
insl
sti
iret
lds
pop
outsb
into
mov
or
xor
mov
int3
cli
mov
mov
jne
aad
inc
les
dec
aas
outsl
icebp
dec
jle
shll
scas
jno
vpshaq
mov
lods
push
nop
shufps
movsb
mov
fdivs
pop
lahf
mov
lock
adc
out
mov
repz
out
push
adc
idiv
shlb
cmp
test
sbb
cmp
stos
xor
aam
mov
mov
mov
std
push
addr16
imulb
fldenv
insb
cmp
lret
xchg
pushf
je
mov
lods
stc
or
mov
jno
mov
scas
cmp
lock
mov
inc
inc
cmpsl
mov
repz
mov
lods
dec
or
dec
cmp
das
mov
in
xor
movsl
fsts
out
pop
fimull
and
or
mov
lea
sub
or
mov
out
pop
in
hlt
sub
push
and
push
pop
int
bound
pop
pusha
sub
shll
xor
ljmp
aam
add
cwtl
and
or
fnsave
pop
sub
xchg
test
add
in
mov
fsub
negb
xlat
das
into
adc
inc
push
xchg
fldpi
sbb
stc
into
sub
mov
cmpsl
add
test
gs
or
fiadds
insl
nop
jo
mov
sub
push
cmp
mov
pop
add
ror
sub
sqrtps
add
or
into
push
push
xchg
repz
mov
dec
and
push
enter
jns
mov
sub
js
sbb
call
xor
or
xchg
cmp
pop
adc
jg
movl
sbb
mov
dec
es
jns
aas
mov
data16
outsb
mov
dec
sbb
xor
lret
push
loope
ret
xor
lea
lahf
out
mov
push
adc
filds
jl
mov
mov
out
leave
flds
sbb
mov
jae
out
add
lods
mov
or
or
fdivrl
scas
xchg
rorl
repnz
mov
in
fcompl
jo
sub
fcmovnbe
xorl
push
jbe
or
in
jns
cmc
push
pop
fistl
dec
es
dec
andb
inc
daa
jp
sub
jae
inc
add
sbb
xchg
cmc
int
inc
testb
mov
xor
scas
cmp
insl
scas
js
outsb
fs
sub
add
jne
xchg
add
and
mov
fcomps
push
out
fdiv
insb
subl
int3
add
sub
pop
cmpsb
add
pminub
lea
push
pop
out
mov
sub
dec
jne
xchg
test
jae
xchg
push
int
test
mov
mov
sbb
mov
mov
stos
fadd
fisttpll
jb
xchg
jae
aad
mov
pop
leave
mov
mov
rorl
lahf
sub
sbb
loope
andb
mov
out
int
jge
mov
int3
xor
dec
mov
jno
int3
dec
mov
xchg
mov
adc
lods
lods
lea
jg
jl
gs
adc
push
jg
jo
mov
xchg
rcl
ljmp
mov
fs
mov
dec
js
jge
push
inc
cmp
cmp
jg
daa
pop
scas
ret
xchg
jge
in
fimull
add
push
les
enter
xchg
cmp
sbb
out
adc
add
stos
push
aas
and
lret
add
pop
sub
pop
pop
test
dec
flds
lret
sbb
add
xchg
sbb
dec
jns
push
push
out
popa
cs
inc
cmpsb
cltd
dec
add
add
in
mov
fdivp
cld
ds
daa
cmp
arpl
aas
gs
add
hlt
add
add
cvtps2pd
mov
sub
and
ds
mov
add
sbb
pop
push
xchg
adc
xchg
lock
insl
inc
dec
addr16
jb
or
icebp
jle
pop
test
push
cmp
add
jp
fbld
mov
pop
les
loop
stos
dec
loopne
int3
mov
adc
jg
jno
jle
loop
mov
test
lret
sub
cli
jo
and
mov
ficomps
fwait
jae
outsb
sub
jecxz
jbe
lods
add
in
test
sar
inc
mov
jbe
mov
or
ja
nop
mov
push
and
das
mov
push
loope
push
ja
xchg
addr16
js
push
push
clc
mov
and
stos
adc
mov
fdivl
mov
push
pop
push
orb
mov
xlat
fstl
xchg
or
rcrl
and
sub
jo
xor
mov
xor
ss
hlt
jb
imul
cmp
jp
std
adc
into
pop
mov
int
bound
push
sti
hlt
outsb
mov
dec
and
pop
fsubs
aam
sbb
push
push
push
and
sti
sbbb
add
sbb
cmp
dec
scas
mov
dec
push
cmp
ret
daa
sub
pop
js
sbb
ret
shll
add
les
dec
jecxz
stos
mov
ss
addr16
mov
mov
ret
jge
jp
out
pop
pop
retw
insb
ds
imul
mov
shrl
sbb
mov
andl
cmp
mov
cltd
add
mov
sub
ret
mov
aas
rol
cmp
xchg
popl
mov
pop
pop
add
sub
ljmp
jle
cmc
outsb
pusha
daa
adc
and
leave
or
sbb
insb
lock
sbb
and
add
pop
insb
mov
push
mov
cmc
es
cltd
daa
xchg
inc
cmp
add
and
cwtl
xor
mov
cmp
pop
repz
jecxz
shl
cltd
stos
test
popa
adc
push
jg
loope
bnd
shll
sub
push
ret
xchg
hlt
jns
cmp
adc
inc
adc
scas
adc
sti
cmc
lods
mov
cmp
arpl
negl
outsb
out
fldl
cs
pushf
adc
jae
ret
mov
push
aaa
pop
jge
push
pop
cmp
xor
cli
mov
lret
adc
mov
arpl
mov
adc
cmp
mov
mov
ss
xchg
popa
imulb
push
mov
les
ret
leave
lea
shrb
push
leave
pop
leave
jns
adc
loopne
test
add
push
pop
filds
mov
push
ret
mov
js
pop
push
nop
mov
cwtl
or
dec
jno
and
xchg
repnz
xchg
jno
push
mov
mov
pop
sbb
xchg
test
test
inc
or
ror
test
fwait
add
cmpb
je
mov
mov
mov
stos
xchg
mov
pop
lods
sbb
rcrl
add
fidivrl
mov
call
xor
gs
sti
push
sti
ret
aad
sbb
pusha
lcall
testl
mov
sahf
jb
lods
cmp
inc
dec
out
adc
add
scas
add
scas
movsl
xor
out
mov
inc
push
in
adc
iret
xchg
fistpll
xchg
shlb
xchg
lds
in
push
inc
xor
mov
loop
fmuls
push
imul
repnz
pop
test
loope
mov
push
pop
ss
xchg
enter
insb
pmaddwd
fbstp
pop
ret
xor
push
repnz
outsl
and
mov
xchg
mov
fadd
pop
mov
push
cmp
add
movsl
sub
aam
push
xorl
dec
and
sub
mov
pop
cwtl
push
fwait
cmc
pop
stos
fmul
dec
jno
arpl
push
adc
bnd
ret
pop
cmpsl
jmp
inc
lahf
mov
xchg
subb
mov
out
mov
push
clc
push
notb
es
pop
jne
ret
je
sbb
into
jne
push
xchg
or
adc
mov
inc
inc
push
xchg
shll
aad
xlat
fdivr
dec
add
add
jnp
xor
jg
sbbl
pop
dec
add
hlt
add
add
cld
adc
imul
loope
jno
mov
test
inc
roll
neg
adc
mov
jae
fidivrl
fadd
jne
jo
mov
mov
mov
dec
pop
xor
outsl
leave
in
hlt
or
clc
mov
lahf
inc
movsl
in
daa
pop
lods
jmp
adc
ja
push
jb
sbb
xor
inc
call
adc
lds
xor
jg
stc
mov
in
repz
call
test
cwtl
idivb
test
data16
xor
mov
fstpl
jae
adc
test
imul
outsb
cmpsl
xor
push
dec
test
subb
mov
outsl
push
mov
repnz
testl
and
add
adc
out
mov
xlat
add
pop
lds
jo
les
cmp
lcall
enter
jno
push
xchg
cmpsl
jno
outsl
pop
sub
sbb
mov
xor
pop
pop
sarb
jne
mov
dec
push
sub
call
and
adc
jmp
jge
lahf
bnd
pushf
push
jge
sub
loopne
adc
push
out
test
or
cmp
or
adc
mov
xchg
sbb
mov
sbb
popa
fstpl
ds
mov
jmp
inc
xchg
cmp
and
fxch
lock
cmp
add
out
mov
cmp
call
sbb
inc
cli
pop
stos
sbb
push
lods
push
insb
icebp
int
mov
add
xor
popf
adc
sbb
mov
jnp
data16
fidivl
jne
pop
push
pop
xchg
jo
adcb
cmp
sbb
xchg
dec
adc
ds
mov
outsb
test
add
inc
rcr
inc
and
inc
xchg
push
pop
sarb
xor
icebp
iret
mov
push
fbld
sbb
pop
loop
fcoms
roll
push
add
push
in
push
jecxz
and
pop
lcall
ss
imul
jb
cmp
inc
repnz
rcll
cmpsb
xchg
pop
sub
movsl
add
shl
jne
test
mov
mov
int
jl
push
lahf
xchg
jmp
xor
out
out
jns
icebp
or
or
fcomi
pop
aam
rep
insl
jle
cmpsl
dec
lret
jbe
mov
sbb
sbb
pop
inc
into
mov
gs
or
dec
jo
fwait
or
mov
inc
mov
lods
push
adc
data16
movsb
pop
add
dec
cmp
sub
nop
xchg
es
xchg
or
ror
mov
cmpsl
arpl
push
dec
in
fcmovbe
test
sub
push
xchg
mov
movsb
int
or
imull
push
sahf
sbb
sbb
repz
adc
mov
pop
push
rcr
icebp
add
cmp
push
in
movsl
fldenv
cmp
and
es
lcall
fwait
add
aam
jmp
lods
mov
sub
mov
aad
js
jecxz
nop
cmp
xor
popa
mov
or
jg
rcll
data16
sub
data16
fstl
sbb
xor
push
hlt
lcall
daa
stos
in
cmp
es
adc
pushf
jbe
ret
push
lret
jge
dec
cmp
movsl
sub
inc
pop
mov
add
negl
xchg
pop
ret
hlt
adc
add
hlt
pop
or
nop
push
jg
out
push
nop
loop
jg
xchg
cmp
dec
jg
fldenv
cmp
inc
cli
cltd
das
repnz
sub
pusha
pushf
leave
inc
insb
and
lods
insb
inc
lret
lea
mov
fisttpll
scas
and
cwtl
add
xchg
inc
cmp
and
outsb
mov
xchg
mov
hlt
add
inc
lahf
xor
mov
arpl
sbb
in
xor
int3
sbb
test
mov
hlt
push
jecxz
rcll
das
jge
mov
xlat
lock
jge
jle
or
adc
mov
sti
je
arpl
int3
call
fnstenv
mov
jge
mov
mov
pop
mov
inc
or
inc
sub
or
inc
das
mov
jl
aas
dec
pop
sbb
aaa
outsb
insb
sbb
sub
inc
pop
test
lahf
test
and
cmp
rcll
jno
and
dec
loop
sub
stos
xor
adc
add
add
loop
add
mov
cmp
add
add
add
xchg
pop
shlb
push
cmp
sbb
in
xor
fwait
push
aad
popf
and
mov
lea
mov
jne
arpl
jae
xchg
push
pop
stc
shufps
mov
pop
ljmp
ja
add
ljmp
movsb
push
data16
pop
xchg
in
sar
out
xchg
je
popf
add
aam
inc
mov
mov
cmp
das
ret
mov
xlat
pop
add
popa
lock
jbe
repz
cld
ljmp
cmp
xlat
inc
sbb
das
enter
dec
aaa
lcall
xchg
cmp
cltd
dec
push
mov
jnp
inc
cmp
fidivrs
push
xor
add
out
dec
adc
jbe
leave
std
orl
aaa
out
or
je
int3
jecxz
addb
test
ret
stos
adc
stc
cwtl
lods
push
inc
lret
xchg
dec
inc
xchg
dec
xchg
inc
adc
push
in
frstor
mov
pop
jb
sbb
jns
inc
pop
leave
nop
dec
mov
or
pop
xchg
test
inc
xorb
or
in
rolb
push
gs
and
inc
fwait
out
xor
xchg
scas
popa
jl
pop
mov
pop
imul
jnp
sbb
imul
hlt
sub
das
leave
mov
inc
adc
inc
adc
pop
stos
adc
fisubs
mov
in
mov
aad
cltd
jno
adc
loopne
add
sub
sbb
lcall
xchg
hlt
aaa
movsb
pusha
movb
rorl
dec
test
out
mov
xchg
mov
jecxz
std
lods
mov
shlb
push
jg
mov
inc
aaa
xor
int
jecxz
cld
sbb
cmp
scas
mov
stos
addb
xor
xor
mov
sub
popf
sub
inc
out
cmpsl
inc
rorb
fsubr
into
lret
push
and
out
shlb
pop
xchg
in
pop
jmp
fs
push
mov
loopne
xchg
sar
cmp
shrb
push
dec
fildl
and
bound
in
add
loopne
xor
icebp
mov
mov
cmpsb
and
jnp
cli
lret
mov
sbbl
inc
adc
into
mov
push
fcmovb
sahf
adc
add
clc
imul
dec
dec
add
fwait
pop
inc
sbb
aam
ja
into
add
stos
mov
pop
or
sbb
xchg
inc
fdivl
pop
mov
pop
push
rcr
faddl
adc
add
pop
ret
lods
in
popf
or
iret
xchg
lods
test
nop
clc
std
mov
cld
imul
aad
xchg
repnz
pop
push
filds
mov
sub
mov
inc
repnz
jae
adc
add
das
push
and
aas
xor
iret
push
xchg
jbe
mov
push
or
shr
test
add
xchg
mov
test
xchg
ret
and
jg
cmp
dec
mov
cmpl
xorl
cmp
mov
xchg
je
inc
hlt
sbb
mov
mov
lea
popa
mov
lods
mov
mov
adc
jns
mov
mov
mov
bound
and
pop
mov
leave
notl
inc
or
ja
jl
bound
xchg
push
mov
fdivr
pop
and
rolb
mov
ret
repz
mov
js
hlt
adc
sub
sbbl
or
ljmp
jmp
lock
mov
and
push
mov
inc
inc
xchg
outsl
jp
andb
fs
add
inc
sub
inc
fimuls
lcall
push
inc
ja
jae
cli
gs
shrb
mov
cmp
mov
ss
adc
lahf
dec
push
add
pop
hlt
mov
nop
icebp
pop
jne
idivl
jbe
xor
and
mov
cmpsb
pop
and
int
or
fwait
loopne
adc
mov
outsb
inc
push
nop
mov
dec
xchg
inc
lods
push
adc
xor
mov
nop
push
mov
popa
pop
inc
mov
pop
hlt
or
ljmp
sahf
sub
je
or
cmc
sahf
xchg
push
subb
xorl
pop
or
fs
into
das
jns
das
rep
imul
stc
ret
sbb
addb
ds
jg
pop
test
jmp
ja
add
add
pop
pop
loope
loope
fistpll
adcl
sub
add
hlt
add
add
cmp
sbb
and
fcomps
lock
insl
dec
into
adc
or
sbb
sbb
in
dec
insl
addr16
xchg
sbbb
mov
jns
int
jbe
pop
xchg
inc
test
es
sbb
das
repz
dec
sbb
imul
arpl
aam
pushf
mov
cmp
jmp
mov
shll
add
popa
push
push
daa
popf
xor
push
pop
loop
pop
mov
jbe
ds
js
push
mov
xchg
mov
gs
pop
push
push
dec
imulb
outsl
xor
dec
adc
add
test
les
pop
push
or
test
mov
aad
xchg
adc
lods
insb
pop
push
inc
push
lret
or
fnstcw
shll
dec
hlt
sbb
daa
pop
cmpl
mov
mov
push
out
divb
test
inc
loop
shlb
mov
jo
jno
ja
mov
mov
shlb
xor
adc
push
stos
incl
push
ljmp
sub
pop
add
lds
dec
and
push
subl
aaa
jne
dec
movsl
leave
mov
cmp
push
mov
jmp
and
mov
push
pop
and
adc
mov
cmc
lods
out
push
loopne
inc
jle
dec
in
push
mov
or
rcll
push
pop
test
inc
dec
sbb
push
mov
add
arpl
push
arpl
or
xchg
icebp
adc
inc
dec
daa
dec
rcl
lds
call
fdivr
push
xorl
imul
scas
pop
or
jns
clc
movsb
mov
lahf
or
popf
xchg
push
xchg
psubusb
or
hlt
push
je
jae
inc
or
cmc
imul
testl
cmp
inc
mov
push
mov
pop
mov
inc
sbb
jl
adcl
pop
jns
es
sarl
sbb
enter
mov
testb
mov
lods
loopne
loop
dec
enter
xchg
sbb
fdivrl
clc
int
mov
push
adc
clc
jg
fdiv
push
icebp
popa
and
mov
fstpl
inc
xor
xchg
aaa
aaa
mov
jmp
aaa
fisttpll
mov
shr
add
fstl
cmpsb
out
pslld
dec
or
and
js
clc
repz
aas
fs
notb
es
ljmp
or
xor
inc
out
pop
mov
cltd
hlt
scas
int
pop
mov
popf
adc
or
pop
loopne
mov
jb
adc
sub
mov
mov
add
popa
subb
cmp
outsb
add
mov
stos
pusha
test
aaa
scas
fildll
fstpl
clc
mov
das
jne
sub
ljmp
cmp
jnp
or
jns
bound
dec
mov
int3
enter
negb
lods
cmp
sub
mov
cmp
jnp
loop
aad
popf
ljmp
sbb
lret
mov
and
aad
ss
rcll
sub
addb
push
out
or
cmp
aam
and
add
sti
mov
loop
push
daa
fcoml
insl
andb
or
hlt
jo
cld
call
adc
mov
mov
adc
jl
xor
dec
in
popl
push
jecxz
dec
dec
popa
add
mov
sub
mov
adc
xor
xchg
iret
sub
and
xchg
xor
and
aas
pop
out
cld
sub
out
mov
pop
outsl
daa
mov
insb
in
xorl
or
out
jl
dec
jecxz
push
mov
push
dec
dec
popf
pop
jecxz
outsb
int3
sub
scas
stos
pop
push
pop
lcall
fimuls
pop
mov
cwtl
inc
scas
dec
aas
fs
mov
xchg
ds
push
jo
mov
dec
iret
adc
inc
pop
pop
std
dec
jp
mov
lock
lock
adc
testl
pop
lds
ljmp
in
adc
mov
movsb
jmp
mov
pop
adc
mov
add
ret
jmp
js
push
stc
adc
jl
and
add
add
loope
xchg
out
notl
in
cld
test
hlt
add
add
sub
push
add
add
nop
xchg
adc
xchg
add
push
mov
mov
inc
jge
push
sub
loop
inc
stc
pop
cltd
loope
cmp
mov
ds
aad
pusha
daa
ficoml
jg
or
ret
cld
inc
xchg
mov
sbb
and
mov
and
outsb
dec
pushf
add
inc
inc
fsubr
iret
sbb
add
mov
icebp
mov
loope
mulb
dec
ss
lods
sub
mov
xlat
fldl
jp
cmc
loopne
jge
xor
into
sti
cmp
ficompl
push
scas
xor
lea
fadd
mov
icebp
pusha
sbb
jbe
jo
push
jb
xchg
jo
jp
lahf
pop
out
adc
push
ss
add
aam
clc
rclb
adc
fimuls
es
sub
and
and
adc
add
shll
nop
lahf
sbb
mov
negl
cltd
mov
pop
out
push
loopne
mov
out
pop
ret
das
psllq
outsb
xchg
cmp
fcoml
pop
lahf
push
cmp
cmp
aad
adc
in
mov
aam
js
mov
fucomi
fisubl
lcall
mov
push
jo
test
lods
sahf
rorl
adc
mov
xor
inc
and
xchg
xchg
repnz
lods
div
or
mov
jae
mov
jnp
jp
mov
inc
scas
aas
mov
sbb
fldt
sarb
sti
in
out
rolb
mov
lds
pop
orl
cmpsb
arpl
cwtl
aad
or
mov
inc
cmp
stc
fidivrs
xor
xor
pop
subl
jnp
imul
rolb
fisubl
cmpsb
inc
cmp
inc
mov
xchg
in
xchg
cmpsb
and
adc
pop
sub
out
lcall
cmp
add
mov
pop
cmp
lahf
mov
push
lods
pushf
mov
push
int
stc
push
pop
push
sti
in
fsubr
pop
sub
cltd
xor
loope
push
and
in
xchg
stc
add
xchg
ljmp
push
and
ljmp
stos
xlat
xor
shl
dec
adc
or
and
push
fs
jge
inc
jns
mov
push
mov
xor
enter
add
jmp
gs
je
inc
xor
pop
ret
lret
out
cld
mov
rcl
cmp
xor
xchg
lret
in
sbb
aam
mov
adc
cmp
jae
jnp
daa
push
outsl
cmpb
push
test
mov
and
push
sbb
fsub
cmpps
popf
setae
lds
fidivs
mov
ret
jl
scas
mov
shl
pop
pusha
lret
mov
dec
pop
jb
lret
cmp
dec
scas
in
sti
add
dec
lea
or
jle
shll
or
jnp
push
inc
pop
mov
cs
sub
leave
rcr
pop
test
sti
addl
scas
and
cmp
mov
gs
inc
add
popf
mov
inc
mov
mov
sub
outsl
in
dec
aam
lret
pcmpgtd
cmpsl
dec
aas
mov
dec
mov
ljmp
push
int
scas
lret
je
mov
xor
xor
pop
cmp
adc
in
xchg
sub
lds
mov
movsb
jge
adc
lods
call
inc
pop
dec
rcll
adc
pop
sbb
leave
scas
or
je
xchg
mov
mov
mov
in
and
inc
rolb
sbb
call
out
clc
push
aam
das
adc
inc
mov
loop
roll
cmp
or
inc
push
xor
stos
mov
adc
test
or
int3
xor
jns
adc
xor
std
or
jl
fs
cmp
mov
fisttpll
mov
aaa
pop
mov
ds
aaa
movsl
rcrl
and
popf
ss
dec
popa
jno
adc
mov
or
pop
inc
mov
faddl
jmp
push
pop
pop
mov
mov
pop
lcall
push
pop
mov
fsubl
lea
xorb
push
pop
andb
add
add
add
and
cmp
loope
mov
icebp
stos
sub
add
add
add
test
and
sub
xchg
lret
xor
ret
and
ret
fdivr
fistpl
fisubrs
mov
icebp
inc
das
jp
icebp
jp
add
jnp
lret
mov
mov
push
push
sbb
cmpsl
jl
clc
jne
sub
mov
movsl
outsb
fucom
inc
das
xchg
in
daa
or
xlat
inc
xor
sub
inc
int3
lcall
int
sub
inc
repz
das
scas
mov
sbb
adc
shlb
ss
dec
mov
js
in
xorb
mov
inc
clc
jecxz
add
lret
or
lods
or
sbb
mov
jle
cmp
xchg
or
push
mov
js
outsb
push
loopne
in
repnz
aam
add
xor
mov
inc
inc
mov
pusha
insl
xlat
add
addb
jecxz
fcompl
movsl
xchg
add
pop
test
xor
fiaddl
xor
dec
adc
mov
call
pushf
bound
inc
push
dec
pop
lret
andl
pop
xchg
jns
mov
daa
cmp
xchg
or
and
clc
mov
or
mov
in
jbe
shrb
push
int
divb
loop
xchg
test
xchg
and
sub
xchg
jae
sub
nop
jecxz
pop
rorl
je
outsb
mov
jae
or
xor
loopne
dec
mov
lret
ja
addr16
rcrb
negl
rol
into
add
sarb
push
mov
xor
cmp
in
test
ret
shll
mov
lods
cmp
adc
xchg
or
cmp
iret
outsb
mov
pop
dec
ss
stos
fdiv
fistps
loop
xlat
cmp
xchg
mov
pushf
mov
adc
add
dec
cmp
fstpl
lods
clc
out
mov
ror
xchg
shll
loop
sub
stos
jbe
fs
ljmp
add
insl
leave
loop
sbb
int
fiadds
push
or
jb
gs
jl
sub
pushf
mov
ret
and
cmpsb
and
mov
or
mov
fs
popf
push
sub
xchg
jne
mov
jl
cmp
add
add
test
lret
xor
lret
lods
xor
mov
ja
sahf
insb
push
hlt
negb
scas
out
prefetch
or
cmp
js
add
xor
pop
mov
outsl
enter
out
mov
cmp
ja
and
jge
mov
push
dec
call
call
sbb
push
into
jae
sahf
push
nop
jmp
mov
add
pop
je
sub
or
ret
inc
in
mov
xchg
adc
pop
aaa
pop
mov
and
adc
xchg
leave
rclb
shrb
clc
dec
dec
add
sahf
pop
mov
pop
push
fdivrl
lcall
sbb
jge
cmp
loop
jge
mov
movsb
cld
sub
add
mov
and
repnz
std
push
mov
and
mov
mov
loope
out
into
enter
xchg
clc
jnp
icebp
jge
lods
hlt
jae,pt
and
dec
outsb
test
repnz
adc
inc
outsb
bound
jg
jbe
lods
dec
mov
push
pop
or
mov
xchg
dec
push
mov
not
inc
fbld
loop
mov
int3
mov
sbb
add
repnz
xchg
aaa
ss
pop
call
lahf
fistps
nop
addr16
pop
dec
sub
and
xlat
mov
push
push
popa
sbb
dec
jge
loop
inc
insl
dec
mov
pusha
and
add
fimull
ret
test
mov
lods
mov
ljmp
sub
or
lods
and
push
inc
and
sahf
ljmp
sbb
mov
loopne
mov
pop
cmc
sbb
ds
dec
mov
xchg
test
xchg
jl
mov
sbb
roll
sbb
pop
imul
inc
jecxz
pop
lret
data16
aaa
addr16
or
jb
mov
or
rolb
xchg
sbb
cs
sub
and
adc
pop
aad
out
cmp
iret
jmp
add
int
mov
push
xor
test
xchg
test
add
add
mov
jp
ret
mov
inc
sbb
add
add
bound
mov
test
push
mov
test
arpl
loope
xor
addb
fisubrl
clc
ss
pusha
jp
pop
xchg
sub
clc
fsubr
push
jg
lret
push
mov
mov
lds
in
mov
mov
mov
dec
mov
shlb
cli
push
cmp
scas
sub
movb
clc
mov
pop
cmp
stos
dec
pop
pop
adcb
jle
ffreep
fisttpl
push
add
imul
iret
xor
test
add
xchg
out
jnp
push
mov
cmpb
loop
xchg
imul
sti
call
arpl
sub
cmp
or
adc
sub
pop
and
mov
add
mov
mov
into
loope
inc
push
xorl
xchg
cmpsl
popa
mov
xchg
push
sbb
data16
subb
rclb
rcrl
sbb
jmp
out
push
dec
fidivs
scas
fisubl
ljmp
sub
lcall
mov
mov
mov
scas
push
mov
je
sub
in
mov
sub
outsb
ret
icebp
mov
mov
fisubs
push
pusha
pop
xchg
pop
and
push
daa
dec
loopne
mov
adc
leave
fmuls
or
push
jecxz
xchg
xor
adc
inc
push
pop
mov
adc
adc
dec
mov
rcl
sbb
push
cmp
sbb
sarb
adc
pop
shl
xchg
lahf
test
push
mov
mov
mov
jge
popa
or
leave
or
bsr
hlt
jg
sub
cmp
jl
and
pop
ljmp
pop
clc
adcl
lods
fdivr
clc
jp,pt
inc
ds
insb
repz
out
add
out
jb
jb
outsl
rcrb
pop
insl
mov
repnz
shl
pop
fisubrl
mov
jo
cli
pop
scas
push
std
fwait
and
sahf
ja
fiaddl
loopne
lcall
rcll
shl
push
and
inc
lret
aas
loopne
mov
sarb
sub
fldt
je
ljmp
cld
mov
stos
bound
repnz
adc
push
dec
call
xchg
lcall
xchg
or
movsb
popa
xor
xchg
pop
pop
and
rorb
sarb
mov
mov
sub
out
pop
scas
adc
add
push
stos
out
cmpsb
mov
push
stc
mov
or
shr
xor
sub
cld
or
adc
cmc
popa
cmc
shrb
add
fdiv
xchg
outsl
in
pusha
xchg
sbb
mov
jg,pt
xchg
adc
xor
sub
out
movl
ret
cmp
jae
pop
into
hlt
push
ds
pop
sub
push
int
and
jns
dec
mull
xchg
xlat
stc
push
mov
mov
xor
inc
xchg
pop
into
pop
jo
cwtl
mov
outsb
push
loope
mov
sbb
mov
ret
divl
mov
dec
and
test
inc
inc
sbb
dec
test
xchg
xchg
pop
pushl
mov
push
and
push
cmp
lcall
ljmp
loop
mov
gs
pop
push
mov
pop
imul
xchg
enter
add
fidivl
jg
orb
push
pop
sbb
fiadds
or
inc
mov
jg
inc
inc
cmp
fwait
sbbb
lret
cld
jo
mov
pop
cmc
adc
xor
push
testb
push
mov
aad
mov
sahf
ja
idivl
dec
adc
daa
add
loopne
out
push
out
adc
jmp
sub
iret
pushf
xorl
out
rcrb
lods
pop
xor
ljmp
mov
push
adc
fcmovnbe
lret
lock
js
sub
in
call
es
xchg
mov
and
arpl
xchg
test
mov
pop
cmpsl
in
mov
out
daa
fsts
popa
out
mov
test
repnz
xor
test
popf
jge
cwtl
popf
and
movsl
int
mov
cmc
xchg
cli
xor
lods
mov
add
subl
and
sbb
xchg
cmc
rcl
mov
test
mov
add
fs
data16
adc
xor
push
mov
add
push
push
cmp
cmp
push
pop
mov
lahf
and
imul
add
dec
ja
es
loope
xchg
xor
insl
push
jae
sbb
lods
call
pop
jb
xchg
mov
add
xlat
pushf
cmp
sub
push
sbb
sub
xlat
test
sub
int
and
jne
mov
imul
adc
filds
lret
das
loopne
mov
out
into
jg
int
lods
lcall
in
inc
jns
adc
sbb
add
cmpsl
adc
jno
arpl
mov
outsb
mov
xor
and
cmc
jp
add
mov
fidivrl
out
movsb
psubq
sub
not
das
dec
cltd
stos
aas
push
sbb
es
pop
test
cmpsb
adc
lods
lea
pop
shl
icebp
dec
outsb
rorl
push
lea
int
in
out
jne
xchg
es
aam
or
mov
scas
cmpsl
scas
addb
xor
sti
pushf
inc
inc
mov
sbb
adc
push
outsl
lahf
xor
test
notb
inc
mov
cli
push
mov
add
rclb
test
pusha
mov
push
mov
sahf
aam
pop
andb
pop
mov
jo
xor
xchg
add
aas
inc
cmc
cmp
out
out
sbb
mov
push
inc
jl
cmova
popa
adc
outsb
pop
pop
inc
jns
xchg
fildll
mov
ret
xor
aam
shll
or
scas
sub
enter
adc
mov
inc
inc
pusha
aad
cmp
xor
insb
stos
push
inc
inc
lret
sbbl
add
aaa
sub
push
xlat
mov
jmp
sub
xchg
fildll
pop
cwtl
leave
jae
jo
and
loopne
movsb
xchg
adc
sti
sbb
mov
and
loope
dec
in
inc
fcmovbe
push
adc
add
cmp
inc
jge
out
cmp
ljmp
icebp
xchg
arpl
divb
pop
sbb
mov
pop
sub
jns
cmp
mov
ss
push
xchg
js
pop
out
mov
dec
loopne
sbb
and
cmp
out
fs
mov
leave
ds
add
or
and
jne
pop
cmp
dec
pop
aam
dec
push
mov
data16
jle
xor
xor
add
dec
fisttpll
fisubs
enter
sti
jae
popf
cmp
cld
in
pushf
test
int3
jno
adc
mov
stc
ss
inc
je
mov
scas
xchg
push
jge
push
int3
mov
inc
loope
roll
stc
pop
mov
call
mov
mov
and
out
dec
int3
lret
sub
adc
push
pop
daa
gs
mov
cld
jp
mov
inc
icebp
mov
sahf
movsl
sbb
shlb
jae
jns
jmp
mov
mulb
mov
or
ret
xor
mov
or
fstpt
test
pop
lock
cmp
jg
jae
js
out
push
pop
roll
repz
push
in
lods
pop
push
aas
pop
jae
fildl
mov
mov
lret
push
js
daa
aas
mov
push
dec
pushaw
clc
jnp
and
add
sbb
mov
xlat
outsl
js
icebp
inc
cli
adc
adc
pop
sahf
sub
xchg
fists
and
adc
bound
sub
mov
mov
lock
fistps
rcrb
fwait
or
lcall
cmp
rcl
pop
in
mov
les
inc
or
mov
xchg
xor
push
push
xchg
xorl
and
mov
mov
lods
scas
scas
lahf
push
push
mov
sub
sbb
mov
dec
fstpl
inc
sbb
mov
sub
jp
das
dec
adc
and
fnstenv
jmp
mov
mov
popf
cmp
repz
xchg
and
sbb
inc
push
loopne
andl
pushf
inc
fldcw
mov
bound
lret
mov
mov
push
push
rcrl
jle
outsl
stos
xor
fsubs
fs
inc
aaa
ret
jae
pop
jecxz
or
imul
in
stc
inc
inc
mov
pop
subl
outsl
mov
test
pushf
fs
lret
adc
xchg
stos
adc
imul
in
subl
jns
stos
in
dec
push
mov
adc
sbb
add
add
mov
jg
test
out
addb
add
hlt
add
add
jecxz
aad
ss
cs
test
sub
xor
mov
outsl
repz
pop
pop
or
xor
sbb
int
imul
or
xor
xchg
movsb
mov
inc
sbb
dec
in
inc
pushf
bnd
sub
test
les
mov
ficoml
sti
inc
daa
dec
repz
cltd
xchg
lds
dec
dec
inc
cmp
popa
frstor
scas
mov
xor
lds
test
sti
mov
push
cmp
xchg
or
add
fists
add
dec
rol
je
dec
stc
movl
cwtl
test
aam
test
xchg
cmp
mov
fsubp
and
jo
push
out
lret
cmc
pop
aad
add
aam
push
out
and
sbb
dec
adc
idivl
testb
sbb
cmp
cld
dec
movsl
push
lods
mov
popa
je
into
fcom
mov
or
int
add
jle
clc
es
arpl
js,pn
jecxz
jb
and
mov
mov
sbb
sub
sbb
ficoms
stos
cmp
imul
sarl
out
xchg
mov
jbe
outsb
in
cmpsb
imul
repz
dec
inc
lret
fs
xchg
int
inc
and
insb
ret
aam
add
sbb
jl
iret
in
or
fldt
fs
in
inc
stos
mov
fisttpll
lcall
push
add
adc
push
sbb
pop
lret
mov
cmpsl
sbb
cli
jecxz
outsl
add
pop
dec
test
fdivrl
mov
enter
cmp
mov
cld
fisubs
sub
jp
dec
sti
xchg
aam
push
mov
fnstsw
xchg
fisttps
test
scas
xor
into
gs
pop
pop
pop
sbb
inc
and
jmp
in
inc
jnp
add
loopne
xor
xchg
dec
cmp
push
inc
jo
hlt
testb
int3
adcb
xchg
int3
outsb
adc
and
es
sti
mov
dec
in
test
into
aaa
test
sub
fisubs
xlat
pusha
notb
pop
cld
fnsave
add
scas
je
add
jne
leave
mov
add
stos
pop
hlt
mov
xor
fadds
adc
mov
out
push
mov
inc
cmp
and
pop
pop
sbb
pop
or
xchg
test
scas
dec
js
adc
dec
fsts
mov
lret
jl
les
test
jge
ret
jecxz
fidivl
add
dec
fldcw
icebp
andl
xor
and
xchg
sbb
mov
cmpsb
push
jle
mov
jmp
mov
insb
push
sbb
pop
xchg
cmp
xor
xor
xchg
cmp
and
rclb
sbb
jne
imul
dec
cmc
lods
push
out
inc
xchg
pop
lods
pop
jns
inc
imul
mov
mov
and
cld
mov
cmp
enter
mov
sbb
push
roll
cmp
mulb
nop
ret
ss
inc
dec
adc
adc
sbb
vpaddd
xor
leave
mov
dec
pop
mov
fistps
and
int
fisubl
loope
movsb
adc
inc
adc
push
fs
dec
dec
in
mov
mov
fisttpl
stos
fs
repz
cmp
cs
in
stos
ret
mov
out
jae
repnz
and
in
xor
or
and
ficompl
sub
je
pop
lods
add
movsb
cs
es
cmp
jecxz
xchg
fcomps
scas
daa
cwtl
sbb
add
xlat
inc
ss
sub
mov
mov
stos
dec
and
cmp
cmp
test
add
lret
out
imul
xchg
ficompl
repz
call
lock
aam
xchg
call
mov
xor
pop
icebp
rcrl
lock
scas
mov
loopne
out
ficoml
dec
pop
repnz
lret
or
ret
adcb
iret
and
add
shlb
xchg
jg
jmp
sub
inc
in
into
cmp
fistpll
dec
cwtl
scas
ss
jne
add
add
mulb
repnz
out
or
jb
add
add
add
push
idivb
pop
cld
pop
jo
mov
dec
cld
cmp
repnz
incb
fisubrs
jge
pop
adc
xchg
xchg
pop
xchg
fimull
push
cmp
sahf
push
pop
dec
xor
dec
xchg
jns
test
jecxz
out
adc
add
and
pop
loope
clc
lds
hlt
sbb
mov
and
push
gs
and
jne
adc
sahf
pop
les
in
ljmp
push
dec
push
int
sbb
mov
mov
mov
ror
test
sbb
rclb
sbb
mov
lea
movsb
fnsave
inc
movsb
cmp
add
loope
lahf
inc
or
pushf
aad
mov
pop
mov
or
jge
push
sub
mov
sarb
hlt
pop
sbb
mov
loop
iret
mov
mov
and
push
inc
xor
iret
inc
ret
loope
dec
ja
xchg
cmpsl
cmpsl
iret
sub
inc
mov
ja
jae
xchg
mov
icebp
or
inc
js
jg
mov
xchg
rcrl
mov
lea
xchg
mov
xchg
decb
in
test
imul
jns
out
int3
xchg
or
outsl
adc
xchg
sbb
lods
cwtl
xor
mov
mov
js
aam
mov
add
int
mov
fadd
fistl
sbb
test
jmp
cmp
mov
adcl
mov
push
xor
outsb
jo
cmc
xchg
negb
mov
test
ficoml
lret
xor
or
jmp
shrb
call
and
mov
mov
je
stos
ljmp
pop
push
inc
mulb
notl
nop
mov
iret
scas
aad
ljmp
out
add
add
mov
call
push
push
inc
andl
xor
movsb
inc
sbb
out
stos
aas
jge
mov
jp
cmpsb
jae
jmp
outsl
inc
sbb
lahf
ret
push
mov
popf
addr16
sbb
gs
and
cli
nop
aaa
and
out
movsl
popa
pusha
mov
inc
out
or
mov
mov
fdecstp
fsubl
dec
lods
mov
fs
int
sbb
or
movsb
mov
loopne
adc
dec
pushf
nop
xchg
mov
xor
sbb
pop
je
cltd
xchg
shr
adc
dec
negb
fwait
sbb
jl
out
inc
or
adc
insb
repz
fidivs
push
in
jnp
jmp
jbe
dec
mov
and
mov
inc
inc
ds
stos
dec
jg
cmpsb
loopne
test
xchg
clc
or
cmp
shrl
xchg
rcll
jl
aam
repnz
add
aad
fidivrl
pop
mov
xor
iret
jg
push
popf
aam
int3
xchg
aas
cli
test
or
pop
jmp
icebp
aad
ficoml
push
mov
sbb
iret
xchg
sub
in
xchg
into
mov
shll
and
xchg
xchg
adc
fiadds
shlb
aad
fcmovu
dec
dec
mov
jae
inc
cld
mov
adc
cli
aad
xor
cmp
pop
push
js
xchg
pop
sbb
js
or
loop
adcb
clc
jg
dec
out
in
inc
setg
ret
jp
data16
dec
mov
js
movsb
fwait
xor
bound
push
mov
call
out
sub
sub
xor
dec
mov
and
or
inc
dec
lcall
cwtl
loope
dec
add
adc
fsqrt
mov
out
decb
cmp
xchg
popa
lods
xchg
lock
xchg
cli
cmpsl
ja
fucom
pop
sub
pop
pop
or
aad
xchg
xchg
push
sti
into
add
sub
data16
xor
xor
js
inc
popa
ljmp
repz
addr16
jno
out
pushf
xor
test
mov
xchg
loop
sbb
push
scas
mov
sub
and
dec
ljmp
cmpsb
xchg
lcall
scas
xor
mov
test
dec
out
mov
lcall
push
xchg
jg
iret
mov
lock
cmc
dec
pop
jle
and
aaa
or
cmp
mov
inc
mov
aad
sub
or
jge
mov
add
push
mov
mov
pop
sbb
inc
loop
push
pop
rorl
add
mov
mov
mov
add
paddsw
add
add
add
mov
jmp
xor
push
or
std
popf
fnsave
jne
das
pop
aad
es
xchg
sub
inc
adc
ds
sti
scas
outsb
jb
mov
sbb
xlat
out
mov
popa
pop
arpl
jns
xor
jmp
test
mov
xorb
jno
addb
movsl
insb
jmp
in
sbb
les
mov
test
xlat
jbe
fstps
add
mov
hlt
dec
ficoms
mov
sub
mov
outsb
inc
lcall
adc
mov
loope
scas
ret
pop
in
stc
dec
push
in
jle
mov
mov
xlat
xchg
in
jae
cwtl
inc
in
test
push
xor
dec
por
ss
movsb
call
shrb
push
repz
sub
xchg
iret
repz
lods
sbb
pusha
lods
add
sbb
pop
or
inc
js
jnp
pop
add
fwait
stos
leave
xchg
sbb
mov
inc
movsb
pop
xor
push
stos
mov
mov
adc
push
arpl
outsb
js
mov
xor
int
pop
sbb
mov
rclb
jnp
or
mov
adc
clc
inc
jbe
inc
push
fisubl
sbb
fcomp
fwait
mov
call
xchg
xchg
cmp
repz
sbb
xor
das
mov
repz
js
fs
push
pop
mov
mov
mov
jecxz
imul
dec
xor
in
jmp
stos
pushf
push
pusha
inc
rorb
mov
or
pop
lcall
xor
int3
mov
sbb
mov
mov
pushl
stos
aaa
mov
cmp
jmpw
sub
inc
jmp
pop
push
mov
or
movsl
dec
adc
jge
push
outsl
dec
rcr
jne
sbb
mov
sub
fimuls
pop
xchg
push
and
cmc
ljmp
std
push
mov
adc
out
and
mov
dec
bound
test
orl
jle
dec
ja
stos
out
add
aaa
xlat
push
into
xchg
iret
repz
xlat
mov
cmp
push
jo
repnz
aas
mov
jne
lods
mov
jbe
or
add
cmp
add
mov
pop
mov
in
mov
das
bound
insl
mov
xchg
cmpsl
jle
xchg
fwait
xlat
shlb
sarl
add
js
lods
enter
mov
lahf
push
lea
outsl
loop
mov
stos
xlat
imul
clc
clc
dec
and
fwait
push
es
adc
aad
or
test
pusha
sbb
inc
fstp
repnz
data16
inc
push
into
and
xchg
pop
lahf
nop
pop
sbb
mov
xor
inc
fisubrl
pop
sub
or
es
pusha
jmp
inc
cmp
rcr
mov
mov
or
mov
cmp
xor
mov
testl
fmuls
out
dec
sbb
cmp
and
dec
inc
in
dec
and
lods
int
jge
fldt
dec
xlat
lcall
ljmp
movsb
je
mov
adc
push
xor
outsb
push
xchg
fdivl
push
push
cmp
jne
jle
nop
cmp
es
cwtl
dec
mov
mov
add
mov
imul
inc
leave
push
scas
mov
neg
insl
dec
push
rclb
cmp
aam
cwtl
and
push
repz
fcoms
and
jno
push
adc
mov
popaw
popa
cs
call
loopne
ret
pop
jb
add
call
add
aas
mov
sbb
lret
and
pop
pop
xchg
lahf
inc
pushf
daa
cmpsb
sbb
pop
jmp
dec
push
out
les
out
sbbl
inc
mov
inc
add
mov
movsb
insl
add
test
fadd
mov
or
cltd
das
iret
fisubrl
xor
xor
loop
jae
cmc
bound
cmp
mov
cmp
xor
dec
and
cmpb
fwait
rcl
lods
scas
and
popl
and
xchg
cmp
lret
pushf
mov
mov
mov
shrl
test
sbb
sbb
addr16
lock
cmpsl
sahf
add
add
xchg
test
push
mov
and
int
loope
add
hlt
add
add
aas
cmp
mov
add
outsb
jae
add
adc
cmp
add
dec
xchg
jecxz
sub
or
insl
xchg
push
andl
fstpt
inc
ret
icebp
mov
test
dec
xor
add
outsl
aam
pop
sbb
cmp
stc
mov
lcall
in
sub
das
dec
xchg
test
push
inc
int
xchg
or
inc
jb
push
mov
sarb
fmul
adc
inc
pop
lods
xor
jbe
mov
mov
pop
pop
aad
jg
xor
pop
mov
pop
imull
pop
sti
loope
mov
push
sbb
jnp
ret
fdivrl
sub
adc
mov
ret
ja
mov
repnz
jns
ss
push
outsl
mov
repz
cmpsb
xor
lahf
repz
add
mov
in
filds
jae
inc
mov
rorl
lods
push
push
mov
insl
push
mov
push
loope
or
nop
mov
jecxz
lahf
lods
inc
repnz
nop
dec
imul
pop
and
int3
cmp
dec
add
std
xlat
pop
fnstcw
xchg
pop
lods
rcll
lock
nop
pop
iret
jg
cmp
aad
shrb
pop
into
ljmp
ljmp
add
aaa
aaa
int
xchg
in
inc
nop
mov
pop
push
or
fbld
inc
nop
lods
fildl
int3
mov
push
jmp
clc
sub
or
out
inc
xchg
jne
je
insl
xchg
hlt
and
sub
adc
daa
movsl
aad
xchg
xlat
push
icebp
imul
add
add
xchg
mov
xchg
shrl
shlb
lods
in
cld
data16
jno
cli
mov
ljmp
lods
mov
dec
inc
mov
movsb
aam
cmp
inc
mov
mov
cld
mov
mov
ss
and
and
dec
push
xchg
inc
aam
out
insl
imul
mov
cmc
scas
test
add
jl
jae
addb
and
out
pop
jmp
loopne
cmp
out
dec
les
or
cmp
xchg
icebp
inc
or
jmp
fsts
aad
adc
fsubr
jno
dec
jl
rolb
pop
mov
sbb
fs
lea
lret
enter
inc
add
sti
icebp
int3
add
jecxz
cmp
jbe
jge
pop
mov
jnp
outsl
xchg
mov
hlt
cmpsl
out
imul
or
mov
jae
sub
insl
loopne
negl
repnz
add
jne
repnz
inc
xor
jo,pt
sub
or
repz
inc
std
out
inc
and
imul
adc
adc
fiadds
adcl
shrb
fwait
ljmp
in
out
pop
jne
fldl
mov
cmpsl
sbb
fistpll
lret
std
inc
stos
jbe
sbb
xor
add
or
ds
xchg
fwait
mov
inc
cmpb
test
cmp
xchg
add
sarb
imul
add
inc
push
ret
stc
icebp
cs
cmp
pop
mov
into
xlat
push
not
pop
sub
push
sub
adc
bound
fbstp
and
jmp
gs
jmp
fidivrs
and
in
jl
push
pop
mov
mov
and
mov
mov
xchg
outsl
jne
dec
frstor
jecxz
pop
in
sbb
sub
addr16
inc
lock
sarb
pop
outsb
outsb
shlb
mov
in
fmuls
inc
jno
xchg
movsl
mov
cmp
lea
mov
mov
sbb
push
and
lret
jnp
imul
mov
aas
xor
lahf
xchg
sti
imul
sub
sbb
mov
outsb
gs
testl
inc
add
mov
adc
xchg
push
arpl
mov
sub
mov
imulb
stos
sarl
pop
sbb
cld
mov
lods
or
cmpl
dec
dec
jg
jb
fcomps
mov
push
xorl
cmp
and
or
negb
stos
xchg
call
sub
repz
jb
jecxz
fwait
add
mov
or
les
lock
std
lock
dec
cmp
mov
sarl
mov
mov
sahf
sbb
outsb
xchg
adc
mov
jne
lret
add
add
and
fldl
inc
sti
aas
jb
add
imull
add
hlt
add
add
fldt
mov
out
push
adc
cld
sarb
lds
rcrl
pop
jb
movsb
imul
and
scas
pop
jae
inc
scas
or
lock
mov
cmp
mov
pop
dec
int3
fbstp
or
add
pop
xor
jo
mov
mov
cmpsl
jmp
cmpsb
inc
outsb
ret
lock
mov
jbe
mov
stos
xchg
and
cmp
inc
mov
sbb
xor
adc
add
iret
xlat
mov
dec
mov
pushf
mov
les
shlb
ja
lea
inc
rcrb
add
mov
mov
fstl
push
out
fwait
jne
fsubr
lods
mov
adcl
xor
mov
int
icebp
sbb
popf
jle
icebp
adc
cmp
xchg
inc
add
insb
adcl
popf
aad
sbb
pop
js
bound
inc
testl
imull
cmp
mov
ficoms
shlb
push
mov
fiaddl
inc
sbb
sbb
repnz
ret
jl
cwtl
mov
in
push
xor
cmpsb
pop
sbb
lods
negb
repz
dec
sub
aam
mov
btr
push
dec
sub
push
loop
adc
into
repz
pop
pop
and
lret
loope
fcoms
push
pop
adc
mov
movsl
add
cmp
sbb
inc
cmp
dec
inc
loopne
pop
int3
ja
jne
ret
ret
mov
icebp
add
push
stos
jecxz
mov
pop
mov
cmpsl
aad
push
sahf
mov
and
mov
cld
fbld
cmp
jo
fcoml
in
xor
pusha
hlt
sbb
idivb
add
gs
lea
xorb
mov
dec
std
enter
push
imul
sub
sbb
imul
dec
aaa
pop
mov
movsb
ret
xlat
adc
sub
sti
fs
mov
daa
mov
ss
leave
cmp
aam
push
xor
test
leave
add
daa
add
or
cmpsl
out
or
mov
push
mov
nop
sub
or
pshufw
xor
inc
push
cli
mov
and
ljmp
jmp
pop
cltd
rorl
sbb
xor
lahf
cmp
inc
jl
inc
push
mov
outsb
cmp
js
and
xchg
and
repz
lds
in
push
lret
and
lea
aaa
mov
lret
cmc
lret
sbb
sbb
jle
in
iret
and
mov
fmul
xchg
and
es
mov
mov
push
xchg
push
cmp
leave
push
loop,pn
push
repnz
jg
data16
shrb
popa
or
inc
cmc
or
mov
aad
in
dec
dec
mov
jno
fldl
xlat
outsl
sbb
jle
mov
jmp
loope
int3
rcll
enter
js
js
sbb
inc
ja
dec
je
push
ret
sub
mov
shll
in
or
cmc
mov
fyl2x
daa
push
ljmp
nop
jnp
mov
sti
xchg
push
outsb
mov
out
cmp
pop
inc
push
rcr
das
insb
push
mov
sub
xor
mov
inc
cli
push
adc
and
pop
add
mov
imulb
sbbb
and
shr
in
dec
mov
pop
cs
cmpsl
push
mov
cmp
jne
mov
lods
addr16
add
sbb
ss
mov
test
mov
icebp
fbld
add
sar
jg
lret
test
subb
jnp
mov
iret
adc
hlt
test
in
adc
int
fwait
inc
or
lahf
xor
inc
je
sahf
inc
arpl
mov
sti
je
dec
sub
xor
and
mov
or
scas
rorb
push
mov
push
popa
or
add
xchg
imulb
cmp
adc
mov
lds
lods
push
xchg
jp
mov
cmp
stos
xchg
test
lcall
mov
loope
ret
pusha
inc
sbb
mov
xor
xor
add
add
add
mov
or
cmp
leave
xchg
add
add
add
xor
pusha
mov
and
push
sbb
xorl
fstp
es
repnz
xor
cmp
jns
inc
add
les
call
clc
adc
push
into
nop
test
fisttpl
cmp
stc
test
sbb
arpl
popf
in
mov
pop
add
push
pop
mov
pop
push
mov
sahf
int
int
into
test
movsl
lock
imul
int
lahf
dec
ja
sti
daa
mov
inc
sub
dec
mov
fucomp
pushl
nop
inc
int
push
jb
dec
movsb
inc
cmpsb
jg
test
push
xchg
andl
fildl
push
ss
jecxz
fnsave
pusha
add
add
pop
loop
mov
movsl
sub
outsl
or
sbb
stos
sub
dec
pop
insb
adc
in
mov
xchg
ljmp
sbb
jge
mov
imul
nop
jno
decb
les
mov
movsb
jecxz
xchg
dec
stos
jne
dec
mulb
fildl
cld
inc
pop
ja
loopne
das
int3
fcomps
mov
cmpsb
mov
sbb
sub
push
push
mov
int3
sbb
sbb
call
jb
dec
adc
jno
les
mov
mov
jo
mov
push
test
pushf
jl
subl
mov
dec
dec
movsl
inc
iret
and
loope
jle
xor
aas
xchg
xor
push
jnp
push
stos
inc
ds
xor
les
lds
dec
xchg
ds
xor
sub
push
mov
mov
into
lock
jo
jae
out
mov
iret
jge
or
pop
jo
adc
out
dec
pop
stos
or
cmp
sbb
fisttps
mov
movsb
lcall
sub
dec
cmp
repnz
test
lret
icebp
leave
aaa
icebp
xor
sbbb
aad
nop
ljmp
sbb
mov
repnz
and
mov
or
int3
mov
pop
dec
bound
jno
cmp
imul
add
sbb
push
pop
inc
stos
jle
es
dec
sub
jl
in
decb
dec
cli
xchg
pushf
or
jmp
es
aad
lret
and
popa
sub
leave
stos
inc
jl
stos
cli
and
inc
dec
loope
xor
inc
mov
dec
xor
aad
pop
bnd
fnstenv
sub
daa
jg
in
xchg
xchg
insl
lods
fisttps
std
mov
inc
mov
fstpt
adc
mov
dec
xchg
dec
mov
push
push
cli
mov
inc
dec
xor
xchg
repz
pop
pop
push
leave
dec
xorb
dec
les
ss
xchg
push
adc
pop
shlb
or
inc
repnz
addb
dec
cli
test
incl
mov
mov
xor
add
fiaddl
jne
jl
stos
jno
xor
into
pop
inc
fmuls
jmp
dec
fidivs
jmp
lods
cwtl
js
gs
and
insb
jb
loope
xor
aas
mov
and
out
scas
cld
mov
fisubrs
lods
jmp
dec
aam
xchg
or
dec
mov
sbb
mov
movsb
push
clc
dec
daa
jo
sahf
movb
pop
xchg
mov
mov
mov
sub
out
push
stos
xchg
jmp
push
popl
cmp
push
imul
push
test
in
cld
sbb
xor
cld
mov
xchg
push
mov
aaa
lods
xchg
or
ja
loopne
cmp
add
popa
je
imul
lods
icebp
mov
loop
lret
lds
cmc
pop
addb
add
or
imul
mov
pop
dec
push
aas
fcmovbe
std
mov
insb
stos
push
xchg
sub
push
stos
clc
fs
mov
mov
cmp
or
lods
inc
sar
dec
lods
daa
pop
cmp
sbb
add
hlt
adc
or
mov
faddl
sbb
xlat
jp
mov
sbb
mov
outsb
inc
or
outsl
das
xor
push
inc
pop
push
inc
cmp
cmp
jae
pushf
mov
jp
push
jge
adc
popa
add
cmp
jmp
les
into
add
mov
jo
cmp
jno
xchg
cmp
fisubrl
and
mov
jp
mov
repz
pop
push
cli
flds
xchg
scas
aaa
clc
lahf
test
fisubrl
mov
sti
repnz
dec
sub
arpl
ret
cmpb
js
jae
ss
add
xchg
adc
pop
mov
cmp
mov
add
add
add
jmp
hlt
les
into
xchg
imul
aam
jl
and
nop
or
js
mov
movsb
jno
out
pop
cli
out
sub
jecxz
and
jle
cmp
cmp
adc
mov
jp
push
sub
sbb
mov
add
push
int
push
mov
or
enter
dec
fdivr
pop
cs
mov
mov
lcall
into
sti
shll
or
push
cmp
dec
fdivrs
pop
repz
xchg
push
frstor
cltd
ss
imul
jle
outsb
sub
ja
test
sub
data16
xlat
mov
xor
xor
aam
ret
or
lods
mov
hlt
call
mov
gs
pop
in
xchg
rcrl
mov
and
int
das
sub
ficoms
dec
in
inc
popf
notb
dec
dec
sbb
inc
xchg
sbb
imul
inc
inc
mov
add
jno
mov
sub
add
or
inc
int3
rolb
lcall
stc
in
mov
jae
mov
cmpsb
out
push
dec
jecxz
xchg
fwait
xorb
pop
dec
das
rorb
push
jmp
iret
flds
cli
sub
or
pop
mov
addb
test
mov
dec
iret
inc
mov
xchg
dec
cmp
jp
pop
or
cld
divb
mov
mov
inc
insb
test
mov
mov
nop
cmc
aam
fwait
or
loop
xor
notl
jo
and
sub
in
adc
pop
sub
in
cld
dec
stos
pop
fsubs
rcl
in
cmp
clc
daa
push
push
sti
in
fidivl
popa
add
filds
mov
mov
push
mov
scas
or
or
mov
les
cltd
push
dec
inc
scas
aam
add
cmp
jns
or
test
xor
test
test
ljmp
imul
push
pop
fs
adc
pop
jp
xchg
mov
daa
and
xchg
add
mov
push
sbb
js
mov
and
in
fstps
mov
es
mov
dec
fsubs
mov
repz
gs
fnstenv
mov
sarb
insb
jmp
std
inc
mov
jns
jne
jg
dec
cwtl
xchg
cli
imul
rcrb
cwtl
dec
fcom
jmp
and
in
dec
fsubrp
and
mov
sub
je
pushf
nop
pusha
push
lock
loope
out
sbb
into
insl
inc
nop
insb
repz
fistpll
mov
sti
sub
xor
mov
aam
or
rcl
xor
adc
sar
jecxz
adc
add
scas
cmp
out
mov
movsb
pop
inc
sub
cmpsl
cltd
ret
sahf
nop
xor
jns
cmpsb
jle
lods
lret
in
xchg
pushf
cli
insb
dec
sub
ret
jae
mov
out
xchg
test
adc
push
mov
je
adc
pushf
ja
ljmp
dec
xchg
icebp
inc
insb
sub
and
jne
jns
lds
orl
cmp
ret
stos
cli
pop
push
je
cs
shll
push
std
xchg
out
mov
and
gs
callw
xchg
cmpsl
test
pop
jo
aam
loop
movsl
scas
or
sbb
push
ja
ret
add
jae
inc
lea
loope
ret
xchg
lea
mov
pop
movzwl
enter
adc
ljmp
push
sbb
xchg
xor
loop
and
mov
push
push
sbb
mov
aaa
mov
rcrb
rcr
and
daa
icebp
xchg
mov
mov
mov
fisttpl
mov
lcall
add
mov
fwait
aad
lock
divb
add
inc
or
pop
jae
jle
lahf
fdivrl
push
shl
dec
jns
cmp
mov
pop
pop
add
adcb
jns
push
nop
mov
arpl
xchg
arpl
add
popa
cmp
mov
mov
mov
movaps
cmp
popf
movsb
or
rcrl
test
pusha
in
jl
jnp
and
mov
lahf
lcall
sti
idivb
loop
lea
mov
mov
dec
imul
mov
test
push
fmull
cmc
dec
aas
add
add
sti
and
es
sti
std
sbb
adc
mov
nop
add
hlt
add
add
pop
daa
mov
mov
mov
clc
int3
fwait
shl
sub
in
nop
orb
mov
sub
add
push
push
test
fs
mov
jbe
jmp
inc
movsb
lret
inc
popa
filds
call
xchg
jne
clc
cmpb
daa
mov
fidivrs
adc
xor
icebp
ficoml
faddl
dec
sub
cli
aad
fwait
jmp
push
call
lea
push
or
and
inc
adc
or
push
add
mov
pop
lock
mov
addr16
push
andl
jns
lret
clc
mov
mov
adc
dec
ss
mov
aaa
xor
mov
test
and
or
jecxz
or
xlat
out
loop
pop
dec
push
loop
xor
rolb
pop
fnstenv
test
andb
or
int3
jbe,pn
jl
add
jg
jp
dec
and
xor
sub
repnz
rcll
pop
push
mov
in
xlat
in
jmp
addr16
xchg
dec
pop
jo
mov
or
test
inc
pop
lea
sahf
cs
jb
dec
sbb
jne
mov
ja
or
aaa
jg
xor
pop
or
divb
xor
cmp
push
aad
inc
shld
or
dec
fwait
push
or
push
sub
xchg
mov
pop
out
ret
aas
xor
sub
es
push
bound
push
testl
aas
lahf
sub
xchg
or
int
push
dec
inc
xor
sbb
mov
int
push
das
mov
cmpb
std
lds
incl
scas
fildl
addr16
or
cmc
dec
push
mov
aam
push
mov
cmpsb
or
cmp
ret
pop
jns
pushf
and
dec
pop
cmc
iret
adc
insb
xchg
jne
push
test
pop
cmp
xchg
sbb
rcrl
popl
lea
cmc
push
sub
out
inc
stos
or
or
and
or
lret
add
cmp
xor
insl
adc
jnp
div
gs
jecxz
dec
mov
push
out
rclb
mov
adc
sub
icebp
inc
je
cmp
push
out
push
jo
mov
mov
cltd
fisubrl
cmp
sbb
push
jns
aad
mov
adc
adc
push
pop
push
arpl
adc
xchg
push
pop
mov
push
or
adc
dec
movsb
inc
jp
jb
pop
mov
cmp
test
in
rcll
loope
mov
clc
pop
xor
iret
lods
xor
mov
xor
sub
imul
in
or
inc
out
pop
push
xor
repnz
aam
add
jg
lods
pop
daa
pop
ficoms
push
adc
add
mov
sub
jmp
rolb
arpl
stc
lods
sub
mov
ja
mov
mov
sahf
fs
inc
outsl
or
or
sbb
and
mov
adc
addl
stos
popa
ja
or
mov
sets
hlt
rolb
hlt
xor
sub
mov
outsb
repnz
loope
into
inc
stos
shlb
jne
or
mov
pcmpgtb
inc
add
loope
add
fwait
aam
xor
push
out
mov
dec
dec
into
push
sahf
or
or
gs
stc
push
mov
push
mov
pop
pop
adc
les
xor
nop
mov
fxch
ljmp
stos
js
jp
add
xchg
das
push
push
lods
pop
xor
pushf
daa
cmp
mov
out
cmpsb
jg
rcrl
aam
call
into
cs
cmpxchg
mov
jnp
lcall
int3
add
sarb
adc
aaa
dec
mov
popa
or
cmp
and
jns
xchg
popa
dec
adc
loopne
pop
xor
insl
push
xor
push
fmuls
rorb
and
clc
ret
loop
test
xor
push
mov
jns
mov
add
push
xor
xor
into
mov
sbb
movsb
testb
repz
jne
cld
call
pop
pop
cmpsl
mov
out
test
std
nop
mov
add
add
sbb
jg
lcall
in
movsl
xchg
add
hlt
add
add
stc
pop
nop
jne
ss
es
out
movsb
mov
xor
pop
mov
xor
lock
sbb
pusha
pop
push
pusha
dec
jo
xor
je
sbb
test
imul
push
xchg
popa
sbb
pop
xor
mov
das
add
and
push
mov
or
andl
andb
je
sarb
jnp
add
mov
ljmp
ljmp
sub
incb
dec
push
andb
jb
dec
xorw
mov
cmp
lods
xor
mov
push
shl
or
int3
test
jmp
pop
daa
xchg
inc
scas
mov
push
mov
jge
lcall
movzbl
mov
adc
push
test
ret
jp
stc
and
addr16
ret
loopne
movsl
ficompl
push
loopne
pop
addr16
gs
add
arpl
loopne
in
push
mov
negl
lea
pusha
xor
loope
inc
fcmovbe
jbe
adc
test
out
dec
inc
pop
inc
xor
push
mov
sbbb
dec
sbb
mov
cmp
xchg
push
nop
or
lea
fisubl
mov
xchg
arpl
cli
lods
cli
xor
lods
mov
xchg
out
sti
into
jp
std
cmp
paddb
mov
mov
mov
or
push
adc
movsl
mov
push
inc
das
jne
insb
push
loope
mov
dec
mov
mov
add
or
mov
into
cmp
xchg
and
xchg
push
push
pop
cld
mov
push
mov
stos
cmp
sbb
ds
xor
call
cmpb
std
loope
call
pop
outsb
pop
outsb
mov
and
inc
mov
ror
call
loop
mov
out
mov
and
add
scas
sbb
and
das
cmp
xchg
movsl
fstp
cwtl
pop
pop
popf
out
mov
push
or
jo
jl
jnp
mov
or
scas
lods
icebp
adc
incl
ljmp
pop
mov
sub
mov
popa
dec
dec
push
adc
inc
mov
in
mulb
repz
loopne
xor
and
movsb
mov
das
jg
mov
je
iret
lret
mov
adc
fildl
testl
pop
ret
stos
pop
inc
outsl
loop
push
mov
xor
cld
sub
mov
pusha
jp
movsl
shll
push
jnp
popl
mov
andl
lret
imul
dec
adc
shll
imul
rclb
sahf
out
cli
mov
xchg
push
mov
hlt
test
jl
or
jnp
mov
add
inc
pop
lods
sub
pop
or
jge
aam
jp
cmp
and
or
xchg
mov
cmp
daa
fucomp
xchg
aaa
xor
sbb
shrb
xor
or
push
jbe
xchg
adc
les
cli
sub
jmp
fnstsw
pop
inc
fwait
cmp
cmpsb
xchg
rclb
ss
fisubs
xchg
sub
and
fldt
fdivs
dec
sbb
cli
je
push
mov
add
xor
movsb
mov
or
mov
and
call
xchg
ljmp
push
inc
pusha
mov
xor
paddd
call
ss
pushf
lods
subl
push
xchg
testl
subl
xchg
imul
push
ja
xor
dec
pop
lods
ret
xor
mov
dec
mov
push
mov
into
jl
mov
insl
jmp
adc
ss
or
das
ja
fwait
shl
ja
frstor
mov
add
loope
test
cltd
out
mov
loop
scas
loope
loope
fwait
adc
jb
leave
xchg
sbb
mov
cltd
incl
in
push
push
push
fimull
rol
mov
sbb
cmp
lea
mov
test
jg
in
sub
pop
mov
adc
dec
dec
decl
lret
sub
mov
scas
test
decl
scas
push
testb
push
sub
rorl
dec
mov
popf
in
aad
inc
mov
lods
daa
xchg
movsb
add
xlat
or
add
add
stc
pop
sub
stos
jns
dec
sub
jmp
lcall
xchg
xbegin
inc
shll
jno
mov
mul
testb
out
aam
xchg
push
inc
xor
push
ljmp
shll
shll
sub
lds
xchg
mov
jbe
icebp
mov
push
test
das
or
pop
cmp
or
mov
mov
insl
pop
scas
adc
cmpsl
frstor
enter
ss
cmp
scas
jecxz
or
push
sbb
je
ljmp
jne
mov
icebp
push
xchg
stc
ret
outsl
pop
insl
mov
mov
sub
movsl
les
out
sub
enter
inc
jmp
lcall
loop
xor
add
lds
cmp
or
stos
in
jmp
rcll
lods
add
xor
xor
js
rcrb
mov
cmp
pop
cmp
cltd
cmpsl
mov
mov
jnp
jecxz
jmp
inc
popf
jbe
dec
imul
pop
dec
dec
cmpsl
shrl
jmp
repnz
xchg
lea
popf
xchg
in
shrl
xchg
mov
into
push
mov
fisubrs
push
cmc
adc
not
xchg
loopne
mov
daa
add
aas
addr16
ds
pop
mov
xor
or
mov
inc
mov
pop
nop
jecxz
fs
pop
dec
nop
pop
imul
pop
push
mov
fimull
mov
jmp
or
lods
data16
cmp
sbb
out
repnz
shlb
pop
sub
lds
xchg
mov
mov
and
std
or
loop
adc
movsl
add
sahf
out
xchg
pop
mov
into
dec
ret
in
push
push
mov
or
scas
cld
lahf
lret
clc
cmp
nop
inc
mov
or
pop
dec
out
lock
push
dec
bswap
dec
dec
gs
and
mov
dec
mov
cmpsb
inc
divb
jb
push
les
push
dec
int3
daa
pop
data16
fcom
lods
or
aad
jno
cwtl
jg
sub
setg
stc
mov
lds
xor
sti
jge
int
push
mov
orb
ror
outsb
sub
movb
sbb
xor
aas
sub
sub
mov
pop
sbb
push
mov
mov
or
xor
inc
jns
adc
mov
scas
inc
arpl
dec
subl
dec
aas
cltd
jo
movsl
mov
repz
sub
leave
push
push
dec
inc
push
fcoml
int
jne
sbbb
hlt
or
inc
inc
mov
div
ret
imull
cmpsb
pop
mov
mov
push
cmp
xchg
adc
push
ret
mov
push
jnp
pop
xchg
push
daa
pop
cmp
fidivrs
aaa
xor
aaa
lea
fs
pop
push
add
xchg
orl
xor
add
lret
insl
clc
lret
jae
cltd
mov
outsb
jp
adc
jno
std
lods
fs
cmp
mov
pop
test
lds
in
mov
pop
sub
dec
adc
movsb
call
xor
mov
dec
cmp
fwait
outsb
jmp
test
pop
imulb
push
mov
or
cwtl
loopne
iret
jmp
pop
repnz
repz
cmp
out
xchg
addr16
pop
xor
jne
sub
or
adc
test
flds
dec
test
jae
jbe
mov
pop
dec
cmc
xor
sub
sbb
pop
clc
daa
repnz
inc
shrl
lahf
or
sbb
inc
in
bound
sub
sarb
inc
das
cmp
pop
pusha
inc
xchg
call
mov
popf
pusha
ds
cltd
fimull
inc
mov
into
lea
push
std
xchg
sub
sbb
call
xlat
and
stc
jbe
fbld
cmp
je
mov
test
add
loope
mov
shrb
imul
daa
es
nop
lret
iret
mov
outsb
test
stos
loop
out
add
cmp
mov
dec
cmc
dec
fistpl
mov
cmp
lret
cmp
adc
lods
movsl
or
ret
push
cltd
adc
mov
xor
shl
and
pusha
and
test
mov
and
inc
pop
xchg
js
mov
jb
add
mov
adc
and
mov
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
add
and
iret
test
dec
test
addl
ljmp
cmpsb
mov
push
scas
xchg
mov
mov
in
jmp
test
jp
addb
inc
outsl
repnz
pop
je
ror
stos
xor
sbb
xchg
lock
lahf
insb
pop
push
lods
sbb
sbb
adc
mov
and
pop
in
lret
scas
arpl
in
daa
in
mov
mov
push
cmpsl
lret
sar
mov
mov
pop
cmp
mov
xchg
and
cld
sbb
test
cld
xor
ja
jne
xor
cmp
or
jb
jge
ss
inc
or
mov
sbb
and
push
mov
loopne
jecxz
xchg
ja
out
sub
mov
inc
fsin
sub
testb
ficompl
xchg
out
sbb
ds
add
lret
cmpsb
outsl
add
mov
aaa
in
dec
scas
bound
das
repnz
xchg
sbb
loope
lahf
jmp
xchg
pop
mov
call
adc
gs
sarl
xchg
sbb
into
out
jae
xchg
and
cmp
adc
in
sub
push
mov
or
into
xor
jns
push
les
and
nop
jp
jns
sub
cld
cmc
cmc
xchg
xchg
loop
sarb
das
sar
test
outsb
stos
mov
gs
cwtl
nop
movsb
xchg
push
pop
sub
ja
pushf
clc
jbe
mov
fdivp
sarb
lret
clc
pop
and
rolb
loope
or
add
mov
push
cmc
mov
popa
pushf
xchg
cli
dec
cmp
mov
sbb
faddl
pop
jbe
sbb
cmpsl
sub
cmp
mov
cmpsb
mov
xorb
int
fmull
sub
sub
xchg
add
mov
test
push
sub
pop
sbbb
shrl
repz
dec
xor
es
sahf
inc
outsl
push
jl
push
sbb
pop
mov
ja
sti
push
jp
mov
dec
vpcmpgtw
pop
loop,pt
adc
bnd
mov
adc
mov
scas
aam
dec
mov
or
pop
cmc
cli
sub
daa
adc
or
outsb
jns
hlt
mov
mov
push
in
xor
nop
push
je
imul
shrb
pop
jae
nop
int3
cltd
adc
int
jbe
jae
lcall
mov
adc
dec
pop
mov
dec
adc
or
sbb
stc
jo
jae
xchg
push
jne
test
fnop
imul
out
mov
ret
sub
les
sbb
ds
adc
cli
jns
xlat
mov
cmp
in
add
jnp
je
shlb
pusha
lods
dec
loope
sbb
or
adc
out
adc
mov
pop
and
int3
cltd
xor
and
lds
dec
test
inc
mov
int
movsl
int
and
pop
icebp
loop
jl
gs
adc
mov
adc
xchg
pop
inc
enter
fidivl
dec
sbb
lret
stc
mov
pop
fisubl
cld
pop
ret
jne
fs
stc
orl
or
movsb
sahf
or
shl
dec
push
mov
mov
adc
dec
lods
mov
cli
shrl
adc
insl
jb
loope
cld
insb
pop
pop
push
cmp
cwtd
das
jbe
repnz
pop
mov
in
insb
lods
rcrb
lock
orb
xchg
push
rcl
adc
pop
das
sub
je
inc
icebp
cltd
jmp
sub
stc
fwait
das
fists
lock
insb
mov
jecxz
xchg
sub
sub
imul
dec
dec
ss
lret
jb
xchg
jae
in
jae
in
fdiv
pushl
rcrb
and
pop
dec
mov
cli
loopne
mov
std
push
data16
in
mov
mov
pushf
flds
and
in
pop
scas
sbb
push
xor
xor
mov
insl
mov
push
inc
in
xor
out
ret
jo
test
inc
xor
mov
mov
int3
bound
xor
movsb
cli
xor
adc
and
adc
wbinvd
xchg
push
insb
pushf
push
push
mov
xchg
cmpsb
sbb
xchg
in
aad
mov
sbb
mov
fs
sub
adc
int
int3
lret
and
push
pusha
push
sbb
addr16
inc
imul
ficompl
jne
jg
js
push
push
add
add
add
hlt
push
ljmp
sub
cmp
andl
mov
and
lahf
int3
sub
int
mov
adc
pop
lds
bound
in
mov
das
repnz
sarl
dec
nop
jae
in
mov
add
ret
leave
mov
addl
inc
lret
dec
in
cmc
lods
movsb
sbb
mov
fcom
fisubrs
xlat
scas
jae
nop
int3
popf
inc
dec
fidivrs
daa
pop
stos
inc
stos
repnz
pop
insl
cmpsl
insl
dec
jecxz
cmc
dec
repz
out
jle
inc
sbb
sub
or
ds
sub
mov
ret
daa
mov
adc
outsb
adc
cs
aad
mov
or
aad
iret
insb
and
and
fs
test
cmp
jb
and
test
mov
inc
out
push
add
jp
cmp
sbbl
push
enter
xchg
cmpsl
call
adc
cmpsb
stos
adcl
hlt
fldenv
fsubl
adc
and
enter
inc
pusha
clc
adc
cmp
xor
aam
loope
xchg
dec
cs
mov
pop
aad
sub
cmp
test
push
movsb
inc
pop
lahf
rclb
dec
in
bound
or
sub
fidivrl
sbb
sti
mov
xchg
notb
dec
mov
push
add
cltd
dec
arpl
lea
repz
mov
imul
test
loop
sbb
hlt
cmp
sysenter
push
push
sbb
sbb
popa
ja
ja
shrb
jge
hlt
lds
fbld
mov
std
jle
insl
inc
cwtl
cli
sub
pop
aad
out
xlat
les
imul
mov
adc
ljmp
enter
bound
or
fistpl
mov
cmpsl
mov
mov
stos
inc
or
or
xchg
in
mov
xchg
xlat
sub
mov
stc
int
cs
sbb
notl
movsl
je
imul
fisttpl
les
ljmp
pop
sbb
leave
arpl
push
pop
xlat
push
inc
and
pop
sbb
jl
icebp
mov
pop
test
push
or
dec
pop
ja
cli
xchg
repnz
jg
jmp
and
ss
fdivs
cmp
int3
es
icebp
sub
in
and
cltd
sbb
repz
mov
push
enter
mov
cmpsb
and
out
shlb
dec
mov
daa
fcoms
adc
std
movsl
sub
inc
stc
pop
jp
lods
xor
pushl
sub
repnz
xor
in
inc
mov
out
fimull
fcom
add
lea
mov
mov
xor
aam
mov
sub
stos
mov
pop
lret
mov
cmp
adc
push
push
addr16
shl
cmp
ss
fadd
lahf
push
popf
inc
sarl
js
rclb
in
and
hlt
jle
adc
push
mulb
movsb
xchg
rolb
stos
sbb
test
mov
aam
push
mov
adc
push
jp
clc
xor
int
pop
xlat
mov
std
shll
mov
mov
dec
push
outsl
add
or
mov
arpl
scas
mov
pop
mov
xor
sub
movsl
jne
or
push
push
mov
sub
sbb
aaa
ret
xorl
mov
inc
addl
mov
aas
test
les
push
dec
xrelease
mov
mov
pop
cmp
sub
stc
mov
push
add
out
mov
in
movsl
icebp
mov
insb
enter
inc
dec
aam
and
shll
xchg
int
pop
and
ficoml
xor
pop
jp
mov
icebp
dec
cltd
jno
frstor
outsb
push
push
lret
out
sbb
fsts
push
adc
add
sub
jge
ds
jge,pt
cmp
xor
dec
jns
mov
dec
stos
sub
sbb
out
ror
cmpsb
mov
lcall
cmc
ret
ja
daa
scas
sbb
icebp
pusha
sbb
pop
xchg
xor
mov
mov
lock
les
lock
mov
push
or
jle
mov
sub
mov
pop
dec
mov
dec
pop
negl
cld
out
test
jp
gs
sub
je
mov
in
das
mov
in
andl
add
add
pop
test
aam
lahf
pop
dec
sar
adc
push
jne
add
hlt
add
add
add
fdivs
jmp
testl
lret
out
out
testb
cmp
mov
je
pushf
imul
xor
jbe
cli
clc
adc
adc
jbe
test
inc
mov
jg
notl
inc
test
js
test
push
jge
ret
sub
mov
dec
and
aad
insl
in
addr16
je
fnstenv
pop
stos
pop
lock
pop
movsb
lcall
add
mov
iret
inc
fcmovne
cli
push
sub
push
int
push
scas
inc
lcall
es
or
pop
dec
xor
jns
pusha
and
ds
scas
lods
imul
insl
mov
cmpsl
cs
or
outsb
imul
mov
and
lret
cmp
jle
call
pop
adc
lret
mov
outsl
pop
dec
in
xchg
push
jg
jmp
pop
jmp
xor
scas
xchg
xchg
cmp
lods
data16
mov
bound
adc
cmpsl
cmpsb
arpl
sbb
cs
dec
stc
hlt
push
movsb
aas
xor
lods
xor
mov
and
jnp
cld
xlat
cltd
les
loopne
popf
xor
stos
ss
std
push
lea
imul
push
filds
sbb
rcll
add
notl
and
xchg
out
sub
pop
addr16
fsubs
mov
fnstenv
jo
mov
int
je
mov
add
in
call
jecxz
idiv
js
mov
bnd
sub
mov
add
cmp
cli
or
jge
test
mov
cmc
push
fisttpll
pop
adc
xchg
in
rcrl
mov
cmpsb
lock
mov
jo
cmp
in
dec
fmulp
dec
rclb
jl
xchg
mov
mov
dec
push
loop
inc
js
rcll
adc
wrmsr
lret
cmp
clc
call
fcoms
and
or
xchg
insb
fdivr
sbbb
xlat
pop
pop
in
popa
repz
iret
mov
push
mov
sub
andb
bound
popa
mov
out
lahf
shll
mov
jae
sub
popf
dec
pop
or
cld
mov
popf
adcb
out
fidivs
adc
mov
inc
dec
add
mov
push
ja
scas
lods
pop
les
stos
into
mov
xchg
std
jmp
xchg
sahf
negb
stos
sub
lret
mov
loope
push
les
cmp
outsl
mov
jnp
loop
lea
test
bound
jno
std
in
fidivs
in
movsb
inc
stos
and
lods
mov
leave
fadds
dec
push
into
cmp
loopne
cli
adc
das
xor
fwait
jnp
mov
xchg
ss
pop
fsts
jno
jg
lods
movsb
aad
xchg
lds
sub
xchg
shll
xor
inc
fadd
dec
and
inc
mov
je
cmpsl
lea
ret
das
cmp
mov
test
and
push
cltd
jne
fsubrs
sbbb
dec
mov
int
icebp
mov
xlat
loop
fmulp
cmpsl
mov
lret
dec
sahf
or
repnz
adc
mov
test
in
add
iret
rorl
lock
pop
mov
mov
inc
mov
and
mov
add
hlt
sub
daa
sub
mov
sbb
aas
es
movsl
cli
test
pop
rolb
adc
add
pushf
inc
in
lea
mov
bound
pop
cs
mov
pop
cmp
mov
dec
scas
add
aad
test
aam
lret
adc
je
mov
notb
lcall
bound
xor
xchg
jecxz
jl
addb
push
int3
cli
clc
in
pushf
jge
mov
out
stos
mov
ds
repz
and
mov
ss
sbb
pop
xchg
add
mov
test
mov
popf
cmpsl
aas
lds
aad
cli
sub
push
mov
mov
lea
sbb
movsl
adc
sbb
sub
add
add
cmp
pusha
ljmp
jle
fstps
fstps
bound
cld
pop
iret
sbb
leave
pop
sub
ret
rcrl
icebp
mov
shlb
iret
cmp
fwait
inc
and
sbb
pop
sub
cli
mov
popa
orb
dec
mov
lret
mov
or
inc
imul
in
insl
cmp
mov
add
inc
int3
mov
pop
jp
jge
cltd
inc
rorb
adc
fists
sahf
adc
insl
pop
xchg
cmp
or
cmp
cwtl
mov
incl
sbb
pop
mov
sbb
dec
and
insl
inc
jb
mov
testl
roll
arpl
in
and
pusha
mov
imul
push
icebp
arpl
mov
push
adc
insl
gs
call
mov
pop
inc
sbb
sub
mov
in
jns
rcrb
cmc
shlb
sahf
mov
in
js
insl
push
shrb
fsts
push
add
mov
leave
or
or
xor
mov
xchg
movsl
push
mov
lahf
pusha
jp
addr16
icebp
xor
adc
les
lock
cmp
xchg
or
adc
jne
dec
pop
out
lods
or
in
je
lret
mov
push
mov
jmp
mov
das
and
cwtl
iret
or
aaa
push
inc
cld
sbb
xorl
icebp
stos
loop
jmp
jl
jno
jae
lret
int
stc
xor
sub
stos
rolb
scas
jb
xorb
fisttpll
divb
pop
fistpll
cmp
xor
sub
scas
ljmp
mov
outsb
clc
cwtl
push
in
and
mov
daa
lcall
mov
rol
loop
rorl
jne
loope
loopne
loopne
xor
mov
imul
xchg
testb
cs
das
iret
xlat
and
push
loopne
nop
out
adc
adc
cmp
inc
addr16
sahf
jb
mov
and
cmp
mov
movsb
inc
pop
xor
les
cmp
jns
or
jne
loop
popf
pop
aam
and
xchg
lea
or
movsb
nop
out
push
xor
cwtl
inc
inc
mov
pop
pushf
sti
js
xor
dec
xchg
xchg
scas
sub
mov
in
das
xchg
cmp
dec
add
fsts
arpl
fdivrl
mov
add
mov
stos
ds
daa
adc
aaa
and
cltd
mov
cwtl
outsb
bound
ljmp
scas
sbb
ret
dec
inc
mov
mov
mov
or
es
into
repnz
cltd
or
inc
adc
lock
inc
ret
lret
mov
push
cs
fstpl
lds
testb
fildll
jge
jns
add
std
cmpl
test
gs
mov
popf
mov
push
mov
push
cmp
dec
or
push
pusha
test
add
jne
testb
sub
jae
xchg
jle
outsl
push
push
mov
pop
sbb
mov
inc
daa
inc
mov
mov
jnp
sub
sbb
fwait
sub
push
mov
lock
shlb
in
xor
sub
add
inc
inc
fisubrs
sub
push
push
sub
sti
sbb
lea
pop
out
inc
inc
aas
fiadds
ja
mov
xor
stos
loop
repnz
jmp
jg
cmp
sbb
loopne
cltd
cld
cwtl
pop
push
jb
add
mov
mov
jp
cmpsl
sbb
xchg
inc
jmp
sub
adc
daa
insl
jg
jl
pop
xchg
test
jl
xor
or
dec
je
and
aas
out
jo
push
lcall
dec
mov
jo
rclb
sub
adc
sub
out
insl
mov
pop
icebp
mov
dec
cmp
cmp
dec
mov
test
add
xor
jbe
mov
negl
mov
jbe
mov
push
jge
mov
mov
iret
stc
dec
mov
add
push
sub
cmpb
mov
jno
and
mov
pop
mov
and
iret
iret
jae
and
fisubrs
ficoml
orb
jns
fs
movsb
loop
outsb
andb
js
gs
out
or
or
dec
test
mov
ja
mov
movsl
inc
push
loope
jp
push
fisttps
jmp
jmp
cmp
sbb
cmp
notl
pop
jp
dec
gs
mov
adc
xor
lods
cwtl
hlt
add
add
inc
xchg
daa
cmp
mov
and
pop
mov
add
add
add
inc
daa
repnz
lea
ljmp
dec
pop
mov
add
lds
add
iret
jl
jbe
out
xchg
adc
repnz
pop
xorb
jnp
ljmp
pop
push
jp
dec
dec
push
fldenv
pop
mov
push
fiaddl
xchg
jo
inc
jo
inc
and
lret
adc
xchg
aaa
xchg
out
aad
and
in
or
inc
adc
fidivs
mov
inc
mov
gs
lods
divb
sbb
je
pop
pop
pop
cltd
add
mov
fidivs
jmp
scas
les
jb
stos
mov
outsl
fwait
test
sbb
pop
mov
fldcw
push
in
test
jge
and
lods
and
sbb
lcall
insb
jb
stc
sub
dec
fnstcw
pop
repnz
aad
addr16
or
and
sbb
scas
sbb
cmp
or
sete
aad
test
cltd
xor
sub
ljmp
outsl
cmp
ror
dec
jbe
nop
or
sub
add
pop
cmp
push
sub
data16
iret
and
iret
dec
pusha
push
incb
xchg
jno
inc
dec
ffreep
fcmovnu
or
fwait
sti
call
inc
lods
sub
jp,pn
movl
inc
test
jge
inc
out
out
sub
idivl
mov
mov
aad
fdivp
lods
lods
mov
sub
add
mov
or
fdivrp
mov
les
cmp
lret
xlat
pop
sbb
loope
jno
jns
inc
js
xor
xchg
movsl
dec
gs
es
adc
cltd
cmpsl
cmp
aam
inc
dec
xor
bound
cwtl
and
jnp
mov
push
aaa
pop
bound
jne
aas
addr16
mov
ljmp
jecxz
sbb
xor
dec
sbb
sbb
repnz
loop
xchg
nop
inc
mov
mov
sub
mov
sahf
xor
push
sbb
push
sub
adc
adc
loope
sbb
xchg
ret
mov
add
je
jne
lret
mov
sub
jno
rcl
push
cmp
cld
dec
popf
pusha
mov
sbb
movsb
push
mov
cmp
cmp
in
pop
pop
pop
and
rol
aad
fdivs
data16
ror
ds
std
out
adc
jbe
test
insl
cmc
loopne
iret
cmpsb
mov
jbe
sub
jl
hlt
das
cmc
nop
addb
rcrb
push
xor
xchg
xchg
loope
ss
clc
jo
sbb
cs
int
cmp
dec
xor
loope
or
jmp
icebp
cmpsl
mov
je
mov
lds
jmp
out
sarl
jbe
cltd
popa
cmpsb
and
sahf
cltd
sarl
push
out
xchg
sti
ret
insb
jns
dec
jle
cli
fnsave
mov
pop
pop
loopne
cmp
adc
pop
repnz
mov
je
xor
xor
imul
sub
imul
movsl
leave
inc
sahf
test
fwait
jbe
mov
call
push
pop
lret
and
mov
jne
popa
movsb
testl
mov
test
hlt
test
test
divl
inc
into
in
push
jnp
xorl
incl
adc
pop
sbb
dec
std
lahf
loopne
lret
ljmp
sbb
filds
mov
pop
jns
inc
lahf
icebp
adc
lret
fimuls
ss
test
mov
in
cmp
repnz
fld1
jo
leave
and
push
lret
ds
enter
sarl
or
shll
mov
fwait
out
fs
mov
inc
repz
or
ljmp
inc
fs
ljmp
push
cmp
fidivrs
adc
fadds
and
jne
dec
bswap
add
xchg
mov
int3
out
fidivrl
adc
and
sbb
ror
inc
dec
frstor
das
xor
je
cmc
adc
and
les
lea
sbb
pop
mov
test
and
dec
stos
daa
pushf
xchg
sbb
mov
sbb
rorl
push
or
sbb
xor
pop
insw
add
jo
sub
daa
outsb
and
pop
out
mov
jecxz
addr16
mov
xchg
xchg
sub
sbb
mov
jmp
fwait
mov
add
add
clc
data16
mov
out
fisubl
mov
add
movsl
adc
sub
and
adc
jbe
scas
adc
sub
sub
iret
pop
pop
inc
xor
popf
xorl
lods
fimull
gs
mov
movsl
test
mov
dec
xor
sub
stos
cwtl
pushf
out
test
rcll
pusha
iret
gs
or
xor
test
and
mov
dec
lret
mov
fwait
into
mov
jae
loope
or
adc
iret
rcl
xchg
mov
jo
fwait
out
push
xchg
push
and
adc
int
in
mov
das
or
push
or
idiv
insl
insl
mov
pop
cltd
and
push
out
push
mov
les
sub
adc
int
jb
inc
in
arpl
xor
jp
add
adc
sbb
enter
cmc
es
mov
inc
dec
mov
sub
mov
mul
pop
inc
xlat
add
lcall
imul
push
cltd
sbb
mov
fwait
ja
scas
ss
mov
stc
sbb
aas
lret
addr16
inc
scas
lea
push
sbb
lods
outsb
mov
fnstsw
enter
adc
push
sub
lret
add
jp
sub
add
movsb
cmp
lret
mov
out
dec
loope
arpl
test
xor
leave
loope
xchg
pop
int3
fcom
pushf
out
xor
sbb
and
mov
cmp
and
pusha
das
pop
xchg
lock
mov
stc
lret
outsb
xchg
or
adc
fdivl
cmpsb
ret
insb
imul
sti
roll
cli
sub
cmp
mov
mov
or
daa
rorl
dec
xchg
rorl
push
add
gs
and
cmpsl
cmp
fmull
gs
cmp
outsb
shll
bound
leave
test
cmp
sbb
mov
xor
mov
and
lret
test
adc
fiadds
nop
lcall
mov
xor
fists
test
add
sub
sub
pop
jmp
sub
or
xor
dec
jle,pt
hlt
bound
mov
cmp
push
rcrb
inc
or
mov
push
xchg
jecxz
mov
xor
dec
push
dec
sub
mov
sbb
mov
rcll
in
repnz
ret
pop
lds
pop
pop
push
pop
in
int
jmp
mov
ficoml
add
pushf
push
sub
in
out
add
jle
mov
sub
insb
fbld
std
xor
mov
in
xacquire
popf
add
add
jbe
pop
scas
in
ss
jbe
jmp
cmp
pop
sbbl
add
pop
sti
pop
lret
das
xor
daa
add
mov
scas
aam
lock
jb
aas
lahf
mov
mov
mov
inc
xor
and
stc
sub
stos
lcall
mov
es
xorl
add
sub
test
jge
add
add
mov
mov
and
lods
les
test
sbb
push
cltd
fwait
arpl
dec
js
shlb
xchg
dec
out
imul
mov
cmp
pop
adc
sub
jmp
ds
jl
xlat
stos
push
test
aas
pop
cmp
add
jge
dec
pop
sbb
cmovae
daa
sub
dec
adc
imul
out
outsb
aam
loope
xlat
out
xchg
inc
jecxz
and
mov
pop
bound
pop
popa
mov
lcall
imul
test
sbb
xchg
push
sub
xor
dec
rep
mov
sbb
fwait
xchg
stos
jmp
adc
jno
xor
aas
cmp
call
pop
dec
or
or
jp
cmpl
inc
shl
mov
mov
push
pop
and
pop
sub
ljmp
mov
iret
mov
ja
or
add
loop
icebp
push
lock
jb
inc
dec
mov
sub
adc
pushf
pop
xchg
repz
pop
inc
ficomps
jg
adc
xchg
xchg
push
sbb
cmp
aas
or
inc
shr
pop
andl
pop
xrelease
push
stos
mov
cwtl
push
repnz
add
add
sub
iret
cmp
outsl
jecxz
push
insl
jle
inc
cwtl
inc
mov
add
pop
icebp
ljmp
clc
mov
fildll
jle
nop
data16
jo
cmpsb
mov
out
aad
lea
sahf
repnz
mov
hlt
and
aaa
cmpsb
dec
mov
fwait
mov
cmp
and
mov
bound
mov
test
sbb
adcl
icebp
es
call
cmp
imulb
inc
loope
cmp
enter
jbe
jb
enter
test
xor
xor
or
mov
xor
add
stc
mov
adcb
addl
loop
pop
sbb
cltd
lods
hlt
pop
out
repnz
ljmp
jnp
mov
fildl
data16
dec
cmpsb
inc
mov
cmc
sub
test
dec
adc
xlat
jae
xchg
add
fs
rcrl
xchg
or
sar
aaa
jbe
sub
inc
lods
mov
aas
cmp
dec
push
iret
mov
dec
notl
and
int3
out
ja
xor
pusha
dec
clc
inc
sub
sbb
dec
rorb
inc
pop
inc
mov
rcl
stos
add
dec
fnstenv
in
xchg
push
mov
xor
dec
sahf
lcall
adc
fwait
iretw
popf
jno
pop
mov
nop
mov
imul
andb
jp
mov
inc
stos
mov
out
es
jle
or
rorb
pushf
repnz
dec
inc
mov
pop
leave
sar
js
inc
outsb
lcall
jge
out
js
mov
in
cmp
add
loop
add
pop
ljmp
inc
push
idivb
shlb
fsubl
jl
roll
push
sub
adc
nop
pop
cmpsl
iret
idivb
outsb
outsl
lock
or
test
mov
sahf
inc
cmpsb
inc
xor
seto
sti
rolb
cs
decb
std
arpl
fistl
mov
aas
pop
pusha
cmp
mov
jp
jno
mov
ret
repz
adc
pop
test
xlat
les
jne
adcl
dec
leave
push
xchg
pop
xor
add
adc
or
repnz
test
gs
sti
in
ja
fs
aaa
js
test
xchg
add
loop
xchg
shll
ss
fldenv
insb
sub
bnd
push
roll
cmp
push
add
orl
cli
cmp
add
mov
das
inc
lret
icebp
adcl
aam
fmull
bound
sub
or
push
mov
sub
icebp
xchg
dec
adc
xchg
imul
in
add
daa
lahf
xchg
or
in
sbb
aam
clc
arpl
pop
push
rep
xorl
inc
ret
test
shl
push
inc
xchg
popf
or
push
mov
int3
sub
lcall
sbb
adc
lahf
or
pop
push
dec
imul
dec
popf
orl
popa
xor
ja
push
inc
inc
call
movsl
loopne
dec
das
fcomip
mov
cmp
push
int3
ficoml
in
push
in
mov
call
xor
lock
movsl
ret
adc
scas
in
test
ret
cmp
adc
sbb
je
pushf
repz
sub
jo
sbb
jnp
mov
aas
adc
cmp
push
adc
sbb
imul
popa
in
cli
nop
jb
jp
std
aad
dec
xor
nop
xchg
test
pop
icebp
sarb
jbe
daa
jl
pop
xor
sub
cmp
repnz
shrb
push
outsl
push
and
ljmp
repnz
rcr
lea
mov
andb
cmp
jl
push
adcb
pop
les
or
stos
sub
or
jle
js
cmp
mov
pop
addr16
pop
jg
xchg
rcl
pop
notb
out
mov
add
mov
rcll
out
lahf
jmp
and
and
push
xor
mov
rolb
lock
insb
fs
inc
cmp
adc
sbb
jge
cmp
out
incb
jle
inc
out
clc
hlt
pop
pop
fistpl
xor
mov
ret
pop
sub
pop
mov
jb
fs
data16
movsl
dec
ret
push
push
jl
leave
fisubl
inc
sbb
aam
lods
cmp
or
scas
mov
fldl
das
cltd
mov
jo
les
xchg
clc
dec
stc
movsl
cs
cmp
fwait
out
bound
add
add
lea
imul
fcmovnb
inc
adc
lods
cmp
add
hlt
add
add
xchg
clc
push
jne
aas
cmc
popa
neg
or
daa
or
cltd
add
aad
popa
lds
scas
mov
mov
add
jg
pop
ficoml
rcl
push
and
sub
mov
fwait
pop
fistl
es
imul
out
aad
iret
cli
jecxz
push
mov
insl
es
mov
mov
mov
pusha
ret
mov
mov
fcompl
dec
idivl
pop
mov
xchg
jle
outsb
aam
xor
lds
in
inc
test
sbb
jae
cld
push
es
mov
out
out
lret
subl
sbb
or
add
call
mov
sahf
stc
xor
jne
pop
pop
outsb
jmp
mov
sub
inc
shl
push
fsubs
stc
adc
sub
je
mov
add
and
inc
fadds
and
jle
out
jecxz
pop
pop
push
xchg
mov
sbb
aam
inc
cmpsb
xor
mov
push
cmp
push
dec
mov
jbe
aam
mov
mov
mov
xor
leave
sub
bound
sbb
fdivrl
mov
dec
out
ror
push
cmp
cwtl
lea
rolb
pop
mov
jecxz
aad
cmp
push
insl
adc
aad
cmp
push
pop
mov
sbb
or
gs
cmpsb
adc
jg
shll
xchg
inc
shrb
cli
inc
fisubrl
xchg
sbb
int3
out
imul
dec
pop
sub
jnp
sub
outsl
lods
pop
imul
cli
mov
mov
sbb
pop
sahf
xor
cmpsl
xchg
imul
adc
dec
mov
int
aas
es
adc
enter
int
push
add
int
sbb
pop
xchg
push
sahf
xchg
mov
cmp
insl
test
push
sbb
xchg
xor
adc
test
std
jb
in
mov
cs
data16
jmp
fs
mov
sarl
sbb
imul
mov
outsb
out
xor
pop
arpl
sub
fsts
cltd
cli
mov
sub
es
push
adc
dec
lock
leave
mov
call
sti
aaa
cmpsb
push
sahf
rclb
xchg
std
lret
jno
pop
jae
inc
push
lret
push
mov
jnp
arpl
pop
mov
or
cltd
test
scas
jp
dec
pop
xchg
adc
lods
imul
aas
sub
fwait
push
mov
popf
int3
mov
mov
and
lods
mov
mov
mov
lock
test
push
xor
push
sbb
aas
pop
add
xor
inc
or
test
xchg
ret
push
add
enter
popf
add
lea
inc
clc
fnstenv
ret
iret
sbb
push
inc
lret
pop
popa
ss
pop
insl
mov
push
jb
fdiv
push
cmpsl
dec
out
push
xor
dec
movsl
fisubrl
pop
loop
push
cmpxchg
loope
loope
lea
shrl
jge
or
in
aam
iret
or
iret
lods
pop
adc
mov
mov
jp
sub
xchg
add
cmc
cli
cmp
jg
incl
dec
cmpsb
imul
jmp
adc
lds
adc
push
pop
mov
pop
movsl
cld
mov
sbb
xchg
sbbl
lcall
movsb
xchg
mov
mov
push
rolb
or
jno
sub
ss
push
push
sbb
sbb
jl
gs
mov
adc
iret
jmp
out
jle
add
ja
dec
outsl
lret
dec
repnz
sar
arpl
in
rclb
mov
xor
jmp
lods
push
push
popa
dec
push
rolb
add
mov
sbb
mov
mov
movsl
push
icebp
jbe
push
mov
mov
je
loopne
je
push
xchg
aam
ret
xchg
scas
sahf
or
dec
shlb
jbe
int
bound
int3
cli
aad
cltd
adc
mov
imul
movsb
jl
andb
loopne
pusha
lock
int
push
cld
fcoms
out
mov
jle
orb
sarl
or
mov
sbb
jne
shlb
and
out
add
sub
dec
stc
dec
inc
mov
jno
adc
jbe
push
fdivr
in
scas
ds
and
mov
fbld
add
bswap
test
dec
or
mov
add
add
add
or
inc
out
xor
adc
rcr
negl
cmpsl
xchg
icebp
push
mov
sbb
mov
xor
push
movsb
mov
xorb
inc
dec
mov
das
je
fwait
outsb
mov
jno
push
xchg
and
in
jmp
pop
cmpsb
jno
mov
lcall
push
dec
jb
push
cmp
lods
adc
jns
adc
pop
shlb
xchg
add
inc
mov
or
jno
xchg
lret
push
mov
xchg
dec
mov
sbb
jmp
hlt
mov
insl
mov
leave
subb
sub
shlb
movsb
sbb
test
inc
int
jae
mov
ds
pop
dec
push
and
dec
pop
pusha
jno
xchg
xchg
insl
xor
mov
inc
ja
push
or
inc
and
push
out
cmp
dec
xchg
adc
pop
int
out
fstpt
cltd
data16
cmp
pop
fadd
sub
test
cmp
adc
xchg
inc
pop
jne
mov
xchg
jmp
adc
push
or
push
test
cltd
dec
adc
flds
mov
mov
cli
stc
mov
daa
cmp
or
addr16
psrlw
jmp
divl
inc
add
daa
jnp
add
cmp
in
and
xchg
js
mov
cld
or
lret
xorl
mov
subl
add
inc
and
in
xlat
aam
mov
sub
testb
sbbb
rorb
icebp
xchg
in
cmp
pop
mov
and
or
popa
pop
pop
imul
fwait
cmp
cmp
xchg
sub
dec
int
mov
dec
or
sub
push
ja
lea
rcll
push
mov
lahf
cmc
std
lahf
fcomp
push
jno
sub
push
sbb
adc
fwait
jp
aad
addr16
shrl
or
fsubrl
lret
int
mov
pop
stos
out
xor
clc
shrb
repz
push
fcoml
xchg
sub
cpuid
stos
push
repz
sub
dec
rcrb
jo
xchg
dec
sahf
ja
shll
ss
cmp
xchg
imull
mov
jl
fstps
sbb
mov
mov
pop
cmp
incl
enter
jns
push
stos
icebp
mov
inc
fidivrs
xlat
ljmp
jae
mov
rorb
stos
cli
mov
mov
mov
ljmp
inc
mov
cmp
aam
call
mov
sub
adc
xchg
xchg
lock
xchg
addr16
mov
xlat
enter
mov
jns
pop
pop
pop
push
pop
setge
xchg
xchg
mov
pop
push
cmp
pop
fisttps
xlat
lods
pop
sbb
test
adc
sbb
push
adc
mov
cmp
sub
popf
movsb
jae
stos
jbe
int
cmp
push
popa
xor
jl
js
lock
mov
or
andl
pushl
cmp
mov
sbb
sub
nop
js
sub
jbe
outsl
clc
or
jne
mov
jb
test
icebp
xchg
jge
jno
mov
mov
pop
push
or
lret
add
push
and
loope
add
cmp
das
push
fcompl
cmp
inc
mov
lret
and
scas
jnp
stos
push
fisubs
aam
mov
jge
pop
push
dec
notb
aas
fildl
cmovg
sbb
hlt
int3
cmc
mov
bt
hlt
mov
pusha
leave
push
mov
jge
cmpsb
mov
stos
in
xor
adc
in
repnz
clc
mov
pop
stc
pop
xchg
test
movsl
into
lcall
insb
loopne
aaa
sub
cmp
sub
fstpt
loope
fwait
mov
lock
mov
mov
and
mov
mov
dec
xchg
cmp
push
pop
cmp
push
jp
xchg
jnp
sub
cmc
xchg
push
sbb
jnp
pop
insb
loopw
adc
daa
dec
js
fcmovne
pop
les
outsl
es
aaa
lea
xor
mov
mov
pop
mov
or
xlat
ror
lret
mov
mov
gs
mov
push
flds
cmpsl
sbb
pop
jge
fcoms
mov
fwait
push
pusha
outsl
out
jg
cmc
or
ret
repnz
add
hlt
add
add
xchg
adc
imul
sbb
push
and
push
sub
call
adc
mov
or
int3
inc
push
fnsave
cli
or
sub
jecxz
or
pop
or
jg
shll
sbb
fstl
inc
in
mov
loope
adc
int3
lods
int3
dec
rcpps
sbb
xor
cmp
lcall
xlat
lods
out
daa
sub
sbb
inc
fnstsw
cmc
adc
xchg
mov
fldt
jbe
pop
mov
mov
fwait
mov
hlt
xchg
jge
inc
fidivrl
stos
push
mov
jo
cwtl
mov
push
mov
rcrl
mov
lock
sbb
stos
mov
cmp
mov
xchg
jae
out
jnp
fsubp
insb
push
mov
sbb
mov
lret
or
faddp
les
jl
jne
filds
data16
loop
pushf
adc
inc
adc
adc
xor
jmp
outsb
push
cmpsb
inc
in
xchg
cld
sub
loop
pop
jmp
js
addl
dec
les
test
dec
pop
es
pop
pop
xchg
adc
mov
in
xor
xlat
push
cmpsb
in
je
jmp
xor
sub
xchg
in
out
mov
fucom
mov
mov
pop
jl
sahf
out
jg
fnstcw
or
push
push
enter
aam
sbb
les
decl
add
mov
lahf
cmpsl
movsb
int
xchg
push
jbe
fisttps
lods
lods
pop
mov
lock
sub
lock
outsb
push
mov
out
adc
stc
mov
jne
push
inc
sbb
add
xchg
scas
clc
pop
pop
mov
les
inc
mov
data16
push
mov
shrb
nop
std
in
cmp
imul
aas
adc
mov
dec
mov
fisttps
pop
sbbl
dec
je
imul
stc
pop
pop
jmp
sbb
int
fdivrl
xor
cmp
xchg
xchg
repz
push
addr16
xchg
cltd
xor
push
push
lods
jle
mov
or
add
xor
cltd
clc
and
add
aad
iret
push
fwait
mov
sbb
popf
mov
push
and
clc
pop
sbb
adc
xor
mov
das
cmpsb
cs
scas
pop
icebp
mov
inc
inc
mov
test
movsl
subl
mov
add
aam
cltd
fidivrs
add
test
mov
inc
xchg
test
adc
adc
lahf
out
int
fstl
inc
cmc
mov
push
outsl
test
lods
fcmove
dec
imul
add
adc
shr
lret
daa
xchg
inc
add
adc
mov
mov
das
mov
xchg
adc
ds
lahf
rclb
lock
cmp
int3
mov
pop
sbbl
cmp
fxch
xchg
mov
inc
pop
pushf
jl
sbb
iret
cld
lahf
dec
loopnew
pop
xor
xor
jo
out
jo
push
fsubr
scas
mov
pop
inc
inc
scas
fs
out
mov
ds
push
cmc
push
mov
pop
add
or
mov
lret
jge
mov
movsl
pop
mov
add
lods
movsl
cmp
sti
mov
xorl
mov
scas
jge
cmp
popa
or
aas
or
int
lret
js
movsl
loop
cld
test
add
aam
jb
jle
std
push
mov
cltd
sub
push
outsb
mov
cmp
push
les
mov
jbe
and
push
in
ss
shl
or
mov
arpl
fs
clc
pop
mov
out
xor
cmc
call
mov
add
add
xchg
std
sti
jne
data16
push
cwtl
mov
bound
jno
fwait
xor
aad
mov
and
push
adc
cs
inc
std
test
or
push
xchg
sub
pop
jge
insl
inc
arpl
loop
cmp
mov
mov
jb
mov
stos
lret
je
rclb
call
lods
lds
adc
pop
dec
and
sbb
xor
leave
cwtl
push
jmp
pop
inc
pop
cmp
fcompl
inc
mov
and
mov
xchg
outsb
push
mov
xchg
jp
je
daa
inc
pop
adc
jp
call
add
outsb
out
lds
testb
roll
add
add
add
ljmp
adc
icebp
push
and
stc
test
push
js
mov
popf
mov
mov
inc
fistl
cmpsb
test
and
xor
pop
cmpsl
jae
xchg
lcall
les
xchg
hlt
pop
mov
lret
leave
mov
xor
push
adc
insl
lahf
and
dec
adc
fldcw
outsb
push
push
jl
movsl
testb
iret
into
mov
dec
notb
aad
add
jg
pop
push
jb
jg
jp
movsl
xchg
add
xchg
int3
sbb
stc
gs
shrl
cmp
mov
cmpl
iret
push
negb
push
cmp
adc
push
mov
cmp
jl
cld
scas
jp
imul
mov
pop
lret
pop
jnp
fidivrs
xor
adc
dec
mov
lcall
pusha
leave
pop
outsb
call
cmc
shrb
mov
dec
fnstcw
push
xor
cltd
ret
std
pop
and
mov
loopne
das
ja
adc
int3
hlt
andl
test
fdivrl
and
call
cmpsl
inc
les
and
lret
cmp
movsb
mov
jb
and
das
pusha
xorb
jbe
mov
popa
ret
int
decl
pop
pushf
push
mov
jl
test
sbb
in
dec
and
leave
adc
or
push
cmc
xchg
dec
mov
xor
cmp
cmp
popf
int
leave
mov
movsl
add
inc
xor
out
adc
imulb
popf
xor
mov
insb
loope
fsubrl
out
repnz
arpl
push
pop
fistps
es
jge
fdivl
sub
gs
mov
mov
outsb
bound
and
pop
jns
das
cltd
lcall
xchg
sar
lcall
fbld
fmull
ja
in
data16
mov
jl
icebp
or
mov
fcmovbe
das
mov
loopne
sahf
dec
test
lahf
lock
mov
jne
and
movsl
dec
push
mov
mov
dec
mov
sub
dec
adc
imul
enter
sub
js
fists
add
add
push
mov
mov
jmp
and
rcr
ret
inc
incb
aam
cmc
pop
enter
out
dec
jmp
pop
jb
fidivrs
imul
xorb
cmc
data16
adc
mov
push
shll
mov
fidivl
mov
dec
ja
insb
inc
lret
cmp
add
adc
mov
mov
lods
dec
cmp
paddusw
pop
imull
push
gs
push
addl
sarl
dec
int
push
mov
mov
xor
loop
inc
push
les
pusha
movsb
or
inc
roll
xor
mov
mov
xor
cs
dec
leave
pushf
sub
pop
push
int3
cltd
xorl
pop
clc
ret
rol
shlb
data16
pop
lea
adc
lret
ds
cmp
sub
in
or
adc
xchg
cmp
inc
cmc
hlt
inc
sarl
ret
jo
push
subl
push
xchg
mov
and
cmc
fwait
cmp
sub
add
and
outsb
lret
mov
cmp
push
fists
cltd
xchg
push
es
fnstsw
in
push
stc
dec
sbb
addr16
mov
mov
stc
jnp
push
sub
fidivs
dec
mov
or
mov
test
and
aas
mov
repnz
mov
incl
mov
rcrb
mov
xlat
add
in
push
mov
das
inc
inc
pop
xlat
arpl
and
pop
sub
inc
or
adc
ret
fdiv
and
sbb
push
test
push
movsl
cld
lods
push
jmp
cmp
in
cmp
add
push
shl
hlt
push
cltd
push
clc
jnp
pop
loopne
outsl
movsb
pop
call
fnstcw
sub
jb
xorl
jmp
in
dec
sbb
jne
hlt
xlat
cmp
sbb
jg
sbb
push
sbb
add
movsl
ja
xor
inc
insl
jg
js
lock
jl
pop
mov
inc
popa
arpl
pop
and
les
mov
ffreep
adc
cmp
loopne
ret
lcall
add
cwtl
xor
outsl
cli
outsl
movsb
push
pop
sub
adc
push
js
sub
into
lret
inc
pop
test
add
add
lret
lods
xlat
sti
mov
les
hlt
add
add
pop
aas
dec
cmpsl
imul
sbb
push
adc
or
mov
and
call
cmpsl
movsl
push
jg
push
ljmp
fwait
into
push
scas
es
out
sar
pop
or
stos
cmpsb
sub
push
cmc
movsl
aas
fldl
out
cmpsl
notb
adc
add
fwait
aad
and
in
xor
mov
sub
ds
out
or
mov
aas
gs
test
stos
and
gs
sti
push
lea
xor
movsl
bndstx
mov
test
repz
aad
xor
lock
push
mov
loopne
jb
ret
clc
sub
dec
or
xor
jne
inc
insb
xchg
jl
fsubl
adc
sbb
aam
cmc
jecxz
popa
mov
out
stos
iret
add
leave
fdivr
pushf
sbb
push
jbe
xor
xor
ja
popa
test
dec
jg
and
fnsave
fwait
lea
dec
ss
adc
mov
out
shlb
ret
cltd
jge
or
mov
adc
xchg
mov
sub
mov
or
add
xor
dec
xor
push
rcl
xor
aam
or
mov
or
das
mov
jl
add
aaa
mov
dec
decl
add
xchg
test
cmpsb
in
dec
imul
in
jnp
or
add
clc
divb
mov
mov
pushl
push
lcall
lock
dec
cmpsb
push
pop
mov
sbb
push
push
mov
ss
sti
imul
mov
cli
mov
lock
lods
add
dec
stos
mov
sbb
hlt
shlb
fisttpll
and
mov
gs
arpl
pop
pop
sbb
mov
idivl
push
scas
stos
cli
sub
aad
inc
pop
mov
cmp
xchg
ljmp
ret
test
jno
lea
adc
pop
and
popa
sub
pushf
mov
in
sbb
daa
push
fs
pop
shrl
in
mov
enter
mov
cli
movd
sbb
jb
jnp
push
out
inc
gs
pop
in
in
add
xchg
mov
shr
mov
or
xchg
sbb
pop
in
filds
sub
inc
int3
lods
push
int
mov
call
dec
outsb
inc
pop
push
lcall
fldz
sbb
idiv
mov
stc
ss
xchg
jae
adc
fstps
arpl
fwait
mov
cmpl
ret
popa
xchg
hlt
xchg
xchg
inc
orb
and
fwait
cmp
mov
sbb
xchg
cmp
test
xchg
outsb
xchg
faddl
imul
mov
je
shrb
paddusb
inc
cmp
adc
popa
or
xchg
cmpsb
sbb
stos
subb
jb
jp
mov
mov
xchg
add
jle
pop
int3
or
hlt
and
inc
mov
in
arpl
arpl
ja
jg
push
cmpsb
cmp
lahf
xchg
adc
shrl
imul
mov
movsb
insl
stc
bound
push
fs
andb
xchg
loope
pop
mov
and
adc
ljmp
hlt
inc
xchg
fs
into
hlt
aas
pop
cmpsb
rcr
mov
add
shrb
dec
mov
dec
xor
dec
cmp
pop
push
cmc
and
rolb
mulb
rcr
cmp
inc
sub
or
ljmp
sahf
adc
call
movsl
ret
sarl
push
clc
lods
jo
ds
adc
mov
jecxz
or
cmpsb
outsl
push
xchg
pop
paddsw
adcl
push
push
outsl
pop
add
imul
xorb
xor
insb
in
cwtl
outsb
jl
mov
push
loopne
inc
pop
jmp
pop
mov
jno
stc
cmp
xchg
mov
mov
jne
shll
pushl
sub
fcomps
popa
dec
sub
dec
jne
aas
jmp
ffreep
inc
out
aam
scas
mov
jl
xchg
mov
fsts
push
fisubrs
aaa
dec
push
mov
nop
scas
addb
mov
fstpt
dec
dec
mov
pop
loop
js
outsl
jp
ficompl
jnp
bound
adc
pop
inc
call
xchg
bound
std
lcall
lret
xlat
add
inc
leave
dec
and
bound
add
add
loop
bnd
fcomi
mov
jno
lods
outsb
std
fiaddl
add
add
add
movsb
imul
inc
xor
out
dec
notl
fst
and
adc
jg
or
inc
or
jns
sbb
and
test
movsl
and
call
mov
jle
pop
lret
andb
outsb
les
shlb
lahf
rorb
mov
and
lock
mov
in
faddl
inc
pop
fwait
and
pop
dec
lret
fdivl
in
and
leave
mov
pop
mov
xchg
movsb
mov
clc
sbb
mov
out
fdivp
lds
inc
sub
call
repz
data16
decb
push
lea
fstpt
test
xchg
inc
inc
fxtract
push
adc
mov
lahf
xchg
sbb
into
lret
inc
mov
leave
mov
adc
je
dec
std
dec
adc
and
or
clc
jno
mov
dec
adc
in
mov
frstor
arpl
dec
mov
adc
inc
iret
jns
xlat
into
jb
cld
rorb
or
push
and
dec
stos
iret
outsb
jmp
subl
xchg
and
aas
sub
shll
sub
inc
es
cmpsb
rclb
or
arpl
xchg
mov
adc
lods
das
mov
xchg
mov
adc
dec
adc
pusha
or
cmp
testw
jle
cmp
push
lcall
aas
push
inc
xchg
movsl
or
dec
hlt
ficompl
stc
aam
pusha
pusha
mov
mov
adc
sub
jge
jge
mov
mov
push
pop
adc
je
or
push
loope
xchg
sub
add
sti
jbe
and
xchg
pop
sbb
cld
fildl
in
push
and
stc
fadds
push
mov
dec
xchg
or
push
in
ret
imull
add
jae
imul
popa
dec
mov
loope
mov
fs
jge
mov
and
ljmp
mov
jecxz
imul
pop
in
xchg
add
pop
xchg
ret
ja
fs
loope
inc
adc
pop
push
mov
inc
adc
push
xchg
jo
rcll
insb
and
or
sub
sub
push
pop
stc
add
inc
jl
ret
loopne
andb
add
stc
hlt
xchg
mov
int3
jo
rcrl
stos
sub
cmp
into
mov
jb
aas
imul
int
xlat
cld
incb
sub
cmp
fs
sub
mov
push
push
cmp
mov
scas
bound
repnz
psadbw
pop
popa
mov
xchg
xlat
rcrb
in
sbb
and
sub
test
cwtl
call
es
jne
mov
sahf
mov
mov
loop
ja
and
clc
jg
xor
addr16
sbb
aas
push
ja
push
and
cld
fstl
in
mulb
into
jmp
xor
enter
mov
lea
cmp
cs
je
or
into
sbb
mov
mov
paddb
gs
int3
push
fstps
fadd
fdiv
push
gs
and
arpl
inc
dec
in
cs
push
sub
lahf
repnz
fidivrl
or
test
mov
loopne
popa
jne
js
add
jp
push
mov
sub
int
jnp
mov
incb
out
test
ja
cmpsl
push
push
inc
jb
fucomp
movsb
test
lock
ljmp
je
mov
fs
mov
adc
xchg
xchg
mov
jle
cmp
jbe
sub
rorb
fsubl
mov
pop
push
jns
call
mov
aas
insl
sbb
cmp
in
sbb
scas
cmc
popf
pop
add
icebp
es
pop
mov
jb
jg
cmc
jp
or
rorb
fcoms
ss
and
push
bound
jbe
scas
ret
lahf
and
cmpsl
test
js
ljmp
das
and
lcall
addr16
scas
shrl
sub
mov
dec
shlb
add
inc
sti
pop
jbe
and
pushf
mov
test
sub
add
add
xorl
mov
push
fdiv
ret
out
fbstp
push
cli
arpl
add
add
andl
ss
in
inc
popa
popf
dec
add
filds
add
add
add
push
adc
daa
inc
adc
sub
sub
cmp
xor
adc
and
mov
outsb
jmp
lods
cmova
xchg
pop
mov
sti
mov
leave
sub
xchg
ljmp
pop
ljmp
pusha
pop
pop
aas
push
arpl
and
enter
mov
andb
das
xor
jbe
imul
call
pop
adc
jle
cwtl
or
andl
movsb
hlt
mov
scas
mov
subl
mov
fcom
sub
fisubrl
loopne
dec
cmp
push
jecxz
jnp
sbb
mov
dec
xor
push
lock
enter
add
loopne
inc
jl
jb
mov
out
jbe
testb
inc
fisttps
xor
mov
pop
rcr
in
and
cltd
pop
outsb
aam
push
test
cmp
sbb
popa
cld
mov
jmp
in
bound
add
and
test
pop
idiv
mov
jb
or
ljmp
jge
enter
add
pop
push
cmpsb
push
jle,pt
dec
dec
gs
sub
and
adc
fnstcw
cmp
neg
lret
clc
imul
add
ret
test
das
xor
cmpsl
hlt
mov
test
jnp
ja
mov
fnsave
fisubl
dec
test
pop
push
and
add
add
xlat
imul
dec
xor
cs
out
out
ja
xchg
push
sub
adc
cmp
sti
out
sbb
dec
dec
shrl
add
sub
addb
lea
dec
test
cmc
lret
or
pop
aaa
and
dec
incl
call
push
cwtl
aad
mov
das
test
mov
fdivr
pusha
bound
sahf
xor
movl
fcoms
mov
sub
or
bound
push
fcoms
pop
cmc
dec
inc
adc
loop
movsl
jl
out
cmp
pop
stos
mov
xchg
repz
pop
cmpl
adc
adc
mov
in
fwait
adc
mov
pop
xlat
push
in
sahf
std
in
fdivrl
fsubp
xchg
dec
loop
testl
gs
jl
and
stc
adc
pop
jb
mov
pop
pop
xor
xchg
test
in
gs
sbb
ss
sbb
sub
lret
leave
icebp
mov
pop
dec
sbb
dec
lcall
ds
pop
cmp
and
and
sub
int
cltd
push
push
push
xorl
adc
arpl
sarb
icebp
mov
push
je
push
out
andps
imul
int
or
movsb
add
dec
cmpsb
enter
fdivl
xchg
mov
mov
ljmp
imul
jb
in
lods
in
xor
and
sbb
xlat
or
push
push
lcall
aas
fcmovnu
jo
pop
dec
mov
pop
mov
cmp
inc
inc
adc
ret
daa
not
sub
lods
jecxz
cmc
mov
or
adc
pop
mov
ficomps
jp
fldcw
shl
mov
cmpsb
sub
mov
and
jmp
scas
inc
cmp
xor
xor
dec
in
or
sub
sbb
popa
mov
fwait
jle
push
ss
jl
popa
cmp
and
imul
jne
dec
pop
sbb
jp
lret
mov
out
pop
out
loopne
jge
inc
out
fstpt
push
stc
sub
or
lea
push
sub
fnstenv
cmp
pop
nop
bound
xor
ret
addb
aaa
dec
stos
xchg
fnstsw
pop
push
mov
adc
mov
fldcw
cmpsb
rorb
cwtl
lcall
subl
sub
stc
ljmp
mov
insl
call
mov
bound
jno
mov
push
shrb
mov
jmp
stos
rclb
icebp
les
test
dec
and
and
cmp
cmp
icebp
hlt
pop
xchg
bound
shr
pop
inc
mov
pop
jbe
stc
ljmp
pushf
pop
outsl
mov
inc
pushf
jp
push
lods
das
pop
into
mov
sbb
lea
pop
or
push
lods
mov
push
adc
fmul
push
push
cmp
cltd
hlt
xlat
add
add
xchg
rcrb
pop
roll
xchg
lahf
xor
in
add
add
add
adcb
mov
mov
int3
xbegin
and
fsubrl
dec
push
push
fwait
mov
test
fs
xchg
rol
addr16
add
or
mov
movsl
std
in
add
adc
sbb
pop
cmpsl
insb
adc
sbb
test
ljmp
cmp
pop
jo
call
mov
cmp
jg
mov
cli
adc
jl
std
andl
pop
ret
cltd
cwtl
or
sub
shll
popa
fs
lea
push
jae
xor
popa
xchg
push
aam
jmp
and
arpl
outsb
cmp
repz
ds
int3
cmp
bound
jp
pushf
push
fdivr
dec
or
push
jmp
cli
mov
arpl
xchg
inc
divb
dec
movsl
pop
test
inc
rcrl
sub
imul
cltd
fnsave
fildl
or
cwtl
sub
adc
lds
gs
jnp
nop
rolb
mov
clc
add
add
push
xchg
nop
cmp
mov
mov
ficomps
xchg
jg
sti
ret
xchg
mov
xor
out
pop
mov
and
cmp
shrl
addr16
out
lret
mov
je
ja
in
jae
add
pop
aam
sub
call
sti
cmpsl
sbb
mov
lods
add
das
repnz
sbb
in
arpl
shll
jbe
pusha
mov
fisttpll
mov
in
mov
xchg
js
aaa
pop
int
int
std
fwait
iret
xorb
push
adc
loope
inc
cmp
call
and
mov
mov
xor
sub
test
sub
aaa
testl
pop
aaa
push
mov
pop
out
sbb
jmp
mov
adc
jne
push
fsts
sbb
roll
pop
in
jg
lcall
jmp
adc
adc
mov
pop
fcom
stos
dec
add
mov
xchg
mov
cld
imul
subb
push
push
mov
xor
ja
mov
xor
outsl
ret
jb
jo
push
mov
inc
fidivrl
xor
mov
out
je
inc
cmpsb
jle
and
mov
inc
outsl
pop
in
mov
push
sbb
inc
push
call
cmpsb
jg
mov
adc
cs
mov
mov
adc
dec
lret
add
loop
pop
cmc
test
insl
jb
pop
aas
daa
add
inc
roll
pop
jnp
jmp
imul
sub
adc
add
fs
and
xor
sbb
push
inc
push
or
hlt
and
xchg
loope
movsb
cmpsb
loope
pushw
xor
adc
cld
ja
jl
mov
or
add
cmpsl
dec
sbb
test
enter
add
mov
out
xchg
pop
jns
popa
dec
inc
inc
adc
in
pop
dec
push
sub
les
jno
insb
push
repz
pop
dec
mov
cmp
sub
je
xchg
sub
jg
cwtl
push
mov
int
aam
dec
or
cmp
xor
setle
jle
sub
int3
sub
jno
loop
inc
lods
jecxz
aaa
stos
clc
add
dec
dec
test
andb
jns
xor
sbb
pushf
sub
lret
inc
notl
imul
stos
ret
in
imul
pop
aas
les
and
mov
mov
outsb
fists
lcall
xchg
decl
into
shll
mov
mov
sahf
push
or
faddp
pop
xchg
mov
jmp
dec
int
pop
fisttpll
je
leave
cmpsl
pop
inc
mov
loopne
jp
or
in
arpl
in
pop
pop
aas
ret
pop
inc
or
movsl
mov
js
mov
stc
jle
or
mov
mov
test
je
mov
bound
xchg
orb
lea
mov
call
adc
and
enter
jle
fs
sub
clc
push
mov
mov
sbb
sahf
cmpsb
movb
rcrl
aaa
fistl
clc
fdivrl
mov
pop
dec
and
loop
mov
testl
inc
leave
xor
icebp
inc
cmp
add
add
sub
mov
inc
pop
int3
je
fldl2t
add
hlt
add
add
add
mov
bound
dec
fstpt
test
das
sar
stc
pop
cmp
mov
jae
pop
push
mov
xor
int3
pushf
xor
adc
cmp
pop
int
mov
xchg
ss
enter
cmp
sub
je
or
cmpsb
pop
lret
pop
push
pop
cmp
icebp
inc
cld
lods
mov
out
shlb
cld
scas
pop
sbb
repnz
or
mov
es
xor
push
loopne
mov
push
in
das
ffreep
pusha
mov
push
in
test
sbb
jge
mov
xchg
sarb
jo
aas
mov
xchg
sti
add
pop
jb
sub
mov
rclb
outsb
lret
mov
or
or
negl
mov
mov
adc
fiadds
mov
cmp
jge
pop
in
ror
cltd
mov
dec
pop
xor
inc
leave
mov
imul
xor
xor
fs
adc
js
js
rcr
add
add
adc
inc
mov
cmp
cltd
les
xor
mov
popa
push
popl
cli
lret
lods
ficomps
les
xor
xor
lret
xchg
scas
outsl
addb
xchg
shrb
enter
sub
inc
xchg
pushf
loopne
mov
cmpsb
add
mov
das
fdivrp
ror
pusha
outsb
inc
push
sub
cmpsb
int3
jae
or
call
sub
push
fiaddl
mov
aaa
outsl
shlb
xchg
mov
je
pop
cmp
cmp
ret
push
mov
or
mov
lea
push
jecxz
xchg
cmpsl
andl
fimuls
mov
sbb
pop
push
cmpsl
cltd
cmp
pop
lods
mov
pushf
stc
adc
jmp
and
fsubs
pop
cmpsb
mov
inc
jno
aad
xchg
and
mov
add
fmuls
stos
loopne
sbb
lods
mov
ja
push
fildl
iret
sub
and
fs
pop
es
in
loop
jl
jmp
fsubrs
xchg
jno
mov
dec
sahf
dec
dec
push
cmpsl
mov
and
cmp
jne
fs
dec
xor
sub
imul
jecxz
loopne
stos
movsl
stos
inc
sbb
ja
xor
mov
mov
bound
dec
cmp
fwait
in
ret
loope
push
icebp
lcall
inc
inc
mov
xchg
pop
in
push
sub
fildl
push
xchg
in
sbb
xor
aad
xor
mov
pop
daa
mov
fs
jge
mov
mov
daa
fistpll
inc
fucom
ficompl
or
loopne
mov
jp
popf
icebp
shlb
aad
mov
cmpsl
jne
loop
sub
popf
lods
jg
in
sub
out
fbld
or
sti
inc
sbb
adc
mov
scas
pop
xchg
rcrb
pop
push
jecxz
xchg
sub
pop
ss
addr16
lret
movsb
push
lods
mov
hlt
mov
inc
mov
inc
outsl
stos
pop
mov
mov
xchg
cmp
andb
jne,pt
cmpsb
dec
pop
pop
xchg
outsl
mov
ljmp
mov
test
adc
ficoml
adc
inc
dec
jp
cmpsb
leave
add
rorb
shrb
insb
cmpsb
cwtl
out
scas
mov
xor
stc
shll
pop
imul
and
xor
cmpsb
ret
adcb
xor
fwait
in
nop
push
ret
int3
pop
scas
inc
dec
jl
test
scas
test
push
mov
cwtl
nop
xchg
mov
ja
outsb
fs
mov
pushf
sahf
mov
stc
in
or
test
addl
dec
mov
into
push
jb
lods
lcall
inc
scas
mov
testb
and
arpl
cld
dec
sbb
or
sub
fidivrs
adc
sub
push
movsb
mov
fldcw
fmul
adc
and
adc
aaa
jno
pop
inc
outsb
fadd
jo
adc
dec
sub
ja
out
pop
dec
xor
out
lahf
push
fistpll
push
cmp
loop
les
imul
mov
and
fidivl
int
xchg
jmp
arpl
jo
and
gs
sbb
dec
shl
push
xchg
in
add
add
or
mov
std
mov
lock
hlt
add
add
sarl
push
push
mov
pop
int3
jg
cmp
mov
inc
inc
or
pop
pushf
divb
jmp
lods
and
sbb
dec
pop
lea
ret
dec
xor
not
cltd
cmp
pop
mov
cmpsb
jp
cmp
repz
add
mov
inc
ficomps
in
jb,pt
mov
push
jno
fisttpll
in
jge
fs
adc
xchg
dec
das
xor
jnp
stos
jno
mov
cmp
sub
jp
lret
xchg
nop
cmp
adc
and
xchg
call
dec
jle
loopne
jnp
pop
push
in
jl
mov
in
mov
inc
clc
cwtl
lods
jbe
hlt
dec
add
shr
push
jbe
js
pop
mov
rcll
test
imul
push
mov
jl
into
popl
cmpsb
pop
out
addr16
das
sub
mov
in
movsb
ljmp
mov
mov
mov
push
clc
push
daa
mov
outsl
iret
dec
add
cmp
clc
xchg
xor
loop
xlat
push
pop
xchg
sbbl
lret
aaa
adc
mov
xchg
inc
testl
mov
sbb
mov
adc
lsl
sub
gs
push
xor
adc
in
mov
stc
ljmp
ljmp
add
adcl
clc
mov
mov
dec
insb
sub
xchg
in
dec
pop
rolb
rcrb
jbe
xchg
sub
push
test
cmp
jge
xor
outsb
add
jne
dec
fcoml
and
scas
push
dec
jmp
mov
add
inc
fidivl
cmpsl
arpl
dec
gs
shll
iret
das
jbe
jecxz
jge
push
pop
pop
out
mov
jecxz
jge
sub
lret
jl
sub
mov
dec
push
xchg
imul
jb
xchg
jmp
inc
mov
xchg
lcall
pushf
or
mov
movsb
outsb
cli
scas
jmp
xor
or
inc
shrb
cmpsb
inc
jo
sub
xlat
sub
xor
mov
addl
push
push
comiss
cmpsb
add
push
push
add
ss
cmp
lahf
lock
rcrl
mov
mov
mov
call
gs
lds
movsb
mov
adc
pop
xchg
pop
cmc
pushf
adc
icebp
lahf
je
mov
cmp
mov
imul
jne
dec
or
lods
movsl
movl
jb
xor
xor
jl
fdivrl
ja
add
mov
pop
jnp
dec
fisubrs
lods
mov
mov
sti
xchg
adc
addr16
mov
and
out
sarb
xor
bound
mov
in
in
mov
or
mov
subb
fistpl
ja
xchg
rclb
sub
jbe
jno
add
fmull
pushf
add
xchg
push
les
bnd
mov
xchg
mov
pop
mov
inc
stos
popl
ds
mov
mov
adc
xor
xchg
push
sbb
mov
jmp
or
fsts
je
lret
inc
aaa
das
mov
adc
dec
in
add
xlat
subb
xor
lea
mov
cmp
inc
mov
rorb
cmc
jecxz
shlb
sti
adc
push
jmp
in
in
dec
inc
adc
push
jbe
adc
into
pusha
dec
je
fsubrp
mov
out
test
xchg
sbbl
js
xchg
pop
pusha
jmp
add
outsb
nop
sub
sbb
pop
xchg
mov
fsubrs
test
sub
xor
and
fwait
inc
mov
mov
cmp
xchg
ja
push
sub
lock
add
and
sub
fsubs
fsubrl
fnstsw
sti
jmp
xchg
cltd
jbe
clc
fadds
dec
push
pop
lahf
push
outsb
addr16
push
and
in
inc
scas
pop
pop
in
and
push
sub
dec
addr16
dec
jecxz
in
mov
push
push
push
movswl
mov
clc
call
pop
lods
shll
xchg
sub
jp
lcall
cmp
add
add
ja
push
dec
shr
jg
push
mov
inc
test
repz
hlt
add
add
inc
jns
pop
sub
xchg
loopne
xlat
push
mov
lret
xchg
jae
filds
daa
push
jmp
cltd
push
adc
xchg
enter
cltd
xor
lods
dec
xchg
orb
inc
jp
std
cmpsl
add
cmpsl
inc
loope
cmp
js
fcompl
fadds
lods
mov
data16
adc
faddl
in
mov
jmp
cmpps
in
inc
pop
mov
lahf
iret
adcb
xor
daa
dec
cmpsb
mov
fst
adc
jae
sbb
jae
es
mov
fwait
int3
dec
inc
mov
jae
rcll
pop
test
sti
push
dec
lods
mov
cmc
sbb
and
jae
xchg
mov
stos
int3
push
data16
mov
test
movaps
or
and
mov
push
jnp
pop
cmp
mov
add
sbb
cmc
sub
icebp
adc
out
mov
ds
xor
fwait
cmp
jg
sbb
mov
std
inc
adc
sub
jl
or
testl
mov
mov
popa
push
lods
and
and
mov
nop
xchg
or
lret
lret
scas
icebp
lahf
popa
jmp
add
rcrl
pop
repz
imul
jbe
add
mov
push
in
mov
in
and
leave
inc
movsl
fsubrs
pop
sbb
lds
insl
jno
add
icebp
add
mov
fiadds
xor
push
ret
jbe
jnp
mull
aam
js
adc
mov
jae
in
dec
and
xchg
stos
mov
mov
out
push
rcrl
jne
mov
pushf
inc
lds
push
xor
enter
cwtl
out
add
pop
ja
jo
movsb
sbb
inc
mov
mov
inc
lahf
insl
scas
pushf
pushl
enter
pop
and
push
sub
cmp
mov
push
xor
test
fnstcw
popa
testl
adc
xor
mov
mov
sub
jb
cli
or
dec
inc
enter
adc
sti
fsubl
repnz
mov
neg
cmp
ja
stos
mov
test
cmp
int3
nop
xchg
cmp
int
subb
scas
jae
or
xchg
sbb
xchg
or
adc
fwait
movsb
stos
xor
lahf
lret
xchg
push
push
mov
inc
sbb
mov
adc
mov
lcall
jbe
movsb
mov
sbb
fisubl
into
jbe
adc
jno
sbb
mov
subl
push
aam
cmp
cmp
test
hlt
ss
push
sbb
pusha
xor
jmp
mov
inc
adc
push
test
insl
pusha
imul
jb
mov
movsl
push
icebp
loope
mov
mov
adcb
test
and
jmp
xor
test
sbb
ljmp
cmp
push
ja
pop
sub
xor
mov
and
jecxz
xchg
pop
cld
arpl
fisubl
out
cmc
loope
push
lods
outsb
repnz
lods
in
xchg
mov
fildl
mov
ret
je
adc
mov
les
mov
xchg
push
add
sub
push
leave
shll
mov
push
push
xchg
cmp
jb
mov
push
adc
jg
pop
or
xor
sbbb
incl
dec
mov
add
je
cmc
leave
add
addl
repnz
shll
mov
lahf
sub
jne
ret
hlt
iret
aaa
pop
sbb
mov
imull
dec
sbb
add
dec
pop
fidivrs
xchg
mov
test
xchg
sub
repnz
int
jmp
fs
leave
movsb
add
test
mov
push
inc
fisubrl
lods
int
jmp
leave
jb
push
inc
lods
jns
sbb
jnp
neg
shrb
in
shr
jl
js
cmp
mov
rclb
ror
lock
adc
pop
jns
aam
bound
add
mov
inc
sub
loopne
xor
stos
sbb
in
sti
hlt
push
cmp
js
xorb
xchg
sahf
clc
int
cmp
test
insl
adc
push
mov
into
xor
add
incb
add
add
movsl
push
movsl
shl
divl
lods
incb
out
add
mov
out
test
push
lods
or
mov
enter
dec
push
sbb
push
inc
stc
sarb
mov
int3
lds
jmp
add
les
movsb
jns
sub
jns
dec
adc
fbstp
sub
jmp
lds
cmp
jae
mov
nop
mov
std
add
fdivr
out
push
jecxz
loop
pop
repnz
or
and
mov
dec
and
sub
addr16
movsb
cmp
fisttpl
iret
dec
dec
jmp
xchg
xchg
sbb
mov
cs
sub
loopne
adc
hlt
outsl
jl
nop
xor
insb
add
inc
cmp
pop
into
loop
or
movsb
mov
push
dec
push
mov
xchg
scas
mov
mov
wbinvd
mov
mov
mov
int3
insb
stc
push
sbb
push
pushf
in
roll
jmp
mov
cs
xor
subl
je
and
out
pop
jge
iret
pop
push
adc
repz
insl
xor
loop
inc
jb
pop
call
jmp
pop
cmp
dec
outsb
insl
ja
loope
xor
arpl
mov
xor
enter
clc
push
add
out
jae
cmp
or
jl
and
rcrl
xchg
data16
cmp
ljmp
stc
iret
jns
xchg
cmpsl
les
or
lock
mov
inc
inc
jo
or
cmc
jmp
repz
sub
and
dec
cmpsb
lret
jae
xor
mov
sbb
jmp
mov
cwtl
test
sub
movl
bound
imul
scas
movsb
jge
pop
aas
push
dec
or
dec
cltd
pop
push
and
lods
dec
cmp
adc
xor
mov
test
adc
fistl
sysexit
xlat
lock
mov
jno
sbb
rcrb
cltd
sarl
lea
imulb
and
jne
in
mov
in
in
xchg
dec
into
sub
rcrb
push
bound
jle
lea
xchg
jge
in
std
jg
flds
fistl
stos
mov
push
lret
dec
xor
test
jbe
aaa
aam
jg
sbb
pop
push
sbb
out
repz
mov
mov
shll
pop
cmp
imul
sarb
test
fdivrs
push
mov
push
mov
cmpsl
push
ds
fnop
mov
inc
add
jg
scas
and
sub
cld
push
popa
and
sub
mov
pop
xchg
and
popl
sub
xlat
in
subl
bound
cwtl
xor
sar
fucomip
lret
in
mov
ljmp
popa
insl
xchg
push
fdivl
push
and
call
or
cwtl
adc
imul
push
sbbb
sub
cmp
xor
sub
jmp
push
test
fnstenv
out
mov
stos
xlat
and
dec
sub
adcb
shlb
push
popf
out
mov
imul
push
test
mov
lcall
sub
and
dec
je
pop
mov
xchg
inc
push
pusha
bound
or
xchg
je
jmp
sahf
cmp
lcall
lret
mov
jae
xchg
mov
push
cmp
icebp
loopne
and
cmp
push
adc
pop
cmp
xchg
push
push
in
cwtl
js
popf
mov
repz
call
int3
lret
aas
and
and
inc
or
clc
sbb
push
nop
pop
dec
outsl
xchg
std
jmp
cmc
dec
or
cmp
fcoms
out
rclb
jecxz
sahf
sbb
dec
or
jg
out
inc
sbb
pop
mov
dec
sarl
orl
imul
movsl
and
sbb
sbb
inc
sbb
aad
leave
mov
pop
and
push
and
mov
jns
fidivrl
shlb
ss
cmc
inc
jle
pop
fwait
and
or
lods
fmuls
cmp
push
fdivl
mov
mov
push
mov
fistpl
push
add
popa
dec
sbb
inc
mov
push
out
jmp
ret
jns
adc
test
push
or
xorb
mov
adc
mov
xchg
xchg
mov
das
dec
sbb
