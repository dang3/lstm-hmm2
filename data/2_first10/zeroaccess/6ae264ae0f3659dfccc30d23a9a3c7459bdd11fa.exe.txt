push
mov
sub
mov
mov
xorl
mov
jmp
jnp
jl
js
ja
stos
or
adc
jge
or
or
iret
add
or
jo
adc
jecxz
mov
dec
xchg
idivb
mov
pop
sbb
push
inc
adc
repnz
ja
mov
repnz
dec
mov
mov
sub
cli
faddl
jne
dec
inc
jno
imul
jge
icebp
cmp
frstor
lods
dec
pop
push
adc
mov
fnstsw
outsb
repz
lods
fcmovb
mov
out
adc
cltd
movsb
fsubr
aad
movsl
sbb
stc
add
push
imul
in
inc
sub
enter
negl
sahf
add
in
in
adc
fstl
stc
testl
es
add
jmp
mov
inc
das
rol
flds
mov
push
and
cs
and
sbb
popf
add
cld
mov
xor
das
fsubs
cli
xchg
mov
in
test
dec
jb
gs
insl
orb
mov
push
push
dec
test
test
or
arpl
es
out
and
mov
mov
call
sbb
dec
icebp
add
add
lret
pop
rcll
pop
xor
dec
ret
push
push
xlat
mov
xchg
and
out
push
scas
imul
xor
mov
dec
test
stc
mov
or
adc
mov
mov
dec
pop
insl
and
mov
and
and
pop
xchg
insb
jo
shlb
xchg
aaa
pushf
punpckhdq
imul
sbb
cwtl
outsl
jmp
insl
fisubrl
mov
ret
push
adc
loop
jg
call
cmp
ljmp
pop
xor
das
and
xlat
decb
pop
lcall
pushf
xchg
cltd
cmpb
ljmp
int3
xor
jge
mov
aam
out
mov
push
cmp
sub
sbb
adc
sub
sbb
aas
mov
stc
jp
pop
sub
sub
sub
loop
dec
sub
repz
jae
aas
rorl
adc
fisttps
or
data16
dec
cmc
pop
xorb
add
fisubl
push
dec
bound
pop
fsubrl
push
stos
test
pop
jecxz
adcl
mov
jg
push
and
xchg
pop
andl
test
push
cmpsb
test
xchg
subl
adc
inc
shlb
sbb
inc
or
scas
lds
repnz
std
aas
imul
repz
nop
int3
dec
iret
cmc
pop
xor
rcrl
data16
dec
xlat
jp
mov
sar
loope
cltd
pop
fistpl
in
dec
jmp
sub
repnz
adc
xor
sub
xchg
push
push
lcall
subb
ljmp
mov
sub
out
adc
ret
out
js
inc
imul
lahf
and
xchg
sbb
pop
sbb
sbb
and
sub
cli
add
lret
mov
inc
pop
out
arpl
xor
mov
adcl
add
mov
push
push
test
xor
aad
dec
gs
lret
imul
mov
inc
sbbl
lret
sbb
dec
scas
lret
pop
daa
cwtl
jle
ret
fs
xchg
and
outsl
test
jl
cmp
cltd
insl
in
out
xchg
insl
sbbb
repnz
sub
enter
xchg
adc
mov
ljmp
cmp
gs
push
insb
leave
pop
decl
lahf
fs
xor
or
je
in
lahf
roll
in
xchg
push
div
xchg
popa
inc
cmp
iret
cli
in
xor
push
lcall
add
dec
mov
sti
xor
test
ret
mov
sbb
mov
arpl
icebp
mov
insb
push
std
pop
xchg
cmp
xchg
cmc
fcoml
fstpl
fadd
jbe
loope
sbb
shll
cmc
cli
iret
jmp
in
mov
or
movsb
es
xlat
ficoml
push
mov
aaa
daa
out
pop
es
xor
cwtl
inc
and
sub
in
in
sbb
dec
test
or
dec
js
repnz
mov
xor
inc
gs
xchg
mov
push
popa
mov
test
mov
in
push
cmpsb
lret
scas
js
cmp
sub
test
stc
je
dec
xchg
pop
sarl
std
mov
adc
fnstcw
outsl
std
adc
inc
xchg
dec
jp
push
rorb
xchg
stos
mov
int3
jb
rcll
pop
adc
out
push
inc
arpl
adc
sbb
es
je
add
roll
mov
mov
xchg
lahf
xlat
sbbl
int3
sahf
xlat
xchg
jne
out
mov
mov
addr16
cmp
push
inc
pop
notb
pop
pop
inc
cmpsb
sbb
jmp
ja
and
cmp
lods
xor
inc
je
ret
add
in
aad
xchg
aaa
add
out
ret
mov
rol
xchg
pop
inc
push
mov
mov
push
repnz
jne
add
or
add
or
xor
out
xor
out
stc
lods
xchg
mov
outsl
or
adc
push
pusha
xchg
pop
stos
shlb
pushl
addr16
fstpt
fistpll
mov
inc
loopne
gs
dec
imul
cmpb
push
ss
fnstcw
loopne
faddl
imul
enter
jbe,pt
push
add
jmp
lret
mov
xchg
jne
lea
pop
sub
cmp
adc
sbb
test
xor
in
movsb
inc
scas
int3
insl
pop
cmpsl
es
loop
in
adc
sub
mov
fldt
pop
jne
inc
jbe
jp
push
pop
es
test
fbld
ja
lret
mov
jg
in
and
js
sti
scas
loop
sub
cmp
jne
pop
pop
sbb
inc
fucomp
push
xor
dec
lahf
lock
mov
mov
push
mov
sahf
push
inc
sbb
push
xchg
outsb
int
and
das
int
push
mov
out
std
pop
popa
adc
jmp
loope
out
dec
or
test
lock
out
mov
fimull
mov
shrl
std
sub
push
ret
lock
xchg
xor
fisubrs
adc
mov
enter
shrb
mov
sbb
scas
mov
fcomps
sar
adc
cmpsl
jg
mov
push
push
xchg
lds
rol
and
scas
xchg
fadds
and
mov
mov
jecxz
jb
sahf
std
xor
mov
dec
cmp
and
fucomp
int3
js
mov
pop
aam
and
dec
fidivs
dec
aas
mov
addb
dec
iret
or
dec
sbb
xchg
imul
and
lds
push
jno
sub
rcrl
pop
cmp
pop
jmp
pop
cmp
ljmp
insb
inc
mov
sub
sub
mulb
mov
imul
pop
push
insl
int3
test
scas
cmc
mov
add
add
shll
sbbb
pop
insb
or
xchg
in
dec
pusha
and
cmp
pop
lahf
and
out
push
add
jns,pt
push
ds
jge
jle
cmp
fwait
cld
sarb
xchg
imulb
mov
stos
pop
pop
add
aad
shll
out
sbb
add
pop
adc
out
mov
lret
jae
faddp
imull
gs
pop
ja
das
add
testb
movsb
push
insl
xchg
dec
jmp
bound
fisubl
add
div
cmp
xchg
xor
xor
mov
cli
jmp
pop
push
lock
mov
dec
call
inc
inc
mov
fs
and
fstl
test
jmp
jp
or
flds
lret
cmc
and
mov
loop
rcrl
sti
addl
push
or
ror
aam
les
pushf
sbb
cmp
add
or
push
adc
imul
test
std
jle
dec
pop
lahf
and
ss
sbb
pop
mov
jb
sbb
cs
inc
popl
mov
mov
add
jg
xor
rolb
clc
mov
xlat
icebp
pop
pop
xchg
mov
jae
sbb
lods
xor
jmp
mov
scas
subl
or
inc
fnstcw
adc
imul
mov
test
jmp
fs
and
ret
mov
shlb
rorb
and
mov
cmpsb
cmc
lock
adc
popf
insl
ljmp
adc
ss
fmul
movsb
push
fcoml
mov
popf
outsl
push
push
bound
adc
out
pop
repnz
fisttpl
call
pop
pmuludq
cmp
and
iret
jbe
xlat
inc
xor
loopne
inc
cmp
stos
or
sub
iret
fwait
sbb
stc
stos
push
add
loop
rorb
cltd
insb
pop
push
add
mov
call
cs
sub
daa
and
inc
adc
in
and
ljmp
repnz
lret
adc
add
mov
cmpsl
push
sbb
scas
loop
inc
popa
push
loope
cli
sub
cmp
in
fsubrl
out
mov
lods
sbb
rclb
ss
fadd
hlt
addr16
xchg
inc
dec
fldl2t
add
aam
stc
mov
insl
xchg
int3
sti
push
fsubr
aad
aas
add
jns
and
jl
repz
add
jns
or
jae
rcl
cld
jbe
test
cmpsb
mov
mov
mov
xchg
repnz
dec
les
lods
push
adc
repz
or
int3
fistpll
js
insb
test
mov
sbb
xchg
std
nop
mov
mov
xlat
fldl
xor
movq
insl
enter
rcll
pushf
fwait
jl
sub
sub
cld
into
or
xor
aam
lret
jnp
fsubl
fmuls
dec
dec
cmp
negl
pop
shll
push
insb
pop
cwtl
adc
les
cwtl
xchg
push
imul
arpl
push
sahf
call
hlt
xor
xchg
jae
pusha
jbe
pop
test
adc
jge
inc
mov
sbb
mov
xor
jmp
dec
jne
adc
test
jo
mov
decl
or
add
or
mov
in
add
push
xchg
insl
loop
rcl
xor
sub
ds
sub
decb
aas
sbb
loopne
push
inc
rcrl
out
movsb
cltd
dec
or
or
outsl
cmp
xor
xor
popa
mov
mov
sbb
in
in
push
popa
lock
xor
pop
push
cmpsl
ja
shrb
es
adc
xor
push
pop
jne
pop
push
push
mov
insl
leave
or
insb
push
cmp
cli
add
scas
cli
hlt
push
mov
ds
mov
ficomps
add
push
xor
das
cmpl
mov
icebp
ret
test
mov
andb
sbb
push
sarl
push
jnp
xchg
stc
test
test
jmp
sub
jg
in
out
or
jnp
icebp
inc
xchg
dec
je
lds
cld
mov
adc
fstl
enter
das
cwtl
jns
imul
movsl
inc
in
inc
hlt
arpl
jae
cld
push
jecxz
xlat
jbe
in
dec
mov
push
pop
addl
jmp
jp
je
inc
arpl
jnp
imull
sub
inc
outsb
pop
cmp
aam
pop
push
sbb
mov
jle
sub
sahf
in
test
dec
ret
aas
arpl
outsl
addb
inc
mov
shll
std
fbld
fldl2t
in
and
add
mov
cmpsb
sar
mov
shl
mov
lcall
ja
xchg
jo
xchg
sahf
and
xchg
xchg
addb
imul
sahf
loope
call
push
mov
aad
insl
adc
push
fld
pop
movsl
jnp
inc
scas
sbb
je
fwait
movsb
popf
or
insl
movsb
jb
adc
repz
mov
push
push
add
sub
rcrb
ds
xor
lcall
in
sbb
xor
mov
cwtl
mov
add
lods
xor
mov
inc
sahf
push
nop
jmp
ret
mov
in
sub
call
cmp
movsb
xor
in
fnstcw
fmuls
fcomps
jne
lods
aad
mov
or
push
add
mov
and
xchg
or
sti
popf
lds
xchg
xor
jb
jmp
push
mov
aas
inc
cmp
mov
mov
scas
xor
adc
test
cmp
sub
into
repz
add
bound
in
out
faddp
inc
sub
sbb
lahf
adc
xchg
fistpl
lcall
and
dec
xchg
cs
in
outsl
and
aas
adc
es
sbb
loop
mov
lods
sub
sar
bound
push
dec
rcrb
movl
adc
inc
sbb
sub
out
cmc
into
imul
aam
mov
cwtl
pop
in
sbbb
pop
aad
fisubl
inc
mov
inc
int
mov
out
sub
jns
nop
pop
push
push
xchg
insl
fmull
popf
mov
mov
shrl
jg
and
sarl
push
mov
jl
shll
sbb
cld
int
arpl
sbb
sarb
jge
int
jb
jg
cmp
fcomip
sbb
mov
sarb
aas
ljmp
fnstsw
push
sbb
sahf
and
in
sub
movsl
adc
and
in
adc
dec
cmp
cmp
dec
mov
bound
xchg
lret
fisttpll
xchg
push
stos
push
xchg
repnz
jmp
pop
add
and
punpcklbw
loop
sub
stc
xchg
mov
fists
jg
mov
xchg
mov
sub
cltd
jnp
pop
std
xor
movsl
mov
inc
nop
jg,pn
pop
xchg
pop
inc
mov
jmp
fs
jbe
mov
mov
xor
enter
push
sti
pop
lds
add
mov
add
mov
sbb
std
or
call
stos
xchg
scas
and
sbb
lods
push
scas
mov
dec
lods
rcll
arpl
ds
xlat
cwtl
mov
pop
and
adc
js
sub
fbstp
rorb
aaa
sti
sub
add
cltd
fwait
mov
mov
shll
rclb
or
popa
test
call
cmp
out
lahf
imul
sbb
dec
cmpsb
push
repz
xchg
inc
out
xor
adc
sti
jnp
int
mov
sbb
orb
out
pop
nop
cmp
jg
adc
sub
iret
sbb
jns,pt
xabort
test
cmp
lea
jb
cli
mov
frndint
mov
cmpsb
pop
aam
pop
cltd
jo
out
xchg
scas
pop
mov
push
je
pop
add
xchg
outsb
js
fdivrp
loop
pop
push
shrl
cmp
fucom
bnd
int
ss
pop
ljmp
int3
xchg
loop,pt
enter
and
inc
jp
cmpb
dec
ret
movsl
push
sbb
fbstp
adc
jbe
mov
sbb
dec
mov
cld
imul
mov
mov
fwait
cmpl
mov
mov
jmp
mov
movzwl
jne
call
xor
sbb
orl
sbb
and
sub
mov
mov
mov
adcl
mov
sub
mov
mov
sbb
cmpl
mov
mov
movl
jmp
movl
movl
jge
pushl
push
push
pushl
call
inc
notl
add
subl
sub
xor
sbbl
mov
orl
orl
xor
lea
mov
mov
sub
mov
adc
mov
orl
add
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
jbe
push
push
push
push
pushl
call
adcl
sbb
negl
and
adc
adc
subl
movl
shrd
xor
shr
cmpl
mov
movl
jmp
movl
jg
call
mov
adc
addl
subl
add
or
addl
and
add
adc
mov
sbb
mov
xor
xor
or
mov
movl
movl
movl
subl
movl
cmpl
movl
movl
jmp
movl
jbe
push
push
call
add
orl
adc
xorl
subl
movl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
push
call
adcl
andl
subl
adcl
addl
sbbl
orl
adc
movl
movl
or
movl
xor
xor
or
mov
movl
movl
movl
movl
cmpl
movl
movl
movl
jmp
movl
jbe
pushl
call
sbb
adcl
sbb
xorl
and
movl
cmpl
movl
movl
jmp
not
jl
pushl
push
pushl
call
sbb
andl
and
addl
sbbl
subl
or
movl
cmpl
mov
movl
mov
jmp
movl
jl
push
call
addl
addl
movl
sbbl
movl
orl
movl
sbb
movl
movzwl
sub
movl
movl
neg
movl
movl
xor
movl
cmpl
movl
movl
jmp
mov
mov
jbe
pushl
call
orl
xorl
or
addl
movl
adcl
and
movl
mov
adcl
shl
mov
adc
mov
mov
adcl
jmp
scas
mov
mov
jno
jne
add
cmp
or
iret
add
or
mov
jnp
xchg
mov
pop
mov
pop
inc
sbb
fidivrs
mov
dec
dec
inc
cmp
lahf
dec
idivb
and
popl
jl
rcr
mov
inc
xchg
aad
cmp
ljmp
mov
lock
jg
mov
loope
push
in
insb
sub
stc
lds
ss
push
imull
nop
adc
enter
or
dec
jl
rcrl
jns
std
or
cmp
inc
arpl
adc
into
ret
fcoml
repnz
push
aam
add
jno
roll
xchg
sub
jae
push
xchg
shrl
outsb
xor
sub
loope
das
push
jecxz
mov
test
sarb
dec
scas
adc
es
test
mov
mov
ja
push
xor
mov
int
inc
sub
inc
in
mov
nop
jo
rolb
add
lcall
daa
shrl
push
sbb
jl
cltd
out
sub
pop
mov
cs
ds
mov
sub
push
rcrl
out
lahf
clc
in
mov
mov
iret
push
pop
cmp
pop
ljmp
or
sti
xchg
push
dec
les
int
dec
ret
jae
cmp
sahf
test
loop
test
andl
dec
inc
jb
mov
mov
xchg
ja
mov
sub
lret
fwait
mov
jnp
cmp
jl
mov
mov
aaa
int3
orl
dec
xor
pop
jge
js
cmp
and
push
hlt
clc
icebp
pop
or
xor
add
pop
loop
dec
add
jecxz
dec
xor
mov
mov
jnp
mov
mov
out
jno
inc
lea
int3
xchg
fwait
mov
jae
xor
movsb
or
sti
xchg
mov
dec
aas
inc
std
cmpsb
xchg
add
cmp
ds
stos
movsb
jg
movsl
cwtl
test
sbb
cli
rcrb
push
mov
fwait
sub
out
or
cmpsb
les
mov
jae
or
cmp
inc
or
in
push
inc
sbb
fldcw
pop
icebp
lret
sbb
loopne,pt
adc
sarl
stos
push
and
push
test
rcrl
sub
add
or
dec
shrb
and
mov
xchg
stos
js
int
lret
mov
fists
imul
loopne
mov
stos
inc
adc
outsl
mov
xchg
mov
imul
inc
movsl
cld
testb
jno
pop
inc
sahf
andb
shl
inc
sub
dec
jnp
sbb
nop
pop
mov
jbe
nop
fisubs
mov
mov
enter
push
test
int3
and
push
push
cmpsb
cwtl
jecxz
push
sahf
movsl
mov
fwait
push
mov
cmpsl
out
and
pop
mov
in
add
pop
and
jbe
enter
pop
xor
sub
jbe
lea
sti
dec
mov
lods
test
icebp
add
out
rorl
enter
cmpsl
adcl
mov
mov
sti
je
or
mov
push
mov
push
push
popf
movsb
mov
sbb
jne
sub
loop
inc
shll
fdivrs
test
scas
cmp
mov
jmp
loope
xchg
in
xchg
xchg
lret
xlat
ljmp
repnz
mov
aaa
fbstp
sub
andl
dec
in
pop
icebp
popa
into
xor
mov
sub
es
cmp
fs
lock
dec
pop
mov
jns
inc
pop
jne
adc
xor
shlb
xchg
std
shlb
fwait
dec
xchg
aad
push
inc
sub
mov
pop
jg
mov
mov
test
sarb
call
fistpll
icebp
dec
inc
movsl
nop
cmp
push
and
cli
and
lcall
bound
fsubrl
int3
mov
inc
jne
div
xchg
shll
cmp
xchg
bound
mov
jb
and
stos
sub
aam
stos
adc
jge
mov
xor
inc
into
push
jmp
pop
push
fs
call
push
cmpsb
incl
jmp
test
or
push
das
in
fdivr
icebp
push
pop
push
mov
or
notl
arpl
push
adc
jno
push
ret
mov
mov
test
adc
or
dec
mov
in
xchg
imul
push
inc
cmp
pop
sbb
add
sahf
sbb
jns
sbb
xchg
or
orb
inc
mov
sahf
sub
cs
movsb
sahf
and
std
incb
inc
mov
ficoml
aas
mov
inc
dec
xor
inc
cmpsb
cmp
lea
mov
fsubr
gs
sub
scas
push
cmp
pop
cld
ret
scas
shll
mov
and
mov
stos
add
shl
add
xor
lock
fsts
das
xchg
data16
fxch
andb
sbbl
push
push
push
call
adc
mov
movl
mov
movzbl
add
xor
jmp
push
xorl
dec
sbb
or
iret
add
or
dec
in
jne
pop
scas
jle
xchg
cltd
cmp
rcrl
aas
testb
add
fldl
mov
shrb
rorb
xor
and
sbb
xchg
xchg
je
add
flds
dec
and
ret
or
rcrb
imul
jae
jl
cld
aas
out
xor
mov
jb
push
mov
sbb
mov
movsl
pop
clc
paddsw
jb
rcl
add
xor
jno
cmpsl
pushf
popf
xchg
pop
ror
mov
test
lahf
dec
push
jno
jnp
repnz
jnp
stos
mov
and
add
xlat
jns
bnd
sbb
enter
test
adc
jb
nop
adc
mov
dec
dec
inc
cs
stos
mov
add
orb
test
setp
lret
mov
scas
call
cltd
sub
xchg
dec
xchg
push
outsl
mov
inc
pushf
cmp
jno
ds
push
subl
dec
lods
and
xchg
dec
or
push
and
jge
cwtl
insl
add
mov
and
jle
popa
sbbl
or
lret
fwait
das
adc
xchg
pop
leave
add
int3
sub
lds
cld
pop
incb
sbb
cmp
out
xor
out
outsb
data16
aad
nop
cmp
lret
adc
sub
mov
jbe
clc
push
add
mov
dec
sbb
stos
xor
idiv
lret
xor
fld
out
shll
push
add
scas
inc
jmp
push
or
xchg
jecxz
mov
jge
sbb
cmc
dec
movsl
dec
cltd
jo
xchg
mov
mov
repz
call
mov
rcrb
into
and
sbb
lock
inc
daa
add
xor
pop
std
add
pop
cmp
fsubl
fsubp
xorb
cmp
cmp
out
add
nop
inc
fsubp
imul
xor
adc
mov
fpatan
sub
aaa
fdiv
repz
cmp
inc
mov
or
sbb
sbb
in
dec
xor
cmp
dec
add
cmp
cmpsl
cli
mov
mov
or
mov
cmp
push
inc
push
add
or
add
std
icebp
jmp
aad
sarb
mov
movsl
dec
stos
xchg
cmp
dec
mov
xchg
out
mov
jns
xorb
xchg
outsb
cmp
inc
pop
shll
out
into
inc
mov
adc
es
mov
insl
and
mov
xchg
cmc
sbb
clc
xchg
mov
jle
xlat
clc
mov
xor
jmp
or
sbb
and
ds
js
mov
adc
test
sub
inc
sahf
jmp
in
pop
jp
sti
push
je
xchg
lods
std
cmp
sub
sub
ljmp
xlat
and
or
enter
outsl
mov
cs
jno
cli
cmp
xor
test
add
jo
adc
in
add
das
call
ljmp
fidivl
xchg
mov
lock
inc
imul
mov
jb
fsubs
mov
in
inc
pushf
jns
sbb
dec
fucomp
xorl
push
ja
xor
jmp
sarb
pop
pop
pop
xchg
mov
mov
lds
jb
popa
rcll
mov
xor
inc
shrl
and
jne
pushf
mov
inc
dec
jecxz
push
mov
and
fnstenv
std
add
jmp
lods
cli
dec
pop
lret
loopne
push
ds
pop
ficoms
popa
jno
push
mov
leave
in
cli
into
lret
or
sub
sub
dec
rorl
not
xor
inc
sbb
and
hlt
aad
aas
int3
sbb
cmp
fdivrs
or
inc
xlat
jmp
xor
inc
pusha
fldl
jno
mov
popf
rclb
jl
rcrb
sub
or
fldcw
sahf
sbb
jl
fimull
addr16
fwait
mov
and
xor
icebp
mov
xchg
xor
stc
push
xor
inc
lcall
and
aaa
add
scas
js
lret
ds
sub
stc
sub
enter
test
inc
int
push
test
testb
stos
pop
pop
xor
cmp
pop
dec
and
push
imul
roll
iret
xchg
xchg
stos
pop
adc
dec
push
sbb
stos
or
add
in
pushf
pop
jp
imul
mov
xor
jne
mov
sahf
int3
jno
mov
sbb
addl
shll
out
jnp
jl
lock
dec
rclb
mov
inc
movsbl
movsb
push
xchg
add
fs
jne
and
fstpl
mov
sar
push
nop
push
fildll
movsl
pop
mov
sbb
cltd
outsl
adc
cmpsl
inc
stos
std
or
mov
mov
mov
sub
adcl
mov
lea
xor
xor
or
jmp
enter
xor
mov
hlt
sbb
mov
add
or
in
daa
pop
sbb
sub
xor
xor
and
pop
inc
xchg
repnz
jle
cmp
jl
es
jle
cmp
cmp
shl
insl
xor
adc
jne
cltd
push
and
mov
mov
shrl
add
fwait
lods
movsb
outsl
lret
mov
cmp
int
in
shll
lock
jecxz
gs
or
push
test
in
ja
insl
scas
dec
pop
xor
pop
sbb
cmp
out
adc
jl
repz
out
out
sbb
xor
mov
inc
xchg
aam
and
pop
push
test
stc
jmp
jmp
pop
pop
fnstcw
mov
mov
mov
sub
cmp
dec
add
outsl
pushl
mov
adc
push
scas
scas
mov
dec
push
outsb
push
pop
jno
stc
jo
ljmp
adc
test
push
inc
and
popa
xchg
cmp
stc
inc
call
and
out
data16
std
push
gs
mov
xchg
jae
sub
cltd
mov
jb
mov
bound
mov
push
je
jp
cmp
aas
cmp
mull
xor
sub
lea
or
aam
inc
mov
fsubrs
cmpsb
test
outsb
iret
or
leave
popa
inc
mov
pop
ja
nop
cs
out
in
lret
outsb
arpl
add
mul
mov
aaa
xor
sbb
stos
std
insl
into
push
lret
mov
adc
and
xor
cmp
cmp
dec
jae
loope
fimuls
jo
fldl
movsb
and
lods
lret
fstps
or
xor
jnp
rorb
mov
mov
sbb
push
pop
ficoms
mov
cltd
mov
sub
test
add
add
decb
int
aaa
inc
outsb
popf
pop
xchg
lea
xor
push
cld
xor
lret
fdivrs
sbb
movsb
mov
dec
cwtl
mov
in
loopne
js
cmpsb
leave
add
movsb
adc
fsubrs
sahf
lret
push
xor
dec
mov
mov
mov
xor
dec
jmp
stos
in
pop
or
pop
mov
jne
and
repz
je
dec
xchg
mov
pop
adc
jle
cmpsb
loopne
jo
insl
adc
testb
pop
ss
and
imul
shlb
int
pusha
jns
rolb
jo
scas
stc
outsl
sbb
or
push
fistl
add
xor
test
push
push
sub
rorb
int3
jle
loopne
loope
test
inc
test
arpl
aas
aaa
lcall
test
fsubp
rcr
push
pop
scas
cmpsl
test
stos
adc
jo
outsl
xor
pop
daa
sbb
fbstp
sbb
inc
xor
and
dec
jae
dec
ljmp
sbb
into
ss
inc
dec
jb
not
push
int3
rol
sub
pop
xor
pop
test
ss
inc
xchg
xchg
cmp
lods
pop
loopne
inc
jo
sbb
inc
mov
and
inc
cli
scas
mov
dec
pop
xchg
sbb
push
les
push
push
dec
pop
ss
jle
ja
mov
aam
addr16
mov
ds
je
sbb
pop
lahf
mov
mulb
pop
mov
jge
pop
xchg
mov
pop
adc
js
loopne
idiv
jae
jl
xchg
pusha
add
xor
jb
in
jp
dec
mov
push
in
mov
cmp
xchg
mov
loope
add
ja
mov
in
sbb
xchg
cmp
jmp
sub
fldl
stos
push
pop
mov
mov
inc
xchg
out
sub
sub
rcll
test
mov
lret
adc
mov
lret
repnz
out
test
sbb
std
add
xor
das
fisttps
test
mov
dec
mov
mov
pop
xchg
mov
neg
inc
jae
mov
or
cmp
xchg
fs
call
mov
mov
ret
cmp
ret
lret
fucom
dec
addr16
callw
outsl
push
xor
sahf
mov
stos
std
jl
xchg
or
fwait
pop
pop
lea
mov
sbb
push
repnz
xchg
out
mov
pop
cwtl
jae
cs
fnstsw
push
js
mulb
pop
fs
xor
addr16
mov
cmp
pop
orl
mov
mov
mov
jne
stc
test
repnz
mov
insl
jl
into
pop
cltd
push
pusha
add
mov
push
push
jne
sbb
cmpsb
int
fbstp
dec
mov
out
clc
or
jns
or
lcall
and
add
cltd
mov
mov
dec
sbb
mov
add
push
sti
test
adc
in
fadds
js
lea
push
aam
leave
add
add
lret
push
int3
xorl
or
xor
movl
cmp
movl
jne
mov
adc
mov
xor
shrd
adc
jmp
cs
push
loopne
lahf
pop
and
jns
or
add
or
adc
mov
xorb
rorb
pusha
add
int
xor
js
mov
lret
outsl
mov
xchg
cmp
pop
movsl
aam
inc
jl
xchg
pop
xchg
shl
xchg
adc
enter
in
js
jne
mov
aam
push
sahf
push
in
movsl
or
or
inc
sahf
mov
mov
fs
mov
sahf
jne
sbb
dec
mov
push
push
ffreep
lcall
sub
xchg
cmp
int
sub
test
xchg
cmp
aad
sbb
and
adc
jno
lods
call
adc
scas
cmpsl
je
arpl
ds
push
xchg
inc
cmp
inc
inc
inc
mov
jns
inc
fwait
insb
mov
pop
push
jb
and
lock
push
adcb
cmp
aad
popa
xchg
aas
pushf
cmc
cmp
mov
push
cmpsb
and
mov
filds
or
or
jno
xor
xlat
push
pop
push
mov
dec
jno
pusha
popf
jo
xchg
inc
int
mov
test
jmp
enter
sbb
enter
sahf
inc
mov
push
cmp
idivl
pop
mov
dec
cmp
inc
xchg
test
pop
cmpsl
mov
or
pop
push
xor
cli
add
pushf
inc
fisttps
mov
fisttpl
sbb
adc
inc
mov
pushf
sub
xor
dec
aaa
fwait
xorl
cmp
sbb
cmpsb
jg
enter
adc
dec
jbe
mov
jl
popa
xchg
push
fsubs
and
sbb
jmp
movsl
xchg
ficomps
aas
aaa
push
dec
inc
jae
std
repz
push
and
insb
sbbb
xchg
nop
or
push
jp
adc
hlt
aaa
jp
inc
jl
add
jp
aad
pop
adc
cmc
pop
test
fiaddl
inc
push
sbb
ja
adc
pop
dec
cmc
push
push
test
jge
push
push
rcll
add
sub
push
xchg
inc
int
adc
test
shlb
push
mov
icebp
xor
mov
mov
fldcw
cwtl
jae
jns
rcrl
cmp
ss
mov
xchg
orb
jmp
inc
xchg
outsl
ffreep
enter
mov
inc
add
mov
test
pop
cltd
mov
push
or
pusha
add
data16
mov
rclb
xchg
mov
data16
pop
cmp
out
roll
imul
fldl
xchg
pop
jecxz
stos
imul
test
mov
xchg
ret
in
cmp
mov
pop
pop
push
mov
lods
movsl
sahf
jo
mov
scas
sbb
or
inc
iret
daa
pop
in
ficompl
dec
xchg
imul
jo
sahf
clc
scas
xor
idivl
pop
adc
mov
mov
inc
aaa
arpl
in
push
lea
js
adc
rep
sub
jo
push
dec
inc
pushw
sub
push
xor
jl
dec
cmc
hlt
jo
xor
push
mov
adc
jne
and
ljmp
inc
imul
or
ljmp
std
jne
popf
lds
xorb
cmp
xor
ror
inc
jmp
xchg
xor
sbb
cmc
test
add
fcoml
mov
scas
sub
pushw
add
hlt
data16
je
jmp
lods
insl
xchg
add
pop
push
cmpsb
mov
daa
gs
xchg
add
ret
add
shl
into
sti
test
xor
push
sub
std
push
cmp
mov
pop
and
or
fsubs
cmp
adc
pop
cmpsl
dec
inc
loop
fstpl
addr16
sti
test
and
stc
pushf
and
movsb
notl
or
jno
pop
xchg
cmc
jnp
clc
call
push
or
mov
jno
rcrb
sti
loopne
les
mov
addr16
idivl
pop
fidivl
cld
daa
ja
mov
mov
push
sub
sahf
gs
mov
loope
mov
incb
sbb
gs
das
frstor
ds
inc
test
cmc
aaa
xor
xchg
jns
into
push
jb
xor
fsubs
dec
mov
xchg
cmp
xchg
cli
sbbb
cmp
add
bound
data16
mov
or
xchg
sbb
add
mov
add
dec
outsb
sahf
mov
push
repnz
fldcw
cltd
ret
ljmp
mov
sub
inc
add
call
add
adc
inc
aas
mov
push
jne
mov
add
repnz
push
stos
mov
or
add
dec
jecxz
stos
xor
fs
jbe
dec
xchg
jmp
cld
repnz
cs
pop
xchg
lcall
lods
jl
xor
xor
or
stos
ret
stc
lret
test
mov
adc
jae
push
xchg
or
fcompl
test
mov
fldcw
xchg
pushf
mov
add
cmp
jl
and
dec
cmpsb
enter
shr
mov
mov
sub
imul
mov
or
mov
shl
adcl
xor
xor
sbbl
or
mov
mov
cmp
jne
or
mov
sbb
mov
cmpl
mov
movl
movl
jmp
mov
jg
pushl
push
pushl
push
pushl
pushl
call
adc
xor
mov
or
adc
and
xor
movzwl
add
mov
mov
add
mov
incl
shrd
negl
mov
mov
and
mov
xor
shr
mov
xor
or
shl
cmpl
mov
mov
mov
movl
jmp
movl
jl
pushl
call
and
andl
sub
orl
sub
mov
subl
mov
mov
xor
add
subl
jmp
xchg
and
inc
xchg
arpl
mov
enter
add
or
add
pop
fisubs
pop
inc
xchg
xchg
jge
fsubrs
stc
cwtl
gs
repnz
fsubl
xchg
xor
idivb
sti
push
orb
add
test
cmp
jae
ds
or
xchg
mov
push
and
out
push
add
insl
jno
and
js
dec
fs
and
mov
rorb
inc
int
addr16
cwtl
xor
mov
pop
ffree
xchg
or
cmp
jmp
inc
push
mov
add
inc
mov
jne
movsb
jmp
mov
mov
arpl
in
adc
in
xor
or
popa
or
jo
cmpsb
xchg
pop
push
aam
or
xor
leave
dec
mov
sub
icebp
call
orb
xchg
lahf
ret
std
mov
and
push
sti
movl
pop
mov
sbb
inc
addr16
pop
or
stos
sbb
daa
push
push
push
jmp
mov
stos
mov
out
inc
int
add
and
xor
adc
jo
les
or
xchg
das
adc
sub
sub
mov
aam
sbb
ret
push
in
pushf
test
gs
and
xchg
aas
les
cmp
movsl
fbld
jns
mov
cmpsl
dec
call
adc
jmp
mov
sbb
sub
icebp
mov
adc
cltd
loopne
sub
cld
fcmovnu
sub
popf
xchg
in
dec
test
lods
mov
sbb
in
fsubrs
inc
xchg
mov
xorl
mov
ret
adc
sub
repnz
scas
out
divl
loop
xchg
push
jb
mov
data16
xchg
repz
bound
ljmp
nop
inc
mov
adc
loop
push
loop
pop
and
xor
pop
jecxz
sbb
test
rcl
push
adc
inc
sbb
imul
aaa
aad
mov
lock
fidivrl
ds
cmp
pop
push
and
cmp
push
int3
addl
enter
jecxz
push
pushf
imull
push
mov
js
pop
hlt
call
mov
jp
pushf
test
mov
jp
out
jecxz
subl
movb
push
ja
add
mov
and
sub
pop
push
popf
popf
dec
pop
push
and
ds
jge
lock
fbstp
cld
insl
ficoml
push
jl
cmp
push
loope
push
push
xchg
hlt
sbb
jo
mov
jns
shrb
push
jb
cmc
jmp
mov
addb
movsb
xor
dec
stos
stc
in
push
sahf
aad
insl
adc
push
mov
pop
xlat
inc
mov
pop
test
lahf
lret
xchg
mov
fildll
insl
pop
lret
loop
push
xchg
jmp
insl
mov
fsubrl
pushf
push
sbb
je
call
adc
push
pop
rcr
cld
adc
push
cmp
jb
repnz
pop
jae
cmc
and
mov
pop
dec
orb
dec
notb
fwait
hlt
pushf
mov
rcrb
xor
xchg
repnz
stos
sarb
jno
ds
dec
ret
stc
and
iret
or
or
cli
ret
xchg
sbb
icebp
stc
pop
popf
or
mov
aam
jecxz
add
nop
add
sbb
inc
shrl
enter
addr16
mov
adc
xor
mov
pop
jo
movsl
push
or
test
loop
push
jmp
dec
gs
nop
int3
add
sub
je
das
mov
jb
out
iret
jb
adc
pop
imul
je
enter
ss
mov
roll
ja
rcrb
mov
pop
push
jns
stc
xor
popf
sub
out
stc
aad
loope
mov
fdivs
mov
mov
mov
mov
movsl
cmp
shlb
jne
jp
enter
dec
ds
scas
pop
pop
mov
xchg
adc
scas
add
fadd
pop
push
xchg
insb
arpl
dec
cli
into
lahf
inc
mov
add
add
sti
iret
jmp
sbb
dec
mov
inc
mov
inc
push
xchg
sarl
cmpsb
or
and
pop
sub
mov
mov
adc
out
mov
imul
jge
push
aas
adc
sub
sbb
sub
std
or
adc
je
enter
fucomi
mov
sbb
ja
push
dec
leave
jbe
hlt
mov
aad
lcall
movsb
dec
les
sub
push
mov
clts
jb
push
imul
mov
or
push
outsl
iret
mov
aas
pop
pop
loopne
inc
cmp
add
push
ret
jns
mov
push
sbb
pop
fisubrl
mov
adc
mov
add
fiaddl
or
jbe
enter
cmpsl
sti
iret
lock
in
mov
mov
mov
shrd
movzbl
and
mov
shr
andl
mov
xorl
mov
xor
add
jmp
pop
push
mov
mov
pop
adc
sub
fidivl
or
pop
xchg
loope
xchg
mov
push
cmc
push
cli
lods
out
mov
repnz
aas
sbb
pop
sub
or
jno
movsb
ret
imul
sub
push
adc
data16
or
xchg
icebp
test
jmp
inc
ss
mov
pusha
pop
sahf
rorl
xor
jp
mov
adc
rcll
jbe
mov
rcrb
push
aam
pop
sub
dec
sbb
mov
dec
int
cmp
cmpsl
mov
jb
ss
pop
push
test
xlat
xorl
sub
mov
adc
lock
mov
add
xchg
inc
je,pn
mov
xchg
pop
push
xlat
lret
clc
test
sub
pop
mov
mov
lcall
mov
mov
call
fmul
je
adcb
out
jne
add
je
mov
push
fisttpll
xlat
sbb
mov
ja
push
rol
xor
test
fisttpll
dec
jmp
fsubs
dec
mul
xor
adc
es
andl
add
das
cmp
ds
pushf
ret
jae
push
leave
xor
ds
jno
fistpll
loop
jne
dec
adc
pop
push
mov
pop
testb
insl
mov
hlt
pop
int3
sub
sbb
call
fucomip
cmpsb
inc
mov
sub
push
mov
adc
jbe
xorl
push
mov
xorl
sbb
pop
mov
loop
cmpsb
add
in
repz
and
loopne
imulb
mov
mov
imull
scas
in
pop
and
pushf
loope
inc
push
loopne
jne
fwait
insl
test
sbb
xchg
rcr
sbb
adc
xor
mov
ljmp
rcll
sbb
bound
mov
movsl
cmp
insb
call
jb
xchg
icebp
lds
cltd
int
daa
sarl
pop
xor
sarb
icebp
push
pop
mov
or
mov
dec
jmp
sahf
andb
fld
jge
lods
sub
xlat
addr16
ja
jmp
mov
lock
mov
mov
addr16
test
and
test
clc
ret
icebp
iret
popa
dec
das
hlt
jecxz
call
jno
jp
cmp
pusha
stc
push
lret
pushf
xor
popl
stc
in
pushf
xlat
icebp
loop
popa
lcall
xchg
out
xchg
add
fldenv
mov
or
cwtl
xor
data16
popf
lods
mov
jne
clc
fucomp
xor
sbb
shll
mov
mov
or
jg
rcr
data16
pop
jl
loope
mov
cs
and
jno
in
out
shl
xchg
add
sub
dec
jb
lret
ret
in
push
sub
mov
or
pop
sub
notl
cmpsl
in
imull
jbe
outsb
sarl
je
xor
sahf
or
scas
mov
icebp
bound
hlt
xor
cmpsl
and
xchg
test
pop
lret
and
call
inc
xchg
ss
shlb
int
add
outsb
sahf
clc
inc
fwait
mov
sahf
pop
jo
scas
lds
les
shl
xchg
lcall
mov
sub
cli
bound
popf
rcr
and
stos
fincstp
insb
aas
in
sub
add
sbb
adc
inc
add
mov
movsl
out
mov
fstpt
mov
pop
or
mov
fistl
sub
cmpsl
inc
movsb
pusha
mov
mov
dec
lock
lret
pop
loopne
movsb
jne
pop
mov
jmp
push
vpshufhw
push
subb
push
inc
sub
adc
out
or
sub
add
aaa
imul
push
daa
std
jae
push
sbb
mov
xor
shll
mov
cmpsb
hlt
mov
hlt
cltd
mov
jo
std
imul
ret
in
insl
dec
adcb
out
add
mov
repnz
mov
xchg
js
dec
xor
mov
in
in
test
add
jmp
or
mov
std
adc
mov
inc
subl
jge
insb
sub
or
push
xchg
bound
mov
ds
ja
or
addr16
add
fcmovu
jbe
xchg
lock
fwait
mov
outsb
jl
std
jecxz
stc
jno
dec
je
int
xchg
stos
mov
pop
cmp
fnsave
aad
ffree
test
push
pop
fld
sti
jmp
scas
add
xchg
dec
mov
idivb
fmull
and
sub
mov
cwtl
jmp
add
sbb
fcmovbe
aaa
out
out
jnp
mov
outsb
push
adc
xchg
jae
xchg
lods
or
pushf
clc
push
ds
int3
out
leave
mov
je
xor
xor
iret
sbb
aam
into
in
mov
or
in
imul
mov
mov
jp
cmc
or
shl
xor
addl
or
sub
mov
mov
adcl
shrd
shr
andl
mov
cmpl
movzbl
movzwl
not
jmp
mov
movzbl
jb
call
sbbl
or
and
or
xor
add
mov
sub
xor
sub
orl
mov
mov
xor
xor
decl
or
jmp
add
ret
jge
pushf
xchg
mov
mov
mov
iret
add
or
adc
push
sub
pop
addl
out
imul
cmp
mov
pushf
jno
test
and
popa
fwait
pusha
dec
rolb
out
cmp
mov
in
in
xchg
and
add
mov
enter
mov
adc
jns
mov
test
imul
xchg
cmpsl
loope
xchg
fsubr
mov
ss
lret
cwtl
imul
notl
xchg
mov
or
push
inc
jo
lcall
mov
adc
or
mov
sub
js
jp
cmp
pop
orb
cmpsb
js
loopne
stos
ss
jb
mov
and
mov
into
loope
sub
enter
jo
test
mov
icebp
mov
mov
xchg
xchg
aas
or
shl
dec
xor
mov
mov
test
inc
stos
cmpsb
xor
ror
fs
mov
mov
out
mov
xchg
fidivrl
xchg
js
sub
rorb
inc
mov
and
je
fdivrs
outsl
ss
sub
fnstenv
rorl
cmp
sbb
je
inc
xchg
cmp
daa
xor
in
adc
int3
rcl
repz
int
jle
clc
sti
cmp
dec
in
call
mov
in
and
lods
stos
ret
jge
shlb
in
jb
and
lods
jns
stos
mov
push
rcrl
les
das
insb
jge
loop
out
pop
fwait
push
je
inc
xchg
ret
in
dec
test
mov
fadds
jb
cld
xor
mov
enter
mov
add
lret
mov
mov
push
or
sarl
out
jae
push
lret
pop
test
pop
mov
enter
inc
xor
add
testb
dec
push
out
mov
scas
dec
cmp
mov
scas
mov
int
push
les
or
daa
rcr
cs
sarb
aaa
pushf
jmp
pop
xchg
icebp
ret
xchg
push
pop
fwait
shlb
shll
loop
push
addr16
outsb
dec
pop
dec
incl
out
inc
and
ja
dec
xchg
xor
xchg
inc
lcall
push
xchg
push
aam
sti
or
mov
icebp
mov
mov
inc
xchg
mov
clc
pushf
lahf
jne
fists
adc
lahf
push
mov
mov
lret
lea
xlat
hlt
adc
loopne
mov
cli
icebp
lcall
jecxz
cmp
fsubrl
jmp
mov
inc
jns
cmp
test
adc
jecxz
fwait
add
or
xchg
adc
add
iret
fistpll
xlat
adc
std
mov
out
inc
dec
imul
int
dec
fadds
fdivrp
jmp
push
stos
and
jb
adc
mov
cmp
and
in
movsl
repz
sub
adc
into
adc
or
push
mov
into
movsb
ljmp
incl
sbb
push
push
lods
outsb
bound
loopne
ss
adc
sbb
push
movsl
push
test
xchg
arpl
xor
xchg
es
mov
stc
cli
stos
divl
je
out
or
addl
in
push
jbe
pop
cmp
cs
cmp
xor
mov
out
adc
xor
lods
mov
fsubrl
sbb
dec
adc
stos
stos
fdivrl
ret
sub
repz
sahf
push
jle
mov
in
rorb
xor
push
push
xchg
ja
dec
xor
dec
insb
outsl
jb
or
pop
leave
repz
cmpb
fld
call
mov
xor
inc
mov
sbb
and
dec
std
mov
adc
jmp
jb
mov
test
test
xor
mov
cmpsl
dec
repnz
dec
scas
sbb
mov
fsubr
js
mov
pop
push
aaa
or
movsl
inc
jmp
push
mov
jns
mov
mov
inc
push
sbb
dec
push
push
cmp
push
mov
fs
out
push
std
dec
imul
jbe
jp
and
or
xchg
mov
adcb
int
pop
xchg
or
mov
sbb
pop
aaa
nop
or
cli
inc
add
cmp
addr16
testb
int
mov
dec
inc
out
sti
mov
jle
jmp
orl
mov
sti
cmp
sub
mov
scas
and
xlat
mov
dec
add
dec
mov
mov
call
aaa
and
xchg
push
shll
mov
dec
out
loope
inc
xor
sbb
cmpsb
hlt
pop
movsb
jmp
and
mov
movsb
outsl
ret
orl
xchg
mov
fbld
push
outsb
out
fsubp
pop
jo
bound
lahf
cwtl
and
imul
lods
push
shlb
and
icebp
lds
mov
mov
fsubrl
lret
sarl
xor
ret
inc
or
adcb
aad
mov
dec
stc
and
mov
loope
subl
lea
xor
mov
mov
adcl
shrd
sbbl
shr
jmp
arpl
and
add
addr16
xchg
xor
lcall
push
bound
cmp
outsl
mov
roll
fisubrl
clc
loopne
stos
lds
dec
pusha
sub
add
fs
ret
iret
addl
test
hlt
mov
add
pop
xchg
and
jl
dec
shlb
mov
mov
dec
out
xchg
or
mov
jmp
add
outsl
jmp
je
std
and
rcr
cltd
cs
mov
into
aam
add
adc
pop
inc
inc
mulb
aaa
decw
sbb
xchg
loope
aam
push
jbe
jno,pt
inc
fmul
popa
and
pop
sub
cmp
mov
inc
xor
stos
xchg
and
lcall
stos
mov
sub
mov
sub
push
gs
or
lret
jle
lods
imul
adc
ss
es
dec
xlat
push
mov
mov
add
in
and
cmpsl
fldl
aad
mov
lods
repz
add
xchg
sbb
nop
pusha
fnstcw
ficoms
addr16
dec
push
xchg
ret
roll
sub
fistps
jl
cmpsl
xchg
xchg
dec
mov
shlb
cmp
xor
cmp
es
in
mov
xlat
dec
pop
ret
mov
pop
cmp
pop
lahf
xchg
daa
inc
outsl
inc
ret
lahf
mov
int3
add
mov
cmpsb
push
in
inc
scas
sti
sbb
mov
lods
inc
sbb
inc
mov
add
setno
pop
xchg
sub
push
repz
dec
dec
inc
push
dec
repz
shr
pop
lret
sbb
push
adc
mov
dec
fsubs
jns
inc
push
push
lods
adc
add
mov
lahf
xor
inc
movsb
push
incl
xor
adc
enter
sahf
insb
add
sub
aaa
das
leave
sbb
mov
icebp
push
test
out
popa
adc
push
int3
push
rclb
sbb
stos
inc
aaa
dec
movsb
pushf
cmc
pop
jne
bound
xor
bound
loope
sarb
shrl
jle
in
inc
jns
add
xor
aaa
mov
shll
pop
add
decl
push
hlt
add
imul
mov
xchg
adc
shl
pop
test
lahf
gs
divl
sub
xor
mov
xchg
repz
mov
inc
xchg
cmpl
pop
stos
adc
das
push
mov
jnp
pop
and
mov
jns
xor
stc
cmpsl
xor
and
outsl
cmp
pop
adc
add
loopne
mov
inc
or
mov
js
inc
div
test
rcrl
cmpsl
std
jle
movsb
xorb
push
inc
or
in
xchg
shlb
out
fldenv
jb
out
and
cmp
fimuls
popa
xor
int3
pushl
lcall
jecxz
mov
sbb
xchg
or
jo
inc
aas
xor
je
pop
xchg
cmp
fsts
adc
cmpsl
cmp
iret
scas
push
cmp
test
xchg
sub
lods
out
xchg
mov
js
movsl
imul
cld
dec
imul
dec
push
xchg
inc
stos
aad
inc
js
decl
sub
mov
fistpl
aam
pushf
dec
cli
aaa
mov
popf
cmp
mov
xlat
push
in
xchg
inc
inc
loope
xchg
cmp
mov
je
push
imul
movsb
outsb
stos
xor
push
dec
jns
mov
addl
or
mov
rorb
cmp
js
cmpsb
data16
clc
ds
popa
sbbb
jnp
sub
jle
sbb
inc
cmp
es
dec
insb
jnp
inc
aad
fwait
mov
pop
test
daa
sbb
sbb
cwtl
mov
test
jo
adc
mov
sbb
clc
jge
ds
lock
fwait
leave
pop
and
jecxz
rorb
xor
outsl
lods
jbe
cwtl
add
cmpl
sbb
lea
pop
fcmovb
jle
enter
sub
ljmp
cltd
icebp
xchg
inc
adc
pop
mov
inc
push
clc
mov
push
aam
mov
mov
lea
popf
mov
in
mov
stos
insl
pop
out
das
jecxz
int3
out
or
sub
mov
sub
popf
adc
aas
leave
or
inc
sarb
lock
in
adc
sub
jg
repnz
mov
xchg
push
aam
dec
xchg
or
lods
fistpl
inc
xor
cmp
mov
xchg
mov
mov
aaa
xor
push
movd
sub
lods
jl
lods
test
sub
mov
out
shl
xchg
cmp
enter
cmpsl
lret
or
pop
add
xor
arpl
add
push
and
sbb
subb
jns
sbb
push
xor
push
arpl
inc
les
dec
jns
mov
mov
fidivrl
push
bound
and
aaa
jne,pt
xor
pop
jb
dec
add
jle
push
push
es
push
inc
dec
ffreep
adc
jmp
std
mov
cmpl
mov
movl
jmp
mov
jbe
push
push
pushl
push
pushl
pushl
push
call
mov
mov
sbb
movl
sbbl
adc
mov
or
or
mov
sub
mov
xor
cmpl
mov
not
jmp
movl
movl
je
push
push
call
sub
not
movl
neg
and
movzbl
and
mov
sbbl
xor
adcl
jmp
pop
lea
or
xchg
dec
dec
mov
cs
imul
xchg
adc
inc
ret
push
icebp
mov
sbb
xchg
pop
int
push
mov
add
sahf
add
xchg
lcall
aas
int3
jge,pn
push
push
xchg
lcall
xchg
lock
add
mov
out
insl
xchg
cltd
jnp
cmp
ljmp
dec
mov
pop
mov
stos
fisttpll
cmp
das
cmp
cmp
cmp
sarb
dec
push
ficoms
jmp
lret
cmp
mov
sub
lret
and
test
fwait
sbb
shl
in
imul
loope
adc
adc
enter
dec
mov
push
pop
inc
cmc
dec
mov
popf
js
cmp
mov
xchg
mov
mov
xor
imul
repz
adc
leave
int
faddp
cmp
int3
pushf
xor
dec
mov
rolb
dec
push
pushf
cmp
or
mov
mov
jp
pop
decl
stos
push
mov
in
jge
in
imulb
ret
mov
inc
jbe
in
xor
pushf
push
xchg
loope
arpl
mov
sub
mov
cs
hlt
push
mov
or
testb
cs
sub
mov
push
add
xchg
adc
pusha
inc
fisttps
loop
and
pop
jb
popa
cmpsl
fs
dec
push
aas
mov
jmp
sbb
adc
xor
repz
or
xchg
inc
push
inc
jp
enter
mov
rcrl
hlt
xor
rorl
fcompl
bound
clc
pop
push
mov
add
sti
pushf
sbb
cmp
inc
in
aam
fsub
out
pop
inc
or
outsl
cmp
inc
dec
xchg
shr
stc
lea
xor
cmpb
aam
sub
aas
or
mov
and
push
sub
test
cltd
lods
cmp
adc
je
ss
mov
insl
lds
in
lea
mov
lret
mov
aaa
test
std
jmp
adc
xor
push
test
ds
pop
xchg
hlt
cmp
push
icebp
xchg
mov
adc
add
inc
mov
jge
push
mov
jp
add
add
inc
jns
divb
shll
xchg
xor
dec
jae
pop
jge
mov
pop
int3
rorb
inc
jne
aam
and
inc
sti
lcall
mov
cmp
push
mov
add
sub
sub
sub
mov
outsb
jbe
enter
cmp
pop
in
mov
dec
or
inc
lock
xor
xor
stos
aas
xchg
add
lods
or
negl
cmpsb
cmpsb
xchg
in
rcr
cltd
xchg
scas
in
jecxz
popa
mov
insb
out
je
out
adc
ret
adc
imul
lcall
jae
out
dec
and
mov
insb
inc
and
jle
leave
cli
xchg
loop
push
in
pop
sbb
imul
out
inc
fucomip
sbb
lock
jns
mov
jns
and
testl
sahf
jmp
dec
sub
xor
sti
sub
aas
arpl
in
xchg
movsb
test
or
aam
sti
mov
mov
adc
sub
andl
lock
insb
lcall
mov
int3
dec
xor
scas
mov
jge
mov
dec
and
sbb
loope
or
cmove
fwait
in
scas
push
push
stos
mov
or
hlt
mov
lcall
or
je
adc
addl
mov
inc
jge
call
aas
push
dec
and
add
sub
insb
jns
mov
mov
push
rclb
fwait
xchg
xchg
mov
icebp
inc
sbbl
jno
jl
hlt
repnz
jp
inc
cmp
in
lahf
dec
mov
cld
dec
jp
mov
adc
add
cli
loope
testb
jae
push
push
je
lret
jmp
lret
jo
les
mov
fldcw
cltd
cs
loopne
push
xor
and
repnz
pop
push
mov
rcrl
fsubr
adc
mov
sub
cmp
jmp
cmp
dec
push
sub
push
or
cmpsb
faddl
dec
sub
xorl
mov
shl
cwtl
cmpsb
push
xlat
imulb
or
in
loope
xlat
fimull
lods
cmp
cmp
inc
ss
add
pop
sub
aam
or
stos
mov
sbb
mov
lock
mov
imul
inc
mov
addl
xchg
cli
xchg
dec
ljmp
gs
loope
cmpsl
fldt
or
sbb
fldcw
repnz
mov
scas
jmp
stos
pop
dec
pop
mov
cltd
xchg
pop
lods
inc
adc
mov
mov
and
fwait
lods
jnp
popa
xor
ret
cmc
inc
adc
in
fisttpll
and
imul
enter
push
xchg
mov
mov
out
popa
pusha
in
jbe
or
adcl
shl
imul
cmpl
mov
mov
mov
jmp
movl
jne
pushl
call
and
sub
or
or
xor
mov
and
mov
mov
shrd
sbbl
mov
mov
andl
xor
shr
jmp
mov
adc
and
mov
iret
add
or
and
mov
fstps
or
cmp
jle
imul
push
sub
inc
cmp
nop
ljmp
aaa
movsl
out
xor
inc
push
or
leave
mov
inc
inc
ret
lret
adc
roll
arpl
addb
dec
aam
pop
stc
imul
notb
fmulp
xlat
mov
mov
sbb
inc
imul
sub
cmp
and
jo
cwtl
jle
adcl
fmul
pop
test
pop
cli
cltd
repz
pusha
inc
inc
ljmp
push
lcall
inc
xorb
sbbb
jbe
fcmovnbe
shrl
pop
mov
pop
aas
xor
iret
xor
fadds
mov
xchg
outsb
mov
ss
dec
pushf
out
enter
cmc
jno
lods
test
sbb
test
in
dec
ja
scas
push
lea
insl
add
xchg
rcrl
cltd
sub
repz
ss
mov
cli
movsl
fidivl
test
and
mov
lcall
jge
scas
mov
mov
sbb
rcrb
call
and
popa
push
pop
int
mov
add
in
mov
push
add
rorl
cmp
lock
out
maskmovq
imull
jae
or
inc
data16
cmc
ficomps
frstor
aaa
in
xchg
mov
gs
gs
mov
inc
xchg
add
loope
jnp
inc
stc
outsl
lds
stc
rcrb
adc
out
arpl
or
add
mov
add
lcall
xchg
push
sub
jno
jl
xorb
shll
popf
xchg
xchg
dec
xchg
pop
mov
imul
arpl
inc
and
cmp
outsl
xchg
xor
pop
sbb
mov
mov
out
test
loop
sbb
xchg
sahf
je
mov
popf
and
and
push
scas
test
inc
aad
mov
mov
mov
sbb
pop
ss
inc
dec
cmp
movsl
mov
mov
es
ret
xor
add
andl
clc
mov
dec
shll
mov
fistpll
mov
rcrb
xchg
jg
das
pop
mov
ss
xchg
inc
testl
std
outsl
xchg
cmc
inc
push
xor
mov
hlt
cmp
mov
inc
outsb
js
cmp
sub
icebp
dec
inc
icebp
loopne
sahf
push
xlat
cmp
aas
cmp
sahf
hlt
cmp
bound
jb
aas
in
insl
sbb
inc
pop
test
stc
mov
push
pop
sbb
mov
dec
dec
push
es
lahf
sbb
jae
sbb
mov
jge
pop
mov
cwtl
out
repz
inc
lock
iret
fdivrp
cmp
fwait
shll
mov
nop
adc
lock
out
stos
hlt
pop
inc
aaa
jmp
or
lret
push
mov
pop
pop
test
lock
or
mov
cmp
nop
fistpl
cmp
add
lds
test
lock
fcoms
mov
xor
imul
and
push
sbb
pop
in
mov
punpckhbw
stos
jp
ja
jg
lcall
loope
adc
pushf
repnz
pop
or
xchg
loop
adc
js
or
dec
cmp
phsubw
fs
cmpsl
stc
cmp
mov
shlb
imul
pop
leave
adc
xor
sub
pop
jmp
mov
or
jecxz
and
loope
popa
pop
stc
test
cltd
sub
movsl
sbb
jns
xor
ret
outsl
daa
popa
inc
enter
out
pop
clc
pushf
pushf
dec
stc
sub
int
fiadds
mov
addr16
fistl
pop
das
in
xor
inc
sbb
mov
sbb
and
ja
dec
sbb
and
push
lret
jl
int3
pop
fldcw
decl
fstpt
daa
push
pusha
xchg
jecxz
mov
rcll
outsl
inc
in
mov
jns
push
inc
lahf
lcall
sbb
out
mov
xor
fwait
enter
adc
mull
shrb
adc
sub
imull
push
rorb
jns
fwait
pop
into
dec
pop
jmp
sti
xorl
jo
or
xor
jbe
sub
cmp
push
cmpsl
mov
mov
lret
xor
mov
push
cmp
mov
popa
inc
lock
not
clc
shll
cmp
push
push
or
jmp
das
fs
push
xlat
and
jge
sub
stos
dec
jae
inc
in
cli
lods
out
adc
xchg
icebp
nop
imul
inc
pop
sub
loop
push
and
mov
gs
mov
lods
hlt
testl
lods
or
jge
jae
pusha
or
lock
imul
loopne
inc
jnp
and
xor
cmp
sbb
jns
pop
or
cmp
mov
mul
imul
pop
xlat
loope
loop
lahf
adc
adc
xlat
sub
test
jns
sub
shll
add
adc
mov
adc
mov
adcl
xor
andl
or
shl
addl
sub
mov
movl
jmp
cli
and
and
and
adc
ret
mov
mov
mov
or
add
or
cmpsb
add
loop
lock
push
mov
lds
dec
aaa
mov
inc
jg
pop
mov
push
push
push
xor
fisttpll
fsubs
sub
shrl
push
sbb
xor
lock
int
enter
movsl
xor
fsubr
paddb
popa
adc
in
adc
mov
xor
mov
push
xchg
xorl
sub
mov
inc
pop
pop
jmp
mov
aas
cmp
int3
push
in
inc
ss
xor
pushf
jb
je
inc
cmp
and
lcall
xchg
sbb
stos
and
sti
cwtl
out
insl
scas
into
or
test
push
add
out
or
or
lcall
add
mov
sub
leave
clc
add
cmp
in
sbb
fwait
inc
jbe
push
in
add
mov
dec
xor
cmp
pop
ds
ljmp
push
inc
jg
sbb
or
push
mov
out
xchg
mov
add
ss
push
push
imul
insb
xor
sub
jae
cs
dec
mov
mov
mov
fsubl
or
and
or
cmp
mov
inc
sub
adc
sub
push
jb
jg
fnstenv
push
mov
fisubrl
in
imul
mov
sbb
sub
inc
jb
sti
leave
lret
rol
push
add
pop
inc
cmpsl
ret
xchg
dec
jl
or
leave
loop
xor
fbld
shlb
push
mov
mull
cltd
sub
pop
loop
out
stc
push
xor
xchg
xlat
loop
fisubs
push
ja
shrb
in
sbb
mov
mov
lret
jp
xchg
push
pcmpeqb
adc
sbb
ds
adcl
test
mov
popf
dec
movsl
loop
cmp
aad
mov
dec
xchg
das
je
jge
fdivr
ja
fyl2x
stc
stos
cmp
andb
pop
fsts
sub
xchg
test
and
enter
and
pop
clc
insl
xchg
lock
sub
pop
stos
sub
mov
lods
dec
leave
jge
lret
or
pop
inc
lods
xchg
sbb
insl
dec
lret
movsl
mov
imul
xor
mov
sub
nop
scas
idivb
sbb
bound
pop
shll
cmp
push
xchg
inc
push
fsubl
cmpsb
and
sbb
and
add
mov
mov
lcall
test
pop
hlt
aad
repnz
idivl
add
mov
mov
cld
ss
jno
add
jb
out
jnp
mov
adcb
xlat
sub
dec
xlat
cmp
inc
push
pop
data16
hlt
aam
sarl
lock
pusha
mov
jge
or
mov
or
or
jne
outsb
popf
mov
inc
ljmp
iret
jecxz
aad
adc
add
push
int
repnz
mov
insl
pop
inc
jns
or
std
add
mov
in
adc
xchg
jle
mov
xor
mov
pmuludq
daa
test
sub
hlt
pusha
ljmp
and
popa
nop
sbb
cltd
xlat
testb
movsb
cmpsl
lds
sbb
addr16
testl
xchg
sub
pop
iret
in
jo
xlat
push
movsb
cmpsb
and
scas
cmp
jmp
fnstsw
cmp
subl
or
sbb
push
aas
loop
loope
in
sub
es
insl
outsb
dec
mov
scas
in
fwait
out
arpl
cmpb
cmp
movsl
pushf
dec
xchg
test
repz
inc
dec
xor
or
arpl
sub
jle
ljmp
sub
jge
jns
and
mov
inc
pusha
fwait
or
pop
pop
cs
jae
sub
cmp
mov
nop
pop
xchg
sub
xchg
mov
loopew
fadds
faddp
mov
aaa
inc
cmp
xchg
dec
xor
mov
mov
iret
push
mov
popa
out
test
jo
xor
pop
outsl
pop
adc
cmp
inc
loope
push
shl
movsl
pop
xlat
popf
lahf
mov
inc
es
add
push
orb
sub
xlat
cmp
mov
loope
pop
aas
xchg
dec
mov
in
cmp
jb
icebp
mov
arpl
or
xor
mov
rorb
into
sub
test
fdivrs
sub
add
loopne
cmp
mov
mov
sbb
aas
stc
fsub
cld
js
icebp
gs
mov
mov
push
imul
xlat
outsl
mov
xsha1
cmpsb
dec
push
aas
subl
mov
jb
add
scas
xor
stos
lret
sti
dec
inc
aam
movsl
pop
add
pop
or
and
adc
cwtl
jge
sbb
and
or
dec
lahf
fwait
mov
cld
lods
je
pop
movsb
popf
push
cmpsl
ds
out
rorl
cmp
mov
jg
mov
mov
shrd
orl
mov
mov
xor
shl
xor
movl
or
adcl
shr
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
andl
sbb
xor
sub
sub
adc
mov
sub
mov
xor
mov
cmpl
mov
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
sub
mov
sbb
mov
adc
and
mov
sbb
dec
or
mov
jmp
test
aaa
push
insb
add
cmp
add
or
stc
mov
mov
test
mov
cmp
leave
cmp
add
adc
jno
cmp
cmp
ficoml
stc
pushf
xor
lahf
pop
push
xor
jmp
notb
inc
in
jnp
xor
push
flds
mov
or
repz
aaa
mov
jno
pop
mov
orb
es
push
aad
dec
or
out
mov
jmp
addr16
outsb
int
adc
jle
xchg
jbe
popf
or
stc
imul
and
repnz
mov
les
call
icebp
hlt
or
ret
bound
orb
lret
mov
aad
sbb
mov
inc
cs
fcompl
dec
mov
jae
cmc
cltd
in
out
mov
aam
mov
cmp
pop
jecxz
cmp
cmpsb
push
mov
loope
loop
mov
xlat
scas
aas
mov
sub
inc
push
je
push
sarl
sarl
mov
pop
push
mov
jmpw
cmp
inc
mov
xor
inc
xchg
scas
lea
add
addb
shll
les
pop
dec
test
or
dec
lret
and
add
ja
les
push
inc
iret
pop
decw
fsub
or
leave
or
sahf
sub
xacquire
fcoml
mov
cmc
jnp
and
adc
sbb
popf
mov
mov
lods
inc
lock
cmp
pop
ret
mov
mov
cmp
ret
ja
outsl
and
and
sbb
mov
jnp
clc
sbb
pop
js
mov
adcl
insb
xor
xchg
inc
adcl
insl
test
xor
xor
jnp
inc
push
add
xor
xchg
lret
in
push
push
negb
mov
scas
add
imul
pop
scas
mov
pop
add
xor
enter
mov
testb
pop
sarb
mov
ss
das
dec
test
cmc
mov
cwtl
and
and
xor
int
xchg
decl
fldl
inc
loopne
jp
mov
stc
push
inc
jbe
mov
inc
mov
mov
xchg
adc
ret
push
dec
cmp
lock
lea
jns
hlt
and
sbb
dec
lcall
pop
arpl
ljmp
call
add
cwtl
sahf
push
xlat
cmp
movsl
int3
pop
dec
orb
jnp
jnp
add
mov
loop
or
mov
mov
push
pop
mov
pop
inc
xor
pop
or
outsb
adc
push
in
pop
icebp
jnp
es
ret
icebp
pop
scas
or
mov
cmpb
repnz
das
shlb
mov
push
mov
sbb
dec
jo
mov
sub
xor
xchg
add
stos
movsl
dec
scas
cli
jmp
outsb
pop
enter
call
mov
hlt
mov
and
xchg
inc
enter
push
xchg
outsb
in
imul
push
push
pop
repnz
lret
stos
xchg
cmpsb
sbb
mov
lmsw
int
out
test
adc
mov
mov
push
js
xor
inc
pop
pushf
add
sub
lods
sub
inc
cmp
push
out
daa
xor
testl
es
xor
cld
push
pop
xor
in
fwait
jne
mov
das
push
inc
fisttps
cld
out
xchg
ds
mov
adc
lods
xchg
dec
pop
mov
mov
jbe
ja
mov
pop
adc
sbb
mov
cwtl
jbe
jns
sarl
cmp
and
sbb
sub
cmp
dec
inc
inc
inc
mov
enter
jns
inc
mov
dec
mov
or
push
into
adc
and
jle
aad
jl
cs
not
jns
ret
mov
add
aad
cmp
pushf
cmp
cmp
push
in
pusha
add
hlt
add
jae
mov
pop
cmp
repnz
cmp
or
aam
dec
mov
les
mov
cmp
push
xchg
sbb
xorl
fidivs
scas
iret
jmp
sub
leave
mov
aas
mov
and
dec
pop
ljmp
sub
cmp
je
sbb
jle
into
adc
cs
enter
and
popf
int3
add
mov
jno
nop
cmp
xchg
mov
cld
lods
cld
push
mov
popa
mov
in
push
sbb
sbb
outsb
sub
popa
hlt
dec
push
test
dec
mov
hlt
inc
xchg
sbb
jns
imul
mov
adc
jb
mov
movsb
out
cmc
jbe
int
add
notl
shrd
andl
shr
mov
adc
mov
xorl
mov
xorl
mov
subl
jmp
sbb
daa
sbb
cmpsl
inc
or
hlt
bound
or
add
or
add
add
cmp
pop
aam
mov
scas
aam
out
inc
btc
sub
insb
mov
ja
jne
jne
gs
test
mov
hlt
pop
push
adcb
push
imul
ljmp
rcrb
and
stc
push
and
xor
lret
and
push
jb
sbb
fisubs
cs
cltd
xor
mov
add
popf
push
pop
and
push
call
popf
cmp
repz
test
jmp
aad
xor
push
xor
out
into
and
or
dec
mov
lock
cltd
scas
sbb
cmpsl
xor
xchg
and
jecxz
inc
in
lahf
ds
adc
ret
imul
pop
xchg
shlb
adc
or
xchg
daa
in
add
fs
test
pop
sub
les
scas
je
push
dec
xchg
neg
shl
mov
stos
mov
outsb
dec
mov
imul
jo
sub
jp
mov
push
dec
ret
adc
fstps
scas
ret
roll
ja
mov
push
daa
push
inc
in
shl
push
out
or
imul
incb
add
mov
jae
xor
popf
lock
hlt
dec
lahf
out
or
fsubr
in
cld
mov
pop
inc
sub
pop
add
inc
scas
pop
jb
rcrb
int3
xchg
mov
je
add
jns
push
mov
inc
clc
pop
mov
xchg
add
and
lods
sbb
jno
cwtl
int3
fsubrl
jbe
cmp
sbb
mov
push
das
push
lock
sbb
jp
add
lods
sbb
or
aas
or
es
push
pop
lahf
movsb
add
fwait
or
lret
push
icebp
adc
xlat
xor
inc
ss
add
dec
lds
push
push
pop
stos
int3
hlt
cmp
sub
jno
push
jbe
icebp
mov
dec
adc
scas
or
data16
mov
add
mov
sub
cld
or
mov
arpl
loope
inc
rol
or
faddp
pop
sbb
xchg
outsl
call
std
es
mov
xlat
inc
dec
je
rcr
push
test
lahf
in
mov
rcrb
sub
aad
data16
popa
sbb
cmp
and
sbb
in
jl
xchg
rolb
mov
push
and
xchg
stc
js
cli
aaa
sahf
insb
xor
pop
jns
test
out
xchg
fs
push
in
mov
out
dec
mov
push
stc
dec
sti
dec
lds
lock
cmp
push
popl
movl
cli
sub
xor
jns
je
mov
push
mov
in
sub
std
lret
sub
cltd
enter
mov
xchg
push
cmp
std
sbb
add
les
and
mov
add
add
mov
sub
inc
jae
lods
in
pusha
sub
pushf
aaa
sub
shrb
loope
cmpsb
adc
cmp
hlt
iret
pop
nop
push
add
push
fisubrl
movsl
mov
sub
loope
jle
fildl
pop
sbb
add
or
and
jmp
outsl
hlt
cmp
insl
push
scas
push
cmc
andl
mov
pushf
je
xor
xchg
or
xchg
mov
sub
mov
lret
or
xor
aas
cmp
stc
shrb
add
jne
cmp
in
mov
popa
jle
ret
in
add
ljmp
cmpsb
mov
add
inc
into
mov
mov
popf
int
test
mov
inc
push
enter
stos
incb
mov
jno
out
test
add
jecxz
pop
jecxz
sbb
je
in
sub
dec
xchg
sub
and
sub
add
std
loopne
in
xor
xor
or
jbe
fwait
or
stos
dec
push
or
insb
push
or
jnp
sub
aam
sub
fisttpl
push
fs
push
imul
cld
dec
je
jb
ss
lret
frstor
xor
jmp
push
adc
xchg
sub
and
cmp
cli
stc
outsl
fiaddl
imul
sbb
data16
or
xor
shl
test
push
clc
mov
aad
sub
pop
sti
xor
adc
mov
jmp
cmp
push
cmp
add
fidivrs
sub
adc
mov
mov
adc
punpcklbw
lods
xchg
leave
fs
test
sbb
and
cmc
xor
inc
ja
cmc
psubb
jge
adc
push
in
xchg
xor
in
hlt
fcompl
add
es
fsubr
xor
test
push
xchg
aaa
daa
pop
pushf
jno
insb
add
or
push
stos
push
add
imul
mov
sbbb
mov
pop
movsb
xor
xorl
xor
or
shl
adcl
imul
sub
movl
jmp
mov
add
mov
shrd
orl
mov
mov
addl
xor
shl
xorl
xor
xorl
or
shr
mov
mov
mov
cmpl
mov
movzbl
jmp
movl
jle
pushl
push
push
call
sbbl
or
sbb
orl
sbbl
mov
sub
mov
mov
xor
add
mov
shrd
shr
and
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
call
and
sbb
xor
add
xor
add
sub
or
add
sub
xor
or
add
mov
xorl
mov
add
mov
sub
mov
andl
xor
orl
xor
or
shl
add
sub
add
movzbl
sbb
mov
xor
add
mov
sub
and
mov
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
adc
sbb
sbb
xor
xorl
mov
sub
mov
and
cmpl
movl
mov
mov
mov
jmp
movl
movl
jge
pushl
pushl
call
orl
sub
adc
sub
andl
addl
shrd
cmpl
mov
movl
movl
jmp
mov
ja
pushl
push
call
movzbl
sub
mov
orl
and
add
and
mov
xor
adc
and
shr
mov
mov
orl
xor
xorl
shl
cmpl
movl
movl
jmp
movl
movl
jb
push
push
pushl
call
sbb
not
add
andl
incl
adcl
xor
or
mov
or
movl
mov
cmpl
mov
not
jmp
mov
jbe
pushl
pushl
push
call
mov
sbb
dec
xorl
xor
sbb
add
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
push
push
pushl
push
call
not
or
and
mov
mov
sub
sub
movl
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
push
loop
inc
pop
inc
sbb
jae
cmc
mov
stos
pop
or
iret
add
or
outsb
loope
pop
mov
mov
stc
push
mov
pop
adc
mov
mov
sbb
pop
mov
dec
scas
mov
lock
jle
and
mov
inc
das
jnp
test
mul
sbb
xor
repz
test
pop
adc
sbb
sarl
jmp
pop
dec
into
pushf
add
mov
insl
addr16
ret
add
mov
push
sbb
jg
fdivp
and
movsl
mov
xor
inc
aas
adc
ret
jb
mov
call
clc
dec
shll
clc
jmp
jb
xor
fdiv
xchg
pop
stos
push
jnp
jns
cmpl
test
jne
ss
jne
iret
mov
xchg
notl
pcmpgtw
bts
inc
pop
stc
lahf
shlb
subl
or
xor
aam
adcb
lock
in
jae
sbb
or
or
jmp
jne
jl
cmp
negl
out
cmp
push
and
jecxz
push
movl
xchg
shlb
pop
push
imul
jmp
rorb
flds
insb
imul
sub
or
mov
add
int3
dec
test
pop
ljmp
psllq
lods
lods
pop
popa
add
pop
lahf
out
aad
inc
xlat
dec
popf
mov
dec
adc
int
inc
adc
jb
fiadds
divb
inc
js
add
bound
mov
lcall
insl
test
inc
aam
jl
xchg
fwait
sti
or
sub
pop
sar
je
xor
push
lods
das
mov
jne
pop
mov
add
push
sbb
cmp
mov
and
cmp
push
out
lea
push
cltd
add
xchg
add
gs
mov
sahf
inc
and
mov
push
and
out
push
adc
hlt
add
jge
sbb
jmp
stos
neg
nop
nop
mov
mov
dec
pop
add
outsl
pop
xchg
jne
adc
stos
cmp
cmp
fwait
jnp
fnsave
sbb
xchg
and
fnstsw
sub
sub
mov
aad
pop
stc
cli
leave
insb
push
mov
adc
inc
sbb
inc
or
cld
xor
lds
movsl
mov
adcl
dec
imul
fwait
out
xchg
push
jp
pop
or
inc
out
aam
stos
mov
xor
adc
ficompl
cld
out
clc
insl
xlat
cmp
adc
jg
das
inc
je
or
cwtl
add
xlat
jg
mov
mov
adc
push
cmpb
inc
xor
and
xchg
test
das
mov
jb
pop
pop
adc
mov
inc
fs
iret
dec
dec
les
jecxz
xchg
aad
mov
clc
sub
aas
pop
add
dec
ret
mov
mov
mull
xchg
cmpsb
pop
pop
dec
jl
fsubp
or
ljmp
mov
mov
or
test
sbb
inc
fisubrl
ss
sbb
add
dec
sbb
mov
mov
or
lea
pop
adc
cld
cmpl
pop
jg
adc
xorl
cli
sahf
rcrl
pop
out
mov
mov
popf
jge
push
stos
push
add
roll
xchg
incl
mov
xor
out
ffreep
adc
push
cli
dec
push
sti
adc
inc
movsl
pop
lock
xor
adc
jmp
push
add
push
mov
pushf
enter
pusha
mov
bound
mov
scas
and
lods
std
leave
mov
inc
lretw
mov
cwtl
inc
inc
or
xlat
loope
insb
sbb
mov
mov
and
and
fistl
cmpsl
xchg
ret
mov
cmp
sti
aad
push
sbb
mov
or
shll
cs
into
fs
inc
sbb
add
jns
mov
and
test
cmp
fwait
mov
jnp
adc
pop
add
iret
and
cmp
inc
sub
jne
adc
mov
icebp
jp
dec
sbb
loope,pn
xchg
pop
imul
push
out
in
xor
movb
mov
and
js
lods
and
xchg
fstpl
cmp
jae
mov
ljmp
ljmp
test
std
sbbb
cmp
stc
add
out
sbb
cmpsl
inc
pushf
out
stos
pop
sbb
sub
and
stc
cmpsb
mov
imul
hlt
adcb
out
mov
inc
adc
jecxz
mov
fsubrl
imul
in
testb
mov
call
les
jno
and
stc
mov
cld
loopne
mov
insl
lods
outsl
movsl
es
ljmp
pop
stc
data16
aaa
shlb
push
and
and
sub
mov
dec
add
mov
jp
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
jmp
lods
loop
repz
cld
insl
cmpsl
adc
or
add
or
cld
fildll
and
addr16
adc
mov
lock
mov
les
fsubrl
mov
inc
inc
les
in
je
or
mov
push
mov
cmp
lahf
push
adc
add
pop
jecxz
es
pop
lock
cmovb
xor
adc
push
and
bound
scas
inc
cmp
jo
out
ja
int3
mov
ss
out
ret
daa
jmp
loope
adcl
or
fisttpll
jecxz
and
mov
and
shlb
mov
cmp
adc
jae
cmp
lahf
iret
jle
sub
xor
ljmp
mov
lea
jecxz
mov
xor
or
ds
push
dec
adc
or
int3
xchg
pop
out
push
je
jl
push
fs
sub
jecxz
jmp
mov
xor
out
push
cmp
repz
movsb
xlat
sbb
sub
out
dec
bound
das
repnz
es
lods
addr16
push
push
call
bound
cmpsb
pop
in
jnp
outsl
jnp
push
add
scas
and
sahf
jns
or
js
mov
add
mov
iret
movsb
sbb
std
sub
mov
mov
imul
jae
movsl
push
pop
push
orl
mov
or
enter
in
xor
dec
cltd
xchg
dec
test
xor
jno
loopne
push
and
sbb
push
bound
push
cmp
dec
fsubrs
adc
add
mov
pushf
pop
nop
iret
leave
mov
rorl
out
ret
les
add
push
lea
sub
add
mov
xor
push
xor
lahf
jle
or
cmp
movsb
gs
inc
sub
mov
aam
rcrl
mov
push
push
jle
push
push
cltd
add
lock
ss
insb
test
mov
add
jle
mov
imul
dec
pop
pop
nop
adc
sbb
dec
add
xor
arpl
mov
push
ss
std
xchg
pushf
movsl
test
pop
in
and
sub
sub
mov
dec
outsl
mov
int
fmull
loop
inc
mov
enter
pop
mov
push
setge
push
lods
sahf
imul
dec
jb
repnz
pusha
in
or
jne
inc
adc
add
andb
repnz
inc
bt
add
push
or
cmc
xchg
mov
jne
cmp
fldl
nop
cmp
adc
hlt
adc
repnz
push
out
lea
mov
pop
sub
sar
jb
mov
push
mov
jge
popf
loope
push
jnp
jne
outsl
cmp
hlt
nop
mov
iret
icebp
in
das
dec
in
lea
pop
leave
adc
std
lock
mov
stos
int3
pusha
inc
xchg
and
movsl
inc
mov
xchg
leave
out
push
jno
xchg
jnp
sbb
ror
out
jmp
xor
imul
push
fdivrl
jnp
add
mov
jb
int
cwtl
jne
fistpl
mov
jl
mov
sti
dec
adc
in
das
mov
ds
je
fistpl
and
orl
aaa
imul
or
ds
inc
das
or
or
add
pop
fistl
scas
insl
mov
cmp
push
fbstp
mov
imul
imul
in
mov
ret
out
mov
jns
dec
pop
inc
adc
fwait
jge
mov
add
push
cwtl
xor
jae
cmc
mov
and
dec
jbe
or
mov
sub
or
mov
cmp
mov
in
mov
imul
adc
imulb
fwait
pop
add
lods
loopne
popf
inc
push
jb
call
mov
dec
xor
fwait
arpl
popa
pop
leave
les
xchg
sbb
xchg
pop
push
cmpsb
xchg
sbb
arpl
sbbb
sub
repz
cmp
pop
sbbb
in
jnp
fs
out
movsb
cmc
xor
mov
dec
aas
cmpsb
scas
add
mov
pusha
mov
sub
dec
mull
lret
or
ret
pop
mov
jmp
mov
xchg
xor
fdivrl
stos
cmp
cwtl
fcomps
mov
push
adc
push
cmp
add
lea
sbb
mov
dec
pusha
lahf
cltd
cld
pop
mov
ret
into
push
sub
shlb
pop
add
xor
xchg
cs
nop
xchg
loop
mov
loope
aam
jmp
cmpl
sarl
mov
lods
mov
pop
out
cmp
jnp
inc
jne
pop
push
xchg
push
popf
mov
popa
mov
inc
push
dec
std
adc
lods
mov
ja
push
insb
mov
xor
jmp
mov
xorb
xchg
pop
adcb
xchg
or
popa
es
or
iret
add
or
push
xchg
xorl
inc
std
mov
rorl
leave
loop
cld
es
imul
mov
jmp
lret
xor
pop
mov
dec
sbb
mov
out
loopne
inc
std
testl
push
loope
lret
je
adcl
ljmp
mov
movl
out
in
fldt
cmpsb
add
pop
lret
subl
aad
mov
mov
insl
sbb
push
add
pop
inc
fucom
dec
lahf
jge
adc
jbe
sub
mov
movsb
fwait
cld
fnsave
cmp
ljmp
push
mov
inc
shll
mov
dec
jle
insb
loop
xchg
mov
cmp
les
dec
sub
int
sbb
enter
mov
xchg
arpl
es
pushf
add
push
sbb
out
loopne
cmp
loop
push
movsl
insl
test
movsb
js
pop
mov
fnstcw
fcomps
pop
jmp
divl
call
roll
add
cmp
test
mov
add
jo
lret
xchg
sbb
push
inc
popf
adc
fs
lret
push
iret
jbe
mov
jne
ja
ja
xor
sbb
pop
fnsetpm(287
out
cmpsb
scas
cmp
push
js
ljmp
inc
and
pop
sbb
jl
push
lods
in
mov
mov
bound
cwtl
add
lcall
mov
sub
rolb
lods
in
pushf
cmp
loope
dec
lock
inc
fwait
adc
xor
cmp
faddl
loope
pusha
sub
push
pusha
stos
pop
loop
jge
xchg
mov
cmp
cmpsl
incl
lcall
je
sub
push
push
xchg
sub
mov
daa
movsl
adc
aas
jmp
mov
xor
out
scas
addr16
stos
xor
loope
enter
dec
mov
fisubl
leave
pop
repz
stos
or
sub
push
jae
xor
sub
call
mov
xor
shlb
or
xchg
loopne
xor
jae
aas
je
rorb
inc
aam
es
int
adc
mov
popf
dec
leave
mov
push
add
in
inc
dec
aaa
scas
imul
cld
jo
adc
lcall
pop
fwait
push
xchg
mov
dec
leave
cld
mov
ss
inc
xchg
std
cmp
adc
and
sub
outsb
popa
fwait
repz
inc
cmp
js
lds
adc
cmp
aam
sbb
call
das
shl
and
mov
push
pop
inc
push
xchg
adc
and
sbb
mov
xchg
rcrl
xchg
mov
movsl
leave
xchg
pop
dec
fwait
imul
int3
sub
stos
mov
mov
pop
nop
add
iret
adc
jl
cmpsl
out
ds
popf
sahf
pop
push
mov
insb
popf
lret
inc
mov
ret
mov
popf
adc
pop
mov
loope
movsb
rclb
mov
cmc
jbe
out
fnstsw
mov
stc
xor
rcr
dec
mov
cld
movsb
fwait
aas
pop
insl
fldl
nop
rolb
mov
js
pop
dec
dec
xchg
popa
insl
sbb
fcomps
mov
push
mov
xchg
shrl
or
stc
ljmp
mov
xchg
insb
inc
insl
jbe
inc
adc
inc
push
pop
cld
cmpsl
adc
sbb
rorl
sbbl
pop
mov
jns
mov
stos
pop
jae
jae
push
xchg
lcall
mov
jmp
jg
add
xor
leave
adc
push
adc
xchg
mov
loop
push
popf
pop
pusha
mov
lret
add
mov
addr16
rolb
dec
jmp
xor
test
add
inc
push
bound
jbe
add
push
mov
sub
cmpsl
mov
lock
std
cltd
adc
outsl
cmp
negl
call
sbb
dec
or
sub
xor
jno
mov
and
jp
mov
sahf
inc
fsub
push
push
jg
sub
into
arpl
sbb
sbb
inc
push
jne
test
xor
cmpl
xorl
aad
push
xlat
sbb
insb
push
insl
imul
dec
jbe
adc
dec
push
aad
js
push
fsubr
lcall
inc
or
sbb
test
incl
and
mov
push
mov
or
pushf
sub
add
outsl
adc
jns
cmpsb
pushf
je
addb
push
mov
pop
out
mov
push
add
xchg
ret
das
mov
jae
mov
mov
fsubrs
xor
in
clc
dec
repnz
inc
pcmpeqb
and
jnp
movsl
mov
pop
push
inc
push
sbb
pop
mov
jecxz
imul
mov
sub
sbb
mov
inc
jge
mov
in
mov
sahf
xchg
fwait
jecxz
sti
sub
adc
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
jmp
and
imul
nop
push
mov
addr16
jne
inc
or
iret
add
or
xor
xchg
or
arpl
mov
nop
xchg
daa
add
xchg
aam
xor
jno
mov
inc
sbb
cmp
jmp
xor
in
fwait
push
lahf
pop
insb
mov
xlat
notb
ds
lods
aaa
sub
aaa
cltd
int3
sub
and
cmp
loope
mov
fldl
adc
test
pushf
pop
sub
ja
lret
cltd
cmp
mov
js
in
pushf
add
pop
push
inc
outsl
and
adc
adc
jb
lcall
lods
icebp
cmpsl
xor
fsubs
inc
mov
adc
insb
clc
out
popf
aad
icebp
pop
test
pop
stos
adc
mov
or
jbe
shrb
in
cld
jnp
test
popf
mov
ljmp
out
jge
inc
aaa
ror
add
xor
repz
into
insl
data16
pop
mov
mov
sbb
cmp
sbb
inc
mov
fs
fmulp
xchg
xchg
wrmsr
xchg
stc
jnp
xor
adc
icebp
out
mov
ss
xor
out
sub
cmpsl
out
add
stc
and
mov
push
push
jg
movsb
mov
call
sub
mov
and
scas
inc
pushl
add
or
jae
mov
adcb
es
cmp
xor
inc
rclb
mov
rcrb
loop
lds
add
add
mov
mov
add
sbb
pop
sub
ljmp
cmc
leave
sbb
cli
iret
daa
cmpsl
xor
outsl
repnz
mov
jbe
pop
int
data16
cmp
sbb
fcoml
lds
jns
mov
push
fdivrs
fwait
lods
adc
mov
pmulhuw
add
inc
gs
cmp
adc
sbb
enter
cld
xchg
jne
add
push
out
adc
pop
mov
roll
xor
shrl
roll
pop
cwtl
dec
pop
icebp
fldl
mov
push
mov
ljmp
mov
popa
sbb
pop
cmp
adc
inc
dec
or
filds
jl
pop
xchg
gs
jmp
xchg
scas
mull
rcl
jge
cmpsb
adc
push
jecxz
add
aad
cs
idivl
fwait
pop
mov
dec
outsb
xchg
adc
jb
outsb
mov
outsb
lods
movsl
pop
push
cmp
pushf
sbb
outsl
pop
les
movsl
mov
ljmp
clc
loopne
jno
cwtl
lds
push
out
mov
sbbb
add
imul
fstps
sbb
mov
out
xlat
cmc
cmpl
sbb
flds
outsl
push
push
es
lahf
sbb
sub
insw
push
bnd
rcrl
xor
in
xlat
aam
pusha
pop
punpcklwd
mov
cld
jge
outsb
mov
nop
insb
push
aaa
aas
jne
dec
outsl
fistpl
adc
ret
jno
aam
push
int
pop
add
lods
adc
xor
fwait
test
mov
add
xlat
sub
fistps
out
cmp
popf
xlat
lds
imul
cli
add
jp
or
arpl
mov
lret
cmp
daa
sbb
std
daa
cld
xchg
fiaddl
imull
dec
jnp
or
mov
and
pushf
ret
fcoml
decl
cmpsl
add
cli
jecxz
mov
jl
xorl
lods
call
ds
pop
and
and
pop
test
insl
xorl
cmpsl
pop
and
mov
xor
pushf
stos
arpl
les
adc
stc
and
int
jae
xchg
js
or
popf
mov
dec
out
pop
and
cltd
sub
fs
inc
js
xor
lock
jmp
adc
xchg
daa
mov
sub
pop
dec
cmpsl
std
xchg
xor
movsl
bound
or
jns
push
dec
mov
sub
mov
sahf
cmp
mov
cwtl
cmp
dec
push
push
jl
aas
mov
lret
dec
mov
push
adc
iret
scas
mov
dec
mov
lcall
mov
out
data16
xor
mov
loopne
arpl
fdivl
rorb
arpl
add
jle
in
popf
sub
jge
popa
push
xor
dec
popf
mov
les
sarl
in
inc
shr
push
popa
mov
jns
out
pop
xchg
jl
fsts
das
lcall
fiaddl
pushf
js
enter
sbb
jbe
xchg
aas
jp
lods
mov
hlt
sahf
lea
push
xchg
sbb
dec
adc
push
inc
inc
aaa
cmpsl
push
das
push
lahf
jge
in
dec
jb
adcl
cmc
cmpsb
es
xchg
arpl
xchg
subb
pop
cmp
sbb
adc
push
ror
out
cwtl
and
movsb
sbb
lds
pushl
inc
int3
jmp
imul
pop
lock
pop
pop
aad
mov
pop
fbstp
sub
or
add
or
in
fstps
ror
adc
jb
xchg
imul
sbb
cmp
outsb
lds
fdivl
dec
repnz
daa
or
lea
out
sbb
loop
jmp
int
adc
in
negb
call
scas
cwtl
int3
inc
pop
ja
push
test
jnp
enter
cltd
or
jl
pop
subb
test
jecxz
push
iret
movsb
test
clc
das
movsl
and
fwait
cmp
shll
outsl
push
gs
sbb
lret
dec
test
cmp
sbbl
xor
mov
mov
cmp
fisubs
lret
jmp
mov
and
hlt
lret
in
cmpsl
add
icebp
adcb
fs
pusha
jb
jo
inc
fwait
pop
mov
mov
fmuls
and
push
push
cwtl
dec
repnz
sub
fmull
sub
aam
lahf
push
fsubrl
mov
push
pop
pushf
mov
mov
stos
shr
pop
lods
cmpsl
outsl
inc
out
loop
pop
cmp
std
cmp
jl
push
lods
mov
pushf
push
and
or
leave
lret
push
jle
adc
out
ljmp
inc
pushl
jmp
je
push
mov
xor
pop
pop
call
imul
cs
imul
push
jo
iret
call
or
sub
cmp
shr
push
aad
pop
je
cmp
aam
loop
repz
xchg
cwtl
xchg
mov
popa
xor
mov
ss
fisubrl
out
push
or
aad
in
lock
jp
sbb
xlat
sub
push
stc
mov
mov
sub
add
scas
push
cmp
sbb
mov
jno
es
push
push
xor
addr16
or
into
iret
sti
xor
mov
shrl
movsb
insb
inc
jp
adc
shl
lods
ret
xchg
jnp
fwait
repz
insb
lods
pop
addr16
or
je
out
jae
push
inc
inc
xor
jmp
std
add
xchg
pushf
cld
inc
es
cmp
pop
mov
mov
addb
and
out
dec
in
test
dec
lret
mov
movsl
out
pushf
mov
and
aam
dec
jae
std
mov
cmp
jmp
mov
pop
sbb
add
inc
sub
pop
mov
fistpll
inc
push
lret
scas
mov
and
lods
or
pop
sub
mov
and
bound
mov
jge
shlb
iret
in
add
ficomps
pop
and
cmpsb
mov
inc
addl
jns
int3
cmp
pop
in
xor
fistpl
jb
movsl
xor
push
stos
scas
sbb
jb
xor
or
dec
out
movsl
adc
push
mov
add
dec
xor
loop
arpl
loop
mov
lcall
dec
push
clc
iret
loope
sti
and
clc
mov
loop
mov
mov
test
aam
frstor
cmc
outsb
or
lret
aas
je
cltd
or
xor
into
sbb
out
aaa
cmp
sbb
dec
jecxz
or
push
dec
js
inc
arpl
enter
insl
cmp
and
sti
or
adc
jg
fwait
mov
cmp
mov
mov
int
jp
mov
dec
jno
test
inc
add
xchg
or
sub
or
je
cmpsb
fsubrp
mov
jmp
fimuls
mov
dec
ret
push
mov
mov
cmp
dec
icebp
fstl
pop
movsb
stos
fldenv
pop
push
push
repz
mov
jg
subb
or
scas
add
rclb
das
ljmp
loope
xor
sub
arpl
pop
pop
pop
aas
nop
jb
xchg
sbb
int3
in
stc
sub
pop
jbe
lahf
subl
mov
das
push
cltd
push
push
cmpsl
aaa
test
test
jp
push
cmp
cmpsb
test
push
cmp
cmp
mov
and
jge
inc
mov
stc
dec
cmpsl
test
adc
cmpsb
cwtl
sbb
pushf
pop
xchg
test
xchg
dec
cmpsl
mov
jbe
sub
xor
insb
mov
bts
shrb
xor
sbb
fiaddl
movsb
add
movsl
push
movsl
jne
push
jno
lds
jmp
adc
out
outsb
dec
xor
fcom
or
jge
repz
jnp
clc
mov
sbb
cwtl
mov
jae
mov
ret
xlat
rorl
aas
scas
hlt
jae
in
dec
into
cwtl
inc
bound
xchg
sbb
ret
cmpsl
jb
jl
push
pop
jp
adcl
loopne
mov
clc
jno
push
incb
shlb
les
je
mov
rclb
sahf
faddl
adcl
fmuls
push
pop
pop
cmp
cmp
daa
pop
lret
ret
icebp
jnp
cmp
mov
filds
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
lcall
pop
jp
ljmp
or
iret
add
or
adc
pop
mov
pop
sbb
aas
lret
sub
test
mov
mov
out
xchg
add
or
movsl
push
lods
jmp
add
xchg
xor
loope
icebp
sbb
sbb
das
mov
sub
cmp
mov
js
insl
and
cmp
push
out
pop
ss
out
and
mov
pop
dec
sub
imul
mov
xchg
frstor
xor
jo
dec
addr16
das
js
nop
out
or
sbb
out
out
mov
cmp
dec
and
movsl
xchg
inc
inc
xchg
push
in
lret
jns
sub
es
adc
jae
sbb
mov
leave
addr16
imul
aad
push
push
mov
dec
leave
ret
mov
push
std
push
adc
pushf
jnp
lods
mov
xchg
mov
pushf
pushf
pusha
jbe
sub
xchg
push
and
push
sub
lods
in
loope
loope
fwait
lods
ret
lock
pushf
bound
cmpsb
bound
push
popf
xor
jg
adc
jmp
lods
jb
fstps
sub
adc
sti
add
xor
cmp
dec
jge
mov
xchg
cmc
push
rcl
sbb
dec
cli
aad
fcmovnbe
dec
add
dec
fbld
push
sbb
in
imul
loopne
stos
gs
les
loop
gs
push
imul
jns
aam
imul
xchg
repz
outsl
fcompl
jmp
jmp
mov
or
inc
lahf
push
aad
mov
loop
cltd
jg
sbb
sub
fldl
and
jb
cli
jbe
xlat
cmp
pop
cmpsl
bound
stos
insb
pop
jns
faddp
ljmp
dec
sub
xchg
cmp
dec
stc
and
inc
sar
jbe
lods
xchg
mov
arpl
std
or
ss
fildll
dec
mov
cmp
leave
nop
push
popa
in
add
in
leave
add
pushl
stos
je
pushf
lods
mov
arpl
cwtl
jae
lret
subb
push
inc
xchg
enter
lret
mov
mov
push
xchg
cmp
fldenv
out
iret
pusha
dec
sub
mov
or
imul
loope
cld
std
jle
out
dec
jno
jnp
xchg
into
cmpl
popa
mov
icebp
ss
pop
jne
ja
ret
mov
outsb
addl
jecxz
hlt
es
scas
aas
call
dec
jbe
int3
sub
out
cmpsl
into
xor
mov
mov
lock
pop
mov
inc
stc
fs
nop
sub
jl
and
sub
xchg
inc
loop
sub
sti
xor
movsb
test
xchg
adc
push
gs
in
hlt
loope
repz
clc
movsl
dec
hlt
testl
dec
popa
xor
xlat
dec
and
push
sbb
stos
xor
js
xchg
mov
xchg
movsb
insb
pusha
cmp
rorb
imul
jb
dec
test
xchg
or
je
and
mov
mov
push
inc
scas
mov
add
test
xorb
sti
int
fsubrl
cs
adc
fidivrs
cmp
bound
cmp
cmpsb
ficoms
mov
sbb
cmpsl
inc
xchg
cs
dec
dec
pop
fstl
sbb
cwtl
pop
dec
jb
cli
add
mov
nop
rcrl
mov
pusha
cltd
movsb
mov
cmpsl
mov
mov
in
cli
cwtl
dec
fimull
insl
jecxz
cwtl
dec
in
inc
xor
pop
movsl
cmp
test
jnp
sbb
pushw
mov
mov
push
mov
ror
push
int
orb
call
sbb
mov
jp
nop
fs
jl
nop
dec
push
fcompl
mov
test
fwait
repz
xor
sub
inc
push
or
scas
cmp
scas
sbb
movl
sub
sbb
mov
and
push
test
and
sub
push
push
xor
xor
rcr
rolb
cmpsb
xchg
mull
sub
mov
mov
xchg
xchg
and
adc
test
repnz
pusha
push
ret
fwait
mov
lods
leave
mov
hlt
push
push
insl
push
sahf
loopne
sbb
ja
add
je
cltd
test
mov
rcrb
or
std
clc
adc
fwait
mov
mov
outsb
outsb
push
xor
dec
push
fistpll
out
jns
or
popa
sbb
popf
es
pushf
mov
and
jbe
decl
add
sbb
push
aaa
or
lods
xchg
add
mov
inc
sbb
cltd
je
push
fwait
xor
adc
add
out
pushf
cs
mov
or
xchg
into
daa
mov
and
dec
pop
insb
inc
nop
push
push
imul
pop
mov
inc
dec
push
and
fs
or
cmp
pop
mov
sbb
cwtl
repnz
dec
mov
loope
mov
xor
or
mov
mov
add
mov
jmp
mov
mov
std
jmp
mov
or
add
or
popa
pop
loope
sbb
xor
xchg
inc
iret
mov
ret
or
push
sahf
pop
and
in
fildll
rcll
adc
xor
pop
sub
lahf
and
arpl
mov
cmp
inc
stos
xchg
repz
sti
jmp
or
ds
out
cld
scas
xchg
ficompl
cmpsb
jbe
mov
sub
sarb
push
cwtl
dec
add
addl
jnp
mov
inc
xchg
test
xor
imul
pushl
mov
xchg
fs
and
movsl
cs
movsl
fcompl
pop
lods
cmp
loopne
cmc
call
fdivr
icebp
dec
divb
push
adc
or
ljmp
xor
notb
mov
lahf
push
std
out
mov
xchg
inc
pop
test
add
testl
inc
sti
out
push
int3
pop
xor
lret
or
adc
pop
add
push
dec
add
iret
push
cltd
mov
jmp
mov
loop
js
inc
and
mov
jp
xor
fadds
nop
xor
ds
lds
ret
jmp
xchg
or
fmuls
movsl
sbb
fildll
mov
inc
imul
lahf
or
scas
mov
movsl
ljmp
inc
sub
lahf
cld
jle,pn
dec
push
gs
insb
xchg
push
and
test
xchg
imul
ja
mov
mov
mov
fcoml
and
pop
mov
push
pop
push
sub
cmp
push
cmp
lds
xchg
xchg
inc
lcall
loop
mov
lret
adc
in
dec
jns
dec
aas
xor
xor
shrb
jle
rorb
sub
jae
fldl2e
jge
xor
incb
mov
jno
adc
cmpsl
sahf
jp
ret
add
jg
dec
stc
inc
fdiv
mov
xchg
mov
jo
js
lods
rol
cmp
mov
rcrb
mov
inc
aad
in
mov
xchg
cs
hlt
dec
push
push
aaa
jo
mov
loop
cmpsl
pop
pop
shlb
fdivrs
dec
xchg
xchg
sbb
xchg
dec
xchg
stc
and
out
lcall
mov
push
stos
or
lret
mov
fstpt
dec
and
sbb
mov
inc
sbb
into
fsts
ss
pop
jne
xchg
orl
stos
cltd
in
push
xchg
loopne
outsb
add
je
lea
popa
xor
loopne
roll
stc
outsb
hlt
mov
add
jne
jmp
mov
lock
clc
lahf
shll
test
dec
sahf
jae
cmpsl
mov
ds
call
jmp
loopne
fisubl
lahf
repz
in
sbb
bound
ret
adc
imul
jp
fimuls
shlb
or
sub
add
sub
lods
or
sahf
repz
into
outsl
mov
jbe
and
popa
dec
pop
popf
ds
and
daa
mov
jecxz
mov
fsubrl
sarl
and
bound
fnstsw
or
loope
inc
daa
jge
movsb
sub
cmp
jmp
mov
push
jns
push
xchg
pop
andb
sub
scas
adc
pop
adc
mov
rcrl
dec
xor
pop
mov
xor
mov
enter
mov
fs
popl
xchg
xor
out
jb
scas
lea
pop
scas
aam
cmp
test
test
add
mov
adc
inc
push
insb
in
ret
es
sub
mov
stos
out
jl,pn
sub
xor
jl
cltd
pop
and
xchg
add
neg
dec
sbb
push
adc
mov
js
pop
push
into
into
gs
and
shlb
pop
repz
out
jle
jp
enter
jecxz
test
in
ljmp
cwtl
inc
in
js
aad
lods
lods
cs
mov
loop
das
mov
adc
cmp
subl
xlat
jl
cmp
int
xchg
push
adcl
or
dec
hlt
or
bound
icebp
lock
fucomi
mov
fsubrs
es
pusha
jp
xchg
pusha
rorl
cwtl
ds
imul
leave
jae
in
xchg
test
scas
pusha
test
jl
xchg
dec
pop
testb
jbe
and
int3
sbb
fimull
fwait
push
in
adcl
les
pop
dec
push
loop
int
int3
mov
sbb
cmpb
pop
add
mov
xchg
and
popa
cmp
pop
mov
int3
jo
enter
adc
das
out
xchg
fwait
mov
arpl
or
lods
adc
xrelease
jl
adc
mov
sub
in
aaa
mov
pushf
dec
bound
mov
inc
and
push
out
inc
aam
mov
shrd
shr
mov
jmp
rorl
test
out
out
adc
or
or
add
or
cltd
jecxz
sbb
pop
insl
repz
jmp
sub
add
aas
jle
mov
dec
scas
pop
fnstsw
or
or
loope
jge
pop
lods
inc
loopne
iret
es
mov
fsub
cmpsl
fcompl
pop
out
cmc
jge
push
incb
xchg
xorb
or
mov
out
fdivrl
in
les
popl
dec
out
test
popa
sub
fxrstor
std
and
and
icebp
cmp
adc
mov
or
aam
fstpt
sbb
lds
or
fisubrl
push
insb
shr
pop
dec
mov
jns
gs
scas
out
cmp
jmp
hlt
sub
rclb
cmpsb
jl
fadds
imul
aad
inc
jnp
int
outsb
pusha
cld
into
fnstcw
stos
push
xor
inc
sub
cli
push
jns
mov
shrb
insl
jns
mov
xor
fs
push
cmp
lock
outsb
cld
mov
imul
fisubs
sti
aad
inc
stos
outsl
jp
push
fsubrs
pusha
gs
in
xchg
imul
push
leave
cmc
outsl
xchg
sbb
or
adc
les
inc
dec
jle
or
ljmp
js
jge
fcompl
jb
dec
mov
loopne
mov
negb
pop
loopne
inc
movl
jle
xor
shrb
adc
loope
sbb
push
lods
or
addr16
imul
jmp
mov
les
push
cmp
xchg
clc
ret
mov
xorl
sub
jae
iret
loope,pt
adc
mov
pop
inc
mov
jge
xchg
std
movsl
arpl
sub
clc
fwait
divb
popf
fidivl
incb
fwait
push
xchg
xor
xlat
push
out
scas
in
in
mov
push
loopne
mov
cmp
fwait
jp
sbb
mov
icebp
cmp
insl
sub
mov
pushf
adc
ffree
lock
imul
jo
xchg
sti
insl
int3
mov
inc
pop
mov
push
adc
push
inc
nop
push
das
stos
push
ljmp
cmp
inc
mov
repnz
stos
adc
push
xor
cmp
jno
add
jno
and
mov
mov
xchg
insb
sub
imul
daa
sbb
push
inc
fcoml
jne
push
push
ret
xchg
dec
ds
mov
icebp
xor
cmpb
jp
test
pop
xchg
pop
popf
cmp
dec
and
xor
adc
and
push
ds
cmc
in
dec
shl
leave
pop
sub
ret
lret
bound
ret
fmuls
je
lods
pop
or
inc
cmpsl
add
cmc
into
add
imul
sbb
push
or
xchg
sbbl
pop
mov
inc
scas
pop
cltd
popa
je
sub
rcr
ret
jne
and
jne
outsb
inc
inc
pop
pusha
xchg
adc
cmp
pop
inc
inc
insl
and
popf
lea
sbb
sbb
sbb
das
jbe
movsl
mov
add
aad
push
dec
push
mov
jge
cltd
adc
push
push
lock
mov
pop
in
fmull
out
in
out
jo
xor
mov
sub
sub
iret
dec
jmp
xchg
push
mov
shlb
inc
xchg
sub
fdivl
rcrl
xchg
leave
pusha
sbbb
cwtl
scas
pushf
idiv
in
pop
adc
or
fstpl
dec
sub
sbbb
inc
xchg
loop
mov
mov
xchg
cltd
ds
js
dec
int
and
jge
pop
filds
sarb
or
sahf
pop
pop
mov
xor
or
adc
pusha
fimuls
repnz
dec
lret
iret
pop
sbb
or
nop
push
lcall
mov
mov
test
push
lea
mov
das
daa
sbb
lods
mov
mov
shll
cmpsl
mov
pop
cltd
jne
lock
add
lret
mov
lds
insb
sete
js
test
xchg
sbb
and
cmc
add
xchg
cmp
and
sub
movsb
xor
sub
lcall
iret
pop
sbb
hlt
or
dec
rcrl
sub
mov
rorb
ret
fwait
mov
and
outsb
sbb
dec
pusha
rclb
add
push
in
mov
adc
fisubs
out
rcll
push
fwait
cmp
int3
hlt
xor
mov
into
imul
and
mov
and
daa
mov
xchg
inc
mov
xchg
xchg
add
clc
scas
dec
shl
shl
xor
insb
insb
ret
sbb
and
pop
or
pop
je
lret
sub
cwtl
sarl
mov
add
pop
int
cmp
ficoms
int3
pop
jmp
mov
movsb
mov
mov
outsb
into
and
aad
mov
mov
cli
jp
aam
mov
outsl
mov
iret
das
pop
mov
in
arpl
mov
movsl
imul
ret
stos
push
das
xchg
push
ja
jns
stos
out
sub
ja
pop
xchg
jp
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
inc
push
pop
cmp
aas
and
jne
outsl
imul
push
mov
adc
neg
add
je
xchg
dec
out
fidivrs
cmp
in
lods
xor
sbb
push
aaa
adc
jmp
inc
pop
mov
push
scas
into
xor
xor
movsl
aas
mov
add
inc
cld
das
cli
es
cmpsl
repnz
fcmovbe
cmp
push
imul
and
in
mov
arpl
add
mov
xor
cmpsb
js
dec
xchg
mov
fs
nop
sub
cwtl
and
mov
cs
fs
dec
jno
sub
fisubrl
sahf
jecxz
mov
sub
lock
xchg
aas
sub
pop
loope
scas
popf
mov
xchg
sbb
icebp
shrb
sbb
stos
lahf
dec
call
clc
sbb
mov
cli
mov
imulb
out
cmp
ja
push
add
push
fs
sub
push
scas
cltd
clc
into
cmpsl
ss
push
and
inc
outsl
daa
mov
dec
jmp
mov
or
xor
add
dec
fs
rcr
ljmp
pop
lret
inc
repnz
xchg
or
xor
mov
mov
fdivrl
add
stc
mov
xchg
mov
test
add
outsb
xor
cmp
mov
movsb
mov
sarl
add
es
jbe
xorb
imul
data16
shll
jb
or
sub
push
sub
mov
jno
ljmp
push
xor
out
cmp
adc
pop
imul
imul
popa
jle
pop
pop
pop
stc
adc
push
pop
dec
jo
push
xchg
sub
xor
aam
ljmp
loopne
xchg
inc
in
jae
addr16
mov
mov
dec
mov
aaa
mulb
and
add
mov
dec
int
add
test
mov
add
daa
mov
and
mov
imul
or
sahf
sbb
dec
call
ja
cmp
inc
out
cmpsl
mov
test
mov
push
mov
and
xor
lock
jl
jmp
hlt
in
or
psllw
call
push
xchg
jbe
fsubrs
mov
jo
neg
jo
xchg
dec
and
pop
cmpsl
aaa
inc
sbb
aaa
aad
sub
sub
ss
xchg
jae
scas
into
dec
cmp
icebp
add
xor
inc
and
mov
or
hlt
imul
pop
arpl
aas
add
aad
roll
xor
adc
cwtl
mov
adc
cmp
and
pop
cs
fs
loop,pn
inc
stos
and
shll
rcrb
push
sarb
push
or
pop
add
fwait
stos
pop
xor
negl
jo
out
dec
xchg
ss
xchg
push
mov
inc
mov
cmp
mov
xlat
pop
xchg
cmp
cmp
test
mov
into
push
sub
dec
test
test
mov
jno
xlat
dec
lods
lds
movsb
insl
scas
call
push
jge
jle,pt
sbb
jbe
jo
mov
sahf
iret
jns
cmp
xor
cli
mov
test
stos
xor
inc
or
lret
clc
daa
cmp
mov
cmp
add
push
dec
mov
movsb
js
inc
xchg
jmp
add
ja
ljmp
jl
loope
inc
jb
movsb
push
sub
jl
or
xchg
jp
sbb
fiaddl
stos
btr
push
xchg
xchg
mov
std
sets
stos
outsl
jbe
insl
or
dec
xchg
push
andb
shl
mov
xor
mov
shlb
fwait
ss
test
cld
addr16
rorl
cmp
xor
mov
dec
xor
icebp
adc
into
pop
jbe
ret
adc
sub
movsb
adc
mov
pop
testb
neg
and
and
jnp
or
fisttps
dec
es
movsb
inc
push
or
mov
and
mov
imul
add
push
or
dec
pop
xor
jp
cmp
out
or
sbb
mov
movsb
sub
scas
mov
mov
stos
xor
mov
xchg
repnz
mov
mov
jno
lcall
xor
mov
cmc
xchg
fildll
das
mov
mov
flds
into
mov
punpcklbw
jae
mov
cmp
mov
or
add
dec
rol
fnstenv
ljmp
cld
add
cli
sbb
ret
dec
das
lcall
xor
cmpl
fnstenv
add
mov
dec
inc
dec
fisubrl
inc
mov
pushl
ss
mov
pop
call
or
cmp
sahf
insl
or
dec
push
xchg
jo
out
dec
mov
and
popf
in
movswl
pop
adc
imull
mov
or
xchg
das
cmp
mov
pop
adc
mov
inc
sbb
movsl
xchg
scas
pop
andl
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
jmp
sbb
pop
adc
mov
xlat
scas
cmpsl
aas
repnz
iret
add
or
das
mov
pushf
ss
not
jne
dec
mov
shlb
mov
pop
xlat
or
mov
xlat
icebp
fidivrs
jae
lcall
fisubrl
push
insl
aas
cs
mov
call
std
dec
mov
loopne
aas
in
jmp
divb
mov
aas
push
inc
bound
jae
mov
je
ljmp
xor
cld
imul
arpl
sbb
jp
sub
mov
clc
andb
test
and
lods
adc
jne
aaa
cli
xchg
xor
adc
cmc
pop
mov
mov
imul
lahf
fwait
or
mov
filds
out
pop
rcr
cmp
xchg
adc
andl
in
push
int3
xchg
jae
out
mov
sbb
mov
jns
hlt
mov
inc
cmc
popa
out
adc
xchg
lea
mov
out
pop
mov
sub
pop
repz
adc
in
dec
jle
mov
scas
loop
orl
loope
outsl
fwait
test
fwait
add
fdivl
xchg
add
mov
pop
scas
enter
inc
jbe
fwait
std
shll
adc
jno
xor
fnsave
and
mov
add
shrb
jecxz
push
aam
push
into
loopne
cmp
mov
jb
rolb
sahf
cs
jge
xor
mov
dec
nop
in
mov
or
out
fisubrl
push
or
shrb
and
push
rcll
rolb
sbbl
push
push
loopne
sub
es
push
or
xchg
ljmp
insb
push
xchg
push
cmpsl
leave
or
int3
or
outsb
iret
icebp
into
fldt
jo
ret
pop
mov
jbe
jle
xlat
jle
jo
inc
out
fsubl
pushf
int3
jbe
les
and
add
or
out
mov
adc
mov
cmpsb
inc
mov
test
push
std
adc
mov
sub
movsl
bound
je
lods
lcall
mov
insb
or
adc
rcrb
inc
mov
jnp
mov
xchg
sub
int3
xor
and
dec
cli
es
cmpsb
ret
jbe
aam
cmp
loope
pop
out
loopne
call
cmpsb
or
cmp
je
cmp
xchg
insb
fisubl
cmp
fs
int
mov
mov
xchg
gs
loopne
out
daa
lahf
arpl
pop
inc
lods
mov
repz
jns
iret
iret
add
and
jae
std
cmp
rolb
pop
xchg
push
cmp
or
stos
cwtl
sbb
cli
scas
push
je
rcl
frstor
cmp
std
mov
push
pop
dec
mov
or
ret
or
nop
ja
lods
adc
mov
fmull
cltd
or
ss
sahf
jp
xchg
aad
cmpsb
test
icebp
mov
sub
sub
scas
arpl
or
jne
xor
aad
xor
dec
mov
or
pop
inc
inc
adc
mov
cmp
scas
movsb
adc
repz
jb
cwtl
es
shr
imul
sarl
xchg
mulb
inc
xchg
das
or
pop
test
pusha
js
push
mov
addb
jne
cmpsb
jp
out
xchg
mov
lea
mov
and
popa
inc
fmul
out
mov
notb
notb
cmpsb
divps
les
jl
xchg
dec
or
cmc
mov
loop
xchg
push
pop
dec
scas
int
or
imul
adcb
sbb
fldt
mov
sub
ja
mov
int
dec
movsb
jnp
lods
aad
push
in
inc
std
insl
arpl
fs
jns
or
pop
hlt
dec
jge
push
les
xchg
cmp
mov
push
pop
imul
out
insb
out
cmc
push
and
mov
adc
adc
cmp
jae
imul
jl
jae
xchg
das
jl
xor
adc
pop
std
aas
cmp
adc
leave
pop
jmp
xlat
ljmp
int
jmp
je
pop
orl
xchg
and
dec
shlb
mov
mov
stos
lea
xchg
xchg
shr
push
mov
adc
stos
out
icebp
or
sbb
mov
or
pop
test
cmc
add
gs
pop
jmp
loope
daa
inc
data16
and
sub
outsb
sub
sub
fstpl
in
push
adc
jno
lret
mov
push
add
xchg
fisttpl
loop
nop
adc
fnstenv
rclb
icebp
aas
jo
hlt
adc
and
mov
xor
negl
sub
cmpb
jne
ds
xchg
dec
adc
xor
shll
add
xor
mov
mov
outsb
lret
iret
and
or
enter
cli
or
cmpsb
addr16
bound
inc
movsl
and
lret
aad
jge
adc
lahf
xorl
inc
pop
fucomp
decl
subb
shll
xchg
ret
popa
movsl
lea
inc
jbe
inc
cld
mov
xor
or
mov
mov
shrd
shr
jmp
and
stos
push
scas
adc
xor
jne
out
or
iret
add
or
add
fnclex
popa
mov
fucomi
popa
pushf
sbb
jle
sub
mov
push
lret
lret
test
rcrb
aam
mov
sti
inc
mov
lahf
jl
ja
push
ret
xchg
xchg
sti
sbb
push
cmp
cld
shlb
popa
jmp
and
shll
pop
cmp
xchg
daa
out
jge
adc
rclb
lock
sub
mov
cmp
dec
sbb
inc
jae
push
push
daa
pop
mov
mov
cmpsl
daa
xchg
pop
movsb
push
out
pop
ret
mov
aam
jmp
inc
fdivl
xchg
movsb
mov
mov
add
aad
sub
fistpll
add
xor
ret
jae
clc
arpl
rol
sti
cli
pop
js
mov
aad
outsl
add
and
push
movsb
jp
inc
dec
jns
dec
out
and
test
mov
enter
outsl
mov
fs
sbb
rclb
xchg
push
add
or
adc
mov
nop
jecxz
icebp
iret
sub
in
adc
scas
adc
lds
popa
dec
mov
mov
mov
xchg
in
fs
xchg
imul
scas
ret
jg
inc
push
loope
movsl
fs
fildl
aam
movsl
add
pop
cmp
dec
fimull
or
add
inc
loope
lahf
mul
stos
mov
subl
push
inc
xor
dec
xor
xor
xlat
sarb
addr16
cmp
jg
fisubs
lea
lods
call
jp
bound
or
ja
lret
adc
add
jg
inc
stc
loope
ret
cmp
stos
lahf
xor
cld
xchg
movsl
mov
hlt
mov
or
pop
xchg
int
ret
lods
jbe
sbb
cmc
add
jns
push
inc
pushf
test
inc
repnz
sbb
js
lods
mov
ljmp
daa
iret
mov
fs
push
lcall
aad
sub
add
push
mov
mov
das
sub
push
mov
enter
xor
jo
enter
pop
bound
cltd
pop
pusha
cmpsl
xchg
shl
jbe
imul
pop
popf
fbld
cmp
outsl
jle
pop
inc
xor
stos
mov
sbb
jno
cmp
lret
in
jnp
dec
inc
iret
push
std
jecxz
insl
dec
inc
add
lds
ficoms
mov
xchg
lahf
push
inc
sahf
out
sarb
push
movb
mov
push
scas
in
repz
nop
cmpsb
adc
mov
test
push
imul
jp
std
mov
push
cmp
dec
push
jl
pop
stc
ljmp
push
cli
in
loopne
int
xchg
imul
xor
and
pcmpeqd
add
and
arpl
sub
inc
mov
pop
cmp
xor
jne
sbb
push
xchg
mov
jg
clc
ret
clc
mov
mov
jmp
inc
jg
emms
xor
mov
aaa
fldl
rorl
inc
pop
int3
jmp
xchg
dec
and
cs
fimull
sbb
popa
or
jo
dec
fidivs
xlat
or
insb
sub
arpl
scas
pop
sarb
sub
push
xor
push
mov
cmp
jmp
out
rcll
push
iret
mov
dec
push
dec
add
cmp
jle
mov
lods
popf
add
pop
das
adc
pop
call
scas
inc
in
jo
push
movsl
pop
mul
push
rcr
out
sbb
pusha
addb
dec
pop
movsl
push
and
jnp
jle
leave
out
and
inc
mov
jl
pushf
mov
int
mov
ljmp
pop
notl
fists
fs
scas
insb
sti
pushf
stos
cmp
dec
mov
std
jecxz
cmc
mov
gs
stos
and
outsb
mov
mov
repz
and
movsb
add
out
in
jmp
dec
add
pop
test
push
out
xchg
sbb
std
test
ficomps
adc
sti
pop
sbb
rcll
inc
out
je
mov
sbb
sbb
scas
xchg
jl
mov
mov
aam
cwtl
js
xchg
fcmovb
fdivs
stos
lods
pop
lds
push
cmp
or
mov
adc
fsubl
push
or
repnz
inc
mov
stos
movsl
sbb
sahf
and
fmull
div
jle
cmc
mov
dec
aas
out
sbb
leave
sti
fs
mov
hlt
jl
cmp
jb
mov
add
xorb
jne
jge
mov
sub
xchg
dec
popa
and
das
mov
ret
ror
jge
cli
jbe
cltd
xor
adc
es
je
cmpsb
jg
ljmp
pop
je
jmp
xor
cld
iret
negb
loopne
or
or
inc
mov
mov
adc
rclb
sti
loope
popf
adc
adc
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
clc
clc
dec
xlat
dec
adc
mov
lods
or
add
or
jo
cs
imul
orl
cmpsb
mov
mov
fnstcw
jl
sbb
lcall
and
fstp
pusha
pop
jle
sbb
addr16
inc
and
pop
test
into
stos
push
hlt
mov
popa
push
stos
mov
and
mov
test
aad
dec
movsl
and
imul
fildl
jb
add
push
xchg
inc
in
es
xchg
mov
inc
push
js
sbb
inc
fs
sti
sub
mov
sub
mov
sub
xorl
pop
add
inc
call
xchg
xor
pop
popf
aas
pop
stos
jle
adc
js
add
fcompl
jle
loop
and
sahf
or
mov
sbb
repnz
sub
pushf
adc
sbb
enter
loopne
lea
icebp
test
cmp
xor
lcall
fwait
cmp
xor
lods
outsl
push
inc
rol
cli
loopne
lea
fmulp
pop
inc
adc
sahf
scas
out
scas
outsl
aas
xchg
xchg
jp
pop
sahf
sbbb
adc
xchg
inc
lock
push
xchg
sbbl
pushf
fwait
xchg
dec
dec
pop
jecxz
outsl
repz
ret
shrl
adc
fstpt
adc
mov
insb
sub
adc
cli
jne
jmp
pop
mov
and
adc
fiaddl
aad
xchg
inc
mov
pop
dec
mov
dec
es
jo
xor
push
fucomip
cs
inc
lret
add
outsl
cltd
imul
cmp
lods
lret
adcb
cmp
push
pop
jbe
mov
leave
lcall
mov
mov
roll
mov
out
fsubs
scas
xor
movsl
int3
mov
cmp
inc
xor
shl
cmp
fsubp
push
push
loop
outsb
movsl
into
fcoml
popa
adc
push
jp
popf
jo
test
cld
les
rcl
lcall
sti
dec
scas
lods
in
aaa
jns
xchg
sbb
xchg
rcrb
sbb
mov
movsb
outsl
mov
mov
les
mov
jle
test
imul
push
jmp
orl
pop
mov
sbb
add
xchg
in
cmp
inc
push
test
jge
sub
dec
sbb
cwtl
stc
les
dec
xchg
cli
cmp
xchg
cmpsl
cmpsl
filds
dec
cmp
cmp
pop
popf
adc
sbb
inc
jmp
or
jmp
cmp
xchg
or
sbb
mov
cmc
in
mov
dec
dec
cmpsl
jmp
jecxz
dec
push
lods
cld
lahf
popa
insl
pushl
push
sti
addr16
loopne
pusha
adc
mov
sbb
mov
fs
loopne
subb
mov
mov
into
jno
dec
popa
mov
xchg
data16
xchg
sub
sub
push
jle
mov
sbb
aas
out
sbb
inc
cmp
xchg
sbb
cmc
mov
mov
jp
imul
leave
add
sbb
sbb
shlb
test
or
das
dec
scas
jmp
jno
mov
push
aam
dec
adc
inc
sbb
nop
outsl
mov
popa
out
xchg
mov
fwait
and
in
push
jnp
xor
ljmp
icebp
xchg
mov
push
add
lahf
sub
inc
mov
out
mov
cmp
aaa
cmc
rorl
adc
push
sbb
sub
push
movsl
jge
cmp
cli
hlt
dec
stos
inc
mov
mov
mov
stos
aas
jge
aam
xchg
jno
push
out
jbe
sbb
and
fisubrl
push
aad
das
inc
rcrl
pop
and
mov
mov
js
mov
addl
movb
in
ret
mov
popf
lods
sub
in
push
fstp
psrad
pop
xor
addl
iret
xor
std
cld
lds
mov
popf
push
hlt
jl
scas
cmp
mov
xchg
iret
iret
mov
xchg
push
outsb
sub
adc
into
jl
lea
inc
mov
inc
arpl
mov
mov
jnp
adc
stos
jno
mov
pop
aad
add
mov
out
cmp
loopne
adc
adc
jmp
xor
stc
mov
into
repnz
jmp
out
adc
sbbl
add
xchg
into
cmpsb
cmc
push
mov
cmpsl
rcll
scas
imul
add
and
xlat
mov
mov
mov
and
pop
loop
mov
aad
adc
ljmp
mov
xchg
mov
pop
adc
rorb
xor
dec
sbb
shrl
lods
fidivrs
imul
and
mov
xor
mov
pop
out
lea
fs
push
or
push
call
push
cmpsb
push
rolb
lods
clc
mov
mov
mov
or
jne
xchg
int
movsb
ja
ljmp
adc
dec
cld
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
jmp
jne
lcall
imul
mov
rorl
or
add
or
test
jno
not
xlat
rol
dec
mov
pop
gs
ljmp
jne
adc
pusha
dec
jne
iret
pop
mov
xchg
jbe
cmp
out
mov
sub
mov
mov
in
ret
arpl
inc
cmp
inc
pop
mov
dec
push
pop
dec
icebp
xchg
cmp
xor
push
mov
jbe,pn
xchg
jle
repz
clc
lcall
neg
xlat
pushf
addl
jns
fcmovb
sbb
inc
nop
sub
insb
xchg
xor
push
fistpl
fnstenv
xor
lods
and
mov
dec
mov
daa
sahf
fsubr
imul
imul
sbb
mov
sbb
loop
mov
iret
pushf
pop
add
xlat
hlt
clc
in
push
xor
aaa
roll
mov
adc
push
aam
aad
sub
ffreep
scas
inc
mov
xchg
ds
mov
cmc
rorb
xlat
and
sti
push
sti
pop
push
sub
mov
cmp
fwait
loop
popf
fsts
inc
sub
sub
lock
scas
mov
adc
jb
js
out
mov
sub
pop
addb
or
dec
jg
stos
imul
push
fidivrl
aas
mov
loopne
push
fdivrl
nop
cmp
jns
xchg
cli
in
jle
lods
stos
pop
sub
out
imul
ss
ficompl
shll
rorb
fistl
push
out
push
jge
xchg
insb
pop
add
in
mov
cmp
in
xchg
mov
mov
dec
and
push
pop
idivl
ret
inc
push
pop
les
jnp
jg
xor
andl
cli
cmp
fs
addr16
rcrb
iret
xchg
ds
test
loop
ficompl
rclb
stos
push
lret
or
mov
mov
fs
xchg
movb
and
popa
orl
push
shlb
rolb
sbb
jne
mov
cs
sub
mov
xchg
add
fisttpll
push
jecxz
cmp
lods
sahf
cmc
inc
pop
dec
mov
lret
mov
mov
pusha
dec
adc
sbb
outsb
xchg
mov
out
and
jecxz
and
jge
lret
stos
movsl
or
push
sar
jg
xlat
xor
fnstenv
xchg
jl
sub
bound
clc
push
aas
jle
insb
shl
mov
fstps
cmp
pushf
xor
in
dec
std
dec
jecxz
lock
mov
lret
xor
outsb
mov
rcr
xor
adcl
sbb
addl
push
jmp
dec
ret
lock
aaa
add
incb
sbb
pop
dec
jp
in
dec
or
stos
jle
jle
dec
mov
sub
xchg
movb
pusha
push
push
dec
inc
cmpb
xchg
jp
sar
loopne
cmp
paddsb
or
mov
sub
xchg
je
dec
jne
xchg
mov
daa
mov
cwtl
xchg
movsl
repz
and
add
es
in
push
divl
out
shrl
addr16
jae
push
test
outsb
xchg
popa
jmp
movsb
imul
test
sub
and
push
fimull
rorl
lcall
ret
jns
xor
sbb
push
mov
mov
jmp
xchg
ficoml
cmpsb
xchg
and
dec
pop
sbb
imul
sahf
fdivrs
insb
inc
mov
fcompl
sahf
mov
insl
fsubp
lds
push
rcll
push
sbb
and
pop
leave
lcall
enter
fnsave
cld
scas
cwtl
in
sti
movsl
sbb
es
push
push
mov
in
andb
and
ja
outsb
or
jl
sbb
push
inc
repnz
push
fldcw
mov
xchg
lods
mov
pop
ss
aaa
push
or
fists
test
adc
dec
jnp
lock
cmp
cwtl
mov
outsb
add
mov
mov
outsl
sahf
dec
loope
sbb
pop
and
jno
xor
orb
test
lock
jno
jne
jmp
insb
mov
inc
inc
loope
sti
flds
fcompl
or
into
negb
stos
cs
add
adc
mul
mov
fildll
mov
lods
cmp
sti
fisubrs
pop
je
rclb
and
cmp
or
dec
rorb
xchg
or
sub
repz
sub
adc
mov
ljmp
popf
imul
ljmp
iret
scas
push
sub
hlt
fstl
cmpsb
lock
inc
jo
xchg
push
push
and
add
in
xor
mov
js
jle
stc
and
test
and
mov
sti
xchg
push
in
cmp
pop
lret
shll
or
push
in
ljmp
inc
mov
js
cli
or
jg
negl
cmp
lcall
mov
lret
or
jmp
add
xchg
repz
mulb
push
push
mov
iret
or
iret
add
or
fnsetpm(287
mov
xorl
dec
sbb
pusha
movsl
mov
push
xor
out
cwtl
int
lods
les
movsb
adc
mov
mov
push
xchg
push
jno
xor
xchg
adc
adc
in
cmp
popw
daa
dec
or
test
pop
push
push
xorb
jns
xchg
dec
xchg
pusha
dec
cmc
cmpsb
test
push
scas
fdivs
push
in
jae
mov
mov
out
out
std
jnp
ficoml
roll
xlat
jo
enter
iret
adc
or
inc
and
aas
inc
jns
mov
cmpsb
xchg
stos
and
add
pop
sub
ret
popa
imulb
push
xchg
inc
jg
fwait
imul
les
jbe
or
iret
in
je
shll
addr16
rorl
push
adc
lods
adc
push
daa
jle
imul
add
in
jmp
call
sub
mov
mov
and
xor
in
fcmovb
jo
jae
dec
and
lret
mov
push
jae
enter
or
ljmp
jle
cmpb
push
sub
popa
xchg
icebp
stc
test
xchg
lret
mov
rorl
fmulp
leavew
stc
test
inc
std
dec
xchg
hlt
lock
cwtl
xor
sbb
mov
int
xlat
mov
adc
mov
sub
dec
jmp
pop
out
ljmp
fwait
xchg
test
int3
sub
jne
pop
movsl
je
sysret
push
int
or
or
jecxz
sub
mov
out
mov
bound
jae
jmp
pop
jae
mov
jle
lret
imul
xchg
mov
sbb
dec
push
mov
insl
dec
cmp
inc
push
subl
aad
shrl
dec
cmc
sahf
xor
sub
xor
lods
andl
xchg
sbb
and
je
call
in
iret
aam
xchg
cmpsb
mov
ret
sub
lret
jne
int
aaa
jecxz
sbb
mov
fcmovnu
sbb
out
imul
stc
xchg
xchg
or
inc
jo
stos
lret
fwait
outsb
mov
mov
adc
mov
inc
push
leave
imul
movsl
out
jo
jecxz
jp
loopne
test
lahf
aam
into
cmc
popf
or
and
movsb
mov
jns
data16
push
loop
xor
or
adc
cmp
stc
inc
insl
ljmp
fs
aas
mov
nop
xor
cmpl
inc
cmp
sahf
test
add
lock
xor
push
ss
aas
inc
adc
mov
sub
jp
lea
and
in
cmp
push
orb
pusha
mov
jno
lcall
push
adc
inc
in
mov
addl
xlat
lds
cmpl
sub
fnstcw
mov
lods
sub
jl
mov
sub
mov
sbb
mov
repz
sbb
push
pop
adc
lea
cli
sbb
sbb
sbb
jns
loope
in
fnstcw
jle
adc
pushf
ss
xchg
sarb
xchg
leave
mov
mov
lods
adc
sub
pop
pop
stos
mov
inc
and
pop
into
mov
je
jno
adc
std
adc
in
jge
jb
xchg
push
sub
push
push
mov
mov
jnp
xchg
fcmove
insb
cmp
xor
loope
jmp
pop
add
mov
or
xlat
mov
dec
pop
sti
mov
xlat
sbb
mov
ds
shlb
pop
cwtl
cmpsb
scas
sbb
cmc
dec
cmpsl
adc
scas
bound
adc
cli
out
jbe
fwait
pop
lahf
lea
cld
xor
and
mov
fs
test
mov
test
lods
sub
testb
ljmp
add
std
js
punpckldq
xchg
xchg
pop
int
aaa
jb
mull
inc
sbb
sbb
es
xchg
mov
or
and
inc
push
xlat
cmpsl
pop
pop
xor
adc
sub
xor
dec
mov
push
fucomi
icebp
xlat
fwait
sub
cmpsl
call
ljmp
aam
cmpsb
ss
sub
push
shrl
inc
jne
lcall
xchg
lahf
in
ja
ret
sbb
push
sbb
test
lret
insb
pushl
dec
adc
jge
lods
leave
jnp
les
pop
sub
leave
int3
movl
ret
xchg
mov
inc
ret
xchg
adcl
mov
jg
mov
jge
jne
sarb
rolb
xchg
cmpsl
inc
mov
cs
mov
movsb
insl
and
addr16
and
ret
push
out
push
lret
ficomps
ret
mov
or
adc
xchg
fsubrl
add
push
andl
bound
mov
dec
rorl
xor
shl
xor
mov
mov
jmp
jge
inc
pop
pop
push
cld
mov
addb
mov
or
shll
sub
mov
jo
imul
sbb
inc
and
test
push
dec
daa
cmp
fistpl
pop
hlt
mov
sub
scas
cmpb
sbb
shlb
pop
ljmp
mov
fwait
out
push
mov
test
das
push
jmp
adc
push
jge
iret
mov
lret
cli
add
testl
daa
and
mov
xor
imul
dec
dec
outsb
mov
ret
call
mov
push
pop
js
sub
aas
cmp
xchg
jp
mov
mov
pop
mov
push
cli
ljmp
sbbl
test
ds
sbb
dec
push
pushf
mov
xchg
sbb
or
rcrl
push
orb
sbb
mov
sbb
mov
je
aad
loop
lahf
into
adc
rcrb
stos
out
je
mov
pop
outsb
mov
test
testl
pop
test
mov
and
aaa
shl
pop
test
jp
and
imul
and
out
add
push
cmp
inc
pop
dec
mov
add
xchg
in
sbb
inc
fcomp
fbld
ret
sbb
mov
in
add
loop
sbb
add
jp
adc
push
lods
sub
push
pop
jg
mov
mov
mov
push
clc
xor
call
ds
cmp
mov
out
scas
or
test
mov
mov
stos
push
in
daa
jp
es
mov
mov
jge
shll
push
popf
add
push
daa
inc
xchg
or
popa
mov
sahf
xchg
lds
pop
pop
addr16
mov
cmpb
push
dec
mov
xchg
dec
in
hlt
dec
cli
mov
adc
dec
fnstcw
aas
aam
test
mov
stos
jp
cmp
adc
jno
jl
das
inc
imul
jg
sub
add
pop
mov
leave
fcomp
shlb
fisubrs
dec
xchg
push
cmp
lahf
sbb
lret
xchg
testl
xchg
repnz
xor
fdivl
push
push
in
push
insb
out
pop
stos
pop
push
ret
push
sahf
fiaddl
sbb
mov
arpl
adc
push
aas
outsb
clc
icebp
sub
mov
xlat
dec
sub
cs
mov
push
jp
fdivr
sub
data16
adc
pop
aam
ljmp
into
jae
cmp
jno
iretw
xchg
leavew
cmp
fists
push
cmp
out
outsl
sbb
sub
dec
mov
leave
push
add
jmp
dec
mov
xchg
mov
inc
js
repnz
inc
ds
fs
sub
dec
in
sub
xor
inc
out
pop
push
inc
jge
mov
and
jno
add
cs
mov
xchg
out
or
and
cmp
pusha
repz
stos
rcl
mov
push
adcl
loopne
or
add
jge
adc
movsl
mov
fwait
pop
mov
daa
sahf
xchg
outsl
call
mulb
sbb
pop
int3
jp
in
push
xor
ret
mov
popa
and
loope
scas
push
mov
mov
mov
test
fistl
jge
and
dec
ja
and
iret
add
cld
cmpsb
das
push
push
test
js
push
mov
stc
fisubrl
test
push
fmuls
xchg
xchg
pop
and
orl
push
jge
xchg
call
xchg
mov
rcrl
pop
rolb
fldenv
sub
loopne
ret
mov
ljmp
subb
inc
sbb
jmp
cltd
or
or
and
je
scas
incl
sbb
sbb
push
mov
leave
mov
jl
stc
inc
fidivs
sbbl
daa
mov
jb
in
mov
inc
js
adc
dec
stos
sub
lret
add
std
stc
sub
add
xor
push
add
ja
and
je
xchg
idivb
cmp
pop
mov
mov
insl
repnz
fcoms
shll
popf
sub
loop
adc
add
mov
push
repz
xor
adc
insb
mov
mov
inc
cmp
adcl
call
stos
or
cmp
insl
and
rcrb
push
bsr
xlat
dec
inc
paddw
jle
cwtl
jge
lret
enter
ss
push
jecxz
out
js
xor
fisubrl
mov
popa
mov
lds
mov
xor
sbb
imul
inc
test
adc
xchg
push
xlat
jnp
cmpsl
mov
in
push
pusha
imul
jae
loope
stc
xchg
push
outsb
or
jp
leave
mov
sahf
adc
notl
push
add
jae
push
mov
fwait
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
jmp
popa
jb
clc
xchg
pop
and
push
pop
jne
push
push
mov
mov
or
add
or
loope
sti
sub
mov
mov
pop
pop
int
lock
imull
pop
shr
mov
pop
out
lods
push
xor
push
das
scas
pop
dec
ss
xlat
scas
mov
cwtl
lcall
stc
jb
pop
sub
cmpsb
jmp
push
cmp
pop
std
mov
fdivl
sarb
mov
fiadds
xchg
push
inc
mov
loop
jb
xor
hlt
ljmp
fsub
outsb
scas
ret
stos
sub
xchg
xor
sbb
int
sub
xchg
shlb
cmpl
cs
sbb
or
mov
mov
pop
jbe
data16
addr16
cmp
fwait
out
adc
pop
sbb
addr16
loope
adc
fs
jmp
ljmp
add
inc
das
adc
add
sbb
push
adc
cmp
cvtpi2ps
sti
dec
daa
xor
cmpsb
jmp
push
push
mov
jmp
mov
out
add
jle
repz
loop
push
iret
rclb
xlat
adc
xor
cmc
inc
lcall
sub
test
orl
mov
fisubrl
xor
incb
movsl
or
into
and
notl
adc
pop
sbb
cmp
xor
imul
xlat
pop
mov
js
pop
or
adc
in
push
sahf
out
mov
xor
push
push
xor
sub
gs
jle
pusha
jecxz
insl
sahf
subl
xlat
xchg
xchg
gs
xchg
fwait
pop
sub
rorb
mov
in
adc
lock
jnp
punpcklwd
dec
or
test
sub
rcrb
lods
adc
cmp
emms
mov
mov
movsl
add
mov
lret
testb
inc
lret
pop
mov
cmc
test
mov
xlat
les
mov
outsb
in
sbb
sbb
xchg
push
cmpsb
in
ret
and
and
add
fisubrl
sub
in
popa
xchg
mov
xor
xchg
mov
cwtl
es
dec
dec
adc
scas
inc
push
cs
ret
in
push
push
dec
mov
lahf
pop
sbb
je
xorb
sti
add
push
jns
cld
dec
lods
adc
cli
aaa
jecxz
int
and
scas
adc
imul
jp
adc
xor
push
mov
mov
loope
les
ja
imul
adc
inc
add
push
pop
add
push
adc
js
shl
outsb
cwtl
xor
cli
mov
cmp
jno
inc
stos
jg
mov
push
out
pop
ljmp
xchg
or
js
mov
or
sub
jb
and
adc
mov
clc
dec
xchg
scas
shll
mov
pop
inc
out
adc
popa
data16
push
cltd
push
mov
sar
add
pop
lods
sbb
mov
inc
adc
pop
adc
sub
pop
jno
mov
jae
mov
jno
repz
push
dec
test
fdiv
sbbl
fidivs
hlt
lret
dec
mov
push
push
cmc
jns
add
pusha
or
sbb
push
mov
into
xor
mov
scas
les
sub
and
imul
adc
dec
and
out
and
das
cmp
jb
mov
cmpsb
inc
gs
ss
idiv
jne
pop
push
mov
or
notl
cmc
int
adc
jge
push
push
pusha
xchg
or
adc
rcrb
notb
pushf
shr
cli
daa
adc
lods
sbbl
adcb
xor
aad
cwtl
jmp
icebp
pop
cmpl
ret
scas
faddp
pushf
mov
mov
dec
ret
jnp
inc
sbb
enter
aam
or
lahf
lods
xor
hlt
out
fmuls
dec
bound
stos
mov
ja
jbe
bound
sbb
std
or
jmp
test
sti
shrl
mov
inc
faddl
rcr
loopne
pop
add
push
pop
jp
push
test
outsb
js
jbe
inc
scas
xor
xchg
cmp
loopne
mov
add
int
je
iret
mov
xor
jo
inc
cld
cmp
gs
pop
push
les
adc
mov
or
inc
jae
dec
in
fcompl
jno
mov
xchg
xchg
dec
cwtl
inc
loope
js
push
mov
sbb
jo
test
test
cmpsb
xchg
mov
xchg
adc
xlat
and
and
stos
jle
loope
jns
xchg
loope
into
add
xchg
mov
fldenv
sub
das
jno
xchg
xchg
jp
jns
rol
push
lcall
jae
dec
in
fdivs
fld
imul
mov
mov
xor
push
fcoms
add
sbb
mov
or
das
pushl
seta
sarb
fisttpl
mov
mov
fs
add
addr16
out
out
pushf
and
xorl
loop
cmc
push
sub
popf
cmp
inc
pop
pop
dec
lahf
or
adc
je
out
lret
xchg
notl
and
push
nop
lcall
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
jmp
outsl
or
shll
xchg
daa
ja
sbb
cmpsl
mov
mov
iret
add
or
and
xlat
das
lods
or
out
addb
mov
push
cwtl
loop
outsl
lds
sti
xchg
bound
shrl
mov
dec
jl
in
faddl
ljmp
outsb
or
fsubp
pop
test
fwait
orb
push
and
mov
jle
mov
lcall
movsb
cwtl
push
mov
jae
mov
daa
inc
incb
mov
loop
sub
push
stos
rolb
mov
pop
push
mov
nop
pop
scas
stc
ljmp
sub
dec
inc
pop
push
sub
enter
scas
adc
jecxz
icebp
aas
fmuls
sub
arpl
sub
or
cmpsb
pop
dec
test
addl
aam
shlb
call
inc
fistl
cltd
pop
enter
and
je
inc
sub
mov
adc
adc
in
mov
dec
jp
push
jbe
sbb
dec
xlat
cmp
outsb
shll
fisttps
out
sub
push
xchg
mov
ret
jae
mov
cmp
xchg
push
arpl
sbb
std
sar
mov
sbb
lds
and
cld
aaa
lcall
push
cmp
test
into
sub
mov
dec
push
aam
insb
cmp
int
xchg
cmp
idivb
jo
sub
test
mov
addr16
test
popa
dec
push
add
pop
mov
jns
xchg
cltd
pop
jecxz
sub
cmp
sbb
cld
dec
mov
cmp
mov
or
mov
adc
adc
clc
push
icebp
adc
int3
test
jne,pt
inc
inc
lea
pmaddwd
mov
call
in
fwait
and
movsl
xor
jbe
sub
and
mov
jl
pop
stos
das
js
pop
xchg
mov
dec
gs
faddl
xchg
or
push
push
out
out
fisttpl
jo
imul
leave
les
in
mov
push
test
push
sub
enter
mov
dec
sub
les
shr
mov
in
xor
in
insb
out
nop
in
inc
ffreep
roll
xor
pop
xchg
or
popf
jno
hlt
movsl
mov
sbb
ret
mov
loope
data16
arpl
aaa
xchg
and
test
xchg
cltd
mov
aas
fildl
es
or
dec
pop
jge
std
mov
stc
mov
movsb
pop
cli
ss
sub
stos
cmpsb
ljmp
or
push
dec
jge
inc
outsb
dec
int3
mov
mov
push
push
call
inc
adc
inc
es
jae,pn
sbb
fs
loop
adc
scas
sub
xor
movsl
jb
lcall
and
jbe
mov
stos
sub
mov
lds
xor
xor
jb
pop
cmp
lds
cmp
sbb
inc
inc
ret
jg
fscale
cmp
sub
push
add
call
dec
in
fcoms
xchg
jo
dec
cmpl
and
popf
push
lea
jns
int3
sub
xor
cmp
repnz
test
mov
dec
xor
mov
sub
adc
jmp
nop
mov
dec
mov
mov
sbb
cli
imul
or
cmp
outsb
enter
jmp
push
pop
sti
pop
nop
pop
and
mov
push
imul
je
sub
lcall
inc
insb
fcom
and
sti
jl
push
add
pushf
mov
popa
mov
insl
ljmp
ja
pop
cmp
push
adc
mov
mov
add
push
pop
out
push
adc
cmpsb
jbe
or
inc
movsb
and
xchg
movsb
pop
sbbl
into
lea
inc
mov
test
in
stos
aas
jmp
sub
addl
adc
test
sub
push
int3
dec
jle
mov
int3
jecxz
jge
xchg
lahf
sub
fmuls
cmp
loop
lret
lock
xchg
fldt
cmp
mov
enter
cmp
movsb
in
adc
push
es
mov
xchg
cmp
add
popa
dec
mov
adc
popf
and
inc
and
insb
sbbl
dec
mov
dec
movl
cwtl
shll
ret
mov
pop
fisubrl
jmp
adc
loopne
mov
test
jge
and
push
jp
add
push
in
push
repnz
xchg
mov
dec
pop
or
mov
jg
shlb
js
jne
ss
or
jecxz
mov
sbb
test
jp
push
xchg
arpl
cld
mov
aas
push
subb
fisttpll
add
imul
inc
mov
subl
and
cwtl
mov
shrb
jge
pop
sub
stos
sti
and
ljmp
push
add
mov
cld
adc
daa
xlat
pop
pop
stc
push
mov
setge
or
add
or
or
ficoml
in
repz
and
pop
lahf
cmc
out
mov
add
lcall
test
inc
push
adc
xchg
and
sub
xchg
es
loope
jl
jmp
mov
mov
repz
sub
int
cmp
sbb
dec
sahf
inc
and
jmp
sbb
dec
mov
pushf
pop
jp
add
sub
insb
pusha
inc
push
or
mov
pop
pop
repnz
push
addr16
mov
and
dec
icebp
loopne
pop
dec
jle
mov
adc
mov
mov
or
mov
fdivrl
xor
dec
xor
jmp
notb
and
fnstsw
addr16
dec
cmc
shlb
adc
pop
xor
jbe
pop
mov
subl
cltd
xchg
outsb
into
push
dec
adc
dec
pop
orb
pop
xchg
fwait
repnz
repz
mov
pusha
cmp
aam
dec
scas
inc
sbb
int
pop
test
mov
sbb
adc
push
popf
lea
scas
cltd
dec
push
repnz
out
shlb
in
incb
loopne
sbb
pop
cmp
mov
repnz
lods
int
fstpl
mov
mov
insl
push
mov
xchg
ljmp
sahf
dec
das
lret
dec
lret
inc
imul
xor
stos
mov
inc
out
outsl
push
jns
xchg
dec
cmpsb
xor
add
aad
or
sbb
cwtl
pop
dec
dec
sbb
std
jno
loopne
test
out
iret
xor
test
cli
mov
loop
scas
jle
jno
movb
jmp
sub
ja
push
ficoml
and
adc
gs
mov
xchg
dec
lods
dec
mov
cmpsl
repz
pop
sti
jno
sbb
sub
outsl
ss
jo
ret
pop
jns
mov
fadds
mov
pop
mov
add
cmp
nop
or
dec
cltd
cmpsb
sub
pop
fdivs
add
mov
fdivrl
dec
xor
cmc
testb
adc
push
ret
push
imul
sbb
orl
cmp
test
mov
pusha
push
adc
xchg
xlat
and
jo
testb
mov
inc
mov
ds
xor
mov
inc
mov
fucomi
fstps
ljmp
jb
cltd
stc
pop
sbb
cltd
test
ss
pop
cmp
aam
jg,pt
inc
repz
jecxz
jge
data16
add
sbb
inc
push
pop
fistpll
incl
cmp
cli
loope
mov
push
scas
fisttps
jns
lods
sub
xchg
cmp
xchg
nop
push
push
jno
pop
push
xchg
mov
xchg
lock
js
sahf
inc
push
mov
dec
cli
sub
or
push
loopne
jo
xor
shlb
cld
push
jne
nop
rolb
and
mov
or
jo
icebp
jle
pop
adc
jne
xorl
mov
inc
push
push
out
shll
repnz
lock
xchg
jns
loopne
dec
push
iret
in
jp
push
jp
inc
lods
mov
adcl
add
testb
mov
aad
dec
test
sub
mov
push
in
push
sti
xor
mov
faddl
aas
mov
loop
pop
xchg
mov
insb
or
shrb
mov
xchg
out
sub
fbstp
aaa
dec
aas
add
pusha
scas
push
or
xor
stos
push
xor
mov
push
adc
jp
xchg
mov
aas
pop
cltd
inc
addb
and
pop
mov
lods
movsb
jl
adcl
and
std
adc
cmp
test
out
outsb
cs
sbbl
addr16
loopne
jmp
ja
pop
inc
repz
or
mov
push
pop
mull
out
add
add
pop
lds
cmp
icebp
dec
movsl
leave
in
mov
push
cmpsb
lcall
push
lss
arpl
sbb
iret
cmpsb
lcall
iret
push
lods
inc
call
jb
add
in
pop
add
call
and
jle
push
das
mov
xchg
fistps
cmp
adc
xor
loopne
add
push
iret
ss
or
adc
cmc
lock
mov
inc
pop
inc
and
ljmp
xchg
cld
in
dec
mov
inc
popf
les
nop
adc
movsb
fldl
sub
push
lret
mov
or
nop
push
iretw
test
mov
test
imul
aad
cmp
cli
sbbb
jnp
pop
xor
mov
sbb
push
xor
lcall
push
imul
cli
push
subb
scas
sub
mov
mov
cmp
xchg
inc
lahf
sub
movsl
pop
xor
adc
stos
jne
in
pop
xor
cwtl
lret
test
sub
int3
mov
adc
lods
test
ds
nop
les
lods
dec
shll
pop
in
shll
push
ret
adc
xor
shlb
mov
inc
xor
daa
adc
add
insb
inc
inc
inc
test
pop
jnp
aad
shrd
mov
mov
xor
shr
mov
xor
shl
jmp
sbb
adc
mov
cmp
mov
iret
add
or
call
das
mov
inc
nop
js
addl
in
outsb
xchg
dec
add
cmp
cmpl
jecxz
mov
jno
mov
xlat
outsl
shlb
mov
insl
mov
push
xor
sub
fisttpll
lock
sbb
cmp
pushf
loopne
pop
sti
outsl
cld
bound
test
pop
sbb
add
lock
adc
insb
or
pop
cmp
movsl
test
cmpsb
in
mov
loope
out
sub
fnstcw
dec
orb
jno
vpinsrb
int
and
sbb
dec
les
rcr
lcall
sbb
mov
xchg
lret
jmp
or
cmp
in
dec
ret
fdiv
sub
repz
stos
decb
cmpsl
enter
mov
mov
sarl
ja
jnp
and
lods
push
xchg
enter
xchg
cmp
nop
js
data16
mov
pop
xor
add
shll
daa
inc
sahf
and
mov
jae
cmp
es
dec
lods
rcr
stos
shr
repz
xchg
mov
bound
mov
lahf
mov
dec
js
ret
aad
cli
inc
adc
push
mull
aad
insl
push
cmc
into
mov
pop
cli
faddl
pop
addr16
mov
sti
stos
lods
push
pop
cmp
mov
or
int
jmp
es
insl
dec
xlat
hlt
cli
jle
addr16
cltd
jp
clc
mov
dec
out
adc
popa
and
std
sahf
or
adc
mov
jno
sub
insb
jp
std
inc
jge
jl
es
fs
rcll
outsl
mov
lock
int3
adc
notl
mov
mov
jo
cli
mov
jbe
and
pop
or
add
movsl
out
sbb
pop
lahf
jmp
pushf
sub
rcrl
push
ja
rcrl
ror
mov
push
jbe
sub
cmp
lods
dec
int3
loop,pt
or
and
clc
cmp
loopne
daa
incl
sub
cld
push
push
movsl
or
daa
cltd
loop
sbb
mov
add
mov
or
xchg
dec
out
mov
mov
loop
enter
jge
popa
xchg
fmul
ljmp
jl
xchg
pop
enter
inc
mov
pushf
pop
xor
adc
pushf
out
cmp
sbb
repz
pushf
out
sti
mov
dec
shl
out
mov
pop
add
lahf
daa
mov
scas
dec
aaa
fs
sub
inc
lea
and
pushf
or
xor
sub
mov
mov
mov
sbb
add
dec
adc
mov
or
jg,pn
adc
mov
int3
adc
and
dec
jle
test
and
mov
data16
into
movsl
jg
js,pt
pop
jne
roll
popa
cld
ret
in
aam
nop
mov
push
add
mov
mov
sbb
mov
xchg
mov
sbb
shrl
dec
ret
jmp
popa
xor
mov
xchg
xor
add
push
or
out
sbb
repz
xor
mov
jae
cvtdq2ps
js
lds
test
xchg
adc
adc
sub
sub
inc
mov
push
jbe
dec
inc
jb
push
or
lahf
fidivrl
les
mov
sbb
pop
sub
inc
pushf
pop
ficomps
or
pushf
sub
push
inc
in
inc
insl
pop
ja
fsin
and
sbb
inc
inc
repnz
jo
dec
xor
sbb
or
cmp
push
dec
js
fnsave
pusha
das
and
xchg
hlt
out
add
push
push
sahf
or
add
and
xchg
pop
inc
and
mov
fs
aas
fs
inc
aam
mov
aaa
jnp
pop
mulb
mov
test
xor
mov
xchg
dec
xorl
pop
push
jg
jle
sub
insb
cltd
dec
fdivrp
inc
test
sub
cmp
insl
shll
stc
mov
dec
inc
or
sub
lea
mov
movsb
leave
cmpsl
insl
mov
shrl
je
mov
jo
xchg
push
adc
pop
into
jo
push
in
imul
imull
push
adcl
inc
imull
xchg
push
or
in
mov
lcall
add
xor
cmp
xchg
fstps
inc
imul
leave
nop
or
dec
mov
stos
aad
sbb
imulb
pop
rcll
jno
xchg
je
icebp
shr
sbb
mov
pop
divb
dec
sub
test
dec
in
cwtl
push
into
std
ret
pop
mov
dec
ficoml
push
lret
fistl
sarl
enter
mov
mov
fwait
xor
outsl
jmp
dec
addr16
iret
dec
pop
mov
mov
inc
xchg
mov
iret
lock
push
test
in
fcompl
inc
std
inc
pop
inc
sub
mov
jne
fimuls
nop
mov
jl
push
adc
push
fmuls
fdivl
rorb
movsb
ret
rorl
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
jmp
add
cmp
adc
sti
add
gs
orl
iret
add
or
sub
xlat
xor
adc
call
iret
adc
adc
mov
test
pop
sbb
nop
xchg
sbb
jecxz
cmpsl
in
cmp
push
paddq
xorl
sbb
xchg
dec
add
imul
lock
out
rorl
imul
jo
test
dec
daa
jge
sub
sarl
sub
cmp
orb
addr16
pop
xchg
dec
mov
call
test
mov
push
ret
notl
das
pop
das
add
popaw
jge
idiv
mov
popa
sub
cmpsl
mov
stos
cs
std
addr16
sbb
jno
fadd
ret
sub
mov
or
push
xor
scas
les
xchg
cmpb
and
in
movsb
fs
sub
outsl
sahf
enter
cmp
push
jno
orl
add
or
mov
mov
xchg
mov
fisubs
rolb
cmpsb
add
mov
adc
dec
stos
sub
and
inc
mov
add
push
pop
inc
add
jmp
jle
rcrl
lea
icebp
bound
push
jo
jo
addr16
xchg
stos
jg
fidivs
enter
mov
push
inc
pop
mov
push
xchg
adc
jne
pop
add
cmp
in
and
les
cmp
mov
inc
icebp
xor
push
mov
add
dec
out
or
add
subb
iret
jg,pt
mov
lret
or
pusha
nop
sti
hlt
test
pop
lods
or
nop
push
sub
sub
pop
mov
call
mov
jge
inc
xchg
sbb
jae
jge
mov
mov
rcrl
sub
in
fdiv
dec
add
inc
and
outsl
jae
jae
pop
jb
lea
pop
dec
rcrl
xlat
std
pop
sbb
jecxz
fs
sub
cmp
sub
mov
daa
pop
sub
xchg
lock
mov
and
outsb
mov
cmp
ja
stc
lahf
lret
aam
scas
je
pop
hlt
xchg
stos
jmp
inc
inc
mov
sbbl
mov
lods
jecxz
mov
pop
dec
testb
jl
mov
inc
jnp
lock
sahf
outsl
cld
and
push
adc
sahf
ja
in
jo
nop
pushf
lret
ljmp
jns
inc
mov
lahf
or
leave
xor
mov
dec
mov
jg
xor
cmp
mov
jp
mov
xor
ds
add
xor
push
xlat
fisubrl
mov
pusha
adc
mov
sub
and
mov
enter
adc
lds
sbb
and
sub
mov
pop
sub
shlb
in
cmpsb
adc
or
and
insl
xchg
push
popa
inc
rclb
popf
mov
lret
xchg
enter
cmpl
dec
in
or
in
sbb
mov
dec
in
inc
xchg
int
and
js
pop
lock
pusha
sub
cmpsl
sbb
push
cld
std
mov
pop
dec
out
mov
enter
pop
pop
mov
push
xor
push
lock
xchg
dec
adc
inc
adc
adc
xor
pop
mov
push
shl
or
test
adc
sbb
xlat
inc
xchg
std
and
jno
adc
inc
and
push
das
std
std
push
jbe
nop
repz
loope
inc
aaa
mov
jne
mov
pop
sub
jle
daa
ja
jge
fistps
sub
lock
daa
pop
add
xchg
or
icebp
or
cli
mov
xlat
fwait
sti
in
pop
imul
pop
in
cmpsb
xor
movsl
dec
in
push
mov
xchg
pop
es
mov
xchg
test
jmp
leave
in
int
add
fmull
and
jmp
pop
in
data16
loopne
sbb
pop
xor
or
xchg
shlb
enter
adc
mov
sub
icebp
mov
lret
popf
rorl
setns
sub
test
inc
inc
jl
dec
fistpl
psubw
and
shr
sbb
test
cmp
add
or
lcall
sarb
popf
mov
loop
adc
pop
jmp
mov
in
cs
gs
fwait
push
ss
cld
or
dec
sub
imul
repz
js
outsl
xor
movsl
mov
inc
iret
or
dec
pop
xor
or
int
gs
add
ds
and
cltd
inc
into
lock
mov
xor
adc
movsl
xchg
sbb
and
mov
jg
dec
pop
in
mov
sub
adc
sub
mov
xor
add
xchg
add
pusha
push
fimull
jnp
inc
lret
cs
add
push
in
dec
js
test
sbb
mov
ss
in
mov
imul
or
jb
xchg
outsl
adc
aas
adcl
scas
shl
mov
mov
xor
mov
mov
xor
xor
jmp
stos
ret
and
rorl
xor
or
iret
add
or
or
jmp
pop
inc
je
pop
mov
rcrb
les
insb
cs
add
xchg
jg
gs
xlat
mov
out
scas
icebp
dec
lea
mov
xchg
push
loop
lods
push
pushf
loope
xchg
inc
xchg
mov
out
cmp
mov
idiv
icebp
addr16
xor
pop
in
lea
add
mov
test
xor
lods
fisubl
in
sahf
adc
bnd
fbld
je
mov
push
jns
jae
pop
in
adc
mov
jo
loopne
negb
mov
int
mov
lcall
and
push
jl
sti
loopne
dec
adc
jbe
ljmp
mulb
ljmp
sti
popa
roll
mov
jecxz
out
adc
mov
mov
add
push
loope
cltd
xchg
or
and
test
cmp
push
lret
dec
pop
inc
pop
xchg
enter
pop
xlat
mov
xor
movsl
xor
jmp
or
mov
mov
test
mov
dec
adc
push
mov
adc
enter
test
xchg
mov
pop
les
sub
push
mov
lahf
test
mov
stos
jno
xor
test
shrb
cld
mov
push
and
repnz
and
outsl
and
pop
or
stc
enter
sbb
mov
test
xchg
and
in
mov
repz
aad
and
or
sbb
sar
lods
pop
mov
out
cmc
and
stc
je
cld
xchg
insb
xchg
cmpsl
adc
loope
jle
mov
pop
xor
cmp
iret
scas
pop
loopne
sub
lret
mov
sbb
pop
test
xchg
adc
sub
jo
out
stc
xchg
lret
mov
mov
out
movsl
pop
inc
mov
ret
lret
scas
ja
mov
xor
xchg
mul
inc
addr16
popf
enter
loope
popf
adc
shll
jg
call
sti
out
fwait
sub
es
aas
lods
jns
outsl
mov
dec
sub
imul
push
arpl
cmp
xchg
pop
mov
cltd
sbb
mov
or
cmpsb
cmp
imul
test
inc
xlat
rcrl
je
mov
cmc
ror
popf
pop
cmpsb
adc
test
sub
or
pop
sub
and
outsl
fiadds
push
ljmp
add
cli
pushf
sbbb
shl
mov
push
dec
ja
in
sub
je
call
cmc
lods
sbb
lea
or
xchg
cmp
sbb
mov
ret
cltd
push
jmp
aam
testl
outsb
push
mov
test
jae
loop
mov
test
pop
les
rol
mov
test
pop
in
xchg
add
pop
pop
repz
jae
sub
int
fstpl
xor
add
gs
dec
adc
stos
jbe
inc
and
xchg
popa
mov
mov
and
xchg
push
sub
pop
pop
outsl
or
inc
int
xchg
arpl
mov
or
repz
jne
mov
add
mov
and
mov
and
adc
imul
rorb
xchg
push
out
dec
das
daa
js
sbbl
fsubrs
cld
int3
inc
test
je
lock
jne
rorb
call
into
add
mov
lods
daa
cmp
adc
pop
jecxz
adc
stos
stos
push
mov
lret
jns
push
idivl
icebp
push
inc
jmp
xchg
pusha
test
popa
xor
add
lock
divl
flds
outsl
repnz
cld
dec
mov
rcrb
xchg
and
lods
push
js
arpl
movsb
jl
mov
jae
std
imul
or
pop
sub
push
icebp
ss
jnp
stos
push
shlb
inc
mov
mov
test
fwait
jle
push
aas
es
mov
jmp
xor
push
dec
xlat
mov
cmp
jecxz
lock
adc
xchg
mov
push
ret
cmp
xor
pop
sub
jo
pop
and
iret
adc
pushf
push
nop
or
js
mov
dec
daa
aam
cld
sti
xchg
mov
sbb
jle
shll
pop
stc
ljmp
rol
inc
xchg
shl
cmp
jns
imul
adc
stos
mov
nop
inc
cltd
fwait
call
jne
jae
sbb
repnz
jb
rcrl
mov
push
into
xchg
arpl
mov
hlt
xor
push
mov
pop
and
xlat
stos
cwtl
pushl
call
shl
in
xchg
cli
xchg
push
add
repnz
data16
insl
out
ret
sbb
cmp
imul
mov
stos
inc
enter
shll
aaa
cmp
bound
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
jmp
lea
xchg
enter
add
or
add
or
sbb
ds
in
xor
and
pusha
cmp
icebp
or
scas
lea
dec
pusha
xorb
pop
ret
mov
lds
push
aaa
rcrl
outsb
mov
bound
mov
fcompl
cmpsl
sbb
fidivrl
pop
pop
into
sub
es
icebp
inc
add
rclb
loopne
and
ds
sbb
cmp
in
mov
dec
insb
jne
mov
or
push
and
and
ljmp
or
imul
rolb
jne
lret
lea
dec
out
mov
call
outsb
sub
andl
and
jo
mov
and
and
sahf
xor
addr16
popf
add
lock
dec
ljmp
push
add
or
pop
repz
cmpsb
loopne
add
bswap
bound
movsb
cmp
jecxz
out
push
sub
sbb
movsb
lods
jae
jle
jmp
add
mov
dec
xlat
insb
cmp
mov
fdivrl
rcrb
cmp
push
jnp
jmp
mov
mov
add
adc
repnz
pop
jge
into
outsl
fcompl
imul
ret
insb
insb
mov
rcl
xlat
push
gs
ljmp
lock
ja
bound
stc
sbb
push
xlat
ret
imul
mov
int
aam
hlt
pop
movsl
ja
lock
dec
dec
imul
cmc
idivb
mov
push
cltd
add
dec
cmp
bound
mov
popa
clc
rcrb
push
fcomps
sub
out
jae
bnd
jle
pop
lock
arpl
in
js
dec
mov
iret
add
aaa
dec
adc
mov
adc
jmp
inc
sbb
adc
or
pop
scas
cltd
aam
inc
cli
xchg
adc
dec
and
xor
data16
pushf
fsubrl
sbb
scas
int3
fistpll
xchg
cmp
fldt
push
idiv
icebp
push
cmc
xor
mov
jae
adc
out
fs
test
jmp
test
mov
and
xchg
rcl
jo
fsub
xchg
push
es
jns
popa
pushl
mov
push
ds
mov
fsub
ret
test
inc
repnz
sbbb
fwait
adc
adc
daa
inc
jo
jl
icebp
lds
jno
or
pop
mov
lea
mov
mov
jae
das
mov
and
dec
scas
leave
movsl
test
outsl
add
add
jnp
lods
mov
nop
std
mov
shr
je
leave
cmc
fldl
push
mov
add
repz
cmc
leave
dec
sarl
test
jecxz
adc
movsb
movsl
xchg
dec
push
lahf
jo
das
dec
in
ljmp
es
in
push
push
xor
jb
or
out
inc
pop
sub
repnz
cmpb
xchg
inc
lret
or
fnstenv
push
ja
je
sub
rsqrtps
jmp
mov
jae
xor
insl
sbb
shrw
add
jmp
xchg
add
fwait
cld
fnstenv
or
int3
cltd
roll
bound
fmuls
xor
inc
mov
push
and
sbb
cmpsb
cmp
cmp
scas
or
andb
mov
push
mov
add
mov
inc
fdivs
pop
jne
arpl
lcall
mov
jne
xchg
popf
rorb
dec
mov
mov
sub
jge
daa
xor
inc
mov
das
into
rolb
and
adc
icebp
dec
lret
stos
mov
jmp
push
jmp
out
xor
rcrb
mov
push
and
xchg
dec
pushf
pop
in
add
sbb
lcall
sbb
lds
sbb
imul
daa
pusha
mov
xor
jae
gs
dec
gs
insb
inc
xor
jae
jnp
dec
mul
jb
xor
sub
or
xchg
fsub
and
stos
xor
rcrb
xor
sbb
xchg
imul
adc
fsubrs
cmp
cmp
int
fstpl
ss
shl
rcrl
cmp
icebp
lods
xchg
add
push
dec
cld
mov
fdivl
pop
xchg
sbb
into
push
sti
jns
test
pop
push
sahf
pop
add
fildll
leave
cmp
add
add
sub
fdiv
jp
and
cltd
cmp
inc
inc
push
aam
cmpsb
cmp
cld
pusha
les
push
pop
fs
push
inc
sbb
shrb
or
mov
outsb
cmpsb
cmpsb
es
xchg
in
or
ja
cmp
jg
in
fdivr
sub
and
enter
fimuls
repz
jecxz
pop
push
xchg
push
in
add
add
cmp
stos
xchg
shl
sbb
jns
adc
stos
and
mov
pop
icebp
jg
lret
and
cmp
cs
jnp
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
ja
popf
adcl
pop
fisubrs
stos
add
iret
add
or
and
roll
pop
movsl
sub
stos
call
xchg
add
push
outsb
xchg
fiaddl
push
or
or
push
mov
lahf
lods
cltd
lods
rcl
sub
xor
into
stc
dec
addr16
insl
and
fidivl
adc
xchg
imul
les
inc
adc
add
ds
gs
push
or
imul
int3
mov
out
mov
test
jnp
xchg
mov
dec
or
and
pop
cld
jnp
dec
sub
sbb
icebp
sahf
fxch
jle
out
adc
loope
mov
push
sub
stos
sbb
xor
inc
xorl
out
fwait
jo
aaa
cmp
fistps
movl
fsubl
or
inc
jns
ret
clc
imul
mov
adc
and
mov
pop
push
jbe
rcl
repnz
das
push
add
insl
xor
lods
lret
mov
sub
fldt
dec
test
pop
jae
mov
das
arpl
dec
out
xchg
xchg
push
mov
into
aaa
sub
push
inc
adc
push
je
and
fisubrs
jns
in
add
sub
mov
aad
je
out
cmp
lret
fildll
fnstcw
insb
xchg
in
dec
mov
cmp
mov
push
popf
cmp
test
jnp
iret
cmpl
push
mov
or
sbb
cli
movsb
pushf
and
sub
mov
jmp
test
ds
jnp
sbb
fs
fcompl
jp
sbb
shll
test
cmp
scas
fimull
leave
lods
pop
push
and
lret
sub
scas
out
push
pushf
icebp
sub
adc
std
sub
shll
sbb
gs
idiv
sub
stc
add
cmpl
cld
xor
sub
pop
dec
cmpsl
hlt
pop
jne
pop
cmp
ja
or
and
es
ror
jg
jo
mov
lret
mov
pop
push
or
lret
inc
fwait
ret
xchg
fs
sahf
out
fsubs
dec
imul
test
in
mov
out
push
xchg
test
arpl
imull
mov
insl
pop
xor
dec
inc
inc
mov
cwtl
jle
mov
pop
inc
dec
inc
or
adc
push
cli
pop
mov
adc
or
lea
aas
lods
shlb
inc
es
xchg
pop
add
aas
lret
test
sbb
xchg
repz
test
pop
adc
add
out
and
lret
xor
int3
sub
jno
xchg
pop
dec
mov
mov
movsb
js
push
dec
lcall
cli
mov
es
stos
adc
lods
mov
mov
fadds
lcall
xor
cs
cmpsb
xchg
push
cmp
lret
andl
lods
out
sub
xchg
xchg
nop
dec
push
in
ret
in
mov
push
push
xor
gs
insb
jb
or
lret
cltd
dec
and
test
rcll
fcomi
and
inc
iret
pop
cmp
mov
cs
mov
les
sub
xor
out
call
popa
pop
mov
imul
xor
dec
lret
jns
pop
into
or
leave
xor
int3
aaa
repz
daa
xchg
jns
dec
dec
test
pop
shll
mov
pop
or
jnp
shll
sti
jb
pusha
fwait
shrb
test
out
addr16
aas
dec
call
les
es
ret
lcall
test
in
out
out
adc
add
cmp
cld
xor
lock
sbb
mov
mov
testb
add
xlat
inc
shl
jge
popf
shrl
popf
leave
jb
les
daa
sti
xor
push
sub
outsb
cmp
xchg
or
lret
stos
mov
or
aam
add
or
dec
pop
std
sbb
ret
xchg
dec
lcall
inc
insb
lret
jns
daa
lea
in
mov
loopne
inc
push
xorl
fisubrs
loopne
or
xor
pop
stc
out
cmp
cmp
in
fwait
hlt
xor
nop
adc
push
push
and
dec
inc
push
loopne
not
fdivl
cli
mov
xlat
push
jne
fwait
lcall
and
out
and
int3
aam
jns
imul
iret
or
fnstenv
push
xchg
or
loopne
xchg
push
into
lret
cld
pop
rclb
sub
arpl
push
and
cmp
sbb
and
mov
inc
mov
ret
sarb
mov
inc
cmpsb
js
jae
out
mov
sub
mov
or
mov
jge
mov
pop
sub
cmpsl
aam
xor
outsl
lret
popf
or
ljmp
in
sbb
out
in
mov
gs
and
jmp
mov
iret
jns
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
jmp
pop
and
aaa
out
adc
imul
iret
add
or
es
scas
jnp
fadds
fnstenv
bound
mov
jle
inc
pop
daa
or
mov
xor
sbb
jle
xchg
push
inc
ret
cwtl
xchg
in
mov
cli
inc
rcr
leave
aam
rorl
adc
pop
test
xchg
les
dec
int3
xchg
xchg
xchg
aam
pop
sub
inc
inc
add
mov
inc
inc
mov
mov
incl
out
ljmp
imul
in
inc
pop
ret
dec
outsb
jno
mov
rcrl
push
push
push
sub
movsb
cmp
fwait
cld
cmpsl
cli
out
fists
sub
adc
aaa
sbb
lea
xchg
das
or
sub
insl
mov
mov
cli
test
pop
in
or
movsl
push
pop
xchg
xor
loope
mov
fs
inc
xor
jo
std
lods
imul
adc
sbb
mov
iret
stos
and
cmpsb
faddp
jne
mov
js,pn
enter
hlt
cmp
xchg
mov
jne
ljmp
insb
popa
xchg
shrb
rsqrtps
out
inc
or
je
jge
inc
add
dec
testl
sub
cmpsb
call
and
or
repz
call
mov
fcoml
js
movl
inc
scas
addr16
mov
cli
xor
pop
jl
jae
or
insl
daa
outsb
test
hlt
dec
mov
leave
inc
adc
jmp
aad
call
in
push
mov
adc
mov
daa
imul
and
xor
jmp
xchg
jg
or
and
enter
xor
into
outsl
mov
xchg
adc
mov
mov
jnp
sub
push
les
jl
lods
imul
aaa
lret
mov
pop
repnz
insb
mov
add
movsl
outsl
cli
xchg
lods
in
sub
mov
xor
and
into
out
push
pop
mov
sub
sahf
sub
sbb
fcmovne
push
xor
pop
lds
dec
or
in
or
outsb
js
adc
jp
ret
imul
sub
xor
and
std
mov
sbb
sbb
imul
or
sub
xor
in
push
lret
or
je
adc
adc
or
scas
cmpsl
dec
pusha
sbb
sub
xchg
rorl
cmp
add
lods
inc
push
add
pop
hlt
in
xchg
arpl
lods
outsb
push
pop
mov
cld
pop
test
pushf
cmp
pop
add
inc
mov
js
xchg
out
stos
cld
out
mov
sti
out
test
xor
imul
or
jbe
sub
dec
pop
repz
dec
adc
inc
rcrb
adc
mov
cmp
outsl
test
insb
add
xor
dec
lret
imul
sbb
mov
xorb
movsl
push
sub
and
insb
xchg
inc
pop
iret
repz
add
ljmp
idiv
stos
dec
fsub
adc
jo
shrb
mov
jnp
xor
cmpsb
repz
dec
les
mov
xor
cmp
push
pop
movsl
jp
and
push
out
pushf
or
outsl
iret
jbe
add
pop
mov
or
fcoms
vpexpandq
ret
mov
mov
dec
push
pop
and
ret
lret
lods
adc
or
push
out
loopne
fisttpl
adc
xor
cmpsl
dec
push
cli
inc
popa
jecxz
nop
pop
mov
movsl
xchg
inc
stos
testb
xchg
lahf
lahf
clc
gs
fld
aam
jp
and
push
cmp
xchg
mov
stos
pop
pop
sahf
inc
mov
mov
push
scas
mov
loop
add
push
lods
iret
sub
add
adc
movsb
into
mov
mov
clc
scas
popa
fistl
fidivl
add
js
dec
sub
pop
mov
pop
add
leave
pop
jmp
or
or
ret
bound
in
dec
roll
xchg
ret
lahf
mov
cmp
pop
sti
fimull
jo
mov
shll
add
stos
lods
out
add
clc
ljmp
cmpsl
mov
mov
xor
outsl
faddl
or
jg
pop
dec
mov
rcll
cmp
ja
pop
pop
push
imul
scas
push
scas
data16
xchg
xchg
pop
mov
les
jmp
fists
out
jg
jge
mov
dec
mov
mov
les
out
jl
lahf
push
add
loope
lods
je
sub
addr16
inc
orb
and
dec
popf
pop
out
mov
sub
outsb
test
cmp
jmp
jnp
push
pushl
xchg
mov
push
cmp
add
cmp
xchg
popf
movb
es
clc
sub
loop
in
in
push
pop
fs
pop
loop
out
int3
adc
mov
jmp
fcoms
aad
aad
dec
xchg
lds
iret
add
or
push
loop
cmp
jmp
int
cmpsl
test
repz
cld
subl
cmpb
mov
adcb
xchg
je
sti
sti
cltd
stos
iret
push
ljmp
lahf
mov
das
cmpsb
int3
cwtl
ja
jns
ret
xchg
aaa
mov
mov
mov
insb
aad
add
repnz
scas
sub
xor
ret
jno
insl
pop
cli
subps
std
dec
dec
movl
push
loopne
mov
lods
jge
mov
jo
scas
mov
icebp
push
cmp
aam
mov
inc
insl
xchg
je
pop
sub
dec
ret
neg
hlt
jp
pop
add
icebp
movsb
out
mov
in
fcomi
push
movsl
add
out
or
clc
fsubr
fwait
push
in
out
cld
and
push
daa
pop
lahf
xchg
and
adc
dec
in
jno
mov
popf
adcl
dec
mov
dec
test
add
inc
inc
pop
inc
or
les
xor
sbb
data16
insl
roll
into
push
pop
sub
jmp
mov
pop
fistpl
mov
push
inc
les
inc
out
js
orb
scas
xor
jns
mov
sbb
imul
add
addr16
mov
adc
imull
int
aas
repz
dec
movb
add
insb
jge
mov
notl
lret
jo
adc
jl
xchg
xchg
mov
jp
lods
mov
push
lcall
lret
mov
push
mov
sbb
popf
cmc
jle
pusha
insl
mov
ret
cld
jbe
jns
and
stos
cmp
push
mov
jbe
inc
pushw
insl
je
pop
sbb
loopne
pop
js
clc
sti
mov
mov
add
push
push
ret
sti
pop
pop
or
xchg
popa
push
lcall
push
shll
add
and
lds
in
iret
mov
daa
sbb
jmp
jge
out
jg
inc
mov
xor
mov
adc
sub
int3
jbe
inc
daa
mov
lahf
hlt
cmp
fistps
sbb
cmp
iret
pop
lret
adc
mov
imul
out
pop
xorb
fadd
fcmovu
arpl
sub
and
orl
inc
xchg
xchg
sub
add
xchg
loopne
addl
pop
jno
mov
lret
sub
iret
inc
push
mov
bound
dec
jg
testb
subl
ficoml
aas
cld
in
jp
inc
pop
test
dec
fdivl
popa
pop
and
xchg
mov
jo
loop
cs
push
neg
push
in
ja
loope
ret
aaa
xchg
popf
push
fmuls
and
pop
inc
andb
inc
and
inc
out
xchg
fisubrl
fsubrs
test
or
sbb
call
push
pop
and
jbe
or
and
pop
out
or
push
push
out
adc
stos
sbb
and
stos
mov
or
dec
shr
dec
lret
and
outsb
jo
stos
repz
adc
xchg
cmpsb
scas
mov
sbb
aam
jmp
jno
adc
cltd
mov
setbe
popa
mov
cmpsb
out
jnp
jne
test
mov
push
jge
push
lret
pushf
cltd
xorb
mov
ret
outsb
cmc
popa
daa
pop
lcall
sbb
nop
pop
fisubrs
jg
push
fnsave
mov
insb
inc
imul
mov
out
push
int3
arpl
repz
out
sti
pop
fidivrs
sub
sub
pop
push
add
je
pop
dec
rolb
cmp
stos
xor
and
fistpll
cmp
push
cwtl
xchg
enter
outsb
cmp
pop
loop
push
inc
cmp
jnp
insb
rcll
mov
pop
rorl
sub
iret
sbb
repnz
or
sahf
lahf
sbb
or
pop
cld
jge
fsubrs
cli
mov
stos
dec
or
sbb
mov
andl
mov
scas
scas
push
divl
stos
cmp
inc
push
mov
mov
cmp
repnz
push
aas
xlat
xchg
dec
sub
out
popf
jle
jae
ja
and
fnstsw
aaa
bound
add
pushl
ja
addl
ss
in
xchg
call
cmpsl
lahf
pusha
cld
pop
mov
jae
cmp
testl
cmpsl
insl
arpl
and
movsb
lock
cmp
push
hlt
push
mov
sub
push
push
jns
push
ljmp
dec
sahf
insl
pop
cltd
mov
jo
fwait
inc
ficoml
clc
inc
sub
addr16
mov
dec
inc
lds
push
push
push
xchg
inc
shrl
inc
test
xchg
jae
xchg
sbb
mov
ds
inc
jb
int3
bound
mov
lock
xchg
imul
repz
mov
in
ret
popa
xchg
jnp
pop
mov
loopne
jl
aad
and
or
pop
in
fsubrl
pop
sti
es
scas
xchg
popa
rcrb
inc
xchg
jb
int3
mov
pop
movsl
outsb
mov
andb
push
rcrl
push
in
pusha
push
ljmp
aam
sbb
je
jg
inc
cld
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
jmp
push
pop
sub
das
and
inc
mov
iret
add
or
mov
sub
add
loope
sub
sub
mov
popf
mov
pop
jg
mov
inc
ja
pop
mov
jp
push
push
sbbb
clc
lret
repnz
lret
sub
shrb
inc
idivl
push
sbb
hlt
scas
lock
hlt
fcmove
fstl
daa
in
mov
cmpsl
dec
push
pop
jge
movsl
fcmovb
and
ljmp
and
jne
fadds
addb
jmp
test
jg
repnz
cmp
mov
stos
lea
add
lea
hlt
fmuls
out
xchg
loope
out
lcall
adc
int3
push
xchg
jno
xchg
sub
scas
sbb
dec
mov
add
xchg
lcall
lods
out
dec
int3
stos
xor
int
loope
movsl
arpl
cmp
mov
cmp
movsb
mov
xlat
jl
pop
jbe
dec
lds
or
mov
xor
loopne
test
pop
shlb
sti
mov
xchg
std
stos
enter
mov
jg
xlat
test
or
lret
call
pop
pop
sbb
sbb
cmovnp
jl
jnp
inc
adc
add
aad
shrl
fidivs
mov
fidivs
push
lcall
mov
inc
mov
cmpsl
dec
test
das
stc
jg
insb
and
mov
inc
add
push
int
popf
ds
dec
lahf
mov
int3
or
mov
imul
loopne
lret
fdiv
leave
fidivs
rclb
jo
out
xor
xor
in
test
adc
fistpl
shl
outsl
and
incl
insl
loopne
stc
inc
mov
std
test
ss
pop
jmp
inc
inc
sub
popf
sahf
aad
addr16
xchg
lods
fldcw
aas
shlb
xchg
jne
cltd
into
xor
adc
out
pop
mov
jmp
xor
xchg
jo
popa
mov
fistps
push
cmc
sub
scas
push
cmc
add
jmp
inc
xchg
repnz
push
inc
sub
cmpsb
repz
xchg
iret
aaa
les
xchg
inc
jge
lods
and
test
mov
sbb
int3
adc
xchg
shr
jmp
lahf
cld
cmp
popa
outsb
adc
mov
adc
jae
ficoml
cmpsl
cmc
aaa
in
or
ljmp
es
stc
jg
or
add
lret
mov
pop
movsl
fnsave
in
dec
or
iret
jg
sbb
sub
xchg
pop
gs
mov
mov
mov
mov
jno
or
lea
add
idivl
out
adc
das
std
movsb
fnstenv
push
and
cmp
cltd
mov
mov
in
mov
mov
movsl
pop
ljmp
mov
sub
sbb
jno
mov
iret
das
into
xchg
ret
orb
add
cmp
push
cs
ja
adc
sarl
fistpl
cmpsl
mov
fbld
ret
xchg
mov
ss
xchg
xchg
int3
mov
rorl
sbb
adc
pop
lea
mov
sub
sbb
adc
or
call
scas
mov
fcomps
nop
or
imul
aaa
lds
imul
aam
mov
ljmp
pop
jg
pop
pop
adc
test
in
hlt
mov
mov
dec
inc
mov
dec
xchg
dec
popa
dec
sbb
pop
push
push
jg
shll
jmp
sarb
dec
sub
jl
pop
out
sub
mov
push
je
lock
rcll
repnz
pop
in
cld
movsl
shrb
xor
add
add
xor
loope
les
xor
pop
or
pop
push
fwait
testl
adc
inc
fisubrl
xchg
inc
les
mov
std
rclb
pop
fmul
call
in
lret
repnz
push
sub
lock
lcall
repz
xchg
mov
jns
aam
pusha
stos
add
adc
arpl
and
cmp
aad
ljmp
fwait
adc
adc
call
in
jecxz
xor
add
out
mov
aam
leave
push
lcall
dec
push
fistpll
add
push
enter
adc
sbb
lods
cmp
xlat
pop
les
mov
leave
pop
xor
push
xor
lods
pop
mov
aam
dec
aaa
xchg
sbbb
scas
gs
jg
into
scas
xor
sti
jl
ficoms
push
fs
push
pop
bound
sbb
xor
adc
negb
lock
ret
clc
mov
scas
xor
insb
lds
in
aas
push
cmp
ja
cmp
roll
push
sbb
dec
int
lock
push
sub
lret
cmp
dec
fs
shr
mov
mov
xor
jmp
xor
addb
mov
jne
jo
jae
xor
or
add
or
imull
xchg
push
icebp
call
mov
les
push
enter
lret
cs
pop
cmc
in
insb
push
dec
test
mov
pop
mov
cli
add
lds
pop
dec
or
sar
movsl
ljmp
jge
cmpsb
push
add
std
stos
test
pop
push
scas
popf
sbb
mov
pop
enter
in
cld
mov
hlt
inc
xchg
push
sub
dec
dec
xchg
xor
pop
cmp
int3
pop
pushf
jl
inc
daa
cltd
out
ljmp
dec
je
rorb
cmp
xchg
shll
adc
or
icebp
dec
pop
scas
inc
xchg
dec
inc
inc
jp
test
outsl
lret
jl
movsl
hlt
insb
sub
inc
in
popf
nop
or
cmp
cmc
and
enter
cltd
push
xchg
aad
mov
mov
jle
xchg
xchg
and
mov
or
jns
xchg
test
ljmp
cld
pop
addb
dec
push
fstl
pcmpeqd
push
cmpsl
push
xchg
sub
push
mov
subl
and
mov
add
jmp
mov
lret
xchg
pusha
xor
out
jne
push
popf
out
fidivrl
lds
insb
adc
repz
fwait
mov
sbb
mov
cmpl
fldt
std
sbb
push
cmp
scas
or
loop
or
ret
pusha
xchg
fisubl
mov
fucomi
repnz
add
pop
jmp
inc
mov
and
loopne
push
dec
rorb
insl
xchg
xlat
negb
div
cmp
rorb
cmp
out
pop
test
hlt
xor
sbb
cmpl
push
movsl
out
incl
and
mov
aam
bound
pop
cld
in
in
cltd
add
ret
lcall
dec
les
data16
and
fmuls
and
insl
cltd
hlt
mov
repz
add
add
arpl
test
fidivs
out
push
int3
lcall
in
ret
ja
fimull
fwait
jg
mov
cwtl
pop
xor
add
lock
cmc
stos
jecxz
and
cli
push
xchg
in
inc
jo
mov
or
es
pop
ret
sbb
push
jge
and
mov
cmpsl
decl
pop
jns
mov
int3
fisubl
lods
icebp
insl
std
push
pop
mov
or
cmp
adc
mov
mov
pop
and
cmp
aam
mov
pop
pop
inc
adc
jns
div
jo
mov
call
sbb
lods
xchg
cmp
inc
and
and
mov
jne
sbb
fstpt
sti
int3
mov
stos
aam
ja
add
mov
test
mov
loope
fcomi
fidivs
xchg
mov
addr16
pop
jo
or
sbb
jnp
ja
imulb
lret
in
ljmp
jo
imul
sarl
or
or
nop
lock
int
add
xor
cmpsb
sbb
mov
inc
std
push
cmp
test
mov
popf
cmp
sbb
loope
hlt
sub
xor
dec
pop
in
inc
mov
jae
jmp
xor
gs
sub
scas
int3
pop
lods
mov
in
clc
aas
js
mov
pusha
jns
sbb
sbb
jecxz
outsl
fs
test
into
mov
adc
imul
xor
jae
rcrb
int3
jb
fsts
push
or
inc
dec
push
mov
dec
mov
fdivrs
pop
mov
or
pop
mov
stc
out
pop
lods
mov
dec
sbb
or
popa
lods
lods
and
and
mov
sub
push
adc
movsb
imul
and
fisttps
pop
push
scas
and
aam
add
aad
daa
aaa
jmp
insb
or
mov
lock
fildl
jne
adc
or
in
pop
insb
sbb
stos
sahf
into
call
sahf
mov
dec
call
xchg
inc
xchg
mov
sahf
pop
pop
inc
xor
cmp
iret
push
inc
cli
dec
call
dec
jae
es
push
std
ljmp
sub
push
insb
add
test
lahf
inc
fmull
imul
int3
push
xor
xchg
or
inc
xor
dec
add
mov
nop
pop
xchg
sub
jbe
mov
mov
je
cwtl
ficomps
add
movsl
or
popf
outsb
adc
rcrb
xor
and
fstpt
inc
fnstsw
in
push
or
loop
dec
les
aas
mov
loop
dec
orl
and
or
loope
adc
movsb
cmp
cmpsl
push
sub
mov
mov
fldcw
jge
and
mov
je
aaa
popf
push
lcall
jnp
cmp
add
inc
push
adc
test
idivb
rorb
divl
lods
ret
lock
adc
dec
stos
cwtl
dec
cmpsl
add
filds
push
hlt
inc
in
pop
push
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
fbstp
mov
xor
and
ds
addr16
sarb
or
add
or
imul
out
sahf
jle
lcall
add
jb
mov
imul
ljmp
inc
fs
aas
jmp
jnp
pop
lock
inc
jecxz
mov
vunpcklpd
mov
jge
sbb
mov
int
push
push
push
fnstsw
lock
test
mov
insb
les
scas
mov
jge
out
fistps
in
sbb
enter
mov
cmp
shr
call
xchg
fmuls
add
add
or
and
jb
dec
cmpl
std
rcll
ss
add
nop
imul
cmp
mov
popf
jecxz
arpl
jbe
shll
scas
xchg
shll
mov
add
imul
jbe
mov
jne
stos
int
push
inc
in
or
sbb
pop
stos
mov
mov
mov
xor
xor
mov
sahf
or
add
test
jp
mov
sub
cmp
push
push
xchg
jne
jecxz
pop
aaa
daa
ret
movsb
dec
dec
lods
aaa
xchg
push
push
jbe
xchg
int3
dec
push
sub
cmp
loopnew
add
scas
pop
into
add
shlb
mov
xor
xchg
adc
adc
int
mov
dec
imul
aaa
jle
lret
or
into
inc
mov
insb
pop
out
je
dec
cmp
pop
cwtl
out
dec
imul
jns
adc
cmp
sub
das
into
aad
mov
adc
test
repnz
jbe
incb
rcll
inc
popa
pop
sbb
xchg
ss
sbb
push
stc
pop
loope
fdivs
movsl
shll
lea
pushf
xor
dec
movsb
sub
lea
out
xchg
nop
mov
lods
int
push
lcall
dec
sub
and
or
cmpsl
sub
loopne
js
cli
xor
lret
add
pop
sarb
mov
pusha
inc
jl
adc
out
inc
mov
or
pop
add
jmp
lcall
test
push
mov
mov
xchg
or
mov
inc
cmp
dec
mov
dec
and
ljmp
popf
sarl
mov
sbbl
push
sbb
lods
int
sbb
shl
iret
adc
push
sbb
xor
and
out
xchg
daa
push
hlt
mov
ficoms
and
cli
sti
mov
sub
xchg
mov
xchg
jp
icebp
icebp
xchg
mov
in
mov
dec
loope
and
jne
jge
mov
push
dec
orl
ret
movsb
mov
pop
and
pop
cli
test
dec
xchg
jno
inc
mov
mov
mov
xlat
shll
es
or
aam
cmpsb
cld
xorb
int
xchg
xchg
xchg
and
cld
cmp
mov
addr16
std
or
mov
into
fisubrl
int
nop
loop
aad
mov
adc
add
gs
aas
fwait
push
push
test
and
es
mov
imul
in
outsb
cltd
aaa
int3
lret
loop
shr
cmp
pop
mov
test
inc
ret
push
das
decl
test
mov
xorl
rcrb
and
cltd
rcrl
add
mov
idivb
shrl
mov
sti
inc
hlt
jno
loop
dec
iret
addr16
sub
inc
xor
pop
enter
xor
jae
divl
xor
mov
inc
mov
mov
cmpsl
scas
cmp
ret
call
mov
ret
mov
js
jnp
mov
pop
pop
push
movsb
ja
pop
pop
loop
xor
mov
pop
mov
mov
jg
in
sub
iret
pop
and
pushf
dec
and
gs
xchg
push
clc
mov
pop
out
das
out
push
mov
jnp
push
les
add
sbb
xchg
cmp
sub
jne
pop
insb
xchg
sysret
into
jnp
loopne
sub
out
inc
ds
pop
sbb
mov
dec
inc
out
cwtl
add
cmc
add
push
add
inc
push
inc
subb
and
mov
scas
imul
loop
xlat
and
popf
or
rorb
flds
hlt
cmp
inc
ffree
adc
xor
sbb
and
scas
imul
sub
test
mov
cmp
sarl
loop
into
pop
clc
fdivr
jecxz
jg
test
push
in
cmp
fistpll
cmc
aad
test
gs
xor
imul
mov
jbe
jnp
push
in
or
lret
inc
insl
lret
inc
cs
mov
add
mov
hlt
int
cmpsb
mov
cmpsl
xchg
lret
rcrb
mov
dec
imull
add
bound
pop
scas
pop
lods
cmp
xchg
scas
and
loope
push
dec
imul
shlb
lret
dec
arpl
pop
sarl
cmp
mov
xchg
and
cld
push
add
rorb
ret
add
or
mov
jmp
pop
idiv
insb
push
addr16
clc
fiaddl
mov
add
or
iret
add
or
adc
ret
inc
xor
fcmove
add
test
rolb
mov
jb
pop
mov
imul
cmc
nop
decb
mov
or
movsl
hlt
cmpsb
std
js
push
jmp
stos
loope
shll
rcrl
push
test
inc
push
sub
jle
xor
fs
or
adc
mov
jl
push
lock
popf
fcomi
movsb
hlt
lret
mov
stos
xchg
dec
shl
cmpsl
dec
sbb
or
cmpsl
or
sbb
scas
push
dec
insl
cs
push
stc
imul
sub
fcmovbe
pop
mov
popa
stos
mov
ljmp
xchg
out
loopne
packuswb
push
xchg
rcrl
out
dec
pop
push
jmp
push
ret
mov
xchg
sub
sub
stos
sbb
addb
rclb
push
mov
neg
cmp
xor
dec
mov
sahf
jo
dec
in
in
add
jl
xchg
pop
xor
pop
in
imul
enter
arpl
cmc
and
or
insl
mov
jl
pusha
push
sub
mov
js
and
cmp
enter
sbbb
xor
mov
enter
lret
call
or
xchg
test
xlat
stc
xor
pop
mov
cmp
adc
pop
fsubs
and
jbe
lds
mov
ds
je
pop
sbb
sub
daa
insl
add
mov
loop
mov
mov
aam
lcall
mov
fcoml
xchg
pop
ret
jge
iret
mov
shlb
sbb
push
inc
inc
ret
lcall
mov
sarb
adc
lcall
pop
pop
cli
je
outsl
sahf
or
xor
sbb
add
mov
shlb
push
or
cmp
push
rolb
outsl
jl
mov
xor
and
cwtl
and
jae
push
std
inc
add
in
outsb
xor
je
js
nop
sub
or
cli
fcoml
jmp
and
stos
cmp
push
inc
add
xlat
sub
mov
popf
jp
pop
dec
xor
pop
or
das
and
xor
cld
pop
clc
cmp
dec
xor
ffreep
std
push
and
fstpl
jl
add
push
jp
jg
pop
and
daa
xchg
movsl
jnp
fwait
mov
xor
or
scas
outsl
rolb
adc
lret
cmp
mov
aam
cmp
cmpl
xor
inc
nop
repnz
sbb
outsl
xor
shlb
xchg
mov
fdivs
push
pop
push
dec
or
das
adc
int3
and
aas
ret
icebp
sub
xchg
or
or
popa
jp
rcl
pop
pop
adc
into
dec
xchg
mov
sbb
sbb
mov
fcoms
jno
pop
inc
push
adcl
xchg
insl
inc
int
add
cmp
xchg
push
jmp
dec
adc
cs
hlt
mov
pop
xchg
shrb
cmp
mov
or
out
fmuls
sub
jbe
fwait
mov
add
mov
aaa
sub
pop
cmp
jle
mov
pop
pop
fiaddl
or
pushf
cmp
fstp
popa
adc
bound
lcall
xchg
push
je
mov
cs
shr
mov
or
dec
ljmp
xor
fisubs
daa
scas
test
mov
cmc
inc
imul
enter
fistpl
vmovlpd
fs
fidivrs
mov
push
mov
test
popa
enter
push
push
mov
test
push
push
mov
mov
inc
out
cmp
push
pop
shl
xor
adc
mov
pop
fcmovnu
loopne
mov
das
stos
test
ret
cmp
leave
inc
sbb
sbb
mov
mov
xchg
aad
inc
jle
movsb
rol
je
mov
pop
inc
push
insl
adc
scas
jbe
push
jo
inc
imul
pop
cmp
cmp
in
std
jmp
mov
mov
pop
ja
inc
adc
fwait
inc
inc
test
adc
pushf
loopne
rcrb
push
xor
push
out
out
push
imul
jnp
xlat
scas
lock
mov
push
mull
adc
repz
lcall
pop
inc
mov
and
sbb
std
push
jmp
and
movsb
mov
lea
outsl
adc
sub
test
in
adc
mov
push
shll
in
aam
xchg
insl
es
xor
cmp
cmp
push
enter
sbbb
jo
insl
mul
sub
or
cmp
push
rcrl
jae
sbb
ret
daa
or
enter
add
mov
or
add
shl
mov
mov
jmp
or
pop
mov
dec
jne
orl
adc
or
add
or
fstps
sub
add
push
jg
pop
js
mov
outsb
inc
sbb
imul
inc
push
push
cmpsb
inc
cwtl
test
fwait
xchg
int3
adc
push
cwtl
cld
enter
sbb
sbb
rorl
lret
and
xchg
push
test
lcall
aas
scas
aaa
push
aam
or
loop
outsl
jae
and
orl
das
pop
insl
ret
dec
jle
and
inc
add
jno
and
shlb
mov
jmp
out
outsb
mov
pop
leave
movsl
dec
fnsave
sub
fisubrl
mov
lcall
or
int
outsl
lret
push
sbb
dec
ljmp
arpl
daa
mov
sub
adc
mov
dec
test
sti
ret
mov
jbe
push
repz
inc
cmp
pop
scas
cmp
movsb
stc
incl
pop
and
lret
push
scas
and
in
out
scas
inc
testb
or
cmpsb
std
movsl
push
sbb
fwait
gs
data16
sbb
in
xor
cmp
and
xchg
push
rcll
xchg
ror
xchg
and
mov
fs
and
add
aaa
cli
pusha
inc
pop
mov
adc
xor
cli
ljmp
xchg
out
xor
sbb
stos
push
out
aad
mov
cmp
out
repnz
cmpsl
out
sahf
stc
aas
notb
nop
gs
mov
pop
jne
cld
pop
in
and
and
jp
sub
dec
dec
jmp
js
pop
das
jmp
or
jl
ja
adc
xchg
cld
xor
adc
mov
xor
or
and
jno
inc
test
xor
mov
dec
dec
xchg
fisubl
mov
add
scas
into
mull
cwtl
lret
and
test
call
pop
cld
lcall
loopw
loopne
sub
xchg
xor
or
not
and
mov
lods
fdivrl
mov
hlt
pop
mov
push
push
aad
pop
sarl
rclb
out
dec
out
and
fidivrs
push
and
xchg
push
icebp
imul
adc
or
jno
into
xchg
mov
fistl
pop
mov
ficomps
pop
imul
repnz
js
inc
sbb
movsl
scas
ja
lock
stc
popf
int
jp
lcall
mov
and
mov
and
xor
jl
jl
inc
dec
or
mov
push
out
cmpsb
pop
rcrb
push
lock
inc
sub
cmp
aad
lock
in
sub
sti
lods
inc
outsb
push
aaa
andl
clc
rolb
mov
leave
jp
xor
pusha
pushf
fcompl
loopne
sub
jne
and
imul
and
cs
mov
icebp
xchg
loop
sahf
shrb
or
xchg
pop
ret
jmp
or
iret
dec
lds
leave
or
push
push
lahf
xor
push
mov
mov
mov
pop
push
lea
ljmp
pop
adc
int
out
mov
lahf
dec
dec
movsb
icebp
mov
ljmp
dec
sbb
or
jns
sbb
adc
data16
loopne
out
gs
mov
popa
outsb
sub
subl
bound
je
push
xchg
push
sub
test
pusha
filds
sub
and
jne
stos
mov
movsb
adc
xor
xor
xor
loop
call
loopne
xchg
jmp
enter
daa
fistpll
movsb
sub
dec
sbb
popf
mov
jl
sbb
or
inc
sbb
inc
inc
xor
push
inc
mov
dec
cmpsb
xrelease
je
add
jmp
xor
xchg
leave
adc
rcrl
add
cmpsl
adc
test
push
or
cmp
fisubs
dec
xchg
jns
repnz
rcl
bound
push
xlat
sti
mov
lret
jg
in
inc
ja
aam
pop
cltd
lret
outsb
sbb
test
repz
sub
inc
shr
sahf
scas
jae
repnz
inc
out
sub
or
cs
sbb
fdivl
stc
jo
orl
pop
and
and
mov
lea
cli
cmpsb
xor
mov
jg
fidivrs
mov
cmp
mov
xchg
ss
mov
sub
jle
not
popa
jne
test
push
xchg
das
adc
loope
hlt
jb
bound
insl
dec
imul
push
or
dec
testl
dec
lcall
push
xchg
sar
in
dec
xor
cmp
sub
jne
mov
into
push
in
rcrl
js
daa
bound
xchg
addb
frstor
test
fisubrl
ja
testl
aam
cmp
and
ljmp
mov
out
mov
lret
jo
test
je
adc
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
fbstp
xchg
scas
cmc
xor
addr16
or
iret
add
or
mov
xchg
jle
lret
dec
out
add
inc
add
pop
xchg
addl
das
jae
mov
ror
data16
sbb
mov
mov
xlat
xor
sahf
call
jle
ret
xchg
jbe
cmp
jp
sbb
cmp
xchg
push
inc
fstl
pusha
jg
cmp
sbb
ficoml
test
cmp
inc
gs
mov
pop
cmp
out
cmpsb
cmp
in
mov
jbe
dec
imul
cmp
fpatan
ljmp
repnz
ds
inc
lods
aam
mov
inc
cmpsl
dec
push
repz
cmp
jmp
mov
sub
iret
loopne
repz
mov
outsl
lcall
rcl
ss
ds
xor
arpl
sub
jecxz
stc
xchg
movsl
adc
push
sub
lock
jnp
push
cltd
outsl
lret
adc
mov
cltd
out
or
push
adc
in
sahf
fdivl
jne
jge
lock
cmpsb
sub
sub
cmpb
or
cmpsl
imul
jo
ficomps
or
cmp
sbb
or
repz
pusha
sbb
add
fimuls
je
test
pop
jnp
call
xchg
jmp
jb
js
dec
xchg
and
dec
push
in
outsb
fisubrl
inc
test
fs
jmp
mov
cmpsb
or
in
leave
inc
pop
cld
add
data16
sarl
inc
dec
pop
stos
out
mov
push
jmp
dec
lret
dec
decb
cmp
add
inc
cmp
dec
mov
or
xchg
lds
mov
mov
pop
sbbl
sub
lock
aad
or
ds
test
dec
sbb
cmc
iret
test
mov
es
insl
cmp
cmpsl
and
xor
into
mov
dec
adc
outsl
repz
pushf
in
in
xor
mov
dec
pop
cld
xchg
ret
adc
pushf
xlat
inc
or
sbb
lea
and
xchg
and
xor
les
lods
xor
push
pop
inc
and
out
ret
sbb
sbb
cmc
xor
sbb
add
lahf
not
xor
xor
pusha
xor
and
mov
push
jo
add
lea
sbb
xchg
subl
mov
cmpsb
ja
push
in
aam
pop
shll
mov
fistps
push
jb
fs
clc
pop
mov
out
std
push
jecxz
sahf
mov
arpl
xor
mov
cmp
cmp
sub
sub
jo
inc
pop
and
imul
enter
rorl
popa
jmp
add
dec
dec
out
mov
iret
aaa
or
in
movsb
add
mov
dec
xor
xchg
mov
sti
and
push
out
jl
lret
sbb
mov
dec
pop
imul
and
es
sub
shll
add
cmp
fcomi
xor
test
pushf
add
sbb
imull
sub
sbb
mov
inc
push
adc
stos
icebp
jp
push
mov
dec
mov
fwait
leave
push
mov
mov
inc
cmp
inc
ss
dec
outsb
insl
out
in
xchg
add
in
mov
in
lods
popa
xor
lcall
jecxz
adc
fsubrl
popa
xor
mov
mov
mov
cwtl
xor
mov
and
mov
inc
fsubrs
lea
shl
js
pop
in
jbe
arpl
insl
adcl
in
adc
clc
loopne
fildll
push
mov
js
out
xor
loop
xor
mov
stos
int3
scas
mul
imul
adc
pop
inc
popa
fisttpl
repz
push
jae
fcom
or
xchg
mov
mov
pop
cmp
jne
add
mov
ror
ret
cmpsb
pop
push
mov
jno
stos
cmp
daa
fisubl
sbb
mov
push
arpl
nop
daa
outsb
imul
test
data16
sub
cmp
adc
sub
jno
or
imul
add
jbe
sub
push
cwtl
xor
test
cmp
push
add
or
sub
cmp
js
jle
xor
pusha
mov
imul
dec
and
mov
mov
add
sub
shlb
or
cmp
cmp
repz
rolb
xchg
inc
pop
and
mov
cs
cmpsb
and
daa
inc
cltd
js
aam
xor
inc
jg
jp
xor
add
pop
sbb
xchg
inc
lock
mov
cli
push
push
out
jecxz
popl
xchg
ja
filds
aam
sbb
mov
sbb
cmpl
insb
lahf
scas
sub
sbb
loope
test
or
inc
in
xchg
xchg
neg
lods
nop
cmp
ret
sbb
xchg
in
stc
fisttpll
jo
xor
add
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
jmp
cmc
adc
jne
int
arpl
pop
add
iret
add
or
and
jle
pusha
scas
jmp
out
lahf
mov
jp
sub
adcl
pop
jecxz
out
sub
jp
xchg
and
fidivl
sbb
xor
ret
fisttpll
lods
xchg
push
mov
and
pushf
fidivs
jne
ret
xor
inc
inc
dec
xlat
sahf
mov
lods
popl
mov
ret
mov
pop
add
scas
out
scas
dec
ret
lds
insl
push
sub
mov
outsl
mov
pop
mov
lds
mov
push
call
out
pop
xchg
scas
sbb
leave
mov
std
and
shlb
adc
xor
inc
in
push
push
inc
in
xchg
jmp
cmp
repz
mov
push
inc
movsb
xchg
pop
frstor
sub
daa
adc
cmp
lcall
cmp
popf
aas
mov
out
cmp
movsb
mov
es
jmp
outsb
mov
xchg
xchg
std
ret
cs
and
sub
sbb
testb
fisubl
mov
jb
lods
inc
inc
arpl
sbb
mov
mov
pop
jmp
push
push
dec
mov
nop
out
push
das
xor
scas
mov
outsl
inc
sub
iret
test
mov
mov
mov
in
jecxz
mov
mov
jp
lret
sarl
lods
mov
fdivrs
jbe
push
cmp
stos
std
cmp
scas
jbe
aam
aad
aam
xchg
aam
add
movsb
lods
dec
xor
dec
push
and
es
aad
sub
add
sub
push
push
mov
imul
pop
cmp
insb
movsl
xchg
sahf
or
adc
or
pop
add
sub
insl
data16
repnz
sub
mov
outsb
inc
or
mov
or
movsb
pop
dec
add
xchg
mov
sti
leave
test
mov
lea
clc
and
sbb
dec
mov
sbb
js
jo
add
cwtl
int
push
inc
push
test
inc
out
lcall
dec
pop
lea
jae
sub
jno
call
ffreep
lods
sbb
xchg
aam
xchg
and
not
push
xchg
jl
mov
mov
jle
sahf
rcr
les
cmp
enter
lock
or
negl
mov
enter
xor
mov
sub
pop
and
mov
scas
sbb
stos
das
and
pop
mov
int3
int3
sub
lods
mov
test
xor
lods
xor
gs
xchg
inc
and
int3
popf
adc
loop
mov
insl
mov
xchg
inc
fdivrp
addb
pop
pusha
sbb
loop
pop
stc
jb
cmp
ret
int
mov
mov
rorl
cmp
sbb
fisttpl
jo
int
ljmp
lock
shrl
adc
repnz
call
mov
xchg
jb
add
insb
pop
call
push
pop
and
xchg
mov
push
aaa
popa
std
jno
stc
sbb
push
mov
pushf
inc
nop
shl
inc
jg
dec
and
ret
cmp
pop
xchg
jmp
xor
push
int
xchg
push
push
sbb
dec
lret
dec
inc
mov
out
shll
mov
cmp
mov
cs
js
xlat
jno
push
pop
inc
pop
fdivl
or
mov
mov
cltd
repnz
pushf
adc
ja
ret
pop
push
adc
decl
sahf
hlt
into
xor
push
cs
cmp
nop
jno
shl
fistpl
mov
mov
ljmp
in
pop
dec
outsb
mov
inc
push
add
or
mov
push
xor
leave
sbb
aas
sbbl
test
outsl
and
imul
int3
pop
fstpl
push
les
jnp
sbb
and
xor
jge
mov
ret
std
cmp
or
pop
enter
mov
push
aas
aad
mov
aad
mov
subl
sarb
call
inc
cmp
jmp
xchg
xor
pop
les
popl
icebp
test
push
cli
mov
push
stc
jl
aam
subl
fsubrp
pop
cmpsl
ror
out
shrl
xchg
dec
popf
out
add
jg
cltd
aas
mov
xchg
nop
push
dec
leave
adc
loopne
in
add
mov
fidivrl
inc
shlb
sbb
fidivs
and
insl
dec
xchg
imul
stos
mov
cmc
jae
lret
loope
sub
movsb
aaa
outsb
push
xor
and
jns
icebp
push
es
rclb
int
or
inc
cs
xchg
popa
sbb
mov
xchg
js
sub
loop
aaa
loop
cld
pop
arpl
lods
aam
mov
gs
shrb
jmp
mov
outsb
add
inc
xorl
ret
sbb
jo
loopne
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
jmp
cli
jae
xchg
test
fwait
adc
aad
push
sti
xorl
add
or
pop
out
pop
add
sbb
adc
jecxz
xchg
mov
mov
mov
add
push
push
jns
movsb
pop
cwtl
push
andl
rcl
cmp
mov
mov
lods
repnz
lods
inc
lods
ljmp
xchg
jns
imul
cmc
cmp
lock
add
xchg
pop
rcrl
mov
cmpsl
orl
into
cmp
aas
aas
sbb
pop
insl
push
std
addl
jae
sbb
xor
jae
or
cmc
lods
ss
cwtl
daa
aaa
std
mov
icebp
adc
pop
xor
inc
cmp
testl
jecxz
aas
stos
rorl
or
cld
mov
xchg
into
adc
out
aam
xlat
enter
lods
push
jno
insl
lahf
icebp
out
mov
orl
jne
pop
js
jg
sahf
inc
xor
fs
movsl
xchg
jne
push
cmp
leave
jns
sub
leave
xchg
cltd
and
push
xor
paddw
in
in
mov
icebp
and
insb
jp
bound
cmpsl
shll
mov
xchg
jge
adc
cmpsl
push
sarl
test
fdivrs
xchg
mov
filds
fsubrs
and
stos
jge
add
in
push
jl
dec
cltd
in
mov
sub
sub
xabort
shrl
xchg
pop
sbb
xchg
push
inc
jae
ds
iret
out
jmp
out
xchg
jmp
pop
pop
jg
jns
and
xchg
jae
jns
addl
and
rcr
jmp
xchg
inc
leave
mov
inc
cltd
je
lea
xchg
das
inc
xor
adc
xchg
pop
mov
imul
push
outsl
fdivs
push
mov
insb
mov
and
pushf
fisttps
test
sub
lret
jp
sbb
mov
lahf
mov
add
sbb
mov
mov
pop
call
daa
int
xchg
shll
xor
lea
lcall
pusha
cmp
fcoms
imul
out
into
mov
jo
das
imul
push
mov
adc
add
jno
pop
aas
inc
in
out
test
jb
mov
mov
stc
pop
and
in
mov
inc
aam
pop
shrb
aaa
dec
lahf
mov
jl
sub
mov
mov
add
mov
shrb
xchg
cmp
inc
push
jne
jle
dec
iret
jno
outsb
rsqrtps
in
sbb
mov
mov
ljmp
sub
sahf
dec
pop
cltd
mov
int
data16
movsb
lods
rcr
add
jne
hlt
rcrl
mov
xor
add
xchg
pop
adc
ret
out
sbb
adc
pop
jb
cmp
jp
adc
int
pcmpeqw
inc
ja
push
jmp
jb,pt
les
test
sbb
movsl
insl
es
stos
gs
imul
xchg
jge
sbb
out
xor
or
and
daa
sub
jo
push
xlat
mov
addl
xor
push
cmpsb
xchg
and
lea
cli
iret
sbbb
inc
leave
adc
out
push
leave
sbb
mov
adc
fidivrs
jecxz
jge
jp
nop
jle
in
xchg
jp
cmc
and
call
jecxz
sti
lock
insl
aas
dec
jns
pusha
sub
and
mov
xchg
jb
in
dec
js
push
push
xchg
js
pop
repnz
or
mov
loope
outsb
add
mov
sbb
cmp
mov
fldt
mov
sub
mov
out
scas
or
pop
xor
jns
into
leave
lret
cld
jb
jp
push
clc
gs
daa
das
popf
testl
adc
add
jae
sub
push
xchg
sbb
cmp
inc
push
add
jne
sub
stos
mov
in
adc
sub
scas
outsb
iret
test
inc
cli
sub
mov
repz
add
push
xchg
movsl
inc
dec
sub
cmp
push
out
add
add
subb
scas
pop
int
lret
popa
or
test
cmp
repnz
or
and
jle
mov
or
fdivrs
xchg
iret
mov
and
mov
outsb
jne
ds
data16
lea
mov
cmc
out
xor
lahf
xchg
dec
jns
testb
jl
mov
mov
pop
in
add
push
outsb
pop
sti
adc
mov
pop
xchg
inc
into
fisttpll
int
xor
sub
mov
add
es
push
pop
cmp
rolb
adc
test
in
pop
inc
sti
sub
mov
or
dec
lods
ret
push
dec
pop
jge
xchg
add
or
cltd
mov
js
stos
outsl
lds
push
clc
xchg
xchg
push
sbb
lods
pop
cs
aas
in
jle
xchg
cltd
insb
je
mov
jns
adc
push
inc
push
push
lret
mov
cld
shlb
leave
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
adc
dec
aas
cmp
mov
clc
cmp
iret
add
or
add
inc
sbb
pop
pop
mov
mov
jo
cli
mov
xchg
xchg
cmp
sbb
incb
rcr
adc
mov
xchg
imul
stos
push
stc
lcall
cmp
xor
inc
lret
out
jg
mov
ficoms
or
mov
cmp
mov
int3
pop
out
icebp
push
pop
add
inc
iret
jecxz
ss
mov
xchg
stc
mov
pop
mov
fidivrl
idivl
push
addl
and
cli
push
test
pop
xchg
mov
push
ds
aam
cmp
pop
mov
minps
xor
test
add
jle
adc
xor
sbb
cs
lcall
lcall
lahf
sbbb
js
test
mov
dec
inc
mov
adc
cltd
cmp
pop
xchg
shrl
pushf
cmc
mov
out
out
testl
iret
xchg
clc
loope
adc
in
or
sbb
or
inc
test
out
and
mov
adc
dec
jmp
pop
stc
lcall
rorb
je
dec
sbb
ss
test
out
fistpl
lods
adcb
stos
sub
scas
jns
add
or
and
cld
jp
xor
adc
jno
in
pop
xor
out
lea
arpl
cmpsb
jp
and
cwtl
outsl
test
cmpsl
sbb
fldl2t
lahf
test
push
lds
jne
int3
insl
in
fstl
sub
rcr
js,pt
sbb
mov
cmovb
cmc
mov
xor
add
aaa
popf
or
int3
xchg
pop
sub
in
mov
aad
shlb
jge
fimuls
imul
mov
xchg
push
cmp
push
imul
inc
jmp
ret
lea
jl
das
pushf
int3
sti
cmp
mov
aaa
mov
cmp
fbld
scas
add
mov
mov
das
int3
pop
imul
sti
sbb
popa
xor
xchg
cs
inc
dec
xchg
or
push
lods
es
xchg
cs
sbb
push
xchg
pop
mov
sbb
rol
fcmovnb
cmc
jno
inc
lahf
adc
scas
scas
mov
ja
clc
xchg
mov
inc
jns
jecxz
add
cmpsl
and
cltd
xor
mov
or
cmpsl
rorb
sub
push
repz
xchg
int
mov
pop
mov
stc
inc
mov
push
stos
mov
pop
gs
push
inc
shl
ficoms
lock
jl
fisubrl
pushf
je
jae
xor
pop
mov
or
mull
or
fdiv
lds
or
cmpsl
stc
fcompl
out
jno
adc
mov
pusha
scas
mov
fs
mov
xchg
lods
and
cmp
push
and
out
mov
sbbl
push
fbld
mov
cmp
cmp
dec
test
add
neg
cld
pop
adc
push
jno
ljmp
into
jns
in
rorb
pop
or
gs
mov
test
inc
add
arpl
mov
and
pushf
jge
push
mov
jno
mov
in
sbb
adc
pop
test
jle
gs
test
loope
in
test
mov
lret
mov
inc
jns
cmp
aad
std
cwtl
and
imul
cmp
negb
je
bound
and
xor
lcall
imul
shl
scas
jmp
sub
cmp
xlat
testl
shll
mov
stos
push
mul
lcall
sbb
rolb
fsubrl
test
mov
jecxz
mov
out
jge
and
mov
sbb
lods
sbb
jb
sbb
sub
jle
jns
jo
push
jmp
out
dec
outsb
xchg
das
or
pop
dec
push
jmp
adc
inc
shll
xchg
pop
in
or
xchg
addr16
bound
push
pop
mov
jb
pop
aaa
cwtl
or
inc
xchg
xor
xor
xchg
mov
mov
daa
pop
mov
or
push
push
sahf
test
and
leave
aaa
jecxz
cmpsb
sbb
repz
jbe
imul
lcall
mov
push
lea
movsl
dec
push
mov
jae
ret
fnstenv
inc
ret
pop
sti
popf
aaa
decl
fcmovb
sbb
mov
scas
cmp
cmp
aas
addb
push
ret
mov
fstl
jecxz
dec
or
add
scas
lods
mov
adc
xor
ss
jp
stos
loopne
adc
ds
xor
movlps
and
lods
add
out
xchg
iret
shrl
fmull
je
pop
mov
daa
mov
mov
adc
mov
or
popf
push
bound
xchg
fimuls
mov
aaa
push
adc
mov
mov
inc
insb
cli
adc
ds
sub
sub
cld
cmp
inc
ror
or
push
sbb
rcl
mov
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
es
bound
and
aas
mov
outsl
cmpsl
fmull
or
add
or
pop
mov
scas
cli
iret
imul
stos
push
cmc
sbb
aaa
clc
sub
lods
xchg
pop
lock
out
lods
or
icebp
xor
push
cli
into
pop
rcrl
xchg
sub
or
cmpsl
push
pop
adc
adc
daa
and
out
out
notl
mov
mov
aad
ljmp
jo
adc
lods
push
cmp
rcr
int
or
fwait
jl
and
xor
sbb
add
adc
jmp
into
push
xchg
inc
test
pusha
dec
jb
icebp
mov
jb
xchg
pop
adc
push
cmpsl
xchg
push
mov
or
popf
jbe
add
les
daa
or
ljmp
repnz
out
xor
inc
ret
andl
repz
ss
dec
ja
ret
faddl
out
or
mov
sbb
jl
sbb
add
out
mov
cmp
mov
int
movsb
mov
aad
cltd
mov
sub
popa
ret
inc
insl
ret
sbb
stc
pop
divl
pop
xchg
loope
testb
or
rorb
cmp
sbb
jg
mov
loop
sbb
cltd
and
cmovo
cld
shlb
cmp
jno
xchg
dec
lahf
aas
not
shl
les
jmp
mov
pop
in
jl
ss
adc
mov
jb
je
xor
jl
push
subl
test
add
in
fmuls
mov
lods
mov
pop
add
sahf
loop
lcall
mov
push
aam
jmp
out
int
stc
push
add
jbe
imul
mov
test
dec
pop
jg
push
jo
arpl
jecxz
add
mov
xlat
adc
push
dec
mov
outsl
and
push
aaa
stos
or
dec
mov
in
mulb
dec
lods
cmp
sbb
dec
aam
add
pushf
pop
sub
mov
jg
dec
std
jl
mov
adc
js
int3
xchg
push
adc
arpl
jo
xlat
push
pop
pop
in
sub
insl
cwtl
xchg
lahf
xor
fndisi(8087
sbb
xchg
adc
repz
popf
inc
adc
xlat
add
adc
movsb
jge
stc
mov
in
and
fcomps
dec
in
adc
xchg
mov
pop
mov
frstor
pop
inc
sbb
shrd
lahf
or
adc
fdivr
scas
xchg
idivl
lahf
push
push
pop
lret
lods
loop
pushf
xchg
mov
shll
popf
in
outsb
sbb
adc
inc
and
push
ret
cmpsl
out
mov
mull
jnp
iret
sarl
dec
sbb
adc
repz
repz
push
mov
jns
mov
mov
popa
cmpsb
or
push
psraw
xor
aaa
xchg
mov
nop
and
bound
xchg
pop
out
sub
xchg
push
sub
cs
mov
lods
jo
test
fcmovne
ret
imul
flds
fadd
shl
push
and
inc
mov
jns
sub
and
push
fdivrl
sbb
sbb
stos
pop
inc
cmp
addr16
mov
aam
lods
pop
mov
addr16
icebp
leave
outsl
sub
and
rorb
test
cmp
pushf
jmp
movsl
pop
es
pusha
sub
fcomi
gs
pop
mov
js
jle
pop
test
lods
mov
sbb
imul
movsb
dec
outsl
sub
insb
jno
jmp
les
jbe
cltd
jae
add
xor
cmc
mov
repnz
gs
mov
fstpt
test
and
lahf
push
pop
mov
imul
xchg
jne
lock
loope
pop
shll
aaa
mov
fmull
pop
mov
in
imul
sahf
jmp
lret
push
or
call
lods
fadds
push
loope
xchg
pop
cwtl
cs
push
les
test
out
test
and
int
xchg
pop
dec
insl
pop
and
sbb
dec
iret
mov
stos
push
fldenv
addb
lods
sbb
push
add
lea
mov
lods
pop
cltd
call
xlat
pop
aas
iret
outsl
bound
sub
push
mov
sbb
xchg
or
sub
or
rcr
jg
mov
mov
testl
mov
sbb
std
dec
ret
adc
andb
sbb
inc
pushfw
js
cmpsb
mov
aam
cmp
cld
lds
xchg
inc
sbb
cmp
movsb
push
arpl
sub
xor
inc
int3
dec
sub
rcrb
jmp
cmp
lods
das
jg
movsl
hlt
jb
jmp
cwtl
clc
shll
ljmp
mov
ret
xor
mov
je
cwtl
enter
sub
add
shl
es
repnz
bndldx
insb
scas
dec
adc
add
je
adc
cmp
fdivl
or
cld
jne
popa
mov
mov
aad
popf
arpl
loop
ljmp
mov
dec
pop
sbb
sbb
xchg
cmp
fbstp
leave
or
mov
jmp
test
sbb
mov
mov
imul
iret
add
or
aaa
mov
push
add
ds
ja
jle
loopne
jb
mov
out
jl
xchg
inc
add
or
sti
xchg
fmull
inc
pop
mov
jg
jg
mov
cmp
popf
pxor
lods
loope
push
cmp
cmp
loop
sbb
adc
mov
push
mov
jmp
pop
mov
mov
and
in
adc
mov
cli
pushl
or
fcoml
push
fdivrs
das
or
sbb
mov
push
dec
test
subl
mov
pop
pop
inc
mov
xchg
xchg
ss
out
mov
lods
arpl
in
push
loopne
cld
or
and
and
stc
xchg
cli
imul
mov
push
cs
ret
add
or
iret
jno
inc
adc
movsl
cmp
xchg
xor
rcrb
sub
mov
cmpsl
push
add
inc
inc
adc
mov
dec
adc
cmp
stos
sti
imul
andl
jmp
push
sbb
xor
jae
iret
and
cmp
dec
xor
cli
add
and
mov
sub
loopne
jnp
mov
call
mov
xor
sbb
push
das
and
push
enter
add
ds
shrl
mov
and
and
out
push
sub
or
icebp
pop
mov
fisttps
repz
sahf
sbb
jge
dec
push
insb
dec
sub
dec
mov
testb
pop
das
sub
and
clc
inc
repnz
out
int
lock
pop
cli
add
int3
andb
mov
bswap
imul
adc
sbb
lods
jg
div
push
push
outsb
sub
xchg
test
inc
jle
lods
fchs
in
fisubl
imul
call
push
orl
xchg
inc
and
xchg
fstl
movsl
in
popa
repnz
pop
jmp
or
jecxz
shufps
stc
pop
cmp
xchg
stos
inc
sbb
add
mov
insb
mov
mov
cmp
push
mov
int
inc
stos
iret
stos
sbbl
inc
mov
push
lea
inc
outsb
inc
leave
jp
xor
mov
repz
fstl
mov
pop
pop
sub
es
ds
mov
mov
push
clc
mov
stos
xchg
enter
add
inc
repnz
out
push
stc
xchg
lahf
mov
add
adc
das
dec
frstor
sar
push
sbb
in
cmpsl
inc
fwait
push
les
mov
or
icebp
outsb
shl
fmull
call
sti
sub
inc
scas
push
pop
lds
xchg
add
xlat
pop
mov
scas
sti
ja
mov
add
in
pusha
sbb
out
ja
push
mov
jmp
fucomi
xor
mov
pop
decl
outsl
mov
xor
mov
adc
shr
xchg
mov
std
adc
insb
jno
mov
pop
out
aam
imul
add
dec
cmpsb
daa
jo
loop
dec
fisubrs
sahf
idivb
leave
gs
mov
cmpsl
out
push
and
loope
addr16
lds
fimuls
pop
cmp
xchg
lret
jb
fbld
and
push
out
add
js
lcall
js
arpl
scas
pop
ret
mov
dec
fdivl
pushf
jo
ret
jle
and
les
push
cmp
int3
movsb
je
jne
je
mov
lds
dec
fwait
pop
mov
mov
popa
add
jb
cmpsb
js
pushf
xchg
aas
fwait
sub
sahf
aad
or
adcb
mov
xchg
adc
leave
fstpt
xor
das
mov
add
sbb
lods
loope
mov
pop
xlat
stos
aas
out
and
adc
in
or
xchg
jbe
sahf
jno
jnp
or
or
scas
mov
xor
test
cmpsl
ss
mov
cld
mov
cmp
and
add
mov
movsl
dec
or
orps
scas
fbstp
and
or
push
sub
mov
pop
lret
cmp
adc
mov
sbb
mov
rcll
fisubl
jo
and
dec
imul
mov
cmp
mov
cli
inc
sub
and
popf
testb
out
pop
mov
inc
push
fsub
xor
or
shll
mulb
dec
scas
push
or
xor
nop
push
test
inc
std
pop
dec
mov
dec
rolb
leave
fdivrl
pusha
fistpll
out
adcl
icebp
dec
rcl
scas
xlat
sbb
sbb
xor
pop
mov
div
cltd
repnz
vpunpcklwd
jl
xor
xchg
iret
mov
sbbb
pop
xor
repnz
outsl
jg
in
cmp
cmpsl
ds
mov
mov
inc
sbbb
andl
sub
mov
mov
inc
popw
add
stc
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
jmp
popa
das
xchg
inc
xchg
aaa
push
das
pusha
dec
pop
addr16
les
mov
les
or
fdivrl
push
xor
mov
popf
out
or
in
shlb
add
xor
stos
nop
std
push
hlt
mov
lcall
dec
and
xchg
adc
cmp
inc
out
ds
stos
sub
fsts
sbb
push
lods
sarb
mov
or
mov
and
or
adc
mov
push
shlb
mov
ds
mov
push
enter
dec
into
mov
test
cli
sarl
dec
cmpl
xor
fstps
repnz
ret
or
psllw
ret
enter
dec
je
inc
stc
outsl
cmc
and
push
cmp
add
pop
pop
loop
and
add
xor
adc
ret
xchg
mov
adcb
push
jecxz
je
into
int
imul
xlat
inc
cmp
cmpsl
cli
pop
mov
xchg
cmpsb
fidivl
in
pusha
xchg
pop
xor
add
jmp
or
jo
lock
mov
pop
pusha
mov
popf
mov
out
jle
jbe
sub
lea
add
mov
sub
mov
add
add
cmpsb
mov
add
jno
pushf
mov
fwait
dec
sbbl
daa
stc
cmp
sbb
outsb
enter
xchg
int3
xor
ret
mov
lahf
cwtl
icebp
lds
arpl
insb
add
mov
fcomps
mov
pop
and
dec
mov
loop
push
xor
sar
aas
pop
jl
sahf
sbb
adc
scas
imul
or
rcll
cmp
cmp
inc
xchg
insb
dec
insb
hlt
push
movsl
jecxz
aas
pop
addr16
fcomi
ficoms
mov
jns
imul
sbb
fsubrs
rcr
or
sbb
popa
lahf
cmp
outsl
arpl
data16
adc
cld
add
pop
jg
pusha
fistps
mov
call
inc
xor
popf
fsubs
int3
mov
sub
push
out
push
mov
gs
adc
inc
in
or
in
xchg
jno
push
stos
cmp
aad
xor
les
add
leave
or
sub
lods
bound
out
out
mov
dec
hlt
jp
dec
jle
popf
or
cmp
sbb
aam
negb
stos
out
int
dec
out
xchg
out
push
test
lcall
adc
adc
andl
scas
aad
dec
xchg
or
lds
jnp
pushf
in
imul
sbb
jmp
and
insb
xchg
push
jmp
cmp
pushf
in
aaa
fs
out
push
lcall
lds
sub
iret
lods
xor
leave
add
test
push
arpl
loop
int3
xor
sub
js
cmpsb
out
inc
mov
lock
insl
lods
mov
adc
push
mov
inc
jge
ja
push
mov
push
ret
cmpb
icebp
enter
ret
call
inc
lods
and
frstor
xchg
lret
ficoml
xchg
ja
out
test
jo
mov
push
faddl
ss
pop
add
push
cwtl
out
loop
lock
divb
xor
add
push
push
push
hlt
fidivrs
call
jns
in
sub
dec
clc
aam
cmpsb
and
jno
int
mov
push
push
pop
sbb
int
inc
popa
cld
lret
jnp
pop
mov
in
rorb
adc
cmpsb
add
sub
and
mov
adc
data16
jno
scas
xor
push
icebp
push
insb
scas
hlt
cmp
fildl
jb
xor
addl
jo
cmpsb
dec
test
and
jbe
fldt
sbb
clc
sub
push
adcl
mov
clc
sbb
dec
fnsave
cmp
jl
outsb
lock
outsl
sub
insl
push
and
or
in
pop
fdivrl
lea
in
cli
pop
xor
testb
sub
cmp
dec
push
or
or
dec
and
out
fwait
pop
adc
dec
mov
inc
in
pop
icebp
imul
lods
pop
adc
aaa
test
sbb
test
pushl
movsb
sub
mov
or
loopne
cwtl
pop
out
sbb
and
out
enter
jae
movl
cmp
movl
jae
andl
shrd
movl
shr
ret
subl
mov
xor
and
shr
ret
jmp
aam
in
xchg
push
adc
hlt
popa
mov
dec
jne
mov
or
fisttps
cmp
add
clc
arpl
mov
jo
mov
inc
jecxz
and
push
in
push
andl
push
int3
cld
nop
outsl
popa
enter
scas
push
lahf
push
mov
rcll
in
shrb
or
xchg
loop
or
or
xor
xchg
or
push
or
mov
repnz
mov
sub
mov
xchg
cwtl
push
repz
flds
lods
fldenv
sub
or
xchg
addb
gs
bound
data16
sub
dec
pop
mov
mov
dec
adc
push
or
xor
adc
into
and
push
testl
imul
fdivs
inc
js
adc
pop
out
mov
pop
icebp
xchg
adc
andb
bound
inc
mov
mov
sarl
jmp
in
test
rcrl
imul
adc
faddp
pop
xchg
mov
mov
sbb
push
ss
cmpsl
das
adc
add
push
fidivl
or
mov
or
wrmsr
dec
mov
mov
pop
lea
je
push
jecxz
mov
ret
cmp
sahf
fimull
lea
movsl
lret
and
call
adc
test
sbb
ljmp
push
or
loope
out
lods
xchg
daa
push
aaa
clc
sahf
mov
push
pop
in
cli
cmc
std
in
cmp
adc
dec
and
xchg
cmpl
leave
cwtl
fucomp
xor
loope
sub
xchg
sbb
mov
bnd
sahf
fadds
into
fadds
movsl
cmpsl
ds
fldt
arpl
call
btr
es
stos
ljmp
mov
gs
fnsave
mov
repnz
cmp
std
xor
in
sbb
xchg
adc
sbb
arpl
dec
or
pop
aam
sub
jmp
and
xor
rcll
or
sbb
fwait
inc
push
mov
gs
pop
add
movsl
fwait
test
adc
mov
cmpsl
pop
jb
inc
aaa
lahf
push
lret
jl
lea
pop
outsl
xor
je
sbb
out
dec
mull
aaa
ret
jbe
fnstsw
fsubp
sbb
add
push
daa
mov
addr16
aaa
fucomip
call
dec
dec
lods
dec
and
repnz
push
xchg
pop
arpl
ljmp
jmp
rolb
in
sub
adc
imull
fidivs
cmp
cwtl
nop
andb
push
pop
xchg
dec
data16
sub
rcrb
inc
test
mov
add
shlb
loop
stc
imul
ja
or
out
psrad
mov
loop
xor
ds
or
push
ret
or
dec
out
xor
cli
sbb
jno
push
ror
jb
ljmp
mov
xor
les
sbb
push
aaa
hlt
pop
out
adc
cs
pop
sbb
cmp
xchg
ss
dec
mov
lret
or
daa
cmp
xor
jmp
movsl
dec
jns
mov
sub
lock
dec
and
and
out
orb
pop
dec
lret
popf
pop
jg
adc
inc
or
push
mov
mov
jecxz
in
cmp
push
ja
mov
rol
dec
stos
popa
repz
sub
mov
repz
mov
fimuls
xchg
mov
adc
sub
mov
test
sbb
lds
sarb
hlt
push
push
add
xlat
jne
mov
add
repnz
sbb
cmp
insb
mov
mov
repz
add
clc
cmp
add
shrb
adc
popf
dec
jle
mov
dec
jne
mov
out
mov
add
push
fidivs
xor
xchg
outsl
movsl
in
adc
and
js
mov
inc
or
rcll
adcb
stos
cmc
pop
push
in
adc
pop
sub
jle
fildl
mov
jnp
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
mov
movl
jl
push
call
orl
xorl
add
sub
movzbl
sub
mov
sbbl
movl
mov
mov
jmp
lret
xchg
stos
ds
xor
jge
pop
jge
mov
mov
or
add
or
out
pop
aad
pop
aad
xchg
cld
dec
xchg
sub
shrb
pop
shll
adc
sahf
out
jecxz
movsb
push
dec
lcall
sub
add
sub
cli
dec
scas
rolb
cmpsl
incl
js
out
add
pop
push
bound
jecxz
js
pop
ret
cmp
pop
fwait
adc
sar
test
adc
sub
das
and
movl
sub
jmp
inc
mov
inc
jmp
sub
add
dec
bound
mov
iret
adc
test
mov
mov
cmp
mov
mov
lahf
dec
mov
aaa
xchg
aas
inc
aas
cmpsb
pushf
adc
ret
imul
xchg
loop
ficoml
mov
pop
jge
nop
in
mov
out
lcall
test
repnz
imul
enter
movsb
push
add
add
rcrb
test
and
push
out
pop
rorb
in
idivb
jne
push
aaa
jp
ja
inc
cli
out
xor
push
cmp
js
fs
mov
cld
fmull
jnp
ja
push
inc
cmp
dec
xor
xchg
int3
nop
pop
mov
lcall
or
fincstp
sti
add
mov
adc
adc
dec
pop
pop
dec
ret
out
cwtl
int3
xlat
mov
cmc
pop
or
sbb
daa
sbb
sub
pop
std
test
adc
test
ficoms
add
inc
adc
popa
shll
xchg
jb
add
shlb
addr16
lds
aad
and
or
fisttpll
mov
rcl
push
into
or
xchg
sbb
pop
mov
cmpsl
inc
or
mov
push
test
push
aad
and
imul
push
add
jb
xchg
imulb
popf
aas
faddl
sub
mov
xor
push
or
in
fwait
and
add
xchg
xchg
ret
adc
lret
dec
cmp
dec
nop
rorl
aam
mov
lods
pop
into
mov
shlb
aas
ljmp
or
mov
inc
clc
test
fprem
push
fisttps
imulb
jnp
orb
cmp
mov
or
pop
repnz
dec
jnp
in
call
ja
jge
insl
push
add
ja
adc
mov
push
sub
or
lock
dec
xor
scas
dec
mov
adc
push
loop
mov
arpl
inc
sti
xchg
in
dec
sbb
add
mov
mov
int
icebp
sub
shrl
ret
add
or
dec
adc
jmp
testb
or
pop
jbe
popa
mov
push
fmul
xchg
test
dec
add
les
shl
subb
dec
insl
cmp
xchg
mov
pop
in
pop
sub
into
sbb
jno
jmp
inc
sarb
sub
and
fs
mov
jb
and
push
fwait
mov
cld
sbb
xorb
leave
inc
jno
sbb
aas
sub
mov
xchg
in
mov
push
dec
leave
sub
ja
or
jle
bound
sub
lods
pop
push
roll
nop
pop
dec
hlt
js
inc
daa
xchg
stos
add
and
mov
ficomps
in
rcrl
xchg
fwait
daa
and
loop
jb
mov
loopne
fnstenv
sbb
enter
or
sub
fisubrl
cwtl
adc
call
sbb
jo
mov
lock
stos
push
cmp
rolb
enter
aaa
enter
icebp
data16
aaa
inc
iret
mov
insl
pop
pop
pop
mov
aaa
insb
or
in
dec
jno
pop
and
cmp
sub
mov
sub
and
xchg
lcall
add
add
dec
mov
dec
add
or
pushf
inc
jb
xchg
shll
es
fiaddl
les
outsb
lock
ds
jnp
xchg
insb
sbb
and
imul
cmp
adc
pop
rclb
ret
shlb
mov
inc
add
mov
mov
movzbl
jmp
movl
jae
pushl
push
pushl
pushl
call
xor
add
mov
sub
sub
sub
and
andl
adc
sub
adc
mov
adc
movl
cmpl
mov
mov
jmp
mov
jl
pushl
push
pushl
push
call
add
mov
mov
sub
add
or
sub
or
movzbl
or
movl
cmpl
mov
movl
movl
jmp
mov
jb
call
inc
and
mov
sub
mov
or
xor
add
adc
movl
adc
movl
or
movl
and
movl
mov
and
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
push
pushl
call
mov
and
sub
inc
xor
adc
movl
mov
sub
mov
mov
sub
push
notl
mov
mov
sbb
mov
mov
push
push
adcl
push
sbbl
push
call
cmpl
movl
mov
jmp
notl
jbe
push
push
push
call
movl
movl
andl
incl
mov
and
xor
xor
mov
sub
add
mov
mov
xor
adcl
and
cmpl
mov
movl
mov
mov
jmp
movl
jb
pushl
call
sbbl
negl
orl
adc
movzbl
sub
xor
and
movzwl
add
and
or
mov
cmpl
movl
mov
jmp
movl
mov
je
call
xor
xor
xor
or
sub
add
xor
neg
addl
sub
adcl
and
andl
mov
adc
movl
cmpl
mov
not
movl
jmp
mov
jbe
push
call
xor
xor
xor
xor
orl
notl
xor
movl
movl
movl
mov
mov
jmp
ja
sub
pop
push
pop
inc
push
test
xorl
in
daa
in
outsb
mov
les
popa
mov
jmp
popa
mov
mov
mov
int3
rcr
lcall
cmp
mov
pop
inc
add
pop
loope
loopne
shrl
add
mov
sti
sub
adc
mov
jno
add
pop
in
sbb
sbb
inc
adc
cmp
inc
dec
mov
test
testb
repz
pop
gs
cli
cmpsl
sub
adc
mov
jle
aas
fisttpll
scas
mov
into
push
jns
mov
mov
in
mov
or
pop
pushf
je
xchg
push
loop
out
jge
inc
cmpsl
out
adc
cmp
push
inc
test
pusha
ss
cmp
and
xor
mov
orl
push
in
mov
icebp
pop
in
sbb
dec
dec
mov
ljmp
in
test
fincstp
lea
cwtl
js
in
lahf
mov
shl
test
xchg
lea
test
jg
leave
loope
and
ja
adc
fdivs
pop
jae
adc
aaa
repnz
fnstcw
push
in
call
dec
push
mov
dec
jge
je
insb
shll
dec
and
push
lods
dec
inc
movl
test
popa
xlat
cs
arpl
xchg
out
adc
push
aas
dec
and
dec
inc
insl
cmp
xor
xchg
push
adc
jae
push
fdivrs
jne
sub
jne
int3
es
shlb
xchg
imul
je
rclb
loop
notl
pop
call
jecxz
or
push
jle
fs
outsb
mov
pop
inc
ror
push
test
in
and
mov
xchg
push
lods
push
mov
cmp
mov
icebp
pop
vcvtdq2ps
out
or
lcall
es
in
data16
jl
mov
cmc
cmpsl
or
es
or
sub
dec
jns
sarl
lret
or
jge
mov
fwait
sub
pop
pop
jp
push
dec
xchg
adc
sbb
dec
in
dec
int3
sbb
mov
mov
cmc
jb
xor
shlb
enter
pop
mov
fiaddl
clc
gs
pop
imul
lret
movsb
mov
mov
jmp
mov
push
outsl
mov
andps
arpl
stos
fwait
inc
adc
negl
movsl
sti
mov
movsl
cmp
sub
outsl
and
mov
jle
cs
cli
adc
xor
aam
cmc
enter
into
mov
push
lds
subb
int
mov
test
shrb
sub
icebp
sbb
add
xchg
js
jae
xchg
fisubs
mov
mov
or
sub
leave
outsl
mov
enter
stos
fwait
das
int
jnp
push
cmp
add
mov
jae
sub
jo
fisttpll
push
mov
int
bound
scas
pop
out
mov
push
inc
outsw
cmc
cmp
je
push
sub
sarl
cmpsb
movsl
pop
inc
lods
addr16
pop
cwtl
in
mov
or
movsb
and
adc
and
scas
jns
mov
lods
xchg
mov
inc
out
sbbl
pop
cld
jo
mov
inc
andb
ss
mov
lea
pop
sahf
idivb
jl
bswap
pop
mov
cmpsb
adc
test
lock
stos
jns
inc
dec
dec
xor
fidivrs
insb
push
or
inc
in
add
dec
test
loope
pop
fldl
mov
jnp
inc
aaa
or
mov
stos
and
sbb
add
imul
add
jl
xor
andl
mov
add
mov
insb
lret
fstpl
add
insl
mov
loope
imul
leave
inc
insl
rcll
push
mov
inc
cli
cmp
pop
divl
sbb
jae
dec
and
xchg
add
in
cli
adc
add
rcrl
add
push
and
and
push
push
call
mov
mov
cmp
jmp
int
jmp
xchg
add
das
mov
test
or
add
or
mov
mov
push
and
mov
lahf
fcmovbe
fsubrl
test
mov
arpl
sbb
push
pop
jne
pop
jmp
jb
lret
cld
or
inc
out
push
loopne
pushf
out
call
push
loop
mov
test
mov
mov
mov
push
add
movsl
aas
inc
outsl
jmp
shll
xor
inc
sarb
das
repnz
pop
push
mov
je
mov
jecxz
push
jl
inc
fs
popf
inc
sub
insl
insl
rcrl
adc
cmp
pusha
add
movsb
or
mov
xchg
leave
sub
jae
add
xor
pop
lret
xor
scas
add
sbb
inc
cmp
pop
lea
push
cmpsl
aas
stos
movsb
cltd
jns,pn
xchg
mov
rol
hlt
mov
int
sub
mov
movsb
inc
or
call
xchg
ret
pusha
aaa
in
jnp
mov
das
ffreep
nop
cmp
jmp
adc
inc
imul
stos
xor
addl
subl
and
sti
mov
rolb
sub
mov
push
mov
aaa
fsubrl
cmp
pop
cmp
movsb
jle
iret
xor
stos
jne
mov
fildll
int
cli
push
lea
into
lret
sub
test
add
sub
ret
mov
shll
loopne
je
call
dec
jle
fs
jp
aam
and
arpl
aam
add
mov
cmc
outsl
xchg
xchg
dec
hlt
dec
mov
lock
imul
xor
in
cmpsb
cltd
mov
negb
int
sbb
notb
pusha
jmp
push
out
and
push
aad
mov
or
fmuls
lods
jle
scas
fs
cmpsl
jne
and
and
sbbl
enter
adc
or
icebp
mov
ret
mov
push
scas
cmp
mov
jbe
and
stos
sets
andl
and
xchg
leave
sarb
scas
and
out
dec
adc
push
pop
cmc
or
push
leave
ja
mov
mov
lods
das
fbld
pusha
push
mov
pop
dec
leave
xor
sbb
jne
sbb
popa
stos
mov
pop
sbb
inc
imul
mov
xorl
imulb
hlt
mov
cltd
sub
out
popl
inc
sahf
sbb
in
test
call
hlt
jns
push
lods
cmp
add
push
mov
hlt
mov
or
shlb
mov
ficomps
repz
sub
jmp
out
fabs
jno
pushl
mov
fnstcw
add
aam
and
fmuls
xchg
xor
xor
rcrl
add
xchg
fidivl
enter
call
adc
dec
jne
fadd
mov
push
inc
clc
xchg
les
repnz
or
out
push
lcall
push
out
ss
sub
imul
jno
pop
aas
mov
sub
orl
lods
loope
arpl
lret
dec
mov
test
jns
mov
sti
pop
pushf
shlw
push
inc
test
roll
imul
mov
das
xlat
jecxz
or
and
pusha
inc
pop
pop
or
test
jns
in
stos
imul
pop
enter
sti
decb
repnz
cmp
cmp
and
in
dec
push
ficompl
sarb
adc
int
mov
sbb
push
sub
test
mov
ror
into
es
and
mov
push
in
je
enter
add
push
imul
cli
xchg
or
in
sub
cmpsb
iret
xor
repz
lds
lcall
xchg
xchg
sub
inc
movl
loope
or
in
mov
xchg
fcomp
dec
shll
jge
and
test
xchg
xchg
enter
test
and
and
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
jmp
pop
xor
dec
movsl
sbb
pop
imul
or
aad
or
insl
leave
jle
and
inc
out
mov
out
mov
jp
push
dec
ja
inc
push
test
or
xchg
pop
in
testb
and
out
rcrb
pop
cs
push
or
add
add
out
cmpsl
xchg
js
fnsave
inc
jno
cltd
jle
aam
add
or
mov
scas
mov
in
cwtl
ficoml
or
sub
lods
lcall
fdivrl
adc
shl
jecxz
out
lock
arpl
stc
lods
pusha
mov
pushl
push
repnz
les
outsl
popa
mov
mov
pop
jmp
sbb
xchg
pop
add
pop
fdivl
adc
and
and
lods
jno
mov
xor
hlt
data16
push
fsubrs
and
into
mov
add
inc
push
dec
push
dec
insl
popf
mov
fsts
dec
inc
pop
out
into
dec
test
adc
dec
cmp
and
ret
fstps
xchg
sbb
adc
int3
fcoms
stos
pop
sub
cltd
int3
into
cmpsl
inc
addr16
push
ret
mov
addb
push
xchg
iret
adc
std
fdivp
mov
scas
popf
xchg
lock
shrl
scas
fs
sbb
mov
iret
push
dec
and
push
jno
or
popa
repnz
pusha
and
pushf
out
or
imul
and
mov
aam
pusha
mov
mov
in
ja
sub
in
lahf
insl
jbe
push
or
mov
sbb
push
or
or
adc
cld
cmc
jecxz
ja
xchg
pop
push
lcall
add
mov
movsb
or
mov
mov
daa
dec
add
mov
jmp
aad
jnp
and
mov
ret
call
xor
mov
test
stc
push
sub
lds
fs
mov
and
push
nop
jp
sub
xchg
mov
xchg
loop
xchg
test
push
sbb
out
push
in
xchg
aad
das
mov
dec
icebp
popf
outsl
jb
pop
add
aas
mov
movsl
test
mov
cmc
decb
subb
mov
loopne
aas
dec
clc
mov
xchg
sbb
xor
xchg
and
and
fistpl
adc
or
xchg
adc
mov
imul
push
jge
test
dec
dec
ret
or
lea
mov
jp
frstor
fwait
aas
or
jno
sti
leave
imul
int3
cmpsb
test
jb
sbb
mov
mov
int
movsl
outsl
or
jge
mov
inc
jb
out
push
imul
jb
rorb
and
mov
enter
mov
jecxz
jmp
adc
push
dec
or
lods
adcb
insl
lcall
test
push
sti
arpl
xor
sbb
pop
xchg
orb
and
adc
cmp
lret
jns
in
add
push
lods
mov
sbb
lahf
outsl
rcll
fdivs
mov
pop
pop
sub
fidivrl
lcall
and
add
add
mov
in
mov
push
les
xor
ja
xor
mov
adc
jl
sti
or
in
insl
loope
repnz
xchg
jecxz
sub
jmp
sub
sbb
in
cmp
xor
cwtl
notl
lret
insl
outsb
out
out
rcrl
jle
fisubl
iret
rorb
pop
mov
out
push
scas
dec
xchg
and
inc
mov
mov
test
fwait
adc
outsl
and
pop
mov
mov
shll
push
and
cmp
leave
inc
jecxz
inc
sub
inc
imul
in
arpl
ret
adc
int3
rorb
mov
out
lds
sub
inc
mov
into
pop
loop
lods
rorb
jge
or
mov
push
jmp
sub
out
sbb
xchg
pop
rol
mov
out
loopw
or
aad
or
xlat
addr16
adc
lret
pushf
test
fbstp
test
mov
mov
pusha
ljmp
fisubrs
push
lret
jae
out
pop
stos
icebp
mov
dec
push
mov
xchg
pop
mov
xchg
dec
daa
ja
jnp
pusha
mov
add
jbe
sti
mov
outsl
pop
test
les
enter
inc
cmc
jo
cmp
fwait
in
pop
sahf
loope
add
mov
in
lods
fidivs
je
sarl
dec
jmp
and
aam
je
jne
xor
mov
add
lret
adc
xor
push
jnp
xchg
in
out
or
je
pop
leave
popf
call
aad
movsb
xchg
int3
dec
lret
jl
sahf
cmp
push
cli
outsl
inc
cmp
jae
sahf
adc
mov
cmp
hlt
dec
xchg
lret
add
push
dec
rclb
push
cwtl
ja
cmp
pop
mov
push
adc
je
or
bound
fnstcw
jno
push
jmp
sub
and
arpl
sub
xchg
dec
mov
aaa
fcomp
jmp
xchg
mulb
cmp
dec
xor
jno
test
cwtl
cmp
scas
mov
dec
jne
dec
jmp
outsb
mov
push
and
cld
out
jb
mov
fcoms
fwait
rorl
jge
fstpt
sub
push
dec
ffree
cli
xchg
inc
pusha
lds
mov
push
fstl
mov
mov
loop
dec
lret
add
ret
cmp
xchg
xor
int
in
les
sbb
insl
ljmp
xor
popf
push
call
inc
pop
sub
je
scas
sti
mov
push
sub
pop
dec
pop
cmp
repz
lahf
insl
adc
icebp
mov
xchg
inc
aaa
push
icebp
add
or
xchg
or
inc
pop
icebp
sbb
lds
mov
ret
js
fistpll
cmp
or
sbb
mov
jo
cs
movsb
js
loop
push
sbb
push
dec
pusha
out
sbb
nop
mov
aaa
std
or
jae
movsl
xchg
lahf
mov
shlb
dec
imul
xchg
movsl
js
popa
loop
loop
sub
cmp
mov
fstl
adc
dec
int
std
mov
cmp
xor
dec
cmpsb
xchg
fdivl
mov
sbb
lods
jb
adc
adc
mov
push
dec
mov
aam
gs
loopne
inc
push
ret
sub
repnz
dec
push
dec
xchg
dec
mov
aam
jmp
xchg
in
mov
fs
and
mov
inc
xchg
jno
icebp
xchg
dec
push
mov
lods
fistl
sbb
xchg
test
out
scas
add
mov
pop
ljmp
xchg
push
call
push
hlt
pop
jmp
cmp
dec
es
pop
fstp
push
insb
sub
hlt
fstpl
xchg
fistpll
addb
xchg
sbb
pop
es
or
clc
jnp
std
pushf
push
or
int3
out
xor
push
repz
inc
lret
popf
inc
lahf
fwait
sub
inc
aam
ss
test
adc
popf
adc
aam
fs
inc
sub
push
popa
inc
jno
jp
xchg
adcb
inc
xchg
div
movaps
xchg
mov
frstor
imul
repz
or
push
dec
dec
mov
lods
rcrb
dec
xorb
or
mov
subl
jmp
adc
ss
cli
ja
push
sub
xor
sbb
enter
xchg
icebp
in
inc
nop
sbb
sbb
or
jno
jno
ss
mov
xor
push
loopne
stos
sbb
add
fsubl
outsb
scas
mov
repz
pop
pop
cmpsb
in
in
in
leave
je
adc
fstps
push
push
xor
lds
les
add
sbb
into
mov
cmc
in
loop
pop
jge
daa
xchg
lds
push
int
adc
nop
inc
jg
subl
inc
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
jmp
jecxz
pop
mov
xor
add
lods
test
or
add
or
inc
adc
movsl
inc
add
fidivs
and
fxch
in
jmp
mov
mov
out
xor
outsl
fdivl
sar
out
movsl
xor
hlt
jmp
insb
lea
pop
popf
hlt
adc
add
shl
inc
or
ja
adc
sbb
into
lret
or
mov
in
jb
lods
jb
or
repnz
fiaddl
jo
xor
cmpsl
add
cmp
mov
iret
addl
movsb
andb
and
mov
xchg
test
jmp
xchg
fs
xor
push
jle
data16
jp
outsb
movsl
mov
push
pop
cmp
cltd
pop
pop
stc
loopne
cli
fwait
inc
and
xlat
or
out
push
mov
aas
ljmp
test
jge
rol
ficoms
xor
out
leave
mov
mov
pop
dec
mov
push
push
inc
dec
aaa
addb
mov
push
pushf
jmp
leave
add
jnp
clc
mov
jb
dec
rcr
test
pushf
movsb
int
mov
ds
jb
neg
sub
icebp
push
pop
mov
into
push
inc
pop
decl
jle
ffreep
pop
mov
lods
leave
xchg
sarl
push
push
cli
jg
mov
inc
scas
out
clc
out
xchg
mov
fwait
pushf
push
inc
sbb
mov
clc
nop
mov
dec
in
stc
fsubl
pop
dec
lock
mov
and
push
es
adc
xchg
fstpl
push
push
mov
addl
sbb
push
jecxz
bound
mov
clc
call
loop
mov
sbb
sub
pop
int3
pop
xor
fdivr
mov
cmpsb
loope
fstps
rclb
sub
pusha
hlt
fdivs
pusha
and
jne
js
dec
outsl
out
je
les
int3
xchg
and
sbb
fsubrl
add
lock
adc
pop
bound
data16
repnz
std
lret
xor
mov
jae
fildl
ja
movl
cmp
cmc
icebp
jae
adc
dec
add
leave
mov
divl
out
gs
adc
cmp
es
xchg
es
pop
sbb
lcall
mov
jl
or
sub
andl
xor
rol
mov
shlb
daa
jb
lods
sbb
call
mov
in
lods
sub
jns
mov
mov
in
call
fcmove
add
pop
mov
mov
addr16
fidivrs
xchg
nop
inc
mov
xchg
sbb
lock
pushf
sub
xlat
ficomps
or
sub
imul
imul
out
dec
cld
xchg
cld
adc
test
adc
jl
fisubs
loope
lret
test
sbb
mov
mov
in
mov
xchg
mov
pop
pop
mov
lret
and
fisubs
and
mov
mov
and
dec
sbb
pop
iret
pop
aaa
loope
dec
sahf
into
mov
clc
jp
push
sbb
js
cmp
loope
inc
scas
loopne
cltd
mov
push
sub
dec
nop
mov
inc
and
mov
and
shll
mov
and
dec
push
jmp
cmp
lret
jns
std
jecxz
push
movsl
clc
add
mov
cmc
dec
sbb
pop
xor
mov
stos
stos
idivl
inc
adc
gs
add
cmp
inc
addr16
mov
pop
inc
stos
xor
pushf
cltd
xor
test
cld
xor
and
inc
dec
sub
int3
mov
icebp
test
movsl
mov
sarl
aas
lret
mov
in
push
cmc
cld
movsb
and
in
mov
andps
add
mov
add
xchg
iret
mov
sbb
call
out
jo
fwait
jmp
jmp
adc
inc
push
sahf
jl
sub
dec
lcall
leave
cmovge
shl
inc
xor
jge
mov
fistpll
dec
push
jo
test
jecxz
mov
fs
cmp
into
sub
or
enter
xchg
add
xchg
rorb
push
js
add
push
add
call
xor
jmp
repz
mov
adc
lret
dec
addr16
add
mov
jle
or
add
or
and
mov
jp
xlat
sbb
divl
les
lods
or
out
mov
cmp
or
repnz
out
add
aaa
pop
mov
mov
xlat
and
push
jp
sbb
sbb
pusha
lock
clc
clc
mov
jle
mov
jb
push
sbb
jle
fcmovnu
xchg
into
cmc
arpl
rcll
stos
scas
mov
add
sbb
push
and
ret
test
je
push
and
rorb
dec
push
lea
sub
push
push
push
lret
add
enter
int3
xchg
pop
fldl
call
das
adc
push
ljmp
lods
or
add
mov
cltd
in
jbe
loopne
push
imul
inc
std
lock
neg
es
jno
rorb
insl
adc
arpl
test
in
xor
pop
pushw
xor
inc
sub
xchg
incb
idivb
pop
pop
inc
pop
fwait
jno
pop
movsl
sub
ret
mov
and
mov
adc
mov
icebp
ror
mov
bound
jae
inc
pop
aaa
gs
jmp
cmp
fistps
subl
pop
fiadds
and
xchg
movsb
lahf
shlb
fldenv
push
xor
pop
cmp
in
mov
mov
cmp
popa
stos
dec
xchg
inc
xor
mov
jle
xchg
ds
lock
mov
adc
test
mov
mov
and
jg
mov
lea
out
add
inc
aas
scas
hlt
mov
xchg
xchg
dec
aaa
dec
js
pop
sahf
aad
mov
jb
repnz
push
mov
fcoml
dec
movsb
insb
gs
loop
push
mov
out
cmp
cli
dec
stos
int3
int3
lret
inc
dec
add
jb
sub
dec
mov
repnz
mov
aad
loop
xchg
insl
aam
sbb
in
sbb
sbb
sti
mov
dec
mov
or
pop
in
cltd
push
jecxz
test
enter
dec
cmpsl
sti
jmp
inc
sahf
or
fistpll
lret
out
mov
fs
push
and
push
pop
inc
cli
in
cmpsl
call
cmovae
jb
pop
pop
jecxz
stc
xor
jo
loopne
test
dec
dec
push
pop
and
pop
xor
out
xor
xor
jb
prefetch
or
psllw
in
mov
jecxz
sub
cmp
popf
jno
test
testb
sarl
pop
cmpsl
inc
jnp
rolb
nop
je
push
mov
fisubl
cmpsl
clc
jo
shlb
sbb
jns
push
and
cli
fildl
mov
aad
fwait
in
mov
mov
cmp
sti
inc
dec
cmp
ja
xchg
mov
jo
fwait
inc
fisubl
push
jns
fnsave
ja,pn
cmp
xlat
call
ds
aam
and
insl
adc
add
mov
mulb
inc
xor
inc
pushf
sub
mov
call
and
ds
fiadds
or
and
scas
ljmp
decb
cmp
sub
jg
mov
mov
or
scas
push
inc
adc
mov
mov
fsubr
aad
xchg
cmpb
dec
test
sbb
js
pusha
stc
fs
mov
inc
xlat
mov
fimull
mov
test
test
out
mov
pop
mov
bound
xor
sub
fcomip
knotw
xor
loopew
mov
pop
add
insl
and
jg
cltd
cli
dec
lock
addr16
push
lods
or
jmp
jnp
sbb
sar
into
jb
and
xchg
pop
xor
inc
dec
pop
dec
in
sub
fists
xor
sar
test
out
and
inc
out
pop
loopne
rcll
rcl
into
dec
dec
and
scas
lds
or
int
call
fwait
sbb
fcmovne
jecxz
jnp
cmp
js
add
push
sbb
out
jmp
fnstsw
mov
rclb
fistpl
test
lret
add
add
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
jno
pop
jno
addr16
repnz
xor
add
or
int
icebp
in
xor
out
jg
loopne
cmp
add
stc
pop
cmp
add
ljmp
dec
out
mov
mov
hlt
pop
ja
mov
les
xorb
aaa
sahf
shrl
pop
and
cmp
mov
adc
cmpsl
cmpsl
scas
mov
mov
push
cmpsb
inc
lahf
inc
push
mov
mov
ja
shrl
mov
jp
das
push
leave
jmp
jle
cli
add
iret
int
lcall
out
push
cmp
add
inc
or
pop
ja,pn
aaa
jb
jne
push
inc
adc
pop
xchg
dec
pop
inc
jns
xor
and
push
rcrb
scas
push
jp
idivb
add
and
inc
mov
testl
xchg
cmpsl
lds
stos
mov
sbb
adc
jecxz
add
mov
or
lcall
inc
lret
addr16
fimull
rcrl
sbb
and
xchg
sub
or
add
push
xchg
and
xor
mov
mov
mov
or
lahf
xchg
mov
lock
inc
mov
jne
pop
sbb
cmp
roll
aaa
fcoml
insl
test
daa
inc
push
dec
dec
addr16
adc
jecxz
adc
scas
sbb
stc
lds
stos
push
sbb
or
pusha
pusha
push
xor
pushf
fisubrs
xchg
mov
gs
aaa
pop
andb
cmp
xchg
adc
out
cmp
fisttpll
imul
and
int3
pop
bound
mov
shll
mov
dec
shlb
call
or
daa
scas
sbb
popa
cmp
es
sub
sbb
or
inc
repz
addr16
jmp
mov
addb
movsb
mov
ja
aas
ljmp
xchg
lods
mov
xor
mov
mov
dec
aad
out
out
ffree
dec
mov
cld
aad
test
mov
out
mov
cmpsl
das
out
or
mov
in
pop
mov
jno
add
sbb
pop
fistps
scas
inc
lahf
lods
inc
xchg
cli
xchg
mov
push
popf
loope
adc
xchg
xchg
cmp
dec
cmpsb
adc
and
iret
inc
subw
aas
jp
lahf
repnz
sub
lea
call
out
mov
jb
dec
mov
push
or
cmpsb
std
rcll
int3
sti
lret
je
mov
push
pop
cmpsl
cld
or
fwait
sub
or
pop
stos
mov
mov
in
sub
pop
clc
mov
popa
mov
mov
in
jge
mov
mov
and
xchg
push
out
ss
jmp
fisttpl
js
sbb
push
jnp
or
imul
arpl
adc
pop
mov
cmp
sub
xor
mov
push
mov
ljmp
adc
mov
addl
xchg
pop
or
insl
lcall
pop
iret
nop
and
push
imul
sub
scas
es
movsb
pop
dec
sbb
sahf
cmp
sbb
jecxz
mov
rcll
inc
cld
mov
adc
mov
mov
xchg
or
cwtl
mov
lahf
int3
push
sbb
and
pushf
mov
add
adc
out
data16
mov
cmc
iret
test
daa
fnstcw
mov
dec
xor
movsb
fiaddl
sbb
ficompl
mov
ljmp
lock
adc
lock
dec
mov
aas
adc
xchg
jne
and
xchg
adc
sbb
dec
pushf
es
pop
and
mov
jge
mov
lods
pop
and
jg
sbb
sbb
push
sbb
ficoml
dec
loop
pop
cmp
ret
or
aas
mulb
test
xchg
sbb
fstpt
mov
push
icebp
add
sahf
jle
imul
subl
sub
mov
or
sub
sbb
dec
push
mov
ljmp
mov
shrd
shl
mov
mov
xor
shr
mov
jmp
fucomi
js
js
fists
mov
mov
bnd
or
add
or
push
sub
jmp
dec
and
push
out
mov
outsb
and
sub
push
add
mov
sub
fldln2
add
es
lcall
out
nop
inc
test
xor
adc
sub
insb
ja
shll
sti
mov
sbb
ja
xchg
fwait
mov
mov
aas
mov
aaa
addr16
das
mov
out
mov
cmp
or
test
xorb
je
or
insl
add
jnp
insl
sub
cmpb
pushl
movsb
hlt
out
dec
ss
xorl
pop
sub
fcmove
and
dec
sbb
outsl
call
xor
inc
and
dec
jnp
sbb
push
daa
adc
push
cmpsb
xchg
int
bound
call
jg
jl
sarl
int3
into
into
cmp
out
stos
js
push
test
inc
aad
cmpl
cwtl
push
and
scas
add
inc
das
mov
scas
push
lds
ja
mov
mov
jecxz
and
test
xorb
or
pop
or
and
xor
mov
push
icebp
adc
jne
mov
movsb
call
adc
pusha
gs
add
xchg
dec
fdivrl
or
push
cmp
xchg
into
jns
add
and
cld
int
mov
test
les
cmp
dec
adcl
sbb
shrb
cs
adc
xor
fcomip
repz
push
sbbb
rclb
inc
add
xchg
insl
cmp
sub
mov
mov
xor
or
add
sbb
fcoml
leave
push
test
scas
cmp
inc
in
into
cmp
cs
mov
adc
add
mov
xchg
addr16
adc
pop
loope
xchg
ja
stos
and
scas
and
push
mov
pushf
dec
repnz
lods
cmpsb
es
fsubrl
lahf
cmp
test
test
mov
jns
shlb
shll
xor
inc
dec
loop
ja
fs
dec
sbb
mov
pop
xchg
jne
decb
jp
xchg
pushf
stos
pop
mov
add
xchg
or
sbb
mulb
lahf
sbb
dec
loop
mov
dec
push
pop
dec
mov
sub
cmpsb
ficoms
push
mov
cld
loope,pn
jns
adc
testl
sarl
rol
mov
pop
aad
mov
cmp
sahf
lods
mov
adc
mov
insl
push
xchg
loopne
dec
sbb
add
add
jl
or
cs
sbb
rcrb
ret
arpl
leave
mov
in
push
xor
leave
dec
popf
dec
les
test
loopne
cmp
je
xchg
and
in
mov
lret
scas
cmc
jno
fiaddl
adc
inc
jnp
test
lret
xor
lds
std
jmp
mov
aad
jae
xchg
sarl
mov
test
xor
fidivrs
repz
inc
push
das
fisubs
jns
in
cmpsl
mov
inc
push
mov
pop
push
imul
mov
sbb
shlb
loope
clc
adc
das
xor
scas
popa
imul
lahf
mov
sub
into
stos
call
jnp
data16
dec
dec
movsbl
fs
and
and
jae
or
sarl
lret
jecxz
faddl
inc
jns
dec
sub
mov
cmp
mov
mov
mov
cmp
inc
mov
inc
xor
adc
cmp
or
jl
adc
loope
xchg
in
mov
rorb
mov
out
jl
mov
aam
mov
inc
pop
psubsw
sbb
pushf
or
test
adc
jns
rorb
sub
mov
push
xchg
jno
sbbl
in
ss
mov
push
ljmp
test
cmp
sahf
add
add
iret
add
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
jmp
add
popf
mov
in
pop
addr16
dec
jne
pop
or
aad
or
add
fistpl
sbb
sbb
rolb
or
pop
pop
stc
rcrl
cld
xchg
out
lods
add
add
xor
mov
aam
push
and
xchg
push
daa
test
dec
mov
leave
rclb
pop
orb
mov
ljmp
add
stc
ds
imul
pop
adc
and
out
and
aas
rolb
rcrl
push
mov
fdiv
movsl
and
mov
sub
pusha
xor
sub
and
enter
data16
adc
popa
dec
mov
adc
pop
enter
aam
lods
mov
in
cmp
inc
popa
lea
push
sub
add
add
cmp
adc
sbb
divl
ljmp
inc
xchg
jle
inc
outsl
push
decl
cli
leave
push
adc
cmp
or
and
mov
insb
repz
sub
cmpsb
fsubrs
xor
test
or
ret
icebp
sub
mov
lds
loop
jo
sbbb
or
mov
decl
popf
sub
std
adc
add
imul
arpl
sub
inc
lret
inc
pushf
and
mov
mov
sub
int
repz
xchg
test
cwtl
xchg
pop
test
xchg
sbb
into
push
icebp
inc
mov
or
mov
mov
xchg
inc
cmc
iret
pop
pop
mov
cwtl
jno
jle
sbb
push
in
xchg
out
inc
inc
out
mov
mov
sahf
cmp
ffreep
jl
xchg
dec
pop
aam
pop
mov
popf
repz
cmp
dec
adc
mov
iret
jmp
loopne
roll
push
or
pusha
adc
in
std
mov
push
cmpsb
stos
insb
and
push
je
dec
cld
jnp
pop
fnstenvs
push
dec
push
inc
stos
imul
and
jnp
cltd
mov
lods
and
and
stos
cmp
fisttpl
orl
mov
dec
lea
inc
loope
sarb
jae
hlt
xchg
xor
xchg
jmp
pop
sub
scas
mov
push
xor
sbb
movsl
xchg
inc
add
aad
xchg
test
lea
xchg
cmp
push
jmp
push
cltd
inc
sbb
add
xchg
add
subl
pop
xchg
sub
cmp
or
and
clc
icebp
pop
push
jle
sbbb
dec
popa
cmp
or
test
push
fmulp
mov
mov
mov
sbb
adc
add
sarb
dec
jae
repnz
add
mov
inc
ja
bound
shrb
cmp
jo
dec
dec
mov
xor
mov
test
xchg
in
lds
jno
loope
int
sub
jg
shlb
lods
lret
jmp
out
push
xchg
shrl
gs
mov
pop
mov
mov
shrl
pop
mov
popf
cmp
jb
cmp
aas
mov
or
fs
mov
fists
js
fisttpl
sarb
pop
jp
xcrypt-ecb
cmpsl
dec
test
push
sbb
in
div
in
sub
push
dec
lret
xor
xchg
pop
pop
nop
jge
cs
rcll
add
in
xor
outsb
mulb
mov
rorl
loop
lret
xchg
fldl
out
std
sub
sub
into
sarl
mov
sahf
push
adc
inc
add
or
dec
jmp
testl
push
loop
mov
inc
sbb
sahf
lcall
jb
add
out
fdiv
mov
push
cmpsl
sahf
or
pcmpgtw
fldcw
ret
test
out
stc
lret
cmc
int
or
leave
int
dec
out
sbb
fcomps
mov
aad
push
xor
shr
xor
xor
add
cmp
rol
std
xchg
movb
movb
mov
movzbl
mov
movzbl
shl
jmp
loopne
jg
pop
xor
fnsave
ss
jns
or
aad
or
pop
movsb
outsl
jecxz
mov
movsl
ret
ds
ret
cmc
sbb
dec
cmp
hlt
lret
dec
push
fcomip
test
std
fucomi
cld
xchg
inc
lods
adc
stos
pop
in
shl
or
lock
out
daa
jo
cltd
xchg
aam
add
in
loop
cmp
jb,pn
push
push
xor
xor
and
or
cs
mov
shll
sub
sahf
xchg
out
or
int3
scas
lahf
adc
pop
mov
xchg
xchg
mov
adc
cld
dec
repz
call
xchg
adc
fadd
pop
cmpsl
adc
dec
psllq
sub
sti
gs
and
jae
aad
xchg
xchg
pop
xor
mov
pop
push
cli
sti
add
and
jnp
ret
gs
push
shlb
mov
jns
pop
je
pop
jg
pop
in
fcomps
and
aas
pop
inc
fiadds
xchg
movsb
cs
add
out
jge
cmp
lods
mov
ljmp
cwtl
cmp
add
inc
es
xchg
mov
repz
jecxz
test
xchg
es
cmpl
push
sbb
pusha
dec
mov
iret
rcll
sub
or
loopne
sahf
inc
jl
mov
les
pusha
nop
mov
daa
outsb
fidivs
mov
repz
es
nop
scas
mov
cltd
ss
fcmovnbe
push
or
popa
sub
pop
mov
ficoms
xor
sbb
cmp
imul
push
lahf
pop
sbb
cmpsb
xchg
or
movsb
into
out
mov
lds
test
in
mov
mov
sbb
aam
outsl
fwait
jecxz
loopne
pop
testb
xlat
jge
cvtdq2ps
mov
jmp
lea
and
add
cmp
lods
lods
mov
nop
pop
fs
or
cmp
sahf
mov
sub
in
fmull
xchg
mov
or
pop
mov
aaa
sbb
imul
insl
and
push
test
jl
ficompl
adc
jle
mov
ja
hlt
incb
jnp
mov
inc
add
or
pop
and
in
xchg
jo
ja
dec
mov
adc
mov
mov
cltd
add
sbb
cmp
sbb
add
add
into
and
cmp
mov
or
das
xchg
out
inc
and
dec
idivl
rcll
aam
mov
cltd
adc
ds
add
pop
pop
and
inc
add
clc
add
xchg
shll
or
push
xor
jge
shlb
mov
cmc
sub
cmp
nop
divl
mov
mov
xor
rol
mov
and
aaa
inc
lds
mov
push
cmc
or
fistpll
mov
jno
add
jb
out
and
dec
outsl
push
mov
loope
pushf
pop
shll
mov
aas
mov
jmp
xchg
add
xor
stos
das
sti
add
push
xor
roll
fisttps
mov
shlb
inc
jl
mov
push
sahf
ds
mov
dec
shl
in
lock
into
cli
cmp
jne
test
daa
cli
adc
pop
xchg
cmp
insb
lret
mov
insb
push
xchg
sahf
add
mov
leave
test
mov
xor
sbb
sub
mov
fs
and
push
bndstx
addr16
int3
fmuls
mov
sub
fisttpll
mov
jns
out
mov
mov
pop
ret
adc
add
xchg
fcoml
pop
dec
mov
push
lock
mov
daa
lods
cld
sbb
sub
lret
xchg
xchg
jb
ret
mov
and
pop
xor
repz
mov
jge
dec
push
aas
jp
push
mov
mov
jae
outsl
push
cs
nop
mov
and
cltd
rol
out
push
imul
jp
stos
es
dec
mov
subb
dec
sahf
jmp
xchg
jne
orl
push
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
jmp
push
adc
pop
xlat
sub
mov
sbb
or
add
or
cmp
clc
xor
add
jb
test
hlt
xchg
aam
inc
jne
adc
jp
and
pushf
imulb
out
cmpsb
cltd
les
cmp
cmp
cmp
idivb
pop
or
xchg
mov
in
pop
xorl
outsb
insl
movl
sbb
imul
cmp
call
pop
fldcw
and
loope
mov
lods
pop
cltd
jp
cltd
fimull
mov
cmpsb
out
sbb
aad
push
int
std
dec
jo
and
lods
and
xor
loope
push
inc
add
scas
imul
or
loop
inc
stos
cwtl
aad
jo
pop
adc
mov
testb
loopne
dec
cmp
cmc
sub
lock
icebp
xchg
cmpsb
mov
xlat
enter
sub
lret
jle
sbb
insl
in
mov
push
hlt
push
jae
jno
xor
inc
cmp
or
push
sbb
fwait
jge
out
imul
xchg
int
loop
ja
repnz
loope
std
repz
test
ds
movsb
scas
mov
clc
lods
lret
lods
addr16
pop
push
out
insb
lock
push
jle
leave
xor
sbb
and
push
adc
mov
adc
mov
pop
sub
fisubrl
push
dec
jge
mov
shlb
popa
shrl
jnp
ds
adc
adc
adc
daa
sarl
out
inc
negl
dec
mov
inc
adc
xor
and
and
sarl
sbb
mov
and
es
insl
test
mov
jmp
daa
mov
push
mov
xlat
outsl
jno
jne
add
add
mov
or
jbe
ret
std
loope
addr16
or
adc
jmp
xor
xchg
adc
data16
cmpsl
lret
mov
sub
lods
imul
ficoml
enter
jns
dec
mov
mov
push
popf
cmpsl
in
xchg
push
gs
jg
sarl
mov
push
jg
cmp
loop
sub
mov
repz
xchg
and
cmp
fcomps
add
push
sub
out
mov
pusha
add
cli
jns
push
mov
std
mov
fsubl
popf
xor
add
dec
and
mov
es
out
sbb
push
pop
add
or
xchg
arpl
mov
hlt
out
xlat
xorl
aam
jo
shll
pop
push
fldl2e
push
sti
push
pusha
ja
inc
lret
outsb
icebp
cmp
push
or
and
pop
xchg
mov
movsl
xlat
mov
pop
mov
cld
mov
shr
stc
xchg
call
push
jge
lret
pop
aad
mov
and
sub
jns
repnz
mov
cltd
xchg
mov
pop
cli
fidivs
sub
and
std
pop
es
dec
inc
leave
adc
add
push
jbe
push
cmp
adc
stos
xchg
inc
std
and
xor
xor
pop
scas
nop
mov
cli
inc
inc
pop
cltd
in
add
and
test
stos
inc
mov
add
dec
fucom
push
or
cltd
sbb
sbb
fidivs
cvtps2pi
sub
loope
and
pop
push
rorl
jb
cld
jnp
cmp
mov
lahf
add
or
sub
lcall
fcoml
mov
jne
xchg
or
not
cmpsl
out
in
sub
dec
add
call
jne
mov
xor
jae
and
push
pop
add
lret
sarl
stc
sbb
sbb
add
adc
into
test
roll
jnp
lods
inc
insl
outsl
cmpsl
sub
or
sarl
scas
aas
idivl
lret
int3
sbb
lods
ljmp
fcmovnu
sbb
add
fld
pop
popa
das
int3
fucomi
in
movsl
jp
mov
lcall
dec
repnz
fdivrp
js
fwait
repz
out
outsb
mov
mov
push
sub
mulb
or
jmp
cmp
sub
aam
or
jle
lret
and
ja
hlt
cmpsb
push
adc
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
jmp
sbb
inc
daa
inc
pop
and
lahf
adc
add
or
add
or
icebp
adc
scas
sbb
add
push
sub
imul
jge
pop
mov
int3
lcall
aad
pop
add
imul
fbstp
cltd
cmp
leave
xor
daa
sub
cmpsb
inc
push
lock
xlat
xchg
push
aaa
dec
bound
icebp
fucomp
std
repz
sub
push
sbb
mov
or
cmpsb
ret
push
loope
aas
int
push
sub
mov
mov
call
adc
jmp
mov
mov
enter
push
js
push
out
cmpsb
aad
jb
jo
mov
movl
in
adc
fstpl
fmuls
popa
cli
adc
mov
sbb
xlat
xor
xchg
lcall
xor
mov
push
jb
ljmp
test
nop
int3
mov
stc
hlt
mov
out
js
jnp
pop
mov
adc
xchg
jge
jp
fsubp
fnstenv
adc
lock
and
jp
icebp
gs
jg
and
fisubrl
dec
sub
push
push
pushf
push
fimuls
mov
mov
xchg
leave
xor
insl
fs
push
icebp
pop
jecxz
repnz
out
pop
inc
shl
push
scas
loopne
mov
stos
jg
add
lcall
es
frstor
xchg
push
clc
mov
inc
push
cmp
push
popf
add
jae
lock
sbb
stos
subb
repnz
js
push
or
xchg
sub
dec
pop
insb
sub
cmp
pushf
fists
insl
lret
adc
iret
add
and
subb
push
push
dec
sbb
or
xorb
out
mov
mov
xor
jns
push
je
mov
pop
out
int
jae
push
lds
push
lods
int
mov
xchg
imul
mov
push
out
sbb
repnz
ja
sub
jge
push
dec
adc
stos
ret
dec
dec
stc
mov
fldl
and
imul
imul
fcoms
orb
loopne
xchg
les
es
xchg
xchg
scas
pop
ficompl
das
imul
sub
pop
mov
divl
mov
fcoml
gs
repnz
mov
lock
xor
mov
insb
stc
shll
dec
js
shlb
aaa
sub
mov
lods
add
push
mov
leave
das
movsb
push
pop
ja
dec
ds
push
ficoml
scas
xor
xchg
and
pop
pusha
pop
insb
adc
imul
loope
adc
cltd
sub
roll
sub
mov
jmp
imul
dec
add
sbb
mov
jmp
sbb
fxch
test
nop
pushf
and
pop
lret
and
push
dec
add
sub
bound
adc
mov
test
movzwl
stos
xchg
pop
push
fs
icebp
rorl
lea
jp
sub
or
xchg
xor
adc
mov
jnp
mov
int
and
std
cmp
inc
loop
pop
add
aam
rclb
pop
push
push
movsl
std
out
cltd
dec
cmp
or
adc
push
andl
stos
lcall
mov
test
pop
int
divl
pop
jecxz
bound
aad
fwait
dec
jo
jb
into
imul
and
icebp
imul
lock
xor
mul
xor
pop
push
ret
cmp
shlb
or
mov
in
ss
dec
mov
pcmpgtw
or
fcomip
jb
in
loop
pop
jno
inc
push
lret
sbb
loope
adc
leave
test
sub
fdivp
push
add
add
adc
hlt
sbb
inc
dec
lret
test
shlb
icebp
mov
push
and
pop
mov
dec
mov
or
movsb
inc
pop
sahf
iret
mov
inc
cld
loopne
out
bound
dec
lret
xor
mov
and
call
popa
imul
dec
bound
outsb
mov
lock
bsr
adc
and
and
xchg
add
add
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
jmp
xlat
js
ret
push
pop
stc
xchg
jns
arpl
jne
or
mov
or
mulps
jg
add
aad
sbb
or
int3
call
pop
in
test
popa
jo
cmp
jp
aas
xchg
and
adc
push
mulb
mov
lahf
movsl
cld
push
add
pop
dec
sbb
or
xchg
stos
pushf
data16
and
sahf
loop
adc
mov
fsubrl
xchg
xchg
jo
dec
or
fsts
jnp
jecxz
mov
clc
cld
rorb
dec
in
cmp
add
add
pop
and
out
jno
pop
sbb
orb
or
xchg
popa
push
lock
pop
mov
gs
incl
or
jnp
cmp
jo
call
add
xchg
test
cmpsb
fisubrs
stos
test
pusha
mov
ret
out
lret
cltd
and
inc
jae
push
lret
stc
int3
sti
iret
jmp
das
fs
or
sub
pop
pop
loope
mov
sbb
push
in
outsl
loopne
cmc
lods
mov
and
int3
loope
dec
or
les
jne
insb
cs
or
jge
pusha
aam
xlat
movsl
adc
mov
aas
dec
pop
mov
cld
aaa
aas
pop
lretw
and
movsb
cld
xor
push
test
jle
sub
fadds
inc
mov
stos
push
and
xchg
into
xchg
or
ljmp
or
hlt
and
pop
xor
ret
hlt
enter
mov
mov
lods
mov
mov
enter
or
aad
or
or
fstl
sbb
orl
xchg
mov
test
xchg
clc
jle
mov
adc
ret
subl
divb
jg
pop
ret
adc
push
sarl
push
dec
adc
and
or
aaa
mov
sbb
dec
ss
jo
insb
popf
and
xchg
into
and
addr16
adc
push
or
outsb
aad
cmpsl
pop
mov
adc
fsubrl
inc
test
cmp
test
pop
cmpb
aad
or
mov
in
test
and
push
sbb
outsb
or
pop
into
imul
push
fnsave
mov
push
cld
add
adc
cwtl
add
divb
add
pop
add
enter
int3
sbb
mov
out
jo
mov
mov
fsubrl
mov
roll
and
mov
cltd
mov
mov
cmp
pop
adc
and
lock
cmp
cwtl
lahf
ds
loope
and
sub
out
hlt
dec
fcompl
jnp
xor
xor
sub
cmp
push
clc
xor
xchg
jge
pop
insl
mov
cmp
jmp
jecxz
lret
xchg
int
cmp
pop
mov
pop
es
inc
inc
and
aad
inc
mov
test
sbb
std
js
add
lods
cmp
shlb
mov
popa
and
and
icebp
ja
popf
xor
loope
les
adc
aam
pusha
daa
outsl
ret
adcb
xor
cwtl
aaa
arpl
adc
mov
push
pop
cwtl
lods
sbb
jecxz
mov
or
pop
ss
dec
mov
xor
xchg
mov
xchg
jmp
mov
notb
add
adc
cmpsb
xor
mov
and
std
in
fsubrl
and
mov
xchg
in
xchg
mov
nop
jmp
add
mov
repz
push
xor
pusha
sub
lahf
xor
push
add
jecxz
fistps
jecxz
pop
lcall
ret
cmp
dec
int3
fsubr
int3
or
mov
enter
and
push
adc
outsb
mov
jp
in
push
sbb
cmp
inc
sbb
cltd
jns
and
xchg
adc
mov
jle
leave
pop
shrl
xor
lret
out
rolb
inc
add
inc
je
mov
sub
jne
orb
std
je
dec
cli
push
or
pop
popa
hlt
sub
mov
mov
push
push
imul
gs
xchg
add
push
inc
popf
in
or
mov
mov
icebp
xor
mov
dec
imul
mov
mov
cmp
lret
dec
jmp
xor
sahf
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
jmp
fadd
mulb
xchg
sbb
aaa
dec
jno,pt
push
xchg
inc
mov
mov
or
xor
fnsave
sbb
rcrl
cld
mov
jp
andl
fs
arpl
faddl
xchg
adc
dec
rclb
jge
cmc
lret
loopne
imul
movsb
in
int3
add
inc
dec
inc
jbe
popa
jle
movb
cmp
xchg
fldl
sbb
mov
gs
xor
popl
je
mov
lahf
cmpsb
xchg
mov
popf
pop
lock
cwtl
repz
mov
and
sub
pop
or
nop
mov
aaa
add
adc
les
add
cmp
fs
cmp
sbb
fsubrl
fwait
dec
or
jle
dec
cwtl
dec
shrl
loop
ljmp
lods
add
adc
pushf
sbb
out
mov
mov
out
int
mov
fldcw
mov
jb
xor
icebp
cmp
mov
icebp
or
fcmovb
fidivrs
notb
loopne
jg
jo
imul
push
mov
jg
jns
into
push
scas
out
or
sub
sahf
js
ficoms
out
in
pushf
pop
ds
dec
in
imul
jmp
adcl
push
lahf
xor
addb
loopne
or
add
ret
aas
in
shrl
aam
nop
nop
leave
pop
inc
inc
mov
mov
sbb
mov
test
out
push
js
push
jp
add
in
out
lods
jp
outsb
sarl
and
movsb
ss
pop
inc
mov
loope
in
fs
jg
out
push
and
adc
adc
mov
mov
in
outsl
xor
shlb
jmp
xor
pop
sub
dec
lods
icebp
nop
and
lods
cmpsl
outsb
or
sub
aas
mov
test
add
add
out
test
xor
testl
or
dec
andl
mov
push
mov
int3
and
addr16
pop
scas
cli
movsb
mov
mov
pop
test
repz
xchg
adc
jne
pop
movsb
push
stc
ret
add
aad
pop
sahf
sub
mov
in
and
sarl
mov
push
fmuls
mov
rorl
hlt
test
xor
sub
xlat
xor
mov
mov
pop
in
stc
mov
dec
insl
cmp
xchg
dec
shlb
adc
pushf
pop
sbb
sbb
ret
pop
rorl
dec
iret
push
or
push
pop
or
add
in
inc
mov
mov
femms
sbb
ret
pop
adc
inc
mov
je
jnp
pop
mov
sub
adc
xlat
iret
or
jne
inc
lds
filds
jns
jae
ret
imul
sbb
insb
jl
mov
dec
insb
sbb
movsl
mov
mov
fbld
mov
mov
inc
inc
mov
loope
rcrl
ja
cmp
outsb
mov
and
mov
es
mov
push
xor
outsl
mov
xor
ja
inc
dec
gs
test
jle
ja
imul
push
push
in
jg
adc
or
shll
cmp
js
xchg
cmpsl
xor
aaa
arpl
out
mov
lods
jnp
inc
insl
fwait
jmp
xor
ljmp
inc
out
inc
imul
lea
rorl
lcall
mov
sbb
lds
ja
je
test
jle
mov
mov
or
inc
push
inc
or
les
imul
imul
xor
lods
movsb
cmpsl
enter
test
jp
jnp
imul
int
jo
fs
jecxz
inc
test
lea
pop
dec
pop
adc
repnz
pop
pop
push
insl
pop
out
xchg
mov
test
add
pop
fiaddl
sub
in
popa
popa
mov
mov
xchg
and
fcmove
pop
mov
and
mov
movsb
scas
dec
and
ja,pn
int
or
adc
lods
xchg
mov
xchg
xlat
inc
mov
mov
inc
std
test
xor
movsb
nop
dec
xorl
sarb
lret
ljmp
pop
jmp
xchg
push
xor
rcll
mov
xor
or
adc
adc
aad
add
xchg
mov
push
mov
and
js
into
and
cld
pop
std
sbb
outsl
mov
sti
cmp
cmc
subb
xchg
popf
mov
enter
stc
stos
subb
add
fidivrl
or
mov
jb
shrl
pop
push
not
cmp
push
insb
fld
nop
cmpsb
pop
aas
mov
xchg
mov
mov
clc
adc
daa
sbb
sbb
cwtl
mov
mov
mov
test
daa
xchg
pop
pop
lea
addr16
push
jns
push
push
out
test
sub
and
icebp
fldl
xor
das
mov
push
ret
rcr
jmp
das
mov
mov
inc
mov
pop
jnp
xor
xchg
aaa
jmp
push
enter
out
inc
lods
fwait
arpl
add
jo
push
dec
inc
leave
or
out
ss
je
lods
call
std
and
jp
mov
pop
js
push
sahf
mov
into
xchg
mov
clc
ror
push
lods
and
movsb
push
stc
in
adc
jnp
lret
mov
mov
movsb
mov
loope
sbb
sub
xchg
insl
jmp
loopne
lcall
lds
sbb
lock
pushf
dec
push
movsb
jbe
sbb
mov
jno
add
mov
xor
out
mov
int3
mov
cmpsb
call
int3
push
xor
pushf
mov
daa
fsubl
out
divb
out
ret
push
xchg
or
test
repnz
push
xchg
push
jge
mov
jo
ret
loopne
xchg
cmp
stc
setno
fdivl
aad
jae
pmaxsw
sbb
jae
mov
lea
sbb
cmp
stos
movsb
test
or
ljmp
fnstenv
es
aad
push
arpl
fucomi
inc
adc
aas
and
dec
push
push
xchg
iret
test
and
mov
in
ret
scas
dec
mov
adc
mov
push
leave
jmp
rolb
jp
push
push
adc
push
jne
and
mov
xor
into
pop
stos
fistpl
fstpl
aas
mov
enter
data16
test
cmp
stc
daa
out
adc
xchg
mov
jle
outsl
dec
push
push
shrb
fstps
mov
imul
sub
sbb
jbe
into
inc
jmp
mov
and
mov
in
dec
iret
inc
add
mov
lods
icebp
inc
and
jbe
mov
jl
add
add
call
dec
adc
xor
add
lea
mov
sti
dec
repz
shrb
jge
outsl
lcall
ds
xor
popf
jp
test
test
xor
adc
rolb
jge
mov
fcmovne
sti
popa
mov
adc
cmp
jns
movsb
push
test
lret
les
and
jb
in
fstl
cmp
and
xchg
mov
gs
popa
cwtl
aas
adc
fidivrl
int3
stos
sti
sbb
cmp
ret
gs
call
pop
fdivrl
mov
sbb
jns
jmp
dec
into
sub
jl
in
or
jl
vandps
fsubrs
adcl
sub
scas
push
lret
adc
xor
stc
mov
or
mov
pop
scas
mov
les
shl
add
shr
mov
fwait
bound
sub
in
adc
adcb
fimuls
mov
ja
adc
loope
scas
mov
jae
inc
mov
mov
cmp
push
push
inc
push
aad
leave
mov
lock
inc
sbb
sti
push
std
jae
scas
mov
insl
jno
add
insl
mov
or
cmpsl
ja
ss
jbe
sbb
cmp
pushf
notl
cmovno
lods
mov
mov
dec
out
add
cmpsb
xor
add
and
out
xor
fsubs
das
iret
add
scas
sbb
adc
pushf
push
arpl
xor
inc
xchg
sbb
shll
push
jge
sbb
mov
mov
movl
jmp
push
jae
iret
sub
fnsave
adc
mov
or
movsb
call
lds
ds
pop
mov
popf
mov
shlb
arpl
xchg
inc
mov
jb
leave
add
mov
xor
adc
push
and
adc
outsl
xchg
xchg
repz
rol
in
push
dec
pop
inc
xorb
xchg
add
aaa
push
jno
inc
incl
shl
xor
add
inc
push
mov
jno
add
xor
xor
xchg
sub
push
xor
add
out
sub
test
shlb
xchg
mov
bound
push
nop
imul
or
lods
loopne
ljmp
ss
push
sub
out
push
pop
push
test
fstpt
cli
je
int
mov
repz
sbb
or
test
ds
js
jae
xor
sbb
icebp
jae
cmp
cmpsl
test
ret
adc
cmp
inc
jns
gs
aad
pop
mov
mov
pop
jp
fnstsw
cmp
es
pop
stos
adc
xor
ret
out
pextrw
dec
leave
data16
imul
or
cs
pop
mov
sub
sarb
cmp
lods
fcoms
sub
hlt
iret
mov
call
lods
lret
push
jg
hlt
mov
rcll
or
movsb
bound
fisttpll
jmp
mov
stos
sub
mov
leave
dec
sbb
dec
dec
pop
inc
sbb
lds
fmull
push
and
fidivs
adc
and
ds
pop
jns
cltd
in
inc
addl
jnp
mov
fs
iret
js
test
push
push
add
sbbl
pop
adc
negl
mov
in
aas
pop
and
ja
jp,pt
popa
in
cs
pop
pop
sub
out
add
and
leave
xlat
push
call
jnp
sub
cwtl
orl
jmp
xlat
jmp
and
dec
into
imul
pop
jo,pt
fidivrl
adcb
mov
mov
xchg
mov
dec
pop
adc
pushf
pop
push
cmp
sbb
stos
xrelease
andl
aam
out
js
mov
xchg
sahf
sub
xor
aad
push
pop
adc
fwait
jae
xchg
je
adc
jecxz
push
out
or
add
out
mov
cmp
loope
loopne
pusha
mov
les
and
out
insl
mov
subb
or
shrl
mov
movsl
xchg
mov
xchg
dec
jl
xchg
xchg
push
xor
jle
add
dec
jb
je
frstor
xor
lret
out
test
dec
ret
out
adc
lods
add
int
cmc
xor
pop
push
ljmp
gs
cmp
rcr
inc
sub
dec
mov
xlat
ret
popf
xlat
or
or
and
scas
shrb
sar
clc
mov
jae
in
jnp
add
dec
jb
add
dec
mov
pop
sub
cmp
xchg
dec
sbb
divb
fcompl
call
imul
inc
adcl
add
sub
mov
shll
pop
xlat
bound
lcall
rolb
lods
mov
jmp
xchg
mov
mov
adc
movsb
aas
mov
mov
dec
mov
shlb
inc
cwtl
movsb
mov
out
loop
mov
pop
cmp
pusha
lods
mov
dec
push
aaa
jo
push
fld
push
test
xchg
xchg
push
insb
pop
mov
out
in
roll
sbb
movsl
push
inc
jmp
inc
pusha
add
mov
pop
dec
out
xor
mov
cmpsb
test
push
leave
push
fistpll
jo
popf
adc
adc
dec
xchg
pop
add
mov
xlat
fildll
push
aas
in
ret
or
push
cli
inc
popl
lock
push
stc
and
aaa
daa
filds
clc
les
sbb
insb
sarl
sbb
push
mov
fdivl
push
clc
jl
push
mov
inc
ss
cmp
pop
mov
push
fadds
inc
clc
icebp
jl
add
lret
add
push
cmp
adc
shll
mov
mov
or
test
sub
je
push
push
rcrl
mov
mov
jne
outsb
mov
inc
std
add
add
pop
aaa
shrb
lods
lret
mov
jnp
ret
cmpsb
jns
dec
cld
adc
mov
das
test
dec
xchg
mov
sbb
push
sub
enter
ret
dec
cmpsb
push
lock
jb
popf
mov
in
xchg
dec
aad
jno
pop
cltd
push
ss
xor
fimuls
xlat
iret
mov
inc
push
aas
mov
ss
aas
shlb
divl
dec
sub
cs
in
bound
cmpsb
orl
sbbb
mov
mov
lret
mov
sahf
xchg
inc
push
or
push
mov
sbb
enter
shll
leave
inc
lret
ljmp
popf
int3
add
leave
ja
cltd
loopne
mov
dec
lods
pop
mov
lret
mov
sub
test
xchg
push
xor
out
scas
lock
dec
push
mov
das
jle
call
add
cmpl
aaa
mov
jp
jno
mov
inc
sub
rcll
dec
in
mov
dec
cwtl
nop
mov
rclb
and
in
sarb
adc
pop
cmc
gs
dec
cmpsb
cli
sub
sar
fildll
jae
mov
jbe
cmpsb
pop
jno
inc
stc
inc
jmp
out
add
mov
adc
mov
jbe
cmpsl
jmp
jmp
and
push
xor
rcpps
push
inc
pushf
add
aam
inc
sarb
sbb
xchg
scas
add
sbb
add
fmull
test
addr16
fmuls
mov
mov
lods
lret
loopne
sbb
pop
into
outsb
add
inc
add
mov
inc
jl
sbb
or
pushf
cltd
ret
cmp
cmp
stos
sub
mov
insl
adc
sti
pop
add
inc
cmp
aaa
jg
lret
sarb
jne
pop
mov
xchg
and
dec
insl
xlat
inc
test
rol
and
push
jns
mov
loopne
pop
int
push
stos
das
ss
mov
ds
pop
ljmp
fiadds
daa
pop
js
out
push
lcall
cmp
rcl
adc
pusha
stos
aad
cmp
cmp
mov
nop
pop
push
cmpsl
xor
inc
ss
jl
lds
int3
ret
mov
call
ss
je
adc
lret
mov
lahf
neg
sbb
dec
xor
dec
and
lret
roll
lea
mov
flds
and
loop
cld
or
xchg
xchg
in
and
sub
arpl
dec
imul
les
clc
roll
mov
ds
nop
aam
lock
pop
leave
in
cmp
fnstsw
jg
push
sarb
adc
fndisi(8087
jg
mov
lahf
mov
adc
hlt
lock
or
xchg
pop
and
sub
mov
and
in
mov
inc
es
jecxz
mov
dec
lock
push
sbb
movsb
fimull
jbe
nop
les
imul
xchg
xchg
enter
or
loop
in
cmp
pop
add
mov
subl
push
inc
sti
daa
push
in
mov
aaa
mov
jecxz
fisttpll
rcr
aad
pop
and
pop
mov
test
imul
adc
aaa
div
lahf
xor
test
subl
mov
mov
mov
pusha
jno
sub
lret
mov
stos
int
loop
mov
mov
mov
add
jg
xchg
push
xor
clc
cmp
in
push
mov
mov
aas
or
rep
sbb
daa
addr16
push
cltd
je
jns
xor
jge
cmp
loopne
int3
in
add
ljmp
cmpsl
mov
icebp
mov
sbb
jns
jle
pop
insl
testb
xchg
fcmovnu
inc
cmp
or
or
inc
hlt
cmp
add
xor
movl
jmp
sub
fistpl
mov
stc
push
or
mov
or
clc
lods
push
sub
lret
das
ficompl
xchg
jb
pop
jmp
sub
movhps
sub
or
mov
jl
shrl
and
mov
iret
ljmp
mov
repz
fisubs
cmpsb
rol
xchg
xor
nop
lods
outsl
push
loop
shr
jge
das
mov
mov
push
nop
sbb
push
inc
cmpsb
scas
fbstp
add
das
sbbl
fnstcw
xchg
xchg
js
cs
push
aas
mov
stc
lea
jmp
sbb
jmp
mov
sbb
jnp
lds
bound
mov
jno
dec
cmp
adc
sub
mov
sahf
mov
xor
pop
icebp
sti
mov
aas
hlt
push
mov
ljmp
and
mov
sbb
jae
cltd
xchg
or
shr
dec
add
sub
inc
leave
dec
xchg
mov
adc
mov
mov
pusha
sbb
test
andl
pop
pushf
inc
mov
add
xchg
repz
inc
xlat
xchg
fdivp
outsb
lods
incl
dec
mov
jae
mov
icebp
or
mov
inc
fistpll
push
pop
ljmp
test
imul
fsubrs
loop
add
inc
cmp
sub
mov
arpl
es
out
push
inc
mov
or
jp
lods
sub
in
inc
imul
out
mov
pusha
and
aam
fistpll
pop
cmc
mull
pop
inc
inc
shlb
mov
xchg
mov
lret
inc
loopne
test
xlat
and
repnz
push
mov
lods
imul
inc
mov
cmp
sub
push
pop
ret
clc
hlt
push
loopne
scas
inc
jae
push
popf
sbb
jo
int
jg
jmp
faddl
jb
pop
repz
sub
mov
daa
jle
shlb
test
add
outsl
inc
push
cwtl
xchg
xor
addr16
into
inc
cmp
stc
jg
je
es
adc
dec
mov
xchg
add
mov
lret
and
ss
rorl
scas
xor
add
mov
pusha
loope
daa
pop
or
out
xchg
loope
rcrb
addr16
xor
sbb
addr16
add
outsb
xor
add
cmp
mov
popf
mov
xchg
or
pop
insb
out
aad
push
aas
push
mov
stos
inc
cwtl
in
mov
mov
mov
dec
pop
xor
xchg
xchg
mov
outsb
popf
xor
jnp
adc
mov
pushf
ds
pop
cmpsb
or
sti
push
enter
mov
mov
lcall
sub
add
insw
dec
inc
mov
push
test
test
pop
cwtl
push
out
movsl
fucomip
push
xchg
xchg
sub
mov
cmpb
cmp
push
adc
mov
jp
cmp
lret
dec
jno
stos
xchg
pop
push
add
hlt
cmpsl
in
pop
xchg
pop
cmp
pop
out
mov
iret
pushf
mov
or
into
mov
aam
and
add
xor
aaa
xchg
cmpsb
jle
daa
xchg
or
test
sub
pop
out
aad
lahf
leave
scas
mov
jp
inc
xor
insl
jbe
ja
andb
xlat
shrl
push
ljmp
xor
jo
jno
scas
xlat
and
repz
in
test
mov
in
dec
mov
cmp
pop
inc
mov
movsl
xchg
lcall
fisubl
fiaddl
xchg
pushw
push
cmc
dec
flds
jmp
xchg
gs
int3
xor
test
and
push
fmull
js
jae
jecxz
add
sbbl
jbe
test
push
rcrb
pop
mov
push
or
sbb
xchg
add
bound
outsl
ds
pop
mov
and
pop
fnstsw
ret
cmp
icebp
pop
test
imul
push
ds
mov
push
aas
xchg
sub
mov
fisubrl
scas
pop
daa
in
insb
jo
std
test
jle
xchg
mov
mov
test
dec
mov
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
jmp
enter
js
enter
mov
xchg
aad
movsl
push
or
lret
or
push
aad
sbb
jmp
movsl
mov
cmc
das
cmp
in
add
mov
in
pop
push
inc
enter
add
inc
dec
out
jl
fiaddl
mov
jp
mov
mov
in
and
add
cmp
stos
jp
dec
mov
cmp
fsubr
repnz
orl
jno
dec
adc
jecxz
fcmovbe
xor
movsb
jb
std
cmp
dec
mov
faddl
mov
sub
hlt
pop
jo
add
int3
mov
mov
xor
loopne
pushf
cwtl
push
sub
dec
inc
mov
jmp
adc
cmpsb
aas
jp
pop
mov
jns
orb
je
mov
lahf
mov
mov
xchg
repnz
dec
in
jmp
in
jg
sbb
inc
into
xchg
dec
lret
lahf
loop
mov
mov
lea
sbbb
mov
lret
das
shll
imul
push
pop
outsl
aaa
dec
xor
and
or
test
dec
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
or
xor
or
xor
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
push
pop
sub
mov
mov
sub
mov
add
mov
mov
mov
shl
xor
xor
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
push
adc
xor
xor
shrd
or
shr
or
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
xor
push
push
sub
push
adc
mov
add
mov
not
shrd
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
push
call
orl
mov
and
or
sub
not
shr
mov
mov
adc
xor
movzbl
adc
mov
cmpl
mov
movl
jmp
movl
movl
jb
push
pushl
call
decl
orl
and
andl
xor
add
xor
cmpl
movl
mov
jmp
mov
mov
jae
pushl
push
push
push
pushl
push
call
adc
mov
adc
mov
and
add
xor
or
mov
xorl
mov
shl
cmpl
not
mov
movl
mov
jmp
mov
jge
push
call
sbb
sbb
inc
addl
not
mov
shrd
cmpl
mov
mov
jmp
movzwl
jle
push
pushl
call
xorl
andl
mov
sbb
or
xor
adcl
xor
xor
shr
mov
and
mov
xor
or
orl
mov
cmpl
movl
mov
movl
jmp
movl
jl
push
call
mov
xor
or
adc
adcl
or
cmpl
movl
movl
mov
jmp
mov
jg
push
push
push
push
push
pushl
push
call
mov
sub
mov
subl
and
mov
sub
or
and
mov
xor
or
sub
or
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
add
andl
add
sbb
add
xor
mov
cmpl
movzbl
not
movzwl
movl
jmp
movl
jbe
push
push
push
call
sub
or
mov
or
sub
movl
xor
sbb
mov
mov
adc
mov
mov
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
shl
cmpl
mov
not
jmp
movl
jle
pushl
call
and
sbb
mov
or
sub
xor
or
shld
sub
shl
and
mov
cmpl
mov
mov
movzwl
mov
jmp
movl
movl
jl
push
push
call
sbb
or
mov
and
sbb
mov
mov
sub
mov
mov
negl
mov
subl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
mov
mov
addl
xor
orl
shld
shl
andl
xor
mov
addl
xor
movl
mov
movl
cmp
jne
movl
cmp
movl
je
mov
adcl
mov
movzwl
and
mov
shl
movl
mov
sbbl
xor
shr
incl
or
mov
sbb
mov
sub
mov
mov
or
mov
sub
mov
sbb
push
cmpl
movl
movl
movl
jmp
mov
movl
jne
call
xorl
incl
subl
sbbl
andl
andl
pop
sub
mov
add
adcl
mov
mov
mov
add
lea
mov
xor
mov
sbb
mov
sbbl
xor
xorl
shr
shl
or
mov
movl
mov
mov
subl
xor
shr
shl
adcl
or
push
lea
push
lea
push
call
mov
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
or
mov
mov
jne
mov
mul
ret
push
add
mul
mov
xor
mov
addl
mull
orl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
mov
inc
push
call
pushl
call
test
jg
movl
addl
movl
movl
movl
movl
movl
movl
cmpl
mov
not
movl
mov
jmp
movl
ja
pushl
push
push
call
sub
mov
sub
mov
inc
adc
movzwl
and
sub
mov
mov
mov
cmpl
not
movl
jmp
movl
jne
push
pushl
call
inc
mov
adc
mov
sbbl
movl
adcl
xor
mov
adcl
or
andl
or
subl
add
mov
mov
adc
cmpl
not
mov
mov
movl
jmp
movl
jbe
push
call
xor
inc
sbb
sbbl
inc
xor
xor
mov
add
mov
mov
adc
and
mov
movl
movzbl
add
mov
movl
movl
and
movl
mov
subl
mov
mov
mov
sub
or
mov
mov
andl
push
push
or
or
push
subl
push
call
push
andl
push
push
push
call
mov
mov
mov
movl
cmp
movl
jb
ja
cmp
jbe
cmpl
mov
movl
mov
jmp
movl
jge
pushl
push
pushl
pushl
call
or
sbb
adc
adc
orl
adc
movl
movzbl
xor
movl
mov
movl
movl
or
movl
add
movl
cmpl
mov
movl
mov
movl
jmp
movl
not
jne
push
pushl
call
dec
sbb
adc
adc
notl
add
neg
and
movl
mov
adc
movl
xorl
movl
sub
mov
add
movl
movl
cmpl
not
movzwl
mov
jmp
mov
mov
jbe
push
push
pushl
call
sbbl
and
or
sbb
incl
adcl
movl
mov
mov
or
mov
sbbl
or
orl
sub
sbbl
and
mov
or
xor
add
pushl
mov
sbbl
mov
adcl
add
adcl
xor
div
mov
pushl
adcl
xor
movl
pushl
andl
pushl
or
xorl
mov
andl
or
sbbl
and
sbb
mov
sub
mov
xorl
pushl
mov
or
mov
mov
lea
xor
mov
orl
xor
or
mov
addl
or
pushl
xorl
mov
mov
subl
and
sbbl
div
cmpl
notl
notl
jmp
movl
jge
push
push
pushl
push
push
push
call
adc
sub
xor
adc
addl
sub
mov
movl
add
xor
not
mov
sub
dec
mov
addl
pushl
shr
pushl
pushl
incl
call
add
movl
sub
movl
sbb
mov
mov
andl
xor
div
subl
or
xor
andl
pushl
call
sbb
pushl
xorl
mov
xor
xor
mov
sub
xor
pushl
movl
cmpl
mov
mov
mov
jmp
not
mov
je
call
sbb
add
sub
sbb
adcl
pushl
movl
sbb
mov
mov
andl
or
sub
cmpl
mov
mov
movl
jmp
mov
movl
je
push
call
movzwl
and
mov
and
movzwl
add
xorl
movl
mov
xor
div
orl
xor
orl
pushl
pushl
andl
call
mov
sub
mov
movl
cmpl
mov
movl
mov
jmp
mov
jl
push
call
adc
addl
movzbl
sub
and
add
adc
movl
cmpl
movl
mov
movl
movl
jmp
movl
mov
jb
pushl
push
push
push
pushl
push
call
xor
add
adc
mov
andl
sbb
sub
or
sbb
xor
movl
add
movl
movl
xorl
movl
subl
movl
mov
xorl
mov
sub
sbbl
and
dec
and
add
mov
orl
sub
cmpl
movl
movl
movl
movl
jmp
mov
mov
jbe
push
push
pushl
push
push
call
xorl
adcl
orl
sbb
adcl
sbbl
mov
adc
mov
pushl
sub
mov
mov
lea
push
cmpl
mov
mov
jmp
movl
je
push
push
push
call
adcl
xor
movzbl
or
negl
pop
andl
xor
div
mov
sub
pushl
mov
mov
adc
pushl
movzbl
xor
mov
xorl
pushl
subl
and
sbb
pushl
addl
mov
pushl
xor
and
pushl
movl
mov
sub
decl
pushl
subl
call
mov
mov
sub
and
movl
cmpl
movzbl
mov
jmp
movl
jle
call
add
or
xor
xor
add
orl
andl
not
sbb
movl
cmpl
movzwl
movl
movl
mov
jmp
mov
mov
jae
push
push
pushl
push
pushl
push
push
call
and
sbb
sub
adc
sbbl
sbb
adc
movl
add
movl
mov
mov
adcl
sub
neg
mov
and
subl
mov
adcl
xor
shr
imul
decl
pushl
subl
call
dec
cmp
movl
jne
movl
movl
mov
addl
mov
adcl
movl
sbbl
mov
adcl
call
lea
cmpl
mov
movl
mov
jmp
mov
mov
jle
pushl
call
adc
subl
adc
add
adc
mov
lea
sub
mov
and
mov
dec
mov
sbbl
mov
and
mov
addl
xor
add
shl
shr
xor
xor
mov
sub
xor
or
adc
mov
cmpl
mov
not
mov
mov
jmp
movl
movl
jbe
push
push
push
call
sub
or
sbb
xor
or
sub
mov
mov
mov
mov
cmpl
movl
mov
jmp
mov
mov
jle
push
push
call
sub
adc
mov
xor
xor
sub
xor
xor
not
andl
add
mov
mov
shrd
adcl
shr
mov
cmpl
mov
mov
not
jmp
movl
movl
jg
pushl
call
inc
adc
sub
and
inc
mov
orl
xor
xor
or
sbb
mov
orl
push
andl
pushl
adcl
lea
push
andl
shl
orl
call
sbbl
lea
orl
push
mov
addl
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
subl
push
push
and
movl
movl
cmpl
mov
mov
jmp
notl
mov
jle
push
call
add
adc
adcl
sbb
or
sbb
xor
xor
sbb
movl
movzbl
adc
mov
mov
cmpl
mov
mov
movl
jmp
mov
mov
jb
pushl
pushl
call
xorl
addl
andl
addl
incl
mov
andl
xor
subl
div
imul
adc
mov
subl
xor
and
sub
mov
subl
xor
div
mov
mov
adc
sub
mov
andl
movl
movl
movl
mov
add
add
xor
mov
mov
and
xor
sub
imul
mov
and
sub
notl
mov
movl
cmpl
notl
mov
movl
jmp
movl
mov
jbe
push
push
pushl
call
adc
movzbl
adc
xor
xor
or
mov
sub
or
not
movl
movl
movl
cmpl
mov
movl
notl
movl
jmp
not
movzwl
jg
pushl
push
push
pushl
call
dec
or
mov
mov
sub
sub
movl
adc
adc
mov
imul
sub
mov
cmpl
movl
movl
jmp
movl
jb
push
push
call
or
adcl
xor
and
xor
add
add
cmpl
notl
mov
mov
jmp
movl
movl
jne
call
xor
sbb
andl
mov
mov
or
sbb
and
add
imul
sbb
imul
mov
and
or
negl
mov
addl
xor
mov
mov
and
mov
orl
mov
lea
mov
inc
movl
sbbl
movl
xor
movl
and
mov
cmpl
not
mov
mov
jmp
mov
jae
push
push
pushl
call
movl
movzbl
add
xor
sbbl
inc
xor
orl
mov
movl
or
cmpl
movl
mov
mov
jmp
mov
jge
push
pushl
push
push
call
mov
sbb
mov
dec
negl
add
adcl
adc
xor
add
cmpl
mov
movl
not
mov
jmp
movl
movl
jg
pushl
pushl
call
andl
and
sbb
xor
add
sbb
mov
mov
or
add
xor
or
mov
sub
movl
movl
movl
cmpl
movl
not
jmp
mov
mov
jae
push
push
pushl
call
mov
mov
add
orl
add
add
and
not
movzbl
xor
mov
add
cmpl
notl
movl
mov
jmp
movl
movl
jbe
pushl
pushl
push
push
push
pushl
call
add
add
subl
xor
not
andl
adcl
mov
sbbl
sub
mov
addl
lea
cmpl
movzbl
movl
mov
jmp
movl
jge
push
push
push
push
push
call
sbbl
xorl
add
add
add
mov
sub
or
xor
sub
movl
mov
adc
movl
xor
movl
mov
or
add
adcl
imul
dec
mov
addl
imul
adc
xor
mov
movl
div
cmpl
movl
mov
movl
jmp
movl
mov
je
pushl
call
sbb
addl
xor
addl
xorl
mov
sbb
sub
mov
and
sub
xor
mov
movl
cmpl
notl
mov
jmp
mov
mov
je
pushl
push
push
call
xor
adc
sbb
or
sub
movl
movl
mov
add
mov
xor
div
imul
add
mov
subl
xor
xor
mov
sub
mov
div
xor
orl
mov
movl
or
movl
cmpl
mov
mov
notl
mov
jmp
mov
ja
push
pushl
pushl
pushl
call
and
adc
movzbl
or
addl
mov
or
mov
and
movl
mov
or
mov
orl
sub
shr
andl
sub
mov
imul
mov
andl
and
add
mov
orl
sub
xor
xor
add
mov
mov
adc
movl
orl
movl
xor
mov
movzbl
xor
or
xor
mov
or
or
sub
xor
xor
xor
mov
mov
xorl
movl
sub
movl
add
movl
or
movl
and
movl
movl
cmpl
movl
mov
movl
mov
jmp
movl
mov
jbe
push
pushl
pushl
push
call
mov
or
andl
xorl
andl
mov
mov
add
cmpl
movzbl
notl
jmp
mov
jg
call
xor
or
mov
adc
sbb
xor
sbb
and
or
movl
mov
add
mov
subl
sub
not
mov
addl
imul
or
imul
mov
andl
or
mov
lea
push
call
mov
xor
xor
sbb
mov
mov
cmpl
mov
mov
jmp
movl
jge
pushl
call
xor
or
mov
sub
movzbl
sub
addl
mov
mov
and
movl
movzwl
xor
mov
add
imul
add
and
or
sub
mov
or
mov
xor
add
mov
addl
div
xor
cmpl
movl
mov
mov
jmp
movl
not
jl
push
call
mov
mov
sbb
add
adc
not
sub
add
add
mov
movl
mov
add
movl
xor
movl
movzwl
and
mov
movl
sub
movl
adc
movl
movl
add
movl
mov
and
movl
movl
and
movl
orl
movl
adc
mov
andl
mov
cmpl
notl
mov
movl
jmp
movl
movl
jl
pushl
push
push
push
pushl
pushl
call
orl
sbbl
sub
adc
add
adc
mov
sbb
and
add
sub
mov
xor
xor
sub
xor
sub
cmpl
mov
movl
not
jmp
mov
ja
pushl
push
pushl
push
push
push
push
call
not
xor
xor
or
mov
sub
or
sub
adc
andl
or
imul
sub
mov
incl
lea
mov
mov
mov
xor
mov
subl
mov
sub
mov
sbb
xor
or
add
mov
mov
xor
lea
add
and
mov
sub
adc
add
mov
cmpl
mov
notl
movl
jmp
movl
mov
jne
call
mov
mov
sub
or
sbb
xor
adc
andl
and
movl
cmpl
mov
mov
mov
mov
jmp
movl
mov
jge
pushl
push
push
call
mov
mov
or
subl
sbbl
xor
add
adc
movzwl
sbb
mov
movl
cmpl
movzwl
mov
movzbl
mov
jmp
movzbl
movl
jge
push
push
call
and
sub
mov
adc
adc
xor
movl
movl
mov
sbb
mov
sbb
mov
adcl
xor
adcl
xor
mov
call
mov
adc
mov
or
mov
and
mov
addl
mov
xorl
xor
subl
xor
adcl
mov
call
or
mov
xor
or
add
mov
mov
add
mov
orl
xor
notl
xor
andl
mov
adcl
call
subl
mov
movzwl
add
mov
andl
mov
movzwl
adc
mov
mov
xor
adcl
xor
adcl
mov
subl
mov
or
mov
xorl
mov
andl
mov
adcl
call
mov
or
cmpl
notl
movl
movl
jmp
notl
mov
jae
push
call
xorl
adcl
incl
xorl
addl
sbbl
orl
mov
adcl
or
adcl
push
push
andl
push
subl
push
xorl
call
mov
movl
cmp
jne
movzwl
sbb
mov
adc
mov
addl
xor
sbbl
xor
mov
incl
call
mov
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
call
xor
add
sbb
not
add
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
mov
mov
add
push
xor
push
negl
mov
or
jne
mov
cmpl
movl
mov
mov
movzbl
jmp
mov
jbe
push
call
xorl
movzbl
sbb
movzwl
and
subl
xor
sub
or
mov
cmpl
mov
mov
movl
jmp
mov
notl
jle
push
pushl
call
sbb
decl
addl
sbbl
adcl
or
and
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
cmpl
movl
mov
movl
jmp
movl
movl
ja
pushl
push
pushl
call
xor
or
sbbl
mov
and
mov
xor
sbb
mov
xor
xor
sub
and
add
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
orl
shld
movl
shl
ret
dec
mov
addl
xor
and
shl
ret
xor
xor
ret
