push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
push
jmp
adc
adc
int
adc
add
lret
jmp
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
lea
idivl
enter
inc
jnp
mov
dec
adc
mov
push
jmp
push
cmpsb
xor
loop
lods
mov
add
jecxz
in
xor
fstl
inc
or
and
int
je
jmp
mov
adc
xor
inc
in
sti
adc
out
inc
or
mov
push
sarl
lret
bswap
daa
adc
loop
jne
in
jle
push
push
push
out
je
rorb
push
shlb
xchg
or
dec
rol
jne
xor
push
leave
mov
jge
inc
or
ret
dec
int
cwtl
imul
push
add
cmpsb
xor
pop
sub
sub
scas
leave
xor
lods
mov
pushf
test
ss
roll
insb
cs
cmpsl
sbb
out
sub
cmc
mov
out
mov
pop
cmp
jbe
inc
mov
stc
adc
test
pusha
xchg
aad
lods
mov
mov
stos
or
inc
lcall
or
pop
cmp
sub
pop
aaa
adc
leave
inc
ret
inc
xlat
loopne
adc
lret
std
sarl
xchg
lcall
lret
sub
stos
xor
rcrb
push
test
mov
xchg
cld
movsb
inc
sub
in
xchg
or
repz
aaa
sarl
xor
mov
fimull
insb
scas
and
insl
and
dec
daa
mov
mov
pop
inc
in
ljmp
jmp
js
sub
fmuls
add
pop
outsb
mov
jecxz
jge
cmc
or
mov
and
clc
call
mov
mov
push
sti
lret
out
cltd
inc
mov
sbb
hlt
cmpsb
enter
pop
scas
call
cwtl
nop
shrb
mov
xor
aam
int
mov
jno
mov
clc
cmp
adc
push
jns
sub
sbb
cmp
mov
mov
fs
repnz
xor
jecxz
inc
or
cmp
or
idivb
push
push
mov
sub
sub
sbb
cmp
mov
cmp
ljmp
mov
aam
fistl
cli
fld
test
mov
mov
cmp
mov
mov
movsl
imul
jne
pop
ret
pop
pop
fistpll
add
xchg
loopne
jmp
jg
sbbl
clc
xor
jnp
imul
pop
mov
insb
idivb
faddl
xor
inc
aad
popf
pop
adc
add
mov
mov
sbb
pop
xor
fidivrl
ds
imul
loop
fidivrs
sbb
inc
and
sbb
inc
add
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
xor
adc
adc
adc
jb
loope
out
mov
nop
cmp
jl
xlat
cmp
xor
aas
jo
clc
inc
loop
sar
jae
cmp
and
test
sbb
test
or
xlat
mov
jae
fwait
call
ud2
out
stos
or
xor
testb
push
mov
loope
movsb
mov
pop
mov
std
jp
clc
ret
and
ficoml
lds
scas
push
pop
jns
bound
mov
push
mov
xchg
sbb
and
push
fnstsw
xor
pop
jmp
es
push
lods
cmp
pushf
repz
adc
inc
mov
ret
cli
pop
test
movsb
dec
in
ja
movsb
sub
dec
jp
mov
ja
cmc
cmc
mov
iret
imul
xor
and
fisttpl
adc
scas
sbb
dec
les
je
lds
incb
ret
mov
inc
cmp
aas
xor
subl
mov
fsubs
mov
cmp
sbb
rolb
fisubrs
pop
xchg
enter
mov
popf
push
dec
cmpsb
aam
daa
fs
xchg
arpl
xchg
xor
mov
adc
jmp
stos
popf
cmp
mov
sarb
fwait
jge
jo
das
pop
test
ds
xlat
dec
jb
fwait
mov
out
cmc
and
insb
or
mov
dec
inc
xor
je
xchg
out
and
and
insl
jae
test
imul
mov
push
xchg
xchg
inc
packuswb
xchg
mov
stos
lcall
fists
sarb
fildl
xor
mov
mov
popa
jmp
sbb
test
movl
cs
stc
popf
push
test
mov
andb
mov
dec
test
fisttpl
scas
pop
mov
imul
daa
sub
and
mov
ret
mov
ret
loop
jno,pt
lret
pop
or
out
je
cmpsl
and
fcmovbe
inc
arpl
xchg
xchg
cmpsl
decl
push
push
jae
pop
add
arpl
mov
adc
inc
jbe
iret
mov
mov
scas
fimull
push
pop
or
in
bound
mov
inc
popf
sbb
popf
or
add
std
jg
sub
out
cmp
cmp
outsl
sbb
in
mov
sarl
mov
cmp
loopne
adcl
pop
outsb
and
inc
cwtl
cmp
sub
roll
int3
mov
lea
mov
mov
push
add
sub
jns
scas
cld
xchg
mov
mov
fldl
mov
enter
mov
xor
gs
dec
jg
cmpsb
std
lock
xchg
sar
push
outsb
cmp
js
push
or
and
pop
lahf
mov
or
xor
jo
sub
icebp
mov
iret
mov
lret
testb
in
fadd
sub
mov
mov
adc
mov
outsb
int3
fistpl
jo
cmp
dec
add
adc
fcmovu
rorb
ljmp
sahf
xchg
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
cmp
adc
int
adc
ror
xchg
das
xlat
fucomp
pop
pop
hlt
xchg
pushf
fs
mov
cltd
insl
into
out
mov
test
add
xchg
nop
cmpsl
cli
divb
nop
scas
call
add
loopne
fcoms
decl
repnz
out
and
and
add
jns
add
adc
inc
clc
cmpsb
mov
jns
lods
pop
dec
bound
xchg
mov
insb
pop
insb
cli
add
and
fnstcw
scas
inc
cmovno
scas
jecxz
jge
rcrl
fsubrs
push
mov
inc
mov
sub
call
test
adc
dec
sub
ret
xchg
xchg
push
scas
push
enter
js
mov
out
sub
std
adc
mov
dec
adc
mov
out
sub
ret
adc
lock
xchg
push
mov
jns
mov
jo
pop
lcall
inc
sub
sbb
jmp
sbb
std
or
push
not
push
fmull
xchg
cmpl
sbb
pop
lahf
jmp
mov
ljmp
repnz
clc
stc
or
push
es
push
movsb
mov
jl
xchg
lds
shrl
pop
test
sub
sbb
imul
cmp
mov
insl
dec
out
xor
arpl
add
test
adc
sub
inc
or
hlt
lret
imul
aaa
outsl
nopl
cli
fstps
xor
pushf
xlat
inc
mov
adc
mov
xchg
xor
inc
mov
popa
and
mov
inc
push
jo
mov
xor
fcmovu
adc
pop
mov
xchg
mov
outsb
xchg
loopne
nop
or
dec
fs
mov
push
push
inc
xchg
out
adc
xchg
into
add
push
xchg
dec
popa
mov
or
stos
adc
lret
in
in
neg
xor
hlt
fs
sub
daa
inc
gs
push
jl
icebp
adc
xchg
std
cmpsb
mov
mov
jp
or
shl
out
xor
imul
cmpsb
pop
adc
sahf
nop
dec
int3
lds
pop
xor
push
pop
xor
out
jne
mov
dec
cltd
jl
in
fisubs
stos
arpl
jmp
mov
pop
push
mov
dec
std
int
lock
adc
shrb
aaa
inc
and
mov
cmpsb
mov
or
insl
add
push
in
or
adc
jp
dec
and
or
jge
mov
into
and
mov
ficompl
pushf
pop
int3
stos
test
out
jmp
arpl
push
mov
dec
ret
hlt
inc
adc
sbb
xchg
lret
cmp
inc
sbb
push
out
dec
sub
lock
pop
dec
inc
or
fsts
sub
cmp
das
mov
outsl
mov
cmp
adc
xchg
incl
shrl
fs
jmp
adc
in
push
dec
xchg
stos
test
xor
mov
dec
popa
aas
sub
ljmp
adc
or
jecxz
ljmp
stos
lret
xor
stos
jp
out
cmpl
call
inc
pmuludq
jo
xor
rolb
pop
add
add
jp
insb
sub
decl
mov
jno
add
add
add
lret
jo
add
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
add
pop
mov
bound
dec
loope
iret
nop
ds
xchg
cli
cmp
inc
xchg
jo
dec
popf
icebp
int3
addr16
fsub
push
inc
imul
enter
push
xor
cmpsl
jbe
ja
or
imul
cmp
cmp
cmc
fstpl
inc
mov
jmp
cwtl
sbbl
pop
cmpsb
cmpsb
cli
hlt
stc
loopne
push
sbb
outsb
jno
xchg
pop
jmp
mov
daa
cltd
inc
sbbb
int
inc
repz
mov
sbb
das
imul
scas
jl
idiv
fbld
push
mov
push
sbb
adc
dec
sub
pop
push
pop
or
inc
leave
sbb
and
or
mov
test
mov
cs
ss
mov
mov
mov
jne
sbb
xor
sub
inc
adc
mov
mov
and
scas
divb
int
fistps
imull
rcrb
out
insb
fists
dec
clc
dec
adc
dec
xchg
fdivrl
icebp
scas
jg
pushf
push
fs
out
or
shrl
ss
xor
mov
mov
or
adc
insl
movsl
push
int
jle
mov
inc
psubb
sahf
mov
pop
adc
cs
xor
dec
mov
into
sbb
push
not
jne
add
cli
fisttpl
mov
movsb
fcom
andl
and
dec
pusha
sbb
popf
xchg
dec
xor
stos
lahf
pop
idivb
cmp
dec
mov
ljmp
lret
jl
sbbb
inc
loop
rcrl
xor
in
add
jbe
lods
lea
cs
jecxz
cwtl
fimull
shrl
jmp
int3
and
push
xchg
xor
pop
mov
push
inc
mov
xchg
inc
insl
mov
hlt
sti
je
lods
jne
adc
push
mov
or
push
out
adc
loop
xchg
test
sbb
xchg
mulb
loopne
outsb
jg
data16
stc
mov
mov
loopne
out
xchg
outsl
xchg
dec
add
adc
adc
in
daa
adc
adc
jl
repnz
fwait
dec
je
pop
pop
adc
cld
out
mov
inc
xchg
sbb
aam
lock
scas
cmpsb
inc
mov
outsl
fcompl
rorb
fdivl
jl
lcall
cmpsl
mov
mov
or
das
les
mov
iret
mov
aad
cwtl
in
xchg
pop
push
cmpl
jmp
enter
cmp
sbb
rep
fsubs
rcrl
in
and
sub
ret
mov
jecxz
xor
inc
pop
subl
mov
pop
cli
or
push
xchg
push
push
sub
arpl
mov
lea
xchg
je
push
mov
in
dec
out
jl
push
inc
jno
xchg
repz
mov
cmp
cld
adcb
push
cmpsl
ljmp
dec
dec
mov
scas
mov
push
jnp
xor
icebp
aad
sbb
pop
nop
xchg
jno
js
xor
sbb
test
sti
push
repnz
dec
push
inc
lods
jle
addr16
fwait
insb
pop
jbe
je
filds
and
sahf
mov
cmc
or
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
adc
stos
in
notl
adc
adc
adc
mov
pop
xchg
or
and
fs
mov
jnp
mov
in
cmp
sbb
sub
xor
data16
inc
jge
jmp
aad
mov
lret
xchg
mov
pop
adc
and
enter
push
addl
cmp
fstl
je
add
cmp
popa
push
push
fsubrp
addr16
jmp
lret
mov
mov
mov
sbb
frstor
cmp
pop
mov
push
pushf
mov
sahf
setnp
adc
cs
lock
pusha
mov
test
je
sbbl
add
xchg
xchg
jmp
sub
repz
adc
and
inc
mov
cmp
orl
inc
das
cmp
cld
imul
dec
out
int
fisttpl
rcrl
shlb
add
jp
insb
inc
loope
cmc
cwtl
packssdw
pop
idiv
ror
test
movsb
mov
jp
lods
inc
data16
popa
push
out
test
xchg
sbb
mov
cltd
mov
lret
push
scas
test
lock
adc
or
hlt
or
dec
loopne
fsubrl
inc
shr
and
mov
adc
dec
sbb
stos
out
adc
ja
xchg
lock
mulb
jae
fiaddl
mov
lahf
xchg
jecxz
xchg
ret
mov
mov
sub
cmc
xchg
pusha
dec
inc
stos
push
cmp
xor
fiadds
test
mov
and
mov
in
jae
cltd
add
cmp
mov
add
xchg
std
ficomps
test
adc
das
adc
divb
in
rorl
pop
addb
int3
xlat
cwtl
mov
daa
lahf
in
mov
mov
mov
xchg
mov
inc
decl
adc
sbb
xor
xor
push
push
test
fstps
rorl
mov
int3
xchg
fs
push
int
pop
pop
insb
fstpt
lock
fstpl
mov
or
xchg
mov
or
pop
sub
adcb
or
out
mov
aas
aas
pop
push
loope
jns
mov
ds
mov
or
les
and
clc
mov
cmpsl
add
test
fsub
pop
lahf
and
inc
xor
es
or
pop
popa
adc
or
jmp
leave
sub
lds
adc
push
pop
fisttps
xchg
leave
enter
aaa
imul
in
ds
sti
mov
push
es
inc
sbb
xor
or
push
sahf
mov
std
mov
popa
popa
fwait
js
add
inc
push
adc
jne
jmp
negl
push
push
inc
mov
fnstenv
leave
mov
and
dec
jae
ljmp
cmp
mov
icebp
in
cli
das
in
mov
mov
jns
addb
aam
xchg
xor
scas
inc
jg
adc
ret
popa
lahf
fmuls
gs
xchg
inc
lods
pop
lret
shrl
insb
inc
adc
setne
bound
sarb
mov
jecxz
inc
sub
dec
push
cmpsl
jb
jb
sub
push
fcomip
cmp
xchg
jae,pn
cmp
mov
int
inc
add
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
push
mov
adc
int
adc
call
and
xorb
rcl
xchg
mov
int
pop
ja
xor
xchg
push
push
mov
add
scas
xlat
jle
sub
push
mov
inc
xor
movsb
jmp
insl
cmp
sbb
add
mov
test
inc
adc
cmp
negl
cmpsb
js
mov
or
push
fnstsw
jno
lret
notl
jno
sbb
jl
lds
push
cmpsl
lahf
push
shlb
enter
inc
mov
pushf
ljmp
push
or
xor
call
nop
mov
jbe
ja
xor
shlb
fld
enter
ret
fwait
cmp
fs
movsl
or
jmp
pop
pop
movsb
inc
aad
jbe
mov
inc
mov
jbe
loopne
pop
int3
dec
dec
scas
mov
adc
shlb
pop
dec
push
ljmp
out
mov
push
cmpsb
inc
call
push
jno
inc
sub
fadds
xchg
test
in
and
jo
dec
mov
xor
test
fcomip
jmp
push
stc
lea
mov
scas
imul
ss
lcall
fmul
ds
cmp
add
cmp
fistpl
popf
lods
mov
rcll
pop
pushf
out
hlt
cmp
or
pop
int3
pusha
decb
or
jmp
out
push
cli
mov
inc
subl
adc
pop
loopne
sub
cwtl
push
inc
mov
stos
pop
add
ljmp
out
adc
scas
adc
sbb
mov
sbb
gs
and
lret
add
ja
xor
adc
push
mov
lds
xchg
stc
xchg
mov
aad
mov
loope
or
push
adc
mov
mov
cmp
ds
add
in
imull
scas
jg
lret
scas
xchg
jne
mov
adc
push
dec
lods
and
mov
out
out
xchg
std
es
xchg
mov
push
and
dec
outsl
inc
fucompp
pop
xor
push
nop
add
mov
mov
fwait
lea
rcrl
mov
rclb
inc
or
jp
dec
jge
lcall
int3
testb
pop
xchg
cmp
xorb
add
addr16
sti
lea
dec
stc
addr16
and
or
test
push
outsb
ljmp
pop
inc
xchg
and
push
cs
cltd
xchg
unpckhps
push
xor
push
mov
es
add
stos
loop
jle
jmp
mov
mov
in
adc
or
adcl
pop
adc
push
lahf
enter
in
dec
mov
in
cmp
and
orb
push
faddp
lret
stos
push
add
notb
mov
loop
xor
test
and
cmp
xchg
inc
cld
clc
sti
pop
xchg
sbb
adc
jl
xor
mov
mov
pop
lods
mov
inc
je
inc
mov
xchg
sbb
dec
out
add
ljmp
sub
andb
aas
outsb
sub
addr16
in
rorb
push
in
loope
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
xor
sub
in
adc
int
adc
push
mov
add
shr
push
xchg
push
fisubl
cwtl
out
push
xchg
dec
inc
in
add
out
ds
jns
and
mov
out
dec
pop
adc
inc
fwait
xchg
mov
movsb
idivl
sub
ret
mov
cwtl
mov
divb
std
mov
mov
dec
mov
mov
push
mov
push
jo
jl
testl
iret
pop
scas
and
and
mov
sbb
icebp
cmp
int
dec
pop
js
mov
xchg
imul
jle
and
xchg
pushl
add
test
inc
sti
pop
in
mov
or
aaa
lock
test
pop
outsl
cs
sub
or
cmp
or
addb
cmp
add
xchg
int
sbb
ss
adcb
enter
jno
rcrl
inc
push
xorl
cmp
in
push
stos
lret
test
cs
adcl
aas
ja
lahf
dec
loopne
movsb
icebp
sub
idivb
sbb
aam
loopne
arpl
push
add
lods
xor
xchg
fwait
mov
imul
popf
xor
inc
push
fcoms
jns
mov
cmp
push
clc
mov
fmul
push
jmp
jo
dec
int3
cmc
dec
or
push
nopl
std
jae
enter
xchg
mov
adc
xor
xchg
mov
incl
jb
push
pop
sub
xchg
into
aam
mov
imul
sbb
jecxz
in
lods
xchg
jg
lods
inc
pop
out
das
fnstenv
mov
je
int
jmp
mov
in
push
shr
sbb
loop
xor
std
mov
cmpsb
fsubrs
cmp
les
or
out
adc
mov
pop
jb
adc
jl
sahf
mov
clc
cmpsl
add
roll
mov
and
repnz
stos
movsl
inc
fldenv
fstps
test
clc
mov
sbb
aad
fnstenv
push
clc
arpl
mov
arpl
mov
nop
mov
stc
dec
adc
outsb
out
jae
outsb
dec
lret
aad
xchg
and
movsl
or
jmp
mov
cli
dec
and
sub
mov
shrl
test
push
inc
ret
shlb
mov
aad
movsb
cld
push
call
cwtl
mov
mov
ficoms
test
sub
insb
pushf
test
cmp
cwtl
inc
add
xlat
jb
sbb
xchg
imul
mov
mov
xchg
icebp
mov
cmp
repz
popa
jp
rcrl
dec
sub
or
dec
outsb
jge
shlb
adc
mov
push
test
arpl
rolb
adc
ss
cmc
jb
cmp
cmpsl
imul
push
jle
aad
mov
or
mov
sub
cld
push
push
xor
mov
inc
leave
ret
xchg
dec
lds
idivl
jmp
adc
fstps
into
pop
cld
and
mov
jecxz
test
stos
sub
xchg
pop
xor
scas
inc
adc
fsts
or
jnp
push
shlb
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
mov
dec
mov
int
adc
push
fs
cltd
test
jmp
cmp
std
stc
leave
ja
adc
adc
add
imul
mov
inc
cmp
shl
push
out
imul
es
add
outsb
add
shrb
push
std
int
xchg
xor
xchg
stc
push
sbb
cltd
inc
flds
outsb
int3
shlb
inc
out
jns
into
inc
adc
adcb
mov
divl
cmp
pop
ja
xlat
and
hlt
js
push
and
push
mov
ret
and
lods
dec
ja
arpl
rcrb
mov
cmp
and
add
scas
jne
push
jnp
dec
jne
sbb
fwait
jnp
xchg
loop
adc
add
or
adc
xor
fstps
ds
jae
stos
daa
dec
std
dec
fstps
push
sbb
rcl
adcb
mov
repz
dec
lea
test
inc
jne
or
lea
test
pop
sbb
hlt
or
sub
imul
imul
mov
aaa
push
sub
adc
sub
and
stos
mov
xor
jo
cmp
filds
out
push
pop
mov
jl
mov
clc
jg
pop
mov
xor
aaa
into
addr16
sbb
add
loope
lahf
adc
cmp
lret
hlt
mov
in
fmuls
test
ffreep
loop
movsl
mov
mov
or
stos
clc
mov
push
pop
test
adc
shlb
mov
jno
xchg
fisttpll
xorl
and
ljmp
mov
sbb
sub
bound
jp
push
mov
cmp
sub
popf
fnstenv
sbb
scas
mov
push
call
mov
bound
les
pop
push
clc
movsl
inc
cmp
repz
mov
dec
push
push
je
mov
daa
adc
dec
mov
pop
stos
push
jo
shlb
in
insb
fstp
fs
mov
fdivrs
xor
loope
stos
shlb
in
rcrl
push
data16
repz
leave
mov
nop
inc
cmp
jb
push
movsb
enter
leave
imul
xchg
in
push
iret
pop
push
sub
lret
mov
and
hlt
or
std
ret
cmp
and
xor
aaa
int3
adc
insb
push
stos
test
xchg
in
loopne
mov
adcl
push
nop
lret
dec
jae
sti
pop
cmp
jle
sbb
jb
adc
push
mov
fcmovnbe
outsb
and
pop
lret
xchg
pop
out
les
hlt
push
or
adc
inc
mov
int
sbb
pop
int3
add
push
loopne
sub
cmpsl
divl
mov
fildll
test
mov
popf
outsb
push
repz
neg
in
mov
adc
dec
push
pop
ficoms
aas
int3
popa
add
inc
popa
mov
jmp
popa
pop
clc
aas
fadds
das
xchg
bound
mov
loope
std
push
dec
cmp
push
sahf
push
adc
pop
dec
add
hlt
push
mov
cli
pop
add
mov
in
lods
mov
test
or
push
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
mov
ficoms
adc
adc
adc
fmuls
dec
call
fadds
nop
inc
xchg
add
cmp
jl
dec
add
jae
out
clc
mov
fstpl
aam
dec
dec
mov
divb
adc
cmp
in
lods
mov
and
cmp
add
xchg
push
cltd
jge
mulb
into
or
fcomps
loopne
adc
lahf
je
repnz
mov
in
push
fsts
fmuls
pop
scas
loope
xor
sub
adc
cmpsb
fisttpl
ja
andb
dec
popf
outsb
shll
xchg
lret
jmp
or
sar
call
dec
adc
leave
push
mov
push
daa
lock
or
faddl
mov
sub
inc
jns
mov
jp
sbb
mov
xchg
cmp
ret
inc
and
shl
jae
iret
lret
jo
shl
pop
xchg
mov
xlat
data16
clc
pop
xchg
cltd
add
push
sbb
adc
mov
daa
inc
int3
push
les
sbb
mov
pop
push
js
push
jecxz
fdivl
xor
cwtl
rorl
inc
add
and
adc
or
jno
add
mov
jmp
loop
lea
pop
xor
xchg
xor
vcmpss
add
xchg
add
push
pop
xchg
dec
inc
jae
outsb
push
cmc
push
mov
cwtl
xchg
out
xor
pusha
ss
iret
icebp
cmpb
ss
xor
inc
adc
mov
aaa
mov
xor
mov
rclb
dec
and
jns
mov
mov
inc
xor
push
pop
xor
mov
loope
iret
mov
cmp
les
in
hlt
dec
sarb
mov
sarl
xor
cli
sbb
stc
sub
stos
repz
outsb
pop
mov
jmp
sub
mov
pop
add
or
mov
or
lds
mov
nop
push
mov
fldln2
lds
jmp
jl
enter
sahf
adc
add
in
insl
push
orb
cmpsb
sbb
push
mov
inc
adc
aad
or
push
test
enter
stos
jg
aaa
xchg
cmp
mov
mov
inc
xchg
sbb
jbe
pop
pop
fistpl
mov
dec
sahf
icebp
cwtl
mov
xor
imul
xchg
mov
in
sbb
pusha
jmp
outsl
out
jg
rorl
repnz
out
cld
outsb
dec
jbe
out
sbb
xor
dec
dec
jns
push
lds
enter
dec
fbld
test
mov
and
loope
sar
dec
aam
push
out
int
mov
pop
pop
aad
lret
push
sub
push
sub
loopne
cmpsl
repnz
inc
sbbb
adc
fnstsw
sbb
into
xor
lock
mov
leave
xor
cmpsl
sub
add
or
cmc
push
cld
push
adc
sbb
out
lock
mov
jg
stos
pop
pop
sarb
cli
inc
repz
adc
cld
scas
mov
dec
push
pop
mov
in
xor
xchg
push
dec
xlat
jecxz
test
xor
jmp
mov
shl
jmp
fmuls
sbb
mov
icebp
stos
jge
adc
int
adc
pop
insb
mov
push
and
ljmp
push
xor
push
xchg
out
sub
mov
dec
xchg
fcmovb
call
cmp
mov
movsl
movsb
pop
add
das
iret
xchg
aas
dec
add
aaa
out
and
ret
dec
jg
inc
cmp
cmp
cmpsl
mov
jb
lret
adc
out
mov
ss
dec
fwait
cmpsl
std
jnp
sub
sub
outsl
pop
add
sbb
or
jne
jbe
push
aad
push
loope
decl
jle
adc
aam
xor
cmpsb
add
pushl
enter
sub
push
popa
xlat
sub
mov
jnp
aad
add
add
jg
loope
pop
ror
jnp
xchg
leave
mov
pop
cmp
dec
inc
fimuls
loopne
int
sub
pop
jmp
cmp
sub
lock
insl
test
int
push
add
ret
sbb
daa
fiaddl
jno,pt
movd
push
cmpb
stos
jle
repz
xchg
adc
and
sarb
mov
out
adc
mov
inc
cmc
std
xor
or
jg
jmp
lods
ret
dec
out
cmp
out
outsb
or
popf
inc
imul
das
faddl
jns
test
and
cmpsl
mov
fs
jns
fidivrs
dec
jbe
loop
xor
add
in
xor
sub
adc
cli
xor
xchg
rcl
arpl
js
sbb
lods
scas
cmp
mov
fnsave
roll
popf
and
dec
pop
outsl
lds
cmp
sbb
aas
sahf
jne
pushf
cmp
cmp
mov
push
and
stos
stos
in
nop
sbb
cmp
jne
inc
xchg
inc
ror
aam
mov
push
push
enter
mov
or
mov
fsubrs
aaa
out
jge
jp
sub
jae
jmp
movsl
mull
test
cld
mov
cmp
icebp
cmp
push
adc
cmp
sub
insb
jae
xor
mov
mov
dec
or
out
ja
mov
push
or
pop
mov
or
xlat
jo
cmp
test
pop
fldcw
js
shlb
jmp
fldenv
xor
adc
int
push
ljmp
inc
pop
adc
ljmp
rorb
movsb
scas
xchg
sub
add
and
dec
scas
leave
mov
iret
and
cmp
mov
pop
loop
pop
sbb
shl
bound
add
cmp
je
filds
testb
ja
lea
cmp
pop
mov
inc
jne
test
dec
scas
jo
das
cmpb
jbe
repnz
lahf
fidivrs
pop
sub
lea
inc
mov
jo
sbb
xlat
ffreep
inc
or
dec
pop
push
loopne
mul
add
ficoms
pop
rcrl
aad
aaa
and
add
data16
out
add
int3
mov
ljmp
out
pop
mov
cmp
xchg
clc
adc
movsl
ffreep
dec
aam
test
add
cld
jnp
test
pop
dec
fcoms
in
das
and
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
xlat
sub
mov
int
adc
inc
xchg
stc
call
mov
cli
add
pushf
sti
test
aas
mov
mov
fmul
popf
leave
loope
insb
call
jle
jns
test
jno
cmp
iret
jle
nop
inc
stos
iret
or
pop
aad
jne
cwtl
add
test
mov
mov
xchg
aaa
out
imul
insb
popf
mov
outsb
hlt
into
movsl
dec
je
mov
push
shlb
push
arpl
mov
jne
add
or
fiadds
pop
lcall
lahf
inc
imul
call
mov
or
test
test
pop
cmpsb
adc
add
push
ror
outsb
sub
pop
lods
cmp
in
sbb
mov
mov
mov
xchg
lds
mov
mov
cltd
jbe
outsb
sarl
push
bound
lret
cld
iret
xlat
and
lods
insl
sub
xchg
mov
sub
pushf
dec
pop
mov
int3
or
sub
shrl
push
ficomps
jo
iret
cmc
mov
ds
or
adc
loop
aad
lret
sub
popf
cmpsl
es
call
push
jae
sub
pop
jbe
dec
pop
jno
inc
ja
test
ja
test
pop
mov
lret
push
adc
xchg
subl
jge
adcl
stos
cmp
out
call
add
or
xor
mov
and
jg
int3
or
add
pop
mov
mov
mov
push
je
ljmp
decl
fs
mov
or
push
int3
test
adcb
mov
mov
cli
inc
add
adc
jb
and
cmp
das
aaa
push
dec
push
jb
dec
xlat
inc
lds
div
xor
dec
adc
leave
icebp
outsl
ljmp
cmp
mov
rclb
mov
lea
push
dec
jne
sbb
cmpsb
rcll
mov
jb
ret
lock
roll
inc
xchg
pop
ljmp
ret
xchg
or
cmp
cmp
or
pop
lea
addb
movsl
cmc
push
lods
xor
out
nop
adc
add
outsb
pushf
mov
pop
out
jle
gs
ja
dec
icebp
add
mov
sbb
fmull
adc
mov
out
les
subl
clc
jg
jg
in
decl
lcall
aaa
or
faddp
rcl
cmp
inc
mov
cmpsl
xchg
test
jecxz
fisttps
imul
shr
adc
scas
cmp
pop
fcmovbe
add
clc
pop
imul
xor
repz
push
cmc
ret
xor
adc
cmp
cmp
mov
scas
fisubl
gs
ja
push
sbb
sbbb
sub
mov
sbb
jno
das
aad
mov
scas
mov
mov
outsl
arpl
ss
jg
sti
inc
scas
lret
lds
push
dec
inc
imul
and
sti
pop
pop
div
cltd
push
inc
mov
and
push
jge
sbb
cmc
mov
ds
xchg
rcrb
xchg
fcmovnbe
mov
stos
out
inc
mov
aaa
jae
test
sub
loop
es
mov
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mov
add
int
adc
pusha
fsubrs
fcoms
xchg
stos
lea
xor
aad
dec
or
out
stos
push
xchg
mov
je
dec
loopne
jl
cmp
adc
sbb
insl
outsl
in
and
test
push
ficoms
iret
shll
adc
xor
jbe
cli
cmp
mov
add
pop
mov
nop
adc
mov
and
ss
cmp
lcall
cli
shll
cmc
test
leave
xor
pop
ss
xchg
add
xorl
or
ret
jecxz
jg
jnp
addb
int
aad
js
adc
nop
insl
pop
fs
clc
shr
jb
cmc
ret
add
je
aam
adc
fmull
mov
xchg
jge
pop
jns
mov
sub
shrl
stc
jne
test
ss
xor
data16
cmpsl
icebp
and
jnp
cmpl
lret
dec
mov
lods
xchg
sub
pop
repnz
rclb
outsl
fidivrl
stos
fisubs
xor
cmp
stos
sbb
out
repnz
and
jecxz
mov
add
test
stos
out
aaa
insb
mov
test
xor
dec
dec
dec
xlat
pushf
sub
jbe
and
rcr
data16
xchg
xchg
stos
mov
push
sbb
mov
les
push
mov
adc
sar
addr16
dec
movl
jle
lods
test
rcrb
cmp
inc
daa
cmpsb
pop
int3
pop
mov
loop
cli
aad
addb
cmpsl
or
cld
pushf
test
push
les
clc
fldenv
ds
mov
ljmp
mov
push
fs
pop
pop
jno
ds
in
or
mov
in
mov
xchg
mov
sbb
cmp
mov
std
push
push
jns
mov
repz
jnp
ret
aam
xor
js
test
fildll
les
pop
sub
sub
inc
mov
movsb
dec
popa
lret
stos
lods
outsb
subl
mov
stos
into
mov
out
adc
fsubr
std
mov
js
loope
rclb
seto
aad
outsb
nop
sub
andl
cli
enter
ja
and
stc
sub
das
mov
inc
mov
test
cltd
cs
addl
in
mov
das
int3
ret
mov
push
sub
add
fcom
fisubs
je
and
das
les
mov
push
push
add
js
jecxz
insb
lock
dec
mov
cmpsl
insb
into
hlt
jno
xor
xorl
push
dec
sbb
xchg
adc
andl
notb
and
aad
enter
scas
clc
sbb
mov
jb
sahf
sub
notl
mov
push
sub
cltd
pusha
imul
in
pop
int
mov
push
mov
stc
addr16
xlat
add
pop
mov
mov
push
popa
jp
sub
xchg
fstl
sti
sahf
aaa
mov
pop
js
loop
xor
lea
add
outsb
insb
cmp
and
pushf
mov
rcrb
pop
jbe
pop
shll
fbld
out
iret
iret
hlt
push
sti
decl
pop
sub
clc
sahf
mov
pop
outsb
stc
cmpsb
push
imulb
out
daa
xor
pop
inc
ja
divl
aam
sbb
xor
lahf
xor
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
xchg
js
ret
int
adc
bound
fbld
jnp
std
stos
popa
jge
mov
jge
adc
cmp
stos
mov
cmp
int3
call
sahf
lahf
xorl
push
call
mov
orl
inc
cltd
jg
enter
xchg
je
shl
dec
jnp
xchg
cs
in
xor
jl
jmp
inc
ret
sub
lret
or
mov
pushf
sbb
dec
jae
cmp
enter
testl
mov
scas
cmp
mov
ja
stc
dec
fcomip
lds
pop
fnsave
clc
cmp
pop
add
xchg
xchg
ficompl
popf
fdivr
add
jo
ficompl
xor
dec
faddl
test
add
imul
fs
aas
jg
inc
icebp
popa
cmp
fisttpll
xor
dec
sbb
test
out
add
dec
in
dec
mov
add
jno
pop
fsubrs
cmp
or
dec
rorb
lods
sub
movsl
testb
push
mov
inc
or
pop
and
icebp
sbbl
xorb
ret
jns
mov
cmp
sub
stos
pop
mov
jmp
or
stc
or
jae
pop
cmp
pushf
fwait
add
cmc
adc
loope
mov
int
dec
mov
cld
mov
dec
sahf
sbb
cmpsb
mov
data16
adc
jne
jp
sti
push
pop
xchg
jbe
jnp
int
fs
cmpsl
mov
pop
ljmp
dec
pop
int3
rcll
fisubs
int3
pop
pop
fwait
jle
mov
push
push
cld
mov
testb
sahf
rorl
stc
jne
sbb
fs
aam
ljmp
call
les
loopne
scas
xor
pop
outsb
mov
jnp
dec
or
ja
es
xor
in
sarb
scas
or
outsb
fbld
xchg
mov
and
push
jns
into
lods
mov
adc
ret
stc
mov
in
cmp
push
stos
das
sub
sub
lods
das
dec
es
mov
mov
into
xor
jg
shll
fcom
je
or
xchg
sub
js
push
push
sub
lcall
adc
call
or
in
fadd
arpl
movsl
rolb
sbb
push
test
incb
aam
icebp
xchg
out
adc
test
orl
xor
aam
mov
jnp
addb
stos
ret
test
aas
mov
mov
fisubrs
cmp
mov
rcll
push
loopne
ljmp
ds
jns
push
int
mov
in
das
es
push
xor
cmp
popf
mov
rcrl
and
incb
and
hlt
fimuls
dec
stos
dec
je
push
adc
ljmp
sub
xchg
imul
dec
push
pop
mov
fsts
mov
fcompl
or
pop
loop
inc
and
aas
ret
in
xchg
jecxz
xorb
push
mov
stos
jmp
sti
xor
lahf
fsubs
mov
ret
lock
inc
xorb
imul
lcall
pop
sahf
adc
jmp
inc
imul
or
and
jge
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
stos
movsb
js
mov
adc
mov
pop
push
jp
scas
fmull
loop
or
sub
mov
add
mov
push
lds
pushf
cmpb
adc
inc
fildl
mov
repz
adcb
sub
inc
insl
mov
jne
insb
in
mov
imul
mov
sbbl
add
push
push
xor
rclb
loop
fisttps
scas
pop
jecxz
inc
cmpsb
mov
mull
mov
xchg
mov
shl
ret
pmullw
scas
push
cs
fmuls
pop
fdivrl
dec
insb
test
shrb
data16
mov
jnp
jp
mov
push
cli
divb
outsb
int
inc
fnstcw
ds
push
cmp
cmp
and
fs
lods
cmp
adc
lods
lea
mov
xor
popf
cmp
sub
andps
cmp
mov
loopne
test
mov
pop
fsubl
sti
in
popa
test
add
xlat
mov
ret
lods
out
test
sbb
mov
imul
fdivrl
es
mov
xor
aad
scas
mov
fld
xchg
pop
dec
mov
sub
imul
icebp
and
es
cmp
dec
and
sbb
dec
mulb
xchg
scas
mov
push
pop
aaa
jle
test
loope
push
rcr
jecxz
loop
ss
pop
mov
shrl
xor
daa
int
xor
nop
jnp
add
shll
scas
xchg
cld
out
jge
or
pop
mov
aam
mov
sbb
call
decb
leave
ret
addr16
movsb
imul
mov
movb
loope
call
jne
jno
in
jmp
cmc
sti
jle
bound
add
cmp
lds
or
shlb
stos
cmp
inc
dec
push
ss
clc
outsb
adc
xchg
jp
scas
test
pop
xchg
repz
gs
ja
daa
aaa
sub
mov
leave
in
xchg
dec
jne
call
rcrl
movsl
pop
and
jno
stos
rcr
mov
outsl
pop
sub
outsb
in
add
outsl
mov
xchg
fdivrs
lock
addr16
jle
mov
ja
icebp
push
test
sub
xchg
fadds
inc
mov
cmpsl
inc
dec
movsb
or
mov
lcall
scas
mov
int
rcll
push
lock
lds
fdivp
test
andl
js
sti
fadd
daa
inc
jg
rorl
sbb
cmpsl
cmp
dec
cmp
and
mov
mov
test
pop
mov
icebp
sahf
sub
sub
inc
cs
dec
xor
jne
lock
fisubrl
mov
fnstsw
xchg
mov
mov
sub
inc
adc
iret
and
jle
shlb
mov
mov
out
outsl
xchg
lock
mov
cmp
mov
cmpl
cmc
mov
push
xchg
adc
push
add
subl
mov
sbb
sahf
add
movsl
xor
dec
ret
scas
push
popa
mov
clc
dec
nop
or
shr
in
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
lods
popf
xor
pop
mov
adc
adc
adc
pop
fdivr
sbb
loopne
pop
fwait
rcll
pusha
mov
mov
and
scas
lods
popa
push
jb
mov
arpl
dec
cmpsl
sbb
and
popf
mov
int
add
scas
into
mov
dec
dec
ds
call
es
arpl
into
int3
adc
popa
aam
lcall
aaa
imull
in
sbb
mov
fstp
gs
and
adc
lds
scas
add
mov
adc
sbb
stc
fstl
mov
inc
stos
push
and
int
pop
aas
insl
mov
push
outsl
incl
add
and
fs
cmp
xchg
dec
int3
pop
fwait
xor
lea
mov
ret
push
xchg
out
xchg
pop
pop
add
out
jmp
push
out
jns
sahf
xchg
add
pusha
sti
icebp
lods
jp
stos
sti
jns
pop
jne
mov
sbb
mov
daa
sbb
test
xor
hlt
jge
sbb
xchg
pop
push
push
mov
aas
pop
mov
inc
lahf
enter
fwait
je
xchg
sarb
cltd
sub
es
push
xor
aaa
inc
fiadds
mov
adc
sub
push
and
dec
or
jl
iret
pop
xor
pop
add
xor
and
adc
xchg
and
cmp
mov
push
pop
fst
int3
gs
fisubrl
and
daa
dec
movsl
in
sti
imul
mov
xchg
add
es
mov
stc
or
sbb
pop
inc
clc
or
popf
out
scas
pop
daa
pop
cld
jae
adc
nop
lret
sub
dec
popa
outsb
dec
icebp
loope
pop
aad
gs
pop
clc
or
lods
out
pop
mov
je
mov
mov
inc
pop
dec
xchg
fidivrl
mov
in
sbb
lahf
mov
push
popf
or
mov
push
pop
xor
dec
mov
cltd
cmp
adc
mov
out
pop
fstpl
test
jle
jo
push
xchg
cld
push
daa
xor
jmp
mov
out
ror
adc
cltd
pop
add
cld
push
orb
aas
in
adc
out
cmp
int
sub
adc
sbb
pushf
sub
stos
cmp
lcall
xor
scas
pop
iret
or
xchg
adc
addr16
aas
xor
xchg
cmp
out
gs
jo
ss
ljmp
cli
cmp
xlat
daa
jae
ss
mov
dec
and
ret
xlat
push
lods
pop
xor
push
push
xor
jle
insl
lods
xchg
mov
xorb
fcoms
int3
inc
sub
inc
mov
in
sbb
into
xchg
divb
movb
jns
add
fwait
les
mov
decb
mov
daa
int3
imul
inc
push
push
inc
xor
and
mov
mov
sub
sahf
fs
mov
aas
adc
fsubr
out
xchg
enter
cmp
jo
out
movsl
lret
xor
in
xorb
cmp
push
fidivrl
mov
shlb
fists
pop
xchg
lock
orb
clc
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
dec
cmpb
adc
adc
pop
loopne
daa
scas
cli
in
aaa
xchg
cmp
xchg
xchg
iret
lods
mov
pop
mov
fdiv
sub
lret
cmc
dec
out
arpl
inc
lock
cli
std
push
mov
mov
cmpb
dec
and
mov
rcrb
out
lahf
dec
or
rcll
xor
out
mov
mov
popf
and
data16
imul
mov
sub
mov
and
flds
sarl
in
lods
js
aad
repnz
or
inc
sbbl
popa
insl
je
mov
out
jp
dec
lods
add
out
and
sub
sub
cmp
xchg
dec
pop
das
push
pop
jnp
xchg
cmpsb
mov
int
rsqrtps
data16
adc
add
cld
pop
inc
test
inc
outsl
add
and
negl
xchg
data16
xchg
and
jl
icebp
mov
adc
pop
scas
xor
shlb
je
jmp
jmp
test
push
xor
push
mov
dec
fwait
pop
test
jle
cmpsb
mov
xor
das
pop
pusha
or
or
andl
inc
imul
rorb
js
pushf
fdivl
dec
mov
fbstp
mov
cwtl
ret
call
pop
sbb
sbb
insl
lret
movsl
sarb
or
cmp
std
in
lods
jae
pmuludq
clc
xor
cmpsl
xchg
cmp
call
pop
shrl
divb
in
sub
mov
add
cmp
mov
jnp
and
fsubrs
movb
xor
lds
lds
pop
cmpl
repz
mov
push
pop
jecxz
arpl
std
mov
fsubs
sbb
pop
and
loope
inc
fdivl
jmp
std
mov
jns
push
jp
ret
or
mov
iret
add
push
shr
jne
pop
pusha
stos
push
pop
rcrb
cmp
lret
imul
test
jb
push
mov
enter
leave
pop
push
and
repz
mov
out
push
shl
out
stos
xchg
insl
cmc
mov
inc
cmp
mov
int3
cs
mov
sbb
jae
cmp
cltd
and
shrb
fsub
add
call
mov
dec
push
cmp
mov
cld
lahf
shll
mov
repz
sub
inc
mov
movsl
dec
js
andb
jo
jb
nop
xchg
or
add
sahf
inc
cs
inc
cmp
jg
cmp
lahf
xor
pop
mov
cmp
adc
jb
outsl
outsb
inc
popf
sub
stos
pop
fistpl
mov
shrl
jge
cwtl
les
inc
xchg
xchg
mov
sbb
jns
sbbb
and
lcall
iret
mov
xlat
sub
mov
dec
js
push
cltd
xchg
dec
add
xchg
jmp
sub
cmovo
iret
push
dec
cltd
adc
test
cwtl
lret
aas
jge
or
call
loope
lahf
ja
cltd
push
and
pop
idivb
mov
sub
adc
mov
sub
fxch
add
int
iret
sbb
repnz
dec
cwtl
loope
hlt
adc
ficomps
ss
jns
insb
div
es
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
push
pusha
js
mov
adc
loop
fcmovnu
sarl
xchg
mov
int
pop
add
lods
pop
jns
imul
pop
jg
mov
fiadds
push
push
sub
cld
jl
pop
popa
dec
push
mov
dec
lret
les
std
mov
dec
pop
mov
sub
dec
xchg
test
aad
mov
ss
push
and
call
xor
mov
or
jmp
and
lods
mov
out
sbbb
push
es
mov
data16
dec
pushf
fildll
inc
pop
aad
es
jecxz
or
mov
pop
in
roll
lods
int
xor
ja
fsts
mov
push
mov
cmp
loope
jmp
or
cmpsl
mov
pushf
mov
cmpsb
mov
xor
xchg
jno
fstpl
adc
arpl
or
popa
std
jmp
loopne
jb
cmc
or
dec
dec
rclb
fstpt
lds
lcall
lret
xchg
mov
loope
lret
or
or
nop
mulb
jge
sub
inc
dec
in
dec
push
stos
movsl
int
mov
cmp
imul
sahf
mov
add
pop
das
cmp
jb
mov
adc
out
inc
xchg
jne
rcrb
popf
mov
adc
xchg
jo
push
ret
sarb
out
mov
push
lods
mov
fld
xchg
xchg
repz
cmp
xor
pop
jmp
lea
bnd
sbb
and
fnstenv
js
cmp
adc
cmp
ret
sbb
adc
mov
pop
int3
into
sub
dec
mov
jmp
repnz
loopne
cwtl
repz
divb
and
cmpsb
clc
mul
xor
mov
inc
mov
xchg
mov
jge
out
add
mov
sub
inc
cmp
ror
xchg
push
mov
pop
fstl
testb
or
sti
faddl
xchg
imul
mov
pop
scas
fcmovnu
or
and
orb
faddl
mov
ret
or
shl
movsb
in
insl
mov
ljmp
and
fcompl
adcl
outsb
fstpl
push
ret
sbbb
xor
loopne
adc
movsb
scas
cmpsb
dec
mov
pop
pop
movsb
mov
scas
lods
mov
outsl
pop
pop
xchg
jae
loopne
inc
stc
sbb
and
dec
sub
ret
mov
pop
cmpl
je
ficoms
xchg
leave
call
fwait
push
hlt
stos
cmp
fwait
imull
in
push
ret
inc
mov
pop
icebp
into
je
sub
xor
lea
hlt
dec
mov
inc
ljmp
lods
push
jnp
jns
clc
bswap
into
xchg
out
mov
cmc
xchg
nop
mov
adc
stos
inc
ret
call
sub
shrb
mov
sub
cmpsl
pusha
popf
subl
sahf
inc
into
negl
sbb
add
mov
jnp
in
mov
or
cmp
popa
daa
cld
in
stc
push
in
rorb
xchg
push
pop
repnz
aaa
dec
cmpsl
or
push
sbb
clc
in
jp
mov
pop
and
sahf
out
xchg
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
sbb
adc
int
adc
dec
inc
xchg
xor
sbb
in
aad
push
xchg
neg
scas
jo
in
int3
fstps
and
sbb
dec
dec
mov
mov
es
testl
push
repz
xchg
test
hlt
ss
aas
arpl
test
jo
xor
sub
jl
repnz
inc
xor
enter
inc
jl
jbe
sbb
dec
cmc
ret
arpl
cwtl
rorb
daa
xchg
push
adc
jg
mov
mov
mov
xchg
cltd
cmp
mov
movl
mov
adc
mov
test
loopne
rclb
sarb
iret
jmp
jp
in
inc
push
add
rclb
movsl
loop
call
outsb
mov
popf
insb
xchg
test
cmc
push
arpl
mov
xor
inc
das
outsb
cmc
jbe
xor
ds
fimuls
arpl
mov
add
mov
dec
jecxz
add
ss
faddl
lods
dec
mov
or
pop
mov
dec
jmp
push
or
mov
mov
mov
cmc
xor
adc
inc
push
dec
dec
or
cwtl
inc
sub
jnp
fwait
sbb
in
xchg
cmpsb
repnz
fstl
pop
int
ficoms
or
adc
iret
mul
cmpsb
cmpsb
jp
fists
inc
or
jle
in
jge
aad
pop
loope
inc
and
cs
xchg
mov
sbbb
sub
xchg
jne
nop
sarl
push
xorl
test
rcr
xchg
lahf
sbb
mov
or
inc
lea
xor
mov
fidivl
inc
mov
jmp
xchg
rcr
mov
jne
mov
ret
aas
insb
or
jbe
stos
push
sbb
add
decb
cli
lret
push
inc
adc
mov
fdivs
dec
test
sbb
mov
dec
sub
push
dec
lcall
add
addr16
inc
inc
pop
dec
xor
shr
or
loopne
inc
adc
sti
lods
sbb
cmp
arpl
or
ror
int
cmpsl
sub
fstps
cmp
xchg
stos
pop
dec
je
xchg
push
and
xchg
idivb
and
mov
lret
aaa
pop
in
pop
cmc
dec
test
popf
and
xchg
movsb
pop
dec
mov
push
or
dec
lahf
in
dec
mov
pop
fidivl
scas
ds
aaa
mov
fdivl
imul
iret
test
sahf
cmp
jb
test
mov
pop
iret
fdivl
shrb
sahf
or
inc
adcl
arpl
pop
repnz
movsb
adc
cwtl
repz
stos
gs
dec
in
or
fistpll
adc
cs
push
add
jl
ret
loope
sbb
push
jae
lret
push
inc
adc
xor
or
jne
orl
mov
sub
loop
and
adc
xchg
out
inc
xor
mov
movsl
adc
jne
dec
out
dec
jmp
and
adc
xor
mov
dec
in
fs
pop
loope
mov
test
sbb
int
outsl
popa
xchg
imul
bound
xlat
sub
add
dec
sbb
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
sbb
xor
mov
and
pusha
inc
loope
xor
subb
repnz
cmp
lods
negb
leave
adc
aaa
lods
lcall
or
or
add
inc
add
cmp
pop
push
xchg
sub
das
jae,pn
stc
and
inc
mov
dec
aas
or
and
je
cmp
xor
mov
hlt
push
mov
xchg
vandnps
add
loop
cmp
jae
adc
sub
insb
scas
out
test
cltd
mov
lahf
hlt
xor
sbb
add
sub
pusha
push
push
lds
and
out
push
jae
xlat
aad
cmpsb
mov
cmp
jecxz
push
push
fmuls
inc
sbb
shlb
stc
call
and
xor
or
xchg
mov
rcrb
push
sti
push
mov
jl
repnz
in
sbb
loopne
cmp
mov
and
cmp
iret
dec
in
sbbb
dec
cli
inc
xchg
push
cs
cmp
inc
mov
imul
dec
xor
in
jbe
popf
ljmp
push
lret
add
sub
pop
sti
or
das
mov
imul
xchg
nop
inc
notb
xchg
pop
sub
test
sub
cld
in
ss
iret
xchg
pop
mov
sahf
test
rcl
push
mov
or
ret
pushf
lret
dec
inc
int
push
add
fsubs
pusha
fidivrl
cmp
fwait
xor
push
add
fs
mov
jl
addr16
mul
cmc
and
mov
gs
daa
in
dec
lret
inc
sbb
lods
lahf
sub
jae
std
adc
mov
lret
dec
adc
mov
call
ds
or
pop
fbld
das
lock
iret
xchg
mov
dec
pop
and
into
or
icebp
mov
xor
cmp
je
xchg
xchg
mov
jl
dec
add
mov
icebp
in
shll
data16
lcall
movl
push
pop
idiv
sub
mov
jno
outsb
sub
mov
cmp
addr16
mov
rcr
lods
push
sbb
insl
adc
lret
mov
dec
in
push
xor
xchg
jae
and
push
jno
and
cwtl
cmp
xchg
in
mov
sub
and
int3
sbb
pop
inc
mov
outsb
inc
stos
dec
out
and
andps
and
mov
mov
xor
ja
lods
les
std
fnstcw
mov
lock
fbld
xlat
testl
iret
pop
test
dec
mov
std
insb
jo
cs
xlat
and
xor
insb
mov
push
jl
add
adc
hlt
arpl
div
in
or
jle
int
scas
hlt
out
mov
stc
pop
fstpt
out
cmp
pushf
inc
adc
mov
div
cmp
push
jl
xor
or
loope
outsb
push
push
cmpsb
mov
xchg
or
xlat
or
cmp
push
icebp
mov
pop
adc
push
inc
mov
pop
out
rcr
cmp
insl
push
sbb
pop
sahf
cmpsb
add
mov
in
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
je
lcall
adc
pusha
stos
loopne
push
mov
movsb
pusha
aaa
pop
and
hlt
mov
xor
xchg
sub
icebp
mov
addr16
dec
cmc
rorl
push
mov
lods
es
out
adc
add
mov
jns
test
cmpsl
ja
sbb
cld
cmpl
cmc
int3
dec
les
xchg
shr
cld
dec
and
in
sub
inc
popf
jnp
shl
call
lret
fnstcw
cwtl
gs
ja
or
lahf
jl
dec
sbb
je
or
movsb
jge
adc
pusha
rcrl
stos
cmc
cmp
lea
pop
jmp
daa
xor
push
clc
aad
sub
imul
fimull
cmp
andb
les
movaps
push
cmp
divb
mov
nop
push
test
je
or
mov
or
out
mov
inc
lea
inc
imul
gs
loope
addb
push
dec
jl
movb
dec
loopne
test
fucom
fldenv
int
repz
xchg
fistpll
mov
idiv
pop
push
out
icebp
adc
dec
popa
push
movsl
dec
test
push
insl
imul
cld
cmpsl
lcall
mov
test
xor
sbb
fistps
fs
aas
fstl
leave
mov
sub
lret
scas
ret
mov
mov
mov
cmp
adc
sub
idiv
mov
shlb
mov
ss
mov
push
stos
ret
test
mov
jge
js
repnz
stos
scas
addr16
shlb
jbe
and
pop
xor
cltd
mov
sahf
loopne
leave
sbb
test
cmp
ret
lcall
cmp
mov
test
xchg
mov
call
fistpl
jmp
cmpsl
sub
stos
rolb
outsl
cmpsb
mov
test
pop
mov
gs
adc
pmulhw
mov
fdivs
push
push
mov
xor
mov
cmp
sti
and
sarl
and
into
inc
fiaddl
xchg
pop
shrl
mov
xchg
movsb
cmp
cli
mov
and
sbb
mov
and
add
or
adc
insb
imul
js
call
insl
fxtract
push
xchg
sbb
or
dec
and
test
dec
sbb
fs
cmp
fisttpll
dec
push
cmp
push
cmc
gs
mov
sub
call
mov
test
cmp
enter
imul
sub
jg
filds
mov
cwtl
mov
insb
arpl
jb
mov
add
mov
out
in
pop
inc
add
sub
mov
mov
sub
mov
and
cmc
enter
inc
lahf
iret
loop
lcall
xchg
std
bound
fmuls
in
sbb
and
jg
cmpsl
stos
cmpl
lahf
ljmp
mov
xor
add
or
jge
push
cmp
inc
outsl
mov
mov
les
sbb
mov
jnp
ds
xchg
push
mov
shr
mov
int
loop
mov
out
ja
xor
push
xchg
cs
add
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
jg
or
int
adc
cmpsl
and
xchg
repz
outsb
add
mov
out
out
je
out
lock
gs
fnstenv
cmp
mov
imul
and
or
iret
inc
loopne
aad
mov
lock
inc
popa
sahf
pop
fldcw
cmpsl
or
subb
dec
add
imul
fwait
cmp
and
pop
push
test
in
fsubrs
cmpsl
jns
jns
mov
jecxz
cld
xchg
xor
mov
fidivl
mov
cmp
pop
popa
lahf
clc
decl
cmp
in
mov
popa
and
cmp
js
mov
xchg
adc
pop
mov
ds
fwait
imul
cltd
stos
mov
xlat
add
icebp
ds
or
ret
ret
lock
aas
pop
mov
pop
cwtl
push
cmc
pop
stos
push
pop
xchg
xor
addr16
movsb
add
mov
xor
xchg
push
repz
jns
dec
jge
sahf
ret
push
sub
mov
movsb
movl
sbb
inc
mov
icebp
or
mov
sbb
scas
fisubrs
pushf
or
cld
dec
pushf
or
sar
idivl
imul
push
push
push
lcall
stc
add
add
mov
stos
sbb
xchg
inc
and
sbb
jge
xchg
mov
add
pop
fs
jo
popfw
sbb
enter
or
xlat
mov
ud1
lret
imul
mov
push
sub
mov
pop
pusha
aam
shll
movb
jne
sub
scas
mov
mov
sub
lahf
add
cmpsb
pop
cmpsl
aaa
shrb
fcmovnu
xor
sbb
fimuls
pop
cld
insl
cmp
into
addb
aaa
dec
std
xchg
in
enter
call
daa
sti
xchg
sbb
leave
insl
div
mov
inc
xor
xor
pusha
push
sbb
stos
clc
rcl
xor
pusha
xchg
aaa
sti
sbb
repz
mov
add
adc
in
rol
or
push
stc
or
dec
out
int3
pop
lret
pop
mov
mov
insl
adc
scas
pop
dec
insb
pop
jecxz
pop
clc
daa
stc
push
xchg
and
push
mov
pop
ror
xchg
jp
push
out
mov
xchg
add
imul
jo
repnz
imul
je
add
popf
stos
or
insb
sti
and
cmp
decl
adc
insl
sub
push
inc
std
vmwrite
dec
decb
xor
mov
daa
push
in
movsb
mov
es
arpl
dec
scas
dec
pusha
cmc
push
leave
stc
fcomps
xchg
leave
xor
add
es
push
xor
mov
lahf
cmpl
adc
sub
sub
xchg
or
arpl
sub
imul
cltd
lods
test
xor
mov
push
jne
xchg
sbb
out
mov
imul
xchg
dec
cwtl
cltd
sbb
and
mov
mov
popf
stos
repz
mov
imul
cmp
sub
xchg
daa
lods
movsb
mov
mov
add
inc
jmp
stos
and
rcrl
ficompl
fcoms
mov
xor
mov
out
aam
add
iretw
cs
sbb
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
insb
inc
or
int
adc
ja
dec
ljmp
add
test
mov
fs
shrl
pop
xchg
pop
jno
test
pop
mov
jb
adcb
popf
add
insb
popf
cmp
aaa
scas
or
mov
sbb
jle
sbb
xor
jmp
in
lret
in
out
mov
mov
jo
adc
mov
fisubrs
jae
mov
xlat
xor
add
xlat
mov
sti
addr16
jmp
mov
inc
ss
mov
insb
es
cmpsb
mov
ja
into
inc
push
ss
hlt
jl
xor
rclb
out
adc
cmc
push
inc
jg
jecxz
jae
stos
ret
je
xchg
dec
bound
shlb
cmp
dec
mov
sbb
test
add
outsl
adc
ret
fstpt
ret
lock
cmp
inc
mov
and
stos
sbb
mov
inc
xor
int3
stc
mov
cmpsb
push
shlb
lcall
push
pop
and
sub
fcom
sbb
aas
mov
cwtl
xor
bound
or
push
mov
jbe
mov
ljmp
lods
xchg
dec
inc
lods
mov
push
pusha
xorb
cld
pusha
dec
inc
dec
adc
mov
nop
jno
inc
xor
clc
fcmovnu
inc
lahf
fdivl
mov
ficompl
shll
push
test
mov
cmp
movsl
lock
daa
inc
shll
stc
adc
xchg
inc
dec
fwait
mov
adc
sbb
mov
fcmovu
or
incb
adcb
mov
jmp
imul
divl
test
mov
nop
mov
js
andl
data16
lods
dec
das
push
imul
in
ret
jne
in
dec
movsb
jo
shrb
mov
popa
add
jge
sbb
daa
dec
iret
mov
aas
nop
adc
push
inc
insl
pop
jne
xchg
lcall
sub
sbb
pop
cwtl
data16
or
inc
lret
ja
subl
ja
repz
cmp
mov
xchg
xchg
sub
add
add
xchg
push
or
fwait
pop
movsl
add
aad
pop
pop
hlt
sti
aas
mov
sub
pop
xchg
push
inc
push
or
aad
int
dec
test
mov
xchg
ja
mov
add
pop
jno
cmc
mov
loope
aad
cld
popa
out
mov
scas
or
fsts
adc
fiadds
daa
dec
adc
or
xchg
repz
add
rcrl
jg
xchg
sub
lret
into
aaa
into
jecxz
mov
cmpl
ja
fimuls
push
dec
xchg
mov
popf
jg
movsb
cli
xlat
adc
test
mov
jge
pop
pop
lock
sbb
jl
jbe
cmc
xor
mov
cmp
adc
mov
fcmove
mov
pop
sti
lahf
icebp
imull
cmp
push
int3
addr16
sub
dec
jbe
pop
lahf
lahf
jge
es
pop
outsb
sub
mov
sbb
xchg
or
je
lcall
jle
movsl
clc
adc
xchg
push
inc
mov
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
js
push
push
je
adc
adc
adc
jmp
mov
test
movb
es
mov
jns
push
jecxz
inc
mov
stos
pop
mov
pop
mov
sbb
push
or
add
popa
cmp
incb
lds
bound
push
add
pop
mov
out
aaa
test
lret
xchg
lret
into
shlb
sahf
push
mov
dec
and
inc
sbb
adcl
cmp
sbb
mov
aas
adc
nop
xchg
daa
pop
mov
cwtl
or
mov
cmp
jge
repz
loope
mov
mov
das
pushf
subb
insb
std
fimull
jo
push
test
inc
mov
mov
push
push
mov
sbb
sbb
lret
lret
mov
mov
fstps
pushf
movsl
mov
hlt
je
mov
lcall
movsl
mov
clc
ficoml
or
aad
mov
pushf
sarb
dec
inc
mov
in
lahf
inc
fiaddl
into
add
fdivp
in
pop
jno
cmp
jecxz
push
scas
inc
and
fcom
cmpsl
push
insl
adc
popa
inc
pop
lret
in
divl
jecxz
je
popf
add
adc
add
aam
mov
stc
or
inc
inc
mov
push
cltd
jns
mov
inc
stc
lds
pop
mov
xchg
pop
adc
push
data16
push
sbb
call
jg
rcll
cmp
scas
inc
dec
xor
hlt
xchg
mov
xor
mov
xchg
mov
enter
stos
mov
sahf
stos
dec
iret
inc
inc
inc
mov
and
inc
dec
push
sbb
xlat
stos
push
shrb
inc
add
push
sahf
scas
imul
mov
jp
mull
pop
std
jb
add
mov
test
pop
sub
data16
mov
adc
pop
cmpsl
inc
cmpsb
mov
mov
sbb
sahf
or
jo
cmpsb
xchg
mov
pop
cmpsb
in
xchg
or
dec
ljmp
out
roll
cmp
sbb
jno
aam
scas
pop
dec
lock
out
sbb
repz
pop
mov
fsubrp
add
sbb
dec
in
repnz
adc
hlt
aam
add
dec
test
mov
sbb
pop
int
dec
mov
mov
xor
dec
pop
or
sbb
mov
adc
dec
push
push
xchg
cmp
xchg
cmp
sbb
ljmp
xor
aam
mov
fcom
sbb
cld
outsl
inc
dec
in
xor
pusha
push
mov
es
mov
int
and
sub
dec
popf
aas
cbtw
pxor
sbb
lahf
or
xor
inc
aam
mov
sub
jae
lock
push
xchg
push
cs
sub
mov
dec
iret
sub
insb
pop
cmp
jp
iret
mov
negl
sbb
call
dec
or
pushl
jge
mov
xlat
add
sub
cmp
dec
test
call
dec
xchg
jno
add
stos
hlt
adc
shlb
push
xor
pop
dec
ds
aam
into
lods
sbb
jno
addr16
mov
fwait
cmp
mov
gs
shrd
jmp
ja
jle
sub
xchg
mov
cmp
jb
adc
adc
adc
add
mov
push
fsqrt
cmc
and
jno
jg
or
out
rcll
out
pop
lods
bound
sbb
stos
xchg
jmp
push
out
sahf
nop
cli
lahf
xor
jns
lds
test
test
test
inc
das
lods
out
loopne
mov
add
pop
sbb
sahf
and
add
fcoml
in
rcr
test
mov
fldenv
cmpsl
lods
dec
and
jmp
loop
loope
pushf
jb
and
mov
jo
inc
sub
aad
cmp
add
stc
push
pop
pop
shll
fcmovnu
pop
mov
mov
xchg
sti
mov
clc
pop
lret
test
pop
pusha
xchg
pop
xchg
stos
adc
fsubr
rcll
push
jp
add
ja
popa
mov
rcrb
loope
mov
xchg
sub
xor
cmp
add
sub
shlb
xchg
decl
imul
lock
mov
pop
in
jns
jns
dec
out
pop
aam
je
mov
lds
mov
into
dec
in
outsl
sub
inc
in
adc
repz
ljmp
fs
ret
callw
add
pusha
adc
fmuls
jl
jmp
ret
mov
sbb
pop
int3
addb
lahf
push
mov
imul
dec
stc
jnp
sbb
add
or
repnz
adc
out
push
add
loope
mov
pop
je
rcrb
fldl2e
fucom
test
jmp
sti
xchg
mov
and
mov
mov
push
pop
lock
into
jo
insl
sbb
and
push
inc
sbb
pop
jae
mov
jg
mov
mov
cwtl
sahf
not
mov
jg
push
adc
pop
xor
mov
lret
nop
jne
add
mov
xor
aam
dec
dec
xchg
xlat
add
xchg
mov
mov
loop
imul
sbb
mov
hlt
rcrl
push
sbb
addb
inc
xchg
in
vmread
pop
jl
test
mov
sub
data16
push
popa
jl
inc
cmp
jle
jno
test
ret
inc
das
dec
adc
jne
pop
add
xor
dec
ljmp
xchg
test
mov
hlt
fisttpl
mov
xor
out
dec
ret
jb
pushf
cs
adc
out
stos
push
test
mov
xchg
ret
adc
sbb
fdivrs
gs
subb
mov
mov
mov
xchg
out
push
rclb
lods
daa
out
fsubs
sti
icebp
mov
ds
add
cwtl
sbbb
outsl
lock
adc
je
imul
sbb
mov
mov
push
jb
rcl
dec
push
fwait
sub
outsb
mov
pop
out
imul
lds
pop
mov
inc
xchg
pop
sub
pusha
mov
aas
popa
repnz
push
cld
sub
or
ret
jb
dec
dec
dec
out
push
push
mov
shll
out
xor
sub
lock
je
xchg
cmpsl
mov
insb
and
mov
cmc
roll
test
xchg
jp
jno
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
test
stos
insb
and
adc
int
adc
mov
shlb
inc
repz
pop
add
imul
lcall
pop
pop
push
xor
dec
jns
push
mov
in
pop
cmp
into
dec
xchg
aam
sub
xor
adc
pop
inc
popa
cmp
cmc
out
out
lret
cmp
push
cltd
adc
xlat
incl
stc
xchg
ljmp
add
jp
ror
negb
repz
mov
lods
in
or
mov
ljmp
xor
inc
lods
xor
int
flds
sub
repz
ficomps
lahf
mov
shlb
pop
xor
push
pop
pop
adc
push
adc
sbb
mov
pop
jmp
rcrb
xchg
sbb
lret
mov
mov
out
xchg
mov
stc
pop
lock
mov
jns
add
pushf
stos
xor
mov
cs
adc
dec
jb
xchg
pop
sub
pop
push
arpl
cwtl
cwtl
push
test
mov
mov
cmp
sbb
mov
dec
gs
shl
fstpt
lock
cwtl
xor
push
push
sti
jg
inc
int3
lods
adc
int3
or
test
mov
pop
scas
inc
sti
sti
dec
dec
jp
fcompl
mov
mov
mov
push
movsl
ret
mov
adc
lock
leave
mov
inc
jbe
push
dec
push
out
out
das
out
popa
adc
xlat
fisubl
dec
and
addr16
cmpsl
ja
test
xchg
lea
fiadds
rclb
out
adc
stc
mov
data16
xchg
xchg
lahf
imul
ret
jecxz
outsl
out
cwtl
into
rcr
or
aam
int3
xchg
push
jo
stc
paddw
iret
repz
sbb
or
jo
sub
push
fwait
and
xor
lret
outsl
ds
outsb
inc
mov
pop
or
popf
xchg
gs
in
cmp
lock
or
stos
xor
adc
shl
frstor
jbe
mov
push
aad
movsb
ret
adc
insl
jmp
push
adc
loopne
bound
push
pop
mov
lret
adc
inc
lahf
adc
hlt
mov
enter
fistps
popf
or
jnp
mov
stos
ret
hlt
arpl
mov
xbegin
or
mov
mov
push
xchg
aad
adc
mov
jne
bound
or
enter
mov
inc
repz
iret
in
dec
push
in
or
push
addr16
jo
ds
cmc
push
insl
mov
adc
cmp
jl
inc
pop
and
or
or
pop
fstps
stc
into
popf
inc
cli
fmull
mov
mov
outsl
sub
sbb
mov
mov
xor
mov
dec
inc
mov
test
or
pop
mov
fnsave
fs
ja
push
adc
dec
sub
and
mov
pop
or
cmc
adc
and
rclb
and
fisttpll
popf
and
dec
jp
popa
fildll
fiaddl
int
inc
mov
clc
add
push
mov
ja
inc
lret
sub
iret
sub
pop
pusha
rcrl
inc
ljmp
cltd
push
mov
mov
dec
jns
jnp
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
int3
inc
sub
bound
adc
adc
stc
mov
out
in
pop
lds
fildl
lods
xlat
call
out
movsl
cli
jbe
jle
mov
and
out
add
ljmp
andb
jb
or
mov
sbb
pop
jle
mov
cmp
out
cmp
jecxz
xlat
loope
or
arpl
pop
jg
add
add
push
lahf
pop
jne
or
cmpsb
lcall
mov
fisubrs
inc
lods
pop
and
lock
lea
test
cmpsb
cmpsb
pop
cmpsl
aaa
nop
cmc
mov
scas
sbb
xchg
jnp
mov
xor
repz
mov
sbb
mov
jno
sub
xor
bound
mov
iret
jg
mov
xor
pop
das
mov
rcl
lods
outsl
pop
adc
dec
in
je
cs
add
cwtl
rol
movsb
or
add
arpl
loop,pn
ljmp
cmp
sbb
fstp
or
scas
add
pushf
xor
cli
jns
cmp
inc
pop
dec
sbb
push
movsl
pop
mov
cmpsl
mov
inc
push
or
out
divb
hlt
rorl
fnsave
cld
or
jb
jg
and
cmp
mov
sbb
cmp
push
aam
dec
mov
cld
test
add
mov
inc
out
cmp
jb
add
or
push
xor
arpl
movsl
mov
stos
fs
call
ljmp
lahf
push
xor
push
test
aad
sbb
fisubs
lcall
and
cwtl
es
inc
cs
insb
repnz
pop
pop
inc
stc
outsl
jns
lret
xchg
imul
pop
dec
push
or
inc
add
xchg
jo
addr16
aaa
xchg
dec
xor
push
adc
mov
andl
ja
mov
inc
insl
pop
les
lock
fsubrs
sbbb
inc
fsubl
fsubrl
outsl
cltd
fdiv
push
pop
push
add
int
cmpsl
push
and
push
fwait
sbb
push
test
cwtl
mov
cmp
inc
sub
daa
mov
ljmp
ret
je
clc
jmp
arpl
inc
fsubrs
int
mov
inc
lcall
mov
sbb
or
mov
mov
dec
div
lahf
adc
push
sbb
ret
in
pop
loop
sti
lods
pop
adc
add
or
mov
jmp
push
cmpsb
add
and
in
pop
dec
mov
popa
ficompl
cwtl
mov
jb
mov
test
inc
cmp
mov
push
movsl
scas
nop
jle
or
clc
pop
cmp
cmp
icebp
or
add
add
xchg
mov
cltd
xchg
lcall
lret
popa
js
imul
mov
adc
xchg
test
xchg
mov
in
ret
pop
xor
jb
xor
lods
test
fdivrl
out
add
es
pop
add
insb
push
pop
lock
add
xor
push
cmp
test
in
or
dec
mov
adc
adc
inc
or
popf
sarb
mov
sbb
mov
out
ficoml
xor
cs
test
inc
dec
test
inc
xor
cmp
cmpsl
xchg
pop
adc
push
pop
lea
add
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
or
pop
adc
xor
adc
add
loopne
icebp
mov
pop
sub
push
adc
in
jns
jmp
aas
adc
rclb
xor
pop
lock
lahf
aam
mov
mov
sub
mov
rcr
mov
pusha
cs
mov
dec
xchg
leave
lahf
ss
adc
nop
or
sub
lods
je
daa
cltd
std
scas
dec
xchg
mov
or
xor
pop
jge
in
pop
cmpl
cmp
fs
mov
mov
hlt
das
addb
test
dec
test
fstl
sub
and
ret
enter
out
cmp
mov
out
sbb
test
fcmovnu
add
ljmp
mov
in
addl
xchg
out
xor
adc
sarb
push
repnz
add
test
std
shlb
push
inc
out
cwtl
and
fdivrs
sub
ret
mov
pop
int
xchg
insl
jp
adc
xchg
push
inc
insb
test
push
push
incb
xor
repz
loope
push
mov
push
rorl
popa
jbe
outsl
lods
and
add
jne
xor
fdivrl
pop
mov
jne
push
or
cmp
sbb
pop
rolb
add
dec
sub
push
ja
jae
cwtl
dec
ret
mov
xchg
in
adcl
pop
mov
dec
sub
cmpsl
add
add
enter
or
inc
aaa
repz
add
movl
mov
lcall
jne
imul
rclb
fidivrs
add
out
jae
mov
sbb
pop
ss
push
incl
repz
imul
in
push
int3
mov
mov
in
xlat
test
or
popa
xchg
sbb
push
out
adc
sarl
dec
mov
mov
test
cmp
sbb
pop
adc
mov
iret
sbb
xchg
push
mov
xchg
or
add
test
fdivs
jns
cmp
fisubs
dec
inc
sbb
test
out
lret
sti
iret
push
xor
pop
and
dec
sub
mov
stc
enter
imul
push
jg
fwait
dec
sub
mov
je
pop
les
mov
cmp
insb
loopne
and
subl
in
cmp
movsl
ret
js
outsl
inc
sub
lahf
cmp
xchg
rcll
nop
jp
loop
dec
out
mov
xor
test
aad
loopne
data16
lods
imul
sahf
dec
add
scas
xchg
xor
cmpsb
pushf
movsb
xor
fcoml
shr
dec
out
insb
or
cmpsb
lods
xor
das
adc
fisttpl
sbb
xchg
loopne
les
xchg
mov
pusha
insl
loop
lahf
mov
pop
jg
and
jae
arpl
add
insl
daa
push
faddl
inc
repnz
rcll
push
xchg
out
dec
iret
lret
shrb
dec
sbb
stc
leave
inc
push
mov
stos
test
inc
mov
sub
sub
imul
xadd
inc
aam
call
nop
test
and
scas
adc
dec
into
push
insl
cmp
cld
nop
negl
jl
push
andl
aaa
adc
push
xor
iret
mov
int3
adc
jp
ja
dec
adc
fadds
fdivrp
inc
mov
nop
lret
in
mov
push
clc
fldenv
out
ja
adc
loopne
movsb
packssdw
movsl
in
cmc
xchg
fldl
add
pop
cmp
lds
adc
pop
ffree
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
stc
jb
xor
adc
adc
adc
fnstenv
scas
adcl
cmc
xor
cmp
or
out
sbb
sahf
ljmp
lret
test
shlb
dec
sarl
int3
and
js
inc
lahf
push
cltd
pop
push
rcrl
pusha
cmpsb
jne
vmptrst
xchg
and
and
jae
popf
fs
xchg
rclb
mov
xchg
adc
enter
and
pusha
mov
add
xchg
jno
mov
int3
dec
adc
xor
adc
inc
mov
adc
xchg
ret
call
pop
dec
mov
dec
mov
mov
or
cli
sbb
adc
cmp
and
mov
xchg
push
mov
outsl
lahf
pop
pushf
xor
xchg
xlat
xlat
daa
or
addl
pop
addr16
std
ret
jecxz
adc
sar
inc
mov
xchg
or
insb
pusha
sub
pusha
je
or
mov
mov
in
inc
xchg
or
test
push
ss
pop
test
jbe
inc
clc
addl
js
std
loopne
jmp
out
push
js
insb
in
cmc
loope
sbb
mov
pop
pop
fistps
nop
ss
push
ficoml
add
mov
xor
inc
into
fs
lret
sti
and
les
out
push
leave
imul
push
push
cltd
mov
sbb
mov
and
test
push
ret
movsl
xchg
xor
inc
mov
sarb
jo
in
daa
or
pop
mov
or
inc
sub
jmp
sbb
push
dec
pop
jg
pop
mov
sbb
xchg
ja
notl
loope
shlb
dec
repnz
and
iret
aam
data16
push
push
jp
jne
cmp
cmp
fiadds
push
dec
fdivl
shl
call
jo
outsb
sti
mov
aad
mov
adc
js
roll
das
ja
adc
addr16
stc
imul
lahf
cmp
sti
shll
mov
jae
outsl
adc
cmpsl
clc
lds
jg
adc
lods
xor
fcompl
movsl
icebp
adc
cwtl
aas
pop
leave
xchg
dec
mov
cmpsb
into
pop
test
sub
add
sahf
pop
sub
andb
jle
xchg
pop
lret
sbb
lods
pop
std
mov
dec
lahf
out
scas
inc
jmp
inc
popa
push
mov
jmp
lret
mov
push
and
xor
cmp
ljmp
pop
push
imul
and
push
jo
or
fiaddl
and
enter
pop
adc
movsl
xor
mov
dec
dec
sub
add
rcll
jno
into
mov
pop
inc
les
pop
xchg
sbb
fwait
push
cli
pushf
push
test
lcall
imul
cs
jbe
inc
stc
jmp
sbb
lds
shrl
aam
push
fpatan
adc
std
mov
mov
xchg
ud2
add
push
or
add
in
aaa
adc
scas
lahf
push
cmp
push
and
cmp
imul
xor
daa
jg
faddp
inc
jge
pop
outsl
xchg
ss
in
sub
jge
xor
shr
shlb
pop
lahf
pop
cltd
icebp
addr16
mov
xchg
or
es
fs
xchg
into
sbb
sub
aas
push
mov
mov
pop
adc
push
scas
arpl
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
lock
stos
inc
dec
adc
xor
adc
loopne
insb
sbb
mov
sbbb
push
jg
xchg
fs
pop
dec
dec
aas
jno
clc
push
and
rorl
adc
and
sbb
adc
xchg
xor
and
mov
imul
mov
mov
jle
adc
adc
mov
xchg
std
jp
loope
inc
gs
and
xchg
mov
cmp
arpl
and
inc
loop
test
push
pop
cmp
mov
jl
add
mov
loop
xchg
paddusb
add
shll
cld
sub
cmp
insl
fsubrs
sbb
clc
fldt
add
stos
inc
push
lock
or
lock
mov
stos
shrl
xchg
jp
xlat
pop
outsl
out
dec
test
nop
sbb
adc
xor
xor
je
push
das
mov
cmp
jnp
lret
sub
aad
sub
loope
in
mov
mov
mov
leave
mov
fisubrl
or
mov
sub
jns
jb
mov
mov
or
clc
into
adc
ret
mov
ljmp
fisttpll
sub
lret
dec
add
xchg
add
xor
cmc
xchg
dec
lock
cwtl
mov
pop
push
pusha
outsb
mov
add
xchg
stc
xchg
and
ja
dec
cmpsb
ret
mov
push
or
push
rorb
sahf
leave
fsubrl
dec
and
cmp
pop
and
sub
scas
outsl
out
stos
fidivl
push
scas
call
fcomi
cmc
cmp
mov
outsb
hlt
testl
imul
push
jl
ficompl
push
into
cwtl
mov
out
testb
jmp
sahf
iret
punpckldq
push
fdivrp
outsb
inc
scas
push
bound
scas
aad
push
cltd
xor
mov
cmp
pop
int
test
sub
leave
pop
mov
test
out
push
cli
lret
out
adc
inc
sub
daa
mov
mov
mov
rcr
orl
inc
int
mov
jne
sub
das
add
push
scas
nop
lret
jecxz
int3
test
cmp
jg
imul
adc
push
and
jp
inc
sbb
aaa
dec
lcall
stc
xchg
xchg
xchg
and
mov
xorb
cmp
inc
dec
movsb
fisttps
pop
mov
or
jmp
inc
mov
pop
shlb
and
xchg
lods
mov
movl
jbe
int3
clc
add
subb
in
mov
pop
jno
jecxz
ficompl
fwait
shll
push
enter
imul
mov
dec
add
xor
mov
mov
inc
movsb
lret
add
jne
adc
inc
cmc
aad
pushf
add
in
aad
mov
sbb
mov
sub
inc
mov
jecxz
pusha
inc
sbb
add
sarl
dec
xor
jo
out
pop
int3
stos
xor
mov
dec
out
mov
es
cwtl
mov
sub
andb
lock
arpl
dec
rclb
out
inc
or
ja
clc
xorl
push
aas
outsb
jmp
xor
mov
mov
out
lods
fmull
push
ja
ljmp
xchg
push
and
mov
lret
ret
test
push
xor
fxch
mov
popa
subb
test
popf
or
imulb
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
leave
popa
mov
les
fld
push
jne
xchg
or
ret
ja
xchg
push
cmp
pop
xor
mov
jb
inc
mov
jne
rol
sbb
push
lock
bound
test
pop
push
xor
adc
mov
imul
shrl
popf
cmp
push
adc
icebp
gs
scas
jbe
montmul
cmpsb
xchg
mov
mov
or
scas
inc
icebp
xor
loop
clc
iret
jg
insl
xchg
js
sbb
adc
aad
push
fstps
jbe
mov
cmc
xchg
push
stc
test
mov
push
dec
mov
adc
in
add
sbb
jle
in
daa
ret
and
out
stos
mov
or
push
adc
sbb
jg
cmp
or
popf
insb
aam
add
es
push
pop
jae
cmpl
cmp
xlat
in
fisubl
or
mov
cmpsl
cmp
data16
in
mov
jb
xchg
bound
or
push
dec
adcl
div
dec
lods
pop
popl
sbb
sahf
add
and
int3
into
inc
push
mov
push
cmp
aam
ja
into
test
sub
inc
push
and
arpl
fldt
xchg
push
jnp
test
xchg
or
xchg
lea
and
leave
clc
mov
cs
lret
cmp
mov
push
gs
jmp
pop
cmp
aam
and
outsl
shrb
jae
cmpsb
pop
cmpsb
div
mov
dec
sbb
test
xchg
sbb
hlt
pop
push
lds
inc
mov
outsb
cmp
xchg
stos
lock
scas
je
adc
mov
push
adc
push
add
cltd
xor
pop
clc
out
imul
pushf
cmpsb
xor
add
std
pop
jne
int
or
mov
push
adc
das
and
mov
adc
cmpsl
pop
dec
addr16
jmp
mov
inc
addb
xchg
cld
ficoms
stos
jae
imul
sti
fidivrs
mov
mov
jnp
pop
leave
and
out
ja
mov
push
pop
mov
push
nop
out
xor
dec
addr16
or
int3
mov
mov
xchg
inc
push
mov
cmpb
mov
mov
jecxz
add
stos
lahf
jbe
adc
movb
into
mov
jge
add
inc
daa
mov
into
popf
jge
push
mov
gs
loope
pop
hlt
push
sub
lret
fadds
scas
ljmp
jecxz
cmp
mov
jg
sahf
shll
sub
dec
push
outsl
repz
push
subl
cli
push
mov
dec
cld
push
cs
or
jl
scas
and
fs
inc
push
sub
inc
mov
adc
sbb
add
arpl
mov
cld
aad
cmpsl
popf
jbe
add
pop
xchg
dec
sub
out
xchg
jbe
push
xchg
ficomps
out
cld
mov
dec
xor
and
pop
shlb
cs
ret
push
mov
fsubs
lock
outsb
jge
aad
lea
ja
aas
lret
sbb
dec
sbb
mov
adcb
adc
xchg
xchg
rcll
mov
mov
mov
push
inc
jne
adc
inc
pushf
mov
or
scas
je
aaa
test
loopne
out
mov
push
leave
mov
or
repz
jmp
stc
loope
push
stos
fbstp
fnop
jbe
push
mov
popf
inc
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
movsb
js
cmp
adc
adc
adc
jns
loope
push
pop
dec
stos
add
not
or
into
divb
lahf
cmp
push
xchg
in
dec
xchg
in
lret
mov
movsb
sbb
test
mov
pop
cli
mov
in
nop
test
ds
fld
scas
and
cmp
inc
pusha
cmpsl
dec
mov
loope
add
and
cmc
out
movsb
shrb
and
flds
test
subb
push
cmp
jbe
xlat
pop
jne
xchg
test
mov
orb
testl
lock
jno
fbstp
mov
into
arpl
icebp
xor
sub
call
outsl
lods
inc
inc
sar
jecxz
push
or
dec
cmp
mov
mov
sarb
cmp
pop
inc
inc
mov
out
sbb
mov
xorb
filds
sahf
cli
lods
mov
test
jg
pop
xchg
je
cwtl
sub
shl
xor
pop
idivb
cltd
sub
scas
and
sub
je
push
test
or
dec
imul
lods
jge
adc
add
out
adc
into
pop
dec
test
sbbl
js
in
and
popf
out
and
sarl
inc
push
inc
lock
inc
aad
and
jg
mov
jo
adc
xlat
add
outsl
mov
into
jl
ret
test
xchg
jae
imul
mov
clc
fnstenv
test
sahf
stos
xor
mov
dec
flds
cmc
cmp
ret
cmp
pop
fdivrl
js
push
sub
dec
addb
pop
lcall
mov
inc
jo
lret
sti
sbb
xor
imul
lret
aas
add
cmp
loopne
xchg
mov
adc
imul
xchg
lods
push
sbb
pushf
adc
stos
sub
pop
aas
sub
adc
pop
xchg
add
mov
xorl
scas
add
cmp
cmp
negl
ljmp
bound
fsubrl
push
mov
push
jmp
inc
jmp
sbb
adc
cmpsl
xor
or
inc
sub
out
mov
add
pop
repz
repz
andl
push
and
mov
adc
inc
lret
stos
addr16
adc
dec
lahf
pusha
sti
mov
mov
and
adc
cmp
adc
insb
cmpb
popa
iret
xor
adc
pop
movsl
test
lcall
and
xchg
xor
dec
dec
in
add
cmc
pcmpeqd
mov
test
mov
mov
pusha
mov
push
stc
scas
lret
cmp
mov
inc
shl
lock
lret
test
jecxz
or
insl
mov
jns
frstor
add
push
inc
and
dec
mov
inc
cmpsb
insb
dec
add
xchg
pop
pop
add
insb
xchg
sub
iret
sbb
jmp
xchg
hlt
xor
rcrl
in
lds
pop
pusha
fcoms
arpl
adc
inc
in
movsb
test
jo
pushf
push
test
cld
add
in
scas
or
out
cmp
cmpsl
mov
inc
out
cmpb
insl
sbb
jmp
xchg
mov
cli
in
pushf
lds
and
adc
and
repnz
mov
xlat
push
jns
mov
or
inc
div
xchg
pop
xor
xchg
or
lods
mov
pusha
xor
xchg
repnz
arpl
ret
scas
pop
push
xchg
std
dec
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
cltd
loope
rolb
mov
xor
fnstenv
clc
cs
add
cltd
rcl
cmpsl
inc
jne
or
outsl
mov
repnz
js
jecxz
insl
add
push
insb
inc
mov
cmc
movsb
or
ss
pusha
aam
add
mov
das
aam
in
es
movsb
outsl
leave
dec
inc
mov
repz
test
dec
inc
jae
xor
sub
arpl
inc
mov
ds
rorl
xor
pop
push
mov
push
cmpsl
mov
sub
aam
push
test
fidivs
testb
paddusw
jns
inc
jne
mov
paddusb
pusha
and
mov
push
lret
dec
push
ret
pop
mov
add
jge
in
sbb
adc
cld
jmp
lock
mov
pop
add
enter
adc
mov
dec
cs
das
jns
mov
xchg
xlat
rcrb
pop
add
bound
jp
call
outsb
push
mov
cli
fldl2t
mov
mov
sarb
lds
mov
mov
roll
push
adc
outsb
fisubrl
movsb
inc
ret
in
dec
das
mov
imul
mov
bound
stos
dec
repnz
imul
sbbl
in
hlt
push
jb
loopne
stos
mov
inc
inc
into
cmp
add
mov
mov
loop
pop
notb
mov
or
pop
jl
popf
mov
add
push
dec
pusha
xchg
insb
or
pop
cmp
loop
aam
pop
lods
mov
ret
cld
jo
push
mov
lods
mov
orl
insb
dec
mov
loopne
nop
out
push
in
sbb
pop
scas
shll
sbb
jp
aam
push
cltd
in
mov
xlat
enter
cs
push
std
push
fistpll
bound
or
add
ljmp
push
mov
test
xchg
and
test
pop
pusha
sbb
mov
and
aad
dec
cmp
shlb
inc
xchg
loop
stos
orl
inc
daa
inc
add
xor
push
mov
sub
jno
dec
xchg
and
pop
shll
test
das
pop
stos
push
inc
mov
jne
jge
jo
dec
in
stc
mov
cmpsl
cmp
or
hlt
ljmp
xchg
jmp
daa
add
popl
bound
cltd
addl
mov
sub
lahf
push
push
jae
sub
or
nop
shlb
sub
sahf
add
test
mov
pop
jbe
and
outsl
fisttpl
push
loope
in
mov
jg
out
jmp
imull
mov
clc
std
push
test
jle
in
popa
cld
mov
insl
mov
mov
aaa
push
lods
rsm
shll
add
sbb
aad
jp
push
and
dec
sbb
jg
add
lds
test
arpl
aas
fld
sub
cld
bound
push
negb
loop
scas
cmpsl
push
clc
addr16
adc
cltd
loop
pop
mov
in
aad
push
mov
cmp
dec
enter
in
jg
rcll
mov
xchg
push
sub
jge
std
dec
popa
dec
jge
adc
sbb
stc
lock
xlat
shlb
fsub
add
push
sti
addr16
push
xchg
nop
je
hlt
or
push
roll
das
icebp
xor
sub
lret
rolb
ret
jbe
lcall
sub
shrd
xor
jmp
mov
popa
lcall
dec
pushf
lods
scas
sub
adc
adc
adc
ljmp
mov
outsl
in
pop
jnp
dec
push
shrl
mov
out
mov
xchg
or
rcrb
pop
std
xor
inc
jle
inc
xchg
jmp
loope
jg
movsl
stos
movsb
cmpsl
test
sub
mov
cmp
icebp
and
jmp
pop
sbb
mov
outsl
xor
pushf
xchg
pop
outsl
xlat
xchg
stc
aam
pop
test
repz
add
lock
lock
jbe
cmp
adc
loopne
fwait
mov
xlat
add
in
insb
mov
into
mov
test
outsl
dec
stos
dec
enter
dec
mov
sbb
aaa
in
xchg
insl
xchg
add
cwtl
js
dec
cld
adc
dec
incl
test
jb
push
scas
mov
ret
lahf
and
pop
and
cmp
mov
lods
dec
out
inc
push
mov
sub
xlat
jp
iret
int3
sahf
fsts
outsl
scas
loope
dec
sbb
jns
sub
xchg
xlat
pop
imul
stos
outsb
or
push
push
cmp
cmp
lods
adc
stos
stos
xchg
push
pop
cmp
fs
sbb
cli
enter
jbe
xor
out
jecxz
and
mov
dec
negb
mov
cmc
frstor
mov
sbb
pop
out
andl
sti
bound
cltd
mov
test
add
orl
daa
add
std
add
sbb
mov
aaa
inc
mov
addl
or
stc
enter
add
pop
movsb
mov
cwtl
jge
test
sbb
lea
ss
fsubl
gs
fdivs
jmp
jbe
lods
inc
insb
jae
scas
xor
and
mov
hlt
and
ljmp
or
sar
adc
xlat
lcall
loopne
dec
mov
loope
or
arpl
lret
ret
ss
shl
xor
inc
inc
xchg
cmp
in
mov
out
jae
rcrl
insb
inc
out
insl
ljmp
and
inc
push
test
ret
mov
in
and
pusha
test
fildll
sahf
jmp
ret
cmc
fadds
test
loop
loop
sub
in
stc
ds
movsb
scas
jmp
mov
leave
sub
cmp
into
mov
ret
and
stos
adc
popf
jns
adc
and
fwait
iret
push
push
mov
mov
xchg
cmp
nop
aad
es
scas
xor
mull
pop
cmpsb
aaa
daa
xchg
sbb
fwait
mov
andl
inc
es
std
cld
mov
mov
iret
dec
out
sbb
int3
js
lret
call
shrb
andl
int
lock
loop
mov
out
mov
or
mov
xor
lods
jp
xchg
stos
sbb
fsubrl
xor
mov
dec
pusha
adc
jae
rorl
loope
popa
mov
jae
add
sbb
push
push
jp
mov
add
shll
adc
mov
ficomps
mov
and
xchg
jnp
mov
fld
arpl
and
jns
test
mov
into
cmpsb
dec
movsl
movsl
xchg
mov
xor
mov
fistps
stos
popl
xchg
es
fwait
jl
jge
add
inc
sub
pop
movsb
imul
jno
stos
sub
in
fptan
push
adc
arpl
popf
mov
push
and
sub
cmc
sbb
repnz
cs
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
jg
mov
fmull
adc
daa
test
mov
ds
fnstcw
or
imul
sub
sbbb
ret
enter
ret
inc
jne
aaa
repnz
xchg
cmp
push
mov
insb
pop
push
test
jnp
mov
mov
imul
pop
dec
dec
push
adcl
cmpsb
pop
adc
lret
sbb
jge
mov
mov
ds
dec
xor
loopne
pop
push
add
fcmovbe
mov
enter
xchg
faddl
ss
mov
jp
dec
loope
mov
jb
fidivl
fnsave
sub
inc
insb
jb
xor
mov
mov
add
dec
enter
jnp
stos
icebp
pop
cltd
lret
mov
lret
test
pusha
repnz
xchg
insb
push
in
cmp
cltd
mov
inc
jns
mov
or
jb
hlt
adc
daa
popw
addl
mov
xchg
sbb
push
adc
mov
xor
int3
mov
mov
xchg
iret
mov
data16
je
mov
jae
fadd
stos
cld
cmp
rorl
jb
mov
pop
xlat
repz
hlt
into
js
cmc
lods
jmp
mov
push
push
mov
fwait
mov
dec
fwait
cld
popa
jo
mov
loope
rcl
and
or
xchg
inc
scas
fnstcw
mov
mov
sub
inc
jmp
mov
mov
bsr
add
pop
pop
dec
or
push
ljmp
pop
bound
pop
fnstenv
jnp
sub
sub
aad
mov
inc
or
aam
and
mov
jb
es
shrb
push
add
in
mov
push
mov
fwait
adc
xchg
popa
mov
xlat
in
mov
xor
loop
push
insl
adc
adc
push
mov
clc
push
add
andb
dec
leave
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
repnz
es
sbb
adc
movlps
jno
icebp
pop
lods
mov
mov
mov
sbbb
inc
inc
push
aaa
push
and
xor
fs
xor
mov
mov
arpl
jne
rorl
out
cmp
sub
rolb
std
fildl
test
hlt
das
or
push
mov
aam
inc
push
enter
dec
cmp
das
mov
int
xchg
adc
ja
ror
sub
cmp
adc
mov
push
inc
add
out
fstl
popa
std
push
or
and
ret
xchg
push
jl
int
mov
pop
mov
pusha
ja
jg
and
inc
and
jl
push
mov
or
test
or
lods
rolb
inc
push
addb
imul
push
lock
mov
out
in
fyl2xp1
jmp
out
stc
inc
xor
dec
scas
cmp
int
dec
aaa
fisubrl
mov
cmpsl
or
pop
xchg
ret
outsb
in
mov
out
rcr
popa
sub
xlat
push
and
fs
xchg
pop
jge
test
in
pusha
pusha
sahf
or
and
loopne
mov
je
aaa
mov
lods
cmc
xchg
fs
sub
out
sub
inc
jg
pop
out
js
xchg
movsl
sub
repnz
je
and
jbe
mov
stos
push
out
fistpl
mov
xor
jecxz
aas
inc
cld
xor
add
push
adc
scas
pop
jo
roll
test
and
insl
pop
adcl
pop
xchg
loop
cmpsl
lret
in
add
jl
mov
loopne
mov
stos
cld
xchg
pop
mov
push
mov
xchg
fidivs
mov
hlt
int
in
scas
sub
or
aas
adc
roll
cmc
push
sub
xlat
movsb
lods
iret
pusha
shl
push
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
pop
pop
lods
pop
sbb
adc
movlps
push
sub
xor
hlt
mov
add
test
dec
add
jecxz
and
in
push
push
dec
mov
rcll
and
cmpsb
push
enter
movb
adcb
mov
xchg
call
lock
push
ret
cli
mov
add
jp
and
mov
popf
sub
repnz
sbb
test
xor
jns
xor
or
outsb
out
pop
loope
push
in
jecxz
es
mov
decb
aad
jg
mov
je
lcall
sbb
jg
ret
push
dec
pop
pop
mov
or
mov
push
mov
outsb
fidivrl
repz
push
mov
xchg
je
inc
inc
inc
and
jecxz
pop
dec
sub
in
push
repnz
shrb
cmpsb
iret
xchg
xchg
and
roll
sbb
sbb
movsb
mov
insl
mov
jno
stos
arpl
xor
dec
push
aam
iret
sbb
xchg
call
cmpsb
test
adc
aad
hlt
imul
cmp
js
lret
lret
jne
mov
and
xchg
dec
ja
jge,pt
inc
fwait
jno
movl
cmp
jp
jge
sbb
sub
xchg
pop
dec
fstpl
jp
popf
inc
fsubl
adc
test
jmp
dec
xor
cmp
std
add
inc
xlat
je
mov
stos
cltd
arpl
iret
into
add
movsb
shlb
xor
or
cmp
inc
sbb
repnz
xchg
pop
popa
xchg
jbe
xor
out
test
in
jo
cmp
movsl
jnp
inc
jmp
jmp
aam
js
cmpsl
push
mov
leave
jge
mov
shl
decb
aam
push
or
pop
pushf
lea
lret
mov
lcall
mov
hlt
mul
jo
sbb
nop
stc
shll
fs
nop
add
and
inc
mov
lock
pop
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
xorb
and
movlps
inc
stos
mov
fnsave
dec
and
cld
adc
mov
aam
je
mov
and
add
shl
adc
inc
push
xor
add
and
push
dec
outsl
pop
inc
dec
lds
mov
rcll
in
clc
cmove
inc
push
aam
mov
stos
push
pop
inc
fcoml
movsl
pop
les
push
imull
fsubr
sub
les
out
fists
sbb
xchg
push
and
dec
repnz
jno
push
dec
xchg
psrld
add
xchg
mov
jecxz
adc
ljmp
mov
inc
push
add
adc
into
jae
push
cmp
lea
push
lea
and
std
xor
mov
jl
sbbb
sar
sbb
or
cs
stc
loopne
push
inc
jb
iret
mov
or
dec
addr16
test
in
rclb
xor
sbb
sbb
push
xchg
jnp
cs
out
sbb
test
cmp
xor
pop
dec
gs
nop
popf
add
jmp
mov
hlt
xchg
stc
dec
and
dec
shl
enter
inc
iret
push
out
fdivr
es
mov
iret
fsubs
dec
jb
mov
add
iret
aam
add
mov
aad
add
or
test
jbe
xchg
lahf
loope
mov
sbb
imul
imul
mov
cmp
sbb
mov
ljmp
in
lretw
xor
adc
in
mov
mov
test
jle
rclb
sub
popf
loop
dec
loop
icebp
mov
lds
imul
mov
aad
lret
dec
sbb
or
cmp
xor
ja
push
aad
cld
jno
cmp
or
icebp
std
scas
test
jbe
add
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
and
stos
in
adc
adc
movlps
js
push
loop
add
and
fidivs
movsb
clc
fimuls
and
mov
or
jle
ss
push
orl
pop
test
sbb
mov
fisttpll
cmp
cmp
dec
pusha
sti
pop
jp
lret
mov
aas
dec
loopne
lods
leave
rcll
frstor
dec
in
xchg
pop
mov
jns
imull
mov
mov
cs
rorl
mov
inc
ret
sbb
pop
jns
call
and
fbstp
cmpsl
mov
test
pop
cltd
mov
mov
dec
cmp
popf
imul
sub
std
inc
shlb
pop
pushf
xchg
ret
sub
insb
arpl
sbb
jecxz
repz
int3
jle
mov
dec
popa
mov
sahf
lds
jbe
cmp
add
insl
xchg
mov
or
add
insb
bound
jge
mov
push
aad
or
pop
xchg
push
push
imul
sahf
push
adc
inc
push
xor
dec
pushf
aaa
add
ret
cmp
test
pushf
xor
cmp
inc
imul
movsb
lea
lret
scas
dec
lods
and
jns
ljmp
and
mov
cmp
lods
ror
outsb
loop
xchg
jecxz
sub
xor
inc
mov
push
movsb
mov
cmp
add
mov
jb
sub
test
outsb
ret
pop
xchg
adc
sbb
lock
sbb
fidivs
imul
add
jbe
cmp
pop
mov
dec
nop
xchg
arpl
in
push
aad
adc
aas
jne
roll
cmp
cld
push
sbb
cli
jne
and
data16
jbe
mov
ret
into
mov
sub
nop
cmp
iret
and
jae
test
roll
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
out
cmp
imul
jmp
mov
clc
insb
dec
arpl
push
xor
pop
jnp
cmp
hlt
xor
fisttpll
not
cs
mov
pop
lock
out
inc
inc
pop
fistpll
cmp
fwait
mov
jg
popa
insl
sub
inc
in
dec
pop
push
nop
pop
orb
orb
scas
adc
mov
mov
jnp
call
dec
dec
gs
enter
dec
mov
test
mov
cmp
outsb
pop
sub
stos
shrl
test
ljmp
cld
push
stc
clc
out
aam
dec
cld
rcrb
mov
movl
aaa
out
xchg
out
pusha
ret
cwtl
push
mov
pushf
test
shr
sbb
sbb
test
clc
jae
push
mov
dec
mov
scas
fimuls
or
mov
cli
pop
xor
int
cmp
lods
mov
push
mov
mov
insb
or
sarl
lock
int
in
pusha
pop
pop
shr
dec
ljmp
addl
inc
cmc
dec
jnp
xchg
lock
or
or
test
sbb
adc
push
sub
jl
or
cli
fists
das
gs
mov
movsb
movaps
in
ja
aas
pop
xchg
inc
imul
ret
push
xor
sbb
pop
and
push
xchg
daa
pop
ja
test
lock
outsb
xor
roll
xor
inc
cli
cs
adc
test
jecxz
leave
pop
jg
cmpsl
rcrl
out
mov
mov
adc
and
test
ljmp
ds
scas
loop
sahf
inc
rolb
sub
adc
push
pop
push
cs
outsb
or
fsubr
xchg
out
mov
aaa
mov
sub
lret
adc
jnp
call
inc
dec
and
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
mov
fmull
adc
rorl
lret
data16
and
adc
adc
clc
pop
shlb
negl
push
sub
adc
add
int
aam
jns
cli
pop
inc
testl
inc
dec
mov
out
push
push
test
lret
adc
mov
in
rcll
xchg
pop
jmp
dec
lods
mov
adc
incl
mov
popf
fsubrl
fists
mov
xchg
inc
adc
pop
mov
mov
lret
stos
mov
push
popa
push
adc
mov
xlat
imul
pop
and
ss
popf
inc
push
daa
adc
lock
cmp
sbb
cwtl
push
jge
ficoms
out
imul
je
push
dec
xor
mov
fimull
sub
subl
repz
push
ret
push
js
mov
dec
addb
neg
dec
fsubl
pop
mov
insl
pop
jmp
lret
outsl
or
movsb
incl
push
xchg
int
mov
mov
mov
jmp
mov
je
aaa
xor
xlat
jo
jmp
outsl
out
or
mov
or
pop
mov
mov
inc
cmp
xchg
lret
lret
cmp
imul
sti
xor
inc
adc
cltd
popa
mov
cmp
add
push
ss
imul
pop
dec
pop
jo
xchg
mov
lods
push
xor
push
cmpsb
jle
push
movsl
sbb
push
mov
jno
leave
dec
push
outsb
sub
jge
ret
xor
sub
shlb
dec
lret
je
in
sbb
mov
in
shll
xchg
sub
jmp
cmp
push
inc
adc
jecxz
popa
sub
aas
xlat
push
jle
loop,pn
sbb
push
push
cmc
sbb
pop
sub
in
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
dec
jbe
inc
dec
clc
into
xor
xlat
and
jge
call
icebp
movsb
pop
les
mov
jle
mov
sarl
jmp
xor
xor
jp
push
icebp
or
dec
inc
sub
out
clc
pop
xchg
movsb
xchg
sub
fwait
mov
jae
data16
out
adc
cmp
xor
and
and
mov
mov
fsub
outsb
aaa
nop
push
pop
add
jno
imul
loopne
daa
xorb
jp
push
xchg
inc
ljmp
mov
addr16
ljmp
call
push
pop
aas
xchg
dec
into
fnstcw
loopne
cmpsl
mov
ss
xor
and
jnp
inc
gs
test
inc
lcall
not
inc
sarl
into
xorl
cltd
xlat
pop
dec
inc
xor
cld
cmc
pushf
outsl
ficoml
shl
or
lock
inc
pop
sbb
inc
test
jmp
fisttpl
test
pop
pop
inc
fstpl
pop
inc
xchg
imul
clc
mov
loope
mov
daa
out
lds
xor
sub
sub
mov
push
pop
clc
test
hlt
cli
xor
mov
xchg
jecxz
add
push
cmp
add
inc
xchg
ror
mov
mov
stos
sub
pop
pop
sbb
jle
sbb
add
pop
push
rcrb
jb
cmc
rcr
test
mov
adc
and
lcall
pop
mov
or
inc
jecxz
cltd
insb
loop
sbb
leave
mov
cmp
push
xor
mov
push
push
mov
fs
mov
xchg
jmp
cmp
adcl
mov
jle
inc
push
add
stos
outsb
fsubrs
aaa
jle
test
daa
push
add
ret
mov
jle
daa
jno
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
leave
in
pop
sbb
rol
jne
addr16
shll
ret
outsb
popa
loope
addb
mov
pop
std
xor
xchg
negl
nop
stos
sub
or
or
cwtl
push
or
xor
fwait
push
arpl
sbb
ss
iret
xor
push
daa
lcall
pop
mov
cltd
cli
ja
daa
adc
xor
clc
scas
jno
in
push
ss
sbb
in
add
sub
shll
push
mov
pushf
cwtl
decb
mov
jl
lock
sar
sahf
or
cmp
sbb
jns
and
loopne
dec
dec
pop
lret
mov
sub
jns
insb
mov
es
sbb
sbb
mov
andl
mov
lods
imul
inc
fbstp
nop
fistps
inc
mov
fcomp
pop
xor
shl
jp
test
gs
lds
and
sub
or
mov
sub
jle
inc
pop
fiadds
daa
pop
adc
cmpsl
jb
cltd
pop
pop
outsb
bound
aaa
jmp
ret
movsl
mov
into
je
mov
aaa
dec
shrl
jns
lcall
push
test
fstpl
xchg
dec
xlat
in
cltd
mov
lahf
nop
into
adc
dec
mov
push
lea
jecxz
popa
mov
ja
jl
sbb
lret
out
cltd
outsb
stos
pop
mov
mov
popa
cmpsl
divl
sub
je
pop
mov
nop
daa
cwtl
pop
insl
lea
add
push
cmp
insl
fwait
scas
sbb
push
arpl
push
jg
fsubrl
sti
fdivs
adc
or
daa
or
int3
xlat
cmp
in
push
jns
mov
push
adc
mov
lret
mov
jl
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
imul
aad
adc
fmull
adc
jns
sbb
pop
int
cwtl
outsl
enter
int
repz
mov
jae
adc
out
and
shlb
adc
or
outsb
mov
add
fstps
cs
in
ret
aas
mov
cmpsl
add
fildll
nop
dec
test
imull
call
inc
sub
insb
test
cmp
scas
popf
or
jno
sub
xor
mov
jns
jp
dec
sarb
ds
fnstsw
xor
add
mov
sub
jae
xchg
inc
lret
mov
cmp
pusha
fsubp
jns
mov
pop
mov
xor
scas
out
mov
testb
leave
or
pop
sub
stc
or
and
sub
push
aad
ds
sti
xchg
jl
jg
cmc
in
jae
aad
adc
fidivrs
pop
shrl
mov
jg
fs
xlat
in
sbb
fsubl
jge
into
fsubl
test
test
outsb
and
stos
sbb
add
call
sub
loop
dec
push
mov
cmp
mov
dec
lock
xor
test
scas
sbb
pusha
pop
ret
in
xchg
ds
add
sbb
fwait
scas
or
sub
and
lea
adc
add
fwait
mov
dec
push
or
push
into
ljmp
sbb
out
in
rcll
adc
fmull
test
out
lods
adc
pop
outsb
jae
fimuls
xor
xor
inc
iret
adc
shlb
mov
lock
jb
mov
inc
mov
mov
or
mov
cmpsb
int3
addr16
mov
call
movsl
shll
cmp
mov
test
cmp
jbe
dec
fmulp
or
sub
shlb
sbb
data16
shrl
and
pop
shl
push
jne
lds
hlt
ss
cmp
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
lea
sbb
fmull
adc
add
call
push
das
mov
xchg
data16
add
ds
xchg
push
lods
cld
adc
les
outsl
subb
mov
subb
jg
mov
insb
cltd
aas
out
sub
insb
adc
dec
push
mov
inc
dec
mov
xor
in
lcall
lcall
fistpll
gs
push
gs
push
sbb
fildll
ss
insb
cwtl
dec
xor
int
pusha
nop
repnz
sahf
and
lods
pop
test
imul
mov
xor
dec
jg
repz
jecxz
add
js
pop
sub
aas
mov
imul
inc
cmp
ja
iret
mov
ljmp
and
pop
jecxz
push
xchg
stos
out
mov
test
adc
pushf
or
dec
and
arpl
dec
dec
sbb
arpl
aas
test
gs
test
mov
or
in
mov
arpl
push
mov
call
pop
cld
cltd
and
loopne
rcll
out
sbb
xlat
mov
ret
xchg
mov
inc
xor
repz
mov
push
cwtl
cmpsl
inc
push
cmpl
mov
test
add
in
cmp
add
icebp
jmp
inc
sbb
jg
inc
loope
in
outsb
js
js
mov
xchg
and
outsb
jns
pop
mov
out
dec
or
pushl
adc
xlat
lret
jle
mov
sub
enter
mov
dec
sti
or
fiaddl
lods
jecxz
inc
or
fstpt
push
loopne
scas
dec
lret
sahf
cmp
cld
xchg
mov
mov
jmp
movsb
or
or
lods
dec
push
aam
xchg
stos
xor
rclb
mov
movsb
shrl
jp
inc
pop
cmp
ds
add
xchg
lret
push
sbb
sbb
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
stos
mov
sbb
dec
mov
pop
jmpw
inc
pop
xchg
push
lock
adc
xbegin
int3
inc
push
add
jl
xchg
popf
fcmovne
pop
inc
loopne
js
ljmp
mov
int
sahf
in
test
mov
mov
cmp
test
cmpsl
mov
push
out
cld
fisubs
and
test
jae
jmp
les
add
scas
xchg
add
adc
sbb
push
iret
outsl
adc
jecxz
pop
sub
xchg
inc
stc
add
mov
lds
mov
dec
push
sbb
xchg
push
out
push
xchg
inc
sbb
inc
icebp
cmpsl
leave
lods
jg
repnz
ljmp
scas
fnstenv
mov
dec
mov
push
pop
sbb
mov
xchg
sub
jg
fld
jl
xchg
das
mov
cmp
inc
push
mov
push
xlat
or
filds
mov
les
imul
and
ja
mov
push
out
jnp
sbb
stc
int3
push
insl
adc
iret
movsl
fwait
pop
cld
or
jns
daa
jne
sbb
xchg
or
mov
lock
outsl
xchg
hlt
dec
push
stc
cmpb
pushf
xchg
sub
ljmp
xchg
daa
es
jno
pop
mov
lea
mov
lahf
or
lahf
js
ds
xchg
add
lahf
jb
addr16
es
fidivrs
push
cs
scas
js
push
aam
ret
repz
loope
fldl
push
sub
mov
loop
mov
xchg
fsubs
mov
dec
je
mov
testl
push
xchg
rcrl
push
aaa
movsl
aam
imul
stos
bound
jmp
dec
sub
pop
adc
rorb
setp
sbbb
das
inc
cmp
xor
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
mov
inc
push
ja
into
mov
jne
mov
repz
push
inc
inc
enter
in
fisubrs
sbb
pop
test
aas
xchg
leave
ss
add
sbb
adc
fisttps
call
push
adc
mov
push
mov
shll
xor
lret
cs
jne
std
aas
in
movl
adc
sub
inc
sbb
scas
mov
jo
ss
subb
ds
push
jle
pop
mov
or
int
mov
das
adc
xorl
cltd
mov
inc
mov
add
lods
fstp
divl
cmp
aad
pusha
jg
rorb
lea
ljmp
mov
stc
int3
div
psadbw
mov
add
inc
jbe
xchg
mov
mov
push
cmp
clc
test
xchg
mov
mov
pop
lret
rorl
dec
arpl
jecxz
imul
adc
call
lds
or
push
dec
rorl
push
les
xchg
mov
cmp
movb
jno
mov
xor
fwait
ljmp
or
jg
testl
cs
ret
inc
dec
stc
inc
and
rolb
cld
add
out
add
pop
sbb
xchg
inc
out
mov
jae
xor
shlb
mov
push
sbb
lock
sub
idiv
loope
adc
daa
cli
cmc
outsb
pop
insb
sar
addr16
cmpsb
adc
adc
pop
leave
pushf
mov
out
xchg
xchg
sbb
or
xor
in
pop
jecxz
sbb
dec
ret
or
mov
mov
adc
jmp
xchg
ret
cltd
cmp
jo
int3
jbe
mov
cli
mov
cs
add
pop
rorl
jge
xchg
push
push
sbb
repnz
movsl
notb
mov
fnsave
or
pop
test
mov
adc
lahf
mov
sbb
lds
cmp
mov
sub
jmp
addb
movsw
rorl
je
inc
daa
fwait
cmp
les
jmp
xchg
xchg
xchg
data16
sahf
lods
cmp
xchg
jmp
sbb
or
jle
sbb
add
inc
jge
cmp
dec
scas
inc
fcmovb
cmpsl
xlat
cli
insb
jno
add
je
mov
rcll
pop
dec
or
pop
inc
mov
gs
jb
and
leave
loopne
xchg
dec
ljmp
nop
scas
jnp
xchg
aaa
stos
jbe
lods
dec
xchg
jmp
jecxz
loope
add
inc
mov
push
adc
sub
sub
adc
sbb
xchg
mov
pushf
mov
mov
xchg
or
lret
mov
add
inc
ljmp
xchg
int
subb
mov
in
iret
dec
and
leave
outsb
dec
cmp
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
xchg
cmc
stos
mov
adc
jo
adc
hlt
mov
test
mov
xor
loope
cs
int3
adc
into
jecxz
add
mov
cs
nop
sub
movsl
or
mov
dec
mov
sub
sbb
cmp
mov
ljmp
and
popf
mov
and
pusha
das
lret
dec
jne
and
jmp
out
out
sbb
aas
sbb
xchg
jge
push
enter
in
mov
sbb
les
lock
mov
int3
loope
add
gs
addr16
cmp
lret
stos
lea
les
mov
fwait
fs
mov
imul
stc
scas
xchg
call
mov
lds
bound
xor
sub
push
cmp
jmp
out
lret
mov
testb
es
mov
push
ja
lret
xor
xor
sbb
add
pop
jb
into
popf
jmp
add
lds
nop
gs
rclb
stos
xchg
push
in
mov
jg
xor
js
ret
mov
sub
jbe
jl
mov
jno
je
fsubs
vorpd
xor
jle
nop
pop
cmc
int3
fisubrs
fidivl
xchg
inc
xchg
push
mov
ret
mov
adc
push
inc
jmp
lock
mov
sti
mov
mov
mov
xor
cmp
fs
imul
dec
push
dec
test
test
jl
cmc
dec
mov
cmpsl
mov
ret
jae
jle
cmp
mov
add
xchg
add
and
je
xlat
imul
pop
stos
or
add
or
cmp
data16
mov
fildll
insl
push
cld
ljmp
or
outsl
cli
mov
mov
add
iret
pop
add
sub
aas
fwait
je
sbb
insb
test
test
repnz
xorb
adc
push
sbb
cmpsb
fistps
jl
pop
mov
dec
add
mov
pop
stos
outsb
adc
divb
in
aam
inc
lret
cmp
or
or
int
or
andb
lods
jnp
xor
sbb
decl
push
pop
sub
aaa
movsl
adc
mov
pop
mov
mov
test
aad
mov
and
jl
leave
sub
sarb
cmpl
shlb
push
fidivrs
mov
mov
popf
pop
push
in
push
out
fdivrs
cli
scas
or
jecxz
lret
pop
mov
repz
lock
jecxz
loopne
ffreep
fisubl
pushf
hlt
je
or
nop
shr
xchg
test
test
sbb
pop
fdivrs
cld
mov
push
aaa
loop
xchg
mov
inc
xchg
inc
add
fnstcw
mov
mov
out
pop
dec
int
jnp
xor
lds
dec
mov
xchg
mov
shlb
pop
and
testl
test
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
push
cmpsb
js
fists
adc
adc
icebp
jmp
loope
cmp
sbb
aam
jg
push
in
xchg
mov
and
jb
in
xor
mov
push
out
push
test
mov
std
xor
xchg
shl
xor
addr16
into
xchg
xchg
mov
ss
fdivl
xor
mov
and
data16
loope
enter
das
mov
movsl
arpl
xor
in
repz
pushf
mov
movq
dec
xchg
movsb
fildl
sahf
cmp
xchg
cld
sahf
fwait
and
add
pop
push
jns
inc
or
dec
cmp
pop
dec
popl
lret
fmuls
in
js
mov
ljmp
dec
mov
push
imul
xor
push
push
iret
mov
mov
testb
les
lds
inc
rorb
dec
jmp
add
into
pop
or
sbb
inc
pop
mov
stc
fdivs
or
cmpsb
sbb
jle
xor
stos
test
mov
je
cmp
xor
fcmovbe
jg
sbb
sbb
xchg
pop
mov
adc
aas
sub
push
push
push
xchg
mov
arpl
fsubrl
lahf
or
call
faddl
xchg
mov
mov
push
mov
jge
cmpsb
xor
dec
mov
scas
cmp
pusha
jmp
mov
mov
shll
in
xor
mov
xchg
mov
or
pop
ljmp
jns
imul
mov
mov
dec
lods
sub
or
cli
test
das
lods
push
pop
pop
cmp
or
arpl
aad
pop
xor
pop
mov
dec
scas
sti
jno
add
add
addb
jmp
repz
mov
push
loope
cmp
mov
add
xlat
mov
fidivrs
push
std
in
pop
rcrl
sub
mov
xchg
sbb
dec
adc
adc
dec
cmp
inc
jp
or
mov
aad
xchg
add
pusha
jo
xchg
inc
cmp
clc
pop
data16
cli
rcll
lahf
hlt
jno
test
aad
sahf
lds
stos
cmp
dec
movsl
inc
mov
fwait
cmp
stc
outsb
ficomps
push
inc
jecxz
ja
push
adc
mov
imul
dec
adc
ret
testl
je
fwait
ljmp
in
jbe
adc
push
mov
ret
imul
stc
fiaddl
iret
lahf
jge
push
mov
jmp
cwtl
loopne
scas
mov
mov
pop
inc
pop
xchg
insl
pushf
mov
push
xlat
jl
jnp
and
inc
sbb
sahf
push
pop
nop
fs
int3
xor
rol
cmp
cmpsb
jle
sbb
add
pop
rorl
xchg
sbb
push
sub
insb
lock
mov
movsb
push
push
in
ret
or
add
inc
push
scas
dec
or
js
mov
cmpsb
pusha
nop
mov
adc
outsl
or
mov
xchg
mov
ret
or
dec
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
sbb
adc
adc
test
cmp
lea
add
sbb
xchg
sbb
notl
push
sub
dec
mov
test
popa
pop
adc
sbb
xchg
sbb
lock
mov
xor
and
cmp
aad
sar
pusha
xchg
adc
sahf
push
mov
cmp
or
jle
popf
inc
popa
lret
sahf
mov
int3
jb
push
aad
out
outsl
push
mov
dec
aas
and
pop
push
icebp
inc
sbb
jno
std
jg
aam
js
movsb
js
lcall
jnp
pop
das
add
cli
cltd
mov
int3
lods
adc
scas
loope
test
hlt
shrl
cltd
stos
je
add
mov
ja
imul
xor
jo
pop
fildl
add
or
ret
dec
push
mov
dec
out
mov
xor
stc
mov
cmc
adc
add
testl
sbb
out
jl
mov
dec
fstpl
push
out
sub
shll
jae
jbe
jb
mov
fcoms
mov
sbb
fmull
jo
rcr
pop
fiaddl
dec
mulb
inc
pop
or
imul
subl
push
in
pushf
xchg
das
lahf
mov
xor
cmp
sbbb
movsl
mov
dec
adc
lahf
mov
out
lods
sub
movsl
jge
dec
xchg
sub
jns
push
mov
shlb
xchg
fneni(8087
leave
lea
mov
mov
mov
mov
mov
andl
push
mov
in
jo
inc
cwtl
movsb
cmc
fcomps
add
cwtl
inc
push
aad
in
ret
dec
mov
jle
inc
imul
sbbl
cmp
stos
je
inc
test
jne
outsl
sbb
sahf
mov
fwait
cmp
mov
out
sbb
xchg
adc
outsl
popa
mov
or
mov
sbb
loopne
in
sbb
push
jecxz
cmc
shlb
scas
sbb
add
mov
push
dec
inc
cltd
leave
into
dec
mov
in
in
xlat
daa
sub
xor
outsb
push
mov
adc
cmp
xor
mov
xchg
loop
dec
push
rcr
sub
sub
sub
add
pop
les
xchg
and
adc
jbe
jmp
in
dec
je
xchg
adc
and
filds
sahf
iret
sbb
sub
arpl
aaa
jne
pop
leave
call
lods
notb
lods
scas
sub
and
loop
test
mov
mov
jecxz
pusha
adc
pop
mov
popa
sub
js
sbb
sbb
repnz
pop
mov
in
dec
mov
jnp
mov
xor
addb
insl
lea
div
jecxz
sbb
jae
lea
scas
fadd
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
out
cwtl
loop
sahf
aad
adc
adc
orl
pop
jmp
push
jo
sbb
lret
rcll
mov
loopne
mov
adcb
scas
testb
mov
js
movsb
push
cmp
insb
fistl
in
pop
insl
jo
xor
mov
sub
es
out
xlat
rcrl
sbbb
xor
push
and
adc
jge
data16
inc
test
cmp
add
aad
cmp
stos
mov
in
lock
pop
adc
cmp
inc
push
movsl
inc
shll
jmp
and
ret
jl
add
mov
jp
xor
int3
jp
push
mov
aas
push
out
fcmovu
fs
mov
aas
inc
adc
fidivrs
in
and
dec
sub
dec
dec
leave
adc
stos
pop
insl
sarb
jbe
xor
insb
jbe
mov
loopne
fidivrl
dec
test
adc
out
nop
rolb
shll
and
popf
mov
daa
cwtl
add
push
ds
dec
out
mov
gs
call
mov
dec
or
jns
adc
fcom
dec
and
lods
lcall
add
fnsave
test
mov
push
mov
ljmp
pusha
aad
iret
movsb
rcrb
imul
jb
lds
pop
jbe
fs
add
push
lock
jnp
sbb
scas
mov
shll
xchg
aam
xchg
adc
push
rcll
sub
addl
cltd
gs
mulb
sub
gs
ds
cmp
cs
aaa
fidivs
aam
rclb
mov
mov
imul
mov
and
in
jbe
insl
mov
add
sahf
mov
ds
pop
imull
mov
stos
aad
mov
cmp
adc
je
xchg
sbb
cmp
in
cmp
lret
dec
jne
mov
jmp
dec
jmp
jle
dec
jne
cmp
into
and
jecxz
jecxz
push
mov
lods
ss
xchg
or
fnstcw
sub
sub
sahf
je
test
cs
int3
sahf
sbb
pop
shll
fstps
mov
mov
inc
mov
cs
call
jae
push
xor
fwait
inc
mov
xchg
int3
loopne
test
sbb
je
sbb
repz
shl
dec
imul
test
test
jnp
int3
dec
fcmovne
mov
movsl
stc
popa
adc
or
cmp
out
test
idivl
push
adc
call
jmp
fcomp
in
loop
sub
mov
movhlps
mov
cmpsb
addl
xchg
inc
fiaddl
lods
es
dec
adc
movsb
xchg
ret
mov
pop
mov
jno
mov
xor
dec
pop
arpl
cmp
inc
jmp
xor
movsb
cmp
xchg
adc
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
es
or
jo
adc
and
inc
ljmp
int
repz
repnz
xor
lds
cmp
shl
in
push
aaa
inc
push
sub
mov
ret
fsubrl
ja
fwait
jg
dec
stos
xorl
cltd
test
dec
lahf
clc
daa
test
push
pop
out
frndint
cmpsb
pop
bound
int
ret
clc
sbb
fs
dec
mov
fildl
or
test
ljmp
hlt
sahf
ds
test
cltd
cs
cmp
dec
enter
jnp
nop
stos
bound
lret
adc
xor
mov
fwait
int3
stc
push
loope
rcll
push
xor
xchg
ja
subb
out
mov
lahf
fdivrl
mov
or
xor
xor
cmpsl
sarl
insb
shrb
addr16
or
ret
movsl
shlb
dec
mov
dec
or
mov
je
int
sahf
fxtract
movsl
push
or
mov
mov
inc
pop
aas
jg
inc
jecxz
rorl
ja
test
mov
push
and
sbb
push
sub
jbe
out
ja
and
fistps
shlb
dec
loope
lea
mov
push
ss
shrl
sbbb
xor
inc
mov
addr16
inc
xchg
scas
fld
faddl
test
jmp
std
pop
xor
xchg
in
sbb
jb
xchg
aad
loop
lods
pushf
int3
jge
sub
pop
xchg
popa
sub
roll
pushf
or
push
mov
fdivs
in
jg
push
or
mov
sbb
lock
int
jmp
mov
add
leave
inc
xchg
pop
jb
ret
jb
xchg
sub
xadd
and
sbb
lret
pusha
icebp
jb
cmpsl
rcl
xor
faddl
not
lahf
mov
movsl
pop
add
ja
mov
arpl
orb
mov
fldl
inc
jl
stos
sahf
subb
jno
jo
shlb
mov
out
pop
lds
jl
xor
jns
and
test
icebp
out
cmpsl
xchg
dec
dec
sbb
push
cltd
and
push
fmull
movsl
inc
push
xchg
jecxz
fs
nop
mov
mov
adc
lock
cs
mov
scas
lds
call
mov
mov
jecxz
mov
cmovl
and
cmp
fnstsw
mov
and
cmpsl
adc
sbb
jmp
call
in
inc
mov
fdivr
inc
adc
pop
inc
movsl
lds
lea
loope
xchg
pop
cld
test
sbb
inc
test
js
jns
pushf
outsb
mov
pop
dec
inc
cmp
popa
push
movsb
add
jecxz
popa
movsl
xchg
xor
addr16
and
ret
jns
repz
sbb
nop
inc
inc
xchg
pop
mov
in
dec
gs
or
frstor
pop
pop
mov
sub
ret
insb
add
and
sbb
enter
pop
cmp
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
inc
mov
std
icebp
repz
ja
jg
cmpsl
stos
lret
jae
test
aas
repnz
rclb
test
bnd
cmp
outsb
mov
add
jecxz
mov
mov
ret
jb
mov
mov
cld
pop
sub
xchg
push
fisubrl
daa
in
mov
jp
mov
xor
rclb
mov
dec
and
stos
loopne
push
dec
popa
rorl
sbb
fmul
popa
or
sbb
add
loope
in
ljmp
dec
cmc
gs
mov
cli
pop
inc
or
outsb
mov
test
push
loopne
xor
inc
jp
sbb
fwait
popf
imul
or
mov
mov
mov
enter
mov
arpl
jnp
std
std
aaa
insl
xchg
cmp
or
pop
mov
sahf
cmp
ljmp
mov
jo
or
push
or
sbb
cli
out
loopne
xchg
pop
or
sbb
outsb
lea
aad
jae
out
stos
sbb
jnp
fnstcw
xchg
in
insl
add
stos
mov
fisubl
sbb
sbb
adc
xor
aam
and
pop
sub
lods
pop
jnp
ja
movsb
jo
aas
ss
ja
inc
adc
mov
adc
push
jo
and
outsb
and
add
loope
lahf
push
xor
jns
jl
cmp
popf
xlat
add
xor
cmp
push
aam
xor
sub
cmp
inc
sub
jb
out
xor
sub
and
xchg
xchg
xor
xorl
cli
sub
clc
xchg
lcall
cmpsl
hlt
xchg
sbb
lret
pop
mov
or
mov
inc
in
mov
mov
sub
popf
inc
xchg
fstpl
loop
pop
pop
daa
pop
scas
ja
jbe
mov
lods
xor
fldt
push
cmp
nop
adc
in
fcmove
inc
or
xorb
sub
push
sahf
and
test
add
test
das
sub
mov
mov
mov
xchg
lret
xchg
jbe
int3
dec
out
out
repz
test
test
adc
andb
xor
jp
inc
sub
inc
add
push
in
inc
cmp
jbe
xlat
jno
inc
iret
inc
xchg
adc
dec
push
test
rorl
pop
out
fcoms
stos
jl
sti
ret
or
xor
inc
and
in
inc
fs
aam
sar
sub
stos
lods
mov
out
xor
negl
int
dec
xchg
sub
add
stos
in
in
stos
mov
mov
fwait
enter
pop
test
jmp
sub
pop
test
lods
sbb
add
sbb
stc
xor
roll
jns
int
mov
inc
fbld
lea
jp
xchg
xchg
lods
mov
dec
outsl
push
je
pushf
in
loop
out
aas
xchg
inc
mov
jp
lock
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
cli
pop
test
mov
adc
jo
adc
rorl
xor
lcall
rorl
jle
dec
lea
loopne
mov
sbb
pop
adc
xchg
loopne
out
mov
pop
push
out
pop
insb
mov
inc
nop
popf
dec
les
jmp
jg
jl
outsl
pop
sbb
add
js
mov
xor
push
push
mov
push
dec
jp
roll
repz
xchg
aam
mov
call
mov
ret
aam
dec
jne
lret
mov
lcall
mov
nop
xchg
push
lcall
xor
js
std
dec
loopne
leave
lods
mov
push
pop
push
dec
mov
lock
ljmp
popf
ljmp
inc
insl
dec
test
sub
adc
and
lods
xor
pop
jp
sbb
mov
mov
mov
je
hlt
jecxz
xor
pop
repnz
mov
aad
movsl
fmull
jmp
or
leave
push
lods
subl
mull
xor
push
push
aaa
popf
xor
scas
fidivrs
xor
xor
push
xchg
fcomps
pop
loopne
and
repnz
arpl
out
sti
loope
es
pop
insl
and
add
daa
jge
fstpl
xchg
in
adc
adc
or
movsb
cmp
xlat
nop
scas
dec
jbe
dec
add
fmull
cmp
jb
mov
pop
push
adc
outsb
jne
jne
scas
cmp
ss
ret
and
insb
gs
loope
out
jbe
dec
pushf
test
sub
outsb
ljmp
pop
aam
xchg
dec
xor
mov
push
lea
leave
out
in
cwtl
inc
mov
cs
rcr
or
into
sti
or
mov
pop
iret
jmp
loope
out
lock
aas
stc
jle
push
std
fimuls
gs
or
inc
xchg
lcall
aam
es
or
stos
lods
mov
sub
dec
lcall
fisubrs
insb
aaa
jl
fstps
ret
or
fsin
jo
and
out
xchg
dec
lods
lock
popa
loope
dec
adc
ror
fcmovnbe
incl
xor
fcompl
and
cli
jle
pop
jle
push
sbb
cmpsb
in
mov
xchg
sbb
lret
inc
pop
fdiv
xchg
xor
push
push
push
or
movsb
mul
divl
cmp
pop
xsha256
cmpsb
adc
std
push
jp
xor
stos
or
fildl
les
ret
out
pop
ficoml
sbb
andl
xchg
fneni(8087
ret
lret
addb
cld
jae
add
movsl
fistl
and
sub
sbb
test
bound
in
sahf
outsb
fidivs
sbb
mov
mov
pop
mov
dec
xchg
push
mov
sbb
push
mov
ror
inc
and
test
dec
imul
dec
cmp
movsb
mov
xor
jle
jge
out
clc
lods
shlb
dec
mov
stos
iret
rcrl
ss
xor
inc
lcall
arpl
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
das
push
mov
jo
adc
push
mov
lods
clc
repz
add
inc
aad
pop
lods
mov
jb
je
or
sbb
jnp
adc
mov
out
or
inc
call
jns
push
lds
inc
sar
ljmp
neg
ret
gs
repz
pop
iret
xchg
jno
mov
dec
adc
hlt
add
sar
mov
mov
pop
loope
insl
in
sti
stc
cmp
push
popf
mov
or
or
dec
bnd
dec
ret
push
repz
movsl
loop
das
imulb
jp
sbb
add
fs
sbb
xorl
pop
fstl
mov
push
inc
mov
cmc
or
int
cmpl
enter
jno
jne
jae
adc
or
mov
adc
mov
in
xor
out
inc
fadd
pop
inc
sbb
js
int
ja
add
out
aad
mov
pop
pop
aaa
push
mov
pop
cmp
shr
stos
dec
adc
cwtl
mov
mov
int
xchg
je
pop
sub
mov
cmp
ret
push
les
daa
cmp
js
add
jmp
mov
jmp
adc
mov
inc
pop
cmpsb
and
inc
sub
repnz
lock
pushf
or
mov
pop
lret
in
les
pushf
in
add
dec
add
loope
mov
push
cltd
cmp
clc
sub
sbb
dec
pop
ret
inc
mov
lret
int3
push
in
imul
fsubl
fmuls
dec
ss
test
jge
shrb
fucomip
push
add
pop
sub
inc
mov
rolb
add
fucomip
shl
das
sbb
repz
cmc
repnz
movsb
push
repnz
out
adc
ljmp
jno
sub
cli
pop
in
add
xor
in
xchg
mov
cmp
addr16
jl
stos
sarb
adc
push
adc
mov
clc
stos
js
in
nop
ret
jecxz
mov
movsb
addr16
mov
cmp
pop
addr16
cmp
pop
lock
clc
mov
popa
in
xchg
scas
inc
call
or
ljmp
and
mov
push
mov
stos
out
cmp
scas
stos
jnp
cltd
lret
or
leave
cmp
inc
and
leave
cmp
sbb
int
push
ss
xchg
out
push
mov
stc
adc
pop
jle
les
daa
out
or
jbe
sbb
cmpsl
int3
fsubrs
ficomps
xlat
mov
int3
mov
jnp
adc
mov
fists
sbb
sub
inc
lods
push
mov
ret
push
push
stc
gs
rol
lods
push
xchg
shrb
repz
push
adc
jg
std
jo
les
jge
and
stos
sarl
inc
les
insb
std
in
scas
pop
mov
lret
pop
clc
push
add
rclb
mov
es
gs
pusha
fnstsw
pop
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xchg
das
mov
push
push
inc
xor
dec
repz
adc
pop
scas
jp
push
adc
adcb
and
cli
and
jns
mov
test
mov
mov
and
push
mov
sub
dec
andb
lret
jge
sbb
push
andl
fadds
in
sti
pop
outsb
push
dec
inc
in
testl
inc
push
inc
push
icebp
mov
cmpsb
add
xor
or
dec
push
je
iret
pop
push
jmp
pop
or
xchg
pop
testl
jmp
jmp
sbb
lahf
mov
inc
loopne
sarb
test
sahf
stos
mov
mov
sub
sbb
bound
mov
or
push
inc
mov
sahf
lahf
push
jl
psubusw
xchg
shld
jge
push
push
ja
cmp
xchg
stc
imul
push
and
iret
bound
dec
dec
xchg
cld
out
les
xor
cwtl
mov
dec
aam
shl
test
sub
jp
and
lds
inc
inc
sub
inc
pushf
movsl
rcll
xchg
fnstsw
ss
jmp
add
jne
jbe
pop
mov
push
clc
lret
mov
lock
cltd
lret
aam
clc
loop
stos
push
mov
and
add
mov
adc
xor
sbb
nop
nop
mov
cltd
subb
push
add
out
sub
stc
cmpsb
xchg
es
leave
pop
push
mov
jb
mov
pushf
sbb
mov
cmpsl
pushl
xchg
pop
sahf
cmc
mov
loopne
aam
and
daa
push
lahf
cmc
test
jp
icebp
rcl
dec
mov
mov
sub
aam
mov
test
add
stc
aam
adc
hlt
inc
jp
jge
lret
mov
ds
js
jecxz
fbstp
and
data16
xchg
nop
jge
or
sbb
pop
shlb
sbb
jne
fwait
fwait
sub
rol
dec
sub
push
mov
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
xchg
cmpsb
js
stos
adc
stos
movlps
mov
jmp
or
shll
adc
lcall
cmc
imul
shlb
mov
cs
push
dec
xor
movl
out
sbb
cmpsb
and
jl
das
ret
adc
outsl
mov
sbbl
jge
mov
dec
mov
add
jbe
inc
add
ss
inc
push
insb
fldl
adc
pop
fisubs
ja
dec
dec
or
inc
mov
roll
movsl
add
shl
pop
jb
fisttpll
fdivl
xor
xchg
test
daa
imul
pop
es
fsubs
mov
xor
and
xor
rcl
fldl
adc
jne
xlat
jmp
icebp
lods
test
pop
push
xlat
cli
imul
int3
mov
scas
jecxz
scas
rcrl
adc
loope
sub
fsts
xchg
test
add
repnz
mov
ljmp
pop
push
inc
out
sbb
in
push
dec
and
fadds
push
inc
jne
add
leave
push
out
in
imul
adc
and
jle
push
push
imul
push
arpl
outsb
jmp
add
xor
es
push
lret
imul
ret
sti
call
push
jge
ds
aaa
jno
pop
daa
lret
rcrl
sbbb
mov
test
test
scas
sahf
add
dec
testb
pop
mov
mov
pop
cmp
jnp
adcl
js
mov
inc
popa
cmp
lds
or
sub
pop
scas
xor
jg
cmpsb
add
dec
push
jecxz
imul
mov
xor
ret
sbb
leave
cmpsl
xlat
sub
popa
add
movsb
cmp
jae
aas
ds
shrb
push
add
outsl
out
rol
lds
aas
cwtl
push
fcmovbe
xor
std
test
add
mov
mov
adc
push
out
lock
push
int3
inc
lods
sbbl
stc
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
int
js
cmpsl
adc
stos
movlps
ljmp
cli
pushf
scas
lret
loope
pop
mov
adcl
sbb
mov
mov
jl
je
mov
out
adc
out
int
outsb
inc
dec
mov
mov
inc
add
lret
addl
add
imul
jg
mov
jg
aaa
jnp
push
xchg
mov
fs
lds
sub
push
scas
dec
inc
test
add
mov
repnz
sub
ds
push
adc
int3
idivb
movsb
test
push
adc
fsubs
cmp
add
fistpl
stos
sbb
and
xchg
push
arpl
std
bound
jne
push
push
push
push
cmp
add
inc
lahf
xor
fbld
mov
popf
inc
jo
outsl
xchg
iret
sbb
push
jbe
mov
movq
hlt
inc
sub
pop
mov
repnz
xchg
fmuls
push
xchg
mov
mov
cmpsb
in
fwait
hlt
dec
cmp
fwait
cmp
mov
shl
mov
push
lds
jp
push
mov
out
outsb
sbb
int3
pop
cmp
subb
push
cltd
push
jecxz
shrl
bound
push
adc
ss
xchg
loop
mov
mov
lret
mov
push
lahf
jmp
adc
std
push
enter
cmp
addr16
cmp
pmulhuw
push
movsl
mov
loope
xchg
xchg
push
fdivl
subb
mov
dec
js
stos
or
rclb
les
in
adc
ficoms
lock
push
push
inc
test
jmp
xchg
test
and
aas
lock
mov
jg
mov
in
mov
scas
cli
mov
insl
orl
dec
gs
or
test
sub
cmp
mov
sbb
inc
stc
out
add
adc
xlat
xor
dec
rcl
fimuls
test
aas
sahf
lods
jp
mov
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
jo
mov
movlps
addr16
aaa
xor
pop
push
lds
sbb
adcb
les
ljmp
mov
call
inc
sahf
cmp
ja
aam
sbb
gs
xlat
push
inc
scas
movsl
fbld
sbb
rolb
les
sub
push
add
ds
bnd
push
outsl
pop
repnz
fstpt
dec
fldl
jecxz
rclb
test
dec
mov
cmc
imul
shl
mov
ss
test
xor
fsubrs
jle
cmp
jno
cmp
mov
or
inc
push
add
ljmp
xor
xor
and
pop
mov
sbb
jl
xor
adc
fadds
test
mov
addl
movsb
imulb
outsb
loopne
orl
pop
mull
and
scas
sub
and
gs
ja
ficoms
sub
sbb
mov
mov
push
and
xchg
call
inc
sbb
mov
sahf
adc
pop
mov
add
cmp
adc
push
pop
lret
dec
insb
out
mov
cmpsl
cltd
shrl
pop
sarb
dec
inc
addl
jo
incb
xchg
sahf
or
pop
add
in
pop
sbb
cmp
xor
xchg
loop
clc
push
sub
jge
daa
mov
shrl
add
dec
popa
enter
test
js
pusha
cmp
pop
psadbw
sbbb
push
test
cltd
ja
orb
pop
push
mulb
dec
xor
mov
jno
pop
xchg
iret
jne
je
leave
xchg
test
jmp
test
cmc
sub
int3
fwait
xchg
push
frstor
lret
inc
rcl
shl
out
mov
lds
inc
int3
jp
stos
push
shrb
out
aad
js
enter
loopne
sub
test
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cli
jnp
stos
mov
adc
stos
movlps
iret
mov
push
notl
fwait
sbb
in
push
or
shll
dec
xchg
cmpsl
xor
outsb
pop
rcrb
jno
sub
lds
addr16
jecxz
and
int3
and
iret
ficoms
cs
inc
fwait
adc
pop
outsl
out
call
xorl
les
dec
das
mov
pop
lods
imul
sbb
xchg
pop
mov
lea
aam
push
in
andl
cmp
dec
sbb
xchg
xor
cmpsb
jge
ss
adc
jo
sbbb
adc
push
sub
pop
jae
jge
iret
inc
shlb
popa
jl
scas
test
mov
mov
lock
fiadds
jnp
pop
xor
xchg
aas
loopne
or
mov
aam
js
mov
repnz
sbb
xchg
adc
push
push
xchg
add
lods
mov
push
out
push
cmp
lock
mov
push
jno
push
stc
shrb
scas
sub
mov
sbbb
icebp
xchg
inc
push
mov
or
adc
push
mov
test
repz
lea
test
jge
sahf
pop
je
into
cmc
push
push
test
loop
imul
movsb
and
cli
cltd
stos
aad
push
mov
dec
paddb
popa
mov
push
inc
jnp
int3
push
es
jae
lahf
and
adc
jnp
mov
lahf
fimuls
push
sbb
pop
mov
dec
jmp
insl
es
sti
in
mov
das
rcr
test
fs
and
jns
push
arpl
xor
inc
xchg
xchg
or
lahf
cli
lock
adc
jmp
fildl
jns
loopne
mov
mov
jns
cmpsl
xor
adc
test
push
push
adc
mov
aam
mov
movsb
scas
jl
or
shl
xor
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
pop
xor
fdivr
push
ja
push
pop
lea
in
xor
sbb
lret
xor
daa
xor
mov
mov
xor
sub
and
mov
aad
negb
xor
sub
arpl
jp
scas
jns
aad
das
xor
in
mov
aad
jne
mov
roll
stc
ficoms
add
pop
jne
leave
movsb
int3
cli
por
pop
push
imul
in
shl
pop
cmp
ret
mov
fimull
test
and
loopne
sbb
cmpsl
inc
lret
add
js
lods
imul
mov
mov
ret
add
add
out
scas
das
lds
icebp
out
data16
cmc
nop
dec
dec
sub
lea
dec
test
sbb
sahf
stos
sbb
mov
xchg
mov
lahf
adc
xor
out
jne
sti
scas
cmpsb
or
das
push
jns
push
stc
bound
std
adc
cmpsl
inc
push
mov
add
shlb
adc
pop
xchg
lods
dec
xor
sbb
xchg
leave
sub
stos
fcmovnb
rcrb
negl
andl
and
mov
repz
inc
loopne
aam
into
aam
and
in
sbb
aam
adc
stos
or
sbb
arpl
adc
pop
xchg
cs
cltd
testl
jle
and
dec
push
test
mov
into
test
or
pop
mov
pusha
or
push
mov
lret
ljmp
cld
pop
pop
pop
mov
lcall
ss
popa
xchg
sub
addl
adc
dec
jecxz
jno
aam
jge
sub
lcall
imul
xchg
lods
xor
outsb
jns
fwait
and
xor
sbb
es
jmp
cmpsb
mov
out
jbe
pushf
fidivl
stc
int
int
pop
xor
fidivrl
loope
add
add
aad
rorb
mov
inc
adc
jbe
out
cmp
mov
mov
in
add
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
cmp
js
xchg
sub
je
aas
pop
repnz
fiaddl
inc
scas
or
cld
xchg
sbb
ja
adc
adc
pop
dec
repz
cmp
xorb
push
std
stos
mov
dec
adc
jmp
mov
dec
and
inc
push
into
ret
imull
xchg
js
aaa
mov
rorl
adc
push
sub
leave
adc
push
cmpsb
movb
push
rolb
mov
inc
lcall
mov
lcall
mov
fisubl
mov
nop
imul
out
pushl
sub
xchg
and
ficompl
pushf
scas
jo
jbe
cld
inc
mov
pop
mov
xchg
pop
or
and
and
or
dec
adc
xor
jl
add
in
jle
dec
inc
sub
adc
mov
xor
ja
inc
arpl
imul
inc
lret
js
xchg
adc
dec
idivb
add
and
push
data16
or
mov
lret
cltd
sub
xlat
es
movsb
push
stos
adc
add
jbe
out
push
jmp
lcall
out
int3
icebp
cmpsl
pusha
xchg
ss
push
push
dec
flds
mov
pop
cmpl
add
inc
sbb
pop
cmc
or
movsb
mov
mov
rorl
add
mov
sarb
pop
mov
sbb
dec
sub
cmp
pusha
inc
sub
mov
data16
cmp
mov
rorl
push
or
iret
ffree
movsb
arpl
sahf
les
mov
aas
outsb
cmpsb
in
add
adc
insl
insl
test
pop
push
fadds
mov
ret
or
mov
bnd
lahf
dec
mov
aad
pop
lds
push
cmpsb
dec
mov
std
mov
sarl
in
sub
ret
into
mov
jp
insb
mov
mov
cmp
mov
int3
add
rcrb
flds
xchg
imul
add
or
aam
inc
frstor
shll
out
jne
push
cli
js
les
loopne
out
fucomi
mov
mov
mov
or
ficomps
ja
push
insl
cmp
mov
insl
jb
add
xchg
inc
jnp
pushf
cmp
inc
pop
aaa
ds
fs
fstpl
lea
lods
je
mov
dec
je
or
sub
inc
mov
jnp
xor
xchg
gs
mov
fnstsw
stc
add
addl
jmp
mov
jo
test
cs
mov
js
daa
mov
mov
pop
push
push
movsb
je
add
cmp
add
cmp
fwait
jl
and
nopl
or
fistps
out
fs
enter
sbb
xchg
jno
mov
hlt
shll
fistpl
lret
adc
xor
testb
jo
xchg
in
dec
mov
jge
dec
aas
cmp
mov
xchg
pop
ja
adc
add
mov
add
mov
jns
push
jp
pusha
dec
mov
in
fists
xchg
mov
cmpsb
or
pop
inc
inc
testl
inc
mov
insb
imul
mov
push
push
or
int3
inc
xchg
pop
dec
lahf
ret
mov
inc
inc
sub
push
mov
push
push
mov
rorb
adc
push
xchg
push
xor
in
movsb
fldl
gs
xchg
sub
ficomps
push
adc
punpcklwd
adc
push
rclb
fcmovbe
mov
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
hlt
dec
mov
pop
adc
adc
push
cmp
mov
sub
int
mov
lret
dec
sbb
stos
xchg
lods
shll
sub
negl
lea
sbb
movsl
or
mov
jg
inc
stos
lret
xor
jle
cmpl
je
out
push
mov
stos
inc
sbb
in
cmpsb
repz
push
inc
fs
pop
inc
ss
jns
sbb
dec
and
mov
inc
cs
push
idivb
data16
enter
aas
xchg
fisubs
xchg
sbb
cli
push
add
pop
xchg
sbb
add
movl
dec
mov
fists
test
popf
dec
cmp
sub
xorl
cld
adc
in
pop
pop
loopne
jecxz
es
in
or
xchg
into
mov
bound
divl
jmp
push
sub
and
adc
lahf
int
lods
push
lcall
jne
pushf
test
cmpb
xchg
aam
pop
mov
lret
sahf
cwtl
fcmovnu
inc
in
sbb
sub
lcall
lret
cltd
jle
jnp
xlat
mov
pop
fwait
push
imul
rcrl
stc
sarb
mov
mov
arpl
repz
aaa
inc
sub
roll
sub
fwait
cmpsl
xor
sub
jl
pop
cmpsl
or
adc
adc
push
in
lea
push
adc
xor
pop
jns
jp
aas
je
mov
xchg
icebp
pop
scas
dec
push
imul
sub
pop
jb
mov
add
pop
ljmp
ja
inc
mov
mov
jnp
shl
loope
mov
out
mov
into
subl
mov
aaa
jle
test
sbb
sarl
sub
adc
cmpsb
in
pop
jb
out
or
jno
push
push
cld
leave
lea
add
test
scas
pop
adc
sbb
lods
fidivrs
mov
in
int
leave
sbb
clc
ror
les
scas
mov
and
ret
push
inc
add
lret
aam
mov
mov
addr16
int
lret
push
jp
and
aam
pop
jae
cmp
sub
pop
sbb
mov
mov
mov
push
out
mov
adc
test
in
mov
push
mov
pop
adc
fisubrs
stos
mov
inc
dec
roll
xor
into
mov
jg
clc
xchg
xchg
aas
insb
mov
ficomps
repnz
push
mov
rolb
cld
in
and
pop
roll
inc
xchg
sahf
nop
jnp
imulb
inc
test
aam
xchg
xchg
mov
mov
sbb
cmp
sti
xchg
mov
idivl
xchg
or
and
leave
imul
add
jecxz
cmp
loope
jmp
lds
dec
jmp
add
lahf
out
aad
add
aad
jne
xchg
and
xor
mov
push
fcmovbe
dec
adc
sub
jle
mov
imul
test
rolb
mov
cmp
sub
mov
cli
mov
sbb
inc
jae
jb
mov
push
pop
mov
cmc
adc
int
inc
insl
add
dec
add
or
ss
add
call
loope
mov
and
ss
out
aam
sub
fisubrs
cmp
xchg
outsb
shlb
hlt
adc
ja
inc
out
push
cli
push
les
mov
adc
pop
cmc
outsl
jo
and
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
mov
mov
adc
movlps
xor
out
or
imul
cmp
aad
jmp
push
cld
or
jne
push
push
pop
outsb
xor
sarl
sbb
gs
popa
jno,pt
mov
divl
xchg
mov
lock
orl
push
cmp
pop
adc
lret
loopne
mov
jmp
xor
mov
mov
mov
mov
mov
aam
push
lds
lods
jno
stos
lods
popf
push
mov
pop
insl
dec
out
add
fldlg2
mul
arpl
cmpsl
cmpsl
mov
or
in
enter
and
or
push
pop
stc
xchg
ret
jl
and
push
roll
or
cmp
jbe
cmc
lods
sbb
js
pusha
insb
in
pop
sub
jmp
outsb
das
inc
imul
movsb
cmp
xor
icebp
inc
fdiv
inc
scas
fmuls
pushf
sbb
dec
out
in
lds
and
fwait
pop
push
cmpsb
orb
push
push
int
sbb
test
shlb
xchg
cmpsl
dec
pop
or
push
push
push
xchg
aam
xchg
int3
gs
das
pop
pop
or
or
out
add
jle
xor
push
jno
shrl
add
insl
pop
scas
pop
or
jnp
jbe
pop
inc
daa
addl
add
pop
mov
out
sti
mov
pop
push
mov
xchg
lcall
adc
sarb
and
fs
enter
pop
mov
cli
cmp
mov
clc
mov
ds
lcall
mulb
outsl
push
cmp
mov
dec
pop
int
jge
nop
mov
inc
test
lret
inc
int3
pop
jbe
push
cwtl
jl
cmpsl
cmp
mov
aad
add
sbb
jmp
adc
inc
lret
push
sti
add
ret
push
test
lods
out
lds
sahf
push
out
rclb
adc
shlb
sbb
jge
mov
mov
mov
idivl
roll
dec
mov
scas
xlat
push
push
xor
sbb
loope
test
out
cmp
mov
add
std
xor
add
add
sbb
xchg
jae
subl
lds
xchg
mov
xor
lcall
rorl
jae
insl
aad
pop
add
xchg
xchg
aad
call
sub
fildll
mov
andl
ret
ret
popf
rclb
xchg
fdivrs
mov
pop
lret
sbb
or
fidivrl
and
add
je
pop
std
movsb
dec
ret
cmp
in
test
xchg
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
test
lret
sbb
pop
add
leave
pop
xor
fisubrs
fstps
imul
sbb
pop
add
cmpsl
sub
push
pushl
pop
push
push
sti
pop
test
mov
mov
mov
and
loopne
inc
sbb
push
pop
mov
aas
dec
movsb
js
cld
push
sub
loop
outsb
and
jne
dec
cs
dec
test
lahf
dec
xor
je
pop
stos
pop
xor
lods
push
aaa
mov
cwtl
xchg
mov
jo
sbb
inc
aaa
push
dec
hlt
push
xchg
push
arpl
cmc
test
lods
or
roll
xlat
es
mov
test
push
jae
arpl
xchg
pushf
gs
test
popa
jno
pop
lahf
inc
jb
jp
xor
sub
lds
stos
bound
dec
testb
add
scas
clc
cmp
pop
lods
mov
scas
dec
addr16
loope
mov
push
pop
and
mov
fcomi
adc
and
stc
adcb
push
add
and
fdivrp
cmpsb
pop
mov
stos
mov
mov
inc
mov
sub
xchg
mov
in
in
scas
inc
sub
pop
push
imul
add
sbb
lods
xchg
fcomps
ja
mov
push
sbb
cmpsl
push
lods
in
add
gs
or
leave
popf
aad
jmp
inc
mov
out
pop
jne
or
sbb
and
xchg
adc
mov
clc
lock
mov
push
xor
and
sub
call
scas
or
mov
dec
shrl
enter
jg
jnp
inc
cmp
lock
mov
test
subb
mov
fidivrl
jb
out
aaa
pop
sbb
add
inc
sbb
sbb
negb
js
flds
mov
xchg
pop
add
inc
insb
jbe
xor
insl
add
or
adc
and
add
pop
mov
lret
jb
imul
inc
adc
sahf
iret
jle
or
hlt
dec
outsb
das
push
je
adc
push
js
xchg
shlb
jns
mov
bnd
jae
or
bnd
mov
fstps
lds
pop
inc
in
mov
mov
aam
cmp
fs
inc
imul
xlat
jmp
sbb
ss
jg
in
xchg
xchg
stos
cmc
jge
pop
mov
push
dec
aad
inc
jne
mov
out
mov
pop
lea
dec
neg
push
loopne,pt
sub
jne
clc
add
sbb
mov
mov
aam
faddl
enter
dec
lcall
sbb
incb
outsl
push
mov
and
fcomps
push
ljmp
cmp
inc
push
mov
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
or
and
adc
push
movb
add
int3
lods
fsts
jg
jge
jle
shrl
out
jno
cltd
fisubs
sbb
add
add
xchg
sarl
pop
lock
cmp
dec
ja
cmp
xchg
or
scas
int
orl
xchg
jbe
or
adc
xorb
and
adc
sub
xor
xchg
and
mov
push
fsubr
cld
rcll
mov
pop
fsubrl
inc
test
ret
pop
fimuls
daa
mov
and
mov
jl
xor
mov
fsts
fsubs
jecxz
fnstsw
mov
js
cmpsb
dec
sbb
push
addr16
fisubrs
sbbl
mov
loop
mov
fcoml
inc
sbb
pop
shll
jae
das
loop
mov
adc
scas
fs
mov
mov
dec
inc
sub
mov
mov
iret
inc
cld
negl
jae
mov
pushf
jns
xor
mov
mov
dec
movsb
lods
push
fcmove
pop
lds
push
lret
pop
popl
in
push
dec
fmull
popf
sub
inc
ljmp
mov
and
sbb
imul
jmp
out
js
adc
shrl
xor
jnp
or
fdivs
imul
lds
lcall
cld
jns
push
les
dec
lret
dec
xchg
xor
and
stos
aaa
or
and
sub
stos
popf
add
pop
jne
iret
std
ret
or
fistpl
js
lods
push
adc
xchg
push
fistps
adcl
pop
inc
movb
pop
mov
or
aaa
fcomps
stos
mov
testl
cmpsb
dec
incl
lahf
push
popa
or
xchg
das
xor
stmxcsr
dec
fildll
test
fldt
ret
adc
cmpsl
and
loope
fwait
cmpsl
pushf
jmp
push
xorb
pop
in
push
popa
and
cltd
data16
out
adc
mov
lods
out
xor
pop
cmp
fstpt
sbb
pushf
jae
push
adc
cmpsl
repz
xlat
pop
xor
and
fs
hlt
inc
or
sti
aas
sub
aaa
push
lcall
je
sahf
dec
pop
mulb
or
into
or
sbb
xchg
mov
out
into
add
loopne
push
scas
scas
stos
imul
int3
testb
xchg
jmp
cmpsb
lret
cld
jo
dec
stos
lret
adc
mov
and
add
cmp
push
rclb
cmp
test
pusha
cmp
scas
push
rcr
mov
mov
pop
mov
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
sbb
jae
adc
pop
add
lea
adc
or
sahf
jge
add
jp
sub
mov
adc
shl
movsl
xchg
add
mov
in
inc
inc
js
or
out
insb
pop
pop
and
imul
mov
imul
ds
test
js
ss
pushl
xchg
mov
test
jnp
stc
sti
add
mov
and
mov
inc
hlt
push
sub
lods
xor
dec
gs
popf
aad
mov
jbe
arpl
sti
out
leave
lods
dec
or
sbb
mov
cwtl
gs
jmp
fildl
xlat
ja
hlt
push
inc
cmc
mov
mov
jo
jg
or
xor
pop
add
mov
adc
repz
imul
sahf
ror
and
inc
rcl
imul
inc
sbb
cwtl
cmpsb
lds
mov
and
xlat
dec
pop
cs
and
and
add
mov
cld
jne
fstps
inc
jl
test
mov
test
sahf
inc
and
mov
repz
and
aas
cltd
or
sub
bound
sub
dec
daa
ja
cmpsb
lds
aam
leave
push
aas
jnp
pop
fsubrs
or
cs
dec
int3
loopne
leave
sti
add
dec
cmp
insb
mov
mov
xchg
mov
cmp
repz
dec
inc
jns
dec
int
mov
fimull
fucomp
les
push
add
adc
lods
sub
stos
xchg
scas
frstor
push
xchg
add
fistl
mov
imul
out
xchg
dec
outsl
xchg
sbb
pop
iret
cmp
or
jecxz
cmp
scas
ljmp
rcr
inc
mov
mov
sub
push
repnz
xor
iret
rcrl
adc
and
add
mov
sbb
adc
test
mov
sub
pop
mov
fmuls
and
pop
inc
jae
loope
imul
hlt
mov
icebp
mov
jbe
inc
dec
jns
stc
out
pop
sub
mov
sub
add
xchg
dec
leave
std
adc
pusha
ss
mov
mov
push
pop
insl
mov
xlat
mov
dec
dec
repz
sub
rorb
cmp
sub
xor
ret
ret
sbb
mov
push
sub
or
jp
aas
icebp
mov
mov
or
sub
sub
aas
push
neg
adc
stos
and
dec
xlat
cmp
jno
test
inc
xchg
lea
jae
mov
pusha
push
lods
fcmovnbe
xchg
adc
cmp
add
adc
ret
fisubl
inc
pop
rcll
rorb
cmpsl
sub
sub
mov
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
dec
inc
ljmp
stos
cmpsb
scas
and
xchg
lods
inc
mov
adc
push
shll
dec
aaa
icebp
aam
pushf
cmpsb
mov
mov
orps
adc
push
mov
ja
or
mov
sub
dec
stos
movsb
mov
aad
xchg
cmp
pop
lcall
pop
imul
push
mov
cli
ret
jns
ret
add
sbb
das
push
cltd
xor
inc
jle
filds
sub
adc
iret
add
popa
fiadds
out
cmp
sarb
addl
sbb
mov
or
xchg
xchg
adc
je
mov
add
cmpsb
call
sub
clc
repnz
movsl
xchg
inc
push
mov
test
jo
orb
xchg
fisttpll
lahf
scas
push
mov
repz
dec
or
enter
inc
aas
dec
mov
or
insl
js
cwtl
mov
in
cmp
ss
fsubl
ds
adc
lods
mov
fwait
dec
inc
insl
mov
mov
fimuls
mov
pop
inc
das
and
xor
or
pushf
mov
adc
arpl
pop
lock
pop
ljmp
mov
inc
gs
loope
lds
lsl
cs
xor
sarl
aas
js
xchg
icebp
pop
pop
aaa
bound
add
cld
aam
sub
adc
lock
sbb
or
cmp
mov
push
sti
je
imul
pop
jl
icebp
out
fsub
xlat
arpl
mov
ret
fnstcw
mov
mov
fmull
cwtl
adc
mov
mov
push
jo
add
xchg
nop
fcmovnbe
sub
incl
xor
repz
cli
clc
sub
jp
mov
pop
cmp
testl
mov
aaa
jb
sub
xor
mov
jb
cmc
mov
call
xorb
push
mov
jae
shl
jp
pop
mov
pop
arpl
mov
je
pop
fsubl
ret
pop
out
aad
aaa
push
fstpl
sarl
dec
mov
loope
or
push
roll
inc
xchg
cltd
into
ss
ficomps
jle
mov
xchg
jmp
mov
cmc
in
and
xchg
stc
lret
stc
push
cmp
mov
lret
sti
mov
sub
mov
sbb
add
xchg
lcall
lret
scas
xlat
pop
add
jb
push
call
pop
pop
xor
xor
mov
and
mov
mov
scas
cli
movsl
andb
lcall
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
shl
push
repz
or
push
ret
das
mov
jg
inc
sbb
es
pop
or
xor
outsb
repz
stos
sbb
pop
push
out
dec
push
mov
mov
hlt
cmp
faddl
test
stc
mov
pop
cmp
jg
push
pop
test
pusha
loopne
inc
jns
jge
push
pushl
mov
shrb
lods
sub
jb
les
popf
bound
imul
call
sbb
and
out
int3
popa
xor
std
sarb
sarb
xchg
aad
mov
fldl
lcall
lret
dec
fldcw
sbb
push
mov
and
in
jne
addr16
mov
loope
push
mov
jg
mov
out
jle
subl
icebp
faddl
test
icebp
fdivs
aas
stos
loope
in
clc
jecxz
repnz
pop
popa
in
push
xor
arpl
stos
pop
inc
addr16
push
bound
mov
mov
dec
pop
mov
mov
pop
fcmovnu
jge
ja
sbb
pop
fisttpl
ljmp
loopne
popa
and
gs
or
std
dec
mov
je
aad
sbb
inc
shr
adc
jmp
nop
fdivl
cmpsb
fcompl
lea
mov
enter
out
rcrb
xor
into
mov
imul
cmp
imul
mov
daa
inc
dec
mov
sbb
mov
adc
mov
mov
shll
cmp
movsl
xchg
xor
inc
lret
jbe
loop
or
and
lret
xor
inc
addr16
pop
xor
xor
xchg
push
lahf
lahf
mov
fmuls
add
mov
test
cmpsb
js
jle
jns
mov
mov
or
xchg
ret
jbe
mov
mov
push
test
lret
sahf
popf
enter
sarl
ja
xchg
je
lods
lods
xchg
aas
outsl
adc
sbb
ss
pop
outsl
jl
int3
cmc
cltd
push
das
dec
sbb
repnz
sbb
in
mov
xor
add
sarl
push
shll
cmp
hlt
and
push
inc
jo
sub
mov
push
add
xchg
fidivrs
fisubs
ss
movb
sub
ret
inc
subb
adcb
stos
push
mov
mov
test
sub
pop
xorl
adc
movsb
inc
shrb
negl
jl
scas
xor
pop
hlt
dec
test
outsl
mov
lret
les
insb
jle
xor
push
jle
adc
push
push
push
pop
aas
inc
pop
daa
in
js
inc
cltd
cmc
iret
stc
imul
dec
push
mov
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
dec
jmp
sbb
ss
xchg
call
mov
xor
aad
pop
ds
inc
shlb
std
dec
ds
and
int
and
lods
jb
sbb
ljmp
dec
lcall
ljmp
sbb
jns
or
repz
sbb
mov
jnp
aad
jne
dec
cmp
fsubrl
mov
test
xchg
lea
pushf
popf
jle
repnz
pop
fwait
sbbl
or
or
scas
push
sti
mov
in
je
jbe
std
cmpsb
sbb
jge
pop
lock
pop
mov
test
cwtd
sub
push
imul
divb
xchg
aam
stos
sti
pop
sub
xchg
arpl
inc
jmp
cltd
push
jmp
jp
cmp
pop
je
pop
pop
jb
cmc
sar
mov
sub
cmpsl
sbbl
in
mov
mov
notl
add
push
add
es
mov
gs
stos
lock
je
sbb
lods
inc
push
addl
cmp
outsl
mulb
sub
in
jg
add
aam
movb
rclb
fstpl
shll
pop
lds
adc
rcr
push
pop
xor
arpl
cmp
js
mov
cwtl
ss
adcb
add
stos
cmpsb
adc
adc
test
mov
sub
cmpl
mov
in
sarb
cmp
fidivl
loop
jle
jmp
dec
cmpsl
imul
icebp
test
add
cs
sbb
xor
popf
mov
mov
lods
push
pop
push
inc
or
push
out
shll
testl
xchg
lods
mov
movsb
popl
or
dec
aad
int3
mov
mov
notl
pusha
xlat
insl
pop
jge
sbb
sbb
std
ds
fsts
xchg
out
mov
pop
in
stc
lahf
jne
dec
jle
jle
aas
lods
mov
shrb
stos
and
mov
add
adcl
gs
mov
add
lds
jmp
je
inc
dec
mov
scas
cmp
in
jl
or
js
out
cmp
jno
lahf
addl
push
scas
adc
ja
jecxz
ret
pop
cmpb
ret
stos
inc
scas
inc
mov
insl
fsubrs
into
fs
in
jno
ficoms
inc
xchg
loopne
pushf
mov
ds
lods
cmp
fnstenv
or
clc
ss
scas
fiaddl
push
filds
inc
inc
int3
adc
pushf
sbb
movsb
jno
inc
pushf
push
jno
jo
ss
add
insl
mov
xor
mov
xchg
sbb
or
incl
push
pusha
adc
andb
ja
in
xchg
mov
or
dec
push
mov
outsl
pop
addr16
jmp
stc
stc
daa
sbb
dec
and
cmp
jb
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
int3
push
insb
inc
pop
adc
jp
adc
stc
popl
aam
pop
adc
bound
popf
sarb
insb
mov
xchg
mov
roll
cmpsb
ret
icebp
jge
or
inc
mov
push
into
into
int
mov
pop
xor
icebp
aam
xchg
lcall
bound
jmp
xchg
dec
popf
add
test
ljmp
xor
jb
fidivrs
ret
dec
fsubp
cmp
sbb
mov
sbb
xor
cmp
jecxz
xor
pop
or
xchg
ja
fisttps
les
incl
cld
cmp
ds
cmp
and
scas
jno
jl
pop
jae
mov
sbb
sub
add
repnz
mov
sub
or
lahf
mov
xor
pop
pop
mov
flds
add
ret
outsb
sub
sub
pop
mov
cmpsb
cmp
inc
add
test
jp
cld
push
push
jp
das
sbb
aad
xlat
pop
sub
das
addr16
je
mov
mov
cmc
and
cli
mov
mov
or
jle
and
pop
ret
dec
std
xlat
mov
mov
push
push
out
bound
xor
sub
ja
gs
and
ss
mov
das
bound
outsb
sti
mov
mov
cmpsb
sub
xchg
xchg
dec
and
and
inc
scas
xchg
dec
js
mov
into
pop
out
shlb
adc
jae
sti
hlt
insl
outsb
es
or
lea
aad
add
mov
xor
fmul
mov
xchg
or
cmp
jns
xchg
cmp
fiaddl
sti
pop
jno
lods
push
push
enter
pop
ret
dec
push
push
xor
push
js
cmp
jae
pop
cmp
pushf
push
or
adc
inc
pop
pop
adc
jecxz
mov
inc
flds
xchg
bound
scas
jmp
out
pushf
sub
jo
mov
xchg
inc
pop
hlt
nop
push
xchg
pop
leave
cli
mov
pop
iret
push
adc
ficoml
adc
adc
sub
push
ja
aaa
mov
add
mov
inc
pop
std
ljmp
or
ret
add
nop
test
jne
mov
sbb
mov
push
cli
or
cmpsl
movsb
test
gs
adc
test
out
lods
jb
cmp
cmc
xlat
cltd
fstpl
ja
cmp
dec
stos
sbb
cli
mov
inc
push
cmp
addr16
dec
fs
hlt
adc
cmp
dec
pop
push
mov
mov
cwtl
in
mov
xchg
lds
push
lds
sti
sbb
jl
dec
fisttpl
push
mov
outsb
mov
or
fadd
fisttps
jmp
sub
xor
out
xor
add
inc
movzwl
repnz
mov
movsl
mov
cmp
jle
jbe
iret
pop
out
dec
mov
rcrb
push
cmp
call
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
mov
adc
jp
adc
cli
sub
das
mov
cmp
mov
stc
andb
add
push
js
pop
mov
cmp
fldenv
mov
cmp
sbb
cmp
out
add
in
pusha
add
mov
stc
push
pop
in
mov
add
or
lods
out
or
orl
roll
adc
js
lahf
push
dec
imull
sahf
mov
lahf
pop
mov
adc
add
in
xlat
iret
mov
mulb
dec
inc
inc
pusha
add
cli
inc
push
popa
scas
or
test
mov
cltd
les
adc
xchg
xor
std
stc
das
mov
ficompl
fsubrs
xchg
adc
sbb
adc
arpl
fnstcw
and
dec
xor
popa
movb
push
mov
stc
je
mov
ret
daa
lock
mov
sub
dec
or
ja
mov
dec
xchg
xor
dec
fisubrl
arpl
sub
push
push
stos
out
or
push
imul
cmpsl
xchg
mov
or
int3
into
xorl
out
leave
cwtl
mov
jbe
adc
cmpsb
pop
sbb
sbb
data16
inc
jno
dec
dec
cmp
and
mov
cwtl
inc
push
ret
loope
jae
mov
dec
lret
rorb
or
call
push
stc
in
push
jmp
adc
hlt
jmp
imul
dec
fldl
jge
out
insl
fimuls
into
adc
add
loop
mov
cld
mov
outsb
mov
cli
dec
jg
mov
xchg
fbld
in
hlt
test
les
iret
and
icebp
and
sbb
jg
int3
dec
aaa
daa
outsb
sub
adc
pop
and
inc
adcl
push
arpl
xchg
je
loope
adc
fsubr
and
out
inc
jbe
sahf
rolb
movsl
xchg
and
pop
sbb
xor
addl
movsb
sarb
inc
cmp
dec
xor
xchg
dec
pop
adcb
stos
mov
pop
sbb
filds
mov
or
loopne
pop
mov
andb
add
jns
mov
dec
mov
or
ffreep
adc
push
addb
movsl
inc
inc
sahf
imul
push
jo
mov
insb
xchg
addb
xor
mov
jbe
xchg
or
icebp
lret
sub
jbe
jge
cmp
pop
adc
jne
inc
dec
and
int3
pusha
mov
mov
pop
enter
decb
fdivrp
cli
ja
stc
or
sbb
and
sbb
cld
cmp
sbb
adc
orl
imul
and
jbe
mov
flds
xchg
pop
aas
aam
lock
lock
xchg
push
jnp
cltd
pop
test
call
popa
push
cmp
xchg
jb
sub
push
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
scas
insb
pop
push
adc
jp
adc
push
aam
sbb
leave
and
shrb
dec
imul
cli
jle
repz
fbld
stc
mov
and
subb
or
and
mov
nop
arpl
cltd
fdivrl
icebp
out
imul
pop
xor
bound
xchg
fcmovnu
cs
xor
sub
push
xchg
sti
stos
mov
add
mov
out
fwait
and
cmp
and
aad
add
mov
cwtl
jle
pop
dec
in
dec
inc
dec
ss
gs
push
xchg
insl
out
test
push
scas
imul
xlat
daa
pop
mov
cld
lods
pop
mov
int3
scas
sbb
mov
cwtl
fists
dec
inc
cmp
ret
lds
pop
fisubrl
jne
loopne
cmc
scas
ds
add
xchg
dec
add
sarl
cltd
bound
outsl
into
popa
subb
xchg
fsubrl
mov
je
sub
inc
repz
aad
int3
into
lret
jge
xchg
lea
inc
pop
roll
pushf
xlat
mov
idivb
lds
mov
pushf
pop
jl
ret
add
mov
mov
adc
sarl
mov
loopne,pn
dec
ds
cmp
and
dec
or
bnd
sbb
test
jmp
ja
ljmp
fs
cmp
sbb
int
jne
lcall
mov
fst
xor
mov
cmc
sahf
movsb
clc
push
popf
jmp
sahf
xor
sub
je
pop
push
jp
lock
pop
xor
imul
cmp
inc
add
arpl
fistpll
mov
jecxz
pushf
pop
adc
cmp
js
dec
jno
not
xor
jbe
icebp
adc
rorb
fs
xchg
lock
cmp
scas
clc
xchg
lods
push
mov
xor
sub
xchg
imul
xchg
lods
das
ret
ds
div
mov
jl
push
inc
lods
dec
push
xchg
pop
and
scas
or
aad
loop
sub
mov
lock
jmp
jno
popa
in
js
fcmovnu
and
dec
adc
cmc
test
cmc
xor
aad
stos
or
adc
xchg
cltd
sub
and
dec
pop
ja
fnstcw
cwtl
push
mov
sub
mov
and
in
xchg
hlt
sbb
cli
es
mov
add
jne
in
test
fs
adc
xchg
loop
mov
out
push
inc
cmpsb
lcall
lahf
sub
insb
in
xor
fdivrs
add
ss
xor
push
movsb
sbb
cmp
cmp
xchg
push
mov
cmc
jl
jne
ja
and
dec
jbe
push
or
sbbb
cmp
cmp
fiadds
jg
inc
pushf
clc
lock
fiadds
jle
ret
pop
pop
icebp
push
adc
lds
push
pop
aam
add
dec
lock
mov
mov
fimuls
call
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
sbb
outsb
inc
adc
lea
adc
inc
push
mov
mov
aaa
aam
push
movsl
xor
lods
mov
mov
cs
mov
sti
lock
movsb
jns
inc
leave
jne
in
push
incl
sbbb
pop
mov
adc
pop
jg
mov
outsb
popl
mov
mov
push
jmp
cmpsl
push
lods
int
pop
mov
mov
dec
mov
jnp
add
test
je
ds
jne
xchg
int
and
sarb
ret
xchg
jo
das
adc
push
push
push
outsl
fstpt
mov
xlat
enter
jg
add
loope
add
mov
in
mov
xchg
jmp
ljmp
aam
sub
lods
pop
or
call
out
pop
shrb
xchg
mov
sahf
sub
outsl
insl
je
mov
sub
lods
and
in
sti
pop
push
xchg
mov
rcr
xor
rcll
lcall
out
insl
pop
ljmp
insb
pop
rcr
mov
pop
pop
sub
test
jae
hlt
fs
cmp
adc
in
or
aad
fildl
mov
xchg
sbb
fdivl
inc
call
xchg
loopne
add
mov
loop
in
mov
mov
testl
sub
jmp
inc
xchg
stc
frstor
sub
out
loope
pushf
movsl
cmp
in
sub
and
mov
insl
jbe
jmp
lret
and
push
inc
imul
int
jmp
jecxz
stc
adc
repz
cs
dec
fisubl
inc
pop
mov
inc
mov
cmp
aad
adc
faddl
pop
dec
addr16
mov
adc
jp
inc
inc
cmp
out
or
fnstcw
into
dec
push
imul
jns
repz
test
adc
pop
xor
test
push
loope
xor
xchg
mov
cmp
mov
clc
push
add
xor
inc
imul
jb
lret
mov
adc
pop
sub
xchg
in
lcall
fdiv
js
lcall
fdivl
or
cmpsl
loopne
pop
and
sub
cmp
mov
sbb
inc
aaa
pop
xchg
loope
es
dec
in
out
cmp
lret
or
push
or
inc
lea
lret
ret
sbb
hlt
cmpsb
push
into
fadd
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
and
sub
ja
inc
push
xchg
cld
cmp
sbb
xchg
leave
and
ja
mov
sbb
shl
push
loopne
pop
jp
sti
sarl
test
jae
mov
xor
fwait
add
mov
ret
xchg
stos
push
fcoms
stc
les
jl
mov
cmp
inc
mov
mov
or
sub
leave
push
orb
out
cli
fwait
mov
out
fwait
sbbb
push
imul
mov
jl
out
cmp
mov
inc
mov
incb
push
mov
xchg
enter
add
mov
xchg
out
jns
insl
jl
mov
scas
aam
js
or
push
and
adc
daa
pop
inc
or
leave
xor
clc
lcall
mov
pop
mov
pop
hlt
mov
bswap
xor
inc
fdiv
xchg
into
pop
dec
push
iret
xchg
test
lcall
test
jns
out
fcompl
lret
cmp
stos
or
jle
jns
or
pop
cmp
js
out
cmpsb
jne
xorl
sub
data16
movsl
adc
dec
aaa
cmp
or
int
lea
xchg
out
pop
js
ds
inc
enter
jle
and
pop
call
add
fnstenv
shll
cs
popf
and
daa
pop
test
aad
cmp
and
cmp
ret
push
push
pop
pop
adc
in
rolb
adc
and
cli
mov
cli
xchg
outsl
imul
jnp
test
fisubrs
inc
lea
inc
mov
mov
and
insb
or
es
iret
or
ret
and
les
pop
sahf
mov
test
xor
int
rclb
js
and
nop
in
decl
mov
pop
xchg
add
mov
popf
sbb
inc
cmc
cmp
and
push
pop
xor
orl
push
mov
fdiv
push
int3
jp
push
cmp
movsb
fcoml
out
call
or
lret
rolb
arpl
testb
cli
sub
push
pop
sbb
inc
repnz
call
movsb
stos
jle
sub
and
mov
inc
out
push
adc
cmp
sub
cltd
ret
and
iret
insl
pop
cmp
and
test
out
lret
xchg
cli
or
inc
out
ja
les
inc
inc
leave
jb
test
mov
fs
fimull
adc
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
mov
shrl
cmc
test
mov
dec
loope
rcrl
lret
adc
mov
inc
xor
mov
xchg
xchg
test
jbe
push
in
dec
loopne
sbb
lods
cmpsb
addb
cmp
inc
inc
lods
mov
and
test
into
pop
sub
and
stos
push
mov
pop
addl
jbe
outsl
jmp
jnp
xchg
ss
pop
lahf
jmp
dec
andb
fmul
cmp
push
rcrb
or
inc
pop
pop
push
lods
test
hlt
std
data16
dec
mov
gs
jae
fcomip
insl
std
push
adc
dec
aam
add
ss
xchg
push
popf
in
loope
and
aaa
push
pop
push
shrl
mov
rclb
stos
jno
cpuid
sub
cli
les
sahf
insl
in
or
sti
dec
jbe
outsb
mov
jp
popa
loope,pt
imul
ds
lods
sub
int3
fistps
into
sahf
test
or
cmp
outsl
dec
or
or
test
xchg
adc
and
push
push
fwait
jno
sti
scas
stos
test
push
out
popa
xchg
xor
mov
cmpb
sub
cli
cmp
lret
cmpsb
mov
int3
fwait
jnp
aaa
jbe
in
and
aad
jge
adc
push
and
popf
out
jmp
mov
pop
dec
or
sbb
bound
dec
fsubl
cmp
fsubrs
cld
add
pop
scas
addps
push
and
lods
xor
and
lods
xchg
add
add
ja
rcrb
repz
mov
push
mov
fwait
xchg
sahf
ret
imul
notl
lea
add
arpl
cmpsl
faddl
in
lahf
jae
inc
ss
cmp
int3
popf
dec
fdivs
in
fcompl
fldcw
popf
outsb
add
imul
popa
stos
sets
jle
jo
inc
xchg
pop
nop
add
cs
insb
lds
cmp
cmp
sub
fisubl
das
adc
fildll
mov
lahf
jne
add
lret
xchg
mov
enter
mov
inc
loope
ret
in
js
mov
je
gs
push
scas
pop
repnz
xchg
jnp
push
out
leave
push
pop
lods
bound
push
dec
xchg
inc
inc
sub
out
cs
jbe
addr16
movsw
pop
sub
into
es
mov
inc
inc
out
inc
lods
shrl
mov
sub
inc
pop
cmc
aam
stos
xor
insl
jns
and
test
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
inc
sub
aaa
adc
lea
adc
lcall
xor
xchg
mov
jl
adc
and
mov
jmp
add
xchg
mov
jns
and
ja
cmp
imul
sbb
dec
bound
lds
or
xor
lret
sbb
orb
fcmovbe
test
push
xchg
out
xchg
sbb
into
dec
inc
cli
dec
imul
xchg
fdivl
test
xchg
mov
or
or
pushf
popf
ss
mov
js
adc
pop
mov
movsb
cs
cmp
mov
cli
int3
fstpt
dec
add
sub
xchg
push
in
loop
inc
pop
adc
leave
mov
xor
sbb
sbb
inc
aad
mov
jne
dec
shr
or
int3
adc
dec
pop
stc
adc
imul
push
jae
and
ds
aas
xor
sti
lods
call
add
cwtl
push
les
jbe
daa
adc
mov
pop
js
test
mov
stos
movsl
jle
lock
aaa
jg
push
insl
idivl
cmp
in
xor
and
adc
fadds
mov
out
cmpsb
mov
sbb
lock
fidivrs
mov
ret
xchg
roll
shll
inc
mov
dec
orl
sub
es
push
add
mov
test
imulb
xchg
mov
sbb
jl
sbb
es
fldl
paddsw
and
mov
pop
xchg
jg
add
jo
imul
stos
out
mov
data16
mov
movsb
mov
int
outsb
inc
in
push
pop
jp
add
lods
mov
cld
fsubr
mov
cmc
jmp
and
insl
and
pushl
jnp
push
pop
mov
shrb
fucomip
scas
mov
jp
inc
fldl
lahf
das
jo
fmuls
dec
mov
pushf
jno
cs
sbb
sbb
repz
sahf
adc
dec
or
sbb
mov
outsl
popf
imul
pop
cmpsb
ljmp
lahf
dec
cmc
or
jg
xchg
cli
repnz
stos
imul
and
mov
lods
leave
daa
adc
xor
mov
mov
insb
jge
and
stc
pop
sub
mov
sti
sub
xlat
cmpsb
iret
sub
jbe
sti
jno
les
in
nop
insb
pushf
xor
push
push
jp
lds
aad
cmpsl
mov
mov
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
movsl
icebp
stos
inc
xor
adc
daa
and
lret
mov
iret
leave
jno
movsl
jl
rcrb
out
fistl
mov
fisttps
test
call
incb
or
jns
dec
jbe
sti
xchg
inc
loop
cli
pop
and
fimull
push
pop
cmp
adcl
adcb
fs
shrb
pop
fwait
push
or
mov
mov
cmp
pop
inc
or
repz
jnp
lods
mov
sub
test
packuswb
ds
mov
shll
push
in
jo
mov
roll
dec
jno
ljmp
fbld
cmp
inc
push
roll
ficoml
sbb
cmpsl
in
mov
adc
loopne
mov
repnz
shll
inc
mov
pop
sub
or
sbb
inc
add
pop
adc
jbe
clc
sbb
ret
xchg
dec
stc
std
xlat
mov
cs
popf
xor
jg
cmp
stos
movsl
stos
jbe
jle
adc
iret
repnz
jb
adc
jecxz
out
fldl
push
xchg
data16
add
jo
js
sub
inc
cmp
repnz
inc
je
sbb
mov
pop
and
xchg
out
mov
aas
in
xchg
pop
and
sub
jbe
sbb
pop
dec
ficomps
nop
push
add
mov
out
insb
mov
sub
cmp
rcl
sar
std
xor
jns
push
push
ret
inc
sub
iret
and
inc
cmpsl
arpl
mov
mov
pop
xchg
add
pop
mov
sti
and
or
icebp
hlt
pop
inc
mov
and
dec
mov
push
loope
pop
addr16
ret
inc
cmp
add
lret
sti
jg
and
lods
daa
xorl
das
lods
cli
pusha
sub
outsl
xor
mov
mov
js
xor
mov
inc
xchg
xchg
mov
mov
xchg
add
das
sbbl
jmp
cmp
ret
lcall
aad
push
pop
adc
lds
inc
mov
cmp
pop
orl
lods
rcrl
dec
mov
into
sbbb
push
ss
or
fiadds
jne
dec
dec
mov
inc
mov
xor
or
push
dec
cmc
icebp
mov
lods
outsl
push
ds
add
loope
loopne
call
inc
rol
dec
popf
mov
add
mov
cs
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
mov
adc
lea
adc
mov
lods
sbb
adc
rcrb
push
lods
fisubrl
cmpsl
jg
sub
or
adc
or
add
mov
ljmp
cli
insb
ds
xor
jne
clc
je
fldenv
fmul
mov
leave
inc
sbb
in
sub
shl
in
ds
test
sbb
ss
push
xchg
sbbl
jne
rcrb
mov
xchg
cmp
leave
xchg
call
cmp
cmpsb
sbb
pop
sub
add
mov
out
mov
sbb
imul
cmp
add
sbbb
nop
mov
sahf
std
in
loopnew
or
pop
fwait
lods
mov
xchg
xor
push
aam
sub
push
jnp
popf
sbb
xchg
lods
sbb
std
mov
pop
in
lock
jle
pop
es
xor
addr16
pop
cmpsl
std
leave
jle
pop
jg
movsl
jmp
imul
popf
lds
dec
out
aaa
xlat
mov
sbb
mov
xchg
push
xor
lock
mov
mov
xorl
lret
out
popa
dec
shll
mov
incl
imul
fbld
mov
icebp
mov
push
rclb
mov
loope
pop
xchg
adc
out
pop
hlt
pop
pop
fisttps
jp
je
mov
popf
sbb
push
cmp
xor
insb
rolb
mov
add
sub
cmp
xchg
cmp
scas
pop
push
jbe
cmpl
xorl
xchg
cmpl
dec
adc
jecxz
add
push
lds
and
sub
outsb
insl
movl
xchg
gs
out
and
lds
rolb
or
mov
sbb
fdivr
data16
xchg
adc
mov
inc
ja
imul
rorl
ja
cmp
xor
test
js
hlt
in
clc
cmp
jne
dec
loopne
cmp
int3
mov
add
lahf
mov
out
push
push
jmp
outsb
in
lahf
pop
daa
inc
aam
pushf
ds
mov
lret
mov
adc
push
sub
lods
mov
test
loopne
pushf
movsl
sbb
jne
push
jne
cmpsl
in
les
arpl
out
pop
adc
jno
lahf
ret
pushf
clc
arpl
lods
scas
call
insl
pop
adc
std
inc
inc
dec
cwtl
jo
in
fcompl
jnp
in
clc
popa
xchg
cmp
dec
call
pop
add
mov
les
sub
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
adc
lods
xor
adc
lea
adc
adc
inc
xor
outsb
cmp
lock
loope
call
roll
call
pop
fisubl
fwait
hlt
jecxz
test
xchg
ja
mov
mov
cs
icebp
xchg
into
xchg
pushf
sub
xor
pusha
sbb
dec
adc
mov
jmp
push
fbstp
xlat
cmp
sub
popf
mov
pusha
jbe
or
divl
push
repnz
js
out
ret
push
or
aaa
gs
add
fs
pop
mov
xchg
jg
into
mov
push
clc
mov
lock
lret
pop
mov
rcll
jns
insl
les
lods
les
push
sub
mov
adc
xchg
push
sub
dec
data16
cwtl
out
push
sbb
sti
jb
push
loop
mov
sarb
js
popa
ljmp
xchg
pop
push
inc
dec
mov
fsubl
sbb
aas
imul
cmpsl
adc
out
je
addl
xor
dec
in
mov
call
loope
movsl
out
mov
leave
insb
mov
leave
sbb
sbb
cli
addr16
xor
adc
mov
or
outsb
cli
test
push
mov
test
sub
ror
outsl
add
jle
mov
cmp
jne
subb
loope
ljmp
aam
cmp
icebp
push
and
loopne
jp
outsb
insb
push
jae
les
testl
mov
push
lock
daa
sub
mov
xor
jae
mov
lret
or
jns
cmp
mov
lret
mov
pop
sti
mov
cltd
mov
jb
icebp
shl
sti
xlat
stos
arpl
rcrl
movsl
in
mov
out
rcll
fmul
adc
movsb
sub
fldl
and
xchg
cwtl
idivl
inc
enter
jnp
movsl
jl
push
inc
push
pop
jns
stos
in
dec
xor
call
inc
mov
lea
sbb
loop
jmp
xor
lret
sub
ds
rol
jg
cmp
nop
pop
jmp
push
ret
sbb
aad
pop
jo
adc
cs
mov
ret
jne
imul
push
fmuls
insb
mov
out
out
int
push
imul
jb
pusha
sub
in
lock
pop
lea
call
fisubrs
scas
test
jl
loopne
add
std
jecxz
jg
clc
xchg
cmp
mov
cwtl
sub
fcompl
popf
cmpsb
or
adc
add
cmpsl
scas
mov
fidivrs
clc
pusha
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
loope
sub
jmp
cmp
push
les
into
jb
mov
cmpsl
sbb
jo
mov
mov
add
and
sahf
xor
fstps
xlat
repz
dec
insl
sbb
jp
push
add
add
lea
pop
push
fcomps
cmp
movsb
fld
mov
js
mov
clc
repz
insb
push
dec
cwtl
nop
lcall
xchg
sbb
test
insl
ret
mov
icebp
pop
sahf
jle
xchg
push
enter
xorl
daa
in
jbe
and
out
lcall
mov
ja
cmp
cmp
adc
lcall
dec
cmc
popa
add
cmp
out
pinsrw
test
testl
cmp
push
lea
arpl
cli
mov
and
pop
cmp
pop
in
dec
add
lahf
push
lret
addb
rcrb
lods
inc
mov
rcll
call
mov
jp
imul
cmpl
sbb
adc
imul
mov
mov
fs
scas
mulb
orl
xchg
scas
ret
out
popf
stc
shll
dec
xchg
pusha
fwait
and
in
pop
icebp
imul
dec
lock
jo
add
ss
arpl
push
mov
xor
stos
inc
push
mov
sarb
mov
lcall
push
cmc
insb
adc
mov
and
xor
inc
push
sub
cmc
or
or
testl
in
call
incl
mov
sub
loope
dec
outsb
mov
cmp
aas
pop
adc
js
movsl
mov
aaa
push
dec
pop
pushf
add
lahf
aaa
sbbb
pop
daa
xchg
and
pusha
cmp
clc
lea
popa
divb
mov
jne
push
jo
mov
xchg
pop
push
pop
lea
cltd
mov
dec
lahf
fwait
scas
aaa
push
pop
out
or
cmp
test
pusha
bnd
xor
pop
cmp
and
mov
push
mov
mulb
es
pop
ljmp
arpl
testb
insl
push
push
in
shrb
call
jg
jecxz
in
or
dec
test
in
ljmp
fiadds
jp
sbb
jle
mov
jae
out
or
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
out
stos
push
sbb
adc
xchg
sbb
lahf
pop
gs
jecxz
jmp
pop
add
stos
and
mov
adc
sub
jo
push
fwait
push
std
outsl
ret
stos
lods
sub
cmp
and
lahf
pop
xor
mov
sbb
adcl
cmp
cltd
ja
loopne
outsl
mov
sub
mov
mov
daa
sahf
pushf
sbb
cmp
dec
mov
cmpsl
sub
sub
out
pop
add
adc
sbb
nop
nop
insb
dec
ret
mov
sub
sbb
outsb
aad
lahf
jae
mov
rcll
sbb
xchg
mov
loope
mov
test
ss
sub
mov
lret
sub
je
mov
iret
notl
clc
xchg
inc
das
pop
cmpsb
test
adc
and
sub
imul
mov
pop
mov
lods
add
mov
or
xchg
mov
inc
cmp
jns
loope
je
jbe
mov
sbb
xchg
jnp
xor
pop
inc
fists
divb
mov
das
cs
out
arpl
in
xchg
sub
dec
sahf
mov
dec
bound
cltd
xor
push
fdiv
test
fucompp
ret
aad
sub
dec
sub
pop
dec
mov
xor
lods
fadds
adc
idivb
push
popf
mov
popf
rcl
cs
pop
and
out
insl
cmpsb
xchg
and
cld
mov
cmp
out
adcb
jbe
and
in
ret
loopne
xlat
or
ret
pop
popf
xor
in
push
cld
inc
pop
or
cli
jbe
rclb
push
dec
scas
inc
or
pop
add
sub
sub
lahf
repnz
ds
xor
cmp
add
fs
stc
dec
ret
sub
jo
jl
xchg
je
flds
cltd
bound
cmp
sbb
xor
push
pop
aad
lcall
sbb
test
dec
cmp
test
push
sti
and
pop
cmp
in
xor
outsl
mov
add
cld
adc
adc
push
inc
xor
cmpsl
mov
sub
ret
sub
mov
jle
leave
fdivs
addr16
leave
pavgw
mov
out
mov
push
lods
cmp
sub
pop
sub
xor
cmp
insb
cs
inc
aas
dec
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
aad
lret
sbb
adc
sub
fcomps
xchg
mov
cmp
dec
mov
pop
in
xchg
test
daa
mov
fadds
adc
push
cli
cli
imul
int3
cwtl
push
xor
lods
cmp
stc
dec
lea
add
jbe
and
push
or
push
fcmovne
add
push
aaa
inc
or
mov
or
pop
or
cmp
loope
in
push
test
jo
and
dec
clc
jg
ror
push
fs
scas
push
jl
dec
nop
nop
mov
mov
mov
add
mov
arpl
push
push
jnp
jae
stos
stos
emms
inc
sub
clc
xchg
inc
fs
fs
cld
movsb
xchg
test
aam
push
data16
adc
popa
sub
mov
cli
fcmovu
ret
dec
loopne
ja
shlb
inc
subl
adc
xchg
jle
and
flds
std
imul
xchg
insl
mov
inc
aam
in
inc
jns
push
cmp
mov
sub
mov
bound
push
das
cs
jmp
mov
adc
loope
jp
mov
das
leave
jmp
inc
and
pop
xorb
xor
in
scas
add
mov
add
rclb
lcall
and
cltd
lret
call
insl
xchg
sbb
cli
scas
xor
lahf
leave
push
leave
jne
mov
shlb
xchg
popa
mov
pusha
aas
pop
pop
mov
ja
das
fidivs
pop
hlt
imul
in
push
bound
mov
sbb
sub
leave
or
pop
pop
and
push
xchg
fidivl
out
bound
pop
cmp
mov
pop
imul
pop
movsl
addl
mov
xor
outsb
pop
es
popa
bound
pop
pop
pop
test
and
dec
xor
lods
xchg
addb
xor
lahf
lea
xchg
adc
mov
scas
aas
cld
test
pop
mov
jecxz
aas
xor
cmc
push
mov
cwtl
test
adc
loop
inc
push
adc
jae
fldl
rcrb
sbb
add
add
mov
inc
iret
sbb
test
adc
repz
push
add
sub
sbb
inc
ficoml
dec
xchg
sbb
jge
iret
clc
xor
inc
and
lods
xchg
sub
pop
or
adc
inc
xchg
out
xor
ja
adc
std
sqrtps
je
hlt
faddl
loope
xchg
call
pop
in
movsb
call
ficompl
adc
mov
insl
je
scas
daa
xlat
push
mov
inc
or
cmp
insl
fildl
decl
mulb
dec
hlt
rcll
sub
scas
add
sbb
or
ljmp
insb
fimull
sbb
or
mov
xor
inc
inc
mov
mov
add
mov
dec
mov
push
pop
pop
pop
cmpsl
shlb
fbstp
out
fcmovb
mov
mov
cltd
xlat
push
shll
lods
or
jbe
sahf
jg
inc
mov
or
sbb
call
data16
jae
lods
and
push
sbb
ss
fstpt
out
jns
lcall
out
int
push
ljmp
or
add
inc
mov
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
add
mov
mov
scas
psubsb
mov
ja
mov
and
cmc
adc
sub
aaa
nop
dec
repz
inc
mov
jo
push
pusha
sbb
dec
sub
insl
push
adc
lods
adc
pop
enter
rorl
mov
out
xor
ljmp
incb
adc
lods
jle
icebp
mov
fnstsw
adc
rclb
jo
shlb
pop
add
push
test
mov
mov
sub
daa
pop
ret
leave
rolb
movsb
jmp
xchg
addb
cld
mov
fisubrl
and
xchg
adc
rolb
js
jp
pop
inc
push
adc
mov
out
leave
std
mov
lcall
ja
and
je
xchg
mov
jns
shlb
int3
sub
int3
aas
mov
jmp
pushf
pop
sub
mov
mov
out
ljmp
fsubrp
pop
fldcw
xorb
int
xchg
test
and
sbb
dec
adc
mov
jb
pop
sub
sub
mov
jnp
or
cwtl
fwait
xchg
ja
loopne
mov
jb
pop
mov
je
or
cmp
xor
in
fdiv
in
mov
insb
pop
fcoms
pop
xor
mov
push
aas
je
inc
adc
outsb
dec
mov
sbb
add
out
ljmp
lret
mov
push
repnz
je
xchg
or
scas
fwait
xchg
js
arpl
cli
or
xchg
cmp
xlat
push
jecxz
in
pushf
or
cmpsl
notb
pop
scas
repnz
in
outsb
movsl
pop
xchg
jp
sbbl
ja
inc
adc
addr16
mov
call
sti
xchg
jae
mov
das
cld
mov
or
int3
ret
ss
jnp
xor
adc
ss
push
jne
jb
nop
mov
jecxz
mov
add
loop
cmp
hlt
scas
das
dec
jle
call
stc
cmp
test
popa
aam
sbb
outsl
mov
xor
iret
or
sbb
leave
add
dec
push
mov
aas
insb
mov
push
fbstp
mov
inc
jl
mov
jle
dec
sub
jns
xchg
adc
pushf
mov
xor
mov
loopne
adcb
add
pusha
shlb
mov
sbb
jne
push
lock
dec
pop
lret
xlat
mov
mov
lret
mov
dec
dec
test
mov
xchg
sub
xchg
dec
aam
mov
imul
add
lahf
pop
mov
sbb
xor
mov
xchg
or
mov
cmpsl
fisubrl
pop
frstor
mov
push
adc
fcoml
inc
nop
push
sahf
les
or
mov
std
in
cli
mov
xchg
dec
hlt
or
inc
negb
push
lds
add
push
sub
shl
jle,pt
test
and
mov
call
mov
test
pop
adc
xchg
in
daa
push
scas
jbe
lods
outsl
mov
rcrl
hlt
js
mov
and
jp
add
les
pop
pop
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
push
pop
adc
adc
fcoms
push
mov
xchg
insb
sub
clc
xor
add
push
sbb
inc
loopne
mov
outsb
lods
mov
mov
imul
ret
push
or
mov
sbb
push
roll
shll
and
loope
pop
push
pop
push
js
mov
mov
ret
inc
scas
pop
adc
fcmovnbe
or
flds
push
scas
in
pop
or
dec
dec
mov
jle
out
arpl
ficoml
inc
pop
aas
loopne
sahf
shlb
mov
xlat
std
lds
data16
es
lea
mov
sbb
pop
jg
shrb
sub
xor
inc
imul
xor
int3
dec
movsl
mov
loope
mov
mov
aad
cmc
adc
mov
test
push
lea
sbb
repz
cli
loop
lret
fcmove
jns
shrb
xchg
arpl
loopne
sub
das
test
push
mov
test
dec
mov
dec
scas
mov
fiadds
shll
jno
and
jb
xchg
or
mov
dec
push
sub
mov
movsb
push
movsb
mov
xrelease
inc
mov
jo
xor
popf
hlt
adc
inc
cli
ss
sub
pop
icebp
add
and
mov
int3
int3
lock
fmuls
or
pop
in
lds
sub
mov
mov
inc
mov
xor
adc
inc
sbb
sahf
mov
js
lods
sub
push
push
jns
xor
inc
std
pop
mov
addr16
cs
mov
mov
movsb
sub
subl
int3
add
lcall
cmp
adc
push
jmp
jmp
cli
sahf
push
pop
pushf
or
dec
dec
and
outsl
je
inc
je
rcr
adc
mov
push
gs
xchg
test
test
pop
jg
pop
nop
cs
adc
jae
cmpsb
test
mov
sub
sub
stos
pushf
ja
pop
lea
out
cmp
inc
dec
sti
aad
iret
imul
fiaddl
xor
xchg
mov
or
pop
adc
das
cli
jae
jnp
mov
std
mov
cmp
pop
mov
pushf
movsl
leave
data16
pushf
jae
mov
leave
fsubl
mov
sbb
mov
divb
lods
popl
push
or
imul
jb
xchg
add
stc
mov
hlt
sbb
sbb
sbb
adc
mov
inc
pushf
popa
pop
rolb
outsl
or
clc
ret
pop
push
pop
adc
mov
adc
pop
push
clc
aam
jl
nop
lods
pop
leave
jecxz
mov
inc
aaa
adc
lds
mov
push
jbe
fists
push
inc
dec
mov
and
sub
aam
mov
inc
arpl
push
lcall
mov
sarl
lea
je
ss
sbb
fsubs
mov
sub
jp
push
nop
pop
test
shlb
in
fs
sub
addb
mov
test
push
imul
fwait
mov
loopne
xchg
pop
test
push
je
lcall
push
fidivrs
mov
aaa
mov
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
lea
adc
adc
mov
jmp
je
loope
sbb
sub
xorl
add
sub
push
dec
push
cmp
jo
pop
or
jnp
and
dec
dec
inc
dec
mulb
sub
sbb
jmp
loopne
fwait
out
lea
or
add
or
mov
movsb
cmp
xchg
fs
adc
mov
addr16
repz
in
inc
test
xorl
dec
arpl
sbb
and
xor
fxam
flds
fincstp
pop
sti
test
ret
or
sbb
aaa
xchg
sbb
xorb
sbb
lds
push
stc
cltd
in
sbb
pop
sub
push
mov
push
dec
push
gs
add
push
popa
adc
cmp
insb
scas
aas
fistpll
fdivs
push
int
dec
mov
aas
xor
cmpsb
add
ret
sahf
lds
jbe
stos
and
sbb
xchg
jns
adc
mov
sbb
xchg
les
mov
inc
outsb
xor
xchg
add
sub
enter
out
mov
pop
pusha
lds
add
lcall
sub
push
lods
cmp
mov
outsb
pop
mov
fisubs
lods
lret
ret
push
fdivrl
jnp
jmp
or
or
xor
mov
or
paddsw
or
ss
repz
out
dec
and
inc
repz
xlat
insl
arpl
and
fimull
ret
jne
xor
insl
test
fidivl
push
mov
outsb
mov
mov
std
int3
push
adc
xchg
loope
dec
dec
mov
ficompl
daa
scas
mov
stos
cmp
fisttpl
or
fistpll
xchg
mov
arpl
test
mov
jnp
leave
nop
shrb
sub
inc
imul
sarb
subl
inc
ss
mov
pop
jnp
mov
inc
jp
out
and
icebp
outsb
mov
add
das
roll
add
cmp
and
subl
and
xchg
dec
jno
mov
scas
aaa
cld
cmp
icebp
mov
fisubrs
mov
mov
ds
sub
sub
imulb
fadd
or
push
or
filds
jns
adcb
in
js
fsubrl
sbb
jno
ja
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
adc
std
adc
adc
pop
cwtl
pop
or
mov
push
jp
shrl
mov
nop
shll
mov
cmc
mov
rol
call
scas
cmp
mov
mov
sub
repnz
mov
mov
mov
into
cmp
jae
sub
pop
ljmp
cmc
push
outsl
and
push
sahf
push
ficoms
outsl
arpl
jb
push
enter
or
loopne
cwtl
aaa
jge
jb
in
aaa
sub
test
int3
fcomps
mov
scas
jl
idivb
xchg
jmp
shlb
lea
stos
in
aas
mov
pop
lahf
adc
adc
jne
aad
mov
outsl
xchg
inc
adc
inc
paddsb
inc
mov
test
and
leave
cld
push
xchg
mov
or
inc
icebp
fxch
dec
dec
xchg
sbbb
and
cmpsl
das
outsl
sbb
mov
and
or
aaa
pop
cmp
sar
push
iret
mov
push
push
xor
enter
xchg
or
fistl
mov
sti
dec
and
or
sub
les
push
jl
push
pop
std
adc
push
data16
fs
lret
dec
xchg
add
in
decb
jne
mov
loop
xor
mov
pop
repz
ja
jp
add
mov
ret
sbb
scas
mov
ret
in
lret
divl
push
insl
ja
sbb
and
ds
lods
and
jae
arpl
testl
cltd
ret
add
filds
nop
mov
xor
dec
lret
aaa
push
xchg
lret
les
leave
packsswb
jnp
cli
outsl
xor
out
imull
mov
mov
out
shl
test
mov
xor
data16
or
enter
mov
jg
inc
xchg
or
jg
inc
incb
mov
stos
arpl
cmpxchg
fnclex
jnp
stos
dec
mov
out
xor
sarb
popf
lret
jle
inc
jg
sub
or
shl
jle,pt
lock
insb
push
in
adc
std
daa
arpl
mov
or
repnz
je
lea
divb
mov
inc
pop
scas
mov
jbe
mov
push
fists
subb
addr16
mov
cwtl
adc
xor
push
sahf
dec
inc
fildl
add
lcall
ja
jb
ljmp
imul
cmp
xor
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
xor
stc
adc
adc
je
sbb
std
arpl
pop
and
xor
lock
jno
push
push
xchg
lret
push
out
jo
loop
xor
fdivr
mov
pop
test
mov
out
sahf
subl
stos
testb
mov
mull
paddb
in
insl
in
lahf
or
shll
pop
test
subl
aam
addl
sbb
testl
subb
ljmp
ds
pop
dec
cld
fwait
shl
dec
inc
insl
push
push
ficoms
faddp
xchg
sub
lods
out
push
in
jl
test
cmp
lret
add
movsb
aam
lea
cmpsl
jmp
xchg
jo
mov
dec
int
divb
jl
sbb
and
cmp
sub
inc
cmp
cmp
dec
ficoml
mov
dec
dec
push
or
jno
or
push
mov
push
adc
push
cld
cmpsb
out
jns
addb
add
lret
sbb
icebp
cs
cmp
lret
or
sub
out
or
cli
xor
xchg
pop
fsubrp
rcrl
addr16
pop
mov
dec
pop
mov
fnstenv
sub
in
push
cmp
not
inc
ret
nop
lahf
test
mov
mov
test
inc
lods
fistps
stc
jo
rcr
push
lcall
pop
insl
int
xchg
hlt
aaa
mov
dec
gs
adc
mov
mov
fwait
xlat
pop
xor
sbb
aas
add
je
push
scas
dec
sub
inc
cli
pop
xchg
dec
push
mov
dec
mov
pop
adc
mov
ret
lcall
mov
iret
mov
xor
adc
int
push
adc
mov
pop
mov
mov
scas
and
or
lret
mov
subb
insb
push
out
cld
jle
ljmp
roll
sbb
test
js
push
pop
dec
fisubs
rclb
xchg
mov
in
cltd
fnstcw
sub
sahf
ret
cmpb
mov
into
fildll
cli
cltd
dec
test
xchg
and
pop
jmp
sub
xor
subl
jbe
das
js
imul
gs
imul
popf
sub
dec
mov
push
add
and
lods
mov
int3
ljmp
dec
popa
mov
add
jle
dec
es
cli
push
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
mov
stos
push
out
adc
adc
js
and
mov
ja
sbb
aaa
xchg
jle
pop
inc
jge
in
or
inc
leave
nopl
jp
jmp
cmc
mov
jno
mov
test
lahf
adc
xor
data16
sub
in
adc
sub
int3
pop
xor
sarl
nop
jb
push
mov
pop
test
testb
pop
out
push
pop
push
xchg
in
ret
lcall
aas
fs
icebp
scas
mov
or
enter
test
cmp
aaa
js
daa
push
add
cmpsb
clc
sbb
iret
test
adc
jle
and
xor
and
cmc
inc
loope
scas
adc
xchg
stos
push
aas
hlt
cwtl
js
mov
xchg
dec
repnz
xor
and
ucomiss
sbb
push
scas
xor
out
inc
sysenter
fs
lea
pop
lods
arpl
mov
jns
and
inc
sbb
pop
out
sub
das
xor
sti
push
xchg
int3
test
cmp
xchg
adc
push
scas
insb
inc
mov
xlat
sub
inc
mov
fs
in
sub
mov
scas
into
xchg
mov
test
arpl
push
lret
dec
push
push
and
inc
data16
fildll
mov
jo
and
cmp
pushf
add
add
pop
aas
int3
test
lcall
cmp
lahf
jns
mov
push
testl
insb
xchg
adc
xor
hlt
movsb
inc
adc
scas
jns
pop
popf
outsl
jbe
cmp
stc
push
or
mov
or
sbb
push
mov
int
lcall
pop
jb
out
imul
add
ret
dec
sarl
dec
fnsave
ret
gs
aaa
jns
imul
jns
xchg
out
or
xor
loop
push
cmpsl
rcll
in
int
fiaddl
inc
mov
lahf
inc
xchg
stos
push
xor
jae
xor
je
jbe
mov
pop
xchg
cltd
loopne
jl
aaa
inc
div
cmp
in
add
mov
xorb
mov
or
mov
push
mov
inc
loope
cltd
mov
sahf
pop
mov
sbb
call
push
out
aam
nop
inc
mov
js
pop
xchg
mov
or
insb
inc
insl
xor
dec
xor
push
dec
std
mov
scas
popa
and
lret
mov
pop
les
add
mov
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
push
jno
insb
sub
adc
jae
xor
scas
popa
adc
or
dec
jge
push
add
inc
icebp
adc
rcll
dec
dec
into
aad
xchg
inc
xchg
and
popa
inc
test
ljmp
or
push
push
das
lcall
imul
sti
jp
clc
bound
les
gs
test
xlat
nop
or
in
jb
pop
sbb
mov
sahf
jns
scas
jl
seta
jle
xchg
out
sbb
add
std
call
ret
mov
cs
insb
je
sub
aaa
cmpsb
mov
sbb
cltd
pop
bound
xor
cltd
popa
daa
pusha
pop
stos
lret
scas
adc
in
inc
add
jle
pop
orb
adc
ds
xchg
sbb
in
jge
pop
lods
ror
add
push
xchg
mov
fmuls
mov
mov
aam
aam
fidivl
xchg
enter
pop
insl
ror
mov
push
out
mov
mov
std
lock
cmc
lcallw
arpl
xchg
xchg
int
xchg
or
sbb
xchg
cmp
out
movsb
arpl
cmpsl
data16
mov
lds
fwait
jns
add
xor
jb
nop
and
jno
dec
jge
popf
or
jle
mov
insl
dec
rcll
adc
mov
adc
jae
jo,pt
rorl
mov
nop
nop
jge
cvtpi2ps
xchg
add
jp,pn
push
mov
stos
dec
jmp
and
lea
scas
xor
cmp
rorb
jmp
pop
pop
inc
fcoms
and
out
std
out
add
pop
daa
dec
jb
adc
adc
mov
fcoms
aas
sub
sub
jb
mov
data16
dec
mov
push
push
and
xchg
rclb
outsl
mov
fwait
push
cmpsl
mov
jno
adc
sbb
push
in
pop
mov
sub
push
fstl
loope
mov
lcall
rcrl
sbb
mov
mov
push
sub
xor
dec
inc
mov
cmp
jge
mov
imul
adc
cmp
mov
cmp
inc
inc
icebp
ss
sub
jl
into
ljmp
jl
or
rcrb
sub
xor
dec
mov
and
adc
nop
sub
sbb
cmp
dec
push
jns
jp
lds
xchg
cmp
out
xor
call
loopne
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
inc
and
in
adc
sub
fists
push
les
aas
enter
lahf
cmc
jne
lock
inc
pop
loop
inc
and
andl
scas
push
mov
or
inc
mov
insl
clc
sbb
sbb
repz
adcb
adc
sti
or
mov
add
popa
stos
sar
mov
mov
test
mov
adc
dec
push
fldcw
jmp
xor
leave
fmuls
pavgw
cs
mov
das
icebp
or
cmp
pop
sbb
add
imul
and
popa
mov
in
sub
adc
int3
push
sbb
in
jne
add
sbb
cli
inc
stc
push
xchg
push
stos
xor
or
jmp
cmp
insb
jmp
lock
mov
sub
jmp
pop
jmp
bound
aaa
cmp
pop
mov
jo
sbb
sahf
sahf
repnz
mov
xlat
int
div
mov
loope
and
das
in
dec
repz
or
jne
jns
mov
mov
push
mov
mov
inc
jo
add
sub
adc
gs
scas
cmpb
mov
xchg
adc
and
in
or
dec
adcl
or
leave
fiaddl
jle
xchg
adc
sub
pop
mov
pop
mov
aad
fpatan
ja
jbe
cs
pop
and
mov
inc
imul
in
xor
ret
outsl
bound
aad
in
add
cmp
lods
hlt
lret
stos
in
dec
loope
out
sbb
icebp
mov
fisttpll
jl
loop
leave
xchg
stos
sub
cwtl
ret
lods
sub
stos
test
stc
fildll
ds
mov
sbb
inc
cmp
pop
cmpsb
inc
mov
cmpl
call
cltd
xor
mov
sbb
pop
movsb
scas
jl
sbb
xor
fimuls
int
sbb
add
faddl
add
jle
dec
repz
jle
fsubr
mov
mov
sarb
scas
xor
lahf
int3
xchg
int
jl
or
fistl
push
add
daa
mov
sbb
cmp
push
pop
push
or
mov
loop
out
leave
sti
in
adc
ficompl
mov
xor
jb
dec
in
mov
mov
jg
test
jmp
push
push
cmp
add
pop
or
push
jo
lock
jl
loop
gs
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
inc
cld
inc
stos
jnp
adc
adc
sub
pop
stc
iret
insl
lret
icebp
popf
lods
dec
rolb
outsb
xchg
std
sahf
pop
inc
je
sbb
mov
push
aam
xor
push
adc
fbld
mov
xor
fcoml
pop
addl
xor
jp
and
jle
mov
jmp
nop
add
xor
xor
mov
mov
or
and
les
ret
lret
cmp
push
loopne
test
adc
imul
xadd
xor
mov
ljmp
add
mov
neg
push
cmc
pop
xor
test
inc
jns
or
mov
mov
adc
pushf
mov
xor
mov
xor
cmp
xor
dec
push
fwait
sub
sahf
movb
xlat
add
outsl
ljmp
xchg
and
dec
shl
cmpsl
mov
dec
push
js
add
and
jp
xchg
lea
dec
add
dec
cwtl
fbld
add
add
dec
or
pusha
stos
aaa
mov
popf
fbld
push
int3
pop
jb
ret
out
xchg
push
and
jae
out
lcall
jns
ret
adc
or
cmc
mov
mov
inc
cltd
in
daa
lods
and
loop
or
and
push
out
lock
jno
fisubrl
sbb
and
mov
fwait
jbe
fwait
in
adc
inc
dec
rolb
or
adc
test
ja
adc
add
sbb
fnsave
or
xor
inc
mov
xchg
sbb
rorl
add
pop
or
mov
pop
inc
mov
mov
jo
inc
cmc
fdivrp
jb
loope,pt
int3
mov
inc
mov
cli
fildl
inc
dec
dec
loopne
mov
pop
into
push
scas
jmp
xor
popf
xchg
pusha
shll
cwtl
insl
scas
lret
mov
lcall
es
loope
mov
adc
jb
cmp
mov
mov
dec
jo
fdivs
pop
push
xor
and
push
or
test
dec
lock
xor
pmaxub
dec
sbb
loopne
push
fwait
and
sbb
fdivr
mov
inc
pop
inc
dec
ja
inc
xlat
out
jle
mov
and
pushf
loopne
or
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
push
ficoms
adc
mov
sbb
jae
mov
mov
or
aaa
fcompl
ret
dec
add
cmpsl
ljmp
cmc
jle
or
cmp
add
fs
pop
jns
push
imul
cs
daa
pop
shrl
mov
int
test
push
inc
jo
adc
popf
jo
xor
mov
mov
sub
and
fmuls
sbb
out
jge
int3
sarb
sub
inc
ds
jo
call
pop
sub
loopne
out
jbe
roll
test
mov
into
out
sub
sar
in
aad
cmc
in
insb
ja
test
and
pop
test
fwait
stos
stc
dec
js
mov
leave
cmp
mov
mov
xor
xorb
movsl
jg
aam
jnp
jecxz
aam
icebp
pop
push
hlt
dec
loop
sbb
es
sub
shl
gs
cmc
push
test
push
xor
jb
imul
idivb
movsl
adc
jp
pop
divb
mov
pop
sahf
push
xor
xchg
add
xor
pushf
mov
out
cmp
mov
gs
aas
xchg
hlt
loopne
repnz
jp
gs
sbb
or
mulb
aaa
xor
jnp
mov
adcl
loop,pt
xor
gs
es
jne
popa
divb
jl
ret
in
mov
mov
loope
in
push
shll
push
sbb
mov
jo
mov
cmp
retw
mov
mov
mov
lods
mov
out
sub
ljmp
inc
outsl
ret
in
cwtl
into
divb
xchg
jl
fs
lcall
cli
pop
jp
dec
mov
rcr
fwait
int
cld
cmp
shrl
movsl
and
jl
mov
xchg
inc
mov
pop
mov
inc
jecxz
sbb
sbb
mov
ret
push
xor
mov
nop
enter
in
testb
or
xlat
lret
outsl
xlat
rclb
mov
int
xchg
mov
mov
inc
mov
xchg
pop
pushf
pop
xor
fadds
adc
rclb
sbb
or
les
mov
or
jae
fisttpl
jnp
jg
mov
fidivl
lods
push
jge
insl
out
cld
pushf
cmp
or
mov
scas
xchg
adc
aas
xchg
mov
sub
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
or
jle,pn
aam
adc
rcl
cmc
mov
add
jnp
aaa
mov
fsubrl
push
xor
adc
pop
rolb
in
stos
fisubs
or
xchg
fstpt
push
mov
bound
or
mov
xor
jnp
lds
int3
nop
lcall
xchg
outsb
mov
rcll
test
cmp
xchg
sub
mov
push
int
pop
pop
lds
mov
pop
lret
mov
stos
aad
je
add
fisubs
mov
lods
aas
fsubrp
divb
sbb
fstl
out
aaa
dec
inc
sbb
inc
fdivrp
mov
nop
clc
dec
inc
loop
arpl
mov
es
push
mov
sub
insl
or
pop
xor
add
cwtl
lret
pusha
xor
stos
push
ror
stc
or
lock
xor
jo
call
push
incl
xchg
icebp
movsb
adc
pop
popf
repz
in
mov
jne
mov
or
jns
loopne
xchg
iret
nop
fsubrl
cmp
lcall
jnp
xor
ljmp
adc
mov
mov
lds
or
outsb
bound
int3
in
arpl
ja
std
leave
adc
push
arpl
pop
mov
xchg
stos
lret
push
xor
es
xchg
cli
and
in
xor
insl
jo
in
fdivs
pop
pop
push
sub
push
adc
xchg
je
pop
and
push
pop
arpl
dec
ret
lea
loopne
cld
xor
mov
pusha
fstpt
repnz
inc
cli
and
aam
or
insb
pop
pop
jmp
fmull
lods
adc
fs
mov
xor
cmp
sbb
sub
mov
jg
rorb
ja
fbld
out
aaa
cmp
cmp
rcl
imul
inc
push
repz
cmp
cli
jnp
inc
inc
addr16
xchg
lea
jmp
testb
cwtl
inc
jl
sbb
jbe
pop
inc
and
dec
mov
ss
sarl
mov
push
cli
push
xor
sbb
aaa
xchg
ret
fistpl
add
pop
xchg
dec
ret
dec
mov
adc
imul
js
jl
movsl
inc
insb
pop
lahf
push
jmp
pop
xchg
mov
jge
fistpl
movsl
lcall
mov
imull
ficompl
dec
cmpb
dec
add
jp
out
pop
add
mov
push
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
jns
inc
mov
ret
mov
and
dec
dec
outsl
out
cld
jmp
pushf
inc
pop
inc
adcb
loop
mov
mov
or
loopne
out
mov
add
push
mov
sbb
test
xchg
push
aaa
inc
loop
pop
test
push
jnp
jno
jmp
outsb
push
in
jns
or
add
in
mov
shrl
xchg
xchg
adc
enter
adc
mov
dec
fadd
mov
rol
sub
ret
adc
inc
jae
xor
mov
xor
xor
fcmovbe
and
pop
mov
adc
ljmp
mov
jns
lret
dec
sub
push
xlat
lret
cmp
xchg
sbb
ficoml
loope
jecxz
cwtl
bnd
or
das
jmp
ss
cmpb
imul
mov
and
fstl
dec
lods
cmp
sbb
and
or
sbb
jp
aaa
xchg
das
sti
dec
adcl
or
ljmp
std
pop
outsb
cmp
xor
cltd
andb
or
mov
adc
stos
xchg
pop
inc
mov
dec
out
test
popa
leave
mov
mov
imul
jp
xchg
lock
inc
js
shlb
lahf
xor
cwtl
lods
lcall
mov
rcrl
vmaskmovdqu
fincstp
xor
pop
ljmp
mov
aam
clc
insb
sarb
cwtl
pushf
mov
or
mov
adc
insb
add
sub
mov
mov
ret
adc
push
gs
imul
or
rol
enter
cld
int3
dec
outsl
pop
popf
movsb
mov
test
mov
lock
cmp
lret
push
jnp
in
shl
mov
leave
inc
je
add
incl
add
out
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
dec
xchg
js
into
adc
adc
or
fbld
dec
pcmpeqd
andb
sub
mov
daa
jbe
xor
or
push
sbb
xor
add
int3
shl
mov
push
int
in
cmp
mov
aam
iret
lret
mov
icebp
pop
popa
jge
inc
mull
gs
add
mov
push
or
ds
push
sbb
aaa
repz
mov
or
fbstp
mov
out
movsl
xor
sub
add
push
and
dec
out
mov
ret
fsubr
and
gs
insl
pop
jl
test
fisubs
jae
negb
fildll
sbb
test
ficoms
jae
pop
sbb
out
and
lock
int3
pop
add
aad
mov
jo
dec
lock
dec
lret
sub
insb
mov
xchg
imul
inc
in
add
hlt
add
cmc
inc
cmc
push
dec
jo
repz
xor
or
xor
dec
ret
xor
push
mov
jne
dec
and
jno
psraw
add
mov
js
xor
scas
imul
mov
and
adc
xchg
es
neg
lods
cmp
add
and
test
inc
ret
arpl
pop
inc
sti
dec
std
or
out
je
push
sbbb
ds
adc
scas
pop
jns
fildll
rorb
cmp
insb
cmp
push
ret
in
add
add
fildl
loope
mov
jb
mov
add
lods
cmp
dec
fsubrl
fs
sub
iret
sahf
fs
aad
jne
enter
stos
add
push
push
xchg
inc
into
xor
js
mov
inc
add
push
mov
in
and
jne
not
mov
and
mov
push
xorb
loopne,pt
mov
jp
aas
mov
test
cld
outsb
mov
rcll
lret
aaa
ja
sub
bound
shll
mov
inc
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
push
push
push
mov
enter
out
in
call
out
jp
orb
int3
lret
push
sbb
pop
push
mov
lds
mov
adcb
fs
and
lods
sub
mov
es
gs
push
outsb
aas
dec
xchg
mov
fstpt
adc
pop
dec
pop
xor
leave
mov
lock
ficompl
adc
xchg
iret
stos
testl
pop
push
xchg
add
push
add
rolb
inc
out
jle
ss
popa
xor
cli
bound
lret
ret
xchg
ljmp
mov
iret
andl
dec
xor
insb
rcll
test
addr16
sbb
test
pop
fcmovnbe
pop
adcl
mov
push
xchg
arpl
les
icebp
pop
xchg
fstpt
or
sub
push
dec
inc
movsl
fwait
xor
inc
sub
lock
repnz
jle
jecxz
in
enter
lahf
ljmp
push
in
xor
int
mov
cmpsl
add
cmpsb
and
pop
pop
or
mov
adc
ljmp
adc
or
test
test
and
iret
cwtl
push
mov
pop
mov
xchg
mov
mov
xor
das
adc
iret
jmp
jp
loope
inc
xor
mov
lahf
dec
xchg
or
pusha
fcmovb
mov
into
bswap
push
icebp
jge
ficoml
mov
add
jae
cmp
nop
movsl
cmp
mov
cli
push
jno
jg
push
dec
pop
lods
mov
and
push
fidivl
cmp
dec
out
imul
mov
scas
xor
xorb
jns
in
cmp
jl
rcl
cmp
jge
mov
enter
iret
fwait
mov
scas
mov
cmp
sbb
sbb
pushf
roll
inc
insb
push
lods
aam
sbb
xchg
test
dec
dec
out
das
add
xor
js
div
xchg
test
and
mov
sarb
insl
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
mov
jle
adc
adc
mov
sub
pop
and
lds
jnp
mov
outsl
imul
jg
mov
cmp
in
pop
int3
fnstenv
push
fwait
fwait
les
dec
mov
stc
lods
and
push
iret
mov
adc
push
fcompl
emms
into
cmp
mov
into
jne
cmp
imul
divl
nop
and
push
push
pop
fcom
or
loope
out
xchg
ret
les
jecxz
mov
dec
push
fnsave
mov
stos
mov
int
les
lods
cmpsl
push
call
or
lods
adc
cmp
push
mov
movsb
xchg
repnz
adc
cmc
add
mov
xchg
and
sbb
jo
rclb
test
xchg
xchg
daa
test
nop
cmp
or
cmp
ret
sti
ret
add
mov
aam
or
mov
shlb
sarb
imul
clc
and
push
and
mov
sbb
pusha
pop
xchg
aad
call
push
ljmp
cmp
sarb
inc
adc
mov
js
inc
rcr
mov
jnp
adc
int
sub
push
jbe
cwtl
loopne
adcb
call
pop
cmp
hlt
pusha
pop
dec
sub
sti
push
and
add
je
stc
mov
stos
sbb
mov
mov
mov
movsl
pop
or
cmp
out
scas
adc
nop
push
bswap
jl
dec
inc
adc
sub
mov
pop
orb
mov
ret
dec
mov
out
lret
jae
aas
gs
sarb
ljmp
fisubs
add
dec
pop
out
lcall
test
hlt
icebp
dec
das
out
xchg
scas
add
sti
cmpsl
mov
les
aas
jge
mov
xor
mov
xor
jp
arpl
js
lods
out
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
xor
stos
leave
ret
enter
rcrb
sbb
in
ds
outsl
dec
inc
push
fisttpl
es
and
sub
pusha
dec
pop
mov
jne
inc
loopne
fwait
cmpsb
push
pop
sbb
push
lret
and
pop
sub
jmp
add
sbb
adc
xor
stos
repnz
mov
add
mov
iret
mov
jns
sahf
mov
cmp
and
xorb
negl
mov
ljmp
push
fstl
jns
pop
and
lahf
xchg
test
cmp
pop
mov
xchg
sub
dec
popl
int3
mov
jge
into
sub
addr16
cmpsl
push
dec
dec
mov
adc
lahf
xor
cmc
mov
scas
movsl
push
and
xchg
cld
mov
xchg
push
cmp
jge
adc
das
fcomip
cmpsl
cmp
mov
in
pop
aaa
xor
xor
mov
add
inc
push
pop
adcb
je
adc
mov
cld
test
cmpb
jne
pop
push
sarl
scas
mov
add
pop
in
data16
mov
imul
jne
arpl
jo
mov
pop
and
mov
out
pop
cmp
sbb
jp
rcr
jb
dec
pop
xor
inc
inc
xor
lock
mov
iret
cmp
inc
outsl
popf
loopne
jp
cli
fistpll
test
stos
fneni(8087
mov
jo
mull
and
push
jo
data16
lock
inc
lods
pushf
addr16
jno
inc
pop
push
fistl
jmp
push
cmp
dec
xchg
sub
lahf
sarl
push
pop
je
xchg
lret
dec
test
jp
pusha
les
fs
push
jmp
outsb
out
leave
ficoms
lret
mov
insl
sbb
cmp
or
cmp
arpl
and
icebp
stos
sahf
pop
out
lret
xor
mov
mov
scas
pop
test
mov
add
dec
pop
test
fldl
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
ds
jge
adc
adc
jbe
fcmovbe
in
adc
int3
mov
xor
stc
negb
adc
add
dec
roll
dec
push
pop
mov
mov
test
mov
xor
inc
pop
adcl
inc
repz
cmpsb
in
sahf
ret
lea
out
shll
sub
test
fwait
mov
mov
mov
stc
mov
scas
clc
sub
and
inc
adc
ficoml
xlat
scas
mov
sbb
insl
mov
inc
jne
dec
mov
mov
ficompl
loopne
adc
push
aad
xorl
shll
xchg
lret
mov
add
fcompl
les
jae
mov
mov
sub
shll
loopne
cmp
decl
into
cmp
ljmp
sub
pop
xor
iret
cli
sbb
data16
dec
psllw
movsb
push
and
out
pop
out
and
pusha
icebp
rcrb
decb
xchg
jl
int
inc
testl
pop
xor
jl
and
push
in
ljmp
out
mov
xchg
add
mov
inc
stos
dec
dec
pop
ss
xor
in
jne
mov
jg
and
aas
jne
sbb
repz
out
and
mov
push
lahf
jmp
imul
lods
ljmp
aas
ret
xchg
inc
xchg
mov
jo
inc
in
lret
pusha
call
jmp
xchg
or
xchg
pop
mov
xchg
bound
inc
bound
mov
div
stos
push
push
cmp
or
jbe
out
mov
aam
popa
push
outsb
stos
aas
pop
mov
in
xor
test
jne
inc
push
push
fwait
cmpsl
cmpsb
jle
xchg
sub
sbb
xor
lret
fcoms
enter
xchg
inc
xorb
pop
in
test
incl
testb
adc
test
leave
in
add
shl
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
sti
jle
mov
adc
mov
jmp
xchg
int
insb
jae
repnz
adc
jae
ficompl
cld
jge
outsb
test
push
addr16
sub
ret
or
mov
jge
add
in
or
jns
inc
mov
insl
pop
hlt
mov
sub
mov
sub
push
lods
push
mov
ss
dec
jns
xchg
xchg
push
or
cmpsl
push
or
push
clc
add
pop
adc
pop
jg
nop
fwait
jmp
adc
mov
xlat
outsb
pop
jns
imul
xor
test
pusha
dec
sti
inc
xor
movsl
mov
xchg
pushf
das
jl
pop
sahf
add
and
dec
stos
cmp
lret
popa
jle
add
out
xchg
push
inc
jno
pop
and
std
shlb
inc
pop
fnstsw
sbb
aam
imul
xor
sub
adc
mov
jne
pop
insl
push
pop
scas
arpl
push
sbb
xor
nop
pop
pop
lret
push
lods
enter
jnp
scas
sahf
jns
lret
or
add
hlt
xorb
aaa
inc
dec
pop
shlb
movsl
or
aas
or
add
adc
dec
mov
jle
jo
mov
sub
mov
fiaddl
idivb
push
mov
inc
ja
scas
imul
int3
shl
stos
dec
dec
lret
stc
jns
int3
das
xor
pop
push
popf
xchg
insb
test
leave
push
inc
movsl
fucomi
pop
adc
pop
add
and
dec
out
arpl
in
popa
mov
adc
ret
jg
cmp
aam
dec
pop
mov
pop
ja
push
mov
jno
xchg
das
aas
dec
shll
sub
xor
fstp
jns
jge
cmpsl
mov
xchg
cmp
push
sbb
scas
jecxz
stos
cmp
fstp
stos
cmp
mov
jnp
jae
cmovnp
xchg
adc
shr
lret
cmp
sub
daa
or
push
pushf
loop
xchg
sbb
and
cmc
xchg
iret
fldl
mov
sbb
les
les
sbb
in
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
add
stos
out
adc
adc
fwait
imul
cld
and
popf
stos
xor
outsb
push
xor
repnz
pop
clc
add
out
xchg
in
out
das
fadds
sbb
call
pop
stos
insl
adc
iret
pop
ficoms
aas
cmpl
jp
push
mov
add
cmp
jne
ljmp
hlt
cmp
ret
dec
imul
jg
pop
stos
jne
dec
stos
dec
lods
fisubs
movsb
into
sbb
mov
or
push
dec
inc
lods
and
mov
sub
addw
sar
jno
ja
cmp
jns
popf
pushf
loope
mov
push
mov
pop
ljmp
dec
or
gs
xor
dec
lret
adc
lock
and
adc
pop
mov
xchg
iret
pushf
test
and
jl
addr16
or
sbb
addr16
dec
pushf
frstor
testb
call
dec
mov
sti
cmp
jge
notl
add
into
cli
pop
loopne
cmp
int3
mov
bound
lret
ja
incb
xor
insl
fs
xchg
sbb
pop
js
pop
popf
mov
xor
fstl
clc
inc
sbb
dec
push
or
pop
add
jp
xor
dec
xchg
dec
xchg
and
xlat
repz
mov
insl
push
pusha
call
imul
xor
jecxz
sti
mov
xchg
or
inc
movsb
les
push
fists
cmc
addr16
cld
lcall
dec
sbb
mov
mulb
fisttps
dec
bound
push
sbb
cmp
cmp
cmpsb
lret
call
mov
inc
dec
or
test
aaa
and
mov
sbb
inc
into
jns
popf
and
mov
fdivl
cmp
adc
and
xor
push
and
jno
pop
add
test
adc
lret
inc
xchg
sbb
lods
addr16
mov
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
rol
push
push
lods
adc
adc
cwtl
and
push
popf
out
cmpsb
in
ds
dec
mov
insb
movsl
and
adc
jp
fs
insl
dec
das
les
xchg
adc
fbstp
pop
push
sbb
jp
cmp
sbb
push
stc
xor
inc
jno
rclb
mov
inc
mov
inc
into
popf
es
xchg
arpl
sbb
mov
scas
xor
sbb
jae
jg
push
loop
mov
outsl
jb
test
xchg
xor
cmp
inc
pop
xor
les
jo
gs
test
mov
bound
cmpsl
out
fwait
outsb
in
inc
mov
loop
dec
mov
add
cmpsb
stos
xor
sbb
daa
ret
ja
pmuludq
push
lcall
das
dec
dec
xor
sub
xchg
xchg
popf
aam
xchg
test
shrl
test
arpl
adc
adc
mov
or
push
cmp
sbb
pop
sti
dec
mov
cmp
jg
jle
aad
stos
dec
out
and
out
mov
in
cmp
inc
andl
mov
jns
add
mov
cwtl
nop
cs
hlt
out
add
inc
pop
nop
jle
in
lret
fcoml
pop
and
pop
cmp
sbb
addr16
dec
and
arpl
add
rclb
pop
orl
int
pop
mov
jecxz
add
sub
add
stos
mov
rcrl
ss
jae
pushf
sub
mov
mov
ret
dec
aad
clc
cmp
aaa
hlt
xor
mov
inc
in
pop
mov
adc
inc
jb
dec
jecxz
mov
add
cwtl
les
sub
push
sbbb
pop
inc
popf
cmp
repz
inc
enter
inc
ret
xchg
inc
ret
lods
or
dec
pop
lods
adc
out
lds
lea
push
scas
cld
fcmove
leave
mov
dec
and
test
sub
add
mov
add
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
add
push
test
adc
movlps
fstps
test
shll
cmc
or
sbb
lods
cs
insl
call
sbb
add
push
jne
mov
add
outsl
sbb
sahf
call
pop
cmp
xchg
adcb
and
xchg
lahf
sbb
mov
imul
mov
mov
fisubs
jl
int3
arpl
imul
add
into
mov
lcall
lods
popa
in
gs
sti
inc
lcall
sbb
xchg
pop
daa
repnz
sbb
lds
ss
xchg
mov
sbb
fistpll
int
lea
mov
or
xchg
and
test
es
or
jmp
rorb
out
adc
mov
push
pop
or
jp
mov
jecxz
sub
mov
mov
ljmp
aam
in
cmp
xchg
mov
mov
inc
out
pop
pop
pop
roll
mov
in
les
ss
cwtl
mov
scas
test
adc
pop
mov
push
fld
adc
rolb
add
andl
pop
pop
lret
add
jbe,pn
or
xchg
fadds
popa
cs
int
cmpsb
push
cli
test
in
cmp
inc
mov
mov
fs
arpl
mov
orl
mov
fs
mov
adc
andl
or
lret
push
leave
xchg
loopne
mov
test
scas
add
pop
jmp
repz
pop
or
jne
mov
pop
call
ret
sub
jmp
xchg
cmp
add
ret
cld
mov
pop
xchg
addl
test
jno
xchg
push
inc
add
popa
or
sar
mov
and
pop
xor
out
add
xchg
sub
rclb
mov
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
andl
movsb
adc
adc
xchg
in
sub
shl
inc
inc
jnp
jns
mov
fld
in
lea
sub
and
xchg
jl
xor
cmp
or
fistl
repnz
rolb
inc
mov
fcmovbe
inc
lret
enter
and
or
dec
fistpl
into
jmp
cld
mov
lahf
mov
fcoms
lcall
shlb
dec
js
adc
lret
ffreep
pop
mov
push
test
in
inc
jl
cli
movsb
cmpsl
adc
or
xor
rorb
jae
stc
shr
cwtl
es
aam
adc
cmp
test
push
lds
jg
pop
loopne
mov
je
leave
incb
mov
cmp
ss
mov
sbb
cmp
imul
fdiv
test
int
std
cmp
push
jnp
fisttpl
jmp
outsb
fistps
adc
jno
lcall
mov
jae
sub
push
cmp
imul
push
or
outsl
les
add
xor
push
xchg
psubusb
lret
pusha
ja
imul
add
mov
pushf
dec
jbe
stos
mov
fisttpl
xlat
popa
inc
test
scas
xor
inc
shl
inc
popa
push
pop
idivb
test
mov
xor
and
sti
cmpsb
pop
or
popf
out
lock
shlb
test
jge
adc
jl
hlt
mov
xor
out
mov
loopne
popa
lahf
sarb
pop
ja
add
adc
pop
rolb
inc
xchg
paddq
mull
xlat
dec
pop
popl
xchg
xor
add
adc
int
mov
jnp
inc
jg
sbbb
jge
movsl
mov
dec
ja
stos
sub
data16
jg
imul
into
cmp
cs
pop
stos
pop
ljmp
inc
insl
scas
sti
aam
adc
adc
decl
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
scas
jb
mov
adc
adc
mov
mov
loopne
mov
mov
clc
fldt
add
cli
cli
cmc
mov
data16
mov
adc
cwtl
push
in
lds
sbb
int3
dec
in
scas
sub
xchg
jns
popa
call
xor
fs
jae
jo
stos
jne
dec
fs
inc
or
jne
add
add
rcrl
out
mov
gs
xchg
sti
dec
lods
mov
sbb
ja
sub
jo
pop
cmpsb
movl
mov
roll
jmp
adc
jge
ss
inc
imul
notb
dec
xchg
mov
iret
test
sahf
mov
test
je
and
flds
cs
mov
imul
in
cmp
pop
loopne
inc
fists
jbe
xchg
xlat
jne
or
lcall
or
loope
imul
lods
sbb
scas
or
jmp
or
dec
mov
push
push
lods
push
xor
dec
mov
or
out
movsb
inc
xchg
mov
sub
add
jg
dec
daa
andl
in
les
sbb
xor
pusha
sub
xchg
dec
cmpb
sbb
xchg
lock
sbb
pop
xchg
movsl
adc
cld
aas
mov
and
scas
leave
test
mov
jns
xchg
sbb
sub
xor
in
aas
gs
xlat
xor
mov
sahf
and
ffree
cli
int
xchg
popf
idivb
test
push
or
jl
push
push
sar
outsl
jmp
sbb
push
or
sub
daa
fisubs
sarb
imul
mov
xor
aad
bound
lock
loop
mov
mov
jae
inc
mov
pop
sbb
sbb
ss
loop
mov
mov
lds
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
insb
imul
das
gs
fwait
mov
jecxz
aaa
mov
jae
xchg
loopne
popf
push
mov
cmp
aam
and
popa
into
inc
in
pop
sar
adc
imul
dec
popf
leave
cmc
nop
push
daa
sbb
in
aaa
out
shrb
sub
dec
cli
addb
lods
sub
xorb
ja
push
and
xchg
in
xchg
cmpsb
in
pop
mov
leave
cwtl
pop
fdiv
push
xchg
mov
int
mov
sbb
testb
das
mov
lock
int
sub
inc
hlt
fld
pop
test
iret
push
sub
xchg
in
and
data16
js
stos
jmp
decb
inc
mov
add
ja
lock
cmc
push
je
aas
pusha
adc
insl
jmp
or
aaa
xor
fisubs
and
push
xchg
xchg
lds
mov
imul
xchg
mov
ljmp
add
mov
cmc
lods
mov
in
cs
xchg
fistl
jmp
or
mov
lock
adc
int3
xlat
data16
enter
sahf
xchg
mov
and
or
movsl
sub
andb
inc
shrl
mov
cmp
pusha
cwtl
inc
mov
mov
lods
pop
adc
mov
scas
fnsave
xchg
jp
mov
push
and
mov
xchg
sbbl
fucomi
fwait
sub
cmp
repz
and
dec
loopne
cltd
mov
dec
push
push
sbb
add
cwtl
pop
in
std
jg
stos
pop
dec
es
push
sub
shll
out
mov
adc
or
jl
arpl
inc
bound
in
jne
cld
xor
test
pop
stos
dec
lods
xor
jp
push
movzbl
mov
inc
add
xlat
inc
xchg
popl
into
std
cmp
lcall
adc
xor
jb
mov
push
push
clc
add
jnp
pop
mov
mov
pop
rcrl
cmp
orl
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
fcmovnb
mov
enter
jg
pop
loop
and
xchg
movl
push
adc
dec
lcall
in
sub
sti
push
aaa
mov
test
data16
out
out
or
lea
jbe
mov
cltd
push
mov
in
insb
adc
jl
pop
addl
cmc
hlt
daa
rolb
or
test
rcrl
adc
in
xchg
jge
jl
in
sbb
sub
ds
jo
and
dec
mov
rorb
vphaddbd
cli
adc
xor
push
rcrl
stos
ret
xchg
divl
fldt
cmpsb
lods
test
and
adc
cmpsb
fwait
pushf
adcl
inc
sub
loop
js
xor
mov
cmp
outsl
icebp
pop
sbbb
sbb
and
pop
cmpsl
stos
cmp
ds
pop
mov
jbe
rcr
inc
fimull
and
in
sbb
mov
xchg
out
gs
pop
insl
lock
hlt
pop
imul
push
push
mov
lods
fs
sub
and
xor
adc
inc
repz
pop
rorb
xchg
adc
push
movsb
fdiv
into
mov
jmp
pop
mov
dec
popf
cmp
in
into
lret
jmp
adc
ds
push
arpl
lahf
add
pop
mov
fildll
xlat
sub
push
ds
adc
les
icebp
sti
adcl
fcomp
idivb
inc
imul
popa
bound
fsts
inc
lods
movsl
push
icebp
mov
fmuls
xor
movsb
mov
cmpsl
sbb
dec
and
insb
loope
adc
pop
xor
sbb
push
mov
push
iret
adc
sub
in
push
cmp
sbb
int
xchg
aad
icebp
cmp
push
in
mov
js
mov
lret
aaa
pushf
insl
jg
pop
ja
xchg
dec
add
mov
sub
and
imul
add
jge
add
cmovg
add
fisttpll
mov
repnz
cmp
fiaddl
std
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
xchg
mov
movlps
pusha
notb
cmp
sbb
or
jmp
xchg
pop
loopne
mov
stos
or
mov
cli
movsl
repz
add
fcompl
daa
lock
mov
lcall
jg
and
fwait
popf
push
push
push
es
jnp
xchg
mov
cmp
mov
call
popf
aam
xchg
adcl
out
inc
aad
pop
and
xor
call
imul
or
add
cmpsl
std
shlb
mov
jns
loopne
popa
and
mov
incl
xchg
mov
sbb
mov
pop
jge
cmp
imul
dec
xor
sub
xchg
jb
jl
addb
fistps
frstor
adc
xchg
fcmovnb
cli
xor
and
rorl
dec
shrl
mov
dec
inc
xor
loop
push
or
movsl
mov
and
mov
dec
dec
lret
push
inc
sti
mov
inc
imul
xor
cmpsl
cld
mov
mov
xchg
test
mov
pop
inc
inc
fstl
imul
mov
mov
std
shll
jo
out
inc
push
shlb
stos
push
andb
cmp
cmp
sbb
sbb
fidivrs
data16
sub
mov
mov
jmp
adcl
cmp
xchg
mov
arpl
ljmp
push
outsb
call
push
mov
add
mov
pop
xchg
mov
out
fisubs
outsl
cmp
dec
pop
dec
js
pop
sahf
iret
scas
ss
div
scas
mov
inc
cmp
mov
push
dec
cwtl
pop
add
jnp
jg
bound
dec
cmpb
sbb
ficoml
repnz
add
xchg
stc
push
adc
test
ret
sarb
movsb
int3
std
pop
fldcw
faddl
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
mov
jle
xchg
adc
adc
imul
pop
jns
mov
outsb
jnp
out
adc
push
movsl
ljmp
cmovge
cmp
dec
xor
jg
pop
jl
js
sub
loop
int3
mov
daa
stos
or
mov
or
fcompl
stos
push
mov
mov
jge
jns
adc
sub
enter
jmp
push
nop
sbb
sub
xchg
data16
outsb
jbe
outsb
xor
fldenv
lea
insb
sub
in
dec
cwtl
cmp
or
dec
addr16
les
stos
mov
pop
push
mov
add
std
inc
cmp
dec
jecxz
mov
std
pop
inc
in
loope
add
mov
adc
xchg
adc
sbb
cli
cmp
jns
loopne
mov
stos
sub
pop
sbb
fs
mov
mov
pop
push
push
mov
sbb
or
sub
fwait
push
and
outsl
fisttpll
push
sub
and
xor
imul
repnz
sub
sbb
dec
cmp
jne
outsl
gs
in
aaa
out
repnz
cli
cmc
inc
mov
popf
scas
dec
pop
clc
pushf
and
repz
shrl
mov
jae
push
adcl
pop
fsts
dec
inc
mov
fnstcw
pop
in
cltd
ret
outsl
xor
push
lahf
adc
jnp
inc
leave
cwtl
mov
ret
fwait
dec
jmp
aad
xchg
lahf
lea
push
jge
pop
and
mov
sub
lcall
xchg
out
mov
jmp
and
shll
mov
jo
daa
cmp
adc
mov
xor
aaa
or
jnp
inc
push
loop
jno
mov
xchg
in
aaa
scas
or
in
iret
mov
adc
add
repnz
shll
enter
push
adc
push
ja,pn
push
push
jne
or
jl
pusha
push
xchg
sbb
sahf
sub
movsl
mov
cmp
mov
jnp
add
pop
pop
jp
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
cmc
sub
adc
movlps
pop
nop
push
ljmp
push
pop
xchg
popf
jp
cwtl
popf
cli
mov
jno
int
cmp
fsts
cmp
andl
pop
push
sub
add
mov
xor
jne
addr16
outsl
stos
outsl
cmp
loop
adc
sbb
add
dec
or
imul
pop
hlt
jmp
xchg
inc
pop
mov
cs
sbb
stc
nop
imul
test
stc
push
inc
lret
les
inc
notl
adc
or
mov
or
xchg
out
push
scas
test
movb
push
push
ds
leave
ret
nop
add
jg
aas
mov
arpl
add
test
mov
out
and
dec
dec
fisttpll
stos
lea
jns
pop
pop
jo
fcompl
stos
dec
rcll
filds
lds
stc
icebp
add
test
jno
sub
orl
stos
sbb
lcall
pop
pop
pop
and
movsl
call
add
div
push
popf
mov
lcall
inc
xchg
xor
jbe
mov
sbb
pop
in
mov
lods
test
add
test
mov
and
ljmp
push
pop
push
cli
movsl
sbb
mov
cld
cmp
adc
outsl
xor
das
out
xchg
fcompl
ja
movsl
or
jg
pop
cmp
shll
push
jmp
and
jl
aas
fwait
xlat
add
test
mov
std
adc
aad
pop
xor
add
test
or
mov
and
jne
cs
cmpsb
mov
out
and
out
sbb
push
and
xor
mov
add
ljmp
add
lret
jb
push
ret
add
shr
loopne
and
mov
pusha
enter
and
or
jl
cmc
and
adc
mov
mov
adc
cmpsl
pusha
adc
mov
inc
adcb
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
push
popa
scas
pop
fldenv
sbb
insl
xchg
stos
push
pop
and
add
jno
push
inc
aaa
dec
test
inc
push
stos
and
lretw
add
push
push
push
and
lahf
push
push
in
pop
insb
adc
test
fmull
ss
out
add
pop
std
jmp
cmp
push
push
roll
inc
sbb
ljmp
daa
popf
lret
cmp
ja
lods
cmp
mov
and
xchg
insb
dec
or
int
xor
and
cmpsl
test
or
dec
xchg
mov
or
adc
sbb
pop
jnp
jecxz
imul
xorl
movsl
das
cmpsb
push
sarb
xor
aas
cmp
ret
sarl
inc
rcrl
cld
jle
adc
xchg
jo
cmp
movsl
cmp
sbb
into
or
jnp
jecxz
push
pop
pop
mov
push
in
cmpsb
les
pushf
mov
aad
jg
pushf
fistpl
and
cmp
jo
pop
and
or
dec
xor
adc
adc
jae
jae
in
push
adc
pop
in
outsb
push
lret
imul
int
mov
jns
jne
xor
mov
xchg
rcr
and
enter
int3
cmpsb
les
les
gs
adc
iret
jle
fnstenv
dec
mov
cltd
fildll
mov
mov
clc
xchg
mov
mov
ficoml
insb
mov
lods
popf
add
es
xchg
jmp
push
mov
ret
adc
sbb
and
mov
mov
pop
cld
das
scas
test
das
movsl
inc
adc
idiv
jmp
sbb
je
aas
iret
adc
mov
xor
cmpsl
lea
in
roll
rcrl
dec
mov
sti
mov
xchg
fstl
loop
enter
test
cs
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
sub
add
enter
nop
repnz
pop
pop
divb
imul
ja
jmp
cli
inc
cmp
pop
rclb
repz
sti
pop
sbb
lret
add
movsl
test
fistps
fisubs
jecxz
xorl
mov
cmpsb
pop
add
mov
sub
and
jg
pop
fwait
mov
mov
xor
loopne
inc
fwait
or
xchg
ret
sbb
mov
test
ds
adc
sbb
shl
push
dec
iret
and
outsb
mov
cmp
sti
fwait
aad
xchg
outsb
popf
es
arpl
stc
and
xchg
mov
adc
dec
lcall
flds
jle
repnz
jns
insl
nop
inc
and
jp
adc
es
xchg
push
add
mov
imul
insb
and
jl
jne
daa
inc
jnp
cmp
out
pushf
pushf
das
fdivrs
popa
cmpsl
pop
cs
std
fldcw
shl
adc
jno
push
hlt
push
mov
outsl
arpl
je
jmp
dec
mov
jl
js
lods
sbb
mov
repz
xchg
out
sbb
adc
adc
sarl
aad
test
add
lret
jae
divl
stos
mov
lds
ja
dec
test
daa
add
fldcw
sarl
adc
ja
xorb
sub
aad
push
aad
pop
push
mov
mov
rorl
out
sti
xchg
in
out
ret
dec
sbb
ja
je
push
xchg
dec
pop
jo
mov
inc
xchg
ficomps
pop
leave
lret
repz
call
cmpsl
inc
loope
add
and
pop
adc
xor
mov
addl
adc
jp
jmp
subb
mov
stc
mov
mov
shll
mov
dec
cmp
and
mov
movsl
push
popl
loop
test
xchg
or
aaa
dec
mov
mov
inc
inc
cltd
scas
pop
stos
lods
push
push
test
adc
and
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
mov
lods
push
adcb
js
sti
xor
repz
mov
pop
sub
push
aam
int3
cmpsl
adc
icebp
xor
das
cmp
test
pop
testb
iret
mov
in
movsb
ljmp
movsl
pop
idivb
sbb
iret
mov
aad
adc
sbb
lret
outsl
fiaddl
in
mov
aaa
add
xlat
xor
cmp
pop
dec
adc
inc
stos
mov
mov
xor
mov
mov
jne
dec
sbbb
fistps
push
pop
sbb
dec
xchg
das
cmpsl
int3
cmpsl
push
adc
dec
dec
jle
ret
outsl
push
jecxz
stos
push
sub
jg
mov
stos
add
enter
or
gs
mov
xchg
dec
nop
clc
and
sarl
imul
dec
add
or
dec
add
adc
adc
add
sbb
push
int3
mov
jle
or
enter
xchg
inc
adc
push
ret
fdivrs
adcb
cltd
pop
inc
lret
and
dec
mov
mov
jge
out
mov
loopne
cmpsl
inc
dec
cs
sub
aam
ret
bound
in
xlat
dec
stc
insb
lret
dec
add
dec
stc
shlb
repz
inc
fs
insl
sbb
add
out
jbe
dec
enter
cmpsl
mov
sbb
and
push
lcall
enter
xchg
lods
mov
les
jno
nop
out
std
jo
shlb
test
insb
out
sahf
adc
in
insl
shll
lcall
into
mov
nop
mov
cltd
cmp
sbb
mov
cli
loopne
xorl
out
aad
mov
imul
cmp
mov
cmp
xchg
sbb
cmp
fs
shlb
xor
movb
cs
mov
lods
shrb
push
call
xor
orl
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
inc
xchg
mov
enter
mov
adc
andb
nop
jmp
add
and
mov
xchg
push
sub
dec
cmp
leave
punpcklwd
or
sbbl
jae
xchg
xor
lods
cld
insl
inc
and
add
cmp
fnsave
fnstenv
test
jo
jbe
mov
je
mov
cmpsl
jg
jns
outsl
in
cmpsl
ficomps
int
je
dec
xor
fsub
push
inc
mov
mov
jge
push
adc
jae
mov
add
push
cwtl
aaa
icebp
lea
sub
jbe
fcoml
lock
sbb
les
scas
stc
das
jg
movsb
pusha
stos
popf
cmp
jge
test
loop
icebp
adc
lret
shlb
pop
scas
push
add
in
test
cmc
jno
data16
jb
pop
push
or
and
cltd
inc
mov
dec
or
adc
mov
push
xorb
insb
pop
dec
push
in
mov
inc
or
cmp
cmp
xchg
add
insl
inc
dec
in
xlat
lret
mov
aam
roll
das
ja
push
pop
lock
rcrl
xchg
inc
sahf
or
lret
jle
cmc
das
out
pop
repz
and
fs
fiadds
sbbl
int3
test
mov
push
fstpt
inc
test
xchg
add
aad
mov
repnz
pop
push
lret
dec
xchg
sarl
repz
lock
xchg
call
test
cmp
cld
rcr
dec
ljmp
or
xlat
jns
mov
xchg
mov
loop
mov
sub
cmp
jb
pop
std
jmp
imul
mov
mov
cltd
mov
mov
fmuls
stc
in
popa
rcrb
xchg
mov
jns
mov
mov
test
lret
test
jg
nop
xchg
push
xor
ret
mov
rorb
scas
dec
xchg
gs
push
hlt
pop
pop
je
xor
je
cmpsl
into
and
inc
mov
gs
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
cmpsb
ss
mov
movlps
scas
es
lock
or
aam
testb
jnp
hlt
dec
mov
mov
xor
push
dec
fistl
lcall
andb
mov
mov
lds
cwtl
pusha
iret
mov
sbb
pusha
jmp
test
ror
ljmp
mov
xchg
iret
fs
aad
and
les
pop
dec
or
xor
popa
cli
call
and
or
sub
insl
cmp
mov
xchg
out
push
xor
decb
push
pusha
mov
ret
fbstp
hlt
sbb
or
call
outsl
xchg
fmull
cltd
addr16
shl
loop
popf
aaa
lcall
xor
mov
mulb
mov
mov
shll
lods
pusha
movl
adc
ja
fistpll
js
cmc
add
jnp
mov
fdivrl
xchg
jle
xchg
jg
jns
push
cmc
lea
cs
dec
shrl
in
sbb
rorb
in
add
pusha
gs
push
je
aas
pop
sbb
sub
pop
nop
dec
sti
stos
cs
movsl
add
outsb
mov
pop
dec
cmpsb
mov
push
jmp
shlb
jnp
into
dec
repz
insb
subl
cmpb
jge
into
imul
dec
jae
add
and
push
call
cltd
pusha
push
xor
mov
mov
mov
mov
shll
jge
std
lretw
xchg
sub
iret
inc
mov
fwait
sub
push
jns
dec
jecxz
in
rcr
cld
scas
out
sbb
sbb
inc
insl
es
loopne
and
clc
outsl
jecxz
dec
inc
jb
rorb
pop
sub
cmp
pop
sbb
sbb
inc
leave
fimuls
lret
aaa
adc
mov
mov
jbe
enter
or
mov
and
incl
jns
sahf
test
or
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
ret
jb
adc
adc
mov
xor
sarl
cmp
movsl
or
out
and
sbb
mov
sbb
sub
inc
in
arpl
or
push
pop
xchg
daa
das
mov
jb
fldln2
jecxz
lret
aad
mov
mov
js
inc
push
jg
lcall
mov
adc
inc
xchg
jns
push
cmp
and
mov
pop
inc
xor
mov
jmp
imulb
std
fidivl
xchg
jo
push
insl
mov
pop
mov
xchg
pushf
xchg
xchg
pop
pop
popa
adc
inc
ljmp
test
and
repnz
inc
mov
loopne
in
js
xor
pusha
add
mov
scas
rcrb
mull
xchg
jo
or
ficomps
ljmp
jne
pop
fs
xor
cli
push
sbb
sub
into
out
dec
dec
pop
fcmovnbe
shrb
cmpb
sahf
xchg
lret
test
mov
adc
lret
mov
jno
mov
jl
sahf
mov
lret
mov
int3
fidivs
aam
rcll
xor
inc
fsubrs
xchg
inc
add
fsub
sub
xor
mov
pop
sbb
push
xor
cs
mov
sarb
stc
lahf
jo
in
sbb
adc
xchg
pusha
fcmove
adc
cmpsl
xor
shlw
js
aaa
movsl
imul
int3
add
push
jae
jle
aaa
addr16
addl
fbstp
mov
popl
inc
fcomip
adc
lahf
clc
iret
sbb
pop
sub
int
add
imul
jmp
add
jo
or
mov
mov
pushf
or
pop
les
push
or
fsts
pop
push
sub
cmp
xchg
push
nop
repnz
lods
mov
std
outsb
in
pop
jne
inc
inc
cmpl
fucomip
fisubrl
iret
movsb
roll
sbb
inc
aad
sbb
imull
shlb
cmpl
mov
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
inc
out
jle
insb
adc
adc
jle
ss
lahf
push
or
arpl
lods
icebp
ret
mov
mov
sbb
cli
lock
loope
or
cmpsb
test
in
mov
pop
xor
sbb
xor
repnz
loope
fs
in
es
sub
mov
xlat
sbbb
sahf
pop
outsl
clc
pop
scas
ja
int
imul
mov
sbb
sbb
leave
lds
decl
dec
pop
jg
dec
add
jbe
sub
dec
sbb
lods
sbbb
insl
push
jle
jnp
in
icebp
mov
adc
outsl
insl
les
dec
stos
test
pop
out
ds
xchg
mov
shrl
xor
cmp
out
cmc
out
mov
cmp
js
test
in
shr
mov
adc
sarb
popa
and
jne
test
sub
or
js
scas
mov
jno
imul
das
sbb
outsl
das
pop
jl
dec
ja
lea
inc
jmpw
xlat
pushl
push
cmp
lcall
dec
mov
cmp
add
push
mov
xchg
gs
add
mov
push
xor
mov
adcl
aaa
js
int3
pusha
aaa
or
out
ds
cmp
aam
and
jo
or
sub
cmp
or
sub
sub
jle
add
sub
pop
cmp
nop
in
cltd
add
out
mov
fs
pop
pop
mov
jbe
sbb
subl
imull
loop
jecxz
add
rcrl
xchg
mov
mov
xchg
pop
mov
dec
xor
stos
sub
or
jge
paddw
add
mov
jbe
xchg
sbb
fsubrl
or
movsb
jl
pop
push
dec
cmp
mov
cmc
div
rcl
in
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
xchg
push
mov
fldcw
adc
movlps
lock
lcall
or
jo
insl
sar
push
mov
jle
mov
pop
arpl
sub
mov
jno
inc
adc
repnz
jmp
insb
sbb
bound
lods
or
shrl
xchg
out
add
push
mov
xor
jecxz
and
adc
lret
add
outsl
push
dec
in
pop
adc
mov
mov
jmp
icebp
test
xor
dec
test
cmpsl
jl
test
push
xchg
repz
push
inc
or
jmp
mov
popf
pop
or
xor
add
pop
mov
outsl
outsb
sub
mov
enter
or
xchg
sqrtps
bound
inc
and
adc
sub
fdivrs
dec
mov
ret
dec
sub
pusha
loopne
outsb
xchg
loope
repnz
xchg
add
int3
ss
repz
psadbw
in
dec
cltd
ret
push
jmp
sbbb
fdivl
jp
shlb
fldl
mov
jmp
sahf
push
sub
aas
fst
pop
cmp
fisubl
sti
xchg
sub
fwait
mov
pop
cmpsl
push
mov
dec
mov
incl
fcomi
sbb
les
into
shll
sarl
sbb
div
sub
sbb
adc
cs
or
mov
fistpll
sarb
cli
test
insl
leave
insl
lcall
daa
lds
call
aam
pushf
mov
movsl
imul
negb
cmp
test
sahf
lcall
rclb
sbb
imul
xchg
push
xor
jecxz
pop
dec
out
mov
push
fisttps
lret
cmp
or
test
dec
mov
sahf
mov
pop
fidivrs
jo
sbb
mov
int3
push
push
and
das
push
push
daa
out
pop
mov
div
push
sarl
lret
nop
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
dec
mov
enter
add
ds
fwait
repz
mov
pusha
enter
in
sbb
mov
mov
inc
pop
nop
push
stc
push
xor
pop
mov
or
inc
out
xor
sbb
add
push
dec
mov
sbb
ss
pop
add
stos
sbb
lret
or
clc
xor
sbb
xchg
push
or
dec
fcomi
das
and
push
sbb
fsubs
enter
fcoms
scas
pop
out
les
xchg
out
mov
inc
ret
addr16
inc
sub
and
mov
adc
pop
sub
add
xorl
shlb
push
sub
ror
jl
scas
dec
nop
mov
mov
dec
xchg
ret
or
gs
test
movsb
addr16
jl
dec
loopne
mov
adc
shll
lods
sbb
pusha
and
iret
repnz
lds
push
pop
insl
sub
lds
mov
sub
std
dec
push
inc
fiaddl
pop
lds
lock
mov
ja
push
fs
pop
out
cmp
rorl
ret
mov
cmp
out
mov
nop
in
arpl
lcall
lret
and
xor
xor
icebp
ljmp
push
adc
aam
mov
fs
cmpsb
hlt
sub
cmc
sar
jae
jno
push
rcl
test
xchg
fs
ja
popa
sbb
scas
mov
mov
xorl
xchg
pop
or
inc
cld
repz
adc
jle
pop
sub
stos
or
rclb
xchg
gs
call
aas
add
out
push
cmp
dec
rcl
aas
mov
cmp
nop
xorl
scas
jmp
pop
add
shll
std
push
adc
pop
repnz
inc
and
mov
enter
ss
ss
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
pop
sbb
test
adc
pop
andb
push
dec
pusha
mov
rcrb
push
iret
sbbl
jl
ljmp
enter
add
cltd
adc
test
sub
push
loope
xor
mov
lds
adc
hlt
stos
mov
testb
out
js
popf
xchg
adc
mov
and
sub
pop
or
in
jb
adc
imul
popa
mov
into
je
movsb
into
daa
sbb
and
adc
pusha
movsb
pop
cwtl
dec
lock
repnz
test
sub
push
and
movsb
adc
jmp
mov
stos
push
hlt
in
xchg
out
xchg
push
out
movsb
jl
dec
xor
js
pop
pop
sbb
mov
sbb
jne
outsl
fidivrl
aaa
pop
cmpb
or
ja
es
or
dec
mov
xlat
sub
dec
leave
pop
inc
push
dec
xor
mov
les
test
adc
sub
addl
jno
inc
push
cmp
push
add
fsubs
adc
add
rcl
push
pop
mov
repnz
xchg
popf
jb
fdivl
repnz
arpl
lock
xor
cld
xchg
addr16
pusha
aam
xchg
fistpll
movsl
pop
fsubrp
jne
push
imul
hlt
sub
cmp
test
in
push
add
pop
sub
inc
jns
cmpsl
into
in
cld
mov
sbb
ret
and
mov
add
sbb
cmpsl
enter
in
pop
dec
sbb
js
jle
and
rolb
shlb
mov
dec
lds
jne
push
scas
scas
movsb
pop
pop
or
fs
fs
adc
int3
dec
mov
or
leave
cmpsb
in
arpl
in
es
lock
test
sbb
pop
inc
xor
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
loope
inc
stos
cmc
pop
adc
adc
je
sbb
fscale
fldl
jno
lret
in
inc
push
or
lds
aaa
mov
jo
mov
inc
in
and
ror
lods
mov
das
pushl
lds
sub
lret
cmp
mov
test
gs
xor
push
mov
push
push
idivl
adc
cmp
cs
sub
nop
dec
enter
out
jns
or
cs
and
imul
data16
cmp
cli
lret
in
lahf
sub
push
dec
sub
push
shll
jb
jg,pn
add
testb
push
mov
inc
pop
jo
sub
in
movsl
cmp
test
cmc
lea
in
and
imul
mov
lock
hlt
mov
cmpsl
mov
mov
add
push
int3
notb
xchg
callw
mov
and
xor
mov
out
popa
stos
mov
decb
inc
enter
push
dec
dec
add
adc
ds
scas
and
ret
adc
push
divb
inc
std
in
adc
or
push
sahf
mov
push
jae
pop
or
cmc
cli
pop
or
aas
sarl
inc
jmp
fbstp
inc
scas
sbb
iret
in
jnp
add
movsl
loope
mov
sbb
adc
dec
add
daa
push
jae
lds
mov
pusha
inc
mov
jmp
popl
fnstsw
jle
int3
enter
gs
xchg
dec
cltd
or
outsb
cmp
cmp
lcall
mov
jge
stos
stos
xor
push
stos
mov
add
mov
subl
rorb
leave
rol
jl
add
jge
xchg
cmp
call
mul
push
and
imul
mov
pop
and
ret
push
sub
xchg
jecxz
rclb
push
jbe
inc
jle
and
inc
aaa
popf
out
clc
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
outsl
dec
test
stos
pop
adc
adc
mov
cmp
pop
adc
cld
mov
or
sub
inc
fisttps
add
mov
nop
mov
mov
int
loopne
cmp
sub
psraw
push
xor
sub
mov
cmp
jno
mov
xchg
cs
dec
rclb
push
flds
adc
mov
mov
mov
pop
imul
add
cmpsl
cmp
lret
cmp
enter
clc
inc
lahf
stos
cmc
xchg
or
mov
sbb
and
clc
int
dec
cmp
pop
sub
or
testb
mov
adc
hlt
xchg
stos
maskmovq
testl
movsb
sub
adc
add
fadd
enter
mov
and
xchg
imul
add
jle
sub
jb
lahf
adc
mov
stos
cltd
repz
jmp
push
jb
mov
sub
out
lock
add
fs
jmp
jb
add
xchg
dec
dec
push
scas
repnz
aad
sarb
pop
xchg
outsb
repz
mov
dec
add
sbb
mov
sub
and
out
lods
out
fdivp
mov
and
sub
xor
pop
push
js
mov
sub
cwtl
dec
lods
lods
pop
shlb
pop
adc
dec
inc
sarb
push
jmp
das
lcall
jmp
es
pop
add
pop
out
mov
or
or
fdivr
push
outsl
into
add
pusha
xlat
mov
jmp
jae
xchg
add
jns
out
mov
jno
popf
fbstp
pushf
sub
xor
sub
lds
loope
jnp
aam
testl
fnstenv
pop
inc
inc
call
fidivl
mov
gs
dec
xchg
mov
shll
sbbl
lret
add
lcall
out
jmp
je
add
pusha
sbb
popa
scas
lea
xchg
mov
jb
nop
pushl
xor
insl
cwtl
cmpl
add
xlat
pop
inc
xchg
and
inc
xorl
and
lock
pusha
jnp
in
sub
adc
lcall
mov
xor
adc
test
xor
out
mov
jnp
mov
call
jg
sub
push
mov
dec
mov
ds
inc
mov
repz
mov
call
pusha
shll
sbb
push
nop
les
rol
loopne
leave
clc
pop
xchg
mov
dec
jle
and
adc
mov
push
icebp
mov
inc
inc
xor
mov
push
stc
cmovge
dec
xchg
cld
inc
insl
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
js
push
adc
adc
dec
ss
lds
loope
scas
leave
or
xchg
xor
icebp
mov
test
clc
pop
aas
outsb
cli
cmc
data16
call
push
cmc
mov
mov
daa
mov
mov
mov
stos
scas
mov
jb
flds
and
mov
and
shl
leave
lret
loop
sbb
add
rorb
mov
push
aaa
cmp
or
pop
test
cmp
add
icebp
stos
pop
les
adc
or
inc
clc
push
mov
adc
jno
add
sub
jnp
ret
ret
sub
add
bound
add
xor
sub
test
jl
dec
and
rcrb
mov
pop
gs
mov
out
mov
mov
pop
scas
movsl
in
lds
adc
out
add
mov
dec
sub
and
jge
out
cmp
bound
dec
jmp
outsb
pusha
ret
adc
cmpsb
fidivs
pop
adc
jns
and
repz
jmp
or
jmp
or
fistpll
loop
shrb
stc
sbb
xor
loopne
sbb
mov
fsts
test
inc
scas
arpl
inc
sbb
into
mov
andb
xor
outsb
loopne
mov
and
sub
outsl
adc
int
pop
jle
out
adcb
ret
push
cmp
aam
push
negb
ds
imul
push
pushf
popa
insb
shr
pop
loopne
out
ljmp
jnp
mov
jp
cmp
mov
xor
adc
movsl
inc
xor
mov
xor
inc
lock
in
dec
aad
jne
mov
inc
push
pop
subb
pop
mov
pop
jle
and
xchg
adc
xchg
rorl
or
xor
stos
in
lret
pop
scas
lahf
js
aas
pop
sahf
jmp
sub
add
xchg
out
jmp
mov
jne
and
leave
dec
ja
pop
sbb
inc
fcmovnb
into
lock
xor
aam
outsb
out
mov
sti
aad
bound
in
cmpb
dec
push
xchg
icebp
cwtl
movsl
add
iret
in
in
loopne
dec
sbb
pop
mov
and
xlat
inc
mov
xor
push
fsubl
adc
mov
xchg
pop
test
fistps
shl
fildll
xchg
mov
nop
push
xchg
insl
push
or
jbe
mov
fs
jecxz
jle
adc
pusha
cmpsl
jg
das
stos
popf
mov
cmp
iret
sbb
outsb
adc
fadd
iret
inc
repz
adc
arpl
pop
mov
dec
sub
or
and
jmp
fnstsw
sub
cmp
gs
xchg
adc
pop
mov
mov
add
pop
jp
xchg
dec
and
mov
or
gs
xor
testl
fstpl
iret
and
pop
pop
push
sarl
xchg
dec
ret
mov
fistpl
xorl
and
mov
sahf
adc
push
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
