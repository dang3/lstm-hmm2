push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
mov
sbb
jo
jo
rcl
aad
ror
rol
pop
push
add
xor
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
imul
jns
jae
repz
cld
aam
cmc
xor
ds
fimull
mov
xchg
jle
out
arpl
pop
mov
dec
stos
add
hlt
xchg
xchg
jge
popa
sub
in
cmpb
or
iret
xor
mov
jno
mov
mov
sahf
lods
jae
sub
sub
rorl
xchg
mov
dec
out
sbb
leave
add
mov
xchg
sti
add
out
mov
add
icebp
lea
repnz
sub
jmp
adc
inc
pop
fbld
dec
cmp
and
out
add
daa
dec
lock
mov
and
repnz
dec
mov
and
pop
push
leave
push
and
pop
sub
jnp
icebp
jo
outsb
adc
out
test
sbb
jae
cmpsl
inc
jmp
repz
push
test
sub
ja
pop
push
rorl
dec
or
pop
sbb
call
aam
dec
sbb
ljmp
add
jg
dec
mov
cmpsb
cmp
arpl
xchg
in
sti
repz
cmp
cwtl
or
push
inc
inc
repz
incl
and
fwait
shll
cld
jmp
clc
icebp
mov
icebp
ficompl
adc
jle
jo
jle
jo
popf
movsb
stos
adc
es
pop
outsl
test
test
sbb
jecxz
or
rorl
push
out
or
stos
js
cli
pop
ret
push
sahf
imul
popa
sahf
and
mov
add
roll
aam
pop
in
pop
mov
pushf
dec
jno
xorl
pop
les
mov
scas
ret
mov
and
mov
mov
outsb
addr16
and
mov
inc
pop
mov
stc
or
int
mov
mov
inc
ja
ret
pop
pop
adc
mov
test
inc
mov
ret
lock
push
cmp
aad
pushf
jo
or
out
fstps
inc
push
mov
or
mov
add
pop
insb
cmp
add
iret
push
sub
stos
fcomps
adc
movsb
add
xor
sub
test
stos
es
lret
or
ds
mov
lods
add
mov
jmp
repnz
fstps
adc
jp
andb
jb
fidivrl
pop
inc
lds
xchg
sahf
fucomip
sub
sbb
pushf
test
bound
or
out
loop
xchg
sbb
mov
ja
outsl
cmp
xor
mov
shrb
inc
mov
iret
pop
cmp
mov
in
aam
enter
xchg
cmp
xor
lods
sub
mov
pop
and
mov
xor
pop
pop
lods
dec
ret
xor
mov
mov
cmc
add
cmc
mov
push
sub
jno
xorb
sbb
push
test
es
xchg
sbb
pop
insl
xlat
and
enter
ficomps
dec
addb
pop
mov
inc
rorb
fmuls
call
add
lods
dec
lods
imul
and
jo
jo
jo
jo
push
or
or
insl
or
fistl
mov
mov
fists
inc
adc
in
mov
pop
aad
dec
out
adc
cld
in
fisubl
mov
push
fimuls
repnz
push
add
test
int3
mov
fmull
stos
sbb
popa
add
adc
pop
dec
out
mov
out
movsb
out
push
out
adc
data16
repz
negl
pop
and
sbb
outsl
into
sbb
xor
stc
out
test
lods
push
movsl
pop
or
sti
xchg
js
test
xor
roll
insb
mov
mov
sbb
or
push
mov
cmp
pop
adc
gs
lea
sahf
in
pusha
dec
xchg
aam
push
scas
sbb
enter
sbb
sbb
xchg
sbb
push
jne
lcall
push
fs
shlb
fstps
movsl
addr16
test
dec
push
fwait
test
or
insb
adc
jg
adc
pop
fscale
sub
sbb
leave
inc
dec
adc
dec
cmpsl
jbe
aam
outsl
rcl
idiv
push
xlat
push
gs
popa
or
repz
lods
xchg
mov
and
xchg
stos
imul
jmp
lock
adc
sub
lods
sbb
cmpsl
jns
scas
jmp
add
scas
outsl
mov
cmp
and
mov
jbe
pop
imul
stc
cwtl
imul
push
cs
push
inc
scas
mov
divl
mov
mov
push
jns
xor
mov
cltd
mov
add
push
dec
ret
lret
hlt
das
jno
in
ret
std
pop
or
cmpsl
mov
adcl
xchg
scas
out
pushf
cs
push
adc
or
xchg
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
call
jo
jo
jo
std
mov
xchg
sbb
and
sbb
out
fcmovnb
inc
cltd
sti
pop
add
gs
sub
lds
aam
aaa
jbe
ja
push
subl
aam
outsl
adc
outsl
mov
sub
adc
xor
push
jae
ds
xchg
cmp
push
mov
jge
sub
lods
adc
outsb
and
cltd
mov
imull
adc
push
mov
xchg
or
mov
dec
xchg
clc
test
dec
and
jecxz
mov
mov
xchg
test
fsubrp
hlt
push
je
mov
bound
mov
loopne
xchg
sbb
cmpsl
inc
test
adc
mov
stos
outsl
mov
pop
dec
cmp
movsb
mov
cmp
pop
jle
je
pusha
sub
push
andl
outsl
je
iret
jbe
push
and
jge
enter
out
aaa
jmp
lcall
fdivrl
sbb
push
jbe
shrb
xchg
add
fisubl
mov
ja
jmp
mov
movsl
inc
sahf
mov
pusha
lea
pop
inc
call
pop
sub
call
test
cltd
in
adc
dec
les
and
mov
mov
pop
gs
cmc
rcrb
repnz
sbb
les
int
fildll
add
gs
xor
notl
push
out
push
push
sub
mov
mov
in
popf
enter
add
push
push
out
ds
push
xchg
clc
sub
sbb
sub
mov
inc
xchg
loop
adc
mov
sub
xor
sub
push
jge
outsl
mov
ja
pop
sarb
iret
daa
test
stc
dec
cmc
lahf
sbb
inc
mov
or
pop
clc
pop
push
insl
dec
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
fs
jo
jo
jo
jo
sahf
cmp
cli
movsb
push
shll
push
dec
or
xor
shl
jb
icebp
or
fildl
stos
pop
lock
mov
imul
les
mov
stos
jbe
lock
push
adc
or
xor
push
das
sbb
jp
cltd
xchg
xchg
rcll
into
or
xchg
pop
out
or
sub
stos
push
add
loopne
icebp
jb
fidivrs
mov
inc
mulb
pop
mov
mov
and
insl
adc
ficoml
mov
inc
push
dec
lcall
je
lret
insl
xorl
sub
pop
jae
adc
sub
push
adc
cmp
movb
mov
push
xlat
add
mov
pop
lock
mov
lret
or
rcll
pop
jmp
sahf
je
sub
sahf
adc
jo
mov
aam
mov
and
loopne
or
into
ret
mov
push
out
dec
jne
sbb
inc
out
in
pop
into
add
dec
dec
mov
nop
jns
xor
mov
data16
test
addr16
test
pop
pop
iret
adc
push
or
lods
pop
into
sub
xor
cltd
add
ud0
cmc
push
addr16
addr16
loopne
fwait
les
and
insb
iret
xchg
sbb
mov
loop
mov
imulb
jmp
repnz
stos
xlat
inc
out
jne
cmp
movsb
lahf
xchg
cmp
mov
mov
xchg
jbe
dec
fiaddl
sbb
push
cs
jge
lret
icebp
andb
loopne
xchg
pop
mov
jg
mov
sub
mov
inc
lods
fdivr
push
jecxz
mov
xor
sub
push
jb
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
push
dec
jo
jo
jo
jo
jno
inc
pop
es
test
push
inc
test
fists
inc
mov
outsb
pusha
pop
xlat
mov
frstor
stos
pop
add
xor
cs
push
cmp
jno
xchg
icebp
lds
in
sbb
push
roll
jns
mov
daa
dec
lret
mov
and
data16
xchg
mov
mul
out
pop
xchg
out
leave
in
das
cld
jmp
jl
mov
into
adc
push
add
pusha
xchg
aaa
jl
xor
lods
push
data16
xchg
pop
cmp
adc
dec
xchg
in
push
mov
nop
jo
faddl
sti
mov
punpckhwd
das
xor
hlt
stos
sahf
mov
andb
fcoms
inc
or
pop
inc
mov
lods
lea
out
adc
mov
test
adc
or
gs
mull
ret
adc
loop
adc
cli
and
mov
mov
out
jp
aaa
and
push
mov
je
sysenter
adc
lret
mov
aam
cmpsb
pop
pop
sahf
lock
sbb
jmp
xchg
xchg
sub
clc
xchg
mov
ret
xchg
scas
cld
test
mov
test
cmpsb
xchg
xchg
fcomps
mov
inc
pop
jbe
pop
out
jl
adc
cmc
xor
adc
cmp
scas
adc
sarl
sub
dec
je
stos
inc
mov
rorb
ljmp
sahf
lock
or
and
dec
outsb
sbbl
inc
dec
xor
sbb
lods
fdiv
mov
shll
pusha
and
ds
mov
jp
icebp
xchg
adc
mov
ret
jno
or
adc
repnz
push
xchg
cmp
mov
mov
jnp
jg
mov
adcb
jo
adc
pop
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
sub
ja
jo
jo
jo
jo
lret
leave
xchg
call
mov
or
rcrl
imul
imul
pop
lcall
lds
and
jp
es
movsb
leave
loopne
movsb
ficoml
test
mov
out
lret
mov
testb
dec
rol
fisubl
hlt
cmc
pusha
xor
cmp
pop
add
jbe
xchg
xor
push
adc
loop
les
adc
lods
adc
sbb
and
lcall
hlt
out
fsin
shrl
xchg
inc
jb
dec
adc
mov
stc
sbb
push
jns
add
loop
xchg
or
repz
adc
add
pop
imul
lock
shll
fs
enter
and
jb
jnp
stos
sub
int3
outsl
xor
xchg
push
lcall
pop
xchg
dec
pop
xchg
pop
cli
pop
adc
cmp
sub
pop
pop
pop
add
loope
inc
call
nop
dec
push
aaa
push
dec
adc
xchg
or
pop
out
inc
xor
mov
mov
pushf
fidivrl
push
mov
push
or
add
push
ss
cmpsb
cmpsb
jo
sbb
bound
rcrl
int
call
movb
repnz
pop
cmp
shlb
in
mov
jae
sbb
outsl
add
dec
cwtl
xor
mov
mov
loope
add
subb
pop
xchg
test
xor
jp
add
call
psubsw
xchg
decb
rolb
pop
adc
add
sub
lret
push
push
push
lcall
xchg
mov
push
inc
rclb
lea
add
in
rcrl
arpl
negl
test
das
or
jbe
mov
sbb
xor
and
cmp
into
or
cmp
add
add
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
fstps
jo
jo
jo
jo
in
sub
popf
aad
or
cwtl
sub
notl
pusha
xor
cmp
jge
push
es
pop
mov
jecxz
in
cs
jg
std
mov
sbb
repnz
mov
jo
aam
mov
jp
add
and
sub
jp
mov
ds
add
inc
jae
cmpl
mov
sbb
mov
lcall
or
xchg
addr16
lahf
aas
mov
ficoms
add
xchg
insl
adc
je
shll
push
push
test
pop
pusha
pop
dec
cmp
fmuls
cmpsb
int
xchg
sbb
mov
movsb
iret
push
cmpsb
shll
sbb
pusha
leave
jge
test
jo
bound
out
jge
addr16
in
jge
inc
pop
xor
sbb
cwtl
sub
mov
cmc
cmp
add
fldl
pop
rcl
sahf
mov
push
scas
or
sahf
mov
jb
dec
pushf
and
mov
roll
pop
jnp
stos
cmp
test
xchg
rorb
scas
mov
mov
hlt
mov
xchg
pop
test
das
jno
mov
dec
jg
jmp
cwtl
mov
lds
gs
icebp
js
jle
push
in
rorb
pop
pop
mov
pop
push
ds
mov
movsl
aad
aam
addr16
cmp
test
pop
adcb
mov
lods
jae
fiaddl
data16
aas
jp
outsl
aam
in
jecxz
and
ljmp
pop
sub
mov
insb
push
ds
cmp
lahf
cmp
mov
xor
inc
int
xor
sbb
dec
mov
aaa
sub
movsl
fcomi
jbe
pop
sbb
push
dec
or
outsl
inc
ret
shrb
sbb
and
push
andl
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
repz
jo
jo
jo
jns
ja
cwtl
add
aam
loope
cmp
mov
fnstcw
mov
or
and
jmp
ret
xchg
inc
pop
xchg
pop
stos
mov
dec
sbb
dec
int3
mov
mov
pop
insl
mov
jae
or
pop
jbe
je
int
dec
loopne
hlt
sub
aaa
das
je
es
out
rorb
push
mov
ret
inc
mov
sbb
lahf
pop
push
rol
xchg
fs
adc
push
mov
movsl
scas
popf
inc
lods
fcompl
popa
push
lea
cli
jl
ret
sub
divb
lcall
add
and
cmp
and
xchg
xchg
pop
inc
insb
push
cmc
cld
jae
arpl
pop
je
in
stos
scas
sbb
out
push
or
mov
repz
out
sbb
push
sub
lret
dec
aad
jns
in
jl
gs
flds
cmp
movlps
jbe
push
popf
sbb
lods
scas
repz
jne
leave
inc
cmp
xchg
daa
dec
les
cmpsb
scas
dec
negb
std
shrl
out
add
cmc
fwait
shll
jo
mov
jle
jp
or
adc
dec
jb
clc
jecxz
xchg
add
frstor
sub
push
push
jno
pop
mov
sbb
fimuls
lea
and
pop
fisubs
pop
xlat
mov
sbb
pop
int3
arpl
in
xor
inc
pop
sarl
fdivl
xchg
push
dec
pop
sahf
mov
lds
es
pop
cmpsb
out
gs
push
sar
jl
pushf
jnp
mov
push
jp
sub
cli
pop
iret
xchg
push
stos
popa
cs
mov
cmp
shlb
mov
stc
pop
inc
xor
xor
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
aaa
fs
lahf
jg
test
leave
sub
mov
decb
dec
dec
cld
jmp
cmp
inc
in
xor
or
movsl
notb
sti
mov
jp
mov
xchg
jmp
iret
dec
and
pop
das
push
mov
test
jae
sarl
mov
fwait
sub
sub
repz
pop
test
xorl
pop
call
pop
rcll
sbb
iret
cmp
mov
push
mov
xchg
std
cmpsl
icebp
xor
int
ret
mov
pop
inc
jmp
xchg
ret
jb
aas
cmp
std
sub
addr16
test
cmp
shrl
stos
or
push
loope
addl
clc
fildl
mov
dec
push
mov
xchg
inc
mov
cli
gs
mov
iret
or
dec
push
shll
daa
jle
sahf
sti
jbe
sbb
pop
push
movb
sarb
stc
out
mov
aaa
rclb
cli
aam
and
call
sub
fistpll
mov
jno
hlt
add
es
lds
adc
aam
and
mov
inc
cli
add
cmp
lock
mov
js
imul
pop
lcall
ret
mov
adc
bound
push
rolb
jmp
insb
shll
test
insl
xchg
or
shll
push
mov
pop
loope
dec
or
or
add
pop
adc
pop
ret
or
mov
pop
frstor
add
or
push
fnsave
or
movsl
push
pop
mov
or
jmp
mov
dec
mov
mov
cmpsb
or
sbb
pop
mov
add
nop
push
inc
enter
ds
mulb
dec
fildll
mov
das
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
and
jo
lcall
fmull
mov
mov
testb
scas
fldcw
cltd
dec
repz
xor
leave
stos
rcrl
jo
in
mov
jns
xlat
pop
or
mov
aam
mov
inc
add
mov
imul
cli
adc
mov
aam
addr16
loopne
add
cld
push
xchg
mov
rclb
in
push
pop
sbb
sahf
leave
jmp
inc
jle
xchg
hlt
int
imul
xchg
mov
addl
adc
jmp
sbb
mov
lret
insb
arpl
push
pop
hlt
adcl
mov
out
adc
pop
fs
icebp
and
mov
jne
cmp
mov
xor
mov
out
mov
xchg
cld
addb
sti
les
and
push
cmp
and
add
in
loope
sbb
sahf
xor
mov
ret
js
subb
je
dec
jnp
jle
shll
aas
pop
jb
xchg
fs
xchg
dec
test
je
pop
cwtl
je
loop
push
sub
mov
mov
and
jb
ss
xchg
daa
sub
jmp
jmp
or
sbb
mov
mov
pop
loopne
adc
add
jae
inc
loopne
lret
cmp
sti
rep
dec
ss
or
das
dec
push
imul
cld
loopne
jno
cmpsb
or
inc
repz
push
fnsave
jmp
xchg
sbb
inc
and
xchg
pop
xor
add
xchg
jbe
les
inc
into
adc
idivl
xor
sarb
imul
popf
jno
hlt
pop
sub
xor
mov
shll
bound
xchg
xchg
sub
rolb
shlb
cmpsl
add
pop
addl
mov
scas
aam
xchg
xor
dec
inc
lahf
push
je
xchg
add
dec
jb
jecxz
sbb
movl
add
dec
mov
add
dec
je
inc
nop
out
into
dec
cmc
fldl
stos
or
test
das
add
xchg
mov
cwtl
or
mov
loope
mov
stos
sub
sbb
test
fiaddl
or
js
cmp
cmp
cld
pop
je
sbb
dec
xchg
jge
inc
or
decb
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
add
mov
or
mov
jecxz
xchg
aad
mov
cmc
inc
cli
mov
or
ljmp
nop
xor
cltd
pop
lret
pop
inc
mov
add
adc
adc
clc
subl
std
test
loop
ret
rcrb
mov
sbb
mov
mov
dec
dec
sub
int3
outsb
jecxz
hlt
jo
in
cltd
jne
js
aaa
rclb
jmp
dec
inc
in
push
mov
aad
sbb
or
jp
mov
cmp
pop
lret
iret
cmp
imul
mov
fstpt
mov
xor
cmp
iret
xchg
adc
inc
pop
inc
fstl
jecxz
mov
xchg
data16
jnp
sahf
jno
inc
push
sub
stos
pop
lahf
or
adcb
mov
addr16
sub
fbstp
jb
push
xor
lea
bound
cmp
dec
rol
jg
dec
mov
enter
dec
subl
data16
dec
sbbb
xor
mov
pop
in
push
jns
ds
fcmovu
fwait
lods
mov
mov
bound
data16
out
dec
add
sub
or
adc
das
cmp
ret
in
mov
xchg
add
lods
or
cs
imul
ret
add
jb
mov
daa
xchg
adc
xchg
jp
out
adc
xchg
jp
jae,pn
or
push
loop
cmp
mov
mov
lock
mov
sub
jo
ja
cmpsb
cld
jbe
sbb
push
stc
jae
stos
jns
cmp
mov
xor
call
gs
mov
fildl
test
jo
leave
stos
pop
dec
aam
mov
mov
mov
hlt
lea
inc
movsb
jp
gs
loopne
lret
arpl
mov
jge
fnstcw
loopne
push
cld
mov
push
sub
or
jg
push
cmp
js
push
out
add
jge
pop
les
mov
movsl
push
shr
ds
stos
mov
fmuls
fxch
push
add
popa
push
cmpsl
add
push
es
and
inc
mov
adc
in
and
cmpsl
fsubrs
lahf
adc
xchg
movsb
mov
sbb
jg
testl
stos
ds
sbb
neg
cmp
sub
test
stc
loope
ror
mov
jns
hlt
nop
or
mov
test
ja
jo
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
sti
shll
mov
dec
jb
pop
push
lcall
xchg
or
repz
loopne
das
push
ret
cmp
shll
je
cmp
mov
rcr
xor
rolb
sub
pop
push
fdivs
jge
icebp
and
cld
sub
mov
stc
mov
out
repnz
arpl
popf
push
shlb
cwtl
fs
sbb
xchg
push
lret
or
fsubrs
or
int3
test
mov
subl
sbb
fists
jmp
mov
mov
mov
sbb
and
xchg
scas
add
adc
js
and
lret
and
scas
popf
dec
push
aas
cltd
inc
add
jle
aam
push
popf
sub
test
cmp
push
and
add
sbb
out
subl
in
std
lret
ja
inc
xchg
jno
adc
sub
xor
ds
in
call
or
inc
mov
fwait
movsb
es
shr
rorb
sbb
and
jp
add
mov
cmp
cmp
xor
inc
ret
sub
aad
iret
lds
push
popf
push
jl
lret
jnp
negb
xor
add
popf
in
and
sbbb
imul
insl
jo
scas
cmpsl
cwtl
mov
mov
sub
testb
mov
xchg
aad
clc
stos
push
cwtl
jg
fwait
ds
fucom
pop
push
adcb
sub
cltd
mov
adc
push
dec
repnz
mov
pop
push
mov
xchg
test
xchg
push
inc
popf
js
fcoms
xchg
and
out
je
mov
push
jmp
xor
mov
push
addl
pop
inc
mov
enter
add
jno
mov
ret
addr16
loopne
fwait
adc
xor
push
mov
fsubs
jmp
cmp
mov
test
push
pushf
ret
cld
into
xlat
test
pop
scas
ret
cmc
xor
shll
or
sahf
adc
pushf
aaa
insl
jno
xchg
push
dec
pop
loop
bound
test
and
xchg
sbb
movsl
out
lret
jbe
test
mov
sub
xchg
lcall
inc
orb
push
mov
lds
cmp
fwait
push
inc
frstor
sub
sub
sbb
cmp
adc
icebp
push
mov
jnp
nop
orl
or
mov
dec
push
xor
out
ret
hlt
andl
lods
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
ret
cmp
adc
jo
jle
jo
mov
sti
inc
hlt
mov
xor
data16
or
add
sbb
dec
daa
cwtl
shl
jmp
push
lahf
imul
add
mov
lret
pop
loopne
aas
mov
icebp
cmc
cmpsb
jne
sbb
fistpll
xor
fisubl
cmp
cmp
dec
dec
loop
cmpsb
mov
cwtl
cld
addr16
xchg
push
sbb
push
mov
test
adc
dec
call
jmp
xlat
int
mov
nop
int3
pushf
sahf
sbb
out
mov
into
adc
out
cmp
stc
pop
adcb
popa
lcall
sbb
sbb
push
lcall
hlt
pusha
fwait
jl
jp
loopne
in
repnz
dec
cltd
jg
mov
inc
add
and
scas
bound
or
xor
clc
adc
mov
add
add
jbe
ljmp
jae
ds
pop
into
fsubrp
sbb
int
mov
into
out
xor
hlt
mov
movsl
push
or
fimull
push
rcll
push
cmc
ret
or
stos
notl
aad
jge
sub
js
xchg
dec
movsl
cmp
loope
adcl
arpl
call
test
dec
je
and
xor
movsl
push
inc
mov
pop
lds
aam
mov
outsl
ljmp
bound
adc
vpaddusw
pushf
xchg
nop
xchg
jnp
jo
popa
cmpb
mov
adc
push
hlt
dec
movsl
push
sbb
sub
xlat
cmpsb
mov
sub
adc
xor
pop
into
xchg
fldl
pop
mov
sbb
shlb
scas
sbb
mov
out
out
out
out
in
fcoms
mov
and
out
and
jl
nop
xor
testb
cmp
xor
ja
mov
adc
sbb
jae
insl
inc
xchg
std
xor
std
mov
pop
popa
jnp
mov
xor
loopne
xor
xchg
sub
inc
arpl
jno
lock
stc
dec
cmp
jo
ret
in
arpl
sub
push
mov
cmp
inc
arpl
pop
cmp
xor
js
mov
ret
or
cmc
pop
pop
mov
dec
xchg
cld
xor
add
mov
pop
loopne
add
push
lahf
shrl
rcrb
repnz
xlat
adc
push
fwait
cmp
cmp
ljmp
iret
in
ffreep
icebp
cmc
int
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
dec
push
js
jo
cmp
inc
xor
and
je
aas
insb
fistl
and
xchg
jne
dec
test
jns
shl
jbe
in
outsb
nop
mov
adc
movsb
cmc
dec
mov
pop
ljmp
loop
jp
inc
lret
or
mov
mov
mov
sub
aaa
inc
push
add
pop
xor
xor
pushw
sbb
dec
and
jecxz
push
shrl
adc
popa
inc
fidivl
mov
fwait
lds
cli
xor
mov
or
cmp
movsb
mov
je
push
cli
sub
sahf
imul
push
xchg
in
stos
push
imul
jne
repnz
mov
vcvtss2sd
dec
xchg
or
add
lahf
pop
jmp
imul
imul
mov
xchg
scas
xlat
shr
push
inc
pusha
idivl
and
insl
mov
sahf
aam
mov
out
adc
jmp
pop
add
clc
push
and
dec
loopne
pop
repz
popa
sbb
xchg
movsl
push
out
pop
aas
faddl
out
aaa
divl
fsubrs
lock
cwtl
ficomps
sub
mov
jmp
and
out
lods
dec
pop
dec
int
push
lock
bound
mov
sub
add
xor
lock
loopne
fnstsw
je
test
pop
sbb
add
je
es
popf
and
jecxz
cmp
aas
push
pop
test
in
xor
test
pop
punpckhbw
shll
les
push
dec
fs
jo
cwtl
subb
add
aam
xor
pop
mov
mov
push
inc
add
dec
pop
mov
repnz
adc
notb
xlat
mov
insb
dec
push
cmc
int3
mov
aam
push
cmp
xlat
cmp
mov
out
stc
jecxz
stos
fucomip
int3
cld
or
mov
jnp,pt
sahf
mov
mov
pop
or
ds
sub
lods
fisubl
es
or
fsubrl
out
in
or
mov
mov
mov
sbb
inc
jl
dec
push
test
xor
aas
dec
xor
mov
outsl
outsb
cmp
or
lds
push
sub
mov
in
int3
out
call
aas
adc
pop
pop
sub
jne
jmp
jge
sar
xor
add
rorl
cmp
in
xchg
subl
popa
sub
fiadds
cmp
lea
sub
rcl
sub
mov
push
or
jae
push
inc
mov
lret
mov
or
mov
test
inc
fstl
mov
inc
mov
xlat
mov
sbb
push
mov
roll
insl
aad
ficoms
xchg
xor
dec
ds
cmc
icebp
mov
mov
lret
pop
lods
dec
rorl
je
imul
mov
mulb
mov
movsb
adcl
push
dec
lea
into
sub
or
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
mov
push
jo
cmp
jp
mov
setle
test
adcb
lods
stc
push
lods
data16
add
int3
pop
mov
mov
or
shlb
out
mov
leave
push
xor
jno
add
sbb
rcrb
xor
in
cmpsb
xor
push
ret
pop
inc
in
mov
adc
cltd
out
mov
pusha
dec
ss
lock
jae
dec
cmpsl
fisubs
xor
out
lahf
je
mov
mov
xor
incl
mov
fs
add
inc
add
jb
outsl
fistpl
xchg
xchg
jne
jg
out
push
test
ret
lds
dec
cli
cmc
pop
sti
jg
sub
fcoml
add
aad
insb
ljmp
jl
jl
xchg
sbb
sbb
aad
pop
lret
leave
sbb
xlat
dec
sbb
dec
mov
pop
pushf
cmp
jge
mov
pop
jb
push
in
rclb
mov
stos
fwait
insl
or
push
out
mov
test
repnz
popf
cmpb
add
inc
mov
gs
lret
mov
inc
adc
and
je
mov
in
push
mov
dec
rcr
adc
into
gs
lods
test
scas
push
imul
and
pop
jmp
jo
pop
inc
testb
inc
cmpsl
xchg
push
lea
ret
out
lods
test
int
pop
lahf
cmp
out
mov
aaa
sbb
push
push
pop
inc
fs
pop
test
not
inc
lods
outsl
imul
sbb
cmp
sbb
push
stos
rcrb
adc
data16
cli
cmp
stos
mov
push
mov
jmp
jno
and
imul
loope
xor
push
or
jecxz
pop
rorl
pop
scas
add
add
add
cmp
sub
loopne
inc
fsubl
cwtl
sarl
out
je
xor
ret
push
testb
dec
lret
sbb
adc
aam
jle
jbe
xchg
sub
hlt
jp
pop
cltd
xorl
ror
adc
inc
jns
xchg
sub
adc
add
stc
push
fldenv
dec
fisubrl
push
xor
cmp
std
inc
xor
push
pop
dec
fadd
pushf
jle
xor
mov
dec
sub
pushf
lods
mov
jns
mov
push
repnz
sbb
movsl
int
inc
dec
inc
mov
mov
xchg
lret
outsb
das
in
add
idivb
add
xchg
daa
mov
push
mov
and
into
scas
negl
xor
sub
fldenv
push
fdivl
sub
mov
push
sub
or
inc
in
ljmp
mov
inc
mov
shlb
loope
jmp
lea
and
shrl
fmuls
xchg
lods
xchg
cmp
and
in
ret
xchg
inc
in
enter
xchg
sbb
xchg
mov
adc
sbb
mov
out
test
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
lods
xchg
sbbb
jo
jge
jo
gs
xor
push
ljmp
and
dec
adc
stos
in
xchg
inc
stc
sub
dec
fnstenv
loop
xchg
inc
pop
dec
mov
xchg
faddl
lea
adc
loope
adc
or
in
lds
stos
mov
test
scas
sub
sub
dec
jg
rcll
dec
cmp
cmpl
loopne
inc
loope
mov
and
insb
out
movsb
sub
test
fdivs
mov
jecxz
mov
pop
out
insb
les
ja
ljmp
pop
lods
je
and
movsb
cmpb
out
adc
sub
adc
lcall
daa
int
ret
imul
mov
aas
test
movsl
push
mov
bound
and
xchg
lretw
andl
pusha
adc
out
subl
ja
adc
lods
or
sbb
sub
pop
gs
xlat
push
push
push
inc
pop
sahf
cld
push
push
repnz
cmp
mov
sahf
outsb
mov
movsl
mov
and
addr16
subl
shl
mov
call
jecxz
mov
xchg
pop
cmp
enter
add
test
adc
call
sti
cmp
je
sahf
mov
popa
inc
test
daa
sub
roll
ljmp
xor
jae
sub
xchg
xor
adc
ret
xchg
scas
push
out
cwtl
mov
fisubl
cli
pop
xor
int
inc
sarb
xlat
mov
shrl
js
mov
test
inc
pop
jb
stc
jnp
lea
mov
sub
out
in
rcr
mov
dec
loop
fmull
jo
sub
mov
push
dec
push
sub
dec
roll
loop
cli
negl
sbb
pop
xor
push
add
pop
dec
das
mov
mov
outsb
mov
xchg
push
std
cli
xchg
sbb
js
inc
stos
bound
push
es
or
aas
rclb
pop
into
sub
pop
popf
into
rorb
pop
pop
es
lahf
sbb
mov
je
sbb
cmp
add
and
dec
inc
cltd
push
in
or
out
mov
dec
and
icebp
aam
addl
mov
cwtl
jl
ds
ds
scas
xchg
sub
xchg
push
lods
xchg
scas
push
outsb
bound
pushf
push
rcrb
repz
into
leave
loopne
loop
lds
xor
sti
outsb
scas
ds
dec
int3
out
sub
jge
lret
push
add
adc
pop
dec
aas
jmp
aas
pusha
pop
inc
out
mov
cmp
test
mov
add
movsl
out
push
add
cmpsl
mov
xchg
mov
leave
sahf
mov
mov
push
loope
inc
jno
int3
lahf
xchg
bnd
pop
dec
xor
lods
pop
push
scas
mov
inc
push
mov
fistps
jle
cmc
xchg
jle
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
setb
lock
sbb
cmp
and
pop
mov
clc
push
rclb
sub
lds
jo
loop
inc
movsb
push
mov
pop
popf
dec
ss
inc
mov
xchg
outsl
nop
sub
mov
fs
lds
mov
jle
xchg
jmp
ja
lret
aad
dec
or
aad
mov
fldl
xor
jbe
cmpsl
mov
dec
fmuls
scas
int3
jmp
int3
andb
and
lea
add
sub
mov
imul
popf
jl
or
cli
in
test
jbe
mov
dec
mov
enter
add
mov
jp
push
in
push
dec
test
sub
mov
and
ret
imul
iret
lds
or
xchg
add
popf
mov
stos
enter
iret
inc
arpl
jo
fstps
and
jno
scas
and
repnz
xchg
out
push
leave
in
cwtl
jmp
push
and
movl
mov
jecxz
pop
mov
pop
andb
int
lret
fisubrl
js
mov
add
mov
xchg
and
lahf
xchg
and
call
icebp
pop
inc
loope
cmp
push
dec
rcll
pop
push
add
xor
adc
mov
add
xchg
lds
inc
mov
out
incb
stc
movsl
pop
ds
popa
out
jnp
lret
push
dec
or
insb
out
testl
sbb
clc
dec
adc
push
mov
hlt
test
shl
adc
lods
cmp
pop
mov
push
scas
gs
mulb
mov
ret
out
dec
pop
fistl
and
jae
xchg
adcb
dec
fsts
jns
int
sbb
mov
inc
cmpsb
out
or
sub
jno
addr16
sub
push
dec
xchg
or
jbe
js
insb
imul
mov
or
mov
lret
xor
mov
stc
xor
mov
divb
push
pop
mov
inc
stc
popf
add
roll
repz
sbb
in
jb
movsb
xchg
pushf
push
push
lahf
clc
push
xchg
lods
sahf
xchg
push
mov
sarl
mov
inc
ds
out
test
out
roll
xchg
into
inc
out
lahf
fildl
shll
sbb
and
xchg
nop
mov
rclb
pop
lret
cwtl
je
mov
int3
test
leave
mov
insl
dec
fists
add
cmp
sarb
int
lock
dec
and
pushf
adc
pop
jge
jns
xchg
sbb
ds
xor
pop
add
xor
push
scas
push
sar
dec
jbe
fisubs
mov
inc
mov
dec
aad
adc
movsl
fsubl
push
push
fdivr
stos
sub
push
mov
mov
cmp
and
push
lahf
cmp
stc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
outsb
icebp
sti
rorl
jo
jge
jo
je
cmp
cmpsl
arpl
add
cld
push
mov
add
mov
stos
insl
lahf
push
insl
add
cld
rorb
fisubs
out
sub
lock
rol
ss
sbb
xor
push
aaa
sub
les
dec
jg
sbb
xorl
dec
adc
mov
ret
bound
push
stos
clc
cli
in
add
lods
outsl
lods
fsubl
or
outsb
push
jecxz
ljmp
mov
mov
sbb
in
out
pop
push
mov
cmp
roll
jae
fsubs
inc
sahf
mov
movsb
mov
jno
pop
mov
ror
int3
push
xchg
xchg
fxch
jmp
js
sbb
lret
ljmp
stos
rol
mov
sarb
aas
test
or
pop
push
push
repnz
push
fs
pop
push
push
hlt
test
mov
mov
sahf
cmpsl
jge
loopne
cwtl
lea
rorb
lret
push
xor
shrl
inc
sbb
cmp
repnz
mov
les
add
sub
inc
jno
ficoml
je
dec
bound
int
jno
adc
mov
adc
lret
and
pushf
pop
popa
stos
ret
call
cli
push
movsb
pop
pop
sahf
or
jecxz
cmpsl
inc
mov
sbb
out
mov
movsl
enter
mov
pop
add
insb
mov
mov
cmp
pop
das
mov
push
push
fcomps
dec
pop
xlat
dec
and
push
mov
fistl
cltd
mov
cmp
popf
xor
push
orl
or
repnz
mov
fnstenv
fisttpll
cmpsl
fbld
cmpsl
add
and
pop
hlt
outsb
stos
adc
ljmp
sub
push
cs
popf
sti
hlt
xor
jb
jne
adc
cmp
int
xchg
or
divb
lahf
add
sub
pop
and
repnz
push
jno
lret
fildll
sub
pushf
fs
mov
sbb
and
and
sub
int3
in
clc
push
adc
xor
lea
xchg
pop
fxch
cmpsl
sub
stos
es
aaa
js
mov
fistpll
dec
add
pop
pop
mov
cmp
pop
into
pushl
push
xchg
sahf
xor
xchg
repnz
mov
in
enter
int3
arpl
xchg
stos
mov
and
lea
sub
std
jbe
mov
jecxz
pop
push
rolb
sub
cmp
out
popf
lahf
aaa
lahf
mov
cmp
xor
xor
shlb
xchg
ds
mov
and
push
inc
push
and
jmp
and
and
dec
mov
test
jne
inc
lahf
cmp
xchg
xchg
in
jp
ret
mov
shlb
andb
push
pushf
push
data16
outsb
mov
sub
lock
fs
pop
or
int
movsb
add
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
lods
repz
and
and
cmp
xorb
and
dec
push
inc
add
dec
mov
jge
dec
push
push
addr16
mov
icebp
popf
scas
out
hlt
and
jl
test
sbbl
push
or
mov
lahf
mov
jae
pop
popf
insl
push
arpl
ljmp
xchg
stos
movsl
mov
cmp
mov
stos
lret
pop
out
sbb
nop
fnstsw
and
leave
ret
decl
insl
outsl
sub
mov
sbb
push
add
or
sub
xor
in
imul
test
imul
xchg
mov
sti
rclb
push
add
dec
mov
sub
jg
in
or
xchg
clc
add
in
fwait
inc
icebp
sub
fsubrs
sub
xor
fmuls
loopne
jno
repnz
pop
adc
pop
mov
and
jbe
adc
mov
or
push
sub
sbb
fadds
mov
popa
dec
push
imulb
arpl
outsb
dec
sub
mov
jmp
push
lret
stc
aaa
push
mov
fs
or
mov
sbb
sbb
push
lahf
inc
jnp
adc
or
jl
adc
fistl
jge
mov
xchg
xchg
sub
pop
inc
mov
mov
das
sbbb
loopne
ror
cmp
pushf
sub
ds
jns
dec
xchg
in
mov
sbb
fstps
les
leave
shlb
mov
stos
and
stc
push
mov
test
sbb
push
rorl
lret
jae
test
fisubl
std
hlt
jecxz
hlt
dec
adc
out
cmp
insl
dec
sbb
cli
dec
mov
push
push
lock
fidivs
ds
sub
jl
sub
xchg
push
pushf
cmc
xor
outsb
movsb
pop
mulb
out
jo,pn
inc
fmuls
mov
lods
in
cmc
mov
jge
into
in
xor
cwtl
xchg
shl
test
mov
or
cmp
jp
mov
jae
repnz
leave
sub
in
lods
pop
dec
sbb
sbb
iret
rcll
stos
add
add
jg
xchg
jno
stc
ja
jl
or
mov
adc
imul
add
mov
pop
lods
inc
jae
hlt
jo
shrl
mov
pop
test
sbb
leave
mov
enter
std
pop
inc
out
cli
add
call
cmp
or
loop
sbb
push
or
jnp
lds
sub
pop
mov
add
sahf
pop
xchg
inc
and
repnz
xchg
mov
fdivs
xorl
jne
ja
arpl
stos
jecxz
fldt
lods
jnp
test
add
mov
loop
int
mov
mov
ds
imul
and
movsl
std
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
jns
pop
xchg
jo,pn
cmp
mov
pop
mov
push
add
icebp
sarl
movsl
sarb
push
clc
or
adc
out
mov
loop,pn
filds
orb
push
push
mov
loopne
repnz
dec
adc
loope
stos
and
xor
push
sbb
push
cwtl
jg
sub
adc
xor
push
movsl
add
test
fcomps
pop
mov
lea
jae
ret
popa
add
mov
rcr
lods
mov
aad
dec
es
cmp
push
cltd
ja
hlt
cmpsb
mov
jo
mov
outsl
bound
xchg
es
lea
divl
test
jmp
lods
sub
sub
nop
orl
cmpsb
inc
ret
adc
and
push
fcoml
or
mov
sahf
rcrb
jnp
popf
cltd
xchg
push
out
jbe
mov
jo
mov
aas
jns
inc
xchg
leave
sub
pop
aaa
mov
push
test
sbb
daa
mov
mov
sbb
sbb
push
xor
popf
popf
fsts
adc
mov
push
inc
lret
mov
pop
sbb
inc
lret
push
or
aad
popa
inc
idiv
jge
enter
pminub
setb
shrb
test
fs
sub
mov
or
adc
pop
sub
decl
cmp
xchg
std
or
rclb
arpl
enter
ret
lcall
not
rcrl
fnsave
jecxz
adc
test
mov
test
dec
mov
cmpl
test
add
addr16
call
cld
jmp
pushf
push
fldenv
mov
pop
mov
jle
das
rcrl
push
data16
arpl
in
in
xor
out
inc
dec
das
les
jmp
fcmovne
mov
jl
iret
and
mov
mov
int
mov
divl
mov
in
mov
and
push
mov
pop
jge
or
lcall
movsl
jno
inc
mov
mov
push
cs
je
xchg
les
repz
mov
aad
repz
fisttpl
sbb
sub
aam
out
cmp
jne
fcomi
inc
mov
pop
rclb
test
jbe
jb
jns
pop
mov
xchg
inc
sbb
cmp
repz
xchg
dec
clc
adc
test
mov
pop
divl
push
filds
lret
movsb
test
mov
mov
popf
retw
cltd
loope
sub
neg
mov
loop
test
imul
push
mov
lret
xor
sarl
xchg
pop
aad
sub
adc
rorb
adc
rorb
test
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rorl
pop
push
sub
cmp
pop
inc
test
mov
lock
stos
adc
in
lret
mov
xor
js
jmp
scas
inc
push
xor
jg
lret
popf
mov
push
cld
sbb
lret
xchg
mov
scas
inc
inc
cs
push
cmpsl
mov
fwait
ret
in
fwait
pop
push
cli
pop
aam
jae
jl
dec
xchg
in
aam
movsl
icebp
lahf
pushf
insl
rclb
fistpl
subl
cs
mov
filds
movsb
sti
rcl
xchg
call
leave
xchg
aam
add
mov
mov
outsb
pop
mov
les
fdivrs
xchg
jle
add
xor
push
stc
xchg
inc
sub
or
imul
out
insb
and
cmovae
dec
les
notl
sub
aas
sbb
sbb
into
push
fdivrs
mov
ss
mov
and
repnz
mov
and
or
insb
mov
iret
mov
xchg
hlt
clc
cmp
loop
mov
in
pop
xchg
in
js
dec
movsb
push
sbb
loope
mov
call
mov
repz
sbb
rclw
test
lret
sub
xchg
push
dec
lds
leave
scas
shl
popa
cwtl
pop
and
fsubrl
xchg
xor
fs
popf
cmp
mov
xchg
ret
jl
lahf
jb
sahf
dec
mov
sub
pushf
jle
push
int3
add
or
pop
fsubrl
mov
add
pop
and
mov
bound
mov
dec
cwtl
andl
and
lds
dec
scas
sbb
or
leave
sub
lea
cmc
pop
jecxz
pop
fsts
clc
push
lds
call
xchg
out
push
pop
fwait
ret
xchg
cmp
arpl
sbb
dec
enter
cmp
dec
pop
mov
xor
es
leave
outsb
sub
sbbb
shr
xor
lahf
or
fildl
adc
shl
fistpll
push
out
loope
sub
push
out
xchg
or
out
jo
pop
notb
xor
mov
mov
movsl
pop
outsl
rcl
out
mov
cmp
fs
and
mov
stc
fwait
mov
or
es
lcall
leave
pushf
or
xor
mov
mov
je
adc
pop
je
mov
sub
cmpl
aad
adc
ret
xchg
movsl
in
adc
pop
mov
ficoms
lcall
aad
xor
test
pop
shlb
push
stos
scas
and
rcrb
ja
in
in
orb
ficoms
pushf
rcrb
loop
push
js
sub
jmp
sbb
fildl
pop
add
jg
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
inc
aam
sub
aaa
jo
stos
jle
jo
ss
and
mov
ret
lahf
pop
jecxz
dec
push
xchg
std
jp
aad
mov
into
dec
lock
ss
sbb
push
addb
pop
jae
adc
nop
repnz
cmp
inc
inc
in
jns
pop
cmp
test
lahf
or
push
loopne
lcall
dec
enter
add
repz
je
xorb
in
xchg
sbbb
movb
jns
outsl
jp
mov
dec
xchg
insb
mov
mov
fcomps
or
sti
outsb
push
les
xor
dec
dec
adc
lods
pop
std
fstl
mov
pop
iret
pop
fs
mov
pop
sbb
xchg
jns
ds
sub
pop
push
js
movsb
push
mov
loopne
lcall
fs
push
das
mov
jnp
int
mov
std
pop
add
inc
insb
mov
add
jne
mov
out
pushf
pop
idivb
jp
cmpsl
push
fistpl
push
and
push
mov
jmp
push
rclb
scas
orl
insb
jno
xor
push
inc
std
jb
out
jbe
push
sbb
mov
test
in
call
loop
repnz
push
pop
cmp
mov
int3
jbe
movsl
into
jg
inc
call
lcall
gs
loopne
sub
test
jmp
sbb
xor
jl
or
nop
in
dec
popa
movsb
mov
pop
cs
in
addb
addl
pop
and
ficomps
repz
out
mov
xchg
push
adc
xor
dec
jae
stc
ret
rcrb
pusha
ret
in
loopne
adc
and
scas
imul
adc
inc
dec
shl
aaa
jno
push
xor
sbb
mov
ljmp
outsl
inc
js
push
pop
pop
je
add
and
or
cltd
cmp
xor
push
das
push
into
jno
test
jne
mov
push
test
mov
pop
int
mov
xchg
cmp
inc
push
cltd
push
push
pop
or
hlt
scas
out
scas
add
mov
pop
xchg
dec
xor
xor
mov
sub
into
lock
cmp
outsb
aam
rol
push
pop
fmulp
jge
sub
clc
mov
push
xchg
daa
fstps
and
lret
add
ss
adc
test
dec
sbb
sarb
adc
inc
xchg
cmp
popf
addr16
mov
je
movzwl
and
mov
jmp
ja
and
dec
xchg
aas
push
xor
jo
gs
andb
outsl
sbb
mov
cmpsb
aam
clc
fs
mov
js
mov
das
xchg
das
ficoml
std
dec
or
out
push
test
mov
insb
popa
sub
subl
sbb
pop
pop
sti
cltd
bound
cmp
gs
fwait
sbb
jb
mov
xor
add
cltd
mov
push
ret
add
fwait
mov
adc
fildll
cmpsl
fwait
and
or
jbe
adc
jbe
lret
pushf
aam
inc
jno
ret
je
mov
push
adcb
sub
leave
int
cmp
mov
mov
fldl
mov
pusha
xor
mov
int3
xorb
jb
cltd
hlt
push
data16
adc
adc
lret
xor
xor
sub
adc
aad
mov
cli
inc
test
ficompl
dec
repz
lods
and
jae
repz
popf
pop
cmpsl
add
inc
fdivs
mov
xchg
mov
adc
ja
sahf
xchg
xor
icebp
pop
jno
mov
pop
js
inc
inc
push
dec
shrl
lds
add
mov
ss
mov
lcall
out
push
jp
mov
adc
adc
mov
out
cli
fwait
or
stos
faddp
das
push
mov
pop
pop
dec
mov
icebp
push
sbb
sbb
mov
pop
ja
stos
or
pop
sbb
stos
int3
jnp
add
lods
jno
std
pop
negl
dec
inc
inc
push
mov
and
xchg
ret
jmp
cmp
aad
inc
xor
rcrb
jg
push
cmp
mov
pop
roll
in
xchg
xor
sahf
rcl
das
js
popa
test
pop
push
in
cmp
sbb
je
pop
jb
imul
inc
xor
inc
rorb
stos
push
sub
mov
clc
arpl
mov
addr16
lock
cmpsl
or
and
adc
sub
jbe
cmp
mov
mov
cbtw
jbe
sbb
jmp
cwtl
es
adc
xor
sub
arpl
dec
push
sub
dec
and
push
icebp
inc
sub
mov
cmc
insb
ja
mov
jp
mov
lods
test
popa
sub
leave
sub
loop
aam
aam
int3
xchg
mov
xor
popa
push
add
out
lahf
xchg
and
inc
stc
fbld
outsl
clc
xchg
ss
push
mov
mov
mov
cwtl
jbe
adcl
test
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
sub
test
jo
stos
jle
jo
negl
jne
addr16
fisttpll
out
xlat
dec
lock
adc
mov
jl
cmp
xchg
int
inc
mov
mov
js
lgdtl
outsb
sbb
push
dec
xchg
push
xor
push
push
rcpps
jne
push
sub
sbb
adc
dec
insb
or
into
call
and
lcall
insb
testl
arpl
jns
inc
adc
pop
into
and
movhps
cmp
adc
jno
jmp
mov
stc
push
cmpsb
cmpsb
add
adcl
pop
jmp
enter
mov
cwtl
push
je
aad
push
push
pop
sub
outsl
das
rorl
fstl
in
mov
lods
jmp
nop
and
stc
loop
jb
xchg
sahf
fs
xchg
mov
rol
int
jns
pop
jns
pop
lds
dec
call
inc
push
ret
sti
push
out
subb
mov
loopne
inc
xchg
pop
jecxz
push
into
ret
pop
inc
dec
insb
int
fiaddl
gs
xchg
lock
push
in
sarb
int3
xor
sub
repz
mov
dec
out
lret
clc
lods
cmp
jecxz
pusha
mov
roll
int3
lods
dec
lods
int
or
in
add
popa
adc
adc
push
in
add
push
mov
mov
mov
popa
nop
in
fcoms
data16
jge
mov
pop
mov
mov
shlb
lods
imul
test
orl
jp
out
xchg
out
mov
aam
rcll
add
or
insb
cltd
mov
mov
dec
pop
scas
imul
jno
push
cmpsb
xchg
cld
jecxz
push
fidivrl
sub
sbb
jne
xor
xchg
fisubs
add
dec
xchg
fnstsw
icebp
sbb
lret
sbb
inc
bound
mov
sub
mov
xor
sbb
mov
negb
mov
mov
iret
sub
push
push
sbb
pop
pop
xchg
loope
js
sub
xchg
mov
push
pop
in
push
xorb
enter
inc
adc
ret
stos
cmpsl
mov
cmc
loop
mov
ljmp
fisttpll
idivl
and
or
loopne
dec
sahf
jmp
subl
pop
mov
sub
mov
mov
xor
pop
cmp
pop
aad
jae
arpl
rorl
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
pop
push
push
ds
jo
cmpsl
jg
jo
jnp
sbb
push
div
mov
sub
idivl
mov
push
repz
jl
sarb
lea
add
inc
clc
pushf
cmpb
or
sarl
in
out
mov
and
rcl
fcomps
in
xchg
fidivrs
xchg
ljmp
xor
test
mov
cmp
shlb
mov
les
sbb
xchg
cmpb
pop
ret
jl
or
cmp
adc
inc
jbe
sub
sbbb
or
jbe
pop
sbbl
fsubl
cmp
rclb
mov
cmpsl
fisubrl
push
sub
mov
inc
cmp
xchg
xchg
icebp
pop
xchg
mov
lret
fwait
loopne
xor
mov
mov
jne
gs
push
in
sub
and
fwait
out
dec
push
dec
push
jno
add
cmpsl
repnz
fs
adc
shlb
jge
cmpsb
fimull
jno
imul
inc
push
cmpsl
sbb
dec
ss
jnp
inc
inc
or
cwtl
xlat
ficoml
nop
inc
fisubrl
xchg
and
stc
jg
push
pop
int3
push
mov
xor
mov
cmp
insb
imull
sub
in
adc
les
inc
xor
std
add
and
add
sbb
cwtl
xchg
and
xchg
popf
insl
inc
int3
xor
xchg
inc
es
push
jnp
test
mov
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
shll
jo
cmpsl
jg
jo
xchg
xor
mov
pop
loopne
mov
in
loop
cmp
sbb
outsb
cmp
inc
cmpsb
test
out
test
dec
enter
nop
das
das
nop
cli
inc
dec
inc
stos
arpl
out
add
lret
out
lock
sarb
add
push
aad
sarb
or
scas
std
sti
mov
xor
arpl
jne
mov
mov
mov
adc
repnz
add
xor
mov
loop
mov
mov
aad
pop
insl
xchg
cmp
mov
cld
ljmp
pop
call
sbb
jge
jmp
mov
dec
popa
xlat
mov
pop
mov
lahf
inc
stc
dec
mov
ds
jns
bound
push
pushf
es
mov
loope
pop
daa
adc
push
cmp
loope
push
mov
mov
fadds
xchg
dec
or
and
jmp
mov
jmp
jb
lods
shll
leave
sbbl
push
lahf
bswap
xchg
pop
or
dec
dec
ds
mov
aad
xchg
or
push
push
ds
lcall
mov
lds
jo
cmp
fbstp
daa
aas
cmc
lods
xchg
aaa
add
test
in
insl
icebp
or
sbbb
jl
jge
shrb
mov
ficomps
pop
mov
loop
shrb
pop
mov
add
mov
push
notb
pop
popf
ja
dec
and
fucomip
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
push
push
stc
or
cmp
jo
jg
jo
adc
sbb
jnp
inc
sub
dec
adc
jo
sbb
loope
fildll
lods
movsb
sbb
cmpsb
mov
aaa
add
int3
inc
push
jae
repz
xor
mov
cmp
stc
jns
int
fildl
mov
or
mov
mov
mov
adc
jge
test
aam
adc
test
insb
sbb
cmp
and
int
or
outsl
sbb
jae
push
adc
gs
inc
mov
inc
and
xlat
ljmp
jae
outsl
inc
mov
fdivrs
sub
dec
mov
dec
adc
mov
and
mov
xchg
int
ds
jno
mov
inc
mov
push
mov
or
ret
sbb
sti
fbstp
and
push
rcrb
lock
ficoms
shlb
inc
jp
rclb
xor
dec
jp
mov
adc
fiadds
popf
sub
mov
xor
std
shrl
pop
sbb
lea
int
jbe
fwait
das
scas
rcll
mov
cmp
and
or
push
cli
mov
into
adc
mov
ss
jbe
pushf
lea
xchg
jb
mov
lods
lods
inc
jnp
outsb
xchg
jp
inc
dec
jle
in
inc
stos
insl
mov
pusha
into
xor
insb
cli
push
adc
jns
ljmp
movsl
push
sbb
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
push
loop
in
xor
jo
loop
jo
push
divl
mov
dec
pop
dec
mov
out
aam
jge
call
call
push
mov
ret
movsl
ds
shrl
cmc
jmp
mov
das
sbb
push
ljmp
iret
lea
int
cmc
or
jge
lock
sub
xor
subl
out
out
scas
repnz
les
iret
jb
xchg
add
gs
je
mov
and
push
sbb
mov
sbb
sub
addr16
mov
inc
insb
into
dec
orl
and
out
inc
pop
cs
int3
adcb
jae
pusha
mov
repnz
xor
stc
nop
jg
je
jg
push
cmp
mov
cwtl
je
ret
mov
jno
jb
test
sub
movsl
leave
adc
aad
mov
cmp
lea
dec
push
jae
push
cmp
jno
push
xor
daa
cmp
lock
mov
xchg
pop
pop
pop
nop
stos
subb
test
jecxz
ljmp
icebp
jne
xchg
into
sar
push
aad
xchg
loopne
aas
into
and
sbb
mov
xchg
adc
mov
inc
filds
scas
xchg
lds
jg
cmp
cs
sbb
popf
push
sbb
jecxz
aas
das
xchg
mov
jle
mov
test
aaa
sbb
out
pop
mov
sahf
call
dec
in
nop
add
push
push
icebp
push
push
inc
cmpsb
mov
outsl
cmp
push
and
push
jge
mov
inc
adc
mov
dec
mov
out
test
pop
push
sub
stos
add
xchg
loope
inc
mov
xchg
xchg
insl
in
and
dec
cmpsl
lea
data16
mov
dec
loop
popa
mov
xor
sbb
icebp
shl
xor
popl
jge
xor
sub
dec
jg
insb
orb
icebp
popa
pop
je
xchg
mov
xchg
mov
mov
push
sarb
lcall
dec
push
mov
xchg
test
in
test
lock
fisttps
pushf
jne
pop
mov
add
pop
push
xor
aam
adcl
pop
pop
cmpsb
pop
clc
push
sbb
lds
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
pop
jns
sub
jle
jo
cmc
insl
mov
fldcw
mov
cmpps
sbb
nop
pop
mov
mov
scas
or
inc
mov
mov
int3
je
mov
dec
mov
fwait
push
cwtl
es
mov
popa
or
outsl
cltd
inc
xchg
pop
cwtl
fiaddl
cmpsl
shll
outsl
inc
push
push
ja
push
mov
mov
add
repnz
in
ds
push
popf
sub
mov
cmpsl
decb
xchg
push
adc
data16
loopne
xchg
mov
in
pusha
fwait
cmpsl
sub
mov
mov
mov
or
movl
arpl
call
and
and
and
ja
cmp
xor
sar
jb
mov
aam
add
fisttpll
inc
jo
sub
mov
stos
inc
lahf
repz
and
mov
les
cli
or
ret
sbb
or
int
adc
push
fidivrl
imul
je
push
pop
and
in
dec
int
xchg
and
xchg
or
pop
push
jne
movl
mov
mov
push
stos
rcl
cli
sub
add
xor
outsl
add
mov
ret
mov
pushf
imul
and
mov
mov
add
mov
stos
fisttpl
iret
inc
data16
push
mov
sub
adc
lea
subb
shrb
into
adc
lcall
adc
pop
mov
xorb
mov
dec
and
fwait
popf
jne
cs
sarb
jo
int
pop
mov
ficomps
cmpsl
mov
stos
cwtl
lret
dec
pop
adc
aad
lds
jp
sarl
int3
push
insl
sarl
and
sbb
adcb
dec
cmp
pop
and
mov
insb
pop
in
xchg
cltd
adc
add
or
inc
mov
push
sbb
lods
jecxz
push
jnp
xchg
sub
mov
push
inc
jg
or
or
and
cld
dec
xchg
dec
out
fstpl
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
popa
inc
popf
pop
lds
and
jo
fisubs
int
dec
dec
mov
aas
mov
inc
cmp
dec
xchg
mov
and
push
and
jp
jecxz
xchg
call
mov
pop
and
cwtl
mov
out
fimuls
lods
fidivs
jge
push
mov
sub
loope
and
into
xchg
adc
rorl
lock
inc
sub
sub
int3
test
repnz
fstps
rorb
inc
jb
fldenv
xchg
dec
pushf
pop
pushf
add
insb
push
mov
aad
jns
fwait
pusha
jle
and
ss
jo
adc
insl
push
insl
dec
adc
pop
adc
jnp
mov
add
pusha
mov
dec
jl
clc
or
mov
jg
inc
mov
push
lret
stc
cmp
lods
cmp
inc
mov
ror
push
inc
loope
pop
dec
xor
push
pop
xorb
lret
push
inc
enter
jg
xchg
add
mov
sbb
sti
loopne
push
ret
sbb
aaa
cld
mov
inc
inc
lods
sbb
add
call
das
xor
adc
mov
nop
sahf
aaa
scas
test
cmp
cmp
lods
and
jp
and
dec
xchg
fs
or
cld
roll
repnz
testl
shl
dec
cmp
loop
xchg
addr16
or
xor
int
shr
inc
jmp
and
ret
mov
dec
iret
jns
ficomps
leave
aas
loope
mov
jg
dec
in
sbb
inc
push
in
jg
or
pusha
mov
ret
xor
mov
in
xchg
bound
adc
mov
das
cmp
mov
test
leave
push
cmpsl
rcr
fwait
jle
dec
sub
xor
enter
sub
shlb
pop
movsl
ljmp
dec
xchg
jg
in
lret
loope
popf
js
aam
stos
xchg
pushf
test
aas
sub
outsl
pushf
pop
jle
xbegin
adc
cmpsb
mov
daa
loope
sti
insb
jg
iret
out
cmp
and
jge
xor
pop
mov
add
mov
adc
cld
cwtl
mov
aaa
or
mov
rorl
sbb
stos
mov
cmpsb
test
stos
add
jg
and
ret
xor
insb
data16
sbb
xchg
push
cmp
sbb
pop
mov
ljmp
xchg
xor
fildl
imul
sarl
xchg
aaa
rorl
les
lods
ljmp
pop
int
js
out
data16
insb
push
jnp
sub
or
das
lcall
mov
in
daa
xchg
jne
lcall
cmc
adc
in
push
sbb
sbb
mov
jecxz
shlb
mov
cmp
push
sbb
ljmp
xor
jb
inc
add
call
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
xchg
dec
js
ret
and
jo
js
adcb
pop
xchg
xor
dec
test
mov
cmc
out
adc
es
stos
pop
dec
fldenv
xor
push
jmp
mov
out
insl
or
mov
test
hlt
aam
xchg
mov
sbb
mov
xchg
sbbl
sbb
inc
dec
sub
std
dec
fdivrs
sarb
mov
repz
dec
fimuls
inc
dec
sarb
popf
loope
addr16
dec
jge
xlat
inc
push
fstps
push
pushf
mov
push
push
ds
dec
mov
xor
sub
sub
or
pop
jne
enter
xchg
stc
and
insl
pushf
adcl
pushf
in
xchg
fucom
sbb
nop
inc
roll
mov
or
popa
insl
dec
push
aas
sub
add
das
push
outsb
pop
aam
sbb
in
or
add
jge
seta
test
out
jo
add
cmp
and
aas
push
jg
int
ss
out
out
xchg
mov
sub
out
test
in
push
aas
xchg
jns
push
leave
dec
cmp
push
sub
stc
xor
mov
push
push
jmp
pop
rcrl
sbb
pop
mov
fwait
push
out
cmpsb
jle
cmp
std
push
cmp
push
mov
jl
fnstsw
subb
xchg
cmp
dec
pop
jle
mov
jne
ja,pn
push
mov
jb
mov
xorb
mov
pop
aam
and
mov
stos
push
decb
or
dec
leave
aam
xchg
das
cmp
mov
out
out
mov
mov
lds
test
add
leave
sarb
popf
add
cltd
repz
cmp
or
cwtl
out
out
push
aas
push
das
jmp
jl
add
push
and
cmp
jnp
insl
and
push
scas
clc
rcrl
cmp
xchg
xchg
sub
popf
dec
iret
data16
movsb
push
jns
cmp
xchg
out
aam
fmul
lock
sbb
out
mov
inc
outsb
rolb
push
xchg
jae
pop
sbb
subb
push
sub
inc
mov
insb
cmp
mov
int3
movsl
icebp
outsl
pop
clc
icebp
cwtl
loope
ds
add
cli
pop
and
mov
ljmp
and
aaa
imul
orb
fistpl
pop
xor
mov
push
inc
sbb
lahf
mov
mov
icebp
test
mov
dec
scas
stos
jne
add
lock
inc
push
repz
das
pop
sbb
jae
pop
out
mov
inc
adc
pop
fmulp
arpl
mov
xlat
movsl
mov
inc
loop
xchg
ljmp
nop
rcrb
test
lcall
fwait
pop
sbb
inc
xor
xor
adc
inc
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
xor
jo
and
jo
add
ljmp
mov
cltd
dec
mov
lret
aad
xchg
fadd
outsl
pop
repnz
jge
add
pop
daa
dec
sub
and
movsl
fdivp
dec
arpl
stos
cmpsb
fidivl
dec
loopne
xchg
or
int3
mov
cmpsl
pop
ss
add
mov
aas
test
add
test
stos
in
call
ja
adc
sub
pop
lret
shr
movsl
sub
dec
sbb
xchg
popf
mov
dec
or
jg
cltd
inc
icebp
push
jns
cwtl
insb
lret
mov
jmp
mov
iret
xor
fidivrl
mov
jae
jno
aad
jae,pt
aaa
rorl
cld
fs
inc
shlb
popf
mov
les
or
mov
shrb
inc
adc
xor
imul
fnstsw
add
cli
clc
xor
lods
out
dec
idivl
mov
filds
mov
add
mov
out
js
jmp
add
xchg
mov
adc
mov
push
jns
mov
icebp
push
das
inc
push
xchg
or
sahf
lds
add
mov
cmp
pushf
sub
jae
xchg
inc
shl
dec
imul
into
arpl
push
in
lock
jnp
or
leave
rorb
add
adc
xchg
adc
jo
fwait
push
fiadds
sbb
xor
pop
mov
lcall
popf
pop
stc
push
xor
fldcw
outsl
fdivl
sar
adc
sahf
in
rcrb
fdivp
push
mov
push
jl
push
or
es
add
push
and
fwait
mov
insl
inc
add
dec
jmp
lcall
xchg
and
icebp
fistl
sti
pop
xchg
mov
stc
jecxz
cvtps2pd
ljmp
inc
roll
ret
push
inc
dec
add
lahf
lret
lods
push
push
subb
cli
pop
xchg
fwait
js
jp
test
roll
cmp
js
call
xor
mov
mov
jae
subl
adc
imul
jp,pt
xchg
mov
and
mov
orl
add
out
sbb
push
pop
mov
insl
dec
fs
mov
pop
xor
ja
aad
cmp
repnz
sahf
mov
or
ss
and
pushf
pop
hlt
sub
dec
xchg
add
inc
and
add
adc
fnstcw
arpl
cmp
push
lcall
mov
xchg
inc
fsubr
mov
xor
mov
movsl
sub
in
mov
push
xor
sahf
fs
cli
popf
push
mov
lea
aas
xchg
push
sub
pop
xorb
push
inc
ja
adc
aaa
mov
inc
sbbl
psubsb
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
dec
rolb
cmpsl
int3
jo
and
jo
jo
aam
push
stos
adc
fxch
mov
sti
sbb
stc
cltd
loopne
iret
shll
adc
fnstenv
add
call
popa
jecxz
je
inc
jle
xor
xor
repz
pop
sahf
sub
lret
outsl
imul
or
aad
cwtl
or
or
sbb
and
dec
testl
add
cltd
sbb
jl
mov
mov
test
mov
int
aas
add
outsb
icebp
stos
sbb
das
aaa
add
mov
faddl
aas
mov
test
shlb
stc
xor
insl
mov
daa
inc
jne
dec
or
mov
ficomps
ja
xchg
xchg
clc
mov
lahf
xor
mov
loope
sbb
lods
bound
jbe
aaa
and
sbb
scas
lahf
ret
fcompl
sbb
jnp
push
jae
xchg
fldenv
add
or
outsl
insb
add
les
fdivrl
push
cmp
repnz
arpl
sbb
sti
scas
xchg
je
leave
or
mov
insl
push
or
dec
xor
imul
out
mov
dec
je
test
pop
fldcw
mov
clc
loop
sbb
es
movsl
xchg
cs
push
scas
test
xor
push
js
cmp
pop
and
mov
out
push
aas
add
mov
jne
sti
lea
popa
int3
rorb
jle
xchg
imul
in
pop
fdivl
imul
mov
xor
and
mov
call
out
popa
inc
xchg
xchg
pop
push
loopne
push
jbe
loop
popf
inc
test
shll
xchg
push
lock
mov
jbe
mov
lods
jmp
push
dec
ret
or
push
adc
movsl
icebp
fcmovnbe
and
roll
cmpsl
aaa
fucom
pop
fsubrs
shll
inc
call
xchg
loopne
gs
push
neg
aam
repnz
add
cwtl
ja
cmpsb
je
xchg
xor
jae
mov
dec
xchg
mov
adc
iret
cmc
test
mov
or
and
call
mov
mov
daa
insb
lretw
xchg
lods
pushf
out
cltd
fisttpll
add
mov
sbb
cwtl
test
cmc
aam
or
loop
push
xor
hlt
push
sub
iret
aad
popf
xchg
sti
scas
or
iret
es
mov
dec
inc
push
cmp
jb
or
fidivl
fcomps
rcrb
push
push
and
loope,pt
mov
cli
aaa
sbb
cmp
xchg
push
cmp
fistpll
xor
mov
mov
push
out
xor
push
fwait
xchg
addr16
insl
popa
nop
pop
sahf
push
inc
push
outsb
sub
lret
adc
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
cld
mov
or
leave
jo
and
jo
xchg
adc
mov
mov
les
push
cmp
imul
fsub
jp
lcall
ficomps
push
std
or
fisttpl
or
or
shrl
in
jnp
cwtl
pop
pusha
cld
mov
stos
and
mov
jno
mov
push
push
lret
cwtl
add
or
out
fmuls
add
sbb
add
and
or
mov
adc
mov
and
push
mov
lds
shlb
push
out
xor
lret
fwait
out
cs
or
aad
push
cmp
cmp
sti
mov
fidivrl
pop
xor
roll
cmp
bound
push
sub
xchg
ficomps
rcrb
or
std
xlat
movl
lea
leave
mov
push
cwtl
xor
add
push
movsl
test
repnz
ljmp
movb
mov
bnd
popf
cmp
or
add
test
sbb
mov
jp
cmp
pusha
repz
and
scas
call
and
adc
mov
inc
les
cmp
mov
jnp
push
xchg
out
ret
jne
seta
imul
test
test
es
inc
xchg
jle
cwtl
bound
mov
and
and
out
dec
mov
mov
outsb
mov
das
lret
xor
push
pop
lcall
pop
xchg
leave
popa
fstps
push
fnsave
mov
inc
and
or
or
outsb
icebp
and
scas
lret
sbb
xchg
repz
aad
pop
mov
cmp
movsl
and
mov
push
xchg
pop
inc
dec
es
jae
cmp
loopne
xchg
xor
shll
and
shl
test
cmp
jge
stc
lret
cmp
sub
imul
mov
cmp
in
loop
push
push
adc
jnp
pop
mov
cmpsb
sub
ljmp
test
adc
std
pop
lret
loop
xchg
mov
adc
mov
sub
inc
add
stos
dec
mov
pop
lret
shll
push
fsubl
test
int
sahf
jbe
jmp
ja
stc
ljmp
std
xor
jge
adcl
decb
ret
jecxz
aaa
pop
push
dec
lea
mov
inc
dec
dec
testl
das
ja
daa
dec
popf
mov
aas
popf
add
push
xchg
fwait
ret
mov
cs
aad
pushf
adc
out
add
inc
and
pusha
adc
cmp
mov
insl
sub
push
or
jle
push
xchg
and
cld
imul
int3
jg
xchg
ret
jnp
mov
jl
push
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
pop
mov
popw
aad
jo
jge
jo
lods
sahf
scas
out
jg
xor
and
outsl
stc
lods
add
out
adc
push
add
inc
adcl
cld
dec
pop
mov
inc
aad
js
cld
mov
lods
subb
call
lods
pop
sarl
popa
test
aaa
fistps
adc
mov
sbb
jmp
fstpt
int
aaa
or
ljmp
aaa
gs
jecxz
add
push
mov
adc
mov
mov
push
mov
andl
lods
mov
xchg
notl
out
neg
clc
lcall
pushf
jmp
jno
jae
xchg
lret
push
pop
or
ljmp
or
mov
movsl
fcoml
sbb
cmp
ss
add
inc
enter
inc
xchg
inc
xchg
gs
scas
mov
and
sbbl
mov
cmpsl
cwtl
or
xchg
sub
sbbb
inc
xchg
or
outsl
cmp
mov
xchg
inc
push
sbb
push
sti
popf
xchg
mov
test
dec
sub
adc
je
mov
sub
roll
or
xchg
aas
fstpl
sbb
frstor
add
or
sbb
mov
je
and
popa
push
pop
test
or
xor
insl
test
insb
out
sti
push
aad
sub
cltd
xchg
push
inc
jmp
sbb
adc
in
push
and
loopne
xchg
push
cs
dec
or
fidivrl
push
add
or
fdivrs
jmp
jge
scas
add
xchg
in
lea
mov
fs
rcl
loop
sub
xor
cmp
mov
mov
fmuls
xchg
xor
sbb
pop
testb
jbe
adc
into
or
lcall
insb
arpl
mov
or
fisubrl
loop
hlt
lahf
and
cwtl
fadd
mov
jecxz
pop
fidivs
xchg
nop
dec
mov
dec
mov
fmul
pop
std
out
outsb
inc
outsb
xchg
xchg
mov
jg
add
xchg
dec
or
mov
cmp
loope
sub
jbe
or
pop
sbb
iret
adc
das
sbb
fs
mov
jbe
notl
rclb
fdivs
addr16
add
sbb
lods
iret
xor
sarb
rorb
cli
jp
ja
push
fcomps
xchg
in
add
sub
cmp
mov
xchg
xor
bound
in
sub
ret
cmpsb
sbb
fistpll
repnz
mov
ret
ficoms
push
mov
insl
fstpl
mov
cltd
decl
or
dec
outsb
sub
mov
adc
or
and
sbb
aam
lods
push
neg
sub
nop
movl
out
hlt
das
loope
int3
or
sub
mov
subl
push
bound
lret
ds
test
js
jmp
pushf
mov
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
xchg
cmpl
sub
addr16
rolb
push
inc
imul
dec
xchg
test
mov
or
lods
push
inc
insb
idivl
mov
inc
jmp
xchg
dec
loopne
add
cmp
add
out
xchg
cmp
adc
sahf
xor
pop
out
out
push
aaa
sbb
mov
dec
test
jne
mov
int
cli
das
pusha
xchg
push
jg
movsl
pushl
mov
js
mov
sub
gs
out
cmp
je
mov
push
faddl
push
adcb
ret
add
or
xchg
fistpl
jno
lea
sub
out
inc
cmc
imul
bound
push
sbb
inc
add
xor
call
push
add
xchg
mov
add
test
mov
enter
or
inc
addr16
enter
or
adc
cmc
enter
addb
cmp
cwtl
out
daa
addr16
addr16
cmc
dec
imul
jecxz
or
sbb
cmc
cs
enter
lret
xchg
std
jmp
shll
jne
push
add
push
addl
ds
lea
xchg
inc
jno
test
inc
jmp
mov
dec
dec
ds
in
xlat
push
xchg
xchg
rcll
rcr
les
je
call
pop
rclb
push
movsl
or
popa
fmull
and
dec
lock
js
aaa
pop
out
jnp
cmp
lret
adc
inc
push
int
cli
cmc
aam
cli
out
xchg
jns
mov
xor
jbe
out
jmp
pop
repnz
lahf
ret
inc
incl
add
sti
sahf
fildll
sbb
jo
xchg
aad
add
into
push
sub
push
adc
stos
in
aam
add
dec
cmpsl
shll
lock
push
mov
sbb
in
jge
mov
mov
jo
imul
mov
out
jns
pop
push
icebp
test
add
mov
lods
mov
or
add
scas
pop
pop
out
xlat
mov
rclb
cld
std
lret
ret
addr16
fcom
xchg
adc
repnz
sub
add
push
jne
jg
fsubs
test
mov
testl
je
adc
std
cmp
testl
popf
test
xor
and
mov
adc
inc
sbb
mov
pop
fiadds
pop
mov
mov
dec
mov
cmp
add
cmp
lcall
mov
push
cmp
pop
leave
jmp
pusha
push
sahf
lahf
sub
lret
push
jecxz
lock
inc
arpl
ljmp
in
ss
xchg
in
dec
push
adc
pushf
inc
mov
fdivrp
cld
fsubrl
mov
add
fadds
dec
push
std
daa
loop
notb
jle
imul
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
pushf
sbb
aad
rorb
pop
jecxz
pop
cmp
movsl
jne
sub
out
leave
fildl
test
orl
imul
sahf
mov
cmp
stos
xor
out
loop
fisubrl
sbb
fistpll
pop
pop
dec
int
inc
mov
push
sub
mov
lret
inc
or
add
ret
sub
sbb
cmp
leave
addb
xchg
test
cmp
add
daa
ds
pop
les
xor
mov
pop
sbb
movsl
mov
in
mov
enter
adc
mov
data16
xor
clc
pop
push
pop
out
jae
xchg
sub
hlt
flds
jg
aam
mov
std
rcrl
orb
cltd
test
in
cmp
cmp
dec
xlat
sbb
jne
loopne
mov
mov
or
mov
movsb
cltd
or
and
xchg
xor
scas
ret
aas
mov
jb
dec
in
ret
xor
mov
jbe
adc
mov
leave
xor
bound
ljmp
cs
hlt
and
aam
cmpsb
jnp
push
cmpsl
test
adc
push
jb
arpl
inc
dec
add
mov
xchg
cmc
push
addb
dec
push
aas
pop
int
mov
and
outsb
in
or
lret
mov
out
jo
stos
movsb
mov
jp
mov
jmp
lret
dec
cmp
pop
mov
repnz
inc
xor
xchg
inc
cmc
mov
sbb
push
stos
xchg
inc
mov
test
or
mov
xlat
pusha
int3
inc
cmp
push
xchg
xor
jo
mov
jae
sbb
xchg
xchg
stos
adc
sbb
test
leave
dec
leave
push
inc
movsb
sbb
jno
push
mov
lcall
xchg
xor
icebp
aaa
push
xor
sbb
nop
sbb
pop
adc
add
dec
rolb
add
sub
fwait
sbb
lret
and
push
in
cmpl
sarb
fwait
xor
xor
mov
cmp
cmp
jle
lock
xor
push
hlt
daa
xchg
sysret
jb
inc
or
xor
into
push
not
pop
mov
movsb
cltd
xchg
inc
insb
dec
mov
jne
es
iret
and
cli
dec
jne
sahf
shll
push
loopne
xor
sbb
xlat
lret
aaa
mov
fs
or
xchg
aas
das
jae
dec
mov
xorb
add
xor
add
insl
or
imul
movsl
out
aas
or
mov
pop
daa
sub
icebp
sub
dec
adc
cmp
cmpsb
or
ret
inc
push
or
dec
repnz
mov
inc
dec
pop
sahf
arpl
push
mov
ja
mov
push
popl
push
imul
mov
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
insl
pop
hlt
xchg
fdivl
and
jo
pop
insb
jnp
mov
fcoml
mov
sbb
fisttpll
xchg
jns
cld
pushf
adc
sub
fnstenv
jbe
mov
stos
pop
mov
mov
xlat
aaa
mov
lahf
cmpsl
pusha
sbb
inc
enter
sub
fisubl
inc
cmc
mov
mov
into
mov
scas
fst
pop
jae
jp
insb
jle
lahf
sbb
pop
stos
pop
lock
adc
lock
and
fidivs
cmp
dec
rcll
push
shlb
cmpsl
jbe
mov
cld
mov
scas
es
orps
or
xor
shrl
push
pop
xchg
mov
daa
xor
test
and
clc
add
add
and
mov
inc
adc
divl
mov
inc
sub
pop
mov
pushf
pop
int3
ror
out
rorl
jmp
adc
mov
inc
lret
mov
or
repnz
ret
in
into
ljmp
shlb
jl
and
mov
inc
adc
xchg
sar
leave
push
adc
mov
jo
pop
call
stos
out
sahf
jp
jl
xor
mov
dec
and
outsb
xchg
and
pop
shrb
inc
dec
pusha
adc
shlb
push
pop
push
mov
call
sub
mov
movsl
lret
and
xor
andb
and
sbb
dec
int3
mov
and
xor
popf
jp
cmpsl
push
sub
sub
mov
xchg
jecxz
or
jno
stos
push
or
pop
movsb
lds
inc
jl
dec
or
mov
dec
bound
jne
pop
loop
pop
push
adc
mov
jmp
jo
pop
shlb
mov
imulb
pop
jmp
ljmp
scas
and
bnd
fpatan
lret
push
xchg
test
imul
loope
pop
pusha
push
test
pop
and
mov
dec
repz
divl
pop
jmp
std
or
or
cwtl
mov
pop
push
orb
insb
jl
and
fiadds
cmp
sub
into
aad
mov
xchg
movsl
lret
adc
push
nop
mov
pop
cltd
outsb
hlt
push
aaa
cmp
lods
add
xor
rolb
sub
dec
push
pushf
out
pop
loopne
cltd
lret
pop
enter
pop
fs
lods
mov
dec
inc
scas
adc
cld
pop
and
adcb
mov
mov
pop
mov
add
dec
cwtl
inc
pop
or
aaa
aam
insb
fcoms
jl
call
lahf
mov
sahf
jo
hlt
or
or
push
test
and
sub
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
insb
mov
jo
and
jo
lods
imul
jg
jns
inc
jbe,pn
push
rcrl
adc
xchg
jb
cmp
addr16
repnz
imul
call
push
dec
sti
xchg
jge
stos
mov
shr
and
inc
movsb
repnz
dec
repnz
fldenv
popa
es
pop
push
in
in
jmp
lcall
das
in
dec
lahf
xchg
addb
cmpsb
test
gs
jmp
shrl
sub
jl
lock
into
cmpsl
out
mov
scas
jb
and
push
stc
dec
jno
sar
inc
ljmp
push
scas
or
adcl
inc
das
into
test
inc
xchg
and
rol
and
das
cmp
adc
pop
add
repz
enter
pop
insb
movsb
or
enter
in
jle
adc
xchg
and
jg
lods
or
sbb
mov
inc
jle
in
xchg
and
inc
mov
jno
cmp
data16
movsl
std
and
xchg
push
jge
ror
popf
push
sbb
and
lea
hlt
push
sub
xchg
mov
xor
std
pop
mov
hlt
int
sti
push
sbb
push
test
adc
or
or
adc
dec
fs
rolb
push
mov
sub
in
js
orb
aas
add
out
push
adc
jecxz
xlat
inc
das
push
mov
jl
aam
add
cwtl
aas
gs
push
iret
mov
jg
stc
adc
scas
in
fidivrl
cmc
inc
fwait
or
pop
scas
pop
int3
out
out
loopne
cmpsb
daa
push
imul
scas
mov
lcall
or
repnz
mov
jne
cltd
xchg
sbb
fdivrl
insb
mov
rcr
idivb
test
adc
push
loopne
xor
adcb
fsubs
movsb
ds
dec
pop
bnd
outsl
pushf
bound
aad
fnstcw
cmp
jp
add
xchg
subb
jb
rorl
fcomps
je
sbb
out
in
jmp
adc
mov
pop
fldt
mov
pop
push
jns
mov
dec
ret
pop
mov
int3
push
and
pop
jmp
and
push
insb
mov
cmp
in
jmp
dec
popa
push
or
imul
fwait
je
or
pop
xor
les
sbb
mov
cmc
fwait
push
aaa
sbb
inc
pop
stos
and
sahf
cwtl
test
pop
pop
outsl
push
dec
fcmovbe
push
jno
stc
and
inc
push
or
or
xlat
mov
mov
dec
cmpsl
aam
loopne
rolb
mov
or
sbb
sub
jno
lea
sbb
imul
xor
mov
int
add
sbb
lret
insb
cwtl
push
pushl
lea
jmp
add
out
out
xor
call
xchg
pop
push
and
jo
test
fucomp
xchg
xchg
xchg
jecxz
jl
std
adc
idivl
dec
push
mov
aad
cltd
sub
sub
test
xor
rcrb
pop
cmp
mov
popf
adc
loope
xchg
es
inc
mov
aas
xchg
cmp
mov
scas
xor
stos
mov
inc
mov
lock
insl
sub
push
mov
pmaxub
dec
ret
in
movsl
mov
jl
add
scas
cmp
ljmp
sbb
push
jle
sub
mov
lcall
rclb
dec
lahf
insl
out
sub
rorl
mov
or
lods
mov
aaa
fs
out
adc
cmpsb
jecxz
lea
lret
sbbb
mov
push
dec
mov
ficoms
mov
stc
dec
out
insl
stos
in
cmp
les
test
mov
jbe
lret
push
roll
dec
adc
test
cmp
clc
jle
repz
adc
jg
xor
enter
sub
dec
sti
popa
ror
in
or
lcall
lea
sbb
ret
in
daa
sbb
repz
add
mov
jno
sbb
jge
mov
xor
adc
mov
enter
inc
in
mov
rolb
add
sub
adcb
mov
xchg
mov
addr16
sub
mov
cwtl
and
sbb
jo
stos
es
imul
scas
sbb
rolb
es
out
mov
mov
mov
sbb
mov
xor
cmpsl
pop
push
out
jbe
shrl
enter
popf
cld
push
mov
jne
andb
jae
insb
xor
push
jb
push
mov
dec
adc
jp
rcrb
push
cli
sbb
divb
subl
stos
adc
std
pop
push
or
dec
mov
mov
mov
clc
push
dec
inc
stc
dec
xchg
dec
jbe
rcrl
mov
pop
mov
cmp
lcall
adc
fwait
lea
int
cmp
dec
pushf
sbb
js
pop
mov
xor
sbb
imul
in
adc
jle
mov
dec
lods
sbb
bound
and
or
xor
stos
push
cli
jb
shll
aad
lahf
and
rorl
xor
cmp
pop
cmp
pop
out
sahf
pop
ds
add
jg
cmp
sbb
xchg
pushl
mov
lods
xor
lret
ret
sub
push
lcall
push
jmp
push
sub
pop
pop
pop
mov
cld
mov
cmp
loope
and
jmp
adc
movsb
or
jle
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
arpl
adc
daa
loop
jo
jge
jo
fdivs
cwtl
scas
out
loopne
nop
mov
xchg
ror
decb
jns
cmp
ja
stos
hlt
sub
rcr
ret
sub
mov
adc
aas
nop
out
add
cmc
mov
popf
mov
shl
loopne
in
scas
dec
cmpsl
out
sbb
push
lds
inc
dec
pop
pop
mov
daa
inc
into
iret
xchg
add
push
xor
cmp
call
sbb
in
inc
sbb
das
cmp
gs
andb
jecxz
mov
mov
sti
out
mov
fsubs
mov
loop
adc
popa
fsubrp
xor
push
inc
mov
dec
jp
mov
sub
xchg
pushf
jmp
dec
mov
push
pop
nop
cmp
sbb
iret
push
jmp
xchg
jnp
pusha
repz
cmp
outsb
rcll
mov
mov
pop
leave
les
sub
sti
insl
push
in
mov
popf
arpl
call
jl
push
dec
mov
inc
mov
test
ljmp
ljmp
lcall
fwait
rcrb
addb
xchg
aaa
shl
in
fildll
xchg
pop
mov
mov
loopne
daa
mov
dec
lds
adc
xchg
jecxz
dec
dec
loopne
fldenv
std
clc
cmp
jge
sub
clc
or
mov
flds
bound
add
xor
sbb
jae
dec
fsubrl
pop
inc
ss
push
mov
xchg
push
rcll
jno
aam
das
lea
add
jno
lret
pop
inc
pop
mov
cmpsl
xchg
mov
xor
cmpsb
pop
lds
push
mov
add
adc
add
clc
fsubl
data16
rcrl
pop
jmp
mov
xor
stc
dec
cmp
cli
add
clc
dec
ja
sbb
in
jl
push
int
pop
mov
add
rclb
int3
add
jno
movsl
rclb
subl
fiaddl
mov
cli
clc
stos
mov
jg
daa
testb
call
gs
test
jo
iret
sbb
xchg
mov
adcb
test
repz
insl
out
cmc
leave
jnp
fwait
add
add
cmp
test
inc
imul
sub
xchg
movsb
jne
mov
pusha
xchg
in
insb
add
pushf
or
js
loop
or
pop
test
arpl
subb
push
enter
inc
adc
dec
push
adc
or
inc
pop
inc
loope
mov
test
fwait
pinsrw
mov
pop
lea
mov
jg
push
jns
or
mov
xchg
repnz
xor
pop
jecxz
adc
jl
jne
sub
push
mov
js
fs
cmp
xor
cli
jmp
clc
sbb
add
and
inc
add
dec
add
add
mov
ja
add
xchg
out
jo
and
jo
mov
sub
aas
fcomps
les
inc
mov
mov
inc
mov
lea
dec
mov
cmp
pushf
jbe
push
xor
mov
fists
sbb
dec
mov
jp
imul
out
jno
sbb
into
push
push
mov
addr16
cmp
cmpsl
lahf
and
ret
mov
cli
push
sbbb
mov
pop
in
jnp
rcrb
aas
into
nop
call
ljmp
ss
ret
outsl
dec
dec
test
fxch
stc
mov
arpl
loopne
in
mov
fwait
lods
sbb
lds
movsb
cmovnp
xor
and
int
in
xchg
push
sub
mov
jnp
leave
shrl
in
xor
js
push
cmpsl
push
inc
mov
stc
rclb
jl
or
lret
push
or
cmp
pop
sbb
mov
xchg
ret
push
add
mov
lods
xor
add
cltd
or
test
or
mov
jle
adc
jo
pop
cmp
xor
inc
scas
mov
insl
popl
faddl
lods
dec
fwait
push
lcall
push
outsb
ficoms
push
sbb
jo
sbbb
push
movsl
aad
dec
mov
mov
add
xchg
dec
rcrl
ficompl
fidivs
cmp
cld
xchg
push
mov
inc
imul
stos
into
inc
jae
push
repnz
jb
pop
push
pop
js
cltd
dec
aas
mov
jp
jne
mov
push
stos
sarb
push
cmc
adc
jno
xor
pop
dec
mov
jbe
jl
rclb
pop
mov
sub
pushf
jg
dec
enter
inc
pusha
push
mov
mov
pusha
int3
jb
mov
sbb
mov
lret
in
mov
cmp
dec
sub
jge
lcall
ficompl
mov
cmp
push
mov
jl
fldt
notl
mov
cmp
stos
in
shrb
xor
iret
pop
push
push
fs
lods
push
jbe
xchg
mov
daa
xor
push
cmp
dec
cmp
mov
sbb
push
push
mov
xchg
bound
cltd
lods
or
pop
jns
mov
mov
push
sub
enter
dec
xchg
mov
fsubs
xchg
lcall
pop
subl
push
mov
movsl
mov
xchg
lahf
cltd
mov
insl
xchg
jmp
das
pop
push
jg
or
adc
ja
sub
ret
mov
mov
and
lret
inc
jle
mov
mov
xor
out
mov
mov
lea
das
loop
sahf
adc
mov
adc
push
imul
push
std
loop
xchg
xlat
popa
inc
je
icebp
mov
pop
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
not
mov
xor
jge
jo
gs
fiaddl
js
imul
push
sub
inc
or
pop
gs
sub
xchg
jns
outsl
les
mov
rclb
loop
call
adc
shll
test
mov
inc
stos
sub
fwait
xor
inc
lock
stc
ret
aad
xor
mov
jo
cli
adc
cwtl
sub
xchg
stos
jns
sub
orb
aas
jle
xchg
or
and
sbb
stos
adc
enter
cmp
inc
outsl
pop
daa
xor
adc
inc
cwtl
pop
cld
xor
loop
data16
sbb
mov
push
inc
xor
or
sub
cmp
mov
stc
frstor
psraw
jo
out
mov
stos
push
sub
les
and
dec
hlt
sbb
lret
jp
adc
gs
ja
insb
mov
pop
add
add
cltd
cmpsb
and
repz
in
scas
addr16
leave
add
and
out
xchg
jle
jl
mov
xor
test
inc
test
jns
repnz
aaa
js
sub
es
lods
mov
push
inc
in
push
push
fxam
xor
and
inc
pop
push
lret
xchg
xor
mov
mov
movsl
jl
xlat
pop
sub
ljmp
fidivs
cmp
stc
aas
fistpl
addr16
and
idiv
cmp
jae
dec
jno
mov
jb
sub
imulb
insl
jle
sub
inc
mov
fwait
notb
xchg
push
stos
call
or
pusha
movsb
jp
dec
mov
mov
mov
mov
xor
inc
pop
insb
ss
mov
pusha
daa
fs
movsb
mov
jmp
xor
jmp
inc
jno
mov
push
sub
je
test
scas
push
rclb
dec
and
idivb
lea
pop
lods
push
mov
push
ret
aad
xor
es
popf
adc
rcrl
jmp
pop
dec
in
repnz
movsl
inc
push
cmp
call
das
xor
mov
das
out
adc
inc
cmpsl
sub
lret
mov
rolb
lret
js
xor
sarl
out
imul
dec
lea
mov
jo
imul
add
lods
ja
dec
shrl
movb
xchg
testl
mov
mov
aam
pusha
movsb
int3
mov
std
mov
les
pop
add
test
pushf
mov
push
fmull
xchg
or
mov
inc
fimull
es
jo
repz
pop
add
lods
fsubrs
pop
sbb
cltd
outsb
rcrl
fstpl
cltd
insl
cmp
jle
jnp
push
mov
cltd
mov
adc
insl
outsl
pusha
mov
insl
mov
ret
repz
xchg
rcl
inc
sbb
clc
jno
sbb
stos
cwtl
iret
push
push
test
pop
in
repnz
stos
mov
int3
je
pop
lahf
mov
push
cmp
dec
mov
iret
sub
scas
repnz
inc
outsl
mov
loop
scas
test
outsl
fs
pop
and
loopne
sbb
popl
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
arpl
jo
lahf
jge
jo
or
imul
scas
gs
jns
push
or
lret
mov
sbb
int3
pop
fadds
fnsave
addr16
das
lea
stos
sub
cmp
and
dec
sub
adc
pop
cmp
adc
push
xor
adc
leave
jo
fsubr
scas
or
loopne
orl
xor
lsl
cmp
sbb
mov
lods
call
rcrb
jb
mov
pop
call
sub
adc
ja
pop
imul
icebp
sti
jae
sbb
mov
sbb
jg
mov
outsl
in
mov
xchg
adc
shrl
outsl
stos
das
das
xor
enter
jecxz
rcll
cmpsb
xor
and
sti
mov
jecxz
sub
mov
clc
xor
ficoms
xchg
cmp
mov
and
sbb
bound
pop
call
push
rolb
inc
sbb
cmp
jecxz
enter
stos
sub
mov
xor
push
jns
xchg
inc
jmp
adc
iret
mov
gs
daa
and
out
xchg
jnp
pop
test
cmp
stos
insl
enter
inc
push
inc
adcl
movsl
arpl
cwtl
insb
mov
sbb
lods
dec
mov
add
xor
mull
daa
es
mov
sub
pop
or
aad
push
cmp
roll
dec
mov
inc
cmp
add
cli
inc
repz
bound
push
cmp
ds
fwait
xchg
mov
jecxz
sbb
pop
jmp
in
xchg
cmp
ljmp
outsl
ss
sbb
out
sbb
mov
sbb
dec
xchg
jnp
xor
inc
lcall
pop
test
sub
xchg
cmpsl
push
pop
into
dec
mov
in
int
repnz
xchg
pop
lods
insl
sub
xchg
imul
mov
insl
and
adc
fs
mov
dec
jl
lods
movsl
outsl
mov
test
cmovge
cmc
push
adc
call
sbb
hlt
sub
aaa
mov
pop
push
and
jle
add
iret
add
pop
popf
aad
sahf
into
jae
cmpsb
sahf
aam
push
ds
xor
scas
mov
lods
data16
insb
sub
push
fstpt
xor
xor
arpl
push
fwait
aas
pop
inc
xchg
and
aaa
pop
mov
fcoms
fdivr
mov
cwtl
jg
push
test
and
icebp
sti
loop
xchg
sti
xchg
mov
pop
push
repz
jns
inc
movsb
cli
adc
mov
and
xchg
in
or
fimull
scas
out
pop
pop
arpl
nop
xchg
mov
dec
movsb
inc
mov
cltd
push
or
xor
xor
jl
dec
inc
mov
sub
cld
mov
adc
sub
nop
sub
dec
adc
fidivs
or
jle
or
dec
lret
popa
mov
mov
fcompp
in
mov
inc
or
pop
gs
pop
test
pcmpeqd
lea
mov
cmp
in
inc
push
fldcw
repnz
jnp
fcomps
dec
int
and
jmp
xchg
test
outsl
sahf
loopne
cmp
pushf
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
popf
in
aas
inc
cmc
jo
lahf
jge
jo
cs
inc
jle
xchg
jl
push
pop
js
jo
mov
push
push
push
push
inc
jge
sahf
andb
sarl
lahf
push
inc
outsb
add
aaa
xor
shrb
add
mov
xchg
push
dec
jmp
sti
xor
inc
cmp
sub
popa
or
es
notb
mov
ja
sub
mov
mov
or
insl
dec
mov
lods
mov
imul
test
daa
fwait
popa
adc
or
lahf
repnz
mov
xor
and
pop
insl
rol
jno
inc
mov
les
dec
ret
mov
repnz
mov
add
rclb
adc
out
test
insb
xchg
mov
xchg
lods
cwtl
fs
dec
arpl
mov
jecxz
cli
xor
dec
cld
add
pop
sbb
hlt
addr16
jecxz
sub
mov
adc
popf
into
popaw
ret
clc
jo
out
jo
aas
jl
hlt
adc
mov
cmpl
movsb
pmullw
sbb
push
inc
jns
out
pop
and
cmp
cli
push
mov
cmp
dec
sbb
ljmp
out
in
sub
inc
or
or
gs
movsl
movsb
sub
lret
in
xchg
push
lret
rolb
jge
popf
lods
imul
frstor
mov
add
popa
add
int
ror
pusha
adc
aas
call
and
pop
cltd
adc
mov
fwait
jmp
stc
emms
sbb
shrb
push
mov
sub
xlat
pop
or
adc
inc
addr16
out
push
sbb
add
stos
mov
mov
sbb
fists
movsb
mov
les
mov
dec
mov
sub
cs
rolb
in
mov
xor
xchg
fcmovnu
inc
jecxz
cmpb
pop
pop
and
mov
xor
add
mov
mov
cmp
loope
nop
pop
pop
and
dec
lret
pop
loopne
inc
sbb
popa
mov
pop
jecxz
or
cmp
inc
addr16
sar
xchg
lock
xor
rcrl
in
mov
mov
ret
or
xchg
mov
dec
inc
xchg
push
add
add
testl
push
inc
rcrl
jo
std
sbb
insb
test
fdivrl
mov
cmp
jp
fst
pop
enter
and
sti
ja
sub
jg
in
push
mov
filds
in
in
mov
shrl
pusha
stos
rolb
push
cmpsb
dec
mov
ja
cwtl
daa
test
mov
repnz
popf
push
imul
and
sbb
mov
push
repnz
dec
dec
in
lds
xor
jecxz
mov
push
xor
push
sti
adc
fadds
sbb
inc
mov
xchg
jl
mov
xchg
or
loopne
push
jns
cmp
push
jl
jmp
jmp
push
sub
iret
jnp
inc
mov
mov
xchg
mov
loope
rolb
inc
sub
cwtl
xor
jae
xor
dec
xor
pusha
jne
shrb
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
sbb
icebp
jo
lahf
jge
jo
inc
sub
xor
mov
push
xor
js
mov
cmp
mov
jno
jo
nop
dec
or
mov
hlt
jae
jle
iret
int
lock
das
inc
sar
adc
xchg
insb
push
adc
cmpsl
or
enter
inc
push
xchg
lahf
mov
pusha
ffreep
dec
lcall
add
mov
jp
fsubrl
and
ss
jp
push
jecxz
push
sbb
jg
jp
mov
addr16
ret
ja
xchg
dec
sarl
movsb
push
mov
es
cmp
stc
inc
call
jge
and
jl
clc
mov
jno
adc
mov
mov
cmp
mov
insb
mov
or
sub
jnp
inc
inc
mov
push
mov
xchg
pusha
jo
insl
shlb
sbb
mov
fs
sbb
cmpsb
jge
pop
je
stc
ficompl
aam
mov
test
outsl
mov
daa
jp
das
cmpsl
xchg
xorl
stos
inc
sub
icebp
sub
leave
rorl
push
mov
orl
adc
pop
repnz
popf
iret
add
or
imul
flds
cmp
in
dec
or
aad
mov
fcoms
inc
loope
mov
ds
adc
aas
fcoml
popa
add
fsubrp
sub
stos
into
std
xchg
cmpsl
mov
pop
dec
mov
push
jne
inc
les
aaa
xchg
addr16
ljmp
push
sbb
xchg
ret
jmp
mov
stos
add
xor
sub
and
jae
imul
punpcklwd
aas
jl
pop
jno
movsl
cmpsb
push
cmp
mov
mov
sahf
test
jl
insb
xchg
cmp
or
add
outsb
popf
mov
adc
xchg
nop
stc
adc
cmp
xchg
movsl
daa
rorl
push
stc
jmp
mov
sub
lods
inc
jb
lods
jle
add
aaa
iret
stos
or
push
inc
mov
mov
outsb
fwait
enter
and
xor
jg
adc
jns
xchg
jb
jno
cmp
jge
xchg
add
into
rclb
sbb
int3
or
lret
outsl
out
and
insb
aas
pop
mov
fs
pop
inc
ret
bnd
loope
mov
aas
xor
xlat
in
adc
lret
fisubrs
cmpsb
imul
pop
xchg
and
jb
cmp
inc
mov
mov
lret
xchg
mov
dec
lahf
push
mov
popa
scas
andb
frstors
cmp
negb
inc
jmp
lods
push
pop
rcr
mov
or
jns
lods
jnp
sub
dec
mov
sub
push
sub
dec
mov
scas
mov
and
sbb
lea
xchg
fmulp
movsl
jmp
andb
out
ret
inc
clc
loopne
cmc
lret
push
negb
jg
fdivs
push
fstps
stc
adc
into
fwait
jns
das
jle
imul
sahf
mov
mov
push
mov
sub
test
pop
ds
out
push
jns
mov
sub
jle
cmp
xor
and
and
shlb
add
cmp
jle
mov
push
sti
scas
shl
in
add
xchg
fadd
or
cmc
std
inc
add
call
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
pop
into
xchg
add
jo
lahf
jge
jo
ja
inc
cs
enter
popa
xchg
add
jmp
ja
int3
cmpsb
mov
clc
js
mov
and
dec
jmp
mov
cmp
lret
jecxz
jp
icebp
mov
or
mov
fildll
dec
mov
jl
dec
es
dec
jmp
fidivs
shll
dec
mov
stos
push
pop
mov
or
stos
sbb
push
pop
popf
or
xor
xchg
jecxz
arpl
inc
test
insl
enter
rcrl
fdiv
mov
or
jl
jns
clc
mov
cmc
leave
cli
jmp
movsl
fdivrl
ret
push
jno
scas
test
cmpsb
inc
in
sub
ret
lea
dec
aad
aaa
push
jmp
push
int3
cmp
nop
push
xchg
add
jno
loopne
adc
cmp
int3
inc
push
aaa
hlt
mov
clc
dec
dec
xchg
jl
push
pop
cwtl
jecxz
sbb
or
cmp
cs
and
nop
test
add
cmp
xchg
or
xor
xor
lock
mov
orl
sbb
aas
enter
and
lahf
add
cmpsb
ja
std
subb
mov
loope
jg
lret
mov
dec
inc
stc
mov
mov
xor
movsb
addr16
cld
cwtl
outsl
imul
arpl
stos
cld
js
insb
and
into
push
sti
pop
mov
das
ljmp
bound
sbb
ficoml
out
cmp
cld
pop
xchg
jmp
and
into
fidivrs
out
or
cmpsl
mov
adc
mov
out
dec
sbb
cltd
add
or
repnz
in
inc
push
inc
into
dec
lret
stos
mov
push
mov
lock
xchg
adc
push
xchg
daa
cmpsb
pop
std
in
scas
das
inc
fldl
inc
mov
out
mov
clc
mov
add
scas
pusha
mov
inc
push
shlb
jbe
sub
sub
clc
fidivrs
test
mov
repz
push
ret
push
fnsave
daa
lds
mov
sub
sub
cltd
pop
xchg
mov
pushf
lret
and
jge
inc
pop
sarb
xchg
out
es
out
data16
xchg
pop
xchg
pop
adc
inc
in
pop
mov
xchg
cmp
es
arpl
dec
xchg
and
and
push
cmp
test
sub
push
fldl
lds
in
xchg
xchg
mov
fildl
int3
jne
xchg
push
pop
cmp
popf
sub
mov
test
ds
adc
daa
xor
dec
js
je
je
cmc
stos
arpl
add
fldenv
imul
notb
outsl
roll
and
es
xchg
mov
psrld
sbb
mov
dec
sbb
cmp
push
inc
pop
cmp
adc
jo
shll
add
cmp
cmpsl
adc
popf
stc
and
adc
cs
js
jge
scas
mov
push
sahf
or
add
jl
adc
testl
loopne
popf
and
add
jmp
shlb
sub
lret
mov
fldenv
jge
jo
xchg
cltd
popf
mov
xchg
sbb
jo
pop
aaa
repz
rol
mov
mov
ljmp
aad
pop
push
clc
mov
cld
mov
sub
fadd
mov
sti
pop
mov
lods
mov
cmp
dec
inc
mov
pusha
adcl
in
push
std
add
mov
shrl
iret
xchg
sub
jmp
mov
sub
jp
and
aaa
sbb
fdecstp
stc
andl
pusha
inc
outsl
or
in
mov
sub
ds
mull
fidivl
arpl
lods
pop
pushf
push
and
push
and
imul
sbb
rcr
cli
lods
dec
in
cmp
out
into
pop
and
push
mov
rol
and
insl
decl
into
std
add
dec
adc
iret
or
dec
mov
roll
mov
jns
sub
hlt
aas
dec
shr
push
movsl
cmc
popa
pop
imul
jecxz
inc
jns
jns
and
shll
sti
pop
mov
movsl
into
pushf
dec
arpl
call
push
scas
leave
leave
sbb
enter
push
in
mov
mov
or
mov
adc
les
ss
inc
push
pop
and
pop
fwait
xchg
outsb
jmp
xor
dec
mov
push
pop
ret
ss
push
push
or
je
jae
inc
arpl
inc
aad
mov
cld
xchg
mov
jl
outsl
cwtl
lret
cwtl
cs
pop
into
sarl
mov
mov
inc
fdivp
in
mov
inc
mov
mov
fwait
cli
jg
pop
add
inc
mov
pop
test
adc
lret
add
cltd
cs
das
ret
mov
movsl
sbb
pop
jl
cmp
test
mov
cwtl
fcomps
scas
cmpb
inc
cmp
out
roll
leave
sub
dec
ret
clc
and
or
xchg
inc
push
stos
xchg
xchg
push
dec
in
mov
dec
push
jb
pushf
and
sbb
pop
adc
negl
and
or
je
movsl
cmc
faddl
pusha
insl
cltd
dec
xchg
imul
outsb
stc
xchg
jns
lret
les
out
fwait
jbe
scas
iret
sub
sbb
add
repnz
pop
insl
test
cmp
aad
mov
cmp
add
leave
jmp
ljmp
in
or
dec
sub
mov
and
cli
sub
xchg
pop
sbb
sub
ljmp
jecxz
cmpsb
out
shlb
lcall
mov
ret
push
mov
daa
jo
lods
fndisi(8087
add
mov
inc
addr16
mov
nop
or
pop
mov
cmp
lret
out
cltd
mov
addb
cltd
cmpsb
shll
sub
insb
push
and
repnz
mov
push
aaa
mov
add
shlb
test
popf
into
push
adcl
push
imul
add
pusha
cmp
cmp
mov
dec
mov
sub
xor
incb
jbe
xor
rcl
xchg
sbb
pop
push
jle
push
xchg
fwait
xor
push
jns
cmp
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
rcr
dec
xchg
xchg
lahf
jge
jo
jo
sub
loopne
lahf
insl
gs
outsl
insb
cmpsb
mov
mov
into
push
pop
xchg
fcoms
xorb
xchg
jmp
dec
mov
xchg
jmp
jge
lea
jo
add
ss
jns
xchg
mov
xchg
xchg
mov
push
popl
xchg
dec
and
push
cmp
sti
lret
stos
cltd
int
cmpb
nop
scas
pop
shll
push
xchg
add
adc
cmpl
inc
jmp
inc
lods
add
inc
lcall
and
mov
aad
fnstsw
imul
rorb
push
leave
lcall
iret
lret
sbb
fildl
sarl
lock
sar
mov
fstpl
jle
fsub
pop
out
jne
xchg
mov
aam
xor
out
mov
repnz
add
mov
jnp
add
sahf
testl
xor
or
push
popa
and
and
int
jnp
mov
xor
cmp
sbbl
stc
test
fisubrs
mov
jnp
ret
inc
sahf
sub
mov
inc
push
add
out
xchg
xchg
pushf
xchg
dec
mov
pusha
xchg
gs
imul
in
push
rcrb
or
mov
inc
mov
jne
ljmp
xor
lret
sarl
mov
adc
lret
jle
jg
pusha
leave
fwait
mov
xchg
inc
jno
push
icebp
cs
mov
sub
mov
adc
in
imul
mov
push
loope
xor
int
sub
adc
ror
xchg
mov
sbb
stos
jno
out
pusha
mov
mov
cld
test
aas
mov
lock
mov
inc
and
adc
test
fs
jno
push
jnp
mov
sbb
adc
xchg
jge
add
int3
xor
shll
xor
repz
inc
sbb
sti
pop
adc
into
mov
aaa
jp
cli
imul
push
aaa
insl
lods
pop
addb
cmp
dec
or
and
notl
or
sahf
fidivrs
fmul
dec
std
popa
adc
mov
cmpsb
and
mov
js
movsl
dec
lcall
test
lock
iret
add
inc
inc
mov
addr16
sub
xchg
ret
mov
aaa
jmp
mov
out
jle
cwtl
ja
push
out
pop
imul
scas
hlt
mov
mov
notb
ret
sti
pop
scas
dec
arpl
insb
aas
test
les
xchg
std
dec
pusha
mov
dec
clc
insl
cltd
cmpsb
mov
mov
into
pop
call
jnp
lods
popf
test
or
mov
xchg
mov
inc
out
imul
in
std
push
pop
imul
rolb
insl
nop
pop
push
add
test
imul
or
adc
jecxz
push
cmp
stc
hlt
jl
xor
jge
push
test
cmp
bound
dec
adc
shr
jnp
mov
mov
xorb
lods
jle,pn
iret
mov
lock
mov
fidivs
pop
fisttps
xchg
xor
div
cltd
and
jecxz
cld
pop
xor
or
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
shlb
jge
jo
outsb
cmp
or
fdivp
cmp
roll
cmpsl
sahf
xor
cmp
ficoml
stos
insl
int3
fbstp
and
int3
mov
mov
mov
test
sub
repz
push
jl
lret
rclb
roll
xchg
pop
repnz
aas
add
or
adc
push
push
in
mov
les
push
aaa
mov
loopne
xchg
fists
fdivl
add
cld
pop
dec
fwait
test
jo
adc
jg
xor
jge
daa
push
cmp
inc
bswap
adc
lods
xchg
shr
mov
mov
jne
sub
pop
push
inc
push
in
in
sarl
add
roll
std
fdivl
xchg
adc
pop
push
inc
sub
xchg
push
scas
repnz
jae
lret
mov
repz
xor
mov
push
or
xchg
add
and
or
es
push
jae
scas
adc
dec
fisubrs
pop
dec
repz
daa
fwait
inc
pop
and
arpl
out
dec
addl
add
xchg
ret
dec
mov
sbb
adc
jo
clc
xor
test
sahf
jb
sub
movsl
ret
and
roll
hlt
daa
movsb
push
imul
push
imul
fistl
into
pop
das
xchg
es
repz
movsl
inc
lret
jmp
cmpsb
mov
fwait
push
test
push
push
pusha
gs
mov
mov
mov
ja
aam
push
sti
adc
lret
push
out
mov
mov
or
ss
and
sub
ljmp
pushl
mov
insb
dec
pop
sbb
jno
rep
orps
insb
dec
cmpsl
sbb
cmpsl
fiadds
fcmovbe
jmp
scas
daa
in
ret
push
xchg
aam
push
sti
mov
adc
scas
sbb
mov
repz
jbe
movsl
into
stos
mov
push
mov
push
movsb
incb
loopne
imul
scas
mov
adc
adc
mov
lods
lahf
subl
pushf
aas
mov
test
dec
cmpsb
test
rclb
loope
xor
inc
jmp
mov
mov
mov
aam
insb
xchg
das
pop
les
jns
movsb
testb
aam
xchg
push
cmpsb
jo,pt
push
outsl
fldlg2
mov
jle
dec
push
add
jle
cld
subl
jne
repnz
adc
jns
je
jecxz
fldl
pop
xor
or
in
sbb
in
cmp
mov
cmpsl
aas
xchg
rcrb
cltd
push
inc
ror
sahf
sub
aas
adcb
cltd
sbbl
cwtl
mov
mov
jmp
push
ja
adc
fisttps
adc
imul
aaa
mov
jecxz
icebp
repnz
push
icebp
add
ss
loopne
aaa
aas
mov
push
clc
and
fmuls
or
pop
imul
int3
push
sbb
loop
dec
std
xchg
dec
lret
fmuls
pop
xchg
test
push
lods
jecxz
out
loopne
repnz
mov
or
shrl
loopne
adc
popa
clc
sbb
stc
ja
sbb
sub
xchg
xor
imul
js
and
in
fbstp
jge
jne
xchg
fnstsw
outsl
xor
pushf
paddusw
leave
dec
mov
adc
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
adc
rorl
jge
jo
push
xor
jb
test
andb
dec
lods
imul
xlat
xchg
xchg
xchg
mov
lods
rclb
outsl
cwtl
mov
mov
icebp
aas
cmpsb
xchg
xlat
jle
testl
outsb
xchg
or
mov
imul
iret
cmp
jno
out
mov
jp
pop
jns
fstl
dec
shl
es
cmp
mov
outsb
aad
jg
shlb
arpl
inc
push
jge
int
mov
js
roll
inc
notb
push
out
jmp
int
inc
mov
pop
cmpsb
loopne
aaa
push
mov
dec
jge
and
and
dec
dec
inc
dec
cmpsl
jnp
xor
bound
mov
fcomp
mov
popf
pop
into
loope
and
pop
cmp
pop
jle
test
jle
sub
fucomip
xchg
inc
dec
out
push
adc
mov
mov
insb
cmp
pushf
mov
cmc
push
lock
push
cs
test
insb
cmp
call
dec
ja
add
dec
jmp
sub
sahf
movsb
dec
cltd
mov
in
sub
mov
les
mov
or
push
sbbb
and
cmpsl
xchg
rorb
popl
aas
ja
ret
lods
pushl
xchg
mov
add
push
dec
call
and
pusha
aas
adc
mov
push
jle
adc
push
inc
clc
sarb
cltd
cmp
pop
cmpsb
das
pop
or
push
push
inc
inc
or
add
mov
push
cmp
fldenv
push
hlt
lods
aam
into
test
es
sub
xchg
mov
mov
xor
inc
fiadds
adc
xor
not
stos
xchg
mov
scas
imul
mov
cmp
stos
mov
icebp
push
mov
jno
lcall
adc
ds
clc
scas
popf
sub
mov
sahf
add
imul
data16
stos
ret
sub
mov
loopne
divl
pop
inc
aaa
dec
enter
rorl
outsl
pop
xchg
push
ficompl
adc
test
shrb
daa
adc
push
xor
mov
jb
push
aam
test
in
push
pop
push
repz
push
lods
jge
sub
jno
sub
insb
jno
nop
push
jnp
pop
stc
mov
xchg
rcrb
sbb
into
dec
jbe
sbb
test
or
aaa
imul
cmpsl
dec
inc
imul
mov
jae
add
push
inc
repz
push
or
adc
lcall
cmp
popf
dec
push
cmp
inc
ss
adc
sub
xchg
js
mov
jne,pn
push
xchg
pop
ljmp
ficoml
fst
add
lret
mov
jbe
fcomps
pushf
sub
iret
jno
fucomp
adc
leave
arpl
sub
clc
stos
mov
loopne
adc
inc
mov
out
pop
popf
and
aaa
aad
cmpsl
inc
jns
pop
aam
fisttps
and
movsb
jo
test
pop
insl
pop
push
aas
fwait
insb
pop
mov
xchg
divl
pop
repz
mov
sub
loope
fistpl
dec
cmp
shlb
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
jns
push
mov
lahf
jge
jo
dec
pusha
fimull
and
xor
es
mov
shlb
push
insb
bound
cmp
jb
inc
popa
in
insl
repnz
fs
pop
push
aad
push
add
in
add
repnz
repz
or
aaa
pop
pushf
es
or
rcr
sub
les
sbb
mov
js
jmp
sub
push
sti
dec
fwait
add
testl
xchg
cmpsb
cmp
stos
mov
and
scas
mov
sub
ds
inc
cld
cmp
icebp
es
xor
or
cmp
je
fidivrl
jp
xchg
mov
mov
push
jl
mov
or
aas
mov
incb
orb
jb
or
add
popa
pop
dec
fcoml
out
ljmp
sbb
outsb
std
aam
cmp
ss
adc
pop
adc
jge
pushf
cmpsl
mov
aaa
jl
ja
in
mov
mov
sti
popf
xchg
mov
and
lahf
add
push
jg
mov
sbb
ds
enter
cs
mov
sbb
jg
arpl
leave
scas
push
jne
fsubr
dec
mov
push
aaa
insb
jge
fwait
in
es
or
inc
orb
shll
sti
inc
adc
push
pusha
fwait
and
push
jae
push
pop
pop
jbe
mov
insb
test
xlat
data16
sar
cmpsl
xor
divl
ss
xchg
jg
stos
ret
mull
mov
pop
inc
jb
mov
lds
mov
ds
neg
or
addr16
xchg
or
negb
inc
pop
imull
inc
rcrb
mov
icebp
addl
adc
mov
aas
inc
push
xor
idivb
fidivrl
movhps
add
mov
or
pop
mov
sahf
cs
cs
or
inc
scas
pop
and
js
inc
inc
ficoms
mov
jne
and
mov
insl
aas
inc
ja
testl
push
mov
shll
add
out
shrb
iret
jnp
insb
ror
sti
jno
mov
addr16
mov
pop
in
sub
es
jae
cwtl
es
insl
mov
mov
arpl
outsl
scas
mov
std
sbb
xchg
push
sbb
jne
jo
imul
inc
mov
mov
cwtl
xor
in
dec
push
push
dec
scas
push
push
and
push
lock
xor
and
ss
into
sub
sahf
out
dec
inc
test
jnp
imul
mov
bnd
insl
push
shl
xor
and
lahf
divl
test
subl
adc
xchg
or
outsl
ljmp
out
sub
cmpsl
lret
bound
cmpb
shlb
or
test
ret
push
dec
jp
jmpw
pop
lret
sub
jae
dec
jb
add
roll
sub
fstps
sbb
testb
hlt
inc
mov
mov
push
push
pop
sub
rcrl
add
push
shl
mov
in
mov
or
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
xlat
mov
out
mov
lahf
jge
jo
fidivl
mov
mov
dec
iret
iret
mov
ds
out
dec
pushf
fildl
mov
fcmovnu
icebp
inc
fs
sbb
in
inc
xlat
xchg
aam
mov
pop
lods
add
jl
subl
insl
xor
inc
inc
sbb
lahf
fwait
push
xchg
push
mov
ficoml
cwtl
cmpsl
cmpsb
jno
addb
lds
push
jge
dec
fbld
inc
arpl
cltd
or
jae
dec
xor
adc
adc
out
test
mov
enter
daa
push
scas
and
into
sar
popf
dec
test
jle
dec
daa
jmp
arpl
jmp
add
xchg
fdivs
xor
pop
xor
int3
add
mov
sbb
cmc
jo
xchg
and
xchg
adc
test
pop
xor
sar
mov
in
fstps
cmc
popa
loope
pop
jno
jb
inc
dec
mov
pop
mov
fistl
sub
es
or
dec
daa
lock
and
shr
mov
xchg
xchg
cmpb
stos
repnz
xchg
xorl
in
lahf
xchg
mov
mov
fcmovnb
sub
push
cmp
or
mov
inc
jmp
ja
jnp
sbb
mov
mov
sbb
and
adc
outsb
fwait
das
fwait
push
scas
push
pop
jmp
xor
js
sub
jg
mov
gs
sub
push
xchg
out
push
lds
pop
loope
cmp
pop
dec
pop
xchg
push
lock
loope
mov
sahf
addl
vmwrite
cmp
adc
inc
loop
xchg
add
push
test
or
or
inc
jne
cltd
inc
dec
addr16
mov
leave
rolb
in
dec
js
aaa
mov
aas
fstpl
sbb
ljmp
add
jnp
das
mov
push
dec
sub
scas
adc
push
repz
dec
fiaddl
jnp
fisubl
mov
in
iret
ret
or
aaa
xchg
xor
js
xor
addr16
insb
divb
cltd
das
pmaxub
loopne
stc
jl
nop
jg
adc
push
inc
cmp
inc
inc
rclb
jno
xchg
cmc
out
cld
rcr
and
jne
mov
sub
out
int
mov
out
dec
imul
dec
popa
xchg
push
push
dec
and
jecxz
or
mov
faddl
shl
test
pop
or
orb
ret
iret
cmc
gs
clc
cmp
xchg
xor
sub
and
filds
lea
jns
push
test
hlt
mov
enter
mov
shrl
testb
scas
xor
sub
mov
inc
pop
mov
hlt
inc
in
ret
mov
in
and
leave
out
sbb
fisubrs
push
adc
xbegin
insl
mov
adc
cmp
call
pushf
add
shlb
stos
clc
pop
xor
push
lea
lods
adc
lret
mov
adcl
add
rolb
xchg
fsubrs
fcompl
das
icebp
push
loop
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
js
aas
sub
jo
lahf
jge
jo
ss
inc
mov
pop
pop
jbe
mov
cmp
inc
int3
push
out
cli
xchg
lods
inc
cmp
xor
lods
std
cmp
ljmp
sbb
dec
mov
cld
in
dec
mov
call
mov
or
int
jne
sub
cmc
jne
scas
sbb
addr16
sub
punpckldq
cmp
jge
jge
in
negb
ret
cltd
mov
ja
mov
cmpsl
jp
sti
inc
scas
inc
xor
add
test
and
enter
mov
xor
shlb
adc
adc
outsb
add
incb
push
scas
sbb
mov
daa
fists
ja
cmpsb
pusha
mov
mov
push
inc
push
inc
sbb
cld
repz
in
jl
aad
add
adc
cld
fstpl
mov
xor
out
mov
pop
popf
xchg
jp
ljmp
inc
and
in
and
rcrl
stos
mov
sbb
insl
aad
add
mov
inc
xchg
mov
test
jmp
in
fcomps
pushl
cwtl
jae
push
sti
fldcw
mov
mov
gs
dec
movsb
scas
sbb
call
sti
push
into
fidivs
adc
cli
out
es
cmp
sub
inc
imul
aad
push
add
call
clc
ss
or
mov
push
jl
push
pop
test
inc
jb
adc
mov
fucomp
imul
ret
pop
test
xor
jne
inc
push
dec
dec
iret
aaa
push
aam
and
ret
push
popf
lret
sub
into
sahf
sub
and
pop
fs
cmp
jmp
sub
push
jno
movsl
pop
fs
cmp
test
xchg
push
xor
inc
loop
mov
jno
xor
fcmovnbe
or
lds
sub
roll
out
xchg
cmpb
hlt
mov
jb
jns
pushf
or
mov
or
mov
loope
xor
inc
push
cli
xchg
fldcw
mov
mov
or
imul
cli
xchg
dec
push
sbbl
push
jo
bound
out
pop
fistps
xchg
mov
ja
xor
cmp
int
in
push
inc
cmpsb
xchg
mov
dec
loope
pop
insb
daa
pop
mov
loopne
push
or
gs
loope
pop
add
cltd
test
rclb
mov
lahf
fld
cmpsl
rcr
push
mov
enter
inc
sbb
jp
cmp
xchg
push
cmp
test
les
or
inc
mov
into
push
loop
cmp
lahf
adc
ret
cmpsl
fwait
cmp
and
adc
pop
aaa
fisubrs
decl
test
and
and
shl
es
adc
js
or
mov
cmc
js
sub
adc
out
imul
aas
cmpl
push
aam
and
subb
out
sti
test
test
sbb
inc
or
pop
jne
sbb
jecxz
mov
mov
fwait
push
ret
sbb
pop
lock
fisttps
add
fcompl
icebp
into
decb
ljmp
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
xor
aaa
les
nop
jo
lahf
jge
jo
jmp
js
xor
shlb
xlat
jbe
jnp
mov
inc
out
xor
mov
or
test
loope
cltd
push
or
repnz
xor
bound
add
repz
outsb
sbb
ss
cwtl
test
jns
clc
ljmp
ret
shlb
fcomi
popa
cmp
add
mov
mov
call
inc
pop
clc
and
xchg
add
add
aaa
imul
and
or
pop
cmp
xorl
adc
jbe
add
push
in
xchg
pop
mov
and
inc
lods
daa
enter
out
sarl
jns
mov
enter
hlt
popa
popa
negl
jle
fimuls
addr16
jnp
mov
jge
adc
fucom
les
dec
xorb
sbb
rcll
push
or
int3
push
or
in
lods
leave
mov
or
push
sbb
inc
push
insb
and
lock
adc
sbb
xchg
cmp
add
stos
cmp
sbb
cmp
es
outsb
lret
xchg
out
inc
sub
and
notl
movb
push
jp
pop
popa
pop
mov
lahf
sub
call
dec
cwtl
adc
jae
and
mov
ret
fcompl
rclb
jns
mov
sbb
xor
ljmp
jb
pop
sub
and
dec
dec
mov
mov
xor
xor
cmpsl
mov
add
mov
pop
and
cwtl
movsl
mov
loope
jecxz
subl
aas
adc
and
stos
arpl
test
add
addl
aam
sarl
mov
sbb
lret
pop
cld
jmp
pop
add
out
leave
cmp
xor
outsb
aas
adc
sbb
in
daa
out
push
add
add
jno
mov
stos
fldenv
fisubs
mov
pop
test
mov
cmpsl
push
xchg
mov
popl
xchg
cmpsl
lret
lret
sub
and
aas
xor
stos
mov
cmpxchg
pop
inc
lahf
push
fnstenv
rolb
or
pop
popf
xchg
rcrb
test
mov
imul
inc
jne
imul
pop
mov
jnp
inc
pushf
daa
inc
push
rcll
xor
fisubrs
lea
push
mov
daa
jg
shlb
pop
push
pop
ret
jo
cmp
cwtl
jg
and
xorl
inc
pop
out
outsb
push
cmp
mov
cld
fistpll
cmpsl
loop,pt
adc
int3
add
or
lods
cmp
sub
xor
push
mov
xor
inc
leave
push
cmpsb
mov
xchg
sub
lea
pop
mov
xor
xchg
push
movhps
add
test
mov
sub
jb
fbld
daa
lock
ja
aaa
or
sbb
pop
lret
rorb
push
out
mov
push
xchg
out
test
inc
inc
jne
aaa
push
jge
fdivs
ret
pop
mov
jge
lods
sbb
jg
popa
pushf
notb
mov
jle
cmp
lret
bnd
xor
test
sbb
cmpsb
xchg
jg
mov
ja
push
in
xor
cld
add
mov
mov
lock
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
xchg
in
mov
sahf
int
int
das
xor
cmp
loope
add
into
mov
jnp
jmp
sbb
cmp
mov
aad
sub
out
outsb
gs
fcomp
jns
cs
movsb
cmp
cmp
xor
push
enter
and
xchg
loope
jns
in
xor
fsubs
push
push
mov
push
inc
aad
stc
sbb
push
fnstcw
and
cmp
push
cmc
push
or
mov
sub
sub
and
push
adcl
enter
mov
test
mov
and
inc
push
cld
xchg
out
call
stc
pop
jnp
mov
xlat
pop
add
mov
call
dec
sub
fadds
mov
rcll
adc
mov
loop
cwtl
mov
add
movsb
sbb
push
jle
mov
divb
and
in
or
loopne
xor
mov
adc
enter
dec
shll
mov
int
out
bound
xchg
movsb
nop
out
cmp
pop
inc
mov
xchg
mov
shll
or
mov
shr
flds
outsb
xor
push
das
movsb
adc
mov
insl
mov
push
daa
push
pushf
das
rcrl
pushf
or
jae
stos
pop
adc
shr
sti
jno
cmp
or
adc
and
cmpsl
adc
and
popa
inc
rorl
lock
sub
js
sbb
push
dec
and
stos
popa
dec
xor
jb
stc
cmp
jns
shl
mov
rorb
popa
xchg
and
sbb
sbb
data16
jbe
pushf
pop
dec
jns
jmp
imul
movsb
inc
outsb
ret
push
dec
xor
rcrb
decl
inc
mov
jbe
mov
movsl
enter
fisttps
add
xor
push
add
jmp
arpl
div
test
nop
mov
dec
in
xchg
push
fwait
test
push
xchg
fwait
and
repnz
out
gs
cmp
push
pushf
pop
pop
into
or
xchg
shlb
jns
je
inc
cmp
sub
jmp
xor
sahf
inc
cmc
jno
lahf
mov
lea
pop
out
sbb
mov
das
repnz
aam
push
xor
sbb
lea
dec
imul
pminub
mov
subl
inc
jge
mov
mov
cmc
inc
bound
into
pop
testl
repz
rclb
push
idivw
into
mov
xor
daa
pop
in
mov
pop
fnstcw
xchg
test
sbb
push
imul
inc
and
scas
adc
jo
cmc
sbb
jl
push
mov
mov
inc
push
popa
int3
cmp
inc
xchg
rcl
jb
hlt
cmp
jae
movsl
add
lods
in
mov
add
nop
int
jge
and
sub
cmc
shll
xlat
data16
test
outsb
sti
xor
push
in
sub
xchg
xorb
inc
xchg
inc
test
shrl
fwait
add
mov
in
decb
mov
dec
lock
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
fnstcw
cltd
jo
lahf
jge
jo
pop
jl
dec
test
sub
xor
mov
pushf
das
pop
rcll
fcompl
inc
outsb
xchg
in
adc
in
sahf
pop
dec
int
push
popf
lock
cli
dec
or
jge
mov
int3
dec
int
adc
mov
add
xchg
jo
movsl
test
das
and
mov
jne
push
add
scas
repz
into
xchg
ds
fsubl
pushf
cltd
push
lock
daa
mov
addb
iret
inc
fimull
push
cmp
sti
hlt
je
out
cmp
pop
xchg
push
and
cmp
jmp
out
pop
adc
gs
jbe
mov
dec
cmpl
lods
push
pop
cli
hlt
or
loopne
insl
pop
cmpsl
inc
and
and
js
push
jg
mov
mov
arpl
shrb
mov
out
ret
in
and
push
or
adc
not
out
les
cld
and
js
out
xchg
mov
adc
jb
mov
jb
ljmp
jg
rorl
push
xor
pushf
outsl
in
sub
popa
mov
xchg
pushf
lret
mov
mov
mov
mov
xor
imul
adc
inc
cld
data16
mov
jns
ljmp
ds
pop
or
int
out
xchg
xor
test
jno
test
lods
push
in
mov
adc
hlt
dec
and
mov
cmp
mov
stc
sub
mov
insl
ret
inc
xchg
in
in
add
jns
pop
in
sbb
aad
addr16
lret
adc
into
out
add
cmp
inc
mov
xor
jnp
jp
jnp
jge
mov
dec
fwait
xchg
lods
and
nop
pop
xchg
out
adc
test
cli
adc
or
sbb
mov
pop
xchg
mov
mov
jb
mov
pop
popf
movsl
movb
cwtl
rcl
adc
push
sbb
sub
jbe
cmp
xor
sti
or
jmp
loope
jae
mov
stc
sub
mov
leave
ret
or
repz
movsb
mov
or
sub
or
daa
push
daa
cmp
imul
jae
mull
inc
push
daa
imul
sti
fimull
ss
pop
shll
mov
icebp
imul
xchg
fwait
hlt
in
or
cwtl
es
outsl
rolb
jmp
les
lret
in
jnp
push
les
mov
lock
mov
testl
in
lret
or
mov
dec
mov
cld
push
dec
std
mov
dec
mov
pop
std
cmp
pop
clc
dec
ss
sbb
adc
or
cwtl
pop
out
dec
test
pop
xchg
repz
cmp
dec
push
mov
lret
pop
xchg
je
push
jb
jbe
stc
pusha
or
aad
sub
pusha
xchg
mov
dec
push
std
inc
mov
subb
mov
xchg
inc
sbb
test
repz
mov
orb
cli
inc
push
aaa
pop
pop
ss
aas
and
scas
int3
sub
mov
ror
mov
cmc
in
dec
xchg
fdivr
adc
scas
mov
pop
pop
jb
mov
add
sub
jp
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
dec
int
cmpsb
jo
ret
jg
jo
cmpsl
xor
or
lock
inc
fmull
sub
inc
xor
pop
stos
pop
shld
mov
pop
push
push
or
sub
pop
mov
es
sbb
ja
sbb
jo
jg
mov
xor
and
adc
das
jne
cmp
mov
sbb
add
mov
push
push
xchg
pop
insl
aam
cmpsl
nop
inc
pop
mov
js
mov
rcl
sbb
or
fcmovnb
das
lahf
mov
pop
sti
enter
mov
lods
jae
adc
mov
icebp
fstl
int3
mov
fistpl
mov
and
testl
dec
cwtl
bound
cmpsl
cmc
sbb
sub
add
ret
sub
push
pop
add
jmp
adc
stos
sbb
in
test
mov
mov
lret
imul
jmp
pop
jnp
cltd
inc
or
pop
cmpsl
fdivrl
lcall
sub
call
push
mov
ljmp
add
push
push
into
and
jne
insl
dec
lahf
cld
popf
lret
repnz
xchg
sub
jae
cld
dec
dec
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
fs
mov
cmp
jo
inc
cmpsb
pop
adc
xor
sbb
jnp
ja
stos
insb
lcall
test
dec
pop
add
rcrl
les
mov
adc
push
ds
negl
sub
dec
test
xchg
add
lods
sti
pop
fldcw
int
pop
js
xor
dec
data16
ret
push
lcall
dec
mov
sahf
and
out
mov
inc
in
fcom
imul
inc
jmp
movb
mov
fisttps
movsb
dec
jbe
daa
mov
pusha
mov
xor
loope
dec
xchg
out
jecxz
adc
push
ljmp
jno
adc
pusha
mov
icebp
stc
jecxz
sahf
inc
test
jbe
sub
mov
mov
pop
outsl
arpl
mov
lret
enter
aas
jnp
stos
pop
jb
pop
inc
aaa
inc
pusha
mov
xchg
dec
xchg
imul
mov
or
mov
cltd
outsl
inc
fisttps
enter
jb
jmp
mov
les
cmp
pop
pop
mov
mov
pushf
sbb
mov
dec
fwait
xorl
sti
std
or
sti
movl
and
lea
mov
jmp
rorl
sbb
mov
jo
jg
jo
or
cwtl
into
xchg
movsb
enter
movsl
adc
and
inc
and
push
or
add
nop
dec
lods
aaa
rclb
aad
cmc
fcmovne
ds
popf
sahf
mov
or
or
iret
cmc
insl
xor
mov
pop
push
or
adc
xlat
imul
loopne
fldenv
repnz
in
push
xchg
mov
jo
sbb
lock
fcoml
pop
test
cs
and
adc
add
das
cltd
xchg
sahf
jnp
add
or
insl
test
loop
xchg
inc
pop
sbb
enter
sub
out
add
ja
mov
lock
jno
cmp
es
ds
mov
out
jo
daa
mov
mov
stos
ljmp
xor
dec
popa
adc
add
xor
mov
adc
lock
aam
jbe
mov
imul
pop
cmc
and
cmp
pop
push
clc
fadds
mov
push
sbb
xor
xor
test
fistl
fcmove
adc
mov
cmp
jmp
push
jo
dec
jle
nop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
sti
mov
push
mov
jo
in
mul
jne
nop
hlt
mov
ret
mov
lock
or
shll
lahf
adc
push
nop
repz
push
fwait
ds
into
sub
loope
sub
popa
fnstcw
push
loop
mov
pop
test
mov
xor
push
dec
mov
stos
nop
std
jb
fcoms
daa
loope
shrl
shrb
jno
lahf
jl
dec
loop
sbb
adc
xor
mov
dec
out
xorl
ja
or
ja
fildll
jo
aad
jle
nop
imul
adc
rcr
xlat
daa
icebp
test
sbb
mov
or
cwtl
dec
ja
dec
cli
das
ja
nop
cwtl
nop
enter
dec
sub
cmc
jno
stos
test
jmp
or
sbb
popf
sbb
push
dec
or
pop
mov
fiaddl
movd
call
aad
sbb
loop
mov
dec
scas
fwait
out
mov
sbb
jge
hlt
subb
gs
xor
loopne
data16
jge
pop
stos
jl
push
adc
insb
mov
add
add
sbb
or
mov
pop
dec
cld
jno
test
cmp
adc
addr16
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
lret
xchg
and
jo
ret
jg
jo
in
sub
pushf
xor
inc
cld
cmp
jnp
testb
mov
xor
pop
ja
xor
fs
pop
test
pushf
or
notb
in
adc
cmp
sub
orb
or
movsb
test
pushf
jo
adc
ret
pop
pop
sbb
repnz
add
jae
and
jo
push
add
and
fwait
popa
mov
rcll
xchg
scas
inc
test
pop
xchg
xchg
sub
roll
lahf
push
inc
inc
mov
stc
nop
sbb
push
inc
lea
jle
data16
out
cwtl
xor
xlat
fldenv
imul
inc
arpl
push
test
and
in
sbb
pop
pop
xlat
inc
cmp
lods
decl
inc
sbb
push
dec
cs
mov
mov
in
xlat
cltd
cmp
add
nop
jecxz
mov
xor
movsl
mov
xlat
inc
push
mov
rclb
loop
sarl
jnp
and
sbb
es
or
shll
kxnorb
sbb
push
or
cmp
out
or
jae
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
cmpsl
dec
out
imull
jo
pop
lds
pop
mov
add
lcall
jl
add
lret
or
js
gs
pop
lds
loopne
mov
movsl
adc
inc
fistl
dec
inc
push
lods
call
inc
dec
inc
sbbl
push
repnz
aaa
mov
mov
or
sti
clc
shrl
ljmp
add
ds
ret
sbb
or
out
loope
mov
mov
jo
pop
cmp
inc
loope
cbtw
loope
mov
arpl
icebp
inc
add
mov
inc
and
mov
cwtl
inc
pop
cmp
push
mov
idivl
mov
das
test
popf
sub
add
cs
lret
adc
stos
mov
movsl
dec
notl
pushf
jae
add
mov
fnstenv
push
pop
out
cli
lcall
xchg
imul
push
outsb
push
pop
dec
pop
pxor
inc
inc
fdivr
in
hlt
xchg
and
jg
mov
dec
in
jge
or
xor
fwait
pop
mov
clc
inc
xlat
lahf
insl
out
iret
fsubr
xor
sub
xor
and
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
ret
mov
mov
jg
jo
sub
out
fsubrl
inc
sub
ja
mov
dec
test
ljmp
cmp
adc
jns
push
mov
sub
mov
adc
or
mov
add
scas
push
iret
sbb
andl
sub
inc
and
push
push
imul
sbb
sti
sbb
out
jns
jmp
cltd
mov
aad
popf
dec
mov
out
iret
cmp
add
xchg
push
jae
push
mov
fwait
or
data16
imul
jl
insb
in
and
sarl
adc
mov
iret
fwait
icebp
dec
in
ds
lcall
mov
mov
ret
fbstp
je
mov
jmp
scas
pop
xor
inc
imul
xor
scas
cmpsl
or
in
sub
dec
scas
add
lcall
adc
jno
fs
loop
and
outsb
mov
xchg
push
popf
mov
push
idivl
dec
jb
mov
or
or
into
push
or
fisubl
stos
mov
aaa
add
dec
rcl
jecxz
iret
cmp
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
cmp
or
jg
jo
cmp
xor
xor
jb
fmuls
inc
sbb
mov
pop
mov
mov
mov
std
pop
adc
mov
and
rclb
repz
jl
xchg
lea
xchg
jecxz
push
imull
jle
push
push
scas
lcall
sbb
jg
arpl
push
aam
dec
mov
ret
je
out
cmp
js
mov
mov
sub
cmp
mov
repz
test
pop
mov
jmp
fnsave
loop
stos
aad
jmp
or
push
in
adc
or
jecxz
add
push
test
jo
fldt
rclb
paddw
adc
addb
sub
shl
jae
sahf
fdivr
repz
pop
iret
mov
push
fpatan
add
push
pop
push
jns
out
aad
shrb
push
stos
fs
inc
pusha
jnp
shrl
jb
dec
outsb
push
pop
inc
dec
or
add
imul
xchg
xchg
in
inc
sub
shl
out
pop
push
jne
adc
pop
inc
xchg
dec
pop
xchg
fisttps
sbb
clc
repnz
cmpsb
xchg
lahf
subb
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
xchg
ds
stos
jo
ret
jg
jo
push
scas
cmp
imul
sbb
cli
pop
ss
into
pop
pop
add
inc
movsb
sti
pop
sarl
mov
ret
insb
jge
test
add
mov
stc
xor
rorb
inc
mov
leave
pop
stos
daa
xchg
bound
inc
cs
and
push
test
and
cmp
xchg
add
cli
loop
push
inc
or
sbb
repz
jecxz
in
xchg
ja
mov
jbe
ja
in
and
jg
mov
pop
lcall
xchg
incb
sub
lret
or
in
dec
adc
sbb
jbe
loopne
in
dec
out
xchg
stc
bound
movsb
std
mov
pop
sarb
dec
inc
or
mov
ret
inc
cmp
add
mov
insb
es
leave
and
push
dec
pop
or
sarl
sarb
mov
into
mov
inc
xchg
adc
popa
mov
clc
cmp
adc
inc
or
and
dec
or
push
add
xchg
out
insb
and
lods
popf
mov
jns
jmp
mov
ret
xlat
and
insb
pop
push
in
adc
rorb
js
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
ret
icebp
mov
jg
jo
adc
xchg
jp
rcrb
or
xchg
mov
inc
jp
cli
dec
pop
outsb
out
xchg
fwait
daa
ljmp
jl
dec
fisubl
pusha
data16
lret
mov
mov
pop
cmp
mov
sarb
movsb
repnz
push
inc
sub
ja
ret
popa
scas
jl
adc
aaa
lret
les
arpl
cld
push
adc
xor
cmp
out
adc
pop
or
in
xchg
sub
std
pop
adc
jne
pusha
inc
ret
dec
arpl
outsl
pop
xor
adc
sub
sbb
mov
add
xor
or
daa
and
mov
dec
push
repnz
push
mov
xchg
inc
sub
inc
mov
or
loopne
ret
fwait
iret
outsb
jbe
into
js
push
loopne
mov
lret
popa
inc
pop
jge
lds
xchg
sahf
int3
sub
mov
inc
mov
lcall
mov
repnz
mov
push
rcrb
addr16
imulb
push
or
sub
outsb
outsl
inc
movsb
out
cmp
or
sbb
pop
or
repz
pusha
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rorb
test
jo
cld
mov
mov
push
je
outsb
fldcw
lret
mov
in
sub
dec
jae
pop
adc
jg
mov
test
ret
orb
ret
sub
mov
add
mov
fwait
cmc
fisubl
pop
dec
notb
mov
sub
mov
cmpl
push
xor
xor
inc
mov
scas
pop
pushf
jecxz
cmp
test
jge
pop
jne
nop
enter
dec
sti
mov
out
inc
and
sub
call
fcmovnbe
jle
jnp
sub
jb
fildl
iret
in
push
test
std
mov
or
xchg
sbb
lods
stos
dec
scas
cltd
andnps
jne
fstps
xorl
iret
mov
aad
dec
cmp
pop
mov
das
in
or
dec
movsl
sahf
sub
inc
xchg
push
pop
vmptrst
pop
dec
lret
repnz
or
pop
pusha
jge
mov
ret
ret
cmpsb
mov
sbb
cli
pop
test
fwait
into
pop
sbb
and
pop
ja
inc
scas
hlt
xor
and
add
sbb
jae
sarb
movsl
cs
cmp
mov
jmp
inc
gs
icebp
imul
jle
ret
jmp
mov
jo
jg
jo
or
pop
mov
outsb
sub
icebp
and
pop
into
icebp
adc
and
cs
bound
cmp
xor
outsl
pop
test
and
fists
ljmp
jne
push
adc
scas
sub
hlt
mov
sahf
fsubs
mov
sub
mov
test
adc
adcb
movsb
bound
enter
sub
dec
pop
insb
jmp
int3
jae
es
pop
iret
mov
iret
mov
fcoml
faddl
jo
mov
xchg
les
cwtl
loopne
xchg
sub
pop
or
jb
xchg
mov
pop
out
fistl
lcall
mov
mov
pminub
testl
mov
mov
fcmove
das
sub
in
xchg
cld
add
stos
add
jl
sub
enter
pop
andb
pop
xor
leave
lods
pop
cmp
gs
push
fldcw
fs
iret
lret
addr16
cld
sub
dec
aaa
shlb
jo
mov
sbb
adc
stc
cmpsb
xchg
jnp
in
ret
mov
cltd
inc
jecxz
out
aam
gs
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
xchg
jno
hlt
mov
jo
call
arpl
pop
stos
repz
in
scas
pop
cwtl
add
outsb
xor
movsb
push
xor
mov
pop
test
mov
sti
or
loop
or
sbb
shll
mov
shlb
fstps
lea
jge
dec
daa
pop
push
leave
out
mov
xchg
push
test
xchg
fnstenv
pop
xor
cmp
mov
daa
xchg
leave
ljmp
inc
mov
sub
dec
stos
stos
pop
sub
movsb
arpl
stos
and
xor
lock
xor
and
es
xchg
je
lods
out
fwait
std
gs
mov
sbb
inc
mov
cmpsl
loope
in
fdivrl
ficoml
jp
test
add
lahf
out
push
ffree
push
push
push
insl
inc
dec
outsl
aam
roll
inc
cmp
andl
ret
mov
mov
sub
pop
cltd
sbb
mov
jp
lcall
pop
test
push
cmp
subl
mov
insb
pop
out
push
mov
lods
adc
jno
in
into
dec
rolb
popf
stos
insl
dec
inc
gs
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
cmpsl
mov
mov
jo
jge
jo
stc
mov
pusha
leave
enter
pop
js
lods
inc
lret
lods
repnz
inc
sbb
mov
nop
hlt
xor
gs
lods
dec
jbe
xlat
mov
push
les
lea
clc
sub
mov
fnstsw
inc
hlt
pop
inc
push
dec
push
scas
pop
or
andl
or
dec
inc
or
sti
test
mov
mov
into
js
js
stos
pop
dec
mov
rclb
xor
xchg
mov
aas
stos
add
pop
rcl
addr16
mov
mov
movsb
das
pop
lcall
cmp
mov
add
scas
pop
ss
adcb
push
xlat
sub
inc
mov
jp
cmpsl
or
mov
inc
fpatan
in
inc
sarl
test
mov
mov
lret
dec
cmp
je
setae
push
mov
cmp
pop
sub
sub
aam
dec
pop
mov
add
adc
jp
jno
add
adc
dec
hlt
and
shrb
pop
mov
orb
cmp
aas
sbb
mov
aaa
jne
pop
or
dec
arpl
xor
hlt
dec
mov
subb
xor
mov
fcom
fdiv
fisttps
and
pop
or
jg
gs
cmp
and
pop
and
inc
mov
add
pop
inc
lock
dec
push
cmp
mov
push
outsb
mov
js
and
push
push
cli
push
push
loop
sbb
jl
fidivrl
lods
and
jg
int3
gs
fsts
sti
mov
inc
insl
mov
mov
scas
push
mov
fldt
xchg
pop
loopne
jecxz
and
push
divl
push
out
inc
hlt
jne
xor
add
cs
arpl
hlt
adc
mov
daa
mov
rcl
movsb
inc
repnz
fildl
fisttps
cli
sub
jle
xchg
dec
jbe
jb
cmp
pop
cmpsb
imull
xchg
mov
push
or
frstor
loop
xor
jmp
jge
xchg
mov
mov
xchg
push
push
shrb
dec
lea
stos
cltd
imul
sbb
push
leave
add
int
xor
pop
push
and
movsb
scas
mull
xorl
sub
jl
imul
out
pop
iret
jns
rcrb
push
rorl
pop
mov
sbb
loopne,pn
cltd
ret
jle
push
test
pop
or
mov
adc
imul
rorb
mov
sbb
sub
pop
pop
xor
mov
imul
jne
sbb
xor
movsb
sub
xchg
mov
cmpsb
add
sbb
push
xor
sbb
add
pop
pushf
imulb
test
jmp
push
out
mov
jl
pop
imul
push
imul
std
mov
push
faddp
sbb
movsb
xchg
pushf
pusha
pop
jb
and
clc
pop
call
outsl
arpl
inc
clc
aam
cmp
sub
scas
adc
jg
cmp
mov
xchg
mov
inc
dec
push
cmpsb
jno
call
inc
cmp
ss
sqrtps
add
or
clc
les
sbb
jmp
mov
cli
xor
testb
fidivrs
xorb
jo
jb
cmp
sub
jecxz
leave
cli
sbb
int3
std
cmc
or
xchg
inc
outsl
inc
pushf
jl
xor
pop
sbb
js
mov
pop
jo
mov
repz
xlat
inc
dec
rorl
inc
gs
ret
lcall
adc
lahf
in
les
sbb
push
adc
out
mov
addb
xor
pop
pop
sbbb
sbb
js
out
pusha
es
mov
inc
stc
mov
push
xchg
push
xor
test
in
out
mov
cmp
mov
mov
out
jmp
push
push
inc
roll
lods
xorb
push
push
cmp
shr
mov
xor
stos
incb
jge
and
jp
cmc
and
mov
jg
jno
dec
push
fcmovnb
rolb
xchg
mov
xchg
jbe
insl
insl
sbb
lret
xlat
inc
das
ret
mov
mov
add
inc
fbstp
ss
cmp
ja
or
test
fstpt
dec
jecxz
mov
out
pop
cmp
or
xlat
and
into
sbb
popf
add
sbbb
mov
ljmp
lods
inc
imul
or
dec
mov
sub
add
lahf
mov
and
test
sbb
fs
mov
push
aad
rorb
add
test
rcrl
cmp
xor
mov
into
lods
int3
jg
inc
push
push
add
or
aam
push
rorb
jnp
xlat
imulb
shll
push
imul
push
into
sbb
xchg
in
push
xchg
mov
lds
nop
dec
sbb
xor
xchg
cmp
ljmp
mov
or
jbe
dec
mov
push
popa
xor
xor
jae
push
xorl
push
dec
xchg
inc
cmp
or
into
push
sarl
mov
and
addb
loope
push
or
push
es
pop
popa
sub
add
testb
aad
mull
or
in
adcl
stc
jmp
add
mov
jg
cmp
mov
jl
ficoms
add
ror
out
stos
jmp
mov
or
pop
lret
dec
jbe
and
adc
cmpsb
jno
mov
and
sub
call
arpl
xchg
cld
fldl
aam
cld
or
inc
aad
daa
lret
and
in
mov
aas
mov
push
mov
lahf
call
fidivs
sub
sub
lds
js
fsubrs
addr16
cltd
dec
push
leave
ss
outsl
test
mov
jecxz
and
jle
popa
sbb
mov
jne,pn
push
jnp
mov
mov
test
stc
movsb
aas
clc
fcmovnb
sti
add
and
jo
mov
lret
pushf
pop
xor
arpl
in
xor
mov
mov
lds
test
outsb
mov
movb
jnp
sbb
fiadds
add
mov
push
ljmp
and
daa
add
int3
outsl
ljmp
scas
jecxz
test
jno
inc
cld
xor
or
loop
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
dec
call
movsb
xor
jge
jo
jb
push
xor
dec
jge
adc
rorl
mov
sub
pop
xor
mov
or
es
nop
int3
roll
lahf
faddl
out
and
push
dec
xor
outsb
shlb
ds
cli
lods
inc
imul
push
negb
aam
inc
push
mov
ds
adc
test
das
repz
push
push
int
lods
mov
lods
popf
mov
inc
arpl
repnz
and
pusha
ds
idivb
mov
xchg
cmp
xchg
popf
cmp
cwtl
je
fadd
mov
jp
aaa
xchg
daa
popf
jae
and
insl
lret
jecxz
jecxz
cmp
mov
jne
mov
pop
mov
sub
mov
aam
push
dec
mov
xchg
add
pop
andb
jp
mov
mov
lods
pop
fstpl
test
popf
push
nop
mov
roll
in
cld
inc
or
ffree
fmull
mov
movb
int3
icebp
dec
loope,pn
jp
mov
data16
lret
ljmp
mov
lret
jb
dec
xor
fsts
dec
fcomip
out
das
insl
das
cli
cmpsb
pop
cmp
insb
cs
rcr
jns
bswap
sarl
lcall
stc
sub
es
xchg
xchg
shrb
scas
cwtl
test
fldl
sbb
xchg
or
scas
call
shrl
xchg
fcmovnbe
push
dec
sbb
jl,pn
xor
jmp
xchg
scas
pop
jecxz
xor
in
sbb
mov
bound
sub
pmullw
adc
dec
mov
jge
adc
into
out
inc
gs
out
jo
cmc
cmp
das
rolb
inc
mov
in
fsts
cwtl
xchg
sub
mov
adc
pop
fxch
mov
pop
dec
sbb
pop
movsl
jmp
fisttpll
leave
loope
or
lret
arpl
repz
movsl
fidivrl
push
shll
not
cmp
inc
subb
adc
dec
push
dec
lret
repnz
faddl
scas
je
inc
dec
xchg
push
push
push
mov
pushf
bound
aad
js
jnp
push
bnd
fnstenv
mov
cmp
xor
adc
mov
jp
or
inc
rcl
mov
pop
std
mov
fstpt
call
test
fdiv
push
movsb
repnz
jae
popf
adc
hlt
mov
sbb
popf
lret
xchg
fldenv
mov
sahf
roll
aam
rcr
fisttpll
ret
and
push
xor
clc
cwtl
insl
push
sub
stos
push
pop
mov
add
mov
shlb
adc
dec
lods
push
cltd
repnz
ljmp
data16
lcall
xchg
push
cs
cltd
sbb
test
xchg
push
xchg
divb
cmp
fld
ljmp
insb
repnz
add
jle
jp
pop
ds
inc
lods
fidivl
pop
popf
popf
lds
xorl
adc
xor
cmc
test
je
mov
sbb
xor
clc
dec
mov
scas
pop
daa
push
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
outsb
cmp
sub
push
xorb
je
sub
xor
out
out
nop
mov
cmp
mov
icebp
mov
push
add
inc
fs
popaw
cli
out
mov
push
add
add
push
xlat
mov
push
incl
mov
mov
loop
call
or
or
dec
lods
cs
rclb
or
dec
inc
sbb
inc
pop
or
xchg
nop
jmp
loop
addb
push
ja
psubw
xor
xchg
and
pop
jae
daa
dec
cmp
nop
push
cwtl
adc
aam
shl
jg
jp
xor
pop
dec
sbb
sahf
cmp
jno
jl
add
pop
test
or
call
clc
mov
mov
sub
and
loop
push
cmp
xor
xchg
dec
xchg
push
popf
test
and
mov
cmpsl
daa
test
jle
pushf
push
inc
cmpsb
jno
call
add
nop
sbbl
loopne
js
fimull
xchg
and
xchg
in
lsl
xchg
lahf
lcall
daa
and
push
xchg
out
push
stc
mov
sbb
mov
cld
fwait
dec
cwtl
xor
cltd
std
shrb
imul
push
cltd
sbb
add
cmp
test
cmc
shl
xchg
mov
push
jp
adc
aaa
cmp
fiaddl
pop
fst
cmp
stos
dec
xchg
sbb
rolb
inc
mov
jl
addr16
jmp
imul
push
stc
push
sub
mov
push
xchg
mov
es
lock
jae
jg
data16
xlat
push
shl
out
dec
mov
ljmp
mov
jb
xchg
pop
dec
mov
mov
fimull
stc
xchg
sbb
jns
cmp
clc
mov
cmp
call
sub
jmp
imul
xchg
mov
xor
xchg
les
pop
jno
xchg
cltd
aad
data16
inc
fs
inc
sahf
push
inc
push
xchg
xchg
ficomps
lock
mov
sahf
fistps
push
sub
in
and
pop
stos
mov
dec
cwtl
mov
int3
movsb
mov
ret
call
cmc
jp
mov
pop
jne
xor
add
mov
arpl
jl
mov
outsl
and
das
movsl
pop
inc
fsubrl
mov
mov
adc
nop
push
ljmp
clc
jg
cmc
adcb
imul
fstl
cmpsb
fdivl
push
or
repz
sbb
mov
push
xor
jg
adc
jb
pop
insl
or
ficomps
cs
out
scas
clc
add
insl
and
sub
leave
mov
pop
cli
ja
loop
movsb
das
mov
inc
xor
cmp
jo
adc
in
out
outsl
cmp
cmp
ret
idivb
add
adc
jl
add
cmp
xlat
sbb
jae
test
pop
into
xchg
mov
push
std
movsl
pop
movsl
call
stos
sub
ss
nop
sbb
lods
out
cmp
mov
pop
fidivrs
mov
sbb
lock
mov
loop
mov
sbb
mov
add
jmp
outsl
mov
or
imul
pop
and
jo
mov
jecxz
std
or
dec
and
popf
xchg
mov
or
cld
xor
fistps
subb
mov
pop
nop
out
sti
hlt
mov
pop
cs
es
orl
sub
icebp
lock
andl
push
jge
sti
cld
aam
lret
rcr
mov
ret
mov
or
in
ret
xorb
sar
push
pop
loop
cmp
fsubp
xchg
punpckhdq
inc
sub
xlat
xchg
iret
mov
mov
nop
sti
pushf
stc
adc
daa
or
push
sub
add
xchg
pop
pop
movsl
rorl
mov
dec
mov
add
push
inc
scas
fisubrl
xchg
pop
sub
sbb
push
jb
lcall
xlat
lods
xlat
aas
into
cltd
adc
mov
cmpsb
arpl
int
fldcw
aam
lret
outsb
inc
imul
or
shlb
mov
orb
push
popa
dec
stos
lods
xor
imul
and
cmp
lods
stos
fmulp
ss
mov
pop
iret
sbb
int3
pusha
or
adc
dec
xchg
lcall
pop
jb
mov
out
or
negb
popf
scas
mov
fnsave
or
sbbb
cmp
jecxz
or
mov
ds
inc
adc
ja
xor
insl
or
lcall
or
push
pop
imul
call
rorb
pop
mov
int3
jbe
sbbl
dec
xchg
jmp
adc
das
pop
in
mov
jecxz
jl
outsl
push
add
loopne
cmp
lcall
lcall
xchg
sbb
pop
mov
insl
nop
popf
data16
fdivl
jge
jecxz
pop
jle
pop
jle
stc
fisubrs
in
repnz
xchg
test
cmpsl
pop
lret
in
inc
jg
ret
sarb
xchg
testl
loopne
sahf
dec
sub
mov
aas
and
ds
add
dec
out
shll
xchg
xchg
mov
pusha
loopne
push
lret
in
lock
pop
outsb
movsl
xchg
add
leave
shlb
cmp
testl
ja
or
mov
jb
push
pop
dec
add
pop
xor
push
or
sub
mov
or
push
es
push
push
jno
movb
movsb
and
xchg
pop
jns
mov
adc
dec
mov
push
in
scas
fdivrl
and
mov
cmp
jmp
add
mov
scas
mov
pop
dec
jae
and
and
or
movsl
jle
xchg
fsubrs
jl
add
sub
or
cmp
out
xchg
add
mov
xor
dec
push
ja
inc
inc
pushf
je
popa
push
mov
ret
stc
fwait
cld
push
dec
sub
mov
xorb
mov
int3
popa
dec
movl
aam
mov
dec
lods
outsl
cli
fsubp
pop
push
mov
icebp
clc
jl
adcl
aas
test
inc
xchg
adc
mov
mov
jge
pop
sub
add
mov
push
ds
add
icebp
mov
es
divl
xchg
mov
adc
pop
ret
push
xchg
pop
dec
pop
or
adc
mov
imul
imul
bound
loop
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
mov
jo
jge
jo
add
xchg
cmp
xor
test
xchg
cltd
jno
shrl
mov
cmp
adc
xor
popa
jns
jl
inc
dec
pop
popf
test
std
popf
push
rorl
das
xorb
cmp
cltd
sbb
mov
adc
ret
cmpsb
leave
les
daa
lret
in
es
jmp
lret
pop
lea
adc
push
lea
test
xor
call
loope
jae
les
imul
pop
aad
or
cmpsl
jbe
push
jne
jae
outsl
mov
pop
lcall
incl
dec
dec
push
mov
sbb
mov
push
push
adcl
fnstsw
jno
lret
mov
adc
fsubs
out
ljmp
test
pop
imul
inc
mov
add
iret
mov
mov
or
xchg
sub
and
push
les
movsb
pop
xlat
mov
iret
add
dec
mov
mov
fnsave
pop
popa
lea
int3
cmp
sbbb
jecxz
ja
or
jge
inc
nop
ror
jae
hlt
push
jbe
icebp
mov
push
aad
push
sbb
addr16
mov
sbb
lahf
pop
jnp
pop
pop
push
shll
mov
pop
jge
pop
inc
in
inc
pop
imul
cmp
mov
aaa
lock
fcoml
cmp
shlb
jl
in
ljmp
in
sahf
mov
mov
popa
xchg
fidivs
fsubrs
sub
and
jp
fucomp
mov
je
mov
xchg
fcoml
lds
inc
out
aad
stos
test
jne
push
cwtl
leavew
mov
lods
mov
inc
lea
xor
mov
rorl
shll
cmp
inc
push
inc
cwtl
mov
xorb
insl
and
inc
sarl
fsubrs
or
leave
mov
and
inc
lock
sbb
xor
ret
pusha
jge
mov
mov
adc
test
adcb
loop
js
jg
cltd
loopne
mov
push
mov
xchg
ret
hlt
mov
out
in
popa
ret
shrl
in
je,pn
addr16
repnz
push
xor
scas
mov
push
cmp
adc
fsubs
pop
xchg
jmp
sahf
pop
daa
ljmp
loope
or
adc
das
mov
jmp
adc
out
pop
mov
jmp
fiaddl
xor
loope
dec
mov
mov
sbb
push
test
mov
xchg
cmpl
jno
pop
inc
push
repz
mov
adc
enter
outsl
ja
xchg
jmp
in
or
or
pop
adc
jl
add
lock
in
jb
bound
sbb
adc
pop
inc
in
mov
decl
or
popl
imul
add
cld
push
push
cmpsl
scas
xorb
das
mov
mov
fscale
or
inc
gs
out
imul
pop
and
sarb
xchg
push
push
inc
clc
or
ja
je
popa
push
cli
dec
mov
test
inc
xlat
jl
or
xchg
xor
inc
mov
sub
out
aad
lea
mov
frstor
bound
movsl
insl
mov
sbb
add
loopne
pop
jbe
dec
out
popa
arpl
js
lods
sbb
cmp
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
inc
sbb
arpl
push
dec
xor
push
shrl
fisttpll
popl
ret
add
repz
mov
adc
in
lcall
sub
sti
mov
pop
fdivl
sbb
dec
lahf
nop
scas
jecxz
cmc
test
data16
cld
aas
js
or
push
mov
cltd
add
sub
add
pop
mov
or
lea
mov
cltd
mov
cld
fcomip
xchg
jno
mov
scas
sbb
sub
cvtps2pi
into
test
add
or
mov
fst
or
jae
scas
push
mov
push
adc
xchg
inc
testl
cmp
roll
xchg
daa
jecxz
rorl
sub
fcoms
pop
mov
int
or
lahf
lcall
out
outsb
iret
lds
jae
mov
sub
les
jns
sbb
xor
adc
imul
mov
sbb
sbb
push
cwtl
nop
add
push
insb
adc
add
movsl
pop
loop
out
sahf
enter
fistl
push
mov
dec
xor
mov
pusha
push
into
enter
adc
shrl
jb
fwait
sbb
sbb
mov
dec
aad
sahf
notl
push
pushf
scas
sbb
or
idiv
push
lahf
repz
xchg
mov
push
popa
or
and
jmp
fcmovnu
cmp
pop
sbb
dec
and
stos
sub
in
jmp
mov
xchg
pop
lret
das
jb
mov
popa
mov
jmp
sbb
fbstp
add
or
ret
sbb
popf
test
int
insb
mov
inc
add
or
add
js
jb
or
dec
add
pop
inc
sub
ja
incb
fcoms
fucomi
jb
push
inc
gs
xor
xchg
test
xor
nop
repz
xchg
aam
sbb
mov
gs
mov
mov
xchg
xchg
mov
pop
insl
ret
aaa
les
pop
xor
icebp
dec
xchg
test
jmp
das
xchg
jp
and
xchg
xor
test
jno
mov
or
stos
int
pop
adc
ss
loope
fildl
push
pop
fidivrl
addr16
js
imul
sbb
jno
mov
hlt
in
pop
lock
add
in
test
jg
data16
subb
movb
jns
xchg
in
cmp
pop
cwtl
mov
and
mov
je
add
je
leave
insl
inc
and
ror
sbb
int3
push
push
jb
jg
mov
lcall
jecxz
lcall
flds
adc
mov
mov
mov
rcl
les
push
cmovno
xchg
cld
and
pop
stc
pop
inc
sbb
pusha
and
test
lahf
dec
loopne
outsb
imul
pop
shl
data16
mov
insl
adc
push
mov
jp
cmp
mov
dec
push
mov
aaa
cmc
dec
or
dec
push
hlt
stos
fistl
lret
shll
mov
fadds
and
dec
popa
mov
push
into
xor
mov
inc
inc
loopne
xchg
add
pop
sbb
aam
jbe
push
adc
sbb
test
jecxz
sub
sarb
je
mov
xchg
adc
push
lea
movb
in
pop
push
mov
xchg
icebp
std
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
jae
testl
loopne
aam
sbb
jmp
clc
ljmp
push
test
lds
sbb
test
cmp
mov
inc
jo
xor
popa
out
sbb
jg
dec
popa
je
bound
jo
push
push
data16
push
ror
mov
enter
jnp
or
cmp
fucomi
and
out
dec
push
or
inc
push
sub
fisttpl
test
mov
divb
out
jns
push
aad
insl
stos
xchg
or
add
pop
pop
adc
cmp
clc
adc
cwtl
shlb
lcall
mov
adc
pop
xchg
fwait
and
add
mov
sub
inc
dec
stos
in
mov
mov
xor
push
test
aaa
push
jne
mov
push
ret
and
push
mov
push
adc
addr16
outsl
push
add
btr
jns
xchg
cmpsb
jle
xchg
mov
fcoml
mov
add
loope
clc
mov
xor
lret
xchg
fistpl
jae
mov
movsb
arpl
idivl
xchg
mov
mov
es
repnz
push
mulb
adc
and
std
xchg
dec
add
ret
mov
cmp
push
movsl
popa
or
pop
adc
iret
icebp
imul
mov
mov
pop
fldl
fisubrl
lahf
adc
inc
les
in
ljmp
pusha
ja
add
mov
sbb
imul
sub
dec
push
sbb
add
mov
lods
mov
cmp
mov
std
mov
push
lahf
pop
repnz
stos
inc
mov
mov
or
pushf
add
les
ret
or
jmp
scas
inc
shr
mov
or
add
mul
and
fists
inc
pushf
js
test
push
pop
xor
scas
or
jb
push
cmpsb
mov
mov
pop
or
mov
sti
aad
mov
xchg
insb
mov
lods
std
imul
pushf
aas
sbb
loopne
in
pushw
ja
lcall
or
nop
test
inc
mov
jp
test
fsubrl
push
mov
hlt
or
ja
xor
inc
jno
pop
dec
sub
daa
xor
inc
out
test
in
mov
push
and
test
insb
lods
ret
sbb
jle
jne
or
adc
pop
mov
pop
ficoml
bound
shll
notb
mov
cmp
cltd
sbb
jb
xor
in
sbb
dec
sbb
xor
stos
inc
adc
adc
xchg
in
mov
pop
pop
cmp
or
xchg
sub
mov
mov
inc
mov
pop
cld
mov
xchg
pusha
js
inc
cli
in
int3
cmp
test
pop
xor
outsl
lret
ss
lret
dec
mov
sub
push
xchg
out
mov
pushf
mov
faddp
fdivrs
xlat
lods
pop
xor
xchg
add
clc
imul
int
imull
jns
cmc
and
dec
mov
mov
mov
cmpxchg
xor
fsubp
xorb
mov
inc
mov
jge
fnstcw
adc
scas
push
lahf
dec
xor
fidivl
push
and
mov
aas
cli
pushf
cltd
sahf
iret
aaa
jmp
test
lret
mov
xor
popa
cmp
lahf
xrelease
push
push
mov
mov
sub
add
mov
mov
mov
lcall
jge
es
adc
jecxz
imul
push
ret
cmc
std
inc
add
jg
add
rol
jp
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
in
jbe
jo
pop
jge
jo
cmpsb
xor
test
notl
out
sbb
jb
dec
outsl
cmp
cmp
lcall
enter
xchg
adc
int
xchg
mov
in
shll
lds
or
mov
cmp
or
cmpsl
mov
jmp
dec
ficomps
ret
cmc
push
xor
pop
and
jl
sub
sub
xlat
jmp
mov
loope
ror
stc
into
sub
fs
sub
testb
pop
imul
movsb
mov
loopne
jl
les
mov
jae
into
jnp
xor
insl
shr
push
cmp
xor
jne
mov
icebp
popf
call
insl
inc
add
lret
loope
ds
ja
nop
ds
lods
jae
add
je
mov
jmp
fisttpll
lcall
leave
fld1
xor
xchg
pop
push
insb
lock
scas
pop
fldz
out
add
movsb
xor
sbb
mov
out
cli
icebp
orl
jmp
inc
xor
dec
pop
xor
mov
daa
mov
stos
dec
adc
mov
fisubs
out
add
das
lods
rclb
sub
or
scas
dec
push
jle
and
test
pop
sub
aaa
rorl
inc
push
mov
outsl
xchg
subl
mov
inc
push
fistps
xchg
mov
int3
enter
mov
jo
filds
mov
mov
ss
subb
sbb
push
mov
outsb
jo
jns
dec
push
inc
push
or
fildl
cmpsb
push
and
cs
or
frstor
pop
jmp
jmp
je
or
sbb
adc
popa
mov
xor
or
adc
lock
inc
dec
mov
into
je
cmp
mov
xlat
xor
mov
movsb
pop
push
push
push
jo
into
cmp
inc
fwait
in
icebp
mov
push
decl
or
fimuls
dec
add
or
aad
xor
ret
lret
jns
sub
and
inc
mov
fisttps
dec
mov
adc
pandn
and
addr16
js
jo
fidivl
cmp
dec
jns
mov
mov
jl
add
xchg
push
dec
stc
mov
in
clc
out
lret
jmp
cmc
mov
jl
repz
jne
test
jb
insl
xor
add
in
sar
xlat
iret
mov
mov
cld
les
enter
int3
pushf
mov
or
into
aad
sarb
andb
mov
hlt
pop
sti
outsb
aas
mov
mov
insb
lods
or
add
cli
jns
jnp
or
lods
insb
pop
out
dec
adc
or
and
mov
mov
add
jge
push
addr16
mov
in
outsl
jno
gs
imul
xchg
test
jecxz
or
cmp
cmp
lahf
mov
cli
lods
adc
outsb
sub
mov
je
mov
push
xor
xor
repnz
stos
mov
bound
lret
adc
mov
jp
ljmp
cmp
add
pop
xor
mov
pop
jo
cmp
jo,pt
mov
push
xchg
sub
sub
xchg
outsb
sbb
pop
ljmp
js
scas
cltd
popa
mov
nop
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
cmp
jo
pop
jge
jo
pop
xchg
ret
loopne
push
xchg
pusha
add
lret
xor
bound
shrb
sbb
jno
shrb
repz
and
fisttpll
push
fwait
xor
enter
mov
cwtl
gs
jmp
jecxz
repnz
adc
jbe
mov
push
push
loop
mov
stc
lds
sbb
in
test
pop
mov
xor
pusha
ljmp
adc
icebp
out
aad
adc
mov
ja
inc
adc
xor
xchg
in
add
pop
and
sub
ljmp
mov
or
pop
xor
roll
fildll
adc
fdivp
sbb
in
mov
mov
mov
mov
mov
sbb
xchg
int3
ret
js
pop
cltd
test
icebp
inc
rclb
in
insb
adc
lods
lods
mov
sar
test
es
inc
jg
mov
into
loope
dec
retw
dec
sbb
fsub
stos
cli
or
adc
outsl
push
adc
jae
push
es
push
pushf
sub
cli
dec
lea
ds
cwtl
jb
shrb
sub
dec
xor
dec
loop
dec
loopne
and
cli
sarb
sbb
dec
shrb
sub
int3
cmp
aas
push
sub
mov
push
rcr
das
shrl
imul
mov
mov
orb
mov
ret
push
push
fstpt
vfnmsub231pd
shrl
sbb
and
mov
push
test
sub
cmc
xor
push
les
cmp
pop
jle
insb
adcl
ret
loopne
idiv
stc
sbb
xchg
scas
mov
xchg
cs
test
push
push
and
mov
xchg
sbb
cmp
mov
jae
xor
mov
inc
lcall
sar
adc
lret
bound
fldt
push
mov
mov
rol
movsb
fistpl
adc
fdivl
add
push
pop
pop
cmp
mov
jl
dec
sbb
pop
pop
test
jae
lods
add
lret
jle
addr16
rcr
loopne
repnz
push
adc
xor
frstor
dec
cwtl
mov
lea
pop
out
mov
imul
lret
sahf
dec
push
bound
gs
and
in
adc
andb
jne
add
test
cld
nop
aaa
jg
dec
ret
shll
jmp
xchg
test
mov
stos
test
hlt
mov
es
push
dec
and
aad
mov
mov
fucomi
clc
test
sub
mov
mov
mov
xor
movsl
pushf
mov
sti
add
popa
or
icebp
lock
push
sbb
into
in
icebp
push
adc
mov
cwtl
fs
dec
cmpsl
sahf
add
xor
lea
adc
testb
scas
or
sub
cmc
pop
jne
lcall
rol
xor
fiadds
pop
mov
ja
dec
add
test
pop
lods
into
or
fadds
push
mov
imul
add
lds
cmp
std
push
pop
adc
rcrl
aad
ja
or
xor
notb
push
mov
or
jnp
and
push
pushf
sub
scas
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
inc
push
adc
inc
pop
jo
mov
mov
push
inc
popa
fidivs
xlat
popa
dec
pop
shlb
xor
lods
pusha
xchg
lret
adc
dec
jo
loopne
adcb
sbb
int
add
push
mov
dec
in
or
int3
hlt
jecxz
stos
lds
lds
push
push
cmp
insl
loop
ss
call
pop
lock
addr16
fwait
jge
fisttpl
stc
int
cmpsl
pop
sub
push
sbb
dec
inc
mov
xchg
xchg
mov
cmp
orb
inc
jmp
out
sbb
out
inc
jge
shlb
adc
cli
daa
dec
mov
test
int3
lret
stos
shl
mov
outsb
and
stos
pop
or
cld
inc
or
inc
pop
add
sub
or
lock
ret
lcall
mov
cli
bound
jns
ss
imul
add
pop
inc
mov
pop
loope
inc
scas
add
rcrl
jno
aad
les
jl
sub
stos
mov
fldl
mov
lcall
out
mov
mov
pop
insl
and
sarl
imul
sub
xor
or
aam
lret
jecxz
cmp
outsl
dec
in
aas
mov
fidivl
mov
adc
xchg
adc
mov
fnstenv
into
leave
or
xor
mov
dec
mov
insl
iret
mov
and
lret
out
sub
push
andb
mov
mov
cmpsb
dec
push
les
popa
fldt
adcl
pop
addr16
adc
nop
xor
sbb
mov
inc
sub
cmp
sbb
xor
shl
lcall
shl
dec
pop
aam
fdivrl
movsl
sbb
adc
sub
push
loop
js
or
and
push
clc
mov
xor
addl
cwtl
addb
add
mov
xor
jecxz
inc
repnz
adc
cmp
add
push
xchg
dec
insl
shlb
push
or
clc
je
sub
inc
imul
and
dec
push
mov
fbstp
pushf
dec
add
mov
sbb
sub
push
mov
fwait
and
imul
jecxz
adc
rolb
testl
dec
xchg
push
sub
inc
data16
xor
fldl
add
sbb
dec
cmp
addr16
adc
fcmove
in
in
mov
xor
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
ljmp
jo
jle
jo
aaa
xchg
pop
out
ficompl
test
jbe
jl
mov
or
push
addr16
aam
adc
jae
test
mov
icebp
xchg
cmc
sbb
lret
sub
lahf
cmpsb
pop
sarl
das
add
fmulp
aas
jbe
dec
in
sbb
and
mov
inc
mov
cmp
shr
ret
std
int
jmp
mov
stc
mov
push
inc
xor
sahf
into
lock
pop
or
add
mov
fwait
cwtl
pop
cltd
popa
js
mov
add
mov
cmpsb
sarl
pop
shlb
xor
lret
addr16
push
sahf
mov
sbb
adc
movsl
sbb
jge
popf
dec
mov
bound
sub
jg
in
adc
mov
xor
sbb
cmp
dec
icebp
pop
es
add
push
sbb
imul
pop
inc
push
adc
outsl
add
shr
data16
fs
jnp
lcall
pushf
or
xchg
mov
fidivl
mov
std
movsb
movsb
jle
push
aad
mov
pop
mov
les
ret
repnz
cmc
imul
push
rolb
lds
mov
dec
enter
xchg
add
imul
mov
lret
fcomps
add
mov
gs
inc
and
add
iret
or
jg
imul
stos
lahf
ds
cmp
pop
add
dec
pop
mulb
xor
or
jae
pusha
mov
ret
fsts
loopne
ja
cs
xor
sub
call
popa
and
push
loopne
sub
push
sahf
xchg
push
jne
cmp
popf
clc
xchg
data16
push
and
push
and
dec
dec
popf
mov
sbb
inc
sarb
gs
into
cs
outsb
pop
rcrl
mov
gs
int
xchg
push
cmp
jno
rorl
dec
ljmp
xor
mov
lahf
mov
jl
and
lahf
push
mov
add
sbb
or
adc
mov
lods
and
jecxz
and
add
sub
mov
fucomip
lcall
mov
pop
push
loope
mov
cmpsl
push
mov
sarl
jnp
jns
leave
fcmovu
scas
cwtl
lret
lcall
and
xor
mov
mov
je
nop
mov
std
dec
stos
or
ret
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
xchg
popa
adc
mov
into
movsb
xor
pop
push
and
dec
inc
mov
inc
out
jns
negb
daa
mov
std
pop
add
mov
mov
or
mov
roll
test
push
xor
mov
into
mov
mov
addl
mov
les
or
pop
psrlq
movsb
movsl
push
lock
mov
mov
mov
sub
mov
mov
jle
sbb
push
pop
sahf
inc
pop
subb
add
xchg
jl
fnstsw
icebp
jno
inc
loopne
dec
push
pop
popf
add
mov
sbb
imul
les
and
cmp
cmp
mov
fldcw
out
sbb
insl
mov
push
mov
xchg
xor
jbe
sub
jns
cwtl
test
xchg
fcoml
fs
push
jo
xor
je
in
sub
adc
and
in
push
cmpb
jmp
jecxz
addb
loop
cmc
int
imul
jle
std
es
movsb
lds
pusha
test
movsb
cli
aaa
mov
lret
inc
sub
jecxz
aam
adc
sti
fistpl
inc
dec
sub
movsl
xchg
sub
icebp
fiadds
xchg
sub
adc
add
div
adc
out
adc
push
bound
sub
hlt
dec
jae
xor
jno
jae
daa
sahf
enter
faddl
sti
jecxz
sbb
push
jecxz
ret
je
pop
stos
out
popa
in
pop
insb
dec
and
jp
sar
inc
pop
imul
daa
scas
adc
shll
push
sahf
sub
sub
insl
pop
push
adc
out
cmc
add
mov
push
das
adc
mov
jb
inc
es
dec
pop
jmp
xchg
sub
xchg
cltd
add
sbb
cltd
mov
popa
in
cmp
jmp
inc
das
outsb
cmp
jnp
mov
fidivl
pop
xchg
add
xor
pop
pop
mov
jmp
std
xorl
jmp
sbb
pop
stos
test
sub
jmp
jb
push
shll
xchg
or
cmp
mov
dec
sbb
push
lret
pop
dec
jo
lret
mov
xchg
inc
push
pop
push
push
xor
lahf
xchg
enter
pop
sub
pop
rcrb
push
mov
pop
sub
pop
jns
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
pop
in
adc
jo
jle
jo
push
xchg
ss
xchg
cmp
aad
pusha
pop
fiadds
lods
inc
xchg
cmc
jp
mov
into
loopew
fidivs
inc
and
flds
mov
inc
add
in
add
pop
pop
jg
jp
xlat
sbb
out
and
shll
push
and
mov
add
popf
jmp
lret
push
add
call
xchg
and
jo
dec
dec
rcrb
das
into
push
aad
repnz
ret
push
adc
das
add
push
sub
cmp
pop
mov
jo
fdivs
adc
mov
and
lds
mov
and
dec
pop
mov
push
adc
pusha
pop
fucom
xor
gs
int
daa
fnsave
in
cmp
fisttpll
cmp
pop
dec
loop
lock
and
cmp
dec
movsl
add
sub
scas
and
push
lds
xchg
testl
mov
shll
data16
cmp
ja
xchg
or
inc
aaa
test
sbb
bound
mov
popf
hlt
orb
or
and
outsl
ret
sub
dec
out
ss
jg
sbb
imul
cmc
lret
cmp
ret
cli
push
lahf
inc
outsb
leave
dec
clc
shll
in
inc
or
ljmp
dec
xchg
xor
lcall
jne
lahf
xor
ret
into
int3
jl
fwait
pop
fmuls
push
push
in
jle
inc
testb
mov
out
or
xchg
xorl
dec
es
cmp
popf
insl
pop
mov
cltd
jp
cmpsb
ret
enter
call
bound
dec
jmp
mov
pop
and
mov
mov
adc
jecxz
sti
jae
dec
or
lock
mov
test
xchg
rorl
jmp
dec
ljmp
cld
in
jge
out
xchg
cmp
test
clc
inc
push
mov
fucomi
shll
adc
cs
aaa
cmc
lds
pop
sub
jne
inc
fiadds
mov
data16
and
and
xor
or
mov
push
fcompl
xor
loope
xlat
aas
dec
xchg
mov
ror
push
pop
adc
mov
pop
fsubs
sub
imulb
sbb
lock
add
lods
repz
sahf
jecxz
mov
lcall
dec
cmp
cwtl
push
inc
outsl
jg
cmp
lods
push
xchg
into
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
bound
jo
mov
sarb
sub
arpl
loopne
fwait
outsb
outsl
insb
push
xor
and
movsl
xchg
ss
add
ss
pop
arpl
jb
flds
mov
inc
fwait
push
sbb
cmp
enter
in
sub
and
cmp
jge
lahf
stc
cmp
xorl
jno
out
das
cltd
call
dec
add
std
pushf
mov
sbb
sar
push
inc
jnp
sahf
mov
insb
or
mov
cmc
std
jl
add
test
adc
test
xchg
lret
mov
pop
imul
inc
mov
and
mov
ds
pop
test
lock
pop
add
fldcw
mov
inc
xchg
xor
mov
push
push
rcl
cmpl
test
mov
movsl
xchg
mov
push
cmp
fidivrl
sbb
xchg
dec
mov
sbb
xor
movsb
jae
test
fstl
shrl
xorb
insb
lret
shlb
mov
jmp
push
js
dec
jbe
lcall
and
jo
out
push
ljmp
xchg
sub
mov
mov
nop
adc
mov
dec
or
fisubl
test
adc
inc
xor
scas
mov
adc
inc
sbb
mov
hlt
movsw
ja
mov
lods
fdivl
lcall
test
test
fcomip
push
sub
scas
leave
shrl
lock
adc
inc
movl
scas
mov
sbb
mov
sub
hlt
dec
into
mov
pop
imul
sub
bound
cmp
pop
push
aad
push
pop
jmp
ror
or
out
mov
and
jne
pop
push
xlat
scas
iret
mov
inc
mov
test
int3
jne
aam
sub
lahf
nop
or
or
ss
jg
jnp
cmp
xor
pusha
or
sahf
dec
jle
adc
insl
lock
mov
mov
sbb
rorl
mov
sbb
fsts
push
insb
jo
mov
lds
push
jo
mov
test
push
xor
ds
pop
sub
rolb
arpl
out
dec
sar
lods
push
cmpsl
add
xlat
scas
orb
es
and
adc
inc
out
movsb
in
xchg
add
pusha
orl
rcrl
dec
cltd
mov
cmp
jne
into
lea
lods
fs
das
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cmp
jo
mov
insl
add
push
or
mov
adc
mov
notl
mov
xor
rorb
mov
int3
and
inc
push
push
sub
jo
xchg
mov
cmpsb
enter
and
sbb
arpl
cltd
and
data16
pop
add
sub
out
sub
cwtl
push
adc
xchg
adc
test
fsubrl
pop
xor
ljmp
in
cwtl
loop
gs
sub
gs
lds
cmp
out
mov
pop
jl
add
imul
rcl
in
call
dec
xchg
and
ss
out
push
outsb
dec
inc
pop
add
xor
xor
stos
insb
insb
xor
jg
or
enter
and
repnz
repnz
jge
frstor
cmc
push
jne
xor
pop
and
out
mov
es
out
sbb
icebp
add
xor
fldenv
mov
cltd
dec
nop
xor
out
testb
mov
in
sub
push
dec
cld
adc
movsb
add
out
cmpsb
mov
bound
push
pop
mov
fcoms
push
sbb
loopne
sbb
jno
adc
movsl
in
inc
or
sub
in
out
mov
test
push
scas
jle
mov
int3
out
popf
flds
mov
add
mov
rolb
xchg
leave
sub
mov
ds
mov
inc
pop
roll
mov
mov
lods
xor
xchg
push
pop
shl
ret
push
popa
in
xor
jno
lcall
xorl
mov
jbe
mov
mov
cli
sub
push
pop
inc
cmp
pop
imul
pop
daa
mov
repnz
test
loop
dec
das
mov
mov
inc
addr16
adc
and
sahf
inc
test
xchg
fwait
jb
mov
popa
adc
stos
jo
std
cmovns
lcall
xchg
sub
popf
inc
sbb
cwtl
clc
leave
add
shlb
xchg
cwtl
pop
lret
enter
das
pop
mov
mov
and
insb
inc
xchg
popa
mov
push
dec
add
out
sub
rorl
pop
scas
fisubrl
aad
stos
aad
jp
ljmp
mov
cmp
flds
xlat
imul
enter
pop
sub
mov
inc
adc
dec
ljmp
cli
scas
fwait
es
mov
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
stos
in
outsb
jo
mov
scas
push
int3
shlb
jmp
cltd
stos
sub
inc
out
and
movsb
loopne
xor
cltd
dec
aas
stos
rol
hlt
sbb
push
roll
sub
movl
in
sub
jecxz
sub
sahf
jge
push
xorl
lods
mov
pop
pop
xchg
in
inc
pop
enter
xchg
inc
sub
xchg
mov
xor
adc
cltd
xchg
std
adc
sbb
in
pop
dec
loopne
in
xchg
insl
mov
mov
shll
sti
lret
data16
scas
inc
cli
shl
lahf
jns
test
mov
fwait
in
or
mov
fwait
mov
loope,pt
cwtl
xor
sbb
and
rorl
repz
xchg
sub
aas
lret
mov
push
push
xchg
sub
lret
cmpsb
and
or
fidivrl
fnsave
icebp
xor
push
add
loopne
xchg
bound
cmc
shll
outsl
mov
aas
inc
mov
push
mov
repnz
stos
lock
dec
push
xchg
insb
arpl
sti
cmp
bound
cmp
push
inc
pop
dec
sbb
test
bound
fisubrs
push
dec
xchg
pop
lret
dec
cmp
mov
call
xchg
ret
daa
fsubr
xchg
dec
icebp
cmpsl
fwait
add
cwtl
imulb
sbb
xor
inc
subl
push
push
inc
js
loop
mov
cmpl
or
pop
cmp
sub
push
push
cmpsl
dec
and
push
std
push
mov
mov
orb
cmp
mov
dec
or
jecxz
fadd
popw
outsb
aas
repz
xor
jo
mov
ss
leave
negl
xor
lgs
push
imul
mov
or
aas
push
aaa
xorb
sub
push
cltd
jle
cmpl
sbb
cwtl
mov
das
test
scas
push
mov
js
jbe
loop
mov
mov
popf
pop
push
jl
push
hlt
sub
cli
ss
xor
add
es
cwtl
scas
xchg
pop
js
or
lods
mov
addl
lcall
xchg
sub
inc
push
addr16
cmp
mov
fbld
ss
insl
push
push
arpl
outsb
ljmp
pop
mov
dec
repnz
jno
sub
iret
push
lret
in
jmp
dec
mov
add
pop
daa
imulb
xor
jmp
mov
xchg
pop
shlb
xlat
adcl
cmp
add
aam
sub
sbb
clc
jne
pushl
jmp
and
lods
shrb
in
dec
dec
int3
or
mov
arpl
in
xor
and
ljmp
pop
rorb
jo
adc
sub
jg
out
mov
or
dec
adc
xchg
xor
dec
sbb
push
scas
sar
or
dec
mov
sub
pop
push
jo
push
cmp
dec
cmp
int3
bound
jp
push
std
aaa
lock
ffreep
mov
mov
dec
dec
lret
xchg
call
mov
dec
adc
fcmove
ficoms
sub
or
or
mov
cli
out
pop
sub
rcr
sti
cmp
jg
pop
nop
adc
mov
sahf
inc
out
dec
lret
sbb
adc
stos
ja
pop
inc
repnz
mov
les
test
mov
jno
push
push
clc
inc
jl
add
jne
or
ret
orl
imul
mov
push
push
out
mov
mov
in
sub
insb
cmpsl
imul
ficompl
jne
insl
sti
push
mov
dec
fnstcw
insb
or
sahf
cmp
test
jne
jnp
fistl
or
fmull
popa
push
into
sbb
scas
cmp
lock
mov
adc
add
xor
pop
loop
iret
xchg
jnp
push
cmp
popl
loopne
push
dec
lcall
shrl
mov
scas
je
es
ljmp
stos
jo
cmp
sub
jae
mov
mov
fstl
outsb
lods
fcom
inc
out
push
mov
jb
add
dec
mov
stos
je
add
in
xchg
das
mov
cmpsb
mov
dec
inc
mov
or
lret
clc
je
pop
mov
andb
std
dec
adc
data16
mov
inc
cmovo
fdiv
mov
pop
xor
iret
jge
cmp
cwtl
or
lcall
and
mov
shlb
movsl
add
and
cli
or
mov
and
xchg
lahf
ljmp
lahf
push
popa
mov
popf
sub
mov
mulb
mov
pop
mov
xchg
test
insb
adc
sub
push
int
mov
pop
out
push
mov
mov
and
addl
mov
stos
jnp
lea
daa
cwtl
xchg
shlb
sbb
fs
xor
enter
push
lahf
fadds
fldcw
and
mov
xor
jns
dec
cmp
rolb
jmp
pop
insl
and
xor
insl
jp
or
mov
mov
jo
jle
jo
sbb
jg
scas
adc
ror
pusha
cmp
sbb
into
add
jp
push
outsl
push
xchg
sub
dec
test
add
int3
dec
movl
push
mov
pop
mov
or
ja
ja
sbb
mov
mov
inc
ret
jecxz
adc
cmp
cmc
mov
ret
adc
pop
inc
lods
sbb
mov
idivb
xchg
arpl
hlt
int
xchg
jl
push
inc
fadds
fmul
mov
xchg
pop
jne
scas
sbb
adc
in
leave
pop
outsl
out
pop
xlat
cltd
add
xor
dec
mov
repnz
adc
repnz
ret
loop
mov
pop
add
jo
ds
stos
jo
popa
cs
pop
jg
icebp
mov
inc
push
xor
add
sub
mov
pushf
xor
mov
mov
mov
scas
cli
mov
leave
icebp
shll
jmp
in
popa
ret
and
and
mov
test
stc
ret
sbb
mov
jg
mov
xchg
addr16
jnp
lds
sub
dec
sarb
xchg
sub
push
push
jns
pop
lahf
inc
imul
add
loop
pop
inc
xchg
aam
mov
mov
mov
lock
mov
out
xor
out
jp
lds
xchg
dec
lds
mov
mov
les
std
testl
leave
xchg
sbbb
or
fstps
shl
sub
and
mov
xchg
adc
ss
int
in
cld
jb
xchg
cltd
mov
leave
int
cltd
movsb
jno
cwtl
pushf
repz
push
xchg
cmp
fidivs
in
jbe
leave
push
xor
ret
lret
lods
xchg
stos
push
mov
sub
push
clc
dec
addr16
sbb
mov
mov
xor
pushf
enter
or
pop
call
inc
andl
scas
rcrb
pop
pop
scas
push
sbb
sub
pop
fmulp
and
sub
andb
insb
stos
movsl
adc
sbb
mov
stc
add
insl
and
cmp
jbe
jns
iret
or
fwait
insb
mov
push
dec
cmp
fsts
xchg
sbb
mov
cmp
andl
jns
jp
lods
das
cmp
out
iret
dec
push
xor
movsb
bound
jbe
adc
or
mov
lds
insl
movsl
or
into
ljmp
call
stos
notb
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
mov
jo
mov
mov
in
mov
jae
xchg
push
mov
push
adc
xor
mov
xor
mov
rorb
lcall
dec
scas
lahf
add
inc
pushf
ret
js
ret
pop
in
stos
mov
data16
rcrb
sub
test
mov
loop
mov
dec
or
repz
in
mov
push
mov
jp
fnsave
das
mov
addl
pop
ss
or
sbbb
sbb
jne
cmp
insl
outsb
mov
outsb
loopne
sub
les
aas
pop
jg
addr16
imul
xor
insl
or
insb
sbb
xor
add
mov
xchg
test
cmp
fwait
xor
inc
xchg
cld
jl
pop
jge
in
daa
daa
cmp
lock
mov
push
cmpsl
adc
sbb
jg
dec
popa
out
movsl
subb
xlat
sbb
ss
jmp
sahf
in
orb
fdiv
lcall
sub
out
lods
add
jno
pop
sub
idivl
or
call
sbb
int3
sbb
pop
shll
movb
or
jae
leave
push
aas
jae
leave
sahf
or
iret
insb
shll
daa
enter
mov
sbb
int3
les
jno
imul
push
test
lods
ds
pop
mov
pusha
dec
icebp
dec
sub
divb
sbb
xchg
lods
jb
adc
xchg
adc
mov
ss
mov
jb
adc
add
mov
xchg
mov
shl
sbb
int
movsl
in
push
jp
or
cmp
xchg
aas
insl
cmp
dec
xchg
test
ja
stos
fisttpl
jmp
cmpsb
das
sub
leave
test
mov
mov
enter
addr16
ljmp
push
sub
mov
push
push
mov
fwait
sahf
xor
repnz
push
ret
daa
outsl
dec
mov
cwtl
jbe
mov
adc
filds
add
or
push
outsl
stc
inc
sub
shll
xor
pcmpeqw
sub
dec
and
stos
jno
rcrb
enter
push
add
insb
hlt
fcomps
inc
jmp
jne
lcall
cmp
ror
mov
adc
mov
pop
mov
and
and
push
sbb
and
add
add
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jno
xchg
xorb
mov
ret
mov
adc
push
mov
mov
mov
add
data16
push
mov
xor
mov
jge
rcpps
cmp
iret
mov
push
into
fsubr
dec
bound
mov
les
shrb
fildll
inc
or
push
aam
push
inc
rclb
xchg
in
xchg
lahf
sahf
leave
lea
push
into
cwtl
xor
mov
jge
sub
mov
dec
outsb
cmpsb
rclb
xor
push
addr16
fidivrl
cld
dec
stos
push
jecxz
mov
cmpsl
xchg
sub
stos
bnd
lahf
out
mov
fisttps
adc
stc
stos
jge
leave
inc
jo
lret
mov
popf
cwtl
cwtl
xchg
mov
push
dec
jg
mov
fistpl
xchg
js
popa
push
insl
movl
pop
jl
hlt
ljmp
add
jp
cltd
jbe
cld
xlat
dec
push
dec
fiaddl
cmp
enter
insb
mov
cmp
inc
js
mov
pop
inc
fucomi
repz
cmc
test
pushf
movsb
mov
shlb
inc
push
and
inc
int3
inc
cwtl
mov
cmc
sbb
ja
rdmsr
mov
pushfw
stos
push
mov
pusha
mov
mov
mov
push
inc
std
jp
push
ljmp
xchg
pop
or
hlt
dec
movsl
or
andb
cmp
mov
push
cmpsl
adc
dec
mov
ficoms
mov
call
push
pop
rcrl
clc
mov
mov
shlb
stc
xor
addb
outsl
and
nop
pusha
mov
pop
mov
sub
inc
xchg
jg
jns
or
xor
xchg
pop
inc
mov
test
xor
jge
leave
mov
mov
negl
jl
or
inc
inc
xchg
inc
xchg
push
inc
scas
xor
aam
cmpb
pop
sbb
sub
mov
rcl
cltd
mov
mov
leave
lods
adc
cmp
enter
fcompl
xchg
insl
stos
fisubs
jbe
pop
adc
pop
mov
outsl
xchg
test
icebp
and
mov
xor
xlat
mov
cmp
jns
jp
dec
scas
mov
xchg
loope
sub
xor
sbb
xchg
aaa
jno
push
scas
xor
popa
or
stos
scas
mov
pop
adc
adc
cltd
mov
inc
mov
rol
xchg
adc
outsl
add
daa
nop
mov
mov
pop
cmp
jae
push
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
xchg
pusha
leave
jo
jo
jle
jo
mov
hlt
push
stos
adcl
decl
scas
lds
dec
insb
ja
stc
xchg
pop
bound
sbb
pop
out
cs
fwait
push
mov
rol
sti
cmp
push
adc
inc
je
ret
jnp
dec
and
test
out
vxorpd
int3
or
outsb
fidivrl
or
jo
fwait
call
shrb
ds
lahf
mov
addb
or
jne
sub
push
outsb
ss
test
adc
mov
xor
inc
or
xchg
js
xlat
mov
cmp
adc
xchg
ds
push
cmc
int
sti
cmp
inc
sbb
sarb
and
ss
mov
pop
sbb
out
xor
popf
out
mov
adc
mov
das
dec
sahf
bound
sub
inc
cwtl
push
rorl
mov
xchg
jns
xchg
pop
fcoml
lods
mov
xchg
lods
cmp
popf
cmpsb
iret
inc
mov
add
or
imul
mov
push
push
push
mov
pop
lock
sbb
push
pop
adc
stos
pmullw
ljmp
pop
inc
cmp
cmc
and
andb
inc
mov
leave
or
dec
mov
mov
aam
jo
adc
push
insl
pop
fs
stos
jle
out
push
dec
push
cmp
push
sub
fs
cmp
jo
roll
fistpll
bound
imul
aad
aad
sbb
sub
jae
pop
mov
outsl
cld
mov
test
fiaddl
mov
pop
xchg
fildll
scas
pushf
adc
mov
lods
out
cmp
pop
pop
lcall
ficomps
cmpsb
xchg
lahf
push
jno
inc
loope
rclb
cmp
cltd
lds
dec
xchg
mov
pop
mov
ret
testl
jno
lret
mov
decb
faddl
pop
sbb
cmp
arpl
adc
movsl
add
cmp
jmp
add
test
scas
cmc
icebp
aas
js
cmpsl
push
movsl
adc
pop
push
or
or
das
mov
cmp
rcll
jle
in
mov
mov
inc
jns
jp
dec
inc
rcrb
push
cmp
pop
adc
mov
jne
ret
cmpsb
xor
jl
scas
in
or
add
imul
test
jne
inc
push
pop
lcall
ds
sbb
push
push
mov
fimuls
lods
loopne
ja
add
cmpsl
mov
clc
xor
jmp
add
mov
jb
jge
jge
es
adc
jo
jle
jo
lods
inc
push
stos
sub
adc
jg
adc
add
mov
jmp
aam
xor
ljmp
xchg
mov
and
push
push
ret
jne
popa
fsubl
cmpsl
dec
cmpsb
je
cltd
inc
xor
sbb
or
dec
mov
jmp
sub
lret
stc
pop
and
xor
dec
dec
jnp
mov
ds
mov
fcoms
movsl
inc
imul
xchg
repz
aas
cmp
out
xor
aam
mov
pop
test
roll
movsb
fs
mov
mov
push
or
add
xchg
mov
pop
adc
jns
in
sbb
mov
or
jecxz
cmp
aaa
out
adc
fisubrs
dec
jno
pusha
iret
leave
jo
jno
fldt
sbb
outsb
add
ljmp
push
jbe
pop
aaa
imul
jl
je
mov
cmp
xor
outsl
ds
adc
push
lret
xchg
jl
fdivs
pop
jge
mov
fs
push
pushf
dec
jbe
das
sub
idiv
fistpll
movsl
add
push
cmp
stc
loopne
pop
int
push
aas
gs
outsl
popf
lods
in
jle
jns
jmp
int
popa
cli
sbb
sub
mov
rorw
push
xchg
add
mov
xchg
clc
and
sub
ss
das
pop
popa
ss
in
fs
popa
mov
jge
push
inc
cmp
hlt
aas
ss
imul
fiadds
popf
imul
bound
xchg
sbbl
sbb
frstor
cmp
std
xchg
insb
cwtl
mov
cs
std
mov
mov
cmp
mov
test
int
addb
lds
mov
jb
int3
in
mov
jle
mov
cmc
shlb
push
out
cmpsb
shl
and
push
iret
inc
in
loope
test
std
pusha
into
insb
dec
movsb
cs
incl
lods
sub
cmpsl
jg,pn
inc
int
nop
sbb
aam
movsb
xchg
xor
cmpsb
jg
aam
adc
cmp
sbb
mov
mov
into
inc
push
inc
test
int3
xor
sub
xchg
lock
subl
xchg
leave
sbb
push
mov
stos
push
xchg
pop
mov
fwait
mov
sbb
push
iret
fcomp
scas
inc
das
mov
js
cmp
repz
enter
mov
rclb
jb
shl
adc
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
in
sub
pop
jnp
jo
jle
jo
inc
stos
hlt
cmp
dec
sbb
scas
sbb
sub
sub
xor
mov
jmp
push
leave
pop
stc
inc
xchg
lret
daa
sub
arpl
cmp
xchg
xor
fwait
and
cmp
inc
inc
push
pusha
inc
sarl
in
mov
or
inc
stos
or
loopne
mov
in
test
loopne
imulb
test
add
sbb
ss
push
or
inc
call
inc
mov
in
dec
inc
aam
push
add
aad
push
mov
mov
lret
add
les
sbb
adc
int
adc
imul
xchg
popa
sub
enter
lcall
pop
mov
ja
scas
jbe
inc
stos
and
dec
push
lea
movsb
insb
repz
add
scas
enter
popf
cmp
arpl
xchg
cltd
repz
push
mov
push
push
ret
push
mov
or
jge
add
daa
xchg
insw
aam
dec
mov
push
xor
jbe
sub
cld
sbb
mov
imul
pop
icebp
in
push
sub
sub
test
xor
out
jb
inc
lcall
stos
fsubl
rcl
test
lock
adc
testl
sarb
adc
sarb
jle
jmp
or
pop
cmp
cmp
push
xchg
push
cmp
sahf
enter
mov
in
dec
inc
pop
outsl
jo
je
sbb
shll
sbb
lcall
stos
ljmp
xor
pop
into
push
imul
mov
push
sbb
fwait
push
push
adc
into
mov
gs
fcmovnu
adc
jae
add
sub
in
jnp,pn
sbb
inc
aas
push
xor
lss
jmp
xchg
push
xor
ja
fidivrs
rcl
push
in
inc
push
test
mov
or
scas
into
inc
xor
out
pop
mov
xchg
lcall
jge
out
aaa
xchg
pusha
test
or
lock
pop
mov
xchg
push
push
sub
popa
cmp
mov
mov
add
cmp
js
inc
push
inc
aad
cmp
pop
pop
icebp
jge,pt
cmpsl
orl
addr16
out
or
mov
or
mulb
push
push
mov
or
into
orb
cmp
les
je
add
jns
jnp
jl
popa
mov
xor
sbb
add
in
sahf
pop
scas
je
lods
mov
fs
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
mov
js
jo
jle
jo
loope
cmc
pop
enter
aam
jnp
sbb
xchg
data16
sbb
sbb
adc
or
cwtl
adc
aad
nop
ds
js
pop
rcl
dec
push
pop
sub
xor
jne
mov
push
sbb
sub
dec
mov
mov
mov
nop
sahf
inc
fldt
das
adc
sbb
out
jns
sbbb
out
push
lods
dec
mov
jo
dec
jl
add
mov
xchg
inc
and
addr16
mov
adc
push
into
mov
popa
dec
jp
dec
cs
sub
test
out
sbb
iret
in
jnp
stos
jp
loope
lods
mov
mov
xor
and
dec
sub
adc
xor
mov
adc
inc
pop
xchg
stos
adc
andl
js
addr16
dec
and
or
mov
inc
pop
insl
ja
aaa
pop
je
icebp
out
cmpsb
outsl
jmp
cmpsl
insb
orb
jo
out
jb
test
imul
out
dec
dec
fdivrp
pop
jb
inc
insb
sub
or
sar
sbb
cwtl
std
test
pop
scas
pop
mov
into
xchg
push
aaa
sahf
mov
xchg
aaa
xor
push
jb
je
xlat
add
mov
test
xor
rcr
int3
jmp
fucom
xchg
in
mov
int3
add
stos
cmp
sub
lock
push
mov
icebp
pop
mov
dec
loope
mov
outsl
push
xchg
dec
mov
push
fs
or
out
cmp
and
sbb
jg
out
xor
push
jge
imul
jle
jbe
mov
jno
dec
lods
leave
loopne
pop
scas
mov
icebp
push
inc
mov
jb
cmpsl
and
adc
and
xlat
pusha
int
stos
mov
xchg
jg
inc
sahf
jl
dec
and
jnp
rcrl
sub
sbb
aas
push
mov
mov
imul
push
leave
out
loope
inc
jne
out
jo
cmp
cmp
jmp
sbb
lcall
xor
mov
or
sub
jle
xor
mov
imul
jbe
push
es
pop
ds
mov
in
pop
in
lds
pop
nop
lea
mov
and
mov
inc
inc
idivl
popf
hlt
inc
call
push
sti
sub
popf
push
xchg
cmp
xor
addl
scas
in
jb
movsb
ds
sti
mov
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstcw
insl
add
jo
add
outsb
data16
mov
adc
test
addr16
and
and
mov
lock
mov
addl
or
xchg
mov
mov
mov
js
push
mov
popa
or
lea
xchg
fidivrl
xor
gs
cmp
mov
push
lods
jne
mov
push
xlat
sti
out
pusha
or
push
mov
out
add
inc
mov
mov
sbb
mov
jge
stos
mov
iret
adc
out
cli
xchg
pop
fidivrl
imul
sub
inc
cld
movsb
test
lcall
mov
xor
push
mov
mov
dec
pop
stos
adc
sbb
xor
push
test
jns
dec
outsl
js
call
mov
xor
cmp
push
enter
sub
xlat
pushf
scas
inc
sahf
pop
leave
les
mov
jecxz
sbb
cs
aaa
imul
mov
mov
fs
xchg
mov
dec
icebp
xchg
xchg
popa
push
lret
es
xor
add
jmp
mov
xchg
mov
mov
mov
adc
loopne
rcll
sbb
mov
jecxz
pop
ret
or
stos
mov
adc
pop
adc
std
int
bound
sarl
fistl
pop
fsubs
jg
and
ficomps
sub
add
mov
dec
call
and
mov
ljmp
int
in
jp
insb
sti
mov
fwait
jnp
inc
mov
in
mov
xchg
push
mov
jmp
mov
stos
fmull
mov
jmp
outsb
or
ret
les
cmpsl
jmp
subl
inc
and
sbb
xchg
xchg
cs
adc
adc
adc
jle
stos
sbb
dec
insl
sbb
fwait
mov
js
inc
pop
jno
jns
dec
or
arpl
xor
andb
loop
mov
mov
das
divb
gs
jg
push
insl
mov
cs
stc
inc
pop
mov
imul
mov
jae
push
into
inc
fwait
pop
xchg
lods
or
add
jmp
mov
pushf
or
xor
add
aaa
cmp
jo,pn
cmc
fs
fmull
aaa
and
xor
pop
jl
pop
mov
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
jg
repz
mov
xchg
mov
mov
les
sti
push
push
and
and
sbb
push
les
inc
out
mov
or
mov
in
inc
popa
mov
loopne
bound
clc
and
jmp
lcall
popa
shll
fisttpll
fwait
jns
fldt
das
mov
aam
hlt
push
ja
cs
push
shrl
sbb
mov
lret
hlt
nop
dec
adc
push
inc
push
pop
push
xchg
pusha
xlat
pop
and
inc
pushf
into
xchg
je
and
xchg
fsubs
leave
ljmp
inc
jge
int
xor
das
jg
pop
push
divb
outsb
sbb
push
das
mov
inc
stc
aam
and
inc
push
and
sarl
fldcw
sarb
shlb
xchg
push
mov
add
and
mov
mov
cld
xchg
adc
adc
fnsave
push
call
movsl
jmp
pop
pop
das
add
push
jae
or
int3
xor
popa
stos
aad
cli
mov
js
jge
xchg
xchg
jecxz
add
push
jle
daa
sbb
pop
push
loope
stc
xorl
imul
push
movsl
sarb
pop
loope
fs
lahf
push
xchg
cmp
xchg
xchg
lret
jp
outsl
rorb
jmp
jae
push
rcl
mov
or
jp
scas
cmp
std
mov
sbb
push
mov
test
jb
cld
adc
xor
jmp
push
enter
int
push
insb
xchg
and
or
cwtl
out
xchg
rol
push
inc
mov
adc
in
inc
in
je
aas
add
outsb
outsl
jg
mov
sbb
and
dec
xchg
push
pop
out
sbb
fwait
sub
aad
sub
cmp
sub
cmp
popa
sbb
mov
andl
insl
jge
inc
popl
movsl
js
or
out
sub
adc
dec
std
test
or
adc
jns
or
cld
mov
mov
popa
jbe
jp
fidivs
loopne
stos
mov
jo
cltd
test
xchg
mov
pusha
xor
pop
inc
fldt
int
fisttpl
and
hlt
lock
int
fstps
jmp
jno
pop
cmp
neg
fistpll
sbb
add
in
inc
ljmp
sub
into
push
fnstenv
push
scas
aas
test
sbb
shrb
xor
pop
mov
outsl
cmpsb
push
lock
xchg
sub
clc
inc
mov
dec
popf
call
pushf
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
stos
ljmp
jle
jo
sub
cmpb
mov
xor
mov
test
repz
ljmp
in
xchg
rcrb
mov
mov
sub
into
cwtl
pop
cmp
imul
negb
sbb
pop
enter
xchg
psrad
push
data16
sti
mov
push
out
fistl
sbb
sbb
lea
jecxz
aam
inc
out
and
xor
pop
jle
pop
insl
mov
shll
into
sarb
int
hlt
das
repz
sbb
and
cs
push
icebp
hlt
mov
outsl
mov
aam
ret
lods
push
xor
mov
pop
jle
and
out
es
mov
jl
inc
add
sahf
push
cmpsb
cmpsl
add
ja
cmp
loope
pop
ret
lds
jne
iret
cmp
test
out
push
push
mov
movsb
cmp
call
cmpb
aam
cmpsl
xchg
sbb
ss
lret
ja
neg
sbb
pushf
pop
jbe
out
shll
notl
push
pop
iret
mov
clc
ja
add
int
pop
in
push
push
adc
jns
test
sub
push
popf
aas
das
sahf
lret
mov
mov
sbb
inc
xor
shll
aad
cli
mov
out
in
xor
mov
xor
sub
inc
push
stos
out
test
jb
add
push
push
cmp
push
enter
sbb
jecxz
pop
test
stos
aad
stc
sahf
cmp
or
int
mov
dec
mov
mov
scas
jne
jae
mov
and
test
cmpsl
mov
in
cs
fidivs
pusha
stos
mull
inc
and
std
jecxz
mov
pop
dec
out
pop
lret
imul
cs
je
jecxz
shrl
cwtl
or
and
xor
jp
sub
mov
mov
rcrl
push
push
in
add
pop
loope
jle
and
repz
movsb
pop
dec
int3
sub
inc
push
mov
cwtl
cli
dec
test
xor
cmpsl
adc
mov
mov
cmp
nop
mov
cmpsl
and
lcall
mov
hlt
addb
repnz
adc
xchg
fwait
daa
pusha
jle
jp
adc
xchg
out
sarb
jae
inc
xchg
and
idivb
jge
ficomps
xor
mov
jge
popw
jo
xor
mov
insb
cmc
pop
testl
nop
xchg
adc
aam
outsl
sbb
test
pushf
jb
add
filds
add
sub
mov
popa
pop
xchg
aas
xor
mov
jle
jo
cmc
sub
pop
movl
sahf
popf
ljmp
out
popa
mov
cmp
scas
imul
data16
cwtl
mov
jle
sub
ret
pop
fs
pslld
push
rorl
arpl
pop
std
dec
sahf
lock
test
dec
dec
mov
pop
icebp
jmp
xchg
dec
xor
enter
xchg
dec
push
push
fs
or
mov
sahf
fdivl
jle
shrb
fisttpll
les
fstpt
dec
fidivs
jno
sub
xor
les
pop
sahf
aaa
popa
imul
cld
dec
out
dec
hlt
xor
mov
inc
jmp
shll
adc
ret
sbb
outsl
xor
adc
cmc
push
mov
or
jb
add
es
mov
sub
adc
jbe
adc
mov
mov
in
loopne
clc
jns
mov
mov
pop
xor
out
subb
mov
loope
sbb
or
out
sub
test
dec
mov
jle
js
and
and
test
fmull
rcrl
sbb
adc
jg
inc
fdivs
lods
movsb
cmp
xchg
movsb
ret
jp
ja
sbbb
inc
mov
xlat
les
stos
and
mov
xlat
cmpsl
cmp
orl
and
mov
je
test
lods
ljmp
pop
lahf
cmpb
or
fwait
movsl
test
sub
jl
negb
mov
push
adc
loop
scas
xor
daa
out
in
adc
push
into
shll
lret
test
xlat
aas
sbb
xlat
loope
scas
xchg
fdivs
ljmp
ljmp
cld
cmp
and
add
cmp
xchg
cmpsl
ja
jl
add
cmp
jno
and
cmc
adc
repz
addr16
stos
and
push
stc
imul
mov
or
mov
cmc
or
and
enter
sub
cmc
mov
dec
dec
aad
pusha
inc
and
lods
jl
lock
push
mov
stos
and
ret
arpl
inc
lahf
cs
inc
movsl
std
stc
popf
hlt
in
subl
fsubrs
sbb
dec
scas
mov
inc
out
push
push
les
testl
js
mov
movsbl
inc
in
jae
pop
scas
aaa
lret
cmc
jmp
mov
cmp
sub
inc
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
in
shr
or
mov
loopne
jne
push
test
sub
cmp
mov
movsl
fildll
cmp
cmc
in
ja
outsb
iret
dec
jne
pop
sub
pop
xlat
lock
xor
add
pop
inc
jnp
shlb
loopne
jecxz
fwait
mov
sbb
mov
mov
dec
mov
jb
mov
int
pop
shll
and
mov
push
cmp
pop
mov
sub
fldt
bound
cmp
xchg
mov
rcrl
dec
popa
and
mov
sbb
fbld
sub
repz
shlb
push
xchg
cmp
or
mov
jne
push
sbb
and
adc
cmc
cs
test
insb
movsl
hlt
es
jb
loop
out
loop
mov
lock
cwtl
push
in
rorb
push
add
es
and
lcall
mov
push
push
pop
and
mov
idivb
sbb
xor
into
or
adc
stc
adc
js
fptan
outsl
cmpsl
dec
mov
inc
push
cmp
mov
jp
mov
mov
pop
push
mov
or
outsl
decl
sbb
test
lods
or
add
jae
lcall
dec
enter
stos
ret
sbb
cmc
dec
xor
cwtl
in
sbb
inc
fwait
icebp
or
xlat
aad
cmp
cltd
sti
mov
and
xor
xchg
dec
or
aaa
cmpsl
icebp
jle
push
mov
cmp
call
dec
push
inc
pop
sub
push
ja
gs
int3
je
mov
or
jnp
push
cmpsb
cmp
lret
adc
mov
jo
jnp
shlb
jne
mov
or
and
outsb
dec
pop
or
xchg
int3
add
mov
gs
inc
mov
inc
mov
sbbl
sbb
dec
xchg
adc
mov
mov
jb
negb
das
inc
add
mov
mov
add
inc
pop
inc
jbe
lret
xor
fdivrs
fsincos
mov
cmp
xlat
bswap
jp
shll
xchg
xor
push
imul
test
loopne
subl
cld
bound
lods
and
add
paddsw
rclb
pushf
and
prefetchnta
addr16
inc
jne
fildll
enter
out
fidivl
ret
aad
aas
in
mov
ficomps
mov
mov
imul
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
ljmp
mov
inc
push
jl
adc
push
pop
lods
push
imul
enter
daa
lock
mov
mov
jns
xchg
mov
outsl
push
mov
out
sub
jb
sbb
out
dec
adc
add
pop
lcall
shll
jl
or
cmp
sub
and
test
jns
add
cwtl
stos
mov
push
lods
rorl
mov
into
and
lret
pop
xchg
dec
sbb
js
push
cmp
push
fwait
sub
add
sub
mov
mov
sub
leave
mov
fs
call
sti
leave
notl
movb
movsb
mov
cmpsl
adcb
pushf
cmc
jbe
mov
jne
push
scas
jmp
jb
out
lods
stc
mov
icebp
mov
mov
jo
add
sbb
dec
mov
push
mov
mov
sbb
mov
lock
jno
pop
mov
add
cmp
mov
cmp
aam
cmp
cmp
sub
xor
xor
cmp
je
mov
call
ret
and
mov
dec
and
fnsave
push
ds
xchg
test
add
ret
jecxz
mov
stos
neg
jns
cmpsl
cwtl
push
cmp
enter
xor
mov
imul
aas
pop
jmp
sub
mov
rcrb
imul
push
sahf
mov
ficoml
jnp
cld
jmp
ss
sbb
cmpsb
sti
push
mov
pop
outsl
cli
xor
idiv
test
adc
jnp
or
scas
mov
outsl
cmp
fdivs
xchg
pushf
pop
dec
push
daa
add
pop
testl
std
adc
ja
xchg
mulb
pop
lods
test
in
stos
inc
xor
and
xchg
mov
cltd
imul
mov
mov
mov
enter
out
xchg
outsb
xchg
out
sbbb
push
push
fs
jae
orb
in
fcoms
into
add
shlb
and
push
shlb
push
test
add
jp
int3
jne
jg
stos
bound
mov
sub
push
jecxz
xchg
loop
sahf
adcb
mov
inc
mov
adc
int
mov
jb
inc
fldt
scas
jge
sbb
push
mov
or
insb
cmpsb
cwtl
cmp
stos
add
test
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
inc
inc
adc
jo
jle
jo
mov
mov
mov
inc
dec
mov
fidivrl
xchg
xchg
jmp
lods
pop
icebp
dec
addr16
lods
fnstsw
lea
or
in
ret
add
pop
inc
cmpl
mov
adc
mov
adc
adc
sub
or
dec
inc
movl
loopne
xchg
out
dec
add
stos
push
push
rcrb
pop
or
in
mov
pop
push
in
mov
and
mov
or
fstps
mov
test
cs
in
xlat
pop
pop
movb
scas
outsl
test
aas
out
jbe
cmp
loope
pop
mov
and
dec
mov
iret
incb
imul
xchg
inc
or
rcll
jbe
icebp
xchg
xchg
je
mulb
pop
out
ljmp
fisttpl
outsb
repnz
daa
das
aam
cmpl
imul
fwait
ja
jl
xchg
mov
push
idivb
cmp
ror
add
inc
fwait
jb
xor
add
lods
xchg
pop
cmp
mov
sbb
push
popf
out
dec
mov
sbb
mov
pop
les
mov
cld
add
mov
in
xor
out
sbb
inc
insb
push
stos
fcmovnu
mov
aaa
mov
mov
xchg
pop
popa
and
popa
test
push
call
mov
sub
jnp
cmp
cmp
sbb
mov
lret
std
test
adc
pop
add
push
cmp
daa
mov
data16
repz
xchg
mov
mov
aaa
cmp
adc
les
inc
dec
test
xchg
cs
sahf
test
mov
rol
rcrl
cli
shl
lods
sbb
ss
pop
sbb
outsb
jae
jmp
lcall
insl
pushf
pop
sub
add
jo
arpl
xorb
ss
inc
ffree
xchg
xchg
mov
jecxz
or
inc
lret
nop
fwait
jmp
rcl
sbb
add
lds
fstpt
lret
cmpsb
std
sub
int
inc
cmc
push
inc
jle
or
push
ror
mov
filds
aam
sub
jle
jae
pop
mov
in
dec
dec
push
fdivl
and
cli
or
lods
out
pop
mov
sub
lahf
cld
add
mov
push
jae
shlb
fbld
pop
int
sbb
push
adc
out
dec
and
dec
or
sbb
sahf
inc
fldcw
test
xchg
clc
push
sti
sub
fs
mov
ds
mov
test
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
add
pop
adc
mov
jae
push
push
dec
push
pop
push
dec
inc
mov
adc
andb
xor
popf
call
xchg
mov
pop
xor
xchg
or
insb
push
and
fwait
jle
out
xor
test
push
sub
mov
jae
lea
das
or
xchg
mov
inc
xor
or
mov
out
cmpsb
sub
or
out
xchg
scas
cwtl
xchg
inc
mov
inc
loope
add
xor
call
inc
ja
dec
jmp
xchg
or
add
roll
ss
adc
xor
rorl
or
xor
and
fimuls
push
inc
and
sub
sub
movsl
movsb
ds
out
imul
push
fsubs
inc
icebp
pop
ds
mov
xchg
sub
fwait
mov
test
inc
xor
dec
repnz
call
iret
sbb
push
sbb
mov
cs
lcall
cmp
jmp
pop
jmp
add
stos
push
ret
jns
jg
aad
mov
pop
jne
mov
lret
cmp
aaa
push
inc
call
jae
scas
mov
aam
ret
negl
adc
push
jbe
and
leave
imul
pop
stos
idivl
dec
mov
inc
imul
mov
push
pop
in
popf
in
jae
xchg
and
stc
jno
add
into
inc
imull
pop
loope
adc
mov
daa
lds
addb
push
and
fldl
jg
xor
inc
addb
out
cld
cmp
subb
push
ljmp
push
cld
test
imul
enter
inc
dec
in
and
addr16
push
xor
call
mov
sti
out
mov
jno
xor
pop
xchg
in
xor
lea
std
inc
pop
mov
test
pusha
cli
mov
int
fldt
call
cmpsl
dec
jecxz
ficompl
push
lahf
idivl
stos
or
loope
popa
mov
push
sbb
orb
xchg
and
jg
addr16
sbb
push
dec
xor
mulb
idivl
mov
or
imul
cwtl
push
dec
add
mov
push
xor
sti
and
cmc
push
and
mov
push
outsb
aam
call
cmpl
popf
add
daa
in
mov
lret
jmp
cmc
std
fs
jno
mov
add
dec
sub
pop
jg
mov
jle
xchg
mov
jecxz
mov
cwtd
rolb
lcall
mov
mov
mov
push
cmpsb
int
cld
jns
sub
ret
mov
xrelease
sbb
mov
and
int
decb
and
dec
test
nop
lret
and
imull
fisubs
mov
push
jo
out
mov
xchg
pop
xor
pop
addps
nop
ret
movsl
mov
data16
jb
xor
jnp
cs
cmp
adc
andnps
fadd
dec
inc
push
or
ds
test
popf
mov
push
rorb
add
xor
mov
outsb
mov
push
mov
lret
mov
lcall
jnp
sbb
lea
movsl
and
aaa
mov
mov
add
out
jo
arpl
jnp
sub
jno
xchg
aam
arpl
repz
cmp
loop
imul
mov
mov
outsb
dec
jne
daa
ljmp
mov
pop
inc
xchg
inc
sarb
lcall
or
lret
fcomps
bound
adc
cmp
imul
lret
mov
popa
sbb
in
mov
push
mov
push
loopne
mov
dec
adc
shlb
mov
jl
enter
outsb
adc
out
shrb
jns
fcomps
mov
lods
lret
and
xchg
enter
mov
lock
xor
cmp
nop
jge
xlat
and
inc
fucomi
enter
cli
test
lods
int3
fistps
ss
imul
pop
xor
xor
lods
mov
ret
dec
push
sub
imul
lret
cmc
rolb
push
repz
push
in
jae
xchg
in
jmp
das
adc
mov
sbbl
or
xchg
add
jae
test
rorb
xor
mov
mov
xchg
test
shrl
mov
cmc
cmpsl
xor
jmp
push
testb
imul
or
push
add
mov
mov
xor
xchg
jge
in
push
cltd
cmp
pop
xchg
popf
jno
cmp
push
bound
shlb
xor
movsb
xchg
fstl
jmp
mov
cld
mov
lock
aas
cmp
enter
cwtl
out
pop
sbb
dec
stos
add
stc
fmuls
stc
sub
add
test
cmp
mov
add
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
mov
mov
jo
jle
jo
lock
pop
inc
mov
into
stc
jo
sub
pop
std
data16
xor
push
push
cld
nop
jo
out
shll
stos
outsl
xchg
jle
cmpsb
imul
movsl
fistpll
lea
movl
mov
xor
pop
add
jnp
push
add
mov
dec
out
mov
dec
or
mov
jae
mov
call
ja
and
les
jno
inc
dec
loop
je
dec
dec
or
push
jge
sbb
and
lea
in
pop
fisttpll
rcrl
popa
fisubl
test
cld
sub
mov
jbe
sbb
cltd
pop
lods
add
jmp
pop
das
cmpsl
or
ficompl
out
int3
pop
lret
xor
testl
std
into
dec
add
sub
or
dec
rclb
sub
jnp
lock
imull
or
xchg
in
lods
loope,pt
xor
xchg
pop
sti
jo
movsb
dec
out
out
shlb
cmp
jmp
mov
sbb
addr16
jnp
ljmp
jge
imul
insb
fstps
adc
inc
stos
divl
mov
outsb
fs
add
push
outsb
jp
sbbb
testb
mov
mov
lea
addr16
insb
cmpsb
xchg
inc
aaa
clc
push
shl
cmp
push
xor
pop
sbb
pop
ret
dec
dec
push
jp
iret
push
cmpsl
outsb
aas
add
xchg
push
cli
pop
ja
aad
xchg
jg
or
xchg
or
mov
dec
cmp
imul
sbb
nop
idivl
xor
push
test
int
push
cmp
sti
cld
das
sub
js
pop
out
vunpckhps
ja
pop
xchg
pop
and
repnz
push
pop
jns
pop
imul
ror
mov
call
cli
mov
mov
lods
pop
xchg
in
outsl
dec
sub
mov
insb
adc
cmpl
ret
push
bound
push
mov
mov
mov
shll
int
stos
mov
inc
push
fsubr
pop
pop
je
cmp
mov
dec
jae
daa
pusha
push
out
pop
in
sub
lds
adc
movsl
jns
call
pop
pop
inc
lret
lods
add
lahf
and
add
inc
and
gs
xchg
push
leave
xchg
push
test
dec
lret
lret
xor
push
add
mov
cltd
sub
pop
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
cwtl
sub
jo
jle
jo
cmp
sarb
push
js
cmp
mov
pop
sub
mov
xor
cmpsb
arpl
dec
sub
aam
jp
cmpsb
sti
movsl
cmc
nop
popf
xor
cmp
iret
call
fnstsw
out
push
rorb
mov
rorl
push
jae
clc
mov
shlb
cmpsl
inc
lods
bnd
inc
push
mov
jg
pop
repnz
push
ss
test
xchg
adc
dec
pop
lea
mov
nop
hlt
add
mov
fiadds
je
rcrl
pop
mov
pushf
xchg
and
lahf
pop
sbb
loopne
pop
mov
push
test
xor
je
mov
sbb
and
ss
ficompl
daa
test
mov
adc
fwait
mov
pop
push
and
sub
adc
cmp
add
jg
mov
negb
ds
xor
insb
sub
movsb
mov
add
int3
mov
repz
push
pop
mov
inc
int
sub
and
jo
cld
cmc
sbb
pop
mov
aad
or
imul
xchg
inc
ja
repnz
adc
push
into
xor
inc
adc
jae
add
adc
popa
cld
pop
push
dec
or
xchg
jae
repnz
mov
mov
jmp
iret
push
repz
inc
addr16
mov
sti
jmp
xchg
js
cwtl
mov
inc
or
loop
xchg
jne
and
xor
pop
push
lock
pop
push
xor
fisubl
jg
outsl
orb
fnstsw
push
or
pop
sbb
call
das
aaa
add
push
jge
cmp
lahf
cli
adc
xchg
mov
inc
mov
cld
mov
xlat
push
sahf
push
and
jns
jmp
test
in
subb
aam
jb
js
jle
xor
aas
mov
rolb
je
les
jns
dec
push
adc
or
xor
mov
mov
or
iret
arpl
mov
push
imul
and
mov
sbb
mov
popa
insl
sub
fwait
inc
sub
gs
int3
mov
scas
outsb
repnz
push
scas
pop
add
sbb
out
cltd
sbb
inc
add
cmp
inc
or
mov
or
dec
or
call
arpl
lock
pop
inc
cli
lock
mov
lods
pop
add
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
sbb
jg
mov
outsl
cld
shr
mov
push
ja
xchg
fstps
push
dec
adc
lcall
adc
push
test
mov
add
or
add
stc
pop
lret
xor
mov
push
mov
sbb
fwait
imul
ret
sti
jecxz
inc
int3
cmpsb
dec
push
sub
jecxz
add
pop
jnp
int3
and
movsb
xchg
xchg
push
pop
lods
adc
fisttps
sbb
movsb
lods
jle
mov
mov
lods
cli
inc
sub
push
into
cld
add
xchg
testb
les
mov
cmp
movsb
repnz
push
mov
ds
addl
fisubl
bound
mov
xchg
pop
test
lea
movsl
stos
mov
in
xchg
jns
mov
or
jmp
cltd
cmp
dec
mov
pop
and
mov
mov
scas
mov
pop
call
and
ficoms
mov
xchg
xchg
mov
mov
push
aas
cmpsb
int
or
ret
ljmp
mov
aas
pop
jbe
mov
jle
shl
xchg
or
orl
cmp
aam
dec
xchg
sbb
ud1
dec
mov
fsubs
mov
mov
add
rcl
gs
dec
dec
and
cmp
ficoml
or
inc
stos
mov
xor
pusha
movsl
jbe
loop
xor
imul
addr16
loop
pop
out
mov
fwait
xchg
inc
and
add
gs
mov
pop
jg
mov
fxrstor
mov
pop
inc
inc
lahf
aaa
outsl
dec
in
loope
cmp
push
xchg
rcl
ret
in
in
xor
flds
mov
in
movsb
sub
sub
mov
push
dec
sbb
cmpsl
pop
lods
mov
mov
into
repz
jnp
loopne
jo
js
pmullw
jg
insl
lds
mov
test
std
gs
sahf
push
iret
nop
inc
or
out
lret
jge
xor
push
pusha
ret
jle
mov
sub
mov
sbb
mov
icebp
repnz
inc
cltd
lahf
sbb
sbb
xor
test
and
rcrb
ret
mov
mov
pop
inc
cltd
arpl
mov
dec
xchg
push
adc
idiv
es
push
aaa
and
mov
sahf
daa
xor
dec
divb
test
jle
jmp
sub
test
fsubrl
push
nop
ja
ss
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
pop
dec
mov
jle
jo
jmp
mov
lret
sbb
gs
mov
bound
adc
and
ret
xchg
sbb
lods
inc
xchg
push
push
mov
sbb
pop
test
add
test
adc
add
adc
dec
pop
inc
fisttpl
push
movsl
out
je
add
push
lods
xor
mulb
pop
ss
roll
cmpsb
jne
xor
pop
xor
stos
fisttps
divb
adc
ds
movsb
xchg
inc
sbb
jno
lock
cmp
shll
sub
sbb
pop
or
out
dec
jnp
sub
push
pop
lret
jnp
or
push
cmp
out
mov
stc
cmpsb
push
sbb
pusha
lds
inc
sbb
pop
sbb
inc
add
shll
push
in
mov
mov
mov
stos
mov
pop
jb
mov
cwtl
movsl
push
daa
lahf
push
iret
sahf
test
add
enter
push
call
out
inc
push
std
push
subl
sbb
ss
ret
mov
hlt
lods
push
xchg
lea
adc
and
push
inc
enter
lods
stos
mov
jg
and
out
push
push
aaa
test
int3
mov
mov
sub
and
fs
insb
js
pop
shlb
shll
rcrb
push
mov
movsl
pop
add
aas
pop
push
clc
mov
popa
mov
lods
aad
repnz
mov
or
pushf
aaa
cwtl
mov
addl
js
mov
das
icebp
mov
pusha
test
jle
mov
je
or
mov
sbb
mov
dec
xchg
fwait
push
mov
adc
fwait
sub
add
movsb
call
jno
ds
rcll
sbb
jl
popf
lahf
pop
shr
ret
out
push
std
inc
push
adc
movsl
lret
in
cmpsb
stos
adc
xchg
insl
jg
add
dec
fwait
dec
pop
lret
test
mov
imul
sub
push
mov
adc
sbb
leave
fsubp
pushf
lret
aad
test
jecxz
sbb
lea
inc
jno
shrl
repnz
jge
mov
insl
aaa
cmpsb
in
fbstp
sbb
pop
sub
or
mov
pop
rorl
mov
test
out
cmpsl
or
and
subl
in
lret
test
cmp
rolb
iret
xor
cmp
in
adc
int3
jle
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
