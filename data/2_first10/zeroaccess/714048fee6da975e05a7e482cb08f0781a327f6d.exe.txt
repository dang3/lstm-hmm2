push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
mov
jl
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
and
inc
enter
jle
and
mov
dec
cmpsb
mov
jecxz
loopne
in
imul
sti
jae
lods
mov
xor
popa
mov
or
mov
leave
mov
dec
dec
adcb
sub
jns
jl
and
xchg
cmp
jbe
xchg
push
sub
jp
adc
cmp
lret
mov
sbb
data16
cwtl
std
flds
pop
ret
clc
dec
jb
xor
push
gs
sub
ds
aam
lcall
test
dec
popa
out
add
pop
mov
xor
lret
decb
xor
xchg
notb
cli
xchg
adc
imul
dec
sti
cmp
cmp
sahf
aam
mov
leave
sub
cmp
aas
and
xchg
popf
sbb
inc
or
mov
sahf
das
loopne
sahf
sti
sub
pop
ja
rorb
fsubl
mov
rolb
mov
pop
imul
sbb
pop
jo
imul
cmc
push
push
sbb
sub
sub
mov
gs
sahf
outsl
xchg
adcl
xchg
mov
test
xor
jg
pop
sub
jns
jge
lahf
rorl
xchg
jmp
ret
dec
je
xor
inc
lods
sbb
shlb
rorl
mov
mov
loop
dec
in
sbb
dec
jo
addl
adc
repz
cmp
loope
dec
jmp
fnstcw
mov
mov
mov
xor
out
ret
mov
and
adc
fdivrl
pusha
data16
cli
xchg
stos
sbb
subl
push
ljmp
test
fstps
mov
lods
mov
rcrb
scas
sub
cmp
cmp
cmc
pop
pop
lcall
loope
nop
aas
imul
nop
iret
sar
push
dec
pop
mov
jl
mov
sbb
test
pop
rorl
add
out
inc
sub
test
ljmp
sub
repz
inc
lahf
scas
std
inc
arpl
sbb
idivb
cmp
push
cmpb
dec
lret
dec
push
rclb
xor
mov
xor
test
mov
push
adc
adc
and
daa
mov
dec
dec
add
cld
xchg
mov
popf
icebp
aam
jo
js
enter
dec
jb
lcall
xlat
xchg
jnp
jns
cmp
jns
outsl
outsb
add
or
lcall
push
sbb
and
push
xchg
mov
xchg
out
mov
lahf
scas
movswl
jg
int
xchg
jnp
mov
lea
pusha
enter
repz
xor
incb
sti
cwtl
cli
arpl
movb
ficoml
pop
aaa
movsb
adc
or
loope
jmp
dec
incb
fwait
push
movsl
cmpsb
stos
mov
inc
testl
sub
in
dec
das
mov
jecxz
dec
js
mov
lods
xor
jno
sbb
add
add
jmp
cld
xchg
adc
and
cmpsb
enter
pop
mov
out
test
out
add
pop
push
or
xchg
fimull
into
in
mov
mov
mov
roll
push
pop
int
mov
add
add
cmp
mov
cwtl
cld
loop
imull
outsb
cwtl
jne
lcall
dec
xor
mov
mov
sahf
int3
cs
inc
sbb
push
or
cmpl
aad
xchg
nop
es
push
jb
push
sar
pop
and
enter
cmp
xchg
sub
lock
or
jmp
mov
or
adc
push
lods
cmc
ret
in
stos
add
sbb
arpl
addr16
fsubrl
aad
lret
aad
pusha
inc
pop
pop
arpl
xor
and
cmpsb
idivb
xchg
dec
call
dec
fs
test
movsl
mov
or
sbb
das
sbb
das
in
or
mov
adc
sbb
fsubr
push
iret
xchg
dec
bound
adc
pop
and
in
sub
or
xchg
jns
shll
mov
cmp
cmp
imul
data16
jne
and
jns
add
ret
cmp
xor
insb
cmp
aam
aaa
loope
add
and
xchg
loop
jo
mov
ds
adc
push
dec
loop
cmpsl
test
or
ficoml
jle
cmp
pop
dec
push
jge
cmpsl
sub
outsb
mov
adc
push
pop
sbbl
or
jl
cmpsb
and
mov
xor
mov
es
add
in
push
cmp
push
lods
mov
psllw
jmp
ret
inc
aaa
dec
mov
cld
iret
pop
test
push
test
xchg
add
mov
test
inc
xor
cmp
stc
nop
outsb
mov
mov
sbb
lods
push
sti
jge
xor
mov
adc
out
dec
add
call
inc
pop
fisubl
push
sahf
mov
push
in
push
repnz
dec
mov
in
loope
iret
nop
pop
mov
lret
insb
xor
addb
pop
mov
cmp
xchg
loopne
mov
xlat
dec
clc
pop
ja
pop
sbbl
jg
mov
aam
mov
insb
aaa
shll
add
adc
ja
stos
mov
add
jo
out
mov
rcll
mov
clc
repnz
push
dec
adc
mov
sub
insb
sub
mov
roll
or
cld
sbb
pop
outsb
cmp
mov
pop
xor
adc
cmpsb
pop
movsb
add
leave
push
inc
jns
jmp
lcall
aaa
rolb
test
adcl
jp
inc
inc
push
je
and
jle
xor
test
xchg
addr16
jl
sub
gs
jae
add
push
xchg
enter
stos
loopne
fs
mul
pop
scas
iret
cwtl
decl
pusha
mulb
shr
scas
repz
aam
fidivs
sub
jb
jno
popa
das
scas
in
or
push
pop
pop
pop
add
inc
or
rorl
pop
push
arpl
cmp
icebp
pop
dec
jmp
pop
adc
add
mov
roll
mov
mov
mov
dec
lods
fsubrs
sbb
sbb
bound
insl
enter
mov
ret
sub
push
jmp
nop
nop
xchg
fstpl
adc
andl
stos
clc
sbb
sbb
and
movsl
orl
cli
inc
sbb
add
mov
clc
stos
adc
or
cmp
hlt
mov
xchg
or
lret
sti
js
pop
clc
mov
xor
cmc
xlat
sbb
cmc
pusha
adc
and
mov
pop
jp
mov
and
and
mov
insb
push
sbb
sti
lret
mov
imul
sub
les
fs
jle
lods
das
mov
imul
out
rol
push
push
dec
sbb
insb
xor
jge
dec
pop
jne
mov
push
pop
aad
int3
popa
or
int3
push
repz
pushl
pushf
add
sub
push
sbb
idivb
cmp
cmp
test
sbb
rcr
fwait
cmc
and
stc
bound
or
addr16
jp
ficompl
scas
push
popa
xor
in
fisttpl
les
outsl
stos
stos
divl
dec
movsb
popa
jnp
lahf
xchg
stos
iret
aaa
adc
in
dec
pop
lock
in
cmp
or
mov
leave
sub
in
es
mov
and
xchg
sub
pusha
aas
lret
push
jnp
ja
fildl
adc
rol
mulb
gs
clc
dec
arpl
xor
xchg
sbb
test
xchg
sti
mov
mov
in
push
imul
cmp
mov
pushf
or
mov
in
jno
xor
out
xor
adc
fwait
clc
xchg
dec
push
sarb
pop
mov
dec
xlat
push
pushw
add
gs
ss
call
xchg
sub
das
sahf
out
rcr
icebp
inc
mov
mov
add
ja
xor
dec
out
sub
jns
pop
cmc
dec
lret
mov
xchg
sub
sbb
stos
jnp
and
push
ret
add
repz
dec
sub
pop
mov
es
pop
hlt
int
es
mov
xchg
jno
and
stc
stos
lahf
pop
dec
mov
lret
lock
xchg
inc
insl
jge
in
hlt
or
std
cli
out
jmp
in
in
sbb
mov
push
call
arpl
and
mov
pop
xchg
push
push
jmp
out
or
cmp
and
cli
and
imul
int
pop
jb
ret
jp
data16
test
sub
stos
pushf
add
loope
mov
cmp
in
popa
cmc
in
xchg
lret
inc
imul
out
std
gs
sbb
lods
xchg
jnp
xlat
in
je
scas
jle
sub
stos
jp,pn
in
and
xchg
push
in
push
out
jmp
mov
push
push
stos
sub
ds
setg
aad
stc
add
sbb
mov
shll
clc
ret
push
jnp,pt
pop
cmp
inc
xor
dec
dec
mov
pop
adc
stc
shr
inc
test
jb
mov
adc
sub
mov
je
icebp
loop
push
in
aas
add
inc
jge
xchg
aam
lea
inc
adc
js
into
ret
push
xlat
cs
push
mov
lds
idivb
fcmovnbe
sbb
sub
and
mov
test
adc
push
pinsrw
inc
mov
orb
nop
clc
mov
ss
cmp
push
out
dec
jp
out
out
pop
push
addr16
sub
add
addr16
js
or
or
test
cs
pop
sub
jp
add
stc
jbe
into
enter
add
mov
pop
stos
fidivs
sub
icebp
pop
and
jge
std
xchg
lods
unpckhps
stc
jle
push
push
inc
dec
jae
scas
iret
dec
dec
jae
cld
popa
test
xor
in
mov
arpl
ficomps
dec
rorb
mov
fdivrs
addr16
into
es
leave
push
inc
or
movsl
mov
sub
inc
test
add
shll
out
aad
pop
lods
aaa
dec
in
out
lea
mov
leave
out
outsb
xlat
in
xchg
test
sbb
push
inc
or
xchg
jo
mov
or
adc
clc
mov
xor
cli
pop
lods
jnp
pushf
mov
fidivrs
nop
out
test
int
fidivrs
aad
xchg
xchg
shrl
sub
push
xor
lds
xchg
and
out
fwait
inc
cmp
jmp
arpl
mov
dec
inc
xor
pop
push
inc
lret
inc
rorb
mov
mov
cmp
sub
stos
nop
sti
pop
pusha
xchg
je
out
jmp
pop
push
push
dec
and
mov
mov
cmp
mov
mov
cmpb
jecxz
sub
sub
dec
enter
inc
and
std
jp
insb
dec
jbe
popa
aas
mov
mov
sarl
cmpsl
shll
shll
cmpsl
lock
aad
adc
xchg
jnp
pop
insl
xchg
sbb
cmp
and
daa
sbb
push
jns
cmp
mov
ja
and
fsts
fadds
mov
jo
aas
jle
shl
sub
loopne
pusha
xor
lods
int
adc
push
in
test
xchg
out
sbb
cmp
fdivrl
add
and
xor
dec
mov
cmp
in
std
push
imul
add
imul
sub
stos
mov
add
and
adc
fwait
add
sahf
mov
mov
stc
cwtl
pop
jns
out
scas
cmp
insb
mov
sarb
push
pop
and
and
xor
into
add
int
outsb
stc
test
rcrl
aam
dec
jge
rcll
and
pop
nop
out
inc
mov
fsubrl
add
stos
jno
jnp
jle
dec
pop
and
call
sbb
mov
adc
out
mov
stc
xor
cmpsb
or
nop
flds
adc
pop
add
dec
shll
jnp
or
jne
fucomi
push
xor
aas
inc
push
in
loop
cmc
fdivrs
movsb
jg
sub
cmp
shlb
xlat
pop
cmp
clc
pop
cltd
cmp
in
mov
inc
mov
lds
jns
loop
daa
call
outsb
xchg
lock
sarl
inc
or
es
push
sbb
push
xchg
xlat
pop
lea
addl
add
ds
test
int3
das
insb
nop
sahf
jbe
xchg
jmp
add
cmp
loop
jle
outsb
xor
cli
pusha
push
adc
and
jbe
sub
mov
dec
add
lock
xor
inc
loop
pop
aaa
sar
mov
push
cmp
ficompl
pop
notb
cs
pop
mov
xchg
loopne
les
scas
cmp
out
push
sbb
jge
sub
adc
sub
fsubrs
cmpsl
fdivs
ja
jg
mov
add
pop
push
test
push
jns
pusha
daa
sbb
fidivrl
inc
cltd
mov
sbb
or
test
push
popa
xchg
xchg
lea
mov
outsb
xchg
aaa
mov
inc
sbb
add
scas
es
push
xor
mov
jb
lcall
push
dec
cmpsl
push
push
test
add
xor
mov
add
push
test
push
push
xlat
shll
orb
or
int3
add
nop
stc
popf
sbb
xchg
aad
in
add
or
mov
xor
scas
adc
loope
inc
out
les
mov
inc
and
push
imul
and
int
mov
icebp
sti
dec
xor
arpl
sub
popa
cmc
pop
or
mov
push
mov
sbb
jno
imul
mov
xchg
inc
and
push
jg
in
pop
mov
ret
ljmp
add
mov
mov
jmp
pop
dec
ret
mov
test
dec
mov
loopne
imul
lods
or
push
and
xchg
and
ret
or
loopne
xor
jb
outsl
push
mov
test
push
cmp
push
jne
and
in
test
leave
cmp
andl
xlat
rcll
adc
lcall
xor
mov
push
arpl
mov
cmp
push
dec
lock
shlb
scas
mov
in
add
in
inc
dec
cltd
into
dec
scas
movsb
add
hlt
cltd
xchg
aad
fwait
ljmp
loope
jp
mov
maskmovq
idivl
je
loope
outsl
cmp
divps
push
jnp
mov
push
fcoms
addr16
fistpll
jp
mov
shlb
es
xor
fisubs
lahf
xchg
fmulp
lock
fiaddl
xor
popf
shr
adc
fdivs
pop
push
adc
pop
insb
inc
scas
cmp
add
outsb
fisubl
pop
sub
stos
pop
cmp
lods
out
or
sbb
out
std
in
daa
mov
std
std
out
addr16
lea
add
sbb
xor
mov
mov
lahf
mov
xchg
mov
push
sbb
and
adc
adc
cltd
jns
iret
cmp
xchg
cmp
int
insb
adc
push
mov
cmp
sar
aam
and
add
and
and
imul
mov
jl
jmp
stc
test
xor
in
cld
addr16
sbb
jecxz
insl
mov
pop
orl
mov
lods
or
ret
mov
push
sub
lock
js
in
rcl
cld
xchg
rcrl
loope
leave
lods
mov
fistl
sbb
icebp
xchg
cmp
scas
sarb
or
dec
push
adc
adc
fistpll
in
cmc
shl
mov
cld
sti
rclb
popa
negb
test
popf
xchg
push
xchg
popa
sub
xor
add
test
dec
add
std
push
cmpsb
add
bound
push
test
clc
or
loopnew
ljmp
cmp
pusha
lods
dec
sub
add
test
sub
jns
xchg
or
fsts
outsl
cmpb
inc
aad
jo
inc
stos
mov
mov
pop
dec
mov
insl
ror
mov
adc
js
imul
lahf
fnstcw
bt
adc
bound
push
rcr
sbb
or
in
scas
sub
jo
inc
mov
mov
xor
rclb
stos
out
pop
xchg
out
jnp
mov
push
repnz
cmp
mov
out
fsubrs
mov
lods
add
dec
dec
addb
call
cmpsl
cltd
test
and
add
pop
lods
mov
jb
sbb
loopne
repnz
jmp
cmpb
std
psrlw
js
adc
dec
mov
popa
cmp
pushf
call
jbe
jecxz
jns
imul
inc
mov
mov
mov
mov
in
inc
out
out
fucomp
out
mov
imul
mov
iret
dec
cmpb
mov
inc
jne
aad
imul
mov
xlat
inc
adc
popf
and
sahf
mov
fnsave
cmp
jnp
gs
out
into
subl
fcmovne
aas
mov
lock
sub
scas
aam
dec
stos
pushl
pop
nop
cmpsb
pop
test
repz
xchg
mov
add
das
pop
xchg
dec
add
xchg
in
lret
test
mov
cmpsl
ret
les
inc
pushf
dec
mov
jo
movsl
aaa
addr16
pop
cmp
sub
cli
xor
add
pop
rolb
pop
push
adc
imul
leave
xchg
mov
push
faddl
shrl
pop
das
scas
push
mov
jle
cltd
adc
inc
lea
sub
call
icebp
insb
cmp
insb
add
fs
inc
sub
or
lods
mov
sub
mov
sbb
or
cmp
gs
push
cmp
test
fdiv
lods
push
movsl
loope
fistpll
jo
or
inc
mov
movsb
dec
in
xchg
fadds
mov
mov
imul
push
mov
mov
add
lea
jae
insl
lcall
mov
or
and
add
cmp
add
dec
sub
fadds
int
jno
ja
mov
pop
jne,pn
pop
rorl
jbe
popa
xchg
push
adc
sbb
scas
cmp
push
out
inc
inc
sub
pop
ljmp
inc
jo
fcoms
jmp
jp
fs
mov
xor
xor
gs
add
int3
vmovaps
call
imul
lock
and
popw
push
cmp
repnz
ret
stc
adc
mov
mov
out
lret
test
std
xor
mov
es
pop
movsb
mov
repz
iret
sbb
jp
cwtl
into
adc
add
cmpsl
lahf
mov
rolb
adcl
notb
loope
xchg
jge
mov
and
xchg
xor
data16
cmpsb
adc
push
xor
mov
xchg
je
pusha
cmc
out
cmp
mov
ss
xor
adc
pop
jne
push
mov
or
push
scas
sub
call
mov
xchg
clc
jnp
push
add
pop
les
pop
fisubrl
cwtl
cmp
test
and
outsb
cmp
xchg
mov
out
adc
std
hlt
test
inc
sbb
xchg
inc
cmpsl
inc
je
mov
aas
aaa
sahf
push
jb
push
mov
mov
sub
gs
sti
pop
andb
lods
add
dec
test
pop
test
inc
pop
mov
lcall
pop
push
dec
pop
dec
xor
adc
mov
scas
outsl
push
cltd
sti
sbbb
pop
sub
jbe
fsubrl
movsl
push
iret
dec
xchg
je,pt
mov
dec
popa
push
aam
inc
fidivs
add
adc
fstl
daa
dec
push
jecxz
jg
or
int3
and
sub
lods
jnp
add
adc
je
or
mov
inc
cmp
lock
dec
pop
scas
pop
addl
xor
mov
into
int3
mov
mov
pop
enter
jmp
andb
sbb
outsl
int3
mov
aas
sbbb
inc
pop
add
jo
sbb
mov
xorl
stos
jne
push
pop
pop
dec
mov
xor
fsts
mov
mov
pop
or
scas
push
adcl
out
xchg
xchg
push
xchg
push
inc
out
or
add
push
sbb
pushl
outsl
jmp
jo
lea
das
je
out
push
inc
dec
cmpl
mov
mov
out
mov
cmp
mov
push
mov
mov
sbb
test
inc
mul
mov
mov
pushf
adc
xchg
inc
jmp
cs
sarb
jle
push
out
pop
bound
lahf
push
and
and
and
fnstsw
and
add
sub
xchg
jns
scas
xor
pop
jnp
push
and
adc
sahf
push
and
sub
cs
or
lcall
pop
xchg
bound
in
cmpsb
lcall
push
cmp
scas
push
nop
out
addr16
sti
dec
or
sahf
fsts
fwait
cmc
mov
mov
arpl
mov
xchg
mov
ja
mov
sti
arpl
jle
scas
jge
mov
or
pop
jae
dec
mov
cwtl
sarb
cld
sbb
es
std
xchg
mov
mov
orl
popa
std
mov
test
lcall
jmp
push
test
je
imul
out
jae
xor
xchg
cmp
pop
jge
ss
aam
lods
push
outsl
daa
adcb
xor
cmp
hlt
push
xor
mov
sbb
dec
shll
mov
mov
jp
pusha
xor
sub
je
add
insb
dec
mov
xchg
mov
cmp
sahf
push
or
add
mov
sub
cmpsl
xor
xchg
inc
adc
into
xchg
jl
movsb
std
mov
icebp
adc
mov
cmpsl
mov
dec
cwtl
pop
mov
xlat
jg
or
mov
mov
dec
test
mov
mov
xor
stos
rorb
add
int
add
add
mov
mov
jae
and
mov
rcll
push
cmpl
imul
enter
test
xor
imul
aad
and
sbb
int
arpl
js
pop
xchg
out
into
adc
mov
ljmp
push
js
xor
push
dec
pushf
adc
add
xchg
test
test
add
inc
jg
cli
adc
shr
and
adc
shll
in
sub
mov
popf
scas
add
inc
sbb
cs
into
lahf
or
xor
in
sub
cmpsl
mov
xor
or
xchg
or
iret
and
jmp
mov
add
pop
push
imul
lods
out
test
fistps
mov
mov
test
or
add
xchg
inc
subb
xor
dec
xor
push
mov
enter
shr
or
in
xchg
jmp
or
adc
cmp
inc
imul
insb
outsb
inc
lret
insl
or
mov
mov
adc
adc
push
scas
jnp
adc
mov
ljmp
ret
mov
mov
fldt
in
xchg
and
jns
pop
mov
lods
leave
xchg
fdivrp
dec
and
mov
dec
add
inc
jmp
test
cmpsl
std
loop
ret
fistpll
ja
push
dec
aam
stc
fcomps
lret
add
outsl
cmpsb
push
cmp
mov
sub
js
add
sbb
outsl
in
popa
punpckhwd
xor
movsb
shlb
push
leave
push
popa
and
jnp
adc
cli
cmc
add
leave
arpl
xchg
fbstp
out
scas
sbb
or
data16
leave
outsl
inc
push
mov
dec
pop
outsb
lret
jne
das
dec
sub
dec
lret
pop
fimull
mov
xchg
adc
sub
out
push
in
das
cwtl
int3
dec
mov
lods
scas
mov
out
mov
mov
xchg
stos
in
mov
add
lcall
out
fldenv
scas
ret
pusha
in
stos
and
cmp
sti
loopne
aas
fists
mov
pop
jge
pop
xlat
or
call
fcoml
mov
pop
ret
mov
sbb
pop
movsl
imul
adc
lcall
add
cmpsl
fisubl
mov
push
ljmp
subb
add
mov
mov
xchg
daa
mov
andb
movsb
or
pop
mov
out
pushf
add
aam
cmp
lret
sub
mov
subl
fmuls
aad
jge
ret
and
cwtl
push
pop
mov
loope
repnz
movb
pop
sbb
dec
popa
dec
in
or
adc
xchg
or
dec
push
out
andb
sbb
fisttps
mov
pop
lods
sarb
outsb
push
out
dec
sub
ficoms
insb
xchg
lock
mov
aaa
and
push
icebp
xor
cltd
pop
sub
mov
in
ret
popf
addl
in
inc
push
cwtl
imul
sahf
adc
jp
aad
in
jns
inc
shlb
push
aas
adc
adc
jno
jns
dec
in
insb
movsb
mov
ds
inc
in
or
loop
mov
cmp
repnz
addl
js
mov
addr16
mov
cld
fsubs
cmp
mov
sub
or
aam
fs
lea
xchg
mov
popa
mov
push
imul
and
or
and
dec
pop
cld
add
jl
jl
ljmp
fstpt
lods
out
mov
and
jle
jne
adc
shlb
push
dec
sbb
ret
pushf
ja
test
sbb
inc
bound
xchg
daa
sbb
inc
fs
inc
movsb
jle
or
push
and
mov
sarb
cmp
fisubl
cld
xchg
pop
nop
out
adc
xchg
loop
and
out
test
into
adc
push
stos
test
daa
sti
ficompl
jge
and
insb
mov
shrl
push
cmp
mov
dec
mov
in
iret
jbe
mov
pusha
add
jg
ret
inc
jb
or
pop
mov
arpl
push
jnp
addr16
movsb
push
test
movsl
test
mov
add
lds
fiaddl
mov
cmp
xchg
imul
lock
inc
pop
out
mov
repnz
movsl
movsl
insb
dec
pop
xor
out
sub
fcomip
rcl
lret
mov
dec
divps
adc
and
scas
cmp
and
aas
jl
or
mov
orb
mov
leave
mov
ljmp
xchg
sbb
or
sbb
out
rcrl
sub
push
stos
les
mov
aaa
jecxz
fisubl
jmp
sbb
imul
cmp
xor
rorl
loop
loop
pop
fwait
add
arpl
push
imul
scas
fwait
adc
xchg
shrl
xor
loope
fmul
pop
mov
cmp
cltd
sti
in
fmuls
into
push
mov
jo
cltd
dec
loopne
je
mov
mov
rorl
fwait
xchg
push
adc
inc
xlat
imul
jne
pop
out
cmp
inc
and
and
xchg
mov
lds
push
test
das
insl
sbb
xor
jmp
repz
aaa
dec
out
fdivrs
aad
xor
shlb
jns
adc
jno
pop
sbb
xlat
sub
scas
mov
inc
jmp
in
xchg
cld
or
in
xor
test
xlat
push
nop
pushf
outsb
out
mov
aaa
inc
stos
mov
cmp
ss
call
add
mov
fiaddl
xor
push
lcall
loop
mov
insl
fsubrl
dec
iret
cli
jns
and
jb
jp
aad
je
inc
push
or
movsl
push
outsb
scas
stos
fstpl
stos
bound
test
aam
hlt
mov
mov
mov
pop
mov
mov
shlb
dec
stos
cli
mov
mov
sbb
ja
jmp
jle
shr
xchg
test
sbb
cli
pop
fsub
pop
dec
adc
push
lods
xor
divl
and
xchg
rolb
dec
adc
js
sbb
sbb
jbe
stos
les
mov
jne
dec
daa
stos
mov
fs
or
xor
daa
mov
mov
gs
fdivl
xchg
test
gs
lods
or
jmp
xor
mov
cmp
mov
sarl
dec
cmp
jecxz
adc
mov
sub
mov
out
stos
dec
roll
insl
adc
mov
sbb
cmp
push
pop
cmc
gs
hlt
xchg
aas
sahf
sbb
movsl
sbb
pop
push
cli
stos
cmp
int
cmp
sub
mov
sarb
add
push
insb
and
jo
xchg
adc
cmp
lock
ficompl
lea
pop
cmp
fxtract
lahf
add
fs
add
pop
js
movsb
scas
fnstenv
insl
pop
test
outsl
mov
hlt
lcall
testb
enter
enter
ds
adc
pop
cs
xchg
fsubrl
jns
decl
das
aad
cmpb
cmp
xchg
push
mov
dec
sub
pop
push
mov
xchg
pop
sbb
inc
int3
mov
stos
or
hlt
ficoml
aam
pop
adc
push
dec
or
push
mov
ret
cmp
imul
pop
movl
lahf
aas
sub
pushf
pushf
lds
push
nop
lods
mulb
mov
xor
ljmp
inc
ror
inc
mov
xchg
pop
popa
sub
mov
in
psrlw
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
push
dec
loopne
jl
dec
pop
jl
mov
mov
xchg
cmp
cld
insl
cmpl
jg
dec
push
inc
xor
push
mov
mov
push
sbb
push
sbb
inc
mov
or
test
jno
dec
fwait
mov
sbb
cld
sbb
jmp
fwait
mov
repz
js
pop
out
icebp
xchg
aam
mov
out
daa
mov
push
shlb
sub
xchg
std
testb
sbb
sbbl
dec
cmp
pop
data16
push
inc
test
and
xchg
jp
into
arpl
data16
outsl
and
xor
push
push
jbe
out
insl
inc
shlb
arpl
dec
jns
adc
xchg
repz
push
mov
ds
hlt
jbe
xor
fcmovu
fstl
xchg
cmp
and
add
in
inc
sahf
lcall
and
int3
fwait
inc
imul
mov
in
add
or
jecxz
adc
loop
das
daa
aas
fdivs
inc
sbb
xchg
mov
or
or
test
fnstcw
ss
fsub
rorl
sbb
mov
into
sbb
aad
es
pop
jl
aam
mov
or
cmpb
mov
dec
scas
and
mov
lcall
adc
add
pop
arpl
rcrb
xor
rcrl
pop
repnz
cld
or
push
jle
push
stc
inc
xor
arpl
xchg
push
movsl
mov
loope
jl
jbe
cmp
hlt
pop
push
mov
jbe
mov
outsb
icebp
inc
dec
dec
ja
sbb
mov
push
int
mov
int3
fldl
mov
add
dec
movsl
icebp
inc
rcr
jns
push
jp
pop
add
pop
loopne
fs
xchg
data16
loop
adc
cmp
in
repz
adc
mov
mov
iret
test
inc
push
rclb
dec
push
popf
jmp
fcmovne
pushf
jbe
in
imul
insb
mov
sbb
jecxz
leave
testl
jmpw
cwtl
xchg
mov
adcb
test
xor
mov
sbb
jb
mov
or
jbe
icebp
lock
xchg
jo
fnsave
xlat
cmc
mov
test
test
adc
std
rorb
je
sub
dec
fadd
pushf
adc
loop
mov
cmpsl
xor
dec
pop
arpl
mov
repz
xlat
nop
arpl
cmp
test
pop
testb
dec
xchg
shrb
mov
pop
pop
pop
mov
ret
popa
jae
popa
mov
push
pop
jne
into
scas
data16
push
cmpsl
and
sbbl
jg
stos
mov
stos
aas
or
scas
sbb
dec
fisttpl
dec
adc
cmp
adc
sbb
add
xor
pop
dec
pusha
out
lret
fsubl
enter
sbb
jns
dec
jne
cli
daa
dec
icebp
inc
mov
fimuls
pushf
sbb
jns
or
shlb
mov
sub
xchg
xchg
xor
push
arpl
xchg
mov
pop
notl
imul
into
adc
adc
cmp
dec
ret
sub
mov
lods
push
adc
pop
push
add
mov
vcmpsd
mov
and
fbstp
es
pop
negl
adc
jg
filds
pop
shlb
mov
mov
mov
jo
repnz
sti
repz
push
enter
jb
mov
ss
xchg
pop
fnstsw
and
mov
pushf
xor
mov
sub
cmpsb
mov
pushf
pop
inc
and
scas
shll
or
push
fbstp
mov
js
dec
xchg
xchg
inc
xchg
adcb
mov
int3
repz
rolb
mov
cmp
adc
arpl
jmp
jg
movsl
rcr
imull
mov
sbb
inc
or
mov
pop
dec
in
repz
mov
fs
mov
dec
imul
push
sub
cmp
dec
sub
push
jl
sti
jecxz
jp
pop
xabort
mov
lret
or
sbb
aam
lret
xchg
sbb
mov
jp
jae
push
scas
and
icebp
push
jp
es
das
pop
pushf
dec
addr16
or
add
jbe
jge
lds
stos
out
out
adc
cmp
dec
fsubrl
fstpl
clc
sub
inc
cwtl
xchg
inc
jp
ja
ds
in
xchg
std
push
je
movsl
mov
inc
in
sub
dec
sahf
add
ret
scas
movsb
jnp
mov
push
mov
testb
mov
adc
fsubrs
lea
cmp
ja
cmp
jl
movsl
push
mov
lods
rol
ret
or
xor
adc
movsb
cli
pusha
or
or
movsb
adc
dec
pop
cmp
xchg
inc
insl
aaa
out
cmp
mov
rcrl
mov
inc
push
test
jl
mov
pop
in
aad
fidivl
sbb
pop
dec
mov
adc
andb
std
mov
lret
push
dec
fwait
lods
xor
in
jb
adc
icebp
cmp
mov
push
pusha
xchg
leave
push
sbb
dec
inc
xchg
mov
jbe
loop
loopne
out
and
dec
ror
icebp
inc
insl
dec
jo
in
lahf
xchg
sub
sub
push
pusha
lods
lock
test
jp
faddp
jb
mov
adc
dec
mov
sbb
outsl
mov
xlat
js
mov
cmp
xchg
dec
pop
jno
cmp
mov
cmp
rorl
push
nop
inc
pop
dec
popf
mov
stos
divb
mov
mov
call
or
test
or
pop
jo
and
inc
in
dec
movsb
fistpll
in
pop
xor
daa
cmp
cmp
aaa
sbb
lods
test
dec
mov
inc
jnp,pn
jg
pop
rcr
sub
and
test
xchg
inc
or
into
sbb
jecxz
pop
and
push
jae
test
int3
push
or
mov
cmc
dec
sub
lock
int
mov
out
repnz
inc
sbb
cmp
out
scas
cmp
lret
mov
lock
lea
add
rcrl
cmpsl
arpl
mov
jno
and
sub
insl
xor
and
jmp
push
icebp
int3
add
loope
mov
insb
xor
adc
stos
call
cmp
push
test
push
jge
faddp
fdivrl
sbb
sbb
jne
mov
add
jnp
pop
pusha
cmp
test
fimull
loopne
imul
int
movsl
sub
and
popf
fnstsw
movsb
xor
mov
movsb
stos
cmp
inc
rcll
incl
testl
fcoml
sub
or
or
sub
sub
push
add
fwait
mov
ja
pop
into
adc
and
push
popa
bound
scas
in
dec
push
test
int3
xor
and
xchg
fistps
sbb
xor
fidivs
jo
cmp
mov
xor
mov
mov
clc
enter
movsl
decl
and
push
cmp
adc
pop
jg
sub
jno
jae
adc
dec
or
xchg
jne
sub
xchg
cld
xor
xchg
pop
sub
xor
jle
push
loopne
loope
repz
leave
ret
test
daa
fimuls
cwtl
lcall
cmp
mov
test
arpl
and
xor
ljmp
pandn
inc
cmc
lock
sti
jns
divl
mov
dec
push
push
sub
mov
cmp
stos
out
cmp
imul
jp
loop
je
dec
scas
mov
aad
aas
addr16
inc
lea
in
mov
cmp
mov
enter
imul
fidivrs
sbbb
nop
add
mov
mov
mov
xchg
movl
loopne
leave
bound
lcall
xchg
insb
fbld
sbb
icebp
mov
sbb
sbb
test
int3
lds
pop
add
out
mov
or
cmpsb
xchg
icebp
pop
dec
jmp
mov
sbb
arpl
ljmp
leave
out
sub
dec
test
fidivrs
testl
imul
fs
jbe
adc
outsb
dec
pop
xchg
cmc
pop
push
out
popf
inc
mov
jmp
daa
jg
fs
mov
cwtl
notl
inc
outsl
scas
xlat
imul
push
imul
nop
icebp
push
inc
xor
jl
scas
imul
sub
add
dec
sti
es
xchg
inc
insb
adc
pop
xor
sahf
daa
popf
fidivrl
inc
out
xchg
enter
inc
and
cwtl
pop
enter
cmp
cmpl
std
fmuls
xchg
pandn
in
mov
test
ficoms
jne
sub
cmp
push
loop
sbb
add
pusha
repz
push
mov
mov
out
enter
iret
lds
mov
xor
test
or
test
cmp
mov
jge
jnp
mov
inc
push
cltd
pusha
iret
lods
popf
hlt
adc
xor
push
lcall
shl
into
inc
adc
dec
fdivs
fcmovnb
nop
pop
push
xor
sbb
dec
pmaxsw
sub
inc
push
ljmp
sti
pop
scas
in
sub
xlat
push
jle
push
lcall
jae
ret
and
jae
cwtl
sbb
lret
popf
dec
shl
fstps
jmp
ficomps
enter
sbb
sbb
sbb
xor
jbe
leave
scas
xor
adc
fcomi
push
sbb
sub
push
test
push
add
je
ret
int3
insl
fwait
push
cmp
xchg
lahf
pop
mov
mov
and
mov
cmpsb
adc
push
outsl
add
mov
clc
fdivrp
and
mov
je
loopne
xor
jno
or
add
lret
fidivl
inc
mov
ret
in
mov
or
pop
repz
jne
mov
dec
jns
sarb
fdiv
xchg
fdivl
fnsave
adc
ss
dec
xchg
xchg
sub
dec
and
movsl
pop
lds
or
pop
or
adc
ret
frstor
rclb
adc
jne
xchg
adc
out
push
call
xchg
fstpt
jae
sbb
popa
pushf
cmpsl
push
outsb
mov
xor
ljmp
cli
rcr
sub
push
mov
mov
pop
inc
add
dec
sbb
ret
inc
jl
and
push
insb
cmp
mov
push
dec
mov
imul
aas
xchg
xor
xchg
cltd
lahf
icebp
push
std
xor
cmp
movsl
cmp
leave
stc
push
sub
xchg
cwtl
cld
pop
sub
pop
in
fcmovb
ja
fsts
adc
cmp
movsb
adc
push
enter
icebp
ficoml
mov
ljmp
and
xchg
push
sarb
mov
repnz
mov
incl
push
orl
adc
adc
pop
fnstenv
arpl
jae
or
loop
jle
inc
dec
jne
xor
out
icebp
leave
mov
push
ret
sub
fcmovnbe
sti
xor
push
in
in
adc
sub
dec
add
fsubrl
cmpsb
inc
popa
sbb
repz
aad
in
xchg
mov
jbe
fbld
sbb
setl
test
sub
mov
inc
mov
cmp
xor
mov
inc
inc
pop
mov
mov
inc
sbb
inc
test
adc
clc
cmovs
leave
xor
adc
stc
js
notb
hlt
out
nop
sub
xchg
mov
aaa
dec
sbb
arpl
adc
dec
push
setb
pop
fwait
pop
pop
test
fistpll
out
addl
stos
lea
dec
popa
mov
insl
imul
push
inc
or
mov
aam
xchg
roll
loop
mov
and
out
lret
iret
in
mov
les
adc
fdivrs
inc
mov
xchg
sbb
pop
or
push
mov
and
mov
cmp
jp
cli
and
sub
dec
lret
imul
fadds
and
addb
aas
inc
rcll
popa
insb
fndisi(8087
jnp
jb
xor
mov
or
test
and
xchg
jae
inc
xor
jg
dec
pushf
push
xchg
xor
sub
fcomi
dec
and
or
sub
stos
adc
and
mov
adc
lret
fbstp
pop
jo
dec
ds
aam
je
test
call
outsl
mov
and
xchg
sub
jae
adc
stos
test
add
or
or
lret
push
mov
jmp
cli
add
mov
sbb
mov
outsl
cli
mov
int
xchg
scas
imul
mov
mov
dec
dec
fyl2xp1
dec
lods
adc
nop
sbb
cmpsb
sub
cmc
xor
inc
add
jns
inc
stos
imul
cmp
mov
imul
sub
rcrl
mov
out
das
adc
lcall
and
ret
cld
inc
and
in
inc
aas
pop
hlt
cld
dec
xchg
gs
shl
adc
in
push
cmpsl
sbb
test
repnz
mov
mov
xchg
je
clc
std
test
cmpsb
or
and
jnp
fisttpll
inc
hlt
fs
aaa
jg
pop
jnp
pop
std
mov
cmp
push
jmp
push
push
iret
mov
mov
cmp
push
cmc
mov
inc
xor
scas
call
leave
dec
in
sub
ficoms
add
fs
and
xor
push
mov
sbb
clc
lds
cmpl
scas
mov
xor
or
ljmp
pop
mov
pop
xchg
adc
jnp
xor
jb
push
xchg
insl
roll
fcmove
mov
dec
js
jle
out
xor
mov
cmp
push
and
sahf
je
and
mov
dec
lret
and
xor
xor
popa
scas
fcmovne
inc
sbb
stc
and
or
mov
je
imul
ret
push
jmp
movsl
add
ljmp
cmp
outsl
in
jo
ja
dec
in
mov
adc
jl
adcl
sahf
ds
or
cmc
pushf
imul
xor
inc
xor
fnsetpm(287
cmc
sub
mov
fnstcw
xor
adc
les
cwtl
loopne
imul
lds
fisttpll
sbb
adc
push
sub
mov
inc
cmp
aam
ret
and
jle
or
idiv
jmp
fsubrl
aas
aam
mov
ss
push
push
push
push
scas
lahf
and
push
and
mov
sarl
or
outsl
iret
or
fwait
dec
int3
lahf
cmp
mov
loop
daa
xchg
sub
ret
nop
ret
jno
push
sbb
popf
outsb
imul
outsb
lods
xchg
jns
inc
adcb
xchg
and
xchg
out
xchg
imul
cs
out
and
add
dec
scas
sub
push
sub
mov
and
cltd
push
lcall
push
mov
es
jmp
sbb
xchg
xor
fisttpll
mov
xor
sbbl
inc
mov
mov
fnsave
xchg
ds
sbb
movsb
mov
repz
pusha
inc
xchg
or
push
inc
jle
xchg
icebp
sbb
mov
scas
into
add
fisubrs
sub
cmc
nop
dec
mov
dec
iret
xchg
gs
mov
mov
push
push
ffreep
lods
jl
lcall
push
into
ja
out
and
fstpl
leave
adc
loopne
mov
out
pop
inc
shll
dec
mov
loop
loope
rolb
sti
and
loop
cmp
jp
outsl
lcall
arpl
jge
and
rcrb
jmp
aaa
push
xchg
lods
mov
je
dec
adc
jns
movsl
imul
insl
das
fucomp
push
in
pop
leave
arpl
rolb
les
test
adc
xor
or
rcll
mov
dec
push
inc
xor
add
mov
adc
into
ds
leave
inc
add
push
jb
cmpsb
gs
rolb
dec
aam
sbb
inc
lret
std
push
test
push
jp
mov
pop
call
sahf
mov
into
jmp
loope
lock
es
outsb
adc
mov
pop
lds
roll
xchg
sub
inc
aad
lcall
jo
loop
sub
jge
fstl
and
sahf
pop
andl
aam
push
push
inc
xchg
ljmp
inc
andl
mov
cmc
movsb
cwtl
dec
xlat
inc
lods
test
aaa
inc
in
sbb
stc
add
imul
inc
jbe
dec
jbe
cs
jbe
sbbb
imul
pop
stc
pop
dec
and
xchg
lcall
stc
lret
loop
in
pop
adc
call
andl
inc
mov
dec
loopne
into
sub
jge
je
test
int
inc
or
hlt
mov
stos
roll
push
dec
pop
pop
pop
outsb
outsb
dec
movsl
cmp
sub
sub
dec
mov
fdivl
movsb
pop
and
imul
es
sbb
mov
dec
das
lahf
das
or
xchg
js
sub
mov
and
adc
or
movsl
ds
xor
loope
popf
xchg
stos
mov
ljmp
mov
cltd
push
ret
mov
test
add
and
mov
inc
sub
xor
adc
pushf
xor
jmp
inc
fimull
scas
ja
mov
mov
fs
push
das
insb
xchg
clc
dec
jl
lcall
adc
mov
xchg
jp
push
or
filds
dec
inc
hlt
jns
test
fcomps
pop
push
dec
idivl
add
inc
pop
out
sub
jg
add
mov
jg
leave
lods
mov
inc
cmp
fisubs
pop
xor
xor
xchg
inc
xchg
push
lahf
fidivrs
shll
lock
add
inc
hlt
xchg
ds
cs
das
das
arpl
stc
and
fwait
mov
dec
test
inc
mov
lock
sub
loop
add
cli
add
mov
pop
push
scas
out
pop
shll
xor
cmp
js
and
fwait
aaa
sahf
mov
enter
mov
scas
jo
clc
fiaddl
sub
pop
xchg
les
aas
and
sbb
aad
mov
icebp
scas
sub
rclb
bound
pushf
sar
lret
mov
mov
or
cmp
sahf
or
sar
sub
sti
lcall
cmpsb
pop
movsl
mov
add
push
inc
addr16
cli
xchg
filds
je
fstpl
mov
mov
add
insl
fildl
pop
fdivrl
jno
jp
mov
lret
xchg
rolb
or
loopne
pop
mov
jge
rol
push
cmp
xchg
mov
sbb
sti
sbb
sbb
imul
push
addl
cmp
mov
pop
ret
xchg
jne
or
mov
test
sub
lcall
cmpsb
std
jp
mov
adc
mov
fcmovne
hlt
mov
rcll
jmp
jmp
fbld
dec
stos
dec
rcrb
stos
jg
push
push
inc
xor
leave
out
jmp
cmpsb
out
sbb
mov
insl
pushf
test
or
sub
stos
fistps
pushf
lret
dec
ficomps
clc
sub
rorl
mov
into
pusha
icebp
shrb
add
add
lcall
adc
loop
cltd
pop
fwait
push
imul
js
add
add
xchg
mov
movsb
icebp
pop
add
pop
sub
icebp
out
aaa
or
jae
push
enter
mov
insl
push
and
lods
or
push
pop
ljmp
repz
int3
loope
sbb
mov
aad
in
sbb
inc
icebp
mov
dec
adc
xchg
jecxz
imul
cs
mov
push
gs
nop
aam
sub
dec
ret
fcmovb
aaa
pop
addr16
mov
jne
sub
jne
fucomip
jno
fwait
xorb
dec
sahf
or
push
sbb
adc
ficoml
sub
mov
movsb
dec
inc
mov
scas
push
inc
stos
fbstp
imul
sbb
aam
ds
jge
sbb
add
repz
lock
test
leave
insl
subb
sbb
push
mov
cmc
mov
push
fidivrl
lods
cmp
push
insl
mov
daa
pushl
xor
jns
call
cmp
stos
enter
fstpl
outsl
and
add
cli
call
push
cltd
adc
jg
and
cmp
sbb
push
out
push
clc
push
sbb
je
jns
imul
ficoml
into
lcall
test
xchg
pop
sub
shl
xchg
pop
jecxz
and
icebp
sub
mov
jo
nop
movsb
push
sahf
dec
sub
test
ljmp
ret
sbb
cmp
in
inc
add
mov
dec
jns
in
mov
daa
cmp
sbb
jnp
cmp
push
test
mov
gs
mov
cmp
jmp
sahf
movntq
fsts
cmpsl
dec
or
mov
test
fsubrl
lods
repnz
cmp
push
les
stc
and
stos
push
ror
rcrb
xchg
jbe
stos
pop
mov
mov
sbb
imul
cli
cwtl
mov
test
or
outsb
mov
dec
lret
int3
and
adc
rcl
negl
mov
stos
aaa
sub
xchg
mov
push
push
sbb
into
cmp
ret
mov
scas
mov
icebp
pop
ljmp
ret
lcall
andl
mov
cmpsb
sub
pop
and
mov
je
xchg
loopne
xor
jae
sub
add
shlb
pop
ss
inc
int3
les
jle
lcall
std
sti
sub
jo
cmpb
das
cmp
cltd
xor
push
mov
cmpsl
jnp
pop
jo
dec
push
mov
sub
lods
mov
sbb
call
nop
imul
fsubs
rcrl
mov
movsl
scas
mulps
out
adc
jns
jbe
ds
cmp
push
cwtl
push
mov
sbb
outsb
jo
pop
rorb
ret
jo
xchg
jae
negb
call
dec
cmp
push
cld
rcrl
into
push
call
cli
repz
out
push
mov
test
jno
add
sahf
mov
int
scas
insl
jmp
inc
subl
mov
inc
dec
adc
pushw
and
and
xor
xchg
pop
mov
push
shr
test
adc
jmp
lahf
int3
dec
cmpsb
daa
pop
xor
inc
sub
cwtl
rcll
testl
mov
es
xchg
xchg
fs
adc
sbb
int3
adc
in
lds
jae
jno
out
shlb
jb
cmp
dec
leave
and
pop
mov
fsubl
and
icebp
dec
mov
les
lahf
cmp
cmp
jno
roll
adc
jge
std
leave
popf
fstpt
fisubrs
fnstenv
test
sahf
aaa
push
repz
and
into
mulb
sahf
mov
and
add
dec
or
mov
sbbl
jne
jno
mov
aaa
sarb
js
cld
lret
sarl
insl
mov
mov
add
mov
cmp
imul
pusha
ljmp
pop
inc
mov
lcall
inc
push
lret
dec
jp
sbb
mov
mov
cmp
xor
mov
xchg
stos
je
push
cmp
insl
pop
cmp
xor
adc
mov
dec
lods
jno
fucom
pop
mov
jo
dec
dec
sahf
mov
xchg
rolb
daa
ret
adc
add
jmp
push
arpl
pop
movsl
lret
mov
cmc
data16
scas
jo
addr16
mov
jb
mov
pop
mov
sbb
imul
je
sbb
xor
mov
push
dec
loope
pop
mov
imul
repnz
and
push
fnstenv
xor
fistpl
mov
fwait
daa
mov
pop
loopne
pop
adc
lahf
inc
arpl
mov
xor
out
and
xor
add
test
pop
imul
ja
loope
sti
push
push
jbe
daa
cmp
jmp
jle
data16
sti
into
jl
mov
je
outsb
mov
pop
and
mov
cmp
xchg
xchg
cmpsb
mov
push
push
mov
cld
mov
test
orl
cmp
push
pop
loopne
xlat
call
mov
mov
jo
sbb
and
ja
imul
mov
inc
movsb
add
or
sub
dec
popf
mov
into
ror
and
jge
mov
cmp
dec
mov
loopne
push
cmp
cmpsl
mov
adc
add
stc
repnz
mov
jne
cmc
sbb
xchg
adc
add
mov
les
cmpsb
aaa
hlt
popa
jle
xchg
mov
dec
sti
fisubs
pop
jg
push
mov
jg
sub
mov
add
adc
insb
sbb
mov
sti
and
adc
sub
or
xchg
mov
fistpl
pop
aam
mov
xor
and
test
loope
push
xor
div
loopne
pop
in
push
hlt
mov
push
std
imul
ljmp
mov
fs
fs
mov
enter
gs
xlat
xlat
adc
test
out
aad
mov
movsl
movsl
incb
fdivrl
in
mov
pop
gs
movsl
or
movsl
fstps
lret
jp
icebp
rolb
insl
imul
shlb
std
and
dec
int
fs
xchg
stos
pop
sarl
dec
stos
repz
dec
pop
jo
mov
push
shrb
addr16
jecxz
and
ret
jle
and
dec
ljmp
scas
iret
mov
inc
lret
mov
pop
jne
das
xor
bound
and
sbb
fsubrl
mov
adc
xchg
lcall
pushf
cmp
mov
lds
stc
pushf
push
fmull
sarl
jae
inc
out
add
lcall
jne
pusha
mov
xchg
fbstp
mov
sbb
push
jnp
and
sub
mov
cmp
and
jno
xchg
divb
mov
inc
punpckldq
pop
push
punpckhwd
pop
mov
lret
sahf
jecxz
pop
lds
cwtl
push
shrd
adc
mov
int3
jge
cmp
sub
or
lds
and
imul
jne
movsl
or
lock
int3
shlb
ret
xchg
int3
xchg
pop
and
sar
scas
adc
and
cwtl
std
ja
pushf
daa
lret
xor
pop
xchg
cmc
dec
popf
lods
sbb
dec
sub
rcrl
jae
xchg
push
fidivrs
jecxz
adc
loope
repz
pop
push
mov
shll
push
cmp
lea
test
inc
inc
and
mov
sbb
xlat
add
cmp
pop
lret
mov
roll
dec
jmp
sbb
jns
inc
lods
adc
push
xor
pushf
sbb
sbb
cmp
divb
xchg
jg
scas
in
int
dec
fidivs
arpl
pop
call
adc
pop
jnp
lret
dec
mov
fstpl
mov
stos
xchg
lahf
stc
inc
cwtl
sbb
cmp
fsubrp
sub
aas
arpl
xchg
andb
aaa
ret
add
sbb
das
test
dec
ret
in
pushf
cld
ror
andb
jecxz
icebp
ss
test
and
xor
shlb
repz
jle
sub
push
jbe
cmp
ljmp
jae
cltd
jecxz
jno
sti
lret
ljmp
adc
aam
pop
adc
mov
lret
inc
cwtl
jle
mov
or
xchg
sub
push
pop
xor
push
jns
add
mov
push
iret
jecxz
sbb
mov
hlt
lret
push
insb
into
pop
loopne
dec
es
cmp
movsl
xchg
imul
pop
xchg
addr16
mov
daa
push
inc
out
pushf
sti
movsb
clc
repz
add
in
adc
int
test
scas
cwtl
lahf
xlat
add
jle
xor
pusha
add
repz
mov
or
das
push
test
push
ljmp
sahf
mov
lret
cmpsb
add
pop
dec
mov
push
xchg
repz
out
mov
cmp
lods
mov
push
jge
push
cmovb
repnz
bound
sahf
pushf
adc
shlb
push
out
ljmp
add
enter
mov
inc
pop
sub
push
mov
mov
smsw
cmp
push
outsb
loop
decb
mov
pushf
enter
xchg
and
dec
fbld
pop
pop
push
out
push
push
mov
dec
lds
cwtl
push
sub
and
ds
ret
xchg
push
sti
popf
jle
sbb
sahf
cmc
adc
mul
lods
mov
sbb
aam
lock
xchg
pusha
test
out
pop
xchg
xor
hlt
jg
aam
adc
sbb
inc
mov
jbe
pop
mov
xor
adc
test
adc
stc
and
dec
lret
sarl
jb
mov
arpl
cmc
test
fdivrl
mov
xor
bound
xor
cmpsl
ficoml
test
dec
cli
sahf
adc
inc
pop
or
mov
xor
ja
adc
test
in
jne
hlt
add
xchg
or
aas
data16
push
pop
mov
aas
xchg
mov
jbe
xchg
loop
adc
inc
out
push
adc
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
fldcw
iret
and
pop
jl
jb
hlt
dec
xor
popf
orb
sarb
scas
pop
fldenv
inc
jb
lahf
es
adc
pusha
daa
cmp
sbb
push
pop
out
push
lods
pop
adc
and
imul
push
pop
adc
mov
mov
imul
sbbb
xchg
lret
pop
fwait
lea
pop
xlat
cmp
xlat
stos
or
inc
add
add
pop
push
xchg
add
scas
dec
fisubrs
pop
sub
repz
repz
xor
jmp
rcll
ret
ret
insb
mov
mov
bound
pop
inc
mov
pop
aad
cmp
test
push
inc
add
ljmp
in
xor
mov
loope
dec
pop
inc
or
lods
mulb
push
testb
dec
inc
call
ss
aaa
aas
cltd
cmpsl
les
data16
fs
xor
sub
xchg
into
jns
jl
pop
cs
and
pop
repnz
mov
imul
mov
fldenv
sub
es
addr16
stos
scas
fdivs
in
sbb
sbb
loope
xchg
pop
push
pop
mov
mov
jp
dec
xchg
cmp
in
push
je
negl
mov
sbb
push
ss
xchg
jmp
or
ja
mov
mov
or
add
imul
dec
mov
xor
dec
jl
sbb
pop
jae
insl
pop
out
xor
out
xchg
pop
lahf
adc
fdivrp
rcl
and
mov
sub
cmp
pop
test
jecxz
into
hlt
mov
xor
adc
das
dec
mov
int
scas
pusha
pop
cld
jecxz
movsl
sahf
or
test
mov
xchg
mov
jge
nop
aad
hlt
stos
mov
outsb
dec
fadds
sbb
in
dec
mov
out
mov
outsl
leave
stos
jns
cmpsl
in
xchg
lcall
mov
out
inc
loope
lcall
fsubs
jno
cmp
and
orb
aad
pop
mov
lock
inc
mov
inc
jns
shll
lcall
fstps
gs
push
dec
cmp
sbb
aaa
mov
loope
mov
jno
icebp
aam
hlt
push
sbb
sub
dec
popl
and
lret
sahf
out
jg
das
jb
fsubr
mov
ja
and
pop
int
pop
js
or
push
shll
mov
cli
scas
xchg
push
mov
repnz
add
and
dec
in
and
andb
sub
xchg
ds
lahf
lock
dec
loop
xchg
jmp
and
jbe
jmp
scas
clc
popa
push
sub
sbb
jmp
ja
jae
fmuls
ss
jbe
jg
pushf
push
mov
loopne
fwait
sbb
out
sarb
arpl
cmp
stc
xor
cmp
mov
call
out
imul
and
inc
push
nop
or
push
jecxz
divb
adc
enter
mov
sub
repz
cwtl
mov
fisttpll
pop
dec
push
push
mov
dec
imul
aas
aad
dec
out
aam
sbb
gs
cmp
sahf
jmp
inc
pushf
jo
outsl
test
jnp
xchg
adc
jge
inc
ljmp
ja
sbb
push
enter
sub
jmp
or
cld
mov
aas
lods
push
adc
lock
jb
adc
fimuls
in
adc
mov
pusha
fisubrl
mov
xchg
xchg
pop
scas
sti
adc
decb
dec
outsl
inc
call
cltd
out
cltd
mov
xor
jecxz
xor
xlat
pop
inc
andb
and
lret
fcoms
dec
or
lcall
jge
aam
cmpsb
pushf
pop
xor
jecxz
aaa
push
sub
test
stos
mov
and
inc
mov
jge
mov
jecxz
xchg
sub
pop
out
inc
test
jmp
push
xlat
loope
ret
xor
xor
data16
dec
sbb
xchg
or
mov
pop
cmp
test
xor
je
test
adc
lea
or
add
pop
imul
pusha
pop
aam
dec
insb
mov
or
adc
mov
mov
js
insw
negl
xchg
pop
fsts
inc
std
xchg
cmc
mov
mov
arpl
add
mov
mov
jns
rep
xlat
aaa
pop
sub
lahf
lret
mov
pop
xchg
lds
jae
sbb
ret
dec
ja
dec
mov
data16
or
stos
scas
lods
rclb
and
adc
fsubr
ljmp
cmp
out
outsl
or
push
cmc
iret
pop
pop
sbb
lret
int
pop
mov
vunpcklps
nop
imul
mov
cwtl
je
stc
push
call
add
hlt
aas
scas
aas
adc
sub
xor
cmp
adc
add
orb
cmpsl
xlat
bound
nop
add
xor
mul
jno
sbb
jae
aad
cmpsb
inc
movsb
into
adc
jo
fisttpl
shlb
or
loopne
push
andl
lea
xchg
lret
mov
into
rolb
cwtl
adc
in
push
jg
int
xor
and
negl
mov
sub
test
sarl
or
mov
out
pop
imul
stc
push
pusha
das
faddl
insb
jge
lret
xor
pop
int
jb
and
mull
lea
sub
aam
popl
testl
xchg
mov
mov
sub
sub
mov
lods
daa
jo
mov
pop
call
push
xlat
adc
sbb
sahf
or
aaa
add
mov
mov
movsb
lock
dec
cmc
push
cli
xor
stos
and
xor
outsb
dec
js
test
inc
xchg
outsl
add
outsb
mov
dec
cmp
in
pop
rcrl
sbb
inc
mov
inc
cmc
in
rcrb
pop
mov
stos
cmpsb
bound
mov
push
pop
mov
aam
cmc
aaa
jne
fistps
jmp
loope
mov
loop
and
add
repnz
lcall
sarl
mov
and
mov
cld
or
in
std
dec
insl
dec
adcb
jle
adc
scas
adc
inc
dec
leave
test
test
and
push
fildll
nop
in
arpl
or
cli
jmp
ds
ret
sbb
jne
fisttps
je
sub
ds
mov
out
sub
push
sbb
push
jge
imul
call
mov
push
sahf
sbb
add
jp
mov
mov
mov
mov
push
out
cmp
fs
push
jg
in
mov
inc
mov
out
xchg
pop
pop
les
pop
dec
xor
jp
dec
nop
hlt
push
sbb
cwtl
mov
mov
mov
arpl
enter
mov
mov
xor
bound
adc
std
imulb
xchg
sbb
xchg
add
cli
loope
mov
sahf
stos
or
in
or
idivb
std
lret
and
int3
mov
and
mov
clc
xchg
inc
xchg
dec
mov
push
fbld
jae
das
push
mov
xchg
add
dec
sbb
insl
pop
push
sub
popf
inc
icebp
mov
push
rcll
adc
testb
stos
jle
ds
fcmovu
jno
mov
call
sub
test
sub
add
js
repz
stos
sub
paddd
sub
jns
popf
and
ret
mov
shll
adc
and
mov
push
pushf
daa
mov
sbb
mov
push
mov
lea
or
jae
lret
idiv
or
jmp
jecxz
iret
std
dec
loop
inc
ldmxcsr
sub
add
xchg
xchg
leave
pop
jno
jne
jbe
xor
xor
dec
push
ret
add
in
popa
and
jl
repnz
xor
dec
jae
push
xor
test
je
inc
xchg
cwtl
or
sub
cmp
repz
popf
rorb
cmc
inc
mul
mov
aaa
xchg
repnz
sub
inc
push
in
inc
jbe
and
dec
movq2dq
adc
pop
cmp
or
sbb
arpl
lods
sub
sbb
stos
inc
and
pavgw
sub
pushf
or
movsl
pop
into
gs
pushl
inc
insb
imul
daa
dec
movsl
movsl
mov
cwtl
push
sub
js
inc
stc
or
mov
arpl
adc
jne
roll
pop
adc
js
int
mov
mov
jg
xor
in
pop
lock
cmp
in
popf
push
scas
movsl
jmp
mov
aad
cmp
push
or
fldenv
nop
arpl
xchg
aaa
lahf
mov
pushf
mov
pusha
fcoms
test
daa
imul
imul
aam
mov
jno
shr
cmp
and
xor
loope
out
out
popa
jno
mov
popa
mov
mov
repz
jp
sbb
pop
mov
cs
fidivl
test
push
cltd
popf
cmpsl
cmp
xor
inc
into
cmovp
sub
lods
sub
lahf
mov
mov
lds
inc
cmp
and
in
jno
adc
dec
push
sbb
sbb
loop
jle
pop
jno
pop
pop
lock
push
pop
add
inc
jno
ret
rorb
inc
dec
jno
dec
jae
mov
fistpl
and
cmc
or
inc
mov
mov
dec
xor
or
outsb
push
push
jmp
jmp
add
loopne
sbb
cmp
cld
adc
push
dec
or
cld
std
mov
hlt
fidivl
stos
clc
ss
add
fnsave
mov
and
or
mov
jmp
data16
add
cmpsl
lahf
loopne
decb
or
rol
imul
fadd
xor
push
dec
xchg
ss
sub
mov
shll
dec
int
mov
sbb
cmp
or
pushf
add
mov
ret
loop
jo
int
int
sahf
sbb
in
jle
mov
imul
dec
xchg
cmpsl
jno
dec
inc
out
adc
cmp
dec
stc
sbb
pop
add
or
and
out
dec
out
add
jmp
add
pop
dec
fimull
lret
xlat
aam
data16
mov
fstps
imul
clc
cmp
sbb
pop
adc
push
sbb
aam
leave
mov
es
jecxz
pusha
mov
in
pushl
jae
das
lahf
inc
mov
rorb
cmpsl
push
inc
ljmp
fdivrl
out
adc
jne
dec
loopne
jnp
jne
mov
or
cmp
sbb
shlb
xor
insl
loopne
rcr
gs
mov
pop
xchg
orb
push
push
push
jno
mov
out
jl
loop
mov
cmp
lods
fs
out
cmp
inc
cwtl
sub
std
daa
repz
stc
cmp
xorl
mov
repz
inc
negb
pop
mov
jge
imul
dec
push
push
mov
and
push
ds
cmp
cmp
lds
ljmp
sahf
cltd
mov
push
adc
sub
lods
icebp
lock
cmp
sub
fwait
icebp
sbb
idiv
xor
imul
mul
fldcw
into
lds
push
jl
mov
jo
flds
lret
repz
pop
fsubrp
mov
imul
lret
iret
aad
pop
mov
leave
cmp
movb
push
stc
out
nop
subb
fsub
jbe
xchg
add
or
mov
gs
hlt
mov
xchg
outsb
jmp
xor
or
mov
add
mov
aad
fiadds
adc
push
mov
scas
mov
outsl
mov
cmp
aad
mov
push
lret
push
dec
gs
loop
fstpt
mov
test
aas
dec
inc
sbb
fsin
roll
outsl
xchg
mov
adc
add
cmp
std
orl
sbb
scas
nop
fucomi
pop
inc
dec
sub
pop
jnp
and
adc
dec
add
scas
nop
cltd
sti
push
sub
ja
imull
sub
outsb
mov
test
in
dec
jae
xchg
and
adc
and
jno
icebp
push
sti
insb
sub
dec
mov
inc
loopne
lods
popf
mov
test
sbb
cmp
jle
out
dec
add
jmp
xchg
cmpb
popa
inc
adc
adc
out
iret
push
shll
pop
jb
or
insb
mov
mov
mov
vcvtps2dq
scas
sbb
fcmovb
mov
jne
push
sbb
xchg
sub
inc
lcall
xchg
add
ret
jl
fnstcw
sub
mov
mov
xchg
imul
xor
imul
aam
aad
pop
and
sahf
mov
int3
pop
mov
popf
dec
jecxz
inc
int3
cmp
add
aam
mov
cmp
push
mov
inc
orb
pop
dec
out
cmc
insb
mov
jb
sub
out
or
mov
mov
inc
push
daa
scas
pushw
mov
imul
mov
js
mov
inc
daa
mov
pop
or
mov
push
fucomip
fucomip
loop
xchg
shrb
out
mov
pop
stos
push
repz
jp
xor
stos
aam
adc
xchg
sub
rorb
xchg
mov
fsubs
stc
add
xor
test
test
add
mov
pop
pop
sbb
ret
jae
xchg
mov
mov
fisubs
fnstenv
mov
out
jbe
fldpi
jns
fwait
dec
push
dec
xor
xchg
loopne
loopne
add
mov
mov
dec
cmp
or
jp
out
add
push
xchg
xor
scas
dec
xor
xorl
dec
mov
pop
mov
pop
popa
and
in
enter
rcl
jmp
inc
inc
mov
xchg
lahf
rorl
fwait
inc
xlat
aam
lea
push
arpl
test
adc
cmpsb
mov
mov
les
icebp
shrl
int
ss
xchg
xor
or
xchg
sbb
xchg
jb
jge
xchg
les
sbb
pop
test
ljmp
xchg
adc
fcoms
aam
xchg
fwait
push
mov
pop
xlat
shll
jp
lea
rolb
js
loop
outsb
add
cli
pop
adc
out
add
outsb
inc
add
scas
pop
jb
and
sub
out
nop
rcl
hlt
xor
out
xor
mov
inc
mov
add
pushf
sub
push
adc
add
jle
xorl
jge
shrl
push
stos
in
mov
add
adc
stos
rcr
push
hlt
and
or
xchg
call
addb
out
fdivl
enter
js
mov
movb
aam
loopne
sarb
lret
push
out
pop
mov
das
push
cli
js
hlt
mov
ljmp
adc
psubb
dec
addr16
cltd
xchg
adc
adc
push
add
mov
adc
in
int3
xchg
in
jecxz
lret
mov
aas
fs
es
add
push
sub
dec
outsb
mov
enter
bnd
and
add
insl
xchg
sbb
mov
insb
orl
lret
push
jp
jae
dec
fbld
xchg
sahf
push
fimull
es
dec
inc
push
jg
icebp
mov
add
cmp
jns
mov
xchg
in
push
and
lods
scas
call
xor
mov
mov
mov
adc
inc
repnz
push
push
sahf
xor
ss
loop
in
xchg
mov
cmp
jg
lahf
iret
or
shrl
lea
push
loopne
mov
aam
dec
add
jle
pop
jmp
jns
pop
xor
imul
addr16
sbb
test
loopne
into
iret
loope
cmpsb
iret
cli
mov
hlt
loop
mov
inc
shrl
sub
loopne
mov
pop
fmuls
popf
cmp
roll
movsb
adc
movsb
mov
dec
out
add
inc
mov
adc
popa
rol
loop
cmpsl
pop
xchg
mov
into
movhps
sub
call
rcll
jbe
inc
pushf
push
fst
cmc
lock
orb
loope
aam
or
mov
or
sbb
mov
stos
jmp
pusha
pop
in
cs
and
mov
and
xlat
pop
cld
nop
aaa
popa
test
jb
inc
xchg
outsb
out
mov
push
xchg
jp
lahf
fnstsw
xchg
push
popf
movsb
gs
flds
jne
ret
inc
mov
andb
mov
mov
imul
stc
push
dec
imul
dec
out
fidivrs
loope
mov
mov
dec
nop
sub
dec
push
sbb
dec
pop
movsb
les
inc
test
mov
sub
cwtl
push
gs
inc
adc
rolb
repnz
out
mov
fdiv
insl
fwait
jae
mov
jo
cld
icebp
pop
mov
cmp
and
cmp
cmp
xchg
adc
and
mov
and
sub
push
lret
out
pop
ds
ljmp
push
cmpsb
imul
sub
dec
push
push
popf
mov
cmp
mov
xchg
jns
data16
mov
movsl
fdiv
imul
xorb
cmpsl
or
mov
aam
imull
and
test
sbb
jp
cmp
fisubl
cmp
fiadds
lea
aas
jge
loope
add
ss
mov
add
sub
into
pop
push
xchg
pop
jmp
iret
ds
adc
cmp
inc
xor
inc
mov
push
scas
sbb
imul
in
in
jp
jns
push
mov
fidivrl
jle
les
mov
and
add
push
fidivrs
xchg
ss
imul
neg
jbe
add
jecxz
popa
std
mov
adc
stc
lock
inc
add
repnz
pop
and
popa
push
jl
mov
pop
lods
fwait
ret
sbb
out
adc
test
stc
mov
xchg
fisttpl
movsb
in
ficompl
iret
mov
std
lock
test
nop
mov
mov
into
sbbl
int
stos
and
pushf
pop
test
jecxz
adc
fcomps
fcomps
mov
out
stos
andb
pusha
push
lret
pop
pop
jb
mov
out
xor
and
sub
aam
in
ret
cmp
mov
cwtl
std
lods
push
mov
nop
fnsave
stc
aam
jecxz
mov
mov
cmp
jecxz
ret
scas
pop
mov
in
cmpsb
pop
in
inc
out
dec
repz
pop
or
mov
int3
or
mov
push
xchg
xchg
cltd
dec
mov
mov
sbb
mov
shl
adc
sti
insb
test
mov
and
cli
in
xlat
mov
test
jge
cmp
mov
add
gs
pop
lahf
andb
sub
aad
jnp
cmp
xchg
outsb
mov
xor
dec
std
imulb
dec
std
loop
ss
jecxz
xchg
mov
mov
fadds
sbb
sti
or
mov
sub
ret
mov
aas
out
inc
mov
enter
iret
test
stos
subb
lret
adc
mov
or
inc
orb
mov
add
insb
or
mov
cmp
xchg
std
inc
mov
test
imul
insb
imul
js
mov
mov
mov
in
mov
imul
mov
mov
scas
sub
lret
or
or
mov
lahf
push
lock
or
push
xchg
in
mov
sahf
fistpl
cs
fiadds
lahf
into
cmp
or
xlat
inc
pop
pusha
push
outsb
arpl
and
jns
pushf
mov
sbb
lcall
and
cmpsl
xchg
pmaxub
inc
ss
stos
dec
add
dec
mov
lahf
lcall
ja
in
call
sub
arpl
into
inc
and
pop
jno
sbb
pop
mov
pop
in
add
lsl
int
sbb
adc
inc
stc
mov
rcl
mov
mov
push
add
dec
loop
push
pop
mov
sub
in
or
pop
pop
aas
push
adc
lcall
mulb
xor
jo
or
or
test
adc
xor
scas
push
int
dec
jmp
fwait
add
inc
or
fs
scas
loope
pop
rclb
xchg
or
pop
pop
jb
out
jae
sha256msg1
mov
inc
cmc
clc
pop
pop
sub
mov
mov
xor
dec
push
or
push
ja
or
mov
xor
cli
xlat
ret
dec
xchg
pusha
ret
cmpsb
fmull
ror
mov
lods
rcrb
xor
cmpsl
insl
mov
sarb
dec
pop
jae
mov
sub
push
sahf
in
test
dec
imul
xchg
dec
fs
sbb
xchg
xor
dec
mov
imul
loop
roll
xor
jle
mov
fcomi
shl
fidivrl
dec
cmp
or
inc
or
jg
movsb
ret
adcb
movsb
sbb
loop
rolb
std
adcl
and
cli
je
icebp
or
out
adc
push
dec
das
ss
stos
test
adc
sbb
cld
xor
mov
adc
pushf
lods
add
mov
test
pushf
adc
pop
inc
adc
mov
jg
cli
mov
fdiv
push
jge
pop
push
aad
push
out
repnz
clc
call
xchg
xor
jp
inc
enter
mov
inc
stos
push
jno
add
cmpsl
sbb
cmc
and
inc
shlb
xchg
pop
cmp
adc
jno
lret
sbb
test
mov
sub
pop
cmp
aaa
xchg
pushf
loope
pop
ret
push
cmp
mov
cld
xchg
lret
cltd
shr
lods
aas
cmp
mov
jl
pop
dec
fisttps
mov
cmpsb
rcll
nop
cmp
cmp
pop
test
push
insl
or
dec
shll
or
ljmp
add
out
clc
ret
fisubrs
daa
inc
pop
cmp
sbb
xor
lods
jno
push
frndint
dec
in
cli
sbb
xchg
inc
lods
out
shlb
jg
mov
inc
and
int
cs
imul
mov
adcl
mov
sti
ficoml
ja
jbe
test
sbb
pushfw
aam
out
push
fdivrl
lret
test
mov
jmp
je
push
je
cld
imul
push
sub
sbb
lcall
rorb
push
adc
sti
imul
dec
xor
lods
jl
xlat
mov
and
sahf
loope
rcl
incb
aad
fnsave
cwtl
lods
push
push
and
outsb
cli
sub
cmc
pop
cmpsb
cs
xor
push
stc
xchg
or
nop
sub
lret
imulb
lret
or
outsl
popf
mov
lret
fsubrl
dec
adc
movsb
inc
and
pushf
in
ja
cmp
dec
or
pop
add
repnz
out
jae
je
or
scas
xchg
mov
or
and
mov
jmp
fs
cmp
adc
mov
stc
push
idivb
inc
sub
xchg
or
inc
mov
ja
xchg
adc
dec
adc
or
int
incl
inc
and
cmpsl
lea
cmp
pop
stc
orb
movb
sbb
sarb
inc
and
push
ret
mov
mov
xchg
testl
decl
mov
cmp
dec
dec
mov
or
insl
gs
lds
loope
adc
mov
jecxz
into
xchg
out
dec
xor
lret
rorl
mov
push
out
ficoml
adc
insb
or
mov
test
in
ljmp
ljmp
mov
push
dec
es
scas
ficoms
lock
push
enter
inc
cmpb
mov
mov
loope
pop
pop
adc
in
pop
push
mov
mov
clc
sbb
jnp
frstor
push
inc
pop
movsl
enter
xor
add
jmp
repz
bound
pop
jmp
xchg
mov
push
int3
sub
push
xchg
sarb
sarl
dec
push
fwait
jecxz
mov
bound
mov
rsm
inc
nop
aas
xchg
pop
xorb
xchg
int
stos
sub
jle
or
leave
jb
fbld
shrb
mov
std
ret
fstps
cwtl
lret
lock
lock
sbb
mov
sub
push
pop
out
pop
adc
daa
adc
mov
mov
mov
ficoms
inc
jmp
js
shlb
xor
popa
push
xchg
mov
mov
pop
push
cs
adc
pop
pop
or
and
ja
mov
outsl
mov
mov
sti
pop
xchg
inc
jp
cmc
lods
xchg
dec
mov
xor
shrb
das
push
icebp
int
dec
and
in
cmp
out
aaa
test
xchg
ficomps
pop
outsb
jo
lock
inc
inc
iret
jne
xor
and
fcoml
mov
call
iret
sbb
xor
sarb
movsb
adc
lahf
pusha
insb
daa
jl
pop
movsb
cltd
mov
push
jle
sbb
push
ds
dec
ja
mov
pop
jb
in
dec
sti
add
xchg
cld
leave
daa
ja
mov
pop
xor
jne
imul
xor
pop
aam
sub
xlat
bound
push
mov
xor
mov
dec
mov
lcall
rol
pop
out
sub
jecxz
in
call
jmp
shl
cmp
data16
push
out
adcb
xor
or
sbb
xchg
rorb
jns
popf
dec
div
mov
stos
and
adcl
repnz
lods
in
ret
outsl
jae
or
push
lods
push
mov
mov
sub
push
js
sub
cmp
insb
xchg
cmp
xchg
xchg
loop
leave
inc
es
in
add
pop
xor
call
clc
es
push
jmp
and
iret
idivb
ja
and
andb
test
cmp
mov
clc
xchg
ja
dec
xor
in
je
sbb
mov
aas
pop
sbb
mov
ret
mov
mov
xchg
je
mov
sbb
lcall
ret
stos
mov
in
jl
lds
or
fbld
lds
outsb
outsl
inc
dec
popa
jb
mov
xlat
inc
ljmp
push
jae
mov
xchg
inc
repnz
pop
es
ds
push
jge
std
enterw
sbb
imul
dec
mov
adc
mov
push
and
mov
add
js
daa
jne
iret
in
xlat
jb
mov
mov
dec
pusha
pusha
insb
jl
popa
out
cmp
or
jne
fwait
sub
rcl
dec
push
cmp
or
outsl
cmc
push
sbb
cmp
or
sub
sub
aad
jns
jg
mov
push
icebp
add
into
aas
xor
shll
out
inc
ljmp
push
mov
pop
add
shl
lock
cmp
filds
push
adc
or
fwait
sub
cmp
sub
icebp
pop
inc
lods
cwtl
jle
in
insb
imul
xor
cmp
lahf
xchg
out
jns
stos
xchg
fcoms
mov
jecxz
and
cltd
imul
pop
jg
pop
xor
rcrb
ror
dec
sub
leave
or
sub
repz
xorl
repnz
gs
mov
inc
nop
in
mov
sub
inc
jnp
jne
mov
scas
les
out
inc
cmc
movsl
push
cld
dec
sub
sub
out
jg
daa
jmp
and
outsb
dec
test
imul
movb
sti
and
sub
sub
pop
ret
iret
call
sahf
popf
sbb
fsubs
mov
fdivs
pop
data16
add
jno
shl
cld
cld
data16
insb
or
mov
stos
icebp
push
lahf
sbb
sbb
aam
mov
das
lret
out
repz
out
rorb
ljmp
ljmp
cmp
jle,pn
in
leave
jne
xchg
or
popf
out
xlat
jmp
add
aam
scas
sbb
xlat
jmp
data16
mov
adc
pushf
or
aaa
push
or
sbb
test
push
jmp
dec
push
push
sbb
sbb
fcoml
mov
int
sub
sti
jecxz
mov
sub
xchg
ret
jl
and
lea
dec
xchg
jle
not
enter
leave
dec
clc
out
fsubrl
add
call
cmc
pop
fstpl
push
cwtl
inc
lea
mov
ds
sahf
enter
sub
lea
cmc
shr
test
and
adc
push
ss
in
clc
imul
adc
test
int
inc
push
add
popf
mov
rcr
lds
stos
pop
lock
sub
stos
push
mov
cmpsb
dec
push
push
rcll
mov
mov
call
rcrb
or
mov
jmp
stc
xchg
sub
mov
inc
andl
enter
cli
into
sub
scas
ret
out
cmp
aad
sub
iret
std
sub
adc
aam
xor
mov
divl
pop
mov
sub
jne
mov
scas
jge
pop
or
movsl
cli
icebp
push
ljmp
lret
dec
stc
inc
pop
lds
aaa
mov
test
mov
jge
adc
rclb
fisubs
inc
xor
mov
pop
shrb
pop
mov
cmp
jle
int
cs
repnz
push
repz
fstl
mov
sub
push
mov
lret
sub
jecxz
in
dec
and
jb
fdivs
sub
lock
jle
addr16
push
nop
les
jbe
icebp
push
xor
shlb
add
adc
adc
jns
sbb
vpunpcklqdq
lcall
adc
pop
inc
sbb
push
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
add
jl
pop
pop
jl
cli
mul
mov
sub
pop
jb
rol
adc
mov
dec
int
pop
lea
sahf
movsb
out
or
mov
push
adc
cltd
enter
sub
imul
xchg
or
lds
in
ds
cmpsl
sbb
leave
jae
xchg
test
rorb
cmc
jge
arpl
add
add
lahf
imul
push
mov
loopne
repz
lea
pop
or
faddl
cmp
icebp
adc
or
insb
xchg
cli
jns
sub
pop
adc
xchg
sbb
inc
add
dec
cmp
dec
xchg
jbe
std
int
nop
jecxz
cmpb
jecxz
mov
or
cmpb
xchg
fistpl
xchg
adc
jmp
fisubl
bnd
sbbl
fadds
adc
and
cmp
push
xor
clc
mov
mov
xor
push
inc
or
sub
jle
leave
mov
push
mov
cmp
push
inc
pop
inc
cmp
jg
or
imull
push
ds
stc
sahf
sbb
xchg
inc
sbb
adc
rcrb
push
scas
jbe
call
sub
xor
adcb
inc
scas
test
and
int
mov
mov
push
int3
outsl
loopne
jne
hlt
aas
dec
cmp
outsb
sub
arpl
scas
add
stc
or
mov
mov
movl
mov
nop
std
mov
or
out
aaa
mov
fldenv
mov
loope
inc
nop
jns
lret
subb
mov
adc
mov
and
test
cld
push
jnp
mov
xor
test
jnp
sahf
les
into
das
lock
les
xor
loope
pushf
sti
bound
sbb
mov
mov
je
inc
sub
sbb
faddp
fiadds
mov
sbb
pop
adc
mov
adc
push
mov
sahf
pop
jg
int3
lods
repz
jg
add
inc
sbb
lcall
sti
push
idiv
mov
sub
aaa
icebp
stc
scas
out
dec
ret
mov
dec
sub
sbb
or
sbb
add
jecxz
add
imul
ret
shlb
push
aas
std
lock
rclb
pop
xor
lds
dec
jne
or
cmp
addb
or
sub
lods
sbb
cmpsl
fstpl
into
dec
iret
xor
mov
in
adc
shl
add
jns
mov
and
xor
ss
or
iret
fs
loop
mov
mov
call
imul
adc
mov
sbb
lods
push
bound
add
int
jg
inc
xlat
adc
lcall
es
inc
fdivl
imul
nop
mov
xor
and
aam
clc
aas
mov
dec
mov
call
inc
xor
test
dec
data16
bound
dec
push
lock
inc
ja
nop
cmp
insb
jae
pop
aas
ret
or
es
jecxz
iret
rorb
xor
outsb
jno
mov
iret
scas
xchg
les
insl
lods
add
roll
adc
sbb
ficompl
pop
mov
cmovle
jno
or
adc
rclb
sbb
test
into
mov
dec
daa
ficoml
mov
rdtsc
aas
addr16
jnp
dec
es
out
mov
stc
add
leave
ja
test
pusha
faddp
mov
fstl
out
mov
mov
push
sbb
cltd
cmc
xchg
das
adc
mov
sub
push
loop
push
ficompl
mov
arpl
mov
scas
pop
popf
xchg
inc
je
push
psrld
jl
mov
push
js
push
stc
jns
xchg
dec
sub
mov
cwtl
and
adc
ljmp
lock
dec
inc
inc
push
lods
andl
out
repnz
xchg
movsb
jl
divl
and
cld
jecxz
mov
push
xor
xchg
scas
mov
push
sbb
loop
in
pop
je
push
mov
addb
sbb
pop
cmp
or
js
jne
fsubrp
ficoml
and
or
pop
xor
cs
btc
jmp
xlat
mov
dec
es
mov
js
fs
sub
xchg
jecxz
std
mov
cmp
addr16
test
stos
mov
faddl
mov
push
int
and
stos
ret
xchg
push
push
in
mov
loopne
clc
xlat
xchg
push
or
in
inc
popa
cwtl
cmpsb
cs
ror
test
fdivrl
mov
sbb
outsl
mov
test
shll
leave
jecxz
pop
testl
repnz
sub
gs
mov
add
pop
push
jae
and
xchg
in
insl
push
insl
stos
cltd
jb
or
lahf
stc
mull
push
cmpsl
xor
and
push
sti
adc
insb
movsl
rclb
inc
cmp
adc
pusha
jle
pop
mull
mov
js
cmc
push
fldcw
divl
xchg
test
xor
rclb
cmp
cmpsb
xlat
mov
mov
dec
adc
insl
jg
aam
xlat
aas
cld
pop
push
push
ja
insb
aam
adc
cli
jo
dec
push
loopne
clc
hlt
and
jge
pop
les
sbb
inc
aad
js
jae
adcb
mov
xchg
jl
shlb
sbb
mov
arpl
jbe
lds
adc
sub
or
fldl
mov
aas
dec
out
add
outsl
rol
xor
push
in
lods
sub
pusha
test
adcb
adc
ror
insb
pop
mov
jne
outsl
xchg
mov
mov
nop
call
lahf
data16
adc
mov
jbe
loopne
sbb
jb
jnp
clc
cmpsl
push
aad
xlat
mov
push
and
sub
in
jae
sub
push
sub
adc
sti
test
sub
pop
lcall
or
pop
out
dec
imul
mov
daa
mov
mov
cltd
xchg
hlt
test
mov
fldl
xchg
call
pop
push
jmp
push
mov
sahf
cmp
dec
sub
stos
adc
fsubs
mov
lds
into
cld
ret
push
bound
mov
push
push
cmp
aad
je
movsb
mov
jp
icebp
iret
movsb
not
ja
pop
mov
gs
sbb
jb
shl
push
mov
cmovno
dec
add
inc
je
dec
mov
xchg
pop
mov
ds
stc
es
sub
xor
adc
sbb
rcrb
cmpsb
nop
lds
jb
adc
pop
mov
mov
mov
jl
test
jp
jns
stc
mov
jmp
insb
mov
add
xchg
cmpsl
lods
xor
icebp
sub
push
ljmp
xchg
adc
add
sub
xchg
or
fbstp
push
jo
nop
add
cltd
outsl
or
inc
js
addr16
jmp
arpl
fwait
movsb
xchg
dec
inc
sub
sbb
push
and
sub
shll
cmp
push
sub
imul
jge
loop
mov
lret
orb
sbb
gs
fistpl
divb
push
or
stos
sub
js
es
loopne
insb
cmpsl
sub
sub
imul
inc
inc
icebp
and
inc
inc
in
adc
xchg
pop
or
mov
inc
mov
add
xchg
rcrb
fs
jno
jp
into
inc
add
das
pop
cmp
add
cld
jae
in
test
je
call
sahf
inc
test
adc
or
mov
insl
popa
xchg
cmp
aaa
add
loopne
push
push
stos
mov
push
out
jmp
lods
mov
cmpsl
js
andl
pop
adc
movsb
lret
or
cwtl
push
dec
mov
shll
loope
jno
xor
je
hlt
jnp
mov
and
iret
pop
mov
dec
inc
xor
lret
mov
je
nop
pop
jno
jle
mov
shr
push
popf
in
dec
test
fsts
ss
xor
cmp
into
jbe
jge
sub
pop
or
fs
inc
mov
lret
cmp
out
rorb
pop
les
push
movsb
xchg
int3
dec
xchg
jmp
add
sbb
dec
adc
push
scas
mov
or
lret
js
in
je
jl
stos
fldl
mov
lock
sub
xchg
sbb
jp
jecxz
popa
data16
enter
lahf
mov
push
setg
mov
into
add
roll
mov
jbe
cli
cli
mov
ja
sbb
and
out
dec
pop
test
or
sub
xor
psllq
jl
mov
dec
insb
mov
es
mov
roll
flds
frstor
ljmp
inc
stc
mov
inc
andl
mov
fnstcw
test
movsl
push
addl
jnp
mulb
stos
insl
push
push
xchg
subl
sbb
test
push
adc
icebp
sbb
ss
test
ds
js
adc
outsb
mov
cli
call
jns
pop
cld
xchg
mov
rcrb
push
in
bound
and
or
cmc
sbb
adc
mov
fistps
repnz
and
jmp
inc
mov
mov
movsl
testl
add
dec
xor
jmp
fs
out
lock
or
or
popa
add
jge
in
pop
les
imul
push
ret
jb
or
sti
pop
nop
cmc
rorl
mov
addl
sub
scas
popf
stos
lret
fld
cs
in
pop
xchg
sbb
pop
cld
push
inc
fs
ljmp
decb
jne
push
lods
xchg
loop
adc
jns
lret
pop
push
popf
sub
pop
push
push
cld
cwtl
mov
in
rclb
add
inc
int
mov
push
inc
and
jb
es
test
or
or
jecxz
or
rcll
lods
rorb
into
and
sbb
adc
push
lcall
cmp
pop
stos
mov
cmp
fs
pusha
push
inc
jmp
push
repnz
mov
enter
mov
stos
cltd
sbb
into
inc
and
push
xor
call
movb
jb
cwtl
and
ljmp
cli
jne
nop
fs
iret
jb
or
imul
ret
sub
and
cmpsl
leave
lock
xchg
adc
lret
shlb
popf
out
jb
lahf
outsb
pop
dec
subb
out
loopne
or
call
insl
stos
jg
out
enter
cld
jp
pop
lds
cmove
jge
lret
in
inc
adc
cmpsl
jne
loope
test
mov
arpl
adc
xor
std
test
xchg
xchg
push
jle
sbbb
or
and
movsb
mov
aam
stos
pop
mov
or
xor
adc
pusha
mov
das
mov
out
push
jo
es
xchg
xchg
mov
dec
and
mov
sub
xor
jb
or
xchg
inc
cmc
loop
xor
popf
int
ja
jmp
jne
icebp
push
addl
dec
pop
or
pop
sub
pop
loopne
sbbb
popa
xlat
jbe
cmpsl
out
and
mov
scas
cmpsb
shlb
leave
push
lret
xchg
aaa
test
out
lock
cwtl
arpl
call
out
test
dec
push
sub
lods
aaa
mov
mov
lahf
add
dec
or
or
cmp
xchg
movsl
gs
xor
or
jl
add
mov
sahf
push
in
cmp
mov
rorl
mov
and
mov
inc
loop
insb
xchg
xlat
and
adc
pop
cmp
xor
jecxz
repz
cli
ds
and
test
outsl
fdivrs
xor
leave
mov
mov
or
and
jno
lcall
jge
xchg
xchg
clc
aas
lea
jge
or
out
jne
fmuls
int3
or
in
fcompl
mov
xor
xor
mov
rorb
cmp
cli
cmp
sahf
inc
nop
mov
hlt
dec
mov
sbb
xchg
imul
fildl
pop
inc
mov
dec
clc
dec
lret
xor
lahf
outsl
push
in
mov
gs
sbb
xor
inc
mov
or
leave
je
scas
and
add
shrl
pop
sbb
out
inc
addr16
popf
mov
addr16
add
sub
xchg
mov
push
shl
insb
daa
mov
jmp
filds
mov
ja
xor
xchg
divl
push
fcomi
pop
adc
in
sub
dec
pop
mov
fwait
es
and
cmpl
dec
pop
cmp
pop
mov
xchg
outsb
jl
fnstcw
dec
sbb
xchg
fcmovnu
lock
cmp
test
mov
xchg
jge
dec
popa
or
mov
dec
out
jmp
dec
or
ja
or
fisubs
cli
test
push
jl
pop
sub
pop
sbb
and
pop
lods
stos
inc
cmp
adcl
mov
pop
aad
popa
and
pop
test
push
insl
into
in
jbe
cwtl
dec
mov
and
popa
push
jp
push
push
jne
pop
loopne
xor
in
jecxz
ljmp
mov
sub
and
or
outsl
mov
pop
pop
sbb
mov
mov
leave
add
adc
pop
pop
or
cli
push
jns
and
pop
ret
xor
daa
add
sbb
out
shll
incb
hlt
out
shl
cmp
ds
mov
or
jne
mov
pop
dec
cltd
pop
pop
lock
repz
or
mov
cmp
inc
icebp
pop
inc
xchg
inc
stos
sbb
or
std
jae
orb
ret
mov
inc
sbb
sub
cs
push
mov
scas
xor
scas
add
test
or
inc
sahf
xchg
fwait
cmpsl
pop
fists
cld
inc
xchg
cmp
insl
shl
mov
push
mov
rcrl
xor
int3
dec
push
jo
push
adc
mov
out
jmp
jnp
xchg
pop
jecxz
lock
and
xchg
bound
push
xor
out
scas
fsubl
movsl
and
out
mov
dec
pop
pop
movsl
adc
mov
enter
dec
xchg
mov
inc
mov
fisttpl
pop
lea
pop
adc
and
xchg
mov
push
or
mov
jge
lret
sbb
push
fcoml
inc
in
stc
dec
jbe
clc
pop
shll
sub
or
repz
out
loope
mov
jno
ffreep
jbe
sub
push
aas
sbb
pop
jl
add
cld
orl
or
adc
lcall
mov
imul
mov
aad
aad
dec
push
and
in
ss
scas
movsb
mov
jo
mov
xlat
insl
and
push
sbb
fcoms
in
sti
fisttpl
pop
out
ret
cmc
hlt
pop
addr16
int
adc
loopne
push
mov
mov
adc
pop
loope
pop
mov
mov
inc
dec
jle
or
or
mov
call
lods
sub
cmp
cs
cmc
loope
push
sub
mov
adc
cs
fdivr
in
sahf
in
cmp
insl
test
sub
pop
add
push
inc
insl
pop
mov
arpl
ffree
and
cmpsl
inc
inc
rol
imul
fdivrp
aaa
pop
inc
pop
cmpsl
dec
pop
add
pop
mov
cmpsb
adc
pop
stos
lock
movsl
js
call
test
add
xchg
mov
and
inc
dec
sbbl
lcall
xchg
cmp
cmp
data16
push
fmull
mov
mov
xchg
push
adc
call
fldenv
mov
mov
pusha
pop
cs
fimuls
test
popa
adc
pop
ret
movsb
dec
xchg
faddl
ret
adc
mov
jb
ret
out
jb
scas
xor
sub
adc
nop
mov
mov
out
lret
lahf
aam
mov
ja
adc
xor
sub
fyl2xp1
sbb
enter
mov
xchg
movsb
sbb
hlt
andl
fwait
adc
jne
aaa
shrl
adc
inc
jae
call
rorl
nop
jno
rorb
lds
es
nop
out
sbb
andps
int
ja
jo
pushf
test
call
cs
jmp
jle
mov
or
ja
jmp
out
int
jge
pop
cltd
add
jae
jmp
jae
cltd
iret
mov
mov
push
xchg
shrl
dec
ret
xchg
jb
in
xchg
sbb
mov
pop
sbbl
ficoms
ja
push
xchg
sbb
or
idivl
adc
cmc
clc
bound
cmp
push
fdivrl
cmpsb
xchg
gs
inc
adc
and
jns
pop
xor
pop
adc
into
daa
lret
sbb
dec
push
and
lcall
in
aaa
xchg
sbb
inc
mov
imul
xor
jb
cmp
rclb
mov
jl
xchg
loopne
cli
adc
imul
mov
insb
js
push
xchg
daa
add
cmp
add
push
push
push
adc
xchg
aas
arpl
bound
lcall
negl
flds
add
jp
and
fistl
jmp
fstpt
ds
xchg
in
push
daa
sub
jno
repnz
and
dec
out
xor
sidtl
mov
add
and
or
sub
loop
mov
enter
fdivl
adc
iret
insb
mov
push
push
insl
dec
dec
mov
dec
adc
sarl
xchg
xchg
lock
xorb
fsubrl
das
and
insb
fbld
es
adcl
in
divl
sti
xchg
leave
push
xchg
nop
xchg
mov
andb
packsswb
mov
test
mov
pop
sub
adc
mov
jl
and
rcrl
mov
push
enter
fnstenv
cmp
jb
sbb
aaa
lret
fdivl
rorl
lret
insl
int
mov
pop
fldt
dec
adc
dec
mov
les
pop
jp
stc
xchg
fsts
loopne
out
mov
and
outsb
movsl
stos
xor
cli
jnp
sbb
xor
push
orl
lret
sbb
pop
shll
mov
cmpsb
xor
and
int3
push
mov
push
in
push
cltd
sbb
cmp
movsb
or
jmp
add
mov
rcl
mov
lods
jl
push
popf
nop
dec
rcrb
jle
and
outsb
movsl
add
test
cmc
leave
stos
mov
es
add
pop
and
bound
jp
sahf
popf
mov
jnp
cmp
xchg
sbb
repnz
adc
ds
pop
xor
mov
ret
xchg
and
add
jmp
mov
cmpsb
push
daa
scas
test
out
push
mov
stos
add
arpl
mov
roll
dec
add
sbb
inc
push
hlt
push
outsl
jo
fsubr
fnsave
pop
int3
cmp
popl
sub
mov
jge
test
add
gs
rclb
shll
sbb
dec
jmp
cmpsb
es
cltd
scas
xchg
out
cmp
das
xor
lahf
xlat
hlt
cmp
or
inc
add
test
std
cmp
scas
ret
js
stos
dec
out
jmp
icebp
fs
cld
scas
test
xor
jns
xor
mov
leave
jae
loope
mov
test
inc
in
mov
add
mov
inc
add
xor
arpl
fdivrl
jl
and
lea
sbbb
icebp
aam
inc
inc
cmp
pop
cmp
leave
out
clc
mov
fisubs
mov
mov
std
iret
sbb
mov
outsb
mov
cmp
shrb
or
clc
das
lret
push
ror
imul
test
lods
repnz
fdivrl
xchg
lret
and
into
mov
xchg
repz
test
mov
movsl
mov
cld
bswap
outsl
add
nop
leave
ljmp
movb
in
mov
iret
jno
fs
inc
mov
jo
add
and
fs
push
xor
cmp
mov
fsubrs
sbb
repnz
add
fcmovnbe
xlat
dec
and
jecxz
and
decb
std
jo
leave
lea
mov
add
push
add
add
jl
mov
rcrb
in
mov
xchg
xor
push
push
lret
aas
out
arpl
lods
xchg
cs
pop
inc
inc
sbb
xchg
popf
nop
jle
sahf
in
jne
insb
imul
pushl
xlat
jbe
jb
add
pop
arpl
sbb
mov
lea
lret
mov
sub
sbb
je
dec
or
ret
push
int
xchg
call
cmpsl
fldt
cmpsl
jne
sarb
imul
lock
dec
add
pop
pushf
cmc
rcrl
imul
adc
and
mov
movsl
gs
pop
inc
xchg
lcall
jns
clc
arpl
push
add
push
iret
scas
cmp
out
int
fists
xorb
fnstsw
adc
shr
mov
das
jns
fidivl
jmp
gs
pop
call
xchg
sbb
lods
ja
xchg
addl
aaa
dec
xor
push
int
mov
lods
lcall
negl
les
xlat
in
jl
lcall
dec
vpsrld
mov
cmpsb
cmp
xchg
sbb
sub
xchg
mov
add
or
jp
je
insl
movsb
or
adc
xchg
adc
mov
or
in
daa
icebp
imul
les
push
mov
mov
xchg
repnz
xor
jae
jg
dec
arpl
test
mov
and
pop
dec
jmp
mov
xor
lahf
aad
fcoml
xor
testl
jl
adc
rclb
call
mov
mov
dec
pextrw
push
xchg
fldl
push
and
imul
mov
cwtl
inc
aas
jae
push
sbb
xbegin
xchg
das
cmp
or
sahf
ret
mov
imull
test
ret
and
decb
push
shlb
stos
cmp
test
or
adcb
std
cmp
lcall
adc
imul
ds
mov
out
orb
enter
inc
push
fiaddl
nop
cmp
fsubl
mov
xchg
pop
loope
mov
js
divb
test
and
adc
movsl
mov
mov
sub
scas
fistpll
dec
popf
xlat
popf
or
mov
xchg
xor
out
aam
xchg
cli
jns
call
iret
or
insb
mov
mov
fcomps
jne
adc
push
jmp
jp
inc
add
fisttps
popa
xchg
or
mov
jmp
loopne
cmp
insb
int
inc
mov
aam
nop
lds
in
fsts
bound
pop
cmp
icebp
adc
testl
test
sub
or
cli
loope
pusha
jge
pop
mov
popa
out
xor
int3
out
out
ja
cmpsb
cmp
adc
decb
push
cmpb
setnp
js
jb
and
sub
dec
xchg
ror
stc
outsl
aaa
scas
adc
aas
push
jo
mov
push
add
lock
cltd
or
pushf
inc
pop
imul
dec
push
push
fdivrl
sarb
add
mov
inc
xlat
jne
cltd
xchg
imul
mov
data16
pop
adc
out
ret
push
pushf
sbb
test
pop
insb
je
shl
ret
out
jmp
mov
push
rorl
xchg
out
iret
cmpsb
mov
fisttpll
pop
scas
repnz
subb
sbb
sti
imul
pop
dec
stos
and
sbb
push
cmp
mov
lea
outsb
mov
jb
mov
xor
shlb
aad
pop
cltd
adc
inc
stc
outsb
popf
stos
clc
and
cmp
out
shl
gs
shll
mov
das
jno
inc
xor
aaa
loope
in
int3
ja
adc
insb
repz
in
scas
or
repz
test
int3
push
test
jns
sub
xchg
add
cmp
push
rcll
popf
sub
aam
leave
jecxz
add
xor
or
mov
dec
cmpsl
fistpll
fwait
sbb
xor
jb
mov
xchg
mov
adc
inc
out
loopne
arpl
inc
stos
scas
negb
sub
cmp
call
je
inc
into
insb
inc
cmp
lock
mov
bound
rclb
inc
lcall
out
out
xchg
repnz
xchg
cmp
xchg
xor
mov
jns
adc
addr16
call
xchg
cmp
idivl
jne
cltd
push
rol
inc
xchg
lods
cmc
js
cmpb
mov
into
sahf
mov
imul
pop
add
and
mov
aas
into
leave
repz
or
xchg
lahf
add
lock
push
outsl
add
aaa
cmpsb
add
int3
inc
clc
sbb
push
adc
in
mov
shrb
clc
fistl
ja
mov
ss
loop
out
aaa
dec
lcall
mov
mov
push
adc
movsb
cmp
insb
mov
mov
repnz
xchg
pop
mov
lret
mov
movsl
fdivl
cmp
nop
sbb
insl
out
xor
aad
cli
mov
popa
lds
lds
xchg
aam
roll
xor
leave
adc
loope
jp
jns
loope
mov
out
es
test
movsb
pop
mov
loope
dec
mov
push
add
jae
add
sub
xchg
loop
jbe
out
push
shll
pop
ss
mov
aad
aas
repnz
iret
stc
pop
pop
xchg
stos
jp
pop
mov
pop
add
xadd
lds
push
shll
subl
push
lds
out
sbb
ja
ljmp
aaa
dec
cmp
fcomp
in
fidivs
adcb
aad
pop
xchg
mov
jp
xlat
sub
lods
es
ds
push
dec
xchg
mov
xchg
jno
adc
xor
stos
mull
mov
popf
lret
repz
add
inc
stc
sbbb
cmp
lret
scas
repnz
push
xor
orl
xor
xchg
or
push
sbbb
mov
pop
out
in
sub
outsl
shlb
push
ljmp
pop
fildll
xor
sub
push
pop
das
cmp
mov
int3
sbb
incl
add
mov
sub
out
sub
jne
je
cmpsl
lret
and
ljmp
imul
sub
imul
icebp
in
aas
cmp
sbb
xchg
fucomp
push
cmp
inc
lods
imul
xchg
dec
enter
lods
insl
es
sub
mov
clc
addr16
faddp
xchg
or
lahf
stos
aas
xchg
pop
mov
dec
popf
mov
inc
sbb
xchg
filds
add
mov
sub
enter
je
lds
popa
inc
xchg
mov
lcall
xor
add
inc
cwtl
lret
xor
mov
das
fildl
lods
sub
jle
xchg
scas
fsubl
std
sub
adc
movsb
aad
push
roll
inc
ret
bound
inc
outsl
and
imul
xor
xor
sbb
sub
xor
jl
sub
cmp
sub
xor
inc
fists
pop
mov
stos
repz
dec
mov
mov
jne
xchg
xchg
movntq
cs
mov
mov
jbe
xorl
mov
out
adc
pop
mov
scas
inc
into
rclb
pop
cmpsb
push
xor
jp
inc
inc
pop
mov
cli
mov
jo
shl
xor
mov
dec
and
lods
add
clc
push
cmpl
mov
test
pop
inc
int
dec
out
sub
fwait
lret
mov
jbe
ret
xor
xorb
xor
push
loopne
fiadds
mov
mov
sub
insl
pusha
scas
int3
pop
xchg
mov
mov
dec
mov
loope
sbb
pop
xor
mov
test
jge
mov
sub
push
sbb
ret
fcmovne
data16
cli
add
fcomps
cmp
call
adc
sbb
fcomps
pop
leave
add
mov
aam
pop
ja
pop
lock
push
int3
mov
jmp
dec
popf
sbb
cld
test
or
sbb
cmp
mov
lahf
stc
mov
iret
sahf
insb
xchg
jcxz
adc
mov
xor
xlat
xor
mov
xchg
fwait
or
aam
and
dec
mov
aaa
adc
sbb
andl
frstor
add
daa
inc
dec
pop
mov
inc
mov
insb
insl
mov
outsb
pop
pusha
jmp
jle
xchg
lret
cmp
in
xchg
jl
sub
divl
mov
mov
pushf
aam
pop
inc
mov
jo
xor
outsl
lret
shl
xor
or
int
jecxz
fsubl
jbe
popa
xchg
or
jl
mov
mov
aam
mov
fnstcw
out
push
aam
sub
hlt
adc
stc
inc
add
push
int3
push
pop
ljmp
push
cmp
or
or
sbbb
outsb
lret
jle
sbb
cld
scas
xchg
mov
adc
jae
roll
sub
xchg
aad
and
jns
sub
jbe
test
mov
ja
jo
xchg
les
je
jne
test
jmp
adc
jmp
lcall
or
xchg
pop
add
sub
pop
outsl
dec
inc
mov
cmpsb
pop
cld
pop
xor
pop
pop
inc
mov
gs
xchg
imul
outsb
xchg
outsb
in
cmpsb
movsl
inc
or
xlat
mov
imulb
xchg
mov
xor
arpl
inc
sbb
mov
js
adc
js
in
push
xchg
xor
push
addr16
pop
lock
sub
inc
adc
dec
push
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
popf
mov
jl
pop
pop
jl
negb
enter
pop
loopne
or
shrl
ja
sbb
scas
xchg
jmp
loop
sarl
jmp
repnz
pop
insb
popf
mov
jg
enter
or
xor
xchg
pop
pop
shl
add
mov
push
lock
mov
xchg
mov
aaa
and
ja
sub
pop
sbb
arpl
dec
cltd
sub
and
sbb
jne
xchg
pop
stos
lret
mov
mov
imul
inc
mov
outsb
xchg
lods
or
test
mov
andl
adc
mov
jb
clc
mov
gs
mov
cli
call
ret
mov
orl
dec
inc
ja
push
int
or
jge
mov
cmpsb
adc
mov
xchg
xchg
inc
jae
js
negl
lods
and
dec
xchg
pusha
lahf
push
pop
es
mov
mov
jle
es
mov
ret
pop
int3
xor
popf
insb
dec
popa
or
push
fcoml
add
cmp
sti
sbb
pop
xchg
repnz
imul
or
and
xchg
ja
xchg
imul
mov
jmp
hlt
stos
cli
sub
movsb
cli
stos
and
out
outsl
lock
jne
xchg
stos
lahf
mov
push
or
cmpsb
mov
push
push
add
out
inc
jb
int3
jb
mov
pop
lea
xor
sbb
or
mov
jo
mov
push
push
push
inc
aaa
nop
cmpsb
jl
mov
dec
leave
mov
pop
les
das
push
sbbl
adcb
pusha
aaa
leave
mov
outsb
or
daa
ret
cmpsl
ds
imul
fnstenv
inc
in
lods
aad
dec
xorb
dec
mov
inc
fistpll
es
js
jns
and
ss
pop
ds
es
inc
into
jb
fcomi
sbb
pop
xor
inc
xchg
mov
int3
lahf
and
mov
rclb
mov
inc
popa
inc
mov
add
icebp
subb
jl
xchg
cli
scas
cmp
ss
test
lahf
es
pushf
andb
push
fdivrp
cmp
adc
inc
mov
push
in
mov
mov
dec
out
fisttps
imul
jne
adc
xchg
mov
mov
pushf
jae
hlt
sbb
or
cwtl
push
xor
mov
fistps
cwtl
loop
ljmp
and
dec
adc
cld
push
outsb
aad
cmc
cmc
adcb
push
xchg
pop
jecxz
push
xchg
ja
dec
sub
cmp
jle
add
mov
pop
ror
cld
loope
sub
or
pop
add
push
sbb
mov
xor
hlt
xor
adc
jmp
xchg
jmp
ret
shl
aad
out
sti
push
push
addr16
xor
dec
jmp
bound
insb
cmp
push
sub
dec
in
and
sahf
les
push
clc
cmpsb
call
hlt
in
in
addr16
mov
mov
pop
movsb
cmc
sub
js
hlt
aas
dec
in
add
adc
dec
cmp
lret
mov
stc
mov
add
xchg
xchg
xchg
push
inc
or
iret
adc
out
cs
sub
pop
push
jge
out
out
mov
mov
test
jp
pop
aam
aaa
or
sub
bndstx
lods
pop
mov
cmp
xchg
and
or
fildl
and
inc
stos
nop
add
xchg
mov
xchg
insl
sbb
cs
mov
mov
inc
dec
push
ja
fnstcw
fimuls
addr16
jne
loope
cmp
test
mov
and
jecxz
jg
jg
xlat
outsl
lock
jecxz
sub
mov
xchg
mov
imul
call
sbb
loop
jno
jno
loopne
and
int
xlat
in
jmp
push
std
xor
adc
mov
das
shll
rorb
lret
divb
jp
es
xor
push
loope
stc
xor
xor
fwait
into
mov
xchg
pop
xchg
in
or
sub
pop
xlat
icebp
aad
mov
cwtl
leave
cmp
loop
xchg
and
push
sahf
or
fcmovnu
sub
xchg
loope
out
adcb
cmc
cmp
dec
mov
adcl
mov
adc
pop
outsl
fidivl
sub
negl
sti
add
mov
js
cmpsb
inc
xor
imul
fstpl
fwait
ss
push
xchg
dec
and
push
pop
xorl
dec
mov
sbb
cmp
push
pop
sbb
into
out
enter
in
ror
fimuls
sbb
push
xor
iret
add
les
pusha
fsubrs
popf
insb
adc
adc
dec
pusha
mov
cmp
dec
cmpsb
cld
cltd
mov
sarl
pop
mov
xor
arpl
mov
testb
stc
mov
mov
dec
mov
std
jle
xchg
xlat
bound
cs
adc
sbb
inc
shlb
adc
shr
pop
aas
xorl
rorb
insb
mov
cmp
outsl
mov
rcr
cli
cmc
pop
leave
mov
imul
cmp
rorb
out
pushl
lcall
cmpsb
pop
mov
movsl
xchg
and
pop
sub
mov
out
popf
dec
jecxz
sbb
lock
outsb
xor
aad
pop
movsb
mov
sti
and
mov
jno
mov
mov
or
pop
xchg
lods
ret
push
lods
xchg
lds
shll
lret
adc
aaa
dec
mov
push
adc
and
jge
or
xor
imul
jecxz
call
or
mov
mov
inc
mov
pop
loop
inc
data16
pop
pop
jb
jns
fiadds
or
dec
sti
aam
xor
mov
loope
call
add
cmc
mov
sbb
shll
xor
sbb
int
daa
or
jbe
jl
mov
ljmp
xchg
out
jns
xor
jle
sahf
out
adc
lahf
jns
sub
sbb
mov
xorb
sahf
fcomp
cmp
sarb
pop
aam
in
repz
test
je
sbb
lods
mov
sub
mov
mov
ja
rcr
add
jmp
xor
inc
lcall
mov
scas
es
orb
jns
cld
mov
xlat
gs
cli
mov
and
lret
or
xchg
lret
mov
aam
lds
xchg
or
xor
push
les
test
jl
jbe
lret
push
jb
fwait
add
mov
rclb
dec
inc
or
cwtl
aam
in
sbb
les
dec
repnz
add
mov
dec
or
add
insl
xor
mov
cmp
ljmpw
sub
lahf
or
int3
bnd
push
add
sub
or
sbb
ds
lock
add
ret
repz
loopne
loopne
out
std
xchg
das
inc
push
sti
mov
lret
push
xlat
daa
or
mov
lods
mov
lods
insb
test
hlt
pop
pop
sub
repnz
mov
push
adc
push
addl
dec
mov
fdivp
push
mov
bound
pushl
test
mov
lcall
and
lcall
xchg
mov
push
test
xlat
das
fsubrs
xchg
pusha
enter
xor
fbstp
adc
icebp
pushf
xorl
jb
cbtw
fnstcw
cmpsl
sub
jae
push
test
add
or
mov
adc
jne
or
mov
adc
inc
sbb
data16
out
dec
mov
pushf
ret
inc
loop
mov
mov
lret
je
and
dec
push
sbb
push
fnsave
jecxz
and
ja
insl
pusha
pusha
push
outsl
cli
add
push
mov
and
xchg
mov
push
inc
adc
mov
iret
icebp
mov
insb
ds
xor
incl
xor
push
xor
sbb
xor
shr
cmp
std
mov
out
mov
inc
lods
lcall
push
ficoms
pop
or
aas
scas
aaa
sub
or
xchg
push
testl
mov
repz
xor
lock
test
adc
dec
js
ja
or
inc
xchg
andl
loopne
pop
mov
icebp
pop
dec
cmp
pop
scas
lahf
cmp
insl
mov
xlat
enter
xor
push
xlat
fninit
rcl
mov
xlat
movb
pop
fwait
insb
je
mov
jns
sbb
inc
xor
imul
or
jle
dec
dec
stos
push
add
or
fnstsw
inc
jmp
fwait
xchg
out
pop
mov
rol
test
fcomps
cmp
pop
cmp
xchg
pop
cmp
pushf
pop
call
movsl
push
std
mov
fs
pop
lods
pop
cli
jg
outsl
sarl
test
xchg
nop
dec
lods
jno
and
rorb
jno
out
cmp
sbb
pop
nop
mov
movsb
popf
in
mov
mov
inc
sub
or
xlat
push
ret
cmpl
bound
xchg
push
pop
shl
pop
scas
pop
pop
xchg
ficoms
xchg
sbb
or
cmp
lahf
in
sti
mov
loope
pusha
mov
mov
mov
xor
pop
pop
js
popa
divl
lret
mov
loopne
call
or
mov
push
loopne
mov
in
aad
in
scas
jmp
stc
js
loope
lea
pop
lret
mov
scas
lods
push
dec
dec
pop
pushf
lret
mov
rcrl
in
addl
cld
outsl
cmp
das
cmpsb
cmpsl
cmp
mov
mov
sub
or
xchg
stc
out
mov
pushf
ja
cwtl
sbb
scas
mov
mov
imulb
mov
lcall
loop
repnz
pop
call
cmc
into
xchg
lods
push
xchg
ja
test
fs
aas
mov
jno
mov
xorb
adc
lret
inc
adc
daa
test
inc
mov
movsl
pop
and
pop
push
pop
adc
mov
adc
jp
insb
mov
add
or
into
adc
mov
mov
inc
lea
call
je
outsb
fldt
ds
add
js
fwait
cmp
pusha
shlb
fwait
sarl
mov
push
or
dec
jl
mov
pop
jb
test
sub
sub
dec
rorb
test
cli
shlb
sbb
jp
mov
pop
pop
push
mov
mov
int
xor
js
sub
push
mov
test
xlat
xchg
int3
add
sbb
or
inc
out
cmp
xlat
fcoml
icebp
pusha
aas
add
xchg
lods
cld
pop
and
add
insl
cltd
leave
jecxz
arpl
mov
inc
jae
or
or
les
test
cwtl
cltd
sbb
bnd
fcoml
mov
insb
mov
xlat
ljmp
mov
lret
fcmovbe
popa
inc
xchg
adc
adc
push
sbb
xchg
mov
cmp
int3
call
clc
xchg
fmul
fwait
sbb
xor
push
sti
mov
orb
faddl
gs
push
xchg
roll
add
mov
enter
and
sbb
pop
in
vsubpd
xchg
fmull
fidivs
xchg
mov
and
jbe
pop
in
inc
leave
insb
imul
mov
push
pop
repnz
pop
add
test
mov
mov
sub
pusha
out
mov
xor
pop
into
mov
pop
jge
pop
orb
adc
and
jmp
xor
aas
pop
in
je
jae
pop
pop
mov
inc
sub
cmp
pop
fnstsw
sub
movsb
outsl
ret
and
xchg
mov
xchg
std
add
mov
or
mov
jl
loopne
pop
add
loopne
jl
call
jmp
dec
nop
dec
mov
sbb
push
aas
pusha
mov
push
push
fsubp
dec
pop
xchg
push
fbld
popf
out
call
add
add
xor
int
mov
out
in
sbb
jl
out
sbb
push
mov
mov
or
mov
sub
inc
ljmp
dec
lcall
outsl
jp
ja
das
dec
ret
add
inc
and
shll
sbb
fs
out
idiv
and
add
mov
ret
xor
inc
test
ficoms
aad
xchg
aaa
pop
adc
sbb
inc
inc
dec
xchg
push
and
mov
test
push
jae
iret
adc
mov
xlat
push
and
fdivrs
pop
pop
sub
cmc
outsb
adc
lock
in
stos
add
stc
xor
add
pop
adc
negb
pop
adc
adc
ja
sub
pop
stos
pusha
hlt
add
pop
jnp
mov
jmp
jmp
adcb
out
cs
dec
dec
xor
nop
pop
mov
outsb
push
mov
mov
nop
pmaxsw
loopne
mov
mov
out
outsb
pop
sbb
data16
out
inc
inc
insb
pop
xchg
pop
rcrb
fisttpl
sbbl
push
dec
test
js
faddl
xchg
push
aaa
fldt
add
add
mov
clc
mov
test
push
and
sbbl
push
inc
jmp
ret
mov
dec
mov
jge
aas
push
cmp
sbb
scas
test
jle
mov
lods
popf
jmp
cmpsl
xchg
inc
cmp
and
sbb
inc
les
add
repnz
shlb
cli
movsb
mov
mov
adc
pop
xor
nopl
daa
cmp
lock
xchg
dec
scas
repnz
fimull
bound
cmp
and
cwtl
add
testb
adc
mov
xor
add
mov
ret
xlat
jno
aad
pusha
cwtl
lret
pop
xchg
inc
cwtl
adc
ds
sub
cwtl
mov
xchg
jne
cmp
mov
push
pop
push
pop
repz
mov
lock
jp
orb
sub
lods
mov
mov
out
adc
call
into
dec
cmp
mov
pushf
roll
dec
cmpsb
mov
subl
xor
je,pn
xlat
xchg
push
fsubs
and
ja
stos
sub
add
push
cltd
sahf
fcmovu
and
mov
sar
daa
in
out
test
inc
popa
call
xor
push
or
imul
outsb
out
jmp
hlt
adc
sbb
data16
sbb
loope
xchg
sbb
xchg
pushf
clc
iret
stos
sub
imul
fwait
add
sarb
lock
ja
fwait
add
dec
cwtl
jb
fucomp
nop
cmp
jae
incb
inc
push
pushf
cmp
cli
add
fcoml
jp
mov
and
lret
jge
adcl
test
add
popf
and
popf
pop
orl
loope
lds
jge
dec
cmpsb
lods
sti
fldt
push
xchg
sbb
mov
mov
inc
jmp
lods
ror
icebp
xchg
scas
adc
xchg
fildl
loop
mov
lcall
push
nop
shl
mov
dec
int3
jno
int
jp
inc
mov
or
insb
out
les
cmp
pop
add
add
in
push
dec
dec
mov
aas
outsl
lea
cmpsl
cmp
sbb
mov
insb
in
gs
movsl
lcall
mov
and
arpl
inc
push
movsl
gs
dec
lcall
xchg
cltd
popf
scas
nop
lret
repz
ljmp
aas
and
or
jmp
repnz
into
test
mov
xchg
popf
ret
jb
mov
mov
shrl
xor
mov
cmc
mov
aaa
lods
add
in
pushf
mov
jmp
lods
sbb
cmp
int
fstl
jmp
lea
pminub
sub
mov
cmpsb
movsb
fsubrs
imul
punpcklbw
jbe
adc
add
mov
jl
movsb
push
fs
aaa
or
dec
bound
lret
adc
js
stos
fidivl
or
fistl
cmp
hlt
out
lods
add
pop
cmc
testl
popa
shl
sub
xor
add
sbb
je
call
cli
sbb
cld
or
cld
xchg
cwtl
outsb
scas
jo
xor
push
or
loop
fs
and
int3
inc
mov
sub
outsb
stos
adc
loope
pop
xlat
adc
xlat
scas
or
cmp
pushf
xor
inc
lret
xchg
inc
std
xor
test
push
test
out
arpl
cmp
mov
jo
fdiv
outsl
push
mov
fwait
cs
dec
xchg
test
out
bound
and
xor
repz
nop
jno
add
imul
scas
add
inc
fs
enter
mov
pop
mov
outsl
push
inc
adc
sbb
push
int3
pop
lcall
cmpsl
inc
lods
dec
and
mov
mov
xchg
mov
jns
mov
repnz
lods
jo
fldenv
sub
mov
rorl
inc
clc
lods
pop
cwtl
cmp
push
mov
xor
cmp
aam
popf
pop
push
arpl
cs
test
sub
js
int
shll
out
mov
fimuls
in
movl
out
test
es
inc
rcrb
pop
cld
loop
ret
xor
das
xchg
xor
ljmp
ss
jp
cli
fisttpl
pop
aam
jmp
hlt
xchg
mov
ret
jne
mov
xlat
xchg
push
and
sahf
ret
stc
jb
pop
sub
int3
jbe
hlt
cmpsl
xchg
mov
inc
adc
pusha
gs
shrl
xorb
std
js
mov
fisttpl
sub
sti
test
jb
jne
rolb
mov
push
pusha
loop
ret
push
and
inc
and
test
cltd
mov
xchg
cmpb
mov
mov
out
or
jmp
xor
test
and
cwtl
xor
mov
xchg
icebp
sub
push
jle
push
in
inc
mov
cltd
or
jge
sbb
dec
in
fimull
lods
inc
mov
rsqrtps
arpl
out
and
xchg
ret
or
add
enter
mov
fimuls
mov
push
cmp
mov
out
inc
out
jno
xchg
inc
xchg
push
mov
lret
ret
inc
push
test
insl
and
cmp
add
popf
add
jbe
mov
shl
sub
int3
inc
sbb
inc
jb
icebp
add
repnz
std
add
fs
push
aaa
push
aad
cmpsb
adc
hlt
lcall
xchg
inc
mov
aam
fucom
jmp
cmpsl
mov
scas
gs
gs
lcall
mov
pop
jl
enter
adc
cltd
push
std
je
sbb
inc
xor
pop
pop
pop
xchg
test
mov
and
fsubrs
popa
popa
dec
aas
pop
outsb
xorb
jno
stos
fisubl
leave
cmp
je
aaa
mov
fdivl
mov
cmc
pushf
lds
call
xor
cmc
adc
push
xor
aaa
jb
push
bound
cmpl
lods
or
or
mov
gs
mov
lahf
je
fistpl
movsl
jae
sub
inc
dec
repnz
call
xchg
notl
jmp
rcl
jnp
or
out
inc
fucompp
fwait
and
mov
pop
fmulp
or
test
xlat
adc
enter
and
jmp
or
ja
leave
sub
les
mov
adc
cli
test
fs
xchg
daa
sbb
pusha
in
mov
xchg
pusha
loop
add
lret
movb
inc
mov
pop
es
ds
je
sub
adc
aaa
outsl
mov
pop
mov
inc
pushf
sti
icebp
dec
inc
jle
repz
stos
inc
add
dec
pop
inc
sahf
mov
cs
mov
shrl
popf
jbe
mov
mov
shlb
clc
imull
sub
loope
aas
sub
idivb
popf
dec
stc
dec
ret
xlat
adc
jmp
enter
ja
push
inc
movsl
xor
fstps
dec
dec
cli
and
imul
lret
int
fwait
ljmp
pop
lret
stos
sub
sub
jns
adc
sbb
icebp
dec
negb
nop
fbstp
jb
xor
mov
and
mov
cmp
or
or
lcall
ja
test
out
mov
ja
xchg
inc
mov
pop
adc
lahf
mov
in
push
inc
adc
std
cmp
ss
outsl
jne,pt
pop
in
inc
loope
push
xlat
fs
sub
push
pop
out
xlat
jo
subb
dec
pop
and
mov
mov
inc
sbb
inc
mov
xor
jne
push
or
roll
ljmp
push
add
cmp
sti
ds
or
addr16
push
loope
iret
enter
xlat
insl
dec
cltd
xor
ficoml
test
push
or
scas
leave
hlt
test
xorb
fs
xor
mov
jecxz
hlt
jo
sub
push
add
and
xchg
jecxz
adc
cltd
insl
mov
add
sahf
outsl
xchg
xor
jae
push
add
or
adc
xchg
mov
je
cmp
enter
jmp
jb
push
cmp
sbb
sub
out
xchg
jne,pt
push
inc
sub
hlt
icebp
push
dec
icebp
inc
sbb
dec
fs
ds
int3
das
dec
xchg
cmpsl
test
push
or
adc
jo
jns
popa
repz
sarb
div
into
and
adc
cwtl
pop
push
popf
lcall
and
xorl
movsb
sbb
mov
testl
or
call
jb
in
mov
dec
fiadds
xchg
cmc
les
add
shll
push
jp
pop
inc
mov
mov
pop
mov
mov
jnp
inc
sahf
test
sbb
mov
mov
fs
fwait
sbb
ja
or
movsl
mov
into
loop
dec
push
mov
out
in
stc
pop
dec
mov
cli
inc
xchg
sub
add
aad
rcrl
enter
add
push
mov
sbb
pop
test
mov
loope
jae
lahf
and
fsubs
repz
fimull
mov
inc
mov
dec
int
mov
dec
rcrb
mov
jg
sahf
repnz
and
and
loop
cmpsb
sub
and
push
rcll
xor
dec
adc
ficoml
push
je
mov
ja
call
je
and
call
sub
mov
jae
mov
add
push
loop
jae
outsb
fbstp
pushf
mov
mul
ljmp
std
ret
outsl
dec
bnd
xchg
sti
movsl
inc
pop
in
pause
and
fldl
pop
inc
sub
add
mov
jb
cli
ret
mov
ja
mov
jl
sarl
mov
pop
loope
xor
imul
lahf
aam
insw
xor
ljmp
into
fadds
orl
pop
call
push
js,pn
stc
repz
xor
sti
jge
leave
mov
pusha
xchg
and
aaa
aaa
shrb
mov
aam
xchg
jbe
call
packssdw
sti
lret
out
add
repz
cli
cwtl
add
adc
push
in
cmp
test
sub
frstor
jnp
mov
bound
cli
gs
inc
shrl
push
stos
xchg
sbb
jnp
push
jmp
sbb
leave
push
pop
movsl
lds
outsb
sbb
int3
lds
adc
outsl
push
outsb
and
dec
xchg
out
jg
add
and
stos
fs
add
xchg
lret
in
scas
and
pop
mov
lahf
mov
inc
adc
xchg
leave
test
mov
popa
xchg
adc
arpl
jnp
fildll
stos
push
mov
add
in
test
addb
sub
aam
cld
cmc
mov
inc
inc
clc
pop
xor
mov
scas
sub
stc
popa
movsb
aam
mov
ljmp
pop
loopne
push
pop
ljmp
adc
ret
mov
into
cwtl
or
xorb
xor
push
jl
pop
std
cmc
and
jae
mov
repnz
pop
adc
jmp
pop
fistl
mov
repz
out
dec
pop
mov
push
adc
dec
jae
ja
jae
and
int3
sbb
fnstsw
fisubrs
pop
add
dec
mov
jo
stc
mov
or
imul
ret
leave
mov
xchg
and
or
sbb
movsb
mov
dec
in
nop
jb
xchg
cmp
jmp
cmp
es
mov
ret
cmp
enter
add
pop
xchg
fcomp
das
adc
pop
sub
add
scas
sub
repz
fwait
cmpsb
gs
cmp
jnp
inc
cmp
out
push
or
divb
fstps
sub
aaa
dec
mov
out
decb
das
stos
ja
cmp
sub
jae
shr
inc
xor
sbb
ja
out
je
sub
dec
xchg
cmp
or
cmp
fistps
or
pop
pop
je
mov
jo
adc
and
jno
sbb
pop
mov
cmp
jl
repnz
js
scas
xor
shlb
in
jo
jl
mov
mov
cmp
jge
mov
mov
inc
dec
cmpsb
jo
addr16
scas
test
mov
in
cli
adc
in
lret
mov
add
jg
hlt
pop
lea
pop
imul
jae
imul
or
mov
andb
add
ljmp
and
jbe
ds
inc
fstl
mov
aaa
mov
stc
xor
scas
push
movsl
mov
pop
jbe
lret
xor
xor
push
mov
adc
jnp
mov
push
push
cmp
cmp
push
div
pusha
lret
push
daa
xor
iret
jmp
jle
sub
movl
xlat
das
push
pop
sub
ret
mov
mov
jge
xor
adc
sub
mov
pusha
hlt
mov
dec
adc
mov
mov
xor
in
js
dec
lock
push
pop
xor
imul
adc
ljmp
pop
js
lds
decb
mov
ret
push
pop
int
pop
fnsave
ss
lods
cltd
je
out
inc
cmp
dec
inc
xchg
inc
cmpb
pop
out
scas
pushw
into
pushf
int
or
mov
sbb
mov
into
adc
or
mov
jbe
ljmp
mov
jle
mov
clc
cmp
xor
mov
repz
sub
cli
insl
push
fadds
movsl
pop
lret
fwait
dec
dec
mov
and
cltd
je
push
repz
pop
adc
push
inc
or
xor
mov
mov
or
popf
std
enter
cld
repnz
lds
shrl
mov
stc
js
test
sbb
lea
imul
push
sti
loop
outsl
mov
loope
out
bound
orb
movsb
push
movsb
xlat
movsb
mov
or
test
icebp
inc
xchg
popl
pop
rolb
and
and
mov
add
dec
int
fldl
popf
jp
in
pop
imul
pop
adc
sbb
sub
lock
cltd
aaa
divb
inc
fwait
jmp
dec
rep
pop
or
ja
dec
jp
mov
or
in
fbld
jmp
and
fcmovnu
mov
inc
jecxz
sbb
xchg
fildll
add
dec
mov
lahf
jno
cmp
je
push
pop
or
test
push
addr16
or
jnp
call
int3
pop
out
xchg
arpl
xchg
daa
addb
and
jb
arpl
pop
test
popa
mov
test
mov
push
iret
dec
in
popf
mov
stc
xlat
test
scas
ja
ss
lds
pop
adc
add
jge
fwait
popf
xor
adc
xor
out
add
sti
and
add
pop
adc
mov
add
add
aas
cmpb
jle
pop
xor
pop
jno
into
xchg
sub
dec
idivl
pushf
cmpsl
dec
inc
sti
inc
sbb
pushf
push
cltd
dec
ret
dec
inc
mov
test
std
jae
std
lods
shll
cmpsl
xor
aas
loop
cli
add
in
or
add
and
movsb
fsubl
incl
pop
xchg
xchg
jbe
mov
mov
jge
movsl
mov
xor
scas
inc
or
cs
sub
push
inc
adcb
adc
icebp
int3
into
pop
pop
incl
mov
cmp
imul
add
maxps
jg
dec
lret
jge
ds
roll
pop
loopne
rcrb
push
push
inc
xchg
mov
sbb
ret
in
subl
push
lods
sub
loope
pushf
cmp
lahf
out
push
push
pop
inc
adc
mov
aaa
cs
and
jle
mov
push
fstl
addr16
add
movsl
jae
in
add
pop
test
fwait
xor
cmp
notb
testb
rcrl
cmp
sub
movsl
jecxz
fidivl
lea
xchg
popa
enter
sbb
int
or
out
aas
std
mov
inc
aaa
and
xchg
and
jmp
popa
push
scas
jnp
mov
ss
mov
jp
push
rclb
jecxz
js
pop
jmp
jns
xchg
or
xchg
push
into
and
xor
push
or
jns
push
mov
test
jecxz
in
jge
cmp
and
push
pop
sbb
repz
sbb
xor
lock
push
dec
or
pop
cmpsb
mov
push
inc
mov
loopne
mov
pusha
jmp
jnp
push
sbb
lods
jnp
lcall
in
lret
sub
and
rcll
test
pop
xchg
sub
pusha
movb
mov
xor
leave
cmc
lahf
idivl
bnd
mov
lds
fldenv
dec
mov
mov
pop
fs
leave
push
push
cwtl
movsb
fisubrs
jns
fmulp
fstps
int
daa
loopne
and
cmp
dec
sub
mov
mov
loopne
aad
push
sbb
cli
iret
popf
lods
pusha
xchg
jg
andb
xchg
mov
lea
call
inc
pop
loop
push
je
sbb
and
in
test
jg
jle
pop
cmp
push
sub
push
pop
sub
pop
lret
xor
test
cmp
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
dec
dec
mov
dec
push
ljmp
inc
dec
inc
mov
dec
aaa
bound
sahf
rcrl
pop
mov
pop
dec
and
jbe
js
sbb
xchg
shr
lods
dec
xor
add
mov
mov
addr16
jp
xor
fstpl
aad
and
lahf
sbb
mov
xchg
pop
ljmp
lods
dec
repz
add
arpl
mov
pop
add
in
shll
pushf
iret
inc
jae
xor
mov
shr
inc
mov
or
je
add
lret
mov
pop
cli
xor
pop
popa
popf
jo
or
pop
mov
xor
negb
int3
fistpll
mov
mov
std
jne
icebp
push
or
adc
out
mov
subl
test
mov
sbb
push
mov
xor
mov
sub
inc
ret
imul
xchg
shrl
leave
cwtl
mov
push
push
incb
mov
push
and
xor
push
dec
mov
adc
mov
jmp
dec
mov
xchg
xchg
inc
iret
push
push
inc
xor
push
mov
push
mov
xor
std
sub
mov
movsl
call
or
or
sbb
xchg
daa
pusha
cs
imul
scas
enter
nop
xorb
xchg
insw
mov
push
fs
int
dec
int3
in
sbb
xchg
add
pop
adc
call
shlb
mov
jns
and
leave
xor
add
lea
insb
ficoml
xor
jecxz
scas
pop
sarb
inc
mov
xor
add
jmp
sub
dec
jne
push
loope
mov
pop
jge
aam
inc
test
iret
lret
sbb
xchg
sub
mov
sub
in
gs
dec
iret
add
xchg
add
ret
jno
ret
callw
xor
cs
je
and
popa
out
mov
jmp
push
ds
jne
sub
shll
int3
mov
adc
cmp
sti
mulb
out
fbstp
insl
mov
push
pusha
scas
cmp
inc
or
mov
cmp
push
dec
lret
out
jl
aam
insl
out
cli
mov
xor
xchg
add
sub
inc
ret
inc
into
fs
dec
fmuls
jmp
xor
or
dec
xchg
insb
xor
sbb
add
cmp
test
lods
xlat
mov
sarb
inc
cmp
jmp
mov
dec
pavgb
push
rcr
or
scas
call
dec
frstor
arpl
jbe
popf
lods
test
push
aas
sbb
stos
push
cmp
loop
flds
scas
aaa
out
mov
xor
insl
fidivl
ljmp
and
xchg
scas
gs
movsb
sbb
stc
add
mov
loope
gs
push
mov
js
dec
ret
cmpl
xor
inc
push
shrl
mov
and
mov
and
movsb
leave
xchg
push
and
ja
js
fcmovnb
sbb
cmc
in
push
xor
jmp
ret
mov
shl
push
cmpsb
push
mov
pop
mov
popa
pop
lods
xchg
cmp
sub
inc
ret
and
adc
out
cmp
push
je
inc
and
cmc
jmp
xchg
cmp
cwtl
mov
nop
sbb
ds
jbe
enter
inc
shl
push
pop
dec
mov
mov
sahf
sbb
test
std
dec
jae
sbb
ss
mov
adc
mov
xchg
fiadds
lock
adc
pop
mov
add
pop
mov
outsb
pop
ds
insl
jne
lret
mov
repz
mov
inc
aaa
inc
cmp
int
out
mov
mov
repz
lcall
or
cmp
insb
lahf
popa
xchg
lods
lret
jl
push
or
outsb
pop
and
push
aas
adc
ret
xchg
mov
push
fisubl
mov
mov
fnsave
mov
bound
cmp
sbb
call
xchg
mov
je
ficomps
fwait
dec
outsb
iret
in
jmp
push
into
sub
sbb
sarb
xchg
xorl
and
scas
mov
jl
enter
fadds
mov
pop
rorl
ja
lds
fidivl
push
dec
xor
sub
or
mov
test
arpl
ficomps
push
imul
or
sub
jnp
mov
cmp
repz
jnp
sub
sbb
test
movsl
push
or
fidivrs
pop
scas
add
enter
mov
push
rclb
les
lods
add
pop
arpl
push
sub
call
stos
loope
inc
cmpsl
xor
cmp
cmp
fmull
roll
xchg
rclb
mov
and
mov
aam
xor
jnp
push
das
mov
or
mov
mov
fldenv
pop
subps
cmp
fldenv
popf
adc
shlb
adc
mov
adc
mov
mov
js
sbb
or
jns,pn
mov
ret
insl
mov
mov
loopne
int3
jmp
lcall
insl
mov
xchg
daa
out
sub
insb
pushf
adc
cmp
js
mov
cli
test
data16
cwtl
jle
or
mov
lods
test
xlat
mov
fs
xchg
jno
mov
out
enter
std
cmp
cwtl
fsubrl
dec
push
ret
push
sarl
pop
cmpsl
mov
jge
out
mov
cmpl
mov
sbb
gs
jae
and
sub
cs
cmpsb
ljmp
mov
stos
add
jp
test
gs
push
xor
push
dec
sbb
sbb
xchg
addr16
sub
xlat
pusha
jbe
inc
fdivs
cmpsb
ss
shrb
imull
push
arpl
dec
rorb
adc
rol
dec
push
dec
lfs
ja
jb
mov
pop
or
aam
adc
inc
mov
jle
xlat
xor
adc
int3
xor
push
cwtl
loop
cmpsb
imul
jg
mov
jb
mov
push
stc
scas
jno
fcompl
call
pop
mov
pop
ret
popf
and
xlat
call
iret
inc
add
sahf
aaa
popa
popf
and
cwtl
xchg
and
sbb
out
pop
adc
fadd
iret
fadds
inc
and
call
push
in
movb
nop
sahf
or
mov
imul
and
dec
cmp
pop
orb
cmp
or
and
xlat
jle
inc
sbb
int
mov
inc
or
inc
sbb
mov
ret
cmp
or
inc
cli
pop
xchg
iret
and
mov
mov
scas
dec
xor
sbb
imul
hlt
push
and
adc
aas
sbb
inc
mov
adc
jecxz
or
push
sub
xchg
out
nop
push
daa
pop
pushf
into
push
fldt
xor
inc
mov
sbb
daa
and
lods
ss
or
fmull
mov
int3
test
or
std
out
pop
enter
or
lret
inc
fildl
pop
mov
div
jno
mov
push
pop
lods
jbe
xor
das
jl
pop
adc
ljmp
or
or
mov
in
mov
mov
sar
xor
lret
xchg
push
push
jp
outsb
out
lcall
mov
pop
fwait
std
cwtl
dec
pmaddwd
mov
push
ss
sub
and
xor
pop
icebp
lds
mov
aaa
lret
sbb
loope
jp
cld
pusha
inc
lea
cmp
rorl
sub
dec
cli
xchg
repnz
jl
adc
stos
push
rclb
test
mov
jcxz
sub
inc
cmp
inc
aas
push
nop
push
xchg
push
lock
jle
add
sub
mov
sbb
ss
sub
sbb
sbb
cltd
sub
into
or
mov
dec
rcr
jno
inc
xorb
fwait
xor
imul
and
cld
in
pusha
int3
sub
push
mov
insl
mov
aam
ljmp
int3
add
mov
addl
cmp
pop
xor
push
fcomps
imul
dec
lods
sbb
pop
adc
addb
xor
dec
notb
adc
sub
hlt
xchg
cmp
mov
sbb
jno
aad
stc
nop
test
ffree
xchg
jle
clc
lods
xor
xor
daa
jno
cli
add
xor
cmpsb
sbb
ds
rcrb
pop
das
gs
flds
out
jmp
imul
icebp
sbb
and
sub
loopne
cmpsb
fs
mov
shr
iret
cltd
mov
pop
ja
loope
and
loope
dec
aad
push
loop
arpl
xchg
divl
ret
js
in
mov
leave
insl
push
pushw
xor
xlat
int
iret
ret
add
cld
sbb
sbb
mov
imul
test
inc
lock
and
mov
pop
sarl
mov
mov
jae
pusha
jmp
neg
leave
fadds
ret
outsl
and
daa
pusha
imul
mov
iret
jg
in
mov
mov
mov
mov
mov
aaa
js
jmp
jecxz
mov
sub
pop
orl
dec
mov
sub
fwait
pop
lock
sbb
fucomi
lods
repnz
sub
mov
mov
mov
inc
add
sub
sub
dec
movsb
flds
dec
dec
push
or
mov
adc
sub
sbb
mov
ja
rcll
jne
cmc
mov
pop
jmp
jb
mov
pop
dec
into
mov
bndstx
jne
mov
jns
test
pushf
iret
adc
or
filds
pop
lret
push
dec
in
and
mov
push
addr16
push
xchg
out
rcrl
cltd
aam
xor
push
push
mov
add
inc
inc
mov
mov
push
fldl
jb
dec
ljmp
xor
jg
clc
mov
insl
adc
cld
rorl
insb
out
pop
sbb
jecxz
push
outsb
faddp
xchg
stc
icebp
sub
or
ret
in
mov
xchg
inc
cs
dec
in
lcall
rolb
push
into
enter
and
lods
jno
ds
mov
xor
add
and
add
shll
mov
lcall
bound
mov
lret
lahf
mov
jnp
sahf
jmp
mov
mov
xchg
jns
sub
cmpsl
jne
push
mov
gs
mov
add
fsts
call
daa
das
jns
data16
test
mov
dec
idivb
or
cmp
cli
sar
or
insb
push
xrelease
loop
sbb
cmp
cmp
sbb
mov
std
shll
add
testl
repz
inc
in
cmc
jg
cmpsl
arpl
jno
std
push
in
jbe
sahf
jb
nop
aaa
mov
outsb
std
imul
xchg
outsl
lret
inc
fnsave
icebp
es
lods
push
cmpb
adc
ret
jmp
lods
add
lret
daa
push
dec
xchg
lret
mov
push
ja
out
clc
fstpl
jbe
push
iret
mov
test
xchg
sarb
aam
daa
movsl
out
sahf
sbb
lret
jl
jno
notl
xchg
add
mov
lds
xor
stos
dec
into
ss
push
int
popf
jmp
fwait
dec
mov
and
pop
fimull
mov
rcl
es
sti
dec
out
fs
ds
add
add
imul
dec
xchg
xor
xchg
aad
sub
aas
outsb
xlat
adc
push
fmul
sub
or
hlt
or
jno
sub
xor
mov
pop
or
shll
pop
and
std
aad
lock
data16
push
sub
das
ret
mov
leave
pushf
xor
xor
push
inc
fimull
sbb
mov
jmp
mov
int3
pop
jl
sbb
and
push
ljmp
adc
push
cmpl
and
pushw
jp
addr16
lock
mov
sub
jns
jns
cmp
ss
dec
mov
inc
dec
jno
push
rclb
pop
cmp
loop
lods
mov
push
insb
dec
cmp
repz
mov
mov
add
je
jnp
xor
mov
push
adc
lock
push
sbb
enter
and
nop
adc
stc
cli
ror
in
adc
dec
mov
inc
push
pop
inc
adc
dec
sub
adc
or
jge
shl
call
dec
jno
out
aad
sub
add
cld
mov
xchg
shlb
xor
orb
scas
jnp
mov
out
pop
jecxz
mov
push
mov
jecxz
popa
repnz
mov
push
xor
into
push
outsb
jo
shrb
ja
inc
test
mov
jmp
push
popl
addl
xchg
call
mov
daa
inc
data16
sbb
xchg
xor
adc
ss
lods
into
pop
pop
and
cmp
sub
sbb
inc
push
scas
inc
lret
jmp
inc
xchg
pop
addb
inc
daa
adc
lds
dec
out
mov
fildl
mov
shr
rcrl
inc
xchg
daa
xlat
mov
ret
stc
ja
xor
cmp
adc
xor
loopne
shll
dec
stos
mov
test
ficoms
mov
bound
inc
iret
stc
aas
sub
sub
jnp
pop
adc
and
jae
in
pop
sbb
sbb
js
mov
jb
rcl
push
cmc
repz
das
rorb
fs
inc
sbb
and
mov
rep
mov
add
mov
lods
out
lds
aaa
adc
call
push
or
cmp
stos
inc
inc
fldl
stc
push
pop
add
jne
jnp
jne
fnsaves
or
push
add
mov
xchg
divb
lcall
cmpsb
dec
inc
orb
and
fcompp
jb
into
xor
imul
mov
cld
cwtl
lea
out
xchg
test
fwait
adc
loope
adcl
loope
xor
jne
ret
ret
or
push
cmpsl
add
jno
bound
icebp
test
pop
test
ds
aaa
dec
cmp
push
adcl
cmp
pop
in
jno
aas
dec
adc
mov
icebp
gs
inc
fldcw
icebp
movsb
out
jg
or
pop
jmp
add
sub
and
jmp
fcoml
lahf
sarb
and
add
mov
xchg
push
fistpl
addr16
xchg
jns
cwtl
inc
push
out
fcmovne
mov
enter
adc
aaa
ss
iret
xor
cmp
pushf
push
mov
or
pop
fidivl
dec
test
jl
xchg
mov
push
xor
sahf
enter
pop
pop
push
aam
testl
pop
sbb
enter
push
jge
mov
dec
movsl
dec
mov
stc
mov
and
or
lahf
aaa
jno
mov
sbb
bound
es
in
push
cmp
or
leave
in
cbtw
fdivs
mov
addr16
or
mov
mov
or
imul
or
mov
dec
add
lret
and
fisttps
jp
fcoml
sub
xchg
int3
das
sbb
mov
scas
sub
pop
xchg
add
scas
add
xchg
pushf
test
test
bound
lcall
cmp
inc
and
mov
js
push
fdivr
dec
jle
outsl
xchg
add
and
inc
xchg
mov
xor
jmp
shrb
mov
aaa
adcl
je
push
add
sbb
lods
mov
inc
mov
fsubrs
lret
mov
andb
nop
lock
cld
clc
ss
add
pop
iret
sbb
or
nop
mov
xchg
add
dec
inc
je
test
jl
fsubs
push
and
orb
fnstsw
sahf
xor
xchg
pop
ret
gs
lret
and
cwtl
mov
cmp
lcall
addb
subl
ljmp
push
and
das
imulb
sti
sbb
dec
aaa
addr16
xor
or
das
dec
orl
shr
dec
arpl
sbb
cmp
xor
les
sub
or
popa
jecxz
pop
pop
sbb
divl
cmp
sti
cli
inc
in
mov
xor
adc
pop
andl
dec
call
adc
jmp
loope
fdivl
cltd
mov
lcall
in
push
and
out
repnz
mov
je
aam
pop
add
test
dec
mov
inc
xor
mov
in
push
bound
insb
test
leave
cld
xor
sahf
mov
es
inc
sub
mov
push
inc
mov
std
mov
enter
rcll
sub
insl
push
jo
shll
add
push
cld
push
cmp
flds
adc
sub
stos
jl
cmc
pop
sub
and
fwait
mov
fwait
sbb
cmpl
cwtl
sti
mov
test
mov
hlt
and
inc
fcmovne
cmp
sub
jge
sbb
mov
push
rcll
out
sub
adc
fnsave
neg
aad
test
lods
mov
in
fldl
inc
inc
dec
shll
loop
and
sahf
das
shrb
iret
test
sub
mov
add
push
mov
nop
pop
imul
addr16
movsb
xor
out
aaa
imul
jb
das
mov
dec
pop
jbe
lcall
cmp
frstor
int3
imul
xchg
out
xchg
out
pop
ret
push
add
jmp
out
pusha
jmp
sbb
loopne
gs
imul
cmpsb
les
adc
fmull
push
mov
shlb
adc
jmp
setg
repnz
test
dec
repnz
jne
adc
sbb
push
mov
pusha
jb
jo
stos
in
inc
or
cmp
repnz
sub
push
clc
scas
repnz
js
rorl
repnz
sbb
cltd
popf
cmp
pop
repnz
aas
or
xchg
push
or
out
rolb
push
inc
imul
outsl
sub
imul
js
dec
jnp
les
arpl
adc
cmp
sbb
lret
int3
adc
pop
sbb
pop
push
sub
decb
push
adcb
add
rol
mov
ljmp
push
sbb
inc
inc
jmp
es
xlat
lods
imul
mov
mov
dec
test
movsl
cmp
xchg
sbb
mov
bound
loope
bound
adc
scas
movsb
outsl
insb
mov
push
dec
aaa
icebp
xchg
mov
push
cmp
pop
arpl
dec
idivb
mov
sarl
adc
push
sahf
jnp
mov
mov
sti
test
pop
flds
das
mov
mov
pop
cltd
jns
scas
pop
mov
xchg
in
pop
or
cmpsl
shrb
mov
lret
inc
inc
mov
out
cmpsb
xchg
xchg
mov
fstpl
inc
stos
frstor
adc
sub
enter
imul
cmp
pop
je
xorb
daa
dec
std
inc
push
sarl
push
adc
mov
xchg
mov
outsl
fidivl
fists
aas
ds
fldl
je
xor
xchg
stc
adc
and
insb
test
mov
or
loope
xor
mov
xchg
stos
jne
scas
inc
jne
scas
push
loopne
add
add
or
sbb
fisubrs
sub
or
mov
cltd
pop
cmpsl
incl
add
mov
out
push
xchg
inc
aad
and
sbb
in
sbb
xchg
pop
mov
mov
outsb
dec
leave
sbb
jle
and
sti
inc
mov
ret
fxch
xlat
negb
add
push
cli
mov
xchg
ja
icebp
js
insb
sub
mov
cli
dec
aam
and
xor
or
adc
jns
jg
stos
ret
mov
lcall
roll
cmp
jnp
pop
xchg
pop
lea
fbld
mov
lcall
lea
adc
mov
push
dec
aaa
mov
loope
push
mov
in
cli
stc
inc
cmpsb
jecxz
imul
jg
lods
out
leave
lea
mov
adc
mov
dec
pop
push
jae
mov
mov
out
fstps
mov
inc
insl
imul
push
xor
mov
addr16
sbb
jo
pop
bnd
imul
pop
add
sbb
test
es
mov
fiaddl
in
inc
cmovno
xor
or
rclb
fdivrs
outsl
xchg
jae
push
pop
jl
push
popa
inc
and
xchg
inc
and
fwait
mov
push
les
xchg
cld
pop
stc
and
aam
jno
mov
je
lock
test
fildl
sub
mov
sar
adc
pop
lret
clc
ja
xor
sub
ret
xor
outsb
sbb
jge
stos
xchg
adc
lea
mov
mov
inc
and
das
dec
insl
es
jns
cmpsb
iret
pop
in
push
xchg
imul
mov
jns
aas
xor
jle
xchg
push
dec
pop
sbb
shll
or
lret
les
and
loop
xor
test
add
outsb
les
push
adc
fnstcw
sbb
pop
stc
mov
divl
nop
jae
loopne
insl
repz
mov
jmp
mov
movsb
xchg
mov
dec
jnp
push
pop
jg
test
xchg
mov
test
xlat
pop
mov
dec
xchg
mov
lods
lret
cmp
out
fimuls
and
jnp
divps
aas
xorb
cmpsl
mov
pop
sbbb
pop
repnz
mov
jo
xor
sti
call
dec
or
lea
ljmp
xor
sub
xchg
mov
pop
repz
inc
ss
pusha
loope
in
shll
lsl
xchg
jge
iret
jno
fidivrs
fwait
add
call
iret
fwait
push
adc
inc
sub
je
and
mov
call
inc
ret
cmpsl
add
gs
xchg
enter
sub
enter
pop
xor
insb
out
outsl
cmpsb
and
xchg
cs
stc
out
mov
pop
push
mov
outsb
movsb
icebp
lock
mov
je
pop
ficompl
xchg
or
gs
testb
repnz
loop
jmp
dec
or
inc
xorl
inc
mov
mov
xchg
ret
cmp
sbb
dec
mov
push
pop
xchg
mov
arpl
jl
sbb
scas
jge
jmp
mov
or
adc
cld
jg
adc
dec
dec
jb
mov
ds
mov
fwait
xor
adc
ficompl
sub
aaa
inc
adc
inc
mov
and
cmp
jge
cmp
sbb
jno
sub
jo
add
jno
rcl
xor
in
dec
mov
pop
sbb
mov
push
lahf
rorb
xchg
jnp
cmp
push
in
xor
cmp
adc
andl
xchg
call
pop
push
sbb
inc
stc
pushf
cltd
mov
fiadds
xor
cmp
adc
in
outsl
pop
and
jbe
mov
dec
pushf
mov
push
xchg
dec
sarb
push
loopne
xchg
push
or
insl
out
pop
jno
mov
xchg
or
fmull
dec
push
popa
push
sbb
dec
lods
add
pushl
cmp
jb
cmp
add
aad
rcl
idivb
adc
sar
fidivl
stos
push
fst
cmp
inc
lods
add
adc
push
out
add
sbb
inc
jbe
dec
and
popf
cmp
aam
xchg
movsl
inc
mov
and
cmp
jo
out
xchg
pop
loope
sar
xor
adc
jnp
mov
pop
jmp
fcoms
enter
cli
mov
gs
jne
movb
mov
xchg
call
stc
mov
movsl
dec
mov
xlat
lods
dec
xor
dec
push
push
push
inc
jmp
test
imul
movsb
inc
adc
orl
movsb
test
push
mov
mov
mov
lret
call
pop
mov
sahf
xchg
out
cmp
jge
lahf
xchg
clc
xchg
movsb
cmpsl
jbe
aam
sub
mov
and
lea
inc
data16
push
push
adc
xchg
or
or
in
in
mov
lcall
leave
xchg
cmc
sub
pop
pushf
rol
or
adc
and
inc
sti
jb
test
scas
dec
mov
in
jge
mov
jg
mov
unpcklps
lret
mov
xchg
lret
sub
mov
or
mov
lods
mov
in
dec
iret
mov
pusha
jge
inc
or
mov
jbe
movsb
inc
pop
push
dec
repnz
popf
shlb
mov
mov
dec
mov
loop
loope
push
inc
movsb
pop
sub
or
pop
mov
push
fs
xchg
xchg
andl
xchg
pop
fstl
ret
rorl
lret
aaa
rcll
cltd
sbb
mov
jno
loop,pn
ror
add
adc
jle
sbb
xchg
lcall
xchg
test
and
loop
xor
insl
outsl
and
scas
push
scas
popl
fisttps
or
call
les
insb
mov
inc
int3
jmp
nop
sbb
clc
imul
pop
in
aad
mov
sbb
enter
fsts
pop
jp
stos
in
add
xor
jae
sbb
cmp
pushl
loopne
fdivs
das
push
sbb
das
fwait
cld
dec
out
ds
xor
mov
jb
ss
mov
movsb
inc
push
lds
dec
imul
cwtl
xchg
xchg
mov
pop
lahf
rcrb
lods
inc
push
arpl
add
sbb
xlat
stc
movsl
leave
loop
mov
add
cmp
fildll
ja
rorl
adc
add
sub
cmp
cli
ret
xor
xor
sbb
cmc
mov
jnp
sub
nop
dec
jo
andl
inc
mov
jns
ret
jb
movsl
iret
scas
push
xchg
jp
lret
pushf
push
sub
popf
mov
or
fisubrl
daa
or
mov
lahf
int
cwtl
inc
scas
or
es
loope
xchg
sti
mov
inc
fxch
call
fmuls
sub
mov
test
jmp
cmp
xchg
push
xchg
dec
les
cmp
inc
pop
loop
testl
mov
fwait
mov
xchg
dec
mov
inc
inc
ficompl
push
scas
sbb
push
add
movsl
xchg
mov
out
or
jnp
mov
jecxz
jge
int3
int
lods
sbb
lods
cmp
stos
bnd
cmc
data16
jcxz
aad
mov
dec
jecxz
test
pop
sub
mov
dec
mov
dec
xchg
test
bound
aas
std
push
mov
frstor
dec
pushf
xchg
jo
fs
pop
or
sarb
imul
mov
imul
or
xor
out
push
or
mov
or
xchg
jp
mov
push
sub
adcl
jno
ds
xchg
xchg
out
xor
xchg
dec
sub
divl
xor
and
add
lds
pop
pop
inc
mov
inc
inc
fnstenv
sbb
pop
fisttpll
int3
add
imul
jbe
xor
push
out
pop
inc
lods
dec
loopne
jns
dec
jp
lods
jae
lock
xor
cmp
mov
les
mov
ljmp
add
enter
sub
mov
push
jge
inc
inc
ljmp
xor
aas
aam
pushf
data16
aas
addr16
sbb
mov
cmp
xchg
repnz
jle
sub
or
lods
movsb
sbb
mov
cli
sbb
iret
data16
lock
lea
scas
test
shrb
enter
les
fimuls
add
decb
mov
in
or
bound
xor
popf
jb
insb
push
xchg
add
out
je
ss
das
outsb
or
outsb
mov
insl
insl
cmp
cmpsl
loop
cmp
jno
sub
or
rorl
inc
repnz
xchg
fbstp
push
fdivrl
pop
jl
sbb
out
inc
out
jns
xor
imul
sbb
xor
fcomip
insb
aaa
sub
gs
int
adc
mov
sti
clc
jns
push
cs
sbb
mov
pop
ss
aas
mov
icebp
cmpl
das
xor
xor
sub
scas
fcmovbe
pop
out
leave
xor
outsb
inc
js
pushf
test
pop
out
adc
adc
nop
xchg
iret
mov
stc
test
lret
xchg
aas
lods
mov
xchg
xchg
flds
sbb
rolb
in
jb
in
in
in
fs
clc
in
int
push
inc
push
push
fldl
addl
clc
lcall
fcomps
dec
data16
mov
inc
pop
and
aam
dec
imul
xor
stos
dec
jp
cmpsl
test
scas
dec
mov
xchg
push
movsb
jbe
pop
xor
ss
mov
gs
outsb
push
push
mov
pop
sti
sub
inc
and
loopne
outsl
xchg
enter
in
outsl
jne
imul
lcall
xor
pop
cmp
mov
cld
ret
loope
mov
loop
and
pcmpeqw
testl
cmp
lret
xchg
cltd
inc
xchg
mov
dec
mov
push
cmp
data16
cmp
outsb
leave
inc
clc
mov
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
mov
frstor
nop
jl
pop
pop
jl
pop
fsubl
popf
push
push
cmp
mov
pop
and
sub
inc
lahf
adc
cmp
pop
je
out
mov
loope
pop
lods
mov
jg
adc
loope
or
outsl
nop
inc
mov
jmp
inc
daa
cmp
and
out
adc
mov
xor
les
repz
popa
push
dec
nop
stc
daa
push
jo
cmpsl
or
fiadds
adc
add
repnz
std
ret
xchg
push
clc
outsb
and
dec
fdivs
int
mov
xchg
pop
dec
cmp
or
or
sbb
ds
jp
jbe
lock
cwtl
or
push
in
or
sbb
fcomps
test
enter
cmc
mov
jo
xchg
in
insb
mov
leave
and
std
out
mov
test
pop
pop
xchg
leave
push
xor
mov
icebp
scas
pxor
inc
repnz
stos
call
xor
out
dec
sbb
sar
loope
xchg
pop
imul
hlt
mov
arpl
sahf
jmp
test
lea
scas
jp
mov
sbb
dec
and
jno
inc
pop
mov
in
fstl
divl
in
loop
cmpsb
pusha
test
jae
jne
imul
sbb
dec
mov
jb
ret
jo
pop
repnz
mov
lea
test
mov
jle
loopne
sub
in
pop
jb
cwtl
ret
rorl
cwtl
mov
jo
clc
inc
loopne
insl
nop
ret
jecxz
push
mov
out
lock
mov
aas
fmuls
or
notl
sub
xchg
js
stos
aad
fbld
hlt
pop
outsb
and
sub
in
pop
mov
fadds
notb
push
cld
out
out
ror
lds
daa
mov
iret
xchg
pop
test
outsl
sarb
dec
imul
push
shrb
in
jmp
and
lods
mov
inc
lea
leave
dec
outsb
xor
subb
cmp
xor
push
mov
mov
push
andl
ret
sbb
ja
jbe
push
ret
stos
rorb
pop
inc
iret
cmpsb
dec
sbb
mov
sub
test
je
out
inc
cmp
pop
aad
xor
push
jno
in
jno
mov
cmp
in
dec
mov
cmp
pop
cs
or
cmp
lahf
pop
clc
jg
and
dec
xorl
lahf
test
js
stc
mov
aad
xor
dec
aaa
fwait
xor
or
jmp
xchg
inc
adc
add
cmc
addl
cmpsb
dec
add
or
clc
xor
imul
push
testb
ret
mov
jae
dec
mov
sub
xchg
mov
addr16
rclb
mov
and
sub
out
xchg
rol
jmp
add
lea
movsl
jle
pop
mov
push
inc
loopne
or
mov
add
into
dec
ss
loope
test
cwtl
mov
dec
push
pusha
sbb
mov
adc
loopne
scas
pop
add
cli
sub
in
ret
das
adc
pop
cmp
adc
mov
mov
mov
jmp
mov
and
mov
icebp
xchg
mov
sub
sub
mov
sahf
out
nop
in
mov
mov
push
lret
fisubrl
jbe
pop
cmpsl
pushl
roll
test
pop
jns
outsb
xorl
xor
push
into
mov
inc
and
dec
cmp
inc
push
and
pop
shll
shll
std
cmp
mov
push
loopne
imul
icebp
clc
scas
notb
and
call
outsb
popl
jp
negb
cld
rcrl
ret
pop
mov
jnp
and
test
jae
push
jnp
loope
in
aaa
mov
jmp
arpl
mov
sub
push
cmp
imul
inc
test
mov
adc
or
jle
popa
loop
xor
mov
shll
cmp
add
add
mov
stos
daa
dec
or
aad
inc
iret
scas
pusha
pop
push
popa
and
and
adc
mov
xlat
and
add
xor
sub
imul
test
fldl
or
cld
mov
jp
in
dec
xor
cmp
or
sub
int
jl
cmpsb
pop
adc
ja
xor
sbb
lcall
inc
inc
push
mov
adc
sarb
dec
hlt
dec
inc
cld
das
or
pop
das
jnp
test
jle
cwtl
or
rcrb
bound
xchg
jno
mov
sahf
out
test
push
xchg
outsb
inc
push
sti
bound
pop
stos
sub
dec
fsubrp
dec
pop
xor
imul
ja
inc
subl
mov
fsubr
cmp
iret
jle
push
pop
mov
xor
cwtl
xor
icebp
adc
push
loope
popf
jne
fcoml
outsl
cld
jle
data16
out
adc
and
pop
cwtl
inc
xchg
mov
cs
js
mov
imul
arpl
adc
adc
popf
shr
mov
lahf
fidivrs
pop
xor
pop
aam
nop
daa
dec
inc
out
inc
jns
lcall
jg
loopne
sbb
fidivl
mov
jne
lds
in
rcll
test
leave
aad
rorb
in
push
xlat
gs
sbb
xchg
and
xlat
roll
inc
mov
adc
test
in
xor
mov
jb
pop
mov
jmp
mov
jmp
gs
imull
stos
inc
xchg
mov
lock
cmpl
and
inc
mov
repz
xrelease
sti
scas
dec
xchg
mov
movsl
pop
xor
js
mov
push
push
cmc
loopne
leave
inc
lcall
push
dec
jo
jge
dec
addr16
das
sub
nop
push
jo
add
lahf
daa
dec
mov
fwait
or
ret
hlt
add
dec
imul
pop
aad
std
adc
fwait
js,pt
fisubrs
leave
inc
sbb
loop
mov
push
cwtl
aas
loopne
addr16
lods
inc
ds
sbb
xchg
insb
pop
out
pop
pop
adc
pop
adc
or
or
roll
stc
divl
int
mov
and
jecxz
xchg
jp
cmc
sahf
mov
inc
pop
in
cmp
push
lods
xchg
pcmpeqd
sbb
fwait
jbe
push
jp
sbb
std
cwtl
mov
popf
pusha
jge
sbb
pop
push
mov
popa
mov
nop
xchg
jnp
addb
dec
xor
jno
push
and
cli
inc
das
xlat
push
jmp
fidivrl
inc
lahf
jl
mov
xchg
das
in
test
imul
cmpsl
out
cli
loop
out
sub
fdivrp
jno
hlt
xlat
leave
addl
lcall
sbb
xchg
ljmp
jno
rol
mov
xor
cmpsb
mov
sub
lret
flds
mov
cmp
add
imul
or
pop
sbb
std
jne
in
adc
adc
xchg
rcr
in
lcall
cmc
mov
push
ja,pn
addr16
mov
sub
or
test
rorl
or
mov
and
jae
xchg
push
xchg
movl
push
dec
sub
jo
jo
sahf
mov
in
orl
sub
add
aaa
and
xor
call
icebp
add
fstpl
cli
push
sarb
jmp
stc
jp
fidivrs
push
xor
xchg
push
out
into
jbe
add
cmpsb
pop
xlat
mov
data16
rep
cld
sti
sbb
xchg
and
adc
mov
icebp
bound
scas
sub
xchg
pushf
nop
imul
daa
shr
jg
jno
inc
shl
sbb
dec
in
xchg
xchg
adc
adc
xchg
mov
mov
ss
mov
test
stos
xchg
push
jmp
sub
push
mov
mov
xchg
adc
inc
xor
cmc
pop
mov
ja
ret
jne
jae
mov
mov
fwait
sbb
jae
fcmovnu
mov
xchg
xor
jns
cmc
xor
fildll
fnsave
push
mov
iret
gs
imul
outsb
cmpsb
mov
fistpll
add
and
dec
push
aaa
cwtl
hlt
shl
outsl
xchg
push
xchg
cmp
sub
xor
mov
dec
out
pop
push
repz
idivb
cmp
xchg
ret
into
sbbl
mov
and
xor
mov
mov
fldcw
mov
jl
imul
jl
outsb
adc
in
loope
inc
push
xor
sub
repz
adc
test
cmpsl
xchg
dec
enter
inc
add
add
adc
imul
mov
mov
rol
insb
out
mov
ffreep
mov
inc
outsb
mov
or
aad
mulb
addr16
test
icebp
jne
jns
out
pop
sub
lds
jmp
in
jg
outsl
jnp
sbb
int
shlb
or
sbb
scas
sbb
or
in
pop
mov
mov
add
jge
pop
adc
mov
fnsave
pop
xchg
rorb
into
rorl
pop
popf
dec
or
rorl
hlt
mov
cltd
fists
xchg
xchg
dec
pop
notb
repz
enter
mov
xlat
and
mov
dec
xor
cmp
lcall
divb
pop
add
es
pop
ret
pop
pop
ja
rcrl
enter
xchg
mov
aaa
xchg
clc
sub
sub
push
out
rcr
xor
sub
pop
mov
adc
or
adcb
sbb
ljmp
out
inc
mov
adc
adc
pop
xchg
mov
mov
rol
aam
pushf
test
xchg
jns
cmp
testl
sbb
push
shll
cwtl
jmp
enter
mov
sbb
xchg
pushf
push
sbb
or
out
sub
sbb
je
aas
xor
cltd
xchg
es
push
push
aam
gs
and
push
jb
mov
xchg
mov
dec
ficoml
ss
sub
popf
das
xor
enter
add
dec
jno
push
test
push
rorl
lock
addr16
aam
cli
fsubs
dec
fnstsw
fldl
lret
push
gs
int3
pop
lods
scas
test
or
cltd
push
inc
inc
and
push
xchg
shll
fildll
gs
jg
push
rclb
mov
lods
jns
push
sub
dec
divb
std
and
lods
and
jno
repnz
jns
aas
stc
shlb
les
ja
cs
dec
rorl
aas
fwait
out
mov
scas
pushf
repnz
jle
lret
ss
out
daa
nop
xchg
mov
aam
jnp
xchg
jae
push
ds
mov
mov
jle
iret
cmovno
xchg
or
scas
mov
jnp
clc
push
jg
ds
mulb
mov
lea
mov
jecxz
inc
or
std
cmp
mov
dec
outsb
inc
ficompl
mov
lods
xchg
loope
jle
dec
test
stos
pop
xor
les
in
int
shl
in
push
in
fistl
pop
lret
or
sbb
xor
pusha
ss
sbb
scas
into
je
jmp
mov
push
das
out
jb
in
and
mov
mov
ss
mov
in
mov
fs
nop
or
and
lock
nop
mov
stos
cmpsb
mov
adc
cs
xchg
hlt
mov
mov
pop
inc
cmpsl
and
cmp
sbb
aad
fdivr
int
lock
jns,pt
insb
xchg
pushl
fcmovbe
xchg
sbb
inc
das
sbb
out
ret
mov
dec
mov
push
shrl
jne
faddl
sbb
mov
inc
inc
cmpsl
push
mov
push
xchg
psllw
and
in
push
ja
jp
loop
clc
lea
daa
popf
inc
sub
and
aad
pushf
jb
psubb
in
in
outsb
out
mov
insl
loopne
push
and
jne
mov
mov
mov
add
cmp
ja
pop
sahf
jp
stc
cmp
jg
stos
or
xchg
addr16
add
ljmp
mov
inc
and
adc
push
mov
jb
loop
and
lods
mov
add
and
xor
xor
popa
push
sub
jnp
inc
add
iret
inc
loopne
in
push
pop
aaa
dec
xor
sti
pop
arpl
xor
jb
xchg
cmp
test
rorl
cwtl
int3
inc
clc
and
push
rcr
mov
cmp
test
notb
adc
in
test
testb
lret
fisubl
orl
test
inc
icebp
hlt
pop
adc
clc
cwtl
cmp
dec
or
pop
enter
xchg
adc
out
ja
cmp
jae
pop
out
mov
jle
mov
push
push
es
mov
pop
scas
add
sahf
psubd
jbe
cwtl
pop
dec
mov
cmc
clc
xor
xchg
xchg
dec
or
adc
out
or
pop
std
pop
movsl
cltd
adc
push
jnp
fwait
pop
js
push
hlt
jecxz
popa
pop
jns
inc
cmp
rcr
xchg
loope
cmp
push
inc
fldcw
or
cwtl
mov
ret
cmpsb
sahf
mov
jmp
jle
je
ja
jp
jmp
sbb
or
inc
scas
push
push
arpl
lret
hlt
test
roll
repnz
sub
ljmp
bound
xchg
outsb
xchg
mov
outsb
in
out
ror
rolb
mov
into
scas
or
ljmp
mov
icebp
rcl
movsb
push
cmp
mov
push
or
lock
adc
sub
dec
jge
pop
int3
push
adc
add
fdivp
sahf
movsl
jae
sub
movsl
inc
pop
inc
sub
gs
fldt
nop
cmp
sti
mov
adc
inc
popf
movsb
or
repnz
pop
cmpsb
in
cltd
subl
std
leave
addr16
or
add
cmp
pop
movl
aas
xchg
loope
dec
loopne
mov
jnp
orb
aad
adc
or
daa
sub
test
jmp
jb
negb
es
jle
mov
push
orb
push
cmp
ret
push
sbb
fs
rol
test
pop
pushf
sbb
outsb
xor
add
inc
or
movsb
addr16
mov
mov
inc
stos
lret
fisubrl
mov
inc
add
ljmp
fld
adc
loope
xor
mov
ror
out
arpl
lcall
xlat
and
or
adc
fwait
mov
adc
pop
sbbl
jne
push
pushf
cld
mov
loop
shl
pop
or
loope
loopne
enter
xchg
cwtl
mov
pop
loope
pusha
mov
jne
push
repnz
cli
cld
mov
lea
fisttps
cmp
dec
adc
xor
pop
dec
push
xor
sub
push
dec
mov
movsl
aam
jmp
mov
shll
nop
inc
stc
xchg
mov
adc
dec
mov
pop
xor
in
and
fs
xchg
rorl
inc
ds
test
cmp
out
orb
sub
loope
and
xchg
stc
add
inc
xor
sbb
push
outsl
xor
and
jecxz
mov
mov
leave
pop
cmp
xlat
jmp
sbb
push
pop
cmp
test
adc
fst
loopne
ds
outsl
je
lcall
fistpl
fdivs
fwait
xchg
ret
sbb
iret
inc
es
sub
xchg
test
pop
xor
adc
sbb
cmp
jl
adc
repnz
jl
jbe
jae
imul
pop
scas
xchg
jae
jae
test
bound
cmpsl
out
fsubrl
push
stos
lcall
js
jmp
pusha
mov
jg
fldcw
inc
fdivrp
adc
lret
sarb
adc
and
popa
bound
push
mov
lods
sub
push
dec
imul
mov
xorb
test
jge
push
loopne
movsl
call
xchg
pop
sti
arpl
sbb
sahf
jg
shrl
inc
pop
pusha
aad
out
xlat
cmpsl
outsb
pmulhuw
enter
dec
outsl
out
test
jbe
push
jp
jnp
push
or
xchg
sbb
test
adc
popa
and
cmp
es
mov
mov
pop
insb
mov
mov
scas
testb
out
call
rcll
faddl
xorl
adc
arpl
pop
fildl
push
xor
test
inc
shll
out
fimull
cmpb
inc
cmc
xchg
cmc
sbb
xor
mov
and
lretw
dec
jns
jecxz
sub
pop
jno
lret
sub
mov
fisubrs
dec
aad
scas
sbb
jl
mov
int
sbb
test
push
inc
pop
add
push
loope,pt
add
dec
sbb
scas
je
inc
int
or
mov
imull
cwtl
sub
xor
imul
add
lods
jae
cmp
xchg
pop
sub
mov
gs
dec
xchg
mov
push
mov
fwait
loop
mov
adc
add
inc
push
add
addl
mov
or
rcrl
cmp
fildll
xor
aaa
or
inc
dec
or
sbb
dec
mov
mov
mov
iret
mov
imulb
scas
xor
sbb
int
mov
adc
push
arpl
es
and
sub
test
cvtps2pi
call
test
push
fstpl
push
sbb
popa
add
mov
imul
in
icebp
mov
jae
push
pop
mov
fbstp
loopne
or
xor
sbb
or
in
mov
cmp
pop
sub
repz
nop
aam
sbb
es
pop
xacquire
aaa
jnp
push
sbb
pushf
mov
movsl
fnsave
jb
rol
mov
xchg
mov
pop
mov
adc
mov
xchg
inc
push
xchg
mov
cmc
xchg
pop
in
jg
mov
jnp
shll
enter
jno
mov
jb
stos
sar
movsb
iret
and
pop
dec
fstp
add
imul
aad
xor
pop
pause
mov
inc
sub
and
mov
sbb
repnz
jecxz
imul
insb
leave
dec
enter
mov
movsl
mov
sub
filds
and
popf
ror
xchg
daa
out
dec
jecxz
or
in
cmc
shlw
enter
pop
js
pop
push
sbb
jno
ficoml
xor
xor
in
out
sbb
xchg
mov
stos
xor
mov
sub
loop
loope
arpl
add
or
in
xchg
call
sub
loop
insl
jl
iret
or
dec
jbe
pop
out
imul
ss
int
cmpsb
add
push
adc
pushl
ficompl
lods
dec
mov
sub
aad
push
mov
movsb
and
inc
xor
add
and
xchg
mov
push
mov
jns
icebp
loopne
jl
add
and
insb
das
cli
jae
pop
jp
mov
mov
addl
add
lret
sub
cmp
inc
das
jno,pt
sbb
sbb
int3
outsb
mov
mov
push
out
cld
pop
lahf
inc
jg
or
push
push
fldl
aad
mov
test
sahf
out
sbb
pop
mov
mov
mov
xor
xchg
es
addl
loop
out
lea
add
notl
lods
sbb
mov
insl
clc
outsb
push
fnsave
gs
jecxz
mov
imull
int3
jo
cs
ljmp
mov
jno
testb
xchg
daa
mov
xor
lods
in
mov
push
sarl
movsl
pop
pushf
clc
sbb
mov
add
jns
into
xor
or
xchg
cmp
pusha
xchg
popa
loope
add
push
sub
stc
adc
add
mov
test
push
fstl
add
xor
lahf
xchg
cmp
pop
aaa
in
pop
push
ljmp
mov
imul
mov
les
out
fs
or
in
iret
push
sub
jg
xchg
mov
sub
stos
mov
push
jge
aaa
push
not
mov
pop
movsl
and
imul
loope
dec
in
es
xor
in
jecxz
in
inc
jg
shll
xchg
mov
in
inc
inc
inc
repnz
cld
aam
push
in
or
jl
pop
xor
int3
xchg
mov
jns
pop
les
rclb
lret
and
aam
mov
pop
stc
flds
push
push
mov
sub
adcl
xor
out
sbb
in
ret
inc
out
cmp
insb
sub
add
adc
and
pop
cmc
shlb
cmp
add
out
push
add
mov
les
mov
sbb
stos
xor
and
pop
pushf
ss
cmp
test
into
aam
pop
adc
aam
cld
arpl
ret
mov
xor
jb
xchg
cwtl
sbb
roll
pop
es
out
xchg
outsl
mov
and
mov
or
add
jo
scas
aad
scas
inc
insb
loopne
or
mov
inc
inc
mov
inc
aaa
lock
mov
sbb
adc
adc
mov
adc
push
mov
inc
int3
outsl
enter
or
and
cmp
or
inc
out
iret
das
xor
push
cwtl
xchg
js
mov
mov
pop
sbb
ljmp
js
mov
jecxz
movsb
sub
mov
sub
lret
lcall
fidivs
adc
mov
add
in
lods
pop
or
xor
inc
mov
push
push
inc
daa
outsb
push
jge
push
pop
sbb
inc
lds
jb
filds
jno
ror
xor
jmp
pop
fldcw
mov
fldt
cs
push
fdivl
scas
cmpsb
or
out
pop
fistpll
cltd
lea
daa
sub
jb
inc
jl
aas
les
sbb
rorb
xchg
cmp
test
jb
adc
sub
scas
arpl
adc
pusha
and
and
pop
and
add
ljmp
mov
push
mov
pop
test
icebp
lods
add
and
mov
jle
imul
dec
icebp
ret
push
mov
sti
pop
pop
fnstenv
out
inc
adc
xor
push
xlat
in
sub
aam
rcll
dec
adc
jmp
push
fisubrl
cmp
add
scas
cmp
cmp
not
lret
rorb
aad
insl
jmp
xor
jns
dec
iret
mov
js
xor
adc
mov
in
shr
pop
test
jp
addl
and
mov
push
xor
add
pcmpgtw
fisttps
in
fidivs
xchg
loope
mov
cli
arpl
pop
aaa
mov
icebp
mov
push
push
cmp
fisubrl
sub
cmp
fwait
jmp
movsl
mov
fdivrl
in
jmp
out
xor
rcll
data16
inc
push
pop
jbe
and
mov
xlat
daa
lods
cmp
ljmp
cmc
adc
es
mov
je
mov
xor
sbb
ljmp
stos
xor
lock
push
pop
shlb
inc
adc
call
mov
sub
lret
xlat
fcompl
lret
loopne
push
dec
outsl
inc
xchg
mov
add
xchg
pop
call
mov
mov
scas
fsubs
jmp
pop
or
js
lahf
repz
mov
pop
pop
cli
xchg
mov
in
inc
cmpl
orl
push
cmp
stc
shl
mov
pop
dec
jle
into
mov
or
push
xchg
mov
inc
sbb
pop
fs
out
dec
pop
ds
gs
stos
add
pop
pop
adc
sahf
imul
aad
popf
add
jg
mov
jb
fsubp
pusha
pushf
or
hlt
push
xchg
out
in
sbb
jbe
jg
leave
loopne
cmpb
test
nop
adc
lret
and
push
outsl
mov
sub
pop
jg
adc
inc
pop
push
cmpl
mov
xor
xchg
jo
xchg
jecxz
jne
daa
testl
cmpl
xor
gs
mov
inc
clc
repnz
mov
std
in
xor
mov
pushf
pop
adc
adc
push
rcrl
add
sub
lret
pop
ss
or
pop
cmp
insb
std
pop
imul
movsl
ljmp
in
sbb
dec
dec
xchg
inc
orl
dec
add
add
pop
adc
fdivrl
sbb
dec
lock
movsb
or
xchg
or
xchg
push
fbstp
mov
sbb
inc
inc
sub
lods
in
push
inc
test
sbb
cmp
std
mov
out
rcll
mov
jno
sbb
jp
push
into
arpl
insl
mov
pop
jnp
fdivp
in
aam
adc
jns
xor
sub
push
push
xor
xchg
mov
std
lea
mov
and
lret
shll
cltd
push
mov
mov
cmpl
mov
enter
js
scas
push
out
sub
stos
sbb
repnz
add
pop
out
bound
jp
pushf
fsubrs
out
and
mov
out
xor
ret
xor
and
lret
inc
mov
sub
clc
and
loope
or
test
push
stos
sbb
mov
pusha
add
adc
sti
jg
test
mov
adc
nop
aaa
pop
adc
pop
jae
stos
insb
pop
mov
test
sarl
xchg
lret
test
xchg
pushw
loope,pt
jno
xor
sbb
or
sti
cwtl
cmp
cmp
lret
insb
jns
inc
enter
push
repz
inc
mov
cmp
adc
test
pop
lcall
push
cmp
pop
mov
mov
lret
scas
xchg
repz
lods
sub
mov
and
ret
andl
adc
jae
loop
aaa
pusha
fldt
sub
xchg
data16
ljmp
pop
in
xchg
or
or
out
push
pop
fsubrs
inc
or
xchg
push
xchg
dec
jg
sbb
inc
ja
push
movl
push
push
or
jmp
push
cmpsb
mov
ret
lods
inc
das
mov
fs
mov
pop
rcrb
lock
jb
call
out
xor
xor
cmp
dec
jecxz
pop
cmp
dec
dec
stc
xchg
movsl
xlat
sbb
mov
or
jge
es
cmpsl
cltd
fwait
xor
mov
aam
shrl
hlt
test
movsb
ljmp
inc
movsl
outsl
fsubrp
lock
add
mov
mov
jno
notb
shrb
mov
outsl
jmp
mov
lret
mov
jmp
leave
ds
pop
loopne
sub
or
repz
ja
lods
ret
je
mov
xor
in
jnp
inc
int3
mov
add
push
mov
pop
nop
mov
mov
test
popf
pop
xchg
imul
inc
jb
xor
xchg
pop
mov
nop
cmc
ret
push
xchg
xor
xor
fdivrl
je
jecxz
mov
or
mov
jno
outsb
mov
les
sub
lock
enter
and
mov
jge
out
orl
cli
add
jp
xlat
scas
mov
pop
stc
jle
xchg
mov
loop
aas
pop
mov
stc
jne,pn
xor
in
lea
jl
mov
bound
cwtl
mov
jmp
push
cmp
ljmp
sub
mov
pop
jbe
push
jnp
lock
dec
out
mov
nop
stos
mov
hlt
test
jp
shlb
arpl
iret
mov
subl
push
nop
jnp
and
or
push
repz
mov
jmp
outsl
mov
or
hlt
imul
ljmp
push
fidivs
movsl
clc
add
jo
rsqrtps
xor
mov
js
lret
mov
fst
stos
jne
sahf
push
mov
negb
loop
add
mov
jo
xchg
fwait
daa
adc
fstps
leave
inc
pop
cmc
cwtl
cli
stos
push
pop
aas
sti
pusha
add
mov
sbbb
fistpll
xchg
jbe
in
in
xchg
push
inc
gs
mov
add
push
in
pop
push
leave
ret
jp
sub
cmp
fstps
je
mov
loop
push
adc
xchg
jbe
cmp
pop
push
cltd
push
add
aam
mov
daa
sbb
pop
inc
dec
mov
mov
lret
xchg
imul
dec
sahf
push
mov
sub
inc
aas
lret
jb
fwait
mov
push
cwtl
mov
or
subb
sub
mov
neg
cmp
mov
loopne
mov
addr16
lea
pusha
orl
xchg
lahf
jmp
mov
xor
cmp
xchg
aam
adc
jmp
test
dec
lods
dec
xchg
inc
cwtl
lds
aaa
scas
int3
sarl
push
push
repnz
mov
cwtl
and
mov
out
jmp
xchg
sahf
sub
pop
inc
adc
push
sub
cwtl
icebp
sbb
adc
fnsave
shll
and
test
clts
insb
repz
cld
into
inc
jo
push
frstor
cmp
jmp
sbb
xchg
movsl
cwtl
and
sub
dec
and
outsl
xlat
xchg
mov
mov
repnz
lahf
cmp
cli
iret
xlat
insl
pop
outsb
jg
fstp
add
xchg
cmp
mov
cmp
push
test
cwtl
xlat
outsb
dec
mov
xchg
cs
test
imul
in
sub
stos
sbb
icebp
leave
mov
xchg
ss
mov
scas
push
xorb
aad
fisubrs
mov
sbb
xor
sub
int3
cmpsl
aam
mov
mov
push
dec
push
adcl
mov
pop
inc
inc
lret
xor
sti
push
inc
sbb
fcmovnu
xor
xor
and
sahf
mov
fcomps
mov
mov
adc
push
mov
sti
xchg
scas
test
pop
push
fsts
pop
and
pop
xlat
add
stos
push
add
rol
out
cmpsl
dec
mov
xor
or
cmp
dec
lea
xor
adc
xchg
and
push
cld
and
scas
jnp
lods
xchg
adc
scas
lods
popf
rorb
push
xor
mov
sbb
imul
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
jmp
pop
push
ja
test
jne
push
sbb
mov
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
