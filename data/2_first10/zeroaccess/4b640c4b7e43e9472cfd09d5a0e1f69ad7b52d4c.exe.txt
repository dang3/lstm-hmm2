mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
or
data16
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cmp
pushf
inc
sbb
imul
pop
ss
adc
imul
les
xchg
sub
pop
mov
sbb
sti
ja
sbb
sub
sbb
jno
je
dec
inc
test
pushf
jecxz
mov
stc
xchg
out
clc
xchg
cmp
stos
int
pop
ljmp
mov
roll
xor
pop
mov
push
xchg
rorb
adc
jne
aas
mov
iret
stc
data16
pushf
jmp
jmp
lret
mov
ds
mov
dec
scas
mov
fdivrl
nop
in
mov
inc
fldcw
push
cmp
mov
and
icebp
andb
xchg
in
add
sbbl
lcall
jg
sbb
cmp
int3
or
cmp
push
cs
push
mov
mov
xor
rcl
data16
sahf
incb
sbb
les
push
jno
sbb
sbb
xor
mov
in
inc
mov
stos
xchg
push
out
test
addr16
adc
cmp
pop
loope
icebp
push
popa
or
or
sarl
add
mov
fbld
mov
push
in
in
loope
out
movsl
adc
dec
push
pop
ret
push
lcall
pop
stos
mov
inc
and
movsb
cmpsl
es
and
cs
xor
aad
cmp
xchg
mov
jno
dec
pop
and
out
mov
inc
jne
sbb
pop
ja
in
out
gs
mov
cmp
jbe
out
adc
lahf
mov
fcmovu
shll
cmpsl
pop
imul
rorb
mov
js
inc
and
sub
ret
adc
mov
mov
add
dec
mov
pop
cld
add
jle
dec
mov
jo
je
jge
mov
ret
icebp
call
mov
shlb
ss
out
or
ja
orb
stos
aam
inc
mov
sub
push
stc
out
dec
out
es
xchg
sahf
movsb
jl
xor
push
sahf
xlat
repnz
or
imul
xchg
jge
mov
xorps
fiadds
adc
out
inc
mov
pop
cmc
mov
enter
xor
into
cmp
fldcw
inc
test
popf
and
shlb
xchg
dec
mov
cmpsl
push
ret
push
push
xchg
sub
inc
mov
jo
sub
inc
outsl
das
js
pop
and
xor
call
cmp
jne
dec
jp
dec
sti
insl
pusha
cli
and
adc
icebp
out
inc
inc
insb
lea
loopne
ficoms
es
imul
mov
adc
jnp
ror
aam
daa
pop
adc
scas
test
rcrb
xchg
xor
mov
je
lea
add
or
out
jne
dec
push
xchg
sbb
es
out
pop
imul
xor
mov
mov
es
push
sub
das
out
push
mov
iret
push
sub
test
jno
xor
je
push
shlb
icebp
imul
cmpsl
sbb
lods
and
aas
inc
mov
or
xchg
and
addb
push
out
cmp
repz
pop
arpl
push
cmp
mul
fnsave
mov
push
pop
jae
mov
cmp
add
jb
testl
push
cmp
jge
or
mov
es
lcallw
rclb
shr
lods
sub
pop
lock
jge
xor
mov
pushf
or
and
enter
test
sbb
fdivr
rcll
inc
add
add
push
movsb
lret
pop
mov
mov
jge
rcl
movsl
push
into
mov
push
cmp
fisubs
loopne
aas
scas
fistpl
adc
fdivs
fwait
push
xchg
jb
hlt
adc
repz
shlb
cmp
lods
scas
rcr
jg
pop
xchg
inc
dec
inc
in
cli
insl
shrl
add
sbb
data16
in
sti
xlat
je
xchg
lock
out
nop
sub
sbb
scas
or
lret
aas
xchg
push
push
call
cmp
mov
cwtl
je
mov
pop
daa
cmc
cmp
loopne
lock
adc
clc
xor
jecxz
shll
dec
inc
pop
jge
push
add
ss
repnz
push
mov
jle
push
jns
add
pushl
lcall
sub
xchg
pop
push
sub
lock
dec
loopne
lahf
mov
rcrb
into
cmpsl
dec
mov
aaa
cmp
fucomip
pushf
pop
or
adc
push
pop
loope
xor
mov
push
or
cwtl
adc
adc
mov
pop
cmp
cmc
and
sbb
bound
pop
and
imul
scas
leave
psubsb
punpcklwd
push
repz
xchg
dec
push
inc
cs
dec
dec
dec
test
mov
clc
movsb
or
fdivrs
arpl
loop
aaa
fstpl
push
movsl
adc
popa
sbb
fimull
inc
and
loopne
test
mov
xchg
push
jmp
outsl
xor
lret
cmp
jp
pushf
sub
insl
xchg
xchg
lods
push
mov
iret
or
and
les
cmc
subb
scas
and
lea
or
out
std
cld
jg
shl
sbb
lahf
push
jle
mov
xchg
sub
inc
fcmovu
mov
add
cmp
add
pushf
fsubl
stc
jne
pop
stc
fbld
loopne
add
stos
out
push
movsl
cs
test
mov
pop
jno
mov
sbb
sub
std
dec
pop
ds
mov
jno
mov
mov
pop
lods
stos
push
sbb
rcrl
inc
add
pop
lret
sahf
stos
sbb
adc
lret
add
lahf
adc
cmp
mov
pop
jle
xorb
inc
xchg
sub
push
inc
rcrl
cmc
test
pop
dec
fcomip
fdivrs
loopne
inc
xor
in
aad
repnz
push
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
por
or
push
mov
jl
sbb
add
cmc
mov
push
xchg
mov
fldt
adc
sub
scas
mov
sub
xchg
dec
xor
push
jg
movsl
push
dec
cmp
mov
mov
jmp
sbbl
js
mov
mov
stos
push
in
cmp
pop
cmpb
xchg
es
and
jbe
push
ret
pop
push
mov
stos
stos
jne
pop
repz
add
mov
or
or
cld
xor
cld
data16
fstpt
adc
in
cmp
sbb
daa
lahf
adc
mov
lret
int3
mov
lds
xchg
in
std
jne
sbb
out
idivl
lock
dec
rolb
orb
sbb
jnp
test
dec
cwtl
std
cmp
fmull
and
inc
movsl
xchg
negb
scas
cmpsl
int3
pop
popl
stos
mov
stc
cmpl
or
and
and
jnp
ret
xchg
cmp
into
sub
or
xlat
lods
in
aaa
out
mov
cs
loope
and
movsb
fwait
or
orb
mov
xor
sbb
in
fisubs
cmp
test
pop
pop
mov
mov
mov
in
ret
int
or
push
mov
jae
push
call
mov
cmp
sub
or
push
mov
fcoml
sbb
test
cli
jae
pop
lock
mov
cmp
cmp
test
adc
push
shll
mov
stc
outsl
inc
int3
out
imul
roll
fistpl
mov
std
mov
add
mov
inc
mull
cs
imul
fmull
jnp
push
mov
fadds
xlat
dec
aas
dec
addb
xor
xchg
enter
jbe
mov
mov
jne
cmp
push
push
mov
clc
loopne
mov
sub
jmp
add
inc
test
mov
fcoml
xlat
repnz
sbb
or
xchg
outsb
jge
lods
jno
rolb
mov
xchg
mov
jne
mov
inc
mov
dec
ss
aas
bts
ror
xchg
dec
lods
cmpsb
hlt
push
mov
sbb
fcomi
mov
or
lret
adc
jns
ror
adc
icebp
divl
jo
xor
data16
cmp
clc
fwait
xrelease
cli
xchg
xchg
iret
adc
jnp
ds
outsb
add
pop
sbb
mov
arpl
pop
adc
dec
in
xor
fnstsw
fsubrl
shrb
loop
sub
andb
mov
test
adc
outsl
pushf
mov
aas
jmp
sub
mov
jge
sub
std
imulb
hlt
cmp
adc
lcall
jns
and
sarb
mov
inc
cmc
in
inc
sub
divl
xor
and
adc
stos
popf
xorb
and
lret
xchg
int3
push
adc
lea
int3
or
mov
pop
daa
cltd
push
inc
push
mov
xchg
and
xchg
call
jge
jl
decl
mov
sub
or
pop
push
sub
lret
xchg
adcb
cmpsl
lds
push
add
pop
mov
stos
mov
push
mov
cmpsb
mov
mov
popa
push
push
repz
mov
inc
ret
lret
pop
cmp
out
dec
ss
ja
popf
mov
mov
fwait
xor
orb
mov
int
mov
mov
or
scas
adc
lods
loope
insl
inc
mov
fstl
mov
ljmp
pop
add
mov
cmp
xor
sub
and
mov
gs
sub
xorb
jp
pop
push
mov
aas
mov
adc
jl
test
stc
cmp
xchg
into
jle
aas
negb
sub
pop
das
inc
repnz
cmpsl
mov
jne
xor
decl
aam
arpl
bound
fdivrl
jae
and
out
sar
pushf
push
cmp
push
fwait
movsb
or
add
or
test
add
mov
xlat
jge
pop
dec
pop
dec
notb
lahf
sub
xchg
int
cmp
mov
sbb
arpl
icebp
out
std
sahf
or
cmc
lods
lcall
outsb
in
cli
sbb
pop
mov
lock
jne
jo
mov
mov
jb
xchg
ret
data16
and
int3
popf
insl
and
outsl
inc
mov
movsb
sti
cmp
add
mov
pushf
pop
in
pop
cltd
and
enter
cltd
lock
sub
bound
notb
test
in
xor
es
pop
loop
jbe
mov
push
push
cld
data16
mov
mov
sub
jl
addr16
test
jp
outsl
jae
xchg
xchg
mov
mov
add
jl
popf
pop
call
mov
dec
test
cmp
sub
lahf
cmp
mov
mov
mov
mull
arpl
lea
inc
or
sarl
mov
leave
cli
jno
adc
xchg
xchg
sub
and
push
nop
or
and
rorb
addr16
mov
fstl
imul
mov
cli
xor
push
push
pop
cmp
fwait
mov
jp
cmp
test
iret
inc
rcrl
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pcmpeqd
adc
lret
sbb
ljmp
pop
lods
cmp
jp
xchg
andb
mov
sub
popf
test
and
push
cmpsl
scas
aaa
adc
add
add
sarl
or
and
sbb
daa
testl
push
pop
cmp
sub
daa
out
jg
xor
lcall
insl
movsb
adc
fwait
cld
adc
aaa
mov
push
ljmp
jge
sbb
aas
imul
rcrl
cs
mov
out
sarl
pop
ret
sub
enter
xor
mov
dec
cmc
das
int
jno
or
lcall
ret
nop
inc
mov
shll
mov
and
xchg
jno
int3
mov
jno
popf
jb
scas
sub
out
xchg
mov
cmpsl
push
out
push
out
fsubrl
xchg
adc
mov
cmp
or
mov
adc
dec
inc
test
ljmp
pop
int3
jl
nop
cmp
inc
daa
cmp
cmp
ss
clc
pop
insl
pop
xlat
mov
imul
insl
daa
mov
add
je
sbb
jns
addl
cmp
push
push
jp
mov
xor
loopne
cmp
in
mov
and
cld
bnd
into
add
mov
por
and
fildl
fcoml
popf
adc
ficoms
pop
mov
sti
test
lea
jp
popl
adcl
jo
inc
pop
adc
pop
enter
mov
sub
iret
aam
push
pop
scas
xchg
popa
and
lret
in
and
stos
mov
insb
pop
xlat
sub
sbb
dec
and
mov
sbb
cmp
jbe
add
mov
pop
xchg
popa
xor
push
imul
int3
add
and
scas
mov
inc
xor
dec
ljmp
jecxz
mov
leave
jmp
leave
pusha
xchg
fisttpll
cmovs
mov
push
pusha
mov
push
pusha
add
fmul
arpl
jb
loopne
test
cmp
fsubrl
pop
xor
cmc
push
mov
test
pop
jg
cmp
outsl
lahf
adc
cltd
outsb
out
ja
dec
addr16
jb
adc
adc
insl
cmp
test
into
cmc
enter
adc
dec
jmp
stc
fstpt
sti
inc
pop
or
add
cld
sbb
push
call
push
or
mov
out
mov
ret
bnd
iret
push
test
jecxz
push
add
xchg
mov
sbb
icebp
cmp
imull
dec
and
out
fwait
fs
sbb
lods
mov
outsl
sbb
test
lcall
and
imul
clc
push
mov
ret
bound
sbb
call
cmpl
push
pop
fwait
test
adc
adc
scas
lds
push
imul
sbb
add
sti
xchg
xchg
out
movsb
push
xor
call
jnp
pop
and
cmp
bound
out
push
jg
sub
push
push
into
lods
arpl
outsl
dec
push
xchg
cmc
jecxz
add
in
sar
lds
mov
xchg
jb
dec
inc
add
mov
cmp
in
jge
movsl
and
cmp
inc
gs
scas
dec
lret
lods
inc
or
sbb
jb
int3
loop
cmp
mov
int3
push
jge
add
adc
adc
pop
iret
icebp
movsl
push
inc
mov
addl
into
mov
cs
testb
push
stc
lods
cmp
mov
stos
cmp
jo
lds
popa
daa
add
fsubr
push
push
lret
cmp
testb
jne
or
push
dec
fstps
andl
inc
cli
mov
fstp
lock
mov
mov
cmc
movsb
leave
add
mov
dec
outsb
mov
ficomps
sub
lret
cwtl
out
cmc
cmp
dec
adc
fidivl
sub
sti
push
or
es
xor
jnp
xchg
ds
lock
and
aaa
push
cmp
pop
sahf
adc
dec
in
aaa
int3
cwtl
mov
std
pushw
sbbb
insb
idivl
or
sub
repz
imul
lods
sbb
adc
push
push
pop
dec
bts
sbb
pop
aad
inc
jge
sbb
fwait
enter
fists
dec
jns
lods
imul
pop
xor
into
dec
cmp
push
std
mov
mov
jp
inc
jbe
fwait
pop
faddl
js
lret
jnp
jae
aad
lods
hlt
rcl
lds
iret
and
lret
mov
ja
sub
aad
dec
sbb
pop
frstor
mov
sub
mov
mov
rorl
ffreep
mov
add
jns
add
pushf
xchg
lds
loop
fildl
inc
test
push
stos
mov
mov
scas
mov
sub
pop
fstpt
or
cmp
mov
test
pop
jbe
or
jne
inc
sarb
pusha
movsb
scas
fcomps
lcall
stos
and
push
and
sti
and
jb
mov
jbe
or
xchg
out
and
mov
icebp
xor
call
jno
mov
stos
mov
xchg
and
push
jmp
clc
xchg
push
xchg
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
push
outsb
xchg
xchg
fimuls
pinsrw
rdmsr
cli
dec
push
inc
mov
inc
outsb
sahf
inc
shll
ss
imul
adc
adc
and
mov
jg
pop
addr16
aas
in
mov
insl
push
stos
push
pop
mov
inc
shlb
adc
jb
push
mov
cmp
cld
mov
inc
pop
outsb
ret
sahf
scas
jecxz
popf
xor
or
fsubl
inc
pop
mov
push
or
in
divb
cmp
mov
testb
stos
cmp
into
lahf
xor
shl
in
or
sub
lds
adc
inc
cltd
outsb
cli
aam
mov
jmp
mov
mov
xlat
fbstp
movsb
xchg
aaa
int3
and
int3
push
inc
pop
adc
and
fistps
xor
lea
or
iret
notl
popf
cli
shl
int3
stc
sbb
xchg
scas
lds
pop
and
scas
loop
xchg
jp
lea
mov
inc
inc
mov
pop
insl
into
xchg
dec
lock
or
aam
xor
sbb
pushf
popl
mov
add
data16
es
stos
pusha
sti
mov
in
sub
test
and
inc
add
inc
mov
mov
mov
cmpsl
jmp
or
into
jae
enter
shrl
adc
add
lods
cmpsb
pushf
add
mov
fsts
add
push
adcb
mov
xchg
and
add
mov
push
fmull
sub
pop
mov
cmp
xlat
jno
mov
jnp
inc
jecxz
repz
sbb
inc
or
aad
adc
out
dec
ret
pop
jo
repz
stos
xorl
lea
in
stos
out
push
aas
xor
push
test
and
pop
scas
dec
add
mov
inc
std
in
and
cmp
stc
lar
jns
jg
cmp
ljmp
and
faddp
mov
stos
and
fsubl
xor
pop
mov
xor
xor
ja
mov
imul
or
mov
std
xchg
fsubrl
mov
loopne
sti
mov
vpmacsdqh
pop
dec
loop
inc
sub
pusha
sub
mov
imul
add
adc
sbb
jecxz
dec
mov
push
adc
xor
jl
push
push
movsl
pop
or
in
cmp
cmpsb
fs
movsb
mov
fmuls
and
ljmp
inc
dec
jle
test
dec
loop
push
aas
in
daa
gs
lds
xchg
ret
or
push
daa
outsb
test
pop
push
subl
mov
mov
loopne
xor
adc
cmp
fucomip
loopne
xchg
test
inc
test
lods
shrb
cs
xchg
cmc
or
or
adc
test
cmp
adcb
mov
jp
sbbl
lock
pop
fistpll
mov
and
push
cmp
pushf
or
or
xchg
cmp
imul
cmc
decb
sbb
ljmp
mov
jmp
out
sub
and
and
movsl
push
and
mov
stos
inc
dec
lods
inc
daa
mov
jae
jg
es
sbbl
xchg
jbe
mov
sti
inc
jmp
sub
xchg
lea
mov
inc
push
and
mov
and
iret
mov
rcrl
stos
push
shlb
popa
mov
pusha
sahf
mov
mov
jg
daa
inc
lgs
sar
stos
sar
adc
mov
pop
ret
add
cwtl
ss
and
out
sbb
push
nop
push
in
loop
or
xchg
icebp
insl
cwtl
inc
inc
rcrl
jle
xor
cltd
int
add
popa
cmpsl
add
cmp
data16
rcl
xchg
jmp
aam
dec
and
jo
mov
stc
jns
sbb
pop
cvttps2pi
pop
xorl
pushf
jo
sbb
shl
cmp
xor
xor
cmp
insl
pop
ss
hlt
lods
sbb
pop
cmp
imul
or
stc
push
das
xchg
push
test
aas
divl
inc
push
aas
out
mov
sarl
fwait
xor
push
loopne
mov
jno
add
in
stos
in
inc
repz
ret
adc
rcrl
adc
and
les
movsb
jmp
push
mov
inc
cmc
and
dec
mov
cwtl
test
cmp
jge
cmc
adc
dec
and
pop
cmpsl
imul
jg
cmc
pop
mov
lahf
mov
lock
sub
sahf
aas
xchg
push
les
dec
ljmp
cmp
pushw
int
dec
rcl
push
pop
sti
rcrb
jp
and
mov
fcoms
mov
aad
sub
push
cwtl
pop
arpl
aaa
pop
loope
fcom
rcl
sbb
push
test
jmp
push
push
and
inc
jns
mov
add
andl
mov
addb
stc
or
push
pop
pusha
xchg
loopne
repnz
divb
mov
icebp
iret
jmp
test
pop
mov
rcrl
adc
fcoml
pushf
in
jl
nop
popa
aas
pop
pop
rol
or
ret
das
pop
cmp
and
mov
lods
pop
clc
dec
push
inc
mov
lahf
es
add
loopne
mov
xchg
jbe
and
xor
sbb
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
or
les
outsb
or
enter
cmc
adc
xchg
lds
das
iret
fwait
call
mov
clc
cmpsl
lods
or
jp
cmp
enter
dec
add
stc
add
enter
aaa
je
inc
push
ficomps
fxch
sub
cmpsb
notb
jno
ja
addr16
dec
addr16
add
inc
or
psrlw
mov
xor
cmp
push
out
aad
jp
adc
pop
iret
mov
dec
std
std
repz
jns
int3
mov
cmp
mov
gs
into
and
loop
out
sti
outsb
or
bound
popa
pop
xor
lods
arpl
int
shll
cmpsl
adc
mov
adc
stos
mov
add
sub
jg
dec
pop
pop
mov
mov
dec
stos
ficomps
imul
imul
rorl
sub
jnp
pop
adc
jecxz
sbb
dec
push
lret
popa
dec
xor
loop
push
sub
push
leave
lcall
sbb
repz
ss
dec
xchg
push
xchg
fidivl
mov
xchg
mov
stos
mov
adc
shll
cwtl
or
mov
sbbl
xor
ljmp
testb
mov
out
jp
mov
rolb
loope
mov
in
leave
xchg
cwtl
push
push
shll
xor
mov
sbb
add
push
lds
mov
scas
sub
mov
inc
xchg
out
xchg
fidivrl
dec
mov
daa
in
xor
out
sub
jno
lods
mov
xchg
int
inc
loope
jmp
jp
and
xchg
clc
xor
pop
data16
inc
loope
mov
and
fnclex
mov
mov
scas
cli
int
repnz
inc
sahf
ss
out
insl
pop
fs
frstor
xor
lret
mov
ror
imul
cld
rorl
sbb
inc
std
dec
imul
cmpsb
aaa
scas
ret
mov
test
cmp
ljmp
inc
jno
mov
outsl
sub
sarb
xor
shl
cs
das
pop
fidivrs
sbb
loope
imul
inc
je
js
mov
and
js
test
inc
cmp
or
in
cs
inc
push
and
adc
loope
ficomps
int
std
iret
xchg
fidivl
xor
push
stos
pop
shrl
mov
in
cmp
in
and
popf
sbb
dec
xchg
dec
jne
cmp
aas
pop
mov
inc
popa
and
addl
fiadds
jl
mov
mov
in
push
xor
inc
pop
out
dec
loop
add
xchg
mov
outsb
mov
pusha
mov
jg
aad
dec
ret
sbb
ljmp
loopne
idiv
daa
les
sub
fimull
xor
jb
sbb
mov
out
or
push
and
loop
int3
sbbl
xor
jmp
add
jae
sub
inc
cs
xchg
push
and
sbb
jge
and
cmc
lahf
scas
insb
pop
popf
pop
aam
ffreep
sbb
lods
adc
mov
aam
notb
jge
fmull
jmp
out
dec
test
xor
sahf
stos
jl
aaa
arpl
out
lcall
test
idiv
ror
pop
xor
inc
pop
enter
es
cmpsl
fcoms
fwait
subb
shlb
ret
cmpsb
enter
or
sub
mov
pop
push
push
movsl
imull
testl
test
pop
callw
mov
in
mov
jmp
js
sti
pop
dec
jp
pop
stos
mov
fcompl
mov
test
cld
popa
in
fistpll
inc
and
stos
repz
sub
filds
fdivs
adc
fsubrs
pop
sub
mov
cmp
inc
sbb
xchg
in
pop
outsl
imul
mov
mov
sbb
push
xchg
add
test
dec
scas
lret
out
pop
dec
les
dec
or
aas
iret
adc
push
icebp
aad
cmp
dec
mov
sbb
inc
push
sbb
shl
lds
test
mov
sbbb
and
test
lods
out
dec
cmp
sbb
cmp
cmp
test
pop
xchg
cmp
jo
adc
ja
sbb
pop
and
pop
out
push
add
inc
nop
jo
mov
xchg
and
andnps
mov
sbb
in
lods
or
adc
jae
jge
les
cmpsl
fildl
imulb
in
fld
sbb
jmp
inc
shrl
sti
xchg
cltd
cld
loop
push
adc
adc
leave
xchg
pop
popf
jle
adc
sarb
sarb
test
shlb
pop
shl
adc
in
into
sub
mov
cmpsb
sbb
sbb
xchg
inc
fidivl
jp
sti
int
adc
lock
xchg
xor
lcall
mov
inc
pop
lahf
sub
sub
xchg
cld
xor
out
fwait
in
test
pop
jne
adc
call
or
insl
sbb
popf
pusha
daa
pop
scas
dec
mov
jnp
push
fadd
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
outsb
xchg
in
rorb
pinsrw
cmovge
inc
sti
sbb
mov
sub
movsl
add
xchg
ret
jo
stos
xor
test
testb
sbb
mov
cs
xchg
sub
mov
and
sbb
hlt
adc
sub
xor
jle
dec
jne
xorb
enter
jmp
das
js
lock
and
sub
notb
mov
frstor
int
cli
rorl
mov
jmp
dec
ja
loopne
fucomp
xchg
mov
rorb
lcall
push
jge
add
ret
adc
es
cs
sti
arpl
sbb
flds
aad
jp
mov
xchg
xchg
cmp
cmp
sub
popa
loopne
sub
jecxz
mov
xchg
fisubs
mov
test
or
add
add
mov
sbb
lcall
xorb
xor
cmp
jns
gs
cmc
jae
mov
push
inc
lcall
lcall
push
xchg
xchg
flds
xor
fdivrs
add
add
cmc
fs
pop
stos
pushf
jecxz
mov
push
imul
push
mov
add
gs
sbb
loopne
imul
add
into
jle
jae
lock
jnp
fistps
push
cli
jp
jecxz
pop
bsr
cmp
hlt
jne
das
imul
scas
inc
sbb
xlat
xchg
jmp
js
mov
pop
adc
stos
ss
insl
inc
mov
pop
push
ds
sbb
xchg
sbbl
sar
movsb
imul
lock
fsubrl
push
stc
popf
mov
jl
mov
pushf
out
adc
stos
sub
jns
negb
imul
movl
mov
xor
mov
push
dec
dec
mov
aaa
popf
push
cwtl
mov
test
mov
stos
dec
stos
insb
jmp
xlat
dec
notb
aas
repnz
popa
jno
test
les
push
adc
add
addr16
mov
mov
int
mov
adc
ljmp
dec
xchg
mov
xchg
pushf
shlb
fwait
push
divl
daa
stos
cld
push
or
pop
leave
mov
inc
loopne
dec
pop
push
cmp
cmp
imul
outsb
lock
int3
out
ficomps
aaa
pushf
subl
mov
mov
jne
push
sub
jns
jl
mov
into
fisttps
loop
sub
pop
int3
dec
cltd
mov
mov
test
lret
xchg
or
popf
mov
pop
xor
push
inc
xchg
jl
shlb
adc
sub
cmp
dec
aaa
and
icebp
xchg
dec
mov
push
push
sub
jle
mov
inc
dec
fsubs
rcll
sbb
adc
arpl
pop
cltd
add
and
jg
pusha
insl
stc
mov
inc
sub
push
loope
lret
insb
cmp
and
cmp
push
jbe
fdivrs
sub
mov
outsl
xchg
xchg
imul
imul
mov
les
test
mov
xchg
fcoms
xchg
sub
insl
ret
and
jmp
shr
aas
push
stc
sbb
das
fmull
outsl
cmp
xchg
fmuls
mov
in
ret
mov
adc
hlt
shr
mov
sub
and
cmp
pusha
jmp
and
jnp
cmp
sbb
jg
inc
test
mov
inc
imul
popa
sbb
divl
jae
push
or
xor
std
xchg
push
incb
in
jnp
xor
mov
fdivr
jle
je
insl
xchg
or
cmp
call
pusha
pop
lcall
cmp
pop
mov
mov
lods
sub
dec
push
clc
rorb
scas
xor
jge
mov
mov
hlt
adc
xchg
add
xlat
ja
dec
push
cmpb
insl
fwait
rcrb
cltd
ret
mov
dec
stc
xor
pop
push
push
cs
sub
mov
jecxz
xor
aas
cmp
outsb
jae
jno
sbb
cmpsl
aaa
mov
mov
hlt
loope
mov
es
xor
iret
sbb
add
and
adc
lds
pop
jnp
sub
sub
std
cmc
inc
in
cmp
adc
fnstcw
pop
add
push
mov
push
push
jne
push
clc
loope
xchg
test
jne
sub
insb
xchg
daa
out
mov
cmc
mov
stos
pop
loope
sbb
mov
and
xchg
push
pusha
and
insl
dec
mov
enter
adc
xchg
mov
push
test
shll
push
shr
mulb
hlt
jecxz
mov
jge
ja
pop
sub
pop
add
shl
pop
loop
adc
xchg
rcll
sub
adc
pop
or
jge
sub
cmpsl
fsubrl
jb
push
fnstenv
pop
xor
stos
sub
jns
bound
cmp
addb
das
in
add
mov
inc
ljmp
pop
mov
xor
dec
dec
jns
mov
ja
cmp
mov
xlat
dec
jecxz
arpl
mov
lcall
add
mov
out
mov
pop
call
out
cwtl
outsb
inc
mov
repnz
cs
sub
adc
xor
fstps
sahf
cmpb
ret
test
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
fcoml
js
les
pinsrw
movd
inc
popl
ret
mov
add
lea
xchg
rcr
inc
mov
call
jne
mov
push
xchg
mov
sbb
fcmovne
push
out
mov
jl
mov
lret
push
pushf
inc
lcall
fnstenv
xchg
pop
pxor
mov
jmp
shrl
rorb
fwait
aad
push
xchg
stc
inc
sbb
inc
aaa
jbe
sbb
enter
or
lods
adc
les
xchg
cmpsl
cld
xor
push
shrb
and
dec
xor
inc
test
ljmp
xor
inc
into
movsl
dec
ljmp
cmp
out
push
movsb
stc
pop
sahf
mov
adc
jmp
dec
push
fisubrs
cmp
test
lds
fwait
inc
icebp
push
xchg
pushf
jp
cmpsb
sarl
add
inc
loopne
sub
scas
and
mov
imul
cmp
add
rcrl
rorl
loop
xchg
cmpl
sub
insb
stc
das
dec
mov
sbb
into
add
xchg
dec
insl
inc
add
pop
jle
sets
negb
sub
add
pop
aas
jbe
mov
jge
call
inc
rcll
jo
arpl
push
jmp
mov
jo
fiaddl
xchg
mov
fnsave
jg
add
mov
add
repnz
lret
or
filds
arpl
jo
xchg
ret
scas
mov
fidivrs
clc
loope
jns
popa
cmpsb
aas
sbb
test
into
inc
out
cmp
lcall
sbb
mov
fisubrs
lret
cmc
mov
mov
or
ljmp
sub
inc
lock
xchg
push
inc
popa
sub
call
hlt
rorl
aad
imul
ret
mov
pusha
inc
dec
pop
pop
xor
dec
xor
test
movsb
inc
jns
out
fincstp
sub
in
add
les
test
mov
jmp
push
pushf
and
sbb
lcall
ret
mov
and
sub
outsb
mov
and
push
bound
std
pusha
mov
jmp
mov
mov
sbbb
lret
mov
sahf
jecxz
jnp
leave
push
sbb
scas
test
or
add
xchg
imul
pop
std
xor
insl
fwait
cltd
mov
shlb
sarb
pop
or
xor
pop
scas
popa
fstpl
std
inc
lock
fs
add
add
movsl
mov
das
fdivs
cmp
cmp
push
cmp
jg
cmc
mov
sarl
cltd
mov
ja
mov
xor
out
lds
add
stc
adc
loope
sti
insl
ret
int
fistpll
sbb
adc
test
mov
std
push
pop
pop
mov
cmp
inc
xlat
jbe
adc
insl
ud2
out
adc
cmpsl
test
out
je
and
cwtl
ja
mov
xor
jo
test
pop
ss
jl
sbb
mov
aam
pop
jecxz
sbb
jne
stc
aam
jno
dec
pop
fisubrs
test
inc
popf
and
popf
adc
lea
lahf
outsb
cwtl
lods
xor
ret
movsl
add
lds
pop
loopne
fsubrs
xor
xchg
xor
aad
into
jb
pop
jns
loope
int
xchg
mov
loopne
and
jo
and
icebp
push
mov
xor
xor
inc
inc
neg
xchg
lcall
sub
xchg
inc
mov
sahf
setns
fsubs
fldt
lret
or
push
inc
pop
adc
mov
jns
scas
mov
fsubr
add
mov
in
cwtl
andl
dec
inc
sub
sbb
push
cmp
push
dec
jns
pop
movsb
adc
mov
loope
mov
arpl
insl
lcall
mov
imul
inc
loope
fs
lods
divb
xchg
rcll
cmp
mov
or
stos
loop
test
jo
mov
sbb
outsl
adc
push
mov
sbb
stos
int3
arpl
je
sbb
jo
scas
shl
sbb
mov
shrb
test
fsts
adc
shll
push
or
test
es
lret
sub
sub
or
add
mov
repnz
mov
out
cmp
orl
les
ja,pt
jl
sub
push
mov
ja
or
jg
imul
movsl
test
lahf
mov
out
int
cltd
add
cmp
xor
mov
subb
jge
sub
jg
xor
xchg
adc
call
fnsave
or
pop
inc
add
sbb
fwait
daa
rclb
mov
cmovne
push
push
fisttps
pusha
jg
fwait
loopne
pop
pop
cmp
mov
mov
int3
aaa
mov
int
lods
outsb
inc
dec
sbb
outsl
test
int3
ret
insl
movsl
lods
ss
mov
push
cmp
movsl
xor
and
pop
xchg
ss
iret
scas
push
lock
cmp
shl
daa
and
or
inc
rclb
sub
add
pushl
sbb
popa
data16
int3
pop
imul
sub
arpl
mul
sbb
jle
cmc
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
push
stc
inc
data16
pinsrw
psadbw
imul
dec
mov
sub
xchg
mov
enter
cld
jno
mov
in
pop
scas
push
xchg
repnz
jo
xchg
dec
repnz
sub
scas
push
cs
rcll
ljmp
jnp
fsubrs
xchg
pop
out
lcall
in
pop
pop
jae
cmpb
sub
imul
or
ret
lea
ss
add
xor
call
push
imul
dec
callw
out
sarb
pop
push
out
jnp
jg
mov
push
popa
push
sahf
push
adc
sarl
js
fidivrl
cmpsb
pusha
mov
push
cmp
mov
lahf
ret
inc
fbstp
mov
pop
es
push
in
xor
daa
inc
fwait
adc
pop
fwait
adc
jg
or
stos
repnz
outsl
or
setae
jge
adc
pop
jns
fisubl
jbe
dec
sbb
stos
push
dec
mov
fsubl
add
xor
mov
mov
mov
sbb
nop
cmpsb
ja
add
mov
or
cmpsl
loop
in
rcr
in
icebp
jmp
pop
and
cmpsb
sub
pop
rcrb
pop
cli
lods
in
jo
cmpsl
addr16
in
ret
mov
mov
stos
cmp
xchg
xor
lods
mov
fildl
lret
and
popf
mov
jbe
int3
sti
pop
add
loopne
xor
cmpb
push
or
xchg
rorb
nop
xor
sbb
push
outsl
jbe
ss
cmpl
add
sub
push
sub
out
fisttpll
and
push
push
nop
mov
in
in
push
sub
lret
sub
arpl
fiaddl
out
xor
loop
mov
mov
test
jne
pop
xchg
or
bound
imul
add
jo
outsl
push
icebp
jne
loope
call
in
jle
imul
mov
push
sub
mov
in
mov
mov
mov
push
cmp
adc
or
out
cmp
inc
and
mov
xlat
andb
mov
popa
jge
repz
int3
push
ret
xchg
pop
int3
pop
xor
rcr
popf
shl
adc
and
mov
les
repnz
loop
push
pop
mov
inc
ljmp
sbb
xchg
pop
cmp
dec
pop
ljmp
stos
scas
loope
and
sbb
ja
bound
fidivl
cwtl
adc
cmp
fdivl
adc
fidivrs
dec
inc
fbld
or
imul
mov
cld
call
jae
out
sti
xchg
test
sbb
movb
dec
ret
cmp
sti
dec
popf
loop
jmp
mov
mov
cltd
xor
fldl
leave
loope,pt
and
cmpsl
fbstp
inc
lret
aas
notl
sbb
sub
pop
cmp
and
jno
mov
loope
xchg
call
xlat
fs
dec
or
rcl
into
es
loopne
lahf
test
stos
jae
arpl
hlt
adc
pop
push
xchg
jl
sbb
sbb
loopne
js
arpl
adc
sub
and
addr16
or
popa
test
ror
cmp
pop
xlat
push
fimuls
gs
or
daa
and
dec
int3
in
in
mov
pop
div
and
in
or
xor
pop
sbb
dec
out
addb
das
push
push
das
into
fmuls
fiaddl
cmp
lock
inc
out
ffreep
mov
fs
pop
xor
or
xor
adc
addr16
cwtl
std
js
mov
mov
pop
and
cltd
sub
fldcw
dec
pop
orb
imull
lret
add
jg
int3
daa
add
jp
mov
mov
or
cmpsl
jb
cmp
mov
cld
ret
cmp
repz
xchg
scas
fldl
cmpsb
lods
movups
inc
hlt
sbb
fildl
cwtl
sbb
test
jge
fistpll
popa
bound
dec
es
ds
push
dec
scas
cltd
out
mov
or
lods
jmp
and
loop
rep
pop
mov
ret
mov
aad
loop
xchg
jmp
into
jg
xchg
out
fstp
xor
adc
fnstcw
aad
xor
ret
push
lahf
cmp
stos
andb
xchg
dec
cmpsb
xlat
imul
sbb
mov
inc
subl
sbb
mov
enter
rcrb
mov
push
mov
enter
mov
cmc
jl
in
xchg
stc
jp
push
jg
cmc
mov
xchg
pop
mov
and
pop
adc
jnp
mov
jae
inc
dec
loopne
sbb
push
jae
add
mov
sbb
cmpsb
mov
insl
cmpl
addr16
mov
pop
inc
shll
out
negb
xchg
fimuls
add
aam
cmp
push
jmp
lret
mov
cltd
shlb
xchg
aaa
sbb
fs
push
scas
sbb
mov
push
push
mov
jns
mov
outsb
inc
mov
adc
adc
or
sbb
mov
lcall
mov
out
fs
cmpl
js
add
jl
sbb
mov
jo
fs
pop
rcll
mov
sbbl
movsl
ljmp
jb
outsl
jne
cld
dec
xor
aaa
fisttpl
int
push
sub
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
fadds
pinsrw
xorps
ds
dec
pop
test
sbb
xor
mov
pop
shlb
sbbb
nop
or
mov
pop
jbe
lea
pop
daa
xchg
out
jbe
insb
bound
les
adc
xor
sbb
gs
xor
push
push
dec
and
inc
jle
jnp
pop
xor
shlb
lret
pop
or
ja
test
mov
mov
mov
aam
loopne
or
daa
mov
scas
int3
icebp
mov
nop
jle
lds
pop
sbb
iret
pushf
pop
test
mov
imulb
sbb
mov
les
mov
lahf
stos
outsl
push
subl
cld
jb
mov
mov
push
cmp
cmp
pop
pop
mov
mov
sti
sub
subb
adc
push
imul
jb
imul
imul
in
fistpl
pop
stos
sbb
cmp
mov
aad
daa
pop
shrb
sbb
jno
stos
leave
out
daa
daa
test
mov
dec
outsb
mov
dec
lods
ss
sbb
cli
mov
jecxz
addb
bnd
outsb
and
leave
push
sbb
push
ljmp
fdivrl
adc
pop
xchg
jmp
stos
sub
or
cmpsl
aaa
pop
jne
sbb
imul
jne
daa
in
sbbl
pop
sub
pop
xlat
test
scas
and
mov
orb
std
add
cmp
adc
xlat
xor
ret
into
outsl
dec
push
lcall
sub
mov
movsb
jg
pop
mov
js
cmpsl
adc
xchg
jae
xor
icebp
out
jmp
flds
or
das
enter
popf
fidivl
pop
push
pop
sbb
mov
push
cmp
xchg
push
icebp
out
pop
les
pop
cmp
pop
xchg
or
lret
loope
pop
mov
sbb
add
xchg
or
dec
rcrl
popa
out
jae
pusha
fistl
lods
inc
push
xchg
cmp
cmpl
mov
sub
dec
mov
sub
mov
mov
adc
imul
xlat
rcl
stc
outsb
jae
cwtl
jnp
cmovp
pop
scas
cmp
fiadds
shll
sub
adc
jb
xor
faddl
enter
mov
hlt
inc
xor
mov
addr16
sbb
adc
sub
and
std
push
ror
enter
es
jmp
xor
fcompl
cmc
mov
movsb
std
mov
test
add
data16
adc
mov
xchg
pop
lret
mov
xchg
lahf
popa
mov
jge
push
sub
push
shr
sub
movsl
sub
popa
out
push
push
adc
push
pop
or
mov
jp
pushf
mov
in
jno
and
jbe
out
push
sbb
or
notl
cmpsb
xchg
xchg
inc
divl
lcall
xchg
sbb
rorb
sub
or
scas
mov
xlat
or
add
js
push
dec
rcl
dec
std
mov
idivb
mov
or
adc
js
pop
cwtl
or
movsl
pop
das
insl
hlt
xchg
pop
and
pop
shrb
sub
clc
aad
mov
out
rcrl
sbb
movsl
mov
push
loope
adc
aam
jae
adc
adc
test
divb
lcall
adc
mov
dec
popa
icebp
or
xchg
xorl
fcom
js
lods
loope
pop
scas
mov
mov
lahf
push
add
dec
xchg
rolb
es
fsubr
jmp
xchg
faddl
scas
mov
push
jnp
and
pop
outsl
mov
sub
push
popa
popa
lods
xlat
in
dec
xor
mov
cmp
ljmp
ss
jb
pop
adc
addr16
cmpsl
push
sub
xor
je
mov
in
inc
aaa
fistpl
jg
push
push
movsb
into
jnp
mov
cmp
int3
test
pop
movsl
and
int3
sbb
in
mov
push
leave
repnz
sbb
mov
and
enter
shll
xor
xor
cmp
rcl
mov
xor
mov
ror
negb
clc
negb
aad
and
sub
add
cmpsb
sub
aad
push
or
adc
jle
in
into
loope
cmpsb
xchg
stos
and
jno
insb
aaa
loope
sub
pop
push
add
pop
xor
dec
dec
add
xlat
sbb
test
sbb
xor
mov
jmp
into
adcb
cmp
mov
daa
dec
icebp
scas
inc
xor
lods
xchg
inc
and
pop
popa
and
popa
out
xor
outsb
pop
mov
sub
mov
ds
test
pop
leave
hlt
cltd
or
and
aaa
or
ficoms
lods
inc
paddd
fistps
pushf
mov
jnp
lea
or
mov
fimuls
push
cs
mov
sub
mov
out
ja
jmp
incb
outsl
inc
mov
mov
dec
cs
dec
or
mov
mov
mov
imul
jl
add
push
add
adc
popa
fsubr
dec
lret
mov
fdivrs
inc
sarb
xchg
repz
push
nop
in
ds
inc
xor
int
cmp
pop
ljmp
leave
add
das
xchg
aaa
inc
jp
int
ucomiss
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
sbb
mov
pushf
sbb
push
sbb
std
jo
mov
dec
pop
cmp
mov
fs
push
jns
pushf
sub
mov
out
int
stos
stos
cmp
popl
lock
sbb
sahf
in
xor
mov
fildll
lret
das
sub
pop
sub
loopne
fadds
lods
sub
push
dec
mov
scas
mov
or
xchg
int
mov
add
clc
sub
rclb
add
sub
ficoms
pop
jge
xor
sbb
jge
dec
sahf
or
cmp
dec
rolb
sti
outsb
pushf
jns
in
cwtl
inc
sarl
sbb
mov
or
ss
xchg
sbb
in
call
push
push
stc
push
scas
aas
rorl
bnd
dec
push
repz
add
adcb
or
jge
sti
mov
flds
jae
insl
cmp
sti
adc
test
dec
and
scas
push
mov
push
out
push
bound
test
push
xchg
cmpsl
xchg
add
sti
dec
mov
push
push
sbb
sti
dec
jge
jmp
idivl
aad
jle
or
pop
ret
jl
inc
incl
add
std
out
test
or
je
sbb
add
popa
mov
cltd
xchg
jbe
and
arpl
and
push
jbe
cmp
enter
addr16
inc
sub
push
sbb
cwtl
add
jo
inc
je
mov
out
mov
ret
rcrl
xor
xchg
shrb
js
xlat
je
sub
lods
pop
push
mov
test
sbb
test
mov
lods
mov
cmp
jge
cmp
dec
arpl
xchg
stos
jl
push
pusha
sti
push
jp
jg
pop
int
lea
pop
and
into
jne
pop
mov
lahf
out
mov
cwtl
js
loop
adc
and
shlb
push
fwait
imul
in
jmp
dec
in
das
push
sbb
test
ret
jb
pop
xchg
jmp
leave
mov
jnp
push
sbb
mov
mov
test
aad
out
jae
jg
mov
jp
pop
icebp
mov
adc
adc
pop
leave
frstor
jo
das
ret
sbb
loopne
rclb
popa
mov
add
test
fstps
imul
movsb
stos
subb
sub
cmp
ret
lds
xchg
jp
dec
mov
push
sub
sub
iret
lahf
sbb
pop
add
sub
dec
or
outsl
sbb
xchg
xchg
push
cmp
iret
lds
push
outsb
or
jbe
fistl
cli
cltd
inc
mov
cmp
fbld
inc
mov
ja
xor
imul
mov
lods
and
push
pop
mov
or
andb
loope
sub
cmp
and
mov
mov
cmp
jae
ret
sbb
aas
push
or
fadds
xchg
je
jae
loopne
push
push
xor
imul
add
jno
pusha
jbe
sbb
mov
cmc
adc
sub
out
xchg
dec
rolb
aas
in
or
icebp
nop
sub
sub
dec
push
lds
jno
pop
mov
mov
push
ds
jmp
and
xor
add
push
sub
rcr
xorb
sbb
test
in
push
jl
mov
clc
rcrb
push
arpl
cs
pop
xchg
iret
in
jp
pushf
pop
mov
in
stc
call
movsl
jl
stc
and
cmp
push
test
fadds
lods
insb
aaa
jno
out
bound
pop
fimull
fcompl
data16
neg
push
int
rol
std
loop
sbb
inc
outsb
or
push
mov
mov
in
cli
cwtl
jno
dec
sbb
ficoms
ja
fcmove
jb
lcall
in
cwtl
js
dec
pop
dec
cmp
dec
and
clc
ss
leave
cmpsb
insl
add
mov
mov
je
cli
mov
scas
xchg
jo
cli
sub
stos
xor
or
popa
sub
scas
cld
jnp
and
jo
jg
daa
pop
jnp
mov
mov
pusha
pushf
outsl
xchg
or
aaa
push
mov
sbb
xchg
popf
and
xchg
insl
clc
int3
xchg
and
lds
or
add
mov
adc
int3
scas
pop
loopne
adc
add
scas
inc
out
ret
test
dec
push
push
lahf
or
and
stc
cmpsb
and
xchg
xchg
mov
xchg
sahf
add
mov
pushf
int3
mov
mov
adc
popa
aaa
ss
and
mov
push
fmuls
adc
aad
subl
repz
mov
shl
mov
jl
movsb
push
mov
mov
jno
xor
jae
mov
sub
sbb
mov
add
dec
call
or
jmp
js
lret
in
mov
add
negb
push
enter
lock
mov
mov
mov
roll
repnz
add
ret
xchg
out
add
out
push
outsl
cmp
cmp
mov
pop
mov
xchg
xchg
mov
add
pop
outsb
xor
bound
add
jne
cmp
jecxz
mov
pop
icebp
fcom
loopne
repz
pop
loope
push
std
push
ret
repz
dec
mov
in
dec
xchg
inc
out
faddl
push
stc
jbe
loop
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
jb
mov
add
movd
sbb
lret
gs
and
jmp
xchg
sbb
ds
xchg
ja
push
test
jge
add
sarb
aaa
fcomi
xchg
and
repnz
push
xchg
jo
jae
push
add
jg
pop
addb
mov
and
mov
or
mov
jle
push
lods
movsl
das
push
sbb
out
jns
inc
jl
pop
mov
js
and
push
cli
mov
les
cwtl
int
cmp
sub
outsl
cmp
scas
jnp
loopne
aad
pusha
mov
mov
jl
aam
outsb
pop
in
inc
les
into
cmp
push
and
cmc
mov
xchg
and
aad
xchg
arpl
lea
popf
and
xor
xchg
addl
nop
jmp
inc
fcoms
popf
bound
rorb
out
push
andb
into
or
jmp
ljmp
xchg
or
pushf
repnz
mov
jmp
sub
jl
call
pusha
adc
clc
addps
push
sbb
popf
outsb
inc
sbb
mov
push
pushf
pop
das
sar
arpl
dec
jns
cwtl
jne
add
xchg
cltd
test
dec
pop
push
dec
mov
inc
mov
add
mov
sti
movsl
cmp
shr
push
ficompl
stc
push
loope
stos
add
outsb
roll
int3
pop
das
and
fdivl
jmp
add
adcl
or
mov
dec
fdivrp
arpl
bound
dec
ss
sub
test
xor
repnz
andl
sbb
outsb
and
jo
iret
mull
addr16
lret
pop
pusha
insb
movsb
in
inc
fs
cmp
dec
sbb
push
dec
fnstsw
mov
insb
mov
jmp
popa
mov
rdtsc
and
loopne
femms
cmc
insb
test
or
xorl
in
fadds
cs
std
xchg
sbb
pop
sub
inc
loop
daa
mov
clc
mov
icebp
mov
pop
das
les
mov
inc
xchg
cltd
shlb
sub
scas
imul
xor
xorl
lods
loope
pop
xor
insb
sbb
pop
movsb
leave
mov
jnp
or
cld
ljmp
xchg
popa
in
inc
mov
mov
dec
pop
rcr
mov
sbb
ret
inc
sub
in
add
aas
dec
repz
push
mov
pop
jae
outsl
add
push
adcb
inc
pop
shll
into
sub
mov
flds
xchg
mov
dec
cs
xor
add
lds
stos
and
int3
mov
push
mov
movsl
icebp
push
push
inc
sub
decb
mov
mov
out
mov
jbe
in
rcrb
mov
mov
movsb
out
mov
insb
cltd
stc
dec
cld
movsl
pop
xchg
dec
scas
stos
mov
lods
and
push
cld
xchg
in
pop
out
leave
mov
inc
loop
fadds
dec
stos
mov
sarb
out
sub
push
lahf
out
jp
scas
pop
into
sbb
and
or
xchg
dec
pop
add
aam
xchg
dec
mov
push
rol
pop
jo
mov
lea
pushf
cmpsl
xchg
movsb
in
jbe
xor
testb
ret
insl
cmpsb
lret
add
mov
push
pop
sbbb
mull
bound
jnp
push
pop
pop
pop
sbb
test
mov
push
jnp
movsl
out
jb
sub
xor
test
outsl
testl
je
mov
hlt
cs
xor
pushf
add
inc
lret
movsb
or
and
mov
sub
pop
xchg
sub
jle
fcoms
sbb
pop
adc
pushf
dec
pushf
jns
cld
xor
arpl
cmp
add
xchg
test
add
inc
sub
cmp
sub
jl
int3
fcoms
mov
xor
imul
mov
fisttpl
in
loop
fisttps
in
addr16
out
add
inc
adc
inc
cli
rolb
xchg
inc
pop
mov
shrl
sar
es
push
push
rorl
mov
and
adcl
adc
adc
dec
rorb
pop
ror
pop
inc
jle
dec
adc
cmp
arpl
int3
inc
xorl
or
lds
xchg
push
mov
cmpb
hlt
sub
insl
pop
mov
popf
or
dec
fnstenv
pop
pop
mov
jl
mov
jnp
repnz
js
add
pop
jge
lods
xchg
adc
xor
rorb
bound
mov
jp
in
xadd
jae
xchg
xlat
repnz
pop
fisttpll
or
cmp
jp
jne
fmull
pop
arpl
insl
test
into
inc
nop
popf
mov
add
sbb
faddl
jno
aad
push
or
rolb
repz
push
xchg
mov
push
cli
fsubl
in
cmp
rcl
pop
pop
fmul
lds
or
jne
lret
adc
rclb
in
sbb
push
push
add
dec
jo
jns
ljmp
dec
adc
je
daa
insl
sub
add
sbb
and
push
push
pop
dec
inc
jns
insb
out
lds
and
pop
mov
jns
lret
mov
push
pop
sub
xor
divb
hlt
mov
or
xchg
jae
int
lods
aam
out
pop
pop
adc
ret
mov
xchg
push
je
inc
fidivrs
pusha
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
push
push
pop
xchg
xor
add
and
gs
mov
stc
pop
sub
adc
xchg
lods
mov
subl
mov
mov
inc
scas
jo
jmp
loop
out
or
jmp
mov
push
xor
xchg
mov
or
fistpll
iret
sti
push
popa
idivb
popa
push
mov
sahf
mov
inc
xchg
xor
popf
mov
addl
or
mov
jmp
jae
and
pop
push
push
push
jo
pop
pop
and
push
sbb
inc
shll
les
add
push
fwait
and
push
out
add
pop
xchg
in
and
popf
jnp
mov
xor
ss
mov
adc
call
sub
or
enter
add
inc
push
adc
cmc
outsb
sbb
xor
jg
pop
dec
xor
loope
lock
icebp
sub
ret
lcall
call
and
fsubl
outsl
dec
aaa
pop
and
sbb
not
in
pop
fnstsw
insl
xchg
push
loop
adc
adc
arpl
stos
movb
mov
xchg
cmp
lahf
scas
fwait
repz
add
push
in
loopne
inc
xor
mov
pop
ret
dec
xor
mov
rolb
pop
mov
jmp
lcall
popf
jo
daa
push
call
mov
inc
cli
inc
sbb
shlb
sub
ret
xchg
push
out
lcall
fdivrl
mov
hlt
xchg
bound
fcomps
mov
in
cmp
icebp
xorl
push
cmp
mov
jno
scas
xchg
push
leave
jp
data16
ret
add
mov
mov
pushf
jb
mov
or
xor
iret
shr
lcall
push
call
cmpsb
push
xlat
mov
pop
or
ret
xchg
xor
icebp
sti
jg
jmp
push
sub
jmp
ds
jg
xor
dec
jns
dec
test
pushf
stos
scas
adc
push
mov
and
jmp
mov
mov
adc
ja
out
xchg
lret
mov
pop
inc
and
sbb
inc
lock
push
inc
cmpsb
mov
hlt
rol
cmpb
inc
sbb
mov
inc
shll
or
popf
mulb
sub
les
clc
jb
in
cli
test
js
pop
add
adc
jne
push
dec
aad
movsb
addl
sbb
movb
sbb
mov
arpl
jle
shlb
push
call
jl
mov
and
mov
in
and
pop
stos
mov
adc
ss
fsts
out
insl
rcr
int3
sbb
lods
in
stos
mov
or
pop
sbb
cmp
imul
test
imul
cmp
mov
imul
arpl
pop
xchg
inc
push
repnz
fucom
jne
cmpl
cmpsb
or
mov
push
mov
sbb
inc
sub
std
jb
test
std
add
mov
out
lahf
lret
mov
ret
test
nopl
rcrl
inc
mov
mov
int3
adc
cwtl
xchg
jp
xor
insl
cmpsl
je
sub
jo
ret
sahf
push
pusha
mov
sahf
in
push
mov
sub
mov
and
dec
mov
cmpsl
pop
cmp
pop
cmpsb
jmp
add
stc
mov
jle
sbb
cmp
sub
cs
add
testl
inc
daa
imul
mov
stc
outsl
dec
adc
call
cwtl
popa
xchg
pop
in
dec
loopne
mov
insb
pop
mov
loope
loopne
xor
cli
int
enter
daa
outsl
out
in
aaa
je
sub
push
sub
into
std
inc
movsl
cmpsb
xor
add
or
loopne
jp
mov
lea
sti
ret
jmp
cmpsl
jns
and
pushf
cmpsl
in
pop
out
mov
mov
xor
popa
mov
sub
jo
pop
and
inc
jae
mov
lods
xor
rol
jp
loopne
popf
rcrb
testb
shl
lds
and
loopne
lcall
shr
outsl
aas
aaa
in
jne
out
xchg
in
repnz
cmp
sub
xchg
sahf
hlt
mov
sbb
shrl
add
sbb
mov
mov
sti
mov
or
or
cmp
fcmovnbe
pop
mov
sub
in
daa
ret
call
mov
repz
jbe
les
in
add
mov
mov
dec
sti
xor
mov
add
push
loop
add
ret
std
jl
lret
mov
sti
ret
pop
outsb
pop
movsl
mov
jb
sarb
jbe
es
lods
mov
fnstenv
aas
in
incb
sahf
add
jae
push
push
test
adc
jo
es
popa
jbe
xor
repz
sahf
orl
imul
loope
scas
mov
sahf
xor
pusha
dec
loope
decb
mov
sub
mov
in
push
xor
loopne
scas
test
fwait
lock
idiv
add
sub
lret
call
loope
mov
in
bound
mov
cmpsl
negl
push
sahf
bound
ret
sub
pop
into
or
mov
pop
into
jb
fldl
pop
test
add
shll
notl
addl
or
fcoms
jg
insb
sub
or
push
push
lahf
lods
daa
sbb
rcll
sbb
and
cmp
test
popa
subb
and
cmp
dec
loopne
popf
mov
mov
sub
dec
sub
or
or
shll
sub
clc
inc
pop
jmp
push
xchg
in
sub
push
out
add
dec
adc
jae
imul
movsb
into
jae
testl
pop
sti
cltd
sbb
fs
cmp
popa
pop
icebp
icebp
cmp
cmp
push
inc
aaa
cmc
fadds
in
dec
mov
inc
xchg
fsubrl
mov
dec
and
or
pop
cmp
lret
pop
pop
jle
aaa
push
ret
adc
je
popf
cwtl
ja
fidivl
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
inc
and
repz
cpuid
or
daa
or
xchg
mov
mov
pop
gs
shr
pop
insl
inc
mov
insb
mov
xchg
jne
sub
sub
xchg
aaa
push
inc
repnz
ja
cmp
xchg
imulb
mov
mov
mov
gs
outsl
xor
scas
mov
mov
mov
mov
cmp
add
jg
movsb
and
pushf
das
lret
dec
sub
jns
jmp
fidivrl
adc
call
fwait
out
jae
adc
adc
pop
scas
mov
loop
or
lret
lods
mov
and
mov
pop
lds
scas
dec
rcrl
adc
xlat
outsb
fiadds
test
xchg
adc
ss
lret
adc
pusha
push
xchg
or
bound
in
das
sbbb
movsb
inc
or
pop
jmp
xchg
mov
aad
cmp
jmp
std
sub
orps
add
inc
pop
jle
lret
ja
jge
insb
dec
add
cld
lock
cmpsb
ret
mov
imul
push
lcall
loop
add
insb
sub
imul
xchg
addr16
lret
or
add
jp
fwait
dec
shl
imul
loop
int3
mov
mov
testl
dec
push
notb
lcall
pop
clc
in
cwtl
adc
andl
pop
popf
arpl
scas
xchg
dec
ds
inc
cld
repnz
lret
bound
mov
andb
and
jb
testb
mov
lods
in
add
in
popf
xor
icebp
subl
sub
adc
push
cmp
sub
push
jnp
and
fxtract
cmp
push
sti
mov
imul
mov
lods
mov
mov
and
popa
fcos
les
aas
sbb
cmp
xchg
dec
lods
jp
sub
and
das
cmc
js
and
stc
out
and
add
loop
out
mov
jle
dec
iret
imulb
push
inc
test
ret
mov
stos
or
outsl
iret
pop
int
call
shl
sti
sarl
and
or
aam
cmp
iret
mov
cmpsb
int
pcmpeqb
sbb
jle
ds
xor
push
decl
pop
addr16
movl
jb
out
fsubl
mov
aam
xor
inc
loop
mov
fisubrl
sub
dec
imul
aam
sub
adc
pop
push
iret
xlat
jnp
ja
jb
test
inc
hlt
dec
bound
mov
xor
das
bound
lea
push
mov
add
das
xchg
loop
mov
jg
shll
push
dec
cmp
paddw
xor
xor
cmpsl
shrb
adc
lods
push
mov
clc
flds
push
jnp
ljmp
test
inc
pop
fwait
sbb
in
in
and
jl
rcr
cmpsl
add
leave
add
add
add
add
lock
addr16
in
fwait
cmpsb
orl
push
pop
in
xchg
push
roll
sbb
mov
push
pushf
out
loop
bound
mov
dec
mov
mov
jecxz
xor
insb
or
arpl
sub
push
mov
icebp
xchg
test
jg
daa
repnz
cmc
cmp
sti
cmp
lcall
test
pop
pop
mov
jo
dec
fsubl
in
xlat
inc
cmp
ljmp
ret
roll
sub
in
shl
sbb
out
inc
aad
push
dec
and
mov
cli
mov
xor
loopne
xchg
mov
imulb
mov
cmp
pop
sub
mov
xchg
push
mov
out
sbb
jg
pop
stos
fildll
out
mov
push
and
or
and
sub
push
mov
outsl
gs
fwait
arpl
push
adc
and
movsl
jp
movsb
mov
mov
movsb
xor
jns
pusha
fwait
pop
push
and
or
mov
jo
mov
mov
cs
test
dec
xor
and
xchg
xor
add
push
flds
repnz
mov
inc
jbe
in
pusha
insl
dec
adc
inc
xchg
adc
icebp
cmp
js
and
mov
bound
mov
sbbb
and
sbb
in
lret
mov
sbb
mov
mov
or
sbb
fdivp
popa
sbb
icebp
dec
mov
jb
push
test
push
sub
ret
orl
shr
lods
xchg
cld
inc
out
pop
mov
jne
mov
out
pop
dec
xchg
fisttps
rcr
aaa
and
fwait
and
andb
cld
cli
jae
out
popf
dec
dec
cwtl
jl
cmp
in
das
fbstp
cltd
enter
test
dec
add
inc
test
ret
xor
adc
sahf
in
shll
cmp
shll
fisttps
movsb
xor
xchg
pop
es
loop
js
or
fsts
jno
mov
jne
and
bound
cld
insb
test
ds
push
in
push
int3
xor
test
cwtl
test
ret
xor
push
sbb
xchg
popa
mov
movsb
insb
pop
call
insl
jne
arpl
or
push
lahf
sub
dec
ljmp
adc
ljmpw
push
adc
or
leave
clc
fldl
inc
or
adc
mov
call
js
cwtl
lock
mov
test
push
cmp
scas
rcrl
adc
pop
jl
jns
and
popf
or
int
lods
shrb
xchg
mov
dec
aaa
mov
mov
aam
xchg
inc
mov
clc
push
pop
add
mov
lcall
cltd
and
sahf
xor
push
push
test
add
inc
sbb
push
cmpsl
fcmovb
cwtl
mov
aad
dec
mov
scas
fucom
data16
mov
fwait
iret
in
xchg
jmp
nop
adc
gs
and
pop
in
or
sbbb
mov
daa
stos
test
mov
int3
in
mov
popa
mov
xchg
aaa
cmp
sub
cld
cmc
in
mov
faddl
test
mov
gs
test
xlat
xor
lahf
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
cld
clc
add
add
fisttpl
mov
rcrb
push
sub
stos
int
jge
inc
fwait
jle
cmp
push
movsl
push
sbb
xchg
cmp
sbb
mov
mov
gs
in
xchg
aad
xchg
std
cwtl
dec
bound
lea
xchg
inc
mov
scas
divl
jnp
incb
lods
xchg
ja
pop
je
lock
xchg
push
push
jb
push
pop
js
int
add
fadds
mov
in
xor
das
hlt
xchg
sub
push
fisttpl
test
adc
sub
lret
sbb
pop
aaa
lods
lds
cmp
scas
and
idivl
fistps
jnp
mov
adc
test
or
incl
mov
cmp
mov
push
fidivrl
je
sub
add
cmp
fmuls
fs
lods
cltd
push
dec
or
fld
imull
mov
pop
xor
in
hlt
mov
aad
sub
rclb
and
lock
cli
dec
mov
sub
rolb
push
mov
imull
inc
jno
icebp
lock
fisttpll
aaa
popa
cmc
fldcw
jbe
clc
sbb
scas
dec
pop
or
cs
push
and
sbb
xor
rorb
mov
cmp
in
push
add
and
neg
dec
adc
jae
ja
mov
lock
jae
pop
jg
repz
inc
mov
nop
in
or
cmpsl
fmul
xchg
push
mov
push
fldenv
mov
add
jecxz
outsb
cmp
inc
dec
cmp
arpl
jo
push
and
jae
mov
pop
xor
negl
mov
sti
push
je
inc
xor
pop
out
jmp
xchg
and
or
mov
mov
iret
loope
mov
fadd
ret
outsb
out
add
mov
test
lea
cmpsb
jecxz
jecxz
call
jp
sahf
out
getsec
outsb
xchg
scas
xor
mov
xchg
cmpsl
jbe
pop
cltd
cld
xchg
sbb
pusha
inc
xor
inc
ret
jge
push
jecxz
adc
pop
sbb
and
dec
pop
push
aad
ret
clc
or
fwait
test
lahf
inc
aaa
mov
loop
jne
idivl
xor
add
cld
icebp
adc
and
adc
outsb
add
pop
adc
sarl
lock
adc
push
mov
mov
jg
push
aas
popa
lods
inc
ljmp
insb
add
pop
in
jns
push
daa
call
adc
in
sbb
xchg
sbb
cmp
xchg
xor
mov
xchg
xchg
push
cmp
mov
mov
push
in
je
fcomps
fucom
dec
lcall
dec
push
cld
pop
pop
lock
dec
enter
fnstcw
jecxz
fisttpl
add
mov
imul
push
lahf
mov
loop
js
and
pop
sub
push
xchg
in
sub
pusha
hlt
fildll
mov
xorl
pop
scas
mov
cltd
popa
cmp
movsl
movsl
aas
and
andb
hlt
decb
mov
pop
and
pusha
andl
mov
cmp
imul
or
or
outsb
inc
mov
and
enter
sub
pop
hlt
gs
aaa
add
jge
lret
popa
xor
inc
sub
mov
ss
sbb
std
jmp
aaa
mov
sarb
ss
out
mov
add
int
aas
adc
cwtl
call
insl
ja
popf
or
jno
cmp
jmp
inc
faddp
mov
aaa
mov
mov
or
call
in
xor
or
stc
mov
jbe
out
sbb
cmp
inc
int
sbb
fs
jnp
mov
sbb
or
ljmp
es
cmpb
jmp
fwait
add
jg
frstor
cmpsb
mov
inc
jp,pt
add
mov
add
and
push
inc
dec
repnz
cmpsl
out
hlt
add
popa
add
test
xlat
iret
mov
cld
or
mov
mov
sbb
bound
jbe
push
sbb
dec
xor
push
and
aaa
movsl
lret
add
and
jle
add
pop
orb
mov
ds
jae
dec
in
mov
shrb
jb
enter
xchg
mov
out
jns
xchg
cltd
fistpll
xor
scas
inc
xor
mov
stos
mov
inc
mov
insb
out
bound
add
mov
adc
push
mov
and
dec
and
inc
adc
loope
mov
mov
shlb
stc
mov
in
sbb
call
fimull
fidivrl
sub
mov
jbe
shl
or
jbe
sbb
gs
dec
cltd
lret
hlt
hlt
pushf
xor
push
dec
shrb
sub
push
jl
jl
mov
fdivrp
dec
std
or
shr
mov
inc
movsb
mov
iret
leave
pop
fwait
xorb
dec
repz
aad
and
cli
sub
pop
scas
fisubs
sbb
inc
add
xchg
in
push
jg
call
mov
pop
add
rolb
mov
in
stos
push
xor
cs
sti
cmp
pusha
sub
fiadds
lahf
daa
clc
adc
xor
mov
mov
inc
inc
jbe
inc
mov
in
xor
shrb
fsubrs
mov
mov
cmp
xchg
stos
mov
push
pop
mov
fcmovnb
mov
sub
lret
jmp
sahf
push
sbb
ljmp
cmp
jb
loop
sub
mov
sbb
in
rcll
scas
pop
ljmp
pop
add
test
les
movsb
scas
mov
add
or
call
xor
and
cmpl
pop
insb
xchg
dec
jne
pop
js
push
xlat
and
pushl
mov
in
repz
lea
add
pop
xor
mov
mull
subl
mov
cs
push
push
cltd
cmp
shlb
and
fwait
xor
or
mov
enter
pusha
or
xor
cmp
test
mov
sub
cmpsl
mov
xchg
pop
push
sbb
push
xchg
mov
iret
jno
mov
das
jp
sub
pop
push
int
sub
fcoml
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
std
mov
xchg
add
enter
xor
xor
cmpsl
push
add
rcrb
mov
mov
je
loopne
and
dec
fsubrs
int
or
mov
sbb
es
stos
xchg
sub
xchg
sbb
sarb
fnstsw
dec
pop
enter
and
add
iret
fdivrs
sbb
push
inc
push
mov
pop
mov
ficoml
loope
cli
jb
les
inc
mov
rolb
jb
outsb
or
loop
jp
bswap
and
adc
rorb
xorl
stos
mov
xchg
sbb
and
fwait
or
cmp
fdecstp
cld
xor
add
jb
xor
inc
fs
push
adc
scas
mov
mov
insb
repz
pushf
sbbl
and
jl
lods
sub
dec
stos
shll
cmpl
mov
push
js
pop
xlat
mov
inc
or
and
ss
and
mov
frstor
xchg
sub
push
push
fdivr
jecxz
push
mov
mov
dec
outsl
fimuls
rcll
jno
and
adc
lods
mov
mov
xlat
sbb
xchg
fiaddl
push
sar
xchg
lock
fdivr
mov
aam
add
repz
mov
and
inc
test
xor
lea
mov
call
pop
xor
incb
movsl
loop
mov
cmp
xor
mov
lcall
out
xchg
jne
fidivs
push
ja
and
adc
and
mov
mov
inc
das
mov
inc
pushl
pop
inc
test
imul
subl
sbb
shrb
or
dec
xchg
xchg
xchg
dec
inc
ljmp
sbb
dec
cmp
stc
cmp
addl
mov
ljmp
mov
popf
cli
fldcw
gs
fwait
repnz
repnz
mov
mov
pop
je
push
cmp
mov
loope
add
push
fwait
outsb
popa
idiv
xchg
pop
outsb
pop
insl
cmpl
add
pop
out
mov
add
sahf
xchg
mov
mov
or
mov
mov
cwtl
or
clc
and
push
cmp
cmc
dec
cmp
outsl
sbb
sbb
mov
mov
shrb
rolb
mov
xchg
cmp
cmp
leave
sbb
mov
cld
pop
insb
hlt
mov
mov
andl
rol
sub
cli
push
sub
mov
xor
jns
cld
push
loopne
jp
xor
push
mov
inc
fadds
test
mov
fstl
aas
cmc
call
stos
or
xlat
inc
jp
or
mov
popa
inc
fiaddl
xor
xchg
inc
mov
aad
mov
cmp
or
xchg
pop
mov
popf
and
or
gs
dec
and
jno
dec
mov
hlt
xchg
dec
jg
call
mov
and
xchg
or
mov
mov
and
enter
cltd
sahf
mov
jnp
mov
push
lods
xor
mov
outsl
inc
xchg
lods
repnz
lds
and
lret
nop
das
inc
mov
rorl
xchg
test
rcll
cmp
fcom
ljmp
leave
mov
data16
mov
lods
lds
arpl
push
imul
sub
outsb
hlt
shr
aaa
decb
mov
adc
sbb
popf
inc
aad
jo
out
pop
int
sub
push
in
xchg
insb
dec
cmp
outsb
mov
movsl
movsb
pushf
cwtl
dec
push
xor
js
cmp
out
push
push
das
sti
or
adcl
lods
push
adc
mov
xchg
mov
sub
pop
cmpsb
in
cltd
movsl
pop
add
push
lret
test
jl
mov
loope
push
xchg
xchg
scas
cs
repz
subl
cmp
and
and
jae
xor
shl
leave
or
mov
lea
out
pop
fadds
push
adc
insb
ja
ds
fwait
mov
xor
adc
mov
xchg
cli
mov
xor
adc
movsl
pop
push
loopne
addr16
iret
loop
pop
in
lret
or
lods
and
loop
dec
push
insb
rorl
xchg
add
negb
mov
inc
jp
or
int3
jne
xchg
sub
push
cmpsl
ja
xor
pop
in
test
fs
xor
mov
pop
cmp
cld
aam
sub
push
pop
fisttpll
dec
mov
jb
xor
cltd
push
test
inc
jge
jp
hlt
sbb
sbb
or
or
pop
sbbb
imul
shll
jle
pop
mov
repnz
loope
pop
ja
or
shr
ret
mov
mov
iret
push
into
xor
rclb
fwait
popa
movsl
pop
das
and
mov
jb
jae
sub
mov
inc
dec
lock
and
cmpsl
sbb
jb
jle
lcall
add
sbb
add
jecxz
sub
jle
inc
jecxz
jbe
out
mov
cmc
shl
scas
mov
push
add
gs
pop
mov
xor
jl
mov
arpl
mov
and
leave
leave
dec
fwait
stos
outsl
rolb
xor
xor
cmp
testb
call
and
inc
loope
stos
xchg
lret
or
jne
inc
jg
xor
mov
mov
add
push
es
aam
movsb
push
or
ljmp
mov
pop
out
orb
sub
push
xchg
and
jns
rcrl
stos
inc
jne
cmpsb
push
imul
pop
mov
in
push
test
in
xchg
sbb
test
jl
and
push
in
cmp
out
insb
xchg
aad
cmpsl
test
jo
and
fcompl
jl
data16
call
xor
xchg
sub
loope
xlat
jae
push
sub
sarl
xor
mov
repz
jb
inc
push
adc
aas
ss
sbb
lds
inc
cmp
loop
jo
jmp
stos
jp
cwtl
sub
adc
jns
es
pushf
pop
add
in
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
push
add
adc
inc
rclb
sub
roll
sbb
mov
push
push
in
mov
fnstsw
sbb
popa
mov
clc
jle
sbb
sbb
dec
imul
and
pop
cmp
std
rolb
mov
mov
push
xor
or
push
pop
push
roll
js
xchg
inc
scas
aas
jg
pusha
ja
hlt
test
mov
testb
xchg
jle
xlat
stos
adc
and
in
dec
add
div
mov
xchg
repnz
stos
push
ds
lret
xchg
dec
sub
lcall
inc
notl
fisubrl
mov
jae
xor
lds
adc
outsl
mov
mov
ja
lock
bound
sbbb
mov
xor
incl
xchg
pop
rolb
mov
leave
mov
gs
push
in
sub
movsl
movsb
lods
pop
mov
jo
pop
mov
pop
jg
lods
fists
add
pop
shrl
jg
pop
in
add
stos
fstl
out
or
inc
jb
rol
jne
adc
sub
loopne
jbe
mov
inc
shlb
push
movsl
and
mov
push
sbb
cmpsl
cmp
test
popa
cli
into
mov
dec
int
mov
adc
jnp
aas
jb
add
out
es
leave
xchg
dec
andb
fcomps
xchg
adc
or
pusha
cmp
sub
and
lret
cmp
mov
xchg
outsl
xor
adc
jp
xor
fistl
pop
xchg
sub
rcrl
hlt
cmp
lods
shll
wbinvd
pop
xor
xchg
mov
push
nop
sub
jge
cmp
mov
xchg
mov
mov
clc
mov
or
sahf
sub
or
push
inc
addr16
jg
cmp
ret
jno
pusha
mov
sti
jge
mov
imul
pusha
lret
arpl
ret
lcall
dec
and
jb
nop
mov
jne
fsubrp
and
lds
mov
mov
jmp
pop
jb
pop
ret
test
or
jp
fs
popf
jmp
cmp
call
cmp
gs
adc
adc
and
push
mov
insb
push
push
sub
lods
or
insb
popf
pop
cli
insb
rclb
mov
jae
inc
pop
add
sbb
sbb
mov
mov
lods
popf
fistpll
xor
mov
inc
add
mov
push
pop
pop
movsl
push
pop
push
lret
sti
cmp
push
je
mov
jecxz
and
pop
add
fbstp
push
test
cwtl
push
xchg
dec
lods
mov
stos
xchg
shrl
cs
fnstsw
jle
int3
pop
cwtl
xor
adc
insb
mov
test
sbb
loopne
pop
jge
mov
and
mov
ror
shrb
cmpsl
inc
sbb
sti
inc
shl
rorl
into
inc
shl
inc
subl
lret
mov
mov
ljmp
or
push
or
mov
das
sbb
jg
scas
int
mov
xchg
push
cmp
dec
mov
data16
push
and
pop
sbb
xor
sub
mov
cwtl
xchg
pop
in
imul
sub
ljmp
xchg
or
and
gs
and
fstpt
mov
pop
xchg
aaa
ret
cmp
lock
inc
push
sbb
lahf
xlat
pop
mov
and
shrl
jp
cmpsb
insl
xchg
cwtl
scas
out
push
jp
notl
mov
jl
out
pushf
pop
cmp
push
sub
jno
arpl
movsl
lods
inc
xor
into
in
xor
dec
stc
mov
loop
xlat
call
int3
repnz
imul
jnp
or
popa
dec
in
in
mov
xchg
mov
fucomp
mov
cmp
push
bound
dec
inc
push
cmpsl
aad
lahf
shlb
or
jp
fcmovu
fldt
sub
imul
or
movsl
mov
cld
je
das
jg
sub
sbb
adcl
xchg
fcmove
popa
out
cmp
push
cmpsl
mov
adc
aas
out
add
dec
add
aaa
sub
push
jns
or
adc
cld
loopne
aam
mov
sub
xchg
jno
jno
jecxz
pop
call
sbb
cmp
sbb
scas
jo
xor
sbb
aas
orb
daa
jg
iret
cltd
lds
inc
jge
sub
push
xor
dec
icebp
pop
sbb
mov
test
mov
pushf
pop
cmp
cs
jge
cmp
push
push
jp
mov
lcall
push
adc
mov
inc
mov
mov
push
rcrl
int3
or
out
in
sbb
lds
repz
mov
push
mov
out
xchg
repz
inc
pushf
sub
push
sbb
sbb
add
cli
cmp
sub
push
lds
sub
cmpsl
fs
xor
popa
push
pop
inc
xor
scas
lods
lret
enter
adc
mov
ficomps
jle
aad
mov
orl
inc
shll
daa
adc
cltd
out
xchg
jle
xor
cmp
and
leave
push
push
mov
enter
lods
cmpsb
arpl
es
jecxz
test
push
mov
pop
mov
cwtl
jns
mov
sub
jnp
or
sub
and
pop
daa
and
addb
push
pop
adc
fcom
lods
mov
nop
test
divl
std
xor
xchg
cmp
xor
dec
push
js
sub
mov
mov
mov
cmp
repnz
ret
ror
cltd
fcomi
sti
and
adcl
jb
xchg
push
push
test
xchg
mov
in
shl
aas
ret
lea
xchg
xor
mov
cmp
dec
inc
cmp
fs
sub
inc
sub
mov
mov
dec
mov
or
imul
sbb
sbb
or
fiaddl
ret
cmp
lods
push
mov
xor
cmp
into
add
arpl
outsl
jecxz
test
cltd
out
sbb
sub
iret
fdivrl
add
jne
into
xchg
pop
pop
lret
jnp
dec
adc
outsb
cld
addl
cld
cmp
cmp
jbe
add
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
jge
xchg
inc
add
mov
cld
cmp
dec
lds
sbb
inc
dec
fmulp
sub
lods
mov
inc
mov
fs
sub
daa
and
ljmp
dec
cmpb
mov
dec
adc
les
cmpsb
stos
mov
aaa
outsl
xor
mov
and
inc
push
mov
jp
shrb
loop
daa
imul
pop
loopne
jb
jb
push
enter
mov
dec
inc
outsb
or
xchg
pop
or
out
dec
lods
fwait
xor
or
jb
mov
lods
dec
mov
cli
xchg
jnp
push
dec
addl
filds
push
idivb
jmp
test
imulb
push
lcall
mov
cs
xor
idivl
adc
out
fldenv
lods
dec
push
pop
or
xor
jl
push
jbe
xchg
lods
das
mov
loope
ror
sahf
push
mov
push
dec
xchg
inc
push
outsb
movsl
mov
xchg
cmp
call
das
ret
add
mov
xor
adcl
dec
adc
test
aaa
in
xor
mov
sub
pusha
dec
out
gs
lret
xchg
cmp
xor
addr16
lret
out
cmp
sbb
data16
push
je
outsb
loop
arpl
ret
dec
push
in
ret
orl
in
jl
data16
xchg
adcb
not
in
lcall
jnp
scas
sub
ds
stc
jmp
dec
push
pshufw
inc
xchg
mov
scas
ret
in
lods
adcl
mov
inc
push
test
into
jns
jbe
jge
insl
sbb
gs
adc
scas
mov
jmp
pop
xchg
in
mov
fcoms
xchg
imull
in
scas
xor
popf
lds
dec
aam
xor
out
sub
stc
pop
sbb
cli
lahf
xchg
push
sbb
sub
cwtl
ss
aas
push
outsb
push
inc
aam
lods
in
aam
movsl
fdivl
mov
das
mov
inc
jnp
hlt
js
cli
bound
insl
loope
loopne
add
add
addl
and
les
out
mov
sub
dec
clc
loop
pusha
stc
push
int
mov
insb
jmp
lds
mov
lds
cmc
test
mov
mov
rolb
repnz
lahf
dec
xchg
mov
xchg
mov
jbe
inc
cmp
jo
rcrl
sar
mov
sbb
inc
rcr
pop
add
cltd
icebp
lahf
add
push
sub
xchg
fwait
jns
jl
sub
jno
sbb
jg
jge
jl
int
inc
leave
dec
or
pop
fistps
fs
mov
dec
outsl
mov
sahf
and
movsl
popw
ja
jle
test
loope
xchg
pop
mov
inc
mov
arpl
stos
mov
mov
cmp
cmp
and
cvtdq2ps
int3
push
aaa
lock
cmpsl
outsb
popa
jb
xchg
arpl
mov
mov
lea
test
mov
bound
les
push
jo
inc
push
test
dec
inc
out
rorb
sahf
aam
jp
pop
dec
fiaddl
shl
push
and
push
js
enter
dec
or
mov
es
mov
mov
roll
cs
int3
into
lahf
cld
imul
arpl
xchg
lods
jp
adc
pop
cmp
cmp
mov
stc
int3
mov
xchg
and
in
cli
inc
mov
clc
out
mov
inc
movsl
mov
addr16
loop
ss
mov
dec
ss
jmp
lahf
aam
int
inc
test
lret
adc
lds
adc
pushf
adc
dec
fildll
dec
enter
and
dec
in
cmp
hlt
into
cmp
imul
push
pop
pusha
loop
dec
lret
push
push
push
xor
add
into
add
lahf
andb
jge
insl
cmp
orb
stc
out
sub
mov
push
mov
sbb
sub
std
pop
mov
sub
ljmp
daa
movsb
arpl
cmpsl
adc
mov
insl
fcom
pop
inc
pushf
mov
mov
pusha
inc
dec
sbb
mov
pop
sub
lret
aas
cltd
es
push
imul
sbb
inc
test
and
std
xor
sub
or
mov
outsb
dec
adc
mov
rcl
imul
mov
cltd
sub
or
dec
stos
data16
test
cmpsl
jne
outsb
inc
dec
sub
leave
xlat
das
mov
push
pop
mov
lds
and
jae
sbb
sahf
popa
les
loope
movsl
mov
lcall
dec
xchg
insb
or
test
test
in
les
addr16
lret
shrb
mov
lods
mov
sbb
push
lahf
jge
dec
jp
and
xchg
out
push
mov
into
into
mov
das
scas
stos
das
adc
fmuls
or
xor
mov
outsb
jmp
add
fildl
movsb
cli
leave
xor
or
sub
push
sbb
sarb
out
push
jne
jp
or
insb
mov
pop
xor
adc
adc
outsl
stos
xorb
xchg
or
aas
and
enter
add
sti
push
pop
into
insb
lods
out
lock
dec
xchg
stos
mov
push
add
test
pop
mov
xor
mov
ficoml
cmpsb
xor
xchg
pop
dec
jo
sti
mov
push
ljmp
jg
js
mov
mov
add
push
push
jge
xlat
mov
mov
cli
jg
push
inc
adcl
xor
mov
sbb
xor
add
lret
jle
dec
adc
in
roll
les
je
ljmp
in
negb
jae
jae
inc
inc
or
fiadds
jae
pop
pop
data16
push
in
pop
loop
faddl
ja
adc
mov
sub
out
mov
scas
dec
pop
mov
outsl
jo
lea
push
cltd
lock
jo
cltd
xor
out
cmpsl
xlat
mov
inc
fidivrl
pop
sahf
add
clc
mov
je
gs
into
stos
xor
outsb
push
xchg
jbe
test
pop
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
sbb
shll
add
sub
jb
shll
ror
int3
jbe
dec
lea
mov
stos
xlat
sbb
cmp
repz
jp
fcompl
mov
mov
and
jmp
adc
loopne
push
jo
in
cld
jmp
push
mov
mov
push
or
imul
jo
xchg
push
fildll
repz
mov
test
dec
in
ljmp
lret
lds
mov
inc
and
adc
add
into
fisttps
and
cwtl
pop
pop
push
pop
int
inc
jbe
out
mov
shlb
int
les
mov
lcall
jb
pop
mov
sbb
out
ret
push
fdivrl
push
into
sub
mov
add
jne
mov
lahf
daa
dec
xchg
pop
sti
cmp
xlat
sbb
sub
sub
jle
mov
ljmp
jb
arpl
dec
js
mov
push
pop
repnz
fucom
jns
sub
icebp
sbb
mov
inc
xchg
sbb
bnd
insb
mov
push
jnp
add
fmuls
loopne
bswap
es
inc
iret
std
xchg
test
xor
nop
sbb
test
sub
mov
sbb
cli
or
cli
dec
fwait
cltd
shll
int
cmc
add
scas
cmpsb
jmp
repz
sbb
or
add
jle
mov
inc
aas
imul
sub
movsb
xchg
inc
and
insl
lods
in
xchg
sub
add
mov
lods
mov
xor
jg
adc
mov
mov
insl
iret
mov
sub
bound
cltd
repz
and
cmp
inc
outsl
je
lahf
mov
sbb
or
arpl
cwtl
outsb
cmp
scas
sub
sbb
xchg
repz
lret
dec
out
scas
adc
mov
andps
mov
lcall
pop
sbb
outsb
nop
das
in
or
sub
jno
pop
mov
pop
xlat
xchg
enter
repz
out
cmp
daa
cld
into
push
fmull
jns
cmp
xlat
or
sub
leave
jge
mov
sbb
rorb
adc
push
inc
push
mov
lods
xor
xor
pop
dec
stos
ror
loopne
xchg
cltd
jne
sbb
jno
lret
lcall
shlb
dec
jbe
dec
pop
inc
sub
pop
cmp
mov
inc
cltd
test
testl
ljmp
pop
jmp
xchg
insb
add
or
fadds
pop
cmpxchg8b
inc
lahf
out
fdivr
aam
dec
xchg
pop
scas
hlt
mov
loop
jbe
and
in
gs
jg
xor
jbe
jecxz
out
xchg
imul
mov
pop
bound
fs
test
mov
ret
dec
addb
sbb
fidivs
mov
sub
data16
inc
lcall
xchg
add
adc
xchg
fnstsw
adc
add
cld
scas
sbb
rcl
xor
jne
mov
xchg
addr16
xor
jae
mov
mov
sub
xor
movsb
pop
mov
or
xor
testb
flds
pop
shrb
add
jge
xor
xchg
aaa
add
jbe
adc
ret
daa
add
testb
lea
lods
jle
cs
in
repz
or
repz
daa
pop
and
js
leave
sarl
leave
aas
pop
pop
enter
dec
jmp
sbb
adc
ja
lods
add
or
iret
stos
jns
jae
cmpsb
mov
ljmp
mov
mov
sbb
ljmp
imul
add
bound
fidivs
xor
int3
arpl
xchg
xor
sahf
xchg
mov
in
sub
mov
repz
cmpsl
adc
addl
xchg
pop
pop
ja
or
cmp
add
or
inc
pop
jle
in
mov
cs
fnsave
test
in
mov
fistl
jb
jns
mov
mov
and
mov
shrl
push
dec
push
adc
xor
add
not
into
inc
or
je
xlat
xor
pop
in
data16
push
lock
dec
repz
or
loop
inc
outsb
hlt
enter
mov
subl
xchg
shlb
push
xor
mov
jae
lea
outsb
adc
mov
sub
leave
aas
scas
xor
imul
xchg
inc
and
ljmp
je
lods
jecxz
push
mov
js
fsubp
xor
outsl
pop
popf
mov
lock
stos
lods
mov
or
cmpsl
push
pop
dec
inc
shrb
outsb
or
shll
in
mov
es
xchg
out
jecxz
outsl
iret
outsb
gs
push
scas
je
shll
push
jge
sarl
pop
push
jns
pop
jle
mov
ficompl
lret
mov
divl
jae
mov
push
sbb
xor
xlat
nop
cltd
push
subl
sbb
add
in
es
sar
jno
xchg
in
aam
int
es
scas
or
cltd
fwait
rclb
or
jns
xor
mov
jge
mov
xlat
pop
fidivs
int3
xchg
repz
mov
mov
rclb
pop
int
xchg
fcoml
xchg
out
jg
psubb
mov
test
andl
adc
int
xor
iret
rorb
in
in
xchg
cld
push
rolb
or
repz
fcmovu
adc
shl
cmp
es
dec
push
into
lret
out
data16
notl
xor
loopne
mov
pop
lret
fsubl
stos
mov
repz
sub
jae
add
xlat
shl
outsl
add
mov
add
daa
adc
add
ror
cmc
dec
push
les
sahf
xor
pop
aad
mov
jae
jae
jbe
xor
test
mov
cmp
loopne
das
fadds
mov
js
add
sahf
push
stos
mov
insl
repz
jp
mov
push
cld
jp
test
data16
sar
jns
int
enter
add
mov
or
into
test
dec
rcrb
cmpl
vcvtdq2ps
push
sub
pop
push
popa
inc
sbb
jae
aad
xor
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
sarl
and
add
mov
lods
mov
jp
pop
psubw
add
mov
repnz
mov
stos
shl
insl
sub
lds
dec
aad
jge
shr
andl
and
mov
fnstcw
add
jbe
mov
testb
mov
add
jo
bound
nop
mov
sahf
mov
push
xchg
bound
addl
mov
cmp
in
cwtl
xlat
xchg
push
adc
dec
xchg
push
jbe
imulb
rorb
stos
fcmovnu
jo
jbe
jmp
ja
in
adc
xor
mov
sbb
fbld
xor
cmp
xor
cmpsb
xor
push
mov
push
inc
push
es
or
mov
mov
xor
imul
inc
xchg
sub
jge
arpl
psrld
mov
rclb
aad
jnp
cmpl
popf
aam
jne
mov
pop
decl
outsl
sbb
adc
push
adc
test
pop
out
punpckhwd
cwtl
mov
or
add
nop
sub
mov
xchg
xor
or
or
fwait
mov
mov
pop
in
enter
lret
cwtl
lock
push
pop
scas
adc
int3
mov
lcall
cmpsb
sti
mov
ljmp
or
lock
pop
xchg
stos
sub
pushf
out
scas
gs
push
jp
or
push
scas
aam
cmp
and
push
fsubr
mov
gs
cs
ret
int
ret
int3
dec
pop
xchg
into
sbb
adc
lret
lods
cs
in
pop
or
dec
push
dec
cmp
aam
push
in
mov
dec
jno
adc
shll
and
lret
nop
in
xchg
lahf
add
sub
sbb
out
and
stos
xchg
ljmp
xor
push
pop
sahf
loop
push
in
imul
sub
fldenv
cli
imul
and
imul
mov
push
inc
push
jle
mov
out
ljmp
adc
jne
inc
outsb
icebp
dec
pop
mov
pop
jnp
pop
fdivl
sbb
lds
inc
stos
add
push
insl
dec
cmp
or
and
cmp
shlb
loop
outsb
pop
push
cmp
addr16
jecxz
push
testb
add
rcr
popa
loop
pop
fildl
insb
test
mov
mov
pop
dec
rclb
inc
push
lcall
je
xchg
fs
fcomi
rcrb
fcom
mov
dec
jl
dec
loopne
ret
out
xchg
shrl
call
loope
mov
mov
xor
test
cmp
jecxz
xchg
mov
cwtl
jae
in
test
mov
cwtl
pop
cmpsl
xchg
sahf
inc
fs
addb
pop
out
das
dec
xorl
mov
les
or
xchg
cli
jecxz
icebp
push
and
push
in
insb
sbb
js
hlt
mov
jl
mov
and
cmc
outsl
mov
add
outsb
jmp
shll
or
and
dec
jae
mov
pop
sub
mov
push
lods
mov
sbb
imul
jnp
leave
sub
mov
dec
mov
mov
movsl
xchg
into
fsubl
sub
filds
sbb
mov
cmp
insl
emms
xchg
loope
sub
outsl
sbb
stos
jbe
or
arpl
add
sub
cmp
shll
adc
fwait
or
insb
mov
sbb
adc
pusha
jne
idiv
test
inc
sub
cmp
push
ja
ljmp
cwtl
sbb
fdiv
fisubl
cmp
shrb
adc
adc
jge
sti
jb
stc
stos
inc
push
inc
xchg
add
cmp
fidivs
cmp
jb
push
sub
cli
sti
add
insb
lods
add
mov
pop
imul
fcmovnbe
lret
pop
dec
or
xlat
cmp
sub
pop
mov
xchg
movb
mov
ja
jmp
pushf
lock
sbb
and
sarb
push
adcb
mov
jns
rcrb
out
push
insb
rcr
addl
pop
xchg
mov
test
sub
je
aam
loopne
mov
hlt
and
push
cs
jnp
xchg
dec
mov
sub
jmp
or
addr16
js
mov
iret
scas
outsl
repnz
xor
cmp
lret
and
arpl
icebp
rorb
outsl
daa
pop
nop
sbb
fwait
in
in
sub
xlat
add
dec
ret
jbe
adc
cmpsb
stos
test
sbb
outsb
ret
lcall
sti
aas
dec
jle
iret
mov
jne
pop
push
test
stos
mov
out
sub
andl
enter
xlat
xchg
fisttpl
fmuls
aam
adc
jmp
jmp
insl
push
sub
dec
push
lock
jp
loope
inc
jge
imul
pushf
push
addb
outsl
lods
cli
xchg
orb
xchg
cs
fdivs
lret
cmp
or
cld
add
xor
mov
dec
sbb
sbb
mov
inc
fs
jmp
nop
jbe
mov
inc
push
divl
sub
dec
mov
mov
inc
icebp
enter
rorl
dec
popf
lcall
je
in
sub
pop
scas
repnz
pushf
cld
fwait
jno
popf
adc
lahf
aas
es
xor
sub
mov
int3
jb
xchg
mov
jg
lret
shrb
inc
aas
xor
cs
dec
sbb
dec
push
daa
push
jns
imul
in
out
aas
shlb
sbb
lea
xchg
cmc
pop
inc
cmovno
or
or
orb
cwtl
out
inc
or
mov
nop
jae
push
cmp
fdivs
pop
push
jl
pop
adc
in
xor
dec
out
xor
jno
inc
leave
xor
mov
sub
add
arpl
in
or
dec
xchg
xchg
shr
hlt
add
xor
sub
sbb
push
mov
lock
mov
xor
pop
jmp
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
bound
cmp
pop
dec
sbb
sahf
movsl
loopne
fidivrl
out
mov
ficoms
push
push
mov
cmp
lock
pop
sbb
or
xlat
mov
and
insb
fwait
arpl
cmpb
push
push
dec
fldcw
lahf
out
out
cmp
outsb
and
adc
je
dec
add
scas
loope
xlat
imulb
dec
sbb
imul
clc
cmp
int
xchg
xlat
xor
push
add
xor
iret
out
jecxz
subb
sbb
jge
cmp
sbb
adc
sbb
dec
insl
mov
push
insl
inc
leave
lods
or
xchg
xor
push
mov
leave
rol
or
lds
fsubs
jmp
fisttpll
je
arpl
fwait
inc
pop
mov
xor
aaa
push
rcr
add
cmc
add
fwait
add
ret
int
imul
sbb
hlt
aas
ret
icebp
clc
xor
sub
xchg
movsb
rcrb
mov
fmull
push
push
and
movsl
xchg
mov
jmp
inc
mov
sbb
andl
int3
inc
stos
cmp
add
and
or
imul
movsb
out
adc
lods
and
pusha
std
lods
out
mov
ds
inc
fdivrl
les
sub
cmp
xor
inc
inc
or
xor
jbe
mov
clc
mov
jmp
xchg
insl
push
xchg
xchg
cwtl
lcall
popf
push
xchg
mov
mov
repz
sbb
jbe
hlt
scas
fidivrl
dec
inc
scas
xor
testl
lods
lcall
adc
xor
or
add
das
or
sbb
and
push
cli
sub
scas
dec
xorl
push
jno
shrl
mov
push
out
in
inc
mov
jnp
jl
push
xchg
pop
mov
mov
lahf
xor
fsubs
push
sub
mov
mov
rorl
jp
mov
test
mov
fadds
in
adcb
fldcw
insl
in
push
mov
xchg
cmp
adc
inc
in
pusha
dec
dec
and
movsl
test
jle
jne
aaa
inc
push
orb
add
add
push
and
cmp
in
repz
xchg
sbb
and
jo
adc
cli
mov
andb
fmul
adc
xchg
sbb
movsl
sbb
out
rorb
xor
mov
sbb
jl
fs
or
jo
shll
adc
xlat
int
and
lds
scas
aaa
jecxz
pop
push
insb
repnz
or
fisttpll
push
xchg
push
xchg
cmp
xchg
cmpl
pop
test
pop
inc
dec
inc
sub
cmp
stos
xor
in
mov
inc
jecxz
add
lahf
inc
jmp
or
and
mov
pop
or
cmp
pop
or
xchg
ja
mov
insb
sarl
adc
push
adcl
inc
fs
lock
addr16
mov
inc
rclb
idivb
cmpsb
inc
outsb
cli
jle
jae
adc
xchg
cmp
test
cltd
pop
dec
mov
jle
loop
pop
cmc
add
dec
and
mov
mov
jge
jmp
out
or
mov
loope
imul
adc
or
push
stos
sbb
cmp
adc
ret
pop
std
mov
sbb
ret
dec
pop
push
fbstp
rcll
xor
adc
or
jmp
and
push
adc
pop
push
sbb
lds
stc
xchg
std
add
jl
ret
xchg
inc
cmp
push
jle
mov
push
or
ret
jmp
movsb
enter
aad
out
outsb
jle
rolb
and
lret
sbb
es
inc
das
mov
push
in
or
in
adc
repnz
jmp
adc
bound
testb
xchg
push
xor
test
mov
outsb
sti
xchg
out
leave
out
in
cmp
adc
xchg
inc
or
stos
fdivp
push
mov
je
aas
xchg
adc
cltd
jbe
cltd
sbb
sub
jbe
mov
cmpsb
data16
lahf
mov
ficomps
mov
or
pop
adc
subb
pop
pop
subb
repnz
mov
setb
js
ficoml
test
pop
adc
pop
pop
fisubrs
add
test
xlat
std
xchg
mov
xchg
mov
rorl
divb
add
cmpsb
cmp
sahf
sub
fistl
cwtl
out
cmp
adc
repz
fnclex
xchg
sub
mov
cli
or
xor
xchg
pop
outsl
ret
clc
into
call
push
and
dec
mov
aas
cld
pop
repnz
xchg
xlat
into
inc
js
lds
push
out
jmp
mov
je
ja
pusha
inc
mov
mov
cld
jae
xchg
xorb
popa
mov
cmpb
cltd
add
jns
out
jl
fwait
or
aam
sub
cmp
xlat
mov
add
xor
into
lds
push
sub
inc
sbb
ds
add
add
dec
pop
jae
inc
lcall
xchg
push
inc
pop
cvtps2pd
or
in
rolb
jo
jmp
sarb
jge
and
mov
mov
ret
pushf
adc
shl
fdiv
inc
mov
lret
sub
sbb
add
fistps
mov
jmp
jne
push
inc
xchg
mov
aam
cmpsl
out
je
xchg
enter
shlb
iret
fwait
lahf
in
scas
sub
jb
or
das
and
push
jg
leave
fld1
int
sub
add
push
fwait
inc
out
mov
shll
enter
and
daa
pop
fs
jns
inc
mov
xchg
pop
mov
xor
mov
popw
jb
mov
outsl
in
dec
inc
push
daa
rolb
jl
fs
insb
add
div
popl
adc
pushl
dec
sub
cmp
mov
mov
jmp
push
sbb
stos
clc
push
jge
fidivrl
mov
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
pop
aas
das
or
mov
push
jp
scas
jle
add
outsb
jae
mov
mov
out
enter
xor
or
inc
popa
popa
push
lock
or
sbbl
lcall
stos
mov
inc
insb
insl
push
xchg
cs
loopne
in
fstpl
enter
pop
mov
pop
rcrl
sbb
inc
gs
mov
push
fsub
cmpsb
and
mov
jecxz
data16
xor
adc
mov
mov
push
sbb
mov
sbb
es
popf
pop
mov
mov
xor
add
mov
sahf
outsb
mov
mov
mov
sbb
ficoml
lea
mov
inc
mov
cmp
rorl
adc
pop
divl
pop
loop
jle
push
shl
inc
std
mov
jbe
jno
daa
sub
and
orb
outsb
stc
out
repnz
xor
cmp
sahf
cmpb
jmp
lret
cmc
add
fcomip
sbb
lahf
repz
cmp
loop,pn
lods
mov
jecxz
push
test
lret
call
adc
daa
test
jb
insl
repnz
sub
adc
fwait
push
adc
insl
insb
movsl
test
mov
pop
inc
inc
orb
dec
xchg
sbb
xor
outsl
jmp
push
stc
mov
into
push
test
mov
xchg
inc
dec
jbe
push
movsb
lahf
fs
and
ss
or
add
or
nop
adc
imul
sahf
pushf
sub
andl
jle
push
out
andb
fld
pop
adc
cld
xlat
loopew
aad
stos
and
xchg
fsub
push
cmp
sbb
aaa
pop
pop
out
iret
cmp
mov
cmp
sbb
fdivl
fs
xchg
ss
dec
inc
push
cmpsb
aaa
xchg
fldt
dec
loope
or
push
mov
lret
mov
sti
imul
fnsave
or
lcall
lea
aas
mov
je
andl
sub
test
movb
push
ds
jo
jmp
repnz
jg
push
jle
inc
scas
jecxz
insl
outsl
roll
fsubl
fcomip
pop
mov
inc
aas
dec
jnp
pop
sub
inc
repz
pop
push
lods
fsub
or
mov
fstpt
icebp
push
mov
and
aaa
pop
push
das
sbb
xchg
bound
outsb
fmulp
xchg
or
push
pop
out
inc
or
and
mov
popa
popf
add
mov
call
mov
addb
lock
and
cmp
out
push
inc
outsl
das
adc
xlat
push
cmpsl
repz
inc
or
dec
dec
pusha
mov
pop
xchg
daa
mov
loope
or
push
lret
call
jne
inc
iret
adc
pop
xchg
test
stc
sbbb
aam
aaa
call
arpl
inc
mov
mov
mov
test
xchg
mov
or
inc
js
addr16
ds
ret
loope
ss
mov
add
lahf
push
cltd
lock
popf
sub
push
push
mov
loope
popa
mov
sti
pop
mov
pusha
lcall
jbe
jle
in
cmpsb
xchg
push
mov
iret
jb
loope
and
pop
push
add
mov
mov
loope
or
jg
rcrl
sub
mov
fldenv
xchg
cmp
nop
mov
push
in
js
inc
and
mov
mov
mov
fmuls
inc
ret
dec
lcall
cmp
scas
xchg
mov
push
loopne
in
jae
cmp
insl
sahf
bnd
cltd
jo
xchg
dec
mov
iret
push
mov
shlb
adc
pop
inc
aas
inc
adc
shrb
aaa
stos
xchg
jle
inc
cmp
aad
enter
aad
es
aam
lds
inc
fucomi
das
dec
in
popa
mov
loope
clc
imul
daa
lcall
int
fs
in
pop
enter
test
clc
mov
push
dec
or
jns
mov
sahf
dec
pop
mov
push
dec
pop
mov
sbb
outsb
add
inc
ret
scas
dec
push
sbb
sub
dec
movsl
inc
aam
xor
jmp
test
sbb
inc
adc
cld
adc
sahf
push
jns
popf
and
into
fisubrl
sub
jno
clc
xchg
and
out
mov
jo
sbb
push
pushf
jle
push
jno
lods
xor
je
mov
xor
add
pop
and
ljmp
fidivrl
cmpsb
addr16
shll
sarb
repnz
sbb
fbstp
in
add
or
in
jae
fwait
shl
mov
and
clc
push
sub
xchg
adc
insb
clc
int
jns
mov
push
adc
dec
push
outsl
cltd
sahf
test
xlat
lock
xchg
in
mov
xor
ljmp
movsl
scas
and
xor
and
fcoml
lahf
mov
pop
cltd
ficoms
popa
out
xchg
in
popf
mov
pop
push
mov
jmp
fstpl
sub
orl
movsl
xor
hlt
ss
push
cmp
lcall
sbb
inc
shrl
xlat
mov
inc
push
insb
jns
dec
lahf
call
inc
out
add
into
mov
dec
in
jmp
or
sbb
xor
dec
jl
data16
in
sbb
dec
cmp
ffreep
adc
cmp
mov
lods
aaa
mov
pop
xchg
mov
push
push
or
sub
adc
lds
es
mov
xor
mov
dec
cmc
mov
xchg
loop
xor
loope
jmp
mov
jecxz
shrl
inc
ljmp
mov
inc
and
lock
mov
add
cld
js
cmp
cmpsb
inc
adc
mov
cmp
in
popf
fcmovnbe
out
push
jno
and
mov
aas
adc
popf
jne
jns
repz
add
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
bound
add
inc
add
js
sub
dec
xchg
and
shl
mov
movsb
xchg
jecxz
or
sbb
out
dec
movsb
or
and
mov
dec
pop
or
cmp
jb
add
push
xchg
test
inc
popa
mov
loope
loope
push
fwait
pop
adc
int
cwtl
inc
clc
adc
jl
xor
shr
mov
jecxz
mov
dec
push
sbb
push
jmp
cld
idivb
pop
aam
mov
jp
ret
pop
dec
loop
out
jg
hlt
push
inc
adc
mov
in
inc
and
adc
pop
pop
ret
inc
dec
fadds
xchg
adc
hlt
mov
sbb
out
ret
xchg
inc
aad
push
xchg
inc
push
lahf
sti
sbb
adc
sbb
inc
out
sbb
movsl
push
ljmp
hlt
aaa
ret
mov
xchg
ljmp
sub
int3
mov
mov
push
and
lcall
jecxz
lock
lock
rcrl
bound
std
mov
fmulp
test
cmp
in
ljmp
jecxz
stos
sbb
das
pushf
movsl
add
jle
push
loop
pushl
movsl
push
jno
adc
and
jecxz
jbe
and
orb
adc
stc
pop
add
gs
push
mov
xchg
sbb
popa
jne
adc
outsb
xchg
divl
sub
mov
int3
adc
xchg
and
cmp
jle
sti
nop
js
mov
mov
mov
shl
xchg
pusha
es
mov
and
dec
movhps
jno
bound
ds
ror
jb
je
mov
sbb
arpl
repz
dec
shlb
mov
mov
sbb
cmpsl
xor
inc
shll
mov
inc
leave
add
mov
sbb
sub
jb
ds
loopne
icebp
inc
in
addr16
jge
pushf
adc
jl
or
pop
sbb
mov
push
and
push
stos
adc
mov
out
pop
mov
add
xor
or
mov
dec
movsl
push
jle
aas
mov
mov
out
dec
adc
movsl
or
mov
leave
pop
pop
adc
or
inc
xchg
xchg
out
sbb
pop
jp
xchg
jae
jl
push
mov
sbb
mov
or
jb
imul
cld
pop
in
xor
mov
enter
loop
jb
xchg
push
mov
nop
ds
xor
gs
cwtl
sbb
out
mov
sti
repz
push
mov
xor
dec
bound
fadds
or
pushf
and
adc
jb
ds
and
jb
xor
fldt
mulps
shr
fbld
mov
or
push
mov
pushf
push
nop
pop
xchg
cmp
lret
ret
xchg
addr16
adc
cmp
rcrb
mov
hlt
into
pop
movsl
sbb
sti
mov
cmp
repz
leave
dec
sbb
pop
subl
push
int3
lahf
sbb
dec
jge
cmp
jmp
and
adc
scas
rcrb
data16
sub
movsl
pop
pusha
fidivl
add
lahf
adc
mov
stc
cmp
loop
or
and
xchg
ret
in
xchg
fidivs
outsl
daa
call
pmullw
sbb
pop
push
adc
lret
aad
lods
xor
rclb
and
sahf
mov
dec
xchg
in
test
inc
adc
dec
test
mov
jae
clc
jmp
sub
loop
mov
ljmp
add
out
or
mov
fsub
fs
sub
jge
mov
scas
idivb
jae
in
jne
les
push
adc
popf
mov
fidivrl
push
and
xchg
mov
sbb
xor
cmp
xchg
mov
scas
sahf
fdivrl
xorb
das
pop
es
inc
adc
sub
data16
shll
pop
jbe
clc
push
loope
mov
add
ja
out
mov
sub
dec
adc
jno
sbbb
shl
xor
imul
loope
mov
jp
and
lahf
popf
add
xlat
jbe
push
and
imul
stos
xchg
adc
or
push
cltd
sub
int3
outsb
popf
mov
es
xchg
push
xchg
repnz
ds
out
cmpsl
add
xor
jne
adc
mov
call
mov
mov
ss
into
lret
mov
mov
cwtl
inc
add
test
add
lock
daa
mov
fstl
fsubrs
inc
imul
mov
mov
mov
daa
test
popa
cmp
lods
scas
adc
in
fcom
and
loopne
push
loope
mov
ret
push
push
pop
xor
sbb
pushf
out
xchg
push
xchg
xor
pop
push
and
pop
push
xchg
test
cmp
or
sub
lock
es
lret
or
ja
add
das
mov
jl
insb
pop
bound
inc
pop
mov
pop
adc
sti
out
dec
fstpt
mov
mov
mov
push
shl
lret
jle
ficoml
in
xor
stos
lret
mov
mov
in
dec
pop
jmp
jl
bound
sub
cld
and
pop
xchg
pop
movsl
sbb
fucomp
cltd
movsl
and
loop
aas
dec
rcrb
cmpsl
mov
mov
sbb
fiaddl
iret
mov
sub
cmp
imul
sub
inc
mov
out
pop
xchg
sbb
mov
or
mov
popf
mov
push
mov
rcll
fstps
sarb
roll
sbb
iret
jle
xchg
push
cmp
dec
stos
repz
aaa
pop
xchg
int3
xchg
inc
js
jo
jmp
movsl
pop
aas
dec
xchg
jmp
xchg
aam
sbb
out
mov
imulb
mov
in
aad
and
jnp
int
popf
mov
jmp
ds
mov
add
outsl
sub
mov
pushf
pop
mov
sub
mov
ror
outsb
call
cwtl
pop
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
jp
std
mov
mov
dec
sbb
sub
or
movsl
ss
aaa
nop
xlat
test
jecxz
jns
or
lret
andb
js
push
pop
sbb
sub
gs
mov
imul
outsl
mov
imul
xchg
sub
cwtl
andl
sbb
imul
add
inc
push
lret
js
nop
scas
jnp
insb
push
push
push
and
push
xchg
in
sahf
dec
ret
mov
mov
test
aad
andl
outsl
mov
inc
inc
out
add
mov
fldt
mov
outsb
je
gs
cmp
and
jmp
add
jmp
fisubs
out
scas
sbb
pop
imul
jbe
inc
aad
daa
cmp
arpl
inc
clc
pusha
jl
movsl
jp
out
movsl
js
nop
lods
xor
pushf
pusha
pop
lea
mov
pop
aas
jno
repz
mov
xchg
mov
bound
insb
loopne
mull
out
xchg
cmp
mov
loopne
imul
jno
cmpsb
lock
andb
bound
pop
add
shrb
adc
pop
mov
or
inc
push
out
lea
loop
fdivp
xchg
add
inc
mov
int3
lcall
aad
fmulp
adcl
pusha
add
jmp
in
cmp
dec
sub
xor
js
leave
cmp
mov
or
xlat
ja
push
xchg
icebp
pop
cltd
fdiv
outsl
or
add
add
int
js
mov
push
sub
inc
or
cvtps2pi
and
sahf
decl
hlt
mov
aaa
and
sbb
jle
ficoml
fdivr
mov
data16
mov
lret
xchg
pop
movsl
xchg
inc
int3
nop
inc
sub
xchg
inc
jne
jecxz
cli
addr16
jbe
mov
fistps
xor
adc
test
movsl
sti
out
addr16
iret
xor
inc
daa
aad
shlb
fsubrl
xor
xorl
or
adc
cld
mov
int3
sub
cmp
mov
fildl
push
inc
cmp
mov
int
adc
mov
into
lret
sbb
xor
cmp
dec
in
sub
mov
xlat
push
repz
pmuludq
jp
iret
test
insb
lods
movsb
xchg
shrb
cwtl
mov
sbb
mov
mov
lahf
and
mov
test
xchg
ret
xor
sbb
mov
adc
lret
rcrl
xor
xor
pop
addl
ret
imul
xor
pop
aam
inc
jle
stos
xchg
and
push
jne
pop
jecxz
xchg
sub
repz
sbb
les
sub
push
shrl
aas
stc
lea
and
mov
pop
fsubrs
inc
into
cmp
jnp
test
mov
and
xchg
lret
in
xchg
subb
rolb
jecxz
mov
cmc
cmp
or
inc
xorl
psubb
fcompp
xchg
mov
push
xor
cmp
cwtl
sarl
lret
imul
or
sbb
pop
arpl
push
sbb
inc
ficompl
out
push
test
dec
dec
sbb
push
jo
push
pop
adc
jno
inc
movsl
in
mov
stc
add
aam
shll
mov
sub
mov
mov
popa
lock
cmpb
cmpsl
inc
push
repnz
dec
push
pop
dec
pop
adc
nop
loopne
jbe
dec
movsb
inc
add
roll
std
rcr
lock
fstpt
dec
adcb
sbb
scas
and
add
sbb
mov
outsb
imul
pop
iret
pop
sbb
rcll
lods
das
divl
cmc
je
sar
dec
insb
jno
fcomip
rclb
lcall
std
invd
jbe
add
aas
sbb
das
sti
xchg
add
pusha
ljmp
cwtl
lcall
stos
jno
sub
xor
iret
into
test
cmp
push
scas
or
mov
cmp
xchg
inc
cli
push
xchg
movaps
inc
dec
pop
clc
push
out
and
xchg
or
ljmp
sub
shll
adc
aad
push
ljmp
jl
test
inc
pusha
mov
in
pop
sbbl
pop
scas
dec
sbb
push
sub
or
fiaddl
sub
les
addr16
push
cs
pop
sti
mov
mov
sub
inc
fldl
sub
dec
loop
rclb
mov
test
fistl
filds
in
mov
adc
je
stos
mov
xchg
nop
divb
sahf
data16
push
sarb
jne
inc
pop
mov
adc
mov
cltd
call
and
add
mov
cld
mov
ljmp
mov
sbb
add
popl
cwtl
mov
pop
scas
data16
mov
dec
and
push
icebp
and
aaa
sarl
and
repnz
xchg
popf
mov
push
pop
mov
ds
sbb
jno
leave
jecxz
es
and
push
cmp
jo
cmp
lea
pop
movsb
aas
cwtl
add
sbb
add
and
inc
or
xchg
xor
push
addr16
dec
push
popf
cltd
outsb
popa
add
mov
ret
cmpsb
cmp
xchg
dec
cs
arpl
test
in
scas
scas
add
or
icebp
ljmp
outsl
arpl
aad
fsubl
dec
fldt
imul
hlt
push
sahf
aad
ds
push
popf
fstpt
add
xor
pop
std
inc
push
fidivrs
test
loop
imul
cmc
sahf
add
sbbb
jno,pn
add
add
cmc
jg
pop
enter
or
insl
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
pushf
mov
dec
loope
invd
add
js
lcall
push
test
gs
cli
bound
ljmp
jmp
js
dec
pop
pop
ss
leave
scas
mov
nop
in
decb
sub
out
xchg
jo
or
jne
sarl
mov
es
push
loopne
gs
in
scas
fdivr
or
and
test
je
sbb
jecxz
scas
inc
cmc
das
shlb
xlat
lret
hlt
js
outsb
stc
roll
xchg
sub
mov
add
lcall
sub
fisttpll
testb
movsl
and
sahf
rcll
daa
loope
mov
testl
subb
pop
mov
aad
js
roll
jg
loop
push
xchg
dec
popl
les
inc
icebp
pop
cmp
aas
movsb
sbb
push
cmp
or
xchg
daa
js
std
jmp
pushf
ret
sbb
jnp
mov
add
lcall
ljmp
and
mov
jbe
das
aam
mov
cwtl
ja
gs
and
mov
mov
cltd
cwtl
movsb
data16
maxsd
pop
cmp
and
adc
push
lcall
push
loopne
ds
lret
sbb
jno
shrb
int3
or
xchg
sbb
in
inc
addr16
lcall
fwait
inc
add
dec
popa
and
addb
insb
cmpsb
push
mov
inc
pop
sbb
out
sti
xor
mov
or
cltd
stos
pop
cmp
inc
push
jmp
adc
das
add
mov
jne
mov
ljmp
cmc
push
cmpsb
jmp
repz
xchg
inc
pop
outsb
or
mov
insb
sbb
neg
subb
adc
cmc
imul
fcompl
sqrtps
lods
dec
mov
xor
jecxz
jl
fsubp
mov
pop
sbb
push
jns
xchg
xchg
out
out
push
aaa
push
and
adc
icebp
lahf
dec
adcl
rclb
sbbl
cwtl
rcrb
cmp
les
mov
xchg
mov
cmp
push
sbb
movsb
sub
ljmp
notb
clc
cmp
xlat
in
rcrb
inc
aad
gs
mov
and
adc
add
mov
cmp
inc
jmp
mov
jecxz
cwtl
scas
enter
js,pn
rclb
push
jge
push
push
test
pop
dec
fldenv
imul
dec
jbe
data16
and
adc
test
inc
jl
jns
outsb
jnp
ret
xlat
ret
data16
add
mov
int3
xchg
dec
sub
outsl
sahf
mov
das
test
xchg
mov
ja
adc
incb
loopne
iret
movsl
inc
call
jb
cli
daa
shll
xor
push
add
mov
movsl
ss
jno
jecxz
and
aas
xlat
lcall
inc
pop
fidivrs
inc
ljmp
xor
sbb
adc
stc
cmc
fxam
stc
cld
negl
pop
movsl
or
inc
jb
push
add
or
pop
outsl
xor
cmp
popa
orl
cmc
lods
xchg
sub
test
mov
hlt
cmpl
and
jmp
scas
push
pop
mov
dec
mov
push
outsb
push
roll
push
inc
cmp
rcll
jnp
xchg
and
push
add
lods
shlb
test
and
out
aam
fcompl
or
into
imul
into
mov
jb
or
add
aas
jp
cmp
cmp
dec
mov
les
mov
jl
inc
dec
adc
xchg
in
xchg
jl
bound
sub
leave
jnp
lret
nop
aam
sbb
pop
and
popa
add
xchg
inc
sub
neg
lods
or
dec
pop
push
enter
jge
lds
sbb
push
mov
xchg
loop
jg
repz
and
mov
or
insl
jmp
mov
xchg
mov
mov
sub
jnp
mov
xchg
jnp
mov
jle
outsb
lds
mov
filds
xchg
or
jo
pmaxub
out
js
and
js
lahf
inc
shrb
in
stos
insl
jae
jmp
jl
mov
mov
xchg
das
jg
sub
cli
shl
adc
adcl
add
stos
add
adc
out
push
dec
sahf
movsl
pop
js
das
or
js
push
ficomps
ljmp
scas
sub
loop
pushf
inc
es
xchg
addr16
dec
adc
inc
ficomps
dec
dec
jne
aas
movsb
scas
cli
or
sub
outsl
jne
sbb
imul
jae
std
jnp
push
jmp
adc
xchg
popa
sub
adc
lock
test
sti
fisubs
pop
popa
cli
iret
decl
rorb
fs
inc
and
xor
pushf
pop
dec
fldl
sbb
movsl
mov
lods
inc
xor
stc
scas
adc
fisubrl
inc
xchg
rol
ds
movb
xchg
cmp
pop
jmp
jg
je
mov
cld
les
js
push
enter
aas
pop
mov
pusha
cwtl
cmp
push
sub
xchg
adc
das
xchg
and
cmp
pop
aad
push
push
inc
push
push
mov
jno
mov
je
add
inc
pop
mov
dec
dec
imul
clc
pop
outsb
cwtl
int3
xlat
inc
xchg
fs
sbb
iret
scas
cld
addb
sbb
sub
es
dec
leave
mov
mov
mov
ror
hlt
adc
jl
pop
mov
push
lret
jp
cmp
dec
adc
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
xor
mov
invd
add
prefetch
sbbb
nop
dec
int
cmp
call
iret
cmp
mov
dec
ss
mov
jl
and
jno
lret
add
lahf
mov
daa
fwait
aas
test
cs
aad
iret
cmp
mov
or
and
mov
outsb
aaa
xor
inc
push
mov
dec
mov
popf
in
push
fistpll
pop
outsb
fsubrl
fimuls
add
xorb
pop
test
repnz
inc
fdivs
gs
lock
cmp
cmp
mov
gs
clc
push
jb
ret
nop
rolb
pop
and
imul
notl
popa
adc
out
or
push
xchg
sub
inc
xchg
cmp
addb
loop
out
xor
mov
push
movsb
stos
call
outsl
hlt
ret
mov
sub
pusha
sub
cmpsl
ljmp
fsubrs
cli
jg
insb
rorb
fsubl
std
add
mov
mov
mov
ljmp
ja
mov
mov
bound
and
jge
ljmp
mov
cmp
xchg
jecxz
xchg
iret
xor
out
cmc
sbb
cmp
in
incb
outsb
mov
je
or
cmp
xor
mov
push
fstpt
jae
dec
and
dec
mov
add
outsb
jno
repnz
aad
fwait
xor
xchg
cld
xor
jl
imul
test
outsl
shrb
pop
fnsave
xor
stc
add
mov
mov
dec
and
add
mov
mov
xchg
push
sbb
push
and
jp
call
daa
and
push
mov
sbb
and
sbb
or
imul
pop
sub
mull
cwtl
test
fiadds
or
mov
pop
jnp
mov
int
xchg
in
xchg
loop
data16
push
jg
loop
hlt
pop
mov
xchg
fsubr
loopne
out
lret
sbb
call
cmpsl
aam
mov
jae
fwait
bound
pop
js
xor
xchg
inc
jge
mov
dec
loop
add
sbbb
mov
stc
xchg
pop
jmp
cmpsb
mov
pop
mov
lahf
mov
inc
into
pop
insl
mov
mov
xor
jae
pop
mov
decb
icebp
jb
mov
test
adc
ret
mov
addr16
stc
cs
fsub
or
pop
jbe
xchg
jns
mov
xchg
adc
push
dec
lcall
cmp
arpl
xchg
xchg
test
or
aas
in
mov
inc
outsb
sar
sub
push
add
jg
push
in
cmp
aad
sbb
mov
xchg
ret
scas
lea
mov
adc
pop
jns
cwtl
dec
out
add
mov
jbe
mov
sub
stc
outsb
jcxz
roll
fdivrl
jmp
mov
pop
frstor
ds
xchg
mov
popa
push
fstps
mov
ret
and
push
xchg
mov
jl
mov
jmp
aad
xor
sbb
mov
mov
loopne
xor
push
insb
ds
and
jmp
loopne
push
neg
fadd
add
inc
aas
sahf
xchg
repnz
dec
out
aas
nop
cmpsl
call
mov
push
cmp
cs
cwtl
mov
adc
insl
xchg
call
mov
mov
push
stos
pop
ret
data16
inc
cmp
aam
push
push
mov
push
mov
pop
sbb
mov
pop
push
clc
hlt
xchg
jne,pn
cwtl
mov
idivl
push
inc
aam
jb
icebp
sahf
fistl
cmp
jne
or
push
and
lret
inc
lahf
js
or
inc
push
dec
dec
add
mov
out
push
push
pop
mov
cmpsl
inc
aad
push
aam
mov
incb
jno
mov
xchg
xchg
mov
cmp
cmp
pop
in
ljmp
xlat
fmull
push
mov
ds
pop
adc
dec
das
movsl
inc
lahf
test
data16
xor
hlt
in
push
pop
fidivrl
push
movsb
inc
std
sbb
aad
or
mov
subb
add
and
push
cli
gs
mov
cmp
xor
jmp
insl
push
adc
fnstsw
adc
push
fldl
or
repnz
xchg
outsb
push
lods
add
or
cmp
pushf
sub
add
and
in
cmp
or
add
jbe
int3
das
es
popf
mov
push
jecxz
sbb
mov
into
mov
daa
insb
cld
ss
pushf
stos
cmp
push
adc
pop
stc
cmp
and
adc
mov
andnps
jecxz
push
inc
sub
and
dec
jbe
mov
push
jg
cmp
add
aas
sbb
mov
fdivrp
mov
ljmp
divl
dec
cmp
cmpsb
fidivrl
xchg
outsl
adc
jno
decl
fistps
xchg
lea
xchg
loop
xchg
mov
std
nop
mov
jge
fnsave
pop
in
je
aad
int
jno,pt
cmpsb
xor
rcrb
in
jp
rclb
push
lahf
aas
cmc
cmp
fucomi
fdivs
mov
rcr
movsb
inc
movsl
inc
push
mov
and
loopne
add
das
or
lahf
aas
loop
out
mov
mov
cmp
fisttps
hlt
push
adc
popfw
and
push
pop
push
cmp
mov
jbe
addr16
subb
mov
dec
adc
ljmp
scas
in
in
adc
inc
test
sub
in
xchg
test
mov
mov
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
xchg
enter
add
fnstcw
mov
hlt
roll
mov
loope
add
movb
out
loope
push
cld
lahf
mov
dec
sub
pop
sub
popa
loop
or
jmp
lods
aad
pop
or
jg
jg
and
push
dec
shr
cmp
mov
testb
jecxz
daa
fs
lcall
out
add
add
adc
mov
sub
aas
mov
dec
test
push
fdivl
sub
push
test
test
mov
inc
add
inc
ficoml
and
ljmp
rcl
xchg
inc
inc
xchg
jno
aam
mov
push
sbb
or
and
cs
daa
push
insl
jge
xchg
push
outsl
fwait
xchg
ret
int3
sbb
outsb
aam
pop
stos
repz
idiv
adc
cs
jae
test
cmp
pop
std
sub
movntps
inc
sub
sbbb
push
sbb
or
xchg
adc
imul
inc
int
data16
scas
mov
jp
out
xorl
lret
and
mov
dec
arpl
inc
push
mov
in
imul
ret
inc
mov
and
out
ret
iret
sti
push
flds
mov
popf
jmp
test
cmpsl
cmp
add
mov
xchg
mov
imul
cmpsb
das
xchg
mov
pop
xor
fstpl
cmpsl
cmc
sbbl
mov
mov
lds
mov
jmp
mov
pop
adc
xor
inc
imull
xor
outsb
dec
mov
mov
movl
cli
jbe
test
xchg
hlt
sub
dec
cwtl
or
pop
mov
scas
push
dec
push
es
sub
cmp
fldcw
test
rolb
ret
push
lds
in
or
test
lahf
push
mov
sub
fcoml
in
rep
or
sbb
sub
mov
mov
daa
inc
mov
sarb
cmpsl
inc
mov
and
pop
jge
and
xor
sub
jnp
das
stos
jnp
inc
mov
mov
insl
std
icebp
pop
adc
xchg
fcmovnu
xor
sub
iret
xor
in
fidivrs
mov
sti
call
mov
adc
xchg
jp
add
add
and
or
leave
and
jle
push
sub
andb
inc
and
xchg
in
fisubrs
addr16
daa
sbb
xchg
adc
jle
add
fisttpl
addl
rcll
popl
ret
cli
add
mov
mov
or
inc
push
fistl
sbb
jmp
into
add
stos
fidivrs
push
pop
mov
push
icebp
jbe
jl
out
addl
lret
roll
sti
and
mov
jnp
sbb
pop
mov
jns
and
xor
icebp
sub
pusha
lret
jb
xchg
stc
pushf
jmp
pop
sub
adc
fcmovu
xor
in
or
ljmp
add
adc
rcrl
popf
jns
loopne
fiadds
scas
inc
dec
stos
mov
mov
pop
pusha
inc
push
sbb
or
decl
pop
mov
adc
jo
push
sub
add
xchg
enter
fcmovnbe
ds
sbb
xchg
in
int
lret
dec
fidivl
icebp
fidivrs
sbbl
mov
pusha
fnsave
shlb
pushf
sub
mov
pop
jg
arpl
or
push
scas
fimull
test
sub
lods
iret
xor
addr16
jg
push
inc
adc
mov
jl
shlb
rol
ret
je
jo
pop
push
inc
jle
mov
or
inc
lahf
cmp
lret
xor
cmp
test
mov
cmp
adc
jnp
jno
dec
movsl
xchg
dec
mov
scas
ljmp
mov
aas
push
adc
cmp
push
inc
mov
lcall
mov
scas
loop
jle
fwait
and
aas
mov
sbb
lods
je
scas
clc
int3
lret
pop
sub
repz
pop
loope
push
jo
daa
xchg
imul
xchg
sarl
subl
jno
push
xchg
lds
mov
aas
out
ret
pop
movsl
xchg
xchg
das
popa
mov
hlt
insl
fdivrs
pop
testb
sub
adc
adc
dec
cmp
jno
jmp
mov
sbb
sbb
ja
repz
xchg
fwait
push
ds
fdivrs
inc
add
inc
fcmove
xor
lret
dec
jns
sub
push
xor
adc
xchg
and
popa
pop
and
cmp
orb
subb
orl
lcall
mov
leave
mov
mov
ljmp
mov
dec
or
jecxz
ret
lods
movsl
notl
pop
popf
mov
aad
jmp
imull
shlb
insb
mov
push
pop
shrb
jl
xchg
iret
jo
popf
jmp
mov
push
mov
repnz
push
mov
les
add
es
jae
cs
popa
sbb
xchg
cmc
rcrl
test
xor
das
mov
loop
pop
test
out
push
mov
popa
xchg
leave
call
or
mov
pop
fs
dec
pop
add
pop
arpl
xchg
iret
pop
and
xlat
xchg
scas
ret
lcall
xchg
into
mov
pop
scas
setg
mov
dec
cmpsl
mulb
dec
push
push
adcl
fs
jge
pop
gs
and
cmp
pushf
sub
les
mov
add
fdivrs
jnp
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
cmp
test
movq
xor
dec
push
mov
out
xchg
xchg
sub
mov
out
dec
inc
lahf
mov
xchg
imul
loop
rcr
push
cmp
fwait
insl
mov
ljmp
pop
rcrl
movsb
in
dec
and
add
imul
inc
mov
aad
aaa
dec
cmp
enter
mov
jo
jae
pop
arpl
mov
dec
or
or
lds
leave
add
stos
xor
aad
aam
sub
dec
stos
inc
orl
adc
stos
and
mov
lock
jae
add
mov
cli
lock
mov
aam
orl
cli
xor
mov
imul
in
fbstp
out
scas
cwtl
pop
cmp
adc
mov
jns
jbe
iret
jbe
and
add
stos
mov
shr
std
cmp
into
test
sub
xor
fsubrl
shrb
je
jmp
je
insl
mov
xchg
in
lret
test
fldl
sub
xor
add
cmp
mov
mov
xor
pop
mov
or
cmpsl
fnstenv
and
dec
out
jle
fstl
ljmp
stos
mov
xchg
push
xchg
movsl
orb
int
xchg
or
stos
mov
inc
sub
je
enter
std
ss
dec
or
mov
rclb
and
xchg
mov
in
dec
bound
div
negl
es
shll
fst
cltd
push
sub
shll
daa
test
dec
push
mov
subb
lods
mov
ljmp
xchg
add
fcom
mov
and
jle
dec
ret
sub
test
stos
out
jns
or
and
jecxz
mov
pop
mov
fisttpl
sbb
stos
pushf
inc
or
pop
inc
adcb
inc
iret
dec
mov
outsl
insb
add
sbb
outsl
mov
lea
jp,pt
bound
imul
push
fcmovne
mov
mov
pop
pushf
mov
inc
negl
movsl
lcall
push
rcrb
and
jg
outsb
mov
mov
lcall
out
faddl
xor
int
fnstcw
das
inc
rcrl
cmc
adc
push
dec
xchg
popa
mov
inc
jl
outsb
je
cwtl
arpl
mov
movl
mov
daa
pop
dec
cmpsb
in
mov
cmc
add
sub
ss
sbb
out
jmp
adc
fucomi
and
fneni(8087
es
xchg
in
inc
pop
ret
cld
arpl
or
push
sbb
xchg
xor
push
addb
fabs
adc
repnz
xor
notl
aad
popa
ficompl
push
xchg
dec
mov
adc
xchg
fcoms
push
aad
out
call
inc
xor
mov
or
lret
jle
into
scas
stc
xlat
lcall
cmp
dec
inc
sbb
test
fldl
sub
andl
adc
or
push
and
add
jnp
pusha
adc
punpcklwd
xchg
jns
out
loope
test
push
icebp
sahf
fildll
xorl
xor
arpl
sbb
sbb
inc
in
das
jecxz
cmp
jbe
mov
add
mov
fwait
ret
ss
jle
xor
add
ja
cli
jl
fstpt
add
pop
out
pop
sub
ljmp
push
adc
repnz
push
mov
xchg
in
scas
mov
ret
push
lret
push
pushf
cmp
bound
testb
cltd
sbb
sbb
enter
insl
adc
sbb
jmp
mull
adc
js
rorb
insl
idiv
gs
insl
daa
mov
mov
repz
movsl
add
xor
and
test
xor
daa
and
push
std
arpl
push
sarb
out
sub
cmc
push
xchg
xchg
or
pop
or
add
mov
in
inc
in
in
enter
loop
adc
hlt
mov
scas
mov
or
lock
push
jle
inc
fdiv
dec
shlb
sub
mov
dec
cmpsl
push
dec
sbb
ret
dec
inc
cltd
lahf
fwait
mov
jp
jno
xor
clc
lock
or
hlt
popf
ret
cli
pop
in
jae
and
into
data16
inc
or
in
add
xor
jg
sub
js
fld
std
push
adcl
aad
add
jge
dec
frndint
pusha
mov
mov
pause
pextrw
sub
shll
imul
shll
rcrb
pop
sub
xor
or
lods
aas
testl
mov
icebp
jp
and
pop
popf
sub
aam
ljmp
pop
iret
pop
push
push
lock
mov
stos
lods
push
aam
mov
cmp
adcb
outsl
push
push
loope
insl
cmp
shrl
out
mov
aaa
clc
std
inc
add
cmp
dec
mov
out
inc
mov
inc
insl
je
and
sti
fmul
push
fucomi
pop
jae
mov
sbb
icebp
xor
xchg
add
mov
sub
sbb
ja
and
out
mov
hlt
add
add
repz
dec
test
xchg
jb
cmp
mov
fistl
adc
or
adc
jno
lods
ret
shll
mov
jo
pop
adc
cli
enter
loopne
mov
push
daa
imul
push
push
pop
test
insl
sti
scas
lea
lcall
cmp
xchg
stc
jmp
mov
xchg
mov
fbld
invd
add
paddw
cltd
add
das
fsubrl
mov
out
scas
and
and
xchg
popa
nop
add
clc
hlt
or
lret
gs
xor
pusha
dec
shl
mov
cmp
stos
scas
dec
jge
mov
pop
int
sbb
dec
push
mov
xchg
xchg
mov
in
mov
jecxz
xchg
lock
fnstsw
movsl
icebp
mov
adc
cmp
mov
xorb
push
or
popf
pop
in
cli
mov
push
dec
jecxz
jns
inc
or
test
push
and
adc
sub
std
cmp
lods
popa
enter
xchg
cmc
cmpsb
sub
push
cmp
sbb
push
cmc
incl
sbb
mov
cwtl
scas
xor
push
out
jno
ljmp
push
cwtl
mov
dec
call
lcall
lds
fdivl
jnp
lock
pop
add
imul
xor
iret
cmp
and
loope
xchg
cmp
push
fwait
pop
mov
pusha
int
fistpl
push
xor
sbb
mov
push
add
pop
inc
fwait
jg
push
mov
loopne
or
ja
loopne
imul
xchg
int3
push
mov
div
sub
inc
mov
xor
mov
clc
out
imul
sbb
or
ret
push
sub
sbb
data16
cmp
mov
cli
or
in
adc
pop
lret
add
push
cmc
and
pop
push
cmp
and
mov
push
pushf
out
int3
pushf
notl
ficomps
pop
mov
stos
or
jg
xchg
push
aaa
mov
xor
dec
cmp
sbb
add
movsb
mov
adc
push
sbb
sub
cmpsb
mov
add
out
jnp
or
pop
sbb
xchg
cmc
ja
jmp
add
push
leave
shl
pushl
addb
aas
sub
cli
sub
test
out
ficomps
loope
sti
inc
jl
outsl
mov
jle
push
mulb
mov
out
rcr
rep
jne
pushf
out
push
cs
shlb
cld
jbe
shrb
and
sbbl
adc
fcompl
mov
pop
sub
outsb
dec
aad
rclb
mov
and
and
sub
daa
jb
mov
lret
es
aaa
jmp
pmaxsw
lock
cmp
das
mov
pop
out
inc
das
add
clc
push
or
adc
pushf
loop
scas
jbe
jns
jne
lahf
es
xor
pop
or
out
xchg
leave
pop
add
cmpsl
and
jecxz
mov
ljmp
xlat
xor
imul
test
cwtl
adc
and
jmp
and
sub
int3
sbb
xchg
sbb
mov
das
push
mov
dec
sbb
test
mov
dec
cs
xor
out
ja
cmpsl
adc
mov
stos
pop
lcall
push
add
addr16
pushf
pushfw
jne
enter
repnz
jbe
xchg
pusha
js
jne
jne
ja
dec
xchg
add
insb
sub
repnz
std
adc
fistl
xor
inc
shlb
xor
call
sar
pop
jmp
fcoml
cmp
cs
push
insb
sbb
ds
call
pop
jb
imul
loope
xor
outsl
or
jge
cmp
fildll
lcall
sub
inc
xchg
push
fucom
jb
es
ja
dec
dec
mov
mov
jecxz
fs
mov
popf
mov
loop
cltd
mov
in
mov
mov
mov
into
stc
and
xchg
sub
xchg
imul
fwait
push
cmp
add
adc
loope
pop
out
fimull
adc
adc
pop
nop
nop
jbe
orl
mov
xor
loope
pop
dec
rcr
add
mov
jns
stc
iret
aam
movsl
dec
inc
or
push
popf
aaa
loopne
lea
imull
pusha
fistps
lods
cmp
pop
je
and
nop
xor
xchg
jbe
cmp
stc
scas
bound
mov
inc
scas
push
sbb
dec
imul
dec
pop
add
leave
call
leave
inc
icebp
pop
dec
lcall
cmp
mov
sahf
out
std
in
add
mov
movsb
mov
sub
das
xchg
sti
mov
lret
mov
cmp
mov
jbe
or
or
xor
mov
jbe
pop
adc
add
pusha
sbb
lret
les
loopne
leave
xchg
in
addr16
mov
xchg
mov
popf
fildl
dec
enter
jl
dec
int3
fimull
iret
inc
scas
push
push
fnstenv
cmp
test
fidivl
sti
inc
jp
mov
lcall
sub
and
loop
aaa
es
lret
popf
not
inc
cwtl
xchg
loope
cli
lds
jmp
das
mov
popf
jns
pop
dec
jmp
add
je
outsb
and
xor
inc
lret
push
jo
jo
shlb
outsb
test
pop
daa
mov
dec
cs
movsl
ja
mov
ljmp
push
lret
sti
jle
pop
mov
xchg
inc
dec
jnp
or
or
test
fldcw
cli
outsl
xor
lcall
mov
sbb
aad
push
test
push
cmpsl
pop
pusha
icebp
sbb
xchg
pop
enter
arpl
inc
daa
rcll
jmp
andl
or
subl
jne
cmpl
xchg
hlt
ret
inc
dec
mov
mov
sub
cmp
xchg
xchg
aad
mov
xor
inc
popa
add
push
addr16
and
inc
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
add
shld
dec
out
roll
into
addr16
inc
dec
mov
cmp
iret
ja
movsb
sub
xor
aad
xor
lret
rcr
mov
mov
outsl
cmp
add
inc
popf
or
mov
push
adc
sti
gs
adc
iret
and
dec
add
insl
add
fsubrs
lods
inc
jo
xlat
push
out
push
call
je
push
pop
push
mov
add
push
loope
in
or
xor
enter
dec
mov
mov
mov
sub
out
loopnew
mov
out
call
movsb
add
and
loop
call
xchg
jecxz
enter
dec
scas
xchg
adc
out
aam
pop
scas
into
inc
mov
pop
dec
shll
mov
add
cmp
data16
adc
test
sti
test
out
cmc
mov
cwtl
ficoml
je
ret
scas
inc
sub
out
jno
out
lods
cwtl
test
jae
mov
sub
adc
test
pop
mov
xchg
repnz
sub
jo
cmpsl
outsl
push
ret
cwtl
jne
push
add
sub
inc
lock
jmp
call
movsb
xchg
dec
js
aas
fidivs
add
fs
cmc
xor
xchg
lods
mov
les
scas
xor
subl
mov
mov
push
pusha
cmc
or
je
sbb
pop
insl
sub
mov
sbb
sub
xor
insb
aaa
lods
push
push
pop
adc
add
xor
ret
pop
cmp
mov
dec
lret
mov
cmp
mov
ret
xor
sub
loope
cmpl
cmpsl
push
pop
add
jmp
clc
idiv
xchg
mov
divb
dec
lea
mov
mov
cli
movq
stc
lods
inc
in
mov
test
lods
and
add
inc
push
loopne
call
rorb
jecxz
movsl
mov
cmpb
mov
in
xor
push
and
aas
and
movsb
popa
mov
fucomp
adc
sub
add
xor
rolb
inc
mov
mov
mov
js
mov
mov
and
pop
ds
lret
ret
and
in
test
adc
mov
fidivrl
inc
sahf
scas
sbb
aam
pop
jl
jb
dec
stos
lret
idivb
dec
int
inc
or
jbe
push
inc
adc
cwtl
xlat
lds
cmpl
fwait
sub
mov
sub
icebp
mov
cwtl
iret
xor
fisubrl
fcompl
push
es
push
and
daa
std
cltd
orb
inc
cmpb
mov
ljmp
cwtl
mov
daa
mov
je
test
xor
push
mov
cmp
aam
mov
cs
aaa
jb
mov
adc
xlat
xchg
pop
punpckhwd
push
xor
inc
mov
cmp
mov
adc
add
xchg
jl
mov
pop
dec
or
pop
enter
xor
or
push
xchg
fs
inc
shrl
xchg
icebp
dec
rcrb
mov
xchg
inc
aad
roll
and
mov
push
adc
aas
pop
iret
loope
xchg
fbld
push
sbb
mov
or
xchg
mov
or
cmp
pop
movsb
fistl
mov
adc
xchg
int
adc
movsb
lret
add
stos
xor
pop
dec
lahf
mov
mov
lret
int3
xor
mov
mov
sub
loop
inc
cmpsl
aas
cmpsb
fsts
pop
subb
cwtl
subb
mov
fwait
inc
rcrb
lcall
mov
add
aaa
jmp
push
aad
imul
rorl
test
add
push
jge
sbb
cli
xchg
in
fistpll
mov
xor
sbb
push
jle
cltd
cltd
scas
scas
test
addb
lea
test
add
inc
rorb
dec
lea
push
add
lret
sub
cmp
mov
pop
jns
sub
in
xor
push
pop
iret
push
pop
mov
arpl
std
lds
dec
xor
or
test
and
cld
and
dec
push
push
adc
or
rorb
pop
test
jmp
and
inc
cltd
andb
daa
arpl
out
lahf
jmp
in
cmp
sub
or
popf
loopne
ret
adc
nop
stos
push
mov
fsubl
sub
notb
ror
mov
ja
hlt
or
jge
bnd
jnp
cld
call
add
pop
inc
cmp
mov
or
mov
lret
das
push
xor
out
repnz
lock
mov
pop
call
pushf
xchg
int
sar
adc
sub
test
rcrb
mov
pop
dec
and
cmpsb
adc
jne
lcall
mov
pusha
insl
out
xchg
es
daa
or
xchg
mov
jecxz
adc
add
iret
decl
pushf
ret
pop
sub
rclb
jge
lea
cmp
push
cs
enter
xchg
xchg
inc
leave
out
dec
shll
in
xor
lret
mov
xor
cmp
cmpl
jp
clc
adc
sbb
jns
sbb
adc
ss
test
inc
push
add
cmpsb
adc
sti
clc
enter
xor
sbbl
movaps
out
add
jmp
xor
out
fst
loope
add
mov
fucom
test
push
mov
mov
sbb
fsubrs
and
int
outsb
pop
ljmp
cltd
push
add
repnz
adc
mov
das
pusha
out
xchg
mov
loope
icebp
sub
or
xchg
jae
add
mov
orl
jmp
insb
lods
push
repz
je
xor
or
push
xchg
or
xor
mov
leave
mov
jge
cwtl
sub
and
int3
cmp
into
ljmp
lcall
movsl
gs
fs
or
or
mov
stc
pop
mov
push
xchg
sub
dec
push
xchg
sbb
push
scas
pusha
jmp
in
data16
add
mov
xor
cmp
cmp
imull
imul
jno
dec
addb
dec
mov
sbb
adc
jbe
inc
in
xchg
outsb
ja
mov
sbb
jb
pop
pusha
in
test
jp
push
lds
out
aas
or
mov
pop
push
fwait
inc
iret
xchg
pop
ret
pop
inc
ds
ss
out
push
repnz
out
aad
add
xor
pop
je
lock
fists
mov
push
popa
int3
xlat
adc
fldenv
lret
push
and
push
sbb
cld
push
mov
jnp
fstpl
push
out
jmp
dec
into
adc
or
jbe
push
and
adc
xchg
insb
scas
adc
in
call
sahf
stc
jnp
test
out
sti
sub
shlb
or
mov
imul
rcrl
test
dec
add
test
inc
or
push
cli
out
inc
addr16
push
aas
repz
out
xor
sahf
xchg
lahf
jne
add
mov
xor
or
orb
repnz
pop
in
icebp
and
pop
and
loopne
push
mov
cmp
ljmp
loopne
jns
fstpt
sahf
push
insl
inc
dec
pusha
jno
or
or
cld
movsb
cli
xchg
das
push
in
loope
hlt
movsl
xor
test
nop
test
test
sahf
iret
test
ficomps
aam
jb
fisubs
mov
rorl
int3
test
or
loop
lea
test
and
popa
push
pop
call
roll
jno
push
xor
aad
mov
call
aad
rcr
mov
shl
jo
jns
lods
xchg
insb
adc
and
xchg
cld
cmc
ja
xor
aad
sahf
arpl
mov
inc
cmp
mov
pop
test
cmp
pop
and
shll
or
mov
sbb
add
popf
outsl
in
je
mov
pop
xor
pushf
xchg
lock
cmp
out
cmp
pop
shll
aaa
xor
enter
xchg
bnd
inc
cmp
daa
clc
push
stc
fildll
das
add
in
jmp
jne
cmpsb
es
repnz
jns
int3
cmp
cld
push
xchg
and
arpl
in
loope
cmp
shrb
fdiv
sbb
ret
int3
out
test
nop
xchg
cli
loope
mov
shll
sti
int
out
call
loope
mov
orl
je
push
sub
mov
jmp
xchg
xchg
popf
add
xor
mov
test
lea
aam
sbb
lret
add
xchg
mov
push
or
aad
cmp
mov
int3
shrb
iret
cmp
dec
or
mov
mov
and
loop
mov
pop
lods
add
mov
sahf
jle
leave
xor
pop
lds
call
fs
int
repnz
jo
add
xchg
arpl
mov
sarl
mov
or
mov
jns
mov
jmp
jl
add
stos
cld
sbb
fsubs
out
mov
mov
adc
int
dec
push
les
add
data16
ret
cmp
movsl
sub
test
mov
cmp
pop
dec
in
das
loopne
imul
js
mov
sub
mov
pop
mov
cmpsl
jnp
mov
popf
out
cmp
jo
ficoml
and
idivb
stc
inc
adc
shrl
int
out
hlt
sbb
jbe
pop
pop
push
jg
leave
lret
mov
or
icebp
pushf
xchg
push
adc
repz
xchg
push
ficompl
and
aaa
out
movsb
out
xchg
ss
sbb
call
cmp
data16
aam
mov
mov
add
sbb
sub
and
hlt
pop
shrb
outsb
cwtl
lret
roll
mov
mov
xchg
push
shrl
repnz
insl
int3
lods
pushf
int
imul
cmp
pop
mov
jmp
loopne
push
cmp
loopne
pop
psubw
jle
aaa
mov
inc
mov
gs
mov
dec
add
out
outsl
or
dec
mov
mov
nop
lock
cmpl
mov
inc
imul
ja
jl
out
mov
popa
mov
cmc
adc
mov
jo
shll
dec
mov
sbb
mov
jge
out
sub
fninit
inc
push
jo
outsb
sub
xor
sbb
jle
aas
lcall
nop
sbb
or
fidivs
mov
sbb
mov
test
loope
dec
popa
xlat
adc
push
ss
pop
gs
or
mov
ficoml
sbb
cwtl
jae
mov
mov
jo
push
xor
pop
popf
fcmovu
jne
cs
add
and
xchg
pop
dec
pop
mov
xchg
adc
cmpsl
inc
cmpsb
mov
inc
jp
push
cld
jno
jns
cli
jle
stos
sub
sbb
mov
or
jle
pop
stos
dec
arpl
cltd
in
fdivrs
movsb
sbb
pop
fdivr
add
je
in
outsb
out
int
testb
fistpl
push
cwtl
aaa
call
pop
loope
or
mov
je
test
enter
data16
dec
jl
sbb
andb
sar
xchg
into
cwtl
scas
and
aaa
outsl
push
sbb
inc
and
jne
jne
cmp
push
sar
push
and
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
ret
mov
add
je
dec
sub
pop
int3
data16
xor
std
imul
movsb
call
cltd
push
push
rcrl
xchg
pop
call
jns
nop
xor
xchg
xchg
inc
int3
mov
xchg
outsb
loop
js
loope
lahf
cmp
cmp
mov
fisubl
sti
pop
or
cltd
mov
repz
pushl
std
ss
adc
out
outsb
and
inc
add
sahf
cmpsl
cmp
inc
and
mov
lea
aaa
dec
dec
and
dec
jl
pop
cmpsb
mov
xchg
add
sti
pop
fcomp
push
pop
adc
arpl
test
les
cmpb
jb
and
rorl
inc
push
mov
sbb
cwtl
mov
test
sub
xor
les
ds
dec
notb
bound
test
and
ss
fldt
cmpsb
sbb
lods
scas
and
or
bound
mov
xor
pushf
cmp
dec
shlb
aaa
pop
and
mov
push
jo
mov
xchg
daa
cltd
adc
sbb
movsb
push
mov
fisubrl
xor
xchg
push
into
adc
cltd
lret
xor
or
icebp
pop
or
inc
xchg
daa
leave
add
movsl
push
ds
jne
inc
or
out
stos
xchg
outsl
push
jns
sub
sbb
inc
es
call
mov
stos
daa
xor
fldt
or
idivb
in
outsl
adcl
ds
push
push
push
push
cmp
popf
and
mov
test
shrl
mov
mov
enter
jecxz
and
or
iret
xchg
push
daa
dec
jmp
mov
jnp
in
data16
mov
xchg
xchg
push
xchg
push
lds
aas
cmp
cmovnp
imull
clc
xor
js
xchg
xchg
mov
push
rcll
lea
and
lret
add
cmp
or
mov
push
imul
mov
scas
pop
dec
aaa
xor
das
sbb
out
rcrl
jmp
or
pusha
icebp
xchg
pop
int
enter
das
pop
faddp
dec
jecxz
std
sub
push
mov
ljmp
xchg
jp
rcrl
pop
jmp
or
aas
in
das
pop
call
mov
loop
test
jmp
mov
cmp
cmp
pop
arpl
pop
subb
sbb
mov
std
push
mov
mov
outsl
jne
notb
outsb
jle
and
cmpb
push
enter
jmp
sbb
or
xchg
shll
xchg
cmp
cli
inc
sbb
sarb
push
xor
inc
pop
imul
mov
fisubl
in
jno
sbb
int
ljmp
cmc
or
pop
inc
loope
stc
mov
pop
stos
add
push
jle
or
jo
cmp
icebp
push
xchg
cli
cmp
push
ja
cmp
outsl
sbb
clc
out
sbb
sub
loopne
mov
ljmp
shlb
mov
movups
push
sbb
cmp
xchg
adcl
loope
pop
push
sub
pop
jle
mov
push
adc
sbbl
adc
add
aas
shll
aas
bound
or
repz
cltd
jb
mov
mov
sarb
filds
xchg
mov
fidivs
jb
fs
xor
mov
push
xor
mov
sub
fidivl
pop
cmp
idiv
test
mov
fidivl
imul
clc
push
subl
iret
inc
xchg
xor
fildl
test
dec
hlt
push
push
aaa
test
sub
hlt
dec
lods
push
ret
fs
iret
xchg
stc
sti
jle
pop
sub
fs
mov
or
sbb
in
push
orl
fcompl
subb
xor
cmp
sarl
xchg
push
inc
push
jae
aam
or
gs
and
and
or
cmp
sbb
mov
out
stos
repnz
imul
les
das
out
lods
imul
mov
and
jnp
dec
adc
in
pop
push
mov
xor
add
xor
adc
lret
out
outsb
lds
sub
xor
fwait
jnp
fdivl
pop
jno
pop
mov
pop
or
aad
inc
push
dec
jns
sbb
outsb
and
and
imul
inc
sub
out
mov
loop
sub
sub
data16
mov
jae,pt
push
and
lods
sbbl
cmp
lods
and
mov
imul
incb
fdivrs
and
ret
cmp
roll
pop
ss
repnz
idivl
addr16
fcomp
loope
add
xor
lret
int3
ja
mov
ret
mov
fwait
movb
fistps
sbb
in
arpl
or
dec
fwait
push
and
lods
sub
push
pop
jb
and
pop
add
xchg
dec
pop
xchg
out
adc
lods
pop
dec
scas
loopne
xor
out
add
inc
dec
fsts
and
subl
jns
jecxz
je
aad
std
imul
mov
gs
adc
xor
jmp
popa
in
ret
inc
adc
xchg
xchg
shlb
lds
add
xor
data16
jge
or
mov
jb
jno
or
ljmp
cmp
divb
shlb
or
xchg
mov
mov
mov
sub
leave
mov
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
por
push
nop
or
dec
xor
dec
insl
je
shll
cmp
test
and
mov
push
and
adcl
arpl
addr16
test
jecxz
pop
push
int3
mov
push
mov
out
pop
outsb
dec
mov
push
adc
in
pop
xor
fcmovu
sbb
paddd
and
pop
stc
adc
push
mov
xchg
rorb
sub
pop
xor
xor
mov
inc
or
mov
lods
hlt
movsl
outsl
dec
lcall
mov
or
mov
inc
xlat
pop
loope
les
pop
rcl
or
dec
or
push
mov
icebp
scas
or
cli
out
scas
pop
jno
add
das
mov
movsl
ds
mov
cwtl
inc
jge
xchg
dec
adc
jno
andb
xchg
xlat
hlt
jmp
incb
xlat
dec
in
fcmovnbe
mov
push
xor
sub
aam
push
add
xchg
repz
stc
xchg
lahf
cmp
push
ret
test
lds
cmpps
xor
pop
sbb
push
pop
pushf
pop
xor
in
sbb
icebp
imull
add
imull
add
sbb
popf
dec
pop
test
mov
neg
iret
ds
fsubs
sub
cmovl
sbb
outsl
inc
cwtl
pop
imul
es
inc
es
mov
iret
and
sbb
xor
mov
pop
pop
test
std
aas
sub
push
in
iret
and
fwait
stos
ds
pop
subl
aaa
popf
adc
decl
push
andb
cmpsb
outsb
adcl
hlt
jns
insl
dec
repnz
int
inc
dec
sub
mov
sbb
cmpsb
fs
cwtl
dec
repnz
das
cltd
pop
jnp
cld
std
sbb
mov
loop
xchg
fs
inc
inc
outsl
or
in
imul
test
test
aas
addb
loopne
mov
mov
mov
sub
lahf
jl
shlb
pop
and
fldt
and
sub
sub
mov
rcll
dec
or
xor
push
clc
pop
in
out
push
or
idivb
jecxz
mov
adc
les
inc
add
into
rcrb
jno
inc
jmp
adc
sti
mov
iret
sub
adc
xchg
filds
mov
jmp
xchg
mov
rorb
xlat
lret
int3
pop
out
or
jns
adc
leave
jg
loopne
sub
jp
or
div
int3
imul
imul
fisubrl
imull
cmpsl
jmp
mov
mov
add
adc
mov
mov
cmp
lret
sbb
sarb
insb
fs
and
jge
pop
sbb
imul
push
mov
aaa
push
xchg
xor
push
inc
outsb
icebp
push
cwtl
jae
and
stc
mov
inc
cwtl
cwtl
rcrb
sub
das
mov
loope
gs
mov
sbb
inc
dec
daa
fstl
xor
in
outsl
mov
add
and
pop
test
shl
xor
cld
sbb
add
nop
mov
icebp
adc
inc
smsw
test
in
pop
xchg
dec
pop
popa
repnz
mov
mov
ss
mov
cmp
jno
test
adc
pop
dec
stos
xchg
ja
lret
mov
lcall
lods
add
jmp
repnz
aas
out
test
cmp
ret
jns
pop
sbb
loopne
dec
repnz
or
mov
push
pop
jl
mov
push
pop
jmp
ss
in
mov
push
bound
mov
lret
or
xor
push
sub
loopne
rcrl
and
sub
cmpsb
mov
push
int3
lahf
fistl
mov
pop
nop
fwait
pop
popa
cmp
testl
xor
xchg
mov
mov
pop
out
imul
fsts
mov
xor
pop
call
pop
sti
mov
push
fcomps
lods
frstor
mov
mov
add
out
scas
fnstenv
fdiv
cmpsl
dec
incl
cmp
xorl
xchg
push
idivb
dec
pop
std
ret
in
mov
ljmp
movsl
pop
jns
inc
mulb
add
or
loopew
lods
xadd
adc
mov
movsl
push
sbb
adc
mov
xor
cmp
pop
das
sub
adc
or
ljmp
hlt
test
adc
cmpsl
fninit
jle
es
adc
ret
pop
leave
jecxz
mov
mov
dec
out
mov
xor
adc
push
out
or
mov
dec
inc
mov
stos
sbb
push
stc
mov
dec
lcall
sti
leave
push
pop
fadds
pop
mov
pop
jecxz
cwtl
out
insb
cmpsl
xorl
bound
shrl
mov
mov
jl
inc
sahf
loop
mov
dec
sbb
pop
add
dec
xchg
movsb
xchg
jb
bound
jnp
dec
jge
pop
sahf
ret
sbb
das
pushf
hlt
jp
jo
pop
adc
sbb
pop
movsl
and
cmp
clc
xor
insl
cmc
ja
jg
cmpb
sbb
cmp
neg
add
sahf
outsb
push
cmp
aad
insl
sub
jbe
adc
inc
cmp
inc
xlat
dec
cld
int3
cmpsl
in
jae
xchg
xor
cwtl
lods
sbb
mov
and
or
test
pextrw
add
notb
mov
repnz
daa
lods
and
jmp
arpl
cld
jg
xlat
dec
ljmp
xchg
stos
adc
les
inc
andl
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
sbb
inc
enter
or
montmul
cmpsb
rcr
cld
loop
mov
les
cmp
stos
lcall
test
mov
xchg
and
aad
mov
cwtl
inc
push
fistps
sub
jae
cli
jns
jns
push
add
addr16
mov
call
dec
pushf
test
rorl
cmp
push
sub
lea
adc
shl
in
inc
jecxz
pop
push
or
jmp
mov
and
sbb
cs
lea
adcl
mov
push
repnz
scas
iret
sbb
mov
push
loopne
sub
push
ret
mov
pop
sbb
ljmp
mov
lahf
adc
sbb
cwtl
inc
inc
lds
fadd
mov
idiv
shrd
lods
sarb
aaa
sub
lods
sub
xchg
jne
loopne
shll
or
jg
fsubrl
and
adc
addr16
rolb
push
sub
push
sbb
lea
and
sub
sub
xor
and
imul
outsb
dec
cmp
mov
mov
sarb
adc
aas
add
jl
push
mov
mov
push
jmp
mov
popa
das
inc
cs
sub
jnp
jno
push
push
add
out
popf
or
xor
loopne
ret
aaa
outsb
mov
inc
mov
daa
test
loop
outsb
inc
mov
jne
xor
fdivr
ljmp
adc
insl
mov
fcomps
mov
in
push
mov
add
gs
add
inc
addr16
shlb
cmpsb
repnz
je
mov
xor
inc
lret
scas
sbb
push
or
xlat
std
or
adc
call
xchg
aas
cmp
lds
loope
call
inc
mov
xor
sub
sub
mov
xor
cmp
loopne
jmp
jecxz
add
or
cld
imull
sbb
push
cmp
popf
jmp
dec
jne
imull
cmpsl
dec
mov
adc
adc
int3
jmp
and
sbb
mov
cmp
popf
movsl
popa
cmpsl
cmp
ret
inc
shrb
pop
mov
xchg
xchg
mov
inc
cmp
fsubrs
pushf
mov
jp
test
cmpsl
sub
test
jne
jb
jmp
pop
leave
push
stc
xor
or
jge
sub
mov
dec
pusha
out
cld
into
sbb
cmp
jp
fcoml
fisubl
fwait
mov
outsl
push
mov
or
adc
dec
shlb
sbbl
cmpb
push
xor
aam
ret
imul
xchg
dec
xchg
dec
ret
pop
adc
jnp
shll
insb
movb
jnp
addb
inc
sub
into
bound
push
add
adc
inc
cld
xor
jae
jae
jl
xor
test
lea
imul
inc
ljmp
xor
xorb
jae
cmpsb
fwait
inc
pop
mov
outsb
mov
add
xchg
adc
clc
inc
test
or
pushf
lret
mov
add
cmp
loop
fdivrs
int3
out
push
in
jne
pop
imul
cmp
cmp
sub
mov
mov
int
mov
int3
imul
xchg
inc
xor
ret
xchg
mov
js
sub
mov
sbb
inc
pop
or
popf
mov
push
mov
push
hlt
cs
std
pop
lret
sahf
rorl
in
hlt
idivb
inc
mov
mov
mov
mov
dec
scas
sbb
mov
flds
ljmp
mov
jle
mov
dec
faddl
add
daa
repz
pop
scas
push
cld
scas
fmuls
xchg
sbb
push
inc
inc
cld
cltd
test
fwait
xchg
loop
add
jne
iret
pusha
pop
shll
loop
sahf
pop
mov
jae
cltd
data16
push
sarb
and
stc
leave
mov
or
pop
pop
rcll
mov
in
test
arpl
sbb
stos
sbb
gs
leave
or
test
xchg
mov
jns
fidivrl
cmpsl
xchg
push
hlt
cmc
dec
out
lods
and
ja
call
push
fdivr
pop
push
lcall
cmp
jg
enter
repnz
cld
xor
push
inc
add
sbb
xchg
inc
loop
pusha
out
inc
dec
sub
in
and
mov
int
cmp
inc
das
ficoml
adc
sub
movsl
adc
jno
das
shrb
bnd
in
push
jmp
dec
out
xlat
sub
sbb
jne
mov
inc
inc
sbb
in
jo
icebp
ret
adc
sub
xchg
subl
push
outsb
push
or
add
in
dec
cld
adc
and
lcall
jecxz
jp
js
sub
sub
adc
sub
inc
push
adc
ret
loop
ret
out
and
filds
lock
subb
jbe
mov
mov
loop
std
and
pop
pop
push
and
loop
mov
rcll
aas
inc
mov
int3
jb
mov
xchg
and
mov
ret
in
aaa
push
loope
js
adc
loope
cmp
lods
push
xor
fsts
push
jge
cmp
pop
aad
int3
inc
mov
mov
push
xor
aad
or
xchg
or
adc
test
add
ja
inc
loopne
cmp
and
sub
jne
idiv
cmpsl
sub
das
addr16
inc
jbe
pop
jne
mov
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
mov
int3
xchg
dec
invd
add
movd
or
dec
fstpt
and
sub
popa
push
outsl
pop
pop
cs
in
or
lea
test
xchg
popf
xor
insb
mov
lea
out
sbb
xor
jmp
dec
fistpl
lods
gs
cmc
rorl
outsl
inc
mov
int
std
movsb
fwait
cmc
mov
dec
xor
popf
inc
or
lea
testl
jne
sti
loopne
flds
adc
sbb
popf
jmp
push
sub
sub
inc
mov
das
fcomi
lods
dec
push
lods
mov
pop
inc
xlat
push
adc
mov
xor
setbe
push
xchg
icebp
sbb
xor
xor
push
xlat
pop
cmp
and
adc
out
nop
jl
push
ffreep
mov
lret
jne
add
cmp
cmpsl
popa
add
nop
mov
cltd
cmp
jne
sti
jg
arpl
adc
into
test
add
push
jmp
xchg
test
cmp
test
sbb
jae
mov
in
insl
add
gs
mov
xor
call
int3
sub
jmp
and
nop
xor
mov
mov
mov
push
rorb
shrb
mov
push
jmp
das
inc
je
dec
lds
mov
mov
pop
loopne
mov
insl
mov
or
cld
mov
xchg
inc
add
sub
xor
push
pop
xchg
out
push
addr16
imul
inc
ret
dec
cmp
cmpl
out
cmp
repnz
in
enter
xlat
xchg
pop
aaa
lcall
cmp
pop
aad
mov
mov
pop
mov
rclb
roll
vpsubsb
mov
mov
xchg
sub
lret
pop
pop
jmp
sub
or
test
xchg
repnz
xchg
adc
mov
xlat
test
cmpsb
push
nop
ret
mov
cltd
clc
sub
jp
int
adc
push
int
pop
or
out
subl
lret
add
adc
adc
inc
jp
mov
mov
mov
cmpsl
push
jmp
sbb
jl
daa
dec
or
insl
mov
in
pop
push
je
mov
push
pop
dec
sub
sbb
lods
loopne
ss
shll
jle
fstpl
push
shll
cmp
stos
push
add
mov
xor
cli
push
xor
leave
jp
or
incl
xchg
loopne
loopne
sahf
jge
push
inc
shl
pop
cwtl
inc
jg
pop
dec
shl
rclb
mov
pop
fnstsw
xchg
scas
rorl
mov
rolb
mov
std
js
js
xor
cmc
cmpb
jmp
push
test
js
xchg
xchg
mov
xchg
add
adc
lcall
mov
sbb
mov
sub
pop
call
cmc
adc
lods
leavew
mov
das
pop
push
lcall
aas
scas
imul
frstor
lcall
lods
mov
add
sahf
dec
inc
pop
fs
jge
add
int3
dec
and
pop
add
das
inc
pop
icebp
cmp
dec
cwtl
jecxz
cmp
adcl
int
iret
jle
inc
mov
or
add
push
cmp
xchg
lea
int3
dec
enter
roll
pop
dec
or
lahf
movsb
fwait
call
fdivs
push
divl
fs
xor
dec
push
outsl
mov
xchg
les
stc
imulb
cmp
xlat
in
jmp
loope
sti
fidivrl
inc
mov
jle
test
adc
sbb
jae
cmp
add
adc
test
mov
insl
out
loop
pop
dec
or
insb
aas
shr
shr
jle
outsb
in
mov
push
enter
cmp
jnp
imul
add
addb
inc
std
icebp
pop
xor
sbb
jne
and
cmp
stos
js
mov
rorl
in
ljmp
sarl
mov
jecxz,pt
je
lret
mov
jmp
cs
mov
cmp
and
push
fildll
mov
pusha
mov
cwtl
fnsave
jp
test
sbb
mov
mov
loope
imul
in
stos
and
ret
jg
popa
mov
shrl
in
test
fnstcw
sbb
lds
aad
cltd
jne
mov
cmp
mov
adc
mov
push
js
mov
and
popf
pop
out
and
in
das
es
jmp
out
ret
push
sub
inc
movsl
or
rcll
xchg
push
cli
dec
sub
xor
push
das
cli
mov
jl
ljmp
jg
mov
mov
fsubl
es
cmpsb
lcall
fidivs
inc
xchg
pop
mov
mov
std
mov
cs
pusha
mov
ds
push
scas
movsb
mov
adc
sub
and
inc
movb
in
mov
mov
in
test
cmp
mov
pop
add
es
and
in
icebp
sbb
push
fdiv
pop
adc
xabort
cmp
lret
das
lea
cmc
int3
push
dec
or
imul
xor
jecxz
sbb
pusha
les
dec
push
sbb
repz
js
mov
mov
xor
xchg
mov
jne
sbb
pushfw
add
loopne
gs
mov
sub
arpl
lahf
data16
and
pop
inc
mov
ret
lcall
or
cmp
leave
sbb
es
mov
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
paddsw
sbb
adc
or
stos
repz
mov
daa
jg
inc
test
or
cmpsl
mov
xor
lea
fists
xor
cli
push
push
fdivrp
cmpsl
jmp
add
mov
rclb
mov
push
jg
test
adcl
cmp
xorl
mov
scas
aas
or
adc
ret
xchg
scas
leave
fwait
sbb
movl
jbe
je
in
inc
cld
ds
divl
push
push
sub
pop
lret
mov
adc
ret
mov
xchg
cld
sbb
and
mov
out
mov
lock
sub
cld
insl
push
cld
stc
movsb
xlat
pushf
js
or
xlat
sbb
push
lret
cmpsl
in
adc
jb
call
add
lcall
cld
out
cmp
imul
mov
or
out
jo
inc
pop
add
outsl
inc
out
mov
mov
das
js
pusha
cmc
sti
sub
fldenv
push
js
add
das
in
cmpsl
outsl
add
jecxz
push
adc
jecxz
jmp
cmp
int
add
xor
cwtl
pop
ss
mov
add
cmp
loope
mov
adc
sbb
lock
jecxz
sbb
jbe
xor
mov
and
shrl
popf
mov
pop
jle
pop
nop
scas
cmp
fisttpl
cmpsb
mov
cmpb
arpl
xor
dec
or
sub
xchg
das
xor
mov
insl
data16
scas
push
push
inc
nop
sub
lods
push
pushw
or
jns
dec
negl
mov
icebp
cmc
sbb
std
test
imul
xor
fdivr
lahf
ret
ret
dec
loop
shr
int3
adc
fdivrl
mov
nop
pop
jl
outsl
mov
pop
outsb
mov
add
shlb
push
add
jns
cmp
push
mov
or
push
outsl
ja
jge
nop
pop
out
outsl
scas
sub
test
xor
insb
mov
shll
xchg
push
addr16
push
scas
cmpl
mov
push
jecxz
mov
dec
int3
xor
sbb
out
cmc
addl
stos
lock
jb
es
std
lcall
cmp
scas
sbb
add
mov
dec
push
pushf
inc
or
pop
pop
pop
sub
hlt
fcomps
sub
sbb
sub
mov
loopne
mov
pop
divl
std
clc
xchg
seto
pop
sub
incl
popa
lds
push
fimuls
jg
cmp
mov
hlt
sbb
cs
and
inc
stos
rcll
jecxz
add
cli
adc
inc
pop
in
bound
fsub
dec
mov
aas
push
jo
mul
mov
xchg
lods
or
xor
add
pop
xchg
pop
push
adc
cmp
mov
jno
sbb
lret
jns
sti
movsb
adc
std
and
in
push
pop
and
xchg
pop
jmp
js
sub
ja
and
mov
int
into
ljmp
xor
fnsave
shr
inc
and
ss
jae
ds
lea
divl
mov
cmpsl
push
pop
ja
pop
in
pushf
xchg
out
xchg
pop
push
jns
mov
addl
int3
mov
sub
jbe
mov
sub
adc
add
jecxz
adc
inc
enter
sbb
push
test
jmp
mov
inc
adcb
mov
js
pop
dec
mov
shll
xlat
pushf
je
loopne
or
sub
xchg
inc
jbe
xor
addr16
ja
mov
sbb
mov
ret
xor
mov
xchg
xor
leave
mov
xchg
push
inc
dec
aad
adc
push
data16
inc
popa
xchg
in
test
lret
mov
xor
es
ret
subb
call
fsubs
inc
xor
add
pop
test
inc
pop
hlt
fnsave
fcmovu
xorl
clc
push
adc
loop
out
lock
cli
push
xor
in
mov
call
dec
mov
fsubrs
push
mov
shll
int3
jns
lods
push
into
sub
sub
in
dec
mov
gs
cwtl
jb
pop
push
mov
sub
xlat
xor
inc
pushf
mov
aas
lods
inc
aaa
xchg
call
loope
frstor
in
mov
push
into
jnp
adc
add
lret
add
cmpsl
sbb
aaa
imul
ficomps
pushf
cmp
sub
sbb
xacquire
mov
cltd
xchg
out
mov
das
or
fldenv
push
add
aas
xor
adc
push
add
les
or
sbb
jb
xor
or
cli
adc
or
fcoms
nop
adcb
lods
and
das
add
and
add
lcall
popf
cmp
stos
mov
xchg
fsts
dec
fiadds
fwait
push
or
lcall
aam
lret
icebp
iret
and
popa
mov
lcall
jae
push
pop
adc
cmpsl
lahf
in
push
dec
cmp
jo
sub
mov
jae
xor
daa
mov
xor
pop
insb
mov
out
mov
pop
cld
pop
scas
and
js
lret
shl
inc
ss
adc
push
push
into
cli
cmpl
and
inc
shll
jmp
fs
xor
dec
ds
iret
pop
pop
xchg
cld
dec
pusha
jecxz
fnstsw
mov
adc
xor
lock
push
popf
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
mov
inc
invd
add
psrlw
mov
inc
xor
cmp
cmp
sbb
insb
rcrb
cmp
and
pop
in
push
mov
sub
pop
pop
mov
test
sub
ret
cmc
mov
mov
mov
dec
cwtl
adc
dec
sub
into
roll
push
pop
xorl
ds
cmp
movsb
call
clc
adc
jp
cwtl
xchg
xchg
cmpsl
jno
cmp
imul
fwait
pop
pop
mov
dec
pop
daa
dec
mov
ja
or
mov
lds
pop
inc
sub
lcall
xchg
scas
cmp
cli
lret
out
adc
lret
push
mov
cmp
sub
cmpl
ljmp
sub
stos
inc
fs
fstp
cltd
jb
int3
cmp
outsb
sbb
cli
adc
leave
pop
outsb
stc
in
fnsave
out
arpl
hlt
hlt
push
jecxz
inc
cld
arpl
sbb
xchg
hlt
mov
push
push
push
nop
pushf
cmpsl
inc
and
pop
jg
mov
shlb
and
dec
subl
jae
or
sbb
nop
pop
aam
pop
mov
addr16
imul
insb
cmp
fmull
fs
rcll
in
jg
lods
out
stos
int
int
xchg
sub
das
xchg
cmp
int3
scas
or
outsb
ret
dec
push
and
pop
mov
mov
das
cwtl
sahf
sbb
adc
call
inc
hlt
frstor
movsl
sahf
jecxz
xchg
add
xchg
xchg
xchg
lods
dec
push
jae
push
outsb
addb
out
lods
xchg
jecxz
xor
cld
sub
xor
xchg
aaa
pop
test
fsubrl
iret
push
inc
scas
xchg
add
in
cli
stos
lret
rcpps
inc
push
or
ror
mov
repnz
mov
mov
dec
arpl
scas
mov
push
js
jcxz
sbb
mov
test
outsl
stos
cmpsb
int
arpl
lods
xor
pop
int3
fcomps
cmp
sbb
cwtl
mov
aam
shll
xor
jmp
test
movsl
cmpsl
mov
stos
out
jnp
add
arpl
sub
cmpsb
cmp
pop
jg
inc
jl
pop
nop
insb
jge
and
sub
mov
adc
scas
mov
pusha
pop
sbb
mov
imul
fs
push
cmp
test
cmp
fwait
mov
stc
sub
jl
scas
cmc
sbb
nop
jae
mov
pop
sub
push
imul
mov
dec
push
lods
les
fdivrl
loop
subl
xchg
clc
dec
and
mov
jg
mulb
sub
jmp
inc
lcall
mov
adc
iret
or
cld
nop
in
xchg
aaa
testl
mulb
iret
mov
pop
adc
lods
inc
dec
in
jb
mov
ja
sarl
pushw
lods
ja
shlb
cmc
loopne,pn
int3
add
sub
repz
and
jp
cmpb
loop
xor
push
dec
pop
inc
or
pop
stos
and
lea
imul
adc
push
adc
xor
testb
jno
sbb
insl
idivl
hlt
sbb
push
cmp
mov
dec
inc
cwtl
jnp
ljmp
xchg
jo
mov
insb
out
push
xor
js
testb
aas
sub
inc
adc
imul
shlb
in
xchg
sbb
cmp
insl
call
and
lods
jns
jg
or
ja
pop
inc
or
stc
mov
popf
icebp
scas
inc
icebp
mov
loopne
push
push
add
popa
std
mov
sub
gs
aas
rol
in
mov
stc
test
mov
idivl
mov
test
mov
sub
push
jp
jge
lock
mov
cmpl
pop
dec
pushf
bound
fisttpll
dec
outsl
cmp
dec
fdivr
xor
pop
adc
test
cmpsl
or
ficoml
cmp
mov
js
push
outsl
mov
into
push
push
ss
ljmp
loopne
rcrl
arpl
scas
xchg
lods
in
cmpsl
push
movsl
sbb
shrb
push
lock
pushf
dec
nop
rorl
lods
push
add
sbb
sbb
lods
aam
roll
push
xchg
or
push
repnz
push
jnp
sub
xlat
imul
in
mov
adc
stos
je
leave
stos
int3
icebp
xchg
loop
add
sub
adc
push
mov
inc
pop
fldcw
sbb
jnp
sbb
sbb
out
in
dec
outsb
pop
in
push
sub
out
dec
cltd
dec
xorps
cmp
ja
lock
pop
dec
sbb
mov
in
imul
cmp
shl
xor
out
mov
dec
sbb
mov
div
and
lods
into
jbe
shll
add
and
insl
rcll
rcrb
in
nop
jp
add
sub
fcoms
stos
adc
faddl
xchg
lcall
in
pop
out
stos
lea
enter
pop
sahf
stos
pop
ljmp
mov
xchg
shl
les
dec
xorb
sbb
out
add
lcall
paddusw
loop
ss
mov
add
adc
aad
sbb
mov
push
mov
jne
fucomi
call
scas
das
push
sbb
xor
test
inc
mov
inc
es
xlat
out
inc
inc
nop
dec
leave
cmpsl
mov
rcrb
cmp
mov
mov
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
out
out
mov
unpcklps
pop
mov
adc
inc
xchg
adc
cmp
cmp
adc
test
mov
andl
sti
cmp
inc
out
mov
add
cltd
movsl
out
into
push
pop
ds
jmp
xchg
and
aad
sub
dec
sbb
adc
xchg
mov
and
xor
mov
mov
movsl
sub
cltd
mov
sbb
pop
lea
movsb
rclb
sbb
das
rorb
sbb
mov
int
cld
xor
sbb
inc
and
ret
rcrl
ss
shrb
lahf
leave
leave
fimull
out
sbb
lret
push
in
push
dec
fcomi
jns,pt
push
lret
push
add
mov
cmp
mov
dec
stos
test
mov
sub
lcall
rorb
fimull
fwait
aaa
xor
sti
inc
cmpsb
mov
or
or
std
push
inc
push
addb
inc
dec
lock
push
mov
jge
cmp
inc
stos
lods
xlat
dec
ja
sub
jns
push
mov
cmc
xlat
push
dec
cmp
adc
cmp
test
jb
xor
mov
jp
aas
outsb
daa
jge
mov
sbb
repz
adc
shll
mov
xchg
push
je
xchg
xor
clc
cmp
fs
cli
mov
out
leave
pop
pop
xchg
sub
xchg
jecxz
into
cmp
fs
fwait
mov
pop
adc
or
or
push
mov
aas
jge
outsb
cmp
and
cwtl
lock
xor
or
dec
es
loope
xchg
repnz
and
out
pop
repnz
psubd
fbld
fidivl
loope
xor
push
cwtl
aas
xchg
xchg
ret
rolb
test
dec
mov
push
enter
mov
les
xor
incb
enter
sub
and
subl
lea
jns
inc
adc
push
mov
xor
aas
stc
testl
and
jp
sbb
int
pop
fld1
gs
daa
imul
dec
push
sub
adc
icebp
inc
mov
push
mov
les
mov
and
bound
mov
fbld
pop
dec
add
enter
repnz
cmp
jecxz
lret
jle
out
stos
mov
jp
inc
adc
cmpb
rorl
scas
insl
jg
pop
jg,pn
mov
mov
jmp
and
das
hlt
or
xor
loop
jl
inc
mov
adc
push
or
dec
jae
addr16
inc
xchg
xrelease
lock
test
popf
dec
fcoml
sbb
sbb
pop
popa
sbb
mov
xchg
push
sbb
test
outsl
and
inc
ret
pop
inc
cs
mov
dec
mov
scas
nop
mov
xor
cmp
xor
insb
jnp
movsb
je
orb
jae
push
fisubs
daa
cmp
cmpsb
scas
sahf
add
call
dec
push
in
mov
xchg
mov
jle
pop
adc
mov
mov
out
fstpl
lds
insb
je
paddw
or
pop
out
hlt
mov
add
int
xchg
mov
pushf
mov
dec
int3
adc
cwtl
nop
xchg
cmpl
push
xchg
push
adc
enter
pop
add
fstpt
xchg
sub
int
in
ficomps
cmp
and
enter
jge
inc
sbb
add
jne
sub
inc
pop
mov
aam
xor
rcl
movsb
add
push
mov
add
data16
pop
inc
or
jge
pop
mov
mov
cmp
int3
inc
punpcklbw
pop
xchg
dec
xchg
or
dec
imul
mov
pop
inc
and
scas
fidivs
inc
mov
sbb
decb
xlat
jno
and
es
addr16
int
adc
sub
int
jl
insb
adc
mov
subl
push
mov
out
jne
mov
cld
pop
sti
push
popf
mov
jp
cmp
hlt
mov
sub
mov
push
fisubs
pop
xor
stos
and
arpl
pusha
gs
dec
inc
imull
xchg
faddl
mov
and
push
pop
add
out
push
jl,pn
and
adc
lds
inc
cmp
cld
neg
dec
adc
mov
gs
scas
xchg
aas
dec
mov
rorl
bound
or
pop
mov
push
ret
pop
xchg
mov
icebp
jbe
cmp
jmp
or
dec
xlat
mov
xor
into
or
lcall
or
jnp
sbb
mov
lcall
mov
shl
inc
es
outsl
add
mov
and
icebp
push
push
leave
cmp
mov
pusha
iret
dec
cwtl
pop
cmp
sarb
int
pushf
push
lods
es
xor
outsl
sbbl
push
jbe
lock
push
xchg
ja
cmc
fistpl
outsb
cmp
fimuls
pushf
mov
xlat
adc
iret
or
cmp
xor
inc
mov
loope
cld
out
mov
cmpsb
popa
ss
push
jecxz
mov
testb
push
inc
jne
sbb
inc
and
faddl
mov
sub
mov
ss
sbb
inc
jnp
mov
pop
mov
jge
mov
cmp
jmp
lods
pop
lock
dec
push
subl
sbb
test
clc
jl
inc
add
add
inc
test
call
jnp
jae
mov
scas
and
es
push
aam
hlt
cmp
pop
add
sbb
mov
popa
sahf
dec
int
andl
addl
xchg
jbe
and
cmp
sahf
xchg
xchg
fs
cmp
inc
adc
jne
mov
and
and
add
adc
push
cmp
idivl
mov
inc
add
popl
pop
jle
cmp
add
inc
mov
cltd
data16
rorb
cmp
idivl
in
nop
in
push
ja
cmp
test
xchg
fbld
sub
insl
push
mov
outsl
scas
xor
in
xor
imul
sbb
movsb
push
mov
fildll
xor
mov
ss
adc
std
jmp
in
and
cmpsl
or
leave
cmp
imul
fidivl
mov
and
push
inc
outsl
mov
xor
sub
inc
and
mov
nop
and
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
outsb
xor
clc
sbb
mov
vmwrite
pop
lahf
push
out
fsubrl
mov
and
fs
xchg
mov
popf
adc
push
lock
pusha
dec
aam
push
inc
sbb
xchg
shrl
imul
mov
push
fisubl
movsb
inc
pop
sbbb
mov
cli
adc
pusha
lea
xchg
jne
mov
push
fldl
push
add
pop
sbb
dec
dec
mov
cmpsl
insl
cmp
jno
mov
pusha
sub
xchg
dec
pop
pop
pusha
push
es
addr16
enter
out
in
int
xor
xchg
popa
xchg
stc
or
and
lret
fidivrs
inc
push
imul
xchg
test
mov
fadds
cmpsb
ljmp
pusha
pop
es
pop
leave
and
pop
mov
movsb
inc
push
xchg
mov
lea
iret
xor
fmuls
or
cmp
cltd
rclb
imul
loop
les
movsb
pop
stos
stc
push
rcrl
loop
pop
mov
in
pop
cmp
adc
xor
mov
sti
mov
mov
xor
sbb
loop
dec
out
jno
pop
pop
or
movl
pop
aas
ss
cwtl
mov
stc
mov
xchg
mov
pop
xchg
out
or
sub
add
jo
sbb
into
int
cmp
xchg
cld
sub
xor
fists
and
or
jne
add
mov
ds
add
xor
dec
and
sbb
imull
popf
iret
lret
loope
add
sbb
cmpsl
mov
imul
int
sbb
addr16
inc
mov
lods
sti
jno
push
shll
fisttpl
jo
test
mov
dec
out
push
xor
mov
lcall
sub
pop
cltd
xchg
ljmp
sti
pop
into
roll
dec
nop
push
add
inc
cmpsl
movsl
sub
sbb
add
mov
inc
arpl
inc
xor
jl
into
adc
sbb
push
movsb
es
xor
cltd
ljmp
outsb
push
outsl
dec
loope
or
mov
and
loop
mov
xor
add
outsl
pop
into
addr16
test
fcomp
bound
mov
dec
in
mov
jno
decb
leave
out
pop
cltd
int3
enter
xchg
gs
and
add
pop
or
popl
leave
jmp
push
cwtl
and
sahf
arpl
loope
das
and
fs
mov
nop
xor
in
sub
mov
or
arpl
inc
adc
mov
push
inc
pusha
lret
fsub
pusha
call
call
in
dec
mov
aas
movsl
add
xor
repz
loope
jle
dec
push
std
sbb
and
xchg
and
sub
mov
pop
mov
and
xchg
cltd
sub
fisttpl
adc
aam
stos
insb
in
outsb
xor
out
cmp
jmp
jge
pop
mov
pop
mov
mov
mov
pop
adc
movb
push
mov
xor
movsl
push
inc
aas
mov
dec
out
push
test
sub
and
lea
mov
push
enter
addr16
negl
push
inc
jecxz
push
mov
xor
movsl
sub
dec
idivl
mov
sub
scas
push
pop
mov
in
adc
inc
daa
xorl
mov
daa
jle
ret
add
jne
xor
fwait
nop
cmpsb
in
mov
shll
bound
push
sbb
mov
push
popf
sbb
aas
dec
into
sbbb
mov
dec
xor
test
mov
sub
cmpsb
and
mov
icebp
incb
ret
add
mov
inc
call
cmp
les
sti
mov
jecxz
cmpsl
rcl
and
inc
jns
pushf
enter
stc
or
inc
iret
and
shlb
lahf
je
jg
std
shr
call
lods
neg
and
es
outsb
push
inc
push
int
inc
cmp
inc
or
fldl
std
xchg
mov
sti
stos
xchg
in
rcrl
ss
push
cmp
out
mov
in
icebp
enter
icebp
cmp
shl
mov
jne
or
stos
aas
jne
aad
arpl
add
dec
pop
loop
int3
lods
aad
mov
scas
lcall
jle
jle
mov
rolb
lret
out
fcompl
add
mov
xor
and
and
dec
dec
enter
scas
outsl
dec
inc
push
ss
mov
lret
xchg
and
pop
lods
mov
rorl
std
nop
xchg
adc
inc
mov
test
test
out
pushf
push
pop
and
jl
lea
inc
mov
fisubrl
inc
add
mov
or
sub
mov
jg
sti
mov
push
push
or
xor
mov
or
pop
mov
push
adc
popa
push
rolb
sti
cmpsl
add
sti
sub
lock
pop
sbb
jmp
mov
enter
orb
lret
pop
adc
lea
push
rcrb
push
pop
or
mov
xchg
inc
and
ja
sub
in
mov
testl
or
pop
daa
mov
and
sbb
inc
outsl
movsl
mov
mov
adcb
stos
push
mov
mov
lock
jo
mov
push
in
inc
call
stos
pop
adc
iret
rcrl
outsb
jle
cmpsl
sbb
js
es
pop
add
xchg
pop
cmc
push
std
xlat
mov
in
mov
mov
add
daa
push
lods
outsb
rorb
xchg
or
and
mov
sbb
fwait
mov
or
mov
sahf
pop
lods
fcomps
clc
in
imul
xorl
call
or
stos
popa
imul
xchg
push
push
push
int
mov
fcmove
enter
in
cmc
xchg
outsl
adc
cltd
out
push
or
neg
mov
cmpsl
xchg
sbb
xor
xor
adc
dec
hlt
fimull
xor
fwait
and
imull
sub
push
andl
scas
cltd
test
lret
dec
into
lea
daa
fisubl
pop
dec
push
cli
or
pop
ds
adc
or
adc
adc
jb
lcall
mov
daa
push
or
test
popf
sar
cwtl
scas
sahf
xor
es
cmp
add
and
xor
negl
jle
xor
xchg
aam
test
andb
inc
push
mov
sbb
dec
lds
repnz
mov
pop
lods
pop
push
aaa
jns
or
jmp
pushf
enter
stos
push
add
popa
sub
push
out
in
cmp
int
cmp
adc
lret
mul
call
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
xchg
jne
xchg
pop
mov
xadd
xor
push
cmp
mov
out
xchg
jg
ljmp
inc
mov
outsb
pop
xor
adc
pop
mov
stos
sub
lahf
aaa
mov
iret
repz
xchg
jecxz
push
lret
xor
fistpll
jae
es
push
or
pop
ljmp
mov
inc
fimuls
iret
jnp
or
imul
mov
pop
push
fistps
pop
mov
loop
dec
jl
stos
or
sub
insb
std
and
not
xlat
cld
arpl
inc
mov
sbb
pop
daa
test
cmp
xor
mov
push
sarl
xchg
jle
pop
sbb
lea
adc
fcmove
test
push
mov
mov
lret
cmp
scas
movsl
int3
scas
lahf
out
movsw
imul
stos
iret
or
shll
or
fcoms
sub
or
or
ss
xor
scas
je
lock
lahf
sub
ds
jg
jl
in
daa
sbb
movsl
pop
add
ret
std
icebp
movsb
mov
mov
push
mov
push
cmp
pop
loop
add
add
fwait
cmp
cmc
jbe
mov
daa
ja
push
fmull
mov
mov
scas
adc
aaa
jmp
repz
lcall
jge
mov
loopne
ss
cmc
xchg
dec
arpl
dec
mov
jmp
imull
ljmp
cmp
push
iret
cmpsb
mov
mov
mov
data16
cmpsl
cmpsl
or
daa
cmp
and
hlt
dec
mov
cmp
pushf
pop
sbb
sub
jns
notb
fmul
push
dec
nop
adc
aam
ljmp
pop
mov
lret
mov
jl
push
test
mov
mov
mov
dec
sbb
pop
or
ljmp
add
and
push
lods
mov
mov
dec
cmp
ret
xchg
cmpsb
xchg
mov
xorb
adc
aad
mov
in
fbstp
mov
call
loope
mov
sbb
sbbb
enter
or
mov
jb
jle
mov
sub
fdivp
cwtl
jbe
jp
int
adc
adc
lret
movsb
js
and
imul
mov
pop
js
js
js
jns
lock
negb
cmp
pop
push
sbb
fs
clc
inc
cmovl
push
fstpt
xor
inc
adc
mov
stos
das
sbb
mov
cmc
ret
mov
fisttpl
or
and
dec
or
pop
add
mov
sub
scas
cmpl
imul
test
xchg
sub
arpl
std
mov
push
sti
es
mov
test
jns
jbe
mov
xchg
cwtl
scas
and
xchg
adc
fldcw
push
mov
sub
stos
clc
dec
pop
or
or
inc
leave
les
inc
add
test
rcll
pop
mov
xor
aam
lock
negb
jmp
into
fidivs
sbb
sarb
dec
rorl
in
dec
pop
inc
arpl
sub
hlt
or
repz
popa
into
dec
inc
fs
push
aad
adc
inc
push
popf
or
jae
cld
xor
in
dec
movsb
iret
lret
dec
ljmp
arpl
cltd
inc
xchg
cmpsl
sub
inc
jno
sub
subb
sub
cmpsb
in
out
clc
mov
push
xchg
inc
jg
push
mov
inc
xor
out
mov
pop
test
xchg
rclb
mov
cmpsl
ljmp
pop
xchg
pop
ret
xor
scas
rorb
adc
rolb
aad
stos
dec
xor
jb
xchg
cmp
inc
xlat
add
ja
jge
and
and
cli
push
pop
mov
loop
jl
add
out
in
ljmp
test
sti
sbb
add
sub
scas
dec
or
xchg
insb
mov
enter
jns
adc
push
sti
mov
fnstcw
jmp
mov
mov
pop
lock
popa
cwtl
mov
cltd
cmpsl
adc
out
or
scas
inc
aad
mov
sti
or
test
mov
add
dec
push
fstpt
fwait
cmp
cmp
loopne
adc
mov
sub
outsb
adc
in
fcoml
inc
repz
arpl
outsl
xor
push
adc
jbe
adc
cmpsl
repz
dec
cmpsb
shrb
dec
arpl
adc
sub
out
jmp
cmp
sti
push
push
ret
imul
mov
jmp
cmp
std
fidivl
jge
xchg
add
iret
mov
cmc
repnz
cmp
sub
std
mov
and
fstl
aas
cmp
and
test
je
iret
inc
mov
jns
leave
push
popa
outsl
push
xchg
jg
imul
push
imul
adc
mov
subl
sub
push
hlt
hlt
lret
push
push
movzbl
cld
test
out
mov
push
xor
cmp
sub
add
das
or
movsb
push
dec
sbb
fwait
arpl
or
dec
sahf
or
cli
jge
and
mov
pop
in
jae
xchg
xchg
pop
popf
mov
sti
jno
es
cmp
jecxz
push
sbb
mov
cs
call
call
push
aaa
into
fnstcw
push
int
outsl
mov
pusha
jo
or
pop
in
push
sub
jno
add
push
cmp
mov
pop
es
cmp
add
in
xor
out
push
arpl
icebp
fdivrp
movsl
sti
mov
iret
pop
add
xchg
repnz
popf
scas
pusha
cs
jg
mov
movsb
aaa
loop
inc
jns
dec
pop
and
pop
sbb
sub
adc
ljmp
lahf
jnp
cmpsl
and
ds
sub
mov
imull
das
cmp
push
or
push
test
mov
divl
cwtl
setle
cli
outsl
shrl
mov
loope
mov
rclb
xchg
pushf
sbb
dec
push
iret
clc
es
inc
dec
das
xchg
lock
pop
sbb
gs
imull
testb
cmp
out
jge
mov
or
push
cmpsl
or
negb
jl
pushf
push
sub
insb
lds
test
mov
pop
imul
repnz
jmp
into
add
or
or
cs
sbb
adc
and
cmc
mov
push
jns
push
adc
sub
inc
jecxz
rcll
into
push
xchg
in
dec
jne
js
sbb
inc
cmp
stc
jp
sbb
jbe
in
mov
aam
repnz
ret
rclb
mov
dec
inc
push
mov
jp
out
scas
shlb
fdiv
xchg
sbb
loopne
pop
xchg
leave
jg
dec
sub
push
aam
mov
mov
xchg
mov
stos
into
int3
notl
sbb
jge
jae
mov
mov
adc
xlat
mov
scas
and
cmp
std
jp
repnz
mov
fisttps
jl
cmp
lock
lret
jecxz
sti
mov
cmp
jmp
cmp
xlat
cmpsl
stos
stos
lea
mov
pop
sub
loopne
push
in
sbb
add
in
fimuls
pop
jne
jne
and
mov
or
pop
nop
inc
movsl
repnz
out
adc
adc
in
pop
sbb
or
mov
insb
mov
and
cmpsl
ja
push
mov
adc
es
pop
dec
es
out
rclb
and
insb
mov
loopne
clc
movsb
movsb
push
mov
pop
fnsave
outsb
enter
testl
or
mov
push
sub
fucomip
movsb
in
add
lret
adc
xchg
sti
std
xchg
jo
das
pop
out
mov
mov
mov
ret
jmp
lcall
mov
push
test
push
mov
adc
xor
int
pop
ret
ds
or
loop
ljmp
push
pop
pop
adc
dec
mov
clc
int3
mov
push
sbbb
test
xchg
xchg
lcall
mov
xor
lret
mov
insb
jbe
xor
mov
testb
clc
dec
cltd
pop
rcl
dec
dec
inc
addr16
xor
inc
fsts
add
jae
pusha
adc
addl
jp
sbb
mov
and
cmp
test
lret
jle
cwtl
mov
fwait
test
or
les
aad
ja
std
jb
push
enter
or
push
jge
xchg
ret
jno
and
enter
cmp
clc
mov
pop
xchg
test
cmp
call
xor
scas
jecxz
xor
sbb
add
scas
add
iret
pop
outsb
in
fildl
jne
testl
lahf
sub
imul
mov
push
lar
sub
rcr
dec
dec
mov
add
outsb
or
psllw
out
inc
pop
in
in
push
sbb
lcall
jbe
lret
dec
add
mov
push
mov
loopne
mov
loope
popf
das
jne
jp
test
loop
mov
enter
xchg
xlat
jno
mov
and
xor
pushl
mov
jbe
movsl
imul
adcl
jae
adc
hlt
cli
sbb
shll
mov
jo
xlat
cs
cmp
mov
sbb
mov
xchg
mov
popa
inc
inc
jb
mov
inc
mov
int
adc
sbb
or
mov
add
push
mov
push
pmaxsw
test
test
shll
sbb
out
mov
xor
add
fidivrs
dec
dec
push
and
jp
lock
jmp
cmp
cmp
jp
movsb
aad
and
lods
lret
outsb
sbb
fmuls
adc
pop
sub
cmp
or
sub
mov
insl
pop
jae
cld
pushf
incb
imul
sbb
xor
mov
std
fldcw
add
adc
xor
mov
mov
and
movsl
hlt
cmpsb
pop
enter
sub
les
bnd
xchg
mov
add
pop
or
cmp
ss
mov
or
jle
out
sub
pop
lea
mov
popf
jne
xor
xor
pop
cmc
sub
mov
loopne
loopne
push
push
inc
test
movsbl
dec
lods
xor
fwait
loope
jbe
enter
mov
adc
inc
add
push
cmc
sub
xchg
jo
fdivrs
push
cld
dec
inc
lock
pusha
xchg
repz
mov
add
arpl
jp
and
mov
push
adc
mov
cli
call
mov
adc
mull
pop
and
sub
jecxz
push
mov
ss
push
cmp
es
test
notl
das
sbb
mov
or
stos
daa
inc
sbb
loop
filds
fidivrl
push
or
lret
fcmovb
fisubrl
jl
test
mov
mov
push
out
and
int
adc
ret
popa
mov
cld
mov
or
xor
in
out
jnp
sub
adc
mov
in
aaa
pop
adc
mov
mov
int
or
imul
js
xchg
rolb
dec
sub
xor
mov
orl
sarb
sahf
xchg
pop
insb
gs
fcomps
pop
cmpsl
sbb
xor
pop
mov
sub
jne
int
jl
shrl
ficomps
cmpsl
cmp
adcb
mov
insb
push
loopne
push
xor
xchg
stc
lods
imul
mov
daa
mov
lahf
sub
or
pop
dec
test
cmp
mov
push
daa
add
dec
xor
shrl
js
jo
mov
sbb
faddp
shr
sbbl
mov
xchg
mov
jg
and
dec
sbb
xlat
lret
arpl
or
add
js
adc
enter
cmp
fnstcw
arpl
daa
xchg
pop
jge
ret
mov
and
cld
mov
test
out
push
cwtl
add
cmp
or
and
or
xchg
mov
mov
shlb
mov
out
add
pop
pop
jns
addr16
or
dec
cmp
or
cmp
xchg
inc
sahf
and
mov
and
inc
adc
lcall
xorb
dec
loop
cmp
xor
jp
aam
mov
js
push
dec
pop
mov
pop
and
mov
mov
enter
push
fidivrs
gs
popf
cltd
int3
mov
jecxz
ss
cld
mov
and
pop
inc
cmp
notb
inc
jo
xlat
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
cmp
mov
and
dec
into
xchg
test
add
jg
arpl
fdivr
daa
jl
jmp
jbe
cmp
adc
cmp
inc
leave
push
push
mov
mov
and
lds
pop
mov
pop
jae
pushf
pop
sbb
and
in
repnz
das
dec
jno
mov
out
or
fldl
arpl
in
and
cmpsb
inc
cmp
push
xchg
test
shll
or
call
push
xchg
loope
pop
add
loop
out
ror
insb
wrmsr
dec
push
arpl
xor
mov
jecxz
adc
ror
sbb
scas
gs
sub
inc
mov
pop
mov
sub
das
ficomps
inc
xchg
imul
hlt
pop
cld
dec
xchg
mov
sbb
mov
dec
int
mov
xor
cli
cltd
sbb
push
inc
inc
or
mov
sub
andl
out
cmp
into
jno
sub
jecxz
daa
inc
mov
sub
adc
test
scas
popf
hlt
pusha
xor
jle
out
stos
mov
imul
add
int3
jg
mov
dec
lret
fcompl
repz
and
mov
add
sti
cs
push
sub
loopne
rolb
jmp
pop
test
filds
pop
dec
data16
stos
or
xchg
fwait
cwtl
ror
test
cmp
mov
in
adc
push
shll
pop
dec
test
rorb
lea
cmpsb
ret
inc
sbb
cmp
repnz
dec
out
in
xchg
cmp
and
cmc
dec
mov
int3
scas
subb
scas
mov
inc
testl
mov
push
push
lock
adc
movl
sbb
pop
es
and
mov
mov
xchg
push
aaa
es
jo
pop
pop
pop
jae
push
adc
mov
sub
lret
jmp
sti
push
add
ret
ret
xchg
in
mov
add
jo
cwtl
xor
mov
mov
mov
adc
fs
push
rcll
jl
jecxz
test
jae
fcoms
fistps
lret
xor
leave
mov
add
and
addr16
int
dec
mov
loop
jno
adc
out
int3
mov
cmp
sub
les
add
and
je
add
inc
cld
daa
ret
out
dec
cltd
jp
xchg
pushf
pop
imul
and
and
xor
cmp
movb
mov
ss
pop
cmp
aas
cmp
push
scas
cmp
mov
mov
popa
sub
push
jns
aad
ja
popa
xor
hlt
in
cmpsl
xchg
repnz
xor
fstps
jmp
in
or
andl
orb
jp
xor
adc
iret
lock
mov
adc
aam
imul
adc
sbb
push
xchg
test
shll
xor
and
insl
push
push
push
lods
sub
jge
and
notb
sub
inc
dec
aad
dec
das
mov
jmp
clc
lret
pop
out
and
xor
fidivrl
and
mov
lret
sbb
lock
out
jmp
mov
in
les
cmpsl
jbe
mov
jge
in
xchg
aaa
mov
mov
roll
push
nop
push
jg
dec
sub
nop
pop
jle
leave
push
jne
and
dec
adc
std
rclb
xorl
mov
jo
lock
fimuls
scas
xchg
jns
movsl
sarl
cmpsl
xor
je
jo
inc
xlat
pusha
les
scas
lds
cwtl
shll
add
out
js
xchg
nop
jno
xor
pop
xor
fdivrl
mov
dec
push
ds
xchg
cmp
inc
jecxz
sbb
mov
sub
mov
mov
inc
pop
jno
pop
bnd
shlb
jno
arpl
lea
xchg
out
movsb
xchg
cmp
ja
mov
lea
jl
xchg
and
mov
adc
aad
insl
cwtl
jno
jp
stc
sbb
dec
fstps
add
es
ss
fisttpl
pushf
cmp
rorl
dec
shll
push
ret
mov
push
imul
pop
mov
cmp
pop
mov
add
pop
enter
decl
je
fwait
inc
std
xchg
lock
and
xlat
rcrl
xchg
xchg
jns
mov
and
sbb
imul
into
inc
hlt
pushf
repnz
cmp
shll
ret
mov
adc
cmp
xchg
in
mov
lods
sub
cltd
xchg
or
iret
jno
ljmp
mov
dec
push
push
push
jmp
fistl
int
shrl
mov
sub
xor
sub
outsb
ja
xchg
aas
paddw
sub
daa
inc
ja
fidivl
js
int3
xchg
xchg
je
mov
xlat
cmp
mov
cltd
fisttpl
iret
mov
cmpsb
arpl
rorl
inc
add
inc
pop
jne
int
lahf
jb
mov
bound
jle
dec
or
hlt
dec
sbb
push
rorb
xchg
loop
int3
inc
jecxz
hlt
dec
mov
jmp
mov
lds
cmp
mov
jle
push
dec
mov
jecxz
jae
sub
subb
cmpsb
daa
iret
mov
mov
inc
imul
sbb
test
push
cmp
rcl
mov
dec
pushf
in
ret
sbbb
cmp
and
loopne
xchg
outsl
stos
pop
cld
xor
or
sahf
rcrl
mov
notw
stos
add
jbe
stos
cmp
sbbb
inc
das
and
inc
adc
push
pop
pop
int3
mov
cmc
mov
jns
repnz
mov
rorl
ljmp
popl
jmp
sub
roll
and
lods
sbb
sub
mov
pop
inc
cmpsl
mov
lahf
testb
xorl
mov
push
insl
push
jmp
sar
adc
pop
xchg
dec
aas
test
or
std
cmp
out
or
jmp
into
repz
mov
adc
lods
enter
xchg
pushf
mov
push
push
inc
adc
enter
gs
lds
jle
and
ds
cmpsl
xlat
pop
or
daa
dec
loop
jne
enter
mov
mov
imul
stc
cmc
jl
dec
fs
adc
daa
lds
or
jbe
out
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
lcall
mov
adc
ss
scas
xlat
pop
jg
das
loope
jno
cwtl
int3
mov
scas
sbb
mov
inc
hlt
mov
scas
mov
mov
scas
or
dec
cs
popa
flds
mov
jnp
xchg
sti
dec
es
xchg
push
jge
negl
roll
rolb
cmpsl
shll
je
mov
xor
loope
mov
jp
push
push
mov
out
fsts
adcb
inc
xchg
add
int3
fcmovu
xchg
into
dec
sub
lahf
int3
lcall
sar
sub
push
lea
faddl
xor
push
mov
sbb
das
sbb
pop
ja
push
push
fsubs
push
pop
or
sbb
fs
jne
jno
pop
cmc
or
push
cmp
mov
test
pop
sub
mov
aam
icebp
rcr
cmp
mov
mov
adc
sub
cwtl
sub
mov
push
int3
add
jno
push
mov
test
xchg
dec
int
sub
pushf
pop
call
mov
fldenv
pop
cmp
pop
xchg
or
or
lea
in
or
movsl
movb
pop
add
imul
sub
sbb
xchg
mov
repnz
icebp
mov
and
push
jmp
in
cmp
pop
je
adc
aam
sahf
rolb
jmp
inc
mov
mov
pushf
cmc
mov
gs
imul
xchg
pop
push
rclb
cld
mov
outsb
repz
clc
xor
mov
pop
jl
sbb
stos
or
sub
stos
aad
inc
lds
xchg
mov
outsl
cmp
push
push
push
les
icebp
leave
repnz
xchg
pop
ja
and
push
pop
ja
add
xchg
bound
push
std
aaa
mov
jnp
aad
add
xchg
sbb
mov
daa
cld
or
adc
xchg
mov
or
nop
shll
icebp
dec
lock
ret
ljmp
ss
mull
sub
stc
xor
inc
inc
cmpsb
pop
lods
jg
dec
cs
sub
or
jmp
adc
test
mov
outsl
jl
dec
cld
out
pop
jge
dec
scas
add
push
push
jns
les
ja
xchg
cmpsb
or
or
faddl
pusha
add
push
mov
mov
sbb
stos
outsl
push
sub
pop
cmp
loopne
or
arpl
xchg
pop
rclb
sub
jp
dec
sbb
add
popa
xor
mov
mov
fdivl
sbb
cli
add
repz
add
into
jge
dec
jns
adc
cmpsb
xchg
ja
mov
test
mov
sbb
cmp
cmc
outsl
test
jbe
mov
dec
jg
cltd
fldenv
push
xor
ret
cmp
sbb
jecxz
cmp
inc
test
mov
lea
stc
or
or
pop
push
mov
stos
mov
or
jmp
sbb
push
cwtl
cmp
in
mulb
cmc
mov
js
pop
inc
fwait
and
nop
mov
lea
cmpsl
dec
jnp
iret
jbe
pop
lret
mov
xor
mov
sub
mov
add
jp
dec
cmp
or
into
enter
repz
and
sbb
xchg
arpl
jmp
nop
icebp
cli
fwait
add
movsl
push
cmp
cwtl
arpl
pop
fnop
xor
sub
or
mov
push
xchg
jbe
xchg
scas
loopne
lock
pop
aad
mov
ja
faddl
in
out
lock
xorb
mov
imul
outsl
sub
ss
lcall
pop
or
shll
mov
cmp
sbb
dec
loope
and
ret
les
js
bnd
mov
stos
jl
aas
adc
loopne
popa
ret
xchg
fbstp
pop
mov
adcb
jns
xlat
ret
lahf
ljmp
dec
lahf
xchg
and
in
pop
lcall
lea
daa
fidivrs
enter
les
push
adc
jne
xlat
inc
xchg
jno
pop
imull
stc
ja
sub
insb
loopne
adc
sbb
es
mov
push
call
and
mov
mov
xor
je
xchg
sbb
stos
les
pop
add
pop
xchg
jmp
divl
jmp
xlat
dec
mov
push
jns
add
cmpsb
lods
xor
add
in
cmpsl
and
add
xchg
fsubrs
mov
mov
xor
js
ffree
lods
adc
xchg
sub
addl
inc
xchg
cmpsl
lret
mov
fldt
enter
mov
pop
insl
sbb
inc
repz
fildll
aaa
push
cmpsl
cli
jg
sbb
jle
movsl
mov
sbb
pop
cmpsl
cmpsb
repz
mov
lds
repz
shrd
out
not
mov
push
sub
popa
add
xchg
jo
dec
movsb
loopne
xchg
out
inc
sti
ret
lods
push
jno
and
ds
loope
scas
and
pusha
sbb
mov
jmp
sbb
inc
dec
dec
sbb
mov
mov
shll
dec
pop
pop
xchg
sti
or
jecxz
push
or
mov
cmpsb
jae
lret
sub
insl
popa
aam
push
add
orl
dec
test
adc
mov
push
mov
shrb
push
or
mov
gs
add
or
xor
cmpsl
test
or
push
lcall
xchg
jge
jmp
pop
mov
outsl
icebp
jae
cmp
cmpsb
xchg
out
inc
lea
cmc
outsb
sbb
lcall
adc
xchg
pop
push
add
dec
cmp
arpl
pop
cmp
xchg
ret
add
xchg
lcall
jmp
clc
adc
cmpsb
rcrb
push
mov
cmp
lldt
mov
inc
adc
pop
fsubrl
inc
add
or
push
jmp
mov
lods
cmp
leave
lret
andl
sbb
push
xchg
adc
lret
outsl
dec
iret
cwtl
cmpsb
or
imul
repz
in
mov
aad
mov
stos
pop
lock
fildll
xorl
sub
cmpsb
out
mov
sub
rcrl
idivl
sub
xor
jp
xchg
mov
out
adc
add
sbb
dec
sbb
jle
adc
xchg
pop
js
mov
sbbl
fimull
mov
jmp
cmc
xchg
cmp
push
mov
adc
jl
movb
mov
mov
xchg
loop
test
mov
fdivrs
int
cmp
jg
and
xor
gs
pop
cld
bound
cwtl
addb
jne
mov
mov
lock
xlat
xchg
inc
in
sub
ret
sub
adc
lret
in
das
ret
call
rcrb
cmpl
dec
movsl
sbb
outsl
mov
and
fidivrl
std
lods
sbb
lods
lahf
in
xor
sub
adc
jl
pop
scas
pushf
lods
jae
xor
cmp
stos
push
das
sbb
jmp
adc
mov
ret
sarl
daa
xchg
mov
add
inc
jl
out
xchg
jb
ret
in
cli
pop
push
pusha
xchg
inc
or
or
adc
push
cmpsb
sbb
jae
add
add
lock
data16
call
sti
inc
push
push
out
daa
or
mov
shrb
jmp
jae
mov
int3
out
ss
ds
push
push
jnp
repz
jle
push
sbb
imul
xchg
xor
inc
jo
or
xchg
dec
arpl
adc
pushf
dec
push
cli
or
mov
js
in
jmp
bound
in
daa
adc
psubd
addl
xchg
push
cltd
add
dec
shrb
push
rep
sub
push
push
mov
sbb
insl
mov
jmp
movsl
sbb
arpl
jnp
pop
lds
out
hlt
shlb
mov
adc
dec
jns
pop
jae
test
out
test
jo
pop
push
call
popa
pop
fbstp
sbb
pop
scas
out
lods
mov
lret
lret
pop
cmpsl
add
sbb
and
push
sub
mov
xchg
loopne
movl
pop
push
incl
pop
mov
nop
sti
out
ret
mov
and
push
aam
mov
mov
xlat
mov
insl
jp
ror
push
jmp
in
jns
cmp
inc
sbb
xor
adc
loopne
inc
insb
mov
inc
dec
add
and
jns
movsl
adc
add
mov
cmp
pop
mov
and
or
lret
enter
add
outsl
sbb
xchg
lahf
aad
mov
jl
adcl
sbb
xor
repnz
in
in
ds
pop
dec
setnp
imul
xchg
sbb
adc
sub
notl
jg
mov
movsb
add
mov
fsubrl
add
ljmp
mov
mov
rcl
sub
faddp
jbe
jb
push
cmp
lret
or
int
jno
sbb
mov
push
mov
adc
scas
xchg
jmp
fld
jge
jl
imul
push
rcrb
fdivr
adc
call
xchg
lea
out
jecxz
out
jo
in
cmpsb
shl
sbb
jmp
cwtl
sub
jp
jg
fstps
xor
or
mov
in
mov
adc
icebp
xchg
data16
or
iret
cli
mov
push
insb
je
push
sbb
mov
cmp
ret
imulb
cmp
pop
mov
shrd
jp
inc
or
xchg
loopne
shlb
xchg
test
in
jmp
pop
lods
mov
sahf
add
lock
not
fsub
ds
addl
test
fwait
push
aaa
and
lret
add
scas
pop
inc
aas
std
adc
aaa
mov
jp
movsl
fdivs
xor
xchg
pop
push
push
adc
cmp
sub
inc
adc
scas
add
test
dec
iret
mov
lcall
mov
xchg
or
in
mov
in
jae
and
lea
push
bnd
into
cmp
lahf
sub
lahf
sbb
aaa
dec
scas
faddl
push
imul
fistpl
imul
sar
test
addb
int3
jmp
aaa
cmpsl
out
pop
daa
rolb
mov
dec
aam
adc
mov
paddw
test
scas
jb
push
mov
and
enter
push
sub
mov
or
dec
test
hlt
or
mov
in
push
cmpsb
lret
push
dec
fldt
inc
or
addr16
es
jo
or
mov
jae,pn
push
jmp
outsl
mov
jae
je
movsl
outsb
sbb
es
bndstx
pop
pop
scas
add
pop
sbb
inc
push
insl
or
xchg
add
mov
mov
jne
cmp
lds
add
inc
mov
mov
xor
and
rolb
leave
pusha
jp
flds
daa
ljmp
icebp
pop
lock
cmc
and
divl
push
jecxz
js
fidivrl
js
mov
add
xchg
orb
sub
mov
nop
fwait
add
test
mov
and
push
cmp
mov
imul
fnstsw
sub
iret
call
push
pop
movsb
jmp
adc
dec
fdivs
sub
repnz
inc
sub
dec
out
in
fcmovnb
loop
ret
mov
pop
scas
arpl
mov
jl
or
add
cmp
xchg
pop
push
ds
and
jge
cwtl
in
inc
call
shr
mov
hlt
xchg
mov
mov
pop
enter
xchg
xor
ret
lea
aad
mov
nop
pop
push
jl
xor
jle
scas
call
fldenv
gs
fnsave
jb
shlb
pop
test
je
es
mov
cmc
dec
pop
sahf
push
inc
xchg
dec
je
xor
and
rorb
loopne
outsl
dec
mov
call
sbb
cmpsb
lods
push
mov
int
test
dec
ss
push
or
dec
jmp
cmp
loopne
and
paddsb
test
les
ja
pop
ret
sbb
cltd
mov
or
bound
mov
rclb
hlt
and
lds
add
pop
ja
sub
or
or
or
les
ljmp
int
or
mov
jmp
mov
in
inc
cwtl
js
mov
and
leave
xor
mov
xor
cmp
pushf
fisubl
out
cld
or
inc
arpl
fcom
mov
lock
xor
jne
inc
cwtl
aad
and
iret
sbb
push
dec
jle
call
xchg
hlt
xlat
push
scas
add
loope
bound
add
pop
sub
jnp
add
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
aam
pop
mov
push
push
push
xchg
inc
shll
pop
in
pop
movsl
out
or
scas
mov
and
loopne
jmp
arpl
out
mov
lcall
loope
daa
into
sbb
push
test
aam
fldenv
adc
adc
mov
stc
push
xchg
xchg
repnz
aaa
xor
into
jns
orl
insl
insb
mov
inc
and
jg
jl
xchg
sahf
negl
test
xlat
add
daa
cmp
sbb
dec
int3
add
inc
mov
xchg
mov
leave
movsl
push
mov
gs
mov
cmp
mov
inc
sub
sbb
jb
xchg
bound
das
test
filds
add
repnz
rclb
dec
aaa
andb
mov
subl
ss
cmp
add
ret
rcrl
mov
or
inc
fsubrs
sub
inc
cmpb
movsl
mov
pop
or
push
insb
cltd
mov
fs
push
int3
and
adc
or
sbb
push
addr16
sarl
sub
arpl
pop
mov
fwait
xchg
scas
scas
rcl
fucomip
xor
mov
mov
adc
outsl
repnz
out
notb
fisttpll
sbb
leave
mov
pop
fildll
faddl
mov
cmpb
push
test
inc
loop
mov
popf
nop
insb
flds
decb
pop
cld
xchg
xor
sbb
mov
or
sub
mov
pop
cmp
inc
loope
lea
cld
push
pop
fidivl
mov
pusha
mov
lods
inc
or
and
cmp
movsb
add
sbb
in
cld
sbb
or
jmp
add
push
or
out
scas
add
es
push
cltd
xor
scas
cmp
bound
jmp
mov
sbbb
sbb
push
daa
push
pop
push
sub
sahf
xor
test
leave
call
shl
in
jg
rorb
out
clc
leave
inc
imul
clc
pop
push
and
xchg
out
inc
pop
pop
icebp
push
jbe
add
mov
lahf
inc
data16
xor
ds
pop
test
jmp
xlat
jmp
mov
adc
outsl
cmpb
ss
ss
jg
xchg
outsl
xor
lahf
lahf
nop
test
sub
pop
pop
punpckhdq
loope
shl
ja
fadds
and
lcall
rcrl
loopne
and
xchg
jecxz
sbb
add
xor
fdivr
adc
mov
push
arpl
aas
mov
cwtl
pop
jge
and
dec
xor
fbstp
jl
jne
xchg
rclb
daa
xchg
mov
fdivr
aam
addr16
mov
mov
jmp
ds
fwait
push
mov
lods
push
hlt
loope
push
aas
lcall
loope
lret
fucomip
adc
popa
xor
repnz
adc
fbld
jl
xor
dec
pop
orb
pop
pop
popa
fldenv
notl
data16
scas
notl
and
mov
dec
scas
clc
mov
insb
mov
int3
mov
jl
int3
add
sbb
jmp
sbb
xor
test
pop
xor
mov
pop
add
sbb
sbb
call
jnp
jmp
es
mov
into
jbe
sti
add
cmc
std
arpl
xor
mov
les
and
and
scas
and
enter
or
arpl
pop
xor
addr16
or
cs
imul
sbb
js
xchg
lcall
dec
sub
inc
jno
or
cli
fcomp
xchg
aas
push
fs
jmp
jns
mov
and
mov
mov
ds
andl
loop
jb
lret
dec
fwait
add
fdiv
fdivrs
iret
mov
push
cmpsb
mov
inc
push
mov
cmp
loop
lods
jbe
lock
add
mov
cmp
sub
shr
xchg
int3
and
das
fstpl
in
push
scas
sbb
pop
push
test
jle
call
cmpsl
xchg
xchg
dec
test
into
inc
adc
subb
jo
test
sub
pop
add
frstor
jo
clc
push
push
imul
pop
inc
sub
push
dec
movsl
cmc
sub
out
sub
das
xor
jne
push
dec
lcall
shrb
jb
clc
push
xchg
jg
call
mov
fidivl
add
scas
push
dec
ret
jbe
imul
push
dec
call
mov
push
movsb
mov
cli
dec
std
mov
ret
movsb
xor
scas
adc
iret
ds
cwtl
imul
imul
mov
lret
inc
das
dec
call
inc
and
cli
xor
arpl
sar
xor
sbb
in
and
ds
rolb
xchg
mov
scas
and
push
aaa
pop
push
xchg
xchg
sub
adc
enter
add
sbb
or
pop
mov
cmp
xchg
add
dec
pop
adc
or
lods
ljmp
xor
out
push
insb
lock
lea
sbb
stos
lahf
popa
dec
call
dec
cmpsl
lods
clc
test
hlt
test
cmp
lods
and
stc
cmp
movsl
repnz
mov
lods
std
add
xor
stos
cli
out
mov
pop
das
clc
inc
nop
cmpsl
frstor
xchg
gs
sbb
shlb
mov
jns
cmpsb
xor
mov
shll
fnstsw
push
xchg
cmp
or
lret
sbb
mov
cli
imul
push
mov
lds
pop
jg
insl
nop
stc
sub
cs
mov
sti
push
xchg
cwtl
sbb
mov
inc
jae
jne
in
mov
or
loope
xchg
sub
dec
adc
or
mov
xchg
pop
in
xchg
out
mov
lret
sbbl
lock
shl
adc
std
mov
mov
or
clc
std
pusha
mov
popf
sbb
stos
adc
pop
pop
out
fcmove
in
add
push
inc
mov
out
stos
ret
add
mov
fmul
pop
push
and
leave
cld
pop
jo
xchg
push
xor
imul
and
out
loopne
push
imul
push
fistl
jne
scas
dec
ret
jb
aaa
adc
jl
or
adc
sub
xor
je
in
mov
lcall
or
mov
and
and
jmp
jne
add
subl
xchg
xchg
jg
dec
addr16
and
jo
popf
fwait
add
mov
and
int
xchg
mov
cmpl
shlb
hlt
or
push
mov
aad
rcl
out
stos
sub
ljmp
sub
loopne
xchg
stos
add
dec
push
inc
repnz
nop
fnstsw
imul
sub
arpl
sub
pop
or
inc
fiaddl
cmp
je,pt
jne
incb
jns
cmp
cld
inc
pop
imul
pop
fldl
int
cmpl
mov
test
sahf
inc
fs
jp
ljmp
or
sahf
mov
push
sub
cltd
xchg
fcmovu
sbb
sbb
sahf
lods
stos
inc
sbb
mull
shl
sub
push
into
xlat
test
std
jae
xchg
mov
enter
cmpsb
or
iret
sbb
push
cmp
cmpsb
add
into
in
xchg
xchg
les
xchg
data16
mov
mov
dec
pop
shll
cltd
cmpsb
aad
test
push
sub
mov
fldcw
mov
ljmp
add
mov
pop
in
mov
xchg
jl
add
out
xchg
ret
inc
pop
js
lret
pop
in
scas
cwtl
sbb
mov
push
into
adcb
cmc
in
and
loop
int3
and
shlb
hlt
or
jle
rolb
pop
out
into
lods
sub
fwait
mov
popf
adc
xchg
bound
addr16
pop
mov
fcoml
cwtl
cmpsl
mov
mov
mov
sar
data16
sbb
rcl
mov
and
cmp
mull
popa
in
xchg
mov
jb
cmp
or
jb
call
stos
mov
dec
mov
cs
and
jecxz
bound
cmp
daa
push
imul
add
pop
loope
or
mov
scas
outsl
xor
add
mov
daa
jle
in
mov
adc
icebp
push
push
outsl
ret
dec
pop
inc
or
xchg
cmp
xchg
cltd
sub
insl
jecxz
out
mov
test
sbb
mov
push
rclb
sbb
or
mov
xchg
jno
xchg
mov
mov
call
cld
add
jns
and
loopne
mov
cmp
push
inc
and
orl
or
dec
cmpsl
leave
fwait
xchg
inc
sub
lret
out
jge
cmp
lds
es
je
shl
movsb
shl
jg
and
cltd
loop
lret
dec
mov
and
into
sbb
mov
pop
push
test
movsb
pop
xor
pop
loope
or
scas
and
add
arpl
sub
pop
add
dec
mov
int3
sbb
shll
out
lock
aad
mov
rolb
xchg
inc
jbe
rorl
fmul
inc
fs
fsubs
mov
adc
mov
sti
daa
leave
push
imul
sbb
test
dec
xorb
mov
aad
jecxz
aad
xchg
mov
and
std
hlt
jmp
movsb
mov
push
outsb
stc
sti
out
arpl
inc
testl
lahf
shlb
sub
negl
pushf
pop
pop
fistl
sub
jne
push
stos
xchg
stos
adc
mov
inc
add
imul
int
pop
jbe
lds
dec
xor
repnz
sbb
pushf
mov
cmp
cmpsb
pop
popa
repnz
mov
punpcklbw
scas
jae
shrb
int3
stos
xor
xchg
dec
fchs
mov
xlat
cwtl
leave
cli
in
pop
push
fstpl
mov
inc
push
mov
adc
or
popa
icebp
out
lret
sub
pop
xchg
sub
movsl
jl
in
mov
imul
addr16
mov
orl
lahf
jmp
jge
or
jo
sbb
and
push
mov
push
mov
and
add
xchg
push
xchg
arpl
pop
cmpsb
xchg
pop
push
enter
jecxz
mov
in
sbb
sub
pushf
mov
push
xor
mov
dec
push
dec
aam
repz
xor
ficoml
sub
xor
pop
or
xchg
mov
and
idivl
stos
scas
ret
fnstenv
mov
xlat
loopne
lods
dec
pop
inc
cmpsl
scas
mov
xor
adc
add
or
in
icebp
scas
sbbb
imul
jge
mov
pop
add
in
loop
cmp
adc
lret
fldenv
cmp
dec
faddp
cmp
or
xchg
dec
ja
test
fs
pushf
xor
mov
mov
int3
jne
xchg
lods
sbb
jp
cmp
mov
push
push
mov
into
jo
pop
stc
enter
dec
mov
iret
push
test
dec
add
pop
xlat
jb
out
loope
shr
sbb
add
cli
push
push
call
out
inc
mov
and
loopne
out
insl
dec
bound
cmc
cmpsb
xchg
push
adc
aas
push
xchg
aad
adc
dec
dec
test
stos
jl
jl
data16
mov
xchg
cmp
sub
push
lock
ds
xchg
cmp
repnz
xor
ja
xor
xchg
pop
lcall
push
ficompl
xorl
aaa
pusha
rol
enter
and
mov
add
pop
imul
jle
nop
jl
pop
xchg
adc
xchg
push
sbb
les
jecxz
sub
sti
xor
mov
rep
add
lahf
cmp
dec
icebp
mov
out
mov
andb
fisubs
sbb
int3
cli
or
cs
jnp
jns
mov
cmp
gs
sbb
enter
je
pop
fdivp
mov
mov
xchg
cmp
xchg
xor
pop
or
aam
rorb
mov
inc
mov
mov
mov
adc
mov
pusha
cltd
cltd
mov
xchg
jp
daa
push
das
out
dec
xchg
mov
fisubrl
loopne
ljmp
sarl
aam
mov
and
pop
dec
rcrl
shl
mov
adc
push
shll
sub
in
push
jo
mov
pop
adc
inc
mov
cmp
outsb
cmp
movsl
scas
aam
add
andb
xor
pop
push
and
xchg
adc
mov
loopne
lret
jle
arpl
jne
mov
xchg
mull
add
call
fldl
jecxz
pop
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
jne
push
js
adc
and
sub
aas
mov
mov
push
in
mov
movsl
loop
jl
mov
mov
mov
sbb
mov
ret
dec
fimull
scas
popa
jbe
mov
dec
pushf
adc
mov
inc
sub
mov
push
shl
sbb
or
xorb
cltd
mov
jns
dec
popa
mov
lcall
cmpsb
xor
dec
repz
cmp
test
inc
and
sbb
stc
mov
push
mov
out
es
or
out
adc
push
movsb
adc
ja
adc
mov
cmp
movsl
dec
mov
xchg
dec
cmp
dec
daa
sbb
mov
aad
repz
fcomp
pushf
push
mov
ljmp
sbb
jne
cmpsl
fcmovnu
rcll
cmp
sub
xchg
adc
mov
inc
adc
jb
mov
jp
ja
and
enter
out
push
fimuls
js
jno
and
icebp
mov
jmp
xchg
add
int
imul
lea
add
cwtl
ret
push
and
adc
mov
jmp
xor
jno
xchg
adc
shrl
clc
jg
imulb
or
inc
add
repz
jl
or
sub
sbb
inc
dec
incb
and
rorb
sti
imul
enter
in
adc
push
dec
adc
fsubrl
pushf
mov
test
cmp
pusha
push
xor
mov
stos
test
pop
cmpsb
loope
movsb
fldl
mov
xor
ret
mov
jge
or
nop
es
dec
mov
shrl
or
push
movsl
repz
pshufw
sbb
loop
pop
jns
cld
das
das
xchg
out
ljmp
sti
ljmp
jb
aam
mov
adc
stc
and
xchg
out
loopne
mov
xor
jecxz
das
mov
jge
jb
pop
sub
or
arpl
in
xor
and
cld
cmc
mov
imul
rol
insl
mov
ficoml
jno
das
clc
loope
test
loop
or
adc
sub
mov
jno
lret
test
mov
addr16
fs
mov
xor
jge
adc
icebp
xor
mov
cmp
lock
icebp
decb
push
clc
dec
jne
mov
xchg
jbe
xchg
pop
aas
stc
xorl
test
mov
fisttpl
pop
or
pop
mov
lahf
xor
and
sahf
sbb
pop
lds
dec
pushf
jg
lock
adc
pop
aam
xchg
inc
jns
int
bound
fstps
dec
in
add
aaa
shl
into
sti
push
fdivrl
fcmove
add
jnp
jns
clc
shlb
mov
sub
dec
pop
or
push
push
es
sub
enter
ljmp
cmpsl
xor
and
test
into
inc
clc
data16
fstpt
loope
aaa
and
loope
pusha
adc
outsb
pop
cmp
sbb
push
xchg
test
mov
lods
cltd
lds
outsl
sub
mov
int
hlt
xchg
xor
std
cmc
in
lahf
int3
mov
mov
test
mov
add
jne
gs
aas
ret
mov
mov
ret
push
sub
imul
and
insl
push
loope
sbb
jae
mov
mov
jne
orb
pop
scas
mov
jo
mov
push
rcrb
dec
cltd
lods
je
leave
cli
repz
pop
daa
mov
arpl
dec
push
mov
orb
clc
sbb
cmp
or
ds
repnz
imul
nop
ret
aad
jbe
push
add
or
sub
pop
mov
cli
or
and
cld
push
mov
and
sub
xor
ss
add
or
jle
xor
or
or
sbb
mov
fildl
mov
leave
sti
mov
inc
jecxz
inc
ja
push
xchg
cmovg
xor
std
pop
mov
mov
in
jns
jg
ljmp
stos
cmp
mov
imul
repz
repz
jg
test
popa
jbe
or
pushf
mov
gs
ljmp
cs
lret
inc
sub
std
loope
leave
cmp
rcl
iret
jnp
mov
sahf
add
and
fstl
lds
dec
sbb
mov
cld
into
xor
push
cs
push
imul
mov
dec
notb
mov
cs
ja
push
adc
or
dec
inc
es
xchg
sti
or
ror
sbb
testl
pop
ljmp
xchg
in
xor
pop
pushf
pop
mov
cmpsl
cmpsb
cs
dec
into
mul
insb
cmpb
jge
push
push
mov
xchg
add
inc
ss
divl
mov
fldt
gs
mov
xor
or
ljmp
movq
fists
scas
mov
inc
add
shlb
pop
nop
mov
mov
mov
xchg
scas
lret
inc
adc
sbb
push
push
add
aas
jp
aad
stos
rcll
aad
hlt
push
shl
std
dec
jl
mov
sbbl
xchg
sbb
lods
mov
lds
jae
xlat
in
pop
mov
aaa
adc
dec
ficompl
ss
ds
sub
stc
hlt
jns
xlat
pop
pop
mov
ret
fidivrl
xlat
push
out
and
scas
mov
jae
inc
jo
mov
daa
sbb
cmc
cmpsb
out
sarb
jl
jo
cmp
das
ffree
xchg
mov
dec
add
pop
pop
fcomi
mov
daa
jae
sub
out
ds
adc
xchg
cmpsl
aad
push
sbb
sbb
mov
rorb
mov
push
mov
jl
call
push
outsb
sub
in
adc
insl
enter
stc
sub
in
push
out
mov
repnz
fisubrs
je
push
xor
pop
out
pop
js
cmp
add
push
sub
cltd
out
inc
stos
test
dec
insb
leave
and
mov
test
cmp
sub
dec
int
fcmovnbe
popf
fldt
mov
mov
add
bound
add
jae
lahf
sub
xchg
push
out
xor
inc
jne
orl
insl
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
movsb
js
mov
psllw
sub
fldenv
xor
pop
mov
lret
test
shr
jb
enter
jo
call
cmp
and
nop
subl
xor
mov
mov
test
scas
popa
xchg
jne
cmp
mov
xor
add
mov
ret
jno
xchg
mov
sub
sti
into
clc
pop
pop
mov
int3
std
scas
mov
pusha
dec
xchg
testl
ret
inc
outsb
fwait
inc
aas
hlt
push
or
xor
mov
mov
dec
adc
cmp
mov
fdivrs
inc
ja
sbb
and
xlat
rcrl
xchg
sbb
xchg
adc
add
cmpsl
mov
loop
scas
pushl
rcrb
test
dec
mov
push
jnp
addb
sub
call
mov
jmp
mov
ljmp
mov
or
push
call
insb
in
das
mov
and
sub
pop
mov
popa
cmp
push
int
dec
test
sbb
xchg
aas
insb
das
jle
jno
sar
sub
inc
jmp
fnstenv
jmp
std
inc
popa
adc
in
gs
xchg
jle
add
lret
inc
push
outsb
push
movsl
push
les
push
popa
push
sti
cmp
or
adc
mov
push
loop
ja
dec
pop
sahf
jae
sub
push
filds
loop
or
fistl
repz
daa
sar
cmp
imul
cmp
dec
inc
jg
outsl
push
xchg
jb
std
jb
jp
ds
sub
lock
mov
mov
xchg
repnz
inc
shl
xchg
fildl
jecxz
xchg
adc
jle
sub
fs
pop
adc
jae
bound
shld
in
test
loop
call
lea
call
sti
div
dec
ret
mov
addr16
cmp
frstor
inc
xor
cmpsl
dec
jge
dec
sbb
aam
fsubrs
and
cmp
dec
cmp
cmpsb
adc
and
mov
stc
mov
call
xchg
movsb
out
dec
sti
pop
pusha
mov
dec
push
sub
int
pop
aad
mov
adc
or
mov
and
aas
fcmovnu
loopne
cld
mov
mov
movsb
clc
pusha
cmp
lock
sti
jmp
lock
mov
push
mov
iret
rcrl
fwait
mov
popf
or
push
insb
and
ja
cmp
popa
jae
orl
pushf
aaa
outsb
jb
cmp
call
inc
adc
fld
lods
inc
movsb
xchg
add
xchg
shrl
clc
and
jno
sbb
out
pop
enter
std
loopne
cwtl
ret
mov
in
and
in
dec
shrl
lock
cltd
and
mov
mov
inc
and
sahf
xor
or
je
jl
cltd
jle
roll
cmp
push
call
pusha
inc
xchg
mov
clc
xor
push
inc
dec
pop
sbb
test
lds
and
mov
and
in
push
faddl
jno
popa
mov
lret
fsubs
sub
movl
loop
insb
mov
arpl
mov
cmp
mov
xchg
sub
sahf
fwait
cwtl
mov
in
loope
dec
pop
pop
ret
adc
xchg
adc
outsl
pop
and
out
mov
ficoml
xor
mov
xor
mov
imul
and
cmpsl
addl
repz
or
outsl
jle
mov
cwtl
mov
mov
dec
sbb
test
cmc
add
xor
pushf
and
iret
les
add
jo
jmp
pop
adc
insl
or
adc
push
pop
icebp
and
lahf
repnz
clc
cmc
ja
je
push
enter
push
jp
arpl
or
xchg
xor
outsl
fwait
mov
out
jae
and
jne
aad
sub
xor
movl
lahf
es
jae
jmp
nop
pop
jno
add
popa
xchg
sub
xchg
adc
sub
pop
push
rclb
fcmove
xchg
mov
shlb
xchg
fldenv
stos
lahf
enter
mov
test
test
adc
lea
adc
lahf
hlt
test
cld
dec
mov
inc
xor
into
push
adc
mov
mov
call
loopne
std
int3
testb
test
add
sub
xchg
movsb
pop
dec
mov
inc
cmc
push
pop
xor
xcrypt-cfb
cmpsl
movsb
das
lods
add
lahf
std
cs
adc
adc
scas
inc
das
cmp
jns
xchg
sti
lcall
loop
addr16
push
insl
xchg
sub
inc
jge
nop
addr16
aam
movsb
outsb
cmp
in
out
mov
cli
movsl
sbb
mov
repz
xchg
sbb
enter
and
fbstp
add
push
loope
cmc
jns
out
out
icebp
dec
fstl
pop
leave
xchg
outsl
rclb
imul
rcrl
out
add
pop
or
cmp
push
pop
loopne
cmp
scas
sahf
sub
mov
inc
inc
pcmpgtb
adc
sub
scas
xchg
imul
dec
in
xchg
jae
or
sbb
xor
and
rcll
push
js
fs
in
and
subb
sbb
outsb
jmp
divb
inc
dec
push
cli
in
sbb
ja
push
mov
mov
mov
jb
adc
mov
popf
jno
scas
xorl
lods
adc
shll
dec
pop
push
add
jno
pop
mov
sbb
add
xchg
cmpl
fwait
into
icebp
push
sub
mov
test
xor
aas
and
aas
or
cmpsb
inc
es
inc
dec
mov
out
arpl
push
mov
rep
verw
jp
mov
jbe
icebp
and
iret
xchg
in
lret
mov
sti
lahf
inc
inc
inc
addr16
movl
jmp
pop
ret
mov
daa
or
repnz
pop
jmp
add
cmp
enter
dec
cmp
pop
lock
pop
cmpsb
sbb
sti
push
imul
jge
repz
icebp
xchg
and
or
pop
xor
add
pop
insb
sahf
mov
cmpb
inc
sbb
jb
dec
iret
lea
xchg
ljmp
xor
fs
adc
dec
mov
sub
dec
pop
fucomp
lds
mov
sbb
cmpsl
rolb
mov
or
inc
and
rol
mov
movsl
popf
rorb
jle
iret
enter
jmp
test
mov
sbb
xor
stos
clc
mov
mov
jmp
sbb
push
adc
xchg
int3
xchg
dec
adc
and
ja
sbb
jo
jnp
mov
repz
shll
testb
aam
cld
dec
mov
scas
sbb
pushf
sbb
mov
inc
cmp
mov
loope
ja
jne
xor
rorl
into
mov
xchg
inc
nop
popf
shlb
adcb
push
jp
ljmp
dec
cmc
push
shrl
ja
test
push
sub
movsl
test
shl
push
sbb
push
sub
inc
mov
mov
jmp
mov
xchg
jns
xor
jmp
testb
testb
ja
fiadds
jb
movb
fildll
cld
push
push
cmp
sub
sbb
insb
mov
add
sbb
pop
inc
pusha
cmp
sbb
mov
out
es
mov
sbb
call
je
pop
fdivrl
lods
into
sub
sbb
aam
pop
xor
xchg
mov
aam
add
js
xor
mov
testb
call
jecxz
shr
out
mul
ds
push
jg
add
idiv
push
jbe
xchg
leave
pop
adc
xor
sahf
cmc
repz
into
sbb
xchg
in
ljmp
mov
es
and
outsb
add
test
pop
cmc
fldt
int
lods
pop
arpl
mov
iret
sbb
sbb
jne
fcoms
sahf
decl
mov
test
pop
adc
int
hlt
fdivl
push
lret
lea
push
cs
push
mov
pop
fldl
addb
lret
pop
mov
neg
sbb
mov
in
jns
push
inc
lods
jno
fwait
mov
scas
sbb
shlb
arpl
pop
rorl
mov
inc
mov
push
push
cli
lret
addr16
rcll
movl
data16
push
fucomi
scas
xchg
push
pusha
sub
sti
pusha
inc
daa
inc
stos
dec
ljmp
in
inc
test
daa
push
jo
clc
pushf
adc
pushf
cmc
xchg
pop
cmpsb
sub
cltd
orl
xchg
sub
push
xchg
xor
mov
mov
jns
mov
cmp
mov
fisttps
loope
leave
clc
inc
cmp
or
add
sub
mov
add
cmp
fcmovnbe
pop
mov
call
cltd
lea
pop
mov
push
dec
pop
jne
jl
cmp
lods
push
dec
inc
jns
inc
mov
push
xor
rorl
in
dec
popf
js
insl
mov
mov
adc
push
push
and
idivl
jbe
popf
or
sbb
dec
bound
jg
inc
dec
and
mov
insb
push
jbe
mov
inc
sub
dec
aaa
mov
scas
cmp
cmp
push
mov
int
call
int3
lock
test
fiaddl
test
out
adc
dec
popf
das
push
int3
cmp
leave
cmpsb
ret
test
jae
js
cmpsb
inc
fldl
dec
repz
pop
pop
xor
xor
sub
adc
dec
mov
leave
and
adc
addb
cs
sbb
adc
or
dec
je
push
mov
dec
push
and
pop
mov
insl
mov
push
inc
sbb
mov
sub
sub
inc
insl
aaa
rcrl
loopne
push
add
sub
inc
in
mov
testb
mov
repz
je
shlb
adc
imul
outsb
xchg
mov
movsb
add
bound
and
pop
or
ja
sar
out
popf
lcall
mov
sahf
mov
icebp
xor
das
mov
lds
rdmsr
into
aad
pop
inc
clc
call
mov
push
mov
mov
loope
push
inc
ret
data16
jno
cmc
jge
daa
xor
icebp
xchg
lret
ds
lock
imul
xchg
mov
mov
adc
nop
out
mov
jnp
inc
call
sti
call
mov
xchg
and
mov
rol
xlat
add
andb
stos
ret
push
jp
gs
mov
into
movhps
sahf
imul
loopne
dec
or
sub
lds
fucomip
and
daa
mov
call
loop
sar
lret
loop
bound
out
fists
aad
ret
repnz
mov
pop
stos
sbb
lds
rcrl
xor
adc
mov
inc
icebp
cli
cmp
loope
pop
js
call
push
ss
xchg
insb
pop
and
push
push
or
je
pop
xchg
sahf
cmpsb
aas
push
and
mov
in
cmpsb
xchg
xor
mov
data16
cltd
pop
loopne
or
push
lret
ret
cwtl
jns
mov
xchg
push
pop
xchg
pop
clc
jl
lret
cmp
lods
idivl
push
dec
or
inc
es
out
xchg
pop
hlt
out
aaa
push
stos
out
xchg
das
sti
jnp
inc
inc
inc
jbe
xchg
add
mov
jns
mov
dec
rorb
xor
das
ja
dec
pop
add
dec
xor
movsl
add
cmp
pusha
fnstcw
xchg
pop
push
stos
adc
pop
in
push
insl
test
push
ret
mov
in
andb
lret
fistps
ljmp
pop
inc
test
mov
cmp
adc
orb
jb
out
pop
roll
mov
or
icebp
mov
sub
push
loop
repz
dec
xor
jl
pop
push
mov
jnp
and
jle
push
in
inc
xor
ret
rorl
inc
pop
subb
mov
fcmovnb
insb
repnz
mov
pusha
pop
cmc
mov
ret
mov
sub
xchg
das
jmp
mov
adc
or
test
sub
and
or
test
aam
pop
mov
pop
daa
jb
fadd
xchg
call
test
imul
mov
fisubs
sti
scas
insl
add
clc
ss
inc
mov
clc
inc
mov
sbb
insb
and
dec
enter
mov
jp
adc
cmp
cmp
pop
push
and
sbb
cmpsl
fldt
dec
adc
loop
sbb
ret
and
jo
out
sbb
jecxz
out
out
lret
aam
xor
scas
push
jmp
lds
mov
leave
fcomi
pop
nop
insb
jbe
dec
mov
dec
dec
ja
es
mov
lock
add
in
rorb
insl
notb
aaa
inc
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
enter
cmpsl
xchg
jno
mov
stos
scas
lea
imul
inc
repz
test
push
jge
mov
outsl
xor
jns
insb
fs
mov
sahf
jmp
sbb
mov
adc
imul
bound
jl
push
dec
fildl
loope
dec
xchg
ljmp
xchg
jns
dec
sub
xchg
pop
lea
test
loop
outsl
adc
pop
jb
cmp
into
cltd
pusha
ds
leave
stos
test
xchg
mov
scas
cs
xchg
fchs
cs
adcl
outsl
adc
xlat
add
lea
sahf
test
bound
mov
push
insb
pop
cmp
ret
fisttpl
lods
lds
dec
mov
jl
call
inc
jmp
jne
push
ja
pushf
adc
sub
jo
mov
mov
pop
ret
xchg
filds
or
iret
bound
mov
cmp
mov
loopne
fwait
jle
jo
int
mov
jl
mov
arpl
imul
cmpsb
adc
aad
dec
push
mov
lret
cmp
inc
jl
add
mov
pop
jle
ja
mov
repz
imul
pop
cmp
mov
or
push
lcall
mov
cmp
stos
xor
xchg
and
xor
test
js
lods
int3
or
testl
jp
into
dec
jb
lds
insl
jnp
push
in
aas
fdivrl
push
jmp
mov
push
push
jp
and
adc
inc
xchg
mov
imul
inc
iret
pop
mov
ss
and
sub
jno
int3
mov
scas
rcll
inc
and
repz
cmp
inc
popf
sub
aad
clc
lods
sbb
incb
dec
push
fstpl
mov
adc
cmpsl
sbb
and
clc
pop
and
dec
xchg
or
dec
outsb
push
xchg
mov
loopne
xchg
or
insl
lods
xor
insb
out
mov
adc
sbb
push
push
shll
shl
popf
gs
gs
out
int3
pop
and
inc
sarl
jno
mov
or
test
add
inc
test
push
xchg
inc
dec
cs
add
cmp
adc
cli
xor
xor
insb
outsb
cmp
divl
dec
movsl
shll
xchg
inc
inc
fcmovnu
mov
out
out
popa
out
cmp
into
xor
inc
mov
inc
push
lea
mov
mov
cs
popf
cmpsb
incl
or
sti
or
mov
inc
xchg
xchg
mov
addr16
arpl
xor
jmp
je
push
icebp
outsl
xchg
jle
push
imul
mov
cltd
mov
add
js
clc
call
aam
jns
les
popf
jmp
cmp
and
ja
fistpll
shll
mov
flds
xor
insb
ret
fnsave
cmp
mov
fs
and
je
pop
data16
in
in
or
mov
loop
popf
or
fcomip
adc
sbb
jno
inc
mov
adc
xchg
dec
mov
or
sbb
repnz
int
adcb
push
scas
scas
ret
or
out
push
sbb
sbb
ss
fisubs
mov
mov
pop
pop
push
addb
push
loope
sub
fistpll
push
fwait
sub
mov
movsl
sbb
push
add
arpl
and
push
sub
test
test
jg
add
jbe
add
les
inc
or
in
xchg
push
sti
or
sub
repz
inc
lcall
ds
loope
shlb
mov
inc
cmp
xlat
pop
xlat
mov
movsl
dec
xchg
hlt
xchg
jnp
notl
popf
pusha
out
imul
and
flds
insb
mov
jmp
push
xchg
loop
dec
jnp
mov
lods
shr
jno
xor
inc
loop
push
shll
sbb
iret
mov
je
pop
gs
out
ss
push
andb
cltd
xlat
call
pcmpeqw
sub
test
enter
sahf
and
mov
push
in
scas
sbb
jae
cld
or
xchg
loope
jnp
cmp
and
cltd
sbb
jmp
imul
jmp
pop
insl
jmp
mov
mov
montmul
cmpsb
inc
xchg
orl
add
mov
rolb
pusha
mov
mov
or
stos
xchg
jmp
movsb
aaa
dec
jmp
push
enter
lods
test
imull
int3
in
in
dec
and
and
inc
rorb
addr16
push
xor
push
xor
insb
adc
frndint
push
lret
fistl
lock
insl
lret
cltd
mov
mov
mov
push
sbb
loopne
pop
dec
fucom
pop
sahf
xchg
or
mov
mov
stos
add
mulb
push
inc
sub
dec
jb
scas
mov
arpl
daa
jecxz
mov
xchg
adc
mov
mov
rclb
sar
loopne
mov
std
or
push
xchg
inc
or
add
cmp
icebp
test
iret
sub
mov
fisttpl
jecxz
mov
mov
adc
add
lcall
cmp
negl
bound
inc
jmp
add
in
mov
testl
dec
scas
lds
jnp
or
xor
push
pop
inc
mov
dec
pop
popf
adc
lea
int3
pop
pop
sub
and
push
scas
lret
test
pop
lret
or
imul
add
cltd
sbb
pop
out
in
push
ffreep
test
dec
mov
xlat
adc
sbb
pop
jae
push
test
pop
hlt
je
rorb
loope
sbb
testl
mov
and
sub
repnz
cmpsb
adc
pop
insb
sarl
shlb
mov
jo
lds
mov
cmpsb
cmp
je
adc
enter
imul
lock
dec
aas
scas
enter
and
movsl
add
test
test
test
sub
sub
pop
mov
daa
lods
fldenv
adc
scas
cld
mov
fidivrs
adc
movl
insb
sbb
pushf
cltd
inc
mov
or
and
pop
jl
cmp
jnp
xchg
push
fcoml
jmp
call
fwait
movsb
fimuls
xchg
xchg
push
fildll
out
insb
dec
pop
lcall
fld1
push
xor
push
or
sarl
xchg
inc
out
out
rcrl
jp
es
adc
mov
dec
adc
xor
or
iret
shl
or
inc
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
dec
enter
adc
addl
in
cmp
push
call
repz
push
pop
lods
das
add
or
inc
add
std
xor
data16
das
mov
pop
mov
and
outsb
and
jae
mov
imul
and
cmp
out
in
jge
loope
aaa
out
cwtl
mov
sub
jno
out
cmpsb
sub
iret
test
data16
and
adc
dec
in
push
es
mov
adc
xchg
lahf
aad
cmp
pop
pop
xchg
mov
cmp
xchg
js
out
or
inc
lret
xor
cwtl
add
std
and
pop
js
jo
ret
aas
mov
je
sbb
mov
xchg
xor
imul
or
int3
std
je
in
pop
xorl
jb
test
mov
fdivs
mov
loope
mov
les
clc
jp,pt
in
dec
jno
jp
pop
add
push
pop
shrl
push
sub
insb
mov
les
dec
mov
imulb
das
iret
andl
or
movsb
push
mov
jb
inc
pop
cmp
mov
sti
addr16
push
imul
stc
loope
mov
icebp
pop
mov
inc
xchg
jbe
add
pushf
sub
shll
sahf
pushf
outsl
pushf
in
leave
xor
and
xchg
or
cmp
or
adc
or
inc
push
pop
add
jmp
xor
cmp
xchg
ja
hlt
xchg
js
sub
ljmp
ret
or
cmp
imul
sbb
rorl
or
insl
cmp
push
roll
cmc
fildl
andl
pop
jecxz
je
sbb
mov
lret
xchg
repz
sbb
push
shrb
and
sub
mov
adc
push
jg
aad
mov
lods
jecxz
jne
inc
out
adc
cmp
test
pop
icebp
jl
stos
push
cmp
add
inc
loopne
sub
jecxz
push
jl
repz
neg
daa
dec
lods
cltd
lahf
inc
dec
mov
and
out
push
sub
out
fnstenv
and
bound
mov
adc
stos
ret
jmp
lods
xor
movsb
or
mov
cmp
out
icebp
jle
imul
pop
mov
imul
in
test
or
ljmp
leave
sub
jge
add
mov
dec
lock
addr16
or
push
xchg
jecxz
pop
adc
mov
in
rorb
fsubs
pop
xchg
xlat
mov
fdivl
out
addl
xor
sub
dec
ja
mov
xchg
cld
testl
push
push
adc
jl
aas
ficompl
or
jnp
lahf
xor
xchg
les
jns
mov
pushf
ss
and
fcmovnbe
inc
clc
cmp
sbbb
sub
push
shl
cmp
in
ffreep
push
pusha
std
leave
mov
cmc
gs
mov
xchg
push
pop
xchg
stos
add
mov
mov
adc
mov
jg
and
das
or
mov
or
movsb
in
or
dec
adc
push
sti
inc
push
xchg
in
pop
into
xor
fwait
icebp
inc
fstpt
insb
sarl
icebp
and
or
push
or
aam
js
and
mov
out
xor
mov
add
adc
adc
mov
xlat
push
in
sub
into
adc
andb
mov
movsb
in
lcall
test
es
imul
pop
dec
and
shll
leave
lret
bound
fs
es
cli
push
xchg
mov
mov
mov
jmp
sbb
xchg
cld
scas
out
iret
inc
ficompl
mov
jecxz
out
cmpl
xchg
jbe
pushl
dec
xor
mov
push
in
or
test
loop
push
pop
or
jo
push
and
out
lret
mov
adc
jg
or
je
sbbb
aad
pusha
dec
sbb
mov
lock
rclb
inc
adc
mov
ds
mov
and
insl
pop
adc
stos
je
ret
lcall
xor
daa
mov
shl
xchg
rcr
dec
mulb
movsl
push
xchg
popa
imul
loope
jmp
movsb
mov
std
cmp
mov
call
or
outsb
bound
xchg
jg
or
stos
mov
adc
popf
lock
pop
sti
movsl
imulb
sbb
inc
mov
outsb
leave
mov
into
mov
xor
xchg
lods
test
xor
arpl
leave
sti
push
mov
mov
rclb
push
cs
enter
enter
jmp
and
add
mov
cmp
dec
adc
cmp
adc
mov
ja
hlt
mov
leave
xchg
xor
das
je
inc
xor
adc
xlat
lds
xor
mov
mov
pop
push
lods
das
mov
mov
xor
int3
push
xchg
divl
cmp
and
jo
mov
push
faddp
int
mov
sbb
jl
bound
sbb
pop
test
sets
inc
mov
and
iret
push
add
pop
test
mov
leave
mov
cld
insb
lcall
mov
btsl
fstpl
jl
aas
imul
jae
ror
lcall
adcb
pop
inc
xchg
xorb
inc
mov
mov
shll
pushf
mov
int
dec
imul
xchg
sub
push
addr16
je
lret
sbb
mov
cld
pushf
fsubl
adc
adc
adc
xlat
inc
jo
or
adc
lcall
testl
sub
sbb
cwtl
hlt
push
lods
cmpsb
mov
cwtl
fwait
lret
movsb
or
mov
sub
jae
mov
outsb
mov
nop
in
jge
push
ja
icebp
push
loope
pop
mov
inc
inc
pop
xchg
push
xchg
mov
sub
outsl
sbb
rcll
pop
adc
cmp
push
pop
leave
dec
enter
mov
push
ds
pop
std
int3
addr16
aam
mov
ss
inc
cmc
sti
mov
dec
pop
out
mov
imul
jmp
mov
fnstsw
or
repnz
into
cld
dec
xor
jg
push
test
push
sbb
dec
stos
cs
cmp
cld
xchg
cmc
inc
pushf
pop
mov
sbbl
loope
cld
test
and
mov
lret
cmp
fcoms
icebp
push
mov
stos
mov
xchg
sbb
cmp
and
push
mov
es
in
sbb
lods
push
sub
loope
or
daa
push
push
mov
into
jnp
int3
push
mov
insb
or
es
mov
or
lea
and
mov
fs
lret
pop
sti
sub
movsl
adc
movb
mov
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
jge
into
xchg
cmovl
pop
ja
adc
popa
ror
xchg
ret
stos
cmp
daa
cli
jge
add
fwait
push
mov
or
and
fwait
addb
add
push
mov
jbe,pn
aad
or
pushw
fsub
fldl
cmp
xor
jmp
xchg
xchg
rep
ljmp
jl
mov
rcll
loope
shl
ss
fsubrl
mov
cmp
inc
scas
xchg
sbb
je
sub
add
imul
xchg
mov
sbb
mov
lock
inc
jecxz
jns
add
mov
sub
lret
lcall
pextrw
jp
in
cmpsl
mov
leave
mov
cmp
movsl
push
pop
xchg
adc
pop
add
in
sbb
test
xchg
mov
or
or
or
les
pushf
incl
push
clc
shrb
add
fbstp
insb
inc
scas
mov
aad
hlt
dec
cmp
test
cmp
insb
xor
add
into
mov
xor
nop
div
pushf
mov
mov
sbb
fisubrs
incl
sub
je
outsl
pop
mov
jo
adcb
data16
jae
sbb
mov
loop
insl
out
jb
mov
sbb
and
jns
push
popa
or
je
out
rcll
arpl
mov
mov
mov
test
imul
mov
adc
lods
xchg
mov
add
dec
dec
loop
push
pop
js
out
std
pushf
jmp
dec
test
xchg
jl
mov
repnz
mov
mov
mov
aad
imul
movsb
daa
push
cmp
mov
leave
fcmovu
sbb
mov
mov
add
aam
test
das
pop
rolb
lds
inc
xchg
jne
test
stos
xchg
mov
pusha
nop
cmpsb
int3
mov
mov
in
sahf
mov
cwtl
push
mov
jo
fidivl
ds
adc
loopne
les
icebp
insl
aam
pop
jecxz
sub
addb
in
leave
jge
aaa
sub
mov
dec
push
jae
cltd
jl
push
mov
mov
sub
lock
jl
mov
dec
int
ss
out
imul
jp
shlb
aad
mov
dec
sbb
mov
andl
adc
xchg
ret
dec
scas
sub
pop
adcb
mov
inc
leave
mov
mov
dec
push
test
pusha
mov
sbb
inc
pop
mov
test
adc
inc
mov
cmpsl
xlat
and
cmp
out
push
inc
xchg
mov
mov
mull
push
sbb
pop
hlt
int
loop
loopne
jbe
in
addl
out
imull
out
ds
jl
bound
xchg
std
in
push
cltd
mov
mov
mov
dec
xorb
mov
pop
lahf
and
cmp
sub
in
push
sbb
push
jg
inc
aas
adc
xchg
mov
ja
sub
daa
scas
test
lea
outsb
sbb
dec
ja
das
add
sbb
push
mov
je
cmp
hlt
icebp
std
dec
mov
jge
sbb
jecxz
pushf
add
clc
daa
cmpb
movsb
lock
adc
or
xchg
in
dec
negl
popa
adc
cmp
addr16
lds
jecxz
adc
pusha
popa
ret
pop
inc
mov
xchg
push
cltd
dec
stos
sbb
fdivrp
outsl
jmp
mov
and
push
inc
pop
and
das
rcl
mov
cmp
inc
daa
lods
in
push
rcll
daa
cmp
sbb
mov
lret
cmpsl
insb
dec
sbb
mov
xchg
inc
xchg
leave
cmc
enter
xor
mov
ss
rep
push
lea
fsts
lds
enter
testl
push
fsubr
adc
mov
sti
in
jmp
out
cmpsl
pop
test
cmp
xchg
cmp
sbb
cli
push
rcr
pop
movsl
subb
add
add
or
mov
sti
mov
sub
adc
or
xor
mov
xchg
pusha
adc
jp
xor
mov
shr
outsb
lods
jge
fs
pop
mov
dec
lret
xor
stos
popf
xorb
mov
popa
pop
sbb
arpl
push
lahf
pop
hlt
shrl
scas
jle
idivl
inc
add
inc
push
stos
add
pop
adc
test
lcall
rolb
xchg
daa
scas
mov
insl
push
insb
pop
ljmp
jge
xlat
stos
add
jp
pusha
fwait
roll
and
gs
xchg
ja
fiaddl
cwtl
cmp
stc
in
or
cmp
aaa
or
js
lcall
jmp
aam
dec
repz
sti
mov
sahf
lcall
xchg
arpl
cmp
or
cmp
pop
sbb
in
aaa
add
roll
test
cltd
stc
sbb
push
xlat
inc
popa
sbb
push
cmp
adc
lods
imul
call
imul
mov
in
pop
sub
jne
mov
inc
jnp
pop
ficompl
pop
mov
adc
in
sarb
cmp
xchg
lea
inc
in
lret
divl
cmpsl
lret
rcr
xchg
cmp
scas
jecxz
std
push
mov
adc
fnsave
scas
shlb
xor
inc
mov
inc
mov
mov
adc
xor
sbb
push
fildl
icebp
dec
adc
faddl
outsb
leave
dec
mov
mov
mov
pop
stos
cmpsb
dec
fisubs
adc
xchg
mov
adc
or
mov
push
lods
jle
mov
in
fidivl
dec
xchg
ja
cmpsb
ret
jmp
push
add
imul
stc
push
dec
push
subl
or
lahf
inc
out
arpl
insl
adc
xlat
sbb
loop
mov
add
loope
sub
fmull
push
mov
and
fbld
and
outsb
rorl
cmp
xchg
sub
js
lock
pop
and
popa
aaa
xor
fldenv
es
test
lret
mov
mov
push
mov
jns,pn
cltd
lea
xor
xchg
into
dec
dec
inc
sbb
test
out
dec
lret
jle
inc
xchg
add
mov
or
adcl
push
cli
push
bound
jbe
sbb
enter
das
add
ss
inc
lea
jns
mov
mov
aam
pop
sbb
outsb
leave
movsb
push
mov
loopne
gs
jecxz
or
mov
scas
xchg
pop
outsl
or
pop
mov
mov
test
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
pushf
xchg
add
add
sub
loope
jecxz
mov
outsl
lahf
scas
jo
jnp
loop
in
and
and
orb
mov
inc
rcrb
rclb
add
xchg
mov
pop
js
cmp
out
sbb
mov
and
push
mov
cld
popa
fidivrl
jle
cltd
pusha
cmpsb
loop
out
push
lahf
call
aas
aam
loop
fstpl
pop
pop
adc
imul
jecxz
rorb
aad
push
jle
out
hlt
addb
scas
jg
mov
cltd
or
stos
push
lret
inc
dec
enter
ficomps
xchg
shlb
push
cmp
or
cmp
or
sbb
ret
out
mov
xchg
sub
cmp
jnp
xchg
adc
mov
iret
rcll
pop
cmp
outsb
or
xchg
enter
and
sub
rorl
jae
dec
push
loopne
and
popa
les
xor
jns
arpl
fwait
xor
pop
dec
dec
inc
and
and
mov
in
xor
enter
mov
jp
or
lahf
in
pop
andb
outsb
rolb
xlat
ja
imul
and
testl
test
jmp
das
sbb
out
ja
movl
pop
imul
shll
xor
mov
dec
scas
test
insb
clc
push
mov
cmp
mov
daa
std
and
les
std
mov
loop
jae
bound
fsubrs
xchg
fistps
addr16
aas
mov
mov
orl
inc
ret
out
ds
imul
mov
rcrb
popf
bound
mov
repnz
movsb
test
inc
jmp
add
push
sbbl
addl
rorb
cmpsb
xchg
sub
add
sbb
test
mul
inc
or
data16
fistpll
in
mov
and
mov
insb
aas
repnz
ds
lcall
ja
fistpll
aad
fstpt
pushf
mov
popa
mov
cmp
into
mov
push
cmp
fldcw
push
xchg
jo
movsb
add
push
dec
xor
mov
pop
dec
add
lods
xchg
dec
or
mov
xchg
jp
fsubrl
inc
xchg
inc
xor
xlat
sub
jmp
jge
int
stos
push
hlt
push
push
test
insb
dec
dec
inc
mov
sbb
jle
iret
xchg
xchg
out
les
xor
xorb
mov
mov
push
lock
rol
loop
out
stos
and
pop
ljmp
xchg
mov
mov
sub
add
sub
gs
icebp
push
and
aas
fwait
mov
enter
icebp
adc
fdivrs
stc
xchg
mov
mov
mov
xchg
dec
xchg
xor
call
nop
std
out
add
ljmp
out
es
popa
in
fcomip
jge
dec
roll
icebp
jmp
mov
dec
stc
out
fdivs
cmp
je
mov
pop
in
leave
in
test
add
das
pop
test
addl
lock
fdiv
sbb
and
add
rol
pop
fs
add
movsl
cmp
addr16
sub
shlb
lock
mov
sbb
push
xchg
mov
xor
arpl
lock
pusha
xchg
pop
lods
into
jl
pop
xchg
mov
mov
cmp
adc
dec
mov
cmpsb
mov
or
pop
or
add
rcrl
lods
mov
aaa
push
imulb
lcall
mov
mov
push
ss
mov
in
out
xor
imul
scas
into
mov
adc
enter
lea
xor
enter
inc
das
inc
jo
and
and
pusha
mov
push
outsb
cmp
mov
jp
fbld
dec
xor
out
mov
ss
or
sub
add
mov
sti
mov
shlb
fdivrs
xor
lods
arpl
sbb
insb
inc
pop
aas
clc
int
cmp
xor
jmp
dec
gs
cmc
rol
fwait
jnp
push
push
push
inc
mov
pushf
dec
dec
mov
nop
cmp
out
mov
loope
xor
fs
in
add
mov
mov
mov
lock
pusha
jecxz
xchg
fisubrs
adc
rcrl
sarl
or
gs
cli
lahf
pop
outsb
test
mov
insl
pop
scas
pop
sbb
jecxz
int3
or
or
xchg
xchg
cmp
mov
or
or
fwait
sbb
pushf
add
mov
xor
mov
jno
movsl
stc
mov
repz
jae
add
loop
push
add
lods
mov
or
insl
mov
or
shll
mov
nop
lods
fisubs
sbb
or
fdivr
hlt
fdivl
inc
push
stos
loop
jbe,pn
push
jge
push
xchg
dec
ret
pushf
xchg
lcall
aaa
loop
jle
je
mov
mov
jg
das
and
fidivrs
lock
adc
inc
imulb
add
pop
clc
inc
loop
dec
inc
in
nop
ficoml
je
cmp
out
dec
push
xchg
dec
inc
mov
xor
jecxz
pop
xlat
cmp
mov
lods
lret
jnp
pop
insl
inc
cld
addr16
sbb
sbb
pop
shrl
sbb
mov
sbb
mov
adc
mov
xchg
and
mov
jne
ficompl
nop
xlat
test
push
jge
lods
incl
leave
sbb
and
and
test
jl
xchg
pusha
insb
stos
mov
and
pop
mov
lds
int
jge
sbb
aaa
lods
push
adc
js
popa
movsl
outsb
fcmovnbe
fmuls
lds
adc
out
inc
sar
shlb
mov
mov
jl
cmpsl
jb
aam
gs
pop
pop
and
jmp
shll
adc
mov
arpl
mov
imul
hlt
out
xor
mull
popa
out
jecxz
adc
xchg
adc
adc
mov
adc
mov
push
jmp
out
cli
insl
int3
mov
pop
sub
push
mov
jmp
decb
test
pop
cld
mov
pop
inc
je
and
pop
sbb
sbb
mov
shrl
and
mov
cmp
sbb
mov
sub
pop
mov
ret
aad
sub
add
pusha
and
loopne
dec
in
lahf
push
or
push
lret
gs
mov
cmp
jnp
sbb
pop
mov
repz
in
push
mov
inc
loopne
insb
enter
test
jle
fs
jno
push
push
int
aaa
pop
adc
mov
mov
dec
push
insb
flds
mov
testb
ja
jns
pop
adc
sbb
lods
aaa
repnz
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
or
loop
jo
cmpsl
cmp
adc
sub
scas
or
adc
jp
push
arpl
outsl
mov
mov
sbb
adc
sbb
jo
pop
dec
in
sbb
fidivrs
cmc
push
sbb
xor
pop
in
out
inc
stc
jle
rorl
and
rolb
pop
insb
scas
xchg
cwtl
lds
mov
cmpsl
jg
scas
rcl
mov
push
push
sbb
pop
ficoms
jge
xlat
fs
xchg
scas
adc
mov
sbb
lret
test
push
pop
fidivrs
aaa
jo
popl
fsubl
cmpsb
xorl
xchg
ja
add
testb
insl
jecxz
sbb
pop
jne
xchg
add
lret
or
out
loop
sbb
inc
pop
jge
inc
sbb
mov
mov
ljmp
std
test
push
push
cs
xchg
repz
mov
lret
jbe
mov
inc
es
fsubrp
xchg
lret
inc
and
sbb
movsb
imul
loop
fwait
std
push
bound
or
push
cltd
mov
xchg
frstor
mov
aam
add
jle
test
xor
jl
inc
repz
pop
jecxz
xchg
jp
xor
faddl
or
sub
sahf
clc
out
clc
pop
xchg
test
push
cmpsb
add
xor
jl
sbb
in
mov
orl
aad
xlat
pop
and
and
adcb
push
mov
cmp
in
jl
mov
icebp
add
rorl
or
sahf
hlt
pushf
test
jecxz
insl
sub
inc
jb
je
pop
pushf
shl
push
or
push
roll
inc
fisubrs
test
mul
ljmp
push
mov
pop
aas
scas
mov
fidivrl
adc
xor
xchg
roll
push
das
mov
popf
mov
ret
fidivs
xchg
shl
add
cwtl
fcompl
push
clc
push
nop
inc
dec
xorb
inc
cmp
cmpl
mov
mov
mov
ja
push
add
sarl
adc
mov
stos
popf
mov
cmc
xor
sub
test
push
mov
or
push
jbe
inc
clc
adc
pop
sub
ds
orl
lock
out
jb
pop
pop
mov
out
xor
mov
dec
pop
pop
push
and
loopne
dec
jg
loope
addb
lret
dec
sub
xor
aaa
adc
inc
dec
cmp
jne
ljmp
and
bound
stos
xchg
dec
push
sahf
xchg
sahf
in
xchg
and
addr16
lds
push
clc
mov
cltd
push
nop
popf
xchg
mov
dec
lds
clc
ljmp
inc
jmp
es
push
fdivs
insl
xchg
pop
inc
fcomip
ja,pt
sub
and
jo
mov
lods
sub
sub
mov
clc
lret
cmp
lcall
outsl
jge
outsl
pop
popa
jge
cld
push
add
xchg
mov
xchg
push
dec
mov
jb
sbb
dec
aam
sbb
scas
mov
push
inc
inc
dec
pop
lods
dec
or
xchg
js
mov
or
adc
push
in
inc
adc
adc
jp
popa
mov
sbbb
push
sahf
mov
dec
dec
mov
in
inc
scas
out
jb
adcl
inc
sbb
jp
shrb
sub
jae
stos
mov
mov
test
test
cs
pop
jbe
ret
pusha
sbbl
addr16
xchg
out
sbb
stos
cmc
mov
push
scas
cmpl
aas
sbb
ljmp
icebp
inc
mov
mov
movsl
cmpsl
cwtl
push
out
sub
stc
xchg
pusha
pop
int3
inc
iret
js
jp
mov
insl
aam
out
sub
pop
adc
icebp
push
inc
and
or
sub
jns
adc
testb
fsubrl
cmc
bound
push
or
idiv
push
cmc
outsl
jns
jmp
stos
push
ja
cmp
jno
nop
sbb
cld
cmp
call
jns
push
pop
inc
ja
sub
int3
orl
and
or
xchg
loope
je
mov
cmp
sbb
insl
mov
dec
popa
scas
ss
cmp
xchg
leave
push
outsb
push
fistl
cld
pusha
lods
xor
mov
rorb
lret
pop
movl
scas
add
or
add
dec
pop
out
mov
loopne
add
inc
daa
xchg
mov
inc
xchg
sub
shll
adc
xchg
outsb
push
fiaddl
push
sbb
push
fdivrl
push
call
sbb
les
dec
insb
sub
cmp
xchg
outsb
inc
scas
cmpsl
lret
out
sahf
jae
adc
push
pop
jne
rcll
xor
xor
mov
inc
aam
push
and
lods
push
rcr
movsb
jb
out
dec
les
or
mov
add
fs
adc
or
mov
sub
mov
jno
loopne
sahf
arpl
and
mov
js
push
test
mov
roll
xlat
pushf
mov
xor
and
and
push
lea
mov
test
sbb
iret
test
test
pop
iret
xchg
dec
js
xchg
hlt
or
jl
dec
enter
fdivl
stos
pushf
sub
xchg
dec
test
dec
test
jne
add
pop
leave
aad
cmp
dec
pop
lret
jno
add
sbb
xchg
sub
lds
xor
xor
in
mov
les
cmpsl
jb
or
lcall
into
xorb
rorb
test
sub
sar
sub
loopne
mov
xor
dec
push
imul
push
xchg
mov
insb
ljmp
testb
jno,pn
outsl
fisubs
je
in
mov
mov
xchg
mov
sahf
mov
cmp
xchg
mov
fstps
popa
jmp
pop
xchg
lret
ret
jae
pop
sub
mov
pop
push
mov
in
adc
mov
pop
or
mov
pop
cmp
add
repnz
mov
std
push
shlb
iret
pop
or
ret
xchg
insl
fimuls
push
sub
cwtl
adc
push
add
jl
mov
mov
mov
repnz
jl
add
imul
repnz
or
cmp
fstpt
inc
pusha
jnp
dec
dec
pop
inc
mov
rorl
stos
mov
inc
jl
orl
and
inc
and
dec
cs
out
sbb
int3
cmp
mov
dec
xlat
shr
test
pop
sub
in
aad
sbb
pop
jg
push
mov
xchg
sbb
adc
dec
add
pop
andb
outsb
push
xchg
daa
arpl
fldcw
inc
add
daa
dec
lods
pushf
dec
mov
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
and
push
xchg
xor
jno
or
adc
repnz
loop
ret
out
out
shrl
mov
xchg
inc
stos
jecxz
jns
add
hlt
daa
pop
loop
push
and
dec
add
cwtl
inc
inc
jns
jo
add
mov
bound
sbb
xchg
push
int
or
mov
pop
dec
adc
int
fdiv
sbb
popa
inc
push
dec
sti
mov
adcb
inc
mov
sbb
cltd
sar
xorb
jp
add
dec
dec
push
aaa
aad
movl
mov
inc
inc
lret
in
cmpsb
ficoms
imul
sahf
arpl
aaa
out
jnp
aaa
sti
insl
insl
and
outsb
pop
in
xchg
and
xchg
xlat
sbb
psubusw
fisubs
add
inc
leave
jge
cmp
rdtsc
push
mov
adc
xchg
push
aas
rorl
mov
fmull
fdivp
into
dec
mov
gs
lret
daa
push
dec
daa
shlb
add
aam
xor
mov
es
sub
pushf
pop
mov
xchg
in
inc
push
mov
iret
cmc
in
mov
fsubl
mov
movsb
push
scas
inc
adc
es
movntq
hlt
inc
mov
adc
arpl
sbb
push
stos
lods
inc
adc
adc
hlt
sbb
sbb
and
mov
inc
clc
pop
fs
mov
dec
inc
pop
mov
fimuls
aad
push
rcll
push
loop
xlat
das
rcrb
popa
sbb
rorl
push
inc
add
out
push
and
fs
enter
cmpb
lock
dec
cmp
nop
loope
sub
xorb
lret
adcl
lcall
shll
pop
lods
test
or
jle
addr16
ja
in
and
mov
jl
inc
inc
andl
fcoms
pop
jmp
mov
cmp
nop
not
stc
pop
and
adc
lods
sub
push
cwtl
ficoml
ds
jae
fwait
test
inc
and
repnz
ja
js
and
nop
lcall
or
out
hlt
or
jecxz
aas
mov
xchg
rorl
sub
and
fcoms
je
fildl
cmp
inc
push
push
jo
and
dec
sbb
fmull
lahf
cmpsb
pop
jo
cmc
pop
mov
fdivrs
int3
rorb
rcr
int
jnp
out
test
scas
jg
xor
jg
jnp
out
lds
negl
xchg
loop
lods
inc
xchg
xchg
icebp
loop
fcompl
mov
sarb
dec
mov
mov
xchg
loopne
fistpl
xlat
jl
sub
idivb
lods
cmp
pop
addr16
mov
dec
inc
xchg
or
inc
sub
mov
aam
inc
xlat
sub
cmp
sub
test
jnp
mov
loope
xchg
addr16
jne
pop
loope
cmp
cmp
mov
sbb
into
ror
add
sbb
mov
mov
hlt
mov
pop
clc
inc
mov
lret
flds
mov
adc
pop
fsts
pusha
push
mov
mov
es
mov
xlat
adc
adc
push
out
cs
std
das
dec
sub
popa
mov
xchg
mov
ss
pop
sub
pop
dec
sbb
lea
push
call
out
nop
stos
idivl
call
cmp
adc
insl
sub
fwait
inc
js
xor
ljmp
lds
xor
bound
jl
adcb
pop
dec
cmp
fstpl
gs
jle
xchg
jmp
shlb
adc
lds
sahf
add
fistpl
int
into
rcll
outsb
bound
jmp
mov
or
out
ljmp
aam
pop
sub
rcll
or
shrb
dec
xlat
repnz
in
add
js
jnp
test
imul
cmpsl
call
cmpsb
outsb
fiadds
leave
dec
jmp
mov
cltd
pop
aad
jno,pt
je
dec
loope
shll
pushf
insl
mov
lret
fcoml
into
push
xchg
rcrb
insl
mov
sbb
inc
fwait
cmp
call
mov
jmp
pop
jl
int3
pop
sbb
or
push
sub
lods
sbb
pop
andb
sub
iret
push
mov
or
scas
int3
sbb
addr16
mov
and
fsts
dec
ljmp
adcl
les
daa
fwait
cmpsl
mov
sub
fcom
ret
push
add
push
bnd
call
or
leave
lods
dec
lret
mov
into
jns
mov
and
int3
cmpb
test
mov
and
dec
push
dec
lea
aas
xor
fcomp
add
fstl
cs
orb
dec
sbb
mov
add
mov
testl
mov
lret
in
pop
pushl
imul
fimull
rorl
test
stos
ret
das
les
lods
mov
dec
cmp
xor
add
add
push
int3
dec
sub
shll
int
inc
sbb
lock
add
lret
push
les
arpl
mov
pop
in
jle
xchg
pushf
les
int3
test
lret
add
jp
inc
scas
lock
fisubs
adc
sbb
rcll
shll
jne
sbb
or
add
int3
stos
lds
cmpsl
xchg
hlt
sahf
and
jne
cli
sbb
and
je
pop
out
xchg
pop
jbe
dec
xchg
in
push
jbe
dec
jp
jmp
test
cmpsl
or
aam
sbb
adc
adc
std
ficoml
xchg
jbe
mov
mov
jle
sti
shrb
mov
movsl
sbb
es
xchg
mov
jmp
cltd
xchg
addr16
loop
pop
daa
addr16
jp
mov
jo
inc
lahf
jge
xchg
or
outsl
cmp
mov
les
lahf
pop
lret
push
xchg
out
aaa
sub
jge
sbb
pop
movsb
sub
mulb
mov
push
stc
push
mov
outsb
cwtl
out
inc
sub
xor
fiaddl
jecxz
mov
paddsb
pop
neg
cli
jae
push
mov
mov
mov
shrb
inc
popf
jge
cmpsl
xchg
jmp
scas
push
lret
fcmovnu
ljmp
jge
add
cmp
xor
lods
movsl
dec
cltd
cmpsl
icebp
insb
sti
jg
cltd
in
pushf
rclb
pushf
mov
fwait
cltd
inc
test
mov
cmp
mov
xchg
fdivl
sbbl
mov
xlat
cmp
fwait
or
inc
ja
out
pop
mov
sub
and
or
enter
mov
into
xor
mov
ljmp
daa
mov
into
es
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
arpl
dec
dec
fdivl
add
std
or
out
jmp
push
add
pop
imul
out
sahf
in
xor
enter
imul
out
dec
lock
cmp
int3
or
xchg
popa
shlb
cmc
int
mov
ret
fdivrs
stos
mov
xorb
xor
imul
es
int
gs
andl
enter
mov
adc
ja
and
mov
push
loop
xchg
mov
mov
or
leave
cmc
and
add
stc
adc
movsl
ficoms
xor
cmpsb
xor
out
sbb
mov
cmp
inc
xchg
pop
pop
jge
mov
add
jp
cltd
inc
sbb
in
out
sarb
cmp
pop
jno
and
dec
inc
nop
cmp
inc
in
sbb
adc
std
push
jp
cltd
test
add
mov
faddp
fwait
xchg
or
xchg
jnp
mov
sub
dec
fsubl
inc
add
pop
int3
test
data16
jge
pop
xchg
mov
data16
sub
mov
xor
or
add
mov
push
mov
mov
pop
fcmovnu
push
xchg
mov
cmp
xorl
insb
mov
outsl
mov
mov
arpl
mov
mov
out
test
cmp
pusha
pop
jne
adc
gs
cltd
jmp
fwait
push
mov
ret
lea
add
test
fwait
mov
std
xchg
or
gs
cmp
push
dec
rorb
or
test
lahf
int
cld
movsl
cltd
lret
stc
and
outsb
in
xor
pop
sub
std
xor
mov
jl
xchg
xor
mov
pop
push
jmp
sahf
jmp
inc
adc
xlat
sbb
insl
sahf
fldcw
inc
out
and
xchg
sub
inc
mov
inc
aas
in
loop
jo
into
or
sbb
in
mov
adcl
jmp
ds
mov
jne
movsb
pop
jns
je
ret
mov
push
jmp
xchg
testb
mov
dec
movsl
mov
icebp
nop
dec
or
adc
sub
and
pop
int3
aad
stos
push
pop
into
in
push
inc
xchg
ja
mov
push
mov
lret
es
xor
nop
pop
mov
out
test
das
mov
ret
aad
xchg
out
sbbb
xchg
or
cltd
sarl
out
inc
scas
cwtl
inc
rcl
sahf
mov
mov
aaa
int3
lea
arpl
jmp
int3
cmp
inc
and
popa
test
fcmovnbe
jg
jmp
push
je
add
pop
ds
sub
pop
pop
mov
rcl
mov
addl
push
ret
hlt
jno
cmpsl
fnstenv
insb
cmc
icebp
div
xchg
pusha
cmc
mov
in
fisttps
cmpl
aaa
sbbl
push
pop
test
mov
shrl
lds
test
pop
jb
cwtl
das
mov
cmp
stos
neg
sub
fwait
popa
mov
xchg
xchg
xchg
stos
add
fidivrs
and
cmp
out
add
jl
loope
ret
orl
jle
std
mov
repnz
loopne
lret
xor
or
push
lret
movsl
mov
or
jl
mov
mov
sub
or
scas
mov
out
and
jmp
test
xchg
gs
popa
sbb
aaa
sub
bound
pop
pop
sub
jns
cs
push
adc
je
cmpsl
mov
inc
sub
adc
and
pop
xchg
sub
adc
inc
std
mov
scas
lahf
mov
mov
and
jmp
repz
xchg
lock
mov
xlat
arpl
and
push
pop
icebp
mov
mov
lock
inc
pop
scas
dec
adc
jnp
jecxz
loopne
add
das
xor
pop
movsb
push
enter
das
mov
aas
dec
pop
or
and
jo
int
out
dec
out
xor
jle
inc
mov
loop
push
xor
cmp
mov
xor
add
movsl
push
in
jl
jg
push
mul
fwait
pop
pop
xchg
int3
mov
jno,pt
adc
push
adc
add
xchg
sti
adc
or
sbbl
sub
pop
enter
sbb
and
cmp
das
sti
lea
mov
mov
fsub
and
jb
jnp
ja
mov
je
js
add
in
fimuls
inc
stos
dec
shrl
jno
xchg
jg
adc
movsb
mov
dec
mov
shlb
mov
iret
imul
inc
enter
idivl
int3
dec
inc
sbb
arpl
inc
cmp
sbb
mov
xchg
inc
dec
lds
mov
jecxz
inc
cmpsb
fwait
hlt
roll
add
mov
mov
dec
push
add
pop
test
sbb
sub
mov
inc
xchg
cmp
sbb
pop
xor
stc
cli
jb
lret
pop
cltd
pushf
les
cmpsl
adc
add
rcrl
lret
nop
inc
mov
fidivs
inc
xchg
push
or
dec
int3
mov
inc
fldl
adc
pop
mov
je
lock
and
push
cmp
or
imul
aaa
push
es
gs
test
sahf
push
js
push
fyl2xp1
add
adc
fisttps
mov
push
sub
pop
or
inc
pusha
jle
cmpsl
pop
test
out
push
lret
xchg
repnz
test
xor
dec
loopne
inc
mov
or
enter
call
xor
xchg
jns
jle
and
sub
mov
mov
mov
cmp
adc
xchg
hlt
in
data16
xor
and
xor
xor
mov
nop
aam
inc
sbb
mov
mov
aaa
dec
xchg
sbb
xor
clc
fsubl
or
aaa
lods
mov
lahf
fptan
adc
iret
insb
cld
dec
cmp
test
in
in
scas
in
addl
push
sub
sti
sub
enter
loop
or
xor
in
push
mov
jo
fcomps
sbbb
cli
jne
cwtl
jecxz
pop
cli
xchg
hlt
ss
inc
add
adc
inc
xor
fimuls
movsb
loop
or
shll
pop
jl
mov
nop
scas
mov
fildl
xor
pop
sub
imul
imul
ja
stos
jne
xchg
shrl
pusha
push
adc
out
mov
or
nop
sub
cwtl
adcb
cmpsb
in
inc
lahf
jno
ja
js
subl
stos
rcll
inc
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
inc
push
xchg
add
add
xchg
xchg
pcmpeqb
call
cli
mov
shr
pop
or
imul
xchg
add
mov
loop
and
adc
mov
mov
mov
flds
in
push
int3
ret
call
xorl
out
push
lods
push
outsb
push
mov
push
and
pusha
stos
out
ljmp
sahf
jae
aam
imul
dec
cmp
rcll
mov
xor
rcrb
push
sub
movsl
in
dec
test
sbb
movsb
pop
insl
cld
adc
fldl2e
jecxz
ja
jmp
popl
push
mov
ljmp
outsl
mov
lods
imul
stos
cmp
inc
mov
ljmp
das
js
mov
stc
mov
aaa
mov
lcall
lods
add
shlb
in
std
inc
scas
imul
je
xchg
xchg
cmp
sbb
mov
fs
mov
sbb
stos
loope
push
out
xor
out
mov
mov
out
aam
stc
mov
pop
sbb
in
stos
int3
lcall
bound
iret
push
push
ficoms
pop
into
scas
in
jo
gs
sub
inc
rcll
aaa
out
mov
ss
fistpll
xchg
jne
jae
jg
test
mov
cmpsb
xchg
loopne
adc
std
xchg
das
jmp
dec
mov
jge
mov
pushf
jns
out
xor
xchg
mov
dec
mov
out
jb
jg
push
std
push
lds
or
dec
scas
jo
xchg
and
push
cli
add
jmp
xor
xchg
inc
lods
and
mov
xchg
mov
cltd
je
sbb
lahf
lret
jo
jmp
xor
xor
stc
lods
adc
sahf
xor
into
sub
sub
xchg
jecxz
ds
xchg
addr16
ss
scas
sub
popf
rolb
push
mov
inc
sub
xchg
nop
lahf
ja
loop
jle
xchg
sti
insb
lock
bound
mov
xchg
fwait
int
movsl
scas
mov
outsb
cli
hlt
mov
adc
shll
mov
xchg
inc
sbb
cmp
mov
ja
sbb
push
mov
push
rcrl
dec
int3
fcomps
addr16
mov
es
mull
sahf
fildll
pop
cmp
mov
js
sub
add
sub
xorb
pop
or
jns
lret
faddp
push
fsubrs
push
adc
jle
push
dec
es
das
and
pop
xchg
aad
sbb
push
stos
cwtl
or
pop
cmp
mov
xor
sarl
push
cmp
sbb
inc
jnp
fs
leave
je
ficoms
fdivl
test
adc
mov
jbe
nop
lods
aam
into
lock
mov
pop
mov
jl
das
bound
mov
cli
jae
mov
push
pop
mov
cmp
sbb
cmp
jecxz
dec
adc
mov
pusha
and
fcmovbe
and
leave
into
je
les
jno
cmp
ficoms
xchg
xlat
iret
jl
xchg
movsl
or
push
shrl
sub
dec
xor
flds
dec
test
jae
cwtl
lock
mov
jo
cwtl
xchg
mov
xchg
test
pop
rcll
sbb
pushf
push
imul
mov
pop
sbb
shlb
lock
sahf
jecxz
data16
xchg
jecxz
test
fcomps
dec
into
jo
sbb
dec
mov
pop
xor
jb
in
mov
sarl
mov
add
jns
shrl
movsl
ret
shl
popa
sub
sbb
shr
fisubrl
js
cmc
mov
mov
cmpsb
outsb
jg
sbb
jb
xchg
bnd
out
cmpl
xor
mov
xor
movsb
filds
mov
push
ja
int
pop
subl
out
or
clc
lods
aaa
sbb
aaa
cli
xchg
aaa
loop
cmpsb
dec
xor
mov
sbb
ret
push
mov
gs
cmp
stos
jae
xor
adc
stc
bound
stos
xor
mov
test
push
sub
mov
sub
adc
ds
lret
mov
sub
scas
test
pusha
mov
cs
xchg
fsts
aad
mov
adc
ret
mov
test
fcoml
out
pop
xor
dec
int
xor
push
xorb
shll
aam
loope
ljmp
adc
jge
xchg
mov
scas
push
mov
jno
cmp
and
inc
xchg
add
mov
insl
popa
clc
repz
mov
cwtl
or
sub
scas
sbb
jae
cs
ljmp
popf
mov
cmpb
or
add
cmp
inc
jmp
cmpsl
xchg
push
enter
shr
xchg
jge
jae
iret
xchg
aaa
xchg
jns
stos
inc
push
jle
push
ss
pop
icebp
adc
test
scas
mov
cmp
adc
inc
add
das
xor
lea
xlat
adc
ret
arpl
scas
push
jecxz
jno
jnp
xchg
mov
push
ret
push
es
in
push
test
dec
mov
add
jnp
and
clc
ficoms
add
ss
jle
lds
sbbb
lret
push
sub
push
loope
out
dec
popf
in
sbb
pop
mov
mov
movsl
xor
in
mov
adc
mov
and
arpl
mov
shll
mov
mov
sub
pushf
sbb
or
ljmp
mov
iret
sbb
jne
mov
pop
popa
mov
and
outsb
mov
je
pusha
mov
mov
mov
inc
jp
pop
cld
loopne
icebp
mov
sub
cwtl
mov
sbb
in
out
leave
pop
inc
xor
add
jbe
inc
lret
sbb
sub
aam
push
sub
mov
xor
adc
xchg
movsl
lahf
int
not
fwait
cmp
nop
and
int
pop
popa
sub
imul
mov
mov
in
lret
mov
cmpsl
mov
xor
mov
and
xchg
movsl
mov
call
enter
and
mov
sti
inc
sub
je
jg
xor
sub
outsl
add
lret
push
dec
sub
neg
outsl
or
mov
out
jb
ficoms
cltd
mov
inc
mov
and
cltd
mov
adc
add
add
mov
fcomi
data16
rep
and
sub
popf
cli
mov
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xchg
data16
cli
adc
imul
pop
push
fwait
jle
jmp
mov
mov
sub
xchg
test
adc
adc
xor
insl
enter
pop
test
add
inc
dec
add
clc
js
or
fnsave
rep
std
mov
mov
divb
in
test
stos
frndint
test
dec
xor
and
cmp
jmp
dec
xor
dec
lds
sub
pop
mov
push
sub
push
push
ljmp
inc
bound
shl
cmp
push
faddl
test
and
mov
xor
push
stos
jnp
mov
sbb
push
jno,pn
pusha
hlt
lcall
adc
fcmovbe
sbb
jp
sub
repz
xor
dec
loope
in
mov
dec
and
pusha
sahf
outsb
xor
mov
dec
scas
int
jne
daa
loop
add
andl
rorb
out
xor
inc
cmpsl
shrl
jle
in
xchg
xchg
int3
add
insl
stos
inc
out
and
data16
adc
inc
mov
jnp
mov
sbb
xchg
imul
loopne
int
out
dec
into
adc
aaa
shrb
and
repnz
lods
sbb
lret
iret
xchg
loopne
inc
fcmove
mov
dec
in
mov
fs
inc
adc
popf
fdivs
push
dec
jns
fisttpl
pop
shlb
add
lret
adc
cmp
sub
stos
jae
jae
mov
test
addr16
je
movsl
or
je
mov
es
sub
cmp
lret
nop
lret
add
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
