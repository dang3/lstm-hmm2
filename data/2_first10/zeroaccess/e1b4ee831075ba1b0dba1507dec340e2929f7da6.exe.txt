in
aas
pop
push
or
xor
and
fnstenv
inc
int
ja
movnti
shrl
jae
lods
push
fldcw
outsl
out
sahf
push
lds
divb
idivl
aaa
leave
mov
adc
imul
inc
cmp
push
add
lds
pop
push
loopne
imull
aaa
sub
jmp
mov
xchg
push
cmpsb
andb
sbb
notb
pop
or
and
sbbb
cmp
lcall
jmp
jbe
xchg
push
adc
loop
stos
fldcw
sbb
in
mov
mov
lret
lods
push
loop
jge
mov
lods
and
push
push
in
push
test
jle
mov
dec
imul
ss
sbb
xchg
mov
mov
mov
mov
push
xor
pslld
push
ret
ljmp
jo
repz
xor
into
dec
xchg
add
das
arpl
stc
or
and
rorb
xor
sub
add
ficompl
inc
rolb
adc
or
movsl
cs
insb
shrb
mov
sahf
mov
out
push
int
lods
pop
std
sub
pusha
mov
adc
loopne
adc
movsb
js
mov
push
jmp
iret
fisttpl
leave
adc
popa
test
jne
dec
je
mov
xchg
out
int
inc
das
int3
outsl
scas
loopne
dec
xlat
jecxz
and
in
push
or
add
aam
pop
insl
cmp
fwait
push
sub
push
jae
pusha
cs
mov
mov
fsubl
dec
and
push
mov
dec
adc
and
lahf
xor
xor
mov
lock
lds
sbbl
mov
pushf
push
inc
sub
lods
pusha
mov
xor
cmp
rcl
out
scas
ret
sub
sbb
xchg
adc
cmp
jl
fs
lock
inc
dec
mov
sbb
clc
add
push
pop
test
xor
pop
das
push
jb
imul
mov
xor
sahf
mov
xchg
lock
gs
jl
mov
out
aad
out
sti
add
test
sub
pop
stos
adc
nop
insb
dec
loope
popf
xchg
cld
or
sub
stos
and
inc
sub
mov
adcb
pop
ja
sbb
stos
cmpsb
leave
std
push
cmpsb
test
xchg
sbb
push
mov
in
inc
movsb
fcomps
jecxz
stos
lcall
jo
shr
add
fs
lea
std
push
lahf
xchg
jnp
jne
mov
xchg
inc
inc
dec
loopne
push
push
lods
loope
cmp
jle
xor
shlb
insl
and
jp
cmp
repnz
lock
xchg
addr16
or
lods
cmp
js
mov
jnp
imul
cs
loop
pop
push
xchg
outsb
inc
and
ljmp
push
mov
shll
in
xor
fnsave
andl
pop
scas
arpl
mov
mov
pop
fwait
sahf
jl
push
in
add
xchg
add
cmp
inc
dec
shlb
gs
mov
scas
gs
sub
sub
call
mov
mov
mov
adc
nop
cmpsb
mov
xor
pop
ja
popa
jo
data16
sub
data16
jp
hlt
sbb
outsb
out
adc
rcrl
aaa
lods
sarb
jne
in
cmp
jmp
mov
scas
jbe
int
out
mov
dec
je
aaa
xor
add
imul
fimull
call
inc
pop
jp
mov
jb
xor
sub
jne
jo
stos
push
loop
fmull
jl
dec
lret
and
add
push
mov
mov
mov
movsb
cmp
dec
mov
int3
push
ljmp
aaa
adc
lds
stos
in
loop
and
sbb
add
jnp
out
sub
inc
jmp
pop
ja
divb
sbb
shlb
test
xor
mov
pop
push
lret
rcll
cmp
jnp
or
mov
int3
cs
inc
repz
adc
jns
inc
sbb
leave
sub
mov
aaa
imul
out
inc
sbb
or
scas
push
dec
cmp
lret
jae
mov
jle
inc
push
xchg
dec
pop
pop
xchg
jbe
fldenv
mov
mov
scas
pop
and
xchg
push
das
outsl
insl
cmp
cld
enter
push
push
jmp
out
dec
mov
or
jnp
pop
adc
pop
adc
ds
movsl
outsb
insl
add
inc
cmp
mov
add
js
out
push
in
mov
cli
popa
add
insb
mov
sub
in
lock
xlat
inc
sti
ror
and
jl
sub
pop
test
gs
js
and
adc
sub
aas
ficompl
lret
and
mulb
xor
ss
mov
and
inc
xchg
int3
nop
call
in
out
dec
push
cmp
aaa
cmpsl
jl
shll
dec
jecxz
cwtl
sahf
filds
test
arpl
mov
es
mov
leave
jmp
test
push
mov
pop
das
push
test
repz
inc
icebp
ret
in
sub
fcomi
xchg
push
push
or
and
cmp
ret
repnz
lahf
xor
movsb
jp
pop
push
push
das
and
jge
outsb
iret
mov
cmp
mov
lds
decb
lret
mov
mov
repz
imul
add
orb
or
adc
jbe
pop
mov
mov
ljmp
add
repnz
fsubrs
das
and
dec
sbb
fs
or
loop
add
or
inc
ds
hlt
jae
lcall
out
cmpsb
iret
jae
arpl
sub
push
aaa
outsb
xchg
jne
sub
sub
scas
mov
loop
shr
jne
jo
push
xchg
out
sub
fs
sbb
pushf
xchg
add
xchg
cli
adc
or
test
aad
pop
add
mov
popf
sbb
pop
jno
xor
sbb
movsb
mov
stc
and
lcall
push
fistps
rcll
icebp
pop
in
int3
lods
repz
ret
outsl
mov
xor
in
jb
lods
out
mov
popf
into
js
or
mov
fisubl
sbb
mov
leave
pop
pushf
out
xlat
out
cmp
loope
adc
push
arpl
jno
xlat
xor
insb
jno,pt
movsb
cld
adc
pop
call
cmpsb
pop
out
mov
sub
inc
ror
data16
sub
popl
inc
cld
daa
aad
in
or
cli
or
lea
loopne
movsl
xchg
adc
leave
sub
jge
iret
jmp
mov
es
popf
scas
lods
jp
fiadds
xchg
pop
popa
dec
xchg
sbb
xor
movsb
xchg
or
test
inc
and
pusha
inc
jmp
sarb
and
inc
mov
pop
push
data16
and
mov
and
mov
adc
xor
inc
cmp
sbb
jo
cmpl
add
pushl
jbe
xchg
mov
mov
jno
pop
and
inc
fbstp
mov
pop
fstl
or
into
outsb
xlat
out
jle
xchg
repz
sahf
mov
lods
inc
lock
js
popa
jl
int
outsl
sub
les
cmpsl
jmp
imul
jns
xchg
sub
icebp
jmp
mov
add
add
ljmp
stc
mov
test
push
pusha
fcmovbe
nop
and
mov
mov
testl
stos
jb
pop
mov
cmp
mov
filds
cmp
das
inc
jbe
pushf
out
push
movsb
and
sbb
out
dec
mov
xlat
dec
ss
pop
push
dec
adc
push
and
and
lcall
cs
jmp
and
lret
add
loopne
mov
add
cmp
ss
inc
sbb
rorl
lods
iret
aaa
or
mov
loopne
xchg
or
out
mov
inc
sub
jns
cmpl
jne
mov
cmp
iret
cltd
mov
ret
push
mov
xchg
test
mov
mov
adc
xor
lods
addr16
pop
jbe
pop
sti
int
mov
xor
dec
mov
xchg
mov
lcall
mov
jno
mov
or
mov
xchg
stc
xchg
adc
daa
popa
inc
ljmp
je
fistps
mov
lret
mov
int3
ja
in
mov
testb
dec
xchg
inc
add
mov
ds
pusha
push
add
sbb
cld
dec
popf
loopne
ds
sub
fldl
neg
mov
sub
mov
xor
add
mov
adc
mov
or
xchg
jp
leave
stos
aaa
lock
in
lea
mov
jae
fsubl
loop
stos
push
mov
pop
jl
daa
daa
ljmp
mov
add
in
ret
pop
test
and
es
stc
xor
mov
es
mov
jle
add
pop
lock
rolb
mov
mov
test
dec
adc
jmp
mov
cmp
data16
repnz
in
aaa
jle
add
sbb
and
cs
sbb
imull
aad
sub
push
and
inc
daa
shll
xchg
dec
cmp
sub
pop
xchg
add
popa
lods
test
jo
cltd
adc
and
mov
jne
and
sbb
lds
or
xlat
fs
aas
add
pop
popf
cs
lock
jp
insl
mov
sarb
push
loop
in
add
jmp
add
jp
or
lahf
jne
mov
add
das
pop
cs
adc
jmp
ja
mov
rcrb
pop
ss
test
popf
addr16
loopne
adc
pop
cltd
sub
out
cmp
push
outsl
and
jne
add
xor
scas
popf
push
push
cmp
sub
shr
insb
push
mov
jle
addr16
inc
gs
ds
lcall
out
cmp
pop
ret
xor
add
cmc
pop
xchg
imul
out
enter
jne
arpl
fdivl
mov
add
add
js
std
cmp
je
mov
mov
into
clc
ds
in
fchs
xor
subl
xor
jmp
in
ret
les
test
ja
mov
mov
push
mov
cs
and
add
hlt
hlt
pop
scas
hlt
aas
inc
movsb
ds
dec
fisubs
fsub
sbb
jne
hlt
sti
int
mov
les
bt
pushl
push
rcrb
testb
sbb
or
movsb
mov
shlb
mov
adc
pop
or
psubusb
fcomps
enter
mov
enter
jmp
rclb
out
or
ljmp
shlb
inc
mov
mov
pop
mulb
xor
insl
dec
fbld
ret
mov
shlb
popf
int3
scas
xchg
xchg
addr16
pop
cld
sub
mov
in
push
or
cmp
jae
or
fldl
pop
out
xchg
into
add
jecxz
push
pop
ds
dec
cltd
rol
sub
mov
push
cmc
push
in
ljmp
cmp
cmp
jno
mov
pop
push
scas
mov
mov
xchg
push
lahf
dec
jo
in
jae
aam
inc
xor
xor
xchg
test
mov
fstp
mov
jl
cmp
fmull
hlt
out
push
adc
in
inc
jbe
pushf
dec
ljmp
aas
sbb
enter
int
pop
xor
pushl
test
xor
imul
jl
inc
sbb
jae
mov
jmp
js
or
out
adc
pusha
jo
daa
cmpsb
bound
push
inc
ret
cmpsb
push
in
lret
dec
fwait
adcl
dec
add
leave
push
orb
mov
sub
dec
movsl
mov
jl
push
push
ja
rcr
inc
lahf
les
into
fwait
in
inc
les
inc
jbe
cmpsl
or
cmpsb
mov
sub
xor
imul
xchg
lods
add
mov
cltd
lcall
imul
dec
imulb
imul
into
cmp
dec
jge
mov
in
push
loopne
and
js
xchg
cmp
dec
mov
xlat
mov
dec
pop
int3
popf
or
repnz
pop
out
dec
lods
pop
loopne
loopne
pusha
lock
pop
or
xor
mov
push
outsb
mov
decl
bound
imul
out
aad
out
cmpsl
dec
adc
out
add
sub
jge
fnsave
iret
add
cs
jb
pop
mov
mov
add
jo
push
ljmp
jne
xchg
and
fwait
xor
mov
jo
push
daa
cmp
rcll
outsb
rcrl
add
cmc
rolb
in
insb
add
adcl
cmp
popa
mov
sbb
mov
pop
xchg
xor
dec
xchg
jns
mov
mulb
arpl
dec
mov
stos
pop
fsubr
cmp
mov
xor
push
push
sub
rorb
xchg
dec
sub
xchg
add
test
and
les
mov
push
and
lahf
or
push
testb
out
mov
xchg
jnp
dec
negl
inc
add
or
sub
mov
ja
mov
sbb
fistps
pop
mov
inc
inc
lahf
push
mov
cld
and
cwtl
das
mov
mov
xor
loopne
push
xor
jp
cmc
cmp
outsb
or
xchg
outsl
les
testb
add
pop
pushf
inc
stos
ret
aas
in
xor
pop
movsl
ds
mov
and
inc
mov
adc
enter
mov
cmp
add
popa
xchg
out
mov
sbb
sarl
into
fldl
das
loopne
or
pushf
cmc
xchg
lods
mov
xchg
jns
cmpb
pop
mov
stc
jo
movsb
stos
cmp
loopne
dec
ret
lods
dec
mov
dec
xor
dec
or
push
js
xchg
mov
mov
lcall
iret
or
popf
divb
dec
in
repz
cld
mov
ja
leave
add
rclb
inc
andb
int3
mov
jo
into
push
add
push
jg
cmpsl
jb
pop
add
imul
xchg
and
addb
add
adc
arpl
icebp
mov
sub
in
jns
jns
cmp
scas
imul
mov
icebp
mov
cmp
jo
inc
ss
jp
dec
mov
inc
or
test
pop
mov
push
and
and
push
or
add
xchg
inc
mov
mov
sub
loopne
les
push
or
lea
and
insl
jo
pop
fs
dec
nop
push
scas
movsl
out
cs
std
jae
pop
movsl
inc
add
imul
enter
fnstsw
and
inc
cmpsl
pusha
jecxz
out
xchg
mov
enter
pop
inc
push
notl
and
xor
xor
cmc
sub
fnstenv
outsl
inc
mov
mov
cmp
fnsave
aas
popf
jp
mov
xchg
sub
adc
out
xor
pop
cmp
cmc
ss
mov
mov
ja
sti
outsl
subb
rolb
dec
mov
hlt
push
mov
mov
call
out
or
xlat
fwait
repnz
xchg
jmp
hlt
xlat
insb
sahf
jmp
jmp
arpl
push
xchg
in
cwtl
popa
sbb
sbb
pusha
and
iret
sub
nop
sub
cs
mov
in
adc
add
lods
lods
push
dec
std
dec
clc
sub
pop
aaa
or
xchg
jo
loop
dec
in
cmpb
jno
popf
out
fsubrl
pop
test
fdiv
mov
mov
push
and
dec
adc
imul
rcll
jp
insb
test
add
push
decl
push
push
sbb
pop
test
add
jge
addl
push
imul
or
push
dec
les
loopne
out
and
pop
push
push
push
bound
mov
mov
add
fisttps
mov
cmp
notb
std
notb
jecxz
stos
add
out
test
push
cltd
inc
sti
mov
add
cmp
mov
bound
mov
pop
lods
lret
push
add
dec
xor
and
les
or
cmp
sub
aas
pop
into
jle
fs
adc
sbb
fucomip
mov
dec
add
lods
lock
dec
cmp
xchg
inc
movsl
mov
cmp
shll
dec
or
add
addr16
push
adc
and
shr
inc
dec
dec
aas
testl
push
lock
cmp
mov
js
jge
sub
push
aad
pop
hlt
lea
and
enter
xchg
leave
cmp
leave
bound
outsl
jl
mov
daa
cmp
sbb
mov
movb
lds
pop
popa
mov
add
mov
jmp
mov
mov
aas
jg
sbb
insl
mov
or
jecxz
mov
lock
cmpsb
adc
cwtl
mov
jns
inc
loop
adc
add
mov
mov
jo
cld
out
jge
cld
shll
sahf
iret
inc
push
mov
and
dec
loop
cwtl
jne
sbb
arpl
int3
add
mov
bndldx
xor
and
mov
push
push
loope
lcall
jo
outsb
and
stc
popf
sub
xadd
sbb
js
cs
mov
insb
add
ja
mov
arpl
mov
ja
mov
mov
or
push
xchg
xor
cmp
mov
js
aas
push
aam
mov
jbe
cmp
xchg
dec
mov
fisubrs
inc
movsl
xchg
mov
mov
xor
xchg
leave
pushf
adcb
cmp
imul
rclb
loopne
or
jl
sbb
mov
xchg
or
sbb
jo
lret
or
xchg
in
lea
dec
outsl
sar
mov
cmp
imul
or
cli
or
cltd
fnstsw
jns
sub
shrb
das
insl
fcomps
push
inc
sti
mov
std
cmpsl
stos
shll
adc
int3
mov
xor
pop
adc
pop
inc
ret
sbb
jns
cwtl
std
xor
or
mov
aaa
test
xor
xchg
testb
enter
lahf
out
fsubrl
out
push
add
add
or
or
cli
add
mov
mov
pusha
daa
pusha
fwait
push
pop
add
aaa
sbb
cltd
cmp
cltd
jmp
mov
enter
jns
stos
adc
or
sbb
mov
movsb
sub
mov
fisubrl
sbb
int3
lock
sub
xor
fldt
ret
into
add
xchg
insl
mov
out
jmp
scas
imul
inc
adc
inc
inc
add
lcall
faddp
xor
adc
mov
xchg
pusha
push
arpl
pop
cmp
push
daa
dec
test
ret
sti
dec
cmp
hlt
add
stc
mov
mov
out
and
test
out
jbe
ret
mov
xchg
adc
add
xlat
cmp
and
shll
inc
pop
cmp
mov
sub
mov
mov
xor
mov
testl
adc
data16
mov
test
arpl
sbb
orb
out
aad
xor
inc
aam
inc
sub
sbb
jl
inc
ret
push
cmpl
sahf
lds
or
cli
fwait
mov
push
ja
and
pop
ss
iret
cmp
imul
test
scas
pop
adc
out
xor
inc
lcall
xchg
pop
fstps
adc
popa
ja
std
pop
int3
push
jle
adc
cmp
push
or
xor
popf
and
lock
sbb
jns
mov
mov
inc
in
mov
int
push
dec
cmp
jno
dec
rclb
fdivr
fidivrs
dec
jecxz
mov
bound
cmc
lds
add
cmpsl
loop
add
or
sbb
sti
sarl
dec
rcll
jp
inc
jecxz
lret
fsubrs
adc
or
nop
mov
dec
push
push
jae
or
push
inc
sub
add
jo
adc
fdivl
sbb
jae
shr
add
mov
scas
mov
pushf
add
mov
xchg
mov
lds
sub
sti
push
stc
sub
fcmovbe
mov
in
add
test
push
adc
add
xor
insl
xchg
mov
xor
scas
stc
das
jg
push
andb
mov
xor
rcl
or
imul
mov
jl
das
pop
dec
jns
and
jg
in
xor
push
mov
or
xchg
repz
fildl
iret
int3
jae
sub
push
lock
xlat
inc
xor
pop
in
aaa
jp
mov
jl
cmp
sub
pusha
test
out
shrb
dec
inc
js
sbb
lea
test
add
dec
decl
arpl
xchg
adc
pop
arpl
xchg
pop
mov
stc
adc
inc
out
inc
int3
mov
rcll
xorb
push
dec
movsb
mov
rcll
loop
and
test
iret
inc
cmpsb
add
cmp
sbb
lret
shll
loope
jb
mov
lret
inc
and
imull
test
cli
mov
mov
xchg
scas
hlt
push
ficomps
jp
loop
mov
in
sub
mov
or
ljmp
sub
mov
xor
pop
mov
mov
shll
sbb
aad
test
in
stos
adc
loop
pop
jmp
lods
jecxz
mov
mov
pop
jecxz
loope
je
xor
rcr
xchg
bound
push
stc
fdiv
jno
cmp
sub
rorb
in
pop
call
add
sbb
jo
mov
cmp
xlat
add
dec
sbb
mov
insb
movsb
mov
mov
jne
cmpsb
or
repnz
sbbb
and
mov
xchg
int
repz
test
test
fidivs
clc
jp
and
cs
enter
mov
mov
inc
test
sbb
js
cmpsb
lcall
jbe
xor
cmp
cltd
mov
call
mov
mov
cld
lods
popf
and
ds
mov
push
and
adc
cmpsb
cmpsl
pop
push
testb
in
adc
imul
xchg
outsb
cmp
addr16
pushf
nop
xlat
leave
movsb
pushf
jl
cmp
jb
add
cli
jne
cmpsl
inc
dec
std
pushf
sahf
aaa
add
ret
inc
xchg
ss
sbb
adc
and
adc
xchg
shlb
push
addr16
inc
sar
pop
dec
mov
jns,pt
mov
or
mov
mov
scas
cmpsb
sahf
mov
xchg
mov
push
xchg
into
adc
add
inc
idivb
adc
rcr
stos
and
adc
cmp
out
inc
andb
dec
leave
outsl
and
scas
test
jae
test
push
sub
dec
dec
arpl
inc
adc
test
in
ljmp
aas
xchg
loopne
shr
fld
add
pop
xor
jg
cld
idivb
adc
jb
push
inc
or
mov
and
sbbb
or
sub
fistpl
jge
xor
repz
ret
call
in
sar
jecxz
loope
push
cmpsb
clc
push
jg
call
rclb
xchg
imul
adc
pop
scas
xchg
inc
ds
stc
add
sti
push
cs
lods
add
std
in
pop
and
adc
sbb
ja
ret
and
adc
sbb
inc
inc
fidivs
cmpl
decb
jmp
sbb
out
add
mov
jb
cwtl
int
mov
xor
mov
hlt
and
sub
addb
mulb
arpl
fwait
dec
lds
mov
cmp
loop
sahf
aam
mov
and
outsl
loop
mov
pop
xor
xor
sahf
sbb
inc
push
xchg
repz
fstpt
and
cmp
cmp
out
outsl
push
js
lcall
test
mov
cltd
inc
xchg
xchg
xchg
lods
dec
dec
dec
dec
xlat
fnstenv
mov
pop
fwait
icebp
and
out
sub
das
jmp
inc
popf
xor
mov
pop
div
outsl
popa
cltd
clc
adc
mov
sub
lret
ret
imul
jno
ja
icebp
or
cltd
adc
xorb
inc
pushf
push
das
cld
pop
movb
push
arpl
jns
ret
lcall
gs
mov
sbb
and
pop
or
jge
pop
add
daa
test
loope
in
das
inc
or
fnsave
and
dec
pushf
pop
fadds
pop
inc
jno
inc
sub
inc
push
aad
push
jg
nop
sahf
fbld
out
aad
fcomi
sub
dec
xchg
arpl
into
mov
mov
push
and
cli
or
imul
test
je
ss
or
jns
inc
adc
hlt
xchg
sbb
pusha
int
sub
pop
out
add
enter
es
xchg
push
push
movsl
mov
xchg
shll
push
stos
jb
aam
sti
movsb
adc
dec
clc
int
test
jl
cld
adc
sub
cwtl
cmpsl
push
scas
push
es
jp
lcall
push
mov
push
inc
out
pusha
stc
sahf
adc
pop
pop
imul
or
mov
aam
loope
mov
pop
push
std
ja
in
test
sub
mov
adc
in
or
orb
or
ss
sahf
or
cmp
aaa
mov
pop
aad
jle
fsts
jo
sub
adcl
jbe
add
or
andl
mov
ja
cmpsl
mov
cmp
adc
loop
jno
xor
addb
popf
data16
dec
pop
push
bound
sbb
jo
mov
push
mov
insb
mov
int3
cmc
loopne
xchg
jmp
mov
mov
mov
mov
mov
push
cli
arpl
jo
fisubl
xchg
or
xorl
outsb
lcall
cmpsl
out
push
lock
pop
sub
xchg
insb
xor
cmp
cmpl
inc
adc
sbb
gs
mov
sahf
dec
and
add
push
rclb
sbb
enter
test
shrb
or
shr
hlt
pushf
xchg
xchg
fstps
and
jo
cmp
in
jle
pop
jnp
cmp
movsl
jb
push
xchg
xorl
inc
faddl
or
test
prefetcht0
in
and
pop
xchg
cmpl
sbb
jmp
jmp
imull
pop
inc
adc
push
jmp
adc
lock
jecxz
loop
popa
int3
push
jns
pop
pop
cmpsb
cmp
loope
push
and
add
mov
adc
imul
outsl
je
fldcw
adc
jge
gs
inc
out
imul
jae
imul
adcb
add
mov
or
arpl
cmp
cltd
cmpsb
lods
hlt
mov
ret
outsw
mov
adc
mov
jp
stos
cli
cmp
pop
xlat
mov
jno
adc
movsb
addr16
mov
push
push
rorb
sub
pop
push
jecxz
mov
mov
mov
jb
or
aam
lock
xchg
cmp
lea
rcrl
dec
leave
xchg
fmuls
lret
xor
cmpb
or
add
adc
adc
sarb
xchg
aam
add
pusha
je
xchg
sahf
repz
pushf
ficompl
popa
rolb
nop
and
jmp
lea
xchg
push
ja
lods
mov
push
xchg
pop
movsl
add
aaa
adc
pop
insb
xor
dec
mov
lret
push
and
test
cld
hlt
dec
inc
jne
or
jl
adc
mov
add
aad
pusha
andb
or
stos
mov
lret
inc
adc
lret
movlps
xlat
dec
daa
popf
dec
push
xchg
lret
jp
and
sbb
inc
mov
pushf
or
in
push
push
ret
mov
dec
je
lods
int
add
mov
pop
sub
inc
fiaddl
xor
pop
inc
inc
loope
fcompl
xchg
jnp
stos
hlt
repz
out
ds
push
push
iret
dec
jo
out
cmpsb
in
aas
pop
sub
int
inc
test
or
xchg
lods
jns
ficomps
popf
mov
adc
sti
cltd
movb
xlat
test
mov
lret
bound
xchg
push
movsl
jmp
adc
cmp
inc
jno
xchg
inc
sub
clc
add
adcb
cmpl
pushf
xchg
dec
ret
add
add
add
daa
fstps
idivb
pushf
imul
cltd
xchg
cmp
es
inc
add
add
add
test
es
lret
hlt
lock
sbb
xor
sbb
xor
std
int3
add
add
add
hlt
inc
in
mov
xchg
clc
push
dec
add
add
rorb
xchg
add
jmp
add
aad
stos
and
pop
sbb
jge
adc
xor
scas
push
lds
fsubrs
push
loop
add
xchg
pop
insb
push
add
imul
mov
scas
mov
mov
ds
push
sbb
cwtl
sahf
pop
out
hlt
add
add
ret
aam
push
insb
ja
mov
push
movsb
xlat
sbb
bound
aas
mov
add
out
aam
xor
add
add
push
jae
rcll
cltd
popa
ljmp
test
jle
sbb
push
popf
scas
ja
xchg
mov
add
je
push
sub
add
add
add
data16
cs
xchg
addb
add
nop
sbb
pop
or
pop
faddl
sub
test
in
ja
add
inc
je
pop
mov
xchg
enter
movsb
mov
add
mov
add
mov
xchg
push
pop
cmp
jg
or
ror
fmuls
loop
add
add
ffreep
jbe
adc
pop
je
inc
mov
add
cmc
addl
psubq
loope
mov
or
add
imul
cmc
andb
xchg
push
or
xchg
and
add
insb
aam
lret
dec
add
add
repnz
pop
mov
ret
mov
cmpsb
cmp
add
test
add
js
lcall
cmp
adc
mov
or
add
shl
push
mov
pop
loop
mov
add
mov
clc
jge
lahf
stos
lret
sub
fwait
cmc
adc
adc
mov
xchg
xchg
and
jle
sub
ret
rcr
roll
out
insb
cli
das
pop
mov
xor
pop
mov
dec
add
add
add
add
pop
push
movsb
add
mov
mov
rolb
add
pop
call
ljmp
in
fs
pusha
pop
fsubr
mov
jge
jae
or
add
add
repnz
xchg
sahf
int3
add
add
aad
aaa
sub
insl
jb
pop
mov
add
fistpll
popa
psubsw
dec
add
add
and
mov
pop
push
pop
cmp
cmp
addr16
repnz
mov
xchg
mov
mov
add
add
add
pop
lcall
xchg
sub
nop
inc
gs
test
add
js
es
scas
lcall
add
fiaddl
push
pop
mov
icebp
adc
stos
imul
add
add
xor
js
cmc
inc
add
add
dec
add
add
mov
and
loop
repz
and
mov
nop
scas
jle
into
icebp
outsb
jno
lret
xchg
enter
dec
jno
in
add
arpl
add
and
mov
aaa
pop
sbb
add
rclb
clc
sbb
mov
es
repz
hlt
loope
test
add
add
sub
pop
adc
jnp
add
aas
adc
lret
lods
in
ja
in
data16
mov
and
add
add
fidivrs
push
dec
ss
das
movsl
inc
lret
adc
imul
adc
jge
jl
add
add
repz
scas
push
loopne
es
aaa
cmpsl
sub
shlb
mov
add
add
or
add
xchg
pop
xchg
jo
insl
mov
cli
ljmp
pop
mov
add
rol
inc
nop
repnz
sub
lea
sbb
mov
add
xchg
add
add
jmp
lock
add
add
mov
jp
jnp
xor
shll
or
add
data16
leave
orb
add
dec
ja
cmp
mov
xchg
movsb
pop
inc
add
add
ds
sti
push
cwtl
std
popf
jb
mov
add
pop
nop
outsl
push
insb
mov
fs
add
add
adc
add
add
add
aam
jae
and
push
mov
mov
into
into
negl
ret
cmp
lret
push
in
scas
adc
repz
push
inc
add
add
push
scas
cmp
mov
repz
add
pop
inc
add
pushf
fadd
add
add
lea
in
add
add
inc
pop
adc
or
add
pop
inc
push
test
add
cmpsb
repnz
ljmp
dec
leave
cmp
jl
js
mov
push
mov
and
push
mov
fwait
push
sub
roll
and
fmuls
es
in
xchg
mov
and
jge
test
mov
imul
add
jbe
ret
data16
push
fmuls
or
add
add
sti
adc
add
add
mov
mov
popf
xchg
mov
mov
xor
je
adc
push
and
xorb
insb
xor
pop
bound
jnp
jae
pop
xor
push
push
and
in
outsl
nop
push
push
ds
out
adc
sub
sar
add
add
inc
add
add
mov
cmp
outsl
xchg
cltd
sbb
paddw
mov
add
add
jmp
in
inc
xor
rolb
add
adc
mov
cmc
inc
pop
inc
mov
cmpsb
sbb
pusha
fwait
sarl
pop
ret
push
inc
add
add
loope,pt
cmp
lods
xchg
sbb
add
jb
add
add
sbb
aad
loope
xor
fisttpll
test
cmp
pusha
insb
cmp
xor
add
add
cmp
add
add
es
mov
add
or
pop
jp
inc
in
pop
mov
xor
dec
pop
xchg
test
xchg
test
add
das
jo
insb
jns
in
jo
push
or
add
mov
insl
dec
add
add
and
movsb
imul
add
add
add
adc
nop
cmp
pop
mov
xor
lock
add
add
cmpsl
add
jmp
cmpsb
adc
mov
pop
outsl
or
call
push
xor
add
add
dec
js
push
inc
add
add
jae
mov
add
add
inc
pop
repnz
add
mov
add
dec
in
mov
sub
jbe
or
popf
pushf
call
lds
inc
and
bswap
jo
call
mov
enter
and
mov
xor
cltd
inc
add
add
push
or
inc
push
shrl
mov
scas
mov
ljmp
pop
adc
imul
clc
addb
add
aas
ret
dec
add
add
aad
das
add
add
inc
add
add
je
pop
jmp
inc
add
add
movsb
pushf
movsb
push
pusha
leave
cltd
lods
sbb
sahf
fdivr
rolb
adc
pusha
loop
inc
add
add
push
jb
add
add
xchg
inc
popl
pop
mov
addb
add
ljmp
add
notb
leave
mov
xchg
stos
mov
xchg
lock
mov
add
adc
bound
add
iret
addb
add
push
xchg
leave
mov
sub
ficoml
adc
cltd
jmp
add
daa
nop
mov
fcompl
fnsave
adc
fistl
add
add
imul
pop
mov
inc
sbb
mov
pop
xor
cmp
ljmp
and
ret
mov
inc
pop
jb
int
adc
gs
add
add
lret
push
sarl
mov
clc
fimuls
add
add
add
fstpl
in
repnz
add
lods
lcall
push
movsl
fildl
add
add
push
call
or
imul
adc
addb
add
lods
mov
jecxz
xchg
out
xor
add
add
add
add
pop
movsb
pusha
xchg
mov
sbb
jno
lea
sub
pop
js
les
add
mov
daa
ficoml
jae
or
ljmp
adc
cmp
cmp
dec
add
add
into
add
mov
jae
push
adc
mov
add
repnz
sub
add
add
mov
movsl
cltd
mov
aam
push
push
add
adc
push
sti
mov
cmpsb
inc
negl
add
add
pop
mov
mov
or
jp
in
scas
jno
push
adc
aas
fcompl
ds
and
add
ud2
andb
es
add
add
or
add
lods
push
mov
inc
rolb
cmp
adc
jmp
pop
cmpsl
aas
mov
sbb
add
jg
out
jno
and
je
xchg
xchg
xorl
mov
jge
pusha
jmp
lret
mov
add
pop
push
jo
fucom
pop
or
fimuls
es
jbe
or
add
cmpsl
add
inc
outsb
push
stos
arpl
pop
cmp
stc
sub
push
mov
add
add
ret
scas
mov
addb
add
cli
cmp
push
cld
fldl
add
add
dec
scas
sahf
mov
jecxz
adc
cwtl
mov
mov
cmpsl
adc
inc
adc
mov
jbe
js
shrl
push
jg
fisubs
add
add
jne
scas
aaa
arpl
mov
sub
jmp
hlt
fwait
arpl
add
add
jecxz
pop
mov
mov
dec
add
add
and
adc
jb
and
dec
add
add
xchg
sarl
shlb
gs
add
add
mov
add
jb
jle
sub
jae
rorl
sbb
orb
mov
sub
add
add
leave
in
icebp
lret
sub
add
aaa
xor
or
test
jp
mov
sub
in
data16
jmp
pop
ss
lock
rolb
add
add
or
pusha
divb
mov
ficoml
xchg
mov
ja
popa
test
sub
xor
push
inc
add
add
lret
pop
inc
sbb
popf
int
push
pop
lret
jo
sub
out
or
es
icebp
dec
or
add
cmpsl
inc
stc
imul
pusha
push
in
fcoml
fdivs
rolb
add
je
jmp
pushf
cld
inc
xor
ja
ljmp
add
mov
add
sbb
add
add
push
pop
aad
and
add
add
sti
add
push
mov
in
icebp
cmp
cltd
jns
out
add
add
aaa
sub
je
add
add
add
arpl
cmp
add
rcll
outsl
vpandn
lock
push
sbb
cmc
scas
adc
ret
mov
pusha
mov
and
add
pushf
xor
lea
movsb
or
pop
jo
add
add
dec
jns
pop
sub
int
into
movsl
mov
jbe
mov
or
testb
pop
out
sarl
imull
mov
add
add
add
mov
add
in
push
inc
mov
pop
or
add
repz
popf
das
aad
jmp
xchg
push
xlat
dec
xor
push
mov
add
mov
dec
add
add
cmpsb
insb
xchg
push
jmp
dec
sub
dec
add
add
dec
inc
add
add
xchg
rcrl
mov
xlat
push
pop
out
loope
das
test
add
mov
add
add
mov
push
cmp
adc
insb
adc
das
jp
loop
fwait
push
lret
add
in
sbb
jmp
xchg
ljmp
cmpsl
test
stc
xor
scas
cmp
push
xlat
mov
mov
scas
pop
out
mov
xchg
leave
pop
std
in
iret
cli
fsubs
lds
add
movsb
mov
push
cmpsb
pop
xchg
mov
arpl
lea
out
iret
xchg
mov
stc
addr16
ret
xchg
nop
add
add
pop
hlt
notl
sbb
aaa
pop
mov
jae
and
lahf
xchg
push
xchg
das
mov
add
add
fs
fdivl
pop
fdivs
add
add
punpckldq
divl
pavgb
ss
push
push
mov
repnz
add
add
or
xchg
pusha
add
add
stos
out
or
add
add
int
sbb
call
fisubrl
lcall
push
sbb
test
stos
shrb
adc
ss
inc
mov
pcmpeqd
mov
add
dec
xchg
sub
lahf
xchg
aad
xor
adc
dec
add
add
andb
mov
xor
aad
and
ficompl
loopne
shl
pop
cmp
pushf
mov
arpl
inc
add
add
mov
loopne
data16
test
dec
add
add
jbe
pop
pop
repz
or
add
add
test
lea
in
xlat
sbb
add
add
jno
cmp
lret
pop
mov
fadds
xchg
xlat
sbb
xchg
jae
lods
lods
add
or
add
xchg
test
in
addr16
rcrl
mov
pop
leave
jle
add
aad
cmp
dec
mov
pusha
add
add
mov
add
in
dec
add
add
mov
add
gs
mov
inc
int3
add
add
fsts
mov
lret
xor
add
jmp
cli
mov
add
add
sbb
and
daa
bound
aas
jmp
add
int3
add
add
and
inc
mov
cs
hlt
ret
push
addr16
ljmp
xchg
xchg
ficomps
inc
add
add
cmp
push
les
add
cmp
xchg
cmp
lret
shl
mov
cmpsl
or
add
cmp
fs
sbb
lahf
cmp
sbb
mov
pop
jno
cld
ror
dec
out
push
stos
imul
fldcw
dec
add
add
ret
cmpsl
xor
push
dec
mov
divl
adc
add
imul
push
test
cmp
inc
push
mov
mov
out
popf
aaa
sub
pop
repz
xlat
repnz
mov
add
mov
lret
or
add
add
add
shlb
mov
push
mov
ss
ja
xchg
jo
xchg
rolb
add
sub
inc
adc
inc
mov
mov
dec
add
add
dec
add
add
mov
or
fs
xor
movsb
pop
stos
scas
push
cmp
mov
and
add
add
scas
fstpl
or
fidivrs
mov
add
jp
insb
scas
in
adc
aam
jo
add
add
shlb
scas
addb
add
testl
sbb
insb
dec
adc
mov
ljmp
les
add
jo
mov
push
sbb
fildl
add
pop
ds
pop
mov
xchg
push
xchg
or
enter
push
fadds
or
add
xchg
jns
aam
jp
add
fisttpll
push
adc
add
add
in
push
pop
inc
pop
jne
sahf
lahf
mov
xor
and
and
faddp
mov
push
cld
sbb
rolb
add
and
push
cmp
dec
jbe
fwait
shrl
pushf
test
add
cmp
sahf
jecxz
mov
dec
push
ja
fwait
in
push
xchg
or
add
nop
aam
xor
imul
and
jg
inc
fdivrp
inc
adc
mov
sub
rorl
xchg
lds
add
notb
mov
sarl
mov
in
aaa
pop
nop
test
jg
pop
cmp
add
add
add
icebp
sbb
mov
add
add
push
div
mov
add
add
dec
call
imul
xor
aas
pop
stos
push
mov
inc
aad
or
xor
pop
ffreep
mov
jne
add
add
inc
into
jecxz
xor
mov
xor
sbb
hlt
sub
and
rcrb
in
into
pop
mov
pop
sbb
mov
shrl
fidivrs
adc
xchg
in
idivl
jo
loop
sbb
out
cltd
mov
add
jp
mov
xchg
out
enter
dec
pop
jno
aas
ss
mov
fwait
das
add
add
cld
push
movsl
dec
adc
add
add
and
add
add
ret
cltd
push
leave
pusha
adc
or
leave
xchg
add
jmp
mov
mov
add
add
adc
dec
add
add
push
mov
xchg
rcl
adc
bound
cltd
mov
add
xor
mov
aas
orl
icebp
dec
popf
and
ret
add
add
sbb
jnp
lret
mov
imul
jl
pop
jno
pop
xor
adc
add
mov
add
add
add
push
insb
push
add
add
scas
push
and
nop
jle
cmpsb
ss
xchg
push
push
dec
out
jno
call
pop
push
push
das
sbb
rcrb
adc
rorl
add
enter
subl
add
or
out
andl
je
pop
hlt
mov
add
jge
mov
pop
xchg
popl
pop
out
int3
add
add
leave
jbe
ss
pusha
push
bound
mov
xor
push
hlt
insb
cltd
push
pop
jnp
push
dec
xlat
js
cmpl
test
xor
and
mov
je
and
cld
pop
pop
pop
out
add
add
pop
dec
aaa
rcll
ja
fcompl
push
xchg
clc
mov
js
imul
out
aam
arpl
add
add
ret
add
pop
addb
add
pop
mov
add
add
add
add
gs
cmc
xchg
popf
xor
add
loop
mov
inc
xor
test
add
or
popw
add
push
xor
lret
cli
repnz
jecxz
dec
addb
add
ret
ljmp
xor
stc
push
mov
push
mov
or
sbb
out
pop
test
test
and
rol
xchg
cmp
popf
pop
xor
mov
and
int3
add
add
pop
jecxz
jbe
out
xchg
in
aam
rol
pop
fwait
add
add
adcl
es
sbb
cmp
add
add
add
push
ja
cwtl
ja
fsubs
nop
ss
dec
cs
xor
pop
sbb
mov
add
add
addb
add
add
add
add
aad
fisttpll
adc
pop
mov
inc
popf
mov
ror
loop
dec
add
add
loope
aaa
inc
pushl
aas
dec
and
gs
enter
std
test
add
aam
stos
stos
cmc
cmp
pop
or
or
add
mov
jmp
add
lretw
adc
cmpsl
imul
or
push
xor
mov
sbb
divb
add
arpl
enter
pop
es
xlat
jg
lods
jne
push
dec
push
addb
add
xor
push
push
insb
scas
sahf
lcall
add
push
push
and
pop
mov
shlb
ja
gs
lods
fcmovu
cmp
shll
jle
xchg
js
out
pop
mov
add
add
jne
mov
movsb
test
mov
inc
dec
add
add
add
adcb
adc
mov
add
add
dec
and
rolb
cmp
pop
mov
data16
int3
add
add
sbb
mulb
cmp
stc
push
jl
shlb
rcrl
add
pop
mov
fs
or
add
inc
shrl
add
add
mov
add
mov
jns
add
add
aam
adc
lods
ud2
mov
add
in
sahf
iret
mov
add
stos
outsl
ljmp
fdivrs
push
adc
push
int
scas
dec
ret
in
mov
mov
stos
jo
mov
add
add
movsb
mov
add
aas
add
jge
cmp
add
add
pop
mov
aad
repnz
mov
in
sub
mov
mov
mov
lea
movl
mov
push
call
dec
jne
push
call
cmp
jne
push
push
push
call
test
jne
mov
lea
mov
addl
mov
lea
push
push
movzbl
and
call
mov
leave
jmp
and
ja
imul
add
aad
nop
leave
mov
or
outsl
mov
fldcw
pop
sarb
and
jne
and
test
add
sub
mov
cli
cmp
add
add
or
add
mov
xchg
dec
movsl
lret
or
mov
add
add
push
or
add
add
rolb
stos
sti
cld
push
js
cmp
push
push
jl
jmp
fs
adc
test
pusha
std
mov
adc
sbb
dec
add
add
xchg
addr16
rolb
daa
in
fnstenv
inc
and
adc
sbb
xor
cmpsb
pushf
scas
push
mov
add
mov
or
repnz
jmp
and
in
xchg
fcoml
mov
stos
loope
inc
add
add
fld
loope
or
add
push
jbe
lock
out
ret
icebp
stos
icebp
mov
in
xchg
incb
pop
out
mov
add
cmpsl
and
xchg
dec
xchg
cmp
aad
xchg
xchg
les
add
jge
mov
xor
rolb
add
xchg
xor
mov
add
add
dec
add
add
adc
inc
scas
loope
and
imul
je
ret
pop
mul
insb
pop
fsubl
scas
adc
add
daa
dec
out
and
xchg
inc
push
mov
dec
sbb
mov
and
jnp
sbb
out
add
xor
lods
fistps
mov
push
or
add
mov
and
shlb
aam
mov
adc
add
add
pop
into
lea
jae
decb
mov
ret
push
gs
jge
das
pop
xor
repz
imul
incb
cli
loopne
mov
adc
outsb
in
cmp
aam
push
int3
add
add
dec
bound
pop
adc
fldenv
pop
mov
loopne
cmp
cs
in
pop
movsl
dec
shl
dec
fimuls
jb
test
ficoml
idiv
in
jo
dec
add
add
or
mov
sahf
incl
adc
mov
inc
add
add
push
or
fstpl
out
into
sbb
sub
dec
jno
push
jl
adc
push
xchg
mov
std
jle
das
push
sbb
jle
mov
xchg
fildl
inc
hlt
push
in
test
add
out
or
push
call
add
test
mov
test
mov
add
push
fistpl
jns
scas
out
sbb
cmp
insl
mov
ret
int3
add
add
add
push
gs
or
mov
add
loop
xor
lahf
mov
add
dec
dec
add
add
dec
jno
and
aam
jae
or
add
rcl
sub
stc
vmread
and
xorl
pop
scas
imul
jae
cltd
dec
sub
and
cli
cmp
pop
pop
movsl
xlat
ja
adc
movl
mov
add
mov
push
xchg
cmp
shrb
push
mov
repz
sbb
test
add
outsb
cwtl
xchg
jnp
or
add
jb
out
push
adc
and
rolb
add
daa
stos
add
or
add
mov
dec
ds
addb
add
sub
mov
lea
pop
hlt
and
and
pop
addb
add
mov
out
nop
out
or
push
mov
sbb
add
mov
les
add
jmp
xchg
jg
lahf
test
add
ja
add
add
xlat
das
cmp
sbb
sbb
add
add
add
lods
cmp
in
jb
xchg
cmpsl
aas
xor
pop
cli
repz
cmp
add
pop
mov
add
jne
ret
mov
mov
xor
adc
imul
dec
adc
sbb
aas
mov
pop
inc
dec
add
add
cs
out
pop
push
imul
test
aad
sub
stos
lcall
xchg
inc
lods
test
add
cs
push
cmp
jo
sahf
mov
sub
test
dec
add
add
aam
enter
gs
add
add
cltd
push
in
inc
int
out
inc
push
pop
jp
test
add
add
xchg
mov
inc
fimull
push
movsl
mov
gs
xor
sub
sub
addr16
inc
add
mov
jne
dec
in
sub
repz
data16
ljmp
add
lahf
pop
into
and
dec
roll
add
andb
cmp
fldenv
lock
jb
cmpl
and
cli
idivb
dec
push
in
inc
rcrl
iret
dec
jno
outsl
xor
add
add
out
hlt
jmp
add
add
fsubrp
pop
into
cmp
insl
cmp
dec
aad
sub
xchg
fstpt
inc
add
add
push
push
loop
and
icebp
pop
cltd
in
cvtps2pd
adc
jo
cld
je
cs
or
jmp
enter
dec
and
mov
lahf
repz
mov
add
and
shl
inc
dec
add
add
cli
lret
push
je
stc
xlat
mov
pop
js
out
xchg
and
add
add
inc
sub
shll
inc
test
add
aaa
pop
shll
jg
add
add
inc
cmpsl
idivb
shrb
int3
add
add
call
sbb
insl
adc
add
add
and
pop
dec
aaa
fiaddl
add
inc
addb
add
xor
xchg
push
mov
add
add
repz
sbb
popa
fcompl
add
add
or
push
mov
adc
sbb
fwait
xor
repz
popf
pop
pushf
icebp
cmp
add
add
jp
mov
xor
adc
lret
cli
popa
loope
push
adc
mov
sub
popa
call
add
add
es
dec
xchg
mov
push
inc
add
add
mov
mov
aam
add
add
add
mov
add
outsb
pop
xchg
sbb
inc
add
add
jbe
movsb
loope
sub
add
cmp
pop
out
lret
inc
push
ja
pop
testb
cmpsl
in
or
add
sub
das
std
fwait
es
fnsave
adc
in
jle
pop
std
jmp
popf
xchg
dec
and
mov
add
mov
sbb
es
jecxz
mov
add
add
inc
bnd
addr16
lods
incb
enter
rorl
jae
sub
add
daa
lret
sub
add
adc
cmp
xor
loope
ljmp
or
loop
xchg
in
jle
and
cs
adc
mov
lock
adc
daa
fnsave
pop
cmp
cmp
add
inc
add
add
sub
pop
inc
push
imul
and
in
xlat
dec
mov
xchg
pop
test
cmp
fisttpll
imull
push
iret
ret
push
fisubl
pushf
and
scas
sbb
add
push
cs
dec
and
mov
add
add
in
lods
sub
cli
jge
pop
pop
jg
int3
add
add
xchg
cmc
cmp
xchg
nop
push
jg
aam
lea
in
outsb
xor
test
outsb
fs
add
add
fucom
inc
fstps
ds
pop
in
aad
clc
subl
cmp
jge
dec
dec
sbb
sbbl
cmp
inc
pop
popf
int
addb
add
stos
xor
jnp
dec
add
add
inc
aam
out
or
stos
ljmp
femms
mov
add
cs
ja
xchg
fmull
add
and
push
in
dec
cmp
push
xchg
cli
cltd
fdivrl
sbbl
mov
and
mov
addr16
and
loope
jmp
jge
adc
add
jmp
scas
rcrb
push
roll
xor
jecxz
dec
sbb
jns
jge
xlat
ja
jb
inc
pop
stos
cmpsb
in
jp
jl
mov
add
test
mov
out
clc
xlat
loopne
add
add
add
mov
add
pop
fmull
hlt
mov
dec
or
cmpsb
xbegin
inc
add
add
icebp
mov
test
pop
mov
jecxz
ds
mov
mov
ljmp
aam
inc
add
add
bound
add
fwait
or
add
ret
in
inc
add
add
mov
ror
stos
js
jae
repz
add
sub
popa
repz
popf
js
mov
inc
add
add
sbb
lret
pop
gs
aaa
xor
mov
push
and
add
add
in
dec
and
mov
mov
add
les
add
lock
sub
add
add
in
inc
add
add
add
add
stc
jmp
lock
repnz
add
add
scas
jb
mov
xchg
xchg
mov
add
add
add
int3
add
add
nop
pushf
mov
les
add
jnp
clc
les
add
jns
dec
add
add
lcall
add
cmp
imulb
mov
enter
rolb
add
mov
les
add
dec
ret
lds
or
fdivr
stos
pop
andl
add
add
popa
dec
push
xor
inc
mov
mov
add
gs
inc
shlb
pop
adc
push
jne
jg
inc
insl
fucomp
inc
pop
jp
jbe
add
add
stc
push
pusha
dec
cmp
adc
les
add
mov
add
mov
add
mov
imul
loope
inc
cmp
fcoml
or
and
push
adc
not
in
jnp
dec
es
push
or
add
in
push
cld
test
push
imul
jmp
sub
cmc
lds
js
sahf
outsl
dec
add
add
mov
adc
cmp
movsl
test
bound
add
add
sbb
cmpsl
ret
inc
out
lea
add
pop
dec
fbstp
pusha
ret
add
add
pushf
loope
loope
mov
sar
in
leave
loop
jnp
das
enter
sbb
push
int3
add
add
lds
or
push
mov
cwtl
jae
xor
dec
xlat
push
movsb
mov
pop
cmp
inc
mov
fucomip
into
sbb
cmc
pop
xor
dec
add
add
xor
mov
rolb
add
add
add
mov
xor
mov
xor
cmpsb
popw
mov
xchg
fs
pop
xlat
or
fildll
sbb
stc
inc
cld
sub
add
add
cmp
xchg
fwait
mov
mov
pop
pop
mov
loop
sub
add
add
fimull
mov
mov
add
add
ss
push
lds
xchg
repnz
xchg
pop
and
dec
and
outsb
dec
inc
iret
push
jecxz
jmp
add
add
gs
sub
pop
addr16
push
lds
add
add
add
xchg
andl
ret
add
add
jl
xor
add
add
movsb
pop
ss
xor
decb
imul
mov
mov
dec
xchg
lock
daa
sbb
sub
mov
cld
add
es
popa
cmp
nop
pop
dec
lcall
dec
add
add
inc
add
add
jp
mov
add
add
add
sbb
cld
int3
add
add
into
mov
add
add
add
in
and
dec
mov
push
shlb
in
repnz
pop
mov
popa
filds
add
mov
insl
and
idivb
int3
add
add
sub
xor
repnz
insl
movsl
add
das
fldt
mov
push
lods
inc
mov
out
dec
lock
mov
inc
push
mov
add
add
add
add
or
sub
pop
mov
mov
add
out
pushf
negb
fadds
add
fildll
add
add
add
add
dec
push
pushl
adc
gs
mov
add
adc
dec
pop
xchg
xor
pop
inc
cli
dec
add
add
inc
inc
movsl
clc
push
repz
scas
inc
add
add
xor
xchg
lods
mov
add
pushf
mov
iret
mov
add
add
push
fisttpll
cmpsl
imull
add
add
aam
insl
jae
mov
pop
je
push
adc
xchg
lcall
sbb
jmp
fbstp
add
pop
xor
add
add
push
inc
popa
test
add
pop
pop
lods
inc
xchg
adc
add
add
cmc
cs
cld
pop
rolb
add
push
mov
andl
mov
pop
icebp
pop
cmp
add
add
andb
inc
sbb
mov
mov
push
addr16
add
add
dec
je
in
mov
ret
ss
inc
mov
dec
push
push
sahf
push
test
or
pop
or
and
repnz
add
add
lods
dec
adc
push
xchg
xchg
repz
lods
jp
sub
add
add
cmc
jl
xchg
loopne
add
add
push
adc
xchg
mov
dec
sbb
pushf
outsl
scas
sub
xor
loope
jp
add
add
push
sahf
out
push
imul
mov
popa
add
push
push
mov
sbb
aad
lcall
pop
cmp
outsl
adc
outsb
and
pop
test
fildll
ss
inc
inc
pop
das
jne
sub
sbb
or
insb
sub
fcmovb
add
add
add
cwtl
push
in
adc
pop
inc
into
jne
das
stc
mov
les
add
out
mov
mov
into
pop
sub
jl
mov
pop
cld
mov
idiv
ja
sub
imul
add
add
sub
aaa
rolb
add
fsubs
ljmp
jecxz
incb
dec
add
add
add
stc
sbb
xor
mov
mov
or
add
movsl
jge
adc
fld
sub
mov
xchg
cmpb
rcl
mov
aaa
inc
or
add
or
add
out
jne
add
daa
int3
add
add
inc
iret
loop
addb
add
call
jle
xchg
dec
add
add
test
repnz
add
add
add
fimull
in
scas
lret
and
ret
test
test
dec
add
je
add
add
movsb
popa
imul
push
outsb
imul
cmp
and
js,pt
mov
or
add
sahf
xchg
enter
mull
xlat
lret
dec
out
xchg
pop
pop
fidivrl
adc
xor
popf
mov
add
xor
or
add
push
pop
sbb
test
add
mov
pop
adc
dec
fcoms
add
inc
imulb
mov
jb
mov
add
adc
mov
sub
into
aaa
cmp
scas
adc
push
xor
iret
xchg
pop
jg
outsb
or
add
mov
outsb
mov
sub
movsb
inc
add
add
xchg
sti
dec
mov
and
add
cmpsl
rcll
add
lock
shrl
dec
addr16
mov
add
cmpsb
dec
lcall
pop
addr16
sub
enter
inc
mov
inc
add
add
lea
ss
ret
xchg
push
into
cmp
js
pop
out
call
add
add
adc
dec
outsl
jbe
les
add
jp
sbb
add
add
add
dec
pop
cmp
add
inc
aas
jnp
dec
add
add
pop
cmp
ds
nop
pop
sub
data16
jmp
aaa
out
imul
xchg
in
and
xlat
mov
and
outsl
adc
fcoms
sub
sbb
ret
sub
popf
add
push
push
xchg
jp
add
add
adc
xor
je
xchg
mov
add
addb
add
scas
inc
adc
fcmovne
mov
pop
jb
nop
adcl
add
sub
add
cmp
push
jbe
add
mov
add
add
outsl
adc
jge
popa
out
ljmp
push
and
xor
add
add
jb
jo
or
mov
add
add
mov
xor
jae
cs
push
call
add
sbb
clc
and
rolb
add
add
mov
movsb
push
and
fbld
in
add
add
rclb
dec
lcall
dec
mov
add
add
add
add
lahf
aaa
mov
movsl
loop
rdtsc
insl
adc
int
sub
add
pop
xchg
stc
loop
or
add
dec
add
add
add
add
sub
adc
lds
ljmp
cwtl
push
xor
clc
cli
pop
rorl
jmp
adc
mov
add
add
jne
push
push
addb
add
push
mov
and
add
inc
out
mov
inc
pop
fidivs
repz
lds
call
dec
xor
add
pushf
jle
xchg
jecxz
ja
mov
jns
sti
ja
popa
push
add
add
lret
test
mov
gs
and
add
add
mov
cmp
sti
stc
faddl
add
add
dec
pop
mov
iret
cmc
and
insb
and
add
out
loope
imul
sti
ret
lods
fcomp
das
mov
mov
loope
fstpt
add
xchg
sbb
push
push
mov
js
mov
add
lock
idivl
xchg
jmp
sub
enter
pop
mov
stos
adc
pushf
xor
xorl
mov
xchg
jmp
xchg
jge
push
addr16
int
sub
fs
or
jle
lcall
pop
cli
and
xchg
adc
add
add
inc
add
add
sahf
notb
fisubs
add
add
mov
movsl
inc
outsb
mov
fistpl
mov
scas
in
jns
add
add
fadd
add
add
add
add
add
add
dec
lods
test
mov
add
stos
pop
cmp
inc
or
add
bound
scas
xor
fistps
mov
add
fstps
aam
sbb
pop
stos
xor
add
mov
aaa
jmp
rcl
mov
mov
insb
data16
stc
push
repnz
loop
add
add
sbb
mov
fs
sti
aam
add
add
sub
add
add
add
test
jne
push
ljmp
xor
and
dec
add
add
sbb
jb,pn
sbb
call
mov
scas
mov
paddb
inc
arpl
cmp
cmc
and
inc
jp
fistps
add
add
out
sbb
jp
push
js
add
add
adc
sub
fistl
sub
and
adc
lret
imul
inc
das
inc
out
cmp
arpl
add
add
sub
ja
pop
cmpsl
fwait
pop
dec
jo
pop
mov
add
pop
lea
add
add
movb
sub
and
mov
pusha
mov
pop
dec
xor
add
add
sbb
rorl
mov
xchg
lods
adc
adc
sbb
jle,pn
lock
add
popa
das
jecxz
das
stos
scas
mov
rcrl
and
add
mov
lea
imulb
outsl
fdivr
jae
add
add
jbe
mov
popf
xor
add
inc
add
add
jge
add
jbe
pop
or
add
jb
jo
adc
aaa
cs
sahf
stc
mov
insb
adc
sbb
popa
fiadds
fldl
leave
popf
bswap
mov
inc
jge
inc
add
add
insl
push
dec
add
add
add
add
cli
pop
das
jmp
sbb
add
inc
pushf
and
loope
imul
jae
dec
add
add
push
add
add
add
add
add
jno
xor
cmp
inc
add
add
leave
mov
sub
rcr
pop
push
test
add
add
or
mov
xchg
js
add
add
mov
add
cmpsl
outsl
cmpsl
call
and
adc
pop
loop
xchg
sbb
jge
pop
xlat
add
lods
add
sbb
mov
mov
imul
dec
add
add
test
sar
and
dec
ret
add
call
mov
add
inc
mov
cmpl
add
add
push
imul
iret
out
lret
scas
mov
cmp
push
pop
inc
adcb
ss
sbb
hlt
push
jae
stos
inc
mov
add
jno
adc
jns
add
add
rorl
and
outsb
sbb
aas
and
cmpsb
jns
adc
popa
enter
mov
pop
dec
mov
insb
or
popa
or
add
xchg
mov
stc
lea
addb
add
arpl
add
add
popa
cmp
or
lahf
sbb
out
push
mov
fwait
arpl
adc
push
ljmp
outsl
sub
std
dec
add
add
xor
lcall
outsl
outsb
loop
dec
add
add
add
add
add
xchg
pop
fcomip
and
rolb
add
je
arpl
neg
stos
xor
adc
push
movsb
fildll
xchg
sub
leave
fisubl
push
mov
out
das
sub
mov
add
add
cli
rolb
xorl
pusha
inc
add
add
ss
cs
je
cmp
lods
xchg
xor
mov
dec
cvtdq2ps
outsl
push
push
xor
cmpsb
pop
cmpsb
xlat
mov
jo
enter
insl
in
out
sub
jg
xor
pusha
jecxz
notb
xchg
ficompl
addr16
add
add
sahf
popf
jl
enter
lods
sti
inc
add
add
and
sahf
mov
sbb
mov
je
rolb
add
cmp
aad
mov
add
cmpsl
in
adc
lods
pop
sub
add
insl
jns
repnz
rorl
pop
sahf
mov
insl
cmpsl
push
icebp
popl
out
stos
and
lea
add
lcall
dec
cmp
mov
test
sub
mov
ss
sub
imul
dec
pop
xor
cli
mov
ret
and
cmp
je
movsb
pop
cld
scas
xchg
leave
outsl
movsl
mov
fmuls
in
add
add
aad
in
shrb
inc
pop
or
in
adc
jecxz
lods
xor
addb
add
mov
add
mov
pop
fcoml
ds
push
add
add
pusha
xchg
pop
dec
adc
cmp
ficoml
add
dec
xchg
lahf
nop
xor
add
add
cmp
jo
scas
test
cmp
fildll
ret
xchg
sbbl
dec
lods
lret
add
add
out
rol
add
add
icebp
jbe
mov
xchg
mov
aas
call
pop
adc
add
fwait
pushl
mov
test
inc
xchg
dec
add
add
xor
pop
xor
mov
fsubs
mov
push
mov
seta
push
jl
push
xor
push
out
sub
add
add
mov
rolb
push
xor
sbb
add
add
xchg
xchg
xchg
adc
dec
add
add
inc
fmul
adc
mov
push
mov
xchg
mov
inc
lock
fdivrs
mov
mov
les
add
xor
int3
add
add
and
adc
fdivrp
mov
cmpsb
bound
into
pop
xor
push
lods
insb
mov
mov
popa
sub
out
pop
in
roll
add
add
ds
lds
fimull
aaa
or
add
aas
sbb
inc
std
imul
mov
test
add
lods
test
add
push
dec
add
add
cmp
bound
sbb
mov
stos
shr
cli
aaa
push
sti
stos
adc
inc
add
add
and
sub
mov
inc
in
sbb
xchg
rol
ret
clc
or
hlt
sbb
jmp
pop
int3
add
add
mov
add
sub
rcll
push
mov
into
ret
inc
dec
push
jle
aam
stos
loop
jl
dec
mov
sub
push
frstor
mov
out
out
jl
mov
add
push
dec
dec
imul
lds
or
add
mov
ss
push
inc
cmpsb
shl
ljmp
pop
jne
stos
rcl
call
loop
faddl
mov
or
out
add
add
lock
inc
pop
in
mov
das
or
jno
test
add
popf
popa
test
outsl
out
cmc
out
push
sub
add
xchg
mov
mov
cs
scas
hlt
gs
enter
bound
cmc
cltd
clc
sti
or
xchg
popf
sbb
addb
add
cmp
and
adc
or
add
aas
jne
sahf
jp
jecxz
and
mov
cmp
lret
fcmovnbe
mov
push
insb
mov
scas
insl
dec
aaa
push
test
add
orl
add
sub
add
add
mov
jge
sub
or
add
add
push
push
add
scas
push
pop
fidivrs
mov
fdivl
sarl
lcall
mov
add
mov
ds
gs
push
cmpsl
sti
cmpsb
inc
rolb
add
add
bound
add
add
xchg
hlt
call
je
fmuls
aam
pop
sbb
sahf
shll
and
cmp
add
fadds
add
inc
xchg
sub
aam
int
inc
shr
sbb
outsb
scas
lods
das
push
xor
stc
push
xchg
aam
xchg
ljmp
outsl
ljmp
xchg
inc
pushf
divb
cld
xchg
stos
jb
mov
dec
lea
call
test
fmull
dec
inc
push
int3
add
add
pop
sbb
mov
jne
js
addb
add
add
leave
jo
imul
jmp
enter
insl
xchg
scas
push
and
push
imul
les
add
pop
push
adc
das
cmp
push
test
xchg
pop
rorl
add
cmp
insb
je
dec
add
add
mov
fstpl
xchg
in
hlt
aam
adc
mov
idivl
adc
stc
std
mov
jecxz
mov
mov
in
xchg
in
idivb
aad
or
add
js
jo
pop
xor
add
in
sbb
lret
outsl
loop
xor
in
out
xchg
incl
add
add
outsb
fstpl
sti
mov
loopne
in
cwtl
push
mov
jb
and
lret
sbb
nop
std
dec
add
add
add
add
gs
lds
add
add
ss
push
out
push
adc
lea
jecxz
sbb
in
add
add
add
cmc
das
stos
sub
pop
mov
addr16
call
add
add
loopne
jnp
pop
std
push
lret
xchg
hlt
mov
add
imul
mov
mov
mov
xchg
add
jnp
mov
add
add
sbb
cmp
mov
add
cmpsl
fidivrl
add
and
outsb
stos
cmc
xor
sub
leave
push
mov
mov
negb
pop
push
clc
push
sahf
in
jbe
faddp
hlt
imul
mov
inc
add
add
add
add
mov
add
orb
ret
add
add
sahf
test
xlat
sub
clc
lcall
add
add
xlat
sub
push
sub
and
adc
ljmp
dec
jge
clc
dec
iret
sbb
clc
ljmp
mov
sbb
stos
dec
push
push
jb
xchg
mulb
jmp
sbb
add
add
stos
push
rorl
das
sub
lds
out
leave
and
adc
jo
inc
lea
xor
push
or
push
or
scas
push
in
stos
cmp
or
inc
out
add
add
out
fs
pop
lods
das
add
std
ss
scas
inc
sbb
int3
add
add
data16
outsl
xchg
daa
into
inc
jecxz
aas
out
jb
jne
xchg
jo
rolb
add
lods
imul
mov
add
add
push
bnd
dec
jnp
add
js
sub
and
cmp
xchg
jnp
pop
das
sub
push
enter
test
add
inc
enter
sub
cli
cmp
add
add
lods
sub
xor
add
or
imul
mov
stc
das
or
sbb
pop
and
dec
inc
in
add
sbb
in
sar
aaa
outsb
and
cmc
jmp
or
mov
sub
add
sub
out
cmp
insb
push
rolb
lahf
xchg
vpaddusw
dec
fldcw
jg
xor
mov
lds
into
cmpsl
ja
xchg
imul
xchg
adc
add
addb
add
add
add
test
mov
in
cmp
add
add
pop
hlt
jge
sub
fists
fildll
mov
out
movsb
jp
gs
cmp
fs
rcll
loopne
arpl
iret
jno
sub
adc
mov
in
cltd
sbb
add
add
les
add
movsl
and
pop
mov
jmp
fiadds
pop
cmpl
push
int3
add
add
dec
add
add
daa
inc
pop
out
and
mov
test
mov
push
mov
push
lret
addr16
xchg
cmc
inc
add
add
shrb
inc
mov
cli
mov
dec
jne
jnp
int3
add
add
xor
mov
add
cmpsb
cmp
add
add
nop
pop
sahf
je
xchg
dec
dec
jl
int3
add
add
mov
jecxz
lret
hlt
push
xchg
imul
add
fadds
fdiv
and
add
add
mov
sahf
aam
pop
cmp
sub
fldl
add
add
movsb
out
dec
popf
mov
lret
fistpll
xchg
addb
add
or
jl
imul
xchg
ret
hlt
inc
add
add
mov
pusha
outsb
insb
sar
mov
xchg
lret
jmp
pushf
sbb
in
imul
cltd
jb
push
inc
mov
mov
add
fcompl
add
add
push
mov
jb
addr16
mov
add
scas
fsubr
pop
sub
push
adc
and
pop
or
sbbb
call
add
add
lahf
pop
and
cmp
or
add
fidivs
mov
pop
gs
loopne
insl
mov
outsl
out
mov
add
add
ja
adc
dec
gs
add
dec
jae
mov
movsb
jl
add
fwait
dec
loopne
or
add
jge
repnz
adc
add
inc
aad
loope
pop
and
push
xor
add
pop
insb
jbe
jo
mov
xchg
mov
fmul
add
add
movsb
mov
cmp
adc
rcrl
push
fwait
mov
add
mov
add
add
or
xchg
cld
mov
imul
cmp
push
pop
fadds
push
push
add
jnp
movsb
paddw
or
add
outsb
repz
xchg
aaa
add
and
add
fsubrp
mov
mov
mov
jp
dec
mov
add
add
add
cmpsl
mov
cmp
adc
mov
fbld
cltd
lret
mov
jne
and
push
mov
les
add
lret
loopne
addb
add
jns
jns
mov
fistps
outsl
and
sub
mov
lds
and
xchg
dec
sti
push
jae
lock
xchg
jb
mov
and
add
add
and
and
jbe
fildl
aam
arpl
cmpsl
in
shr
or
icebp
adc
add
add
xor
push
rolb
add
mov
pushf
xchg
cmpsb
or
fwait
aad
int3
add
add
jp
mov
jno
add
icebp
mov
xor
jl
movsb
cli
scas
bound
mov
arpl
add
add
sub
jne
ret
je
fnstcw
das
sub
int
add
add
xor
add
or
add
sahf
outsb
into
pop
push
aaa
mov
lahf
mov
dec
add
add
add
stos
mov
pop
mov
dec
cmp
and
es
and
xchg
xlat
in
jne
add
add
add
dec
mov
add
add
inc
sub
ret
mov
arpl
cltd
mov
xor
faddl
adc
add
add
pushf
cmp
add
add
mov
xchg
daa
ret
dec
mov
sbb
jb,pt
in
outsl
cld
mov
mov
sub
cmp
xorl
je
out
pop
add
clc
decl
mov
add
add
les
add
imul
pop
push
out
pop
and
mov
mov
pop
jne
and
push
aam
sar
std
scas
cltd
push
pop
adc
or
cwtl
xchg
push
cli
test
add
add
add
js
pop
or
push
cmpl
add
add
cli
add
add
sub
mov
cmpsl
xchg
xor
push
mov
shl
mov
pop
xchg
add
xor
ret
rolb
add
add
inc
jg,pt
sbb
inc
sub
push
push
out
add
loope
add
push
data16
in
lds
inc
dec
add
add
and
enter
bound
pop
repz
test
daa
jnp
sbb
add
inc
in
loop
cmpsb
jle
popa
sbb
aam
psrad
rolb
add
fst
jp
xlat
shll
add
push
inc
add
add
lcall
das
scas
popf
inc
add
add
dec
test
pop
inc
add
add
cmp
sub
movsb
in
jp
sbb
iret
ds
sar
jp
mov
push
rolb
add
daa
sbb
ss
add
mov
xchg
ret
out
dec
mov
ret
cltd
int3
add
add
mov
mov
ss
mov
cmpsl
into
rcrl
dec
in
inc
bound
add
add
ret
je
movsb
js
icebp
mov
add
add
mov
mov
dec
inc
jno
test
add
dec
mov
insb
adc
add
push
enter
mov
ret
jnp
in
jbe
cmpsb
mov
int3
add
add
test
jmp
cld
mov
push
and
stos
add
add
rolb
add
add
add
dec
rolb
add
push
mov
movsb
insb
jmp
int
lea
push
mov
and
mov
add
add
cmp
add
add
lcall
push
mov
add
xorl
dec
sub
ss
insb
push
add
add
add
push
mov
scas
shrb
dec
add
add
mov
dec
jp
adc
out
add
add
daa
xor
inc
inc
test
push
dec
add
add
add
add
mov
xlat
repz
lock
cmpsb
cwtl
or
mov
add
add
es
outsl
in
stos
jg
rolb
bound
push
and
jmp
adc
add
add
imul
das
push
fbld
out
popa
sub
arpl
mov
mov
movsb
mov
add
and
sahf
push
mov
add
mov
mov
jl
sub
dec
sbb
leave
mov
test
insb
jnp
add
add
jne
xchg
lret
in
lock
add
add
add
add
mov
add
mov
add
mov
loopne
popf
mov
add
add
pusha
faddl
mov
add
add
iret
movsb
or
add
jg
add
add
mov
cwtl
fcomps
add
add
repz
movsb
scas
mov
test
nop
dec
push
leave
shlb
shlb
movsb
push
ficoms
push
fsubp
sub
or
add
pusha
add
add
sub
push
mov
inc
jnp
fs
inc
es
add
add
lret
jg
repnz
jmp
lods
cwtl
clc
jl
in
les
add
pop
pop
fistps
xor
popf
xchg
bt
pop
ljmp
cli
sbb
aas
xchg
insb
addb
add
mov
sbb
sub
scas
cld
movsl
jbe
loope
add
add
outsb
jno
ja
add
add
jb
mov
pop
addr16
sbb
in
inc
mov
add
out
sub
xor
jbe
add
add
jb
add
add
push
adc
mov
test
add
adc
fiadds
pop
js
pusha
xor
sub
add
add
lock
cmp
add
add
jl
ljmp
sbb
push
fs
add
add
add
push
popf
add
xlat
fcompl
lods
pop
inc
std
add
fcompl
outsl
mov
sbb
insb
sarl
rorl
add
jne
add
add
arpl
pop
leave
inc
or
negl
add
add
add
add
in
xchg
int
mov
cmp
imul
mov
rcrb
cmpsl
out
in
aad
ljmp
lds
add
dec
sub
xchg
jle
test
sbb
int
mov
into
mov
lret
aam
push
add
mov
mov
mov
fcomip
mov
xchg
adc
push
adc
dec
ljmp
sbb
daa
imul
lcall
mov
sti
push
jg
ja
cmp
add
adc
xor
mov
jmp
add
and
add
add
jae
inc
js
enter
out
dec
cli
adc
jb
mov
add
imul
add
lods
les
add
lock
mov
adc
push
inc
daa
fsubrs
add
add
scas
insl
sbb
jp
rclb
cmp
cmp
adc
or
jae
jl
add
add
add
loope
jno
bound
add
add
lea
in
cld
jbe
ret
xchg
dec
pusha
jg
loop
and
lock
add
jge
dec
jle
mov
add
push
int
js
sub
nop
les
add
mov
jnp
jne
sub
mov
fsubrs
adc
out
jno
ds
js
fimuls
fs
jmp
mov
jb
out
jl
pop
mov
add
add
sbb
jns
rolb
mov
add
inc
imul
or
ds
cltd
ret
cmpsl
cmp
push
lcall
push
enter
push
sub
and
fstps
testb
cmp
fadds
add
add
mov
jb
jg
push
inc
loop
dec
add
add
jbe
push
subl
jb
inc
adc
add
add
add
add
add
xchg
jae
dec
xchg
mov
scas
shr
cltd
mov
add
mov
add
push
rolb
add
mov
fmull
adc
mov
or
add
ficoml
popa
dec
xor
arpl
add
add
jge
out
add
add
xor
sub
push
data16
mov
push
or
pop
cld
push
or
add
lock
lahf
mov
jmp
or
pop
in
decl
add
daa
test
fiadds
aas
push
fidivl
insb
or
dec
mov
add
mov
mov
add
add
mov
sub
dec
add
add
pop
or
pop
sbb
je
and
aas
jle
nop
lcall
or
add
add
cmpl
iret
dec
push
stc
xchg
into
xchg
jno
add
add
push
movsb
sbb
cmp
pop
aas
cli
out
mov
push
mov
cmc
dec
push
ficomps
adc
dec
shll
test
add
push
mov
addb
add
pop
mov
add
mov
das
xchg
jne
out
xor
add
mov
add
out
pushf
repnz
mov
ficoms
xorl
in
lahf
pop
push
fsubs
dec
daa
push
inc
add
add
pop
sbb
stos
sahf
adc
add
add
loope
shr
cmp
sub
add
add
add
fdivrl
add
add
mov
add
jge
jmp
je
mov
add
scas
rolb
pop
dec
in
pop
test
and
mov
lods
add
add
push
inc
aad
imul
or
add
xchg
jo
or
xlat
sbb
mov
xchg
fcoms
sbb
mov
sub
hlt
jg
mov
push
mov
cwtl
imul
add
jno
lret
jmp
lock
enter
fcmovne
rclb
xorl
mov
arpl
lret
outsl
and
add
xor
add
add
outsb
xchg
nop
fbstp
movsb
and
cltd
push
mov
addb
add
add
add
or
add
jl
repz
or
mov
mov
add
pop
push
jl
add
add
push
xchg
push
add
add
mov
push
enter
negl
add
add
and
jg
add
add
jae
lcall
fsubrl
loop
andl
pop
jecxz
pusha
movsb
or
add
mov
or
out
jb
inc
popf
and
pop
adc
cmpsb
dec
lcall
adc
inc
cli
ljmp
mov
and
fildl
repz
push
add
mov
inc
xchg
mov
add
add
scas
rep
adc
leave
icebp
and
add
stos
lds
inc
add
add
push
movsb
inc
andl
inc
push
fsubrs
xor
cld
sahf
scas
jp
stc
or
add
mov
fldt
sub
lock
and
and
and
mov
lcall
popf
mov
add
add
ja
jne
add
add
inc
xor
lods
iret
mov
add
movsb
and
add
add
setb
add
add
es
repz
jmp
pop
and
popf
lahf
js
mov
adc
inc
lahf
xor
test
push
aam
add
daa
in
adc
ja
fcomp
mov
dec
into
fmull
add
push
loopne
aad
lods
outsl
xor
scas
jno
add
add
and
add
add
orb
xor
sbb
push
ja
cmp
fists
add
rorl
add
arpl
fidivs
vpperm
add
lea
push
ja
mov
mov
bound
imul
les
add
xchg
sbb
add
add
loopne
fnstenv
jno
sbb
mov
popf
out
push
sbb
push
adc
rcll
lret
out
addr16
add
adc
push
lods
imul
in
test
add
or
add
aam
sbb
push
scas
mov
push
inc
add
add
inc
push
push
sbb
or
add
insl
mov
shrl
frstpm(287
shll
andb
int3
add
add
push
add
add
mov
pop
pop
cmp
jne
aaa
adc
pop
lds
imull
aad
xor
add
add
lods
xchg
or
cwtl
pushf
stos
adc
adc
sub
sub
mov
push
int
mov
int3
add
add
cmp
sub
icebp
pop
gs
pop
in
pushf
lahf
dec
mov
bound
fdivl
test
dec
sbb
add
xchg
adc
inc
dec
xchg
cmpsb
dec
stc
in
cmp
push
stos
icebp
stos
xchg
add
add
jb
lock
fdivrs
add
ficompl
movsb
dec
icebp
add
and
icebp
push
loope
sbb
and
incl
push
test
sbb
mov
jl
add
add
sbb
add
add
int3
add
add
imul
add
fadds
add
dec
outsl
and
std
and
adc
daa
test
pop
push
xor
fisubrs
outsl
leave
fdivrs
add
add
test
cltd
xchg
cmp
and
add
cwtl
cltd
pop
ret
mov
add
aas
icebp
or
add
mov
sbbl
jmp
sub
add
jl
mov
cmp
bnd
pusha
adc
add
add
add
add
pop
mov
mov
imul
add
lret
sub
cmp
and
push
push
aad
in
xor
inc
add
add
outsl
jp
add
add
adc
sbb
jle
add
add
inc
add
add
div
mov
leave
outsl
inc
cmp
iret
out
mov
xor
add
add
stc
add
add
gs
into
pop
testb
push
and
jmp
cli
daa
iret
stos
cmp
dec
add
add
push
xor
sbb
aam
call
xor
std
and
add
add
jg
mov
push
int3
add
add
pop
rolb
add
add
pop
shll
mov
js
pusha
enter
mov
into
or
mov
mov
add
dec
add
add
sbb
jne
pop
addr16
add
mov
jae
adc
pop
mulb
push
dec
push
sub
push
dec
mov
lret
cli
ret
push
and
and
add
add
lahf
dec
out
cmpsl
xchg
popa
int
or
shrl
push
ljmp
int
dec
fistpll
pop
adc
mov
mov
add
sbb
imul
jae
or
mov
pop
fmuls
inc
mov
ds
clc
jo
add
add
addb
add
push
imul
cwtl
test
mov
add
outsl
push
pop
movsl
xchg
call
push
ja
ror
add
add
mov
push
mov
in
imul
dec
xor
lret
pop
push
hlt
sbb
jmp
push
adc
ja
aam
add
add
mov
call
add
add
shrl
push
dec
inc
nop
lea
stos
je
ljmp
mov
add
or
add
daa
push
lods
xorb
test
sub
add
iret
fisubl
hlt
push
fs
test
add
xchg
and
mov
mov
jb
pop
jo
and
add
add
add
mov
dec
les
add
in
movsb
rolb
add
out
adc
sub
add
add
ficomps
jnp
clc
jo
stos
mov
add
dec
add
add
mull
add
arpl
repz
jo
mov
mov
add
ret
add
add
jo
out
mov
mov
int3
add
add
mov
mov
mov
lods
dec
add
add
mov
push
push
adc
mov
add
cmp
hlt
mov
pop
sub
cmp
sub
add
add
push
mov
clc
mov
push
subb
cmp
fldl
mov
flds
pop
push
nop
test
dec
lods
sub
inc
add
add
mov
add
add
cmp
cmpsl
push
or
add
lret
inc
leave
sbb
cli
out
adc
sbb
add
aas
push
cs
lahf
sub
dec
imul
add
add
push
jo
pop
sti
fisubrl
fdivs
add
push
pop
arpl
insb
popf
push
inc
pop
insb
inc
add
add
and
sub
mov
add
sub
add
add
xchg
decb
add
data16
pop
add
int3
add
add
add
add
and
jg
lahf
shll
imul
mov
push
loopne
jns
icebp
das
sahf
rorl
xchg
iret
jmp
lret
inc
sub
jmp
and
enter
das
imul
fstpl
add
and
mov
cli
inc
xchg
stos
stc
pop
sbb
stos
mov
jl
jl
mov
lahf
popf
scas
test
add
shrb
xchg
mov
mov
gs
call
gs
add
add
add
add
add
out
add
add
add
add
cmp
inc
ja
testl
pop
lcall
adc
add
push
adc
fcomi
adc
sbb
add
das
xchg
bound
cmp
push
xchg
xor
push
pop
lahf
mov
test
aaa
test
in
push
mov
add
je
push
stc
lock
xchg
cmp
add
add
sub
in
insb
add
add
jl
mov
sbb
sub
adc
pop
pop
shrl
pop
mov
loop
popa
or
add
call
cld
push
js
dec
xchg
cmp
leave
fnstenv
dec
in
loopne
cmp
movsl
and
xchg
push
shrl
out
lcall
in
sbb
stos
adc
push
adc
add
add
adc
add
cmpsl
in
xchg
adc
lret
jnp
dec
lods
sarl
jo
mov
imul
dec
xchg
dec
add
add
fmull
cmpsl
jnp
aam
jecxz
fwait
mov
cmc
or
add
ljmp
cld
outsb
sbb
and
adc
clc
fwait
push
pusha
inc
clc
out
inc
sub
and
xchg
rolb
add
push
mov
enter
and
add
add
cmpsl
sub
loop
and
sub
aam
out
icebp
sbb
xlat
idiv
xchg
and
cmp
pop
popf
scas
mul
mov
cmp
pop
neg
rol
js
stos
notl
add
add
pop
addr16
cld
xlat
cmc
addr16
push
push
inc
pop
call
mov
mov
jae
mov
int3
add
add
dec
dec
movsl
cld
push
cmpsb
lret
faddl
mov
sbb
add
pop
hlt
mov
or
adc
mov
add
sbb
add
add
out
xor
repz
sub
in
adc
mov
adc
mov
jge
fsubrs
negb
sbb
fcoml
insl
jb
adc
cs
add
add
pop
rcl
ljmp
and
stos
or
adc
xchg
test
sbbb
adc
in
and
add
movsb
add
dec
add
add
cmp
jnp
and
not
outsb
std
rcrl
data16
add
sbb
cltd
test
add
add
inc
ficompl
xchg
mov
fs
mov
mov
add
add
add
aas
push
xor
ljmpw
addb
add
leave
fistl
stc
repnz
stc
dec
cmc
testl
imul
mov
pop
vpshlb
lret
test
jmp
dec
jb
jo
add
add
out
je
in
dec
add
add
add
add
sbb
jecxz
mov
sub
adc
imul
add
addb
add
cmp
hlt
mov
divps
sub
and
add
add
in
xchg
add
movsl
mov
xchg
adc
in
adc
es
cwtl
aaa
push
lods
imul
cmpsl
stc
idiv
xor
int3
add
add
jecxz
dec
and
popl
add
insl
jb
cmp
sub
dec
add
add
add
add
add
xor
insl
cwtl
addb
add
in
lds
ficompl
cmp
test
add
xchg
icebp
lea
aad
and
add
out
jb
nop
mov
out
hlt
inc
or
push
mov
add
out
mov
add
mov
add
add
das
sub
inc
dec
add
add
and
rcll
movsl
not
jecxz
bound
movsb
or
or
add
jle
movsb
fmuls
mov
mov
insl
fcmovu
out
dec
loop
sub
aaa
out
fs
les
add
fstps
add
add
test
cmovle
jae
daa
movsb
movsl
jne
add
add
add
inc
pop
sub
insl
repz
in
push
mov
add
add
xchg
add
fwait
in
cmp
inc
sub
aad
jl
std
xchg
clc
data16
add
add
out
mov
push
mov
pop
dec
add
add
jnp
out
inc
add
add
ss
add
add
clc
push
cli
xchg
test
push
adc
sbbl
add
mov
xor
mov
mov
out
pusha
imul
leave
call
xchg
mov
add
add
mov
mov
mov
cmpsl
jmp
cs
insb
adc
std
aam
outsb
fsubrs
jmp
ret
sahf
vpsllq
repz
rolb
add
mov
add
ss
sar
jb
cli
ja
xorl
xor
mov
adc
or
add
in
in
rolb
add
mov
add
add
iret
sub
xor
push
dec
mov
ret
jae
repnz
and
sti
sbb
inc
add
add
pop
out
cltd
add
stos
mov
mov
xchg
gs
jle
push
mov
in
lahf
or
icebp
cmc
test
xchg
mov
je
popa
xchg
pop
es
mov
lea
lea
add
add
add
add
fildll
jecxz
inc
out
pop
nop
or
add
ja
lock
lret
leave
sbb
dec
xor
and
push
cmpsb
ja
cmpb
sub
out
shrb
mov
push
test
add
fs
and
sbb
sbb
ret
dec
popa
sub
mov
add
addb
mov
and
sbb
inc
xchg
push
dec
dec
add
add
adc
addr16
jecxz
hlt
pop
addb
add
pushf
fs
clc
add
add
cmp
adc
addr16
aas
pop
ja
add
add
add
add
push
sub
mov
gs
cmp
mov
inc
add
add
mov
add
add
add
add
sub
add
add
mov
inc
arpl
lods
or
mov
add
dec
aad
add
add
fmull
mov
push
loop
inc
cmc
inc
add
add
inc
push
jo
inc
inc
add
add
jmp
jne
xchg
jo
add
add
and
pop
movsb
inc
ljmp
dec
xor
fistpl
push
jb
pop
rcll
add
add
add
test
mov
std
dec
loopne
out
test
add
scas
add
add
push
mov
imul
out
xchg
and
je
add
add
dec
pop
lahf
mov
repz
cmp
orb
add
arpl
mov
andl
out
mov
add
lcall
dec
pop
aam
call
xchg
jmp
xchg
cmp
lock
mov
icebp
cmp
add
add
add
add
add
add
loop
inc
sub
jb
mov
add
push
rolb
add
adc
aam
cli
outsl
add
xlat
loope
xor
pop
or
shlb
dec
ss
insl
out
loope
sti
inc
add
out
loopne
cmp
mov
mov
xchg
dec
dec
arpl
ret
fimull
and
mov
nop
lock
pop
pop
jmp
scas
or
mov
mov
lea
cmpsb
adc
jbe
jle
mov
int
xchg
shll
lods
out
fldt
mov
inc
add
add
jmp
fwait
add
mov
scas
imul
ficoms
pop
pop
add
and
sbb
inc
add
add
and
insb
cld
and
sbbb
mov
add
call
insl
push
add
add
lret
xchg
out
leave
xchg
shlb
push
or
dec
and
or
add
xor
inc
int3
add
add
mov
dec
add
add
test
add
out
test
xchg
jmp
xchg
cmpsb
test
repz
jg
movsb
outsl
fwait
leave
jge
xlat
lret
add
add
sub
sbb
add
add
inc
fadds
add
popa
iret
or
adc
xor
ja
stos
lock
add
add
push
outsl
inc
add
add
stos
mov
dec
add
add
jae
adc
inc
test
add
test
out
dec
add
add
test
fsubrl
inc
push
jcxz
push
nop
mov
sbb
push
imul
sti
movl
push
movsl
movsl
xor
add
and
push
xchg
adc
leave
pop
push
and
jns
lods
push
cmc
ret
add
add
sub
lahf
stc
xor
pushf
xor
and
cwtl
lea
dec
leave
les
add
mov
mov
jecxz
jns
int
test
out
dec
in
sbb
shrl
push
sub
push
mov
and
aaa
pop
jno
adc
lea
and
xchg
inc
pop
xchg
xchg
mov
jge
pop
addb
add
and
push
lods
push
lods
sub
dec
mov
dec
add
add
or
xchg
push
xor
add
jmp
pop
jmp
popa
add
add
adc
aas
mov
cmp
add
add
add
add
andb
push
dec
mov
cltd
test
jl
in
sub
movsl
push
ret
or
add
push
xchg
add
add
outsb
mov
sti
dec
sbb
xchg
mov
sti
inc
add
add
rolb
add
jno
hlt
add
jmp
jg
cld
cltd
fwait
in
das
jno
cwtl
push
gs
jnp
insb
mov
iret
mov
out
daa
mov
add
add
add
jo
in
pop
cmp
sbb
add
add
idivb
lods
fcomp
insb
pop
mov
rolb
add
popa
push
into
push
jno
mov
push
scas
leave
sbb
mov
mov
add
icebp
fisttpl
mov
jo
clc
cmp
mov
add
add
add
add
xlat
mov
outsl
xchg
or
pop
js
mov
push
mov
mov
add
stc
mov
xor
fs
and
xor
ret
mov
imul
insb
cmc
sbb
add
outsb
push
jl
mov
shlb
add
sbb
inc
mov
cmp
add
jb
mov
js
dec
addl
xchg
jecxz
push
subb
movsl
test
mov
add
sub
add
add
loop
fdivl
loop
add
add
pushf
addl
sbb
lcall
popf
push
and
push
ds
mov
adc
push
sub
repnz
add
add
xor
outsb
push
lahf
lods
xchg
add
rolb
add
test
jb
inc
outsl
add
add
sbb
fsubrl
movsl
inc
xchg
mov
jno
xchg
inc
xor
in
mov
rcrb
mov
cld
or
mov
add
cmp
adcl
add
add
add
enter
adc
cmp
dec
pop
lret
addr16
pusha
jge
insb
sbb
xchg
xor
fwait
int
adc
cld
enter
cltd
andb
out
push
test
add
out
mov
sti
mov
es
test
jne
lahf
outsl
sbb
add
add
or
inc
mov
add
add
pop
lahf
lea
addr16
dec
dec
add
add
push
iret
loopne
pop
or
add
mov
arpl
hlt
sbb
jne
push
add
add
mov
jb
adc
rolb
add
cmp
jl
push
cmp
stos
ss
cmpsl
shrl
lods
inc
add
add
add
mov
jecxz
or
add
xchg
test
mov
mov
leave
xchg
push
or
add
fbstp
dec
dec
jl
pop
jle
in
aad
aaa
test
add
in
and
fmull
mov
and
ret
rorl
lea
mov
outsl
xchg
mov
lret
jle
mov
jmp
fwait
in
push
out
add
add
aaa
sbb
sbb
add
and
rolb
add
mov
cld
roll
add
inc
inc
add
add
cmp
push
cmp
data16
add
add
ljmp
add
add
je
and
or
add
out
repnz
pop
xchg
sbb
adc
pop
stos
sbb
fs
push
and
sub
scas
sub
les
add
out
xchg
push
push
sub
data16
inc
push
popf
sub
hlt
insl
pop
cmp
mov
in
movl
dec
pop
sahf
dec
xor
cmc
jns
push
sub
mov
pop
dec
aas
add
add
jns
mov
add
cli
sbb
xor
sub
add
add
decl
add
lret
fildll
outsl
std
dec
add
add
mov
les
add
movsl
pop
mov
add
inc
pusha
popf
aad
int3
add
add
add
add
cmpsl
and
test
pop
test
scas
insl
jno
push
lock
fcomps
lcall
dec
enter
pop
mov
and
je
ss
mov
movsl
shll
std
leave
xor
push
dec
aas
inc
xor
add
out
dec
add
dec
es
add
xchg
fcoms
add
add
xor
mov
popf
fsubl
pushf
fisubs
ljmp
leave
inc
mov
add
add
fsts
ljmp
rorl
mov
rorl
les
add
jecxz
xor
lret
add
add
lods
mov
insl
icebp
add
push
out
jb
sub
push
and
lods
jmp
addr16
xor
push
mov
jg
or
add
les
add
add
add
cli
popa
insl
rclb
daa
push
push
rolb
add
stos
pop
test
push
lret
in
or
in
repz
test
popf
jle
add
add
and
mov
or
mov
hlt
repnz
in
popa
and
faddl
popf
dec
mov
imul
rclb
add
add
dec
jns
or
lds
or
xlat
and
ds
add
add
add
add
mov
jo
add
add
adc
cmc
mov
add
add
in
or
add
insb
cmp
mov
pop
mov
or
add
enter
jp
cmp
add
add
jg
push
stos
mov
pop
xchg
push
sub
add
add
add
sbb
pop
pushf
add
mov
adc
ftst
cmc
xor
jmp
adc
cli
adc
add
iret
cmp
mov
add
sub
lods
leave
push
sbb
jnp
fimuls
out
xchg
push
push
sbb
add
popf
aad
adc
jae
into
push
and
push
mov
push
cmp
jns
mov
insb
int
mov
or
shl
jns
cltd
fdivs
adcl
xchg
mov
loop
rorb
add
add
movsb
add
jg
dec
cmp
push
lods
cli
pop
push
cmp
negb
pop
ljmp
sbb
stos
adc
sub
sub
add
add
and
add
add
pop
shll
mov
scas
out
adc
mov
and
scas
aas
sahf
push
sub
popa
data16
and
xor
pop
mov
add
ss
sub
xchg
pop
push
stc
mov
outsb
xchg
pusha
cs
cmp
rorl
sub
sarl
lcall
xchg
mov
jg
adc
ss
loopne
ret
dec
add
add
push
in
insl
pop
add
lret
hlt
pusha
ds
add
add
jp
cmp
xchg
lahf
stos
test
cld
dec
add
add
out
dec
mov
add
mov
mov
int
cmp
repnz
xchg
xor
orl
in
mov
add
mov
and
gs
push
mov
sbb
je
rolb
add
outsl
pushf
push
pop
pop
mov
cmp
add
add
jo
mov
fs
adc
dec
mov
add
add
mov
add
add
sub
mov
add
add
iret
pushf
bound
popl
pop
push
mov
sub
ljmp
stc
insl
add
add
test
sub
xchg
dec
pop
out
pusha
inc
add
add
cmp
jae
add
add
shrl
add
mov
mov
inc
jne
in
insb
adc
ds
sbb
and
gs
std
jns
loopne
adc
lret
into
jmp
jno
or
lret
nop
jg
arpl
sti
das
or
push
xlat
xor
sub
add
subb
mov
add
test
movsl
loopne
cld
xlat
push
cli
pop
mov
imul
push
mov
into
push
ss
inc
pusha
mov
cmp
inc
add
add
add
mov
orl
ret
cwtl
push
ret
push
into
loope
aad
lea
sub
jmp
adc
dec
add
add
inc
in
test
mov
jae
nop
or
add
int
test
add
stos
and
jne
addr16
push
xchg
mov
fdivs
pop
cmpl
stos
lock
lahf
push
xor
daa
inc
hlt
dec
ret
ret
mov
loop
fstpl
pop
xchg
add
push
lods
aam
stos
pop
int3
add
add
icebp
fiadds
xchg
push
pop
or
add
add
jmp
sub
push
out
jmp
sub
adc
addl
or
mov
jns
leave
pop
addb
add
imul
sbb
adcb
xchg
jns
dec
adc
repnz
cmp
test
jbe
call
out
pop
js
push
je
xchg
lods
and
jle
fs
incl
push
out
cmp
add
add
sbb
push
sub
imul
gs
add
mov
iret
addr16
push
into
sbb
sub
sub
mov
cld
xchg
pusha
push
and
test
jbe
pop
inc
vpmacsdd
pop
xchg
add
add
add
lds
jecxz
lret
fcmovne
push
addr16
mov
add
add
loop
add
add
dec
add
add
dec
sahf
push
js
add
add
nop
xlat
daa
in
pop
mov
movsl
popa
lret
push
jbe
mov
mov
test
rclb
mov
aad
push
and
and
add
mov
add
add
add
rolb
add
sbb
leave
inc
add
add
bound
push
pop
mov
sub
add
add
out
movl
add
add
test
and
sbb
jns
das
andl
out
jmp
lods
outsb
mov
movsl
adc
shll
pop
lret
push
fldenv
mov
add
addr16
add
add
pushf
pop
insl
std
xchg
outsl
imul
or
xchg
shr
lods
cmpsl
out
ds
add
add
addb
add
add
add
fdivl
lret
mov
or
add
in
pop
sub
add
ret
add
add
jge
adc
inc
test
push
jb
jno
or
xor
cmpsb
mov
repnz
cmp
idivl
in
imul
insb
cmp
lcall
inc
mov
add
jae
std
es
xchg
pop
jg
mov
mov
std
inc
cmc
or
add
cmp
jo
pusha
cltd
and
mov
cmp
ret
aas
add
mov
pop
inc
add
add
jmp
dec
cmp
inc
mov
cwtl
push
shlb
movsl
popf
mov
add
mov
xor
outsl
or
add
sbb
push
push
sahf
cld
sbb
add
add
add
mov
stc
mulb
xor
and
add
add
jp
pop
sbb
int
les
add
fstpt
mov
inc
mov
mov
in
jo
loope
jae
or
mov
add
mov
mov
sub
add
add
inc
jecxz
lret
in
pop
mov
add
pushf
movsb
sbb
arpl
jne
push
mov
adc
add
jae
bound
push
push
dec
add
add
and
lcall
xor
add
add
test
add
cmp
stos
pusha
lods
push
ja
hlt
push
cmp
fbld
or
cmp
fiadds
mov
cmpsl
xor
inc
filds
add
add
movsb
jg
cltd
mov
lea
or
add
dec
pop
mov
mov
popf
mov
add
add
dec
sbb
movsl
xchg
mov
pop
xor
out
cltd
xchg
iret
jle
ret
aas
das
inc
xor
stc
scas
test
and
add
add
roll
mov
cmp
cmp
dec
shll
add
and
insl
jecxz
iret
push
or
enter
push
or
add
fwait
inc
sbb
jb
fldz
popa
xor
xchg
movl
pusha
out
arpl
add
add
pop
sbb
and
pop
cmp
cs
aad
add
add
add
mov
loopne
and
repnz
jbe
int
cld
pop
sub
and
das
lds
pop
fwait
and
xchg
xor
add
add
fwait
inc
xor
ss
inc
add
add
push
movsl
out
sbb
add
add
mov
movsl
ljmp
daa
shlb
addr16
imul
push
or
dec
mov
add
or
outsb
xor
pop
push
ja
dec
add
add
cmp
cmp
xchg
out
iret
xchg
lahf
dec
mov
inc
add
add
add
add
add
add
adcb
push
lods
jp
xor
andl
add
lds
push
mov
and
pop
xor
dec
push
cmpsl
push
inc
stos
arpl
push
or
and
jnp
cmp
js
fwait
mov
and
add
nop
push
inc
jg
pop
pop
adc
hlt
orb
adcb
negl
fsubl
xrelease
sbb
add
stos
sub
or
jns
add
ds
addb
add
iret
cltd
mov
nop
testb
dec
inc
push
sbb
add
imul
pop
in
adc
mov
jnp
or
add
mov
add
rcll
ss
sahf
push
out
or
jle
push
ficompl
jp
push
lods
stc
jg
xchg
jnp
imul
enter
sub
aam
add
add
mov
cmp
mov
inc
pop
nop
ss
cltd
xor
mov
inc
cmp
enter
rol
shrl
shl
pop
mov
in
in
pop
cld
fists
hlt
add
pop
daa
mov
negl
std
or
pop
jl
inc
add
add
hlt
dec
movb
daa
jns
data16
add
cs
fisttpl
sbb
add
add
imul
and
lds
inc
add
add
push
inc
jp
lds
mov
enter
cmp
sti
mov
add
add
push
or
orl
inc
jl
in
mov
das
mov
add
mov
mov
and
cmc
repz
cld
stc
sub
dec
add
add
xor
sti
call
jnp
fdivp
out
cmp
gs
mov
xor
mov
rcll
insb
ja
push
jp
or
mov
outsl
add
add
mov
shlb
repz
jg
loopne
pop
or
xor
ljmp
xchg
mov
sub
imul
flds
insl
sbb
pop
nop
dec
sbb
sub
add
add
or
add
add
lods
bnd
jne
xlat
outsw
sbb
repz
inc
ljmp
add
add
shl
xlat
jg
mov
fdivs
mov
fstps
adc
jne
or
jb
enter
les
add
jbe
or
sahf
ret
cwtl
roll
inc
jecxz
cwtl
lods
xor
add
add
pop
ds
popf
notl
enter
out
pop
sbb
cmp
test
or
xchg
jb
xchg
adc
add
add
jmp
mov
stc
and
mov
stos
inc
loope
loop
pushl
aas
pop
sub
andl
and
insl
inc
add
add
lret
add
int3
add
add
and
cltd
mov
and
sbb
add
mov
adc
adc
lret
movsl
push
dec
cwtl
mov
scas
mov
in
sahf
or
push
mov
push
sub
arpl
stos
mov
add
xchg
or
stos
or
and
inc
add
add
xor
sbb
jae
shl
loopne
mov
add
add
add
mov
ds
mov
add
into
push
ljmp
fsts
inc
mov
add
jnp
xor
add
add
adc
sarl
out
or
add
push
ds
js
sbb
stc
xchg
adc
mov
bound
mov
mov
fadds
ret
push
mov
xor
mov
add
add
dec
jno
addb
add
add
add
outsl
xor
add
sbb
fldcw
leave
mov
add
dec
and
mov
dec
and
add
add
jge
fadds
or
add
lahf
jg
xchg
jne
add
add
int
xchg
test
add
add
mov
repz
ss
cmp
cmp
inc
push
dec
in
adc
std
pop
or
stos
jnp
inc
scas
int
push
movsl
inc
imul
es
leave
in
fwait
sbb
test
add
ret
pop
cltd
out
stc
inc
add
add
lock
ss
xchg
js
sti
sub
repnz
mov
loopne
dec
lea
pop
jne
mov
add
mov
push
xchg
jbe
in
jb
xor
out
cwtl
pushf
xchg
ret
repz
fnstsw
xchg
gs
pusha
fcomp
shll
add
cltd
jle
jae
cmp
add
add
inc
xchg
enter
cmp
add
add
sbb
cmp
add
je
cmp
je
daa
sti
fcmovbe
cmp
adc
xor
push
push
add
add
in
leave
addb
add
repz
pop
jb
xchg
xchg
mov
xchg
mov
dec
stos
cli
push
xor
mul
mov
add
add
inc
fstpt
pop
jb
xchg
sub
jns
scas
addb
add
popa
mov
pop
sahf
xchg
shl
xor
push
lret
add
add
mov
aaa
lock
add
aam
inc
das
or
pop
inc
xchg
sbb
cmpsb
add
add
xchg
cli
shll
cmc
push
add
add
stc
push
sarb
in
cwtl
or
add
xor
add
add
jnp
and
cmp
mov
pop
insl
dec
mov
xor
adc
add
add
add
or
out
pop
lds
add
pop
ja
pusha
imul
or
add
mov
mov
popf
sub
fs
add
add
dec
bound
cwtl
icebp
sbb
je
push
inc
add
add
jl
cmp
add
pop
les
add
insb
shl
push
pusha
jl
movsb
jnp
sbb
xchg
sbb
add
and
pop
push
xor
push
add
add
dec
push
pop
sbb
mov
add
pop
scas
mov
clc
xor
add
add
add
push
pop
gs
and
test
add
push
push
sbb
adc
push
call
xchg
inc
or
add
sub
push
sarb
and
sbb
dec
jge
mov
pop
test
add
inc
mov
jg
fwait
jp
test
mov
adc
xlat
mov
or
add
mov
js
inc
xchg
aas
in
mov
sahf
add
iret
rcrl
nop
in
out
into
js
mov
add
add
setl
f2xm1
mov
add
add
pushf
hlt
mov
cmp
add
add
add
add
add
add
pop
dec
outsb
inc
add
add
add
lahf
dec
fldl
in
fdivs
imul
push
out
test
add
inc
add
add
xchg
fistpll
dec
mov
jecxz
xor
add
add
mov
cltd
lret
xchg
add
leave
loopne
xor
movsb
mov
push
outsl
test
insl
imul
add
add
xchg
jae
fnstsw
insb
negl
inc
add
add
dec
add
add
mov
subl
mov
add
sub
or
add
dec
call
bound
add
add
jmp
stos
out
add
test
lret
mov
push
movsb
ljmp
add
je
sbb
mov
sub
or
enter
loopne
arpl
xor
in
sub
jp
xchg
fildll
stos
cmpsb
sar
ds
out
pop
fs
cltd
fiadds
sbb
mov
dec
icebp
pushf
addr16
out
vphsubwd
dec
in
xor
mov
add
jge
add
xchg
out
jle
mov
fcoms
add
repnz
add
ss
adc
pop
mov
jl
movb
in
stos
and
jecxz
inc
add
add
push
xchg
or
add
andb
lahf
pop
xchg
sti
xchg
xchg
xor
loope
mov
add
adc
add
add
in
ret
or
outsb
popf
xor
cmp
sbb
scas
sub
add
add
mov
add
add
shr
lcall
xor
fists
ja
pop
xorl
cmc
es
add
add
repz
sti
fdivs
cmp
add
add
mov
cmc
outsl
jge
std
rclb
mov
mov
div
add
add
add
pop
xor
add
pop
xor
mov
push
sar
fs
mov
jmp
mov
pop
aam
adc
mov
mov
popf
nop
jle
ljmp
addb
add
jle
xchg
sarl
push
inc
ds
or
add
xchg
fiaddl
mov
cmpsl
push
sub
into
fucomp
pusha
test
mov
stos
cmp
fisubrl
inc
add
add
fwait
lret
sub
dec
or
add
jmp
mov
in
mov
add
add
jb
cmp
xor
add
or
std
and
cwtl
scas
je
in
aas
fiadds
xchg
push
push
mov
pop
fsubr
outsb
aaa
pop
lods
stc
add
in
fucomip
ja
xor
add
add
add
addb
add
xor
sti
pop
outsl
sub
lret
mov
xchg
add
add
mov
movsb
addb
add
repnz
inc
xchg
lods
push
jmp
fs
jecxz
int
add
add
ret
sbb
push
aas
add
notb
mov
push
pop
arpl
dec
mov
jp
or
add
adc
stos
push
stc
inc
cli
xor
add
add
stc
fidivrl
out
addb
add
lret
dec
add
add
dec
inc
scas
jge
out
xchg
pusha
out
lea
jno
cmpsb
inc
jbe
mov
xchg
aam
cmc
push
syscall
out
mov
sub
add
aas
jae
push
pop
xorb
and
int
cmp
inc
push
pop
or
dec
rol
leave
jb
sbb
gs
cmp
adc
add
add
add
stos
xchg
sarb
stos
xchg
mov
cli
pop
stos
pop
jns
lea
ret
mov
add
add
cmp
ja
jl
xor
inc
aam
data16
add
dec
jg
jmp
add
add
aad
mov
por
test
add
mov
jmp
sti
lods
jmp
movl
add
add
add
add
add
outsl
and
out
pop
outsb
xchg
push
cmpsb
mov
cld
dec
mov
shrb
add
sub
stc
arpl
pop
fwait
aas
xor
push
shrb
popa
fstl
pop
mov
fs
cltd
fistl
cmp
adc
shll
scas
add
add
fwait
sub
push
les
add
push
jae
add
add
jnp
sub
ljmp
add
add
imull
nop
scas
mov
add
add
cmc
or
bound
mov
add
add
pushf
push
out
inc
add
add
push
cvtps2pi
add
add
push
jne
mov
int3
add
add
pusha
ljmp
loope
mov
es
push
cmp
push
shrl
repnz
cmp
mov
shlb
cwtl
addb
inc
fldcw
popa
out
inc
add
add
dec
xor
daa
lret
aad
stc
mov
xor
icebp
repnz
xor
insb
lea
fmuls
cli
loopne
fimuls
cld
inc
add
add
xchg
int
cs
xchg
stc
sub
pop
jnp
rcll
fiadds
dec
aam
aam
xlat
jg
push
shll
cltd
pop
push
mov
or
add
cmc
stc
movsb
pop
test
out
add
add
mov
jae
movsl
cwtl
xchg
test
gs
sbb
mov
dec
add
add
adc
insl
ds
cmc
dec
or
add
bound
ret
scas
addr16
cmp
out
out
add
add
das
repnz
add
fdivrp
fcomi
push
pop
je
test
fists
add
add
enter
xchg
in
inc
add
add
ret
jbe
les
add
push
repz
mov
xchg
mov
add
add
or
add
imul
outsb
xchg
sbb
pop
rolb
add
add
or
cli
cwtl
xchg
hlt
pop
jge
mov
idivl
mov
fwait
pop
fs
xor
cmp
adc
xor
add
add
add
cmc
ret
dec
mov
add
add
mov
lds
xor
mov
in
addb
add
cltd
je
call
add
cmpsl
xchg
shll
adc
inc
add
add
lea
sti
ja
add
xor
cmc
lods
jle
int3
add
add
repz
sub
mov
xchg
add
outsl
fiaddl
add
add
xor
dec
fsubs
add
add
mov
int
xor
cmp
add
shll
inc
adc
sbb
mov
sarb
dec
add
add
mov
sub
add
add
insb
dec
inc
enter
cmp
popf
aas
or
add
outsb
mov
mov
syscall
mov
inc
add
add
push
gs
jecxz
jle
mov
add
xor
add
je
sub
mov
add
add
add
cmp
inc
cmp
or
add
add
add
add
add
add
movsl
rolb
add
xchg
leave
cltd
pop
popa
lret
repz
hlt
mov
cmpl
rorb
cmp
mov
dec
add
add
sub
xor
pusha
into
fmul
aad
push
mov
xlat
push
or
xor
sub
xor
and
sbb
test
xchg
daa
mov
add
push
icebp
adc
loopne
pushl
add
add
adcl
les
add
mov
xlat
pop
sub
les
add
mov
lcall
xor
lcall
aad
jg
add
add
into
popf
add
add
stc
xchg
jbe
add
add
rcrl
pop
jnp
sti
stos
adc
add
add
add
sbb
add
int
in
mov
mov
mov
xchg
and
add
stc
push
add
lock
mov
push
popl
add
add
adc
jo
or
lods
in
je
add
add
int
adc
add
add
sti
dec
jle
xor
insb
rolb
add
lea
jle
adc
jnp
pop
xor
addr16
sbb
push
xlat
xchg
push
add
add
out
pusha
lods
mov
fdivs
push
out
mov
stc
stos
push
mov
leave
pop
scas
rcll
fcmovbe
push
and
iret
xor
stos
lock
cwtl
in
mov
mov
mov
mov
and
push
and
jecxz
sbb
jp
jnp
rcrl
repnz
loope
fxch
mov
aam
int
adc
in
faddl
inc
scas
sbb
add
jp
jle
add
add
push
test
cltd
addr16
leave
jns
jae
je
and
repnz
xor
push
pop
popf
xor
or
push
fimuls
cld
add
lods
stc
mov
cmc
pop
xchg
add
add
mov
pop
xchg
outsb
ficoms
repz
mov
mov
fidivrs
push
lea
in
xor
push
jae
push
sahf
sub
scas
jg
sub
out
jae
push
int3
add
add
mov
ljmp
rcr
test
add
lahf
stos
xchg
dec
add
add
iret
push
pusha
shrl
les
add
xchg
dec
stos
mov
dec
push
xchg
jbe
jp
xor
in
clc
inc
or
add
mov
cmp
jnp
or
add
das
mov
fidivrs
or
add
jg
das
jno
out
add
add
loop
mov
mov
aad
dec
pop
dec
add
add
add
add
faddl
imul
and
sub
lock
das
jge
add
and
je
pop
addb
add
xchg
enter
push
dec
and
sub
rolb
add
push
inc
insl
nop
push
add
add
movsl
sbb
push
add
add
pop
outsb
sbb
lret
add
add
lock
lods
push
push
xchg
jo
add
add
jge
leave
loope
mov
insb
lcall
outsb
sarl
test
jecxz
in
aaa
ret
and
jecxz
dec
jle
jl
adc
lea
in
cmp
cli
stos
sub
xchg
inc
pop
hlt
sbb
xor
mov
mov
rclb
push
into
jne
inc
add
add
cmp
cmp
sti
popa
fidivs
rcrl
add
add
xlat
jno
xor
test
add
add
xchg
xchg
and
add
add
xchg
std
and
add
sbb
mov
xorl
and
and
cli
push
loope
incb
sub
sbb
xchg
and
pop
outsl
rolb
push
fisubs
pop
adc
dec
stc
sbb
or
push
jmp
jecxz
xchg
jnp
enter
test
idivb
sarl
mov
sbb
jmp
add
add
std
xchg
fstl
add
add
ror
cwtl
lods
in
stc
mov
push
out
add
add
loope
jmp
xchg
dec
xchg
xlat
or
addb
add
add
add
fdivrs
dec
lods
fadd
dec
cmpsb
outsl
stos
cmp
orl
pop
loopne
clc
cli
inc
movsl
rol
negl
out
inc
dec
jbe
xchg
popf
push
mov
mov
ret
sub
lds
rolb
add
rclb
pop
rorb
add
add
mov
add
imul
add
xor
push
into
fucomi
fcmovnb
jnp
sub
add
movsl
lea
mov
repz
stos
jnp
dec
add
add
pop
test
xchg
sbb
out
sbb
mov
add
add
add
setb
add
add
cld
cli
or
xchg
aas
lock
ret
in
fwait
xor
mov
jmp
fadd
hlt
daa
pop
out
push
into
jb
dec
inc
repnz
jbe
xchg
and
das
push
ljmp
pop
lahf
or
add
stc
sbb
add
jge
jo
dec
dec
or
jmp
mov
add
add
lods
pop
lods
cmp
orb
add
mov
add
add
xchg
jl
sarb
ljmp
jae
aas
fs
pop
out
decl
add
or
repnz
loop
cmp
lret
stc
sbb
ljmp
add
add
jns
data16
inc
add
add
push
inc
add
add
add
add
cmc
xor
cld
dec
add
add
sbb
mov
mov
or
lahf
aad
pop
enter
and
add
ljmp
les
add
int3
add
add
and
nop
movl
add
mov
popa
stos
adc
add
aas
mov
pop
sti
sub
or
add
je
dec
in
ficoms
mov
or
mul
xor
es
not
sti
cs
clc
jmp
enter
test
pop
call
out
xchg
cmp
adc
add
lods
cmpsl
in
push
push
fndisi(8087
xor
add
add
ljmp
inc
add
add
mov
int
mov
icebp
dec
push
xchg
lods
jns
or
add
add
add
add
push
aam
push
pop
mov
xchg
push
in
jns
sub
mov
xchg
sbbl
nop
jno
mov
ljmp
shr
repnz
inc
add
add
sub
pop
jnp
jp
add
add
test
rcll
or
insl
pop
aam
mov
jbe
xor
mov
shl
ficoms
js
fwait
pusha
dec
add
repnz
add
ss
jmp
add
movsl
pop
outsl
xchg
xchg
jne
add
add
imul
add
adc
addb
add
lea
adc
pushf
pop
inc
push
xchg
push
rolb
add
pusha
cltd
xor
test
iret
cmpsb
int3
add
add
hlt
inc
int
lea
out
push
mov
jg
fadds
mov
cltd
outsb
cmp
les
add
lock
fidivl
or
add
pop
pop
fmuls
std
inc
mov
and
mov
adc
and
ret
sub
inc
or
add
divb
xchg
ret
inc
lea
leave
jecxz
testb
mov
add
push
cwtl
fwait
or
push
or
push
mov
je
push
jne
icebp
add
jo
add
lret
loope
cmpsb
lret
jo
mov
jnp
add
add
cs
add
add
mov
inc
add
add
push
aad
push
adc
add
out
leave
inc
xabort
pop
pop
test
add
xchg
add
add
dec
enter
aam
fstpl
mov
mov
or
imul
into
mov
mov
add
bound
lea
mov
or
dec
add
add
in
cli
pop
test
pop
test
add
aaa
inc
add
xor
mov
data16
mov
cmp
cltd
loope
setl
push
mov
insb
pushf
test
add
filds
mov
xor
nop
mov
lock
cmpsl
inc
rcr
adc
stc
mov
xor
mov
sub
loope
pop
xlat
sub
jae
pop
out
or
xor
cmp
dec
inc
inc
loop
jbe
test
add
push
addr16
inc
xor
mov
nop
test
mov
mov
push
jae,pn
test
add
jp
cmpsl
sub
imul
es
jecxz
or
jns
add
add
pushf
aaa
pop
and
xor
mov
enter
pop
data16
adc
jge,pt
rorb
add
add
or
jl
pop
sub
jns
cmc
and
les
add
inc
cmpsb
scas
repnz
adc
data16
jp
in
pop
scas
fdiv
int3
add
add
sbb
sbbb
add
add
aad
pushf
sbb
leave
dec
add
add
and
js
sub
add
add
pop
cmp
lock
xor
jae
std
out
nop
push
fs
and
into
sub
js
dec
add
add
pop
sbb
cmp
shlb
mov
mov
outsb
loop
adc
mov
popa
push
test
addb
add
mov
add
add
aas
xlat
sbb
sub
sbb
cmp
add
es
testb
add
fcom
cmp
shll
inc
inc
add
add
aad
daa
leave
dec
cmpsl
ficoms
xor
cmp
sbb
mov
mov
lock
add
test
add
add
cmp
cld
sub
jl
lds
and
jne
sti
fs
dec
push
out
movl
cmpsb
xchg
mov
mov
mov
xor
sbb
fistpll
add
add
add
into
jbe
and
movsl
aam
cmp
imulb
jmp
push
cs
int
mov
sbb
mov
cmp
mov
add
cmp
mov
fcmove
add
add
xchg
jmp
inc
add
add
sub
mov
xor
push
cmpsb
pusha
shll
push
enter
pop
stos
mov
in
xor
fwait
aaa
xchg
mov
cltd
sbb
ja
add
add
cmp
or
add
push
sub
ja
aad
add
add
or
add
iret
imul
insl
gs
imul
add
jo
fcoms
and
push
popf
out
fstl
push
dec
add
add
jo
jnp
rol
add
inc
add
add
outsb
arpl
clc
ja
cs
clc
sub
fisttpl
add
jb
cmc
sbb
xlat
jb
cltd
adc
push
cli
addr16
push
jns
mov
cmp
xchg
mov
xchg
das
add
fisubrl
add
add
ficoml
repnz
test
cmp
add
cmc
cmp
xchg
xor
lahf
mov
add
xchg
xchg
jl
mov
cs
fwait
dec
add
add
stc
jg
sub
add
jecxz
cwtl
out
pop
mov
lret
je
push
cwtl
dec
ds
addb
add
cwtl
ret
and
lret
fcmovbe
stos
out
cmp
rcl
dec
mov
adc
dec
in
ja
std
fidivrs
stos
sbb
jno
insb
xor
cmp
stos
mov
popf
paddsb
sbb
or
addl
lret
bound
cli
stc
test
add
mov
adc
sbb
pusha
jbe
add
add
gs
rolb
add
mov
inc
add
add
movsb
mov
add
popa
faddp
add
add
jecxz
jp
test
add
cwtl
outsl
pusha
adc
mov
shll
adc
jge
cmp
add
js
mov
fbld
into
pop
or
lahf
scas
out
fsubrl
jne
push
mov
popf
in
sbb
pop
adc
mov
lahf
repz
repnz
add
std
movsl
dec
jns
pop
in
scas
xor
andl
cld
mov
add
add
add
hlt
pop
test
add
pop
fildll
mov
cli
mov
es
push
pop
push
stos
ljmp
and
or
add
divb
int3
add
add
ficomps
adc
pop
jmp
mov
lds
loopne
add
add
adc
or
cmpsb
fwait
sbb
sar
push
xchg
movsl
pop
and
push
outsl
mov
pusha
mov
jmp
popw
lods
jne
pop
cld
and
xchg
add
add
add
add
jns
lods
inc
mov
cmp
xor
mov
add
add
pop
js
in
add
add
add
jmp
lahf
add
add
xchg
sbb
pushf
les
add
mov
pop
je
mov
fsubrs
pop
adc
sbb
jns
jmp
fcomip
add
add
add
add
mov
add
push
cmp
cs
add
insb
sub
add
add
rorb
xchg
idivb
inc
add
add
loope
mov
push
ficoml
cmpsl
addr16
pop
arpl
xor
jno
aaa
add
add
mov
jp
int3
add
add
mov
mov
sub
es
add
jle
inc
or
add
mov
add
pop
mov
pop
addb
add
jnp
mov
lods
addr16
push
fldenv
pushf
imulb
frstor
add
add
jno
scas
leave
dec
scas
push
hlt
mov
mov
add
enter
and
push
jle
mul
and
hlt
out
push
xor
push
mov
sbb
push
clc
pop
lcall
push
mov
sar
mov
loope
loope
outsb
inc
movsb
and
add
lahf
enter
out
imul
add
test
das
mov
xchg
popf
sub
rclb
scas
cld
add
add
or
mov
inc
mov
mov
insb
fists
icebp
clc
jno
std
inc
adc
sahf
jae
adc
xor
mov
arpl
aaa
cmpsb
imul
imul
and
cmp
xchg
movsl
in
cmp
ss
jmp
add
cmc
out
es
add
das
fildl
lcall
xor
testl
cmc
clc
mov
pushf
sahf
xchg
imul
dec
sbb
pop
jecxz
mov
cmp
fwait
push
and
movsb
sti
pop
icebp
mov
mov
cli
inc
add
add
leave
fimuls
sub
cwtl
push
loop
mull
jb
fwait
push
xor
inc
loop
sub
push
or
add
push
lret
add
add
fsts
lahf
lret
imul
insl
arpl
sahf
xchg
or
or
add
add
add
testl
lahf
pop
test
daa
arpl
popa
insb
and
int
cmp
movb
add
sbb
add
orl
stc
mov
xor
add
cmpsl
in
sbb
jl
mov
into
stos
dec
in
jo
lret
lret
arpl
push
es
gs
test
rolb
int
mov
in
sub
add
add
sub
xor
and
add
daa
pop
subb
shlb
outsb
sbb
mov
add
outsl
mov
pushf
push
push
ds
xchg
nop
iret
add
fcomps
outsb
mov
mov
mov
add
pop
inc
pushf
andw
cld
repnz
repz
les
cmp
sub
mov
jne
and
andl
ss
ss
cmp
add
add
cmp
mov
mov
ds
mov
add
sbb
mov
mov
sbb
sbb
cmc
pop
push
ds
outsb
or
mov
sub
adc
pop
adc
mov
sub
outsb
sbb
insl
pop
pop
cld
ss
cmp
sub
mov
sbb
cmp
insb
mov
shlb
mov
lods
add
and
push
push
repnz
xacquire
es
add
shlb
mov
lea
pushf
andw
cs
cld
jae
insb
es
xchg
cmp
subb
sub
pushf
andw
repz
ss
insb
aam
mov
outsb
pop
add
fildl
shl
ds
mov
mov
add
adc
adc
mov
mov
fdiv
pop
pushf
push
push
ds
xchg
cs
add
mov
les
es
add
pushf
push
push
cs
xchg
repz
add
sub
or
mov
mov
stc
inc
ret
ss
cld
jmp
daa
mov
mov
sbb
insb
outsb
push
add
cmp
dec
cmp
ds
sbb
daa
mov
aam
add
mov
mov
mov
shlb
int3
add
add
add
pushf
push
push
ss
xchg
cld
iret
add
mov
pushl
push
xchg
mov
repz
pop
data16
call
sub
sbb
jne
mov
inc
leave
pushf
andw
repnz
es
fwait
pop
sar
sub
mov
sbb
mov
push
cs
xchg
cld
iret
add
mov
xchg
mov
sbbb
andw
repnz
cs
cld
jae
data16
data16
xchg
fadds
xchg
push
inc
mov
andw
ss
ss
lods
mov
lods
insb
adc
enter
sub
or
repz
mov
nop
xchg
cs
add
mov
aam
sbb
mov
pushf
andw
repnz
cld
jae
mov
sar
orb
andw
ds
popf
nop
jae
mov
mov
mov
mov
sbb
andw
es
ss
jae,pt
sbb
ljmp
mov
mov
outsb
inc
pushf
andw
ds
jae,pt
push
fwait
data16
aam
xchg
pop
mov
fimull
xchg
add
ds
bnd
add
mov
sbb
sub
insb
mov
aam
mov
dec
add
add
add
leave
cmp
pushf
andw
es
popf
jae,pt
fwait
insb
sarb
es
sbb
mov
pushf
andw
es
ds
cld
jae
daa
mov
sbb
add
es
lret
int3
add
add
pushf
andw
repnz
repnz
jae,pt
rclb
mov
adc
repz
aam
sub
insb
or
sub
adc
sbb
outsb
mov
dec
mov
pushf
andw
ds
repz
ss
mov
daa
cmp
int3
int3
add
add
add
nop
repz
xchg
sbb
mov
sbb
mov
cmp
xchg
pushf
andw
ss
jae,pt
sar
es
les
aam
out
inc
sbb
inc
add
adc
add
rcrb
mov
pop
es
adc
mov
adc
scas
mov
cld
nop
repz
fwait
shlb
mov
sbb
sarb
aam
test
add
inc
iret
xor
pushf
andw
nop
repz
nop
jae
xchg
mov
mov
mov
sub
add
decl
bnd
fwait
sbb
aam
lcall
lods
lcall
pop
add
pushf
andw
ss
popf
ss
add
data16
ds
mov
aam
insb
daa
adc
mov
adc
aam
sar
pop
add
es
outsl
rep
cs
mov
mov
pop
pushl
sbb
add
add
and
andw
es
popf
repz
shlb
es
push
pop
pushf
push
push
nop
repnz
lea
xchg
cld
iret
add
fwait
daa
xchg
mov
fwait
sbb
pop
pushf
push
push
ds
nop
mov
xchg
es
add
push
cmp
push
lcall
push
pushf
andw
cld
cs
popf
ss
push
jne
es
data16
add
push
push
ds
es
cld
xchg
repnz
add
jne
mov
add
mov
mov
inc
repz
nop
es
ljmp
adc
sub
mov
mov
mov
ss
outsb
lods
daa
add
xchg
rcl
cmp
mov
adc
sbb
sahf
mov
pushf
push
push
nop
repz
xchg
nop
iret
add
sub
outsb
mov
pushf
push
push
nop
repnz
mov
xchg
repnz
add
fcomps
enter
lods
stos
push
pushf
andw
repnz
nop
jae
sub
fwait
sub
mov
sub
orb
add
lods
and
imul
adc
cld
xchg
cld
iret
add
mov
add
aam
pop
pushf
andw
ss
nop
jae
or
outsb
xchg
mov
xorb
pusha
pushf
andw
cld
ss
bnd
fsubrs
pop
mov
es
pushl
pushf
andw
ds
popf
jae,pt
mov
sub
pop
add
pop
mov
inc
and
pushf
andw
repnz
repz
xchg
adc
lods
mov
nop
es
sub
rcrb
xorb
mov
mov
data16
fwait
fwait
ss
int3
int3
add
add
push
adc
cs
mov
mov
jne
mov
push
add
mov
sub
sbb
push
pushf
push
push
es
es
xrelease
cld
iret
add
mov
add
aam
mov
mov
pushf
andw
pause
cld
popf
bnd
sbb
les
push
lcall
mov
lods
pushf
push
push
nop
repnz
xrelease
repz
add
push
add
cmp
les
pop
mov
pushf
push
push
es
lea
xchg
ss
add
fwait
sub
mov
sub
ret
int3
int3
int3
add
add
mov
jmp
pushf
andw
cld
cld
repz
bnd
pop
sbb
jb
add
jmp
outsb
data16
mov
pop
mov
sub
push
sub
xchg
add
hlt
pop
xor
repz
sbb
daa
sub
les
adc
rorb
mov
jne
xchg
mov
fwait
aam
int3
int3
int3
add
add
jne
pushf
push
push
repnz
cld
xchg
cld
iret
add
adc
insb
test
movswl
pushf
andw
ss
repnz
nop
jae
or
mov
sbb
sbb
testl
add
push
or
mov
cmp
cmp
sbb
pop
cmpb
dec
jnp
movsb
pushf
push
push
cld
repz
lea
xchg
nop
iret
add
pushl
mov
int3
add
add
repz
rcr
pop
adc
add
pop
fadds
mov
mov
pushf
andw
cs
repz
les
mov
ja
int3
int3
add
add
stc
lcall
add
repz
jae,pt
mov
cmp
sub
inc
push
pushf
andw
cs
ss
mov
add
cmp
mov
sbb
push
push
cs
nop
xchg
ds
add
xchg
xchg
rcrb
mov
xchg
les
add
pop
mov
es
xchg
es
add
sbb
cmp
pop
clc
lcall
add
cs
ss
daa
sbb
mov
cmp
cs
pushf
push
push
repnz
cld
xchg
cs
add
fwait
jne
sbb
sbb
push
es
lea
xchg
cs
add
data16
pop
mov
jg
test
add
pushf
push
push
es
xacquire
ds
add
pop
mov
inc
add
add
andw
ss
repz
or
adc
pop
insb
sbb
adc
sub
fadds
add
or
mov
rcrb
mov
pop
push
cmp
fs
add
add
leave
out
jne
repz
xchg
or
mov
sbb
mov
mov
fmuls
mov
cmp
sahf
push
pushf
andw
cs
ds
repz
mov
add
xorb
in
add
add
pushf
push
push
nop
nop
lea
cld
xchg
repnz
add
mov
xchg
adc
and
decl
pushf
andw
ds
es
lods
mov
sub
outsb
mov
es
sbb
dec
cs
jmp
sbb
mov
mov
mov
insb
mov
push
sub
xchg
mov
add
imul
andl
nop
popf
es
cmp
insb
cmp
data16
pop
int3
add
add
add
pushf
andw
repz
es
adc
sub
aam
addb
mov
pushf
andw
repnz
es
push
mov
les
push
adc
mov
cld
cs
sub
sbb
pop
push
mov
jne
adc
adc
mov
adc
pop
pushf
andw
ds
ss
repz
mov
les
mov
fsubs
sub
pushf
andw
cs
repz
fdivr
mov
les
cmp
ss
add
outsb
cmp
shlb
adc
add
nop
ss
shlb
mov
jmp
daa
mov
add
int3
int3
int3
add
add
add
add
int3
int3
int3
add
add
add
add
add
mov
ds
or
pop
add
sub
mov
cmp
mov
dec
pusha
cld
ds
jmp
xchg
mov
sub
daa
mov
fdivs
mov
sbb
stc
xor
rolb
bnd
pop
mov
mov
fwait
cmp
sub
les
fs
test
repz
mov
xchg
mov
daa
sbb
xchg
mov
mov
mov
subb
sbb
push
pushf
andw
ss
ss
ljmp
fwait
outsb
mov
adc
rorl
ss
sbb
mov
add
fcoms
add
imul
and
incb
ss
es
jae,pt
sbb
aam
mov
pushl
iret
int3
int3
int3
add
add
add
pushf
andw
repz
cld
jae
insb
les
or
pop
int3
int3
int3
add
add
andl
es
bnd
outsb
sub
daa
incb
lods
mov
pushf
andw
repz
repz
mov
add
pop
xchg
cmp
insb
fmul
add
pushf
andw
ss
nop
jae
jne
sbb
mov
xorb
test
inc
add
pushf
andw
cs
cs
jae,pt
mov
mov
or
push
test
nop
nop
ss
mov
pop
mov
fadds
or
mov
decb
mov
aam
call
add
pop
mov
pushf
andw
nop
es
es
sub
jne
les
and
mov
cld
cs
mov
mov
sub
daa
addb
xchg
sbb
mov
mov
cmp
push
nop
cs
sub
xorb
insb
sbb
pop
push
jne
mov
mov
sbb
add
add
ds
sbb
fdivs
aam
es
sti
cmp
cs
add
pop
mov
sub
or
sub
sub
les
lods
sub
sub
movsb
sub
add
mov
jne
jne
daa
sbb
pop
aam
cmp
mov
imul
ds
es
sbb
sub
aam
pop
aam
sbb
push
add
push
push
repnz
xrelease
ss
add
sbb
mov
add
es
outsb
rorb
mov
xchg
mov
shlb
daa
es
fdivs
push
nop
test
add
cs
pushf
andw
cs
jae,pt
insb
mov
mov
sub
ds
repz
sub
fwait
sub
mov
sbb
xorb
mov
jne
popa
cs
mov
mov
fsubrs
cmp
insb
add
fwait
mov
es
daa
cmp
jmp
lea
es
mov
daa
aam
mov
adc
call
sub
data16
mov
push
loopne
repnz
jmp
mov
cmp
data16
aam
aam
shlb
adc
not
pushf
push
push
ds
lea
xacquire
ds
add
outsb
mov
aam
mov
mov
pushl
pushf
andw
ds
repz
jne
cmp
mov
pop
mov
aam
das
call
es
jne
outsb
mov
lods
sub
or
cmp
adc
int3
int3
add
add
sub
pushf
andw
repnz
nop
jae
sub
es
pop
mov
cmp
jmp
data16
mov
data16
mov
or
mov
mov
jne
sbb
shlb
add
add
inc
add
add
incl
add
es
cmp
sbb
outsb
outsb
push
mov
rcrb
jne
lret
repnz
mov
jne
es
cmp
fwait
mov
push
add
mov
pop
in
or
repz
add
lods
xorb
add
or
inc
cmp
mov
push
subb
sub
ds
add
mov
addb
daa
lods
insb
push
adc
sbb
jmp
sbb
aam
mov
daa
fwait
daa
sub
sub
fwait
subb
int3
int3
add
add
pusha
fisttpll
pushf
andw
repnz
es
push
mov
mov
mov
xchg
data16
bnd
jne
sbb
xchg
mov
outsb
add
sub
insb
mov
mov
jne
inc
jmp
cs
cmp
mov
mov
adc
mov
sub
shlb
ret
and
cs
sbb
pop
sub
les
mov
mov
pushf
andw
cld
ds
es
sub
insb
add
sbb
shl
gs
andw
es
repz
aam
daa
daa
mov
add
pushf
andw
nop
nop
ss
cld
jae
sub
mov
mov
mov
fcom
mov
add
and
cmp
andw
ss
popf
jae,pt
mov
sub
jne
mov
pop
xchg
call
pushf
push
push
es
xchg
es
add
sub
mov
cmp
jl
ljmp
sldt
fcom
mov
data16
mov
cmp
sbb
cmp
int3
int3
int3
add
add
mov
pushf
andw
cs
jae,pt
les
fcoms
adc
lds
add
add
int3
int3
int3
add
add
int3
int3
int3
add
add
mov
pushf
push
push
nop
ds
nop
xchg
ds
add
mov
xchg
or
aam
adc
ss
pushf
push
push
es
cld
xchg
ds
add
shrb
sbb
mov
or
jg
icebp
pushf
andw
ds
repz
jae,pt
daa
mov
lods
push
lcallw
adc
adc
jne
pushf
push
push
repz
xrelease
repz
add
mov
insb
insb
mov
daa
ja
pushf
andw
ss
es
es
add
mov
cmp
adc
xchg
rclb
outsl
arpl
add
ds
or
or
sbb
fadd
pop
mov
pop
add
push
cwtl
mov
sub
pushf
andw
ds
jae,pt
mov
cmp
pop
in
mov
pushf
andw
repz
ss
es
daa
sub
pop
sbb
add
rolb
jge
pushf
andw
ss
bnd
mov
mov
pushl
test
std
pop
mov
cs
jmp
mov
insb
adc
outsb
sbb
add
repnz
jmp
mov
mov
mov
outsb
daa
sbb
mov
push
sbb
cmp
cs
adcb
mov
es
mov
pop
pop
mov
sbb
lcall
push
mov
pop
add
bnd
mov
pop
sub
sub
lods
mov
shrb
fwait
lods
adc
rep
pushf
andw
cld
cs
ss
mov
insb
sbb
mov
movsl
sub
es
cmp
mov
add
sbb
sub
fdivs
add
nop
cs
daa
sbb
mov
cmp
jne
fdivr
incb
cs
outsb
daa
sub
xchg
jne
push
es
push
sub
adc
adc
jns
int3
int3
int3
add
add
pushf
andw
ss
popf
es
fcoms
data16
fsubrs
call
pushf
andw
ds
repz
incb
sbb
popa
jmp
sarb
cld
bnd
fwait
or
outsb
les
sub
pop
sub
cmp
lods
cmp
mov
bnd
mov
pop
sub
add
adc
mov
mov
xorb
insb
repz
pushf
push
push
cs
cs
xchg
ss
add
xorb
mov
mov
sbb
andl
repz
es
lcall
mov
lcall
cmp
sub
ds
add
cmp
mov
sub
xchg
pushl
outsb
sbb
es
mov
les
add
push
outsb
ljmp
cmp
les
push
pushf
push
push
nop
cs
xchg
repz
add
sbb
lods
pushl
in
jne
repnz
jmp
rcrb
mov
sub
add
ljmp
ljmp
push
lods
outsb
insb
out
pushf
andw
cs
jae,pt
mov
sbb
sub
mov
nop
aam
pop
pushf
andw
repnz
repz
rcrb
lcall
cmp
mov
pushf
push
push
es
xchg
nop
iret
add
sub
pushl
and
add
pushf
andw
cld
nop
nop
popf
es
sub
pusha
pushf
andw
repnz
nop
popf
cld
jae
or
sbb
mov
outsb
outsb
xor
repz
data16
rorb
sbb
cmp
mov
mov
subb
insb
mov
pushf
andw
es
repz
mov
outsb
insb
sub
data16
sbb
add
pop
test
pushf
andw
repz
nop
popf
jae,pt
mov
cmp
mov
or
mov
xchg
xchg
jae
pushf
andw
ss
popf
es
lods
mov
aam
daa
outsb
sub
outsb
mov
pushf
andw
nop
es
repz
or
daa
shrb
pop
mov
inc
add
push
push
repz
xchg
repnz
add
pop
mov
lods
sbb
mov
mov
es
daa
mov
cmp
daa
xorb
mov
outsb
aam
add
pushf
andw
cs
es
sub
sub
insb
pop
mov
rolb
add
push
es
xacquire
cs
add
sbb
mov
mov
daa
mov
insl
jecxz
inc
and
bnd
es
outsb
mov
cmp
data16
lods
mov
lods
sub
lods
je
push
int3
int3
int3
add
add
push
pushf
push
push
cs
xchg
cs
add
jmp
pop
fwait
mov
mov
or
ss
mov
mov
mov
adc
or
sbb
mov
mov
xchg
aaa
mov
pushf
andw
es
cld
popf
cld
jae
sbb
daa
sub
daa
data16
sub
lea
cld
xchg
cs
add
cmp
outsb
add
insb
hlt
clc
sarb
add
ds
fwait
adc
sbb
les
andw
cld
ss
ss
sbb
pop
insb
mov
mov
pop
mov
push
loopne
push
push
es
mov
nop
xchg
cld
iret
add
mov
mov
subb
push
push
ds
ss
xchg
ds
add
mov
mov
mov
sub
mov
inc
mov
pushf
andw
nop
repnz
popf
nop
jae
pop
sbb
mov
mov
outsb
mov
adc
repz
push
push
cld
es
xrelease
es
add
daa
xchg
fwait
mov
jne
sub
push
inc
push
pushf
andw
repz
jae,pt
sbb
xchg
aam
mov
cmp
mov
hlt
mov
repz
mov
pop
push
mov
fdivrs
xchg
sbb
add
repz
or
push
insb
or
mov
les
mov
mov
es
mov
jne
pushf
andw
cld
repnz
bnd
mov
sbb
adc
addr16
add
cs
mov
outsb
mov
sub
es
insb
add
cmp
jle
bound
add
pushf
andw
repz
jae,pt
sub
dec
add
add
bnd
adc
lods
xchg
aam
sub
add
mov
sahf
sub
pushf
andw
cld
nop
repz
es
aam
adc
mov
cmp
adc
or
es
call
cmp
mov
outsb
cmp
xchg
add
push
or
je
or
fistpl
add
repnz
popf
cld
jae
les
daa
data16
cmp
pushf
andw
cs
jae,pt
mov
or
rcl
sbb
add
int
decl
pushf
andw
ss
jae,pt
fwait
pop
mov
es
sbb
or
cs
cmp
pop
cmp
mov
cmp
push
mov
mov
aam
add
shlb
arpl
andw
es
ss
ss
mov
sub
fdivs
inc
pop
pushf
push
push
ds
lea
xchg
es
add
pop
fwait
insb
cmp
sub
mov
sbb
cld
jmp
pop
cmp
sbb
daa
mov
fcom
mov
shr
pushf
andw
ds
cld
popf
repz
insb
add
cmp
mov
sbb
push
ss
insb
mov
mov
mov
fcomps
pop
or
mov
les
pop
loope
mov
pushf
andw
cld
ss
nop
jae
sub
mov
lods
mov
shlb
add
add
mov
pushf
andw
ss
cld
popf
repz
xchg
fdivs
mov
outsb
lcall
and
incb
repnz
ss
mov
mov
xchg
add
jmp
outsl
loopne
ds
pop
sub
cmp
cmp
mov
mov
insb
mov
insb
mov
pushl
add
add
andw
ss
popf
es
sbb
mov
xchg
sbb
cmp
jne
sbb
bnd
daa
push
pop
daa
add
jne
outsb
adc
mov
pushf
push
push
es
xchg
repnz
add
aam
sbb
mov
push
es
mov
sbb
sbb
les
mov
sub
insb
sbb
inc
adc
stos
pushf
andw
es
jae,pt
mov
es
fwait
les
fwait
sub
loop
cs
jmp
sub
cmp
fdivr
sub
add
mov
mov
pushf
andw
nop
repz
es
add
mov
es
cmp
fimull
test
and
add
add
cs
ss
fsubs
fdivs
rcrb
add
cld
ss
repz
lods
cmp
mov
mov
pop
fdivrs
and
incb
repz
es
sub
sub
addb
jmp
data16
popw
sub
mov
mov
aam
pop
push
add
insb
mov
mov
je
pushf
push
push
cld
cld
repz
cld
xchg
repz
add
sbb
add
add
jecxz
pushf
andw
cs
repz
adcb
cmp
jne
nop
repz
jmp
mov
lods
adc
xchg
pop
daa
sub
mov
sbb
pop
insb
es
push
cmpsl
popa
pushf
push
push
es
xchg
repnz
add
mov
decb
xlat
int3
int3
int3
add
add
stos
ss
shrb
mov
pop
andb
sbb
mov
xchg
fcomps
mov
sbb
dec
add
add
pushf
andw
cs
jae,pt
insb
data16
or
add
daa
outsb
sub
add
add
repz
popf
es
rolb
decw
movzwl
pushf
andw
ds
ss
mov
push
data16
sbb
subl
incb
ds
es
sbb
les
sbbb
add
test
mov
repnz
jmp
mov
outsb
sbb
sub
les
pop
add
mov
pushf
andw
ds
popf
cld
jae
mov
cmp
jne
mov
lods
jne
add
add
int3
int3
add
add
add
add
ds
daa
fwait
add
jne
inc
mov
mov
xchg
sbb
mov
pushf
lods
mov
cld
jmp
pushw
es
add
xchg
sbb
add
push
inc
pushf
andw
ds
popf
cld
jae
sub
or
sub
mov
daa
mov
pop
push
pushf
andw
es
bnd
mov
add
sub
outsb
mov
jne
sti
add
cld
ss
jmp
sub
sub
mov
insb
add
adc
es
outsb
data16
xchg
into
call
add
add
add
daa
lods
mov
lcall
or
les
sub
ja
add
pushf
andw
ds
popf
ss
mov
add
xchg
outsb
jne
shr
call
pushf
andw
cs
nop
jae
pushw
data16
jmp
andw
nop
es
jae,pt
shrb
pushl
cmp
cmpsl
mov
pushf
push
push
ss
lea
xacquire
ds
add
cmp
sbb
pop
daa
data16
add
pushf
push
push
es
repz
cld
xchg
es
add
sub
jne
add
sub
sub
pushf
push
push
repnz
nop
xchg
repnz
add
aam
outsb
es
mov
ss
sbb
sub
sub
cmp
repz
cld
jmp
pushl
les
mov
cmp
mov
adc
das
popa
pushf
andw
nop
es
jae,pt
mov
outsb
sbb
mov
pop
add
mov
jg
pushf
andw
nop
ss
es
mov
cmp
shlb
add
add
mov
push
es
lea
xchg
repnz
add
sbb
xchg
fwait
rcl
cmp
and
incb
nop
repnz
repz
insb
data16
mov
mov
rorb
fwait
push
insb
cltd
xchg
jno
xchg
jmp
es
jmp
or
rolb
sbb
mov
daa
data16
or
sub
add
decl
test
add
pushf
andw
repz
repnz
jae,pt
daa
cmp
sub
sub
inc
pushf
push
push
cld
repnz
mov
nop
xchg
cs
add
sbb
sbb
je
add
add
push
ss
jmp
fwait
mov
outsb
pop
aam
sub
add
sarb
sbb
cmp
aam
jbe
rcrb
nop
es
nop
jae
sbb
data16
pop
insb
pop
or
add
sbb
push
pushf
andw
es
ss
cmp
sub
pop
add
mov
sarb
jmp
mov
mov
mov
xorb
mov
sub
and
int3
int3
int3
add
add
repz
xrelease
cs
add
sub
fsubrs
xchg
mov
je
pushf
andw
ss
es
cmp
push
sbb
mov
add
pushf
andw
ds
bnd
add
sbb
outsl
notl
pushf
andw
cld
ds
es
data16
mov
mov
sub
jmp
repz
mov
shlb
push
mov
mov
or
shrb
mov
mov
pop
add
pushf
andw
cld
repz
bnd
rcrb
mov
daa
mov
int3
int3
int3
add
add
int3
int3
add
add
cmp
andw
ds
ss
cmp
jne
mov
pop
pushf
andw
cld
cs
bnd
xchg
mov
es
lods
lods
jbe
jl
and
ss
aam
outsb
mov
adc
es
lods
sbb
mov
lods
mov
push
push
repz
xacquire
es
add
cmp
add
inc
adc
repz
jne
sub
pop
cmp
adc
mov
sbb
data16
int3
int3
int3
add
add
add
repnz
jmp
sbb
add
mov
add
sub
mov
lods
adc
add
add
jne
es
aam
sub
jne
insb
jne
sbb
mov
push
pushf
push
push
cs
nop
mov
xrelease
ss
add
mov
mov
data16
cmp
les
add
pushf
push
push
ds
lea
xchg
nop
iret
add
push
mov
mov
rclb
fs
xor
pushf
andw
repz
cld
jae
sub
aam
stos
int3
int3
int3
add
add
popf
or
andl
cs
es
mov
sub
pop
mov
adc
out
call
pushf
andw
ds
nop
jae
insb
add
sub
shll
andl
repnz
ss
mov
es
push
push
pushf
push
push
cld
repz
xrelease
ss
add
lods
pop
mov
mov
data16
sbb
dec
jne
pushf
andw
repnz
cs
bnd
mov
les
mov
add
pushf
andw
es
jae,pt
mov
outsb
insb
push
insb
push
mov
repnz
repz
outsb
mov
lods
add
data16
sbb
shrb
mov
push
xor
int3
int3
int3
add
add
andw
nop
cs
jae,pt
mov
mov
xchg
sbb
cmp
into
push
cld
es
cmp
sbb
fcomps
pop
testb
and
push
push
repz
ds
xchg
ds
add
xchg
les
sbb
loop
add
andw
ss
cs
jae,pt
add
mov
add
inc
jns
push
pushf
push
push
nop
ds
xchg
ds
add
mov
incl
mov
cmp
mov
andw
ss
popf
bnd
add
sbb
repz
int3
int3
add
add
je
pushf
andw
es
bnd
les
sub
mov
pushf
andw
cld
repnz
popf
repz
adc
mov
lods
add
pop
jmp
ss
data16
daa
es
mov
sub
xchg
sub
sbb
sbb
mov
xchg
call
pushf
andw
nop
repnz
popf
jae,pt
cmp
data16
sub
mov
sub
add
cs
bnd
mov
data16
lods
mov
cmp
nop
cs
les
ljmp
shrb
mov
fdivr
jne
push
xor
pushf
push
push
cs
lea
xacquire
cs
add
insb
add
sub
pushf
andw
ss
nop
jae
outsb
sub
cmp
mov
or
jne
pop
hlt
inc
call
pushf
andw
ss
nop
jae
subb
sub
mov
mov
mov
andl
ss
nop
jae
aam
push
sub
sbb
sub
ljmp
addb
add
add
insb
orb
jne
push
outsb
mov
fcom
sbb
push
pushf
push
push
ds
cld
mov
xchg
cs
add
cmp
mov
mov
shlb
andw
cld
nop
nop
popf
bnd
shlb
sub
push
pushl
cs
mov
outsb
sbb
daa
outsb
mov
mov
mov
es
mov
adc
ss
mov
or
aam
les
fwait
add
or
jne
sub
sub
add
sarl
nop
jmp
mov
mov
les
data16
mov
sbb
nop
pushf
andw
ss
ss
repz
subb
jne
fwait
add
adc
mov
es
jmp
les
sbb
mov
sub
mov
cld
cs
or
add
rcrb
lods
pushl
sub
add
movsb
repz
xchg
mov
cmp
mov
push
mov
pop
mov
jne
jne
mov
fwait
xchg
in
jmp
sbb
lcall
add
cld
ds
bnd
mov
mov
mov
adc
test
add
add
lea
xacquire
cld
iret
add
aam
sbbb
ss
jmp
mov
cmp
rcrb
insb
add
jne
sbb
nop
es
jmp
xorb
add
sub
fdivs
pushl
sar
je
push
ds
ss
fadds
es
aam
mov
push
aam
add
mov
sbb
adc
nop
repnz
add
mov
fwait
sub
xorb
add
mov
jne
add
add
add
lea
nop
xchg
ds
add
fwait
sub
mov
cs
pushf
andw
es
cs
ss
xchg
sbb
mov
jnp
jbe
pop
push
pushf
andw
repnz
nop
jae
adc
ljmp
add
scas
mov
pushf
push
push
cld
nop
lea
xacquire
ds
add
xorb
ds
nop
jmp
pop
insb
sub
pop
sub
pop
aam
mov
mov
les
add
add
cs
ss
cmp
sbb
pop
fsubs
mov
shlb
mov
fistl
cld
jmp
mov
cmp
push
fsubs
fcomp
outsb
aam
sub
sub
insb
sbb
jecxz
add
es
jne
mov
pop
push
or
les
mov
fcomps
xchg
dec
push
pushf
andw
cs
cs
es
adc
mov
incb
pushf
andw
cs
jae,pt
mov
pop
mov
mov
xchg
cmp
es
pushf
push
push
cld
repz
xchg
repnz
add
mov
sbb
outsl
push
es
pop
insb
sbb
insb
pushl
xorb
sub
subb
das
and
add
daa
pushl
pop
sbb
sub
cmp
orb
pushf
andw
cs
bnd
fsubrs
aam
es
andl
nop
popf
cld
jae
sbb
cmp
outsb
daa
sti
mov
nop
bnd
push
sbb
mov
fwait
add
xchg
sub
les
cmp
aad
lcall
lea
nop
xchg
nop
iret
add
add
xchg
sbb
pop
nop
es
shrb
andb
fwait
mov
mov
lods
ljmp
inc
mov
sbb
add
repz
mov
insb
mov
mov
jne
or
adc
fwait
mov
aam
fcomps
imul
jmp
sub
rclb
sub
sub
xchg
mov
data16
mov
mov
int3
int3
add
add
je
pushf
push
push
es
cld
xchg
repnz
add
mov
addb
popa
pushf
andw
ds
repz
lods
mov
mov
mov
cmp
decb
dec
ds
add
pop
sub
sub
mov
sub
mov
aam
lods
es
mov
pushf
andw
nop
nop
ss
cld
jae
mov
sub
insb
mov
fcomp
or
int3
add
add
out
pushf
push
push
cs
mov
xrelease
es
add
mov
outsb
add
push
aam
mov
inc
mov
pushf
push
push
nop
ds
lea
xchg
cld
iret
add
lods
pop
mov
dec
push
cld
es
aam
sbb
aam
adc
fcomp
lods
insb
sub
mov
sub
adc
add
cld
jmp
outsb
outsb
adc
sub
jne
pop
orl
nop
jmp
pop
cmp
sbb
mov
outsb
mov
shlb
outsb
mov
data16
jne
mov
pushf
push
push
ds
mov
xacquire
es
add
les
jne
sbb
ljmp
sub
push
push
cld
repnz
xacquire
ss
add
mov
outsb
data16
jne
sub
mov
andl
repz
repz
push
sbb
fdivs
incl
cld
nop
ss
xchg
ss
add
pushl
pushl
add
add
lea
xchg
ds
add
lods
add
mov
fwait
add
mov
bnd
daa
insb
fwait
xchg
sub
pop
cmp
sbb
mov
add
and
ds
aam
rcl
daa
mov
fcom
sub
les
cld
nop
jmp
decl
mov
sbb
mov
data16
les
daa
pop
fadds
jae
int3
int3
add
add
dec
adc
add
ss
jae,pt
mov
mov
mov
pop
sub
add
add
add
bnd
mov
mov
sub
pushl
daa
shlb
jne
mov
jl
int3
int3
int3
add
add
add
pushf
andw
repz
repz
aam
data16
sub
les
add
xchg
mov
pushf
andw
cs
bnd
es
shlb
add
add
sti
pushf
andw
nop
cld
repz
jae,pt
mov
daa
mov
data16
sbb
push
ret
nop
cs
mov
sbb
mov
outsb
xchg
mov
push
mov
insb
mov
or
mov
sub
add
add
test
cld
ds
add
mov
cmp
mov
jne
lods
mov
fwait
cmp
push
repnz
jmp
daa
subb
outsb
sbb
cmp
sub
mov
outsb
xchg
mov
or
or
bnd
pop
mov
mov
add
data16
sub
mov
jmp
cld
nop
cs
xchg
mov
pop
outsb
mov
mov
lods
mov
sub
aam
mov
mov
pushf
andw
nop
repnz
bnd
daa
add
mov
mov
rclb
mov
add
movsb
test
mov
pushf
andw
es
cld
jae
data16
mov
data16
cmpl
cs
shlb
sbb
mov
mov
cmp
sbb
rolb
add
add
fsubs
dec
push
bnd
sub
mov
xchg
adc
mov
aam
daa
mov
mov
outsb
mov
sbb
add
add
loope
pushl
fcomp
pop
sub
xchg
cmp
push
mov
fs
push
push
nop
nop
lea
nop
xchg
nop
iret
add
data16
lods
sbb
out
push
pushf
andw
cs
es
nop
jae
sub
sub
mov
loope
lea
decl
pushf
andw
repnz
ss
pop
cmp
jne
mov
mov
incl
dec
cmp
andw
repnz
jae,pt
sbb
mov
cmp
dec
call
pushf
andw
ss
bnd
les
sub
jne
add
xchg
add
mov
xchg
ds
add
lods
mov
sbb
pushf
push
push
nop
cld
cs
xrelease
ss
add
mov
sbb
cmp
loope
call
add
mov
outsb
mov
les
outsb
sbb
mov
insb
fwait
mov
pushf
andw
pause
ss
bnd
es
fcomps
sbb
push
push
repnz
xrelease
nop
iret
add
mov
add
push
data16
lods
mov
push
push
repz
xchg
ss
add
mov
daa
pop
fsubs
or
test
icebp
lcall
lea
xchg
repz
add
fwait
data16
fsubrs
bswap
int3
int3
add
add
inc
or
add
repz
popf
jae,pt
cmp
jmp
mov
add
and
andl
cld
popf
repz
add
mov
xchg
cmp
rep
repnz
es
mov
fwait
pop
sar
add
lods
mov
sbb
add
es
imul
pushf
andw
repnz
ss
sub
add
cmp
fsubrs
add
add
pushf
andw
ds
repz
lcall
mov
fwait
adc
sub
push
push
repnz
ds
xrelease
cs
add
sub
add
sbb
push
pushf
push
push
cs
cld
xchg
ds
add
push
or
add
sbbb
sub
jmp
data16
cmp
sbb
data16
cmp
lods
mov
fcomps
jge
push
pushf
push
push
nop
ds
cld
xchg
es
add
mov
outsb
daa
rcrb
fadds
mov
cmp
repz
sbb
pop
push
jne
sub
fcoms
xchg
mov
mov
cld
ds
fwait
mov
sub
xorb
mov
add
std
mov
pushf
andw
es
ss
cld
jae
mov
sub
insb
lods
cmp
mov
mov
add
pushf
push
push
repnz
xchg
ss
add
add
pushl
cmp
add
add
cld
repnz
jmp
mov
aam
mov
andb
add
pop
rclb
mov
sbb
pushf
andw
nop
ss
cld
jae
pop
aam
or
pop
mov
mov
or
add
add
lret
pushf
push
push
cld
cld
nop
mov
xrelease
repz
add
es
data16
fwait
outsb
mov
sub
andw
nop
nop
ss
es
cmp
mov
fwait
sub
fcom
mov
ficoml
andw
ds
popf
cld
jae
es
outsb
xchg
xorb
mov
push
pushf
push
push
ds
xchg
ss
add
aam
mov
inc
sbb
add
add
mov
cld
cld
jmp
xchg
mov
fsubrs
push
mov
mov
jne
pop
cmp
sub
insb
mov
cmp
mov
nop
jmp
mov
cmp
les
data16
ljmp
or
daa
les
mov
push
push
cs
nop
xchg
nop
iret
add
shlb
sbb
pop
add
pushf
push
push
ds
mov
xacquire
repz
add
mov
les
pop
pushf
andw
nop
cs
repz
adc
adc
push
add
cs
pop
sbb
mov
cmp
es
sub
sbb
pop
pop
lcall
pushf
andw
nop
es
popf
es
cmp
adc
cmp
pop
test
bnd
fsubs
sub
mov
push
daa
sbb
cmp
rcrb
add
ljmp
ljmp
ljmp
mov
xchg
add
mov
daa
mov
cmp
cmp
adc
add
mov
xacquire
repz
add
sub
add
lods
es
mov
ljmp
sub
rclb
sbb
add
xchg
hlt
ds
call
pop
pop
cmp
mov
sub
add
imul
push
push
cld
ss
xchg
nop
iret
add
fwait
lods
mov
ljmp
loope
xor
pushf
push
push
ds
xrelease
es
add
fsubrs
mov
mov
sbb
pop
or
int3
int3
add
add
push
push
ds
cld
xchg
ss
add
sub
mov
insb
pop
call
ds
xchg
repz
add
lods
cmp
xchg
add
sbb
andw
cld
cld
ss
jae,pt
mov
sbbb
mov
sub
lcall
incb
ss
popf
ss
fwait
jne
fcomps
add
inc
pushf
push
push
nop
cs
mov
xchg
ds
add
pop
lcall
insb
fdivrs
mov
pushf
andw
cs
popf
es
insb
shrb
outsb
cmp
fsubs
jne
ljmp
and
push
ss
lea
cld
xchg
nop
iret
add
mov
aam
cmp
or
jo
mov
ds
mov
lods
mov
adc
sub
les
hlt
sbb
test
andw
repnz
es
repz
sbb
les
mov
and
je
mov
pushf
andw
es
popf
cld
jae
mov
mov
mov
mov
data16
insl
test
andl
nop
popf
jae,pt
sub
mov
mov
mov
push
push
nop
ds
mov
xacquire
es
add
sbb
sbb
mov
jnp
repz
jmp
pushl
cmp
sub
aam
aam
sbb
outsb
mov
faddl
test
cld
nop
cld
jmp
outsb
outsb
cmp
adc
or
cmp
outsb
daa
mov
cmp
sub
add
add
push
pushf
andw
ss
ss
bnd
adc
pop
add
adc
lds
add
test
loop
lcall
add
ss
repz
pop
pop
xorb
ret
int3
int3
int3
add
add
add
fldl
andw
ds
jae,pt
mov
adc
adc
fwait
les
add
add
jb
pushf
push
push
es
mov
xchg
cs
add
mov
sub
xchg
jne
nop
bnd
mov
mov
add
outsb
cmp
fdivs
jecxz
pop
ds
shrb
les
pushw
pop
sbb
sub
fcom
movl
add
cs
repz
fwait
adc
rclb
cld
jmp
sub
cmp
outsb
sbb
sub
ljmp
mov
orb
pushf
push
push
nop
nop
lea
xrelease
nop
iret
add
mov
xchg
mov
andb
cmp
add
add
pushf
andw
cld
repz
cld
jae
cmp
mov
shlb
add
mov
sub
pop
push
pushf
push
push
cld
es
nop
xchg
es
add
mov
call
sub
outsb
sub
ds
mov
fadds
sbb
fdivs
les
je
nop
repz
or
sbb
subb
add
data16
xchg
pop
in
fistpll
push
sub
mov
xrelease
ss
add
sub
add
lods
mov
mov
pushf
push
push
cs
xchg
repnz
add
aam
pop
mov
add
outsb
cmc
push
sub
nop
ss
mov
incl
sub
mov
sbb
cmp
insb
cmp
add
jmp
pushf
andw
nop
ds
nop
jae
mov
call
mov
lods
mov
inc
lock
andw
ss
ss
ss
mov
pop
push
push
jne
sub
lret
cs
shlb
xchg
mov
es
cmp
aam
sub
add
bnd
insb
sub
adc
outsb
incl
xchg
popa
pushf
andw
ds
cld
jae
mov
or
sub
mov
sub
leave
addl
and
incb
repz
cld
jae
lods
aam
push
lods
outsb
sbb
cs
aam
pop
daa
mov
aam
mov
xchg
aam
mov
outsb
sbb
cmp
mov
rep
nop
ss
mov
cmp
mov
mov
decb
cmp
mov
sbbb
data16
call
ss
mov
mov
mov
sbb
lcall
pop
les
xchg
daa
sub
and
nop
pause
jmp
cmp
data16
mov
adc
pop
daa
sub
mov
setge
add
ds
es
push
les
insb
jne
inc
jne
movswl
pushf
andw
es
cld
jae
add
es
add
mov
add
add
add
add
xor
lea
xchg
repz
add
fdivs
add
add
cs
mov
fwait
mov
lods
sbb
sbb
sar
es
fcoms
rorb
mov
mov
cmp
mov
adc
insb
lret
int3
add
add
bnd
fwait
or
push
mov
data16
add
es
incb
daa
pop
nop
pushf
push
push
ds
xacquire
ds
add
insb
mov
les
mov
data16
add
pushf
push
push
ds
xchg
repz
add
es
mov
pop
insb
sbb
add
add
pushf
push
push
nop
ss
xchg
cs
add
jne
fdivs
mov
mov
and
int3
add
add
dec
bnd
sub
mov
adc
sbbb
mov
es
insb
pop
or
movsb
inc
test
nop
ds
fdivs
mov
jne
outsb
les
mov
aam
enter
xchg
mov
cld
ds
sbbb
mov
or
lods
push
aam
cmp
int3
int3
int3
add
add
push
pushf
andw
cld
ss
bnd
pop
sub
sub
ljmp
outsb
insb
add
add
repnz
jmp
pop
subb
es
sub
mov
xchg
inc
add
add
add
out
mov
ds
jmp
mov
adc
mov
sub
sub
add
notb
cld
bnd
mov
mov
mov
pop
mov
mov
sub
sub
mov
add
push
xchg
inc
add
add
mov
ss
mov
mov
jne
insb
fcom
mov
mov
fcom
lods
sub
cs
cmp
adc
mov
insb
adc
mov
cmp
sbb
sbb
clc
in
pop
cs
mov
sbb
sbb
adc
add
decl
add
cmp
inc
xor
pushf
push
push
cs
mov
xrelease
repz
add
pop
push
or
outsb
cmp
lods
pop
push
nop
cld
cs
fadds
sub
xchg
aam
adc
adc
data16
sub
xchg
cmp
pushf
push
push
cld
ds
xrelease
cld
iret
add
mov
sbb
mov
add
cld
es
sub
sub
push
add
outsb
jmp
les
mov
daa
mov
int3
int3
int3
add
add
sub
add
dec
add
pushf
push
push
cld
ds
xacquire
cld
iret
add
les
daa
mov
sbb
scas
in
lcall
add
repz
repz
les
adc
pusha
pushf
push
push
nop
ss
nop
xchg
cld
iret
add
mov
xchg
mov
or
data16
push
repnz
pop
les
insb
pop
push
mov
sub
lcall
fwait
lods
cmp
cmp
mov
cs
jmp
jne
lods
mov
cmp
sub
mov
fwait
sbb
sbbb
lea
ss
es
call
mov
sbb
mov
mov
sub
scas
pop
repz
jmp
mov
sub
insb
es
lods
lcall
fwait
xorb
add
leave
and
scas
push
cld
repz
pop
add
mov
cmp
aam
mov
mov
data16
mov
pop
pushf
push
push
pause
ss
xchg
nop
iret
add
or
fwait
push
mov
outsb
mov
mov
and
nop
pushf
push
push
repnz
cld
xchg
cs
add
mov
data16
xorb
loop
ss
jmp
sub
insb
adc
fwait
mov
adc
xor
jmp
sbb
daa
mov
xchg
mov
es
add
push
mov
sbb
mov
bnd
sbb
fdivrs
outsb
cmp
mov
mov
sub
mov
jp
int3
int3
add
add
rep
pushf
andw
nop
nop
ss
jae,pt
sbb
mov
sub
mov
gs
jmp
aam
sbb
mov
add
daa
mov
mov
sbb
inc
jne
pushf
andw
ss
cld
popf
ss
cmp
les
mov
ss
mov
mov
or
data16
push
data16
add
mov
or
pop
scas
mov
pushf
andw
es
popf
ss
mov
insb
mov
sbb
adc
and
incb
cs
repz
cld
jae
xchg
adc
sub
pop
sbb
push
sub
test
lcall
add
ds
jae,pt
sbb
xchg
or
decb
add
imul
push
push
ds
xchg
cld
iret
add
pop
mov
lods
sub
lea
cld
repz
jmp
mov
outsb
mov
xorb
jne
lods
sbb
sub
and
incb
cs
es
jae,pt
aam
mov
sub
push
testl
repz
mov
mov
shlb
sbb
les
sub
daa
jmp
pushf
andw
ss
popf
jae,pt
push
sub
add
ljmp
leave
repnz
jmp
lods
mov
xchg
jne
ljmp
cmp
fwait
pop
mov
pushf
mov
bnd
daa
cmp
or
fadd
pop
pop
fadd
rolb
outsb
fwait
xorb
jge
cld
ss
jmp
cmp
mov
mov
mov
fwait
rclb
movb
and
cs
cmp
cmp
sbb
or
insb
xchg
add
insb
or
cmp
repz
mov
pop
mov
mov
aam
mov
les
aam
daa
fwait
mov
int
add
pushf
andw
es
cld
jae
mov
shlb
test
ror
pushf
andw
ds
nop
jae
sbb
daa
or
fwait
sbb
adc
add
add
add
pushf
andw
es
es
bnd
lods
sub
sub
adc
pop
call
nop
ss
sub
cmp
mov
adc
mov
mov
insb
sub
sub
xor
sub
sbb
andw
ss
popf
jae,pt
pop
xchg
pop
add
mov
pushf
push
push
ds
xrelease
cs
add
aam
les
fcom
xchg
cmp
es
sbb
aam
sub
mov
mov
xor
add
pushf
push
push
nop
cld
repnz
xchg
nop
iret
add
mov
mov
mov
popa
cld
cs
jmp
fwait
data16
mov
mov
xorb
sub
or
add
call
xchg
fdivrp
pushl
fadds
aam
shrb
push
mov
cmp
sbb
push
ds
lea
nop
xchg
ss
add
push
mov
mov
adc
bound
jmp
mov
sbb
pop
cmp
sub
shlb
sbb
and
notl
pushf
andw
cld
nop
cs
cld
jae
sbb
add
or
rorb
int3
int3
int3
add
add
push
pushf
push
push
cs
xchg
cs
add
insb
mov
les
pop
mov
pushf
andw
cld
repnz
popf
bnd
outsb
cmp
lods
jne
es
stos
add
pushf
andw
cld
es
nop
jae
pop
mov
daa
insb
lods
sbb
incl
add
add
mov
leave
repz
mov
sbb
pop
mov
sbb
sub
cmp
arpl
push
cld
ss
xrelease
repz
add
mov
mov
mov
mov
fcomps
add
add
xchg
cld
cs
push
sbb
sbb
mov
sbb
mov
pop
call
cld
es
push
fsubrs
data16
xchg
outsb
daa
push
fcomps
fmuls
mov
mov
mov
pushf
andw
repnz
es
mov
pop
xchg
fmuls
cmp
ss
mov
daa
sbb
pop
sbb
add
cmp
fcoms
cmp
cld
jmp
push
data16
shlb
mov
pushl
sbb
std
icebp
mov
call
pushf
push
push
repz
mov
nop
xchg
cld
iret
add
jne
sub
sbb
mov
bnd
push
xchg
cmp
aam
mov
sbb
sub
mov
repz
mov
pop
sub
lods
pop
aam
aam
les
mov
cli
xor
cs
mov
pushl
sbb
sub
shlb
sbb
push
pushf
push
push
repnz
lea
xrelease
repz
add
es
mov
xchg
sub
xlat
push
pushf
push
push
repnz
repnz
xchg
repz
add
aam
fcomps
mov
add
add
in
decl
pushf
andw
nop
es
es
mov
cmp
daa
outsb
sub
sub
xchg
or
andw
repz
cs
repz
mov
es
xchg
mov
cmp
sub
iret
push
pushf
push
push
repz
nop
xchg
repz
add
mov
sub
pop
aam
je
ss
pop
mov
cmp
aam
mov
sub
sbb
movsl
xlat
call
pushf
push
push
es
mov
xchg
repz
add
mov
sbb
adc
int3
int3
add
add
int3
int3
int3
add
add
rclb
pushf
push
push
es
xacquire
ds
add
pop
adc
cmp
pop
notl
pushf
push
push
cs
xchg
cld
iret
add
cmp
sbb
insb
pop
addr16
pushf
andw
ss
repz
aam
cmp
mov
mov
andb
aad
decl
bnd
es
mov
jne
mov
xchg
pop
mov
outsb
add
mov
jp
jg
cld
ds
jne
es
fadds
push
adcb
mov
out
pop
pushf
andw
repnz
repz
add
mov
mov
add
mov
andl
repz
es
les
mov
cmp
mov
push
ss
cmp
adc
shlb
sbb
les
shlb
pop
mov
push
dec
mov
pushf
andw
cld
cld
cs
bnd
cmp
les
orb
add
push
pushf
andw
cs
ss
pop
cmp
mov
nop
sahf
pusha
pushf
andw
cs
popf
repz
lods
xchg
mov
mov
mov
lods
fwait
sub
push
pushf
andw
nop
nop
ss
nop
jae
aam
sub
adc
add
shr
pushf
andw
es
jae,pt
outsb
add
mov
outsb
sbb
xchg
nop
pushf
andw
ds
nop
jae
sbbb
outsb
aam
mov
pusha
es
cs
cmp
lods
add
sbb
cmp
pop
mov
mov
or
push
push
cld
ds
mov
xchg
ds
add
pop
mov
pop
jne
mov
orb
and
incb
cld
cs
ss
add
sub
or
mov
or
bnd
adc
push
lods
mov
xorb
xchg
sbb
push
bnd
mov
cmp
sub
mov
fsubrs
cmp
bnd
data16
sub
sub
or
sub
mov
or
sub
pushf
andw
es
ds
nop
jae
lods
fwait
sbb
mov
insb
mov
andw
ss
es
repz
fwait
mov
mov
sub
fcoms
push
pop
pop
pushf
push
push
cld
es
lea
xchg
repz
add
cmp
mov
adc
adc
lea
cld
xchg
ds
add
xchg
pushl
call
out
lcall
add
ss
ss
les
sub
aad
add
pushf
andw
ss
nop
jae
cmp
mov
call
pushf
push
push
ds
cld
xchg
repnz
add
mov
fwait
sbb
insb
mov
and
add
nop
nop
bnd
mov
les
jne
xorb
sub
outsb
mov
sub
lret
je
pushf
andw
repnz
nop
jae
jne
mov
mov
mov
cld
mov
cld
nop
cld
jmp
adc
fadds
add
cmp
sub
mov
add
add
ss
lods
sbb
mov
mov
pop
aam
es
cmp
adc
cmp
inc
pushf
andw
repnz
cld
jae
mov
es
data16
mov
lret
adc
lea
xrelease
cs
add
mov
cmp
mov
sub
call
pushf
andw
cld
es
popf
cld
jae
lods
aam
mov
sub
cmp
jbe
int3
int3
add
add
inc
pushf
andw
repz
repz
cmp
xorb
jl
push
ds
xchg
sbb
insb
sbb
aam
jne
data16
fwait
sbb
test
cs
pop
xchg
es
xchg
mov
mov
mov
mov
daa
cmp
in
rcll
cwtl
in
push
pop
cld
nop
jmp
sbb
mov
mov
sbb
outsb
sub
xor
pusha
es
jmp
add
jne
aam
mov
mov
push
mov
mov
push
mov
add
pop
mov
push
pushf
andw
ds
bnd
pop
or
sbb
sbb
sahf
sub
pushf
andw
repnz
cld
jae
mov
shrb
mov
mov
pushf
push
push
repz
lea
xchg
ss
add
mov
andb
mov
cmp
lea
repz
es
outsb
xchg
outsb
sub
aam
sub
stos
int3
int3
int3
add
add
int3
int3
add
add
repz
cld
cld
jmp
andb
mov
adc
decb
mov
jmp
lret
pushl
ds
add
mov
sub
mov
pop
mov
sbbb
int3
int3
add
add
mov
pushf
push
push
ds
xchg
ss
add
pop
fcomps
push
es
bswap
int3
int3
add
add
add
add
mov
ds
lods
outsb
aam
les
mov
data16
xorb
orb
add
add
repnz
popf
ss
sbb
mov
aam
push
xchg
cld
nop
ss
popw
adc
cmp
fdivrs
sbb
pop
call
pushf
push
push
es
xchg
repz
add
mov
lods
mov
call
pushf
push
push
nop
cs
xchg
ss
add
pop
lods
pop
sub
mov
push
es
mov
pushf
andw
cs
ds
cld
jae
mov
insb
fwait
les
sbbb
inc
pushf
push
push
cld
es
xacquire
es
add
mov
mov
mov
fwait
jne
nop
fs
mov
pushf
andw
ds
repz
lcall
add
add
inc
add
pushf
andw
ds
popf
bnd
pop
sbb
xchg
mov
cmp
add
repnz
mov
sub
xchg
sub
mov
sbb
cmp
and
cs
mov
sbb
insb
sub
fdivs
mov
pushf
andw
es
popf
repz
outsb
mov
cmp
fdivrs
cmp
jno
add
add
les
push
push
cs
xacquire
cld
iret
add
sbb
ljmp
adc
mov
pushf
andw
cs
nop
jae
cmp
aam
pop
sbb
jne
in
xorl
push
ds
xchg
repnz
add
cmp
cmp
outsl
pushf
push
push
nop
cld
cld
lea
xacquire
ss
add
mov
mov
mov
and
int3
int3
add
add
cwtl
mov
andl
repnz
nop
jae
sbb
sub
mov
jns
and
andw
nop
es
popf
jae,pt
sub
pop
mov
fwait
mov
pop
mov
nop
cmp
dec
cmp
andw
repnz
repz
mov
sub
fcoms
data16
out
ds
adc
es
shlb
mov
mov
sub
icebp
fcomps
mov
pushf
andw
ss
cld
jae
sub
sub
lods
lahf
pop
pushf
andw
es
popf
es
add
sbb
pop
mov
je
int3
int3
int3
add
add
add
add
jne
pushf
andw
ds
cs
cld
jae
mov
sbb
inc
add
add
call
repz
insb
mov
adc
shrb
fwait
adc
add
jne
mov
sbb
add
into
pop
pushf
push
push
es
xchg
cld
iret
add
sub
mov
adc
daa
xchg
dec
inc
pushf
andw
cld
ss
repz
mov
xchg
pop
sub
fdivs
insb
pushf
andw
ds
repnz
repz
add
mov
mov
add
add
repnz
es
add
insb
adc
sbb
mov
mov
insb
add
rcrb
or
es
outsb
lods
data16
pop
outsb
mov
data16
mov
mov
mov
sbb
pushf
andw
nop
cs
es
lods
cmp
sbb
mov
pushf
push
push
ss
lea
nop
xchg
ds
add
cmp
cmp
jne
je
pushf
andw
nop
ds
jae,pt
mov
fwait
sbb
pushf
push
push
cld
cs
xacquire
cs
add
sub
sbb
mov
mov
add
add
add
pusha
pushf
andw
nop
es
cld
jae
pop
aam
daa
mov
subb
add
pop
pop
nop
nop
ds
adc
pop
sub
add
add
mov
mov
add
xorb
mov
pushf
andw
repnz
ss
mov
or
fdivrs
mov
lods
decb
andl
repnz
cld
jae
or
es
mov
mov
cmp
andl
nop
popf
bnd
outsb
es
insb
pushw
sbb
sbbb
ds
sbb
mov
mov
mov
cmp
sbb
adc
cmp
fwait
push
sub
movsb
mov
and
incb
repz
popf
ss
mov
ljmp
call
pushf
andw
pause
cs
ss
or
mov
cmp
pop
mov
jge
push
mov
cs
bnd
pop
mov
sub
sbb
sbbb
jne
insb
sub
add
add
int3
int3
int3
add
add
push
mov
fcompl
mov
add
mov
adc
mov
pushf
inc
imul
dec
hlt
mov
cmpb
popf
dec
jno
dec
mov
cmp
add
add
fcom
imul
add
mov
or
addr16
stc
dec
add
add
dec
add
inc
mov
add
add
sub
add
xor
add
add
data16
sub
adc
add
add
add
add
or
add
add
mov
add
add
mov
scas
sub
test
add
cmpsb
mov
loop
sub
mov
add
ja
in
push
xchg
mov
jbe
lods
xor
pop
dec
aaa
es
and
add
ds
adc
push
sbb
add
add
ljmp
rolb
add
add
nop
or
add
add
add
jbe
add
add
add
add
sub
pop
pusha
ds
mov
push
sub
push
jg
add
add
xchg
in
subl
mov
or
inc
jge
xorl
aas
adc
bnd
rclb
sti
loop
xchg
sub
inc
add
add
popa
jmp
adc
or
push
cmpsb
outsl
ret
sbb
imulb
sbb
inc
mov
je
std
mov
or
add
pushf
int3
add
add
mov
sub
les
add
fwait
mov
jle
xchg
push
push
pop
mov
mov
stos
addr16
sub
mov
cs
popf
fldenv
mov
mov
pop
aaa
sahf
jnp
add
add
lds
cmp
dec
add
add
fs
stos
mov
add
add
jnp
add
add
dec
fsts
jne
xchg
arpl
lret
dec
inc
imul
shll
ljmp
in
xchg
leave
inc
add
add
nop
insl
iret
xchg
popa
push
arpl
add
fcomps
xlat
popf
addb
add
mov
daa
add
adc
or
and
ficomps
mov
or
add
shll
idivl
add
add
int3
add
add
mov
ljmp
jb
inc
add
add
mov
dec
mov
dec
add
add
in
cmp
pop
and
add
add
lock
sar
scas
xlat
arpl
fcmovu
mov
lahf
fucomp
sub
in
pusha
rolb
add
add
xchg
dec
add
add
inc
sarb
fwait
mov
jb
add
add
cmp
pop
mov
stos
out
data16
test
add
cmp
pop
lcall
mov
cld
out
adc
add
add
jo
mov
mov
add
sbb
dec
add
add
sub
mov
add
add
xchg
in
add
add
add
xor
dec
add
add
add
add
sbbl
add
test
add
gs
es
mov
fldenv
mov
add
dec
add
add
add
pop
mov
pop
loope
dec
add
add
pop
dec
pop
mov
test
sub
xchg
pop
push
in
sub
mov
insb
jb
shlb
and
mov
add
dec
ret
out
pop
sahf
roll
add
add
movsl
mov
add
mov
or
add
iret
or
jl
ret
xchg
inc
add
add
loopne
fwait
fs
repnz
jnp
fdivr
mov
inc
adc
fwait
mov
aam
test
cmp
outsl
cltd
jns
lret
neg
daa
sub
jle
lock
sti
mov
add
add
lahf
xchg
cmp
inc
repz
mov
or
fcmovnb
ja
jae
xlat
jae
dec
xorl
jbe
int
movb
xchg
mov
mov
scas
adc
movsb
std
xchg
daa
and
call
inc
add
add
inc
or
add
push
idiv
jae
jnp
sbb
jae
icebp
pop
mov
ret
das
jecxz
sub
lods
mov
sbb
pop
jns
mov
add
jbe
and
mov
xchg
rcll
dec
add
add
fcompl
jg
and
sub
add
mov
adc
cmp
icebp
int
adc
add
add
gs
push
lret
sub
sbb
mov
mov
jb
mov
inc
mov
cltd
mov
or
add
mov
out
aas
xor
add
add
mov
popa
add
add
mov
daa
fisubrl
insl
mov
scas
test
adc
cmp
mov
and
scas
mov
je
add
add
movsl
jns
fidivl
sbb
nop
dec
push
cmpsb
mov
into
loopne
addb
add
jnp
dec
mul
hlt
out
addb
add
xchg
add
stc
sub
add
add
dec
sahf
jnp
push
sub
int3
add
add
int
pusha
outsl
insl
rcr
and
imul
mov
xchg
or
dec
add
push
cld
mov
out
pop
xchg
out
sahf
mov
mov
add
jnp
jbe
sbb
pushf
push
test
add
daa
inc
lea
ret
push
sbb
es
mov
push
sbb
add
add
pop
mov
push
sbb
adc
add
add
lock
jmp
cmp
aaa
ja
push
inc
jge
mov
aas
adc
dec
or
inc
ja
pop
lods
and
daa
sti
mov
lods
loopne
call
fsts
dec
test
pop
leave
lahf
add
mov
pushf
jae
lea
mov
popf
sbb
add
mov
idivb
sub
fdiv
mov
jnp
jo
push
rorb
add
mov
dec
sti
adcl
lcall
cmpsb
xor
add
push
push
je
das
imul
psubusw
popf
idivb
hlt
inc
jnp
clc
mov
or
add
nop
pop
std
xorl
lahf
mov
ja
loop
data16
lods
mov
mov
xchg
xor
in
sbb
or
add
add
enter
pop
pop
jne
sbb
jbe
sbb
pop
test
add
add
sbb
inc
cmp
cmp
jbe
dec
test
cli
inc
mov
pushf
nop
cmp
add
and
jb
push
jge
xor
in
inc
ljmp
lods
jb
sub
sub
stc
jb
ds
mov
add
add
cs
gs
addb
add
es
add
add
sbb
jbe
add
add
dec
repnz
push
pop
shrl
aad
xor
add
add
loope
fbld
mov
pop
out
mov
sbb
pop
adc
mov
shll
xchg
in
hlt
push
insl
out
int3
add
add
fldenv
dec
mov
or
add
xchg
mov
int
fdivrs
mov
add
mov
cmc
cli
lds
add
pop
nop
or
xchg
nop
dec
test
and
add
add
lock
xor
cmp
loopne
adc
sbb
pop
push
test
scas
jl
adc
inc
mov
add
jmp
sbb
dec
jmp
mov
mov
hlt
gs
cli
fistl
adc
imul
fldcw
in
loop
jecxz
mov
jmp
push
dec
add
add
out
mov
jge
push
lods
aas
push
sbb
pop
add
into
outsb
in
pop
jmp
add
stos
in
mov
gs
loope
pop
mov
add
add
xlat
outsb
and
and
xor
movsb
inc
add
add
adc
xchg
pop
sbb
add
add
xchg
lcall
mov
scas
jnp
dec
add
add
sub
jne
loop
loope
inc
dec
repnz
mov
in
int3
add
add
add
adc
cli
inc
jg
dec
add
add
add
add
sbb
sub
pop
lret
hlt
cltd
mov
cmp
inc
iret
mov
stos
and
xor
and
outsl
jno
inc
stc
pop
mov
add
mov
fdivr
inc
and
mov
add
dec
add
add
add
inc
xchg
loop
dec
les
add
insl
std
jle
out
jge
js
sub
add
add
lret
mov
xchg
out
cmc
pop
cs
pop
rcll
ret
ret
popa
dec
mov
insl
fdivr
mov
cmp
jns
cmp
or
add
jmp
inc
cwtl
lods
ja
fs
inc
orl
outsl
dec
cltd
push
lods
sbb
push
inc
cwtl
popl
add
int
notb
enter
mov
pushf
xchg
les
add
pop
pop
sti
push
loopne
push
addb
add
fisubl
xor
mov
adc
push
cmpsl
sahf
and
add
add
ret
inc
inc
mulb
push
sub
cmp
addl
add
xor
add
inc
adc
orl
inc
pop
fistl
and
jnp
addr16
ret
push
mov
mov
sbb
cmp
and
push
xchg
mov
add
aam
push
data16
add
add
sti
fnstsw
ret
pop
das
out
decl
in
cli
in
aam
xchg
inc
ficomps
mov
lahf
lock
mov
xchg
push
push
testl
jns
jns
add
test
and
and
fidivrl
add
ja
pop
mov
add
ja
or
roll
mov
add
add
mov
cld
popl
mov
das
adc
addb
add
add
pushf
cmp
test
jmp
xor
add
add
fs
mov
nop
mov
popa
sub
int3
add
add
lret
aam
fcomps
pop
insl
loopne
les
add
leave
dec
inc
paddsb
mov
xor
mov
cmp
scas
dec
adc
or
add
repz
dec
fdivrl
cmp
outsb
ljmp
add
lea
imul
inc
mov
add
je
mov
dec
add
add
dec
jbe
jae
mov
cld
bound
mov
and
fdecstp
push
jecxz
mov
add
add
pop
sbb
shrl
in
cmp
push
lods
fdivr
dec
in
cmp
add
leave
fucom
xchg
or
or
push
xor
rcl
mov
inc
push
mov
mov
xor
xchg
pop
cmp
jl
push
dec
xchg
mov
sti
pop
lret
adc
into
push
pop
pop
adc
leave
adc
xor
lahf
pop
loop
cmp
out
xor
gs
push
pop
xlat
jl
push
pusha
in
pop
outsl
aaa
fistps
mov
sbb
cmpsl
sar
rol
add
add
ss
inc
repnz
pop
push
roll
rolb
add
lods
mov
scas
je
jae
scas
lcall
and
sub
shl
dec
mov
mov
dec
adc
rclb
mov
pop
jns
xchg
pop
adc
outsb
pop
popa
push
sub
call
mov
inc
add
add
xchg
pop
sub
mov
cmc
lcall
add
add
mov
sbb
out
lret
icebp
outsl
imul
lret
enter
les
add
repz
sbb
jne
sub
cmp
push
mov
std
push
jno
inc
je
das
sub
cmpsl
adc
sbb
daa
mov
data16
xor
lock
mov
addr16
shrl
inc
add
add
dec
add
add
sub
push
ja
mov
jae
pusha
popf
mov
add
add
lcall
add
sti
mov
or
add
mov
mov
icebp
fsubs
test
es
mov
in
stc
movsb
aas
xor
mov
jne
jmp
xor
mov
lods
fs
mov
and
fidivrl
mov
and
inc
pop
dec
jnp
jno
ret
push
xchg
leave
filds
mov
aad
add
add
cmc
mov
sbb
add
add
movsb
shrl
xchg
xchg
movsl
pop
divb
pop
add
pop
mov
clc
rorl
adc
pop
jnp
dec
lcall
add
test
sarl
lret
dec
add
mov
cmpsl
in
jmp
adcl
add
add
xor
in
dec
mov
gs
jecxz
mov
add
lret
mov
add
push
xchg
sub
movsb
mov
jo
rcrl
xchg
sbb
outsl
xchg
hlt
xor
sub
in
aaa
add
xchg
mov
xor
add
add
xlat
roll
add
daa
call
negl
sbb
push
incb
ret
pop
push
hlt
stos
cli
lods
cmp
mov
add
xlat
movsb
ljmp
adc
ds
mov
add
mov
add
call
xchg
mov
loop
cs
pop
into
add
int3
add
add
xchg
jmp
loop
das
xor
test
mov
in
data16
add
push
fadd
mov
sub
add
add
dec
cmp
in
xchg
or
add
in
pop
sub
insb
push
je
insl
lods
adc
push
fwait
push
incb
add
adc
inc
add
add
mov
inc
add
add
push
scas
int
popf
sbb
add
add
cltd
sub
pop
jl
lods
xor
add
add
es
push
jp
scas
xor
jl
out
pusha
xchg
push
in
push
cmp
cld
leave
mov
pop
inc
xchg
sbb
popa
jae
inc
sti
call
dec
pop
jns
jle
ret
dec
add
add
int3
add
add
or
add
scas
sub
jmp
fidivrs
decl
shrl
add
lods
clc
in
sbb
mov
mov
fadd
lds
imul
pop
cmp
ret
stos
and
and
fmul
inc
icebp
mov
add
inc
std
mov
cs
push
adc
into
mov
test
insl
fs
xor
adc
pop
adc
jae
cmp
jmp
add
add
mov
xlat
xor
mov
imul
jnp
push
xchg
loop
decl
test
iret
out
into
pop
aad
push
sbb
inc
add
add
cmpsl
out
mov
add
add
xchg
mov
pop
jge
mov
jns
xchg
xchg
pop
scas
test
sbb
loop
adc
add
pop
adc
insb
mov
stos
and
test
push
push
push
subb
dec
xor
sbb
add
add
rcrb
insb
mov
sbb
add
add
xor
xchg
and
cmp
imul
lahf
andl
repz
pop
les
add
and
pop
push
inc
repnz
cmc
sub
add
add
add
add
fmuls
test
out
add
add
mov
scas
jae
pop
lods
pop
xchg
fdivr
leave
sarl
add
loope
cmp
gs
cmp
into
es
mov
testl
aam
mov
add
cwtl
fwait
in
push
mov
cld
fcmovbe
xor
std
push
mov
sbb
outsb
mov
add
mov
add
in
pop
xor
xchg
mov
outsb
push
leave
imul
xchg
cwtl
inc
add
add
add
add
and
push
cwtl
sbb
adc
gs
stos
jl
add
add
add
add
add
mov
sahf
mov
add
and
jbe
ucomiss
mov
add
pushf
jns
enter
loopne
rolb
add
dec
jns
iret
jns
xchg
push
push
nop
pop
mov
and
or
pop
jg,pn
mov
push
addb
add
loope
inc
add
add
dec
sahf
mov
add
add
adc
rolb
add
jp
mov
iret
push
fwait
mov
add
arpl
mov
sub
adc
jb
dec
arpl
push
sbb
clc
call
das
pop
rcl
mov
jmp
mov
add
add
cwtl
push
stos
xchg
add
add
add
add
lcall
mov
jo
jl
imul
push
and
ds
pushw
push
dec
mov
add
cmpsl
mov
aam
push
leave
adc
rcrb
sbb
push
sbb
fisttpl
mov
add
dec
mov
add
pop
int3
add
add
add
pop
int
mov
jnp
add
cmp
cltd
xor
and
mov
add
mov
mov
add
add
push
dec
mov
cli
setae
sub
jp
sbbl
popa
out
ja
dec
popl
cmp
cwtl
mov
push
adc
xchg
xchg
cmp
push
add
add
sets
mov
push
fadds
in
les
add
sub
cmp
test
add
ss
pop
push
jecxz
add
add
rcrl
push
mov
aaa
sbb
pop
jp
clc
shr
das
test
and
std
jp
add
add
call
lds
lods
mov
cmp
xlat
lcall
dec
sbb
mov
fsub
in
dec
jle
xchg
xor
and
sbb
adc
jp
xlat
jmp
push
inc
dec
push
xlat
pop
xorl
cmpsl
out
popa
ret
shlb
mov
cmp
cli
in
fmuls
mov
lds
xchg
int3
add
add
mov
rcrl
dec
ret
push
or
daa
inc
xor
mov
xor
movsl
mov
add
lock
push
adc
fsub
xor
push
push
push
fcmovbe
scas
out
out
mov
stos
fsubs
call
js
mov
add
xchg
lds
data16
inc
lock
add
push
faddp
jae
dec
fs
push
inc
xor
cmp
or
add
iret
adc
sbbb
sti
inc
push
jl
pop
jns
push
mov
add
fucomp
jl
fstpl
mov
movsl
test
adc
push
jmp
mov
add
add
addr16
sub
call
add
add
sbb
arpl
stos
addb
add
scas
rcrb
lahf
jo
mov
jge
ret
xor
lret
add
add
cmp
mov
add
xor
stos
inc
lahf
popa
lcall
shll
xchg
pop
in
aas
jp
dec
or
sbb
outsl
cs
xchg
das
and
into
inc
add
add
sub
xor
or
cmp
pushf
fsubrl
xchg
clc
loope
popf
or
jnp
mov
add
add
das
mov
add
mov
or
mov
cwtl
and
xlat
mov
cmp
or
push
jge
dec
sub
add
adc
add
ret
xchg
repz
adc
sub
sbb
xchg
addb
add
sbbl
add
test
add
movsb
add
add
daa
bts
cmp
pop
inc
loopw
stos
xor
hlt
gs
pop
dec
add
add
rclb
addl
add
add
bound
add
add
add
xor
sbb
call
mov
and
mov
push
or
enter
push
mov
sbb
add
add
adc
sbb
jmp
push
pushf
sbb
iret
pop
inc
add
add
mov
add
add
scas
pop
mov
add
stos
and
add
add
bound
ret
add
sub
cmp
mov
fwait
pop
push
jnp
insl
dec
pop
jl
test
push
jg
mov
sbb
pop
sbb
adcb
add
add
test
pop
sbb
stc
pop
cmpsb
cwtl
cmp
add
inc
imulb
cmp
in
divb
std
mov
pusha
jno
add
add
mov
xchg
lods
push
aam
scas
hlt
fbstp
xchg
mov
add
mov
addb
add
push
pop
fnsave
pop
scas
mov
pop
ja
add
add
arpl
xchg
faddl
and
xor
xor
fbld
jno
sbb
lret
xor
jge
mov
mov
and
add
add
push
sarl
mov
mov
roll
dec
and
dec
je
sub
mov
add
add
ljmp
notl
popa
fisubs
add
add
leave
lret
enter
xchg
jmp
add
mov
test
jb
out
icebp
lods
adc
cmc
fstpt
insb
pop
test
add
push
enter
dec
xchg
sub
push
jb
inc
add
add
aam
stos
inc
add
add
sub
add
add
fadds
mov
and
test
add
ret
xchg
cmp
insb
int3
add
add
add
add
insb
notl
pop
xchg
fdiv
mov
adc
shlb
jnp
dec
call
pop
icebp
cmpsl
push
scas
sbb
mov
mov
dec
jmp
dec
add
add
cmp
or
add
add
stos
mov
divl
int
mov
push
add
add
dec
add
add
or
add
sub
in
repnz
mov
pop
inc
add
add
in
stc
xor
fs
movsl
insb
mov
add
pusha
mov
cmp
add
cltd
negl
xchg
mov
push
cs
ret
adc
in
jge
add
add
stos
mov
add
jl
jns
or
pusha
sbb
rclb
jo
sub
xchg
movsb
in
push
adc
nop
fldl
imul
mov
adcl
aaa
pop
stos
loopne
pop
or
add
cmc
mov
cmp
mov
ret
sub
and
mov
or
mov
push
idivl
in
mov
jns
add
add
rorb
add
add
inc
add
add
stc
fdivrs
cmp
adc
aam
fcmovnb
fwait
pop
aas
insb
pop
or
jno
ja
jp
pop
or
pop
ficomps
ret
imul
jo
adc
mov
fldpi
xor
out
xchg
gs
pusha
setb
fistpl
jp,pn
gs
add
add
jp
xchg
decl
es
mov
jo
jno
mov
daa
and
iret
adc
sbb
mov
jecxz
ja
mov
ljmp
add
add
orl
add
mov
mov
push
sar
inc
and
cmp
xor
add
add
jg
imul
xlat
enter
pop
inc
add
add
iret
scas
dec
adc
mov
mov
jo
add
add
jae
cli
sti
shll
insl
stos
cmc
dec
push
add
add
pop
inc
add
add
repnz
loope
in
lret
mov
add
xor
add
add
jnp
add
add
subb
fnsave
dec
add
add
mov
pop
pop
adc
add
add
add
inc
sub
or
add
add
add
lahf
repnz
push
test
jecxz
lahf
mov
jns
cmp
mov
xor
push
push
push
xchg
cli
cmp
push
pop
sahf
inc
repz
push
and
jge
dec
jno
test
add
adcl
daa
xchg
add
add
or
andb
ret
clc
rorl
add
sbb
scas
xlat
iret
cmpsl
mov
add
cli
loop
sbb
cli
lahf
mov
add
test
xor
insl
adc
jbe
xchg
mov
add
cmpsl
cmpsb
push
mov
and
lods
mov
ja
jo
pop
lods
jb
xchg
mov
add
add
ret
add
in
popf
repz
pop
lret
push
int
add
add
and
inc
imul
add
add
roll
and
pusha
enter
sub
add
adc
out
test
add
mov
js
add
add
sbb
ss
pushf
arpl
scas
or
call
loope,pn
adc
repz
divb
pusha
and
sub
insl
jl
int
lret
or
add
test
mov
push
dec
je,pn
add
add
sbb
add
shrl
jle
fsubrs
xchg
push
pusha
mov
jg
pop
adc
jno
sahf
xor
repz
fistpl
repz
cmp
cmc
aad
push
ret
popa
adc
ret
rclb
or
and
mov
ret
lea
add
outsb
popf
pop
xchg
pop
pop
push
dec
dec
sub
add
iret
popf
jno
in
add
add
out
test
scas
push
jge
mov
pop
push
adc
add
push
sbb
add
add
xchg
repnz
jno
ret
shll
in
mov
aaa
mov
add
int3
add
add
xlat
xchg
mov
das
push
mov
add
jl
ror
add
add
add
add
cs
adc
dec
cwtl
lds
xchg
int
xor
dec
mov
imul
clc
mov
cmp
add
cli
out
scas
sahf
pop
jns
mov
mov
ret
loopne
sub
add
test
add
add
rolb
das
and
in
jbe
mov
arpl
mov
jle
mov
loop
jge
xor
push
jne
aad
xlat
gs
pushf
xor
out
cmp
add
stos
jg
es
jno
and
add
inc
push
and
addb
add
mov
ljmp
jae
xchg
and
add
add
into
mov
aad
shll
pop
sbb
hlt
xor
mov
ret
add
add
cld
js
mov
add
add
mov
add
sbb
jnp
sbb
add
in
in
lea
loop
jp
add
add
sbb
sbb
aam
aad
pop
inc
xchg
pop
sub
jle
fnstcw
mov
jne
clc
sub
in
ds
cmp
es
sbb
xor
or
add
imul
add
pop
test
add
add
mulb
call
add
add
shrl
addl
add
add
add
add
repz
sbb
out
jge
inc
aas
fsubrs
dec
cwtl
nop
mov
frstpm(287
add
add
inc
shrb
add
sbb
push
and
mov
orl
mov
fstps
scas
xor
add
add
out
nopl
add
add
add
add
add
add
mov
xchg
mov
aaa
movsb
or
inc
add
add
push
movsl
push
addb
add
add
add
call
aam
add
add
out
das
push
pushf
or
add
add
xor
imul
sbb
add
add
jge
cmp
ret
jae
dec
les
add
add
add
std
hlt
xor
add
add
add
jnp
or
imul
mov
mov
sub
add
mov
add
adc
cmpsl
or
jp
add
add
or
xchg
fists
add
add
mov
imul
add
add
xchg
xor
sbb
ss
in
fdivrl
add
pop
iret
inc
inc
xchg
jo
pop
sbb
xchg
rcll
cmp
fstpt
add
add
pushf
add
cmpsl
mov
out
dec
jnp
addb
add
mov
add
jp
or
add
inc
mov
arpl
mov
cmp
sbb
or
mov
addr16
rorl
insb
pop
jnp
mov
mov
lret
test
mov
inc
jle
ljmp
arpl
pop
ret
dec
fisttpll
jnp
loope
out
inc
pusha
imul
lock
sub
mov
add
cltd
ss
imulb
fs
rolb
add
lds
jo
inc
sbb
add
add
inc
sbb
push
push
pushf
adc
add
dec
lret
pusha
dec
add
add
sbb
cmp
sub
sbb
xor
cltd
dec
aam
xor
clc
add
divl
je
mov
add
add
mov
add
add
insb
inc
push
jecxz
mov
jo
lock
add
add
xchg
inc
jb
pop
jae
out
mov
ljmp
sub
xchg
mov
call
sbb
add
sbb
pusha
mov
add
xor
add
push
and
in
test
add
rolb
add
and
fldl
fstps
popa
insb
push
cmp
mov
jno
fcomps
popa
jno
and
sub
je
pusha
sbb
mov
icebp
std
call
cltd
repz
dec
or
xor
shr
enter
add
add
in
ss
pop
pop
stos
cmp
loope
fxch
scas
mov
add
add
push
js
xchg
aas
daa
shlb
dec
xor
sub
add
add
addb
add
scas
in
fcoml
sub
cltd
insl
cltd
jns
add
add
icebp
dec
add
add
jmp
arpl
push
dec
jb
mov
add
sub
or
addr16
push
hlt
push
mov
add
add
xchg
negl
rolb
add
add
fisttpll
xchg
test
add
jle
scas
pop
out
push
pop
pop
push
push
fiaddl
add
add
lods
jecxz
adc
add
add
rolb
add
pushf
test
push
xchg
adc
mov
mov
add
imul
inc
imul
add
mov
out
pop
mov
add
cs
test
inc
mov
aad
fnstenv
add
pop
jb
add
add
lock
dec
jo
add
cld
push
or
lahf
push
out
loopne
aad
add
add
movsb
pop
sub
add
add
xor
faddl
jecxz
into
pop
fdivp
xchg
ret
ret
fcmovnu
mov
cmp
inc
and
int
movsb
bound
pop
in
dec
in
mov
clc
pop
inc
mov
rorl
add
add
out
cmp
addb
add
test
add
jle
xchg
aad
add
add
ficomps
mov
flds
add
add
xchg
cmpb
add
add
cmpsl
pop
icebp
or
and
mov
add
push
dec
add
add
mov
stos
mov
outsb
push
fcmovb
push
mov
xchg
dec
pop
inc
push
aaa
inc
push
clc
push
sahf
outsb
mov
sub
cmp
sbb
xor
rol
add
add
loopne
xor
sbb
jns
ret
and
bound
dec
add
add
add
add
push
cmp
sbb
add
ljmp
rep
idivb
loopne
push
mov
xchg
adc
push
or
mull
cmpsl
cmp
arpl
je
sbb
add
add
imul
rcrb
movsl
stc
add
add
call
xchg
fisubrs
add
add
add
test
addb
add
add
cmp
push
push
popa
xor
push
add
mov
add
jo
xchg
cmp
shll
lods
fs
ss
mov
mov
sti
dec
xor
push
add
add
cmp
xor
std
mov
sbb
gs
xchg
inc
xchg
add
adc
or
aad
xchg
test
add
xor
iret
rolb
add
add
add
gs
test
jmp
rolb
add
pop
repz
jle
aad
inc
jnp
xchg
cltd
cld
shll
mov
fildl
call
xchg
or
add
pop
push
mov
cmpsl
add
add
add
imul
pop
jge
decl
add
add
in
mov
add
lods
sbb
xchg
dec
add
add
jno
push
popf
jl
push
idivl
pop
cmc
mov
bound
out
cwtl
mov
ficomps
add
add
jno
add
hlt
adc
dec
add
add
clc
push
mov
mov
add
sti
aam
jmp
xor
add
jge
test
add
mov
or
inc
sub
ljmp
fsubrl
add
lcall
inc
add
add
call
gs
xchg
add
add
cmc
int
xor
mov
xchg
inc
add
add
notl
or
add
mov
js
push
sbb
int
sub
add
add
iret
mov
imul
sarl
xchg
stos
mov
push
mov
insl
rcll
add
add
pop
jge
mov
scas
and
repnz
fidivs
cwtl
es
cltd
pop
jno
movb
lret
add
add
push
mov
add
jae
sbb
dec
dec
aaa
jb
inc
cmp
xchg
dec
add
add
addr16
cmp
imul
cmovns
fstpt
ds
shl
lret
insl
lock
fisttps
add
add
loop
inc
ljmp
dec
add
add
xchg
out
xchg
es
sbb
add
fcompl
and
ret
cmp
xor
sbb
push
xchg
sbb
fwait
data16
in
mov
add
stos
push
aaa
or
bnd
adc
mov
sub
insb
adc
mov
scas
push
adc
imul
add
movb
inc
sub
sub
jmp
inc
add
add
mov
mov
mov
in
std
dec
or
dec
pop
cmc
push
out
push
xchg
test
sbb
pushf
pop
imul
mov
rolb
add
dec
xchg
xchg
jl
test
insl
movsl
dec
das
sti
gs
push
add
xchg
jno
aam
xchg
xor
roll
inc
inc
add
add
jg
push
insb
jbe
or
add
add
and
subb
jns
jbe
sbb
add
add
ret
push
push
cmp
inc
enter
push
adc
jp
push
cwtl
orl
add
add
sti
push
adc
iret
aam
das
shll
inc
jbe,pt
es
push
fwait
mov
fdivrp
mov
and
aam
inc
rolb
add
rcrl
mov
inc
int
in
cmpb
vmovdqa
add
add
mov
add
cmp
mov
mov
cmp
ret
jae
sbb
mov
add
lcall
add
add
aam
cmc
out
pop
mov
pop
dec
jmp
xchg
push
fsts
mov
add
shrb
loope
test
add
add
add
add
add
add
and
xor
lods
insb
lahf
adc
add
add
add
pop
arpl
xchg
add
fwait
clc
aam
fdiv
imul
mov
push
inc
add
add
inc
add
add
ret
push
mov
ljmp
jnp
cmp
cmp
sbb
dec
add
add
sbb
push
clc
ja
mov
jp
test
push
inc
cmp
add
push
loopne
xchg
push
push
cltd
movsb
push
jo
or
sbb
inc
pop
fidivl
mov
add
sub
imul
add
sub
add
addr16
sti
inc
movsl
out
pop
loop
lahf
adcl
mov
add
sbb
mov
sbb
add
sti
scas
stos
sarl
add
hlt
clc
sti
in
pop
imull
jae
add
add
pop
repz
pop
movsb
call
xchg
mov
loopne
cmp
dec
rolb
add
iret
cld
cwtl
mov
add
arpl
mov
mov
out
sub
out
mov
es
jnp
xchg
xor
insb
mov
add
xchg
add
mov
add
xchg
addb
add
clc
lds
mov
sub
xlat
cmp
cmp
lret
negb
loopne
push
fidivl
imul
push
jne
faddl
test
cmp
lds
pusha
xor
test
add
arpl
outsb
cli
scas
outsb
push
popf
sti
mov
inc
lods
or
add
lock
and
xchg
fldcw
and
fwait
insb
and
dec
cli
test
mov
xor
fsubl
ss
jp
xchg
jecxz
cwtl
dec
jne
pusha
int
add
add
add
adc
add
popa
imul
cli
call
add
adc
add
add
lcall
jl
mov
add
add
leave
shll
inc
add
add
lea
dec
mov
xchg
add
add
lods
icebp
dec
mov
std
sub
les
add
cmp
pusha
mov
cld
rcr
add
add
add
add
add
add
fmulp
adc
cld
rorl
add
jmp
inc
cmp
add
add
or
gs
cmp
movsl
fisttps
js
sub
sbb
jne
shl
mov
add
add
loopne
mov
fimuls
je
outsl
pop
fidivl
xchg
jns
les
add
pop
popf
faddp
add
add
lods
call
add
arpl
jb
add
add
add
mov
fidivrl
add
add
push
cmpsb
repz
ret
insb
call
fwait
cmp
dec
adc
xor
cld
pop
sub
sbb
pop
lcall
fcoml
js
push
popf
cmp
es
fldt
fwait
stos
mov
cmp
vminsd
dec
mov
test
add
adc
mov
add
or
push
testb
icebp
lcall
mov
mov
je
sub
fldl
add
sub
mov
movsl
xor
addl
mov
xchg
stc
dec
add
add
fldt
into
push
vmovntps
push
pop
stc
gs
lods
addr16
add
inc
inc
ret
mov
into
movl
ret
les
add
inc
test
pop
nop
mov
add
push
lods
outsb
shrl
add
mov
testb
flds
jl
adc
cmp
loop
insb
jo
sub
icebp
iret
mov
addb
add
lret
inc
lds
hlt
out
mov
mov
cs
add
add
xor
xchg
xor
fadds
jno
fisttpll
ret
mov
xorb
push
call
cmp
btc
shrl
add
clc
mov
ret
push
mov
add
add
push
cltd
inc
pop
sbb
in
lods
iret
jmp
sub
movsb
loopne
sub
lcall
add
add
add
cmp
dec
mov
or
add
call
fadds
and
pop
xorl
pop
call
xor
or
lahf
or
add
jbe
xor
sub
mov
mov
adc
xchg
jns
add
add
dec
in
xchg
sub
daa
jl
fsin
shrb
dec
add
add
lods
and
out
daa
jno
lahf
fadd
sub
jae
xor
movsb
pop
xchg
add
jl
add
add
mov
jns
out
inc
leave
mov
call
ljmp
into
and
add
add
mov
ja
aam
lea
jecxz
or
add
cld
call
enter
sarl
dec
pusha
shl
popa
push
lret
mov
jmp
xchg
mov
add
into
dec
inc
cmp
add
add
das
out
scas
and
add
add
es
cmp
adc
push
rolb
in
cmp
inc
add
add
filds
rolb
add
sub
mov
cmp
add
test
xchg
mov
cltd
sub
sub
and
add
mov
call
movb
add
in
ja
add
add
and
pop
add
adc
sahf
xchg
aad
push
dec
add
add
push
out
mulb
sbb
testl
repz
jbe
scas
mov
adc
add
xchg
mov
fwait
rclb
or
scas
dec
push
inc
imul
push
imul
mov
cmp
xchg
pop
je
push
les
add
inc
imul
insb
ret
add
jge
sub
add
add
xchg
scas
rcll
mov
add
js
rolb
add
addr16
sbb
jle
xor
cli
mov
sbb
jmp
outsb
push
jmp
inc
xchg
push
aas
adc
jg
ss
cltd
push
scas
mov
cmc
cmp
dec
add
add
jmp
shlb
fmul
mov
or
pop
scas
and
dec
mov
jnp
out
adc
mov
sbb
xchg
mulb
dec
icebp
xor
add
add
aam
or
add
iret
test
xlat
repz
in
adc
maskmovq
testl
out
adc
add
outsl
jl
cmc
jae
add
add
inc
les
add
add
add
test
mov
fnstenv
std
imul
add
xor
push
mov
jb
add
sub
xchg
mov
ljmp
xor
dec
xor
stos
fwait
sub
add
add
cmpsb
inc
adc
iret
sub
fidivrs
mov
push
les
add
cmp
ja
jl
sub
or
add
xor
add
add
xor
movsb
lfs
sbb
aam
add
add
lds
sahf
sbb
lret
stc
ficoml
cmp
xor
push
lock
aas
add
jmp
enter
mov
test
or
add
push
divl
adc
xchg
push
xor
and
aas
mov
add
xchg
mov
lcall
shlb
ljmp
outsl
xchg
movsl
xor
imul
jmp
lock
in
inc
add
add
pop
xchg
cmp
add
dec
add
add
jo
clc
pop
popf
push
mov
add
daa
fs
fmulp
mov
das
sub
xor
jl
adc
stos
enter
iret
lods
in
add
add
xchg
xchg
xor
add
add
push
popf
mov
xchg
dec
add
daa
repnz
add
add
add
hlt
lcall
and
adc
pop
ror
add
add
das
mov
sub
outsl
addb
add
add
add
sbb
adc
or
or
inc
out
movsb
stos
outsl
or
add
xchg
pop
xchg
push
adc
mov
add
and
ss
fdiv
das
gs
add
add
imul
mov
add
add
add
add
adc
xor
push
in
test
lds
add
loope
adc
push
out
pop
sahf
sahf
push
or
dec
add
add
push
push
inc
daa
mov
mov
pop
aaa
aaa
adc
lahf
and
pop
stos
jmp
xchg
test
add
loop
lods
mov
or
add
rcll
mov
add
out
ret
xchg
jg
adc
lock
sbb
rcll
mov
rcr
sub
push
out
adc
add
add
int3
add
add
lret
call
jo
lcall
mov
mulb
dec
add
add
lret
cmc
js
cmpsb
pop
movsb
rolb
add
fstps
add
mov
cmp
add
add
imul
dec
jp
fsubl
xchg
or
or
loop
inc
xor
add
std
repnz
inc
pop
xchg
cwtl
les
add
ret
adc
mov
repnz
sbb
add
les
add
mov
add
loop
rolb
add
sti
lds
pusha
mov
add
pop
out
cmp
add
add
xor
or
add
and
add
cmp
dec
out
xchg
add
adc
dec
ret
int
es
dec
add
add
jmp
pop
in
sub
in
mov
arpl
cmp
lock
fs
test
or
add
dec
add
add
push
cltd
lods
xor
push
fnsave
dec
add
add
cmc
inc
jg
push
out
out
adc
xchg
scas
jnp
add
add
out
lahf
sbb
sbb
inc
lcall
int
pushf
jb
xchg
pushf
cld
out
lret
lods
push
cmp
shrl
sbb
add
add
add
add
pop
pop
add
add
add
add
adc
test
push
add
scas
xchg
dec
pop
js
cmpsb
or
add
imul
fwait
or
push
test
cmp
stc
xchg
lods
sbb
add
add
aaa
stos
imul
fiadds
lcall
bound
lcall
sub
mov
add
ljmp
ret
pusha
arpl
test
ret
cmp
add
mov
and
push
dec
add
add
mov
sbbb
enter
sbb
or
imul
xchg
inc
pop
inc
scas
inc
add
add
sbbl
and
lea
ljmp
iretw
dec
out
sub
add
sbb
out
in
pop
cli
dec
cld
outsl
call
add
add
mov
add
xchg
mov
add
add
add
mov
call
rcll
add
inc
add
add
rcl
sbb
push
mov
push
scas
push
mov
nop
aaa
or
and
mov
pop
call
dec
cmp
push
subl
add
add
or
add
jl
jb
decb
add
add
fwait
add
pop
cmp
lea
push
rcrl
sub
mov
and
dec
outsl
mov
ss
jmp
jmp
add
jno
jp
xchg
movsl
sti
js
rcr
mov
push
push
fsubrs
pop
xchg
rcr
adc
sbb
pop
jp
repz
mov
lahf
scas
mov
in
xchg
shll
aas
insb
mov
add
add
xchg
aaa
pop
ljmp
add
add
jle
cmpsl
xchg
sub
push
mov
ja
push
inc
out
ds
add
push
sbb
dec
push
jnp
mov
push
mov
add
adc
mov
fs
mov
inc
pop
or
add
lahf
adc
add
add
jl
and
add
add
jmp
mov
sbb
add
add
jmp
cs
push
sbbb
test
pusha
inc
adc
pop
inc
pop
shl
add
add
push
cltd
out
add
jbe
in
jb
pop
dec
add
add
lcall
jbe
adc
cmc
xor
dec
xchg
clc
sub
cmc
or
enter
mov
lock
dec
test
dec
cwtl
mov
add
sbb
clc
mov
cld
mov
mov
cmp
sbbl
ja
insl
fnsave
cmpsb
fistl
sbb
add
rclb
fadd
stos
popa
pop
loope
push
xorb
aad
popf
test
jl
or
rclb
les
add
lret
mov
mov
inc
add
add
mov
imul
std
repnz
mov
addr16
insl
clc
or
mov
bound
cmp
shll
stos
imul
lret
dec
fcmovnb
in
sbb
shrl
ja
nop
and
cld
add
add
dec
sbb
movsb
jecxz
add
add
mov
inc
add
add
mov
lcall
aad
jp
lret
fs
movsb
and
repz
jg
xor
lea
mov
add
add
mov
add
add
or
add
insb
xchg
clc
insl
repnz
add
xchg
rolb
add
rorb
add
int3
add
add
push
fldenv
arpl
jns
jae
add
add
imul
sub
push
xchg
dec
add
add
cmp
push
scas
sub
popa
jns
mov
add
popf
int
or
add
fistpll
mov
add
add
inc
jl
add
add
fcmovb
mov
add
add
mov
ficompl
add
add
fsubp
inc
add
add
popa
inc
fcoms
adc
xchg
or
jbe
stos
sub
cmc
cwtl
dec
push
outsb
xor
sbb
pop
xchg
push
pop
and
add
add
add
xchg
movsb
or
outsl
or
sub
ret
mov
test
jg
clc
pop
push
xor
cmpsl
xchg
mov
inc
add
add
mov
rolb
add
mov
test
cmc
das
push
mov
add
add
out
addr16
mov
fisttpll
mov
push
mulb
aad
push
xchg
pop
pop
xchg
daa
lcall
ret
es
dec
std
loopne
add
add
ss
cmp
scas
mov
add
add
enter
stos
lret
or
add
add
cmpsl
jl
shrb
add
add
gs
cwtl
and
fidivrl
xor
sbb
out
popa
dec
inc
test
add
add
inc
mov
addb
add
push
sub
call
add
aam
add
add
test
adc
das
subl
and
jmp
pop
add
add
lds
imul
add
push
popl
jo
or
add
push
insb
push
lds
push
adc
mov
or
daa
xchg
sti
daa
jb
loop
repnz
jg
push
pop
sub
and
xorb
fldcw
icebp
lea
test
icebp
stos
and
adc
add
add
push
jle
and
addb
add
push
mov
inc
add
add
js
add
add
jmp
stos
lcall
jecxz
mov
add
jge
ficoms
ja
inc
add
add
dec
jge
fucom
hlt
mov
pop
inc
mov
mov
mov
scas
sub
adc
add
add
repz
adc
sub
loopne
mov
sub
adc
sub
cmp
lahf
sub
push
mov
inc
cmp
xchg
xchg
sub
and
xor
add
add
fadds
test
add
cmp
mov
mov
scas
inc
cmp
insl
imul
sbb
jo
sbb
out
leave
add
add
addb
add
sub
dec
leave
jae
xchg
cwtl
sub
adc
xor
dec
sub
push
sbb
addb
add
push
fdivrl
inc
inc
add
add
or
add
sahf
bound
jg
add
add
add
add
mov
push
addb
add
icebp
cmpsb
pop
test
sbb
mov
gs
cmpsl
mov
dec
add
add
outsb
mov
mov
push
test
jmp
rclb
or
lcall
pop
mov
lock
adc
inc
mov
addb
add
mov
sbb
dec
cld
lods
xchg
jp
jae
pop
lods
subl
ret
add
add
ja
sbb
add
add
scas
add
jo
insl
scas
scas
ss
sahf
leave
inc
mov
pop
and
pop
idivl
mov
push
mov
fwait
call
pop
insl
insb
jle
mov
inc
cmp
add
movsl
call
enter
dec
jb
pop
mov
fsubrl
sbb
daa
mov
xor
xchg
mov
ljmp
sub
cs
out
popf
fidivl
dec
cmpsb
lock
dec
push
jae
cmp
ret
orb
dec
mov
scas
jnp
mov
stos
xor
rolb
add
fldcw
add
add
add
add
pushl
data16
lock
push
cmp
or
mov
or
movsl
jo
add
add
imul
and
jne
rclb
dec
ja
mov
sub
pop
or
nop
popw
insl
loop
and
test
adc
rol
add
dec
cmp
mov
lock
add
add
leave
int
xlat
std
addb
add
scas
add
add
add
add
adc
add
add
lds
pop
lahf
add
rolb
add
inc
aam
xchg
mov
stos
rolb
add
mov
fcomip
push
fwait
inc
push
inc
ljmp
add
rclb
mov
add
and
jge
jb
cmp
add
add
xchg
pop
add
mov
mulb
leave
adc
or
add
lds
fyl2x
push
insl
jge
add
add
push
ljmp
jmp
lret
or
dec
dec
jns
sbb
fsubrl
xorl
adc
and
dec
jge
add
add
mov
clc
call
and
add
add
add
sarl
fcomi
or
add
add
sbb
add
add
lcall
push
mov
and
adc
jp
add
add
imul
sub
mov
dec
xchg
rcll
push
push
mov
test
add
popf
enter
jae
imul
mov
xchg
mov
out
testb
dec
aad
mov
add
add
jmp
or
jge
cmc
dec
stos
fdivl
sahf
pop
mov
jmp
enter
xchg
ljmp
add
add
cmp
scas
push
dec
cmp
stos
mov
insb
xchg
xchg
mov
sti
out
sub
js
add
add
iret
inc
leave
push
sarl
or
ret
xor
add
add
add
andb
mov
add
add
pop
pop
adc
xchg
enter
xor
in
jnp
aas
ds
dec
add
add
cmp
in
mov
add
outsb
push
js
sub
iret
cld
fcmovu
iret
cli
ds
js
dec
add
add
lret
scas
rcr
or
lods
push
adc
es
xor
orb
dec
je
or
or
add
rorl
in
daa
mov
repz
cmpsl
out
jmp
daa
fists
mov
call
add
in
add
xlat
and
push
mov
jns
mov
je
ret
jmp
add
pusha
pop
sub
pop
std
jmp
xor
fucomi
repnz
pop
push
sbb
fildl
sbb
mov
aas
inc
fstp
and
stc
int
arpl
add
idivl
or
add
mov
fdivrs
sbbb
std
jp
mov
sub
add
add
jb
add
hlt
into
fs
add
jp
mov
movsl
jno
jmp
ficompl
lods
mov
cmp
fst
inc
nop
enter
sub
pop
loope
shl
sbb
jp
jo
xchg
mov
cs
enter
hlt
cmp
and
or
add
ljmp
add
add
test
add
xor
push
rcpps
movsb
jns
in
add
add
sbb
push
data16
mov
pop
mov
xchg
dec
repnz
mov
sarl
scas
dec
add
add
xchg
adc
insb
repnz
js
shll
or
add
xlat
jne
mov
pop
test
sub
fidivs
pop
mov
cmp
inc
out
mov
add
inc
add
add
add
out
iret
jo
ret
xor
inc
add
add
xchg
pop
lds
or
jp
div
fistpll
add
or
repz
leave
jbe
jne
add
or
aas
in
add
rcrl
das
inc
cli
or
daa
sub
enter
clc
mov
jmp
popa
cmpsb
pop
xorl
sbb
rolb
add
arpl
mov
lea
or
add
lods
outsl
sbb
aas
mov
push
push
dec
mov
push
pop
rcll
cli
insl
adcl
jbe
inc
adc
jae,pt
xor
rolb
add
test
ret
cltd
dec
add
add
sub
jae
sti
jg
cmpsb
enter
addb
add
sbb
adc
js
test
add
add
arpl
insl
stos
add
or
ja
movsb
adc
lds
add
out
jnp
cli
data16
ja
in
mov
cmp
pop
cmp
arpl
add
add
addl
jl
mov
add
push
mov
call
push
scas
xor
int
adcb
outsb
mov
aam
add
add
mov
dec
mov
add
add
scas
push
dec
int
fbstp
pushf
subl
jns
inc
out
movsb
adc
imul
mov
sub
inc
add
add
add
xchg
xchg
or
cli
out
pusha
or
mov
mov
jl
fcomps
push
daa
cltd
sub
jmp
mov
add
and
sub
in
lds
inc
add
add
les
add
mov
add
dec
add
add
jnp
add
pop
jne
add
add
aam
pushl
push
push
mov
test
aas
mov
sbb
push
add
add
dec
or
add
jmp
mov
add
stos
and
es
sub
add
add
ret
mov
add
test
jbe
cld
sbb
mov
mov
add
sbb
fxam
or
add
pop
cwtl
push
mov
incb
notb
test
mov
daa
aas
sbb
push
sti
std
scas
xchg
insl
jp
adc
test
mov
sub
imul
lods
sub
fmuls
call
mov
call
inc
shll
add
add
cmpsb
ret
lcall
mov
fcompl
sub
iret
adc
fstpt
xchg
adc
lods
shrl
dec
mov
push
out
fisttpll
sub
jbe
dec
mov
mov
push
repnz
movsb
movsl
scas
sbb
in
push
test
add
lea
cmpsl
push
jl
insb
sarl
iret
or
add
notl
bound
repnz
dec
xor
daa
mov
add
add
repz
jl
out
push
sub
or
add
cmp
xchg
add
add
add
add
mov
sub
xor
add
add
adc
add
add
nop
cwtl
into
pop
jmp
cmc
cli
notb
insl
sbb
or
nop
cmp
adc
int3
add
add
pushf
punpckldq
add
add
add
add
fimuls
sbb
aaa
lret
jp
cmp
jo
popf
xchg
mov
sarl
xor
mov
add
add
fisttpl
push
jge
cli
mov
jo
mov
add
popf
jmp
xchg
adc
sbb
in
fwait
jmp
xor
push
cs
xchg
loope
add
add
jmp
mov
dec
rolb
add
lahf
push
jae,pt
sub
add
sbb
add
add
and
mov
out
and
mov
push
pop
out
push
jl
dec
dec
add
add
ss
repz
push
add
add
lcall
mov
add
cs
add
add
xchg
mov
fs
scas
pop
sbb
mov
add
cmp
rcrb
mov
jae
mov
enter
ds
bound
add
xor
outsl
arpl
dec
pop
or
add
ljmp
cmp
add
add
stc
mov
insb
rcl
push
sahf
loopne
popa
xor
stc
mov
add
pop
in
and
mov
push
sub
add
add
xlat
add
add
repz
arpl
cs
or
fisubs
mov
scas
inc
icebp
je
sub
adc
popfw
shrl
je
push
xchg
mov
xchg
mov
ret
test
add
or
jno
lock
cwtl
or
add
pop
insl
pop
lret
insl
mov
jo
add
add
bound
sti
xlat
pop
in
lods
out
sbb
int
divb
les
add
and
sub
jge
sti
pusha
nop
and
jecxz
pop
inc
jno
aam
add
adc
and
scas
jg
iret
and
sub
dec
aas
sahf
insb
push
outsb
inc
lds
add
add
idivb
add
add
sti
jno
mov
add
fidivrl
rolb
add
test
push
jl
push
in
popa
test
add
xchg
out
cmc
out
dec
push
sub
out
jbe
rolb
add
jbe
and
adc
push
mov
je
stc
test
push
inc
add
add
sub
xor
mov
inc
stc
icebp
dec
add
add
pusha
push
jns
pop
pop
movsb
inc
rorb
adc
sbb
or
mov
jl
imull
add
xor
add
and
add
add
fnstenv
mov
jl
fsubl
jno
out
loopne
push
jge
hlt
add
sbb
add
add
add
add
sub
lahf
fwait
loopne
icebp
je
es
or
mov
iret
addr16
scas
lods
sbb
xlat
sarl
pop
rolb
add
incl
adc
lahf
stc
dec
add
add
ja
cmpb
pop
mov
add
add
jge
aam
jno
jo
add
add
jle
orb
add
cltd
adc
add
and
stos
xchg
fildl
imul
cs
rolb
add
rolb
dec
cmc
jle
and
adc
pushf
pushf
addr16
lcall
add
add
add
add
mov
mov
stos
sbb
mulb
cmp
into
ljmp
fmuls
mov
add
fnsave
pop
push
pusha
jle
push
xchg
inc
and
ret
lock
adc
les
add
xor
test
jnp
ret
inc
add
add
mov
fdivp
mov
push
xor
push
dec
int3
add
add
add
rolb
add
stc
addl
or
add
test
mov
ret
jnp
jmp
sbb
xchg
inc
add
add
leave
addr16
je
push
ficoms
mov
jmp
rcrl
loopne
push
pusha
mov
xchg
mov
bound
test
add
call
jno
repnz
test
add
xor
push
cmp
movsl
in
test
out
sub
lock
mov
add
cmp
add
xor
inc
xlat
xor
xchg
daa
mov
roll
imul
pop
pop
pop
xor
stc
pop
or
cli
inc
stos
jle
loop
hlt
popf
cli
adc
mov
sbb
test
pop
mov
aam
jbe
mov
shl
lret
rorl
stos
clc
adc
inc
mov
add
pop
or
pop
pop
cmp
mov
add
add
dec
add
add
cmp
xor
add
add
fisttpl
jno
lcall
or
test
repnz
jbe
sbb
popf
and
je
sti
inc
add
add
cmp
fcoml
add
fcoms
clc
inc
add
add
mov
add
xchg
outsl
les
add
dec
add
add
mov
add
add
pop
cmp
push
addr16
scas
mov
inc
add
add
pop
pushf
mov
add
add
jo
aam
mov
add
push
pop
cs
scas
dec
jb,pt
ss
out
sbb
nop
je
scas
mov
out
push
or
add
es
lcall
mov
jp
jae
inc
push
mov
sub
shlb
jae
dec
fwait
mov
inc
cmp
call
addb
add
push
jl
cmpsb
stos
adc
add
jmp
test
pop
add
stc
adc
mov
mov
push
push
push
adc
inc
sarl
and
push
jbe
mul
and
add
mov
lods
mov
shll
imul
jmp
add
dec
xchg
push
jge
jns
cmp
add
add
mov
mov
jmp
mov
xor
mov
pop
mov
add
repnz
adc
jmp
mov
add
fdivrl
dec
mov
add
push
lret
xor
and
bound
jns
jl
sub
pop
sbb
rolb
add
jle
divl
lcall
mov
add
jge
sbb
mov
xor
fstpt
cwtl
stos
jb
xor
add
add
mov
jge
test
dec
test
add
add
dec
add
add
xor
xchg
outsb
test
sub
lods
lret
or
xlat
jecxz
shrb
lret
popf
je
cmp
bound
addb
add
xor
pop
add
add
dec
add
add
das
or
enter
das
mov
pop
mov
inc
loope
dec
xchg
cmp
jb
test
add
icebp
push
fisttpl
xchg
sbb
add
push
repnz
push
pop
xchg
movsl
iret
inc
lret
loope
loope
jge
jb
lods
adc
sub
in
outsb
ss
add
add
cmc
imul
lret
aam
add
add
cmpsb
xor
mov
xchg
mov
imul
xor
add
add
add
jnp
xchg
movsb
lds
sti
dec
add
add
add
popa
jns
sbb
pop
fidivrs
add
add
add
fimuls
jb
pop
test
pop
xchg
xor
add
add
scas
bound
addb
sub
or
addl
addr16
push
fs
pop
pop
mov
inc
pop
sbb
sbbl
mov
sbb
not
mov
add
mov
sahf
pop
and
ret
xlat
mov
cmp
inc
call
mov
pop
adc
xchg
jmp
jno
jmp
in
mov
adc
roll
stos
aad
xor
sub
insb
scas
enter
rorb
inc
add
add
mov
mov
clc
jmp
cli
push
aam
mov
jo
adc
fwait
xor
mov
enter
insb
sbb
pop
xchg
pop
add
imul
and
push
and
add
outsb
je
ja
or
cmc
pop
loope
in
dec
add
add
mov
movb
add
add
cmpsb
push
pop
xchg
jbe
adc
in
in
dec
sbb
and
mov
ret
in
push
cmp
xchg
dec
add
add
mov
mov
ret
sub
ljmp
push
je
mulb
xchg
add
popf
xchg
sbb
les
add
mov
jg
aam
and
mov
testl
jmp
add
add
daa
enter
push
scas
xor
add
lock
adc
mov
std
aaa
jo
incb
xchg
jb
int3
add
add
push
mov
inc
gs
popf
mov
push
xlat
xchg
movsb
mov
mov
add
inc
mov
fwait
subl
pop
dec
fwait
lret
loope
dec
and
int
or
add
and
gs
add
add
add
add
add
add
push
sub
or
dec
popa
or
sbb
or
fwait
push
push
xor
enter
lods
daa
shlb
repnz
inc
sahf
imul
ret
pop
push
cli
inc
add
test
adc
outsb
stos
popf
adc
pop
scas
xchg
mov
cmp
or
jg
xchg
out
ds
pop
addb
add
in
add
add
mov
out
faddp
into
aad
es
clc
dec
add
add
or
xor
dec
push
lock
leave
in
push
add
push
lods
adc
push
adc
add
repz
cmp
int3
add
add
aaa
loope
ds
add
add
stos
xchg
mov
add
add
or
scas
rolb
add
fs
into
divl
mov
outsb
and
inc
add
add
in
pop
jae
or
loope
in
adc
mov
mov
pop
mov
add
in
add
add
add
fdivrs
add
add
test
cs
xchg
jns
test
push
out
add
push
dec
mov
add
and
jp
adc
cmpsb
or
popf
shrl
or
sbb
add
or
add
push
inc
stc
lods
pop
and
push
xlat
stos
adc
sahf
xchg
js
jbe
rcrl
fwait
lret
mov
mov
push
xor
adc
add
add
xchg
jp
lret
imul
rcrl
jp
int3
add
add
sub
movsb
dec
cmc
mov
xor
push
mov
mov
jl
push
mov
push
sahf
mov
ret
jnp
jb
stc
data16
mov
andl
mov
add
ret
call
push
fimuls
cltd
xor
pusha
lret
dec
pusha
pop
mov
add
add
outsb
pop
leave
sub
pop
xor
pop
insl
test
shrl
mov
mov
and
sti
jae
mov
add
adc
or
add
mov
cmp
pop
jle
bts
cmc
in
add
jmp
cltd
nop
mov
sbb
xor
add
add
fiaddl
jo
xor
mov
add
and
xchg
dec
mov
push
lret
mov
mov
aam
mov
and
enter
and
sbb
leave
loopne
orl
in
clc
inc
jecxz
sub
pop
cwtl
jl
add
add
jecxz
imul
xchg
addb
add
jne
jb
adc
jmp
sub
out
jp
add
add
sbb
movsb
cmp
fcoms
mov
test
repz
vandnps
mov
xor
and
push
scas
jge
cmpsl
add
add
mov
rcl
mov
jnp
mov
cmp
push
xchg
jne
sbb
insb
mov
rolb
add
movsb
in
adc
dec
test
add
pop
stos
push
xchg
add
fs
adc
dec
add
add
pop
in
add
add
stos
ds
fsubl
xor
das
jge
jb
into
imul
lock
cmovno
add
add
or
stos
lods
es
add
add
push
adc
fstpl
mov
xlat
loope
jmp
dec
push
xchg
or
xor
icebp
inc
mov
add
lret
pop
push
sahf
out
dec
push
std
loopne
add
sbb
popf
push
repnz
test
push
mov
add
lds
xchg
mov
imul
push
rclb
push
dec
add
add
push
xor
inc
bound
nop
out
cmp
les
add
jecxz
pop
insl
xchg
aam
pop
jno
xchg
rolb
add
and
pop
lret
cmpsb
push
dec
addl
bound
and
mov
inc
add
add
xchg
pop
rolb
add
or
int
mov
fcmovb
loopne
add
add
or
inc
adc
stos
inc
mov
add
mov
hlt
icebp
jle
mov
add
push
adc
xlat
push
fstpl
dec
add
add
add
add
add
jb
mov
jnp
andl
add
add
push
inc
int
int
cmp
jb
scas
mov
jg
adc
aad
pop
lret
arpl
push
pop
xchg
into
dec
jbe
xchg
repnz
sbb
cli
xchg
sbb
data16
push
stos
roll
add
rcll
test
and
add
add
imul
jb
sub
in
mov
add
leave
or
xchg
nop
or
sbb
fdivrl
adc
popf
pop
xlat
pop
aas
mov
movsb
add
je
std
mov
add
xchg
jb
daa
push
addb
add
jb
xchg
scas
cmc
lret
lret
add
popf
add
add
inc
scas
stos
push
inc
push
inc
fnsetpm(287
test
das
sub
jmp
call
add
int3
add
add
ss
fxch
pop
stos
arpl
lret
and
test
add
cmp
es
cmc
dec
add
add
and
sahf
mov
mov
flds
adc
sub
dec
add
add
test
mov
loopne
add
add
fistpll
add
add
jle
push
mov
loope
mov
xchg
ret
in
jb
jecxz
jae
sarl
inc
add
add
dec
add
add
rcl
or
add
pop
dec
imul
add
sub
add
add
fdivr
hlt
repz
mov
clc
jb
scas
push
xchg
jnp
repnz
add
int
xor
add
add
add
movsl
dec
fistl
xchg
ret
or
pop
fcmovnb
in
dec
mov
insl
outsl
push
cmpsl
lahf
or
jecxz
dec
adc
cmp
push
dec
add
add
ds
inc
and
mov
sbb
call
xchg
fs
loopne
mov
cmpsl
push
adcb
add
sbb
add
add
mov
rolb
add
or
jl
in
popf
lock
cmpb
pop
pop
xchg
pop
pushf
or
inc
dec
cmp
pop
test
xor
inc
add
add
sbb
je
lcall
and
cmpsb
push
dec
push
adc
or
sub
sub
sub
lret
jmp
and
adc
ret
ljmp
add
loope
mov
stc
mov
add
and
fs
loop
movsb
jecxz
xchg
bound
add
inc
mov
aam
lret
jmp
jle
dec
mov
insb
insl
gs
or
pop
jo
inc
test
pop
jmp
add
add
out
fs
jmp
popa
mov
loop
add
add
add
sbb
outsb
cmp
data16
jecxz
mov
ret
jbe,pn
gs
pop
xchg
dec
testl
xorl
lahf
int
xor
or
adc
mov
add
mov
xor
mov
aam
add
add
imul
ja
add
add
roll
andl
push
and
leave
aas
dec
push
inc
sahf
pop
and
xchg
inc
lcall
nop
jg
leave
cli
push
popf
pusha
movsl
dec
sub
mov
popl
adc
cmc
jg
push
jge
outsl
lahf
xchg
in
jg
add
add
popl
add
rcll
push
addb
add
cmpsl
sbb
fnstcw
add
add
pop
pushf
dec
pusha
and
mov
arpl
jl
insl
add
xlat
lret
mov
decb
add
add
jbe
mov
or
rorl
aam
loop
jge
aad
dec
push
dec
or
pop
daa
sbb
in
xor
sub
mov
mov
xchg
mov
dec
icebp
jp
popa
bound
pop
int
add
add
pop
jbe
mov
and
arpl
jecxz
repz
or
pop
dec
add
add
or
add
ljmp
pop
jb
add
add
pop
nop
xchg
dec
add
add
push
sahf
popa
xor
cltd
add
add
jmp
add
add
pop
in
push
pushf
inc
mov
xchg
lea
inc
xchg
sub
cmp
add
add
dec
add
add
jb
mov
mov
int
scas
push
loopne
add
add
std
inc
ljmp
jg
loop
add
add
mov
xchg
dec
pop
out
stos
push
lock
or
loop
add
add
das
add
add
sub
adc
push
pop
mov
popf
dec
add
add
inc
int
xor
jl
pop
jnp
rolb
add
daa
cmp
mov
std
ja
cltd
cmpl
in
inc
lahf
and
test
add
xor
outsl
xchg
out
mov
add
add
pop
test
add
scas
or
sti
out
add
add
mov
movsb
and
stc
push
or
add
test
xor
aad
test
add
add
test
mov
add
add
imull
inc
nop
ja
mov
push
sti
iret
pop
inc
sar
scas
out
ret
and
add
add
subl
stos
jo
fsubrp
push
dec
std
jne
xchg
xlat
xor
mov
mov
add
repz
je
and
je
ds
add
mov
cmp
dec
add
add
aad
lret
test
mov
xchg
out
jo
jl
dec
mov
push
and
popa
jp
and
pop
out
xor
add
cs
imul
lcall
enter
inc
add
add
outsb
adc
lret
add
add
mov
outsb
inc
hlt
mov
xchg
fcomip
dec
push
ficoms
andl
add
mov
mov
aaa
push
mov
and
cmp
dec
mov
xlat
sbb
repnz
mov
ja
add
or
imul
lret
popa
xchg
leave
xchg
ss
jb
int3
add
add
fistpll
movsb
mov
add
jnp
loopne
add
jge
adc
xchg
inc
add
add
sub
xor
sub
mov
add
add
aam
adc
out
jmp
jae
mov
add
add
shll
cwtl
sbb
add
add
adc
mov
inc
add
add
add
subl
fnstenv
enter
adc
mul
mov
xchg
shll
push
and
jp
or
imul
inc
inc
fnstenv
dec
add
add
sbb
push
aas
cmp
push
sub
jnp
movsb
push
push
lahf
pop
mov
jae
sbb
dec
fdivr
pusha
dec
lods
inc
int
xchg
xchg
or
add
mov
add
fcmovnu
adc
ljmp
aad
add
cli
push
aam
mov
inc
xchg
in
mov
add
jp
out
sti
and
outsb
xor
and
push
push
dec
mov
xchg
aam
jecxz
js
add
add
sbb
and
add
and
add
scas
mov
add
insb
imul
lods
enter
rcll
push
sbb
les
add
data16
aaa
fdivrl
add
add
in
and
divb
adc
shrl
pop
lods
loopne
aas
mov
into
mov
add
scas
cmp
cld
pop
fsubs
push
adc
fstps
pop
dec
repz
mov
push
sub
cmp
jp
add
add
call
fs
ror
imul
add
sub
push
frstor
add
add
imulb
dec
int3
add
add
outsl
xchg
or
add
pop
les
add
lock
add
jno
or
add
movsl
adc
inc
adc
and
repnz
sar
pop
xchg
xchg
jns
adc
rolb
add
sahf
outsl
lret
jle
inc
adc
xor
add
add
aad
add
add
lods
jecxz
adc
xchg
aaa
push
xor
jno
sub
xchg
fwait
pop
data16
filds
inc
cmp
mov
push
rorl
xor
mov
loopne
mov
gs
jns
insl
mov
add
mov
jno
in
push
add
add
dec
add
add
adc
lods
mov
jmp
das
lea
add
out
in
sub
dec
pop
sbb
rolb
add
xor
aaa
xchg
stos
push
push
out
daa
mov
fcoms
rcrl
adc
cmp
inc
clc
add
push
adc
add
fiaddl
ror
bound
add
add
add
add
popa
ret
adc
jnp
ss
in
and
pavgb
add
rolb
add
push
mov
pop
dec
add
add
arpl
xchg
addb
add
add
inc
jae
and
push
mov
jne
add
add
dec
push
mov
sub
jle
sbb
adc
mov
fnstenv
lcall
loopne
mov
push
rcrb
add
and
pop
or
add
fadd
dec
add
add
shrb
push
rolb
adc
adc
orl
insb
cmpsl
mov
clc
push
jnp
lods
push
adc
and
push
stos
and
jns
add
add
imul
mov
add
push
mov
sub
cmp
fisttps
lods
insl
mov
sub
push
aas
adc
xor
lret
dec
clc
adc
vprotw
mov
pop
cmp
test
add
sub
add
inc
add
add
arpl
icebp
xchg
add
add
ja
sbb
mov
xchg
int3
add
add
shlb
stos
fildll
sub
pop
xchg
xor
notl
add
mov
ja
ret
inc
es
pushf
dec
pop
sbb
dec
add
add
mov
pop
fmul
add
add
repz
mov
mov
fidivs
shll
jne
jge
ficoms
not
js
movsb
lea
hlt
pop
sub
out
cmp
add
leave
sbb
je
aas
sub
daa
jecxz
add
add
das
cmp
jecxz
pop
adc
dec
hlt
scas
push
int
icebp
loopne
into
rolb
add
loopne
aaa
cmpsb
and
inc
add
add
add
mov
add
add
jns
or
add
mov
add
addr16
ffree
add
add
xor
movsl
sbb
mov
repnz
xor
test
add
inc
scas
ja
les
add
push
jle
and
sbb
icebp
loope
sbb
xchg
cmp
mov
lea
imul
sub
sbb
lret
sti
aad
xor
pop
stc
inc
loope
jbe
dec
scas
out
jmp
xor
add
sbb
or
add
cmc
cmp
cmpsl
sarb
add
fldt
add
cld
adc
add
andb
outsl
bound
in
inc
add
add
fsubrs
not
jp
jne
sub
ljmp
add
add
mov
lods
cs
xchg
rorb
mov
add
add
sbb
cmpsb
mov
add
outsb
lret
or
add
es
pop
nop
stos
int
xchg
jge
adc
xor
add
xchg
cmc
pushf
in
xchg
add
out
inc
add
add
add
add
add
ret
adc
mov
loope
push
sub
inc
add
inc
push
mov
cmpsl
pop
mov
and
pop
and
cmp
sarl
lahf
or
dec
and
stos
test
xchg
addr16
inc
js
add
add
pop
scas
mov
lret
in
push
mov
rclb
add
add
fadd
les
add
push
imul
sub
ss
popa
cmc
notl
xchg
outsl
int3
add
add
in
int
loope
jge
repz
cs
dec
mov
push
and
sti
mov
imull
shll
cmovle
pop
jns
add
add
push
push
cmpsb
fcomps
daa
push
fistpl
push
xchg
rorl
dec
pop
add
pop
mov
loopne
inc
adc
jecxz
ret
call
sub
push
push
cld
jno
scas
cmc
arpl
mov
xchg
imul
test
adc
cmp
dec
lcall
addl
add
mov
cmp
test
outsl
jns
and
jnp
add
add
mov
or
out
inc
scas
mov
test
cli
inc
add
add
and
test
and
add
or
cmp
dec
fsts
or
mov
call
out
popw
mov
sbb
mov
sub
jnp
or
in
fbld
add
out
lcall
into
ljmp
inc
or
add
popa
push
fcomps
mov
cld
cmp
jno
sub
or
push
pcmpgtw
mul
mov
add
or
add
neg
int3
add
add
adcl
mov
adc
add
dec
add
add
xor
jb
ja
test
pushf
into
cmc
adc
and
mov
test
adc
lods
cmp
add
cmpsl
test
outsb
mov
aas
shr
repz
enter
push
sub
cmc
jo
add
add
jmp
aas
pushf
or
push
pop
push
pop
jne
jno
pop
insl
das
jo
mov
pop
in
hlt
dec
mov
push
push
mov
hlt
stc
fwait
xchg
mov
mov
fisttpll
add
adc
popa
sbb
imul
jge
xor
pop
cld
mov
add
mov
lods
pushf
jo
mov
loop
pop
sti
ficoml
call
repz
dec
lahf
inc
jle
sub
fcoml
lahf
rolb
add
jl
pop
jecxz
cmpsl
adc
and
xor
cli
xor
jmp
lret
scas
jne
add
add
add
dec
add
add
push
stos
add
add
sub
cs
xchg
add
add
test
xor
adcb
in
pop
enter
mov
roll
mov
jns
addb
add
iret
push
lret
mov
adc
popa
cmp
add
add
add
add
sbb
cmpsb
cltd
ds
pusha
mov
jp
add
add
test
stos
stos
push
jnp
or
add
idiv
jne
add
add
into
dec
cmp
pop
cmp
out
rep
pusha
dec
add
add
pop
sbb
pop
inc
add
add
gs
xor
push
hlt
ss
xorl
addr16
xor
add
add
cmpsl
daa
sub
insb
xchg
fs
xor
mov
mov
add
add
add
shll
push
dec
out
add
add
pop
stos
jb
sti
mov
add
mov
or
iret
rcrl
mov
mov
into
int3
add
add
add
add
add
xchg
mov
inc
gs
jae
out
out
cmp
sub
pop
mov
hlt
je
ja
aaa
xchg
xchg
sub
add
add
and
in
js
addb
lahf
sti
pushf
push
orb
data16
or
add
and
xchg
bound
add
add
push
jbe
mov
std
shll
sub
outsb
ficoms
push
mov
aaa
or
mov
rcll
add
gs
das
sar
frstor
addb
add
data16
insl
fs
add
mov
cwtl
cmp
add
add
repnz
adcb
sbb
inc
sbb
dec
add
jns
jecxz
mov
sub
inc
nop
sub
lret
ret
mov
outsl
hlt
or
in
push
inc
add
add
daa
mov
lea
inc
add
add
das
push
dec
add
add
add
shl
sub
and
xchg
insl
outsl
mov
sbb
add
inc
aaa
xchg
inc
xor
aad
cmp
dec
stos
jmp
test
add
jno
sub
lahf
in
mov
and
add
add
ret
cltd
push
loopne
out
scas
jns
mov
fmuls
xchg
shl
mov
push
test
add
xor
aad
xchg
enter
dec
in
ret
pop
daa
scas
int
pushf
fildl
std
rolb
add
add
pop
pop
pop
jmp
and
rcll
add
iret
fsubrs
xor
xchg
bound
inc
lods
jno
addb
lods
push
es
inc
add
add
add
shr
add
add
or
inc
add
add
dec
mov
scas
out
mull
xchg
xlat
push
lahf
xchg
jo
xchg
mov
dec
add
add
out
mov
xor
popf
xchg
xchg
loope
mov
fistl
add
sub
inc
inc
lock
add
out
mov
cmp
into
jbe
dec
xor
gs
add
arpl
add
add
and
mov
sub
sub
repz
ds
add
add
add
inc
mov
outsb
and
test
dec
inc
jno
test
lahf
adc
ss
lds
xchg
aad
imul
loop
pop
test
les
add
mov
stos
lret
and
jecxz
dec
cltd
xor
inc
lret
shll
out
shl
add
add
sbb
lods
dec
add
add
flds
sbb
push
sbb
bound
loope
push
mov
pop
pop
popf
test
or
add
xchg
push
push
idivl
popf
push
pop
sbb
sahf
xor
leave
mov
imull
out
xchg
cmpsl
cs
mov
or
add
add
xchg
cmp
jge
push
call
add
mov
or
cwtl
sub
int
test
pop
loop
add
add
jmp
clc
mov
js
mov
add
add
add
add
add
add
and
cmpsb
in
mov
pop
add
insl
jo
sahf
enter
xorl
push
sbb
and
aam
fildl
ja
shll
or
add
sub
and
inc
add
add
sbb
dec
call
push
mov
adc
rcl
aas
jns
sbb
stos
imul
inc
imul
rorb
lods
pop
jae
dec
sahf
and
loopne
in
js
mov
add
dec
faddl
adcb
fbld
icebp
das
xor
lds
add
ret
mov
add
mov
xor
add
rorb
add
push
adc
rol
push
call
cld
shll
dec
add
add
mov
es
add
add
xor
push
jle
xchg
dec
or
add
or
fldl
add
add
add
and
sbb
push
cmp
cli
fmuls
mov
push
imulb
xchg
movsl
jns
test
add
sbb
mov
inc
outsl
lea
loop
js
movsb
inc
dec
iret
push
lods
dec
in
add
add
xor
add
add
add
enter
cmp
fsubrl
bound
sub
mov
into
adc
mov
pop
loopne
push
lret
inc
dec
xchg
jne
add
add
mov
add
xlat
rcll
es
mov
add
adc
jge
in
rolb
add
outsb
aaa
sub
sti
pop
and
add
sub
subl
sub
call
fsts
jns
and
insb
mov
mov
cmp
mov
loope
xchg
cmc
inc
adc
shrl
pop
cmp
dec
pop
stos
fcoml
mov
mov
pop
les
add
dec
add
or
ret
xchg
es
xchg
push
scas
mov
insl
and
dec
add
add
mov
pushf
jle
ret
push
xlat
jno
mov
add
add
fnstenv
leave
xchg
cmc
fidivrl
xchg
cs
addr16
push
jmp
cltd
shll
pusha
cmp
lods
add
push
adc
add
add
add
or
divl
cmpsb
push
sub
jle
add
add
jl
call
fisubl
sahf
mov
push
cmp
pop
and
inc
add
add
add
add
insl
stos
inc
add
add
cld
mov
inc
add
add
add
add
mov
movsb
shl
ret
pop
cmp
out
loope
or
add
sbb
repnz
insl
inc
insb
push
jne
shll
or
cwtl
inc
das
gs
inc
pop
mov
add
add
add
jae
pop
mov
je
mov
dec
sub
and
mov
add
add
mov
rolb
add
add
inc
add
add
fbstp
push
inc
sub
xlat
push
pop
lds
xchg
pop
push
dec
stos
pop
inc
movd
iret
and
loop
popf
dec
jmp
mov
xor
pop
lret
pusha
shrl
mov
les
add
lahf
lods
mov
scas
push
or
addb
add
adc
and
gs
sbb
stos
push
pop
fucomi
or
add
rolb
add
jle
aam
in
lds
add
add
cmp
pop
dec
jbe
aad
jb
mov
add
movsb
clc
in
divb
fwait
mov
pop
and
pop
comiss
push
lods
jno
cmp
popf
inc
in
mov
lret
mov
xor
insb
int
fists
jp
mov
dec
jp
jl
fistpl
xor
lcall
dec
and
add
add
mov
pop
lcall
cmp
mov
add
xor
add
dec
add
add
outsb
mov
cld
xorb
movsb
pop
jne
ljmp
pushf
pop
stos
cltd
js
mov
add
and
add
daa
cli
or
xor
insb
or
add
pop
imul
sub
and
add
add
mov
pop
loope
lods
inc
add
add
xlat
pop
leave
loope
mov
call
jl
mov
addb
add
mull
outsl
test
cmc
mov
jg
push
popa
not
in
mov
add
add
loop
xor
xor
jb
popa
dec
add
add
add
cmp
sub
mov
call
add
out
inc
add
add
dec
add
add
daa
in
lahf
dec
add
add
dec
scas
imul
jb
xor
add
mov
add
mov
add
or
cs
movsl
mov
add
mov
cld
fsubrs
push
mov
repnz
and
cli
jne
cli
loop
pushf
out
inc
mov
pop
imulb
nop
cmpl
xchg
out
inc
aad
adc
test
add
les
add
xchg
call
jns
jne
pop
mov
jg
push
push
aad
lret
add
mov
push
mov
add
add
cli
add
xor
pop
xchg
int3
add
add
xchg
push
mov
roll
add
call
std
jl
aaa
das
mov
bound
andb
push
in
stos
jle
jb
loopne
sbb
jb
into
and
insb
sbb
int
inc
sub
arpl
mull
out
jbe
add
add
add
add
testb
mov
icebp
mov
pop
mov
xchg
pop
les
add
lods
lods
mov
mov
jl
movsb
pop
xchg
rolb
add
call
jp
xchg
jl
mov
clc
push
pop
xchg
aas
call
or
ret
mov
movsl
inc
jnp
mov
call
pop
shll
push
lock
adc
sarl
sbb
jmp
loope
leave
dec
dec
jle
repz
stos
gs
aaa
fiadds
cli
mov
icebp
clc
mov
mov
and
roll
lods
jp
js
ja
adc
mov
addb
add
jo
arpl
and
repz
movl
cltd
adc
cmp
test
mov
add
or
add
inc
mov
push
call
dec
add
add
jecxz
sbb
cmp
add
jg
pop
mov
mov
stos
xor
add
add
adc
sub
adc
ret
mov
add
add
icebp
aaa
pop
inc
popf
cld
mov
cs
cmp
loop
mov
lret
mov
jns
das
adc
lea
pop
int3
add
add
decb
mov
mov
add
shrb
inc
lods
dec
aam
push
daa
daa
addb
cmp
xlat
xor
jno
enter
loopne
jo
mov
mov
dec
out
fldl2t
jbe
movsb
fidivrl
pop
test
aam
and
push
dec
mov
cltd
sbb
sub
aad
add
add
inc
lds
sub
mov
outsb
or
add
mov
mov
and
aad
decl
adc
and
clc
fs
lds
js
xchg
lods
dec
lods
das
jno
dec
xchg
lock
add
add
shll
scas
pop
push
pushf
pop
pusha
or
and
cmp
nop
adc
roll
popl
push
fldl
cmpsl
add
add
cli
testb
imull
lret
cli
lret
ret
adcl
add
pop
fwait
or
add
aaa
mov
or
pop
cmp
es
cmp
cmp
fnstcw
jo
bound
xchg
ret
pop
test
add
movsl
jno
xor
push
push
std
fcomps
or
add
inc
aaa
or
xchg
jmp
jl
sub
cmp
test
add
add
idivb
push
lds
jmp
mov
lret
add
add
icebp
xchg
xor
pop
inc
mov
mov
lods
push
imul
cwtl
addl
cld
les
add
in
push
shlb
push
sbb
mov
add
gs
je
test
in
pop
mov
movsb
ljmp
mov
or
mov
nop
jbe
pop
and
addb
add
ffreep
add
sub
lea
add
push
jae
mov
add
jle
pmulhw
add
add
jnp
inc
cmp
je
stos
aad
nop
add
sub
jns
jge
icebp
xchg
pusha
sbb
add
add
add
add
cld
ds
lea
pop
dec
mov
mov
xor
xchg
js
mov
lea
and
xchg
fists
push
dec
in
jo
ret
dec
inc
xchg
add
add
mov
adc
add
add
int
push
test
xchg
pusha
aad
mov
mov
adc
lret
jne
xor
jo
popa
mov
add
add
sbb
push
cmp
add
mov
cli
mov
add
add
lret
movsl
adc
gs
push
mov
pusha
mov
add
add
je
add
add
mov
fisubrl
into
adc
inc
mov
mov
outsl
test
das
adc
xor
movsl
fnstenv
or
add
sbb
jecxz
adc
bound
repz
adc
ret
in
adc
rclb
mov
mov
add
mov
in
jge
sub
add
mov
aad
int3
add
add
es
add
loop
add
add
stc
inc
add
add
add
pop
or
and
stos
popw
add
addb
add
loope
cmp
test
sub
add
add
mov
pop
mov
test
movsb
ds
bound
scas
inc
add
add
pop
adc
out
xor
ljmp
cwtl
pop
sub
sbb
inc
add
add
in
idivl
imul
adc
dec
hlt
xchg
xor
lret
adc
dec
or
add
insb
add
pop
in
lods
in
mov
inc
icebp
pop
xchg
mov
add
jnp
cltd
xchg
fdivp
sub
add
inc
dec
adc
jg
mov
xchg
stos
hlt
mov
add
add
inc
add
add
push
out
sahf
mov
ljmp
in
jmp
pop
xchg
add
add
outsb
inc
add
add
clc
xor
mov
ficompl
inc
pop
inc
cmp
xchg
add
fucomip
data16
icebp
fstpt
add
loopne
into
or
jnp
ds
xor
hlt
jbe,pn
add
add
loopne
push
call
sbb
fnsave
or
jae
add
add
or
imul
stc
jb
cmp
fdivl
add
add
fimull
add
jl
pop
adc
sbb
inc
das
mov
sahf
push
fists
inc
push
ret
adc
movsl
dec
mov
test
add
int3
add
add
inc
mov
mov
sub
addr16
pop
ret
cmc
adc
pop
movsb
xor
int
jbe
jno
shr
xlat
cmpsb
pop
jnp
mov
add
adc
mov
vminss
cmpsl
xchg
dec
cmpl
and
mov
adc
ds
or
xor
sti
xor
push
mov
repnz
cld
add
cwtl
lds
pop
jae
mov
add
lcall
sub
les
add
idivl
jo
inc
add
add
add
jae
add
add
adc
shll
add
add
sbb
inc
rcr
test
jge
dec
arpl
pop
in
test
or
add
loop
mov
out
jnp
and
or
je
jbe
xchg
inc
ljmp
loop
add
add
sbb
mov
add
xchg
mov
fcmovnu
in
orb
popf
outsb
movsb
outsb
cmc
inc
insb
push
inc
imul
xor
push
call
add
sub
cld
stos
std
or
lock
xchg
bound
subl
mov
out
int
push
mov
unpckhps
dec
mov
adc
mov
add
icebp
cwtl
and
pushf
outsl
stos
push
fcmovbe
xor
cmpsl
mov
mov
scas
outsl
adc
adc
fstpl
mov
mov
xor
test
aam
testb
fildl
or
neg
icebp
and
outsl
imul
xchg
icebp
mov
lods
jns
imul
add
add
dec
test
add
mov
jle
add
add
xor
lds
in
add
add
add
pop
lods
addb
add
lods
ficompl
fdivr
nop
ds
adc
add
add
icebp
inc
dec
add
es
push
lods
js
inc
pop
cld
fidivl
lea
mov
out
xchg
cmc
gs
inc
add
push
pop
ja
call
and
mov
lds
ljmp
mov
imul
add
or
add
dec
jg
mov
lods
and
stc
fisubs
and
mov
add
and
pop
sbb
pusha
pop
pop
adc
pop
loope
aas
in
std
add
and
or
add
dec
loopne
and
por
or
rclb
outsb
rolb
add
add
ret
adc
shl
divl
mov
push
test
xor
call
dec
mov
push
je
or
mov
ljmp
add
jle
cmpsb
cmp
xchg
jbe
sub
xchg
push
push
jle
inc
test
repnz
cmp
sub
push
rorl
dec
add
add
clc
stc
sbb
cld
mov
iret
stos
bound
pop
test
push
mov
add
add
add
xchg
push
mov
add
add
popa
adc
dec
dec
outsl
fsubrs
sbb
out
push
push
inc
frstor
out
repz
jnp
sbb
push
and
add
andl
add
xchg
sub
std
mov
add
add
repz
rcrb
push
test
xor
add
xchg
rsqrtps
in
and
push
push
add
mov
imulb
jl
arpl
aad
push
in
sbb
aam
add
add
ss
ds
jne,pt
fld
fwait
out
int
xchg
add
add
add
add
add
add
std
ds
stos
lock
add
add
jae
or
add
mov
sub
sub
jecxz
mov
lahf
jmp
mov
add
add
into
in
mov
mov
sub
cltd
sbb
cs
insb
adc
jmp
fs
add
add
loop
push
mov
sub
add
ljmp
lret
cld
and
stc
shll
add
add
add
add
dec
lahf
inc
jmp
movsb
cmpsb
sbb
out
int
add
add
nop
filds
scas
jb
sbb
add
add
dec
mov
out
cmpsl
insl
xchg
add
add
push
push
sahf
fdivrl
filds
add
pop
mov
sbb
add
jbe
cmpsb
aad
push
push
pop
test
add
and
xlat
lret
dec
scas
cmc
xor
adcl
jge
cmp
pop
or
add
jo
addr16
fisttps
rorb
add
add
cmc
mov
add
cmp
add
add
and
mov
and
imul
add
sbb
mov
insl
sti
je
std
ret
lods
lahf
adc
jbe
mov
push
fcompl
data16
into
add
fstps
xorl
test
adc
inc
add
add
inc
add
add
mov
test
xchg
push
cmp
ss
sbb
jl
out
scas
imul
ret
or
jo
add
add
xor
lds
stos
out
push
idivb
add
scas
sbbl
sub
add
pop
scas
mov
add
add
pmulhw
and
fldl
push
movsl
dec
add
add
in
pop
mov
addb
add
arpl
mov
add
sbb
add
mov
push
push
sbb
cltd
test
add
andl
add
sbbl
mov
mov
and
add
add
jb
fcmovnbe
int3
add
add
lods
insl
and
out
pop
or
popa
into
push
mov
add
add
lods
or
cmp
cmp
lods
mov
jp
pop
ss
dec
fsubrl
mov
mov
ffree
inc
xchg
lret
fistps
hlt
xchg
mov
add
pop
dec
push
es
outsb
xor
push
dec
dec
add
add
or
pushf
mov
mov
std
inc
insb
and
or
add
add
shl
push
jp
loope
add
add
fimuls
dec
dec
add
add
mov
sub
sub
out
cld
cs
in
movsl
js
push
mov
lods
inc
out
add
add
xchg
sahf
dec
icebp
lea
add
add
jg
fistpl
xchg
lods
adc
jmp
adc
bound
xor
and
sbb
adc
cs
popa
or
add
add
pop
jmp
add
add
xchg
pop
cmp
xor
stos
or
or
cmc
stos
cmp
gs
addb
add
imul
mov
mov
add
test
loop
dec
dec
xlat
scas
insl
ret
cli
cwtl
pusha
pop
pop
andl
imul
or
add
das
ljmp
add
add
shll
mov
add
add
pop
lret
or
sti
jne
adc
add
add
pop
sbb
xchg
dec
mov
rolb
add
out
jecxz
xor
and
dec
lret
xor
out
mov
icebp
xchg
sbbl
outsb
out
sub
and
add
add
jo
push
test
dec
push
inc
add
add
xchg
and
adc
mov
daa
test
dec
add
add
xor
xor
mov
add
pop
or
inc
add
add
add
add
fisubrs
ficoml
dec
add
add
jmp
lock
fisubl
xor
cmc
sub
out
adc
xor
adc
add
push
lcall
repnz
mov
add
pop
sub
leave
outsb
add
mov
fcomps
add
lahf
jmp
shrl
scas
sbb
and
mov
add
lods
push
sbb
jp
push
jae
add
add
mov
xor
rolb
add
pop
rolb
add
faddl
sub
mov
fs
test
mov
sub
add
add
mov
mov
shr
jp
pop
mov
jg
rolb
add
inc
mov
push
cmpsl
out
dec
add
add
popa
repnz
ds
jno
push
lds
fimuls
movsl
cs
dec
rcrl
add
add
push
xchg
inc
or
add
push
subl
arpl
add
sbb
pop
iret
push
cmc
push
fmull
mov
mov
add
fnstsw
dec
add
add
push
cmp
sbb
pushf
insb
jl
jecxz
vpcmpeqw
addb
add
jo
js
add
add
mov
and
test
add
add
inc
add
add
scas
test
pop
mov
sti
cmp
ss
add
mov
cmp
lds
jne
adc
jmp
movsl
jnp
rolb
add
rcll
push
pop
adc
mov
or
add
fs
jnp
add
add
mov
add
add
add
test
add
push
cmp
les
add
jnp
push
inc
add
add
lods
je
cmp
ja
push
jne
sub
push
jae
jmp
jmp
xchg
addb
add
out
sbb
sbb
iret
jbe
sub
cmc
sbb
adc
lea
pop
mov
xchg
shlb
adc
inc
add
add
dec
add
add
and
sbb
adc
jns
aam
cs
pop
cmpsb
lock
add
mov
inc
add
add
jne
jge
mov
int
mov
adc
add
xlat
jmp
mov
data16
jns
das
jle
adc
into
inc
rolb
cltd
or
add
push
into
dec
or
add
add
cmp
aad
jb
sbb
sub
inc
inc
jae
add
add
lods
js
sub
mov
fisubrs
ljmp
sarl
push
fcoml
mov
jo
sub
std
and
mov
lods
fistpll
push
lcall
add
pop
stc
xor
add
in
xor
mov
add
mov
pushf
xor
loopne
jp
lock
repnz
pushf
les
add
fiadds
add
sub
je
pop
fcmovnbe
pop
out
out
scas
ja
imul
add
repnz
push
in
std
mov
push
dec
cltd
scas
adc
mov
add
loope
pop
pushf
inc
adc
pop
jge
outsb
mov
mov
in
sub
loope
xchg
test
add
and
or
lods
inc
nopl
mov
sbb
jp
mov
sbb
add
add
aaa
mov
cwtl
fnstsw
decb
xchg
xchg
inc
adc
push
dec
adc
ja
cs
jns
adc
loopne
sahf
jecxz
xchg
pop
sahf
mov
add
add
add
jnp
pop
testl
add
add
sub
xor
cmp
insb
cs
mov
pop
cmpsl
inc
mov
add
add
stc
pop
hlt
mov
call
or
add
xchg
xor
jo
out
mov
mov
test
add
scas
mov
lret
lods
sbb
stos
das
push
xor
xchg
mov
ficoml
notl
and
mov
add
jp
dec
mov
add
add
xchg
faddl
cltd
xorl
sub
mov
pop
outsb
sub
add
add
testb
mov
add
add
mov
std
mov
mov
dec
outsl
sbb
cli
push
mov
ds
mov
add
sahf
out
xlat
add
add
insb
cmp
add
add
mov
add
add
add
xchg
or
arpl
cmp
stos
sbb
into
leave
addl
leave
sub
add
add
add
add
mov
push
in
mov
sub
cmp
pop
out
add
add
aas
sub
push
or
stos
inc
add
add
add
add
outsl
dec
add
add
sub
jnp
outsl
xchg
mov
nop
decl
in
push
and
in
dec
jnp
and
jns
adc
push
sub
dec
dec
add
add
and
and
imul
add
aam
xchg
in
aam
and
loop
push
or
mov
sti
in
bound
push
and
lea
and
jnp
fwait
aaa
addb
add
lcall
add
add
mov
xchg
push
aas
call
add
mov
jno
std
mov
jne
int3
add
add
loop
dec
cmp
imul
cltd
int
push
lret
mov
mov
mov
fadds
sarl
xor
das
push
inc
add
add
repz
add
jmp
mov
push
jmp
out
adc
or
and
cmpsb
jo
add
add
xor
pop
jns
jg
add
add
add
out
xlat
dec
pop
cld
rolb
add
nop
push
jecxz
mov
enter
fidivrs
or
add
mov
add
stos
xchg
dec
sub
dec
add
add
push
add
jmp
arpl
jb
push
pop
call
fdivrl
mov
add
add
mov
movsl
in
push
inc
add
add
fs
dec
jle
insl
in
mov
add
add
popf
lea
jecxz
inc
add
add
and
ss
add
loope
push
movsl
cmp
add
fcomi
and
xchg
repz
pusha
mov
pop
lret
lds
test
add
push
popa
out
cltd
insb
je
repnz
scas
pop
push
pop
in
xchg
test
push
pusha
sub
out
dec
stos
mov
shr
js
out
in
xchg
stc
popa
out
or
out
aaa
jl
cmp
add
and
fxch
mov
push
jmp
mov
push
or
jb
sbb
add
jne
popa
sub
les
add
and
add
lds
or
add
jg
lods
test
es
sub
jge
and
and
lcall
add
add
add
add
add
call
or
mov
push
lea
in
dec
push
mulb
push
push
imul
and
out
jne
hlt
test
and
add
add
xor
div
icebp
enter
cs
adcl
add
jae
dec
cmp
add
pop
fnstcw
popf
leave
test
add
cmp
aad
mov
jmp
add
add
test
popa
iret
mov
lcall
stc
inc
mov
cmp
pop
and
add
add
adc
add
add
dec
add
add
repz
fistps
push
cltd
xacquire
add
sbb
push
test
or
clc
ficoml
stos
into
sahf
jns
jecxz
xchg
mov
add
add
dec
int3
add
add
mov
xchg
jle
xor
mov
jg
push
xor
out
pop
mov
hlt
aaa
inc
xchg
scas
aam
into
fistpll
pushf
sbb
jecxz
mov
inc
mov
mov
out
or
dec
test
push
mov
psrld
pop
arpl
lods
shl
mov
add
add
add
add
mov
cmp
lret
mov
sub
mov
jbe
add
add
int
dec
pusha
inc
pop
nop
hlt
scas
lret
mov
pop
jp
fstl
add
add
jecxz
adc
sub
in
mov
add
fdivr
xor
jo
xchg
sti
mov
iret
ror
mov
add
add
mov
add
add
inc
jb
jmp
mov
add
fisttps
hlt
push
mov
gs
fdivrs
push
add
add
les
add
pop
mov
and
js
in
add
add
xlat
add
sub
in
or
add
jl
add
add
cmpsb
daa
or
sbb
pop
mov
cmpsb
cmp
aam
les
add
mov
stos
adc
pop
pop
pop
test
mov
pop
es
stc
push
xor
adc
cld
and
insb
and
pop
or
xchg
jo
sbb
mov
jge
dec
add
add
roll
mov
stc
adcl
add
and
fstl
or
add
es
test
add
imul
or
xor
adc
arpl
outsb
mov
mov
mov
nop
aam
push
arpl
adc
test
enter
in
adc
divl
cwtl
mov
je
lods
scas
shll
std
xor
push
fcoms
lea
or
jl
out
jo
test
cmp
mov
movsb
inc
xchg
adc
int
das
pop
gs
mov
notb
and
lahf
pop
xchg
ret
xlat
xor
into
push
xchg
add
sbb
fcmovbe
xchg
les
add
pushf
or
mov
add
add
call
out
pop
scas
and
arpl
movsl
mov
add
add
xchg
lods
xor
imul
mov
test
jge
imul
xchg
cmpsl
mov
fisubs
jo
xor
pop
lcall
cmp
inc
sbb
fistps
add
mov
out
lods
mov
add
out
jo
cmp
mov
cltd
and
xchg
inc
add
add
or
int
or
add
das
rorb
add
add
cwtl
std
push
mov
test
add
adc
repz
repz
inc
addr16
popa
lret
add
add
inc
int3
add
add
dec
mov
std
and
add
mov
test
jae
pop
mov
cmc
sbb
or
add
add
sub
pop
call
add
sub
ss
js
out
xchg
cltd
xchg
dec
lret
rclb
jno
cld
xor
mov
stos
cmpsl
cmp
cmp
sub
test
add
mov
pop
push
dec
mov
sub
xchg
jb
test
add
and
sbb
push
andl
pop
xor
mov
sbb
or
add
pop
popa
out
sub
and
in
mov
sbb
jne
lock
ja
mov
or
add
jo
push
cmpsb
les
add
push
mov
or
add
test
add
add
daa
push
jge
push
push
inc
faddl
mov
adc
add
in
mov
push
cltd
cmova
and
add
add
pop
aam
xor
mov
insl
pop
mov
add
add
add
sbb
shll
sbb
add
add
xchg
fstp
fisubrl
inc
add
add
outsl
movsb
mov
xor
les
add
lahf
stos
sub
scas
lahf
mov
adc
mov
push
scas
call
add
inc
loope
ds
scas
sbb
add
out
sbb
xchg
ficoml
xor
or
or
xor
insl
push
jecxz
push
mov
mov
add
aaa
add
add
mov
add
add
add
and
cltd
repnz
add
add
mov
add
and
test
or
add
mov
sub
and
ret
out
aam
jle
and
add
add
xchg
movsl
lahf
lahf
aaa
sti
lcall
add
das
pop
add
loop
pop
fwait
ss
xchg
jb
out
test
leave
es
dec
mov
add
add
cmpsl
mov
add
add
add
add
mov
mov
test
or
add
push
jmp
push
cltd
daa
jb
add
add
sbb
mov
mov
jp
mov
add
jno
out
scas
or
or
add
jl
movsl
pop
mov
hlt
clc
and
add
sub
pop
and
push
pushf
and
mov
add
add
repnz
pop
lock
mov
add
inc
add
add
mov
sub
or
fbstp
sbbl
aam
dec
cmp
mov
inc
push
jecxz
pop
test
lret
nop
insb
inc
out
and
jbe
push
popa
mov
jb
mov
push
mov
movsb
into
xor
and
push
iret
inc
mov
pop
jecxz
fcomps
aaa
mov
add
add
es
dec
jnp
jmp
inc
inc
add
add
mov
call
sbb
stos
out
lods
dec
outsb
sbb
rcrb
pop
cs
clc
out
rclb
add
inc
outsb
push
ja
xchg
jno
jp
pushf
fisubl
sub
xchg
or
add
cmp
xor
mov
sub
add
mov
push
inc
mov
ljmp
dec
scas
push
add
and
mov
add
pop
dec
mov
jns
add
add
add
pop
fcomp
mov
add
pop
in
cltd
sbb
push
mov
add
daa
push
adc
add
lds
addr16
aaa
out
ret
cmp
cmpsb
sbb
or
add
dec
sti
dec
sarl
ss
jo,pn
add
add
xchg
push
xor
lock
pop
inc
fimull
add
add
out
popf
addl
add
xchg
adc
out
push
push
cmp
iret
adc
ljmp
pop
jl
push
push
adc
push
push
pop
cmp
loope
enter
sub
inc
hlt
push
cld
inc
xor
fnstenv
std
mov
sbb
clc
push
pop
push
or
add
pop
jg
inc
sbb
test
add
mov
mov
push
pusha
lret
rolb
add
cltd
jns
mov
dec
in
mov
insl
es
push
pop
xchg
or
cmpsb
mov
add
add
lea
imul
test
mov
pop
sbb
mov
add
scas
pop
aad
add
add
jmp
pop
ret
jno
mov
add
add
cmp
cmc
out
lret
arpl
dec
std
cmp
pushf
scas
and
add
add
add
add
cmp
add
out
mov
cltd
bound
and
xchg
outsl
push
inc
or
add
push
dec
call
addb
fadds
stos
jle
mov
inc
and
xchg
loope
clc
test
pop
dec
es
mov
hlt
cmc
fisttps
mov
stos
pop
fdivrl
pusha
ret
lock
adc
add
mov
add
add
fstps
cli
or
pop
mov
pop
aaa
in
xlat
inc
in
dec
xchg
xlat
movl
aad
stos
fdivrs
in
sarl
sbb
cmp
cmpsl
push
pop
sbb
out
jne
ljmp
je
mov
movsl
push
add
add
add
mov
add
add
clc
test
add
or
add
add
hlt
cli
push
lods
lock
jo
adc
test
mov
cmp
sub
jo
jno
or
xlat
mov
nop
fimull
inc
add
add
aas
sahf
cmpsl
arpl
ret
ljmp
add
or
dec
add
add
sbb
mov
add
inc
mov
addb
add
or
add
pop
mul
add
add
test
jle
fs
mov
insb
fistl
jno
out
jmp
mov
rolb
adcl
fsts
in
lods
lret
test
add
pop
xchg
pop
and
mov
adc
xorb
mov
add
xlat
mov
push
loope
enter
or
add
add
clc
jg
push
rcrb
add
add
imul
xchg
and
ljmp
inc
xchg
xchg
pushf
dec
add
add
clc
jmp
xchg
jns
cmp
push
mov
add
pop
rcrl
push
rcll
popf
ror
popf
xchg
add
add
int3
add
add
ljmp
dec
mov
rolb
add
add
pop
add
rolb
add
and
mov
add
jecxz
xlat
xchg
sbb
push
imul
ds
mov
lcall
add
add
les
add
test
add
add
xchg
cmp
add
add
dec
frstor
stos
xchg
jbe
lock
dec
dec
mov
mov
pop
dec
cmp
sub
lret
xor
rolb
add
pop
mov
enter
dec
xchg
in
loope
mov
imul
aad
rclb
cmp
add
add
fxam
jle
mov
xor
in
or
jmp
or
pop
dec
xorb
js
add
add
repz
add
ret
imul
xchg
rcll
ffree
test
mov
xchg
adc
scas
or
add
lods
dec
jecxz
cmp
adc
repnz
jle
cld
data16
push
sbb
push
das
enter
sub
neg
repz
cmp
outsl
clc
mov
mov
pop
xchg
les
add
fbstp
pop
or
add
push
xor
lcall
lods
mov
out
sti
cmp
icebp
js
xor
push
mov
cwtl
cmp
xchg
dec
add
add
iret
fcmovu
imul
sub
lock
mov
xchg
xchg
and
mov
adc
add
add
add
pop
push
fimull
inc
inc
leave
lcall
testb
mov
push
pop
aad
add
add
mov
add
repnz
movsl
dec
add
add
js
jge
jnp
lcall
jle
sub
pop
outsl
out
push
xchg
int
dec
jns
and
lcall
int
hlt
push
cmp
pop
push
or
add
call
repnz
inc
sub
movsl
push
sub
mov
add
out
sbb
movsl
nop
iret
out
add
add
mov
mov
mov
add
pop
in
add
add
xchg
test
lods
mov
push
add
add
mov
dec
fwait
mov
add
jp
stos
jo
push
inc
xchg
ljmp
js
xor
add
sahf
test
jp
stos
std
pop
push
pop
stos
jg
add
add
movsl
pop
icebp
addb
add
hlt
les
add
mov
cmp
dec
popa
jo
test
fidivl
sbb
sub
mov
add
add
out
add
add
loope
popf
jns,pt
inc
add
add
fcoml
and
sbb
lret
rcll
lret
dec
add
add
add
add
push
dec
in
pop
cli
pop
push
ja
aaa
push
push
divl
sahf
lock
jnp
test
inc
stc
pop
sbb
jbe
mov
mov
add
add
pop
push
jge
cltd
xchg
dec
loope
test
add
repz
and
xchg
mov
in
mov
out
fbld
mov
cli
or
push
adc
pop
jae
cli
daa
aad
inc
sahf
push
dec
addb
add
xor
add
flds
js
out
mov
add
sbb
or
add
inc
mov
xorps
in
xchg
cmpsl
enter
clc
jnp
fadds
push
add
add
add
dec
decl
mov
js
outsl
push
dec
add
add
mov
out
ror
ja
or
add
push
test
adc
rorl
add
inc
mov
out
shll
jno
inc
add
add
leave
js
and
loop
push
mov
sbb
adc
mov
push
fwait
jno
adc
inc
push
or
rolb
add
addb
add
jecxz
cmp
pop
leave
mov
addb
add
jne
sbb
sbb
pushf
xor
and
ljmp
and
pop
mov
mov
add
jno
cmpsl
and
maskmovq
aad
xchg
fildll
inc
add
add
sbb
test
sbb
add
add
inc
jbe
insl
bndstx
test
add
add
jle
das
lcall
int3
add
add
stos
mov
cs
cmp
icebp
out
lods
cmc
xor
ret
add
add
ds
out
xor
add
lds
xor
inc
dec
aaa
out
mov
jmp
ret
mov
adcb
sbb
jns
add
add
mov
clc
xchg
idiv
sbb
repz
mov
sbb
mov
adc
add
jbe
call
add
inc
cmp
adc
add
add
sub
les
add
ror
add
jg
dec
add
add
sti
aas
shrb
add
add
xor
mov
or
dec
int
push
dec
out
mov
inc
inc
add
add
pop
jbe
les
add
popa
pop
dec
add
add
fsubrs
add
add
push
les
add
mov
add
jb
int3
add
add
xchg
inc
popa
adc
jmp
into
pushf
inc
mov
dec
mov
cmp
add
test
pop
dec
out
add
mov
add
adc
cmpsl
cmc
cmp
mov
add
add
sub
inc
push
lea
push
inc
jae
nop
sbb
rcrb
jo
add
insb
incl
lods
imul
cmp
or
pop
push
ljmp
bound
xor
popf
pop
push
popf
clc
adc
pop
insl
jmp
stc
or
insl
lods
pop
fnstsw
inc
clc
leave
and
add
add
and
call
xchg
mov
add
pusha
add
add
add
sbb
lahf
xchg
aas
mov
add
push
xlat
push
dec
add
add
loop
std
jl
lds
add
add
fldcw
pop
dec
add
add
mov
inc
add
add
push
imul
js
adc
xchg
ja
rolb
add
das
aam
cld
icebp
pop
cmpsb
sbb
xchg
nop
cmp
sahf
xor
add
stos
jb
std
cmp
mov
jbe
out
pusha
addr16
inc
imul
loop
or
add
or
in
cmpsb
add
fsubr
inc
nop
cwtl
xor
adc
cmp
add
add
fbld
mov
xor
or
add
dec
in
je
outsl
jnp
adc
dec
jg
mov
add
out
loop
lods
xchg
dec
pusha
lcall
xchg
lock
push
xor
pop
or
popf
xchg
test
cmpsl
scas
aam
add
add
roll
cltd
xor
add
bnd
out
dec
add
add
test
add
push
or
enter
movsl
add
push
or
ja
fnstenv
and
add
adc
in
outsb
addr16
imul
add
sub
mov
or
xchg
enter
jns
jg
imul
xchg
mov
sbb
psadbw
pop
adc
cltd
fnsave
add
nop
mov
push
lea
rcrb
push
mov
sub
sti
inc
stc
xchg
jnp
insb
sbb
movsl
cmp
jns
add
or
xlat
xchg
add
adc
jmp
shll
or
push
mov
cmp
add
add
inc
xchg
or
pushl
push
enter
pop
sarl
js
int3
add
add
cmp
jle
sub
aaa
ljmp
add
sub
mov
add
iret
popf
lea
mov
add
addb
add
mov
out
in
jg
inc
outsb
cmp
ljmp
mov
ret
ja
jl
andb
cs
fidivrs
clc
mov
add
add
add
push
outsb
and
test
add
out
add
push
fistps
movsb
arpl
lret
inc
int3
add
add
add
add
cmp
not
data16
lahf
xor
andl
mov
leave
add
mov
out
dec
dec
add
add
rcll
test
add
add
push
inc
add
add
add
add
cmp
inc
add
add
add
mov
fisubrs
sbb
adc
or
add
gs
insb
or
xor
jmp
movsb
into
fcomp
fcoml
dec
lea
push
les
add
sbb
add
das
cmp
dec
ss
repnz
cmp
push
dec
bound
insl
add
das
in
sahf
mov
add
add
clc
out
stos
mov
outsb
lcall
stos
ljmp
xor
stos
das
flds
add
lahf
mov
cwtl
sbb
push
mov
ds
test
mov
lea
ret
push
inc
addr16
repz
daa
mov
jl
or
fadds
jne
cmp
inc
push
js
addr16
pop
push
mov
loop
mov
out
sub
ss
push
add
add
xchg
sahf
incb
inc
add
add
add
hlt
pushf
arpl
push
add
cmc
mov
add
add
xchg
xchg
lahf
pop
out
mov
ret
les
add
es
push
adc
add
add
test
jmp
mov
mov
scas
addr16
dec
add
add
mov
add
add
add
loopne
rcr
push
int
in
add
add
cwtl
dec
add
add
add
add
add
or
jbe
sbb
rclb
ret
or
fs
cmp
insb
xor
or
mov
pop
add
add
cmpsb
add
add
jp
push
dec
or
add
xor
icebp
xchg
add
pop
mov
and
xchg
xchg
jmp
add
xchg
popf
xor
stos
push
or
push
jmp
or
iret
mov
pop
sbb
sbb
fistpll
cmc
xchg
adc
call
int
pop
inc
push
out
test
add
loopne
cmpsb
and
imul
add
movsb
lahf
pop
cld
out
mov
stos
insb
adc
adc
sbb
xchg
stos
in
push
and
mov
push
xchg
adc
add
add
adc
sbb
add
fwait
pop
xchg
decb
add
add
sub
loopne
xcrypt-ofb
cmpsl
sub
lret
outsb
mov
jg
dec
xlat
insb
loopne
in
mov
sti
nop
sub
cwtl
out
mov
jecxz
pop
movsb
cld
inc
add
add
ds
add
adc
mov
jg
ss
das
je
lret
repz
arpl
or
add
add
cmp
inc
push
call
add
add
add
push
bound
pusha
sbb
xor
xchg
and
ret
pop
lret
sti
xor
jne
mov
cmp
loopne
adc
testl
add
cs
mov
add
lret
je
adc
rolb
add
repnz
adc
test
add
add
ss
xor
ss
push
sbb
addb
add
shl
jecxz
sbb
mov
outsl
pop
sbb
fnsave
add
add
lahf
imul
aaa
popf
xchg
and
mov
add
jo
pop
shrl
icebp
cltd
add
add
sub
pop
and
xchg
cmp
icebp
cmp
push
icebp
add
add
add
call
add
add
pop
push
ret
lcall
add
add
inc
enter
jae
aas
cmp
daa
jae
push
pop
pop
sbbl
popf
mov
pushf
das
aas
add
add
ret
ja
jno
mov
idivl
adc
nop
sbb
lea
push
imul
pop
pop
in
lcall
insl
push
jecxz
insl
cli
or
push
add
push
imul
or
add
push
ljmp
add
add
rolb
add
fmull
bound
mov
mov
xchg
out
dec
sub
cmc
frstor
xchg
jnp
int3
add
add
pop
mov
arpl
cmpl
add
lret
shrl
sbb
mov
jo
in
xchg
dec
insb
mov
pushf
sub
push
mov
push
xchg
inc
dec
fnstcw
add
add
inc
popf
and
les
add
push
lods
negl
clc
pop
lea
inc
inc
adc
outsl
clc
aad
mov
xor
aaa
jmp
xor
addr16
in
add
inc
sbb
and
lods
fsin
fsubrl
push
xor
leave
out
mov
mov
in
mov
add
cmp
jl
add
add
mov
inc
into
fldcw
stc
loopne
idivl
repz
sbb
mov
xlat
mov
jno
out
push
loop
into
sbb
stc
add
add
push
repz
adc
mov
in
imul
xor
sub
movsl
and
add
add
shrl
add
aas
imulb
jnp
sbb
cmc
mov
add
repnz
leave
mov
mov
add
add
cwtl
test
add
add
orl
pusha
jno
int3
add
add
add
sti
inc
add
add
inc
pop
pop
mov
adc
xchg
cld
pop
outsb
sbb
add
add
or
push
mov
mov
push
mov
add
add
popf
and
jo
lcall
add
add
add
ds
mov
js
lea
movsl
loopne
mov
sub
dec
cltd
pop
loope
add
add
jbe
addb
add
mov
call
fs
fdiv
push
mov
xchg
dec
pop
pop
je
xor
cld
fmulp
xchg
ds
fisubrl
add
jge
adc
jl
add
add
add
add
pop
add
add
add
add
out
shrl
popa
sbb
add
jle
sbb
ret
push
repz
outsb
loop
xchg
cld
cmp
dec
lret
outsb
mov
out
xor
mov
and
sub
xor
add
add
cmp
jge
jp
aaa
lods
mov
jp
add
add
ret
lods
stc
adc
add
testl
int3
add
add
or
aaa
mov
xor
add
add
daa
mov
pop
dec
test
sub
push
sahf
dec
add
add
mov
mov
add
mov
push
dec
add
add
dec
add
add
dec
add
add
aam
pop
cld
mov
iret
leave
popa
fimull
cwtl
mov
dec
add
add
shrl
inc
ljmp
adc
gs
pop
movsl
pop
mov
dec
sbb
loop
in
add
in
fsubrl
jmp
add
and
movsb
les
add
pop
xchg
add
or
cmp
pop
inc
sub
add
add
add
pop
loop
add
add
jl
iret
xor
and
adcl
and
nop
and
jb
cmp
fiadds
add
push
dec
add
add
add
inc
add
add
rolb
add
xor
jb
jmp
out
push
fwait
jb
mov
cmpsb
push
ror
paddq
sub
test
cmc
call
sbb
ja
jge
pop
test
add
in
je
add
add
outsb
push
gs
jbe
je
sbb
hlt
jp
out
jae
in
push
push
mov
sbb
dec
into
push
xor
test
add
jp
add
add
add
add
test
mov
ljmp
decl
xchg
aad
sarl
dec
add
add
dec
xchg
mov
outsl
scas
and
or
add
add
fdiv
xchg
push
push
xchg
add
add
add
add
add
pop
push
pop
jge
mov
pop
xor
and
arpl
das
iret
cmp
mov
shrl
xor
mov
add
or
push
add
add
orb
adc
pusha
xchg
call
or
add
push
lds
cmp
lahf
and
and
add
add
add
ficoms
inc
push
int
dec
mov
mov
data16
add
add
pop
xchg
sti
clc
jl
cmp
repz
ror
xchg
das
cmp
test
rcrb
lods
sub
cwtl
imul
or
add
test
fs
cmp
adc
movsl
stos
sbb
fidivrl
test
add
add
add
cli
daa
mov
jge
lods
js
les
add
popl
add
dec
or
add
clc
bnd
jecxz
jnp
or
add
rcll
push
out
jmp
ret
test
add
rcll
lahf
add
nop
add
shll
add
jb
or
jno
pop
in
add
insb
pop
dec
add
add
add
repz
pushf
js
add
add
mov
lret
push
imulb
imul
fwait
outsl
test
std
cwtl
add
mov
and
xchg
push
nop
push
pop
mov
mov
mov
add
mov
pop
sar
inc
push
dec
addr16
mov
add
jl
sub
aas
push
mov
adc
push
xchg
out
rolb
add
lock
js
jmp
icebp
jb
sbb
rol
clc
mov
aam
arpl
aaa
fisubs
xchg
sub
xor
cmc
xchg
into
sub
add
add
add
pop
inc
cmp
addl
mov
pop
je
mov
add
push
pop
inc
push
loop
mov
add
mov
int3
add
add
fsub
mov
add
add
add
add
pop
in
pop
ds
icebp
ret
jnp
popa
std
nop
andl
dec
sahf
mov
pop
dec
shlb
add
add
or
add
jp
aam
outsl
addr16
sbb
aam
sub
add
add
jle
seta
pop
es
dec
fwait
loope
loope
mov
xchg
or
stos
sbb
fists
pop
jne
shlb
movsb
cmp
add
lret
add
imul
arpl
mov
push
push
mov
add
add
je
jns
xor
sbb
cmpsl
cmpsl
xor
jle
add
add
data16
sub
pop
pop
aam
inc
jmp
dec
add
add
fsubl
cmp
and
fmulp
dec
pop
jnp
shll
std
dec
add
add
add
add
adc
sub
add
add
add
test
add
cli
imul
ljmp
add
add
add
add
negb
cmpsb
push
sti
jp
shll
jae
dec
bound
jle
dec
add
add
gs
mov
out
aad
add
insb
mov
fiadds
add
clc
mov
add
sbb
jno
xchg
les
add
mov
add
orl
add
add
shrl
jbe
push
xchg
push
lods
pop
jg
mov
add
add
xchg
add
mov
mov
jb
into
pop
cmc
aam
add
xor
fdiv
pop
cmp
movsb
fidivrs
jns
clc
or
add
jp
jbe
aas
jecxz
mov
out
imul
mov
add
add
sbb
stos
add
and
pop
aas
popa
repnz
bound
pop
xchg
pop
enter
pop
in
ljmp
add
insl
mov
jns
es
mov
xor
cmc
int3
add
add
ret
das
das
mov
js
shll
inc
xchg
mov
outsl
adc
scas
mov
add
mov
mov
add
add
xchg
loope
push
inc
add
add
push
les
add
fs
out
fstpt
rcll
sahf
xchg
addb
add
je
inc
in
push
scas
movsb
push
ja
ss
insl
rcll
aad
mov
jbe
cmp
fisubl
xor
mov
scas
sbb
in
ficomps
and
xlat
outsb
outsb
test
push
or
adc
add
cmp
push
xchg
fistps
xchg
adc
decb
out
fdivs
mov
cmp
add
ljmp
cli
cmp
cltd
inc
add
add
push
sub
insl
xor
ss
out
in
stc
sti
test
jne
jmp
rcrb
sub
out
jae
pop
sub
mov
or
add
inc
rolb
add
cmp
test
and
lods
shll
cmpl
add
add
lahf
adc
push
mov
dec
push
mov
cmpsb
jl
lea
xchg
dec
cmp
dec
or
in
or
popf
test
add
dec
inc
sbb
jmp
aad
add
jno
imul
cmp
fstpl
xchg
outsl
push
inc
out
add
add
jmp
aaa
jmp
cmp
jmp
add
add
add
das
testb
mov
je
sub
imul
add
add
mov
std
mov
or
dec
daa
push
inc
pop
addr16
test
pushf
jge
dec
sub
decb
out
rclb
outsb
xor
fmuls
dec
add
add
dec
add
add
push
push
sbb
ja
or
add
dec
add
add
out
push
test
add
lods
adc
xchg
add
and
pop
rcll
xchg
lret
mov
loope
cld
jge
push
addr16
or
setns
movsl
xor
jle
nop
arpl
mov
pop
lock
push
dec
push
sub
les
add
out
jle
inc
push
out
nop
pop
fs
pushf
mov
or
add
call
add
insl
xor
mov
mov
std
jl
rorb
inc
add
add
enter
leave
and
and
add
add
movsl
or
mov
add
pushf
xor
add
push
testb
add
mov
and
imul
push
cmpsb
sub
gs
out
fimull
int
pop
push
mov
push
call
add
cmpsl
jb
arpl
jnp
sub
imul
add
addr16
lock
jmp
add
add
bswap
xchg
xor
cmpsl
fldenv
add
dec
fxch
xor
imul
add
add
fldcw
mov
loopne
test
cli
push
xor
jle
push
outsb
pop
xor
or
dec
cmpps
xor
xlat
cmpsl
enter
jge
cwtl
or
call
add
xchg
mov
xchg
rclb
add
add
test
add
clc
daa
mov
push
jno
test
push
insl
sub
movsl
lahf
sahf
push
mov
ret
enter
lcall
xchg
jle
xchg
filds
add
inc
add
add
les
add
inc
add
add
jecxz
arpl
cmpsl
cwtl
movsl
repz
pop
xchg
and
add
add
negb
cmpsl
pop
cmp
imul
test
lea
cltd
fists
jae
hlt
mov
add
shl
aaa
lret
sahf
jae
cwtl
lock
push
xchg
adc
mov
movsb
outsl
test
stc
fimuls
add
push
inc
into
out
aam
arpl
test
into
dec
mov
rcll
push
jnp
cmp
leave
cmpsl
or
mov
or
subl
je
hlt
int3
add
add
jns
push
fists
fisubrl
fdiv
cmp
jp
push
out
js
pop
cmpsb
inc
cwtl
mov
xor
ds
imul
mov
pop
fistpll
add
add
add
add
into
jge
inc
adc
std
les
add
push
addr16
icebp
mov
push
pop
push
lea
fistpl
pop
xor
cmp
outsb
iret
pop
stos
xor
pusha
pop
mov
push
icebp
mov
add
inc
jle
pop
mov
out
nop
dec
add
add
arpl
lods
cwtl
sbb
addb
add
rcll
or
add
cli
fldcw
dec
mov
mov
add
add
ss
jbe
add
add
jns,pn
or
add
fisubl
sbb
mov
sbb
and
push
pop
lret
ficoms
aas
sub
mov
add
aam
jno
mov
fs
dec
add
add
rolb
add
mov
mov
sbb
fdivp
pop
push
dec
call
and
mov
add
add
xchg
mov
cs
dec
add
add
mov
push
mov
add
scas
fcmovnbe
pop
inc
stos
out
add
add
rcrl
mov
imul
xchg
dec
add
add
cltd
sub
add
pop
out
inc
xor
jp
xchg
cmpsl
mov
mov
xchg
pop
sbb
mov
add
push
das
push
mov
add
movsl
sbb
fsts
sub
add
add
test
jmp
mov
sub
add
add
xor
sub
pop
mov
ficompl
adc
scas
adc
nop
inc
mov
add
add
add
add
mov
cwtl
fst
inc
add
add
mov
into
sahf
jno
sbb
daa
cmp
stos
xchg
adc
sub
add
add
or
add
xor
rolb
add
jbe
xchg
sarb
add
add
or
jmp
mov
add
dec
add
add
add
add
or
movsl
into
aam
add
add
jnp
mov
pop
xchg
pusha
push
sub
rclb
sbb
mov
adc
xchg
test
std
sbb
fisttpll
adc
icebp
jge
mov
add
cmpsb
and
jge
jo
add
add
ret
xor
mov
out
icebp
xlat
sbb
add
add
fistpll
and
cmp
lea
push
imul
xlat
jecxz
add
add
jne
jg
nop
push
add
add
out
pusha
cmp
jne
aam
push
fs
add
add
pop
or
js
push
mov
mov
mov
add
add
add
add
add
add
bound
xchg
mov
arpl
enter
imul
and
movsb
xchg
cmp
add
add
leave
stos
aam
jne
bnd
mov
dec
ljmp
mov
test
add
mov
add
add
push
movsb
out
add
add
sbb
flds
add
add
xchg
loope
or
add
dec
arpl
mov
pop
lea
push
ret
dec
cmp
adc
ret
aaa
es
jecxz
cli
pop
pop
mov
repz
cs
and
lods
aad
push
xchg
icebp
cmp
dec
add
add
sti
pusha
inc
add
add
addb
add
imul
aaa
add
in
gs
add
add
mov
cmpb
inc
mov
decl
imul
jns
ljmp
add
data16
cli
inc
out
outsb
imul
out
icebp
mov
inc
ret
push
std
popa
hlt
nop
psllq
fnstenv
cmp
xor
repnz
jg
arpl
ss
cltd
push
movb
fadd
add
add
xor
add
add
push
push
cmp
inc
add
add
int
cmp
inc
xchg
pop
sub
add
inc
add
add
xchg
push
and
nop
cmp
addb
add
loope
fisubs
scas
push
add
add
test
out
push
adc
inc
mov
jecxz
push
xor
stos
push
push
jmp
xchg
xor
and
adc
mov
jno
scas
lods
dec
bound
movsl
jne
jl
in
add
add
repnz
push
sbbl
shll
inc
fstl
dec
push
ret
dec
sahf
cmp
add
add
enter
jge
rorl
add
add
sahf
sub
das
dec
out
neg
lods
fdivrs
cmc
pop
mov
xor
mov
popa
jle
dec
add
add
out
stos
pop
or
xor
add
pop
fmull
xlat
clc
push
fistpl
pop
jle
test
add
add
fcmove
insb
ficomps
fcmovu
dec
sub
addr16
and
or
add
std
push
mov
mov
lret
sbb
movsl
cmp
push
push
jnp
addb
add
jge
lret
jnp
cmp
mov
add
add
in
dec
mov
sub
and
inc
add
add
arpl
cld
lcall
xchg
xchg
in
pop
shlb
jl
sbb
sub
add
add
or
push
fucom
aas
push
ss
pop
and
fstps
pop
leave
jge
lods
rclb
loopne
cmp
xor
pushf
xchg
add
es
xchg
push
hlt
ret
push
stos
aam
fsubrl
stos
xlat
loope
xor
xchg
sarb
mov
int
push
sbb
sbbl
in
inc
ljmp
mov
inc
add
insl
mov
js
push
icebp
push
or
jp
lods
ss
gs
cmp
or
add
sub
nop
test
push
inc
lock
ret
jmp
daa
adc
jmp
add
mov
popa
fidivrs
lds
sti
pushf
sbbl
das
icebp
movsl
mov
sub
add
sub
push
xchg
lret
or
add
hlt
das
mull
jp
jp
and
add
pop
sbbl
push
loopne
sub
scas
pop
mov
add
adc
loopne
mov
add
mov
mov
add
decb
xchg
adc
add
add
add
inc
add
add
sbb
shrb
add
add
sub
mov
add
xchg
add
add
scas
xor
adc
pop
addb
add
adc
movsb
inc
xchg
repz
add
mov
in
sti
xchg
sahf
mov
fdivrl
iret
add
add
cmp
jno
or
adc
jle
push
and
jnp
out
fidivs
add
add
repnz
dec
jo
into
or
sub
sub
sbb
cld
pop
mov
add
mov
xchg
int3
add
add
test
push
mov
test
add
inc
lods
mov
cmp
fldpi
dec
imul
dec
jae
cmp
jp
add
add
jmp
push
mov
cltd
test
and
mov
add
in
mov
in
popa
inc
les
add
jl
clc
mov
adcl
js
stos
out
inc
add
add
lock
in
xchg
mov
add
sub
sbb
adc
push
or
aad
pop
ljmp
and
test
sub
add
jl
push
sahf
and
add
cltd
push
or
mov
shlb
xor
ret
call
fsubr
jbe
add
add
movsl
pop
aad
arpl
sbb
ret
sbb
jmp
dec
lcall
movsb
aam
adc
jg
lock
push
nop
mov
add
test
out
mov
movntq
mov
add
adc
and
imul
adc
fwait
or
add
neg
fimuls
ss
out
or
add
xorb
out
into
insl
or
add
mov
outsl
fisttpll
movsl
loopne
sub
add
add
andl
xor
pop
lods
push
push
xchg
scas
cmc
mov
sti
add
add
inc
rolb
add
xchg
pop
dec
jae
mov
mov
add
mov
pop
inc
add
add
sbb
sbb
mov
add
adc
cmp
inc
insl
fwait
sub
int
add
add
add
add
mov
test
repnz
add
out
loop
push
mov
clc
int
add
add
lds
out
imul
add
push
add
add
add
add
cmp
cmpsb
mov
dec
add
add
mov
test
add
mov
cwtl
or
push
jno
xor
push
xor
sbb
shrl
sbb
dec
add
add
mov
shl
mov
pop
lods
rolb
add
sub
into
mov
push
mov
adc
arpl
subl
fisttpl
pop
in
push
pushf
or
fnstcw
mov
dec
jge
xchg
fistl
dec
sbb
mov
inc
add
add
inc
lods
ja
xchg
pop
insl
add
xchg
xor
les
add
add
test
add
add
and
sub
mov
cli
mov
or
add
loopne
jne
lahf
ss
push
pop
ret
push
jno
jg
dec
jecxz
and
add
mov
add
add
or
add
xor
mov
adc
out
inc
rol
and
inc
es
adc
sub
dec
lcall
fcoml
loope
or
add
test
scas
cmp
movsl
jl
jl
xor
add
add
cwtl
fimull
mov
and
xor
add
jnp
add
add
add
inc
iret
data16
fiadds
and
movsl
inc
or
loope
sahf
jae
sbb
cmc
push
adc
dec
shlb
enter
std
fisttpll
push
rcl
popf
pop
js
push
inc
stos
sti
or
loopne
mov
add
xchg
push
xchg
push
stos
clc
lds
jmp
mov
in
xor
add
add
sub
add
sbb
ret
in
sbb
push
mov
add
add
cmpsb
sub
add
add
mov
add
pop
outsb
jo
xor
mov
in
into
ja
push
js
int3
add
add
cmp
pop
stos
pop
in
pop
ret
stc
sbb
or
lcall
popa
sub
cmpsb
mov
mov
pop
addb
add
stos
int
std
xor
jp
jge
xchg
mov
and
dec
sbb
sbb
add
inc
stos
jmp
add
cmc
adc
cmc
xchg
fldenv
inc
add
add
mov
and
inc
pop
cmp
mov
mov
dec
adc
add
add
cli
inc
out
stos
aad
push
insl
into
sub
add
add
mov
shll
adcb
push
in
fisubs
mov
add
ret
addb
add
xor
add
add
pop
inc
pop
jno
add
add
adc
xor
fdivl
push
seta
enter
xor
add
add
jne
cmp
adc
add
aam
mov
ss
fs
xor
mov
aas
mov
sub
mov
inc
arpl
stos
fwait
jecxz
loope
adc
in
lds
sbbb
lret
pop
add
mov
mov
mov
add
popf
mov
testb
addr16
mov
add
outsb
pusha
jp
dec
cwtl
push
adcl
add
push
xchg
in
mov
sbb
jnp
mov
push
xor
int3
add
add
jno
out
stos
clc
jno
movsl
movsb
adc
or
aaa
mov
push
in
aad
test
xchg
test
add
add
in
mov
mov
fidivs
push
in
aam
xchg
or
add
cmpsb
insb
push
adc
aaa
sub
test
add
cli
jne
test
push
fistps
or
outsb
repnz
hlt
stos
mov
and
add
push
lds
mov
dec
push
mov
add
push
sub
push
ret
scas
aaa
les
add
dec
jns
adc
cmp
and
mov
add
pop
xchg
shlb
sbb
mov
lds
add
add
add
add
lea
pushf
inc
je
add
add
jae
sub
add
js
sbbl
cmpsl
pop
dec
ja
sbb
clc
and
mov
add
testb
mov
lret
sub
add
add
faddl
fstpt
xchg
sub
ret
fstpt
ja
icebp
xchg
lea
mov
cli
jbe
sbb
pushf
xchg
daa
jecxz
in
push
lret
inc
das
in
mov
arpl
xlat
push
fidivrl
dec
cmp
lods
aaa
xor
add
ret
push
xchg
rcl
rep
dec
arpl
cs
add
add
and
add
jae
test
test
stos
pop
mov
adc
ret
in
stos
inc
add
add
and
loope
mov
mov
lret
outsl
les
add
mov
add
sub
add
xor
cmp
pop
lret
push
push
adc
inc
lahf
lock
add
add
cs
imul
dec
dec
add
xor
sbb
mov
jge
cwtl
mul
push
dec
sub
add
add
add
mov
add
add
je
and
ficoms
in
lahf
xor
lahf
sub
insb
cmp
sub
outsb
hlt
pushf
mov
dec
add
add
pop
fwait
ss
test
stos
jnp
hlt
jl
daa
xor
mov
jecxz
add
add
stos
fadds
scas
outsl
imul
add
add
daa
test
std
fiadds
add
shll
adc
push
push
fcom
pushf
mov
jle
dec
add
add
xchg
pusha
jecxz
int
jbe
pop
dec
sub
add
add
push
pop
adc
add
fwait
or
insb
inc
mov
imul
mov
sub
ficoms
test
mov
add
add
imul
and
pushf
pop
dec
loopne
insb
push
xchg
mov
add
and
pop
or
insl
mov
stc
pop
outsl
stos
push
inc
add
add
inc
ds
lahf
pop
push
pop
cmp
pushf
enter
loop
lods
cmp
in
and
push
loopne
push
lods
aam
lock
pop
jmp
push
mov
fadds
add
jbe
adc
add
out
scas
jns
cmpsl
lea
sbb
dec
addb
add
nop
fimuls
out
push
addr16
jo
adc
mov
cwtl
adc
adc
push
shrl
pop
test
add
adc
jl
or
add
dec
jp
cli
jns
mov
icebp
jp
push
clc
xchg
leave
push
shl
lahf
or
add
xorl
adc
add
add
pop
or
add
in
lret
lods
mov
sub
sub
ds
loope
add
add
in
xor
mov
adc
xchg
into
mov
mov
clc
xor
xlat
push
jmp
imul
sbb
add
add
xchg
gs
lds
test
push
and
out
rcrb
jb
mov
lahf
out
mov
inc
es
loope
mov
dec
jbe
add
add
out
lock
jb
dec
repnz
add
add
rolb
add
fnstcw
ja
mov
jo
mov
push
pop
iret
add
sbb
or
mov
negb
add
mov
jge
div
test
out
and
xor
mov
mov
pop
push
lcall
and
add
arpl
inc
sub
push
mov
cld
push
mov
add
add
add
add
sbb
andb
or
add
stc
stos
jae
pop
aad
add
add
mov
add
ljmp
cmp
shll
shrb
xchg
push
in
stos
test
loope
cwtl
lahf
scas
dec
add
add
add
add
xchg
outsb
pop
adc
jae
xor
pusha
fcmovnbe
adc
fldt
aas
dec
add
add
fdivrs
fs
sbb
push
ret
sbb
mov
or
add
mov
repz
push
movsb
push
push
imul
mov
push
xor
inc
or
mov
add
push
fabs
sarl
icebp
or
test
jbe
pop
xchg
lret
fnstenv
pushf
fnstenv
push
in
sbb
pop
enter
xor
pop
push
pop
aas
insl
inc
push
rolb
add
add
add
das
mov
sub
adc
sub
cmp
fildll
inc
add
add
cmc
and
pop
lods
cmpsl
stos
jle
js
jo,pn
stos
and
inc
add
add
push
nop
push
add
jmp
movsb
leave
dec
and
and
sub
nop
das
push
repz
cmpsl
adc
leave
pop
leave
ret
pusha
cmp
sub
xchg
in
add
add
aaa
rclb
add
pop
add
add
cltd
lods
pop
ret
daa
inc
mov
data16
add
outsl
movsl
aad
add
sub
cmp
push
subl
cmpsb
data16
negl
es
dec
std
out
xor
int3
add
add
add
inc
icebp
rorb
sahf
fs
stos
xor
ret
sbb
sub
popa
in
fstps
scas
lcall
add
jb
mov
xor
inc
mov
nop
jne
imul
add
add
jne
sub
out
pop
adc
pusha
hlt
sbb
std
mov
js
fistpl
std
and
mov
mov
repnz
push
pop
scas
fbld
xchg
sbb
lea
fimull
inc
je
inc
add
add
loope
cld
int
imul
ret
mov
repz
lods
nop
cltd
jnp
push
loop
adc
add
cmc
pop
out
pusha
mov
rcrb
mov
inc
divl
add
add
sub
add
inc
add
add
cmp
inc
xchg
addb
add
out
mov
addl
iret
out
or
je
fcompl
add
add
xor
jo
jns
sub
add
add
mov
sub
add
add
add
add
jae
imul
ds
cli
ficomps
pop
iret
sbb
mov
xchg
mov
lds
mov
add
ret
test
add
sub
call
pop
adc
hlt
inc
out
mov
adc
add
add
cmp
inc
push
test
es
ds
add
add
dec
cltd
pop
jecxz,pt
ss
addl
testl
lods
stos
xchg
jg
shrl
scas
lret
aad
icebp
gs
fdivr
test
arpl
aaa
scas
sub
das
sub
out
test
pop
add
add
add
add
add
jno
rcll
movsb
fimuls
push
or
cmp
mov
rolb
pop
fcomps
add
push
sbb
cmpsb
mov
pusha
or
add
imul
add
add
add
fisubs
cmp
dec
add
add
add
test
add
xor
pop
inc
add
add
jnp
cmpsb
push
push
jne
test
add
jae
aad
int3
add
add
loope
jno
jo
addb
add
cltd
je
add
and
add
add
sbb
add
adc
jg
pop
xor
lock
dec
dec
and
jbe
adc
std
mov
subb
push
fsts
fnstcw
test
add
sbb
push
mov
mov
mov
movsl
xchg
test
add
xor
add
add
aaa
into
mov
push
enter
ljmp
mov
bound
cld
stos
stos
lock
xchg
ja
insl
cli
xchg
stos
mov
add
enter
lret
mov
adc
or
add
add
add
les
add
and
mov
add
addr16
inc
xor
add
pop
js
xlat
jp
sub
sbb
es
push
xlat
cld
mov
add
std
mov
out
inc
sub
stc
mov
out
mov
mov
subb
in
imul
sub
gs
pop
dec
sbb
inc
stos
push
xchg
cmp
daa
adc
push
addr16
jl
or
add
push
pop
jne
aas
sub
scas
mov
pop
xchg
pop
jmp
jnp
push
add
add
mov
push
repz
add
add
jg
stc
inc
hlt
inc
test
add
leave
jmp
add
add
das
inc
add
add
dec
add
add
imul
cs
xchg
popl
add
xor
add
add
push
adc
shll
add
add
jg
pop
and
or
fidivrl
pop
push
imulb
fstpt
push
lcall
inc
or
add
pop
cmpsl
movsl
in
lcall
add
add
pop
enter
mov
stos
push
mov
test
rol
daa
sbb
add
add
add
insb
bound
jge
fcomp
push
xchg
and
add
add
js
pop
xchg
and
dec
add
add
jecxz
sub
test
cmp
cmc
aad
std
lea
pushf
jge
sbb
xchg
xlat
aad
stc
add
add
dec
xchg
addb
add
or
add
sahf
or
call
dec
cmp
out
push
in
xchg
adc
fcomp
adc
add
add
push
mov
loopne
pop
xchg
inc
add
add
pop
add
mov
add
adc
mov
jo
mov
dec
lahf
out
mov
add
add
loopne
and
add
add
push
fs
push
lods
stos
or
add
dec
jns
outsb
std
les
add
sbbl
js
iret
cld
iret
fwait
inc
jno
enter
lock
mov
add
add
ret
leave
inc
push
push
test
add
jge
jb
adc
add
add
out
dec
xchg
insl
insl
push
dec
fildll
leave
inc
aas
test
int3
add
add
dec
daa
jmp
cmp
dec
add
add
xchg
lcall
add
pop
pop
inc
frstor
sbb
mov
cmp
js
and
mov
adc
mov
mov
fisubrl
jbe
add
add
push
aas
lcall
dec
mov
add
push
ds
inc
add
add
and
add
add
ffree
pushf
xchg
push
mov
loope
jmp
dec
outsl
mov
jne
cmp
sub
xor
lea
dec
xchg
popa
mov
add
cmpsb
pusha
inc
add
add
add
add
in
pop
add
add
jne
mov
ss
sub
ret
js
cs
inc
je
out
cli
mov
add
add
mov
add
mov
pusha
icebp
movsl
sbb
ficoms
out
mov
enter
and
pushf
pop
lods
pop
aad
es
aam
sbb
dec
imul
les
add
jno
icebp
xor
jge
and
jp
cmp
push
and
push
xchg
rolb
add
data16
addr16
or
add
pop
push
loop
sub
cmp
adc
add
mov
popa
add
add
mov
inc
sbb
addr16
jge
in
mov
jmp
lds
sub
mov
fmuls
incl
add
sbb
lods
xor
push
cmp
insb
adc
dec
add
add
insb
inc
mov
adc
push
pop
es
push
out
add
add
add
add
push
fnstcw
add
xchg
lret
dec
stos
into
adc
hlt
es
mov
daa
xchg
jno
add
jmp
pop
arpl
jp
ret
mov
das
xchg
mov
jg
mov
outsb
mov
add
ret
rcrl
jge
loop
jge
xchg
cmpsb
daa
dec
cmp
in
jo
in
add
add
pop
fstps
fs
fs
add
add
orl
add
mull
push
mov
add
rolb
add
mov
xor
or
mull
mov
jae
xor
add
add
inc
std
js
test
push
aam
add
add
xchg
push
mov
mov
add
xor
xchg
or
add
mov
jle
dec
aas
xor
adc
test
pop
jp
xchg
jno
out
ss
je
lret
cmp
sti
mov
ds
cmc
mov
add
bound
fimull
lds
sbb
xor
xchg
add
insb
and
mov
or
add
jg
int3
add
add
jmp
fisttpl
inc
xlat
or
add
add
jne
push
jno
out
add
add
add
add
mov
loope
or
push
dec
mov
iret
mov
ja
jmp
ret
imul
negl
mov
add
add
js
pop
aam
aam
call
mov
shlb
sub
cmp
ljmp
inc
add
add
orl
add
je
pop
cld
pop
in
sub
cmpl
repnz
xor
xchg
nop
rorl
push
xchg
imul
xchg
xlat
test
add
push
roll
add
add
or
clc
lcall
pop
sbb
add
add
push
subl
out
push
test
add
add
stos
clc
rcrb
inc
mov
and
add
push
lods
lea
lret
out
call
inc
enter
fisubs
jge
mov
sub
inc
add
add
mov
jne
sbb
jo
inc
add
add
je
push
jge
xchg
repnz
pop
and
add
add
outsb
int3
add
add
push
call
clc
mov
push
in
cltd
pop
test
enter
pop
cli
mov
and
mov
cmpsb
add
mov
add
add
mov
mov
adc
cmp
add
add
and
movsl
push
pop
stc
sbb
aam
mov
or
jmp
hlt
jle
lock
enter
mov
add
out
out
fcomip
push
inc
idivl
and
cli
test
frstor
mov
xchg
js
call
insl
stos
movb
mov
jecxz
loopne
arpl
rcrb
clc
sub
xchg
mov
fnstenv
adc
pop
inc
cmp
bound
pop
cld
mov
add
add
dec
icebp
pop
xchg
xor
pop
push
add
pop
ljmp
dec
into
mov
xchg
fcompl
xchg
mov
insb
dec
pop
add
hlt
jns
push
push
xor
dec
pop
stc
xlat
adc
aas
in
pop
stos
out
rolb
add
add
xchg
lods
jle
in
iret
cmp
add
add
iret
jb
jbe
push
sahf
out
bound
insl
loope
cmc
xlat
fildl
std
pop
mov
add
mov
sbb
jp
or
add
pop
lret
and
xchg
repnz
mov
fsub
ret
xlat
lcall
shlb
and
cmpsl
ret
hlt
rolb
add
dec
add
add
sahf
enter
push
scas
mov
add
gs
repz
sbb
add
jo
add
inc
pop
or
add
jl
add
add
jge
and
cld
jb
add
add
xchg
xor
add
enter
js
push
jle
hlt
mov
scas
testl
mov
pop
mov
mov
cmp
mov
fldt
mov
add
adc
stc
xor
sbbb
push
mov
add
mov
add
sub
popa
and
jbe
or
add
outsb
pop
decl
repnz
inc
cmp
push
imul
ss
push
dec
add
add
mov
xchg
pop
mov
lahf
jbe
stc
mov
mov
add
add
mov
dec
lods
sbb
std
xchg
and
in
out
sbb
add
ficomps
incl
loope
jp
call
mov
std
cmpsl
je
nop
clc
lds
js
hlt
clc
push
pop
adc
jp
push
xor
test
outsl
mov
add
pop
das
lock
or
orb
dec
iret
icebp
call
data16
inc
loopne
lock
add
pusha
arpl
mulb
bnd
adc
inc
mov
add
add
mov
sub
xchg
in
loope
add
add
icebp
add
add
add
add
leave
fwait
add
xchg
pop
or
inc
mov
cmpsl
dec
push
scas
imul
xchg
pop
cli
add
add
inc
hlt
pop
cli
arpl
inc
dec
dec
add
add
leave
int
add
sub
add
add
add
push
stos
jno
daa
mov
adc
aam
mov
call
fs
in
popf
scas
xor
push
sub
push
sub
jle
imul
inc
leave
sbb
stos
clc
mov
pop
push
sub
mov
lods
add
dec
or
add
sub
pop
ret
in
out
jle
jle
jnp
add
das
inc
sub
stos
mov
in
mov
cwtl
fimull
sti
push
addb
add
mov
add
mov
mov
popf
inc
fstpl
imul
pusha
jae
sbb
sbb
xchg
adc
push
pop
outsl
sub
fisubs
add
rolb
add
jmp
ja
sahf
mov
add
stc
loop
mov
add
aas
in
shll
int
pushw
popa
jb
test
repz
ss
push
add
subl
jb
ret
or
in
xchg
add
mov
ret
dec
mov
mov
into
mov
in
xchg
sti
in
nop
xchg
aas
sbb
pop
cmc
sub
call
addr16
in
bnd
dec
add
add
add
add
in
jl
pop
int3
add
add
jp
aam
xchg
in
ss
lods
das
icebp
xchg
push
xor
adc
add
add
ds
push
add
out
xchg
push
add
add
mov
shll
and
add
add
push
sbb
mov
cs
add
add
xchg
mov
inc
xor
jne
push
fildl
pusha
fwait
inc
add
add
lret
cmpsl
add
add
mov
add
fs
pushf
test
add
int
out
push
inc
adc
das
or
push
inc
sti
icebp
mov
enter
jnp
mov
or
add
sbb
xchg
addr16
lret
dec
add
add
mov
lods
sbb
push
repnz
cmp
add
add
ds
notl
mov
fdivs
fldcw
pop
es
leave
sahf
cmpps
adc
add
jnp
cmpsb
lcall
jo
test
aad
ljmp
add
inc
add
add
lahf
iret
or
bound
fiaddl
das
scas
cmc
call
sbbb
test
sbb
add
add
add
or
insb
imul
stc
test
and
mov
pop
jne
out
lret
shlb
and
add
fstps
xor
mov
mov
repnz
jl
mov
or
add
je
enter
mov
mov
add
add
test
mov
pushf
add
mov
add
inc
add
add
mov
adc
push
in
loopne
mov
push
andl
leave
call
mov
ret
test
lods
push
pop
test
jg
add
add
push
fistps
cmp
jl
stos
mov
xchg
mov
int
cmp
xor
cmp
or
add
inc
push
xlat
cli
mov
mov
dec
and
pop
mov
cld
shr
dec
push
stc
dec
add
add
into
xor
fimull
icebp
sbb
add
out
xorl
inc
push
add
sete
inc
add
add
add
sbb
mov
pushf
jmp
lahf
jnp
pushf
jle
add
add
mov
fwait
cwtl
loop
pushf
popa
sub
add
add
pop
jp
jge
adc
push
ret
inc
add
add
pop
jbe
pop
gs
stos
add
add
add
shrl
mov
add
loopne
insb
fisubs
dec
xchg
mov
lcall
adc
adc
cmp
es
repnz
mov
inc
ret
sbb
jecxz
jmp
and
push
cmp
and
push
adc
outsb
clc
clc
mov
repnz
and
inc
loop
xor
cwtl
push
sti
leave
adc
in
jecxz
outsb
xchg
mov
cmp
call
cmp
xor
xchg
int3
add
add
xor
lds
jp
sbb
jg
lods
imul
test
jns
es
pop
xor
dec
cld
daa
clc
outsl
ret
cmpl
sbb
mov
jno
icebp
popf
sti
pop
sub
shl
mov
fadds
add
pop
xchg
in
xor
pusha
cld
loopne
xor
and
add
add
popl
fisttpll
test
or
dec
mov
ret
pop
fisttps
push
xchg
jmp
push
stos
sbb
sbbb
inc
sub
lods
loope
mov
xor
xor
jns
and
xchg
mov
mov
dec
jbe
dec
adc
xchg
stos
adc
add
clc
invd
add
add
add
arpl
loopne
mov
sub
or
add
adc
mov
xlat
or
sub
add
movsb
add
mov
inc
add
add
add
add
sub
clc
jge
add
add
sub
stos
push
fstpl
adc
push
sbb
mov
add
daa
insl
movsb
or
add
loope
lret
xchg
aas
jmp
sahf
push
jns
mov
inc
cmc
cmp
aam
dec
add
add
sbb
mov
pop
mov
loope
bound
add
add
stc
and
add
add
test
add
add
filds
add
dec
fcoml
mov
add
inc
push
xor
out
lahf
adc
jns
add
add
add
outsl
mov
mov
jle
repz
inc
add
add
arpl
insl
inc
notl
sub
mov
or
in
xchg
or
idiv
aam
hlt
repz
add
scas
xor
insl
mov
add
aad
adc
shrl
and
add
add
add
add
mov
xlat
sbb
icebp
leave
xor
movsl
mov
sub
push
ret
mov
add
hlt
mov
xchg
xor
or
je
addr16
mov
add
adc
or
add
imul
subl
pop
rcr
aaa
mov
xchg
xor
in
into
pop
push
cmp
out
inc
sbb
xor
add
mov
ficoms
pushf
rclb
push
lods
or
add
aas
inc
lahf
mov
daa
movsl
sub
cld
stc
aas
cmp
and
cmp
add
cli
push
jecxz
push
sbb
daa
xchg
nop
negb
mov
adc
xchg
out
jb
mov
inc
cmc
dec
jbe
cmp
stos
cmp
xchg
adc
test
add
mov
mov
jp
leave
sbb
adc
sahf
xor
push
ss
aam
ret
lahf
jg
mov
add
add
add
ret
mov
dec
outsb
pop
negb
and
fsubs
add
inc
mov
add
add
jnp
cmp
jmp
ds
mov
jl
push
mov
inc
add
add
xchg
push
jmp
leave
fs
add
add
lret
inc
mov
aad
jecxz
push
jns
push
inc
add
add
dec
pop
or
andb
pop
mov
or
add
push
jl
test
add
out
and
lcall
inc
arpl
add
ficoms
test
add
clc
xchg
adc
sahf
mov
ret
xchg
inc
shll
add
xor
add
xor
mov
sub
stos
adc
add
mov
mov
mov
enter
in
divl
push
and
mov
add
jle
dec
arpl
xchg
data16
dec
add
add
fldln2
add
add
das
mov
inc
jne
jmp
mov
mov
adc
pop
addr16
jg
dec
mov
sub
test
ficoms
add
je
movsb
cld
mov
jl
jns
dec
hlt
int3
add
add
dec
rolb
add
jns
cmp
aam
dec
add
add
jmp
pop
shl
and
push
xor
aam
lods
in
xor
filds
shll
inc
add
add
inc
in
loope
sbb
push
lret
jnp
dec
out
scas
loop,pn
sub
jge
pop
mov
add
add
sbb
inc
and
add
sub
add
add
jb
add
add
or
dec
rclb
push
xor
push
aad
jle
cmp
sub
add
add
jge
pushf
pop
and
les
add
fnsave
loop
in
xchg
dec
cmp
aas
out
es
xchg
bnd
sarl
scas
pop
cmc
or
add
and
imul
cltd
fwait
jne
aad
ret
push
xchg
in
jne
dec
je
lods
enter
xchg
push
cltd
es
sub
inc
lret
arpl
out
addl
pop
scas
mov
add
andl
xchg
popa
inc
scas
addb
add
mov
add
and
sub
push
int
mov
in
xor
pop
xchg
mov
dec
testl
addl
and
mov
fimuls
xor
outsb
imulb
push
aas
aaa
cmc
rcrb
iret
jb
add
inc
add
add
add
add
inc
jno
div
cmp
stc
dec
add
add
les
add
stos
push
nop
push
xor
out
jle
je
fiaddl
fsubr
inc
mov
pop
pop
loope
aaa
add
add
inc
add
add
jne
cmpsl
sub
ljmp
add
add
pop
xchg
fnstenv
adc
add
add
mov
out
rcrl
adc
add
mov
mov
in
test
fldl
add
add
out
inc
pop
xchg
mov
test
out
loop
nop
stos
xchg
add
xchg
mov
lahf
jl
mov
add
add
stos
lods
popa
lods
xchg
arpl
add
add
push
and
inc
arpl
mov
sub
add
add
mov
add
cvtpi2ps
cmpsl
js
das
aam
insl
pusha
lea
sbb
push
add
into
test
cld
or
xchg
mov
xchg
call
xchg
lahf
out
addr16
aam
cmpsb
jae
sub
inc
jmp
dec
xchg
outsl
push
mov
out
addb
add
add
orl
add
add
mov
pop
les
add
sub
mov
pop
lcall
lahf
jmp
andb
mov
cmpl
outsb
or
rolb
add
lds
aam
out
pop
loop
stc
in
loopne
mov
in
jge
nop
rolb
add
add
mov
roll
push
xchg
fildl
subl
sbb
or
jge
jae
mov
mov
jns
test
movsl
sbb
arpl
add
add
arpl
stos
addb
add
in
inc
cwtl
cltd
jmp
mov
add
add
dec
add
add
jae
mov
mov
add
movsb
adc
add
bound
pop
stos
jbe
cli
in
ja
mov
add
push
adc
add
mov
xchg
or
scas
sbb
lods
mov
jb,pn
std
inc
lcall
add
push
sub
arpl
and
fldl
add
pop
ljmp
add
andl
push
xor
data16
rcl
lods
cmp
aam
adc
test
or
add
call
push
sub
aam
add
add
add
mov
ds
testb
aaa
fcmovb
add
add
stos
sahf
mov
ficomps
and
pop
in
push
or
fdivp
arpl
add
xor
push
add
add
scas
insb
imul
fucomp
repz
xor
leave
mov
leave
imul
popa
dec
xchg
in
push
outsb
fidivl
push
lcall
lods
js
xchg
das
repz
xor
add
add
cltd
and
loope
pop
shlb
or
add
mov
sub
pop
jecxz
add
add
inc
bound
sub
test
int3
add
add
add
dec
lods
sub
repz
add
add
add
repz
add
add
xor
adc
inc
cld
jle
push
xchg
and
add
add
repnz
cmc
inc
pop
adc
mov
add
sbb
shll
notl
jge
gs
notb
es
jl
pushf
sbb
fidivl
xchg
adcl
pop
pop
aam
mov
cmp
out
pop
iret
mov
jbe
loop
pop
into
push
stos
enter
jmp
dec
mov
add
nop
push
push
add
add
popf
jg
fstps
imul
sarb
inc
pop
add
add
rolb
add
add
loope
mov
clc
xor
jns
adc
push
cmpsl
les
add
xor
mov
scas
mov
jno
add
add
andl
rcrb
in
xchg
adc
loop
xor
fiadds
add
add
inc
cmp
and
pop
jmp
jecxz
sbb
ds
dec
out
sub
push
jg
outsb
int
test
int3
add
add
add
cmpsl
shl
popf
ss
cwtl
mov
add
pop
mov
add
add
sub
push
cmpb
pop
sarb
fildll
mov
add
push
jl
cmp
or
add
shll
ljmp
xchg
dec
mov
add
insl
fs
or
into
setb
mov
jecxz
add
add
cltd
mov
xchg
pop
mov
add
add
fucomi
je
outsb
popf
out
add
js
add
add
addb
add
push
and
push
repnz
push
in
cmpsl
jo
push
in
xchg
lds
push
inc
jne
push
movsl
jl
lods
lods
ja
addb
add
add
dec
add
add
add
xchg
fs
adc
cmp
mov
mov
dec
jecxz
adc
dec
or
xchg
lret
jecxz
pop
xlat
cmp
adc
paddb
push
adc
mov
jp
scas
sahf
sti
sub
xchg
xchg
sbb
or
mov
add
mov
jbe
inc
inc
add
add
insb
fdivrl
add
pushf
pop
rolb
add
pop
mov
xchg
xor
and
fidivl
and
stos
and
movsb
pop
mov
sbb
popa
mov
add
movl
add
add
rcrb
add
add
cmp
aaa
pop
or
jne
test
jb
gs
mov
add
jmp
add
push
adc
xchg
fisttps
add
inc
xchg
push
pop
in
aas
mov
adc
add
add
es
push
mov
test
adc
mov
add
add
or
add
pop
jge
stos
lea
push
and
lcall
add
loopne
movsb
in
sub
mov
lret
and
mov
inc
add
add
loopne
push
inc
lret
xchg
les
add
xchg
mov
loop
inc
adc
xor
add
add
movsb
stc
sub
push
inc
test
xorl
stc
leave
inc
out
and
cwtl
lahf
test
les
add
lahf
mov
xchg
lret
xor
pusha
scas
pop
aas
addr16
inc
add
add
pop
push
jp
add
add
roll
cltd
mov
stc
sbb
cmp
jb
sub
out
jecxz
jmp
push
ret
cld
mov
add
xchg
mov
sarb
jno
add
add
leave
pop
pop
sahf
out
movsb
outsl
hlt
pop
jae
jb
out
es
pop
dec
add
add
popf
scas
aas
test
fbstp
push
sub
adc
insb
test
add
mov
add
add
push
xor
into
sbb
cmp
les
add
lret
xor
into
scas
dec
add
add
popf
test
add
in
adc
and
inc
stos
push
jno
nop
cltd
dec
sub
cmc
out
xor
add
xor
add
add
imul
sarl
mov
push
out
mov
sbb
and
loop
rcl
cmc
mov
xor
jbe
call
xchg
pop
or
fstpl
fstl
add
add
call
daa
imull
adcl
iret
mov
lret
mov
xor
lods
call
mov
xor
lock
lea
js
mov
mov
mov
jle
fidivs
add
dec
adc
xchg
xor
mov
addr16
rcr
fildl
dec
lea
add
pmuludq
outsl
cmpl
add
add
sub
inc
push
xorb
add
cmpsb
add
jmp
push
xchg
xlat
clc
scas
out
mov
adc
mov
dec
pop
pop
mov
fwait
repnz
mov
dec
add
add
and
jecxz
cmp
pushl
rol
pop
out
dec
and
add
add
inc
mov
mov
sbb
or
add
add
leave
mov
das
outsb
mov
add
inc
lret
mov
add
test
div
sub
add
jns
out
cmp
mov
cmp
pop
xchg
jmp
lock
add
add
test
or
inc
add
add
pusha
je
inc
add
add
lahf
loopne
xchg
jo
xchg
gs
aaa
sbb
das
pop
add
and
imul
add
add
add
pop
adc
add
add
cli
mov
add
cld
xchg
stos
sbb
dec
push
fisubrs
cltd
ss
loopne
add
add
nop
dec
sbb
pop
lahf
xor
divl
ljmp
movsl
sub
add
lds
insl
xor
add
cltd
mov
add
frstor
push
add
add
sub
ljmp
int
xchg
push
shrb
jmp
xchg
popl
add
pop
fxch
call
subl
ss
repz
ret
in
aas
iret
mov
xor
cwtl
ret
ljmp
imul
ret
push
popa
addb
add
cmp
fiaddl
mov
std
sbb
insb
lahf
fildll
add
add
xchg
push
and
cmp
add
add
add
stos
add
add
cmc
repz
add
loope
adc
xorb
add
leave
call
es
pop
pop
inc
add
sub
mov
add
mov
gs
xchg
aaa
test
add
cmp
jg
mov
push
leave
dec
push
mov
push
add
shl
jmp
dec
add
add
add
add
cmp
push
aam
pop
movsb
loopne
sub
sub
and
jmp
addr16
dec
add
add
pop
sub
xchg
jge
xor
or
xorl
and
push
adc
test
adc
or
or
add
jl
out
mov
sub
pop
incl
mov
sbb
addb
add
or
xor
test
je
pop
or
outsl
lock
pop
lea
std
jae
add
sbb
mov
sub
mov
mov
inc
mov
mov
push
repz
mov
add
fdiv
cmpxchg
jnp
fdivs
jp
jecxz
scas
xchg
xor
xor
pop
adc
xchg
lods
in
in
loopne
pop
mov
or
add
or
insb
sbb
int3
add
add
add
aad
ja
rorl
popa
cli
push
mov
cltd
sub
sbb
add
add
std
sbb
xchg
push
jns
pop
push
imul
add
push
add
add
sub
scas
inc
es
add
add
cmp
rolb
add
fsubrs
mov
add
xchg
popa
ret
lcall
add
int
mov
xchg
cmc
adc
mov
pop
pusha
xor
sbb
in
jp
stc
fcompl
xor
pop
push
mov
add
or
add
add
mov
gs
outsl
xor
push
mov
fwait
in
sub
gs
mov
add
stos
ret
jle
sbb
dec
add
add
call
sub
add
xor
xchg
push
mov
add
mov
cmpsb
pop
sub
xorl
jne
or
add
xchg
mov
xor
mov
lahf
dec
adc
lea
jl
insl
in
sbb
cltd
push
mov
movd
out
mov
add
xchg
adc
add
push
pusha
lea
dec
rolb
add
stos
dec
fsubrl
push
jp
add
add
loop
adc
add
out
and
mov
std
pusha
ret
popa
pop
mov
fimull
int3
add
add
fnsave
add
add
stos
mov
bound
add
mov
aaa
sbb
movsb
xchg
rorb
add
add
pop
dec
out
add
add
and
mov
js
test
add
add
scas
mov
adc
and
inc
add
add
add
add
test
lahf
in
fdivs
mov
add
inc
lock
lods
clc
nop
lret
dec
add
add
js
inc
add
add
sub
imulb
mov
scas
pusha
popa
imul
mov
push
pop
xchg
sbb
cwtl
jnp
jmp
xorb
add
add
shll
adc
dec
cmpsb
mov
sar
xchg
pop
out
cmp
mov
add
mov
out
or
out
add
add
inc
lret
aad
add
add
add
xchg
xchg
sbb
jns
into
or
add
sbb
in
add
add
add
add
pop
xchg
add
sahf
jae
sub
add
add
add
add
add
add
sbb
adc
imulb
mov
add
xchg
add
add
sbb
psubsw
setbe
mov
out
cmp
arpl
add
mov
add
enter
loopne
jge
pop
sbb
pop
xchg
mov
push
in
lahf
mov
loopne
xchg
ja
jnp
sub
add
into
dec
adc
push
mov
mov
loopne
and
cmpsb
loopne
movsb
pop
mov
addr16
jecxz
xor
insb
mov
cltd
xchg
rcrb
out
or
add
add
in
xlat
and
pop
pop
aad
add
outsb
mov
pop
mov
mov
add
je
xchg
mov
addr16
ss
push
push
pop
ja
rol
add
add
cmc
das
jmp
adc
mov
add
add
add
imul
pop
mov
in
repnz
xchg
repnz
add
push
xor
mov
out
adc
cmpsl
cmpsl
inc
cmpsl
push
int
pop
or
je
jns
loopne
sbb
ja
push
je
cltd
pop
xchg
cmpsb
call
add
add
xor
cmpsb
cmpsl
insb
and
push
adc
dec
int
les
add
addl
daa
sbb
lods
popa
and
insb
sbb
ret
ljmp
push
call
out
mov
std
test
add
add
mov
add
orb
div
dec
add
add
add
xor
add
add
iret
dec
xor
lahf
dec
add
add
test
add
pop
cs
xchg
jecxz
dec
and
aaa
mov
add
add
out
add
add
fucom
jmp
pop
mov
int
push
insb
xor
sbb
add
cmpl
jmp
lahf
sub
jg
ds
xchg
leave
into
xchg
mov
and
pop
add
add
or
rolb
add
add
lock
inc
icebp
fcom
jecxz
pop
sub
pusha
jg
loopne
repz
cmpsl
or
add
sbb
cmp
mov
pop
popa
mov
add
sbb
add
dec
lea
in
hlt
and
in
int
movl
loop
mov
mov
fwait
xchg
pop
pop
and
fcomip
xor
bound
add
add
adc
mov
add
add
jmp
add
add
sub
add
in
mov
in
dec
daa
addr16
cwtl
lods
push
xchg
ja
xor
jle
push
jnp
fs
sbb
fwait
mov
add
test
inc
dec
mov
add
enter
idivl
add
in
and
mov
pop
fwait
push
or
add
push
push
push
push
mov
add
mull
or
sub
incl
sbb
dec
add
add
pop
mov
cmc
fwait
pop
lea
jecxz
cmpsb
pop
mov
add
push
mov
jl
aas
cmp
add
add
sahf
leave
xchg
dec
lods
and
inc
imul
add
add
sbb
comiss
pop
or
mov
push
ja
push
xlat
jne
mov
add
add
jle
jbe
lods
lahf
in
mov
add
add
aas
pop
or
add
jg
add
add
push
mov
add
xchg
int
add
add
add
add
aas
or
mov
add
or
aaa
daa
fmuls
jbe
lcall
xor
insb
sbb
lcall
adc
shlb
add
sub
bound
inc
or
jmp
and
leave
cmpsb
sbb
add
add
lcall
mov
out
push
jo
cltd
mov
popf
ja
xchg
pop
push
jge
or
and
xchg
gs
push
and
inc
sub
xlat
and
add
repnz
dec
add
add
or
inc
call
add
add
sub
jle
lods
outsb
ja
xchg
sub
jno
xchg
jmp
add
scas
jbe
add
add
cmp
cmp
jno
xor
fwait
jp
out
icebp
lret
add
push
add
adc
fwait
enter
mov
add
lds
cmp
adc
loope
or
add
push
negl
jmp
mov
and
xchg
dec
add
add
ds
lahf
jo
bound
add
fs
mov
dec
fdivs
in
imulb
push
dec
into
inc
add
add
adc
push
adc
push
lahf
sbb
pop
scas
pop
movsb
dec
xchg
leave
fisubl
out
lea
mov
loopne
sub
or
notl
mov
add
dec
add
add
loop
sbb
in
jo
add
add
fldenv
lret
jge
rcrl
add
add
cmp
test
hlt
pop
ret
mov
add
adc
dec
mov
or
popa
cmp
dec
add
add
adc
xor
push
jle
inc
add
add
outsb
out
outsb
cmp
in
clc
or
add
mov
xorl
mov
mov
out
pusha
or
add
pop
xor
push
mov
and
dec
add
add
mov
push
jg
pop
mov
add
in
mov
jns
arpl
add
add
inc
mov
add
out
gs
add
add
jae
fwait
cltd
xchg
aaa
into
icebp
mov
dec
add
add
add
sub
sbbl
test
add
aam
xor
shll
add
add
pop
fsubrp
pop
push
inc
mov
adc
jb
mov
pop
pop
xorl
mov
loop
cmp
and
add
mov
insb
orl
pop
inc
push
addb
add
jno
sub
jg
aam
mov
sub
data16
es
les
add
xchg
mov
cmp
mov
or
add
cs
aas
dec
daa
test
add
imul
mov
or
add
dec
add
sub
xlat
jp
push
iret
testl
add
clc
jbe
hlt
out
push
sahf
or
sarl
ljmp
test
add
mov
scas
push
pushf
sbb
push
add
ds
add
add
mov
ss
mov
dec
add
add
adc
add
shll
adcl
add
sbb
push
movsl
imul
loopne
dec
add
add
and
cmc
fimuls
xor
mov
imul
add
cmpsb
lahf
sub
push
test
cmp
add
add
fdivl
add
mov
or
add
add
jmp
dec
mov
lret
pushf
dec
pop
xchg
push
shl
lock
addr16
jmp
dec
enter
sub
mov
mov
add
add
cmp
and
add
add
jns
mov
ss
or
add
sbb
cmc
jecxz
push
rcr
aas
jno
xor
add
out
iret
jp
pusha
mov
stc
or
add
je
enter
insb
hlt
cmpsl
cmp
roll
mov
xchg
sti
mov
add
jno
mov
mov
cmp
mov
add
xchg
addl
jo
push
jns
popf
add
add
mov
fcoms
add
dec
or
add
add
aas
in
xchg
divl
popf
insl
call
push
rolb
add
jge
mov
and
add
add
add
add
add
pusha
push
mov
cmp
ljmp
add
daa
sub
ja
nop
popf
sarl
jle
sub
jns
mov
add
add
int
mov
and
loope
mov
shll
jno
lods
mov
jge
add
add
push
ja
mov
push
add
mov
gs
dec
add
add
lret
mov
add
mov
stos
fsts
loopne
cmp
fisubrs
outsl
int3
add
add
push
mov
fistl
mov
push
inc
add
out
xchg
jmp
mov
ret
xor
lcall
fcomi
and
push
cmp
stos
xchg
pop
das
cmp
add
push
pushf
cmpsl
test
add
jne
inc
add
add
in
mov
dec
add
add
and
inc
xor
cmp
adc
ret
scas
mov
aaa
outsl
rorl
add
mov
sub
popa
mov
out
ja
sub
mov
mov
add
fcomps
mov
add
or
mov
xchg
out
push
pop
fisttps
out
inc
xchg
insl
and
adc
add
in
fs
js
leave
mov
pop
add
add
jmp
into
xchg
rcr
jo
jnp
sbb
cmp
adc
ret
xchg
dec
test
enter
enter
sub
add
add
xor
cmp
sti
sbb
aam
pop
scas
dec
ss
scas
mov
sbb
or
mov
cmp
xchg
xor
rolb
add
cmp
mov
add
add
sbb
imul
mov
inc
add
add
loop
mov
pusha
fadd
mov
iret
jnp
icebp
fwait
vorpd
cwtl
dec
pop
mov
stos
div
mov
stos
test
shll
jo
mov
lret
lcall
add
and
leave
jo
iret
dec
add
add
repnz
adc
add
add
add
inc
in
insl
data16
add
add
addb
add
jmp
add
add
lcall
add
lds
xchg
mov
ret
and
lret
scas
je
lahf
test
clc
push
adc
fists
or
inc
add
add
and
xlat
loop
orb
add
aaa
push
mov
icebp
popf
jns
mov
imul
pop
mov
bnd
enter
popa
test
add
inc
add
add
fimull
sub
xor
sbb
inc
dec
lods
push
add
add
jg
les
add
fdivrp
in
shlb
in
icebp
push
mov
stc
inc
xchg
jno
adcb
sti
sub
dec
nop
pop
ja
or
sub
adc
scas
test
add
add
jp
mov
add
int
cmpsl
imulb
adc
add
add
loopne
inc
add
add
scas
xor
mov
jb
stc
dec
add
add
js
fidivl
dec
sbb
inc
and
lock
fistl
daa
mov
add
pop
push
inc
fwait
push
pop
and
fbstp
add
add
js
mov
cld
pushf
lods
mov
mov
or
add
aad
inc
insl
cli
mov
add
add
movl
add
ljmp
int
push
mov
out
mov
loopne
movsb
hlt
lock
mov
sbb
mov
add
add
add
add
inc
add
add
addr16
iret
jle
mov
leave
movl
cwtl
xchg
or
add
cmpsl
imul
add
bound
pop
and
mov
add
add
js
push
decl
dec
xor
push
rcll
ss
sbb
adc
loope
push
push
addb
add
add
aas
jg
inc
test
test
add
shr
les
add
test
add
dec
cltd
pop
cmpl
stc
in
lcall
add
cmp
or
add
fcmovne
fcmovbe
or
pop
push
cmc
pop
add
add
aam
jne
mov
fdivl
push
add
add
test
dec
add
add
pop
jo
inc
push
aas
in
dec
add
add
shll
ds
pop
push
mov
cli
xlat
push
outsl
in
aaa
ljmp
pop
sbb
iret
lock
addr16
stc
bound
inc
xor
mov
sbb
sbb
xor
aad
push
std
repz
icebp
mov
in
pop
int3
add
add
mov
add
sbb
imul
add
dec
and
xchg
ror
mov
mov
and
add
inc
cmp
dec
add
add
jo
dec
out
out
add
add
clc
subl
jb
adc
into
xchg
push
push
or
cld
pop
mov
add
fstpt
arpl
add
adc
add
add
add
pusha
sub
jmp
jl
in
add
add
push
push
xchg
xchg
lds
mov
test
push
movaps
push
add
add
hlt
cmp
lahf
sub
jle
xlat
cmp
jo
sub
out
ja
mov
fistpll
sub
dec
add
add
add
xor
mov
dec
dec
add
add
dec
mov
and
pushf
insl
pusha
sti
xchg
lea
ret
push
imul
aaa
pop
cltd
cmp
pop
rorl
out
fdivrp
push
lods
testb
cmp
test
pop
xor
and
jp
xor
popa
and
test
das
mov
mov
add
cmp
push
mov
mov
add
sti
adc
lret
add
adc
test
add
or
cld
push
sti
push
jne
prefetcht0
or
add
add
mov
leave
scas
movsl
shrb
lret
fwait
pop
lahf
mov
outsl
rolb
add
dec
dec
fcmovnb
mov
fisubs
add
push
into
stc
sti
retw
or
ja
xchg
shlb
sub
add
add
and
sub
mov
cmp
bound
mov
aaa
add
add
rolb
add
cmc
lods
fwait
pop
lea
add
lcall
pop
jns
roll
sahf
fadds
pusha
insl
mov
add
out
loope
xchg
pop
cmp
push
xor
inc
fistpl
cmp
stc
xor
pop
adcl
mov
add
sub
inc
out
mov
bound
push
pop
cmp
add
add
js
fcomps
mov
into
gs
cwtl
orl
dec
lods
xor
ror
dec
loopne
icebp
pushl
add
and
and
fnstsw
pop
xor
arpl
push
das
mov
add
scas
jp
cwtl
ja
nop
sbb
rolb
add
into
loope
mov
add
lods
sbb
adc
xchg
or
insl
sub
loop
and
aam
mov
insl
rol
cmc
ficoml
insb
mov
aaa
push
sbbl
adc
orl
add
add
addr16
inc
mov
sbb
repz
add
mov
pop
sbb
sbb
add
ja
into
jecxz
data16
bound
mov
cmp
lea
cmp
idivb
mov
xchg
cli
jge
nop
mov
add
jge
jle
inc
mov
daa
mov
lret
mov
cmp
insb
xor
sbb
idiv
outsl
ljmp
pop
mov
repnz
roll
add
add
mov
add
loopne
sbb
iret
lcall
adc
mov
push
xchg
test
add
movsb
jae
or
jno
fwait
leave
push
mov
outsb
daa
mov
mov
orb
add
add
popa
xor
mov
push
cli
cs
mov
add
add
int
in
add
add
idivb
addb
fimull
mov
pop
ljmp
add
add
xchg
enter
sbb
inc
add
add
arpl
mov
sti
mov
or
pusha
fstl
or
add
not
pop
jae
mov
out
int3
add
add
lcall
add
pushf
lds
pusha
inc
add
add
stc
aaa
js
cld
jo
push
jl
test
pop
inc
fs
ljmp
pop
divl
add
stos
cmpl
xchg
orb
add
xor
jnp
pop
and
cs
cmp
ja
lea
cmp
dec
add
add
adc
sbb
adc
test
add
dec
pop
sub
push
sbb
das
push
pop
and
ljmp
sub
mov
cli
mov
push
and
add
add
jno
imul
lds
ss
pop
jno
sbb
mov
dec
lahf
scas
pop
rolb
add
xchg
bound
add
add
out
xchg
xor
outsb
dec
cmpsl
lret
and
in
in
inc
popa
mov
fisubs
hlt
testl
ja
repnz
add
pop
frstor
dec
cmp
adc
mov
lcall
test
adc
push
cmp
add
add
xor
cmpsl
inc
outsb
sbb
xchg
jne
in
fcmovbe
mov
add
cli
adc
pusha
clc
das
pop
mov
dec
add
add
sbb
cmp
pop
out
imul
jg
ror
add
add
sarl
push
cmp
mov
addr16
leave
test
dec
js,pt
fisttps
mov
fldenv
xchg
inc
lret
and
jnp
cmc
decl
or
ljmp
add
push
int3
add
add
mov
add
push
jbe
pop
jne
in
fdivr
lret
into
rcll
cmp
fidivrl
notb
and
pop
cs
jbe
rorl
add
add
xchg
lea
test
cmc
mov
add
dec
mov
loopne
pop
lods
ljmp
lods
fidivl
and
pop
out
fcoml
inc
test
cmp
and
add
add
xor
push
cmp
int
inc
mov
ds
or
add
inc
pop
push
fs
out
cli
mov
mov
add
cmc
call
add
fildll
add
add
mov
cmpsb
fistpl
mov
leave
adc
fcom
mov
mov
test
sbb
fdivr
and
addb
add
push
xor
inc
push
add
add
add
add
dec
fwait
mov
insb
rolb
add
xchg
push
shl
push
call
imul
sbb
dec
imul
cmp
add
add
out
mov
cmp
add
mov
add
mov
add
imul
cmp
jmp
shll
xchg
xchg
sub
add
lret
inc
adcl
adc
and
out
cmp
rcrb
add
add
nop
mov
sub
lea
add
add
jge
push
pop
jnp
push
mov
add
fcmovnu
or
sub
mov
mov
mov
out
mov
sub
mov
inc
popfw
sbb
dec
mov
in
iret
sub
les
add
fiaddl
ds
mov
add
dec
inc
xchg
jge
loop
repz
lcall
pop
push
arpl
test
add
ljmp
sub
mov
or
xchg
mov
addr16
adc
jl
outsb
bound
jg
fwait
xchg
loope
orb
movsb
adc
add
add
movl
div
xor
pusha
pop
push
ret
mov
sub
outsb
jge
aas
int
addr16
pop
les
add
mov
test
in
setno
lods
adc
xor
mov
xchg
sahf
pop
rclb
add
add
je
and
insb
ja
mov
pop
adc
iret
clc
sub
fwait
lret
jo
xor
add
addb
add
lods
pop
shrl
add
pop
jle
arpl
add
jno
or
pop
or
add
add
ja
jb
adcl
add
adc
mov
xor
cli
pop
lret
fisttpl
add
add
mov
and
mov
out
sub
jmp
add
add
loopne
in
bound
ficomps
and
loopne,pt
mov
or
add
add
adc
ficompl
ret
or
push
addl
aaa
push
push
es
aaa
lcall
add
add
jmp
testb
xchg
pop
xor
enter
add
pop
jbe
xchg
push
sbb
out
rclb
jbe
add
add
stc
add
je
stos
push
pop
aaa
dec
aas
adc
mov
mov
add
out
jle
jmp
daa
cmc
jno
inc
call
xor
cmp
mov
pop
sub
jge
jo
cli
gs
and
and
stos
rolb
add
mov
jmp
popl
add
add
adc
mov
pusha
mov
pusha
ds
add
add
xor
add
loopne
in
add
add
sub
js
xchg
stos
jae
cli
xchg
adc
mov
add
cld
dec
lret
test
xor
std
xchg
sahf
mov
add
add
add
sub
cmp
fdivrs
add
add
and
push
lret
xchg
jbe
mov
add
sub
push
int
or
add
in
aam
insb
aaa
jns
sbb
cmpsl
lods
adc
inc
add
add
xchg
movl
cmc
xchg
jbe
aaa
sub
mov
inc
add
add
xchg
and
mov
pop
push
or
add
pop
imul
cltd
je
adc
pop
data16
sbb
xchg
das
stos
subl
ror
xchg
rcll
mov
xor
jmp
jmp
pop
jg
sub
inc
jns
rcrl
jbe
pushf
icebp
dec
shll
mov
in
mov
ret
cs
sbb
inc
add
add
cmc
aam
dec
xlat
push
add
add
mov
jge
outsb
jg
bound
mov
push
xchg
fsub
pushf
shll
cmp
mov
push
cmp
adc
xchg
add
add
sti
ljmp
pop
add
add
sbb
pop
aaa
popf
fs
test
xchg
faddp
test
add
adc
cmpsl
push
outsl
xchg
push
js
div
mov
lea
pushf
test
in
call
out
sub
add
or
stos
cld
addr16
pop
rorb
add
xor
add
or
sbb
sub
movb
stos
xchg
mov
mov
dec
adc
sub
dec
adc
jne
fs
pushf
mov
adc
in
stc
enter
aad
push
and
roll
test
xchg
mov
add
add
add
mov
rcrl
mov
data16
sbb
aas
lret
mov
dec
popf
pop
clc
push
sarl
mov
fsubr
in
clc
aad
cmc
pop
pop
sbb
add
inc
xchg
mov
cmc
jecxz
aas
lcall
add
inc
scas
hlt
loope
xor
fidivl
jmp
cs
repz
push
pop
sub
xchg
jp
add
add
ljmp
add
add
dec
inc
scas
pop
addb
cmp
repnz
jbe
sbb
loopne
out
mov
pop
scas
fs
xor
aas
aad
repnz
cmp
fisttpl
add
mov
jl
cli
cmpsb
push
xor
mov
inc
add
add
inc
cld
pop
jno
sti
mov
add
add
fidivs
pushf
stos
jmp
adcb
movsb
add
ljmp
add
push
add
add
sarl
jecxz
cli
push
jg
push
add
shlb
mov
lahf
adc
adc
addr16
filds
add
sbb
inc
xchg
mov
or
or
rolb
add
loope
add
incw
sbb
add
add
add
popf
in
add
add
add
xorl
xor
sub
add
push
fs
rcrl
addb
add
cmp
cmpsl
iret
jbe
inc
add
add
hlt
or
push
add
negl
stos
ss
or
xchg
data16
xlat
and
clc
jns
mov
sahf
push
imul
adc
jmp
cmp
ficompl
add
and
fwait
sub
add
mov
add
add
sbb
xchg
fidivrl
cmp
and
mov
and
mov
add
mov
add
arpl
outsb
mov
add
add
ds
pop
inc
push
inc
sbb
lods
adc
cmp
push
sbb
xor
es
add
mov
xchg
test
pop
aas
push
cmp
add
ljmp
sti
sub
xor
pop
fstpt
push
fsubl
mov
pop
sbb
sub
sbb
fisubrl
in
ss
cmpsb
scas
mov
pusha
dec
fistl
jl
add
add
and
mov
sub
ret
sbb
xor
jle
sbb
addr16
addr16
mov
cli
addr16
lods
cmc
pop
dec
scas
jle
mov
add
ljmp
outsb
js
mov
adc
and
mov
bound
add
add
insl
adc
loope
notl
aam
mov
cli
aas
sub
add
add
jp
add
add
stc
mov
mov
cmpsb
sbb
xlat
aad
add
add
push
outsb
sbb
mov
in
sti
ds
xchg
push
fisubrs
pop
out
push
jle
icebp
aam
adc
cmp
aad
push
sub
inc
cmp
inc
add
ljmp
add
adc
pop
imul
push
add
mov
js
je
lds
jno
cmpb
mov
add
lock
pop
inc
es
mov
add
pop
jg
pop
ja
aas
pop
movsl
nop
lcall
dec
xlat
aas
gs
ds
repnz
mov
add
add
fisubrl
cmpsl
push
cltd
cmpsl
add
add
pop
inc
and
add
add
das
mov
aaa
adc
add
add
in
aas
bound
xor
je
sub
lods
mov
cmpsb
pop
jmp
or
add
cmp
popf
enter
and
add
or
add
push
pop
push
adc
fsubs
cmp
je
jnp
mov
dec
sahf
cmp
xchg
daa
rclb
push
push
bnd
fmulp
inc
jae
loop
add
add
lcall
mov
push
mov
dec
aad
jecxz
mov
add
add
push
cwtl
les
add
out
dec
fldz
stc
pop
sub
xlat
popf
aam
cmp
pusha
lret
and
orl
push
xlat
pop
rcll
movsb
inc
or
lea
add
add
mov
push
cmpsb
call
sbb
or
add
add
lock
outsl
cmc
pop
add
add
clc
xor
pushf
loope
xor
add
lods
fsubr
jo
push
xchg
cmp
add
add
lds
add
jns
idivb
addr16
jmp
adcl
add
icebp
fs
mov
adc
inc
add
add
loop
push
mov
add
push
jae
insl
test
xchg
dec
dec
sbb
les
add
fnstsw
add
push
out
ljmp
sbb
pop
das
loop
pop
and
in
mov
add
jecxz
test
add
stc
inc
push
incl
insl
push
fwait
cmp
sbb
ret
sub
pop
pop
out
xchg
push
fdivrl
scas
dec
add
add
add
sbb
lods
les
add
in
aad
divl
mov
lds
loop
add
add
add
add
int
mov
pop
jmp
jp
add
add
inc
sub
filds
xchg
out
addb
add
sbb
add
add
orl
mov
pop
dec
jne
jb
add
add
in
mov
xlat
imul
pop
push
es
dec
outsb
lock
add
add
push
sub
insl
addb
add
outsb
sbb
add
fwait
push
sbb
dec
clc
sarl
add
aas
loope
not
push
mov
inc
mov
or
add
pop
stc
or
or
call
nop
xchg
xchg
cmp
add
rorl
and
mov
mov
lahf
mov
jns
jae
adc
add
add
add
cmp
mov
jb
jg
jae
add
add
add
and
add
icebp
pop
or
aam
lahf
cld
push
in
insl
sbb
xchg
dec
sarl
pop
cmp
lods
push
shl
add
add
dec
jmp
pop
fnstsw
loop
add
add
mov
stos
sub
lahf
popf
lahf
ret
jnp
xor
fldl
dec
push
cmp
or
add
fdivp
xor
sub
js
push
das
sbb
idiv
cld
iret
in
ss
lock
test
pushf
mov
add
int3
add
add
xlat
loopne
jecxz
test
lcall
xchg
xchg
iret
pop
cmp
fiadds
add
add
add
add
adc
pop
push
sahf
daa
pop
aad
jmp
push
aas
xchg
arpl
cmp
insl
dec
jecxz
clc
les
add
sub
add
add
add
add
test
je
adc
adc
mov
sub
sub
clc
or
jp
mov
jge
loope
add
add
imul
loopne
sbb
push
pop
imul
pusha
orb
test
inc
add
add
rorb
lret
scas
push
dec
cmp
xor
add
add
adc
idivl
add
scas
in
aaa
cmp
jbe
ja
mov
gs
xchg
xor
aam
xchg
or
add
shlb
mov
add
mov
mov
sub
out
cmp
cmp
addb
add
add
rolb
add
xor
or
jns
loope
add
inc
pop
add
xor
add
add
mov
add
add
pop
sub
add
add
add
stos
xchg
lods
push
push
xor
sub
add
xchg
cmpsl
jge
inc
add
add
inc
add
add
pop
sarb
iret
cmp
les
add
fidivrl
fstps
pop
sar
inc
add
add
mov
add
rcl
paddq
or
and
add
add
inc
xor
pop
lods
lcall
in
out
ja
add
add
add
add
mov
add
pop
loopne
add
add
es
pop
jns
push
inc
add
add
jmp
xchg
adcl
push
outsl
les
add
fldl
xchg
xchg
mov
add
jns
mov
ret
popf
push
loope
aad
jnp
je
data16
add
add
dec
rcll
lcall
pop
xchg
pop
repz
rolb
add
push
iret
loopne
xor
stc
mov
mov
fidivrl
jl
jae
inc
add
add
add
fs
or
ret
add
add
add
leave
pop
in
or
add
aam
lret
push
xor
jno
insb
movsl
push
push
cmp
xchg
outsb
sahf
jo
xor
cmp
jecxz
stos
mull
jl
decl
xorl
aas
push
addr16
inc
add
add
mov
mov
fcoml
push
fisubl
pop
dec
aaa
and
lods
push
mov
std
inc
cmp
mov
icebp
jecxz
jmp
cwtl
dec
xchg
flds
dec
add
add
xor
ficomps
stos
jmp
in
in
pushf
pop
pop
xor
mov
pop
test
add
cltd
adc
adc
jge
ja
mov
mov
jbe
daa
cmp
sar
rcl
push
std
cmp
popa
cmp
adc
loop
or
jae
popa
movb
fistpll
arpl
or
cld
dec
adc
add
add
add
rorb
dec
add
add
cmpsb
jp
dec
pop
sub
sbb
mov
add
out
cmpsb
xchg
fstps
clc
mov
add
test
add
add
out
loopne
cmp
add
add
add
add
jmp
mov
add
ds
in
jmp
les
add
std
sbb
mov
add
mov
movsb
sbb
ficompl
pop
cmp
popf
into
iret
ss
pop
stos
outsl
dec
add
add
adc
add
add
mov
xor
addr16
add
add
add
add
int3
add
add
aas
mov
lret
sbb
mov
add
add
lds
mov
fs
cmp
sub
push
lds
pop
into
lods
addb
add
lcall
daa
push
lods
push
cltd
mov
add
push
jp
add
add
or
test
call
inc
les
add
jmp
mov
inc
dec
dec
and
add
cmp
aad
je
stos
xchg
cmp
push
mov
repnz
lret
ja
xor
pop
fs
repz
and
clc
das
subl
inc
test
lcall
jle
add
add
jl
add
sti
je,pn
push
inc
andb
iret
sar
outsb
jl
arpl
mov
add
add
push
pop
mov
iret
dec
pop
es
xchg
xchg
into
icebp
push
jl
xlat
sub
dec
add
add
lret
js
adc
outsb
pop
pop
or
add
pop
adc
xlat
fdivs
jns
mov
dec
add
add
add
mov
add
fisubrs
shll
in
jae
or
add
add
jbe
mov
loop
dec
add
add
adc
add
add
adc
repz
scas
sbbb
scas
movsb
dec
mov
sub
js
add
ss
pop
cmp
dec
add
add
xchg
push
lock
add
add
xor
push
loop
shll
dec
fsubl
movsb
scas
xor
cltd
inc
add
add
cmp
add
add
mov
add
add
add
add
pop
and
movsb
imul
pop
rorl
fwait
xchg
rcrl
add
add
xchg
gs
mov
add
add
les
add
mov
faddp
xor
add
add
jo
add
add
cli
sub
jge
fidivrl
jge
pop
xor
adc
sbb
xchg
js
mov
or
add
add
repz
pop
call
repz
subl
scas
mov
jmp
mov
stos
pop
cltd
mov
xchg
jmp
mov
fsubr
lret
add
aad
cmpsb
pusha
adc
pushf
pusha
in
mov
shlb
sub
leave
int
mov
movsl
lret
push
xor
in
push
cmc
add
add
sub
add
nop
dec
imul
fcoms
jg
fstpt
add
add
push
lods
repnz
add
and
cmp
push
repz
pop
imul
mov
push
mov
cltd
jg
les
add
or
and
mov
dec
mov
inc
lods
gs
push
stc
mov
mov
jl
and
test
add
adc
xchg
es
xchg
sbb
or
add
add
scas
es
cwtl
enter
pop
xor
push
sbb
xchg
rclb
clc
mov
cli
xchg
sub
cmp
add
add
stc
cmp
and
sub
adc
jecxz
lret
lret
aas
lods
inc
add
add
add
mov
iret
dec
xor
add
cwtl
int
pop
lcall
adc
sbb
cmp
cmc
push
aas
repz
sbb
push
mov
or
vmovaps
cmc
cmp
mov
push
jge
adc
mov
dec
shll
pop
or
add
mov
es
jnp
lock
lods
in
out
adc
add
add
sbb
jp
sbb
lods
lret
jo
sub
push
dec
or
and
out
mov
push
and
call
stc
lods
add
testb
into
fisttps
in
dec
sbb
push
mov
sub
add
outsl
push
dec
push
pop
lea
je
enter
mov
out
cmp
add
add
cmc
sub
jne
pop
and
and
sub
rcpps
aam
sub
jle
cld
fdivp
add
add
pop
sbb
jns
fisttpll
mov
adc
hlt
cltd
lds
repz
mov
push
mov
cwtl
mov
sbb
mov
jmp
add
add
mov
add
pop
leave
lods
fs
fcmove
add
add
add
ljmp
inc
xchg
inc
test
or
add
cmp
sbb
mov
pop
pop
jecxz
imul
mov
sub
inc
add
add
add
mov
or
rolb
add
leave
fistps
mov
int3
add
add
pusha
movsl
lock
pusha
nop
lock
repz
mov
mov
add
add
xchg
sbb
add
add
test
and
enter
das
push
out
mov
xor
jmp
dec
add
add
ds
shlb
aam
dec
push
dec
add
add
pusha
js
je
jl
and
push
repz
loope
push
pop
add
and
in
sub
adc
pop
inc
add
add
push
xlat
xlat
inc
add
add
les
add
jb
inc
sbb
insb
int
adc
inc
inc
pushf
adc
cmp
pop
jl
mov
outsl
push
fstpl
inc
call
add
out
cli
push
scas
sbb
lret
sub
sbb
movsl
inc
or
inc
cmp
adc
fs
add
add
popa
mov
js
dec
cmp
add
add
or
add
sbb
inc
add
add
mov
or
add
or
imul
add
out
push
stos
insb
pop
movsb
push
and
add
addb
add
add
pop
push
cs
jno
imul
pop
push
xchg
inc
sbb
add
add
mov
and
or
add
sbb
mov
sub
ret
lret
and
xchg
fistps
inc
add
add
test
add
lret
scas
loope
xor
xor
mov
fists
in
stc
pop
mov
cli
scas
shl
int3
add
add
pop
jno
lods
xor
mov
orb
in
add
add
push
pop
jae
out
mov
add
jg
sbb
sbb
cwtl
out
adc
cmp
jnp
jle
adc
add
cmp
mov
add
je
add
in
pop
enter
push
lea
outsb
ds
inc
add
add
xor
out
jne
xor
mov
decl
sub
add
add
push
xchg
scas
push
xchg
std
leave
aad
es
int3
add
add
in
xchg
xor
add
bnd
cmp
xchg
fadds
lret
mov
mov
outsl
pop
pop
sbbl
mov
cmpsl
addb
add
pop
mov
lods
sbb
movsl
jno
out
andl
pop
mov
add
xchg
cmp
sub
imul
mov
mov
add
pop
pop
fcmovu
mov
add
pushf
xor
xor
add
add
push
rol
mov
rolb
add
fs
push
movsb
jne
daa
sbb
subb
pop
mov
pusha
das
fwait
mov
jg
add
add
addl
outsl
inc
add
add
add
or
sarb
out
push
sbb
mov
add
add
or
les
add
add
add
les
add
fldenv
int3
add
add
adc
add
add
je
lods
bound
inc
add
add
movzwl
gs
xchg
mov
jbe
cmpl
loope
add
sbb
pushf
ret
push
sbbl
add
add
mov
cmpsl
cld
mov
jo
add
movsl
and
or
popf
loope
sti
data16
cmp
testl
imul
mov
adc
add
add
stos
and
adc
dec
adc
inc
jg
jecxz
out
stos
loope
add
add
adc
add
add
inc
add
add
sbb
add
inc
add
add
mov
adc
es
mov
push
fucomp
dec
add
add
int3
add
add
cli
aam
sbb
ja
test
add
cmp
popf
test
cld
mov
and
inc
add
add
xor
mov
add
pop
ret
dec
pop
das
es
in
push
mov
jns
daa
ss
dec
add
add
mov
sub
mov
roll
sub
sbb
int3
add
add
add
adc
mov
jnp
xchg
jp
test
cmpsl
jmp
or
cmc
mov
inc
pop
xor
add
xor
or
add
cmc
fsts
dec
loop
mov
mov
jbe
nop
mov
ret
pop
add
add
push
sbb
movsb
popa
das
cmpsl
rclb
mov
scas
les
add
dec
sub
mov
and
sbb
xor
jne
shlb
mov
sarb
and
and
mov
cltd
push
mov
inc
scas
movsb
mov
or
mov
movsl
jecxz
ret
scas
xor
mov
popa
fadds
add
xchg
xchg
mov
adc
lahf
arpl
in
loop
sbb
add
add
jl
adc
insl
xorb
imul
lock
dec
add
add
add
add
xchg
xlat
cltd
iret
mov
int
or
nop
add
add
lret
jae
jae
dec
sbb
rol
iret
outsl
mov
add
xor
fistl
repz
arpl
lock
stc
cmp
add
add
add
fstps
fldenv
int
cmpsl
push
and
pop
or
add
pop
adc
pop
cltd
lahf
jnp
add
add
sbb
and
std
mov
aas
ja
inc
add
add
pop
int3
add
add
hlt
and
mov
mov
cmp
js
add
add
pop
pop
dec
hlt
mov
push
push
jns
push
adc
fdiv
xchg
pop
jno
cmc
fiaddl
add
add
int
lock
xchg
sti
jmp
push
lds
test
add
std
push
cmp
shrl
jecxz
in
add
mov
pop
scas
or
add
add
dec
outsb
jne
add
add
xor
dec
imul
pop
push
inc
add
add
adc
aaa
mov
jb
add
add
aad
ret
movl
lahf
push
loope
addb
add
psubq
lods
stos
sub
daa
test
add
push
xchg
enter
mov
addr16
jge
aas
in
xchg
xchg
lock
adc
jecxz
stos
xlat
or
dec
lock
xchg
cmp
in
cmp
lods
pop
jmp
push
in
or
bswap
icebp
cmpsl
mov
push
xor
dec
xchg
repz
jbe
call
xchg
jnp
add
add
mov
scas
add
add
sar
push
pop
popf
outsl
fldt
rol
cmovle
or
lock
sahf
rclb
push
pop
sbb
call
cmpsb
xor
loope
shlb
add
push
inc
out
fucomp
lcall
pop
and
pop
xchg
sti
lods
loope
hlt
pop
in
xor
leave
cwtl
cmp
addr16
add
add
jp
sub
cmp
sub
ljmp
and
cmpsl
ljmp
lds
imul
sub
sub
sbb
adc
sbb
clc
push
mov
scas
mov
add
jle
mov
push
jge
into
fdivs
cmp
add
add
pop
mov
add
add
inc
mov
sub
dec
mov
push
faddl
dec
mov
dec
and
les
add
mov
cltd
mov
fildl
add
out
dec
add
add
lea
insb
icebp
inc
addb
add
push
inc
dec
lods
xor
xchg
rep
test
inc
pop
inc
cmp
lret
add
add
decb
jp
loop
sbb
imulb
adc
inc
shlb
mov
lods
jne
add
out
xrelease
fs
push
jecxz
add
add
sub
bound
add
arpl
mov
lret
inc
adc
repz
add
add
sub
std
gs
add
add
mov
add
pusha
mov
or
pop
adc
out
or
add
pop
nop
and
stc
std
xchg
adc
and
mov
mov
add
add
or
add
shr
cld
shlb
filds
sti
and
add
add
xchg
cmp
lock
xor
sub
sbb
imul
add
add
dec
cmp
adc
test
xchg
push
shl
pop
mov
add
add
add
daa
mov
add
add
aaa
mov
mov
jno
sub
add
add
dec
test
fmuls
iret
mov
pop
xorl
add
add
rolb
add
outsl
sbb
cli
dec
outsl
insl
out
xor
and
cmp
in
mov
add
mov
add
jg
shl
push
out
stc
icebp
enter
jg
dec
in
mov
incb
das
out
mov
add
add
repz
add
or
and
inc
add
add
sub
push
mov
add
imul
add
add
add
or
imul
mov
mov
shrl
xor
dec
sbb
outsb
loopne
das
stc
test
test
xlat
inc
outsl
jecxz
add
add
xor
mov
fildl
xor
inc
rorl
add
add
dec
popf
jo
mov
add
add
sahf
cmp
mov
nop
cli
jns
nop
inc
mov
mov
dec
add
add
or
lea
jl
xlat
sbb
adc
mov
add
jo
mov
push
out
jmp
cmc
push
sbb
sbb
orb
movsl
xchg
scas
es
repnz
jo
imul
mov
add
sub
push
fwait
add
jne
xchg
aas
add
add
outsb
mov
cmp
adc
cmpb
inc
and
add
or
incb
add
icebp
fwait
inc
add
add
adc
dec
jbe
jmp
add
outsb
adc
out
and
xor
jecxz
in
test
stc
mov
or
movl
xchg
adc
xor
push
repz
mov
push
lods
xchg
adc
rolb
add
adc
pop
sub
add
add
jb
pop
inc
sbb
add
mul
cltd
insl
sbb
add
add
mov
cmp
lcall
xchg
nop
fs
jno
mov
push
fisubs
mov
add
mov
add
xchg
movsl
aam
je
in
cmp
test
in
sub
add
repz
into
fldl
mov
add
add
std
add
add
mov
jmp
add
cli
mov
jno
ret
stos
sbb
call
sbbl
cmc
int3
add
add
mov
sub
jbe
or
add
xor
push
sbb
push
add
add
add
xchg
add
add
inc
xor
add
loope
insb
test
add
or
add
std
add
add
scas
xchg
cmpsb
sbbl
out
xor
jb
fwait
xor
dec
push
test
jbe
pop
mov
mov
xlat
mov
repnz
stc
push
sbb
adc
lds
add
push
cmp
inc
push
push
lret
push
mul
mov
jns
add
cs
add
add
mov
enter
jecxz
cwtl
mov
mov
xorl
nop
mov
cmpsl
mov
or
ja
xchg
daa
jmp
inc
sarb
add
jp
leave
jmp
mov
fcmove
sbb
push
imul
pop
xlat
and
add
leave
add
add
or
lret
cs
nop
xor
push
lret
enter
mov
pop
or
cmp
popf
dec
add
add
dec
hlt
mov
add
push
vcmpge_oqpd
sub
lods
cwtl
pop
scas
sarb
cmpsb
lods
addb
add
adc
fldenv
adcb
add
pop
cmp
mov
into
fs
add
push
jge
addb
adc
add
adc
mov
mov
ja
xchg
mov
lahf
pop
scas
stos
mov
add
sbb
adc
add
add
or
add
mov
jecxz
out
sbb
jmp
cmp
lcall
in
jb
sbbl
xor
scas
dec
add
add
fildl
add
add
dec
mov
sbb
or
push
sub
scas
push
popa
sub
les
add
mov
add
add
mov
lock
je
outsl
sarl
stc
lods
pop
push
out
pop
pop
pop
cmpsl
sbbb
movsl
mov
add
aam
sti
testl
add
add
enter
in
shrb
ljmp
cmp
cmpsb
out
or
add
lock
cltd
sti
popa
int3
add
add
lcall
iret
cmp
orl
and
sub
aad
pop
mov
add
ja
pop
mov
dec
add
add
cld
mov
mov
pop
mov
addb
add
pop
sub
clc
inc
stc
adc
dec
inc
mov
mov
jmp
hlt
add
cmpsl
cmp
ja
mov
aaa
ja
and
push
pushf
jae
xchg
cmovne
pop
xor
popl
testl
add
add
not
lret
or
add
inc
or
add
mov
mov
jnp
jo
xchg
inc
mov
sbb
cltd
sti
loop
and
cmp
fmul
jnp
jmp
mov
shrl
outsb
lods
lret
add
jbe
stc
faddp
add
add
push
addb
add
add
add
sbb
push
lret
out
push
sbb
push
push
xchg
test
push
rolb
add
mov
xchg
test
les
add
shll
scas
adc
add
add
add
add
sti
dec
add
add
add
add
arpl
imul
fwait
adcl
add
add
inc
or
sbb
and
cmc
clc
bound
inc
add
add
mov
arpl
xor
fsubrp
jge
in
mov
ret
push
xchg
adc
mov
cli
inc
dec
mov
lahf
and
rolb
add
enter
shlb
lock
sti
jbe
lea
pop
imul
lock
add
aaa
data16
xor
push
add
add
mov
rcrl
scas
mov
xchg
sub
add
mov
xchg
mov
or
add
add
mov
push
sub
add
addb
add
dec
xor
clc
sbb
cmp
or
push
inc
inc
fbld
sbb
mov
repz
sub
imul
or
add
jo
cmp
jmp
add
cld
jle
add
mov
xchg
mov
add
xchg
test
jb
fiaddl
movsb
mov
dec
pop
mov
cmp
outsl
nop
fwait
nop
mov
or
sbb
xor
pushf
and
pop
xchg
pop
inc
es
add
jecxz
fdivrp
and
add
int3
add
add
jp
xchg
fdivrp
and
jl
rorl
mov
dec
add
add
add
add
dec
stos
sbb
or
jno
repz
jnp
test
cmp
mov
add
cmp
mov
add
repz
call
pop
ja
add
add
adc
jnp
sbb
add
test
sub
xor
pop
test
mov
add
add
or
arpl
pop
xor
dec
cltd
sbbl
or
mov
add
add
adc
pop
lds
adc
lea
xor
das
or
add
cmp
jo
icebp
pop
or
add
pusha
mov
loope
cli
cwtl
xlat
mov
js
call
outsb
xorl
fldenv
popf
sbb
gs
test
add
outsl
shll
mov
add
dec
add
add
ror
add
ljmp
push
int
in
add
add
add
insb
inc
out
cmpsb
outsl
leave
xlat
dec
into
xor
add
add
mov
sub
js
xchg
sub
orl
add
daa
sahf
mov
xchg
add
mov
and
shll
pop
rcrl
mov
add
add
add
out
negl
es
cli
xchg
pop
push
push
or
cmp
pusha
dec
loop
mov
std
xchg
dec
add
add
fldl
xchg
jl
or
jnp
xlat
repz
pop
cmp
call
outsl
rcrb
cltd
ror
repz
sarl
xor
dec
ret
jge
test
xor
popa
adc
stc
dec
ret
mov
add
sbbb
dec
mov
rep
fisttpll
add
scas
outsl
jecxz
jnp
dec
add
add
mov
mov
aaa
sbb
adc
add
outsl
mov
or
mov
lods
mov
hlt
push
xchg
dec
add
add
nop
inc
inc
or
mov
add
add
dec
lea
jbe
lods
add
add
ucomiss
mov
rcl
cld
pop
shrb
add
add
lds
dec
je
mov
add
add
sub
add
push
in
add
add
testb
push
cld
je
sbb
pop
adc
lret
mov
rolb
add
in
call
and
ja
pop
or
add
sbb
std
push
shll
aas
dec
add
jne
add
add
push
out
sub
into
cmp
jg
sbb
popf
sbb
add
add
outsl
pop
push
adc
imul
pop
adc
dec
inc
divb
inc
add
add
repnz
stos
mov
mov
dec
cmp
add
lcall
jmp
into
push
adc
cmpl
mov
sarb
clc
and
add
dec
aam
mov
add
add
inc
add
add
add
add
add
add
cmc
loopne
jae
or
outsl
repnz
and
movsl
jne
lds
mul
ss
sarl
add
lret
out
push
fcmove
pop
lret
scas
dec
xchg
ret
repnz
in
shld
in
data16
mov
pop
pop
lods
mov
sahf
popa
shrl
mov
add
xor
ja
out
int
inc
inc
inc
add
add
nop
jnp
packssdw
hlt
xchg
inc
add
add
sbb
mov
add
add
add
add
cmpsb
sbb
cmp
lret
mov
push
sub
fdivs
jbe
dec
add
add
pop
sbb
xor
test
sbb
cwtl
jns
clc
stc
insb
xchg
mov
lods
cld
sbb
imul
mov
int3
add
add
push
std
inc
add
add
into
sub
int3
add
add
add
add
cwtl
in
int3
add
add
and
xchg
cmp
add
add
xchg
imul
and
xchg
in
call
adc
pop
popa
hlt
movsb
and
mov
jne
out
test
inc
add
add
add
bound
sbb
add
add
xor
daa
repz
out
sti
push
cmc
cmp
xor
push
leave
jge
test
add
add
xor
pop
stc
dec
lret
push
adc
cmp
imul
or
add
lods
jbe
mov
jp
dec
enter
call
lods
iret
stc
roll
ret
add
push
leave
movsb
ds
xchg
mov
sbb
inc
jge
push
lcall
fcomp
fcom
lods
das
pop
xchg
lret
mov
add
inc
push
lds
in
jo
sub
sub
addb
add
cld
or
add
mov
lcall
pop
out
loope
mov
fdivl
insl
mov
cli
mov
rcrl
add
add
test
sbb
inc
dec
sub
jnp
fisttpl
jecxz
mov
add
insl
sbb
test
mov
pop
pop
mov
add
add
push
dec
movsb
cmp
outsl
jl
mov
sbb
mov
add
or
jnp
shll
mov
stos
movsl
and
or
jae
test
and
icebp
out
add
add
adc
sbb
xor
popf
mov
mov
mov
and
inc
adc
add
test
add
mov
push
mov
aas
sub
shl
jb
jmp
adc
mov
mov
std
or
add
ljmp
mov
cmp
mov
xchg
jmp
test
xor
and
sub
add
in
stos
in
rolb
add
loopne
dec
leave
int3
add
add
loop
mov
push
hlt
jnp
pop
in
mov
popa
pushf
cmpsb
test
add
mov
ljmp
add
add
loop
xor
test
jae
pop
icebp
nop
push
inc
sbb
and
lods
arpl
xchg
cld
sub
jae
add
add
mov
aaa
in
pop
mov
add
or
xor
mov
es
das
sbb
sbb
mull
cwtl
mov
test
add
add
ja
cld
jmp
out
and
in
scas
dec
add
add
fcompl
in
fisubl
inc
add
add
jns
cmp
pusha
pop
push
imul
pop
inc
add
add
test
sti
push
adc
add
add
iret
lahf
sub
leave
int
mov
lret
dec
add
add
fnstenv
sbb
add
add
add
add
scas
int3
add
add
aaa
push
cld
inc
mov
mov
pop
int
nop
data16
incl
pop
push
sti
rolb
add
fnstcw
adc
jle
imul
inc
add
add
addb
add
test
xchg
xchg
sti
sbb
arpl
adc
jge
xchg
jae
mov
add
inc
cmpsl
shll
clc
scas
cs
cwtl
out
lock
pushl
dec
add
add
dec
xor
sbb
dec
add
add
mov
fstl
insb
call
push
add
push
mov
neg
jl
ror
or
xor
movb
add
cmp
jl
adc
inc
ja
es
shll
addb
add
add
adc
cmp
xchg
dec
jmp
add
add
add
adc
add
add
inc
cmp
outsb
and
jae
dec
add
add
mov
and
add
add
stos
xchg
ljmp
loope
sub
and
add
inc
push
lret
push
pop
cwtl
inc
out
ret
add
pop
ds
cmp
psadbw
push
int
pushl
add
add
cmc
in
pop
sub
mov
lret
add
add
mov
mov
add
inc
lods
or
add
mov
add
add
sbb
add
add
sbb
aad
aad
dec
add
mulb
jne
enter
arpl
push
add
add
mov
imull
mov
repz
inc
sbb
cmp
mov
add
dec
sbb
leave
push
aas
sub
mov
inc
sub
jno
test
add
push
ss
mul
xchg
test
dec
mov
or
or
dec
xor
jbe
int3
add
add
push
out
add
rcll
jge
sub
test
add
sub
lahf
andb
dec
lock
inc
xchg
call
test
data16
add
add
mov
addr16
fstl
or
int
icebp
enter
test
inc
add
add
add
add
push
and
and
add
imull
dec
push
inc
adcb
add
mov
je
dec
mov
lret
aam
rep
sbb
adc
mov
dec
jp
das
pop
ds
imul
sub
add
add
cmpl
add
add
stos
xor
shlb
lea
add
add
into
cmp
cmp
fucom
stc
xor
push
add
mov
add
add
add
sub
nop
add
imul
dec
leave
sub
pop
ds
or
movsb
aas
pop
xchg
cmp
in
push
into
cmc
fsubrp
mov
add
shlb
jbe
add
add
add
ret
js
mov
scas
fldcw
lods
decb
add
add
jne
rcr
push
je
stos
aas
sbb
ret
sub
mov
add
jge
fnstsw
cmpsl
sub
pop
cld
dec
lods
jo
test
jmp
fsubrs
int3
add
add
xchg
rolb
add
inc
xchg
xor
mov
call
and
cmc
xchg
ljmp
inc
shll
pop
addb
add
add
add
out
std
movsb
ja
dec
popl
les
add
ret
ret
lods
mov
sbb
sub
push
les
add
orl
xorl
add
xchg
pop
test
fwait
mov
filds
in
pushf
mov
cmpsb
jbe
lret
mov
adc
add
add
adc
jmp
jmp
push
adc
cli
fidivrl
insl
add
add
insl
xor
imul
ror
es
lock
stc
sbb
adc
test
xchg
sbb
cmp
add
add
or
add
jecxz
jae
xchg
xchg
push
ret
imull
aaa
xlat
fwait
mov
dec
add
add
mov
ret
enter
xor
and
inc
cs
shll
adc
movsb
stos
mov
jg
add
add
pop
push
leave
mov
aad
add
add
movsl
test
mov
cmp
arpl
xor
stc
push
repnz
mov
inc
pop
and
add
add
les
add
mov
add
add
add
dec
cli
mov
jle
mov
add
sbb
enter
mov
ljmp
sbb
dec
add
add
dec
add
add
jp
cmp
ds
scas
sub
ljmp
and
ljmp
add
add
in
std
ss
add
cmp
mov
add
mov
es
test
or
cmpl
inc
inc
test
std
mov
xchg
out
cwtl
jg
loopne
add
add
sbb
lds
mov
and
cmp
mov
inc
add
add
outsb
dec
add
add
int
and
mov
stos
sbb
add
add
addr16
inc
sub
jb
add
add
cmc
call
popf
loope
sub
xchg
lahf
mov
add
add
mov
add
imul
mov
lds
mov
insb
scas
cmp
xor
imulb
sbb
call
cmc
sub
rclb
xchg
ficomps
xor
push
subl
add
dec
sbb
push
pop
adc
mov
add
mov
mov
les
add
lahf
ficomps
xchg
mov
xchg
pop
dec
ss
add
add
aas
push
add
add
mov
ss
add
add
es
call
sbb
and
mov
add
add
add
ja
pusha
loopne
dec
add
add
add
add
jmp
cli
bound
in
dec
mov
push
sbb
and
mov
movsl
xchg
cmpsb
aas
xchg
xchg
fldt
xor
xchg
imul
add
mov
notb
les
add
push
or
add
sub
dec
push
fistpl
sbb
push
dec
sub
add
jmp
mov
rcll
push
cs
in
add
fldpi
xchg
orl
and
push
dec
sub
mov
add
sbb
add
add
jmp
xor
aam
xchg
dec
or
xchg
jnp
xchg
push
jno
pop
inc
or
add
cltd
arpl
mov
repnz
daa
cld
inc
pusha
insl
lods
aam
test
add
add
out
nop
pop
ja
or
fmuls
add
mov
in
inc
add
add
push
out
cmp
push
mov
and
add
add
mov
mov
fsubs
lcall
cli
xchg
movsl
mov
push
add
add
mov
cmp
xchg
add
inc
lahf
jns
and
cltd
pusha
add
jge
lret
jae,pt
fdivl
orb
or
add
add
cmc
xor
cmp
je
push
lea
sub
arpl
mov
xchg
aaa
xchg
push
rolb
add
int3
add
add
fistps
pop
mov
add
sbb
adc
mov
add
cmp
and
jns
pushf
insl
fs
out
in
test
add
enter
pop
imul
lahf
mov
cs
add
add
addl
adc
push
ljmp
xlat
push
cmpb
lcall
cltd
int3
add
add
xchg
mov
cmp
icebp
rolb
add
add
mov
add
ror
xchg
sarb
repz
add
add
sbb
outsl
cmp
leave
js
es
add
add
add
aam
in
imul
sub
into
adc
outsl
inc
addr16
int3
add
add
xor
sub
cld
sub
push
jl
dec
sbb
rorl
aam
mov
add
inc
mov
inc
sbb
jo
aam
xor
xchg
inc
add
add
dec
aad
add
add
sub
push
dec
jo
adc
jmp
sub
cmpl
xor
mov
aad
icebp
jp
fbstp
scas
push
cmp
or
mov
add
es
call
in
pop
pop
inc
xchg
roll
add
add
mov
xchg
int
cmp
in
mov
dec
dec
add
add
mov
cld
popa
loopne
pop
mov
clc
adc
mov
andl
inc
imul
xchg
fldl
lds
cmp
lcall
bound
dec
and
push
pop
ss
mov
sub
cs
add
in
jle
cs
add
inc
inc
push
shrl
inc
pop
sbb
jmp
imulb
and
stos
pop
xchg
cmp
je
pop
push
in
fmul
sbb
push
ss
gs
ljmp
fidivrl
addr16
add
add
jmp
nop
mov
or
add
add
enter
push
imul
dec
rcrl
stos
xchg
or
add
dec
mov
scas
cs
aam
scas
push
aaa
mov
xchg
ret
jecxz
das
test
add
dec
aas
sbb
add
in
xchg
cmp
rolb
add
add
aad
add
add
jae
mov
cmp
fbstp
mov
das
repz
lods
int3
add
add
shl
add
dec
xor
filds
add
js
insl
jo
add
add
add
out
jno
or
add
jo
pop
hlt
mov
xchg
xor
rolb
add
jnp
pop
bnd
clc
fninit
leave
adc
imul
add
setns
pop
fidivl
add
add
int
addb
add
jle
jge
sub
mov
insl
mov
ficoml
add
int3
add
add
std
mov
cli
sub
dec
sahf
icebp
cld
sub
inc
insb
movsb
cmpsb
inc
add
add
mov
add
fwait
xchg
pop
mov
xchg
pop
push
in
mov
adc
and
push
mov
pop
outsb
std
aas
psubb
js
add
add
paddusw
jp
add
add
std
pop
or
add
lret
ja
in
mov
sub
movsl
fwait
mov
add
adc
sbb
negl
imul
daa
leave
mov
mov
stos
mov
movsb
fdivrl
cwtl
je
enter
mov
add
js
sub
add
push
and
dec
push
cmp
mov
cmc
push
movsl
mov
inc
add
add
sbb
xor
sarl
out
cmpsl
or
pop
mov
test
sub
mov
fidivl
movsb
sub
or
sub
or
dec
cld
aam
loope
loop
int3
add
add
add
mov
add
lods
mov
xchg
jge
cmpsb
add
add
repz
ret
jp
mov
add
add
and
pop
repnz
add
insb
out
mov
icebp
lods
push
mov
ret
leave
xor
sub
push
notl
int
test
sti
sub
add
add
and
fisubrl
dec
fldenv
inc
add
add
or
add
je
adc
xchg
out
sbb
lret
rolb
add
sbb
mov
in
fwait
push
pop
psrld
inc
sbb
add
add
mov
fs
or
mov
add
add
in
std
cmovnp
lret
xchg
add
fisttps
jge
mov
adc
add
add
in
repnz
dec
add
add
add
rolb
add
or
sub
loop
popa
mov
add
add
iret
outsl
fwait
sub
out
add
add
daa
out
hlt
or
add
lods
int3
add
add
mov
lret
add
add
out
ret
jne
cmc
icebp
adc
mov
add
jo
test
add
xchg
inc
ret
leave
jno
gs
mov
add
jg
arpl
fidivs
add
inc
in
inc
movsb
test
add
or
fistpl
out
sub
jne
ret
mov
icebp
dec
mov
add
pusha
jb
cmp
test
dec
add
add
fsubs
into
sub
adc
leave
xor
lcall
popf
xchg
mov
lcall
push
fs
adc
sti
xchg
push
loop
add
add
aaa
push
add
idivl
std
call
repz
add
add
ss
jg
int3
add
add
jb
inc
fcompl
idivb
shr
push
lds
shl
mov
and
popa
mov
aaa
or
or
add
jmp
shlb
iret
mov
mov
cmp
cli
in
add
push
mov
es
pusha
test
xor
and
dec
sarl
add
cltd
add
xor
nop
addb
add
cli
stc
insb
jg
xlat
mov
mov
scas
addr16
adc
cmc
pusha
les
add
sub
sarb
xchg
add
xorb
pop
sbb
ret
scas
fisttpll
mov
fimuls
add
add
add
ficoms
sbb
mov
pop
inc
add
add
push
xchg
ficompl
sub
js
fisttpl
add
hlt
std
xor
test
cmpsl
mov
sbb
or
and
lret
jns
push
mov
add
add
add
test
add
xlat
mov
lahf
add
or
add
jbe
mov
pop
xor
add
gs
scas
pushw
jp
scas
aam
pop
and
roll
add
xchg
mov
adc
popf
and
addl
call
sub
lods
aad
xchg
mov
pop
iret
xor
fcmovnu
daa
jne
and
in
lret
movsb
jg
insl
inc
or
add
mov
inc
add
add
xchg
jle
adc
fdivl
popf
test
push
int3
add
add
jge
add
add
and
ret
adc
mov
popa
xchg
test
add
shl
jecxz
rcl
add
add
add
ja
fbld
sahf
fwait
sbb
sbb
push
enter
mov
add
add
out
jo
aad
lret
cltd
scas
leave
jp
out
lea
mov
add
es
cld
test
dec
add
add
out
mov
aaa
jbe
bound
arpl
jno
xchg
or
add
inc
mov
pop
push
cmp
push
pop
xchg
sbb
repnz
pop
nop
and
pop
mov
sbb
mov
sub
add
cmpsl
jo
leave
rolb
add
ds
push
pop
jo
push
xor
imul
adcb
mov
scas
lds
xchg
jp
in
stc
rolb
add
ja
sbb
xor
cld
push
push
mov
add
cmp
mov
ret
add
divl
stos
xor
rolb
add
add
add
pop
addps
push
in
jge
adc
out
rolb
add
jecxz
mov
add
mov
adc
pop
inc
add
add
jmp
inc
add
add
jns
loope
add
add
mov
les
add
aaa
jp
push
xchg
aaa
loopne
incb
add
add
leave
jb
addr16
mov
mov
out
stos
sub
add
lods
add
sub
add
xchg
aad
mov
pushl
test
stos
add
cmp
sbb
cmp
cld
mov
hlt
inc
sbb
outsl
iret
in
add
add
mov
add
jmp
out
ficoms
xchg
aad
clc
stc
sbb
int3
add
add
clc
dec
add
add
inc
int3
add
add
insl
jmp
mov
scas
xchg
and
add
or
jae
sub
xchg
rorb
iret
and
jp
fadds
add
cmp
or
add
or
add
xchg
xor
scas
rcl
mov
jne
dec
adc
es
mov
repz
shlb
sub
aaa
insb
mov
add
add
stos
iret
xor
arpl
mov
dec
add
add
fmull
xchg
mov
outsb
or
jp
add
add
lods
sarb
add
or
imul
test
add
add
mov
cmp
dec
add
add
popf
data16
pop
mov
xor
inc
add
add
inc
sub
shll
mov
mov
out
mov
sub
inc
add
add
aaa
jb
xor
xchg
leave
push
xor
les
add
pusha
test
mov
adc
mov
add
in
adc
push
sbb
pop
dec
loop
sahf
jecxz
rclb
arpl
cmp
jmp
sti
mov
jp
push
add
add
out
outsb
push
addb
add
fcomi
pop
xchg
pop
dec
mov
xchg
ss
scas
pusha
jo
adc
les
add
lret
add
add
and
lods
imul
sahf
lahf
pop
jne
dec
loope
aam
push
rolb
add
ljmp
add
jnp
dec
add
add
lcall
jl
cld
add
add
mov
add
out
incl
mov
jp
add
add
hlt
or
hlt
fldl
add
add
cmp
fs
sub
jo
lods
call
jmp
or
add
add
and
jno
sub
lock
lea
xchg
cmp
inc
jo
add
add
and
mov
add
shlb
mov
sub
inc
xor
add
add
mov
xchg
cmpsb
xchg
add
add
nop
sbb
ret
imulb
fdivrs
mov
xchg
fbld
enter
arpl
in
add
jnp
in
mov
and
sti
sarb
jl
nop
xor
mov
add
shrb
xchg
je,pn
test
sbb
std
sbb
movsb
in
cltd
outsl
mov
add
adc
es
mov
fs
mov
bound
sahf
mov
lea
mov
sti
fstl
fimuls
fs
add
add
add
cmp
test
add
dec
insl
ljmp
ljmp
call
ja
or
add
fwait
mov
mov
mov
mov
push
iret
pop
pushf
fldl
and
out
loop
push
pop
enter
cli
ljmp
add
shr
sbb
dec
mov
add
add
sbb
fstps
divb
add
add
mov
xor
pop
sbb
cli
outsb
fsts
cmp
or
add
insl
push
scas
xor
add
inc
xor
add
xlat
jne
add
add
add
add
push
xchg
rolb
add
dec
pop
and
or
add
repz
outsb
dec
add
add
adc
jecxz
and
shll
mov
lods
mov
mov
xchg
aad
aam
outsb
push
lahf
jl
lahf
jns
mov
add
scas
leave
and
lcall
loopne
jns
ret
idivl
dec
adc
mov
notb
pusha
cmp
add
hlt
xor
div
mov
mov
inc
aam
mov
mov
jne
add
add
jne
imul
add
add
jmp
mov
add
add
or
inc
xchg
cmp
add
adc
cmp
push
push
stc
mov
outsl
test
in
out
in
int3
add
add
lea
xchg
scas
movsl
jle
adc
jp
out
loopne
call
add
push
and
adc
and
gs
fidivrs
mov
add
add
and
movsl
add
pop
repnz
add
outsb
push
je
xchg
sub
sub
mov
add
punpckldq
xchg
pop
cmp
outsl
jne
pop
xchg
push
xchg
jmp
inc
xor
sub
jmp
in
hlt
das
xchg
mov
jb
lods
sub
sti
mov
jb
das
sbb
jp
test
sub
jp
inc
lcall
call
dec
add
add
add
lods
out
xchg
mov
fcomps
dec
mov
add
in
add
add
and
fcoml
adc
xor
jecxz
mov
mov
imul
insb
jge
out
inc
addb
add
xchg
lock
pop
repz
mov
dec
cmc
jecxz
cmp
xor
inc
add
add
sbb
aas
add
add
repnz
int
ds
push
push
mov
das
add
add
adc
add
loop
out
ja
push
dec
add
add
movsb
psubsw
dec
into
ss
sbb
fisttps
sub
insl
mov
dec
lea
add
jb
adcl
jb
insb
dec
xchg
inc
dec
add
add
jg
or
add
xchg
pop
or
jo
xor
mov
add
cwtl
daa
mov
add
icebp
lahf
or
jne
xchg
movq
lret
cmp
xchg
popl
add
mov
pop
out
mov
cltd
mov
add
and
ror
addb
add
jae
pushf
jb
jl
add
jmp
adc
jg
or
dec
and
xor
and
dec
in
adc
clc
out
in
test
dec
cld
push
inc
sbb
imul
adc
fdivrl
and
cmp
int3
add
add
lret
dec
stc
adc
push
ja
inc
jne
add
add
xor
xor
iret
mov
ja
add
add
add
repnz
xchg
insb
adc
lret
inc
jp
lret
pop
add
lahf
movsb
pop
and
push
fsubs
mov
push
aas
dec
out
xlat
ss
add
add
int3
add
add
jp
call
dec
add
add
lahf
test
imul
or
add
pushf
repnz
push
sbb
es
pop
xchg
outsl
arpl
mov
push
cld
adc
addr16
shll
cwtl
in
sti
adc
and
add
add
add
idiv
fldcw
adc
fldl2e
out
mov
nop
pop
or
pop
mov
nop
ljmp
add
add
mov
add
add
pop
imul
cmpsl
inc
add
add
lds
adc
add
add
lahf
lret
mov
pop
push
ja
repnz
cmp
mov
cmp
cmpsb
bound
in
push
sbb
push
xor
cltd
dec
add
add
push
xchg
loop
sar
mov
add
mov
inc
jle
mov
insb
cltd
loop
xchg
popa
fists
insl
xchg
mov
add
test
or
fs
add
pop
add
push
push
aam
cmp
jp
dec
xor
ret
sti
test
add
imul
cmp
rolb
add
sbb
sub
cmp
add
add
fbld
fidivrl
add
add
rcll
xorl
test
add
icebp
mov
mov
js
push
das
stos
lock
push
cmp
mov
ljmp
add
stc
in
in
sbb
dec
pusha
adc
lods
jl
xor
add
cli
push
test
ret
and
xor
xor
add
add
mov
and
test
add
scas
or
and
loopne
mov
stc
aas
mov
add
sti
cmp
add
add
mov
add
les
add
lcall
inc
adc
fnstenv
add
add
push
push
mov
cmc
cmp
push
test
insb
mov
add
or
xchg
fs
test
ficoms
les
add
xor
insb
pop
push
sbb
mov
mov
sbb
and
stc
shlb
wrmsr
in
into
jl
mov
add
pop
clc
mov
imul
adc
movsl
jb
pop
jnp
mov
pop
lret
and
addl
xor
clc
fcmovu
lret
fs
repz
adc
jb
add
add
pop
or
cmp
or
add
mov
int
cmpsb
or
mov
jb
xchg
lcall
jb
adc
fiaddl
fidivrl
sub
push
pop
in
fstps
jmp
cld
rolb
stc
jmp
mov
repz
jnp
mov
divb
jecxz
ret
outsl
stos
stc
mov
nop
xor
add
ret
adc
stos
jg
sub
dec
cltd
or
add
pop
push
jl
imul
cwtl
dec
ss
out
push
test
add
or
pop
cmp
add
mov
mov
jbe
sbb
js
add
add
dec
enter
xchg
xchg
stos
scas
arpl
add
add
sub
add
sub
add
add
and
repz
popf
push
ret
mov
cmp
iret
popf
xchg
push
cmp
adc
aad
aam
xor
addb
add
add
add
add
enter
xchg
movl
fimull
lahf
cmp
cmp
mov
adc
inc
mov
add
add
pop
pushf
jb
mov
xchg
mov
adc
inc
mov
push
push
or
scas
cmpsb
mov
daa
lods
mov
add
or
fs
mov
sbb
jle
daa
ss
add
add
ja
into
pop
pop
adc
dec
test
add
add
cltd
jo
out
sub
nop
mov
add
adc
add
add
into
lea
ret
xchg
push
sbb
add
rcl
xchg
es
leave
sbb
add
add
mov
add
sbb
add
add
jae
mov
cmp
lret
stos
xchg
inc
add
add
cwtl
loop
aam
or
sbb
iret
out
movsb
aas
sub
push
movsb
pop
pop
or
add
pop
inc
out
es
push
jo
add
add
ds
loop
mov
rolb
orl
mov
add
xor
mov
ret
add
xor
std
xchg
jmp
fisubrs
dec
push
mov
pushf
add
rcl
iret
ficoml
stos
xchg
lock
out
test
adc
add
add
add
inc
add
add
decb
mov
out
popf
or
add
mov
test
cs
sbb
notl
das
cmp
push
shrl
push
inc
add
add
add
mov
mov
mov
test
daa
sub
add
push
loope
scas
ret
push
xchg
push
lds
ds
insb
sub
add
add
je
fistpl
rcr
aad
jbe
adc
ljmp
push
mov
mov
inc
adc
push
repnz
cmc
cmp
aas
xor
mov
jg
call
fisubl
or
pop
aas
inc
mov
movsl
mov
addr16
mov
dec
mov
cmp
jne
xchg
stos
sbb
shlb
call
arpl
sbb
push
mov
lods
jmp
stc
cmpsl
sub
mov
ret
lret
mov
jae
add
cld
notl
push
test
mov
addr16
add
add
mov
add
add
cmpsl
sub
xchg
pop
les
add
pop
mov
mov
add
mov
add
or
add
loope
incb
jbe
push
push
dec
pop
movsb
push
add
out
dec
lods
mov
cmp
xor
or
dec
add
add
push
or
add
ficompl
add
les
add
inc
icebp
dec
add
add
dec
add
add
sarl
mov
sbb
push
mov
add
add
addr16
xchg
mov
add
and
jb
inc
add
add
mov
cmp
aam
add
add
xchg
into
jg
cmp
adc
ss
out
inc
enter
cmpsl
fcmovb
in
mov
add
lods
pop
inc
pcmpeqd
sbb
pop
stos
clc
add
rorb
pop
stc
test
add
mov
inc
add
add
push
cmp
inc
cli
lret
inc
add
add
push
ljmp
mov
and
add
add
dec
or
lock
into
hlt
xchg
pop
aad
pop
jnp
jmp
mov
add
add
scas
and
inc
lret
pop
dec
int
cmp
xchg
pop
icebp
andb
int3
add
add
and
xlat
daa
or
add
push
cs
mov
lods
cmp
cltd
xor
call
jb
or
or
add
movsb
cmp
cmp
add
add
jne
add
add
and
jge
push
rorb
add
push
outsb
xor
push
xor
push
cmpsb
int
jb
inc
pop
scas
bound
add
leave
mov
add
adc
mov
sbb
mov
sub
ljmp
cmp
jne
lds
add
hlt
sub
pushf
cwtl
xchg
cmp
test
add
mov
test
subl
sbb
fs
cmpsl
xor
sbb
int
cwtl
aad
push
lret
xor
mov
or
xor
or
xchg
add
jmp
xor
shll
jge
test
add
gs
rolb
jp
aas
adc
arpl
mov
add
xor
add
add
in
popa
cwtl
jl
les
add
cmpsb
dec
jmp
add
lds
add
add
sub
mov
sub
add
add
jns
pushf
shlb
mov
mov
mov
add
add
addb
add
jge
jbe
sarl
add
aaa
sub
pop
leave
xchg
jge
add
add
fcoml
lcall
add
add
mov
pushf
insl
pop
jle
and
add
add
add
fs
popl
add
cld
mov
mov
push
mov
add
or
add
popa
mov
add
mov
ja
in
cli
pop
inc
add
add
clc
loop
mov
mov
mov
scas
dec
adcb
out
incl
shlb
or
das
inc
jl
es
les
add
sub
mov
xchg
adc
pusha
divl
loop
xor
add
add
movsl
imul
and
jae
adc
jo
xor
mov
je
fidivs
mov
inc
pop
sub
pop
xorb
sarl
fldcw
test
add
dec
add
add
xchg
loop
xchg
loope
sbb
mov
jbe
push
sub
test
add
sbb
cmpsb
lods
cmp
xor
jmp
insb
and
das
les
add
hlt
jle
add
add
mov
fwait
rorb
sbb
je
pop
add
add
je
negl
add
add
out
dec
push
ror
adc
inc
sub
dec
xor
mov
arpl
push
cs
inc
pop
stos
dec
int
arpl
dec
push
pop
sahf
adc
loop,pn
add
add
cmpsb
adc
xchg
adc
cwtl
push
ss
add
add
cwtl
pushf
pop
adc
lret
das
mov
xchg
hlt
fbstp
xchg
sbb
ljmp
add
sbb
and
add
add
fwait
mov
cs
xor
xor
sub
out
mov
scas
cmp
mov
lea
cli
dec
shrl
jmp
mov
stos
xchg
scas
imul
inc
dec
pop
insb
mov
or
mov
inc
xor
repnz
fisubs
mov
add
in
push
ds
jmp
push
dec
ja
mov
mov
pop
jp
mov
popf
pop
clc
stos
xor
inc
add
add
rolb
add
or
pop
cld
add
add
leave
jge
xchg
or
add
mov
mov
add
test
push
les
add
add
ss
adc
mov
sbb
adc
test
add
or
add
fwait
lock
lea
dec
sbb
sbb
sti
xchg
fs
pushf
adc
jb
sbb
xor
inc
adc
push
cmp
mov
add
add
cmp
insl
push
xchg
pop
test
add
hlt
mov
andb
push
imul
add
add
xchg
add
add
and
setbe
inc
add
add
xor
fidivrs
loop
insb
inc
adc
ret
movsb
out
push
ds
mov
fbld
lea
flds
or
and
sub
pop
jb
dec
jle
into
aad
scas
pop
int
imul
aam
movsl
xor
fisttpll
lods
loope
push
shrl
jb
jo
cmp
loop
ljmp
add
mov
rorl
add
add
stos
repz
xor
jmp
ds
mov
in
adc
addb
add
inc
mov
adc
js
aaa
dec
xchg
aam
add
add
test
ret
repz
sub
add
add
mov
or
dec
fidivrl
aad
mov
imul
stc
push
scas
add
dec
cs
fcoms
xchg
stc
hlt
jns
pop
call
imul
xchg
jge
add
add
in
mov
mov
loope
jg
pop
iret
aad
xchg
into
sbb
repz
add
push
test
mov
xchg
cld
jp
xchg
cmp
rolb
add
dec
add
add
notb
sbbl
mov
dec
add
add
sbb
push
cmp
adc
fstpt
lcall
xor
sti
outsb
aam
leave
or
xor
jo
daa
dec
jge
test
add
jne
push
stc
xchg
pop
in
mov
data16
mov
js
mov
add
sbb
add
add
add
aas
cmp
add
add
and
inc
sub
mov
or
add
fsubl
jns
test
add
and
inc
push
mov
mov
out
add
add
test
add
add
cmp
add
mov
add
add
mov
add
add
add
add
inc
ret
ds
sbb
mov
add
push
add
outsl
scas
dec
add
add
xor
in
inc
and
iret
xor
push
test
fs
jne
repnz
add
add
lahf
sub
push
cld
jg
mov
jb
add
add
icebp
xchg
mov
in
mov
sti
mov
insl
dec
fdivp
sbb
in
inc
daa
xchg
xchg
pushf
inc
aam
add
cmp
xchg
repz
add
adc
add
add
jmp
addb
add
push
xor
mov
mov
insl
mov
or
popa
xor
push
sti
sti
mov
in
in
mov
add
and
test
add
fisttpll
jo
sub
pop
or
jb
lods
iret
add
daa
int3
add
add
xchg
scas
test
clc
mov
add
add
adc
push
sub
test
mov
xor
xchg
add
add
insl
xchg
lcall
mov
add
mov
xor
movq
cltd
mov
xchg
shlb
inc
add
add
add
push
imul
add
add
mov
add
and
fs
sub
or
add
add
ficomps
cmp
lret
push
out
and
cmp
mov
add
aam
call
mov
add
pusha
cld
btr
and
imul
mov
adc
add
add
mov
push
and
inc
add
add
lea
sub
in
inc
sub
jl
cmp
pop
lahf
cmp
add
add
mov
int
and
cli
sbb
jge
fs
mov
out
in
push
mov
leave
pop
ficompl
adc
mov
in
add
add
xor
xor
cltd
cmpsb
push
repz
lods
pop
mov
sub
add
mov
shll
jae
jge
daa
push
addb
add
fldenv
sbb
cmp
test
inc
and
popf
push
adc
adc
mov
xor
pop
aam
icebp
scas
or
stos
imul
outsb
repz
inc
add
add
xor
pcmpeqw
int
xlat
loop
stos
ret
test
xor
aad
inc
adc
rcrl
mov
add
mov
sbb
jge
add
add
cs
add
cmc
mov
add
idivb
add
rolb
add
subb
add
add
dec
add
add
es
push
or
in
sbb
fldenv
ja
jmp
dec
and
movsb
jle
cmp
xor
or
int
into
pop
mov
mov
popa
lret
pushf
jns
add
add
fists
add
add
xchg
out
cs
xorb
popf
mov
inc
add
add
lea
adc
cltd
xchg
adc
ficoms
and
mov
lcall
push
and
sbb
or
jns
xchg
jo
mov
nop
cli
xor
pop
push
xchg
and
and
or
xchg
add
add
pop
mov
rolb
add
push
rorb
add
dec
lock
sub
pop
lods
push
sbb
mov
enter
jecxz
cmp
mov
jmp
fwait
jge
mov
nop
out
cs
scas
mov
add
add
sbb
xchg
lahf
out
adc
add
add
add
add
sti
dec
push
pop
xor
in
mov
idivl
pop
lcall
inc
mov
or
add
sub
mov
xor
jmp
insl
push
pop
repnz
mov
xor
push
sub
dec
xchg
cmp
mov
push
mov
popa
data16
mov
mov
addb
add
movsl
ret
cltd
xlat
sbb
and
filds
cwtl
push
into
rcrl
fbld
cmp
pusha
jl
add
add
cmp
cmp
das
sbb
scas
hlt
fstps
lds
inc
pop
in
iret
test
and
test
xchg
out
testl
icebp
or
add
aad
insl
mov
add
xchg
test
mov
stos
mov
mov
xorl
fucomp
fdivrl
add
add
add
xor
test
movsl
jecxz
loopne
adc
xchg
xor
iret
aad
cmp
add
add
xchg
jg
push
sub
ja
lods
arpl
xchg
leave
lahf
inc
add
add
inc
push
imul
inc
add
add
sbb
mov
clc
mov
jno
ljmp
xor
ljmp
mov
loope
mov
aad
movsl
dec
pushf
xchg
dec
add
add
add
add
mov
jae
mov
incl
xchg
clc
jmp
jle
in
add
add
fidivl
inc
jecxz
dec
lods
fs
inc
push
xchg
aad
jne
xor
sbb
add
or
std
xchg
enter
add
mov
add
mov
mov
inc
push
inc
cmpl
mov
addb
add
push
dec
mov
int
add
add
sbb
xchg
out
push
jnp
dec
mov
mov
mov
loop
or
lods
mov
es
jb
and
pop
push
inc
rcll
iret
jmp
sbb
in
jne
xchg
inc
inc
xchg
dec
pop
add
sub
pop
sbb
mov
cwtl
sbb
andl
or
add
mov
fsubrl
dec
lret
jmp
jbe
sarb
mov
aaa
fcmove
nop
out
push
xor
sbb
and
lret
in
aad
jecxz
pop
mov
mov
push
insl
hlt
sbb
popf
mov
mov
add
add
add
add
adc
outsl
fdivrs
mov
insb
nop
mov
pop
movsl
dec
cmc
ret
jo
cmc
xchg
outsb
mov
push
push
sub
fs
sahf
jns
nop
pop
movb
pop
jle
mov
cmc
push
pop
mov
sarl
sub
and
push
int
adc
sub
xor
push
mov
add
add
adc
test
clc
sti
mov
xchg
fstpt
popf
nop
mov
test
add
add
mov
add
cmpb
adc
jae
adc
fidivs
idivl
out
mov
and
pop
push
gs
push
shrb
add
add
adc
daa
aaa
or
jae
aas
or
fldcw
in
addb
add
mov
pop
lret
rolb
add
cmp
int3
add
add
movb
jge
jbe
cmp
or
add
popa
or
add
cltd
dec
add
add
in
pop
mov
movsl
popa
xchg
pop
ja
mov
pop
roll
add
dec
lock
mov
jle
test
sbb
test
add
add
idivl
push
cmpb
or
add
sbb
cmp
mov
mov
mov
js
fwait
js
cmpsl
pop
push
cmpsl
imul
xchg
push
lea
cltd
dec
add
add
cmp
daa
jno
and
adc
mov
aaa
xor
mov
cmp
dec
add
add
xlat
lods
std
shll
jae
lahf
lock
mov
add
push
insb
jb
in
leave
stc
daa
pushf
mov
in
push
imul
in
movsl
std
imul
add
add
mov
jns
stc
cmp
jnp
imul
out
cmpb
nop
in
xchg
clc
das
xchg
cmp
pop
push
aaa
or
shll
add
imul
fst
inc
push
cmpsb
jns
push
test
add
add
nop
jb
inc
add
xchg
mov
add
mov
fidivrl
and
inc
add
add
int3
add
add
jl
jmp
inc
add
add
add
addb
add
vsqrtpd
pop
leave
je
jnp
sub
repnz
cmp
xor
pop
lods
aaa
adc
push
mov
and
add
in
cli
loope
dec
fs
sti
inc
pop
add
cltd
gs
add
add
mov
and
test
xchg
mov
add
inc
add
add
xlat
cld
xchg
adc
sbb
imul
push
stos
sbb
add
add
test
inc
in
nop
push
cmovs
add
or
xor
add
pop
sub
popf
insl
push
int
cmc
jns
add
add
movsb
loope
push
test
or
dec
add
mov
or
add
ljmp
in
js
jmp
add
add
add
add
or
jmp
fbstp
add
push
adc
jno
orb
add
shlb
aaa
loope
lahf
cmp
adc
sahf
xchg
add
add
add
add
dec
push
lret
or
and
jg
test
test
rolb
add
test
add
dec
es
dec
rcrb
enter
shlb
scas
cmp
or
push
jge
mov
sbb
std
cmp
pop
das
repz
cli
xchg
or
xchg
popl
add
push
pop
dec
jne
jbe
sldt
add
lds
in
and
icebp
push
add
push
cmp
call
addb
add
pop
call
add
hlt
mov
push
or
add
les
add
jp
mov
decl
test
scas
test
add
add
adc
and
inc
dec
add
add
mov
xor
sub
push
cwtl
sbb
jl
xchg
lret
ljmp
sbb
mov
jbe
mov
sbb
js
fcomp
neg
xor
lcall
lea
outsl
pextrw
cmp
ret
add
add
sbb
xor
test
jp
stos
xor
xlat
lods
sub
xchg
ss
cli
jbe
ficompl
jle
add
loope
mov
jmp
mov
adc
popa
addb
add
add
adc
int3
add
add
aaa
loop
and
inc
rcll
shr
addb
add
bnd
fisttps
add
add
outsb
mov
cld
sti
lahf
pop
cltd
decl
fldt
inc
dec
push
in
mov
add
loop
jno
mov
loope,pt
sbb
inc
xchg
vmread
pushl
gs
cli
sbb
fbstp
movsl
pop
jge
ss
rorl
or
add
jge
fmuls
fistps
and
sahf
pop
mov
popw
add
add
adcl
out
pushf
mov
add
add
add
add
add
add
les
add
hlt
fdivl
decb
cmc
push
decl
in
push
mov
cmp
test
addb
add
add
add
mov
loop
loope
push
test
push
jno,pn
sbb
cmc
sub
mov
sub
push
test
in
sub
cmp
jbe
push
ret
out
adc
xchg
sub
leave
cmp
fists
add
lds
or
adc
mov
cmp
dec
add
add
jp
push
or
add
cltd
and
sub
lock
add
add
jae
pop
cmp
jp
addr16
jle
leave
mov
mov
fsubl
push
pop
sub
mov
js
dec
add
add
rolb
add
mov
mov
pop
shrl
cmp
jmp
rcll
mov
dec
rorb
les
add
jle
adc
in
int
add
add
push
fmull
mov
pop
dec
icebp
cmc
dec
fwait
pusha
addr16
ja
in
popf
insl
out
cs
insl
mov
clc
in
pop
inc
fmul
loopne
add
add
and
sbb
ret
and
mov
cltd
fsubrp
pop
divb
sbb
xchg
lds
jp
add
inc
ja
pop
scas
rolb
add
push
out
mov
add
cmp
jne
insb
mov
lods
inc
sub
popa
ret
mov
repz
fisubrl
add
add
cwtl
inc
nop
mov
add
add
lock
int3
add
add
decl
xor
pop
pop
test
add
mov
sti
popa
sub
jbe
insl
adc
add
add
jle
dec
fldl
or
not
mov
pushf
imul
fcoms
loop
incl
xor
add
add
add
push
divb
dec
fwait
or
add
cmpsl
in
mov
add
inc
add
add
add
inc
sub
and
call
sub
push
xlat
or
add
add
mov
push
fs
add
popf
imul
mov
fwait
pop
mov
add
mov
roll
mov
or
add
cs
add
add
icebp
in
jns
mov
mov
add
add
loopne
cltd
mull
jne
cli
or
and
rolb
add
add
mov
push
test
out
mov
inc
add
add
mov
jmp
add
movsb
inc
int3
add
add
add
add
fcmovnu
mov
rol
add
mov
xchg
mov
sbb
and
rcl
cmp
out
sbb
sub
jle
mov
dec
pop
cmp
loope
addb
add
ja
aam
cltd
push
leave
xchg
mov
push
testl
ficomps
xor
mov
mov
cmp
subl
mov
add
data16
pop
repz
xchg
xor
int3
add
add
out
xchg
pop
insb
lea
mov
inc
gs
sub
fdivrl
aaa
les
add
fnsave
pop
daa
add
add
add
xchg
aaa
mov
add
mov
loope
sub
bound
pop
int
js
inc
dec
out
sbb
or
imulb
sbb
pusha
and
or
add
add
pop
dec
push
sbb
cmp
push
jecxz
sbb
fstpl
sub
pop
mov
scas
sbb
xor
add
sbb
in
mov
enter
mov
les
add
push
xchg
sbb
mov
add
stos
xor
jbe
popl
add
push
pushf
ljmp
lret
mov
add
add
test
add
sbb
das
xor
outsb
sub
dec
dec
adc
sbb
adc
xor
cmpsb
xchg
gs
mov
hlt
aas
in
mov
cmpsl
outsb
pusha
sbb
sub
clc
cltd
scas
cmpsl
loop
mov
add
xchg
sub
jo
jae
inc
sub
add
add
dec
in
idiv
sbb
dec
je
stos
jge
xchg
fcmovnbe
mov
add
add
lea
add
add
xlat
adc
add
pop
bnd
push
mov
fs
fcoms
popf
xchg
sarl
add
add
test
add
rorl
add
sub
mov
clc
ret
aam
jmp
clc
iret
je
sub
pop
jp
lds
push
das
add
rclb
push
sub
scas
in
xor
test
out
sub
add
add
int
add
add
dec
movsb
cmp
mov
call
imul
add
add
mov
jle
lret
ret
or
add
sub
add
outsl
xchg
xchg
jbe
mov
shrd
mov
jmp
push
and
jnp
repz
faddl
aam
dec
add
add
push
mov
jno
inc
repnz
sti
sarl
or
and
cmpl
add
add
add
push
test
add
jne
dec
outsl
pop
insb
test
bound
stc
fmul
lds
je
pop
bound
pop
scas
out
xor
cmp
add
add
mov
lret
js
test
ficoml
adc
in
push
add
add
scas
xchg
mov
sub
add
mov
pop
push
sbb
sub
fdiv
cmpsb
jecxz
cmpsl
cmp
cmp
jne
adc
sub
stc
jb
orl
es
clc
inc
add
add
mov
xor
rclb
push
fnstsw
mov
add
cli
std
es
cmp
daa
adc
loop
xchg
int3
add
add
mov
add
sbb
sbb
rolb
add
je,pt
mov
push
inc
add
add
add
xor
popa
fisubl
shl
cwtl
mov
ret
sub
and
dec
mov
or
cmp
adc
cmpsb
xor
xor
imul
or
cli
mov
mov
xlat
mov
add
adcl
out
bound
mov
jge
call
dec
mov
loope
pop
inc
sbb
dec
adc
sbb
test
add
add
and
sub
add
add
jae
add
add
imul
in
andl
ror
inc
fisttpl
push
bound
ljmp
in
inc
push
addr16
mov
in
mov
xor
loope
nop
jb
mov
add
scas
test
xlat
rol
mov
add
push
xor
add
xchg
xlat
sbb
fimull
xchg
movsl
and
cmovne
add
push
jne
loope
jb
into
jbe
cmp
pop
cmpsb
inc
mov
lret
decl
fwait
cld
imul
inc
mov
add
add
int3
add
add
mov
fistl
mov
add
jmp
outsb
jg
test
add
and
insl
les
add
cmp
mov
add
add
mov
add
xchg
bound
mov
scas
aad
add
add
lds
scas
dec
insb
add
sub
nop
shll
fdivrs
jmp
push
test
lahf
adc
jbe
jg
cmpsl
lcall
test
das
ss
add
add
xchg
das
test
lret
add
adc
mov
repnz
das
mov
ffree
sbb
hlt
mov
add
aas
lds
sbb
mov
inc
add
add
inc
shl
ficompl
add
jno
cmc
dec
add
add
scas
loope
out
dec
cmpsb
sbb
je
insb
dec
mov
and
ficoms
scas
repz
aad
rolb
add
or
add
mov
jae
mov
add
fsubp
add
add
jno
into
insl
xchg
pop
je
mov
add
mov
bound
sahf
or
add
mov
sub
jg
mov
xor
fisubrs
add
add
and
test
push
inc
lret
addb
add
addr16
ljmp
movsb
rolb
add
in
addb
add
loopne
popa
push
xchg
gs
add
add
pop
xor
fdivrs
and
mov
jmp
sbb
push
dec
add
add
inc
add
add
je
ret
or
or
add
cmp
jns
lds
out
xlat
popa
bound
notl
adc
into
out
sti
jmp
add
ret
sbb
jne
lds
outsl
icebp
mov
rolb
add
fwait
push
ja
pop
les
add
mov
les
add
leave
nop
repz
xchg
daa
insb
cmpsl
mov
fnstsw
mov
add
scas
int
push
inc
outsl
lcall
sti
ret
sbb
addr16
cli
xlat
fcomps
cmp
mov
rolb
add
pop
or
jecxz
add
pop
test
add
add
adc
sti
mov
lods
and
pop
enter
lea
mov
stos
stc
in
scas
mov
jmp
add
ss
push
push
mov
xchg
inc
add
dec
xchg
popa
mov
fldenv
jle
insb
movsb
push
cwtl
push
sbb
dec
add
add
or
add
repz
dec
mov
lods
mov
xor
pop
roll
faddl
popf
into
add
add
sti
inc
push
pop
adc
cmp
adc
stos
rcrl
incl
mov
add
or
add
popf
jnp
sbb
push
xchg
sbb
arpl
idiv
ss
lock
test
mov
jae
adc
add
add
add
add
mov
rorl
test
push
cmp
mov
mov
clc
cmp
movsl
add
sub
add
ss
add
xchg
jbe
add
add
int
lds
cwtl
or
mov
and
add
add
add
add
add
shlb
out
cli
ffreep
add
add
pop
jb
cmc
jp
add
add
sub
js
mov
mov
adc
xor
add
inc
inc
jp
sbb
add
add
int
shr
fistpl
xor
dec
add
add
ficomps
mov
add
add
xor
std
std
pushf
dec
inc
add
add
push
ja
mov
xor
int
jl
sbb
add
push
insb
mov
bound
xchg
popf
fnstenv
stos
cltd
gs
sbb
out
pop
pop
shll
pop
test
inc
add
add
stc
sbb
jl
add
add
leave
shlb
pop
mov
add
imulb
mov
mov
add
pop
iret
sti
sbb
push
lcall
jns
sbb
xchg
add
add
mov
std
faddp
add
add
mov
jae
int
test
gs
ret
sbb
inc
loop
dec
imul
es
inc
mov
pusha
push
xchg
sub
push
pop
bound
jle
inc
int3
add
add
cwtl
fsubl
addr16
daa
jns
pop
inc
adc
sub
movsl
pop
int
push
sbb
loope
dec
push
lods
andl
add
add
mov
inc
dec
jns
pop
or
add
push
sbb
sbb
int
mov
dec
add
add
pop
or
xor
dec
add
add
jmpw
std
mov
add
sub
xlat
int
adc
push
je
or
or
inc
add
add
sub
add
add
sbb
and
out
mov
add
add
jae
mov
dec
add
add
arpl
divl
jne
stos
pop
cmpsb
xchg
jmp
jno
add
add
jmp
inc
jmp
dec
add
add
jb
mov
cwtl
in
dec
adc
imul
mov
add
add
lahf
or
jmp
js
repnz
push
xchg
and
jb
je
add
add
addl
jmp
add
add
xchg
xor
sub
adc
add
arpl
mov
popf
ss
mov
fstpt
sahf
and
mov
add
add
add
add
leave
inc
rcrb
mov
ss
add
add
sahf
sbb
adc
adc
xor
push
hlt
adc
addr16
dec
add
add
mov
nop
out
dec
add
add
cmp
xchg
lret
sti
dec
and
fimull
add
les
add
insl
cmpsl
popa
mov
push
cmpl
setns
cmp
pop
lcall
fsts
mov
mov
mov
adc
insb
xor
dec
mov
cmc
mov
loopne
popa
and
out
inc
insb
jmp
add
add
ss
icebp
push
sub
cmpsl
jbe
jno
insb
imul
xchg
or
add
movsl
shrl
aaa
mov
and
mov
add
jg
pop
adc
dec
pop
push
das
adc
mov
outsb
add
or
nop
xchg
mov
push
push
aam
pop
test
out
ficompl
leave
dec
jecxz
sub
add
cmpsb
in
ljmp
pop
loope
jnp
jmp
and
fdiv
in
and
add
add
enter
inc
and
add
outsb
jl
icebp
sbb
int3
add
add
dec
mov
push
sub
sub
and
aas
xlat
hlt
adc
cltd
and
icebp
adc
mov
lahf
ss
lcall
jecxz
inc
xchg
cltd
ja
jecxz
add
add
add
mov
lahf
ret
pop
mov
add
aas
push
jle
or
mov
or
add
xor
dec
add
add
lcall
test
mov
add
add
iret
inc
test
add
and
ds
sarl
cmp
sti
dec
add
add
lods
push
mov
cmp
jo
and
mull
pinsrw
add
push
xor
rolb
add
mov
pop
loop
outsl
aam
in
mov
cmp
pop
fcoml
pop
dec
add
add
lods
aaa
pop
push
lahf
and
pop
dec
dec
les
add
push
cltd
mov
cmpb
pop
call
stc
xorb
xor
lods
adc
cmpsb
les
add
jle
dec
xor
push
dec
nop
sub
shll
or
add
out
pop
mov
add
insb
pop
jl
aad
in
dec
inc
lock
dec
shlb
xchg
stos
push
mov
push
hlt
sbb
sub
add
add
popf
notl
pop
dec
test
add
xor
add
add
imul
fcmovnb
jecxz
nop
jp
test
add
mov
add
or
add
sbb
add
push
test
cmp
mov
mov
repz
add
add
fbstp
aam
and
sub
andb
jno
stos
mov
or
add
pop
sub
push
mov
ds
jne
sahf
cmp
int3
add
add
fldenv
add
add
add
xor
add
add
pop
mov
jbe
test
add
xchg
push
xlat
stos
aam
push
jae
xchg
jmp
outsl
and
sub
out
pop
inc
jno
dec
add
add
and
pop
ret
loopne
dec
add
add
jnp
mov
fwait
pop
mov
jl
push
mov
mov
ljmp
or
add
mov
clc
jg
sub
push
mov
add
out
lds
fcmove
pop
pop
pop
xor
out
xor
jl,pt
xor
out
incl
add
push
cmp
enter
xchg
ljmp
les
add
or
mov
add
add
dec
add
add
in
shlb
cmp
lods
dec
add
add
aad
test
cmp
inc
clc
mov
lods
lds
dec
adc
fdivrl
add
xchg
daa
ljmp
imul
lcall
imul
mov
repz
add
lea
adc
mov
ret
cmp
fildll
pop
aad
xor
dec
stc
iret
sahf
sub
mov
cmp
data16
ljmp
add
jp
aas
xchg
fstl
add
add
adc
cmpsl
sub
jl
in
rorl
add
aad
mov
push
jmp
enter
cmp
add
lods
mov
xchg
test
xor
in
movsb
mov
sbb
jo
lods
adc
movsb
jg
xor
cmp
imul
xchg
mov
add
rolb
add
ljmp
mov
mov
out
rclb
add
mov
and
push
jbe
or
sbb
int3
add
add
mov
leave
sbb
clc
pop
jge
pop
scas
inc
shll
into
xor
adcb
sub
fnstcw
push
fwait
inc
outsb
mov
cli
in
jne
shll
xchg
jns
gs
push
decl
int
adcb
add
cli
push
lock
icebp
int
xor
mov
adc
xor
mov
mov
jge
insl
push
jge
mov
dec
mov
js
mov
dec
add
add
mov
add
add
mov
popf
pop
aad
shrl
cmpsl
ds
adc
xor
mov
push
dec
loop
mov
arpl
pusha
ficoms
sub
add
add
xor
js
lock
adc
in
loop
jno
in
sbb
sbb
add
add
imul
stc
daa
in
or
mov
loop
das
lcall
dec
inc
ss
add
add
lahf
xor
js
add
add
add
add
add
jmp
add
inc
xchg
das
ret
cltd
rolb
add
mov
cmpsl
popa
in
repz
dec
ficomps
test
fwait
loopne
xor
dec
mov
jbe
daa
ficompl
loope
out
scas
sahf
jbe
insb
inc
mov
adc
dec
out
cmp
pop
sbb
mov
add
mov
xchg
in
cmp
fnsave
add
insl
ds
mov
mov
rolb
add
ljmp
add
jp
cs
sbb
cmp
stos
imul
add
xlat
daa
sub
add
and
mov
cmp
adc
push
push
xchg
push
and
mov
push
outsb
push
cltd
xchg
xor
adc
mov
add
add
imul
or
add
add
lea
insb
sahf
outsl
into
test
add
fildll
push
sub
push
sub
add
add
aad
fcoms
xor
add
add
aas
jns
invd
add
add
cld
add
or
add
pushl
xor
insl
ja
inc
add
add
xlat
insl
adc
cld
sub
jecxz
pop
ljmp
adc
xchg
icebp
xor
or
add
imul
daa
dec
stos
sbb
bound
add
jmp
pop
jge
mov
push
aaa
sbb
push
push
cltd
repnz
push
push
jne
add
add
out
xor
in
out
cmp
loope
xlat
sub
repnz
scas
insl
sahf
dec
out
mov
dec
add
add
lret
add
add
divl
mov
xchg
std
xchg
adc
test
insb
push
xor
jns
repnz
aaa
orl
sub
mov
int
xchg
xor
add
push
std
cs
sbb
jg
insb
rclb
cmp
add
add
mov
cmpsb
subl
and
dec
sbb
aad
adc
sbb
rolb
add
xchg
mov
test
add
testb
inc
add
add
pusha
imul
pop
mov
mull
xchg
pop
sub
add
movsb
lcall
sti
je
leave
jae
push
sarb
dec
add
add
pop
cltd
pop
push
mov
jnp
adc
sub
add
notb
xor
add
add
dec
in
shrl
lods
push
outsb
insb
pop
jns
ret
sbb
cld
push
aam
inc
mov
imul
add
add
pop
and
or
icebp
push
es
das
mov
jbe
push
dec
add
add
xlat
gs
test
movsl
in
mov
outsb
pop
xchg
push
jecxz
pop
push
or
add
jmp
mov
jb
xchg
jb
push
xor
add
add
addb
add
xchg
nop
cmp
ss
pop
ret
sbb
cmpsl
push
insl
xlat
js
dec
mov
add
mov
xchg
mov
fdivr
test
add
into
or
mov
add
cmpsb
and
repnz
push
mov
add
add
push
inc
add
add
xor
std
loopne
or
into
repz
loop
out
call
jbe
sub
ret
inc
mov
pop
dec
roll
mov
adc
push
xchg
testb
add
add
testb
dec
add
add
outsl
pop
ret
pop
fcompl
pusha
sahf
sarb
mov
fistpl
inc
iret
mov
notl
ret
pop
dec
or
add
xchg
mov
pop
mov
mov
add
add
fcmovb
push
out
lret
sbb
jp
incb
add
xchg
add
push
xor
lods
mov
add
mov
into
addb
add
cwtl
and
js
add
add
int3
add
add
addb
add
fstpt
push
mov
add
add
orl
add
fistps
pushf
jge
int
in
xor
and
sbb
inc
add
add
sbb
xchg
mov
shr
mov
jle
xor
cwtl
nop
push
mov
dec
add
add
mov
xorl
insl
rorl
pop
mov
add
dec
ds
pop
or
add
add
fs
mov
add
add
pop
pop
leave
out
dec
repnz
pop
pop
push
je
jg
add
add
rcrb
or
add
sub
xchg
cli
push
stos
in
leave
jns
or
sub
sub
jae
clc
out
pop
or
add
jae
adc
loopne
add
add
loopne
mov
add
mov
mov
add
add
sbb
push
int3
add
add
sub
pop
jg
sbb
int3
add
add
xor
add
cs
and
add
add
nop
xor
adc
add
cltd
dec
adc
xchg
push
fisttpll
xchg
divl
fdivr
es
and
test
popa
xchg
les
add
jle
pop
jb
inc
add
add
add
add
imul
in
popa
enter
mov
cmpsb
xchg
xchg
repz
mov
xchg
add
cmp
dec
jne
jne
jg
cmp
les
add
dec
add
add
enter
nopl
cmpsl
xchg
add
sti
rolb
xlat
lea
addr16
mov
add
sub
add
add
testb
adc
loope
push
pop
ficomps
xchg
push
fldt
sbb
insb
add
les
add
push
ficomps
mov
add
add
adc
scas
pop
inc
jb
insl
decl
inc
push
jns
cmpsb
push
mov
xor
scas
add
insb
aas
lock
popf
sbb
add
add
pop
sbb
jg
lods
pusha
and
cmc
adc
xchg
loope
nop
adc
cmp
in
into
dec
jle
fisttps
dec
cmp
lcall
jb
pop
fcmovbe
sbb
lea
dec
pop
xor
test
test
addr16
push
das
sub
push
ret
ds
scas
xchg
mov
jae
add
add
or
inc
lods
add
add
iret
push
cmp
xor
mov
arpl
test
daa
xor
jbe
xchg
mov
adc
fwait
pop
je
js
xor
out
add
add
mov
arpl
in
cmp
mov
pop
cmp
jg
out
mov
mov
call
decl
stos
pop
scas
rolb
add
xchg
call
xlat
cltd
sub
test
jl
in
mov
pushf
sub
loop
dec
jecxz
dec
inc
aaa
jg
jp
add
add
add
add
popf
cli
lea
data16
dec
cmp
add
push
in
loope
mov
jmp
insl
scas
jne
shll
repnz
add
outsl
jle
cmpsb
fcmovnu
insl
test
imul
adc
add
mov
add
into
dec
cmc
imul
push
rolb
stos
jb,pt
arpl
pop
jnp
cmpsb
pop
scas
xor
add
sub
mull
jb
sbb
cmpsb
cwtd
fldenv
lods
jno
scas
repz
in
mov
add
dec
xor
mov
add
scas
sahf
lds
movsb
inc
mov
cmp
cmp
add
push
mov
add
add
int3
add
add
ret
jnp
cmp
in
dec
dec
test
repnz
sub
popa
mov
add
pusha
xchg
mov
mov
enter
call
sti
shrb
add
add
add
loopne
test
add
jnp
mov
add
sub
adc
mov
cli
addb
add
sbb
add
add
and
add
add
add
mov
mov
adc
lds
and
or
decl
fistpl
sbb
pushf
push
cmpsl
mov
cld
xchg
adc
jge
out
rolb
add
add
jno
lahf
push
aas
mov
pop
mov
leave
test
or
add
pop
pop
sub
in
add
popa
adc
add
xchg
jecxz
mov
fwait
cmp
mov
add
add
adc
add
sub
mov
clc
lcall
fsubr
mov
les
add
inc
mov
add
add
jp
gs
sub
addr16
pop
fcompl
jno
mov
adc
pop
mov
gs
imul
imul
add
add
or
add
mov
push
add
add
add
add
dec
dec
adc
shrb
dec
and
xor
mov
sarl
sub
dec
jno
test
stos
or
add
fmull
ret
mov
xor
add
adc
cld
add
push
idivb
ss
sub
sub
mov
add
rcll
repnz
les
add
add
add
jp
jle
pusha
jge
inc
add
add
adc
call
add
adc
xchg
hlt
decl
lret
test
add
dec
js
lods
push
in
jge
jecxz
cmp
jb
cwtl
sub
aad
icebp
les
add
repnz
or
cmpsb
clc
rorl
push
add
add
or
xchg
sub
in
jne
andl
es
xor
dec
cltd
lock
jne
xor
scas
pusha
dec
sub
mov
add
add
test
enter
and
leave
xor
add
mov
inc
je
addb
add
dec
add
add
push
adc
arpl
cmc
cwtl
pop
jecxz
icebp
jmp
add
add
jecxz
nop
lahf
cltd
cld
push
repz
or
cs
jae
in
add
add
sahf
pop
sub
push
mov
pop
xor
repnz
dec
and
sbb
jg
mov
add
xchg
call
add
add
fs
fdivrs
adc
add
dec
add
or
add
add
popf
movsb
hlt
rcrl
add
jl
ljmp
outsl
out
icebp
sub
gs
xor
inc
sbb
shll
xchg
out
jle
pop
jge
cmc
mov
or
add
addb
add
jle
addb
add
add
add
loopne
and
sub
dec
shll
mov
cmp
add
lahf
lret
jmp
cmp
sbb
push
lret
add
add
mov
add
sub
fidivs
sbb
or
movsl
mov
insb
int3
add
add
jnp
push
nop/reserved
mov
cmp
dec
add
add
daa
pusha
test
out
out
mov
sti
out
pop
cld
sbb
or
sahf
push
and
sub
mov
add
add
popf
in
stos
xchg
sbb
outsb
dec
stos
mov
mov
jecxz
outsl
test
adc
sub
add
loope
lcall
out
outsl
cmp
int
in
pusha
scas
pop
rclb
pop
sub
and
sahf
push
adc
add
add
mov
add
add
ret
pop
push
std
mov
add
add
mov
add
pushf
idivl
add
push
or
fcompl
push
mov
jnp
sbb
frstor
cmp
add
lret
jp
mov
int3
add
add
and
xchg
add
js
jno
aas
xchg
add
rorl
ja
pop
test
and
sub
and
sub
jb
sub
dec
test
add
int
pop
cmpsb
movsb
add
jmp
mov
add
adcl
pop
imul
xchg
adc
jmp
pop
jge
adc
lea
repz
daa
push
mov
nop
int
sub
sti
cmp
push
jbe
scas
sbb
ss
push
xchg
cmp
mul
fsts
jnp
xchg
sar
imul
xchg
mov
jb
jge
mov
out
cmp
stos
test
add
fistps
ds
dec
divl
dec
mov
add
mov
fistl
rclb
repz
xor
or
add
pop
add
inc
cmp
xchg
loope
je
hlt
add
add
xchg
repnz
jle
mov
add
add
fsubrs
aaa
adc
push
arpl
aam
push
jbe
or
add
btc
mov
add
add
pusha
pop
shrl
idivl
and
pop
cmp
jecxz
add
add
dec
add
add
cmp
mov
add
mov
sub
imul
rcrb
loopne
insb
bound
add
mov
pop
jl
clc
into
push
add
pop
pop
test
and
mov
and
fldcw
arpl
inc
or
pop
mov
insb
mov
cmp
mov
fwait
jne
int3
add
add
cld
cmp
add
sbb
fs
sub
jge
fbld
inc
nop
cmp
fisubs
and
mov
pop
xchg
les
add
inc
add
add
xchg
jmp
fdivl
icebp
jae
data16
into
inc
add
add
push
inc
add
add
cmp
outsb
sbb
pop
jmp
push
and
pop
fiadds
loopne
sbb
xor
push
pop
pop
adc
loope
arpl
mov
lcall
pop
hlt
mov
add
or
add
mov
fxch
jle
mov
xor
mov
call
addr16
push
ret
xlat
cmpsb
cmp
mov
out
pop
daa
cmp
in
outsl
mov
loopne
sbb
test
pop
xchg
xchg
fsubs
loopne
pop
jl
cwtl
lea
xchg
pop
xor
pop
pop
loopne
fs
add
cmp
add
add
stos
xor
inc
cwtl
or
jno
cmpsb
js
add
add
test
add
insl
iret
add
lea
cmp
pop
in
test
movsl
hlt
adc
sub
sub
add
add
js
xchg
push
sbb
ret
jl
jge
rolb
add
mov
rclb
xchg
scas
inc
add
add
les
add
cli
insb
inc
mov
xchg
ss
rolb
add
cli
test
add
arpl
add
add
in
xor
sub
icebp
add
mov
add
cmpsl
nop
outsb
xchg
lock
cmp
add
sbb
adc
mov
sbb
or
jo
ja
cmc
xchg
mov
add
add
add
add
cld
fdivs
inc
add
add
shl
pop
inc
test
push
mov
push
sti
jne
jmp
mov
sub
push
out
or
jmp
xlat
fcomp
hlt
pop
xor
add
add
lret
adc
js
xchg
loopne
repnz
add
in
movsb
aaa
lea
shrl
fbstp
add
push
or
and
pmaxsw
cmp
lret
mov
stc
cmp
inc
add
add
flds
std
int3
add
add
add
dec
add
add
add
ja
and
xchg
fldt
pop
fs
dec
push
movsl
ss
dec
xchg
add
add
push
inc
aaa
lods
mov
icebp
stos
sbb
add
add
push
push
adc
inc
add
add
fisubrs
and
push
push
fisubrs
stos
popa
scas
xchg
mov
add
mov
xchg
sarl
scas
mov
adc
push
mov
hlt
outsl
idivl
add
or
add
and
adc
or
add
imul
psadbw
shll
jge
movbe
cmp
aam
add
add
xor
aad
xor
sub
cmpl
mov
invd
add
add
or
enter
cld
shlb
out
mov
loop
and
push
outsb
fldt
add
add
sti
xchg
dec
in
jp
pusha
sub
scas
jno
mov
popf
fildl
pop
push
lret
stos
add
pop
outsb
or
add
add
add
rorb
add
sub
xlat
or
add
inc
xor
out
push
pop
dec
pop
fs
push
repz
sub
pop
dec
add
add
xchg
lret
sbb
add
ljmp
in
mov
add
fcomi
lahf
mov
icebp
lahf
mov
add
sub
es
add
add
dec
add
add
add
add
add
add
sbb
adc
add
add
add
pop
loope
jp
scas
sbb
mov
cmp
cmc
and
insb
movsl
lea
mov
pusha
push
rolb
add
data16
mov
add
test
add
add
lods
mov
out
or
xorl
mov
sub
and
and
fstl
dec
mov
jo
arpl
add
je
push
call
xlat
mov
add
jge
add
add
daa
mov
jge
gs
pop
lock
loope
pop
push
imul
testl
sbb
xor
xlat
pushl
inc
mov
add
add
push
sti
sti
je
add
add
or
add
addb
add
sub
add
lret
icebp
mov
mov
and
mov
fcoml
pushf
pop
cltd
push
loop
adc
add
aam
jb
add
add
sahf
mov
repz
in
mov
sub
in
loopne
pop
pop
inc
pop
ret
add
add
mov
mov
jecxz
je
lock
popa
sub
int
mulb
push
sbb
add
add
add
mov
fnstcw
mov
clc
or
add
add
fsubrl
add
inc
loop
fildl
and
jmp
sti
sahf
pop
outsl
shlb
int
out
mov
xchg
aas
adc
add
add
xor
or
add
cmp
addb
add
push
rcl
pushf
fisttpll
mov
jno
cmpsl
mov
xchg
push
les
add
and
js
filds
sbbl
into
mov
popa
or
add
in
out
dec
test
push
arpl
pop
mov
adc
sti
xor
inc
pop
xchg
loope
into
fwait
repz
add
add
mov
pop
cmpsl
ss
add
add
lods
jnp
sbb
add
imul
daa
addb
add
add
pop
add
stc
jl
fldl
add
sbb
js
repnz
mov
loop
aad
dec
ss
scas
fstl
fmuls
stc
icebp
jmp
push
push
cmpsl
fisubs
fwait
mov
in
xor
nop
clc
inc
add
add
clc
mov
xchg
or
sbb
add
add
and
inc
add
add
loope
dec
add
add
popa
pop
ja
bound
call
cmp
mov
add
jae
dec
add
add
push
bound
push
lods
adc
xor
or
add
ljmp
pushf
lcall
les
add
sbb
int3
add
add
add
add
inc
add
add
loopne
incb
outsb
bound
cmp
add
add
push
es
and
adc
inc
add
add
xchg
pop
iret
dec
or
add
or
or
add
sbb
jp
das
sub
add
mov
fwait
jo
pop
popf
mov
and
add
add
sub
nop
loope
cmpsl
mov
ficomps
shll
push
push
scas
out
sub
add
add
cwtl
movsl
test
je
inc
das
lahf
es
add
out
and
leave
rolb
add
add
jge
push
pop
add
add
jb
push
cld
test
aad
pusha
mov
es
out
pop
jo
mov
xchg
and
sub
or
push
mov
adc
push
or
add
aam
xor
pop
shr
adc
sub
adc
add
add
mov
add
and
jae
adc
sub
adc
iret
push
fcom
les
add
xchg
pop
jmp
lret
les
add
pop
inc
and
and
gs
mov
nop
out
mov
add
sub
out
cmp
dec
push
dec
sub
int3
add
add
add
lock
cmp
popf
dec
add
add
add
dec
sahf
adc
adc
iret
or
stos
add
stos
aad
aam
jp
loopne
xor
or
dec
cmp
and
in
sbb
hlt
pop
inc
add
add
xchg
cmp
pslld
rorl
xchg
mov
insl
mov
lret
add
mov
aas
fcmovnbe
and
frstpm(287
mov
das
inc
add
add
je
jp
xor
mov
lds
push
stc
lock
dec
mov
in
add
add
inc
nop
dec
fsubl
adcl
mov
repnz
cmp
scas
jbe
adc
pop
pop
mov
dec
add
add
inc
inc
add
add
insl
add
add
xchg
addr16
jae
cmpsl
cmc
mov
add
cwtl
inc
xchg
dec
adc
fimull
dec
add
add
out
sub
iret
fsubrp
aaa
jg
xchg
and
push
or
add
mov
data16
xchg
jge
inc
hlt
ja
dec
add
add
outsb
push
mov
add
add
add
cltd
sub
dec
add
add
mov
add
loope
add
add
sub
sarb
mov
les
add
jo
shl
idivb
jg
or
add
add
add
fwait
cld
inc
add
add
cmp
pop
data16
mov
cmp
fldt
call
dec
add
add
xchg
bound
and
in
inc
push
out
fsub
pop
addb
add
add
popf
lock
cmc
data16
xchg
cmp
push
std
pop
xor
in
pop
fstpt
popf
dec
push
or
inc
or
lcall
push
out
push
xchg
in
jecxz
stos
int
xor
mov
lock
das
jge
cmp
pop
push
insb
iret
mov
push
adc
into
adc
push
add
aaa
lahf
bound
xchg
leave
jle
add
add
lret
add
add
cmp
gs
push
daa
scas
int
cmpsl
in
icebp
std
je
outsb
out
outsl
mov
cmp
add
lret
call
push
es
ds
iret
mov
ret
jbe
cmpsb
cwtl
push
push
fnstsw
lret
mov
shrb
fucomi
out
or
xor
sub
imul
add
add
std
mov
les
add
jg
inc
cmp
jns
hlt
add
std
neg
cli
bound
pushf
cld
out
fs
pop
sub
imul
add
xor
add
add
xor
es
repz
fildl
add
xchg
xor
test
add
dec
test
lcall
sbb
add
add
jle
mov
ljmp
insb
jns
pop
pop
jmp
hlt
nop
call
xor
fnstcw
add
xchg
mov
ret
xchg
fcompl
adc
xchg
in
loopne
into
jmp
pop
jl
cmpl
mov
add
pop
sbb
in
xchg
test
pop
lahf
out
aaa
bnd
call
add
add
in
and
jmp
and
jp
jae
add
adc
xor
sub
pushf
cmpsl
jecxz
xor
xchg
sub
push
xchg
movsl
out
leave
stos
push
mov
add
and
addb
add
push
push
add
lret
pop
inc
jg
or
add
xchg
sbb
ja
sbb
mov
fwait
jno
cmp
or
push
mov
and
mov
push
ljmp
add
nop
icebp
push
inc
ja
loop
xchg
add
clc
cmp
aas
add
add
lret
out
push
xor
add
sub
mov
xchg
daa
fnstcw
sbb
jnp
mov
mov
dec
insb
out
adc
add
add
in
mov
and
and
sti
mov
push
ret
xor
mov
je
cmp
scas
push
test
int3
add
add
loop
xor
jnp
or
add
lcall
add
hlt
enter
cmp
add
imull
les
add
ret
mov
add
repz
jnp
sbb
ljmp
add
ds
daa
cli
fisubrs
clc
add
cmc
ret
or
add
flds
fcomps
lds
xchg
outsl
mov
cmp
add
add
lahf
ja
les
add
xchg
lcall
pusha
jp
arpl
push
xlat
movsl
mov
les
add
lcall
sbb
clc
fimull
add
add
jbe
add
add
das
fmul
icebp
fstps
add
ret
xchg
push
sbb
out
jp
push
pop
out
or
add
out
push
jb
lret
sarl
cmpsb
sub
test
pushf
or
jmp
bound
xchg
xchg
sarl
jecxz
pop
scas
fcoml
loop
dec
ret
insb
push
sub
sub
divl
inc
xchg
movsl
or
add
filds
add
jae
mov
pop
cmp
pop
les
add
ss
and
mul
andl
xchg
ret
dec
les
add
loop
mov
ja
inc
ss
dec
inc
cltd
mov
add
push
rcrb
and
mov
shll
imul
add
add
dec
stos
sbb
mov
and
add
ds
insb
mov
and
movsl
jae
add
fstps
push
or
push
addb
add
push
jl
in
sbb
fwait
mov
add
sub
jecxz
loopne
add
and
jp
xchg
and
add
add
dec
flds
dec
add
add
add
add
xchg
aad
mov
add
add
cmp
add
xor
jb
mov
pop
pop
cmp
add
xchg
sub
sbb
pop
cwtl
ljmp
rolb
add
mov
cmpsl
syscall
sbb
add
adc
ja
jno
or
add
rcl
add
add
sbb
cli
pop
mov
ss
lods
mov
out
pop
loop
mov
inc
outsl
mov
ret
pop
xor
lea
enter
xor
jmp
iret
gs
cli
push
add
add
pushl
pop
jbe
inc
jne
test
adc
insb
adc
popf
inc
cmp
mov
add
add
adc
in
aaa
mov
clc
roll
and
mov
insb
lret
repz
leave
jns
adc
push
push
lret
lcall
pop
inc
push
outsb
lods
stos
scas
enter
add
shrb
insb
push
jbe
jb
mov
out
popf
in
or
les
add
cmp
jnp
mov
dec
pop
in
arpl
stos
lods
pop
sbb
jo
mov
push
jnp
ret
jo
cld
pop
movsl
ljmp
addb
add
ljmp
into
ljmp
mov
add
mov
pop
cmp
inc
and
dec
dec
dec
push
inc
mov
test
cmc
leave
push
xor
add
add
sbb
pop
test
add
pop
add
cmpsb
ficoms
pop
shrb
dec
add
add
loopne
faddl
rcll
or
gs
add
leave
lock
xorb
xor
divb
dec
data16
xchg
movsb
pop
sbb
test
add
jge
xchg
adc
outsl
and
jne
in
and
arpl
mov
and
push
lods
cmc
xor
or
scas
popa
scas
lds
adc
iret
sbb
outsb
mov
lods
push
mov
in
or
add
sbb
xchg
xlat
sahf
insl
jns
cltd
pop
repz
addb
add
add
mov
adc
add
add
xchg
pop
nop
add
ja
pop
sub
push
sub
roll
mov
les
add
lcall
dec
loopne
fistpll
testb
dec
sbb
xchg
and
fldl
xor
sbb
scas
aas
fnsave
mov
adc
xchg
mov
mov
add
pop
repz
push
rol
outsb
test
add
sbb
dec
add
add
lods
xchg
stos
inc
imul
loop
and
out
mov
aam
mov
rolb
add
daa
movsl
sub
insb
xchg
imulb
push
ljmp
dec
ds
add
add
daa
push
or
add
add
aas
mov
mov
add
add
xor
out
ret
lock
ret
gs
and
xchg
aas
fcoms
mov
jle
popl
