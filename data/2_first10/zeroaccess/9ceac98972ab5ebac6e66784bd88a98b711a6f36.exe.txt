push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
aaa
add
ds
or
sub
sub
and
sub
mov
mov
das
inc
movsl
cmpb
mov
cmp
jno
xor
mov
js
pop
add
das
ficoml
or
mov
cmpsb
dec
mov
inc
clc
and
insl
insl
inc
stos
nop
int3
push
mov
jg
jae
pop
shll
dec
push
call
in
dec
gs
xchg
pop
repz
sub
addr16
dec
jg
push
mov
pushl
push
or
xchg
sbb
or
rolb
insb
shr
movsl
jns
pop
sahf
jmp
mov
push
shrl
dec
enter
lcall
sub
mov
mov
dec
or
sbb
dec
arpl
sbb
mov
sbb
push
in
addr16
sbb
das
in
mov
xor
jns
push
sbb
sub
jmp
repz
xchg
adc
lahf
cmp
cmc
mov
add
or
shll
push
mov
roll
xor
dec
imul
cmp
in
or
cmc
and
cmp
fnstsw
mov
or
in
add
ror
sub
in
push
push
mov
loop
lcall
sti
xchg
xor
push
sub
push
fadds
inc
sub
fwait
jl
pusha
rorl
lock
mov
stos
cmc
fdivr
pop
mov
cmp
rorb
xor
aam
push
outsb
mov
mov
sbb
adc
out
ret
or
push
repz
mov
push
iret
jb
call
lret
inc
mov
mov
inc
popw
js
jbe
inc
lahf
stos
arpl
das
outsl
insl
xor
lods
cmpsb
daa
bnd
clc
out
lret
out
shrb
fistps
sub
and
arpl
jb
mov
movsb
adcb
push
shlb
sub
loope
mov
add
sub
repnz
stos
sbb
add
insb
out
addr16
cmp
push
movsl
dec
sbb
push
sub
add
nop
jno
shlb
mov
jg
in
repnz
mov
sarb
fsubl
loope
rol
push
clc
inc
int
in
jno
loope
fdivrl
push
mov
adc
pop
ret
ljmp
out
shrb
mov
pusha
ja
clc
mov
jecxz
idivb
sti
cwtl
mov
in
rolb
test
mov
pushf
repnz
rcrb
ficomps
sti
mov
es
xlat
pop
inc
xchg
push
jg
or
push
cmc
or
mov
cmpsb
inc
sbb
sub
cmp
or
pop
inc
cmp
adc
fs
sub
mov
adc
lea
jnp
ss
clc
fdecstp
inc
in
lea
xor
clc
iret
leave
inc
lds
push
js
sbb
fnstsw
xorb
inc
test
or
movsl
imul
cwtl
scas
xchg
mov
mov
mov
sub
dec
scas
rolb
lock
mov
dec
push
xor
dec
cli
inc
lea
cmp
inc
mov
fwait
mov
mov
mov
jbe
mov
loop
xchg
sub
in
push
xor
out
pushf
and
in
movsb
inc
and
insb
loopne
imul
pop
push
out
scas
jp
or
dec
fbld
subl
in
push
out
in
cmp
sbb
pop
cmp
push
jbe
sti
mov
iret
andb
xchg
ret
imul
jb
jno
inc
inc
inc
std
xchg
loopne
jge
xlat
pop
or
stos
or
je
xchg
ss
outsb
inc
das
jl
fisubrs
mov
cs
push
je
lea
popa
in
cmpsb
test
xor
lret
jp
pop
scas
cli
jnp
out
pop
in
lret
inc
out
inc
sbb
pop
pop
cmc
inc
mov
xor
mov
mov
sbb
mov
add
sub
pop
addr16
xchg
push
fadd
cmp
jecxz
pop
daa
loop
cmp
ret
aaa
inc
mov
cmp
lds
aad
popf
xlat
repnz
mov
cld
cmpsb
mov
inc
int3
mov
ss
aam
add
push
add
xorl
mov
xlat
and
adc
mov
sbb
push
fldt
incw
mov
js
js
mov
out
and
sub
and
pusha
cmp
xchg
adc
into
movsl
fwait
push
push
jecxz
sub
jmp
add
fiadds
lods
and
stc
andl
into
and
and
and
inc
stos
fldt
das
push
mov
out
rol
cmp
pminsw
mov
cmp
aad
mov
insl
jle
push
or
and
ja
movsl
push
mov
jno
mov
jno
jns
es
adc
jp
outsb
sbb
xchg
or
pop
mov
pop
dec
lret
lret
je
mov
fsubs
cmp
pop
pop
imul
lea
ret
jne
insl
jne
test
data16
xchg
call
lock
and
xor
icebp
and
and
ror
pop
pop
add
dec
lock
cld
jbe
mov
lcall
ljmp
out
mov
pop
lea
pushf
cmp
and
add
jbe
int3
fisttpl
mov
or
lea
ja,pn
sti
or
push
out
test
nop
inc
into
pop
test
adc
stos
iret
in
push
adc
dec
adc
sbb
aas
rorl
adc
push
sub
vfrczss
repnz
ds
mov
pop
and
mov
mov
or
inc
test
imul
xor
clc
jmp
add
pop
push
rcr
lds
call
pusha
test
sub
mov
push
xchg
mov
pushf
dec
mov
fistpl
xor
gs
sub
push
leave
out
sbb
push
js
fsubr
jbe
mov
pop
outsl
mov
sbb
inc
sub
lahf
in
pop
push
sbb
jb
stc
add
push
js
loope
rorl
bound
push
scas
inc
mov
shrl
or
inc
pop
pop
fildll
xor
and
loopne
fs
cmp
outsl
insb
daa
dec
adc
mov
mov
loopne
notl
mov
xchg
nop
push
xlat
adc
loop
sbb
cld
mov
aaa
pusha
loop
mov
cmp
hlt
jns
cmp
pop
es
fldl
push
or
gs
pop
clc
mov
cwtl
fcoms
adc
xchg
fimuls
and
inc
repz
mov
inc
push
pusha
cmp
filds
arpl
pop
push
cltd
fcoml
xchg
scas
in
pop
mov
push
jg
dec
enter
adc
mov
and
push
sbb
test
push
in
pusha
mov
pop
bound
fcoml
pop
call
or
imul
cmp
sbbb
add
pop
and
repnz
movsb
adc
in
int3
jnp
jbe
add
das
les
cmp
imul
pop
aad
lods
jle
loop
jecxz
mov
test
in
cli
insb
jne
mov
nop
sub
inc
cmpsl
sub
dec
cmp
cmp
loop
mov
pushf
add
or
jnp
and
jp
and
ficomps
enter
add
lcall
dec
mov
iret
push
and
mov
mov
adc
dec
scas
unpcklps
in
xor
std
jbe
fildl
add
scas
mov
je
and
cwtl
dec
xor
mov
cmova
push
movsl
cmp
addr16
mov
movsb
push
jle
push
mov
scas
sti
out
out
or
jp
dec
xor
ljmp
jle
xchg
cmp
mov
sbb
outsb
outsb
stos
lahf
das
clc
inc
stc
cmp
icebp
and
lahf
pop
mov
in
sub
cmp
fistpl
addb
pop
dec
sahf
sub
insl
clc
sub
jg
in
jae
insl
push
mov
dec
aam
push
push
scas
inc
lods
cmp
xlat
scas
mov
leave
dec
lods
xchg
or
mov
subl
cltd
sti
xchg
cmp
mov
loope
scas
out
movsb
dec
adc
mov
dec
testb
dec
push
add
cmp
cmp
cmp
std
add
test
test
sahf
pusha
dec
xchg
std
cmp
movsb
shll
daa
lret
icebp
mov
mov
fnstsw
in
sbbl
cli
fidivrl
sti
sub
rorb
lods
pop
push
mov
shll
xchg
aaa
dec
daa
test
cli
lods
pop
adc
in
aaa
xor
fsubrs
mov
lods
dec
orl
adc
xchg
add
jmp
notb
pop
sahf
sarl
mov
imul
scas
jb
adc
lret
xorb
and
or
insl
fs
leave
addr16
add
shlb
inc
aad
out
repnz
in
jae
addr16
inc
mov
pusha
pop
jae
xor
call
mov
into
jns
sbb
push
subl
cmp
lods
push
inc
or
aad
sub
cmpsl
add
cmp
and
lret
lods
mov
or
xchg
pop
xchg
stos
fdivp
mov
sub
xor
sbb
into
mov
jecxz
fcoms
mov
mov
aam
daa
jmp
dec
clc
jge
rcll
sub
repnz
arpl
inc
sahf
in
pop
cmpsl
fbstp
cmp
sti
sti
movsb
lock
cmp
outsl
popl
iret
sbb
mov
lahf
gs
add
push
push
xor
cmpsl
pop
cmc
imul
cmp
inc
movsb
pop
iret
mov
test
add
fldl
in
mov
dec
pop
insb
std
push
fwait
and
daa
or
lods
mov
xor
clc
orb
xchg
and
and
enter
hlt
mov
cmpsl
mov
sbb
call
rolb
iret
es
jl
add
int
test
sub
dec
mov
repnz
outsb
fistl
dec
mov
sbb
push
inc
xor
or
xchg
arpl
or
enter
rclb
push
stos
out
push
ret
sbb
aad
pop
pop
fsubp
pushf
add
shlb
mov
pop
pop
push
inc
cmp
shrl
leave
pop
lods
cmp
jne
stc
das
out
fs
push
outsb
movsl
mov
cmc
dec
mov
js
push
lret
inc
pop
rclb
andl
push
xchg
push
mov
mov
out
pop
mov
jg
cwtl
cmp
adc
rcll
or
in
sahf
shl
cld
ud0
mov
cmp
jo
or
push
ret
push
in
mov
mov
int3
and
cmc
leave
add
out
jne
sbb
rorl
fwait
mov
mov
popa
das
es
add
cmpsl
jmp
cmpsb
sahf
pop
in
addl
andb
sub
cmp
andb
cmp
cmp
pop
stos
mov
jae
test
fs
jbe
int
pop
xchg
jle
cltd
imul
add
imul
lods
into
jo
cmpsl
insl
loopne
adc
jmp
jae
and
imul
and
divl
jbe
into
push
xchg
mov
dec
xchg
fadd
xchg
jg
push
shrb
aam
sbbl
pusha
cmp
clc
jge
fwait
mov
mov
notl
xchg
mov
test
cmp
and
or
call
dec
cmpsl
xchg
and
or
fidivrs
jg
dec
mov
and
cmpsb
pushf
leave
fisttps
adc
lds
xchg
ret
cs
dec
xor
dec
push
cs
adc
ljmp
repnz
stos
xor
pop
mov
int
jae
lods
sub
sarb
jb
test
mov
pop
xchg
int
sbb
enter
icebp
mov
mov
outsb
pop
xchg
loopne
ds
adc
xor
sub
shlb
in
mov
ja
mov
in
cs
cmc
adc
in
inc
or
testb
cmc
pop
gs
push
cmp
addl
mov
test
cmp
jb
and
jle
scas
mov
inc
lahf
mov
shll
jge
pushf
iret
fistpl
jge
mov
add
adc
xchg
mov
enter
gs
xchg
add
push
cmp
arpl
pop
inc
dec
mov
mov
jmp
mov
jmp
inc
sbb
bound
mov
jns
or
add
dec
or
push
add
dec
mov
ret
xor
loop
in
push
in
xchg
sub
xor
pop
out
adcl
push
dec
inc
mov
lock
push
and
sub
mov
filds
sbb
dec
jl
and
add
and
push
pop
cmpsl
cmpsb
bound
jno
pop
jmp
lds
movsb
xchg
mov
movsb
into
mov
nop
std
jp
sub
or
xor
jecxz
pop
sub
cmp
adc
xchg
sub
or
ret
gs
dec
popa
pop
sbb
lret
pop
or
add
sub
lods
pop
sbb
and
xchg
fwait
jmp
mov
into
mov
icebp
int
mov
lods
xchg
loop
out
and
fwait
movsl
mov
add
fs
dec
lods
jae
scas
mov
movsl
cmp
jae
stos
iret
xchg
sahf
push
popl
adc
les
popf
bound
pop
xlat
pushf
push
rcrl
jb
sub
clc
inc
lods
sub
xlat
and
movsl
xor
mov
in
daa
and
inc
xor
add
sbb
sbb
push
loop
imul
jg
retw
cltd
insl
outsb
icebp
pop
cmp
popf
cli
or
xor
orps
jge
cmp
cmp
lock
dec
mov
dec
lods
and
mov
cmp
jg
sbb
xchg
sbbb
lock
jns
in
mov
icebp
imul
leave
xchg
adcb
notl
cld
dec
repnz
inc
fdivr
push
int
jno
test
mov
dec
or
pop
sub
xlat
adc
dec
sub
imul
push
add
mov
dec
loop
and
xchg
loopw
mov
cmp
outsl
fildll
xor
lods
bnd
jg
push
jge
jb
mov
call
mov
arpl
or
inc
popf
mov
das
icebp
pop
cmp
pusha
jbe
xchg
mov
pop
jge
movsb
mov
fcoml
mov
and
sbb
mov
lods
movsb
xor
imul
int
mov
gs
inc
popa
cltd
test
lock
stos
xor
jne
jmp
push
or
aad
repz
sub
mov
push
dec
adc
flds
push
cmp
arpl
rclb
loopne
add
xchg
cli
cli
sbb
or
add
test
xor
pop
loop
out
xchg
add
pop
or
jbe
and
daa
scas
call
add
into
push
push
daa
jg
push
leave
inc
and
aam
dec
adc
jle
popf
shrb
jo
sub
add
inc
sbb
sub
loope
and
test
xor
loope
mov
or
rcrl
popl
aad
push
loopne
or
orb
imul
enter
aam
lahf
lea
repz
push
mov
xchg
mov
inc
ret
pop
jno
fwait
adc
sbb
push
call
mov
cmp
sub
push
add
sub
mov
aad
movsb
aam
cmp
jmp
and
add
xchg
dec
out
xchg
adc
inc
jp
enter
pop
decb
movsl
cmp
xchg
cmpsb
and
and
out
stos
repnz
xchg
and
sbb
cs
in
mov
test
xchg
mov
inc
in
jmp
or
jp
pop
nop
iret
xor
arpl
mov
sub
xchg
loopne
call
ret
cmp
mov
cmp
pop
mov
xchg
bound
or
xor
xchg
aad
mov
adc
enter
cmp
scas
inc
xor
sub
xacquire
sbb
aaa
test
inc
outsl
or
push
xchg
xchg
rcll
xor
orb
pop
call
sbb
cld
stos
rcl
or
sub
mov
jge
int
or
adc
mulb
mov
lcall
or
sub
mov
leave
aaa
repz
leave
movsl
cmpsl
xchg
adc
fs
mov
push
and
xchg
cmp
shrl
push
push
mov
jmp
scas
inc
cli
and
mov
pusha
cmp
imul
mov
push
addr16
mov
aad
stc
sarb
leave
dec
jno
fwait
jns
popf
loop
mov
add
ss
sub
sbb
out
xchg
imulb
test
add
sub
cmp
idivl
cs
cmpsb
and
cmp
fwait
in
push
xchg
loope
mov
mov
mov
mov
fldcw
xchg
test
mov
test
outsb
cmp
and
lods
jmp
xchg
int3
in
adc
in
mov
imul
ficompl
or
sbb
xchg
add
mov
js
movsb
or
ja
push
xlat
adc
xor
and
cmp
adc
inc
xchg
xchg
in
pop
push
addr16
mov
and
imul
cli
aas
push
mov
bound
dec
sub
fmuls
jno
xchg
xchg
aam
jecxz
ljmp
adc
stos
insb
fnstcw
sahf
inc
mov
xlat
lcall
dec
pop
xchg
xchg
pop
add
mov
daa
mov
sub
or
push
or
mov
popf
enter
xlat
or
mov
int
push
xlat
mov
xor
xor
in
cltd
test
cmp
cmp
enter
out
sahf
ret
dec
push
call
push
lods
scas
les
push
subl
in
jmp
cli
cmp
push
jb
fnstenv
and
jnp
sbb
or
andl
sbb
ficoml
push
or
push
jo
cmp
cs
and
mov
sub
outsb
jbe
jecxz
inc
test
or
lods
outsl
aad
cmc
cld
pop
arpl
pop
and
cmp
or
dec
push
adc
jo
push
cmc
mov
cmp
orb
aad
lock
bound
sub
xchg
dec
cmp
test
xor
mov
cli
daa
ja
mov
les
lret
jge
js
xor
xor
or
sbb
pusha
fisubl
pushf
cmc
stc
ljmp
push
push
popf
add
fildll
sub
adc
or
arpl
out
das
fbld
cmc
das
xchg
push
addr16
xorl
sub
mov
pop
push
outsb
jecxz
jno
dec
push
pop
adc
pushf
sbb
push
pop
push
lea
mov
les
jnp
and
inc
jge
dec
mov
or
pop
mov
fisttpll
lds
je
add
cmpsl
xchg
inc
mov
into
adc
scas
xor
cmpsl
or
rorl
mov
mov
aas
pusha
scas
cmp
stos
xorb
pop
pop
mov
ljmp
add
xchg
imul
addl
je
xchg
cmp
jle
test
daa
jp
in
lahf
push
cld
xchg
sub
in
fucom
cmpxchg
scas
xor
subps
jno
dec
test
ret
pop
cmp
add
push
sub
sbb
push
cs
push
je
mov
out
xchg
or
add
mov
out
mov
push
and
xchg
mov
loope
cli
outsb
push
scas
stos
mov
imul
loope
mov
sub
add
jl
fcmovne
loopne
mov
dec
mov
sbb
xor
sub
les
cmp
mov
lahf
cltd
add
or
adc
std
imull
dec
cmp
sbb
dec
mov
fwait
sbb
pop
outsb
jp
and
roll
dec
fsubl
push
loop
test
or
push
cli
pop
adcl
ss
and
or
fcom
push
stos
sbb
sub
jbe
xchg
repnz
fwait
leave
aas
push
aaa
arpl
or
cmp
dec
inc
pop
movaps
jbe
sahf
push
and
je
enter
in
inc
std
push
sti
add
pop
inc
lods
cmp
mov
mov
sbb
lock
pop
sub
sbb
sahf
popa
mulb
or
inc
xor
cwtl
cld
inc
gs
adc
lret
inc
loop
fcomp
sqrtps
add
push
sbb
mov
mov
add
inc
rcrb
mov
add
js
cmp
dec
jecxz
addr16
das
ja
nop
nop
loop
adc
gs
or
test
cmp
and
addr16
cld
enter
pop
repz
call
call
test
imul
mov
pusha
scas
cmp
cmp
iret
and
or
xor
cmp
push
pop
mov
jae
in
add
xor
jb
fs
push
xchg
xchg
cmp
jg
push
stc
lcall
cmovbe
pop
jne
mov
sbb
and
aaa
sbb
pop
mov
mov
addr16
mov
xchg
emms
loopne
sub
jns
jo
mov
xor
pushf
add
xchg
sub
lcall
and
push
ljmp
jmp
or
dec
pushf
sub
mulb
into
xchg
enter
dec
dec
and
lock
push
pop
arpl
aas
sbb
sub
cltd
mov
xor
sub
adc
fidivrs
movsb
xchg
sbb
mov
subb
mov
cltd
rorb
ljmp
js
jne
mov
lds
addr16
into
dec
pop
mov
sbb
aad
and
xchg
xchg
inc
loop
add
xor
loopne
cmp
imul
ss
and
push
sbb
fsts
sbbb
adc
in
push
nop
xor
ljmp
shlb
cmc
xor
sti
fcmovnu
jb
sub
aad
rorl
aaa
cmp
jp
cmp
pop
outsb
push
or
add
push
push
push
inc
mov
notl
mov
insl
adc
mov
jmp
cmp
mov
ja
out
in
and
jb
push
push
push
pop
mov
inc
jb
cli
mov
push
pop
jo
out
pop
aam
jle
daa
andb
popa
lock
push
int
cmp
clc
inc
pop
mov
cmp
rcl
insb
xchg
dec
cmp
loope
lds
arpl
xlat
ss
outsb
andl
lods
push
fwait
sub
xchg
push
pop
int3
inc
fs
dec
pop
ja
and
add
mov
leave
pop
pop
mov
fld
adc
movsb
dec
adc
mov
aas
rorl
subb
movsl
dec
test
and
out
in
jg
or
mov
inc
push
cmp
fwait
pop
lds
mov
jno
clc
pushf
xor
xor
sub
out
fs
sbb
inc
mov
loope
cmp
ds
sarl
xchg
je
repnz
je
push
add
jae
xor
sbb
mov
jbe
xchg
addr16
std
jg
cmpsl
psrld
loopne
inc
pop
movsl
dec
bound
xchg
std
pusha
out
cmpb
xlat
pop
orl
andl
orl
jnp
mov
jns
insl
cmc
xlat
inc
shr
push
inc
push
popf
mov
bnd
je
sbb
pop
sub
lahf
and
push
nop
mov
xchg
mov
mov
leave
das
repnz
fwait
fwait
imul
outsl
jge
cmp
loope
pop
ret
jno
ljmp
push
movsb
test
nop
cld
xor
push
pusha
test
frstor
aam
enter
jbe
pop
add
dec
adc
pop
scas
cltd
xchg
outsb
lahf
sarl
outsl
fucomip
and
add
push
adc
xchg
pop
mov
shll
test
pop
pop
pop
out
sbb
mov
pop
movsb
orb
lret
inc
data16
dec
popa
mov
enter
xor
adc
inc
add
jle
lds
scas
hlt
mov
and
ja
xchg
dec
mov
add
jle
and
xchg
xchg
sub
sbb
or
lcall
adc
jle
cmp
add
mov
mov
jg
mov
push
pushl
xchg
xchg
sbb
cmp
inc
cmp
mov
aad
pusha
jle
pop
scas
cmpsl
pop
add
stc
les
mov
movsl
inc
push
xor
cld
jecxz
lret
test
arpl
aaa
fdivp
cmp
mov
pushf
sbb
call
mov
cmpsl
notl
mov
std
sub
xorb
cmp
je
push
ret
out
lds
xor
aam
mov
lahf
ja
mov
lcall
jo
cs
pusha
movsl
push
or
xchg
xrelease
in
mov
pop
in
icebp
int
int
fistps
push
mov
sahf
cmpb
lods
pop
cmp
mov
shrb
jbe
cmp
bound
jo
push
and
push
lcall
stos
out
dec
or
adc
imul
push
fwait
push
retw
and
pop
mov
negl
int
rorb
mov
sbb
pusha
stc
sbb
cmp
push
jl
or
shr
pushf
dec
dec
add
lock
xchg
lods
nop
aaa
sub
sti
xchg
push
jne
imul
test
add
pop
shll
cmp
or
mov
arpl
in
mov
das
adc
in
jp
push
sub
push
pop
cltd
outsl
packuswb
in
mov
jb
lahf
pop
scas
push
mov
sub
inc
dec
out
push
adc
mov
jb
clc
mov
rcl
lods
xchg
aaa
cmp
cmp
sub
xchg
pop
jmp
nop
sub
pop
cmpsl
mov
bound
pop
push
insl
xchg
xchg
or
lock
mov
repz
out
mov
mov
adc
dec
ret
xchg
jmp
jecxz
sti
loop
out
dec
rcr
dec
sub
outsb
adc
push
xor
andl
mov
cmpsb
lret
lods
imul
jno
push
mov
mov
dec
movsl
xchg
dec
and
inc
andb
mov
in
sahf
add
sti
mov
xor
popa
rorb
sub
das
cmc
add
movsb
sub
push
jp
notb
add
loope
adcb
push
jns
push
sbb
xchg
lds
icebp
xor
test
cmpsl
pop
jp
mov
push
pop
pop
data16
pop
cmp
fs
ficoms
les
int
sbb
int
xchg
data16
xchg
or
jle
icebp
insl
jmp
rcrb
test
loop
pop
push
adc
push
mov
sub
lock
outsb
mov
cs
jge
jge
mov
mov
jle,pn
mov
and
iret
sbb
js
imul
adc
sbb
pusha
scas
dec
inc
outsl
ja
fbstp
ja
inc
xor
mov
jne
sub
jnp
sbb
lret
scas
cltd
out
rorb
imul
daa
imul
into
push
sub
int3
or
add
mov
pop
jno
lret
or
ret
inc
test
mov
gs
and
je
dec
xor
xor
ljmp
rclb
loopne
pop
mov
jbe
lret
jns
jle
push
test
adc
lret
and
into
mov
aaa
cmpl
jae
arpl
dec
stc
jns
xchg
xchg
lcall
shll
mov
outsb
adc
and
jmp
ficoml
mov
jecxz
and
out
xchg
ljmp
loopne,pn
ud2
scas
test
popa
mov
fstl
call
fistps
lea
inc
fdivrs
push
outsl
and
aas
inc
cmp
pop
dec
adc
jnp
les
loop
pop
rcrb
ss
jae
out
cmp
push
call
lret
orl
sbb
insl
lds
cmpb
loop
stos
ficomps
pop
lret
mov
push
cmp
inc
sub
and
stc
xchg
cmpsb
sub
mov
or
mov
ss
xor
xlat
cmp
and
and
mov
jge
gs
das
shr
call
es
cmp
xchg
inc
or
rol
pushf
das
mov
popa
arpl
ds
jns
mov
push
pop
insl
sbb
test
and
pushf
cmpsb
adc
fistpl
rolb
in
dec
dec
call
mov
mov
inc
jmp
inc
fisubrs
push
in
std
subl
inc
daa
xor
ss
les
repnz
in
or
jb
lahf
pusha
prefetchwt1
or
and
add
cli
inc
cmp
mov
sub
or
ret
inc
sahf
movsl
jle
jg
dec
imul
outsb
dec
addr16
xchg
adc
adc
lcall
outsl
aaa
cmp
fldenv
jbe
push
sbb
sub
aad
xchg
push
xlat
pop
hlt
pop
jmp
jns
fcomps
sahf
lcall
enter
or
sbb
xchg
addr16
push
jo
jp
inc
in
mov
jae
and
cmc
xchg
hlt
data16
shr
insb
pcmpeqw
and
ds
subl
mov
xchg
addr16
cmp
inc
jnp
ja
jb
and
jb
lret
fnstenv
xor
aam
cli
les
lret
int3
xor
js
shlb
pop
mov
push
loopne
pop
pop
aas
movsl
lea
xor
xchg
mov
xor
jb
lea
mov
enter
out
lock
xor
sbb
std
pop
cmp
xchg
pop
es
add
jmp
sbb
push
iret
cmp
mov
shl
sbb
sub
mov
adc
xlat
addr16
pop
jge
cld
inc
movsl
xor
fcoms
sub
gs
inc
pushf
into
dec
sbb
mov
shlb
imul
sti
int3
jo
jge
fsubrl
out
shrl
loop
mov
cmc
dec
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
dec
ficoml
jp
pop
jp
or
jp
add
jo
lcall
xchg
repz
lea
jns
fisttpll
insb
fiaddl
stc
pop
pop
nop
int
imul
in
jae
and
lret
adc
mov
jl
in
push
enter
adc
cmp
xchg
pusha
mov
push
fdivs
lret
arpl
mov
sbb
repz
inc
mov
xlat
jge
outsl
stc
movsb
lock
xchg
pop
xor
les
xlat
adc
xor
subb
pop
nop
mov
mov
popf
negb
mov
and
dec
into
popf
fistpl
cwtl
shll
jg
add
add
adc
add
pop
fwait
pop
push
out
call
inc
mov
push
xorl
js
push
jp
mov
subl
iret
and
xchg
push
das
sbb
pushf
out
pop
adc
fnstsw
stos
pop
push
or
rcrb
sar
bnd
scas
xchg
and
test
and
out
arpl
mov
and
lock
out
ret
daa
pop
mov
xorb
nop
sti
dec
mov
jno
dec
pop
pushf
pop
xor
cmp
add
arpl
mov
fmull
xchg
lcall
fcomps
or
add
bound
ret
arpl
dec
cli
and
or
test
stc
sbb
or
ds
cs
out
test
aas
xchg
insb
cmc
repnz
out
mov
hlt
outsl
cmpsb
cli
sbb
repz
xor
pop
repz
mov
dec
inc
shrb
ret
xor
xor
cwtl
outsl
xchg
imul
in
lods
in
push
xor
sahf
adc
inc
jae
xchg
push
and
js
mov
mov
lahf
and
dec
pop
cmp
sbb
dec
xor
cli
imul
xor
jge
add
ja
aaa
pop
leave
sub
dec
ficoms
jl
push
pop
sub
cmp
aas
imul
mov
mov
rorl
pop
fcoml
imul
inc
adc
in
xor
jg
or
jecxz
outsb
mov
mov
test
shl
lcall
or
ss
int
loopne
adc
add
mov
pop
push
fadds
pop
sbb
je
xchg
bound
bnd
push
ror
out
mov
sub
xor
xor
sarl
les
lock
lea
pop
pop
push
mov
popf
rcl
xor
jo
cs
subb
lcall
pop
jns
inc
jo
xor
outsb
das
mov
adc
lahf
adc
pop
dec
rclb
pop
fidivl
enter
lods
push
pop
insb
xchg
arpl
xor
in
mov
jbe
pop
push
ss
aad
addr16
xchg
jl
stos
mov
loop
sub
or
out
sub
mov
cmp
in
pop
outsb
mov
imul
jp
sub
in
inc
push
or
rcl
pop
cmp
xchg
ljmp
or
push
ds
mov
and
ret
loope
negb
rcr
clc
dec
sahf
icebp
mov
pop
in
test
inc
aas
cmp
mov
test
sarb
test
lcall
xor
jle
frstpm(287
cmp
test
lds
mov
lret
and
cmpsb
fists
xchg
push
hlt
aam
out
jle
pop
cmp
dec
cs
mov
jo
cmp
test
sbb
in
jmp
xchg
xor
idivl
test
adc
cmp
pop
cs
sbb
fimuls
movsb
ret
daa
inc
xchg
out
inc
jne
inc
call
sbb
scas
mov
cmovp
push
xor
in
loopne
idiv
popa
xor
bound
pop
nop
pop
iret
pop
jae
stc
rcrl
or
imul
cwtl
mov
fiadds
and
insb
or
xchg
pop
push
stos
stos
loopne
popl
cltd
push
insb
or
into
or
push
and
pop
sbbl
cwtl
out
and
mov
ja
aas
test
or
rcrl
lahf
inc
daa
repnz
stos
cmp
jns
or
and
or
orb
shr
fsubl
xor
xchg
and
repz
xchg
adc
jns
insl
into
or
repz
xchg
add
inc
push
jbe
dec
cld
movb
push
jnp
mov
xchg
push
xor
stc
jle
sar
mov
pop
push
xlat
xchg
icebp
mov
pop
stos
loope
ja
icebp
cmp
lods
mov
cmpsb
cwtl
jmp
push
inc
mov
rolb
ja
adc
daa
bound
rol
stos
fnstenv
fidivs
inc
sbb
loope
test
incl
inc
or
cmpb
faddl
mov
lea
mov
mov
jbe
lea
fcomip
inc
sub
in
daa
ss
hlt
fld
shll
aaa
push
clc
rcll
xchg
movb
sbb
fcomip
aaa
negl
ja
aas
sub
dec
icebp
lock
xor
and
lret
int3
and
pop
fs
xlat
xchg
and
sub
push
push
addl
pusha
pushf
sarl
subb
mov
pop
lods
js
loop
and
dec
mov
mov
insl
repnz
adc
xor
xchg
add
and
push
mov
inc
sbb
add
push
dec
std
add
xorb
call
fs
lods
inc
das
into
pushf
pusha
sarb
mov
dec
xchg
adc
dec
inc
xor
mov
rorb
mov
push
sub
into
insb
mov
js
rclb
fs
faddp
sarl
rcrb
sbb
bound
fldenv
aam
sub
jns
dec
jg
xchg
fldenv
mov
call
mov
jne
and
add
pop
ss
not
jl
sti
pusha
movsl
cmp
adc
pop
inc
dec
call
push
xchg
dec
lret
mov
pop
mov
xor
adcl
nop
pop
clc
in
sarl
fists
rcl
in
push
lret
cmpsb
lcall
sbb
pop
push
je
mov
dec
loope
push
pop
mov
add
popa
jecxz
mov
and
lahf
fstps
lock
cmpsb
cld
out
into
sbb
xchg
jb
dec
std
sbb
enter
pop
ja
mov
repnz
or
adcb
jmp
mov
aas
hlt
loopne
adc
inc
pop
sbb
xchg
xchg
pop
xor
sete
pop
push
test
xlat
cmpsl
shl
mov
daa
leave
les
jno
inc
jp
adc
cmpsb
fst
movsb
lahf
xorb
mov
mov
jbe
cwtl
lock
and
in
shlb
push
xchg
movsb
lock
and
nop
add
orl
mulb
cmp
mov
stos
xor
push
adc
mov
mov
mov
test
pop
cmp
imul
fcoms
rolb
mov
xchg
test
ja
adc
push
sub
xchg
cmp
mov
pop
add
bound
dec
cmpsl
pop
mov
xor
pushf
dec
ret
in
jmp
bound
pop
fwait
mov
pushf
inc
hlt
adc
mov
sbb
pop
dec
mov
in
int
jp
push
fisttpll
jg
rclb
xchg
stos
scas
loopne
push
dec
cld
icebp
imul
dec
scas
fldt
mov
cmp
mov
xchg
inc
mov
ror
sbb
lret
push
mov
out
xchg
jge
xchg
cltd
daa
insb
outsl
sub
inc
loop
mov
push
call
aad
ljmp
fnstcw
sub
push
out
aas
je
jno
mov
push
repnz
xor
lock
js
arpl
pop
fs
ret
mov
jg
stos
jb,pt
in
jecxz,pt
or
mov
rcrl
push
es
jecxz
add
jmp
mov
jge
jno
fwait
cltd
cmp
xor
jecxz
add
fdivr
movsb
sbb
mov
std
test
repnz
roll
jbe
add
ja
stc
test
add
lods
jno
and
gs
out
inc
ss
hlt
mov
imul
leave
mov
insb
push
adc
jmp
iret
xchg
push
push
out
dec
popa
inc
jge
mov
push
dec
add
push
mov
cli
fdivrs
stc
bound
fwait
js
jae
lcall
repnz
es
xchg
xchg
push
orl
shll
push
in
pusha
xchg
or
dec
out
imul
and
mov
imul
je
aam
mov
rcr
int
bnd
push
push
loopne
add
std
mov
pop
out
iret
push
cs
scas
push
inc
dec
rol
mov
sbb
repnz
xor
push
incb
jb
add
ljmp
lret
clc
pop
out
mov
sarb
ljmp
inc
into
dec
jp
pushl
out
test
and
xchg
push
popf
or
add
pop
dec
test
popf
fdivrs
inc
or
stc
adc
sbb
cmc
clc
jp
in
and
fwait
sub
xchg
shll
dec
mov
cmp
mov
xlat
int3
push
sbb
rclb
pop
test
mov
test
lahf
sub
push
mov
xor
push
push
adc
xor
mov
pop
jmp
mov
pop
dec
and
clc
lret
hlt
xor
rcl
cs
arpl
and
stos
push
test
xchg
jno
add
inc
fbstp
lds
rclb
mov
aad
xchg
xchg
inc
imul
movsw
test
stc
in
sarb
in
test
sahf
push
xor
cmp
cmp
cld
outsb
add
leave
stos
stos
cmpsl
pop
fcmovb
ljmp
ljmp
adc
cmpsl
loope
dec
mov
push
hlt
xor
jno
ret
xor
in
jg
cmp
out
push
fcmovbe
scas
decb
cwtl
mov
push
popf
bound
dec
push
inc
iret
in
cs
adc
xchg
test
xor
xchg
out
mov
pop
mov
in
call
adc
imul
into
sbb
adc
std
out
into
inc
enter
add
cmp
les
mov
daa
scas
xor
xchg
and
fsubs
mov
cwtl
sub
int3
mov
jecxz
imul
insl
ljmp
hlt
push
arpl
sub
movsl
in
sahf
fldenv
fyl2x
sahf
adc
js
xorl
in
inc
adc
mov
adc
loope
inc
mov
cli
mov
sarb
pop
push
add
subb
rolb
inc
int3
pusha
xor
mov
outsl
adc
mov
fldt
js
nop
cmp
inc
cmp
push
jle
inc
mov
lcall
cmpl
xor
test
test
scas
nop
hlt
inc
addl
mov
aaa
popf
jae
xchg
mov
mov
lret
imul
adc
xchg
xchg
insl
scas
xorb
fcompl
cmp
shll
add
mov
jp
arpl
xchg
mov
jl
sbb
pop
fnstcw
cli
rcrl
in
movsl
adc
es
out
and
pop
clc
adc
ja
push
mov
into
xchg
out
pop
xchg
out
cmp
jnp
mov
rcr
pushf
imul
dec
ljmp
xor
mov
sahf
xchg
xchg
scas
popa
mov
mov
pop
dec
call
mov
les
flds
inc
out
fsubrl
scas
adc
push
in
ss
lods
cmp
and
lea
xchg
iret
in
mov
js
pop
rcrl
or
subl
pushf
orb
jg
clc
xor
fcoms
cmp
jmp
xchg
les
iret
data16
pop
mov
add
std
sub
test
xchg
push
inc
mov
inc
call
or
jl
mov
lods
xor
insb
push
push
mov
hlt
clc
jl
cmp
jmp
testb
jle
push
pop
lods
push
in
pop
fimull
sub
jmp
push
adc
cmp
nop
and
and
pop
ret
jp
mov
jno
mov
ja
mov
enter
sbb
rclb
push
inc
add
mov
aaa
push
addr16
push
pop
xor
mov
leave
adc
xchg
or
in
push
push
cld
lahf
imul
das
or
std
push
pusha
ret
dec
les
mov
inc
imul
nop
lds
je
repnz
pop
push
sbb
jne
xor
fxch
cwtl
test
dec
jge
insl
push
mov
jbe
push
dec
dec
push
fistps
xor
mov
jecxz
xor
lcall
int3
xchg
mov
xchg
push
xchg
xor
mov
ret
movsb
repnz
in
stos
pop
clc
in
cmp
out
xchg
jg
arpl
xor
push
mull
and
mov
jbe
fiaddl
jo
xor
shll
scas
shlb
mov
dec
ljmp
inc
push
mov
dec
and
pop
mov
add
nop
mov
xchg
int3
mov
sub
test
addl
fisttpll
fldt
insl
xchg
imul
jecxz
ret
xor
dec
jl
jge
pop
push
jne
add
fadds
xchg
pop
sbb
adc
and
xorl
mov
ljmp
add
nop
rol
aaa
adc
stc
cmp
add
nopl
add
mov
bound
jmp
clc
mov
mull
sub
cmp
mov
loope
pop
pcmpeqd
push
pop
sub
js
in
xor
arpl
mov
xchg
push
mov
or
or
add
fwait
call
sub
repnz
pop
pop
ss
out
sbb
jno
sub
mov
clc
cmp
stos
int
pop
cmp
test
mov
push
nop
xchg
and
mov
pushf
dec
in
mov
push
bound
pop
cmp
ss
adc
push
lret
add
ficoml
pop
imul
fs
sub
cld
push
jl
fdivrs
dec
pop
int3
sbb
sarb
enter
addr16
jl
pop
aam
sub
lods
hlt
jnp
push
dec
xor
push
out
mov
sub
pusha
daa
testb
addr16
test
call
mov
shlb
xchg
sarb
cld
cmp
cmovp
pop
lods
fdivs
xor
ja
jecxz
sarb
mov
xor
fnsave
mov
xchg
jnp
mov
out
sahf
cmc
pop
nop
addr16
and
sbb
mov
aam
cli
into
or
testl
les
sahf
inc
add
xor
jae
roll
or
xchg
and
dec
cmp
mov
xchg
cmp
lods
outsl
dec
sub
jns
mov
es
mov
or
loop
lods
outsb
int
or
xorl
sub
mov
fld
or
outsb
xor
push
je
hlt
sti
arpl
sbb
test
sub
daa
sub
dec
es
cmp
cmpsl
cmp
jae
push
insb
xchg
ret
push
mov
icebp
sbb
cmp
and
dec
ss
mov
mov
add
inc
das
es
out
mov
jbe
jno
iret
cmp
push
pop
mov
cmp
cmp
mov
push
and
scas
push
gs
stos
je
ja
ret
inc
inc
cmpb
pop
imul
and
dec
sbb
iret
je
or
cmp
and
pushf
pop
and
mov
adc
add
icebp
pop
push
fidivrs
repz
mov
xchg
add
jmp
and
outsb
pusha
js
in
jmp
xchg
jb
mov
fwait
sub
andl
pop
int
out
stos
xchg
inc
lret
mov
cli
lahf
mov
inc
push
pop
mov
push
sub
sbbb
add
pop
xchg
sbb
fiaddl
std
add
imul
movsb
or
incl
loopne
out
push
cwtl
cmp
lret
sahf
and
mov
fsubl
mov
push
sub
mov
stc
xor
adc
arpl
sbb
xchg
push
shrb
xchg
add
push
pop
push
stos
sbb
push
add
jno
and
inc
pushf
xor
lods
jecxz
bnd
inc
jo
gs
aas
pop
mov
inc
push
in
stos
jle
and
test
imul
daa
pusha
cmp
subb
outsb
imul
lods
xor
xchg
adc
leave
lret
fidivrl
jle
iret
lods
ret
cli
in
fsts
stos
scas
adc
nop
dec
and
fwait
sbb
jge
fidivrl
and
xor
pop
push
add
mov
fsts
or
and
cmc
sub
and
mulb
adc
jb
icebp
in
mov
loope
jp
jle
mov
add
loopne
arpl
addr16
enter
cmp
jb
rcrl
pop
xlat
push
and
ja
push
xchg
scas
cmpb
loopne
stc
js
add
bound
sbb
lahf
lods
sub
inc
dec
stos
lods
push
mov
mov
xlat
push
das
ss
dec
sub
sar
ljmp
add
or
xchg
dec
mov
xor
inc
call
and
lea
sbb
lods
xchg
adc
jbe
je
imul
dec
repz
cmp
test
hlt
xor
xor
jmp
or
sub
lcall
fwait
dec
jmp
push
aas
push
iret
pop
clc
mov
ss
shrb
inc
scas
enter
xchg
lcall
fdiv
cmp
cmp
xor
jnp
aas
pop
mov
add
xor
or
hlt
xchg
insb
inc
call
imul
clc
pop
fdivl
mov
aam
xor
inc
ljmp
ss
iret
sbb
loopnew
aam
sbb
loopne
mov
xchg
push
stos
xor
or
mov
lods
mov
sti
push
leave
add
sub
repz
add
pushf
pop
jp
dec
pop
hlt
imul
mov
rorb
adc
stos
mov
loop
push
jecxz
sbb
out
mov
xor
sbb
mov
jle
incb
sarb
jle
mov
cmp
add
sbb
test
in
cmp
enter
and
fsubr
mov
or
xchg
mov
sub
mov
add
addr16
imull
pop
jecxz
ss
pop
xor
out
imul
lds
cld
mov
adc
rorl
rorl
mov
adc
inc
imul
fadds
xor
adc
shrb
aam
sbb
adc
xchg
pop
lock
lea
mov
add
sarb
and
pop
sti
lahf
xor
mov
cld
pop
fs
ljmp
jl
or
cld
movsl
repz
inc
inc
mov
adc
dec
jb
movsl
adc
sbb
push
xorl
imul
push
repnz
negl
mov
jbe
hlt
rol
jne
into
push
nop
mulb
xor
dec
inc
xor
cmp
outsl
loopne
or
stos
and
mov
sti
jb
push
sub
jp
mov
jge
push
jle
jns
or
pop
icebp
loop
pop
cmc
mov
std
lret
in
shl
mov
jnp
dec
dec
inc
into
out
mov
fdiv
xchg
mov
and
xchg
push
or
lret
inc
dec
fistps
adc
clc
sti
stos
js
cmp
mov
add
cs
shll
das
movsl
loop
popl
xor
jg
popf
sub
mov
rol
adc
mov
jno
sub
push
test
enter
pop
cmp
xchg
jmp
adc
ja
lret
jecxz
repz
dec
jle
fs
test
sbb
jno
push
es
xchg
pop
lea
xor
xor
and
or
dec
mov
mov
outsl
xchg
mov
aas
test
frstor
lds
fbld
decl
mov
dec
inc
xchg
mov
jns
add
sub
mov
or
movsl
loop
dec
sub
out
inc
pop
aad
adc
test
cmpsl
cltd
daa
dec
fadd
cmc
adc
mov
imul
js
pop
add
cmp
mov
adc
xor
jbe
jecxz
loope
mov
xor
add
aad
outsl
or
dec
imul
xchg
test
jecxz
mov
xor
dec
dec
xchg
push
aaa
xchg
pusha
fldenv
mov
sahf
jp
rcll
mov
out
xor
mov
inc
dec
or
inc
mov
loopne
jecxz
and
pop
xchg
xor
fadd
jo
xchg
and
inc
hlt
mov
ss
ret
lcall
sbb
dec
cmpsb
into
lar
pop
test
sub
lds
adc
in
pop
xor
mov
push
adc
jb
sahf
sti
xor
sbb
mov
lret
jo
test
dec
aas
xchg
dec
cli
inc
std
iret
mov
adc
mov
rcl
push
sbb
xor
loope
cmpsl
rcll
cmp
cmc
mov
test
mov
adcb
sar
adc
outsb
mov
lock
cmc
jmp
out
mov
jb
rcrl
pop
test
pop
test
lret
and
jmp
sbb
fsubl
mov
cmc
jmp
outsb
push
push
mov
pushf
subl
lea
and
fucompp
xchg
repz
scas
je
lret
aas
jl
fwait
lret
fs
xor
movsl
push
leave
xchg
lock
andl
imul
push
xor
sbb
lods
ds
dec
push
movsb
or
push
hlt
hlt
out
and
inc
xor
fdivr
movsl
xchg
cmp
jmp
addr16
insl
mov
jge
dec
mov
add
inc
js
out
lods
xchg
nop
ds
push
iret
call
push
xor
cmp
push
pop
scas
inc
repz
loopne
sub
add
scas
or
jno
lret
push
repz
fdivs
inc
shrb
movl
sbbl
stc
lock
ffree
mov
fnstenv
loope
jmp
jbe
cmpsl
xchg
pop
daa
imul
cli
sbb
xor
popf
inc
and
xor
inc
shl
stos
adcb
mov
or
jl
push
add
push
movsl
data16
lea
inc
mov
lods
push
mov
adc
sarl
xchg
fbstp
mov
add
pop
dec
cmp
rcrl
push
sbb
fdiv
notb
fildl
dec
pop
pop
sbb
jb
pop
adc
push
mov
inc
mov
bound
aaa
repnz
stos
and
in
enter
xlat
dec
lods
dec
fwait
or
andl
hlt
andb
arpl
and
ret
adc
xorl
sbbl
jg
mov
dec
outsb
shll
inc
mov
inc
mov
icebp
jb
pop
insb
xchg
test
xor
in
adc
mov
adc
sub
pop
inc
lret
mov
imul
jle
sti
pop
das
adc
xchg
cli
insl
push
mov
test
add
lahf
jge
or
push
push
sbb
dec
fcmovu
pop
or
and
scas
pop
xor
nop
flds
call
xlat
adc
jns
xchg
stos
or
jmp
addl
popf
data16
inc
adc
mov
or
pusha
insl
lods
or
cwtl
mov
lods
pop
fs
mov
in
or
jb
xor
popa
sbb
cmp
test
ss
jne
xchg
cltd
addr16
mov
inc
gs
dec
adc
ficompl
adcb
test
mov
mov
dec
outsb
adc
push
add
imul
ret
roll
pop
mov
in
mov
jle
ret
xchg
movb
jle
hlt
dec
pop
testl
repz
ja
rclb
and
and
xor
outsb
mov
ret
and
jp
or
jge
es
aad
adc
jnp
nop
sbb
out
add
jge
add
or
inc
mov
loop
aas
push
test
bnd
faddl
cwtl
mov
jns
loopne
lock
dec
test
nop
mov
je
xchg
pop
add
dec
sub
leave
pusha
inc
add
inc
add
dec
icebp
push
stos
dec
inc
dec
push
and
addr16
pop
push
pop
dec
mov
mov
cmpsl
add
inc
scas
dec
or
fisttpll
sbb
insl
push
inc
pop
and
cmpl
xor
mov
cmp
mov
xchg
clc
clc
mov
addr16
les
sub
mov
or
mov
cmp
into
xlat
jle
mov
into
pop
scas
repz
fidivl
out
cltd
adc
inc
mov
xchg
jge
mov
inc
test
push
movsl
pop
loop
int
fiadds
inc
jecxz
dec
out
movsl
jg
lea
inc
cmp
rcrb
nop
in
repnz
pop
out
je
shlb
push
movsl
jae
fidivs
cmpsb
cltd
dec
ret
xchg
test
call
lahf
dec
inc
in
push
pop
push
cmp
jl
in
mov
ja
dec
push
popf
sub
fs
call
cmc
or
jmp
mov
shl
pop
mov
or
xor
jg
ljmp
out
xchg
xchg
dec
inc
cmp
xor
idiv
push
adc
adc
and
lds
xchg
sti
xor
test
jae
or
out
mov
ror
inc
les
lock
addl
into
xchg
jae
insl
stos
aad
dec
or
popf
sub
sti
imul
shll
xor
or
sahf
push
jg
pop
sbbl
stos
and
aad
push
in
scas
or
adc
arpl
sbb
push
js
dec
pop
sbb
push
push
mov
rcrl
push
pusha
cltd
stc
dec
xor
push
jnp
stc
push
cmc
and
data16
imul
jno
pusha
shll
movsb
rorl
lret
repz
mov
cltd
mov
cli
push
inc
leave
negb
dec
sub
setne
jl
addl
test
pop
repnz
mov
call
push
mov
jge
loop
xor
cmpsb
pop
test
mov
xor
imul
call
loopne
xchg
adc
and
push
mov
aas
cmp
test
lret
mov
push
or
fistpll
aad
stos
mov
aaa
scas
lea
fwait
out
repnz
lods
stos
or
sti
fimuls
cmp
loop
add
loope
fwait
mov
jmp
add
sti
fistps
and
daa
push
xor
inc
mov
xor
xor
loope
cwtl
in
shrb
mov
addr16
movsb
mov
mov
sbb
sbb
rcrl
inc
imul
cmp
pop
pop
lods
sbb
ja
jl
push
std
xchg
push
dec
popf
mov
pop
int
push
push
xchg
xor
je
adc
mov
push
and
adc
pop
rcll
sbb
loope
shl
outsb
dec
bound
inc
mov
ja
xchg
movb
jl
cltd
mov
push
xor
xchg
and
cli
pusha
iret
inc
lcall
mov
push
addl
mov
cmpsl
imul
fnstenv
or
in
or
stc
pop
cmc
sti
xchg
mov
and
leave
je
add
inc
hlt
sti
fidivrl
fnstsw
mov
fsts
stos
std
std
and
in
or
inc
mov
pop
xchg
andb
pop
call
ret
test
mov
in
inc
xor
pop
dec
mov
pop
pop
xchg
dec
mov
or
push
mov
rclb
lret
xchg
push
jle
adc
decl
pop
mov
push
andl
push
jo
ja
aad
mov
lahf
es
xor
imul
lahf
push
pop
test
xchg
and
aad
cmpsl
and
adc
lea
add
and
xor
sbb
in
rcrb
xor
cmpsl
inc
pop
and
dec
sub
rclb
sbb
xlat
pop
push
shlb
inc
mov
lcall
fiaddl
mov
dec
clc
jo
mov
fsubrs
loope
jecxz
cli
lods
push
sub
rcll
and
ret
cmpsl
dec
cwtl
xlat
rolb
and
ja
push
test
lahf
inc
ret
dec
lods
push
xchg
xchg
and
add
pop
and
inc
arpl
shrb
shrb
aam
fistpll
sub
mov
cmpsl
ret
lret
outsl
mov
out
loopne
mov
popf
inc
dec
fbstp
and
mov
fdivs
adc
xchg
inc
adc
inc
adc
pop
and
push
mov
dec
and
aam
movsl
ret
loopne
mov
repz
clc
or
or
xor
insb
fdivrs
aad
cmp
es
rcrl
mov
mov
mov
xchg
xchg
mov
push
xchg
and
sbb
push
call
sbb
add
mov
aam
dec
mov
insl
cmp
xchg
fistpll
aas
cmpsl
cmpsb
js
pop
cld
or
jge
push
xchg
mov
adc
loop
xor
test
cmp
pusha
inc
decb
sbbb
xorb
or
mov
pop
inc
xchg
fwait
insb
mov
std
roll
pop
out
sahf
je
push
pop
inc
lcall
and
cwtl
ds
sub
ret
repnz
xchg
adc
cmpsl
push
addr16
icebp
xchg
adc
mov
int3
adc
lds
sarl
add
lods
push
cmpsl
fldcw
xchg
dec
dec
int
cmp
mov
pop
sbb
sub
and
jbe
aas
push
mov
mov
push
fistpl
and
sahf
ss
and
xchg
arpl
push
mov
pop
movsl
inc
cmp
addl
adc
in
sub
mov
push
add
xor
in
lret
mov
mul
pop
jb
scas
jae
sub
sub
sub
call
sahf
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
loope
mov
lcall
jp
insb
ret
push
int3
mov
add
pop
stos
sbb
lcall
stos
push
push
icebp
mov
or
fucomp
inc
mov
jg
and
add
inc
aad
lcall
clc
repz
fs
mov
das
lods
inc
lea
inc
pop
aad
cmp
adc
js
lds
xchg
xor
int3
lds
es
mov
mov
rolb
mov
mov
cmp
loop
dec
jo
dec
mov
and
cmp
mov
fnstcw
dec
in
adc
jno
push
add
cmp
sub
pop
and
and
jo
sar
or
jbe
loopne
lcall
test
pop
jae
mov
inc
jl
ret
stc
test
icebp
and
mov
enter
fmull
add
das
push
jae
and
pop
cmp
inc
and
ds
mov
xor
out
sub
add
xchg
je
lds
gs
dec
lret
jbe
testl
ja
and
and
ljmp
mov
pop
in
and
dec
pusha
test
aad
push
jb
pop
inc
pop
test
jg
add
test
aaa
jg
dec
call
and
pop
imul
pop
sub
in
mov
sub
cwtl
loop
movsl
inc
xchg
inc
inc
xchg
icebp
imul
jno
scas
sbb
adc
and
add
or
cld
popf
stc
mov
mov
jbe
cltd
scas
xor
cli
add
addl
inc
add
mov
in
lcallw
js
imulb
fistpll
and
jmp
dec
push
das
jne
inc
add
cltd
ljmp
xchg
mov
mov
stos
sub
cmc
pusha
aam
or
pop
cmp
and
mov
push
inc
jp
js
test
cmpsb
jns
jmp
stos
aas
fisubrs
inc
and
cmpsb
cli
popa
push
insb
mov
out
push
test
jnp
mov
arpl
fiaddl
or
sbb
fadds
popa
lahf
rcl
xor
pop
xchg
cmp
repnz
das
xchg
pusha
fwait
push
roll
inc
or
push
adc
mov
in
pop
add
into
inc
aas
pop
popa
jne
test
out
and
lds
sub
mov
push
or
xor
xchg
mov
or
add
sub
or
add
cmp
stos
mov
out
xor
sbb
xchg
push
inc
jb
rcrl
xchg
cld
loope
jle
in
pop
lea
outsb
int
adc
in
shll
xchg
push
jle
repnz
push
popa
leave
jno
inc
sub
jns
adc
lock
mov
xchg
or
jne
or
inc
cli
inc
imul
pushf
es
leave
lcall
std
subb
cltd
aaa
add
mov
xchg
jns
jge
call
shrl
addr16
jnp
pop
or
aad
mov
push
add
dec
out
mov
mov
mov
sub
sbb
cmp
test
ds
rcll
mov
inc
inc
jmp
fwait
pop
out
jb
js
hlt
sbb
out
adc
jo
js
or
jno
fsubrl
mov
cmc
jbe
adc
mov
xor
aad
xchg
movsl
mov
pop
jecxz
notl
push
cmp
outsb
orb
inc
lds
inc
mov
leave
push
cmpsb
xchg
xor
add
inc
dec
fstps
repz
xchg
sbbl
aam
loopne
mov
mov
inc
push
add
rolb
mov
jo
outsl
sub
mov
or
shrb
imul
rcrb
mov
mov
push
aaa
inc
not
popf
pop
aad
inc
loope
add
call
std
cli
xchg
sbb
addl
mov
insb
js
pop
inc
sbb
jne
xchg
cmp
icebp
sbb
gs
mov
mov
mov
jo
aam
repnz
out
cmp
std
xchg
sbb
push
leave
nop
aas
jmp
out
rcll
sbb
add
pushf
in
mov
dec
int3
mov
xchg
xor
adc
neg
pop
movl
in
inc
aad
daa
xchg
into
pop
adc
aas
ss
imull
ficompl
and
fsts
add
neg
stos
jne
in
fmul
cmpsb
cmpsl
and
sub
add
dec
repz
nop
mov
inc
xor
mov
cmc
push
xor
push
popa
mov
mov
int
jnp
int
jg
pop
orb
xor
imul
push
push
out
in
or
push
stos
daa
popa
jnp
adc
fldcw
pop
loope
pop
jae
mov
iret
push
cltd
mov
push
dec
fildll
pop
jmp
sbb
xchg
xchg
iret
ljmp
push
push
cmpsl
out
push
je
xlat
addr16
bound
inc
push
das
out
cmp
sbb
out
mov
jge
jae
outsb
dec
jno
xchg
and
test
or
js
pop
and
xchg
hlt
ret
shlb
xor
pop
les
mov
or
mov
sbb
lret
inc
shlb
and
clc
mull
or
cmpl
out
sti
dec
add
lods
lea
add
jmp
fiadds
sti
xchg
sub
fstpl
adc
pop
pushf
jns
mov
aaa
pop
data16
xor
cld
mov
lcall
movl
loop
pop
or
cld
loope
push
pop
cli
xlat
mov
inc
imull
sbb
aaa
inc
aaa
push
mov
mov
ret
movsb
add
repz
mov
add
sbb
dec
hlt
xor
scas
and
inc
adc
jecxz,pt
xor
xchg
iret
or
ret
pop
push
inc
idivl
dec
aam
xor
idivl
mov
ljmp
push
jae
inc
inc
sbb
push
dec
mov
mov
and
stos
xchg
cmp
test
mov
out
jb
xchg
icebp
and
mov
push
loope
sbbb
std
sar
push
mov
jge
pop
orl
xor
aam
and
add
aam
ss
movsl
and
sbb
jp
insl
jmp
jecxz
or
stc
aaa
push
pop
nop
pop
xorb
ljmp
test
stos
js
jmp
out
lock
xchg
andl
cli
inc
cwtl
rcll
ffreep
inc
inc
inc
jge
cltd
or
mov
xchg
test
lods
dec
fisttpll
sar
cwtl
sbb
test
add
notb
movsl
xchg
rcrb
test
aam
pop
cld
insl
pop
mov
push
cmp
add
pop
subb
addr16
ja
movsl
mov
mov
push
xor
movl
loopne
lret
push
add
out
test
push
test
aad
fs
pop
fs
inc
mov
imul
call
mov
scas
sub
shll
loopne
pushf
adc
and
cltd
jae
cmp
xchg
dec
jno
cmc
les
in
in
jl
and
and
imul
jno
xchg
pop
mov
xchg
shl
xchg
sub
mov
or
mov
in
pop
clc
jmp
loop
call
mov
scas
push
inc
mov
xchg
mov
bound
mov
ja
sbb
adc
ud0
pop
adc
enter
add
cld
es
stc
mov
sbb
pop
mov
gs
imul
bound
int
xchg
aam
mov
adc
mov
push
mov
sahf
sbb
mov
sub
in
das
and
fisubrs
testb
in
and
jae
dec
adc
ja
mov
or
movsl
mov
iret
clc
mov
stos
sbb
mov
and
pop
mov
cli
fisubs
cmc
push
lret
jp
or
lock
sub
inc
test
mov
incl
lods
mov
push
sub
or
push
push
xchg
sbb
or
out
add
fcmovne
test
sbb
lock
mov
adc
js
inc
push
push
sbb
je
fwait
mov
push
imul
rcrb
dec
hlt
push
and
adcb
shrb
scas
test
jmp
or
dec
sahf
dec
lock
adc
dec
dec
enter
out
and
sbb
pop
cld
loopne
lock
into
pop
xchg
scas
xchg
enter
sub
scas
adc
ljmp
sbb
mov
sbb
in
out
movsb
mov
push
pushf
gs
outsb
push
xchg
rolb
stos
pop
neg
jb
fcoml
xor
xchg
inc
bound
push
adc
cmp
pop
fadd
xchg
fnstenv
mov
mov
lcall
mov
subl
jge
out
stc
imul
loope
sub
jo
jge
and
adc
nop
xor
out
or
sub
jl
ss
div
cmc
mov
rclb
sbb
imul
dec
sbb
test
pop
mov
inc
jo
sbb
jge
or
or
sbb
imul
in
jp
orl
movsl
rcrb
mov
into
stos
fstl
arpl
inc
lcall
xchg
add
jbe
lods
pop
insb
or
mov
mov
call
cmc
add
loopne
sbb
dec
dec
repz
push
sub
add
cmc
sub
js
je
cltd
jecxz
or
pop
push
push
adc
push
sub
cmpb
adc
cmp
mov
aam
pop
fwait
jno
test
sbb
scas
imul
test
adc
push
mov
stos
or
cld
loope
es
lret
or
adc
push
loope
mov
rcrb
xchg
fistpl
test
push
test
stos
mov
and
jg
push
jge
out
arpl
lds
pop
in
js
and
dec
inc
sbb
lea
stos
inc
pushf
adc
aad
cmp
fs
mov
or
or
movsb
xchg
mov
mov
push
xchg
mov
mov
dec
jmp
dec
dec
push
int
out
cmp
out
movsb
cmpb
dec
loopne
fistpl
ja
test
int3
mov
pop
lds
int3
or
rolb
sahf
pop
scas
addr16
movsl
or
mov
pushf
std
cmpsb
or
test
dec
js
sbb
push
and
inc
shlb
adcl
inc
cmp
adc
aaa
sub
add
fisubrs
cwtl
cmpl
mov
push
sub
xchg
dec
jnp
push
ljmp
cli
repz
fs
enter
xchg
add
mov
std
aaa
inc
jo
sti
aad
in
cltd
push
loope
lock
call
test
pop
or
cmp
xor
sahf
sub
sbb
cs
push
cmp
adc
cmp
loope
and
fists
in
and
insb
push
popf
fstps
mov
jns
icebp
mov
mov
ds
mov
pop
test
sti
add
sahf
fsubl
leave
cmp
ljmp
repz
pop
sub
cmpsl
pop
int
pop
cmc
aaa
inc
insb
popa
dec
jns
mov
mov
cmp
mov
imul
pop
xchg
adc
mov
test
xlat
out
cmp
inc
jle
inc
mov
pop
gs
push
pop
dec
aam
sahf
ds
enter
dec
fsts
mov
in
sub
sbb
out
fmull
cmpsb
or
inc
out
and
push
nop
fsub
xchg
bound
dec
cltd
rol
lret
adc
ja
enter
mov
roll
aas
or
pop
mov
xor
sahf
and
xchg
lret
adcl
scas
pushl
or
inc
and
add
aas
mov
cmp
sub
sahf
imul
loope
push
sbb
addr16
out
inc
lret
ds
outsl
ljmp
xor
rcl
mov
lret
stc
out
shl
cmp
divl
xchg
out
inc
sub
sbbb
bound
mov
xlat
sahf
adcw
repnz
dec
xor
or
or
inc
dec
loope
frstor
mov
and
sub
movsb
mov
fcoms
dec
ficoml
jl
imul
push
scas
movsb
iret
sbb
push
pushf
cs
ds
mov
push
ret
fsts
sti
ds
jno
push
inc
das
ret
jbe
loopne
icebp
lret
imul
ret
cwtl
aad
pop
xchg
sbb
xchg
xchg
mov
adcl
dec
lret
addl
push
les
jne
add
leave
aas
sub
ja
or
aad
and
mov
dec
dec
aas
mov
xchg
lods
push
insb
mov
repz
movsl
sbb
jp
addr16
jnp
decl
xlat
or
adc
repz
xchg
enter
dec
cli
or
push
clc
lea
mov
call
adc
out
aam
sub
leave
pop
idiv
out
jns
inc
xchg
cmp
jle
in
cmp
push
data16
mov
fstpl
push
fdivrp
dec
mov
mov
aad
push
fwait
imul
cs
cltd
sahf
cwtl
mov
inc
add
icebp
or
aaa
lret
in
shlb
paddsb
adc
cltd
lahf
sbb
xor
push
add
sbb
mov
je
out
pusha
rcrl
cwtl
in
in
mov
out
mov
cmp
js
sbb
add
pop
adc
sbb
pusha
stos
imul
in
mov
pop
test
aam
mov
iret
jns
divl
sbb
in
mov
dec
jno
hlt
movsb
aas
push
inc
ret
inc
mov
ds
pop
add
cmp
loope
dec
mov
sti
rcr
xlat
and
lret
xchg
adc
int3
imul
faddl
dec
mov
xchg
and
jns
jnp
js
and
aam
in
or
imul
mov
test
xchg
xor
pop
inc
ljmp
jle
in
jbe
sub
dec
mov
jle
cmp
push
pop
in
xor
mov
inc
stc
das
and
sbb
sub
or
xor
addr16
jl
addr16
push
xor
mov
jns
xor
sub
scas
mov
lock
push
sbb
ljmp
mov
std
fsubrp
fdivr
pop
mov
js
jecxz
lret
cmp
cmp
test
xor
jnp
push
test
jg
pop
sbb
iret
cmp
add
int3
push
sub
arpl
cmp
fldenv
sbbl
imul
mov
inc
lods
in
xor
inc
stos
sbb
jg
test
jnp
cli
sahf
dec
sub
or
dec
cmp
lods
dec
int3
inc
pop
pusha
push
negb
and
or
out
ljmp
xchg
pusha
test
mov
mov
adc
loope
loope
je
cmpsl
adcl
push
cli
int3
mov
jae
jne
ljmp
shll
push
arpl
out
call
push
stc
mov
stos
mov
pusha
daa
mov
je
add
std
insl
adc
faddp
jg
xchg
sub
xor
dec
nop
or
xor
clc
mov
add
dec
xchg
xchg
xchg
cmp
dec
push
dec
je
ss
push
jmp
or
inc
pop
lock
pop
xchg
mov
mov
push
xor
popa
ds
insl
dec
cmp
mov
pop
push
sbb
mov
mov
dec
xor
clc
call
cmpsb
fcomps
and
lret
pop
ret
cld
leave
mov
jno
or
inc
add
dec
or
in
push
jge
push
lret
jbe
punpckhwd
mov
sarl
sbbl
ret
mov
mov
xchg
aaa
aas
into
clc
roll
scas
sub
adc
mov
sub
mov
push
sbb
test
add
insb
inc
xor
mov
or
in
mov
inc
mov
cmc
aad
hlt
sbbl
mov
lret
lods
adc
or
gs
testl
xlat
xor
jbe
je
or
lods
fcomps
sub
push
lock
mov
movsl
pop
sbb
jg
hlt
mov
movsb
pop
mov
lods
rcr
mov
cwtl
insl
mov
add
push
mov
mov
andl
push
xchg
and
adc
mov
adc
js
fistps
sbb
aam
fcmovb
mov
sub
mov
int3
repnz
or
cmp
xchg
dec
sub
mov
and
insl
dec
jmp
imul
loopne
mov
inc
fsubl
ds
inc
sub
in
mov
xchg
clc
dec
outsl
pop
pop
xchg
int
aaa
addr16
addr16
mov
js
testl
arpl
or
pop
push
inc
jg
mov
stc
rcrl
or
rclb
and
shl
mov
jmp
rcr
fld
pop
roll
and
dec
das
dec
cmpl
setnp
sbb
mov
mov
dec
int3
sbb
int
xor
and
clc
add
data16
ret
bound
inc
mov
lret
or
addr16
cmp
mov
aas
cmpsb
adc
addb
mov
jl
pop
jmp
or
push
xchg
pop
inc
fdiv
add
test
mov
jg
ds
and
adc
jl
roll
mov
stos
dec
lods
inc
mov
mov
dec
retw
dec
mov
cmpsb
gs
inc
rcr
cmp
mov
and
ret
and
xor
add
std
clc
outsl
xor
pushf
mov
orb
push
pop
fisubrl
adc
iret
xchg
push
je
push
sarl
lahf
cs
push
mov
leave
jecxz
cwtl
adc
filds
cmp
pop
push
mov
jns
xchg
out
out
cwtl
inc
sarl
outsb
aad
lods
dec
add
pop
hlt
jbe
cmp
rclb
or
pop
outsb
js
lcall
ficoml
cmp
dec
mov
movsb
jge
aas
cwtl
popf
popa
xor
loop
mov
xor
pop
xlat
popf
gs
mov
rcll
mov
cmpsb
lea
cmp
nop
stos
inc
cmpsb
imul
imul
je
cmc
mov
sbb
mov
dec
push
push
xor
mov
sbb
out
add
xchg
rolb
mov
filds
or
cs
stc
gs
cwtl
and
pop
pushf
fcmovnu
mov
pop
sub
and
adc
nop
aam
push
mov
je
pop
mov
adc
dec
add
sar
mov
xor
mov
cmp
ret
hlt
arpl
les
stos
xchg
xor
or
mov
mov
jmp
xchg
mov
jae
cs
or
push
mov
fidivl
mov
outsb
lea
sub
stc
xchg
popf
fsubrp
ficomps
mov
sub
int3
iret
stos
orl
or
push
and
and
push
bound
xchg
xchg
cmpsl
addr16
dec
jecxz
jno
inc
add
sbb
sbb
cli
iret
sub
xchg
cltd
add
dec
mov
dec
flds
or
push
outsb
push
fisubrs
mov
out
adc
dec
xchg
icebp
out
pop
daa
push
or
jb
ss
out
jmp
inc
cs
hlt
test
dec
les
shr
cld
mov
push
xor
lock
cs
test
inc
jb
cltd
es
jbe
mov
mov
ficoms
or
cli
push
jmp
popa
rorb
xlat
ss
outsl
insl
sub
shlb
in
int
jmp
dec
outsl
loopne
and
scas
dec
push
lcall
jnp
test
cmp
cmp
sbb
jnp
add
fdivrs
int3
pusha
aad
scas
lret
dec
lret
cmp
mov
mov
fnstsw
xchg
xlat
jmp
jge
mov
sarb
inc
mov
and
push
rol
cmpsl
les
ret
or
mov
es
mov
in
add
test
les
adc
adc
fxam
cmpsb
aas
and
imul
push
push
mulb
lahf
dec
dec
push
jb,pn
dec
gs
addl
sub
add
rcll
jnp
mov
leave
push
ficomps
sub
movsl
clc
sub
mov
stos
enter
sarl
adc
sbb
sbb
pop
test
lret
stos
jl
lds
adc
movb
lds
dec
aad
pop
pop
imul
in
aaa
mov
xor
popa
push
xor
enter
int3
push
cmp
mov
ret
movsb
mov
dec
sbb
xor
mov
insb
or
pop
call
inc
icebp
mov
xchg
cmp
sub
stc
xchg
sarl
js
adc
orb
test
aaa
fbld
lret
inc
and
jnp
xchg
cmova
test
cs
push
stc
inc
jbe
inc
jo
adcl
fmull
adc
pop
cs
sub
test
mov
sbb
pop
xchg
push
pop
fistpll
sbb
aad
dec
fs
mov
pop
fcoml
xor
mov
inc
popa
push
sbb
icebp
mov
add
out
hlt
popa
mov
in
push
xor
mov
cmp
pop
data16
pushl
sbb
ljmp
nop
xchg
sub
jl
sbb
fsub
jo
pushf
xor
mov
push
push
pop
adc
inc
mov
loop
jmp
rorl
insb
dec
daa
ret
xor
jnp
jg
ljmp
or
test
and
and
ljmp
sahf
fidivs
mov
les
ret
cmp
aam
jnp
out
mov
lea
mov
mov
pop
inc
inc
insb
fs
or
dec
push
push
rol
sub
xchg
xchg
pop
test
sbb
add
lea
shrb
sub
add
mov
roll
and
ljmp
inc
cmp
fdivrs
inc
and
in
mov
gs
dec
imul
sub
mov
test
sbb
mov
or
jnp
xchg
loopne
fwait
inc
pop
xchg
fsub
xchg
sub
fstpl
dec
scas
out
dec
movsb
lcall
jp
and
add
add
lret
jl
rcl
jl
mov
dec
out
popa
addb
mov
fidivrl
cmp
out
inc
gs
inc
inc
mov
cli
mov
mov
scas
aaa
pushf
lds
sub
mov
out
jmp
jp
mov
in
xor
push
std
mov
xor
lahf
mov
xlat
add
pop
mov
mov
xchg
mov
pmulhw
mov
hlt
mov
stos
push
sub
fstpl
add
lods
inc
mov
dec
or
pop
cmp
push
test
jbe
add
inc
ret
jge
cli
in
dec
jp
push
inc
sbb
sub
je
cmpsl
inc
mov
and
or
adc
sub
sbb
push
cmc
es
add
push
cmp
pop
popf
lret
pop
push
sbb
mov
movsl
insl
mov
fists
xchg
xor
jae
pop
dec
popa
cli
scas
and
je
push
scas
dec
mov
cmc
jae
cmp
out
fimuls
aad
xchg
std
push
iret
ret
push
js
adc
in
es
mov
test
ficoml
ja
stc
lret
inc
cwtl
xlat
push
and
and
xor
repz
aam
insb
popf
sub
sarl
stc
jmp
push
popf
pop
pop
fdivrs
and
push
lock
int
cmpsl
push
jno
cwtl
mov
gs
jnp
cmp
push
adc
and
xor
lret
adc
add
aam
inc
inc
fistps
adc
cmpsb
pop
out
mov
and
imul
mov
mov
push
cltd
jnp
pushf
jle
add
add
pop
push
insb
xchg
aad
fnstcw
pop
adc
xor
aaa
and
mov
ret
andb
pop
imul
movl
jae
add
inc
out
add
insl
aas
cmp
push
inc
mov
int
xor
pop
insb
inc
out
in
sti
mov
push
stos
cmp
xor
in
mul
add
sbb
push
xlat
xor
shl
ja
mov
mov
cmpsl
xchg
and
mov
outsb
fcoms
jle
dec
dec
mov
jns
adc
pop
mov
pop
clc
jb
ds
xchg
dec
sbb
mov
cmp
cwtl
addr16
mov
dec
mov
mov
cmp
ficomps
push
push
pop
jae
aam
cmp
dec
inc
ss
lods
and
clc
xchg
js
jne
decb
icebp
in
mov
xchg
sub
imul
test
cmpsl
add
dec
push
or
addr16
xchg
push
cmp
insb
push
mov
mov
das
sbb
mov
into
and
js
push
sbb
sbb
jg
push
icebp
push
cli
sbb
mov
sti
retw
jp
cmp
or
pop
jge
add
ficompl
out
pop
imul
xchg
mov
mov
fbstp
jmp
in
fisubrs
scas
dec
bound
shr
jbe
popa
xor
push
orl
xchg
cs
loop
push
test
sbb
adcl
push
popf
lcallw
push
test
aad
test
adc
push
xchg
cld
pop
push
addb
cmp
mov
lods
pop
pop
dec
jo
xor
movsl
or
xchg
popf
cmp
dec
mov
into
imul
aaa
sub
cmp
ja
lahf
dec
dec
call
sub
xorb
cmp
test
movsl
jno
loopne
arpl
xchg
out
notl
push
push
in
les
lret
inc
out
imul
mov
arpl
hlt
pop
jnp
and
arpl
bnd
jecxz
ds
sarl
pop
and
outsl
pop
mov
or
xchg
cltd
popf
aaa
add
ljmp
int3
mov
cmp
cmp
rol
ret
nop
fwait
lods
lea
adc
loopne
cmp
and
nop
push
and
add
pop
pop
cmpl
xchg
jle
inc
push
mov
mov
add
pop
stos
lods
into
mov
push
cmp
fxch
aam
sbb
int3
pushf
sbb
jne
add
test
aad
xor
loop
lds
mov
push
mov
and
rcr
or
or
xor
mov
cmpsl
push
repnz
xor
das
cltd
aaa
add
xchg
fdiv
sub
mov
xchg
popf
inc
push
or
jle
outsb
fst
pop
popf
add
out
lahf
adc
test
daa
mov
inc
movsl
sub
xlat
lret
jmp
repnz
push
cltd
cmp
js
test
sbb
inc
cli
mov
xchg
add
cs
mov
jmp
sub
sbb
aas
test
push
imul
dec
or
cli
fistpl
push
dec
mov
mov
push
clc
fisubrl
sahf
je
aas
xorb
push
cmp
jb
cli
subl
test
xchg
inc
fsubr
pop
out
cmp
imul
lahf
pop
sti
popf
cmc
pop
pop
adc
jnp
test
xchg
push
xor
callw
dec
loop
mov
adc
push
ljmp
icebp
xchg
adc
and
push
sbb
mov
scas
lret
enter
faddp
mov
push
lcall
mov
fistpll
cwtl
imul
cmp
pop
movsb
pop
or
cmp
call
sbb
cmp
ret
std
mov
and
jbe
push
jno
test
sub
cmp
mov
sbb
pop
pop
inc
mov
mov
add
aas
cmp
scas
push
and
xchg
insl
push
sbb
cmc
cmc
jb
inc
mov
cmp
xor
lret
ret
aad
xor
fildll
mov
mov
idivl
push
push
jnp
sub
xor
sbb
jecxz,pn
jb
xchg
loop
adc
pop
or
rorl
aad
mov
sbb
sub
mov
mov
xchg
xchg
imul
test
sbb
push
mov
aaa
aaa
js
and
aad
movsl
rclb
popa
push
fisubs
jo
int3
add
dec
hlt
mov
rorb
nop
lcall
jb
add
fisubl
add
rcl
cmpsb
and
pop
dec
test
cmp
int
push
out
adc
into
mov
ficomps
push
stos
pop
out
jmp
mov
mov
pop
xchg
outsl
lret
cmp
mov
test
dec
arpl
push
cmp
jecxz
and
xchg
push
and
sbb
cmpl
fcomps
popa
iret
pop
push
frstor
dec
in
push
sbb
dec
mov
jmp
lret
cmp
test
test
cmp
loopne
xchg
outsl
roll
or
jb
xor
mov
scas
lahf
rorb
inc
scas
ja,pn
inc
call
adcl
stc
inc
push
insb
cli
testb
mov
add
xchg
mov
mov
nop
mov
cwtl
cmc
ss
adc
cmp
sub
sub
add
idivl
add
push
lea
push
xchg
outsb
sub
cs
test
mov
push
out
xor
or
or
mov
mov
fadd
mov
test
mov
xchg
and
int
es
and
fiadds
out
mov
into
xor
add
sub
adc
cld
mov
js
imulb
xchg
mov
dec
sub
rcrl
fidivrs
sbb
cltd
pop
push
mov
cmp
lods
inc
push
cli
or
inc
scas
mov
stos
adc
add
push
fstpl
jb
add
sub
lods
dec
dec
pop
scas
pusha
or
movsl
in
cmp
jns
std
ja
dec
xor
pop
loope
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
insb
cmp
add
jp
pop
jp
not
mov
js,pn
and
add
dec
push
jnp
test
xchg
sahf
cmc
fs
xchg
push
lahf
and
mov
imul
mov
cs
xchg
xchg
stos
xchg
or
cmp
lcall
enter
adc
xchg
roll
cld
aad
ss
test
mov
add
xor
inc
add
pop
adc
popf
xlat
lods
daa
adc
jb
shll
rcll
out
in
lret
jne
clc
ds
mov
hlt
push
cmpl
mov
pop
pop
sub
mov
lcall
loopne
push
dec
inc
pop
shlb
ficompl
negb
lahf
popa
pushf
aaa
inc
push
scas
or
mov
cmp
ja
mov
inc
shr
xchg
fstps
insb
jg
andl
sbb
add
mov
sbb
rcll
inc
pop
xor
xchg
cmp
dec
fildl
arpl
add
outsb
or
imull
sub
adc
dec
push
movsb
mov
idiv
imul
mov
arpl
les
sub
orl
adc
xchg
call
shlb
and
out
push
sub
or
add
adc
stos
mov
push
fsubrl
xor
xchg
cli
rcrb
test
aad
dec
sbb
loopne
inc
shlb
jecxz
pop
jge
xchg
in
adc
test
test
fiaddl
out
sbb
xor
add
cmp
sahf
and
aaa
push
cmc
xchg
inc
rorb
jp
aas
mov
repnz
leave
std
in
stos
pop
out
les
xlat
dec
nop
xchg
fidivrl
insl
pop
xchg
adc
test
adc
mov
vpsubsw
cmp
push
xor
sbb
cmp
cmp
cmp
mov
jne
push
or
dec
cmovge
iret
ret
scas
add
insb
test
fs
dec
xchg
dec
inc
sahf
imul
es
inc
mov
cmc
aam
push
mov
fimuls
push
enter
aaa
fimuls
push
ljmp
rol
sub
movsb
outsl
out
jmp
xlat
adc
in
pop
call
pop
jmp
pop
mov
sub
mov
neg
cmp
sbb
ds
mov
jmp
leave
dec
popf
add
leave
insl
call
mov
data16
xor
sahf
mov
cmp
movsb
cmp
or
scas
jl
jmp
xor
test
lock
out
mov
call
mov
xor
adc
or
out
or
data16
iret
mov
cmp
daa
push
insl
jbe
test
lods
out
stos
pop
inc
or
inc
cmp
js
and
jne
movsw
jne
iret
mov
adc
xor
cmp
and
adc
sub
rcl
fxch
push
stc
stos
test
lret
ljmp
ds
in
pop
dec
jno
std
add
push
negl
mov
dec
inc
cmp
scas
xchg
in
push
jl
fucomp
add
popf
lret
pop
imul
dec
mov
lock
test
js
or
insb
mov
in
xchg
test
jne
sar
in
divb
push
jno
dec
xor
or
mov
leave
test
stc
inc
imul
cmp
cld
xorb
jecxz
push
fcoml
add
dec
shlb
push
arpl
cmp
adc
push
xchg
fwait
adc
cmc
fisubl
cmpsb
push
pop
push
in
clc
xchg
imul
gs
ljmp
shl
jl
inc
xchg
push
cmc
in
daa
jp
cwtl
ret
fistl
ljmp
popl
movb
sbb
enter
cmp
mov
jns
pop
incl
mov
cmp
dec
sub
shll
pop
xchg
sub
lock
outsl
and
add
das
jo
out
pop
fucompp
jne
les
push
aaa
das
pop
inc
insl
pop
imul
aaa
pop
sub
jge
pop
add
les
fsts
gs
aaa
icebp
loop
cmpsl
insl
push
mov
lret
adc
mov
dec
ss
fisttpl
mov
lods
and
cmp
insb
jl
in
sbb
jle
sti
lods
and
add
scas
add
sbb
push
loopne
loopne
stos
lcall
roll
jmp
ds
test
mov
sti
rcr
repnz
jbe
dec
xor
fimull
imul
xchg
mov
adc
in
sub
gs
xchg
pop
and
pop
pusha
jmp
sbb
fstpl
push
mov
ds
ljmp
adc
ljmp
pop
pop
shr
inc
jo
mov
mov
sbb
mov
int
icebp
outsl
or
add
addl
cmp
popf
mov
jo
aad
iret
lahf
mov
out
orl
mov
dec
mov
mov
ret
loopne
insl
mov
int
jo
in
sbb
push
insb
aaa
jecxz
loopne
lock
cld
mov
mov
outsb
cmp
in
jg
cltd
mov
pop
jbe
xlat
xor
cmp
js
xor
arpl
mov
mov
mov
rorb
fs
ljmp
sub
imul
mov
xchg
xchg
jl
loope
inc
fcompl
dec
pop
mov
pusha
sbb
jbe
inc
je
rcrl
fxch
and
ss
inc
cmpsb
aaa
mov
lods
outsb
cli
incb
dec
sbb
dec
mov
mov
jnp
xchg
into
lret
push
inc
into
mov
inc
mov
or
pop
mov
adc
out
aad
jb
mov
pop
sbb
or
and
scas
add
je
mulb
sub
int
aaa
in
sbbl
adc
jb
addr16
add
in
cmp
pop
shr
lret
incl
lods
mov
sub
push
push
push
lahf
dec
call
cmpsl
and
loop
iret
adc
xchg
in
pop
sbb
mov
mov
cld
stos
aaa
dec
lods
test
pop
jnp
sahf
lock
mov
dec
xchg
loopne
ds
xor
ret
lock
in
cld
push
mov
fstps
xchg
add
jns
adc
cwtl
sub
jecxz
jo
sbb
xor
fidivrs
mov
push
stc
call
test
xchg
aas
mov
fdivr
popl
es
mov
jo
incb
dec
xor
adc
or
ds
mov
cmpsb
mov
adc
test
lods
sahf
cmpsb
mov
int
ss
jmp
das
mov
enter
lock
xchg
adc
jl
and
outsb
sbb
dec
sti
push
or
test
jno
push
inc
outsl
dec
gs
fimull
pop
int3
rcrl
inc
or
adcb
pop
imul
scas
nop
in
xor
sbb
dec
adc
mov
lods
pop
movsb
lret
jno
mov
shrb
jp
xchg
ret
pop
adc
int3
cltd
aad
jns
mov
cltd
enter
xchg
mov
adc
cmp
enter
sbb
call
lods
pop
or
xor
mov
cmp
clc
popf
xor
mov
mov
inc
cmpsb
mov
sub
xchg
shrb
pop
push
mov
pop
icebp
dec
inc
stos
test
daa
pop
ret
aas
xchg
dec
rorb
or
pop
pusha
xor
jg
mov
xor
push
sbb
lcall
aad
fidivrs
or
xlat
push
cmc
add
andb
jb
aas
aam
push
mov
cmp
fscale
testl
xor
in
pop
mov
cmp
je
push
cmp
imul
add
xchg
cwtl
and
jbe
dec
test
xor
lods
in
cs
je
xchg
lock
jge
dec
xor
sub
jae
mov
cmp
sub
add
mov
ss
fwait
cmpsl
adc
jp
inc
or
das
add
jl
mov
sub
cmpb
mov
shlb
cmpsl
pushf
mov
push
mov
fsubl
das
mov
add
out
loopne
int3
cmp
xchg
mov
mov
mov
cltd
inc
push
test
dec
push
test
fs
add
mov
sti
sub
mov
lods
into
dec
out
push
movsl
mov
hlt
into
popa
mov
popa
adc
cltd
pop
pop
cltd
jae
cmp
push
ffree
test
addb
lret
sti
je
push
dec
cmpsl
mov
imul
fyl2xp1
test
and
or
sbb
adc
clc
adc
cltd
and
into
pop
ds
and
fisttpl
adc
dec
sub
dec
add
mov
xor
insb
je
call
sti
sbb
push
leave
and
mov
out
dec
outsl
cmp
std
in
es
adc
rcr
jl
xchg
mov
adc
fs
dec
dec
pop
xchg
ja
aad
pusha
or
cmpsb
inc
es
sbb
inc
aad
xchg
cmp
les
and
pop
or
fs
loope
inc
iret
inc
mov
stos
int
dec
je
les
push
pop
dec
push
push
mov
std
lcall
sub
sbb
imul
cmp
outsb
and
aam
mov
fistl
shrl
testl
sahf
xchg
pop
fimull
stc
xor
enter
jae
shll
or
xor
mov
aam
xor
imul
jae
pop
out
shlb
xlat
jmp
adc
andl
pop
adc
push
subb
int3
xchg
pop
sahf
mov
push
jb
scas
push
sbb
fcomps
jnp
jmp
pushf
fldenv
jge
dec
jmp
nop
out
test
lock
pop
movsb
in
das
pop
mov
pop
mov
cmp
jne
test
adc
dec
xor
sbb
and
xchg
dec
cmpsl
mov
cli
mov
cmp
mov
sar
loop
pop
rorl
das
loop
jb
imul
xor
pop
push
addr16
mov
mov
xorl
sbb
adc
pusha
push
lcall
push
dec
pop
jno
out
push
adc
arpl
jle
aas
out
xchg
mov
sbb
sbb
fistps
lods
fs
ds
test
xor
xor
shlb
bound
out
mov
lahf
xor
jnp
or
test
movsl
ja
sbbb
mov
jg
mov
ss
or
jg
sub
out
loopne
das
repnz
lods
cmc
es
mov
je
xor
stos
fdivs
adc
dec
push
fmuls
push
je
cmp
add
mov
loopne
int3
push
in
jno
or
js
mov
sbbb
add
lods
in
pop
xchg
lods
scas
in
add
dec
in
loop
aam
vmread
sbb
push
bnd
xchg
cs
xchg
jne
xchg
cltd
lret
sbb
loope
dec
out
mov
outsb
out
jg
mov
push
or
outsl
or
mov
inc
lods
cmpsl
in
imul
adc
lods
adc
push
pop
daa
dec
xor
je
sub
adc
call
push
pop
outsb
xor
repz
sub
enter
push
ret
cld
mov
das
cmp
mov
cmp
inc
js
out
int3
sbb
test
adc
adc
les
mov
mov
loop
add
xlat
fstl
mov
pop
mov
jg
ss
sbb
cmpsb
leave
dec
gs
and
add
or
xor
jge
fs
jb
adc
cmp
and
aad
mov
mov
enter
cli
mov
sbb
mov
roll
adc
dec
subl
mov
jl
pop
xor
popa
dec
and
sahf
mov
enter
popa
adc
divb
pushf
pop
sahf
movsb
clc
imul
fsubr
gs
in
pop
imul
push
test
jge
shll
dec
ss
mov
mov
call
test
jns
imul
pop
dec
inc
push
scas
aad
test
pop
into
mov
cwtl
stc
faddl
cmp
ficoms
dec
pop
xchg
inc
mov
fs
lret
cld
cmp
out
cmp
push
pop
pusha
cmp
popa
repnz
fnsave
das
sbb
or
add
add
gs
cmp
rorb
adc
push
dec
in
dec
lods
pop
rcrb
pop
push
jno
je
aam
inc
lret
mov
dec
je
xor
xchg
outsl
iret
lcall
lahf
cmp
xchg
xor
pusha
call
cmpsb
mov
out
leave
dec
outsl
popa
es
clc
aam
dec
in
push
or
inc
outsl
add
or
dec
xchg
jns
xchg
mov
xor
in
adc
outsl
shll
pop
rcrl
mov
insl
mov
sub
and
jno
pop
adc
loope
sub
xor
cli
and
xor
or
or
mov
mov
cmp
popa
dec
aas
cmp
ret
and
lret
dec
aas
push
sub
mov
xor
cmp
sub
fsubl
arpl
lock
stos
add
jbe
xchg
cmp
adc
mov
jbe
xchg
lods
sbb
aaa
popf
mov
data16
mov
outsb
paddusb
fdecstp
dec
or
xchg
cmp
adc
adc
sahf
icebp
loopne
fistl
dec
inc
les
enter
sbbb
js
push
xchg
ljmp
movsl
xchg
fwait
hlt
ret
sar
dec
xor
cmp
stc
xchg
push
sub
insb
sbb
ficompl
mov
popf
fcoml
mov
push
mov
cld
inc
mov
dec
loopne
mov
les
sbbb
out
add
call
je
and
je
inc
pop
cmp
pop
movsl
iret
lock
iret
sub
lea
cmp
sti
hlt
dec
dec
lds
inc
push
fildl
int
aaa
mov
mov
jg
pop
add
fcomps
loop
loop
cmc
ret
call
dec
test
out
lahf
rcl
add
dec
rorb
daa
and
mov
xchg
mov
fbld
mov
push
adc
leave
xchg
push
mov
inc
out
push
filds
push
and
xor
push
inc
loopne
pop
jbe
cwtl
outsb
jg
mov
cmp
out
mov
xchg
mov
pop
fadd
xchg
ret
jl
lea
jnp
clc
sbb
nop
lret
inc
scas
pop
rol
push
pop
lcall
xlat
cli
js
or
and
add
jne
inc
jae
xchg
imul
inc
jmp
inc
addl
lods
adc
clc
in
fsubr
insb
sub
subb
and
xchg
cwtl
mov
adc
popf
cmp
shl
mov
add
cmp
inc
js
sahf
jns
adc
stc
cmp
es
adc
clc
cmp
add
mov
ret
in
pop
movsl
mov
sbb
cmp
mov
dec
sbb
dec
jo
fs
jle
ror
stc
arpl
cmp
addr16
push
iret
addr16
sahf
ds
icebp
lcall
loopne
data16
fwait
push
scas
rorb
add
mov
and
cmc
mov
das
add
sub
mov
xor
cltd
mov
add
sarl
fstpl
cmc
mov
aas
or
lea
xlat
leave
or
xor
stc
cmpsl
mov
xor
mov
sub
mov
cmp
icebp
pop
pop
cmp
das
xlat
fcomp
pop
fadds
lods
arpl
ret
or
and
push
cmp
leave
xchg
push
testb
out
movsb
sbb
or
jnp
adc
jae
xchg
roll
sub
adc
jno
insb
mov
xchg
inc
push
nop
bound
loope
mov
cmp
push
hlt
inc
mov
xchg
inc
cmc
jmp
mov
push
or
movsb
sub
pop
lock
cmp
jns
or
sub
cld
int3
lods
jmp
ljmp
pop
xor
cmp
imul
fisubrs
xorb
inc
mov
push
fbstp
movsb
jnp
popa
pop
jb
std
fisttpl
and
int3
push
cmc
fwait
sub
int3
jnp
mov
lods
xchg
xchg
inc
sbbl
xor
das
push
aam
and
ja
mov
mov
xor
mov
sub
lods
fs
push
ficomps
in
or
nop
ja
add
cmp
mov
pushf
jo
add
fstpl
int3
mov
out
cmpsl
cmp
pop
sub
lock
mov
push
mov
in
insl
dec
xor
pop
cwtl
pop
ds
popf
stos
mov
dec
xchg
and
mov
pop
jmp
cld
xchg
pop
popa
dec
aas
cmp
adc
movsb
std
insb
fsubs
inc
inc
push
fimull
lods
add
roll
cmpsl
dec
cmp
mov
sbb
jne
mov
mov
jecxz
enter
jecxz
jns
xchg
xor
pop
sbb
repnz
add
int3
adcl
vpgatherqd
pop
sub
push
and
and
dec
mov
out
jno
stc
cmpsb
xchg
test
jg
mov
inc
outsl
add
pushf
adc
nop
xchg
cld
in
pop
jbe
imul
or
out
adc
std
fldl2t
add
lods
lahf
sub
int3
add
sarl
inc
and
sub
test
test
xchg
pop
mov
adc
xchg
shll
sub
aas
inc
pop
push
js
adc
xchg
pop
push
mov
sub
xor
pop
jae
out
rclb
movsb
mov
lods
add
mov
enter
dec
sarb
pop
push
stos
gs
int3
lea
inc
insl
xchg
and
mov
hlt
mov
xchg
jle
inc
ja
movsl
into
cld
das
sbb
adc
mov
or
jp
add
outsl
sbb
xchg
scas
mov
movsb
dec
xchg
pop
add
das
popa
fistps
cli
jno
xlat
push
push
in
mov
int3
xchg
bound
cmc
pop
subb
in
roll
ret
push
or
sar
repz
repz
lock
mov
mov
jnp
scas
mov
pop
jl
push
loopne
mov
mov
mov
cltd
outsl
jecxz
fnstsw
inc
mov
cmp
icebp
in
inc
mov
fsubl
mov
xchg
jmp
or
or
sub
xchg
dec
pop
subb
or
push
dec
pop
stc
nop
cmc
dec
pop
xchg
dec
icebp
fsubp
sbb
cmc
loop
inc
mov
and
lret
add
int3
mov
mov
test
imul
cmp
push
bound
subl
jle
xchg
in
loop
insb
inc
push
insb
psubw
scas
mov
sub
pop
inc
add
jg
mov
outsl
arpl
inc
and
andb
mov
add
push
imul
push
movsl
or
icebp
dec
sahf
mov
add
es
sbb
mov
sub
jns
jae
in
cmc
icebp
sbb
mov
stc
jle
push
repnz
test
sbb
in
mov
aad
and
dec
fs
call
xchg
pop
jno
cmp
dec
adc
jne
stc
sbb
mov
sub
mov
rorb
inc
inc
mov
aad
aas
and
and
sar
cmp
mov
pop
inc
rorl
negl
mov
or
out
aas
mov
pop
sub
mov
roll
or
shlb
ljmp
andl
jl
ja
mov
sub
inc
out
mov
nop
cmp
xchg
in
and
mov
mov
data16
sub
jnp
sub
add
sub
cmp
icebp
push
and
loopne
ret
test
xchg
fsub
pushf
movsl
add
cmp
xchg
sub
lahf
mov
lret
mov
add
jle
imul
in
fcmovbe
cmpsl
mull
mov
jle
and
mov
cmp
iret
lods
rcrl
rcrl
inc
jl
adc
insl
mov
and
insl
mov
lea
jecxz
jae
pusha
addl
leave
adc
in
adc
cmpsb
movsb
inc
ret
fsubrl
notb
inc
cmp
popf
jne
daa
mov
mov
push
pusha
and
mov
movsl
jle
or
outsl
out
cmc
mov
call
sarb
ret
fcoml
xchg
scas
sbbl
icebp
fcompl
pop
int
sub
cli
cli
adc
jo
and
iret
push
mov
mov
arpl
scas
mov
xlat
std
bound
pop
cmp
mov
add
sub
ljmp
sbb
xlat
stos
push
xor
jg
fdivs
adc
jnp
dec
in
jl
loopne
pop
js
cltd
shrl
inc
add
mov
inc
aas
push
or
int
cmp
or
hlt
mov
fdivl
outsl
loop
data16
push
xchg
xor
imul
mov
pop
lret
outsb
jbe
fcmovnb
push
jb
sub
push
push
gs
mov
adc
push
pushf
dec
push
jle
leave
mov
sub
icebp
mov
data16
push
rcrb
out
and
scas
aam
jnp
out
xchg
enter
cmp
mov
rclb
fisttpl
xor
fnsave
std
ds
jge
fisttpl
insl
jmp
pop
pop
adc
jecxz
mov
lret
dec
pop
lahf
idiv
cmp
mov
loopne
mov
push
insb
movsl
cmpsl
mov
mov
pop
imul
test
xchg
add
shl
out
xchg
xor
frstor
outsb
leave
mov
icebp
movsb
cmp
push
lahf
push
push
enter
inc
into
xlat
int
mov
int3
inc
cmpsl
fs
ljmp
sbb
jne
pop
pop
xorb
mov
scas
sub
and
stc
cmp
mov
pop
cltd
lret
pop
imul
or
xorl
jmp
mov
lods
push
lret
sub
push
mov
mov
pushf
xchg
xlat
add
in
or
xlat
mov
je
xchg
lock
outsb
sahf
mov
jle
adc
mov
and
lods
fcmovbe
push
push
rcrl
shlb
int
std
pop
int3
adc
movsl
jg
roll
outsb
xor
lcall
imulb
adcl
outsb
int
int3
je
shll
cs
push
jnp
jecxz
imul
cmc
addl
hlt
add
mov
frstor
xchg
ljmp
cmp
loope
jle
pushf
pushw
jnp
adc
pop
cmp
mov
add
mov
pop
iret
test
and
cld
daa
sub
orb
pop
sar
gs
lds
xchg
push
sbb
fistpl
pusha
test
jmp
mov
add
mov
ja
mov
faddl
jbe
ds
xor
js
inc
lret
pop
pop
data16
loop
mov
mov
jecxz
sbb
je
mov
adc
sbb
pop
aam
pop
mov
xlat
rcl
pop
push
outsl
divl
in
testl
mov
inc
add
jb
jo
push
add
xchg
fnstcw
fdivrs
bswap
stc
xor
cmp
push
mov
cmp
xor
mov
loope
insl
stos
sbb
repz
mov
add
jo
pusha
scas
dec
xchg
pop
gs
lret
pushl
pushf
push
jp
popf
cmp
rorb
dec
addl
xchg
clc
mov
add
pop
imul
add
pusha
sub
fldenv
loopne
or
xlat
addr16
lods
imul
ljmp
jb
inc
movsb
cmp
outsb
inc
adc
dec
sbb
movsl
ret
pusha
js
xor
add
mov
movsl
popf
pop
pop
xchg
aad
enter
mov
xchg
jge
mov
lret
bound
stc
out
jb
popf
lods
and
bound
mov
xor
jae
mov
lods
cld
dec
clc
fsubrs
sub
popa
push
dec
scas
loopne
cli
sub
sbb
sbb
andl
mov
inc
imul
loope
xchg
jnp
pop
cltd
std
in
insb
add
dec
mov
adc
or
or
inc
cld
add
adc
nop
mov
jl
sbb
cmp
jge
rcl
dec
inc
push
add
out
gs
ds
pusha
jecxz
xor
hlt
mov
cmp
data16
fcomp
mov
stos
sbb
cs
pop
pop
les
sahf
cli
xor
mov
mov
pop
inc
mov
and
test
fstl
mov
out
xor
inc
cld
mov
negl
push
add
push
cli
lcall
mov
jl
addr16
cmp
and
dec
push
pop
test
mov
xchg
mov
test
mov
xor
mov
xor
xor
mov
inc
dec
mov
addr16
push
adc
or
mov
js
dec
and
mov
or
or
fimuls
xchg
or
int3
xchg
outsl
lahf
add
pop
lock
pushf
hlt
inc
xorl
ret
mov
pushf
cld
out
sbb
or
imul
xchg
test
das
lret
xchg
and
insb
cmp
mov
popa
sahf
imul
add
dec
cmp
dec
ja
jp
test
and
inc
cmp
adc
xchg
fisubrs
mov
mov
int3
mov
jmp
mov
jbe
pop
xchg
jb
sub
mov
push
mov
mov
addr16
jmp
or
ja
xor
lods
in
dec
jb
jl
push
sbb
popf
xchg
xchg
lretw
and
loop
or
sub
sbb
inc
pop
pop
js
repz
aaa
mov
mov
imul
lods
fmulp
cmc
popa
cmpsl
rorb
bound
les
stos
add
xchg
adc
jns
outsb
cmp
inc
fldenv
std
into
lret
push
cmp
test
sbb
sbb
pop
popa
nop
fdivl
cmp
clc
dec
std
jns
jle
imulb
inc
je
das
lock
cs
popf
nop
out
inc
pop
aaa
push
imul
xor
popf
push
push
ficompl
mov
mov
cltd
xor
mov
fsubr
cmpsl
loopne
mov
inc
into
cmp
cwtl
jns
mov
scas
lcall
and
jl
ret
mov
xlat
lods
mov
fiaddl
es
xchg
cmpsb
test
cwtl
clc
insb
mov
enter
hlt
jge
xor
sbb
cmpsb
push
stos
jl
dec
dec
inc
gs
xchg
inc
daa
pop
or
and
jg
push
stos
mov
shrl
sub
cmpsb
pop
mov
inc
aad
in
popa
ret
addr16
scas
xor
shll
insl
adcb
imul
adc
ds
and
jns
clc
dec
mov
jae
and
out
cmpl
inc
push
loopne
cmp
mov
mov
sahf
jbe
xchg
ret
and
pop
ss
pop
nop
cmpsl
cld
mov
sub
test
xor
xor
sbb
xor
pop
sub
mov
cmpsb
sub
int
test
pop
fwait
mov
lods
jns
call
int3
sbb
push
movsl
push
lret
jno
hlt
rorb
aam
xor
jmp
in
repnz
inc
xor
aaa
insl
xor
jno
add
pop
scas
pop
pop
test
fcmove
lret
out
imul
xchg
stos
dec
das
push
enter
jnp
stos
ret
addb
dec
mov
pop
push
pop
imul
in
add
fisubrl
ljmp
jb
in
or
pop
xchg
in
sbb
outsl
outsb
inc
mov
movsl
sbbb
es
es
stc
push
adc
inc
fistl
cmpsb
dec
cmp
sbb
jb
sarb
mov
out
stos
les
inc
loop
stos
xor
sbb
mov
aaa
or
cmpsl
aaa
add
mov
mov
cld
es
inc
js
xor
push
jg
loopne
cs
jl
shlb
jecxz
pop
xor
jo
pop
mov
rorb
sub
out
loope
and
decl
push
stc
pop
sahf
fiaddl
int
add
stc
sbb
add
inc
leave
mov
das
aas
cwtl
lahf
je
imul
sub
lods
cltd
push
js
fdivr
movsb
cmpsl
mov
mov
scas
dec
jns
ja
pop
mov
les
push
sub
and
cmp
pop
cmp
mov
and
mov
flds
enter
inc
push
mov
out
das
cmp
shlb
cs
mov
sbb
jp
in
inc
notl
fiaddl
mov
push
sbbl
jnp
dec
adc
loope
mov
cmc
out
inc
sbb
pop
fdivr
fmuls
jo
pop
fidivl
inc
lret
inc
test
adc
xor
jg
push
addr16
cmp
jg
sub
incb
inc
or
push
inc
mov
mov
push
push
xorb
and
outsl
mov
xchg
cmp
mov
dec
mov
mov
gs
mov
loope
push
in
inc
subl
mov
and
push
and
xor
sti
adc
lret
stos
int
rcll
mov
ss
add
jl
adc
es
stos
ret
push
std
mov
movsl
xchg
mov
push
out
jns
jae
pop
mull
sub
jecxz
ds
lret
std
push
dec
ljmp
or
dec
add
xchg
and
ljmp
adc
cmc
leave
cmpb
dec
std
lds
adc
ret
mov
xchg
or
clc
std
repnz
jb
int3
xchg
jmp
push
stos
sub
xor
sti
jne
mov
pop
push
lea
push
fdivs
mov
addr16
jae
pusha
jmp
mov
lods
mov
inc
mov
push
mov
inc
mov
mov
ljmp
imul
cmc
stos
mov
out
jo
sbbb
test
sub
mov
cmp
aaa
popf
rol
pop
repz
push
sbb
xor
push
inc
hlt
hlt
xor
and
add
lahf
addr16
es
and
adc
and
out
adc
cmp
mov
aam
pop
add
mov
push
lea
stos
push
xchg
test
mov
or
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
loop
xor
sbb
jp
dec
xchg
out
mov
jle
add
lods
sahf
mov
cmp
push
or
insb
pop
inc
cmp
lods
icebp
nop
or
daa
js
sbb
mov
aam
fisubrs
dec
aas
fldenv
push
add
and
ljmp
push
ljmp
pop
adc
je
push
leave
mov
repz
in
sub
dec
cmpsl
int3
cmp
pop
inc
inc
std
ja
inc
mov
mov
shl
clc
or
inc
das
push
imul
jo
and
xchg
lret
mov
pushf
sti
jp
dec
jo
sub
lahf
fsub
jp
enter
jmp
neg
pop
int3
sub
loope
out
jns
push
cmp
enter
inc
scas
xchg
adc
addr16
pushf
subl
les
mov
sahf
rorb
jl
push
imul
mov
mov
repnz
ja
mov
sbbb
or
hlt
inc
std
jae
testl
inc
and
loopne
dec
xchg
add
daa
jbe
push
gs
add
fsubrs
mov
cltd
pusha
mov
ret
mov
dec
push
popf
xchg
jno
pop
mov
push
insb
add
imul
push
addr16
jnp
popa
sub
lcall
negl
cs
divb
testb
dec
movsl
mov
test
xchg
dec
gs
or
mov
out
sub
lcall
out
iret
pushf
cs
push
icebp
jmp
les
mov
jae
pop
push
loop
fldl
sub
fistl
cmp
bound
sub
add
sbb
pop
lods
sub
mov
pop
push
stos
enter
jnp
addr16
add
mov
shrb
cmpsl
sub
cmc
mov
movsl
jg
xchg
inc
inc
sub
xor
mov
jge
or
add
insl
subb
out
xchg
gs
repz
inc
xor
or
dec
popa
cmp
mov
ss
xchg
ss
mov
int
aas
xor
int
jo
inc
or
push
imul
pop
add
mov
push
sub
ja
xchg
push
mull
in
ljmp
arpl
mov
rcrb
daa
test
lahf
lock
jne
xchg
pop
push
jge
hlt
sub
cmp
xor
xorb
pop
dec
imul
fisttps
cmp
push
push
add
lret
clc
std
popa
dec
pusha
fadd
arpl
jmp
mov
stc
or
ja
sti
adc
les
jmp
out
sarb
in
sub
lahf
imul
xchg
xchg
movsl
sbbb
xor
jno
xchg
add
mov
mov
pop
out
or
mov
fildl
mov
lcall
hlt
jge
orl
test
jae
hlt
das
lahf
repnz
pop
icebp
mov
movsb
js
stos
in
sbb
xor
ficomps
and
repnz
cld
mov
push
adc
cmpsb
sbb
push
outsb
shl
int
sbb
adc
jmp
aam
movb
mov
lock
sub
dec
pushf
jg
enter
mov
jmp
sarb
push
fdivrl
lcall
sub
adc
xchg
mov
add
aad
sub
pushf
lods
push
mov
sub
ret
xchg
mov
bound
xor
popa
icebp
mov
mov
movsb
dec
push
xchg
insb
cmp
mov
and
lods
mov
push
ljmp
shll
aaa
std
sti
adc
mov
xchg
repz
dec
loope
std
xchg
pop
jecxz
dec
dec
loopne
cmp
xlat
sbb
icebp
add
movsl
outsl
pop
scas
out
jge
and
dec
js
bound
mov
pop
push
xchg
push
movl
aad
cmp
fimuls
push
sub
fimull
dec
push
pop
add
inc
fs
fcoms
aam
jg
and
jl
rcr
popf
lahf
popf
ret
mov
pushf
call
xchg
std
repnz
xor
mov
push
movsb
jne
inc
jnp
xchg
loop
test
daa
rorl
mov
push
adc
xchg
push
fwait
cmp
mov
mov
sub
mov
and
mov
xchg
mov
xchg
sbb
arpl
push
out
jns
xor
and
cmp
mov
pop
into
iret
ret
push
loopne
xchg
fs
adc
xor
mov
sub
dec
cmp
fildl
pop
stc
cmp
insb
addr16
ds
jp
mov
jp
int3
js
lock
int3
ret
mov
aas
mov
cs
lret
add
popf
aas
or
je
in
jg
fs
jno
mov
dec
pop
inc
outsb
mov
rcrl
sub
fwait
mov
mov
fidivl
mov
mov
popf
loop
sbb
rorb
inc
fwait
xor
popf
xchg
sub
fucompp
leave
lds
mov
orl
leave
fbstp
dec
inc
bnd
clc
scas
sbbb
mov
add
bound
hlt
in
movsb
push
add
mov
scas
adc
int
je
mov
mov
shrl
es
sbb
dec
sbbb
jecxz
or
andps
pushf
add
and
cmp
push
or
bswap
in
xchg
jbe
fdivrs
sbb
jb
fdivl
mov
leave
insl
jae
outsb
jp
fdivs
inc
adc
pop
ret
pusha
push
mov
push
lea
fcomps
das
and
sub
add
clc
into
rorb
sbb
leave
mov
sub
mov
cs
pop
ret
push
nop
negl
imul
test
data16
jecxz
push
scas
ljmp
hlt
fwait
insl
icebp
arpl
ljmp
outsb
mov
jne
sti
cmp
xor
jbe
shl
out
xor
hlt
adc
mov
fdivrs
push
lods
jae
fsubp
add
lea
xor
mov
mov
pusha
call
xor
push
daa
cmp
cmp
mov
cmpl
fmull
mov
ficompl
xchg
add
pop
cmpsl
mov
cmpsl
mov
pop
ss
shrb
pop
clc
ret
test
inc
repnz
in
fiaddl
dec
push
loop
xor
or
dec
aas
out
pop
les
sahf
adc
sub
inc
push
test
scas
test
lea
push
xlat
jmp
push
shlb
rolb
jge
mov
mov
mov
int3
shrb
outsb
aad
lahf
fists
outsb
add
cmp
push
insl
sbb
scas
adc
incb
popf
fidivrl
fstl
bound
mov
imull
stos
fcomps
mov
and
gs
push
pop
sahf
es
push
fiaddl
cmp
arpl
sub
mov
and
sbb
jl
cmpsl
sub
push
pop
mov
jo
push
sbb
mov
push
pushf
imul
pop
pushf
lcall
and
xor
popf
out
add
lret
mov
enter
or
lret
push
or
int3
aad
jno
dec
inc
jne
lods
or
fnstenv
rclb
lahf
fildll
mov
mov
out
mov
mov
xchg
outsl
into
xor
std
or
jmp
pop
mov
xor
push
push
mov
hlt
or
mov
xor
dec
jmp
inc
int3
inc
xchg
int3
dec
sbb
inc
push
in
sub
mov
pop
sarb
call
push
mov
mov
int3
mov
sub
stos
pop
pusha
mov
xchg
mov
pop
in
mov
mov
pusha
sub
nop
insl
ja
mov
sub
mov
and
pushf
pop
js
test
lahf
loop
sub
dec
pop
popa
push
popa
pop
stos
out
or
call
std
push
insl
cmp
and
jmp
jl
daa
sub
push
sub
aaa
dec
dec
movzbl
ljmp
test
ss
mov
or
push
or
outsb
stos
sub
jnp
stos
popf
and
inc
jle
jle
jl
stc
xor
gs
sbb
dec
mov
scas
cmp
cs
out
sub
mov
or
int3
test
in
inc
sbb
cmpsl
cmp
lods
inc
xor
sahf
xor
mov
add
mov
pusha
inc
mov
shll
inc
cmpsb
push
or
inc
icebp
push
out
pop
loopew
imulb
jmp
jmp
in
int
addr16
xor
fucomp
adc
mov
sbb
dec
xor
popa
repnz
inc
jae
insb
dec
sub
imul
cld
loop
not
int
and
jmp
imul
sarb
fsubrp
fdivrs
mov
push
pop
insl
mov
stos
mov
xor
in
mov
in
and
lret
scas
or
dec
add
add
add
add
test
xchg
ficomps
push
and
cmpl
ret
sub
cwtl
xor
js
in
aam
notl
cmp
call
push
xor
mov
lcall
inc
cmp
xchg
add
inc
outsl
int3
fs
and
xor
sbb
xchg
mov
cmp
xor
fisubs
mov
add
jnp
sbb
imul
dec
repnz
xchg
popa
cmpsb
cmp
and
pop
int3
ja
mov
getsec
push
jae
mov
cld
scas
mov
pop
mov
mov
sbb
addl
dec
cmp
jg
pop
push
sbb
cmp
or
aam
cltd
push
mov
dec
dec
stc
xchg
test
cmp
arpl
add
iret
jbe
mov
mov
jmp
in
mov
adc
jge
pop
sbb
clc
adcb
inc
out
cld
stos
jbe
fs
jge
int
cmp
test
test
repz
push
xlat
jns
pop
xchg
jne
dec
rcl
in
xchg
sub
inc
jbe
xchg
mov
pop
popl
call
outsl
add
xor
mov
scas
mov
pop
add
mov
adc
mov
outsb
jmp
je
sub
mov
pop
shll
sub
aad
sub
jno
je
les
mov
out
jno
inc
ret
mov
daa
nop
mov
lds
lret
xchg
cmp
xchg
sahf
mov
xchg
loopne
pop
dec
je
xor
mov
adc
inc
lods
mov
imul
cmp
sub
std
lret
bound
adc
pushf
jle
fimuls
and
cmc
mov
pop
push
jb
push
push
mov
rol
shlb
pop
push
shl
scas
incl
loop
aad
lds
in
sub
xor
das
daa
push
sbbb
adc
sahf
push
push
jmp
and
pop
repnz
pop
jae
and
cs
fadds
jnp
shrl
sbb
xor
cmp
mov
mov
inc
in
adc
mov
dec
inc
fst
test
xor
push
mov
out
xorl
sub
pop
jmp
movsb
jo
call
je
out
and
push
in
xor
test
sbb
cmpsl
and
adc
and
push
cmpsl
pop
mov
and
xchg
rorb
push
add
adc
ret
in
jge
in
jnp
mov
sbb
mov
ds
hlt
pop
insb
mov
pop
imul
or
inc
pop
sub
mov
sar
xor
lcall
ret
icebp
sarl
xor
xchg
fimull
sbb
push
addl
jnp
ret
call
mov
jno
mov
outsb
jbe
pop
inc
xor
out
test
jmp
out
push
icebp
and
into
sub
sahf
jne
popf
fcmove
out
cmp
lods
inc
mov
je
and
in
lcall
hlt
outsb
ss
inc
pop
sbb
call
xlat
xorb
imul
arpl
sbb
cmc
or
xor
or
in
lods
inc
ja
insl
test
sbb
xchg
jl
adc
ret
mov
sub
out
xchg
or
in
xchg
xor
cli
jmp
lret
and
fcoml
xlat
imul
rol
insl
push
leave
jg
stc
sbb
js
lds
stos
xorl
ret
outsb
aam
int
sahf
roll
dec
loop
xchg
hlt
dec
mov
inc
adc
imul
xchg
pop
dec
testl
das
mov
rclb
mov
push
cmp
pop
xchg
push
daa
mov
nop
dec
aaa
loop
jmp
xor
std
push
push
jbe
out
jle
jp
mov
mov
xchg
sub
push
lds
out
inc
in
js
dec
imul
popf
push
cwtl
mov
stos
in
data16
out
movsb
cmc
mov
in
sbb
in
lock
mov
out
sub
cmp
pop
xor
mov
jmp
xlat
pop
or
inc
mov
das
push
jno
test
lods
mov
in
jae
movsb
sbb
xchg
adc
mov
push
and
loop
dec
sbb
fldt
cwtl
mov
push
jbe
mov
sub
mov
mov
xor
xor
cmp
cs
dec
fsubrs
push
xchg
or
std
jmp
mov
sar
call
jg
and
xchg
push
dec
mov
cmc
jp
xor
mov
lds
test
das
push
pop
stc
dec
jae
or
stc
es
je
insb
push
hlt
outsb
ror
inc
enter
roll
mov
mov
shlb
enter
lcall
or
sub
pop
stos
jnp
je
sub
cwtl
xor
pop
adc
imul
jo
subl
pop
dec
dec
push
out
int3
clc
ffree
mov
mov
push
idiv
negb
shl
xorb
clc
loope
jge
clc
js
dec
push
loope
add
mov
enter
scas
fidivs
mov
and
stos
and
sub
cmp
push
mov
mov
outsb
pusha
rolb
cli
push
int
xchg
sarl
push
cli
push
repz
in
mov
jae
lret
mov
or
mov
sarl
lahf
inc
inc
int3
ss
mov
pop
push
push
adc
sub
lods
or
movsl
sub
push
add
inc
add
push
aad
popf
or
fwait
in
pop
xchg
dec
mov
mov
sbbb
imul
orl
imul
jp
dec
jg
pop
jle
dec
and
movsl
std
cmp
cwtl
aad
test
shrl
fsubl
push
imul
inc
loopne
lods
push
cmp
fidivrl
aas
adc
imul
movsb
das
negb
adc
jecxz
push
inc
fdivs
repz
aaa
sbb
lret
push
xor
mov
daa
mov
stos
push
inc
push
fmuls
pop
rorl
mov
icebp
add
sbb
add
sbb
lahf
out
js
adc
mov
in
mov
mov
je
jne
cwtl
and
lret
add
mov
lods
and
lret
sub
pop
sbb
test
mov
mov
add
mov
std
mov
sub
cld
and
adcb
push
inc
arpl
push
mov
and
adc
mov
cltd
mov
sbb
fidivrs
aaa
ss
mov
adc
test
push
xlat
jns
cmp
cmpsb
jge
pushf
cmpsb
dec
jmp
and
inc
xchg
cmp
jno
insl
pop
scas
repnz
pop
ljmp
jge
sbb
jbe
pop
mov
mov
xor
outsb
pop
scas
xchg
stc
fcomip
push
popa
sarl
xor
mov
add
in
adc
das
push
dec
xchg
pushf
mov
repnz
pop
push
iret
pusha
in
pop
mov
jl
in
das
cmp
bound
mov
repz
and
add
fwait
cli
mov
pop
sbb
adc
dec
cmc
inc
sub
int3
dec
rorb
pop
cmp
xor
lods
add
cmp
add
lds
les
aad
push
dec
lahf
inc
js
outsl
lret
fs
dec
cmp
std
fadd
xchg
adc
enter
pusha
mov
pop
or
mov
pmaxsw
pop
mov
xchg
push
enter
xchg
inc
and
je
pop
inc
mov
inc
inc
test
pop
andb
xchg
jge
jno
leave
sahf
add
inc
out
cs
in
push
adc
inc
sbb
arpl
cwtl
adc
xchg
jb
push
stos
enter
repnz
xchg
leave
push
mov
dec
flds
in
cmp
add
fcom
sarb
pop
loopne
and
push
aas
pop
cmp
xchg
dec
adc
cmc
enter
js
pop
sub
jge
pop
and
stc
repz
ljmp
add
push
mov
insb
and
fs
cmpsl
and
addb
test
gs
shrl
lds
ljmp
cwtl
loope
cmp
mov
mov
sahf
add
call
mov
xchg
jp
roll
push
mov
mov
xchg
mov
pop
push
in
cmpsl
push
arpl
mov
shll
outsb
or
bound
jbe
notl
mov
daa
xchg
fs
push
dec
jnp
xchg
adc
sbb
mov
add
loop
mov
fcom
mov
fimull
cmp
mov
stos
imul
into
mov
xchg
xchg
mov
jmp
int3
lea
lea
pop
dec
in
add
xor
pop
push
test
stos
es
cmpsb
cltd
lahf
stos
push
mov
fsubl
xchg
aaa
in
lods
dec
adc
xlat
aad
mov
cwtl
sub
fstps
fnstcw
xchg
mov
in
pop
mov
push
sbbl
movsb
or
int3
sbb
jle
fs
popl
add
cltd
sbb
into
lods
and
mov
repnz
into
sub
movl
decb
or
int
les
sbb
adc
sar
js
int
mov
sbb
jnp
adc
pop
pop
push
add
call
jnp,pt
push
xlat
cs
mov
sub
cmp
adc
lock
sub
aaa
mov
cmp
notb
mov
mov
movsl
jae
fbstp
inc
push
scas
jne
loop
adc
pop
xchg
mov
xchg
jmp
or
popa
jp
insl
test
insb
stos
imul
lods
cmp
push
xchg
push
cltd
push
repz
int
sbbl
loopne
scas
add
mov
adc
adc
enter
test
cmp
lock
mov
ljmp
adc
jge
stos
push
xchg
adc
dec
push
and
int
cltd
call
mov
lcall
mov
mov
mov
mov
mov
ret
push
jne
imul
leave
out
dec
mov
outsl
sbbl
mov
dec
cmp
dec
negb
mov
and
ror
and
gs
jge
pop
test
bound
cmpsl
shlb
pusha
sub
mov
negb
xchg
add
mov
js
mov
jmp
dec
pop
xor
cwtl
stc
mov
mov
dec
shll
dec
pop
inc
int
mov
sbb
aad
insb
mov
mov
mov
aam
or
lods
jne
xor
loope
outsl
xchg
movsl
les
insl
push
push
cmp
lock
adc
sub
or
data16
mov
outsb
sbb
hlt
outsl
in
or
stos
js
cmpb
dec
test
das
rcrb
push
dec
test
dec
aas
dec
add
shl
arpl
and
out
lcall
clc
and
mov
and
inc
lcall
pop
lcall
or
cld
jns
lods
dec
push
arpl
fistpl
push
sbb
inc
mov
push
cwtl
fidivl
in
push
inc
jg
mov
mov
les
mov
mov
xchg
les
outsb
xchg
fisttps
pop
fldenv
call
aad
push
adc
aad
mov
and
mov
movsb
push
ljmp
loop
xor
das
xchg
shlb
mov
sub
imull
push
mov
cmpsb
bound
jecxz
outsl
mov
fbld
mov
and
and
or
cmpsb
xor
fwait
and
in
and
stos
movhlps
dec
xchg
jne
out
adc
ljmp
std
and
xor
es
mov
jmp
adcl
push
mov
cmc
aas
cmp
fdivrl
xor
fsts
and
aam
jb
adc
lods
addl
mov
jmp
faddl
jg
repz
xchg
cld
jae
inc
xchg
scas
push
outsl
add
xchg
xor
cmpsb
sbb
test
cmp
xchg
and
xchg
cmp
mov
push
ss
jne
ds
jp
jg
pop
push
xor
mov
in
clc
aad
divl
pop
sub
enter
dec
fidivrl
sub
movsl
outsb
aam
sub
test
icebp
mov
test
xchg
add
addr16
mov
and
inc
std
cmpsl
cmp
push
inc
pop
in
jno
inc
fwait
xor
fiaddl
cs
adc
cmp
pop
sub
loope
dec
es
lret
inc
aas
in
pusha
loopne
imul
xlat
lea
idivl
rorb
inc
dec
adc
push
imul
in
xlat
scas
sub
pop
imul
rcl
xchg
arpl
cmp
pusha
cld
inc
cmp
movlps
pop
call
popa
icebp
popa
and
mov
jg
or
sbb
movl
rclb
or
xor
mov
iret
jecxz
cwtl
adc
dec
xchg
call
lret
sub
push
lea
adc
scas
icebp
jge
and
jne
popf
jmp
loope
mov
ja
in
dec
pop
leave
dec
ja
idivb
or
sub
and
cld
imul
enter
push
test
pop
lods
loope
cwtl
pop
jmp
cmpsb
jae
mov
push
incb
pop
jo
test
pop
ja
aas
into
repz
popa
fwait
dec
xchg
fwait
rorl
scas
int3
push
fstp
dec
std
add
pop
stc
lods
mov
pop
js
and
ljmp
or
dec
push
sbb
je
or
and
pop
lret
outsb
out
jecxz
shlb
shlw
addr16
jge
push
out
pop
pop
pop
fld
cld
loope
push
add
addl
data16
ret
aam
jnp
into
scas
mov
shrl
repnz
pushf
data16
out
lds
fidivrs
push
daa
pop
pusha
mov
xchg
outsb
shll
nop
inc
stc
data16
gs
out
inc
fstpt
and
push
mov
cmpsl
insb
jmp
and
bound
stc
hlt
sbb
pop
ret
sbb
mov
neg
mov
and
jnp
push
fcoms
pop
rcl
jnp
and
or
inc
cs
enter
ret
cmp
xchg
xor
push
inc
push
int
push
mov
fdivl
ret
jmp
or
pop
movsl
mov
jp
lret
adc
iret
mov
and
pop
je
mov
popa
out
insb
jecxz
mov
gs
xor
add
mov
fldcw
shrb
dec
mov
add
cmp
and
xor
jo
inc
xlat
scas
pop
mov
rol
pop
in
or
or
push
inc
pop
nop
adc
sbb
mov
xchg
jo
push
mov
popa
and
out
mov
mov
jne
jb
add
lea
dec
pushf
mov
clc
mov
daa
ljmp
mov
iret
push
add
and
add
pushf
shlb
adc
mov
enter
mov
mov
daa
vpmulhuw
dec
xor
das
or
dec
stos
je
mov
outsl
push
cmp
xchg
and
scas
icebp
xor
lret
jae
push
inc
mov
cmc
mov
out
mov
or
sub
inc
cmp
sbbb
hlt
in
mov
addr16
data16
inc
jno
or
jne
pop
cmp
mov
out
cmp
psubsw
pop
fimull
and
rol
int
test
sub
insb
mov
int3
arpl
sarl
js
sti
fcoms
lahf
sub
xchg
mov
fisubs
push
add
xlat
jmp
fadd
dec
jmp
jnp
imul
pop
lea
imul
jb
jnp
sbb
sub
jecxz
cmpl
test
shl
dec
push
sub
je
xchg
sub
push
aas
test
repnz
adc
in
fwait
add
lret
inc
xor
add
aaa
push
sub
cmp
pop
ds
mov
pop
iret
shrl
fimull
push
pop
pop
cmp
mov
dec
dec
mov
add
dec
clc
pushf
adc
dec
out
das
lds
xor
and
and
push
cs
and
add
and
mov
fstpt
fcomp
mov
out
xchg
loop
mov
xchg
and
repz
push
and
mov
es
stos
add
in
in
cmp
out
int3
xchg
les
in
addr16
scas
inc
jg
sub
mov
xor
frstor
and
push
popf
mov
sarb
mov
shrl
jne
int
adc
mov
jnp
pop
lds
pop
out
cmp
sub
push
ret
or
out
ljmp
cwtl
test
shr
add
mov
cs
inc
push
lea
push
out
aam
packssdw
cmpsl
xchg
adc
ret
or
rclb
jle
bound
pop
jno
hlt
loopne
test
ret
aam
mov
cmp
mov
cmp
test
push
iret
lret
cwtl
out
push
scas
out
jae
pop
xor
xchg
add
cmp
div
mov
fists
or
fdivp
lret
sub
icebp
pop
xor
aad
lea
loopne
sbb
jmp
addb
xchg
clc
xchg
mov
mov
push
jg
xchg
jle
cmpsl
inc
loopne
fdivl
mov
pop
pop
insb
mov
pop
cmp
dec
imul
or
pop
cwtl
sbb
ret
pop
mov
in
jae
arpl
frstor
in
fdivrl
mov
mov
jo
xorb
ds
adc
dec
inc
push
pusha
mov
sbb
fidivl
sbb
pop
enter
sbb
pcmpgtb
movsl
movsb
adc
insb
jmp
cmpsl
mov
mov
cmpsb
cli
mov
mov
inc
orb
test
xor
lods
xorb
enter
lret
dec
popa
sarl
push
scas
fxch
icebp
mov
incl
scas
not
mov
adc
out
xor
testb
pop
pop
inc
and
rep
adc
iret
dec
jbe
push
pop
add
xor
ljmp
in
inc
sub
mov
ret
aad
int3
push
jge
inc
loop
adc
xchg
in
inc
dec
jge
mov
push
nop
shrl
jp
jl
push
dec
push
inc
mov
xor
pushf
stos
outsl
sar
cmp
push
jnp
dec
push
push
xchg
cmpsb
andb
ror
mov
cwtd
jne
scas
or
mov
out
aad
or
sbb
enter
push
jno
xchg
jl
add
sbb
enter
dec
in
js
inc
mull
loopne
or
or
lcall
dec
or
lock
imul
stc
inc
imul
ljmp
mov
xchg
mov
lods
mov
and
sub
pop
adc
out
mov
icebp
sbb
dec
xor
arpl
clc
out
pop
fidivrl
js
push
shrb
mov
das
int
mov
sub
push
jo
pop
enter
xor
vunpcklps
push
push
int
inc
nop
enter
push
lcall
ss
out
xor
push
sub
jp
push
jno
sbb
lods
fcoms
mov
dec
push
adc
add
aam
jno
fimull
dec
xor
mov
xor
aas
out
dec
cmp
outsb
xor
dec
test
nop
push
adc
into
push
decl
cmp
lea
sub
ret
js
test
push
jge
jbe
in
outsb
sub
leave
xchg
pusha
ret
sbb
fcoml
add
push
ds
out
jl
jbe
imul
jmp
adc
jmp
pop
pop
test
mov
into
rol
stos
in
in
jle
je
adc
out
xchg
stc
out
pop
jcxz
outsl
fldt
rclb
jnp
sbb
sahf
stos
inc
rcl
sti
mov
js
mov
ret
outsl
mov
xchg
and
je
ret
mov
dec
jl
xchg
sub
aad
fsubr
adc
pop
js
lock
shrl
test
pop
adc
in
sbb
jns
jg
and
stc
fucomp
xchg
cli
jp
inc
lea
je
mov
shrl
xlat
pop
inc
adc
ja
push
adc
out
sub
in
lea
adc
dec
sub
jne
fiaddl
xchg
push
in
adc
dec
into
and
mov
adc
jno
push
push
cmp
jno
es
mov
mov
dec
test
xchg
loopne
fwait
outsl
out
jo
jge
dec
lods
daa
stos
push
fucomip
sbb
gs
jb
pop
loope
ss
sbbl
movsb
mov
out
sbb
ljmp
stc
add
xchg
and
test
xchg
dec
lods
out
lods
fwait
bound
jae
bound
addl
fisubrs
aaa
xlat
sbb
pop
cmc
pop
xor
sub
lods
cmc
in
cmp
cmp
insl
cmp
nop
or
inc
push
test
shr
add
movsb
cmp
flds
in
sbb
xor
popa
or
inc
cmpl
mov
mov
jo
cld
xchg
cmp
les
add
jecxz
sarb
dec
mov
loope
es
loope
mov
ficoms
lret
in
inc
jae
sub
adc
sbb
addr16
ljmp
subl
push
mov
xchg
test
ror
shlb
and
dec
pushf
xor
jmp
push
mul
cmp
and
adc
test
jnp
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
idivl
lret
sbb
jp
adc
or
lret
imul
stos
sbb
push
sbb
test
notl
lcall
xor
cmc
in
push
mov
imul
outsb
push
jns
mov
push
stos
push
xchg
fstpt
lods
movsl
les
dec
inc
fisubs
rorb
cli
dec
fimuls
jp
and
out
mov
aaa
sub
pop
mov
push
scas
outsl
scas
movsl
dec
sbb
fmuls
daa
test
scas
jecxz
add
pushf
sbb
dec
cmp
or
xchg
outsl
xchg
add
mov
cmp
mov
std
movb
shlb
cmp
repnz
mov
mov
dec
adc
pop
je
push
int
sbb
out
cmp
mov
pop
out
mov
sub
mov
add
test
scas
lock
cmpsb
push
call
and
mov
push
sbb
fisttpll
mov
mov
sbb
mov
push
popa
push
fucomip
mov
test
jmp
iret
mov
jns
jl
popf
fcmovbe
add
int3
xlat
movsb
out
pusha
rcr
xor
cmpsb
vshufpd
add
jle
xchg
dec
cmp
lea
cmpsb
dec
jl
pushf
inc
outsl
fs
mov
jecxz
into
xor
pop
mov
lcall
add
ds
je
sbb
loop
add
push
push
inc
mov
andb
add
jle
cmp
in
shll
sbb
movl
sahf
fisubs
imulb
inc
inc
or
notb
cmp
iret
jecxz
push
fstp
xor
cmp
fucomip
fsub
repz
inc
pop
sub
pop
dec
inc
push
arpl
lcall
xorb
shlb
inc
jno
jo
or
push
rorb
arpl
pop
rcrl
je
mov
inc
and
xor
xchg
popf
cmc
mov
and
es
sub
push
xchg
rcrl
inc
insb
loopne
mov
insb
cld
enter
cmc
pop
jmp
mov
jmp
push
add
stos
mov
push
pop
mov
fs
int3
stc
inc
test
cmpsl
dec
scas
xchg
xchg
cli
in
arpl
xchg
andb
je
movb
mov
jo
jmp
dec
mov
sbb
sarl
arpl
sbb
loop
lcall
repnz
lock
cmp
loopne
xor
enter
inc
les
jp
add
sbb
adc
out
dec
dec
pop
sti
push
jmp
push
sbb
aad
jmp
and
iret
clc
push
inc
rcrl
addl
out
mov
mov
push
call
arpl
shlb
inc
lret
fisttpll
mov
cs
in
sbb
dec
or
inc
hlt
jg
cmc
outsb
push
cmpsb
cli
sbb
cmp
rcrb
pop
adc
es
imul
out
popf
cs
pushf
cli
fisubs
ss
xor
lds
adc
push
cmp
setg
jecxz
cmp
xchg
insb
add
push
je
je
stc
dec
popf
jns
je
mov
inc
es
or
imul
jge
xor
xchg
mov
inc
pop
dec
hlt
int3
loopne
and
and
sbb
mov
xor
jl
sbb
dec
xor
push
mov
or
fbld
cwtl
inc
lds
lcall
js
ficomps
fwait
inc
repnz
addb
daa
sbb
ret
mov
add
pop
xchg
into
xchg
in
pop
adc
pop
scas
movsl
mov
clc
je
adc
mov
outsl
dec
dec
add
push
std
out
scas
fs
test
stc
jmp
js
stc
mov
add
mov
dec
clc
sbb
and
xchg
aaa
in
cmp
mov
mov
std
rclb
dec
push
xchg
mov
jmp
sbb
inc
dec
sbb
sbb
fwait
push
loope
jnp
bound
sub
fs
push
inc
orl
cmp
fdiv
cmp
add
das
dec
jp
inc
mov
jle
xor
xlat
dec
xchg
sub
inc
std
popf
mov
in
loopne
nop
std
lods
or
fwait
leave
cmp
xor
loop
and
sbb
leave
inc
mov
lret
bound
cmp
movsb
adc
add
stos
jo
sbb
or
ss
andb
cmp
inc
xchg
add
xorb
push
filds
sarl
cwtl
loopne
lret
push
repz
lret
ja
mov
orb
xchg
dec
lcall
push
and
leave
dec
xor
movsl
movsb
cmc
push
je
subl
cmp
xor
pop
jl
shrl
loope
push
and
xor
or
shrl
xchg
mov
inc
mov
pop
mov
subl
loop
cwtl
sbb
fdivr
xor
icebp
cmp
xor
inc
arpl
testb
xchg
add
pusha
push
xchg
sarb
sbb
lods
lret
mov
jns
lret
jae
aad
xor
idivl
sbb
dec
notb
lea
xor
cmc
sub
pusha
ljmp
jns
scas
adc
mov
jnp
dec
stos
cmpb
jmp
loopne
mov
xchg
pop
cmp
stc
adc
cmova
inc
inc
mov
mov
outsl
xchg
clc
xchg
fidivrl
dec
jns
mov
xchg
sbb
popa
popa
aaa
pop
sbb
cmp
xchg
pshufw
inc
icebp
sbb
insl
push
aaa
lret
jno
adc
dec
test
jbe
mov
mov
lret
mov
push
cmpsl
mov
adc
pop
push
jmp
fs
hlt
fnstsw
push
out
icebp
bound
mov
roll
mov
hlt
sti
mov
pop
sbb
mov
pop
mov
inc
ss
arpl
cld
xchg
lahf
sub
pop
aas
mov
pop
mov
aam
mov
dec
cli
xchg
fwait
ds
mov
adc
lods
mov
inc
xchg
dec
push
shll
cmp
aas
or
mov
xor
add
mov
fdivrs
or
push
xchg
add
fsts
stos
sub
dec
push
sbb
je
ds
repnz
mov
cmp
aad
xchg
cwtl
out
sub
aas
sbb
es
inc
rorl
mov
loop
mov
sbb
mov
push
sbb
stc
leave
cmp
bnd
push
pop
test
mov
sti
cwtl
repnz
pop
mov
dec
insb
movsl
cld
imul
inc
movsl
int3
sub
lcall
sub
cmp
xlat
add
mov
push
nop
or
sub
and
dec
loopne
mov
xchg
cmpsl
or
push
and
or
mov
add
lods
sbb
sahf
test
in
nop
arpl
fcmove
cmp
enter
pop
icebp
jmp
xchg
or
sahf
loope
mov
lcall
addr16
mov
pushf
xlat
hlt
out
jle
cld
jae
fwait
cmp
ret
adc
mov
lods
cli
pop
out
sub
fdivs
xor
mov
push
hlt
xchg
rcrl
stc
mov
lret
jbe
ljmp
lcall
push
xchg
xchg
cwtl
ljmp
ss
or
cmp
or
in
gs
cmpsl
add
ljmp
test
sbb
xor
adc
mov
pusha
jg
sub
xor
pop
push
xor
push
movsl
dec
mov
push
or
rcl
movsb
adc
jb
repz
dec
fucomip
cltd
inc
sbb
nop
jno
leave
lock
scas
add
repz
nop
adc
out
mov
popf
imul
push
hlt
or
push
push
adc
fadd
or
mov
xorl
sub
fs
xchg
push
inc
mov
or
lods
in
stos
xchg
int
pop
testl
rclb
fstps
cmp
dec
xor
insb
sbb
arpl
sbb
or
sub
mov
dec
adc
jp
dec
mov
cmc
repz
sub
lret
or
sub
sti
pop
outsb
adc
xlat
aad
out
fisubl
stos
lock
out
jmp
xchg
fcomps
rcl
mov
cmpl
fdivrl
out
and
or
cmp
lahf
sbb
sub
jge
mov
mov
insl
test
sbb
fldt
mov
aas
test
stos
jg
pop
andb
pop
iret
imul
dec
jnp
cwtl
push
movsl
mov
inc
jnp
cmpsl
pop
test
into
inc
or
xor
loop
jo
push
push
mov
call
out
or
ret
and
adc
pop
fcmovu
iret
mov
mov
cld
mov
push
sub
mov
fldl
dec
ficompl
and
mov
aas
cmp
push
mov
pop
sbb
das
xchg
int
add
lock
add
rclb
lods
push
inc
inc
in
xor
xor
daa
mov
ja
xchg
mov
lahf
cmp
add
mov
or
add
push
mov
rcl
call
sbb
mov
xchg
jp
pop
sub
ljmp
jnp
add
push
sub
cmpsb
sub
fldcw
dec
repz
pusha
outsl
in
dec
test
pop
movsb
fcoms
fs
inc
daa
xchg
sbb
ret
loop
rcl
pusha
xor
push
adcl
pop
inc
ja
xor
sub
adc
aam
call
adc
mov
cmpsl
and
popa
mov
push
xchg
jae
add
lock
jns
mov
sub
out
imulb
cs
in
bound
adc
pop
mov
jmp
loopne
test
nop
inc
in
in
in
fsubrs
dec
stc
and
sub
push
inc
or
jmp
and
scas
cmpsb
mov
imull
subb
sbb
nop
loop
jmp
stos
sub
jge
cmp
push
stos
int
leave
xor
mov
push
mov
cs
fmull
fidivs
ss
xor
fistps
rcrl
mov
ljmp
cmp
lods
push
dec
sbb
sahf
int3
pusha
xchg
sarb
inc
iret
lret
jo
pop
xchg
pop
xchg
aam
cmc
stos
std
test
call
hlt
mov
daa
repnz
fimuls
fildll
fidivl
cmc
ljmp
push
rorl
mov
ret
push
sahf
jg
pop
adcb
jge
aas
fstp
jae
sbb
or
xchg
inc
mov
push
out
loope
gs
data16
xor
mov
loopne
inc
or
decl
loop
mov
jge
or
pop
cmp
mov
fmull
mov
rcrl
iret
xchg
cltd
mov
dec
lods
je
shrb
leave
in
xor
push
stc
ss
jns
outsl
fdivr
jne
rolb
or
in
jns
ret
adcl
nop
js
jmp
mov
scas
mov
sbb
adc
imul
cmpsl
push
sbb
mov
pushf
jae
subb
bound
pop
ret
aam
sahf
add
stos
iret
gs
or
mov
daa
loope
sbb
rcr
xchg
jns
lret
nop
or
nop
xor
fs
cmp
jns
fxch
lods
cmc
jle
movsl
std
std
sbb
pusha
mov
rcrb
push
and
cmp
mov
pushl
pusha
adc
nop
jmp
out
cmpsb
cmp
or
je
jbe
mov
nop
push
mov
ret
fxrstor
mov
sbb
inc
add
imul
call
cltd
sbb
mov
movsb
inc
dec
add
fwait
js
sbb
pop
or
pop
mov
ds
imul
push
and
mov
roll
pop
mov
xchg
mov
xorb
stos
add
into
push
mov
jo
mov
mov
lret
aam
xchg
inc
outsl
cmc
ret
out
adc
nop
js
push
popf
cmp
and
xor
cld
ja
fistps
frstor
xor
adc
lock
shll
inc
repz
insl
stos
jmp
ret
imul
sbb
mov
insb
cld
scas
sbb
rcll
pop
cmpb
inc
popa
push
inc
jmp
inc
mov
xchg
fwait
jae
or
push
out
imulb
lahf
les
xchg
cmc
daa
out
add
aam
cmp
mov
scas
adc
call
arpl
sbbl
dec
sbb
mov
mov
push
cli
dec
lea
rclb
pop
jecxz
fldcw
pushf
or
das
fwait
jecxz
aam
cwtl
inc
test
inc
in
add
xchg
push
int3
push
adc
push
or
cmpl
testb
mov
dec
fdivrl
sbb
mov
movl
imul
xchg
je
add
cld
hlt
jl
js
lret
fldenv
push
gs
jb
arpl
ljmp
adc
jp
out
jns
lods
incl
xor
nop
and
imul
mov
pop
push
mov
ljmp
iret
mov
mov
dec
sub
and
pop
inc
adc
ja
inc
lods
cli
into
movsl
and
cmp
sub
aas
int
leave
add
rcrl
push
jne
decl
or
shl
jg
fucom
mov
sahf
scas
xchg
repnz
jp
sub
outsl
and
adc
push
cs
pop
cli
out
jns
sahf
jne
xlat
loopne
popf
mov
inc
mov
loop
std
xchg
ror
xor
sub
cs
test
or
xchg
outsb
mov
dec
and
cwtl
loop
push
inc
test
dec
data16
imul
lcall
fcmovnu
cld
decl
pop
cli
push
in
loop
pop
lret
mov
xchg
adc
mov
add
mov
testb
cltd
inc
pushf
mov
inc
mov
test
cmpsb
xorl
mov
mov
ljmp
mov
sbb
cli
fcomps
mov
mov
push
mov
icebp
jb
dec
lods
adc
push
mov
in
or
adc
inc
sti
jge
xchg
mov
ret
cs
xchg
fisubs
out
or
gs
xor
in
jl
mov
pop
jne
lods
xlat
inc
xchg
jmp
mov
mov
outsb
lock
xchg
or
push
mov
daa
inc
fstps
mov
ror
outsl
mov
mov
loop
mov
movsb
js
pop
out
rolb
jne
cmpsl
fsubrs
sub
sarl
and
jp
mov
mov
in
bswap
mulb
test
jmp
mov
push
jl
repz
rcrl
add
push
or
mov
ja
mov
sbb
movsl
pop
mov
mov
jl
inc
ret
and
mov
or
and
or
imul
out
bound
add
cmp
jmp
xchg
or
sub
insl
xchg
icebp
mov
fs
add
pop
insl
push
push
jecxz
jnp
int
insb
ss
cmp
adc
lea
cli
dec
dec
push
clc
fnstcw
out
in
pop
pop
cli
jmp
xchg
in
sub
pop
mov
xchg
ret
dec
adc
adc
pop
sbb
cmp
data16
out
adc
push
mov
ret
idivb
orl
push
fnstenv
imul
test
lods
popf
repnz
fbld
lret
add
mov
sbb
push
add
jno
push
ret
clc
or
inc
fwait
add
lods
pop
aas
jno
push
in
adc
mov
clc
or
sbb
mov
pop
mov
add
jmp
out
je
test
movsb
jo
hlt
in
fs
and
mov
dec
cmp
dec
jle
getsec
inc
mov
jne
call
es
aas
lds
dec
cmp
out
outsb
enter
mov
adc
movsl
int3
movsb
mov
repz
loopne
sub
sbb
inc
sbb
xor
ss
adc
lahf
out
mov
sub
mov
shlb
pop
das
inc
outsb
push
clc
pop
fidivrs
sub
xchg
mov
pop
aad
cmp
or
pop
pop
add
and
rclb
aaa
add
mov
inc
les
orl
push
push
lcall
push
jns
inc
popf
pop
jge
sub
inc
jae
sub
mov
mov
jmp
out
lret
cmp
sub
dec
pop
lcall
sbb
loop
ljmp
and
popf
inc
xchg
add
test
cli
push
sbb
leave
fiaddl
mov
push
call
and
das
cmpsl
push
das
pop
xor
pusha
jecxz
mov
les
pop
pop
jl
inc
mov
js
sub
sbb
push
add
shrl
xchg
hlt
test
stos
pop
fs
and
ds
dec
mov
icebp
xor
sub
outsl
pop
fistpl
loope
test
outsl
aam
push
mov
fldt
pop
ja
mov
movsl
scas
cld
mov
jae
bnd
sub
ss
sub
in
fidivs
stos
cmc
adc
and
jbe
push
cs
and
add
ret
adc
fcoml
repnz
xchg
dec
and
inc
mov
stos
popa
mov
repnz
add
pop
push
mov
jbe
les
adc
punpcklwd
hlt
sbb
je
pop
pop
insl
dec
jl
pusha
scas
add
pop
cmpsb
scas
push
mov
mov
dec
dec
nop
mov
aaa
jns
inc
dec
mov
sub
ret
mov
shr
add
xchg
sti
orl
inc
mov
jmp
cmp
insb
fists
or
enter
lock
jmp
xor
sub
inc
mov
cli
and
cwtl
fadd
faddp
push
fwait
ret
arpl
dec
jns
in
xchg
repz
mov
mov
test
aas
sbb
cmp
sbb
call
mov
inc
ljmp
dec
xlat
cmp
aad
mov
sub
ficoml
rorb
mov
push
sarb
in
shr
lock
test
bound
add
int
cmpsl
pusha
dec
nop
xlat
mov
ss
test
pushl
in
ljmp
leave
outsl
lock
inc
int
jne
sbbb
sti
outsl
testl
adcb
insb
mov
test
aam
adc
mov
dec
mov
fxch
inc
pop
xchg
push
lods
jecxz
jge
jge
repnz
lock
fstl
imul
and
push
pop
pop
jb
sahf
cmp
fildl
fndisi(8087
lods
faddp
lods
cmp
nop
aaa
mov
xchg
pop
iret
ficoml
add
inc
addl
cld
ficompl
repnz
das
adc
mov
cmp
sub
pop
mov
pop
dec
add
and
push
push
inc
loop
outsb
adc
pushf
or
add
out
or
in
hlt
stc
ret
mov
insl
sahf
test
lahf
icebp
sbb
jnp
sti
es
jbe
lods
dec
outsb
pop
stos
adc
pop
pop
sub
push
xchg
in
xor
push
je
mov
or
into
mov
mov
mov
pop
pop
call
insb
mov
data16
xor
mov
xchg
dec
and
rcrl
add
xchg
pop
sbb
test
lahf
pop
sarl
in
push
cmp
cmpb
xchg
cmp
jnp
sub
je
sbb
fsubs
notl
or
mov
jmp
js
sub
cmpsl
push
xchg
imul
js
cmp
loopne
test
sbb
std
xorb
pusha
cmp
ds
aad
es
ds
cld
outsl
pop
cli
scas
xchg
fstl
pop
and
pop
int
into
test
pusha
inc
or
mov
mov
push
or
adc
sbb
pusha
cmp
mov
iret
sub
mov
mov
mov
mov
xchg
int
mov
into
or
insb
out
outsb
cmpsb
adc
pusha
and
mov
mov
stos
push
cli
xchg
pushl
sbb
cld
loop
pop
scas
xchg
enter
sub
pop
xor
inc
jg
jb
push
popf
sub
mov
and
cs
dec
jge
pop
pop
repnz
or
repz
xchg
fcomps
add
or
or
addl
ljmp
lods
jae
movsb
or
adc
inc
add
adc
pop
xchg
jmp
or
pop
sbb
aas
mov
xor
mov
sub
ljmp
ret
mov
cmp
inc
mov
cmp
in
sarb
gs
iret
ret
inc
mov
push
sbb
jmp
push
inc
sub
stc
or
stc
jb
movsb
inc
mov
xchg
and
mov
stos
mov
push
aam
sub
sti
lea
sub
jne
mov
in
loope
call
add
xor
sbb
rcrb
popf
fsubl
lea
adc
xchg
mov
push
add
imul
test
aas
push
sub
ss
cmp
sarl
lods
jb
int
dec
popf
ja
loope
jne
add
xor
mov
aaa
into
sub
mov
xchg
lret
add
scas
dec
jl
arpl
fisubl
insb
xchg
cmp
int
aaa
mov
aam
fstpl
scas
sbb
inc
push
aad
sbb
pushf
dec
or
out
test
es
les
mov
mul
push
hlt
cmp
int
dec
test
jle
jae
scas
out
and
mov
sahf
adc
sarb
pop
mov
push
cmp
pop
jp
lcall
mov
pushf
lock
jb
jmp
imul
ror
mov
popa
out
int3
adc
sub
push
push
dec
bound
cmp
xlat
xchg
pusha
je
fistl
loope
mov
dec
mov
lods
xchg
inc
imul
sbb
test
push
sub
movsb
fs
fcoml
test
fists
repz
out
cmp
dec
or
mov
out
dec
mov
cmp
inc
cmp
dec
fcomip
mov
shlb
add
cmpsl
mov
adcb
mov
stos
test
cli
lcall
sub
int3
mov
dec
scas
cmp
loope
mov
jge
sti
movsl
cmp
xor
jb
dec
mov
pop
push
xchg
cmp
inc
mov
xchg
xchg
jae
xor
or
cmpsl
or
jnp
mov
movsl
lcall
jae
pop
shlb
or
mov
fildll
lret
xchg
aad
push
loop
push
test
cmpsl
push
push
out
jns
mov
movsl
ret
mov
shrl
cmp
xor
std
cltd
jle
lds
loopne
mov
xor
mov
mov
mov
jbe
fsts
fcoms
popa
loopne
push
mov
jo
adc
or
iret
popf
or
xchg
push
mov
stos
sub
mov
in
adc
and
orl
adc
mov
cmp
pop
lock
mov
adc
inc
push
sbb
int
das
push
sbb
cvtdq2ps
dec
lock
lods
je
inc
ret
int3
inc
into
out
sbb
iret
xchg
xor
mov
push
mov
cmc
sub
mov
pushf
sbb
fwait
dec
mov
repnz
add
mov
addr16
jne
negb
call
leave
mov
xchg
rol
push
mov
add
mov
pop
stos
rcrb
dec
sub
ficoml
lock
sbb
enter
dec
or
fs
popf
xchg
sbbb
inc
jnp
xlat
mov
cmc
jns
and
cltd
mov
rcr
inc
xor
mov
scas
cltd
aas
sbb
jno
xchg
or
stos
popa
fmull
pop
and
push
arpl
jle
scas
popa
pop
push
pop
pop
xor
out
rorl
and
mov
add
inc
mov
movsl
shrl
shlb
mov
outsl
lods
test
cmp
lret
cmp
and
sti
push
les
adc
push
leave
fwait
dec
sub
push
sbb
pop
adc
sbb
xor
arpl
std
addr16
lds
jmp
push
dec
mov
es
sbb
add
aaa
sub
inc
xlat
jae
ds
dec
ja
fldenv
push
out
jg
ds
loope
mov
lret
addr16
fs
xor
push
int
mov
jg
dec
push
push
sbb
decb
pop
mov
mov
pusha
adc
pop
and
mov
inc
adc
ljmp
lds
inc
xor
clc
add
dec
sub
lock
pop
std
pusha
or
xchg
aaa
in
mov
iret
icebp
fwait
push
dec
stos
adc
in
inc
mov
test
mov
xor
dec
andl
sbb
js
stos
jo
cmp
jo
inc
pop
adc
xchg
dec
repnz
popf
inc
fwait
movsb
js
ret
inc
or
dec
adc
mov
out
dec
jno
insb
jp
adc
lods
mov
inc
loopne
iret
daa
dec
decl
push
ja
adc
jmp
xor
daa
inc
add
jo
dec
dec
icebp
jl
aaa
inc
outsl
dec
push
pop
adc
aad
xchg
mov
daa
mov
push
out
mov
xor
xchg
push
mov
push
and
jnp
repz
rorl
and
pusha
xor
out
mov
es
xor
cmp
pop
pushf
outsb
and
mov
fsubp
mov
cmp
cwtl
adc
inc
sbb
mov
push
in
or
dec
cmpsl
out
stos
lock
and
pushf
addr16
xchg
ret
out
xchg
lret
sub
notl
in
rorl
add
lret
inc
and
or
bound
gs
push
pushf
call
adc
add
cmp
decl
xchg
jmp
or
out
aad
aam
pop
sbb
jne
dec
ds
push
mov
push
ljmp
push
dec
roll
xchg
icebp
mov
loopne
push
dec
test
pop
jbe
push
mov
sub
mov
fwait
mov
xchg
pop
ljmp
and
lahf
adc
mov
adc
in
or
xor
dec
xor
sub
or
lret
call
xor
fnstcw
aam
leave
rcl
es
lcall
mov
loop
jno
data16
fdivrs
enter
dec
sarb
jecxz
addr16
int
fidivl
lods
sub
cmp
push
mov
cltd
xchg
adc
pop
enter
pop
inc
sub
or
sub
fstl
daa
lahf
mov
jmp
aad
repz
int3
mov
jg
aas
arpl
lahf
pop
push
pop
mov
test
jae
inc
mov
mov
and
adc
jns
xor
imul
push
imul
add
scas
loopne
adc
add
xor
loop
xchg
mov
leave
push
jnp
mov
jp
fcompl
add
test
cmp
out
adc
inc
mov
cmp
mov
cmc
inc
bound
loopne
xchg
xor
in
add
pushf
pushf
stos
or
dec
pop
icebp
mov
mov
adc
in
cmp
pop
or
xlat
jg
push
jns
in
mov
out
stc
inc
int
nop
mov
pop
push
stos
push
vmovsd
mov
pushf
mov
mov
arpl
push
and
clc
sbbl
ret
cmp
xor
int3
push
cs
push
mov
out
add
add
xor
dec
movsb
jb
mov
add
pop
mov
inc
test
fimuls
pop
cld
dec
ss
test
and
clc
sub
popf
shl
shrb
daa
push
jle
jbe
mov
xlat
mov
out
xchg
pop
test
cmpsb
mov
xchg
cltd
push
pop
jg
push
or
cmpsb
mov
mov
in
hlt
pop
aas
pop
sbb
inc
aaa
clc
fwait
push
mov
xor
add
fwait
icebp
lahf
cmp
call
ror
sub
xchg
pushf
ss
sbb
mov
jmp
mov
jno
ret
testb
enter
mov
sub
pop
add
shll
clc
mov
inc
dec
inc
jp
out
push
fldl
rcrl
adc
sub
cmpsl
add
jne
sub
cmp
leave
nop
xor
pop
fdivrs
loope
in
loope
shll
xchg
mov
push
mov
adc
add
arpl
movsb
xchg
arpl
xor
fmull
sub
sbb
xchg
push
push
daa
mov
cmpb
sbb
jns
shrd
aad
xchg
sub
stos
inc
and
mov
in
stos
pop
mov
cwtl
roll
inc
call
jno
cmp
aam
inc
push
or
xor
sahf
pop
shlb
jl
sub
testb
dec
fidivrs
inc
lods
and
mov
mov
and
dec
push
jl
push
xchg
ljmp
mov
lret
lcall
pop
imul
mov
xor
mov
mov
pop
test
loope
mov
andb
mov
lds
xchg
cmp
ja
adc
push
lods
cli
dec
dec
je
inc
lds
jo
jmp
and
in
mov
mov
xlat
incb
repnz
call
xchg
rorb
movsb
out
jl
lea
test
hlt
push
lods
sub
mov
inc
or
sahf
je
fldl2t
adc
cmp
add
inc
pop
xchg
mov
out
insb
dec
and
xchg
mov
adc
mov
fiadds
mov
jecxz
decb
sub
push
sub
insb
xor
cmp
ret
add
push
and
xchg
lods
pop
ret
out
dec
cmp
push
dec
das
add
ret
dec
fs
in
jbe
dec
jp
jae
test
out
cmc
stos
nop
and
lods
mul
jne
cltd
ljmp
cmpsb
pop
enter
fists
or
push
xchg
ret
in
push
lahf
dec
mov
fnsave
adc
lret
dec
fdivr
decl
add
add
add
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
subb
jp
or
jp
mov
cli
or
lret
fdivr
jns,pt
sbb
jmp
lods
pop
or
mov
inc
fistpll
mov
sbb
mov
cmp
xchg
fwait
rol
mov
pusha
mov
jns
stos
outsb
push
insl
inc
mov
push
shl
sub
loope
adcl
jecxz
lret
out
pop
sub
loope
jge
push
popa
mov
icebp
or
cmc
stos
jnp
lea
push
sbb
mov
add
or
fnstenv
mov
lcall
les
in
push
push
stos
add
into
fistps
add
vpacksswb
xor
fs
sub
fsubr
call
iret
mov
mov
jbe
jl
xor
push
push
jle
lret
les
cmp
jl
ss
rolb
mov
pop
nop
scas
cld
push
jge
jbe
push
sub
push
mov
cmp
mov
mov
jmp
ret
call
test
jne
sub
xchg
push
pop
ja
cmp
sarb
inc
and
aam
add
outsb
sti
jg
cmp
jnp
jns
lods
push
subb
xchg
xchg
in
stos
mov
leave
push
xlat
and
adc
inc
push
loope
fnstsw
aas
push
mov
sub
shll
cmpsl
push
xor
inc
fcomip
movsl
fstl
repnz
cmpsb
cmpsb
shlb
ljmp
sbb
std
or
jecxz
jno
jns
xor
stos
xchg
out
out
in
cmp
fucomip
fs
sbb
xor
jl
lret
int
add
bnd
sub
and
shll
cmp
xlat
mov
pop
insb
mov
outsl
sub
xor
mov
inc
shrl
fldcw
test
fldl
call
jg
lds
icebp
into
xor
dec
or
lock
cmp
roll
push
add
jne
ja
sub
fisubl
bound
pusha
test
addr16
leave
das
pop
les
push
xchg
jmp
outsl
negb
call
xor
into
xor
xor
mov
sub
cmp
sub
pop
xchg
scas
cmp
mov
or
repnz
inc
pop
ss
lods
lret
add
xchg
xor
jo
mov
lea
clc
outsb
or
adc
fsubrl
jle
inc
mov
inc
test
dec
lret
push
cmc
pop
mov
sub
ds
sbb
or
mov
cmpsl
test
push
cmp
inc
pop
and
dec
hlt
jo
dec
sbb
jg
test
aas
xchg
fcmove
mov
fs
jmp
xor
pop
mov
jle
aaa
mov
adc
and
mov
mov
enter
cwtl
jnp
repnz
or
test
jne
fcmovne
pop
dec
push
push
push
inc
push
push
mov
lods
or
aas
push
jne
push
fdivrp
dec
pop
and
bound
mov
or
add
xchg
imul
fistl
jne
mov
fidivs
cmp
testl
cmp
pop
daa
sahf
int
mov
out
pop
inc
add
fcoms
fidivrl
pushf
fsubr
sbb
dec
pop
ss
lds
sbb
inc
mov
leave
jnp
lea
xor
mov
ds
movsl
shr
mov
and
mov
jnp
clc
mov
push
shrl
repz
mov
adc
ss
inc
pop
pusha
adc
insb
rcll
aaa
mov
ficoml
pop
lahf
daa
dec
mov
ja
jge
std
jno
popa
clc
mov
mov
popw
jnp
cmpxchg
jp
ret
mov
out
ficoml
js
adc
insb
mov
dec
insb
arpl
mov
jae
sbb
mov
xchg
or
les
int3
pop
ss
hlt
add
mov
mov
loopne
adcb
stos
bswap
repz
insb
outsb
fwait
cld
add
xchg
movb
adc
push
push
andb
aaa
fdivrs
int3
repnz
jp
inc
xchg
fldl
movb
sbb
dec
stos
jns
nop
lock
or
cs
or
sarb
mov
repz
inc
lret
dec
in
push
stos
popa
sbb
popl
imul
sahf
cmp
sahf
mov
xchg
mov
xchg
repz
jns
jo
fcomip
scas
andb
sub
bound
loop
adc
mov
shll
jno
shll
pusha
das
cmp
jl
sti
aam
pop
mov
test
jl
add
jmp
push
dec
and
popa
mov
sub
xchg
xchg
or
sbb
add
cmp
cmp
jbe
cmpsl
into
mov
lea
adc
jb
add
fildl
jbe
in
cmp
inc
test
jmp
cmpsb
push
cli
xchg
aad
pushf
movsb
fldcw
jecxz
ds
cld
add
xchg
cmp
or
jno
jl
js
insb
enter
cmc
pop
imull
pop
mov
xchg
je
mov
popa
xlat
lcall
fdivrl
add
lods
dec
in
sarb
mov
aad
mov
pop
leave
pusha
cmp
pop
dec
adc
ret
sbbl
addr16
stos
jno
fdivrl
mov
out
pop
insl
jbe
fsubrl
pop
inc
jnp
imul
mov
iret
shl
inc
call
dec
sub
dec
inc
jle
outsl
sbb
test
int3
pop
aaa
fidivrl
and
mov
inc
adc
jne
test
in
mov
dec
setb
sub
loopne
test
loop
fs
mov
repnz
je
mov
mov
pop
dec
push
mov
mov
jb
ret
push
adc
lock
call
imull
inc
dec
push
mov
mov
or
int3
das
flds
lret
insb
add
xchg
scas
outsb
loope
push
shrb
lock
call
dec
testl
movsl
adc
cltd
add
mov
and
dec
ja
xchg
popf
das
sbbb
lods
sub
jp
cmc
fbstp
mov
adc
fsub
aas
fbld
cmc
imul
cmc
movsb
mov
stos
es
xlat
pusha
dec
inc
bound
cwtl
push
xchg
push
sahf
pusha
dec
xor
and
loopne
mov
push
jo
mov
inc
pop
pop
inc
mov
clc
and
shlb
xchg
sahf
mov
jb
popf
pop
sbbb
inc
jne
cmp
stos
mov
push
add
pop
leave
sub
out
mov
bound
xor
test
sbb
call
push
cli
roll
jo
rcrb
xchg
mov
loop
jl
xchg
dec
mov
ror
js,pn
addr16
pushf
clc
add
pop
loop
mov
lret
add
jne
mov
or
or
mov
mov
add
jns
fcmovnu
add
pusha
out
lcall
push
mov
jmp
pop
or
loop
and
sub
push
mov
sahf
insb
mov
or
pop
inc
adc
xchg
sbb
or
stos
jp
test
js
jne
mov
add
rorl
std
fadd
xor
mov
push
stos
int
pop
pop
push
fisubrs
sub
adc
test
push
jns
inc
setnp
je
mov
aad
mov
pop
arpl
pop
push
es
clc
arpl
jns
mov
aas
adc
pop
les
cmp
and
in
mov
outsb
leave
pop
and
shrl
xor
pop
push
or
mov
les
dec
sahf
mov
sbb
inc
dec
inc
hlt
sub
jne
out
mov
pusha
or
inc
inc
mov
out
into
sbb
ljmp
push
cmpb
mov
mov
cli
fisttps
mov
cmc
xor
sub
inc
dec
movntq
out
xor
mov
jne
das
adc
jge
mov
in
stos
bound
js
sbb
mov
mov
shlb
or
cmp
rcr
sbb
fsubrp
push
insl
pushf
dec
and
test
popf
sub
out
ficoml
dec
pop
cld
mov
mov
mov
fcmovu
scas
sar
popl
push
sub
adc
sbb
add
mov
aam
xor
aas
jle
in
mov
insl
lret
pop
xchg
xlat
and
minps
lcall
mov
das
es
outsl
aad
int3
inc
out
movsl
fisubrl
cmp
in
xor
dec
bound
or
pushf
mov
cmp
or
pop
call
nop
loop
mov
cmp
lds
add
and
dec
aaa
mov
loop
add
inc
pop
xchg
idiv
mov
sub
add
ret
cmpsl
mov
xor
pop
mov
xchg
jb
add
ljmp
inc
mov
mov
or
xchg
dec
ror
in
fisubrl
dec
xor
push
sub
inc
jle
mov
clc
iret
or
rsm
in
pop
pop
mov
jmp
or
imul
mov
push
dec
push
mov
inc
fwait
xchg
aas
mov
mov
xor
movsb
jle
xor
shr
sbb
mov
mov
pop
jo
mov
push
mov
je
gs
mov
bnd
fs
add
cmp
in
cmp
int3
jno
cltd
pop
mov
outsb
inc
pop
mov
xlat
in
mov
cmc
out
mov
pop
gs
stc
es
cmp
pop
push
mov
pop
sbb
call
adc
pop
adc
ret
jbe
lahf
stc
mov
pop
xchg
dec
mov
jl
into
lods
jg
ja
sti
jp
lock
aaa
mov
jo
test
int
mov
ja
xchg
mov
int
push
imul
aad
mov
xor
int
cmpsl
and
add
xchg
repz
imul
jmp
mov
cwtl
lods
adc
gs
jnp
scas
mov
mov
add
and
shrb
out
adc
mov
pushf
xor
cmp
mov
push
jb
and
dec
jae
shlb
je
mov
das
or
push
inc
sub
orl
sahf
fstps
int
adc
push
cld
inc
cmp
sub
out
data16
fs
out
arpl
cmp
aas
sub
mov
push
aas
imul
mov
adc
sub
mov
lea
inc
loop
jb
rcrb
jle
mov
pop
dec
or
push
data16
cwtl
rcrb
mov
iret
fdivrs
insl
pusha
cli
outsl
pop
ja
sbb
xor
shl
inc
cwtl
push
loopne
outsl
dec
adc
roll
push
or
repz
std
mov
or
xor
pop
enter
das
lods
adc
or
insl
push
stos
in
sarb
repz
push
jp
loop
rolb
popf
rcrl
or
push
repnz
pop
stos
jbe
xor
les
stos
jmp
mov
push
shll
add
and
jo
mov
and
cmc
cld
jmp
leave
mov
pusha
jg
mov
cmp
adc
popf
sub
xchg
mov
orl
or
sub
std
stos
pushf
ds
arpl
pop
cmpsl
or
jp
add
stos
add
cld
push
in
aas
fcmovne
or
or
lahf
cmc
ja
pop
or
jmp
mov
lret
rcrb
xor
xor
fisubrs
sbb
adc
xor
cltd
repz
mov
das
xchg
es
xchg
ror
jmp
mov
push
mov
dec
lret
mov
xor
push
test
dec
inc
pusha
mov
adc
add
cmp
adc
sarb
inc
xlat
xor
fwait
push
add
dec
lods
mov
mov
xchg
les
cmpsb
push
cmp
mov
nop
mov
push
fstpt
nopl
inc
mov
lds
daa
aas
add
je
lods
add
dec
jge
je
add
jae
pop
push
pop
jo
adc
dec
loop
dec
fwait
xchg
jmp
rolb
sbb
das
xlat
nop
notb
movsb
mov
add
in
pop
cmp
in
aas
mov
push
add
out
push
add
aaa
pop
aad
jp
arpl
leave
mov
repnz
lcall
cwtl
push
ret
push
fstpl
mov
add
jge
test
cmp
int
sub
fwait
pop
in
mov
push
int3
jp
shlb
je
sbb
dec
fnsave
jmp
shll
cmpsb
jbe
fstpl
fistpll
sbbb
and
push
rcll
dec
jb
sub
mov
lcall
pop
cmc
pop
jmp
lret
imul
xchg
inc
rcrb
xor
icebp
push
sbb
fadd
adcl
ja
dec
lcall
ret
xchg
test
stc
in
arpl
mov
push
addb
push
js
push
outsl
jns
test
and
lods
nop
ss
dec
int3
pusha
addl
mov
sbb
in
xchg
loopne
xchg
loopne
xchg
sub
lahf
int3
adc
fwait
aad
xor
es
mov
dec
dec
in
jnp
addb
in
repz
mov
std
mov
add
cmp
jb
xorl
ds
hlt
jecxz
out
out
and
jae
jbe
stc
jge
jo
sub
aam
test
int3
fdivrs
push
loop
ret
fcmovnb
or
js
in
xchg
cmpl
push
data16
jb
imul
jae
sbb
sti
or
xchg
out
fstpl
pop
inc
imul
mov
int3
lock
addb
mov
sbb
push
ja
jmp
repnz
bound
push
push
ss
xchg
cld
mov
gs
ljmp
xchg
mov
push
int
or
mov
dec
loop
push
ror
and
pop
aaa
lahf
cmp
ja
inc
decb
inc
sbb
inc
cmp
adc
lods
cs
jns
test
sbb
call
mov
sub
mov
mov
ds
inc
pop
cmp
pushf
sbb
mov
test
shl
dec
mov
mov
mov
sub
push
cs
out
loop
push
int3
xor
cltd
fwait
ljmp
imul
xor
adc
fcmovne
adcb
hlt
stc
push
adc
add
xchg
add
mull
repz
ret
daa
lods
jns
mov
cld
push
pop
add
sbb
mov
ljmp
in
push
vmaxss
pop
or
pop
dec
push
jne
inc
cs
loop,pt
mov
inc
das
fwait
std
aaa
push
inc
cli
in
ret
or
loope
cmp
mov
push
inc
les
aam
push
cmc
test
nop
or
lods
jle
les
add
ds
hlt
pop
cs
push
xchg
cwtl
mov
leave
ja
xor
insl
push
inc
in
push
mov
icebp
pop
mov
out
mov
lea
outsb
scas
cmp
ljmp
imul
std
or
jbe
rcrl
repz
jl
fwait
icebp
and
int3
es
loope
repnz
xor
into
sbb
mov
dec
add
fbstp
dec
test
hlt
jl
loope
xor
loop
addb
icebp
inc
sbb
sti
int
jno
inc
cmp
fnstenv
mov
cmp
fldl
cld
test
push
xor
notl
iret
rcll
fistpl
mov
pusha
outsb
inc
lea
jecxz
data16
jno
js
mov
in
xchg
push
inc
sub
mov
lret
dec
push
rclb
cmp
xchg
lods
fildl
int
ficompl
and
mov
add
xchg
out
pop
xchg
fisttpll
mov
mulb
daa
xchg
push
jno
into
dec
out
pushl
pop
sti
mov
jbe
test
sbb
push
dec
shll
in
mov
sbb
fmuls
fildll
push
stc
insl
push
ja
mov
jmp
mov
in
leave
ds
xchg
cld
repz
and
jns
arpl
cwtl
or
mov
fidivrl
pushf
clc
jb
xor
push
and
mov
lea
testl
ss
pop
es
inc
mov
cmpl
cmp
jmp
sti
mov
fninit
mov
popa
jnp
mov
inc
cmp
mov
das
ficoml
jo
sbb
inc
mov
ljmp
mov
inc
inc
xchg
imul
cs
out
loopne
push
lahf
mov
push
mov
ss
ds
mov
leave
inc
pop
pop
mov
push
cmp
xchg
pop
push
add
sar
fmul
mov
int3
adc
aad
push
mov
add
js
mov
popa
repnz
mov
icebp
jae
movsl
leave
imul
sub
imul
cmp
lcall
scas
pop
daa
mov
lock
pop
pop
arpl
lods
xor
inc
sub
cmpsb
xor
push
push
xchg
dec
dec
sbb
bound
aaa
imul
addr16
cmp
jp
test
mov
in
jecxz
xor
aad
sbb
dec
dec
add
mov
sar
push
xor
and
ret
aad
dec
cmpsl
dec
jb
or
in
jo
mov
jnp
push
loop
fdivs
push
dec
xchg
imul
inc
sub
scas
scas
jne
mov
pop
push
and
sarb
xchg
pop
xchg
popa
movsl
pop
leave
sbb
sub
inc
adc
adcl
xchg
mov
pop
or
fldenv
enter
fnstenv
mov
sahf
mov
out
arpl
push
cmp
ss
sti
inc
popf
js
push
js
lea
push
mov
cmp
mov
aad
and
sarl
jle
sbb
cmp
lea
jl
and
jmp
aas
fisttps
sub
dec
inc
test
mov
or
mov
pop
insl
sub
sub
test
das
repz
jge
dec
stos
mov
or
insl
aam
xchg
call
mov
mov
mov
mov
mov
inc
and
loop
inc
stos
repnz
mov
mov
jecxz
pop
int
icebp
push
or
movsl
mov
mov
cmp
outsl
adc
inc
inc
mov
mov
jecxz
lods
dec
jp
popa
sar
xchg
push
pop
cmpsl
aad
out
loopne
or
inc
arpl
jb
xchg
leave
cmpsl
data16
movsb
push
lret
fsts
or
mov
pushf
mov
cmp
sarb
inc
jmp
outsl
fstpl
or
ret
push
xchg
pop
add
push
pop
sahf
and
andb
pop
lcall
lahf
xchg
mov
jo
pop
jge
js
cmp
sub
out
loope
adcb
lret
push
adc
mov
mov
out
pop
dec
gs
out
subb
imul
add
adc
add
or
testl
mov
pop
cmc
lret
mov
pop
or
fcoml
adc
and
je
and
stos
stos
add
shll
xlat
jno
add
and
inc
mov
imul
iret
clc
ret
aaa
mov
push
sub
pop
cs
xchg
pushf
fwait
cld
enter
jns
mov
scas
icebp
xchg
and
xchg
stos
xor
shlb
roll
iret
mov
sbb
pop
xor
ficoml
in
xor
push
adc
addr16
jge
mov
add
loop
arpl
fildl
js
lcall
daa
jmp
addr16
rolb
clc
stos
xor
cwtl
mov
xor
or
xchg
jno
divl
pop
leave
push
xchg
mov
cmp
xchg
push
cmp
inc
testb
inc
sbb
leave
push
mov
adc
sahf
cld
std
xchg
and
aas
cmp
push
cmp
and
push
imul
not
fisubl
arpl
in
daa
lock
push
xor
ljmp
mov
lds
push
pop
and
dec
cmp
orl
or
xchg
lods
jecxz
rcrl
rclb
jl
outsb
outsb
loopne
inc
je
movsl
and
and
adc
jno
lock
dec
cmp
decb
adc
xchg
out
mov
push
mov
mov
mov
fs
xchg
ficompl
stos
pop
fisubrl
add
mov
ret
std
or
pushf
in
xchg
insb
sbbl
in
outsl
jno
cmpsl
mov
stc
xor
xor
popa
and
mov
dec
sub
in
mov
rorl
inc
inc
pop
pop
je
lock
mov
mov
flds
or
stos
jmp
xchg
rorb
mov
add
lret
bound
not
pushf
cmpsl
sbb
mov
adcl
xchg
mov
mov
popa
mov
jge
js
test
sub
out
es
sbb
sbb
dec
repnz
mov
mov
add
je
sbb
xor
arpl
cwtl
das
cld
add
out
jne
fstl
cmp
shrl
cmp
outsb
sbb
test
adc
outsb
jnp
rcll
push
js
repz
imul
gs
pop
mov
jp
mov
and
inc
cli
jnp
and
inc
xchg
daa
shr
pop
push
pop
jnp
shrb
movl
jp
xchg
sbb
pop
jo
jg
movl
mov
and
scas
mov
pop
adc
cli
and
inc
daa
repz
inc
xlat
lds
aam
push
fisttps
aam
ljmp
jns
dec
pop
std
sub
cmp
addr16
dec
fistpl
adc
and
add
xor
dec
push
loop
jecxz
repz
les
or
pop
xor
pop
rorl
mov
xorb
push
or
cmp
push
cmc
lea
lods
jo
out
xchg
dec
xor
jmp
push
ljmp
fs
mov
testl
fwait
cmp
sbb
inc
jmp
sub
sbb
jo
xlat
in
leave
mov
mov
push
mov
iret
test
inc
push
inc
aad
in
mov
popf
dec
pop
mov
enter
cli
cwtl
dec
je
sub
cmpsb
jae
jb
rclb
loope
mov
mov
push
lds
pushf
stos
cmpsb
ljmp
jmp
mov
fndisi(8087
add
xor
sub
sbb
fsubrl
xor
outsl
aad
inc
rorb
out
rorl
and
jne
aaa
mov
out
lret
nop
sahf
jp
pop
pop
or
lea
jno
inc
test
pop
arpl
add
or
roll
sub
inc
inc
mov
adc
dec
imul
push
jge
out
jbe
popf
push
dec
cmc
pop
rcrl
test
adc
pushf
les
add
cltd
movsb
or
lock
mov
add
outsb
push
icebp
mov
adc
imul
add
lods
inc
pop
cmp
roll
mov
divl
dec
sbb
testl
dec
dec
sbb
sbb
mov
sbb
repnz
jbe
pop
xchg
xchg
sbb
xchg
data16
jns
imull
fwait
sub
je
sbb
pop
sbb
cmpsb
push
pop
sbb
mov
int
sahf
shll
jnp
mov
mov
xchg
adc
add
dec
pop
and
mov
push
inc
jle,pn
cmp
scas
push
clc
jecxz
das
cltd
mov
cmp
push
sahf
and
sbb
inc
in
lea
nop
and
mov
subl
dec
and
xchg
loope
pushf
daa
fdivrs
outsl
cld
cmp
setle
out
insl
pop
sahf
nop
int3
insb
sbb
cmp
or
mov
sbb
std
inc
in
or
inc
pop
xchg
pop
aam
arpl
and
mov
ficoms
mov
mov
jae
xor
xchg
push
loop
add
icebp
dec
xor
idiv
pop
mov
scas
stos
jns
fstl
in
mov
jae
test
push
dec
jns
mov
jle
adc
aas
fdivrl
xlat
jge,pt
add
push
sub
scas
sbb
shrb
mov
aas
ljmp
fsubrs
pop
or
int
push
popf
jb
repnz
scas
cmpsb
pop
xorb
pop
js
pop
mov
add
movsb
in
icebp
stos
pusha
dec
or
iret
fimuls
cli
jg
sub
mov
pop
iret
jo
add
aas
adc
jb
fs
pop
mov
fs
sbb
mov
movsb
ret
mov
adc
xchg
int
mov
mov
push
outsl
imul
mov
add
pop
ret
inc
mov
mov
sub
hlt
ret
add
leave
loop
cmp
cmp
sub
dec
mov
inc
loope
sub
mov
push
test
scas
sbb
cwtl
xchg
aam
fistps
mov
test
dec
xlat
mov
fadds
aas
sahf
or
movsl
mov
inc
cmc
scas
pop
and
or
adc
mov
lock
addl
jle
cmp
sub
push
pusha
jg
mov
mov
fs
je
ret
sahf
ljmp
jnp
jge
xor
sahf
and
out
loope
in
cli
push
jge
sub
mov
pop
int3
and
mov
push
dec
repz
fisubl
mov
cmpsl
test
push
unpcklps
jl
in
out
sub
cmp
xor
jmp
es
out
push
test
cmp
xor
lret
jecxz
sahf
inc
xchg
jle
push
pop
rorl
jae
mov
pop
pop
xchg
fincstp
dec
out
adc
jno
sub
and
jmp
js
call
inc
les
mov
xor
xchg
or
lret
mov
or
jbe
gs
mov
sti
xlat
shlb
mov
adc
fwait
test
or
or
and
int3
outsb
mov
out
xchg
clc
orl
add
dec
rcll
and
mov
lcall
incl
xchg
add
jmp
testl
dec
jmp
push
cmp
mov
xor
mov
popa
and
jmp
adc
sbb
je
sub
lods
stos
mov
mov
sub
cmpsl
movl
jle
push
push
dec
into
dec
aad
into
lcall
or
push
and
add
cmp
int
adc
loope
ljmp
mov
popa
jmp
xlat
jns
push
jne
cmpb
mov
ja
cli
cwtl
push
and
cmp
cli
mov
jo
xchg
inc
fdivrs
pop
inc
pop
xorb
call
rep
or
push
xchg
inc
cmpsl
int
rclb
scas
loop
adc
loopne
adc
push
enter
aaa
int3
inc
add
add
jnp
out
dec
jmp
sbb
pop
jnp
ret
or
add
mov
sub
aas
cmp
inc
dec
lret
xchg
test
push
aad
rclb
repnz
dec
subl
mov
mov
shrl
in
hlt
mov
mov
jbe
fiaddl
dec
aam
inc
arpl
aad
iret
daa
pushfw
jg
insb
test
and
mov
stc
sub
popl
pop
pop
or
sub
dec
js
rep
outsb
repz
inc
movsl
sarl
cmpsb
push
or
and
ret
idivl
shlb
sbb
sub
and
out
out
addr16
ret
sti
cmpsb
inc
xor
imul
rcrb
jns
imul
je
and
iret
cld
pop
dec
cmp
loopne
push
push
movsl
xchg
and
jg
pop
adc
fdivs
stos
ja
les
jnp
cld
loope
and
addr16
jmp
jnp
pop
jo
add
jle
inc
cli
mov
sub
xor
daa
fidivl
cmc
push
frstpm(287
sub
movsb
xor
sbb
mov
mov
adc
dec
cmpsl
test
ds
xchg
aad
sbb
cmp
mov
mov
sti
fwait
ja
imul
int3
shrb
xorl
and
jecxz
mov
stos
test
jnp
and
push
xor
scas
mov
in
loop
push
xorb
notb
popa
cmp
mov
sti
mov
js
nop
and
or
mov
jne
insb
fs
dec
mov
fistl
popa
cmp
adcl
imul
sub
jnp
sbb
sbb
fs
sbb
mov
icebp
adc
rcl
or
test
iret
xchg
bound
shrl
into
xchg
mov
shlb
add
xchg
cli
sti
icebp
clc
add
pop
mov
es
xor
cmc
sbb
xchg
and
push
push
stos
mov
je
jns
pusha
xchg
inc
pop
mov
push
cli
inc
cmp
sub
pusha
loope
shll
mov
xlat
or
push
arpl
lods
xor
popf
and
in
mov
cs
fcoml
fs
imul
inc
popa
je
push
ljmp
test
mov
or
sbb
inc
adc
push
inc
ret
hlt
lds
pop
jbe
inc
ljmp
out
ljmp
cs
fisubrl
or
fcompl
sahf
lahf
fists
insb
mov
rclb
andb
sbb
cmp
push
sbb
inc
and
and
sbb
pop
sbb
call
pushf
mov
mov
xchg
in
sbb
popl
sbb
mov
push
cmp
scas
inc
nop
ret
clc
imul
aad
or
int
dec
enter
popf
add
out
fdivs
js
loop
inc
pop
arpl
fs
je
jns
push
add
or
stc
popa
divb
xchg
jbe
adc
clc
je
shr
data16
cmc
mov
inc
scas
mov
xchg
dec
mov
dec
vcomiss
and
fcmovnb
mov
fsubs
stc
and
shl
push
inc
sbb
xor
mov
jmp
cmp
movsl
aaa
cli
jmp
push
push
into
mov
dec
xchg
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
xor
xor
mov
pop
jp
push
jp
mov
test
sbb
mov
fists
decl
cmc
dec
aam
mov
pop
xchg
or
adc
and
push
lock
loopne
pop
xchg
arpl
test
mov
or
xchg
sbb
xor
enter
ljmp
and
ljmp
or
into
push
push
cmp
call
mov
mov
inc
sub
outsb
repz
arpl
mov
cmp
test
outsb
jnp
add
sarb
mov
pop
cmpsl
mov
adc
dec
pop
sub
in
leave
add
mov
in
push
adc
bound
pop
addr16
jns
cmp
insl
outsb
data16
mov
icebp
adc
mov
cwtl
punpckhdq
sbb
mov
aaa
pop
pop
je
inc
lock
mov
xchg
pop
adc
negl
jbe
lcall
nopl
cvttsd2si
and
mov
fisttpl
mov
mov
dec
iret
mov
icebp
divl
xchg
mov
arpl
je
movsb
xor
and
shll
xchg
inc
cmp
out
icebp
push
xchg
mov
mov
icebp
rol
bound
les
test
sbb
jmp
enter
cltd
shrb
lds
mov
js
iret
aad
xchg
ljmp
and
pusha
cmp
cs
addl
je
jmp
xchg
mov
ja
insb
mov
dec
pop
pop
les
ljmp
aas
enter
addr16
pushf
shr
sub
mov
ljmp
xchg
in
fstpl
and
ss
sub
add
out
int3
je
push
pop
aaa
and
fisttpl
scas
shrb
int
lods
out
sbb
test
movsb
rclb
jno
push
inc
lods
xor
mov
and
adc
xchg
xor
mov
jae
jmp
dec
mov
pop
sub
adc
push
outsb
aaa
inc
lock
mov
pop
lods
imul
repnz
popa
int
movsb
lahf
imul
push
scas
mov
out
jbe
sbb
jl
or
mov
mov
ret
xchg
cmp
jne
scas
sub
pop
mov
dec
jle
dec
dec
mov
jp
mov
xorl
test
inc
subb
add
iret
fiadds
or
mov
push
or
std
cmp
outsb
inc
andl
lcall
inc
shl
jge
sub
jns
sbb
inc
inc
push
lret
sbb
jnp
or
int3
lock
jg
mov
fldcw
xor
pop
xchg
dec
outsl
cld
jmp
inc
les
js
or
xor
cmp
sbb
test
pushf
imul
xor
shl
xor
add
jno
add
mov
mov
scas
and
xor
xchg
out
and
je
testb
xchg
std
add
cmpsl
add
es
xchg
xchg
les
push
ja
adc
jo
stc
jmp
mov
push
inc
mov
movsb
stos
cmpsl
mov
push
cmc
mov
cmp
lods
and
bound
int3
inc
dec
jne
mov
dec
cmpsl
push
call
aad
pop
or
add
subb
xchg
inc
rcrl
outsl
adc
arpl
pop
sti
cld
std
pusha
fnstcw
xchg
and
insl
test
and
jns
mov
pop
lods
stos
inc
or
scas
add
push
out
push
daa
mov
andl
lcall
addr16
jae
cwtl
jge
or
inc
data16
mov
gs
push
inc
jne
mov
pop
in
push
pop
push
sbb
in
sbb
add
or
sub
out
xchg
rcrb
fstpt
data16
add
xchg
adc
lahf
scas
pop
fincstp
inc
adc
mov
sbb
in
aam
popf
adc
faddl
jae
lcall
push
adc
mov
xor
mov
adc
xor
cs
pop
dec
ja
inc
xor
jno
cwtl
test
das
sahf
xor
push
andl
add
inc
dec
pop
or
cwtl
loopne
inc
cwtl
mov
loop
pop
daa
sbb
mov
jb
sub
shlb
mov
push
mov
out
clc
mov
pop
pop
xchg
dec
lods
aam
pop
push
add
pop
add
xchg
and
mov
push
js
add
ret
jns
addb
and
jge
ljmp
jg
jno
andl
ds
adc
fidivrl
sti
dec
jl
insl
stos
mov
in
test
cld
pop
scas
jne
xchg
sub
jp
movsb
push
repz
mov
sbb
dec
inc
hlt
add
ret
mov
add
repz
xorl
stos
jnp
jbe
sbb
clc
jge
mov
xor
mov
xchg
jl
aaa
mov
fimull
call
iret
jp
bound
push
pop
dec
lods
gs
jnp
push
mov
jb
ficomps
fucomip
outsb
xchg
orl
jg
mov
call
mov
int
mov
mov
je
mov
pop
repz
mov
lea
add
pop
xorl
icebp
jmp
xcrypt-ctr
cli
in
push
or
test
scas
push
fs
je
orl
shll
inc
ljmp
cmp
clc
jle
std
imul
seto
pop
lods
icebp
outsl
in
jg
popf
iret
and
dec
in
scas
adc
jmp
or
xchg
cmpsb
repz
lcall
pushf
icebp
dec
cltd
les
stos
mov
outsl
lret
aam
mov
mov
pop
adc
fdiv
and
dec
jmp
aam
adc
movsb
hlt
mov
cli
dec
and
dec
hlt
test
jl
cltd
arpl
mov
cmp
cmpsl
test
push
push
fstl
sbb
fmull
lret
cmp
lock
add
popf
pop
addb
push
enter
icebp
push
pop
cmc
mov
iret
movsb
scas
sub
mov
mov
adc
sbb
ficoml
popf
inc
add
and
out
pop
cmpsb
sbb
mov
mov
jb
cmp
mov
push
aas
test
out
in
mov
xchg
pop
mov
sahf
fdivl
mov
push
xor
repz
push
xchg
xor
addr16
data16
mov
pop
mov
test
add
stos
movsb
cmp
aaa
pop
cmc
and
jae
out
gs
jbe
fcomps
pushl
invd
out
sbb
push
cli
push
jns
outsb
add
stos
pop
or
decb
popf
cmp
jne
loopne
sub
inc
or
cmpsl
cmc
pop
ret
aaa
add
mov
push
mov
test
lret
ljmp
pop
nop
push
dec
testb
or
call
aad
ljmp
or
ss
popf
cmc
add
bound
movsl
cmp
push
addr16
outsl
sbb
movsl
pusha
fwait
lock
adc
push
xchg
test
push
andb
icebp
out
push
jb
pop
lret
mov
jp
adc
xor
jae
test
filds
add
or
repz
mov
ret
test
xchg
mov
fnstenv
and
fmull
sbb
xor
stc
mov
outsb
adc
jle
sub
popf
or
jae
insl
mov
mov
movsl
enter
outsl
out
jle
lods
xorl
cmp
mov
add
in
pop
arpl
fsubs
and
inc
push
mov
lea
push
jno
stos
int3
insb
bound
into
test
push
sbbl
subb
pop
imul
push
les
dec
repz
push
add
fstps
ss
sub
jnp
dec
inc
pop
or
jb
lds
addl
dec
subl
test
aas
or
rclb
clc
fdivs
insl
in
pop
jnp
daa
inc
pop
pcmpeqb
sbb
push
sbb
xor
lea
movsb
cs
lahf
jbe
add
sub
icebp
sbb
shrl
aad
int
leave
pop
add
xor
dec
les
inc
push
cmp
mov
out
mov
imul
in
ds
jne
push
paddd
and
lret
sub
pop
and
jno
das
cmp
out
xor
add
imul
ret
adc
in
xor
ret
jp
and
int3
cmp
mov
push
lret
pop
inc
push
sbb
mov
scas
shrl
arpl
sti
pop
hlt
insb
movsl
xor
rcrb
mov
pop
mov
push
cli
aam
inc
das
mov
imul
mov
out
dec
xor
aad
icebp
xchg
sbb
jmp
movsl
test
pop
lods
stc
pop
les
xchg
jbe
xlat
xor
jg
cmp
xchg
daa
pop
out
aas
aam
mov
mov
inc
adc
xchg
pop
fiadds
add
xchg
jo
push
push
jbe
cmpsl
je
sti
adc
lcall
scas
ss
and
jge
leave
dec
rdmsr
mov
dec
xchg
inc
mov
outsb
push
dec
repnz
out
jne
mov
movsb
int
pop
and
sbb
insl
and
popf
insl
or
sahf
test
cmp
jmp
int3
jae
push
jae
push
mov
inc
inc
jns
and
movsb
ss
sbb
add
mov
mov
mov
sbb
sbb
and
mov
inc
cmp
push
push
pop
clc
mov
push
call
or
arpl
cmpsb
jl
xchg
enter
jecxz
add
mov
xor
gs
nop
add
pop
pop
mov
mov
mov
out
push
xor
pop
movsb
mov
lcall
cmp
js
and
js
and
shl
add
add
ficompl
jns
pushf
sahf
sbb
loopne
or
mov
adc
cs
pop
mulb
imul
pusha
sbb
mov
andb
or
mov
scas
add
ja
cltd
push
cli
push
jns
jbe
mov
aas
ds
fdivl
jl
mov
cmpsl
in
add
jb
je
adc
mov
mov
mov
jno
out
adc
sub
pop
outsb
pop
iret
sbb
mov
cmp
cwtl
sbb
cmp
push
inc
sub
cli
test
mov
cmpsb
andl
xor
jg
add
ds
and
cmp
int3
test
push
push
cltd
movsb
out
lods
cld
mov
in
push
adc
lret
dec
cmp
fisubrl
mov
push
pop
sbb
or
iret
jmp
inc
aam
xchg
adc
sti
push
add
xchg
lea
push
rorl
aaa
inc
int3
incb
adc
cmp
mov
push
cwtl
mov
dec
mov
sub
fisttpl
jnp
shll
mov
in
arpl
ljmp
jmp
insb
adc
mov
sub
and
or
cld
push
ljmp
lcall
pop
movsb
mov
jecxz
aas
jge
sub
xorl
cwtl
pop
aaa
push
out
shrl
mov
cli
jle
out
xor
jnp
add
pop
repz
sti
ljmp
orb
rcrb
lds
inc
mov
adc
dec
stos
roll
bound
cwtl
shl
stos
aam
clc
pop
jne
sti
loope
ret
inc
test
data16
add
dec
sbb
sbb
in
divl
imul
mov
repz
xorl
daa
movhps
xor
sarb
loope
push
xchg
jb
xchg
lock
xchg
ret
jecxz
lea
lods
or
xlat
clc
mov
mov
loop
fildl
xlat
mov
xor
sub
xchg
rcll
mov
idivb
xor
or
fs
jo
xor
inc
or
lods
and
and
mov
mov
xor
in
mov
cmpl
push
js
inc
mov
push
push
dec
and
arpl
push
sbb
scas
xlat
or
sub
sbb
cmp
jae
divb
gs
mov
xorb
dec
lahf
aad
or
lea
lea
inc
rcll
mov
scas
pop
in
mov
push
mov
add
mov
mov
push
mov
jle
jns
rcrb
mov
push
dec
or
cld
je
mov
popa
das
lret
mov
mov
pop
idivb
in
or
icebp
lods
ja
inc
mov
in
negb
inc
loop
mov
mov
int3
mov
arpl
jne
mov
adc
mov
ja
fistpll
fstl
xor
and
pop
mov
inc
xor
lock
adc
mov
dec
cli
cmp
js
rclb
stc
xchg
bound
mov
jp
in
add
das
jo
mov
lcall
mov
dec
pusha
inc
or
xor
mov
inc
sbb
xor
pop
shll
mov
and
mov
clc
outsb
or
sti
adc
dec
ljmp
jecxz
cwtl
cmpsb
hlt
out
push
sbb
push
push
xor
test
dec
movzbl
mov
insl
adc
sub
jbe
jo
xor
push
and
push
mov
repnz
sub
xchg
mov
mov
out
and
cmp
fidivrs
inc
insb
add
rolb
pop
push
jne
sbb
mov
adc
mov
mov
notl
jno
ds
fdivs
push
sub
pop
fucomip
mov
adc
icebp
imul
xchg
add
pop
ret
mov
push
inc
and
in
push
adc
sbb
push
lret
or
out
add
or
add
data16
inc
ljmp
dec
jbe
dec
mov
repz
and
es
addb
stc
pop
sbb
mov
jle
pop
or
arpl
xchg
ret
or
jno
stos
mov
mov
repz
xor
loopne
std
test
pop
push
mov
sbb
inc
rorb
out
rclb
daa
das
push
and
mov
pop
add
aad
sub
rcll
test
sub
cmp
xchg
stos
xchg
out
pop
inc
mov
xlat
cld
rcr
add
cmp
pop
imul
fildl
aas
sub
push
aaa
add
sub
pop
mov
int3
jg
stos
or
mov
adc
jnp
push
xor
out
adc
xor
add
pmulhw
pop
in
movups
adc
fistps
fsubp
sub
fiadds
push
dec
sub
sub
cmp
mov
les
mov
les
mov
inc
cmc
imul
jbe
pop
push
data16
pusha
add
pop
clc
adc
push
mov
and
adc
xor
cmp
jae
outsb
outsb
add
aaa
rorl
aas
pop
adc
sbb
popa
in
mov
jmp
xchg
xor
stc
scas
mov
jno
push
cmpsb
or
push
mov
icebp
and
shlb
cwtl
add
ds
inc
out
insb
adc
xlat
xchg
pop
roll
loop
push
test
fsub
sbb
cld
sbb
mov
rclb
mov
jb
clc
jl
and
cmp
fisubrs
jnp
mov
aad
xchg
or
push
sti
iret
dec
dec
and
xchg
xor
xor
pop
loope
in
cwtl
popa
nop
add
repz
in
jbe
lods
jae
xchg
xor
xchg
gs
jecxz
stc
out
sbb
dec
jle
mov
mov
stos
mov
outsl
xor
mov
push
in
daa
shl
lcall
fs
aaa
lods
mov
xor
mov
push
lea
cmp
shr
adc
ret
mov
dec
hlt
hlt
push
push
and
test
in
js
fisubl
outsl
bound
push
mov
movsl
sub
jle
push
sub
cld
ret
and
jp
aaa
scas
sub
das
test
pusha
test
pusha
pop
mov
or
test
jnp
loope
pop
ljmp
loope
lret
inc
stc
sub
ja
test
je
sbb
sahf
arpl
popa
cmp
lret
pop
out
inc
ja
push
dec
inc
out
push
pop
push
outsl
repz
jmp
std
sbb
adcb
pop
mov
add
sbb
xchg
fmull
push
dec
in
sub
add
xor
shlb
add
add
scas
shl
pushf
or
inc
imul
call
inc
cs
inc
leave
test
repnz
movsb
test
int
test
out
xchg
cmp
add
and
hlt
jb
xor
mov
push
ljmp
daa
dec
inc
fildll
rorb
push
mov
xchg
push
jo
sbb
insl
mov
mov
cmp
inc
xchg
mov
fbld
cmp
stc
and
and
xchg
jnp
dec
jl
mov
push
xor
cmp
pop
fisubrl
add
xchg
adc
sbb
adc
lods
loop
jl
pushl
scas
jae
or
cmp
inc
jl
pop
lods
aam
fst
pushf
sbb
inc
cltd
xor
jb
fisttpll
es
add
je
popf
push
adc
sub
push
cltd
push
aas
push
out
outsl
lcall
mov
loopne
das
sbb
adc
xchg
xor
jae
shrl
cltd
add
dec
enter
push
daa
mov
xorl
arpl
jb
dec
addr16
in
sbb
dec
or
int3
xor
pop
jns
lock
mov
lds
adc
dec
inc
or
shll
outsl
lahf
mov
arpl
mov
sub
divl
ret
push
insl
push
xchg
stos
mov
pop
cmp
nop
jp
sbb
inc
fs
nop
mov
les
dec
out
or
mov
sbb
scas
push
mov
mov
jbe
lahf
push
xchg
mov
push
inc
imul
je
cmpsb
pop
push
xchg
fmul
ss
push
mov
jp
fstl
push
cmc
cmp
cld
outsl
and
out
sahf
add
jb
aaa
cmpsb
mov
xor
lds
sub
loopne
fdivrl
push
adc
dec
decb
inc
cmp
lahf
sub
mov
dec
adc
cltd
xor
inc
arpl
cmp
stos
ss
andb
or
std
imul
jne
jae
dec
mov
pop
add
sbb
stos
addb
shlb
xor
rolb
ds
das
lahf
sbb
jge
mov
into
ret
mov
sub
int3
xor
hlt
jns
cmp
mov
out
nop
cld
xchg
mov
and
arpl
js
adc
xchg
ljmp
test
aam
cmp
sub
sub
xor
stos
clc
dec
cld
jecxz
jae
xor
inc
ljmp
mov
add
leave
iret
loop
xor
cli
dec
outsb
in
pop
out
std
scas
arpl
int
popf
pushw
sub
pushf
pop
xchg
es
notl
pop
push
sub
jg
shll
jns
pop
loope
mov
mov
inc
jge
sub
popa
sbb
push
stos
rol
in
dec
shll
aaa
sbb
fwait
js
sub
jmp
popa
fists
inc
movsb
aas
mul
and
xchg
lahf
lods
inc
xchg
xchg
sti
sbb
aad
clc
or
test
sbb
lret
mov
xor
ret
stos
and
pop
unpckhps
jmp
in
je
rcrl
orb
or
stos
fwait
int
shlb
xchg
push
sbb
imul
popa
das
pop
pop
dec
sbb
mov
jg
rcl
stos
aam
adc
jle
out
stc
js
and
in
pop
ret
jp
inc
push
mov
mov
insl
mov
les
xchg
jb
xchg
addr16
push
insb
xchg
dec
ret
decb
lea
and
xchg
xchg
repz
lods
movsl
ret
lret
rol
in
dec
jae
ror
jecxz
cmpb
dec
mov
cmp
fisubrl
xchg
movb
mov
inc
lea
test
push
and
popf
cwtl
push
xchg
sub
push
sub
adc
movsb
pushf
out
jmp
add
mov
push
jg
mov
loopne
aad
in
test
fildll
add
loopne
ret
jo
clc
push
sub
out
ljmp
pop
push
mov
inc
rep
mov
push
lret
pushf
mov
pop
and
cmp
xchg
bound
sbb
sarl
add
in
out
pop
add
nop
loopne
sbb
mov
aam
sbbl
or
xchg
loope
sub
inc
add
movsb
sub
xchg
imul
dec
xchg
jns
les
das
xor
xlat
std
scas
mov
movsb
test
jnp
clc
nop
and
and
xchg
imul
stos
mov
sbb
mov
push
or
out
mov
mov
into
out
pop
and
repnz
and
and
insb
aad
repnz
lahf
insl
and
jbe
leave
mov
mov
cmp
imul
push
loop
or
outsl
dec
lods
push
inc
mov
jne
jns
xor
hlt
data16
std
bnd
inc
add
lret
fcmovb
loop
scas
add
lahf
cld
cmpsb
fs
cmp
cmp
add
popf
mov
xchg
or
pop
push
pop
repz
mov
lahf
jecxz
pop
sub
or
aaa
xchg
push
xor
insl
shlb
jne
jne
mov
dec
lock
sub
mov
jmp
cmp
cltd
jle
fyl2xp1
push
ljmp
call
adc
adc
pop
mov
inc
add
mov
lret
rorl
mov
inc
je
sbb
loop
and
je
pop
pop
mov
das
mov
bnd
js
shrb
in
xlat
sbb
insb
mov
sbb
xchg
jne
movsb
mov
adc
test
jne
mov
mov
dec
xchg
inc
mov
mov
sbb
inc
cwtl
jp
stc
gs
cmpsb
cmpsb
jmp
jnp
add
cmp
xor
cmp
arpl
pop
in
addr16
add
shrb
fcomip
iret
in
sbb
push
or
add
outsb
push
lods
push
lahf
daa
test
xchg
cmpsl
arpl
push
ret
cmp
sbb
lret
mov
aam
hlt
fucompp
push
sub
add
and
cmp
movsl
std
add
xor
sub
lods
or
mov
xchg
jnp
fldenv
inc
js
cmp
mov
mov
xor
mov
or
push
ds
jns
fists
es
push
cmpsl
fldcw
or
lcall
pop
ficompl
add
je
testl
pop
or
pop
pop
push
add
hlt
push
add
fistpll
movsl
jl
popf
mov
pop
cmc
mov
out
out
bound
cmc
add
out
stc
jle
or
cmp
imul
sbb
out
cmpsb
andb
push
ret
push
jl
out
test
pop
ljmp
iret
adc
lret
mov
or
pop
mov
mov
lahf
fwait
ret
es
inc
rclb
pop
mov
outsl
dec
pavgb
fcmovne
ds
cwtl
imul
je
into
mov
sbb
frstor
xchg
movsb
cmpsl
negb
jnp
divl
movsb
xor
add
dec
jb
sbb
repz
shll
xor
popf
add
or
cmp
fcoms
inc
repz
ror
in
shll
pop
imul
rorl
inc
stos
mov
repnz
xchg
outsb
mov
test
cmp
sbbb
scas
ret
jmp
add
into
in
js
fsts
and
popa
repnz
and
dec
in
add
pushf
adc
movsb
arpl
and
cmp
fisubrl
push
pop
adc
popa
lods
lcall
loope
movsl
mov
data16
jb
jp
adc
or
ds
adc
inc
add
or
je
popa
adc
dec
dec
js
mov
out
or
jl
insb
aas
dec
aas
xor
loop
roll
pop
cmp
and
pop
sbb
add
fistl
or
xchg
repz
fisubrs
mov
in
lds
sbb
jbe
adc
mov
inc
fwait
lret
lret
jg
sub
and
sub
adcl
push
pop
jne
les
jle
sub
aaa
clc
push
sub
rcrl
ror
mov
sti
jp
fcoms
fisttps
fsubs
ja
cmpsb
mov
and
testb
sbb
cmpsb
pop
pop
mov
cmpsb
sbb
dec
jp
outsl
mov
lock
loope
in
jns
scas
dec
cmp
arpl
das
mov
or
mov
rcll
insb
pop
insl
jae
outsb
neg
jo
mov
dec
outsl
vmwrite
mov
push
mov
shlb
rolb
je
pop
inc
aas
pop
jp
mov
pop
imul
in
xchg
inc
loope
cmp
jge
stos
in
insl
orl
dec
in
jecxz
dec
popa
or
shll
aas
insl
mov
cmc
insb
xchg
into
xchg
sbb
int3
subb
clc
inc
mov
pop
sub
fldl
xor
mov
std
imul
cmp
mov
sbb
mov
add
fwait
pop
loopne
incb
test
mov
stos
xchg
loop
inc
icebp
lret
lods
push
pusha
xchg
and
mov
xchg
inc
mov
cwtl
or
cs
push
negb
mov
frstor
mov
imul
stos
insb
cld
jae
cmp
shrb
lods
adc
xchg
add
ret
push
and
sahf
sbb
push
xchg
not
into
adc
pop
adc
jge
enter
mov
dec
aaa
aas
or
pop
and
push
data16
cwtl
mov
shll
mov
lods
mov
mov
in
add
jecxz
mov
nop
jnp
loop
sbb
leave
sub
xchg
fwait
or
adc
or
pop
out
scas
bound
xchg
rorl
jp
scas
mov
push
push
inc
enter
jae
pop
xor
in
cmp
outsb
inc
jg
mov
dec
paddb
pop
push
shrl
call
cmp
push
dec
adc
xor
cmp
dec
pop
dec
push
jmp
xchg
adcb
shll
dec
icebp
push
or
mov
mov
xchg
nop
mov
inc
or
add
aam
movsb
mov
jne
xchg
or
mov
int3
ja
cld
ja
mov
mov
adc
out
push
add
insl
inc
and
and
lahf
repz
push
jns
inc
push
leave
movsb
add
dec
inc
inc
xor
mov
and
dec
sbb
sbb
lahf
cli
xchg
jge
loope
dec
jnp
orb
dec
leave
cmpsb
inc
int
sarb
push
cmp
out
cli
cwtl
mov
scas
out
lahf
ret
add
lods
outsb
sbb
cmpsl
adc
out
sub
outsl
xchg
out
subb
mov
xorl
in
push
mov
jmp
cwtl
or
push
pop
adc
lahf
and
adc
xor
in
pop
inc
adc
adc
ret
enter
cwtl
es
sbb
subb
leave
jnp
lods
pop
xor
enter
sahf
jecxz
pushf
nop
adc
mov
insl
aaa
jne
sbb
mov
inc
rcrb
insl
fnstsw
sahf
push
jno
lds
sub
inc
repz
aas
mov
test
jp
shlb
gs
pop
xor
cltd
clc
push
pop
fisubs
inc
mov
in
stos
test
enter
sbb
add
stos
movsl
insl
ror
sti
sti
push
cmp
neg
cmc
jp
xchg
iret
ja
inc
test
dec
in
sbb
pop
ret
into
xchg
out
xor
das
sub
mov
sub
mov
mov
fwait
imul
xlat
cmp
jle
fmulp
inc
mov
iret
fcmovne
inc
jl
test
adc
call
call
aam
dec
fisttps
cmp
fmull
xchg
mov
aad
orl
je
mov
push
fmull
daa
mov
jmp
mov
int
dec
pop
dec
xor
insb
orb
cmp
push
pop
fnstcw
ss
sbb
mov
ljmp
adcb
out
fsincos
lea
stc
scas
jne
dec
xchg
inc
push
faddl
mov
cmp
and
cmp
add
pop
out
cmp
add
int3
and
cmp
mov
dec
push
test
insb
popf
mov
rcl
ret
or
xor
adc
dec
rcl
cmp
xor
inc
add
cmp
fs
addr16
pop
scas
and
jg
push
sarl
loope
inc
iret
lea
daa
mov
lods
ret
mov
stos
das
xchg
xchg
xor
and
inc
mov
movsb
and
jmp
pop
lock
movsl
jg
sbb
std
inc
aas
test
mov
pop
into
ja
mov
lcall
into
pop
cli
shrb
mov
decb
ss
lds
lods
rclb
lods
mov
jb
rorl
jmp
idivb
and
pop
insb
sbb
mov
iret
jns
add
or
stos
jmp
pop
hlt
mov
add
sbbl
add
xchg
inc
or
leave
mov
push
popa
xchg
fs
inc
adc
nop
lret
xchg
or
arpl
sbb
cs
mov
xchg
xchg
xchg
clc
leave
sub
adc
dec
jnp
pslld
loop
push
dec
add
xor
sbb
lcall
xchg
pop
outsb
add
cmp
adc
push
push
adcb
in
sub
add
adc
jnp
movsb
pop
ret
adc
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
mov
inc
dec
push
jge
or
jp
jmp
in
cmc
mov
mov
inc
loopne
mov
dec
incb
dec
xorl
addr16
or
mov
lret
cmp
rorb
xor
adc
push
nop
ret
ss
xchg
jmp
add
xor
aas
xor
sbb
inc
add
test
mov
cmp
call
outsb
test
enter
testb
push
js
dec
sbb
xchg
sub
jns
leave
lods
and
push
sub
mov
js
jbe
sub
push
mov
lods
sbb
lods
inc
call
or
mov
adc
mov
push
cmc
aaa
or
xchg
ds
push
inc
xchg
mov
xor
daa
popf
test
push
dec
jb
jl
mov
fwait
and
add
jl
leave
jbe
sub
jb
and
sti
lock
cmp
mulps
mov
btcl
rcrl
mov
mov
pop
lods
adc
sbb
cwtl
cmp
fidivl
mov
add
out
cmp
stos
fimull
and
cmp
shlb
mov
cmc
fiadds
mov
stc
push
mov
cmpsb
or
push
cltd
hlt
or
dec
and
xchg
cmp
sbb
leave
in
imul
mov
pop
cmpb
jge
sbb
ret
xchg
jmp
pop
xor
inc
mov
cmp
push
dec
cmp
push
repnz
sbb
or
inc
popf
out
sarb
cmpsl
add
jl
ja
mov
rolb
jo
data16
mov
fcmovu
das
ret
add
scas
rclb
int
test
ret
gs
sub
and
outsb
adc
cld
sub
jp
mov
loopne
sbbb
pand
das
sbb
icebp
mov
mov
xchg
jnp
gs
sarl
mov
xor
daa
int
xchg
out
imull
mov
insb
call
icebp
jno
mov
cmp
inc
test
je
pop
popa
cmp
stos
outsl
daa
insl
stos
inc
cmp
rcrb
lds
cld
cli
cli
jmp
pop
inc
popa
jne
jge
mov
mov
cmp
adc
shll
shlb
add
lcall
or
jnp
sbb
sbb
in
dec
aam
insb
test
fldl
cmp
jge
dec
xchg
xor
xchg
scas
sar
ret
sar
in
inc
js
mov
pop
mov
in
cmp
or
push
mov
xor
xor
test
sar
imul
gs
fadds
add
inc
xor
or
imul
andl
ljmp
cmc
data16
xor
aam
push
and
pop
cwtl
pusha
lret
outsl
popf
jmp
sbb
lret
fistl
xchg
adc
les
mov
loopne
mov
loop
rcr
mov
leave
stc
int
pop
cmpsb
xlat
sarl
mov
mov
fisubs
jl
dec
out
loopne
push
scas
adc
jmp
sbb
shll
rcrb
shll
icebp
cs
sub
andl
iret
daa
push
push
dec
ja
add
enter
divl
mov
sar
lods
repz
cld
and
aad
adc
and
xchg
inc
shlb
std
and
ret
xchg
les
aam
pop
rol
jmp
sub
out
push
iret
sbb
stc
stos
xor
lds
out
cwtl
pushf
repz
pop
pop
lret
jecxz
js
xor
sub
wbinvd
xor
andb
int
sub
ljmp
mov
pop
mov
xchg
fmul
pop
or
popf
stos
clc
push
fdivs
pop
inc
stos
in
in
push
sbbb
push
nop
inc
aam
sbb
arpl
cmp
addr16
shl
jmp
adc
and
test
push
icebp
ja
mov
inc
and
or
imul
cmpsb
mov
jo
addr16
and
push
sbb
pop
push
adc
dec
or
xor
movsl
data16
jge
out
fs
pop
shlb
mov
inc
test
lcall
scas
dec
push
xchg
daa
pop
bound
xor
inc
mov
divl
mov
addr16
test
push
or
es
outsb
pop
sbb
aaa
pusha
loop
lret
add
imul
mov
addr16
or
mov
outsl
js
aaa
scas
cld
fdivrl
or
inc
arpl
icebp
pop
shll
pop
test
inc
xchg
lock
dec
in
outsl
mov
xchg
cltd
adc
in
nop
imul
out
mov
lret
xchg
ficompl
scas
mov
fsubl
test
shr
shll
mov
hlt
insl
push
aad
adc
mov
rorl
subb
mov
pop
roll
xchg
aas
jae
ret
sbb
lock
push
adc
jae
in
mov
stos
lock
adc
dec
mov
and
call
orl
adc
fwait
ja
popf
divl
sbb
xchg
sbb
mov
sub
aaa
mov
cltd
loope
lret
je
inc
cs
pop
int3
lds
jle
ds
add
aam
cmc
dec
cld
jge
jl
sub
and
mov
insl
outsl
or
loope
xor
and
pop
shlb
fildll
fwait
dec
xor
stos
sub
outsb
icebp
mov
jns
push
xor
add
cli
les
daa
fsubs
repz
in
sbb
jp
and
xor
inc
daa
pop
imul
sbb
or
cmpsb
aas
inc
daa
vpcmpeqd
negb
pushf
into
insl
jecxz
mov
pop
icebp
enter
pop
pop
adcl
inc
ds
mov
mov
testb
push
mov
arpl
lods
cltd
into
pop
sub
cmp
pushf
mov
cwtl
or
cmc
xchg
push
mov
mov
lods
pop
lds
sub
xor
out
or
jns
mov
xchg
mov
push
pop
or
or
pop
nop
pop
mov
mov
ret
cmpsl
jmp
sub
js
jmp
push
and
xor
xchg
mov
and
or
pop
ja
sbb
test
mov
into
mov
and
xor
jnp
sbb
xchg
lcall
pushf
call
fsubl
mov
mov
mov
int
mov
lock
cmp
int3
xor
lds
xchg
cmp
data16
test
mov
ljmp
push
jmp
or
mov
inc
inc
and
scas
push
and
cmp
fstl
stos
push
and
cltd
inc
push
sti
or
mov
mov
es
push
ss
fildl
mov
pushf
stc
icebp
mov
mov
push
mov
push
imul
cld
mov
adc
xor
lahf
pop
mov
daa
notl
inc
or
sti
pop
jae
fmuls
pop
aam
nop
sbb
mov
ds
push
in
xchg
popa
mov
push
inc
rclb
hlt
xor
fmulp
mov
pop
nop
and
jp
inc
imul
pop
lea
sub
jbe
sbb
xchg
out
push
shll
cltd
es
aas
shlb
cmpsb
stos
xchg
pop
mov
sbb
ror
mov
cmp
pushf
in
outsb
pusha
bnd
in
sub
pop
sahf
and
dec
or
push
pop
stc
lea
pop
or
mov
jecxz
hlt
sti
test
popa
dec
jo
clc
addr16
sbb
out
insl
cmp
mov
cld
out
pop
jno
cmc
ds
mov
jne
push
sbb
push
mov
pop
mov
mov
aam
out
xor
mov
or
ds
cmp
dec
and
cmp
rcrl
cmpl
clc
test
push
or
sahf
imul
ljmp
or
lret
lret
dec
ja
push
jo
and
xor
push
lods
rcr
push
jo
sar
shl
pop
inc
sub
clc
mov
push
mov
mov
or
shr
xchg
lcall
sub
hlt
incb
pop
and
test
sbb
mov
push
dec
into
pop
mov
and
loopne
aas
into
mov
jo
adc
mov
add
imul
xor
cmp
xchg
mov
fildll
cmp
and
fwait
xchg
mov
out
test
mov
dec
adc
movb
insl
mov
pop
push
or
pop
jg
sbb
mov
push
add
jbe
dec
lds
int
cmp
or
push
mov
lods
addr16
add
jl
adc
add
sbb
mulb
push
in
or
stc
add
sbb
outsl
jg
loope
push
mov
pop
daa
jne
in
push
pop
loopne
sbb
stc
mov
push
jnp
jp
outsb
dec
xlat
daa
push
cld
or
sbbl
ret
xlat
push
mov
ljmp
jbe
sub
xchg
mov
jg
out
out
lahf
dec
call
pop
xchg
push
in
stc
jae
sbb
push
loope
jns
addr16
add
xorl
outsl
mov
stos
adc
lea
push
lods
dec
xor
stos
sub
sub
jno
int
pusha
jl
outsb
sbb
mov
cmp
mov
in
int
insb
mov
and
lods
fxch
int
xchg
pusha
mov
xor
adc
lods
push
xor
cli
cmp
sub
fs
add
cmp
push
je
iret
sti
adc
xchg
testl
sub
cli
in
fsubs
xchg
jmp
lcall
nop
scas
aam
mov
xchg
inc
inc
and
cmc
inc
dec
xorb
lods
push
mov
push
dec
inc
or
sub
mov
cwtl
dec
mov
fwait
push
jg
movsb
jmp
adc
add
push
shll
inc
jecxz
jo
clc
sbbl
adc
les
loopne
movsl
dec
mov
mov
pop
in
out
insl
mov
sahf
inc
shll
cmp
add
xchg
dec
push
cwtl
xchg
subb
pop
icebp
dec
xchg
push
ljmp
bound
addr16
add
movsl
xor
in
adc
push
sbb
in
stc
es
sub
xor
mov
mov
insb
out
popa
outsb
dec
rcrl
dec
mov
mov
nop
jp
and
movb
fdivrl
mov
pusha
xchg
and
xor
sbb
dec
xchg
push
je
fwait
pusha
fnstenv
sti
inc
movsb
cmc
fucomi
xchg
nop
stos
sub
inc
dec
mov
js
mov
adc
sub
lret
arpl
insl
cmpsl
insb
push
icebp
or
frstor
inc
daa
cmpsl
mov
in
sti
inc
in
arpl
mov
push
imul
test
mov
addr16
pop
adc
test
iret
mov
fcoms
jae
cmp
cltd
rorb
scas
cmp
dec
jns
ss
jg
mov
xor
xchg
hlt
pop
aad
mov
mov
push
dec
mov
fwait
jno
pop
pushf
xchg
outsb
pop
enter
loopne
cli
movsb
and
lock
or
push
sub
push
cwtl
lret
mov
or
sub
mov
test
cmp
iret
xchg
outsl
outsl
xchg
pop
sahf
xor
mov
enter
xor
xor
dec
popf
push
cmc
pop
jae
adc
adc
je
mov
cmp
add
pop
adc
and
cmp
stos
pop
scas
jo
out
mov
push
stos
xchg
je
mov
cmp
pop
xor
cwtl
and
fisubs
gs
jge
xchg
push
dec
mov
popa
sub
aaa
js
sbb
insl
and
cmp
aam
dec
imul
imulb
inc
cmpsb
mov
pushf
sysenter
pop
push
aad
pop
lods
icebp
push
test
and
mov
idiv
addb
jne
pop
imul
jb
mov
push
daa
das
fistpll
iret
and
add
jg
lds
mov
xor
push
sahf
sub
sub
decl
cmpsb
fcomp
cmpsl
add
subb
xor
mov
lret
sub
and
pop
push
xor
dec
xchg
xchg
inc
adc
rcrb
jle
jne
icebp
xor
in
mov
scas
ret
or
imul
inc
int
mov
call
mov
sbb
mov
jns
test
and
push
orb
jle
push
add
loope
jle
cmp
sarb
mov
push
push
jne
mov
mov
cli
xor
dec
fnstenv
out
add
cmp
pusha
mulb
inc
push
sbb
mov
or
add
aam
repz
adc
push
mov
jno
and
inc
stos
push
test
push
repz
js
orl
sub
jp
jne
jg
mov
adc
push
push
cld
xor
xor
ljmp
imul
mov
movsb
jo
sbb
imul
pop
stos
sbb
mov
daa
repz
mov
cmpb
push
mov
sbb
or
xchg
cmp
adc
js
jl
addl
sub
pop
addb
aad
and
mov
out
xchg
mov
cmpsl
ret
jmp
mov
cli
adc
push
sub
scas
or
mov
mov
ljmp
test
pop
lds
movsb
xchg
cmp
inc
jl
lds
mov
cmc
xchg
xchg
addr16
add
int3
mov
aaa
aad
sbb
movsl
and
subb
dec
cld
sbbl
cmc
insl
stos
jne
cltd
ljmp
xchg
pop
lret
jbe
andl
jne
adc
jmp
scas
out
push
mov
icebp
inc
negb
inc
xor
lret
cli
sbb
repz
pop
sahf
sub
or
inc
mov
negb
adc
pop
mov
lea
faddl
xchg
out
roll
jl
fistps
fcoml
sub
and
prefetch
or
xlat
jbe
ret
adc
stc
add
mov
fcompl
sbb
jmp
lret
jo
mov
lcall
ss
movsl
mov
testl
add
insw
scas
mov
cmc
push
leave
repnz
inc
adc
inc
mov
sahf
aaa
mov
int
cmpsl
cmc
mov
pushf
idivl
insl
lock
addr16
pusha
outsl
mov
push
test
add
les
aad
mov
lods
cmp
and
adc
pop
test
add
das
pop
aas
xchg
decb
cmp
outsl
addr16
or
and
fisttps
dec
fcompl
mov
mov
das
jbe
imul
data16
adc
hlt
jle
jl
call
enter
jg
cmp
pop
outsb
bound
adc
in
aam
jbe
jnp
rcll
sahf
js
out
subl
sahf
pushf
scas
jecxz
mov
pop
adc
ret
mov
sarl
adc
mov
andl
cwtl
roll
ljmp
dec
mov
mov
cwtl
ds
lret
pop
cld
fimuls
into
imul
mov
stos
cmp
popf
cltd
outsb
push
negb
rorb
or
mov
mov
adc
loop
jno
repz
and
mov
mov
push
xchg
push
jb
sub
add
les
or
xchg
inc
das
aaa
sbb
sub
int3
push
cwtl
add
arpl
lods
mov
mov
cmp
mov
fldt
notb
push
test
dec
mov
xor
cmpsl
leave
pop
loop
push
dec
addb
das
cmp
push
inc
and
in
and
or
push
out
xor
mov
in
iret
mov
xchg
in
icebp
adc
xor
rclb
fidivrl
xor
repnz
xchg
add
popf
jecxz
or
xchg
cmpsb
test
mov
int3
ds
adc
sahf
aam
inc
ficomps
je
sarl
push
mov
mov
adc
mov
pop
repnz
fildl
arpl
dec
push
setns
pop
push
or
daa
dec
mov
dec
and
in
add
dec
inc
insl
push
insl
imul
jge
or
sti
insb
lock
sti
xchg
mov
mov
fadd
mov
loop
mov
or
jl
hlt
push
inc
push
mov
mov
and
rclb
xchg
movsb
mov
adc
push
insb
mulb
ds
xor
outsl
xor
int3
lahf
lahf
mov
mov
stc
aaa
and
jl
pop
sahf
mov
cwtl
lcall
xchg
xor
dec
shll
movsb
dec
jle
addr16
imul
xor
pop
inc
sti
inc
loop
mov
int3
pusha
fcmove
test
in
mov
adc
bound
cs
and
xchg
and
xor
test
loop
xchg
pop
jecxz
inc
mov
aad
loopne
mov
loopne
sbb
gs
loope
pop
cli
mull
mov
fbld
jl
outsb
adc
ret
fs
enter
insl
xor
sar
sbb
outsb
dec
int
loopne
div
mov
push
cmp
mov
in
repz
imul
lret
push
cld
divw
js
sarl
test
cmpsb
bound
dec
cmpsl
fcmove
adc
cmp
imul
push
pushf
dec
lds
xlat
movsl
data16
sbb
shlb
lea
dec
cmp
add
in
stos
filds
ja
out
pop
lods
cmp
lahf
in
xor
cmp
or
bound
xchg
fmuls
jp
fistpll
into
or
cmpsl
adc
mov
fcomps
inc
mov
nop
jg
pop
test
adc
movsb
mov
popf
pop
fldl
in
gs
adc
lahf
daa
out
int
or
adc
xor
cs
popa
jle
imul
inc
pushf
sbb
insb
push
js
dec
mull
in
lret
jne
dec
insl
ficompl
or
les
cs
pop
sub
stc
xchg
push
xor
std
cmp
xchg
pusha
pushf
pop
add
inc
inc
cmpsb
enter
mov
mov
push
pop
sub
cmp
jl
cmp
rcl
and
int
sub
scas
mov
mov
push
imul
and
xchg
clc
adc
or
stos
lret
pop
sub
inc
mov
xor
mov
cmp
dec
pop
imul
movsl
mov
or
dec
clc
fldenv
sbb
movsb
pop
adc
mov
inc
jnp
mov
mov
sub
fsubrs
subb
daa
mov
push
jae
pop
cli
mov
hlt
repnz
xchg
inc
jb
jo
fstpt
push
sbb
lds
xchg
add
fcmove
insb
fldt
outsl
aam
dec
sub
iret
xchg
add
adc
andb
movsb
add
sbb
insl
inc
push
bound
pop
shrl
rclb
jl
dec
dec
sbb
pop
aaa
outsb
sbb
cld
adc
clc
fsub
aad
addr16
test
mov
divb
pop
mov
pmulhuw
iret
inc
push
fmulp
mov
inc
cmp
fst
sbb
dec
mov
shlb
mov
xor
and
xchg
gs
sbb
movsl
insb
out
fs
dec
icebp
hlt
test
xchg
ds
roll
or
in
jae
call
es
xor
sub
cmc
in
loope
movsl
das
or
in
mov
jns,pt
and
jg
mov
mov
add
cs
push
add
xor
push
jl
push
mov
mov
mov
push
push
inc
pop
mov
xchg
mov
aad
pop
pop
and
xchg
and
dec
adc
mov
fnstsw
popf
mov
test
subb
loope
add
push
rorb
arpl
sub
clc
sbb
cmp
insl
lahf
mov
out
jns
jle
pop
inc
push
hlt
lret
insl
test
into
xor
add
ds
lret
ja
sbb
xchg
fsubs
int
icebp
push
sbb
aas
dec
adc
or
cwtl
aaa
pop
shr
shrl
pop
loope
mov
pop
mov
sub
daa
popf
outsl
sbb
inc
cld
out
outsb
pop
jp
sbbb
sub
inc
cmp
xor
fcmove
jmp
mov
call
fsubrl
adc
into
sbb
sti
sbb
shrl
frstor
fsubrs
lahf
xor
dec
adc
mov
sbb
fucomi
xor
sub
mov
cwtl
inc
sbb
mov
and
dec
in
inc
dec
jb
lret
add
dec
pop
std
aam
add
push
jp
dec
sub
leave
mov
push
add
outsb
adc
xor
adc
ret
pop
adc
mov
scas
hlt
das
jo
mov
xchg
dec
xchg
shll
add
push
jo
dec
repnz
popa
aam
shl
push
adc
jo
xor
push
xchg
bound
push
dec
ret
test
aaa
ret
sub
ss
aas
mov
sub
add
sbb
rorl
es
mov
inc
and
sbb
sbb
repz
push
pop
push
into
xor
test
fidivs
or
adc
popf
fs
xchg
stos
je
icebp
adc
cli
mov
adc
scas
dec
fidivrl
rolb
nop
pusha
push
aad
mov
sub
add
addb
repnz
stc
fcmove
sbb
mov
pushf
jae
and
mov
or
test
cmovge
inc
pop
dec
jg
cs
int
or
mov
in
shlw
int
xchg
and
or
jg
mov
cmc
push
mov
dec
test
insl
mov
add
pop
aaa
cld
mov
sub
rclb
push
sub
cmp
or
data16
mov
loopne
stos
mov
push
lods
sbbl
out
xchg
adc
mov
push
mov
or
frstor
in
cmp
icebp
or
jne
in
aas
dec
dec
ret
dec
test
js
lret
bound
push
pop
cli
fisttpll
push
imul
iret
int3
dec
les
jno
jb
in
adc
add
pop
iret
push
stos
jle
xlat
fstl
mov
std
lahf
out
xchg
sub
add
jae
arpl
insb
adc
dec
inc
pop
dec
inc
or
scas
arpl
push
push
cli
jecxz
mov
pop
jo
loopne
int3
subb
repz
out
decb
push
lods
lods
mov
mov
jecxz
clc
mov
dec
inc
lret
or
xchg
xchg
add
jl
dec
add
dec
sti
inc
xor
shrd
out
inc
push
sbb
gs
ret
insb
inc
jmp
leave
dec
sbb
push
push
xchg
iret
mov
xchg
fildll
jne
dec
cmp
scas
faddl
sbb
jecxz
mov
addr16
dec
pusha
cmpsl
repz
fxch
loop
add
rcll
add
cmpsb
lcall
pop
aam
push
scas
stos
lods
mov
lcall
rorl
imul
push
add
push
and
pop
xor
xchg
push
sar
into
rcll
lret
or
int
test
sub
ret
sub
repnz
jge
pop
sub
mov
orb
fisubrl
clc
bswap
les
aaa
push
rcrb
out
push
mov
shll
add
gs
inc
adcb
je
pop
jae
mov
inc
icebp
mov
divps
ljmp
mov
inc
loopne
ret
xor
test
jbe
cmpsb
in
pop
xor
mov
add
fsubr
push
out
jl
mov
test
in
loopne
das
aam
sahf
push
push
mov
shlb
dec
push
pushf
iret
insb
mov
and
outsb
add
fcoml
sbb
inc
adc
out
outsl
rol
jp
sub
xor
sar
and
sbb
inc
mov
pop
pop
cmp
xor
inc
pop
cmp
or
add
jl
mov
or
adc
mov
lahf
mov
daa
mov
cmp
add
cmpsl
pop
push
mov
add
push
xor
sub
das
aad
arpl
loop
das
dec
cmp
repnz
adc
ja
bound
idiv
out
mov
or
fwait
mov
add
mov
stc
int3
pop
mov
xchg
mov
mov
cli
jne
and
loopne
jnp
out
cmp
pop
cmp
sbb
int
lock
ret
in
addr16
sbb
push
cmc
insl
scas
inc
push
jnp
test
scas
fistps
aam
subl
or
xor
stos
enter
xchg
test
xchg
dec
inc
push
xchg
rcr
enter
scas
sbb
arpl
mov
cwtl
dec
adcb
lock
pop
fiaddl
es
in
sbb
clc
popf
cmp
pop
pop
dec
idivb
pop
add
mov
in
fstps
xor
dec
sub
rcll
mov
pop
scas
dec
sti
adc
fadds
or
xchg
inc
popf
test
pop
xor
sub
sahf
out
mov
subb
mov
jns
mov
adc
cmpsl
mov
idiv
jecxz
fs
pop
pop
repnz
sub
dec
in
dec
push
ljmp
jp
pop
mov
pop
mov
xchg
rorl
mov
mov
lods
sbb
mov
sbb
pop
mov
cs
loopne
cltd
xchg
rol
adc
insb
inc
mov
sub
ret
mov
jne
fisttpl
lahf
dec
iret
ja
dec
outsb
outsl
in
insl
fwait
pusha
sarb
fisubrl
pusha
cmc
data16
pop
push
pushf
adc
jb
cltd
ds
imul
ljmp
popa
arpl
pusha
fistps
aas
into
ret
imul
popl
add
int
dec
sahf
cld
jne
or
and
mov
dec
subb
mov
dec
mov
pop
dec
pusha
stos
xor
jle
ja
push
cltd
or
in
out
sbb
xchg
adc
jo
inc
js
push
jno
fdivp
sbb
push
xchg
out
xchg
cwtl
aam
adc
jle
stc
std
int3
jno
inc
dec
cmp
aas
add
mov
hlt
es
je
sbb
icebp
es
data16
icebp
imul
sub
jb
jno
adc
push
sbb
jp
test
mov
lock
fiadds
jae
inc
cmpl
pop
cli
inc
pop
data16
pop
jle
imul
ss
jmp
jo
insb
mov
je
and
inc
inc
sub
inc
push
add
popa
ret
jb
imulb
mov
pusha
adc
pop
leave
jno
add
and
out
and
ja
adc
mov
mov
cmpsb
mov
scas
aas
adc
movsl
cmpsl
pop
gs
and
pusha
sub
sbb
outsb
push
jle
sarb
jbe
push
lds
pop
inc
add
pop
shrl
dec
jl
xor
jmp
mov
loop
mov
pop
mov
mov
out
or
sbb
xchg
sbb
add
mov
hlt
mov
push
dec
or
outsb
or
div
cmc
scas
cwtl
jmp
out
icebp
mov
jecxz
pop
sbb
mov
push
loopne
mov
sub
jmp
pushf
rep
or
and
add
leave
push
test
in
add
clc
loope
xchg
jmp
xchg
cmpsl
cli
inc
in
sub
mov
adc
out
xlat
sbb
lods
add
sbb
push
jne
push
daa
adc
jle
scas
ljmp
mov
jmp
xchg
aaa
and
cmp
rep
sub
xor
popf
add
pop
jmp
push
pop
subl
nop
push
and
xchg
aaa
jno
fwait
pop
mov
pop
pushf
sub
push
into
dec
cmp
jecxz
xorb
pop
push
aaa
test
cmp
or
cld
sub
les
push
in
addl
pushf
cmovp
jge,pn
fwait
dec
pop
sbb
and
les
movsl
test
andl
arpl
gs
pop
fstl
int3
icebp
sahf
push
xor
cs
jnp
xor
test
push
pushf
mov
das
xor
mov
std
dec
jl
out
mov
sbb
repz
bnd
sub
xchg
bnd
daa
test
or
mov
or
imul
push
out
mov
inc
out
dec
aad
mov
xlat
and
xchg
mov
jp
aad
fcmove
inc
shlb
dec
sbb
addr16
xchg
sbb
jno
pop
daa
xchg
sub
lret
sbb
jecxz
sub
or
imul
data16
mov
in
cmpsl
cli
mov
aas
fistpl
mov
iret
neg
movsl
aaa
lea
icebp
fcomps
mov
js
sub
lock
inc
testl
or
or
and
aad
sub
jp
popf
insl
xor
es
aaa
push
inc
ret
mov
aam
call
arpl
cs
pop
movsl
orl
daa
icebp
popf
mov
sub
out
pop
shll
je
gs
out
dec
pop
push
xor
imul
popf
ss
outsb
movsb
inc
mov
nop
sub
imul
dec
ja
mov
xor
inc
insb
or
push
push
xchg
ljmp
inc
cmp
add
adc
shll
xor
push
cmp
jbe
cmp
jbe
mov
rep
test
mov
std
push
ret
lahf
ds
ret
mov
es
xchg
pop
jnp
push
mov
sbb
in
push
fistpl
sbbb
mov
ja
mov
or
stc
mov
aam
fnstsw
sbb
addb
xchg
test
inc
stc
incl
test
stos
cmp
dec
xlat
push
std
scas
fmull
out
in
adc
mov
jge
scas
rorb
ret
dec
inc
cmpsl
adc
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fxch
repz
fidivrs
jge
or
jp
jge
xchg
mov
and
in
adc
xchg
or
out
cmc
arpl
mov
gs
and
lahf
sarb
es
sbb
mov
fsubrl
shl
jbe
push
sbb
out
mov
inc
neg
inc
lods
in
shrb
adc
xchg
cli
pushf
mov
xlat
push
and
gs
sub
cmp
xor
push
clc
push
leave
repz
jg
cltd
popf
js
cld
push
pop
or
mov
sub
cmp
std
shlb
xchg
cltd
mov
push
ljmp
and
ret
int
pop
inc
es
outsb
popa
mov
outsb
jmp
dec
jno
push
jns
cmp
mov
sbb
fs
dec
mov
imul
imul
add
fdivrs
xlat
testl
test
lret
pop
icebp
mov
lcall
add
cltd
in
cwtl
dec
xorb
shll
rol
push
and
add
rclb
lahf
popa
sarl
shlb
scas
je
inc
push
xchg
cli
lea
iret
lcall
jno
mov
xlat
dec
push
or
insl
out
or
shrl
test
lret
data16
xorb
pop
cwtl
js
loope
jo
sbb
lcall
xchg
lods
sub
into
jbe
push
and
arpl
and
inc
pushf
xlat
dec
add
pusha
sbb
data16
in
popf
lea
fimuls
inc
inc
imul
xor
orl
out
test
std
fs
lods
test
mov
test
jle
or
cmp
sbb
jg
js
push
repz
ret
sti
dec
inc
fistpll
sbb
popf
icebp
cmp
pushf
xchg
js
push
in
dec
shlb
iret
ss
adc
fldenv
imul
xchg
pop
sbb
cmpsb
cmp
adc
jbe
lods
stos
mov
pop
xor
jmp
cmpsl
popa
rorl
mov
cs
gs
jg,pn
push
into
mov
movsl
ret
mov
cmp
shlb
pop
jo
fisubrl
fcomps
cmp
mov
dec
js
pop
fistps
jl
in
mov
push
arpl
lea
sub
js
dec
pop
loop
jg
ja
jle
inc
andl
push
cmpsl
fdivs
dec
aaa
and
repnz
xchg
shl
adc
outsb
int3
scas
jno
mov
sarl
and
lods
cwtl
clc
dec
and
add
rol
mov
mov
xchg
push
or
nop
mov
fldl
inc
cmp
and
test
testl
test
mov
sub
dec
mov
xlat
and
stos
aas
scas
in
jb
and
dec
mov
aam
xchg
rcrl
cmpsl
lcall
scas
js
fbld
jne
in
pop
int
aas
das
mov
ret
das
arpl
test
push
ss
jb
out
mov
ror
shll
fstpt
leave
xor
xchg
bound
cwtl
or
push
pop
sti
insl
std
pusha
test
pop
cltd
in
stos
es
xchg
imul
sbb
cmp
repz
adc
jecxz
or
enter
sbb
imul
sahf
dec
rolb
dec
jecxz
pop
xchg
fidivs
add
mov
xor
inc
lds
lds
in
mov
scas
xchg
add
adc
int
fimuls
jmp
inc
inc
jbe
mov
jmp
mov
inc
dec
push
repnz
ret
cmp
scas
mov
xchg
xchg
fucomp
adc
xchg
addr16
jge
lcall
enter
cmp
jne
push
fldz
jmp
xchg
push
or
cmpsb
push
ja
fildl
sbb
icebp
gs
inc
inc
lcall
movsb
pop
mov
in
hlt
cmpsb
bound
mov
std
cmp
lcall
into
jo
insl
sti
sub
dec
sarb
mov
addb
icebp
arpl
int3
xchg
or
mov
jmp
imul
fdivrs
push
xor
call
jne
mov
or
dec
inc
daa
cmpsb
push
out
cs
int3
cltd
inc
jnp
push
xor
mov
lea
jne
outsl
jecxz
pop
aam
xchg
dec
mov
cmpsb
push
bnd
cmc
fucomip
push
ret
in
cmp
into
aad
leave
psrad
cli
push
cli
outsl
lahf
pop
jb
jle
lahf
sub
mov
and
roll
inc
mov
mov
adc
inc
sti
jne
pushf
shl
int
jae
mov
xor
imul
push
jns
inc
enter
push
ds
inc
fwait
push
sub
int
sub
push
out
stc
xor
dec
scas
test
lods
mov
fwait
gs
gs
mov
lods
sti
and
mov
lock
add
adc
faddl
add
pop
or
in
in
outsl
xor
push
sub
out
popf
push
push
mov
lcall
jp
jg
ret
xchg
pop
repnz
insl
add
lcall
ss
aad
push
cli
in
ljmp
shrl
cmp
and
xor
mov
loope
sub
mov
pop
dec
xor
xchg
sub
les
xor
out
in
sub
imul
movsl
loope
nop
mov
xor
xchg
jecxz
jecxz
ss
out
add
out
loop
in
outsb
mov
std
jge
jae
pop
movsb
loope
aam
imul
int
imul
divl
dec
jge
add
inc
stos
adc
or
jmp
mov
repnz
xor
fwait
aad
outsb
mov
fdiv
mov
sbb
mov
outsb
enter
xchg
inc
fs
mov
lods
lret
and
inc
jo
ljmp
sarb
adc
pop
mov
cmp
outsl
adc
cli
outsl
daa
mov
xchg
movsb
add
adc
xchg
or
or
out
add
std
gs
xchg
cmp
inc
imull
mov
mov
ret
xor
orl
out
in
xchg
adc
call
mov
mov
ret
lds
bound
xor
dec
sti
popf
push
mov
test
cmp
iret
pop
mov
rcl
and
fidivs
mov
mov
lock
insl
bound
out
andb
xor
inc
daa
outsl
aam
push
sbb
sub
xor
shl
push
or
scas
sbb
push
cmp
roll
sub
jge
pop
xchg
addr16
mov
push
adc
movsb
push
ss
add
leave
lret
fwait
into
shrb
xchg
and
adc
pushf
add
iret
mov
add
scas
fwait
cmpsb
lret
out
mov
and
leave
pop
inc
adc
nopl
adc
and
pop
add
jle
xor
fwait
add
mov
adc
sbb
les
andb
insb
add
bound
xor
xor
jae
mov
adc
es
push
xchg
mov
push
cmp
add
fisubrl
popf
jb
mov
inc
mov
fstps
inc
sbb
jp
mov
das
inc
inc
cltd
stc
push
jbe
ds
mov
mov
insb
xor
pop
ror
mov
pop
jl
mul
std
jp
jne
lcall
dec
sub
stos
jp
jbe
jle
cmp
jne
dec
insl
mov
je
sub
lahf
mov
inc
sbb
mov
adc
movsb
inc
adc
push
sti
jbe
outsb
mov
sub
cmpsb
xor
outsl
aad
test
dec
vpmovsxwq
xor
mov
aam
push
fwait
xchg
add
out
inc
mov
fs
sti
mov
ret
jbe
mov
imul
faddl
mov
shll
add
and
lods
popf
test
fnsave
pushf
cmpsl
lods
lock
call
cwtl
xor
inc
loopne
xor
push
xor
sbb
mov
out
cmpsb
inc
xchg
fs
jae
sbb
or
push
and
push
cmp
dec
cmp
aaa
inc
test
lcall
sbb
push
or
stos
xor
push
cmc
push
js
repnz
sar
in
pop
jnp
mov
mov
fstps
test
xchg
ljmp
aam
jecxz
popf
orl
sub
push
je
or
add
loope
stc
sbb
stos
add
inc
inc
xor
and
jns
sar
popa
arpl
cmp
aaa
adc
mov
movaps
orb
lods
and
loope
mov
xor
xor
and
push
adc
popf
stos
daa
and
mov
jmp
mov
mov
std
sahf
subb
fstps
pop
mov
push
and
jle
inc
sub
adc
mov
xor
cmpsb
test
out
scas
sbb
xchg
adc
fsubrs
xor
std
fwait
notl
pop
xor
rolb
rcll
in
rclb
int
sub
rcrb
and
push
imul
loopne
cwtl
jge
push
cmp
adc
ficoml
adc
je
adc
add
jge
or
jns
mov
dec
in
push
dec
lods
pop
stos
push
lds
push
insb
jnp
leave
daa
les
gs
mov
add
enter
jno
xor
or
xchg
arpl
push
out
in
sbb
dec
push
jle
aaa
or
fnstenv
jecxz
pop
sarl
mov
repnz
test
ds
in
es
fwait
pop
dec
mov
xchg
jns
and
icebp
stos
shll
hlt
cmp
in
je
movd
add
pusha
out
stc
sub
mov
out
out
push
mov
xchg
int3
mov
push
push
jo
into
mov
cli
mov
jg
mov
xorb
push
jp
scas
sbbl
scas
add
cmp
movsb
push
xlat
cmp
xchg
cmp
shlb
mov
sarl
out
insb
movsl
cmp
lods
xor
cmc
es
ss
and
out
and
lahf
aaa
pop
arpl
push
cmpsl
mov
clc
bound
rcr
lds
push
sub
push
lods
push
loop
mulb
das
daa
aam
mulb
into
or
scas
add
sub
sti
aaa
mov
repz
movsl
dec
cmp
int
clc
add
imul
cmp
fcmovnu
xchg
int
mov
out
aam
xchg
cmp
jno,pn
sbb
incb
and
sbb
int3
cmp
and
shll
es
fbstp
in
sub
cmp
out
sbb
fsubrl
hlt
in
leave
inc
leave
test
jg
divl
pop
fistps
jae
adc
cmc
adc
sbb
jo
and
add
mov
sub
add
xor
fcomps
addr16
push
shlb
mov
stos
mov
faddl
inc
push
inc
dec
mov
ss
pushf
shrl
jge
out
sub
cmp
movsb
jecxz
jb
xchg
and
or
insl
mov
sbb
sti
sub
sbb
bound
icebp
loop
lret
aad
and
mov
inc
sbb
sub
fs
arpl
sarl
fbstp
pop
inc
xchg
lcall
clc
cmp
cmpb
popf
adc
ja
ja
popf
test
xchg
mov
pushf
xchg
inc
inc
push
add
std
mov
xchg
pop
repz
mov
lcall
xchg
scas
cmpsw
push
data16
dec
mov
adc
fldt
test
jp
lcall
pop
xchg
sahf
xor
fsubl
pop
test
xor
je
and
and
shrl
fdivl
popf
jp
sub
xchg
cmpb
and
orb
jno
sbb
mov
insb
or
jae
imul
jae
ljmp
cmpsb
repnz
inc
jg
or
mov
sub
xlat
cs
subl
sbb
jecxz
mov
imul
xorl
or
popf
mov
xor
fimull
push
push
cmp
fldenv
adc
xor
xchg
fsubl
sub
or
mov
adc
loopne
mov
dec
dec
cli
and
int3
mov
xor
xlat
call
cs
jb
hlt
jbe
cwtl
outsl
and
pop
cmp
fwait
sub
push
jp
cmp
ret
push
add
adc
adc
fisubrs
sbb
or
nop
mov
jne
cli
clc
xchg
or
add
pop
mov
fsincos
fs
xchg
xchg
push
add
out
rcll
and
adc
dec
pop
dec
mov
rclb
jecxz
xchg
sbb
into
dec
cltd
and
cmc
mov
xchg
mov
xor
pop
insb
nop
push
neg
cld
pop
jg
add
mov
in
gs
aad
sbb
shlb
out
jno
adc
mov
xchg
popf
mov
add
add
cli
repnz
inc
add
xchg
xchg
add
lods
lock
in
sub
repz
out
dec
cmp
dec
mov
push
xchg
daa
inc
jp
repnz
mov
xor
mov
popa
imul
add
lret
add
mov
imul
jns
dec
cmpsb
inc
fsubs
dec
mov
or
int
std
outsb
sbb
fs
aas
xchg
sbb
ret
cwtl
jecxz
mov
or
aaa
jnp
das
push
fisubrl
lds
mov
mov
mov
lods
jg
or
inc
xor
cmp
loopne
cmc
cmp
fisttps
fstl
into
lock
mov
lret
mov
shll
scas
dec
repnz
sub
sub
jp
orl
xor
adc
jmp
outsb
inc
jp
dec
mov
std
test
ds
dec
lock
pusha
call
pop
xchg
imul
lahf
mov
xchg
mov
lret
mov
lret
je
jle
xor
push
dec
std
xlat
sbb
aaa
jg
adc
or
and
dec
ret
lahf
fistpl
std
inc
dec
jle
lcall
fmul
push
mov
dec
xlat
dec
orb
incl
sbb
adc
cmc
pop
or
lea
arpl
inc
outsl
mov
jbe
mov
imul
repz
int3
mov
andl
xor
outsb
andl
fdivrs
idivb
das
movsl
lds
stc
jne
aaa
jno
cli
iret
out
jmp
cmc
movl
mov
cmpsb
adc
jb
xchg
jecxz
push
lret
mov
push
inc
pop
fwait
lock
rcrl
outsl
mov
jb
rcrb
cmc
mov
push
dec
mov
scas
cmp
or
mov
scas
enter
test
test
inc
mov
pop
cli
sub
sub
imul
outsb
or
mov
inc
jb
mov
xchg
and
fwait
push
pop
aas
pop
push
rcrl
and
mov
out
movsb
insb
xor
mov
sub
inc
or
cmp
jnp
cwtl
inc
popa
xchg
and
mull
pop
test
and
xor
enter
arpl
outsb
mov
lahf
cmp
dec
cmc
mov
push
mov
gs
inc
icebp
and
clc
rcrl
decl
adc
jo
xchg
mov
imul
out
sbb
outsl
loope
ss
dec
cmp
iret
in
push
sub
ja
fmuls
adc
pop
aaa
jecxz
out
lock
stos
int
mov
lds
mov
xchg
sbb
mov
add
sub
xchg
ret
call
sub
jp
popa
xorl
aam
dec
icebp
into
rcr
data16
mov
cmpsl
jno
adc
jl
cmpsl
testb
push
pop
add
int
add
xchg
pop
ret
and
outsl
lret
xor
inc
jno
cmp
add
into
nop
and
pop
sub
sub
xor
aas
sub
rclb
push
cli
sub
or
sub
add
mov
xchg
cmp
push
int3
mov
aas
ret
aas
inc
div
icebp
dec
push
mov
sbb
bound
cmp
inc
js
sbbb
andb
cmp
mov
cmc
ss
xchg
xchg
hlt
call
mov
out
and
dec
dec
loop
jns
xor
sub
mov
dec
lret
add
mov
jmp
pop
mov
and
jecxz
inc
in
jecxz
adc
fwait
inc
sahf
sbb
mov
sahf
mov
and
fwait
into
dec
sbb
aaa
pop
xor
cli
jne
dec
jmp
scas
shll
pop
cmp
mov
jle
mov
xor
adc
movb
and
mov
and
mov
ror
add
or
insb
imul
mov
es
pop
pusha
cmp
outsl
icebp
push
pop
mov
or
fstl
je
push
dec
gs
and
mov
adc
lcall
gs
sbb
and
bound
mov
or
pavgw
movsl
pop
shr
sbb
repz
dec
outsl
cmp
dec
pop
out
outsb
aas
in
jge
ret
push
xchg
pop
insl
stos
pop
push
and
mov
xrelease
mov
ret
fsubl
imul
fs
xor
aad
movsl
aam
dec
dec
xor
dec
loopne
jmp
mov
fadds
ljmp
in
dec
mov
enter
pop
in
sti
cmpsl
or
dec
adc
jg
cmp
aaa
nop
mov
add
push
fdivl
int3
aad
inc
stos
dec
popf
mov
mov
xor
push
inc
push
cmpsb
outsb
in
pop
fldcw
add
aaa
in
into
cmp
fs
cmp
mov
cmp
movsb
movsl
lahf
leave
iret
js
fildl
cmp
pop
mov
cs
cmp
mov
mov
rclb
mov
mov
in
std
xchg
icebp
xchg
adc
ja
loop
in
and
push
loopne
test
sbb
push
dec
mov
idivl
xchg
adc
cmc
push
sti
mov
sub
in
sbb
push
std
add
popf
mov
mov
mov
daa
jb
out
adc
pushf
sbb
out
and
test
fists
mov
sbb
mov
scas
mov
imul
stc
mov
mov
mov
iret
in
xchg
inc
mov
cmpsb
fs
sub
and
fwait
jmp
jnp
call
cltd
add
jns
jnp
rcrl
pusha
data16
pusha
mov
das
dec
movsb
fildl
roll
imul
sar
push
push
jne
je
scas
push
and
xchg
mov
mov
mov
push
push
in
imul
cmp
js
add
insl
mov
ret
cmp
lock
sub
pop
mov
sub
push
filds
int
dec
push
pavgb
add
jp
sbb
mov
inc
add
fidivl
and
movsb
das
and
mov
inc
dec
fiaddl
pop
in
sbbb
jmp
xor
mov
std
inc
fnstenv
lret
sub
pop
inc
push
xchg
daa
or
inc
lds
xor
add
or
add
addr16
mov
xor
int3
xor
insb
dec
ret
xor
iret
int
stos
lcall
and
rcl
fsubs
xor
hlt
cld
imul
lahf
sar
andnps
fsubrp
add
sub
je
sub
sti
push
and
ret
and
test
dec
cs
sbb
cmp
inc
jbe
call
add
and
cmp
xchg
or
arpl
outsb
aaa
xchg
cmp
mov
out
adc
pop
outsl
test
iret
js
scas
cmp
dec
xor
mov
outsb
scas
xchg
mov
dec
pop
xor
xchg
adc
pop
hlt
addr16
fcompl
xchg
loope
jnp
push
xlat
sbb
fsubrs
and
bnd
insb
pop
xchg
lods
loope
lcall
fcompl
fsubs
push
push
sub
lds
cmpsb
mov
loop
fisubl
mov
jno
or
mov
add
or
popl
loop
add
les
or
insb
inc
dec
gs
test
cmp
or
xchg
enter
push
pop
cmc
stc
in
dec
stc
lods
pop
push
push
ror
inc
add
shll
popf
or
sub
or
add
mov
scas
pushf
stos
jecxz
dec
sub
cltd
lret
nop
sarb
mov
jle
xchg
mov
andb
or
gs
loopne
push
xor
lea
fnsave
push
das
push
in
pop
xor
cmp
pushw
adc
imul
fisubrs
jbe
xchg
add
aam
loope
mov
dec
or
push
inc
out
fmul
out
stc
add
push
fsub
roll
and
jmp
sbb
outsl
xchg
xor
popa
popf
dec
pusha
bswap
pop
sahf
mov
rcrl
mov
mov
jmp
mov
loope
add
in
ljmp
inc
gs
xchg
or
add
xchg
jecxz
data16
lret
mov
loop
cmp
mov
dec
xchg
stos
call
ljmp
out
mov
fsubs
and
in
mov
cld
and
sub
in
mov
sbb
adc
jecxz
jecxz
ss
or
jmp
notl
lahf
mov
movsl
pusha
jns
mov
ja
or
loopne
stos
and
aaa
adc
test
repz
or
or
insl
mov
fwait
insb
jg
or
xlat
xchg
jge
stos
or
sub
enter
sti
in
sub
lods
add
sbb
rolb
arpl
or
icebp
xor
pop
inc
cmp
cltd
test
add
repz
adc
xor
insl
inc
adcb
les
fiaddl
cmpb
jmp
sahf
out
xchg
jbe
mov
pop
adc
mov
sub
pop
ljmp
or
and
das
sbb
inc
repz
dec
mov
or
sbb
std
inc
push
js
loop
push
loope
lods
arpl
jmp
ret
dec
and
and
call
adc
mov
push
jnp
push
les
push
and
negb
mov
jno
icebp
sbb
popf
push
pop
xchg
add
inc
rclb
fldt
mov
scas
jb
rcl
push
mov
in
and
or
dec
sbb
nop
shll
shll
aad
das
pop
xchg
lds
add
jae
xor
das
push
sub
pusha
push
jb
aaa
ljmp
lods
mov
inc
push
stos
insl
and
pop
imul
mov
sub
jl
mov
aam
sarl
inc
shll
dec
or
sti
test
pop
xor
cmp
pop
xchg
stc
xchg
mov
cs
pop
jle
je
lods
push
daa
push
rcl
movl
fidivl
push
icebp
loopne
in
push
dec
pop
pop
inc
aam
mov
lret
icebp
in
cmp
push
cmp
mov
dec
and
dec
xor
inc
outsl
cli
jb
jns
pop
sbbb
shll
push
aas
sub
iret
and
sbb
shrb
push
lret
out
dec
pop
and
jo
ret
pop
sbb
or
jne
jno
push
sub
cmpsl
jle
rolb
fsubrp
stos
popa
call
sub
addr16
cs
xchg
sbb
mov
leave
push
clc
xchg
push
rorl
fnstsw
icebp
sub
imul
mov
cwtl
jecxz
dec
mov
pop
mov
in
leave
dec
sub
dec
repnz
mov
adc
xor
mov
sub
gs
dec
push
inc
popf
and
sbb
es
gs
gs
mov
or
xchg
mov
and
push
sub
jno
or
lret
enter
mov
cmp
decl
addb
push
outsl
fisubrl
inc
ljmp
pop
roll
and
repnz
sbb
roll
push
leave
and
fistpll
jns
inc
mov
inc
in
pop
xlat
test
mov
pop
add
stc
pop
xor
lret
cwtl
in
sub
mov
dec
mov
xor
jle
push
dec
cmpb
cmc
dec
call
ja
aam
pop
mov
fs
lret
inc
cli
or
dec
or
aam
cmpsb
and
mov
cld
xor
mov
push
xor
xchg
mov
or
dec
or
jle
jp
test
cmpsb
dec
xor
outsl
sbb
in
jmp
mov
jmp
outsb
mov
enter
mov
into
cmp
sbb
addb
outsl
lea
mov
lods
mov
cmp
jp
xchg
push
rcr
js
pusha
fdivr
xor
jecxz
scas
inc
test
sbb
push
test
loope
popf
sahf
in
js
push
pop
sbb
cmp
flds
xorl
movsb
mov
xchg
movsb
in
insb
call
imul
insb
mov
fldln2
xor
aam
js
dec
mov
int
push
push
pop
or
sbb
outsb
ljmp
mov
inc
scas
mov
imul
lods
lods
sbb
mov
ds
mov
sbb
into
and
js
mov
das
push
or
and
roll
mov
popf
jno
sub
mov
xor
jnp
imul
xchg
lock
cmp
aam
clc
and
xor
mov
cmp
loope
dec
cwtl
stos
add
fsubs
add
jnp
mov
pop
int
and
in
outsl
shr
push
cltd
out
adc
cmc
test
movsl
ret
push
dec
test
and
nop
lods
insl
int
or
and
pop
not
addb
les
ljmp
dec
scas
std
push
or
das
mov
fcompl
push
and
fildl
in
ficoms
jg
adc
aas
pushl
mov
sub
outsb
es
mov
or
fwait
cpuid
ljmp
push
testb
lahf
inc
scas
mov
jecxz
stc
xchg
add
xor
int3
or
les
std
call
ja
out
cmp
push
xchg
fisubl
mov
sub
in
stc
sbb
sbb
movsl
cmp
sub
hlt
xchg
mov
mov
cmc
icebp
mov
sbb
lret
ljmp
push
popf
sbb
fst
mov
sbb
cld
leave
orb
scas
sub
xor
andl
pop
and
inc
nop
outsl
mov
push
clc
fbstp
hlt
out
pushf
ds
jb
addr16
jb
dec
add
pusha
ss
push
cmp
sub
inc
sub
sbb
inc
enter
inc
or
pushf
sub
sbb
jl
imul
insl
clc
and
push
test
dec
movsl
mov
jmp
in
pop
sarb
jecxz
mov
out
and
pusha
imul
int
mov
in
mov
test
cmpsl
inc
adc
inc
cld
testb
mov
xchg
bound
mov
mov
sahf
mov
loopne
loope
cmpsb
sahf
pusha
cltd
imul
push
ja
pop
xchg
or
add
jle
mov
ror
aas
and
mov
jnp,pt
lds
mov
sbbb
je
inc
push
or
adc
cmp
in
ljmp
pushl
cmp
push
add
pop
and
inc
shlb
xlat
jns
or
in
icebp
repnz
sub
fistps
adc
xor
jne
inc
and
icebp
sub
in
outsb
rcr
lods
bound
sahf
pop
xor
jno
mov
jbe
adc
pop
lods
adc
aad
or
cmpsl
lcall
daa
jbe
daa
enter
sub
outsb
into
ds
test
add
int3
std
adc
cltd
inc
pop
insb
xor
jl
loop
fcomps
jmp
adc
das
add
enter
add
stos
and
xchg
dec
ret
or
push
xchg
xor
and
dec
movsb
nop
fists
xor
jnp
inc
pop
mov
mov
sub
ss
adc
and
in
push
cs
cmpb
cld
push
out
push
lahf
ja
aaa
loope
dec
and
or
xorl
lds
mov
das
xor
repnz
data16
int3
daa
sbb
push
xchg
sti
mov
sbb
xchg
loopne
clc
mov
and
mov
shrl
adc
add
adc
jmp
mov
xor
fs
inc
adc
mov
in
icebp
test
push
in
adc
sub
jmp
add
stos
mov
lds
xchg
mov
ljmp
icebp
mov
sti
imul
int
sub
rcr
adcb
dec
je
jae
adc
xchg
imul
lock
mov
xor
pop
or
jp
insl
and
ret
add
adc
imul
pop
outsb
mov
decb
ljmp
jg
aaa
rcrl
call
mov
pop
dec
add
rolb
push
and
dec
int3
cld
adc
cmpsl
daa
mov
mov
inc
add
jmp
or
lret
lods
mov
mov
pop
mov
jle
call
cmp
scas
jmp
std
mov
stos
into
cmpsb
out
jae
mov
mov
push
add
out
fstl
inc
cmc
imul
pop
inc
mov
push
loopne
pop
out
push
mov
xchg
loope
dec
loop
movb
into
mov
pop
jne
inc
roll
shrb
imul
jmp
enter
std
and
and
test
or
sarl
sub
mov
pushf
mov
pop
mov
sti
sbb
mov
iret
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
push
scas
add
jp
pop
jp
and
sahf
cs
addl
scas
lahf
sbb
inc
dec
add
cld
stos
jns
pop
dec
cmp
xchg
lret
sub
ss
xchg
adc
nop
add
test
popf
jge
pop
lahf
in
ret
sbb
in
xchg
push
in
xor
lods
sub
push
xchg
jge
int
mov
dec
jo
aam
aaa
add
jo
lods
and
xchg
js
mov
push
shll
out
in
jp
test
loop
and
loopne
lock
xlat
enter
xchg
xor
fwait
das
loop
leave
adc
mov
idivb
int
pushf
jp
and
jae
into
popa
fdivr
insl
push
in
fcomp
aam
ja
aad
jl
shll
stc
aaa
shlb
test
xor
add
cld
mov
cmp
pop
sahf
test
int3
and
mov
mov
stc
add
lahf
fcomps
dec
sbb
subb
adc
mov
icebp
jbe
adc
xor
jp
push
pop
hlt
subb
sub
lock
loope
jne
sub
and
mov
stos
cmc
sarl
jge
dec
sbb
in
in
fildl
clc
add
mov
pushf
outsb
js
adc
add
aad
gs
jb
aaa
sti
popa
lret
cmp
cli
cmp
dec
jl
aaa
jo
pop
fs
mov
out
push
inc
das
das
pusha
rolb
stc
adc
outsb
inc
loope
mov
and
out
fsubrp
add
push
push
inc
sbb
jne
outsl
push
cld
mov
pop
int
adc
or
sbb
test
pop
pop
xor
jg
rcrb
pop
aas
add
mov
push
or
hlt
pop
pop
push
inc
fidivl
lea
aas
nop
aad
add
jnp
cmpsl
in
xchg
insl
dec
mov
data16
mov
push
adc
movsb
fildl
cmp
test
repnz
sbb
inc
mov
bound
or
and
mov
dec
outsl
repnz
push
sahf
inc
push
sbb
mov
mov
and
movsb
adc
and
dec
pop
pop
mov
mov
xchg
jnp
clc
cmpsb
into
pop
test
mov
rcrb
push
fcomps
sbb
sbb
fisubrl
xlat
negl
nop
xchg
fldt
mov
inc
repz
lods
ficompl
lods
inc
xor
mov
cmc
or
and
pop
lahf
loop
fdivrs
push
stos
jle
pop
adc
mov
jns
sbb
fstpt
mov
jl
inc
mov
nop
sbb
and
sti
shll
adc
ret
addr16
sub
int
push
testb
mul
sub
push
inc
jecxz
push
fisubrs
icebp
add
xchg
mov
pop
scas
scas
push
push
in
fmul
das
out
dec
cmp
adc
sub
lret
adc
inc
add
cld
sub
mov
xlat
dec
cmpsl
sub
mov
push
fldt
pop
jle
push
cmpsl
rclb
aad
dec
xchg
or
imulb
aas
push
push
jl
out
push
and
inc
and
sbb
adc
xor
pop
xor
mov
push
adc
mov
cltd
or
popf
cmp
fxch
loopne
stc
ds
fadds
jp
mov
pop
fdivrs
inc
lcall
sbb
daa
outsb
fsts
aaa
adc
xorl
xchg
xlat
dec
jge
pop
mov
stc
hlt
clc
dec
xchg
dec
pop
out
outsb
cmp
ret
xor
clc
cmpsl
lret
mov
roll
xchg
and
aas
int
pop
aaa
xor
insb
fcomip
mov
stos
push
mov
xor
test
jg
mov
mov
stc
pop
push
dec
push
aam
pop
lret
aad
dec
loop
mov
mov
test
inc
pop
loop
outsl
jnp
fwait
add
lret
dec
test
push
mov
push
das
xchg
or
and
ret
add
jnp
dec
clc
sub
xlat
push
push
outsb
les
adc
movsb
ljmp
int3
ret
fidivrl
fisubrs
cmpsb
inc
jbe
mov
pop
adc
mov
rol
adc
andl
inc
lds
faddl
mov
cmp
test
and
sarb
jecxz
bound
or
mov
or
dec
cmpsb
repnz
push
popf
rcll
mov
insl
popa
ljmp
xlat
sbb
cmpsl
xchg
pop
jbe
mov
cmp
pop
test
lahf
cmpsl
inc
gs
fwait
sbb
xor
cmpsb
shl
or
push
in
loopne
dec
scas
add
inc
bound
jb
sarl
fistpl
std
pop
jae
and
pop
daa
jmp
and
xor
jle
imul
and
adc
sbb
cmp
push
inc
stc
push
pop
xchg
rcrb
sub
cmpsl
into
daa
xchg
jge
stos
test
sahf
mov
pop
int
mov
jns
in
ret
cwtl
pop
lds
test
mov
sub
aas
iret
in
test
mov
lahf
sahf
sbbb
and
gs
test
cmp
mov
push
or
mov
push
add
add
push
fcmove
imul
push
dec
push
mov
xor
mov
fstps
mov
xchg
sbbb
inc
inc
iret
imul
leave
dec
cltd
add
ficomps
aam
in
or
sbb
lret
jl
out
test
repnz
sub
movsl
and
cmp
je
or
rcll
repnz
mov
mov
xchg
xchg
mov
mov
xor
xchg
cli
push
inc
lahf
inc
inc
and
mov
sarl
test
push
cmc
xor
push
adc
xor
jbe
fists
outsl
inc
jg
add
push
sub
repz
lcall
xchg
mov
push
and
jno
insl
cli
dec
cmp
sbb
fprem1
fdivrs
mov
or
jae
and
or
lcall
std
js
inc
mov
and
mov
in
cmp
cmc
clc
flds
repz
int3
xchg
imull
push
sbb
fdivr
lds
loop
out
test
inc
fwait
scas
mov
add
pusha
lea
cltd
push
dec
cmp
iret
sbb
out
mov
dec
out
mov
enter
inc
mov
push
xor
mov
push
es
scas
xchg
popa
out
ljmp
xor
shrb
pop
cmpsl
cmpsb
loope
outsl
pushf
dec
arpl
push
add
mov
data16
addb
imulb
aaa
icebp
ja
cmp
push
xchg
mov
scas
mov
and
xchg
mov
repnz
inc
ja
push
pop
hlt
cmp
xchg
test
cmp
ror
in
pop
lret
lret
inc
cmp
insb
std
cmp
stos
push
push
popa
inc
mov
xchg
fisubrs
and
xchg
out
xor
xor
mov
pusha
gs
cmp
adc
movsl
in
xchg
ret
cmp
mov
in
push
stos
lret
enter
sti
out
mov
daa
addr16
inc
and
mov
pop
pop
enter
cmp
sahf
jle
ds
sbb
jno
lret
pop
mov
xchg
arpl
fisubrl
loopne
ja
dec
cmp
les
sub
mov
jecxz
insb
fisubrl
ljmp
out
pushf
inc
je
and
adc
inc
sub
loop
lcall
in
cmpsb
in
push
test
add
or
mov
inc
sbb
enter
push
and
push
pop
jp
jecxz
jp
ds
imul
inc
test
push
fcmovu
cmp
fnsave
mov
out
shll
and
enter
jo
je
sub
sbb
pushf
mov
mov
aad
xchg
or
sbb
push
adc
pop
ficompl
add
mov
push
jecxz
jl
pop
or
sub
jp,pn
cmp
mov
mov
ljmp
adc
adc
pop
movsl
push
addb
jno
xabort
push
mov
adc
mov
or
cs
insl
add
and
int3
or
mov
xor
aaa
xchg
jnp
xor
sarb
mov
pushf
sahf
inc
vmread
sbb
pop
clc
xor
adc
das
dec
test
imul
add
aaa
jmp
ja
cmpsb
mov
lret
cmp
lea
movl
jmp
cmp
jg
lods
sbb
test
xor
push
mov
roll
push
leave
mov
xchg
or
adc
push
int
sbb
int
movsb
push
aaa
movsl
xchg
shll
lock
sbbl
mov
cmp
adc
ficompl
out
push
mov
xor
mov
mov
inc
andl
pop
gs
push
imul
dec
or
jge
mov
repnz
and
cmpsb
jl
push
sub
sbb
aas
mov
sbb
xor
jae
pusha
cmpsb
xor
mulb
push
popf
jnp
xchg
xchg
insl
lahf
push
or
loope
xor
fs
add
lret
aad
inc
pop
adc
jbe
cmp
add
sahf
ror
imul
sub
add
cs
xor
sbb
xchg
jns
push
insb
mov
and
push
and
jno
scas
sub
fidivl
and
lods
jo
adc
xor
rcl
fistpl
aas
jl
or
popf
add
adc
xor
imul
dec
xchg
jecxz
shlb
and
fldt
into
adc
rcll
ljmp
dec
fchs
cmp
lcall
cmp
js
leave
stos
out
pusha
mov
push
clc
push
mov
lods
dec
jns
pop
or
cmp
test
sbbl
cwtl
aas
mov
and
aaa
data16
sub
jae
mov
sub
cs
add
jp
and
inc
jno
mov
rcrb
cltd
and
fiaddl
ljmp
and
in
lds
shll
aas
mov
insl
mov
push
fwait
in
popf
dec
arpl
inc
sbb
mov
push
sahf
push
stos
jbe
and
lods
add
mov
stc
arpl
jge
pop
cmpsb
aam
fists
movsl
sub
mov
jmp
or
jns
and
ljmp
push
and
lret
jno
es
js
fs
popf
xor
cmp
lds
xor
fisttpl
adcb
mov
outsb
js
cwtl
cld
imul
cwtl
mov
push
outsb
iret
cltd
xlat
es
adc
or
jg
in
lret
xchg
sub
pop
scas
hlt
negl
mov
je
push
mov
push
dec
sub
jecxz
cmpsl
cmpsb
jno
addl
jl
sub
dec
ret
push
fsts
lahf
mov
mov
xchg
pop
adc
repz
adc
rorl
ficomps
loop
imul
mov
arpl
push
dec
test
lahf
jg
aad
out
lods
mov
xchg
xor
lcall
loope
andb
xchg
stc
out
scas
lods
mov
or
in
cmpsl
addr16
les
sti
push
sbb
xor
xlat
sub
dec
sbb
testw
sub
cmp
xlat
outsb
jns
loop
xchg
dec
cmp
sarl
inc
popa
cwtl
scas
sub
cmc
call
add
add
sbb
sub
imul
ffree
test
nop
fnstcw
out
pop
fcoml
ss
cmp
inc
mov
ds
sub
adc
jb
xor
flds
xchg
int
cmpsb
xchg
and
mov
bound
test
sahf
push
cmc
call
or
scas
pushf
call
xchg
sbb
arpl
xor
lahf
inc
sub
mov
sets
sbb
sbb
mov
movsl
dec
lea
movsb
clc
cmpsb
pop
arpl
movsl
ds
pop
jb
outsb
stos
jmp
xor
scas
jo
ret
cli
insl
shlb
js
jge
in
cmpsl
test
pop
flds
out
lret
orb
aad
gs
lods
push
cmp
and
mov
xchg
push
insb
sub
fistpll
out
shl
movsb
xchg
es
out
dec
xor
inc
into
mov
inc
lods
mov
fisttpll
inc
add
add
push
jnp
inc
mov
mov
lds
mov
cli
cmp
pushf
jne
rcr
cs
divl
sbb
ja
xchg
sub
bound
push
or
cmp
test
int3
out
mov
cmp
repz
ret
fistpll
outsl
cmp
fstps
addr16
lods
jp
std
fwait
lods
sub
push
sub
rorl
iret
xor
into
dec
jo
xor
xchg
xchg
out
dec
mov
or
push
push
lock
lret
and
jns
lret
or
dec
lods
cmp
push
sub
shll
ret
pop
and
sahf
sub
cld
cmc
fildll
pop
pusha
and
cmp
inc
adc
cwtl
enter
sub
jae
aad
mov
add
jb
lods
or
sub
pop
jns
xchg
subl
imul
push
and
pop
adc
fsubrs
xlat
pop
jmp
cli
les
mov
cmc
jmp
pop
mov
jns
scas
out
andl
jp
js
outsb
push
inc
jp
mov
mov
jo
pop
loop
push
mov
inc
imul
sub
dec
or
aam
sahf
xchg
or
jmp
lcall
mov
pop
loop
mov
adc
shrl
push
or
sti
das
stos
pusha
cwtl
xchg
adc
stos
clc
xchg
outsb
inc
mov
inc
cmpsb
xchg
add
stos
inc
xor
cmpsl
or
sub
int3
push
add
out
cmp
or
mov
test
sub
mov
and
mov
xlat
jne
mov
mov
push
std
fistps
inc
pushf
sub
cmp
outsb
dec
imulb
cli
lods
pop
cmp
cmpsl
jns
aaa
stos
add
outsb
add
in
add
shl
sbb
inc
and
xor
or
push
loop
ss
lret
pushl
jmp
outsl
mov
push
loop
les
outsb
lds
cmp
pop
aaa
jbe
imull
lar
pop
mov
int3
shrl
dec
sbb
sub
test
enter
xchg
fisttpll
or
scas
out
and
xor
mov
or
rsm
ffreep
sbb
out
cwtl
xchg
inc
lods
push
hlt
push
inc
aad
inc
add
push
inc
lea
lods
sub
daa
pop
out
mov
jmp
loope
or
mov
mov
imul
mov
data16
pop
dec
out
push
or
mov
stc
add
stc
clc
cmp
xor
jno
push
mov
pusha
aaa
fdivr
sbb
xor
das
lds
mov
dec
fwait
sti
rcrb
test
icebp
mov
sub
sahf
es
cmpsb
fwait
cld
sbb
xchg
dec
sbb
inc
mov
fcoms
xchg
clc
push
jno
mov
inc
mov
mov
vpsllw
lret
or
add
mov
flds
push
pop
pop
clc
sbb
out
sbb
mov
sbb
ds
adcl
popf
outsb
push
mov
test
pop
fstpl
popf
aad
mov
add
dec
pop
sbb
jb
outsb
movsl
sub
jp
adc
mov
in
mov
sahf
cli
mov
testl
popf
push
cmp
imul
xchg
adc
lods
or
mov
or
inc
xchg
test
stos
mov
add
jne
push
xchg
popa
inc
out
lods
rorl
out
stos
daa
jae
cmpsb
mov
movsl
roll
mov
or
jns
push
lock
adcl
pop
loope
jecxz
push
mov
mov
jb
aam
adc
xchg
decb
adc
push
pop
imul
lcall
mov
adc
outsl
cmpb
ret
cmp
imul
mov
fdivrp
pop
call
pop
test
lcall
adc
fstpt
sbb
push
cmp
xor
hlt
sti
mov
jg
sub
xchg
push
dec
cwtl
jo
xor
sub
int3
jno
push
cmp
mov
lock
les
push
hlt
daa
sbb
fdivrp
insl
sahf
fstpt
shlb
push
scas
imul
push
push
call
fsubs
das
cmpsb
jno
jne
imul
adc
xchg
push
sahf
and
xchg
mov
and
push
pop
mov
fdiv
outsb
adc
pop
fwait
jge
or
lods
and
jle
loopne
jo
xor
aas
call
hlt
popf
push
pop
faddl
mov
jne
dec
leave
movsb
incb
movsl
push
push
ss
test
mov
xchg
pop
insb
test
sbb
test
add
jmp
ret
dec
mov
fmull
idivb
shr
imul
inc
jecxz
shll
aam
xchg
cmp
movl
cwtl
fwait
in
in
lock
push
imul
mov
mov
or
data16
stc
mov
cld
ret
loope
stos
fmuls
xor
and
lods
fnstsw
cmpl
pop
clc
and
imul
je
sub
repz
mov
push
test
cmp
adc
je
mov
push
cmp
mov
jl
arpl
xor
pop
pop
imul
and
or
jl
adc
xchg
lds
sti
xor
cli
dec
jne
icebp
sbb
xorl
sbb
aam
popa
sub
mov
ret
into
push
jecxz,pt
repz
mov
and
outsb
sub
or
add
jb
add
lds
cmp
xor
xlat
pop
clc
lret
outsl
arpl
in
negl
mov
xor
loope
pop
xchg
imul
mov
iret
jne
and
daa
push
adc
scas
xchg
xchg
mov
or
out
cwtl
jg
negb
scas
add
leave
rol
dec
out
push
lret
fdivs
aas
in
in
add
mov
jecxz
pop
or
data16
and
xchg
pushf
jle
inc
pusha
out
arpl
scas
adc
ret
jne
pop
sub
test
stos
cs
mov
jo
jle
pop
adc
inc
out
dec
sbb
insl
or
leave
subb
pop
and
push
push
or
sti
inc
cli
sub
cmp
jecxz
sbb
fcoml
shll
les
adc
inc
imul
pop
shrl
cmpsl
dec
out
cltd
pop
xor
cld
xlat
imul
sbb
mov
jg
mov
loop
hlt
push
cmp
aad
in
addl
mov
in
out
fmuls
ss
loope
fistl
movsb
push
in
popa
ljmp
pop
out
jecxz
movsb
sub
fistpl
nop
or
inc
cli
dec
jno
inc
js
insb
mov
jl
rcrb
lret
and
push
lods
pusha
test
cmc
aam
xchg
push
sub
add
or
stos
repz
push
or
xorl
into
scas
and
add
and
imul
push
and
dec
shl
jns
andl
push
add
stc
lea
push
and
mov
cwtl
das
daa
insl
sbb
push
cmpsl
lahf
jno
pop
icebp
addl
outsb
mov
pop
loop
mov
add
cmpsb
pop
testl
lds
xor
xchg
xchg
popf
jecxz
dec
lock
jg
xor
pop
push
xor
hlt
jl
daa
xor
mov
inc
cmp
cmp
jnp
pushf
xor
push
or
xchg
lret
pop
mov
out
ja
outsb
adc
lods
push
cmp
pop
movb
add
or
sub
das
rcrl
push
mov
mov
jmp
lahf
leave
cmovae
sarb
pop
outsl
call
xchg
adc
idivb
and
js
les
and
dec
pushf
pop
mov
daa
xchg
pop
andb
inc
lock
bound
sbbl
jecxz
mov
loope
mov
xor
mov
je
cmpsb
aam
mov
out
dec
mov
fs
nop
test
stc
xchg
fisubl
pop
test
push
les
xchg
cmp
sub
dec
xor
mov
mov
pop
and
or
mov
fs
adcb
adc
sub
decb
xor
xchg
and
push
mov
pop
pushf
xadd
mov
pop
pop
and
loop
jb
xor
mov
test
jb
cmp
jo
mov
dec
xchg
adc
xor
or
fs
and
adc
lahf
insb
pop
test
add
leave
imul
jb
pop
xor
subb
add
mov
cli
add
cld
stc
leave
jmp
sub
adc
std
mov
adc
mov
insb
js
mov
sub
sub
repnz
std
mov
fwait
jl
jmp
sub
imul
xchg
xor
loop
pop
les
lahf
addr16
add
adc
imul
pop
mov
cltd
push
mov
mov
push
outsl
xchg
and
and
mov
sahf
js
jge
outsb
lds
nop
mov
pop
and
xchg
je
dec
cmp
adc
inc
push
mov
repz
sub
lock
les
pushf
pusha
out
loop
mov
adc
xor
sub
cmc
add
js
in
mov
pop
rcr
mov
fcomi
lods
icebp
out
and
aas
lods
stos
fimull
hlt
xchg
sub
inc
sbb
push
daa
mov
in
mov
mov
leave
sub
push
or
pop
jnp
jle
jnp
dec
sbbl
test
rorl
enter
jp
lret
addr16
adc
gs
fdivl
adc
pop
mov
mov
sbb
adc
out
mov
mov
ret
aam
jns
mov
push
dec
sbb
add
fcoml
xor
jmp
aas
sub
lods
pushf
mov
and
fsqrt
aam
inc
xor
mov
inc
or
push
jg
push
sub
mov
insb
in
fisubs
sub
sub
pop
data16
sbb
or
dec
jnp
fcoml
xor
xlat
jnp
xlat
outsb
pop
push
fdivl
jmp
sbb
scas
cmp
mov
mov
loope
adc
xchg
rclb
jge
ss
in
scas
dec
or
sbb
push
imul
ret
addl
mov
pop
inc
mov
inc
xchg
mov
or
imul
jge
jne
add
aam
cs
push
adc
imul
shrb
push
popa
xor
scas
test
xor
in
pop
out
clc
add
pop
stos
loopne
jmp
loop
loop
and
jbe
jmp
add
push
jle
sarl
out
ret
ret
xchg
lds
imul
xchg
stos
pop
xor
ret
and
sub
push
pop
lahf
jl
stos
sub
jbe
dec
in
enter
stos
in
xchg
sti
xor
mov
jg
xor
dec
insb
and
test
cmp
sbb
stos
cld
sub
fcomi
and
or
movsl
add
or
and
movsb
out
rorl
rcll
push
push
add
mov
stos
lret
js
mov
mov
sbb
lahf
xor
mov
gs
sbb
cmp
push
cmpsl
adc
and
shlb
mov
jo
cltd
xchg
xchg
sub
insl
push
push
adc
call
pop
or
push
adc
addr16
push
cltd
lods
gs
xchg
push
pop
push
dec
adc
ss
in
shl
lds
dec
jecxz
pushf
out
ret
loop
mov
out
popf
imul
daa
sbbl
xchg
pop
jge
sarl
inc
or
sbb
shl
mov
xchg
shr
mov
pop
sbb
scas
add
xchg
jl
test
add
fs
inc
add
hlt
jb
aam
pushf
fwait
jne
jl
pop
adc
or
add
sti
test
mov
pop
aaa
xchg
and
std
mov
addr16
ror
into
push
aam
mov
or
jmp
aad
jno
or
popl
ljmp
push
mov
jno
neg
imul
dec
call
sti
imul
cld
enter
adc
xchg
cmp
xchg
loop
xchg
ss
xchg
jbe
mov
sahf
mov
call
cld
stc
push
movsl
in
cmc
mov
or
out
loope
popf
imul
scas
idivl
aaa
popa
mov
int
test
jecxz
arpl
push
ja
xchg
mov
lods
xor
jne
add
hlt
inc
cli
add
sbb
stos
or
jnp
sbbb
test
jb
sbb
mov
scas
scas
pop
out
icebp
shrl
in
xchg
jne
cmpsl
stos
mov
mov
imul
out
pop
mov
test
or
cmp
add
fnsave
inc
outsb
aam
outsb
inc
lret
into
xor
jnp
push
mov
pop
mov
pop
xor
pushf
dec
cld
jg
test
pop
hlt
xlat
jecxz
lcall
inc
or
pop
cmpsb
mov
xchg
push
repnz
addr16
xchg
shrl
sub
xchg
xor
dec
cmp
sbbl
cld
lret
xchg
push
xchg
popf
xor
xchg
daa
mov
sub
cmp
add
test
rorb
dec
into
dec
pushf
div
rcrl
xchg
enter
jl
xor
xchg
xor
ret
sbb
mov
lcall
adc
pop
add
sbb
notb
jne
pop
xor
aam
add
test
push
add
lahf
dec
xor
and
fists
mov
lahf
fstps
mov
lods
cmp
dec
cmp
adc
gs
loope
gs
xor
out
pop
push
mov
ficomps
cmp
jbe
or
clc
aad
aaa
xor
xor
daa
das
and
fldl
inc
fbld
add
mov
movsl
into
sbb
jge
testb
adc
jle
loope
jmp
adc
inc
add
std
mov
cmpsb
aad
xchg
adc
mov
int3
stc
push
sbb
outsb
hlt
jmp
inc
cltd
mov
iret
dec
sub
icebp
mov
or
adc
mov
mov
ficomps
fcoml
sar
lahf
aad
into
dec
jle
stos
adc
xor
pop
mov
inc
add
imul
or
push
push
ret
mov
jle
inc
push
js
pop
and
mov
add
cltd
cs
in
les
aaa
mov
fidivrl
gs
mov
push
inc
pop
jnp
outsb
xor
pusha
jp
mov
cs
mov
and
andb
mov
insl
pop
ja
movsb
and
lock
aas
gs
add
cmpsl
stos
cmp
lret
loopne
mov
dec
xor
mov
popa
movsl
jb
nop
and
cld
pop
xor
inc
jl
mov
pop
sti
call
cmp
mov
nop
jle
aad
push
sub
sbbb
dec
push
repz
mov
sub
cmpsl
lret
fsts
push
fcom
mov
sbb
xchg
mov
aam
jle
push
cmp
loopew
dec
loopne
movsb
shll
and
mov
outsl
leave
mov
pop
and
sarl
mov
stos
ds
mov
sub
mov
and
push
lahf
inc
jecxz
mov
ficompl
cmc
setns
cmp
and
sbb
in
push
cmpsb
jno
cmp
cmp
jnp
gs
mov
lock
pusha
negb
push
push
dec
cmp
setge
xchg
or
rcrl
loop
mov
pop
xchg
jge
sbb
xor
xchg
inc
ljmp
or
bound
loop
push
inc
je
outsb
scas
xchg
imul
push
push
xorb
shll
xor
nop
jnp
or
jo
lds
mov
call
fs
sahf
imul
rorb
data16
or
dec
inc
shr
iret
pop
jg
jne
xor
es
movsl
pop
sub
insb
xor
xchg
xor
cmp
aaa
jns
sarl
inc
adc
inc
jg
test
mov
dec
jb
mov
das
mov
inc
mov
and
push
lahf
lods
adc
cld
das
xor
and
dec
addr16
adc
lret
mov
sarb
lret
push
fbld
dec
negl
or
mov
lcall
cmp
inc
mov
dec
cmp
gs
xchg
and
sbb
loop
sbb
dec
cmp
inc
jnp
dec
in
mov
fstps
xor
or
sub
jp
mov
sbb
push
jp
mov
jbe
xchg
xchg
and
insl
jle
fs
inc
cltd
jle
push
xorb
and
std
sbb
cmp
sub
into
sub
push
nop
stc
cld
adc
lsl
es
test
lods
sti
lods
bnd
sbb
clc
fwait
push
pop
aam
add
outsb
out
xlat
xor
adc
xchg
xchg
adc
dec
movsl
add
mov
in
cltd
jle
mov
cltd
xor
cmpl
push
lea
ljmp
ja
in
mov
xchg
mov
pop
mov
jb
sbb
and
xchg
aaa
out
fldlg2
cmp
dec
jl
cwtl
add
pop
xchg
or
xor
in
push
inc
cmp
and
lock
xor
leave
mov
dec
sbbb
xlat
push
xor
mov
adc
push
ret
push
orb
sbb
mov
jne
test
hlt
and
jle
test
js
mov
leave
sti
sarl
stc
xchg
es
lret
push
aaa
icebp
mov
jae
ror
or
popa
jae
cs
loopne
imull
cmp
out
mov
movsb
pushf
push
pop
rolb
cwtl
push
popa
lcall
ret
pop
cmpl
pop
sub
sbb
xchg
cltd
sbb
cmpsl
lock
aaa
or
aad
cmp
or
mov
jecxz
les
rcrl
imull
sbb
outsb
fidivrl
jge
and
pop
xchg
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
loope
push
and
loope
jp
pop
jp
pop
fdivs
out
mov
scas
aas
sti
out
rorb
xor
mov
lret
lods
or
into
push
jnp
arpl
jae
jo
lods
std
mov
ret
arpl
ret
adc
rorb
sbb
out
lea
nop
pusha
cltd
pop
mov
push
shrl
rcl
lods
lea
mov
sub
jmp
adc
pusha
jbe
push
andl
dec
outsb
pop
lahf
movsl
in
add
sbb
jno
mov
mov
arpl
mov
mov
cmp
popa
js
inc
mov
mov
sub
xchg
idivb
adc
inc
aad
mov
fstpt
loopne
mov
jmp
push
xor
fisttps
out
and
pop
mov
dec
int3
js
mov
cmc
cmp
jno
leave
inc
mov
add
das
sti
sahf
jne
iret
and
ds
stos
or
sahf
add
repz
push
push
mov
gs
jne
pushf
std
int3
cs
mov
pop
push
sbb
lahf
outsb
adc
sbb
mov
stos
lea
popf
push
movb
sahf
cmpsb
les
adc
outsl
or
add
sahf
dec
lahf
xor
and
enter
cli
pop
mov
cmp
shl
push
fst
xchg
mov
dec
popf
jg
rcrl
mov
push
mov
aad
stc
imul
stos
xchg
dec
mov
xchg
jnp
pop
cmp
imul
sbb
xorb
scas
cmpsl
out
ret
push
mov
into
inc
add
jecxz
mov
sub
sbb
mov
jne
pop
jb
jp
and
and
adc
mov
add
jg
fisttpl
dec
daa
loop
rorl
xor
xlat
mov
sbb
rorl
xlat
sahf
daa
pusha
aaa
mov
cmc
es
aad
mov
scas
movsl
jg
out
xchg
fimuls
xchg
and
sub
cs
imul
jmp
dec
add
push
or
mov
stos
xchg
icebp
mov
in
and
adc
scas
mov
addr16
addr16
mov
lods
out
hlt
cmpsl
inc
mov
sbb
mov
xor
inc
mov
pop
cli
ret
lds
icebp
xor
pop
stos
sbb
popa
repz
mov
xchg
jnp
sarl
jns
adc
iret
mov
test
push
sub
stc
int3
mov
ret
or
xor
int
fidivl
jbe
or
nop
test
inc
stos
rol
xchg
xchg
and
enter
scas
jle
data16
insl
sbb
cmc
pushf
cld
cltd
in
xor
xchg
jl
push
lret
xor
jle
xchg
sub
ds
inc
mov
adc
adc
imul
jp,pn
push
imul
mov
js
mov
insb
add
std
cmp
adc
push
lret
lea
das
inc
jno
out
or
jo
xor
sbb
xchg
lret
and
dec
rorl
push
out
cmc
mov
mov
pop
sub
test
cli
call
vpsadbw
push
sub
stos
xor
test
adc
sbb
cmp
xlat
sti
outsl
push
pop
aam
int
mov
adc
inc
popf
ljmp
cmpsl
daa
and
popa
lret
rcr
inc
dec
daa
lahf
add
leave
or
pop
xchg
jne
push
push
scas
fldcw
fistpl
xchg
sarl
test
movsl
push
cmp
imul
and
and
pop
out
mov
aad
fstpt
push
lds
clc
fistpll
std
xlat
mov
aad
out
shr
push
pop
test
sub
call
into
sbb
call
cmp
mov
lds
jae
cmp
adcb
push
fs
mov
xor
insb
jns
out
adc
dec
cld
es
cmp
and
gs
insl
cmp
pop
rclb
xor
push
popf
pop
dec
shlb
xlat
mov
std
arpl
mov
xchg
and
sbb
mov
fmuls
fadds
cmpsb
cmp
mov
push
fdivl
jo
outsb
jp
mov
push
mov
fstp
sub
xor
ja
es
repnz
imul
bnd
sahf
shll
daa
fcomp
adc
push
mov
mov
in
adc
add
imulb
out
xchg
scas
jge
aas
adc
out
jl
xor
or
ficomps
leave
push
in
dec
packsswb
lods
mov
push
xor
mov
aad
mov
jb
cmpsl
ffreep
pop
outsl
int3
lds
ds
push
push
std
push
int
xchg
icebp
pop
rcrl
arpl
test
popa
sarl
pop
cmp
adc
mov
xchg
lods
mov
jne
lret
mov
adc
imul
pop
adc
pmaddwd
mov
mov
imul
in
cmpsb
jbe
mov
dec
push
adc
aad
arpl
jle
ljmp
in
pop
push
je
dec
dec
lods
in
stos
shll
mov
movb
xchg
shl
mov
mov
inc
mov
mov
movsb
add
adc
pop
pop
out
jne
sub
cmp
icebp
mov
and
cmpsl
or
lock
mov
jbe
add
ds
mov
mov
sub
add
adc
sbb
add
std
out
daa
jecxz
xor
sar
sub
lret
sti
pop
nop
fbstp
or
mov
leave
and
push
adc
mov
out
aad
xchg
pop
pop
psllq
add
fdiv
fstps
pmulhuw
push
pusha
push
adc
xor
mov
jge
in
push
ljmp
pop
repz
sbb
push
sbb
or
xchg
rcll
or
cmp
xchg
mov
or
cmp
arpl
mov
jmp
push
sbb
or
out
lods
jae
mov
or
push
push
js
sbb
jp
mov
cmp
into
jns
aam
adc
pop
xchg
ret
cmpb
adc
sbb
lahf
in
xchg
es
push
pusha
dec
mov
testl
ds
shrl
push
add
out
adc
dec
push
xor
sbb
and
outsb
lods
je
pop
mov
add
in
sar
mov
lods
fstpt
adc
jb
imul
sbb
cmpsb
dec
add
xor
pop
jge
mov
test
cmpsb
ficomps
inc
hlt
cmpsl
jp
xlat
push
call
pop
xor
fstpt
outsb
inc
das
lds
add
mov
cmp
jno
es
stos
sahf
iret
or
mov
frstor
mov
adc
sub
sahf
lret
cltd
leave
push
dec
xchg
rorl
pop
mov
mov
xlat
shlb
into
es
xchg
bound
shll
cwtl
rcrb
dec
adc
mov
and
cmp
js
and
push
or
jp
adc
sub
ret
pop
inc
int3
or
in
mov
mov
popa
push
pop
movups
arpl
insb
dec
test
sbb
jbe
and
push
addr16
aas
int3
or
mov
out
loopne
inc
div
rcrb
sti
sbbb
jnp
mov
ret
dec
dec
adc
or
xor
fildl
jo
out
dec
mov
xchg
adc
sub
mov
subl
inc
fldcw
mov
xchg
push
mov
xchg
mov
subb
mov
sarl
imul
xchg
movsl
xor
ret
jbe
pushf
mov
push
inc
xchg
movsl
jmp
sub
pop
jmp
fisubl
loop
sub
dec
sub
and
cmpsb
pop
cli
xchg
mov
popf
je
pop
mov
fs
mov
jb
cmp
addb
lret
xor
inc
clc
mov
sti
fcomip
ret
jno
leave
inc
imul
xor
out
pusha
jbe
rcr
movsl
fisttpl
dec
cld
ja
int3
dec
cmp
sbb
out
lock
aas
stos
xorl
jmp
lcall
mov
inc
repz
xor
cmpsl
ds
sub
loope
pop
and
hlt
sub
adc
mov
dec
dec
andb
mov
lods
cli
lea
adc
cmp
mov
xorl
pop
into
je
or
movsl
ljmp
fwait
cmp
xor
pusha
cmp
pop
fbstp
sti
jo
ret
sub
addr16
dec
lods
pushf
add
xchg
arpl
pop
inc
xlat
lret
fcmovne
add
jo
or
inc
lea
jne
sahf
not
add
stos
dec
lock
add
mov
out
sub
mov
fistl
xor
inc
rolb
xor
aad
or
pop
jo
fnstcw
inc
sarl
imul
jno
sub
lahf
in
push
leave
lods
mov
data16
fldcw
jmp
je,pt
testl
mov
dec
sub
mov
sub
leave
and
mov
cs
cmp
cld
xchg
push
fwait
jbe
inc
inc
incb
xor
inc
jbe
out
push
xor
ljmp
in
mov
xchg
call
in
aaa
out
ja
dec
mov
mov
mov
scas
push
into
dec
xchg
xchg
fildll
mov
dec
xchg
mov
loop
icebp
mov
in
lret
jbe
add
lret
loop
mov
mov
int3
jne
fdivs
xor
fs
stos
test
ret
enter
push
mov
jmp
pusha
mov
jne
inc
dec
xchg
fildl
add
lret
dec
push
test
jno
jmp
mov
popa
dec
adc
out
push
xchg
push
icebp
out
and
ja
lods
stc
xchg
xor
mov
popw
and
cltd
stc
lods
mov
dec
add
push
and
mov
movsl
add
push
or
scas
movl
xchg
cmp
push
jno
test
nop
nop
fdivrp
or
xor
inc
xor
pop
imul
fdivs
sub
cmp
out
jp
lret
cmpsb
movsb
xlat
sbb
lea
inc
push
inc
movsb
xor
and
clc
add
into
cmpsl
daa
bound
ret
lcall
bound
push
mov
cs
dec
out
lds
dec
pop
pushf
loop
jmp
shl
jl
mov
cs
and
cs
ljmp
sub
cmp
je
aad
test
sbb
and
mov
mov
xchg
sbb
push
rclb
int3
ljmp
out
adc
mov
mov
mov
cs
jge
add
xchg
cmp
imul
inc
jecxz
sarb
xor
dec
dec
and
sub
xor
nop
scas
dec
push
push
stos
dec
sahf
dec
repnz
clc
jmp
push
pop
pop
lods
mov
mov
lds
xchg
jmp
and
jge
inc
mov
push
cmp
sub
decb
ds
fwait
push
test
jns
and
xchg
aad
pop
lret
push
les
and
adc
jo
jbe
pop
cmc
cmpl
mov
cltd
fdivl
sarl
xchg
data16
xchg
divl
jge
test
or
sub
test
cmp
xchg
mov
lock
push
pop
sbb
imul
mov
out
dec
jo
mov
in
push
cmp
lods
call
jbe
and
mull
cmp
or
mov
test
mov
jbe
xchg
mov
add
cmpsb
jmp
inc
pop
das
cmpsb
inc
stos
jecxz
cli
imul
pop
add
aaa
pusha
daa
jmp
cwtl
pop
dec
stos
cmp
and
test
shrb
inc
mov
push
xchg
or
cmp
out
aad
xlat
scas
pop
mov
stos
push
push
or
jg
nop
ss
addr16
and
fiaddl
add
mov
insl
nop
lods
and
xchg
sahf
ds
sub
sub
mov
and
rorb
pop
fdivp
ret
cli
xchg
pop
dec
add
and
inc
mov
cmp
cmp
sub
lods
cmp
lea
loope
dec
push
bound
xor
jle
movsl
imul
cmp
cmpsb
mov
jbe
test
andl
sbbl
jecxz
xchg
or
add
outsb
sbb
push
sbb
mov
add
xchg
push
pop
dec
fisubrl
daa
jnp
or
sub
jmp
add
call
in
int3
ret
cmpsl
scas
xor
mov
pop
iret
add
or
rolb
push
mov
sub
cmp
xor
cmp
xchg
test
imul
xchg
scas
aam
cmp
lea
mov
add
int3
mov
in
mov
push
push
daa
mov
out
and
sbb
fistl
mov
hlt
fldt
dec
inc
adc
cmp
mov
enter
dec
mov
hlt
sub
cmp
push
data16
loop
push
adcl
sbb
push
lcall
out
fs
hlt
int
cmp
jmp
dec
lcall
adc
or
xchg
in
or
sbb
int3
stos
push
insl
jle
jecxz
insl
pop
sub
cmp
or
hlt
mov
and
cmp
push
lds
mov
cli
adc
aad
inc
and
js
mov
cmp
popf
call
fs
dec
mov
cmp
mov
xchg
jmp
flds
xor
dec
popf
ss
ja
fwait
mov
insl
xchg
push
xchg
and
pop
in
dec
bound
cwtl
popl
and
addl
jge
pop
nop
not
arpl
push
ret
ror
pop
lods
inc
jnp
dec
je
test
adc
js
mov
fldt
dec
stos
push
add
push
aaa
sahf
ja
aas
cmp
test
cld
mov
pop
mov
das
inc
aam
sbb
data16
ds
or
add
clc
jg
adc
adc
fstpl
xchg
xor
lock
sbb
cmp
mov
xor
cmp
sbb
hlt
dec
aas
sub
je
ffreep
stos
cwtl
or
negb
sbb
andl
ds
dec
gs
push
xchg
mov
out
inc
mov
adc
add
xor
or
add
or
push
fmul
add
pop
ret
push
into
mov
sahf
decl
test
pop
lret
xchg
push
pop
call
push
xchg
dec
arpl
xor
je
test
hlt
ftst
dec
aaa
and
aam
xchg
aam
std
mov
popa
ds
lds
cmpsl
lods
loope
ja
sahf
stc
push
nop
pop
mov
jnp
pusha
mov
nop
cmp
test
adc
xchg
popf
xchg
cmp
popf
inc
cmpsl
nop
ljmp
mov
adc
movsl
sbb
lock
imul
push
in
xchg
out
inc
inc
insb
addr16
aaa
cmpsb
cmpsb
divb
ds
in
dec
shl
dec
cmpl
je
outsb
jmp
jecxz
push
ljmp
leave
push
cmc
mov
shlb
ret
orl
sahf
sub
add
xchg
sub
out
xchg
dec
out
adc
repnz
leave
das
inc
ficoml
stc
stos
push
scas
mov
stos
jecxz
mov
shlb
es
mov
repnz
insl
xchg
jle
loopne
xchg
dec
pop
gs
sbb
jge
push
mov
push
ret
pop
xchg
jmp
add
jmp
daa
shrb
jmp
inc
sbb
pop
push
xchg
xor
cmc
in
les
std
jne
adc
int3
cwtl
lock
outsl
mov
mov
or
dec
ss
and
inc
mov
imul
out
dec
jb
lea
test
xorl
mov
pop
pop
mov
ljmp
xor
out
xor
add
out
lret
popa
loope
fstps
into
fdivrl
mov
push
loope
ljmp
scas
cmpsb
inc
dec
push
xor
idiv
lods
test
sbb
add
lret
test
jecxz
pop
in
push
rcrb
cmc
xchg
push
movsl
mov
cmpl
iret
add
sbb
lds
bound
nop
les
rcrb
mov
addl
jmp
xchg
in
push
cmpl
adc
out
scas
pushf
mov
or
cmpsl
mov
pshufw
pop
ja
addl
stos
fyl2x
mov
scas
add
fisttps
mov
mov
clc
mov
scas
jge
sbb
out
pop
adc
adc
pop
dec
inc
adc
inc
xor
mov
sbb
or
sub
icebp
fcom
mov
mov
cltd
loope
js
sub
add
xor
adc
mov
lds
aas
ds
and
cwtl
fstpt
sbb
int3
addr16
add
pop
or
xor
push
mov
and
xchg
sub
inc
movsb
sahf
call
lods
jbe
in
xorl
popa
mov
test
addb
pop
xlat
mov
mov
mov
or
cli
les
lret
mov
outsl
fnsave
sbb
adc
xchg
mov
aas
sbb
mov
hlt
dec
lret
hlt
add
out
inc
fwait
test
lcall
stos
call
inc
jbe
loopne
xchg
cmp
out
lods
in
jbe
in
inc
pushf
arpl
pop
mov
mov
scas
pop
jmp
notb
jb
push
or
nop
add
sbb
pop
mov
out
ds
popf
es
sbb
mov
movsb
outsl
adc
data16
push
or
add
fcoms
repz
adc
insb
test
xor
fs
jb
cmpsl
mov
mov
mov
lods
mov
mov
daa
ret
fldenv
pop
dec
lcall
ljmp
test
sahf
lcall
out
in
cmp
js
ja
cs
mov
jns
iret
xchg
insl
mov
dec
pushf
mov
movsl
xor
movsl
lds
sbb
xchg
sub
mov
bound
lcall
imul
adc
adc
in
movsl
xchg
pop
into
mov
inc
dec
roll
sbb
movsl
call
mov
dec
push
cmp
icebp
les
add
pop
xchg
lods
cmpsb
repnz
xor
test
lret
aad
fwait
jl
inc
jp
pusha
popa
sbb
std
test
cld
mov
jo
mov
mov
inc
das
jno
and
pop
fstpl
xchg
pusha
sbb
xchg
push
adc
aaa
xchg
ret
movsb
lea
mov
in
arpl
or
push
adc
lods
mov
add
pop
bound
lods
inc
ljmp
xor
cmp
xchg
sbb
popa
aaa
adc
shrb
sbb
push
enter
dec
xchg
or
and
jbe
or
rcrl
jae
jge
shl
subb
aas
mov
stc
test
mov
je
inc
jle
imul
cmp
adc
shl
xchg
int3
enter
cmp
mov
lcall
mov
ljmp
cld
xlat
loop
or
fdivrp
adc
test
dec
loope
clc
jp
xor
mov
push
jne
jmpw
pop
jp
mov
lret
nop
cmpsl
cmpsl
lahf
test
add
mov
pop
jnp
add
repnz
jnp
or
stc
sbb
scas
insl
ljmp
pop
out
cltd
daa
mov
jecxz
test
and
fadds
mov
cld
pop
les
ffree
ja
clc
sub
xor
in
cld
sub
or
mov
inc
fs
sahf
xchg
hlt
and
das
rcl
mov
popa
push
mov
aaa
pop
int3
lods
push
das
fisubs
pop
shl
inc
and
sub
fdivrl
add
adc
lock
xchg
mov
dec
movsb
outsb
imul
or
xlat
dec
mov
sub
sub
cld
idiv
add
int
dec
int
loope
call
in
jecxz
jb
sarb
jecxz
cmp
addr16
stos
or
pop
xchg
add
rcl
mov
incl
in
xor
pop
icebp
ss
mov
mov
xor
mov
loopne
adc
pop
loop
lea
pop
mov
dec
jne
inc
roll
jg
decb
cmpsb
or
adc
scas
mov
push
test
lahf
lods
mov
adc
in
dec
mov
movsl
les
jne
push
cmpb
mov
and
rclb
imul
int
fisubrs
lods
lock
loop
test
movsb
cmp
lock
pop
dec
loop
fwait
lret
mov
aaa
jp
jecxz
push
inc
addb
fmuls
dec
stos
repnz
jge
dec
add
sbbl
mov
mov
sbb
in
call
aas
clc
je
mov
inc
jne
add
sarl
dec
fsub
bnd
add
xchg
and
add
pushf
ret
sub
and
loope
adcb
jecxz
sbb
sbb
mov
xchg
js
push
mov
ljmp
and
jge
pop
sbb
sbb
insl
inc
aad
pop
in
loop
test
and
xchg
xchg
leave
loope
jp
pop
sbb
adc
jnp
lret
inc
movsb
sbb
mov
testb
xor
fsubrs
stos
and
gs
pop
cmp
xchg
inc
pusha
arpl
imul
dec
out
xor
divl
pop
inc
sub
je
add
push
xor
lret
jmp
pop
int3
cld
fwait
loopne
or
fildl
pop
and
leave
insl
inc
aad
cli
mov
mov
cmp
fsubl
into
sbb
arpl
or
scas
and
dec
lea
inc
xchg
in
xchg
out
push
fistpll
lea
popa
xor
sub
std
adc
out
add
mov
int
in
stos
cmp
popf
orb
shlb
insb
cmpl
fldcw
lcall
es
outsl
lods
ret
mov
lret
inc
sbb
fcomps
fbstp
or
ret
sub
icebp
ret
addb
add
mov
je
je
cmp
mov
test
in
lds
or
jns
lock
pop
inc
pushf
push
rcrl
mov
ud2
es
call
jge
sbbb
outsl
fs
xor
stos
xor
bound
and
and
insb
fcmovnu
ror
mov
xor
or
aaa
sub
xchg
mov
inc
js
xchg
cwtl
pop
push
inc
call
sub
data16
jp
aam
mov
lcall
and
psubsb
scas
mov
je
dec
out
nop
jl
sahf
sub
lahf
int
pop
xorl
push
shll
push
or
sbb
nop
cmc
std
lahf
mov
push
sahf
push
mov
lock
fistpl
das
bound
stos
pop
int
push
sub
jns
mov
xlat
xor
icebp
outsl
lods
adc
repnz
fiaddl
jns
and
jp
xchg
and
xchg
sub
push
jnp
jns
mov
shlb
addr16
popa
jne
push
xchg
in
test
pop
pop
movsb
test
aad
lahf
cmp
add
loop
push
dec
pushf
and
daa
xor
mov
xlat
xor
dec
sti
adc
fsubl
mov
push
sbb
sub
jns
sbb
push
or
mov
xchg
jno
out
adc
in
ret
pop
fwait
sub
shlb
ss
mov
or
and
jb
icebp
sub
push
push
adcb
jp
sub
stos
jmp
shl
das
push
mov
dec
ss
popf
es
xchg
xchg
insb
sub
jne
cs
jmp
push
popa
adc
pop
aad
mov
xlat
cmp
push
aad
jns
pop
dec
lds
cmp
mov
sbb
data16
mov
dec
xor
inc
cmp
or
imul
cmp
mov
movsl
icebp
fistps
mov
dec
addr16
mov
cmpsb
xlat
icebp
xchg
fstl
cmpb
mov
outsl
push
fisubs
mov
pop
fstl
sti
xor
pop
ret
lcall
pop
inc
mov
xor
add
icebp
aas
xor
mov
roll
pop
add
sbb
mov
arpl
fistps
dec
xchg
std
fstl
jo
stos
bnd
shlb
or
jmp
pop
jo
mov
fwait
pop
mov
xchg
inc
es
lods
xor
sbb
xor
pop
or
daa
outsl
xchg
les
stos
hlt
cmpsb
sbb
stos
mov
scas
js
mov
cmp
jp
insl
pop
pop
xchg
scas
mov
imul
cwtl
add
xrelease
xchg
dec
adc
ss
adc
mov
sub
andb
and
into
dec
add
pop
test
cmp
dec
orl
mov
sbb
mov
in
lock
movsb
inc
or
pop
or
push
aam
daa
mov
add
aaa
jmp
jmp
test
xor
js
and
shl
sbb
mov
jge
dec
out
les
xchg
or
push
ds
dec
inc
les
lret
int
dec
int
shll
push
mov
inc
pushf
test
call
pop
jp
push
in
mov
aam
fcmovu
cwtl
imul
jecxz
pop
jg
add
cmpsb
or
dec
lds
fiaddl
jo
jae
mov
pop
mov
or
cmp
out
sub
fs
xchg
sbb
xor
fcoms
sub
pop
mov
cmp
into
mov
loop
push
pop
xor
sti
repz
dec
adc
push
pop
ds
xchg
nop
scas
outsl
pop
mov
xor
mov
mov
mov
xchg
xchg
jae
inc
pop
cwtl
divl
movsb
gs
out
sub
add
push
push
icebp
mov
dec
pop
into
out
mov
cmp
fs
bound
sbb
inc
sub
outsl
adc
adc
push
aad
in
hlt
add
mov
stc
fisubs
loop
add
inc
or
and
or
mov
loop
int
movb
mov
xchg
push
xchg
push
ljmp
aam
xor
xchg
and
cmc
push
mov
pop
pop
int3
mov
push
lahf
dec
lret
jmp
sbb
pop
mov
mov
xlat
pop
mov
insb
fcomip
jbe
mov
enter
cld
out
jnp
push
loopne
sub
out
push
adc
popf
sbb
sbb
das
stos
ds
xor
in
jle
mov
lahf
push
xchg
fcoms
das
sbb
frstor
cltd
clc
xor
pusha
jne
cli
lret
out
sub
xlat
insl
mov
mov
or
inc
not
and
push
lods
lds
mov
jbe
and
or
out
ss
aad
rcl
add
lret
mov
pop
sar
ss
scas
pop
xlat
dec
shlb
jbe
mov
and
dec
test
or
ret
xchg
lods
fists
rcl
sarl
dec
lods
insb
lret
mov
andb
imul
stos
adc
mov
cli
divb
and
or
aas
inc
sub
and
and
xchg
cmp
arpl
rcrb
add
fcomps
test
push
mov
std
xchg
push
mov
das
cmp
ljmp
gs
jnp
out
sbbb
fwait
or
or
mov
push
jns
jae
dec
fs
pop
dec
into
sahf
int3
inc
stos
sbb
popa
pop
stos
xchg
fbstp
jo
jmp
fstps
sbb
sub
dec
jo
pusha
das
xchg
adc
xchg
xor
cli
arpl
inc
jecxz
repz
in
sbb
nop
inc
adc
inc
ds
mov
mov
dec
push
push
mov
orl
jl
fldl
loop
xchg
movsl
sahf
sbb
stos
lret
mov
and
cmpsb
xchg
ret
rcrb
cwtl
push
rcl
pop
call
dec
loope
cmp
xchg
mov
or
push
pop
lock
inc
jnp
sar
mov
xchg
aas
adcb
ss
shrb
inc
push
orl
pop
add
push
insb
and
mov
loopne
push
fstpt
mov
sub
xor
fldz
sbb
jb
pop
add
pusha
in
insl
cmp
pushl
cltd
and
sub
je
sub
aas
insb
mov
xor
pop
bound
and
add
fldcw
pop
push
push
imul
mov
xchg
scas
dec
inc
add
push
fcompl
and
pushf
test
sub
lods
and
mov
testl
ret
lock
stos
daa
inc
inc
jnp
xor
lret
sbb
push
adc
jl
lock
imul
in
out
mov
jg
push
fcoms
dec
push
cmc
or
test
xchg
nop
sbb
sbb
xchg
dec
cmp
add
sub
cmpsb
shl
push
cwtl
mov
fnstsw
push
jnp
or
xchg
xlat
adcl
xor
adc
mov
int
icebp
nop
inc
mov
inc
dec
dec
into
xchg
outsl
loop
xor
xchg
cmc
popa
sub
dec
stos
and
push
ds
mov
jmp
mov
push
mov
jge
pop
adc
mov
jo
pop
sbbb
inc
inc
cmpsb
daa
repnz
stos
add
pop
mov
dec
ret
arpl
into
cmp
sub
cwtl
fmuls
push
xchg
inc
adc
cmp
dec
stc
and
dec
add
cwtl
xchg
cmp
int3
inc
or
dec
scas
or
xchg
jge
dec
arpl
fidivrl
sahf
push
mov
mov
add
cmp
dec
pop
mov
jge
loopne
pushf
ja
lods
xchg
lret
sbb
dec
cmp
or
add
ror
mov
clc
or
xchg
int3
mov
lret
xor
mov
sub
inc
push
xchg
imul
aas
insb
movsl
sub
inc
fsubrl
jns
insl
xlat
les
or
sbb
sti
aas
pop
push
adc
insl
pusha
fisubl
cmp
ja
jne
xor
shr
mov
cwtl
xor
add
inc
je
mov
cmpsb
popf
push
push
je
jno
out
inc
sbb
scas
fistpll
out
out
cmp
or
stos
mov
mov
adc
or
xchg
push
lds
pop
jnp
test
stos
mov
lret
cmp
push
xlat
std
je
std
iret
mov
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
repz
jge
or
jp
insl
jae
std
out
dec
in
orb
ljmp
sahf
jge
outsb
es
lods
dec
push
ret
push
outsb
cmpsl
sub
sbb
jo
in
adc
in
or
dec
std
jo
ffreep
xchg
and
push
in
call
inc
sbb
out
aas
cli
ret
into
in
mov
mov
pop
lret
adc
mov
mov
inc
test
ret
add
push
mov
mov
pop
pop
dec
enter
call
lret
lret
popa
inc
scas
sub
jbe
aad
in
ja
iret
add
xchg
scas
cmp
xchg
xchg
into
out
adc
iret
arpl
jge
jb
dec
ja
movsb
dec
nop
mov
in
push
rclb
rolb
or
pop
inc
xlat
dec
mov
dec
jmp
pop
outsb
sbb
xlat
std
in
xchg
lods
mov
adc
inc
call
sbb
fmull
cwtl
stc
pushf
mov
or
movsl
fstl
imul
adc
jecxz
rorl
jns
xchg
dec
idivl
loopne
sub
inc
rolb
imul
sub
and
xchg
into
mov
xchg
in
mov
adc
out
push
scas
pushf
iret
mov
es
dec
inc
xchg
dec
pushf
test
test
insl
fisttps
sbbl
cmp
mov
into
mov
dec
jle
fcomps
and
mov
pushf
inc
out
ss
cmp
mov
int
imul
int
mov
and
push
ja
push
int
mov
adc
icebp
into
filds
xor
or
push
mov
sub
cmp
sbb
lea
mov
sbb
and
outsb
ljmp
sub
in
adc
xchg
inc
sbb
cmpl
push
pop
int3
gs
outsl
cltd
and
pop
or
mov
xchg
and
and
popl
cltd
xchg
lds
mov
mov
lcall
cwtl
adc
and
arpl
add
push
in
pop
dec
cmp
lods
jns
mov
mov
or
cmp
or
pop
shll
rcrl
popa
or
scas
jecxz
rcrl
sub
sbb
mov
and
sub
jns
lahf
sbb
lods
mov
push
subb
pusha
aad
mov
pop
sub
fnsave
cld
mov
xor
xchg
add
in
cmc
cmpsb
sub
popf
imul
sub
xor
cmc
ss
lret
mov
mov
pop
push
jmp
xor
mov
cmp
out
aam
or
nop
call
xchg
imul
pop
inc
lahf
fidivs
pop
out
ljmp
fdivs
or
iret
rcl
push
xor
jb
lea
adc
enter
es
insb
and
push
fs
imulb
adc
push
movsb
shrb
mov
cmp
cmp
clc
jae
dec
sarl
dec
fs
ficompl
mov
mov
xlat
push
pushf
jae
in
movsb
rcrl
xchg
out
push
add
push
cmp
lret
test
xor
test
jb
xchg
push
cmpsl
loop
sarl
pop
les
mov
es
andl
repnz
loope
aam
mov
xor
xchg
push
mov
sahf
xor
mov
cmp
adc
add
les
cmpsl
cld
push
pop
jnp
cli
cltd
pop
stc
dec
popf
jne
mov
fcmovbe
pop
adc
cltd
dec
lret
inc
es
cmp
in
mov
int
daa
loopne
movsb
mov
adc
push
add
push
imul
stos
sub
dec
jg
fldt
mov
fisubs
sub
xchg
xchg
out
dec
test
ljmp
ss
xchg
dec
mov
loop
bound
mov
fimuls
mov
cmp
push
push
push
xchg
mov
pop
pop
hlt
dec
lret
test
mov
and
pop
mov
in
adcl
outsl
aam
repz
mov
mov
mov
test
mov
mov
inc
imul
xchg
jg
pop
out
mov
add
das
xchg
inc
iret
mov
int
cmc
cld
mov
push
ret
pushf
jns
pop
sub
sbb
lcall
sub
mov
pop
lds
mov
daa
daa
out
test
add
pop
add
add
and
cwtl
xchg
inc
aas
pop
jns
and
scas
xchg
ret
push
and
mov
jns
inc
mov
cld
push
xor
mov
loopne
mov
push
jge
iret
clc
lret
mov
pop
test
hlt
call
pusha
mull
push
jmp
xor
mov
jo
mov
notl
mov
adcl
stos
cmp
xor
cwtl
std
cmp
ja
fincstp
sub
hlt
test
or
in
out
or
xlat
inc
fucom
mov
mov
push
into
xchg
in
mov
mov
add
jmp
dec
mov
sar
or
push
xchg
repz
out
aas
xchg
jp
cmp
add
repz
pop
adcb
xor
imul
sbb
or
movsb
dec
push
push
divl
mov
aam
or
sti
mov
mov
insl
sub
jno
push
out
mov
xchg
cmp
inc
arpl
mov
shl
push
sbb
shl
sbb
out
rcll
inc
sub
mov
xchg
arpl
addr16
mov
sub
cmp
jb
sbb
jmp
pop
inc
mov
sub
mov
jb
add
push
or
loope
and
xlat
jge
dec
or
fldenv
mov
addl
cmp
lret
add
leave
xchg
testl
cmp
push
lcall
out
in
jle
sub
mov
inc
jae
xor
add
xchg
sub
mov
stos
test
inc
aas
jae
or
sahf
pop
movsl
out
loop
out
xor
imul
inc
jmp
add
mov
lock
mov
lret
jae
mov
daa
iret
js
mov
mov
fisttps
pop
pop
ret
test
inc
or
jmp
shrl
shl
inc
fnstcw
mov
es
stc
dec
sbb
dec
dec
mov
into
movsl
out
rcrb
add
iret
aam
into
adc
jge
in
sub
mov
jecxz
stos
sbb
lock
or
and
test
xchg
or
add
mov
das
xchg
xchg
flds
cmc
notb
mov
fcmovbe
mov
jb
push
pop
dec
cld
pop
inc
popa
adc
jle
ret
push
or
addr16
bound
clc
out
std
stc
push
movsl
filds
subl
nop
xor
jns
arpl
add
shll
repz
fsts
push
cmpsl
cmc
or
push
fdivp
outsl
mov
xchg
or
in
ds
in
rclb
pop
xchg
js
lret
movsl
aas
and
popf
or
lods
lea
ret
pusha
leave
and
adc
and
inc
pop
or
popa
add
xchg
shrl
int
mov
cwtl
xchg
jl
xor
mulb
daa
dec
mov
push
lcall
sbb
xor
inc
mov
jle
sub
mov
ret
in
sub
dec
sub
ss
mov
mov
daa
jae
movsl
cmpsl
test
lret
or
jnp
mov
in
clc
sbb
add
push
jno
movsl
ljmp
leave
stos
mov
adc
sahf
std
mov
pop
cld
sbb
mov
pop
jnp
subl
lahf
mov
inc
cmp
lret
sbb
inc
in
lods
fnstsw
pop
xchg
das
std
ret
cmc
jb
gs
mov
xor
inc
pop
gs
mov
sbb
inc
xor
mov
inc
ret
imul
mov
adc
dec
mov
mov
mov
stc
jle
xchg
scas
pop
orl
mov
das
add
jb
leave
pushf
sbb
lods
out
xor
pop
fwait
mov
and
adcl
mov
dec
push
lahf
sbb
fwait
and
push
xlat
mov
rolb
push
pushf
mov
ljmp
sub
gs
cmc
sbb
adc
pop
dec
ja
or
out
push
xor
hlt
jp
cmp
rcrb
inc
cmpsl
xchg
pop
subb
pop
adc
imul
dec
xchg
xor
jbe
je
leave
xchg
xor
mov
outsb
test
and
push
add
jle
add
jl
cmpsb
mov
push
mov
sbb
pop
pop
dec
imul
stos
cld
xchg
dec
test
xchg
sbb
add
xchg
ljmp
pop
or
out
pop
test
pop
lcall
addr16
push
lret
mov
mov
jl
jo
jmp
and
mov
rcl
mov
movsb
lock
pop
aam
mov
add
dec
mov
push
sub
push
adc
inc
aad
xchg
aas
mov
mov
lea
adc
es
jbe
lds
cs
push
xor
mov
insl
add
mov
sbb
shr
int3
fsubrl
lods
inc
nop
fstps
ljmp
cld
testl
xchg
bound
and
cmc
add
mov
jecxz
mov
push
pop
sub
test
lahf
scas
dec
dec
int
in
sbb
jne
dec
jbe
xor
xchg
xchg
lock
push
outsl
push
daa
loope
clc
or
dec
jmp
pop
test
lods
mov
gs
push
int
shrl
divl
dec
idivl
mov
out
mov
in
movsl
dec
and
push
je
mov
lods
jne
push
xchg
nop
cmpsb
loopne
int3
ret
pop
stos
int3
int3
mov
xchg
jnp
adc
imul
fisubs
rolb
jno
xchg
jnp
xchg
cmp
int
xchg
scas
cwtl
pop
ds
xchg
xlat
rep
push
xor
mov
popf
fcmove
in
aaa
sub
jno
imul
iret
push
loopne
iret
add
fildl
dec
repz
mov
ljmp
sbb
lods
repnz
dec
adc
aaa
sbbl
push
pop
xor
adc
fsubl
je
sti
imul
xchg
sahf
jbe
ret
sub
scas
addr16
movsb
sbb
jbe
push
pop
leave
in
sbb
aad
sub
jmp
mov
inc
sub
in
sti
push
jns
lcall
adc
inc
push
sub
jns
iret
cmp
imul
fldt
popa
and
xchg
and
ret
imul
xchg
sbb
push
adcl
xchg
and
cmp
jp
adc
fadd
daa
imul
test
gs
daa
pop
pop
or
mov
or
andl
mov
popf
ror
adc
ret
mov
outsb
rol
push
xchg
push
divb
repnz
jae
push
gs
xchg
inc
loopne
lret
sbb
xchg
and
adc
add
bound
pop
sbbb
and
pop
imul
scas
icebp
inc
cmpsl
mov
ret
into
add
in
cmp
adc
mov
mov
jp
cmp
mov
bound
notb
cld
mov
inc
jns
fucomip
lock
xchg
ja
sbb
cwtl
out
sbb
aam
inc
pop
popf
call
and
sub
into
dec
sub
mov
or
icebp
mov
fwait
shlb
xor
jg
daa
push
mov
sbb
aam
rcr
stos
or
xorl
push
push
cmpsb
push
icebp
into
mov
scas
xlat
or
bound
adc
lcall
adc
aad
mov
mov
xor
imul
movb
add
jb
jp
imul
sbb
jne
jno
xchg
jns
jno
inc
cli
shll
add
mov
mov
aam
inc
xchg
jecxz
pop
iret
xchg
and
inc
cwtl
repnz
jmp
cli
pop
in
mov
jmp
adc
sti
int
popf
imul
cmovl
or
xchg
fistpll
bound
and
outsl
mov
xchg
cmpsl
in
cwtl
jl
ret
sbb
outsl
xor
jecxz
iret
mov
add
xchg
iret
in
adc
mov
fwait
js
nop
jecxz
and
lret
mov
and
jmp
cmp
out
or
or
adc
adc
bound
cmp
xchg
not
aad
cwtl
insb
hlt
inc
add
cld
cmpsb
fmulp
movsl
or
add
out
shl
movsb
pop
pop
xchg
mov
xor
push
jne
pop
add
fcoml
mov
sub
sarb
pop
xchg
mov
mov
mov
stos
sub
add
in
push
lret
sub
mov
sbb
jo
stos
daa
lcall
mov
pop
mov
movsl
dec
rep
xchg
dec
adc
xchg
jno
jno
mov
pushf
xor
mov
test
cmp
call
aaa
inc
inc
inc
out
xchg
enter
push
fisttpll
or
jbe
inc
or
into
dec
push
addl
cli
iret
mov
xor
adc
mov
sbb
push
jmp
push
ret
mov
rorb
xor
fldl
rol
daa
pop
cmp
sbb
dec
push
int
inc
popf
repz
dec
dec
add
sub
lock
xor
jno
xor
insb
fldenv
lds
scas
mov
popa
adc
adc
test
sbb
js
push
add
cmc
and
or
or
lcall
mov
sti
pop
dec
imul
pop
or
into
adcl
clc
mov
jmp
ds
fbld
out
cmp
aam
daa
jb
pushf
or
insl
test
cmpsl
inc
insb
add
pop
xchg
pushf
jle
push
int
pop
push
add
dec
pop
push
aam
cmp
or
xor
and
arpl
mov
fnsave
sub
add
push
push
mov
sti
sub
pop
clc
clc
mov
cld
call
dec
hlt
in
loopne
bound
in
xlat
add
pop
dec
mov
call
pop
shlb
push
add
dec
mov
pop
inc
lret
not
inc
popf
call
adc
nop
dec
repnz
scas
cltd
test
inc
fbld
push
je
adc
mov
aad
sub
pop
jle
jp
xor
movsb
imul
adc
and
add
imul
addr16
incb
jno
mov
inc
repz
lahf
dec
jp
rcll
lcall
mov
scas
lock
insb
shrb
aaa
mov
mov
mov
popf
stos
xchg
leave
cli
test
jae
push
adc
mov
sub
lock
mov
into
jne
mov
out
xchg
xor
sbb
cli
push
jl
fiaddl
sarl
lds
subl
inc
aad
sbb
repnz
pop
dec
push
aas
jno
lret
inc
pop
leave
mov
out
inc
int3
cmp
and
rol
idivb
lods
pop
mov
or
outsl
lret
jmp
pop
inc
push
lcall
cld
inc
scas
pop
and
out
dec
push
pop
or
adc
add
add
addr16
mov
jno
cwtl
sub
or
mov
arpl
test
fisubrs
les
movsl
xlat
aas
mov
mov
je
mov
in
cmc
popf
dec
mulb
outsb
inc
dec
lret
in
icebp
sbb
dec
daa
out
fwait
sbb
inc
ret
xor
cs
xchg
ffree
add
fstps
into
test
xchg
scas
scas
cld
jle
mov
mov
or
pop
lret
mov
sahf
test
jno
cmp
insb
daa
inc
jo
push
push
sbb
aam
mov
push
pop
xchg
xor
mov
jg
sbb
xchg
xor
add
cmp
inc
stos
std
out
movsl
mov
sets
fs
push
sahf
ja
cmpsl
icebp
push
shl
subl
jp
xchg
sub
mov
shll
fbstp
mov
pop
and
lock
dec
std
sbb
mov
stc
add
mov
adc
popa
push
ja
push
inc
fcmovnbe
dec
add
movsb
xchg
xchg
sub
das
fbstp
sbb
jge
or
xlat
pusha
test
shr
jbe
xor
or
clc
inc
mov
pop
push
fs
and
inc
out
movsb
das
call
ljmp
cmpsl
xchg
push
mov
xor
xor
stc
or
mov
stos
js
or
popa
inc
lret
out
mov
loopne
pop
push
xchg
stos
jae
xor
cmp
pop
adc
push
in
jp
mov
jge
lret
mov
out
imul
xor
arpl
js
mov
cmp
mov
dec
push
cmp
mov
in
rorb
into
push
or
aam
jnp
xor
cmpb
int
mov
lods
dec
pop
hlt
push
aas
cmpsl
les
xor
adc
mov
stc
dec
aaa
xor
push
ss
sub
and
pop
push
fstp
and
inc
scas
xchg
stc
sbb
xchg
mov
pop
aam
pop
xchg
and
xor
inc
jp
cltd
push
dec
repnz
xor
mov
push
inc
data16
mov
inc
fld
adc
sub
or
mov
pop
shll
mov
ja
negl
ret
lods
pop
jns
mov
inc
jbe
adc
movsl
push
sub
cmpsl
xor
sub
cs
imul
fdivr
aad
pop
rclb
mov
stos
xor
mov
arpl
add
sub
xor
scas
sub
leave
add
sbb
add
jnp
xor
aam
subl
or
xor
inc
bound
xchg
add
push
out
mov
mov
mov
mov
dec
push
pusha
xlat
into
mov
ficompl
lds
or
shll
ljmp
sahf
sub
and
test
cmp
xchg
push
fs
cmp
scas
xor
sub
mov
lret
loop
ret
jge
lock
loope
sbb
mov
aam
or
aad
jae
sub
insb
loop
mov
xchg
repz
enter
mov
cmp
mov
mov
sbb
mov
shrb
cwtl
decb
xorl
or
sbb
lods
mov
lret
bound
imul
jecxz
and
in
cmpsl
or
xchg
and
mov
fmull
push
jno
fidivrl
sbb
sub
sbb
sarb
mov
cld
dec
jns
sub
xor
lea
sub
push
mov
leave
pushf
nop
sti
mov
pusha
icebp
jbe
inc
push
outsl
lock
ret
fwait
lock
dec
les
jle
sbb
cmp
add
ljmp
mov
loopne
mov
inc
mov
scas
gs
std
stc
fcmovbe
xchg
not
xchg
imul
xor
jae
sbb
inc
xchg
js
xchg
jbe
and
in
test
repz
test
jns
xlat
daa
clc
xor
cmc
out
ds
rcll
fadds
push
insl
adc
cmpsb
in
iret
lahf
mov
inc
or
rolb
sub
adcb
cmp
jb
push
and
sbb
pop
pop
adc
addb
dec
std
call
and
add
mov
enter
scas
jae
sahf
loopne
mov
loope
inc
call
dec
adc
mov
rdtsc
mov
mov
push
add
sbb
in
test
stos
fdivl
push
cmp
jg
jp
xchg
xlat
jno
or
push
adc
mov
shl
imul
mov
push
or
ret
xor
sti
les
addb
sarl
in
sbb
xchg
loopne
leave
stos
jl
mov
jno
imul
test
sbb
push
jmp
arpl
sahf
ljmp
xlat
cmpsl
and
xchg
inc
dec
mov
mov
inc
mov
lret
dec
clc
adc
pushl
cmp
lret
rcl
das
iret
push
mov
mov
jecxz
aaa
repnz
call
add
inc
or
fnstenv
pop
cwtl
les
xor
stos
daa
out
jbe
lds
subl
aam
inc
and
cmp
mov
and
push
shlb
jge
int3
repz
mov
cmpsl
ficoml
or
jns
mov
call
add
arpl
call
in
add
test
test
pop
lahf
push
out
movntps
xchg
arpl
mov
inc
pop
xchg
adc
jo
mov
mov
xchg
mov
lret
insl
lcall
lret
push
xchg
popl
jg
movsl
dec
out
dec
mov
into
aaa
movsl
xor
sahf
add
cmp
sub
and
cwtl
push
push
jne
inc
add
aam
mov
popf
mov
gs
inc
sbb
addb
or
jb
out
stos
add
imul
dec
mov
cmp
push
xchg
dec
push
dec
adc
les
push
adc
les
cmp
mov
and
arpl
dec
ret
loopne
dec
push
cld
jg
psrlw
lods
int3
inc
sbb
fcmovbe
lcall
xlat
sbb
fldl
and
fcmovnbe
decl
pusha
popa
mov
test
mov
aaa
cmp
pusha
mov
std
test
push
rcl
shrb
sarl
mov
and
or
es
cmp
xchg
mov
pusha
das
mov
cli
cmp
xorl
insb
daa
xchg
add
icebp
dec
adc
mov
dec
idivb
cmp
xor
aad
mov
aam
adc
or
loopne
pop
subl
aas
std
roll
hlt
rcl
outsb
popf
sub
out
xchg
sbb
imul
adc
icebp
jle
stc
mov
pusha
mov
push
adc
jno
cmpsb
inc
outsb
addr16
lods
aas
out
mov
and
adc
and
pop
popf
mov
push
pop
arpl
push
xchg
pop
push
sbb
clc
nop
lods
in
push
cmp
adc
jno
dec
jae
dec
imul
loop
dec
pop
cmp
push
and
push
xor
test
out
and
xor
xor
movsb
js
mov
xchg
push
mov
mov
cmpsl
popa
or
addl
mov
add
dec
sub
ror
lahf
push
jo
adc
aam
xor
insl
dec
imul
divb
adc
leave
popa
pop
jecxz
adc
jmp
mov
push
mov
or
jle
cmp
or
xor
jae
and
or
mov
mov
or
xchg
ds
hlt
loope
pop
je
inc
fildll
insb
movsl
push
dec
and
notl
pusha
loope
push
stos
cli
pop
fnstenv
sahf
insl
mov
pop
sbb
stos
jge
jge
subb
mov
icebp
sub
fcom
dec
xor
out
mov
fs
jbe
outsl
add
inc
mov
ss
fnstcw
repnz
lods
or
insl
mov
xchg
mov
mov
dec
js
in
sub
fs
add
fcom
adc
scas
pop
lea
mov
push
subl
pop
cmp
dec
mov
call
xchg
xor
clc
inc
dec
push
fcom
xchg
jae
shrw
jo
cmc
lea
in
inc
adc
mov
mov
dec
out
xchg
andb
adc
out
jne
or
inc
popf
xor
or
jnp
ss
rorl
dec
shll
push
sbb
hlt
push
jecxz
test
lret
lret
fs
sub
cmp
in
jns
add
mov
test
xchg
and
pushf
ret
mov
pop
lcall
jns
mov
dec
and
jne
mov
aas
notb
xchg
add
test
and
stc
or
ds
ja
cltd
push
addb
push
test
ret
addr16
minps
adc
xchg
sti
jge
cltd
xchg
jns
repnz
jl
sub
sub
sbb
out
in
stos
jae
cmp
push
xchg
fwait
mov
out
je
dec
jle
push
pop
mov
jle
ret
jmp
test
stos
mov
adc
aad
xor
pop
gs
iret
or
mov
xor
jge
cs
push
sub
xor
hlt
shlb
add
jecxz
sub
xchg
out
jl
xor
xor
mov
shrl
or
add
shrb
push
lcall
call
sahf
inc
xchg
aaa
xchg
xor
and
inc
pop
int3
xchg
sbb
jno
add
sbb
sub
rolb
xor
lret
xor
xchg
mov
mov
inc
dec
je
out
lret
xchg
xor
pop
in
push
mov
and
pop
loope
cmp
pop
push
dec
mov
out
es
jns
test
xor
data16
aaa
aam
mov
ret
add
cmp
push
gs
pop
inc
out
mov
xchg
push
inc
sbb
add
xlat
jns
lds
sbbl
das
jnp
aam
into
and
sub
popl
jecxz
jge
loope
jo
inc
jecxz
int3
inc
dec
push
or
pop
dec
repz
xchg
sti
rcrl
push
mov
daa
push
jmp
inc
call
outsl
clc
mov
jecxz
xlat
shrb
inc
mov
xor
xchg
pop
outsb
and
mov
or
pop
cmp
fwait
adc
aad
fbld
fsubrs
out
and
insl
mov
shrl
xlat
cmpsl
cmpsl
adc
aas
push
mov
popf
aas
cmpl
cwtl
xor
xchg
mov
jmp
or
cmpsb
outsb
mov
pop
mov
cld
mov
enter
xchg
mov
insb
mov
inc
mov
sbbb
mov
ja
cmpsl
stos
xchg
and
daa
mov
or
lock
xchg
and
mov
push
sahf
lods
xchg
cmp
push
cmpsl
aas
mov
fsubl
rcrb
bound
push
outsb
loopne
mov
pop
dec
out
pop
gs
orb
inc
cmp
add
data16
inc
cs
jno
mov
popa
add
add
arpl
nop
nop
or
push
xor
mov
adc
inc
mov
lcall
mov
rcrl
lods
ret
or
mov
test
call
xorb
and
push
sti
outsl
fstpt
bound
pop
rol
roll
push
cltd
lock
or
mov
push
popf
lret
inc
xchg
scas
ret
ss
jge
pop
mov
add
shr
popa
outsb
mov
imul
xor
sarb
pop
xor
mov
mov
cmp
dec
outsb
pusha
shrb
rcll
or
outsl
pusha
les
decl
nop
cli
jbe
rcl
add
into
sub
jg
in
ficoml
and
dec
mov
outsb
fdivrs
leave
pop
sbbb
sahf
ds
jecxz
push
xchg
leave
add
movsl
mov
pop
cmp
pop
sub
mov
add
mov
pop
jge
lds
shl
mov
dec
xor
mov
hlt
or
pop
pop
mov
jo
xchg
adc
loop
popa
xlat
icebp
pop
loop
stos
cmp
push
push
jge
push
test
cmp
js
insl
std
outsb
sbb
xchg
mov
movsb
jle
add
repz
lret
mov
xchg
xchg
add
pop
ljmp
outsl
xchg
movsl
faddl
call
xchg
cli
and
and
push
cmpb
mov
testb
cmp
sbb
xor
pop
movsl
jmp
aam
fldt
xchg
inc
or
in
out
xchg
mov
testl
adc
sarb
add
dec
adc
push
xchg
mulb
cmpsb
and
int3
push
inc
sub
mov
int3
out
loope
xchg
out
sbbb
mov
jae
or
push
mov
adc
test
loop
mov
pop
notb
movsl
adc
xor
and
ss
idivb
push
enter
iret
out
mov
push
push
loope
rcll
xchg
push
movsl
sahf
adc
or
data16
mov
sbb
cmpsl
adc
outsl
sarl
push
adc
loope
out
daa
sarl
push
mov
cmp
ds
inc
mov
enter
pop
mov
and
int
ficoml
lods
mov
jmp
js
pop
data16
jbe
inc
jb
mov
mov
pop
cmpl
mov
imul
or
out
rep
mov
outsl
dec
dec
roll
mov
push
push
mov
sub
dec
inc
ret
in
or
les
or
imul
sbb
mov
ja
imul
lods
dec
mov
jecxz
dec
cwtl
fistpll
jne
dec
xchg
insb
and
mov
mov
scas
ljmp
jp
push
addr16
push
push
jge
push
xchg
in
leave
jo
push
mov
test
mov
pop
xchg
dec
sub
icebp
ljmp
mov
das
xor
sbb
test
je
fsubl
arpl
imul
mov
mov
mov
cmp
inc
mov
idivb
jle
das
and
mov
mov
push
jge
movsl
or
or
mov
xchg
and
push
ret
inc
mov
ja
pusha
pop
pop
or
adc
jbe
pop
pop
cltd
push
jnp
pop
cltd
or
in
push
cld
mov
shl
push
push
jbe
sbb
stos
jb
int
es
aaa
cwtl
dec
or
jne
aad
add
cmp
loop
aaa
lcall
jnp
xchg
jae
pushf
push
xor
sbb
inc
aas
mov
inc
imul
cwtl
push
lods
xor
and
enter
mov
add
xlat
mov
popa
and
rcl
and
out
lods
aas
mov
outsl
lahf
data16
stos
inc
das
fisttps
sbb
sbb
movsb
sbb
xchg
aad
adc
and
push
jb
sub
xor
stc
movsl
cwtl
lahf
adc
cmp
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
pop
xor
clc
inc
mov
jb
mov
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
