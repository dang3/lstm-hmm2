push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
fwait
jl
jl
lods
jl
jl
xor
xor
ja
or
xor
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
jo
hlt
mov
movl
mov
add
jmp
leave
mov
pop
mov
repz
out
lods
jl
jl
jl
jl
cwtl
sti
jne
jl
testb
fists
sub
lock
mov
xor
jne
sub
adc
les
jecxz
ljmp
hlt
and
popf
jmp
fwait
ja
shrl
mov
fcomi
fwait
loopne
int3
pop
outsl
rorl
ss
xlat
hlt
js
sub
push
jae
and
ja
test
or
push
cmp
aad
xor
int
add
sahf
and
int
dec
mov
fiaddl
xlat
dec
pop
sbb
mov
mov
add
decb
sub
lods
sahf
sahf
in
dec
jae
cmp
mov
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
cmpl
jl
mov
xchg
imul
and
js
xor
push
imul
xchg
sbb
les
mov
jnp
je
hlt
add
sub
jge
or
or
mov
fyl2xp1
inc
jg
idivb
xchg
inc
fcmove
inc
dec
jnp
sbb
adc
or
loope
push
movsl
dec
or
popa
test
nop
mov
cwtl
lock
outsl
repnz
fstpt
xor
lds
pop
mov
cmpsb
cmp
test
call
or
aaa
sbb
sahf
ljmp
ud2
mov
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
repnz
lret
jo
mull
rcl
scas
inc
mov
pop
pop
testl
xchg
clc
jg
cmp
jne
dec
mov
je
iret
std
mov
bound
imul
sti
aad
or
pop
dec
dec
sbb
xchg
jbe
adc
stos
jl
sbb
add
stos
dec
lods
lcall
fs
in
into
jbe
lds
arpl
ret
xor
mov
insl
pop
mov
adc
mov
aas
push
jne
adc
jae
mov
rclb
sarl
lods
push
out
xlat
push
popf
fsubs
dec
aam
outsb
nop
fisubs
xchg
jne
add
add
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
repz
mov
jl
jl
mov
mov
xor
inc
mov
dec
xchg
dec
decb
lret
push
lea
gs
into
push
cli
mov
inc
divl
aas
cld
ret
jp
push
sbb
add
lret
idivb
push
push
push
cmp
jae
jl
adc
xor
add
out
int
je
imul
frstor
pushf
shll
int
pushf
mov
cs
push
mov
fistps
add
nop
or
imul
filds
fisubs
fiaddl
cwtl
mov
decb
cmpsb
mov
popf
inc
arpl
sub
or
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
imul
outsl
and
push
shll
sarl
push
loopne
insl
aas
lret
mov
dec
fisttpl
ss
mov
pop
shlb
add
out
sbbl
popa
mov
mov
cltd
mov
lods
xchg
mov
insl
pop
lcall
es
pusha
inc
aas
enter
pop
xchg
stos
in
and
sbb
jo
icebp
in
mov
adc
mov
inc
xchg
xchg
dec
jnp
xchg
xor
lds
sbb
ret
insb
jg
xchg
roll
es
cmp
dec
scas
xchg
add
movzwl
mov
jmp
repz
jecxz
push
scas
rcl
test
sub
jl
lods
jl
jl
adc
repnz
jne
mov
leave
arpl
out
cmp
adc
mov
jne
out
cltd
in
dec
scas
std
sahf
mov
pop
clc
in
dec
imul
aaa
push
sbb
scas
sbb
push
sub
mov
jns
jmp
cmc
imul
mull
sbb
cmpsb
pop
inc
sti
insb
mov
or
push
shlb
lret
popa
shll
adc
xchg
xchg
mov
jb
xor
push
clc
jo
jnp
shlb
sti
ljmp
in
or
imul
cmp
adc
clc
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
js
bound
jl
jl
jl
inc
xchg
aam
testl
or
das
mov
repnz
in
pusha
mov
push
inc
insl
cli
xchg
jb
out
xor
pop
cmpsb
lret
pusha
inc
fldl
outsb
or
sar
mov
inc
push
sbb
cli
pop
adcb
idivb
scas
xlat
sbb
fldcw
sub
add
loopne
mull
xorl
pop
repnz
dec
add
or
add
dec
rolb
sbb
scas
inc
sbbb
test
enter
inc
sbb
inc
scas
jl
clc
js
repz
or
loop
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
std
ds
movsb
push
pop
cmp
jg
dec
xor
add
decb
pop
lock
push
pop
add
jmp
adc
shll
adcb
push
pop
inc
xor
fiaddl
aad
push
jecxz
cmp
hlt
pusha
popl
mov
push
sub
lret
sahf
push
jo
fnstcw
clc
xor
int3
flds
loopne
mov
and
sahf
xchg
mov
sub
and
push
into
rorb
and
popa
dec
xor
cmpsb
mov
mov
cmp
jl
in
push
sub
dec
aas
sbb
imul
or
inc
cmp
mov
push
pop
sbb
cs
push
movsl
lcall
into
roll
inc
pop
cld
into
stos
pop
hlt
sbb
adc
hlt
mov
sub
xchg
movsb
sub
pop
cmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
dec
jae
stc
icebp
jb
jl
jg
jl
xor
insb
ljmp
sbb
cmp
lret
sub
pop
jp
dec
fstpl
push
sbb
ds
xchg
inc
xlat
and
add
insl
insl
in
jmp
jge
clc
or
pop
mov
hlt
test
outsl
shrl
push
adc
xor
adc
xor
inc
mov
or
stos
push
imul
popf
jge
lret
sbb
sbbl
sbb
bound
sub
outsb
adc
lret
rorl
mov
dec
stc
pop
inc
sahf
mov
imul
subb
push
sub
adc
inc
lock
cmc
packsswb
test
addl
ljmp
shrl
inc
aaa
lock
fdivs
inc
xchg
inc
or
inc
ret
push
jmp
pop
int
inc
mov
mov
push
mov
int3
push
jg
imul
xchg
inc
add
sbb
add
mov
cltd
mov
fisubrl
inc
bnd
jl
jg
jl
sbb
imul
sub
mov
sbb
loopne
inc
mov
call
mov
cwtl
cmp
in
jl
mov
popf
addl
xor
add
std
out
and
push
push
mov
mov
jmp
cltd
pop
fucomp
lods
cmp
inc
mov
or
mov
sub
sub
loopne
out
outsl
rcr
xlat
dec
inc
int
loopne
push
and
insb
call
push
scas
mov
and
xor
sbb
xchg
fwait
repnz
cltd
mov
ret
mov
lcall
push
cltd
push
lds
or
push
mov
adc
shlb
in
adc
pop
xchg
scas
insl
xchg
xchg
je
jbe
arpl
push
loope
or
ljmp
mov
cwtl
rorb
inc
adc
sub
pop
xchg
xchg
xchg
mov
adc
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
push
mov
jl
jno
jl
lods
leave
ret
data16
or
add
out
pop
xor
lock
push
mov
in
in
lock
icebp
xor
mov
ret
push
in
and
adc
daa
aaa
test
mov
in
cmp
imul
jbe
movsb
fcomp
scas
fistpl
cld
nop
stos
and
add
sbb
and
push
shrl
cltd
rolb
ror
xchg
rcll
xor
iret
scas
or
icebp
sbbl
jno
mov
mov
jnp
rcr
in
sub
lret
dec
addr16
cmp
dec
fstpl
xchg
xlat
addl
xchg
imul
int3
jae
aas
push
addl
int
das
aam
add
mov
push
push
imul
out
pusha
xchg
push
jl
testl
jmp
arpl
dec
lods
bound
ja
mov
jecxz
cmpsl
jne
jns
movl
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
lods
stos
mov
ja
jl
jg
jl
imul
pop
fs
and
test
lods
inc
out
cmpl
xchg
inc
cmpl
or
rorl
nop
push
mov
mov
ljmpw
mov
outsb
std
inc
sbb
repnz
roll
jle
mov
xor
xchg
lods
aas
lds
or
dec
cmc
adc
xchg
add
xchg
incl
push
gs
cltd
arpl
lret
aam
ret
fisttpl
dec
cmp
call
mov
push
add
ss
xor
es
pop
and
push
sbb
imul
test
test
cmp
pushf
faddl
data16
cmc
out
sbb
xlat
push
pop
aaa
adc
rclb
stos
insb
mov
push
jp
scas
xchg
ror
cmp
shrl
inc
fstpl
out
xchg
push
bound
or
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
jecxz
mov
jl
jg
jl
mov
xchg
sub
das
gs
out
sbb
pop
sub
lret
lods
mov
es
sbb
jo
add
mov
pop
call
repz
sub
push
push
jo
rcrb
scas
and
mov
xchg
sbb
insb
xor
mov
or
add
pop
pop
cld
aaa
jge
push
xor
mov
mov
inc
add
lds
sbb
inc
jle
pop
adc
in
pop
orl
cmp
rorl
insl
mov
jb
sub
clc
aas
sub
cmp
loopne
adc
in
and
scas
sbb
adc
pop
mov
jmp
jnp
pop
sub
adc
pusha
mov
stc
ljmp
or
repnz
mov
gs
push
dec
je
stc
push
lods
pop
aas
nop
or
fstl
cmc
loope
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
enter
mov
jl
jno
jl
add
sbb
mov
xor
or
outsl
and
dec
xor
jbe
jbe
cmpl
sub
sub
add
jp
mov
inc
lcall
ret
jns
rolb
dec
mov
mov
popa
fmull
insl
shlb
rcrb
push
or
rcr
stc
xchg
adc
scas
pop
lahf
stos
dec
out
xchg
outsb
enter
mov
neg
scas
mov
lea
inc
stos
ss
mov
ja
add
out
sbb
cltd
nop
aas
adc
sti
lret
repnz
cld
movsl
jnp
push
jb
lods
andl
sub
std
rcl
or
das
in
push
push
mov
mov
pop
push
cmp
jmp
lahf
in
bound
or
mov
lock
fs
stos
mov
movsl
gs
in
cli
jmp
mov
pop
rclb
imul
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
movsb
test
pop
je
jmp
jl
jnp
pop
xchg
test
jp
cmpsl
sbb
mov
in
inc
adc
push
bound
or
dec
xorl
inc
sub
adc
loope
dec
xchg
adc
scas
leave
dec
das
test
aad
lcall
mov
fmul
inc
call
push
add
std
jns
sbb
add
movsl
insb
xchg
imul
pushf
jp
mov
test
adc
adc
mov
mov
push
jle
stos
inc
sahf
mov
xchg
mov
popf
lock
ljmp
fcmovnbe
mov
mov
test
lods
push
sbb
pop
mov
lds
sbb
xor
enter
leave
cmpsl
insb
hlt
xchg
cld
insl
mov
and
and
inc
out
lret
lret
add
cmp
add
imul
pop
add
pop
add
lock
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
cmpsl
bound
ret
jl
jno
jl
mov
outsb
ss
mov
hlt
jl
stos
cmpsb
mov
jno
imul
test
pop
pop
push
mov
rcll
into
sbb
jmp
out
pop
or
mov
lret
mov
addr16
incb
push
imul
xchg
adc
iret
push
loop
clc
jb
cmpsl
leave
insb
xor
enter
dec
jg
sub
ficoml
stos
mul
loopne
mov
es
mov
push
xchg
mov
out
test
cltd
ret
mov
mov
lds
mov
mov
fcompl
mov
push
mov
int3
mov
roll
sahf
addr16
fiaddl
pop
popa
or
sub
repnz
out
xorl
or
sbb
cmpsb
mull
cli
je
cltd
and
clc
sub
mov
sub
xorb
loope
mul
mov
sub
aaa
adc
push
cld
dec
lock
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
push
mov
jl
jg
jl
xchg
push
loope
push
mov
loope
mov
movsb
in
jo
or
daa
jge
leave
dec
mov
int
and
addb
jl
xor
mov
iret
sub
inc
sbb
icebp
pusha
push
inc
mov
ds
or
push
pop
arpl
add
mov
bound
pop
test
test
das
test
push
rclb
pop
stos
sbb
add
pop
adc
movl
orb
mov
jl
out
stc
pop
cmp
dec
dec
mov
jmp
sub
popa
fistps
cmc
xchg
popa
in
mov
out
divl
mov
jnp
mov
adc
hlt
repz
mov
lahf
fucomi
xor
and
pandn
add
mov
cmp
add
mov
jo
cwtl
jl
or
test
mov
ss
xor
arpl
adc
loop
xor
jge
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
into
repnz
jg
jl
aad
jl
cltd
jecxz
cmp
mov
adc
dec
mov
in
in
mov
stos
popf
jp
inc
adc
pushf
xchg
lock
dec
je
daa
fwait
out
dec
jle
popa
xchg
xchg
sti
pand
loope
push
mov
jae
stos
in
sti
add
test
xlat
insb
pop
pop
jo
pusha
sbb
xchg
scas
mov
mov
aas
test
hlt
stc
jns
pop
or
hlt
ficoml
sub
outsl
jnp
lea
addr16
push
nop
add
mov
or
cmp
imul
in
mov
mov
fsubrl
loop
dec
push
jnp,pt
lock
out
fs
push
jl
mov
fisttps
filds
lods
ljmp
sahf
test
clc
rcrl
call
mov
dec
sub
bnd
int3
push
inc
mov
jg
lock
hlt
icebp
aaa
int
or
xchg
mov
jo
or
pop
pop
inc
push
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
or
jl
push
jl
jl
mov
lcall
cli
icebp
jmp
gs
sbb
xchg
in
sub
and
xor
mov
negb
fdivrl
xor
sub
icebp
sub
jo
fadds
jge
add
sub
popa
push
mov
pop
sbb
add
jp
ja
mov
scas
xchg
dec
ja
int3
push
and
loop
shrl
xchg
je
xchg
ds
in
stc
js
cmc
inc
inc
imul
and
mov
shlb
stos
mov
inc
or
ret
pushf
fcoms
pop
fnsave
dec
int3
and
clc
movsl
mov
mov
fwait
inc
push
outsb
lods
aad
or
test
add
hlt
xchg
scas
push
adc
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
xchg
haddps
jl
mov
cmp
push
pop
jo
out
jl
lock
and
popf
imul
and
cmp
jp
sbb
push
jl
sti
insb
xchg
imul
lods
mov
dec
pop
minps
insl
xchg
ret
xchg
mov
adc
cs
pop
outsb
fs
dec
push
push
repnz
sbb
out
fimull
es
push
insb
xchg
les
xor
mov
xchg
mov
adc
lods
cmpsl
sub
ja
pusha
jmp
testb
mov
adc
cld
jne
mov
lahf
pop
aam
rcrb
cld
cmp
cld
xchg
and
cmp
pop
cmc
movsb
cmp
pop
jle
push
mov
aaa
jge
fisttps
mov
shrl
fildl
dec
lea
xlat
shrl
push
clc
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
out
jmp
jl
jl
iret
imul
xlat
daa
aad
inc
lods
in
sysenter
aaa
loope
enter
push
mov
inc
fcomip
push
push
and
xchg
clc
inc
fmulp
fs
adc
int3
or
mov
cmp
dec
lahf
andl
aaa
sub
mov
cmp
push
outsb
jge
push
orl
push
push
push
and
out
pop
scas
cmp
xchg
adc
xor
scas
adc
mov
xor
push
xor
jmp
mov
popf
nop
and
mov
and
sbb
pop
in
push
push
dec
push
ret
js
and
rcrb
pop
cmp
popf
mov
adc
pop
cmp
stc
movsl
into
shl
pop
mov
mov
and
mov
jmp
xlat
push
imul
xor
xchg
inc
stos
bsf
add
jl
jl
mov
inc
pop
dec
das
sbb
sbb
sahf
sub
mov
jnp
ljmp
insl
cmp
stos
adcb
mov
ficomps
push
dec
jnp
xchg
shl
jne
xchg
push
adc
jae
popf
adc
in
mov
std
mov
pop
adc
mov
out
push
mov
dec
xorl
scas
xchg
xchg
dec
cmc
xor
xor
pop
xchg
xchg
jbe
lds
push
add
jg
aam
jb
stos
xor
cmp
mov
lods
inc
test
addr16
mov
test
pop
dec
push
pusha
xlat
xor
mov
push
push
adcb
mov
out
test
sarl
fsubp
fiaddl
mov
or
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
mov
rcrb
push
jl
jl
pop
mov
ss
xor
ficomps
or
and
scas
xor
dec
inc
inc
or
and
jle
pop
sub
lret
ret
cmp
into
mov
psrad
pop
xchg
sbb
mov
cmp
lret
fldt
cmp
mov
cmp
fstpt
fldt
jl
sub
jbe
ret
movsb
adc
jne
push
shr
sub
sbb
jns
jae
pop
std
mov
imul
mov
sub
mov
xchg
cs
ljmp
les
sbb
sti
andl
scas
xchg
mov
dec
and
jmp
jp
jno
popf
xchg
adc
stos
mov
sub
pop
data16
pushf
or
or
dec
and
mov
stos
cs
das
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
repnz
jno
push
add
jl
jl
jne
mov
mov
mov
loope
aam
mov
cmc
enter
xchg
xor
vmread
add
nop
push
push
push
jl
popa
fsub
lahf
pop
lahf
and
lods
inc
xlat
xlat
push
push
xchg
and
pop
mov
popa
shll
pushf
push
pushf
std
les
dec
lahf
cmp
das
push
fsubrs
pop
mov
add
push
repz
push
fdivl
in
push
subb
loopne
test
xlat
and
lock
xor
repnz
stos
xchg
push
lock
mov
sar
jecxz
daa
sub
leave
aam
lahf
ret
add
pop
dec
mov
dec
divl
test
inc
cltd
jae
fmull
push
xor
adc
mov
sbb
leave
xchg
in
mov
incb
add
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
mov
jl
push
jl
jl
sub
sti
aas
or
inc
lea
xchg
push
cli
ficomps
add
or
add
imul
pop
cli
jae
aas
mov
add
adc
inc
in
or
sarb
mov
icebp
pop
xchg
xchg
push
lret
xlat
nop
lahf
push
sub
xchg
nop
je
jne
sub
clc
or
sbb
mov
lcall
jge
sub
rol
scas
insl
std
inc
push
scas
cwtl
clc
pop
mov
loope
test
mov
fisubl
add
add
arpl
mov
push
mov
ds
movsl
jle
pop
test
pop
xor
outsl
dec
into
movsl
fwait
inc
insl
je
xchg
test
js
inc
popa
iret
inc
sub
bound
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
push
dec
out
sahf
push
add
jl
jl
jl
insb
shll
movsb
icebp
loope
jmp
arpl
mov
jno
and
orl
pushf
adc
push
or
xchg
sbb
js
xor
loop
leave
sbb
aad
cmpsw
hlt
vcvtps2pd
mov
enter
and
ret
adc
rcl
mov
xchg
test
lahf
lret
or
test
inc
and
jmp
mov
movsl
pop
test
jp
push
push
imul
push
sbb
mov
mov
inc
pop
add
int
push
insb
push
push
jb
adc
xchg
fnsave
aad
call
movsl
cld
and
xor
mulb
scas
or
out
mov
repz
js
js
push
insb
in
jbe
mov
push
in
jae
pusha
testl
mov
dec
xor
cmp
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
jmp
push
xor
rolb
out
fdivr
cmp
xchg
cmpsb
adc
cmp
js
xchg
mov
push
loop
pop
inc
int3
nop
movsl
inc
add
jle
add
das
orb
data16
adc
lret
out
sub
lods
pop
enter
lock
cmc
cmp
data16
aaa
dec
mov
add
outsl
sti
dec
aad
mov
cltd
xor
das
js
outsb
fistpll
je
inc
mov
sub
jl
push
out
xchg
scas
xchg
xor
das
and
ret
and
pop
push
ret
iret
sub
daa
sub
xorb
inc
jl
movsl
int
aad
mov
lds
add
leave
lret
rcr
and
mov
jecxz
lahf
inc
dec
adc
jmp
push
orl
mov
jmp
add
andl
jg
and
xlat
leave
aas
xchg
add
jl
jl
jl
jbe
push
inc
jl
mov
imul
test
rorl
addr16
sub
or
divl
dec
pop
mov
test
rcll
gs
xchg
aam
mov
cmp
cmp
jno
jbe
stc
xchg
cmp
mov
xchg
add
popf
pop
test
fcmovnbe
pop
push
jmp
jo
inc
stos
aas
fcom
and
sub
leave
cmp
fists
sub
inc
mov
out
mov
jne
stos
addl
out
shll
mov
push
inc
jb
ficoms
outsl
dec
cs
jmp
jg
ljmp
adc
sub
pop
mov
xor
push
mov
shlb
cwtl
das
jb
imul
jl
aad
mov
xor
mov
jb
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
popa
push
dec
popf
mov
les
imul
xor
mov
addr16
mov
mov
pop
or
imul
jp
fdivr
jo
push
adc
push
ljmp
inc
out
ds
jbe
push
add
or
repnz
fsts
xchg
loopne
repz
jmp
mov
aas
lods
pop
cltd
loop
pop
lock
dec
xor
in
add
or
insl
ljmp
pop
jo
pop
sub
lods
xor
mov
test
jl
frstor
push
jmp
aad
cld
add
cs
pop
int
imul
vmread
ds
subb
adc
mulb
rol
mov
stos
fldl
jne
inc
stos
into
outsb
inc
mov
mov
xchg
sarl
sahf
movzwl
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
or
out
push
jl
push
jl
jl
divb
jae
arpl
cltd
jl
cli
cmp
mov
xor
addb
push
pop
and
insb
or
sbb
movsl
aaa
xor
xchg
xchg
flds
mov
or
add
movl
jnp
fnsave
shlb
pop
xchg
in
adc
xchg
cmp
shr
in
inc
insl
xor
lock
push
orb
pop
cs
insb
addb
push
es
pop
push
ja
pop
fcmovne
rorl
lea
movsl
and
scas
lock
dec
cmp
sbb
lret
out
push
fistpl
jo
jge
lods
pop
ret
not
dec
push
jne
and
jae
out
ret
push
sbb
xor
mov
jo
add
mov
movsl
jl
jbe
lea
inc
mov
inc
lock
pushf
clc
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
mov
sbb
jl
jl
imul
jbe
xchg
data16
cltd
aad
sbb
faddp
push
pop
sbb
mov
daa
push
sub
jecxz
xchg
sbb
pushf
jo
add
enter
int3
out
arpl
sti
insl
movd
dec
nop
loop
add
mov
repz
fwait
scas
xor
jmp
xchg
jo
decb
jbe
imul
popf
test
sbb
mov
rorb
add
nop
lds
cmc
out
andl
jmp
test
inc
imul
int3
inc
sub
push
mov
fwait
cli
dec
enter
loopne
cmp
rorb
cmp
mov
inc
cmp
pop
cmp
dec
dec
add
dec
xchg
sub
movsb
mov
leave
xchg
in
test
aas
mov
sbbl
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
push
jg
sarb
sbb
jl
jl
jo
cmc
xchg
frstor
adcb
repnz
test
jnp
js
sub
cmp
outsl
hlt
and
xchg
leave
jo
repnz
or
aad
or
mov
movsl
lock
enter
dec
pop
cmp
jno
push
cmp
ja
fwait
and
pusha
psllq
cmp
test
cli
and
adc
adc
imul
or
inc
addl
sbb
push
repz
and
push
cmp
inc
pushf
add
mov
clc
cmc
andb
xchg
inc
imul
cmovp
int
cld
ds
mov
sub
iret
xchg
fisubs
sbb
pop
adc
pop
add
test
mov
rorl
mov
or
sahf
mov
push
test
shr
in
push
jnp
mov
test
add
add
inc
cmp
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
lods
test
sbb
jl
jl
push
cmp
out
inc
xchg
adc
push
dec
and
mov
jno
int3
cltd
mov
dec
leave
es
add
inc
sub
jle
adc
pop
mull
addb
mov
lret
pop
xchg
repnz
out
hlt
es
fistpl
sbb
jmp
mov
popa
clc
mov
or
mov
sbb
jp
pop
rcr
outsb
scas
dec
fdiv
xor
les
decb
pop
mov
sub
jp
sbb
je
inc
lods
sub
or
push
push
out
dec
xchg
sub
bound
arpl
loop
stos
daa
test
lret
int3
cmp
popa
stc
cmp
pop
mov
pop
stos
pop
mov
repnz
stc
xor
jg
adc
pop
or
and
push
cmp
enter
mov
sarb
add
scas
jp
add
rol
add
cmp
add
test
and
add
add
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
lds
jl
push
jl
jl
popa
stos
rcrl
daa
and
lock
fstpt
sub
subl
sahf
pop
in
aaa
gs
push
test
insl
stos
repz
ret
adc
pop
add
lcall
fstps
lds
mov
scas
pop
fidivs
or
movl
data16
and
ja
imul
cmp
xchg
aam
xor
push
fs
mov
mov
outsl
push
and
pushf
jae
sbb
lret
insl
or
sbb
pop
inc
sbb
data16
int3
adc
stos
and
mov
xor
xchg
dec
or
loope
inc
mov
js
cmp
mov
dec
jle
sbb
rorb
dec
jbe
cs
xchg
mov
or
or
xor
jmp
sbb
mov
std
adc
arpl
jl
jl
adc
xor
sub
leave
cmp
jo
das
or
sbb
sub
mov
add
ljmp
mov
add
push
adc
xchg
shrb
retw
xor
inc
rcrl
out
xchg
insb
nop
jmp
xchg
aas
pop
pop
mov
or
and
test
sub
sub
xor
add
outsb
jge
pop
xchg
mov
cmp
and
orb
sbb
in
adc
lea
push
cmp
je
int
out
push
ja
sub
data16
xchg
int3
pop
xchg
rcrl
aas
gs
fidivs
sbb
or
jbe
inc
insl
out
jle
lea
adc
aad
inc
cmpsl
pop
mov
outsl
jmp
adc
stc
jae
or
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
dec
cld
cmp
push
jl
jl
push
push
push
rcll
adc
sbb
arpl
arpl
cmpsl
jmp
push
push
je
push
lret
mov
rcll
out
repnz
ret
mov
stos
sbb
mov
adcl
fs
jl
mov
pushf
xor
add
push
int3
dec
jbe
xorb
aas
cmpsl
inc
sbb
stos
mov
out
inc
mov
data16
cmpsb
and
ror
rcll
fcmove
js
test
push
imul
hlt
sahf
outsb
in
jbe
movsl
jns
lret
in
dec
aaa
inc
cmc
jl
and
sub
stos
cld
out
push
dec
cltd
out
adc
fldt
popf
sub
mov
test
gs
sbb
xchg
mov
hlt
orl
mov
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
jne
xor
test
mov
and
sub
sti
jge
stc
fldl
pop
fsubrs
sub
addl
lret
jmp
in
inc
adc
movsl
adc
add
ja
xchg
or
mul
call
cmp
mov
push
gs
jns
movsb
repz
frstor
popa
enter
pop
mov
sub
adc
mov
ja
imul
adc
outsl
cmp
mov
arpl
jl
ss
das
adc
mov
xchg
cmc
dec
push
mov
cmc
fwait
pusha
sub
mov
pop
loope
pop
cmpsb
pop
dec
jp
xor
call
add
lods
sbb
ja
cmpsb
mov
jecxz
dec
sub
or
std
cmp
sub
sbb
lea
popf
fdivrl
rorl
add
imul
test
xchg
lret
pop
jl
push
jl
jl
mov
xchg
mov
test
addr16
adc
jecxz
jmp
xchg
mov
xorb
dec
pop
push
add
and
mov
jmp
xchg
fstl
xchg
inc
nop
shlb
or
xor
ss
mov
mov
hlt
and
jns
lcall
popf
shrb
out
gs
mov
das
div
arpl
jb
addb
mov
cs
into
lcall
into
inc
push
insb
stos
in
int
xlat
fs
mov
and
stos
xor
push
test
push
dec
rclb
icebp
test
fcomps
mov
fwait
scas
punpcklbw
jmp
xorb
movsl
lcall
adc
iret
movsb
mov
cltd
dec
mov
sub
and
add
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
or
in
push
jl
adc
jl
or
test
orl
scas
push
pop
sbb
sti
cmc
shrl
xchg
pop
shlb
sub
dec
sbb
and
push
push
pop
fwait
cld
scas
mov
sbb
in
and
stos
adc
mov
cwtl
shll
jge
pop
fistl
add
cmpl
fnsave
dec
or
loop
loopne
xor
lahf
repnz
jmp
xchg
fldl
cmp
sbb
iret
stc
sub
fadds
pop
inc
jnp
popf
stos
stc
push
add
fisubs
inc
aaa
mov
jmp
mov
jb
push
and
xchg
dec
xor
fsubl
daa
or
iret
sub
insb
addr16
xchg
sbb
rcrl
and
repnz
and
enter
loop
std
lret
aas
xor
jmp
rcrb
loope
jmp
shl
rcr
rclb
jg
int3
int
mov
outsl
lcall
fstpl
mov
iret
test
xlat
dec
and
rcll
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
pushl
adc
jg
jl
stos
and
dec
fs
in
and
add
inc
shlb
icebp
imul
stos
adc
ds
test
in
mov
mov
rclb
and
movsl
movsb
repz
fsubrp
mov
and
lods
ljmp
cmp
xor
xchg
daa
in
stos
daa
gs
mov
xchg
dec
repz
fiadds
inc
mov
stc
rcl
outsl
rcr
inc
lds
jecxz
fisubl
push
or
out
adc
xchg
orl
and
sub
jae
ret
sbb
sti
aaa
push
aad
pop
aaa
lahf
idivb
jb
in
pop
jecxz
ret
ss
into
pop
dec
jnp
je
ljmp
daa
movsl
mov
sbb
push
pop
push
adc
mov
jbe
xchg
mov
ss
pop
orl
lret
sbb
adc
jp
cli
nop
jl
call
sub
adc
sub
lcall
push
pop
arpl
ds
out
ljmp
cmp
rorb
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
jbe
adc
jg
jl
test
or
pop
mov
mov
dec
push
inc
decb
add
sub
jmp
mov
sti
repz
fs
mov
sti
loope
and
xor
jmp
repnz
fsts
out
jbe
test
jle
jg
clc
dec
sbb
sahf
arpl
in
dec
pop
arpl
bound
sbb
in
icebp
inc
cld
imul
push
cmp
aaa
jg
and
aas
add
stc
xor
mov
sbbl
and
pushf
cmp
dec
xchg
xor
xchg
xor
lret
mov
lret
out
in
push
push
mov
outsl
repnz
inc
inc
movsl
aad
push
add
mov
mov
mov
out
imul
xchg
dec
push
cmp
pop
sti
negl
jae
add
fsubp
xchg
fcomip
jo
xchg
leave
xchg
add
and
jecxz
gs
cmp
mov
xchg
fidivl
mov
push
sub
inc
inc
cmc
loopne
sub
adc
inc
into
adc
jl
and
inc
adc
sbb
movsl
jp
dec
adc
enter
sbb
add
add
xchg
imul
les
jmp
mov
jl
adc
jl
jge
mov
adc
push
imul
push
push
dec
jg
cmpsl
lret
jbe
xchg
mov
adc
dec
jo
data16
jecxz
loop
movsl
or
lock
xor
rcll
mov
insb
les
xchg
cmc
arpl
jo
loope
mov
jge
xor
xchg
popf
xor
addb
faddl
in
mov
test
fistpl
fbstp
xor
call
cmp
dec
jmp
dec
jb
or
mov
xor
insl
jb
mov
cs
or
sub
mov
mov
inc
loopne
jae
push
push
xchg
lret
popa
sub
push
pusha
add
sub
mov
testl
jo
popf
jo
xchg
fbld
jg
cwtl
in
lahf
aaa
lea
and
dec
iret
jl
inc
push
jp
mov
popf
jnp
imul
ficoms
push
inc
and
sub
mov
fnstcw
mov
aam
xchg
add
mov
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
xlat
fisubl
jl
jg
jl
mov
in
js
bound
and
jno
call
addl
xor
fimull
stc
lea
add
sbb
out
es
cmp
adc
imul
out
sbb
stos
cmp
sub
mov
loop
icebp
cwtl
sbb
inc
push
xorb
mov
lods
clc
in
sarb
shlb
insb
add
stos
inc
pop
inc
mov
lret
scas
cmc
push
in
fcompl
in
xchg
jne
sub
mov
dec
stos
jno
lcall
mov
das
sbbl
cmp
xor
iret
push
nop
stc
fst
dec
aaa
scas
into
dec
xchg
xchg
loopw
cmp
and
ljmp
push
adc
xor
xor
or
dec
cwtl
cmp
popf
or
pop
mov
dec
xchg
xchg
mov
das
shrb
lcall
push
dec
outsb
sub
ss
add
dec
dec
push
sahf
test
jae
shrl
xchg
cld
out
in
push
in
jl
pop
mov
or
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
aam
aad
aam
pop
repz
mov
xchg
lods
pop
sub
sub
or
sbb
imul
dec
cmp
fldenv
out
pusha
out
leave
mov
cltd
js
jb
test
out
rcll
adc
jnp
imul
xchg
inc
mov
iret
cltd
insl
cmp
xchg
scas
call
imul
pop
imul
stos
jmp
jb
dec
pop
add
in
sub
or
add
xchg
mov
cld
mov
negb
cwtl
subb
std
add
or
pop
dec
dec
scas
xorb
mov
rolb
xchg
inc
add
push
cmc
ret
dec
movsb
xor
pop
out
jecxz
xor
cmp
outsb
test
loope
int
cmpl
adc
push
mov
add
mov
xor
jmp
cmp
mov
test
or
adc
jle
je
jnp
cltd
add
lock
jl
xor
testb
gs
jne
leave
dec
dec
push
test
loopne
test
mov
mov
adc
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
push
jl
aaa
jg
jl
es
lea
loope
frstor
pop
clc
imul
push
hlt
or
and
js
add
jp
aas
add
jle
cmp
xor
jb
aaa
sub
out
add
jmp
mov
inc
icebp
or
frstor
mov
inc
pop
pop
sbbb
shrl
mov
aas
sub
icebp
cmpsb
inc
push
jmp
jg
aam
push
cmp
push
dec
pop
xlat
sahf
mov
cltd
jns
jmp
jbe
mov
pop
add
pop
rcrl
shll
sahf
dec
bound
lret
ss
fs
cli
cwtl
and
lock
inc
cmp
fcomps
rol
or
or
mov
repz
lcall
cltd
add
push
jmp
je
cli
jecxz
scas
lahf
test
xchg
or
xchg
inc
ret
cmp
das
cmp
call
pop
push
daa
push
lods
mov
pushf
pop
daa
or
dec
push
push
sub
loop
mov
mov
adc
xchg
imul
lds
dec
aad
clc
outsb
fsubrs
mov
sub
test
negl
call
adc
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
loope
sub
jg
jl
inc
inc
and
sub
pop
clc
adc
arpl
push
jo
and
push
lock
and
lods
das
ja
push
mov
mov
inc
xchg
push
sub
cmpb
jp
lds
cs
xor
sbb
flds
jge
es
into
jp
pop
or
sub
xor
pop
adc
mov
out
scas
mov
ds
ss
mov
and
add
incl
in
jae
xchg
data16
scas
pop
adc
iret
enter
sti
push
inc
xchg
aad
xchg
mov
insb
addr16
pop
jns
jge
scas
pop
push
pop
mov
add
pop
mov
imul
mov
adc
mov
in
je
jecxz
add
popa
jbe
xchg
push
int
inc
xchg
mov
rcrl
dec
cwtl
jl
cmp
iret
inc
mov
dec
ss
add
stc
scas
int
dec
xor
sub
fdivrs
push
test
aas
loop
andb
jecxz
lods
insb
cld
jb
fcomi
pop
scas
pop
pop
jge
jb
jne
sub
subb
mov
leave
push
scas
adc
push
mov
cmp
push
pop
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
cwtl
sbb
sub
xchg
and
or
adc
shl
jae
push
lahf
imulb
das
or
adc
add
push
xchg
insb
inc
insb
rorb
jg
jecxz
es
pop
adc
imull
rolb
popl
xchg
fsubs
inc
movsb
mov
test
aas
dec
adc
outsl
dec
mov
pusha
adc
adc
inc
mov
loop
fdivrs
jmp
inc
nop
or
in
aam
fwait
scas
out
outsl
orb
pop
sbb
mov
mov
scas
scas
loop
enter
mov
sbb
movsl
cmc
push
out
test
dec
mov
mov
xor
push
cmpsl
cmp
xchg
pop
adcl
repz
rorb
daa
fwait
jecxz
sahf
fistpl
dec
cmp
aas
repz
adc
loop
test
inc
out
js
dec
mov
arpl
enter
inc
adc
jl
jg
fistps
or
pop
jp
xor
shr
movsl
mov
jge
jmp
and
call
mov
sbb
sbb
fldl
xchg
repz
shlb
add
les
scas
inc
out
xor
lret
scas
jmp
mov
jmp
mov
stc
mov
pop
jecxz
pop
jns
sub
jg
jl
mov
es
mov
xor
sahf
int3
mov
jae
mov
xchg
divl
pushf
aad
inc
or
adc
cmp
inc
nop
sub
pop
push
lea
inc
call
shrb
jge
jp
mov
pop
scas
push
fstl
leave
dec
adc
ljmp
cmp
jae
sbb
mov
jb
mov
clc
xchg
scas
xlat
scas
xor
sub
mov
aas
ret
push
cld
out
in
mov
mov
or
xor
aas
cmpsl
ror
lock
dec
xchg
shlb
pop
ret
push
scas
aam
insl
mov
test
pushf
xchg
mulb
xor
jmp
mov
ss
jb
mov
push
in
pop
iret
nop
inc
mov
jp
popa
lret
mov
jge
pop
aaa
and
mov
mov
jge
cli
cmp
scas
mov
enter
test
mov
stos
mov
xor
mov
lret
pushf
imul
imul
jno
or
out
in
mov
into
pop
fimuls
or
mov
int
insb
out
cs
pop
out
or
mov
jae
fidivrs
cwtl
incb
mov
mov
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
jle
add
jl
sub
fwait
pop
xchg
jne
ret
lret
into
jnp
sbb
sar
bound
add
inc
pop
pop
jbe
fimuls
dec
popf
movups
jae
xor
and
cld
test
call
mov
dec
and
and
cmp
rcl
testl
adc
leave
stos
out
push
scas
ret
jbe
sub
test
dec
aas
fprem
outsb
loopne
lods
or
mov
xor
shrl
push
test
and
mov
into
push
fwait
mov
inc
scas
push
mov
mov
xchg
xor
mov
inc
jns
sub
and
add
xor
sbbb
aas
or
orl
lods
inc
push
cld
iret
out
lds
and
fcoml
pop
push
test
mov
dec
mov
pop
cld
insl
push
add
push
fs
pusha
enter
insb
ret
mov
int3
jg
mov
add
mov
js
lret
cs
jne
loop
push
mov
pop
mov
ja
fs
mov
insb
popa
or
dec
push
mov
inc
cwtl
outsl
inc
mov
xor
test
fildl
cmpsb
push
jbe
lock
or
imul
je
jne
cmp
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
push
mov
sub
jl
jg
jl
xor
rorl
pop
lock
and
pop
loop
rcrb
ret
rclb
inc
movsb
sti
cs
nop
lcall
xor
jp
jno
and
sbbl
popf
and
jp
push
push
jns
mov
push
xchg
repz
fstpt
xchg
dec
inc
push
bound
daa
xor
pop
into
and
mov
in
fs
sbb
jge
les
and
movsb
mov
daa
cmp
push
cmpb
sub
sqrtps
mov
lret
inc
push
push
mov
mov
mov
lock
in
mov
stos
jge
pop
add
shll
sub
inc
rcll
xlat
aad
jnp
shrb
das
xchg
aam
cli
mov
mov
jo
fwait
add
push
inc
sti
mov
ficomps
sbb
cs
mov
sbb
ret
or
loopne
and
xlat
addr16
mov
mov
xor
adc
or
xor
sbb
sub
xchg
jmp
dec
inc
stc
mov
es
sbb
call
pop
or
xchg
cmp
cmp
sbb
inc
ffreep
repnz
shr
add
add
sub
imul
mov
das
jl
fdivrs
jl
shrl
inc
pop
mov
inc
cmp
sahf
xor
and
jle
ficomps
les
addl
pushf
fisttpll
orb
pop
call
mov
jg
scas
popf
push
inc
cli
cmp
aad
mov
dec
xchg
mov
std
call
inc
sub
mov
leave
and
pusha
dec
ja
popa
adc
mov
pop
mov
in
dec
xchg
lods
jnp
dec
dec
xor
fildll
pop
sub
jnp
xor
push
and
iret
stos
sub
icebp
cli
push
imul
jle
mov
mov
mov
sub
add
sahf
imul
mov
push
push
cli
pop
movsb
nop
jno
xlat
test
jns
arpl
mov
push
push
mov
jge
hlt
adc
jmp
imull
sub
fwait
mov
cmpsl
decb
mov
adc
loopne
and
loop
mov
and
rcll
xchg
and
addr16
add
aam
mov
sub
dec
jnp
loope
dec
icebp
mov
cmc
adc
push
jno
mov
mov
lahf
enter
add
mov
lret
mov
add
inc
or
or
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
pop
pop
gs
inc
pop
cwtl
sbb
dec
ljmp
cld
sbb
clc
cwtl
push
loop
inc
ss
inc
jae
push
jl
ljmp
and
sbbl
xor
pop
repz
sub
xchg
imul
out
pop
cmpsb
fdivp
push
mov
mov
js
jmp
mov
pop
mov
xorl
in
and
loope
call
sub
call
in
imul
icebp
iret
jno,pt
ljmp
dec
movsl
mov
pop
or
adc
popl
arpl
in
nop
rcl
xchg
sub
and
jnp
pusha
sbb
hlt
mov
test
addr16
cmc
mov
xchg
jl
rolb
mov
inc
jp
xor
jge
mov
outsb
jmp
inc
aam
sbb
imul
sbb
push
add
mov
sbb
pushf
nop
mov
jnp
ret
dec
push
repnz
pop
sbb
aam
or
inc
add
inc
dec
dec
jne,pn
mov
notb
subl
imul
pusha
mov
ljmp
imul
jne
mov
in
push
sti
jg
fsubrp
aad
pop
call
test
mov
in
sbb
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
xchg
into
add
jg
jl
cmpsl
fbstp
pusha
inc
or
fstpl
xor
loope
dec
ficoml
mov
inc
ss
mov
inc
inc
push
cmovp
fsubl
jge,pt
pop
and
adc
mov
cmpl
daa
in
loope
rep
fcoms
ds
testb
sbb
dec
mov
cltd
sbb
int
ds
push
cmp
and
mov
add
or
out
fnsave
mov
movsb
fsubs
add
mov
idivb
sub
mov
inc
dec
fsubl
lret
mov
adc
sarl
test
jne
es
sub
cmp
xor
mov
clc
mov
jecxz
add
daa
add
mov
in
leave
loopne
jmp
add
dec
ja
inc
mov
mov
ror
lea
xchg
push
mov
dec
mov
inc
mov
aad
jb
jge
jp
cmp
mov
lret
fstpl
mov
jne
adc
out
mov
imul
sbb
arpl
pushf
fwait
cmp
cmp
add
inc
rorl
pop
pushf
pop
stc
and
mov
xor
movzbl
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
inc
jns
jg
jl
call
mov
or
hlt
daa
outsl
add
inc
out
cmp
notl
mov
nop
push
lcall
push
mov
xchg
inc
inc
push
imul
mov
stc
arpl
sbb
xchg
or
cmp
or
outsl
push
test
xlat
popa
dec
push
sub
ja
sbb
mov
fmull
ficomps
rorl
aam
dec
mov
rol
and
ret
in
test
cmc
fsubl
outsb
test
lea
add
or
cmpsb
jge
xor
xchg
cmp
mov
pop
sbb
lret
shl
ret
cmp
pop
inc
lock
ret
nop
aaa
mov
sbbb
pavgw
clc
mov
xor
dec
lret
ret
ret
clc
mov
ljmp
pop
dec
push
lcall
repnz
lret
dec
out
ret
jne
xchg
pop
add
fisubs
es
and
xor
mov
and
outsl
mov
movsb
outsb
adc
fsts
and
sbb
pushf
add
in
xor
adc
push
mov
into
sub
and
out
pop
xchg
xor
movsb
hlt
push
ds
aas
scas
xor
pop
insl
repz
gs
mov
leave
push
mov
jo
rclb
add
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
bnd
jl
call
or
pop
xchg
femms
rclb
je
imul
mov
push
xchg
imul
hlt
pop
mov
mov
movsl
int3
popa
out
popf
pop
xchg
sti
inc
test
adc
sbb
jle
sub
insl
pop
mov
daa
repnz
or
sub
iret
cmpsl
mov
mov
xchg
pop
frstor
lcall
cmp
stos
cltd
sub
or
add
cmpsb
add
sarl
push
sahf
aas
jp
fcmovbe
outsl
push
xchg
int
nop
sbb
ret
xor
cmp
ss
sbb
adc
mov
cmpsl
mov
jne
aaa
mov
cltd
xor
jns
sub
sbb
or
outsb
push
out
cmpsb
jbe
fiaddl
mov
mov
and
or
ret
bound
or
push
iret
test
inc
in
fisubl
jp
pop
or
in
jg
fwait
xor
shrl
test
ret
arpl
mov
inc
sub
jo
iret
push
sar
lods
out
add
mov
jne
dec
push
adc
loope
cmpsb
ja
adc
and
and
lods
cmpsb
icebp
push
fcomi
jp
or
dec
mov
test
mov
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
cmp
call
movsb
rorb
pop
push
mov
mov
insb
or
mov
cld
nop
pop
mov
out
push
ljmp
sub
or
cli
adc
mov
push
cli
cmc
sbb
pop
cmc
test
xor
push
shrl
and
clc
xchg
push
incl
mov
rcll
pop
in
mov
push
mov
insb
lds
prefetchnta
push
jge
cltd
push
or
pop
shl
nop
xor
mov
cmp
mov
sti
test
arpl
mov
sbb
inc
adc
in
jnp
push
or
cmpsl
xchg
popf
sbb
xlat
dec
lock
data16
adc
sbb
lcall
sbb
xchg
xor
lds
scas
daa
out
sub
cmp
test
sub
aad
test
test
popa
in
test
cmovbe
push
jmp
sbb
pusha
arpl
xchg
jb
xchg
lea
neg
in
mov
in
mov
adc
sub
cmp
or
pop
mov
outsl
sahf
xchg
fs
mov
sahf
xchg
xor
in
push
add
test
fisttpll
fildll
scas
shrl
mov
jmp
dec
cli
sbb
test
outsb
jp
out
rorb
cld
xor
jl
call
outsl
fidivs
xor
or
roll
mov
subpd
mov
mov
outsb
lock
sarl
add
and
mov
pop
ds
mov
imul
cwtl
dec
sbb
push
sbb
or
das
lret
int
outsb
push
jnp
mov
test
sbb
loope
das
push
pop
pop
push
xchg
loop
pop
imul
or
mov
insb
and
loopne
xchg
roll
sti
enter
imul
push
jmp
repz
sbb
xchg
and
iret
xchg
sub
adc
bound
xlat
pop
out
negl
xor
sbb
int3
mov
adc
les
stos
add
dec
mov
outsl
inc
mov
mov
loop
mov
aam
lcall
jae
pop
push
sub
mov
int3
mov
lcall
daa
jecxz
pop
jle
dec
pop
test
test
xor
stc
xchg
sbb
jno
lds
cmp
xchg
push
mov
xor
lret
xor
popf
jbe
imul
pop
daa
je
xchg
mov
rorl
dec
pop
loop
or
in
paddsb
pushw
cmpsb
push
fmuls
or
xor
mov
add
jmp
push
mov
aad
sbb
sbb
jg
jl
lret
sub
jb
lret
fcmovne
cwtl
mov
stc
scas
add
pop
mov
mov
or
lds
je
pop
sbb
dec
std
rsm
loop
cwtl
mov
xchg
arpl
out
shlb
dec
mov
push
or
jecxz
call
loop
mov
fwait
push
inc
pop
sub
mov
mov
jecxz
mov
sub
sbb
push
mov
icebp
in
sub
lock
inc
out
call
insl
mov
nop
subl
sub
jne
ljmp
pop
add
aas
adcl
stos
out
pop
ss
pop
push
in
inc
repnz
imul
lret
xlat
aad
clc
or
sbb
shrl
es
add
mov
pop
fbstp
sbb
sbb
aam
xchg
lret
cmp
dec
test
sub
ds
repnz
push
mov
scas
dec
scas
mov
es
dec
xchg
xor
inc
or
mov
sbb
mov
mov
add
and
jns
sub
addr16
push
decb
data16
mov
xchg
test
adc
imulb
push
push
dec
mov
inc
call
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
sbb
mov
cmp
jg
jl
xlat
push
ret
sub
xchg
adc
insb
ja
lret
mov
cmpsl
js
pop
lds
out
jb
sbb
insl
or
movb
sbb
jnp
xlat
outsb
and
shr
loopne
pop
aad
enter
popa
lret
and
insb
shl
std
xchg
add
sti
cmp
rol
lds
mov
mov
add
dec
fcomps
cwtl
mov
mov
clc
lret
sub
mov
vandnps
cmp
mov
repnz
add
or
or
arpl
mov
loop
roll
popf
pop
push
das
push
mov
add
xor
or
sarb
push
and
out
cmp
mov
push
movsb
and
inc
cmp
cld
add
push
dec
lahf
adc
in
adc
cmp
cld
pop
jmp
lcall
sub
mov
jno
inc
jge
xchg
movsb
xchg
lds
sub
lea
cmpsb
jecxz
inc
push
leave
sti
pop
pop
pop
inc
xchg
cmpsl
cmpsl
fnsave
sbb
lcall
inc
adc
xor
std
pop
stos
dec
fbstp
mov
sahf
mov
xchg
mov
in
fmul
call
icebp
mov
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
sahf
mov
push
mov
sbb
inc
push
idivl
jl
call
sbb
sahf
sub
inc
mov
jmp
ljmp
mov
outsl
mov
and
xchg
dec
add
jns
lock
jb
daa
outsb
push
lret
or
ds
dec
xchg
adc
insl
lahf
inc
lret
mov
adc
jmp
xor
mov
ret
jge
ljmp
loope
aaa
scas
addr16
test
out
icebp
mov
push
push
xchg
mov
xor
mov
or
jecxz
adc
cmp
and
dec
pop
or
jno
add
out
sbb
jno
es
pop
jp
push
inc
xchg
fldenv
pop
and
nopl
pop
adc
jmp
sbb
out
jle
push
xor
xchg
cmpsl
inc
pop
adc
and
sub
xchg
inc
cmpsl
js
fisubl
mov
xchg
sub
inc
lcall
adc
jmp
mov
add
test
jle
push
mov
xor
add
pop
gs
and
mov
and
push
sbb
fsub
xlat
cltd
ret
arpl
add
mov
mov
dec
pop
pop
rol
cmp
sbb
mov
jg
mov
jmp
ret
out
std
cli
cmp
outsb
cmp
jl
call
insl
sub
inc
jg
or
das
cmp
das
mov
cmp
repz
jns
adcl
xor
inc
mov
in
mov
in
xlat
leave
hlt
adc
cmp
pop
repz
mov
fbld
mov
xchg
add
in
push
xchg
popf
lds
or
jno
xor
mov
lret
ljmp
push
scas
ret
sub
jecxz
cli
dec
mov
mov
xorb
xchg
rcrl
inc
lods
xchg
mov
fwait
aaa
cmp
and
fsts
imull
push
mov
mov
pop
sub
lahf
ds
mov
jl
xchg
push
jmp
push
loopne
ss
sub
adc
xor
jno
in
inc
fisubl
fimuls
add
inc
xchg
jle
cmpsl
and
stos
inc
cmp
xor
cld
push
ret
add
loope
stos
fs
mov
rcr
jp
or
inc
lods
jbe
mov
dec
and
adc
sub
ja
insl
test
adc
xor
sub
pop
sub
shl
mov
lea
aam
ljmp
adc
negb
sbb
jb
xor
jmp
sub
sti
je
out
sub
push
pop
scas
fistpll
jl
call
or
push
sub
sbb
mov
mov
xlat
test
inc
push
or
movsb
xor
ja
cmp
fwait
and
inc
mov
out
mov
add
xor
inc
stos
xchg
insl
xchg
loopne
jae
and
inc
ss
pop
pop
enter
outsl
hlt
cmp
sbb
mov
adc
mov
in
pop
fdivs
xor
in
stos
xchg
xorb
xchg
rorl
pop
call
xchg
mov
mov
repnz
into
xor
mov
xchg
jns
lahf
inc
jnp
adc
enter
mov
adcl
jnp
xor
sahf
push
jecxz
repz
add
mov
jge
in
cmc
dec
das
push
inc
ret
inc
sbb
pushw
lret
sahf
filds
inc
notl
lods
pusha
loopne
mov
sub
push
stos
int
mov
out
push
inc
xchg
sahf
hlt
jmp
test
shlb
mov
rcl
push
push
mov
dec
sub
repz
jne,pt
mov
xchg
push
fiaddl
xchg
cmp
inc
push
and
or
dec
add
test
out
rcrl
outsb
mov
decb
pushf
jp
movsb
nop
dec
inc
loopne
push
dec
cmp
add
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
aas
out
mov
jl
jg
jl
mov
jb
mov
lea
loopne
lea
mov
in
lock
sti
cwtl
sub
add
enter
add
leave
push
lds
fldcw
out
add
loop
add
dec
sub
cmp
js
or
arpl
mov
cmc
mov
jp
or
cmp
sbb
mov
and
jo
push
ds
fwait
xor
cmovbe
divb
in
int3
stc
or
inc
or
fstps
je
lods
adc
out
je
mov
andb
mov
pop
mov
pop
fldl
or
stos
adc
lds
out
insb
and
test
sub
sbb
ret
testb
push
ret
fistl
cltd
pop
dec
aam
and
movl
adc
jae
mov
shr
mov
js
sahf
sbb
xor
inc
mov
or
push
int
pop
dec
or
das
push
xchg
das
inc
mov
outsl
fistl
es
aaa
incl
push
iret
add
pop
mov
inc
pop
js
dec
shrb
sbb
add
xor
iret
xor
sub
mov
xchg
aad
dec
xchg
stos
pusha
loopne
or
aaa
dec
out
test
test
idiv
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
push
ss
xor
xor
jg
jl
loope
pop
out
stos
mov
mov
mov
and
mov
mov
pop
dec
mov
jo
and
add
fincstp
cmpsb
pop
pop
ds
popf
or
leave
test
test
push
int3
sti
push
adc
xchg
sar
cmp
push
lds
shll
sbb
inc
sbb
or
pop
negl
stc
dec
inc
and
mov
sub
scas
cmp
push
int
repnz
push
lods
clc
fsubs
mov
out
rclb
pushf
scas
fwait
stos
cs
and
out
sub
and
loope
lret
jecxz
jle
inc
imul
mov
and
push
iret
pop
daa
call
test
pop
adc
das
jg
add
hlt
scas
jbe
adcl
xor
ljmp
mov
dec
repnz
mov
jno
int3
popf
movsb
movsb
inc
pop
fstps
mov
roll
sub
ja
push
bound
mov
das
adc
and
fdivrl
bswap
inc
fisttpl
sub
ljmp
sbb
inc
aam
mov
pushf
outsl
cmp
cmp
cwtl
pop
sbb
and
mov
mov
pusha
das
ljmp
cmp
imul
add
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
cwtl
lret
orl
cli
jmp
dec
add
insb
leave
sbb
mov
inc
add
or
mov
mov
sbb
in
shlb
mov
xchg
add
xchg
int3
clc
push
divb
ds
cmpb
sbb
pop
jbe
cwtl
cs
call
sbb
aaa
movsb
push
repz
pop
lds
mov
adc
push
sbb
in
pop
xchg
or
out
and
stc
jno
insb
test
out
mov
int
test
jbe
xor
cmp
xor
cmpsl
adc
in
mov
rcll
xor
loopne
dec
imul
aas
push
or
jl
movsb
inc
pop
cmpsl
pop
xchg
cmp
ss
xchg
xlat
aas
ffreep
lea
jnp
mov
repnz
push
ret
inc
jp
xchg
mov
sub
lret
fcoml
sbb
inc
jno
cltd
xchg
jg
out
outsb
jg
jle
in
fadd
rolb
jp
inc
jge
push
movsb
dec
mov
dec
inc
fildl
adc
ror
sbb
dec
inc
jp
mov
daa
ja
sbb
xor
cli
cwtl
mov
jae
lods
leave
mov
jmp
jne
in
mov
popa
test
pop
int
xchg
push
sbb
xchg
mov
mov
rorb
pop
mov
add
aaa
mov
sbb
jno
ljmp
sbb
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
cld
int
add
xor
jl
call
push
lock
and
push
popa
push
pop
push
sub
xchg
daa
cmp
sahf
push
pop
jne
cmp
arpl
rcrb
das
ja
sarb
sahf
sbb
mov
repnz
inc
xor
sarb
pop
js
rclb
xchg
mov
lea
cltd
das
mov
ja
addl
mov
aam
sbb
push
mov
shl
insb
leave
mov
inc
repz
and
rcrb
add
pop
inc
and
lahf
fisubrl
inc
and
imul
push
rolb
enter
jo,pt
sbb
adc
jno
out
bound
fisubl
mov
hlt
jo
inc
push
jg
test
inc
or
mov
lret
outsb
mov
jbe
adc
stos
sub
push
js
lcall
int3
lret
cld
xor
mov
js
sub
test
lret
aaa
adc
xchg
js
pop
ret
push
andb
mov
shrb
sub
pop
and
pop
pop
inc
sub
mov
push
mov
rorl
and
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
jmp
add
add
mov
sub
mov
rolb
test
mov
or
lahf
sbb
push
addr16
lcall
repz
inc
pop
mov
push
sbb
xchg
test
fnstcw
pop
je
push
pop
stc
xor
test
and
sub
pop
adc
xchg
les
mov
push
outsl
push
jne
lea
js
add
repz
mov
aaa
or
faddl
mov
addb
daa
push
popf
add
pushl
loop
daa
adcl
add
cmp
xor
pop
and
gs
ds
subl
xchg
push
js
mov
xchg
push
dec
xchg
jne
mov
push
push
and
push
mov
out
inc
imul
xor
fnstenv
mov
pop
dec
fcom
in
jecxz
sub
cmpsb
sbb
dec
nopl
dec
and
xor
fisttpll
jg
lock
xor
andb
ss
scas
sbb
lock
jg
dec
sbb
jb
add
call
out
jbe
in
imul
sub
ret
xchg
enter
push
lret
push
push
xlat
les
mov
scas
iret
int
and
aas
jae
jge
and
sbbl
xchg
mov
xor
cli
out
xor
jb
mov
mov
sub
xor
jno
nop
pop
out
dec
stos
and
mov
nop
cld
jbe
xor
in
dec
dec
jmp
cmp
imul
cmp
inc
add
leave
adc
mov
mov
das
aad
jb
js
pop
sbb
and
ficoml
pop
mov
imul
cltd
push
pop
dec
mov
pop
rorl
adc
sbb
stc
movsl
jns
pop
jo
mov
cmovs
stos
fcomip
jno
dec
cmp
xchg
xor
imul
stos
pop
lods
xchg
pop
xchg
in
push
frstor
mov
inc
lahf
sbb
cmp
sub
mov
add
push
int
imul
inc
sub
ljmp
test
outsb
sbb
stos
jg
out
stc
mov
xor
daa
pop
dec
mov
loopne
fs
mov
pop
push
pop
add
in
inc
mov
les
test
cmp
cmpsl
inc
mov
push
popa
jg
imul
lret
mov
sar
orl
dec
sub
mov
mov
int3
and
lea
mov
insb
arpl
inc
jg
stos
fwait
push
popa
insl
jae
xor
out
xor
mov
loopne
dec
push
scas
out
hlt
mov
jae
dec
pop
push
pop
inc
test
pop
leave
mov
ljmp
ret
repnz
push
leave
push
push
shlb
adc
xlat
clc
cmp
enter
mov
outsl
cmp
fdivrp
gs
ja
push
dec
mov
ret
pop
adc
push
and
inc
out
lahf
sbb
mov
pushf
movmskps
fs
mov
push
or
push
stos
cmp
sbb
mov
mov
add
sub
addr16
dec
loopne
xchg
outsb
fsubrs
jge
xchg
lcall
push
jecxz
or
iret
xchg
mov
adc
xchg
lea
pop
test
push
loope
mov
or
movsb
adcb
repz
cmpsl
xchg
xor
cmpsb
xchg
ret
mov
mov
and
mov
sub
pop
cmp
sbb
pop
sti
nop
cltd
sub
outsl
mov
cltd
xchg
jne
mov
fnstsw
push
or
push
and
sahf
push
xchg
cli
jns
punpcklbw
mov
mov
rcr
mov
mov
les
pop
cmp
scas
push
adc
shl
test
pop
add
dec
mov
sbb
in
jg
lahf
daa
and
jbe
aad
or
into
push
lahf
clc
sbbl
mov
out
call
flds
dec
mov
or
xor
jnp
xchg
sub
aaa
sub
out
inc
movsb
adc
pop
xor
leave
shl
jl
cmp
adc
cmp
jmp
jmp
push
xchg
and
ss
std
les
and
inc
aaa
jo
or
and
mov
push
cwtl
mov
adc
pop
or
mov
push
jmp
out
or
aad
cmpsb
in
stos
inc
and
mov
pop
daa
out
iret
mov
sub
xchg
repnz
jb
andl
rclb
je
mov
mov
dec
xchg
mov
out
xchg
push
or
out
lods
arpl
mov
insl
loope
fistpl
mov
mov
pop
mov
xchg
mov
test
sub
or
movsl
xchg
mov
pop
push
jne
jmp
in
cli
js
pop
add
mov
aam
xchg
dec
dec
mov
xchg
or
pop
push
push
push
adc
cmc
ljmp
mov
loope
fbld
xchg
icebp
xor
pop
test
xchg
sub
mov
push
and
push
cmpsb
and
mov
and
add
or
ret
outsb
std
ret
sahf
xchg
pop
pop
adc
or
fadd
inc
cmp
lods
dec
cwtl
mov
adc
stc
into
xchg
push
rol
ficompl
mov
sub
add
aad
cwtl
add
movsl
mov
js
inc
cld
test
cli
jmp
mov
inc
push
mov
mov
cmp
dec
push
inc
dec
add
mov
test
in
in
sub
dec
ds
shll
mov
sbb
mov
dec
dec
sub
sti
xchg
push
mov
orl
mov
or
daa
sbb
insb
or
sub
lock
gs
xchg
push
jnp
lods
incb
test
ss
cs
loope
hlt
loopne
std
add
adc
adc
mov
mov
mov
cmpsl
and
sub
dec
icebp
cmpsl
push
ss
cmp
jne
mov
cmpsb
mov
push
lods
mov
push
repnz
dec
fmuls
xor
mov
das
push
pop
scas
dec
mov
in
cli
or
jecxz
xor
sahf
mov
jae
aaa
orl
int3
sahf
popf
testb
push
xchg
lods
inc
arpl
lea
jnp
clc
mov
mov
das
sbb
sarl
mov
dec
aas
bound
jae
or
jmp
jmp
add
add
add
or
fildll
out
rep
jmp
add
outsb
pop
add
xlat
fsubs
or
pop
and
jl
jb
lcall
outsl
movsb
add
or
in
out
in
bound
iret
pop
mov
add
scas
insb
mov
sbb
movsb
adc
adc
icebp
cmp
and
jnp
inc
int
fsubr
add
jmp
call
or
lret
sub
je
ljmp
daa
inc
xchg
inc
sbb
jmp
cwtl
out
push
mov
cmpsb
loop
fcomip
sbbb
je
les
repz
rcrb
mov
and
repnz
and
mov
ljmp
outsl
push
jmp
mov
dec
pop
sub
lock
inc
ja
je
xor
sarb
je
jg
jge
aad
shll
cmp
cld
aad
outsb
sub
mov
cwtl
stos
aam
xor
arpl
int3
jnp
imul
call
test
lods
sub
loop
popa
push
inc
hlt
loopne
lock
pop
int3
in
idivl
xlat
add
stc
push
mov
idivb
rcrb
pushf
fldenv
aaa
xchg
and
std
jecxz
loope
enter
push
frstor
inc
fstps
inc
in
mov
jmp
mov
mov
adc
icebp
shlb
add
mov
sbb
cmp
add
inc
out
pop
mov
cmpsl
fisubrs
ror
stos
lcall
and
lcall
dec
ret
or
dec
cmp
mov
push
cs
pop
pop
xlat
mov
or
pop
fidivrs
int3
loopne
dec
inc
pop
push
dec
push
clc
mov
dec
and
aas
cmpsl
into
pop
sub
cwtl
xchg
inc
pop
cmc
cmpl
inc
and
add
jne
fcmove
hlt
sbb
mov
shrl
mov
movups
sbb
into
jns
xchg
adc
lret
adc
and
iret
jno
jmp
movb
jno
mov
push
cmc
lret
outsl
sbb
das
ficoms
test
jge
adc
mov
idivb
add
mov
jb
sub
mov
lock
adc
outsl
cwtl
pop
lahf
push
inc
sbb
fucomip
lret
and
repnz
push
mov
mov
sbb
call
add
push
and
or
jmp
push
jl
jp
adc
arpl
mov
add
movsl
push
lods
das
test
inc
popa
in
outsl
loop
cmp
icebp
in
pop
adc
xchg
sarl
ret
jns
addr16
mov
call
out
push
ljmp
mov
lret
inc
dec
rcrl
add
inc
dec
out
loope
xor
imul
pop
or
or
popf
mov
scas
shll
and
imul
add
stos
stc
and
push
iret
cmp
daa
pop
or
push
sti
lods
in
or
in
pop
in
jns
ds
popa
jbe
ror
cs
imul
jge
add
cwtl
out
and
pop
lock
add
das
xor
or
sbb
aas
gs
inc
fninit
imul
clc
push
xor
dec
cli
das
or
popl
push
inc
mov
inc
call
inc
push
push
rcll
cmp
in
loop
and
nop
dec
xlat
cmp
mov
popa
aad
mov
and
jno
xchg
xor
cwtl
inc
in
faddl
xchg
cmpl
mov
jp
pop
and
rcrl
out
and
arpl
or
out
pop
aad
loop
iret
cmpsl
add
xor
mov
shl
or
jmp
fsub
mov
mov
or
fdiv
std
jmp
sbb
cltd
mov
or
test
cmp
aas
jae
mov
mov
sub
inc
cltd
cmp
test
testl
xor
mov
gs
test
dec
sub
lds
arpl
daa
mov
adc
xchg
imul
mov
xorl
dec
lret
dec
out
out
inc
fwait
mov
cmp
ds
shr
xchg
push
jno
push
stc
loop
hlt
pop
sbb
into
cs
out
push
mov
repz
in
sbb
and
jmp
pusha
mov
imul
or
rolb
test
inc
jb
adc
add
jne
loopne
pop
cmp
sbb
iret
lret
cwtl
and
int
adc
pop
pop
arpl
mov
push
mov
scas
dec
int
ret
xchg
xchg
cmp
xor
loope
push
or
sbb
and
xorb
sbb
out
imul
add
ret
jle
jp
dec
lods
lahf
out
iret
dec
pop
mov
out
cld
pushf
aas
hlt
xchg
xchg
popf
imul
mov
push
add
shll
mov
jmp
pop
ret
pop
ficompl
sub
pop
sbb
and
dec
push
cmpsl
sbb
xchg
mov
mov
mov
shrl
jmp
push
sub
push
xor
insl
movl
rorl
pop
jbe
and
adc
popf
jge
shlb
push
int3
push
add
dec
cmc
xorl
imul
jb
mov
out
xchg
and
repnz
ja
repz
mov
sub
pop
loopne
ss
adc
jbe
repz
inc
stos
sub
jbe
fldl
imul
xchg
adc
xchg
outsb
sarl
dec
out
daa
dec
pop
imul
mov
sbb
sub
jb
leave
inc
jmp
aad
lret
jecxz
xchg
loopne
jg
xchg
mov
xor
add
clc
out
sbb
pop
mov
out
lods
push
mov
test
test
adc
aad
sub
jecxz
jo
sbb
scas
push
mov
mov
or
jo
xchg
stos
lods
jge
fadd
sahf
lods
test
aaa
sub
das
lock
push
ja
sti
outsb
js
xor
inc
mov
insl
das
ret
test
or
adc
icebp
lea
push
iret
adc
push
lahf
js
sub
jmp
jg
lret
jo
inc
jb
ja
iret
xchg
mov
mov
fisttpl
mov
xchg
push
mov
dec
mov
cmp
sub
push
imul
jg
push
mov
les
out
pop
inc
fldcw
add
adc
in
push
scas
jp
adc
scas
pop
push
add
outsb
pop
add
xchg
clc
mov
inc
or
sbb
imul
stos
or
dec
outsl
pop
lret
mov
mov
mov
mov
jle
mov
outsb
push
lret
popa
fcoms
repnz
cmp
outsb
iret
stos
sub
mov
insb
mov
jns
addr16
inc
ret
cs
clc
mov
out
xor
add
loope
xor
iret
aas
xor
and
scas
lods
insb
sub
arpl
icebp
pushf
stos
sub
xor
mov
int
jmp
or
sub
mov
jnp
fisubl
into
out
push
mov
aam
push
icebp
popf
pop
sbb
and
adc
and
mov
rol
dec
xchg
add
dec
sbb
cmpsb
adc
dec
inc
shrl
movsl
loop,pn
inc
adc
sbb
adc
mov
push
cld
jnp
in
push
in
cmp
mov
mov
pop
mov
fstpl
ret
xchg
push
dec
pop
pop
cld
movsb
cld
notb
inc
or
fmuls
mov
add
cmpsb
test
sub
iret
dec
push
xchg
cmp
jne
sub
jae
mov
or
jb
add
loop
mov
adc
fxch
std
xor
in
cmpl
stos
xorb
cmpl
repz
and
jge
out
out
aad
xchg
ja
push
pop
mov
sbb
lcall
cmp
add
push
jne
add
sbb
inc
adc
ss
and
stc
incl
add
sub
cmp
mov
push
stos
jns
fisubrs
jmp
enter
mov
fisttpll
inc
lods
pop
cld
sbb
mov
stc
insl
cmpb
shlb
adc
inc
push
ficoms
or
ds
pop
adc
ja
xchg
pop
cmp
into
mov
ljmp
js
lods
outsb
testb
gs
jno
ficoml
in
pop
push
inc
imul
in
jge
outsl
xor
aam
clc
push
and
icebp
pushf
insl
mov
fbstp
ret
adc
sub
push
call
xchg
push
xorps
inc
rcl
fisubrl
testb
push
mov
cli
jg
or
sub
lahf
pop
lret
movsl
test
cmp
push
ds
sti
fsubs
mov
mov
dec
jg
xchg
lea
mov
fxch
movsl
sarl
clc
dec
cwtl
inc
mov
cmp
add
jo
scas
loop
xchg
and
sbb
xchg
mov
ja
mov
or
adc
mov
test
into
jl
cmp
scas
cmp
jp
and
fbstp
jg
sub
rcrl
insl
fbld
fs
hlt
ffree
sbb
test
mov
mov
adc
decl
js
mov
mov
outsb
out
cmp
sub
inc
cwtl
mov
in
ja
test
and
data16
pop
aas
icebp
cmp
cmp
or
std
and
ss
cmc
pop
mov
movsl
test
mov
and
sbb
jo
sbbb
into
mov
mov
xchg
push
add
lcall
xor
push
mov
sbb
repz
sbbl
pop
pop
add
pop
rclb
adc
dec
mov
loope
adc
push
cltd
sbb
mov
pop
lret
inc
mov
sub
cli
sti
sbb
xchg
test
xor
xchg
jb
and
mov
xor
sbb
mov
fisubrl
jae
cwtl
mov
cmpsl
dec
es
hlt
loope
in
out
pop
test
insl
lods
dec
cmpl
lea
or
repnz
negl
or
lea
add
outsb
mov
test
mov
push
imull
push
rep
xchg
std
mov
loop
mov
mov
insl
lods
insb
icebp
cmp
call
mov
inc
dec
fs
mov
cmp
lds
movsl
sbb
and
icebp
repz
xchg
pop
repz
mov
iret
sbb
fildl
mov
cmc
mov
test
dec
imul
jmp
push
push
or
fsts
dec
xor
mov
push
pop
or
ja
or
stc
inc
lds
pop
clc
cvtps2pi
adc
mov
cltd
cmovae
int
or
stos
push
jp
jb
lods
sbb
jp
or
cmp
push
xor
dec
xor
sub
pop
loope
mov
test
cmp
repz
pop
je
stos
ret
das
rorl
ds
fadd
dec
mov
pop
mov
inc
xchg
mov
cmpsl
sbb
loop
push
test
xor
xor
rcr
xchg
cmp
pop
push
out
mulb
arpl
lds
xchg
mov
cli
retw
adc
inc
gs
and
push
xor
cld
jmp
add
sbb
je
fadds
int3
inc
xchg
jae
out
dec
pop
out
mov
scas
mov
dec
adc
jle
mov
aad
xchg
mov
pop
inc
imul
cmpsb
sti
addr16
sahf
push
fucomp
mov
in
mov
movsl
jbe
fwait
test
and
insb
cmp
inc
nop
test
push
adc
test
sarl
cmp
scas
dec
loop
mov
shrb
or
mov
mov
test
jmp
dec
jne
es
jl
ret
cmp
xchg
popa
subb
cmpsb
push
in
fs
sti
add
loope
int3
mov
and
dec
adc
enter
mov
loop
fmul
inc
icebp
sbb
clc
call
aad
lret
sbb
movsl
ret
xchg
adc
mov
out
bound
mov
into
je
jb
mov
pop
int
aad
jg
mov
pop
mulb
fldl
sti
jo
repnz
aad
pusha
enter
mov
ljmp
hlt
push
repnz
les
dec
mov
fs
movsl
xchg
mov
mov
xor
mov
in
push
out
mov
mov
sbb
push
roll
or
jmp
sub
sbb
sbb
mov
dec
push
repnz
mov
push
pop
call
push
mov
aad
lds
loope
mov
mov
loope
fs
mov
and
jmp
cli
pop
dec
aad
test
in
sbb
dec
cld
pop
hlt
cmp
mov
push
push
js,pn
pop
mov
add
add
lahf
rorl
pushw
push
addb
pop
add
outsb
pop
add
sub
and
dec
in
mov
loope
repnz
jecxz
icebp
aas
sub
lcall
mov
sbb
scas
adc
outsb
aas
aad
push
lock
into
insb
adc
stos
adc
or
stc
dec
popa
cmp
mov
pusha
cmpsl
inc
aam
decb
movsb
xor
cli
nop
pusha
loop
pushf
in
adc
push
cltd
mov
scas
fcmovbe
cmp
xor
pop
mov
xor
or
gs
mov
test
pop
inc
mov
jecxz
popa
push
cmpl
div
sbb
ja
hlt
jns
sbb
lock
rclb
clc
jno
inc
inc
mov
push
sbb
sub
adc
pop
pop
nop/reserved
mov
fnstsw
inc
inc
jne
sub
in
in
and
inc
mov
xor
mov
push
pop
push
adc
and
call
mov
out
cmpsb
int3
imul
jmp
cwtl
ja
in
jne
xchg
in
mov
mov
aaa
mov
movsb
rorb
daa
pop
stos
inc
shlb
out
push
mov
in
inc
adc
mov
cmp
mov
mov
repz
notl
mov
jo
jge
mov
test
inc
pop
xchg
jnp
in
ffreep
loop
xor
sub
sbb
jne
lods
add
pop
push
push
in
push
loopne
cld
lcall
out
cmpsl
stos
rcl
pop
jg,pt
data16
test
xlat
push
push
in
xor
jg
mov
inc
add
push
pushf
in
addr16
pushf
sbb
inc
mov
arpl
mov
inc
addr16
jge
inc
scas
jns
outsl
jnp
popf
xchg
push
daa
stos
out
adc
in
lcall
xchg
jae
cmp
cmpsb
xchg
test
leave
sbb
jns
enter
mov
dec
add
jecxz
sbb
fwait
mov
add
push
std
pop
push
lcall
mov
sti
ds
scas
cmc
bound
scas
mov
rolb
sbb
sar
insb
mov
les
sti
arpl
jno
scas
ud2
push
inc
mov
adc
stos
xchg
idivl
sub
dec
cmc
sti
shrb
repnz
pop
outsb
insb
pop
aas
lea
pop
push
mov
cld
sbb
mov
pop
mov
add
cmp
std
or
xchg
fsubl
mov
ja
imul
shr
stc
inc
mov
push
sahf
dec
rcrb
loop
in
rorl
gs
shll
add
lods
sbb
add
mov
jmp
mov
lret
les
and
pop
jbe
lods
pop
roll
or
adc
in
stos
cmp
fnstenv
jmp
out
cmpsl
mov
xor
pop
ret
lcall
inc
sbb
fisttpll
test
pop
add
sarl
shrb
fstps
mov
push
jno
jle
mov
jo
mov
mov
adc
mov
stos
into
imul
fs
jno
jns
mov
xor
cmp
popf
dec
push
or
sub
rclb
fidivrs
lcall
faddl
push
jp
xchg
xchg
xchg
mov
xor
mov
mov
and
mov
pop
in
and
addb
and
mov
inc
mov
mov
test
je
sub
add
out
sub
push
mov
cwtl
cs
jmp
and
dec
add
jno
aam
push
pusha
pushf
dec
xchg
dec
js
fstps
adc
jns
xor
lds
inc
mov
std
addr16
arpl
out
mov
movsl
lcall
add
shll
das
pop
stos
loop
xor
mov
cmp
push
dec
popl
jno
and
addr16
sbb
cmp
adc
rclb
cmc
imul
test
mov
sarb
or
test
mov
cmp
fsts
and
decb
mov
sub
shl
xor
jmp
call
adc
add
lods
jp
icebp
call
cltd
fwait
pop
ror
dec
xlat
pop
sbb
xchg
ja
pop
or
lds
es
and
iret
pop
fwait
mov
outsb
lcall
out
fisttps
and
lods
mov
cld
push
push
mov
xor
inc
adc
mov
or
xor
push
lahf
negb
pusha
push
mov
pushf
loop
loopne
mov
popf
dec
push
adc
or
lods
or
push
cmp
inc
xchg
nop
xor
pop
sahf
dec
leave
cmp
out
ret
sub
push
lods
das
and
subb
mov
mov
stos
aam
push
rorb
and
dec
shl
cmpxchg
stos
js
jo
arpl
ss
aad
sbb
push
scas
sbb
and
and
mov
adc
dec
mov
pushw
xlat
inc
adc
adc
dec
adc
sub
mov
sar
mov
sub
add
and
cmc
mov
std
popf
lahf
inc
sbb
out
cmp
jecxz
sarb
dec
outsl
inc
or
insb
mul
sbb
fdiv
hlt
sbb
lock
jns
out
ja
test
loope
dec
inc
mov
sbb
cmp
mov
cmpsl
int
dec
imul
sbb
sub
pop
and
pop
mov
cld
cld
sbb
int3
fdivl
jmp
loopne
shll
sub
sbb
mov
cmc
aad
sbb
jne
adc
test
jb
outsb
dec
dec
and
push
arpl
je
sbbl
push
movsb
cs
jecxz
dec
insb
testl
mov
cmp
mov
jno
in
pop
xchg
and
fnstenv
call
mov
and
pop
les
sahf
pop
xor
hlt
out
and
cli
out
xchg
dec
lcall
hlt
cltd
fidivrl
sbb
int
ret
test
dec
xchg
lahf
jge
adc
mov
push
cld
mov
addl
or
xchg
mov
roll
or
jg
push
out
jbe
iret
mov
pop
stos
leave
notb
out
fistl
out
fisubrs
sub
ljmp
adc
iret
mov
jg
imul
loopne
mov
out
stos
adc
xlat
ficompl
xlat
xlat
sbb
sbb
gs
bound
incl
add
adc
std
out
lods
add
roll
data16
outsb
pop
add
xchg
jns
lds
cmpl
insl
mov
mul
xchg
cmp
in
fs
adc
pusha
add
cli
mov
test
mov
dec
mov
pop
mov
jns
shll
and
lea
outsb
add
aaa
sub
pop
insl
jge
subb
xor
adc
adc
addr16
pop
call
shll
nop
fmul
out
sub
adc
pusha
dec
xchg
orl
pop
dec
inc
ja
pop
addl
imul
adc
inc
dec
jnp
inc
cmpsw
push
ds
push
jnp
pushf
or
in
in
orl
fldt
cltd
lods
add
inc
jnp
bswap
add
mov
inc
cmp
rclb
cmp
jb
les
dec
jl
mov
nop
das
jmp
jns
faddl
add
ja
pop
add
push
lcall
lahf
outsl
xor
cli
je
push
add
shll
push
inc
test
rcrb
outsb
shll
pop
ret
dec
repnz
aam
movsl
mov
pop
hlt
and
and
daa
sbb
mov
push
or
pop
int3
cmc
lahf
call
ret
inc
outsb
popf
pop
or
ret
and
sti
mov
fs
arpl
mov
fistpll
mov
dec
test
push
pop
push
sub
fisubl
icebp
xchg
int3
sbb
cmp
out
imul
xchg
add
and
xorl
out
or
pop
aad
int3
fs
cvtps2pd
ja
sbb
sbb
loop
sub
jae
fwait
adc
fldt
mov
loopne
je
push
call
xchg
je
pop
ds
dec
cld
lock
iret
in
jmp
stos
or
xor
and
adc
and
imul
lcall
data16
loop
in
js
int
push
pop
into
dec
fstpl
add
cmp
jl
cmp
popa
or
outsl
daa
push
dec
call
adc
not
mov
mov
pop
jmp
mov
cmp
mov
jle
xor
cmp
mov
fisubs
ret
inc
repnz
ds
add
xchg
xor
push
insb
aaa
or
jl
xchg
sbb
and
xchg
and
or
pop
call
stos
cwtl
pop
or
jno
dec
mov
popa
lret
sahf
repnz
xor
jno
or
mov
add
mov
sbb
in
mov
inc
mov
or
sarb
nop
lock
cmovg
in
and
lods
lock
lcall
adc
xor
cmp
movsb
mov
pop
push
leave
rorb
push
and
lahf
pushf
add
mov
push
shll
movsb
repnz
and
jg
sub
mov
cmpsb
sub
push
sbb
lret
ror
mov
movsl
bound
ds
sti
es
in
testb
daa
loopne
mov
pop
dec
jge
popa
in
mov
sahf
push
mov
or
fcompl
inc
cmpsb
paddw
xchg
pop
inc
add
adc
push
xor
sbb
fs
mov
dec
gs
add
movsb
mov
fstpt
std
stos
mov
jge
bound
cs
daa
rclb
xchg
sbb
adc
mul
addr16
mov
test
mov
jmp
repnz
mov
rcrb
stos
jae
lret
jl
pop
push
xlat
pop
pop
pop
decl
inc
in
ljmp
push
push
fidivs
ret
es
xchg
in
in
cmp
mov
dec
stos
and
cmpb
adc
or
pop
mov
mov
dec
xor
aaa
filds
les
jp
ret
mov
loopne
xor
sti
pop
div
outsb
rclb
jbe
aaa
mov
xor
inc
mov
in
dec
adc
or
dec
sbb
je
test
cs
mov
jl
fisubs
lods
jg
fsubrp
inc
addb
push
test
mov
outsb
sub
lret
mov
sbb
fwait
mov
push
lcall
movsb
pop
pop
xor
je
aaa
daa
or
lcall
ds
ds
in
xor
in
pop
jae
xchg
and
fs
sbb
out
imul
or
mov
ret
bound
ss
xor
pop
imul
fucomip
out
scas
rorl
sub
cwtl
cld
xor
lahf
push
pop
sbb
add
dec
icebp
mov
out
xchg
out
cs
add
sahf
cmc
or
xor
rcll
pop
cmp
test
add
inc
lret
jg
pop
mov
das
scas
popf
and
jne
sahf
leave
sub
mov
dec
adc
data16
inc
adc
xchg
pop
std
jle
and
mov
fadds
jo
fstpl
gs
std
ss
add
push
aam
cmp
in
lods
cmp
dec
dec
xchg
dec
fnsave
fisubrl
push
ja
xchg
and
sub
mov
out
push
mov
mov
stc
dec
scas
inc
sub
nop
and
test
inc
jg
push
and
outsl
inc
jbe
add
ja
das
and
adc
inc
push
sbb
adc
cmp
push
out
out
or
fsts
xchg
xchg
adc
cmp
mov
push
nop
add
fwait
mov
das
or
bound
fxch
sub
faddl
repz
int
xchg
cmp
andl
jge
fwait
popa
sub
sti
loope
scas
es
jae
sbb
push
mov
shl
mov
addl
mov
lret
js
repnz
or
lods
push
mov
loopne
mov
test
fwait
pop
aaa
cmp
add
shrl
mov
adc
sub
test
cmc
push
scas
mov
mov
ss
mov
xchg
or
call
ja
lret
ds
repz
dec
pop
mov
xchg
imul
sbb
stc
sbb
cltd
stc
sbb
lods
mov
add
das
push
cmpl
mov
shl
xchg
jb
mov
lret
push
mov
test
push
sti
rolb
and
nopl
mov
imul
fadds
pop
pop
and
push
aam
mov
add
pop
in
fnstsw
or
pop
lret
mov
pop
add
push
inc
and
fwait
adc
js
pop
jl
movsl
roll
xor
jmp
popf
mov
and
mov
popf
and
inc
xor
shll
add
repz
mov
dec
repnz
mov
call
rolb
mov
sbb
and
jno
int3
lret
test
dec
cli
mov
fistps
sbb
inc
arpl
mov
lahf
dec
popf
scas
mov
sbb
inc
dec
cwtl
pop
cwtl
xor
test
and
out
testb
insl
cmp
push
insl
cltd
cmp
in
jne
es
add
fsubr
jo
cli
outsb
jmp
sbb
and
jle
pop
out
push
cmp
aas
mov
xor
lods
xchg
or
scas
mov
mov
ss
adc
ja
xor
xorb
mov
test
lods
jb
jge
or
ljmp
push
aam
mov
sbb
xchg
movsl
or
orps
push
cmpl
in
loope
pop
mov
xchg
rcrb
in
push
data16
xchg
dec
and
pop
adc
ljmp
test
fwait
mov
lret
mov
push
mov
xchg
ds
outsb
es
insb
es
mov
pop
inc
xor
or
cmp
cmp
das
jl
add
pop
in
leave
fistpll
mov
mov
add
lds
inc
mov
dec
sahf
imul
out
adc
js
sar
inc
insb
fs
mov
pusha
test
pop
jns
and
pop
inc
cmpsl
lds
mov
addb
dec
shrl
push
stc
jl
add
pop
sbb
sub
fwait
sub
enter
jns
ljmp
das
or
enter
dec
add
xchg
pusha
or
je
out
jl
dec
montmul
outsb
shrb
std
movsl
or
mov
in
xchg
aas
xchg
ret
stos
sti
cli
dec
in
std
pushf
mov
dec
movsl
popa
pushf
jb
push
cwtl
push
pop
cmp
mov
outsl
or
mov
xchg
xchg
mov
sub
test
mov
jge
mov
jns
pop
fdivrl
add
enter
push
mov
cmp
int3
sub
mov
fcoml
ret
test
out
pop
shlb
loop
inc
mulb
sub
push
xor
mov
cmp
fidivrl
sub
push
cmp
cmp
lret
cld
incb
sbb
loope
mov
sub
lahf
jae
cmpsb
push
out
bound
inc
hlt
dec
cmp
repz
cwtl
adc
cwtl
pusha
fcomps
sbb
jl
lret
push
xchg
pop
pop
iret
movsl
sti
fidivrl
mov
inc
jbe
in
mov
push
lods
mov
mov
xchg
xor
test
pop
sbb
adc
and
fcmovnbe
dec
std
into
ss
arpl
lea
lcall
or
or
aam
nop
out
xchg
mov
fiadds
aam
xor
adc
movsb
fnstenv
cmp
add
push
imul
faddl
adcb
add
in
outsl
inc
lcall
roll
xchg
incl
jbe
dec
movsl
andl
sbb
outsb
mov
iret
pop
test
aad
ret
pushl
lods
shrl
movsl
jae
inc
out
cmp
fidivrl
lods
mov
stos
out
fsubrs
pop
dec
rolb
leave
aas
fwait
ja
scas
xchg
popf
and
lahf
repz
sti
clc
aaa
jg
outsl
mov
les
fstps
test
dec
adc
out
mov
push
stos
mov
cmp
out
scas
and
loope
xor
lahf
das
push
out
divl
xchg
jge
inc
outsl
ss
dec
mov
fdivl
mov
dec
popf
dec
orl
imul
js
scas
mov
cmc
mov
push
out
rcrl
xor
jle
mov
mov
mov
push
xor
loop
cli
les
ret
xchg
imul
sahf
or
sbb
inc
sub
dec
movsb
call
xor
int3
sbb
call
mov
repz
or
add
sbb
fistpll
xchg
inc
je
fcmovnu
ja
adc
or
push
cmpsl
dec
stos
loopne
push
ret
repz
jmp
scas
jbe
cld
jmp
into
pop
sti
addr16
fdivr
lcall
mov
jmp
lret
lea
dec
fisubrs
movl
iret
cmp
mov
loop
mov
mov
jmp
xchg
fadd
inc
inc
xchg
pop
fwait
or
pop
movsl
ss
adc
cltd
adc
inc
xor
push
jge
inc
cmp
sub
cltd
xchg
xlat
sub
push
lods
lock
cmpsl
jmp
inc
jecxz
sbb
sub
jbe
add
jg
mov
aam
in
in
sarb
out
mov
scas
lea
push
cmc
sub
push
adc
push
loop
and
cmp
dec
mov
mov
mov
push
jnp
pop
arpl
daa
mov
mov
cmp
testl
xchg
mov
add
mov
jb
notl
mov
mov
adc
add
movsl
inc
adcb
inc
mov
jge
lods
mov
adc
data16
mov
loope
stos
lret
daa
add
sbb
rcrb
jg
pop
daa
dec
pop
pushf
push
imul
je
push
jl
inc
pop
add
push
int3
push
fs
leave
inc
aas
stos
push
xchg
rcll
jp
push
fadd
mov
mov
push
xchg
gs
jg
mov
outsb
mov
scas
add
cwtl
icebp
push
xor
dec
push
pusha
cld
and
jp
fstps
add
scas
push
lcall
stc
jmp
cmc
xchg
fists
mov
jle
lahf
xor
gs
xor
ret
pop
push
adc
pop
cwtl
sub
out
xchg
icebp
fs
nop
movsl
fiadds
or
inc
clc
pop
std
mov
jmp
pop
ljmp
loopne
cmp
xchg
ficompl
and
jg
stc
jge
lods
call
inc
lret
imul
enter
stos
std
jae
xchg
clc
inc
inc
jnp
test
fnstcw
xor
pushf
add
push
lds
jb
jg
popf
mov
clc
sbb
cwtl
add
es
sbb
loopew,pt
dec
inc
jnp
jmp
adc
add
add
fstpl
stos
aad
mov
cltd
lcall
and
pop
pop
cmpsl
push
clc
cmc
add
lods
and
pushf
add
mov
pop
fdivl
movsb
jl
cmovb
push
jmp
adc
jb
sbb
sub
jmp
xorl
mov
pop
sub
xlat
dec
js
jae
push
or
outsb
pop
fsts
lahf
pushf
cmp
add
pop
xchg
xchg
cmpsb
xlat
sbb
cmpb
ret
mov
jp
xor
pop
cmp
inc
push
in
movl
rolb
movsl
jbe
mov
mov
inc
xchg
jle
adc
lret
in
fdiv
lcall
into
loope
xor
lds
mov
mov
xchg
xor
jl
xchg
xchg
gs
fmulp
xor
jecxz
out
lahf
adc
sbb
lds
jb,pn
adc
mov
nop
add
outsl
orb
fidivrl
dec
pop
dec
mov
jp
sbb
popf
shrb
push
sbb
mov
adc
in
das
push
mov
adc
cld
mov
jle
repz
iret
fimuls
inc
rcl
cmp
outsl
push
es
ss
shll
sub
jo
push
dec
fcoms
shlb
xchg
dec
pop
in
xor
ss
es
fisttps
jmp
push
cs
andb
test
cmp
push
mov
in
cmpsb
setno
into
rep
clc
jnp
mov
push
daa
jbe
test
sub
xchg
imull
addb
and
je
add
lods
ss
into
shll
mov
jbe
cmp
mov
imul
adc
jp
cli
shl
xor
mov
xchg
jle
jno
jne
shrb
or
mov
dec
adc
sub
xor
sub
xor
adc
test
inc
dec
pop
push
imul
iret
lret
into
les
fdivrs
int
xchg
int3
dec
xor
xchg
fldenv
xchg
mov
scas
xchg
shl
fcmovnb
cmc
mov
lret
in
mov
jle
bound
push
int
aam
pusha
fldenv
push
test
sub
std
in
sub
mov
sub
xchg
and
push
or
cmc
inc
stc
add
mov
xlat
fsubl
gs
adc
scas
xorl
inc
xchg
cmp
rcll
mov
ds
or
stos
xchg
push
cmp
mulps
jmp
test
xor
push
repnz
xchg
cwtl
sub
inc
in
subl
lods
jmp
push
mov
rorl
rcll
adc
inc
or
add
int3
sbb
pop
mov
inc
outsb
and
cmc
jno
fcmovb
rcrb
in
mov
adc
aam
mov
pushfw
push
push
outsb
sahf
sbb
loop
pop
mov
pop
lock
aam
hlt
pop
in
sub
jp
push
mov
in
out
sti
inc
mov
push
ds
cmpsw
xchg
aam
mov
inc
cmp
pop
mov
sub
mov
imul
enter
add
jp
aad
pop
scas
shlb
js
mov
aas
pop
imulb
test
xchg
scas
add
adc
les
mov
add
addl
cwtl
popa
stos
das
jecxz
lods
dec
loop
pop
add
fnstsw
xchg
adc
stos
jae
adc
leave
sub
fsub
jno
cmc
dec
sbb
mov
cmpsb
mov
mov
add
cmp
jae
push
mov
shl
das
test
daa
mov
dec
sbb
sbb
mov
jg
movsb
add
sbb
test
aam
int3
ja
mov
shrl
xchg
insl
test
pushl
xor
dec
or
arpl
inc
fs
scas
sbb
sub
xchg
push
shrd
popf
lods
push
es
mov
jle
rep
xchg
mov
data16
adc
lods
mov
add
or
dec
lods
scas
xchg
bound
dec
inc
inc
mov
pop
pop
jge
mov
stos
sbb
mov
push
jbe
mov
negb
fisttpl
mov
push
and
add
shl
lods
xlat
push
xchg
mov
xor
cwtl
rclb
in
inc
or
xor
test
aad
mov
mov
roll
mov
mov
rorb
out
mov
inc
pop
jmp
xchg
sub
lahf
lahf
push
inc
test
dec
mov
fisttpll
cs
add
add
das
lds
mov
in
movl
call
pop
fucomp
pop
sbb
xchg
imul
cwtl
mov
out
jno
test
xchg
adc
xchg
xlat
xchg
enter
and
mov
mov
push
sbb
xor
jmp
rcll
stc
or
rcll
dec
in
gs
and
push
pop
movsb
in
and
xchg
fs
sarb
sti
dec
aaa
pop
scas
sarb
in
mov
stos
ss
sti
aam
sahf
aad
or
add
jg
iret
ret
repz
xchg
xorb
lret
inc
psubq
mov
mov
xor
cmp
jae
mov
push
ljmp
push
hlt
dec
adc
dec
dec
or
inc
dec
outsb
push
dec
jl
je
call
outsb
jmp
ret
mov
or
mov
push
aaa
xor
in
stos
pop
xchg
inc
or
shl
cmp
xchg
xchg
cmp
adc
xchg
pop
fisttpl
test
cmp
jns
icebp
mov
aas
in
push
shl
mov
cltd
pusha
inc
pop
into
inc
icebp
data16
sti
iret
mov
xorb
in
pop
mov
cmp
shlb
mov
pop
fwait
stc
or
pop
pusha
pop
fistps
notb
es
sbb
fdivrl
popf
lcall
jns
jle
cmp
or
and
addr16
aas
add
xlat
js
or
push
sarb
bound
mov
imulb
mov
hlt
inc
aas
adc
movsl
sbb
cmc
cmp
sbb
scas
in
push
mov
loopne
xchg
lret
and
cmp
roll
test
hlt
imul
jmp
sub
enter
gs
test
cmp
rorl
addr16
shl
inc
cmp
mov
jmp
lret
ret
or
push
xor
mov
add
clc
jmp
and
add
shll
scas
out
fcoml
add
add
cvtps2pi
mov
lret
push
push
in
stos
xor
cli
jecxz
pushf
out
and
dec
lahf
lcall
dec
xlat
push
push
lahf
push
push
sub
je
xor
jmp
scas
inc
jne
cltd
inc
sbb
imul
iret
push
and
mov
fwait
out
jecxz
dec
inc
sbb
adc
cltd
mov
xchg
jns
mov
inc
sbb
in
pop
adc
arpl
mov
dec
aaa
jmp
pushf
fadds
jb
pop
sbb
mov
out
imul
call
xchg
iret
mov
scas
mov
xor
jl
std
lds
cmp
cmpsl
or
push
xchg
bound
mov
xchg
es
mov
xor
pop
jl
xor
jge
movsb
mov
rol
fcomps
cmp
add
negl
push
push
mov
xchg
fistps
add
and
push
lret
iret
or
sub
mov
sub
fildl
sti
xchg
repnz
movntq
out
xchg
add
jns
sub
cmpl
xor
inc
and
out
stos
je
insb
out
dec
nop
mov
mov
sbb
mov
les
xor
fsin
xchg
xor
fstpt
hlt
xorps
rclb
idivb
jp
inc
popf
mov
int
jge
xchg
mov
lea
or
sbb
test
pop
pop
inc
lds
pusha
add
aad
xor
fisttpll
adc
add
aaa
xchg
aam
int3
cli
loopne
movsb
bound
mov
out
add
push
push
cmc
push
popa
loop
mov
iret
dec
jne
or
sub
sub
std
rclb
jp
xchg
lea
in
insb
inc
inc
js
mov
adc
push
mov
mov
mov
mov
int
add
or
pusha
dec
xchg
inc
jl
push
aaa
cmc
mov
in
movsl
sub
jb
ror
in
add
xlat
fucomip
outsl
sahf
jle
lret
mov
bound
pop
add
jp
and
push
aad
mov
jl
inc
das
and
mov
and
cmp
andb
mov
cmp
int
and
int
push
jbe
loop
add
popf
jecxz
adcl
dec
jne
mov
outsb
and
sarb
pop
adc
aam
nop
into
call
lods
jbe
shrl
leave
js
out
mov
in
mov
xchg
push
js
aam
dec
shlb
fisttps
xchg
push
sub
jo
inc
pop
fcomip
mov
lds
sar
jno
out
xchg
and
loop
fldl2e
push
jae
faddp
pop
jae
inc
mull
or
xor
mov
push
repnz
scas
xadd
arpl
mov
inc
outsl
xchg
loope
sub
pusha
mov
out
shl
lahf
pop
in
in
pop
cwtl
xchg
dec
and
xchg
stos
lret
jg
je
mov
add
xchg
xchg
aad
int3
mov
push
sbb
mov
xchg
or
and
push
setns
sbb
outsl
mov
pop
xor
mov
imul
cmp
lret
adc
and
popa
mov
cmpsb
lcall
pusha
inc
sbb
test
fmull
loop
mov
mov
mov
xchg
lcall
addr16
dec
pop
popa
mov
lret
test
and
push
aas
and
pop
push
lret
cmp
fists
push
sahf
mov
xor
dec
clc
pavgb
lret
mov
jecxz
or
sbb
lods
and
std
out
lret
stos
inc
hlt
ret
cli
mov
xchg
dec
mov
scas
push
dec
xbegin
inc
aas
jg
and
ret
lcall
gs
gs
jnp
addr16
pop
mov
jge
leave
testb
mov
jnp
addb
int
inc
in
jbe
bound
dec
arpl
jnp
sub
adc
add
out
loop
or
stos
mov
js
daa
adc
jo
mov
cmp
cmpsb
loopne
push
sub
pop
addr16
inc
push
cwtl
test
flds
xchg
sub
es
adc
fwait
clc
lds
loopne
loop
rcrb
mov
sbb
cli
mov
adc
sub
sti
mov
and
add
mov
cli
outsl
mov
icebp
orl
in
add
jb
sar
sbb
scas
xchg
gs
pop
xchg
and
push
out
ret
stos
pop
orl
repz
mov
or
call
out
mov
das
xchg
add
xor
mov
inc
lcall
lock
out
xlat
orb
push
and
xor
out
inc
xchg
jmp
pushf
and
jno
rolb
das
pop
int3
or
mov
cwtl
push
jae
aam
mov
sbb
jmp
push
inc
cmc
jge
and
mov
pop
arpl
in
rcr
cmpsl
jnp
sub
stc
notb
popf
mov
mov
test
or
jo
adc
insb
aad
mov
push
fst
fcmovnbe
pop
jne
sahf
mov
mov
inc
mov
gs
push
js
push
fsubrp
hlt
jb
cmpsb
mov
ret
inc
je
hlt
mov
or
pop
pop
adc
in
jl
stc
sub
imul
mov
sbbb
lds
push
sub
mov
jno
loop
and
xor
mov
pusha
test
addr16
push
pop
fs
insl
add
jle
shrb
pop
lret
faddp
inc
sbb
push
sub
jns
mov
cli
push
lds
repz
in
outsb
and
testl
lcall
cmp
mov
mov
add
mov
mov
aad
sbb
sarl
cwtl
int3
dec
repz
fwait
add
xchg
jle
ds
or
loopne
in
daa
lds
jb
pushf
xchg
pop
jl
pop
mov
xchg
jne
pushf
jg
fcoms
test
out
aaa
add
daa
scas
fsubl
and
add
mov
mov
pusha
push
sub
imul
lods
out
push
push
aam
cmpsl
push
in
int3
mov
ret
or
jge
jne
or
xchg
sysenter
loop
pop
insl
ljmp
jle
or
adc
xlat
arpl
int
add
adc
js
shlb
mov
in
addl
outsb
pop
add
dec
jmp
pop
dec
xor
imul
sbb
fistpl
mov
jne
test
jno
mov
fistps
mov
lock
xor
mov
pop
clc
aas
andl
xchg
fmulp
xchg
ret
xchg
and
bound
mov
xchg
cmp
arpl
movsl
mov
jnp,pn
mov
test
lods
mov
push
orb
test
out
int3
push
xor
popf
je
mov
cs
mov
inc
imul
aaa
in
test
bound
mov
jg
sbb
jl
decl
mov
fwait
inc
stos
sub
ja
inc
mov
fisubs
mov
dec
repz
outsb
dec
cmp
cmp
in
divb
adc
cmpsb
xor
cmc
cmp
std
fisubl
lods
sti
call
mov
test
cltd
dec
addr16
popa
pop
shrb
jno
ss
sbb
movsl
ror
or
xor
in
fwait
int3
out
mov
mov
loope
mov
shll
fisttpll
jnp
pop
adc
dec
xor
adc
ffree
cld
cmpsb
lods
adc
pop
int3
addr16
cmp
outsb
cmp
lret
pusha
cmpsb
pop
repz
dec
cmp
jmp
lret
mov
dec
pop
mov
gs
fwait
add
mov
sub
repz
adc
rcl
int
and
dec
push
popl
mov
push
and
sbb
mov
jmp
fbld
dec
jg
outsl
inc
out
mov
jo
xchg
popf
push
pop
jmp
inc
jl
mov
in
dec
pushf
stos
js
in
mov
fldenv
pop
adcl
rcll
clc
mull
inc
sub
push
adc
mov
cmp
and
add
repnz
mov
dec
aaa
xor
dec
addr16
mov
xor
shlb
inc
dec
mov
fwait
mov
sti
xchg
mov
out
jne
add
lods
movsb
clc
pop
jbe
lcall
push
mov
cld
lahf
nop
mov
daa
aad
and
push
inc
inc
cmp
push
and
stos
aaa
dec
loope
aad
push
and
repz
out
inc
mov
inc
leave
fisttps
test
loope
mov
jae
dec
push
out
pop
mov
sbb
push
ja
int
adc
fiadds
divl
adc
sub
sbb
mov
or
scas
rcll
sub
fs
fidivl
adc
and
mov
outsb
adc
mov
ret
std
dec
enter
clc
jns
mov
in
stc
push
ret
ret
jbe
push
inc
cwtl
rorl
mov
push
inc
js
pop
push
cmpsb
inc
test
ds
push
sub
ret
repz
daa
sbb
out
sbb
test
xchg
rcpps
push
mov
out
movsl
scas
mov
adc
in
xchg
imul
and
sbb
cltd
cli
jno
adc
inc
cmp
bound
ja
pop
movsl
mov
mov
jl
mov
dec
test
xlat
fwait
daa
fsub
mov
mov
sbb
mov
out
daa
adc
jne
andb
test
jnp
pop
adc
sarb
lods
xchg
or
pop
mov
xchg
insb
dec
lods
add
in
nop
mov
repnz
lret
scas
inc
and
jo
push
cmp
jno
and
shrb
stc
jg
outsb
into
pop
add
aaa
and
xor
loope
mov
es
xor
rcrb
xor
call
cmpsl
add
mov
xchg
mov
mov
push
loopne
pop
cmpsl
out
xchg
pop
xchg
sarb
xchg
jle
and
mov
cmpl
bswap
sti
in
scas
gs
xor
inc
lods
add
cmp
aam
fwait
ret
dec
jmp
adc
jl
outsl
mov
sbb
sub
sub
pop
cmpsl
inc
xchg
push
jno
push
sub
xchg
fstps
imul
pop
sbb
rcll
inc
les
clc
imul
fldenv
ds
xor
mov
mov
repz
jle
adc
sbb
cli
ret
cld
inc
jae
pop
add
mov
repz
xor
testl
ja
jmp
lcall
mov
jns
push
inc
testb
xor
sub
movsl
ss
sub
inc
push
adc
inc
and
cmp
mov
pusha
and
outsl
ss
jmp
call
cmp
jg
add
xor
cmpsl
jle
pop
mov
int
adc
lret
fs
push
xchg
jl
es
mov
pop
les
pop
push
push
xor
xchg
push
mov
adc
stc
xor
in
cmp
lcall
mov
pushf
inc
sbb
adc
jno
fisubrs
inc
adc
leave
shlb
aad
ja
cmp
mov
and
sub
and
inc
cwtl
pop
mov
xchg
push
cli
dec
dec
mov
mov
es
test
repz
sbb
mov
xlat
push
enter
mov
js
jge
push
mov
popf
cmpsb
out
mov
xchg
inc
xlat
pop
sahf
subl
adc
loopne
in
mov
cmpsb
cmp
cmpsl
outsb
cld
in
adcb
lahf
lahf
pop
cmpsb
int3
test
test
stos
iret
or
sub
movsb
dec
cmp
mov
mov
sub
push
xor
jmp
jno
popa
outsl
je
cmp
sub
sub
or
std
sub
out
xchg
lods
mov
test
stos
shlb
in
xor
mov
pop
jae
lret
xchg
iret
or
xor
add
jbe
movsl
movsl
xor
mov
push
fsubrs
pop
cld
fcomip
leave
sbb
andb
add
mov
loope
dec
sub
aam
sbb
jbe
fsubr
scas
pop
insb
xchg
andl
lock
lods
mov
ds
push
dec
jp
pop
addb
adc
xchg
jp
fwait
outsl
push
outsb
es
mov
test
cmc
stc
in
sahf
mov
mov
roll
lcall
pop
jmp
bound
movl
popa
popf
scas
mov
inc
mov
pop
xor
imulb
add
int3
repnz
into
imull
pop
xor
pop
mov
add
add
mov
sub
mov
xor
lock
and
xor
dec
mov
push
dec
mov
ja
movsl
das
mov
cmp
call
jg
xlat
sbb
outsb
movsl
sbb
pop
rcll
stos
jmp
out
lret
adcb
adc
pop
mov
fs
dec
or
popa
dec
push
out
pop
sbb
push
enter
call
adc
mov
mov
push
rorl
push
shr
xor
mov
sbb
jle
fnsave
mov
adc
sub
jo
mov
or
ljmp
pusha
cmpsl
push
rol
adc
insl
push
bound
fcmovnbe
ds
andb
ljmp
lds
call
jne
lcall
cmp
adc
dec
sbb
test
icebp
sbb
fcmovbe
add
test
inc
out
mov
aam
dec
inc
add
jmp
repz
xchg
mov
nop
addb
mov
pop
fcomps
in
shll
and
xchg
or
push
test
sbb
jge
xchg
es
push
mov
out
cmp
jb
xchg
pop
out
jno
inc
inc
notl
xchg
fwait
push
test
xchg
mov
mov
adc
out
gs
dec
push
lds
popa
mov
pop
arpl
xor
dec
add
add
inc
adc
ret
mov
call
in
push
mov
push
pop
xchg
lock
adcl
jmp
add
push
adc
movaps
addr16
or
fsubr
test
xor
out
jo
fdivs
cli
int3
inc
and
movsb
sbb
into
jle
scas
push
daa
rcrl
or
in
adc
and
int
push
je
adc
and
in
jle
int
fsubl
ret
inc
repz
ja
subb
pop
xchg
popf
lea
bound
hlt
scas
fnstcw
inc
mov
mov
push
jmp
mov
iret
imul
shrb
inc
add
pop
orb
aaa
clc
cld
xchg
adc
scas
inc
mov
aam
push
pop
lret
fwait
sbb
or
or
sahf
jbe
lods
dec
pop
lods
rcrb
hlt
mov
mul
daa
adc
subl
test
adc
push
push
xor
sub
cmp
xor
out
loop
lods
sti
sbb
out
adc
add
xchg
push
mov
sub
jb
jno
insb
insb
aaa
xor
testb
and
inc
ret
lock
std
popa
or
lods
push
and
in
andb
push
push
dec
ss
xchg
push
sarb
cmpl
repz
jns
xchg
ror
or
mov
hlt
or
shll
xchg
mov
dec
addr16
adc
jmp
lds
les
arpl
and
rolb
jecxz
ss
or
add
ffreep
cmp
xchg
pushf
lock
or
ret
or
ljmp
sub
out
or
in
fs
aas
xlat
and
add
inc
inc
jmp
xor
and
orb
cs
pop
loopne
js
ss
or
es
cmp
into
sahf
fisubs
mov
cwtl
cmp
fsubr
jb
repnz
sbbl
jnp
push
rorb
dec
pop
mov
xchg
lea
int3
stos
ljmp
mov
xlat
je,pt
ffreep
out
pop
test
cmp
mov
xor
movl
icebp
push
dec
inc
mov
xor
xchg
nop
lock
cmp
xchg
xchg
dec
ret
pop
mov
jnp
fdivrs
enter
jecxz
mov
dec
mov
mov
outsb
aas
mov
fwait
inc
pop
sub
loopne
aaa
adc
addr16
mov
outsb
push
xchg
mov
dec
roll
xchg
movsl
call
mov
aas
iret
inc
jl
sbb
aas
pop
rol
sbb
out
xchg
sub
dec
jo
mov
cmovb
mov
mov
jbe
int3
out
aas
hlt
fwait
or
jbe
inc
sbb
add
jnp
mulb
mov
jg
jae
cmpb
mov
xor
xchg
out
adc
sahf
and
ffree
daa
rorb
cld
punpckhbw
xor
inc
adc
aaa
push
pop
mov
out
les
cmp
das
aad
add
and
sub
pop
out
push
das
gs
hlt
insl
lret
cmp
sbb
push
sbb
cmc
fwait
push
fdivl
pop
pop
popf
daa
notl
pop
mov
std
adc
or
in
popa
pop
aad
cmp
bound
push
mov
pushf
outsl
push
sbb
sbb
mov
jne,pt
mov
dec
repnz
lret
cmc
push
jmp
enter
mov
pop
inc
inc
inc
xchg
xchg
shlb
xchg
insl
add
insl
mov
push
test
xchg
imul
mov
test
das
mov
loopne
mov
test
mov
stc
pop
in
rcrl
pop
adc
jne
test
or
mov
inc
cwtl
pop
ret
pop
adc
xlat
icebp
ret
loope
cmp
inc
sbb
loopne
dec
or
mov
iret
dec
loope
mov
movsb
movsb
pop
sub
sti
jnp
inc
inc
jg
adc
stos
mov
imul
mov
jge
sbb
sub
cmp
push
jl
inc
xchg
push
icebp
mov
pop
ficoml
cli
xchg
xchg
adc
bound
push
lahf
stos
loopne
inc
orb
pop
jnp
sbb
daa
rorb
pop
jno
stc
cwtl
rolb
mull
hlt
lret
push
jmp
sti
fwait
xchg
xchg
or
test
xrelease
ret
push
xchg
xchg
ret
sti
insb
cld
xor
push
jne
cld
lahf
in
shll
movsb
addb
inc
decl
rolb
dec
add
in
dec
push
ljmp
or
rcll
or
xchg
xlat
in
repz
leave
daa
scas
push
mov
lahf
fldl2e
mov
push
mov
out
outsb
jae
xor
sahf
jae
inc
ret
push
lcall
jbe
add
mov
pop
fisttpl
repnz
adcb
mov
push
loopne
popa
jbe
mov
and
into
dec
jmp
cltd
xor
jmp
mov
jae
cmp
fs
mov
or
dec
cmpsl
push
data16
mov
add
add
pop
je
sar
and
scas
leave
xchg
add
outsb
pop
add
and
inc
sub
mov
sub
fldt
ret
and
aaa
jle
xor
cmc
aaa
cmovb
into
xchg
ret
xor
jg
jo
loopne
js
repz
xchg
jecxz
pop
lahf
repnz
adc
popa
sub
pop
xchg
xor
inc
mov
mov
xchg
idivb
clc
and
sub
out
jns
mov
int
sbb
das
jecxz
outsl
repz
xor
es
sbb
mov
dec
push
fstpl
dec
pusha
sbb
inc
stc
add
std
cld
adc
inc
aas
inc
and
pop
shl
lods
and
dec
pop
sbb
jo
push
cmp
push
fsub
mov
mov
sub
out
mov
dec
addb
in
sub
ds
pop
cmc
cltd
or
rorb
idiv
icebp
daa
push
or
jne
adc
push
mov
rcrb
pop
sub
pushf
std
push
fstp
sub
pop
hlt
test
jmp
rcr
mov
pop
xor
psllw
xchg
add
cli
es
push
aas
stos
cmc
push
sbbl
lods
ficoms
lea
and
shlb
cmp
pop
in
lods
iret
xor
add
push
cmp
push
push
lods
push
and
lret
fcmovb
adc
pop
xor
mov
cmc
repz
inc
xchg
xor
or
aaa
ss
jge
push
mul
adc
not
sti
arpl
cmp
cmp
push
push
fwait
sbb
jge
add
shl
dec
lret
insb
loope
and
or
push
jnp
or
or
jnp
mov
dec
sahf
cmp
mov
std
stos
cmp
fisttpl
jge
cmp
add
loop
inc
sub
shll
hlt
jmp
mov
ficomps
cli
adc
testb
xchg
outsb
mull
push
sbb
jmp
das
adc
fidivs
xchg
orl
pop
sbb
xor
aam
push
jg
sti
mov
and
push
nop
add
movsl
adc
shrl
push
nop
push
and
shll
movsl
pmaxsw
stos
or
xor
xchg
dec
sub
push
inc
lock
jae
adc
aad
fs
adc
sbb
push
mov
xchg
pop
sahf
rclb
call
dec
pop
jne
xor
in
incl
push
sbb
sub
push
dec
aam
and
xor
lods
pop
push
movsb
inc
adc
dec
outsb
mov
inc
lea
add
aas
arpl
and
fs
icebp
cmpsb
std
setg
xor
sti
push
stos
gs
and
in
xor
inc
xor
cld
aas
dec
inc
fiadds
or
xor
dec
sbb
imul
test
or
popa
mov
and
stos
fld
cmp
adc
mov
xchg
aaa
sbb
pop
fdivrl
jmp
ljmp
cmp
shlb
sub
sbbl
pop
mov
int3
or
add
cmpsb
pop
xchg
mov
in
filds
mov
lcall
xlat
cmp
mov
dec
out
out
pusha
insb
mov
and
aas
add
xchg
hlt
push
out
call
xor
ret
call
sub
push
imul
inc
into
ja
scas
cli
sbb
lcall
loope
xor
dec
call
xchg
test
jmp
lret
outsl
push
xor
jecxz
repnz
fbstp
add
sub
or
je
mov
and
in
scas
dec
push
rclb
cltd
adc
cmp
mov
in
insb
mov
adc
outsl
repnz
xchg
fadd
stc
jmp
push
mov
lea
mov
cld
lret
cmp
aam
das
inc
out
and
pop
insl
mov
or
xor
xor
loopne
jp
inc
xor
cmovp
cmp
dec
dec
andl
pop
int3
mov
pop
inc
test
lea
outsb
roll
or
fwait
jmp
outsl
sti
cmp
sbb
sbb
jnp
and
ds
outsl
jno
js
mov
call
mov
pop
je
push
adc
stos
sub
es
into
sub
outsl
jno
xchg
mov
push
mov
add
mov
add
and
sbb
shrl
xor
imul
xor
insl
mov
cmc
fcoml
stc
into
sahf
ss
pushf
jmp
ror
flds
add
xchg
and
es
and
shlb
sub
enter
je,pt
into
cmp
jecxz
jp
lahf
stc
cmp
xchg
xor
jno
js
adc
xorb
iret
or
mov
cmp
fwait
push
into
ret
pop
xchg
mov
es
lock
ret
bound
pop
add
xor
adc
jb
mov
fs
mov
ds
cmp
dec
mov
rcr
mov
in
mov
andb
inc
dec
test
loope
mov
jmp
stos
popa
int
lcall
mov
mov
sbb
add
add
dec
xor
xchg
insl
cwtl
lods
fsubs
fs
pop
pushf
sub
sahf
sti
push
rcrb
push
adc
fbstp
das
ljmp
nop
adcb
xor
jae
adc
jo
mov
mov
in
mov
dec
or
lds
adc
push
mov
call
data16
jg
enter
daa
fs
or
push
cmp
mov
jo
sub
pop
xor
fistl
stos
xchg
or
sbb
ds
cmp
pop
adc
push
jae
jnp
mov
sub
mov
rcrb
xchg
sub
xchg
lret
push
pop
adc
in
push
or
inc
adcb
pusha
or
imul
fstl
das
mov
outsl
sub
scas
mov
std
push
lock
and
arpl
mov
lock
outsb
movsb
outsl
mov
xchg
cmp
shl
arpl
inc
pop
in
out
pop
cmp
dec
mov
inc
subb
bound
xor
int
jge
outsb
call
inc
ror
adc
int
or
test
mov
call
push
rclb
shll
inc
xor
or
cmp
mov
or
cli
cmpsl
pop
mov
test
xchg
inc
scas
jecxz
jmp
jne
pop
ljmp
lcall
cmp
push
pusha
push
mov
add
fadds
push
pop
cld
and
xchg
in
mov
pop
add
inc
xchg
xchg
xchg
mov
ret
sarb
mov
xchg
add
xchg
pusha
pop
test
jb
push
jge
pop
xchg
or
mov
es
int3
mov
add
mov
addr16
lods
fnstcw
in
mov
add
push
sub
out
pop
mov
add
int
pop
test
jb
adc
into
pushf
dec
mov
pop
cmp
sahf
rcrb
pop
sub
ret
loope
push
xchg
push
xor
inc
rcrl
and
testb
mov
xlat
xor
mov
mov
mov
fdiv
add
or
jnp
jns
aam
and
jle
les
cmp
pop
jmp
outsb
inc
jecxz
scas
jnp
mov
sarb
test
push
cmp
or
test
mov
jmp
roll
pop
test
mov
fwait
adc
outsb
mov
fsubrl
int3
xor
push
or
or
push
push
orl
mov
push
sbb
fs
imul
adcb
add
repnz
sbb
xchg
fldl
dec
lret
push
jnp
fadds
rclb
jg
mov
aaa
cmp
std
in
sbb
jmp
lods
cld
mov
punpckldq
dec
xchg
ss
push
mov
add
dec
loope
repz
or
mov
out
mov
mov
adc
and
fistpl
fstpl
ja
aam
jne
cmc
and
adc
mov
mov
jmp
fists
sub
push
xor
and
dec
ret
mov
imul
push
imul
sub
pop
push
aam
cltd
repz
test
loope
jle
mov
rorl
sub
fwait
cli
ficomps
into
mov
loopne
jl
mov
mov
sbb
dec
xorl
and
sub
cmp
outsb
cmp
sbb
cmpsb
loope
adcb
xor
and
xchg
inc
lret
jg
jecxz
sub
lock
jae
sbb
adc
push
ds
ror
sub
jnp
popa
ffreep
scas
sub
ret
and
lret
sbb
test
in
cwtl
and
das
dec
xor
fwait
int3
jbe
adcb
lock
push
push
neg
xchg
aad
test
xchg
mov
mov
mov
xchg
sahf
push
adcb
xor
sbb
adc
imul
test
push
ficoml
jo
sbb
and
inc
fisubl
add
dec
fistps
jne
adc
repnz
xor
scas
adc
push
stos
xchg
dec
mov
pop
sub
scas
js
xlat
mov
or
inc
and
fs
call
test
test
mov
inc
lods
test
ret
and
insl
int
ror
push
imul
jle
adc
jp
mov
lock
xchg
mov
les
add
popf
lods
and
dec
push
fs
adc
fnstcw
mov
cld
and
xchg
sahf
mov
jg
push
lods
push
lret
iret
imul
stos
jmp
arpl
movsb
jnp
mov
fwait
data16
iret
mov
cmpsb
hlt
stc
adc
dec
push
daa
push
ja
fnsave
outsb
mov
mov
sub
mov
movb
aas
adc
pop
mov
loopne
mov
scas
lret
adc
mov
add
or
in
jae
test
cmpl
pushf
stos
rcrb
mov
xor
cmpsb
in
pusha
adc
and
ds
dec
mov
mov
lods
xchg
dec
mov
cmpsb
in
jne
cmpsb
lcall
out
mov
mov
insl
mov
sbb
arpl
mov
call
and
jl
lock
loop
jnp
push
or
sbb
pushf
or
xor
jo
xor
sbb
xchg
rorl
movsb
out
fidivs
mov
xchg
scas
add
and
pushf
xchg
in
je
push
dec
mov
out
xchg
push
sbb
pusha
imul
ja
pop
inc
ds
xchg
pusha
lret
ss
insl
imul
lret
mov
or
push
insl
jbe
daa
or
cltd
pop
and
leave
or
mov
dec
gs
mov
nop
leave
clc
mov
fdivrs
add
jp
push
rorb
mull
and
test
add
xchg
loopne
scas
mov
dec
fsubl
imul
lods
rcll
xchg
xchg
cmp
out
dec
ret
mov
loopne
push
mov
jbe
xchg
out
mov
fwait
jmp
dec
push
flds
sub
stc
subb
sub
xchg
push
pop
iret
ss
xchg
xchg
inc
sbb
sbbl
mov
sahf
pop
xchg
dec
fimuls
fsubrs
mov
in
mov
jbe
cld
leave
xchg
lds
and
repnz
repz
icebp
idivl
push
dec
mov
cmp
subb
push
ljmp
or
jl
lahf
hlt
outsl
cmp
js
into
popa
andb
inc
lret
inc
fidivl
sbb
loope
lahf
sub
clc
jecxz
pop
jne
push
orl
xor
sub
in
lcall
in
mov
cmp
dec
or
cmpsl
hlt
push
in
jmp
fwait
dec
sub
inc
dec
mov
or
and
jbe
aad
std
xor
and
mov
dec
jecxz
cltd
dec
mov
xchg
jg
out
pop
mov
xor
aam
rcl
lahf
pop
pop
test
mov
mov
out
outsl
pop
sarb
stos
push
out
les
add
dec
pusha
imul
or
cmp
xor
jg
push
and
mov
adc
in
jecxz
dec
in
pusha
cmp
stc
fildll
iret
inc
in
lcall
enter
icebp
push
push
dec
mov
ds
xchg
fstps
mov
out
cmp
dec
adc
xor
sarb
mov
insl
adc
xlat
enter
enter
leave
xchg
adc
xorl
add
hlt
test
js
std
in
mov
ds
je
or
outsb
pop
add
cwtl
xor
or
mov
pop
sti
mov
mov
ljmp
push
outsl
es
cmp
cmp
scas
cmpsb
fnstenv
jbe
push
push
mov
xor
out
pop
das
loopne
mov
lea
push
fnstsw
stc
mov
ret
xlat
in
adc
add
xor
call
stos
mov
mov
jg
add
lea
add
or
push
cmp
xchg
sahf
pusha
add
pop
pop
mov
mov
xchg
jno
mov
xor
and
lds
dec
rclb
push
mov
pushf
idivl
fwait
pusha
push
mov
insl
mov
lret
stos
fs
add
hlt
cmpsb
jl
out
inc
arpl
rcrb
cmc
pusha
jae
into
cmc
outsb
cld
and
mov
dec
daa
ja
mov
pushf
adcl
xor
mov
ror
xorb
push
adc
xlat
adc
stos
imulb
rorb
aam
fdivs
cmp
popf
mov
mov
jne
in
mov
push
aam
mul
bound
shll
lds
int
fdivrs
insl
jmp
movsl
fmull
fildll
inc
push
cmp
dec
jmp
test
mov
pop
popa
jne,pt
insl
bound
or
sbb
out
push
fsubl
aam
fadds
ss
xchg
aam
dec
mov
sub
adc
in
jl
in
movsl
stc
in
ficoml
inc
dec
cmc
jae
lods
xchg
loopne
mov
lods
sub
das
mov
or
mov
mov
fisubs
hlt
mov
ret
mov
fisttpl
fidivrl
add
push
mov
jae
loope
fxch
cs
adc
mov
mov
mov
inc
fdivl
and
sbb
in
and
pop
test
iret
push
push
mov
jmp
in
loop
rep
clc
out
sbb
xchg
jge
mov
mov
jle
xor
rolb
mov
std
pop
loope
into
mov
xor
dec
ret
xchg
mov
push
test
movsb
jl
inc
mov
pop
jge
arpl
cmp
adc
mov
lahf
loopne
aam
cmp
xor
sbb
sbb
in
xchg
xor
inc
pop
jl
inc
sub
lods
inc
fwait
pop
push
xchg
inc
mov
cmp
lret
dec
popf
fsubl
in
stos
out
movsl
cmp
loopne
and
cmp
mul
outsl
push
dec
testl
and
mov
iret
mov
scas
nop
popf
shlb
xchg
cmpsb
sbb
leave
ja
push
xchg
cmp
cmp
mov
inc
sbb
shr
lods
outsb
out
cmp
push
jl
pop
fadds
adc
jg
push
sub
dec
lcall
lods
add
jge
xor
push
les
mov
dec
adc
loope
mov
jnp
stos
push
xchg
adc
jae
add
mov
mov
adcb
in
cmp
mov
xchg
rorl
xchg
xchg
les
jle
fwait
cmpsb
ret
ret
xchg
clc
sub
cmp
fs
lods
or
rclb
push
mov
mov
sub
mov
mov
addb
shl
subb
mov
mov
dec
dec
mov
mov
xchg
lcall
mov
loopne
inc
inc
int
lea
rclb
or
loopne
push
fwait
jbe
outsb
sbb
mov
cmpsl
mov
repz
idivb
lea
repnz
jmp
das
dec
or
mov
aad
movsb
sahf
lods
jle
cmp
sub
das
das
jnp
setbe
jecxz
outsb
gs
inc
jns
test
or
ljmp
lahf
cwtl
sub
dec
orb
xchg
mov
das
jecxz
pop
mov
cmp
loop
inc
cmp
sub
addr16
fstps
jg
scas
xor
inc
dec
int3
ret
or
mov
sahf
movsb
xchg
xor
in
cmp
out
bound
push
mov
dec
hlt
dec
push
call
ficomps
mov
mov
or
loop
sbb
fsts
push
cmpsl
ret
inc
mov
xor
xchg
jmp
sarb
or
dec
sub
ret
mov
mov
jecxz
mov
sbb
mov
pop
repz
fcmovnbe
xchg
outsl
pop
dec
not
add
out
inc
mov
sbb
push
sub
sbb
ss
orl
aad
xchg
lret
fimull
into
in
jo
xchg
mov
and
leave
and
push
pop
sub
test
addr16
les
stc
and
pop
jne
int3
pop
std
lcall
test
inc
mov
bound
mov
xchg
push
add
out
roll
xchg
cmp
pop
jo
pop
jns
sti
data16
and
pop
in
mov
cwtl
shll
adc
jg
hlt
add
bnd
inc
mov
imul
mov
sub
inc
test
fdivrs
dec
xlat
enter
rorb
and
push
cmpsb
push
mov
and
lret
jp
mov
pop
adcl
popa
inc
jl
and
mov
jb
or
jb
ret
test
mov
repz
pop
add
iret
mov
outsl
sbb
ja
xor
or
outsb
jns
inc
mov
fcompl
sahf
xor
pushf
sbb
cmp
nop
in
int
sti
test
into
fsubl
and
testb
push
sbb
cwtl
jne
cltd
sbb
cmp
mov
lds
outsl
sbb
popf
inc
mov
mov
xor
dec
and
sub
popf
cmpsl
inc
mov
fucom
sbb
mov
test
popa
sub
push
clc
sbb
dec
xchg
jne
lret
add
jle,pt
pop
das
mov
fidivrl
frstor
xchg
ficompl
std
lock
out
les
rcrl
xchg
aad
aas
and
sub
mov
ret
ljmp
jb
pop
xor
shll
sbb
ja
jg
imull
cwtl
gs
in
es
dec
inc
pop
aaa
ljmp
mov
adc
in
sarl
pop
mov
into
addr16
in
push
popa
enter
cwtl
jb
decb
push
push
sub
lahf
push
popf
jno
push
mov
repnz
and
std
cmp
sbb
lods
fsin
push
leave
mov
divb
xchg
insb
jle
in
sub
mov
mov
roll
fdivl
mov
mov
xchg
iret
mov
subl
adc
add
das
xlat
loope
pop
add
sbb
push
daa
inc
sbb
pop
mull
mov
fsubrl
jecxz
int3
mov
inc
lahf
ret
or
xor
mov
push
int
pop
push
cwtl
adc
add
jne
cmp
add
sub
xchg
mov
adc
aam
int
scas
sar
mov
push
imul
sbb
jbe
out
out
aad
mov
inc
popa
lret
pop
dec
mov
ds
stc
add
fisttps
cld
and
mov
sub
or
inc
pop
sbb
inc
fcompl
mov
add
pop
or
lret
sub
add
into
mov
lds
and
or
push
jo
fcmovnbe
dec
sub
inc
xchg
cwtl
insb
pop
push
mov
pop
repnz
mov
and
xchg
and
xlat
cmp
imul
xor
dec
mov
jmp
loop
mov
lods
cli
mov
mov
add
arpl
ficomps
sub
sbb
fidivl
popf
add
mov
arpl
and
inc
sub
sub
mov
dec
dec
jbe
cmp
enter
das
xor
xchg
ljmp
mov
ja
out
pop
out
jmp
negl
pop
mov
ja
int
aas
mov
mov
cld
ficomps
in
daa
popa
ljmp
inc
sbb
aaa
test
jmp
call
hlt
sahf
cwtl
sub
jle
pop
cmp
add
ljmp
lods
and
ljmp
jge
loope
divb
in
in
into
out
pop
and
push
mov
std
andb
int3
pop
es
pushf
insl
and
sbb
jno
add
stc
push
cli
andb
mov
daa
mov
aam
cmp
ret
mov
ljmp
xor
lret
popa
lds
roll
or
sub
bound
stc
mov
xchg
mov
lcall
xor
sbb
adc
clc
adc
cmc
push
cmp
cmp
mov
ja
lret
out
fmulp
shrb
xor
adc
ja
aaa
loope
stos
decl
sahf
andw
mov
cltd
scas
orb
mov
xlat
stos
andl
sbbb
pop
xor
nop
in
aaa
sbb
lock
xrelease
fstpl
sar
adc
je
push
xchg
leave
or
rcll
sbb
push
jg
mov
pop
imul
sbb
mov
mov
aaa
pop
mov
lret
fs
aaa
int
adcl
xchg
test
imul
cmpl
lea
sub
test
rorb
pop
fmul
ss
je
xchg
insl
outsl
ljmp
mov
out
pop
xlat
aas
cmpsb
shl
cmp
sub
cwtl
push
adc
pop
add
adc
shl
ficompl
jno
cmc
add
testl
cltd
mov
aam
negl
jmp
in
lret
mov
mov
nop
inc
sbb
push
inc
popf
inc
pushf
fisttpl
ja
bound
cmpsb
mov
je
out
jg
cmp
js
mov
test
into
cmp
sbb
xchg
push
pop
mull
lods
push
cmpsb
arpl
mov
push
lods
xor
or
hlt
push
bound
repz
lcall
aaa
xchg
push
push
lcall
jbe
mov
addr16
repnz
fidivl
arpl
fst
sbb
cltd
xor
pop
pop
jmp
cmp
gs
stc
lahf
leave
cmp
lds
inc
nop
testl
jmp
mov
xor
mov
divps
mov
mov
dec
ret
xchg
add
push
push
es
cmp
dec
or
adc
mov
es
dec
adc
loop
and
scas
rolb
jp
push
inc
mov
jp
loope
and
pop
movsb
or
incl
mov
or
popf
in
mov
xor
jae
push
fldenv
stos
loop
mov
sahf
adc
pusha
mov
inc
sti
shl
cmp
outsl
dec
sbb
mov
fcom
mov
hlt
push
push
push
jne
lcall
xchg
mov
into
adc
imul
or
jg
cs
lods
mov
icebp
fnsave
cmp
movsl
xchg
dec
int
mov
into
fmuls
mov
push
mov
mov
cmpsb
fisttps
pop
nop
repnz
push
inc
mov
xor
fwait
or
and
imul
sub
xchg
outsb
push
das
xor
mov
cmc
fnstcw
shll
jno
jl
roll
lcall
lds
aam
fcoml
dec
xchg
adcb
xor
cmp
cli
or
adc
add
lcall
sahf
add
dec
movsl
sbb
aad
mov
adc
mov
sbb
hlt
and
fcoms
jae
fmulp
xlat
inc
inc
sub
test
lcall
push
sub
call
loopne
push
int3
aas
call
es
sub
loop
jae
xor
cmpsb
xor
insb
lret
int3
push
mov
lods
rcr
xchg
jae
mov
or
xlat
or
insl
shl
pop
cmc
addl
nop
add
sbb
dec
in
iret
mov
adc
fsin
ja
ret
mov
adc
pop
dec
mulb
or
mov
cmp
cld
mov
pop
xlat
jo
ja
roll
cmp
js
xor
ja
repnz
sbb
cmpsl
imulb
mov
test
mov
push
jl
or
rcll
pop
cmp
mov
and
insl
sbb
xor
pop
jo
rcll
pop
lea
pop
push
fistpll
cmp
repnz
int
aam
stos
jns
cs
fs
jnp
cs
lds
leave
push
and
leave
dec
aaa
cld
insl
adc
test
cmp
in
cmp
sbb
push
cmpsb
jecxz
push
cli
push
or
or
adcb
sub
lahf
xchg
or
add
jne
jle
cmpsl
push
xchg
mov
inc
sub
xor
insb
push
and
add
imul
pop
sar
sbb
mov
add
add
lods
push
or
push
jmp
xchg
lahf
stos
push
lds
loopne
out
subl
cld
in
mov
sti
jno
inc
mov
jno
xchg
int3
and
push
sub
test
repnz
movsb
out
movsl
mov
sbb
inc
negb
dec
push
dec
testl
adc
cmc
xchg
orb
dec
rol
mov
sbb
jg
mov
mov
je
jne
xchg
and
mov
test
pop
pop
scas
repz
sub
test
push
cmpsb
loop
scas
addr16
adc
cld
push
scas
enter
or
in
imul
das
fldl
push
ficomps
negl
je
sbb
fidivrs
dec
movsl
and
add
push
push
mov
or
cmpl
mov
sti
shlb
jmp
dec
in
jle
mov
mov
jne,pt
and
push
or
mov
mov
aad
jae
or
jp
sub
aas
adc
pop
xor
addr16
add
cmp
mov
xor
or
sub
mov
dec
fiaddl
jle
xor
or
test
push
inc
popf
pop
shrb
adc
data16
sub
out
mov
clc
pop
pop
push
loopne
push
imul
add
xchg
aaa
rcll
imul
pop
imull
gs
xchg
or
mov
movsb
je
jp
add
mov
adc
mov
int3
jge
mov
in
int
shl
dec
sbb
gs
rcl
mov
insl
call
in
adc
and
pushf
push
sti
adc
mov
dec
mov
cmpsl
mov
lret
cmp
xchg
xor
movsl
mov
cmp
mov
out
ror
push
sahf
and
cli
and
nop
dec
sub
push
scas
push
cmp
push
outsb
lods
bound
jb
push
xor
mov
ficompl
push
jg
jmp
xchg
lret
daa
or
push
jno
pop
orb
xchg
icebp
fsubrs
stos
inc
mov
pop
or
xlat
lahf
add
hlt
jg
xchg
repnz
cmp
inc
movsl
outsl
xchg
sbb
and
fsubrs
fcoms
mov
imul
roll
add
mov
adc
mov
add
pop
aaa
mov
dec
call
add
fbld
seto
lcall
xor
repz
push
loop
mov
and
fcomps
sbb
mov
fsts
mov
jae,pn
or
mov
repnz
mov
out
imul
or
or
cli
rcl
cmpsl
xlat
mov
outsl
dec
ficoms
gs
fimuls
fmul
push
rcrl
imul
fidivl
in
and
fisubl
divl
push
mov
leave
mov
clc
out
shll
xchg
or
sbb
mov
lea
xchg
jmp
dec
jmp
push
or
ljmp
dec
fnsave
das
loope
leave
xchg
or
mov
popf
popf
mov
imul
sbb
cmp
mov
hlt
rclb
cltd
adc
pop
sub
in
mov
scas
push
add
xor
lret
mov
push
lods
add
mov
pushf
cmp
test
fsub
xchg
mov
movsl
and
mov
add
stos
mov
inc
adc
push
xchg
subl
cwtl
or
shl
mov
gs
xchg
movl
enter
push
stos
mov
imul
std
rorb
sub
and
cwtl
sti
jg
jl
scas
clc
sti
fistpll
dec
xor
jns
mov
mov
xor
push
out
repz
mov
in
lret
dec
pop
mov
sbb
icebp
jmp
movsl
lock
test
lahf
mov
push
rclb
jp
pop
into
fs
lods
lret
std
and
sub
test
nop
into
outsb
leave
xchg
fstpt
aaa
add
out
add
clc
or
mov
shll
movsb
pop
cwtl
add
imul
fists
pop
rcrl
lds
lods
inc
inc
lcall
loop
aaa
jmp
popa
test
pop
or
jmp
pop
filds
jns
mov
add
push
out
mov
inc
xchg
jo
lds
test
or
add
dec
pop
mov
hlt
sub
mov
and
call
jl
cmpsb
xchg
sub
mov
mov
mov
idivl
fistl
stos
mov
enter
fdivrs
inc
gs
popf
mov
gs
xor
fadds
cmpl
popf
iret
add
pop
dec
sub
adc
fisttpll
or
sti
mov
clc
popa
sub
dec
je
shrl
das
stos
xor
ret
test
xchg
jmp
das
aam
adc
in
xor
cmp
pop
fwait
je
jmp
outsl
leave
sahf
push
ja
stos
mov
jle
adc
in
bound
insl
mov
rcrl
or
add
in
incl
sbb
scas
adc
sub
nop
or
shr
shlb
jae
dec
sub
imul
and
mov
mov
push
pop
hlt
fistpl
nop
lock
repnz
and
mov
pop
or
mov
neg
and
fwait
cmp
iret
in
pop
xor
sub
jl
jle
repnz
cld
iret
test
rcll
clc
pop
pop
mov
push
clc
sub
mov
cld
test
pop
imul
paddusw
test
and
insl
mov
jecxz
pop
test
lds
and
pop
inc
inc
shld
sbb
arpl
ret
push
pop
sarl
and
sub
xor
jge
cmp
mov
pop
or
shrl
cmp
scas
dec
xchg
xor
pop
lock
mov
add
xchg
pushf
cmp
data16
cmpsb
xchg
xchg
rcl
ljmp
mov
or
ss
and
mov
rclb
jo
push
ljmp
pop
das
scas
push
ljmp
dec
sti
testb
mov
pusha
das
cld
cmpb
lds
or
sbb
inc
sbb
xchg
jl
xor
fcmove
sbb
sub
push
cmp
testl
std
inc
cmp
sbb
mov
faddl
add
mov
mov
sbb
mov
outsb
pop
add
or
xor
call
push
iret
inc
fisubrs
and
pop
cs
mov
mov
dec
mov
push
jo
mov
adc
mov
loope
dec
fs
in
sub
test
ds
pop
push
aas
sub
test
outsb
push
pop
hlt
nop
lea
xor
push
mov
aam
mov
and
xor
aam
outsb
inc
sbb
sbb
mov
sbb
add
dec
shl
js
and
repz
repnz
ret
adc
mov
fs
sahf
jmp
cmpsl
push
into
es
stos
inc
enter
test
add
movl
mov
in
out
mov
or
cmp
and
test
xor
test
in
mov
jle
adc
lods
and
mov
out
call
loopne
lret
test
sbb
push
jge
shlb
pop
std
sub
sbb
push
sbb
cmp
inc
cld
ror
pop
leave
test
adc
add
xor
and
sti
add
adc
hlt
es
inc
add
add
ds
pusha
popf
ds
push
lahf
push
jmp
mov
adc
mov
lahf
and
jmp
push
push
std
mov
ret
orb
sbb
push
clc
add
jo
out
dec
mov
cmpsl
mov
lret
std
mov
in
mov
jbe
mov
xorb
cmp
sub
jno
xchg
jg
mov
stos
lcall
out
bnd
push
negb
ss
cli
out
dec
adc
fcomip
jl
jle
sbb
mov
push
mov
fcmovbe
mov
xor
sub
arpl
lods
imul
lret
sub
cmpsl
jmp
jb
push
dec
mov
xchg
cs
add
arpl
cmpsl
rol
loopne
and
js
popa
sub
insl
rcll
aad
int
loopne
jle
fsubr
add
xchg
outsl
inc
xor
nop
jns
sub
dec
nop
cmp
ss
mov
jne
mov
add
shl
jl
fstpl
hlt
cltd
in
or
pushf
lret
or
push
add
sarb
mov
pop
xor
push
cmp
dec
xchg
scas
aas
push
daa
dec
dec
xchg
hlt
push
neg
adc
ds
cld
add
adc
xlat
test
mov
push
lret
out
outsb
jno
pusha
pushf
xor
out
mov
sub
push
and
nop
dec
xchg
mov
xchg
xor
or
push
mov
cld
ret
adc
add
mov
shlb
xor
fcmovu
mov
xchg
pop
dec
lea
or
push
imul
les
pushf
testl
jno,pn
test
fimuls
or
pop
test
xchg
shrb
jne
push
adc
iret
sub
jmp
lret
cmc
cwtl
fadds
in
jae
pop
out
push
popa
push
push
decl
adc
xor
jae
loopne
arpl
lock
movsl
cmp
inc
mov
add
aas
mov
sti
xchg
mov
shrb
imul
inc
imul
sbb
xor
or
stos
ljmp
filds
cli
jge
or
bound
pop
sbbb
shl
in
add
dec
mov
dec
test
sbb
sar
mov
idivl
enter
xor
cs
cmp
test
pop
xchg
iret
xchg
decl
inc
or
das
inc
addr16
jb
cmpsl
lahf
mov
or
sub
xor
adc
mov
add
fstpl
out
std
inc
xor
push
stos
and
jne
aaa
dec
mov
imul
sub
jp
into
jne
pop
and
imul
inc
scas
faddl
adc
inc
cwtl
aaa
adc
inc
sarb
jmp
mov
in
inc
pop
push
and
mov
jge
or
out
push
clc
shll
xor
push
lds
stc
cmp
js
and
out
pop
cli
adc
leave
pushf
inc
aas
insb
and
mov
mov
fdivrs
aad
shll
push
movsb
jg
arpl
sub
mov
leave
lahf
leave
inc
mov
es
pop
js
inc
jno
jmp
outsl
push
xchg
xchg
ficompl
addr16
inc
frstor
cmpsl
in
aam
push
ss
inc
outsb
sbb
mov
mov
outsb
out
jle
aad
repnz
lcall
bound
mov
mov
xor
daa
xchg
cmp
sub
pop
push
push
out
clc
sahf
call
add
loop
xor
mov
bnd
js
mov
js
mov
movsl
jmp
insl
mov
sbb
dec
repz
add
add
test
ljmp
es
xchg
test
icebp
push
lea
stc
dec
adc
inc
lock
in
movsl
iret
nop
mov
mov
test
xchg
xchg
pop
repnz
and
inc
inc
adc
mov
imul
in
xor
int3
leave
mov
bound
dec
adc
push
xor
mov
mov
cld
sbb
or
mov
jg
ss
sar
rorb
loop
fdivl
ljmp
insl
push
adc
xor
adc
xor
xchg
cmp
mov
inc
sub
xchg
cmp
xor
stos
pop
mov
scas
push
xchg
dec
out
dec
outsl
sbb
fucom
dec
push
mov
mov
add
in
dec
dec
out
test
shl
mov
and
lcall
inc
add
xchg
in
mov
cmp
xchg
jmp
dec
fists
hlt
stos
cmpsl
das
repz
loopne
cmp
cmp
imulb
pop
aad
jbe
shlb
dec
mov
dec
mov
movl
cmp
popa
fwait
jae
xor
lods
shlb
leave
pushf
rolb
outsl
mov
ljmp
mov
cmpl
adc
sub
and
pop
pop
mov
sti
or
sub
cmpsb
pop
cmc
out
inc
pop
nop
cmp
xchg
lods
aaa
out
aad
add
mov
cmp
add
cmc
outsl
dec
rcrl
popf
sbbb
bound
push
daa
scas
sub
push
aaa
adc
inc
lods
mov
cmp
dec
jecxz
or
adc
push
cmc
shl
stc
or
mov
out
sub
pop
imul
push
add
stos
and
inc
leave
add
add
mov
mov
pop
adc
add
outsb
pop
add
sub
test
push
add
and
xchg
push
stos
sub
jl
xor
push
in
hlt
cld
inc
daa
loopne
add
push
jmp
ss
addl
mov
jle
xor
std
adc
imul
ficoml
xor
outsl
fldl
cld
movsb
fwait
mov
cmp
xchg
outsl
fs
inc
fucomip
jno
int3
xchg
cs
jae
lahf
in
xchg
mov
test
lds
xchg
scas
push
scas
outsb
mov
cmp
icebp
or
jae
jmp
inc
jge
mov
movsb
dec
sub
movl
dec
xchg
std
mov
push
mov
jmp
adc
cltd
cwtl
xorl
subl
lldt
and
mov
popa
fists
mov
pop
and
rorl
mov
sub
sub
mov
dec
divl
test
jge
scas
jle
lock
addr16
jecxz
cltd
ret
jnp
shl
mov
scas
fists
andb
mov
sahf
imul
es
jbe
adc
and
fsubl
divb
xchg
movsl
movl
stos
ret
cld
push
and
mov
out
cmove
inc
aaa
xchg
jp
push
mov
sub
int
daa
pop
je
ficoms
int3
jae
test
inc
xchg
and
dec
stc
cmpsl
popf
pop
mov
cmc
fs
out
mov
add
and
mov
cltd
notl
insl
or
sub
xchg
repz
aam
cs
psllw
in
divl
popa
push
pop
adc
test
cmpsb
int
and
flds
mov
inc
lret
sbb
cmc
or
mov
pop
loope
inc
lret
push
pusha
inc
repnz
mov
xlat
inc
add
stc
enter
and
divl
mov
ret
rcrl
mov
mov
jmp
push
xchg
out
jb
dec
lds
add
movsb
and
cmp
dec
mov
push
cld
gs
js
in
les
push
jne
push
mov
sub
cmp
push
jae,pn
push
mov
gs
sahf
mov
popa
mov
scas
pop
das
leave
xchg
xor
cmp
lock
aam
dec
cmc
filds
fdivl
enter
pop
notb
xchg
dec
or
imul
push
dec
mov
push
lock
ljmp
rclb
cltd
sub
mov
pop
insb
pusha
movsb
pop
pop
sbb
xchg
adcb
cli
sub
jne
inc
adc
jne
cmp
stc
shll
test
mov
push
call
cli
pop
or
idiv
test
jo
lods
test
pushfw
inc
mov
ljmp
adc
fnstsw
or
divl
or
dec
mov
cmp
mov
leave
int
clc
push
jb
arpl
out
insb
lds
ja
add
dec
aam
pop
lret
jle
dec
cmp
ficompl
loope
nop
roll
or
rcrb
xchg
fisttpll
mov
xchg
dec
sahf
icebp
shrl
mov
dec
test
dec
cmp
enter
fwait
nop
aas
adc
add
sbb
mov
movsl
mov
push
dec
xor
mov
xor
adc
pop
int3
testl
or
std
sub
xchg
sbb
sti
mov
sbb
sbb
in
out
fiaddl
sub
push
push
sub
jb
mov
xorl
push
push
mov
scas
inc
movsl
into
mov
push
mov
daa
andl
je
mov
mov
inc
in
or
shll
das
outsl
fcmovne
pusha
sub
cmp
adc
add
xchg
mov
add
mov
xlat
push
dec
fisttpl
negl
testl
pop
call
rolb
cmp
subl
fidivrs
test
fidivrl
xorl
scas
orl
jns
out
sbb
jnp
insl
inc
mov
rcl
add
mov
sub
or
dec
movsb
js
mov
cmp
xlat
sub
aas
ret
into
add
pop
rorb
rorb
cld
leave
jnp
test
stos
pusha
adc
jmp
pop
mov
imull
ret
fnstenv
lods
popa
cmpsb
cmpsb
aad
mov
jo
and
insl
jae
jb
cltd
test
mov
insl
lea
loop
ds
push
pop
jbe
rcrb
dec
xlat
mov
arpl
arpl
rcrl
enter
xor
mov
pop
sbb
std
xchg
mov
jp
pop
int3
or
push
xchg
rcl
clc
mov
ja
js
neg
lcall
push
iret
fildl
xor
dec
cmp
mov
cltd
dec
and
jo
ss
cld
cmp
ja
xor
pop
or
mov
sbb
xchg
mov
fdivrs
xchg
inc
icebp
jmp
sbb
cmp
test
push
or
lahf
ret
xchg
icebp
andb
mov
xor
jns
cld
add
in
loopne
shll
inc
stos
inc
fstl
xchg
add
subb
scas
loope
lret
xor
mov
mov
fstpt
mov
or
xchg
repnz
fdivr
les
data16
dec
sbb
cmp
xchg
sbb
rorb
inc
mov
bswap
test
out
mov
jp
xor
fs
sbb
iret
aam
and
out
in
dec
inc
fsubrs
std
and
jb
mov
popf
or
pushl
add
or
push
test
lcall
sub
enter
int3
inc
int3
ret
sbb
and
pop
push
cmc
jb
sti
loopne
xor
test
movsb
push
lahf
adc
mov
mov
aam
mov
xlat
fisubs
fstp
cs
popa
inc
cmp
fidivl
aaa
cmp
movsl
sub
sahf
pop
pop
pop
jno
push
lret
les
pushf
out
or
dec
popl
mov
xlat
subl
mov
mov
mov
daa
jg
or
int
dec
pop
xor
jo
imul
into
xor
and
stc
std
jge
ja
mov
and
push
inc
jb
inc
aam
gs
push
fnstenv
das
imul
icebp
mull
add
mov
andl
and
sbb
sbb
sub
push
in
dec
fistps
add
sub
sbb
jnp
lret
nop
push
les
add
add
sub
and
dec
xchg
in
lea
fildl
fists
in
xor
cmc
or
xor
lds
adc
lret
js
inc
out
dec
push
jmp
xchg
add
pop
pop
cs
sti
adc
loop
stos
js
and
in
jae
mov
dec
xchg
push
jle
jmp
scas
aam
pop
sar
lcall
icebp
aas
mov
icebp
scas
mov
int3
xor
in
push
lods
push
ljmp
and
jge
cli
dec
fnsave
or
shlb
mov
mov
xor
call
das
jp
dec
xchg
inc
cmp
sti
cmp
or
mov
pop
sub
xor
fisubl
inc
add
mov
in
mov
ftst
ret
lds
loopne
xor
insl
add
mov
cmpsl
jmp
sbb
subb
xorb
pusha
bound
cmpsl
hlt
into
in
or
mov
es
es
sbb
push
cli
mov
repnz
lock
cmpsl
mov
leave
nop
add
lcall
push
cmp
inc
fdivrp
xchg
stos
mov
lret
inc
inc
push
inc
xchg
cmc
xor
rorl
ret
add
dec
xor
push
sbbb
decb
jg
inc
push
mov
insb
mov
xchg
clc
insl
pop
sarl
mov
dec
sbb
or
outsb
push
ljmp
pop
and
test
push
inc
dec
xor
mov
ja
push
sbb
jbe
iret
in
movsb
mov
or
mov
aad
bound
inc
aas
fbstp
push
xchg
or
nop
push
mov
xchg
insl
pop
rorb
fs
mov
dec
xchg
inc
mov
stc
call
sub
mov
sbb
mov
cmpl
fst
cmpsb
push
popa
sahf
push
xchg
push
fwait
sbb
jns
insl
jae
cmp
insb
fwait
inc
sahf
cmp
movsl
cld
jb
xlat
lret
movb
ret
int
ss
jnp
inc
mov
jno
std
scas
pop
sub
gs
pop
xor
loopne
mov
push
insb
fs
inc
and
add
data16
sarb
mov
cld
scas
std
cmp
popf
adc
shll
fwait
shr
cltd
lret
call
jbe
mov
adc
sbbb
clc
aaa
mov
adc
sahf
insb
cmp
fcoml
cmp
sbb
mov
mov
lds
pop
lods
mov
jp
add
inc
pop
orb
dec
hlt
int3
arpl
mov
inc
clc
pop
lods
lock
push
push
cli
popf
ljmp
push
movsl
pop
outsb
dec
xchg
paddusb
stos
jnp
repz
push
xchg
insb
mov
dec
sti
xlat
mov
sub
ja
xor
adc
lods
mov
inc
movsl
jecxz
sahf
xchg
or
aas
mov
mov
jns
sub
shll
pop
lods
fwait
and
outsl
jae
sub
outsl
out
les
test
in
test
insl
scas
sub
gs
or
dec
lods
dec
fs
mov
xor
aad
repz
lds
xchg
sub
xchg
xchg
mov
inc
pop
sub
addr16
fiadds
fmuls
inc
mov
cmp
subl
repnz
jmp
pop
lods
dec
pop
insl
sub
or
scas
mov
test
adc
mov
dec
inc
into
leave
xor
jae
xor
sar
sub
mov
fs
xchg
or
jl
clc
mov
push
push
aam
dec
dec
popf
mov
dec
jne
sbb
xor
cmp
inc
jmp
or
dec
mov
fcomip
arpl
int3
mov
ja
stos
popf
imulb
cltd
xchg
jle
dec
clc
sub
fiadds
mov
cmc
stos
mov
pop
cmp
clc
test
jno
clc
ja
adc
xor
cmpsb
lcall
jne
push
xchg
out
mov
mov
xchg
mov
fs
adc
pop
cmp
jg
lods
jae
jae
roll
push
hlt
rclb
gs
icebp
inc
sub
mov
movsl
bound
outsl
jecxz
rorb
nop
inc
adc
mov
and
in
pop
out
repnz
mov
push
call
pmaxub
push
imul
xchg
xlat
imul
push
push
inc
cmp
dec
mov
outsl
sbb
sub
sbb
cld
dec
sahf
inc
hlt
lods
rorb
jmp
xchg
daa
adc
fcomi
pop
pop
popa
jp
push
push
jo
jbe
and
jns
dec
or
call
adc
fs
cmc
clc
and
cmp
lea
imul
lret
sub
hlt
out
add
xor
sarb
push
rorb
dec
ds
mov
mov
inc
jno
jns
pop
jb
xor
and
sub
incb
in
cmp
jecxz
aas
pop
push
iret
jecxz
xchg
call
inc
add
sbb
xchg
add
mov
stos
sub
push
loop
jp
cwtl
mov
inc
cmp
repnz
iret
adc
daa
daa
loopne
and
int
ficoml
push
or
push
cmp
cmp
cmpsb
into
push
add
mov
mov
mov
out
jecxz
aas
roll
mov
add
sbb
pop
sbb
and
shll
mull
adc
xor
out
call
adc
push
xchg
or
addl
add
mov
jo
jmp
lds
sub
adc
sub
push
xchg
push
lret
loopne
and
out
lahf
jnp
push
repz
mov
scas
mov
jl
cmpsl
mov
jb
mov
shrb
out
sbb
cmp
ljmp
sub
dec
out
add
inc
mov
cmp
pop
xor
xchg
mov
std
xchg
es
adc
xor
mov
mov
rorl
and
push
addr16
pop
fisubrl
jns
icebp
popf
aaa
pop
fisttpll
mov
dec
and
pop
xchg
lret
aas
inc
aas
pop
iret
cmp
cmp
mov
push
es
aas
decl
popf
scas
test
outsl
leave
jb
dec
jmp
daa
dec
movsl
dec
xchg
mov
jp
mov
lret
mov
sbbl
push
dec
inc
mov
mov
testl
sbb
mov
cmp
testb
cmp
jnp
imul
and
fadds
add
add
pop
sbb
int3
popf
dec
subb
push
push
dec
xchg
lods
loopne
xchg
push
popf
cmpsl
jle
inc
cmpsb
fisubrl
jge
int
xchg
das
and
lods
sbb
adc
ret
ds
mov
gs
jmp
push
mov
lds
or
enter
icebp
in
lcall
insb
jbe
jne
and
jb
mov
cmp
mov
aad
enter
push
or
test
cmp
fiaddl
dec
mov
xlat
and
sub
sbb
loop
aaa
mov
movb
inc
xchg
int
lods
and
pop
ja
les
inc
mov
inc
nop
jl
sub
dec
dec
xchg
mov
mov
jns
push
adc
sub
jecxz
movsl
int
out
fwait
jecxz
pop
pcmpeqd
or
and
aaa
xchg
mov
xchg
sbb
sbb
lods
mov
adc
xchg
shrl
push
xchg
mov
cmp
add
in
sub
test
push
rcll
dec
jmp
lahf
inc
das
cld
insl
mov
pusha
push
inc
cmpl
dec
mov
pop
lea
mov
jmp
add
mov
push
inc
xor
and
shlb
sbb
mov
shlb
aaa
icebp
clc
jnp
inc
adc
adc
push
push
inc
mov
sub
mov
std
dec
xor
mov
mov
js
punpckhwd
sahf
aam
in
data16
aaa
push
sbb
lock
cmpsl
shl
mov
nop
xchg
adc
adc
mov
mov
les
inc
stos
pop
sbb
add
fisttps
or
pop
in
imull
jle
mov
insl
mov
repz
push
test
pop
add
sub
mov
aam
jae
js
insb
mov
lret
fsts
pusha
adc
cmp
cmpb
pusha
orb
cmp
sti
or
pop
in
mov
rcl
mov
cmc
xchg
adc
xorl
or
or
jno
mov
enter
in
ljmp
push
in
pop
aam
fidivrl
mov
out
mov
sub
lret
cmp
dec
movsl
leave
imul
mov
pushl
data16
ror
xchg
in
mov
cmpsl
in
sbb
imul
lock
jno
or
xor
push
cltd
inc
data16
bnd
stc
xor
ret
inc
aaa
bound
cld
sub
mov
push
or
pusha
mov
loope
jne
add
xor
sbb
mov
shrl
mov
xchg
outsb
ljmp
lods
int
sub
mov
jbe
sub
repnz
sub
jmp
loope
mov
data16
test
xchg
sarl
xchg
xchg
jb
sbb
push
or
dec
movsb
orb
xchg
dec
int3
or
xchg
dec
fildll
repnz
sbbb
mov
dec
mov
rcl
cmp
and
pop
inc
or
dec
cmpsb
lods
push
push
pop
mov
repz
cs
rcrl
rcrl
clc
cs
inc
lods
jge
adcb
mov
push
jns
xchg
sbb
mov
jne
or
hlt
jnp
sti
insl
mov
rcrl
add
fcoml
jg
aad
push
push
sbb
icebp
pop
sbb
pop
mov
xor
cltd
mov
fidivrs
cltd
shlb
pop
rclb
inc
sub
xor
jle
lds
jne
icebp
jmp
rcrb
scas
mov
fistl
cmp
sub
icebp
cmp
out
ljmp
xor
pop
sbb
and
lods
test
rolb
jl
dec
ss
leave
or
and
pop
fidivs
test
hlt
psadbw
or
inc
mov
mov
xchg
inc
xchg
inc
pushf
fsubl
push
jb
movsl
lods
aam
call
adc
ret
mov
lods
xor
xchg
xchg
je
lcall
jecxz
jns
loopne
jae
jmp
cmpsl
adc
push
fnstenv
adc
jp
icebp
xor
test
ss
xchg
gs
jae
mov
add
xor
dec
cmpb
imul
dec
jne
jmp
adc
jecxz
mov
insb
add
in
pop
or
mov
in
mov
imulb
pop
pop
mov
lods
mov
in
fs
adc
add
mov
pop
cmp
adc
xchg
adc
jl
cmc
pop
into
adc
imul
cmpsl
inc
lds
xlat
add
std
push
push
and
lods
jne
xor
mov
hlt
push
xchg
xchg
xor
or
or
dec
adc
inc
int3
sub
test
fmul
pop
orb
dec
sahf
pop
data16
and
pop
and
std
sbb
int
xor
scas
scas
mov
pop
inc
ret
stc
dec
fxch
add
imul
add
out
addl
fsts
jle
loope
les
xchg
cld
out
popa
push
iret
sub
push
cs
rcrb
test
jecxz
xor
xchg
sarb
sti
sarb
push
shll
mov
arpl
lret
pusha
add
jecxz
test
in
stc
mov
and
divb
aam
mov
jecxz
push
stos
pop
hlt
mov
lods
cwtl
add
mov
cmp
scas
inc
stos
jno
pop
xlat
arpl
mov
fmul
ret
mov
sub
adc
lahf
dec
add
mov
imul
cmp
arpl
cmpb
shll
xchg
mov
stos
mov
mov
mov
dec
mov
cmp
into
adc
ds
shll
cld
add
sbbl
push
dec
jmp
jno
outsb
lahf
out
and
int3
and
pop
mov
gs
enter
int
adc
loop
imulb
push
sub
add
ss
fidivrs
fdivrs
in
xchg
xchg
cmpsl
fsubr
mov
inc
cmp
sub
add
repnz
adc
pop
test
push
mov
fdivs
mov
jnp
xorb
xor
push
jne
bound
cld
data16
shll
incl
fwait
insl
es
in
xor
addr16
mov
push
sub
cmpsb
xchg
in
jle
jge
shr
loopne
icebp
add
aam
in
jp
jp
jnp
adc
xchg
push
sbb
pop
add
sbb
repnz
dec
loopne
scas
stc
cwtl
xorl
inc
xor
add
stc
enter
aas
sarl
ss
mov
popa
dec
cmc
sbb
rolb
das
pop
push
iret
fs
push
mov
sbb
inc
mov
testb
xlat
sbb
jbe
ret
aaa
push
cwtl
mov
sbb
sub
jle
jo
jmp
jbe
shrb
push
push
ss
roll
lods
push
imul
cwtl
xchg
mov
pop
cmpsl
imul
inc
divl
xor
je
test
mov
push
push
inc
sub
hlt
mov
mov
sbb
xor
sub
addr16
add
leave
push
xor
gs
repnz
jae
pop
and
ret
jle
mov
in
int
pop
subl
jae
mov
cs
sub
pop
xchg
pusha
ljmp
punpckldq
add
or
mov
dec
dec
les
in
and
outsb
dec
fistl
icebp
dec
xorl
dec
cwtl
cmpsl
aas
out
sbb
cmp
out
pop
sub
sbb
in
loop,pt
pop
scas
cld
mov
jecxz
mov
ss
mov
es
mov
lds
inc
adc
dec
ret
std
fadd
sub
fsub
aaa
jns
mov
jp
add
addb
pop
rclb
sbb
aaa
inc
sahf
push
notl
pushf
call
gs
jmp
loope
jmp
pop
negl
mov
aad
imul
andl
inc
adc
pusha
mov
jne
scas
gs
mov
aad
ret
test
loopne
stos
pushf
dec
adc
sub
sbb
popa
lods
xor
or
jns
jmp
pop
sbb
mov
jp
pushfw
inc
into
es
fidivrs
mov
xchg
mov
or
mov
mov
pop
imul
test
in
mov
pop
push
mov
gs
jge
loope
js
in
jg
push
aad
int3
push
jmp
mov
out
cltd
jb
loop
pop
cmp
xchg
inc
rcrb
dec
add
and
jl
cmpsl
lcall
nop
mov
add
cmp
stos
mov
inc
mov
and
pop
movsb
clc
sahf
pop
push
push
hlt
dec
mov
cmp
adc
jmp
jg
loopne
xchg
add
sub
xor
in
iret
insb
bound
stc
int3
or
sbb
lret
fistl
decb
dec
in
mov
xchg
scas
insl
movsb
inc
xchg
add
pop
jo
pop
lods
leave
pop
pop
and
mov
sti
or
outsl
lahf
inc
and
jns
add
inc
dec
rcrl
xchg
in
bound
fisubs
dec
push
inc
jae
or
loop
stc
mov
xorl
movl
inc
jb
mov
push
sub
arpl
shrl
push
roll
les
xor
lcall
inc
shlb
fisttpl
xchg
pop
pop
loop
xorl
cmp
or
cmpsb
or
push
in
sbb
clc
mov
mov
cmp
sti
add
imul
jbe
mov
pop
and
inc
xchg
les
pop
sbb
push
hlt
movsl
and
add
sbb
jmp
pop
aaa
cmovle
scas
adc
scas
push
xor
mov
aad
rclb
aad
pop
mov
lret
pop
das
test
icebp
js
inc
mov
sahf
jnp
inc
cmpsb
add
xor
dec
sbb
jbe
jb
movsl
fadd
push
mov
lea
add
iret
xchg
int3
pusha
inc
pop
inc
mov
mov
pop
fs
adc
dec
fisubrl
add
add
xchg
aad
repz
pushf
jne
ljmp
int
push
mov
mov
adc
and
xchg
dec
fdivrl
cld
cmp
add
je
stos
jne
pop
xor
push
or
xor
dec
jmp
mov
or
stc
jmp
int
loopne
insb
gs
sub
lds
jo
test
repz
movsb
cmovbe
add
ja
shl
and
int3
sub
xlat
fimuls
enter
mov
lret
push
push
rolb
cwtl
loope
xchg
mov
imul
fsubrs
daa
sub
mov
sub
lcall
ss
push
es
xchg
je
push
inc
inc
shrb
lret
inc
pushf
sbb
imul
or
cmpsb
pop
pop
fists
dec
sbb
push
or
jl
and
dec
cld
ss
jmp
aas
cld
adc
lea
and
mov
mov
push
shrb
or
push
rcr
mov
push
xlat
mov
pop
xor
mov
fwait
mov
insl
leave
mov
pop
aam
pop
je
pop
and
push
aaa
cmpsl
aas
mov
mov
cmpsb
fildl
stos
in
inc
jb
int3
repnz
sarl
addr16
out
ja
repnz
in
mov
xor
pop
mov
mov
mov
cmpsl
mov
nop
and
sahf
mov
sbb
arpl
pop
inc
sub
or
scas
lcall
xchg
or
inc
adcb
test
js
sub
cmp
pop
push
fimuls
cmpsb
xchg
repnz
sub
scas
dec
jmp
pop
push
adc
and
mov
les
jno
test
mov
es
addps
inc
xchg
xor
sub
and
pop
pop
mov
movsb
cmp
dec
sbb
inc
pusha
addl
fsts
leave
cmp
shlb
or
jne
lahf
jg
dec
push
je
pop
ret
dec
mov
push
jb
dec
popa
movsl
and
jmp
ds
and
scas
mov
es
mul
clc
jge
in
pop
cmp
jbe
jg
sahf
xor
sbb
js
xor
cs
jne
orb
jnp
push
and
aam
sub
pop
xor
or
mov
or
mov
jge
out
jle
push
imul
dec
fldl2e
fs
pop
ret
scas
ret
imul
fstl
faddp
aaa
push
add
in
jp
movsb
ds
fldl
je
xchg
dec
ret
lret
test
xchg
push
jg
sahf
inc
pusha
dec
lret
insl
js
pop
fistps
adc
out
lret
notb
popf
ret
lahf
adc
nop
sub
repz
nop
adc
fsubr
shll
mov
xor
sub
inc
xor
add
lcall
mov
dec
pop
push
sbb
pop
add
inc
lcall
daa
push
and
xchg
mov
cmp
sub
push
fucomip
mov
into
out
xchg
test
cmpsl
xlat
mov
mov
sbb
stos
int
push
or
pop
xchg
xchg
xor
adc
push
nop
ds
dec
and
cmp
or
jmp
jo
popa
sbb
push
popf
push
mov
mov
fstpt
pop
in
push
popf
mov
lock
push
notb
pop
pushw
loope
jg
push
mov
push
mov
cmp
mov
adc
and
ss
dec
pop
cli
cmc
leave
dec
dec
inc
jb
jg
pop
paddusb
cwtl
int3
pop
and
or
cmpsl
in
cwtl
nop
enter
inc
mov
xchg
loopne,pn
and
add
push
bswap
sti
test
jmp
or
sahf
into
dec
cld
int
mov
inc
push
sub
pop
das
jp
lret
sub
push
and
lret
add
lahf
jge
test
popf
mov
mov
push
xor
cwtl
pop
mov
cmp
mov
repz
xchg
dec
les
fstps
leave
adc
lret
test
fucomi
cs
mov
sti
jne
xchg
adc
insl
dec
sub
lods
xchg
jbe
or
es
push
push
sbb
jle
mov
imul
adc
push
lods
out
insl
adc
sub
xchg
or
std
jle
or
sarb
adc
cs
and
les
adc
xchg
push
sbb
lea
cld
movsb
pop
push
iret
pop
cmpsl
cmc
cltd
daa
insb
pusha
fldt
adc
int3
call
xchg
inc
out
shlb
fistpl
dec
and
adc
repz
test
js
ficoms
aad
movsb
and
stos
xor
push
das
push
imul
xor
pushf
push
arpl
add
std
shl
xchg
xchg
notb
adc
sbb
das
mov
int3
add
imul
fs
and
aaa
arpl
jecxz
inc
jp
lock
lcall
and
sti
sbb
aam
and
dec
xchg
pusha
mov
adc
rcr
cltd
test
ficomps
dec
push
jno
dec
dec
jmp
arpl
push
subb
pop
int
add
dec
fs
mov
sub
daa
imul
pop
dec
movsb
mov
pop
scas
lock
inc
loope
nop
cmp
add
test
scas
shll
or
mov
cmp
push
inc
je
cmc
cmpsl
in
push
adc
and
sar
mov
jl
adc
lcall
sahf
dec
inc
mov
push
fdiv
push
jnp
mov
push
jg
jo
jp
cmpsl
lcall
bound
adc
jnp
icebp
lea
mov
daa
add
cld
and
mov
mov
sub
inc
jnp
out
pop
jbe
fldt
int3
lock
mov
add
out
pop
sbbl
mov
mov
fists
rol
repz
mov
pop
and
ficomps
pop
and
stos
inc
jae
lock
pusha
movsl
movsl
inc
ja
aad
lock
pop
inc
dec
test
fwait
jbe
clc
scas
in
sbb
cmp
aas
inc
adc
lret
mov
shlb
popa
sub
jmp
xor
repnz
scas
addb
push
out
push
push
jle
fistpl
jmp
adc
jmp
lock
jb
fstps
rclb
pushf
mov
mov
daa
xor
mov
push
add
cmp
jle
insb
test
push
call
loop
inc
jno
and
add
ja
mov
and
fwait
aaa
lods
cli
dec
js
pop
adc
cld
mov
cltd
dec
inc
xor
adc
fmuls
jl
add
sbb
xchg
adc
cltd
shlb
outsl
push
sbb
loope
lods
ret
lea
pop
lea
lcall
push
aad
nop
or
cld
std
mov
repz
roll
loope
sbb
sbb
rclb
jns
and
lcall
bound
dec
xor
mov
and
insl
js
and
pusha
pop
sub
sub
xchg
add
lret
test
mov
mov
lods
ja
push
xchg
mov
lahf
push
loope
or
sbb
lret
jns
mov
aad
jnp
mov
jecxz
popf
idiv
xchg
sahf
hlt
insb
add
stc
sarb
cmp
fstpt
push
daa
sbbl
mov
xchg
xlat
clc
inc
sub
or
test
mov
and
xor
rcrb
push
in
or
xchg
push
mov
imul
cmpsb
das
imul
icebp
add
jb
insl
push
and
call
les
pop
mov
outsb
inc
js
jnp
faddl
popf
add
roll
mov
or
pop
test
mov
or
xchg
jne
lcall
mov
xchg
aam
jmp
inc
inc
push
pop
aas
scas
sbb
mov
adc
sbb
dec
inc
fst
test
inc
addl
sbb
lods
push
push
xchg
push
mov
jmp
or
xlat
sti
adc
sub
fisubs
add
sbb
jno
cmp
je
mov
or
mov
sub
jns
and
cmpsb
or
jmp
stos
decb
shlb
cmpsl
adc
ret
call
out
pop
xchg
push
add
fisttpll
mov
mov
cmp
mov
movsl
pop
insl
out
cmp
int3
mov
fcom
stc
xor
inc
mov
orb
push
add
add
loope
mov
adc
pop
adc
stos
dec
sbb
movl
lods
cmpsb
sbb
mov
inc
add
mov
xor
outsb
xchg
xor
cmp
test
xor
mov
mov
jg
mov
notb
fisttpll
cmpsb
inc
jmp
je
cmp
enter
mov
loopne
xchg
out
sbb
cmp
cmc
flds
into
stos
icebp
mov
push
popf
rorl
cwtl
sti
pusha
iret
push
repnz
jns
rolb
cmp
subl
xor
xchg
aad
lcall
les
rcll
adc
aas
out
jp
inc
mov
cld
mov
jno
js
push
jb
pop
mov
loop
call
lods
orl
add
fs
mov
aam
xor
adc
and
add
add
enter
xchg
ret
pop
sbbl
int3
push
fwait
mov
fimull
adc
popf
push
scas
mov
in
mov
shll
xchg
sahf
push
stc
xchg
shll
test
hlt
inc
repz
xor
cmp
jp
mov
das
in
sahf
dec
pop
stos
bndstx
sti
test
pop
movsl
sub
mov
sub
sahf
fwait
insl
out
sbb
dec
mov
test
pop
pushf
push
sbb
fldenv
xchg
arpl
cmpsb
sbb
pop
mov
pop
lcall
or
lahf
sub
popa
adc
xchg
cmc
pop
fcmovb
push
xor
pop
ja
idivb
movsl
add
lods
roll
cmpsl
xchg
push
xor
es
cmpsl
cmc
sub
xor
mov
clc
inc
jecxz
xchg
scas
xor
xor
or
jl
xchg
and
inc
xchg
pop
leave
sub
int3
push
clc
lock
cli
cli
jno
cld
outsl
mov
jp
fsubrs
jb
or
push
adc
data16
mov
outsb
and
and
repnz
stc
mov
jne
jbe
test
iret
jp
pop
call
insl
mov
and
sbb
fimull
push
pop
scas
cmp
test
ret
mov
icebp
lods
pop
je
dec
pop
add
cmp
pop
movsb
mov
jo
add
sbb
cs
pushf
cmpsl
cmp
lret
lahf
cltd
ret
loop
cmp
loope
lea
and
pushf
aam
mov
fucom
mov
jnp
push
sub
push
inc
mov
repz
sbb
rclb
sub
pop
mov
add
and
aas
popf
js
jno
jmp
xor
xor
mov
ret
jl
shr
mull
add
mov
aaa
dec
push
mov
insb
add
lods
mov
xchg
repz
repz
pop
in
pop
pop
sub
enter
cmp
sub
sbb
loope
fimuls
sbb
dec
divl
inc
lods
aad
mov
mov
and
test
and
andb
or
mov
push
xchg
jge
int
das
inc
int
pushf
and
mov
mov
and
inc
mov
loopne
mov
push
jmp
pop
mov
enter
fnstenv
xchg
xor
movsl
pop
pop
ss
dec
mov
ja
sub
or
cmpsl
lods
push
lcall
jnp
sbb
in
out
dec
int3
sahf
push
inc
mov
push
rorl
repz
les
inc
mov
pop
lds
shll
add
int3
push
out
ret
lock
mov
mov
push
push
bound
shlb
and
int
mov
mov
jns
push
or
cmpsl
add
rcl
rclb
iret
divb
adc
push
in
jbe
lock
popa
int
in
cwtl
xor
hlt
inc
imul
push
ja
and
mov
jecxz
adc
mov
ret
or
aaa
dec
sbb
test
addr16
cmpsl
lcall
loope
loopne
pushf
xchg
mov
jno
sbb
push
mov
and
fistpl
sub
in
mov
pop
xchg
je
out
mov
iret
aam
xor
addr16
andb
adc
cmp
jno
xchg
or
lea
test
push
ret
sub
xchg
mov
or
jp
sarl
je
xchg
sbb
inc
mov
jae
mov
jo
pop
repz
aam
add
pop
jl
aas
imul
pop
enter
imul
mov
ds
mov
fs
jp
pop
push
call
jmp
bound
cli
jecxz
adc
stc
or
inc
push
je
pushl
lods
add
movsl
dec
push
subl
mov
mov
and
add
gs
xor
jae
lret
mov
clc
fcoms
repz
mov
cmpsb
pop
repnz
mov
push
icebp
sarb
xor
lods
xor
pop
cli
std
idivb
and
fisubrl
dec
fcmove
mov
pop
in
cmp
aam
jmp
aad
adc
pop
jg
test
xchg
insb
mov
or
cmp
mov
leave
cmp
add
out
cmc
cli
mov
aad
inc
sbb
fs
stos
jae
jg
and
sbb
cmp
push
jne
mov
and
call
and
sbb
dec
sti
pusha
adc
test
xor
push
fsubrl
lea
inc
gs
subl
pop
mov
push
in
sbb
inc
fneni(8087
jp
mov
shlb
in
adc
sub
in
xchg
repz
sub
loope
dec
lock
jle
xchg
mov
cmpb
jle
push
inc
daa
nop
loope
pop
mov
add
pop
dec
aam
sti
psrld
push
addb
push
adc
jns,pn
push
sti
outsl
add
pop
out
dec
out
pop
mov
jo
add
mov
mov
xor
push
cmp
sbb
sbb
sahf
push
add
xlat
cmp
xchg
xchg
jo
mov
int
push
cli
jle
cmpl
mov
out
pop
enter
pushf
std
ret
dec
aas
cmpsl
sti
das
test
adc
movsb
lret
mov
enter
js
mov
jl
stc
xchg
add
push
aad
jb
mov
sub
mov
into
push
xchg
lret
fildll
ja
incb
push
ja
or
in
aaa
or
daa
mov
cld
imul
push
push
pop
inc
shlb
lds
ret
adc
mov
scas
mov
sbb
xchg
shlb
mov
in
inc
iret
mov
sti
jae
ljmp
out
sub
fmull
sbb
adc
daa
mov
or
fsubrl
push
jnp
sub
mov
jb
out
pop
dec
xor
ljmp
mov
mov
lock
mov
jae
movl
jp
xor
je
ficomps
cmpsl
repnz
repz
sar
out
sahf
ret
or
daa
or
aaa
nop
mov
pop
lret
fs
sub
frstor
iret
inc
mov
les
aas
and
xor
add
add
ss
or
pop
in
testl
gs
icebp
jmp
add
add
or
mov
repz
into
mov
xchg
xchg
stos
adc
stc
shl
hlt
dec
ss
lret
xchg
push
pop
dec
push
shl
mov
and
inc
idivl
dec
nop
sahf
loope
cmpsl
aam
push
cmc
fstl
sub
adc
mov
out
add
popf
pop
daa
mov
arpl
in
adc
sbb
sbb
xchg
rcrl
xor
insl
jae
out
push
lods
fists
xor
pop
jp
xchg
out
iret
add
push
roll
or
stos
sbb
movsb
stc
rol
adc
pop
add
adc
imul
mov
cmp
or
adc
imull
mov
and
fs
mov
cmp
sub
out
dec
sbb
test
sbb
xor
push
inc
pop
arpl
mov
mov
mov
cmp
push
fcomp
pop
and
pop
mov
test
sbb
outsl
push
cmp
sti
lock
mov
addr16
cmp
pop
push
bound
sbb
mov
push
pop
add
imul
sbb
nop
test
enter
pop
sbb
xor
or
cmpsb
pusha
jne
mov
xor
in
push
pop
sub
dec
jle
jl
je
popa
cmpl
shl
ret
cmc
mov
adc
addl
sbb
jl
xor
xchg
cmp
sti
lods
daa
cmp
adc
in
or
or
jae
in
movsl
and
xchg
jno
inc
xchg
push
mov
and
sub
lods
dec
sub
xlat
xor
jle
std
inc
cmp
sbb
xor
pop
int
xchg
and
or
push
aas
xchg
insl
xor
rcr
sbb
cmp
cmpb
inc
jae
pop
cltd
pop
mov
imul
popa
add
dec
bound
test
mov
iretw
lds
subl
mov
subb
push
fldcw
add
lret
loope
popf
in
push
sbb
add
enter
test
into
invd
stos
mov
fdivl
mov
jecxz
cmp
adc
pop
ss
sub
test
sub
les
mulb
or
mov
jne
push
mov
testb
cs
jb
jmp
xchg
sub
loopne
xor
testb
cmpsl
sti
mov
addr16
jg
daa
inc
jle,pn
add
push
stos
cmc
cmp
xchg
lcall
ljmp
ljmp
test
std
add
popa
jmp
add
lret
fsubl
jmp
fs
pusha
mov
mov
inc
das
inc
js
dec
and
cmc
leave
xor
daa
movb
push
loopne
inc
insl
jmp
jmp
mov
cmpl
ds
and
aad
xor
shll
sub
push
clc
cs
inc
pop
and
imul
bnd
sbb
xchg
fmull
sbb
mov
sub
inc
add
ficompl
add
cmp
sbb
and
inc
inc
jnp
add
rcll
addr16
rcrb
cmp
push
fnstsw
adc
jecxz
cmp
add
rclb
cs
setp
ds
push
sti
rcl
lret
sti
mov
into
jp
int3
leave
daa
out
icebp
mov
mov
ja
test
ret
in
dec
add
test
insl
fs
daa
xor
lock
mov
dec
data16
clc
jmp
insl
rcrl
adc
es
je
lcall
sbb
adc
pop
mov
push
xchg
stos
clc
dec
inc
leave
sti
test
mov
rcll
xor
sbb
jnp
dec
daa
fxch
push
xchg
cmpsb
shll
xor
shll
sub
int3
mov
rcl
aaa
add
fcom
jb
pop
sbb
shll
sti
mov
cs
cmp
inc
sbb
neg
ficompl
sbb
dec
push
cmp
or
daa
arpl
loope
outsb
sub
jge
ds
inc
mov
jp
out
mov
repnz
rorb
push
cmc
lods
lds
cmp
pop
xchg
outsl
xor
fbstp
shll
mov
out
pop
jno
pop
out
xor
pop
aaa
mov
cli
les
cltd
ficompl
push
ds
cmpsl
pop
mov
adc
xor
xchg
flds
mov
scas
mov
add
inc
das
mov
mov
lret
fnstcw
sbb
dec
inc
push
ret
movsl
arpl
mov
cltd
icebp
inc
neg
push
out
insb
inc
fdivs
bound
dec
dec
cmpsb
xchg
mov
mov
outsl
xchg
pop
in
and
movsl
add
stc
jge
lret
push
and
mov
mov
insl
and
fcomps
bound
cmp
arpl
cs
sti
inc
data16
dec
pop
mov
mov
out
notb
repz
xchg
mov
mov
dec
xchg
data16
jle
enter
lock
mov
and
jp
aaa
shll
mov
repnz
lret
add
xor
mov
pop
ss
out
fcmovb
test
imul
loope
adc
xchg
fists
test
test
sub
pop
popf
cmpsl
inc
pop
sbb
mov
or
leave
negb
mov
mov
jnp
cmp
pop
je
jnp
and
push
sbb
mov
test
mov
jle
gs
outsb
test
add
add
cmc
shl
adc
or
subb
cwtl
popa
dec
fdiv
les
sbb
out
rcl
testb
add
mov
mov
pop
xor
pop
cmp
in
enter
sbb
adc
ja
dec
loop
jecxz
adc
subb
xor
aas
and
andb
mov
aaa
mov
in
out
mov
jl
std
or
mov
incb
fsubrs
addr16
mov
sbb
inc
scas
lods
outsl
and
adc
out
stos
test
xchg
les
shlb
push
int3
mov
push
push
add
nop
mov
sbbl
sbb
jns
push
pop
sar
fistpll
movsb
scas
mov
jle
testl
daa
cld
mov
add
popa
xchg
dec
jmp
mov
pop
dec
aam
mov
movsb
xlat
mov
jmp
push
fucomip
add
adc
jnp
int
ficoms
inc
outsb
pop
repz
outsb
pop
add
outsb
mov
mov
inc
daa
shl
or
or
jp
mov
and
insl
ss
lret
inc
xor
into
pop
cltd
xchg
push
shl
inc
add
js
repz
push
xor
adc
push
stc
jo
sub
repnz
xor
mov
mov
xor
mov
movsl
or
xchg
js
sub
mov
bound
sbb
sbb
lods
push
das
ds
xor
test
inc
cmpsb
mov
adc
pop
pusha
jns
push
fisubrl
fdiv
imul
out
lret
lds
xor
lcall
stos
adc
nop
sahf
sahf
lock
add
push
and
popf
lods
sti
dec
or
sti
jbe
aaa
pusha
xchg
sbb
inc
sub
cmp
push
lds
mov
or
std
push
cltd
xchg
hlt
pop
xchg
adc
pop
push
and
inc
jmp
mov
mov
adc
imul
fwait
jnp
icebp
xchg
jle
out
mov
push
aas
dec
loopne
jb
rcrb
in
xchg
sti
dec
mov
xor
mov
sahf
mov
jle
mov
sarl
insl
jl
adc
xchg
or
jle
je
in
cmp
jge
mov
mov
es
sub
sbbb
loopne
stos
sbbl
ds
lret
jp
xor
mov
rol
popa
jge
pop
insb
adc
xor
jmp
push
push
mov
jmp
mov
pop
adc
shrl
mov
jae
mov
cs
push
and
outsb
jle
imul
les
pop
int
in
mov
mov
inc
daa
imul
push
push
call
les
mov
shrl
xchg
jge
imul
testb
dec
or
push
mov
lahf
push
or
mov
sub
aad
adc
fiaddl
push
scas
inc
dec
ror
ret
add
mov
lds
scas
cs
lret
movsb
loop
mov
xor
es
sbbl
lret
aaa
cmp
mov
xor
testl
in
mov
dec
xchg
dec
mov
or
add
out
sbb
jae
imul
aad
and
in
sbb
lods
enter
les
nop
in
mov
stos
daa
or
jns
scas
mov
out
fdivl
xchg
mov
and
hlt
jnp
lds
push
stc
sbb
outsl
xchg
add
fdivr
call
or
fucomi
cltd
dec
xchg
ss
or
xor
and
inc
ret
cmp
repz
push
hlt
lea
rolb
mov
sub
rcrl
cltd
sub
mov
stos
mov
aam
dec
push
jb
add
jne
sub
stc
or
mov
mov
cld
aas
xlat
xlat
pop
or
imul
pop
push
sbb
lret
in
push
sub
jno
jg
fmulp
lock
xchg
inc
test
cmpsb
faddl
je
pop
movsb
inc
loop
push
add
mov
jl
lods
cmpsb
movsl
frstor
dec
dec
pop
cld
inc
nop
icebp
jl
and
fisubrs
aad
mov
ret
adc
sbb
or
push
loop
and
in
pop
dec
adc
cltd
subl
cmpsl
jg
add
outsl
lds
mov
sbb
jae
test
dec
push
popa
cmp
push
sbb
xlat
flds
push
out
jl
cli
add
pop
iret
push
jmp
mov
xchg
cltd
or
dec
push
push
adc
mov
jb
es
imull
sbb
xchg
mov
jns
jl
lret
push
cltd
jne
add
inc
mov
and
insb
into
dec
jbe
mov
xchg
dec
pop
test
mov
lods
clc
or
cmp
cld
cmp
lods
es
mov
into
addr16
in
mov
mov
push
ds
leave
sub
aam
mov
add
loop
mov
rolb
mov
cs
xchg
or
mov
mov
leave
dec
dec
orl
xchg
xchg
pushf
xchg
push
sub
pop
mov
xchg
push
out
mov
hlt
mov
cmpsl
fwait
jp
sub
rorb
imull
jg
dec
std
stos
in
mov
mov
nop
insb
fcomp
dec
lahf
loope
mov
and
pop
das
data16
xlat
pop
xor
mov
inc
inc
idivl
pusha
in
cltd
sbb
clc
inc
aaa
or
lock
pop
cs
jle
leave
popa
sub
jg
cmpsb
mov
pop
jg
xor
movsb
imul
aad
orl
push
or
pop
sbbb
lock
pop
insb
subb
scas
mov
imul
push
pop
rclb
cmp
dec
lcall
or
test
daa
fstl
jns
outsb
cmp
fs
inc
inc
mov
movsb
shrl
out
pusha
push
test
adc
in
dec
sti
addr16
jle
xor
js
aam
xchg
dec
mov
les
je
out
sbbl
or
fistps
mov
xor
xor
pop
jo
mov
in
bound
dec
mov
sub
add
icebp
scas
cmp
sub
mov
push
into
sbb
cmpsb
push
mov
mov
movsl
stos
add
rol
sub
fadds
insb
bnd
pop
stos
je
ja
dec
jb
sub
ljmp
or
stos
out
std
cmp
mov
adc
lods
xchg
jo
popa
mov
loope
and
or
fs
push
push
repz
mov
out
cmpl
mov
xchg
icebp
es
cmp
je
jg
mov
outsl
sahf
fsubrl
jae
adc
xor
push
test
mov
dec
rorb
testl
xchg
push
jge
cmpl
mov
xor
scas
jl
jmp
inc
adcb
or
stc
push
hlt
inc
jno
mov
dec
inc
inc
outsb
sbb
adc
ret
xchg
xchg
xor
pop
cmp
mov
ss
mov
push
test
add
sbb
in
ljmp
push
pop
mov
pop
sbb
push
scas
cmpsl
dec
sub
cmp
push
test
add
daa
jbe
idivl
mov
mov
add
outsb
pop
add
sbbl
add
andl
outsb
mov
add
popf
inc
cltd
test
jo
roll
std
push
das
mov
mov
sbb
jns
push
mov
addb
push
pop
inc
jno
in
sub
iret
sub
or
in
sarl
shrl
push
js
imul
jle
mov
cld
popa
out
sbb
jle
icebp
mov
out
insb
ret
fsubp
cmp
loope
fwait
bound
in
jnp
dec
fldenv
das
lods
icebp
insb
popa
aad
movsl
andb
arpl
iret
sbb
insb
mov
or
cld
popf
outsb
nop
lret
pushf
js
add
outsl
mov
les
cwtl
adc
dec
inc
inc
jle
pop
fs
insl
sbb
fs
jge
je
aad
jle
jns
repz
pop
or
mov
dec
push
shll
pusha
mov
stos
out
cwtl
hlt
fcmovne
jno
adc
decb
push
lds
test
pop
cmp
lds
out
jae
jle
mov
push
push
cmp
jnp
pop
sarl
sbb
fisubs
scas
dec
push
add
pop
jg
ret
dec
push
nop
push
ljmp
ret
xchg
inc
xchg
jae
ja
mov
enter
sar
mulb
sub
cmp
imul
adc
sbb
faddl
inc
mov
sub
mov
xchg
add
call
rolb
sar
push
mov
cmp
jecxz
ljmp
call
insl
scas
in
mov
sahf
iret
daa
mov
ljmp
ret
inc
ret
xchg
cwtl
ljmp
pop
testl
jg
mov
inc
add
out
xor
in
lcall
push
inc
sbb
cmp
test
aam
incl
repnz
stc
lret
cmpsl
mov
stos
in
cmp
pusha
aad
mov
shr
push
push
cmp
xor
mov
push
xchg
push
mov
lods
lcall
mov
std
mov
dec
jns
movsb
dec
jae
fistl
inc
mov
pop
addr16
adc
push
add
push
cmp
and
cmp
or
or
into
or
push
mov
inc
pop
xor
pop
push
or
add
pop
nop
inc
mov
push
mov
or
inc
xor
xchg
push
add
cwtl
inc
push
fcmovnu
push
pop
inc
out
or
in
int3
dec
movsb
xor
add
or
imul
push
loop
inc
inc
jmp
ret
mov
mov
shlb
test
jne
scas
jecxz
dec
sub
outsb
incb
bound
rclb
movsb
scas
jb
jmp
dec
addr16
xor
push
mov
pop
pop
jge
outsl
stos
pushf
inc
xor
cli
in
xchg
sbb
jmp
in
stos
shrb
ret
jmp
loopne
lret
adc
hlt
stos
call
mov
push
mov
ds
popa
xor
out
push
xor
mov
or
imul
adc
fdiv
pop
movsb
mov
dec
int3
xchg
dec
or
ds
test
jg
addr16
ds
cmc
sub
js
insb
cmp
imul
xchg
daa
test
jbe
iret
push
daa
std
fstpl
lret
cmp
test
jl
imul
jmp
pop
imul
xorb
lods
movsb
aam
sahf
inc
hlt
jle
in
pop
aad
out
mov
into
icebp
test
xchg
int
xor
inc
out
xchg
stos
sbb
cltd
inc
push
das
mov
push
dec
sbb
aaa
loop
in
mov
mov
sub
cmp
or
hlt
hlt
call
sbb
sbb
rorl
pop
std
int3
stc
or
insb
ja
loope
sbb
add
xor
lcall
outsb
lock
scas
mov
fistpl
jge
imul
cmpb
or
mov
je
inc
xchg
loop
mov
ds
xor
inc
imul
iret
xor
ror
popf
lcall
xchg
jo
lret
dec
test
outsl
jo
adc
aam
jbe
jae
repz
repnz
push
shl
pusha
sub
insl
pusha
jbe
push
and
dec
add
jno
je
call
fwait
adc
mov
xchg
imul
stos
shll
mov
das
loope
insb
inc
stc
jge
repz
pop
push
outsl
stos
prefetch
icebp
pop
outsb
stc
es
xchg
mov
and
orl
mov
push
lahf
pop
stos
and
sub
push
movsb
mov
aas
or
xchg
gs
jmp
subl
fldcw
gs
add
lock
adc
clc
imul
adcl
jae
mov
out
ja
mov
sbb
pop
mov
div
dec
inc
dec
rol
mov
pop
cmp
mov
mov
lods
sbb
daa
push
xchg
lds
leave
ret
mov
push
pop
test
xchg
int3
adc
mov
fdivr
mov
in
int
xor
imul
mov
mov
pop
lods
mov
inc
jbe
aaa
mov
xchg
ret
ja
xchg
push
or
pushf
ljmp
mov
cltd
scas
push
xor
aad
push
fwait
outsl
fninit
push
xchg
imul
xor
or
and
outsl
xchg
add
xchg
jne
data16
dec
sbb
fisttps
stc
lock
roll
lcall
push
fistpl
inc
incl
adc
sbb
inc
fstps
lods
ss
mov
cltd
pop
out
mov
aam
inc
pop
movl
loop
or
mov
cwtl
in
call
cwtl
mov
jns
cmp
push
pop
mov
jae
or
dec
scas
sbb
mov
jne
mov
movsb
mov
or
sbb
mov
xor
scas
xchg
arpl
daa
jo
lock
icebp
sbbb
test
push
push
xchg
or
fdivl
push
pushf
cmp
push
dec
outsb
inc
ja
in
lret
scas
jo
repnz
test
andl
addl
push
mov
mov
adc
mov
notb
ret
imul
jbe
adc
mov
and
movsb
pop
ret
in
push
jecxz
popa
inc
ret
loopne
mov
pop
jl
cmc
mov
adc
lock
fcomi
movsl
jl
xchg
loope
out
mov
mov
icebp
scas
ss
adc
jp
ljmp
jmp
add
push
xlat
mov
xlat
lea
popl
add
outsb
pop
add
sbbl
cmpsb
and
sub
out
or
movsl
lret
mov
xor
je
jge
sbb
cmc
pop
sbb
add
arpl
and
sarb
jmp
fwait
cmc
mov
psllq
jmp
add
pop
jns
jg
inc
mov
dec
sub
data16
pusha
lss
iret
aaa
pushf
lods
rclb
insb
in
push
inc
adc
push
fstpl
xor
cld
add
xor
cmpsb
push
xchg
popf
jge
xchg
add
xlat
dec
pop
mulb
test
data16
fimuls
adc
cmc
enter
pushf
fwait
lret
ret
dec
jl
push
or
mov
dec
push
mov
sbb
jb
push
mov
in
pop
sub
cmp
sti
in
in
lret
movsb
pop
mov
xchg
es
mov
test
push
mov
imul
cmp
les
leave
lea
jbe
negl
mov
or
int
aaa
lret
cld
lods
lock
jle
movsb
icebp
repz
mov
jge
pusha
push
jge
je
stos
incl
xorb
mov
cmp
out
add
and
in
stos
insb
lds
xchg
cltd
stos
rcll
mov
ljmp
xchg
test
add
int
xchg
lret
sarl
mov
sarl
notb
mov
shl
in
pop
or
loope
les
and
pop
rorl
movsb
aas
inc
pop
addl
imul
pop
lret
and
cmpsb
loopne
jnp
inc
jo
insb
mov
arpl
das
ret
push
ljmp
sbb
ret
out
jg
jge
sarb
pop
lea
or
fwait
mov
ret
and
lahf
aam
xchg
jne
jns
mov
cld
pop
pop
repz
cmp
xor
aaa
fldenv
lods
pop
pop
pop
mov
mov
mov
cmp
call
pop
pop
fstps
arpl
add
mov
movsl
push
inc
loope
push
mov
imul
cld
into
ds
hlt
jl
push
mov
xchg
push
cmpsl
pop
push
addb
or
mov
sbb
cltd
dec
cmpsb
add
push
daa
stc
push
out
arpl
mov
add
and
mov
sub
and
loop
in
cltd
jo
inc
mov
jp
add
ds
or
cmp
jae
add
or
xor
inc
addr16
cwtl
push
dec
or
add
dec
int3
and
fisttps
cmc
adc
push
xor
shl
xchg
scas
inc
das
cli
pushf
cmp
enter
inc
inc
ret
inc
mov
insb
lock
test
cmpsl
and
das
popa
sub
add
adcl
jnp
mov
aaa
adc
dec
and
or
cli
mov
mov
xor
lods
lea
std
push
ds
dec
dec
inc
jmp
push
jmp
inc
std
or
and
pop
mov
cmp
jp
in
inc
fidivl
lret
cmpsl
inc
fstl
daa
xchg
sahf
xchg
repz
mov
mov
xchg
iret
rcrl
dec
add
ljmp
sahf
pop
adc
lock
fldl
ret
mov
inc
std
repz
cmpsl
fsub
mov
xchg
fiaddl
lods
cwtl
dec
mov
mov
push
lahf
dec
dec
in
xchg
mov
mov
mov
aad
and
jno
dec
cli
pushf
jmp
xchg
iret
inc
mov
outsb
mov
and
inc
roll
xlat
inc
fisubs
jle
push
out
sub
leave
inc
cmp
test
jbe
xor
loope
fiadds
add
cmp
push
mov
xor
or
mov
inc
mov
xor
shrb
movb
dec
pop
jo
jecxz
lret
pop
icebp
dec
mov
add
iret
mov
fsubrl
xor
mov
sub
inc
sbb
cmp
mov
or
inc
outsb
pop
mov
mov
neg
mov
cmc
sti
jb
test
clc
les
shl
push
fdivrp
popa
ret
in
cmc
js
dec
jle
push
xchg
adc
js
cmp
jne
xchg
mov
bound
mov
fs
mov
cltd
and
sahf
iret
sub
and
call
xchg
pop
pop
mov
inc
rorl
mov
in
cmp
stos
inc
xchg
hlt
rcll
rolb
repz
lods
inc
cmp
frstpm(287
lods
mov
ljmp
shrb
imul
inc
movsl
popf
pop
repnz
rol
mov
inc
sub
imul
testb
xor
xchg
ja
inc
fdivp
pop
jbe
stos
jae
jb
ljmp
ljmp
mov
pop
popa
jmp
push
loop
pop
mov
mov
xchg
jg
ds
rorb
add
cmp
into
cwtl
stos
pop
insb
jne
aaa
mov
cmp
fwait
jmp
or
mov
jp
std
push
push
aad
sub
mov
ss
cmp
push
push
cmp
lcall
sbb
xor
imul
clc
pusha
test
das
mov
mov
out
cltd
fdivl
pop
dec
push
cld
cwtl
aaa
int3
dec
rcrl
dec
icebp
dec
inc
or
dec
lods
inc
sbb
inc
aam
adc
add
xchg
fdivrl
lret
popf
fs
mulb
inc
lahf
divb
out
mov
arpl
imul
insl
fcomip
out
mov
leave
mov
push
sti
xchg
and
mov
xor
jb
xor
data16
popa
jno
hlt
xorl
inc
jg
testb
pop
cmpsb
enter
fsqrt
sti
loop
fnstenv
clc
rcll
sbb
cmpsl
data16
dec
jge
and
mov
push
adc
xchg
in
aam
adc
sub
jns
mov
xlat
sbb
dec
loope
enter
cs
leave
mov
daa
sbb
arpl
mov
add
xor
fldenv
xor
fwait
cmp
or
cmp
xchg
pop
mov
push
inc
xchg
adc
pushf
mov
xchg
xchg
into
add
jp
add
sti
sar
out
test
dec
adc
fwait
pop
notl
ret
mov
inc
dec
dec
je
repnz
cmpsl
xchg
push
fdivs
xchg
cmc
out
jnp
test
push
add
push
pop
sub
stos
push
mov
mov
in
popf
mov
and
iret
add
adc
jg
stos
mov
sbb
add
add
clc
lods
jbe
cmp
jge
push
scas
clc
jmp
fwait
sub
cwtl
inc
xchg
clc
sbb
dec
imul
fnstenv
dec
cmp
mov
jne
push
movsb
push
mov
movsl
hlt
jne
cmp
xchg
sub
scas
cmpl
fucom
addr16
cmp
jl
lods
mov
mov
aaa
dec
loop
pop
and
adc
lods
or
dec
sub
je
pop
mov
test
lods
inc
lock
mov
mov
pop
mov
das
jo
ljmp
and
std
pop
ja
push
mov
sub
in
leave
lcall
xor
mov
out
and
dec
ljmp
cltd
mov
data16
cmp
add
cmp
sti
shll
xor
jle
push
lds
fbstp
pop
sahf
inc
xchg
jg
aaa
cmpsl
jb
xor
mov
leave
and
lcall
xchg
push
test
movsl
stos
xor
lret
out
imul
fsts
roll
add
ss
enter
pop
pop
popf
int
aaa
andb
fidivl
cmpsl
xchg
sbb
addr16
sbb
loop
sub
jnp
xor
divb
stos
loop
or
xchg
xorb
test
sub
inc
and
sti
xor
lods
cmp
andb
shr
int3
xor
sbb
push
aam
and
fildl
mov
cmp
movsb
push
std
lods
mov
cmp
mov
mov
mov
cmp
sub
enter
or
pop
repnz
xor
mov
jbe
lret
sbb
test
jge
shll
adc
pop
ds
out
enter
add
mov
adc
push
sbb
and
pushf
aad
mov
aas
fsubp
push
dec
push
addb
bound
and
sti
je
rcll
in
sub
subb
push
out
movsb
shr
mov
pop
aaa
test
test
push
xor
dec
lock
fucom
mov
fsubl
mov
xor
push
fnstsw
lcall
mov
mov
mov
lods
cmp
call
loop
cmpsl
cmc
sub
mov
cmpsl
push
imul
xchg
push
push
scas
jnp
xor
xor
mov
cwtl
xor
mov
or
mov
int3
rcl
movsl
inc
scas
push
mov
ret
or
movsb
mov
out
push
pusha
jecxz
not
xor
mov
push
pop
enter
xor
adc
cwtl
jl
nop
jns
lock
pusha
jnp
and
outsl
sub
mov
aam
out
int3
push
ret
sbb
ja
pop
imul
adc
push
sbb
xchg
sub
lock
push
cmp
jle
sub
push
jb
sar
and
cmpsb
sub
push
lds
sbb
sbb
test
inc
mov
mov
fsts
movsl
fistpl
in
or
mov
cmp
enter
and
mov
or
cmpsb
jp
push
test
inc
pushf
lds
nop
out
sbb
push
outsl
mov
cmpsw
es
sub
loop
js
or
sub
or
or
sub
mov
mov
dec
sbb
ret
push
sub
inc
push
inc
repz
push
push
mov
outsl
add
rorl
lret
clc
sub
lahf
fwait
cmp
mov
movsb
test
imul
insb
dec
push
mov
jno
popa
les
mov
dec
stos
xor
roll
addb
outsl
cs
adc
xor
and
mov
mov
mov
sarl
pop
inc
cmp
sbb
lcall
rcrb
push
or
sti
insb
ds
imul
rclb
or
lahf
push
or
inc
aas
clc
ss
cmp
mov
cmc
ret
ljmp
sbb
jae
shl
ret
jg
subb
sbb
rclb
sahf
pop
inc
sbb
clc
or
iret
sbb
dec
and
aam
lret
pop
mov
mov
jp
push
inc
lock
adc
pusha
pop
push
add
mov
shlb
sbb
inc
out
mov
sahf
adc
jg
inc
cld
mov
sub
inc
scas
scas
popa
xor
and
dec
cmp
mov
lret
pop
in
movsb
aas
mov
ror
and
in
push
mov
dec
aam
inc
sub
or
jge
dec
sahf
push
pop
pop
xchg
testb
xchg
mov
pop
insb
add
pop
mov
mov
sbb
ja
dec
and
add
lods
sahf
cmp
xchg
mov
cltd
rcl
das
pop
lds
cli
fs
pushf
or
adc
mov
xor
mov
movsb
shlb
xchg
lahf
sub
ds
lret
pop
cld
cli
daa
xchg
inc
orb
inc
mov
out
mov
pop
xchg
ss
dec
test
test
pop
xor
mov
sbb
mov
jp
test
xor
inc
cmp
jne
and
push
inc
shrb
mov
loop
mov
mov
push
cmp
sbb
dec
lock
cs
pop
in
inc
call
repnz
xchg
lea
je
rol
mov
rorl
xchg
imul
fldt
pop
xchg
repnz
pushf
inc
pop
and
ds
fsubrl
mov
add
andl
or
in
or
or
ja
fisttpll
or
adc
shl
shll
push
jecxz
jmp
and
inc
dec
push
pop
pop
out
mov
push
mov
mov
dec
insb
xlat
jno
andb
call
test
and
xchg
sbbl
rcrl
mov
inc
jp
mov
iret
mov
mov
mov
or
inc
aaa
gs
je
adc
cli
xchg
lret
fstl
cwtl
adc
insl
sti
stc
lock
mov
and
xchg
mov
ja
xchg
add
add
pop
stc
test
arpl
add
jmp
ret
push
xchg
mov
cltd
out
mov
les
lcall
jecxz
mov
xlat
cmpsl
fmulp
and
test
mov
push
insl
xor
jecxz
sbb
dec
mov
aas
mov
vmovdqu
mov
int
sub
scas
pop
leave
std
xchg
xor
cmp
addr16
lahf
push
add
je
out
cmp
repnz
mov
loop
adc
add
add
jo
test
into
mov
inc
push
xor
sbb
sti
inc
ret
add
sti
addr16
aaa
mov
mov
inc
out
aas
jb,pn
mov
and
push
jnp
fnstenv
add
add
mov
inc
xor
fwait
add
push
dec
nop
xchg
aas
cmc
insb
in
cld
push
sub
pop
cld
or
stc
test
mov
mov
sbb
xchg
dec
cwtl
push
out
vpsubusb
and
inc
dec
lret
cmp
mov
adc
jbe
adc
adc
adc
ljmp
jecxz
subb
leave
rolb
insb
in
xor
sub
sub
mov
sbb
insb
in
add
rclb
xor
sarb
mov
jns
mov
xchg
dec
repnz
push
push
loopne
push
xor
bound
sub
xchg
stos
out
shlb
inc
sarb
movl
out
ljmp
dec
ret
lock
mov
je
inc
mov
insl
jnp
and
mov
mov
in
call
clc
enter
xor
sub
rcrl
cmc
in
out
and
mov
pop
and
fsub
sub
inc
push
mov
not
adc
imul
adc
insb
daa
push
les
mulb
enter
loop
mov
mov
fadd
fidivs
push
mov
jne
aam
or
push
gs
int3
jg
push
xchg
pushf
cwtl
fwait
dec
insb
inc
shrb
dec
pop
nop
mov
pop
sub
call
mov
ss
add
mov
dec
pop
in
ficoml
lods
and
pop
pop
sbbb
mov
ds
adc
or
mov
or
cli
push
jns
dec
jns
cmpb
xor
or
iret
leave
stos
fwait
push
in
push
in
sbb
ret
lods
sub
sub
mov
and
stos
xchg
scas
lds
jnp
mov
int
adc
pop
lcall
mov
jne
loopne
jge
mov
inc
ds
mov
lahf
cmp
je
sub
fsubl
ja
fs
push
popf
lock
jp
push
movsb
lods
out
ja
outsl
lret
xchg
push
push
stos
je
push
int
arpl
std
movl
adc
pop
lcall
mov
sbb
cwtl
daa
scas
mov
hlt
jg
shll
fs
mov
xchg
rorb
mov
xchg
xchg
push
xor
addb
shl
imul
test
push
xor
add
lods
jns
rolb
out
mov
mov
inc
pop
addr16
stc
in
out
mov
mov
or
mov
and
lods
pop
ret
dec
or
pop
out
adc
and
mov
int3
outsl
pop
test
push
mov
jecxz
xor
cmp
divb
pop
jmp
xchg
test
adc
fnstsw
stc
sub
cli
jne
repnz
dec
sarb
mov
fldt
lret
push
push
dec
pop
pop
aaa
jns
pop
jb
add
call
loop
mov
mov
pop
lret
cld
ds
ja
sub
mov
bound
fsubrs
sahf
out
dec
cs
rcl
sub
js
mov
lods
popa
outsb
cmp
dec
mov
jo
shll
orl
cmp
int3
xor
xchg
cli
inc
adc
add
adc
fmuls
or
lods
outsb
jo
fmuls
jle
xchg
fildl
dec
test
push
pop
sub
push
icebp
sbb
repz
stos
ljmp
jne
movsl
cmpsb
adc
in
unpcklps
lret
ljmp
add
in
xor
jg
mov
movsl
xlat
loop
imul
test
sub
or
mov
popf
jp
stos
sub
mov
pushf
xor
jo
fimuls
push
xchg
loopne
mov
xchg
ss
sub
addb
iret
clc
dec
mov
cmpsl
dec
and
pop
xchg
dec
das
bound
int
pop
test
lock
dec
push
xchg
stos
outsl
subl
test
adc
dec
xorb
lea
push
mov
gs
jecxz
filds
stos
pop
fisubs
xchg
cmp
pop
loopne
xor
jge
cs
mov
pextrw
cmpsl
push
xor
dec
sbb
push
mov
cwtl
sbb
sub
fldl
aad
jle
mov
sbb
in
push
jecxz
xor
add
mov
mov
pop
leave
or
stos
cs
movsl
das
jl
hlt
ja
outsl
in
adc
jno
inc
repz
nop
mov
inc
xchg
andl
rcr
and
xlat
inc
in
xlat
xor
data16
mov
pop
fbld
pusha
js
inc
test
xchg
ret
inc
lahf
xchg
sub
xor
iret
dec
xor
sbb
popa
test
aas
jne
cmpsl
aad
test
flds
xor
test
nop
ficoml
sub
mov
int
scas
add
addr16
repnz
fmuls
int
orl
jbe
push
dec
mov
loope
add
scas
mov
and
sbb
pushf
insb
pusha
bound
add
xchg
dec
out
or
sub
test
inc
sbb
je
push
mov
xchg
jecxz
cwtl
in
push
lret
jbe
out
leave
push
pop
scas
inc
mov
inc
jae
xor
sub
mov
pop
iret
icebp
loop
sarl
into
mov
fists
sub
lds
cmp
push
add
cltd
cli
mov
rcrb
and
ss
fstl
mov
pop
push
mov
jae
je
xor
jmp
aas
xor
test
add
add
pop
mov
xchg
sub
xchg
clc
dec
jp
lods
cmpsb
mov
movsl
out
xlat
cltd
xor
sub
dec
jbe
pop
adc
mov
mov
call
je
imul
xchg
stos
mov
push
mov
inc
xchg
adc
cmp
xchg
cmp
xchg
sti
aas
outsb
out
push
lods
sti
dec
jbe
pop
mov
cmp
inc
fists
lock
push
mov
cmp
mulb
xor
mov
adc
and
ret
jp
mov
aaa
cmp
mov
sbb
into
xchg
pop
and
add
aad
pusha
cld
jne
test
in
test
add
outsb
pop
add
push
mov
cmp
popa
iret
cmp
push
sub
push
mov
in
jecxz
sbb
or
mov
sahf
dec
xchg
push
filds
sbb
push
dec
pop
imul
orl
jo
insl
cli
data16
pushf
or
push
mov
mov
push
lret
mov
jbe
sub
mov
outsb
jle
pop
pop
mov
insl
adc
jae
cwtl
mov
cmpsl
ss
test
and
icebp
jae
xchg
lret
push
fcoms
add
iret
cmpl
lahf
cmp
dec
imul
push
dec
in
rolb
arpl
in
sub
das
add
push
cli
insl
mov
mov
pavgb
mov
push
mov
mov
dec
clc
or
lret
out
fcomps
mov
mov
xchg
sbb
int
mov
movsb
cld
sub
cld
imul
mov
dec
xchg
push
xor
push
adc
loope
sbb
xor
dec
fstps
adc
mov
outsl
cmp
rcrl
adcl
cmc
push
lock
mov
xor
test
pop
xor
clc
dec
or
sub
aam
shll
pop
pop
xchg
les
fidivrl
enter
mov
sti
jge
jns
popf
arpl
loop
ja
mov
insb
mov
lods
cs
and
out
xor
data16
into
push
dec
sti
les
lret
inc
cld
ret
mov
enter
inc
imul
push
ljmp
add
and
xchg
push
clc
repnz
jno
cmp
dec
mov
aam
inc
imul
jmp
mov
test
dec
out
cmp
repz
and
pop
je
cltd
push
test
in
pop
in
pusha
xor
arpl
call
adc
pop
sub
push
push
mov
adc
es
lds
pop
pop
or
lret
gs
popa
ret
xor
mov
push
sbb
sbb
push
add
pop
cwtl
jmp
sub
push
mov
sub
in
sub
or
repz
fisttpll
test
xchg
test
sbb
leave
mov
push
or
imul
xchg
mov
dec
mov
dec
pop
sub
call
arpl
mov
je
push
sub
push
xchg
ret
shr
ror
mov
repz
mov
jb
iret
shr
or
mov
dec
xchg
js
mov
sar
aas
cwtl
popa
adc
dec
hlt
push
dec
jae
jne
dec
in
mov
rcrl
repz
or
scas
push
stc
in
push
je
je
dec
xor
into
cmp
ds
jmp
jnp
iret
sbb
call
dec
in
dec
cs
mov
push
add
cmc
in
inc
and
lcall
fldcw
xchg
mov
pop
popa
dec
xor
and
in
dec
mov
dec
mov
int
push
xchg
scas
or
orl
movsb
aas
hlt
daa
loopne
add
cmovbe
arpl
lods
dec
cmp
mov
inc
lcall
inc
sub
jns
mov
out
sahf
mov
ret
int3
and
or
mov
or
xor
ja
sti
test
enter
mov
or
es
dec
lahf
jne
pop
add
bound
push
mov
dec
push
subb
lock
cmp
ret
sbb
cld
add
or
sub
cltd
bound
pop
loopne
stc
jmp
push
loopne
or
int3
fimull
mov
daa
jl
daa
gs
lods
nop
push
cmp
add
xchg
cli
call
jmp
mov
icebp
sbb
cmp
ret
cmpsl
or
test
mov
mov
xor
sbb
pop
cmp
push
pop
push
jmp
call
stc
mov
push
lods
in
das
inc
shl
imull
push
ja
scas
sbb
and
shrl
stos
leave
test
es
adc
dec
das
ljmp
stos
fisubs
or
inc
cli
dec
rorl
js
ret
pop
dec
xchg
nop
int
jno
and
adc
add
sarl
push
mov
mov
jmp
inc
mov
cmp
xchg
fdivrl
jl
mov
jp
aad
mov
lcall
adc
ds
adc
out
pusha
dec
popf
or
push
fldz
mov
ja
rsqrtps
dec
mov
or
sbb
fs
mov
dec
mov
sbb
sti
or
out
push
iret
adcb
lahf
xchg
loope
mov
int
xchg
or
sub
add
iret
das
xor
fcoms
aam
inc
shll
inc
cs
xchg
movsb
inc
dec
mov
cmp
add
jnp
cltd
pop
repnz
scas
adc
mov
xchg
cmpsl
leave
and
push
out
std
mov
sbb
mov
imull
xchg
fdiv
or
test
lret
into
lret
out
pop
fidivrs
xchg
outsb
arpl
mov
and
fldcw
sub
je
mov
push
cmp
test
mov
dec
push
inc
pop
push
test
mov
sbb
sub
mov
sub
dec
dec
add
leave
xor
cmpb
scas
test
adc
or
xchg
cmp
xchg
mov
sub
pop
int3
jle
in
xor
push
xor
outsl
cmp
ss
sub
stc
adc
sub
in
popf
iret
xchg
cs
sbb
or
inc
hlt
or
daa
inc
dec
js
movsl
push
jg
aad
inc
nop
mov
arpl
xchg
shrb
test
icebp
sbb
push
mov
push
divl
mov
mov
enter
dec
sbb
adc
repz
lret
push
sbb
jp
daa
pop
add
shll
scas
adc
jp
dec
in
mov
pop
out
pop
xchg
mov
sub
std
cwtl
xor
fsubp
or
bound
sbb
sbb
sub
mov
fists
push
cwtl
xor
cs
subl
dec
or
and
rorl
ficoms
cmpsb
push
andb
test
nop
cmpsl
dec
push
push
shrl
or
add
push
adc
int3
inc
in
jno
inc
xor
ljmp
adc
cmpsl
inc
add
enter
cs
sbb
icebp
add
mov
jg
fists
sub
add
add
jno
pop
mov
int
movsl
mov
sub
lret
sbb
aam
xor
push
fcos
sub
adc
xor
mov
dec
inc
stos
imul
jge
adc
out
sub
sbb
add
stc
hlt
sbb
adc
mov
aam
or
xchg
and
mov
jne
push
aas
or
adc
loop
loop
cmp
lcall
jb,pn
dec
rorl
mov
pop
or
icebp
xchg
cmp
mov
adc
mov
cltd
adc
clc
xchg
jp
sbbl
stc
xor
or
jne
and
pop
pop
dec
push
or
or
jo
data16
fisttpl
mov
mov
nop
pop
mov
inc
lahf
notb
call
xlat
mov
stos
call
aad
sahf
cmp
lret
xor
cmp
hlt
mov
dec
inc
pusha
jl
pop
hlt
inc
divl
nop
cwtl
mov
jmp
mov
stos
divb
pop
fwait
mov
lea
cltd
adc
xchg
les
in
scas
imul
fistps
jb
enter
imul
stc
mov
xor
es
movsb
das
sbb
enter
inc
pusha
mov
mov
add
pop
mov
mov
lods
dec
outsl
push
in
xchg
scas
pop
stos
and
frstor
adc
sbb
mov
std
ficompl
mov
stos
stos
sbb
divb
cwtl
xor
mov
js
inc
leave
cltd
or
pop
sub
adc
dec
setnp
das
jecxz
std
add
fs
cmp
icebp
je
push
adc
mov
pop
add
jb
enter
fisttpll
cli
pop
sahf
js
insb
inc
hlt
jl
jb
lds
mov
shlb
movsb
aam
push
xchg
sub
ss
mov
insb
jmp
in
insl
js,pt
inc
pop
aam
icebp
mov
xchg
cld
sbb
ss
pop
loop
mulb
fadd
mov
js
loope,pt
std
xchg
lcall
test
jbe
rcrl
mov
mov
addl
mov
lahf
push
dec
addr16
in
xor
ja
and
xchg
or
pusha
das
imul
add
jno
pop
das
outsl
jno
mov
gs
jge
add
jmp
popa
stos
jo
jns
sbb
mov
mov
cltd
xchg
cs
leave
negb
sub
mov
sbb
fdivr
xor
lods
sti
fcoms
ljmp
cmp
fstps
filds
and
xor
jnp
xchg
xchg
jbe
lahf
cmpsl
aad
add
mov
xchg
sbb
cli
pop
repnz
xlat
xchg
test
shrl
xchg
mov
and
repz
stos
jb
inc
cmp
push
fisubl
push
adc
imul
pop
nop
push
mov
cs
subl
in
sbb
dec
stos
leave
js
cmp
lds
xchg
xchg
in
push
and
rorb
pushf
inc
fcmovne
inc
inc
mov
mov
mov
lea
ret
in
sub
sti
fsub
mov
push
aas
adc
lock
jecxz
js
es
pinsrw
add
orl
xor
in
outsl
xchg
or
daa
adc
mov
xor
xor
in
push
daa
rorb
cs
mov
movsb
inc
sbb
enter
clc
sbb
jg
xchg
mov
sbb
pop
sub
mov
mov
jmp
xchg
jmp
push
mov
ljmp
cmp
cli
push
or
int
jle
xchg
pop
or
call
dec
js
xor
fildll
scas
jl
sbb
jbe
ljmp
pop
push
sub
test
shlb
and
inc
lods
or
out
jmp
rcr
pop
cld
cli
pop
int
xor
inc
dec
fwait
imul
mov
mov
mov
pushf
pop
jmp
xor
rolb
sub
pop
lret
pop
inc
inc
or
push
daa
insl
daa
fldenv
js
mov
cmpb
xor
or
iret
sbb
int3
xlat
lock
les
out
cmpb
push
sbb
loop
ficoml
out
shll
and
inc
push
pop
loop
xchg
and
fiaddl
mov
push
fildl
cmp
mov
xor
aas
push
push
ss
jnp
into
addr16
cmp
cmp
mov
xor
std
jge
ds
cs
mov
jb
cmp
add
hlt
and
adc
in
dec
outsb
sub
and
pop
jnp
popf
mov
jmp
cmpsb
leave
mov
xchg
dec
aaa
sbb
std
dec
and
jmp
sub
int3
stc
or
add
dec
xchg
hlt
xchg
scas
adc
nop
mov
mov
scas
sbb
xchg
sub
add
lods
jae
aam
dec
add
push
jecxz
lcall
test
pop
xor
stc
pushf
lock
mov
ret
xchg
bound
fisubrs
fldcw
jo
inc
push
or
stos
add
lcall
xchg
mov
jp
mov
fisubl
in
add
orl
mov
enter
push
or
out
xor
mov
pop
das
xchg
add
sbb
leave
mov
push
pop
xor
dec
jp
nop
aam
xor
mov
cltd
in
lock
sbbb
jnp
hlt
mov
push
aas
ja
push
daa
arpl
inc
aaa
arpl
test
xchg
mov
aaa
inc
stos
cmc
rorl
cmpsb
cli
sbb
mov
mov
cmp
pop
mov
shrb
inc
lods
mov
jnp
cmc
loop
cli
cmpsl
mov
jl
sub
and
imul
je
fs
jnp
pop
scas
inc
gs
mov
call
pop
lods
lret
fdivs
sbb
sub
adc
cmpb
test
sbb
cmpsb
fsubrl
divl
adc
xor
sub
mov
cmc
clc
adcb
les
fcmove
xor
mov
cli
imul
adc
adc
and
mov
xor
mov
or
jl
lds
dec
idivl
xor
adc
push
addr16
fwait
inc
rcrb
pop
into
push
daa
in
cmpsb
adc
loop
aam
dec
adc
add
push
lea
sti
pop
lods
into
fisttpl
jg
dec
push
popa
daa
add
outsb
pop
add
les
subb
mov
mov
push
cmp
int3
and
sbb
fadds
lock
dec
mov
daa
daa
mov
sbb
icebp
jg
lods
pop
in
aaa
pop
bound
lret
lret
dec
loop
mov
adc
jmp
out
jmp
out
mov
shll
pop
test
out
lods
sub
call
adc
xchg
xchg
inc
rorl
sbb
and
xor
out
ja
int
xor
lcall
sti
mov
jns
pop
or
or
sbb
mov
jne
ret
enter
loope
adc
daa
fisttpl
mov
outsb
and
pop
flds
iret
xchg
dec
imul
out
pop
dec
mov
push
jge
ja
loope
int
fistpll
jb
adc
mov
push
adc
mov
mov
push
push
pop
addr16
leave
pop
loope
enter
shrd
fwait
lock
sbb
fwait
testl
aam
adc
jmp
nop
add
repz
test
testl
in
inc
or
add
push
imul
shrl
ret
hlt
bound
stos
test
scas
cld
xchg
dec
iret
sahf
loope
xchg
mov
jno
push
dec
push
pushf
mov
rorl
scas
stos
inc
mov
xchg
ss
cld
pop
mov
jecxz
lret
inc
xor
in
fidivs
sub
ljmp
sahf
cli
clc
sahf
pop
pop
or
cmp
stos
aad
cmp
rcll
add
cmp
lret
mov
push
sub
add
push
xchg
cmp
sub
mov
xor
inc
xor
sub
fisttpll
push
jo
dec
nop
dec
sbb
iret
push
scas
adc
sub
ljmp
and
popf
cmp
stc
inc
loope
xchg
out
loope
test
outsl
das
push
out
push
cmp
sbb
loope
pop
in
sti
pop
push
lea
cmc
mov
out
cltd
add
push
out
bound
in
cltd
fdivrs
stc
lock
insl
aam
cmp
dec
fwait
ss
clc
pop
xor
jne
mov
mov
xor
pop
add
mov
inc
dec
xor
cmp
jnp
mov
loopne
xor
lea
jge
and
ret
xchg
icebp
xchg
lock
adc
lcall
adc
dec
cmc
test
inc
out
sub
xor
and
ret
inc
scas
mov
je
jmp
or
pop
repz
popl
lods
int3
les
pop
stos
add
pop
mov
xchg
sub
sbb
and
movsb
in
jne
out
pop
out
pusha
pop
inc
push
stos
subb
cs
jnp
push
add
cmp
pop
mov
pop
xchg
pop
ds
push
std
cmp
fiadds
sub
or
iret
call
push
popf
std
out
test
in
iret
xchg
lahf
push
bnd
repz
inc
push
add
dec
sbb
inc
mov
cltd
jl
jnp
mov
dec
imul
inc
repz
pop
adc
dec
and
das
shrb
test
ret
aam
xchg
dec
add
pop
out
dec
push
in
inc
clc
pop
cmpl
jae
adc
or
mov
cmp
dec
js
push
imul
inc
and
stos
out
clc
les
inc
pop
and
push
xor
push
out
les
mov
push
in
push
in
scas
es
adc
imul
mov
mov
mov
cmc
ret
gs
shl
sub
adc
xchg
adc
xchg
cmpsl
mov
dec
and
scas
mov
inc
push
jl
push
hlt
pop
add
aaa
icebp
xor
xchg
pop
push
mov
cmp
push
push
jle
adcl
ljmp
or
mov
and
push
adc
repz
das
mov
into
dec
bound
lret
sbb
cwtl
pop
cltd
je
or
pop
mov
and
leave
imul
xchg
pop
mov
mov
movsb
sbb
repz
fildl
je
jbe
ss
mov
int
inc
sub
cmp
adcl
sahf
adc
xchg
jns
nop
add
pop
out
xor
sub
lret
push
pop
das
adc
out
repz
fimuls
cmc
push
mov
xchg
cmp
mov
mov
jp
mov
iret
int
and
imul
insl
test
dec
xchg
push
pop
sub
loop
adc
add
repnz
push
inc
pop
adc
xchg
xor
sahf
add
ja
rcll
hlt
mov
es
adc
faddp
inc
into
lcall
in
pop
mov
push
insl
mov
lahf
cmp
loopne
cli
ss
add
pop
push
stc
jae
xchg
xor
mov
mov
push
cmc
mov
jg
pop
fldlg2
mov
jmp
nop
stos
jne
dec
dec
mov
es
insb
mov
add
icebp
addr16
clc
lods
aaa
jmp
ds
sub
pop
add
out
xchg
push
outsb
jmp
imul
ds
mov
sub
into
hlt
leave
out
xchg
xor
pop
cs
mov
push
and
lret
jp
xor
ss
and
dec
push
xor
inc
out
lock
testl
or
xchg
sbb
cld
jecxz
jb
lods
ss
cmp
lcall
loope
xchg
std
bound
sbb
ja
xor
xor
add
lds
out
xchg
xchg
mov
cli
or
add
addr16
mov
lahf
jecxz
pop
sbb
repz
pop
out
pushf
insl
rorb
pop
pop
sbb
or
pop
js
push
mov
loop
daa
inc
sti
mov
dec
jg
hlt
test
mov
jl
mov
xchg
out
addl
xor
xchg
aad
shr
jl
or
xchg
out
shl
pop
xor
pop
lahf
xor
ljmp
or
inc
inc
call
stos
ja
addr16
gs
or
cli
pop
stos
and
scas
and
mov
pop
lret
jp
pop
xchg
lds
mov
sarb
stos
or
xor
ret
mov
sbbb
js
push
fmull
dec
jecxz
imul
mov
insl
icebp
loope
iret
js
fwait
dec
sub
adc
sub
daa
rcr
and
in
cmp
or
in
lcall
pop
add
jecxz
cmpsb
adc
mov
test
xorb
outsb
pop
add
popa
inc
cli
daa
shlb
pop
sbb
gs
ss
dec
sub
stos
cmpsb
stc
idivl
xor
scas
mov
xor
pop
ljmp
mov
leave
xchg
popa
sub
repnz
int
dec
fdivl
iret
mov
icebp
jg
ljmp
fbld
arpl
cwtl
mov
add
es
mov
das
xchg
cmpsl
sti
data16
and
mov
pushf
sbb
ja
mov
dec
sub
xchg
pop
imul
iret
jmp
sub
xor
add
xor
shr
and
aaa
dec
pop
in
and
pop
xchg
cmc
pop
js
push
rcll
pusha
and
cmp
loope
repz
lret
repnz
inc
imul
inc
inc
xor
leave
sbb
mov
xchg
xchg
xor
mov
sbb
mov
inc
ljmp
cmp
call
push
jl
sbb
sbb
inc
icebp
xor
lods
cwtl
popf
insb
sbb
lock
push
cmc
mov
icebp
add
bnd
and
mov
push
scas
adc
pop
lods
or
inc
es
ror
leave
inc
sub
int
xchg
das
cmpsb
dec
jle
xchg
icebp
or
xchg
inc
mov
aad
insl
fldt
mov
cli
inc
add
adcw
or
out
popf
cmp
mov
xor
sarl
mov
ss
lret
sbb
inc
push
bound
loopne
push
lock
push
lahf
cmpsb
lcall
jbe
repnz
mov
add
and
push
ds
xor
out
or
mov
cmc
dec
xchg
cmc
cmp
lods
mov
mov
pop
mov
xchg
sub
shr
xchg
fistl
dec
xchg
test
scas
xor
aas
rorl
into
mov
mov
popa
cwtl
inc
or
mov
mov
stos
insl
sub
inc
test
jne
dec
xlat
fcomps
inc
push
iret
pop
add
xchg
mov
mov
push
pushf
add
mov
xchg
or
aas
cmp
jbe
dec
loop
xchg
sbb
test
inc
dec
mov
push
xor
lods
push
or
xor
xor
daa
xor
lahf
loope
out
ljmp
stc
pusha
sub
jo
mov
mov
jne
fsts
mov
push
pushl
push
mov
sbb
cltd
and
in
jns
dec
sbb
iret
xor
fists
dec
mov
pushl
pop
insl
jb
addr16
arpl
data16
inc
das
ret
xchg
lock
dec
out
out
loopne
push
cmp
leave
cld
std
inc
into
or
push
fistpll
mov
jmp
dec
inc
sub
mov
pushf
dec
fiadds
xchg
push
lahf
je
arpl
cmpsb
fisttpll
xor
icebp
push
es
stos
sbb
dec
sarl
cltd
pop
push
bnd
sbb
inc
sub
jb
sub
gs
es
or
insb
shlb
icebp
cmp
inc
out
sub
hlt
fstpt
jp
lret
addr16
fs
xor
adc
jge
adc
inc
loop
and
mov
outsl
and
icebp
data16
push
or
xchg
push
add
sbb
jg
pop
insb
das
mov
fsubl
sbb
xchg
aad
test
push
xor
repz
mov
stc
inc
dec
aam
nop
or
aas
psubw
dec
daa
and
push
stos
jnp
rorl
ret
mov
mov
pop
push
xchg
jl
inc
mov
loop
iret
adc
in
mov
mov
adc
ljmp
inc
inc
enter
pop
or
or
aad
adcl
sti
in
hlt
push
push
cld
inc
popa
sti
push
lret
shl
push
mov
pop
jbe
dec
cwtl
sahf
jg
xchg
in
sar
xorb
rcrb
dec
aas
test
aad
jnp
mov
nop
gs
xchg
sub
jb
pushf
inc
test
push
or
hlt
shlb
or
in
inc
or
into
xor
je
loopne
lahf
jecxz
mov
sub
inc
out
xor
dec
insl
xchg
push
jmp
int3
test
and
insb
sub
or
pop
pop
pusha
imul
fcoms
cmp
sarl
sub
aas
sbb
mov
ljmp
mov
ljmp
lahf
ss
lret
aam
ret
add
stc
repz
add
ret
das
or
cmp
add
pusha
or
repnz
dec
lods
ljmp
test
pop
dec
jl
and
icebp
push
addr16
cmp
popa
or
in
gs
pop
mov
stc
adc
das
lcall
mov
in
sub
daa
rclb
push
lcall
or
into
cmpsl
cmp
lods
pushf
js
ja
xchg
push
push
movsb
sbb
xabort
xchg
inc
dec
stc
xor
call
xchg
js
or
jne
daa
sbb
in
mov
fs
inc
inc
mov
xor
fisttps
out
or
mov
add
lahf
mov
sbb
inc
cltd
mov
adc
jnp
mov
pop
xchg
insb
mov
xor
fimull
cmp
push
and
adcl
shrl
je
dec
lods
not
and
insb
popa
add
push
sub
mov
add
iret
mov
sahf
adcb
ret
dec
and
fcompp
jl
sti
js
insl
sti
mov
and
or
sbb
pop
xorl
inc
dec
jae
mov
or
adc
fsubl
lahf
out
mov
les
push
jle
addr16
cmp
xor
jno
lret
decl
insl
add
fistl
xchg
mov
inc
or
mov
sbb
mov
push
aad
sbb
js
test
jnp
popf
leavew
sbb
aam
mov
or
cmp
cmp
push
add
test
add
or
aaa
jne
xchg
iret
xchg
xchg
push
movsl
je
jmp
cmp
jbe
imul
pop
in
jecxz
outsb
test
jnp
cs
push
ja
mov
push
jmp
pop
or
outsb
dec
icebp
insb
xor
jecxz
push
push
mov
dec
sbb
mov
loope
es
addb
push
cmp
push
sub
stos
inc
cmp
lahf
mov
aam
js
dec
xchg
leave
loopne
push
mov
cmp
mov
jb
pop
dec
mov
je
es
inc
xor
and
push
enter
stc
push
test
popa
loop
jnp
iret
sti
push
inc
push
dec
sbb
fs
mov
add
add
insl
les
mov
jae
push
fiadds
outsb
pop
add
inc
xchg
add
fistpl
inc
ljmp
ja
push
mov
xor
sbb
mov
fs
cmp
jne
xlat
mov
cmp
sub
mov
mov
fidivrl
mov
jg
inc
xor
or
std
lret
ret
dec
or
jle
enter
mov
mov
and
ss
mov
mov
cwtl
loop
sub
push
stc
inc
jle
mov
inc
fildl
or
jo
mov
cmpsb
add
add
push
cmp
push
repz
pop
sub
mov
and
daa
movsb
jg
sub
jmp
in
dec
mov
sarb
imul
enter
push
in
int
sbb
div
push
push
imul
jnp
jmp
mov
lret
mov
dec
jg
in
fsubl
or
inc
pushl
mov
inc
cmp
aad
adc
lahf
sub
cmpb
add
sub
xorl
mov
add
xchg
jle
inc
in
shrl
cmp
pushl
testl
mov
dec
shll
mov
jnp
scas
out
mov
mov
jo
sub
outsb
fsubrs
or
jg
jecxz
xchg
stos
xor
scas
pop
hlt
subl
inc
fistpll
int3
pusha
or
mov
xchg
nop
stos
mov
test
test
aad
stos
mov
lret
rolw
jns
and
pop
daa
test
repz
and
inc
cmp
in
iret
pusha
inc
scas
and
cld
ss
dec
pop
lcall
enter
pop
add
fsubr
cmp
loopne
push
push
mov
sbb
stos
ss
sub
push
andl
lds
and
sbb
inc
lret
jnp
mov
mov
popa
mov
xor
lods
iret
cmpsb
loope
xchg
jp
imul
outsl
cmpsb
mov
push
push
insb
adc
pop
xchg
push
repnz
push
cmp
xchg
mov
inc
pop
inc
cmp
xor
mov
aaa
add
int
mov
jae
inc
mov
ljmp
dec
push
cmp
es
ret
xchg
pusha
cs
imul
pushf
ljmp
int3
daa
in
scas
popf
and
je
fildl
push
add
sbb
mov
iret
and
inc
adc
xchg
loope
or
cli
lods
xor
mov
scas
pop
daa
mov
xor
push
and
mov
jge
pusha
xchg
gs
jbe
out
stc
fmuls
subl
test
fisubs
iret
push
inc
mov
push
scas
inc
xor
loop
pop
pusha
xchg
sub
repz
popf
popa
dec
mov
movsl
push
dec
xchg
dec
pop
bound
repz
jle
stc
sbbb
fisubrl
xchg
inc
add
cmpb
mov
xchg
mov
out
outsb
insb
mov
inc
pop
testl
ja
cmp
pop
loop
jmp
ss
and
jo
dec
arpl
add
rcl
add
cltd
ret
jle
mov
divb
into
inc
cmp
ret
cwtl
pop
jmp
scas
xchg
mov
lock
in
push
aaa
fwait
jno
das
sbb
bound
and
pop
mov
addl
jl
cmp
xor
or
clc
gs
inc
es
std
sbb
jl
mov
push
push
shlb
out
push
mov
fwait
lcall
pop
fdivp
in
aam
imul
mov
or
jo
jp
xchg
inc
enter
pop
jb
cltd
mov
outsl
enter
sub
adc
jge
inc
clc
xlat
xor
popa
mul
jnp
pop
outsb
or
stc
enter
pop
int3
mov
xor
add
fcomps
outsb
mov
cs
mov
or
insl
enter
or
addr16
dec
insb
fsts
mov
and
pop
sub
bound
aaa
xchg
lea
pop
add
cwtl
add
xor
inc
imul
xchg
or
aam
test
les
nop
xor
push
shrb
test
test
data16
dec
adc
aad
shr
jae
fstpl
sub
push
lret
push
negb
inc
dec
inc
inc
or
cmp
loop
push
fistl
insb
div
add
fwait
aaa
repnz
in
jp
xchg
and
cmpsl
pop
notb
pusha
mov
int
cltd
pop
int3
aam
dec
xchg
push
xchg
push
and
mov
aam
les
mov
punpckldq
divl
negb
and
negl
dec
xor
cmp
popf
sti
enter
cmp
or
push
mov
imul
mov
in
pop
mov
pop
sbb
push
xor
std
mov
gs
test
aad
pop
adc
jns
rclb
iret
xchg
jo
push
sbb
jo
popa
dec
notb
xchg
jmp
jo
sub
push
mov
pop
xchg
clc
mov
inc
in
leave
push
mov
test
popa
inc
je
fisubrl
inc
sub
mov
jo
xor
fisttpl
cs
jno
cmpl
pop
xchg
xchg
ljmp
jne
cmp
pop
cmp
inc
stc
idivl
jp
push
in
mov
jg
cmp
clc
add
jb
sarl
xchg
cmc
cwtl
rorl
int
data16
or
bound
addl
dec
shlb
shll
nop
sarl
insb
mov
and
and
jge
sub
pop
nop
push
mov
in
mov
rep
scas
mov
adc
mov
xor
mov
icebp
outsb
in
jne
inc
aam
adc
jmp
inc
daa
out
das
cmp
nop
xor
inc
mov
dec
sti
sub
xlat
imul
call
adc
mov
pop
mov
js
push
popf
mov
xchg
aad
imul
in
mov
movsl
test
int3
mov
test
add
ljmp
ljmp
push
dec
sub
xchg
jecxz
in
mov
push
add
pop
or
test
sub
jp
fs
sbb
push
cmpsl
or
push
scas
add
or
mov
dec
das
adc
adc
add
mov
sbb
add
inc
shlb
pop
cmpsb
fsubs
shrl
or
imul
xor
dec
cmp
jbe
sub
inc
les
hlt
add
and
out
mov
inc
ds
stos
cmp
add
push
fisttpll
movsb
jmp
jmp
leave
jl
push
cwtl
mov
jae
andl
in
xor
pop
js
mov
test
dec
pop
xchg
pop
jmp
imul
or
clc
and
cs
iret
test
ret
fistps
xor
in
cmp
xchg
loopne
pop
or
arpl
sub
cmp
sub
mov
out
pop
out
fmuls
jns
cmpsl
push
push
xor
movsl
sarb
cmpsl
stos
rcrb
js
pop
popa
sub
mov
push
addl
or
sub
movsl
push
mov
je
rcll
add
mov
daa
rol
xor
or
int
cmp
popf
lods
xor
add
nop
cmpsl
ss
mov
shlb
insb
mov
pop
addb
jmp
ljmp
dec
sub
ss
pop
push
out
pop
test
outsb
push
inc
mov
test
jl
scas
addl
mov
or
cmp
dec
jmp
ret
and
cmpsb
shl
out
xor
repnz
xlat
imull
jmp
inc
and
cld
xor
movsl
pop
pop
mov
test
and
mov
inc
fcoms
fsubs
dec
pop
cmp
js
sub
jp
push
mov
push
and
and
pop
mov
xchg
add
xchg
popf
dec
xor
jmp
int3
lods
aaa
rcrb
inc
sbbl
xchg
xchg
dec
andl
dec
add
rclb
or
sbb
mov
xchg
idivl
fisubrl
insb
pushf
sbb
lock
cmpsb
aad
pop
jl
outsb
add
je
or
stos
mov
lds
pop
sub
mov
std
cltd
dec
mov
enter
jno
scas
jge
mov
push
lods
les
mov
mov
sarb
pop
nop
lea
or
xchg
call
lea
or
jno
rcrb
sarb
jmp
mov
bound
dec
add
mov
loop
and
in
hlt
push
dec
add
ret
jae
stos
inc
cmpsb
inc
addr16
into
imulb
push
rcrb
dec
xchg
cmp
loop
movsl
popa
lods
push
test
lock
jae
sub
out
xchg
shrb
adc
std
sbb
push
ds
inc
and
mov
inc
movsl
nop
adc
cmp
xchg
jae
mov
bnd
or
jae
addr16
inc
push
jo
or
mov
jg
stc
jo
fildl
rcrl
inc
js
dec
pushf
dec
scas
roll
cmpsl
jl
cmp
xor
lea
sub
mov
xor
mov
inc
imul
js
dec
ljmp
inc
sub
imul
jbe
mov
mov
push
into
inc
sbb
aas
gs
loope
fidivrl
xchg
mov
mov
stos
and
cmp
jp
out
out
addr16
and
int3
imul
xchg
cmp
inc
lock
xor
sub
mov
jb
push
sbb
insb
cmp
and
popf
mov
cmp
mov
ja
cmp
dec
xor
orl
loope
insb
xlat
xlat
xchg
rclb
fst
xchg
cmp
or
cmp
mov
push
pop
jb
pushf
dec
add
sbb
lods
mov
js
xchg
loopne
xor
cs
or
push
lret
jo
icebp
adc
mov
sbb
sarl
scas
repz
xchg
sub
call
pop
pushf
cld
xor
pop
lea
pop
ds
mov
stc
hlt
test
jne
leave
es
aam
ds
dec
mov
jl
pop
lds
pop
xor
out
or
jns
or
xor
int3
out
xchg
dec
fwait
or
cmpsl
lcall
dec
or
lahf
jb
leave
mov
mov
add
shl
dec
mov
loop
dec
imul
mov
subb
cmpsl
adc
ljmp
loop
add
aaa
dec
ja
inc
movsl
into
sub
xchg
lods
or
add
jne
xor
pop
mov
add
sub
fsubp
sub
fwait
sub
mov
ret
mov
dec
add
sbb
shr
xchg
or
mov
hlt
insl
mov
ret
sub
fwait
into
pop
roll
je
mov
pop
xchg
es
sti
cmpsb
outsl
shr
adc
lock
xchg
es
cli
inc
negb
loope
xchg
sub
inc
adcl
or
or
fsts
jg
xor
dec
cli
fidivrl
fiadds
in
imul
sub
add
and
add
push
dec
adc
xchg
nop
cmp
insl
and
ja
int3
bound
shll
popa
idivl
inc
js
push
add
sbb
rcrb
jno
jbe
cli
adc
cmp
movsb
mov
cmp
outsb
xchg
dec
sub
aam
fists
and
movsb
xor
jmp
cmc
aas
repnz
jl
xchg
jne
pop
xor
loopne
sbb
addl
jp
loope
sub
jae
xlat
push
cltd
inc
mov
aam
inc
stos
inc
dec
addr16
sub
and
pop
sub
cwtl
lds
adc
mov
cmc
xchg
cmp
pop
adc
adc
push
xchg
mov
ja
and
mov
inc
out
or
pop
insb
aas
es
and
jp
xchg
and
int3
aaa
jecxz
ljmp
ds
das
lods
mov
test
das
mov
stc
out
imul
into
add
jg
add
fsubrs
ret
jbe
sub
clc
je
popf
xorps
pop
or
repz
cld
push
inc
outsb
cmpxchg
ss
jno
hlt
mov
aam
sub
inc
icebp
in
leave
cmp
adc
clc
lea
dec
icebp
sub
fsubl
add
or
xor
fs
cmpsl
push
mov
loope
mov
imul
and
rcrb
movsb
aas
jo
movsb
mov
in
adc
data16
fbld
je
rcr
addb
ret
out
push
shlb
lahf
out
insl
mov
or
sub
mov
pushf
pop
bnd
mov
xor
pop
mov
mov
and
add
outsb
pop
add
imul
mov
mov
shrb
aas
shlb
mov
push
cmp
cmpsl
mov
shrl
dec
adc
pop
movsl
xor
xlat
aaa
lret
or
and
sbb
ret
loopne
cmpsb
mov
dec
and
shrb
jmp
fwait
es
cltd
adc
lahf
mov
push
lods
sbb
push
cmp
xchg
test
out
das
pushf
out
adc
into
mov
cmp
dec
test
xchg
aad
cmp
jae
movsl
xchg
sub
mov
mov
sbb
fimull
mov
aad
cmp
sub
call
lods
jmp
cmc
out
loopne
mov
movsl
xor
cmp
nop
scas
cli
mov
je
insb
mov
sub
scas
xorl
xchg
xor
fs
imul
dec
test
je
fsubs
clc
or
mov
or
into
add
imul
push
xchg
test
outsl
mov
mov
dec
adcb
cmp
xor
pop
cld
adc
sbb
movsl
popa
push
sbb
cmc
jb
jle
xchg
push
je
xchg
sbb
pop
and
lret
leave
mov
repnz
test
les
lods
jo
jecxz
sbb
jno
movsw
movsl
int
out
xchg
clc
enter
jmp
cwtl
lret
mov
push
push
mov
xor
mov
xor
cmpsl
ret
inc
jnp
ss
adc
lds
ds
inc
ja
call
push
pop
ficomps
or
cwtl
jge
decl
xchg
dec
mov
xlat
push
jl
mov
test
leave
lea
rorl
std
sbb
mov
dec
mov
sub
push
aam
push
jmp
push
fildl
and
int
mov
adc
daa
cltd
fldl
xor
cltd
test
dec
xchg
push
fsubrs
mov
dec
fcompl
pop
fisubl
xchg
sub
sbb
test
ss
xor
jecxz
pop
mov
movsl
cmp
cmp
divl
xchg
aaa
push
fistpl
pop
or
cmp
inc
push
jo
mov
ret
icebp
mov
xchg
insl
cmp
popf
faddp
or
fldl
loope
pop
call
imul
xchg
sub
mov
lcall
mov
mov
mov
or
cmp
cmp
dec
fdivrl
pop
aas
inc
push
xor
ret
nop
xchg
imul
lret
fildll
pusha
jae
cmc
aad
inc
xchg
shlb
inc
xchg
cmp
cmp
add
repnz
dec
sbb
je
mov
shrb
iret
mov
adc
push
push
dec
stos
iret
cmp
aad
mov
fmuls
jne
psrld
cs
push
mov
stc
cli
loopne
jp
xchg
dec
xor
ret
xchg
stos
mov
addr16
loopne
out
sbb
int
add
mov
imul
lea
pop
jmp
cmpsb
les
and
pop
xor
pop
push
cs
xchg
xchg
faddl
shll
mov
mov
jmp
ljmp
arpl
pop
aas
push
jecxz
xor
loope
jl
jecxz
or
cltd
push
dec
cmc
aas
mov
jns
sahf
fiaddl
lret
fisttps
add
cmp
jp
aas
pop
sbb
fiaddl
mov
mov
xor
fsts
scas
pop
cld
push
arpl
add
push
shll
pop
push
or
xchg
pop
nop
xchg
adcb
jp
lahf
jne
adc
leave
lock
mov
out
jb
cmp
cli
mov
out
add
sbb
aaa
or
cwtl
xor
xor
push
das
iret
test
clc
mov
add
sbb
adc
imul
sbb
jp
sub
sub
push
jae
loope
or
adcb
adc
mov
fistpl
or
call
sbb
movsb
repz
and
ja
scas
ficoms
lods
jecxz
cmp
lock
dec
sahf
sub
cmpsl
vpcmpeqd
clc
fimull
ds
sub
push
sbb
push
out
pop
in
repnz
arpl
sbb
test
dec
dec
mov
scas
push
pop
pushl
stos
in
lds
int
jle
ljmp
mulb
repnz
ss
sbb
or
mov
idivb
sti
test
sub
or
cmp
mov
cmp
mov
popf
add
ja
loopw
pop
jmp
inc
xchg
push
arpl
sbb
in
mov
cmp
push
xor
pop
jne
adc
add
jmp
pushf
outsb
pop
lea
ret
mov
fldt
xchg
fwait
enter
dec
pop
or
ret
aad
jg
dec
push
stos
outsb
fs
std
filds
push
xchg
cmpb
out
dec
js
test
xor
test
test
mov
ljmp
xchg
pop
stos
adc
sub
test
jo
subb
jp
cltd
in
xor
dec
jp
pop
inc
xor
loopne
ljmp
pop
mov
push
nop
leave
sbb
mov
mov
scas
in
push
adc
xor
xor
addr16
adc
std
push
in
mov
jo
pop
xor
push
movsl
rcr
rolb
pop
in
jo
lcall
lods
rcrb
dec
mov
jae
lock
inc
iret
mov
add
daa
ficoml
jae
mov
icebp
loopne
pop
mov
push
xchg
add
sbb
fdivrs
add
sub
xchg
subl
repz
andl
int3
xor
repz
sbb
xchg
sbb
dec
aas
inc
icebp
into
lea
or
lock
orps
dec
or
mov
inc
pop
leave
and
jmp
mov
int3
inc
push
lods
and
cmpsw
callw
jmp
daa
adc
xor
dec
pop
sahf
adc
fadd
gs
jns
rorb
sbb
in
xor
notb
shlb
push
add
adc
loopne
insb
aaa
dec
or
inc
inc
mov
xchg
jae
in
adc
sbb
repz
nop
adc
test
sbbl
scas
mov
rclb
leave
les
int3
xor
data16
icebp
jno
repz
gs
inc
xor
mov
xchg
and
fldcw
fs
shl
mov
adc
cmp
xorl
sub
aas
xor
add
push
inc
or
pop
cltd
sarl
add
outsb
pop
add
sbbl
clc
push
sarl
sub
stos
les
out
inc
pop
pop
push
add
xchg
cld
inc
imul
imul
push
sub
jecxz
dec
int
sub
repz
cltd
and
test
jns
pusha
roll
or
in
outsb
mov
xor
movsl
push
mov
xchg
fiadds
popf
or
mov
icebp
fadd
fstps
mov
cltd
mov
jne
fimuls
inc
xchg
mov
lea
jne
fisubrs
imul
push
loop
xchg
mov
jecxz
xchg
arpl
hlt
dec
adc
push
xchg
pushf
jae
push
mov
xor
xchg
repz
lret
mov
adc
mov
push
sub
push
std
cmpsb
add
or
mov
mov
cmp
cmp
pop
sub
je
or
sbb
ficoms
sbb
arpl
scas
cmpsb
lock
jecxz
mov
jno
xchg
ret
mov
or
push
sbb
aas
mov
ljmp
mov
lcall
sbb
mov
jecxz
jns
fistps
adcl
dec
jbe
push
stos
dec
pop
cs
pushf
pop
lahf
pop
mov
dec
pop
and
pusha
adc
dec
mov
push
ret
and
cltd
or
iret
sbb
mov
jne
movsb
rol
test
mov
jge
test
sub
negb
xchg
sarb
cmp
jne
ss
mov
mov
iret
divb
cs
lock
or
lods
push
pushl
sbb
movd
push
movsb
lods
push
cmpsl
outsb
int3
int3
pop
pop
push
outsl
and
push
into
out
add
addr16
enter
mov
out
adc
lcall
sbb
inc
mov
aad
inc
aad
mov
addr16
cmp
jl
dec
lea
push
xor
outsb
cltd
and
push
loop
and
bound
outsb
pop
imull
ficoml
daa
push
inc
aam
sahf
sbb
mov
add
or
imul
sub
scas
xor
lds
aaa
cmpsl
sbb
push
jmp
arpl
inc
and
pop
lock
es
ja
jg
cmpsb
outsb
cwtl
cmp
push
das
js
rcrb
or
cmp
jecxz
lock
push
inc
inc
cmp
inc
inc
je
jge
scas
sbb
daa
into
and
and
je
pusha
stos
repz
sbb
push
mov
sub
out
adc
in
imul
rcrl
mov
mov
jnp
das
cmp
sbb
ficomps
mov
xlat
pop
sub
bound
add
xrelease
lret
cmp
dec
mov
inc
popf
das
into
add
es
mov
and
jmp
inc
dec
xchg
icebp
xchg
inc
iret
jle
cmp
cmp
clc
jb
push
and
cmp
test
push
inc
mov
aaa
fcoml
out
jbe
out
or
shll
jb
xor
adc
pop
and
adc
fisttpll
xor
ds
and
out
and
sub
imul
hlt
add
jne
lods
adc
sbb
mov
jp
and
mov
daa
jp
mov
pushf
mov
jb
insl
loopne
adc
and
jle
and
shrl
mov
mov
cmpb
movsl
out
test
lods
or
push
sbb
imul
lods
mov
ds
add
pushf
insl
push
fs
aam
mov
leave
push
into
and
fisubrl
scas
and
push
cmpsb
mov
and
enter
lods
call
stc
daa
adc
or
loop
cmp
cltd
test
xchg
mov
or
adc
sahf
shll
shll
push
mov
imul
mov
out
jmp
and
adc
lahf
push
rsqrtps
pushf
je
push
mov
out
mov
shlb
fwait
mov
stc
mov
sub
cltd
sbb
std
xor
jae
cs
cmp
jmp
and
std
stc
inc
pop
mov
push
imul
xchg
add
pop
test
test
arpl
out
test
ljmp
lahf
adc
mov
sub
mov
pop
jg
xor
loop
jp
ret
pop
push
dec
rorb
popa
push
enter
pop
jle
imul
cmpsl
mov
jns
push
push
hlt
sub
shll
xchg
or
in
push
fmul
xor
dec
sub
adc
shll
dec
mov
mov
jns
and
leave
int
in
mov
mov
cli
minps
cmp
hlt
jae
or
xchg
jmp
sub
mov
int3
stos
push
jno
push
bound
movsb
cwtl
es
sub
jb
into
mov
lcall
lods
stos
stos
imul
fsubl
inc
mov
popf
shlb
imul
add
mov
inc
inc
dec
or
mov
dec
cltd
out
mov
jns
cmp
fnstcw
cmp
inc
lea
in
aaa
cmp
pop
cmp
clc
pop
in
jge
sbb
das
pop
xchg
xchg
adc
cltd
sahf
cmp
mov
gs
mov
pop
sub
jne
cmp
loop
push
lods
push
push
in
aaa
in
mov
jge
push
push
movl
push
push
push
and
stos
popf
je
shlb
ficoml
mov
das
cmp
rclb
push
push
pop
ds
pusha
int
or
xchg
fistps
inc
aas
sti
mov
dec
add
out
sub
pop
enter
repnz
fildll
xor
pop
or
into
idiv
and
sub
and
jle
and
xchg
push
stos
int3
je
add
add
cwtl
loope
nop
loope
jle
mov
push
out
jnp
jbe
and
out
lret
push
push
push
sub
shrl
bound
adc
fdiv
mov
pop
lods
out
movl
inc
dec
xor
sbb
mov
xor
and
push
sub
or
or
or
loopne
mul
adc
pop
pop
xchg
nop
das
mov
inc
scas
xor
or
push
xor
sahf
test
pop
push
dec
in
iret
mov
ljmp
mov
mov
cli
in
fnstenv
xchg
mov
jno
xchg
adc
pop
test
ret
push
mov
dec
and
dec
loopne
jno
rcrb
jle
pop
dec
dec
cmc
and
or
xlat
add
or
aas
je
fcmovbe
punpckhdq
adc
mov
add
pop
addl
rcrb
push
add
outsb
pop
add
inc
jno
in
pop
pop
xor
loopne
jecxz
xchg
inc
cmp
mov
cs
out
int3
sbb
xchg
xchg
dec
cmp
adc
std
rcrb
push
sar
rcr
push
andb
mov
test
cld
imul
pop
popf
mov
pop
outsl
ljmp
fisubrs
mov
dec
cs
nop
outsb
cmp
fnstenv
aad
cmp
call
rcl
dec
jbe
in
pop
lahf
sub
inc
faddl
mov
mov
xor
divl
and
dec
repz
or
sbb
mov
mov
ret
mov
xchg
inc
xchg
mov
stos
cmp
push
subb
adc
xchg
xor
push
mov
pop
ret
jl
ljmp
push
jnp
addr16
add
pop
dec
inc
sub
fistps
sti
mov
fs
es
sbb
cmp
mov
xorb
xor
lods
addr16
sbb
dec
mov
popf
mov
imull
mov
xorb
mov
lock
into
jp
in
scas
cmp
mov
int
scas
test
lods
adc
adc
mov
jb
or
pop
cmp
gs
mov
push
aad
inc
cmpsl
lods
test
mov
inc
shll
dec
mov
ja
fisttpl
lods
lea
rol
dec
jle
jmp
ds
bound
idivl
stos
mov
adc
sahf
test
into
nop
ret
adc
sbb
aam
mov
and
mov
dec
scas
bts
add
repz
rclb
xor
std
dec
lcall
push
fmuls
ret
adc
inc
repnz
fwait
shr
in
push
push
jecxz
daa
loope
inc
orb
in
scas
sub
popa
sbb
aad
cmp
sbb
enter
clc
mov
sub
lods
mov
popa
push
pop
inc
enter
lret
adc
nop
aaa
sub
in
int
cmp
mov
leave
dec
inc
fisttpl
xor
stc
fdivrl
push
out
out
pushf
inc
scas
rcrl
lods
jecxz
mov
mov
pop
insb
fsubrs
sbb
xor
ret
mov
push
sbb
nop
sub
pop
inc
jle
test
arpl
fsubs
pushf
adc
test
lret
popa
decl
repnz
insl
icebp
ja
ret
ja
push
pop
mov
sub
lods
mov
push
sbb
iret
dec
dec
mov
mov
cwtl
cwtl
insb
rcrb
cs
add
jp
pop
and
ds
fdivr
sbb
fcmovnbe
pop
sbb
std
mov
jae
shrl
mov
mov
jb
jmp
sub
pop
lret
sub
fsubrl
push
fs
adc
fs
scas
mov
pusha
enter
sub
xlat
subl
repz
push
pop
call
sub
icebp
mov
pop
sbb
mov
adc
dec
pop
mov
inc
jns
imul
repz
outsb
xchg
push
push
je
sub
ficomps
pop
sub
shrl
mov
hlt
mov
jle
popa
into
sub
in
lds
lret
ficoml
xor
cwtl
adc
push
bound
fistl
fistpll
mov
or
fwait
outsl
imul
sbb
pop
lods
or
add
sbb
mov
mov
mov
lret
outsb
pop
jbe
in
ds
stos
test
out
pop
sbb
mov
sbb
inc
mov
xor
test
mov
push
and
loop
xor
inc
ss
pop
push
sub
test
aaa
cmpsl
mov
and
mov
xchg
mov
nop
scas
sub
pop
jecxz
std
in
arpl
mov
pop
cmp
or
inc
inc
push
jl
stos
adc
in
jbe
ret
cmp
xor
test
clc
aas
repnz
push
unpcklps
jb
das
std
pop
retw
mov
hlt
jb
aas
add
mov
test
mov
cmp
stc
xor
loope
outsb
sbb
clc
mov
or
xchg
mov
add
dec
or
jle
stos
sbb
push
pop
outsb
xchg
shrl
push
lods
loope
ljmp
fwait
add
and
adc
lods
hlt
int
lds
sbb
fldcw
in
pop
xchg
push
jge
mov
cs
gs
pop
sbb
test
data16
fidivrl
jns
mov
addb
rorl
push
jae
adc
mov
jb
add
lods
xchg
int3
int3
mov
andl
jns
rclb
std
mov
pop
addl
insl
mov
sub
cld
dec
xlat
rcrl
inc
test
xchg
jmp
xchg
or
jmp
outsb
out
repz
dec
sbb
sarl
inc
cli
test
lods
add
insb
adc
pusha
test
lret
mov
fwait
sub
adcb
push
sub
and
outsb
and
outsb
aas
jo
cs
pop
outsl
adc
jmp
pop
cmpsb
push
push
mov
insb
xlat
call
sti
push
mov
dec
icebp
jb
jge
sub
jmp
inc
fimull
out
add
enter
pop
sahf
dec
pop
push
cmc
push
inc
mov
push
mov
outsb
cli
inc
mov
lea
in
push
cmp
mov
jo
jno
out
and
fdivrs
mov
push
pop
decl
push
cmp
lret
popf
inc
mov
xchg
mov
and
cmp
jmp
mov
mov
cmp
xorb
mov
in
rcrl
xor
mov
cmpsb
push
push
rcr
mov
adc
lds
push
sbb
inc
clc
mov
push
popf
inc
push
adc
pop
or
sbb
dec
xchg
clc
dec
cmpsl
roll
in
or
imul
paddusw
adc
jecxz
pop
repz
pop
popa
or
xor
xchg
stos
xor
popa
mov
pop
mov
pop
pop
test
jnp
lods
insb
push
mov
bound
loopne
faddl
pop
jmp
cmpsl
testl
and
pop
mov
or
repz
cmpsb
hlt
aad
mov
repz
test
xor
aas
sub
add
push
es
jp
es
bound
push
xor
ret
add
pop
fidivs
sub
mov
in
repz
data16
ds
stc
out
sahf
fstl
mov
xchg
xor
xchg
imul
add
in
jle
ret
repz
std
jle
loope
mov
inc
adc
add
add
icebp
mov
lret
ds
add
mov
mov
fisubs
jl
lret
cmpsb
add
fucomip
in
pop
ret
mov
mov
jg
cmp
pop
lret
ret
fists
push
sub
adc
jae
inc
or
sub
jge
mov
cmp
es
dec
dec
fbld
sub
xchg
lds
in
inc
stc
sbbl
sbb
sbb
adc
repz
imul
jmp
lcall
outsb
or
mov
jnp
shll
and
call
lods
in
pop
les
sub
sub
or
xorl
dec
fwait
lea
jg
pop
inc
fists
decl
xor
sub
and
aas
in
orl
jbe
popf
add
arpl
cmp
popf
fbstp
popa
cmp
popa
sbb
insl
xchg
pop
xchg
adc
add
push
fbld
mov
das
pop
mov
dec
push
loope
or
fldenv
enter
cmp
jnp
push
inc
scas
pop
mov
repnz
cmp
jp
loope
add
jno
jae
popa
call
enter
mov
xchg
jmp
mov
xchg
rcrl
cld
popa
and
adc
cmpxchg
call
fmuls
test
pop
mov
inc
add
jecxz
adc
jno
xor
xor
cmpsl
leave
pop
enter
dec
call
cltd
sub
sahf
pop
inc
jecxz
sti
sub
push
aam
stos
js
aad
xlat
outsl
mov
xor
pop
jno
jle
and
inc
aam
mov
sub
fildll
push
cmp
in
aad
out
sub
push
outsb
test
in
sub
cltd
inc
mov
loop
lcall
pop
hlt
cmp
sub
inc
ret
sbb
add
pop
fbstp
or
push
daa
pusha
cmp
sub
add
lret
pop
and
jnp
mov
test
sbb
mov
push
int
sub
lret
and
push
push
mov
mov
sti
push
iret
jne
sbb
outsb
pop
std
loope
rorb
xor
mov
xchg
fdivr
mov
adcl
es
mov
mov
cmpsb
mov
repnz
jo
cmp
sbb
pop
jecxz
cltd
jmp
idiv
jne
mov
mov
xchg
cs
jmp
lcall
aaa
sbb
inc
fidivs
inc
sbb
cmc
sub
add
aad
js
cwtl
mov
sbb
ja
cwtl
das
cmp
test
push
lods
repz
mov
sbb
push
sub
or
cmp
decb
daa
dec
inc
adc
push
jg
lods
imul
adc
xor
lcall
popf
in
mov
lret
shl
sub
and
pop
stos
stc
push
add
inc
dec
into
mov
loopne
test
push
sub
pusha
movsb
dec
rcrl
add
jne
add
call
push
pop
cmp
hlt
xor
insl
icebp
xor
ss
pop
sbb
dec
jg
gs
ja
push
jae
jb
mov
das
std
jecxz
jp
pop
lea
fwait
fwait
sub
inc
and
mov
push
xchg
bound
sbb
mov
mov
dec
dec
je
inc
pop
sbb
ja
popa
sbb
js
popa
pop
or
jno
mov
mov
sbb
xor
mov
loop
cmp
hlt
mov
and
je
out
cmp
sarb
jmp
js
insb
lods
jp
imulb
or
lods
pop
div
iret
mov
add
mov
test
out
cmp
dec
jb
and
xor
mov
cmpsl
mov
push
cmpsl
ret
and
xchg
xor
shlb
rolb
jle,pt
clc
es
mov
in
lcall
lcall
jno
arpl
ds
or
push
xchg
fstl
push
sarb
addb
out
pop
je
sbb
cmp
push
ja
clc
xor
in
add
sbb
stos
add
mov
push
or
pop
les
mov
cs
mov
leave
out
lahf
xor
das
xchg
int
outsl
cmc
lret
outsb
jp
sub
mov
lock
or
push
pop
sub
mov
cmp
add
cwtl
lock
pushw
iret
sub
iret
cltd
je
scas
mov
dec
pop
inc
pop
scas
adc
xlat
push
pop
lods
dec
int
xor
adc
inc
dec
xchg
mov
pop
add
sbb
pop
ffreep
cmp
aad
push
mov
repz
sbb
xor
jle
scas
aaa
out
push
mov
lds
xchg
xor
or
xchg
dec
cmp
cli
adc
mov
scas
xor
pop
insb
or
sbb
jb
aam
int
inc
mov
xchg
stc
repz
sbb
in
sti
in
call
cmpsb
lods
sbb
or
dec
inc
fwait
clc
adc
sub
xchg
adc
xchg
adc
ret
mov
fiaddl
or
mov
inc
cwtl
mov
lock
pop
pushf
push
mov
pop
mov
or
int3
xor
sub
and
adc
repnz
and
xor
andb
jne
push
jge
aam
push
scas
roll
pusha
lret
test
xor
push
jg
je
jne
cmp
stc
and
sbbl
pop
daa
jl
push
repz
push
fnstsw
cltd
fiaddl
out
stos
mov
mov
mov
sti
push
dec
jle
ret
sahf
arpl
sbb
lcall
out
shrb
and
add
das
iret
jp
or
es
pop
or
and
push
lods
pop
fadds
sbb
mov
movsl
xchg
jmp
or
hlt
lret
mov
stos
mov
inc
insb
adc
ja
push
adc
js
or
stos
repz
stos
loopne
fwait
adc
fprem1
das
das
ja
push
in
xchg
push
and
push
lea
xchg
sbb
enter
mov
mov
popa
pop
test
lods
int3
mov
out
fsubp
ss
lea
rolb
add
clc
sahf
out
or
jb
mov
bound
add
add
inc
lea
jns
or
jnp
add
mov
daa
push
out
push
mov
rcrl
sbb
lods
jnp
iret
xor
and
push
popf
fists
cmp
loop
xchg
shr
xchg
jecxz
dec
aad
cli
xor
popa
mov
mov
fs
xchg
sbb
out
movl
xor
inc
adc
pop
mov
add
xlat
shll
xor
pop
push
xchg
aad
pop
outsb
popa
xor
and
sbb
repnz
jp
movsb
inc
sbb
inc
xor
or
sub
cmp
aad
mov
push
mov
lcall
xor
cs
stc
push
pusha
gs
or
sub
pop
xor
dec
lret
lret
or
out
sub
dec
popf
cli
data16
insb
mov
push
dec
insl
sub
push
mov
mov
lahf
push
inc
mov
mov
push
adc
aad
es
jae
jo
sti
add
adc
and
add
sbb
sbb
mov
cwtl
iret
or
movb
mov
inc
jge
loope
mov
es
fabs
sub
in
sbb
push
cmp
jne
push
push
cmc
cld
push
dec
les
mov
imul
jge
mov
push
mov
in
movsb
sub
lods
mov
jmp
out
int
inc
push
mov
mov
popa
out
data16
mov
fcompl
insb
aas
loop
mov
test
pop
rcrl
sub
es
scas
lods
fldenv
shll
mov
mov
mov
mov
mov
scas
sub
sbb
ja
lahf
push
cmp
bound
mov
ret
mov
dec
sbb
and
mov
lds
lds
cmc
jbe
cmpsl
or
test
movsb
xchg
jp
xor
in
mov
inc
or
aad
mov
inc
out
push
fdivrs
notl
in
inc
imul
clc
push
inc
flds
jae
subb
jle
imul
push
cmp
and
out
enter
shl
lods
push
fs
dec
cmpb
inc
negb
roll
test
test
faddl
stos
jae
adc
mov
sahf
jge
mov
repnz
push
xchg
xchg
bound
mov
jecxz
push
mov
xor
mov
jae
inc
out
addr16
xchg
adc
inc
lock
cld
mov
cwtl
adc
lods
jg
or
outsb
push
and
jne
roll
pusha
xor
iret
js
fidivrl
add
mov
rol
lret
mov
lods
sub
lods
xor
xchg
or
std
push
cmp
sub
mov
aas
mov
xor
pop
in
cmp
ret
aas
sbb
cmp
in
cmp
jge
sbb
jp
aas
add
adc
and
inc
push
push
jb
adc
ljmp
fidivrl
cmp
dec
cld
or
push
xchg
add
push
sub
cmpsl
jne
data16
sti
pop
in
bndldx
stos
xchg
pop
dec
lret
xchg
push
inc
pop
mov
pushf
add
push
cmp
cmp
xchg
xchg
xchg
and
xor
clc
pop
rcrb
mov
mov
mov
xchg
cli
pop
mov
ja
mov
mov
popf
ficompl
add
mov
std
leave
sbbl
add
lods
outsb
dec
xchg
addl
mov
jno
leave
adc
out
add
xor
int
fistps
sub
pop
sub
stc
ret
cwtl
or
clc
sbb
in
popa
popa
es
inc
pop
cli
test
mov
mov
in
test
mov
mov
rcrl
push
mov
imul
mov
xchg
insl
shrl
pop
dec
pop
and
daa
jmp
xor
inc
arpl
jae,pt
sahf
and
daa
mov
mov
ret
xor
cs
fcmovbe
aam
insb
into
in
or
and
mov
adc
jmp
cmp
xchg
mov
cmp
cmp
mov
lock
mov
rorb
cmp
aam
jg
dec
out
mov
pop
jge
ret
mov
lds
sbb
sub
push
mov
sahf
cltd
mov
dec
andl
xor
loop
xchg
ret
mov
insb
cmpl
lea
pop
pusha
adc
lods
push
and
jge
xor
sub
jbe
hlt
cmpsl
adc
pop
les
or
add
and
into
xor
rclb
cmp
in
fstpt
insb
xchg
pop
lea
sub
mov
pop
inc
xorb
js
sub
and
stos
lods
xorb
faddl
mov
subb
sarb
pop
cltd
fdivl
imul
mov
fadds
fcoml
loopne
mov
push
addr16
insl
mov
jg
leave
test
push
lret
cmc
xor
add
adc
lcall
jge
daa
lds
loopne
sbb
jb
push
nop
xorb
jl
pop
pop
pushf
mov
mov
xor
out
mov
ret
adc
adc
testl
jle
mov
dec
lret
push
jo
ret
xor
sahf
and
mov
das
mov
aad
pop
adc
mov
xchg
jns
out
push
sub
add
in
jbe
jae
or
jmp
sbb
jns
arpl
das
inc
lcall
in
lcall
popa
les
mov
pop
mov
loop
xchg
inc
lahf
cmp
or
jnp
cwtl
cld
add
fisttpll
stos
mov
push
loop
repnz
pop
lods
movsb
aam
call
les
mov
stos
ret
jle
or
inc
cmp
pop
in
pop
and
jns
mov
and
loopne
nop
cmp
and
sub
add
ret
mov
enter
lahf
adc
mov
sub
pop
loopne
jle
push
int3
dec
leave
sti
in
shrb
sub
inc
int
cmpb
ja
fdivrs
dec
jmp
mov
fcomps
cmpl
orl
push
mov
sbb
cmpsb
and
imul
dec
jns
mov
push
adc
push
xchg
dec
out
js
mov
clc
js
in
pop
loopne
mov
push
js
sub
mov
sbb
add
mov
xlat
dec
sbb
mov
lret
fildl
sbb
jge
fs
inc
push
add
and
dec
sti
sarl
pop
mov
push
dec
into
xor
add
shlb
jg
stc
ficoms
inc
and
jbe
cmp
push
add
add
loopne
xchg
ja
adcl
mov
lods
push
fwait
std
cmpb
xor
bound
int3
in
lret
cmp
or
addr16
mov
sti
insb
add
fisttpl
repz
adc
jns
in
ds
cwtl
data16
jmp
mov
sub
jle
mov
push
daa
pop
mov
pusha
in
imul
dec
out
aaa
push
daa
shr
add
leave
push
rcr
fwait
push
cld
xchg
aad
addr16
mov
aaa
push
mov
imul
pop
dec
leave
mov
int
mov
bound
mov
mov
test
push
dec
stc
loope
out
rcrl
mov
mov
std
in
push
adc
inc
stos
dec
xchg
cltd
data16
data16
insl
popa
paddsw
cmp
pop
inc
xchg
enter
inc
inc
les
adc
sub
mov
jae
xchg
and
mov
jmp
mov
in
lea
loopne
lcall
or
out
imul
xchg
pusha
pop
lret
dec
ret
xchg
push
ja
mov
faddp
stos
sbb
jl
jmp
dec
jg
sbb
pop
fsubrs
das
lods
push
jno
inc
aad
daa
xor
ljmp
sbb
mov
or
mov
leave
dec
dec
push
shlb
stos
pop
or
pop
adc
int
jge
or
xchg
mov
insb
scas
mov
xchg
inc
jecxz
nop
jp
fs
lret
cmp
inc
inc
adc
movsb
xlat
les
push
cmc
ret
fcom
pop
insl
adc
and
cwtl
adc
psraw
xorb
jbe
pop
mov
flds
jle
aam
sub
movl
enter
and
mov
sub
lcall
ret
mov
cmpsl
sbb
ret
popa
test
cs
into
or
push
xor
jge
push
ret
sbb
push
int3
dec
fdivrl
movsw
lods
jge
loopne
sti
shll
mov
dec
lods
sbb
sbb
icebp
push
cmc
fisubs
mov
xchg
cltd
scas
jecxz
aam
or
movsl
notl
adcl
sub
or
or
pop
mov
or
int3
cld
cmc
jne
stc
fidivrs
sbb
and
gs
push
mov
inc
invd
call
push
outsl
xor
stos
test
loope
mov
insb
sub
jno
jecxz
popf
adc
push
push
cmp
in
pusha
mov
jo
and
mov
stc
xor
sbb
inc
xor
and
hlt
mov
jne
sbb
not
lock
pop
sub
jg
pusha
loop
jo
and
xchg
push
mov
or
aaa
cli
ret
mov
aad
int
inc
cmp
xchg
pop
pand
mov
mov
add
jle
mov
jae
imul
cs
push
mov
scas
push
adc
inc
nop
aam
test
ja
loope
mov
jl
pop
mov
stos
mov
aam
test
inc
ljmp
jp
mov
mov
aas
outsb
dec
fcoml
pushl
mov
in
mov
rcrb
inc
rolb
adc
dec
pushaw
inc
into
fdivl
jp
or
jg
pop
int3
out
popa
push
jbe
jg
shrb
adc
adc
into
lret
or
into
js
xor
add
fisubl
jnp
push
bound
jae
push
movsl
arpl
push
test
sbb
fmull
shll
sub
xchg
push
stc
mov
jb
rcl
mov
pop
xor
je
das
mov
inc
addr16
xlat
scas
call
sub
sub
addr16
fwait
mov
mov
stos
int3
mov
lds
pop
iret
xor
sbbb
mov
ja
jno
std
add
nop
fdivp
inc
xchg
ja
pop
and
insl
add
dec
push
cld
fistps
loope
cmp
jnp
in
sar
and
push
xchg
mov
pop
xchg
aas
es
push
jmp
shll
and
shl
popf
inc
add
shll
cmpsb
cwtl
shlb
jae
out
nop
or
imul
pop
and
fsubrs
fcomps
mov
pushf
leave
das
mov
add
imul
add
sbb
aas
addr16
mov
fwait
or
lcall
mov
test
stos
fmuls
mov
jle
lret
or
mov
jae
push
mov
outsb
push
inc
inc
pop
pop
and
into
mov
test
push
mov
jo
sar
push
or
shrl
lods
add
add
iret
rcrb
inc
out
mov
xadd
ja
out
les
mov
add
push
outsb
sbb
xor
imul
and
bound
mov
in
cmp
mov
sub
push
fsubl
fwait
dec
fs
cmc
or
mov
outsl
into
lret
outsb
xchg
and
or
loop
ljmpw
mov
xchg
fs
out
popf
fwait
cmp
adc
dec
sbb
or
mov
mov
pop
dec
rcrl
inc
xor
pop
addr16
cltd
adcl
lret
mov
nop
pop
fnstsw
std
cmpsl
inc
andb
clc
push
shlb
jb
in
hlt
sarb
mov
fiaddl
push
pop
pop
insl
and
xchg
bound
jge
repz
adc
inc
dec
jp
mov
push
mov
xor
rclb
xor
cmp
dec
jae
mov
cmp
mov
mov
sub
xchg
popf
lcall
rcrb
xor
ret
jp
inc
or
inc
cmc
data16
stc
sbb
jno
pop
jg
mov
cmpsb
push
ret
int3
mov
push
add
clc
and
mov
lret
fucomip
inc
mov
mov
dec
int
push
cmc
negl
stos
mov
rcrl
mov
dec
nop
mov
mov
daa
xor
inc
push
sahf
pop
mov
test
adc
jno
push
sbb
insb
mov
or
xchg
push
push
add
into
outsl
jmp
pop
jecxz
je
movsb
test
mov
xchg
int3
dec
push
inc
dec
test
and
adc
loope
fisttpll
in
pop
mov
or
scas
pop
xor
in
int3
dec
inc
sbb
push
jl
sbb
jne
xchg
dec
ss
roll
xchg
cltd
movsb
arpl
jl
add
jne
add
daa
and
mov
pusha
movsl
push
notl
outsb
pop
add
andb
out
or
lret
in
lds
mov
push
clc
sub
dec
mov
xchg
int
pop
push
and
push
stos
mov
ja
out
incb
jno
fidivl
push
jle
je
dec
sub
mov
xchg
mov
enter
sbb
adc
cwtl
movsl
clc
xchg
pop
aad
cmp
repnz
mov
ret
aaa
xlat
repz
outsl
lea
and
fidivrl
out
mov
arpl
jb
pushf
lret
in
mov
xchg
test
or
jp
mov
fiadds
mov
add
and
rolb
fs
loope
cmp
sbb
test
pop
ficoms
mov
dec
addr16
out
adc
iret
push
xor
in
adc
popf
in
sahf
ret
fdivl
stc
cli
arpl
sub
movsl
jbe
ja
mov
xchg
mov
jmp
xchg
in
push
fucomp
push
clc
icebp
mov
xchg
dec
adc
fsubrs
andb
dec
cld
or
imull
orb
repnz
ret
xlat
out
in
cmp
js
xor
js
lods
jg
add
push
out
and
fidivs
or
push
subl
dec
repz
push
adc
bound
pop
sub
fdivs
out
das
stc
js
mov
or
daa
mov
xchg
or
std
cmpsb
rolb
dec
xor
cmp
in
mov
mov
pop
mov
jmp
rcrb
mov
daa
mov
jnp
iret
fisubrl
or
sbb
cmp
insb
add
sbb
aas
jmp
jmp
stc
pop
jg
aaa
scas
push
cltd
pushf
sub
ret
mov
in
sub
mov
sub
or
dec
jno
adc
fcoms
icebp
sub
mov
das
xchg
cs
leave
iret
pop
iret
push
lea
add
lds
dec
add
scas
lret
jp
inc
cwtl
mov
lock
test
imul
dec
rorb
out
mov
test
cld
pop
xchg
and
mov
xor
adc
ret
adc
mov
aam
mov
lret
into
hlt
ror
xchg
sub
out
inc
fists
pop
xchg
popa
jp
mov
pop
pop
mov
xor
pop
push
and
xor
inc
outsb
mov
dec
in
icebp
jp
mov
xor
pop
fstps
pop
mov
push
mov
xor
repnz
jle
int3
testl
mov
jge
pop
out
cltd
inc
pop
out
inc
fcoml
mov
insl
xor
dec
or
sub
mov
push
xchg
mov
decl
sub
fs
movb
ret
mov
dec
iret
lahf
clc
imul
pop
fdivs
pop
fldl
dec
jb
sar
into
enter
pusha
mov
xchg
pop
mov
and
out
pop
fiadds
cmpsb
jbe
and
test
insl
adc
je
xchg
adc
adc
and
inc
arpl
inc
rorb
pop
pop
ret
and
and
dec
clc
fldl
pop
and
movsl
push
or
sub
fcmovb
cltd
xchg
push
dec
add
sbb
mov
mov
pop
std
inc
test
push
and
mov
das
add
incl
clc
xchg
into
lret
dec
xor
ret
aas
sub
lret
inc
ret
add
out
cmp
in
xchg
lods
push
fwait
mov
push
movsl
sub
adc
test
ficoml
and
cmp
hlt
and
mov
lcall
addr16
mov
and
stos
mov
mov
adc
mov
xchg
cmp
shl
mov
nop
sub
sbb
scas
loope
aam
xchg
and
mov
addr16
sbb
stc
jnp
or
orl
inc
inc
or
or
rcr
int
notb
dec
test
loopne
push
and
sub
jns
clc
stos
mov
imul
mov
frstpm(287
decb
fidivrl
sub
mov
mov
lods
test
jbe
jg
dec
je
dec
mov
jle
data16
mov
rorb
cmp
pusha
jg
push
xor
and
jbe
xchg
cmpsb
into
xchg
push
adc
xor
adc
xor
xchg
es
setns
jg
mov
jo
dec
cmp
push
out
jp
cs
add
xchg
push
bound
les
jecxz
xorl
mov
pcmpeqw
data16
mov
xorb
scas
icebp
xorl
sahf
pop
adc
mov
mov
sub
int3
rcll
push
jge
je
ja
rcrl
inc
dec
inc
add
pop
pop
push
dec
sub
pushf
dec
and
or
xchg
jl
insb
xchg
jg
addr16
ret
pop
fs
scas
sti
iret
and
dec
jmp
decl
nop
push
xchg
xchg
andb
push
lods
test
cmp
jo
add
out
inc
lret
ljmp
int
sbb
or
out
add
paddw
lcall
jae
pop
push
push
push
sub
stos
clc
in
leave
jno
pop
dec
jbe
jl
push
rol
mov
pop
test
enter
and
sub
or
daa
test
mov
lock
ret
cmc
add
cmpsb
or
inc
stc
sub
mov
jne
cmpb
jge
lock
daa
loop
jl
xchg
jg
push
pop
es
and
sbb
adc
add
out
clc
cwtl
aad
sbb
push
add
sub
lock
das
xchg
scas
jae
in
and
ljmp
pop
lods
or
es
adc
lds
lcall
bound
inc
std
les
ret
adc
shr
loop
mov
cmpsb
sti
iret
jg
mov
xor
mov
xchg
pop
jp
test
sbb
loopne
cld
aas
xchg
loop
mov
idivl
push
or
sbb
push
mov
in
sub
test
xchg
adc
icebp
je
push
lret
test
arpl
cmpsb
pop
cwtl
and
loop
adc
int
cltd
jp
pop
lds
jge
sbb
and
das
rcrb
pop
mov
ljmp
imul
addr16
into
imul
loopne
adc
mov
out
push
cmpsb
cmp
adc
inc
mov
jo
rcrb
out
jl
jae
add
dec
mov
outsl
cmp
outsb
push
and
mov
add
popa
push
pop
jmp
jle
js
aam
jmp
add
outsb
pop
add
xchg
sbb
push
or
mov
ret
lcall
into
pusha
pushf
jo
inc
or
push
mov
fildll
jle
int
add
mov
lds
push
cmpsl
and
jns
popf
negb
jp
dec
xchg
jno
ret
push
xchg
fstps
jmp
mov
and
aam
icebp
lods
fs
scas
jecxz
je
lods
in
jno
lcall
fdivrl
push
rcrl
imul
cli
xor
inc
dec
or
stos
xor
movsb
cld
cmc
das
jo
jle
call
popf
outsl
xchg
subl
cmp
bound
push
sub
jle
and
or
test
dec
xorl
adc
inc
ja
sarl
or
outsb
and
jb
push
push
cmpsb
sub
popf
data16
mov
push
adc
add
jbe
adc
lret
int3
mov
insb
jecxz
xor
call
and
add
xchg
lock
add
push
aam
lods
mov
push
xchg
mov
jecxz
ret
jge
cmpsl
xchg
lahf
sub
mov
ds
scas
xlat
aas
test
pop
cli
inc
lcall
dec
lock
mov
mov
addr16
mov
popa
and
cwtl
and
pop
outsl
std
pop
insb
aas
or
or
mov
jge
pop
lea
mov
cmp
mov
fildl
call
sbb
test
mov
xor
popa
ljmp
fidivl
inc
js
pop
ja
bound
insl
sbb
js
add
aaa
dec
loope
mov
and
adc
movsl
inc
push
sub
inc
sti
jmp
out
xor
xchg
xor
sbb
ja
sub
call
enter
fists
cwtl
mov
push
in
ds
mov
outsb
stc
inc
cmc
fisubrl
in
xorb
nop
inc
or
dec
mov
mov
ljmp
ret
jmp
sub
sub
cmp
insl
sti
dec
sbb
mov
mov
sbb
popf
test
push
adc
dec
sub
bound
mov
cs
jbe
mov
adc
sti
in
cmp
ds
test
movsl
and
and
cld
mov
mov
mov
jecxz
imul
sub
cltd
sub
out
daa
mov
hlt
mov
cmp
jge
cmp
push
sub
out
xor
jbe
call
mov
aad
lcall
mov
stos
mov
pop
sub
out
inc
and
ds
in
mov
push
add
inc
imul
mov
les
adc
add
xor
pop
cmp
int3
ss
movsb
jno
jae
or
stos
cs
push
xchg
mov
push
mov
jge
xchg
icebp
pop
push
leave
xor
adc
jne
xor
inc
mov
movb
jle
ljmp
aaa
dec
call
dec
add
or
shrb
pop
aas
nop
sbb
les
int3
outsb
add
imul
lock
test
pop
mov
nop
sbb
or
sub
mov
cmp
movsl
inc
insb
jle
sub
sahf
enter
shlb
sbb
fsubrl
mov
int3
je
call
push
into
ret
in
pop
adc
push
mov
pop
mov
xor
fcomp
aad
sti
adc
std
xchg
sbbb
sbb
jb
hlt
inc
adc
mov
jmp
cmp
jl
sbb
leave
push
gs
sub
inc
stc
sub
test
cmp
push
and
test
inc
pop
sub
das
cmp
data16
pop
xlat
imul
jp
cmp
sbb
push
insl
rcr
clc
cltd
cmc
shll
shl
push
popf
daa
pop
xchg
les
out
sub
in
pop
jne
inc
dec
xor
out
cmp
decb
mov
popa
jmp
ja
int
cmp
mov
scas
ret
sub
cmp
and
xor
lcall
jl
dec
or
mov
inc
cs
mov
daa
mov
jo
or
mov
mov
es
pop
dec
popa
push
loop
pop
and
add
scas
aad
divb
cmpsb
push
inc
or
and
mov
div
repz
or
out
int
aas
xchg
dec
lods
sbb
imul
in
dec
xchg
inc
add
push
add
clc
cmp
xchg
lock
les
push
outsl
repnz
pop
sahf
addr16
mov
add
aas
dec
cmpl
push
enter
imul
out
popa
sbb
data16
fistl
mov
icebp
inc
inc
sub
add
loope
jae
mov
jno
imul
sti
pop
add
add
lcall
mov
cmp
adc
xchg
ror
repz
fiaddl
jle
mov
push
and
xchg
shll
cmp
in
pop
xor
add
add
into
xchg
jg
cmp
call
xchg
out
subb
dec
jg
dec
sbb
das
aaa
adcl
and
push
inc
add
pop
dec
pop
int
add
add
cld
mov
call
insb
mov
pusha
cmp
sbb
mov
clc
cmp
mov
mov
pop
enter
pop
sub
aad
lahf
xor
dec
mov
mov
cmp
sbbb
mov
jle
add
int
int3
sbb
pop
movl
stc
mov
jns
ja
nop
pushl
or
fnstcw
sbb
jbe
lds
repnz
and
fisubrl
xchg
and
rcll
ja,pt
je
add
scas
jmp
mov
xchg
adc
cmc
mov
and
sti
inc
mov
sub
ficoml
int
movb
mov
popf
xchg
and
mov
outsb
jns
int
call
xchg
mov
or
xchg
fildll
scas
addr16
loope
decl
jne
mov
mov
adc
add
lds
dec
or
out
daa
dec
jns
rol
cmp
cwtl
sbb
fsubrl
lea
jg
mov
loopne
add
xor
mov
fidivrl
addr16
lcall
outsl
sub
imul
inc
adc
repz
cld
in
jle
cmp
loopne
pop
xchg
dec
sbb
into
int3
push
movsb
xchg
inc
pusha
into
je
mov
add
inc
incb
push
jecxz
arpl
jmp
mov
add
push
push
aad
dec
sub
cmp
out
pop
xchg
dec
imul
or
pop
dec
jmp
pop
inc
push
jge
mov
lret
jge
xor
inc
inc
dec
xchg
dec
or
insl
xorl
add
dec
test
sub
iret
lcall
sub
and
ret
faddl
sti
stc
test
pop
sbb
lock
dec
push
dec
sub
clc
fstps
pop
iret
push
aaa
shrl
jae
sti
cltd
jl
mov
push
push
out
mov
int3
outsb
and
mov
or
xor
mov
fisubs
push
jle
bnd
sbb
dec
cmp
jbe
dec
das
je
lds
mov
loop
or
adc
pop
dec
fwait
int
mov
cmp
dec
ficoml
pop
xchg
icebp
aad
dec
add
pop
or
cwtl
lret
mov
and
inc
sbb
or
or
xchg
adc
xor
adcb
dec
stc
fs
mov
adc
jmp
mov
adc
aaa
dec
cltd
cmp
into
mov
nop
xchg
cmp
sbb
xor
jecxz
adc
dec
pop
dec
stc
xchg
fwait
pop
ret
stc
movsb
clc
mov
sub
les
icebp
fdivrp
add
sbb
and
cmp
pop
pop
js
dec
scas
aam
cmpsb
push
pop
test
je
shlb
outsl
cmp
lods
add
and
clc
jne
xor
fs
adc
sarb
inc
lds
mov
scas
adc
cld
jmp
into
mov
aaa
testl
xchg
pop
mov
repz
into
mov
mov
add
shl
das
iret
repnz
sbb
pop
jne
in
pushf
fisubl
pop
and
repz
ljmp
dec
mov
lock
scas
iret
out
into
icebp
stos
mov
pusha
cld
adc
xchg
hlt
and
or
les
jo
lcall
add
into
gs
pop
push
push
repnz
mov
or
call
ja
out
and
arpl
inc
aad
in
cmp
push
mov
sub
sbb
pop
in
aam
xlat
lret
pop
mov
mov
pop
movb
scas
and
dec
fidivrl
jge
xlat
aad
fidivs
jne
sub
adc
addr16
testl
fcompl
lcall
push
inc
dec
int3
jns
lods
into
sbb
adc
stos
add
xor
in
fcompp
aad
cmp
jo
push
push
in
nop
sub
jle
push
jge
pop
hlt
loope
cld
fnstsw
mov
lods
fucomp
mov
pop
pop
mov
mov
jle
leave
and
fisttps
sti
mov
xchg
notb
add
loope
aaa
into
mov
mov
add
enter
stos
movsb
lret
push
test
jb
mov
or
cmpsb
scas
sub
sub
je
ret
je
mov
fisubl
stc
test
mov
pushf
daa
stos
dec
leave
subb
sarb
xchg
ret
stos
ds
push
or
scas
xor
std
fcoms
sar
sbb
sbb
inc
and
cmpsl
pusha
std
sub
cmpsl
stc
pop
lods
int3
movsl
push
cmc
lds
inc
mov
outsb
and
fisttpll
dec
xchg
lock
jmp
sub
add
insb
xchg
jmp
int3
mov
outsb
adc
fs
aaa
push
xchg
push
xor
insb
dec
xchg
jbe
fiaddl
outsl
ss
sti
movsl
aad
xchg
inc
or
push
add
ja
mov
aaa
fcom
push
insl
mov
and
jg
test
loop
fiadds
fs
lcall
jo
test
mov
loope
in
xor
add
mov
in
and
jne
and
mov
mov
sub
mov
es
or
movl
int3
sub
in
xor
dec
push
inc
addr16
add
das
shl
jmp
mov
cmpsl
das
jo
notb
shr
mov
jno
arpl
adc
call
test
mov
test
cmpsl
adc
mov
dec
lcall
sub
xchg
pop
pop
xor
inc
sbb
xor
lret
mov
dec
mov
pop
std
out
lock
shlb
sbb
push
repnz
les
lret
push
add
insb
sbb
mov
pop
pop
cmp
and
loope
mov
jge
out
repnz
push
movsb
push
cli
pop
or
js
mov
fidivrs
sub
lret
sti
or
shlb
sub
jno
in
xchg
adc
pop
inc
mov
cltd
sub
xchg
xor
sarb
fsubl
clc
mov
imul
ret
outsb
fwait
icebp
cmp
popf
ljmp
cltd
outsl
pop
arpl
inc
mov
and
pop
pop
push
pop
cli
adc
add
xor
movl
jnp
xor
xor
jg
xchg
addr16
in
xor
xor
add
mov
fadd
lods
cmp
mov
test
add
xchg
jg
ljmp
lock
add
pop
pop
addb
jecxz
add
jo
mov
pop
dec
out
stc
pop
xor
test
lock
add
sbb
xchg
in
es
cmp
hlt
lds
mov
pop
and
ja
xchg
or
jnp
and
mov
jle
jbe
cld
jnp
out
imul
push
dec
lods
adc
aaa
arpl
pop
aas
push
push
xchg
sbb
gs
cmp
stos
decb
insl
xorb
push
add
lret
cwtl
xchg
aad
jp
test
lods
xorl
jne
js
sbb
ljmp
ret
push
add
add
clc
xchg
inc
mov
in
rorl
jne
fldcw
pushf
pop
lods
aaa
push
mov
jbe
popf
fidivl
js,pn
call
xor
xor
cmp
call
scas
jno
lock
lahf
push
scas
pop
lods
cwtl
dec
stos
lds
cmpsl
jb
ret
imul
cmp
aas
repz
out
dec
mov
lods
sub
inc
xor
scas
jbe
mov
adc
xor
xor
jle
push
sub
sti
xchg
pop
stc
test
aam
inc
pop
xchg
test
mov
fisttps
pop
jl
cmp
fdiv
dec
cmp
dec
hlt
cmpsb
ret
dec
add
dec
mov
in
ja
icebp
cld
and
inc
add
adc
aas
pop
push
jb
stc
jnp
ror
testl
mov
xor
mov
pop
rcll
push
mov
add
jnp
das
jmp
mov
lret
test
lea
xchg
out
dec
and
xlat
imull
stos
pop
mov
xchg
int3
test
std
pop
arpl
stc
cmc
ret
or
and
mov
in
lock
ret
cmp
ret
xchg
xchg
inc
loop
mov
fbstp
insb
out
dec
js
sub
sbbl
lods
test
jnp
jp
fnstsw
cmpsb
jbe
and
in
add
push
ljmp
jne
inc
sbb
push
xor
inc
sub
loopne
loop
or
cmp
pop
adc
xchg
jl
inc
push
repnz
lds
push
mov
imul
rclb
call
sub
cmp
sbb
xor
fstl
pusha
insl
aaa
mov
adc
daa
lcall
je
inc
shr
jmp
sbb
or
xchg
iret
push
pop
cli
cmp
xchg
mov
fwait
mov
pushf
stos
mov
inc
and
cld
pop
lret
or
xchg
jnp
aad
cmp
in
inc
sbb
xchg
int3
inc
dec
les
jb
add
sbb
pushf
pushf
ror
sub
sbb
pop
rcll
lock
fisubrs
mov
xchg
imul
and
mov
dec
hlt
jbe
lcall
mov
sbb
icebp
inc
sbb
xlat
jnp
sarb
bnd
jp
xchg
popa
jns
out
shlb
jb
inc
movsb
faddl
push
lcall
add
cmp
cs
lahf
fiaddl
cmovns
or
push
sub
in
adc
rcr
les
je
sub
dec
movsb
sbbl
sub
inc
idivb
or
loopne
push
sub
add
or
pop
sbb
pop
clc
ss
or
and
cmp
lret
or
sahf
fstps
orl
mov
adc
sub
mov
clc
dec
xchg
lret
xor
loope
imul
xchg
mov
sub
inc
xchg
outsl
rcrl
bnd
push
adc
adc
jnp
fbld
ss
mov
sbb
aam
and
je
push
xchg
faddl
cmpsb
dec
divl
push
sbb
shl
adc
adc
inc
mov
ss
addr16
mov
bound
lret
outsl
pop
push
ljmp
push
jle
repz
inc
sbb
sbb
fsts
cli
push
jl
xchg
xchg
ret
aad
test
mov
mov
pop
and
sub
jp
xor
cs
data16
and
ljmp
mov
movsl
jno
lahf
inc
xlat
ror
or
imul
lea
lds
aas
shrb
pushf
pop
xor
fisttpl
xor
loope
fucomp
dec
mov
mov
push
ficompl
int
or
add
add
fildll
dec
ds
xor
mov
out
or
adc
imul
push
rolb
mov
fimull
test
push
imul
xchg
push
add
jnp
mov
push
test
shll
add
cmp
fists
ret
and
adc
mov
or
xor
xor
xor
mov
or
cmp
xor
sub
loope
test
jg
addb
adc
cmp
hlt
lret
outsl
out
pop
int3
jb
jne
stos
cld
jge
sbb
adc
test
cmpsb
pusha
shl
loopne
aaa
shrl
adc
mov
fucom
js
bound
in
dec
xorl
lock
leave
adc
mov
bound
cs
rorl
dec
add
or
sarb
loope
inc
jp
xor
cmpsl
mov
cmp
pop
mov
out
mov
gs
and
out
ds
mov
push
addr16
divb
nop
in
fs
ret
adc
or
sbb
popf
jle
sarb
stc
dec
push
jg
aas
mov
lret
loopne
pop
lds
pusha
pop
shr
inc
ljmp
fiadds
testb
cmc
es
test
stos
and
mov
or
fcom
enter
push
test
mov
test
mov
decl
mov
and
adc
pop
cltd
pop
loop
out
imul
stc
and
call
int
jo
mov
pop
out
jb
mov
jle
shl
add
cwtl
and
add
pop
dec
or
cmc
outsl
cmp
or
testb
adc
cwtl
pop
into
lods
mov
and
mov
sub
out
ljmp
sbb
fcompl
xchg
jp
and
imulb
mov
decl
std
inc
jo
lret
or
insb
repnz
inc
in
psubusw
adc
pop
test
bound
and
leave
pop
cmc
int3
xor
sbb
ss
pop
mov
mov
jge
jb
mov
adc
and
imul
sub
ja
jmp
dec
and
push
jg
sub
call
pop
daa
aad
pop
pop
arpl
and
mov
mov
push
sbb
push
stos
jns
sbb
cmpsl
pop
mov
jmp
fs
adc
pop
push
aad
xchg
push
pop
mov
mov
aam
mov
popf
jns
lret
sub
arpl
add
push
bound
pop
jae
negl
jno
test
fwait
insb
push
nop
sbb
jecxz
push
sub
in
pop
or
scas
in
clc
cs
lahf
loope
stos
mov
inc
fs
pop
jl
aam
mov
inc
adc
sub
bound
inc
push
inc
mul
sbb
pop
test
mov
or
push
das
enter
inc
das
pop
add
in
mov
jne
aas
mov
mov
loopne
sti
push
popf
inc
insl
lret
cmpl
or
aaa
icebp
les
fcom
mov
sub
enter
repz
je
jle
xor
jb
inc
mov
xor
pop
popa
sbb
adc
sbb
inc
cltd
inc
sub
dec
lods
aad
xchg
lock
push
lret
out
cld
mov
sub
mov
js
faddl
xchg
pop
inc
mov
add
lea
into
out
popf
adc
mov
add
add
mov
cwtl
push
jmp
pop
jne
pop
mov
mov
pop
out
popa
xor
les
pop
dec
xor
inc
pop
movsb
fisubrs
ror
sub
lret
mov
pop
pop
dec
das
push
stos
mov
popf
mov
imul
jg
lds
fmuls
lahf
dec
xor
push
sbb
xchg
jmp
outsb
ljmp
nop
dec
sub
ret
cmp
dec
add
xrelease
or
push
mov
pop
or
fxch
sbb
sbb
jg
mov
add
pushf
jmp
push
out
mov
testb
dec
mov
add
or
and
rcr
push
mov
fnsave
xchg
rcrb
mov
out
jno
xorb
mov
popa
inc
mov
push
cli
js
xor
sub
sbb
dec
xchg
rolb
nop
xchg
inc
xlat
ror
mov
inc
push
test
mov
ret
jl
inc
or
jo
cmpsl
inc
jb
push
pop
je
fidivrl
or
and
sbb
sub
scas
push
out
dec
mov
mov
mov
std
xchg
iret
leave
dec
js
add
inc
cmpb
push
mov
xor
mov
jmp
cmp
lret
stos
orb
jp
or
fldt
test
pop
xchg
lods
stc
xchg
mov
mov
enter
mov
in
pop
mov
dec
hlt
mov
or
add
cmpsl
insb
jecxz
fistpl
add
std
out
dec
scas
xchg
inc
jns
mov
xchg
scas
push
enter
and
daa
adc
dec
in
js
popa
push
xchg
xor
ss
mov
lcall
lea
clc
ds
xchg
xchg
rclb
movsb
or
jecxz
loopne
xchg
adc
xor
xchg
out
stc
icebp
xchg
inc
xor
stos
add
pop
ret
hlt
scas
jl
imul
test
lea
add
cmp
add
add
nop
cmp
mov
xchg
jecxz
daa
out
mov
cmp
add
std
pop
mov
mov
sub
and
lret
ss
aad
aam
aam
pusha
ret
into
int
xchg
jbe
jns
ficoml
inc
jecxz
sbb
mov
add
mov
mov
mov
int
aam
or
insl
out
lahf
cld
sub
icebp
xchg
outsl
mov
outsb
xchg
mov
lds
xchg
mov
jbe
inc
mov
inc
adc
push
jge
adcb
mov
mov
jl
movsl
mov
leave
popa
dec
cltd
stc
cli
xadd
scas
add
lds
aam
icebp
inc
sub
iret
xchg
cmp
js
loope
xchg
mov
xlat
mov
or
xchg
enter
push
test
push
cmp
xchg
jb
push
xor
inc
test
punpckhwd
dec
shll
mov
in
jmp
xchg
jle
aas
jbe
je
lock
arpl
aad
mov
inc
rcr
xchg
push
push
repz
in
add
sub
fisubs
jns
dec
jne
addr16
lods
jge
repz
movb
test
ja
mov
inc
cmp
out
xchg
arpl
push
pusha
and
js
push
pop
stos
movsl
mov
lea
pop
add
ds
pop
movsb
add
leave
stc
dec
mov
mov
xor
lods
push
or
les
insl
mov
inc
or
push
lea
jmp
pop
lds
test
pop
mov
jg
pop
dec
inc
cmp
inc
popf
pop
insl
jbe
sub
inc
cli
insl
jns
mov
int3
inc
cmp
or
call
xor
scas
mov
mov
push
jne
rclb
js
cwtl
out
xchg
adc
push
jp
loop
fwait
push
test
inc
in
out
in
add
je
imul
mov
inc
lret
imul
mov
inc
fisubrs
sbb
clc
cmp
add
mov
stos
jnp
dec
add
jno
xor
xor
mov
arpl
and
sub
sti
xchg
orl
in
sahf
cmp
and
into
hlt
xchg
addr16
mov
sbbl
xor
stc
and
js
pop
inc
push
int
dec
shlb
sbb
jns
fiadds
push
push
insl
jnp
sub
mov
mov
fwait
adcb
lds
aad
cmpsl
movsl
out
into
sbb
inc
dec
lods
int3
shl
xor
pop
out
mov
and
test
cmp
add
or
call
mov
push
sub
test
jnp
rorl
mov
lock
dec
roll
mov
ret
sub
aas
adc
rcr
mov
mov
loop
xchg
mov
in
in
mov
aas
add
or
sub
in
mov
dec
and
xchg
cmp
movsl
adc
jmp
push
insl
xor
fsubp
xchg
push
bound
pusha
xchg
jge
mov
mov
aas
push
push
add
cmc
pop
aas
test
lods
push
pushf
shlb
xor
in
iret
aad
mov
xorb
xor
jno
subl
mov
icebp
outsb
loope
dec
pop
mov
mov
iret
mov
add
jb
ja
adc
push
and
pop
jmp
xlat
push
gs
ljmp
pusha
xchg
fwait
push
movsl
sub
inc
xlat
lea
fldenv
es
sub
sub
adc
cmpsb
ds
or
dec
lahf
loopne
xor
sar
pop
js
and
mov
stc
xorps
inc
inc
fsts
inc
pop
mov
cmpsl
dec
add
ret
fstl
repnz
dec
in
jns
adc
test
push
fwait
mov
out
push
cmp
test
pushf
mov
ss
loopne
daa
js
addr16
pushf
mov
aam
mov
add
jl
xor
movl
sbb
push
mov
sub
sub
test
insb
out
popf
lds
int3
or
and
ds
adc
popa
mov
mov
push
lret
out
jp
jle
pop
add
outsl
mov
cmp
test
mov
and
sub
push
scas
iret
cld
fnsave
push
xchg
mov
dec
daa
xor
jg
and
cmp
and
push
cmp
mov
adc
jnp
sbb
fsts
outsb
imul
lret
cmp
movsl
outsb
in
mov
pop
add
xchg
dec
jnp
sti
mov
ds
ret
stos
stos
rcll
add
fdivrs
pop
or
jo
jg
xchg
es
iret
aaa
and
push
mov
fwait
xorl
cmpsl
inc
dec
lods
mov
ret
mov
mov
das
out
xlat
sti
dec
jno
mov
imul
enter
cltd
xchg
hlt
js
mov
lret
pop
pop
xchg
js
xchg
jo
enter
mov
mov
xor
aas
fdiv
adc
es
mov
push
mov
fldenv
mov
inc
mov
push
pusha
sub
xchg
dec
mov
rcll
in
dec
arpl
loop
inc
fisubrs
popa
lret
cwtl
rclb
pushf
pop
les
inc
js
mov
and
loopne
sbb
enter
cmc
push
jo
jb
mov
rol
and
push
cld
das
push
aaa
xor
dec
and
out
insb
loop
data16
mov
add
sbb
out
fldt
jg
push
mov
std
aad
jno
ljmp
in
icebp
int
push
and
jo
dec
popa
pushf
dec
nop
mov
pop
stos
push
es
mov
test
scas
xchg
cmp
sub
popa
pop
in
mov
sub
xchg
xor
ljmp
or
mov
or
jmp
aad
loope
repnz
out
push
js
xor
ror
adc
mov
bound
push
ror
lock
orb
push
xorb
cltd
jnp
add
mov
or
icebp
out
adc
inc
mov
xchg
fsub
lahf
adc
xor
push
shrl
aad
in
push
cmc
pop
scas
std
lahf
xchg
dec
enter
cmpsl
push
cmc
in
mov
dec
jmp
mov
popf
add
mov
daa
inc
dec
lret
rcr
jb
cmp
out
and
adc
xchg
mov
adc
lea
lret
popa
fimuls
sub
pop
mov
xor
push
mov
mov
xor
dec
ret
mov
add
aad
rcll
lahf
nop
push
cmp
std
jns
cmpsb
jecxz
fimuls
loope
popl
clc
popf
scas
mov
std
mov
fs
repnz
inc
cli
xor
xchg
and
jo
loope
in
shlb
xchg
jle
jns
es
sbb
sbb
sbb
ss
xchg
xchg
mov
sbb
jge
int
adc
mov
xor
addb
loope
xchg
xchg
ljmp
push
mov
xchg
into
push
pop
lds
jnp
or
shl
out
adcb
insl
mov
xchg
int3
mov
xchg
into
pop
push
inc
test
mov
sarl
mov
mov
lds
mov
cmp
push
mov
mov
mov
cmp
sbb
loop
and
and
in
jp
push
insl
mov
shll
push
mov
test
pop
lods
mov
xor
push
mov
popf
rorb
shr
dec
push
lahf
sub
pop
adc
insl
scas
aaa
rorl
out
xchg
lcall
aad
xlat
mov
fwait
mov
xor
outsb
mov
rcrb
xor
fisubl
addr16
mov
mov
pop
mov
lods
and
push
cmp
inc
jno
xchg
jle
jmp
xchg
nop
add
lods
cmc
les
xchg
xchg
mov
out
adc
lea
aam
mov
mov
enter
fst
pop
sbb
shl
adc
bound
mov
dec
outsl
mov
scas
je
jecxz
xor
jno
cmp
add
dec
jl
and
mov
dec
out
lds
pushf
fmuls
push
sbb
sub
leave
xchg
sbb
mov
inc
jmp
in
repnz
mov
imul
out
mov
clc
jns
subb
sub
sbb
cmp
and
pop
pop
je
cmpsl
jbe
jmp
push
push
or
xchg
jge
mov
mov
and
dec
inc
or
rol
cmpsb
mov
rclb
loope,pt
jno
lret
or
jne
mov
mov
or
jne
lret
jns
cmp
pop
es
mov
insb
dec
sub
sub
test
aas
add
xor
scas
push
and
push
pop
test
push
xchg
call
add
ljmp
cmpsb
in
insb
sbb
add
cmp
push
mov
loope
sahf
xor
xchg
rcrb
stc
fistpl
and
xor
sub
jl
pop
xchg
xor
jmp
dec
pop
add
push
xchg
data16
decl
adc
repz
jmp
orl
test
les
aam
insl
repz
jmp
fucomip
push
out
fs
sub
pop
test
push
cs
adcb
pop
mov
or
and
inc
pop
je
sbb
mov
gs
in
ror
cltd
sahf
ror
in
inc
jp
nop
rep
cwtl
sub
js
cmp
or
mov
call
or
xchg
xor
xor
insb
push
or
jne
mov
mov
jae
fsubl
mov
test
lods
pop
sti
push
push
fistpll
stc
sub
mov
xchg
mov
out
inc
int3
mov
dec
dec
mov
je
xchg
fdivs
gs
adc
xor
in
jo
leave
add
cmpsl
mov
dec
jae
inc
inc
fisubrs
inc
dec
mov
and
push
xor
aas
setb
dec
mov
sahf
sub
jmp
mov
in
faddp
push
jo
jp
imul
adc
adc
outsl
pusha
dec
push
sub
mov
add
push
loop
adc
dec
fisubrl
in
push
test
pop
push
mov
mov
mov
stos
jnp
sti
push
shr
mov
test
cld
mov
outsb
fdivrl
mov
pop
sti
sub
repz
das
clc
cld
jo
movsl
in
mov
sbb
adc
inc
daa
push
dec
frstor
stos
jne
je
xor
inc
in
sbb
jno
sbb
call
jnp
pop
cli
mov
lret
das
jo
test
mov
out
movsb
repnz
ret
mov
add
inc
or
icebp
mov
add
leave
pop
xorl
push
inc
fbld
scas
sarb
arpl
mov
cmp
add
mov
xor
sbb
mov
xchg
add
add
adc
mov
cli
cmp
mov
negb
add
add
mov
jns
loopne
pop
adc
jo
mov
lds
pop
or
icebp
mov
fldl
loop
push
in
and
add
push
lsl
clc
into
jns
adc
ja
mov
or
mov
popf
push
into
push
dec
and
jno
xchg
mov
xchg
shrb
popa
push
jl
jne
add
test
cltd
out
out
sub
sbb
push
addr16
aad
lret
adc
ret
clc
xor
addl
nop
std
push
pushf
and
sahf
xor
or
adc
adcl
and
pop
and
lock
adc
xchg
loopne
push
cmp
pusha
push
enter
ret
push
aaa
cld
cwtl
ja
sub
push
mov
cwtl
mov
xor
jno
mov
mov
cli
mov
sub
or
or
mov
xchg
loopne
mov
loope
movsl
lret
add
adc
fcmovb
data16
idivl
out
mov
loope
dec
mov
cmc
and
inc
and
mov
lods
and
cwtl
les
data16
ret
dec
loopne
push
pop
jg
sbb
aad
cmpsb
jnp
add
out
or
lahf
push
pusha
push
inc
repz
enter
pop
or
ret
js
inc
add
mov
pop
popa
js
cmp
fdivp
xchg
ret
push
outsb
test
mov
scas
vcvttss2si
int
mov
mov
jecxz
das
rcrb
adc
or
inc
mov
movsl
or
daa
fimuls
test
test
jecxz
test
les
fidivrs
jne
and
movsb
inc
mov
push
xlat
insl
dec
or
aam
push
aas
push
xor
cwtl
sub
in
idivb
cltd
mov
sbb
jmp
icebp
iret
mov
sbb
and
adc
xchg
push
out
add
inc
xor
adc
ja
or
es
xor
sbb
ret
xchg
icebp
mov
cs
cmp
cmpsb
dec
or
and
xchg
sub
mov
gs
xor
scas
idivb
cltd
add
push
xor
shlb
js
shrl
push
xorl
push
out
imul
adc
push
imull
dec
cmp
icebp
adc
dec
test
mov
jg
xchg
fdivrl
int3
hlt
mov
andb
fistpl
and
into
ficoms
sarb
push
fdivrl
arpl
aas
lods
mov
jle
ret
test
push
loope
cltd
cmp
jb
sub
cmp
add
fmuls
add
outsb
cmp
pop
mov
pop
or
jg
fxsave
sub
adc
push
aaa
mov
sbb
and
addl
popf
mov
or
dec
adc
adcb
sub
sarl
js
stos
dec
ds
sbb
jg
push
ss
push
cwtl
xchg
cmpsl
sbb
jg
xchg
mov
sbb
sbb
ljmp
add
inc
imul
lahf
imul
inc
mov
adc
es
loope
fiadds
adcb
dec
mov
add
data16
fwait
movsl
je
inc
or
leave
sbbb
stos
shrb
inc
pop
std
mov
sar
out
repz
hlt
mov
mov
push
es
adc
xor
mov
mov
pop
pop
pop
loope
sbb
sub
xchg
mov
fsubp
outsb
in
sub
pushf
bound
enter
sbb
test
or
decl
sub
adc
fimull
xlat
xchg
cmp
cmpsb
pop
add
adc
xor
mov
adc
mov
sub
sbb
mov
cmc
shrb
fcmovne
xchg
jae
mov
mov
dec
outsl
jge
add
cmp
jae
arpl
popf
js
add
push
je
mov
mov
sub
xchg
add
adc
imul
sub
cmp
loop
mov
arpl
outsb
sbb
aam
popf
in
loop
mov
fdivs
dec
leave
lds
cmp
clc
jp
or
xchg
int3
jae
popf
jae
jmp
test
or
sub
div
mov
int
pop
mov
fmulp
sbb
cmp
fs
out
adc
push
mov
rcrb
shlb
pop
jno
jnp
or
ja
xor
addb
movsb
test
lret
jecxz
cmp
mov
push
xchg
pusha
or
and
xchg
ljmp
das
push
insb
clc
sbb
add
test
movb
sub
repz
jbe
cld
jne
mov
pop
ret
mov
fs
and
lcall
test
xchg
lahf
sub
xor
in
jg
mov
mov
enter
loop
and
sbb
aad
fmul
mov
jno
lcall
mov
sub
cmp
mul
jge
fldcw
gs
jg
sbb
js
pop
mov
xor
mov
ds
jmp
divb
test
add
nop
cmp
shll
test
push
in
push
or
sub
pop
jnp
lret
sbb
xchg
mov
cmp
and
ds
or
pop
mov
fst
xor
cmp
mov
mov
adc
or
pop
mov
xor
popf
int
add
lods
mov
popf
lods
hlt
int
jp
add
lds
sbb
jg
fldln2
inc
fstl
pushf
shll
lods
pop
fcmove
adc
xchg
adc
je
mov
jns
adc
shll
fstpl
sub
icebp
cmpsl
icebp
stos
shrb
mov
jbe
leave
jae
cmp
jns
or
or
mov
int
mov
xor
imul
lret
cmpsl
cmpb
add
push
push
or
mov
xor
sbb
es
sarl
cmp
sbb
je
stos
stos
dec
xor
and
fimuls
insb
push
push
jmp
push
add
mov
sbb
movsb
jecxz
adc
enter
add
scas
rclb
hlt
push
or
add
cwtl
adc
jne
fcmove
clc
movsl
mov
pop
sub
or
pop
mov
fisubl
cmp
mov
push
dec
push
xor
jle
js
bound
add
push
add
ja
xchg
popf
mov
pop
shrl
add
push
pop
out
test
movsb
ljmp
mov
inc
inc
jo
mov
ljmp
addr16
push
cltd
inc
cmp
sbb
lret
test
nop
xor
stos
scas
ds
jne
divb
aam
xchg
inc
lock
cmp
or
push
aam
mov
jmp
out
push
lret
and
les
js
cmc
sbb
pop
outsb
mov
push
cmpsl
movsl
bswap
push
fdivl
fwait
sub
fstl
xchg
jb
pushf
dec
mov
xchg
push
cmp
push
and
daa
bound
hlt
push
aaa
fwait
sub
leave
xor
xor
fistpll
jb
ret
pop
mov
push
sub
popa
mov
xchg
icebp
push
and
mov
add
sbb
jo
imul
sub
and
inc
add
xchg
fucomip
xchg
lea
adc
jg
in
loope
pop
xchg
adc
bound
iret
out
cmp
cltd
mov
mov
jb
xor
notb
sub
inc
or
inc
or
divb
imul
pop
xchg
xchg
pop
mov
addr16
sbb
and
jbe
xor
jl
arpl
inc
xchg
addb
ficompl
xchg
hlt
outsl
out
cmp
jo
push
inc
in
cmp
adc
mov
xchg
pop
xchg
sub
jg
jge
dec
or
outsl
inc
xor
cli
mov
inc
negb
cwtl
cmp
mov
add
jg
mov
mov
add
push
pushf
dec
mov
or
cmpsl
scas
sti
push
push
inc
das
call
test
cmp
xchg
and
lret
xchg
sti
dec
in
mov
xchg
ja
xlat
push
jb
je
push
or
fistl
out
call
andl
js
fwait
mov
shll
sub
mov
mov
jnp
sub
ret
mov
enter
adc
pop
or
inc
popa
test
daa
scas
add
push
jbe
or
fbstp
int
imul
scas
loopne
jns
sub
insb
adc
dec
in
es
mov
pop
ret
mov
pop
and
cmp
inc
push
mov
cmpsl
xor
fs
popf
add
jne
add
stc
outsb
pmuludq
cli
xor
icebp
adc
mov
sti
repz
sbb
pop
mov
cmc
xchg
push
aad
jmp
adc
and
add
dec
mov
cs
xor
clc
cmc
cld
in
and
hlt
lcall
stc
push
outsl
inc
movsb
pusha
adc
rep
je
sbb
pop
pusha
mov
pop
and
dec
dec
and
pop
inc
addr16
clc
push
and
es
data16
ret
mov
shlb
mov
adc
popl
repnz
andb
or
mov
outsb
insb
xchg
mov
sbb
inc
adc
push
jne
out
lods
mov
jb
clc
mov
fwait
cli
cmp
out
mov
or
mov
mov
adc
loop
sahf
loop
aam
ret
sub
dec
dec
dec
cmc
pop
adc
sar
imul
lods
lahf
mov
scas
mov
push
mov
pop
stos
test
xchg
aas
outsb
sub
jmp
and
adc
in
hlt
push
dec
clc
inc
mov
outsb
mov
sbb
loop
xchg
in
lods
add
subb
daa
jne
stos
inc
aam
insb
push
sbbl
daa
jl
sbb
ss
rcrb
pop
lret
mov
stos
mov
aaa
mov
push
mov
shl
sbb
ja
test
stc
orb
fisubl
add
in
in
jbe
lahf
xchg
adc
psubusw
es
imul
in
repz
add
xlat
pop
int3
sbb
lcall
xchg
clc
jecxz
lcall
cmpsl
push
sub
adc
xor
fcmovb
stos
jne
inc
xor
sarb
sahf
aad
mov
in
jge
loop
push
fisubs
fs
clc
or
sbb
sti
mov
lds
sbb
sti
inc
mov
or
test
dec
sub
imul
mov
add
or
adc
xchg
fmuls
or
mov
mov
nop
fs
in
stc
mov
scas
push
xchg
lods
cmc
jne
les
in
cmp
and
mov
mov
sub
cmp
jp
xor
sar
mov
cmp
cmp
mov
mov
mov
stos
pop
jle
jns
cli
dec
cmpsl
cmp
setns
cmp
lods
push
daa
sbb
adc
xchg
aaa
pop
and
daa
std
repnz
jle
addr16
shlb
pop
loop
cmp
imul
orl
scas
cltd
insb
test
arpl
xchg
es
inc
add
push
xor
sbb
enter
lret
negl
out
and
or
pop
fidivs
imul
xor
shrb
mov
jecxz
cmp
or
test
push
jecxz
aaa
pop
mov
mov
or
sbb
pop
cwtl
mov
dec
jnp
push
lret
dec
data16
incb
sbb
lods
add
cmpsl
es
rclb
sarb
test
enter
add
and
push
test
cmp
insb
lds
cmpsb
dec
sub
xchg
gs
roll
in
jnp
mov
flds
int3
out
adc
mov
out
mov
ja
jb
dec
xor
adc
jmp
in
clc
in
rolb
push
ljmp
xchg
mov
and
mov
lea
sub
pop
jl
test
adc
pushf
fisttpll
sar
sub
leave
pop
or
adc
mov
stos
xchg
flds
inc
pop
pop
adc
out
iret
mov
shll
sbb
mov
fistpll
std
sub
mov
testl
push
jecxz
repz
jnp
stc
mov
jmp
daa
lock
mov
mov
mov
adc
mov
in
adc
cmp
repz
les
mov
sahf
cmp
ret
cmpsl
mov
jo
and
shrb
mov
xlat
nop
std
aas
push
cmp
scas
fs
xchg
mov
insb
xchg
xchg
or
xchg
pop
movb
leave
cmc
or
jge,pn
jbe
jns
mov
scas
add
movsb
add
xchg
lcall
add
add
sahf
fidivrl
add
sbb
lods
add
outsb
pop
add
xchg
sub
mov
call
lods
sub
add
and
jns
lea
adc
and
lahf
mov
iret
gs
repnz
enter
pop
mov
add
rcrl
inc
aad
jmp
stc
aaa
or
inc
push
call
mov
inc
push
jmp
loopne
dec
out
fcmovu
in
sub
push
sbb
out
call
pop
sti
cmc
stc
and
adc
pop
and
jle
mov
push
sbb
es
cmp
and
andb
testb
lods
inc
push
in
repnz
cmp
cli
inc
fbstp
lret
data16
xchg
cwtl
push
sbb
mov
pop
push
das
push
lods
into
cmp
adc
aaa
test
rep
cmpsl
or
outsb
ljmp
pop
sar
scas
lea
cmp
mov
jne
add
add
mov
add
dec
sub
rorl
aas
jg
xlat
or
stos
jl
int
pop
imul
add
daa
push
xchg
push
incl
mov
cmpsl
out
dec
cli
into
sub
xchg
and
test
xchg
mov
pop
xchg
jo
add
insb
ds
dec
loopne
sub
inc
xchg
xchg
sub
and
out
mov
ret
cmp
bound
xorb
xchg
inc
mov
jne
fwait
jl
or
mov
insb
lock
idiv
and
pushf
sub
fisttps
add
das
mov
addr16
test
insl
stc
sbb
es
pop
sbb
je
rcll
add
mov
xor
pop
mov
add
adc
stos
in
pop
xor
jecxz
push
clc
mov
xor
imul
out
mov
je
dec
rep
fists
sbbl
es
sub
mov
push
dec
adc
xchg
dec
dec
out
mull
fs
xchg
cmp
inc
push
mov
push
lock
ret
inc
insl
stc
les
add
loopne
bound
xor
popf
test
and
flds
aas
enter
fcoml
sub
jle
sbb
cmp
push
add
cmpl
push
xor
outsl
into
cmpl
lods
and
and
ret
xlat
cmc
loopne
jns
rcl
xor
sti
push
mov
aad
outsl
test
jg
popa
sarl
xchg
orb
filds
or
lods
orl
jge
je
and
aaa
add
call
push
stos
xor
xchg
xor
cmp
or
xor
pusha
and
shlb
lea
insb
syscall
add
or
mov
xchg
aas
and
arpl
cmp
push
mov
aas
mov
loop
push
pop
fdivrs
mov
adc
add
jnp
sti
pop
xchg
test
sti
std
scas
push
xchg
adc
push
or
ret
dec
popa
je
jns
sub
sub
cmpsl
jo
sbb
dec
mov
jl
push
test
nop
cmpsl
push
das
push
dec
pusha
inc
movsl
shrb
xchg
nop
loopne
icebp
dec
lock
lock
repz
lcall
jge
inc
xchg
mov
cs
into
adc
add
pop
out
mov
push
mov
mov
fdivl
lret
add
imul
fsubrs
adc
pop
nop
scas
jmp
shlb
adc
xor
lea
mov
test
rolb
sti
add
stos
sahf
add
mov
mov
arpl
movsl
or
subl
stos
pop
jne
cmpsl
jb
outsb
cwtl
out
push
outsl
sub
mov
sbb
xorb
mov
adc
ja
repnz
daa
imul
scas
push
pop
inc
sbb
push
clc
cmp
pop
in
push
xchg
mov
adc
push
jmp
aam
cmpsl
adc
dec
pop
cli
lea
jno
pop
popa
lea
mov
pushf
dec
pushf
or
lahf
aam
bound
cmp
sub
into
pop
nop
sbb
test
jns
cmpsl
mov
daa
jno
stc
and
jmp
xlat
push
mov
fdivrs
mov
mov
xchg
inc
fisttpll
hlt
inc
ds
scas
xchg
addl
mov
lea
mov
scas
fistpll
test
jb
lods
push
jl
and
scas
mov
mov
fwait
ret
jge
fstl
shl
insb
sahf
and
xor
rcll
pop
mov
aaa
and
mov
aad
jecxz
or
stos
out
pop
inc
cmc
insl
cmc
jmp
repz
push
sub
dec
inc
cmpsl
push
sub
js
sbb
dec
fmul
pop
sbb
push
shl
stos
push
int
nop
cmp
xchg
sub
test
adc
leave
test
cld
mov
cwtl
cs
mov
add
movsl
adc
adc
jge
lret
clc
push
jl
cmpsl
push
repnz
or
jmp
xor
xchg
addl
fdivl
test
inc
xchg
add
mov
insb
shrl
add
mov
out
fcmovnb
xchg
cwtl
dec
test
lcall
jne
xor
add
out
arpl
pop
cmp
outsl
cmp
sub
rcr
outsl
mov
add
rolb
pop
inc
xlat
xlat
cmp
mov
add
dec
mov
and
dec
js
cwtl
dec
insl
xor
jl
popf
xor
push
sahf
ljmp
nop
sbb
xchg
sub
lock
shll
ret
daa
xor
sub
or
lds
and
lret
orl
mov
movsb
cwtl
sub
mov
stc
sarl
push
in
xchg
dec
xor
popf
and
fsubr
inc
or
aad
cmpsb
add
lahf
mov
int3
pusha
divb
mulps
fmuls
lods
and
mov
pop
adc
and
and
mov
xor
lret
mov
icebp
sbb
push
insl
xor
jle
mov
jne
xchg
repz
dec
mov
stos
xchg
adc
in
inc
cmpl
out
das
into
stc
add
mov
je
sub
loope
sub
es
es
fldl
xor
sahf
dec
push
loopne
lds
iret
jo
add
les
cmp
push
mov
push
adc
jl
pop
mov
mov
rcll
cmpsb
push
adc
movsl
out
adc
outsl
or
or
mov
pusha
cmpsb
lret
std
jno
sbb
dec
hlt
pop
in
xchg
cmp
mov
call
xchg
mov
xchg
add
arpl
lcall
imulb
test
outsb
pop
add
cltd
fistpll
insb
sbb
mov
inc
pop
test
repnz
out
sbb
push
and
and
jg
mov
or
cwtl
ret
jle
and
pop
mov
inc
imul
xor
jp
jg
stos
sub
das
cmp
cmp
cmp
pop
xor
sbb
cmpsl
mov
and
cmp
push
add
ret
ds
mov
or
sahf
sub
lock
lock
xchg
cmc
enter
in
stc
jge
repz
inc
ss
mov
rclb
lds
jns
mov
push
ja
mov
in
jmp
sub
cld
clc
repz
stc
mov
push
cmp
adc
xor
mulb
call
in
shl
insl
test
jnp
in
into
lcall
iret
fwait
ja
ret
lret
xor
ja
or
out
sbb
mov
mov
jae
xor
ds
mov
mov
push
notl
mov
jae
rcrl
or
out
xchg
mov
or
nop
dec
inc
adc
icebp
ljmp
pop
aaa
hlt
jmp
mov
enter
mov
rorb
imul
loope
and
lods
fs
imul
scas
push
pop
dec
pop
inc
popf
popf
dec
mov
in
movsb
mov
push
xchg
daa
js
out
mov
stc
jecxz
test
xchg
outsl
andl
shl
mov
mov
test
adc
inc
xor
pop
gs
inc
or
in
mov
in
les
dec
mov
sahf
mov
fmull
cs
scas
xchg
ret
xchg
jo
inc
sbb
jae
sahf
xchg
fdivs
adc
in
pop
push
pop
mov
push
out
lds
cmp
pop
frstor
sbb
mov
daa
xor
inc
push
gs
jb
cld
int
push
movsb
jg
lods
inc
popf
cmpsb
int3
cmc
jl
xchg
std
cmp
iret
sub
mov
xor
mov
xor
sub
lcall
pop
inc
sbb
sti
imul
cltd
mov
rorl
mov
out
ss
dec
add
in
je
sti
fcmovu
sub
loop
xchg
fcoms
repnz
jg
mov
loopne
out
jns
outsl
push
xor
cmpsl
divb
wrmsr
mov
and
out
push
sbb
mov
imul
xchg
mov
cltd
loope
sub
mov
xchg
xor
cmp
sbbb
adc
popa
push
hlt
push
mov
cmp
movsb
out
inc
push
sbb
sahf
xchg
pop
ja
dec
inc
push
cmp
mov
push
outsb
or
fdivl
mov
xchg
jmp
fnstcw
mov
int3
test
pushf
out
lret
stc
outsl
inc
xchg
pop
test
mov
frstor
add
mov
sti
cmp
in
sarl
mov
mov
jecxz
mov
mov
sbb
xchg
lcall
mov
icebp
push
outsb
inc
pop
shrb
lds
fwait
mov
addl
jae
sbb
inc
add
cmp
movsl
ljmp
cmp
adc
enter
and
ljmp
shrb
enter
push
mov
lret
mov
xchg
push
and
daa
xor
inc
adc
sub
leave
outsb
dec
dec
add
add
orl
mov
xchg
ret
inc
stos
js
mov
or
pop
push
leave
leave
sbb
stc
scas
and
repz
mov
ret
adc
fildll
lahf
inc
dec
xadd
test
mov
loope
push
mov
in
mov
jae
xor
cmpsb
mov
in
lock
mov
xchg
int
mov
cs
leave
ljmp
js
mov
mov
inc
mov
cwtl
ljmp
test
xor
cmpsb
jmp
nop
lea
add
lock
addr16
lea
push
incb
and
jmp
adc
cld
aaa
xor
jp
jge
pusha
cmp
mov
jg
repz
add
sub
pop
scas
add
xchg
shl
shrb
pushf
setnp
in
jmp
mov
sub
jne
ret
lahf
dec
fistpll
adc
repnz
out
inc
nop
inc
cmpsl
mov
aad
rcrl
xchg
ja
shll
sbb
jmp
fbld
sahf
add
xor
test
jb
jle
lea
ret
lods
xor
and
es
test
or
sbb
lahf
aad
pushf
pop
add
pop
dec
mov
jo
sub
jmp
push
pop
sub
out
add
jl
test
ret
pop
jle
rorl
adcl
jmp
mov
adc
aam
sub
push
and
cmp
jno
mov
mov
xor
repnz
sub
jmp
or
movsb
inc
mov
aad
adc
and
inc
cmpsb
lock
lret
popf
push
sub
jns
movsl
loopne
add
mov
movsb
sub
cmp
jno
pusha
pop
pop
cmc
in
cmpb
push
fadds
mov
inc
js
mov
cmp
xchg
push
sbb
cmp
aad
iret
xchg
or
jp
aaa
fcompl
sub
shll
les
or
test
xchg
out
xchg
adc
push
jo
div
mov
jno
pop
mov
mov
sub
push
out
movsb
in
pop
adc
icebp
or
mov
lods
dec
cs
stc
push
or
pop
dec
or
push
leave
sub
mov
and
daa
inc
or
lds
cli
mov
jp,pn
shrl
aaa
mov
sbb
scas
push
push
sbb
push
push
orb
stos
cmp
test
xlat
call
nop
xor
mov
clc
stos
jp
dec
dec
cmpsl
push
clc
inc
icebp
cmc
add
scas
mulb
fsts
push
call
mov
mov
mov
repz
hlt
jl
mov
ret
sbb
enter
mov
xor
pop
shrl
mov
out
mov
pushf
addr16
out
iret
mov
sbb
pop
test
cmpsl
mov
dec
push
int3
sub
jle
loopne
test
push
dec
push
jp
add
stc
out
inc
std
fidivrs
movsb
dec
dec
jg
pop
stc
mov
add
fisubl
jno
rcl
pop
cltd
int
sbb
cmp
ljmp
jnp
call
ljmp
or
adc
jecxz
dec
pushf
push
inc
xchg
xchg
dec
loope
orb
fsubl
push
add
rorl
xlat
repnz
xor
jne
dec
mov
stos
and
pop
arpl
mov
scas
mov
mov
subl
push
aas
cmc
sub
lahf
lock
ret
xorb
je
mov
adc
mov
pop
inc
push
rorl
clc
pop
jb
push
sbb
cmpsl
xchg
sub
loop
ljmp
jmp
mov
and
les
dec
repz
mov
xor
idivl
into
popf
or
arpl
sbb
push
ss
rclb
mov
xchg
cld
adc
xchg
pop
or
idivb
mov
jae
arpl
fwait
in
stos
or
sbb
pop
cmp
leave
xor
cld
enter
mov
mov
and
jbe
in
inc
adc
inc
add
in
gs
push
sbb
stc
in
aam
pop
cld
mov
push
mov
or
dec
jae
adcl
lock
sbb
mov
lea
lret
lahf
insb
cli
push
inc
fistl
mov
cmpsl
dec
unpckhps
jmp
push
insb
pop
lods
xchg
and
bound
sbbb
pand
into
and
adc
call
and
cmp
add
lahf
mov
icebp
cvtps2pi
mov
shl
stos
lahf
jecxz
sub
pop
xchg
mov
cmp
iret
insl
add
mov
orl
in
mov
push
mov
inc
inc
or
outsb
adc
cmp
mov
adc
pop
mov
repz
sbb
insl
maxps
add
fs
add
stc
dec
negl
mov
daa
sbb
pop
and
cs
lret
xor
sahf
mov
jge
bound
cmp
addb
clc
jl
xchg
xlat
mov
fs
add
inc
push
daa
ret
pop
inc
mov
test
test
sbb
add
sbb
or
outsb
jb
popf
jbe
jg
xchg
pop
or
push
cmp
in
mov
dec
ret
iret
enter
ret
es
push
cmp
repnz
xor
xchg
jp
addr16
ljmp
imul
xchg
push
fwait
sti
cmp
add
arpl
daa
and
cmp
notb
mov
push
into
outsb
lahf
push
scas
repz
and
push
xchg
les
pop
loope
and
iret
imul
dec
mov
cmp
in
addr16
test
mov
sub
inc
xchg
mov
adc
add
loopne
loopne
lret
cli
jne
adc
insl
rolb
pusha
add
sub
pop
cwtl
fisubs
mov
inc
lods
sbb
cmp
adc
mov
jecxz
fisttpl
andb
mov
push
repnz
or
test
imul
adc
ret
popf
jae
les
cwtl
mov
jmp
xchg
cli
jge
daa
xchg
jg
mov
lods
cli
pop
popa
sub
cmpsl
or
sub
and
repnz
out
mov
mov
adc
push
fldl
repz
jbe
adc
and
sub
xlat
mov
shlb
sti
cmp
stc
inc
xchg
int3
jmp
mov
scas
sub
movb
mov
inc
lods
mov
dec
jp
lea
lods
sbb
push
mov
or
scas
add
sub
popf
scas
pop
or
test
ret
cli
adc
xor
insb
mov
ret
mov
out
int3
inc
dec
pop
pop
stos
xlat
adc
pushf
xchg
cmp
sbbb
fadds
lret
dec
ja
js
dec
xchg
adcb
pop
lods
mov
sbb
xor
bound
ss
aad
insl
mov
popa
mov
std
mov
push
push
je
add
test
lods
mov
scas
dec
ss
repnz
mov
sub
or
pop
in
fnstcw
imul
mov
push
pop
nop
dec
fldl
sub
gs
loop
mov
insl
jge
lret
insl
sub
fidivrl
xchg
sti
or
jmp
jbe
or
cwtl
insl
push
insl
pop
test
imul
test
jl
insb
dec
xchg
pop
adc
pusha
mov
sahf
sar
mov
jmp
or
mov
shl
push
rcl
jge
sbbl
jne
test
jle
je
xadd
ljmp
aam
push
arpl
fs
call
sub
xor
jl
scas
inc
dec
cmc
xchg
xchg
sub
ffree
xor
cmp
lock
ret
push
jg
mov
push
xchg
repnz
daa
jno
push
loop
dec
repnz
popf
not
pop
loop
adc
sub
orb
popf
mov
pop
dec
mov
loop
int
je
sbb
mov
aaa
add
dec
lahf
pusha
push
fidivs
mov
jae
lods
mov
push
cwtl
outsb
sbb
xor
gs
iret
xchg
and
test
and
out
or
loope
stos
cli
or
or
jb
icebp
inc
cltd
lret
es
call
dec
iret
sahf
jno
adc
and
xchg
or
or
push
xchg
cmpb
push
cmp
jne
mov
repnz
test
or
aaa
lods
sbb
push
jl
ds
gs
push
mov
inc
leave
jo
das
icebp
lret
outsl
jp
push
andb
call
pushf
cmp
xor
mov
nop
mov
test
pop
sbb
imul
mov
adc
or
fdivs
adc
daa
and
cmp
std
aaa
aad
push
mov
push
es
push
xlat
jnp
int
scas
insb
ret
or
das
cltd
hlt
pop
and
popa
aas
cwtl
std
inc
mov
adc
add
cwtl
pop
push
mov
clc
inc
mov
pusha
pop
imul
cmc
add
sub
dec
je
push
sbb
shll
jmp
or
repz
mov
inc
mov
bound
push
in
nop
or
mov
pop
inc
xor
dec
test
push
dec
pop
jg
xchg
sahf
popa
out
rorl
add
mov
in
idiv
jg
and
sti
leave
addr16
add
outsb
pop
add
ficoml
test
mov
repnz
notl
mov
repz
mov
test
xchg
andl
xchg
jae
push
ja
xchg
cmpsl
xlat
cmp
frstor
scas
fistl
cmp
scas
adc
loopne
mov
lock
inc
pop
xor
jno
loope
sub
repz
cs
pop
push
dec
xchg
cmp
pop
push
call
mov
xchg
mov
inc
lahf
sbb
fcmove
xor
mov
mov
icebp
leave
lods
js
rcrl
inc
dec
popf
mov
inc
pushf
mov
xchg
mov
sbbl
pop
push
lahf
mov
int3
jmp
add
negb
outsb
ficompl
sub
push
mov
stc
nop
mov
repz
cmp
sar
add
sbb
or
repz
dec
or
imul
xchg
ljmp
inc
andl
inc
ret
into
adc
and
int
addr16
fistpll
adc
and
lods
insl
push
je
pop
addr16
jno
loop
aad
and
dec
jge
inc
fsub
push
cwtl
dec
add
cmpsb
and
lret
jg
clc
xchg
lcall
jns
dec
leave
sbb
or
inc
push
mov
push
xchg
fs
sbb
cmpsb
mov
test
pop
das
inc
ds
or
sub
mov
movsl
les
adc
ja
roll
sbb
xchg
imul
jb
inc
adc
cmp
sbb
movsb
sub
sub
pop
popf
outsl
lods
mov
leave
repz
jp
mov
ret
add
xchg
push
xchg
out
adc
shr
in
jne
rcrl
xor
dec
xlat
fsubrl
in
test
imul
pop
cwtl
push
add
and
xlat
dec
adc
sub
pop
sbb
roll
ss
rol
jbe
sbb
pusha
fists
ficompl
ret
xchg
xchg
pop
les
mov
xor
cmp
pop
pop
sbb
inc
jl
push
dec
mov
push
mov
ljmp
rcr
mov
mov
daa
enter
les
sub
test
pop
pusha
mov
push
or
int3
xor
in
mov
jecxz
sub
push
in
add
push
jecxz
jbe
ret
sub
pop
dec
xor
xchg
jecxz
clc
sbb
dec
ret
push
pop
cltd
and
mov
or
imul
dec
stos
adc
xchg
shl
pop
fsubrs
mov
jns
mov
jl
loopne
das
sbb
hlt
add
out
add
pop
xlat
cwtl
add
out
xorl
rcrl
pop
add
mov
rolb
aaa
roll
pushf
jns
aas
sbb
xchg
mov
int3
aad
jp
loop
mov
arpl
mov
insb
mov
mov
mov
loopne
mov
ja
test
dec
inc
jle
insl
push
jmp
mov
mov
lret
int
mov
outsb
inc
cwtl
push
sbb
jne
pop
out
dec
xchg
popa
shr
xor
roll
mov
push
add
jmp
xor
idiv
es
mull
stc
scas
push
add
jmp
outsl
xchg
inc
cs
push
add
jo
xor
mov
movl
jmp
xchg
dec
jns
sahf
orb
add
out
rorb
popa
outsl
inc
mov
jno
imul
cmp
sbb
fcom
fs
test
pop
jle
pop
cmp
pop
push
leave
xchg
xchg
mov
ret
outsb
mov
mov
ljmp
inc
adc
add
cli
sbb
and
sbb
sti
mov
xorb
mov
inc
xor
fists
dec
push
into
inc
insb
pcmpeqd
push
movsb
sti
xor
testl
jle
pop
scas
inc
cwtl
mov
adc
sbb
pop
mov
push
popf
inc
gs
mov
mov
cmpsl
repnz
popf
pop
test
jge
mov
xor
imul
shll
data16
les
sbb
pop
shl
xor
mov
xor
mov
mov
std
loope
cmp
jbe
sub
mov
xor
cwtl
clc
cs
dec
adc
shll
xor
outsb
sbb
lcall
fsubrl
mov
in
pop
push
leave
gs
mov
jns
xchg
adc
pop
cmpsl
scas
mov
sbb
rcll
aam
lods
add
stos
jae
jns
lret
imul
cmc
pop
mov
jl
or
mov
f2xm1
adc
jae
or
rcrl
inc
aaa
adc
xlat
dec
push
pop
inc
and
nop
lea
decb
and
roll
fwait
pop
adc
sbb
daa
fcoml
xor
popf
icebp
lret
mov
xor
jnp
jge
pop
or
test
xchg
and
hlt
lock
mov
pop
lret
out
lahf
xchg
dec
imul
mov
cwtl
push
sbb
push
push
sbb
dec
cli
int
jb
mov
fisubrs
in
fs
xor
add
dec
ret
inc
mov
dec
jmp
dec
mov
loop
nop
or
sbbb
inc
aas
and
cwtl
xchg
add
addl
test
xchg
add
push
cmp
hlt
pushf
add
int3
cmp
sbb
push
cli
adc
dec
or
dec
push
icebp
fdivrp
inc
sub
or
pop
lret
or
sbb
cmp
daa
aas
sbbb
push
or
push
jmp
imul
lret
add
out
pop
js
pop
addr16
leave
icebp
xchg
cmp
clc
mov
data16
shrb
add
lret
mov
or
stc
fmulp
push
hlt
insl
fisubrs
mov
inc
xchg
cmp
adc
popa
call
sbb
clc
dec
xorb
aad
push
or
insb
lcall
fbstp
jg
dec
jne
je
ret
push
imul
push
arpl
xor
outsb
jo
inc
push
mov
mov
mov
pushf
decb
popf
xor
xchg
push
jno
dec
outsl
into
mov
dec
or
outsb
xchg
mov
jmp
adc
adc
adc
dec
push
mov
test
push
ja
les
pop
or
lea
push
fwait
add
push
imul
push
ret
popa
inc
and
pop
cld
mov
push
jecxz
add
add
add
in
and
aas
fcomip
out
or
cs
aad
add
outsb
pop
add
cwtl
add
pop
mov
sbb
dec
hlt
rorb
cmpb
nop
sahf
inc
mov
lret
xor
mov
iret
jb
fcmovnb
in
sub
sbb
adc
scas
and
mov
or
call
mul
fistps
testl
data16
push
lahf
and
cs
dec
add
adc
dec
gs
test
rcrl
cmp
mov
stos
testl
add
cmp
pop
xor
mov
mov
jmp
and
imulb
ljmp
clts
adc
movsw
scas
and
xor
test
sbb
lret
inc
subl
cmpsb
cmc
pop
mov
pusha
nop
mov
ret
jns
mov
dec
ss
aas
xor
loop
xchg
cmp
incl
xchg
and
pop
jmp
pop
mov
push
sti
shll
mov
loope
aad
pop
jb
in
ja
pop
les
icebp
movsb
in
lahf
sub
testb
mov
mov
fwait
jae
pop
add
or
cmp
iret
dec
xor
test
push
je
mov
fiadds
loop
cs
pop
lea
lock
mov
pusha
addb
mov
push
mov
out
jae
xlat
popa
push
xor
mov
sbb
jno
xchg
adc
addr16
mov
lock
pop
ror
lret
mov
push
pop
aad
lahf
mov
arpl
add
mov
aas
enter
lahf
jne
mov
xchg
ror
arpl
cmp
push
sbb
add
in
pushf
bnd
xor
in
mov
jle
pop
sbb
lret
cld
imul
stos
pop
mov
xor
jecxz
fcmovb
or
dec
repz
push
lods
and
stos
mov
xor
mov
xchg
or
fwait
and
inc
shll
adcl
sub
out
mov
movsl
test
mov
sub
sub
jle
xor
adc
lods
imul
je
or
cwtl
xor
add
jp
jbe
adc
stos
inc
jecxz
adc
popf
in
push
movsl
ss
jecxz
mov
jp
incb
and
loopne
or
jp
or
dec
shl
or
dec
andl
out
stos
add
pop
mov
not
xchg
aad
mov
fldt
shrl
xor
andl
xor
es
fildl
push
dec
punpckhwd
loope
scas
std
mov
cmp
jae
gs
les
sub
outsl
cmp
outsb
sub
cltd
mov
nop
jle
or
push
add
daa
add
and
mov
int3
mov
jle
cwtl
mov
test
pushf
dec
jns
sarl
imul
mov
jg
mov
push
adc
in
jo
enter
int3
adc
and
and
je
cmpsb
dec
dec
jmp
cmp
aas
xchg
add
fs
sbb
mov
mul
dec
or
or
pusha
fwait
js
repnz
mov
xor
orl
mov
adc
pop
and
push
pop
sbb
jecxz
mov
dec
push
adc
or
ss
icebp
hlt
inc
xor
fdivl
pop
scas
mov
pop
faddl
pop
orb
adc
iret
fdiv
dec
out
test
mov
aaa
dec
cmp
test
push
cmpsl
inc
xchg
and
mov
lret
scas
rcrl
out
pop
fneni(8087
push
xchg
or
dec
mov
in
movsl
test
gs
or
lods
fbstp
popa
and
loop
mov
clc
jl
mov
cwtl
push
sub
jp
push
clc
and
xor
cmc
mov
jle
adc
test
adc
std
orl
mov
pop
rorb
cmp
sahf
push
or
cmp
jbe
inc
lahf
fistpll
cltd
dec
inc
jae
test
lcall
les
js
push
js
sarb
ja
ljmp
xor
mov
xlat
mov
insb
mov
push
mov
lock
lea
lcall
lods
jl
pop
jmp
in
inc
mov
push
jg
lcall
and
cltd
mov
repnz
or
mov
push
cmp
jge
popa
sahf
jp
jle
fisubrl
aam
rolb
dec
mov
mov
pop
addr16
dec
lcall
stos
lret
lock
inc
jae
jmp
xor
daa
push
out
sub
or
jno
aam
xchg
jp
ja
add
iret
mov
sub
jmp
inc
push
test
or
mov
mov
adcl
fcmovbe
push
movsl
jne
sub
lock
ret
rcrl
sahf
jo
xor
sahf
jl
cwtl
xchg
jne
mov
jp
outsl
loope
push
xor
ss
stos
xchg
hlt
ljmp
mov
loope
push
dec
test
imulb
jp
clc
test
adc
insb
push
stos
aam
ja
pop
sub
ja
mov
pop
call
aam
mov
ds
sub
js
xorl
repnz
cli
dec
xchg
and
fisubl
dec
mov
in
mov
iret
sub
fisubrl
pop
push
in
add
addr16
sahf
in
andl
out
inc
sub
jecxz
xchg
jmp
sub
add
lds
jge
dec
mov
test
nop
xchg
cmpsl
jmp
add
insl
mov
mov
sbb
loop
cmpsb
int
ss
cmp
adc
sbb
lret
in
mov
cmp
inc
xlat
lock
repz
cld
cmp
mov
lods
iret
test
sahf
ret
add
adc
xchg
test
sbb
aas
mov
xor
and
mov
push
inc
xchg
cwtl
sqrtps
mov
fcoms
mov
arpl
cli
lret
pop
test
in
and
xorl
in
cltd
mov
cmpsb
pop
push
subb
mov
dec
push
inc
ss
mov
and
mov
test
cmp
cmp
jb
aaa
sub
mov
js
fcmovnb
sub
arpl
addb
ficompl
testb
test
mov
ss
jl
pop
loop
inc
in
shr
andb
bound
xchg
jge
outsb
sbb
stos
mov
pop
adc
add
sbb
scas
loop
mov
lret
ja
daa
inc
call
mov
outsb
pop
add
inc
cli
cld
xor
inc
jge
popf
adc
sysret
sub
insl
jp
dec
js
lret
std
jne
rcrl
push
and
push
or
dec
lock
lret
loope
mov
dec
sbb
adc
aam
adc
repnz
mov
fisubrl
gs
add
movsb
hlt
sub
cmc
mov
or
push
test
sub
sbb
stos
aad
mov
leave
cmp
push
int
inc
xchg
inc
or
call
or
lds
pop
sbb
insb
mov
cli
mov
pop
iret
mov
add
repnz
movd
push
std
cmp
insb
jno
mov
ds
push
jno
nop
es
mov
sub
bound
cmp
in
mov
inc
push
jp
fdivrl
rorb
sbb
xchg
mov
js
mov
popa
cmp
call
mov
adc
lods
inc
addb
pop
mov
ss
cmp
es
cltd
mov
sbb
sti
xorl
jecxz
nop
cmp
dec
in
jg
gs
stos
pop
cli
inc
sbb
mov
mov
int
push
hlt
pusha
mov
dec
sbb
xor
push
in
cmp
addr16
movsb
hlt
xor
sub
dec
int
clc
into
loope
divb
mov
bound
add
cmp
xor
rolb
cmp
jl
and
aam
sbb
mov
ds
lock
and
push
mov
mov
daa
pop
adc
push
jne
ss
enter
mov
je
inc
fstl
cld
test
cmp
jns
cld
lcall
fimull
inc
mov
mov
aam
cmp
push
jmp
cmp
sbb
or
dec
inc
xor
or
pop
xor
ret
ds
imul
repz
dec
pop
adc
lods
lret
adc
addr16
sub
push
insb
mov
adc
sub
push
out
dec
inc
xchg
jnp
enter
sub
out
xchg
inc
add
cmp
dec
sub
mov
inc
iret
dec
and
mov
push
sub
xor
lock
jmp
outsb
cli
jg
sub
push
sub
hlt
push
enter
lods
adc
cmp
pop
mov
or
imul
cli
call
jge
test
cmp
push
xor
mov
cmp
icebp
out
pop
adcl
hlt
push
mov
jo
mov
mov
outsb
inc
push
sbb
mov
sbb
sahf
jns
inc
mov
pop
test
dec
add
lea
sbb
movsb
aam
pop
mov
test
adc
lea
jmp
dec
mov
mov
sbb
addr16
rcrl
das
out
in
leave
adc
aad
pop
xor
movsb
icebp
ss
dec
loopne
fcomps
stos
xchg
imul
js
sbb
push
xor
push
fstl
push
jb
ja
or
add
repnz
adc
dec
nop
xor
mov
push
push
mov
cltd
sub
aam
and
lods
daa
or
xor
cmc
adcl
aad
add
in
daa
ljmp
or
in
lods
cmp
adc
int
jb
add
mov
in
sbb
mov
jo
mov
sub
and
push
mov
mov
nop
das
aas
cmp
test
aas
movsl
push
nop
pop
pop
in
ret
or
push
or
xchg
push
mov
mov
sbbl
shl
sbb
push
jmp
daa
xor
push
xchg
pop
xchg
les
and
sbb
lea
sub
mov
or
inc
movsl
pop
mov
mov
pusha
das
fdivrl
shrb
popf
push
idivl
daa
jbe
out
pop
add
out
dec
jp
sbb
push
aaa
mov
jbe
add
addl
push
mov
mov
jl
push
push
sub
ret
ja
cltd
scas
pusha
adc
sub
mov
sub
inc
imul
add
stc
adc
sub
inc
movsb
push
xchg
jl
inc
xchg
out
push
notb
les
xlat
stos
gs
rorl
arpl
int
jle
std
test
xor
fcmovb
aas
stos
sbb
pop
popf
dec
test
dec
adc
xchg
lret
add
lds
xor
sub
mov
faddl
leave
push
cmpsl
sbb
sbb
pushf
sub
mov
xchg
outsb
or
mov
sar
cmpsb
imul
movsb
repz
xorl
mov
je
and
into
std
lods
jbe
repz
xor
jge
mov
jo
or
lods
mov
and
mov
mov
push
test
cmc
sbb
hlt
jns
mov
jecxz
movsl
jns
outsl
lahf
dec
mov
pusha
xor
and
mov
pushf
dec
push
jmp
sub
cld
inc
adc
shlb
ds
cmpb
jnp
add
mov
movl
add
push
cltd
ret
stc
push
les
out
bound
subb
fidivrl
xlat
shl
fsts
lcall
cmp
jnp
loope
xor
dec
mov
fwait
dec
sbb
ret
push
add
xor
je
repnz
dec
imul
int3
int3
jp
scas
fisubrs
repnz
pop
ficomps
and
dec
clc
jecxz
movsl
mov
hlt
or
inc
sub
and
or
adc
mov
bound
cwtl
imul
call
mov
add
mov
fadd
push
shl
stos
add
aam
mov
push
dec
adc
test
mov
jnp
jg
mov
into
movsl
je
sbb
rolb
dec
addr16
bnd
sub
es
xchg
dec
cmpsl
pop
daa
cmp
or
mov
hlt
push
pop
ss
loopne
aaa
es
scas
jl
or
add
les
add
xchg
fidivl
or
jle
lret
lods
mov
addl
popf
inc
cmp
repz
leave
cmpsb
addl
cwtl
jmp
js
push
adc
xchg
cmp
test
cld
dec
idivl
push
mov
aam
lds
add
xchg
adc
sbb
int
mov
outsb
jmp
xchg
mov
clc
inc
stc
pop
std
stc
xor
sbb
dec
and
sbb
push
orb
in
xchg
call
out
fwait
lds
add
pop
mov
pop
es
jmp
mov
add
outsb
pop
add
push
jmp
dec
inc
pop
out
int
mov
push
imul
and
stos
cmp
outsl
addr16
xlat
push
xor
dec
pusha
and
outsb
add
iret
pop
cmp
das
aam
lock
aad
xchg
jl
or
in
inc
mov
dec
loope
mov
push
and
push
jbe
lahf
push
inc
xchg
mov
xchg
dec
xchg
popf
js
cmp
mov
add
pop
and
inc
call
std
lret
ret
jecxz
aaa
aas
mov
out
mov
repz
mov
aam
and
lds
enter
lret
mov
jl
pusha
stc
jae
adc
or
sarl
push
loope
add
inc
mov
bound
add
or
dec
inc
inc
bound
add
ljmp
test
clc
sub
js
add
jmp
rcrb
movsb
std
mov
jnp
loop
les
je
clc
jne
pop
lret
mov
lcall
ret
mov
add
jg
js
xor
pop
ja
arpl
popf
fildll
ss
sbb
mov
mov
push
cld
sub
incb
hlt
and
pop
inc
loopne
fidivl
mov
imul
and
cmc
xchg
sbb
sti
xchg
ret
mov
ljmp
mov
fidivrl
add
sbb
jl
bound
enter
js
pop
into
pop
push
hlt
sbb
xor
cmp
adc
out
mov
add
fdivrl
add
xchg
inc
fsubl
cmp
cwtl
cs
sub
lods
es
clc
adc
shl
add
sbb
orb
cmp
aam
call
mov
cs
sbb
cmc
imul
add
fdiv
scas
loopne
xor
in
aam
repnz
pop
jae
lret
ds
cs
pop
fstpl
add
xorb
jnp
icebp
and
imul
xchg
ret
stos
scas
and
inc
dec
xchg
mov
std
xlat
xchg
jecxz
test
nop
dec
adc
lret
push
inc
sbb
jns
sbb
xchg
je
shlb
in
and
icebp
out
xchg
jmp
sub
fidivl
inc
xlat
sub
fsubl
lret
nop
cmp
lods
jge
or
jp
fnstsw
sbb
push
push
mov
icebp
andb
inc
and
xor
mov
inc
mov
or
lahf
fld
xor
mov
add
ss
in
orl
iret
aas
mov
and
fsts
int3
pushf
or
repz
xchg
lahf
insl
cmp
and
enter
dec
mov
add
and
mov
movsl
repnz
fisubl
cltd
sbb
add
jle
push
pop
andl
out
pop
sti
loop
mov
pop
xchg
push
rorl
es
jns
add
mov
mov
inc
iret
leave
mov
out
add
dec
out
popa
mull
xor
scas
adc
aas
add
test
xor
outsl
into
in
lret
jnp
lods
or
cmp
bound
loop
cld
lds
push
xor
out
inc
xchg
cmp
jp
add
int3
hlt
test
aad
and
pop
repnz
je
mov
cwtl
jecxz
inc
dec
jl
jl
jo
mov
inc
xor
push
cmp
pusha
xor
in
cltd
cmp
mov
xor
imul
mov
or
or
aas
and
add
push
cmp
jl
jge
push
jb
mov
fimull
jae
pop
pop
popa
or
mov
dec
mov
xor
xchg
push
int3
aaa
add
inc
push
data16
pop
in
cmc
addr16
mov
scas
push
hlt
and
popa
mov
loopne
inc
jmp
jb
ds
xchg
mov
push
pop
sbb
js
ds
daa
jne
ret
divl
fbstp
mov
in
insl
pop
cmp
in
lock
lahf
arpl
es
imul
popa
xchg
or
stos
cmc
sbb
add
add
lret
adc
mov
test
xor
int3
or
movsb
cmpsb
aas
mov
lock
inc
inc
mov
jo
lods
lock
andb
sub
in
imul
cli
sub
bound
cmpsb
xchg
js
shll
lret
push
cmpsb
dec
stc
pop
aad
cmp
into
mov
es
mov
xchg
leave
jle
movsl
ret
push
mov
mov
xor
mov
aam
add
movsl
mull
pop
mov
xor
out
mov
sahf
adc
mov
clc
repnz
mov
out
out
out
xchg
sub
sub
int3
jo
sbb
and
mov
ret
cmp
daa
push
mov
sub
int
in
and
xchg
sbb
popa
sub
mulb
fistps
lds
pop
xchg
mov
cmp
cltd
inc
mov
dec
jbe
orb
dec
aas
lods
test
ret
mov
xchg
out
mov
and
imul
movsl
int3
enter
scas
in
dec
ret
pop
cs
movsl
adc
push
inc
sbb
out
std
std
and
xor
xchg
rcr
jle
pop
ret
jge
adc
cmp
fwait
arpl
and
dec
outsl
out
repnz
mov
shll
int3
loop
cmp
les
mov
ret
xlat
ja
push
nop
mov
mov
jbe
pop
in
push
stos
stos
in
xchg
and
mov
lds
push
out
mov
shlb
adc
xchg
sub
shr
dec
aam
repnz
in
inc
dec
xchg
mov
sbb
into
idivb
pop
inc
das
add
adc
imul
adc
and
xchg
sbb
test
push
out
data16
pop
das
aaa
loopne
adc
adc
mov
mov
jnp
movsl
loope
add
and
or
test
jo
xchg
in
fidivrs
mov
jnp
add
dec
mov
ljmp
xor
arpl
loopne
inc
push
outsl
mov
andl
add
pop
je
shl
xor
lods
pop
lea
ret
and
add
or
stc
or
cmpsl
lods
push
mov
cltd
sbb
shlb
roll
loop
sbb
lods
fwait
sub
out
inc
fwait
mov
fsubrs
arpl
mov
sbb
xor
sub
arpl
sub
lods
jo
inc
mov
add
pop
mov
cmp
loope
add
add
cli
sbb
jne
scas
ds
jnp
inc
stc
xchg
fwait
mull
add
pop
mov
push
testl
ja
ja
mov
call
add
lods
fstpl
fs
stos
pop
addr16
cs
mov
mov
xor
pop
ja
int
mov
iret
xchg
or
cltd
in
sbb
mov
cmpsb
cld
mov
andb
bound
test
out
mov
push
aam
outsb
insl
or
nop
dec
iret
cmp
sub
aaa
mov
xor
fidivs
test
mov
xchg
and
cs
sbb
int
mov
push
leave
dec
dec
pop
jo
jmp
into
fdivs
iret
int3
out
sbb
rclb
addr16
dec
loop
push
xor
lea
xor
mov
js
mov
in
xlat
sub
mov
mov
mov
xchg
mov
add
pop
xlat
jg
sbb
push
cmp
test
pop
and
std
inc
mov
pop
mov
push
into
push
jg
fisttpll
xor
or
cmpsl
in
mov
dec
leave
test
add
aam
enter
inc
vmovddup
mov
mov
pusha
stos
insl
outsb
test
out
adcb
xchg
lret
cmp
jmp
dec
rolb
mov
pop
cld
mov
pop
inc
jg
jge
ss
mov
mov
fwait
lcall
hlt
insb
cmp
cmc
pusha
jp
les
movsl
mov
xorb
push
add
in
jl
sbb
mov
movsb
or
mov
sbbl
pop
incb
mov
cmc
xor
adc
loopne
dec
repz
dec
lods
push
repnz
fimull
arpl
out
lock
fcmovne
out
gs
cltd
xor
jmp
les
mov
dec
fidivrl
xor
aam
imul
je
xor
push
aaa
enter
aam
daa
inc
jnp
and
xor
movb
shll
jmp
mov
mov
scas
pop
idiv
filds
test
and
sbb
cli
cmpsb
pop
stos
add
sbb
sarb
xchg
lret
push
mov
pop
lea
cs
jmp
inc
mov
mov
add
lods
lds
cwtl
add
add
jae
xchg
mov
or
dec
adc
xchg
cmpsl
loopne
add
mov
roll
repnz
and
xchg
in
aaa
mov
push
ret
inc
mov
fcoml
xchg
pop
sub
lcall
add
mov
jl
or
cmpsl
sub
test
xchg
push
inc
popf
sub
push
int3
loop
sub
pusha
jg
ret
jnp
leave
sbb
fisubrl
test
dec
pop
xchg
push
rcll
loop
icebp
mov
movsl
cmpl
movl
jl
insb
inc
sahf
jbe
mov
lret
cmp
int3
fdivr
sbb
aaa
icebp
dec
pop
dec
jp
ja
incb
ja
jp
jle
mov
dec
out
dec
push
jnp
cmp
daa
mov
lods
ds
insl
sub
or
jge
sub
xchg
cmp
xchg
fsubs
rcrb
in
cmp
mov
repz
jne
les
mov
pop
ja
fwait
addr16
inc
inc
mov
adcl
adc
or
flds
add
pop
icebp
add
loop
sbb
jle
jns
bound
fstpl
outsl
ja
cmp
mov
cmpsl
push
cs
in
jne
lret
push
test
call
test
imul
lret
out
adc
or
lods
pop
dec
xchg
shll
inc
icebp
mov
adc
jne
and
adc
sub
sbb
mov
dec
push
lret
push
or
mov
pop
mov
leave
adc
lahf
push
xchg
pop
dec
sub
fdivp
dec
gs
cmp
xor
cltd
sahf
je
mov
and
push
lret
xchg
pop
cmp
xor
lock
and
leave
or
dec
xchg
mov
out
je
arpl
or
les
xchg
shll
iret
sbb
sbb
adc
cs
and
ret
nop
xchg
xlat
mov
sbb
jle
lods
pop
push
js
lds
stc
cmp
mov
in
mov
mov
jecxz
js
ret
sbb
sub
or
xor
lahf
lahf
push
lock
mov
dec
fstps
xchg
and
inc
clc
out
psubq
pop
outsl
mov
scas
stos
sti
das
ret
outsl
test
out
addl
sub
dec
cmpl
cld
sub
sbb
stc
dec
test
or
dec
push
scas
in
insl
pmaddwd
out
pop
or
xchg
in
pusha
mov
xor
sbb
int3
add
inc
in
popa
adc
sbbb
test
fsubp
mov
dec
push
dec
aaa
inc
sub
add
cmp
mov
push
push
sahf
xchg
xlat
pop
sahf
push
in
adc
add
inc
or
mov
fdivrl
mov
mov
inc
leave
pop
outsb
ds
xchg
sub
out
sub
pop
push
testl
push
dec
push
xchg
shll
outsb
cwtl
mov
mov
rol
jle
mov
jmp
fwait
nop
dec
stc
adc
aad
dec
adc
fisubrs
js
ret
mov
add
subl
jl
xchg
repnz
cmp
add
gs
adc
inc
loope
cld
cmp
push
pop
fs
xchg
mov
fcomp
and
pop
movsb
mov
add
xchg
fs
jmp
inc
mov
mov
pushf
repz
mov
push
and
test
sbb
imul
pusha
scas
cli
mov
adc
adc
pop
imul
lahf
mov
jae
jg
iret
cmp
pop
inc
sti
xlat
pop
mov
dec
loope
shlb
aad
out
and
inc
sbb
xchg
aam
push
push
mov
lcall
xor
cmpsb
sbb
imull
sbb
mov
or
jbe
add
shrl
into
leave
push
jp
sbb
or
enter
sbb
outsl
mov
or
or
shl
cltd
jne
or
scas
inc
jp
mov
sahf
jae
xor
lahf
pop
mov
xor
loope
icebp
mov
in
test
call
add
push
pusha
and
mov
jl
xchg
and
xchg
push
push
xlat
lret
pop
cli
insl
fsubs
jns
das
mov
push
lea
xchg
repnz
cmp
dec
mov
lcall
js
pushf
call
cmpb
add
ljmp
lret
aas
mov
loope
and
imul
cmp
mov
mov
mov
adc
mov
cs
dec
bound
dec
sbb
add
cmp
mov
lods
and
mov
adc
lock
imull
addr16
pushl
adc
and
in
dec
mov
test
push
mov
sub
push
in
adc
mov
sbb
inc
sub
cltd
mov
dec
testl
and
mov
cmp
dec
orl
pop
sub
sub
jl
or
push
mov
insb
push
std
mov
roll
dec
dec
aaa
and
push
negl
add
sbb
imul
add
stos
in
inc
mov
in
in
fnstsw
cmpsl
int
addr16
jnp
mov
inc
inc
and
insb
push
push
aas
popa
adc
pusha
dec
pop
out
pop
add
add
idivl
push
roll
mov
push
ds
movsl
and
or
cli
xor
movsb
fdivs
mov
fcoml
push
lock
lahf
lods
into
sub
push
jns
dec
into
sbb
inc
pop
adc
pop
xchg
stos
bnd
out
adc
mov
mov
dec
mov
cmp
js
sti
jns
lret
jp
jmp
and
roll
dec
xor
fstpt
movsl
xchg
jae
lea
push
adc
jbe
add
mov
or
jns
into
dec
xchg
sbb
jae
scas
dec
mov
in
push
movsb
and
jmp
cmpsb
fucomi
mov
xchg
cltd
mov
mov
dec
add
sub
out
mov
add
mov
mov
ret
inc
lret
sub
mov
shlb
mov
cmp
sbb
cltd
fdivrs
jmp
lds
mov
subb
xor
lret
add
inc
xchg
sub
push
cmp
insb
cmp
aaa
cmp
xchg
mov
dec
mov
lret
mov
out
mov
in
pop
mov
mov
pop
push
pop
xchg
jnp
pop
rcr
lea
shrl
push
rcrl
push
adc
fwait
hlt
adc
mov
sbb
andb
rorb
aam
inc
inc
adc
add
xor
je
dec
aam
test
pop
mov
in
cs
nop
mov
sbb
aad
jl
lcall
dec
cli
cli
or
fidivrl
mov
aam
jb
outsl
cld
sbb
loope
insl
ljmp
xchg
fidivl
push
scas
sub
insl
pushf
push
stos
xchg
mov
std
clc
movb
enter
inc
rcr
pop
xor
mov
daa
xor
scas
imull
outsl
in
mov
cld
sarl
fwait
mov
mov
leave
call
xor
jb
xchg
dec
sub
mov
jb
add
test
cld
arpl
adc
test
movsb
dec
jbe
fwait
and
inc
ret
fwait
add
fxtract
add
xchg
push
adc
xchg
and
arpl
iret
sbb
cs
jne
add
pop
mov
adc
or
mov
pop
adc
mov
out
dec
mov
xor
cltd
repnz
sbb
aas
int
cli
and
mov
push
mov
add
jl
pop
icebp
scas
lcall
xor
stos
fldenv
gs
sbb
rcr
cmp
in
cmp
mov
sbb
incb
testb
push
in
cmp
fidivrl
sbb
in
xlat
add
push
or
inc
repz
out
and
mov
push
sbb
inc
les
addr16
mov
test
aam
outsl
data16
xchg
dec
fnstcw
sbbl
mov
popf
xchg
lahf
ds
and
pushf
sti
lahf
mov
pusha
or
cmp
mov
cld
sbbb
mull
mov
mov
pop
into
mov
pop
mov
jns
iret
adc
mov
jne
jp
test
adc
pop
ljmp
inc
xor
cli
sbb
ret
dec
push
sti
xchg
popf
mov
andl
mov
jns
mov
sub
pop
xchg
clc
lahf
test
fwait
pop
call
and
pop
pop
pop
sub
pop
stos
adcl
cmp
xchg
adc
addr16
call
adc
jb
idivl
sub
jmp
outsl
xchg
rclb
jns
aaa
pause
movsl
int3
cwtl
jbe
push
mov
enter
add
and
insb
adc
and
jmp
jnp
in
fs
cmp
dec
or
in
or
lods
cmp
dec
std
fs
js
test
lret
cmp
sub
cmc
lds
sbb
pop
adc
xlat
add
sub
inc
cwtl
cwtl
outsb
aad
adc
shrb
jecxz
jle
cmp
and
xor
cmp
loopne
xor
in
jno
mov
mov
and
andb
popa
mov
scas
data16
repnz
sub
fs
jbe
lods
addl
xchg
lret
xchg
and
xor
je
xor
cli
ficomps
adc
imul
loopne
mov
icebp
int
xchg
or
sub
and
add
test
fcomi
mov
bound
out
xchg
mov
jl
lahf
int
push
inc
in
lcall
lea
addr16
xor
shlb
jl
imul
cltd
in
sbb
mov
int
js
dec
movsb
subb
sbb
arpl
outsb
mov
dec
fwait
data16
lock
popa
out
add
push
xorl
stos
xchg
pop
repz
and
sti
or
aam
jmp
fists
mov
jno
inc
pop
test
sarl
fdiv
fsincos
lds
adc
mov
addr16
cmp
mov
xchg
pop
fsubrl
cli
arpl
sub
mov
adc
jns
or
fildl
dec
mov
mov
ljmp
lds
xchg
push
das
dec
xor
incl
cmpsb
sub
lret
into
fwait
add
jle
inc
les
adc
fstp
sub
push
cmp
mov
out
add
into
testl
mov
pushf
fs
outsb
mov
cmpsb
adc
adcb
mov
add
rclb
aad
adc
out
add
outsb
pop
add
bound
out
call
mov
fwait
ret
and
lret
push
iret
sub
xchg
or
in
aad
or
int
outsb
std
inc
inc
aaa
mov
push
and
xor
data16
sbbb
ds
leave
loopne
pop
stos
pop
fbld
fnsetpm(287
outsl
repz
popf
cmpsb
lret
mov
clc
js
and
roll
lds
iret
pop
lds
jl
add
and
sub
jno
adc
scas
adc
inc
icebp
stos
fidivl
or
mov
lea
outsl
add
pop
fimuls
mov
hlt
daa
pop
or
jae
rclb
xor
cs
mov
outsb
call
addr16
stos
orb
mov
mov
jne
sbb
xchg
aad
pop
in
xor
dec
add
inc
test
enter
mov
enter
test
test
fildll
xchg
xor
enter
test
pop
cs
sar
outsb
into
daa
clc
xor
mov
sarl
ret
mov
inc
das
mov
push
jne
mov
fcomps
shrb
push
inc
ret
test
scas
jnp
shll
xor
lret
adc
bound
xor
jmp
jl
mov
pop
mov
test
cmp
pop
xor
shrb
fists
mov
insl
xchg
cmp
cmc
bound
std
clc
jge
std
cs
test
testb
popa
idiv
into
add
mov
insl
adc
dec
or
lret
push
xor
mov
sbb
cmp
and
sti
es
mov
mov
rorb
xor
hlt
sub
fldenv
ret
push
leave
and
dec
fmull
call
pop
cld
or
jne
sub
lcall
inc
xchg
and
bound
int
sub
and
mov
push
int
pop
les
repnz
test
mov
cmp
push
in
pop
lock
lods
jl
mov
adc
mov
mov
jnp
repz
pusha
xor
or
jo
inc
aam
mov
testb
lods
xchg
cmp
cmp
mov
adc
mov
iret
insl
das
in
xor
add
jp
fucomi
aaa
add
push
mov
call
xchg
pop
dec
xlat
xchg
sub
pop
imul
sbb
dec
add
shr
xor
push
pop
stos
lahf
je
push
fs
mov
aam
push
adc
sub
cltd
push
jb
sbb
inc
pop
fs
sbb
loope
and
call
jge
repnz
mov
mov
mov
cltd
xor
fs
aas
mov
pop
mov
ds
lret
repnz
stos
loopne
xchg
aas
xchg
lods
pop
mov
stc
xchg
xlat
or
icebp
xchg
sub
xchg
jo
add
lock
xchg
cmp
push
sbb
mov
repnz
fs
push
insl
insl
in
mov
stos
ds
andl
mulb
cmpsb
repnz
mov
inc
test
or
movsl
fisttpl
sub
and
xor
lahf
pop
outsl
cld
jge
adc
mov
inc
push
adc
stc
add
mov
add
xor
fadds
outsb
out
std
push
loope
pop
outsl
lret
es
sub
sub
cmc
push
lcall
jmp
into
notl
mov
xor
pop
filds
rclb
jne
gs
cmp
in
cmova
jo
incl
repz
pop
bound
inc
jg
imull
imul
fnstsw
test
xchg
dec
dec
dec
lods
or
addl
fidivrl
sahf
xchg
cld
mov
push
jl
xchg
or
in
mov
dec
int3
aaa
adc
into
cli
lret
repnz
loopne
sbb
cmp
loop
push
rclb
mov
arpl
dec
xchg
stos
jge
fidivs
cli
imul
adc
jg
mov
add
cmpsl
mov
push
arpl
lea
push
out
xchg
pop
sahf
pushf
push
push
push
xchg
cwtl
loope
test
sbb
mov
push
std
inc
adc
repnz
js
hlt
or
scas
and
jecxz
test
cmp
or
adc
cmp
int
cmc
pop
repnz
mov
or
arpl
inc
out
adc
inc
pop
mov
xchg
fistpll
or
pushl
pop
test
inc
aas
cmp
xor
pop
scas
into
pop
push
bound
mov
mul
aam
movsl
or
pop
xor
xchg
repnz
imul
loop
imul
xchg
je
pmaddwd
and
adc
mov
outsb
mov
loopne
in
xchg
mov
jno
jbe
adc
or
mov
or
cmpsb
sub
sub
inc
xlat
rcrl
add
sbb
and
jae
mulb
pop
mov
loopne
sarb
sub
cmc
mov
push
xchg
mov
in
fisttpl
mov
lcall
sbb
adc
ret
sarl
and
call
repz
sahf
in
fistpll
insl
mov
cmp
je
jo
in
add
cltd
pop
aad
jno
rcrl
push
or
hlt
jmp
mov
xchg
xor
pop
mov
test
jb
mov
bound
or
mov
arpl
dec
cmp
sbb
jno
push
leave
icebp
les
inc
pop
scas
leave
dec
aad
jecxz
mov
je
shrb
pop
test
cld
gs
cmpb
cld
lock
mov
cmp
nop
outsb
int
pop
lahf
cmp
xchg
dec
jg
add
movsb
or
pop
pop
lea
pop
dec
sub
ljmp
enter
in
enter
insb
sub
mov
test
and
push
add
ja
insl
mov
addr16
push
xchg
xchg
inc
dec
pop
cmp
jnp
xorl
mov
dec
aad
and
push
pusha
adc
mov
les
sbb
outsb
inc
lret
push
shll
adcb
andb
add
xor
fcmove
aad
jl
fldt
adc
fists
inc
ljmp
js
jo
cmp
xchg
push
in
mov
mov
dec
push
out
bswap
push
and
cmpsb
arpl
jmp
sub
int3
add
or
insb
mov
cmpb
dec
imul
mov
inc
inc
outsl
mov
xchg
out
ud2
pop
ret
add
cmpsl
mov
sub
cmp
pop
lcall
pushf
xchg
pushf
fiadds
inc
jmp
movsl
mov
int
dec
int3
add
mov
xlat
mov
shrb
add
outsb
pop
add
push
pop
in
out
aam
test
or
notb
mov
data16
mov
adc
cltd
scas
add
mov
out
dec
push
test
gs
mov
xorl
stos
pop
push
mov
mov
dec
test
mov
test
repnz
in
xchg
rcl
xlat
sub
loopne
repnz
xorl
gs
aas
pop
aad
imul
lret
mov
adc
mov
lods
shll
daa
xor
aas
in
sub
push
ss
negb
push
scas
call
sub
dec
lea
mov
stos
stos
test
jg
dec
mov
ja
push
jg
sub
into
cmp
insl
stos
je
aas
rcrb
push
sbb
mov
lods
or
xlat
and
xchg
push
shl
adc
cwtl
arpl
ror
pop
out
into
lods
fnstenv
jle
mov
inc
cltd
stos
ljmp
pop
faddl
pop
insb
mov
ja
lahf
dec
cld
push
shrb
lods
clc
xor
popf
xchg
pop
xor
es
adc
add
xor
dec
mov
xor
pop
in
pop
mov
xlat
jae
pop
cmc
dec
xchg
and
shr
jmp
jno
test
inc
cmp
das
out
in
pop
adc
lds
inc
out
mov
xchg
es
outsb
mov
pop
clc
and
cmp
add
push
inc
popf
fistpll
sbb
inc
inc
or
in
jl
ret
jnp
fwait
pop
clc
ljmp
in
mov
sub
movsb
ja
insl
stc
adc
mov
inc
cmpsb
pushf
push
dec
mov
mov
fsubp
pop
pop
xchg
ss
test
pushf
push
stos
ja
scas
ret
leave
pop
out
push
js
into
ret
rorl
mov
add
and
iret
test
inc
mov
adc
xor
dec
outsb
inc
mov
or
test
lods
ja
sbb
xor
adc
outsl
mov
xchg
jmp
mov
pop
add
fmuls
push
fs
mov
bound
and
arpl
int3
aam
push
mov
test
mov
cmp
test
xchg
repnz
cli
aaa
dec
fs
jp
cmp
dec
mov
cmc
in
mov
jmp
xchg
push
mov
hlt
stc
mov
call
aas
and
and
ljmp
push
and
test
adc
pop
push
mov
cwtl
out
sarl
das
in
scas
out
popa
in
mov
xchg
lcall
push
popf
stos
loope
dec
jl
xor
dec
mul
je
mov
pop
mov
jnp
fistps
or
pop
lahf
jle
jl
es
or
fcoml
jmp
sub
xchg
aam
sub
mov
xor
cltd
dec
adc
push
rorb
cmp
adc
mov
imul
lret
lcall
es
sahf
lahf
sub
out
ss
inc
push
dec
shrl
dec
mov
in
aam
in
pop
add
xor
cmpsb
js
jmp
jb
mov
xchg
adc
repz
xor
push
and
pop
jmp
adc
sti
mov
les
adc
scas
cld
and
lret
fwait
insl
imul
mov
push
jecxz
jno
imul
test
call
insb
xor
sbb
in
je
daa
es
insb
xchg
mov
push
out
ss
cmp
sbbb
mov
sub
or
test
lods
push
popf
cli
xchg
iret
xlat
lods
or
mov
xchg
pop
ds
leave
mov
xchg
inc
insb
mov
sbb
mov
ds
outsb
in
inc
sbb
pop
ja
scas
idivl
repz
adc
or
or
mov
push
popf
fsubl
pop
xor
inc
loope
stc
mov
inc
xor
push
sbb
inc
mov
inc
repz
inc
or
sbb
test
adc
jmp
test
outsb
dec
or
hlt
xor
push
imul
aaa
push
add
and
ret
add
icebp
data16
dec
adc
mov
adc
dec
cmpsb
rol
orb
out
scas
iret
adc
cmp
lret
cmc
pop
movsb
out
and
repz
pop
lcall
pushf
addr16
jo
stos
xlat
xor
bound
ret
iret
lock
stos
jl
mov
push
and
cwtl
xchg
ds
add
sub
shlb
pop
cltd
sti
add
es
mov
popa
out
adc
add
icebp
sbb
popl
js
insb
inc
lods
push
pop
test
lret
add
mov
cli
lock
stos
sbb
rcrb
push
add
xchg
mov
adc
inc
es
jo
iret
and
mov
fmuls
push
popf
jne
hlt
jge
and
sti
mov
pop
add
loope
sub
loop
pop
ja
iret
in
mov
xor
scas
test
or
mov
push
shrl
ds
mov
pushw
sub
inc
ret
fsubrs
mov
fdiv
adc
orl
dec
ret
je
sbb
mov
cmp
adcb
out
dec
inc
insl
dec
inc
mov
arpl
sbb
pop
push
dec
movsb
hlt
mov
jp
dec
inc
orb
mov
imul
jg
fistl
cmp
int
in
push
inc
and
inc
fmul
mulb
pushf
jg
or
dec
bound
add
or
mov
mov
js
xchg
aad
sbb
xor
cmp
jp
pop
push
lahf
xor
or
sbb
fcmovnbe
out
call
rdpmc
daa
sti
out
int3
roll
push
shlb
mov
movsl
std
xchg
add
sarb
ret
das
sbb
mov
popf
and
pop
scas
jns
nop
sbb
lods
sbb
loopne
add
test
sub
outsl
sub
add
add
mov
sbb
inc
dec
mov
mov
mov
ret
or
pop
clc
mov
mov
mov
pop
pop
ret
push
push
ret
xchg
mov
adc
sti
inc
daa
outsl
push
pop
mov
mov
js
test
mov
and
xchg
xlat
movsl
sahf
mov
mov
aad
je
aas
jmp
sub
dec
repnz
push
pushl
inc
sar
aad
int3
dec
daa
stos
push
icebp
aad
ljmp
scas
xor
ret
ljmp
add
iret
shlb
jns
add
and
repz
movsb
adc
movsb
movsl
cmpsl
outsb
cmpsb
xlat
incb
add
add
push
fxch
pop
or
lods
shl
sub
ret
mov
shlb
int
jae
cs
mov
xchg
mov
mov
sub
imul
lock
xlat
lea
pop
call
sub
test
jecxz
dec
pop
jno
pusha
add
mov
dec
sbb
push
push
fwait
das
pop
mov
sarl
lahf
test
xor
dec
push
repnz
mov
xchg
lret
and
adc
sahf
insb
les
add
mov
rcrl
xor
lea
mov
add
mov
jge
movsb
into
push
pop
mov
lret
in
dec
and
dec
int3
mov
inc
sahf
mov
out
jle
mov
in
cmp
jnp
out
mov
faddl
or
jae
push
jmp
cmp
mov
mov
jmp
rol
nop
jl
or
dec
shr
lret
loop
adc
in
rolb
pop
add
data16
fdivl
adc
xchg
adc
xor
icebp
and
inc
movsl
mov
ljmp
je
xor
jecxz
enter
sbb
jp
ret
dec
xor
dec
insb
popf
xchg
mov
push
scas
mov
xor
loope
jae
mov
and
or
mov
cmc
or
push
out
int
push
add
rclb
in
pop
daa
xor
pusha
inc
push
pusha
ret
mov
fstps
mov
or
test
inc
inc
jo
xor
and
lea
xchg
mov
cmpsl
mov
lcall
fcom
leave
sub
mov
inc
test
decl
mov
xchg
aas
add
pop
xor
push
dec
cmpsb
xor
js
pop
dec
mov
lds
out
and
sbb
shlb
inc
out
sbb
lcall
inc
push
aas
push
sbb
xchg
lret
inc
adc
ja
mov
push
add
sbb
mov
xor
push
push
or
mov
jp
xor
icebp
sbb
jmp
gs
push
mov
mov
adc
stos
divl
out
xchg
pop
and
cmp
test
xchg
or
adc
and
mov
dec
mov
xchg
stc
mov
cmp
adc
mov
jmp
lock
out
push
test
push
mov
cli
adc
xchg
repnz
lods
pop
inc
lods
sub
jbe
inc
inc
imul
pop
lea
lahf
mov
jl
xchg
cmpl
and
lret
mov
pop
stos
arpl
jb
adc
cmpsb
dec
dec
push
loop
mov
testb
inc
test
or
ds
idivb
jecxz
ss
loopne
loopne
add
mov
aas
or
js
add
add
mov
jmp
aas
inc
mov
mov
ljmp
jbe
in
push
xor
es
shlb
pop
cs
stos
lods
gs
cmpsl
pop
xchg
adc
pusha
push
loop
ret
pop
addb
popa
dec
call
cld
adc
pop
inc
and
imul
call
and
jecxz
sub
adc
jne
push
xor
mov
xor
pop
loop
jp
rcrl
jne
add
cli
pop
test
push
dec
and
and
push
fmul
icebp
aad
into
xor
out
std
mov
mov
aam
and
lea
xchg
nop
cmc
push
movsb
xchg
clc
add
pop
lock
and
push
arpl
lds
mov
mov
pop
lock
fsubp
clc
add
push
add
jns
mov
or
push
out
out
push
xchg
mov
mov
cmp
add
lods
pop
pop
mov
and
gs
jmp
sub
push
sub
lcall
shrl
loope
aam
pop
add
cmp
cmc
int
test
popf
pop
and
push
adc
sbb
and
add
jmp
icebp
xchg
mov
arpl
lahf
out
mov
sbb
or
add
loopne
pop
cltd
xlat
hlt
ret
icebp
int
push
jnp
bound
aam
add
jecxz
movsb
sub
sbb
jo
mov
mov
stos
add
or
ja
xchg
or
hlt
cmpsl
pop
xchg
fucomip
shrb
stc
dec
mov
aam
out
loop
xor
jno
jmp
push
out
adc
adc
mov
imul
jne
dec
fsubs
push
adc
lret
and
adc
sbb
pusha
push
inc
insl
in
xchg
repz
pop
jl
cli
dec
inc
cmp
jecxz
lods
adc
cwtl
pop
pop
jge
jecxz
inc
insb
hlt
pop
leave
fisubrs
push
add
aam
mov
cwtl
sahf
notb
aad
and
out
pop
stos
fs
das
add
mov
loope
jbe
mov
lahf
clc
xor
mov
ror
setbe
adc
imul
rdmsr
or
es
addr16
outsb
cmp
mov
pop
pop
sub
test
in
into
or
lret
or
mov
loope
leave
sbb
inc
pop
and
test
lods
sbb
fcomps
cmp
vmovsldup
fs
inc
jle
sub
cli
jne
sbb
fdivs
mov
mov
call
xchg
xchg
inc
xlat
stos
ret
mov
icebp
or
ljmp
cltd
and
mov
jbe
push
sti
mov
dec
sbb
call
push
sub
das
lret
mov
stos
pop
fcmovu
loope
xchg
jle
adc
test
mov
and
push
sub
xchg
imul
fstl
cmp
jl
mov
popa
or
pop
sbb
cltd
gs
adc
pop
mov
sbb
push
pop
in
sub
xor
movsl
pop
test
scas
jb
repz
gs
loop
lds
mov
mov
lock
lret
insl
xchg
pop
cmp
dec
loop
or
in
leave
movsb
sub
xor
xorb
fmulp
push
jl
icebp
leave
xor
dec
dec
add
add
xor
icebp
add
xchg
jg
and
rcll
xor
jmp
leave
lret
jmp
mov
repnz
outsl
jo
fsts
lods
stc
dec
xor
scas
scas
mov
mov
scas
shll
jmp
aas
cs
mov
sti
shll
jge
sti
or
xor
cmp
shlb
and
imul
jmp
fwait
mov
and
icebp
sti
sbb
sbb
add
dec
jbe
ja
sub
lret
sbb
inc
push
add
add
add
adc
add
sub
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
mov
cmp
xchg
cmp
add
add
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
